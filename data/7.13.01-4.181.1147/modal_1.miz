:: Introduction to Modal Propositional Logic
::  by Alicia de la Cruz
::
:: Received September 30, 1991
:: Copyright (c) 1991-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, SUBSET_1, TREES_2, ZFMISC_1, FINSEQ_1, XBOOLE_0,
      TREES_1, FUNCT_1, RELAT_1, ORDINAL4, NAT_1, CARD_1, XXREAL_0, PARTFUN1,
      TARSKI, ORDINAL1, ARYTM_3, FINSET_1, FUNCOP_1, MARGREL1, MCART_1,
      QC_LANG1, XBOOLEAN, VALUED_1, ZF_LANG, MODAL_1, TREES_3;
 notations TARSKI, XBOOLE_0, ENUMSET1, ZFMISC_1,
      XTUPLE_0, SUBSET_1, CARD_1, NUMBERS,
      WELLORD2, ORDINAL1, NAT_1, DOMAIN_1, MCART_1, RELAT_1, FUNCT_1, RELSET_1,
      FINSEQ_1, FUNCOP_1, FINSEQ_2, FUNCT_2, FINSET_1, PARTFUN1, TREES_1,
      TREES_2, XXREAL_0, TREES_3;
 constructors PARTFUN1, WELLORD2, DOMAIN_1, XXREAL_0, XREAL_0, NAT_1, FINSEQ_2,
      TREES_2, RELSET_1, FUNCOP_1, TREES_3, XTUPLE_0;
 registrations XBOOLE_0, SUBSET_1, RELAT_1, FUNCT_1, ORDINAL1, FINSET_1,
      XXREAL_0, XREAL_0, FINSEQ_1, TREES_1, TREES_2, CARD_1, RELSET_1, TREES_3,
      XTUPLE_0;
 requirements NUMERALS, REAL, BOOLE, SUBSET, ARITHM;
 definitions TARSKI, XBOOLE_0, FUNCT_1, XTUPLE_0;
 theorems TARSKI, FUNCT_1, NAT_1, ENUMSET1, TREES_1, TREES_2, FUNCOP_1,
      MCART_1, DOMAIN_1, PARTFUN1, FINSEQ_1, FINSET_1, CARD_1, WELLORD2,
      CARD_2, ZFMISC_1, FINSEQ_2, RELAT_1, FUNCT_2, RELSET_1, XBOOLE_0,
      XBOOLE_1, XREAL_1, XXREAL_0, TREES_3, XTUPLE_0;
 schemes TREES_2, CLASSES1, NAT_1, FUNCT_2, XBOOLE_0;

begin
L1: (for R7 being (Element of ( NAT )) holds ( {} ) is_a_proper_prefix_of <* R7 *>)
proof
let R7 being (Element of ( NAT ));
L2: ( {} ) is_a_prefix_of <* R7 *> by XBOOLE_1:2;
thus L3: thesis by L2 , XBOOLE_0:def 8;
end;
definition
let C1 being Tree;
func Root C1 -> (Element of C1) equals 
( {} );
coherence by TREES_1:22;
end;
definition
let R14 being non  empty set;
let C2 being (DecoratedTree of R14);
func Root C2 -> (Element of R14) equals 
( C2 . ( Root ( dom C2 ) ) );
coherence;
end;
theorem
L6: (for R6 being (Element of ( NAT )) holds (for R7 being (Element of ( NAT )) holds (for R11 being (FinSequence of ( NAT )) holds (R6 <> R7 implies (not <* R6 *> , ( <* R7 *> ^ R11 ) are_c=-comparable )))))
proof
let R6 being (Element of ( NAT ));
let R7 being (Element of ( NAT ));
let R11 being (FinSequence of ( NAT ));
assume L7: R6 <> R7;
assume L8: <* R6 *> , ( <* R7 *> ^ R11 ) are_c=-comparable ;
per cases  by L8 , XBOOLE_0:def 9;
suppose L9: <* R6 *> is_a_prefix_of ( <* R7 *> ^ R11 );

L10: (ex B1 being FinSequence st ( <* R7 *> ^ R11 ) = ( <* R6 *> ^ B1 )) by L9 , TREES_1:1;
L11: R7 = ( ( <* R7 *> ^ R11 ) . 1 ) by FINSEQ_1:41
.= R6 by L10 , FINSEQ_1:41;
thus L12: contradiction by L11 , L7;
end;
suppose L13: ( <* R7 *> ^ R11 ) is_a_prefix_of <* R6 *>;

consider C3 being FinSequence such that L14: <* R6 *> = ( ( <* R7 *> ^ R11 ) ^ C3 ) by L13 , TREES_1:1;
L15: R6 = ( ( ( <* R7 *> ^ R11 ) ^ C3 ) . 1 ) by L14 , FINSEQ_1:40
.= ( ( <* R7 *> ^ ( R11 ^ C3 ) ) . 1 ) by FINSEQ_1:32
.= R7 by FINSEQ_1:41;
thus L16: contradiction by L15 , L7;
end;
end;
theorem
L18: (for R11 being (FinSequence of ( NAT )) holds (R11 <> ( {} ) implies (ex B2 being (FinSequence of ( NAT )) st (ex B3 being (Element of ( NAT )) st R11 = ( <* B3 *> ^ B2 ))))) by FINSEQ_2:130;
theorem
L19: (for R6 being (Element of ( NAT )) holds (for R7 being (Element of ( NAT )) holds (for R11 being (FinSequence of ( NAT )) holds (R6 <> R7 implies (not <* R6 *> is_a_proper_prefix_of ( <* R7 *> ^ R11 ))))))
proof
let R6 being (Element of ( NAT ));
let R7 being (Element of ( NAT ));
let R11 being (FinSequence of ( NAT ));
assume L20: R6 <> R7;
assume L21: <* R6 *> is_a_proper_prefix_of ( <* R7 *> ^ R11 );
L22: <* R6 *> is_a_prefix_of ( <* R7 *> ^ R11 ) by L21 , XBOOLE_0:def 8;
L23: (ex B4 being FinSequence st ( <* R7 *> ^ R11 ) = ( <* R6 *> ^ B4 )) by L22 , TREES_1:1;
L24: R7 = ( ( <* R7 *> ^ R11 ) . 1 ) by FINSEQ_1:41
.= R6 by L23 , FINSEQ_1:41;
thus L25: contradiction by L24 , L20;
end;
theorem
L26: (for R6 being (Element of ( NAT )) holds (for R7 being (Element of ( NAT )) holds (for R11 being (FinSequence of ( NAT )) holds (R6 <> R7 implies (not <* R6 *> is_a_prefix_of ( <* R7 *> ^ R11 )))))) by TREES_1:50;
theorem
L27: (for R6 being (Element of ( NAT )) holds (for R7 being (Element of ( NAT )) holds (not <* R6 *> is_a_proper_prefix_of <* R7 *>))) by TREES_1:52;
theorem
L28: ( elementary_tree 1 ) = { ( {} ) , <* ( 0 ) *> } by TREES_1:51;
theorem
L29: ( elementary_tree 2 ) = { ( {} ) , <* ( 0 ) *> , <* 1 *> } by TREES_1:53;
theorem
L30: (for B5 being Tree holds (for R6 being (Element of ( NAT )) holds (for R7 being (Element of ( NAT )) holds ((R6 <= R7 & <* R7 *> in B5) implies <* R6 *> in B5))))
proof
reconsider D1 = ( {} ) as (FinSequence of ( NAT )) by TREES_1:22;
let C4 being Tree;
let R6 being (Element of ( NAT ));
let R7 being (Element of ( NAT ));
assume that
L31: R6 <= R7
and
L32: <* R7 *> in C4;
L33: ( ( {} ) ^ <* R7 *> ) in C4 by L32 , FINSEQ_1:34;
L34: ( D1 ^ <* R6 *> ) in C4 by L33 , L31 , TREES_1:def 3;
thus L35: thesis by L34 , FINSEQ_1:34;
end;
theorem
L36: (for R10 being (FinSequence of ( NAT )) holds (for R11 being (FinSequence of ( NAT )) holds (for R12 being (FinSequence of ( NAT )) holds (( R10 ^ R12 ) is_a_proper_prefix_of ( R10 ^ R11 ) implies R12 is_a_proper_prefix_of R11)))) by TREES_1:49;
theorem
L37: (for R9 being (DecoratedTree of [: ( NAT ) , ( NAT ) :]) holds R9 in ( PFuncs (( ( NAT ) * ) , [: ( NAT ) , ( NAT ) :]) ))
proof
let R9 being (DecoratedTree of [: ( NAT ) , ( NAT ) :]);
L38: (( rng R9 ) c= [: ( NAT ) , ( NAT ) :] & ( dom R9 ) c= ( ( NAT ) * )) by TREES_1:def 3;
thus L39: thesis by L38 , PARTFUN1:def 3;
end;
theorem
L40: (for B6 , B7 , B8 being Tree holds (for B9 being (Element of B6) holds (( B6 with-replacement (B9 , B7) ) = ( B6 with-replacement (B9 , B8) ) implies B7 = B8)))
proof
let C5 , C6 , C7 being Tree;
let C8 being (Element of C5);
assume L41: ( C5 with-replacement (C8 , C6) ) = ( C5 with-replacement (C8 , C7) );
L42:
now
let R11 being (FinSequence of ( NAT ));
thus L43: (R11 in C6 implies R11 in C7)
proof
assume L44: R11 in C6;
per cases ;
suppose L45: R11 = ( {} );

thus L46: thesis by L45 , TREES_1:22;
end;
suppose L47: R11 <> ( {} );

L48: C8 is_a_proper_prefix_of ( C8 ^ R11 ) by L47 , TREES_1:10;
L49: ( C8 ^ R11 ) in ( C5 with-replacement (C8 , C7) ) by L41 , L44 , TREES_1:def 9;
L50: (ex R10 being (FinSequence of ( NAT )) st (R10 in C7 & ( C8 ^ R11 ) = ( C8 ^ R10 ))) by L49 , L48 , TREES_1:def 9;
thus L51: thesis by L50 , FINSEQ_1:33;
end;
end;

assume L53: R11 in C7;
per cases ;
suppose L54: R11 = ( {} );

thus L55: R11 in C6 by L54 , TREES_1:22;
end;
suppose L56: R11 <> ( {} );

L57: C8 is_a_proper_prefix_of ( C8 ^ R11 ) by L56 , TREES_1:10;
L58: ( C8 ^ R11 ) in ( C5 with-replacement (C8 , C6) ) by L41 , L53 , TREES_1:def 9;
L59: (ex R10 being (FinSequence of ( NAT )) st (R10 in C6 & ( C8 ^ R11 ) = ( C8 ^ R10 ))) by L58 , L57 , TREES_1:def 9;
thus L60: R11 in C6 by L59 , FINSEQ_1:33;
end;
end;
thus L62: thesis by L42 , TREES_2:def 1;
end;
theorem
L63: (for R14 being non  empty set holds (for B10 , B11 , B12 being (DecoratedTree of R14) holds (for B13 being (Element of ( dom B10 )) holds (( B10 with-replacement (B13 , B11) ) = ( B10 with-replacement (B13 , B12) ) implies B11 = B12))))
proof
let R14 being non  empty set;
let C9 , C10 , C11 being (DecoratedTree of R14);
let C12 being (Element of ( dom C9 ));
assume L64: ( C9 with-replacement (C12 , C10) ) = ( C9 with-replacement (C12 , C11) );
set D2 = ( C9 with-replacement (C12 , C11) );
set D3 = ( C9 with-replacement (C12 , C10) );
L65: ( dom D3 ) = ( ( dom C9 ) with-replacement (C12 , ( dom C10 )) ) by TREES_2:def 11;
L66: ( ( dom C9 ) with-replacement (C12 , ( dom C10 )) ) = ( ( dom C9 ) with-replacement (C12 , ( dom C11 )) ) by L65 , L64 , TREES_2:def 11;
L67: (for R11 being (FinSequence of ( NAT )) holds (R11 in ( dom C10 ) implies ( C10 . R11 ) = ( C11 . R11 )))
proof
let R11 being (FinSequence of ( NAT ));
L68: C12 is_a_prefix_of ( C12 ^ R11 ) by TREES_1:1;
assume L69: R11 in ( dom C10 );
L70: ( C12 ^ R11 ) in ( ( dom C9 ) with-replacement (C12 , ( dom C10 )) ) by L69 , TREES_1:def 9;
L71: (ex R13 being (FinSequence of ( NAT )) st (R13 in ( dom C10 ) & ( C12 ^ R11 ) = ( C12 ^ R13 ) & ( D3 . ( C12 ^ R11 ) ) = ( C10 . R13 ))) by L70 , L68 , TREES_2:def 11;
L72: ( C12 ^ R11 ) in ( ( dom C9 ) with-replacement (C12 , ( dom C11 )) ) by L66 , L69 , TREES_1:def 9;
consider R10 being (FinSequence of ( NAT )) such that L73: R10 in ( dom C11 ) and L74: ( C12 ^ R11 ) = ( C12 ^ R10 ) and L75: ( D2 . ( C12 ^ R11 ) ) = ( C11 . R10 ) by L72 , L68 , TREES_2:def 11;
L76: R11 = R10 by L74 , FINSEQ_1:33;
thus L77: thesis by L76 , L64 , L75 , L71 , FINSEQ_1:33;
end;
L78: ( dom D2 ) = ( ( dom C9 ) with-replacement (C12 , ( dom C11 )) ) by TREES_2:def 11;
thus L79: thesis by L78 , L64 , L65 , L67 , L40 , TREES_2:31;
end;
theorem
L80: (for B14 , B15 being Tree holds (for B16 being (FinSequence of ( NAT )) holds (B16 in B14 implies (for B17 being (Element of ( B14 with-replacement (B16 , B15) )) holds (for B18 being (Element of B14) holds ((B17 = B18 & B18 is_a_proper_prefix_of B16) implies ( succ B17 ) = ( succ B18 )))))))
proof
let C13 , C14 being Tree;
let C15 being (FinSequence of ( NAT ));
assume L81: C15 in C13;
set D4 = ( C13 with-replacement (C15 , C14) );
let C16 being (Element of D4);
let C17 being (Element of C13);
assume that
L82: C16 = C17
and
L83: C17 is_a_proper_prefix_of C15;
L84: C17 is_a_prefix_of C15 by L83 , XBOOLE_0:def 8;
consider C18 being FinSequence such that L85: C15 = ( C17 ^ C18 ) by L84 , TREES_1:1;
L86:
now
let C19 being Nat;
assume L87: C19 in ( dom C18 );
L88: ( ( len C17 ) + C19 ) in ( dom C15 ) by L87 , L85 , FINSEQ_1:28;
L89: ( C15 . ( ( len C17 ) + C19 ) ) in ( rng C15 ) by L88 , FUNCT_1:def 3;
L90: ( C15 . ( ( len C17 ) + C19 ) ) = ( C18 . C19 ) by L85 , L87 , FINSEQ_1:def 7;
thus L91: ( C18 . C19 ) in ( NAT ) by L90 , L89;
end;
reconsider D5 = C18 as (FinSequence of ( NAT )) by L86 , FINSEQ_2:12;
L92: D5 <> ( {} ) by L83 , L85 , FINSEQ_1:34;
L93:
now
let R1 being set;
thus L94: (R1 in ( succ C16 ) implies R1 in ( succ C17 ))
proof
assume L95: R1 in ( succ C16 );
L96: R1 in { ( C16 ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( C16 ^ <* R6 *> ) in D4 } by L95 , TREES_2:def 5;
consider R6 being (Element of ( NAT )) such that L97: R1 = ( C16 ^ <* R6 *> ) and L98: ( C16 ^ <* R6 *> ) in D4 by L96;
reconsider D6 = R1 as (FinSequence of ( NAT )) by L97;
L99:
now
per cases  by L81 , L97 , L98 , TREES_1:def 9;
suppose L100: (D6 in C13 & (not C15 is_a_proper_prefix_of D6));

L101: R1 in { ( C17 ^ <* R7 *> ) where R7 is (Element of ( NAT )) : ( C17 ^ <* R7 *> ) in C13 } by L100 , L82 , L97;
thus L102: thesis by L101 , TREES_2:def 5;
end;
suppose L103: (ex B19 being (FinSequence of ( NAT )) st (B19 in C14 & D6 = ( C15 ^ B19 )));

consider R11 being (FinSequence of ( NAT )) such that L104: R11 in C14 and L105: ( C16 ^ <* R6 *> ) = ( C15 ^ R11 ) by L103 , L97;
L106: ( C17 ^ <* R6 *> ) = ( C17 ^ ( D5 ^ R11 ) ) by L82 , L85 , L105 , FINSEQ_1:32;
L107: <* R6 *> = ( D5 ^ R11 ) by L106 , FINSEQ_1:33;
L108: R11 = ( {} )
proof
assume L109: (not thesis);
L110: ( len R11 ) > ( 0 ) by L109 , NAT_1:3;
L111: ( ( 0 ) + 1 ) <= ( len R11 ) by L110 , NAT_1:13;
L112: ( len D5 ) > ( 0 ) by L92 , NAT_1:3;
L113: ( ( 0 ) + 1 ) <= ( len D5 ) by L112 , NAT_1:13;
L114: ( 1 + 1 ) <= ( ( len D5 ) + ( len R11 ) ) by L113 , L111 , XREAL_1:7;
L115: 2 <= ( len <* R6 *> ) by L114 , L107 , FINSEQ_1:22;
L116: 2 <= 1 by L115 , FINSEQ_1:39;
thus L117: contradiction by L116;
end;
L118: <* R6 *> = D5 by L108 , L107 , FINSEQ_1:34;
L119: R1 in { ( C17 ^ <* R7 *> ) where R7 is (Element of ( NAT )) : ( C17 ^ <* R7 *> ) in C13 } by L118 , L81 , L82 , L85 , L97;
thus L120: thesis by L119 , TREES_2:def 5;
end;
end;
thus L122: thesis by L99;
end;

assume L123: R1 in ( succ C17 );
L124: R1 in { ( C17 ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( C17 ^ <* R6 *> ) in C13 } by L123 , TREES_2:def 5;
consider R6 being (Element of ( NAT )) such that L125: R1 = ( C17 ^ <* R6 *> ) and L126: ( C17 ^ <* R6 *> ) in C13 by L124;
L127:
now
assume L128: (not ( C16 ^ <* R6 *> ) in D4);
L129:
now
per cases  by L81 , L128 , TREES_1:def 9;
suppose L130: (not ( C16 ^ <* R6 *> ) in C13);

thus L131: contradiction by L130 , L82 , L126;
end;
suppose L132: C15 is_a_proper_prefix_of ( C16 ^ <* R6 *> );

L133: D5 is_a_proper_prefix_of <* R6 *> by L132 , L82 , L85 , TREES_1:49;
L134: D5 in ( ProperPrefixes <* R6 *> ) by L133 , TREES_1:12;
L135: D5 in { ( {} ) } by L134 , TREES_1:16;
thus L136: contradiction by L135 , L92 , TARSKI:def 1;
end;
end;
thus L138: contradiction by L129;
end;
L139: R1 in { ( C16 ^ <* R7 *> ) where R7 is (Element of ( NAT )) : ( C16 ^ <* R7 *> ) in D4 } by L127 , L82 , L125;
thus L140: R1 in ( succ C16 ) by L139 , TREES_2:def 5;
end;
thus L141: thesis by L93 , TARSKI:1;
end;
theorem
L142: (for B20 , B21 being Tree holds (for B22 being (FinSequence of ( NAT )) holds (B22 in B20 implies (for B23 being (Element of ( B20 with-replacement (B22 , B21) )) holds (for B24 being (Element of B20) holds ((B23 = B24 & (not B22 , B24 are_c=-comparable )) implies ( succ B23 ) = ( succ B24 )))))))
proof
let C20 , C21 being Tree;
let C22 being (FinSequence of ( NAT ));
assume L143: C22 in C20;
set D7 = ( C20 with-replacement (C22 , C21) );
let C23 being (Element of D7);
let C24 being (Element of C20);
assume that
L144: C23 = C24
and
L145: (not C22 , C24 are_c=-comparable );
L146: (not C22 is_a_prefix_of C24) by L145 , XBOOLE_0:def 9;
L147:
now
let R1 being set;
thus L148: (R1 in ( succ C23 ) implies R1 in ( succ C24 ))
proof
assume L149: R1 in ( succ C23 );
L150: R1 in { ( C23 ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( C23 ^ <* R6 *> ) in D7 } by L149 , TREES_2:def 5;
consider R6 being (Element of ( NAT )) such that L151: R1 = ( C23 ^ <* R6 *> ) and L152: ( C23 ^ <* R6 *> ) in D7 by L150;
reconsider D8 = R1 as (FinSequence of ( NAT )) by L151;
L153: ( C23 ^ <* R6 *> ) in C20
proof
assume L154: (not ( C23 ^ <* R6 *> ) in C20);
L155: (ex R12 being (FinSequence of ( NAT )) st (R12 in C21 & D8 = ( C22 ^ R12 ))) by L154 , L143 , L151 , L152 , TREES_1:def 9;
L156: C22 is_a_prefix_of ( C23 ^ <* R6 *> ) by L155 , L151 , TREES_1:1;
per cases  by L156 , XBOOLE_0:def 8;
suppose L157: C22 is_a_proper_prefix_of ( C23 ^ <* R6 *> );

thus L158: contradiction by L157 , L144 , L146 , TREES_1:9;
end;
suppose L159: C22 = ( C23 ^ <* R6 *> );

thus L160: contradiction by L159 , L143 , L154;
end;
end;
L162: R1 in { ( C24 ^ <* R7 *> ) where R7 is (Element of ( NAT )) : ( C24 ^ <* R7 *> ) in C20 } by L153 , L144 , L151;
thus L163: thesis by L162 , TREES_2:def 5;
end;

assume L164: R1 in ( succ C24 );
L165: R1 in { ( C24 ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( C24 ^ <* R6 *> ) in C20 } by L164 , TREES_2:def 5;
consider R6 being (Element of ( NAT )) such that L166: R1 = ( C24 ^ <* R6 *> ) and L167: ( C24 ^ <* R6 *> ) in C20 by L165;
L168: (not C22 is_a_proper_prefix_of ( C24 ^ <* R6 *> )) by L146 , TREES_1:9;
L169: ( C23 ^ <* R6 *> ) in D7 by L168 , L143 , L144 , L167 , TREES_1:def 9;
L170: R1 in { ( C23 ^ <* R7 *> ) where R7 is (Element of ( NAT )) : ( C23 ^ <* R7 *> ) in D7 } by L169 , L144 , L166;
thus L171: R1 in ( succ C23 ) by L170 , TREES_2:def 5;
end;
thus L172: thesis by L147 , TARSKI:1;
end;
theorem
L173: (for B25 , B26 being Tree holds (for B27 being (FinSequence of ( NAT )) holds (B27 in B25 implies (for B28 being (Element of ( B25 with-replacement (B27 , B26) )) holds (for B29 being (Element of B26) holds (B28 = ( B27 ^ B29 ) implies ( succ B28 ) , ( succ B29 ) are_equipotent )))))) by TREES_2:37;
theorem
L174: (for B30 being Tree holds (for B31 being (FinSequence of ( NAT )) holds (B31 in B30 implies (for B32 being (Element of B30) holds (for B33 being (Element of ( B30 | B31 )) holds (B32 = ( B31 ^ B33 ) implies ( succ B32 ) , ( succ B33 ) are_equipotent ))))))
proof
let C25 being Tree;
let C26 being (FinSequence of ( NAT ));
assume that
L175: C26 in C25;
set D9 = ( C25 | C26 );
let C27 being (Element of C25);
let C28 being (Element of ( C25 | C26 ));
assume that
L176: C27 = ( C26 ^ C28 );
L177: (for R6 being (Element of ( NAT )) holds (( C27 ^ <* R6 *> ) in C25 iff ( C28 ^ <* R6 *> ) in D9))
proof
let R6 being (Element of ( NAT ));
L178: ( C27 ^ <* R6 *> ) = ( C26 ^ ( C28 ^ <* R6 *> ) ) by L176 , FINSEQ_1:32;
thus L179: (( C27 ^ <* R6 *> ) in C25 implies ( C28 ^ <* R6 *> ) in D9) by L178 , L175 , TREES_1:def 6;
assume L180: ( C28 ^ <* R6 *> ) in D9;
thus L181: thesis by L180 , L175 , L178 , TREES_1:def 6;
end;
defpred S1[ set , set ] means (for R6 being (Element of ( NAT )) holds ($1 = ( C27 ^ <* R6 *> ) implies $2 = ( C28 ^ <* R6 *> )));
L182: (for R1 being set holds (R1 in ( succ C27 ) implies (ex R2 being set st S1[ R1 , R2 ])))
proof
let R1 being set;
assume L183: R1 in ( succ C27 );
L184: R1 in { ( C27 ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( C27 ^ <* R6 *> ) in C25 } by L183 , TREES_2:def 5;
consider R6 being (Element of ( NAT )) such that L185: R1 = ( C27 ^ <* R6 *> ) and L186: ( C27 ^ <* R6 *> ) in C25 by L184;
take ( C28 ^ <* R6 *> );
let R7 being (Element of ( NAT ));
assume L187: R1 = ( C27 ^ <* R7 *> );
thus L188: thesis by L187 , L185 , FINSEQ_1:33;
end;
consider C29 being Function such that L189: (( dom C29 ) = ( succ C27 ) & (for R1 being set holds (R1 in ( succ C27 ) implies S1[ R1 , ( C29 . R1 ) ]))) from CLASSES1:sch 1(L182);
L190:
now
let R1 being set;
thus L191: (R1 in ( rng C29 ) implies R1 in ( succ C28 ))
proof
assume L192: R1 in ( rng C29 );
consider R2 being set such that L193: R2 in ( dom C29 ) and L194: R1 = ( C29 . R2 ) by L192 , FUNCT_1:def 3;
L195: R2 in { ( C27 ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( C27 ^ <* R6 *> ) in C25 } by L189 , L193 , TREES_2:def 5;
consider R6 being (Element of ( NAT )) such that L196: R2 = ( C27 ^ <* R6 *> ) and L197: ( C27 ^ <* R6 *> ) in C25 by L195;
L198: ( C28 ^ <* R6 *> ) in D9 by L177 , L197;
L199: R1 = ( C28 ^ <* R6 *> ) by L189 , L193 , L194 , L196;
L200: R1 in { ( C28 ^ <* R7 *> ) where R7 is (Element of ( NAT )) : ( C28 ^ <* R7 *> ) in D9 } by L199 , L198;
thus L201: thesis by L200 , TREES_2:def 5;
end;

assume L202: R1 in ( succ C28 );
L203: R1 in { ( C28 ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( C28 ^ <* R6 *> ) in D9 } by L202 , TREES_2:def 5;
consider R6 being (Element of ( NAT )) such that L204: R1 = ( C28 ^ <* R6 *> ) and L205: ( C28 ^ <* R6 *> ) in D9 by L203;
L206: ( C27 ^ <* R6 *> ) in C25 by L177 , L205;
L207: ( C27 ^ <* R6 *> ) in { ( C27 ^ <* R7 *> ) where R7 is (Element of ( NAT )) : ( C27 ^ <* R7 *> ) in C25 } by L206;
L208: ( C27 ^ <* R6 *> ) in ( dom C29 ) by L207 , L189 , TREES_2:def 5;
L209: ( C29 . ( C27 ^ <* R6 *> ) ) = R1 by L208 , L189 , L204;
thus L210: R1 in ( rng C29 ) by L209 , L208 , FUNCT_1:def 3;
end;
L211: ( rng C29 ) = ( succ C28 ) by L190 , TARSKI:1;
L212:
now
let R3 being set;
let R4 being set;
assume that
L213: R3 in ( dom C29 )
and
L214: R4 in ( dom C29 )
and
L215: ( C29 . R3 ) = ( C29 . R4 );
L216: R4 in { ( C27 ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( C27 ^ <* R6 *> ) in C25 } by L189 , L214 , TREES_2:def 5;
consider R8 being (Element of ( NAT )) such that L217: R4 = ( C27 ^ <* R8 *> ) and L218: ( C27 ^ <* R8 *> ) in C25 by L216;
L219: R3 in { ( C27 ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( C27 ^ <* R6 *> ) in C25 } by L189 , L213 , TREES_2:def 5;
consider R7 being (Element of ( NAT )) such that L220: R3 = ( C27 ^ <* R7 *> ) and L221: ( C27 ^ <* R7 *> ) in C25 by L219;
L222: ( C28 ^ <* R7 *> ) = ( C29 . R3 ) by L189 , L213 , L220
.= ( C28 ^ <* R8 *> ) by L189 , L214 , L215 , L217;
thus L223: R3 = R4 by L222 , L220 , L217 , FINSEQ_1:33;
end;
L224: C29 is  one-to-one by L212 , FUNCT_1:def 4;
thus L225: thesis by L224 , L189 , L211 , WELLORD2:def 4;
end;
theorem
L226: (for B34 being  finite Tree holds (( branchdeg ( Root B34 ) ) = ( 0 ) implies (( card B34 ) = 1 & B34 = { ( {} ) })))
proof
let C30 being  finite Tree;
assume L227: ( branchdeg ( Root C30 ) ) = ( 0 );
L228: ( 0 ) = ( card ( succ ( Root C30 ) ) ) by L227 , TREES_2:def 12;
L229: ( succ ( Root C30 ) ) = ( {} ) by L228;
L230:
now
let R1 being set;
thus L231: (R1 in C30 implies R1 in { ( Root C30 ) })
proof
assume L232: R1 in C30;
reconsider D10 = R1 as (Element of C30) by L232;
assume L233: (not thesis);
L234: D10 <> ( Root C30 ) by L233 , TARSKI:def 1;
consider C31 being (FinSequence of ( NAT )), C32 being (Element of ( NAT )) such that L235: D10 = ( <* C32 *> ^ C31 ) by L234 , FINSEQ_2:130;
L236: <* C32 *> is_a_prefix_of D10 by L235 , TREES_1:1;
L237: <* C32 *> in C30 by L236 , TREES_1:20;
L238: ( ( {} ) ^ <* C32 *> ) in C30 by L237 , FINSEQ_1:34;
thus L239: contradiction by L238 , L229 , TREES_2:12;
end;

assume L240: R1 in { ( Root C30 ) };
reconsider D11 = R1 as (Element of C30) by L240;
L241: D11 in C30;
thus L242: R1 in C30 by L241;
end;
L243: C30 = { ( Root C30 ) } by L230 , TARSKI:1;
thus L244: thesis by L243 , CARD_2:42;
end;
theorem
L245: (for B35 being  finite Tree holds (( branchdeg ( Root B35 ) ) = 1 implies ( succ ( Root B35 ) ) = { <* ( 0 ) *> }))
proof
let C33 being  finite Tree;
assume L246: ( branchdeg ( Root C33 ) ) = 1;
L247: ( card ( succ ( Root C33 ) ) ) = 1 by L246 , TREES_2:def 12;
consider R1 being set such that L248: ( succ ( Root C33 ) ) = { R1 } by L247 , CARD_2:42;
L249: R1 in ( succ ( Root C33 ) ) by L248 , TARSKI:def 1;
reconsider D12 = R1 as (Element of C33) by L249;
L250: D12 in { ( ( Root C33 ) ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( ( Root C33 ) ^ <* R6 *> ) in C33 } by L249 , TREES_2:def 5;
consider R7 being (Element of ( NAT )) such that L251: D12 = ( ( Root C33 ) ^ <* R7 *> ) and L252: ( ( Root C33 ) ^ <* R7 *> ) in C33 by L250;
L253: D12 = <* R7 *> by L251 , FINSEQ_1:34;
L254:
now
L255: <* ( 0 ) *> = ( ( Root C33 ) ^ <* ( 0 ) *> ) by FINSEQ_1:34;
L256: <* R7 *> in C33 by L252 , FINSEQ_1:34;
L257: <* ( 0 ) *> in C33 by L256 , L30 , NAT_1:2;
L258: ( ( Root C33 ) ^ <* ( 0 ) *> ) in ( succ ( Root C33 ) ) by L257 , L255 , TREES_2:12;
L259: <* ( 0 ) *> = R1 by L258 , L248 , L255 , TARSKI:def 1;
assume L260: R7 <> ( 0 );
thus L261: contradiction by L260 , L253 , L259 , TREES_1:3;
end;
thus L262: thesis by L254 , L248 , L251 , FINSEQ_1:34;
end;
theorem
L263: (for B36 being  finite Tree holds (( branchdeg ( Root B36 ) ) = 2 implies ( succ ( Root B36 ) ) = { <* ( 0 ) *> , <* 1 *> }))
proof
let C34 being  finite Tree;
assume L264: ( branchdeg ( Root C34 ) ) = 2;
L265: ( card ( succ ( Root C34 ) ) ) = 2 by L264 , TREES_2:def 12;
consider R1 being set, R2 being set such that L266: R1 <> R2 and L267: ( succ ( Root C34 ) ) = { R1 , R2 } by L265 , CARD_2:60;
L268: R1 in ( succ ( Root C34 ) ) by L267 , TARSKI:def 2;
reconsider D13 = R1 as (Element of C34) by L268;
L269: D13 in { ( ( Root C34 ) ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( ( Root C34 ) ^ <* R6 *> ) in C34 } by L268 , TREES_2:def 5;
consider R7 being (Element of ( NAT )) such that L270: D13 = ( ( Root C34 ) ^ <* R7 *> ) and L271: ( ( Root C34 ) ^ <* R7 *> ) in C34 by L269;
L272: D13 = <* R7 *> by L270 , FINSEQ_1:34;
L273: R2 in ( succ ( Root C34 ) ) by L267 , TARSKI:def 2;
reconsider D14 = R2 as (Element of C34) by L273;
L274: D14 in { ( ( Root C34 ) ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( ( Root C34 ) ^ <* R6 *> ) in C34 } by L273 , TREES_2:def 5;
consider R8 being (Element of ( NAT )) such that L275: D14 = ( ( Root C34 ) ^ <* R8 *> ) and L276: ( ( Root C34 ) ^ <* R8 *> ) in C34 by L274;
L277: D14 = <* R8 *> by L275 , FINSEQ_1:34;
per cases ;
suppose L278: R7 = ( 0 );

L279:
now
L280: <* 1 *> = ( ( Root C34 ) ^ <* 1 *> ) by FINSEQ_1:34;
assume L281: R8 <> 1;
L282: 2 <= R8 by L281 , L266 , L272 , L277 , L278 , NAT_1:26;
L283: <* 1 *> in C34 by L282 , L277 , L30 , XXREAL_0:2;
L284: <* 1 *> in ( succ ( Root C34 ) ) by L283 , L280 , TREES_2:12;
L285: (<* 1 *> = <* ( 0 ) *> or <* 1 *> = <* R8 *>) by L284 , L267 , L272 , L277 , L278 , TARSKI:def 2;
thus L286: contradiction by L285 , L281 , TREES_1:3;
end;
thus L287: thesis by L279 , L267 , L270 , L277 , L278 , FINSEQ_1:34;
end;
suppose L288: R7 <> ( 0 );

L289: (<* ( 0 ) *> in C34 & <* ( 0 ) *> = ( ( Root C34 ) ^ <* ( 0 ) *> )) by L272 , L30 , FINSEQ_1:34 , NAT_1:2;
L290: <* ( 0 ) *> in ( succ ( Root C34 ) ) by L289 , TREES_2:12;
L291: (<* ( 0 ) *> = <* R7 *> or <* ( 0 ) *> = <* R8 *>) by L290 , L267 , L272 , L277 , TARSKI:def 2;
L292:
now
L293: <* 1 *> = ( ( Root C34 ) ^ <* 1 *> ) by FINSEQ_1:34;
assume L294: R7 <> 1;
L295: 2 <= R7 by L294 , L288 , NAT_1:26;
L296: <* 1 *> in C34 by L295 , L272 , L30 , XXREAL_0:2;
L297: <* 1 *> in ( succ ( Root C34 ) ) by L296 , L293 , TREES_2:12;
L298: (<* 1 *> = <* ( 0 ) *> or <* 1 *> = <* R7 *>) by L297 , L267 , L272 , L277 , L288 , L291 , TARSKI:def 2 , TREES_1:3;
thus L299: contradiction by L298 , L294 , TREES_1:3;
end;
thus L300: thesis by L292 , L267 , L270 , L277 , L291 , FINSEQ_1:34 , TREES_1:3;
end;
end;
theorem
L302: (for B37 being Tree holds (for B38 being (Element of B37) holds (B38 <> ( Root B37 ) implies (( B37 | B38 ) , { ( B38 ^ R15 ) where R15 is (Element of ( ( NAT ) * )) : ( B38 ^ R15 ) in B37 } are_equipotent  & (not ( Root B37 ) in { ( B38 ^ R16 ) where R16 is (Element of ( ( NAT ) * )) : ( B38 ^ R16 ) in B37 })))))
proof
let C35 being Tree;
let C36 being (Element of C35);
assume that
L303: C36 <> ( Root C35 );
set D15 = { ( C36 ^ R15 ) where R15 is (Element of ( ( NAT ) * )) : ( C36 ^ R15 ) in C35 };
thus L304: ( C35 | C36 ) , D15 are_equipotent 
proof
defpred S2[ set , set ] means (for R11 being (FinSequence of ( NAT )) holds ($1 = R11 implies $2 = ( C36 ^ R11 )));
L305: (for R1 being set holds (R1 in ( C35 | C36 ) implies (ex R2 being set st S2[ R1 , R2 ])))
proof
let R1 being set;
assume L306: R1 in ( C35 | C36 );
reconsider D16 = R1 as (FinSequence of ( NAT )) by L306 , TREES_1:19;
take ( C36 ^ D16 );
let R10 being (FinSequence of ( NAT ));
assume L307: R1 = R10;
thus L308: thesis by L307;
end;
L309: (ex B39 being Function st (( dom B39 ) = ( C35 | C36 ) & (for R1 being set holds (R1 in ( C35 | C36 ) implies S2[ R1 , ( B39 . R1 ) ])))) from CLASSES1:sch 1(L305);
consider C37 being Function such that L310: ( dom C37 ) = ( C35 | C36 ) and L311: (for R1 being set holds (R1 in ( C35 | C36 ) implies (for R11 being (FinSequence of ( NAT )) holds (R1 = R11 implies ( C37 . R1 ) = ( C36 ^ R11 ))))) by L309;
L312:
now
let R1 being set;
thus L313: (R1 in ( rng C37 ) implies R1 in D15)
proof
assume L314: R1 in ( rng C37 );
consider R3 being set such that L315: R3 in ( dom C37 ) and L316: R1 = ( C37 . R3 ) by L314 , FUNCT_1:def 3;
reconsider D17 = R3 as (FinSequence of ( NAT )) by L310 , L315 , TREES_1:19;
reconsider D18 = D17 as (Element of ( ( NAT ) * )) by FINSEQ_1:def 11;
L317: (( C36 ^ D18 ) in C35 & R1 = ( C36 ^ D18 )) by L310 , L311 , L315 , L316 , TREES_1:def 6;
thus L318: thesis by L317;
end;

assume L319: R1 in D15;
consider R17 being (Element of ( ( NAT ) * )) such that L320: R1 = ( C36 ^ R17 ) and L321: ( C36 ^ R17 ) in C35 by L319;
L322: R17 in ( C35 | C36 ) by L321 , TREES_1:def 6;
L323: R1 = ( C37 . R17 ) by L322 , L311 , L320;
L324: R17 in ( dom C37 ) by L310 , L321 , TREES_1:def 6;
thus L325: R1 in ( rng C37 ) by L324 , L323 , FUNCT_1:def 3;
end;
L326: ( rng C37 ) = D15 by L312 , TARSKI:1;
L327:
now
let R3 being set;
let R4 being set;
assume that
L328: R3 in ( dom C37 )
and
L329: R4 in ( dom C37 )
and
L330: ( C37 . R3 ) = ( C37 . R4 );
reconsider D19 = R3 , D20 = R4 as (FinSequence of ( NAT )) by L310 , L328 , L329 , TREES_1:19;
L331: ( C36 ^ D19 ) = ( C37 . R4 ) by L310 , L311 , L328 , L330
.= ( C36 ^ D20 ) by L310 , L311 , L329;
thus L332: R3 = R4 by L331 , FINSEQ_1:33;
end;
L333: C37 is  one-to-one by L327 , FUNCT_1:def 4;
thus L334: thesis by L333 , L310 , L326 , WELLORD2:def 4;
end;

assume L335: (not thesis);
L336: (ex R17 being (Element of ( ( NAT ) * )) st (( Root C35 ) = ( C36 ^ R17 ) & ( C36 ^ R17 ) in C35)) by L335;
thus L337: contradiction by L336 , L303;
end;
theorem
L338: (for B40 being  finite Tree holds (for B41 being (Element of B40) holds (B41 <> ( Root B40 ) implies ( card ( B40 | B41 ) ) < ( card B40 ))))
proof
let C38 being  finite Tree;
let C39 being (Element of C38);
assume that
L339: C39 <> ( Root C38 );
set D21 = { ( C39 ^ R15 ) where R15 is (Element of ( ( NAT ) * )) : ( C39 ^ R15 ) in C38 };
L340: ( C38 | C39 ) , D21 are_equipotent  by L339 , L302;
reconsider D22 = D21 as  finite set by L340 , CARD_1:38;
reconsider D23 = ( D22 \/ { ( Root C38 ) } ) as  finite set;
L341:
now
let R1 being set;
assume that
L342: R1 in D23;
L343:
now
per cases  by L342 , XBOOLE_0:def 3;
suppose L344: R1 in { ( C39 ^ R15 ) where R15 is (Element of ( ( NAT ) * )) : ( C39 ^ R15 ) in C38 };

L345: (ex R17 being (Element of ( ( NAT ) * )) st (R1 = ( C39 ^ R17 ) & ( C39 ^ R17 ) in C38)) by L344;
thus L346: R1 in C38 by L345;
end;
suppose L347: R1 in { ( Root C38 ) };

thus L348: R1 in C38 by L347;
end;
end;
thus L350: R1 in C38 by L343;
end;
L351: D23 c= C38 by L341 , TARSKI:def 3;
L352: ( card D23 ) = ( ( card D22 ) + 1 ) by L339 , L302 , CARD_2:41
.= ( ( card ( C38 | C39 ) ) + 1 ) by L340 , CARD_1:5;
L353: ( ( card ( C38 | C39 ) ) + 1 ) <= ( card C38 ) by L352 , L351 , NAT_1:43;
thus L354: thesis by L353 , NAT_1:13;
end;
theorem
L355: (for B42 being  finite Tree holds (for B43 being (Element of B42) holds (( succ ( Root B42 ) ) = { B43 } implies B42 = ( ( elementary_tree 1 ) with-replacement (<* ( 0 ) *> , ( B42 | B43 )) ))))
proof
let C40 being  finite Tree;
let C41 being (Element of C40);
set D24 = ( elementary_tree 1 );
L356: <* ( 0 ) *> in D24 by TARSKI:def 2 , TREES_1:51;
L357: ( {} ) in C40 by TREES_1:22;
assume L358: ( succ ( Root C40 ) ) = { C41 };
L359: ( card ( succ ( Root C40 ) ) ) = 1 by L358 , CARD_1:30;
L360: ( branchdeg ( Root C40 ) ) = 1 by L359 , TREES_2:def 12;
L361: { C41 } = { <* ( 0 ) *> } by L360 , L358 , L245;
L362: C41 in { <* ( 0 ) *> } by L361 , TARSKI:def 1;
L363: C41 = <* ( 0 ) *> by L362 , TARSKI:def 1;
L364: <* ( 0 ) *> in C40 by L363;
L365:
now
let R1 being set;
thus L366: (R1 in C40 implies R1 in ( D24 with-replacement (<* ( 0 ) *> , ( C40 | C41 )) ))
proof
assume L367: R1 in C40;
reconsider D25 = R1 as (Element of C40) by L367;
per cases ;
suppose L368: D25 = ( {} );

thus L369: thesis by L368 , TREES_1:22;
end;
suppose L370: D25 <> ( {} );

consider C42 being (FinSequence of ( NAT )), C43 being (Element of ( NAT )) such that L371: D25 = ( <* C43 *> ^ C42 ) by L370 , FINSEQ_2:130;
L372: <* C43 *> is_a_prefix_of D25 by L371 , TREES_1:1;
L373: <* C43 *> in C40 by L372 , TREES_1:20;
L374: <* C43 *> = ( ( Root C40 ) ^ <* C43 *> ) by FINSEQ_1:34;
L375: <* C43 *> in ( succ ( Root C40 ) ) by L374 , L373 , TREES_2:12;
L376: <* C43 *> = C41 by L375 , L358 , TARSKI:def 1;
L377: C42 in ( C40 | C41 ) by L376 , L371 , TREES_1:def 6;
L378: <* C43 *> = <* ( 0 ) *> by L358 , L363 , L375 , TARSKI:def 1;
thus L379: thesis by L378 , L356 , L371 , L377 , TREES_1:def 9;
end;
end;

assume L381: R1 in ( D24 with-replacement (<* ( 0 ) *> , ( C40 | C41 )) );
reconsider D26 = R1 as (Element of ( D24 with-replacement (<* ( 0 ) *> , ( C40 | C41 )) )) by L381;
per cases  by L356 , TREES_1:def 9;
suppose L382: (D26 in D24 & (not <* ( 0 ) *> is_a_proper_prefix_of D26));

thus L383: R1 in C40 by L382 , L364 , L357 , TARSKI:def 2 , TREES_1:51;
end;
suppose L384: (ex R11 being (FinSequence of ( NAT )) st (R11 in ( C40 | C41 ) & D26 = ( <* ( 0 ) *> ^ R11 )));

thus L385: R1 in C40 by L384 , L363 , TREES_1:def 6;
end;
end;
thus L387: thesis by L365 , TARSKI:1;
end;
L388: (for B44 being Function holds (( dom B44 ) is  finite implies B44 is  finite))
proof
let C44 being Function;
assume L389: ( dom C44 ) is  finite;
L390: ( rng C44 ) is  finite by L389 , FINSET_1:8;
L391: [: ( dom C44 ) , ( rng C44 ) :] is  finite by L390 , L389;
thus L392: thesis by L391 , FINSET_1:1 , RELAT_1:7;
end;
theorem
L393: (for R14 being non  empty set holds (for B45 being  finite (DecoratedTree of R14) holds (for B46 being (Element of ( dom B45 )) holds (( succ ( Root ( dom B45 ) ) ) = { B46 } implies B45 = ( ( ( elementary_tree 1 ) --> ( Root B45 ) ) with-replacement (<* ( 0 ) *> , ( B45 | B46 )) )))))
proof
let R14 being non  empty set;
set D27 = ( elementary_tree 1 );
let C45 being  finite (DecoratedTree of R14);
let C46 being (Element of ( dom C45 ));
set D28 = ( ( elementary_tree 1 ) --> ( Root C45 ) );
L394: ( dom D28 ) = D27 by FUNCOP_1:13;
L395: ( dom ( C45 | C46 ) ) = ( ( dom C45 ) | C46 ) by TREES_2:def 10;
L396: <* ( 0 ) *> in D27 by TARSKI:def 2 , TREES_1:51;
L397: <* ( 0 ) *> in ( dom D28 ) by L396 , FUNCOP_1:13;
assume L398: ( succ ( Root ( dom C45 ) ) ) = { C46 };
L399: ( card ( succ ( Root ( dom C45 ) ) ) ) = 1 by L398 , CARD_1:30;
L400: ( branchdeg ( Root ( dom C45 ) ) ) = 1 by L399 , TREES_2:def 12;
L401: { C46 } = { <* ( 0 ) *> } by L400 , L398 , L245;
L402: C46 in { <* ( 0 ) *> } by L401 , TARSKI:def 1;
L403: C46 = <* ( 0 ) *> by L402 , TARSKI:def 1;
L404: (for R11 being (FinSequence of ( NAT )) holds (R11 in ( dom ( D28 with-replacement (<* ( 0 ) *> , ( C45 | C46 )) ) ) implies ( ( D28 with-replacement (<* ( 0 ) *> , ( C45 | C46 )) ) . R11 ) = ( C45 . R11 )))
proof
let R11 being (FinSequence of ( NAT ));
assume L405: R11 in ( dom ( D28 with-replacement (<* ( 0 ) *> , ( C45 | C46 )) ) );
L406: ( dom ( D28 with-replacement (<* ( 0 ) *> , ( C45 | C46 )) ) ) = ( ( dom D28 ) with-replacement (<* ( 0 ) *> , ( dom ( C45 | C46 ) )) ) by L397 , TREES_2:def 11;
L407: (((not <* ( 0 ) *> is_a_prefix_of R11) & ( ( D28 with-replacement (<* ( 0 ) *> , ( C45 | C46 )) ) . R11 ) = ( D28 . R11 )) or (ex R10 being (FinSequence of ( NAT )) st (R10 in ( dom ( C45 | C46 ) ) & R11 = ( <* ( 0 ) *> ^ R10 ) & ( ( D28 with-replacement (<* ( 0 ) *> , ( C45 | C46 )) ) . R11 ) = ( ( C45 | C46 ) . R10 )))) by L406 , L397 , L405 , TREES_2:def 11;
L408:
now
per cases  by L397 , L406 , L405 , TREES_1:def 9;
suppose L409: (R11 in ( dom D28 ) & (not <* ( 0 ) *> is_a_proper_prefix_of R11));

L410:
now
per cases  by L409 , TARSKI:def 2 , TREES_1:51;
suppose L411: R11 = ( {} );

L412: R11 in D27 by L411 , TREES_1:22;
L413: ( D28 . R11 ) = ( C45 . R11 ) by L412 , L411 , FUNCOP_1:7;
L414: (not (ex R10 being (FinSequence of ( NAT )) st (R10 in ( dom ( C45 | C46 ) ) & R11 = ( <* ( 0 ) *> ^ R10 ) & ( ( D28 with-replacement (<* ( 0 ) *> , ( C45 | C46 )) ) . R11 ) = ( ( C45 | C46 ) . R10 )))) by L411;
thus L415: thesis by L414 , L397 , L406 , L405 , L413 , TREES_2:def 11;
end;
suppose L416: R11 = <* ( 0 ) *>;

thus L417: thesis by L416 , L403 , L395 , L407 , TREES_2:def 10;
end;
end;
thus L419: thesis by L410;
end;
suppose L420: (ex R10 being (FinSequence of ( NAT )) st (R10 in ( dom ( C45 | C46 ) ) & R11 = ( <* ( 0 ) *> ^ R10 )));

thus L421: thesis by L420 , L403 , L395 , L407 , TREES_1:1 , TREES_2:def 10;
end;
end;
thus L423: thesis by L408;
end;
L424: ( dom ( D28 with-replacement (<* ( 0 ) *> , ( C45 | C46 )) ) ) = ( D27 with-replacement (<* ( 0 ) *> , ( ( dom C45 ) | C46 )) ) by L396 , L394 , L395 , TREES_2:def 11;
L425: ( dom ( D28 with-replacement (<* ( 0 ) *> , ( C45 | C46 )) ) ) = ( dom C45 ) by L424 , L398 , L355;
thus L426: thesis by L425 , L404 , TREES_2:31;
end;
theorem
L427: (for B47 being Tree holds (for B48 , B49 being (Element of B47) holds ((B48 = <* ( 0 ) *> & B49 = <* 1 *> & ( succ ( Root B47 ) ) = { B48 , B49 }) implies B47 = ( ( ( elementary_tree 2 ) with-replacement (<* ( 0 ) *> , ( B47 | B48 )) ) with-replacement (<* 1 *> , ( B47 | B49 )) ))))
proof
set D29 = ( elementary_tree 2 );
let C47 being Tree;
let C48 , C49 being (Element of C47);
assume that
L428: C48 = <* ( 0 ) *>
and
L429: C49 = <* 1 *>
and
L430: ( succ ( Root C47 ) ) = { C48 , C49 };
set D30 = ( ( elementary_tree 2 ) with-replacement (<* ( 0 ) *> , ( C47 | C48 )) );
L431: <* ( 0 ) *> in D29 by ENUMSET1:def 1 , TREES_1:53;
L432:
now
let R11 being (FinSequence of ( NAT ));
thus L433: (R11 in C47 implies ((R11 in D30 & (not <* 1 *> is_a_proper_prefix_of R11)) or (ex R10 being (FinSequence of ( NAT )) st (R10 in ( C47 | C49 ) & R11 = ( <* 1 *> ^ R10 )))))
proof
assume L434: R11 in C47;
per cases ;
suppose L435: R11 = ( {} );

thus L436: thesis by L435 , TREES_1:12 , TREES_1:15 , TREES_1:22;
end;
suppose L437: R11 <> ( {} );

consider C50 being (FinSequence of ( NAT )), C51 being (Element of ( NAT )) such that L438: R11 = ( <* C51 *> ^ C50 ) by L437 , FINSEQ_2:130;
L439: <* C51 *> is_a_prefix_of R11 by L438 , TREES_1:1;
L440: <* C51 *> in C47 by L439 , L434 , TREES_1:20;
L441: <* C51 *> = ( ( Root C47 ) ^ <* C51 *> ) by FINSEQ_1:34;
L442: <* C51 *> in ( succ ( Root C47 ) ) by L441 , L440 , TREES_2:12;
L443:
now
per cases  by L428 , L429 , L430 , L442 , TARSKI:def 2;
suppose L444: <* C51 *> = <* ( 0 ) *>;

L445: C50 in ( C47 | C48 ) by L444 , L428 , L434 , L438 , TREES_1:def 6;
thus L446: thesis by L445 , L431 , L438 , L444 , L19 , TREES_1:def 9;
end;
suppose L447: <* C51 *> = <* 1 *>;

L448: C50 in ( C47 | C49 ) by L447 , L429 , L434 , L438 , TREES_1:def 6;
thus L449: thesis by L448 , L438 , L447;
end;
end;
thus L451: thesis by L443;
end;
end;

assume L453: ((R11 in D30 & (not <* 1 *> is_a_proper_prefix_of R11)) or (ex R10 being (FinSequence of ( NAT )) st (R10 in ( C47 | C49 ) & R11 = ( <* 1 *> ^ R10 ))));
L454:
now
per cases  by L453;
suppose L455: (R11 in D30 & (not <* 1 *> is_a_proper_prefix_of R11));

L456:
now
per cases  by L431 , L455 , TREES_1:def 9;
suppose L457: (R11 in D29 & (not <* ( 0 ) *> is_a_proper_prefix_of R11));

L458: (R11 = ( {} ) or R11 = <* ( 0 ) *> or R11 = <* 1 *>) by L457 , ENUMSET1:def 1 , TREES_1:53;
thus L459: R11 in C47 by L458 , L428 , L429 , L430;
end;
suppose L460: (ex R10 being (FinSequence of ( NAT )) st (R10 in ( C47 | C48 ) & R11 = ( <* ( 0 ) *> ^ R10 )));

thus L461: R11 in C47 by L460 , L428 , TREES_1:def 6;
end;
end;
thus L463: R11 in C47 by L456;
end;
suppose L464: (ex R10 being (FinSequence of ( NAT )) st (R10 in ( C47 | C49 ) & R11 = ( <* 1 *> ^ R10 )));

thus L465: R11 in C47 by L464 , L429 , TREES_1:def 6;
end;
end;
thus L467: R11 in C47 by L454;
end;
L468:
now
assume L469: <* ( 0 ) *> is_a_proper_prefix_of <* 1 *>;
L470: <* ( 0 ) *> is_a_prefix_of <* 1 *> by L469 , XBOOLE_0:def 8;
thus L471: contradiction by L470 , TREES_1:3;
end;
L472: <* 1 *> in D29 by ENUMSET1:def 1 , TREES_1:53;
L473: <* 1 *> in D30 by L472 , L431 , L468 , TREES_1:def 9;
thus L474: thesis by L473 , L432 , TREES_1:def 9;
end;
theorem
L475: (for R14 being non  empty set holds (for B50 being (DecoratedTree of R14) holds (for B51 , B52 being (Element of ( dom B50 )) holds ((B51 = <* ( 0 ) *> & B52 = <* 1 *> & ( succ ( Root ( dom B50 ) ) ) = { B51 , B52 }) implies B50 = ( ( ( ( elementary_tree 2 ) --> ( Root B50 ) ) with-replacement (<* ( 0 ) *> , ( B50 | B51 )) ) with-replacement (<* 1 *> , ( B50 | B52 )) )))))
proof
let R14 being non  empty set;
L476: (not <* ( 0 ) *> is_a_proper_prefix_of <* 1 *>) by TREES_1:52;
set D31 = ( elementary_tree 2 );
let C52 being (DecoratedTree of R14);
let C53 , C54 being (Element of ( dom C52 ));
assume that
L477: C53 = <* ( 0 ) *>
and
L478: C54 = <* 1 *>
and
L479: ( succ ( Root ( dom C52 ) ) ) = { C53 , C54 };
L480: ( dom ( C52 | C54 ) ) = ( ( dom C52 ) | C54 ) by TREES_2:def 10;
set D32 = ( ( ( elementary_tree 2 ) --> ( Root C52 ) ) with-replacement (<* ( 0 ) *> , ( C52 | C53 )) );
set D33 = ( ( elementary_tree 2 ) --> ( Root C52 ) );
L481: ( dom ( C52 | C53 ) ) = ( ( dom C52 ) | C53 ) by TREES_2:def 10;
set D34 = ( D32 with-replacement (<* 1 *> , ( C52 | C54 )) );
L482: <* ( 0 ) *> in D31 by ENUMSET1:def 1 , TREES_1:53;
L483: <* ( 0 ) *> in ( dom D33 ) by L482 , FUNCOP_1:13;
L484: ( dom D32 ) = ( ( dom D33 ) with-replacement (<* ( 0 ) *> , ( dom ( C52 | C53 ) )) ) by L483 , TREES_2:def 11;
L485: <* 1 *> in D31 by ENUMSET1:def 1 , TREES_1:53;
L486: <* 1 *> in ( dom D33 ) by L485 , FUNCOP_1:13;
L487: <* 1 *> in ( dom D32 ) by L486 , L483 , L484 , L476 , TREES_1:def 9;
L488: ( dom D34 ) = ( ( dom D32 ) with-replacement (<* 1 *> , ( dom ( C52 | C54 ) )) ) by L487 , TREES_2:def 11;
L489: ( dom D33 ) = D31 by FUNCOP_1:13;
L490: ( dom D32 ) = ( D31 with-replacement (<* ( 0 ) *> , ( ( dom C52 ) | C53 )) ) by L489 , L482 , L481 , TREES_2:def 11;
L491: (for R11 being (FinSequence of ( NAT )) holds (R11 in ( dom D34 ) implies ( D34 . R11 ) = ( C52 . R11 )))
proof
let R11 being (FinSequence of ( NAT ));
assume L492: R11 in ( dom D34 );
L493: (((not <* 1 *> is_a_prefix_of R11) & ( D34 . R11 ) = ( D32 . R11 )) or (ex R13 being (FinSequence of ( NAT )) st (R13 in ( dom ( C52 | C54 ) ) & R11 = ( <* 1 *> ^ R13 ) & ( D34 . R11 ) = ( ( C52 | C54 ) . R13 )))) by L492 , L487 , L488 , TREES_2:def 11;
L494:
now
per cases  by L487 , L488 , L492 , TREES_1:def 9;
suppose L495: (R11 in ( dom D32 ) & (not <* 1 *> is_a_proper_prefix_of R11));

L496: (((not <* ( 0 ) *> is_a_prefix_of R11) & ( D32 . R11 ) = ( D33 . R11 )) or (ex R13 being (FinSequence of ( NAT )) st (R13 in ( dom ( C52 | C53 ) ) & R11 = ( <* ( 0 ) *> ^ R13 ) & ( D32 . R11 ) = ( ( C52 | C53 ) . R13 )))) by L495 , L483 , L484 , TREES_2:def 11;
L497:
now
per cases  by L482 , L490 , L495 , TREES_1:def 9;
suppose L498: (R11 in D31 & (not <* ( 0 ) *> is_a_proper_prefix_of R11));

L499:
now
per cases  by L498 , ENUMSET1:def 1 , TREES_1:53;
suppose L500: R11 = ( {} );

L501: ((not (ex R13 being (FinSequence of ( NAT )) st (R13 in ( dom ( C52 | C54 ) ) & R11 = ( <* 1 *> ^ R13 ) & ( D34 . R11 ) = ( ( C52 | C54 ) . R13 )))) & ( D33 . R11 ) = ( C52 . R11 )) by L500 , L498 , FUNCOP_1:7;
thus L502: thesis by L501 , L487 , L488 , L492 , L496 , L500 , TREES_2:def 11;
end;
suppose L503: R11 = <* ( 0 ) *>;

thus L504: thesis by L503 , L477 , L478 , L481 , L480 , L493 , L496 , TREES_2:def 10;
end;
suppose L505: R11 = <* 1 *>;

thus L506: thesis by L505 , L478 , L480 , L493 , TREES_2:def 10;
end;
end;
thus L508: thesis by L499;
end;
suppose L509: (ex R10 being (FinSequence of ( NAT )) st (R10 in ( ( dom C52 ) | C53 ) & R11 = ( <* ( 0 ) *> ^ R10 )));

thus L510: thesis by L509 , L477 , L478 , L481 , L480 , L493 , L496 , TREES_1:1 , TREES_2:def 10;
end;
end;
thus L512: thesis by L497;
end;
suppose L513: (ex R10 being (FinSequence of ( NAT )) st (R10 in ( dom ( C52 | C54 ) ) & R11 = ( <* 1 *> ^ R10 )));

thus L514: thesis by L513 , L478 , L480 , L493 , TREES_1:1 , TREES_2:def 10;
end;
end;
thus L516: thesis by L494;
end;
L517: ( dom C52 ) = ( dom D34 ) by L477 , L478 , L479 , L489 , L481 , L480 , L484 , L488 , L427;
thus L518: thesis by L517 , L491 , TREES_2:31;
end;
definition
func MP-variables -> set equals 
[: { 3 } , ( NAT ) :];
coherence;
end;
registration
cluster ( MP-variables ) -> non  empty;
coherence;
end;
definition
mode MP-variable
 is (Element of ( MP-variables ));
end;
definition
func MP-conectives -> set equals 
[: { ( 0 ) , 1 , 2 } , ( NAT ) :];
coherence;
end;
registration
cluster ( MP-conectives ) -> non  empty;
coherence;
end;
definition
mode MP-conective
 is (Element of ( MP-conectives ));
end;
theorem
L525: ( MP-conectives ) misses ( MP-variables )
proof
assume L526: (not thesis);
consider C55 being set such that L527: C55 in [: { ( 0 ) , 1 , 2 } , ( NAT ) :] and L528: C55 in [: { 3 } , ( NAT ) :] by L526 , XBOOLE_0:3;
consider R3 being set, R4 being set such that L529: R3 in { ( 0 ) , 1 , 2 } and L530: R4 in ( NAT ) and L531: C55 = [ R3 , R4 ] by L527 , ZFMISC_1:def 2;
L532: R3 = 3 by L528 , L531 , ZFMISC_1:105;
thus L533: contradiction by L532 , L529 , ENUMSET1:def 1;
end;
definition
let C56 being  finite Tree;
let C57 being (Element of C56);
redefine func branchdeg C57 -> (Element of ( NAT ));

coherence
proof
L534: ( branchdeg C57 ) = ( card ( succ C57 ) ) by TREES_2:def 12;
thus L535: thesis by L534;
end;
end;
definition
func MP-WFF -> (DTree-set of [: ( NAT ) , ( NAT ) :]) means 
:L537: ((for B53 being (DecoratedTree of [: ( NAT ) , ( NAT ) :]) holds (B53 in it implies B53 is  finite)) & (for B54 being  finite (DecoratedTree of [: ( NAT ) , ( NAT ) :]) holds (B54 in it iff (for B55 being (Element of ( dom B54 )) holds (( branchdeg B55 ) <= 2 & (( branchdeg B55 ) = ( 0 ) implies (( B54 . B55 ) = [ ( 0 ) , ( 0 ) ] or (ex R8 being (Element of ( NAT )) st ( B54 . B55 ) = [ 3 , R8 ]))) & (( branchdeg B55 ) = 1 implies (( B54 . B55 ) = [ 1 , ( 0 ) ] or ( B54 . B55 ) = [ 1 , 1 ])) & (( branchdeg B55 ) = 2 implies ( B54 . B55 ) = [ 2 , ( 0 ) ]))))));
existence
proof
deffunc H1(set) = [ ( 0 ) , ( 0 ) ];
set D35 = ( elementary_tree ( 0 ) );
set D36 = [: ( NAT ) , ( NAT ) :];
defpred S3[ set ] means ($1 is  finite  finite  finite  finite (DecoratedTree of D36) & (for B56 being  finite (DecoratedTree of D36) holds (B56 = $1 implies (( dom B56 ) is  finite & (for B57 being (Element of ( dom B56 )) holds (( branchdeg B57 ) <= 2 & (( branchdeg B57 ) = ( 0 ) implies (( B56 . B57 ) = [ ( 0 ) , ( 0 ) ] or (ex R8 being (Element of ( NAT )) st ( B56 . B57 ) = [ 3 , R8 ]))) & (( branchdeg B57 ) = 1 implies (( B56 . B57 ) = [ 1 , ( 0 ) ] or ( B56 . B57 ) = [ 1 , 1 ])) & (( branchdeg B57 ) = 2 implies ( B56 . B57 ) = [ 2 , ( 0 ) ])))))));
consider C58 being set such that L538: (for R1 being set holds (R1 in C58 iff (R1 in ( PFuncs (( ( NAT ) * ) , D36) ) & S3[ R1 ]))) from XBOOLE_0:sch 1;
L539: (for B58 being  finite (DecoratedTree of D36) holds (B58 in C58 iff (( dom B58 ) is  finite & (for B59 being (Element of ( dom B58 )) holds (( branchdeg B59 ) <= 2 & (( branchdeg B59 ) = ( 0 ) implies (( B58 . B59 ) = [ ( 0 ) , ( 0 ) ] or (ex R8 being (Element of ( NAT )) st ( B58 . B59 ) = [ 3 , R8 ]))) & (( branchdeg B59 ) = 1 implies (( B58 . B59 ) = [ 1 , ( 0 ) ] or ( B58 . B59 ) = [ 1 , 1 ])) & (( branchdeg B59 ) = 2 implies ( B58 . B59 ) = [ 2 , ( 0 ) ]))))))
proof
let C59 being  finite (DecoratedTree of D36);
thus L540: (C59 in C58 implies (( dom C59 ) is  finite & (for B60 being (Element of ( dom C59 )) holds (( branchdeg B60 ) <= 2 & (( branchdeg B60 ) = ( 0 ) implies (( C59 . B60 ) = [ ( 0 ) , ( 0 ) ] or (ex R8 being (Element of ( NAT )) st ( C59 . B60 ) = [ 3 , R8 ]))) & (( branchdeg B60 ) = 1 implies (( C59 . B60 ) = [ 1 , ( 0 ) ] or ( C59 . B60 ) = [ 1 , 1 ])) & (( branchdeg B60 ) = 2 implies ( C59 . B60 ) = [ 2 , ( 0 ) ]))))) by L538;
assume that
L541: ( dom C59 ) is  finite
and
L542: (for B61 being (Element of ( dom C59 )) holds (( branchdeg B61 ) <= 2 & (( branchdeg B61 ) = ( 0 ) implies (( C59 . B61 ) = [ ( 0 ) , ( 0 ) ] or (ex R8 being (Element of ( NAT )) st ( C59 . B61 ) = [ 3 , R8 ]))) & (( branchdeg B61 ) = 1 implies (( C59 . B61 ) = [ 1 , ( 0 ) ] or ( C59 . B61 ) = [ 1 , 1 ])) & (( branchdeg B61 ) = 2 implies ( C59 . B61 ) = [ 2 , ( 0 ) ])));
L543: C59 in ( PFuncs (( ( NAT ) * ) , D36) ) by L37;
L544: (for B62 being  finite (DecoratedTree of D36) holds (B62 = C59 implies (( dom B62 ) is  finite & (for B63 being (Element of ( dom B62 )) holds (( branchdeg B63 ) <= 2 & (( branchdeg B63 ) = ( 0 ) implies (( B62 . B63 ) = [ ( 0 ) , ( 0 ) ] or (ex R8 being (Element of ( NAT )) st ( B62 . B63 ) = [ 3 , R8 ]))) & (( branchdeg B63 ) = 1 implies (( B62 . B63 ) = [ 1 , ( 0 ) ] or ( B62 . B63 ) = [ 1 , 1 ])) & (( branchdeg B63 ) = 2 implies ( B62 . B63 ) = [ 2 , ( 0 ) ])))))) by L542;
thus L545: thesis by L544 , L538 , L543;
end;
consider C60 being DecoratedTree such that L546: (( dom C60 ) = D35 & (for B64 being (FinSequence of ( NAT )) holds (B64 in D35 implies ( C60 . B64 ) = H1(B64)))) from TREES_2:sch 7;
L547: ( rng C60 ) c= D36
proof
let R1 being set;
assume L548: R1 in ( rng C60 );
consider C61 being set such that L549: C61 in ( dom C60 ) and L550: R1 = ( C60 . C61 ) by L548 , FUNCT_1:def 3;
L551: C61 = ( <*> ( NAT ) ) by L546 , L549 , TARSKI:def 1 , TREES_1:29;
reconsider D37 = C61 as (FinSequence of ( NAT )) by L551;
L552: ( C60 . D37 ) = [ ( 0 ) , ( 0 ) ] by L546 , L549;
thus L553: thesis by L552 , L550;
end;
reconsider D38 = C60 as  finite (DecoratedTree of D36) by L547 , L546 , L388 , RELAT_1:def 19;
L554: (for B65 being  finite (DecoratedTree of D36) holds (B65 = D38 implies (( dom B65 ) is  finite & (for B66 being (Element of ( dom B65 )) holds (( branchdeg B66 ) <= 2 & (( branchdeg B66 ) = ( 0 ) implies (( B65 . B66 ) = [ ( 0 ) , ( 0 ) ] or (ex R8 being (Element of ( NAT )) st ( B65 . B66 ) = [ 3 , R8 ]))) & (( branchdeg B66 ) = 1 implies (( B65 . B66 ) = [ 1 , ( 0 ) ] or ( B65 . B66 ) = [ 1 , 1 ])) & (( branchdeg B66 ) = 2 implies ( B65 . B66 ) = [ 2 , ( 0 ) ]))))))
proof
let C62 being  finite (DecoratedTree of D36);
assume L555: C62 = D38;
thus L556: ( dom C62 ) is  finite;
let C63 being (Element of ( dom C62 ));
L557: ( succ C63 ) = ( {} )
proof
set D39 = the (Element of ( succ C63 ));
assume L558: (not thesis);
L559: D39 in ( succ C63 ) by L558;
L560: ( succ C63 ) = { ( C63 ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( C63 ^ <* R6 *> ) in ( dom C62 ) } by TREES_2:def 5;
L561: (ex R6 being (Element of ( NAT )) st (D39 = ( C63 ^ <* R6 *> ) & ( C63 ^ <* R6 *> ) in ( dom C62 ))) by L560 , L559;
thus L562: contradiction by L561 , L546 , L555 , TARSKI:def 1 , TREES_1:29;
end;
thus L563: ( branchdeg C63 ) <= 2 by L557 , CARD_1:27 , TREES_2:def 12;
thus L564: thesis by L546 , L555 , L557 , CARD_1:27 , TREES_2:def 12;
end;
L565: D38 in ( PFuncs (( ( NAT ) * ) , D36) ) by L37;
reconsider D40 = C58 as non  empty set by L565 , L538 , L554;
L566: (for R1 being set holds (R1 in D40 implies R1 is (DecoratedTree of D36))) by L538;
reconsider D41 = D40 as (DTree-set of D36) by L566 , TREES_3:def 6;
take D41;
thus L567: thesis by L538 , L539;
end;
uniqueness
proof
let C64 , C65 being (DTree-set of [: ( NAT ) , ( NAT ) :]);
assume that
L568: (for B67 being (DecoratedTree of [: ( NAT ) , ( NAT ) :]) holds (B67 in C64 implies B67 is  finite))
and
L569: (for B68 being  finite (DecoratedTree of [: ( NAT ) , ( NAT ) :]) holds (B68 in C64 iff (for B69 being (Element of ( dom B68 )) holds (( branchdeg B69 ) <= 2 & (( branchdeg B69 ) = ( 0 ) implies (( B68 . B69 ) = [ ( 0 ) , ( 0 ) ] or (ex R8 being (Element of ( NAT )) st ( B68 . B69 ) = [ 3 , R8 ]))) & (( branchdeg B69 ) = 1 implies (( B68 . B69 ) = [ 1 , ( 0 ) ] or ( B68 . B69 ) = [ 1 , 1 ])) & (( branchdeg B69 ) = 2 implies ( B68 . B69 ) = [ 2 , ( 0 ) ])))))
and
L570: (for B70 being (DecoratedTree of [: ( NAT ) , ( NAT ) :]) holds (B70 in C65 implies B70 is  finite))
and
L571: (for B71 being  finite (DecoratedTree of [: ( NAT ) , ( NAT ) :]) holds (B71 in C65 iff (for B72 being (Element of ( dom B71 )) holds (( branchdeg B72 ) <= 2 & (( branchdeg B72 ) = ( 0 ) implies (( B71 . B72 ) = [ ( 0 ) , ( 0 ) ] or (ex R8 being (Element of ( NAT )) st ( B71 . B72 ) = [ 3 , R8 ]))) & (( branchdeg B72 ) = 1 implies (( B71 . B72 ) = [ 1 , ( 0 ) ] or ( B71 . B72 ) = [ 1 , 1 ])) & (( branchdeg B72 ) = 2 implies ( B71 . B72 ) = [ 2 , ( 0 ) ])))));
thus L572: C64 c= C65
proof
let R1 being set;
assume L573: R1 in C64;
reconsider D42 = R1 as  finite (DecoratedTree of [: ( NAT ) , ( NAT ) :]) by L568 , L573;
L574: (for B73 being (Element of ( dom D42 )) holds (( branchdeg B73 ) <= 2 & (( branchdeg B73 ) = ( 0 ) implies (( D42 . B73 ) = [ ( 0 ) , ( 0 ) ] or (ex R8 being (Element of ( NAT )) st ( D42 . B73 ) = [ 3 , R8 ]))) & (( branchdeg B73 ) = 1 implies (( D42 . B73 ) = [ 1 , ( 0 ) ] or ( D42 . B73 ) = [ 1 , 1 ])) & (( branchdeg B73 ) = 2 implies ( D42 . B73 ) = [ 2 , ( 0 ) ]))) by L569 , L573;
thus L575: thesis by L574 , L571;
end;

let R1 being set;
assume L576: R1 in C65;
reconsider D43 = R1 as  finite (DecoratedTree of [: ( NAT ) , ( NAT ) :]) by L570 , L576;
L577: (for B74 being (Element of ( dom D43 )) holds (( branchdeg B74 ) <= 2 & (( branchdeg B74 ) = ( 0 ) implies (( D43 . B74 ) = [ ( 0 ) , ( 0 ) ] or (ex R8 being (Element of ( NAT )) st ( D43 . B74 ) = [ 3 , R8 ]))) & (( branchdeg B74 ) = 1 implies (( D43 . B74 ) = [ 1 , ( 0 ) ] or ( D43 . B74 ) = [ 1 , 1 ])) & (( branchdeg B74 ) = 2 implies ( D43 . B74 ) = [ 2 , ( 0 ) ]))) by L571 , L576;
thus L578: thesis by L577 , L569;
end;
end;
definition
mode MP-wff
 is (Element of ( MP-WFF ));
end;
registration
cluster  ->  finite for MP-wff;
coherence by L537;
end;
definition
let R20 being MP-wff;
let C66 being (Element of ( dom R20 ));
redefine func R20 | C66 -> MP-wff;

coherence
proof
set D44 = ( R20 | C66 );
L582: ( dom D44 ) = ( ( dom R20 ) | C66 ) by TREES_2:def 10;
reconsider D45 = ( dom D44 ) as  finite Tree by L582;
reconsider D46 = D44 as  finite (DecoratedTree of [: ( NAT ) , ( NAT ) :]) by L582 , L388;
L583:
now
thus L584: D45 is  finite;
let C67 being (Element of D45);
set D47 = ( dom R20 );
reconsider D48 = C67 as (Element of ( D47 | C66 )) by TREES_2:def 10;
L585: C67 in D45;
L586: C67 in ( D47 | C66 ) by L585 , TREES_2:def 10;
reconsider D49 = ( C66 ^ C67 ) as (Element of D47) by L586 , TREES_1:def 6;
L587: (( succ D48 ) , ( succ D49 ) are_equipotent  & ( succ D48 ) = ( succ C67 )) by L174 , TREES_2:def 10;
L588: ( card ( succ C67 ) ) = ( card ( succ D49 ) ) by L587 , CARD_1:5;
L589: ( branchdeg C67 ) = ( card ( succ D49 ) ) by L588 , TREES_2:def 12;
L590: ( branchdeg C67 ) = ( branchdeg D49 ) by L589 , TREES_2:def 12;
thus L591: ( branchdeg C67 ) <= 2 by L590 , L537;
thus L592: (( branchdeg C67 ) = ( 0 ) implies (( D46 . C67 ) = [ ( 0 ) , ( 0 ) ] or (ex R8 being (Element of ( NAT )) st ( D46 . C67 ) = [ 3 , R8 ])))
proof
assume L593: ( branchdeg C67 ) = ( 0 );
per cases  by L590 , L593 , L537;
suppose L594: ( R20 . D49 ) = [ ( 0 ) , ( 0 ) ];

thus L595: thesis by L594 , L586 , TREES_2:def 10;
end;
suppose L596: (ex R8 being (Element of ( NAT )) st ( R20 . D49 ) = [ 3 , R8 ]);

consider R8 being (Element of ( NAT )) such that L597: ( R20 . D49 ) = [ 3 , R8 ] by L596;
L598:
now
take D50 = R8;
thus L599: ( D46 . C67 ) = [ 3 , D50 ] by L586 , L597 , TREES_2:def 10;
end;
thus L600: thesis by L598;
end;
end;

thus L602: (( branchdeg C67 ) = 1 implies (( D46 . C67 ) = [ 1 , ( 0 ) ] or ( D46 . C67 ) = [ 1 , 1 ]))
proof
assume L603: ( branchdeg C67 ) = 1;
per cases  by L590 , L603 , L537;
suppose L604: ( R20 . D49 ) = [ 1 , ( 0 ) ];

thus L605: thesis by L604 , L586 , TREES_2:def 10;
end;
suppose L606: ( R20 . D49 ) = [ 1 , 1 ];

thus L607: thesis by L606 , L586 , TREES_2:def 10;
end;
end;

thus L609: (( branchdeg C67 ) = 2 implies ( D46 . C67 ) = [ 2 , ( 0 ) ])
proof
assume L610: ( branchdeg C67 ) = 2;
L611: ( R20 . D49 ) = [ 2 , ( 0 ) ] by L610 , L590 , L537;
thus L612: thesis by L611 , L586 , TREES_2:def 10;
end;

end;
thus L610: thesis by L583 , L537;
end;
end;
definition
let C68 being (Element of ( MP-conectives ));
func the_arity_of C68 -> (Element of ( NAT )) equals 
( C68 `1 );
coherence
proof
reconsider D51 = { ( 0 ) , 1 , 2 } as non  empty set;
consider C69 being (Element of D51), C70 being (Element of ( NAT )) such that L612: C68 = [ C69 , C70 ] by DOMAIN_1:1;
L613: (C69 = ( 0 ) or C69 = 1 or C69 = 2) by ENUMSET1:def 1;
thus L614: thesis by L613 , L612 , MCART_1:7;
end;
end;
definition
let C71 being non  empty set;
let C72 , C73 being (DecoratedTree of C71);
let C74 being (FinSequence of ( NAT ));
assume L616: C74 in ( dom C72 );
func @ (C72 , C74 , C73) -> (DecoratedTree of C71) equals 
:L617: ( C72 with-replacement (C74 , C73) );
coherence
proof
set D52 = ( C72 with-replacement (C74 , C73) );
L618: ( rng D52 ) c= C71
proof
let R1 being set;
assume L619: R1 in ( rng D52 );
consider C75 being set such that L620: C75 in ( dom D52 ) and L621: R1 = ( D52 . C75 ) by L619 , FUNCT_1:def 3;
reconsider D53 = C75 as (FinSequence of ( NAT )) by L620 , TREES_1:19;
L622: ( dom D52 ) = ( ( dom C72 ) with-replacement (C74 , ( dom C73 )) ) by L616 , TREES_2:def 11;
L623:
now
per cases  by L616 , L620 , L622 , TREES_2:def 11;
suppose L624: ((not C74 is_a_prefix_of D53) & ( D52 . D53 ) = ( C72 . D53 ));

L625: (not (ex B75 being (FinSequence of ( NAT )) st (B75 in ( dom C73 ) & D53 = ( C74 ^ B75 )))) by L624 , TREES_1:1;
reconsider D54 = D53 as (Element of ( dom C72 )) by L625 , L616 , L620 , L622 , TREES_1:def 9;
L626: ( C72 . D54 ) is (Element of C71);
thus L627: thesis by L626 , L621 , L624;
end;
suppose L628: (ex R11 being (FinSequence of ( NAT )) st (R11 in ( dom C73 ) & D53 = ( C74 ^ R11 ) & ( D52 . D53 ) = ( C73 . R11 )));

consider R11 being (FinSequence of ( NAT )) such that L629: R11 in ( dom C73 ) and L630: D53 = ( C74 ^ R11 ) and L631: ( D52 . D53 ) = ( C73 . R11 ) by L628;
reconsider D55 = R11 as (Element of ( dom C73 )) by L629;
L632: ( C73 . D55 ) is (Element of C71);
thus L633: thesis by L632 , L621 , L631;
end;
end;
thus L635: thesis by L623;
end;
thus L636: thesis by L618 , RELAT_1:def 19;
end;
end;
theorem
L638: (for R20 being MP-wff holds ( ( ( elementary_tree 1 ) --> [ 1 , ( 0 ) ] ) with-replacement (<* ( 0 ) *> , R20) ) is MP-wff)
proof
let R20 being MP-wff;
reconsider D56 = <* ( 0 ) *> as (Element of ( elementary_tree 1 )) by TREES_1:28;
set D57 = ( ( ( elementary_tree 1 ) --> [ 1 , ( 0 ) ] ) with-replacement (<* ( 0 ) *> , R20) );
L639: <* ( 0 ) *> in ( elementary_tree 1 ) by TREES_1:28;
L640: <* ( 0 ) *> in ( dom ( ( elementary_tree 1 ) --> [ 1 , ( 0 ) ] ) ) by L639 , FUNCOP_1:13;
L641: ( @ (( ( elementary_tree 1 ) --> [ 1 , ( 0 ) ] ) , <* ( 0 ) *> , R20) ) = D57 by L640 , L617;
L642: ( dom D57 ) = ( ( dom ( ( elementary_tree 1 ) --> [ 1 , ( 0 ) ] ) ) with-replacement (<* ( 0 ) *> , ( dom R20 )) ) by L640 , TREES_2:def 11;
L643: ( dom D57 ) = ( ( elementary_tree 1 ) with-replacement (D56 , ( dom R20 )) ) by L642 , FUNCOP_1:13;
reconsider D58 = D57 as  finite (DecoratedTree of [: ( NAT ) , ( NAT ) :]) by L643 , L641 , L388;
L644: ( dom D58 ) = ( ( dom ( ( elementary_tree 1 ) --> [ 1 , ( 0 ) ] ) ) with-replacement (<* ( 0 ) *> , ( dom R20 )) ) by L640 , TREES_2:def 11;
L645: (for B76 being (Element of ( dom D58 )) holds (( branchdeg B76 ) <= 2 & (( branchdeg B76 ) = ( 0 ) implies (( D58 . B76 ) = [ ( 0 ) , ( 0 ) ] or (ex R8 being (Element of ( NAT )) st ( D58 . B76 ) = [ 3 , R8 ]))) & (( branchdeg B76 ) = 1 implies (( D58 . B76 ) = [ 1 , ( 0 ) ] or ( D58 . B76 ) = [ 1 , 1 ])) & (( branchdeg B76 ) = 2 implies ( D58 . B76 ) = [ 2 , ( 0 ) ])))
proof
set D59 = ( ( elementary_tree 1 ) --> [ 1 , ( 0 ) ] );
let C76 being (Element of ( dom D58 ));
L646:
now
per cases  by L640 , L644 , TREES_2:def 11;
suppose L647: ((not <* ( 0 ) *> is_a_prefix_of C76) & ( D58 . C76 ) = ( D59 . C76 ));

L648: ( dom D59 ) = { ( {} ) , <* ( 0 ) *> } by FUNCOP_1:13 , TREES_1:51;
L649: (not (ex R11 being (FinSequence of ( NAT )) st (R11 in ( dom R20 ) & C76 = ( <* ( 0 ) *> ^ R11 )))) by L647 , TREES_1:1;
L650: C76 in ( dom D59 ) by L649 , L640 , L644 , TREES_1:def 9;
L651: C76 = ( {} ) by L650 , L647 , L648 , TARSKI:def 2;
reconsider D60 = C76 as (Element of ( dom D59 )) by L640 , L644 , L649 , TREES_1:def 9;
L652:
now
let R1 being set;
thus L653: (R1 in ( succ D60 ) implies R1 in { <* ( 0 ) *> })
proof
assume L654: R1 in ( succ D60 );
L655: R1 in { ( D60 ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( D60 ^ <* R6 *> ) in ( dom D59 ) } by L654 , TREES_2:def 5;
consider R6 being (Element of ( NAT )) such that L656: R1 = ( D60 ^ <* R6 *> ) and L657: ( D60 ^ <* R6 *> ) in ( dom D59 ) by L655;
L658: <* R6 *> in ( dom D59 ) by L651 , L657 , FINSEQ_1:34;
L659: (<* R6 *> = ( {} ) or <* R6 *> = <* ( 0 ) *>) by L658 , L648 , TARSKI:def 2;
L660: R1 = <* R6 *> by L651 , L656 , FINSEQ_1:34;
thus L661: thesis by L660 , L659 , TARSKI:def 1;
end;

assume L662: R1 in { <* ( 0 ) *> };
L663: R1 = <* ( 0 ) *> by L662 , TARSKI:def 1;
L664: R1 = ( D60 ^ <* ( 0 ) *> ) by L663 , L651 , FINSEQ_1:34;
L665: ( D60 ^ <* ( 0 ) *> ) in ( dom D59 ) by L664 , L648 , L663 , TARSKI:def 2;
L666: R1 in { ( D60 ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( D60 ^ <* R6 *> ) in ( dom D59 ) } by L665 , L664;
thus L667: R1 in ( succ D60 ) by L666 , TREES_2:def 5;
end;
L668: ( succ D60 ) = { <* ( 0 ) *> } by L652 , TARSKI:1;
L669: ( succ C76 ) = ( succ D60 ) by L640 , L644 , L651 , L1 , L80;
L670: 1 = ( card ( succ C76 ) ) by L669 , L668 , CARD_1:30;
L671: ( branchdeg C76 ) = 1 by L670 , TREES_2:def 12;
thus L672: ( branchdeg C76 ) <= 2 by L671;
L673: C76 in ( elementary_tree 1 ) by L650;
thus L674: thesis by L673 , L647 , L671 , FUNCOP_1:7;
end;
suppose L675: (ex R11 being (FinSequence of ( NAT )) st (R11 in ( dom R20 ) & C76 = ( <* ( 0 ) *> ^ R11 ) & ( D58 . C76 ) = ( R20 . R11 )));

consider R11 being (FinSequence of ( NAT )) such that L676: R11 in ( dom R20 ) and L677: C76 = ( <* ( 0 ) *> ^ R11 ) and L678: ( D58 . C76 ) = ( R20 . R11 ) by L675;
reconsider D61 = R11 as (Element of ( dom R20 )) by L676;
L679: ( succ C76 ) , ( succ D61 ) are_equipotent  by L640 , L644 , L677 , TREES_2:37;
L680: ( card ( succ C76 ) ) = ( card ( succ D61 ) ) by L679 , CARD_1:5;
L681: ( branchdeg C76 ) = ( card ( succ D61 ) ) by L680 , TREES_2:def 12;
L682: ( branchdeg D61 ) <= 2 by L537;
thus L683: ( branchdeg C76 ) <= 2 by L682 , L681 , TREES_2:def 12;
L684: (( branchdeg D61 ) = 1 implies (( R20 . D61 ) = [ 1 , ( 0 ) ] or ( R20 . D61 ) = [ 1 , 1 ])) by L537;
L685: (( branchdeg D61 ) = 2 implies ( R20 . D61 ) = [ 2 , ( 0 ) ]) by L537;
L686: (( branchdeg D61 ) = ( 0 ) implies (( R20 . D61 ) = [ ( 0 ) , ( 0 ) ] or (ex R7 being (Element of ( NAT )) st ( R20 . D61 ) = [ 3 , R7 ]))) by L537;
thus L687: thesis by L686 , L678 , L682 , L684 , L685 , L681 , TREES_2:def 12;
end;
end;
thus L689: thesis by L646;
end;
thus L690: thesis by L645 , L537;
end;
theorem
L691: (for R20 being MP-wff holds ( ( ( elementary_tree 1 ) --> [ 1 , 1 ] ) with-replacement (<* ( 0 ) *> , R20) ) is MP-wff)
proof
let R20 being MP-wff;
reconsider D62 = <* ( 0 ) *> as (Element of ( elementary_tree 1 )) by TREES_1:28;
set D63 = ( ( ( elementary_tree 1 ) --> [ 1 , 1 ] ) with-replacement (<* ( 0 ) *> , R20) );
L692: <* ( 0 ) *> in ( elementary_tree 1 ) by TREES_1:28;
L693: <* ( 0 ) *> in ( dom ( ( elementary_tree 1 ) --> [ 1 , 1 ] ) ) by L692 , FUNCOP_1:13;
L694: ( dom D63 ) = ( ( dom ( ( elementary_tree 1 ) --> [ 1 , 1 ] ) ) with-replacement (<* ( 0 ) *> , ( dom R20 )) ) by L693 , TREES_2:def 11;
L695: ( dom D63 ) = ( ( elementary_tree 1 ) with-replacement (D62 , ( dom R20 )) ) by L694 , FUNCOP_1:13;
L696: ( @ (( ( elementary_tree 1 ) --> [ 1 , 1 ] ) , <* ( 0 ) *> , R20) ) = ( ( ( elementary_tree 1 ) --> [ 1 , 1 ] ) with-replacement (<* ( 0 ) *> , R20) ) by L693 , L617;
reconsider D64 = ( ( ( elementary_tree 1 ) --> [ 1 , 1 ] ) with-replacement (<* ( 0 ) *> , R20) ) as  finite (DecoratedTree of [: ( NAT ) , ( NAT ) :]) by L696 , L695 , L388;
L697: ( dom D64 ) = ( ( dom ( ( elementary_tree 1 ) --> [ 1 , 1 ] ) ) with-replacement (<* ( 0 ) *> , ( dom R20 )) ) by L693 , TREES_2:def 11;
L698: (for B77 being (Element of ( dom D64 )) holds (( branchdeg B77 ) <= 2 & (( branchdeg B77 ) = ( 0 ) implies (( D64 . B77 ) = [ ( 0 ) , ( 0 ) ] or (ex R8 being (Element of ( NAT )) st ( D64 . B77 ) = [ 3 , R8 ]))) & (( branchdeg B77 ) = 1 implies (( D64 . B77 ) = [ 1 , ( 0 ) ] or ( D64 . B77 ) = [ 1 , 1 ])) & (( branchdeg B77 ) = 2 implies ( D64 . B77 ) = [ 2 , ( 0 ) ])))
proof
set D65 = ( ( elementary_tree 1 ) --> [ 1 , 1 ] );
let C77 being (Element of ( dom D64 ));
L699:
now
per cases  by L693 , L697 , TREES_2:def 11;
suppose L700: ((not <* ( 0 ) *> is_a_prefix_of C77) & ( D64 . C77 ) = ( D65 . C77 ));

L701: ( dom D65 ) = { ( {} ) , <* ( 0 ) *> } by FUNCOP_1:13 , TREES_1:51;
L702: (not (ex R11 being (FinSequence of ( NAT )) st (R11 in ( dom R20 ) & C77 = ( <* ( 0 ) *> ^ R11 )))) by L700 , TREES_1:1;
L703: C77 in ( dom D65 ) by L702 , L693 , L697 , TREES_1:def 9;
L704: C77 = ( {} ) by L703 , L700 , L701 , TARSKI:def 2;
reconsider D66 = C77 as (Element of ( dom D65 )) by L693 , L697 , L702 , TREES_1:def 9;
L705:
now
let R1 being set;
thus L706: (R1 in ( succ D66 ) implies R1 in { <* ( 0 ) *> })
proof
assume L707: R1 in ( succ D66 );
L708: R1 in { ( D66 ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( D66 ^ <* R6 *> ) in ( dom D65 ) } by L707 , TREES_2:def 5;
consider R6 being (Element of ( NAT )) such that L709: R1 = ( D66 ^ <* R6 *> ) and L710: ( D66 ^ <* R6 *> ) in ( dom D65 ) by L708;
L711: <* R6 *> in ( dom D65 ) by L704 , L710 , FINSEQ_1:34;
L712: (<* R6 *> = ( {} ) or <* R6 *> = <* ( 0 ) *>) by L711 , L701 , TARSKI:def 2;
L713: R1 = <* R6 *> by L704 , L709 , FINSEQ_1:34;
thus L714: thesis by L713 , L712 , TARSKI:def 1;
end;

assume L715: R1 in { <* ( 0 ) *> };
L716: R1 = <* ( 0 ) *> by L715 , TARSKI:def 1;
L717: R1 = ( D66 ^ <* ( 0 ) *> ) by L716 , L704 , FINSEQ_1:34;
L718: ( D66 ^ <* ( 0 ) *> ) in ( dom D65 ) by L717 , L701 , L716 , TARSKI:def 2;
L719: R1 in { ( D66 ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( D66 ^ <* R6 *> ) in ( dom D65 ) } by L718 , L717;
thus L720: R1 in ( succ D66 ) by L719 , TREES_2:def 5;
end;
L721: ( succ D66 ) = { <* ( 0 ) *> } by L705 , TARSKI:1;
L722: ( succ C77 ) = ( succ D66 ) by L693 , L697 , L704 , L1 , L80;
L723: 1 = ( card ( succ C77 ) ) by L722 , L721 , CARD_1:30;
L724: ( branchdeg C77 ) = 1 by L723 , TREES_2:def 12;
thus L725: ( branchdeg C77 ) <= 2 by L724;
L726: C77 in ( elementary_tree 1 ) by L703;
thus L727: thesis by L726 , L700 , L724 , FUNCOP_1:7;
end;
suppose L728: (ex R11 being (FinSequence of ( NAT )) st (R11 in ( dom R20 ) & C77 = ( <* ( 0 ) *> ^ R11 ) & ( D64 . C77 ) = ( R20 . R11 )));

consider R11 being (FinSequence of ( NAT )) such that L729: R11 in ( dom R20 ) and L730: C77 = ( <* ( 0 ) *> ^ R11 ) and L731: ( D64 . C77 ) = ( R20 . R11 ) by L728;
reconsider D67 = R11 as (Element of ( dom R20 )) by L729;
L732: ( succ C77 ) , ( succ D67 ) are_equipotent  by L693 , L697 , L730 , TREES_2:37;
L733: ( card ( succ C77 ) ) = ( card ( succ D67 ) ) by L732 , CARD_1:5;
L734: ( branchdeg C77 ) = ( card ( succ D67 ) ) by L733 , TREES_2:def 12;
L735: ( branchdeg D67 ) <= 2 by L537;
thus L736: ( branchdeg C77 ) <= 2 by L735 , L734 , TREES_2:def 12;
L737: (( branchdeg D67 ) = 1 implies (( R20 . D67 ) = [ 1 , ( 0 ) ] or ( R20 . D67 ) = [ 1 , 1 ])) by L537;
L738: (( branchdeg D67 ) = 2 implies ( R20 . D67 ) = [ 2 , ( 0 ) ]) by L537;
L739: (( branchdeg D67 ) = ( 0 ) implies (( R20 . D67 ) = [ ( 0 ) , ( 0 ) ] or (ex R7 being (Element of ( NAT )) st ( R20 . D67 ) = [ 3 , R7 ]))) by L537;
thus L740: thesis by L739 , L731 , L735 , L737 , L738 , L734 , TREES_2:def 12;
end;
end;
thus L742: thesis by L699;
end;
thus L743: thesis by L698 , L537;
end;
theorem
L744: (for R20 being MP-wff holds (for R22 being MP-wff holds ( ( ( ( elementary_tree 2 ) --> [ 2 , ( 0 ) ] ) with-replacement (<* ( 0 ) *> , R20) ) with-replacement (<* 1 *> , R22) ) is MP-wff))
proof
let R20 being MP-wff;
let R22 being MP-wff;
reconsider D68 = <* ( 0 ) *> as (Element of ( elementary_tree 2 )) by TREES_1:28;
set D69 = ( ( ( elementary_tree 2 ) --> [ 2 , ( 0 ) ] ) with-replacement (<* ( 0 ) *> , R20) );
set D70 = ( D69 with-replacement (<* 1 *> , R22) );
L745: (not <* ( 0 ) *> is_a_proper_prefix_of <* 1 *>)
proof
assume L746: (not thesis);
L747: <* ( 0 ) *> is_a_prefix_of <* 1 *> by L746 , XBOOLE_0:def 8;
thus L748: contradiction by L747 , TREES_1:3;
end;
reconsider D71 = ( dom R22 ) as  finite Tree;
reconsider D72 = ( dom R20 ) as  finite Tree;
L749: <* ( 0 ) *> in ( elementary_tree 2 ) by TREES_1:28;
L750: <* ( 0 ) *> in ( dom ( ( elementary_tree 2 ) --> [ 2 , ( 0 ) ] ) ) by L749 , FUNCOP_1:13;
L751: ( @ (( ( elementary_tree 2 ) --> [ 2 , ( 0 ) ] ) , <* ( 0 ) *> , R20) ) = D69 by L750 , L617;
reconsider D73 = D69 as (DecoratedTree of [: ( NAT ) , ( NAT ) :]) by L751;
L752: ( dom D73 ) = ( ( dom ( ( elementary_tree 2 ) --> [ 2 , ( 0 ) ] ) ) with-replacement (<* ( 0 ) *> , ( dom R20 )) ) by L750 , TREES_2:def 11;
L753: ( dom ( ( elementary_tree 2 ) --> [ 2 , ( 0 ) ] ) ) = ( elementary_tree 2 ) by FUNCOP_1:13;
L754: ( dom D73 ) = ( ( elementary_tree 2 ) with-replacement (D68 , D72) ) by L753 , TREES_2:def 11;
reconsider D74 = ( dom D73 ) as  finite Tree by L754;
L755: <* 1 *> in ( elementary_tree 2 ) by TREES_1:28;
L756: <* 1 *> in ( dom ( ( elementary_tree 2 ) --> [ 2 , ( 0 ) ] ) ) by L755 , FUNCOP_1:13;
L757: <* 1 *> in ( dom D73 ) by L756 , L750 , L752 , L745 , TREES_1:def 9;
reconsider D75 = <* 1 *> as (Element of D74) by L750 , L752 , L756 , L745 , TREES_1:def 9;
L758: (( dom D70 ) = ( D74 with-replacement (D75 , D71) ) & ( @ (D73 , <* 1 *> , R22) ) = D70) by L757 , L617 , TREES_2:def 11;
reconsider D76 = D70 as  finite (DecoratedTree of [: ( NAT ) , ( NAT ) :]) by L758 , L388;
L759: ( dom D76 ) = ( ( dom D73 ) with-replacement (<* 1 *> , ( dom R22 )) ) by L757 , TREES_2:def 11;
L760: (for B78 being (Element of ( dom D76 )) holds (( branchdeg B78 ) <= 2 & (( branchdeg B78 ) = ( 0 ) implies (( D76 . B78 ) = [ ( 0 ) , ( 0 ) ] or (ex R8 being (Element of ( NAT )) st ( D76 . B78 ) = [ 3 , R8 ]))) & (( branchdeg B78 ) = 1 implies (( D76 . B78 ) = [ 1 , ( 0 ) ] or ( D76 . B78 ) = [ 1 , 1 ])) & (( branchdeg B78 ) = 2 implies ( D76 . B78 ) = [ 2 , ( 0 ) ])))
proof
set D77 = ( ( elementary_tree 2 ) --> [ 2 , ( 0 ) ] );
let C78 being (Element of ( dom D76 ));
L761:
now
per cases  by L757 , L759 , TREES_2:def 11;
suppose L762: ((not <* 1 *> is_a_prefix_of C78) & ( D76 . C78 ) = ( D73 . C78 ));

L763: (not (ex R11 being (FinSequence of ( NAT )) st (R11 in ( dom R22 ) & C78 = ( <* 1 *> ^ R11 )))) by L762 , TREES_1:1;
L764: C78 in ( ( dom D77 ) with-replacement (<* ( 0 ) *> , ( dom R20 )) ) by L763 , L752 , L757 , L759 , TREES_1:def 9;
L765:
now
per cases  by L750 , L764 , TREES_2:def 11;
suppose L766: ((not <* ( 0 ) *> is_a_prefix_of C78) & ( D73 . C78 ) = ( D77 . C78 ));

L767: ( dom D77 ) = { ( {} ) , <* ( 0 ) *> , <* 1 *> } by FUNCOP_1:13 , TREES_1:53;
L768: (not (ex R11 being (FinSequence of ( NAT )) st (R11 in ( dom R20 ) & C78 = ( <* ( 0 ) *> ^ R11 )))) by L766 , TREES_1:1;
L769: C78 in ( dom D77 ) by L768 , L750 , L764 , TREES_1:def 9;
L770: C78 = ( {} ) by L769 , L762 , L766 , L767 , ENUMSET1:def 1;
reconsider D78 = C78 as (Element of ( dom D77 )) by L750 , L764 , L768 , TREES_1:def 9;
L771: ( succ C78 ) = ( succ D78 )
proof
reconsider D79 = C78 as (Element of ( dom D73 )) by L757 , L759 , L763 , TREES_1:def 9;
L772: ( succ D79 ) = ( succ D78 ) by L750 , L752 , L770 , L1 , L80;
thus L773: thesis by L772 , L757 , L759 , L770 , L1 , L80;
end;
L774:
now
let R1 being set;
thus L775: (R1 in ( succ D78 ) implies R1 in { <* ( 0 ) *> , <* 1 *> })
proof
assume L776: R1 in ( succ D78 );
L777: R1 in { ( D78 ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( D78 ^ <* R6 *> ) in ( dom D77 ) } by L776 , TREES_2:def 5;
consider R6 being (Element of ( NAT )) such that L778: R1 = ( D78 ^ <* R6 *> ) and L779: ( D78 ^ <* R6 *> ) in ( dom D77 ) by L777;
L780: <* R6 *> in ( dom D77 ) by L770 , L779 , FINSEQ_1:34;
L781: (<* R6 *> = ( {} ) or <* R6 *> = <* ( 0 ) *> or <* R6 *> = <* 1 *>) by L780 , L767 , ENUMSET1:def 1;
L782: R1 = <* R6 *> by L770 , L778 , FINSEQ_1:34;
thus L783: thesis by L782 , L781 , TARSKI:def 2;
end;

assume L784: R1 in { <* ( 0 ) *> , <* 1 *> };
L785: (R1 = <* ( 0 ) *> or R1 = <* 1 *>) by L784 , TARSKI:def 2;
L786:
now
per cases  by L770 , L785 , FINSEQ_1:34;
suppose L787: R1 = ( D78 ^ <* ( 0 ) *> );

L788: ( D78 ^ <* ( 0 ) *> ) in ( dom D77 ) by L787 , L767 , L785 , ENUMSET1:def 1;
L789: R1 in { ( D78 ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( D78 ^ <* R6 *> ) in ( dom D77 ) } by L788 , L787;
thus L790: R1 in ( succ D78 ) by L789 , TREES_2:def 5;
end;
suppose L791: R1 = ( D78 ^ <* 1 *> );

L792: ( D78 ^ <* 1 *> ) in ( dom D77 ) by L791 , L767 , L785 , ENUMSET1:def 1;
L793: R1 in { ( D78 ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( D78 ^ <* R6 *> ) in ( dom D77 ) } by L792 , L791;
thus L794: R1 in ( succ D78 ) by L793 , TREES_2:def 5;
end;
end;
thus L796: R1 in ( succ D78 ) by L786;
end;
L797: ( succ D78 ) = { <* ( 0 ) *> , <* 1 *> } by L774 , TARSKI:1;
L798: <* ( 0 ) *> <> <* 1 *> by TREES_1:3;
L799: 2 = ( card ( succ C78 ) ) by L798 , L797 , L771 , CARD_2:57;
thus L800: ( branchdeg C78 ) <= 2 by L799 , TREES_2:def 12;
L801: C78 in ( elementary_tree 2 ) by L769;
thus L802: thesis by L801 , L762 , L766 , L799 , FUNCOP_1:7 , TREES_2:def 12;
end;
suppose L803: (ex R11 being (FinSequence of ( NAT )) st (R11 in ( dom R20 ) & C78 = ( <* ( 0 ) *> ^ R11 ) & ( D73 . C78 ) = ( R20 . R11 )));

consider R11 being (FinSequence of ( NAT )) such that L804: R11 in ( dom R20 ) and L805: C78 = ( <* ( 0 ) *> ^ R11 ) and L806: ( D73 . C78 ) = ( R20 . R11 ) by L803;
reconsider D80 = R11 as (Element of ( dom R20 )) by L804;
L807: ( succ C78 ) , ( succ D80 ) are_equipotent 
proof
reconsider D81 = C78 as (Element of ( dom D73 )) by L757 , L759 , L763 , TREES_1:def 9;
L808: ( succ D81 ) , ( succ D80 ) are_equipotent  by L750 , L752 , L805 , TREES_2:37;
thus L809: thesis by L808 , L757 , L759 , L805 , L6 , L142;
end;
L810: ( card ( succ C78 ) ) = ( card ( succ D80 ) ) by L807 , CARD_1:5;
L811: ( branchdeg C78 ) = ( card ( succ D80 ) ) by L810 , TREES_2:def 12;
L812: ( branchdeg D80 ) <= 2 by L537;
thus L813: ( branchdeg C78 ) <= 2 by L812 , L811 , TREES_2:def 12;
L814: (( branchdeg D80 ) = 1 implies (( R20 . D80 ) = [ 1 , ( 0 ) ] or ( R20 . D80 ) = [ 1 , 1 ])) by L537;
L815: (( branchdeg D80 ) = 2 implies ( R20 . D80 ) = [ 2 , ( 0 ) ]) by L537;
L816: (( branchdeg D80 ) = ( 0 ) implies (( R20 . D80 ) = [ ( 0 ) , ( 0 ) ] or (ex R7 being (Element of ( NAT )) st ( R20 . D80 ) = [ 3 , R7 ]))) by L537;
thus L817: thesis by L816 , L762 , L806 , L812 , L814 , L815 , L811 , TREES_2:def 12;
end;
end;
thus L819: thesis by L765;
end;
suppose L820: (ex R11 being (FinSequence of ( NAT )) st (R11 in ( dom R22 ) & C78 = ( <* 1 *> ^ R11 ) & ( D76 . C78 ) = ( R22 . R11 )));

consider R11 being (FinSequence of ( NAT )) such that L821: R11 in ( dom R22 ) and L822: C78 = ( <* 1 *> ^ R11 ) and L823: ( D76 . C78 ) = ( R22 . R11 ) by L820;
reconsider D82 = R11 as (Element of ( dom R22 )) by L821;
L824: ( succ C78 ) , ( succ D82 ) are_equipotent  by L757 , L759 , L822 , TREES_2:37;
L825: ( card ( succ C78 ) ) = ( card ( succ D82 ) ) by L824 , CARD_1:5;
L826: ( branchdeg C78 ) = ( card ( succ D82 ) ) by L825 , TREES_2:def 12;
L827: (( branchdeg D82 ) = 2 implies ( R22 . D82 ) = [ 2 , ( 0 ) ]) by L537;
L828: (( branchdeg D82 ) = 1 implies (( R22 . D82 ) = [ 1 , ( 0 ) ] or ( R22 . D82 ) = [ 1 , 1 ])) by L537;
L829: (( branchdeg D82 ) = ( 0 ) implies (( R22 . D82 ) = [ ( 0 ) , ( 0 ) ] or (ex R7 being (Element of ( NAT )) st ( R22 . D82 ) = [ 3 , R7 ]))) by L537;
L830: ( branchdeg D82 ) <= 2 by L537;
thus L831: thesis by L830 , L823 , L829 , L828 , L827 , L826 , TREES_2:def 12;
end;
end;
thus L833: thesis by L761;
end;
thus L834: thesis by L760 , L537;
end;
definition
let R20 being MP-wff;
func 'not' R20 -> MP-wff equals 
( ( ( elementary_tree 1 ) --> [ 1 , ( 0 ) ] ) with-replacement (<* ( 0 ) *> , R20) );
coherence by L638;
func (#) R20 -> MP-wff equals 
( ( ( elementary_tree 1 ) --> [ 1 , 1 ] ) with-replacement (<* ( 0 ) *> , R20) );
coherence by L691;
let R22 being MP-wff;
func R20 '&' R22 -> MP-wff equals 
( ( ( ( elementary_tree 2 ) --> [ 2 , ( 0 ) ] ) with-replacement (<* ( 0 ) *> , R20) ) with-replacement (<* 1 *> , R22) );
coherence by L744;
end;
definition
let R20 being MP-wff;
func ? R20 -> MP-wff equals 
( 'not' ( (#) ( 'not' R20 ) ) );
correctness;
let R22 being MP-wff;
func R20 'or' R22 -> MP-wff equals 
( 'not' ( ( 'not' R20 ) '&' ( 'not' R22 ) ) );
correctness;
func R20 => R22 -> MP-wff equals 
( 'not' ( R20 '&' ( 'not' R22 ) ) );
correctness;
end;
theorem
L837: (for R6 being (Element of ( NAT )) holds ( ( elementary_tree ( 0 ) ) --> [ 3 , R6 ] ) is MP-wff)
proof
let R6 being (Element of ( NAT ));
set D83 = ( ( elementary_tree ( 0 ) ) --> [ 3 , R6 ] );
L838: ( dom D83 ) = { ( {} ) } by FUNCOP_1:13 , TREES_1:29;
reconsider D84 = D83 as  finite (DecoratedTree of [: ( NAT ) , ( NAT ) :]);
L839: ( dom D84 ) = ( elementary_tree ( 0 ) ) by FUNCOP_1:13;
L840: (for B79 being (Element of ( dom D84 )) holds (( branchdeg B79 ) <= 2 & (( branchdeg B79 ) = ( 0 ) implies (( D84 . B79 ) = [ ( 0 ) , ( 0 ) ] or (ex R8 being (Element of ( NAT )) st ( D84 . B79 ) = [ 3 , R8 ]))) & (( branchdeg B79 ) = 1 implies (( D84 . B79 ) = [ 1 , ( 0 ) ] or ( D84 . B79 ) = [ 1 , 1 ])) & (( branchdeg B79 ) = 2 implies ( D84 . B79 ) = [ 2 , ( 0 ) ])))
proof
let C79 being (Element of ( dom D84 ));
L841: ( succ C79 ) = ( {} )
proof
set D85 = the (Element of ( succ C79 ));
assume L842: (not thesis);
L843: D85 in ( succ C79 ) by L842;
L844: D85 in { ( C79 ^ <* R7 *> ) where R7 is (Element of ( NAT )) : ( C79 ^ <* R7 *> ) in ( dom D84 ) } by L843 , TREES_2:def 5;
L845: (ex R7 being (Element of ( NAT )) st (D85 = ( C79 ^ <* R7 *> ) & ( C79 ^ <* R7 *> ) in ( dom D84 ))) by L844;
thus L846: contradiction by L845 , L838 , TARSKI:def 1;
end;
thus L847: ( branchdeg C79 ) <= 2 by L841 , CARD_1:27 , TREES_2:def 12;
thus L848: (( branchdeg C79 ) = ( 0 ) implies (( D84 . C79 ) = [ ( 0 ) , ( 0 ) ] or (ex R7 being (Element of ( NAT )) st ( D84 . C79 ) = [ 3 , R7 ]))) by L839 , FUNCOP_1:7;
thus L849: thesis by L841 , CARD_1:27 , TREES_2:def 12;
end;
thus L850: thesis by L840 , L537;
end;
theorem
L851: ( ( elementary_tree ( 0 ) ) --> [ ( 0 ) , ( 0 ) ] ) is MP-wff
proof
set D86 = ( ( elementary_tree ( 0 ) ) --> [ ( 0 ) , ( 0 ) ] );
reconsider D87 = D86 as  finite (DecoratedTree of [: ( NAT ) , ( NAT ) :]);
L852: ( dom D87 ) = { ( {} ) } by FUNCOP_1:13 , TREES_1:29;
L853: ( dom D87 ) = ( elementary_tree ( 0 ) ) by FUNCOP_1:13;
L854: (for B80 being (Element of ( dom D87 )) holds (( branchdeg B80 ) <= 2 & (( branchdeg B80 ) = ( 0 ) implies (( D87 . B80 ) = [ ( 0 ) , ( 0 ) ] or (ex R8 being (Element of ( NAT )) st ( D87 . B80 ) = [ 3 , R8 ]))) & (( branchdeg B80 ) = 1 implies (( D87 . B80 ) = [ 1 , ( 0 ) ] or ( D87 . B80 ) = [ 1 , 1 ])) & (( branchdeg B80 ) = 2 implies ( D87 . B80 ) = [ 2 , ( 0 ) ])))
proof
let C80 being (Element of ( dom D87 ));
L855: ( succ C80 ) = ( {} )
proof
set D88 = the (Element of ( succ C80 ));
assume L856: (not thesis);
L857: D88 in ( succ C80 ) by L856;
L858: D88 in { ( C80 ^ <* R7 *> ) where R7 is (Element of ( NAT )) : ( C80 ^ <* R7 *> ) in ( dom D87 ) } by L857 , TREES_2:def 5;
L859: (ex R7 being (Element of ( NAT )) st (D88 = ( C80 ^ <* R7 *> ) & ( C80 ^ <* R7 *> ) in ( dom D87 ))) by L858;
thus L860: contradiction by L859 , L852 , TARSKI:def 1;
end;
thus L861: ( branchdeg C80 ) <= 2 by L855 , CARD_1:27 , TREES_2:def 12;
thus L862: thesis by L853 , L855 , CARD_1:27 , FUNCOP_1:7 , TREES_2:def 12;
end;
thus L863: thesis by L854 , L537;
end;
definition
let R18 being MP-variable;
func @ R18 -> MP-wff equals 
( ( elementary_tree ( 0 ) ) --> R18 );
coherence
proof
consider R3 being set, R4 being set such that L864: R3 in { 3 } and L865: (R4 in ( NAT ) & R18 = [ R3 , R4 ]) by ZFMISC_1:def 2;
L866: R3 = 3 by L864 , TARSKI:def 1;
thus L867: thesis by L866 , L865 , L837;
end;
end;
theorem
L869: (for R18 being MP-variable holds (for R19 being MP-variable holds (( @ R18 ) = ( @ R19 ) implies R18 = R19)))
proof
let R18 being MP-variable;
let R19 being MP-variable;
assume L870: ( @ R18 ) = ( @ R19 );
L871: ( {} ) in ( elementary_tree ( 0 ) ) by TREES_1:22;
L872: R18 = ( ( @ R18 ) . ( {} ) ) by L871 , FUNCOP_1:7
.= R19 by L871 , L870 , FUNCOP_1:7;
thus L873: thesis by L872;
end;
L874: (for R6 being (Element of ( NAT )) holds (for R7 being (Element of ( NAT )) holds <* ( 0 ) *> in ( dom ( ( elementary_tree 1 ) --> [ R6 , R7 ] ) )))
proof
let R6 being (Element of ( NAT ));
let R7 being (Element of ( NAT ));
L875: <* ( 0 ) *> in ( elementary_tree 1 ) by TARSKI:def 2 , TREES_1:51;
thus L876: thesis by L875 , FUNCOP_1:13;
end;
theorem
L877: (for R20 being MP-wff holds (for R22 being MP-wff holds (( 'not' R20 ) = ( 'not' R22 ) implies R20 = R22)))
proof
let R20 being MP-wff;
let R22 being MP-wff;
assume L878: ( 'not' R20 ) = ( 'not' R22 );
L879: <* ( 0 ) *> in ( dom ( ( elementary_tree 1 ) --> [ 1 , ( 0 ) ] ) ) by L874;
thus L880: thesis by L879 , L878 , L63;
end;
theorem
L881: (for R20 being MP-wff holds (for R22 being MP-wff holds (( (#) R20 ) = ( (#) R22 ) implies R20 = R22)))
proof
let R20 being MP-wff;
let R22 being MP-wff;
set D89 = ( ( elementary_tree 1 ) --> [ 1 , 1 ] );
assume L882: ( (#) R20 ) = ( (#) R22 );
L883: <* ( 0 ) *> in ( dom D89 ) by L874;
thus L884: thesis by L883 , L882 , L63;
end;
theorem
L885: (for R20 being MP-wff holds (for R21 being MP-wff holds (for R22 being MP-wff holds (for R23 being MP-wff holds (( R20 '&' R22 ) = ( R21 '&' R23 ) implies (R20 = R21 & R22 = R23))))))
proof
let R20 being MP-wff;
let R21 being MP-wff;
let R22 being MP-wff;
let R23 being MP-wff;
set D90 = ( elementary_tree 2 );
set D91 = ( ( D90 --> [ 2 , ( 0 ) ] ) with-replacement (<* ( 0 ) *> , R20) );
set D92 = ( ( D90 --> [ 2 , ( 0 ) ] ) with-replacement (<* ( 0 ) *> , R21) );
assume L886: ( R20 '&' R22 ) = ( R21 '&' R23 );
L887: <* 1 *> in D90 by TREES_1:28;
L888: (<* ( 0 ) *> in D90 & ( dom ( D90 --> [ 2 , ( 0 ) ] ) ) = D90) by FUNCOP_1:13 , TREES_1:28;
L889: ( dom D92 ) = ( ( dom ( D90 --> [ 2 , ( 0 ) ] ) ) with-replacement (<* ( 0 ) *> , ( dom R21 )) ) by L888 , TREES_2:def 11;
L890: (not <* 1 *> is_a_proper_prefix_of <* ( 0 ) *>) by TREES_1:52;
L891: <* ( 0 ) *> in ( ( dom ( D90 --> [ 2 , ( 0 ) ] ) ) with-replacement (<* 1 *> , ( dom R22 )) ) by L890 , L887 , L888 , TREES_1:def 9;
L892: (not <* ( 0 ) *> is_a_proper_prefix_of <* 1 *>) by TREES_1:52;
L893: <* 1 *> in ( dom D92 ) by L892 , L887 , L888 , L889 , TREES_1:def 9;
L894: ( dom D91 ) = ( ( dom ( D90 --> [ 2 , ( 0 ) ] ) ) with-replacement (<* ( 0 ) *> , ( dom R20 )) ) by L888 , TREES_2:def 11;
L895: <* 1 *> in ( dom D91 ) by L894 , L887 , L888 , L892 , TREES_1:def 9;
L896: ( dom ( R20 '&' R22 ) ) = ( ( dom D91 ) with-replacement (<* 1 *> , ( dom R22 )) ) by L895 , TREES_2:def 11;
L897: ( dom ( R21 '&' R23 ) ) = ( ( dom D92 ) with-replacement (<* 1 *> , ( dom R23 )) ) by L893 , TREES_2:def 11;
L898:
now
let R11 being (FinSequence of ( NAT ));
thus L899: (R11 in ( dom R22 ) implies R11 in ( dom R23 ))
proof
assume L900: R11 in ( dom R22 );
L901: ( <* 1 *> ^ R11 ) in ( dom ( R21 '&' R23 ) ) by L900 , L886 , L895 , L896 , TREES_1:def 9;
L902:
now
per cases ;
suppose L903: R11 = ( {} );

thus L904: thesis by L903 , TREES_1:22;
end;
suppose L905: R11 <> ( {} );

L906: <* 1 *> is_a_proper_prefix_of ( <* 1 *> ^ R11 ) by L905 , TREES_1:10;
L907: (ex R10 being (FinSequence of ( NAT )) st (R10 in ( dom R23 ) & ( <* 1 *> ^ R11 ) = ( <* 1 *> ^ R10 ))) by L906 , L893 , L897 , L901 , TREES_1:def 9;
thus L908: thesis by L907 , FINSEQ_1:33;
end;
end;
thus L910: thesis by L902;
end;

assume L911: R11 in ( dom R23 );
L912: ( <* 1 *> ^ R11 ) in ( dom ( R20 '&' R22 ) ) by L911 , L886 , L893 , L897 , TREES_1:def 9;
L913:
now
per cases ;
suppose L914: R11 = ( {} );

thus L915: R11 in ( dom R22 ) by L914 , TREES_1:22;
end;
suppose L916: R11 <> ( {} );

L917: <* 1 *> is_a_proper_prefix_of ( <* 1 *> ^ R11 ) by L916 , TREES_1:10;
L918: (ex R10 being (FinSequence of ( NAT )) st (R10 in ( dom R22 ) & ( <* 1 *> ^ R11 ) = ( <* 1 *> ^ R10 ))) by L917 , L895 , L896 , L912 , TREES_1:def 9;
thus L919: R11 in ( dom R22 ) by L918 , FINSEQ_1:33;
end;
end;
thus L921: R11 in ( dom R22 ) by L913;
end;
L922: ( dom R22 ) = ( dom R23 ) by L898 , TREES_2:def 1;
L923: (for R11 being (FinSequence of ( NAT )) holds (R11 in ( dom R22 ) implies ( R22 . R11 ) = ( R23 . R11 )))
proof
let R11 being (FinSequence of ( NAT ));
assume L924: R11 in ( dom R22 );
L925: ( <* 1 *> ^ R11 ) in ( dom ( R21 '&' R23 ) ) by L924 , L886 , L895 , L896 , TREES_1:def 9;
L926: <* 1 *> is_a_prefix_of ( <* 1 *> ^ R11 ) by TREES_1:1;
consider R10 being (FinSequence of ( NAT )) such that L927: R10 in ( dom R23 ) and L928: ( <* 1 *> ^ R11 ) = ( <* 1 *> ^ R10 ) and L929: ( ( R21 '&' R23 ) . ( <* 1 *> ^ R11 ) ) = ( R23 . R10 ) by L926 , L893 , L897 , L925 , TREES_2:def 11;
L930: (ex R13 being (FinSequence of ( NAT )) st (R13 in ( dom R22 ) & ( <* 1 *> ^ R11 ) = ( <* 1 *> ^ R13 ) & ( ( R20 '&' R22 ) . ( <* 1 *> ^ R11 ) ) = ( R22 . R13 ))) by L886 , L895 , L896 , L925 , L926 , TREES_2:def 11;
L931: R11 = R10 by L928 , FINSEQ_1:33;
thus L932: thesis by L931 , L886 , L929 , L930 , FINSEQ_1:33;
end;
L933: R22 = R23 by L923 , L922 , TREES_2:31;
L934: (not <* ( 0 ) *> , <* 1 *> are_c=-comparable ) by TREES_1:5;
L935: ( dom ( R20 '&' R22 ) ) = ( ( ( dom ( D90 --> [ 2 , ( 0 ) ] ) ) with-replacement (<* 1 *> , ( dom R22 )) ) with-replacement (<* ( 0 ) *> , ( dom R20 )) ) by L934 , L887 , L888 , L894 , L896 , TREES_2:8;
L936: ( dom ( R21 '&' R23 ) ) = ( ( ( dom ( D90 --> [ 2 , ( 0 ) ] ) ) with-replacement (<* 1 *> , ( dom R22 )) ) with-replacement (<* ( 0 ) *> , ( dom R21 )) ) by L934 , L887 , L888 , L889 , L897 , L922 , TREES_2:8;
L937: ( dom R20 ) = ( dom R21 ) by L936 , L886 , L891 , L935 , L40;
L938: (for R11 being (FinSequence of ( NAT )) holds (R11 in ( dom R20 ) implies ( R20 . R11 ) = ( R21 . R11 )))
proof
let R11 being (FinSequence of ( NAT ));
assume L939: R11 in ( dom R20 );
L940: ( <* ( 0 ) *> ^ R11 ) in ( dom D91 ) by L939 , L888 , L894 , TREES_1:def 9;
L941: <* ( 0 ) *> is_a_prefix_of ( <* ( 0 ) *> ^ R11 ) by TREES_1:1;
L942: (ex R10 being (FinSequence of ( NAT )) st (R10 in ( dom R20 ) & ( <* ( 0 ) *> ^ R11 ) = ( <* ( 0 ) *> ^ R10 ) & ( D91 . ( <* ( 0 ) *> ^ R11 ) ) = ( R20 . R10 ))) by L941 , L888 , L894 , L940 , TREES_2:def 11;
L943: ( <* ( 0 ) *> ^ R11 ) in ( dom D92 ) by L888 , L889 , L937 , L939 , TREES_1:def 9;
L944: (ex R13 being (FinSequence of ( NAT )) st (R13 in ( dom R21 ) & ( <* ( 0 ) *> ^ R11 ) = ( <* ( 0 ) *> ^ R13 ) & ( D92 . ( <* ( 0 ) *> ^ R11 ) ) = ( R21 . R13 ))) by L943 , L888 , L889 , L941 , TREES_2:def 11;
L945: (not <* 1 *> is_a_proper_prefix_of ( <* ( 0 ) *> ^ R11 )) by L19;
L946: ( <* ( 0 ) *> ^ R11 ) in ( dom ( R20 '&' R22 ) ) by L945 , L895 , L896 , L940 , TREES_1:def 9;
L947:
now
given R10 being (FinSequence of ( NAT )) such that
L948: R10 in ( dom R22 )
and
L949: ( <* ( 0 ) *> ^ R11 ) = ( <* 1 *> ^ R10 )
and
L950: ( ( R20 '&' R22 ) . ( <* ( 0 ) *> ^ R11 ) ) = ( R22 . R10 );

L951: <* ( 0 ) *> is_a_prefix_of ( <* 1 *> ^ R10 ) by L949 , TREES_1:1;
thus L952: contradiction by L951 , TREES_1:50;
end;
L953: ( ( R20 '&' R22 ) . ( <* ( 0 ) *> ^ R11 ) ) = ( D91 . ( <* ( 0 ) *> ^ R11 ) ) by L947 , L895 , L896 , L946 , TREES_2:def 11;
L954: ( R20 . R11 ) = ( ( R21 '&' R22 ) . ( <* ( 0 ) *> ^ R11 ) ) by L953 , L886 , L933 , L942 , FINSEQ_1:33;
L955:
now
given R10 being (FinSequence of ( NAT )) such that
L956: R10 in ( dom R23 )
and
L957: ( <* ( 0 ) *> ^ R11 ) = ( <* 1 *> ^ R10 )
and
L958: ( ( R21 '&' R23 ) . ( <* ( 0 ) *> ^ R11 ) ) = ( R23 . R10 );

L959: <* ( 0 ) *> is_a_prefix_of ( <* 1 *> ^ R10 ) by L957 , TREES_1:1;
thus L960: contradiction by L959 , TREES_1:50;
end;
L961: ( ( R21 '&' R23 ) . ( <* ( 0 ) *> ^ R11 ) ) = ( D92 . ( <* ( 0 ) *> ^ R11 ) ) by L955 , L886 , L893 , L897 , L946 , TREES_2:def 11;
thus L962: thesis by L961 , L933 , L954 , L944 , FINSEQ_1:33;
end;
thus L963: thesis by L938 , L886 , L891 , L922 , L935 , L936 , L923 , L40 , TREES_2:31;
end;
definition
func VERUM -> MP-wff equals 
( ( elementary_tree ( 0 ) ) --> [ ( 0 ) , ( 0 ) ] );
coherence by L851;
end;
theorem
L965: (for R20 being MP-wff holds (( card ( dom R20 ) ) = 1 implies (R20 = ( VERUM ) or (ex R18 being MP-variable st R20 = ( @ R18 )))))
proof
let R20 being MP-wff;
assume L966: ( card ( dom R20 ) ) = 1;
consider R1 being set such that L967: ( dom R20 ) = { R1 } by L966 , CARD_2:42;
reconsider D93 = R1 as (Element of ( dom R20 )) by L967 , TARSKI:def 1;
L968: ( {} ) in ( dom R20 ) by TREES_1:22;
L969: ( dom R20 ) = ( elementary_tree ( 0 ) ) by L968 , L967 , TARSKI:def 1 , TREES_1:29;
L970: ( dom R20 ) = { ( {} ) } by L968 , L967 , TARSKI:def 1;
L971: ( succ D93 ) = ( {} )
proof
set D94 = the (Element of ( succ D93 ));
assume L972: (not thesis);
L973: D94 in ( succ D93 ) by L972;
L974: ( succ D93 ) = { ( D93 ^ <* R6 *> ) where R6 is (Element of ( NAT )) : ( D93 ^ <* R6 *> ) in ( dom R20 ) } by TREES_2:def 5;
L975: (ex R6 being (Element of ( NAT )) st (D94 = ( D93 ^ <* R6 *> ) & ( D93 ^ <* R6 *> ) in ( dom R20 ))) by L974 , L973;
thus L976: contradiction by L975 , L970 , TARSKI:def 1;
end;
L977: ( branchdeg D93 ) = ( 0 ) by L971 , CARD_1:27 , TREES_2:def 12;
L978:
now
per cases  by L977 , L537;
suppose L979: ( R20 . D93 ) = [ ( 0 ) , ( 0 ) ];

L980: (for R5 being set holds (R5 in ( dom R20 ) implies ( R20 . R5 ) = [ ( 0 ) , ( 0 ) ])) by L979 , L967 , TARSKI:def 1;
thus L981: thesis by L980 , L969 , FUNCOP_1:11;
end;
suppose L982: (ex R6 being (Element of ( NAT )) st ( R20 . D93 ) = [ 3 , R6 ]);

consider R6 being (Element of ( NAT )) such that L983: ( R20 . D93 ) = [ 3 , R6 ] by L982;
reconsider D95 = [ 3 , R6 ] as MP-variable by ZFMISC_1:105;
L984: (for R5 being set holds (R5 in ( dom R20 ) implies ( R20 . R5 ) = [ 3 , R6 ])) by L967 , L983 , TARSKI:def 1;
L985: R20 = ( @ D95 ) by L984 , L969 , FUNCOP_1:11;
thus L986: thesis by L985;
end;
end;
thus L988: thesis by L978;
end;
theorem
L989: (for R20 being MP-wff holds (( card ( dom R20 ) ) >= 2 implies ((ex R22 being MP-wff st (R20 = ( 'not' R22 ) or R20 = ( (#) R22 ))) or (ex R22 being MP-wff st (ex R24 being MP-wff st R20 = ( R22 '&' R24 ))))))
proof
let R20 being MP-wff;
set D96 = ( branchdeg ( Root ( dom R20 ) ) );
set D97 = ( Root ( dom R20 ) );
assume L990: ( card ( dom R20 ) ) >= 2;
L991:
now
assume L992: D96 = ( 0 );
L993: ( card ( dom R20 ) ) = 1 by L992 , L226;
thus L994: contradiction by L993 , L990;
end;
L995: D96 <= 2 by L537;
L996:
now
per cases  by L995 , L991 , NAT_1:26;
case L997: D96 = 1;
L998: ( card ( succ D97 ) ) = 1 by L997 , TREES_2:def 12;
consider R1 being set such that L999: ( succ D97 ) = { R1 } by L998 , CARD_2:42;
L1000: R1 in ( succ D97 ) by L999 , TARSKI:def 1;
reconsider D98 = R1 as (Element of ( dom R20 )) by L1000;
take D99 = ( R20 | D98 );
L1001:
now
per cases  by L997 , L537;
suppose L1002: ( R20 . D97 ) = [ 1 , ( 0 ) ];

L1003: ( Root R20 ) = [ 1 , ( 0 ) ] by L1002;
thus L1004: (R20 = ( 'not' D99 ) or R20 = ( (#) D99 )) by L1003 , L999 , L393;
end;
suppose L1005: ( R20 . D97 ) = [ 1 , 1 ];

L1006: ( Root R20 ) = [ 1 , 1 ] by L1005;
thus L1007: (R20 = ( 'not' D99 ) or R20 = ( (#) D99 )) by L1006 , L999 , L393;
end;
end;
thus L1009: thesis by L1001;
end;
case L1010: D96 = 2;
L1011: ( succ D97 ) = { <* ( 0 ) *> , <* 1 *> } by L1010 , L263;
L1012: (<* ( 0 ) *> in ( succ D97 ) & <* 1 *> in ( succ D97 )) by L1011 , TARSKI:def 2;
reconsider D100 = <* ( 0 ) *> , D101 = <* 1 *> as (Element of ( dom R20 )) by L1012;
take D102 = ( R20 | D100 );
take D103 = ( R20 | D101 );
L1013: ( Root R20 ) = [ 2 , ( 0 ) ] by L1010 , L537;
L1014: R20 = ( D102 '&' D103 ) by L1013 , L1011 , L475;
thus L1015: thesis by L1014;
end;
end;
thus L1017: thesis by L996;
end;
theorem
L1018: (for R20 being MP-wff holds ( card ( dom R20 ) ) < ( card ( dom ( 'not' R20 ) ) ))
proof
let R20 being MP-wff;
set D104 = ( elementary_tree 1 );
L1019: <* ( 0 ) *> in D104 by TARSKI:def 2 , TREES_1:51;
L1020: <* ( 0 ) *> in ( dom ( D104 --> [ 1 , ( 0 ) ] ) ) by L1019 , FUNCOP_1:13;
L1021: ( dom ( 'not' R20 ) ) = ( ( dom ( D104 --> [ 1 , ( 0 ) ] ) ) with-replacement (<* ( 0 ) *> , ( dom R20 )) ) by L1020 , TREES_2:def 11;
reconsider D105 = <* ( 0 ) *> as (Element of ( dom ( 'not' R20 ) )) by L1021 , L1020 , TREES_1:def 9;
L1022:
now
let R11 being (FinSequence of ( NAT ));
thus L1023: (R11 in ( dom R20 ) implies ( D105 ^ R11 ) in ( dom ( 'not' R20 ) )) by L1020 , L1021 , TREES_1:def 9;
assume L1024: ( D105 ^ R11 ) in ( dom ( 'not' R20 ) );
L1025:
now
per cases ;
suppose L1026: R11 = ( {} );

thus L1027: R11 in ( dom R20 ) by L1026 , TREES_1:22;
end;
suppose L1028: R11 <> ( {} );

L1029: D105 is_a_proper_prefix_of ( D105 ^ R11 ) by L1028 , TREES_1:10;
L1030: (ex R10 being (FinSequence of ( NAT )) st (R10 in ( dom R20 ) & ( D105 ^ R11 ) = ( D105 ^ R10 ))) by L1029 , L1020 , L1021 , L1024 , TREES_1:def 9;
thus L1031: R11 in ( dom R20 ) by L1030 , FINSEQ_1:33;
end;
end;
thus L1033: R11 in ( dom R20 ) by L1025;
end;
L1034: ( dom R20 ) = ( ( dom ( 'not' R20 ) ) | D105 ) by L1022 , TREES_1:def 6;
L1035: D105 <> ( Root ( dom ( 'not' R20 ) ) );
thus L1036: thesis by L1035 , L1034 , L338;
end;
theorem
L1037: (for R20 being MP-wff holds ( card ( dom R20 ) ) < ( card ( dom ( (#) R20 ) ) ))
proof
let R20 being MP-wff;
set D106 = ( elementary_tree 1 );
L1038: <* ( 0 ) *> in D106 by TARSKI:def 2 , TREES_1:51;
L1039: <* ( 0 ) *> in ( dom ( D106 --> [ 1 , 1 ] ) ) by L1038 , FUNCOP_1:13;
L1040: ( dom ( (#) R20 ) ) = ( ( dom ( D106 --> [ 1 , 1 ] ) ) with-replacement (<* ( 0 ) *> , ( dom R20 )) ) by L1039 , TREES_2:def 11;
reconsider D107 = <* ( 0 ) *> as (Element of ( dom ( (#) R20 ) )) by L1040 , L1039 , TREES_1:def 9;
L1041:
now
let R11 being (FinSequence of ( NAT ));
thus L1042: (R11 in ( dom R20 ) implies ( D107 ^ R11 ) in ( dom ( (#) R20 ) )) by L1039 , L1040 , TREES_1:def 9;
assume L1043: ( D107 ^ R11 ) in ( dom ( (#) R20 ) );
L1044:
now
per cases ;
suppose L1045: R11 = ( {} );

thus L1046: R11 in ( dom R20 ) by L1045 , TREES_1:22;
end;
suppose L1047: R11 <> ( {} );

L1048: D107 is_a_proper_prefix_of ( D107 ^ R11 ) by L1047 , TREES_1:10;
L1049: (ex R10 being (FinSequence of ( NAT )) st (R10 in ( dom R20 ) & ( D107 ^ R11 ) = ( D107 ^ R10 ))) by L1048 , L1039 , L1040 , L1043 , TREES_1:def 9;
thus L1050: R11 in ( dom R20 ) by L1049 , FINSEQ_1:33;
end;
end;
thus L1052: R11 in ( dom R20 ) by L1044;
end;
L1053: ( dom R20 ) = ( ( dom ( (#) R20 ) ) | D107 ) by L1041 , TREES_1:def 6;
L1054: D107 <> ( Root ( dom ( (#) R20 ) ) );
thus L1055: thesis by L1054 , L1053 , L338;
end;
theorem
L1056: (for R20 being MP-wff holds (for R22 being MP-wff holds (( card ( dom R20 ) ) < ( card ( dom ( R20 '&' R22 ) ) ) & ( card ( dom R22 ) ) < ( card ( dom ( R20 '&' R22 ) ) ))))
proof
let R20 being MP-wff;
let R22 being MP-wff;
set D108 = ( elementary_tree 2 );
set D109 = ( ( D108 --> [ 2 , ( 0 ) ] ) with-replacement (<* ( 0 ) *> , R20) );
L1057: (not <* 1 *> is_a_proper_prefix_of <* ( 0 ) *>) by TREES_1:52;
L1058: (<* ( 0 ) *> in D108 & ( dom ( D108 --> [ 2 , ( 0 ) ] ) ) = D108) by FUNCOP_1:13 , TREES_1:28;
L1059: ( dom D109 ) = ( ( dom ( D108 --> [ 2 , ( 0 ) ] ) ) with-replacement (<* ( 0 ) *> , ( dom R20 )) ) by L1058 , TREES_2:def 11;
L1060: (<* 1 *> in D108 & (not <* ( 0 ) *> is_a_proper_prefix_of <* 1 *>)) by TREES_1:28 , TREES_1:52;
L1061: <* 1 *> in ( dom D109 ) by L1060 , L1058 , L1059 , TREES_1:def 9;
L1062: ( dom ( R20 '&' R22 ) ) = ( ( dom D109 ) with-replacement (<* 1 *> , ( dom R22 )) ) by L1061 , TREES_2:def 11;
reconsider D110 = <* 1 *> as (Element of ( dom ( R20 '&' R22 ) )) by L1062 , L1061 , TREES_1:def 9;
L1063: <* ( 0 ) *> in ( dom D109 ) by L1058 , L1059 , TREES_1:def 9;
reconsider D111 = <* ( 0 ) *> as (Element of ( dom ( R20 '&' R22 ) )) by L1063 , L1061 , L1062 , L1057 , TREES_1:def 9;
L1064:
now
let R11 being (FinSequence of ( NAT ));
thus L1065: (R11 in ( dom R20 ) implies ( D111 ^ R11 ) in ( dom ( R20 '&' R22 ) ))
proof
assume L1066: R11 in ( dom R20 );
L1067: ( D111 ^ R11 ) in ( dom D109 ) by L1066 , L1058 , L1059 , TREES_1:def 9;
L1068: (not <* 1 *> is_a_proper_prefix_of ( D111 ^ R11 )) by L19;
thus L1069: thesis by L1068 , L1061 , L1062 , L1067 , TREES_1:def 9;
end;

assume L1070: ( D111 ^ R11 ) in ( dom ( R20 '&' R22 ) );
L1071:
now
per cases ;
suppose L1072: R11 = ( {} );

thus L1073: R11 in ( dom R20 ) by L1072 , TREES_1:22;
end;
suppose L1074: R11 <> ( {} );

L1075:
now
given R10 being (FinSequence of ( NAT )) such that
L1076: R10 in ( dom R22 )
and
L1077: ( D111 ^ R11 ) = ( <* 1 *> ^ R10 );

L1078: D111 is_a_prefix_of ( <* 1 *> ^ R10 ) by L1077 , TREES_1:1;
thus L1079: contradiction by L1078 , TREES_1:50;
end;
L1080: ( D111 ^ R11 ) in ( dom D109 ) by L1075 , L1061 , L1062 , L1070 , TREES_1:def 9;
L1081: D111 is_a_proper_prefix_of ( D111 ^ R11 ) by L1074 , TREES_1:10;
L1082: (ex R10 being (FinSequence of ( NAT )) st (R10 in ( dom R20 ) & ( D111 ^ R11 ) = ( D111 ^ R10 ))) by L1081 , L1058 , L1059 , L1080 , TREES_1:def 9;
thus L1083: R11 in ( dom R20 ) by L1082 , FINSEQ_1:33;
end;
end;
thus L1085: R11 in ( dom R20 ) by L1071;
end;
L1086: ( dom R20 ) = ( ( dom ( R20 '&' R22 ) ) | D111 ) by L1064 , TREES_1:def 6;
L1087:
now
let R11 being (FinSequence of ( NAT ));
thus L1088: (R11 in ( dom R22 ) implies ( D110 ^ R11 ) in ( dom ( R20 '&' R22 ) )) by L1061 , L1062 , TREES_1:def 9;
assume L1089: ( D110 ^ R11 ) in ( dom ( R20 '&' R22 ) );
L1090:
now
per cases ;
suppose L1091: R11 = ( {} );

thus L1092: R11 in ( dom R22 ) by L1091 , TREES_1:22;
end;
suppose L1093: R11 <> ( {} );

L1094: <* 1 *> is_a_proper_prefix_of ( D110 ^ R11 ) by L1093 , TREES_1:10;
L1095: (ex R10 being (FinSequence of ( NAT )) st (R10 in ( dom R22 ) & ( D110 ^ R11 ) = ( <* 1 *> ^ R10 ))) by L1094 , L1061 , L1062 , L1089 , TREES_1:def 9;
thus L1096: R11 in ( dom R22 ) by L1095 , FINSEQ_1:33;
end;
end;
thus L1098: R11 in ( dom R22 ) by L1090;
end;
L1099: ( dom R22 ) = ( ( dom ( R20 '&' R22 ) ) | D110 ) by L1087 , TREES_1:def 6;
L1100: D111 <> ( Root ( dom ( R20 '&' R22 ) ) );
thus L1101: ( card ( dom R20 ) ) < ( card ( dom ( R20 '&' R22 ) ) ) by L1100 , L1086 , L338;
L1102: D110 <> ( Root ( dom ( R20 '&' R22 ) ) );
thus L1103: thesis by L1102 , L1099 , L338;
end;
definition
let C81 being MP-wff;
attr C81 is  atomic
means
:L1104: (ex R18 being MP-variable st C81 = ( @ R18 ));
attr C81 is  negative
means
:L1105: (ex R20 being MP-wff st C81 = ( 'not' R20 ));
attr C81 is  necessitive
means
:L1106: (ex R20 being MP-wff st C81 = ( (#) R20 ));
attr C81 is  conjunctive
means
:L1107: (ex R20 being MP-wff st (ex R22 being MP-wff st C81 = ( R20 '&' R22 )));
end;
registration
cluster  atomic for MP-wff;
existence
proof
reconsider D112 = [ 3 , ( 0 ) ] as MP-variable by ZFMISC_1:105;
take ( @ D112 );
take D112;
thus L1109: thesis;
end;
cluster  negative for MP-wff;
existence
proof
set D113 = ( VERUM );
take ( 'not' D113 );
take D113;
thus L1110: thesis;
end;
cluster  necessitive for MP-wff;
existence
proof
set D114 = ( VERUM );
take ( (#) D114 );
take D114;
thus L1111: thesis;
end;
cluster  conjunctive for MP-wff;
existence
proof
set D115 = ( VERUM );
set D116 = ( VERUM );
take ( D116 '&' D115 );
take D115;
take D116;
thus L1112: thesis;
end;
end;
scheme MPInd { P1[(Element of ( MP-WFF ))] } : (for B81 being (Element of ( MP-WFF )) holds P1[ B81 ])
provided
L1114: P1[ ( VERUM ) ]
and
L1115: (for B82 being MP-variable holds P1[ ( @ B82 ) ])
and
L1116: (for B83 being (Element of ( MP-WFF )) holds (P1[ B83 ] implies P1[ ( 'not' B83 ) ]))
and
L1117: (for B84 being (Element of ( MP-WFF )) holds (P1[ B84 ] implies P1[ ( (#) B84 ) ]))
and
L1118: (for B85 , B86 being (Element of ( MP-WFF )) holds ((P1[ B85 ] & P1[ B86 ]) implies P1[ ( B85 '&' B86 ) ]))
proof
defpred S4[ (Element of ( NAT )) ] means (for R20 being MP-wff holds (( card ( dom R20 ) ) <= $1 implies P1[ R20 ]));
L1119: (for R8 being (Element of ( NAT )) holds (S4[ R8 ] implies S4[ ( R8 + 1 ) ]))
proof
let R8 being (Element of ( NAT ));
assume that
L1120: (for R20 being MP-wff holds (( card ( dom R20 ) ) <= R8 implies P1[ R20 ]));
let R20 being MP-wff;
assume that
L1121: ( card ( dom R20 ) ) <= ( R8 + 1 );
set D117 = ( Root ( dom R20 ) );
set D118 = ( branchdeg D117 );
L1122: D118 <= 2 by L537;
L1123:
now
per cases  by L1122 , NAT_1:26;
suppose L1124: D118 = ( 0 );

L1125: ( card ( dom R20 ) ) = 1 by L1124 , L226;
L1126:
now
per cases  by L1125 , L965;
suppose L1127: R20 = ( VERUM );

thus L1128: thesis by L1127 , L1114;
end;
suppose L1129: (ex R18 being MP-variable st R20 = ( @ R18 ));

thus L1130: thesis by L1129 , L1115;
end;
end;
thus L1132: thesis by L1126;
end;
suppose L1133: D118 = 1;

L1134: ( succ D117 ) = { <* ( 0 ) *> } by L1133 , L245;
L1135: <* ( 0 ) *> in ( succ D117 ) by L1134 , TARSKI:def 1;
reconsider D119 = <* ( 0 ) *> as (Element of ( dom R20 )) by L1135;
L1136: R20 = ( ( ( elementary_tree 1 ) --> ( Root R20 ) ) with-replacement (<* ( 0 ) *> , ( R20 | D119 )) ) by L1134 , L393;
L1137:
now
per cases  by L1133 , L537;
suppose L1138: ( R20 . D117 ) = [ 1 , ( 0 ) ];

L1139: (( dom ( R20 | D119 ) ) = ( ( dom R20 ) | D119 ) & D119 <> ( Root ( dom R20 ) )) by TREES_2:def 10;
L1140: ( card ( dom ( R20 | D119 ) ) ) < ( R8 + 1 ) by L1139 , L1121 , L338 , XXREAL_0:2;
L1141: ( card ( dom ( R20 | D119 ) ) ) <= R8 by L1140 , NAT_1:13;
L1142: R20 = ( 'not' ( R20 | D119 ) ) by L1136 , L1138;
thus L1143: thesis by L1142 , L1116 , L1120 , L1141;
end;
suppose L1144: ( R20 . D117 ) = [ 1 , 1 ];

L1145: (( dom ( R20 | D119 ) ) = ( ( dom R20 ) | D119 ) & D119 <> ( Root ( dom R20 ) )) by TREES_2:def 10;
L1146: ( card ( dom ( R20 | D119 ) ) ) < ( R8 + 1 ) by L1145 , L1121 , L338 , XXREAL_0:2;
L1147: ( card ( dom ( R20 | D119 ) ) ) <= R8 by L1146 , NAT_1:13;
L1148: R20 = ( (#) ( R20 | D119 ) ) by L1136 , L1144;
thus L1149: thesis by L1148 , L1117 , L1120 , L1147;
end;
end;
thus L1151: thesis by L1137;
end;
suppose L1152: D118 = 2;

L1153: ( succ D117 ) = { <* ( 0 ) *> , <* 1 *> } by L1152 , L263;
L1154: (<* ( 0 ) *> in ( succ D117 ) & <* 1 *> in ( succ D117 )) by L1153 , TARSKI:def 2;
reconsider D120 = <* ( 0 ) *> , D121 = <* 1 *> as (Element of ( dom R20 )) by L1154;
L1155: (( dom ( R20 | D120 ) ) = ( ( dom R20 ) | D120 ) & D120 <> ( Root ( dom R20 ) )) by TREES_2:def 10;
L1156: ( card ( dom ( R20 | D120 ) ) ) < ( R8 + 1 ) by L1155 , L1121 , L338 , XXREAL_0:2;
L1157: ( card ( dom ( R20 | D120 ) ) ) <= R8 by L1156 , NAT_1:13;
L1158: P1[ ( R20 | D120 ) ] by L1157 , L1120;
L1159: (( dom ( R20 | D121 ) ) = ( ( dom R20 ) | D121 ) & D121 <> ( Root ( dom R20 ) )) by TREES_2:def 10;
L1160: ( card ( dom ( R20 | D121 ) ) ) < ( R8 + 1 ) by L1159 , L1121 , L338 , XXREAL_0:2;
L1161: ( card ( dom ( R20 | D121 ) ) ) <= R8 by L1160 , NAT_1:13;
L1162: P1[ ( R20 | D121 ) ] by L1161 , L1120;
L1163: R20 = ( ( ( ( elementary_tree 2 ) --> ( Root R20 ) ) with-replacement (<* ( 0 ) *> , ( R20 | D120 )) ) with-replacement (<* 1 *> , ( R20 | D121 )) ) by L1153 , L475;
L1164: R20 = ( ( R20 | D120 ) '&' ( R20 | D121 ) ) by L1163 , L1152 , L537;
thus L1165: thesis by L1164 , L1118 , L1158 , L1162;
end;
end;
thus L1167: thesis by L1123;
end;
let R20 being MP-wff;
L1168: ( card ( dom R20 ) ) <= ( card ( dom R20 ) );
L1169: S4[ ( 0 ) ] by NAT_1:2;
L1170: (for R6 being (Element of ( NAT )) holds S4[ R6 ]) from NAT_1:sch 1(L1169 , L1119);
thus L1171: thesis by L1170 , L1168;
end;
theorem
L1172: (for B87 being (Element of ( MP-WFF )) holds (B87 = ( VERUM ) or B87 is  atomic  atomic  atomic  atomic MP-wff or B87 is  negative  negative  negative  negative MP-wff or B87 is  necessitive  necessitive  necessitive  necessitive MP-wff or B87 is  conjunctive  conjunctive  conjunctive  conjunctive MP-wff))
proof
defpred S5[ (Element of ( MP-WFF )) ] means ($1 = ( VERUM ) or $1 is  atomic  atomic  atomic  atomic MP-wff or $1 is  negative  negative  negative  negative MP-wff or $1 is  necessitive  necessitive  necessitive  necessitive MP-wff or $1 is  conjunctive  conjunctive  conjunctive  conjunctive MP-wff);
L1173: S5[ ( VERUM ) ];
L1174: (for B88 being (Element of ( MP-WFF )) holds (S5[ B88 ] implies S5[ ( 'not' B88 ) ])) by L1105;
L1175: (for B89 , B90 being (Element of ( MP-WFF )) holds ((S5[ B89 ] & S5[ B90 ]) implies S5[ ( B89 '&' B90 ) ])) by L1107;
L1176: (for B91 being (Element of ( MP-WFF )) holds (S5[ B91 ] implies S5[ ( (#) B91 ) ])) by L1106;
L1177: (for B92 being MP-variable holds S5[ ( @ B92 ) ]) by L1104;
thus L1178: (for B93 being (Element of ( MP-WFF )) holds S5[ B93 ]) from MPInd(L1173 , L1177 , L1174 , L1176 , L1175);
end;
theorem
L1179: (for R20 being MP-wff holds (R20 = ( VERUM ) or (ex R18 being MP-variable st R20 = ( @ R18 )) or (ex R22 being MP-wff st R20 = ( 'not' R22 )) or (ex R22 being MP-wff st R20 = ( (#) R22 )) or (ex R22 being MP-wff st (ex R24 being MP-wff st R20 = ( R22 '&' R24 )))))
proof
let R20 being MP-wff;
L1180:
now
per cases  by NAT_1:26;
suppose L1181: ( card ( dom R20 ) ) = 1;

thus L1182: thesis by L1181 , L965;
end;
suppose L1183: ( card ( dom R20 ) ) >= 2;

thus L1184: thesis by L1183 , L989;
end;
end;
thus L1186: thesis by L1180;
end;
theorem
L1187: (for R18 being MP-variable holds (for R20 being MP-wff holds (for R22 being MP-wff holds (( @ R18 ) <> ( 'not' R20 ) & ( @ R18 ) <> ( (#) R20 ) & ( @ R18 ) <> ( R20 '&' R22 )))))
proof
let R18 being MP-variable;
let R20 being MP-wff;
let R22 being MP-wff;
set D122 = ( elementary_tree 2 );
set D123 = ( elementary_tree 1 );
set D124 = ( elementary_tree ( 0 ) );
L1188: ( dom ( @ R18 ) ) = D124 by FUNCOP_1:13;
L1189: <* ( 0 ) *> in D123 by TARSKI:def 2 , TREES_1:51;
L1190: ( dom ( D123 --> [ 1 , ( 0 ) ] ) ) = D123 by FUNCOP_1:13;
L1191: ( dom ( 'not' R20 ) ) = ( D123 with-replacement (<* ( 0 ) *> , ( dom R20 )) ) by L1190 , L1189 , TREES_2:def 11;
L1192: <* ( 0 ) *> in ( dom ( 'not' R20 ) ) by L1191 , L1189 , TREES_1:def 9;
thus L1193: ( @ R18 ) <> ( 'not' R20 ) by L1192 , L1188 , TARSKI:def 1 , TREES_1:29;
L1194: ( dom ( D123 --> [ 1 , 1 ] ) ) = D123 by FUNCOP_1:13;
L1195: ( dom ( (#) R20 ) ) = ( D123 with-replacement (<* ( 0 ) *> , ( dom R20 )) ) by L1194 , L1189 , TREES_2:def 11;
L1196: <* ( 0 ) *> in ( dom ( (#) R20 ) ) by L1195 , L1189 , TREES_1:def 9;
thus L1197: ( @ R18 ) <> ( (#) R20 ) by L1196 , L1188 , TARSKI:def 1 , TREES_1:29;
set D125 = ( ( D122 --> [ 2 , ( 0 ) ] ) with-replacement (<* ( 0 ) *> , R20) );
L1198: (<* 1 *> in D122 & (not <* ( 0 ) *> is_a_proper_prefix_of <* 1 *>)) by TREES_1:28 , TREES_1:52;
L1199: (<* ( 0 ) *> in D122 & ( dom ( D122 --> [ 2 , ( 0 ) ] ) ) = D122) by FUNCOP_1:13 , TREES_1:28;
L1200: ( dom D125 ) = ( ( dom ( D122 --> [ 2 , ( 0 ) ] ) ) with-replacement (<* ( 0 ) *> , ( dom R20 )) ) by L1199 , TREES_2:def 11;
L1201: <* 1 *> in ( dom D125 ) by L1200 , L1199 , L1198 , TREES_1:def 9;
L1202: ( dom ( R20 '&' R22 ) ) = ( ( dom D125 ) with-replacement (<* 1 *> , ( dom R22 )) ) by L1201 , TREES_2:def 11;
L1203: <* 1 *> in ( dom ( R20 '&' R22 ) ) by L1202 , L1201 , TREES_1:def 9;
thus L1204: thesis by L1203 , L1188 , TARSKI:def 1 , TREES_1:29;
end;
theorem
L1205: (for R20 being MP-wff holds (for R22 being MP-wff holds (for R24 being MP-wff holds (( 'not' R20 ) <> ( (#) R22 ) & ( 'not' R20 ) <> ( R22 '&' R24 )))))
proof
let R20 being MP-wff;
let R22 being MP-wff;
let R24 being MP-wff;
set D126 = ( elementary_tree 2 );
set D127 = ( elementary_tree 1 );
set D128 = ( D127 --> [ 1 , ( 0 ) ] );
set D129 = ( D127 --> [ 1 , 1 ] );
reconsider D130 = ( {} ) as (Element of ( dom ( 'not' R20 ) )) by TREES_1:22;
L1206: (( {} ) in ( dom ( (#) R22 ) ) & (not (ex R13 being (FinSequence of ( NAT )) st (R13 in ( dom R22 ) & D130 = ( <* ( 0 ) *> ^ R13 ) & ( ( (#) R22 ) . D130 ) = ( R22 . R13 ))))) by TREES_1:22;
L1207: <* ( 0 ) *> in D127 by TARSKI:def 2 , TREES_1:51;
L1208: <* ( 0 ) *> in ( dom D128 ) by L1207 , FUNCOP_1:13;
L1209: ( dom ( 'not' R20 ) ) = ( ( dom D128 ) with-replacement (<* ( 0 ) *> , ( dom R20 )) ) by L1208 , TREES_2:def 11;
L1210: <* ( 0 ) *> in ( dom D129 ) by L1207 , FUNCOP_1:13;
L1211: ( dom ( (#) R22 ) ) = ( ( dom D129 ) with-replacement (<* ( 0 ) *> , ( dom R22 )) ) by L1210 , TREES_2:def 11;
L1212: ( ( (#) R22 ) . D130 ) = ( D129 . D130 ) by L1211 , L1210 , L1206 , TREES_2:def 11;
L1213: D130 in D127 by TREES_1:22;
L1214: (( D128 . D130 ) = [ 1 , ( 0 ) ] & ( D129 . D130 ) = [ 1 , 1 ]) by L1213 , FUNCOP_1:7;
L1215: ((not (ex R13 being (FinSequence of ( NAT )) st (R13 in ( dom R20 ) & D130 = ( <* ( 0 ) *> ^ R13 ) & ( ( 'not' R20 ) . D130 ) = ( R20 . R13 )))) & [ 1 , ( 0 ) ] <> [ 1 , 1 ]) by XTUPLE_0:1;
thus L1216: ( 'not' R20 ) <> ( (#) R22 ) by L1215 , L1208 , L1209 , L1212 , L1214 , TREES_2:def 11;
set D131 = ( ( D126 --> [ 2 , ( 0 ) ] ) with-replacement (<* ( 0 ) *> , R22) );
L1217: (<* 1 *> in D126 & (not <* ( 0 ) *> is_a_proper_prefix_of <* 1 *>)) by TREES_1:28 , TREES_1:52;
L1218: (<* ( 0 ) *> in D126 & ( dom ( D126 --> [ 2 , ( 0 ) ] ) ) = D126) by FUNCOP_1:13 , TREES_1:28;
L1219: ( dom D131 ) = ( ( dom ( D126 --> [ 2 , ( 0 ) ] ) ) with-replacement (<* ( 0 ) *> , ( dom R22 )) ) by L1218 , TREES_2:def 11;
L1220: <* 1 *> in ( dom D131 ) by L1219 , L1218 , L1217 , TREES_1:def 9;
L1221: ( dom ( R22 '&' R24 ) ) = ( ( dom D131 ) with-replacement (<* 1 *> , ( dom R24 )) ) by L1220 , TREES_2:def 11;
L1222: <* 1 *> in ( dom ( R22 '&' R24 ) ) by L1221 , L1220 , TREES_1:def 9;
L1223:
now
assume L1224: <* 1 *> in ( dom D128 );
L1225: (<* 1 *> = ( {} ) or <* 1 *> = <* ( 0 ) *>) by L1224 , TARSKI:def 2 , TREES_1:51;
thus L1226: contradiction by L1225 , TREES_1:3;
end;
assume L1227: (not thesis);
L1228: (ex R11 being (FinSequence of ( NAT )) st (R11 in ( dom R20 ) & <* 1 *> = ( <* ( 0 ) *> ^ R11 ))) by L1227 , L1208 , L1209 , L1222 , L1223 , TREES_1:def 9;
L1229: <* ( 0 ) *> is_a_prefix_of <* 1 *> by L1228 , TREES_1:1;
thus L1230: contradiction by L1229 , TREES_1:3;
end;
theorem
L1231: (for R20 being MP-wff holds (for R22 being MP-wff holds (for R24 being MP-wff holds ( (#) R20 ) <> ( R22 '&' R24 ))))
proof
let R20 being MP-wff;
let R22 being MP-wff;
let R24 being MP-wff;
set D132 = ( elementary_tree 2 );
set D133 = ( elementary_tree 1 );
set D134 = ( D133 --> [ 1 , 1 ] );
set D135 = ( ( D132 --> [ 2 , ( 0 ) ] ) with-replacement (<* ( 0 ) *> , R22) );
L1232: (<* 1 *> in D132 & (not <* ( 0 ) *> is_a_proper_prefix_of <* 1 *>)) by TREES_1:28 , TREES_1:52;
L1233: (<* ( 0 ) *> in D132 & ( dom ( D132 --> [ 2 , ( 0 ) ] ) ) = D132) by FUNCOP_1:13 , TREES_1:28;
L1234: ( dom D135 ) = ( ( dom ( D132 --> [ 2 , ( 0 ) ] ) ) with-replacement (<* ( 0 ) *> , ( dom R22 )) ) by L1233 , TREES_2:def 11;
L1235: <* 1 *> in ( dom D135 ) by L1234 , L1233 , L1232 , TREES_1:def 9;
L1236: ( dom ( R22 '&' R24 ) ) = ( ( dom D135 ) with-replacement (<* 1 *> , ( dom R24 )) ) by L1235 , TREES_2:def 11;
L1237: <* 1 *> in ( dom ( R22 '&' R24 ) ) by L1236 , L1235 , TREES_1:def 9;
assume L1238: (not thesis);
L1239:
now
assume L1240: <* 1 *> in ( dom D134 );
L1241: (<* 1 *> = ( {} ) or <* 1 *> = <* ( 0 ) *>) by L1240 , TARSKI:def 2 , TREES_1:51;
thus L1242: contradiction by L1241 , TREES_1:3;
end;
L1243: <* ( 0 ) *> in D133 by TARSKI:def 2 , TREES_1:51;
L1244: <* ( 0 ) *> in ( dom D134 ) by L1243 , FUNCOP_1:13;
L1245: ( dom ( (#) R20 ) ) = ( ( dom D134 ) with-replacement (<* ( 0 ) *> , ( dom R20 )) ) by L1244 , TREES_2:def 11;
L1246: (ex R11 being (FinSequence of ( NAT )) st (R11 in ( dom R20 ) & <* 1 *> = ( <* ( 0 ) *> ^ R11 ))) by L1245 , L1244 , L1237 , L1239 , L1238 , TREES_1:def 9;
L1247: <* ( 0 ) *> is_a_prefix_of <* 1 *> by L1246 , TREES_1:1;
thus L1248: contradiction by L1247 , TREES_1:3;
end;
L1249: (for R20 being MP-wff holds (for R22 being MP-wff holds (( VERUM ) <> ( 'not' R20 ) & ( VERUM ) <> ( (#) R20 ) & ( VERUM ) <> ( R20 '&' R22 ))))
proof
let R20 being MP-wff;
let R22 being MP-wff;
set D136 = ( elementary_tree 2 );
set D137 = ( elementary_tree 1 );
L1250: ( dom ( VERUM ) ) = ( elementary_tree ( 0 ) ) by FUNCOP_1:13;
set D138 = ( D137 --> [ 1 , 1 ] );
set D139 = ( D137 --> [ 1 , ( 0 ) ] );
L1251: <* ( 0 ) *> in D137 by TARSKI:def 2 , TREES_1:51;
L1252: <* ( 0 ) *> in ( dom D139 ) by L1251 , FUNCOP_1:13;
L1253: (( dom D139 ) = D137 & ( dom ( 'not' R20 ) ) = ( ( dom D139 ) with-replacement (<* ( 0 ) *> , ( dom R20 )) )) by L1252 , FUNCOP_1:13 , TREES_2:def 11;
L1254: <* ( 0 ) *> in ( dom ( 'not' R20 ) ) by L1253 , L1251 , TREES_1:def 9;
thus L1255: ( VERUM ) <> ( 'not' R20 ) by L1254 , L1250 , TARSKI:def 1 , TREES_1:29;
L1256: <* ( 0 ) *> in ( dom D138 ) by L1251 , FUNCOP_1:13;
L1257: (( dom D138 ) = D137 & ( dom ( (#) R20 ) ) = ( ( dom D138 ) with-replacement (<* ( 0 ) *> , ( dom R20 )) )) by L1256 , FUNCOP_1:13 , TREES_2:def 11;
L1258: <* ( 0 ) *> in ( dom ( (#) R20 ) ) by L1257 , L1251 , TREES_1:def 9;
thus L1259: ( VERUM ) <> ( (#) R20 ) by L1258 , L1250 , TARSKI:def 1 , TREES_1:29;
set D140 = ( ( D136 --> [ 2 , ( 0 ) ] ) with-replacement (<* ( 0 ) *> , R20) );
L1260: (<* 1 *> in D136 & (not <* ( 0 ) *> is_a_proper_prefix_of <* 1 *>)) by TREES_1:28 , TREES_1:52;
L1261: (<* ( 0 ) *> in D136 & ( dom ( D136 --> [ 2 , ( 0 ) ] ) ) = D136) by FUNCOP_1:13 , TREES_1:28;
L1262: ( dom D140 ) = ( ( dom ( D136 --> [ 2 , ( 0 ) ] ) ) with-replacement (<* ( 0 ) *> , ( dom R20 )) ) by L1261 , TREES_2:def 11;
L1263: <* 1 *> in ( dom D140 ) by L1262 , L1261 , L1260 , TREES_1:def 9;
L1264: ( dom ( R20 '&' R22 ) ) = ( ( dom D140 ) with-replacement (<* 1 *> , ( dom R22 )) ) by L1263 , TREES_2:def 11;
L1265: <* 1 *> in ( dom ( R20 '&' R22 ) ) by L1264 , L1263 , TREES_1:def 9;
assume L1266: (not thesis);
thus L1267: contradiction by L1266 , L1250 , L1265 , TARSKI:def 1 , TREES_1:29;
end;
L1268: [ ( 0 ) , ( 0 ) ] is MP-conective
proof
L1269: ( 0 ) in { ( 0 ) , 1 , 2 } by ENUMSET1:def 1;
thus L1270: thesis by L1269 , ZFMISC_1:87;
end;
L1271: (for R18 being MP-variable holds ( VERUM ) <> ( @ R18 ))
proof
let R18 being MP-variable;
assume L1272: (not thesis);
L1273: (( rng ( @ R18 ) ) = { R18 } & ( rng ( VERUM ) ) = { [ ( 0 ) , ( 0 ) ] }) by FUNCOP_1:8;
L1274: [ ( 0 ) , ( 0 ) ] in { R18 } by L1273 , L1272 , TARSKI:def 1;
thus L1275: contradiction by L1274 , L1268 , L525 , XBOOLE_0:3;
end;
theorem
L1276: (for R18 being MP-variable holds (for R20 being MP-wff holds (for R22 being MP-wff holds (( VERUM ) <> ( @ R18 ) & ( VERUM ) <> ( 'not' R20 ) & ( VERUM ) <> ( (#) R20 ) & ( VERUM ) <> ( R20 '&' R22 ))))) by L1249 , L1271;
scheme MPFuncEx { F1() -> non  empty set , F2() -> (Element of F1()) , F3((Element of ( MP-variables ))) -> (Element of F1()) , F4 , F5((Element of F1())) -> (Element of F1()) , F6((Element of F1()) , (Element of F1())) -> (Element of F1()) } : (ex B94 being (Function of ( MP-WFF ) , F1()) st (( B94 . ( VERUM ) ) = F2() & (for B95 being MP-variable holds ( B94 . ( @ B95 ) ) = F3(B95)) & (for B96 being (Element of ( MP-WFF )) holds ( B94 . ( 'not' B96 ) ) = F4(( B94 . B96 ))) & (for B97 being (Element of ( MP-WFF )) holds ( B94 . ( (#) B97 ) ) = F5(( B94 . B97 ))) & (for B98 , B99 being (Element of ( MP-WFF )) holds ( B94 . ( B98 '&' B99 ) ) = F6(( B94 . B98 ) , ( B94 . B99 )))))
proof
defpred S6[ (Function of ( MP-WFF ) , F1()) , (Element of ( NAT )) ] means (for R20 being MP-wff holds (( card ( dom R20 ) ) <= $2 implies ((R20 = ( VERUM ) implies ( $1 . R20 ) = F2()) & (for R18 being MP-variable holds (R20 = ( @ R18 ) implies ( $1 . R20 ) = F3(R18))) & (for R22 being MP-wff holds (R20 = ( 'not' R22 ) implies ( $1 . R20 ) = F4(( $1 . R22 )))) & (for R22 being MP-wff holds (R20 = ( (#) R22 ) implies ( $1 . R20 ) = F5(( $1 . R22 )))) & (for R22 being MP-wff holds (for R24 being MP-wff holds (R20 = ( R22 '&' R24 ) implies ( $1 . R20 ) = F6(( $1 . R22 ) , ( $1 . R24 ))))))));
defpred S7[ (Element of F1()) , (Function of ( MP-WFF ) , F1()) , (Element of ( MP-WFF )) ] means (($3 = ( VERUM ) implies $1 = F2()) & (for R18 being MP-variable holds ($3 = ( @ R18 ) implies $1 = F3(R18))) & (for R20 being MP-wff holds ($3 = ( 'not' R20 ) implies $1 = F4(( $2 . R20 )))) & (for R20 being MP-wff holds ($3 = ( (#) R20 ) implies $1 = F5(( $2 . R20 )))) & (for R20 being MP-wff holds (for R22 being MP-wff holds ($3 = ( R20 '&' R22 ) implies $1 = F6(( $2 . R20 ) , ( $2 . R22 ))))));
defpred S8[ (Element of ( NAT )) ] means (ex B100 being (Function of ( MP-WFF ) , F1()) st S6[ B100 , $1 ]);
defpred S9[ set , set ] means (ex B101 being (Element of ( MP-WFF )) st (B101 = $1 & (for B102 being (Function of ( MP-WFF ) , F1()) holds (S6[ B102 , ( card ( dom B101 ) ) ] implies $2 = ( B102 . B101 )))));
L1277: (for R8 being (Element of ( NAT )) holds (S8[ R8 ] implies S8[ ( R8 + 1 ) ]))
proof
let R8 being (Element of ( NAT ));
given C82 being (Function of ( MP-WFF ) , F1()) such that
L1278: S6[ C82 , R8 ];

defpred S10[ (Element of ( MP-WFF )) , (Element of F1()) ] means ((( card ( dom $1 ) ) <> ( R8 + 1 ) implies $2 = ( C82 . $1 )) & (( card ( dom $1 ) ) = ( R8 + 1 ) implies S7[ $2 , C82 , $1 ]));
L1279: (for B103 being (Element of ( MP-WFF )) holds (ex B104 being (Element of F1()) st S10[ B103 , B104 ]))
proof
let C83 being (Element of ( MP-WFF ));
L1280:
now
per cases  by L1179;
case L1281: ( card ( dom C83 ) ) <> ( R8 + 1 );
take D141 = ( C82 . C83 );
end;
case L1283: (( card ( dom C83 ) ) = ( R8 + 1 ) & C83 = ( VERUM ));
take D142 = F2();
thus L1284: S7[ D142 , C82 , C83 ] by L1283 , L1249 , L1271;
end;
case L1285: (( card ( dom C83 ) ) = ( R8 + 1 ) & (ex R18 being MP-variable st C83 = ( @ R18 )));
consider R18 being MP-variable such that L1286: C83 = ( @ R18 ) by L1285;
take D143 = F3(R18);
thus L1287: S7[ D143 , C82 , C83 ] by L1286 , L1271 , L869 , L1187;
end;
case L1288: (( card ( dom C83 ) ) = ( R8 + 1 ) & (ex R22 being MP-wff st C83 = ( 'not' R22 )));
consider R22 being MP-wff such that L1289: C83 = ( 'not' R22 ) by L1288;
take D144 = F4(( C82 . R22 ));
thus L1290: S7[ D144 , C82 , C83 ] by L1289 , L1249 , L877 , L1187 , L1205;
end;
case L1291: (( card ( dom C83 ) ) = ( R8 + 1 ) & (ex R22 being MP-wff st C83 = ( (#) R22 )));
consider R22 being MP-wff such that L1292: C83 = ( (#) R22 ) by L1291;
take D145 = F5(( C82 . R22 ));
thus L1293: S7[ D145 , C82 , C83 ] by L1292 , L1249 , L881 , L1187 , L1205 , L1231;
end;
case L1294: (( card ( dom C83 ) ) = ( R8 + 1 ) & (ex R22 being MP-wff st (ex R24 being MP-wff st C83 = ( R22 '&' R24 ))));
consider R22 being MP-wff, R24 being MP-wff such that L1295: C83 = ( R22 '&' R24 ) by L1294;
take D146 = F6(( C82 . R22 ) , ( C82 . R24 ));
L1296:
now
let R23 being MP-wff;
let R25 being MP-wff;
assume L1297: C83 = ( R23 '&' R25 );
L1298: R22 = R23 by L1297 , L1295 , L885;
thus L1299: D146 = F6(( C82 . R23 ) , ( C82 . R25 )) by L1298 , L1295 , L1297 , L885;
end;
thus L1300: S7[ D146 , C82 , C83 ] by L1296 , L1295 , L1249 , L1187 , L1205 , L1231;
end;
end;
thus L1302: thesis by L1280;
end;
consider C84 being (Function of ( MP-WFF ) , F1()) such that L1303: (for B105 being (Element of ( MP-WFF )) holds S10[ B105 , ( C84 . B105 ) ]) from FUNCT_2:sch 3(L1279);
take D147 = C84;
thus L1304: S6[ D147 , ( R8 + 1 ) ]
proof
let C85 being (Element of ( MP-WFF ));
set D148 = ( card ( dom C85 ) );
assume L1305: D148 <= ( R8 + 1 );
thus L1306: (C85 = ( VERUM ) implies ( D147 . C85 ) = F2())
proof
per cases ;
suppose L1307: D148 <> ( R8 + 1 );

L1308: (D148 <= R8 & ( D147 . C85 ) = ( C82 . C85 )) by L1307 , L1303 , L1305 , NAT_1:8;
thus L1309: thesis by L1308 , L1278;
end;
suppose L1310: D148 = ( R8 + 1 );

thus L1311: thesis by L1310 , L1303;
end;
end;

thus L1313: (for R18 being MP-variable holds (C85 = ( @ R18 ) implies ( D147 . C85 ) = F3(R18)))
proof
let R19 being MP-variable;
assume that
L1314: C85 = ( @ R19 );
per cases ;
suppose L1315: D148 <> ( R8 + 1 );

L1316: (D148 <= R8 & ( D147 . C85 ) = ( C82 . C85 )) by L1315 , L1303 , L1305 , NAT_1:8;
thus L1317: thesis by L1316 , L1278 , L1314;
end;
suppose L1318: D148 = ( R8 + 1 );

thus L1319: thesis by L1318 , L1303 , L1314;
end;
end;

thus L1321: (for R22 being MP-wff holds (C85 = ( 'not' R22 ) implies ( D147 . C85 ) = F4(( D147 . R22 ))))
proof
let R22 being MP-wff;
assume L1322: C85 = ( 'not' R22 );
L1323: ( card ( dom R22 ) ) <> ( R8 + 1 ) by L1322 , L1305 , L1018;
L1324: ( D147 . R22 ) = ( C82 . R22 ) by L1323 , L1303;
per cases ;
suppose L1325: D148 <> ( R8 + 1 );

L1326: (D148 <= R8 & ( D147 . C85 ) = ( C82 . C85 )) by L1325 , L1303 , L1305 , NAT_1:8;
thus L1327: thesis by L1326 , L1278 , L1322 , L1324;
end;
suppose L1328: D148 = ( R8 + 1 );

thus L1329: thesis by L1328 , L1303 , L1322 , L1324;
end;
end;

thus L1331: (for R22 being MP-wff holds (C85 = ( (#) R22 ) implies ( D147 . C85 ) = F5(( D147 . R22 ))))
proof
let R22 being MP-wff;
assume L1332: C85 = ( (#) R22 );
L1333: ( card ( dom R22 ) ) <> ( R8 + 1 ) by L1332 , L1305 , L1037;
L1334: ( D147 . R22 ) = ( C82 . R22 ) by L1333 , L1303;
per cases ;
suppose L1335: D148 <> ( R8 + 1 );

L1336: (D148 <= R8 & ( D147 . C85 ) = ( C82 . C85 )) by L1335 , L1303 , L1305 , NAT_1:8;
thus L1337: thesis by L1336 , L1278 , L1332 , L1334;
end;
suppose L1338: D148 = ( R8 + 1 );

thus L1339: thesis by L1338 , L1303 , L1332 , L1334;
end;
end;

thus L1341: (for R22 being MP-wff holds (for R24 being MP-wff holds (C85 = ( R22 '&' R24 ) implies ( D147 . C85 ) = F6(( D147 . R22 ) , ( D147 . R24 )))))
proof
let R22 being MP-wff;
let R24 being MP-wff;
assume L1342: C85 = ( R22 '&' R24 );
L1343: ( card ( dom R22 ) ) <> ( R8 + 1 ) by L1342 , L1305 , L1056;
L1344: ( D147 . R22 ) = ( C82 . R22 ) by L1343 , L1303;
L1345: ( card ( dom R24 ) ) <> ( R8 + 1 ) by L1305 , L1342 , L1056;
L1346: ( D147 . R24 ) = ( C82 . R24 ) by L1345 , L1303;
per cases ;
suppose L1347: D148 <> ( R8 + 1 );

L1348: (D148 <= R8 & ( D147 . C85 ) = ( C82 . C85 )) by L1347 , L1303 , L1305 , NAT_1:8;
thus L1349: thesis by L1348 , L1278 , L1342 , L1344 , L1346;
end;
suppose L1350: D148 = ( R8 + 1 );

thus L1351: thesis by L1350 , L1303 , L1342 , L1344 , L1346;
end;
end;

end;

end;
L1305: S8[ ( 0 ) ]
proof
set D149 = the (Function of ( MP-WFF ) , F1());
take D149;
let R20 being MP-wff;
assume L1306: ( card ( dom R20 ) ) <= ( 0 );
thus L1307: thesis by L1306 , NAT_1:2;
end;
L1308: (for R6 being (Element of ( NAT )) holds S8[ R6 ]) from NAT_1:sch 1(L1305 , L1277);
L1309: (for R1 being set holds (R1 in ( MP-WFF ) implies (ex R2 being set st S9[ R1 , R2 ])))
proof
let R1 being set;
assume L1310: R1 in ( MP-WFF );
reconsider D150 = R1 as (Element of ( MP-WFF )) by L1310;
consider C86 being (Function of ( MP-WFF ) , F1()) such that L1311: S6[ C86 , ( card ( dom D150 ) ) ] by L1308;
take ( C86 . R1 );
take D150;
thus L1312: R1 = D150;
let C87 being (Function of ( MP-WFF ) , F1());
defpred S11[ (Element of ( MP-WFF )) ] means (( card ( dom $1 ) ) <= ( card ( dom D150 ) ) implies ( C86 . $1 ) = ( C87 . $1 ));
assume L1313: S6[ C87 , ( card ( dom D150 ) ) ];
L1314: (for R18 being MP-variable holds S11[ ( @ R18 ) ])
proof
let R18 being MP-variable;
assume L1315: ( card ( dom ( @ R18 ) ) ) <= ( card ( dom D150 ) );
thus L1316: ( C86 . ( @ R18 ) ) = F3(R18) by L1315 , L1311
.= ( C87 . ( @ R18 ) ) by L1313 , L1315;
end;
L1317: (for B106 , B107 being (Element of ( MP-WFF )) holds ((S11[ B106 ] & S11[ B107 ]) implies S11[ ( B106 '&' B107 ) ]))
proof
let R20 being MP-wff;
let R22 being MP-wff;
assume that
L1318: (S11[ R20 ] & S11[ R22 ])
and
L1319: ( card ( dom ( R20 '&' R22 ) ) ) <= ( card ( dom D150 ) );
L1320: (( card ( dom R20 ) ) < ( card ( dom ( R20 '&' R22 ) ) ) & ( card ( dom R22 ) ) < ( card ( dom ( R20 '&' R22 ) ) )) by L1056;
thus L1321: ( C86 . ( R20 '&' R22 ) ) = F6(( C87 . R20 ) , ( C87 . R22 )) by L1320 , L1311 , L1318 , L1319 , XXREAL_0:2
.= ( C87 . ( R20 '&' R22 ) ) by L1313 , L1319;
end;
L1322: (for B108 being (Element of ( MP-WFF )) holds (S11[ B108 ] implies S11[ ( (#) B108 ) ]))
proof
let R20 being MP-wff;
assume that
L1323: S11[ R20 ];
assume L1324: ( card ( dom ( (#) R20 ) ) ) <= ( card ( dom D150 ) );
L1325: ( card ( dom R20 ) ) < ( card ( dom ( (#) R20 ) ) ) by L1037;
thus L1326: ( C86 . ( (#) R20 ) ) = F5(( C87 . R20 )) by L1325 , L1311 , L1323 , L1324 , XXREAL_0:2
.= ( C87 . ( (#) R20 ) ) by L1313 , L1324;
end;
L1327: (for B109 being (Element of ( MP-WFF )) holds (S11[ B109 ] implies S11[ ( 'not' B109 ) ]))
proof
let R20 being MP-wff;
assume that
L1328: S11[ R20 ];
assume L1329: ( card ( dom ( 'not' R20 ) ) ) <= ( card ( dom D150 ) );
L1330: ( card ( dom R20 ) ) < ( card ( dom ( 'not' R20 ) ) ) by L1018;
thus L1331: ( C86 . ( 'not' R20 ) ) = F4(( C87 . R20 )) by L1330 , L1311 , L1328 , L1329 , XXREAL_0:2
.= ( C87 . ( 'not' R20 ) ) by L1313 , L1329;
end;
L1332: S11[ ( VERUM ) ]
proof
assume L1333: ( card ( dom ( VERUM ) ) ) <= ( card ( dom D150 ) );
thus L1334: ( C86 . ( VERUM ) ) = F2() by L1333 , L1311
.= ( C87 . ( VERUM ) ) by L1313 , L1333;
end;
L1335: (for B110 being (Element of ( MP-WFF )) holds S11[ B110 ]) from MPInd(L1332 , L1314 , L1327 , L1322 , L1317);
thus L1336: thesis by L1335;
end;
consider C88 being Function such that L1337: ( dom C88 ) = ( MP-WFF ) and L1338: (for R1 being set holds (R1 in ( MP-WFF ) implies S9[ R1 , ( C88 . R1 ) ])) from CLASSES1:sch 1(L1309);
L1339: ( rng C88 ) c= F1()
proof
let R2 being set;
assume L1340: R2 in ( rng C88 );
consider C89 being set such that L1341: (C89 in ( MP-WFF ) & R2 = ( C88 . C89 )) by L1340 , L1337 , FUNCT_1:def 3;
consider C90 being (Element of ( MP-WFF )) such that L1342: C90 = C89 and L1343: (for B111 being (Function of ( MP-WFF ) , F1()) holds (S6[ B111 , ( card ( dom C90 ) ) ] implies R2 = ( B111 . C90 ))) by L1338 , L1341;
consider C91 being (Function of ( MP-WFF ) , F1()) such that L1344: S6[ C91 , ( card ( dom C90 ) ) ] by L1308;
L1345: R2 = ( C91 . C90 ) by L1343 , L1344;
thus L1346: thesis by L1345;
end;
reconsider D151 = C88 as (Function of ( MP-WFF ) , F1()) by L1339 , L1337 , FUNCT_2:def 1 , RELSET_1:4;
consider R20 being MP-wff such that L1347: R20 = ( VERUM ) and L1348: (for B112 being (Function of ( MP-WFF ) , F1()) holds (S6[ B112 , ( card ( dom R20 ) ) ] implies ( D151 . ( VERUM ) ) = ( B112 . R20 ))) by L1338;
take D151;
consider C92 being (Function of ( MP-WFF ) , F1()) such that L1349: S6[ C92 , ( card ( dom R20 ) ) ] by L1308;
L1350: ( D151 . ( VERUM ) ) = ( C92 . ( VERUM ) ) by L1347 , L1348 , L1349;
thus L1351: ( D151 . ( VERUM ) ) = F2() by L1350 , L1347 , L1349;
thus L1352: (for B113 being MP-variable holds ( D151 . ( @ B113 ) ) = F3(B113))
proof
let C93 being MP-variable;
consider R20 being MP-wff such that L1353: R20 = ( @ C93 ) and L1354: (for B114 being (Function of ( MP-WFF ) , F1()) holds (S6[ B114 , ( card ( dom R20 ) ) ] implies ( D151 . ( @ C93 ) ) = ( B114 . R20 ))) by L1338;
consider C94 being (Function of ( MP-WFF ) , F1()) such that L1355: S6[ C94 , ( card ( dom R20 ) ) ] by L1308;
L1356: ( D151 . ( @ C93 ) ) = ( C94 . ( @ C93 ) ) by L1353 , L1354 , L1355;
thus L1357: thesis by L1356 , L1353 , L1355;
end;

thus L1358: (for B115 being (Element of ( MP-WFF )) holds ( D151 . ( 'not' B115 ) ) = F4(( D151 . B115 )))
proof
let C95 being (Element of ( MP-WFF ));
consider R21 being MP-wff such that L1359: R21 = ( 'not' C95 ) and L1360: (for B116 being (Function of ( MP-WFF ) , F1()) holds (S6[ B116 , ( card ( dom R21 ) ) ] implies ( D151 . ( 'not' C95 ) ) = ( B116 . R21 ))) by L1338;
consider C96 being (Function of ( MP-WFF ) , F1()) such that L1361: S6[ C96 , ( card ( dom R21 ) ) ] by L1308;
L1362: (for R8 being (Element of ( NAT )) holds (R8 < ( card ( dom ( 'not' C95 ) ) ) implies S6[ C96 , R8 ]))
proof
let R8 being (Element of ( NAT ));
assume L1363: R8 < ( card ( dom ( 'not' C95 ) ) );
let C97 being (Element of ( MP-WFF ));
assume L1364: ( card ( dom C97 ) ) <= R8;
L1365: ( card ( dom C97 ) ) <= ( card ( dom ( 'not' C95 ) ) ) by L1364 , L1363 , XXREAL_0:2;
thus L1366: thesis by L1365 , L1359 , L1361;
end;
L1367: (ex R22 being MP-wff st (R22 = C95 & (for B117 being (Function of ( MP-WFF ) , F1()) holds (S6[ B117 , ( card ( dom R22 ) ) ] implies ( D151 . C95 ) = ( B117 . R22 ))))) by L1338;
set D152 = ( card ( dom C95 ) );
L1368: D152 < ( card ( dom ( 'not' C95 ) ) ) by L1018;
L1369: S6[ C96 , D152 ] by L1368 , L1362;
L1370: ( D151 . C95 ) = ( C96 . C95 ) by L1369 , L1367;
L1371: ( D151 . ( 'not' C95 ) ) = ( C96 . ( 'not' C95 ) ) by L1359 , L1360 , L1361;
thus L1372: thesis by L1371 , L1359 , L1361 , L1370;
end;

thus L1373: (for B118 being (Element of ( MP-WFF )) holds ( D151 . ( (#) B118 ) ) = F5(( D151 . B118 )))
proof
let C98 being (Element of ( MP-WFF ));
consider R21 being MP-wff such that L1374: R21 = ( (#) C98 ) and L1375: (for B119 being (Function of ( MP-WFF ) , F1()) holds (S6[ B119 , ( card ( dom R21 ) ) ] implies ( D151 . ( (#) C98 ) ) = ( B119 . R21 ))) by L1338;
consider C99 being (Function of ( MP-WFF ) , F1()) such that L1376: S6[ C99 , ( card ( dom R21 ) ) ] by L1308;
L1377: (for R8 being (Element of ( NAT )) holds (R8 < ( card ( dom ( (#) C98 ) ) ) implies S6[ C99 , R8 ]))
proof
let R8 being (Element of ( NAT ));
assume L1378: R8 < ( card ( dom ( (#) C98 ) ) );
let C100 being (Element of ( MP-WFF ));
assume L1379: ( card ( dom C100 ) ) <= R8;
L1380: ( card ( dom C100 ) ) <= ( card ( dom ( (#) C98 ) ) ) by L1379 , L1378 , XXREAL_0:2;
thus L1381: thesis by L1380 , L1374 , L1376;
end;
L1382: (ex R22 being MP-wff st (R22 = C98 & (for B120 being (Function of ( MP-WFF ) , F1()) holds (S6[ B120 , ( card ( dom R22 ) ) ] implies ( D151 . C98 ) = ( B120 . R22 ))))) by L1338;
set D153 = ( card ( dom C98 ) );
L1383: D153 < ( card ( dom ( (#) C98 ) ) ) by L1037;
L1384: S6[ C99 , D153 ] by L1383 , L1377;
L1385: ( D151 . C98 ) = ( C99 . C98 ) by L1384 , L1382;
L1386: ( D151 . ( (#) C98 ) ) = ( C99 . ( (#) C98 ) ) by L1374 , L1375 , L1376;
thus L1387: thesis by L1386 , L1374 , L1376 , L1385;
end;

thus L1388: (for B121 , B122 being (Element of ( MP-WFF )) holds ( D151 . ( B121 '&' B122 ) ) = F6(( D151 . B121 ) , ( D151 . B122 )))
proof
let C101 , C102 being (Element of ( MP-WFF ));
set D154 = ( card ( dom C101 ) );
set D155 = ( card ( dom C102 ) );
consider R21 being MP-wff such that L1389: R21 = ( C101 '&' C102 ) and L1390: (for B123 being (Function of ( MP-WFF ) , F1()) holds (S6[ B123 , ( card ( dom R21 ) ) ] implies ( D151 . ( C101 '&' C102 ) ) = ( B123 . R21 ))) by L1338;
consider C103 being (Function of ( MP-WFF ) , F1()) such that L1391: S6[ C103 , ( card ( dom R21 ) ) ] by L1308;
L1392: (for R8 being (Element of ( NAT )) holds (R8 < ( card ( dom ( C101 '&' C102 ) ) ) implies S6[ C103 , R8 ]))
proof
let R8 being (Element of ( NAT ));
assume L1393: R8 < ( card ( dom ( C101 '&' C102 ) ) );
let C104 being (Element of ( MP-WFF ));
assume L1394: ( card ( dom C104 ) ) <= R8;
L1395: ( card ( dom C104 ) ) <= ( card ( dom ( C101 '&' C102 ) ) ) by L1394 , L1393 , XXREAL_0:2;
thus L1396: thesis by L1395 , L1389 , L1391;
end;
L1397: (ex R23 being MP-wff st (R23 = C101 & (for B124 being (Function of ( MP-WFF ) , F1()) holds (S6[ B124 , ( card ( dom R23 ) ) ] implies ( D151 . C101 ) = ( B124 . R23 ))))) by L1338;
L1398: D154 < ( card ( dom ( C101 '&' C102 ) ) ) by L1056;
L1399: S6[ C103 , D154 ] by L1398 , L1392;
L1400: ( D151 . C101 ) = ( C103 . C101 ) by L1399 , L1397;
L1401: (ex R24 being MP-wff st (R24 = C102 & (for B125 being (Function of ( MP-WFF ) , F1()) holds (S6[ B125 , ( card ( dom R24 ) ) ] implies ( D151 . C102 ) = ( B125 . R24 ))))) by L1338;
L1402: D155 < ( card ( dom ( C101 '&' C102 ) ) ) by L1056;
L1403: S6[ C103 , D155 ] by L1402 , L1392;
L1404: ( D151 . C102 ) = ( C103 . C102 ) by L1403 , L1401;
L1405: ( D151 . ( C101 '&' C102 ) ) = ( C103 . ( C101 '&' C102 ) ) by L1389 , L1390 , L1391;
thus L1406: thesis by L1405 , L1389 , L1391 , L1400 , L1404;
end;

end;
