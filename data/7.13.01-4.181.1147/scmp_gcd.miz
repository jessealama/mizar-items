:: Recursive Euclide Algorithm
::  by JingChao Chen
::
:: Received June 15, 1999
:: Copyright (c) 1999-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, SUBSET_1, SCMPDS_2, AMI_1, FSM_1, INT_1, ARYTM_3,
      COMPLEX1, XXREAL_0, CARD_1, NAT_1, AMI_3, AMI_2, ARYTM_1, TURING_1,
      SCMFSA_7, FUNCT_1, RELAT_1, GRAPHSP, SCMPDS_1, TARSKI, CIRCUIT2, INT_2,
      MSUALG_1, FUNCOP_1, XBOOLE_0, STRUCT_0, SCMP_GCD, ORDINAL1, PARTFUN1,
      EXTPRO_1, SCMFSA6C, COMPOS_1;
 notations TARSKI, XBOOLE_0, SUBSET_1, CARD_1, NUMBERS, XCMPLX_0, RELAT_1,
      FUNCT_1, INT_1, ORDINAL1, NAT_1, DOMAIN_1, PARTFUN1, STRUCT_0, FUNCT_4,
      MEMSTR_0, COMPOS_1, EXTPRO_1, AMI_2, AMI_3, SCMPDS_I, SCMPDS_2, SCMPDS_4,
      INT_2, XXREAL_0;
 constructors DOMAIN_1, REAL_1, NAT_D, SCMPDS_1, SCMPDS_4, AMI_3, PRE_POLY,
      RELSET_1;
 registrations XREAL_0, INT_1, STRUCT_0, SCMPDS_2, ORDINAL1, AFINSQ_1,
      MEMSTR_0, AMI_3, COMPOS_0;
 requirements NUMERALS, REAL, SUBSET, ARITHM, BOOLE;
 definitions EXTPRO_1, AMI_3, FUNCOP_1, MEMSTR_0;
 theorems AMI_3, NAT_1, TARSKI, FUNCT_4, INT_1, SCMPDS_2, ABSVALUE, MEMSTR_0,
      GRFUNC_1, SCMPDS_4, SCMPDS_6, ENUMSET1, INT_2, XBOOLE_1, NEWTON, XREAL_1,
      XXREAL_0, ORDINAL1, NAT_D, PARTFUN1, AFINSQ_1, COMPOS_1, EXTPRO_1,
      PBOOLE, ZFMISC_1, FUNCOP_1, STRUCT_0, AMI_2, SCMPDS_I;
 schemes NAT_1;

begin
definition
let C1 being Nat;
func intpos C1 -> Int_position equals 
( dl. C1 );
coherence by SCMPDS_2:def 1;
end;
theorem
L2: (for B1 , B2 being (Element of ( NAT )) holds ( DataLoc (B1 , B2) ) = ( intpos ( B1 + B2 ) ))
proof
let C2 , C3 being (Element of ( NAT ));
L3: ( C2 + C3 ) >= ( 0 ) by NAT_1:2;
thus L4: ( DataLoc (C2 , C3) ) = [ 1 , ( abs ( C2 + C3 ) ) ] by SCMPDS_2:def 3
.= [ 1 , ( C2 + C3 ) ] by L3 , ABSVALUE:def 1
.= ( intpos ( C2 + C3 ) );
end;
theorem
L5: (for B3 being (State of ( SCMPDS )) holds (for B4 , B5 being (Element of ( NAT )) holds (( IC B3 ) = ( B4 + B5 ) implies ( ICplusConst (B3 , ( - B5 )) ) = B4)))
proof
let C4 being (State of ( SCMPDS ));
let C5 , C6 being (Element of ( NAT ));
assume L6: ( IC C4 ) = ( C5 + C6 );
consider C7 being (Element of ( NAT )) such that L7: C7 = ( IC C4 ) and L8: ( ICplusConst (C4 , ( - C6 )) ) = ( abs ( C7 + ( - C6 ) ) ) by SCMPDS_2:def 18;
L9: C7 = ( C5 + C6 ) by L6 , L7
.= ( C5 + C6 );
L10: C5 >= ( 0 ) by NAT_1:2;
thus L11: ( ICplusConst (C4 , ( - C6 )) ) = C5 by L10 , L8 , L9 , ABSVALUE:def 1
.= C5
.= C5;
end;
definition
func GBP -> Int_position equals 
( intpos ( 0 ) );
coherence;
func SBP -> Int_position equals 
( intpos 1 );
coherence;
end;
theorem
L13: ( GBP ) <> ( SBP ) by AMI_3:10;
theorem
L14: (for R5 being (Instruction of ( SCMPDS )) holds (for R10 being (Program of ( SCMPDS )) holds ( card ( R10 ';' R5 ) ) = ( ( card R10 ) + 1 )))
proof
let R5 being (Instruction of ( SCMPDS ));
let R10 being (Program of ( SCMPDS ));
thus L15: ( card ( R10 ';' R5 ) ) = ( card ( R10 ';' ( Load R5 ) ) ) by SCMPDS_4:def 3
.= ( ( card R10 ) + ( card ( Load R5 ) ) ) by AFINSQ_1:17
.= ( ( card R10 ) + 1 ) by COMPOS_1:54;
end;
theorem
L16: (for R5 being (Instruction of ( SCMPDS )) holds (for R6 being (Instruction of ( SCMPDS )) holds ( card ( R5 ';' R6 ) ) = 2))
proof
let R5 being (Instruction of ( SCMPDS ));
let R6 being (Instruction of ( SCMPDS ));
thus L17: ( card ( R5 ';' R6 ) ) = ( card ( ( Load R5 ) ';' ( Load R6 ) ) ) by SCMPDS_4:def 4
.= ( ( card ( Load R5 ) ) + ( card ( Load R6 ) ) ) by AFINSQ_1:17
.= ( 1 + ( card ( Load R6 ) ) ) by COMPOS_1:54
.= ( 1 + 1 ) by COMPOS_1:54
.= 2;
end;
theorem
L18: (for R5 being (Instruction of ( SCMPDS )) holds (for R10 being (Program of ( SCMPDS )) holds (( ( R10 ';' R5 ) . ( card R10 ) ) = R5 & ( card R10 ) in ( dom ( R10 ';' R5 ) ))))
proof
let R5 being (Instruction of ( SCMPDS ));
let R10 being (Program of ( SCMPDS ));
L19: ( 0 ) in ( dom ( Load R5 ) ) by COMPOS_1:50;
thus L20: ( ( R10 ';' R5 ) . ( card R10 ) ) = ( ( R10 ';' R5 ) . ( ( 0 ) + ( card R10 ) ) )
.= ( ( R10 ';' R5 ) . ( ( 0 ) + ( card R10 ) ) )
.= ( ( R10 ';' ( Load R5 ) ) . ( ( 0 ) + ( card R10 ) ) ) by SCMPDS_4:def 3
.= ( ( Load R5 ) . ( 0 ) ) by L19 , AFINSQ_1:def 3
.= R5 by COMPOS_1:52;
L21: ( card ( R10 ';' R5 ) ) = ( ( card R10 ) + 1 ) by L14;
L22: ( card R10 ) < ( card ( R10 ';' R5 ) ) by L21 , XREAL_1:29;
thus L23: thesis by L22 , AFINSQ_1:66;
end;
theorem
L24: (for R5 being (Instruction of ( SCMPDS )) holds (for R10 being (Program of ( SCMPDS )) holds (for R11 being (Program of ( SCMPDS )) holds ( ( ( R10 ';' R5 ) ';' R11 ) . ( card R10 ) ) = R5)))
proof
let R5 being (Instruction of ( SCMPDS ));
let R10 being (Program of ( SCMPDS ));
let R11 being (Program of ( SCMPDS ));
L25: ( card R10 ) in ( dom ( R10 ';' R5 ) ) by L18;
thus L26: ( ( ( R10 ';' R5 ) ';' R11 ) . ( card R10 ) ) = ( ( R10 ';' R5 ) . ( card R10 ) ) by L25 , AFINSQ_1:def 3
.= R5 by L18;
end;
begin
definition
func GCD-Algorithm -> (Program of ( SCMPDS )) equals 
( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( GBP ) := ( 0 ) ) ';' ( ( SBP ) := 7 ) ) ';' ( saveIC (( SBP ) , ( RetIC )) ) ) ';' ( goto 2 ) ) ';' ( halt ( SCMPDS ) ) ) ';' ( (( SBP ) , 3) <=0_goto 9 ) ) ';' ( (( SBP ) , 6) := (( SBP ) , 3) ) ) ';' ( Divide (( SBP ) , 2 , ( SBP ) , 3) ) ) ';' ( (( SBP ) , 7) := (( SBP ) , 3) ) ) ';' ( (( SBP ) , ( 4 + ( RetSP ) )) := (( GBP ) , 1) ) ) ';' ( AddTo (( GBP ) , 1 , 4) ) ) ';' ( saveIC (( SBP ) , ( RetIC )) ) ) ';' ( goto ( - 7 ) ) ) ';' ( (( SBP ) , 2) := (( SBP ) , 6) ) ) ';' ( return ( SBP ) ) );
coherence;
end;
set D1 = ( ( GBP ) := ( 0 ) );
set D2 = ( ( SBP ) := 7 );
set D3 = ( saveIC (( SBP ) , ( RetIC )) );
set D4 = ( goto 2 );
set D5 = ( halt ( SCMPDS ) );
set D6 = ( (( SBP ) , 3) <=0_goto 9 );
set D7 = ( (( SBP ) , 6) := (( SBP ) , 3) );
set D8 = ( Divide (( SBP ) , 2 , ( SBP ) , 3) );
set D9 = ( (( SBP ) , 7) := (( SBP ) , 3) );
set D10 = ( (( SBP ) , ( 4 + ( RetSP ) )) := (( GBP ) , 1) );
set D11 = ( AddTo (( GBP ) , 1 , 4) );
set D12 = ( saveIC (( SBP ) , ( RetIC )) );
set D13 = ( goto ( - 7 ) );
set D14 = ( (( SBP ) , 2) := (( SBP ) , 6) );
set D15 = ( return ( SBP ) );
begin
theorem
L28: ( card ( GCD-Algorithm ) ) = 15
proof
set D16 = ( ( ( ( D1 ';' D2 ) ';' D3 ) ';' D4 ) ';' D5 );
set D17 = ( ( ( ( ( D16 ';' D6 ) ';' D7 ) ';' D8 ) ';' D9 ) ';' D10 );
L29: ( card D16 ) = ( ( card ( ( ( D1 ';' D2 ) ';' D3 ) ';' D4 ) ) + 1 ) by L14
.= ( ( ( card ( ( D1 ';' D2 ) ';' D3 ) ) + 1 ) + 1 ) by L14
.= ( ( ( ( card ( D1 ';' D2 ) ) + 1 ) + 1 ) + 1 ) by L14
.= ( ( ( 2 + 1 ) + 1 ) + 1 ) by L16
.= 5;
L30: ( card D17 ) = ( ( card ( ( ( ( D16 ';' D6 ) ';' D7 ) ';' D8 ) ';' D9 ) ) + 1 ) by L14
.= ( ( ( card ( ( ( D16 ';' D6 ) ';' D7 ) ';' D8 ) ) + 1 ) + 1 ) by L14
.= ( ( ( ( card ( ( D16 ';' D6 ) ';' D7 ) ) + 1 ) + 1 ) + 1 ) by L14
.= ( ( ( ( ( card ( D16 ';' D6 ) ) + 1 ) + 1 ) + 1 ) + 1 ) by L14
.= ( ( ( ( ( 5 + 1 ) + 1 ) + 1 ) + 1 ) + 1 ) by L29 , L14
.= 10;
thus L31: ( card ( GCD-Algorithm ) ) = ( ( card ( ( ( ( D17 ';' D11 ) ';' D12 ) ';' D13 ) ';' D14 ) ) + 1 ) by L14
.= ( ( ( card ( ( ( D17 ';' D11 ) ';' D12 ) ';' D13 ) ) + 1 ) + 1 ) by L14
.= ( ( ( ( card ( ( D17 ';' D11 ) ';' D12 ) ) + 1 ) + 1 ) + 1 ) by L14
.= ( ( ( ( ( card ( D17 ';' D11 ) ) + 1 ) + 1 ) + 1 ) + 1 ) by L14
.= ( ( ( ( ( 10 + 1 ) + 1 ) + 1 ) + 1 ) + 1 ) by L30 , L14
.= 15;
end;
theorem
L32: (for R2 being (Element of ( NAT )) holds (R2 < 15 iff R2 in ( dom ( GCD-Algorithm ) ))) by L28 , AFINSQ_1:66;
theorem
L33: (( ( GCD-Algorithm ) . ( 0 ) ) = ( ( GBP ) := ( 0 ) ) & ( ( GCD-Algorithm ) . 1 ) = ( ( SBP ) := 7 ) & ( ( GCD-Algorithm ) . 2 ) = ( saveIC (( SBP ) , ( RetIC )) ) & ( ( GCD-Algorithm ) . 3 ) = ( goto 2 ) & ( ( GCD-Algorithm ) . 4 ) = ( halt ( SCMPDS ) ) & ( ( GCD-Algorithm ) . 5 ) = ( (( SBP ) , 3) <=0_goto 9 ) & ( ( GCD-Algorithm ) . 6 ) = ( (( SBP ) , 6) := (( SBP ) , 3) ) & ( ( GCD-Algorithm ) . 7 ) = ( Divide (( SBP ) , 2 , ( SBP ) , 3) ) & ( ( GCD-Algorithm ) . 8 ) = ( (( SBP ) , 7) := (( SBP ) , 3) ) & ( ( GCD-Algorithm ) . 9 ) = ( (( SBP ) , ( 4 + ( RetSP ) )) := (( GBP ) , 1) ) & ( ( GCD-Algorithm ) . 10 ) = ( AddTo (( GBP ) , 1 , 4) ) & ( ( GCD-Algorithm ) . 11 ) = ( saveIC (( SBP ) , ( RetIC )) ) & ( ( GCD-Algorithm ) . 12 ) = ( goto ( - 7 ) ) & ( ( GCD-Algorithm ) . 13 ) = ( (( SBP ) , 2) := (( SBP ) , 6) ) & ( ( GCD-Algorithm ) . 14 ) = ( return ( SBP ) ))
proof
set D18 = ( D1 ';' D2 );
set D19 = ( D18 ';' D3 );
set D20 = ( D19 ';' D4 );
set D21 = ( D20 ';' D5 );
set D22 = ( D21 ';' D6 );
set D23 = ( D22 ';' D7 );
set D24 = ( D23 ';' D8 );
set D25 = ( D24 ';' D9 );
set D26 = ( D25 ';' D10 );
set D27 = ( D26 ';' D11 );
set D28 = ( D27 ';' D12 );
set D29 = ( D28 ';' D13 );
set D30 = ( D29 ';' D14 );
L34: ( card D18 ) = 2 by L16;
L35: ( card D19 ) = ( 2 + 1 ) by L34 , L14;
L36: ( card D20 ) = ( 3 + 1 ) by L35 , L14;
L37: ( card D21 ) = ( 4 + 1 ) by L36 , L14;
L38: ( card D22 ) = ( 5 + 1 ) by L37 , L14;
L39: ( card D23 ) = ( 6 + 1 ) by L38 , L14;
L40: ( card D24 ) = ( 7 + 1 ) by L39 , L14;
L41: ( card D25 ) = ( 8 + 1 ) by L40 , L14;
L42: ( card D26 ) = ( 9 + 1 ) by L41 , L14;
L43: ( card D27 ) = ( 10 + 1 ) by L42 , L14;
L44: ( card D28 ) = ( 11 + 1 ) by L43 , L14;
L45: ( card D29 ) = ( 12 + 1 ) by L44 , L14;
L46: ( card D30 ) = ( 13 + 1 ) by L45 , L14;
set D31 = ( D14 ';' D15 );
set D32 = ( D13 ';' D31 );
set D33 = ( D12 ';' D32 );
set D34 = ( D11 ';' D33 );
set D35 = ( D10 ';' D34 );
set D36 = ( D9 ';' D35 );
set D37 = ( D8 ';' D36 );
set D38 = ( D7 ';' D37 );
set D39 = ( D6 ';' D38 );
set D40 = ( D5 ';' D39 );
set D41 = ( D4 ';' D40 );
set D42 = ( D3 ';' D41 );
set D43 = ( D2 ';' D42 );
L47: ( GCD-Algorithm ) = ( D29 ';' D31 ) by SCMPDS_4:13;
L48: ( GCD-Algorithm ) = ( D28 ';' D32 ) by L47 , SCMPDS_4:12;
L49: ( GCD-Algorithm ) = ( D27 ';' D33 ) by L48 , SCMPDS_4:12;
L50: ( GCD-Algorithm ) = ( D26 ';' D34 ) by L49 , SCMPDS_4:12;
L51: ( GCD-Algorithm ) = ( D25 ';' D35 ) by L50 , SCMPDS_4:12;
L52: ( GCD-Algorithm ) = ( D24 ';' D36 ) by L51 , SCMPDS_4:12;
L53: ( GCD-Algorithm ) = ( D23 ';' D37 ) by L52 , SCMPDS_4:12;
L54: ( GCD-Algorithm ) = ( D22 ';' D38 ) by L53 , SCMPDS_4:12;
L55: ( GCD-Algorithm ) = ( D21 ';' D39 ) by L54 , SCMPDS_4:12;
L56: ( GCD-Algorithm ) = ( D20 ';' D40 ) by L55 , SCMPDS_4:12;
L57: ( GCD-Algorithm ) = ( D19 ';' D41 ) by L56 , SCMPDS_4:12;
L58: ( GCD-Algorithm ) = ( D18 ';' D42 ) by L57 , SCMPDS_4:12;
L59: ( GCD-Algorithm ) = ( D1 ';' D43 ) by L58 , SCMPDS_4:16;
thus L60: ( ( GCD-Algorithm ) . ( 0 ) ) = D1 by L59 , SCMPDS_6:7;
L61: ( card ( Load D1 ) ) = 1 by COMPOS_1:54;
L62: ( GCD-Algorithm ) = ( ( ( Load D1 ) ';' D2 ) ';' D42 ) by L58 , SCMPDS_4:9;
thus L63: ( ( GCD-Algorithm ) . 1 ) = D2 by L62 , L61 , L24;
thus L64: ( ( GCD-Algorithm ) . 2 ) = D3 by L34 , L57 , L24;
thus L65: ( ( GCD-Algorithm ) . 3 ) = D4 by L35 , L56 , L24;
thus L66: ( ( GCD-Algorithm ) . 4 ) = D5 by L36 , L55 , L24;
thus L67: ( ( GCD-Algorithm ) . 5 ) = D6 by L37 , L54 , L24;
thus L68: ( ( GCD-Algorithm ) . 6 ) = D7 by L38 , L53 , L24;
thus L69: ( ( GCD-Algorithm ) . 7 ) = D8 by L39 , L52 , L24;
thus L70: ( ( GCD-Algorithm ) . 8 ) = D9 by L40 , L51 , L24;
thus L71: ( ( GCD-Algorithm ) . 9 ) = D10 by L41 , L50 , L24;
thus L72: ( ( GCD-Algorithm ) . 10 ) = D11 by L42 , L49 , L24;
thus L73: ( ( GCD-Algorithm ) . 11 ) = D12 by L43 , L48 , L24;
thus L74: ( ( GCD-Algorithm ) . 12 ) = D13 by L44 , L47 , L24;
L75: ( GCD-Algorithm ) = ( D30 ';' ( Load D15 ) ) by SCMPDS_4:def 3;
thus L76: ( ( GCD-Algorithm ) . 13 ) = D14 by L75 , L45 , L24;
thus L77: thesis by L46 , L18;
end;
L78: (for R12 being (Instruction-Sequence of ( SCMPDS )) holds (( GCD-Algorithm ) c= R12 implies (( R12 . ( 0 ) ) = D1 & ( R12 . 1 ) = D2 & ( R12 . 2 ) = D3 & ( R12 . 3 ) = D4 & ( R12 . 4 ) = D5 & ( R12 . 5 ) = D6 & ( R12 . 6 ) = D7 & ( R12 . 7 ) = D8 & ( R12 . 8 ) = D9 & ( R12 . 9 ) = D10 & ( R12 . 10 ) = D11 & ( R12 . 11 ) = D12 & ( R12 . 12 ) = D13 & ( R12 . 13 ) = D14 & ( R12 . 14 ) = D15)))
proof
let R12 being (Instruction-Sequence of ( SCMPDS ));
set D44 = ( GCD-Algorithm );
assume L79: D44 c= R12;
L80: ( 0 ) in ( dom D44 ) by L28 , AFINSQ_1:66;
thus L81: ( R12 . ( 0 ) ) = D1 by L80 , L79 , L33 , GRFUNC_1:2;
L82: 1 in ( dom D44 ) by L28 , AFINSQ_1:66;
thus L83: ( R12 . 1 ) = D2 by L82 , L79 , L33 , GRFUNC_1:2;
L84: 2 in ( dom D44 ) by L28 , AFINSQ_1:66;
thus L85: ( R12 . 2 ) = D3 by L84 , L79 , L33 , GRFUNC_1:2;
L86: 3 in ( dom D44 ) by L28 , AFINSQ_1:66;
thus L87: ( R12 . 3 ) = D4 by L86 , L79 , L33 , GRFUNC_1:2;
L88: 4 in ( dom D44 ) by L28 , AFINSQ_1:66;
thus L89: ( R12 . 4 ) = D5 by L88 , L79 , L33 , GRFUNC_1:2;
L90: 5 in ( dom D44 ) by L28 , AFINSQ_1:66;
thus L91: ( R12 . 5 ) = D6 by L90 , L79 , L33 , GRFUNC_1:2;
L92: 6 in ( dom D44 ) by L28 , AFINSQ_1:66;
thus L93: ( R12 . 6 ) = D7 by L92 , L79 , L33 , GRFUNC_1:2;
L94: 7 in ( dom D44 ) by L28 , AFINSQ_1:66;
thus L95: ( R12 . 7 ) = D8 by L94 , L79 , L33 , GRFUNC_1:2;
L96: 8 in ( dom D44 ) by L28 , AFINSQ_1:66;
thus L97: ( R12 . 8 ) = D9 by L96 , L79 , L33 , GRFUNC_1:2;
L98: 9 in ( dom D44 ) by L28 , AFINSQ_1:66;
thus L99: ( R12 . 9 ) = D10 by L98 , L79 , L33 , GRFUNC_1:2;
L100: 10 in ( dom D44 ) by L28 , AFINSQ_1:66;
thus L101: ( R12 . 10 ) = D11 by L100 , L79 , L33 , GRFUNC_1:2;
L102: 11 in ( dom D44 ) by L28 , AFINSQ_1:66;
thus L103: ( R12 . 11 ) = D12 by L102 , L79 , L33 , GRFUNC_1:2;
L104: 12 in ( dom D44 ) by L28 , AFINSQ_1:66;
thus L105: ( R12 . 12 ) = D13 by L104 , L79 , L33 , GRFUNC_1:2;
L106: 13 in ( dom D44 ) by L28 , AFINSQ_1:66;
thus L107: ( R12 . 13 ) = D14 by L106 , L79 , L33 , GRFUNC_1:2;
L108: 14 in ( dom D44 ) by L28 , AFINSQ_1:66;
thus L109: thesis by L108 , L79 , L33 , GRFUNC_1:2;
end;
theorem
L110: (for B6 being (Instruction-Sequence of ( SCMPDS )) holds (( GCD-Algorithm ) c= B6 implies (for B7 being ( 0 ) -started (State of ( SCMPDS )) holds (( IC ( Comput (B6 , B7 , 4) ) ) = 5 & ( ( Comput (B6 , B7 , 4) ) . ( GBP ) ) = ( 0 ) & ( ( Comput (B6 , B7 , 4) ) . ( SBP ) ) = 7 & ( ( Comput (B6 , B7 , 4) ) . ( intpos ( 7 + ( RetIC ) ) ) ) = 2 & ( ( Comput (B6 , B7 , 4) ) . ( intpos 9 ) ) = ( B7 . ( intpos 9 ) ) & ( ( Comput (B6 , B7 , 4) ) . ( intpos 10 ) ) = ( B7 . ( intpos 10 ) )))))
proof
let C8 being (Instruction-Sequence of ( SCMPDS ));
assume that
L111: ( GCD-Algorithm ) c= C8;
let C9 being ( 0 ) -started (State of ( SCMPDS ));
set D45 = ( GCD-Algorithm );
L112: ( IC C9 ) = ( 0 ) by MEMSTR_0:def 12;
L113: ( C8 /. ( IC C9 ) ) = ( C8 . ( IC C9 ) ) by PBOOLE:143;
L114: ( C8 /. ( IC ( Comput (C8 , C9 , 1) ) ) ) = ( C8 . ( IC ( Comput (C8 , C9 , 1) ) ) ) by PBOOLE:143;
L115: ( Comput (C8 , C9 , ( ( 0 ) + 1 )) ) = ( Following (C8 , ( Comput (C8 , C9 , ( 0 )) )) ) by EXTPRO_1:3
.= ( Following (C8 , C9) ) by EXTPRO_1:2
.= ( Exec (D1 , C9) ) by L112 , L78 , L113 , L111;
L116: ( IC ( Comput (C8 , C9 , 1) ) ) = ( succ ( IC C9 ) ) by L115 , SCMPDS_2:45
.= ( ( 0 ) + 1 ) by L112;
L117: ( CurInstr (C8 , ( Comput (C8 , C9 , 1) )) ) = ( C8 . 1 ) by L116 , L114
.= D2 by L78 , L111;
L118: ( Comput (C8 , C9 , ( 1 + 1 )) ) = ( Following (C8 , ( Comput (C8 , C9 , 1) )) ) by EXTPRO_1:3
.= ( Exec (D2 , ( Comput (C8 , C9 , 1) )) ) by L117;
L119: ( ( Comput (C8 , C9 , 1) ) . ( GBP ) ) = ( 0 ) by L115 , SCMPDS_2:45;
L120: ( ( Comput (C8 , C9 , 1) ) . ( intpos 9 ) ) = ( C9 . ( intpos 9 ) ) by L115 , AMI_3:10 , SCMPDS_2:45;
L121: ( ( Comput (C8 , C9 , 1) ) . ( intpos 10 ) ) = ( C9 . ( intpos 10 ) ) by L115 , AMI_3:10 , SCMPDS_2:45;
L122: ( C8 /. ( IC ( Comput (C8 , C9 , 2) ) ) ) = ( C8 . ( IC ( Comput (C8 , C9 , 2) ) ) ) by PBOOLE:143;
L123: ( IC ( Comput (C8 , C9 , 2) ) ) = ( succ ( IC ( Comput (C8 , C9 , 1) ) ) ) by L118 , SCMPDS_2:45
.= ( 1 + 1 ) by L116;
L124: ( CurInstr (C8 , ( Comput (C8 , C9 , 2) )) ) = ( C8 . 2 ) by L123 , L122
.= D3 by L78 , L111;
L125: ( Comput (C8 , C9 , ( 2 + 1 )) ) = ( Following (C8 , ( Comput (C8 , C9 , 2) )) ) by EXTPRO_1:3
.= ( Exec (D3 , ( Comput (C8 , C9 , 2) )) ) by L124;
L126: ( ( Comput (C8 , C9 , 2) ) . ( GBP ) ) = ( 0 ) by L118 , L119 , AMI_3:10 , SCMPDS_2:45;
L127: ( ( Comput (C8 , C9 , 2) ) . ( SBP ) ) = 7 by L118 , SCMPDS_2:45;
L128: ( ( Comput (C8 , C9 , 2) ) . ( intpos 9 ) ) = ( C9 . ( intpos 9 ) ) by L118 , L120 , AMI_3:10 , SCMPDS_2:45;
L129: ( ( Comput (C8 , C9 , 2) ) . ( intpos 10 ) ) = ( C9 . ( intpos 10 ) ) by L118 , L121 , AMI_3:10 , SCMPDS_2:45;
L130: ( C8 /. ( IC ( Comput (C8 , C9 , 3) ) ) ) = ( C8 . ( IC ( Comput (C8 , C9 , 3) ) ) ) by PBOOLE:143;
L131: ( IC ( Comput (C8 , C9 , 3) ) ) = ( succ ( IC ( Comput (C8 , C9 , 2) ) ) ) by L125 , SCMPDS_2:59
.= ( 2 + 1 ) by L123;
L132: ( CurInstr (C8 , ( Comput (C8 , C9 , 3) )) ) = ( C8 . 3 ) by L131 , L130
.= D4 by L78 , L111;
L133: ( Comput (C8 , C9 , ( 3 + 1 )) ) = ( Following (C8 , ( Comput (C8 , C9 , 3) )) ) by EXTPRO_1:3
.= ( Exec (D4 , ( Comput (C8 , C9 , 3) )) ) by L132;
L134: ( DataLoc (( ( Comput (C8 , C9 , 2) ) . ( SBP ) ) , ( RetIC )) ) = ( intpos ( 7 + 1 ) ) by L127 , L2 , SCMPDS_I:def 14;
L135: ( ( Comput (C8 , C9 , 3) ) . ( GBP ) ) = ( 0 ) by L134 , L125 , L126 , AMI_3:10 , SCMPDS_2:59;
L136: ( ( Comput (C8 , C9 , 3) ) . ( SBP ) ) = 7 by L125 , L127 , L134 , AMI_3:10 , SCMPDS_2:59;
L137: ( ( Comput (C8 , C9 , 3) ) . ( intpos 8 ) ) = 2 by L123 , L125 , L134 , SCMPDS_2:59;
L138: ( ( Comput (C8 , C9 , 3) ) . ( intpos 9 ) ) = ( C9 . ( intpos 9 ) ) by L125 , L128 , L134 , AMI_3:10 , SCMPDS_2:59;
L139: ( ( Comput (C8 , C9 , 3) ) . ( intpos 10 ) ) = ( C9 . ( intpos 10 ) ) by L125 , L129 , L134 , AMI_3:10 , SCMPDS_2:59;
thus L140: ( IC ( Comput (C8 , C9 , 4) ) ) = ( ICplusConst (( Comput (C8 , C9 , 3) ) , 2) ) by L133 , SCMPDS_2:54
.= ( 3 + 2 ) by L131 , SCMPDS_6:12
.= 5;
thus L141: ( ( Comput (C8 , C9 , 4) ) . ( GBP ) ) = ( 0 ) by L133 , L135 , SCMPDS_2:54;
thus L142: ( ( Comput (C8 , C9 , 4) ) . ( SBP ) ) = 7 by L133 , L136 , SCMPDS_2:54;
thus L143: ( ( Comput (C8 , C9 , 4) ) . ( intpos ( 7 + ( RetIC ) ) ) ) = 2 by L133 , L137 , SCMPDS_2:54 , SCMPDS_I:def 14;
thus L144: ( ( Comput (C8 , C9 , 4) ) . ( intpos 9 ) ) = ( C9 . ( intpos 9 ) ) by L133 , L138 , SCMPDS_2:54;
thus L145: thesis by L133 , L139 , SCMPDS_2:54;
end;
L146: (for R1 being (Element of ( NAT )) holds (for R2 being (Element of ( NAT )) holds (R2 > ( 0 ) implies ( GBP ) <> ( intpos ( R1 + R2 ) ))))
proof
let R1 being (Element of ( NAT ));
let R2 being (Element of ( NAT ));
assume L147: R2 > ( 0 );
L148: R2 <= ( R1 + R2 ) by NAT_1:11;
thus L149: thesis by L148 , L147 , AMI_3:10;
end;
L150: (for R1 being (Element of ( NAT )) holds (for R2 being (Element of ( NAT )) holds (R2 > 1 implies ( SBP ) <> ( intpos ( R1 + R2 ) ))))
proof
let R1 being (Element of ( NAT ));
let R2 being (Element of ( NAT ));
assume L151: R2 > 1;
L152: R2 <= ( R1 + R2 ) by NAT_1:11;
thus L153: thesis by L152 , L151 , AMI_3:10;
end;
L154: (for R2 being (Element of ( NAT )) holds (for R7 being (State of ( SCMPDS )) holds (for R12 being (Instruction-Sequence of ( SCMPDS )) holds ((( GCD-Algorithm ) c= R12 & ( IC R7 ) = 5 & R2 = ( R7 . ( SBP ) ) & ( R7 . ( GBP ) ) = ( 0 ) & ( R7 . ( DataLoc (( R7 . ( SBP ) ) , 3) ) ) > ( 0 )) implies (( IC ( Comput (R12 , R7 , 7) ) ) = ( 5 + 7 ) & ( Comput (R12 , R7 , 8) ) = ( Exec (D13 , ( Comput (R12 , R7 , 7) )) ) & ( ( Comput (R12 , R7 , 7) ) . ( SBP ) ) = ( R2 + 4 ) & ( ( Comput (R12 , R7 , 7) ) . ( GBP ) ) = ( 0 ) & ( ( Comput (R12 , R7 , 7) ) . ( intpos ( R2 + 7 ) ) ) = ( ( R7 . ( DataLoc (( R7 . ( SBP ) ) , 2) ) ) mod ( R7 . ( DataLoc (( R7 . ( SBP ) ) , 3) ) ) ) & ( ( Comput (R12 , R7 , 7) ) . ( intpos ( R2 + 6 ) ) ) = ( R7 . ( DataLoc (( R7 . ( SBP ) ) , 3) ) ) & ( ( Comput (R12 , R7 , 7) ) . ( intpos ( R2 + 4 ) ) ) = R2 & ( ( Comput (R12 , R7 , 7) ) . ( intpos ( R2 + 5 ) ) ) = 11)))))
proof
let R2 being (Element of ( NAT ));
let R7 being (State of ( SCMPDS ));
let R12 being (Instruction-Sequence of ( SCMPDS ));
set D46 = ( R7 . ( DataLoc (( R7 . ( SBP ) ) , 2) ) );
set D47 = ( R7 . ( DataLoc (( R7 . ( SBP ) ) , 3) ) );
assume L155: ( GCD-Algorithm ) c= R12;
assume L156: ( IC R7 ) = 5;
assume L157: R2 = ( R7 . ( SBP ) );
assume L158: ( R7 . ( GBP ) ) = ( 0 );
assume L159: D47 > ( 0 );
L160: ( R12 /. ( IC R7 ) ) = ( R12 . ( IC R7 ) ) by PBOOLE:143;
L161: ( R12 /. ( IC ( Comput (R12 , R7 , 1) ) ) ) = ( R12 . ( IC ( Comput (R12 , R7 , 1) ) ) ) by PBOOLE:143;
L162: ( Comput (R12 , R7 , ( 1 + ( 0 ) )) ) = ( Following (R12 , ( Comput (R12 , R7 , ( 0 )) )) ) by EXTPRO_1:3
.= ( Following (R12 , R7) ) by EXTPRO_1:2
.= ( Exec (D6 , R7) ) by L156 , L160 , L78 , L155;
L163: ( IC ( Comput (R12 , R7 , 1) ) ) = ( succ ( IC R7 ) ) by L162 , L159 , SCMPDS_2:56
.= ( 5 + 1 ) by L156;
L164: ( CurInstr (R12 , ( Comput (R12 , R7 , 1) )) ) = ( R12 . 6 ) by L163 , L161
.= D7 by L78 , L155;
L165: ( Comput (R12 , R7 , ( 1 + 1 )) ) = ( Following (R12 , ( Comput (R12 , R7 , 1) )) ) by EXTPRO_1:3
.= ( Exec (D7 , ( Comput (R12 , R7 , 1) )) ) by L164;
L166: ( ( Comput (R12 , R7 , 1) ) . ( SBP ) ) = R2 by L157 , L162 , SCMPDS_2:56;
L167: ( ( Comput (R12 , R7 , 1) ) . ( GBP ) ) = ( 0 ) by L158 , L162 , SCMPDS_2:56;
L168: ( ( Comput (R12 , R7 , 1) ) . ( intpos ( R2 + 3 ) ) ) = ( ( Comput (R12 , R7 , 1) ) . ( DataLoc (R2 , 3) ) ) by L2
.= D47 by L157 , L162 , SCMPDS_2:56;
L169: ( ( Comput (R12 , R7 , 1) ) . ( intpos ( R2 + 2 ) ) ) = ( ( Comput (R12 , R7 , 1) ) . ( DataLoc (R2 , 2) ) ) by L2
.= D46 by L157 , L162 , SCMPDS_2:56;
L170: ( R12 /. ( IC ( Comput (R12 , R7 , 2) ) ) ) = ( R12 . ( IC ( Comput (R12 , R7 , 2) ) ) ) by PBOOLE:143;
L171: ( IC ( Comput (R12 , R7 , 2) ) ) = ( succ ( IC ( Comput (R12 , R7 , 1) ) ) ) by L165 , SCMPDS_2:47
.= ( 6 + 1 ) by L163;
L172: ( CurInstr (R12 , ( Comput (R12 , R7 , 2) )) ) = ( R12 . 7 ) by L171 , L170
.= D8 by L78 , L155;
L173: ( Comput (R12 , R7 , ( 2 + 1 )) ) = ( Following (R12 , ( Comput (R12 , R7 , 2) )) ) by EXTPRO_1:3
.= ( Exec (D8 , ( Comput (R12 , R7 , 2) )) ) by L172;
L174: ( DataLoc (( ( Comput (R12 , R7 , 1) ) . ( SBP ) ) , 6) ) = ( intpos ( R2 + 6 ) ) by L166 , L2;
L175: ( ( Comput (R12 , R7 , 2) ) . ( SBP ) ) = R2 by L174 , L165 , L166 , L150 , SCMPDS_2:47;
L176: ( ( Comput (R12 , R7 , 2) ) . ( GBP ) ) = ( 0 ) by L165 , L167 , L174 , L146 , SCMPDS_2:47;
L177: ( ( Comput (R12 , R7 , 2) ) . ( intpos ( R2 + 6 ) ) ) = ( ( Comput (R12 , R7 , 1) ) . ( DataLoc (R2 , 3) ) ) by L165 , L166 , L174 , SCMPDS_2:47
.= D47 by L168 , L2;
L178: ( R2 + 3 ) <> ( R2 + 6 );
L179: ( ( Comput (R12 , R7 , 2) ) . ( intpos ( R2 + 3 ) ) ) = D47 by L178 , L165 , L168 , L174 , AMI_3:10 , SCMPDS_2:47;
L180: ( R2 + 2 ) <> ( R2 + 6 );
L181: ( ( Comput (R12 , R7 , 2) ) . ( intpos ( R2 + 2 ) ) ) = D46 by L180 , L165 , L169 , L174 , AMI_3:10 , SCMPDS_2:47;
L182: ( R12 /. ( IC ( Comput (R12 , R7 , 3) ) ) ) = ( R12 . ( IC ( Comput (R12 , R7 , 3) ) ) ) by PBOOLE:143;
L183: ( IC ( Comput (R12 , R7 , 3) ) ) = ( succ ( IC ( Comput (R12 , R7 , 2) ) ) ) by L173 , SCMPDS_2:52
.= ( 7 + 1 ) by L171;
L184: ( CurInstr (R12 , ( Comput (R12 , R7 , 3) )) ) = ( R12 . 8 ) by L183 , L182
.= D9 by L78 , L155;
L185: ( Comput (R12 , R7 , ( 3 + 1 )) ) = ( Following (R12 , ( Comput (R12 , R7 , 3) )) ) by EXTPRO_1:3
.= ( Exec (D9 , ( Comput (R12 , R7 , 3) )) ) by L184;
L186: ( DataLoc (( ( Comput (R12 , R7 , 2) ) . ( SBP ) ) , 2) ) = ( intpos ( R2 + 2 ) ) by L175 , L2;
L187: ( SBP ) <> ( DataLoc (( ( Comput (R12 , R7 , 2) ) . ( SBP ) ) , 2) ) by L186 , L150;
L188: ( DataLoc (( ( Comput (R12 , R7 , 2) ) . ( SBP ) ) , 3) ) = ( intpos ( R2 + 3 ) ) by L175 , L2;
L189: ( SBP ) <> ( DataLoc (( ( Comput (R12 , R7 , 2) ) . ( SBP ) ) , 3) ) by L188 , L150;
L190: ( ( Comput (R12 , R7 , 3) ) . ( SBP ) ) = R2 by L189 , L173 , L175 , L187 , SCMPDS_2:52;
L191: ( GBP ) <> ( DataLoc (( ( Comput (R12 , R7 , 2) ) . ( SBP ) ) , 2) ) by L186 , L146;
L192: ( GBP ) <> ( DataLoc (( ( Comput (R12 , R7 , 2) ) . ( SBP ) ) , 3) ) by L188 , L146;
L193: ( ( Comput (R12 , R7 , 3) ) . ( GBP ) ) = ( 0 ) by L192 , L173 , L176 , L191 , SCMPDS_2:52;
L194: ( ( Comput (R12 , R7 , 3) ) . ( intpos ( R2 + 3 ) ) ) = ( D46 mod D47 ) by L173 , L179 , L181 , L186 , L188 , SCMPDS_2:52;
L195: ( R2 + 6 ) <> ( R2 + 2 );
L196: ( intpos ( R2 + 6 ) ) <> ( DataLoc (( ( Comput (R12 , R7 , 2) ) . ( SBP ) ) , 2) ) by L195 , L186 , AMI_3:10;
L197: ( R2 + 6 ) <> ( R2 + 3 );
L198: ( intpos ( R2 + 6 ) ) <> ( DataLoc (( ( Comput (R12 , R7 , 2) ) . ( SBP ) ) , 3) ) by L197 , L188 , AMI_3:10;
L199: ( ( Comput (R12 , R7 , 3) ) . ( intpos ( R2 + 6 ) ) ) = D47 by L198 , L173 , L177 , L196 , SCMPDS_2:52;
L200: ( R12 /. ( IC ( Comput (R12 , R7 , 4) ) ) ) = ( R12 . ( IC ( Comput (R12 , R7 , 4) ) ) ) by PBOOLE:143;
L201: ( IC ( Comput (R12 , R7 , 4) ) ) = ( succ ( IC ( Comput (R12 , R7 , 3) ) ) ) by L185 , SCMPDS_2:47
.= ( 8 + 1 ) by L183;
L202: ( CurInstr (R12 , ( Comput (R12 , R7 , 4) )) ) = ( R12 . 9 ) by L201 , L200
.= D10 by L78 , L155;
L203: ( Comput (R12 , R7 , ( 4 + 1 )) ) = ( Following (R12 , ( Comput (R12 , R7 , 4) )) ) by EXTPRO_1:3
.= ( Exec (D10 , ( Comput (R12 , R7 , 4) )) ) by L202;
L204: ( DataLoc (( ( Comput (R12 , R7 , 3) ) . ( SBP ) ) , 7) ) = ( intpos ( R2 + 7 ) ) by L190 , L2;
L205: ( ( Comput (R12 , R7 , 4) ) . ( SBP ) ) = R2 by L204 , L185 , L190 , L150 , SCMPDS_2:47;
L206: ( ( Comput (R12 , R7 , 4) ) . ( GBP ) ) = ( 0 ) by L185 , L193 , L204 , L146 , SCMPDS_2:47;
L207: ( ( Comput (R12 , R7 , 4) ) . ( intpos ( R2 + 7 ) ) ) = ( ( Comput (R12 , R7 , 3) ) . ( DataLoc (R2 , 3) ) ) by L185 , L190 , L204 , SCMPDS_2:47
.= ( D46 mod D47 ) by L194 , L2;
L208: ( R2 + 6 ) <> ( R2 + 7 );
L209: ( ( Comput (R12 , R7 , 4) ) . ( intpos ( R2 + 6 ) ) ) = D47 by L208 , L185 , L199 , L204 , AMI_3:10 , SCMPDS_2:47;
L210: ( R12 /. ( IC ( Comput (R12 , R7 , 5) ) ) ) = ( R12 . ( IC ( Comput (R12 , R7 , 5) ) ) ) by PBOOLE:143;
L211: ( IC ( Comput (R12 , R7 , 5) ) ) = ( succ ( IC ( Comput (R12 , R7 , 4) ) ) ) by L203 , SCMPDS_2:47
.= ( 9 + 1 ) by L201;
L212: ( CurInstr (R12 , ( Comput (R12 , R7 , 5) )) ) = ( R12 . 10 ) by L211 , L210
.= D11 by L78 , L155;
L213: ( Comput (R12 , R7 , ( 5 + 1 )) ) = ( Following (R12 , ( Comput (R12 , R7 , 5) )) ) by EXTPRO_1:3
.= ( Exec (D11 , ( Comput (R12 , R7 , 5) )) ) by L212;
L214: ( DataLoc (( ( Comput (R12 , R7 , 4) ) . ( SBP ) ) , ( 4 + ( RetSP ) )) ) = ( intpos ( R2 + ( 4 + ( 0 ) ) ) ) by L205 , L2 , SCMPDS_I:def 13;
L215: ( ( Comput (R12 , R7 , 5) ) . ( SBP ) ) = R2 by L214 , L203 , L205 , L150 , SCMPDS_2:47;
L216: ( ( Comput (R12 , R7 , 5) ) . ( GBP ) ) = ( 0 ) by L203 , L206 , L214 , L146 , SCMPDS_2:47;
L217: ( R2 + 7 ) <> ( R2 + 4 );
L218: ( ( Comput (R12 , R7 , 5) ) . ( intpos ( R2 + 7 ) ) ) = ( D46 mod D47 ) by L217 , L203 , L207 , L214 , AMI_3:10 , SCMPDS_2:47;
L219: ( R2 + 6 ) <> ( R2 + 4 );
L220: ( ( Comput (R12 , R7 , 5) ) . ( intpos ( R2 + 6 ) ) ) = D47 by L219 , L203 , L209 , L214 , AMI_3:10 , SCMPDS_2:47;
L221: ( ( Comput (R12 , R7 , 5) ) . ( intpos ( R2 + 4 ) ) ) = ( ( Comput (R12 , R7 , 4) ) . ( DataLoc (( 0 ) , 1) ) ) by L203 , L206 , L214 , SCMPDS_2:47
.= ( ( Comput (R12 , R7 , 4) ) . ( intpos ( ( 0 ) + 1 ) ) ) by L2
.= R2 by L185 , L190 , L204 , L150 , SCMPDS_2:47;
L222: ( R12 /. ( IC ( Comput (R12 , R7 , 6) ) ) ) = ( R12 . ( IC ( Comput (R12 , R7 , 6) ) ) ) by PBOOLE:143;
L223: ( IC ( Comput (R12 , R7 , 6) ) ) = ( succ ( IC ( Comput (R12 , R7 , 5) ) ) ) by L213 , SCMPDS_2:48
.= ( 10 + 1 ) by L211;
L224: ( CurInstr (R12 , ( Comput (R12 , R7 , 6) )) ) = ( R12 . 11 ) by L223 , L222
.= D12 by L78 , L155;
L225: ( Comput (R12 , R7 , ( 6 + 1 )) ) = ( Following (R12 , ( Comput (R12 , R7 , 6) )) ) by EXTPRO_1:3
.= ( Exec (D12 , ( Comput (R12 , R7 , 6) )) ) by L224;
L226: ( DataLoc (( ( Comput (R12 , R7 , 5) ) . ( GBP ) ) , 1) ) = ( intpos ( ( 0 ) + 1 ) ) by L216 , L2;
L227: ( ( Comput (R12 , R7 , 6) ) . ( SBP ) ) = ( R2 + 4 ) by L226 , L213 , L215 , SCMPDS_2:48;
L228: ( ( Comput (R12 , R7 , 6) ) . ( GBP ) ) = ( 0 ) by L213 , L216 , L226 , AMI_3:10 , SCMPDS_2:48;
L229: ( R2 + 7 ) <> 1 by NAT_1:11;
L230: ( ( Comput (R12 , R7 , 6) ) . ( intpos ( R2 + 7 ) ) ) = ( D46 mod D47 ) by L229 , L213 , L218 , L226 , AMI_3:10 , SCMPDS_2:48;
L231: ( R2 + 6 ) <> 1 by NAT_1:11;
L232: ( ( Comput (R12 , R7 , 6) ) . ( intpos ( R2 + 6 ) ) ) = D47 by L231 , L213 , L220 , L226 , AMI_3:10 , SCMPDS_2:48;
L233: ( R2 + 4 ) <> 1 by NAT_1:11;
L234: ( ( Comput (R12 , R7 , 6) ) . ( intpos ( R2 + 4 ) ) ) = R2 by L233 , L213 , L221 , L226 , AMI_3:10 , SCMPDS_2:48;
L235: ( R12 /. ( IC ( Comput (R12 , R7 , 7) ) ) ) = ( R12 . ( IC ( Comput (R12 , R7 , 7) ) ) ) by PBOOLE:143;
thus L236: ( IC ( Comput (R12 , R7 , 7) ) ) = ( succ ( IC ( Comput (R12 , R7 , 6) ) ) ) by L225 , SCMPDS_2:59
.= ( 11 + 1 ) by L223
.= ( 5 + 7 );
L237: ( CurInstr (R12 , ( Comput (R12 , R7 , 7) )) ) = ( R12 . 12 ) by L236 , L235
.= D13 by L78 , L155;
thus L238: ( Comput (R12 , R7 , 8) ) = ( Comput (R12 , R7 , ( 7 + 1 )) )
.= ( Following (R12 , ( Comput (R12 , R7 , 7) )) ) by EXTPRO_1:3
.= ( Exec (D13 , ( Comput (R12 , R7 , 7) )) ) by L237;
L239: ( DataLoc (( ( Comput (R12 , R7 , 6) ) . ( SBP ) ) , ( RetIC )) ) = ( intpos ( ( R2 + 4 ) + 1 ) ) by L227 , L2 , SCMPDS_I:def 14
.= ( intpos ( R2 + ( 4 + 1 ) ) );
L240: ( SBP ) <> ( DataLoc (( ( Comput (R12 , R7 , 6) ) . ( SBP ) ) , ( RetIC )) ) by L239 , L150;
thus L241: ( ( Comput (R12 , R7 , 7) ) . ( SBP ) ) = ( R2 + 4 ) by L240 , L225 , L227 , SCMPDS_2:59;
L242: ( GBP ) <> ( DataLoc (( ( Comput (R12 , R7 , 6) ) . ( SBP ) ) , ( RetIC )) ) by L239 , L146;
thus L243: ( ( Comput (R12 , R7 , 7) ) . ( GBP ) ) = ( 0 ) by L242 , L225 , L228 , SCMPDS_2:59;
L244: ( R2 + 7 ) <> ( R2 + 5 );
thus L245: ( ( Comput (R12 , R7 , 7) ) . ( intpos ( R2 + 7 ) ) ) = ( D46 mod D47 ) by L244 , L225 , L230 , L239 , AMI_3:10 , SCMPDS_2:59;
L246: ( R2 + 6 ) <> ( R2 + 5 );
thus L247: ( ( Comput (R12 , R7 , 7) ) . ( intpos ( R2 + 6 ) ) ) = D47 by L246 , L225 , L232 , L239 , AMI_3:10 , SCMPDS_2:59;
L248: ( R2 + 4 ) <> ( R2 + 5 );
thus L249: ( ( Comput (R12 , R7 , 7) ) . ( intpos ( R2 + 4 ) ) ) = R2 by L248 , L225 , L234 , L239 , AMI_3:10 , SCMPDS_2:59;
thus L250: thesis by L223 , L225 , L239 , SCMPDS_2:59;
end;
L251: (for R1 being (Element of ( NAT )) holds (for R2 being (Element of ( NAT )) holds (for R7 being (State of ( SCMPDS )) holds (for R12 being (Instruction-Sequence of ( SCMPDS )) holds ((( GCD-Algorithm ) c= R12 & ( IC R7 ) = 5 & R2 = ( R7 . ( SBP ) ) & ( R7 . ( GBP ) ) = ( 0 ) & ( R7 . ( DataLoc (( R7 . ( SBP ) ) , 3) ) ) > ( 0 ) & 1 < R1 & R1 <= ( R2 + 1 )) implies ( ( Comput (R12 , R7 , 7) ) . ( intpos R1 ) ) = ( R7 . ( intpos R1 ) ))))))
proof
let R1 being (Element of ( NAT ));
let R2 being (Element of ( NAT ));
let R7 being (State of ( SCMPDS ));
let R12 being (Instruction-Sequence of ( SCMPDS ));
assume L252: ( GCD-Algorithm ) c= R12;
assume L253: ( IC R7 ) = 5;
assume L254: R2 = ( R7 . ( SBP ) );
assume L255: ( R7 . ( GBP ) ) = ( 0 );
assume L256: ( R7 . ( DataLoc (( R7 . ( SBP ) ) , 3) ) ) > ( 0 );
assume L257: 1 < R1;
assume L258: R1 <= ( R2 + 1 );
L259: ( R12 /. ( IC R7 ) ) = ( R12 . ( IC R7 ) ) by PBOOLE:143;
L260: ( R12 /. ( IC ( Comput (R12 , R7 , 1) ) ) ) = ( R12 . ( IC ( Comput (R12 , R7 , 1) ) ) ) by PBOOLE:143;
L261: ( Comput (R12 , R7 , ( 1 + ( 0 ) )) ) = ( Following (R12 , ( Comput (R12 , R7 , ( 0 )) )) ) by EXTPRO_1:3
.= ( Following (R12 , R7) ) by EXTPRO_1:2
.= ( Exec (D6 , R7) ) by L253 , L259 , L78 , L252;
L262: ( IC ( Comput (R12 , R7 , 1) ) ) = ( succ ( IC R7 ) ) by L261 , L256 , SCMPDS_2:56
.= ( 5 + 1 ) by L253;
L263: ( CurInstr (R12 , ( Comput (R12 , R7 , 1) )) ) = ( R12 . 6 ) by L262 , L260
.= D7 by L78 , L252;
L264: ( Comput (R12 , R7 , ( 1 + 1 )) ) = ( Following (R12 , ( Comput (R12 , R7 , 1) )) ) by EXTPRO_1:3
.= ( Exec (D7 , ( Comput (R12 , R7 , 1) )) ) by L263;
L265: ( ( Comput (R12 , R7 , 1) ) . ( SBP ) ) = R2 by L254 , L261 , SCMPDS_2:56;
L266: ( ( Comput (R12 , R7 , 1) ) . ( GBP ) ) = ( 0 ) by L255 , L261 , SCMPDS_2:56;
L267: ( ( Comput (R12 , R7 , 1) ) . ( intpos R1 ) ) = ( R7 . ( intpos R1 ) ) by L261 , SCMPDS_2:56;
L268: ( R12 /. ( IC ( Comput (R12 , R7 , 2) ) ) ) = ( R12 . ( IC ( Comput (R12 , R7 , 2) ) ) ) by PBOOLE:143;
L269: ( IC ( Comput (R12 , R7 , 2) ) ) = ( succ ( IC ( Comput (R12 , R7 , 1) ) ) ) by L264 , SCMPDS_2:47
.= ( 6 + 1 ) by L262;
L270: ( CurInstr (R12 , ( Comput (R12 , R7 , 2) )) ) = ( R12 . 7 ) by L269 , L268
.= D8 by L78 , L252;
L271: ( Comput (R12 , R7 , ( 2 + 1 )) ) = ( Following (R12 , ( Comput (R12 , R7 , 2) )) ) by EXTPRO_1:3
.= ( Exec (D8 , ( Comput (R12 , R7 , 2) )) ) by L270;
L272: ( DataLoc (( ( Comput (R12 , R7 , 1) ) . ( SBP ) ) , 6) ) = ( intpos ( R2 + 6 ) ) by L265 , L2;
L273: ( ( Comput (R12 , R7 , 2) ) . ( SBP ) ) = R2 by L272 , L264 , L265 , L150 , SCMPDS_2:47;
L274: ( ( Comput (R12 , R7 , 2) ) . ( GBP ) ) = ( 0 ) by L264 , L266 , L272 , L146 , SCMPDS_2:47;
L275: ( R2 + 1 ) < ( R2 + 6 ) by XREAL_1:6;
L276: ( ( Comput (R12 , R7 , 2) ) . ( intpos R1 ) ) = ( R7 . ( intpos R1 ) ) by L275 , L258 , L264 , L267 , L272 , AMI_3:10 , SCMPDS_2:47;
L277: ( R12 /. ( IC ( Comput (R12 , R7 , 3) ) ) ) = ( R12 . ( IC ( Comput (R12 , R7 , 3) ) ) ) by PBOOLE:143;
L278: ( IC ( Comput (R12 , R7 , 3) ) ) = ( succ ( IC ( Comput (R12 , R7 , 2) ) ) ) by L271 , SCMPDS_2:52
.= ( 7 + 1 ) by L269;
L279: ( CurInstr (R12 , ( Comput (R12 , R7 , 3) )) ) = ( R12 . 8 ) by L278 , L277
.= D9 by L78 , L252;
L280: ( Comput (R12 , R7 , ( 3 + 1 )) ) = ( Following (R12 , ( Comput (R12 , R7 , 3) )) ) by EXTPRO_1:3
.= ( Exec (D9 , ( Comput (R12 , R7 , 3) )) ) by L279;
L281: ( DataLoc (( ( Comput (R12 , R7 , 2) ) . ( SBP ) ) , 2) ) = ( intpos ( R2 + 2 ) ) by L273 , L2;
L282: ( SBP ) <> ( DataLoc (( ( Comput (R12 , R7 , 2) ) . ( SBP ) ) , 2) ) by L281 , L150;
L283: ( DataLoc (( ( Comput (R12 , R7 , 2) ) . ( SBP ) ) , 3) ) = ( intpos ( R2 + 3 ) ) by L273 , L2;
L284: ( SBP ) <> ( DataLoc (( ( Comput (R12 , R7 , 2) ) . ( SBP ) ) , 3) ) by L283 , L150;
L285: ( ( Comput (R12 , R7 , 3) ) . ( SBP ) ) = R2 by L284 , L271 , L273 , L282 , SCMPDS_2:52;
L286: ( GBP ) <> ( DataLoc (( ( Comput (R12 , R7 , 2) ) . ( SBP ) ) , 2) ) by L281 , L146;
L287: ( GBP ) <> ( DataLoc (( ( Comput (R12 , R7 , 2) ) . ( SBP ) ) , 3) ) by L283 , L146;
L288: ( ( Comput (R12 , R7 , 3) ) . ( GBP ) ) = ( 0 ) by L287 , L271 , L274 , L286 , SCMPDS_2:52;
L289: ( R2 + 1 ) < ( R2 + 2 ) by XREAL_1:6;
L290: ( intpos R1 ) <> ( DataLoc (( ( Comput (R12 , R7 , 2) ) . ( SBP ) ) , 2) ) by L289 , L258 , L281 , AMI_3:10;
L291: ( R2 + 1 ) < ( R2 + 3 ) by XREAL_1:6;
L292: ( intpos R1 ) <> ( DataLoc (( ( Comput (R12 , R7 , 2) ) . ( SBP ) ) , 3) ) by L291 , L258 , L283 , AMI_3:10;
L293: ( ( Comput (R12 , R7 , 3) ) . ( intpos R1 ) ) = ( R7 . ( intpos R1 ) ) by L292 , L271 , L276 , L290 , SCMPDS_2:52;
L294: ( R12 /. ( IC ( Comput (R12 , R7 , 4) ) ) ) = ( R12 . ( IC ( Comput (R12 , R7 , 4) ) ) ) by PBOOLE:143;
L295: ( IC ( Comput (R12 , R7 , 4) ) ) = ( succ ( IC ( Comput (R12 , R7 , 3) ) ) ) by L280 , SCMPDS_2:47
.= ( 8 + 1 ) by L278;
L296: ( CurInstr (R12 , ( Comput (R12 , R7 , 4) )) ) = ( R12 . 9 ) by L295 , L294
.= D10 by L78 , L252;
L297: ( Comput (R12 , R7 , ( 4 + 1 )) ) = ( Following (R12 , ( Comput (R12 , R7 , 4) )) ) by EXTPRO_1:3
.= ( Exec (D10 , ( Comput (R12 , R7 , 4) )) ) by L296;
L298: ( DataLoc (( ( Comput (R12 , R7 , 3) ) . ( SBP ) ) , 7) ) = ( intpos ( R2 + 7 ) ) by L285 , L2;
L299: ( ( Comput (R12 , R7 , 4) ) . ( SBP ) ) = R2 by L298 , L280 , L285 , L150 , SCMPDS_2:47;
L300: ( ( Comput (R12 , R7 , 4) ) . ( GBP ) ) = ( 0 ) by L280 , L288 , L298 , L146 , SCMPDS_2:47;
L301: ( R2 + 1 ) < ( R2 + 7 ) by XREAL_1:6;
L302: ( ( Comput (R12 , R7 , 4) ) . ( intpos R1 ) ) = ( R7 . ( intpos R1 ) ) by L301 , L258 , L280 , L293 , L298 , AMI_3:10 , SCMPDS_2:47;
L303: ( R12 /. ( IC ( Comput (R12 , R7 , 5) ) ) ) = ( R12 . ( IC ( Comput (R12 , R7 , 5) ) ) ) by PBOOLE:143;
L304: ( IC ( Comput (R12 , R7 , 5) ) ) = ( succ ( IC ( Comput (R12 , R7 , 4) ) ) ) by L297 , SCMPDS_2:47
.= ( 9 + 1 ) by L295;
L305: ( CurInstr (R12 , ( Comput (R12 , R7 , 5) )) ) = ( R12 . 10 ) by L304 , L303
.= D11 by L78 , L252;
L306: ( Comput (R12 , R7 , ( 5 + 1 )) ) = ( Following (R12 , ( Comput (R12 , R7 , 5) )) ) by EXTPRO_1:3
.= ( Exec (D11 , ( Comput (R12 , R7 , 5) )) ) by L305;
L307: ( DataLoc (( ( Comput (R12 , R7 , 4) ) . ( SBP ) ) , ( 4 + ( RetSP ) )) ) = ( intpos ( R2 + ( 4 + ( 0 ) ) ) ) by L299 , L2 , SCMPDS_I:def 13;
L308: ( ( Comput (R12 , R7 , 5) ) . ( SBP ) ) = R2 by L307 , L297 , L299 , L150 , SCMPDS_2:47;
L309: ( ( Comput (R12 , R7 , 5) ) . ( GBP ) ) = ( 0 ) by L297 , L300 , L307 , L146 , SCMPDS_2:47;
L310: ( R2 + 1 ) < ( R2 + 4 ) by XREAL_1:6;
L311: ( ( Comput (R12 , R7 , 5) ) . ( intpos R1 ) ) = ( R7 . ( intpos R1 ) ) by L310 , L258 , L297 , L302 , L307 , AMI_3:10 , SCMPDS_2:47;
L312: ( R12 /. ( IC ( Comput (R12 , R7 , 6) ) ) ) = ( R12 . ( IC ( Comput (R12 , R7 , 6) ) ) ) by PBOOLE:143;
L313: ( IC ( Comput (R12 , R7 , 6) ) ) = ( succ ( IC ( Comput (R12 , R7 , 5) ) ) ) by L306 , SCMPDS_2:48
.= ( 10 + 1 ) by L304;
L314: ( CurInstr (R12 , ( Comput (R12 , R7 , 6) )) ) = ( R12 . 11 ) by L313 , L312
.= D12 by L78 , L252;
L315: ( Comput (R12 , R7 , ( 6 + 1 )) ) = ( Following (R12 , ( Comput (R12 , R7 , 6) )) ) by EXTPRO_1:3
.= ( Exec (D12 , ( Comput (R12 , R7 , 6) )) ) by L314;
L316: ( DataLoc (( ( Comput (R12 , R7 , 5) ) . ( GBP ) ) , 1) ) = ( intpos ( ( 0 ) + 1 ) ) by L309 , L2;
L317: ( ( Comput (R12 , R7 , 6) ) . ( SBP ) ) = ( R2 + 4 ) by L316 , L306 , L308 , SCMPDS_2:48;
L318: ( ( Comput (R12 , R7 , 6) ) . ( intpos R1 ) ) = ( R7 . ( intpos R1 ) ) by L257 , L306 , L311 , L316 , AMI_3:10 , SCMPDS_2:48;
L319: ( DataLoc (( ( Comput (R12 , R7 , 6) ) . ( SBP ) ) , ( RetIC )) ) = ( intpos ( ( R2 + 4 ) + 1 ) ) by L317 , L2 , SCMPDS_I:def 14
.= ( intpos ( R2 + ( 4 + 1 ) ) );
L320: ( R2 + 1 ) < ( R2 + 5 ) by XREAL_1:6;
thus L321: thesis by L320 , L258 , L315 , L318 , L319 , AMI_3:10 , SCMPDS_2:59;
end;
theorem
L322: (for R12 being (Instruction-Sequence of ( SCMPDS )) holds (for B8 being (State of ( SCMPDS )) holds ((( GCD-Algorithm ) c= R12 & ( IC B8 ) = 5 & ( B8 . ( SBP ) ) > ( 0 ) & ( B8 . ( GBP ) ) = ( 0 ) & ( B8 . ( DataLoc (( B8 . ( SBP ) ) , 3) ) ) >= ( 0 ) & ( B8 . ( DataLoc (( B8 . ( SBP ) ) , 2) ) ) >= ( B8 . ( DataLoc (( B8 . ( SBP ) ) , 3) ) )) implies (ex R2 being (Element of ( NAT )) st (( CurInstr (R12 , ( Comput (R12 , B8 , R2) )) ) = ( return ( SBP ) ) & ( B8 . ( SBP ) ) = ( ( Comput (R12 , B8 , R2) ) . ( SBP ) ) & ( ( Comput (R12 , B8 , R2) ) . ( DataLoc (( B8 . ( SBP ) ) , 2) ) ) = ( ( B8 . ( DataLoc (( B8 . ( SBP ) ) , 2) ) ) gcd ( B8 . ( DataLoc (( B8 . ( SBP ) ) , 3) ) ) ) & (for B9 being (Element of ( NAT )) holds ((1 < B9 & B9 <= ( ( B8 . ( SBP ) ) + 1 )) implies ( B8 . ( intpos B9 ) ) = ( ( Comput (R12 , B8 , R2) ) . ( intpos B9 ) ))))))))
proof
let R12 being (Instruction-Sequence of ( SCMPDS ));
set D48 = ( GCD-Algorithm );
defpred S1[ (Element of ( NAT )) ] means (for B10 being (State of ( SCMPDS )) holds ((D48 c= R12 & ( IC B10 ) = 5 & ( B10 . ( SBP ) ) > ( 0 ) & ( B10 . ( GBP ) ) = ( 0 ) & ( B10 . ( DataLoc (( B10 . ( SBP ) ) , 3) ) ) <= $1 & ( B10 . ( DataLoc (( B10 . ( SBP ) ) , 3) ) ) >= ( 0 ) & ( B10 . ( DataLoc (( B10 . ( SBP ) ) , 2) ) ) >= ( B10 . ( DataLoc (( B10 . ( SBP ) ) , 3) ) )) implies (ex R2 being (Element of ( NAT )) st (( CurInstr (R12 , ( Comput (R12 , B10 , R2) )) ) = ( return ( SBP ) ) & ( B10 . ( SBP ) ) = ( ( Comput (R12 , B10 , R2) ) . ( SBP ) ) & ( ( Comput (R12 , B10 , R2) ) . ( DataLoc (( B10 . ( SBP ) ) , 2) ) ) = ( ( B10 . ( DataLoc (( B10 . ( SBP ) ) , 2) ) ) gcd ( B10 . ( DataLoc (( B10 . ( SBP ) ) , 3) ) ) ) & (for B11 being (Element of ( NAT )) holds ((1 < B11 & B11 <= ( ( B10 . ( SBP ) ) + 1 )) implies ( B10 . ( intpos B11 ) ) = ( ( Comput (R12 , B10 , R2) ) . ( intpos B11 ) )))))));
L323:
now
let C10 being (State of ( SCMPDS ));
set D49 = ( C10 . ( DataLoc (( C10 . ( SBP ) ) , 2) ) );
set D50 = ( C10 . ( DataLoc (( C10 . ( SBP ) ) , 3) ) );
assume L324: D48 c= R12;
assume L325: ( IC C10 ) = 5;
assume L326: ( C10 . ( SBP ) ) > ( 0 );
assume L327: ( C10 . ( GBP ) ) = ( 0 );
assume L328: D50 <= ( 0 );
assume L329: D50 >= ( 0 );
assume L330: D49 >= D50;
L331: ( R12 /. ( IC C10 ) ) = ( R12 . ( IC C10 ) ) by PBOOLE:143;
L332: ( R12 /. ( IC ( Comput (R12 , C10 , 1) ) ) ) = ( R12 . ( IC ( Comput (R12 , C10 , 1) ) ) ) by PBOOLE:143;
L333: ( Comput (R12 , C10 , ( 1 + ( 0 ) )) ) = ( Following (R12 , ( Comput (R12 , C10 , ( 0 )) )) ) by EXTPRO_1:3
.= ( Following (R12 , C10) ) by EXTPRO_1:2
.= ( Exec (D6 , C10) ) by L325 , L331 , L78 , L324;
L334: ( IC ( Comput (R12 , C10 , 1) ) ) = ( ICplusConst (C10 , 9) ) by L333 , L328 , SCMPDS_2:56
.= ( 5 + 9 ) by L325 , SCMPDS_6:12;
take D51 = 1;
thus L335: ( CurInstr (R12 , ( Comput (R12 , C10 , D51) )) ) = ( R12 . 14 ) by L334 , L332
.= D15 by L78 , L324;
thus L336: ( ( Comput (R12 , C10 , D51) ) . ( SBP ) ) = ( C10 . ( SBP ) ) by L333 , SCMPDS_2:56;
L337: D50 = ( 0 ) by L328 , L329 , XXREAL_0:1;
L338: ( abs D50 ) = ( 0 ) by L337 , ABSVALUE:def 1;
thus L339: ( ( Comput (R12 , C10 , D51) ) . ( DataLoc (( C10 . ( SBP ) ) , 2) ) ) = D49 by L333 , SCMPDS_2:56
.= ( abs D49 ) by L330 , L337 , ABSVALUE:def 1
.= ( ( abs D49 ) gcd ( abs D50 ) ) by L338 , NEWTON:52
.= ( D49 gcd D50 ) by INT_2:34;
thus L340: (for B12 being (Element of ( NAT )) holds ((1 < B12 & B12 <= ( ( C10 . ( SBP ) ) + 1 )) implies ( C10 . ( intpos B12 ) ) = ( ( Comput (R12 , C10 , D51) ) . ( intpos B12 ) ))) by L333 , SCMPDS_2:56;
end;
L341: S1[ ( 0 ) ] by L323;
L342:
now
let C11 being (Element of ( NAT ));
assume L343: S1[ C11 ];
L344:
now
let C12 being (State of ( SCMPDS ));
set D52 = ( C12 . ( DataLoc (( C12 . ( SBP ) ) , 2) ) );
set D53 = ( C12 . ( DataLoc (( C12 . ( SBP ) ) , 3) ) );
set D54 = D53;
assume L345: D48 c= R12;
assume L346: ( IC C12 ) = 5;
assume L347: ( C12 . ( SBP ) ) > ( 0 );
assume L348: ( C12 . ( GBP ) ) = ( 0 );
assume L349: D53 <= ( C11 + 1 );
assume L350: D53 >= ( 0 );
assume L351: D52 >= D53;
L352: D52 >= ( 0 ) by L351 , L350 , XXREAL_0:2;
reconsider D55 = D53 as (Element of ( NAT )) by L350 , INT_1:3;
per cases  by L349 , NAT_1:8;
suppose L353: D55 <= C11;

thus L354: (ex R2 being (Element of ( NAT )) st (( CurInstr (R12 , ( Comput (R12 , C12 , R2) )) ) = ( return ( SBP ) ) & ( C12 . ( SBP ) ) = ( ( Comput (R12 , C12 , R2) ) . ( SBP ) ) & ( ( Comput (R12 , C12 , R2) ) . ( DataLoc (( C12 . ( SBP ) ) , 2) ) ) = ( D52 gcd D54 ) & (for B13 being (Element of ( NAT )) holds ((1 < B13 & B13 <= ( ( C12 . ( SBP ) ) + 1 )) implies ( C12 . ( intpos B13 ) ) = ( ( Comput (R12 , C12 , R2) ) . ( intpos B13 ) ))))) by L353 , L343 , L346 , L347 , L348 , L350 , L351 , L345;
end;
suppose L355: D55 = ( C11 + 1 );

L356: D55 > ( 0 ) by L355 , NAT_1:5;
reconsider D56 = ( C12 . ( SBP ) ) as (Element of ( NAT )) by L347 , INT_1:3;
L357: D56 = ( C12 . ( SBP ) );
L358: ( IC ( Comput (R12 , C12 , 7) ) ) = ( 5 + 7 ) by L357 , L346 , L348 , L356 , L154 , L345;
L359: ( Comput (R12 , C12 , 8) ) = ( Exec (D13 , ( Comput (R12 , C12 , 7) )) ) by L346 , L348 , L356 , L357 , L154 , L345;
L360: ( ( Comput (R12 , C12 , 7) ) . ( SBP ) ) = ( D56 + 4 ) by L346 , L348 , L356 , L154 , L345;
L361: ( ( Comput (R12 , C12 , 7) ) . ( GBP ) ) = ( 0 ) by L346 , L348 , L356 , L357 , L154 , L345;
L362: ( ( Comput (R12 , C12 , 7) ) . ( intpos ( D56 + 7 ) ) ) = ( D52 mod D55 ) by L346 , L348 , L356 , L154 , L345;
L363: ( ( Comput (R12 , C12 , 7) ) . ( intpos ( D56 + 6 ) ) ) = D55 by L346 , L348 , L356 , L154 , L345;
L364: ( ( Comput (R12 , C12 , 7) ) . ( intpos ( D56 + 4 ) ) ) = D56 by L346 , L348 , L356 , L154 , L345;
L365: ( ( Comput (R12 , C12 , 7) ) . ( intpos ( D56 + 5 ) ) ) = 11 by L346 , L348 , L356 , L154 , L345;
set D57 = ( Comput (R12 , C12 , 8) );
set D58 = R12;
L366: ( IC D57 ) = ( ICplusConst (( Comput (R12 , C12 , 7) ) , ( - 7 )) ) by L359 , SCMPDS_2:54
.= 5 by L358 , L5;
L367: D48 c= D58 by L345;
L368: ( D57 . ( SBP ) ) = ( D56 + 4 ) by L359 , L360 , SCMPDS_2:54;
L369: 4 <= ( D56 + 4 ) by NAT_1:11;
L370: ( D57 . ( SBP ) ) > ( 0 ) by L369 , L368 , XXREAL_0:2;
L371: ( D57 . ( GBP ) ) = ( 0 ) by L359 , L361 , SCMPDS_2:54;
set D59 = ( D57 . ( DataLoc (( D57 . ( SBP ) ) , 2) ) );
set D60 = ( D57 . ( DataLoc (( D57 . ( SBP ) ) , 3) ) );
L372: D59 = ( D57 . ( intpos ( ( D56 + 4 ) + 2 ) ) ) by L368 , L2
.= D55 by L359 , L363 , SCMPDS_2:54;
L373: D60 = ( D57 . ( intpos ( ( D56 + 4 ) + 3 ) ) ) by L368 , L2
.= ( D52 mod D55 ) by L359 , L362 , SCMPDS_2:54;
L374: D60 < D55 by L373 , L355 , NAT_1:5 , NEWTON:65;
L375: D60 <= C11 by L374 , L355 , INT_1:7;
consider R1 being (Element of ( NAT )) such that L376: ( CurInstr (R12 , ( Comput (R12 , D57 , R1) )) ) = ( return ( SBP ) ) and L377: ( D57 . ( SBP ) ) = ( ( Comput (R12 , D57 , R1) ) . ( SBP ) ) and L378: ( ( Comput (R12 , D57 , R1) ) . ( DataLoc (( D57 . ( SBP ) ) , 2) ) ) = ( D59 gcd D60 ) and L379: (for B14 being (Element of ( NAT )) holds ((1 < B14 & B14 <= ( ( D57 . ( SBP ) ) + 1 )) implies ( D57 . ( intpos B14 ) ) = ( ( Comput (R12 , D57 , R1) ) . ( intpos B14 ) ))) by L375 , L343 , L356 , L366 , L367 , L370 , L371 , L372 , L373 , L374 , NEWTON:64;
set D61 = ( Comput (R12 , C12 , ( R1 + 8 )) );
L380: ( D57 . ( SBP ) ) = ( D61 . ( SBP ) ) by L377 , EXTPRO_1:4;
L381: ( Comput (R12 , C12 , ( R1 + 8 )) ) = ( Comput (R12 , ( Comput (R12 , C12 , 8) ) , R1) ) by EXTPRO_1:4;
L382: ( Comput (R12 , C12 , ( R1 + ( 8 + 1 ) )) ) = ( Comput (R12 , C12 , ( ( R1 + 8 ) + 1 )) )
.= ( Following (R12 , D61) ) by EXTPRO_1:3
.= ( Exec (( CurInstr (R12 , D61) ) , D61) )
.= ( Exec (( CurInstr (R12 , ( Comput (R12 , D57 , R1) )) ) , D61) ) by L381
.= ( Exec (( return ( SBP ) ) , D61) ) by L376;
L383: 1 < ( D56 + 4 ) by L369 , XXREAL_0:2;
L384: ( D56 + 4 ) < ( ( D57 . ( SBP ) ) + 1 ) by L368 , XREAL_1:29;
L385: ( D57 . ( intpos ( D56 + 4 ) ) ) = ( ( Comput (R12 , D57 , R1) ) . ( intpos ( D56 + 4 ) ) ) by L384 , L379 , L383
.= ( D61 . ( intpos ( D56 + 4 ) ) ) by EXTPRO_1:4;
L386: 5 <= ( D56 + 5 ) by NAT_1:11;
L387: 1 < ( D56 + 5 ) by L386 , XXREAL_0:2;
L388: 11 = ( D57 . ( intpos ( D56 + 5 ) ) ) by L359 , L365 , SCMPDS_2:54
.= ( ( Comput (R12 , D57 , R1) ) . ( intpos ( D56 + 5 ) ) ) by L368 , L379 , L387
.= ( D61 . ( intpos ( ( D56 + 4 ) + 1 ) ) ) by EXTPRO_1:4
.= ( D61 . ( DataLoc (( D61 . ( SBP ) ) , ( RetIC )) ) ) by L368 , L380 , L2 , SCMPDS_I:def 14;
L389: ( R12 /. ( IC ( Comput (R12 , C12 , ( R1 + 9 )) ) ) ) = ( R12 . ( IC ( Comput (R12 , C12 , ( R1 + 9 )) ) ) ) by PBOOLE:143;
L390: ( IC ( Comput (R12 , C12 , ( R1 + 9 )) ) ) = ( ( abs ( D61 . ( DataLoc (( D61 . ( SBP ) ) , ( RetIC )) ) ) ) + 2 ) by L382 , SCMPDS_2:58
.= ( 11 + 2 ) by L388 , ABSVALUE:29;
L391: ( CurInstr (R12 , ( Comput (R12 , C12 , ( R1 + 9 )) )) ) = ( R12 . 13 ) by L390 , L389
.= D14 by L78 , L345;
L392: ( Comput (R12 , C12 , ( R1 + ( 9 + 1 ) )) ) = ( Comput (R12 , C12 , ( ( R1 + 9 ) + 1 )) )
.= ( Following (R12 , ( Comput (R12 , C12 , ( R1 + 9 )) )) ) by EXTPRO_1:3
.= ( Exec (D14 , ( Comput (R12 , C12 , ( R1 + 9 )) )) ) by L391;
L393: ( ( Comput (R12 , C12 , ( R1 + 9 )) ) . ( SBP ) ) = ( D61 . ( DataLoc (( D56 + 4 ) , ( RetSP )) ) ) by L368 , L380 , L382 , SCMPDS_2:58
.= ( D61 . ( intpos ( ( D56 + 4 ) + ( 0 ) ) ) ) by L2 , SCMPDS_I:def 13
.= D56 by L359 , L364 , L385 , SCMPDS_2:54;
L394: ( ( Comput (R12 , C12 , ( R1 + 9 )) ) . ( intpos ( D56 + 6 ) ) ) = ( D61 . ( intpos ( ( D56 + 4 ) + 2 ) ) ) by L382 , L150 , SCMPDS_2:58
.= ( D61 . ( DataLoc (( D57 . ( SBP ) ) , 2) ) ) by L368 , L2
.= ( D59 gcd D60 ) by L378 , EXTPRO_1:4;
L395: ( R12 /. ( IC ( Comput (R12 , C12 , ( R1 + 10 )) ) ) ) = ( R12 . ( IC ( Comput (R12 , C12 , ( R1 + 10 )) ) ) ) by PBOOLE:143;
L396: ( IC ( Comput (R12 , C12 , ( R1 + 10 )) ) ) = ( succ ( IC ( Comput (R12 , C12 , ( R1 + 9 )) ) ) ) by L392 , SCMPDS_2:47
.= ( 13 + 1 ) by L390;
L397: ( CurInstr (R12 , ( Comput (R12 , C12 , ( R1 + 10 )) )) ) = ( R12 . 14 ) by L396 , L395
.= D15 by L78 , L345;
thus L398:now
take D62 = ( R1 + 10 );
thus L399: ( CurInstr (R12 , ( Comput (R12 , C12 , D62) )) ) = ( return ( SBP ) ) by L397;
L400: ( DataLoc (( ( Comput (R12 , C12 , ( R1 + 9 )) ) . ( SBP ) ) , 2) ) = ( intpos ( D56 + 2 ) ) by L393 , L2;
thus L401: ( ( Comput (R12 , C12 , D62) ) . ( SBP ) ) = ( C12 . ( SBP ) ) by L400 , L392 , L393 , L150 , SCMPDS_2:47;
thus L402: ( ( Comput (R12 , C12 , D62) ) . ( DataLoc (( C12 . ( SBP ) ) , 2) ) ) = ( ( Comput (R12 , C12 , ( R1 + 9 )) ) . ( DataLoc (D56 , 6) ) ) by L392 , L393 , SCMPDS_2:47
.= ( D54 gcd ( D52 mod D54 ) ) by L372 , L373 , L394 , L2
.= ( D52 gcd D54 ) by L352 , L355 , NAT_1:5 , NAT_D:30;
thus L403:now
let C13 being (Element of ( NAT ));
assume that
L404: 1 < C13
and
L405: C13 <= ( ( C12 . ( SBP ) ) + 1 );
L406: ( C12 . ( SBP ) ) <= ( D57 . ( SBP ) ) by L368 , NAT_1:11;
L407: ( ( C12 . ( SBP ) ) + 1 ) <= ( ( D57 . ( SBP ) ) + 1 ) by L406 , XREAL_1:6;
L408: C13 <= ( ( D57 . ( SBP ) ) + 1 ) by L407 , L405 , XXREAL_0:2;
L409: ( ( Comput (R12 , C12 , ( R1 + 9 )) ) . ( intpos C13 ) ) = ( D61 . ( intpos C13 ) ) by L382 , L404 , AMI_3:10 , SCMPDS_2:58
.= ( ( Comput (R12 , D57 , R1) ) . ( intpos C13 ) ) by EXTPRO_1:4
.= ( D57 . ( intpos C13 ) ) by L379 , L404 , L408;
L410: ( D56 + 1 ) < ( D56 + 2 ) by XREAL_1:6;
L411: ( ( Comput (R12 , C12 , 7) ) . ( intpos C13 ) ) = ( C12 . ( intpos C13 ) ) by L346 , L348 , L355 , L357 , L404 , L405 , L251 , L345 , NAT_1:5;
thus L412: ( C12 . ( intpos C13 ) ) = ( D57 . ( intpos C13 ) ) by L411 , L359 , SCMPDS_2:54
.= ( ( Comput (R12 , C12 , D62) ) . ( intpos C13 ) ) by L392 , L400 , L405 , L409 , L410 , AMI_3:10 , SCMPDS_2:47;
end;
end;
end;
end;
thus L400: S1[ ( C11 + 1 ) ] by L344;
end;
L401: (for R2 being (Element of ( NAT )) holds S1[ R2 ]) from NAT_1:sch 1(L341 , L342);
let C14 being (State of ( SCMPDS ));
assume that
L402: D48 c= R12
and
L403: ( IC C14 ) = 5
and
L404: ( C14 . ( SBP ) ) > ( 0 )
and
L405: ( C14 . ( GBP ) ) = ( 0 )
and
L406: ( C14 . ( DataLoc (( C14 . ( SBP ) ) , 3) ) ) >= ( 0 )
and
L407: ( C14 . ( DataLoc (( C14 . ( SBP ) ) , 2) ) ) >= ( C14 . ( DataLoc (( C14 . ( SBP ) ) , 3) ) );
reconsider D63 = ( C14 . ( DataLoc (( C14 . ( SBP ) ) , 3) ) ) as (Element of ( NAT )) by L406 , INT_1:3;
L408: S1[ D63 ] by L401;
thus L409: thesis by L408 , L403 , L404 , L405 , L406 , L407 , L402;
end;
theorem
L410: (for R12 being (Instruction-Sequence of ( SCMPDS )) holds (for B15 being (State of ( SCMPDS )) holds ((( GCD-Algorithm ) c= R12 & ( IC B15 ) = 5 & ( B15 . ( SBP ) ) > ( 0 ) & ( B15 . ( GBP ) ) = ( 0 ) & ( B15 . ( DataLoc (( B15 . ( SBP ) ) , 3) ) ) >= ( 0 ) & ( B15 . ( DataLoc (( B15 . ( SBP ) ) , 2) ) ) >= ( 0 )) implies (ex R2 being (Element of ( NAT )) st (( CurInstr (R12 , ( Comput (R12 , B15 , R2) )) ) = ( return ( SBP ) ) & ( B15 . ( SBP ) ) = ( ( Comput (R12 , B15 , R2) ) . ( SBP ) ) & ( ( Comput (R12 , B15 , R2) ) . ( DataLoc (( B15 . ( SBP ) ) , 2) ) ) = ( ( B15 . ( DataLoc (( B15 . ( SBP ) ) , 2) ) ) gcd ( B15 . ( DataLoc (( B15 . ( SBP ) ) , 3) ) ) ) & (for B16 being (Element of ( NAT )) holds ((1 < B16 & B16 <= ( ( B15 . ( SBP ) ) + 1 )) implies ( B15 . ( intpos B16 ) ) = ( ( Comput (R12 , B15 , R2) ) . ( intpos B16 ) ))))))))
proof
let R12 being (Instruction-Sequence of ( SCMPDS ));
let C15 being (State of ( SCMPDS ));
set D64 = ( GCD-Algorithm );
set D65 = ( C15 . ( DataLoc (( C15 . ( SBP ) ) , 2) ) );
set D66 = ( C15 . ( DataLoc (( C15 . ( SBP ) ) , 3) ) );
set D67 = D66;
assume that
L411: D64 c= R12
and
L412: ( IC C15 ) = 5
and
L413: ( C15 . ( SBP ) ) > ( 0 )
and
L414: ( C15 . ( GBP ) ) = ( 0 )
and
L415: D66 >= ( 0 )
and
L416: D65 >= ( 0 );
per cases ;
suppose L417: D65 >= D66;

thus L418: thesis by L417 , L412 , L413 , L414 , L415 , L322 , L411;
end;
suppose L419: D65 < D66;

L420: D66 > ( 0 ) by L419 , L416 , XXREAL_0:2;
reconsider D68 = D66 as (Element of ( NAT )) by L415 , INT_1:3;
reconsider D69 = ( C15 . ( SBP ) ) as (Element of ( NAT )) by L413 , INT_1:3;
L421: D69 = ( C15 . ( SBP ) );
L422: ( IC ( Comput (R12 , C15 , 7) ) ) = ( 5 + 7 ) by L421 , L412 , L414 , L420 , L154 , L411;
L423: ( Comput (R12 , C15 , 8) ) = ( Exec (D13 , ( Comput (R12 , C15 , 7) )) ) by L412 , L414 , L420 , L421 , L154 , L411;
L424: ( ( Comput (R12 , C15 , 7) ) . ( SBP ) ) = ( D69 + 4 ) by L412 , L414 , L420 , L154 , L411;
L425: ( ( Comput (R12 , C15 , 7) ) . ( GBP ) ) = ( 0 ) by L412 , L414 , L420 , L421 , L154 , L411;
L426: ( ( Comput (R12 , C15 , 7) ) . ( intpos ( D69 + 7 ) ) ) = ( D65 mod D68 ) by L412 , L414 , L420 , L154 , L411;
L427: ( ( Comput (R12 , C15 , 7) ) . ( intpos ( D69 + 6 ) ) ) = D68 by L412 , L414 , L420 , L154 , L411;
L428: ( ( Comput (R12 , C15 , 7) ) . ( intpos ( D69 + 4 ) ) ) = D69 by L412 , L414 , L420 , L154 , L411;
L429: ( ( Comput (R12 , C15 , 7) ) . ( intpos ( D69 + 5 ) ) ) = 11 by L412 , L414 , L420 , L154 , L411;
set D70 = ( Comput (R12 , C15 , 8) );
L430: ( IC D70 ) = ( ICplusConst (( Comput (R12 , C15 , 7) ) , ( - 7 )) ) by L423 , SCMPDS_2:54
.= 5 by L422 , L5;
L431: ( D70 . ( SBP ) ) = ( D69 + 4 ) by L423 , L424 , SCMPDS_2:54;
L432: 4 <= ( D69 + 4 ) by NAT_1:11;
L433: ( D70 . ( SBP ) ) > ( 0 ) by L432 , L431 , XXREAL_0:2;
L434: ( D70 . ( GBP ) ) = ( 0 ) by L423 , L425 , SCMPDS_2:54;
set D71 = ( D70 . ( DataLoc (( D70 . ( SBP ) ) , 2) ) );
set D72 = ( D70 . ( DataLoc (( D70 . ( SBP ) ) , 3) ) );
L435: D71 = ( D70 . ( intpos ( ( D69 + 4 ) + 2 ) ) ) by L431 , L2
.= D68 by L423 , L427 , SCMPDS_2:54;
L436: D72 = ( D70 . ( intpos ( ( D69 + 4 ) + 3 ) ) ) by L431 , L2
.= ( D65 mod D68 ) by L423 , L426 , SCMPDS_2:54;
L437: D72 < D68 by L436 , L420 , NEWTON:65;
consider R1 being (Element of ( NAT )) such that L438: ( CurInstr (R12 , ( Comput (R12 , D70 , R1) )) ) = ( return ( SBP ) ) and L439: ( D70 . ( SBP ) ) = ( ( Comput (R12 , D70 , R1) ) . ( SBP ) ) and L440: ( ( Comput (R12 , D70 , R1) ) . ( DataLoc (( D70 . ( SBP ) ) , 2) ) ) = ( D71 gcd D72 ) and L441: (for B17 being (Element of ( NAT )) holds ((1 < B17 & B17 <= ( ( D70 . ( SBP ) ) + 1 )) implies ( D70 . ( intpos B17 ) ) = ( ( Comput (R12 , D70 , R1) ) . ( intpos B17 ) ))) by L437 , L415 , L430 , L433 , L434 , L435 , L436 , L322 , L411 , NEWTON:64;
set D73 = ( Comput (R12 , C15 , ( R1 + 8 )) );
L442: ( D70 . ( SBP ) ) = ( D73 . ( SBP ) ) by L439 , EXTPRO_1:4;
L443: ( Comput (R12 , C15 , ( R1 + 8 )) ) = ( Comput (R12 , ( Comput (R12 , C15 , 8) ) , R1) ) by EXTPRO_1:4;
L444: ( Comput (R12 , C15 , ( R1 + ( 8 + 1 ) )) ) = ( Comput (R12 , C15 , ( ( R1 + 8 ) + 1 )) )
.= ( Following (R12 , D73) ) by EXTPRO_1:3
.= ( Exec (( return ( SBP ) ) , D73) ) by L438 , L443;
L445: 1 < ( D69 + 4 ) by L432 , XXREAL_0:2;
L446: ( D69 + 4 ) < ( ( D70 . ( SBP ) ) + 1 ) by L431 , XREAL_1:29;
L447: ( D70 . ( intpos ( D69 + 4 ) ) ) = ( ( Comput (R12 , D70 , R1) ) . ( intpos ( D69 + 4 ) ) ) by L446 , L441 , L445
.= ( D73 . ( intpos ( D69 + 4 ) ) ) by EXTPRO_1:4;
L448: 5 <= ( D69 + 5 ) by NAT_1:11;
L449: 1 < ( D69 + 5 ) by L448 , XXREAL_0:2;
L450: 11 = ( D70 . ( intpos ( D69 + 5 ) ) ) by L423 , L429 , SCMPDS_2:54
.= ( ( Comput (R12 , D70 , R1) ) . ( intpos ( D69 + 5 ) ) ) by L431 , L441 , L449
.= ( D73 . ( intpos ( ( D69 + 4 ) + 1 ) ) ) by EXTPRO_1:4
.= ( D73 . ( DataLoc (( D73 . ( SBP ) ) , ( RetIC )) ) ) by L431 , L442 , L2 , SCMPDS_I:def 14;
L451: ( R12 /. ( IC ( Comput (R12 , C15 , ( R1 + 9 )) ) ) ) = ( R12 . ( IC ( Comput (R12 , C15 , ( R1 + 9 )) ) ) ) by PBOOLE:143;
L452: ( IC ( Comput (R12 , C15 , ( R1 + 9 )) ) ) = ( ( abs ( D73 . ( DataLoc (( D73 . ( SBP ) ) , ( RetIC )) ) ) ) + 2 ) by L444 , SCMPDS_2:58
.= ( 11 + 2 ) by L450 , ABSVALUE:29;
L453: ( CurInstr (R12 , ( Comput (R12 , C15 , ( R1 + 9 )) )) ) = ( R12 . 13 ) by L452 , L451
.= D14 by L78 , L411;
L454: ( Comput (R12 , C15 , ( R1 + ( 9 + 1 ) )) ) = ( Comput (R12 , C15 , ( ( R1 + 9 ) + 1 )) )
.= ( Following (R12 , ( Comput (R12 , C15 , ( R1 + 9 )) )) ) by EXTPRO_1:3
.= ( Exec (D14 , ( Comput (R12 , C15 , ( R1 + 9 )) )) ) by L453;
L455: ( ( Comput (R12 , C15 , ( R1 + 9 )) ) . ( SBP ) ) = ( D73 . ( DataLoc (( D69 + 4 ) , ( RetSP )) ) ) by L431 , L442 , L444 , SCMPDS_2:58
.= ( D73 . ( intpos ( ( D69 + 4 ) + ( 0 ) ) ) ) by L2 , SCMPDS_I:def 13
.= D69 by L423 , L428 , L447 , SCMPDS_2:54;
L456: ( ( Comput (R12 , C15 , ( R1 + 9 )) ) . ( intpos ( D69 + 6 ) ) ) = ( D73 . ( intpos ( ( D69 + 4 ) + 2 ) ) ) by L444 , L150 , SCMPDS_2:58
.= ( D73 . ( DataLoc (( D70 . ( SBP ) ) , 2) ) ) by L431 , L2
.= ( D71 gcd D72 ) by L440 , EXTPRO_1:4;
L457: ( R12 /. ( IC ( Comput (R12 , C15 , ( R1 + 10 )) ) ) ) = ( R12 . ( IC ( Comput (R12 , C15 , ( R1 + 10 )) ) ) ) by PBOOLE:143;
L458: ( IC ( Comput (R12 , C15 , ( R1 + 10 )) ) ) = ( succ ( IC ( Comput (R12 , C15 , ( R1 + 9 )) ) ) ) by L454 , SCMPDS_2:47
.= ( 13 + 1 ) by L452;
L459: ( CurInstr (R12 , ( Comput (R12 , C15 , ( R1 + 10 )) )) ) = ( R12 . 14 ) by L458 , L457
.= D15 by L78 , L411;
thus L460:now
take D74 = ( R1 + 10 );
thus L461: ( CurInstr (R12 , ( Comput (R12 , C15 , D74) )) ) = ( return ( SBP ) ) by L459;
L462: ( DataLoc (( ( Comput (R12 , C15 , ( R1 + 9 )) ) . ( SBP ) ) , 2) ) = ( intpos ( D69 + 2 ) ) by L455 , L2;
thus L463: ( ( Comput (R12 , C15 , D74) ) . ( SBP ) ) = ( C15 . ( SBP ) ) by L462 , L454 , L455 , L150 , SCMPDS_2:47;
thus L464: ( ( Comput (R12 , C15 , D74) ) . ( DataLoc (( C15 . ( SBP ) ) , 2) ) ) = ( ( Comput (R12 , C15 , ( R1 + 9 )) ) . ( DataLoc (D69 , 6) ) ) by L454 , L455 , SCMPDS_2:47
.= ( D67 gcd ( D65 mod D67 ) ) by L435 , L436 , L456 , L2
.= ( D65 gcd D67 ) by L416 , L420 , NAT_D:30;
thus L465:now
let C16 being (Element of ( NAT ));
assume that
L466: 1 < C16
and
L467: C16 <= ( ( C15 . ( SBP ) ) + 1 );
L468: ( C15 . ( SBP ) ) <= ( D70 . ( SBP ) ) by L431 , NAT_1:11;
L469: ( ( C15 . ( SBP ) ) + 1 ) <= ( ( D70 . ( SBP ) ) + 1 ) by L468 , XREAL_1:6;
L470: C16 <= ( ( D70 . ( SBP ) ) + 1 ) by L469 , L467 , XXREAL_0:2;
L471: ( ( Comput (R12 , C15 , ( R1 + 9 )) ) . ( intpos C16 ) ) = ( D73 . ( intpos C16 ) ) by L444 , L466 , AMI_3:10 , SCMPDS_2:58
.= ( ( Comput (R12 , D70 , R1) ) . ( intpos C16 ) ) by EXTPRO_1:4
.= ( D70 . ( intpos C16 ) ) by L441 , L466 , L470;
L472: ( D69 + 1 ) < ( D69 + 2 ) by XREAL_1:6;
L473: ( ( Comput (R12 , C15 , 7) ) . ( intpos C16 ) ) = ( C15 . ( intpos C16 ) ) by L412 , L414 , L420 , L421 , L466 , L467 , L251 , L411;
thus L474: ( C15 . ( intpos C16 ) ) = ( D70 . ( intpos C16 ) ) by L473 , L423 , SCMPDS_2:54
.= ( ( Comput (R12 , C15 , D74) ) . ( intpos C16 ) ) by L454 , L462 , L467 , L471 , L472 , AMI_3:10 , SCMPDS_2:47;
end;
end;
end;
end;
begin
theorem
L462: (for R12 being (Instruction-Sequence of ( SCMPDS )) holds (for B18 being ( 0 ) -started (State of ( SCMPDS )) holds (( GCD-Algorithm ) c= R12 implies (for B19 , B20 being Integer holds ((( B18 . ( intpos 9 ) ) = B19 & ( B18 . ( intpos 10 ) ) = B20 & B19 >= ( 0 ) & B20 >= ( 0 )) implies ( ( Result (R12 , B18) ) . ( intpos 9 ) ) = ( B19 gcd B20 ))))))
proof
let R12 being (Instruction-Sequence of ( SCMPDS ));
let C17 being ( 0 ) -started (State of ( SCMPDS ));
set D75 = ( GCD-Algorithm );
assume L463: D75 c= R12;
let C18 , C19 being Integer;
assume that
L464: ( C17 . ( intpos 9 ) ) = C18
and
L465: ( C17 . ( intpos 10 ) ) = C19
and
L466: C18 >= ( 0 )
and
L467: C19 >= ( 0 );
set D76 = ( Comput (R12 , C17 , 4) );
L468: ( IC D76 ) = 5 by L110 , L463;
L469: ( D76 . ( GBP ) ) = ( 0 ) by L110 , L463;
L470: ( D76 . ( SBP ) ) = 7 by L110 , L463;
L471: ( D76 . ( intpos ( 7 + ( RetIC ) ) ) ) = 2 by L110 , L463;
L472: ( D76 . ( intpos 9 ) ) = ( C17 . ( intpos 9 ) ) by L110 , L463;
L473: ( D76 . ( DataLoc (( D76 . ( SBP ) ) , 3) ) ) = ( D76 . ( intpos ( 7 + 3 ) ) ) by L470 , L2
.= C19 by L465 , L110 , L463;
L474: ( DataLoc (( D76 . ( SBP ) ) , 2) ) = ( intpos ( 7 + 2 ) ) by L470 , L2;
L475: ( D76 . ( DataLoc (( D76 . ( SBP ) ) , 2) ) ) = C18 by L474 , L464 , L110 , L463;
consider R2 being (Element of ( NAT )) such that L476: ( CurInstr (R12 , ( Comput (R12 , D76 , R2) )) ) = ( return ( SBP ) ) and L477: ( D76 . ( SBP ) ) = ( ( Comput (R12 , D76 , R2) ) . ( SBP ) ) and L478: ( ( Comput (R12 , D76 , R2) ) . ( DataLoc (( D76 . ( SBP ) ) , 2) ) ) = ( ( D76 . ( DataLoc (( D76 . ( SBP ) ) , 2) ) ) gcd ( D76 . ( DataLoc (( D76 . ( SBP ) ) , 3) ) ) ) and L479: (for B21 being (Element of ( NAT )) holds ((1 < B21 & B21 <= ( ( D76 . ( SBP ) ) + 1 )) implies ( D76 . ( intpos B21 ) ) = ( ( Comput (R12 , D76 , R2) ) . ( intpos B21 ) ))) by L464 , L466 , L467 , L468 , L469 , L470 , L472 , L473 , L474 , L410 , L463;
L480: ( DataLoc (( ( Comput (R12 , D76 , R2) ) . ( SBP ) ) , ( RetIC )) ) = ( intpos ( 7 + 1 ) ) by L470 , L477 , L2 , SCMPDS_I:def 14;
L481: ( Comput (R12 , D76 , ( R2 + 1 )) ) = ( Following (R12 , ( Comput (R12 , D76 , R2) )) ) by EXTPRO_1:3
.= ( Exec (D15 , ( Comput (R12 , D76 , R2) )) ) by L476;
L482: (for B22 being (Element of ( NAT )) holds (B22 = ( ( Comput (R12 , D76 , R2) ) . ( DataLoc (( ( Comput (R12 , D76 , R2) ) . ( SBP ) ) , ( RetIC )) ) ) implies B22 = ( abs ( ( Comput (R12 , D76 , R2) ) . ( DataLoc (( ( Comput (R12 , D76 , R2) ) . ( SBP ) ) , ( RetIC )) ) ) ))) by ABSVALUE:29;
L483: ( IC ( Comput (R12 , C17 , ( 4 + ( R2 + 1 ) )) ) ) = ( ( Comput (R12 , D76 , ( R2 + 1 )) ) . ( IC ( SCMPDS ) ) ) by EXTPRO_1:4
.= ( ( abs ( ( Comput (R12 , D76 , R2) ) . ( DataLoc (( ( Comput (R12 , D76 , R2) ) . ( SBP ) ) , ( RetIC )) ) ) ) + 2 ) by L481 , SCMPDS_2:58
.= ( 2 + 2 ) by L470 , L471 , L479 , L480 , L482 , SCMPDS_I:def 14;
L484: ( R12 . ( IC ( Comput (R12 , C17 , ( 4 + ( R2 + 1 ) )) ) ) ) = ( R12 . ( IC ( Comput (R12 , C17 , ( 4 + ( R2 + 1 ) )) ) ) )
.= D5 by L78 , L483 , L463;
L485: ( Result (R12 , C17) ) = ( Comput (R12 , C17 , ( 4 + ( R2 + 1 ) )) ) by L484 , EXTPRO_1:7
.= ( Comput (R12 , D76 , ( R2 + 1 )) ) by EXTPRO_1:4;
thus L486: thesis by L485 , L473 , L474 , L475 , L478 , L481 , AMI_3:10 , SCMPDS_2:58;
end;
L487: (for R2 being (Element of ( NAT )) holds (for R8 being (State of ( SCMPDS )) holds (for R9 being (State of ( SCMPDS )) holds (for R13 being (Instruction-Sequence of ( SCMPDS )) holds (for R14 being (Instruction-Sequence of ( SCMPDS )) holds ((( GCD-Algorithm ) c= R13 & ( GCD-Algorithm ) c= R14 & ( IC R8 ) = 5 & R2 = ( R8 . ( SBP ) ) & ( R8 . ( GBP ) ) = ( 0 ) & ( R8 . ( DataLoc (( R8 . ( SBP ) ) , 3) ) ) > ( 0 ) & ( IC R9 ) = ( IC R8 ) & ( R9 . ( SBP ) ) = ( R8 . ( SBP ) ) & ( R9 . ( GBP ) ) = ( 0 ) & ( R9 . ( DataLoc (( R8 . ( SBP ) ) , 2) ) ) = ( R8 . ( DataLoc (( R8 . ( SBP ) ) , 2) ) ) & ( R9 . ( DataLoc (( R8 . ( SBP ) ) , 3) ) ) = ( R8 . ( DataLoc (( R8 . ( SBP ) ) , 3) ) )) implies (( IC ( Comput (R13 , R8 , 7) ) ) = ( 5 + 7 ) & ( Comput (R13 , R8 , 8) ) = ( Exec (D13 , ( Comput (R13 , R8 , 7) )) ) & ( ( Comput (R13 , R8 , 7) ) . ( SBP ) ) = ( R2 + 4 ) & ( ( Comput (R13 , R8 , 7) ) . ( GBP ) ) = ( 0 ) & ( ( Comput (R13 , R8 , 7) ) . ( intpos ( R2 + 7 ) ) ) = ( ( R8 . ( intpos ( R2 + 2 ) ) ) mod ( R8 . ( intpos ( R2 + 3 ) ) ) ) & ( ( Comput (R13 , R8 , 7) ) . ( intpos ( R2 + 6 ) ) ) = ( R8 . ( intpos ( R2 + 3 ) ) ) & ( IC ( Comput (R14 , R9 , 7) ) ) = ( 5 + 7 ) & ( Comput (R14 , R9 , 8) ) = ( Exec (D13 , ( Comput (R14 , R9 , 7) )) ) & ( ( Comput (R14 , R9 , 7) ) . ( SBP ) ) = ( R2 + 4 ) & ( ( Comput (R14 , R9 , 7) ) . ( GBP ) ) = ( 0 ) & ( ( Comput (R14 , R9 , 7) ) . ( intpos ( R2 + 7 ) ) ) = ( ( R8 . ( intpos ( R2 + 2 ) ) ) mod ( R8 . ( intpos ( R2 + 3 ) ) ) ) & ( ( Comput (R14 , R9 , 7) ) . ( intpos ( R2 + 6 ) ) ) = ( R8 . ( intpos ( R2 + 3 ) ) ) & ( ( Comput (R13 , R8 , 7) ) . ( intpos ( R2 + 4 ) ) ) = R2 & ( ( Comput (R13 , R8 , 7) ) . ( intpos ( R2 + 5 ) ) ) = 11 & ( ( Comput (R14 , R9 , 7) ) . ( intpos ( R2 + 4 ) ) ) = R2 & ( ( Comput (R14 , R9 , 7) ) . ( intpos ( R2 + 5 ) ) ) = 11)))))))
proof
let R2 being (Element of ( NAT ));
let R8 being (State of ( SCMPDS ));
let R9 being (State of ( SCMPDS ));
let R13 being (Instruction-Sequence of ( SCMPDS ));
let R14 being (Instruction-Sequence of ( SCMPDS ));
set D77 = ( GCD-Algorithm );
assume that
L488: D77 c= R13
and
L489: D77 c= R14;
assume L490: ( IC R8 ) = 5;
assume L491: R2 = ( R8 . ( SBP ) );
assume L492: ( R8 . ( GBP ) ) = ( 0 );
assume L493: ( R8 . ( DataLoc (( R8 . ( SBP ) ) , 3) ) ) > ( 0 );
assume that
L494: ( IC R9 ) = ( IC R8 )
and
L495: ( R9 . ( SBP ) ) = ( R8 . ( SBP ) )
and
L496: ( R9 . ( GBP ) ) = ( 0 );
assume that
L497: ( R9 . ( DataLoc (( R8 . ( SBP ) ) , 2) ) ) = ( R8 . ( DataLoc (( R8 . ( SBP ) ) , 2) ) )
and
L498: ( R9 . ( DataLoc (( R8 . ( SBP ) ) , 3) ) ) = ( R8 . ( DataLoc (( R8 . ( SBP ) ) , 3) ) );
L499: ( DataLoc (( R8 . ( SBP ) ) , 2) ) = ( intpos ( R2 + 2 ) ) by L491 , L2;
L500: ( DataLoc (( R8 . ( SBP ) ) , 3) ) = ( intpos ( R2 + 3 ) ) by L491 , L2;
thus L501: (( IC ( Comput (R13 , R8 , 7) ) ) = ( 5 + 7 ) & ( Comput (R13 , R8 , 8) ) = ( Exec (D13 , ( Comput (R13 , R8 , 7) )) ) & ( ( Comput (R13 , R8 , 7) ) . ( SBP ) ) = ( R2 + 4 ) & ( ( Comput (R13 , R8 , 7) ) . ( GBP ) ) = ( 0 )) by L490 , L491 , L492 , L493 , L154 , L488;
thus L502: ( ( Comput (R13 , R8 , 7) ) . ( intpos ( R2 + 7 ) ) ) = ( ( R8 . ( intpos ( R2 + 2 ) ) ) mod ( R8 . ( intpos ( R2 + 3 ) ) ) ) by L490 , L491 , L492 , L493 , L499 , L500 , L154 , L488;
thus L503: ( ( Comput (R13 , R8 , 7) ) . ( intpos ( R2 + 6 ) ) ) = ( R8 . ( intpos ( R2 + 3 ) ) ) by L490 , L491 , L492 , L493 , L500 , L154 , L488;
thus L504: (( IC ( Comput (R14 , R9 , 7) ) ) = ( 5 + 7 ) & ( Comput (R14 , R9 , 8) ) = ( Exec (D13 , ( Comput (R14 , R9 , 7) )) ) & ( ( Comput (R14 , R9 , 7) ) . ( SBP ) ) = ( R2 + 4 ) & ( ( Comput (R14 , R9 , 7) ) . ( GBP ) ) = ( 0 )) by L490 , L491 , L493 , L494 , L495 , L496 , L498 , L154 , L489;
thus L505: ( ( Comput (R14 , R9 , 7) ) . ( intpos ( R2 + 7 ) ) ) = ( ( R8 . ( intpos ( R2 + 2 ) ) ) mod ( R8 . ( intpos ( R2 + 3 ) ) ) ) by L490 , L491 , L493 , L494 , L495 , L496 , L497 , L498 , L499 , L500 , L154 , L489;
thus L506: ( ( Comput (R14 , R9 , 7) ) . ( intpos ( R2 + 6 ) ) ) = ( R8 . ( intpos ( R2 + 3 ) ) ) by L490 , L491 , L493 , L494 , L495 , L496 , L498 , L500 , L154 , L489;
thus L507: (( ( Comput (R13 , R8 , 7) ) . ( intpos ( R2 + 4 ) ) ) = R2 & ( ( Comput (R13 , R8 , 7) ) . ( intpos ( R2 + 5 ) ) ) = 11) by L490 , L491 , L492 , L493 , L154 , L488;
thus L508: thesis by L490 , L491 , L493 , L494 , L495 , L496 , L498 , L154 , L489;
end;
L509: (for R2 being (Element of ( NAT )) holds (for R8 being (State of ( SCMPDS )) holds (for R9 being (State of ( SCMPDS )) holds (for R13 being (Instruction-Sequence of ( SCMPDS )) holds (for R14 being (Instruction-Sequence of ( SCMPDS )) holds ((( GCD-Algorithm ) c= R13 & ( GCD-Algorithm ) c= R14 & ( IC R8 ) = 5 & R2 = ( R8 . ( SBP ) ) & ( R8 . ( GBP ) ) = ( 0 ) & ( R8 . ( DataLoc (( R8 . ( SBP ) ) , 3) ) ) > ( 0 ) & ( IC R9 ) = ( IC R8 ) & ( R9 . ( SBP ) ) = ( R8 . ( SBP ) ) & ( R9 . ( GBP ) ) = ( 0 ) & ( R9 . ( DataLoc (( R8 . ( SBP ) ) , 2) ) ) = ( R8 . ( DataLoc (( R8 . ( SBP ) ) , 2) ) ) & ( R9 . ( DataLoc (( R8 . ( SBP ) ) , 3) ) ) = ( R8 . ( DataLoc (( R8 . ( SBP ) ) , 3) ) )) implies (for B23 being (Element of ( NAT )) holds (for B24 being Int_position holds ((B23 <= 7 & ( R8 . B24 ) = ( R9 . B24 )) implies (( IC ( Comput (R13 , R8 , B23) ) ) = ( IC ( Comput (R14 , R9 , B23) ) ) & ( ( Comput (R13 , R8 , B23) ) . B24 ) = ( ( Comput (R14 , R9 , B23) ) . B24 )))))))))))
proof
let R2 being (Element of ( NAT ));
let R8 being (State of ( SCMPDS ));
let R9 being (State of ( SCMPDS ));
let R13 being (Instruction-Sequence of ( SCMPDS ));
let R14 being (Instruction-Sequence of ( SCMPDS ));
set D78 = ( GCD-Algorithm );
assume that
L510: D78 c= R13
and
L511: D78 c= R14;
assume L512: ( IC R8 ) = 5;
assume L513: R2 = ( R8 . ( SBP ) );
assume L514: ( R8 . ( GBP ) ) = ( 0 );
assume L515: ( R8 . ( DataLoc (( R8 . ( SBP ) ) , 3) ) ) > ( 0 );
assume that
L516: ( IC R9 ) = ( IC R8 )
and
L517: ( R9 . ( SBP ) ) = ( R8 . ( SBP ) )
and
L518: ( R9 . ( GBP ) ) = ( 0 );
assume that
L519: ( R9 . ( DataLoc (( R8 . ( SBP ) ) , 2) ) ) = ( R8 . ( DataLoc (( R8 . ( SBP ) ) , 2) ) )
and
L520: ( R9 . ( DataLoc (( R8 . ( SBP ) ) , 3) ) ) = ( R8 . ( DataLoc (( R8 . ( SBP ) ) , 3) ) );
L521: ( R13 /. ( IC R8 ) ) = ( R13 . ( IC R8 ) ) by PBOOLE:143;
L522: ( Comput (R13 , R8 , ( 1 + ( 0 ) )) ) = ( Following (R13 , ( Comput (R13 , R8 , ( 0 )) )) ) by EXTPRO_1:3
.= ( Following (R13 , R8) ) by EXTPRO_1:2
.= ( Exec (D6 , R8) ) by L521 , L512 , L78 , L510;
L523: ( R14 /. ( IC R9 ) ) = ( R14 . ( IC R9 ) ) by PBOOLE:143;
L524: ( Comput (R14 , R9 , ( 1 + ( 0 ) )) ) = ( Following (R14 , ( Comput (R14 , R9 , ( 0 )) )) ) by EXTPRO_1:3
.= ( Following (R14 , R9) ) by EXTPRO_1:2
.= ( Exec (D6 , R9) ) by L512 , L516 , L78 , L523 , L511;
L525: ( R13 /. ( IC ( Comput (R13 , R8 , 1) ) ) ) = ( R13 . ( IC ( Comput (R13 , R8 , 1) ) ) ) by PBOOLE:143;
L526: ( IC ( Comput (R13 , R8 , 1) ) ) = ( succ ( IC R8 ) ) by L515 , L522 , SCMPDS_2:56
.= ( 5 + 1 ) by L512;
L527: ( CurInstr (R13 , ( Comput (R13 , R8 , 1) )) ) = ( R13 . 6 ) by L526 , L525
.= D7 by L78 , L510;
L528: ( Comput (R13 , R8 , ( 1 + 1 )) ) = ( Following (R13 , ( Comput (R13 , R8 , 1) )) ) by EXTPRO_1:3
.= ( Exec (D7 , ( Comput (R13 , R8 , 1) )) ) by L527;
L529: ( ( Comput (R13 , R8 , 1) ) . ( SBP ) ) = R2 by L513 , L522 , SCMPDS_2:56;
L530: ( ( Comput (R13 , R8 , 1) ) . ( GBP ) ) = ( 0 ) by L514 , L522 , SCMPDS_2:56;
L531: ( R14 /. ( IC ( Comput (R14 , R9 , 1) ) ) ) = ( R14 . ( IC ( Comput (R14 , R9 , 1) ) ) ) by PBOOLE:143;
L532: ( IC ( Comput (R14 , R9 , 1) ) ) = ( succ ( IC R9 ) ) by L515 , L517 , L520 , L524 , SCMPDS_2:56
.= ( 5 + 1 ) by L512 , L516;
L533: ( CurInstr (R14 , ( Comput (R14 , R9 , 1) )) ) = ( R14 . 6 ) by L532 , L531
.= D7 by L78 , L511;
L534: ( Comput (R14 , R9 , ( 1 + 1 )) ) = ( Following (R14 , ( Comput (R14 , R9 , 1) )) ) by EXTPRO_1:3
.= ( Exec (D7 , ( Comput (R14 , R9 , 1) )) ) by L533;
L535: ( R13 /. ( IC ( Comput (R13 , R8 , 2) ) ) ) = ( R13 . ( IC ( Comput (R13 , R8 , 2) ) ) ) by PBOOLE:143;
L536: ( IC ( Comput (R13 , R8 , 2) ) ) = ( succ ( IC ( Comput (R13 , R8 , 1) ) ) ) by L528 , SCMPDS_2:47
.= ( 6 + 1 ) by L526;
L537: ( CurInstr (R13 , ( Comput (R13 , R8 , 2) )) ) = ( R13 . 7 ) by L536 , L535
.= D8 by L78 , L510;
L538: ( Comput (R13 , R8 , ( 2 + 1 )) ) = ( Following (R13 , ( Comput (R13 , R8 , 2) )) ) by EXTPRO_1:3
.= ( Exec (D8 , ( Comput (R13 , R8 , 2) )) ) by L537;
L539: ( DataLoc (( ( Comput (R13 , R8 , 1) ) . ( SBP ) ) , 6) ) = ( intpos ( R2 + 6 ) ) by L529 , L2;
L540: ( ( Comput (R13 , R8 , 2) ) . ( SBP ) ) = R2 by L539 , L528 , L529 , L150 , SCMPDS_2:47;
L541: ( ( Comput (R13 , R8 , 2) ) . ( GBP ) ) = ( 0 ) by L528 , L530 , L539 , L146 , SCMPDS_2:47;
L542: ( R14 /. ( IC ( Comput (R14 , R9 , 2) ) ) ) = ( R14 . ( IC ( Comput (R14 , R9 , 2) ) ) ) by PBOOLE:143;
L543: ( IC ( Comput (R14 , R9 , 2) ) ) = ( succ ( IC ( Comput (R14 , R9 , 1) ) ) ) by L534 , SCMPDS_2:47
.= ( 6 + 1 ) by L532;
L544: ( CurInstr (R14 , ( Comput (R14 , R9 , 2) )) ) = ( R14 . 7 ) by L543 , L542
.= D8 by L78 , L511;
L545: ( Comput (R14 , R9 , ( 2 + 1 )) ) = ( Following (R14 , ( Comput (R14 , R9 , 2) )) ) by EXTPRO_1:3
.= ( Exec (D8 , ( Comput (R14 , R9 , 2) )) ) by L544;
L546: ( R13 /. ( IC ( Comput (R13 , R8 , 3) ) ) ) = ( R13 . ( IC ( Comput (R13 , R8 , 3) ) ) ) by PBOOLE:143;
L547: ( IC ( Comput (R13 , R8 , 3) ) ) = ( succ ( IC ( Comput (R13 , R8 , 2) ) ) ) by L538 , SCMPDS_2:52
.= ( 7 + 1 ) by L536;
L548: ( CurInstr (R13 , ( Comput (R13 , R8 , 3) )) ) = ( R13 . 8 ) by L547 , L546
.= D9 by L78 , L510;
L549: ( Comput (R13 , R8 , ( 3 + 1 )) ) = ( Following (R13 , ( Comput (R13 , R8 , 3) )) ) by EXTPRO_1:3
.= ( Exec (D9 , ( Comput (R13 , R8 , 3) )) ) by L548;
L550: ( DataLoc (( ( Comput (R13 , R8 , 2) ) . ( SBP ) ) , 2) ) = ( intpos ( R2 + 2 ) ) by L540 , L2;
L551: ( SBP ) <> ( DataLoc (( ( Comput (R13 , R8 , 2) ) . ( SBP ) ) , 2) ) by L550 , L150;
L552: ( DataLoc (( ( Comput (R13 , R8 , 2) ) . ( SBP ) ) , 3) ) = ( intpos ( R2 + 3 ) ) by L540 , L2;
L553: ( SBP ) <> ( DataLoc (( ( Comput (R13 , R8 , 2) ) . ( SBP ) ) , 3) ) by L552 , L150;
L554: ( ( Comput (R13 , R8 , 3) ) . ( SBP ) ) = R2 by L553 , L538 , L540 , L551 , SCMPDS_2:52;
L555: ( GBP ) <> ( DataLoc (( ( Comput (R13 , R8 , 2) ) . ( SBP ) ) , 2) ) by L550 , L146;
L556: ( GBP ) <> ( DataLoc (( ( Comput (R13 , R8 , 2) ) . ( SBP ) ) , 3) ) by L552 , L146;
L557: ( ( Comput (R13 , R8 , 3) ) . ( GBP ) ) = ( 0 ) by L556 , L538 , L541 , L555 , SCMPDS_2:52;
L558: ( R14 /. ( IC ( Comput (R14 , R9 , 3) ) ) ) = ( R14 . ( IC ( Comput (R14 , R9 , 3) ) ) ) by PBOOLE:143;
L559: ( IC ( Comput (R14 , R9 , 3) ) ) = ( succ ( IC ( Comput (R14 , R9 , 2) ) ) ) by L545 , SCMPDS_2:52
.= ( 7 + 1 ) by L543;
L560: ( CurInstr (R14 , ( Comput (R14 , R9 , 3) )) ) = ( R14 . 8 ) by L559 , L558
.= D9 by L78 , L511;
L561: ( Comput (R14 , R9 , ( 3 + 1 )) ) = ( Following (R14 , ( Comput (R14 , R9 , 3) )) ) by EXTPRO_1:3
.= ( Exec (D9 , ( Comput (R14 , R9 , 3) )) ) by L560;
L562: ( R13 /. ( IC ( Comput (R13 , R8 , 4) ) ) ) = ( R13 . ( IC ( Comput (R13 , R8 , 4) ) ) ) by PBOOLE:143;
L563: ( IC ( Comput (R13 , R8 , 4) ) ) = ( succ ( IC ( Comput (R13 , R8 , 3) ) ) ) by L549 , SCMPDS_2:47
.= ( 8 + 1 ) by L547;
L564: ( CurInstr (R13 , ( Comput (R13 , R8 , 4) )) ) = ( R13 . 9 ) by L563 , L562
.= D10 by L78 , L510;
L565: ( Comput (R13 , R8 , ( 4 + 1 )) ) = ( Following (R13 , ( Comput (R13 , R8 , 4) )) ) by EXTPRO_1:3
.= ( Exec (D10 , ( Comput (R13 , R8 , 4) )) ) by L564;
L566: ( DataLoc (( ( Comput (R13 , R8 , 3) ) . ( SBP ) ) , 7) ) = ( intpos ( R2 + 7 ) ) by L554 , L2;
L567: ( ( Comput (R13 , R8 , 4) ) . ( SBP ) ) = R2 by L566 , L549 , L554 , L150 , SCMPDS_2:47;
L568: ( ( Comput (R13 , R8 , 4) ) . ( GBP ) ) = ( 0 ) by L549 , L557 , L566 , L146 , SCMPDS_2:47;
L569: ( R14 /. ( IC ( Comput (R14 , R9 , 4) ) ) ) = ( R14 . ( IC ( Comput (R14 , R9 , 4) ) ) ) by PBOOLE:143;
L570: ( IC ( Comput (R14 , R9 , 4) ) ) = ( succ ( IC ( Comput (R14 , R9 , 3) ) ) ) by L561 , SCMPDS_2:47
.= ( 8 + 1 ) by L559;
L571: ( CurInstr (R14 , ( Comput (R14 , R9 , 4) )) ) = ( R14 . 9 ) by L570 , L569
.= D10 by L78 , L511;
L572: ( Comput (R14 , R9 , ( 4 + 1 )) ) = ( Following (R14 , ( Comput (R14 , R9 , 4) )) ) by EXTPRO_1:3
.= ( Exec (D10 , ( Comput (R14 , R9 , 4) )) ) by L571;
L573: ( R13 /. ( IC ( Comput (R13 , R8 , 5) ) ) ) = ( R13 . ( IC ( Comput (R13 , R8 , 5) ) ) ) by PBOOLE:143;
L574: ( IC ( Comput (R13 , R8 , 5) ) ) = ( succ ( IC ( Comput (R13 , R8 , 4) ) ) ) by L565 , SCMPDS_2:47
.= ( 9 + 1 ) by L563;
L575: ( CurInstr (R13 , ( Comput (R13 , R8 , 5) )) ) = ( R13 . 10 ) by L574 , L573
.= D11 by L78 , L510;
L576: ( Comput (R13 , R8 , ( 5 + 1 )) ) = ( Following (R13 , ( Comput (R13 , R8 , 5) )) ) by EXTPRO_1:3
.= ( Exec (D11 , ( Comput (R13 , R8 , 5) )) ) by L575;
L577: ( DataLoc (( ( Comput (R13 , R8 , 4) ) . ( SBP ) ) , ( 4 + ( RetSP ) )) ) = ( intpos ( R2 + ( 4 + ( 0 ) ) ) ) by L567 , L2 , SCMPDS_I:def 13;
L578: ( ( Comput (R13 , R8 , 5) ) . ( GBP ) ) = ( 0 ) by L577 , L565 , L568 , L146 , SCMPDS_2:47;
L579: ( R14 /. ( IC ( Comput (R14 , R9 , 5) ) ) ) = ( R14 . ( IC ( Comput (R14 , R9 , 5) ) ) ) by PBOOLE:143;
L580: ( IC ( Comput (R14 , R9 , 5) ) ) = ( succ ( IC ( Comput (R14 , R9 , 4) ) ) ) by L572 , SCMPDS_2:47
.= ( 9 + 1 ) by L570;
L581: ( CurInstr (R14 , ( Comput (R14 , R9 , 5) )) ) = ( R14 . 10 ) by L580 , L579
.= D11 by L78 , L511;
L582: ( Comput (R14 , R9 , ( 5 + 1 )) ) = ( Following (R14 , ( Comput (R14 , R9 , 5) )) ) by EXTPRO_1:3
.= ( Exec (D11 , ( Comput (R14 , R9 , 5) )) ) by L581;
L583: ( R13 /. ( IC ( Comput (R13 , R8 , 6) ) ) ) = ( R13 . ( IC ( Comput (R13 , R8 , 6) ) ) ) by PBOOLE:143;
L584: ( IC ( Comput (R13 , R8 , 6) ) ) = ( succ ( IC ( Comput (R13 , R8 , 5) ) ) ) by L576 , SCMPDS_2:48
.= ( 10 + 1 ) by L574;
L585: ( CurInstr (R13 , ( Comput (R13 , R8 , 6) )) ) = ( R13 . 11 ) by L584 , L583
.= D12 by L78 , L510;
L586: ( Comput (R13 , R8 , ( 6 + 1 )) ) = ( Following (R13 , ( Comput (R13 , R8 , 6) )) ) by EXTPRO_1:3
.= ( Exec (D12 , ( Comput (R13 , R8 , 6) )) ) by L585;
L587: ( R14 /. ( IC ( Comput (R14 , R9 , 6) ) ) ) = ( R14 . ( IC ( Comput (R14 , R9 , 6) ) ) ) by PBOOLE:143;
L588: ( IC ( Comput (R14 , R9 , 6) ) ) = ( succ ( IC ( Comput (R14 , R9 , 5) ) ) ) by L582 , SCMPDS_2:48
.= ( 10 + 1 ) by L580;
L589: ( CurInstr (R14 , ( Comput (R14 , R9 , 6) )) ) = ( R14 . 11 ) by L588 , L587
.= D12 by L78 , L511;
L590: ( Comput (R14 , R9 , ( 6 + 1 )) ) = ( Following (R14 , ( Comput (R14 , R9 , 6) )) ) by EXTPRO_1:3
.= ( Exec (D12 , ( Comput (R14 , R9 , 6) )) ) by L589;
L591:
now
let R4 being Int_position;
assume L592: ( R8 . R4 ) = ( R9 . R4 );
thus L593: ( ( Comput (R13 , R8 , 1) ) . R4 ) = ( R9 . R4 ) by L592 , L522 , SCMPDS_2:56
.= ( ( Comput (R14 , R9 , 1) ) . R4 ) by L524 , SCMPDS_2:56;
end;
L594: (for R4 being Int_position holds (( R8 . R4 ) = ( R9 . R4 ) implies ( ( Comput (R13 , R8 , 2) ) . R4 ) = ( ( Comput (R14 , R9 , 2) ) . R4 )))
proof
let R4 being Int_position;
assume L595: ( R8 . R4 ) = ( R9 . R4 );
per cases ;
suppose L596: R4 = ( DataLoc (( ( Comput (R13 , R8 , 1) ) . ( SBP ) ) , 6) );

L597: R4 = ( DataLoc (( ( Comput (R14 , R9 , 1) ) . ( SBP ) ) , 6) ) by L596 , L517 , L591;
thus L598: ( ( Comput (R13 , R8 , 2) ) . R4 ) = ( ( Comput (R13 , R8 , 1) ) . ( DataLoc (( R8 . ( SBP ) ) , 3) ) ) by L513 , L528 , L529 , L596 , SCMPDS_2:47
.= ( ( Comput (R14 , R9 , 1) ) . ( DataLoc (( ( Comput (R13 , R8 , 1) ) . ( SBP ) ) , 3) ) ) by L513 , L520 , L529 , L591
.= ( ( Comput (R14 , R9 , 1) ) . ( DataLoc (( ( Comput (R14 , R9 , 1) ) . ( SBP ) ) , 3) ) ) by L517 , L591
.= ( ( Comput (R14 , R9 , 2) ) . R4 ) by L534 , L597 , SCMPDS_2:47;
end;
suppose L599: R4 <> ( DataLoc (( ( Comput (R13 , R8 , 1) ) . ( SBP ) ) , 6) );

L600: R4 <> ( DataLoc (( ( Comput (R14 , R9 , 1) ) . ( SBP ) ) , 6) ) by L599 , L517 , L591;
thus L601: ( ( Comput (R13 , R8 , 2) ) . R4 ) = ( ( Comput (R13 , R8 , 1) ) . R4 ) by L528 , L599 , SCMPDS_2:47
.= ( ( Comput (R14 , R9 , 1) ) . R4 ) by L591 , L595
.= ( ( Comput (R14 , R9 , 2) ) . R4 ) by L534 , L600 , SCMPDS_2:47;
end;
end;
L603:
now
let R4 being Int_position;
assume L604: ( R8 . R4 ) = ( R9 . R4 );
set D79 = ( DataLoc (( ( Comput (R13 , R8 , 2) ) . ( SBP ) ) , 2) );
set D80 = ( DataLoc (( ( Comput (R13 , R8 , 2) ) . ( SBP ) ) , 3) );
set D81 = ( DataLoc (( ( Comput (R14 , R9 , 2) ) . ( SBP ) ) , 2) );
set D82 = ( DataLoc (( ( Comput (R14 , R9 , 2) ) . ( SBP ) ) , 3) );
L605: D79 = D81 by L517 , L594;
L606: D80 = D82 by L517 , L594;
per cases ;
suppose L607: (R4 <> D79 & R4 <> D80);

thus L608: ( ( Comput (R13 , R8 , 3) ) . R4 ) = ( ( Comput (R13 , R8 , 2) ) . R4 ) by L607 , L538 , SCMPDS_2:52
.= ( ( Comput (R14 , R9 , 2) ) . R4 ) by L594 , L604
.= ( ( Comput (R14 , R9 , 3) ) . R4 ) by L545 , L605 , L606 , L607 , SCMPDS_2:52;
end;
suppose L609: R4 = D79;

L610: ( R2 + 2 ) <> ( R2 + 3 );
L611: D79 <> D80 by L610 , L550 , L552 , AMI_3:10;
L612: D81 <> D82 by L550 , L552 , L605 , L606 , L610 , AMI_3:10;
thus L613: ( ( Comput (R13 , R8 , 3) ) . R4 ) = ( ( ( Comput (R13 , R8 , 2) ) . D79 ) div ( ( Comput (R13 , R8 , 2) ) . D80 ) ) by L538 , L609 , L611 , SCMPDS_2:52
.= ( ( ( Comput (R14 , R9 , 2) ) . D79 ) div ( ( Comput (R13 , R8 , 2) ) . D80 ) ) by L513 , L519 , L540 , L594
.= ( ( ( Comput (R14 , R9 , 2) ) . D79 ) div ( ( Comput (R14 , R9 , 2) ) . D80 ) ) by L513 , L520 , L540 , L594
.= ( ( Comput (R14 , R9 , 3) ) . R4 ) by L545 , L605 , L606 , L609 , L612 , SCMPDS_2:52;
end;
suppose L614: R4 = D80;

thus L615: ( ( Comput (R13 , R8 , 3) ) . R4 ) = ( ( ( Comput (R13 , R8 , 2) ) . D79 ) mod ( ( Comput (R13 , R8 , 2) ) . D80 ) ) by L614 , L538 , SCMPDS_2:52
.= ( ( ( Comput (R14 , R9 , 2) ) . D79 ) mod ( ( Comput (R13 , R8 , 2) ) . D80 ) ) by L513 , L519 , L540 , L594
.= ( ( ( Comput (R14 , R9 , 2) ) . D79 ) mod ( ( Comput (R14 , R9 , 2) ) . D80 ) ) by L513 , L520 , L540 , L594
.= ( ( Comput (R14 , R9 , 3) ) . R4 ) by L545 , L605 , L606 , L614 , SCMPDS_2:52;
end;
end;
L617:
now
let R4 being Int_position;
assume L618: ( R8 . R4 ) = ( R9 . R4 );
per cases ;
suppose L619: R4 = ( DataLoc (( ( Comput (R13 , R8 , 3) ) . ( SBP ) ) , 7) );

L620: R4 = ( DataLoc (( ( Comput (R14 , R9 , 3) ) . ( SBP ) ) , 7) ) by L619 , L517 , L603;
thus L621: ( ( Comput (R13 , R8 , 4) ) . R4 ) = ( ( Comput (R13 , R8 , 3) ) . ( DataLoc (( ( Comput (R13 , R8 , 3) ) . ( SBP ) ) , 3) ) ) by L549 , L619 , SCMPDS_2:47
.= ( ( Comput (R14 , R9 , 3) ) . ( DataLoc (( ( Comput (R13 , R8 , 3) ) . ( SBP ) ) , 3) ) ) by L513 , L520 , L554 , L603
.= ( ( Comput (R14 , R9 , 3) ) . ( DataLoc (( ( Comput (R14 , R9 , 3) ) . ( SBP ) ) , 3) ) ) by L517 , L603
.= ( ( Comput (R14 , R9 , 4) ) . R4 ) by L561 , L620 , SCMPDS_2:47;
end;
suppose L622: R4 <> ( DataLoc (( ( Comput (R13 , R8 , 3) ) . ( SBP ) ) , 7) );

L623: R4 <> ( DataLoc (( ( Comput (R14 , R9 , 3) ) . ( SBP ) ) , 7) ) by L622 , L517 , L603;
thus L624: ( ( Comput (R13 , R8 , 4) ) . R4 ) = ( ( Comput (R13 , R8 , 3) ) . R4 ) by L549 , L622 , SCMPDS_2:47
.= ( ( Comput (R14 , R9 , 3) ) . R4 ) by L603 , L618
.= ( ( Comput (R14 , R9 , 4) ) . R4 ) by L561 , L623 , SCMPDS_2:47;
end;
end;
L626:
now
let R4 being Int_position;
assume L627: ( R8 . R4 ) = ( R9 . R4 );
L628: ( R8 . ( DataLoc (( ( Comput (R13 , R8 , 4) ) . ( GBP ) ) , 1) ) ) = ( R9 . ( intpos ( ( 0 ) + 1 ) ) ) by L517 , L568 , L2
.= ( R9 . ( DataLoc (( ( Comput (R13 , R8 , 4) ) . ( GBP ) ) , 1) ) ) by L568 , L2;
per cases ;
suppose L629: R4 = ( DataLoc (( ( Comput (R13 , R8 , 4) ) . ( SBP ) ) , ( 4 + ( RetSP ) )) );

L630: R4 = ( DataLoc (( ( Comput (R14 , R9 , 4) ) . ( SBP ) ) , ( 4 + ( RetSP ) )) ) by L629 , L517 , L617;
thus L631: ( ( Comput (R13 , R8 , 5) ) . R4 ) = ( ( Comput (R13 , R8 , 4) ) . ( DataLoc (( ( Comput (R13 , R8 , 4) ) . ( GBP ) ) , 1) ) ) by L565 , L629 , SCMPDS_2:47
.= ( ( Comput (R14 , R9 , 4) ) . ( DataLoc (( ( Comput (R13 , R8 , 4) ) . ( GBP ) ) , 1) ) ) by L617 , L628
.= ( ( Comput (R14 , R9 , 4) ) . ( DataLoc (( ( Comput (R14 , R9 , 4) ) . ( GBP ) ) , 1) ) ) by L514 , L518 , L617
.= ( ( Comput (R14 , R9 , 5) ) . R4 ) by L572 , L630 , SCMPDS_2:47;
end;
suppose L632: R4 <> ( DataLoc (( ( Comput (R13 , R8 , 4) ) . ( SBP ) ) , ( 4 + ( RetSP ) )) );

L633: R4 <> ( DataLoc (( ( Comput (R14 , R9 , 4) ) . ( SBP ) ) , ( 4 + ( RetSP ) )) ) by L632 , L517 , L617;
thus L634: ( ( Comput (R13 , R8 , 5) ) . R4 ) = ( ( Comput (R13 , R8 , 4) ) . R4 ) by L565 , L632 , SCMPDS_2:47
.= ( ( Comput (R14 , R9 , 4) ) . R4 ) by L617 , L627
.= ( ( Comput (R14 , R9 , 5) ) . R4 ) by L572 , L633 , SCMPDS_2:47;
end;
end;
L636:
now
let R4 being Int_position;
assume L637: ( R8 . R4 ) = ( R9 . R4 );
L638: ( R8 . ( DataLoc (( ( Comput (R13 , R8 , 5) ) . ( GBP ) ) , 1) ) ) = ( R9 . ( intpos ( ( 0 ) + 1 ) ) ) by L517 , L578 , L2
.= ( R9 . ( DataLoc (( ( Comput (R13 , R8 , 5) ) . ( GBP ) ) , 1) ) ) by L578 , L2;
per cases ;
suppose L639: R4 = ( DataLoc (( ( Comput (R13 , R8 , 5) ) . ( GBP ) ) , 1) );

L640: R4 = ( DataLoc (( ( Comput (R14 , R9 , 5) ) . ( GBP ) ) , 1) ) by L639 , L514 , L518 , L626;
thus L641: ( ( Comput (R13 , R8 , 6) ) . R4 ) = ( ( ( Comput (R13 , R8 , 5) ) . ( DataLoc (( ( Comput (R13 , R8 , 5) ) . ( GBP ) ) , 1) ) ) + 4 ) by L576 , L639 , SCMPDS_2:48
.= ( ( ( Comput (R14 , R9 , 5) ) . ( DataLoc (( ( Comput (R13 , R8 , 5) ) . ( GBP ) ) , 1) ) ) + 4 ) by L626 , L638
.= ( ( ( Comput (R14 , R9 , 5) ) . ( DataLoc (( ( Comput (R14 , R9 , 5) ) . ( GBP ) ) , 1) ) ) + 4 ) by L514 , L518 , L626
.= ( ( Comput (R14 , R9 , 6) ) . R4 ) by L582 , L640 , SCMPDS_2:48;
end;
suppose L642: R4 <> ( DataLoc (( ( Comput (R13 , R8 , 5) ) . ( GBP ) ) , 1) );

L643: R4 <> ( DataLoc (( ( Comput (R14 , R9 , 5) ) . ( GBP ) ) , 1) ) by L642 , L514 , L518 , L626;
thus L644: ( ( Comput (R13 , R8 , 6) ) . R4 ) = ( ( Comput (R13 , R8 , 5) ) . R4 ) by L576 , L642 , SCMPDS_2:48
.= ( ( Comput (R14 , R9 , 5) ) . R4 ) by L626 , L637
.= ( ( Comput (R14 , R9 , 6) ) . R4 ) by L582 , L643 , SCMPDS_2:48;
end;
end;
L646:
now
let R4 being Int_position;
assume L647: ( R8 . R4 ) = ( R9 . R4 );
per cases ;
suppose L648: R4 = ( DataLoc (( ( Comput (R13 , R8 , 6) ) . ( SBP ) ) , ( RetIC )) );

L649: R4 = ( DataLoc (( ( Comput (R14 , R9 , 6) ) . ( SBP ) ) , ( RetIC )) ) by L648 , L517 , L636;
thus L650: ( ( Comput (R13 , R8 , 7) ) . R4 ) = ( IC ( Comput (R13 , R8 , 6) ) ) by L586 , L648 , SCMPDS_2:59
.= ( ( Comput (R14 , R9 , 7) ) . R4 ) by L584 , L588 , L590 , L649 , SCMPDS_2:59;
end;
suppose L651: R4 <> ( DataLoc (( ( Comput (R13 , R8 , 6) ) . ( SBP ) ) , ( RetIC )) );

L652: R4 <> ( DataLoc (( ( Comput (R14 , R9 , 6) ) . ( SBP ) ) , ( RetIC )) ) by L651 , L517 , L636;
thus L653: ( ( Comput (R13 , R8 , 7) ) . R4 ) = ( ( Comput (R13 , R8 , 6) ) . R4 ) by L586 , L651 , SCMPDS_2:59
.= ( ( Comput (R14 , R9 , 6) ) . R4 ) by L636 , L647
.= ( ( Comput (R14 , R9 , 7) ) . R4 ) by L590 , L652 , SCMPDS_2:59;
end;
end;
thus L655:now
let C20 being (Element of ( NAT ));
let C21 being Int_position;
assume that
L656: C20 <= 7
and
L657: ( R8 . C21 ) = ( R9 . C21 );
per cases  by L656 , NAT_1:31;
suppose L658: C20 = ( 0 );

thus L659: ( IC ( Comput (R13 , R8 , C20) ) ) = ( IC R8 ) by L658 , EXTPRO_1:2
.= ( IC ( Comput (R14 , R9 , C20) ) ) by L516 , L658 , EXTPRO_1:2;
thus L660: ( ( Comput (R13 , R8 , C20) ) . C21 ) = ( R8 . C21 ) by L658 , EXTPRO_1:2
.= ( ( Comput (R14 , R9 , C20) ) . C21 ) by L657 , L658 , EXTPRO_1:2;
end;
suppose L661: C20 = 1;

thus L662: ( IC ( Comput (R13 , R8 , C20) ) ) = ( IC ( Comput (R14 , R9 , C20) ) ) by L661 , L526 , L532;
thus L663: ( ( Comput (R13 , R8 , C20) ) . C21 ) = ( ( Comput (R14 , R9 , C20) ) . C21 ) by L591 , L657 , L661;
end;
suppose L664: C20 = 2;

thus L665: ( IC ( Comput (R13 , R8 , C20) ) ) = ( IC ( Comput (R14 , R9 , C20) ) ) by L664 , L536 , L543;
thus L666: ( ( Comput (R13 , R8 , C20) ) . C21 ) = ( ( Comput (R14 , R9 , C20) ) . C21 ) by L594 , L657 , L664;
end;
suppose L667: C20 = 3;

thus L668: ( IC ( Comput (R13 , R8 , C20) ) ) = ( IC ( Comput (R14 , R9 , C20) ) ) by L667 , L547 , L559;
thus L669: ( ( Comput (R13 , R8 , C20) ) . C21 ) = ( ( Comput (R14 , R9 , C20) ) . C21 ) by L603 , L657 , L667;
end;
suppose L670: C20 = 4;

thus L671: ( IC ( Comput (R13 , R8 , C20) ) ) = ( IC ( Comput (R14 , R9 , C20) ) ) by L670 , L563 , L570;
thus L672: ( ( Comput (R13 , R8 , C20) ) . C21 ) = ( ( Comput (R14 , R9 , C20) ) . C21 ) by L617 , L657 , L670;
end;
suppose L673: C20 = 5;

thus L674: ( IC ( Comput (R13 , R8 , C20) ) ) = ( IC ( Comput (R14 , R9 , C20) ) ) by L673 , L574 , L580;
thus L675: ( ( Comput (R13 , R8 , C20) ) . C21 ) = ( ( Comput (R14 , R9 , C20) ) . C21 ) by L626 , L657 , L673;
end;
suppose L676: C20 = 6;

thus L677: ( IC ( Comput (R13 , R8 , C20) ) ) = ( IC ( Comput (R14 , R9 , C20) ) ) by L676 , L584 , L588;
thus L678: ( ( Comput (R13 , R8 , C20) ) . C21 ) = ( ( Comput (R14 , R9 , C20) ) . C21 ) by L636 , L657 , L676;
end;
suppose L679: C20 = 7;

thus L680: ( IC ( Comput (R13 , R8 , C20) ) ) = ( succ ( IC ( Comput (R14 , R9 , 6) ) ) ) by L679 , L584 , L586 , L588 , SCMPDS_2:59
.= ( IC ( Comput (R14 , R9 , C20) ) ) by L590 , L679 , SCMPDS_2:59;
thus L681: ( ( Comput (R13 , R8 , C20) ) . C21 ) = ( ( Comput (R14 , R9 , C20) ) . C21 ) by L646 , L657 , L679;
end;
end;
end;
L656: (for R13 being (Instruction-Sequence of ( SCMPDS )) holds (for R14 being (Instruction-Sequence of ( SCMPDS )) holds (for B25 , B26 being (State of ( SCMPDS )) holds ((( GCD-Algorithm ) c= R13 & ( GCD-Algorithm ) c= R14 & ( IC B25 ) = 5 & ( B25 . ( SBP ) ) > ( 0 ) & ( B25 . ( GBP ) ) = ( 0 ) & ( B25 . ( DataLoc (( B25 . ( SBP ) ) , 3) ) ) >= ( 0 ) & ( B25 . ( DataLoc (( B25 . ( SBP ) ) , 2) ) ) >= ( B25 . ( DataLoc (( B25 . ( SBP ) ) , 3) ) ) & ( IC B26 ) = ( IC B25 ) & ( B26 . ( SBP ) ) = ( B25 . ( SBP ) ) & ( B26 . ( GBP ) ) = ( 0 ) & ( B26 . ( DataLoc (( B25 . ( SBP ) ) , 2) ) ) = ( B25 . ( DataLoc (( B25 . ( SBP ) ) , 2) ) ) & ( B26 . ( DataLoc (( B25 . ( SBP ) ) , 3) ) ) = ( B25 . ( DataLoc (( B25 . ( SBP ) ) , 3) ) )) implies (ex R2 being (Element of ( NAT )) st (( CurInstr (R13 , ( Comput (R13 , B25 , R2) )) ) = ( return ( SBP ) ) & ( B25 . ( SBP ) ) = ( ( Comput (R13 , B25 , R2) ) . ( SBP ) ) & ( CurInstr (R14 , ( Comput (R14 , B26 , R2) )) ) = ( return ( SBP ) ) & ( B26 . ( SBP ) ) = ( ( Comput (R14 , B26 , R2) ) . ( SBP ) ) & (for B27 being (Element of ( NAT )) holds ((1 < B27 & B27 <= ( ( B25 . ( SBP ) ) + 1 )) implies (( B25 . ( intpos B27 ) ) = ( ( Comput (R13 , B25 , R2) ) . ( intpos B27 ) ) & ( B26 . ( intpos B27 ) ) = ( ( Comput (R14 , B26 , R2) ) . ( intpos B27 ) )))) & (for B28 being (Element of ( NAT )) holds (for B29 being Int_position holds ((B28 <= R2 & ( B25 . B29 ) = ( B26 . B29 )) implies (( IC ( Comput (R13 , B25 , B28) ) ) = ( IC ( Comput (R14 , B26 , B28) ) ) & ( ( Comput (R13 , B25 , B28) ) . B29 ) = ( ( Comput (R14 , B26 , B28) ) . B29 )))))))))))
proof
let R13 being (Instruction-Sequence of ( SCMPDS ));
let R14 being (Instruction-Sequence of ( SCMPDS ));
set D83 = ( GCD-Algorithm );
defpred S2[ (Element of ( NAT )) ] means (for B30 , B31 being (State of ( SCMPDS )) holds ((D83 c= R13 & D83 c= R14 & ( IC B30 ) = 5 & ( B30 . ( SBP ) ) > ( 0 ) & ( B30 . ( GBP ) ) = ( 0 ) & ( B30 . ( DataLoc (( B30 . ( SBP ) ) , 3) ) ) <= $1 & ( B30 . ( DataLoc (( B30 . ( SBP ) ) , 3) ) ) >= ( 0 ) & ( B30 . ( DataLoc (( B30 . ( SBP ) ) , 2) ) ) >= ( B30 . ( DataLoc (( B30 . ( SBP ) ) , 3) ) ) & ( IC B31 ) = ( IC B30 ) & ( B31 . ( SBP ) ) = ( B30 . ( SBP ) ) & ( B31 . ( GBP ) ) = ( 0 ) & ( B31 . ( DataLoc (( B30 . ( SBP ) ) , 2) ) ) = ( B30 . ( DataLoc (( B30 . ( SBP ) ) , 2) ) ) & ( B31 . ( DataLoc (( B30 . ( SBP ) ) , 3) ) ) = ( B30 . ( DataLoc (( B30 . ( SBP ) ) , 3) ) )) implies (ex R2 being (Element of ( NAT )) st (( CurInstr (R13 , ( Comput (R13 , B30 , R2) )) ) = ( return ( SBP ) ) & ( B30 . ( SBP ) ) = ( ( Comput (R13 , B30 , R2) ) . ( SBP ) ) & ( CurInstr (R14 , ( Comput (R14 , B31 , R2) )) ) = ( return ( SBP ) ) & ( B31 . ( SBP ) ) = ( ( Comput (R14 , B31 , R2) ) . ( SBP ) ) & (for B32 being (Element of ( NAT )) holds ((1 < B32 & B32 <= ( ( B30 . ( SBP ) ) + 1 )) implies (( B30 . ( intpos B32 ) ) = ( ( Comput (R13 , B30 , R2) ) . ( intpos B32 ) ) & ( B31 . ( intpos B32 ) ) = ( ( Comput (R14 , B31 , R2) ) . ( intpos B32 ) )))) & (for B33 being (Element of ( NAT )) holds (for B34 being Int_position holds ((B33 <= R2 & ( B30 . B34 ) = ( B31 . B34 )) implies (( IC ( Comput (R13 , B30 , B33) ) ) = ( IC ( Comput (R14 , B31 , B33) ) ) & ( ( Comput (R13 , B30 , B33) ) . B34 ) = ( ( Comput (R14 , B31 , B33) ) . B34 )))))))));
L657: S2[ ( 0 ) ]
proof
let C22 , C23 being (State of ( SCMPDS ));
set D84 = ( C22 . ( DataLoc (( C22 . ( SBP ) ) , 2) ) );
set D85 = ( C22 . ( DataLoc (( C22 . ( SBP ) ) , 3) ) );
set D86 = ( C23 . ( DataLoc (( C22 . ( SBP ) ) , 3) ) );
assume that
L658: D83 c= R13
and
L659: D83 c= R14;
assume L660: ( IC C22 ) = 5;
assume that
L661: ( C22 . ( SBP ) ) > ( 0 )
and
L662: ( C22 . ( GBP ) ) = ( 0 );
assume L663: D85 <= ( 0 );
assume L664: D85 >= ( 0 );
assume L665: D84 >= D85;
assume that
L666: ( IC C23 ) = ( IC C22 )
and
L667: ( C23 . ( SBP ) ) = ( C22 . ( SBP ) )
and
L668: ( C23 . ( GBP ) ) = ( 0 );
assume that
L669: ( C23 . ( DataLoc (( C22 . ( SBP ) ) , 2) ) ) = D84
and
L670: D86 = D85;
L671: ( R13 /. ( IC C22 ) ) = ( R13 . ( IC C22 ) ) by PBOOLE:143;
L672: ( Comput (R13 , C22 , ( 1 + ( 0 ) )) ) = ( Following (R13 , ( Comput (R13 , C22 , ( 0 )) )) ) by EXTPRO_1:3
.= ( Following (R13 , C22) ) by EXTPRO_1:2
.= ( Exec (D6 , C22) ) by L660 , L671 , L78 , L658;
L673: ( R14 /. ( IC C23 ) ) = ( R14 . ( IC C23 ) ) by PBOOLE:143;
L674: ( Comput (R14 , C23 , ( 1 + ( 0 ) )) ) = ( Following (R14 , ( Comput (R14 , C23 , ( 0 )) )) ) by EXTPRO_1:3
.= ( Following (R14 , C23) ) by EXTPRO_1:2
.= ( Exec (D6 , C23) ) by L660 , L666 , L673 , L78 , L659;
L675: ( IC ( Comput (R13 , C22 , 1) ) ) = ( ICplusConst (C22 , 9) ) by L663 , L672 , SCMPDS_2:56
.= ( 5 + 9 ) by L660 , SCMPDS_6:12;
L676: ( IC ( Comput (R14 , C23 , 1) ) ) = ( ICplusConst (C23 , 9) ) by L663 , L667 , L670 , L674 , SCMPDS_2:56
.= ( 5 + 9 ) by L660 , L666 , SCMPDS_6:12;
take D87 = 1;
L677: ( R13 /. ( IC ( Comput (R13 , C22 , D87) ) ) ) = ( R13 . ( IC ( Comput (R13 , C22 , D87) ) ) ) by PBOOLE:143;
thus L678: ( CurInstr (R13 , ( Comput (R13 , C22 , D87) )) ) = ( R13 . 14 ) by L675 , L677
.= D15 by L78 , L658;
thus L679: ( ( Comput (R13 , C22 , D87) ) . ( SBP ) ) = ( C22 . ( SBP ) ) by L672 , SCMPDS_2:56;
L680: ( R14 /. ( IC ( Comput (R14 , C23 , D87) ) ) ) = ( R14 . ( IC ( Comput (R14 , C23 , D87) ) ) ) by PBOOLE:143;
thus L681: ( CurInstr (R14 , ( Comput (R14 , C23 , D87) )) ) = ( R14 . 14 ) by L676 , L680
.= D15 by L78 , L659;
thus L682: ( ( Comput (R14 , C23 , D87) ) . ( SBP ) ) = ( C23 . ( SBP ) ) by L674 , SCMPDS_2:56;
thus L683: (for B35 being (Element of ( NAT )) holds ((1 < B35 & B35 <= ( ( C22 . ( SBP ) ) + 1 )) implies (( C22 . ( intpos B35 ) ) = ( ( Comput (R13 , C22 , D87) ) . ( intpos B35 ) ) & ( C23 . ( intpos B35 ) ) = ( ( Comput (R14 , C23 , D87) ) . ( intpos B35 ) )))) by L672 , L674 , SCMPDS_2:56;
thus L684:now
let C24 being (Element of ( NAT ));
let R3 being Int_position;
assume that
L685: C24 <= D87
and
L686: ( C22 . R3 ) = ( C23 . R3 );
per cases  by L685 , NAT_1:25;
suppose L687: C24 = ( 0 );

thus L688: ( IC ( Comput (R13 , C22 , C24) ) ) = ( IC C23 ) by L687 , L666 , EXTPRO_1:2
.= ( IC ( Comput (R14 , C23 , C24) ) ) by L687 , EXTPRO_1:2;
thus L689: ( ( Comput (R13 , C22 , C24) ) . R3 ) = ( C22 . R3 ) by L687 , EXTPRO_1:2
.= ( ( Comput (R14 , C23 , C24) ) . R3 ) by L686 , L687 , EXTPRO_1:2;
end;
suppose L690: C24 = 1;

thus L691: ( IC ( Comput (R13 , C22 , C24) ) ) = ( IC ( Comput (R14 , C23 , C24) ) ) by L690 , L675 , L676;
thus L692: ( ( Comput (R13 , C22 , C24) ) . R3 ) = ( C22 . R3 ) by L672 , L690 , SCMPDS_2:56
.= ( ( Comput (R14 , C23 , C24) ) . R3 ) by L674 , L686 , L690 , SCMPDS_2:56;
end;
end;
end;
L685:
now
let C25 being (Element of ( NAT ));
assume L686: S2[ C25 ];
thus L687: S2[ ( C25 + 1 ) ]
proof
let C26 , C27 being (State of ( SCMPDS ));
set D88 = ( C26 . ( DataLoc (( C26 . ( SBP ) ) , 2) ) );
set D89 = ( C26 . ( DataLoc (( C26 . ( SBP ) ) , 3) ) );
assume that
L688: D83 c= R13
and
L689: D83 c= R14;
assume L690: ( IC C26 ) = 5;
assume that
L691: ( C26 . ( SBP ) ) > ( 0 )
and
L692: ( C26 . ( GBP ) ) = ( 0 );
assume L693: D89 <= ( C25 + 1 );
assume L694: D89 >= ( 0 );
assume L695: D88 >= D89;
assume that
L696: ( IC C27 ) = ( IC C26 )
and
L697: ( C27 . ( SBP ) ) = ( C26 . ( SBP ) )
and
L698: ( C27 . ( GBP ) ) = ( 0 );
assume that
L699: ( C27 . ( DataLoc (( C26 . ( SBP ) ) , 2) ) ) = D88
and
L700: ( C27 . ( DataLoc (( C26 . ( SBP ) ) , 3) ) ) = D89;
reconsider D90 = D89 as (Element of ( NAT )) by L694 , INT_1:3;
per cases  by L693 , NAT_1:8;
suppose L701: D90 <= C25;

thus L702: (ex R2 being (Element of ( NAT )) st (( CurInstr (R13 , ( Comput (R13 , C26 , R2) )) ) = ( return ( SBP ) ) & ( C26 . ( SBP ) ) = ( ( Comput (R13 , C26 , R2) ) . ( SBP ) ) & ( CurInstr (R14 , ( Comput (R14 , C27 , R2) )) ) = ( return ( SBP ) ) & ( C27 . ( SBP ) ) = ( ( Comput (R14 , C27 , R2) ) . ( SBP ) ) & (for B36 being (Element of ( NAT )) holds ((1 < B36 & B36 <= ( ( C26 . ( SBP ) ) + 1 )) implies (( C26 . ( intpos B36 ) ) = ( ( Comput (R13 , C26 , R2) ) . ( intpos B36 ) ) & ( C27 . ( intpos B36 ) ) = ( ( Comput (R14 , C27 , R2) ) . ( intpos B36 ) )))) & (for B37 being (Element of ( NAT )) holds (for R3 being Int_position holds ((B37 <= R2 & ( C26 . R3 ) = ( C27 . R3 )) implies (( IC ( Comput (R13 , C26 , B37) ) ) = ( IC ( Comput (R14 , C27 , B37) ) ) & ( ( Comput (R13 , C26 , B37) ) . R3 ) = ( ( Comput (R14 , C27 , B37) ) . R3 ))))))) by L701 , L686 , L690 , L691 , L692 , L694 , L695 , L696 , L697 , L698 , L699 , L700 , L688 , L689;
end;
suppose L703: D90 = ( C25 + 1 );

L704: D90 > ( 0 ) by L703 , NAT_1:5;
reconsider D91 = ( C26 . ( SBP ) ) as (Element of ( NAT )) by L691 , INT_1:3;
L705: D91 = ( C26 . ( SBP ) );
set D92 = ( Comput (R13 , C26 , 8) );
set D93 = ( Comput (R14 , C27 , 8) );
L706: ( IC ( Comput (R13 , C26 , 7) ) ) = ( 5 + 7 ) by L690 , L692 , L699 , L704 , L705 , L487 , L688;
L707: D92 = ( Exec (D13 , ( Comput (R13 , C26 , 7) )) ) by L690 , L692 , L699 , L704 , L705 , L487 , L688;
L708: ( ( Comput (R13 , C26 , 7) ) . ( SBP ) ) = ( D91 + 4 ) by L690 , L692 , L699 , L704 , L487 , L688;
L709: ( ( Comput (R13 , C26 , 7) ) . ( GBP ) ) = ( 0 ) by L690 , L692 , L699 , L704 , L705 , L487 , L688;
L710: ( ( Comput (R13 , C26 , 7) ) . ( intpos ( D91 + 7 ) ) ) = ( ( C26 . ( intpos ( D91 + 2 ) ) ) mod ( C26 . ( intpos ( D91 + 3 ) ) ) ) by L690 , L692 , L699 , L704 , L487 , L688;
L711: ( ( Comput (R13 , C26 , 7) ) . ( intpos ( D91 + 6 ) ) ) = ( C26 . ( intpos ( D91 + 3 ) ) ) by L690 , L692 , L699 , L704 , L487 , L688;
L712: ( IC ( Comput (R14 , C27 , 7) ) ) = ( 5 + 7 ) by L690 , L696 , L697 , L698 , L699 , L700 , L704 , L705 , L487 , L689;
L713: D93 = ( Exec (D13 , ( Comput (R14 , C27 , 7) )) ) by L690 , L696 , L697 , L698 , L699 , L700 , L704 , L705 , L487 , L689;
L714: ( ( Comput (R14 , C27 , 7) ) . ( SBP ) ) = ( D91 + 4 ) by L690 , L696 , L697 , L698 , L699 , L700 , L704 , L487 , L689;
L715: ( ( Comput (R14 , C27 , 7) ) . ( GBP ) ) = ( 0 ) by L690 , L696 , L697 , L698 , L699 , L700 , L704 , L705 , L487 , L689;
L716: ( ( Comput (R14 , C27 , 7) ) . ( intpos ( D91 + 7 ) ) ) = ( ( C26 . ( intpos ( D91 + 2 ) ) ) mod ( C26 . ( intpos ( D91 + 3 ) ) ) ) by L690 , L692 , L696 , L697 , L698 , L699 , L700 , L704 , L487 , L689;
L717: ( ( Comput (R14 , C27 , 7) ) . ( intpos ( D91 + 6 ) ) ) = ( C26 . ( intpos ( D91 + 3 ) ) ) by L690 , L692 , L696 , L697 , L698 , L699 , L700 , L704 , L487 , L689;
L718: ( ( Comput (R13 , C26 , 7) ) . ( intpos ( D91 + 4 ) ) ) = D91 by L690 , L692 , L699 , L704 , L487 , L688;
L719: ( ( Comput (R13 , C26 , 7) ) . ( intpos ( D91 + 5 ) ) ) = 11 by L690 , L692 , L699 , L704 , L487 , L688;
L720: ( ( Comput (R14 , C27 , 7) ) . ( intpos ( D91 + 4 ) ) ) = D91 by L690 , L696 , L697 , L698 , L699 , L700 , L704 , L487 , L689;
L721: ( ( Comput (R14 , C27 , 7) ) . ( intpos ( D91 + 5 ) ) ) = 11 by L690 , L696 , L697 , L698 , L699 , L700 , L704 , L487 , L689;
L722: ( DataLoc (( D91 + 4 ) , 2) ) = ( intpos ( ( D91 + 4 ) + 2 ) ) by L2
.= ( intpos ( D91 + ( 4 + 2 ) ) );
L723: ( DataLoc (( D91 + 4 ) , 3) ) = ( intpos ( ( D91 + 4 ) + 3 ) ) by L2
.= ( intpos ( D91 + ( 4 + 3 ) ) );
L724: ( IC D92 ) = ( ICplusConst (( Comput (R13 , C26 , 7) ) , ( - 7 )) ) by L707 , SCMPDS_2:54
.= 5 by L706 , L5;
L725: ( D92 . ( SBP ) ) = ( D91 + 4 ) by L707 , L708 , SCMPDS_2:54;
L726: 4 <= ( D91 + 4 ) by NAT_1:11;
L727: ( D92 . ( SBP ) ) > ( 0 ) by L726 , L725 , XXREAL_0:2;
L728: ( D92 . ( GBP ) ) = ( 0 ) by L707 , L709 , SCMPDS_2:54;
set D94 = ( D92 . ( DataLoc (( D92 . ( SBP ) ) , 2) ) );
set D95 = ( D92 . ( DataLoc (( D92 . ( SBP ) ) , 3) ) );
L729: D94 = ( C26 . ( intpos ( D91 + 3 ) ) ) by L707 , L711 , L722 , L725 , SCMPDS_2:54
.= D90 by L2;
L730: D95 = ( ( C26 . ( intpos ( D91 + 2 ) ) ) mod ( C26 . ( intpos ( D91 + 3 ) ) ) ) by L707 , L710 , L723 , L725 , SCMPDS_2:54
.= ( ( C26 . ( intpos ( D91 + 2 ) ) ) mod D90 ) by L2;
L731: D95 < D90 by L730 , L703 , NAT_1:5 , NEWTON:65;
L732: D95 <= C25 by L731 , L703 , INT_1:7;
L733: ( IC D93 ) = ( ICplusConst (( Comput (R14 , C27 , 7) ) , ( - 7 )) ) by L713 , SCMPDS_2:54
.= ( IC D92 ) by L712 , L724 , L5;
L734: ( D93 . ( SBP ) ) = ( D92 . ( SBP ) ) by L713 , L714 , L725 , SCMPDS_2:54;
L735: ( D93 . ( GBP ) ) = ( 0 ) by L713 , L715 , SCMPDS_2:54;
set D96 = ( D93 . ( DataLoc (( D92 . ( SBP ) ) , 2) ) );
L736: D96 = ( C26 . ( intpos ( D91 + 3 ) ) ) by L713 , L717 , L722 , L725 , SCMPDS_2:54
.= D94 by L729 , L2;
L737: ( D93 . ( DataLoc (( D92 . ( SBP ) ) , 3) ) ) = ( ( C26 . ( intpos ( D91 + 2 ) ) ) mod ( C26 . ( intpos ( D91 + 3 ) ) ) ) by L713 , L716 , L723 , L725 , SCMPDS_2:54
.= D95 by L730 , L2;
consider R1 being (Element of ( NAT )) such that L738: ( CurInstr (R13 , ( Comput (R13 , D92 , R1) )) ) = ( return ( SBP ) ) and L739: ( D92 . ( SBP ) ) = ( ( Comput (R13 , D92 , R1) ) . ( SBP ) ) and L740: ( CurInstr (R14 , ( Comput (R14 , D93 , R1) )) ) = ( return ( SBP ) ) and L741: ( D93 . ( SBP ) ) = ( ( Comput (R14 , D93 , R1) ) . ( SBP ) ) and L742: (for B38 being (Element of ( NAT )) holds ((1 < B38 & B38 <= ( ( D92 . ( SBP ) ) + 1 )) implies (( D92 . ( intpos B38 ) ) = ( ( Comput (R13 , D92 , R1) ) . ( intpos B38 ) ) & ( D93 . ( intpos B38 ) ) = ( ( Comput (R14 , D93 , R1) ) . ( intpos B38 ) )))) and L743: (for B39 being (Element of ( NAT )) holds (for B40 being Int_position holds ((B39 <= R1 & ( D92 . B40 ) = ( D93 . B40 )) implies (( IC ( Comput (R13 , D92 , B39) ) ) = ( IC ( Comput (R14 , D93 , B39) ) ) & ( ( Comput (R13 , D92 , B39) ) . B40 ) = ( ( Comput (R14 , D93 , B39) ) . B40 ))))) by L737 , L686 , L704 , L724 , L727 , L728 , L729 , L730 , L731 , L732 , L733 , L734 , L735 , L736 , L688 , L689 , NEWTON:64;
set D97 = ( Comput (R13 , C26 , ( R1 + 8 )) );
set D98 = ( Comput (R14 , C27 , ( R1 + 8 )) );
L744: ( D92 . ( SBP ) ) = ( D97 . ( SBP ) ) by L739 , EXTPRO_1:4;
L745: ( Comput (R13 , C26 , ( R1 + 8 )) ) = ( Comput (R13 , ( Comput (R13 , C26 , 8) ) , R1) ) by EXTPRO_1:4;
L746: ( Comput (R13 , C26 , ( R1 + ( 8 + 1 ) )) ) = ( Comput (R13 , C26 , ( ( R1 + 8 ) + 1 )) )
.= ( Following (R13 , D97) ) by EXTPRO_1:3
.= ( Exec (( return ( SBP ) ) , D97) ) by L738 , L745;
L747: 1 < ( D91 + 4 ) by L726 , XXREAL_0:2;
L748: ( D91 + 4 ) < ( ( D92 . ( SBP ) ) + 1 ) by L725 , XREAL_1:29;
L749: ( D92 . ( intpos ( D91 + 4 ) ) ) = ( ( Comput (R13 , D92 , R1) ) . ( intpos ( D91 + 4 ) ) ) by L748 , L742 , L747
.= ( D97 . ( intpos ( D91 + 4 ) ) ) by EXTPRO_1:4;
L750: 5 <= ( D91 + 5 ) by NAT_1:11;
L751: 1 < ( D91 + 5 ) by L750 , XXREAL_0:2;
L752: ( intpos ( D91 + ( 4 + 1 ) ) ) = ( intpos ( ( D91 + 4 ) + 1 ) )
.= ( DataLoc (( D91 + 4 ) , 1) ) by L2;
L753: 11 = ( D92 . ( intpos ( D91 + 5 ) ) ) by L707 , L719 , SCMPDS_2:54
.= ( ( Comput (R13 , D92 , R1) ) . ( intpos ( D91 + 5 ) ) ) by L725 , L742 , L751
.= ( D97 . ( DataLoc (( D97 . ( SBP ) ) , ( RetIC )) ) ) by L725 , L744 , L752 , EXTPRO_1:4 , SCMPDS_I:def 14;
L754: ( D98 . ( SBP ) ) = ( D91 + 4 ) by L725 , L734 , L741 , EXTPRO_1:4;
L755: ( Comput (R14 , C27 , ( R1 + 8 )) ) = ( Comput (R14 , ( Comput (R14 , C27 , 8) ) , R1) ) by EXTPRO_1:4;
L756: ( Comput (R14 , C27 , ( R1 + ( 8 + 1 ) )) ) = ( Comput (R14 , C27 , ( ( R1 + 8 ) + 1 )) )
.= ( Following (R14 , D98) ) by EXTPRO_1:3
.= ( Exec (( return ( SBP ) ) , D98) ) by L740 , L755;
L757: ( D93 . ( intpos ( D91 + 4 ) ) ) = ( ( Comput (R14 , D93 , R1) ) . ( intpos ( D91 + 4 ) ) ) by L742 , L747 , L748
.= ( D98 . ( intpos ( D91 + 4 ) ) ) by EXTPRO_1:4;
L758: 11 = ( D93 . ( intpos ( D91 + 5 ) ) ) by L713 , L721 , SCMPDS_2:54
.= ( ( Comput (R14 , D93 , R1) ) . ( intpos ( D91 + 5 ) ) ) by L725 , L742 , L751
.= ( D98 . ( DataLoc (( D98 . ( SBP ) ) , ( RetIC )) ) ) by L752 , L754 , EXTPRO_1:4 , SCMPDS_I:def 14;
L759: ( R13 /. ( IC ( Comput (R13 , C26 , ( R1 + 9 )) ) ) ) = ( R13 . ( IC ( Comput (R13 , C26 , ( R1 + 9 )) ) ) ) by PBOOLE:143;
L760: ( IC ( Comput (R13 , C26 , ( R1 + 9 )) ) ) = ( ( abs ( D97 . ( DataLoc (( D97 . ( SBP ) ) , ( RetIC )) ) ) ) + 2 ) by L746 , SCMPDS_2:58
.= ( 11 + 2 ) by L753 , ABSVALUE:29;
L761: ( CurInstr (R13 , ( Comput (R13 , C26 , ( R1 + 9 )) )) ) = ( R13 . 13 ) by L760 , L759
.= D14 by L78 , L688;
L762: ( Comput (R13 , C26 , ( R1 + ( 9 + 1 ) )) ) = ( Comput (R13 , C26 , ( ( R1 + 9 ) + 1 )) )
.= ( Following (R13 , ( Comput (R13 , C26 , ( R1 + 9 )) )) ) by EXTPRO_1:3
.= ( Exec (D14 , ( Comput (R13 , C26 , ( R1 + 9 )) )) ) by L761;
L763: ( ( Comput (R13 , C26 , ( R1 + 9 )) ) . ( SBP ) ) = ( D97 . ( DataLoc (( D91 + 4 ) , ( RetSP )) ) ) by L725 , L744 , L746 , SCMPDS_2:58
.= ( D97 . ( intpos ( ( D91 + 4 ) + ( 0 ) ) ) ) by L2 , SCMPDS_I:def 13
.= D91 by L707 , L718 , L749 , SCMPDS_2:54;
L764: ( R14 /. ( IC ( Comput (R14 , C27 , ( R1 + 9 )) ) ) ) = ( R14 . ( IC ( Comput (R14 , C27 , ( R1 + 9 )) ) ) ) by PBOOLE:143;
L765: ( IC ( Comput (R14 , C27 , ( R1 + 9 )) ) ) = ( ( abs ( D98 . ( DataLoc (( D98 . ( SBP ) ) , ( RetIC )) ) ) ) + 2 ) by L756 , SCMPDS_2:58
.= ( 11 + 2 ) by L758 , ABSVALUE:29;
L766: ( CurInstr (R14 , ( Comput (R14 , C27 , ( R1 + 9 )) )) ) = ( R14 . 13 ) by L765 , L764
.= D14 by L78 , L689;
L767: ( Comput (R14 , C27 , ( R1 + ( 9 + 1 ) )) ) = ( Comput (R14 , C27 , ( ( R1 + 9 ) + 1 )) )
.= ( Following (R14 , ( Comput (R14 , C27 , ( R1 + 9 )) )) ) by EXTPRO_1:3
.= ( Exec (D14 , ( Comput (R14 , C27 , ( R1 + 9 )) )) ) by L766;
L768: ( ( Comput (R14 , C27 , ( R1 + 9 )) ) . ( SBP ) ) = ( D98 . ( DataLoc (( D91 + 4 ) , ( RetSP )) ) ) by L754 , L756 , SCMPDS_2:58
.= ( D98 . ( intpos ( ( D91 + 4 ) + ( 0 ) ) ) ) by L2 , SCMPDS_I:def 13
.= D91 by L713 , L720 , L757 , SCMPDS_2:54;
L769: ( IC ( Comput (R13 , C26 , ( R1 + 10 )) ) ) = ( succ ( IC ( Comput (R13 , C26 , ( R1 + 9 )) ) ) ) by L762 , SCMPDS_2:47
.= ( 13 + 1 ) by L760;
L770: ( IC ( Comput (R14 , C27 , ( R1 + 10 )) ) ) = ( succ ( IC ( Comput (R14 , C27 , ( R1 + 9 )) ) ) ) by L767 , SCMPDS_2:47
.= ( 13 + 1 ) by L765;
thus L771:now
take D99 = ( R1 + 10 );
L772: ( R13 /. ( IC ( Comput (R13 , C26 , D99) ) ) ) = ( R13 . ( IC ( Comput (R13 , C26 , D99) ) ) ) by PBOOLE:143;
thus L773: ( CurInstr (R13 , ( Comput (R13 , C26 , D99) )) ) = ( R13 . 14 ) by L769 , L772
.= ( return ( SBP ) ) by L78 , L688;
L774: ( R14 /. ( IC ( Comput (R14 , C27 , D99) ) ) ) = ( R14 . ( IC ( Comput (R14 , C27 , D99) ) ) ) by PBOOLE:143;
L775: ( DataLoc (( ( Comput (R13 , C26 , ( R1 + 9 )) ) . ( SBP ) ) , 2) ) = ( intpos ( D91 + 2 ) ) by L763 , L2;
thus L776: ( ( Comput (R13 , C26 , D99) ) . ( SBP ) ) = ( C26 . ( SBP ) ) by L775 , L762 , L763 , L150 , SCMPDS_2:47;
thus L777: ( CurInstr (R14 , ( Comput (R14 , C27 , D99) )) ) = ( R14 . 14 ) by L770 , L774
.= ( return ( SBP ) ) by L78 , L689;
L778: ( DataLoc (( ( Comput (R14 , C27 , ( R1 + 9 )) ) . ( SBP ) ) , 2) ) = ( intpos ( D91 + 2 ) ) by L768 , L2;
thus L779: ( ( Comput (R14 , C27 , D99) ) . ( SBP ) ) = ( C27 . ( SBP ) ) by L778 , L697 , L767 , L768 , L150 , SCMPDS_2:47;
thus L780:now
let C28 being (Element of ( NAT ));
assume that
L781: 1 < C28
and
L782: C28 <= ( ( C26 . ( SBP ) ) + 1 );
L783: ( C26 . ( SBP ) ) <= ( D92 . ( SBP ) ) by L725 , NAT_1:11;
L784: ( ( C26 . ( SBP ) ) + 1 ) <= ( ( D92 . ( SBP ) ) + 1 ) by L783 , XREAL_1:6;
L785: C28 <= ( ( D92 . ( SBP ) ) + 1 ) by L784 , L782 , XXREAL_0:2;
L786: ( ( Comput (R13 , C26 , ( R1 + 9 )) ) . ( intpos C28 ) ) = ( D97 . ( intpos C28 ) ) by L746 , L781 , AMI_3:10 , SCMPDS_2:58
.= ( ( Comput (R13 , D92 , R1) ) . ( intpos C28 ) ) by EXTPRO_1:4
.= ( D92 . ( intpos C28 ) ) by L742 , L781 , L785;
L787: ( D91 + 1 ) < ( D91 + 2 ) by XREAL_1:6;
L788: ( ( Comput (R13 , C26 , 7) ) . ( intpos C28 ) ) = ( C26 . ( intpos C28 ) ) by L690 , L692 , L703 , L705 , L781 , L782 , L251 , L688 , NAT_1:5;
thus L789: ( C26 . ( intpos C28 ) ) = ( D92 . ( intpos C28 ) ) by L788 , L707 , SCMPDS_2:54
.= ( ( Comput (R13 , C26 , D99) ) . ( intpos C28 ) ) by L762 , L775 , L782 , L786 , L787 , AMI_3:10 , SCMPDS_2:47;
L790: ( ( Comput (R14 , C27 , ( R1 + 9 )) ) . ( intpos C28 ) ) = ( D98 . ( intpos C28 ) ) by L756 , L781 , AMI_3:10 , SCMPDS_2:58
.= ( ( Comput (R14 , D93 , R1) ) . ( intpos C28 ) ) by EXTPRO_1:4
.= ( D93 . ( intpos C28 ) ) by L742 , L781 , L785;
L791: C28 <= ( D91 + 1 ) by L782;
L792: ( ( Comput (R14 , C27 , 7) ) . ( intpos C28 ) ) = ( C27 . ( intpos C28 ) ) by L791 , L690 , L696 , L697 , L698 , L700 , L703 , L781 , L251 , L689 , NAT_1:5;
thus L793: ( C27 . ( intpos C28 ) ) = ( D93 . ( intpos C28 ) ) by L792 , L713 , SCMPDS_2:54
.= ( ( Comput (R14 , C27 , D99) ) . ( intpos C28 ) ) by L767 , L778 , L782 , L787 , L790 , AMI_3:10 , SCMPDS_2:47;
end;
thus L794:now
let C29 being (Element of ( NAT ));
let R3 being Int_position;
assume that
L795: C29 <= D99
and
L796: ( C26 . R3 ) = ( C27 . R3 );
L797: D99 = ( ( R1 + 9 ) + 1 );
L798: (C29 <= ( R1 + 9 ) or C29 = D99) by L797 , L795 , NAT_1:8;
L799: ( R1 + ( 8 + 1 ) ) = ( ( R1 + 8 ) + 1 );
L800:
now
assume L801: C29 <= ( R1 + 8 );
per cases ;
suppose L802: C29 < ( 7 + 1 );

thus L803: (C29 <= 7 or (C29 >= 8 & C29 <= ( R1 + 8 ))) by L802 , NAT_1:13;
end;
suppose L804: C29 >= 8;

thus L805: (C29 <= 7 or (C29 >= 8 & C29 <= ( R1 + 8 ))) by L804 , L801;
end;
end;
L807: ( D92 . R3 ) = ( ( Comput (R13 , C26 , 7) ) . R3 ) by L707 , SCMPDS_2:54
.= ( ( Comput (R14 , C27 , 7) ) . R3 ) by L690 , L692 , L696 , L697 , L698 , L688 , L689 , L699 , L700 , L704 , L705 , L796 , L509
.= ( D93 . R3 ) by L713 , SCMPDS_2:54;
L808:
now
let R4 being Int_position;
assume L809: ( D92 . R4 ) = ( D93 . R4 );
per cases ;
suppose L810: R4 = ( SBP );

thus L811: ( ( Comput (R13 , C26 , ( R1 + 9 )) ) . R4 ) = ( ( Comput (R14 , C27 , ( R1 + 9 )) ) . R4 ) by L810 , L763 , L768;
end;
suppose L812: R4 <> ( SBP );

thus L813: ( ( Comput (R13 , C26 , ( R1 + 9 )) ) . R4 ) = ( D97 . R4 ) by L812 , L746 , SCMPDS_2:58
.= ( ( Comput (R13 , D92 , R1) ) . R4 ) by EXTPRO_1:4
.= ( ( Comput (R14 , D93 , R1) ) . R4 ) by L743 , L809
.= ( D98 . R4 ) by EXTPRO_1:4
.= ( ( Comput (R14 , C27 , ( R1 + 9 )) ) . R4 ) by L756 , L812 , SCMPDS_2:58;
end;
end;
L815: ( D92 . ( DataLoc (( ( Comput (R13 , C26 , ( R1 + 9 )) ) . ( SBP ) ) , 6) ) ) = D94 by L722 , L725 , L763 , L2
.= ( D93 . ( DataLoc (( ( Comput (R13 , C26 , ( R1 + 9 )) ) . ( SBP ) ) , 6) ) ) by L722 , L725 , L736 , L763 , L2;
L816:
now
per cases ;
suppose L817: R3 <> ( DataLoc (( ( Comput (R14 , C27 , ( R1 + 9 )) ) . ( SBP ) ) , 2) );

thus L818: ( ( Comput (R13 , C26 , D99) ) . R3 ) = ( ( Comput (R13 , C26 , ( R1 + 9 )) ) . R3 ) by L817 , L762 , L763 , L768 , SCMPDS_2:47
.= ( ( Comput (R14 , C27 , ( R1 + 9 )) ) . R3 ) by L807 , L808
.= ( ( Comput (R14 , C27 , D99) ) . R3 ) by L767 , L817 , SCMPDS_2:47;
end;
suppose L819: R3 = ( DataLoc (( ( Comput (R14 , C27 , ( R1 + 9 )) ) . ( SBP ) ) , 2) );

thus L820: ( ( Comput (R13 , C26 , D99) ) . R3 ) = ( ( Comput (R13 , C26 , ( R1 + 9 )) ) . ( DataLoc (( ( Comput (R13 , C26 , ( R1 + 9 )) ) . ( SBP ) ) , 6) ) ) by L819 , L762 , L763 , L768 , SCMPDS_2:47
.= ( ( Comput (R14 , C27 , ( R1 + 9 )) ) . ( DataLoc (( ( Comput (R14 , C27 , ( R1 + 9 )) ) . ( SBP ) ) , 6) ) ) by L763 , L768 , L808 , L815
.= ( ( Comput (R14 , C27 , D99) ) . R3 ) by L767 , L819 , SCMPDS_2:47;
end;
end;
per cases  by L798 , L799 , L800 , NAT_1:8;
suppose L822: C29 <= 7;

thus L823: (( IC ( Comput (R13 , C26 , C29) ) ) = ( IC ( Comput (R14 , C27 , C29) ) ) & ( ( Comput (R13 , C26 , C29) ) . R3 ) = ( ( Comput (R14 , C27 , C29) ) . R3 )) by L822 , L690 , L692 , L696 , L697 , L698 , L699 , L700 , L704 , L705 , L796 , L509 , L688 , L689;
end;
suppose L824: (C29 >= 8 & C29 <= ( R1 + 8 ));

consider C30 being Nat such that L825: C29 = ( 8 + C30 ) by L824 , NAT_1:10;
reconsider D100 = C30 as (Element of ( NAT )) by ORDINAL1:def 12;
L826: D100 <= R1 by L824 , L825 , XREAL_1:6;
thus L827: ( IC ( Comput (R13 , C26 , C29) ) ) = ( IC ( Comput (R13 , D92 , D100) ) ) by L825 , EXTPRO_1:4
.= ( IC ( Comput (R14 , D93 , D100) ) ) by L743 , L807 , L826
.= ( IC ( Comput (R14 , C27 , C29) ) ) by L825 , EXTPRO_1:4;
thus L828: ( ( Comput (R13 , C26 , C29) ) . R3 ) = ( ( Comput (R13 , D92 , D100) ) . R3 ) by L825 , EXTPRO_1:4
.= ( ( Comput (R14 , D93 , D100) ) . R3 ) by L743 , L807 , L826
.= ( ( Comput (R14 , C27 , C29) ) . R3 ) by L825 , EXTPRO_1:4;
end;
suppose L829: C29 = ( R1 + 9 );

thus L830: ( IC ( Comput (R13 , C26 , C29) ) ) = ( IC ( Comput (R14 , C27 , C29) ) ) by L829 , L760 , L765;
thus L831: ( ( Comput (R13 , C26 , C29) ) . R3 ) = ( ( Comput (R14 , C27 , C29) ) . R3 ) by L807 , L808 , L829;
end;
suppose L832: C29 = D99;

thus L833: ( IC ( Comput (R13 , C26 , C29) ) ) = ( IC ( Comput (R14 , C27 , C29) ) ) by L832 , L769 , L770;
thus L834: ( ( Comput (R13 , C26 , C29) ) . R3 ) = ( ( Comput (R14 , C27 , C29) ) . R3 ) by L816 , L832;
end;
end;
end;
end;
end;

end;
L688: (for R2 being (Element of ( NAT )) holds S2[ R2 ]) from NAT_1:sch 1(L657 , L685);
let C31 , C32 being (State of ( SCMPDS ));
assume that
L689: D83 c= R13
and
L690: D83 c= R14
and
L691: ( IC C31 ) = 5
and
L692: ( C31 . ( SBP ) ) > ( 0 )
and
L693: ( C31 . ( GBP ) ) = ( 0 )
and
L694: ( C31 . ( DataLoc (( C31 . ( SBP ) ) , 3) ) ) >= ( 0 )
and
L695: ( C31 . ( DataLoc (( C31 . ( SBP ) ) , 2) ) ) >= ( C31 . ( DataLoc (( C31 . ( SBP ) ) , 3) ) )
and
L696: ( IC C32 ) = ( IC C31 )
and
L697: ( C32 . ( SBP ) ) = ( C31 . ( SBP ) )
and
L698: ( C32 . ( GBP ) ) = ( 0 )
and
L699: ( C32 . ( DataLoc (( C31 . ( SBP ) ) , 2) ) ) = ( C31 . ( DataLoc (( C31 . ( SBP ) ) , 2) ) )
and
L700: ( C32 . ( DataLoc (( C31 . ( SBP ) ) , 3) ) ) = ( C31 . ( DataLoc (( C31 . ( SBP ) ) , 3) ) );
reconsider D101 = ( C31 . ( DataLoc (( C31 . ( SBP ) ) , 3) ) ) as (Element of ( NAT )) by L694 , INT_1:3;
L701: S2[ D101 ] by L688;
thus L702: thesis by L701 , L691 , L692 , L693 , L694 , L695 , L696 , L697 , L698 , L699 , L700 , L689 , L690;
end;
L703: (for R13 being (Instruction-Sequence of ( SCMPDS )) holds (for R14 being (Instruction-Sequence of ( SCMPDS )) holds (for B41 , B42 being (State of ( SCMPDS )) holds (for B43 being Int_position holds (for B44 being (Element of ( NAT )) holds ((( Start-At (( 0 ) , ( SCMPDS )) ) c= B41 & ( Start-At (( 0 ) , ( SCMPDS )) ) c= B42 & ( GCD-Algorithm ) c= R13 & ( GCD-Algorithm ) c= R14 & ( B41 . B43 ) = ( B42 . B43 ) & B44 <= 4) implies (( IC ( Comput (R13 , B41 , B44) ) ) = ( IC ( Comput (R14 , B42 , B44) ) ) & ( ( Comput (R13 , B41 , B44) ) . B43 ) = ( ( Comput (R14 , B42 , B44) ) . B43 ))))))))
proof
let R13 being (Instruction-Sequence of ( SCMPDS ));
let R14 being (Instruction-Sequence of ( SCMPDS ));
let C33 , C34 being (State of ( SCMPDS ));
let C35 being Int_position;
let C36 being (Element of ( NAT ));
set D102 = ( GCD-Algorithm );
assume that
L704: ( Start-At (( 0 ) , ( SCMPDS )) ) c= C33
and
L705: ( Start-At (( 0 ) , ( SCMPDS )) ) c= C34
and
L706: D102 c= R13
and
L707: D102 c= R14;
assume that
L708: ( C33 . C35 ) = ( C34 . C35 )
and
L709: C36 <= 4;
L710: ( IC C33 ) = ( 0 ) by L704 , MEMSTR_0:39;
L711: ( R13 /. ( IC C33 ) ) = ( R13 . ( IC C33 ) ) by PBOOLE:143;
L712: ( Comput (R13 , C33 , ( ( 0 ) + 1 )) ) = ( Following (R13 , ( Comput (R13 , C33 , ( 0 )) )) ) by EXTPRO_1:3
.= ( Following (R13 , C33) ) by EXTPRO_1:2
.= ( Exec (D1 , C33) ) by L710 , L78 , L711 , L706;
L713: ( IC C34 ) = ( 0 ) by L705 , MEMSTR_0:39;
L714: ( R14 /. ( IC C34 ) ) = ( R14 . ( IC C34 ) ) by PBOOLE:143;
L715: ( Comput (R14 , C34 , ( ( 0 ) + 1 )) ) = ( Following (R14 , ( Comput (R14 , C34 , ( 0 )) )) ) by EXTPRO_1:3
.= ( Following (R14 , C34) ) by EXTPRO_1:2
.= ( Exec (D1 , C34) ) by L713 , L78 , L714 , L707;
L716: ( R13 /. ( IC ( Comput (R13 , C33 , 1) ) ) ) = ( R13 . ( IC ( Comput (R13 , C33 , 1) ) ) ) by PBOOLE:143;
L717: ( IC ( Comput (R13 , C33 , 1) ) ) = ( succ ( IC C33 ) ) by L712 , SCMPDS_2:45
.= ( ( 0 ) + 1 ) by L710;
L718: ( CurInstr (R13 , ( Comput (R13 , C33 , 1) )) ) = ( R13 . 1 ) by L717 , L716
.= D2 by L78 , L706;
L719: ( Comput (R13 , C33 , ( 1 + 1 )) ) = ( Following (R13 , ( Comput (R13 , C33 , 1) )) ) by EXTPRO_1:3
.= ( Exec (D2 , ( Comput (R13 , C33 , 1) )) ) by L718;
L720: ( R14 /. ( IC ( Comput (R14 , C34 , 1) ) ) ) = ( R14 . ( IC ( Comput (R14 , C34 , 1) ) ) ) by PBOOLE:143;
L721: ( IC ( Comput (R14 , C34 , 1) ) ) = ( succ ( IC C34 ) ) by L715 , SCMPDS_2:45
.= ( ( 0 ) + 1 ) by L713;
L722: ( CurInstr (R14 , ( Comput (R14 , C34 , 1) )) ) = ( R14 . 1 ) by L721 , L720
.= D2 by L78 , L707;
L723: ( Comput (R14 , C34 , ( 1 + 1 )) ) = ( Following (R14 , ( Comput (R14 , C34 , 1) )) ) by EXTPRO_1:3
.= ( Exec (D2 , ( Comput (R14 , C34 , 1) )) ) by L722;
L724: ( R13 /. ( IC ( Comput (R13 , C33 , 2) ) ) ) = ( R13 . ( IC ( Comput (R13 , C33 , 2) ) ) ) by PBOOLE:143;
L725: ( IC ( Comput (R13 , C33 , 2) ) ) = ( succ ( IC ( Comput (R13 , C33 , 1) ) ) ) by L719 , SCMPDS_2:45
.= ( 1 + 1 ) by L717;
L726: ( CurInstr (R13 , ( Comput (R13 , C33 , 2) )) ) = ( R13 . 2 ) by L725 , L724
.= D3 by L78 , L706;
L727: ( Comput (R13 , C33 , ( 2 + 1 )) ) = ( Following (R13 , ( Comput (R13 , C33 , 2) )) ) by EXTPRO_1:3
.= ( Exec (D3 , ( Comput (R13 , C33 , 2) )) ) by L726;
L728: ( ( Comput (R13 , C33 , 2) ) . ( SBP ) ) = 7 by L719 , SCMPDS_2:45;
L729: ( R14 /. ( IC ( Comput (R14 , C34 , 2) ) ) ) = ( R14 . ( IC ( Comput (R14 , C34 , 2) ) ) ) by PBOOLE:143;
L730: ( IC ( Comput (R14 , C34 , 2) ) ) = ( succ ( IC ( Comput (R14 , C34 , 1) ) ) ) by L723 , SCMPDS_2:45
.= ( 1 + 1 ) by L721;
L731: ( CurInstr (R14 , ( Comput (R14 , C34 , 2) )) ) = ( R14 . 2 ) by L730 , L729
.= D3 by L78 , L707;
L732: ( Comput (R14 , C34 , ( 2 + 1 )) ) = ( Following (R14 , ( Comput (R14 , C34 , 2) )) ) by EXTPRO_1:3
.= ( Exec (D3 , ( Comput (R14 , C34 , 2) )) ) by L731;
L733: ( ( Comput (R14 , C34 , 2) ) . ( SBP ) ) = 7 by L723 , SCMPDS_2:45;
L734: ( R13 /. ( IC ( Comput (R13 , C33 , 3) ) ) ) = ( R13 . ( IC ( Comput (R13 , C33 , 3) ) ) ) by PBOOLE:143;
L735: ( IC ( Comput (R13 , C33 , 3) ) ) = ( succ ( IC ( Comput (R13 , C33 , 2) ) ) ) by L727 , SCMPDS_2:59
.= ( 2 + 1 ) by L725;
L736: ( CurInstr (R13 , ( Comput (R13 , C33 , 3) )) ) = ( R13 . 3 ) by L735 , L734
.= D4 by L78 , L706;
L737: ( Comput (R13 , C33 , ( 3 + 1 )) ) = ( Following (R13 , ( Comput (R13 , C33 , 3) )) ) by EXTPRO_1:3
.= ( Exec (D4 , ( Comput (R13 , C33 , 3) )) ) by L736;
L738: ( R14 /. ( IC ( Comput (R14 , C34 , 3) ) ) ) = ( R14 . ( IC ( Comput (R14 , C34 , 3) ) ) ) by PBOOLE:143;
L739: ( IC ( Comput (R14 , C34 , 3) ) ) = ( succ ( IC ( Comput (R14 , C34 , 2) ) ) ) by L732 , SCMPDS_2:59
.= ( 2 + 1 ) by L730;
L740: ( CurInstr (R14 , ( Comput (R14 , C34 , 3) )) ) = ( R14 . 3 ) by L739 , L738
.= D4 by L78 , L707;
L741: ( Comput (R14 , C34 , ( 3 + 1 )) ) = ( Following (R14 , ( Comput (R14 , C34 , 3) )) ) by EXTPRO_1:3
.= ( Exec (D4 , ( Comput (R14 , C34 , 3) )) ) by L740;
L742:
now
let R4 being Int_position;
assume L743: ( C33 . R4 ) = ( C34 . R4 );
per cases ;
suppose L744: R4 = ( GBP );

thus L745: ( ( Comput (R13 , C33 , 1) ) . R4 ) = ( 0 ) by L744 , L712 , SCMPDS_2:45
.= ( ( Comput (R14 , C34 , 1) ) . R4 ) by L715 , L744 , SCMPDS_2:45;
end;
suppose L746: R4 <> ( GBP );

thus L747: ( ( Comput (R13 , C33 , 1) ) . R4 ) = ( C33 . R4 ) by L746 , L712 , SCMPDS_2:45
.= ( ( Comput (R14 , C34 , 1) ) . R4 ) by L715 , L743 , L746 , SCMPDS_2:45;
end;
end;
L749:
now
let R4 being Int_position;
assume L750: ( C33 . R4 ) = ( C34 . R4 );
per cases ;
suppose L751: R4 = ( SBP );

thus L752: ( ( Comput (R13 , C33 , 2) ) . R4 ) = 7 by L751 , L719 , SCMPDS_2:45
.= ( ( Comput (R14 , C34 , 2) ) . R4 ) by L723 , L751 , SCMPDS_2:45;
end;
suppose L753: R4 <> ( SBP );

thus L754: ( ( Comput (R13 , C33 , 2) ) . R4 ) = ( ( Comput (R13 , C33 , 1) ) . R4 ) by L753 , L719 , SCMPDS_2:45
.= ( ( Comput (R14 , C34 , 1) ) . R4 ) by L742 , L750
.= ( ( Comput (R14 , C34 , 2) ) . R4 ) by L723 , L753 , SCMPDS_2:45;
end;
end;
L756:
now
let R4 being Int_position;
assume L757: ( C33 . R4 ) = ( C34 . R4 );
per cases ;
suppose L758: R4 = ( DataLoc (( ( Comput (R13 , C33 , 2) ) . ( SBP ) ) , ( RetIC )) );

thus L759: ( ( Comput (R13 , C33 , 3) ) . R4 ) = ( IC ( Comput (R13 , C33 , 2) ) ) by L758 , L727 , SCMPDS_2:59
.= ( ( Comput (R14 , C34 , 3) ) . R4 ) by L725 , L728 , L730 , L732 , L733 , L758 , SCMPDS_2:59;
end;
suppose L760: R4 <> ( DataLoc (( ( Comput (R13 , C33 , 2) ) . ( SBP ) ) , ( RetIC )) );

thus L761: ( ( Comput (R13 , C33 , 3) ) . R4 ) = ( ( Comput (R13 , C33 , 2) ) . R4 ) by L760 , L727 , SCMPDS_2:59
.= ( ( Comput (R14 , C34 , 2) ) . R4 ) by L749 , L757
.= ( ( Comput (R14 , C34 , 3) ) . R4 ) by L728 , L732 , L733 , L760 , SCMPDS_2:59;
end;
end;
per cases  by L709 , NAT_1:28;
suppose L763: C36 = ( 0 );

thus L764: ( IC ( Comput (R13 , C33 , C36) ) ) = ( IC C33 ) by L763 , EXTPRO_1:2
.= ( IC ( Comput (R14 , C34 , C36) ) ) by L710 , L713 , L763 , EXTPRO_1:2;
thus L765: ( ( Comput (R13 , C33 , C36) ) . C35 ) = ( C33 . C35 ) by L763 , EXTPRO_1:2
.= ( ( Comput (R14 , C34 , C36) ) . C35 ) by L708 , L763 , EXTPRO_1:2;
end;
suppose L766: C36 = 1;

thus L767: ( IC ( Comput (R13 , C33 , C36) ) ) = ( IC ( Comput (R14 , C34 , C36) ) ) by L766 , L717 , L721;
thus L768: thesis by L708 , L742 , L766;
end;
suppose L769: C36 = 2;

thus L770: ( IC ( Comput (R13 , C33 , C36) ) ) = ( IC ( Comput (R14 , C34 , C36) ) ) by L769 , L725 , L730;
thus L771: thesis by L708 , L749 , L769;
end;
suppose L772: C36 = 3;

thus L773: ( IC ( Comput (R13 , C33 , C36) ) ) = ( IC ( Comput (R14 , C34 , C36) ) ) by L772 , L735 , L739;
thus L774: thesis by L708 , L756 , L772;
end;
suppose L775: C36 = 4;

thus L776: ( IC ( Comput (R13 , C33 , C36) ) ) = ( ICplusConst (( Comput (R13 , C33 , 3) ) , 2) ) by L775 , L737 , SCMPDS_2:54
.= ( 3 + 2 ) by L735 , SCMPDS_6:12
.= ( ICplusConst (( Comput (R14 , C34 , 3) ) , 2) ) by L739 , SCMPDS_6:12
.= ( IC ( Comput (R14 , C34 , C36) ) ) by L741 , L775 , SCMPDS_2:54;
thus L777: ( ( Comput (R13 , C33 , C36) ) . C35 ) = ( ( Comput (R13 , C33 , 3) ) . C35 ) by L737 , L775 , SCMPDS_2:54
.= ( ( Comput (R14 , C34 , 3) ) . C35 ) by L708 , L756
.= ( ( Comput (R14 , C34 , C36) ) . C35 ) by L741 , L775 , SCMPDS_2:54;
end;
end;
begin
theorem
L779: (for B45 being (FinPartState of ( SCMPDS )) holds (for B46 , B47 being Integer holds ((B47 >= ( 0 ) & B46 >= B47 & B45 = ( (( intpos 9 ) , ( intpos 10 )) --> (B46 , B47) )) implies ( Initialize B45 ) is ( GCD-Algorithm ) -autonomic)))
proof
let C37 being (FinPartState of ( SCMPDS ));
let C38 , C39 being Integer;
set D103 = ( GCD-Algorithm );
set D104 = ( intpos 9 );
set D105 = ( intpos 10 );
assume that
L780: C39 >= ( 0 )
and
L781: C38 >= C39
and
L782: C37 = ( (D104 , D105) --> (C38 , C39) );
L783: ( dom C37 ) = { D104 , D105 } by L782 , FUNCT_4:62;
L784: (D104 in ( SCM-Data-Loc ) & D105 in ( SCM-Data-Loc )) by AMI_2:def 16;
L785: (D104 in ( Data-Locations ( SCMPDS ) ) & D105 in ( Data-Locations ( SCMPDS ) )) by L784 , SCMPDS_2:84;
L786: ( dom C37 ) c= ( Data-Locations ( SCMPDS ) ) by L785 , L783 , ZFMISC_1:32;
L787: (not ( IC ( SCMPDS ) ) in ( Data-Locations ( SCMPDS ) )) by STRUCT_0:3;
L788: { ( IC ( SCMPDS ) ) } misses ( Data-Locations ( SCMPDS ) ) by L787 , ZFMISC_1:50;
L789: ( Data-Locations ( SCMPDS ) ) misses { ( IC ( SCMPDS ) ) } by L788;
L790: ( dom C37 ) misses { ( IC ( SCMPDS ) ) } by L789 , L786 , XBOOLE_1:63;
L791: C37 is  data-only by L790 , MEMSTR_0:def 9;
L792: D104 in ( dom C37 ) by L783 , TARSKI:def 2;
L793: D104 in ( dom C37 ) by L792;
L794: D105 in ( dom C37 ) by L783 , TARSKI:def 2;
L795: D105 in ( dom C37 ) by L794;
L796: ( dom ( Start-At (( 0 ) , ( SCMPDS )) ) ) = { ( IC ( SCMPDS ) ) } by FUNCOP_1:13;
L797: (for B48 being (State of ( SCMPDS )) holds (( Initialize C37 ) c= B48 implies (( B48 . D104 ) = C38 & ( B48 . D105 ) = C39)))
proof
let C40 being (State of ( SCMPDS ));
assume that
L798: ( Initialize C37 ) c= C40;
L799: C37 = ( DataPart C37 ) by L791 , MEMSTR_0:7;
L800: ( dom C37 ) misses ( dom ( Start-At (( 0 ) , ( SCMPDS )) ) ) by L799 , L796 , MEMSTR_0:4;
L801: C37 c= ( Initialize C37 ) by L800 , FUNCT_4:32;
L802: C37 c= ( Initialize C37 ) by L801;
L803: C37 c= C40 by L802 , L798 , XBOOLE_1:1;
thus L804: ( C40 . D104 ) = ( C37 . D104 ) by L803 , L793 , GRFUNC_1:2
.= ( C37 . D104 )
.= C38 by L782 , AMI_3:10 , FUNCT_4:63;
thus L805: ( C40 . D105 ) = ( C37 . D105 ) by L803 , L795 , GRFUNC_1:2
.= ( C37 . D105 )
.= C39 by L782 , FUNCT_4:63;
end;
let C41 , C42 being (Instruction-Sequence of ( SCMPDS ));
assume that
L806: (D103 c= C41 & D103 c= C42);
let C43 , C44 being (State of ( SCMPDS ));
assume that
L807: ( Initialize C37 ) c= C43
and
L808: ( Initialize C37 ) c= C44;
L809: ( Initialize C37 ) c= C43 by L807;
L810: ( Start-At (( 0 ) , ( SCMPDS )) ) c= C43 by L809 , MEMSTR_0:50;
L811: C43 is ( 0 ) -started by L810 , MEMSTR_0:29;
L812: D103 c= C41 by L806;
L813: ( Initialize C37 ) c= C44 by L808;
L814: ( Start-At (( 0 ) , ( SCMPDS )) ) c= C44 by L813 , MEMSTR_0:50;
L815: C44 is ( 0 ) -started by L814 , MEMSTR_0:29;
L816: D103 c= C42 by L806;
L817: ( C43 . D104 ) = C38 by L797 , L807;
L818: ( C43 . D105 ) = C39 by L797 , L807;
L819: ( C44 . D104 ) = C38 by L797 , L808;
L820: ( C44 . D105 ) = C39 by L797 , L808;
set D106 = ( Comput (C41 , C43 , 4) );
set D107 = ( Comput (C42 , C44 , 4) );
L821: ( IC D106 ) = 5 by L110 , L812 , L811;
L822: ( D106 . ( GBP ) ) = ( 0 ) by L110 , L812 , L811;
L823: ( D106 . ( SBP ) ) = 7 by L110 , L812 , L811;
L824: ( D106 . ( intpos ( 7 + ( RetIC ) ) ) ) = 2 by L110 , L812 , L811;
L825: ( D106 . ( intpos 9 ) ) = ( C43 . ( intpos 9 ) ) by L110 , L812 , L811;
L826: ( D106 . ( intpos 10 ) ) = ( C43 . ( intpos 10 ) ) by L110 , L812 , L811;
L827: ( D106 . ( DataLoc (( D106 . ( SBP ) ) , 3) ) ) = ( D106 . ( intpos ( 7 + 3 ) ) ) by L823 , L2
.= C39 by L797 , L807 , L826;
L828: ( DataLoc (( D106 . ( SBP ) ) , 2) ) = ( intpos ( 7 + 2 ) ) by L823 , L2;
L829: ( IC D107 ) = 5 by L110 , L816 , L815;
L830: ( D107 . ( GBP ) ) = ( 0 ) by L110 , L816 , L815;
L831: ( D107 . ( SBP ) ) = 7 by L110 , L816 , L815;
L832: ( D107 . ( intpos ( 7 + ( RetIC ) ) ) ) = 2 by L110 , L816 , L815;
L833: ( D107 . ( intpos 9 ) ) = ( C44 . ( intpos 9 ) ) by L110 , L816 , L815;
L834: ( D107 . ( intpos 10 ) ) = ( C44 . ( intpos 10 ) ) by L110 , L816 , L815;
L835: ( D107 . ( DataLoc (( D107 . ( SBP ) ) , 3) ) ) = ( D107 . ( intpos ( 7 + 3 ) ) ) by L831 , L2
.= ( D106 . ( DataLoc (( D106 . ( SBP ) ) , 3) ) ) by L797 , L808 , L827 , L834;
consider R2 being (Element of ( NAT )) such that L836: ( CurInstr (C41 , ( Comput (C41 , D106 , R2) )) ) = ( return ( SBP ) ) and L837: ( D106 . ( SBP ) ) = ( ( Comput (C41 , D106 , R2) ) . ( SBP ) ) and L838: ( CurInstr (C42 , ( Comput (C42 , D107 , R2) )) ) = ( return ( SBP ) ) and L839: ( D107 . ( SBP ) ) = ( ( Comput (C42 , D107 , R2) ) . ( SBP ) ) and L840: (for B49 being (Element of ( NAT )) holds ((1 < B49 & B49 <= ( ( D106 . ( SBP ) ) + 1 )) implies (( D106 . ( intpos B49 ) ) = ( ( Comput (C41 , D106 , R2) ) . ( intpos B49 ) ) & ( D107 . ( intpos B49 ) ) = ( ( Comput (C42 , D107 , R2) ) . ( intpos B49 ) )))) and L841: (for B50 being (Element of ( NAT )) holds (for B51 being Int_position holds ((B50 <= R2 & ( D106 . B51 ) = ( D107 . B51 )) implies (( IC ( Comput (C41 , D106 , B50) ) ) = ( IC ( Comput (C42 , D107 , B50) ) ) & ( ( Comput (C41 , D106 , B50) ) . B51 ) = ( ( Comput (C42 , D107 , B50) ) . B51 ))))) by L835 , L780 , L781 , L797 , L808 , L817 , L821 , L822 , L823 , L825 , L827 , L828 , L829 , L830 , L831 , L833 , L656 , L812 , L816;
L842: ( ( Comput (C41 , D106 , R2) ) . ( DataLoc (( ( Comput (C41 , D106 , R2) ) . ( SBP ) ) , ( RetIC )) ) ) = ( ( Comput (C41 , D106 , R2) ) . ( intpos ( 7 + 1 ) ) ) by L823 , L837 , L2 , SCMPDS_I:def 14
.= 2 by L823 , L824 , L840 , SCMPDS_I:def 14;
L843: ( ( Comput (C42 , D107 , R2) ) . ( DataLoc (( ( Comput (C42 , D107 , R2) ) . ( SBP ) ) , ( RetIC )) ) ) = ( ( Comput (C42 , D107 , R2) ) . ( intpos ( 7 + 1 ) ) ) by L831 , L839 , L2 , SCMPDS_I:def 14
.= 2 by L823 , L832 , L840 , SCMPDS_I:def 14;
L844: ( C41 /. ( IC ( Comput (C41 , D106 , ( R2 + 1 )) ) ) ) = ( C41 . ( IC ( Comput (C41 , D106 , ( R2 + 1 )) ) ) ) by PBOOLE:143;
L845: ( Comput (C41 , D106 , ( R2 + 1 )) ) = ( Following (C41 , ( Comput (C41 , D106 , R2) )) ) by EXTPRO_1:3
.= ( Exec (D15 , ( Comput (C41 , D106 , R2) )) ) by L836;
L846: ( IC ( Comput (C41 , D106 , ( R2 + 1 )) ) ) = ( ( abs ( ( Comput (C41 , D106 , R2) ) . ( DataLoc (( ( Comput (C41 , D106 , R2) ) . ( SBP ) ) , ( RetIC )) ) ) ) + 2 ) by L845 , SCMPDS_2:58
.= ( 2 + 2 ) by L842 , ABSVALUE:29;
L847: ( CurInstr (C41 , ( Comput (C41 , D106 , ( R2 + 1 )) )) ) = ( C41 . 4 ) by L846 , L844
.= ( C41 . 4 )
.= D5 by L78 , L812;
L848: ( C42 /. ( IC ( Comput (C42 , D107 , ( R2 + 1 )) ) ) ) = ( C42 . ( IC ( Comput (C42 , D107 , ( R2 + 1 )) ) ) ) by PBOOLE:143;
L849: ( Comput (C42 , D107 , ( R2 + 1 )) ) = ( Following (C42 , ( Comput (C42 , D107 , R2) )) ) by EXTPRO_1:3
.= ( Exec (D15 , ( Comput (C42 , D107 , R2) )) ) by L838;
L850: ( IC ( Comput (C42 , D107 , ( R2 + 1 )) ) ) = ( ( abs ( ( Comput (C42 , D107 , R2) ) . ( DataLoc (( ( Comput (C42 , D107 , R2) ) . ( SBP ) ) , ( RetIC )) ) ) ) + 2 ) by L849 , SCMPDS_2:58
.= ( 2 + 2 ) by L843 , ABSVALUE:29;
L851: ( CurInstr (C42 , ( Comput (C42 , D107 , ( R2 + 1 )) )) ) = ( C42 . 4 ) by L850 , L848
.= ( C42 . 4 )
.= D5 by L78 , L816;
L852: ( D106 . D104 ) = ( D107 . D104 ) by L814 , L817 , L819 , L703 , L812 , L810 , L816;
L853: ( D106 . D105 ) = ( D107 . D105 ) by L814 , L818 , L820 , L703 , L812 , L810 , L816;
L854: ( ( Comput (C41 , D106 , ( R2 + 1 )) ) . D104 ) = ( ( Comput (C41 , D106 , R2) ) . D104 ) by L845 , AMI_3:10 , SCMPDS_2:58
.= ( ( Comput (C42 , D107 , R2) ) . D104 ) by L841 , L852
.= ( ( Comput (C42 , D107 , ( R2 + 1 )) ) . D104 ) by L849 , AMI_3:10 , SCMPDS_2:58;
L855: ( ( Comput (C41 , D106 , ( R2 + 1 )) ) . D105 ) = ( ( Comput (C41 , D106 , R2) ) . D105 ) by L845 , AMI_3:10 , SCMPDS_2:58
.= ( ( Comput (C42 , D107 , R2) ) . D105 ) by L841 , L853
.= ( ( Comput (C42 , D107 , ( R2 + 1 )) ) . D105 ) by L849 , AMI_3:10 , SCMPDS_2:58;
L856:
now
let C45 being (Element of ( NAT ));
L857: (C45 < ( ( R2 + 4 ) + 1 ) or C45 >= ( R2 + 5 ));
L858:
now
assume L859: C45 <= ( R2 + 4 );
L860: (C45 < ( 3 + 1 ) or C45 >= 4);
per cases  by L860 , NAT_1:13;
case L861: C45 <= 3;
thus L862: C45 <= 3 by L861;
end;
case L863: C45 >= 4;
thus L864: (C45 >= 4 & C45 <= ( R2 + 4 )) by L863 , L859;
end;
end;
per cases  by L857 , L858 , NAT_1:13;
suppose L866: C45 <= 3;

L867: C45 <= 4 by L866 , XXREAL_0:2;
thus L868: ( IC ( Comput (C41 , C43 , C45) ) ) = ( IC ( Comput (C42 , C44 , C45) ) ) by L867 , L814 , L817 , L819 , L703 , L812 , L810 , L816;
thus L869: ( ( Comput (C41 , C43 , C45) ) . D104 ) = ( ( Comput (C42 , C44 , C45) ) . D104 ) by L814 , L817 , L819 , L867 , L703 , L812 , L810 , L816;
thus L870: ( ( Comput (C41 , C43 , C45) ) . D105 ) = ( ( Comput (C42 , C44 , C45) ) . D105 ) by L814 , L818 , L820 , L867 , L703 , L812 , L810 , L816;
end;
suppose L871: (C45 >= 4 & C45 <= ( R2 + 4 ));

consider C46 being Nat such that L872: C45 = ( 4 + C46 ) by L871 , NAT_1:10;
reconsider D108 = C46 as (Element of ( NAT )) by ORDINAL1:def 12;
L873: D108 <= R2 by L871 , L872 , XREAL_1:6;
thus L874: ( IC ( Comput (C41 , C43 , C45) ) ) = ( IC ( Comput (C41 , D106 , D108) ) ) by L872 , EXTPRO_1:4
.= ( IC ( Comput (C42 , D107 , D108) ) ) by L841 , L852 , L873
.= ( IC ( Comput (C42 , C44 , C45) ) ) by L872 , EXTPRO_1:4;
thus L875: ( ( Comput (C41 , C43 , C45) ) . D104 ) = ( ( Comput (C41 , D106 , D108) ) . D104 ) by L872 , EXTPRO_1:4
.= ( ( Comput (C42 , D107 , D108) ) . D104 ) by L841 , L852 , L873
.= ( ( Comput (C42 , C44 , C45) ) . D104 ) by L872 , EXTPRO_1:4;
thus L876: ( ( Comput (C41 , C43 , C45) ) . D105 ) = ( ( Comput (C41 , D106 , D108) ) . D105 ) by L872 , EXTPRO_1:4
.= ( ( Comput (C42 , D107 , D108) ) . D105 ) by L841 , L853 , L873
.= ( ( Comput (C42 , C44 , C45) ) . D105 ) by L872 , EXTPRO_1:4;
end;
suppose L877: C45 >= ( R2 + 5 );

consider C47 being Nat such that L878: C45 = ( ( R2 + ( 1 + 4 ) ) + C47 ) by L877 , NAT_1:10;
reconsider D109 = C47 as (Element of ( NAT )) by ORDINAL1:def 12;
L879: C45 = ( ( ( R2 + 1 ) + D109 ) + 4 ) by L878;
thus L880: ( IC ( Comput (C41 , C43 , C45) ) ) = ( IC ( Comput (C41 , D106 , ( ( R2 + 1 ) + D109 )) ) ) by L879 , EXTPRO_1:4
.= ( IC ( Comput (C42 , D107 , ( R2 + 1 )) ) ) by L846 , L847 , L850 , EXTPRO_1:5 , NAT_1:11
.= ( IC ( Comput (C42 , D107 , ( ( R2 + 1 ) + D109 )) ) ) by L851 , EXTPRO_1:5 , NAT_1:11
.= ( IC ( Comput (C42 , C44 , C45) ) ) by L879 , EXTPRO_1:4;
thus L881: ( ( Comput (C41 , C43 , C45) ) . D104 ) = ( ( Comput (C41 , D106 , ( ( R2 + 1 ) + D109 )) ) . D104 ) by L879 , EXTPRO_1:4
.= ( ( Comput (C42 , D107 , ( R2 + 1 )) ) . D104 ) by L847 , L854 , EXTPRO_1:5 , NAT_1:11
.= ( ( Comput (C42 , D107 , ( ( R2 + 1 ) + D109 )) ) . D104 ) by L851 , EXTPRO_1:5 , NAT_1:11
.= ( ( Comput (C42 , C44 , C45) ) . D104 ) by L879 , EXTPRO_1:4;
thus L882: ( ( Comput (C41 , C43 , C45) ) . D105 ) = ( ( Comput (C41 , D106 , ( ( R2 + 1 ) + D109 )) ) . D105 ) by L879 , EXTPRO_1:4
.= ( ( Comput (C42 , D107 , ( R2 + 1 )) ) . D105 ) by L847 , L855 , EXTPRO_1:5 , NAT_1:11
.= ( ( Comput (C42 , D107 , ( ( R2 + 1 ) + D109 )) ) . D105 ) by L851 , EXTPRO_1:5 , NAT_1:11
.= ( ( Comput (C42 , C44 , C45) ) . D105 ) by L879 , EXTPRO_1:4;
end;
end;
set D110 = { ( IC ( SCMPDS ) ) , D104 , D105 };
L884: ( IC ( SCMPDS ) ) in ( dom ( Initialize C37 ) ) by MEMSTR_0:48;
L885: ( dom ( DataPart ( Initialize C37 ) ) ) = ( dom ( DataPart C37 ) ) by MEMSTR_0:45
.= ( dom ( DataPart C37 ) )
.= { D104 , D105 } by L791 , L783 , MEMSTR_0:7;
L886: ( dom ( Initialize C37 ) ) = ( { ( IC ( SCMPDS ) ) } \/ { D104 , D105 } ) by L885 , L884 , MEMSTR_0:24
.= D110 by ENUMSET1:2;
let C48 being (Element of ( NAT ));
L887: ( ( Comput (C41 , C43 , C48) ) . ( IC ( SCMPDS ) ) ) = ( IC ( Comput (C41 , C43 , C48) ) )
.= ( IC ( Comput (C42 , C44 , C48) ) ) by L856
.= ( ( Comput (C42 , C44 , C48) ) . ( IC ( SCMPDS ) ) );
L888: ( ( Comput (C41 , C43 , C48) ) . D104 ) = ( ( Comput (C42 , C44 , C48) ) . D104 ) by L856;
L889: ( ( Comput (C41 , C43 , C48) ) . D105 ) = ( ( Comput (C42 , C44 , C48) ) . D105 ) by L856;
L890: ( dom ( Comput (C41 , C43 , C48) ) ) = (the carrier of ( SCMPDS )) by PARTFUN1:def 2
.= ( dom ( Comput (C42 , C44 , C48) ) ) by PARTFUN1:def 2;
L891: ( ( Comput (C41 , C43 , C48) ) | D110 ) = ( ( Comput (C42 , C44 , C48) ) | D110 ) by L890 , L887 , L888 , L889 , GRFUNC_1:31;
thus L892: thesis by L891 , L886;
end;
