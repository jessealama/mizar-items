:: Operations on Subspaces in Vector Space
::  by Wojciech A. Trybulec
::
:: Received July 27, 1990
:: Copyright (c) 1990-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies RLVECT_1, ALGSTR_0, BINOP_1, VECTSP_1, LATTICES, XBOOLE_0,
      RLSUB_1, SUBSET_1, ARYTM_3, STRUCT_0, TARSKI, SUPINF_2, ARYTM_1, RLSUB_2,
      ZFMISC_1, FUNCT_1, RELAT_1, GROUP_1, FINSEQ_4, MCART_1, EQREL_1, PBOOLE;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, BINOP_1, RELAT_1, FUNCT_1,
      STRUCT_0, ALGSTR_0, LATTICES, RELSET_1, RLVECT_1, GROUP_1, VECTSP_1,
      DOMAIN_1, VECTSP_4;
 constructors BINOP_1, REALSET1, LATTICES, VECTSP_4;
 registrations XBOOLE_0, SUBSET_1, RELSET_1, STRUCT_0, LATTICES, VECTSP_1,
      VECTSP_4, RELAT_1;
 requirements SUBSET, BOOLE;
 definitions VECTSP_4, TARSKI, XBOOLE_0, RLVECT_1;
 theorems BINOP_1, FUNCT_1, LATTICES, MCART_1, ORDERS_1, RLSUB_2, TARSKI,
      VECTSP_1, VECTSP_4, ZFMISC_1, RLVECT_1, RELAT_1, VECTSP_2, XBOOLE_0,
      XBOOLE_1, STRUCT_0, XTUPLE_0;
 schemes BINOP_1, FUNCT_1, ORDERS_1, RELSET_1, XBOOLE_0, CLASSES1;

begin
definition
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
func R4 + R5 ->  strict (Subspace of R2) means
:L1: (the carrier of it) = { ( R10 + R7 ) where R10 is (Element of R2) , R7 is (Element of R2) : (R10 in R4 & R7 in R5) };
existence
proof
reconsider D1 = (the carrier of R4) , D2 = (the carrier of R5) as (Subset of R2) by VECTSP_4:def 2;
set D3 = { ( R10 + R7 ) where R10 is (Element of R2) , R7 is (Element of R2) : (R10 in R4 & R7 in R5) };
L2: D3 c= (the carrier of R2)
proof
let C1 being set;
assume L3: C1 in D3;
L4: (ex R11 being (Element of R2) st (ex R12 being (Element of R2) st (C1 = ( R11 + R12 ) & R11 in R4 & R12 in R5))) by L3;
thus L5: thesis by L4;
end;
reconsider D4 = D3 as (Subset of R2) by L2;
L6: ( 0. R2 ) = ( ( 0. R2 ) + ( 0. R2 ) ) by RLVECT_1:4;
L7: (( 0. R2 ) in R4 & ( 0. R2 ) in R5) by VECTSP_4:17;
L8: ( 0. R2 ) in D4 by L7 , L6;
L9: D4 = { ( R10 + R7 ) where R10 is (Element of R2) , R7 is (Element of R2) : (R10 in D1 & R7 in D2) }
proof
thus L10: D4 c= { ( R10 + R7 ) where R10 is (Element of R2) , R7 is (Element of R2) : (R10 in D1 & R7 in D2) }
proof
let C2 being set;
assume L11: C2 in D4;
consider R10 being (Element of R2), R7 being (Element of R2) such that L12: C2 = ( R10 + R7 ) and L13: (R10 in R4 & R7 in R5) by L11;
L14: (R10 in D1 & R7 in D2) by L13 , STRUCT_0:def 5;
thus L15: thesis by L14 , L12;
end;

let C3 being set;
assume L16: C3 in { ( R10 + R7 ) where R10 is (Element of R2) , R7 is (Element of R2) : (R10 in D1 & R7 in D2) };
consider R10 being (Element of R2), R7 being (Element of R2) such that L17: C3 = ( R10 + R7 ) and L18: (R10 in D1 & R7 in D2) by L16;
L19: (R10 in R4 & R7 in R5) by L18 , STRUCT_0:def 5;
thus L20: thesis by L19 , L17;
end;
L21: (D1 is  linearly-closed & D2 is  linearly-closed) by VECTSP_4:33;
thus L22: thesis by L21 , L8 , L9 , VECTSP_4:6 , VECTSP_4:34;
end;
uniqueness by VECTSP_4:29;
end;
L24: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds ( R4 + R5 ) = ( R5 + R4 )))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
set D5 = { ( R10 + R7 ) where R10 is (Element of R2) , R7 is (Element of R2) : (R10 in R4 & R7 in R5) };
set D6 = { ( R10 + R7 ) where R10 is (Element of R2) , R7 is (Element of R2) : (R10 in R5 & R7 in R4) };
L25: D6 c= D5
proof
let C4 being set;
assume L26: C4 in D6;
L27: (ex R10 being (Element of R2) st (ex R7 being (Element of R2) st (C4 = ( R10 + R7 ) & R10 in R5 & R7 in R4))) by L26;
thus L28: thesis by L27;
end;
L29: (the carrier of ( R4 + R5 )) = D5 by L1;
L30: D5 c= D6
proof
let C5 being set;
assume L31: C5 in D5;
L32: (ex R10 being (Element of R2) st (ex R7 being (Element of R2) st (C5 = ( R10 + R7 ) & R10 in R4 & R7 in R5))) by L31;
thus L33: thesis by L32;
end;
L34: D5 = D6 by L30 , L25 , XBOOLE_0:def 10;
thus L35: thesis by L34 , L29 , L1;
end;
definition
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
func R4 /\ R5 ->  strict (Subspace of R2) means
:L36: (the carrier of it) = ( (the carrier of R4) /\ (the carrier of R5) );
existence
proof
set D7 = (the carrier of R5);
set D8 = (the carrier of R4);
set D9 = (the carrier of R2);
L37: ( 0. R2 ) in R5 by VECTSP_4:17;
L38: ( 0. R2 ) in D7 by L37 , STRUCT_0:def 5;
L39: (D8 c= D9 & D7 c= D9) by VECTSP_4:def 2;
L40: ( D8 /\ D7 ) c= ( D9 /\ D9 ) by L39 , XBOOLE_1:27;
reconsider D10 = D8 , D11 = D7 , D12 = ( D8 /\ D7 ) as (Subset of R2) by L40 , VECTSP_4:def 2;
L41: (D10 is  linearly-closed & D11 is  linearly-closed) by VECTSP_4:33;
L42: D12 is  linearly-closed by L41 , VECTSP_4:7;
L43: ( 0. R2 ) in R4 by VECTSP_4:17;
L44: ( 0. R2 ) in D8 by L43 , STRUCT_0:def 5;
L45: ( D8 /\ D7 ) <> ( {} ) by L44 , L38 , XBOOLE_0:def 4;
thus L46: thesis by L45 , L42 , VECTSP_4:34;
end;
uniqueness by VECTSP_4:29;
commutativity
;
end;
theorem
L48: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (for R15 being set holds (R15 in ( R4 + R5 ) iff (ex R11 being (Element of R2) st (ex R12 being (Element of R2) st (R11 in R4 & R12 in R5 & R15 = ( R11 + R12 ))))))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
let R15 being set;
thus L49: (R15 in ( R4 + R5 ) implies (ex R11 being (Element of R2) st (ex R12 being (Element of R2) st (R11 in R4 & R12 in R5 & R15 = ( R11 + R12 )))))
proof
assume L50: R15 in ( R4 + R5 );
L51: R15 in (the carrier of ( R4 + R5 )) by L50 , STRUCT_0:def 5;
L52: R15 in { ( R10 + R7 ) where R10 is (Element of R2) , R7 is (Element of R2) : (R10 in R4 & R7 in R5) } by L51 , L1;
consider R11 being (Element of R2), R12 being (Element of R2) such that L53: (R15 = ( R11 + R12 ) & R11 in R4 & R12 in R5) by L52;
take R11;
take R12;
thus L54: thesis by L53;
end;

given R11 being (Element of R2) , R12 being (Element of R2) such that
L55: (R11 in R4 & R12 in R5 & R15 = ( R11 + R12 ));

L56: R15 in { ( R10 + R7 ) where R10 is (Element of R2) , R7 is (Element of R2) : (R10 in R4 & R7 in R5) } by L55;
L57: R15 in (the carrier of ( R4 + R5 )) by L56 , L1;
thus L58: thesis by L57 , STRUCT_0:def 5;
end;
theorem
L59: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (for R10 being (Element of R2) holds ((R10 in R4 or R10 in R5) implies R10 in ( R4 + R5 )))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
let R10 being (Element of R2);
assume L60: (R10 in R4 or R10 in R5);
L61:
now
per cases  by L60;
suppose L62: R10 in R4;

L63: (R10 = ( R10 + ( 0. R2 ) ) & ( 0. R2 ) in R5) by RLVECT_1:4 , VECTSP_4:17;
thus L64: thesis by L63 , L62 , L48;
end;
suppose L65: R10 in R5;

L66: (R10 = ( ( 0. R2 ) + R10 ) & ( 0. R2 ) in R4) by RLVECT_1:4 , VECTSP_4:17;
thus L67: thesis by L66 , L65 , L48;
end;
end;
thus L69: thesis by L61;
end;
theorem
L70: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (for R15 being set holds (R15 in ( R4 /\ R5 ) iff (R15 in R4 & R15 in R5)))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
let R15 being set;
L71: (R15 in ( R4 /\ R5 ) iff R15 in (the carrier of ( R4 /\ R5 ))) by STRUCT_0:def 5;
L72: (R15 in ( R4 /\ R5 ) iff R15 in ( (the carrier of R4) /\ (the carrier of R5) )) by L71 , L36;
L73: (R15 in ( R4 /\ R5 ) iff (R15 in (the carrier of R4) & R15 in (the carrier of R5))) by L72 , XBOOLE_0:def 4;
thus L74: thesis by L73 , STRUCT_0:def 5;
end;
L75: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (the carrier of R4) c= (the carrier of ( R4 + R5 ))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
let C6 being set;
set D13 = { ( R10 + R7 ) where R10 is (Element of R2) , R7 is (Element of R2) : (R10 in R4 & R7 in R5) };
assume L76: C6 in (the carrier of R4);
reconsider D14 = C6 as (Element of R4) by L76;
reconsider D15 = D14 as (Element of R2) by VECTSP_4:10;
L77: D15 = ( D15 + ( 0. R2 ) ) by RLVECT_1:4;
L78: (D15 in R4 & ( 0. R2 ) in R5) by STRUCT_0:def 5 , VECTSP_4:17;
L79: C6 in D13 by L78 , L77;
thus L80: thesis by L79 , L1;
end;
L81: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for B1 being  strict (Subspace of R2) holds ((the carrier of R4) c= (the carrier of B1) implies ( R4 + B1 ) = B1)))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let C7 being  strict (Subspace of R2);
assume L82: (the carrier of R4) c= (the carrier of C7);
L83: (the carrier of ( R4 + C7 )) c= (the carrier of C7)
proof
let C8 being set;
assume L84: C8 in (the carrier of ( R4 + C7 ));
L85: C8 in { ( R10 + R7 ) where R10 is (Element of R2) , R7 is (Element of R2) : (R10 in R4 & R7 in C7) } by L84 , L1;
consider R10 being (Element of R2), R7 being (Element of R2) such that L86: C8 = ( R10 + R7 ) and L87: R10 in R4 and L88: R7 in C7 by L85;
L89: R4 is (Subspace of C7) by L82 , VECTSP_4:27;
L90: R10 in C7 by L89 , L87 , VECTSP_4:8;
L91: ( R10 + R7 ) in C7 by L90 , L88 , VECTSP_4:20;
thus L92: thesis by L91 , L86 , STRUCT_0:def 5;
end;
L93: ( R4 + C7 ) = ( C7 + R4 ) by L24;
L94: (the carrier of C7) c= (the carrier of ( R4 + C7 )) by L93 , L75;
L95: (the carrier of ( R4 + C7 )) = (the carrier of C7) by L94 , L83 , XBOOLE_0:def 10;
thus L96: thesis by L95 , VECTSP_4:29;
end;
theorem
L97: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for B2 being  strict (Subspace of R2) holds ( B2 + B2 ) = B2))) by L81;
theorem
L98: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds ( R4 + R5 ) = ( R5 + R4 ))))) by L24;
theorem
L99: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (for R6 being (Subspace of R2) holds ( R4 + ( R5 + R6 ) ) = ( ( R4 + R5 ) + R6 ))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
let R6 being (Subspace of R2);
set D16 = { ( R10 + R7 ) where R10 is (Element of R2) , R7 is (Element of R2) : (R10 in R4 & R7 in R5) };
set D17 = { ( R10 + R7 ) where R10 is (Element of R2) , R7 is (Element of R2) : (R10 in R5 & R7 in R6) };
set D18 = { ( R10 + R7 ) where R10 is (Element of R2) , R7 is (Element of R2) : (R10 in ( R4 + R5 ) & R7 in R6) };
set D19 = { ( R10 + R7 ) where R10 is (Element of R2) , R7 is (Element of R2) : (R10 in R4 & R7 in ( R5 + R6 )) };
L100: (the carrier of ( R4 + ( R5 + R6 ) )) = D19 by L1;
L101: D18 c= D19
proof
let C9 being set;
assume L102: C9 in D18;
consider R10 being (Element of R2), R7 being (Element of R2) such that L103: C9 = ( R10 + R7 ) and L104: R10 in ( R4 + R5 ) and L105: R7 in R6 by L102;
L106: R10 in (the carrier of ( R4 + R5 )) by L104 , STRUCT_0:def 5;
L107: R10 in D16 by L106 , L1;
consider R8 being (Element of R2), R9 being (Element of R2) such that L108: R10 = ( R8 + R9 ) and L109: R8 in R4 and L110: R9 in R5 by L107;
L111: ( R9 + R7 ) in D17 by L105 , L110;
L112: ( R9 + R7 ) in (the carrier of ( R5 + R6 )) by L111 , L1;
L113: ( R9 + R7 ) in ( R5 + R6 ) by L112 , STRUCT_0:def 5;
L114: ( R10 + R7 ) = ( R8 + ( R9 + R7 ) ) by L108 , RLVECT_1:def 3;
thus L115: thesis by L114 , L103 , L109 , L113;
end;
L116: D19 c= D18
proof
let C10 being set;
assume L117: C10 in D19;
consider R10 being (Element of R2), R7 being (Element of R2) such that L118: C10 = ( R10 + R7 ) and L119: R10 in R4 and L120: R7 in ( R5 + R6 ) by L117;
L121: R7 in (the carrier of ( R5 + R6 )) by L120 , STRUCT_0:def 5;
L122: R7 in D17 by L121 , L1;
consider R8 being (Element of R2), R9 being (Element of R2) such that L123: R7 = ( R8 + R9 ) and L124: R8 in R5 and L125: R9 in R6 by L122;
L126: ( R10 + R8 ) in D16 by L119 , L124;
L127: ( R10 + R8 ) in (the carrier of ( R4 + R5 )) by L126 , L1;
L128: ( R10 + R8 ) in ( R4 + R5 ) by L127 , STRUCT_0:def 5;
L129: ( R10 + R7 ) = ( ( R10 + R8 ) + R9 ) by L123 , RLVECT_1:def 3;
thus L130: thesis by L129 , L118 , L125 , L128;
end;
L131: D19 = D18 by L116 , L101 , XBOOLE_0:def 10;
thus L132: thesis by L131 , L100 , L1;
end;
theorem
L133: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (R4 is (Subspace of ( R4 + R5 )) & R5 is (Subspace of ( R4 + R5 )))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
L134: (the carrier of R4) c= (the carrier of ( R4 + R5 )) by L75;
thus L135: R4 is (Subspace of ( R4 + R5 )) by L134 , VECTSP_4:27;
L136: (the carrier of R5) c= (the carrier of ( R5 + R4 )) by L75;
L137: (the carrier of R5) c= (the carrier of ( R4 + R5 )) by L136 , L24;
thus L138: thesis by L137 , VECTSP_4:27;
end;
theorem
L139: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for B3 being  strict (Subspace of R2) holds (R4 is (Subspace of B3) iff ( R4 + B3 ) = B3)))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let C11 being  strict (Subspace of R2);
thus L140: (R4 is (Subspace of C11) implies ( R4 + C11 ) = C11)
proof
assume L141: R4 is (Subspace of C11);
L142: (the carrier of R4) c= (the carrier of C11) by L141 , VECTSP_4:def 2;
thus L143: thesis by L142 , L81;
end;

thus L144: thesis by L133;
end;
theorem
L145: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for B4 being  strict (Subspace of R2) holds (( ( (0). R2 ) + B4 ) = B4 & ( B4 + ( (0). R2 ) ) = B4))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let C12 being  strict (Subspace of R2);
L146: ( (0). R2 ) is (Subspace of C12) by VECTSP_4:39;
L147: (the carrier of ( (0). R2 )) c= (the carrier of C12) by L146 , VECTSP_4:def 2;
thus L148: ( ( (0). R2 ) + C12 ) = C12 by L147 , L81;
thus L149: thesis by L148 , L24;
end;
L150: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R3 being (Subspace of R2) holds (ex B5 being  strict (Subspace of R2) st (the carrier of R3) = (the carrier of B5)))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R3 being (Subspace of R2);
take D20 = ( R3 + R3 );
thus L151: (the carrier of R3) c= (the carrier of D20) by L75;
let C13 being set;
assume L152: C13 in (the carrier of D20);
L153: C13 in { ( R10 + R7 ) where R10 is (Element of R2) , R7 is (Element of R2) : (R10 in R3 & R7 in R3) } by L152 , L1;
L154: (ex R11 being (Element of R2) st (ex R12 being (Element of R2) st (C13 = ( R11 + R12 ) & R11 in R3 & R12 in R3))) by L153;
L155: C13 in R3 by L154 , VECTSP_4:20;
thus L156: thesis by L155 , STRUCT_0:def 5;
end;
L157: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for B6 , B7 , B8 being (Subspace of R2) holds ((the carrier of B6) = (the carrier of B7) implies (( B8 + B6 ) = ( B8 + B7 ) & ( B6 + B8 ) = ( B7 + B8 ))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let C14 , C15 , C16 being (Subspace of R2);
assume that
L158: (the carrier of C14) = (the carrier of C15);
L159:
now
let R10 being (Element of R2);
set D21 = { ( R11 + R12 ) where R11 is (Element of R2) , R12 is (Element of R2) : (R11 in C16 & R12 in C15) };
set D22 = { ( R11 + R12 ) where R11 is (Element of R2) , R12 is (Element of R2) : (R11 in C16 & R12 in C14) };
thus L160: (R10 in ( C16 + C14 ) implies R10 in ( C16 + C15 ))
proof
assume L161: R10 in ( C16 + C14 );
L162: R10 in (the carrier of ( C16 + C14 )) by L161 , STRUCT_0:def 5;
L163: R10 in D22 by L162 , L1;
consider R11 being (Element of R2), R12 being (Element of R2) such that L164: (R10 = ( R11 + R12 ) & R11 in C16) and L165: R12 in C14 by L163;
L166: R12 in (the carrier of C15) by L158 , L165 , STRUCT_0:def 5;
L167: R12 in C15 by L166 , STRUCT_0:def 5;
L168: R10 in D21 by L167 , L164;
L169: R10 in (the carrier of ( C16 + C15 )) by L168 , L1;
thus L170: thesis by L169 , STRUCT_0:def 5;
end;

assume L171: R10 in ( C16 + C15 );
L172: R10 in (the carrier of ( C16 + C15 )) by L171 , STRUCT_0:def 5;
L173: R10 in D21 by L172 , L1;
consider R11 being (Element of R2), R12 being (Element of R2) such that L174: (R10 = ( R11 + R12 ) & R11 in C16) and L175: R12 in C15 by L173;
L176: R12 in (the carrier of C14) by L158 , L175 , STRUCT_0:def 5;
L177: R12 in C14 by L176 , STRUCT_0:def 5;
L178: R10 in D22 by L177 , L174;
L179: R10 in (the carrier of ( C16 + C14 )) by L178 , L1;
thus L180: R10 in ( C16 + C14 ) by L179 , STRUCT_0:def 5;
end;
thus L181: ( C16 + C14 ) = ( C16 + C15 ) by L159 , VECTSP_4:30;
L182: (( C16 + C14 ) = ( C14 + C16 ) & ( C16 + C15 ) = ( C15 + C16 )) by L24;
thus L183: thesis by L182 , L159 , VECTSP_4:30;
end;
L184: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for B9 being (Subspace of R2) holds B9 is (Subspace of ( (Omega). R2 )))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let C17 being (Subspace of R2);
thus L185: (the carrier of C17) c= (the carrier of ( (Omega). R2 )) by VECTSP_4:def 2;
thus L186: ( 0. C17 ) = ( 0. R2 ) by VECTSP_4:def 2
.= ( 0. ( (Omega). R2 ) ) by VECTSP_4:def 2;
thus L187: thesis by VECTSP_4:def 2;
end;
theorem
L188: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (( ( (0). R2 ) + ( (Omega). R2 ) ) = ( the VectSpStr of R2 ) & ( ( (Omega). R2 ) + ( (0). R2 ) ) = ( the VectSpStr of R2 )))) by L145;
theorem
L189: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R3 being (Subspace of R2) holds (( ( (Omega). R2 ) + R3 ) = ( the VectSpStr of R2 ) & ( R3 + ( (Omega). R2 ) ) = ( the VectSpStr of R2 )))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R3 being (Subspace of R2);
consider C18 being  strict (Subspace of R2) such that L190: (the carrier of C18) = (the carrier of ( (Omega). R2 ));
L191: (the carrier of R3) c= (the carrier of C18) by L190 , VECTSP_4:def 2;
L192: C18 is (Subspace of ( (Omega). R2 )) by L184;
L193: ( R3 + ( (Omega). R2 ) ) = ( R3 + C18 ) by L190 , L157
.= C18 by L191 , L81
.= ( the VectSpStr of R2 ) by L190 , L192 , VECTSP_4:31;
thus L194: thesis by L193 , L24;
end;
theorem
L195: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for B10 being  strict  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds ( ( (Omega). B10 ) + ( (Omega). B10 ) ) = B10)) by L189;
theorem
L196: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for B11 being  strict (Subspace of R2) holds ( B11 /\ B11 ) = B11)))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let C19 being  strict (Subspace of R2);
L197: (the carrier of C19) = ( (the carrier of C19) /\ (the carrier of C19) );
thus L198: thesis by L197 , L36;
end;
theorem
L199: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (for R6 being (Subspace of R2) holds ( R4 /\ ( R5 /\ R6 ) ) = ( ( R4 /\ R5 ) /\ R6 ))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
let R6 being (Subspace of R2);
set D23 = (the carrier of R4);
set D24 = (the carrier of R5);
set D25 = (the carrier of R6);
L200: (the carrier of ( R4 /\ ( R5 /\ R6 ) )) = ( D23 /\ (the carrier of ( R5 /\ R6 )) ) by L36
.= ( D23 /\ ( D24 /\ D25 ) ) by L36
.= ( ( D23 /\ D24 ) /\ D25 ) by XBOOLE_1:16
.= ( (the carrier of ( R4 /\ R5 )) /\ D25 ) by L36;
thus L201: thesis by L200 , L36;
end;
L202: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (the carrier of ( R4 /\ R5 )) c= (the carrier of R4)))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
L203: (the carrier of ( R4 /\ R5 )) = ( (the carrier of R4) /\ (the carrier of R5) ) by L36;
thus L204: thesis by L203 , XBOOLE_1:17;
end;
theorem
L205: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (( R4 /\ R5 ) is (Subspace of R4) & ( R4 /\ R5 ) is (Subspace of R5))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
L206: (the carrier of ( R4 /\ R5 )) c= (the carrier of R4) by L202;
thus L207: ( R4 /\ R5 ) is (Subspace of R4) by L206 , VECTSP_4:27;
L208: (the carrier of ( R5 /\ R4 )) c= (the carrier of R5) by L202;
thus L209: thesis by L208 , VECTSP_4:27;
end;
L210: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for B12 , B13 , B14 being (Subspace of R2) holds ((the carrier of B12) = (the carrier of B13) implies (( B14 /\ B12 ) = ( B14 /\ B13 ) & ( B12 /\ B14 ) = ( B13 /\ B14 ))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let C20 , C21 , C22 being (Subspace of R2);
assume L211: (the carrier of C20) = (the carrier of C21);
L212: (the carrier of ( C22 /\ C20 )) = ( (the carrier of C22) /\ (the carrier of C21) ) by L211 , L36
.= (the carrier of ( C22 /\ C21 )) by L36;
thus L213: ( C22 /\ C20 ) = ( C22 /\ C21 ) by L212 , VECTSP_4:29;
thus L214: thesis by L212 , VECTSP_4:29;
end;
theorem
L215: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R5 being (Subspace of R2) holds ((for B15 being  strict (Subspace of R2) holds (B15 is (Subspace of R5) implies ( B15 /\ R5 ) = B15)) & (for R4 being (Subspace of R2) holds (( R4 /\ R5 ) = R4 implies R4 is (Subspace of R5)))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R5 being (Subspace of R2);
thus L216: (for B16 being  strict (Subspace of R2) holds (B16 is (Subspace of R5) implies ( B16 /\ R5 ) = B16))
proof
let C23 being  strict (Subspace of R2);
assume L217: C23 is (Subspace of R5);
L218: (the carrier of C23) c= (the carrier of R5) by L217 , VECTSP_4:def 2;
L219: (the carrier of ( C23 /\ R5 )) = ( (the carrier of C23) /\ (the carrier of R5) ) by L36;
thus L220: thesis by L219 , L218 , VECTSP_4:29 , XBOOLE_1:28;
end;

thus L221: thesis by L205;
end;
theorem
L222: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (for R6 being (Subspace of R2) holds (R4 is (Subspace of R5) implies ( R4 /\ R6 ) is (Subspace of ( R5 /\ R6 ))))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
let R6 being (Subspace of R2);
set D26 = (the carrier of R4);
set D27 = (the carrier of R5);
set D28 = (the carrier of R6);
set D29 = (the carrier of ( R4 /\ R6 ));
assume L223: R4 is (Subspace of R5);
L224: D26 c= D27 by L223 , VECTSP_4:def 2;
L225: ( D26 /\ D28 ) c= ( D27 /\ D28 ) by L224 , XBOOLE_1:26;
L226: D29 c= ( D27 /\ D28 ) by L225 , L36;
L227: D29 c= (the carrier of ( R5 /\ R6 )) by L226 , L36;
thus L228: thesis by L227 , VECTSP_4:27;
end;
theorem
L229: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (for R6 being (Subspace of R2) holds (R4 is (Subspace of R6) implies ( R4 /\ R5 ) is (Subspace of R6)))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
let R6 being (Subspace of R2);
assume L230: R4 is (Subspace of R6);
L231: ( R4 /\ R5 ) is (Subspace of R4) by L205;
thus L232: thesis by L231 , L230 , VECTSP_4:26;
end;
theorem
L233: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (for R6 being (Subspace of R2) holds ((R4 is (Subspace of R5) & R4 is (Subspace of R6)) implies R4 is (Subspace of ( R5 /\ R6 ))))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
let R6 being (Subspace of R2);
assume L234: (R4 is (Subspace of R5) & R4 is (Subspace of R6));
L235:
now
let R10 being (Element of R2);
assume L236: R10 in R4;
L237: (R10 in R5 & R10 in R6) by L236 , L234 , VECTSP_4:8;
thus L238: R10 in ( R5 /\ R6 ) by L237 , L70;
end;
thus L239: thesis by L235 , VECTSP_4:28;
end;
theorem
L240: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R3 being (Subspace of R2) holds (( ( (0). R2 ) /\ R3 ) = ( (0). R2 ) & ( R3 /\ ( (0). R2 ) ) = ( (0). R2 )))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R3 being (Subspace of R2);
L241: ( 0. R2 ) in R3 by VECTSP_4:17;
L242: ( 0. R2 ) in (the carrier of R3) by L241 , STRUCT_0:def 5;
L243: { ( 0. R2 ) } c= (the carrier of R3) by L242 , ZFMISC_1:31;
L244: ( { ( 0. R2 ) } /\ (the carrier of R3) ) = { ( 0. R2 ) } by L243 , XBOOLE_1:28;
L245: (the carrier of ( ( (0). R2 ) /\ R3 )) = ( (the carrier of ( (0). R2 )) /\ (the carrier of R3) ) by L36
.= ( { ( 0. R2 ) } /\ (the carrier of R3) ) by VECTSP_4:def 3;
thus L246: ( ( (0). R2 ) /\ R3 ) = ( (0). R2 ) by L245 , L244 , VECTSP_4:def 3;
thus L247: thesis by L245 , L244 , VECTSP_4:def 3;
end;
theorem
L248: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for B17 being  strict (Subspace of R2) holds (( ( (Omega). R2 ) /\ B17 ) = B17 & ( B17 /\ ( (Omega). R2 ) ) = B17))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let C24 being  strict (Subspace of R2);
L249: ((the carrier of ( ( (Omega). R2 ) /\ C24 )) = ( (the carrier of ( the VectSpStr of R2 )) /\ (the carrier of C24) ) & (the carrier of C24) c= (the carrier of R2)) by L36 , VECTSP_4:def 2;
thus L250: ( ( (Omega). R2 ) /\ C24 ) = C24 by L249 , VECTSP_4:29 , XBOOLE_1:28;
thus L251: thesis by L249 , VECTSP_4:29 , XBOOLE_1:28;
end;
theorem
L252: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for B18 being  strict  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds ( ( (Omega). B18 ) /\ ( (Omega). B18 ) ) = B18)) by L248;
L253: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (the carrier of ( R4 /\ R5 )) c= (the carrier of ( R4 + R5 ))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
L254: ((the carrier of ( R4 /\ R5 )) c= (the carrier of R4) & (the carrier of R4) c= (the carrier of ( R4 + R5 ))) by L75 , L202;
thus L255: thesis by L254 , XBOOLE_1:1;
end;
theorem
L256: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds ( R4 /\ R5 ) is (Subspace of ( R4 + R5 )))))) by L253 , VECTSP_4:27;
L257: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (the carrier of ( ( R4 /\ R5 ) + R5 )) = (the carrier of R5)))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
thus L258: (the carrier of ( ( R4 /\ R5 ) + R5 )) c= (the carrier of R5)
proof
let C25 being set;
assume L259: C25 in (the carrier of ( ( R4 /\ R5 ) + R5 ));
L260: C25 in { ( R7 + R10 ) where R7 is (Element of R2) , R10 is (Element of R2) : (R7 in ( R4 /\ R5 ) & R10 in R5) } by L259 , L1;
consider R7 being (Element of R2), R10 being (Element of R2) such that L261: C25 = ( R7 + R10 ) and L262: R7 in ( R4 /\ R5 ) and L263: R10 in R5 by L260;
L264: R7 in R5 by L262 , L70;
L265: ( R7 + R10 ) in R5 by L264 , L263 , VECTSP_4:20;
thus L266: thesis by L265 , L261 , STRUCT_0:def 5;
end;

let C26 being set;
L267: (the carrier of R5) c= (the carrier of ( R5 + ( R4 /\ R5 ) )) by L75;
L268: (the carrier of R5) c= (the carrier of ( ( R4 /\ R5 ) + R5 )) by L267 , L24;
assume L269: C26 in (the carrier of R5);
thus L270: thesis by L269 , L268;
end;
theorem
L271: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for B19 being  strict (Subspace of R2) holds ( ( R4 /\ B19 ) + B19 ) = B19)))) by L257 , VECTSP_4:29;
L272: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (the carrier of ( R4 /\ ( R4 + R5 ) )) = (the carrier of R4)))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
thus L273: (the carrier of ( R4 /\ ( R4 + R5 ) )) c= (the carrier of R4)
proof
let C27 being set;
assume L274: C27 in (the carrier of ( R4 /\ ( R4 + R5 ) ));
L275: (the carrier of ( R4 /\ ( R4 + R5 ) )) = ( (the carrier of R4) /\ (the carrier of ( R4 + R5 )) ) by L36;
thus L276: thesis by L275 , L274 , XBOOLE_0:def 4;
end;

let C28 being set;
assume L277: C28 in (the carrier of R4);
L278: (the carrier of R4) c= (the carrier of R2) by VECTSP_4:def 2;
reconsider D30 = C28 as (Element of R2) by L278 , L277;
L279: (( D30 + ( 0. R2 ) ) = D30 & ( 0. R2 ) in R5) by RLVECT_1:4 , VECTSP_4:17;
L280: C28 in R4 by L277 , STRUCT_0:def 5;
L281: C28 in { ( R7 + R10 ) where R7 is (Element of R2) , R10 is (Element of R2) : (R7 in R4 & R10 in R5) } by L280 , L279;
L282: C28 in (the carrier of ( R4 + R5 )) by L281 , L1;
L283: C28 in ( (the carrier of R4) /\ (the carrier of ( R4 + R5 )) ) by L282 , L277 , XBOOLE_0:def 4;
thus L284: thesis by L283 , L36;
end;
theorem
L285: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R5 being (Subspace of R2) holds (for B20 being  strict (Subspace of R2) holds ( B20 /\ ( B20 + R5 ) ) = B20)))) by L272 , VECTSP_4:29;
L286: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (for R6 being (Subspace of R2) holds (the carrier of ( ( R4 /\ R5 ) + ( R5 /\ R6 ) )) c= (the carrier of ( R5 /\ ( R4 + R6 ) )))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
let R6 being (Subspace of R2);
let C29 being set;
assume L287: C29 in (the carrier of ( ( R4 /\ R5 ) + ( R5 /\ R6 ) ));
L288: C29 in { ( R7 + R10 ) where R7 is (Element of R2) , R10 is (Element of R2) : (R7 in ( R4 /\ R5 ) & R10 in ( R5 /\ R6 )) } by L287 , L1;
consider R7 being (Element of R2), R10 being (Element of R2) such that L289: C29 = ( R7 + R10 ) and L290: (R7 in ( R4 /\ R5 ) & R10 in ( R5 /\ R6 )) by L288;
L291: (R7 in R5 & R10 in R5) by L290 , L70;
L292: C29 in R5 by L291 , L289 , VECTSP_4:20;
L293: (R7 in R4 & R10 in R6) by L290 , L70;
L294: C29 in ( R4 + R6 ) by L293 , L289 , L48;
L295: C29 in ( R5 /\ ( R4 + R6 ) ) by L294 , L292 , L70;
thus L296: thesis by L295 , STRUCT_0:def 5;
end;
theorem
L297: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (for R6 being (Subspace of R2) holds ( ( R4 /\ R5 ) + ( R5 /\ R6 ) ) is (Subspace of ( R5 /\ ( R4 + R6 ) ))))))) by L286 , VECTSP_4:27;
L298: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (for R6 being (Subspace of R2) holds (R4 is (Subspace of R5) implies (the carrier of ( R5 /\ ( R4 + R6 ) )) = (the carrier of ( ( R4 /\ R5 ) + ( R5 /\ R6 ) ))))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
let R6 being (Subspace of R2);
assume L299: R4 is (Subspace of R5);
thus L300: (the carrier of ( R5 /\ ( R4 + R6 ) )) c= (the carrier of ( ( R4 /\ R5 ) + ( R5 /\ R6 ) ))
proof
let C30 being set;
assume L301: C30 in (the carrier of ( R5 /\ ( R4 + R6 ) ));
L302: C30 in ( (the carrier of R5) /\ (the carrier of ( R4 + R6 )) ) by L301 , L36;
L303: C30 in (the carrier of ( R4 + R6 )) by L302 , XBOOLE_0:def 4;
L304: C30 in { ( R7 + R10 ) where R7 is (Element of R2) , R10 is (Element of R2) : (R7 in R4 & R10 in R6) } by L303 , L1;
consider R8 being (Element of R2), R11 being (Element of R2) such that L305: C30 = ( R8 + R11 ) and L306: R8 in R4 and L307: R11 in R6 by L304;
L308: R8 in R5 by L299 , L306 , VECTSP_4:8;
L309: C30 in (the carrier of R5) by L302 , XBOOLE_0:def 4;
L310: ( R8 + R11 ) in R5 by L309 , L305 , STRUCT_0:def 5;
L311: ( ( R11 + R8 ) - R8 ) in R5 by L310 , L308 , VECTSP_4:23;
L312: ( R11 + ( R8 - R8 ) ) in R5 by L311 , RLVECT_1:def 3;
L313: ( R11 + ( 0. R2 ) ) in R5 by L312 , VECTSP_1:19;
L314: R11 in R5 by L313 , RLVECT_1:4;
L315: R11 in ( R5 /\ R6 ) by L314 , L307 , L70;
L316: R8 in ( R4 /\ R5 ) by L306 , L308 , L70;
L317: C30 in ( ( R4 /\ R5 ) + ( R5 /\ R6 ) ) by L316 , L305 , L315 , L48;
thus L318: thesis by L317 , STRUCT_0:def 5;
end;

thus L319: thesis by L286;
end;
theorem
L320: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (for R6 being (Subspace of R2) holds (R4 is (Subspace of R5) implies ( R5 /\ ( R4 + R6 ) ) = ( ( R4 /\ R5 ) + ( R5 /\ R6 ) ))))))) by L298 , VECTSP_4:29;
L321: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (for R6 being (Subspace of R2) holds (the carrier of ( R5 + ( R4 /\ R6 ) )) c= (the carrier of ( ( R4 + R5 ) /\ ( R5 + R6 ) )))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
let R6 being (Subspace of R2);
let C31 being set;
assume L322: C31 in (the carrier of ( R5 + ( R4 /\ R6 ) ));
L323: C31 in { ( R7 + R10 ) where R7 is (Element of R2) , R10 is (Element of R2) : (R7 in R5 & R10 in ( R4 /\ R6 )) } by L322 , L1;
consider R7 being (Element of R2), R10 being (Element of R2) such that L324: (C31 = ( R7 + R10 ) & R7 in R5) and L325: R10 in ( R4 /\ R6 ) by L323;
L326: R10 in R6 by L325 , L70;
L327: C31 in { ( R8 + R9 ) where R8 is (Element of R2) , R9 is (Element of R2) : (R8 in R5 & R9 in R6) } by L326 , L324;
L328: C31 in (the carrier of ( R5 + R6 )) by L327 , L1;
L329: R10 in R4 by L325 , L70;
L330: C31 in { ( R11 + R12 ) where R11 is (Element of R2) , R12 is (Element of R2) : (R11 in R4 & R12 in R5) } by L329 , L324;
L331: C31 in (the carrier of ( R4 + R5 )) by L330 , L1;
L332: C31 in ( (the carrier of ( R4 + R5 )) /\ (the carrier of ( R5 + R6 )) ) by L331 , L328 , XBOOLE_0:def 4;
thus L333: thesis by L332 , L36;
end;
theorem
L334: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (for R6 being (Subspace of R2) holds ( R5 + ( R4 /\ R6 ) ) is (Subspace of ( ( R4 + R5 ) /\ ( R5 + R6 ) ))))))) by L321 , VECTSP_4:27;
L335: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (for R6 being (Subspace of R2) holds (R4 is (Subspace of R5) implies (the carrier of ( R5 + ( R4 /\ R6 ) )) = (the carrier of ( ( R4 + R5 ) /\ ( R5 + R6 ) ))))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
let R6 being (Subspace of R2);
reconsider D31 = (the carrier of R5) as (Subset of R2) by VECTSP_4:def 2;
L336: D31 is  linearly-closed by VECTSP_4:33;
assume L337: R4 is (Subspace of R5);
L338: (the carrier of R4) c= (the carrier of R5) by L337 , VECTSP_4:def 2;
thus L339: (the carrier of ( R5 + ( R4 /\ R6 ) )) c= (the carrier of ( ( R4 + R5 ) /\ ( R5 + R6 ) )) by L321;
let C32 being set;
assume L340: C32 in (the carrier of ( ( R4 + R5 ) /\ ( R5 + R6 ) ));
L341: C32 in ( (the carrier of ( R4 + R5 )) /\ (the carrier of ( R5 + R6 )) ) by L340 , L36;
L342: C32 in (the carrier of ( R4 + R5 )) by L341 , XBOOLE_0:def 4;
L343: C32 in { ( R8 + R9 ) where R8 is (Element of R2) , R9 is (Element of R2) : (R8 in R4 & R9 in R5) } by L342 , L1;
consider R8 being (Element of R2), R9 being (Element of R2) such that L344: C32 = ( R8 + R9 ) and L345: (R8 in R4 & R9 in R5) by L343;
L346: (R8 in (the carrier of R4) & R9 in (the carrier of R5)) by L345 , STRUCT_0:def 5;
L347: ( R8 + R9 ) in D31 by L346 , L338 , L336 , VECTSP_4:def 1;
L348: ( R8 + R9 ) in R5 by L347 , STRUCT_0:def 5;
L349: (( 0. R2 ) in ( R4 /\ R6 ) & ( ( R8 + R9 ) + ( 0. R2 ) ) = ( R8 + R9 )) by RLVECT_1:4 , VECTSP_4:17;
L350: C32 in { ( R7 + R10 ) where R7 is (Element of R2) , R10 is (Element of R2) : (R7 in R5 & R10 in ( R4 /\ R6 )) } by L349 , L344 , L348;
thus L351: thesis by L350 , L1;
end;
theorem
L352: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (for R6 being (Subspace of R2) holds (R4 is (Subspace of R5) implies ( R5 + ( R4 /\ R6 ) ) = ( ( R4 + R5 ) /\ ( R5 + R6 ) ))))))) by L335 , VECTSP_4:29;
theorem
L353: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R5 being (Subspace of R2) holds (for R6 being (Subspace of R2) holds (for B21 being  strict (Subspace of R2) holds (B21 is (Subspace of R6) implies ( B21 + ( R5 /\ R6 ) ) = ( ( B21 + R5 ) /\ R6 )))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R5 being (Subspace of R2);
let R6 being (Subspace of R2);
let C33 being  strict (Subspace of R2);
assume L354: C33 is (Subspace of R6);
thus L355: ( ( C33 + R5 ) /\ R6 ) = ( ( C33 /\ R6 ) + ( R6 /\ R5 ) ) by L354 , L298 , VECTSP_4:29
.= ( C33 + ( R5 /\ R6 ) ) by L354 , L215;
end;
theorem
L356: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for B22 , B23 being  strict (Subspace of R2) holds (( B22 + B23 ) = B23 iff ( B22 /\ B23 ) = B22))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let C34 , C35 being  strict (Subspace of R2);
L357: (( C34 + C35 ) = C35 iff C34 is (Subspace of C35)) by L139;
thus L358: thesis by L357 , L215;
end;
theorem
L359: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for B24 , B25 being  strict (Subspace of R2) holds (R4 is (Subspace of B24) implies ( R4 + B25 ) is (Subspace of ( B24 + B25 )))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let C36 , C37 being  strict (Subspace of R2);
assume L360: R4 is (Subspace of C36);
L361: ( ( R4 + C37 ) + ( C36 + C37 ) ) = ( ( R4 + C37 ) + ( C37 + C36 ) ) by L24
.= ( ( ( R4 + C37 ) + C37 ) + C36 ) by L99
.= ( ( R4 + ( C37 + C37 ) ) + C36 ) by L99
.= ( ( R4 + C37 ) + C36 ) by L81
.= ( R4 + ( C37 + C36 ) ) by L99
.= ( R4 + ( C36 + C37 ) ) by L24
.= ( ( R4 + C36 ) + C37 ) by L99
.= ( C36 + C37 ) by L360 , L139;
thus L362: thesis by L361 , L139;
end;
theorem
L363: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (for R6 being (Subspace of R2) holds (R4 is (Subspace of R5) implies R4 is (Subspace of ( R5 + R6 ))))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
let R6 being (Subspace of R2);
assume L364: R4 is (Subspace of R5);
L365: R5 is (Subspace of ( R5 + R6 )) by L133;
thus L366: thesis by L365 , L364 , VECTSP_4:26;
end;
theorem
L367: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (for R6 being (Subspace of R2) holds ((R4 is (Subspace of R6) & R5 is (Subspace of R6)) implies ( R4 + R5 ) is (Subspace of R6)))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
let R6 being (Subspace of R2);
assume L368: (R4 is (Subspace of R6) & R5 is (Subspace of R6));
L369:
now
let R10 being (Element of R2);
assume L370: R10 in ( R4 + R5 );
consider R11 being (Element of R2), R12 being (Element of R2) such that L371: (R11 in R4 & R12 in R5) and L372: R10 = ( R11 + R12 ) by L370 , L48;
L373: (R11 in R6 & R12 in R6) by L368 , L371 , VECTSP_4:8;
thus L374: R10 in R6 by L373 , L372 , VECTSP_4:20;
end;
thus L375: thesis by L369 , VECTSP_4:28;
end;
theorem
L376: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds ((ex R3 being (Subspace of R2) st (the carrier of R3) = ( (the carrier of R4) \/ (the carrier of R5) )) iff (R4 is (Subspace of R5) or R5 is (Subspace of R4)))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
set D32 = (the carrier of R4);
set D33 = (the carrier of R5);
thus L377: ((ex R3 being (Subspace of R2) st (the carrier of R3) = ( (the carrier of R4) \/ (the carrier of R5) )) implies (R4 is (Subspace of R5) or R5 is (Subspace of R4)))
proof
given R3 being (Subspace of R2) such that
L378: (the carrier of R3) = ( (the carrier of R4) \/ (the carrier of R5) );

set D34 = (the carrier of R3);
assume that
L379: (not R4 is (Subspace of R5))
and
L380: (not R5 is (Subspace of R4));
L381: (not D33 c= D32) by L380 , VECTSP_4:27;
consider C38 being set such that L382: C38 in D33 and L383: (not C38 in D32) by L381 , TARSKI:def 3;
reconsider D35 = C38 as (Element of D33) by L382;
reconsider D36 = D35 as (Element of R2) by VECTSP_4:10;
reconsider D37 = D34 as (Subset of R2) by VECTSP_4:def 2;
L384: D37 is  linearly-closed by VECTSP_4:33;
L385: (not D32 c= D33) by L379 , VECTSP_4:27;
consider C39 being set such that L386: C39 in D32 and L387: (not C39 in D33) by L385 , TARSKI:def 3;
reconsider D38 = C39 as (Element of D32) by L386;
reconsider D39 = D38 as (Element of R2) by VECTSP_4:10;
L388:
now
reconsider D40 = D33 as (Subset of R2) by VECTSP_4:def 2;
L389: D40 is  linearly-closed by VECTSP_4:33;
assume L390: ( D39 + D36 ) in D33;
L391: ( ( D39 + D36 ) - D36 ) in D33 by L390 , L389 , VECTSP_4:3;
L392: ( D39 + ( D36 - D36 ) ) in D33 by L391 , RLVECT_1:def 3;
L393: ( D39 + ( 0. R2 ) ) in D33 by L392 , VECTSP_1:19;
thus L394: contradiction by L393 , L387 , RLVECT_1:4;
end;
L395:
now
reconsider D41 = D32 as (Subset of R2) by VECTSP_4:def 2;
L396: D41 is  linearly-closed by VECTSP_4:33;
assume L397: ( D39 + D36 ) in D32;
L398: ( ( D36 + D39 ) - D39 ) in D32 by L397 , L396 , VECTSP_4:3;
L399: ( D36 + ( D39 - D39 ) ) in D32 by L398 , RLVECT_1:def 3;
L400: ( D36 + ( 0. R2 ) ) in D32 by L399 , VECTSP_1:19;
thus L401: contradiction by L400 , L383 , RLVECT_1:4;
end;
L402: (D39 in D34 & D36 in D34) by L378 , XBOOLE_0:def 3;
L403: ( D39 + D36 ) in D34 by L402 , L384 , VECTSP_4:def 1;
thus L404: thesis by L403 , L378 , L395 , L388 , XBOOLE_0:def 3;
end;

L405:
now
assume L406: R4 is (Subspace of R5);
L407: D32 c= D33 by L406 , VECTSP_4:def 2;
L408: ( D32 \/ D33 ) = D33 by L407 , XBOOLE_1:12;
thus L409: thesis by L408;
end;
L410:
now
assume L411: R5 is (Subspace of R4);
L412: D33 c= D32 by L411 , VECTSP_4:def 2;
L413: ( D32 \/ D33 ) = D32 by L412 , XBOOLE_1:12;
thus L414: thesis by L413;
end;
assume L415: (R4 is (Subspace of R5) or R5 is (Subspace of R4));
thus L416: thesis by L415 , L405 , L410;
end;
definition
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
func Subspaces R2 -> set means
:L417: (for R15 being set holds (R15 in it iff (ex B26 being  strict (Subspace of R2) st B26 = R15)));
existence
proof
defpred S1[ set , set ] means (ex B27 being  strict (Subspace of R2) st ($2 = B27 & $1 = (the carrier of B27)));
defpred S2[ set ] means (ex B28 being  strict (Subspace of R2) st $1 = (the carrier of B28));
consider C40 being set such that L418: (for R15 being set holds (R15 in C40 iff (R15 in ( bool (the carrier of R2) ) & S2[ R15 ]))) from XBOOLE_0:sch 1;
L419: (for R15 being set holds (for R17 being set holds (for R18 being set holds ((S1[ R15 , R17 ] & S1[ R15 , R18 ]) implies R17 = R18)))) by VECTSP_4:29;
consider C41 being Function such that L420: (for R15 being set holds (for R16 being set holds ([ R15 , R16 ] in C41 iff (R15 in C40 & S1[ R15 , R16 ])))) from FUNCT_1:sch 1(L419);
L421: (for R15 being set holds (R15 in C40 iff (ex R16 being set st [ R15 , R16 ] in C41)))
proof
let R15 being set;
thus L422: (R15 in C40 implies (ex R16 being set st [ R15 , R16 ] in C41))
proof
assume L423: R15 in C40;
consider C42 being  strict (Subspace of R2) such that L424: R15 = (the carrier of C42) by L423 , L418;
reconsider D42 = C42 as set;
take D42;
thus L425: thesis by L420 , L423 , L424;
end;

given R16 being set such that
L426: [ R15 , R16 ] in C41;

thus L427: thesis by L420 , L426;
end;
L428: C40 = ( dom C41 ) by L421 , XTUPLE_0:def 12;
L429: (for R16 being set holds (R16 in ( rng C41 ) iff (ex B29 being  strict (Subspace of R2) st R16 = B29)))
proof
let R16 being set;
thus L430: (R16 in ( rng C41 ) implies (ex B30 being  strict (Subspace of R2) st R16 = B30))
proof
assume L431: R16 in ( rng C41 );
consider R15 being set such that L432: (R15 in ( dom C41 ) & R16 = ( C41 . R15 )) by L431 , FUNCT_1:def 3;
L433: [ R15 , R16 ] in C41 by L432 , FUNCT_1:def 2;
L434: (ex B31 being  strict (Subspace of R2) st (R16 = B31 & R15 = (the carrier of B31))) by L433 , L420;
thus L435: thesis by L434;
end;

given C43 being  strict (Subspace of R2) such that
L436: R16 = C43;

reconsider D43 = R16 as (Subspace of R2) by L436;
reconsider D44 = (the carrier of D43) as set;
L437: (the carrier of D43) c= (the carrier of R2) by VECTSP_4:def 2;
L438: D44 in ( dom C41 ) by L437 , L418 , L428 , L436;
L439: [ D44 , R16 ] in C41 by L438 , L420 , L428 , L436;
L440: R16 = ( C41 . D44 ) by L439 , L438 , FUNCT_1:def 2;
thus L441: thesis by L440 , L438 , FUNCT_1:def 3;
end;
thus L442: thesis by L429;
end;
uniqueness
proof
let C44 , C45 being set;
assume L443: (for R15 being set holds (R15 in C44 iff (ex B32 being  strict (Subspace of R2) st R15 = B32)));
assume L444: (for R15 being set holds (R15 in C45 iff (ex B33 being  strict (Subspace of R2) st R15 = B33)));
L445:
now
let R15 being set;
thus L446: (R15 in C44 implies R15 in C45)
proof
assume L447: R15 in C44;
L448: (ex B34 being  strict (Subspace of R2) st R15 = B34) by L447 , L443;
thus L449: thesis by L448 , L444;
end;

assume L450: R15 in C45;
L451: (ex B35 being  strict (Subspace of R2) st R15 = B35) by L450 , L444;
thus L452: R15 in C44 by L451 , L443;
end;
thus L453: thesis by L445 , TARSKI:1;
end;
end;
registration
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
cluster ( Subspaces R2 ) -> non  empty;
coherence
proof
set D45 = the  strict (Subspace of R2);
L455: D45 in ( Subspaces R2 ) by L417;
thus L456: thesis by L455;
end;
end;
theorem
L458: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for B36 being  strict  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds B36 in ( Subspaces B36 )))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let C46 being  strict  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
L459: (ex B37 being  strict (Subspace of C46) st (the carrier of ( (Omega). C46 )) = (the carrier of B37));
thus L460: thesis by L459 , L417;
end;
definition
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
pred R2 is_the_direct_sum_of R4 , R5
means
:L461: (( the VectSpStr of R2 ) = ( R4 + R5 ) & ( R4 /\ R5 ) = ( (0). R2 ))
;end;
L463: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R4 being (Subspace of R2) holds (for R5 being (Subspace of R2) holds (( R4 + R5 ) = ( the VectSpStr of R2 ) iff (for B38 being (Element of R2) holds (ex B39 , B40 being (Element of R2) st (B39 in R4 & B40 in R5 & B38 = ( B39 + B40 )))))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R4 being (Subspace of R2);
let R5 being (Subspace of R2);
thus L464: (( R4 + R5 ) = ( the VectSpStr of R2 ) implies (for B41 being (Element of R2) holds (ex B42 , B43 being (Element of R2) st (B42 in R4 & B43 in R5 & B41 = ( B42 + B43 )))))
proof
assume L465: ( R4 + R5 ) = ( the VectSpStr of R2 );
let C47 being (Element of R2);
L466: C47 in ( (Omega). R2 ) by RLVECT_1:1;
thus L467: thesis by L466 , L465 , L48;
end;

assume L468: (for B44 being (Element of R2) holds (ex B45 , B46 being (Element of R2) st (B45 in R4 & B46 in R5 & B44 = ( B45 + B46 ))));
L469:
now
thus L470: ( R4 + R5 ) is (Subspace of ( (Omega). R2 )) by L184;
let C48 being (Element of R2);
L471: (ex B47 , B48 being (Element of R2) st (B47 in R4 & B48 in R5 & C48 = ( B47 + B48 ))) by L468;
thus L472: C48 in ( R4 + R5 ) by L471 , L48;
end;
thus L473: thesis by L469 , VECTSP_4:32;
end;
definition
let R19 being Field;
let R20 being (VectSp of R19);
let R21 being (Subspace of R20);
mode Linear_Compl of R21
 -> (Subspace of R20)
means :L474: R20 is_the_direct_sum_of it , R21;
existence
proof
defpred S3[ set , set ] means (ex B49 , B50 being  strict (Subspace of R20) st ($1 = B49 & $2 = B50 & B49 is (Subspace of B50)));
defpred S4[ set ] means (ex B51 being  strict (Subspace of R20) st ($1 = B51 & ( R21 /\ B51 ) = ( (0). R20 )));
consider R13 being set such that L475: (for R15 being set holds (R15 in R13 iff (R15 in ( Subspaces R20 ) & S4[ R15 ]))) from XBOOLE_0:sch 1;
L476: (( R21 /\ ( (0). R20 ) ) = ( (0). R20 ) & ( (0). R20 ) in ( Subspaces R20 )) by L417 , L240;
reconsider D46 = R13 as non  empty set by L476 , L475;
consider C49 being (Relation of D46) such that L477: (for B52 , B53 being (Element of D46) holds ([ B52 , B53 ] in C49 iff S3[ B52 , B53 ])) from RELSET_1:sch 2;
defpred S5[ set , set ] means [ $1 , $2 ] in C49;
L478:
now
let C50 , C51 being (Element of D46);
assume L479: (S5[ C50 , C51 ] & S5[ C51 , C50 ]);
L480: ((ex B54 , B55 being  strict (Subspace of R20) st (C50 = B54 & C51 = B55 & B54 is (Subspace of B55))) & (ex B56 , B57 being  strict (Subspace of R20) st (C51 = B56 & C50 = B57 & B56 is (Subspace of B57)))) by L479 , L477;
thus L481: C50 = C51 by L480 , VECTSP_4:25;
end;
L482: (for R14 being set holds ((R14 c= D46 & (for B58 , B59 being (Element of D46) holds ((B58 in R14 & B59 in R14) implies (S5[ B58 , B59 ] or S5[ B59 , B58 ])))) implies (ex B60 being (Element of D46) st (for B61 being (Element of D46) holds (B61 in R14 implies S5[ B61 , B60 ])))))
proof
let R14 being set;
assume that
L483: R14 c= D46
and
L484: (for B62 , B63 being (Element of D46) holds ((B62 in R14 & B63 in R14) implies ([ B62 , B63 ] in C49 or [ B63 , B62 ] in C49)));
L485:
now
per cases ;
suppose L486: R14 = ( {} );

set D47 = the (Element of D46);
take D48 = D47;
let C52 being (Element of D46);
assume L487: C52 in R14;
thus L488: [ C52 , D48 ] in C49 by L487 , L486;
end;
suppose L489: R14 <> ( {} );

defpred S6[ set , set ] means (ex B64 being  strict (Subspace of R20) st ($1 = B64 & $2 = (the carrier of B64)));
L490: (for R15 being set holds (R15 in R14 implies (ex R16 being set st S6[ R15 , R16 ])))
proof
let R15 being set;
assume L491: R15 in R14;
consider C53 being  strict (Subspace of R20) such that L492: R15 = C53 and L493: ( R21 /\ C53 ) = ( (0). R20 ) by L491 , L475 , L483;
reconsider D49 = (the carrier of C53) as set;
take D49;
take C53;
thus L494: thesis by L492;
end;
consider C54 being Function such that L495: ( dom C54 ) = R14 and L496: (for R15 being set holds (R15 in R14 implies S6[ R15 , ( C54 . R15 ) ])) from CLASSES1:sch 1(L490);
set D50 = ( union ( rng C54 ) );
L497:
now
let R15 being set;
assume L498: R15 in D50;
consider C55 being set such that L499: R15 in C55 and L500: C55 in ( rng C54 ) by L498 , TARSKI:def 4;
consider R16 being set such that L501: R16 in ( dom C54 ) and L502: ( C54 . R16 ) = C55 by L500 , FUNCT_1:def 3;
consider C56 being  strict (Subspace of R20) such that L503: R16 = C56 and L504: ( C54 . R16 ) = (the carrier of C56) by L495 , L496 , L501;
L505: (the carrier of C56) c= (the carrier of R20) by VECTSP_4:def 2;
thus L506: R15 in (the carrier of R20) by L505 , L499 , L502 , L504;
end;
reconsider D51 = D50 as (Subset of R20) by L497 , TARSKI:def 3;
L507: D51 is  linearly-closed
proof
thus L508: (for B65 , B66 being (Element of R20) holds ((B65 in D51 & B66 in D51) implies ( B65 + B66 ) in D51))
proof
let C57 , C58 being (Element of R20);
assume that
L509: C57 in D51
and
L510: C58 in D51;
consider C59 being set such that L511: C57 in C59 and L512: C59 in ( rng C54 ) by L509 , TARSKI:def 4;
consider R17 being set such that L513: R17 in ( dom C54 ) and L514: ( C54 . R17 ) = C59 by L512 , FUNCT_1:def 3;
consider C60 being set such that L515: C58 in C60 and L516: C60 in ( rng C54 ) by L510 , TARSKI:def 4;
consider R18 being set such that L517: R18 in ( dom C54 ) and L518: ( C54 . R18 ) = C60 by L516 , FUNCT_1:def 3;
consider C61 being  strict (Subspace of R20) such that L519: R17 = C61 and L520: ( C54 . R17 ) = (the carrier of C61) by L495 , L496 , L513;
consider C62 being  strict (Subspace of R20) such that L521: R18 = C62 and L522: ( C54 . R18 ) = (the carrier of C62) by L495 , L496 , L517;
reconsider D52 = R17 , D53 = R18 as (Element of D46) by L483 , L495 , L513 , L517;
L523:
now
per cases  by L484 , L495 , L513 , L517;
suppose L524: [ D52 , D53 ] in C49;

L525: (ex B67 , B68 being  strict (Subspace of R20) st (D52 = B67 & D53 = B68 & B67 is (Subspace of B68))) by L524 , L477;
L526: (the carrier of C61) c= (the carrier of C62) by L525 , L519 , L521 , VECTSP_4:def 2;
L527: C57 in C62 by L526 , L511 , L514 , L520 , STRUCT_0:def 5;
L528: C58 in C62 by L515 , L518 , L522 , STRUCT_0:def 5;
L529: ( C57 + C58 ) in C62 by L528 , L527 , VECTSP_4:20;
L530: ( C57 + C58 ) in (the carrier of C62) by L529 , STRUCT_0:def 5;
L531: ( C54 . D53 ) in ( rng C54 ) by L517 , FUNCT_1:def 3;
thus L532: thesis by L531 , L522 , L530 , TARSKI:def 4;
end;
suppose L533: [ D53 , D52 ] in C49;

L534: (ex B69 , B70 being  strict (Subspace of R20) st (D53 = B69 & D52 = B70 & B69 is (Subspace of B70))) by L533 , L477;
L535: (the carrier of C62) c= (the carrier of C61) by L534 , L519 , L521 , VECTSP_4:def 2;
L536: C58 in C61 by L535 , L515 , L518 , L522 , STRUCT_0:def 5;
L537: C57 in C61 by L511 , L514 , L520 , STRUCT_0:def 5;
L538: ( C57 + C58 ) in C61 by L537 , L536 , VECTSP_4:20;
L539: ( C57 + C58 ) in (the carrier of C61) by L538 , STRUCT_0:def 5;
L540: ( C54 . D52 ) in ( rng C54 ) by L513 , FUNCT_1:def 3;
thus L541: thesis by L540 , L520 , L539 , TARSKI:def 4;
end;
end;
thus L543: thesis by L523;
end;

let C63 being (Element of R19);
let C64 being (Element of R20);
assume L544: C64 in D51;
consider C65 being set such that L545: C64 in C65 and L546: C65 in ( rng C54 ) by L544 , TARSKI:def 4;
consider R17 being set such that L547: R17 in ( dom C54 ) and L548: ( C54 . R17 ) = C65 by L546 , FUNCT_1:def 3;
consider C66 being  strict (Subspace of R20) such that L549: R17 = C66 and L550: ( C54 . R17 ) = (the carrier of C66) by L495 , L496 , L547;
L551: C64 in C66 by L545 , L548 , L550 , STRUCT_0:def 5;
L552: ( C63 * C64 ) in C66 by L551 , VECTSP_4:21;
L553: ( C63 * C64 ) in (the carrier of C66) by L552 , STRUCT_0:def 5;
L554: ( C54 . R17 ) in ( rng C54 ) by L547 , FUNCT_1:def 3;
thus L555: thesis by L554 , L550 , L553 , TARSKI:def 4;
end;
set D54 = the (Element of ( rng C54 ));
L556: ( rng C54 ) <> ( {} ) by L489 , L495 , RELAT_1:42;
consider C67 being set such that L557: C67 in ( dom C54 ) and L558: ( C54 . C67 ) = D54 by L556 , FUNCT_1:def 3;
L559: (ex B71 being  strict (Subspace of R20) st (C67 = B71 & ( C54 . C67 ) = (the carrier of B71))) by L495 , L496 , L557;
L560: D51 <> ( {} ) by L559 , L556 , L558 , ORDERS_1:6;
consider C68 being  strict (Subspace of R20) such that L561: D51 = (the carrier of C68) by L560 , L507 , VECTSP_4:34;
L562:
now
let C69 being (Element of R20);
thus L563: (C69 in ( R21 /\ C68 ) implies C69 in ( (0). R20 ))
proof
assume L564: C69 in ( R21 /\ C68 );
L565: C69 in R21 by L564 , L70;
L566: C69 in C68 by L564 , L70;
L567: C69 in D51 by L566 , L561 , STRUCT_0:def 5;
consider C70 being set such that L568: C69 in C70 and L569: C70 in ( rng C54 ) by L567 , TARSKI:def 4;
consider R17 being set such that L570: R17 in ( dom C54 ) and L571: ( C54 . R17 ) = C70 by L569 , FUNCT_1:def 3;
L572: (ex B72 being  strict (Subspace of R20) st (R17 = B72 & ( R21 /\ B72 ) = ( (0). R20 ))) by L475 , L483 , L495 , L570;
consider C71 being  strict (Subspace of R20) such that L573: R17 = C71 and L574: ( C54 . R17 ) = (the carrier of C71) by L495 , L496 , L570;
L575: C69 in C71 by L568 , L571 , L574 , STRUCT_0:def 5;
thus L576: thesis by L575 , L573 , L565 , L572 , L70;
end;

assume L577: C69 in ( (0). R20 );
L578: C69 in (the carrier of ( (0). R20 )) by L577 , STRUCT_0:def 5;
L579: C69 in { ( 0. R20 ) } by L578 , VECTSP_4:def 3;
L580: C69 = ( 0. R20 ) by L579 , TARSKI:def 1;
thus L581: C69 in ( R21 /\ C68 ) by L580 , VECTSP_4:17;
end;
L582: ( R21 /\ C68 ) = ( (0). R20 ) by L562 , VECTSP_4:30;
L583: C68 in ( Subspaces R20 ) by L417;
reconsider D55 = C68 as (Element of D46) by L583 , L475 , L582;
take D56 = D55;
let C72 being (Element of D46);
assume L584: C72 in R14;
consider C73 being  strict (Subspace of R20) such that L585: C72 = C73 and L586: ( C54 . C72 ) = (the carrier of C73) by L584 , L496;
L587:
now
let C74 being (Element of R20);
assume L588: C74 in C73;
L589: C74 in (the carrier of C73) by L588 , STRUCT_0:def 5;
L590: (the carrier of C73) in ( rng C54 ) by L495 , L584 , L586 , FUNCT_1:def 3;
L591: C74 in D51 by L590 , L589 , TARSKI:def 4;
thus L592: C74 in C68 by L591 , L561 , STRUCT_0:def 5;
end;
L593: C73 is (Subspace of C68) by L587 , VECTSP_4:28;
thus L594: [ C72 , D56 ] in C49 by L593 , L477 , L585;
end;
end;
thus L596: thesis by L485;
end;
L597:
now
let C75 , C76 , C77 being (Element of D46);
assume that
L598: S5[ C75 , C76 ]
and
L599: S5[ C76 , C77 ];
consider C78 , C79 being  strict (Subspace of R20) such that L600: C75 = C78 and L601: (C76 = C79 & C78 is (Subspace of C79)) by L477 , L598;
consider C80 , C81 being  strict (Subspace of R20) such that L602: C76 = C80 and L603: C77 = C81 and L604: C80 is (Subspace of C81) by L477 , L599;
L605: C78 is (Subspace of C81) by L601 , L602 , L604 , VECTSP_4:26;
thus L606: S5[ C75 , C77 ] by L605 , L477 , L600 , L603;
end;
L607:
now
let C82 being (Element of D46);
consider C83 being  strict (Subspace of R20) such that L608: C82 = C83 and L609: ( R21 /\ C83 ) = ( (0). R20 ) by L475;
L610: C83 is (Subspace of C83) by VECTSP_4:24;
thus L611: S5[ C82 , C82 ] by L610 , L477 , L608;
end;
consider C84 being (Element of D46) such that L612: (for B73 being (Element of D46) holds (C84 <> B73 implies (not S5[ C84 , B73 ]))) from ORDERS_1:sch 1(L607 , L478 , L597 , L482);
consider C85 being  strict (Subspace of R20) such that L613: C84 = C85 and L614: ( R21 /\ C85 ) = ( (0). R20 ) by L475;
take C85;
thus L615: ( the VectSpStr of R20 ) = ( C85 + R21 )
proof
assume L616: (not thesis);
consider C86 being (Element of R20) such that L617: (for B74 , B75 being (Element of R20) holds ((not B74 in C85) or (not B75 in R21) or C86 <> ( B74 + B75 ))) by L616 , L463;
L618: (C86 = ( ( 0. R20 ) + C86 ) & ( 0. R20 ) in R21) by RLVECT_1:4 , VECTSP_4:17;
L619: (not C86 in C85) by L618 , L617;
set D57 = { ( B76 * C86 ) where B76 is (Element of R19) : (not contradiction) };
L620: ( ( 1_ R19 ) * C86 ) in D57;
L621:
now
let R15 being set;
assume L622: R15 in D57;
L623: (ex B77 being (Element of R19) st R15 = ( B77 * C86 )) by L622;
thus L624: R15 in (the carrier of R20) by L623;
end;
reconsider D58 = D57 as (Subset of R20) by L621 , TARSKI:def 3;
L625: D58 is  linearly-closed
proof
thus L626: (for B78 , B79 being (Element of R20) holds ((B78 in D58 & B79 in D58) implies ( B78 + B79 ) in D58))
proof
let C87 , C88 being (Element of R20);
assume L627: C87 in D58;
consider C89 being (Element of R19) such that L628: C87 = ( C89 * C86 ) by L627;
assume L629: C88 in D58;
consider C90 being (Element of R19) such that L630: C88 = ( C90 * C86 ) by L629;
L631: ( C87 + C88 ) = ( ( C89 + C90 ) * C86 ) by L628 , L630 , VECTSP_1:def 15;
thus L632: thesis by L631;
end;

let C91 being (Element of R19);
let C92 being (Element of R20);
assume L633: C92 in D58;
consider C93 being (Element of R19) such that L634: C92 = ( C93 * C86 ) by L633;
L635: ( C91 * C92 ) = ( ( C91 * C93 ) * C86 ) by L634 , VECTSP_1:def 16;
thus L636: thesis by L635;
end;
consider C94 being  strict (Subspace of R20) such that L637: (the carrier of C94) = D58 by L625 , L620 , VECTSP_4:34;
L638: (not C86 in ( C85 + R21 )) by L617 , L48;
L639:
now
let C95 being (Element of R20);
thus L640: (C95 in ( C94 /\ ( R21 + C85 ) ) implies C95 in ( (0). R20 ))
proof
assume L641: C95 in ( C94 /\ ( R21 + C85 ) );
L642: C95 in C94 by L641 , L70;
L643: C95 in D58 by L642 , L637 , STRUCT_0:def 5;
consider C96 being (Element of R19) such that L644: C95 = ( C96 * C86 ) by L643;
L645:
now
L646: C95 in ( R21 + C85 ) by L641 , L70;
L647: ( ( C96 " ) * ( C96 * C86 ) ) in ( R21 + C85 ) by L646 , L644 , VECTSP_4:21;
L648: ( ( ( C96 " ) * C96 ) * C86 ) in ( R21 + C85 ) by L647 , VECTSP_1:def 16;
assume L649: C96 <> ( 0. R19 );
L650: ( ( 1_ R19 ) * C86 ) in ( R21 + C85 ) by L649 , L648 , VECTSP_1:def 10;
L651: ( ( 1_ R19 ) * C86 ) in ( C85 + R21 ) by L650 , L24;
thus L652: contradiction by L651 , L638 , VECTSP_1:def 17;
end;
L653: C95 = ( 0. R20 ) by L645 , L644 , VECTSP_1:14;
thus L654: thesis by L653 , VECTSP_4:17;
end;

assume L655: C95 in ( (0). R20 );
L656: C95 in (the carrier of ( (0). R20 )) by L655 , STRUCT_0:def 5;
L657: C95 in { ( 0. R20 ) } by L656 , VECTSP_4:def 3;
L658: C95 = ( 0. R20 ) by L657 , TARSKI:def 1;
thus L659: C95 in ( C94 /\ ( R21 + C85 ) ) by L658 , VECTSP_4:17;
end;
L660: ( C94 /\ ( R21 + C85 ) ) = ( (0). R20 ) by L639 , VECTSP_4:30;
L661:
now
let C97 being (Element of R20);
thus L662: (C97 in ( ( C94 + C85 ) /\ R21 ) implies C97 in ( (0). R20 ))
proof
assume L663: C97 in ( ( C94 + C85 ) /\ R21 );
L664: C97 in ( C94 + C85 ) by L663 , L70;
consider C98 , C99 being (Element of R20) such that L665: C98 in C94 and L666: C99 in C85 and L667: C97 = ( C98 + C99 ) by L664 , L48;
L668: C97 in R21 by L663 , L70;
L669: C97 in ( R21 + C85 ) by L668 , L59;
L670: (C98 = ( C97 - C99 ) & C99 in ( R21 + C85 )) by L666 , L667 , L59 , VECTSP_2:2;
L671: C98 in ( R21 + C85 ) by L670 , L669 , VECTSP_4:23;
L672: C98 in ( C94 /\ ( R21 + C85 ) ) by L671 , L665 , L70;
L673: C98 in (the carrier of ( (0). R20 )) by L672 , L660 , STRUCT_0:def 5;
L674: C98 in { ( 0. R20 ) } by L673 , VECTSP_4:def 3;
L675: C98 = ( 0. R20 ) by L674 , TARSKI:def 1;
L676: C99 = C97 by L675 , L667 , RLVECT_1:4;
thus L677: thesis by L676 , L614 , L666 , L668 , L70;
end;

assume L678: C97 in ( (0). R20 );
L679: C97 in (the carrier of ( (0). R20 )) by L678 , STRUCT_0:def 5;
L680: C97 in { ( 0. R20 ) } by L679 , VECTSP_4:def 3;
L681: C97 = ( 0. R20 ) by L680 , TARSKI:def 1;
thus L682: C97 in ( ( C94 + C85 ) /\ R21 ) by L681 , VECTSP_4:17;
end;
L683: ( R21 /\ ( C94 + C85 ) ) = ( (0). R20 ) by L661 , VECTSP_4:30;
L684: ( C94 + C85 ) in ( Subspaces R20 ) by L417;
reconsider D59 = ( C94 + C85 ) as (Element of D46) by L684 , L475 , L683;
L685: C85 is (Subspace of ( C94 + C85 )) by L133;
L686: [ C84 , D59 ] in C49 by L685 , L477 , L613;
L687: C86 in D58 by L620 , VECTSP_1:def 17;
L688: C86 in C94 by L687 , L637 , STRUCT_0:def 5;
L689: ( C94 + C85 ) <> C85 by L688 , L619 , L59;
thus L690: contradiction by L689 , L612 , L613 , L686;
end;

thus L691: thesis by L614;
end;
end;
L693: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for B80 , B81 being (Subspace of R2) holds (R2 is_the_direct_sum_of B80 , B81 implies R2 is_the_direct_sum_of B81 , B80))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let C100 , C101 being (Subspace of R2);
assume L694: R2 is_the_direct_sum_of C100 , C101;
L695: ( the VectSpStr of R2 ) = ( C100 + C101 ) by L694 , L461;
L696: ( the VectSpStr of R2 ) = ( C101 + C100 ) by L695 , L24;
L697: ( C101 /\ C100 ) = ( (0). R2 ) by L694 , L461;
thus L698: thesis by L697 , L696 , L461;
end;
theorem
L699: (for R19 being Field holds (for R20 being (VectSp of R19) holds (for R23 being (Subspace of R20) holds (for R24 being (Subspace of R20) holds (R20 is_the_direct_sum_of R23 , R24 implies R24 is (Linear_Compl of R23))))))
proof
let R19 being Field;
let R20 being (VectSp of R19);
let R23 being (Subspace of R20);
let R24 being (Subspace of R20);
assume L700: R20 is_the_direct_sum_of R23 , R24;
L701: R20 is_the_direct_sum_of R24 , R23 by L700 , L693;
thus L702: thesis by L701 , L474;
end;
theorem
L703: (for R19 being Field holds (for R20 being (VectSp of R19) holds (for R22 being (Subspace of R20) holds (for B82 being (Linear_Compl of R22) holds (R20 is_the_direct_sum_of B82 , R22 & R20 is_the_direct_sum_of R22 , B82)))))
proof
let R19 being Field;
let R20 being (VectSp of R19);
let R22 being (Subspace of R20);
let C102 being (Linear_Compl of R22);
thus L704: R20 is_the_direct_sum_of C102 , R22 by L474;
thus L705: thesis by L704 , L693;
end;
theorem
L706: (for R19 being Field holds (for R20 being (VectSp of R19) holds (for R22 being (Subspace of R20) holds (for B83 being (Linear_Compl of R22) holds (( R22 + B83 ) = ( the VectSpStr of R20 ) & ( B83 + R22 ) = ( the VectSpStr of R20 ))))))
proof
let R19 being Field;
let R20 being (VectSp of R19);
let R22 being (Subspace of R20);
let C103 being (Linear_Compl of R22);
L707: R20 is_the_direct_sum_of R22 , C103 by L703;
thus L708: ( R22 + C103 ) = ( the VectSpStr of R20 ) by L707 , L461;
thus L709: thesis by L708 , L24;
end;
theorem
L710: (for R19 being Field holds (for R20 being (VectSp of R19) holds (for R22 being (Subspace of R20) holds (for B84 being (Linear_Compl of R22) holds (( R22 /\ B84 ) = ( (0). R20 ) & ( B84 /\ R22 ) = ( (0). R20 ))))))
proof
let R19 being Field;
let R20 being (VectSp of R19);
let R22 being (Subspace of R20);
let C104 being (Linear_Compl of R22);
L711: R20 is_the_direct_sum_of R22 , C104 by L703;
thus L712: ( R22 /\ C104 ) = ( (0). R20 ) by L711 , L461;
thus L713: thesis by L711 , L461;
end;
theorem
L714: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R25 being (Subspace of R2) holds (for R26 being (Subspace of R2) holds (R2 is_the_direct_sum_of R25 , R26 implies R2 is_the_direct_sum_of R26 , R25))))) by L693;
theorem
L715: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (R2 is_the_direct_sum_of ( (0). R2 ) , ( (Omega). R2 ) & R2 is_the_direct_sum_of ( (Omega). R2 ) , ( (0). R2 ))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
L716: (( ( (0). R2 ) + ( (Omega). R2 ) ) = ( the VectSpStr of R2 ) & ( (0). R2 ) = ( ( (0). R2 ) /\ ( (Omega). R2 ) )) by L145 , L240;
thus L717: R2 is_the_direct_sum_of ( (0). R2 ) , ( (Omega). R2 ) by L716 , L461;
thus L718: thesis by L717 , L693;
end;
theorem
L719: (for R19 being Field holds (for R20 being (VectSp of R19) holds (for R27 being (Subspace of R20) holds (for B85 being (Linear_Compl of R27) holds R27 is (Linear_Compl of B85)))))
proof
let R19 being Field;
let R20 being (VectSp of R19);
let R27 being (Subspace of R20);
let C105 being (Linear_Compl of R27);
L720: R20 is_the_direct_sum_of C105 , R27 by L474;
L721: R20 is_the_direct_sum_of R27 , C105 by L720 , L693;
thus L722: thesis by L721 , L474;
end;
theorem
L723: (for R19 being Field holds (for R20 being (VectSp of R19) holds (( (0). R20 ) is (Linear_Compl of ( (Omega). R20 )) & ( (Omega). R20 ) is (Linear_Compl of ( (0). R20 )))))
proof
let R19 being Field;
let R20 being (VectSp of R19);
L724: (R20 is_the_direct_sum_of ( (0). R20 ) , ( (Omega). R20 ) & R20 is_the_direct_sum_of ( (Omega). R20 ) , ( (0). R20 )) by L715;
thus L725: thesis by L724 , L474;
end;
theorem
L726: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R28 being (Subspace of R2) holds (for R29 being (Subspace of R2) holds (for R34 being (Coset of R28) holds (for R35 being (Coset of R29) holds (R34 meets R35 implies ( R34 /\ R35 ) is (Coset of ( R28 /\ R29 )))))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R28 being (Subspace of R2);
let R29 being (Subspace of R2);
let R34 being (Coset of R28);
let R35 being (Coset of R29);
set D60 = the (Element of ( R34 /\ R35 ));
set D61 = ( R34 /\ R35 );
assume L727: ( R34 /\ R35 ) <> ( {} );
reconsider D62 = D60 as (Element of R2) by L727 , TARSKI:def 3;
L728: D62 in R35 by L727 , XBOOLE_0:def 4;
L729: R35 = ( D62 + R29 ) by L728 , VECTSP_4:77;
L730: D62 in R34 by L727 , XBOOLE_0:def 4;
L731: R34 = ( D62 + R28 ) by L730 , VECTSP_4:77;
L732: D61 is (Coset of ( R28 /\ R29 ))
proof
take D62;
thus L733: D61 c= ( D62 + ( R28 /\ R29 ) )
proof
let R15 being set;
assume L734: R15 in D61;
L735: R15 in R34 by L734 , XBOOLE_0:def 4;
consider R31 being (Element of R2) such that L736: R31 in R28 and L737: R15 = ( D62 + R31 ) by L735 , L731 , VECTSP_4:42;
L738: R15 in R35 by L734 , XBOOLE_0:def 4;
consider R32 being (Element of R2) such that L739: R32 in R29 and L740: R15 = ( D62 + R32 ) by L738 , L729 , VECTSP_4:42;
L741: R31 = R32 by L737 , L740 , RLVECT_1:8;
L742: R31 in ( R28 /\ R29 ) by L741 , L736 , L739 , L70;
thus L743: thesis by L742 , L737;
end;

let R15 being set;
assume L744: R15 in ( D62 + ( R28 /\ R29 ) );
consider R30 being (Element of R2) such that L745: R30 in ( R28 /\ R29 ) and L746: R15 = ( D62 + R30 ) by L744 , VECTSP_4:42;
L747: R30 in R29 by L745 , L70;
L748: R15 in { ( D62 + R32 ) where R32 is (Element of R2) : R32 in R29 } by L747 , L746;
L749: R30 in R28 by L745 , L70;
L750: R15 in { ( D62 + R31 ) where R31 is (Element of R2) : R31 in R28 } by L749 , L746;
thus L751: thesis by L750 , L731 , L729 , L748 , XBOOLE_0:def 4;
end;
thus L752: thesis by L732;
end;
theorem
L753: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R28 being (Subspace of R2) holds (for R29 being (Subspace of R2) holds (R2 is_the_direct_sum_of R28 , R29 iff (for B86 being (Coset of R28) holds (for B87 being (Coset of R29) holds (ex B88 being (Element of R2) st ( B86 /\ B87 ) = { B88 }))))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R28 being (Subspace of R2);
let R29 being (Subspace of R2);
set D63 = (the carrier of R28);
set D64 = (the carrier of R29);
L754: ( R28 + R29 ) is (Subspace of ( (Omega). R2 )) by L184;
thus L755: (R2 is_the_direct_sum_of R28 , R29 implies (for B89 being (Coset of R28) holds (for B90 being (Coset of R29) holds (ex B91 being (Element of R2) st ( B89 /\ B90 ) = { B91 }))))
proof
assume L756: R2 is_the_direct_sum_of R28 , R29;
L757: ( the VectSpStr of R2 ) = ( R28 + R29 ) by L756 , L461;
let C106 being (Coset of R28);
let C107 being (Coset of R29);
consider C108 being (Element of R2) such that L758: C106 = ( C108 + R28 ) by VECTSP_4:def 6;
L759: C108 in ( (Omega). R2 ) by RLVECT_1:1;
consider C109 , C110 being (Element of R2) such that L760: C109 in R28 and L761: C110 in R29 and L762: C108 = ( C109 + C110 ) by L759 , L757 , L48;
consider C111 being (Element of R2) such that L763: C107 = ( C111 + R29 ) by VECTSP_4:def 6;
L764: C111 in ( (Omega). R2 ) by RLVECT_1:1;
consider C112 , C113 being (Element of R2) such that L765: C112 in R28 and L766: C113 in R29 and L767: C111 = ( C112 + C113 ) by L764 , L757 , L48;
take D65 = ( C110 + C112 );
L768: { D65 } = ( C106 /\ C107 )
proof
thus L769: { D65 } c= ( C106 /\ C107 )
proof
let R15 being set;
assume L770: R15 in { D65 };
L771: R15 = D65 by L770 , TARSKI:def 1;
L772: C112 = ( C111 - C113 ) by L767 , VECTSP_2:2;
L773: C112 in C107 by L772 , L763 , L766 , VECTSP_4:62;
L774: C107 = ( C112 + R29 ) by L773 , VECTSP_4:77;
L775: R15 in C107 by L774 , L761 , L771;
L776: C110 = ( C108 - C109 ) by L762 , VECTSP_2:2;
L777: C110 in C106 by L776 , L758 , L760 , VECTSP_4:62;
L778: C106 = ( C110 + R28 ) by L777 , VECTSP_4:77;
L779: R15 in C106 by L778 , L765 , L771;
thus L780: thesis by L779 , L775 , XBOOLE_0:def 4;
end;

let R15 being set;
assume L781: R15 in ( C106 /\ C107 );
L782: C106 meets C107 by L781 , XBOOLE_0:4;
reconsider D66 = ( C106 /\ C107 ) as (Coset of ( R28 /\ R29 )) by L782 , L726;
L783: D65 in { D65 } by TARSKI:def 1;
L784: ( R28 /\ R29 ) = ( (0). R2 ) by L756 , L461;
L785: (ex B92 being (Element of R2) st D66 = { B92 }) by L784 , VECTSP_4:72;
thus L786: thesis by L785 , L769 , L781 , L783 , TARSKI:def 1;
end;
thus L787: thesis by L768;
end;

assume L788: (for B93 being (Coset of R28) holds (for B94 being (Coset of R29) holds (ex B95 being (Element of R2) st ( B93 /\ B94 ) = { B95 })));
L789: D64 is (Coset of R29) by VECTSP_4:73;
L790: (the carrier of R2) c= (the carrier of ( R28 + R29 ))
proof
let R15 being set;
assume L791: R15 in (the carrier of R2);
reconsider D67 = R15 as (Element of R2) by L791;
consider C114 being (Coset of R28) such that L792: D67 in C114 by VECTSP_4:68;
consider C115 being (Element of R2) such that L793: ( C114 /\ D64 ) = { C115 } by L789 , L788;
L794: C115 in { C115 } by TARSKI:def 1;
L795: C115 in C114 by L794 , L793 , XBOOLE_0:def 4;
consider C116 being (Element of R2) such that L796: C116 in R28 and L797: ( D67 - C116 ) = C115 by L795 , L792 , VECTSP_4:79;
L798: C115 in D64 by L793 , L794 , XBOOLE_0:def 4;
L799: C115 in R29 by L798 , STRUCT_0:def 5;
L800: D67 = ( C116 + C115 ) by L797 , VECTSP_2:2;
L801: R15 in ( R28 + R29 ) by L800 , L799 , L796 , L48;
thus L802: thesis by L801 , STRUCT_0:def 5;
end;
L803: D63 is (Coset of R28) by VECTSP_4:73;
consider C117 being (Element of R2) such that L804: ( D63 /\ D64 ) = { C117 } by L803 , L789 , L788;
L805: (the carrier of ( R28 + R29 )) c= (the carrier of R2) by VECTSP_4:def 2;
L806: (the carrier of R2) = (the carrier of ( R28 + R29 )) by L805 , L790 , XBOOLE_0:def 10;
thus L807: ( the VectSpStr of R2 ) = ( R28 + R29 ) by L806 , L754 , VECTSP_4:31;
L808: ( 0. R2 ) in R29 by VECTSP_4:17;
L809: ( 0. R2 ) in D64 by L808 , STRUCT_0:def 5;
L810: ( 0. R2 ) in R28 by VECTSP_4:17;
L811: ( 0. R2 ) in D63 by L810 , STRUCT_0:def 5;
L812: ( 0. R2 ) in { C117 } by L811 , L804 , L809 , XBOOLE_0:def 4;
L813: (the carrier of ( (0). R2 )) = { ( 0. R2 ) } by VECTSP_4:def 3
.= ( D63 /\ D64 ) by L804 , L812 , TARSKI:def 1
.= (the carrier of ( R28 /\ R29 )) by L36;
thus L814: thesis by L813 , VECTSP_4:29;
end;
theorem
L815: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for B96 being  strict  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for B97 , B98 being (Subspace of B96) holds (( B97 + B98 ) = B96 iff (for B99 being (Element of B96) holds (ex B100 , B101 being (Element of B96) st (B100 in B97 & B101 in B98 & B99 = ( B100 + B101 )))))))) by L463;
theorem
L816: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R28 being (Subspace of R2) holds (for R29 being (Subspace of R2) holds (for B102 , B103 , B104 , B105 , B106 being (Element of R2) holds ((R2 is_the_direct_sum_of R28 , R29 & B102 = ( B103 + B104 ) & B102 = ( B105 + B106 ) & B103 in R28 & B105 in R28 & B104 in R29 & B106 in R29) implies (B103 = B105 & B104 = B106)))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R28 being (Subspace of R2);
let R29 being (Subspace of R2);
let C118 , C119 , C120 , C121 , C122 being (Element of R2);
reconsider D68 = ( C119 + R29 ) as (Coset of R29) by VECTSP_4:def 6;
reconsider D69 = (the carrier of R28) as (Coset of R28) by VECTSP_4:73;
L817: C119 in D68 by VECTSP_4:44;
assume L818: R2 is_the_direct_sum_of R28 , R29;
consider C123 being (Element of R2) such that L819: ( D69 /\ D68 ) = { C123 } by L818 , L753;
assume that
L820: (C118 = ( C119 + C120 ) & C118 = ( C121 + C122 ))
and
L821: C119 in R28
and
L822: C121 in R28
and
L823: (C120 in R29 & C122 in R29);
L824: ( C120 - C122 ) in R29 by L823 , VECTSP_4:23;
L825: C119 in D69 by L821 , STRUCT_0:def 5;
L826: C119 in ( D69 /\ D68 ) by L825 , L817 , XBOOLE_0:def 4;
L827: C119 = C123 by L826 , L819 , TARSKI:def 1;
L828: C121 in D69 by L822 , STRUCT_0:def 5;
L829: C121 = ( ( C119 + C120 ) - C122 ) by L820 , VECTSP_2:2
.= ( C119 + ( C120 - C122 ) ) by RLVECT_1:def 3;
L830: C121 in D68 by L829 , L824;
L831: C121 in ( D69 /\ D68 ) by L830 , L828 , XBOOLE_0:def 4;
thus L832: C119 = C121 by L831 , L819 , L827 , TARSKI:def 1;
L833: C121 = C123 by L831 , L819 , TARSKI:def 1;
thus L834: thesis by L833 , L820 , L827 , RLVECT_1:8;
end;
theorem
L835: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R28 being (Subspace of R2) holds (for R29 being (Subspace of R2) holds ((R2 = ( R28 + R29 ) & (ex R33 being (Element of R2) st (for B107 , B108 , B109 , B110 being (Element of R2) holds ((R33 = ( B107 + B108 ) & R33 = ( B109 + B110 ) & B107 in R28 & B109 in R28 & B108 in R29 & B110 in R29) implies (B107 = B109 & B108 = B110))))) implies R2 is_the_direct_sum_of R28 , R29)))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R28 being (Subspace of R2);
let R29 being (Subspace of R2);
assume L836: R2 = ( R28 + R29 );
L837: ((the carrier of ( (0). R2 )) = { ( 0. R2 ) } & ( (0). R2 ) is (Subspace of ( R28 /\ R29 ))) by VECTSP_4:39 , VECTSP_4:def 3;
L838: { ( 0. R2 ) } c= (the carrier of ( R28 /\ R29 )) by L837 , VECTSP_4:def 2;
given R33 being (Element of R2) such that
L839: (for B111 , B112 , B113 , B114 being (Element of R2) holds ((R33 = ( B111 + B112 ) & R33 = ( B113 + B114 ) & B111 in R28 & B113 in R28 & B112 in R29 & B114 in R29) implies (B111 = B113 & B112 = B114)));

assume L840: (not thesis);
L841: ( R28 /\ R29 ) <> ( (0). R2 ) by L840 , L836 , L461;
L842: (the carrier of ( R28 /\ R29 )) <> { ( 0. R2 ) } by L841 , VECTSP_4:def 3;
L843: { ( 0. R2 ) } c< (the carrier of ( R28 /\ R29 )) by L842 , L838 , XBOOLE_0:def 8;
consider R15 being set such that L844: R15 in (the carrier of ( R28 /\ R29 )) and L845: (not R15 in { ( 0. R2 ) }) by L843 , XBOOLE_0:6;
L846: R15 in ( R28 /\ R29 ) by L844 , STRUCT_0:def 5;
L847: R15 in R2 by L846 , VECTSP_4:9;
reconsider D70 = R15 as (Element of R2) by L847 , STRUCT_0:def 5;
consider C124 , C125 being (Element of R2) such that L848: C124 in R28 and L849: C125 in R29 and L850: R33 = ( C124 + C125 ) by L836 , L463;
L851: R33 = ( ( C124 + C125 ) + ( 0. R2 ) ) by L850 , RLVECT_1:4
.= ( ( C124 + C125 ) + ( D70 - D70 ) ) by VECTSP_1:19
.= ( ( ( C124 + C125 ) + D70 ) - D70 ) by RLVECT_1:def 3
.= ( ( ( C124 + D70 ) + C125 ) - D70 ) by RLVECT_1:def 3
.= ( ( C124 + D70 ) + ( C125 - D70 ) ) by RLVECT_1:def 3;
L852: R15 in R29 by L846 , L70;
L853: ( C125 - D70 ) in R29 by L852 , L849 , VECTSP_4:23;
L854: R15 in R28 by L846 , L70;
L855: ( C124 + D70 ) in R28 by L854 , L848 , VECTSP_4:20;
L856: ( C125 - D70 ) = C125 by L855 , L839 , L848 , L849 , L850 , L851 , L853;
L857: ( C125 + ( - D70 ) ) = ( C125 + ( 0. R2 ) ) by L856 , RLVECT_1:4;
L858: ( - D70 ) = ( 0. R2 ) by L857 , RLVECT_1:8;
L859: D70 = ( - ( 0. R2 ) ) by L858 , RLVECT_1:17;
L860: R15 <> ( 0. R2 ) by L845 , TARSKI:def 1;
thus L861: thesis by L860 , L859 , RLVECT_1:12;
end;
definition
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R33 being (Element of R2);
let R28 being (Subspace of R2);
let R29 being (Subspace of R2);
assume L862: R2 is_the_direct_sum_of R28 , R29;
func R33 |-- (R28 , R29) -> (Element of [: (the carrier of R2) , (the carrier of R2) :]) means
:L863: (R33 = ( ( it `1 ) + ( it `2 ) ) & ( it `1 ) in R28 & ( it `2 ) in R29);
existence
proof
L864: ( R28 + R29 ) = ( the VectSpStr of R2 ) by L862 , L461;
consider C126 , C127 being (Element of R2) such that L865: (C126 in R28 & C127 in R29 & R33 = ( C126 + C127 )) by L864 , L463;
take [ C126 , C127 ];
L866: ( [ C126 , C127 ] `1 ) = C126 by MCART_1:7;
thus L867: thesis by L866 , L865 , MCART_1:7;
end;
uniqueness
proof
let R36 being (Element of [: (the carrier of R2) , (the carrier of R2) :]);
let R37 being (Element of [: (the carrier of R2) , (the carrier of R2) :]);
assume L868: (R33 = ( ( R36 `1 ) + ( R36 `2 ) ) & ( R36 `1 ) in R28 & ( R36 `2 ) in R29 & R33 = ( ( R37 `1 ) + ( R37 `2 ) ) & ( R37 `1 ) in R28 & ( R37 `2 ) in R29);
L869: (( R36 `1 ) = ( R37 `1 ) & ( R36 `2 ) = ( R37 `2 )) by L868 , L862 , L816;
L870: R36 = [ ( R36 `1 ) , ( R36 `2 ) ] by MCART_1:21;
thus L871: thesis by L870 , L869 , MCART_1:21;
end;
end;
theorem
L873: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R28 being (Subspace of R2) holds (for R29 being (Subspace of R2) holds (for R33 being (Element of R2) holds (R2 is_the_direct_sum_of R28 , R29 implies ( ( R33 |-- (R28 , R29) ) `1 ) = ( ( R33 |-- (R29 , R28) ) `2 )))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R28 being (Subspace of R2);
let R29 being (Subspace of R2);
let R33 being (Element of R2);
assume L874: R2 is_the_direct_sum_of R28 , R29;
L875: ( ( R33 |-- (R28 , R29) ) `2 ) in R29 by L874 , L863;
L876: R2 is_the_direct_sum_of R29 , R28 by L874 , L693;
L877: (R33 = ( ( ( R33 |-- (R29 , R28) ) `2 ) + ( ( R33 |-- (R29 , R28) ) `1 ) ) & ( ( R33 |-- (R29 , R28) ) `1 ) in R29) by L876 , L863;
L878: ( ( R33 |-- (R29 , R28) ) `2 ) in R28 by L876 , L863;
L879: (R33 = ( ( ( R33 |-- (R28 , R29) ) `1 ) + ( ( R33 |-- (R28 , R29) ) `2 ) ) & ( ( R33 |-- (R28 , R29) ) `1 ) in R28) by L874 , L863;
thus L880: thesis by L879 , L874 , L875 , L877 , L878 , L816;
end;
theorem
L881: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds (for R28 being (Subspace of R2) holds (for R29 being (Subspace of R2) holds (for R33 being (Element of R2) holds (R2 is_the_direct_sum_of R28 , R29 implies ( ( R33 |-- (R28 , R29) ) `2 ) = ( ( R33 |-- (R29 , R28) ) `1 )))))))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
let R28 being (Subspace of R2);
let R29 being (Subspace of R2);
let R33 being (Element of R2);
assume L882: R2 is_the_direct_sum_of R28 , R29;
L883: ( ( R33 |-- (R28 , R29) ) `2 ) in R29 by L882 , L863;
L884: R2 is_the_direct_sum_of R29 , R28 by L882 , L693;
L885: (R33 = ( ( ( R33 |-- (R29 , R28) ) `2 ) + ( ( R33 |-- (R29 , R28) ) `1 ) ) & ( ( R33 |-- (R29 , R28) ) `1 ) in R29) by L884 , L863;
L886: ( ( R33 |-- (R29 , R28) ) `2 ) in R28 by L884 , L863;
L887: (R33 = ( ( ( R33 |-- (R28 , R29) ) `1 ) + ( ( R33 |-- (R28 , R29) ) `2 ) ) & ( ( R33 |-- (R28 , R29) ) `1 ) in R28) by L882 , L863;
thus L888: thesis by L887 , L882 , L883 , L885 , L886 , L816;
end;
theorem
L889: (for R19 being Field holds (for R20 being (VectSp of R19) holds (for R38 being (Subspace of R20) holds (for B115 being (Linear_Compl of R38) holds (for B116 being (Element of R20) holds (for B117 being (Element of [: (the carrier of R20) , (the carrier of R20) :]) holds ((( ( B117 `1 ) + ( B117 `2 ) ) = B116 & ( B117 `1 ) in R38 & ( B117 `2 ) in B115) implies B117 = ( B116 |-- (R38 , B115) ))))))))
proof
let R19 being Field;
let R20 being (VectSp of R19);
let R38 being (Subspace of R20);
let C128 being (Linear_Compl of R38);
let C129 being (Element of R20);
let C130 being (Element of [: (the carrier of R20) , (the carrier of R20) :]);
L890: R20 is_the_direct_sum_of R38 , C128 by L703;
thus L891: thesis by L890 , L863;
end;
theorem
L892: (for R19 being Field holds (for R20 being (VectSp of R19) holds (for R38 being (Subspace of R20) holds (for B118 being (Linear_Compl of R38) holds (for B119 being (Element of R20) holds ( ( ( B119 |-- (R38 , B118) ) `1 ) + ( ( B119 |-- (R38 , B118) ) `2 ) ) = B119)))))
proof
let R19 being Field;
let R20 being (VectSp of R19);
let R38 being (Subspace of R20);
let C131 being (Linear_Compl of R38);
let C132 being (Element of R20);
L893: R20 is_the_direct_sum_of R38 , C131 by L703;
thus L894: thesis by L893 , L863;
end;
theorem
L895: (for R19 being Field holds (for R20 being (VectSp of R19) holds (for R38 being (Subspace of R20) holds (for B120 being (Linear_Compl of R38) holds (for B121 being (Element of R20) holds (( ( B121 |-- (R38 , B120) ) `1 ) in R38 & ( ( B121 |-- (R38 , B120) ) `2 ) in B120))))))
proof
let R19 being Field;
let R20 being (VectSp of R19);
let R38 being (Subspace of R20);
let C133 being (Linear_Compl of R38);
let C134 being (Element of R20);
L896: R20 is_the_direct_sum_of R38 , C133 by L703;
thus L897: thesis by L896 , L863;
end;
theorem
L898: (for R19 being Field holds (for R20 being (VectSp of R19) holds (for R38 being (Subspace of R20) holds (for B122 being (Linear_Compl of R38) holds (for B123 being (Element of R20) holds ( ( B123 |-- (R38 , B122) ) `1 ) = ( ( B123 |-- (B122 , R38) ) `2 ))))))
proof
let R19 being Field;
let R20 being (VectSp of R19);
let R38 being (Subspace of R20);
let C135 being (Linear_Compl of R38);
let C136 being (Element of R20);
L899: R20 is_the_direct_sum_of R38 , C135 by L703;
thus L900: thesis by L899 , L873;
end;
theorem
L901: (for R19 being Field holds (for R20 being (VectSp of R19) holds (for R38 being (Subspace of R20) holds (for B124 being (Linear_Compl of R38) holds (for B125 being (Element of R20) holds ( ( B125 |-- (R38 , B124) ) `2 ) = ( ( B125 |-- (B124 , R38) ) `1 ))))))
proof
let R19 being Field;
let R20 being (VectSp of R19);
let R38 being (Subspace of R20);
let C137 being (Linear_Compl of R38);
let C138 being (Element of R20);
L902: R20 is_the_direct_sum_of R38 , C137 by L703;
thus L903: thesis by L902 , L881;
end;
definition
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
func SubJoin R2 -> (BinOp of ( Subspaces R2 )) means
:L904: (for R39 being (Element of ( Subspaces R2 )) holds (for R40 being (Element of ( Subspaces R2 )) holds (for R42 being (Subspace of R2) holds (for R43 being (Subspace of R2) holds ((R39 = R42 & R40 = R43) implies ( it . (R39 , R40) ) = ( R42 + R43 ))))));
existence
proof
defpred S7[ set , set , set ] means (for R42 being (Subspace of R2) holds (for R43 being (Subspace of R2) holds (($1 = R42 & $2 = R43) implies $3 = ( R42 + R43 ))));
L905: (for R39 being (Element of ( Subspaces R2 )) holds (for R40 being (Element of ( Subspaces R2 )) holds (ex R41 being (Element of ( Subspaces R2 )) st S7[ R39 , R40 , R41 ])))
proof
let R39 being (Element of ( Subspaces R2 ));
let R40 being (Element of ( Subspaces R2 ));
consider C139 being  strict (Subspace of R2) such that L906: C139 = R39 by L417;
consider C140 being  strict (Subspace of R2) such that L907: C140 = R40 by L417;
reconsider D71 = ( C139 + C140 ) as (Element of ( Subspaces R2 )) by L417;
take D71;
thus L908: thesis by L906 , L907;
end;
thus L909: (ex B126 being (BinOp of ( Subspaces R2 )) st (for R39 being (Element of ( Subspaces R2 )) holds (for R40 being (Element of ( Subspaces R2 )) holds S7[ R39 , R40 , ( B126 . (R39 , R40) ) ]))) from BINOP_1:sch 3(L905);
end;
uniqueness
proof
let C141 , C142 being (BinOp of ( Subspaces R2 ));
assume L910: (for R39 being (Element of ( Subspaces R2 )) holds (for R40 being (Element of ( Subspaces R2 )) holds (for R42 being (Subspace of R2) holds (for R43 being (Subspace of R2) holds ((R39 = R42 & R40 = R43) implies ( C141 . (R39 , R40) ) = ( R42 + R43 ))))));
assume L911: (for R39 being (Element of ( Subspaces R2 )) holds (for R40 being (Element of ( Subspaces R2 )) holds (for R42 being (Subspace of R2) holds (for R43 being (Subspace of R2) holds ((R39 = R42 & R40 = R43) implies ( C142 . (R39 , R40) ) = ( R42 + R43 ))))));
L912:
now
let C143 , C144 being set;
assume that
L913: C143 in ( Subspaces R2 )
and
L914: C144 in ( Subspaces R2 );
reconsider D72 = C143 , D73 = C144 as (Element of ( Subspaces R2 )) by L913 , L914;
consider C145 being  strict (Subspace of R2) such that L915: C145 = C143 by L913 , L417;
consider C146 being  strict (Subspace of R2) such that L916: C146 = C144 by L914 , L417;
L917: ( C141 . (D72 , D73) ) = ( C145 + C146 ) by L910 , L915 , L916;
thus L918: ( C141 . (C143 , C144) ) = ( C142 . (C143 , C144) ) by L917 , L911 , L915 , L916;
end;
thus L919: thesis by L912 , BINOP_1:1;
end;
end;
definition
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
func SubMeet R2 -> (BinOp of ( Subspaces R2 )) means
:L921: (for R39 being (Element of ( Subspaces R2 )) holds (for R40 being (Element of ( Subspaces R2 )) holds (for R42 being (Subspace of R2) holds (for R43 being (Subspace of R2) holds ((R39 = R42 & R40 = R43) implies ( it . (R39 , R40) ) = ( R42 /\ R43 ))))));
existence
proof
defpred S8[ set , set , set ] means (for R42 being (Subspace of R2) holds (for R43 being (Subspace of R2) holds (($1 = R42 & $2 = R43) implies $3 = ( R42 /\ R43 ))));
L922: (for R39 being (Element of ( Subspaces R2 )) holds (for R40 being (Element of ( Subspaces R2 )) holds (ex R41 being (Element of ( Subspaces R2 )) st S8[ R39 , R40 , R41 ])))
proof
let R39 being (Element of ( Subspaces R2 ));
let R40 being (Element of ( Subspaces R2 ));
consider C147 being  strict (Subspace of R2) such that L923: C147 = R39 by L417;
consider C148 being  strict (Subspace of R2) such that L924: C148 = R40 by L417;
reconsider D74 = ( C147 /\ C148 ) as (Element of ( Subspaces R2 )) by L417;
take D74;
thus L925: thesis by L923 , L924;
end;
thus L926: (ex B127 being (BinOp of ( Subspaces R2 )) st (for R39 being (Element of ( Subspaces R2 )) holds (for R40 being (Element of ( Subspaces R2 )) holds S8[ R39 , R40 , ( B127 . (R39 , R40) ) ]))) from BINOP_1:sch 3(L922);
end;
uniqueness
proof
let C149 , C150 being (BinOp of ( Subspaces R2 ));
assume L927: (for R39 being (Element of ( Subspaces R2 )) holds (for R40 being (Element of ( Subspaces R2 )) holds (for R42 being (Subspace of R2) holds (for R43 being (Subspace of R2) holds ((R39 = R42 & R40 = R43) implies ( C149 . (R39 , R40) ) = ( R42 /\ R43 ))))));
assume L928: (for R39 being (Element of ( Subspaces R2 )) holds (for R40 being (Element of ( Subspaces R2 )) holds (for R42 being (Subspace of R2) holds (for R43 being (Subspace of R2) holds ((R39 = R42 & R40 = R43) implies ( C150 . (R39 , R40) ) = ( R42 /\ R43 ))))));
L929:
now
let C151 , C152 being set;
assume that
L930: C151 in ( Subspaces R2 )
and
L931: C152 in ( Subspaces R2 );
reconsider D75 = C151 , D76 = C152 as (Element of ( Subspaces R2 )) by L930 , L931;
consider C153 being  strict (Subspace of R2) such that L932: C153 = C151 by L930 , L417;
consider C154 being  strict (Subspace of R2) such that L933: C154 = C152 by L931 , L417;
L934: ( C149 . (D75 , D76) ) = ( C153 /\ C154 ) by L927 , L932 , L933;
thus L935: ( C149 . (C151 , C152) ) = ( C150 . (C151 , C152) ) by L934 , L928 , L932 , L933;
end;
thus L936: thesis by L929 , BINOP_1:1;
end;
end;
theorem
L938: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds LattStr (# ( Subspaces R2 ) , ( SubJoin R2 ) , ( SubMeet R2 ) #) is Lattice))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
set D77 = LattStr (# ( Subspaces R2 ) , ( SubJoin R2 ) , ( SubMeet R2 ) #);
L939: (for B128 , B129 being (Element of D77) holds ( B128 "/\" B129 ) = ( B129 "/\" B128 ))
proof
let C155 , C156 being (Element of D77);
consider C157 being  strict (Subspace of R2) such that L940: C157 = C155 by L417;
consider C158 being  strict (Subspace of R2) such that L941: C158 = C156 by L417;
thus L942: ( C155 "/\" C156 ) = ( ( SubMeet R2 ) . (C155 , C156) ) by LATTICES:def 2
.= ( C157 /\ C158 ) by L940 , L941 , L921
.= ( ( SubMeet R2 ) . (C156 , C155) ) by L940 , L941 , L921
.= ( C156 "/\" C155 ) by LATTICES:def 2;
end;
L943: (for B130 , B131 being (Element of D77) holds ( ( B130 "/\" B131 ) "\/" B131 ) = B131)
proof
let C159 , C160 being (Element of D77);
consider C161 being  strict (Subspace of R2) such that L944: C161 = C159 by L417;
consider C162 being  strict (Subspace of R2) such that L945: C162 = C160 by L417;
reconsider D78 = ( C161 /\ C162 ) as (Element of D77) by L417;
thus L946: ( ( C159 "/\" C160 ) "\/" C160 ) = ( ( SubJoin R2 ) . (( C159 "/\" C160 ) , C160) ) by LATTICES:def 1
.= ( ( SubJoin R2 ) . (( ( SubMeet R2 ) . (C159 , C160) ) , C160) ) by LATTICES:def 2
.= ( ( SubJoin R2 ) . (D78 , C160) ) by L944 , L945 , L921
.= ( ( C161 /\ C162 ) + C162 ) by L945 , L904
.= C160 by L945 , L257 , VECTSP_4:29;
end;
L947: (for B132 , B133 , B134 being (Element of D77) holds ( B132 "/\" ( B133 "/\" B134 ) ) = ( ( B132 "/\" B133 ) "/\" B134 ))
proof
let C163 , C164 , C165 being (Element of D77);
consider C166 being  strict (Subspace of R2) such that L948: C166 = C163 by L417;
consider C167 being  strict (Subspace of R2) such that L949: C167 = C164 by L417;
consider C168 being  strict (Subspace of R2) such that L950: C168 = C165 by L417;
reconsider D79 = ( C166 /\ C167 ) , D80 = ( C167 /\ C168 ) as (Element of D77) by L417;
thus L951: ( C163 "/\" ( C164 "/\" C165 ) ) = ( ( SubMeet R2 ) . (C163 , ( C164 "/\" C165 )) ) by LATTICES:def 2
.= ( ( SubMeet R2 ) . (C163 , ( ( SubMeet R2 ) . (C164 , C165) )) ) by LATTICES:def 2
.= ( ( SubMeet R2 ) . (C163 , D80) ) by L949 , L950 , L921
.= ( C166 /\ ( C167 /\ C168 ) ) by L948 , L921
.= ( ( C166 /\ C167 ) /\ C168 ) by L199
.= ( ( SubMeet R2 ) . (D79 , C165) ) by L950 , L921
.= ( ( SubMeet R2 ) . (( ( SubMeet R2 ) . (C163 , C164) ) , C165) ) by L948 , L949 , L921
.= ( ( SubMeet R2 ) . (( C163 "/\" C164 ) , C165) ) by LATTICES:def 2
.= ( ( C163 "/\" C164 ) "/\" C165 ) by LATTICES:def 2;
end;
L952: (for B135 , B136 , B137 being (Element of D77) holds ( B135 "\/" ( B136 "\/" B137 ) ) = ( ( B135 "\/" B136 ) "\/" B137 ))
proof
let C169 , C170 , C171 being (Element of D77);
consider C172 being  strict (Subspace of R2) such that L953: C172 = C169 by L417;
consider C173 being  strict (Subspace of R2) such that L954: C173 = C170 by L417;
consider C174 being  strict (Subspace of R2) such that L955: C174 = C171 by L417;
reconsider D81 = ( C172 + C173 ) , D82 = ( C173 + C174 ) as (Element of D77) by L417;
thus L956: ( C169 "\/" ( C170 "\/" C171 ) ) = ( ( SubJoin R2 ) . (C169 , ( C170 "\/" C171 )) ) by LATTICES:def 1
.= ( ( SubJoin R2 ) . (C169 , ( ( SubJoin R2 ) . (C170 , C171) )) ) by LATTICES:def 1
.= ( ( SubJoin R2 ) . (C169 , D82) ) by L954 , L955 , L904
.= ( C172 + ( C173 + C174 ) ) by L953 , L904
.= ( ( C172 + C173 ) + C174 ) by L99
.= ( ( SubJoin R2 ) . (D81 , C171) ) by L955 , L904
.= ( ( SubJoin R2 ) . (( ( SubJoin R2 ) . (C169 , C170) ) , C171) ) by L953 , L954 , L904
.= ( ( SubJoin R2 ) . (( C169 "\/" C170 ) , C171) ) by LATTICES:def 1
.= ( ( C169 "\/" C170 ) "\/" C171 ) by LATTICES:def 1;
end;
L957: (for B138 , B139 being (Element of D77) holds ( B138 "/\" ( B138 "\/" B139 ) ) = B138)
proof
let C175 , C176 being (Element of D77);
consider C177 being  strict (Subspace of R2) such that L958: C177 = C175 by L417;
consider C178 being  strict (Subspace of R2) such that L959: C178 = C176 by L417;
reconsider D83 = ( C177 + C178 ) as (Element of D77) by L417;
thus L960: ( C175 "/\" ( C175 "\/" C176 ) ) = ( ( SubMeet R2 ) . (C175 , ( C175 "\/" C176 )) ) by LATTICES:def 2
.= ( ( SubMeet R2 ) . (C175 , ( ( SubJoin R2 ) . (C175 , C176) )) ) by LATTICES:def 1
.= ( ( SubMeet R2 ) . (C175 , D83) ) by L958 , L959 , L904
.= ( C177 /\ ( C177 + C178 ) ) by L958 , L921
.= C175 by L958 , L272 , VECTSP_4:29;
end;
L961: (for B140 , B141 being (Element of D77) holds ( B140 "\/" B141 ) = ( B141 "\/" B140 ))
proof
let C179 , C180 being (Element of D77);
consider C181 being  strict (Subspace of R2) such that L962: C181 = C179 by L417;
consider C182 being  strict (Subspace of R2) such that L963: C182 = C180 by L417;
thus L964: ( C179 "\/" C180 ) = ( ( SubJoin R2 ) . (C179 , C180) ) by LATTICES:def 1
.= ( C181 + C182 ) by L962 , L963 , L904
.= ( C182 + C181 ) by L24
.= ( ( SubJoin R2 ) . (C180 , C179) ) by L962 , L963 , L904
.= ( C180 "\/" C179 ) by LATTICES:def 1;
end;
L965: D77 is  join-commutative  join-associative  meet-absorbing  meet-commutative  meet-associative  join-absorbing by L961 , L952 , L943 , L939 , L947 , L957 , LATTICES:def 4 , LATTICES:def 5 , LATTICES:def 6 , LATTICES:def 7 , LATTICES:def 8 , LATTICES:def 9;
thus L966: thesis by L965;
end;
theorem
L967: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds LattStr (# ( Subspaces R2 ) , ( SubJoin R2 ) , ( SubMeet R2 ) #) is 0_Lattice))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
set D84 = LattStr (# ( Subspaces R2 ) , ( SubJoin R2 ) , ( SubMeet R2 ) #);
L968: (ex B142 being (Element of D84) st (for B143 being (Element of D84) holds (( B142 "/\" B143 ) = B142 & ( B143 "/\" B142 ) = B142)))
proof
reconsider D85 = ( (0). R2 ) as (Element of D84) by L417;
take D85;
let C183 being (Element of D84);
consider C184 being  strict (Subspace of R2) such that L969: C184 = C183 by L417;
thus L970: ( D85 "/\" C183 ) = ( ( SubMeet R2 ) . (D85 , C183) ) by LATTICES:def 2
.= ( ( (0). R2 ) /\ C184 ) by L969 , L921
.= D85 by L240;
thus L971: ( C183 "/\" D85 ) = ( ( SubMeet R2 ) . (C183 , D85) ) by LATTICES:def 2
.= ( C184 /\ ( (0). R2 ) ) by L969 , L921
.= D85 by L240;
end;
thus L972: thesis by L968 , L938 , LATTICES:def 13;
end;
theorem
L973: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds LattStr (# ( Subspaces R2 ) , ( SubJoin R2 ) , ( SubMeet R2 ) #) is 1_Lattice))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
set D86 = LattStr (# ( Subspaces R2 ) , ( SubJoin R2 ) , ( SubMeet R2 ) #);
L974: (ex B144 being (Element of D86) st (for B145 being (Element of D86) holds (( B144 "\/" B145 ) = B144 & ( B145 "\/" B144 ) = B144)))
proof
consider C185 being  strict (Subspace of R2) such that L975: (the carrier of C185) = (the carrier of ( (Omega). R2 ));
reconsider D87 = C185 as (Element of D86) by L417;
take D87;
let C186 being (Element of D86);
consider C187 being  strict (Subspace of R2) such that L976: C187 = C186 by L417;
L977: D87 is (Subspace of ( (Omega). R2 )) by L184;
thus L978: ( D87 "\/" C186 ) = ( ( SubJoin R2 ) . (D87 , C186) ) by LATTICES:def 1
.= ( C185 + C187 ) by L976 , L904
.= ( ( (Omega). R2 ) + C187 ) by L975 , L157
.= ( the VectSpStr of R2 ) by L189
.= D87 by L975 , L977 , VECTSP_4:31;
thus L979: ( C186 "\/" D87 ) = ( ( SubJoin R2 ) . (C186 , D87) ) by LATTICES:def 1
.= ( C187 + C185 ) by L976 , L904
.= ( C187 + ( (Omega). R2 ) ) by L975 , L157
.= ( the VectSpStr of R2 ) by L189
.= D87 by L975 , L977 , VECTSP_4:31;
end;
thus L980: thesis by L974 , L938 , LATTICES:def 14;
end;
theorem
L981: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds LattStr (# ( Subspaces R2 ) , ( SubJoin R2 ) , ( SubMeet R2 ) #) is 01_Lattice))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
L982: LattStr (# ( Subspaces R2 ) , ( SubJoin R2 ) , ( SubMeet R2 ) #) is  lower-bounded  upper-bounded  lower-bounded  upper-bounded  lower-bounded  upper-bounded  lower-bounded  upper-bounded Lattice by L967 , L973;
thus L983: thesis by L982;
end;
theorem
L984: (for R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1 holds LattStr (# ( Subspaces R2 ) , ( SubJoin R2 ) , ( SubMeet R2 ) #) is M_Lattice))
proof
let R1 being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let R2 being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R1;
set D88 = LattStr (# ( Subspaces R2 ) , ( SubJoin R2 ) , ( SubMeet R2 ) #);
L985: (for B146 , B147 , B148 being (Element of D88) holds (B146 [= B148 implies ( B146 "\/" ( B147 "/\" B148 ) ) = ( ( B146 "\/" B147 ) "/\" B148 )))
proof
let C188 , C189 , C190 being (Element of D88);
assume L986: C188 [= C190;
consider C191 being  strict (Subspace of R2) such that L987: C191 = C188 by L417;
consider C192 being  strict (Subspace of R2) such that L988: C192 = C190 by L417;
L989: ( C191 + C192 ) = ( ( SubJoin R2 ) . (C188 , C190) ) by L987 , L988 , L904
.= ( C188 "\/" C190 ) by LATTICES:def 1
.= C192 by L986 , L988 , LATTICES:def 3;
L990: C191 is (Subspace of C192) by L989 , L139;
consider C193 being  strict (Subspace of R2) such that L991: C193 = C189 by L417;
reconsider D89 = ( C191 + C193 ) as (Element of D88) by L417;
reconsider D90 = ( C193 /\ C192 ) as (Element of D88) by L417;
thus L992: ( C188 "\/" ( C189 "/\" C190 ) ) = ( ( SubJoin R2 ) . (C188 , ( C189 "/\" C190 )) ) by LATTICES:def 1
.= ( ( SubJoin R2 ) . (C188 , ( ( SubMeet R2 ) . (C189 , C190) )) ) by LATTICES:def 2
.= ( ( SubJoin R2 ) . (C188 , D90) ) by L991 , L988 , L921
.= ( C191 + ( C193 /\ C192 ) ) by L987 , L904
.= ( ( C191 + C193 ) /\ C192 ) by L990 , L353
.= ( ( SubMeet R2 ) . (D89 , C190) ) by L988 , L921
.= ( ( SubMeet R2 ) . (( ( SubJoin R2 ) . (C188 , C189) ) , C190) ) by L987 , L991 , L904
.= ( ( SubMeet R2 ) . (( C188 "\/" C189 ) , C190) ) by LATTICES:def 1
.= ( ( C188 "\/" C189 ) "/\" C190 ) by LATTICES:def 2;
end;
thus L993: thesis by L985 , L938 , LATTICES:def 12;
end;
theorem
L994: (for B149 being Field holds (for B150 being (VectSp of B149) holds LattStr (# ( Subspaces B150 ) , ( SubJoin B150 ) , ( SubMeet B150 ) #) is C_Lattice))
proof
let C194 being Field;
let C195 being (VectSp of C194);
reconsider D91 = LattStr (# ( Subspaces C195 ) , ( SubJoin C195 ) , ( SubMeet C195 ) #) as 01_Lattice by L981;
reconsider D92 = D91 as 0_Lattice;
reconsider D93 = D91 as 1_Lattice;
consider C196 being  strict (Subspace of C195) such that L995: (the carrier of C196) = (the carrier of ( (Omega). C195 ));
reconsider D94 = C196 as (Element of D91) by L417;
reconsider D95 = D94 as (Element of D93);
reconsider D96 = ( (0). C195 ) as (Element of D91) by L417;
reconsider D97 = D96 as (Element of D92);
L996:
now
let C197 being (Element of D92);
consider C198 being  strict (Subspace of C195) such that L997: C198 = C197 by L417;
thus L998: ( C197 "/\" D97 ) = ( ( SubMeet C195 ) . (C197 , D97) ) by LATTICES:def 2
.= ( C198 /\ ( (0). C195 ) ) by L997 , L921
.= D97 by L240;
end;
L999: ( Bottom D91 ) = D96 by L996 , RLSUB_2:64;
L1000:
now
let C199 being (Element of D93);
consider C200 being  strict (Subspace of C195) such that L1001: C200 = C199 by L417;
L1002: C196 is (Subspace of ( (Omega). C195 )) by L184;
thus L1003: ( C199 "\/" D95 ) = ( ( SubJoin C195 ) . (C199 , D95) ) by LATTICES:def 1
.= ( C200 + C196 ) by L1001 , L904
.= ( C200 + ( (Omega). C195 ) ) by L995 , L157
.= ( the VectSpStr of C195 ) by L189
.= C196 by L995 , L1002 , VECTSP_4:31;
end;
L1004: ( Top D91 ) = D94 by L1000 , RLSUB_2:65;
L1005:
now
L1006: D94 is (Subspace of ( (Omega). C195 )) by L184;
let C201 being (Element of D91);
consider C202 being  strict (Subspace of C195) such that L1007: C202 = C201 by L417;
set D98 = the (Linear_Compl of C202);
consider C203 being  strict (Subspace of C195) such that L1008: (the carrier of C203) = (the carrier of D98) by L150;
reconsider D99 = C203 as (Element of D91) by L417;
take D100 = D99;
L1009: ( D100 "/\" C201 ) = ( ( SubMeet C195 ) . (D100 , C201) ) by LATTICES:def 2
.= ( C203 /\ C202 ) by L1007 , L921
.= ( D98 /\ C202 ) by L1008 , L210
.= ( Bottom D91 ) by L999 , L710;
L1010: ( D100 "\/" C201 ) = ( ( SubJoin C195 ) . (D100 , C201) ) by LATTICES:def 1
.= ( C203 + C202 ) by L1007 , L904
.= ( D98 + C202 ) by L1008 , L157
.= ( the VectSpStr of C195 ) by L706
.= ( Top D91 ) by L995 , L1004 , L1006 , VECTSP_4:31;
thus L1011: D100 is_a_complement_of C201 by L1010 , L1009 , LATTICES:def 18;
end;
thus L1012: thesis by L1005 , LATTICES:def 19;
end;
