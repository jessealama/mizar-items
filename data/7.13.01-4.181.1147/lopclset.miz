:: Representation Theorem for Boolean Algebras
::  by Jaros{\l}aw Stanis{\l}aw Walijewski
::
:: Received July 14, 1993
:: Copyright (c) 1993-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies XBOOLE_0, PRE_TOPC, SUBSET_1, SETFAM_1, RCOMP_1, TARSKI,
      ZFMISC_1, STRUCT_0, BINOP_1, FUNCT_1, LATTICES, EQREL_1, XXREAL_2,
      CARD_FIL, RELAT_1, INT_2, FINSUB_1, SETWISEO, FILTER_0, LATTICE2, PBOOLE,
      FINSET_1, CLASSES1, CARD_1, GROUP_6, FUNCT_2, WELLORD1, LOPCLSET;
 notations TARSKI, XBOOLE_0, SUBSET_1, SETFAM_1, RELAT_1, FUNCT_1, RELSET_1,
      PARTFUN1, FUNCT_2, BINOP_1, FINSUB_1, STRUCT_0, PRE_TOPC, LATTICES,
      LATTICE2, FILTER_0, FINSET_1, SETWISEO, LATTICE4, CLASSES1, CARD_1;
 constructors BINOP_1, SETWISEO, PRE_TOPC, LATTICE2, FILTER_1, CLASSES1,
      LATTICE4, RELSET_1, FILTER_0;
 registrations XBOOLE_0, SUBSET_1, RELAT_1, FUNCT_1, FUNCT_2, FINSET_1,
      FINSUB_1, STRUCT_0, LATTICES, PRE_TOPC, CARD_1, RELSET_1, TOPS_1,
      LATTICE2;
 requirements BOOLE, SUBSET;
 definitions TARSKI, LATTICES, BINOP_1, STRUCT_0, XBOOLE_0, SUBSET_1;
 theorems TARSKI, SETFAM_1, LATTICES, FINSUB_1, TOPS_1, PRE_TOPC, SUBSET_1,
      LATTICE2, LATTICE4, FILTER_0, FUNCT_1, FUNCT_2, ZFMISC_1, GROUP_6,
      SETWISEO, RELAT_1, RELSET_1, XBOOLE_0, XBOOLE_1, STRUCT_0, CLASSES1,
      EQREL_1;
 schemes BINOP_1, FRAENKEL, FUNCT_1, SETWISEO, BINOP_2;

begin
definition
let C1 being non  empty TopStruct;
func OpenClosedSet C1 -> (Subset-Family of C1) equals 
{ B1 where B1 is (Subset of C1) : B1 is  open  closed };
coherence
proof
set D1 = { B2 where B2 is (Subset of C1) : B2 is  open  closed };
L1: D1 c= ( bool (the carrier of C1) )
proof
let C2 being set;
assume L2: C2 in D1;
L3: (ex B3 being (Subset of C1) st (C2 = B3 & B3 is  open & B3 is  closed)) by L2;
thus L4: thesis by L3;
end;
thus L5: thesis by L1;
end;
end;
registration
let C3 being non  empty TopSpace;
cluster ( OpenClosedSet C3 ) -> non  empty;
coherence
proof
set D2 = { B4 where B4 is (Subset of C3) : B4 is  open  closed };
L7: ( {} C3 ) in D2;
thus L8: thesis by L7;
end;
end;
theorem
L10: (for R1 being non  empty TopSpace holds (for R2 being (Subset of R1) holds (R2 in ( OpenClosedSet R1 ) implies R2 is  open)))
proof
let R1 being non  empty TopSpace;
let R2 being (Subset of R1);
assume L11: R2 in ( OpenClosedSet R1 );
L12: (ex R3 being (Subset of R1) st (R3 = R2 & R3 is  open & R3 is  closed)) by L11;
thus L13: thesis by L12;
end;
theorem
L14: (for R1 being non  empty TopSpace holds (for R2 being (Subset of R1) holds (R2 in ( OpenClosedSet R1 ) implies R2 is  closed)))
proof
let R1 being non  empty TopSpace;
let R2 being (Subset of R1);
assume L15: R2 in ( OpenClosedSet R1 );
L16: (ex R3 being (Subset of R1) st (R3 = R2 & R3 is  open & R3 is  closed)) by L15;
thus L17: thesis by L16;
end;
theorem
L18: (for R1 being non  empty TopSpace holds (for R2 being (Subset of R1) holds (R2 is  open  closed implies R2 in ( OpenClosedSet R1 ))));
definition
let R1 being non  empty TopSpace;
let C4 , C5 being (Element of ( OpenClosedSet R1 ));
redefine func C4 \/ C5 -> (Element of ( OpenClosedSet R1 ));

coherence
proof
reconsider D3 = C4 , D4 = C5 as (Subset of R1);
L19: D3 is  open by L10;
L20: D4 is  open by L10;
L21: D3 is  closed by L14;
L22: D4 is  closed by L14;
L23: ( D3 \/ D4 ) is  open by L19 , L20;
thus L24: ( C4 \/ C5 ) is (Element of ( OpenClosedSet R1 )) by L23 , L21 , L22 , L18;
end;
redefine func C4 /\ C5 -> (Element of ( OpenClosedSet R1 ));

coherence
proof
reconsider D5 = C4 , D6 = C5 as (Subset of R1);
L25: D5 is  open by L10;
L26: D6 is  open by L10;
L27: D5 is  closed by L14;
L28: D6 is  closed by L14;
L29: ( D5 /\ D6 ) is  open by L25 , L26;
thus L30: ( C4 /\ C5 ) is (Element of ( OpenClosedSet R1 )) by L29 , L27 , L28 , L18;
end;
end;
definition
let R1 being non  empty TopSpace;
deffunc H1((Element of ( OpenClosedSet R1 )) , (Element of ( OpenClosedSet R1 ))) = ( $1 \/ $2 );
func T_join R1 -> (BinOp of ( OpenClosedSet R1 )) means 
:L32: (for B5 , B6 being (Element of ( OpenClosedSet R1 )) holds ( it . (B5 , B6) ) = ( B5 \/ B6 ));
existence
proof
consider C6 being (BinOp of ( OpenClosedSet R1 )) such that L33: (for B7 , B8 being (Element of ( OpenClosedSet R1 )) holds ( C6 . (B7 , B8) ) = H1(B7 , B8)) from BINOP_1:sch 4;
take C6;
let R4 being (Element of ( OpenClosedSet R1 ));
let R5 being (Element of ( OpenClosedSet R1 ));
thus L34: thesis by L33;
end;
uniqueness
proof
thus L35: (for B9 , B10 being (BinOp of ( OpenClosedSet R1 )) holds (((for B11 , B12 being (Element of ( OpenClosedSet R1 )) holds ( B9 . (B11 , B12) ) = H1(B11 , B12)) & (for B13 , B14 being (Element of ( OpenClosedSet R1 )) holds ( B10 . (B13 , B14) ) = H1(B13 , B14))) implies B9 = B10)) from BINOP_2:sch 2;
end;
deffunc H2((Element of ( OpenClosedSet R1 )) , (Element of ( OpenClosedSet R1 ))) = ( $1 /\ $2 );
func T_meet R1 -> (BinOp of ( OpenClosedSet R1 )) means 
:L36: (for B15 , B16 being (Element of ( OpenClosedSet R1 )) holds ( it . (B15 , B16) ) = ( B15 /\ B16 ));
existence
proof
consider C7 being (BinOp of ( OpenClosedSet R1 )) such that L37: (for B17 , B18 being (Element of ( OpenClosedSet R1 )) holds ( C7 . (B17 , B18) ) = H2(B17 , B18)) from BINOP_1:sch 4;
take C7;
let R4 being (Element of ( OpenClosedSet R1 ));
let R5 being (Element of ( OpenClosedSet R1 ));
thus L38: thesis by L37;
end;
uniqueness
proof
thus L39: (for B19 , B20 being (BinOp of ( OpenClosedSet R1 )) holds (((for B21 , B22 being (Element of ( OpenClosedSet R1 )) holds ( B19 . (B21 , B22) ) = H2(B21 , B22)) & (for B23 , B24 being (Element of ( OpenClosedSet R1 )) holds ( B20 . (B23 , B24) ) = H2(B23 , B24))) implies B19 = B20)) from BINOP_2:sch 2;
end;
end;
theorem
L41: (for R1 being non  empty TopSpace holds (for B25 , B26 being (Element of LattStr (# ( OpenClosedSet R1 ) , ( T_join R1 ) , ( T_meet R1 ) #)) holds (for B27 , B28 being (Element of ( OpenClosedSet R1 )) holds ((B25 = B27 & B26 = B28) implies ( B25 "\/" B26 ) = ( B27 \/ B28 ))))) by L32;
theorem
L42: (for R1 being non  empty TopSpace holds (for B29 , B30 being (Element of LattStr (# ( OpenClosedSet R1 ) , ( T_join R1 ) , ( T_meet R1 ) #)) holds (for B31 , B32 being (Element of ( OpenClosedSet R1 )) holds ((B29 = B31 & B30 = B32) implies ( B29 "/\" B30 ) = ( B31 /\ B32 ))))) by L36;
theorem
L43: (for R1 being non  empty TopSpace holds ( {} R1 ) is (Element of ( OpenClosedSet R1 ))) by L18;
theorem
L44: (for R1 being non  empty TopSpace holds ( [#] R1 ) is (Element of ( OpenClosedSet R1 ))) by L18;
theorem
L45: (for R1 being non  empty TopSpace holds (for R4 being (Element of ( OpenClosedSet R1 )) holds ( R4 ` ) is (Element of ( OpenClosedSet R1 ))))
proof
let R1 being non  empty TopSpace;
let R4 being (Element of ( OpenClosedSet R1 ));
reconsider D7 = R4 as (Subset of R1);
L46: D7 is  open by L10;
L47: D7 is  closed by L14;
L48: ( R4 ` ) is  open by L47;
L49: ( R4 ` ) is  closed by L46;
thus L50: thesis by L49 , L48 , L18;
end;
theorem
L51: (for R1 being non  empty TopSpace holds LattStr (# ( OpenClosedSet R1 ) , ( T_join R1 ) , ( T_meet R1 ) #) is Lattice)
proof
let R1 being non  empty TopSpace;
set D8 = LattStr (# ( OpenClosedSet R1 ) , ( T_join R1 ) , ( T_meet R1 ) #);
L52: (for B33 , B34 being (Element of D8) holds ( B33 "\/" B34 ) = ( B34 "\/" B33 ))
proof
let C8 , C9 being (Element of D8);
consider C10 , C11 being (Element of ( OpenClosedSet R1 )) such that L53: C8 = C10 and L54: C9 = C11;
thus L55: ( C8 "\/" C9 ) = ( C11 \/ C10 ) by L53 , L54 , L32
.= ( C9 "\/" C8 ) by L53 , L54 , L32;
end;
L56: (for B35 , B36 , B37 being (Element of D8) holds ( B35 "\/" ( B36 "\/" B37 ) ) = ( ( B35 "\/" B36 ) "\/" B37 ))
proof
let C12 , C13 , C14 being (Element of D8);
consider C15 , C16 , C17 , C18 , C19 being (Element of ( OpenClosedSet R1 )) such that L57: C12 = C15 and L58: C13 = C16 and L59: C14 = C17 and L60: ( C13 "\/" C14 ) = C18 and L61: ( C12 "\/" C13 ) = C19;
thus L62: ( C12 "\/" ( C13 "\/" C14 ) ) = ( C15 \/ C18 ) by L57 , L60 , L32
.= ( C15 \/ ( C16 \/ C17 ) ) by L58 , L59 , L60 , L32
.= ( ( C15 \/ C16 ) \/ C17 ) by XBOOLE_1:4
.= ( C19 \/ C17 ) by L57 , L58 , L61 , L32
.= ( ( C12 "\/" C13 ) "\/" C14 ) by L59 , L61 , L32;
end;
L63: (for B38 , B39 being (Element of D8) holds ( ( B38 "/\" B39 ) "\/" B39 ) = B39)
proof
let C20 , C21 being (Element of D8);
consider C22 , C23 , C24 being (Element of ( OpenClosedSet R1 )) such that L64: C20 = C22 and L65: C21 = C23 and L66: ( C20 "/\" C21 ) = C24;
thus L67: ( ( C20 "/\" C21 ) "\/" C21 ) = ( C24 \/ C23 ) by L65 , L66 , L32
.= ( ( C22 /\ C23 ) \/ C23 ) by L64 , L65 , L66 , L36
.= C21 by L65 , XBOOLE_1:22;
end;
L68: (for B40 , B41 being (Element of D8) holds ( B40 "/\" B41 ) = ( B41 "/\" B40 ))
proof
let C25 , C26 being (Element of D8);
consider C27 , C28 being (Element of ( OpenClosedSet R1 )) such that L69: C25 = C27 and L70: C26 = C28;
thus L71: ( C25 "/\" C26 ) = ( C28 /\ C27 ) by L69 , L70 , L36
.= ( C26 "/\" C25 ) by L69 , L70 , L36;
end;
L72: (for B42 , B43 , B44 being (Element of D8) holds ( B42 "/\" ( B43 "/\" B44 ) ) = ( ( B42 "/\" B43 ) "/\" B44 ))
proof
let C29 , C30 , C31 being (Element of D8);
consider C32 , C33 , C34 , C35 , C36 being (Element of ( OpenClosedSet R1 )) such that L73: C29 = C32 and L74: C30 = C33 and L75: C31 = C34 and L76: ( C30 "/\" C31 ) = C35 and L77: ( C29 "/\" C30 ) = C36;
thus L78: ( C29 "/\" ( C30 "/\" C31 ) ) = ( C32 /\ C35 ) by L73 , L76 , L36
.= ( C32 /\ ( C33 /\ C34 ) ) by L74 , L75 , L76 , L36
.= ( ( C32 /\ C33 ) /\ C34 ) by XBOOLE_1:16
.= ( C36 /\ C34 ) by L73 , L74 , L77 , L36
.= ( ( C29 "/\" C30 ) "/\" C31 ) by L75 , L77 , L36;
end;
L79: (for B45 , B46 being (Element of D8) holds ( B45 "/\" ( B45 "\/" B46 ) ) = B45)
proof
let C37 , C38 being (Element of D8);
consider C39 , C40 , C41 being (Element of ( OpenClosedSet R1 )) such that L80: C37 = C39 and L81: C38 = C40 and L82: ( C37 "\/" C38 ) = C41;
thus L83: ( C37 "/\" ( C37 "\/" C38 ) ) = ( C39 /\ C41 ) by L80 , L82 , L36
.= ( C39 /\ ( C39 \/ C40 ) ) by L80 , L81 , L82 , L32
.= C37 by L80 , XBOOLE_1:21;
end;
L84: D8 is  join-commutative  join-associative  meet-absorbing  meet-commutative  meet-associative  join-absorbing by L79 , L52 , L56 , L63 , L68 , L72 , LATTICES:def 4 , LATTICES:def 5 , LATTICES:def 6 , LATTICES:def 7 , LATTICES:def 8 , LATTICES:def 9;
thus L85: thesis by L84;
end;
definition
let C42 being non  empty TopSpace;
func OpenClosedSetLatt C42 -> Lattice equals 
LattStr (# ( OpenClosedSet C42 ) , ( T_join C42 ) , ( T_meet C42 ) #);
coherence by L51;
end;
theorem
L87: (for B47 being non  empty TopSpace holds (for B48 , B49 being (Element of ( OpenClosedSetLatt B47 )) holds ( B48 "\/" B49 ) = ( B48 \/ B49 ))) by L32;
theorem
L88: (for B50 being non  empty TopSpace holds (for B51 , B52 being (Element of ( OpenClosedSetLatt B50 )) holds ( B51 "/\" B52 ) = ( B51 /\ B52 ))) by L36;
theorem
L89: (for R1 being non  empty TopSpace holds (the carrier of ( OpenClosedSetLatt R1 )) = ( OpenClosedSet R1 ));
registration
let R1 being non  empty TopSpace;
cluster ( OpenClosedSetLatt R1 ) ->  Boolean;
coherence
proof
set D9 = ( OpenClosedSetLatt R1 );
L90: (for B53 , B54 , B55 being (Element of D9) holds ( B53 "/\" ( B54 "\/" B55 ) ) = ( ( B53 "/\" B54 ) "\/" ( B53 "/\" B55 ) ))
proof
let C43 , C44 , C45 being (Element of D9);
set D10 = ( C43 "/\" C45 );
consider C46 , C47 , C48 , C49 , C50 , C51 being (Element of ( OpenClosedSet R1 )) such that L91: C43 = C46 and L92: C44 = C47 and L93: C45 = C48 and L94: ( C44 "\/" C45 ) = C49 and L95: ( C43 "/\" C44 ) = C50 and L96: D10 = C51;
L97: ( C46 /\ C48 ) = D10 by L91 , L93 , L36;
thus L98: ( C43 "/\" ( C44 "\/" C45 ) ) = ( C46 /\ C49 ) by L91 , L94 , L36
.= ( C46 /\ ( C47 \/ C48 ) ) by L92 , L93 , L94 , L32
.= ( ( C46 /\ C47 ) \/ ( C46 /\ C48 ) ) by XBOOLE_1:23
.= ( C50 \/ C51 ) by L91 , L92 , L95 , L96 , L97 , L36
.= ( ( C43 "/\" C44 ) "\/" ( C43 "/\" C45 ) ) by L95 , L96 , L32;
end;
reconsider D11 = ( {} R1 ) as (Element of D9) by L18;
reconsider D12 = ( [#] R1 ) as (Element of D9) by L18;
L99: (for B56 being (Element of D9) holds (( D12 "\/" B56 ) = D12 & ( B56 "\/" D12 ) = D12))
proof
let C52 being (Element of D9);
reconsider D13 = C52 as (Element of ( OpenClosedSet R1 ));
thus L100: ( D12 "\/" C52 ) = ( ( [#] R1 ) \/ D13 ) by L32
.= D12 by XBOOLE_1:12;
thus L101: thesis by L100;
end;
L102: (for B57 being (Element of D9) holds (( D11 "/\" B57 ) = D11 & ( B57 "/\" D11 ) = D11))
proof
let C53 being (Element of D9);
reconsider D14 = C53 as (Element of ( OpenClosedSet R1 ));
thus L103: ( D11 "/\" C53 ) = ( ( {} ) /\ D14 ) by L36
.= D11;
thus L104: thesis by L103;
end;
L105: D9 is  lower-bounded by L102 , LATTICES:def 13;
L106: D9 is  upper-bounded by L99 , LATTICES:def 14;
L107: ( {} R1 ) = ( Bottom D9 ) by L102 , L105 , LATTICES:def 16;
L108: ( [#] R1 ) = ( Top D9 ) by L99 , L106 , LATTICES:def 17;
thus L109: D9 is  bounded by L105 , L106;
reconsider D15 = D9 as 01_Lattice by L105 , L106;
L110: (for B58 being (Element of D15) holds (ex B59 being (Element of D15) st B59 is_a_complement_of B58))
proof
let C54 being (Element of D15);
reconsider D16 = C54 as (Element of ( OpenClosedSet R1 ));
reconsider D17 = ( D16 ` ) as (Element of D15) by L45;
L111: ( D17 "\/" C54 ) = ( D16 \/ ( D16 ` ) ) by L32
.= ( Top D15 ) by L108 , PRE_TOPC:2;
L112: D16 misses ( D16 ` ) by XBOOLE_1:79;
L113: ( D17 "/\" C54 ) = ( D16 /\ ( D16 ` ) ) by L36
.= ( Bottom D15 ) by L107 , L112 , XBOOLE_0:def 7;
take D17;
thus L114: thesis by L111 , L113 , LATTICES:def 18;
end;
thus L115: thesis by L110 , L90 , LATTICES:def 11 , LATTICES:def 19;
end;
end;
theorem
L117: (for R1 being non  empty TopSpace holds ( [#] R1 ) is (Element of ( OpenClosedSetLatt R1 ))) by L18;
theorem
L118: (for R1 being non  empty TopSpace holds ( {} R1 ) is (Element of ( OpenClosedSetLatt R1 ))) by L18;
registration
cluster non  trivial for B_Lattice;
existence
proof
set D18 = the non  empty TopSpace;
reconsider D19 = ( OpenClosedSetLatt D18 ) as B_Lattice;
reconsider D20 = ( [#] D18 ) , D21 = ( {} D18 ) as (Element of D19) by L18;
take D19;
take D20;
take D21;
thus L119: thesis;
end;
end;
definition
let R9 being non  trivial B_Lattice;
func ultraset R9 -> (Subset-Family of R9) equals 
{ R16 where R16 is (Filter of R9) : R16 is  being_ultrafilter };
coherence
proof
set D22 = { R16 where R16 is (Filter of R9) : R16 is  being_ultrafilter };
L121: D22 c= ( bool (the carrier of R9) )
proof
let R6 being set;
assume L122: R6 in D22;
L123: (ex R15 being (Filter of R9) st (R15 = R6 & R15 is  being_ultrafilter)) by L122;
thus L124: thesis by L123;
end;
thus L125: thesis by L121;
end;
end;
registration
let R9 being non  trivial B_Lattice;
cluster ( ultraset R9 ) -> non  empty;
coherence
proof
set D23 = { R16 where R16 is (Filter of R9) : R16 is  being_ultrafilter };
consider C55 , C56 being (Element of R9) such that L127: C55 <> C56 by STRUCT_0:def 10;
L128: (C55 <> ( Bottom R9 ) or C56 <> ( Bottom R9 )) by L127;
consider C57 being (Element of R9) such that L129: C57 <> ( Bottom R9 ) by L128;
consider C58 being (Filter of R9) such that L130: C57 in C58 and L131: C58 is  being_ultrafilter by L129 , FILTER_0:20;
L132: C58 in D23 by L131;
thus L133: thesis by L132;
end;
end;
theorem
L135: (for R6 being set holds (for R9 being non  trivial B_Lattice holds (R6 in ( ultraset R9 ) iff (ex R15 being (Filter of R9) st (R15 = R6 & R15 is  being_ultrafilter)))));
theorem
L136: (for R9 being non  trivial B_Lattice holds (for R10 being (Element of R9) holds { R16 where R16 is (Filter of R9) : (R16 is  being_ultrafilter & R10 in R16) } c= ( ultraset R9 )))
proof
let R9 being non  trivial B_Lattice;
let R10 being (Element of R9);
let R6 being set;
assume L137: R6 in { R16 where R16 is (Filter of R9) : (R16 is  being_ultrafilter & R10 in R16) };
L138: (ex R15 being (Filter of R9) st (R15 = R6 & R15 is  being_ultrafilter & R10 in R15)) by L137;
thus L139: thesis by L138;
end;
definition
let R9 being non  trivial B_Lattice;
func UFilter R9 -> Function means 
:L140: (( dom it ) = (the carrier of R9) & (for B60 being (Element of R9) holds ( it . B60 ) = { R15 where R15 is (Filter of R9) : (R15 is  being_ultrafilter & B60 in R15) }));
existence
proof
deffunc H3(set) = { R16 where R16 is (Filter of R9) : (R16 is  being_ultrafilter & $1 in R16) };
consider C59 being Function such that L141: ( dom C59 ) = (the carrier of R9) and L142: (for R6 being set holds (R6 in (the carrier of R9) implies ( C59 . R6 ) = H3(R6))) from FUNCT_1:sch 3;
take C59;
thus L143: thesis by L141 , L142;
end;
uniqueness
proof
let C60 , C61 being Function;
assume that
L144: (( dom C60 ) = (the carrier of R9) & (for R10 being (Element of R9) holds ( C60 . R10 ) = { R16 where R16 is (Filter of R9) : (R16 is  being_ultrafilter & R10 in R16) }))
and
L145: (( dom C61 ) = (the carrier of R9) & (for R10 being (Element of R9) holds ( C61 . R10 ) = { R16 where R16 is (Filter of R9) : (R16 is  being_ultrafilter & R10 in R16) }));
L146:
now
let R6 being set;
assume L147: R6 in (the carrier of R9);
reconsider D24 = R6 as (Element of R9) by L147;
thus L148: ( C60 . R6 ) = { R16 where R16 is (Filter of R9) : (R16 is  being_ultrafilter & D24 in R16) } by L144
.= ( C61 . R6 ) by L145;
end;
thus L149: thesis by L146 , L144 , L145 , FUNCT_1:2;
end;
end;
theorem
L151: (for R6 being set holds (for R9 being non  trivial B_Lattice holds (for R10 being (Element of R9) holds (R6 in ( ( UFilter R9 ) . R10 ) iff (ex R16 being (Filter of R9) st (R16 = R6 & R16 is  being_ultrafilter & R10 in R16))))))
proof
let R6 being set;
let R9 being non  trivial B_Lattice;
let R10 being (Element of R9);
L152: (R6 in ( ( UFilter R9 ) . R10 ) implies (ex R16 being (Filter of R9) st (R16 = R6 & R16 is  being_ultrafilter & R10 in R16)))
proof
assume L153: R6 in ( ( UFilter R9 ) . R10 );
L154: R6 in { R15 where R15 is (Filter of R9) : (R15 is  being_ultrafilter & R10 in R15) } by L153 , L140;
consider R16 being (Filter of R9) such that L155: R16 = R6 and L156: R16 is  being_ultrafilter and L157: R10 in R16 by L154;
take R16;
thus L158: thesis by L155 , L156 , L157;
end;
L159: ((ex R16 being (Filter of R9) st (R16 = R6 & R16 is  being_ultrafilter & R10 in R16)) implies R6 in ( ( UFilter R9 ) . R10 ))
proof
assume L160: (ex R16 being (Filter of R9) st (R16 = R6 & R16 is  being_ultrafilter & R10 in R16));
L161: R6 in { R15 where R15 is (Filter of R9) : (R15 is  being_ultrafilter & R10 in R15) } by L160;
thus L162: thesis by L161 , L140;
end;
thus L163: thesis by L159 , L152;
end;
theorem
L164: (for R9 being non  trivial B_Lattice holds (for R10 being (Element of R9) holds (for R16 being (Filter of R9) holds (R16 in ( ( UFilter R9 ) . R10 ) iff (R16 is  being_ultrafilter & R10 in R16)))))
proof
let R9 being non  trivial B_Lattice;
let R10 being (Element of R9);
let R16 being (Filter of R9);
thus L165:now
assume L166: R16 in ( ( UFilter R9 ) . R10 );
L167: (ex R17 being (Filter of R9) st (R17 = R16 & R17 is  being_ultrafilter & R10 in R17)) by L166 , L151;
thus L168: (R16 is  being_ultrafilter & R10 in R16) by L167;
end;
thus L169: thesis by L151;
end;
theorem
L170: (for R9 being non  trivial B_Lattice holds (for R10 being (Element of R9) holds (for R11 being (Element of R9) holds (for R16 being (Filter of R9) holds (R16 is  being_ultrafilter implies (( R10 "\/" R11 ) in R16 iff (R10 in R16 or R11 in R16)))))))
proof
let R9 being non  trivial B_Lattice;
let R10 being (Element of R9);
let R11 being (Element of R9);
let R16 being (Filter of R9);
assume L171: R16 is  being_ultrafilter;
L172: R16 is  prime by L171 , FILTER_0:45;
thus L173: thesis by L172 , FILTER_0:def 5;
end;
theorem
L174: (for R9 being non  trivial B_Lattice holds (for R10 being (Element of R9) holds (for R11 being (Element of R9) holds ( ( UFilter R9 ) . ( R10 "/\" R11 ) ) = ( ( ( UFilter R9 ) . R10 ) /\ ( ( UFilter R9 ) . R11 ) ))))
proof
let R9 being non  trivial B_Lattice;
let R10 being (Element of R9);
let R11 being (Element of R9);
L175: ( ( UFilter R9 ) . ( R10 "/\" R11 ) ) c= ( ( ( UFilter R9 ) . R10 ) /\ ( ( UFilter R9 ) . R11 ) )
proof
let R6 being set;
set D25 = ( R10 "/\" R11 );
assume L176: R6 in ( ( UFilter R9 ) . D25 );
consider R17 being (Filter of R9) such that L177: R6 = R17 and L178: R17 is  being_ultrafilter and L179: D25 in R17 by L176 , L151;
L180: R10 in R17 by L179 , FILTER_0:8;
L181: R11 in R17 by L179 , FILTER_0:8;
L182: R17 in ( ( UFilter R9 ) . R10 ) by L178 , L180 , L151;
L183: R17 in ( ( UFilter R9 ) . R11 ) by L178 , L181 , L151;
thus L184: thesis by L183 , L177 , L182 , XBOOLE_0:def 4;
end;
L185: ( ( ( UFilter R9 ) . R10 ) /\ ( ( UFilter R9 ) . R11 ) ) c= ( ( UFilter R9 ) . ( R10 "/\" R11 ) )
proof
let R6 being set;
assume L186: R6 in ( ( ( UFilter R9 ) . R10 ) /\ ( ( UFilter R9 ) . R11 ) );
L187: R6 in ( ( UFilter R9 ) . R10 ) by L186 , XBOOLE_0:def 4;
L188: R6 in ( ( UFilter R9 ) . R11 ) by L186 , XBOOLE_0:def 4;
L189: (ex R17 being (Filter of R9) st (R6 = R17 & R17 is  being_ultrafilter & R10 in R17)) by L187 , L151;
L190: (ex R17 being (Filter of R9) st (R6 = R17 & R17 is  being_ultrafilter & R11 in R17)) by L188 , L151;
consider R17 being (Filter of R9) such that L191: R6 = R17 and L192: R17 is  being_ultrafilter and L193: R10 in R17 and L194: R11 in R17 by L190 , L189;
L195: ( R10 "/\" R11 ) in R17 by L193 , L194 , FILTER_0:8;
thus L196: thesis by L195 , L191 , L192 , L151;
end;
thus L197: thesis by L185 , L175 , XBOOLE_0:def 10;
end;
theorem
L198: (for R9 being non  trivial B_Lattice holds (for R10 being (Element of R9) holds (for R11 being (Element of R9) holds ( ( UFilter R9 ) . ( R10 "\/" R11 ) ) = ( ( ( UFilter R9 ) . R10 ) \/ ( ( UFilter R9 ) . R11 ) ))))
proof
let R9 being non  trivial B_Lattice;
let R10 being (Element of R9);
let R11 being (Element of R9);
L199: ( ( UFilter R9 ) . ( R10 "\/" R11 ) ) c= ( ( ( UFilter R9 ) . R10 ) \/ ( ( UFilter R9 ) . R11 ) )
proof
let R6 being set;
set D26 = ( R10 "\/" R11 );
assume L200: R6 in ( ( UFilter R9 ) . D26 );
consider R17 being (Filter of R9) such that L201: R6 = R17 and L202: R17 is  being_ultrafilter and L203: D26 in R17 by L200 , L151;
L204: (R10 in R17 or R11 in R17) by L202 , L203 , L170;
L205: (R17 in ( ( UFilter R9 ) . R10 ) or R17 in ( ( UFilter R9 ) . R11 )) by L204 , L202 , L151;
thus L206: thesis by L205 , L201 , XBOOLE_0:def 3;
end;
L207: ( ( ( UFilter R9 ) . R10 ) \/ ( ( UFilter R9 ) . R11 ) ) c= ( ( UFilter R9 ) . ( R10 "\/" R11 ) )
proof
let R6 being set;
assume L208: R6 in ( ( ( UFilter R9 ) . R10 ) \/ ( ( UFilter R9 ) . R11 ) );
L209: (R6 in ( ( UFilter R9 ) . R10 ) or R6 in ( ( UFilter R9 ) . R11 )) by L208 , XBOOLE_0:def 3;
L210: ((ex R17 being (Filter of R9) st (R6 = R17 & R17 is  being_ultrafilter & R10 in R17)) or (ex R17 being (Filter of R9) st (R6 = R17 & R17 is  being_ultrafilter & R11 in R17))) by L209 , L151;
consider R17 being (Filter of R9) such that L211: R6 = R17 and L212: R17 is  being_ultrafilter and L213: (R10 in R17 or R11 in R17) by L210;
L214: ( R10 "\/" R11 ) in R17 by L212 , L213 , L170;
thus L215: thesis by L214 , L211 , L212 , L151;
end;
thus L216: thesis by L207 , L199 , XBOOLE_0:def 10;
end;
definition
let R9 being non  trivial B_Lattice;
redefine func UFilter R9 -> (Function of (the carrier of R9) , ( bool ( ultraset R9 ) ));

coherence
proof
reconsider D27 = ( UFilter R9 ) as Function;
L217: ( dom D27 ) = (the carrier of R9) by L140;
L218: ( rng D27 ) c= ( bool ( ultraset R9 ) )
proof
let R7 being set;
assume L219: R7 in ( rng D27 );
consider R6 being set such that L220: R6 in ( dom D27 ) and L221: R7 = ( D27 . R6 ) by L219 , FUNCT_1:def 3;
L222: R7 = { R16 where R16 is (Filter of R9) : (R16 is  being_ultrafilter & R6 in R16) } by L217 , L220 , L221 , L140;
L223: R7 c= ( ultraset R9 ) by L222 , L217 , L220 , L136;
thus L224: thesis by L223;
end;
reconsider D28 = D27 as (Function of (the carrier of R9) , ( bool ( ultraset R9 ) )) by L218 , L217 , FUNCT_2:def 1 , RELSET_1:4;
L225: (for R10 being (Element of R9) holds ( D28 . R10 ) = { R16 where R16 is (Filter of R9) : (R16 is  being_ultrafilter & R10 in R16) }) by L140;
thus L226: thesis by L225;
end;
end;
definition
let R9 being non  trivial B_Lattice;
func StoneR R9 -> set equals 
( rng ( UFilter R9 ) );
coherence;
end;
registration
let R9 being non  trivial B_Lattice;
cluster ( StoneR R9 ) -> non  empty;
coherence;
end;
theorem
L230: (for R9 being non  trivial B_Lattice holds ( StoneR R9 ) c= ( bool ( ultraset R9 ) ));
theorem
L231: (for R6 being set holds (for R9 being non  trivial B_Lattice holds (R6 in ( StoneR R9 ) iff (ex R10 being (Element of R9) st ( ( UFilter R9 ) . R10 ) = R6))))
proof
let R6 being set;
let R9 being non  trivial B_Lattice;
L232: (R6 in ( StoneR R9 ) implies (ex R10 being (Element of R9) st ( ( UFilter R9 ) . R10 ) = R6))
proof
assume L233: R6 in ( StoneR R9 );
consider R7 being set such that L234: R7 in ( dom ( UFilter R9 ) ) and L235: R6 = ( ( UFilter R9 ) . R7 ) by L233 , FUNCT_1:def 3;
reconsider D29 = R7 as (Element of R9) by L234;
take D29;
thus L236: thesis by L235;
end;
L237: ((ex R10 being (Element of R9) st ( ( UFilter R9 ) . R10 ) = R6) implies R6 in ( StoneR R9 ))
proof
given R10 being (Element of R9) such that
L238: R6 = ( ( UFilter R9 ) . R10 );

L239: R10 in (the carrier of R9);
L240: R10 in ( dom ( UFilter R9 ) ) by L239 , L140;
thus L241: thesis by L240 , L238 , FUNCT_1:def 3;
end;
thus L242: thesis by L237 , L232;
end;
definition
let R9 being non  trivial B_Lattice;
func StoneSpace R9 ->  strict TopSpace means 
:L243: ((the carrier of it) = ( ultraset R9 ) & (the topology of it) = { ( union B61 ) where B61 is (Subset-Family of ( ultraset R9 )) : B61 c= ( StoneR R9 ) });
existence
proof
set D30 = ( ultraset R9 );
set D31 = { ( union B62 ) where B62 is (Subset-Family of ( ultraset R9 )) : B62 c= ( StoneR R9 ) };
L244: D31 c= ( bool D30 )
proof
let R6 being set;
assume L245: R6 in D31;
L246: (ex B63 being (Subset-Family of ( ultraset R9 )) st (R6 = ( union B63 ) & B63 c= ( StoneR R9 ))) by L245;
thus L247: thesis by L246;
end;
reconsider D32 = { ( union B64 ) where B64 is (Subset-Family of ( ultraset R9 )) : B64 c= ( StoneR R9 ) } as (Subset-Family of D30) by L244;
L248: TopStruct (# D30 , D32 #) is  strict  strict  strict  strict TopSpace
proof
set D33 = TopStruct (# D30 , D32 #);
L249: (the carrier of D33) in (the topology of D33)
proof
set D34 = { R16 where R16 is (Filter of R9) : (R16 is  being_ultrafilter & ( Top R9 ) in R16) };
L250: D34 c= ( ultraset R9 )
proof
let R6 being set;
assume L251: R6 in D34;
L252: (ex R16 being (Filter of R9) st (R16 = R6 & R16 is  being_ultrafilter & ( Top R9 ) in R16)) by L251;
thus L253: thesis by L252;
end;
L254: ( bool D34 ) c= ( bool ( ultraset R9 ) ) by L250 , ZFMISC_1:67;
L255: { D34 } c= ( bool D34 ) by ZFMISC_1:68;
reconsider D35 = { D34 } as (Subset-Family of ( ultraset R9 )) by L255 , L254 , XBOOLE_1:1;
reconsider D36 = D35 as (Subset-Family of ( ultraset R9 ));
L256: ( union D36 ) = D34 by ZFMISC_1:25;
L257: ( ultraset R9 ) c= D34
proof
let R6 being set;
assume L258: R6 in ( ultraset R9 );
consider R16 being (Filter of R9) such that L259: R16 = R6 and L260: R16 is  being_ultrafilter by L258;
L261: ( Top R9 ) in R16 by FILTER_0:11;
thus L262: thesis by L261 , L259 , L260;
end;
L263: ( ultraset R9 ) = ( union D36 ) by L257 , L256 , XBOOLE_0:def 10;
L264: ( ( UFilter R9 ) . ( Top R9 ) ) = { R16 where R16 is (Filter of R9) : (R16 is  being_ultrafilter & ( Top R9 ) in R16) } by L140;
L265: D34 in ( StoneR R9 ) by L264 , L231;
L266: D36 c= ( StoneR R9 ) by L265 , ZFMISC_1:31;
thus L267: thesis by L266 , L263;
end;
L268: (for B65 being (Subset-Family of D33) holds (B65 c= (the topology of D33) implies ( union B65 ) in (the topology of D33)))
proof
let C62 being (Subset-Family of D33);
assume L269: C62 c= (the topology of D33);
set D37 = { B66 where B66 is (Subset of ( StoneR R9 )) : ( union B66 ) in C62 };
L270: D37 c= ( bool ( StoneR R9 ) )
proof
let R6 being set;
assume L271: R6 in D37;
L272: (ex B67 being (Subset of ( StoneR R9 )) st (B67 = R6 & ( union B67 ) in C62)) by L271;
reconsider D38 = R6 as (Subset of ( StoneR R9 )) by L272;
L273: D38 c= ( StoneR R9 );
thus L274: thesis by L273;
end;
reconsider D39 = D37 as (Subset-Family of ( StoneR R9 )) by L270;
L275: ( union ( union D39 ) ) = ( union { ( union B68 ) where B68 is (Subset of ( StoneR R9 )) : B68 in D39 } ) by EQREL_1:54;
L276: C62 c= { ( union B69 ) where B69 is (Subset of ( StoneR R9 )) : B69 in D39 }
proof
let R6 being set;
assume L277: R6 in C62;
L278: R6 in D32 by L277 , L269;
consider C63 being (Subset-Family of ( ultraset R9 )) such that L279: R6 = ( union C63 ) and L280: C63 c= ( StoneR R9 ) by L278;
L281: C63 in D39 by L277 , L279 , L280;
thus L282: thesis by L281 , L279;
end;
L283: { ( union B70 ) where B70 is (Subset of ( StoneR R9 )) : B70 in D39 } c= C62
proof
let R6 being set;
assume L284: R6 in { ( union B71 ) where B71 is (Subset of ( StoneR R9 )) : B71 in D39 };
consider C64 being (Subset of ( StoneR R9 )) such that L285: ( union C64 ) = R6 and L286: C64 in D39 by L284;
L287: (ex B72 being (Subset of ( StoneR R9 )) st (B72 = C64 & ( union B72 ) in C62)) by L286;
thus L288: thesis by L287 , L285;
end;
L289: C62 = { ( union B73 ) where B73 is (Subset of ( StoneR R9 )) : B73 in D39 } by L283 , L276 , XBOOLE_0:def 10;
L290: ( union D39 ) is (Subset-Family of ( ultraset R9 )) by XBOOLE_1:1;
thus L291: thesis by L290 , L275 , L289;
end;
L292: (for B74 , B75 being (Subset of D33) holds ((B74 in (the topology of D33) & B75 in (the topology of D33)) implies ( B74 /\ B75 ) in (the topology of D33)))
proof
let C65 , C66 being (Subset of D33);
assume that
L293: C65 in (the topology of D33)
and
L294: C66 in (the topology of D33);
consider C67 being (Subset-Family of ( ultraset R9 )) such that L295: ( union C67 ) = C65 and L296: C67 c= ( StoneR R9 ) by L293;
consider C68 being (Subset-Family of ( ultraset R9 )) such that L297: ( union C68 ) = C66 and L298: C68 c= ( StoneR R9 ) by L294;
L299: ( ( union C67 ) /\ ( union C68 ) ) = ( union ( INTERSECTION (C67 , C68) ) ) by SETFAM_1:28;
L300: ( INTERSECTION (C67 , C68) ) c= ( bool ( ultraset R9 ) )
proof
let R6 being set;
assume L301: R6 in ( INTERSECTION (C67 , C68) );
consider C69 , C70 being set such that L302: C69 in C67 and L303: C70 in C68 and L304: R6 = ( C69 /\ C70 ) by L301 , SETFAM_1:def 5;
L305: ( C69 /\ C70 ) c= ( C69 \/ C70 ) by XBOOLE_1:29;
L306: ( C69 \/ C70 ) c= ( ultraset R9 ) by L302 , L303 , XBOOLE_1:8;
L307: ( C69 /\ C70 ) c= ( ultraset R9 ) by L306 , L305 , XBOOLE_1:1;
thus L308: thesis by L307 , L304;
end;
reconsider D40 = ( INTERSECTION (C67 , C68) ) as (Subset-Family of ( ultraset R9 )) by L300;
reconsider D41 = D40 as (Subset-Family of ( ultraset R9 ));
L309: D41 c= ( StoneR R9 )
proof
let R6 being set;
assume L310: R6 in D41;
consider C71 , C72 being set such that L311: C71 in C67 and L312: C72 in C68 and L313: R6 = ( C71 /\ C72 ) by L310 , SETFAM_1:def 5;
consider R10 being (Element of R9) such that L314: C71 = ( ( UFilter R9 ) . R10 ) by L296 , L311 , L231;
consider R11 being (Element of R9) such that L315: C72 = ( ( UFilter R9 ) . R11 ) by L298 , L312 , L231;
L316: C71 = { R16 where R16 is (Filter of R9) : (R16 is  being_ultrafilter & R10 in R16) } by L314 , L140;
L317: C72 = { R16 where R16 is (Filter of R9) : (R16 is  being_ultrafilter & R11 in R16) } by L315 , L140;
L318: ( C71 /\ C72 ) = { R16 where R16 is (Filter of R9) : (R16 is  being_ultrafilter & ( R10 "/\" R11 ) in R16) }
proof
L319: ( C71 /\ C72 ) c= { R16 where R16 is (Filter of R9) : (R16 is  being_ultrafilter & ( R10 "/\" R11 ) in R16) }
proof
let R6 being set;
assume L320: R6 in ( C71 /\ C72 );
L321: R6 in C71 by L320 , XBOOLE_0:def 4;
L322: R6 in C72 by L320 , XBOOLE_0:def 4;
consider R18 being (Filter of R9) such that L323: R6 = R18 and L324: R18 is  being_ultrafilter and L325: R10 in R18 by L316 , L321;
L326: (ex R19 being (Filter of R9) st (R6 = R19 & R19 is  being_ultrafilter & R11 in R19)) by L317 , L322;
L327: ( R10 "/\" R11 ) in R18 by L326 , L323 , L325 , FILTER_0:8;
thus L328: thesis by L327 , L323 , L324;
end;
L329: { R16 where R16 is (Filter of R9) : (R16 is  being_ultrafilter & ( R10 "/\" R11 ) in R16) } c= ( C71 /\ C72 )
proof
let R6 being set;
assume L330: R6 in { R16 where R16 is (Filter of R9) : (R16 is  being_ultrafilter & ( R10 "/\" R11 ) in R16) };
consider R17 being (Filter of R9) such that L331: R6 = R17 and L332: R17 is  being_ultrafilter and L333: ( R10 "/\" R11 ) in R17 by L330;
L334: R10 in R17 by L333 , FILTER_0:8;
consider R16 being (Filter of R9) such that L335: R16 = R17 and L336: R16 is  being_ultrafilter and L337: R10 in R16 by L334 , L332;
L338: R16 in C71 by L316 , L336 , L337;
L339: R11 in R17 by L333 , FILTER_0:8;
consider R18 being (Filter of R9) such that L340: R18 = R17 and L341: R18 is  being_ultrafilter and L342: R11 in R18 by L339 , L332;
L343: R18 in C72 by L317 , L341 , L342;
thus L344: thesis by L343 , L331 , L335 , L338 , L340 , XBOOLE_0:def 4;
end;
thus L345: thesis by L329 , L319 , XBOOLE_0:def 10;
end;
L346: ( ( UFilter R9 ) . ( R10 "/\" R11 ) ) = { R16 where R16 is (Filter of R9) : (R16 is  being_ultrafilter & ( R10 "/\" R11 ) in R16) } by L140;
thus L347: thesis by L346 , L313 , L318 , L231;
end;
thus L348: thesis by L309 , L295 , L297 , L299;
end;
thus L349: thesis by L292 , L249 , L268 , PRE_TOPC:def 1;
end;
reconsider D42 = TopStruct (# D30 , D32 #) as  strict TopSpace by L248;
take D42;
thus L350: thesis;
end;
uniqueness;
end;
registration
let R9 being non  trivial B_Lattice;
cluster ( StoneSpace R9 ) -> non  empty;
coherence
proof
L352: (the carrier of ( StoneSpace R9 )) = ( ultraset R9 ) by L243;
thus L353: (the carrier of ( StoneSpace R9 )) is non  empty by L352;
end;
end;
theorem
L355: (for R9 being non  trivial B_Lattice holds (for R10 being (Element of R9) holds (for R16 being (Filter of R9) holds ((R16 is  being_ultrafilter & (not R16 in ( ( UFilter R9 ) . R10 ))) implies (not R10 in R16))))) by L164;
theorem
L356: (for R9 being non  trivial B_Lattice holds (for R10 being (Element of R9) holds ( ( ultraset R9 ) \ ( ( UFilter R9 ) . R10 ) ) = ( ( UFilter R9 ) . ( R10 ` ) )))
proof
let R9 being non  trivial B_Lattice;
let R10 being (Element of R9);
thus L357:now
let R6 being set;
assume L358: R6 in ( ( ultraset R9 ) \ ( ( UFilter R9 ) . R10 ) );
L359: R6 in ( ultraset R9 ) by L358 , XBOOLE_0:def 5;
L360: (not R6 in ( ( UFilter R9 ) . R10 )) by L358 , XBOOLE_0:def 5;
consider R16 being (Filter of R9) such that L361: R16 = R6 and L362: R16 is  being_ultrafilter by L359;
L363: (not R10 in R16) by L360 , L361 , L362 , L164;
L364: ( R10 ` ) in R16 by L363 , L362 , FILTER_0:46;
thus L365: R6 in ( ( UFilter R9 ) . ( R10 ` ) ) by L364 , L361 , L362 , L164;
end;
thus L366:now
let R6 being set;
assume L367: R6 in ( ( UFilter R9 ) . ( R10 ` ) );
consider R16 being (Filter of R9) such that L368: R16 = R6 and L369: R16 is  being_ultrafilter and L370: ( R10 ` ) in R16 by L367 , L151;
L371: (not R10 in R16) by L369 , L370 , FILTER_0:46;
L372: R16 in ( ultraset R9 ) by L369;
L373: (not R16 in ( ( UFilter R9 ) . R10 )) by L371 , L164;
thus L374: R6 in ( ( ultraset R9 ) \ ( ( UFilter R9 ) . R10 ) ) by L373 , L368 , L372 , XBOOLE_0:def 5;
end;
end;
definition
let R9 being non  trivial B_Lattice;
func StoneBLattice R9 -> Lattice equals 
( OpenClosedSetLatt ( StoneSpace R9 ) );
coherence;
end;
L368: (for R9 being non  trivial B_Lattice holds (for B76 being (Subset of ( StoneSpace R9 )) holds (B76 in ( StoneR R9 ) implies B76 is  open)))
proof
let R9 being non  trivial B_Lattice;
let C73 being (Subset of ( StoneSpace R9 ));
assume L369: C73 in ( StoneR R9 );
L370: { C73 } is (Subset-Family of ( ultraset R9 )) by L369 , SUBSET_1:41;
L371: { C73 } c= ( StoneR R9 ) by L369 , ZFMISC_1:31;
L372: ( union { C73 } ) = C73 by ZFMISC_1:25;
L373: C73 in { ( union B77 ) where B77 is (Subset-Family of ( ultraset R9 )) : B77 c= ( StoneR R9 ) } by L372 , L370 , L371;
L374: C73 in (the topology of ( StoneSpace R9 )) by L373 , L243;
thus L375: thesis by L374 , PRE_TOPC:def 2;
end;
registration
let R9 being non  trivial B_Lattice;
cluster ( UFilter R9 ) ->  one-to-one;
coherence
proof
L376:
now
let R10 being (Element of R9);
let R11 being (Element of R9);
assume that
L377: ( ( UFilter R9 ) . R10 ) = ( ( UFilter R9 ) . R11 );
assume L378: (not R10 = R11);
consider R15 being (Filter of R9) such that L379: R15 is  being_ultrafilter and L380: ((R10 in R15 & (not R11 in R15)) or ((not R10 in R15) & R11 in R15)) by L378 , FILTER_0:47;
L381:
now
per cases  by L380;
case L382: (R10 in R15 & (not R11 in R15));
L383: R15 in ( ( UFilter R9 ) . R10 ) by L382 , L379 , L164;
thus L384: ( ( UFilter R9 ) . R10 ) <> ( ( UFilter R9 ) . R11 ) by L383 , L382 , L164;
end;
case L385: ((not R10 in R15) & R11 in R15);
L386: (not R15 in ( ( UFilter R9 ) . R10 )) by L385 , L164;
thus L387: ( ( UFilter R9 ) . R10 ) <> ( ( UFilter R9 ) . R11 ) by L386 , L379 , L380 , L164;
end;
end;
thus L389: contradiction by L381 , L377;
end;
thus L390: thesis by L376 , GROUP_6:1;
end;
end;
theorem
L392: (for R9 being non  trivial B_Lattice holds ( union ( StoneR R9 ) ) = ( ultraset R9 ))
proof
let R9 being non  trivial B_Lattice;
set D43 = the (Element of ( OpenClosedSet ( StoneSpace R9 ) ));
reconsider D44 = D43 as (Subset of ( StoneSpace R9 ));
L393: D44 is  open by L10;
L394: D44 is  closed by L14;
L395: D44 in (the topology of ( StoneSpace R9 )) by L393 , PRE_TOPC:def 2;
L396: D44 in { ( union B78 ) where B78 is (Subset-Family of ( ultraset R9 )) : B78 c= ( StoneR R9 ) } by L395 , L243;
consider C74 being (Subset-Family of ( ultraset R9 )) such that L397: ( union C74 ) = D44 and L398: C74 c= ( StoneR R9 ) by L396;
L399: ( D44 ` ) is  open by L394;
L400: ( D44 ` ) in (the topology of ( StoneSpace R9 )) by L399 , PRE_TOPC:def 2;
L401: ( D44 ` ) in { ( union B79 ) where B79 is (Subset-Family of ( ultraset R9 )) : B79 c= ( StoneR R9 ) } by L400 , L243;
consider C75 being (Subset-Family of ( ultraset R9 )) such that L402: ( union C75 ) = ( D44 ` ) and L403: C75 c= ( StoneR R9 ) by L401;
L404: ( C74 \/ C75 ) c= ( StoneR R9 ) by L398 , L403 , XBOOLE_1:8;
L405: ( union ( C74 \/ C75 ) ) c= ( union ( StoneR R9 ) ) by L404 , ZFMISC_1:77;
L406: ( D44 \/ ( D44 ` ) ) c= ( union ( StoneR R9 ) ) by L405 , L397 , L402 , ZFMISC_1:78;
L407: ( [#] ( StoneSpace R9 ) ) c= ( union ( StoneR R9 ) ) by L406 , PRE_TOPC:2;
L408: ( ultraset R9 ) c= ( union ( StoneR R9 ) ) by L407 , L243;
L409: ( union ( StoneR R9 ) ) c= ( union ( bool ( ultraset R9 ) ) ) by ZFMISC_1:77;
L410: ( union ( StoneR R9 ) ) c= ( ultraset R9 ) by L409 , ZFMISC_1:81;
thus L411: thesis by L410 , L408 , XBOOLE_0:def 10;
end;
theorem
L412: (for B80 being non  empty set holds (ex B81 being (Finite_Subset of B80) st B81 is non  empty))
proof
let C76 being non  empty set;
set D45 = the (Element of C76);
L413: {. D45 .} is (Finite_Subset of C76);
thus L414: thesis by L413;
end;
registration
let C77 being non  empty set;
cluster non  empty for (Finite_Subset of C77);
existence by L412;
end;
theorem
L416: (for B82 being non  trivial B_Lattice holds (for B83 being non  empty (Subset of B82) holds (( Bottom B82 ) in <. B83 .) implies (ex B84 being non  empty (Finite_Subset of (the carrier of B82)) st (B84 c= B83 & ( FinMeet B84 ) = ( Bottom B82 ))))))
proof
let C78 being non  trivial B_Lattice;
let C79 being non  empty (Subset of C78);
assume that
L417: ( Bottom C78 ) in <. C79 .);
set D46 = { ( FinMeet B85 ) where B85 is (Element of ( Fin (the carrier of C78) )) : (B85 c= C79 & B85 <> ( {} )) };
set D47 = { B86 where B86 is (Element of C78) : (ex B87 being (Element of C78) st (B87 in D46 & B87 [= B86)) };
L418: D47 c= (the carrier of C78)
proof
let R6 being set;
assume L419: R6 in D47;
L420: (ex B88 being (Element of C78) st (B88 = R6 & (ex B89 being (Element of C78) st (B89 in D46 & B89 [= B88)))) by L419;
thus L421: thesis by L420;
end;
L422: D47 is non  empty
proof
consider C80 being (Finite_Subset of C79) such that L423: C80 is non  empty by L412;
L424: C80 is (Subset of C79) by FINSUB_1:17;
L425: C80 c= (the carrier of C78) by L424 , XBOOLE_1:1;
L426: C80 is (Element of ( Fin (the carrier of C78) )) by L425 , FINSUB_1:def 5;
consider C81 being (Element of ( Fin (the carrier of C78) )) such that L427: C81 <> ( {} ) and L428: C81 c= C79 by L426 , L423 , L424;
reconsider D48 = ( FinMeet C81 ) as (Element of C78);
L429: D48 in D46 by L427 , L428;
L430: D48 in D47 by L429;
thus L431: thesis by L430;
end;
reconsider D49 = D47 as non  empty (Subset of C78) by L422 , L418;
L432: (for B90 , B91 being (Element of C78) holds ((B90 in D49 & B91 in D49) implies ( B90 "/\" B91 ) in D49))
proof
let C82 , C83 being (Element of C78);
assume that
L433: C82 in D49
and
L434: C83 in D49;
consider C84 being (Element of C78) such that L435: C84 = C82 and L436: (ex B92 being (Element of C78) st (B92 in D46 & B92 [= C84)) by L433;
consider C85 being (Element of C78) such that L437: C85 in D46 and L438: C85 [= C84 by L436;
consider C86 being (Element of C78) such that L439: C86 = C83 and L440: (ex B93 being (Element of C78) st (B93 in D46 & B93 [= C86)) by L434;
consider C87 being (Element of C78) such that L441: C87 in D46 and L442: C87 [= C86 by L440;
L443: ( C85 "/\" C87 ) [= ( C84 "/\" C86 ) by L438 , L442 , FILTER_0:5;
consider C88 being (Element of ( Fin (the carrier of C78) )) such that L444: C85 = ( FinMeet C88 ) and L445: C88 c= C79 and L446: C88 <> ( {} ) by L437;
consider C89 being (Element of ( Fin (the carrier of C78) )) such that L447: C87 = ( FinMeet C89 ) and L448: C89 c= C79 and L449: C89 <> ( {} ) by L441;
L450: ( C85 "/\" C87 ) = ( FinMeet ( C88 \/ C89 ) ) by L444 , L447 , LATTICE4:23;
L451: ( C88 \/ C89 ) c= C79 by L445 , L448 , XBOOLE_1:8;
L452: ( C85 "/\" C87 ) in D46 by L451 , L446 , L450;
thus L453: thesis by L452 , L435 , L439 , L443;
end;
L454: (for B94 , B95 being (Element of C78) holds ((B94 in D49 & B94 [= B95) implies B95 in D49))
proof
let C90 , C91 being (Element of C78);
assume that
L455: C90 in D49
and
L456: C90 [= C91;
L457: (ex B96 being (Element of C78) st (B96 = C90 & (ex B97 being (Element of C78) st (B97 in D46 & B97 [= B96)))) by L455;
L458: (ex B98 being (Element of C78) st (B98 = C91 & (ex B99 being (Element of C78) st (B99 in D46 & B99 [= B98)))) by L456 , L457 , LATTICES:7;
thus L459: thesis by L458;
end;
L460: D49 is (Filter of C78) by L454 , L432 , FILTER_0:9;
L461: C79 c= D49
proof
let R6 being set;
assume L462: R6 in C79;
L463: { R6 } c= C79 by L462 , ZFMISC_1:31;
L464: { R6 } c= (the carrier of C78) by L462 , ZFMISC_1:31;
reconsider D50 = { R6 } as (Element of ( Fin (the carrier of C78) )) by L464 , FINSUB_1:def 5;
L465: R6 = ( ( id (the carrier of C78) ) . R6 ) by L462 , FUNCT_1:18
.= ( (the L_meet of C78) $$ (D50 , ( id (the carrier of C78) )) ) by L462 , SETWISEO:17
.= ( FinMeet (D50 , ( id C78 )) ) by LATTICE2:def 4
.= ( FinMeet D50 ) by LATTICE4:def 8;
reconsider D51 = ( FinMeet D50 ) as (Element of C78);
L466: D51 in D46 by L463;
thus L467: thesis by L466 , L465;
end;
L468: <. C79 .) c= D49 by L461 , L460 , FILTER_0:def 4;
L469: ( Bottom C78 ) in D49 by L468 , L417;
L470: (ex B100 being (Element of C78) st (B100 = ( Bottom C78 ) & (ex B101 being (Element of C78) st (B101 in D46 & B101 [= B100)))) by L469;
consider C92 being (Element of C78) such that L471: C92 in D46 and L472: C92 [= ( Bottom C78 ) by L470;
L473: ( Bottom C78 ) [= C92 by LATTICES:16;
L474: ( Bottom C78 ) in D46 by L473 , L471 , L472 , LATTICES:8;
L475: (ex B102 being (Finite_Subset of (the carrier of C78)) st (( Bottom C78 ) = ( FinMeet B102 ) & B102 c= C79 & B102 <> ( {} ))) by L474;
thus L476: thesis by L475;
end;
theorem
L477: (for B103 being 0_Lattice holds (not (ex B104 being (Filter of B103) st (B104 is  being_ultrafilter & ( Bottom B103 ) in B104))))
proof
let C93 being 0_Lattice;
given C94 being (Filter of C93) such that
L478: C94 is  being_ultrafilter
and
L479: ( Bottom C93 ) in C94;

L480: C94 = (the carrier of C93) by L479 , FILTER_0:26;
thus L481: contradiction by L480 , L478 , FILTER_0:def 3;
end;
theorem
L482: (for R9 being non  trivial B_Lattice holds ( ( UFilter R9 ) . ( Bottom R9 ) ) = ( {} ))
proof
let R9 being non  trivial B_Lattice;
assume L483: ( ( UFilter R9 ) . ( Bottom R9 ) ) <> ( {} );
set D52 = the (Element of ( ( UFilter R9 ) . ( Bottom R9 ) ));
L484: (ex R16 being (Filter of R9) st (R16 = D52 & R16 is  being_ultrafilter & ( Bottom R9 ) in R16)) by L483 , L151;
thus L485: contradiction by L484 , L477;
end;
theorem
L486: (for R9 being non  trivial B_Lattice holds ( ( UFilter R9 ) . ( Top R9 ) ) = ( ultraset R9 ))
proof
let R9 being non  trivial B_Lattice;
thus L487: ( ( UFilter R9 ) . ( Top R9 ) ) = ( ( UFilter R9 ) . ( ( Bottom R9 ) ` ) ) by LATTICE4:30
.= ( ( ultraset R9 ) \ ( ( UFilter R9 ) . ( Bottom R9 ) ) ) by L356
.= ( ( ultraset R9 ) \ ( {} ) ) by L482
.= ( ultraset R9 );
end;
theorem
L488: (for R8 being set holds (for R9 being non  trivial B_Lattice holds ((( ultraset R9 ) = ( union R8 ) & R8 is (Subset of ( StoneR R9 ))) implies (ex B105 being (Finite_Subset of R8) st ( ultraset R9 ) = ( union B105 )))))
proof
let R8 being set;
let R9 being non  trivial B_Lattice;
assume that
L489: ( ultraset R9 ) = ( union R8 )
and
L490: R8 is (Subset of ( StoneR R9 ));
assume L491: (not thesis);
consider C95 being (Finite_Subset of R8) such that L492: C95 is non  empty by L489 , L412 , ZFMISC_1:2;
L493: C95 c= R8 by FINSUB_1:def 5;
L494: C95 c= ( StoneR R9 ) by L493 , L490 , XBOOLE_1:1;
set D53 = the (Element of C95);
L495: D53 in R8 by L492 , L493 , TARSKI:def 3;
L496: D53 in ( StoneR R9 ) by L492 , L494 , TARSKI:def 3;
consider R11 being (Element of R9) such that L497: D53 = ( ( UFilter R9 ) . R11 ) by L496 , L231;
set D54 = { ( R10 ` ) where R10 is (Element of R9) : ( ( UFilter R9 ) . R10 ) in R8 };
consider R12 being (Element of R9) such that L498: R12 = ( R11 ` );
L499: R12 in D54 by L495 , L497 , L498;
L500: D54 c= (the carrier of R9)
proof
let R6 being set;
assume L501: R6 in D54;
L502: (ex R11 being (Element of R9) st (R6 = ( R11 ` ) & ( ( UFilter R9 ) . R11 ) in R8)) by L501;
thus L503: thesis by L502;
end;
reconsider D55 = D54 as non  empty (Subset of R9) by L500 , L499;
set D56 = <. D55 .);
L504: (for B106 being non  empty (Finite_Subset of (the carrier of R9)) holds (B106 c= D55 implies ( FinMeet B106 ) <> ( Bottom R9 )))
proof
let C96 being non  empty (Finite_Subset of (the carrier of R9));
assume that
L505: C96 c= D55
and
L506: ( FinMeet C96 ) = ( Bottom R9 );
L507: C96 is (Subset of R9) by FINSUB_1:17;
L508: ( dom ( UFilter R9 ) ) = (the carrier of R9) by FUNCT_2:def 1;
L509: ( ( UFilter R9 ) .: C96 ) c= ( rng ( UFilter R9 ) ) by RELAT_1:111;
reconsider D57 = ( ( UFilter R9 ) .: C96 ) as non  empty (Subset-Family of ( ultraset R9 )) by L509 , L507 , L508 , XBOOLE_1:1;
L510:
now
set D58 = the (Element of ( ( UFilter R9 ) . ( Bottom R9 ) ));
assume L511: ( {} ( ultraset R9 ) ) <> ( ( UFilter R9 ) . ( Bottom R9 ) );
L512: (ex R16 being (Filter of R9) st (R16 = D58 & R16 is  being_ultrafilter & ( Bottom R9 ) in R16)) by L511 , L151;
thus L513: contradiction by L512 , L477;
end;
deffunc H4((Subset of ( ultraset R9 )) , (Subset of ( ultraset R9 ))) = ( $1 /\ $2 );
consider C97 being (BinOp of ( bool ( ultraset R9 ) )) such that L514: (for B107 , B108 being (Subset of ( ultraset R9 )) holds ( C97 . (B107 , B108) ) = H4(B107 , B108)) from BINOP_1:sch 4;
L515: C97 is  commutative
proof
let C98 , C99 being (Subset of ( ultraset R9 ));
L516: ( C97 . (C98 , C99) ) = ( C99 /\ C98 ) by L514
.= ( C97 . (C99 , C98) ) by L514;
thus L517: thesis by L516;
end;
L518: C97 is  associative
proof
let C100 , C101 , C102 being (Subset of ( ultraset R9 ));
L519: ( C97 . (C100 , ( C97 . (C101 , C102) )) ) = ( C97 . (C100 , ( C101 /\ C102 )) ) by L514
.= ( C100 /\ ( C101 /\ C102 ) ) by L514
.= ( ( C100 /\ C101 ) /\ C102 ) by XBOOLE_1:16
.= ( C97 . (( C100 /\ C101 ) , C102) ) by L514
.= ( C97 . (( C97 . (C100 , C101) ) , C102) ) by L514;
thus L520: thesis by L519;
end;
L521: C97 is  idempotent
proof
let C103 being (Subset of ( ultraset R9 ));
L522: ( C97 . (C103 , C103) ) = ( C103 /\ C103 ) by L514
.= C103;
thus L523: thesis by L522;
end;
L524: (for B109 , B110 being (Element of R9) holds ( ( UFilter R9 ) . ( (the L_meet of R9) . (B109 , B110) ) ) = ( C97 . (( ( UFilter R9 ) . B109 ) , ( ( UFilter R9 ) . B110 )) ))
proof
let C104 , C105 being (Element of R9);
thus L525: ( ( UFilter R9 ) . ( (the L_meet of R9) . (C104 , C105) ) ) = ( ( UFilter R9 ) . ( C104 "/\" C105 ) )
.= ( ( ( UFilter R9 ) . C104 ) /\ ( ( UFilter R9 ) . C105 ) ) by L174
.= ( C97 . (( ( UFilter R9 ) . C104 ) , ( ( UFilter R9 ) . C105 )) ) by L514;
end;
reconsider D59 = D57 as (Element of ( Fin ( bool ( ultraset R9 ) ) ));
L526: ( id R9 ) = ( id (the carrier of R9) );
L527: ( ( UFilter R9 ) . ( FinMeet C96 ) ) = ( ( UFilter R9 ) . ( FinMeet (C96 , ( id (the carrier of R9) )) ) ) by L526 , LATTICE4:def 8
.= ( ( UFilter R9 ) . ( (the L_meet of R9) $$ (C96 , ( id (the carrier of R9) )) ) ) by LATTICE2:def 4
.= ( C97 $$ (C96 , ( ( UFilter R9 ) * ( id (the carrier of R9) ) )) ) by L515 , L518 , L521 , L524 , SETWISEO:30
.= ( C97 $$ (C96 , ( UFilter R9 )) ) by FUNCT_2:17
.= ( C97 $$ (C96 , ( ( id ( bool ( ultraset R9 ) ) ) * ( UFilter R9 ) )) ) by FUNCT_2:17
.= ( C97 $$ (D59 , ( id ( bool ( ultraset R9 ) ) )) ) by L515 , L518 , L521 , SETWISEO:29;
defpred S1[ (Element of ( Fin ( bool ( ultraset R9 ) ) )) ] means (for B111 being non  empty (Subset-Family of ( ultraset R9 )) holds (B111 = $1 implies ( C97 $$ ($1 , ( id ( bool ( ultraset R9 ) ) )) ) = ( meet B111 )));
L528: S1[ ( {}. ( bool ( ultraset R9 ) ) ) ];
L529: (for B112 being (Element of ( Fin ( bool ( ultraset R9 ) ) )) holds (for B113 being (Subset of ( ultraset R9 )) holds (S1[ B112 ] implies S1[ ( B112 \/ {. B113 .} ) ])))
proof
let C106 being (Element of ( Fin ( bool ( ultraset R9 ) ) ));
let C107 being (Subset of ( ultraset R9 ));
assume L530: (for B114 being non  empty (Subset-Family of ( ultraset R9 )) holds (B114 = C106 implies ( C97 $$ (C106 , ( id ( bool ( ultraset R9 ) ) )) ) = ( meet B114 )));
let C108 being non  empty (Subset-Family of ( ultraset R9 ));
assume that
L531: C108 = ( C106 \/ { C107 } );
L532:
now
per cases ;
suppose L533: C106 is  empty;

thus L534: ( C97 $$ (( C106 \/ {. C107 .} ) , ( id ( bool ( ultraset R9 ) ) )) ) = ( ( id ( bool ( ultraset R9 ) ) ) . C107 ) by L533 , L515 , L518 , SETWISEO:17
.= C107 by FUNCT_1:18
.= ( meet C108 ) by L531 , L533 , SETFAM_1:10;
end;
suppose L535: C106 is non  empty;

L536: C106 c= C108 by L531 , XBOOLE_1:7;
reconsider D60 = C106 as non  empty (Subset-Family of ( ultraset R9 )) by L536 , L535 , XBOOLE_1:1;
reconsider D61 = D60 as non  empty (Subset-Family of ( ultraset R9 ));
thus L537: ( C97 $$ (( C106 \/ {. C107 .} ) , ( id ( bool ( ultraset R9 ) ) )) ) = ( C97 . (( C97 $$ (C106 , ( id ( bool ( ultraset R9 ) ) )) ) , ( ( id ( bool ( ultraset R9 ) ) ) . C107 )) ) by L515 , L518 , L521 , L535 , SETWISEO:20
.= ( C97 . (( C97 $$ (C106 , ( id ( bool ( ultraset R9 ) ) )) ) , C107) ) by FUNCT_1:18
.= ( ( C97 $$ (C106 , ( id ( bool ( ultraset R9 ) ) )) ) /\ C107 ) by L514
.= ( ( meet D61 ) /\ C107 ) by L530
.= ( ( meet D61 ) /\ ( meet { C107 } ) ) by SETFAM_1:10
.= ( meet C108 ) by L531 , SETFAM_1:9;
end;
end;
thus L539: thesis by L532;
end;
L540: (for B115 being (Element of ( Fin ( bool ( ultraset R9 ) ) )) holds S1[ B115 ]) from SETWISEO:sch 4(L528 , L529);
L541: ( meet D57 ) = ( {} ( ultraset R9 ) ) by L540 , L506 , L510 , L527;
L542: ( union ( COMPLEMENT D57 ) ) = ( ( [#] ( ultraset R9 ) ) \ ( {} ) ) by L541 , SETFAM_1:34
.= ( ultraset R9 );
L543: ( COMPLEMENT D57 ) c= R8
proof
let R6 being set;
assume L544: R6 in ( COMPLEMENT D57 );
reconsider D62 = R6 as (Subset of ( ultraset R9 )) by L544;
L545: ( D62 ` ) in D57 by L544 , SETFAM_1:def 7;
consider C109 being set such that L546: C109 in ( dom ( UFilter R9 ) ) and L547: C109 in C96 and L548: ( D62 ` ) = ( ( UFilter R9 ) . C109 ) by L545 , FUNCT_1:def 6;
reconsider D63 = C109 as (Element of R9) by L546;
L549: D63 in D55 by L505 , L547;
L550: ( ( D63 ` ) ` ) in D55 by L549;
consider C110 being (Element of R9) such that L551: ( C110 ` ) = ( ( D63 ` ) ` ) and L552: ( ( UFilter R9 ) . C110 ) in R8 by L550;
L553: R6 = ( ( ( UFilter R9 ) . D63 ) ` ) by L548
.= ( ( UFilter R9 ) . ( D63 ` ) ) by L356
.= ( ( UFilter R9 ) . ( ( C110 ` ) ` ) ) by L551
.= ( ( UFilter R9 ) . C110 );
thus L554: thesis by L553 , L552;
end;
L555: ( COMPLEMENT D57 ) is  finite
proof
L556: D57 is  finite;
deffunc H5((Subset of ( ultraset R9 ))) = ( $1 ` );
L557: { H5(B116) where B116 is (Subset of ( ultraset R9 )) : B116 in D57 } is  finite from FRAENKEL:sch 21(L556);
L558: { ( B117 ` ) where B117 is (Subset of ( ultraset R9 )) : B117 in D57 } = ( COMPLEMENT D57 )
proof
thus L559:now
let R6 being set;
assume L560: R6 in { ( B118 ` ) where B118 is (Subset of ( ultraset R9 )) : B118 in D57 };
consider C111 being (Subset of ( ultraset R9 )) such that L561: ( C111 ` ) = R6 and L562: C111 in D57 by L560;
L563: ( ( C111 ` ) ` ) in D57 by L562;
thus L564: R6 in ( COMPLEMENT D57 ) by L563 , L561 , SETFAM_1:def 7;
end;
let R6 being set;
assume L565: R6 in ( COMPLEMENT D57 );
reconsider D64 = R6 as (Subset of ( ultraset R9 )) by L565;
L566: ( D64 ` ) in D57 by L565 , SETFAM_1:def 7;
L567: ( ( D64 ` ) ` ) = D64;
thus L568: thesis by L567 , L566;
end;
thus L569: thesis by L558 , L557;
end;
L570: ( COMPLEMENT D57 ) is (Finite_Subset of R8) by L555 , L543 , FINSUB_1:def 5;
thus L571: contradiction by L570 , L491 , L542;
end;
L572: D56 <> (the carrier of R9) by L504 , L416;
consider R16 being (Filter of R9) such that L573: D56 c= R16 and L574: R16 is  being_ultrafilter by L572 , FILTER_0:18;
L575: D55 c= D56 by FILTER_0:def 4;
L576: (not R16 in ( union R8 ))
proof
assume L577: R16 in ( union R8 );
consider C112 being set such that L578: R16 in C112 and L579: C112 in R8 by L577 , TARSKI:def 4;
consider C113 being set such that L580: C113 in ( dom ( UFilter R9 ) ) and L581: C112 = ( ( UFilter R9 ) . C113 ) by L490 , L579 , FUNCT_1:def 3;
reconsider D65 = C113 as (Element of R9) by L580;
L582: ( D65 ` ) in D55 by L579 , L581;
L583: ( D65 ` ) in D56 by L582 , L575;
L584: D65 in R16 by L578 , L581 , L164;
thus L585: contradiction by L584 , L573 , L574 , L583 , FILTER_0:46;
end;
thus L586: contradiction by L576 , L489 , L574;
end;
L587: (for R9 being non  trivial B_Lattice holds ( StoneR R9 ) c= ( OpenClosedSet ( StoneSpace R9 ) ))
proof
let R9 being non  trivial B_Lattice;
let R6 being set;
assume L588: R6 in ( StoneR R9 );
reconsider D66 = R6 as (Subset of ( StoneSpace R9 )) by L588 , L243;
L589: D66 is  open by L588 , L368;
L590: D66 is  closed
proof
set D67 = ( StoneSpace R9 );
L591: ( [#] D67 ) = ( ultraset R9 ) by L243;
consider R10 being (Element of R9) such that L592: ( ( UFilter R9 ) . R10 ) = D66 by L588 , L231;
L593: ( D66 ` ) = ( ( UFilter R9 ) . ( R10 ` ) ) by L591 , L592 , L356;
L594: ( D66 ` ) in ( StoneR R9 ) by L593 , L231;
L595: ( D66 ` ) is  open by L594 , L368;
thus L596: thesis by L595 , TOPS_1:3;
end;
thus L597: thesis by L590 , L589;
end;
theorem
L598: (for R9 being non  trivial B_Lattice holds ( StoneR R9 ) = ( OpenClosedSet ( StoneSpace R9 ) ))
proof
let R9 being non  trivial B_Lattice;
L599: ( StoneR R9 ) c= ( OpenClosedSet ( StoneSpace R9 ) ) by L587;
L600: ( OpenClosedSet ( StoneSpace R9 ) ) c= ( StoneR R9 )
proof
let R6 being set;
assume L601: R6 in ( OpenClosedSet ( StoneSpace R9 ) );
reconsider D68 = R6 as (Subset of ( StoneSpace R9 )) by L601;
L602: (the topology of ( StoneSpace R9 )) = { ( union B119 ) where B119 is (Subset-Family of ( ultraset R9 )) : B119 c= ( StoneR R9 ) } by L243;
L603: D68 is  open  closed by L601 , L10 , L14;
L604: ( D68 ` ) is  open  closed by L603;
L605: D68 in (the topology of ( StoneSpace R9 )) by L603 , PRE_TOPC:def 2;
consider C114 being (Subset-Family of ( ultraset R9 )) such that L606: D68 = ( union C114 ) and L607: C114 c= ( StoneR R9 ) by L605 , L602;
L608: ( D68 ` ) in (the topology of ( StoneSpace R9 )) by L604 , PRE_TOPC:def 2;
consider C115 being (Subset-Family of ( ultraset R9 )) such that L609: ( D68 ` ) = ( union C115 ) and L610: C115 c= ( StoneR R9 ) by L608 , L602;
L611: D68 is (Subset of ( ultraset R9 )) by L243;
set D69 = ( C114 \/ C115 );
L612: ( ultraset R9 ) = ( [#] ( StoneSpace R9 ) ) by L243
.= ( D68 \/ ( D68 ` ) ) by PRE_TOPC:2
.= ( union D69 ) by L606 , L609 , ZFMISC_1:78;
L613: D69 c= ( StoneR R9 ) by L607 , L610 , XBOOLE_1:8;
consider C116 being (Finite_Subset of D69) such that L614: ( ultraset R9 ) = ( union C116 ) by L613 , L612 , L488;
L615: C116 c= D69 by FINSUB_1:def 5;
L616: C116 c= ( StoneR R9 ) by L615 , L613 , XBOOLE_1:1;
set D70 = ( C114 /\ C116 );
L617: C116 = ( D69 /\ C116 ) by L615 , XBOOLE_1:28
.= ( D70 \/ ( C115 /\ C116 ) ) by XBOOLE_1:23;
L618:
now
let C117 being set;
assume L619: C117 in ( C115 /\ C116 );
L620: C117 in C115 by L619 , XBOOLE_0:def 4;
L621: C117 c= ( D68 ` ) by L620 , L609 , ZFMISC_1:74;
L622: ( D68 ` ) misses D68 by XBOOLE_1:79;
L623: ( ( D68 ` ) /\ D68 ) = ( {} ) by L622 , XBOOLE_0:def 7;
L624: ( C117 /\ D68 ) = ( {} ) by L623 , L621 , XBOOLE_1:3 , XBOOLE_1:26;
thus L625: C117 misses D68 by L624 , XBOOLE_0:def 7;
end;
L626: D68 c= ( union D70 ) by L618 , L611 , L614 , L617 , SETFAM_1:42;
per cases ;
suppose L627: D70 = ( {} );

L628: D68 = ( {} ) by L627 , L626 , ZFMISC_1:2;
L629: ( {} ) = ( ( UFilter R9 ) . ( Bottom R9 ) ) by L482;
thus L630: thesis by L629 , L628 , FUNCT_2:4;
end;
suppose L631: D70 <> ( {} );

L632: D70 c= C116 by XBOOLE_1:17;
reconsider D71 = D70 as non  empty (Subset-Family of ( ultraset R9 )) by L631;
reconsider D72 = D71 as non  empty (Subset-Family of ( ultraset R9 ));
L633: ( union D72 ) c= ( ( union C114 ) /\ ( union C116 ) ) by ZFMISC_1:79;
L634: ( ( union C114 ) /\ ( union C116 ) ) c= ( union C114 ) by XBOOLE_1:17;
L635: ( union D72 ) c= D68 by L634 , L606 , L633 , XBOOLE_1:1;
L636: D68 = ( union D72 ) by L635 , L626 , XBOOLE_0:def 10;
L637: D72 c= ( rng ( UFilter R9 ) ) by L616 , L632 , XBOOLE_1:1;
L638: ( rng ( UFilter R9 ) ) = ( dom ( id ( StoneR R9 ) ) );
L639: ( dom ( UFilter R9 ) ) = ( dom ( UFilter R9 ) );
L640: ( UFilter R9 ) = ( ( id ( StoneR R9 ) ) * ( UFilter R9 ) ) by RELAT_1:54;
L641: ( UFilter R9 ) , ( id ( StoneR R9 ) ) are_fiberwise_equipotent  by L640 , L638 , L639 , CLASSES1:77;
L642: ( card ( ( UFilter R9 ) " D72 ) ) = ( card ( ( id ( StoneR R9 ) ) " D72 ) ) by L641 , CLASSES1:78
.= ( card D72 ) by L637 , FUNCT_2:94;
L643: ( ( UFilter R9 ) " D72 ) is  finite by L642;
reconsider D73 = ( ( UFilter R9 ) " D72 ) as (Finite_Subset of (the carrier of R9)) by L643 , FINSUB_1:def 5;
L644: D72 = ( ( UFilter R9 ) .: D73 ) by L616 , L632 , FUNCT_1:77 , XBOOLE_1:1;
L645: D73 is non  empty by L644;
deffunc H6((Subset of ( ultraset R9 )) , (Subset of ( ultraset R9 ))) = ( $1 \/ $2 );
consider C118 being (BinOp of ( bool ( ultraset R9 ) )) such that L646: (for B120 , B121 being (Subset of ( ultraset R9 )) holds ( C118 . (B120 , B121) ) = H6(B120 , B121)) from BINOP_1:sch 4;
L647: C118 is  commutative
proof
let C119 , C120 being (Subset of ( ultraset R9 ));
L648: ( C118 . (C119 , C120) ) = ( C120 \/ C119 ) by L646
.= ( C118 . (C120 , C119) ) by L646;
thus L649: thesis by L648;
end;
L650: C118 is  associative
proof
let C121 , C122 , C123 being (Subset of ( ultraset R9 ));
L651: ( C118 . (C121 , ( C118 . (C122 , C123) )) ) = ( C118 . (C121 , ( C122 \/ C123 )) ) by L646
.= ( C121 \/ ( C122 \/ C123 ) ) by L646
.= ( ( C121 \/ C122 ) \/ C123 ) by XBOOLE_1:4
.= ( C118 . (( C121 \/ C122 ) , C123) ) by L646
.= ( C118 . (( C118 . (C121 , C122) ) , C123) ) by L646;
thus L652: thesis by L651;
end;
L653: C118 is  idempotent
proof
let C124 being (Subset of ( ultraset R9 ));
L654: ( C118 . (C124 , C124) ) = ( C124 \/ C124 ) by L646
.= C124;
thus L655: thesis by L654;
end;
L656: (for B122 , B123 being (Element of R9) holds ( ( UFilter R9 ) . ( (the L_join of R9) . (B122 , B123) ) ) = ( C118 . (( ( UFilter R9 ) . B122 ) , ( ( UFilter R9 ) . B123 )) ))
proof
let C125 , C126 being (Element of R9);
thus L657: ( ( UFilter R9 ) . ( (the L_join of R9) . (C125 , C126) ) ) = ( ( UFilter R9 ) . ( C125 "\/" C126 ) )
.= ( ( ( UFilter R9 ) . C125 ) \/ ( ( UFilter R9 ) . C126 ) ) by L198
.= ( C118 . (( ( UFilter R9 ) . C125 ) , ( ( UFilter R9 ) . C126 )) ) by L646;
end;
reconsider D74 = D72 as (Element of ( Fin ( bool ( ultraset R9 ) ) )) by FINSUB_1:def 5;
L658: ( id R9 ) = ( id (the carrier of R9) );
L659: ( ( UFilter R9 ) . ( FinJoin D73 ) ) = ( ( UFilter R9 ) . ( FinJoin (D73 , ( id (the carrier of R9) )) ) ) by L658 , LATTICE4:def 7
.= ( ( UFilter R9 ) . ( (the L_join of R9) $$ (D73 , ( id (the carrier of R9) )) ) ) by LATTICE2:def 3
.= ( C118 $$ (D73 , ( ( UFilter R9 ) * ( id (the carrier of R9) ) )) ) by L645 , L647 , L650 , L653 , L656 , SETWISEO:30
.= ( C118 $$ (D73 , ( UFilter R9 )) ) by FUNCT_2:17
.= ( C118 $$ (D73 , ( ( id ( bool ( ultraset R9 ) ) ) * ( UFilter R9 ) )) ) by FUNCT_2:17
.= ( C118 $$ (D74 , ( id ( bool ( ultraset R9 ) ) )) ) by L644 , L645 , L647 , L650 , L653 , SETWISEO:29;
defpred S2[ (Element of ( Fin ( bool ( ultraset R9 ) ) )) ] means (for B124 being non  empty (Subset-Family of ( ultraset R9 )) holds (B124 = $1 implies ( C118 $$ ($1 , ( id ( bool ( ultraset R9 ) ) )) ) = ( union B124 )));
L660: S2[ ( {}. ( bool ( ultraset R9 ) ) ) ];
L661: (for B125 being (Element of ( Fin ( bool ( ultraset R9 ) ) )) holds (for B126 being (Subset of ( ultraset R9 )) holds (S2[ B125 ] implies S2[ ( B125 \/ {. B126 .} ) ])))
proof
let C127 being (Element of ( Fin ( bool ( ultraset R9 ) ) ));
let C128 being (Subset of ( ultraset R9 ));
assume L662: (for B127 being non  empty (Subset-Family of ( ultraset R9 )) holds (B127 = C127 implies ( C118 $$ (C127 , ( id ( bool ( ultraset R9 ) ) )) ) = ( union B127 )));
let C129 being non  empty (Subset-Family of ( ultraset R9 ));
assume that
L663: C129 = ( C127 \/ { C128 } );
L664:
now
per cases ;
suppose L665: C127 is  empty;

thus L666: ( C118 $$ (( C127 \/ {. C128 .} ) , ( id ( bool ( ultraset R9 ) ) )) ) = ( ( id ( bool ( ultraset R9 ) ) ) . C128 ) by L665 , L647 , L650 , SETWISEO:17
.= C128 by FUNCT_1:18
.= ( union C129 ) by L663 , L665 , ZFMISC_1:25;
end;
suppose L667: C127 is non  empty;

L668: C127 c= C129 by L663 , XBOOLE_1:7;
reconsider D75 = C127 as non  empty (Subset-Family of ( ultraset R9 )) by L668 , L667 , XBOOLE_1:1;
reconsider D76 = D75 as non  empty (Subset-Family of ( ultraset R9 ));
thus L669: ( C118 $$ (( C127 \/ {. C128 .} ) , ( id ( bool ( ultraset R9 ) ) )) ) = ( C118 . (( C118 $$ (C127 , ( id ( bool ( ultraset R9 ) ) )) ) , ( ( id ( bool ( ultraset R9 ) ) ) . C128 )) ) by L647 , L650 , L653 , L667 , SETWISEO:20
.= ( C118 . (( C118 $$ (C127 , ( id ( bool ( ultraset R9 ) ) )) ) , C128) ) by FUNCT_1:18
.= ( ( C118 $$ (C127 , ( id ( bool ( ultraset R9 ) ) )) ) \/ C128 ) by L646
.= ( ( union D76 ) \/ C128 ) by L662
.= ( ( union D76 ) \/ ( union { C128 } ) ) by ZFMISC_1:25
.= ( union C129 ) by L663 , ZFMISC_1:78;
end;
end;
thus L671: thesis by L664;
end;
L672: (for B128 being (Element of ( Fin ( bool ( ultraset R9 ) ) )) holds S2[ B128 ]) from SETWISEO:sch 4(L660 , L661);
L673: ( ( UFilter R9 ) . ( FinJoin D73 ) ) = R6 by L672 , L636 , L659;
thus L674: thesis by L673 , FUNCT_2:4;
end;
end;
thus L676: thesis by L600 , L599 , XBOOLE_0:def 10;
end;
definition
let R9 being non  trivial B_Lattice;
redefine func UFilter R9 -> (Homomorphism of R9 , ( StoneBLattice R9 ));

coherence
proof
reconsider D77 = ( UFilter R9 ) as (Function of (the carrier of R9) , ( bool ( ultraset R9 ) ));
set D78 = ( StoneBLattice R9 );
L677: ( rng D77 ) = ( StoneR R9 );
L678: ( rng D77 ) c= ( OpenClosedSet ( StoneSpace R9 ) ) by L677 , L587;
reconsider D79 = ( UFilter R9 ) as (Function of (the carrier of R9) , (the carrier of D78)) by L678 , FUNCT_2:6;
L679:
now
let R13 being (Element of R9);
let R14 being (Element of R9);
thus L680: ( D79 . ( R13 "\/" R14 ) ) = ( ( D79 . R13 ) \/ ( D79 . R14 ) ) by L198
.= ( ( D79 . R13 ) "\/" ( D79 . R14 ) ) by L32;
thus L681: ( D79 . ( R13 "/\" R14 ) ) = ( ( D79 . R13 ) /\ ( D79 . R14 ) ) by L174
.= ( ( D79 . R13 ) "/\" ( D79 . R14 ) ) by L36;
end;
thus L682: thesis by L679 , LATTICE4:def 1;
end;
end;
theorem
L684: (for R9 being non  trivial B_Lattice holds ( rng ( UFilter R9 ) ) = (the carrier of ( StoneBLattice R9 )))
proof
let R9 being non  trivial B_Lattice;
thus L685: ( rng ( UFilter R9 ) ) = ( StoneR R9 )
.= (the carrier of ( StoneBLattice R9 )) by L598;
end;
registration
let R9 being non  trivial B_Lattice;
cluster ( UFilter R9 ) ->  bijective for (Function of R9 , ( StoneBLattice R9 ));
coherence
proof
L686: ( rng ( UFilter R9 ) ) = (the carrier of ( StoneBLattice R9 )) by L684;
L687: ( UFilter R9 ) is  onto by L686 , FUNCT_2:def 3;
thus L688: thesis by L687;
end;
end;
theorem
L690: (for R9 being non  trivial B_Lattice holds R9 , ( StoneBLattice R9 ) are_isomorphic )
proof
let R9 being non  trivial B_Lattice;
L691: (ex B129 being (Homomorphism of R9 , ( StoneBLattice R9 )) st (B129 = ( UFilter R9 ) & B129 is  bijective));
thus L692: thesis by L691 , LATTICE4:def 2;
end;
::$N Stone Representation Theorem for Boolean Algebras
theorem
L693: (for B130 being non  trivial B_Lattice holds (ex B131 being non  empty TopSpace st B130 , ( OpenClosedSetLatt B131 ) are_isomorphic ))
proof
let C130 being non  trivial B_Lattice;
reconsider D80 = ( StoneSpace C130 ) as non  empty TopSpace;
take D80;
L694: ( OpenClosedSetLatt D80 ) = ( StoneBLattice C130 );
thus L695: thesis by L694 , L690;
end;
