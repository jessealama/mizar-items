:: A Theory of Matrices of Complex Elements
::  by Wenpai Chang , Hiroshi Yamazaki and Yatsuka Nakamura
::
:: Received December 10, 2004
:: Copyright (c) 2004-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies GROUP_1, COMPLFLD, SUPINF_2, CARD_1, MATRIX_1, NUMBERS, ARYTM_3,
      ARYTM_1, RELAT_1, XCMPLX_0, ORDINAL1, SUBSET_1, FINSEQ_1, TREES_1,
      VECTSP_1, NAT_1, ALGSTR_0, FUNCT_1, BINOP_2, COMPLEX1, XXREAL_0,
      VALUED_0, TARSKI, ORDINAL4, MATRIX_5;
 notations TARSKI, SUBSET_1, ORDINAL1, NAT_D, RELAT_1, FUNCT_1, VALUED_0,
      STRUCT_0, ALGSTR_0, FINSEQ_1, BINOP_1, MATRIX_3, MATRIX_1, NUMBERS,
      MATRIX_4, COMPLEX1, COMPLFLD, XCMPLX_0, GROUP_1, BINOP_2, XXREAL_0,
      VECTSP_1, RLVECT_1;
 constructors BINOP_1, COMPLFLD, FVSUM_1, MATRIX_3, MATRIX_4, BINOP_2, NAT_D,
      RVSUM_1, RELSET_1;
 registrations RELSET_1, NUMBERS, XCMPLX_0, XREAL_0, STRUCT_0, VECTSP_1,
      COMPLFLD, ORDINAL1, RVSUM_1;
 requirements NUMERALS, BOOLE, SUBSET, ARITHM;
 definitions MATRIX_4;
 theorems FINSEQ_1, FUNCT_1, NAT_1, RLVECT_1, MATRIX_3, VECTSP_1, MATRIX_1,
      MATRIX_4, COMPLFLD, COMPLEX1, GROUP_1, BINOP_2, FINSEQ_3, XCMPLX_0,
      XREAL_1, VALUED_0, XXREAL_0, XREAL_0;
 schemes NAT_1;

begin
theorem
L1: 1 = ( 1_ ( F_Complex ) ) by COMPLEX1:def 4 , COMPLFLD:8;
theorem
L2: ( 0. ( F_Complex ) ) = ( 0 ) by COMPLFLD:7;
definition
let C1 being (Matrix of ( COMPLEX ));
func COMPLEX2Field C1 -> (Matrix of ( F_Complex )) equals 
C1;
coherence by COMPLFLD:def 1;
end;
definition
let C2 being (Matrix of ( F_Complex ));
func Field2COMPLEX C2 -> (Matrix of ( COMPLEX )) equals 
C2;
coherence by COMPLFLD:def 1;
end;
theorem
L5: (for B1 , B2 being (Matrix of ( COMPLEX )) holds (( COMPLEX2Field B1 ) = ( COMPLEX2Field B2 ) implies B1 = B2));
theorem
L6: (for B3 , B4 being (Matrix of ( F_Complex )) holds (( Field2COMPLEX B3 ) = ( Field2COMPLEX B4 ) implies B3 = B4));
theorem
L7: (for B5 being (Matrix of ( COMPLEX )) holds B5 = ( Field2COMPLEX ( COMPLEX2Field B5 ) ));
theorem
L8: (for B6 being (Matrix of ( F_Complex )) holds B6 = ( COMPLEX2Field ( Field2COMPLEX B6 ) ));
definition
let C3 , C4 being (Matrix of ( COMPLEX ));
func C3 + C4 -> (Matrix of ( COMPLEX )) equals 
( Field2COMPLEX ( ( COMPLEX2Field C3 ) + ( COMPLEX2Field C4 ) ) );
coherence;
end;
definition
let C5 being (Matrix of ( COMPLEX ));
func - C5 -> (Matrix of ( COMPLEX )) equals 
( Field2COMPLEX ( - ( COMPLEX2Field C5 ) ) );
coherence;
end;
definition
let C6 , C7 being (Matrix of ( COMPLEX ));
func C6 - C7 -> (Matrix of ( COMPLEX )) equals 
( Field2COMPLEX ( ( COMPLEX2Field C6 ) - ( COMPLEX2Field C7 ) ) );
coherence;
func C6 * C7 -> (Matrix of ( COMPLEX )) equals 
( Field2COMPLEX ( ( COMPLEX2Field C6 ) * ( COMPLEX2Field C7 ) ) );
coherence;
end;
definition
let C8 being  complex number;
let C9 being (Matrix of ( COMPLEX ));
func C8 * C9 -> (Matrix of ( COMPLEX )) means 
:L12: (for B7 being (Element of ( F_Complex )) holds (B7 = C8 implies it = ( Field2COMPLEX ( B7 * ( COMPLEX2Field C9 ) ) )));
existence
proof
L13: C8 in ( COMPLEX ) by XCMPLX_0:def 2;
reconsider D1 = C8 as (Element of ( F_Complex )) by L13 , COMPLFLD:def 1;
set D2 = ( Field2COMPLEX ( D1 * ( COMPLEX2Field C9 ) ) );
L14: (for B8 being (Element of ( F_Complex )) holds (B8 = C8 implies D2 = ( Field2COMPLEX ( B8 * ( COMPLEX2Field C9 ) ) )));
thus L15: thesis by L14;
end;
uniqueness
proof
L16: C8 in ( COMPLEX ) by XCMPLX_0:def 2;
reconsider D3 = C8 as (Element of ( F_Complex )) by L16 , COMPLFLD:def 1;
let C10 , C11 being (Matrix of ( COMPLEX ));
assume that
L17: (for B9 being (Element of ( F_Complex )) holds (B9 = C8 implies C10 = ( Field2COMPLEX ( B9 * ( COMPLEX2Field C9 ) ) )))
and
L18: (for B10 being (Element of ( F_Complex )) holds (B10 = C8 implies C11 = ( Field2COMPLEX ( B10 * ( COMPLEX2Field C9 ) ) )));
L19: C11 = ( Field2COMPLEX ( D3 * ( COMPLEX2Field C9 ) ) ) by L18;
thus L20: thesis by L19 , L17;
end;
end;
theorem
L22: (for B11 being (Matrix of ( COMPLEX )) holds (( len B11 ) = ( len ( COMPLEX2Field B11 ) ) & ( width B11 ) = ( width ( COMPLEX2Field B11 ) )));
theorem
L23: (for B12 being (Matrix of ( F_Complex )) holds (( len B12 ) = ( len ( Field2COMPLEX B12 ) ) & ( width B12 ) = ( width ( Field2COMPLEX B12 ) )));
theorem
L24: (for B13 being Field holds (for B14 being (Matrix of B13) holds ( ( 1_ B13 ) * B14 ) = B14))
proof
let C12 being Field;
let C13 being (Matrix of C12);
L25: (for B15 , B16 being Nat holds ([ B15 , B16 ] in ( Indices C13 ) implies ( ( ( 1_ C12 ) * C13 ) * (B15 , B16) ) = ( C13 * (B15 , B16) )))
proof
let C14 , C15 being Nat;
L26: ( ( 1_ C12 ) * ( C13 * (C14 , C15) ) ) = ( C13 * (C14 , C15) ) by VECTSP_1:def 8;
assume L27: [ C14 , C15 ] in ( Indices C13 );
thus L28: thesis by L27 , L26 , MATRIX_3:def 5;
end;
L29: (( len ( ( 1_ C12 ) * C13 ) ) = ( len C13 ) & ( width ( ( 1_ C12 ) * C13 ) ) = ( width C13 )) by MATRIX_3:def 5;
thus L30: thesis by L29 , L25 , MATRIX_1:21;
end;
theorem
L31: (for B17 being (Matrix of ( COMPLEX )) holds ( 1 * B17 ) = B17)
proof
set D4 = ( 1_ ( F_Complex ) );
let C16 being (Matrix of ( COMPLEX ));
L32: ( 1 * C16 ) = ( Field2COMPLEX ( D4 * ( COMPLEX2Field C16 ) ) ) by L12 , COMPLEX1:def 4 , COMPLFLD:8;
thus L33: thesis by L32 , L24;
end;
theorem
L34: (for B18 being Field holds (for B19 , B20 being (Element of B18) holds (for B21 being (Matrix of B18) holds ( B19 * ( B20 * B21 ) ) = ( ( B19 * B20 ) * B21 ))))
proof
let C17 being Field;
let C18 , C19 being (Element of C17);
let C20 being (Matrix of C17);
L35: (( len ( ( C18 * C19 ) * C20 ) ) = ( len C20 ) & ( width ( ( C18 * C19 ) * C20 ) ) = ( width C20 )) by MATRIX_3:def 5;
L36: ( len ( C18 * ( C19 * C20 ) ) ) = ( len ( C19 * C20 ) ) by MATRIX_3:def 5;
L37: ( width ( C18 * ( C19 * C20 ) ) ) = ( width ( C19 * C20 ) ) by MATRIX_3:def 5;
L38: ( width ( C18 * ( C19 * C20 ) ) ) = ( width C20 ) by L37 , MATRIX_3:def 5;
L39: (( len ( C19 * C20 ) ) = ( len C20 ) & ( width ( C19 * C20 ) ) = ( width C20 )) by MATRIX_3:def 5;
L40: (for B22 , B23 being Nat holds ([ B22 , B23 ] in ( Indices ( C18 * ( C19 * C20 ) ) ) implies ( ( C18 * ( C19 * C20 ) ) * (B22 , B23) ) = ( ( ( C18 * C19 ) * C20 ) * (B22 , B23) )))
proof
let C21 , C22 being Nat;
assume L41: [ C21 , C22 ] in ( Indices ( C18 * ( C19 * C20 ) ) );
L42: ( Indices ( C19 * C20 ) ) = ( Indices C20 ) by L39 , MATRIX_4:55;
L43: ( Indices ( C18 * ( C19 * C20 ) ) ) = ( Indices ( C19 * C20 ) ) by L36 , L37 , MATRIX_4:55;
L44: ( ( C18 * ( C19 * C20 ) ) * (C21 , C22) ) = ( C18 * ( ( C19 * C20 ) * (C21 , C22) ) ) by L43 , L41 , MATRIX_3:def 5
.= ( C18 * ( C19 * ( C20 * (C21 , C22) ) ) ) by L41 , L43 , L42 , MATRIX_3:def 5
.= ( ( C18 * C19 ) * ( C20 * (C21 , C22) ) ) by GROUP_1:def 3;
thus L45: thesis by L44 , L41 , L43 , L42 , MATRIX_3:def 5;
end;
L46: ( len ( C18 * ( C19 * C20 ) ) ) = ( len C20 ) by L36 , MATRIX_3:def 5;
thus L47: thesis by L46 , L35 , L38 , L40 , MATRIX_1:21;
end;
theorem
L48: (for B24 being Field holds (for B25 , B26 being (Element of B24) holds (for B27 being (Matrix of B24) holds ( ( B25 + B26 ) * B27 ) = ( ( B25 * B27 ) + ( B26 * B27 ) ))))
proof
let C23 being Field;
let C24 , C25 being (Element of C23);
let C26 being (Matrix of C23);
L49: (( len ( C24 * C26 ) ) = ( len C26 ) & ( width ( C24 * C26 ) ) = ( width C26 )) by MATRIX_3:def 5;
L50: (( len ( ( C24 + C25 ) * C26 ) ) = ( len C26 ) & ( width ( ( C24 + C25 ) * C26 ) ) = ( width C26 )) by MATRIX_3:def 5;
L51: (for B28 , B29 being Nat holds ([ B28 , B29 ] in ( Indices ( ( C24 + C25 ) * C26 ) ) implies ( ( ( C24 + C25 ) * C26 ) * (B28 , B29) ) = ( ( ( C24 * C26 ) + ( C25 * C26 ) ) * (B28 , B29) )))
proof
let C27 , C28 being Nat;
assume L52: [ C27 , C28 ] in ( Indices ( ( C24 + C25 ) * C26 ) );
L53: ( Indices ( ( C24 + C25 ) * C26 ) ) = ( Indices C26 ) by L50 , MATRIX_4:55;
L54: ( Indices ( C24 * C26 ) ) = ( Indices C26 ) by L49 , MATRIX_4:55;
L55: ( ( ( C24 * C26 ) + ( C25 * C26 ) ) * (C27 , C28) ) = ( ( ( C24 * C26 ) * (C27 , C28) ) + ( ( C25 * C26 ) * (C27 , C28) ) ) by L54 , L52 , L53 , MATRIX_3:def 3
.= ( ( C24 * ( C26 * (C27 , C28) ) ) + ( ( C25 * C26 ) * (C27 , C28) ) ) by L52 , L53 , MATRIX_3:def 5
.= ( ( C24 * ( C26 * (C27 , C28) ) ) + ( C25 * ( C26 * (C27 , C28) ) ) ) by L52 , L53 , MATRIX_3:def 5
.= ( ( C24 + C25 ) * ( C26 * (C27 , C28) ) ) by VECTSP_1:def 7;
thus L56: thesis by L55 , L52 , L53 , MATRIX_3:def 5;
end;
L57: (( len ( ( C24 * C26 ) + ( C25 * C26 ) ) ) = ( len ( C24 * C26 ) ) & ( width ( ( C24 * C26 ) + ( C25 * C26 ) ) ) = ( width ( C24 * C26 ) )) by MATRIX_3:def 3;
thus L58: thesis by L57 , L50 , L49 , L51 , MATRIX_1:21;
end;
theorem
L59: (for B30 being (Matrix of ( COMPLEX )) holds ( B30 + B30 ) = ( 2 * B30 ))
proof
reconsider D5 = ( ( 1_ ( F_Complex ) ) + ( 1_ ( F_Complex ) ) ) as (Element of ( F_Complex ));
let C29 being (Matrix of ( COMPLEX ));
L60: ( ( 1_ ( F_Complex ) ) * ( COMPLEX2Field C29 ) ) = ( COMPLEX2Field C29 ) by L24;
L61: ( 2 * C29 ) = ( Field2COMPLEX ( D5 * ( COMPLEX2Field C29 ) ) ) by L12 , COMPLEX1:def 4 , COMPLFLD:8
.= ( Field2COMPLEX ( ( COMPLEX2Field C29 ) + ( COMPLEX2Field C29 ) ) ) by L60 , L48;
thus L62: thesis by L61;
end;
theorem
L63: (for B31 being (Matrix of ( COMPLEX )) holds ( ( B31 + B31 ) + B31 ) = ( 3 * B31 ))
proof
reconsider D6 = ( 1 + 1 ) as (Element of ( COMPLEX )) by XCMPLX_0:def 2;
reconsider D7 = ( ( ( 1_ ( F_Complex ) ) + ( 1_ ( F_Complex ) ) ) + ( 1_ ( F_Complex ) ) ) as (Element of ( F_Complex ));
let C30 being (Matrix of ( COMPLEX ));
L64: (( len C30 ) = ( len ( COMPLEX2Field C30 ) ) & ( width C30 ) = ( width ( COMPLEX2Field C30 ) ));
L65: ( ( 1_ ( F_Complex ) ) + ( 1_ ( F_Complex ) ) ) = ( (the addF of ( F_Complex )) . (( 1_ ( F_Complex ) ) , ( 1_ ( F_Complex ) )) ) by RLVECT_1:2
.= ( ( addcomplex ) . (( 1r ) , ( 1r )) ) by COMPLFLD:8 , COMPLFLD:def 1
.= ( 1 + 1 ) by BINOP_2:def 3 , COMPLEX1:def 4;
L66: ( ( ( 1_ ( F_Complex ) ) + ( 1_ ( F_Complex ) ) ) + ( 1_ ( F_Complex ) ) ) = ( (the addF of ( F_Complex )) . (( ( 1_ ( F_Complex ) ) + ( 1_ ( F_Complex ) ) ) , ( 1_ ( F_Complex ) )) ) by RLVECT_1:2
.= ( ( addcomplex ) . (( 1 + 1 ) , 1) ) by L65 , COMPLFLD:def 1
.= ( D6 + 1 ) by BINOP_2:def 3
.= 3;
L67: ( 3 * C30 ) = ( Field2COMPLEX ( D7 * ( COMPLEX2Field C30 ) ) ) by L66 , L12
.= ( Field2COMPLEX ( ( ( 1_ ( F_Complex ) ) * ( COMPLEX2Field C30 ) ) + ( ( ( 1_ ( F_Complex ) ) + ( 1_ ( F_Complex ) ) ) * ( COMPLEX2Field C30 ) ) ) ) by L48
.= ( Field2COMPLEX ( ( COMPLEX2Field C30 ) + ( ( ( 1_ ( F_Complex ) ) + ( 1_ ( F_Complex ) ) ) * ( COMPLEX2Field C30 ) ) ) ) by L24
.= ( Field2COMPLEX ( ( COMPLEX2Field C30 ) + ( ( ( 1_ ( F_Complex ) ) * ( COMPLEX2Field C30 ) ) + ( ( 1_ ( F_Complex ) ) * ( COMPLEX2Field C30 ) ) ) ) ) by L48
.= ( Field2COMPLEX ( ( COMPLEX2Field C30 ) + ( ( COMPLEX2Field C30 ) + ( ( 1_ ( F_Complex ) ) * ( COMPLEX2Field C30 ) ) ) ) ) by L24
.= ( Field2COMPLEX ( ( COMPLEX2Field C30 ) + ( ( COMPLEX2Field C30 ) + ( COMPLEX2Field C30 ) ) ) ) by L24
.= ( Field2COMPLEX ( ( ( COMPLEX2Field C30 ) + ( COMPLEX2Field C30 ) ) + ( COMPLEX2Field C30 ) ) ) by L64 , MATRIX_3:3;
thus L68: thesis by L67;
end;
definition
let C31 , C32 being Nat;
func 0_Cx (C31 , C32) -> (Matrix of ( COMPLEX )) equals 
( Field2COMPLEX ( 0. (( F_Complex ) , C31 , C32) ) );
coherence;
end;
theorem
L70: (for B32 , B33 being (Element of ( NAT )) holds ( COMPLEX2Field ( 0_Cx (B32 , B33) ) ) = ( 0. (( F_Complex ) , B32 , B33) ));
theorem
L71: (for B34 , B35 being (Matrix of ( COMPLEX )) holds ((( len B34 ) = ( len B35 ) & ( width B34 ) = ( width B35 ) & B34 = ( B34 + B35 )) implies B35 = ( 0_Cx (( len B34 ) , ( width B34 )) )))
proof
let C33 , C34 being (Matrix of ( COMPLEX ));
assume that
L72: (( len C33 ) = ( len C34 ) & ( width C33 ) = ( width C34 ))
and
L73: C33 = ( C33 + C34 );
L74: ( 0_Cx (( len C33 ) , ( width C33 )) ) = ( ( C33 + C34 ) + ( - C33 ) ) by L73 , MATRIX_4:2
.= ( Field2COMPLEX ( ( ( COMPLEX2Field C34 ) + ( COMPLEX2Field C33 ) ) - ( COMPLEX2Field C33 ) ) ) by L72 , MATRIX_3:2
.= C34 by L72 , MATRIX_4:21;
thus L75: thesis by L74;
end;
theorem
L76: (for B36 , B37 being (Matrix of ( COMPLEX )) holds ((( len B36 ) = ( len B37 ) & ( width B36 ) = ( width B37 ) & ( B36 + B37 ) = ( 0_Cx (( len B36 ) , ( width B36 )) )) implies B37 = ( - B36 )))
proof
let C35 , C36 being (Matrix of ( COMPLEX ));
assume that
L77: (( len C35 ) = ( len C36 ) & ( width C35 ) = ( width C36 ))
and
L78: ( C35 + C36 ) = ( 0_Cx (( len C35 ) , ( width C35 )) );
L79: (( len ( - C36 ) ) = ( len C36 ) & ( width ( - C36 ) ) = ( width C36 )) by MATRIX_3:def 2;
L80: ( COMPLEX2Field ( 0_Cx (( len C35 ) , ( width C35 )) ) ) = ( ( COMPLEX2Field C35 ) - ( - ( COMPLEX2Field C36 ) ) ) by L78 , MATRIX_4:1;
L81: ( COMPLEX2Field C35 ) = ( - ( COMPLEX2Field C36 ) ) by L80 , L77 , L79 , MATRIX_4:7;
thus L82: thesis by L81 , MATRIX_4:1;
end;
theorem
L83: (for B38 , B39 being (Matrix of ( COMPLEX )) holds ((( len B38 ) = ( len B39 ) & ( width B38 ) = ( width B39 ) & ( B39 - B38 ) = B39) implies B38 = ( 0_Cx (( len B38 ) , ( width B38 )) )))
proof
let C37 , C38 being (Matrix of ( COMPLEX ));
assume that
L84: (( len C37 ) = ( len C38 ) & ( width C37 ) = ( width C38 ))
and
L85: ( C38 - C37 ) = C38;
L86: ( ( COMPLEX2Field C38 ) + ( COMPLEX2Field C37 ) ) = ( COMPLEX2Field C38 ) by L84 , L85 , MATRIX_4:22;
thus L87: thesis by L86 , L84 , MATRIX_4:6;
end;
theorem
L88: (for B40 being (Matrix of ( COMPLEX )) holds ( B40 + ( 0_Cx (( len B40 ) , ( width B40 )) ) ) = B40)
proof
let C39 being (Matrix of ( COMPLEX ));
L89: (( len C39 ) = ( len ( COMPLEX2Field C39 ) ) & ( width C39 ) = ( width ( COMPLEX2Field C39 ) ));
L90: ( C39 + ( 0_Cx (( len C39 ) , ( width C39 )) ) ) = ( C39 + ( - ( 0_Cx (( len C39 ) , ( width C39 )) ) ) ) by MATRIX_4:9
.= ( Field2COMPLEX ( ( COMPLEX2Field C39 ) - ( ( COMPLEX2Field C39 ) - ( COMPLEX2Field C39 ) ) ) ) by MATRIX_4:3
.= C39 by L89 , MATRIX_4:11;
thus L91: thesis by L90;
end;
theorem
L92: (for B41 being Field holds (for B42 being (Element of B41) holds (for B43 , B44 being (Matrix of B41) holds ((( len B43 ) = ( len B44 ) & ( width B43 ) = ( width B44 )) implies ( B42 * ( B43 + B44 ) ) = ( ( B42 * B43 ) + ( B42 * B44 ) )))))
proof
let C40 being Field;
let C41 being (Element of C40);
let C42 , C43 being (Matrix of C40);
L93: (( len ( C41 * ( C42 + C43 ) ) ) = ( len ( C42 + C43 ) ) & ( width ( C41 * ( C42 + C43 ) ) ) = ( width ( C42 + C43 ) )) by MATRIX_3:def 5;
L94: (( len ( C42 + C43 ) ) = ( len C42 ) & ( width ( C42 + C43 ) ) = ( width C42 )) by MATRIX_3:def 3;
L95: (( len ( C41 * C42 ) ) = ( len C42 ) & ( width ( C41 * C42 ) ) = ( width C42 )) by MATRIX_3:def 5;
assume L96: (( len C42 ) = ( len C43 ) & ( width C42 ) = ( width C43 ));
L97: (for B45 , B46 being Nat holds ([ B45 , B46 ] in ( Indices ( C41 * ( C42 + C43 ) ) ) implies ( ( C41 * ( C42 + C43 ) ) * (B45 , B46) ) = ( ( ( C41 * C42 ) + ( C41 * C43 ) ) * (B45 , B46) )))
proof
let C44 , C45 being Nat;
assume L98: [ C44 , C45 ] in ( Indices ( C41 * ( C42 + C43 ) ) );
L99: ( Indices C43 ) = ( Indices C42 ) by L96 , MATRIX_4:55;
L100: ( Indices ( C41 * ( C42 + C43 ) ) ) = ( Indices ( C42 + C43 ) ) by L93 , MATRIX_4:55;
L101: ( Indices ( C42 + C43 ) ) = ( Indices C42 ) by L94 , MATRIX_4:55;
L102: ( Indices ( C41 * C42 ) ) = ( Indices C42 ) by L95 , MATRIX_4:55;
L103: ( ( ( C41 * C42 ) + ( C41 * C43 ) ) * (C44 , C45) ) = ( ( ( C41 * C42 ) * (C44 , C45) ) + ( ( C41 * C43 ) * (C44 , C45) ) ) by L102 , L98 , L100 , L101 , MATRIX_3:def 3
.= ( ( C41 * ( C42 * (C44 , C45) ) ) + ( ( C41 * C43 ) * (C44 , C45) ) ) by L98 , L100 , L101 , MATRIX_3:def 5
.= ( ( C41 * ( C42 * (C44 , C45) ) ) + ( C41 * ( C43 * (C44 , C45) ) ) ) by L98 , L100 , L101 , L99 , MATRIX_3:def 5
.= ( C41 * ( ( C42 * (C44 , C45) ) + ( C43 * (C44 , C45) ) ) ) by VECTSP_1:def 7;
L104: ( ( ( C41 * C42 ) + ( C41 * C43 ) ) * (C44 , C45) ) = ( C41 * ( ( C42 + C43 ) * (C44 , C45) ) ) by L103 , L98 , L100 , L101 , MATRIX_3:def 3
.= ( ( C41 * ( C42 + C43 ) ) * (C44 , C45) ) by L98 , L100 , MATRIX_3:def 5;
thus L105: thesis by L104;
end;
L106: (( len ( ( C41 * C42 ) + ( C41 * C43 ) ) ) = ( len ( C41 * C42 ) ) & ( width ( ( C41 * C42 ) + ( C41 * C43 ) ) ) = ( width ( C41 * C42 ) )) by MATRIX_3:def 3;
thus L107: thesis by L106 , L93 , L94 , L95 , L97 , MATRIX_1:21;
end;
theorem
L108: (for B47 , B48 being (Matrix of ( COMPLEX )) holds (for B49 being  complex number holds ((( len B47 ) = ( len B48 ) & ( width B47 ) = ( width B48 )) implies ( B49 * ( B47 + B48 ) ) = ( ( B49 * B47 ) + ( B49 * B48 ) ))))
proof
let C46 , C47 being (Matrix of ( COMPLEX ));
let C48 being  complex number;
assume L109: (( len C46 ) = ( len C47 ) & ( width C46 ) = ( width C47 ));
L110: C48 in ( COMPLEX ) by XCMPLX_0:def 2;
reconsider D8 = C48 as (Element of ( F_Complex )) by L110 , COMPLFLD:def 1;
L111: ( ( C48 * C46 ) + ( C48 * C47 ) ) = ( Field2COMPLEX ( ( COMPLEX2Field ( Field2COMPLEX ( D8 * ( COMPLEX2Field C46 ) ) ) ) + ( COMPLEX2Field ( C48 * C47 ) ) ) ) by L12
.= ( Field2COMPLEX ( ( D8 * ( COMPLEX2Field C46 ) ) + ( COMPLEX2Field ( Field2COMPLEX ( D8 * ( COMPLEX2Field C47 ) ) ) ) ) ) by L12
.= ( Field2COMPLEX ( ( D8 * ( COMPLEX2Field C46 ) ) + ( D8 * ( COMPLEX2Field C47 ) ) ) );
L112: ( C48 * ( C46 + C47 ) ) = ( Field2COMPLEX ( D8 * ( COMPLEX2Field ( C46 + C47 ) ) ) ) by L12
.= ( Field2COMPLEX ( ( D8 * ( COMPLEX2Field C46 ) ) + ( D8 * ( COMPLEX2Field C47 ) ) ) ) by L109 , L92;
thus L113: thesis by L112 , L111;
end;
theorem
L114: (for B50 being Field holds (for B51 , B52 being (Matrix of B50) holds ((( width B51 ) = ( len B52 ) & ( len B51 ) > ( 0 ) & ( len B52 ) > ( 0 )) implies ( ( 0. (B50 , ( len B51 ) , ( width B51 )) ) * B52 ) = ( 0. (B50 , ( len B51 ) , ( width B52 )) ))))
proof
let C49 being Field;
let C50 , C51 being (Matrix of C49);
assume that
L115: ( width C50 ) = ( len C51 )
and
L116: ( len C50 ) > ( 0 )
and
L117: ( len C51 ) > ( 0 );
L118: ( len ( 0. (C49 , ( len C50 ) , ( width C50 )) ) ) = ( len C50 ) by MATRIX_1:def 2;
L119: ( width ( 0. (C49 , ( len C50 ) , ( width C50 )) ) ) = ( width C50 ) by L118 , L116 , MATRIX_1:20;
L120: ( len ( ( 0. (C49 , ( len C50 ) , ( width C50 )) ) * C51 ) ) = ( len ( 0. (C49 , ( len C50 ) , ( width C50 )) ) ) by L119 , L115 , MATRIX_3:def 4;
L121: ( width ( ( 0. (C49 , ( len C50 ) , ( width C50 )) ) * C51 ) ) = ( width C51 ) by L115 , L119 , MATRIX_3:def 4;
set D9 = ( ( 0. (C49 , ( len C50 ) , ( width C50 )) ) * C51 );
L122: ( width ( - ( ( 0. (C49 , ( len C50 ) , ( width C50 )) ) * C51 ) ) ) = ( width ( ( 0. (C49 , ( len C50 ) , ( width C50 )) ) * C51 ) ) by MATRIX_3:def 2;
L123: ( ( 0. (C49 , ( len C50 ) , ( width C50 )) ) * C51 ) = ( ( ( 0. (C49 , ( len C50 ) , ( width C50 )) ) + ( 0. (C49 , ( len C50 ) , ( width C50 )) ) ) * C51 ) by MATRIX_3:4
.= ( ( ( 0. (C49 , ( len C50 ) , ( width C50 )) ) * C51 ) + ( ( 0. (C49 , ( len C50 ) , ( width C50 )) ) * C51 ) ) by L115 , L116 , L117 , L118 , L119 , MATRIX_4:63;
L124: (( len ( - ( ( 0. (C49 , ( len C50 ) , ( width C50 )) ) * C51 ) ) ) = ( len ( ( 0. (C49 , ( len C50 ) , ( width C50 )) ) * C51 ) ) & ( 0. (C49 , ( len C50 ) , ( width C51 )) ) = ( ( D9 + D9 ) + ( - D9 ) )) by L123 , L118 , L120 , L121 , MATRIX_3:def 2 , MATRIX_4:2;
L125: ( 0. (C49 , ( len C50 ) , ( width C51 )) ) = ( D9 + ( D9 - D9 ) ) by L124 , L122 , MATRIX_3:3
.= ( ( 0. (C49 , ( len C50 ) , ( width C50 )) ) * C51 ) by L120 , L122 , MATRIX_4:20;
thus L126: thesis by L125;
end;
theorem
L127: (for B53 , B54 being (Matrix of ( COMPLEX )) holds ((( width B53 ) = ( len B54 ) & ( len B53 ) > ( 0 ) & ( len B54 ) > ( 0 )) implies ( ( 0_Cx (( len B53 ) , ( width B53 )) ) * B54 ) = ( 0_Cx (( len B53 ) , ( width B54 )) )))
proof
let C52 , C53 being (Matrix of ( COMPLEX ));
L128: ( len C52 ) = ( len ( COMPLEX2Field C52 ) );
assume L129: (( width C52 ) = ( len C53 ) & ( len C52 ) > ( 0 ) & ( len C53 ) > ( 0 ));
thus L130: thesis by L129 , L128 , L114;
end;
theorem
L131: (for B55 being Field holds (for B56 being (Matrix of B55) holds (( len B56 ) > ( 0 ) implies ( ( 0. B55 ) * B56 ) = ( 0. (B55 , ( len B56 ) , ( width B56 )) ))))
proof
let C54 being Field;
let C55 being (Matrix of C54);
L132: ( len ( 0. (C54 , ( len C55 ) , ( width C55 )) ) ) = ( len C55 ) by MATRIX_1:def 2;
assume L133: ( len C55 ) > ( 0 );
L134: ( width ( 0. (C54 , ( len C55 ) , ( width C55 )) ) ) = ( width C55 ) by L133 , L132 , MATRIX_1:20;
L135: (for B57 , B58 being Nat holds ([ B57 , B58 ] in ( Indices ( 0. (C54 , ( len C55 ) , ( width C55 )) ) ) implies ( ( ( 0. C54 ) * C55 ) * (B57 , B58) ) = ( ( 0. (C54 , ( len C55 ) , ( width C55 )) ) * (B57 , B58) )))
proof
let C56 , C57 being Nat;
assume L136: [ C56 , C57 ] in ( Indices ( 0. (C54 , ( len C55 ) , ( width C55 )) ) );
L137: ( Indices ( 0. (C54 , ( len C55 ) , ( width C55 )) ) ) = ( Indices C55 ) by L132 , L134 , MATRIX_4:55;
L138: ( ( ( 0. C54 ) * C55 ) * (C56 , C57) ) = ( ( 0. C54 ) * ( C55 * (C56 , C57) ) ) by L137 , L136 , MATRIX_3:def 5;
L139: ( ( 0. (C54 , ( len C55 ) , ( width C55 )) ) * (C56 , C57) ) = ( 0. C54 ) by L136 , MATRIX_3:1;
thus L140: thesis by L139 , L138 , VECTSP_1:6;
end;
L141: (( len ( ( 0. C54 ) * C55 ) ) = ( len C55 ) & ( width ( ( 0. C54 ) * C55 ) ) = ( width C55 )) by MATRIX_3:def 5;
thus L142: thesis by L141 , L132 , L134 , L135 , MATRIX_1:21;
end;
theorem
L143: (for B59 being (Matrix of ( COMPLEX )) holds (( len B59 ) > ( 0 ) implies ( ( 0 ) * B59 ) = ( 0_Cx (( len B59 ) , ( width B59 )) )))
proof
reconsider D10 = ( 0 ) as (Element of ( F_Complex )) by COMPLFLD:def 1;
let C58 being (Matrix of ( COMPLEX ));
assume L144: ( len C58 ) > ( 0 );
L145: ( ( 0 ) * C58 ) = ( Field2COMPLEX ( D10 * ( COMPLEX2Field C58 ) ) ) by L12
.= ( 0_Cx (( len C58 ) , ( width C58 )) ) by L144 , L131 , COMPLFLD:7;
thus L146: thesis by L145;
end;
definition
let C59 being  complex-valued Function;
let C60 being set;
redefine func C59 . C60 -> (Element of ( COMPLEX ));

coherence
proof
per cases ;
suppose L147: C60 in ( dom C59 );

L148: ( rng C59 ) c= ( COMPLEX ) by VALUED_0:def 1;
L149: ( C59 . C60 ) in ( rng C59 ) by L147 , FUNCT_1:def 3;
thus L150: thesis by L149 , L148;
end;
suppose L151: (not C60 in ( dom C59 ));

L152: ( C59 . C60 ) = ( 0c ) by L151 , FUNCT_1:def 2;
thus L153: thesis by L152;
end;
end;
end;
theorem
L156: (for B60 , B61 being (Element of ( NAT )) holds (for B62 , B63 being (Matrix of ( COMPLEX )) holds (( len B63 ) > ( 0 ) implies (ex B64 being (FinSequence of ( COMPLEX )) st (( len B64 ) = ( len B63 ) & ( B64 . 1 ) = ( ( B62 * (B60 , 1) ) * ( B63 * (1 , B61) ) ) & (for B65 being (Element of ( NAT )) holds ((1 <= B65 & B65 < ( len B63 )) implies ( B64 . ( B65 + 1 ) ) = ( ( B64 . B65 ) + ( ( B62 * (B60 , ( B65 + 1 )) ) * ( B63 * (( B65 + 1 ) , B61) ) ) ))))))))
proof
let C61 , C62 being (Element of ( NAT ));
let C63 , C64 being (Matrix of ( COMPLEX ));
defpred S1[ (Element of ( NAT )) ] means (ex B66 being (FinSequence of ( COMPLEX )) st ((1 <= ( $1 + 1 ) & ( $1 + 1 ) <= ( len C64 )) implies (( len B66 ) = ( $1 + 1 ) & ( B66 . 1 ) = ( ( C63 * (C61 , 1) ) * ( C64 * (1 , C62) ) ) & (for B67 being (Element of ( NAT )) holds ((1 <= B67 & B67 < ( $1 + 1 )) implies ( B66 . ( B67 + 1 ) ) = ( ( B66 . B67 ) + ( ( C63 * (C61 , ( B67 + 1 )) ) * ( C64 * (( B67 + 1 ) , C62) ) ) ))))));
set D11 = <* ( ( C63 * (C61 , 1) ) * ( C64 * (1 , C62) ) ) *>;
L157: (for B68 being (Element of ( NAT )) holds ((1 <= B68 & B68 < 1) implies ( D11 . ( B68 + 1 ) ) = ( ( D11 . B68 ) + ( ( C63 * (C61 , ( B68 + 1 )) ) * ( C64 * (( B68 + 1 ) , C62) ) ) )));
L158: (for B69 being (Element of ( NAT )) holds (S1[ B69 ] implies S1[ ( B69 + 1 ) ]))
proof
let C65 being (Element of ( NAT ));
set D12 = C65;
assume L159: S1[ C65 ];
consider C66 being (FinSequence of ( COMPLEX )) such that L160: ((1 <= ( C65 + 1 ) & ( C65 + 1 ) <= ( len C64 )) implies (( len C66 ) = ( C65 + 1 ) & ( C66 . 1 ) = ( ( C63 * (C61 , 1) ) * ( C64 * (1 , C62) ) ) & (for B70 being (Element of ( NAT )) holds ((1 <= B70 & B70 < ( C65 + 1 )) implies ( C66 . ( B70 + 1 ) ) = ( ( C66 . B70 ) + ( ( C63 * (C61 , ( B70 + 1 )) ) * ( C64 * (( B70 + 1 ) , C62) ) ) ))))) by L159;
set D13 = ( C66 ^ <* ( ( C66 . ( D12 + 1 ) ) + ( ( C63 * (C61 , ( ( D12 + 1 ) + 1 )) ) * ( C64 * (( ( D12 + 1 ) + 1 ) , C62) ) ) ) *> );
L161: ((1 <= ( ( C65 + 1 ) + 1 ) & ( ( C65 + 1 ) + 1 ) <= ( len C64 )) implies (( len D13 ) = ( ( C65 + 1 ) + 1 ) & ( D13 . 1 ) = ( ( C63 * (C61 , 1) ) * ( C64 * (1 , C62) ) ) & (for B71 being (Element of ( NAT )) holds ((1 <= B71 & B71 < ( ( C65 + 1 ) + 1 )) implies ( D13 . ( B71 + 1 ) ) = ( ( D13 . B71 ) + ( ( C63 * (C61 , ( B71 + 1 )) ) * ( C64 * (( B71 + 1 ) , C62) ) ) )))))
proof
assume that
L162: 1 <= ( ( C65 + 1 ) + 1 )
and
L163: ( ( C65 + 1 ) + 1 ) <= ( len C64 );
per cases  by NAT_1:12;
suppose L164: 1 <= ( C65 + 1 );

L165: ( len D13 ) = ( ( len C66 ) + ( len <* ( ( C66 . ( D12 + 1 ) ) + ( ( C63 * (C61 , ( ( D12 + 1 ) + 1 )) ) * ( C64 * (( ( D12 + 1 ) + 1 ) , C62) ) ) ) *> ) ) by FINSEQ_1:22
.= ( ( C65 + 1 ) + 1 ) by L160 , L163 , L164 , FINSEQ_1:39 , NAT_1:13;
L166: (for B72 being (Element of ( NAT )) holds ((1 <= B72 & B72 < ( ( C65 + 1 ) + 1 )) implies ( D13 . ( B72 + 1 ) ) = ( ( D13 . B72 ) + ( ( C63 * (C61 , ( B72 + 1 )) ) * ( C64 * (( B72 + 1 ) , C62) ) ) )))
proof
let C67 being (Element of ( NAT ));
assume that
L167: 1 <= C67
and
L168: C67 < ( ( C65 + 1 ) + 1 );
L169: C67 <= ( C65 + 1 ) by L168 , NAT_1:13;
per cases  by L169 , XXREAL_0:1;
suppose L170: C67 < ( C65 + 1 );

L171: C67 < ( len D13 ) by L170 , L165 , NAT_1:13;
L172: C67 < ( ( len C66 ) + ( len <* ( ( C66 . ( D12 + 1 ) ) + ( ( C63 * (C61 , ( ( D12 + 1 ) + 1 )) ) * ( C64 * (( ( D12 + 1 ) + 1 ) , C62) ) ) ) *> ) ) by L171 , FINSEQ_1:22;
L173: C67 < ( ( len C66 ) + 1 ) by L172 , FINSEQ_1:39;
L174: C67 <= ( len C66 ) by L173 , NAT_1:13;
L175: C67 in ( dom C66 ) by L174 , L167 , FINSEQ_3:25;
L176: ( D13 . C67 ) = ( C66 . C67 ) by L175 , FINSEQ_1:def 7;
L177: ( C67 + 1 ) < ( ( C65 + 1 ) + 1 ) by L170 , XREAL_1:6;
L178: ( C67 + 1 ) < ( ( len C66 ) + ( len <* ( ( C66 . ( D12 + 1 ) ) + ( ( C63 * (C61 , ( ( D12 + 1 ) + 1 )) ) * ( C64 * (( ( D12 + 1 ) + 1 ) , C62) ) ) ) *> ) ) by L177 , L165 , FINSEQ_1:22;
L179: ( C67 + 1 ) < ( ( len C66 ) + 1 ) by L178 , FINSEQ_1:39;
L180: ( C67 + 1 ) <= ( len C66 ) by L179 , NAT_1:13;
L181: 1 <= ( C67 + 1 ) by L167 , NAT_1:13;
L182: ( C67 + 1 ) in ( dom C66 ) by L181 , L180 , FINSEQ_3:25;
L183: ( D13 . ( C67 + 1 ) ) = ( C66 . ( C67 + 1 ) ) by L182 , FINSEQ_1:def 7;
thus L184: thesis by L183 , L160 , L163 , L164 , L167 , L170 , L176 , NAT_1:13;
end;
suppose L185: C67 = ( C65 + 1 );

L186: C67 < ( ( C65 + 1 ) + 1 ) by L185 , NAT_1:13;
L187: C67 < ( ( len C66 ) + ( len <* ( ( C66 . ( D12 + 1 ) ) + ( ( C63 * (C61 , ( ( D12 + 1 ) + 1 )) ) * ( C64 * (( ( D12 + 1 ) + 1 ) , C62) ) ) ) *> ) ) by L186 , L165 , FINSEQ_1:22;
L188: C67 < ( ( len C66 ) + 1 ) by L187 , FINSEQ_1:39;
L189: C67 <= ( len C66 ) by L188 , NAT_1:13;
L190: C67 in ( dom C66 ) by L189 , L167 , FINSEQ_3:25;
L191: ( D13 . C67 ) = ( C66 . C67 ) by L190 , FINSEQ_1:def 7;
L192: 1 in ( Seg 1 ) by FINSEQ_1:3;
L193: (( <* ( ( C66 . ( D12 + 1 ) ) + ( ( C63 * (C61 , ( ( D12 + 1 ) + 1 )) ) * ( C64 * (( ( D12 + 1 ) + 1 ) , C62) ) ) ) *> . 1 ) = ( ( C66 . ( D12 + 1 ) ) + ( ( C63 * (C61 , ( ( D12 + 1 ) + 1 )) ) * ( C64 * (( ( D12 + 1 ) + 1 ) , C62) ) ) ) & 1 in ( dom <* ( ( C66 . ( D12 + 1 ) ) + ( ( C63 * (C61 , ( ( D12 + 1 ) + 1 )) ) * ( C64 * (( ( D12 + 1 ) + 1 ) , C62) ) ) ) *> )) by L192 , FINSEQ_1:def 8;
thus L194: thesis by L193 , L160 , L163 , L164 , L185 , L191 , FINSEQ_1:def 7 , NAT_1:13;
end;
end;
L196: 1 < ( len ( C66 ^ <* ( ( C66 . ( D12 + 1 ) ) + ( ( C63 * (C61 , ( ( D12 + 1 ) + 1 )) ) * ( C64 * (( ( D12 + 1 ) + 1 ) , C62) ) ) ) *> ) ) by L164 , L165 , NAT_1:13;
L197: 1 < ( ( len C66 ) + ( len <* ( ( C66 . ( D12 + 1 ) ) + ( ( C63 * (C61 , ( ( D12 + 1 ) + 1 )) ) * ( C64 * (( ( D12 + 1 ) + 1 ) , C62) ) ) ) *> ) ) by L196 , FINSEQ_1:22;
L198: 1 < ( ( len C66 ) + 1 ) by L197 , FINSEQ_1:39;
L199: 1 <= ( len C66 ) by L198 , NAT_1:13;
L200: 1 in ( dom C66 ) by L199 , FINSEQ_3:25;
thus L201: thesis by L200 , L160 , L163 , L164 , L165 , L166 , FINSEQ_1:def 7 , NAT_1:13;
end;
end;
thus L203: thesis by L161;
end;
L204: (( len D11 ) = 1 & ( D11 . 1 ) = ( ( C63 * (C61 , 1) ) * ( C64 * (1 , C62) ) )) by FINSEQ_1:39 , FINSEQ_1:def 8;
L205: S1[ ( 0 ) ] by L204 , L157;
L206: (for B73 being (Element of ( NAT )) holds S1[ B73 ]) from NAT_1:sch 1(L205 , L158);
assume L207: ( len C64 ) > ( 0 );
L208: ( ( 0 ) + 1 ) <= ( len C64 ) by L207 , NAT_1:8;
L209: ( ( ( 0 ) + 1 ) - 1 ) <= ( ( len C64 ) - 1 ) by L208 , XREAL_1:9;
L210: ( ( len C64 ) -' 1 ) = ( ( len C64 ) - 1 ) by L209 , XREAL_0:def 2;
L211: ( ( 0 ) + 1 ) <= ( ( ( len C64 ) -' 1 ) + 1 ) by L210 , L207 , NAT_1:8;
thus L212: thesis by L211 , L210 , L206;
end;
