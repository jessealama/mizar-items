:: Predicate Calculus for Boolean Valued Functions, II
::  by Shunichi Kobayashi and Yatsuka Nakamura
::
:: Received March 13, 1999
:: Copyright (c) 1999-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies XBOOLE_0, SUBSET_1, FUNCT_2, MARGREL1, PARTIT1, BVFUNC_1,
      XBOOLEAN, FUNCT_1, RELAT_1, TARSKI, EQREL_1, BVFUNC_2;
 notations TARSKI, XBOOLE_0, SUBSET_1, XBOOLEAN, MARGREL1, RELAT_1, FUNCT_1,
      FUNCT_2, EQREL_1, BVFUNC_1, BVFUNC_2;
 constructors BINARITH, BVFUNC_1, BVFUNC_2;
 registrations XBOOLE_0, XBOOLEAN, MARGREL1;
 requirements SUBSET, BOOLE, ARITHM;
 definitions BVFUNC_1, XBOOLEAN, BVFUNC_2, FUNCT_2;
 theorems FUNCT_1, FUNCT_2, BVFUNC_1, BVFUNC_2, MARGREL1, XBOOLEAN, EQREL_1;

begin
theorem
L1: (for R1 being non  empty set holds (for B1 , B2 , B3 being (Function of R1 , ( BOOLEAN )) holds (B1 '<' ( B2 'imp' B3 ) implies ( B1 '&' B2 ) '<' B3)))
proof
let R1 being non  empty set;
let C1 , C2 , C3 being (Function of R1 , ( BOOLEAN ));
assume L2: C1 '<' ( C2 'imp' C3 );
L3: (for B4 being (Element of R1) holds ( ( ( C1 '&' C2 ) 'imp' C3 ) . B4 ) = ( TRUE ))
proof
let C4 being (Element of R1);
L4: ( ( C1 'imp' ( C2 'imp' C3 ) ) . C4 ) = ( ( 'not' ( C1 . C4 ) ) 'or' ( ( C2 'imp' C3 ) . C4 ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( C1 . C4 ) ) 'or' ( ( 'not' ( C2 . C4 ) ) 'or' ( C3 . C4 ) ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( C1 . C4 ) ) 'or' ( 'not' ( C2 . C4 ) ) ) 'or' ( C3 . C4 ) );
L5: ( ( ( C1 '&' C2 ) 'imp' C3 ) . C4 ) = ( ( 'not' ( ( C1 '&' C2 ) . C4 ) ) 'or' ( C3 . C4 ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( C1 . C4 ) ) 'or' ( 'not' ( C2 . C4 ) ) ) 'or' ( C3 . C4 ) ) by MARGREL1:def 20;
L6: ( C1 'imp' ( C2 'imp' C3 ) ) = ( I_el R1 ) by L2 , BVFUNC_1:16;
thus L7: thesis by L6 , L4 , L5 , BVFUNC_1:def 11;
end;
L8: ( ( C1 '&' C2 ) 'imp' C3 ) = ( I_el R1 ) by L3 , BVFUNC_1:def 11;
thus L9: thesis by L8 , BVFUNC_1:16;
end;
theorem
L10: (for R1 being non  empty set holds (for B5 , B6 , B7 being (Function of R1 , ( BOOLEAN )) holds (( B5 '&' B6 ) '<' B7 implies B5 '<' ( B6 'imp' B7 ))))
proof
let R1 being non  empty set;
let C5 , C6 , C7 being (Function of R1 , ( BOOLEAN ));
assume L11: ( C5 '&' C6 ) '<' C7;
L12: (for B8 being (Element of R1) holds ( ( C5 'imp' ( C6 'imp' C7 ) ) . B8 ) = ( TRUE ))
proof
let C8 being (Element of R1);
L13: ( ( C5 'imp' ( C6 'imp' C7 ) ) . C8 ) = ( ( 'not' ( C5 . C8 ) ) 'or' ( ( C6 'imp' C7 ) . C8 ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( C5 . C8 ) ) 'or' ( ( 'not' ( C6 . C8 ) ) 'or' ( C7 . C8 ) ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( C5 . C8 ) ) 'or' ( 'not' ( C6 . C8 ) ) ) 'or' ( C7 . C8 ) );
L14: ( ( ( C5 '&' C6 ) 'imp' C7 ) . C8 ) = ( ( 'not' ( ( C5 '&' C6 ) . C8 ) ) 'or' ( C7 . C8 ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( C5 . C8 ) ) 'or' ( 'not' ( C6 . C8 ) ) ) 'or' ( C7 . C8 ) ) by MARGREL1:def 20;
L15: ( ( C5 '&' C6 ) 'imp' C7 ) = ( I_el R1 ) by L11 , BVFUNC_1:16;
thus L16: thesis by L15 , L13 , L14 , BVFUNC_1:def 11;
end;
L17: ( C5 'imp' ( C6 'imp' C7 ) ) = ( I_el R1 ) by L12 , BVFUNC_1:def 11;
thus L18: thesis by L17 , BVFUNC_1:16;
end;
theorem
L19: (for R1 being non  empty set holds (for B9 , B10 being (Function of R1 , ( BOOLEAN )) holds ( B9 'or' ( B9 '&' B10 ) ) = B9))
proof
let R1 being non  empty set;
let C9 , C10 being (Function of R1 , ( BOOLEAN ));
let C11 being (Element of R1);
thus L20: ( ( C9 'or' ( C9 '&' C10 ) ) . C11 ) = ( ( C9 . C11 ) 'or' ( ( C9 '&' C10 ) . C11 ) ) by BVFUNC_1:def 4
.= ( ( C9 . C11 ) 'or' ( ( C9 . C11 ) '&' ( C10 . C11 ) ) ) by MARGREL1:def 20
.= ( C9 . C11 ) by XBOOLEAN:5;
end;
theorem
L21: (for R1 being non  empty set holds (for B11 , B12 being (Function of R1 , ( BOOLEAN )) holds ( B11 '&' ( B11 'or' B12 ) ) = B11))
proof
let R1 being non  empty set;
let C12 , C13 being (Function of R1 , ( BOOLEAN ));
let C14 being (Element of R1);
thus L22: ( ( C12 '&' ( C12 'or' C13 ) ) . C14 ) = ( ( C12 . C14 ) '&' ( ( C12 'or' C13 ) . C14 ) ) by MARGREL1:def 20
.= ( ( C12 . C14 ) '&' ( ( C12 . C14 ) 'or' ( C13 . C14 ) ) ) by BVFUNC_1:def 4
.= ( C12 . C14 ) by XBOOLEAN:6;
end;
theorem
L23: (for R1 being non  empty set holds (for B13 being (Function of R1 , ( BOOLEAN )) holds ( B13 '&' ( 'not' B13 ) ) = ( O_el R1 )))
proof
let R1 being non  empty set;
let C15 being (Function of R1 , ( BOOLEAN ));
let C16 being (Element of R1);
thus L24: ( ( C15 '&' ( 'not' C15 ) ) . C16 ) = ( ( C15 . C16 ) '&' ( ( 'not' C15 ) . C16 ) ) by MARGREL1:def 20
.= ( ( C15 . C16 ) '&' ( 'not' ( C15 . C16 ) ) ) by MARGREL1:def 19
.= ( FALSE ) by XBOOLEAN:138
.= ( ( O_el R1 ) . C16 ) by BVFUNC_1:def 10;
end;
theorem
L25: (for R1 being non  empty set holds (for B14 being (Function of R1 , ( BOOLEAN )) holds ( B14 'or' ( 'not' B14 ) ) = ( I_el R1 )))
proof
let R1 being non  empty set;
let C17 being (Function of R1 , ( BOOLEAN ));
let C18 being (Element of R1);
thus L26: ( ( C17 'or' ( 'not' C17 ) ) . C18 ) = ( ( C17 . C18 ) 'or' ( ( 'not' C17 ) . C18 ) ) by BVFUNC_1:def 4
.= ( ( C17 . C18 ) 'or' ( 'not' ( C17 . C18 ) ) ) by MARGREL1:def 19
.= ( TRUE ) by XBOOLEAN:102
.= ( ( I_el R1 ) . C18 ) by BVFUNC_1:def 11;
end;
theorem
L27: (for R1 being non  empty set holds (for B15 , B16 being (Function of R1 , ( BOOLEAN )) holds ( B15 'eqv' B16 ) = ( ( B15 'imp' B16 ) '&' ( B16 'imp' B15 ) )))
proof
let R1 being non  empty set;
let C19 , C20 being (Function of R1 , ( BOOLEAN ));
let C21 being (Element of R1);
thus L28: ( ( C19 'eqv' C20 ) . C21 ) = ( ( C19 . C21 ) <=> ( C20 . C21 ) ) by BVFUNC_1:def 9
.= ( ( ( C19 . C21 ) => ( C20 . C21 ) ) '&' ( ( C20 . C21 ) => ( C19 . C21 ) ) )
.= ( ( ( C19 'imp' C20 ) . C21 ) '&' ( ( C20 . C21 ) => ( C19 . C21 ) ) ) by BVFUNC_1:def 8
.= ( ( ( C19 'imp' C20 ) . C21 ) '&' ( ( C20 'imp' C19 ) . C21 ) ) by BVFUNC_1:def 8
.= ( ( ( C19 'imp' C20 ) '&' ( C20 'imp' C19 ) ) . C21 ) by MARGREL1:def 20;
end;
theorem
L29: (for R1 being non  empty set holds (for B17 , B18 being (Function of R1 , ( BOOLEAN )) holds ( B17 'imp' B18 ) = ( ( 'not' B17 ) 'or' B18 )))
proof
let R1 being non  empty set;
let C22 , C23 being (Function of R1 , ( BOOLEAN ));
let C24 being (Element of R1);
thus L30: ( ( C22 'imp' C23 ) . C24 ) = ( ( C22 . C24 ) => ( C23 . C24 ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( C22 . C24 ) ) 'or' ( C23 . C24 ) )
.= ( ( ( 'not' C22 ) . C24 ) 'or' ( C23 . C24 ) ) by MARGREL1:def 19
.= ( ( ( 'not' C22 ) 'or' C23 ) . C24 ) by BVFUNC_1:def 4;
end;
theorem
L31: (for R1 being non  empty set holds (for B19 , B20 being (Function of R1 , ( BOOLEAN )) holds ( B19 'xor' B20 ) = ( ( ( 'not' B19 ) '&' B20 ) 'or' ( B19 '&' ( 'not' B20 ) ) )))
proof
let R1 being non  empty set;
let C25 , C26 being (Function of R1 , ( BOOLEAN ));
let C27 being (Element of R1);
thus L32: ( ( C25 'xor' C26 ) . C27 ) = ( ( C25 . C27 ) 'xor' ( C26 . C27 ) ) by BVFUNC_1:def 5
.= ( ( ( 'not' ( C25 . C27 ) ) '&' ( C26 . C27 ) ) 'or' ( ( C25 . C27 ) '&' ( 'not' ( C26 . C27 ) ) ) )
.= ( ( ( 'not' ( C25 . C27 ) ) '&' ( C26 . C27 ) ) 'or' ( ( C25 . C27 ) '&' ( ( 'not' C26 ) . C27 ) ) ) by MARGREL1:def 19
.= ( ( ( ( 'not' C25 ) . C27 ) '&' ( C26 . C27 ) ) 'or' ( ( C25 . C27 ) '&' ( ( 'not' C26 ) . C27 ) ) ) by MARGREL1:def 19
.= ( ( ( ( 'not' C25 ) '&' C26 ) . C27 ) 'or' ( ( C25 . C27 ) '&' ( ( 'not' C26 ) . C27 ) ) ) by MARGREL1:def 20
.= ( ( ( ( 'not' C25 ) '&' C26 ) . C27 ) 'or' ( ( C25 '&' ( 'not' C26 ) ) . C27 ) ) by MARGREL1:def 20
.= ( ( ( ( 'not' C25 ) '&' C26 ) 'or' ( C25 '&' ( 'not' C26 ) ) ) . C27 ) by BVFUNC_1:def 4;
end;
theorem
L33: (for R1 being non  empty set holds (for B21 , B22 being (Function of R1 , ( BOOLEAN )) holds (( B21 'eqv' B22 ) = ( I_el R1 ) iff (( B21 'imp' B22 ) = ( I_el R1 ) & ( B22 'imp' B21 ) = ( I_el R1 )))))
proof
let R1 being non  empty set;
let C28 , C29 being (Function of R1 , ( BOOLEAN ));
thus L34: (( C28 'eqv' C29 ) = ( I_el R1 ) implies (( C28 'imp' C29 ) = ( I_el R1 ) & ( C29 'imp' C28 ) = ( I_el R1 )))
proof
assume L35: ( C28 'eqv' C29 ) = ( I_el R1 );
L36: C28 = C29 by L35 , BVFUNC_1:17;
thus L37: thesis by L36 , BVFUNC_1:16;
end;

assume L38: (( C28 'imp' C29 ) = ( I_el R1 ) & ( C29 'imp' C28 ) = ( I_el R1 ));
L39: ( C28 'eqv' C29 ) = ( ( I_el R1 ) '&' ( I_el R1 ) ) by L38 , L27;
thus L40: thesis by L39;
end;
theorem
L41: (for R1 being non  empty set holds (for B23 , B24 being (Function of R1 , ( BOOLEAN )) holds (( B23 'eqv' B24 ) = ( I_el R1 ) implies ( ( 'not' B23 ) 'eqv' ( 'not' B24 ) ) = ( I_el R1 ))))
proof
let R1 being non  empty set;
let C30 , C31 being (Function of R1 , ( BOOLEAN ));
assume L42: ( C30 'eqv' C31 ) = ( I_el R1 );
L43: C30 = C31 by L42 , BVFUNC_1:17;
thus L44: thesis by L43 , BVFUNC_1:17;
end;
theorem
L45: (for R1 being non  empty set holds (for B25 , B26 , B27 , B28 being (Function of R1 , ( BOOLEAN )) holds ((( B25 'eqv' B26 ) = ( I_el R1 ) & ( B27 'eqv' B28 ) = ( I_el R1 )) implies ( ( B25 '&' B27 ) 'eqv' ( B26 '&' B28 ) ) = ( I_el R1 ))))
proof
let R1 being non  empty set;
let C32 , C33 , C34 , C35 being (Function of R1 , ( BOOLEAN ));
assume L46: (( C32 'eqv' C33 ) = ( I_el R1 ) & ( C34 'eqv' C35 ) = ( I_el R1 ));
L47: (C32 = C33 & C34 = C35) by L46 , BVFUNC_1:17;
thus L48: thesis by L47 , BVFUNC_1:17;
end;
theorem
L49: (for R1 being non  empty set holds (for B29 , B30 , B31 , B32 being (Function of R1 , ( BOOLEAN )) holds ((( B29 'eqv' B30 ) = ( I_el R1 ) & ( B31 'eqv' B32 ) = ( I_el R1 )) implies ( ( B29 'imp' B31 ) 'eqv' ( B30 'imp' B32 ) ) = ( I_el R1 ))))
proof
let R1 being non  empty set;
let C36 , C37 , C38 , C39 being (Function of R1 , ( BOOLEAN ));
assume L50: (( C36 'eqv' C37 ) = ( I_el R1 ) & ( C38 'eqv' C39 ) = ( I_el R1 ));
L51: (C36 = C37 & C38 = C39) by L50 , BVFUNC_1:17;
thus L52: thesis by L51 , BVFUNC_1:17;
end;
theorem
L53: (for R1 being non  empty set holds (for B33 , B34 , B35 , B36 being (Function of R1 , ( BOOLEAN )) holds ((( B33 'eqv' B34 ) = ( I_el R1 ) & ( B35 'eqv' B36 ) = ( I_el R1 )) implies ( ( B33 'or' B35 ) 'eqv' ( B34 'or' B36 ) ) = ( I_el R1 ))))
proof
let R1 being non  empty set;
let C40 , C41 , C42 , C43 being (Function of R1 , ( BOOLEAN ));
assume L54: (( C40 'eqv' C41 ) = ( I_el R1 ) & ( C42 'eqv' C43 ) = ( I_el R1 ));
L55: (C40 = C41 & C42 = C43) by L54 , BVFUNC_1:17;
thus L56: thesis by L55 , BVFUNC_1:17;
end;
theorem
L57: (for R1 being non  empty set holds (for B37 , B38 , B39 , B40 being (Function of R1 , ( BOOLEAN )) holds ((( B37 'eqv' B38 ) = ( I_el R1 ) & ( B39 'eqv' B40 ) = ( I_el R1 )) implies ( ( B37 'eqv' B39 ) 'eqv' ( B38 'eqv' B40 ) ) = ( I_el R1 ))))
proof
let R1 being non  empty set;
let C44 , C45 , C46 , C47 being (Function of R1 , ( BOOLEAN ));
assume L58: (( C44 'eqv' C45 ) = ( I_el R1 ) & ( C46 'eqv' C47 ) = ( I_el R1 ));
L59: (C44 = C45 & C46 = C47) by L58 , BVFUNC_1:17;
thus L60: thesis by L59 , BVFUNC_1:17;
end;
begin
theorem
L61: (for R1 being non  empty set holds (for B41 , B42 being (Function of R1 , ( BOOLEAN )) holds (for B43 being (Subset of ( PARTITIONS R1 )) holds (for B44 being (a_partition of R1) holds ( All (( B41 'eqv' B42 ) , B44 , B43) ) = ( ( All (( B41 'imp' B42 ) , B44 , B43) ) '&' ( All (( B42 'imp' B41 ) , B44 , B43) ) )))))
proof
let R1 being non  empty set;
let C48 , C49 being (Function of R1 , ( BOOLEAN ));
let C50 being (Subset of ( PARTITIONS R1 ));
let C51 being (a_partition of R1);
let C52 being (Element of R1);
L62: ( ( All (( C48 'eqv' C49 ) , C51 , C50) ) . C52 ) = ( ( All (( ( C48 'imp' C49 ) '&' ( C49 'imp' C48 ) ) , C51 , C50) ) . C52 ) by L27
.= ( ( ( All (( C48 'imp' C49 ) , C51 , C50) ) '&' ( All (( C49 'imp' C48 ) , C51 , C50) ) ) . C52 ) by BVFUNC_1:39;
thus L63: thesis by L62;
end;
theorem
L64: (for R1 being non  empty set holds (for B45 being (Function of R1 , ( BOOLEAN )) holds (for B46 being (Subset of ( PARTITIONS R1 )) holds (for B47 , B48 being (a_partition of R1) holds ( All (B45 , B47 , B46) ) '<' ( Ex (B45 , B48 , B46) )))))
proof
let R1 being non  empty set;
let C53 being (Function of R1 , ( BOOLEAN ));
let C54 being (Subset of ( PARTITIONS R1 ));
let C55 , C56 being (a_partition of R1);
L65: (( All (C53 , C55 , C54) ) '<' C53 & C53 '<' ( Ex (C53 , C56 , C54) )) by BVFUNC_2:11 , BVFUNC_2:12;
thus L66: thesis by L65 , BVFUNC_1:15;
end;
theorem
L67: (for R1 being non  empty set holds (for B49 , B50 being (Function of R1 , ( BOOLEAN )) holds (for B51 being (Subset of ( PARTITIONS R1 )) holds (for B52 being (a_partition of R1) holds (( B49 'imp' B50 ) = ( I_el R1 ) implies ( ( All (B49 , B52 , B51) ) 'imp' B50 ) = ( I_el R1 ))))))
proof
let R1 being non  empty set;
let C57 , C58 being (Function of R1 , ( BOOLEAN ));
let C59 being (Subset of ( PARTITIONS R1 ));
let C60 being (a_partition of R1);
assume L68: ( C57 'imp' C58 ) = ( I_el R1 );
L69: (for B53 being (Element of R1) holds ( ( ( All (C57 , C60 , C59) ) 'imp' C58 ) . B53 ) = ( TRUE ))
proof
let C61 being (Element of R1);
L70: ( ( C57 'imp' C58 ) . C61 ) = ( TRUE ) by L68 , BVFUNC_1:def 11;
L71: ( ( 'not' ( C57 . C61 ) ) 'or' ( C58 . C61 ) ) = ( TRUE ) by L70 , BVFUNC_1:def 8;
L72: (( 'not' ( C57 . C61 ) ) = ( TRUE ) or ( 'not' ( C57 . C61 ) ) = ( FALSE )) by XBOOLEAN:def 3;
L73:
now
per cases  by L71 , L72;
case L74: ( 'not' ( C57 . C61 ) ) = ( TRUE );
L75: C61 in ( EqClass (C61 , ( CompF (C60 , C59) )) ) by EQREL_1:def 6;
L76: ( ( B_INF (C57 , ( CompF (C60 , C59) )) ) . C61 ) = ( FALSE ) by L75 , L74 , BVFUNC_1:def 16;
L77: ( ( ( All (C57 , C60 , C59) ) 'imp' C58 ) . C61 ) = ( ( TRUE ) 'or' ( C58 . C61 ) ) by L76 , BVFUNC_1:def 8
.= ( TRUE );
thus L78: thesis by L77;
end;
case L79: ( C58 . C61 ) = ( TRUE );
L80: ( ( ( All (C57 , C60 , C59) ) 'imp' C58 ) . C61 ) = ( ( 'not' ( ( All (C57 , C60 , C59) ) . C61 ) ) 'or' ( TRUE ) ) by L79 , BVFUNC_1:def 8
.= ( TRUE );
thus L81: thesis by L80;
end;
end;
thus L83: thesis by L73;
end;
thus L84: thesis by L69 , BVFUNC_1:def 11;
end;
theorem
L85: (for R1 being non  empty set holds (for B54 being (Function of R1 , ( BOOLEAN )) holds (for B55 being (Subset of ( PARTITIONS R1 )) holds (for B56 being (a_partition of R1) holds (B54 is_independent_of B56 , B55 implies ( Ex (B54 , B56 , B55) ) '<' B54)))))
proof
let R1 being non  empty set;
let C62 being (Function of R1 , ( BOOLEAN ));
let C63 being (Subset of ( PARTITIONS R1 ));
let C64 being (a_partition of R1);
assume L86: C62 is_independent_of C64 , C63;
L87: C62 is_dependent_of ( CompF (C64 , C63) ) by L86 , BVFUNC_2:def 8;
L88: (for B57 being (Element of R1) holds ( ( ( Ex (C62 , C64 , C63) ) 'imp' C62 ) . B57 ) = ( TRUE ))
proof
let C65 being (Element of R1);
L89: ( ( ( Ex (C62 , C64 , C63) ) 'imp' C62 ) . C65 ) = ( ( 'not' ( ( Ex (C62 , C64 , C63) ) . C65 ) ) 'or' ( C62 . C65 ) ) by BVFUNC_1:def 8;
L90: (C65 in ( EqClass (C65 , ( CompF (C64 , C63) )) ) & ( EqClass (C65 , ( CompF (C64 , C63) )) ) in ( CompF (C64 , C63) )) by EQREL_1:def 6;
L91:
now
per cases  by XBOOLEAN:def 3;
case L92: ( C62 . C65 ) = ( TRUE );
thus L93: thesis by L92 , L89;
end;
case L94: ( C62 . C65 ) = ( FALSE );
L95: (not (ex B58 being (Element of R1) st (B58 in ( EqClass (C65 , ( CompF (C64 , C63) )) ) & ( C62 . B58 ) = ( TRUE )))) by L94 , L87 , L90 , BVFUNC_1:def 15;
L96: ( ( B_SUP (C62 , ( CompF (C64 , C63) )) ) . C65 ) = ( FALSE ) by L95 , BVFUNC_1:def 17;
thus L97: thesis by L96 , L89;
end;
end;
thus L99: thesis by L91;
end;
L100: ( ( Ex (C62 , C64 , C63) ) 'imp' C62 ) = ( I_el R1 ) by L88 , BVFUNC_1:def 11;
thus L101: thesis by L100 , BVFUNC_1:16;
end;
theorem
L102: (for R1 being non  empty set holds (for B59 being (Function of R1 , ( BOOLEAN )) holds (for B60 being (Subset of ( PARTITIONS R1 )) holds (for B61 being (a_partition of R1) holds (B59 is_independent_of B61 , B60 implies B59 '<' ( All (B59 , B61 , B60) ))))))
proof
let R1 being non  empty set;
let C66 being (Function of R1 , ( BOOLEAN ));
let C67 being (Subset of ( PARTITIONS R1 ));
let C68 being (a_partition of R1);
assume L103: C66 is_independent_of C68 , C67;
L104: C66 is_dependent_of ( CompF (C68 , C67) ) by L103 , BVFUNC_2:def 8;
L105: (for B62 being (Element of R1) holds ( ( C66 'imp' ( All (C66 , C68 , C67) ) ) . B62 ) = ( TRUE ))
proof
let C69 being (Element of R1);
L106: ( ( C66 'imp' ( All (C66 , C68 , C67) ) ) . C69 ) = ( ( 'not' ( C66 . C69 ) ) 'or' ( ( All (C66 , C68 , C67) ) . C69 ) ) by BVFUNC_1:def 8;
L107: (C69 in ( EqClass (C69 , ( CompF (C68 , C67) )) ) & ( EqClass (C69 , ( CompF (C68 , C67) )) ) in ( CompF (C68 , C67) )) by EQREL_1:def 6;
L108:
now
per cases  by XBOOLEAN:def 3;
case L109: ( C66 . C69 ) = ( FALSE );
thus L110: thesis by L109 , L106;
end;
case L111: ( C66 . C69 ) = ( TRUE );
L112: (for B63 being (Element of R1) holds (B63 in ( EqClass (C69 , ( CompF (C68 , C67) )) ) implies ( C66 . B63 ) = ( TRUE ))) by L111 , L104 , L107 , BVFUNC_1:def 15;
L113: ( ( All (C66 , C68 , C67) ) . C69 ) = ( TRUE ) by L112 , BVFUNC_1:def 16;
thus L114: thesis by L113 , L106;
end;
end;
thus L116: thesis by L108;
end;
L117: ( C66 'imp' ( All (C66 , C68 , C67) ) ) = ( I_el R1 ) by L105 , BVFUNC_1:def 11;
thus L118: thesis by L117 , BVFUNC_1:16;
end;
theorem
L119: (for R1 being non  empty set holds (for B64 being (Function of R1 , ( BOOLEAN )) holds (for B65 being (Subset of ( PARTITIONS R1 )) holds (for B66 , B67 being (a_partition of R1) holds (B64 is_independent_of B67 , B65 implies ( All (B64 , B66 , B65) ) '<' ( All (B64 , B67 , B65) ))))))
proof
let R1 being non  empty set;
let C70 being (Function of R1 , ( BOOLEAN ));
let C71 being (Subset of ( PARTITIONS R1 ));
let C72 , C73 being (a_partition of R1);
assume L120: C70 is_independent_of C73 , C71;
L121: C70 is_dependent_of ( CompF (C73 , C71) ) by L120 , BVFUNC_2:def 8;
L122: (for B68 being (Element of R1) holds ( ( ( All (C70 , C72 , C71) ) 'imp' ( All (C70 , C73 , C71) ) ) . B68 ) = ( TRUE ))
proof
let C74 being (Element of R1);
L123: (C74 in ( EqClass (C74 , ( CompF (C73 , C71) )) ) & ( EqClass (C74 , ( CompF (C73 , C71) )) ) in ( CompF (C73 , C71) )) by EQREL_1:def 6;
L124: ( ( ( All (C70 , C72 , C71) ) 'imp' ( All (C70 , C73 , C71) ) ) . C74 ) = ( ( 'not' ( ( All (C70 , C72 , C71) ) . C74 ) ) 'or' ( ( All (C70 , C73 , C71) ) . C74 ) ) by BVFUNC_1:def 8;
L125: C74 in ( EqClass (C74 , ( CompF (C72 , C71) )) ) by EQREL_1:def 6;
L126:
now
per cases  by XBOOLEAN:def 3;
case L127: ( ( All (C70 , C72 , C71) ) . C74 ) = ( FALSE );
thus L128: thesis by L127 , L124;
end;
case L129: ( ( All (C70 , C72 , C71) ) . C74 ) = ( TRUE );
L130: ( C70 . C74 ) = ( TRUE ) by L129 , L125 , BVFUNC_1:def 16;
L131: (for B69 being (Element of R1) holds (B69 in ( EqClass (C74 , ( CompF (C73 , C71) )) ) implies ( C70 . B69 ) = ( TRUE ))) by L130 , L121 , L123 , BVFUNC_1:def 15;
L132: ( ( All (C70 , C73 , C71) ) . C74 ) = ( TRUE ) by L131 , BVFUNC_1:def 16;
thus L133: thesis by L132 , L124;
end;
end;
thus L135: thesis by L126;
end;
L136: ( ( All (C70 , C72 , C71) ) 'imp' ( All (C70 , C73 , C71) ) ) = ( I_el R1 ) by L122 , BVFUNC_1:def 11;
thus L137: thesis by L136 , BVFUNC_1:16;
end;
theorem
L138: (for R1 being non  empty set holds (for B70 being (Function of R1 , ( BOOLEAN )) holds (for B71 being (Subset of ( PARTITIONS R1 )) holds (for B72 , B73 being (a_partition of R1) holds (B70 is_independent_of B72 , B71 implies ( Ex (B70 , B72 , B71) ) '<' ( Ex (B70 , B73 , B71) ))))))
proof
let R1 being non  empty set;
let C75 being (Function of R1 , ( BOOLEAN ));
let C76 being (Subset of ( PARTITIONS R1 ));
let C77 , C78 being (a_partition of R1);
assume L139: C75 is_independent_of C77 , C76;
L140: C75 is_dependent_of ( CompF (C77 , C76) ) by L139 , BVFUNC_2:def 8;
L141: (for B74 being (Element of R1) holds ( ( ( Ex (C75 , C77 , C76) ) 'imp' ( Ex (C75 , C78 , C76) ) ) . B74 ) = ( TRUE ))
proof
let C79 being (Element of R1);
L142: C79 in ( EqClass (C79 , ( CompF (C78 , C76) )) ) by EQREL_1:def 6;
L143: ( ( ( Ex (C75 , C77 , C76) ) 'imp' ( Ex (C75 , C78 , C76) ) ) . C79 ) = ( ( 'not' ( ( Ex (C75 , C77 , C76) ) . C79 ) ) 'or' ( ( Ex (C75 , C78 , C76) ) . C79 ) ) by BVFUNC_1:def 8;
L144: (C79 in ( EqClass (C79 , ( CompF (C77 , C76) )) ) & ( EqClass (C79 , ( CompF (C77 , C76) )) ) in ( CompF (C77 , C76) )) by EQREL_1:def 6;
L145:
now
per cases  by XBOOLEAN:def 3;
case L146: ( ( Ex (C75 , C78 , C76) ) . C79 ) = ( TRUE );
thus L147: thesis by L146 , L143;
end;
case L148: ( ( Ex (C75 , C78 , C76) ) . C79 ) = ( FALSE );
L149: ( C75 . C79 ) <> ( TRUE ) by L148 , L142 , BVFUNC_1:def 17;
L150: (not (ex B75 being (Element of R1) st (B75 in ( EqClass (C79 , ( CompF (C77 , C76) )) ) & ( C75 . B75 ) = ( TRUE )))) by L149 , L140 , L144 , BVFUNC_1:def 15;
L151: ( ( B_SUP (C75 , ( CompF (C77 , C76) )) ) . C79 ) = ( FALSE ) by L150 , BVFUNC_1:def 17;
thus L152: thesis by L151 , L143;
end;
end;
thus L154: thesis by L145;
end;
L155: ( ( Ex (C75 , C77 , C76) ) 'imp' ( Ex (C75 , C78 , C76) ) ) = ( I_el R1 ) by L141 , BVFUNC_1:def 11;
thus L156: thesis by L155 , BVFUNC_1:16;
end;
theorem
L157: (for R1 being non  empty set holds (for B76 , B77 being (Function of R1 , ( BOOLEAN )) holds (for B78 being (Subset of ( PARTITIONS R1 )) holds (for B79 being (a_partition of R1) holds ( All (( B76 'eqv' B77 ) , B79 , B78) ) '<' ( ( All (B76 , B79 , B78) ) 'eqv' ( All (B77 , B79 , B78) ) )))))
proof
let R1 being non  empty set;
let C80 , C81 being (Function of R1 , ( BOOLEAN ));
let C82 being (Subset of ( PARTITIONS R1 ));
let C83 being (a_partition of R1);
let C84 being (Element of R1);
assume L158: ( ( All (( C80 'eqv' C81 ) , C83 , C82) ) . C84 ) = ( TRUE );
L159: ( ( ( All (C80 , C83 , C82) ) 'eqv' ( All (C81 , C83 , C82) ) ) . C84 ) = ( 'not' ( ( ( All (C80 , C83 , C82) ) . C84 ) 'xor' ( ( All (C81 , C83 , C82) ) . C84 ) ) ) by BVFUNC_1:def 9
.= ( ( ( ( ( All (C80 , C83 , C82) ) . C84 ) 'or' ( 'not' ( ( All (C81 , C83 , C82) ) . C84 ) ) ) '&' ( 'not' ( ( All (C80 , C83 , C82) ) . C84 ) ) ) 'or' ( ( ( ( All (C80 , C83 , C82) ) . C84 ) 'or' ( 'not' ( ( All (C81 , C83 , C82) ) . C84 ) ) ) '&' ( ( All (C81 , C83 , C82) ) . C84 ) ) ) by XBOOLEAN:8
.= ( ( ( ( 'not' ( ( All (C80 , C83 , C82) ) . C84 ) ) '&' ( ( All (C80 , C83 , C82) ) . C84 ) ) 'or' ( ( 'not' ( ( All (C80 , C83 , C82) ) . C84 ) ) '&' ( 'not' ( ( All (C81 , C83 , C82) ) . C84 ) ) ) ) 'or' ( ( ( All (C81 , C83 , C82) ) . C84 ) '&' ( ( ( All (C80 , C83 , C82) ) . C84 ) 'or' ( 'not' ( ( All (C81 , C83 , C82) ) . C84 ) ) ) ) ) by XBOOLEAN:8
.= ( ( ( ( 'not' ( ( All (C80 , C83 , C82) ) . C84 ) ) '&' ( ( All (C80 , C83 , C82) ) . C84 ) ) 'or' ( ( 'not' ( ( All (C80 , C83 , C82) ) . C84 ) ) '&' ( 'not' ( ( All (C81 , C83 , C82) ) . C84 ) ) ) ) 'or' ( ( ( ( All (C81 , C83 , C82) ) . C84 ) '&' ( ( All (C80 , C83 , C82) ) . C84 ) ) 'or' ( ( ( All (C81 , C83 , C82) ) . C84 ) '&' ( 'not' ( ( All (C81 , C83 , C82) ) . C84 ) ) ) ) ) by XBOOLEAN:8
.= ( ( ( FALSE ) 'or' ( ( 'not' ( ( All (C80 , C83 , C82) ) . C84 ) ) '&' ( 'not' ( ( All (C81 , C83 , C82) ) . C84 ) ) ) ) 'or' ( ( ( ( All (C81 , C83 , C82) ) . C84 ) '&' ( ( All (C80 , C83 , C82) ) . C84 ) ) 'or' ( ( ( All (C81 , C83 , C82) ) . C84 ) '&' ( 'not' ( ( All (C81 , C83 , C82) ) . C84 ) ) ) ) ) by XBOOLEAN:138
.= ( ( ( 'not' ( ( All (C80 , C83 , C82) ) . C84 ) ) '&' ( 'not' ( ( All (C81 , C83 , C82) ) . C84 ) ) ) 'or' ( ( ( ( All (C81 , C83 , C82) ) . C84 ) '&' ( ( All (C80 , C83 , C82) ) . C84 ) ) 'or' ( FALSE ) ) ) by XBOOLEAN:138
.= ( ( ( 'not' ( ( All (C80 , C83 , C82) ) . C84 ) ) '&' ( 'not' ( ( All (C81 , C83 , C82) ) . C84 ) ) ) 'or' ( ( ( All (C81 , C83 , C82) ) . C84 ) '&' ( ( All (C80 , C83 , C82) ) . C84 ) ) );
per cases ;
suppose L160: ((for B80 being (Element of R1) holds (B80 in ( EqClass (C84 , ( CompF (C83 , C82) )) ) implies ( C80 . B80 ) = ( TRUE ))) & (for B81 being (Element of R1) holds (B81 in ( EqClass (C84 , ( CompF (C83 , C82) )) ) implies ( C81 . B81 ) = ( TRUE ))));

L161: ( ( B_INF (C81 , ( CompF (C83 , C82) )) ) . C84 ) = ( TRUE ) by L160 , BVFUNC_1:def 16;
thus L162: thesis by L161 , L159 , L160 , BVFUNC_1:def 16;
end;
suppose L163: ((for B82 being (Element of R1) holds (B82 in ( EqClass (C84 , ( CompF (C83 , C82) )) ) implies ( C80 . B82 ) = ( TRUE ))) & (not (for B83 being (Element of R1) holds (B83 in ( EqClass (C84 , ( CompF (C83 , C82) )) ) implies ( C81 . B83 ) = ( TRUE )))));

consider C85 being (Element of R1) such that L164: C85 in ( EqClass (C84 , ( CompF (C83 , C82) )) ) and L165: ( C81 . C85 ) <> ( TRUE ) by L163;
L166: ( C80 . C85 ) = ( TRUE ) by L163 , L164;
L167: ( ( C80 'eqv' C81 ) . C85 ) = ( 'not' ( ( C80 . C85 ) 'xor' ( C81 . C85 ) ) ) by BVFUNC_1:def 9
.= ( FALSE ) by L165 , L166 , XBOOLEAN:def 3;
thus L168: thesis by L167 , L158 , L164 , BVFUNC_1:def 16;
end;
suppose L169: ((not (for B84 being (Element of R1) holds (B84 in ( EqClass (C84 , ( CompF (C83 , C82) )) ) implies ( C80 . B84 ) = ( TRUE )))) & (for B85 being (Element of R1) holds (B85 in ( EqClass (C84 , ( CompF (C83 , C82) )) ) implies ( C81 . B85 ) = ( TRUE ))));

consider C86 being (Element of R1) such that L170: C86 in ( EqClass (C84 , ( CompF (C83 , C82) )) ) and L171: ( C80 . C86 ) <> ( TRUE ) by L169;
L172: ( C81 . C86 ) = ( TRUE ) by L169 , L170;
L173: ( ( C80 'eqv' C81 ) . C86 ) = ( 'not' ( ( C80 . C86 ) 'xor' ( C81 . C86 ) ) ) by BVFUNC_1:def 9
.= ( FALSE ) by L171 , L172 , XBOOLEAN:def 3;
thus L174: thesis by L173 , L158 , L170 , BVFUNC_1:def 16;
end;
suppose L175: ((not (for B86 being (Element of R1) holds (B86 in ( EqClass (C84 , ( CompF (C83 , C82) )) ) implies ( C80 . B86 ) = ( TRUE )))) & (not (for B87 being (Element of R1) holds (B87 in ( EqClass (C84 , ( CompF (C83 , C82) )) ) implies ( C81 . B87 ) = ( TRUE )))));

L176: ( ( B_INF (C81 , ( CompF (C83 , C82) )) ) . C84 ) = ( FALSE ) by L175 , BVFUNC_1:def 16;
thus L177: thesis by L176 , L159 , L175 , BVFUNC_1:def 16;
end;
end;
theorem
L179: (for R1 being non  empty set holds (for B88 , B89 being (Function of R1 , ( BOOLEAN )) holds (for B90 being (Subset of ( PARTITIONS R1 )) holds (for B91 being (a_partition of R1) holds ( All (( B88 '&' B89 ) , B91 , B90) ) '<' ( B88 '&' ( All (B89 , B91 , B90) ) )))))
proof
let R1 being non  empty set;
let C87 , C88 being (Function of R1 , ( BOOLEAN ));
let C89 being (Subset of ( PARTITIONS R1 ));
let C90 being (a_partition of R1);
let C91 being (Element of R1);
assume L180: ( ( All (( C87 '&' C88 ) , C90 , C89) ) . C91 ) = ( TRUE );
L181:
now
assume L182: (not (for B92 being (Element of R1) holds (B92 in ( EqClass (C91 , ( CompF (C90 , C89) )) ) implies ( C87 . B92 ) = ( TRUE ))));
consider C92 being (Element of R1) such that L183: C92 in ( EqClass (C91 , ( CompF (C90 , C89) )) ) and L184: ( C87 . C92 ) <> ( TRUE ) by L182;
L185: ( ( C87 '&' C88 ) . C92 ) = ( TRUE ) by L180 , L183 , BVFUNC_1:def 16;
L186: ( ( C87 . C92 ) '&' ( C88 . C92 ) ) = ( TRUE ) by L185 , MARGREL1:def 20;
L187: ( C87 . C92 ) = ( FALSE ) by L184 , XBOOLEAN:def 3;
thus L188: contradiction by L187 , L186;
end;
L189:
now
assume L190: (not (for B93 being (Element of R1) holds (B93 in ( EqClass (C91 , ( CompF (C90 , C89) )) ) implies ( C88 . B93 ) = ( TRUE ))));
consider C93 being (Element of R1) such that L191: C93 in ( EqClass (C91 , ( CompF (C90 , C89) )) ) and L192: ( C88 . C93 ) <> ( TRUE ) by L190;
L193: ( ( C87 '&' C88 ) . C93 ) = ( TRUE ) by L180 , L191 , BVFUNC_1:def 16;
L194: ( ( C87 . C93 ) '&' ( C88 . C93 ) ) = ( TRUE ) by L193 , MARGREL1:def 20;
L195: ( C88 . C93 ) = ( FALSE ) by L192 , XBOOLEAN:def 3;
thus L196: contradiction by L195 , L194;
end;
L197: ( ( B_INF (C88 , ( CompF (C90 , C89) )) ) . C91 ) = ( TRUE ) by L189 , BVFUNC_1:def 16;
L198: C91 in ( EqClass (C91 , ( CompF (C90 , C89) )) ) by EQREL_1:def 6;
L199: ( C87 . C91 ) = ( TRUE ) by L198 , L181;
L200: ( ( C87 '&' ( All (C88 , C90 , C89) ) ) . C91 ) = ( ( TRUE ) '&' ( TRUE ) ) by L199 , L197 , MARGREL1:def 20
.= ( TRUE );
thus L201: thesis by L200;
end;
theorem
L202: (for R1 being non  empty set holds (for B94 , B95 being (Function of R1 , ( BOOLEAN )) holds (for B96 being (Subset of ( PARTITIONS R1 )) holds (for B97 being (a_partition of R1) holds ( ( All (B94 , B97 , B96) ) 'imp' B95 ) '<' ( Ex (( B94 'imp' B95 ) , B97 , B96) )))))
proof
let R1 being non  empty set;
let C94 , C95 being (Function of R1 , ( BOOLEAN ));
let C96 being (Subset of ( PARTITIONS R1 ));
let C97 being (a_partition of R1);
let C98 being (Element of R1);
L203: C98 in ( EqClass (C98 , ( CompF (C97 , C96) )) ) by EQREL_1:def 6;
assume L204: ( ( ( All (C94 , C97 , C96) ) 'imp' C95 ) . C98 ) = ( TRUE );
L205: ( ( 'not' ( ( All (C94 , C97 , C96) ) . C98 ) ) 'or' ( C95 . C98 ) ) = ( TRUE ) by L204 , BVFUNC_1:def 8;
L206: (( 'not' ( ( All (C94 , C97 , C96) ) . C98 ) ) = ( TRUE ) or ( 'not' ( ( All (C94 , C97 , C96) ) . C98 ) ) = ( FALSE )) by XBOOLEAN:def 3;
L207:
now
per cases  by L205 , L206;
case L208: ( 'not' ( ( All (C94 , C97 , C96) ) . C98 ) ) = ( TRUE );
consider C99 being (Element of R1) such that L209: C99 in ( EqClass (C98 , ( CompF (C97 , C96) )) ) and L210: ( C94 . C99 ) <> ( TRUE ) by L208 , BVFUNC_1:def 16;
L211:
now
assume L212: (not (ex B98 being (Element of R1) st (B98 in ( EqClass (C98 , ( CompF (C97 , C96) )) ) & ( ( C94 'imp' C95 ) . B98 ) = ( TRUE ))));
L213: ( ( C94 'imp' C95 ) . C99 ) <> ( TRUE ) by L212 , L209;
L214: ( ( C94 'imp' C95 ) . C99 ) = ( FALSE ) by L213 , XBOOLEAN:def 3;
L215: ( ( 'not' ( C94 . C99 ) ) 'or' ( C95 . C99 ) ) = ( FALSE ) by L214 , BVFUNC_1:def 8;
L216: (( 'not' ( C94 . C99 ) ) = ( TRUE ) or ( 'not' ( C94 . C99 ) ) = ( FALSE )) by XBOOLEAN:def 3;
thus L217: contradiction by L216 , L210 , L215;
end;
thus L218: thesis by L211 , BVFUNC_1:def 17;
end;
case L219: ( C95 . C98 ) = ( TRUE );
L220:
now
assume L221: (not (ex B99 being (Element of R1) st (B99 in ( EqClass (C98 , ( CompF (C97 , C96) )) ) & ( ( C94 'imp' C95 ) . B99 ) = ( TRUE ))));
L222: ( ( C94 'imp' C95 ) . C98 ) <> ( TRUE ) by L221 , L203;
L223: ( ( C94 'imp' C95 ) . C98 ) = ( FALSE ) by L222 , XBOOLEAN:def 3;
L224: ( ( 'not' ( C94 . C98 ) ) 'or' ( C95 . C98 ) ) = ( FALSE ) by L223 , BVFUNC_1:def 8;
thus L225: contradiction by L224 , L219;
end;
thus L226: thesis by L220 , BVFUNC_1:def 17;
end;
end;
thus L228: thesis by L207;
end;
theorem
L229: (for R1 being non  empty set holds (for B100 , B101 being (Function of R1 , ( BOOLEAN )) holds (for B102 being (Subset of ( PARTITIONS R1 )) holds (for B103 being (a_partition of R1) holds (( B100 'eqv' B101 ) = ( I_el R1 ) implies ( ( All (B100 , B103 , B102) ) 'eqv' ( All (B101 , B103 , B102) ) ) = ( I_el R1 ))))))
proof
let R1 being non  empty set;
let C100 , C101 being (Function of R1 , ( BOOLEAN ));
let C102 being (Subset of ( PARTITIONS R1 ));
let C103 being (a_partition of R1);
assume L230: ( C100 'eqv' C101 ) = ( I_el R1 );
L231: ( C101 'imp' C100 ) = ( I_el R1 ) by L230 , L33;
L232: ( ( 'not' C101 ) 'or' C100 ) = ( I_el R1 ) by L231 , L29;
L233: ( C100 'imp' C101 ) = ( I_el R1 ) by L230 , L33;
L234: ( ( 'not' C100 ) 'or' C101 ) = ( I_el R1 ) by L233 , L29;
L235: (for B104 being (Element of R1) holds ( ( ( All (C100 , C103 , C102) ) 'eqv' ( All (C101 , C103 , C102) ) ) . B104 ) = ( TRUE ))
proof
let C104 being (Element of R1);
L236:
now
assume that
L237: (for B105 being (Element of R1) holds (B105 in ( EqClass (C104 , ( CompF (C103 , C102) )) ) implies ( C100 . B105 ) = ( TRUE )))
and
L238: (not (for B106 being (Element of R1) holds (B106 in ( EqClass (C104 , ( CompF (C103 , C102) )) ) implies ( C101 . B106 ) = ( TRUE ))));
consider C105 being (Element of R1) such that L239: C105 in ( EqClass (C104 , ( CompF (C103 , C102) )) ) and L240: ( C101 . C105 ) <> ( TRUE ) by L238;
L241: ( C100 . C105 ) = ( TRUE ) by L237 , L239;
L242: ( C101 . C105 ) = ( FALSE ) by L240 , XBOOLEAN:def 3;
L243: ( ( ( 'not' C100 ) 'or' C101 ) . C105 ) = ( ( ( 'not' C100 ) . C105 ) 'or' ( C101 . C105 ) ) by BVFUNC_1:def 4
.= ( ( FALSE ) 'or' ( FALSE ) ) by L242 , L241 , MARGREL1:def 19
.= ( FALSE );
thus L244: thesis by L243 , L234 , BVFUNC_1:def 11;
end;
L245:
now
assume that
L246: (not (for B107 being (Element of R1) holds (B107 in ( EqClass (C104 , ( CompF (C103 , C102) )) ) implies ( C100 . B107 ) = ( TRUE ))))
and
L247: (for B108 being (Element of R1) holds (B108 in ( EqClass (C104 , ( CompF (C103 , C102) )) ) implies ( C101 . B108 ) = ( TRUE )));
consider C106 being (Element of R1) such that L248: C106 in ( EqClass (C104 , ( CompF (C103 , C102) )) ) and L249: ( C100 . C106 ) <> ( TRUE ) by L246;
L250: ( C101 . C106 ) = ( TRUE ) by L247 , L248;
L251: ( C100 . C106 ) = ( FALSE ) by L249 , XBOOLEAN:def 3;
L252: ( ( ( 'not' C101 ) 'or' C100 ) . C106 ) = ( ( ( 'not' C101 ) . C106 ) 'or' ( C100 . C106 ) ) by BVFUNC_1:def 4
.= ( ( FALSE ) 'or' ( FALSE ) ) by L251 , L250 , MARGREL1:def 19
.= ( FALSE );
thus L253: thesis by L252 , L232 , BVFUNC_1:def 11;
end;
L254: ( ( All (C100 , C103 , C102) ) 'eqv' ( All (C101 , C103 , C102) ) ) = ( ( ( All (C100 , C103 , C102) ) 'imp' ( All (C101 , C103 , C102) ) ) '&' ( ( All (C101 , C103 , C102) ) 'imp' ( All (C100 , C103 , C102) ) ) ) by L27
.= ( ( ( 'not' ( All (C100 , C103 , C102) ) ) 'or' ( All (C101 , C103 , C102) ) ) '&' ( ( All (C101 , C103 , C102) ) 'imp' ( All (C100 , C103 , C102) ) ) ) by L29
.= ( ( ( 'not' ( All (C100 , C103 , C102) ) ) 'or' ( All (C101 , C103 , C102) ) ) '&' ( ( 'not' ( All (C101 , C103 , C102) ) ) 'or' ( All (C100 , C103 , C102) ) ) ) by L29
.= ( ( ( ( 'not' ( All (C100 , C103 , C102) ) ) 'or' ( All (C101 , C103 , C102) ) ) '&' ( 'not' ( All (C101 , C103 , C102) ) ) ) 'or' ( ( ( 'not' ( All (C100 , C103 , C102) ) ) 'or' ( All (C101 , C103 , C102) ) ) '&' ( All (C100 , C103 , C102) ) ) ) by BVFUNC_1:12
.= ( ( ( ( 'not' ( All (C100 , C103 , C102) ) ) '&' ( 'not' ( All (C101 , C103 , C102) ) ) ) 'or' ( ( All (C101 , C103 , C102) ) '&' ( 'not' ( All (C101 , C103 , C102) ) ) ) ) 'or' ( ( ( 'not' ( All (C100 , C103 , C102) ) ) 'or' ( All (C101 , C103 , C102) ) ) '&' ( All (C100 , C103 , C102) ) ) ) by BVFUNC_1:12
.= ( ( ( ( 'not' ( All (C100 , C103 , C102) ) ) '&' ( 'not' ( All (C101 , C103 , C102) ) ) ) 'or' ( ( All (C101 , C103 , C102) ) '&' ( 'not' ( All (C101 , C103 , C102) ) ) ) ) 'or' ( ( ( 'not' ( All (C100 , C103 , C102) ) ) '&' ( All (C100 , C103 , C102) ) ) 'or' ( ( All (C101 , C103 , C102) ) '&' ( All (C100 , C103 , C102) ) ) ) ) by BVFUNC_1:12
.= ( ( ( ( 'not' ( All (C100 , C103 , C102) ) ) '&' ( 'not' ( All (C101 , C103 , C102) ) ) ) 'or' ( O_el R1 ) ) 'or' ( ( ( 'not' ( All (C100 , C103 , C102) ) ) '&' ( All (C100 , C103 , C102) ) ) 'or' ( ( All (C101 , C103 , C102) ) '&' ( All (C100 , C103 , C102) ) ) ) ) by L23
.= ( ( ( ( 'not' ( All (C100 , C103 , C102) ) ) '&' ( 'not' ( All (C101 , C103 , C102) ) ) ) 'or' ( O_el R1 ) ) 'or' ( ( O_el R1 ) 'or' ( ( All (C101 , C103 , C102) ) '&' ( All (C100 , C103 , C102) ) ) ) ) by L23
.= ( ( ( 'not' ( All (C100 , C103 , C102) ) ) '&' ( 'not' ( All (C101 , C103 , C102) ) ) ) 'or' ( ( O_el R1 ) 'or' ( ( All (C101 , C103 , C102) ) '&' ( All (C100 , C103 , C102) ) ) ) ) by BVFUNC_1:9
.= ( ( ( 'not' ( All (C100 , C103 , C102) ) ) '&' ( 'not' ( All (C101 , C103 , C102) ) ) ) 'or' ( ( All (C101 , C103 , C102) ) '&' ( All (C100 , C103 , C102) ) ) ) by BVFUNC_1:9;
L255: ( ( ( All (C100 , C103 , C102) ) 'eqv' ( All (C101 , C103 , C102) ) ) . C104 ) = ( ( ( ( 'not' ( All (C100 , C103 , C102) ) ) '&' ( 'not' ( All (C101 , C103 , C102) ) ) ) . C104 ) 'or' ( ( ( All (C101 , C103 , C102) ) '&' ( All (C100 , C103 , C102) ) ) . C104 ) ) by L254 , BVFUNC_1:def 4
.= ( ( ( ( 'not' ( All (C100 , C103 , C102) ) ) . C104 ) '&' ( ( 'not' ( All (C101 , C103 , C102) ) ) . C104 ) ) 'or' ( ( ( All (C101 , C103 , C102) ) '&' ( All (C100 , C103 , C102) ) ) . C104 ) ) by MARGREL1:def 20
.= ( ( ( ( 'not' ( All (C100 , C103 , C102) ) ) . C104 ) '&' ( ( 'not' ( All (C101 , C103 , C102) ) ) . C104 ) ) 'or' ( ( ( All (C101 , C103 , C102) ) . C104 ) '&' ( ( All (C100 , C103 , C102) ) . C104 ) ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( ( All (C100 , C103 , C102) ) . C104 ) ) '&' ( ( 'not' ( All (C101 , C103 , C102) ) ) . C104 ) ) 'or' ( ( ( All (C101 , C103 , C102) ) . C104 ) '&' ( ( All (C100 , C103 , C102) ) . C104 ) ) ) by MARGREL1:def 19
.= ( ( ( 'not' ( ( All (C100 , C103 , C102) ) . C104 ) ) '&' ( 'not' ( ( All (C101 , C103 , C102) ) . C104 ) ) ) 'or' ( ( ( All (C101 , C103 , C102) ) . C104 ) '&' ( ( All (C100 , C103 , C102) ) . C104 ) ) ) by MARGREL1:def 19;
L256:
now
assume that
L257: (not (for B109 being (Element of R1) holds (B109 in ( EqClass (C104 , ( CompF (C103 , C102) )) ) implies ( C100 . B109 ) = ( TRUE ))))
and
L258: (not (for B110 being (Element of R1) holds (B110 in ( EqClass (C104 , ( CompF (C103 , C102) )) ) implies ( C101 . B110 ) = ( TRUE ))));
L259: ( ( B_INF (C101 , ( CompF (C103 , C102) )) ) . C104 ) = ( FALSE ) by L258 , BVFUNC_1:def 16;
thus L260: thesis by L259 , L255 , L257 , BVFUNC_1:def 16;
end;
L261:
now
assume that
L262: (for B111 being (Element of R1) holds (B111 in ( EqClass (C104 , ( CompF (C103 , C102) )) ) implies ( C100 . B111 ) = ( TRUE )))
and
L263: (for B112 being (Element of R1) holds (B112 in ( EqClass (C104 , ( CompF (C103 , C102) )) ) implies ( C101 . B112 ) = ( TRUE )));
L264: ( ( B_INF (C101 , ( CompF (C103 , C102) )) ) . C104 ) = ( TRUE ) by L263 , BVFUNC_1:def 16;
thus L265: thesis by L264 , L255 , L262 , BVFUNC_1:def 16;
end;
thus L266: thesis by L261 , L236 , L245 , L256;
end;
thus L267: thesis by L235 , BVFUNC_1:def 11;
end;
theorem
L268: (for R1 being non  empty set holds (for B113 , B114 being (Function of R1 , ( BOOLEAN )) holds (for B115 being (Subset of ( PARTITIONS R1 )) holds (for B116 being (a_partition of R1) holds (( B113 'eqv' B114 ) = ( I_el R1 ) implies ( ( Ex (B113 , B116 , B115) ) 'eqv' ( Ex (B114 , B116 , B115) ) ) = ( I_el R1 ))))))
proof
let R1 being non  empty set;
let C107 , C108 being (Function of R1 , ( BOOLEAN ));
let C109 being (Subset of ( PARTITIONS R1 ));
let C110 being (a_partition of R1);
assume L269: ( C107 'eqv' C108 ) = ( I_el R1 );
L270: ( C108 'imp' C107 ) = ( I_el R1 ) by L269 , L33;
L271: ( ( 'not' C108 ) 'or' C107 ) = ( I_el R1 ) by L270 , L29;
L272: ( C107 'imp' C108 ) = ( I_el R1 ) by L269 , L33;
L273: ( ( 'not' C107 ) 'or' C108 ) = ( I_el R1 ) by L272 , L29;
L274: (for B117 being (Element of R1) holds ( ( ( Ex (C107 , C110 , C109) ) 'eqv' ( Ex (C108 , C110 , C109) ) ) . B117 ) = ( TRUE ))
proof
let C111 being (Element of R1);
L275: ( ( Ex (C107 , C110 , C109) ) 'eqv' ( Ex (C108 , C110 , C109) ) ) = ( ( ( Ex (C107 , C110 , C109) ) 'imp' ( Ex (C108 , C110 , C109) ) ) '&' ( ( Ex (C108 , C110 , C109) ) 'imp' ( Ex (C107 , C110 , C109) ) ) ) by L27
.= ( ( ( 'not' ( Ex (C107 , C110 , C109) ) ) 'or' ( Ex (C108 , C110 , C109) ) ) '&' ( ( Ex (C108 , C110 , C109) ) 'imp' ( Ex (C107 , C110 , C109) ) ) ) by L29
.= ( ( ( 'not' ( Ex (C107 , C110 , C109) ) ) 'or' ( Ex (C108 , C110 , C109) ) ) '&' ( ( 'not' ( Ex (C108 , C110 , C109) ) ) 'or' ( Ex (C107 , C110 , C109) ) ) ) by L29
.= ( ( ( ( 'not' ( Ex (C107 , C110 , C109) ) ) 'or' ( Ex (C108 , C110 , C109) ) ) '&' ( 'not' ( Ex (C108 , C110 , C109) ) ) ) 'or' ( ( ( 'not' ( Ex (C107 , C110 , C109) ) ) 'or' ( Ex (C108 , C110 , C109) ) ) '&' ( Ex (C107 , C110 , C109) ) ) ) by BVFUNC_1:12
.= ( ( ( ( 'not' ( Ex (C107 , C110 , C109) ) ) '&' ( 'not' ( Ex (C108 , C110 , C109) ) ) ) 'or' ( ( Ex (C108 , C110 , C109) ) '&' ( 'not' ( Ex (C108 , C110 , C109) ) ) ) ) 'or' ( ( ( 'not' ( Ex (C107 , C110 , C109) ) ) 'or' ( Ex (C108 , C110 , C109) ) ) '&' ( Ex (C107 , C110 , C109) ) ) ) by BVFUNC_1:12
.= ( ( ( ( 'not' ( Ex (C107 , C110 , C109) ) ) '&' ( 'not' ( Ex (C108 , C110 , C109) ) ) ) 'or' ( ( Ex (C108 , C110 , C109) ) '&' ( 'not' ( Ex (C108 , C110 , C109) ) ) ) ) 'or' ( ( ( 'not' ( Ex (C107 , C110 , C109) ) ) '&' ( Ex (C107 , C110 , C109) ) ) 'or' ( ( Ex (C108 , C110 , C109) ) '&' ( Ex (C107 , C110 , C109) ) ) ) ) by BVFUNC_1:12
.= ( ( ( ( 'not' ( Ex (C107 , C110 , C109) ) ) '&' ( 'not' ( Ex (C108 , C110 , C109) ) ) ) 'or' ( O_el R1 ) ) 'or' ( ( ( 'not' ( Ex (C107 , C110 , C109) ) ) '&' ( Ex (C107 , C110 , C109) ) ) 'or' ( ( Ex (C108 , C110 , C109) ) '&' ( Ex (C107 , C110 , C109) ) ) ) ) by L23
.= ( ( ( ( 'not' ( Ex (C107 , C110 , C109) ) ) '&' ( 'not' ( Ex (C108 , C110 , C109) ) ) ) 'or' ( O_el R1 ) ) 'or' ( ( O_el R1 ) 'or' ( ( Ex (C108 , C110 , C109) ) '&' ( Ex (C107 , C110 , C109) ) ) ) ) by L23
.= ( ( ( 'not' ( Ex (C107 , C110 , C109) ) ) '&' ( 'not' ( Ex (C108 , C110 , C109) ) ) ) 'or' ( ( O_el R1 ) 'or' ( ( Ex (C108 , C110 , C109) ) '&' ( Ex (C107 , C110 , C109) ) ) ) ) by BVFUNC_1:9
.= ( ( ( 'not' ( Ex (C107 , C110 , C109) ) ) '&' ( 'not' ( Ex (C108 , C110 , C109) ) ) ) 'or' ( ( Ex (C108 , C110 , C109) ) '&' ( Ex (C107 , C110 , C109) ) ) ) by BVFUNC_1:9;
L276: ( ( ( Ex (C107 , C110 , C109) ) 'eqv' ( Ex (C108 , C110 , C109) ) ) . C111 ) = ( ( ( ( 'not' ( Ex (C107 , C110 , C109) ) ) '&' ( 'not' ( Ex (C108 , C110 , C109) ) ) ) . C111 ) 'or' ( ( ( Ex (C108 , C110 , C109) ) '&' ( Ex (C107 , C110 , C109) ) ) . C111 ) ) by L275 , BVFUNC_1:def 4
.= ( ( ( ( 'not' ( Ex (C107 , C110 , C109) ) ) . C111 ) '&' ( ( 'not' ( Ex (C108 , C110 , C109) ) ) . C111 ) ) 'or' ( ( ( Ex (C108 , C110 , C109) ) '&' ( Ex (C107 , C110 , C109) ) ) . C111 ) ) by MARGREL1:def 20
.= ( ( ( ( 'not' ( Ex (C107 , C110 , C109) ) ) . C111 ) '&' ( ( 'not' ( Ex (C108 , C110 , C109) ) ) . C111 ) ) 'or' ( ( ( Ex (C108 , C110 , C109) ) . C111 ) '&' ( ( Ex (C107 , C110 , C109) ) . C111 ) ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( ( Ex (C107 , C110 , C109) ) . C111 ) ) '&' ( ( 'not' ( Ex (C108 , C110 , C109) ) ) . C111 ) ) 'or' ( ( ( Ex (C108 , C110 , C109) ) . C111 ) '&' ( ( Ex (C107 , C110 , C109) ) . C111 ) ) ) by MARGREL1:def 19
.= ( ( ( 'not' ( ( Ex (C107 , C110 , C109) ) . C111 ) ) '&' ( 'not' ( ( Ex (C108 , C110 , C109) ) . C111 ) ) ) 'or' ( ( ( Ex (C108 , C110 , C109) ) . C111 ) '&' ( ( Ex (C107 , C110 , C109) ) . C111 ) ) ) by MARGREL1:def 19;
per cases ;
suppose L277: ((ex B118 being (Element of R1) st (B118 in ( EqClass (C111 , ( CompF (C110 , C109) )) ) & ( C107 . B118 ) = ( TRUE ))) & (ex B119 being (Element of R1) st (B119 in ( EqClass (C111 , ( CompF (C110 , C109) )) ) & ( C108 . B119 ) = ( TRUE ))));

L278: ( ( B_SUP (C108 , ( CompF (C110 , C109) )) ) . C111 ) = ( TRUE ) by L277 , BVFUNC_1:def 17;
thus L279: thesis by L278 , L276 , L277 , BVFUNC_1:def 17;
end;
suppose L280: ((ex B120 being (Element of R1) st (B120 in ( EqClass (C111 , ( CompF (C110 , C109) )) ) & ( C107 . B120 ) = ( TRUE ))) & (not (ex B121 being (Element of R1) st (B121 in ( EqClass (C111 , ( CompF (C110 , C109) )) ) & ( C108 . B121 ) = ( TRUE )))));

consider C112 being (Element of R1) such that L281: C112 in ( EqClass (C111 , ( CompF (C110 , C109) )) ) and L282: ( C107 . C112 ) = ( TRUE ) by L280;
L283: ( C108 . C112 ) <> ( TRUE ) by L280 , L281;
L284: ( C108 . C112 ) = ( FALSE ) by L283 , XBOOLEAN:def 3;
L285: ( ( ( 'not' C107 ) 'or' C108 ) . C112 ) = ( ( ( 'not' C107 ) . C112 ) 'or' ( C108 . C112 ) ) by BVFUNC_1:def 4
.= ( ( FALSE ) 'or' ( FALSE ) ) by L282 , L284 , MARGREL1:def 19
.= ( FALSE );
thus L286: thesis by L285 , L273 , BVFUNC_1:def 11;
end;
suppose L287: ((not (ex B122 being (Element of R1) st (B122 in ( EqClass (C111 , ( CompF (C110 , C109) )) ) & ( C107 . B122 ) = ( TRUE )))) & (ex B123 being (Element of R1) st (B123 in ( EqClass (C111 , ( CompF (C110 , C109) )) ) & ( C108 . B123 ) = ( TRUE ))));

consider C113 being (Element of R1) such that L288: C113 in ( EqClass (C111 , ( CompF (C110 , C109) )) ) and L289: ( C108 . C113 ) = ( TRUE ) by L287;
L290: ( C107 . C113 ) <> ( TRUE ) by L287 , L288;
L291: ( C107 . C113 ) = ( FALSE ) by L290 , XBOOLEAN:def 3;
L292: ( ( ( 'not' C108 ) 'or' C107 ) . C113 ) = ( ( ( 'not' C108 ) . C113 ) 'or' ( C107 . C113 ) ) by BVFUNC_1:def 4
.= ( ( FALSE ) 'or' ( FALSE ) ) by L289 , L291 , MARGREL1:def 19
.= ( FALSE );
thus L293: thesis by L292 , L271 , BVFUNC_1:def 11;
end;
suppose L294: ((not (ex B124 being (Element of R1) st (B124 in ( EqClass (C111 , ( CompF (C110 , C109) )) ) & ( C107 . B124 ) = ( TRUE )))) & (not (ex B125 being (Element of R1) st (B125 in ( EqClass (C111 , ( CompF (C110 , C109) )) ) & ( C108 . B125 ) = ( TRUE )))));

L295: ( ( B_SUP (C108 , ( CompF (C110 , C109) )) ) . C111 ) = ( FALSE ) by L294 , BVFUNC_1:def 17;
thus L296: thesis by L295 , L276 , L294 , BVFUNC_1:def 17;
end;
end;
thus L298: thesis by L274 , BVFUNC_1:def 11;
end;
