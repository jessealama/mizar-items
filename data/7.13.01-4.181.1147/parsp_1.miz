:: Parallelity Spaces
::  by Eugeniusz Kusak, Wojciech Leo\'nczuk and Micha{\l} Muzalewski
::
:: Received November 23, 1989
:: Copyright (c) 1990-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies VECTSP_1, SUBSET_1, RLVECT_1, ALGSTR_0, XBOOLE_0, ARYTM_1,
      ARYTM_3, RELAT_1, SUPINF_2, ZFMISC_1, STRUCT_0, BINOP_1, FUNCT_1,
      MCART_1, TARSKI, PARSP_1, RECDEF_2;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, MCART_1, DOMAIN_1, FUNCT_2,
      BINOP_1, STRUCT_0, ALGSTR_0, RLVECT_1, GROUP_1, VECTSP_1;
 constructors BINOP_1, DOMAIN_1, VECTSP_1, RLVECT_1, RELSET_1;
 registrations XBOOLE_0, SUBSET_1, STRUCT_0, VECTSP_1;
 requirements SUBSET, BOOLE;
 definitions TARSKI, STRUCT_0;
 theorems MCART_1, VECTSP_1, BINOP_1, FUNCT_2, TARSKI, RLVECT_1, GROUP_1,
      XTUPLE_0;
 schemes BINOP_1, FUNCT_2, XBOOLE_0;

begin
L1: (for B1 being  add-associative  right_zeroed  right_complementable non  empty addLoopStr holds (for B2 , B3 being (Element of B1) holds ( - ( B2 - B3 ) ) = ( B3 - B2 )))
proof
let C1 being  add-associative  right_zeroed  right_complementable non  empty addLoopStr;
let C2 , C3 being (Element of C1);
thus L2: ( - ( C2 - C3 ) ) = ( C3 + ( - C2 ) ) by RLVECT_1:33
.= ( C3 - C2 ) by RLVECT_1:def 11;
end;
L3: (for R1 being Field holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (for R5 being (Element of R1) holds ( ( ( R2 - R3 ) * ( R4 - R5 ) ) - ( ( R3 - R2 ) * ( R5 - R4 ) ) ) = ( 0. R1 ))))))
proof
let R1 being Field;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R5 being (Element of R1);
L4: (( - ( R2 - R3 ) ) = ( R3 - R2 ) & ( - ( R4 - R5 ) ) = ( R5 - R4 )) by L1;
L5: ( ( ( R2 - R3 ) * ( R4 - R5 ) ) - ( ( R3 - R2 ) * ( R5 - R4 ) ) ) = ( ( ( R2 - R3 ) * ( R4 - R5 ) ) - ( ( R2 - R3 ) * ( R4 - R5 ) ) ) by L4 , VECTSP_1:10;
thus L6: thesis by L5 , RLVECT_1:15;
end;
L7: (for R1 being Field holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (for R5 being (Element of R1) holds ( ( R2 * ( R3 - R3 ) ) - ( ( R4 - R4 ) * R5 ) ) = ( 0. R1 ))))))
proof
let R1 being Field;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R5 being (Element of R1);
L8: ( R4 - R4 ) = ( 0. R1 ) by RLVECT_1:15;
L9: ( ( R4 - R4 ) * R5 ) = ( 0. R1 ) by L8 , VECTSP_1:7;
L10: ( R3 - R3 ) = ( 0. R1 ) by RLVECT_1:15;
L11: ( R2 * ( R3 - R3 ) ) = ( 0. R1 ) by L10 , VECTSP_1:7;
thus L12: thesis by L11 , L9 , RLVECT_1:15;
end;
L13: (for R1 being Field holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (for R5 being (Element of R1) holds (for R6 being (Element of R1) holds (for R9 being (Element of R1) holds ((R2 <> ( 0. R1 ) & ( ( R2 * R6 ) - ( R5 * R3 ) ) = ( 0. R1 ) & ( ( R2 * R4 ) - ( R9 * R3 ) ) = ( 0. R1 )) implies ( ( R5 * R4 ) - ( R9 * R6 ) ) = ( 0. R1 )))))))))
proof
let R1 being Field;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R5 being (Element of R1);
let R6 being (Element of R1);
let R9 being (Element of R1);
assume that
L14: R2 <> ( 0. R1 )
and
L15: ( ( R2 * R6 ) - ( R5 * R3 ) ) = ( 0. R1 )
and
L16: ( ( R2 * R4 ) - ( R9 * R3 ) ) = ( 0. R1 );
L17: R4 = ( ( R9 * R3 ) * ( R2 " ) ) by L14 , L16 , VECTSP_1:30;
L18: R4 = ( R9 * ( R3 * ( R2 " ) ) ) by L17 , GROUP_1:def 3;
L19: ( R5 * R4 ) = ( ( R5 * R9 ) * ( R3 * ( R2 " ) ) ) by L18 , GROUP_1:def 3;
L20: R6 = ( ( R5 * R3 ) * ( R2 " ) ) by L14 , L15 , VECTSP_1:30;
L21: R6 = ( R5 * ( R3 * ( R2 " ) ) ) by L20 , GROUP_1:def 3;
L22: ( R9 * R6 ) = ( ( R9 * R5 ) * ( R3 * ( R2 " ) ) ) by L21 , GROUP_1:def 3;
thus L23: thesis by L22 , L19 , RLVECT_1:15;
end;
L24: (for R1 being Field holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (for R5 being (Element of R1) holds (( ( R2 * R3 ) - ( R4 * R5 ) ) = ( 0. R1 ) implies ( ( R5 * R4 ) - ( R3 * R2 ) ) = ( 0. R1 )))))))
proof
let R1 being Field;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R5 being (Element of R1);
assume L25: ( ( R2 * R3 ) - ( R4 * R5 ) ) = ( 0. R1 );
L26: ( - ( ( R2 * R3 ) - ( R4 * R5 ) ) ) = ( 0. R1 ) by L25 , RLVECT_1:12;
thus L27: ( ( R5 * R4 ) - ( R3 * R2 ) ) = ( ( R5 * R4 ) + ( - ( R3 * R2 ) ) ) by RLVECT_1:def 11
.= ( 0. R1 ) by L26 , RLVECT_1:33;
end;
L28: (for R1 being Field holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (for R5 being (Element of R1) holds (for R6 being (Element of R1) holds (for R9 being (Element of R1) holds ((R3 <> ( 0. R1 ) & ( ( R2 * R6 ) - ( R5 * R3 ) ) = ( 0. R1 ) & ( ( R2 * R4 ) - ( R9 * R3 ) ) = ( 0. R1 )) implies ( ( R5 * R4 ) - ( R9 * R6 ) ) = ( 0. R1 )))))))))
proof
let R1 being Field;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R5 being (Element of R1);
let R6 being (Element of R1);
let R9 being (Element of R1);
assume L29: R3 <> ( 0. R1 );
L30: ((( ( R3 * R5 ) - ( R6 * R2 ) ) = ( 0. R1 ) & ( ( R3 * R9 ) - ( R4 * R2 ) ) = ( 0. R1 )) implies ( ( R6 * R9 ) - ( R4 * R5 ) ) = ( 0. R1 )) by L29 , L13;
thus L31: thesis by L30 , L24;
end;
L32: (for R1 being Field holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (for R5 being (Element of R1) holds ( ( R4 * R5 ) * ( R2 * R3 ) ) = ( ( ( R2 * R4 ) * R5 ) * R3 ))))))
proof
let R1 being Field;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R5 being (Element of R1);
thus L33: ( ( R4 * R5 ) * ( R2 * R3 ) ) = ( ( R2 * ( R4 * R5 ) ) * R3 ) by GROUP_1:def 3
.= ( ( ( R2 * R4 ) * R5 ) * R3 ) by GROUP_1:def 3;
end;
L34: (for R1 being Field holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (for R5 being (Element of R1) holds (for R7 being (Element of R1) holds (for R8 being (Element of R1) holds (( ( R2 * R3 ) - ( R4 * R5 ) ) = ( 0. R1 ) implies ( ( ( ( R2 * R7 ) * R8 ) * R3 ) - ( ( ( R4 * R7 ) * R8 ) * R5 ) ) = ( 0. R1 )))))))))
proof
let R1 being Field;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R5 being (Element of R1);
let R7 being (Element of R1);
let R8 being (Element of R1);
assume L35: ( ( R2 * R3 ) - ( R4 * R5 ) ) = ( 0. R1 );
L36: (( ( ( R2 * R7 ) * R8 ) * R3 ) = ( ( R7 * R8 ) * ( R2 * R3 ) ) & ( ( ( R4 * R7 ) * R8 ) * R5 ) = ( ( R7 * R8 ) * ( R4 * R5 ) )) by L32;
thus L37: ( ( ( ( R2 * R7 ) * R8 ) * R3 ) - ( ( ( R4 * R7 ) * R8 ) * R5 ) ) = ( ( R7 * R8 ) * ( ( R2 * R3 ) - ( R4 * R5 ) ) ) by L36 , VECTSP_1:11
.= ( 0. R1 ) by L35 , VECTSP_1:7;
end;
L38: (for R1 being Field holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (for R5 being (Element of R1) holds ( ( R2 - R3 ) * ( R4 - R5 ) ) = ( ( R2 * R4 ) + ( ( - ( R2 * R5 ) ) + ( - ( R3 * ( R4 - R5 ) ) ) ) ))))))
proof
let R1 being Field;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R5 being (Element of R1);
thus L39: ( ( R2 - R3 ) * ( R4 - R5 ) ) = ( ( R2 + ( - R3 ) ) * ( R4 - R5 ) ) by RLVECT_1:def 11
.= ( ( R2 * ( R4 - R5 ) ) + ( ( - R3 ) * ( R4 - R5 ) ) ) by VECTSP_1:def 7
.= ( ( R2 * ( R4 - R5 ) ) + ( - ( R3 * ( R4 - R5 ) ) ) ) by VECTSP_1:9
.= ( ( ( R2 * R4 ) - ( R2 * R5 ) ) + ( - ( R3 * ( R4 - R5 ) ) ) ) by VECTSP_1:11
.= ( ( ( R2 * R4 ) + ( - ( R2 * R5 ) ) ) + ( - ( R3 * ( R4 - R5 ) ) ) ) by RLVECT_1:def 11
.= ( ( R2 * R4 ) + ( ( - ( R2 * R5 ) ) + ( - ( R3 * ( R4 - R5 ) ) ) ) ) by RLVECT_1:def 3;
end;
L40: (for R1 being Field holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (for R5 being (Element of R1) holds ( ( R2 + R3 ) + ( R4 + R5 ) ) = ( ( R2 + ( R3 + R4 ) ) + R5 ))))))
proof
let R1 being Field;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R5 being (Element of R1);
thus L41: ( ( R2 + R3 ) + ( R4 + R5 ) ) = ( ( ( R2 + R3 ) + R4 ) + R5 ) by RLVECT_1:def 3
.= ( ( R2 + ( R3 + R4 ) ) + R5 ) by RLVECT_1:def 3;
end;
L42: (for B4 being  add-associative  right_zeroed  right_complementable non  empty addLoopStr holds (for B5 , B6 , B7 being (Element of B4) holds ( ( B6 + B5 ) - ( B7 + B5 ) ) = ( B6 - B7 )))
proof
let C4 being  add-associative  right_zeroed  right_complementable non  empty addLoopStr;
let C5 , C6 , C7 being (Element of C4);
thus L43: ( ( C6 + C5 ) - ( C7 + C5 ) ) = ( ( C6 + C5 ) + ( - ( C7 + C5 ) ) ) by RLVECT_1:def 11
.= ( ( C6 + C5 ) + ( ( - C5 ) + ( - C7 ) ) ) by RLVECT_1:31
.= ( ( ( C6 + C5 ) + ( - C5 ) ) + ( - C7 ) ) by RLVECT_1:def 3
.= ( ( C6 + ( C5 + ( - C5 ) ) ) + ( - C7 ) ) by RLVECT_1:def 3
.= ( ( C6 + ( 0. C4 ) ) + ( - C7 ) ) by RLVECT_1:def 10
.= ( C6 + ( - C7 ) ) by RLVECT_1:4
.= ( C6 - C7 ) by RLVECT_1:def 11;
end;
L44: (for B8 being  add-associative  right_zeroed  right_complementable non  empty addLoopStr holds (for B9 , B10 being (Element of B8) holds ( B9 + B10 ) = ( - ( ( - B10 ) + ( - B9 ) ) )))
proof
let C8 being  add-associative  right_zeroed  right_complementable non  empty addLoopStr;
let C9 , C10 being (Element of C8);
thus L45: ( C9 + C10 ) = ( - ( - ( C9 + C10 ) ) ) by RLVECT_1:17
.= ( - ( ( - C10 ) + ( - C9 ) ) ) by RLVECT_1:31;
end;
L46: (for R1 being Field holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (for R5 being (Element of R1) holds (for R6 being (Element of R1) holds (for R7 being (Element of R1) holds (( ( ( R2 - R3 ) * ( R4 - R5 ) ) - ( ( R2 - R6 ) * ( R4 - R7 ) ) ) = ( 0. R1 ) implies ( ( ( R3 - R2 ) * ( R7 - R5 ) ) - ( ( R3 - R6 ) * ( R7 - R4 ) ) ) = ( 0. R1 )))))))))
proof
let R1 being Field;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R5 being (Element of R1);
let R6 being (Element of R1);
let R7 being (Element of R1);
assume L47: ( ( ( R2 - R3 ) * ( R4 - R5 ) ) - ( ( R2 - R6 ) * ( R4 - R7 ) ) ) = ( 0. R1 );
L48: (( ( R2 - R3 ) * ( R4 - R5 ) ) = ( ( R2 * R4 ) + ( ( - ( R2 * R5 ) ) + ( - ( R3 * ( R4 - R5 ) ) ) ) ) & ( ( R2 - R6 ) * ( R4 - R7 ) ) = ( ( R2 * R4 ) + ( ( - ( R2 * R7 ) ) + ( - ( R6 * ( R4 - R7 ) ) ) ) )) by L38;
L49: (( ( R3 - R2 ) * ( R7 - R5 ) ) = ( ( R3 * R7 ) + ( ( - ( R3 * R5 ) ) + ( - ( R2 * ( R7 - R5 ) ) ) ) ) & ( ( R3 - R6 ) * ( R7 - R4 ) ) = ( ( R3 * R7 ) + ( ( - ( R3 * R4 ) ) + ( - ( R6 * ( R7 - R4 ) ) ) ) )) by L38;
thus L50: ( ( ( R3 - R2 ) * ( R7 - R5 ) ) - ( ( R3 - R6 ) * ( R7 - R4 ) ) ) = ( ( ( - ( R3 * R5 ) ) + ( - ( R2 * ( R7 - R5 ) ) ) ) - ( ( - ( R3 * R4 ) ) + ( - ( R6 * ( R7 - R4 ) ) ) ) ) by L49 , L42
.= ( ( ( - ( R3 * R5 ) ) + ( - ( ( R2 * R7 ) - ( R2 * R5 ) ) ) ) - ( ( - ( R3 * R4 ) ) + ( - ( R6 * ( R7 - R4 ) ) ) ) ) by VECTSP_1:11
.= ( ( ( - ( R3 * R5 ) ) + ( ( - ( R2 * R7 ) ) + ( R2 * R5 ) ) ) - ( ( - ( R3 * R4 ) ) + ( - ( R6 * ( R7 - R4 ) ) ) ) ) by RLVECT_1:33
.= ( ( ( ( - ( R3 * R5 ) ) + ( R2 * R5 ) ) + ( - ( R2 * R7 ) ) ) - ( ( - ( R3 * R4 ) ) + ( - ( R6 * ( R7 - R4 ) ) ) ) ) by RLVECT_1:def 3
.= ( ( ( ( R2 * R5 ) + ( - ( R3 * R5 ) ) ) + ( - ( R2 * R7 ) ) ) + ( - ( ( - ( R3 * R4 ) ) + ( - ( R6 * ( R7 - R4 ) ) ) ) ) ) by RLVECT_1:def 11
.= ( ( ( ( R2 * R5 ) + ( - ( R3 * R5 ) ) ) + ( - ( R2 * R7 ) ) ) + ( ( - ( - ( R3 * R4 ) ) ) + ( - ( - ( R6 * ( R7 - R4 ) ) ) ) ) ) by RLVECT_1:31
.= ( ( ( ( R2 * R5 ) + ( - ( R3 * R5 ) ) ) + ( - ( R2 * R7 ) ) ) + ( ( R3 * R4 ) + ( - ( - ( R6 * ( R7 - R4 ) ) ) ) ) ) by RLVECT_1:17
.= ( ( ( ( R2 * R5 ) + ( - ( R3 * R5 ) ) ) + ( - ( R2 * R7 ) ) ) + ( ( R3 * R4 ) + ( R6 * ( R7 - R4 ) ) ) ) by RLVECT_1:17
.= ( ( ( ( R2 * R5 ) + ( - ( R3 * R5 ) ) ) + ( ( - ( R2 * R7 ) ) + ( R3 * R4 ) ) ) + ( R6 * ( R7 - R4 ) ) ) by L40
.= ( ( ( ( R2 * R5 ) + ( - ( R3 * R5 ) ) ) + ( R3 * R4 ) ) + ( ( - ( R2 * R7 ) ) + ( R6 * ( R7 - R4 ) ) ) ) by L40
.= ( ( ( R2 * R5 ) + ( ( - ( R3 * R5 ) ) + ( R3 * R4 ) ) ) + ( ( - ( R2 * R7 ) ) + ( R6 * ( R7 - R4 ) ) ) ) by RLVECT_1:def 3
.= ( ( ( R2 * R5 ) + ( ( R3 * R4 ) - ( R3 * R5 ) ) ) + ( ( - ( R2 * R7 ) ) + ( R6 * ( R7 - R4 ) ) ) ) by RLVECT_1:def 11
.= ( ( ( R2 * R5 ) + ( R3 * ( R4 - R5 ) ) ) + ( ( - ( R2 * R7 ) ) + ( R6 * ( R7 - R4 ) ) ) ) by VECTSP_1:11
.= ( ( - ( ( - ( R2 * R5 ) ) + ( - ( R3 * ( R4 - R5 ) ) ) ) ) + ( ( - ( R2 * R7 ) ) + ( R6 * ( R7 - R4 ) ) ) ) by L44
.= ( ( - ( ( - ( R2 * R5 ) ) + ( - ( R3 * ( R4 - R5 ) ) ) ) ) + ( - ( ( - ( - ( R2 * R7 ) ) ) + ( - ( R6 * ( R7 - R4 ) ) ) ) ) ) by L44
.= ( ( - ( ( - ( R2 * R5 ) ) + ( - ( R3 * ( R4 - R5 ) ) ) ) ) + ( - ( ( R2 * R7 ) + ( - ( R6 * ( R7 - R4 ) ) ) ) ) ) by RLVECT_1:17
.= ( - ( ( ( - ( R2 * R5 ) ) + ( - ( R3 * ( R4 - R5 ) ) ) ) + ( ( R2 * R7 ) + ( - ( R6 * ( R7 - R4 ) ) ) ) ) ) by RLVECT_1:31
.= ( - ( ( ( - ( R2 * R5 ) ) + ( - ( R3 * ( R4 - R5 ) ) ) ) + ( - ( ( - ( R2 * R7 ) ) + ( - ( - ( R6 * ( R7 - R4 ) ) ) ) ) ) ) ) by L44
.= ( - ( ( ( - ( R2 * R5 ) ) + ( - ( R3 * ( R4 - R5 ) ) ) ) - ( ( - ( R2 * R7 ) ) + ( - ( - ( R6 * ( R7 - R4 ) ) ) ) ) ) ) by RLVECT_1:def 11
.= ( - ( ( ( - ( R2 * R5 ) ) + ( - ( R3 * ( R4 - R5 ) ) ) ) - ( ( - ( R2 * R7 ) ) + ( - ( ( - ( R7 - R4 ) ) * R6 ) ) ) ) ) by VECTSP_1:9
.= ( - ( ( ( - ( R2 * R5 ) ) + ( - ( R3 * ( R4 - R5 ) ) ) ) - ( ( - ( R2 * R7 ) ) + ( - ( R6 * ( R4 - R7 ) ) ) ) ) ) by L1
.= ( - ( 0. R1 ) ) by L47 , L48 , L42
.= ( 0. R1 ) by RLVECT_1:12;
end;
L51: (for R1 being Field holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds ( R2 - ( ( R2 + R3 ) + ( - R4 ) ) ) = ( R4 - R3 )))))
proof
let R1 being Field;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
thus L52: ( R2 - ( ( R2 + R3 ) + ( - R4 ) ) ) = ( R2 - ( R2 + ( R3 + ( - R4 ) ) ) ) by RLVECT_1:def 3
.= ( R2 - ( R2 + ( R3 - R4 ) ) ) by RLVECT_1:def 11
.= ( R2 + ( - ( R2 + ( R3 - R4 ) ) ) ) by RLVECT_1:def 11
.= ( R2 + ( ( - R2 ) + ( - ( R3 - R4 ) ) ) ) by RLVECT_1:31
.= ( ( R2 + ( - R2 ) ) + ( - ( R3 - R4 ) ) ) by RLVECT_1:def 3
.= ( ( 0. R1 ) + ( - ( R3 - R4 ) ) ) by RLVECT_1:def 10
.= ( - ( R3 - R4 ) ) by RLVECT_1:4
.= ( R4 - R3 ) by L1;
end;
L53: (for R1 being Field holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (for R6 being (Element of R1) holds (for R8 being (Element of R1) holds (for R9 being (Element of R1) holds ( ( ( R2 - R3 ) * ( R4 - ( ( R4 + R9 ) + ( - R8 ) ) ) ) - ( ( R6 - ( ( R6 + R3 ) + ( - R2 ) ) ) * ( R8 - R9 ) ) ) = ( 0. R1 ))))))))
proof
let R1 being Field;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R6 being (Element of R1);
let R8 being (Element of R1);
let R9 being (Element of R1);
L54: (( R4 - ( ( R4 + R9 ) + ( - R8 ) ) ) = ( R8 - R9 ) & ( R6 - ( ( R6 + R3 ) + ( - R2 ) ) ) = ( R2 - R3 )) by L51;
thus L55: thesis by L54 , RLVECT_1:15;
end;
deffunc H1(Field) = [: (the carrier of $1) , (the carrier of $1) , (the carrier of $1) :];
definition
let R1 being Field;
func c3add R1 -> (BinOp of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) means 
:L56: (for R10 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) holds (for R11 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) holds ( it . (R10 , R11) ) = [ ( ( R10 `1_3 ) + ( R11 `1_3 ) ) , ( ( R10 `2_3 ) + ( R11 `2_3 ) ) , ( ( R10 `3_3 ) + ( R11 `3_3 ) ) ]));
existence
proof
deffunc H2((Element of H1(R1)) , (Element of H1(R1))) = [ ( ( $1 `1_3 ) + ( $2 `1_3 ) ) , ( ( $1 `2_3 ) + ( $2 `2_3 ) ) , ( ( $1 `3_3 ) + ( $2 `3_3 ) ) ];
consider C11 being (BinOp of H1(R1)) such that L57: (for R10 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) holds (for R11 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) holds ( C11 . (R10 , R11) ) = H2(R10 , R11))) from BINOP_1:sch 4;
take C11;
thus L58: thesis by L57;
end;
uniqueness
proof
let C12 , C13 being (BinOp of H1(R1));
assume that
L59: (for R10 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) holds (for R11 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) holds ( C12 . (R10 , R11) ) = [ ( ( R10 `1_3 ) + ( R11 `1_3 ) ) , ( ( R10 `2_3 ) + ( R11 `2_3 ) ) , ( ( R10 `3_3 ) + ( R11 `3_3 ) ) ]))
and
L60: (for R10 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) holds (for R11 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) holds ( C13 . (R10 , R11) ) = [ ( ( R10 `1_3 ) + ( R11 `1_3 ) ) , ( ( R10 `2_3 ) + ( R11 `2_3 ) ) , ( ( R10 `3_3 ) + ( R11 `3_3 ) ) ]));
L61: (for R10 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) holds (for R11 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) holds ( C12 . (R10 , R11) ) = ( C13 . (R10 , R11) )))
proof
let R10 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]);
let R11 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]);
thus L62: ( C12 . (R10 , R11) ) = [ ( ( R10 `1_3 ) + ( R11 `1_3 ) ) , ( ( R10 `2_3 ) + ( R11 `2_3 ) ) , ( ( R10 `3_3 ) + ( R11 `3_3 ) ) ] by L59
.= ( C13 . (R10 , R11) ) by L60;
end;
thus L63: C12 = C13 by L61 , BINOP_1:2;
end;
end;
definition
let R1 being Field;
let R10 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]);
let R11 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]);
func R10 + R11 -> (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) equals 
( ( c3add R1 ) . (R10 , R11) );
coherence;
end;
theorem
L66: (for R1 being Field holds (for R10 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) holds (for R11 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) holds ( R10 + R11 ) = [ ( ( R10 `1_3 ) + ( R11 `1_3 ) ) , ( ( R10 `2_3 ) + ( R11 `2_3 ) ) , ( ( R10 `3_3 ) + ( R11 `3_3 ) ) ]))) by L56;
theorem
L67: (for R1 being Field holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (for R7 being (Element of R1) holds (for R8 being (Element of R1) holds (for R9 being (Element of R1) holds ( [ R2 , R3 , R4 ] + [ R7 , R8 , R9 ] ) = [ ( R2 + R7 ) , ( R3 + R8 ) , ( R4 + R9 ) ])))))))
proof
let R1 being Field;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R7 being (Element of R1);
let R8 being (Element of R1);
let R9 being (Element of R1);
set D1 = [ R2 , R3 , R4 ];
set D2 = [ R7 , R8 , R9 ];
L68: (( D1 `3_3 ) = R4 & ( D2 `1_3 ) = R7) by MCART_1:def 5 , MCART_1:def 7;
L69: (( D2 `2_3 ) = R8 & ( D2 `3_3 ) = R9) by MCART_1:def 6 , MCART_1:def 7;
L70: (( D1 `1_3 ) = R2 & ( D1 `2_3 ) = R3) by MCART_1:def 5 , MCART_1:def 6;
thus L71: thesis by L70 , L68 , L69 , L56;
end;
definition
let R1 being Field;
func c3compl R1 -> (UnOp of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) means 
:L72: (for R10 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) holds ( it . R10 ) = [ ( - ( R10 `1_3 ) ) , ( - ( R10 `2_3 ) ) , ( - ( R10 `3_3 ) ) ]);
existence
proof
deffunc H3((Element of H1(R1))) = [ ( - ( $1 `1_3 ) ) , ( - ( $1 `2_3 ) ) , ( - ( $1 `3_3 ) ) ];
consider C14 being (UnOp of H1(R1)) such that L73: (for R10 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) holds ( C14 . R10 ) = H3(R10)) from FUNCT_2:sch 4;
take C14;
thus L74: thesis by L73;
end;
uniqueness
proof
let C15 , C16 being (UnOp of H1(R1));
assume that
L75: (for R10 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) holds ( C15 . R10 ) = [ ( - ( R10 `1_3 ) ) , ( - ( R10 `2_3 ) ) , ( - ( R10 `3_3 ) ) ])
and
L76: (for R10 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) holds ( C16 . R10 ) = [ ( - ( R10 `1_3 ) ) , ( - ( R10 `2_3 ) ) , ( - ( R10 `3_3 ) ) ]);
L77: (for R10 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) holds ( C15 . R10 ) = ( C16 . R10 ))
proof
let R10 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]);
thus L78: ( C15 . R10 ) = [ ( - ( R10 `1_3 ) ) , ( - ( R10 `2_3 ) ) , ( - ( R10 `3_3 ) ) ] by L75
.= ( C16 . R10 ) by L76;
end;
thus L79: C15 = C16 by L77 , FUNCT_2:63;
end;
end;
definition
let R1 being Field;
let R10 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]);
func - R10 -> (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) equals 
( ( c3compl R1 ) . R10 );
coherence;
end;
theorem
L82: (for R1 being Field holds (for R10 being (Element of [: (the carrier of R1) , (the carrier of R1) , (the carrier of R1) :]) holds ( - R10 ) = [ ( - ( R10 `1_3 ) ) , ( - ( R10 `2_3 ) ) , ( - ( R10 `3_3 ) ) ])) by L72;
definition
let R12 being set;
mode Relation4 of R12
 -> set
means :L83: it c= [: R12 , R12 , R12 , R12 :];
existence;
end;
definition
struct (1-sorted) ParStr(# carrier -> set , 4_arg_relation -> (Relation4 of the carrier) #);
end;
registration
cluster non  empty for ParStr;
existence
proof
set D3 = the non  empty set;
set D4 = the (Relation4 of D3);
take ParStr (# D3 , D4 #);
thus L86: (the carrier of ParStr (# D3 , D4 #)) is non  empty;
end;
end;
definition
let R14 being non  empty ParStr;
let C17 , C18 , C19 , C20 being (Element of R14);
pred C17 , C18 '||' C19 , C20
means
:L88: [ C17 , C18 , C19 , C20 ] in (the 4_arg_relation of R14)
;end;
definition
let R13 being Field;
func C_3 R13 -> set equals 
[: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :];
coherence;
end;
registration
let R13 being Field;
cluster ( C_3 R13 ) -> non  empty;
coherence;
end;
definition
let R13 being Field;
func 4C_3 R13 -> set equals 
[: ( C_3 R13 ) , ( C_3 R13 ) , ( C_3 R13 ) , ( C_3 R13 ) :];
coherence;
end;
registration
let R13 being Field;
cluster ( 4C_3 R13 ) -> non  empty;
coherence;
end;
definition
let R13 being Field;
func PRs R13 -> set means 
:L94: (for R15 being set holds (R15 in it iff (R15 in ( 4C_3 R13 ) & (ex R16 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R17 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R18 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R19 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (R15 = [ R16 , R17 , R18 , R19 ] & ( ( ( ( R16 `1_3 ) - ( R17 `1_3 ) ) * ( ( R18 `2_3 ) - ( R19 `2_3 ) ) ) - ( ( ( R18 `1_3 ) - ( R19 `1_3 ) ) * ( ( R16 `2_3 ) - ( R17 `2_3 ) ) ) ) = ( 0. R13 ) & ( ( ( ( R16 `1_3 ) - ( R17 `1_3 ) ) * ( ( R18 `3_3 ) - ( R19 `3_3 ) ) ) - ( ( ( R18 `1_3 ) - ( R19 `1_3 ) ) * ( ( R16 `3_3 ) - ( R17 `3_3 ) ) ) ) = ( 0. R13 ) & ( ( ( ( R16 `2_3 ) - ( R17 `2_3 ) ) * ( ( R18 `3_3 ) - ( R19 `3_3 ) ) ) - ( ( ( R18 `2_3 ) - ( R19 `2_3 ) ) * ( ( R16 `3_3 ) - ( R17 `3_3 ) ) ) ) = ( 0. R13 )))))))));
existence
proof
defpred S1[ set ] means (ex R16 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R17 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R18 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R19 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st ($1 = [ R16 , R17 , R18 , R19 ] & ( ( ( ( R16 `1_3 ) - ( R17 `1_3 ) ) * ( ( R18 `2_3 ) - ( R19 `2_3 ) ) ) - ( ( ( R18 `1_3 ) - ( R19 `1_3 ) ) * ( ( R16 `2_3 ) - ( R17 `2_3 ) ) ) ) = ( 0. R13 ) & ( ( ( ( R16 `1_3 ) - ( R17 `1_3 ) ) * ( ( R18 `3_3 ) - ( R19 `3_3 ) ) ) - ( ( ( R18 `1_3 ) - ( R19 `1_3 ) ) * ( ( R16 `3_3 ) - ( R17 `3_3 ) ) ) ) = ( 0. R13 ) & ( ( ( ( R16 `2_3 ) - ( R17 `2_3 ) ) * ( ( R18 `3_3 ) - ( R19 `3_3 ) ) ) - ( ( ( R18 `2_3 ) - ( R19 `2_3 ) ) * ( ( R16 `3_3 ) - ( R17 `3_3 ) ) ) ) = ( 0. R13 ))))));
thus L95: (ex B11 being set st (for B12 being set holds (B12 in B11 iff (B12 in ( 4C_3 R13 ) & S1[ B12 ])))) from XBOOLE_0:sch 1;
end;
uniqueness
proof
defpred S2[ set ] means ($1 in ( 4C_3 R13 ) & (ex R16 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R17 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R18 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R19 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st ($1 = [ R16 , R17 , R18 , R19 ] & ( ( ( ( R16 `1_3 ) - ( R17 `1_3 ) ) * ( ( R18 `2_3 ) - ( R19 `2_3 ) ) ) - ( ( ( R18 `1_3 ) - ( R19 `1_3 ) ) * ( ( R16 `2_3 ) - ( R17 `2_3 ) ) ) ) = ( 0. R13 ) & ( ( ( ( R16 `1_3 ) - ( R17 `1_3 ) ) * ( ( R18 `3_3 ) - ( R19 `3_3 ) ) ) - ( ( ( R18 `1_3 ) - ( R19 `1_3 ) ) * ( ( R16 `3_3 ) - ( R17 `3_3 ) ) ) ) = ( 0. R13 ) & ( ( ( ( R16 `2_3 ) - ( R17 `2_3 ) ) * ( ( R18 `3_3 ) - ( R19 `3_3 ) ) ) - ( ( ( R18 `2_3 ) - ( R19 `2_3 ) ) * ( ( R16 `3_3 ) - ( R17 `3_3 ) ) ) ) = ( 0. R13 )))))));
let C21 , C22 being set;
assume that
L96: (for R15 being set holds (R15 in C21 iff S2[ R15 ]))
and
L97: (for R15 being set holds (R15 in C22 iff S2[ R15 ]));
L98: (for R15 being set holds (R15 in C21 iff R15 in C22))
proof
let R15 being set;
L99: (R15 in C21 iff S2[ R15 ]) by L96;
thus L100: thesis by L99 , L97;
end;
thus L101: thesis by L98 , TARSKI:1;
end;
end;
theorem
L103: (for R13 being Field holds ( PRs R13 ) c= [: ( C_3 R13 ) , ( C_3 R13 ) , ( C_3 R13 ) , ( C_3 R13 ) :])
proof
let R13 being Field;
let R15 being set;
L104: ( 4C_3 R13 ) = [: ( C_3 R13 ) , ( C_3 R13 ) , ( C_3 R13 ) , ( C_3 R13 ) :];
thus L105: thesis by L104 , L94;
end;
definition
let R13 being Field;
func PR R13 -> (Relation4 of ( C_3 R13 )) equals 
( PRs R13 );
coherence
proof
L106: ( PRs R13 ) c= [: ( C_3 R13 ) , ( C_3 R13 ) , ( C_3 R13 ) , ( C_3 R13 ) :] by L103;
thus L107: thesis by L106 , L83;
end;
end;
definition
let R13 being Field;
func MPS R13 -> ParStr equals 
ParStr (# ( C_3 R13 ) , ( PR R13 ) #);
correctness;
end;
registration
let R13 being Field;
cluster ( MPS R13 ) ->  strict non  empty;
coherence;
end;
theorem
L111: (for R13 being Field holds (the carrier of ( MPS R13 )) = ( C_3 R13 ));
theorem
L112: (for R13 being Field holds (the 4_arg_relation of ( MPS R13 )) = ( PR R13 ));
theorem
L113: (for R13 being Field holds (for R28 being (Element of ( MPS R13 )) holds (for R29 being (Element of ( MPS R13 )) holds (for R30 being (Element of ( MPS R13 )) holds (for R31 being (Element of ( MPS R13 )) holds (R28 , R29 '||' R30 , R31 iff [ R28 , R29 , R30 , R31 ] in ( PR R13 ))))))) by L88;
theorem
L114: (for R13 being Field holds (for R28 being (Element of ( MPS R13 )) holds (for R29 being (Element of ( MPS R13 )) holds (for R30 being (Element of ( MPS R13 )) holds (for R31 being (Element of ( MPS R13 )) holds ([ R28 , R29 , R30 , R31 ] in ( PR R13 ) iff ([ R28 , R29 , R30 , R31 ] in ( 4C_3 R13 ) & (ex R20 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R21 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R22 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R23 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st ([ R28 , R29 , R30 , R31 ] = [ R20 , R21 , R22 , R23 ] & ( ( ( ( R20 `1_3 ) - ( R21 `1_3 ) ) * ( ( R22 `2_3 ) - ( R23 `2_3 ) ) ) - ( ( ( R22 `1_3 ) - ( R23 `1_3 ) ) * ( ( R20 `2_3 ) - ( R21 `2_3 ) ) ) ) = ( 0. R13 ) & ( ( ( ( R20 `1_3 ) - ( R21 `1_3 ) ) * ( ( R22 `3_3 ) - ( R23 `3_3 ) ) ) - ( ( ( R22 `1_3 ) - ( R23 `1_3 ) ) * ( ( R20 `3_3 ) - ( R21 `3_3 ) ) ) ) = ( 0. R13 ) & ( ( ( ( R20 `2_3 ) - ( R21 `2_3 ) ) * ( ( R22 `3_3 ) - ( R23 `3_3 ) ) ) - ( ( ( R22 `2_3 ) - ( R23 `2_3 ) ) * ( ( R20 `3_3 ) - ( R21 `3_3 ) ) ) ) = ( 0. R13 ))))))))))))) by L94;
theorem
L115: (for R13 being Field holds (for R28 being (Element of ( MPS R13 )) holds (for R29 being (Element of ( MPS R13 )) holds (for R30 being (Element of ( MPS R13 )) holds (for R31 being (Element of ( MPS R13 )) holds (R28 , R29 '||' R30 , R31 iff ([ R28 , R29 , R30 , R31 ] in ( 4C_3 R13 ) & (ex R20 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R21 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R22 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R23 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st ([ R28 , R29 , R30 , R31 ] = [ R20 , R21 , R22 , R23 ] & ( ( ( ( R20 `1_3 ) - ( R21 `1_3 ) ) * ( ( R22 `2_3 ) - ( R23 `2_3 ) ) ) - ( ( ( R22 `1_3 ) - ( R23 `1_3 ) ) * ( ( R20 `2_3 ) - ( R21 `2_3 ) ) ) ) = ( 0. R13 ) & ( ( ( ( R20 `1_3 ) - ( R21 `1_3 ) ) * ( ( R22 `3_3 ) - ( R23 `3_3 ) ) ) - ( ( ( R22 `1_3 ) - ( R23 `1_3 ) ) * ( ( R20 `3_3 ) - ( R21 `3_3 ) ) ) ) = ( 0. R13 ) & ( ( ( ( R20 `2_3 ) - ( R21 `2_3 ) ) * ( ( R22 `3_3 ) - ( R23 `3_3 ) ) ) - ( ( ( R22 `2_3 ) - ( R23 `2_3 ) ) * ( ( R20 `3_3 ) - ( R21 `3_3 ) ) ) ) = ( 0. R13 )))))))))))))
proof
let R13 being Field;
let R28 being (Element of ( MPS R13 ));
let R29 being (Element of ( MPS R13 ));
let R30 being (Element of ( MPS R13 ));
let R31 being (Element of ( MPS R13 ));
L116: (R28 , R29 '||' R30 , R31 iff [ R28 , R29 , R30 , R31 ] in ( PR R13 )) by L88;
thus L117: thesis by L116 , L94;
end;
theorem
L118: (for R13 being Field holds (the carrier of ( MPS R13 )) = [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]);
theorem
L119: (for R13 being Field holds (for R28 being (Element of ( MPS R13 )) holds (for R29 being (Element of ( MPS R13 )) holds (for R30 being (Element of ( MPS R13 )) holds (for R31 being (Element of ( MPS R13 )) holds [ R28 , R29 , R30 , R31 ] in ( 4C_3 R13 ))))));
theorem
L120: (for R13 being Field holds (for R28 being (Element of ( MPS R13 )) holds (for R29 being (Element of ( MPS R13 )) holds (for R30 being (Element of ( MPS R13 )) holds (for R31 being (Element of ( MPS R13 )) holds (R28 , R29 '||' R30 , R31 iff (ex R20 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R21 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R22 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R23 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st ([ R28 , R29 , R30 , R31 ] = [ R20 , R21 , R22 , R23 ] & ( ( ( ( R20 `1_3 ) - ( R21 `1_3 ) ) * ( ( R22 `2_3 ) - ( R23 `2_3 ) ) ) - ( ( ( R22 `1_3 ) - ( R23 `1_3 ) ) * ( ( R20 `2_3 ) - ( R21 `2_3 ) ) ) ) = ( 0. R13 ) & ( ( ( ( R20 `1_3 ) - ( R21 `1_3 ) ) * ( ( R22 `3_3 ) - ( R23 `3_3 ) ) ) - ( ( ( R22 `1_3 ) - ( R23 `1_3 ) ) * ( ( R20 `3_3 ) - ( R21 `3_3 ) ) ) ) = ( 0. R13 ) & ( ( ( ( R20 `2_3 ) - ( R21 `2_3 ) ) * ( ( R22 `3_3 ) - ( R23 `3_3 ) ) ) - ( ( ( R22 `2_3 ) - ( R23 `2_3 ) ) * ( ( R20 `3_3 ) - ( R21 `3_3 ) ) ) ) = ( 0. R13 ))))))))))))
proof
let R13 being Field;
let R28 being (Element of ( MPS R13 ));
let R29 being (Element of ( MPS R13 ));
let R30 being (Element of ( MPS R13 ));
let R31 being (Element of ( MPS R13 ));
L121: [ R28 , R29 , R30 , R31 ] in ( 4C_3 R13 );
thus L122: thesis by L121 , L115;
end;
theorem
L123: (for R13 being Field holds (for R28 being (Element of ( MPS R13 )) holds (for R29 being (Element of ( MPS R13 )) holds R28 , R29 '||' R29 , R28)))
proof
let R13 being Field;
let R28 being (Element of ( MPS R13 ));
let R29 being (Element of ( MPS R13 ));
consider R20 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]), R21 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) such that L124: [ R20 , R21 , R21 , R20 ] = [ R28 , R29 , R29 , R28 ];
L125: ( ( ( ( R20 `2_3 ) - ( R21 `2_3 ) ) * ( ( R21 `3_3 ) - ( R20 `3_3 ) ) ) - ( ( ( R21 `2_3 ) - ( R20 `2_3 ) ) * ( ( R20 `3_3 ) - ( R21 `3_3 ) ) ) ) = ( 0. R13 ) by L3;
L126: (( ( ( ( R20 `1_3 ) - ( R21 `1_3 ) ) * ( ( R21 `2_3 ) - ( R20 `2_3 ) ) ) - ( ( ( R21 `1_3 ) - ( R20 `1_3 ) ) * ( ( R20 `2_3 ) - ( R21 `2_3 ) ) ) ) = ( 0. R13 ) & ( ( ( ( R20 `1_3 ) - ( R21 `1_3 ) ) * ( ( R21 `3_3 ) - ( R20 `3_3 ) ) ) - ( ( ( R21 `1_3 ) - ( R20 `1_3 ) ) * ( ( R20 `3_3 ) - ( R21 `3_3 ) ) ) ) = ( 0. R13 )) by L3;
thus L127: thesis by L126 , L124 , L125 , L120;
end;
theorem
L128: (for R13 being Field holds (for R28 being (Element of ( MPS R13 )) holds (for R29 being (Element of ( MPS R13 )) holds (for R30 being (Element of ( MPS R13 )) holds R28 , R29 '||' R30 , R30))))
proof
let R13 being Field;
let R28 being (Element of ( MPS R13 ));
let R29 being (Element of ( MPS R13 ));
let R30 being (Element of ( MPS R13 ));
consider R20 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]), R21 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]), R22 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) such that L129: [ R20 , R21 , R22 , R22 ] = [ R28 , R29 , R30 , R30 ];
L130: ( ( ( ( R20 `2_3 ) - ( R21 `2_3 ) ) * ( ( R22 `3_3 ) - ( R22 `3_3 ) ) ) - ( ( ( R22 `2_3 ) - ( R22 `2_3 ) ) * ( ( R20 `3_3 ) - ( R21 `3_3 ) ) ) ) = ( 0. R13 ) by L7;
L131: (( ( ( ( R20 `1_3 ) - ( R21 `1_3 ) ) * ( ( R22 `2_3 ) - ( R22 `2_3 ) ) ) - ( ( ( R22 `1_3 ) - ( R22 `1_3 ) ) * ( ( R20 `2_3 ) - ( R21 `2_3 ) ) ) ) = ( 0. R13 ) & ( ( ( ( R20 `1_3 ) - ( R21 `1_3 ) ) * ( ( R22 `3_3 ) - ( R22 `3_3 ) ) ) - ( ( ( R22 `1_3 ) - ( R22 `1_3 ) ) * ( ( R20 `3_3 ) - ( R21 `3_3 ) ) ) ) = ( 0. R13 )) by L7;
thus L132: thesis by L131 , L129 , L130 , L120;
end;
theorem
L133: (for R13 being Field holds (for R28 being (Element of ( MPS R13 )) holds (for R29 being (Element of ( MPS R13 )) holds (for R32 being (Element of ( MPS R13 )) holds (for R33 being (Element of ( MPS R13 )) holds (for R34 being (Element of ( MPS R13 )) holds (for R35 being (Element of ( MPS R13 )) holds ((R28 , R29 '||' R32 , R33 & R28 , R29 '||' R34 , R35) implies (R32 , R33 '||' R34 , R35 or R28 = R29)))))))))
proof
let R13 being Field;
let R28 being (Element of ( MPS R13 ));
let R29 being (Element of ( MPS R13 ));
let R32 being (Element of ( MPS R13 ));
let R33 being (Element of ( MPS R13 ));
let R34 being (Element of ( MPS R13 ));
let R35 being (Element of ( MPS R13 ));
defpred S3[ (Element of H1(R13)) , (Element of H1(R13)) , (Element of H1(R13)) , (Element of H1(R13)) ] means (( ( ( ( $1 `1_3 ) - ( $2 `1_3 ) ) * ( ( $3 `2_3 ) - ( $4 `2_3 ) ) ) - ( ( ( $3 `1_3 ) - ( $4 `1_3 ) ) * ( ( $1 `2_3 ) - ( $2 `2_3 ) ) ) ) = ( 0. R13 ) & ( ( ( ( $1 `1_3 ) - ( $2 `1_3 ) ) * ( ( $3 `3_3 ) - ( $4 `3_3 ) ) ) - ( ( ( $3 `1_3 ) - ( $4 `1_3 ) ) * ( ( $1 `3_3 ) - ( $2 `3_3 ) ) ) ) = ( 0. R13 ) & ( ( ( ( $1 `2_3 ) - ( $2 `2_3 ) ) * ( ( $3 `3_3 ) - ( $4 `3_3 ) ) ) - ( ( ( $3 `2_3 ) - ( $4 `2_3 ) ) * ( ( $1 `3_3 ) - ( $2 `3_3 ) ) ) ) = ( 0. R13 ));
assume that
L134: R28 , R29 '||' R32 , R33
and
L135: R28 , R29 '||' R34 , R35;
consider R20 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]), R21 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]), R22 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]), R23 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) such that L136: [ R20 , R21 , R22 , R23 ] = [ R28 , R29 , R32 , R33 ] and L137: S3[ R20 , R21 , R22 , R23 ] by L134 , L120;
consider R24 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]), R25 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]), R26 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]), R27 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) such that L138: [ R24 , R25 , R26 , R27 ] = [ R28 , R29 , R34 , R35 ] and L139: S3[ R24 , R25 , R26 , R27 ] by L135 , L120;
L140: (R24 = R28 & R25 = R29) by L138 , XTUPLE_0:5;
L141: (R26 = R34 & R27 = R35) by L138 , XTUPLE_0:5;
set D5 = ( ( R20 `1_3 ) - ( R21 `1_3 ) );
set D6 = ( ( R20 `2_3 ) - ( R21 `2_3 ) );
set D7 = ( ( R20 `3_3 ) - ( R21 `3_3 ) );
set D8 = ( ( R22 `1_3 ) - ( R23 `1_3 ) );
set D9 = ( ( R22 `2_3 ) - ( R23 `2_3 ) );
set D10 = ( ( R22 `3_3 ) - ( R23 `3_3 ) );
set D11 = ( ( R26 `1_3 ) - ( R27 `1_3 ) );
set D12 = ( ( R26 `2_3 ) - ( R27 `2_3 ) );
set D13 = ( ( R26 `3_3 ) - ( R27 `3_3 ) );
L142: (R20 = R28 & R21 = R29) by L136 , XTUPLE_0:5;
L143: (R22 = R32 & R23 = R33) by L136 , XTUPLE_0:5;
L144:
now
assume L145: R28 <> R29;
L146:
now
L147: R20 = [ ( R20 `1_3 ) , ( R20 `2_3 ) , ( R20 `3_3 ) ] by MCART_1:44;
L148: (( R20 `1_3 ) <> ( R21 `1_3 ) or ( R20 `2_3 ) <> ( R21 `2_3 ) or ( R20 `3_3 ) <> ( R21 `3_3 )) by L147 , L142 , L145 , MCART_1:44;
per cases  by L148 , RLVECT_1:21;
case L149: D5 <> ( 0. R13 );
thus L150: ( ( D8 * D12 ) - ( D11 * D9 ) ) = ( 0. R13 ) by L149 , L137 , L139 , L142 , L140 , L13;
thus L151: ( ( D8 * D13 ) - ( D11 * D10 ) ) = ( 0. R13 ) by L137 , L139 , L142 , L140 , L149 , L13;
L152: (( D9 * D13 ) = ( ( ( D8 * D6 ) * ( D5 " ) ) * D13 ) & ( D12 * D10 ) = ( ( ( D11 * D6 ) * ( D5 " ) ) * D10 )) by L137 , L139 , L142 , L140 , L149 , VECTSP_1:30;
thus L153: ( ( D9 * D13 ) - ( D12 * D10 ) ) = ( 0. R13 ) by L152 , L151 , L34;
end;
case L154: D6 <> ( 0. R13 );
thus L155: ( ( D8 * D12 ) - ( D11 * D9 ) ) = ( 0. R13 ) by L154 , L137 , L139 , L142 , L140 , L28;
thus L156: ( ( D9 * D13 ) - ( D12 * D10 ) ) = ( 0. R13 ) by L137 , L139 , L142 , L140 , L154 , L13;
L157: (( D8 * D13 ) = ( ( ( D9 * D5 ) * ( D6 " ) ) * D13 ) & ( D11 * D10 ) = ( ( ( D12 * D5 ) * ( D6 " ) ) * D10 )) by L137 , L139 , L142 , L140 , L154 , VECTSP_1:30;
thus L158: ( ( D8 * D13 ) - ( D11 * D10 ) ) = ( 0. R13 ) by L157 , L156 , L34;
end;
case L159: D7 <> ( 0. R13 );
thus L160: ( ( D9 * D13 ) - ( D12 * D10 ) ) = ( 0. R13 ) by L159 , L137 , L139 , L142 , L140 , L28;
L161: (( D8 * D12 ) = ( ( ( D10 * D5 ) * ( D7 " ) ) * D12 ) & ( D11 * D9 ) = ( ( ( D13 * D5 ) * ( D7 " ) ) * D9 )) by L137 , L139 , L142 , L140 , L159 , VECTSP_1:30;
L162: ( ( D10 * D12 ) - ( D13 * D9 ) ) = ( 0. R13 ) by L137 , L139 , L142 , L140 , L159 , L28;
thus L163: ( ( D8 * D12 ) - ( D11 * D9 ) ) = ( 0. R13 ) by L162 , L161 , L34;
thus L164: ( ( D8 * D13 ) - ( D11 * D10 ) ) = ( 0. R13 ) by L137 , L139 , L142 , L140 , L159 , L28;
end;
end;
thus L166: (ex R22 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R23 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R26 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st (ex R27 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) st ([ R22 , R23 , R26 , R27 ] = [ R32 , R33 , R34 , R35 ] & S3[ R22 , R23 , R26 , R27 ]))))) by L146 , L143 , L141;
end;
thus L167: thesis by L144 , L120;
end;
theorem
L168: (for R13 being Field holds (for R28 being (Element of ( MPS R13 )) holds (for R29 being (Element of ( MPS R13 )) holds (for R30 being (Element of ( MPS R13 )) holds (R28 , R29 '||' R28 , R30 implies R29 , R28 '||' R29 , R30)))))
proof
let R13 being Field;
let R28 being (Element of ( MPS R13 ));
let R29 being (Element of ( MPS R13 ));
let R30 being (Element of ( MPS R13 ));
assume L169: R28 , R29 '||' R28 , R30;
consider R20 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]), R21 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]), R22 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]), R23 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) such that L170: [ R20 , R21 , R22 , R23 ] = [ R28 , R29 , R28 , R30 ] and L171: (( ( ( ( R20 `1_3 ) - ( R21 `1_3 ) ) * ( ( R22 `2_3 ) - ( R23 `2_3 ) ) ) - ( ( ( R22 `1_3 ) - ( R23 `1_3 ) ) * ( ( R20 `2_3 ) - ( R21 `2_3 ) ) ) ) = ( 0. R13 ) & ( ( ( ( R20 `1_3 ) - ( R21 `1_3 ) ) * ( ( R22 `3_3 ) - ( R23 `3_3 ) ) ) - ( ( ( R22 `1_3 ) - ( R23 `1_3 ) ) * ( ( R20 `3_3 ) - ( R21 `3_3 ) ) ) ) = ( 0. R13 )) and L172: ( ( ( ( R20 `2_3 ) - ( R21 `2_3 ) ) * ( ( R22 `3_3 ) - ( R23 `3_3 ) ) ) - ( ( ( R22 `2_3 ) - ( R23 `2_3 ) ) * ( ( R20 `3_3 ) - ( R21 `3_3 ) ) ) ) = ( 0. R13 ) by L169 , L120;
L173: R20 = R28 by L170 , XTUPLE_0:5;
L174: R22 = R28 by L170 , XTUPLE_0:5;
L175: ( ( ( ( R21 `2_3 ) - ( R20 `2_3 ) ) * ( ( R21 `3_3 ) - ( R23 `3_3 ) ) ) - ( ( ( R21 `2_3 ) - ( R23 `2_3 ) ) * ( ( R21 `3_3 ) - ( R20 `3_3 ) ) ) ) = ( 0. R13 ) by L174 , L172 , L173 , L46;
L176: R21 = R29 by L170 , XTUPLE_0:5;
L177: [ R21 , R20 , R21 , R23 ] = [ R29 , R28 , R29 , R30 ] by L176 , L170 , L173 , XTUPLE_0:5;
L178: (( ( ( ( R21 `1_3 ) - ( R20 `1_3 ) ) * ( ( R21 `2_3 ) - ( R23 `2_3 ) ) ) - ( ( ( R21 `1_3 ) - ( R23 `1_3 ) ) * ( ( R21 `2_3 ) - ( R20 `2_3 ) ) ) ) = ( 0. R13 ) & ( ( ( ( R21 `1_3 ) - ( R20 `1_3 ) ) * ( ( R21 `3_3 ) - ( R23 `3_3 ) ) ) - ( ( ( R21 `1_3 ) - ( R23 `1_3 ) ) * ( ( R21 `3_3 ) - ( R20 `3_3 ) ) ) ) = ( 0. R13 )) by L171 , L173 , L174 , L46;
thus L179: thesis by L178 , L177 , L175 , L120;
end;
theorem
L180: (for R13 being Field holds (for R28 being (Element of ( MPS R13 )) holds (for R29 being (Element of ( MPS R13 )) holds (for R30 being (Element of ( MPS R13 )) holds (ex R31 being (Element of ( MPS R13 )) st (R28 , R29 '||' R30 , R31 & R28 , R30 '||' R29 , R31))))))
proof
let R13 being Field;
let R28 being (Element of ( MPS R13 ));
let R29 being (Element of ( MPS R13 ));
let R30 being (Element of ( MPS R13 ));
consider R20 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]), R21 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]), R22 being (Element of [: (the carrier of R13) , (the carrier of R13) , (the carrier of R13) :]) such that L181: (R20 = R28 & R21 = R29 & R22 = R30);
set D14 = ( ( R22 + R21 ) + ( - R20 ) );
reconsider D15 = D14 as (Element of ( MPS R13 ));
L182: [ R20 , R21 , R22 , D14 ] = [ R28 , R29 , R30 , D15 ] by L181;
take D15;
L183: (( R22 + R21 ) = [ ( ( R22 `1_3 ) + ( R21 `1_3 ) ) , ( ( R22 `2_3 ) + ( R21 `2_3 ) ) , ( ( R22 `3_3 ) + ( R21 `3_3 ) ) ] & ( - R20 ) = [ ( - ( R20 `1_3 ) ) , ( - ( R20 `2_3 ) ) , ( - ( R20 `3_3 ) ) ]) by L56 , L72;
L184: D14 = [ ( ( ( R22 `1_3 ) + ( R21 `1_3 ) ) + ( - ( R20 `1_3 ) ) ) , ( ( ( R22 `2_3 ) + ( R21 `2_3 ) ) + ( - ( R20 `2_3 ) ) ) , ( ( ( R22 `3_3 ) + ( R21 `3_3 ) ) + ( - ( R20 `3_3 ) ) ) ] by L183 , L67;
L185: ( D14 `1_3 ) = ( ( ( R22 `1_3 ) + ( R21 `1_3 ) ) + ( - ( R20 `1_3 ) ) ) by L184 , MCART_1:def 5;
L186: ( D14 `3_3 ) = ( ( ( R22 `3_3 ) + ( R21 `3_3 ) ) + ( - ( R20 `3_3 ) ) ) by L184 , MCART_1:def 7;
L187: ( ( ( ( R20 `1_3 ) - ( R21 `1_3 ) ) * ( ( R22 `3_3 ) - ( D14 `3_3 ) ) ) - ( ( ( R22 `1_3 ) - ( D14 `1_3 ) ) * ( ( R20 `3_3 ) - ( R21 `3_3 ) ) ) ) = ( 0. R13 ) by L186 , L185 , L53;
L188: ( ( ( ( R20 `1_3 ) - ( R22 `1_3 ) ) * ( ( R21 `3_3 ) - ( D14 `3_3 ) ) ) - ( ( ( R21 `1_3 ) - ( D14 `1_3 ) ) * ( ( R20 `3_3 ) - ( R22 `3_3 ) ) ) ) = ( 0. R13 ) by L185 , L186 , L53;
L189: ( D14 `2_3 ) = ( ( ( R22 `2_3 ) + ( R21 `2_3 ) ) + ( - ( R20 `2_3 ) ) ) by L184 , MCART_1:def 6;
L190: ( ( ( ( R20 `2_3 ) - ( R21 `2_3 ) ) * ( ( R22 `3_3 ) - ( D14 `3_3 ) ) ) - ( ( ( R22 `2_3 ) - ( D14 `2_3 ) ) * ( ( R20 `3_3 ) - ( R21 `3_3 ) ) ) ) = ( 0. R13 ) by L189 , L186 , L53;
L191: ( ( ( ( R20 `1_3 ) - ( R21 `1_3 ) ) * ( ( R22 `2_3 ) - ( D14 `2_3 ) ) ) - ( ( ( R22 `1_3 ) - ( D14 `1_3 ) ) * ( ( R20 `2_3 ) - ( R21 `2_3 ) ) ) ) = ( 0. R13 ) by L185 , L189 , L53;
thus L192: R28 , R29 '||' R30 , D15 by L191 , L182 , L187 , L190 , L120;
L193: [ R20 , R22 , R21 , D14 ] = [ R28 , R30 , R29 , D15 ] by L181;
L194: ( ( ( ( R20 `2_3 ) - ( R22 `2_3 ) ) * ( ( R21 `3_3 ) - ( D14 `3_3 ) ) ) - ( ( ( R21 `2_3 ) - ( D14 `2_3 ) ) * ( ( R20 `3_3 ) - ( R22 `3_3 ) ) ) ) = ( 0. R13 ) by L189 , L186 , L53;
L195: ( ( ( ( R20 `1_3 ) - ( R22 `1_3 ) ) * ( ( R21 `2_3 ) - ( D14 `2_3 ) ) ) - ( ( ( R21 `1_3 ) - ( D14 `1_3 ) ) * ( ( R20 `2_3 ) - ( R22 `2_3 ) ) ) ) = ( 0. R13 ) by L185 , L189 , L53;
thus L196: thesis by L195 , L193 , L188 , L194 , L120;
end;
definition
let C23 being non  empty ParStr;
attr C23 is  ParSp-like
means
:L197: (for B13 , B14 , B15 , B16 , B17 , B18 , B19 , B20 being (Element of C23) holds (B13 , B14 '||' B14 , B13 & B13 , B14 '||' B15 , B15 & ((B13 , B14 '||' B17 , B18 & B13 , B14 '||' B19 , B20) implies (B17 , B18 '||' B19 , B20 or B13 = B14)) & (B13 , B14 '||' B13 , B15 implies B14 , B13 '||' B14 , B15) & (ex B21 being (Element of C23) st (B13 , B14 '||' B15 , B21 & B13 , B15 '||' B14 , B21))));
end;
registration
cluster  strict  ParSp-like for non  empty non  empty non  empty non  empty ParStr;
existence
proof
set D16 = the Field;
L199: (for B22 , B23 , B24 , B25 , B26 , B27 , B28 , B29 being (Element of ( MPS D16 )) holds (B22 , B23 '||' B23 , B22 & B22 , B23 '||' B24 , B24 & ((B22 , B23 '||' B26 , B27 & B22 , B23 '||' B28 , B29) implies (B26 , B27 '||' B28 , B29 or B22 = B23)) & (B22 , B23 '||' B22 , B24 implies B23 , B22 '||' B23 , B24) & (ex B30 being (Element of ( MPS D16 )) st (B22 , B23 '||' B24 , B30 & B22 , B24 '||' B23 , B30)))) by L123 , L128 , L133 , L168 , L180;
L200: ( MPS D16 ) is  ParSp-like by L199 , L197;
thus L201: thesis by L200;
end;
end;
definition
mode ParSp
 is  ParSp-like non  empty ParStr;
end;
theorem
L204: (for R36 being ParSp holds (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds R37 , R38 '||' R37 , R38)))
proof
let R36 being ParSp;
let R37 being (Element of R36);
let R38 being (Element of R36);
L205: R38 , R37 '||' R38 , R38 by L197;
thus L206: thesis by L205 , L197;
end;
theorem
L207: (for R36 being ParSp holds (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds (for R39 being (Element of R36) holds (for R40 being (Element of R36) holds (R37 , R38 '||' R39 , R40 implies R39 , R40 '||' R37 , R38))))))
proof
let R36 being ParSp;
let R37 being (Element of R36);
let R38 being (Element of R36);
let R39 being (Element of R36);
let R40 being (Element of R36);
assume L208: R37 , R38 '||' R39 , R40;
L209: R37 , R38 '||' R37 , R38 by L204;
L210: (R37 <> R38 implies R39 , R40 '||' R37 , R38) by L209 , L208 , L197;
thus L211: thesis by L210 , L197;
end;
theorem
L212: (for R36 being ParSp holds (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds (for R39 being (Element of R36) holds R37 , R37 '||' R38 , R39))))
proof
let R36 being ParSp;
let R37 being (Element of R36);
let R38 being (Element of R36);
let R39 being (Element of R36);
L213: R38 , R39 '||' R37 , R37 by L197;
thus L214: thesis by L213 , L207;
end;
theorem
L215: (for R36 being ParSp holds (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds (for R39 being (Element of R36) holds (for R40 being (Element of R36) holds (R37 , R38 '||' R39 , R40 implies R38 , R37 '||' R39 , R40))))))
proof
let R36 being ParSp;
let R37 being (Element of R36);
let R38 being (Element of R36);
let R39 being (Element of R36);
let R40 being (Element of R36);
assume L216: R37 , R38 '||' R39 , R40;
L217: R37 , R38 '||' R38 , R37 by L197;
L218: (R37 <> R38 implies R38 , R37 '||' R39 , R40) by L217 , L216 , L197;
thus L219: thesis by L218 , L216;
end;
theorem
L220: (for R36 being ParSp holds (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds (for R39 being (Element of R36) holds (for R40 being (Element of R36) holds (R37 , R38 '||' R39 , R40 implies R37 , R38 '||' R40 , R39))))))
proof
let R36 being ParSp;
let R37 being (Element of R36);
let R38 being (Element of R36);
let R39 being (Element of R36);
let R40 being (Element of R36);
assume L221: R37 , R38 '||' R39 , R40;
L222: R39 , R40 '||' R37 , R38 by L221 , L207;
L223: R40 , R39 '||' R37 , R38 by L222 , L215;
thus L224: thesis by L223 , L207;
end;
theorem
L225: (for R36 being ParSp holds (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds (for R39 being (Element of R36) holds (for R40 being (Element of R36) holds (R37 , R38 '||' R39 , R40 implies (R38 , R37 '||' R39 , R40 & R37 , R38 '||' R40 , R39 & R38 , R37 '||' R40 , R39 & R39 , R40 '||' R37 , R38 & R40 , R39 '||' R37 , R38 & R39 , R40 '||' R38 , R37 & R40 , R39 '||' R38 , R37)))))))
proof
let R36 being ParSp;
let R37 being (Element of R36);
let R38 being (Element of R36);
let R39 being (Element of R36);
let R40 being (Element of R36);
assume L226: R37 , R38 '||' R39 , R40;
L227: R39 , R40 '||' R37 , R38 by L226 , L207;
L228: R40 , R39 '||' R37 , R38 by L227 , L215;
L229: R40 , R39 '||' R38 , R37 by L228 , L220;
L230: R39 , R40 '||' R38 , R37 by L229 , L215;
thus L231: thesis by L230 , L228 , L229 , L207 , L215;
end;
theorem
L232: (for R36 being ParSp holds (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds (for R39 being (Element of R36) holds (R37 , R38 '||' R37 , R39 implies (R37 , R39 '||' R37 , R38 & R38 , R37 '||' R37 , R39 & R37 , R38 '||' R39 , R37 & R37 , R39 '||' R38 , R37 & R38 , R37 '||' R39 , R37 & R39 , R37 '||' R37 , R38 & R39 , R37 '||' R38 , R37 & R38 , R37 '||' R38 , R39 & R37 , R38 '||' R38 , R39 & R38 , R37 '||' R39 , R38 & R38 , R39 '||' R38 , R37 & R37 , R38 '||' R39 , R38 & R39 , R38 '||' R38 , R37 & R38 , R39 '||' R37 , R38 & R39 , R38 '||' R37 , R38 & R39 , R37 '||' R39 , R38 & R37 , R39 '||' R39 , R38 & R39 , R37 '||' R38 , R39 & R37 , R39 '||' R38 , R39 & R39 , R38 '||' R39 , R37 & R38 , R39 '||' R39 , R37 & R39 , R38 '||' R37 , R39 & R38 , R39 '||' R37 , R39))))))
proof
let R36 being ParSp;
let R37 being (Element of R36);
let R38 being (Element of R36);
let R39 being (Element of R36);
assume L233: R37 , R38 '||' R37 , R39;
L234: R37 , R39 '||' R37 , R38 by L233 , L207;
L235: R39 , R37 '||' R39 , R38 by L234 , L197;
L236: R38 , R37 '||' R38 , R39 by L233 , L197;
thus L237: thesis by L236 , L233 , L235 , L225;
end;
theorem
L238: (for R36 being ParSp holds (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds (for R39 being (Element of R36) holds (for R40 being (Element of R36) holds ((R37 = R38 or R39 = R40 or (R37 = R39 & R38 = R40) or (R37 = R40 & R38 = R39)) implies R37 , R38 '||' R39 , R40)))))) by L197 , L204 , L212;
theorem
L239: (for R36 being ParSp holds (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds (for R41 being (Element of R36) holds (for R42 being (Element of R36) holds (for R43 being (Element of R36) holds (for R44 being (Element of R36) holds ((R37 <> R38 & R41 , R42 '||' R37 , R38 & R37 , R38 '||' R43 , R44) implies R41 , R42 '||' R43 , R44))))))))
proof
let R36 being ParSp;
let R37 being (Element of R36);
let R38 being (Element of R36);
let R41 being (Element of R36);
let R42 being (Element of R36);
let R43 being (Element of R36);
let R44 being (Element of R36);
assume that
L240: R37 <> R38
and
L241: R41 , R42 '||' R37 , R38
and
L242: R37 , R38 '||' R43 , R44;
L243: R37 , R38 '||' R41 , R42 by L241 , L225;
thus L244: thesis by L243 , L240 , L242 , L197;
end;
theorem
L245: (for R36 being ParSp holds (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds (for R39 being (Element of R36) holds ((not R37 , R38 '||' R37 , R39) implies (R37 <> R38 & R38 <> R39 & R39 <> R37)))))) by L197 , L204 , L212;
theorem
L246: (for R36 being ParSp holds (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds (for R39 being (Element of R36) holds (for R40 being (Element of R36) holds ((not R37 , R38 '||' R39 , R40) implies (R37 <> R38 & R39 <> R40))))))) by L197 , L212;
theorem
L247: (for R36 being ParSp holds (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds (for R39 being (Element of R36) holds ((not R37 , R38 '||' R37 , R39) implies ((not R37 , R39 '||' R37 , R38) & (not R38 , R37 '||' R37 , R39) & (not R37 , R38 '||' R39 , R37) & (not R37 , R39 '||' R38 , R37) & (not R38 , R37 '||' R39 , R37) & (not R39 , R37 '||' R37 , R38) & (not R39 , R37 '||' R38 , R37) & (not R38 , R37 '||' R38 , R39) & (not R37 , R38 '||' R38 , R39) & (not R38 , R37 '||' R39 , R38) & (not R38 , R39 '||' R38 , R37) & (not R38 , R37 '||' R39 , R38) & (not R39 , R38 '||' R38 , R37) & (not R38 , R39 '||' R37 , R38) & (not R39 , R38 '||' R37 , R38) & (not R39 , R37 '||' R39 , R38) & (not R37 , R39 '||' R39 , R38) & (not R39 , R37 '||' R38 , R39) & (not R37 , R39 '||' R38 , R39) & (not R39 , R38 '||' R39 , R37) & (not R38 , R39 '||' R39 , R37) & (not R39 , R38 '||' R37 , R39) & (not R38 , R39 '||' R37 , R39)))))))
proof
let R36 being ParSp;
let R37 being (Element of R36);
let R38 being (Element of R36);
let R39 being (Element of R36);
assume L248: (not R37 , R38 '||' R37 , R39);
assume L249: (not thesis);
L250: (R37 , R39 '||' R37 , R38 or R37 , R38 '||' R37 , R39 or R37 , R38 '||' R37 , R39 or R37 , R39 '||' R37 , R38 or R37 , R38 '||' R37 , R39 or R37 , R39 '||' R37 , R38 or R37 , R39 '||' R37 , R38 or R38 , R37 '||' R38 , R39 or R38 , R37 '||' R38 , R39 or R38 , R37 '||' R38 , R39 or R38 , R39 '||' R38 , R37 or R38 , R37 '||' R38 , R39 or R38 , R39 '||' R38 , R37 or R38 , R39 '||' R38 , R37 or R38 , R39 '||' R38 , R37 or R39 , R37 '||' R39 , R38 or R39 , R37 '||' R39 , R38 or R39 , R37 '||' R39 , R38 or R39 , R37 '||' R39 , R38 or R39 , R38 '||' R39 , R37 or R39 , R38 '||' R39 , R37 or R39 , R38 '||' R39 , R37 or R39 , R38 '||' R39 , R37) by L249 , L225;
thus L251: contradiction by L250 , L248 , L232;
end;
theorem
L252: (for R36 being ParSp holds (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds (for R39 being (Element of R36) holds (for R40 being (Element of R36) holds (for R41 being (Element of R36) holds (for R42 being (Element of R36) holds (for R43 being (Element of R36) holds (for R44 being (Element of R36) holds (((not R37 , R38 '||' R39 , R40) & R37 , R38 '||' R41 , R42 & R39 , R40 '||' R43 , R44 & R41 <> R42 & R43 <> R44) implies (not R41 , R42 '||' R43 , R44)))))))))))
proof
let R36 being ParSp;
let R37 being (Element of R36);
let R38 being (Element of R36);
let R39 being (Element of R36);
let R40 being (Element of R36);
let R41 being (Element of R36);
let R42 being (Element of R36);
let R43 being (Element of R36);
let R44 being (Element of R36);
assume that
L253: (not R37 , R38 '||' R39 , R40)
and
L254: R37 , R38 '||' R41 , R42
and
L255: R39 , R40 '||' R43 , R44
and
L256: R41 <> R42
and
L257: R43 <> R44;
assume L258: R41 , R42 '||' R43 , R44;
L259: R37 , R38 '||' R43 , R44 by L258 , L254 , L256 , L239;
L260: R43 , R44 '||' R37 , R38 by L259 , L225;
L261: R43 , R44 '||' R39 , R40 by L255 , L225;
thus L262: contradiction by L261 , L253 , L257 , L260 , L197;
end;
theorem
L263: (for R36 being ParSp holds (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds (for R39 being (Element of R36) holds (for R41 being (Element of R36) holds (for R42 being (Element of R36) holds (for R43 being (Element of R36) holds (((not R37 , R38 '||' R37 , R39) & R37 , R38 '||' R41 , R42 & R37 , R39 '||' R41 , R43 & R38 , R39 '||' R42 , R43 & R41 <> R42) implies (not R41 , R42 '||' R41 , R43)))))))))
proof
let R36 being ParSp;
let R37 being (Element of R36);
let R38 being (Element of R36);
let R39 being (Element of R36);
let R41 being (Element of R36);
let R42 being (Element of R36);
let R43 being (Element of R36);
assume that
L264: (not R37 , R38 '||' R37 , R39)
and
L265: R37 , R38 '||' R41 , R42
and
L266: R37 , R39 '||' R41 , R43
and
L267: R38 , R39 '||' R42 , R43
and
L268: R41 <> R42;
L269:
now
assume L270: R41 = R43;
L271: R41 , R42 '||' R38 , R39 by L270 , L267 , L225;
L272: R41 , R42 '||' R38 , R37 by L265 , L225;
L273: R38 , R37 '||' R38 , R39 by L272 , L268 , L271 , L197;
thus L274: contradiction by L273 , L264 , L232;
end;
thus L275: thesis by L269 , L264 , L265 , L266 , L268 , L252;
end;
theorem
L276: (for R36 being ParSp holds (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds (for R39 being (Element of R36) holds (for R41 being (Element of R36) holds (for R43 being (Element of R36) holds (((not R37 , R38 '||' R37 , R39) & R37 , R39 '||' R41 , R43 & R38 , R39 '||' R41 , R43) implies R41 = R43)))))))
proof
let R36 being ParSp;
let R37 being (Element of R36);
let R38 being (Element of R36);
let R39 being (Element of R36);
let R41 being (Element of R36);
let R43 being (Element of R36);
assume that
L277: ((not R37 , R38 '||' R37 , R39) & R37 , R39 '||' R41 , R43)
and
L278: R38 , R39 '||' R41 , R43;
L279: R41 , R43 '||' R38 , R39 by L278 , L225;
L280: ((not R37 , R39 '||' R38 , R39) & R41 , R43 '||' R37 , R39) by L277 , L225 , L247;
thus L281: thesis by L280 , L279 , L197;
end;
theorem
L282: (for R36 being ParSp holds (for R41 being (Element of R36) holds (for R42 being (Element of R36) holds (for R43 being (Element of R36) holds (for R44 being (Element of R36) holds (((not R41 , R42 '||' R41 , R43) & R41 , R43 '||' R41 , R44 & R42 , R43 '||' R42 , R44) implies R43 = R44))))))
proof
let R36 being ParSp;
let R41 being (Element of R36);
let R42 being (Element of R36);
let R43 being (Element of R36);
let R44 being (Element of R36);
assume that
L283: ((not R41 , R42 '||' R41 , R43) & R41 , R43 '||' R41 , R44)
and
L284: R42 , R43 '||' R42 , R44;
L285: R43 , R44 '||' R43 , R42 by L284 , L247;
L286: ((not R43 , R41 '||' R43 , R42) & R43 , R44 '||' R43 , R41) by L283 , L247;
thus L287: thesis by L286 , L285 , L197;
end;
theorem
L288: (for R36 being ParSp holds (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds (for R39 being (Element of R36) holds (for R41 being (Element of R36) holds (for R42 being (Element of R36) holds (for R43 being (Element of R36) holds (for R44 being (Element of R36) holds (((not R37 , R38 '||' R37 , R39) & R37 , R38 '||' R41 , R42 & R37 , R39 '||' R41 , R43 & R37 , R39 '||' R41 , R44 & R38 , R39 '||' R42 , R43 & R38 , R39 '||' R42 , R44) implies R43 = R44)))))))))
proof
let R36 being ParSp;
let R37 being (Element of R36);
let R38 being (Element of R36);
let R39 being (Element of R36);
let R41 being (Element of R36);
let R42 being (Element of R36);
let R43 being (Element of R36);
let R44 being (Element of R36);
assume that
L289: (not R37 , R38 '||' R37 , R39)
and
L290: R37 , R38 '||' R41 , R42
and
L291: R37 , R39 '||' R41 , R43
and
L292: R37 , R39 '||' R41 , R44
and
L293: R38 , R39 '||' R42 , R43
and
L294: R38 , R39 '||' R42 , R44;
L295:
now
L296: R38 <> R39 by L289 , L204;
L297: R42 , R43 '||' R42 , R44 by L296 , L293 , L294 , L197;
L298: R37 <> R39 by L289 , L197;
L299: R41 , R43 '||' R41 , R44 by L298 , L291 , L292 , L197;
assume L300: R41 <> R42;
L301: (not R41 , R42 '||' R41 , R43) by L300 , L289 , L290 , L291 , L293 , L263;
thus L302: thesis by L301 , L299 , L297 , L282;
end;
L303: (R41 = R42 implies (R41 = R43 & R41 = R44)) by L289 , L291 , L292 , L293 , L294 , L276;
thus L304: thesis by L303 , L295;
end;
theorem
L305: (for R36 being ParSp holds (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds (for R39 being (Element of R36) holds (for R40 being (Element of R36) holds ((R37 , R38 '||' R37 , R39 & R37 , R38 '||' R37 , R40) implies R37 , R38 '||' R39 , R40))))))
proof
let R36 being ParSp;
let R37 being (Element of R36);
let R38 being (Element of R36);
let R39 being (Element of R36);
let R40 being (Element of R36);
assume that
L306: R37 , R38 '||' R37 , R39
and
L307: R37 , R38 '||' R37 , R40;
L308:
now
assume that
L309: R37 <> R38
and
L310: R37 <> R39;
L311: R37 , R39 '||' R37 , R40 by L306 , L307 , L309 , L197;
L312: R37 , R39 '||' R39 , R40 by L311 , L232;
thus L313: thesis by L312 , L306 , L310 , L239;
end;
thus L314: thesis by L308 , L307 , L212;
end;
theorem
L315: (for R36 being ParSp holds ((for R37 being (Element of R36) holds (for R38 being (Element of R36) holds R37 = R38)) implies (for R41 being (Element of R36) holds (for R42 being (Element of R36) holds (for R43 being (Element of R36) holds (for R44 being (Element of R36) holds R41 , R42 '||' R43 , R44))))))
proof
let R36 being ParSp;
assume L316: (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds R37 = R38));
let R41 being (Element of R36);
let R42 being (Element of R36);
let R43 being (Element of R36);
let R44 being (Element of R36);
L317: R43 = R44 by L316;
thus L318: thesis by L317 , L197;
end;
theorem
L319: (for R36 being ParSp holds ((ex R37 being (Element of R36) st (ex R38 being (Element of R36) st (R37 <> R38 & (for R39 being (Element of R36) holds R37 , R38 '||' R37 , R39)))) implies (for R41 being (Element of R36) holds (for R42 being (Element of R36) holds (for R43 being (Element of R36) holds (for R44 being (Element of R36) holds R41 , R42 '||' R43 , R44))))))
proof
let R36 being ParSp;
assume L320: (ex R37 being (Element of R36) st (ex R38 being (Element of R36) st (R37 <> R38 & (for R39 being (Element of R36) holds R37 , R38 '||' R37 , R39))));
consider R37 being (Element of R36), R38 being (Element of R36) such that L321: R37 <> R38 and L322: (for R39 being (Element of R36) holds R37 , R38 '||' R37 , R39) by L320;
let R41 being (Element of R36);
let R42 being (Element of R36);
let R43 being (Element of R36);
let R44 being (Element of R36);
L323: (R37 , R38 '||' R37 , R43 & R37 , R38 '||' R37 , R44) by L322;
L324: R37 , R38 '||' R43 , R44 by L323 , L305;
L325: (R37 , R38 '||' R37 , R41 & R37 , R38 '||' R37 , R42) by L322;
L326: R37 , R38 '||' R41 , R42 by L325 , L305;
thus L327: thesis by L326 , L321 , L324 , L197;
end;
theorem
L328: (for R36 being ParSp holds (for R37 being (Element of R36) holds (for R38 being (Element of R36) holds (for R39 being (Element of R36) holds (for R41 being (Element of R36) holds (for R42 being (Element of R36) holds (((not R37 , R38 '||' R37 , R39) & R41 <> R42) implies ((not R41 , R42 '||' R41 , R37) or (not R41 , R42 '||' R41 , R38) or (not R41 , R42 '||' R41 , R39)))))))))
proof
let R36 being ParSp;
let R37 being (Element of R36);
let R38 being (Element of R36);
let R39 being (Element of R36);
let R41 being (Element of R36);
let R42 being (Element of R36);
assume that
L329: (not R37 , R38 '||' R37 , R39)
and
L330: R41 <> R42;
assume L331: (not thesis);
L332: R41 , R37 '||' R41 , R38 by L331 , L330 , L197;
L333: R37 , R41 '||' R37 , R38 by L332 , L232;
L334: R41 , R37 '||' R41 , R39 by L330 , L331 , L197;
L335: R37 , R41 '||' R37 , R39 by L334 , L232;
L336: R37 <> R41 by L329 , L330 , L331 , L197;
thus L337: contradiction by L336 , L329 , L333 , L335 , L197;
end;
