:: Hilbert Positive Propositional Calculus
::  by Adam Grabowski
::
:: Received February 20, 1999
:: Copyright (c) 1999-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies FINSEQ_1, CARD_1, ORDINAL4, SUBSET_1, NUMBERS, ARYTM_3, TARSKI,
      RELAT_1, XBOOLE_0, FUNCT_1, QC_LANG1, XBOOLEAN, HILBERT1;
 notations TARSKI, XBOOLE_0, SUBSET_1, NUMBERS, ORDINAL1, NAT_1, FUNCT_1,
      FINSEQ_1;
 constructors NAT_1, FINSEQ_1;
 registrations SUBSET_1, ORDINAL1, FUNCT_1, FINSEQ_1;
 requirements NUMERALS, BOOLE, SUBSET;
 definitions TARSKI;
 theorems TARSKI, FINSEQ_1, XBOOLE_0, XBOOLE_1;
 schemes XBOOLE_0;

begin
definition
let C1 being set;
attr C1 is  with_VERUM
means
:L1: <* ( 0 ) *> in C1;
end;
definition
let C2 being set;
attr C2 is  with_implication
means
:L3: (for B1 , B2 being FinSequence holds ((B1 in C2 & B2 in C2) implies ( ( <* 1 *> ^ B1 ) ^ B2 ) in C2));
end;
definition
let C3 being set;
attr C3 is  with_conjunction
means
:L5: (for B3 , B4 being FinSequence holds ((B3 in C3 & B4 in C3) implies ( ( <* 2 *> ^ B3 ) ^ B4 ) in C3));
end;
definition
let C4 being set;
attr C4 is  with_propositional_variables
means
:L7: (for B5 being (Element of ( NAT )) holds <* ( 3 + B5 ) *> in C4);
end;
definition
let C5 being set;
attr C5 is  HP-closed
means
:L9: (C5 c= ( ( NAT ) * ) & C5 is  with_VERUM  with_implication  with_conjunction  with_propositional_variables);
end;
L11: (for B6 being set holds (B6 is  HP-closed implies B6 is non  empty))
proof
let C6 being set;
assume L12: C6 is  HP-closed;
L13: C6 is  with_VERUM by L12 , L9;
thus L14: thesis by L13 , L1;
end;
registration
cluster  HP-closed ->  with_VERUM  with_implication  with_conjunction  with_propositional_variables non  empty for set;
coherence by L9 , L11;
cluster  with_VERUM  with_implication  with_conjunction  with_propositional_variables ->  HP-closed for (Subset of ( ( NAT ) * ));
coherence by L9;
end;
definition
func HP-WFF -> set means 
:L16: (it is  HP-closed & (for B7 being set holds (B7 is  HP-closed implies it c= B7)));
existence
proof
L17: <* ( 0 ) *> in ( ( NAT ) * ) by FINSEQ_1:def 11;
defpred S1[ set ] means (for B8 being set holds (B8 is  HP-closed implies $1 in B8));
consider C7 being set such that L18: (for B9 being set holds (B9 in C7 iff (B9 in ( ( NAT ) * ) & S1[ B9 ]))) from XBOOLE_0:sch 1;
L19: (for B10 being set holds (B10 is  HP-closed implies <* ( 0 ) *> in B10)) by L1;
reconsider D1 = C7 as non  empty set by L19 , L18 , L17;
take D1;
L20: D1 c= ( ( NAT ) * )
proof
let C8 being set;
thus L21: thesis by L18;
end;
L22: (for B11 , B12 being FinSequence holds ((B11 in D1 & B12 in D1) implies ( ( <* 2 *> ^ B11 ) ^ B12 ) in D1))
proof
let C9 , C10 being FinSequence;
assume that
L23: C9 in D1
and
L24: C10 in D1;
L25: C10 in ( ( NAT ) * ) by L18 , L24;
L26: (for B13 being set holds (B13 is  HP-closed implies ( ( <* 2 *> ^ C9 ) ^ C10 ) in B13))
proof
let C11 being set;
assume L27: C11 is  HP-closed;
L28: C10 in C11 by L27 , L18 , L24;
L29: C9 in C11 by L18 , L23 , L27;
thus L30: thesis by L29 , L27 , L28 , L5;
end;
L31: C9 in ( ( NAT ) * ) by L18 , L23;
reconsider D2 = C9 , D3 = C10 as (FinSequence of ( NAT )) by L31 , L25 , FINSEQ_1:def 11;
L32: ( ( <* 2 *> ^ D2 ) ^ D3 ) in ( ( NAT ) * ) by FINSEQ_1:def 11;
thus L33: thesis by L32 , L18 , L26;
end;
L34: D1 is  with_conjunction by L22 , L5;
L35: (for B14 , B15 being FinSequence holds ((B14 in D1 & B15 in D1) implies ( ( <* 1 *> ^ B14 ) ^ B15 ) in D1))
proof
let C12 , C13 being FinSequence;
assume that
L36: C12 in D1
and
L37: C13 in D1;
L38: C13 in ( ( NAT ) * ) by L18 , L37;
L39: (for B16 being set holds (B16 is  HP-closed implies ( ( <* 1 *> ^ C12 ) ^ C13 ) in B16))
proof
let C14 being set;
assume L40: C14 is  HP-closed;
L41: C13 in C14 by L40 , L18 , L37;
L42: C12 in C14 by L18 , L36 , L40;
thus L43: thesis by L42 , L40 , L41 , L3;
end;
L44: C12 in ( ( NAT ) * ) by L18 , L36;
reconsider D4 = C12 , D5 = C13 as (FinSequence of ( NAT )) by L44 , L38 , FINSEQ_1:def 11;
L45: ( ( <* 1 *> ^ D4 ) ^ D5 ) in ( ( NAT ) * ) by FINSEQ_1:def 11;
thus L46: thesis by L45 , L18 , L39;
end;
L47: D1 is  with_implication by L35 , L3;
L48: (for B17 being (Element of ( NAT )) holds <* ( 3 + B17 ) *> in D1)
proof
let C15 being (Element of ( NAT ));
set D6 = ( 3 + C15 );
reconsider D7 = <* D6 *> as (FinSequence of ( NAT ));
L49: D7 in ( ( NAT ) * ) by FINSEQ_1:def 11;
L50: (for B18 being set holds (B18 is  HP-closed implies <* D6 *> in B18)) by L7;
thus L51: thesis by L50 , L18 , L49;
end;
L52: D1 is  with_propositional_variables by L48 , L7;
L53: <* ( 0 ) *> in D1 by L18 , L17 , L19;
L54: D1 is  with_VERUM by L53 , L1;
thus L55: D1 is  HP-closed by L54 , L20 , L52 , L47 , L34;
let C16 being set;
assume that
L56: C16 is  HP-closed;
let C17 being set;
assume L57: C17 in D1;
thus L58: thesis by L57 , L18 , L56;
end;
uniqueness
proof
let C18 , C19 being set;
assume that
L59: C18 is  HP-closed
and
L60: (for B19 being set holds (B19 is  HP-closed implies C18 c= B19))
and
L61: C19 is  HP-closed
and
L62: (for B20 being set holds (B20 is  HP-closed implies C19 c= B20));
L63: C19 c= C18 by L59 , L62;
L64: C18 c= C19 by L60 , L61;
thus L65: thesis by L64 , L63 , XBOOLE_0:def 10;
end;
end;
registration
cluster ( HP-WFF ) ->  HP-closed;
coherence by L16;
end;
registration
cluster  HP-closed non  empty for set;
existence
proof
take ( HP-WFF );
thus L68: thesis;
end;
end;
registration
cluster ( HP-WFF ) ->  functional;
coherence
proof
L70: ( HP-WFF ) c= ( ( NAT ) * ) by L9;
thus L71: thesis by L70;
end;
end;
registration
cluster  ->  FinSequence-like for (Element of ( HP-WFF ));
coherence
proof
let C20 being (Element of ( HP-WFF ));
L73: ( HP-WFF ) c= ( ( NAT ) * ) by L9;
thus L74: thesis by L73;
end;
end;
definition
mode HP-formula
 is (Element of ( HP-WFF ));
end;
definition
func VERUM -> HP-formula equals 
<* ( 0 ) *>;
correctness by L1;
let C21 , C22 being (Element of ( HP-WFF ));
func C21 => C22 -> HP-formula equals 
( ( <* 1 *> ^ C21 ) ^ C22 );
coherence by L3;
func C21 '&' C22 -> HP-formula equals 
( ( <* 2 *> ^ C21 ) ^ C22 );
correctness by L5;
end;
definition
let C23 being (Subset of ( HP-WFF ));
attr C23 is  Hilbert_theory
means
:L78: (( VERUM ) in C23 & (for B21 , B22 , B23 being (Element of ( HP-WFF )) holds (( B21 => ( B22 => B21 ) ) in C23 & ( ( B21 => ( B22 => B23 ) ) => ( ( B21 => B22 ) => ( B21 => B23 ) ) ) in C23 & ( ( B21 '&' B22 ) => B21 ) in C23 & ( ( B21 '&' B22 ) => B22 ) in C23 & ( B21 => ( B22 => ( B21 '&' B22 ) ) ) in C23 & ((B21 in C23 & ( B21 => B22 ) in C23) implies B22 in C23))));
correctness;
end;
definition
let R2 being (Subset of ( HP-WFF ));
func CnPos R2 -> (Subset of ( HP-WFF )) means 
:L80: (for R6 being (Element of ( HP-WFF )) holds (R6 in it iff (for R1 being (Subset of ( HP-WFF )) holds ((R1 is  Hilbert_theory & R2 c= R1) implies R6 in R1))));
existence
proof
defpred S2[ set ] means (for R1 being (Subset of ( HP-WFF )) holds ((R1 is  Hilbert_theory & R2 c= R1) implies $1 in R1));
consider C24 being set such that L81: (for B24 being set holds (B24 in C24 iff (B24 in ( HP-WFF ) & S2[ B24 ]))) from XBOOLE_0:sch 1;
L82: C24 c= ( HP-WFF )
proof
let C25 being set;
assume L83: C25 in C24;
thus L84: thesis by L83 , L81;
end;
reconsider D8 = C24 as (Subset of ( HP-WFF )) by L82;
take D8;
thus L85: thesis by L81;
end;
uniqueness
proof
let C26 , C27 being (Subset of ( HP-WFF ));
assume that
L86: (for R6 being (Element of ( HP-WFF )) holds (R6 in C26 iff (for R1 being (Subset of ( HP-WFF )) holds ((R1 is  Hilbert_theory & R2 c= R1) implies R6 in R1))))
and
L87: (for R6 being (Element of ( HP-WFF )) holds (R6 in C27 iff (for R1 being (Subset of ( HP-WFF )) holds ((R1 is  Hilbert_theory & R2 c= R1) implies R6 in R1))));
L88: (for B25 being set holds (B25 in C26 iff B25 in C27))
proof
let C28 being set;
thus L89:now
assume L90: C28 in C26;
reconsider D9 = C28 as (Element of ( HP-WFF )) by L90;
L91: (for R1 being (Subset of ( HP-WFF )) holds ((R1 is  Hilbert_theory & R2 c= R1) implies D9 in R1)) by L86 , L90;
thus L92: C28 in C27 by L91 , L87;
end;
assume L93: C28 in C27;
reconsider D10 = C28 as (Element of ( HP-WFF )) by L93;
L94: (for R1 being (Subset of ( HP-WFF )) holds ((R1 is  Hilbert_theory & R2 c= R1) implies D10 in R1)) by L87 , L93;
thus L95: thesis by L94 , L86;
end;
thus L96: thesis by L88 , TARSKI:1;
end;
end;
definition
func HP_TAUT -> (Subset of ( HP-WFF )) equals 
( CnPos ( {} ( HP-WFF ) ) );
correctness;
end;
theorem
L99: (for R2 being (Subset of ( HP-WFF )) holds ( VERUM ) in ( CnPos R2 ))
proof
let R2 being (Subset of ( HP-WFF ));
L100: (for R1 being (Subset of ( HP-WFF )) holds ((R1 is  Hilbert_theory & R2 c= R1) implies ( VERUM ) in R1)) by L78;
thus L101: thesis by L100 , L80;
end;
theorem
L102: (for R2 being (Subset of ( HP-WFF )) holds (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds ( R4 => ( R5 => ( R4 '&' R5 ) ) ) in ( CnPos R2 ))))
proof
let R2 being (Subset of ( HP-WFF ));
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
L103: (for R1 being (Subset of ( HP-WFF )) holds ((R1 is  Hilbert_theory & R2 c= R1) implies ( R4 => ( R5 => ( R4 '&' R5 ) ) ) in R1)) by L78;
thus L104: thesis by L103 , L80;
end;
theorem
L105: (for R2 being (Subset of ( HP-WFF )) holds (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R6 being (Element of ( HP-WFF )) holds ( ( R4 => ( R5 => R6 ) ) => ( ( R4 => R5 ) => ( R4 => R6 ) ) ) in ( CnPos R2 )))))
proof
let R2 being (Subset of ( HP-WFF ));
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R6 being (Element of ( HP-WFF ));
L106: (for R1 being (Subset of ( HP-WFF )) holds ((R1 is  Hilbert_theory & R2 c= R1) implies ( ( R4 => ( R5 => R6 ) ) => ( ( R4 => R5 ) => ( R4 => R6 ) ) ) in R1)) by L78;
thus L107: thesis by L106 , L80;
end;
theorem
L108: (for R2 being (Subset of ( HP-WFF )) holds (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds ( R4 => ( R5 => R4 ) ) in ( CnPos R2 ))))
proof
let R2 being (Subset of ( HP-WFF ));
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
L109: (for R1 being (Subset of ( HP-WFF )) holds ((R1 is  Hilbert_theory & R2 c= R1) implies ( R4 => ( R5 => R4 ) ) in R1)) by L78;
thus L110: thesis by L109 , L80;
end;
theorem
L111: (for R2 being (Subset of ( HP-WFF )) holds (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds ( ( R4 '&' R5 ) => R4 ) in ( CnPos R2 ))))
proof
let R2 being (Subset of ( HP-WFF ));
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
L112: (for R1 being (Subset of ( HP-WFF )) holds ((R1 is  Hilbert_theory & R2 c= R1) implies ( ( R4 '&' R5 ) => R4 ) in R1)) by L78;
thus L113: thesis by L112 , L80;
end;
theorem
L114: (for R2 being (Subset of ( HP-WFF )) holds (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds ( ( R4 '&' R5 ) => R5 ) in ( CnPos R2 ))))
proof
let R2 being (Subset of ( HP-WFF ));
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
L115: (for R1 being (Subset of ( HP-WFF )) holds ((R1 is  Hilbert_theory & R2 c= R1) implies ( ( R4 '&' R5 ) => R5 ) in R1)) by L78;
thus L116: thesis by L115 , L80;
end;
theorem
L117: (for R2 being (Subset of ( HP-WFF )) holds (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds ((R4 in ( CnPos R2 ) & ( R4 => R5 ) in ( CnPos R2 )) implies R5 in ( CnPos R2 )))))
proof
let R2 being (Subset of ( HP-WFF ));
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
assume that
L118: R4 in ( CnPos R2 )
and
L119: ( R4 => R5 ) in ( CnPos R2 );
L120: (for R1 being (Subset of ( HP-WFF )) holds ((R1 is  Hilbert_theory & R2 c= R1) implies R5 in R1))
proof
let R1 being (Subset of ( HP-WFF ));
assume that
L121: R1 is  Hilbert_theory
and
L122: R2 c= R1;
L123: ( R4 => R5 ) in R1 by L119 , L121 , L122 , L80;
L124: R4 in R1 by L118 , L121 , L122 , L80;
thus L125: thesis by L124 , L121 , L123 , L78;
end;
thus L126: thesis by L120 , L80;
end;
theorem
L127: (for R1 being (Subset of ( HP-WFF )) holds (for R2 being (Subset of ( HP-WFF )) holds ((R1 is  Hilbert_theory & R2 c= R1) implies ( CnPos R2 ) c= R1)))
proof
let R1 being (Subset of ( HP-WFF ));
let R2 being (Subset of ( HP-WFF ));
assume that
L128: R1 is  Hilbert_theory
and
L129: R2 c= R1;
let C29 being set;
thus L130: thesis by L128 , L129 , L80;
end;
theorem
L131: (for R2 being (Subset of ( HP-WFF )) holds R2 c= ( CnPos R2 ))
proof
let R2 being (Subset of ( HP-WFF ));
let C30 being set;
assume L132: C30 in R2;
reconsider D11 = C30 as (Element of ( HP-WFF )) by L132;
L133: (for R1 being (Subset of ( HP-WFF )) holds ((R1 is  Hilbert_theory & R2 c= R1) implies D11 in R1)) by L132;
thus L134: thesis by L133 , L80;
end;
theorem
L135: (for R2 being (Subset of ( HP-WFF )) holds (for R3 being (Subset of ( HP-WFF )) holds (R2 c= R3 implies ( CnPos R2 ) c= ( CnPos R3 ))))
proof
let R2 being (Subset of ( HP-WFF ));
let R3 being (Subset of ( HP-WFF ));
assume L136: R2 c= R3;
thus L137: ( CnPos R2 ) c= ( CnPos R3 )
proof
let C31 being set;
assume L138: C31 in ( CnPos R2 );
reconsider D12 = C31 as (Element of ( HP-WFF )) by L138;
L139: (for R1 being (Subset of ( HP-WFF )) holds ((R1 is  Hilbert_theory & R3 c= R1) implies D12 in R1))
proof
let R1 being (Subset of ( HP-WFF ));
assume that
L140: R1 is  Hilbert_theory
and
L141: R3 c= R1;
L142: R2 c= R1 by L136 , L141 , XBOOLE_1:1;
thus L143: thesis by L142 , L138 , L140 , L80;
end;
thus L144: thesis by L139 , L80;
end;

end;
L138: (for R2 being (Subset of ( HP-WFF )) holds ( CnPos ( CnPos R2 ) ) c= ( CnPos R2 ))
proof
let R2 being (Subset of ( HP-WFF ));
let C32 being set;
assume L139: C32 in ( CnPos ( CnPos R2 ) );
reconsider D13 = C32 as (Element of ( HP-WFF )) by L139;
L140: (for R1 being (Subset of ( HP-WFF )) holds ((R1 is  Hilbert_theory & R2 c= R1) implies D13 in R1))
proof
let R1 being (Subset of ( HP-WFF ));
assume that
L141: R1 is  Hilbert_theory
and
L142: R2 c= R1;
L143: ( CnPos R2 ) c= R1 by L141 , L142 , L127;
thus L144: thesis by L143 , L139 , L141 , L80;
end;
thus L145: thesis by L140 , L80;
end;
theorem
L146: (for R2 being (Subset of ( HP-WFF )) holds ( CnPos ( CnPos R2 ) ) = ( CnPos R2 ))
proof
let R2 being (Subset of ( HP-WFF ));
L147: ( CnPos R2 ) c= ( CnPos ( CnPos R2 ) ) by L131;
L148: ( CnPos ( CnPos R2 ) ) c= ( CnPos R2 ) by L138;
thus L149: thesis by L148 , L147 , XBOOLE_0:def 10;
end;
L150: (for R2 being (Subset of ( HP-WFF )) holds ( CnPos R2 ) is  Hilbert_theory)
proof
let R2 being (Subset of ( HP-WFF ));
thus L151: ( VERUM ) in ( CnPos R2 ) by L99;
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R6 being (Element of ( HP-WFF ));
thus L152: ( R4 => ( R5 => R4 ) ) in ( CnPos R2 ) by L108;
thus L153: ( ( R4 => ( R5 => R6 ) ) => ( ( R4 => R5 ) => ( R4 => R6 ) ) ) in ( CnPos R2 ) by L105;
thus L154: ( ( R4 '&' R5 ) => R4 ) in ( CnPos R2 ) by L111;
thus L155: ( ( R4 '&' R5 ) => R5 ) in ( CnPos R2 ) by L114;
thus L156: ( R4 => ( R5 => ( R4 '&' R5 ) ) ) in ( CnPos R2 ) by L102;
thus L157: thesis by L117;
end;
registration
let C33 being (Subset of ( HP-WFF ));
cluster ( CnPos C33 ) ->  Hilbert_theory;
coherence by L150;
end;
theorem
L159: (for R1 being (Subset of ( HP-WFF )) holds (R1 is  Hilbert_theory iff ( CnPos R1 ) = R1))
proof
let R1 being (Subset of ( HP-WFF ));
thus L160:now
assume L161: R1 is  Hilbert_theory;
L162: ( CnPos R1 ) c= R1
proof
let C34 being set;
assume L163: C34 in ( CnPos R1 );
thus L164: thesis by L163 , L161 , L80;
end;
L165: R1 c= ( CnPos R1 ) by L131;
thus L166: ( CnPos R1 ) = R1 by L165 , L162 , XBOOLE_0:def 10;
end;
thus L167: thesis;
end;
theorem
L168: (for R1 being (Subset of ( HP-WFF )) holds (R1 is  Hilbert_theory implies ( HP_TAUT ) c= R1))
proof
let R1 being (Subset of ( HP-WFF ));
assume L169: R1 is  Hilbert_theory;
L170: ( HP_TAUT ) c= ( CnPos R1 ) by L135 , XBOOLE_1:2;
thus L171: thesis by L170 , L169 , L159;
end;
registration
cluster ( HP_TAUT ) ->  Hilbert_theory;
coherence;
end;
begin
theorem
L173: (for R4 being (Element of ( HP-WFF )) holds ( R4 => R4 ) in ( HP_TAUT ))
proof
let R4 being (Element of ( HP-WFF ));
L174: ( R4 => ( R4 => R4 ) ) in ( HP_TAUT ) by L78;
L175: ( R4 => ( ( R4 => R4 ) => R4 ) ) in ( HP_TAUT ) by L78;
L176: ( ( R4 => ( ( R4 => R4 ) => R4 ) ) => ( ( R4 => ( R4 => R4 ) ) => ( R4 => R4 ) ) ) in ( HP_TAUT ) by L78;
L177: ( ( R4 => ( R4 => R4 ) ) => ( R4 => R4 ) ) in ( HP_TAUT ) by L176 , L175 , L78;
thus L178: thesis by L177 , L174 , L78;
end;
theorem
L179: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (R5 in ( HP_TAUT ) implies ( R4 => R5 ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
L180: ( R5 => ( R4 => R5 ) ) in ( HP_TAUT ) by L78;
thus L181: thesis by L180 , L78;
end;
theorem
L182: (for R4 being (Element of ( HP-WFF )) holds ( R4 => ( VERUM ) ) in ( HP_TAUT )) by L99 , L179;
theorem
L183: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds ( ( R4 => R5 ) => ( R4 => R4 ) ) in ( HP_TAUT ))) by L173 , L179;
theorem
L184: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds ( ( R5 => R4 ) => ( R4 => R4 ) ) in ( HP_TAUT ))) by L173 , L179;
theorem
L185: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R6 being (Element of ( HP-WFF )) holds ( ( R5 => R6 ) => ( ( R4 => R5 ) => ( R4 => R6 ) ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R6 being (Element of ( HP-WFF ));
L186: ( ( R4 => ( R5 => R6 ) ) => ( ( R4 => R5 ) => ( R4 => R6 ) ) ) in ( HP_TAUT ) by L78;
L187: ( ( ( R5 => R6 ) => ( ( R4 => ( R5 => R6 ) ) => ( ( R4 => R5 ) => ( R4 => R6 ) ) ) ) => ( ( ( R5 => R6 ) => ( R4 => ( R5 => R6 ) ) ) => ( ( R5 => R6 ) => ( ( R4 => R5 ) => ( R4 => R6 ) ) ) ) ) in ( HP_TAUT ) by L78;
L188: ( ( ( R4 => ( R5 => R6 ) ) => ( ( R4 => R5 ) => ( R4 => R6 ) ) ) => ( ( R5 => R6 ) => ( ( R4 => ( R5 => R6 ) ) => ( ( R4 => R5 ) => ( R4 => R6 ) ) ) ) ) in ( HP_TAUT ) by L78;
L189: ( ( R5 => R6 ) => ( ( R4 => ( R5 => R6 ) ) => ( ( R4 => R5 ) => ( R4 => R6 ) ) ) ) in ( HP_TAUT ) by L188 , L186 , L78;
L190: ( ( ( R5 => R6 ) => ( R4 => ( R5 => R6 ) ) ) => ( ( R5 => R6 ) => ( ( R4 => R5 ) => ( R4 => R6 ) ) ) ) in ( HP_TAUT ) by L189 , L187 , L78;
L191: ( ( R5 => R6 ) => ( R4 => ( R5 => R6 ) ) ) in ( HP_TAUT ) by L78;
thus L192: thesis by L191 , L190 , L78;
end;
theorem
L193: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R6 being (Element of ( HP-WFF )) holds (( R4 => ( R5 => R6 ) ) in ( HP_TAUT ) implies ( R5 => ( R4 => R6 ) ) in ( HP_TAUT )))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R6 being (Element of ( HP-WFF ));
assume L194: ( R4 => ( R5 => R6 ) ) in ( HP_TAUT );
L195: ( ( ( R4 => R5 ) => ( R4 => R6 ) ) => ( ( R5 => ( R4 => R5 ) ) => ( R5 => ( R4 => R6 ) ) ) ) in ( HP_TAUT ) by L185;
L196: ( ( R4 => ( R5 => R6 ) ) => ( ( R4 => R5 ) => ( R4 => R6 ) ) ) in ( HP_TAUT ) by L78;
L197: ( ( R4 => R5 ) => ( R4 => R6 ) ) in ( HP_TAUT ) by L196 , L194 , L78;
L198: ( ( R5 => ( R4 => R5 ) ) => ( R5 => ( R4 => R6 ) ) ) in ( HP_TAUT ) by L197 , L195 , L78;
L199: ( R5 => ( R4 => R5 ) ) in ( HP_TAUT ) by L78;
thus L200: thesis by L199 , L198 , L78;
end;
theorem
L201: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R6 being (Element of ( HP-WFF )) holds ( ( R4 => R5 ) => ( ( R5 => R6 ) => ( R4 => R6 ) ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R6 being (Element of ( HP-WFF ));
L202: ( ( R5 => R6 ) => ( ( R4 => R5 ) => ( R4 => R6 ) ) ) in ( HP_TAUT ) by L185;
thus L203: thesis by L202 , L193;
end;
theorem
L204: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R6 being (Element of ( HP-WFF )) holds (( R4 => R5 ) in ( HP_TAUT ) implies ( ( R5 => R6 ) => ( R4 => R6 ) ) in ( HP_TAUT )))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R6 being (Element of ( HP-WFF ));
assume L205: ( R4 => R5 ) in ( HP_TAUT );
L206: ( ( R4 => R5 ) => ( ( R5 => R6 ) => ( R4 => R6 ) ) ) in ( HP_TAUT ) by L201;
thus L207: thesis by L206 , L205 , L78;
end;
theorem
L208: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R6 being (Element of ( HP-WFF )) holds ((( R4 => R5 ) in ( HP_TAUT ) & ( R5 => R6 ) in ( HP_TAUT )) implies ( R4 => R6 ) in ( HP_TAUT )))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R6 being (Element of ( HP-WFF ));
assume that
L209: ( R4 => R5 ) in ( HP_TAUT )
and
L210: ( R5 => R6 ) in ( HP_TAUT );
L211: ( ( R4 => R5 ) => ( ( R5 => R6 ) => ( R4 => R6 ) ) ) in ( HP_TAUT ) by L201;
L212: ( ( R5 => R6 ) => ( R4 => R6 ) ) in ( HP_TAUT ) by L211 , L209 , L78;
thus L213: thesis by L212 , L210 , L78;
end;
L214: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R6 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( ( ( R5 => R6 ) => ( R4 => R6 ) ) => R7 ) => ( ( R4 => R5 ) => R7 ) ) in ( HP_TAUT )))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R6 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
L215: ( ( R4 => R5 ) => ( ( R5 => R6 ) => ( R4 => R6 ) ) ) in ( HP_TAUT ) by L201;
thus L216: thesis by L215 , L204;
end;
theorem
L217: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R6 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( R4 => ( R5 => R6 ) ) => ( ( R7 => R5 ) => ( R4 => ( R7 => R6 ) ) ) ) in ( HP_TAUT )))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R6 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
L218: ( ( ( ( R5 => R6 ) => ( R7 => R6 ) ) => ( R4 => ( R7 => R6 ) ) ) => ( ( R7 => R5 ) => ( R4 => ( R7 => R6 ) ) ) ) in ( HP_TAUT ) by L214;
L219: ( ( ( ( ( R5 => R6 ) => ( R7 => R6 ) ) => ( R4 => ( R7 => R6 ) ) ) => ( ( R7 => R5 ) => ( R4 => ( R7 => R6 ) ) ) ) => ( ( R4 => ( R5 => R6 ) ) => ( ( R7 => R5 ) => ( R4 => ( R7 => R6 ) ) ) ) ) in ( HP_TAUT ) by L214;
thus L220: thesis by L219 , L218 , L78;
end;
theorem
L221: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R6 being (Element of ( HP-WFF )) holds ( ( ( R4 => R5 ) => R6 ) => ( R5 => R6 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R6 being (Element of ( HP-WFF ));
L222: ( ( R5 => ( R4 => R5 ) ) => ( ( ( R4 => R5 ) => R6 ) => ( R5 => R6 ) ) ) in ( HP_TAUT ) by L201;
L223: ( R5 => ( R4 => R5 ) ) in ( HP_TAUT ) by L78;
thus L224: thesis by L223 , L222 , L78;
end;
theorem
L225: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R6 being (Element of ( HP-WFF )) holds ( ( R4 => ( R5 => R6 ) ) => ( R5 => ( R4 => R6 ) ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R6 being (Element of ( HP-WFF ));
L226: ( R5 => ( R4 => R5 ) ) in ( HP_TAUT ) by L78;
L227: ( ( R4 => ( R5 => R6 ) ) => ( ( R4 => R5 ) => ( R4 => R6 ) ) ) in ( HP_TAUT ) by L78;
L228: ( ( R4 => R5 ) => ( ( R4 => ( R5 => R6 ) ) => ( R4 => R6 ) ) ) in ( HP_TAUT ) by L227 , L193;
L229: ( ( ( R4 => R5 ) => ( ( R4 => ( R5 => R6 ) ) => ( R4 => R6 ) ) ) => ( ( R5 => ( R4 => R5 ) ) => ( R5 => ( ( R4 => ( R5 => R6 ) ) => ( R4 => R6 ) ) ) ) ) in ( HP_TAUT ) by L185;
L230: ( ( R5 => ( R4 => R5 ) ) => ( R5 => ( ( R4 => ( R5 => R6 ) ) => ( R4 => R6 ) ) ) ) in ( HP_TAUT ) by L229 , L228 , L78;
L231: ( R5 => ( ( R4 => ( R5 => R6 ) ) => ( R4 => R6 ) ) ) in ( HP_TAUT ) by L230 , L226 , L78;
thus L232: thesis by L231 , L193;
end;
theorem
L233: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds ( ( R4 => ( R4 => R5 ) ) => ( R4 => R5 ) ) in ( HP_TAUT )))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
L234: ( ( R4 => ( R4 => R5 ) ) => ( ( R4 => R4 ) => ( R4 => R5 ) ) ) in ( HP_TAUT ) by L78;
L235: ( ( R4 => R4 ) => ( ( R4 => ( R4 => R5 ) ) => ( R4 => R5 ) ) ) in ( HP_TAUT ) by L234 , L193;
L236: ( R4 => R4 ) in ( HP_TAUT ) by L173;
thus L237: thesis by L236 , L235 , L78;
end;
theorem
L238: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds ( R5 => ( ( R5 => R4 ) => R4 ) ) in ( HP_TAUT )))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
L239: ( ( ( R5 => R4 ) => ( R5 => R4 ) ) => ( R5 => ( ( R5 => R4 ) => R4 ) ) ) in ( HP_TAUT ) by L225;
L240: ( ( R5 => R4 ) => ( R5 => R4 ) ) in ( HP_TAUT ) by L173;
thus L241: thesis by L240 , L239 , L78;
end;
theorem
L242: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ((( R7 => ( R5 => R4 ) ) in ( HP_TAUT ) & R5 in ( HP_TAUT )) implies ( R7 => R4 ) in ( HP_TAUT )))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
assume that
L243: ( R7 => ( R5 => R4 ) ) in ( HP_TAUT )
and
L244: R5 in ( HP_TAUT );
L245: ( ( R7 => ( R5 => R4 ) ) => ( R5 => ( R7 => R4 ) ) ) in ( HP_TAUT ) by L225;
L246: ( R5 => ( R7 => R4 ) ) in ( HP_TAUT ) by L245 , L243 , L78;
thus L247: thesis by L246 , L244 , L78;
end;
begin
theorem
L248: (for R4 being (Element of ( HP-WFF )) holds ( R4 => ( R4 '&' R4 ) ) in ( HP_TAUT ))
proof
let R4 being (Element of ( HP-WFF ));
L249: ( ( R4 => ( R4 => ( R4 '&' R4 ) ) ) => ( R4 => ( R4 '&' R4 ) ) ) in ( HP_TAUT ) by L233;
L250: ( R4 => ( R4 => ( R4 '&' R4 ) ) ) in ( HP_TAUT ) by L78;
thus L251: thesis by L250 , L249 , L78;
end;
theorem
L252: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (( R4 '&' R5 ) in ( HP_TAUT ) iff (R4 in ( HP_TAUT ) & R5 in ( HP_TAUT )))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
thus L253:now
L254: ( ( R4 '&' R5 ) => R5 ) in ( HP_TAUT ) by L78;
assume L255: ( R4 '&' R5 ) in ( HP_TAUT );
L256: ( ( R4 '&' R5 ) => R4 ) in ( HP_TAUT ) by L78;
thus L257: (R4 in ( HP_TAUT ) & R5 in ( HP_TAUT )) by L256 , L255 , L254 , L78;
end;
assume that
L258: R4 in ( HP_TAUT )
and
L259: R5 in ( HP_TAUT );
L260: ( R4 => ( R5 => ( R4 '&' R5 ) ) ) in ( HP_TAUT ) by L78;
L261: ( R5 => ( R4 '&' R5 ) ) in ( HP_TAUT ) by L260 , L258 , L78;
thus L262: thesis by L261 , L259 , L78;
end;
theorem
L263: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (( R4 '&' R5 ) in ( HP_TAUT ) implies ( R5 '&' R4 ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
assume L264: ( R4 '&' R5 ) in ( HP_TAUT );
L265: R5 in ( HP_TAUT ) by L264 , L252;
L266: R4 in ( HP_TAUT ) by L264 , L252;
thus L267: thesis by L266 , L265 , L252;
end;
theorem
L268: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R6 being (Element of ( HP-WFF )) holds ( ( ( R4 '&' R5 ) => R6 ) => ( R4 => ( R5 => R6 ) ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R6 being (Element of ( HP-WFF ));
set D14 = ( R5 => ( R4 '&' R5 ) );
set D15 = ( ( ( R4 '&' R5 ) => R6 ) => ( R5 => R6 ) );
L269: ( ( R4 => ( D14 => D15 ) ) => ( ( R4 => D14 ) => ( R4 => D15 ) ) ) in ( HP_TAUT ) by L78;
L270: ( R4 => ( R5 => ( R4 '&' R5 ) ) ) in ( HP_TAUT ) by L78;
L271: ( R4 => ( ( R5 => ( R4 '&' R5 ) ) => ( ( ( R4 '&' R5 ) => R6 ) => ( R5 => R6 ) ) ) ) in ( HP_TAUT ) by L179 , L201;
L272: ( ( R4 => D14 ) => ( R4 => D15 ) ) in ( HP_TAUT ) by L271 , L269 , L78;
L273: ( R4 => ( ( ( R4 '&' R5 ) => R6 ) => ( R5 => R6 ) ) ) in ( HP_TAUT ) by L272 , L270 , L78;
L274: ( ( R4 => ( ( ( R4 '&' R5 ) => R6 ) => ( R5 => R6 ) ) ) => ( ( ( R4 '&' R5 ) => R6 ) => ( R4 => ( R5 => R6 ) ) ) ) in ( HP_TAUT ) by L225;
thus L275: thesis by L274 , L273 , L78;
end;
theorem
L276: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R6 being (Element of ( HP-WFF )) holds ( ( R4 => ( R5 => R6 ) ) => ( ( R4 '&' R5 ) => R6 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R6 being (Element of ( HP-WFF ));
L277: ( ( ( R4 '&' R5 ) => R5 ) => ( ( R5 => R6 ) => ( ( R4 '&' R5 ) => R6 ) ) ) in ( HP_TAUT ) by L201;
L278: ( ( R4 '&' R5 ) => R5 ) in ( HP_TAUT ) by L78;
L279: ( ( R5 => R6 ) => ( ( R4 '&' R5 ) => R6 ) ) in ( HP_TAUT ) by L278 , L277 , L78;
L280: ( R4 => ( ( R5 => R6 ) => ( ( R4 '&' R5 ) => R6 ) ) ) in ( HP_TAUT ) by L279 , L179;
L281: ( ( R4 => ( ( R4 '&' R5 ) => R6 ) ) => ( ( R4 '&' R5 ) => ( R4 => R6 ) ) ) in ( HP_TAUT ) by L225;
L282: ( ( R4 => ( ( R5 => R6 ) => ( ( R4 '&' R5 ) => R6 ) ) ) => ( ( R4 => ( R5 => R6 ) ) => ( R4 => ( ( R4 '&' R5 ) => R6 ) ) ) ) in ( HP_TAUT ) by L78;
L283: ( ( R4 => ( R5 => R6 ) ) => ( R4 => ( ( R4 '&' R5 ) => R6 ) ) ) in ( HP_TAUT ) by L282 , L280 , L78;
L284: ( ( R4 => ( R5 => R6 ) ) => ( ( R4 '&' R5 ) => ( R4 => R6 ) ) ) in ( HP_TAUT ) by L283 , L281 , L208;
L285: ( ( R4 '&' R5 ) => R4 ) in ( HP_TAUT ) by L78;
L286: ( ( ( R4 '&' R5 ) => ( R4 => R6 ) ) => ( ( ( R4 '&' R5 ) => R4 ) => ( ( R4 '&' R5 ) => R6 ) ) ) in ( HP_TAUT ) by L78;
L287: ( ( ( R4 '&' R5 ) => ( R4 => R6 ) ) => ( ( R4 '&' R5 ) => R6 ) ) in ( HP_TAUT ) by L286 , L285 , L242;
thus L288: thesis by L287 , L284 , L208;
end;
theorem
L289: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R6 being (Element of ( HP-WFF )) holds ( ( R6 => R4 ) => ( ( R6 => R5 ) => ( R6 => ( R4 '&' R5 ) ) ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R6 being (Element of ( HP-WFF ));
L290: ( ( R6 => ( R5 => ( R4 '&' R5 ) ) ) => ( ( R6 => R5 ) => ( R6 => ( R4 '&' R5 ) ) ) ) in ( HP_TAUT ) by L78;
L291: ( R4 => ( R5 => ( R4 '&' R5 ) ) ) in ( HP_TAUT ) by L78;
L292: ( R6 => ( R4 => ( R5 => ( R4 '&' R5 ) ) ) ) in ( HP_TAUT ) by L291 , L179;
L293: ( ( R6 => ( R4 => ( R5 => ( R4 '&' R5 ) ) ) ) => ( ( R6 => R4 ) => ( R6 => ( R5 => ( R4 '&' R5 ) ) ) ) ) in ( HP_TAUT ) by L78;
L294: ( ( R6 => R4 ) => ( R6 => ( R5 => ( R4 '&' R5 ) ) ) ) in ( HP_TAUT ) by L293 , L292 , L78;
thus L295: thesis by L294 , L290 , L208;
end;
theorem
L296: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds ( ( ( R4 => R5 ) '&' R4 ) => R5 ) in ( HP_TAUT )))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
set D16 = ( R4 => R5 );
L297: ( D16 => D16 ) in ( HP_TAUT ) by L173;
L298: ( ( D16 => D16 ) => ( ( D16 '&' R4 ) => R5 ) ) in ( HP_TAUT ) by L276;
thus L299: thesis by L298 , L297 , L78;
end;
theorem
L300: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( ( ( R4 => R5 ) '&' R4 ) '&' R7 ) => R5 ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
set D17 = ( ( R4 => R5 ) '&' R4 );
L301: ( D17 => R5 ) in ( HP_TAUT ) by L296;
L302: ( ( D17 '&' R7 ) => D17 ) in ( HP_TAUT ) by L78;
thus L303: thesis by L302 , L301 , L208;
end;
theorem
L304: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( R5 => R7 ) => ( ( R4 '&' R5 ) => R7 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
set D18 = ( R4 '&' R5 );
L305: ( D18 => R5 ) in ( HP_TAUT ) by L78;
L306: ( ( D18 => R5 ) => ( ( R5 => R7 ) => ( D18 => R7 ) ) ) in ( HP_TAUT ) by L201;
thus L307: thesis by L306 , L305 , L78;
end;
theorem
L308: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( R5 => R7 ) => ( ( R5 '&' R4 ) => R7 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
set D19 = ( R5 '&' R4 );
L309: ( D19 => R5 ) in ( HP_TAUT ) by L78;
L310: ( ( D19 => R5 ) => ( ( R5 => R7 ) => ( D19 => R7 ) ) ) in ( HP_TAUT ) by L201;
thus L311: thesis by L310 , L309 , L78;
end;
theorem
L312: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( ( R4 '&' R7 ) => R5 ) => ( ( R4 '&' R7 ) => ( R5 '&' R7 ) ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
set D20 = ( R4 '&' R7 );
L313: ( ( D20 => R5 ) => ( ( D20 => R7 ) => ( D20 => ( R5 '&' R7 ) ) ) ) in ( HP_TAUT ) by L289;
L314: ( D20 => R7 ) in ( HP_TAUT ) by L78;
thus L315: thesis by L314 , L313 , L242;
end;
theorem
L316: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( R4 => R5 ) => ( ( R4 '&' R7 ) => ( R5 '&' R7 ) ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
L317: ( ( ( R4 '&' R7 ) => R5 ) => ( ( R4 '&' R7 ) => ( R5 '&' R7 ) ) ) in ( HP_TAUT ) by L312;
L318: ( ( R4 => R5 ) => ( ( R4 '&' R7 ) => R5 ) ) in ( HP_TAUT ) by L308;
thus L319: thesis by L318 , L317 , L208;
end;
theorem
L320: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( ( R4 => R5 ) '&' ( R4 '&' R7 ) ) => ( R5 '&' R7 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
set D21 = ( R4 => R5 );
set D22 = ( R4 '&' R7 );
set D23 = ( R5 '&' R7 );
L321: ( D21 => ( D22 => D23 ) ) in ( HP_TAUT ) by L316;
L322: ( ( D21 => ( D22 => D23 ) ) => ( ( D21 '&' D22 ) => D23 ) ) in ( HP_TAUT ) by L276;
thus L323: thesis by L322 , L321 , L78;
end;
theorem
L324: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds ( ( R4 '&' R5 ) => ( R5 '&' R4 ) ) in ( HP_TAUT )))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
set D24 = ( R4 '&' R5 );
L325: ( D24 => R5 ) in ( HP_TAUT ) by L78;
L326: ( D24 => R4 ) in ( HP_TAUT ) by L78;
L327: ( ( D24 => R5 ) => ( ( D24 => R4 ) => ( D24 => ( R5 '&' R4 ) ) ) ) in ( HP_TAUT ) by L289;
L328: ( ( D24 => R4 ) => ( D24 => ( R5 '&' R4 ) ) ) in ( HP_TAUT ) by L327 , L325 , L78;
thus L329: thesis by L328 , L326 , L78;
end;
theorem
L330: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( ( R4 => R5 ) '&' ( R4 '&' R7 ) ) => ( R7 '&' R5 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
L331: ( ( R5 '&' R7 ) => ( R7 '&' R5 ) ) in ( HP_TAUT ) by L324;
L332: ( ( ( R4 => R5 ) '&' ( R4 '&' R7 ) ) => ( R5 '&' R7 ) ) in ( HP_TAUT ) by L320;
thus L333: thesis by L332 , L331 , L208;
end;
theorem
L334: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( R4 => R5 ) => ( ( R4 '&' R7 ) => ( R7 '&' R5 ) ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
set D25 = ( R4 => R5 );
set D26 = ( R4 '&' R7 );
set D27 = ( R7 '&' R5 );
L335: ( ( D25 '&' D26 ) => D27 ) in ( HP_TAUT ) by L330;
L336: ( ( ( D25 '&' D26 ) => D27 ) => ( D25 => ( D26 => D27 ) ) ) in ( HP_TAUT ) by L268;
thus L337: thesis by L336 , L335 , L78;
end;
theorem
L338: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( R4 => R5 ) => ( ( R7 '&' R4 ) => ( R7 '&' R5 ) ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
set D28 = ( R4 => R5 );
set D29 = ( R4 '&' R7 );
set D30 = ( R7 '&' R5 );
set D31 = ( R7 '&' R4 );
L339: ( D28 => ( D29 => D30 ) ) in ( HP_TAUT ) by L334;
L340: ( D31 => D29 ) in ( HP_TAUT ) by L324;
L341: ( ( D28 => ( D29 => D30 ) ) => ( ( D31 => D29 ) => ( D28 => ( D31 => D30 ) ) ) ) in ( HP_TAUT ) by L217;
L342: ( ( D31 => D29 ) => ( D28 => ( D31 => D30 ) ) ) in ( HP_TAUT ) by L341 , L339 , L78;
thus L343: thesis by L342 , L340 , L78;
end;
theorem
L344: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( R4 '&' ( R7 '&' R5 ) ) => ( R4 '&' ( R5 '&' R7 ) ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
set D32 = ( R7 '&' R5 );
set D33 = ( R5 '&' R7 );
L345: ( D32 => D33 ) in ( HP_TAUT ) by L324;
L346: ( ( D32 => D33 ) => ( ( R4 '&' D32 ) => ( R4 '&' D33 ) ) ) in ( HP_TAUT ) by L338;
thus L347: thesis by L346 , L345 , L78;
end;
theorem
L348: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( ( R4 => R5 ) '&' ( R4 => R7 ) ) => ( R4 => ( R5 '&' R7 ) ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
set D34 = ( R4 => R5 );
set D35 = ( R4 => R7 );
set D36 = ( R4 => ( R5 '&' R7 ) );
L349: ( D34 => ( D35 => D36 ) ) in ( HP_TAUT ) by L289;
L350: ( ( D34 => ( D35 => D36 ) ) => ( ( D34 '&' D35 ) => D36 ) ) in ( HP_TAUT ) by L276;
thus L351: thesis by L350 , L349 , L78;
end;
L352: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( ( R4 '&' R5 ) '&' R7 ) => R5 ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
L353: ( ( R4 '&' R5 ) => R5 ) in ( HP_TAUT ) by L78;
L354: ( ( ( R4 '&' R5 ) '&' R7 ) => ( R4 '&' R5 ) ) in ( HP_TAUT ) by L78;
thus L355: thesis by L354 , L353 , L208;
end;
L356: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( ( ( R4 '&' R5 ) '&' R7 ) '&' ( ( R4 '&' R5 ) '&' R7 ) ) => ( ( ( R4 '&' R5 ) '&' R7 ) '&' R5 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
set D37 = ( ( R4 '&' R5 ) '&' R7 );
L357: ( D37 => R5 ) in ( HP_TAUT ) by L352;
L358: ( ( D37 => R5 ) => ( ( D37 '&' D37 ) => ( D37 '&' R5 ) ) ) in ( HP_TAUT ) by L338;
thus L359: thesis by L358 , L357 , L78;
end;
L360: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( ( R4 '&' R5 ) '&' R7 ) => ( ( ( R4 '&' R5 ) '&' R7 ) '&' R5 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
L361: ( ( ( ( R4 '&' R5 ) '&' R7 ) '&' ( ( R4 '&' R5 ) '&' R7 ) ) => ( ( ( R4 '&' R5 ) '&' R7 ) '&' R5 ) ) in ( HP_TAUT ) by L356;
L362: ( ( ( R4 '&' R5 ) '&' R7 ) => ( ( ( R4 '&' R5 ) '&' R7 ) '&' ( ( R4 '&' R5 ) '&' R7 ) ) ) in ( HP_TAUT ) by L248;
thus L363: thesis by L362 , L361 , L208;
end;
L364: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( ( R4 '&' R5 ) '&' R7 ) => ( R4 '&' R7 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
set D38 = ( R4 '&' R5 );
L365: ( D38 => R4 ) in ( HP_TAUT ) by L78;
L366: ( ( D38 => R4 ) => ( ( D38 '&' R7 ) => ( R4 '&' R7 ) ) ) in ( HP_TAUT ) by L316;
thus L367: thesis by L366 , L365 , L78;
end;
L368: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( ( ( R4 '&' R5 ) '&' R7 ) '&' R5 ) => ( ( R4 '&' R7 ) '&' R5 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
set D39 = ( ( R4 '&' R5 ) '&' R7 );
set D40 = ( R4 '&' R7 );
L369: ( D39 => D40 ) in ( HP_TAUT ) by L364;
L370: ( ( D39 => D40 ) => ( ( D39 '&' R5 ) => ( D40 '&' R5 ) ) ) in ( HP_TAUT ) by L316;
thus L371: thesis by L370 , L369 , L78;
end;
L372: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( ( R4 '&' R5 ) '&' R7 ) => ( ( R4 '&' R7 ) '&' R5 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
L373: ( ( ( ( R4 '&' R5 ) '&' R7 ) '&' R5 ) => ( ( R4 '&' R7 ) '&' R5 ) ) in ( HP_TAUT ) by L368;
L374: ( ( ( R4 '&' R5 ) '&' R7 ) => ( ( ( R4 '&' R5 ) '&' R7 ) '&' R5 ) ) in ( HP_TAUT ) by L360;
thus L375: thesis by L374 , L373 , L208;
end;
L376: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( ( R4 '&' R7 ) '&' R5 ) => ( ( R7 '&' R4 ) '&' R5 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
set D41 = ( R4 '&' R7 );
set D42 = ( R7 '&' R4 );
L377: ( D41 => D42 ) in ( HP_TAUT ) by L324;
L378: ( ( D41 => D42 ) => ( ( D41 '&' R5 ) => ( D42 '&' R5 ) ) ) in ( HP_TAUT ) by L316;
thus L379: thesis by L378 , L377 , L78;
end;
L380: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( ( R4 '&' R5 ) '&' R7 ) => ( ( R7 '&' R4 ) '&' R5 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
L381: ( ( ( R4 '&' R7 ) '&' R5 ) => ( ( R7 '&' R4 ) '&' R5 ) ) in ( HP_TAUT ) by L376;
L382: ( ( ( R4 '&' R5 ) '&' R7 ) => ( ( R4 '&' R7 ) '&' R5 ) ) in ( HP_TAUT ) by L372;
thus L383: thesis by L382 , L381 , L208;
end;
L384: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( ( R4 '&' R5 ) '&' R7 ) => ( ( R7 '&' R5 ) '&' R4 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
L385: ( ( ( R7 '&' R4 ) '&' R5 ) => ( ( R7 '&' R5 ) '&' R4 ) ) in ( HP_TAUT ) by L372;
L386: ( ( ( R4 '&' R5 ) '&' R7 ) => ( ( R7 '&' R4 ) '&' R5 ) ) in ( HP_TAUT ) by L380;
thus L387: thesis by L386 , L385 , L208;
end;
L388: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( ( R4 '&' R5 ) '&' R7 ) => ( R4 '&' ( R7 '&' R5 ) ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
L389: ( ( ( R7 '&' R5 ) '&' R4 ) => ( R4 '&' ( R7 '&' R5 ) ) ) in ( HP_TAUT ) by L324;
L390: ( ( ( R4 '&' R5 ) '&' R7 ) => ( ( R7 '&' R5 ) '&' R4 ) ) in ( HP_TAUT ) by L384;
thus L391: thesis by L390 , L389 , L208;
end;
L392: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( R4 '&' ( R7 '&' R5 ) ) => ( R4 '&' ( R5 '&' R7 ) ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
set D43 = ( R7 '&' R5 );
set D44 = ( R5 '&' R7 );
L393: ( ( R7 '&' R5 ) => ( R5 '&' R7 ) ) in ( HP_TAUT ) by L324;
L394: ( ( D43 => D44 ) => ( ( R4 '&' D43 ) => ( R4 '&' D44 ) ) ) in ( HP_TAUT ) by L338;
thus L395: thesis by L394 , L393 , L78;
end;
theorem
L396: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( ( R4 '&' R5 ) '&' R7 ) => ( R4 '&' ( R5 '&' R7 ) ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
L397: ( ( R4 '&' ( R7 '&' R5 ) ) => ( R4 '&' ( R5 '&' R7 ) ) ) in ( HP_TAUT ) by L392;
L398: ( ( ( R4 '&' R5 ) '&' R7 ) => ( R4 '&' ( R7 '&' R5 ) ) ) in ( HP_TAUT ) by L388;
thus L399: thesis by L398 , L397 , L208;
end;
L400: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( R4 '&' ( R5 '&' R7 ) ) => ( ( R7 '&' R5 ) '&' R4 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
L401: ( ( R4 '&' ( R7 '&' R5 ) ) => ( ( R7 '&' R5 ) '&' R4 ) ) in ( HP_TAUT ) by L324;
L402: ( ( R4 '&' ( R5 '&' R7 ) ) => ( R4 '&' ( R7 '&' R5 ) ) ) in ( HP_TAUT ) by L392;
thus L403: thesis by L402 , L401 , L208;
end;
L404: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( ( R7 '&' R5 ) '&' R4 ) => ( ( R5 '&' R7 ) '&' R4 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
set D45 = ( R7 '&' R5 );
set D46 = ( R5 '&' R7 );
L405: ( ( R7 '&' R5 ) => ( R5 '&' R7 ) ) in ( HP_TAUT ) by L324;
L406: ( ( D45 => D46 ) => ( ( D45 '&' R4 ) => ( D46 '&' R4 ) ) ) in ( HP_TAUT ) by L316;
thus L407: thesis by L406 , L405 , L78;
end;
L408: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( R4 '&' ( R5 '&' R7 ) ) => ( ( R5 '&' R7 ) '&' R4 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
L409: ( ( ( R7 '&' R5 ) '&' R4 ) => ( ( R5 '&' R7 ) '&' R4 ) ) in ( HP_TAUT ) by L404;
L410: ( ( R4 '&' ( R5 '&' R7 ) ) => ( ( R7 '&' R5 ) '&' R4 ) ) in ( HP_TAUT ) by L400;
thus L411: thesis by L410 , L409 , L208;
end;
L412: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( R4 '&' ( R5 '&' R7 ) ) => ( ( R4 '&' R7 ) '&' R5 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
L413: ( ( ( R5 '&' R7 ) '&' R4 ) => ( ( R4 '&' R7 ) '&' R5 ) ) in ( HP_TAUT ) by L384;
L414: ( ( R4 '&' ( R5 '&' R7 ) ) => ( ( R5 '&' R7 ) '&' R4 ) ) in ( HP_TAUT ) by L408;
thus L415: thesis by L414 , L413 , L208;
end;
L416: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( R4 '&' ( R5 '&' R7 ) ) => ( R4 '&' ( R7 '&' R5 ) ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
set D47 = ( R5 '&' R7 );
set D48 = ( R7 '&' R5 );
L417: ( ( R5 '&' R7 ) => ( R7 '&' R5 ) ) in ( HP_TAUT ) by L324;
L418: ( ( D47 => D48 ) => ( ( R4 '&' D47 ) => ( R4 '&' D48 ) ) ) in ( HP_TAUT ) by L338;
thus L419: thesis by L418 , L417 , L78;
end;
theorem
L420: (for R4 being (Element of ( HP-WFF )) holds (for R5 being (Element of ( HP-WFF )) holds (for R7 being (Element of ( HP-WFF )) holds ( ( R4 '&' ( R5 '&' R7 ) ) => ( ( R4 '&' R5 ) '&' R7 ) ) in ( HP_TAUT ))))
proof
let R4 being (Element of ( HP-WFF ));
let R5 being (Element of ( HP-WFF ));
let R7 being (Element of ( HP-WFF ));
L421: ( ( R4 '&' ( R7 '&' R5 ) ) => ( ( R4 '&' R5 ) '&' R7 ) ) in ( HP_TAUT ) by L412;
L422: ( ( R4 '&' ( R5 '&' R7 ) ) => ( R4 '&' ( R7 '&' R5 ) ) ) in ( HP_TAUT ) by L416;
thus L423: thesis by L422 , L421 , L208;
end;
