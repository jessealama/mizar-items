:: Graphs
::  by Krzysztof Hryniewiecki
::
:: Received December 5, 1990
:: Copyright (c) 1990-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, SUBSET_1, STRUCT_0, FUNCT_1, GLIB_000, XBOOLE_0,
      FUNCT_5, RELAT_1, PARTFUN1, RELAT_2, FINSET_1, TREES_2, FINSEQ_1,
      XXREAL_0, ARYTM_3, TARSKI, CARD_1, FUNCT_2, ZFMISC_1, MCART_1, GRAPH_1,
      MSUALG_6, RECDEF_2;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, RELAT_1, FUNCT_1, RELSET_1,
      FUNCT_2, FUNCT_5, FINSEQ_1, FINSET_1, PARTFUN1, CARD_1, NUMBERS,
      ORDINAL1, NAT_1, XTUPLE_0, MCART_1, XXREAL_0, STRUCT_0;
 constructors PARTFUN1, FUNCT_2, XXREAL_0, XREAL_0, NAT_1, FINSEQ_1, STRUCT_0,
      FUNCT_5, RELSET_1, XTUPLE_0;
 registrations XBOOLE_0, SUBSET_1, RELAT_1, FUNCT_1, PARTFUN1, FINSET_1,
      XREAL_0, FINSEQ_1, ORDINAL1, STRUCT_0, CARD_1, FUNCT_2, RELSET_1,
      XTUPLE_0;
 requirements NUMERALS, REAL, SUBSET, BOOLE, ARITHM;
 definitions FUNCT_1, TARSKI, XTUPLE_0;
 theorems FUNCT_2, FUNCT_1, PARTFUN1, FINSEQ_1, NAT_1, ZFMISC_1, MCART_1,
      TARSKI, RELAT_1, FINSEQ_3, RELSET_1, XBOOLE_0, XBOOLE_1, XREAL_1,
      XXREAL_0, CARD_1;
 schemes FUNCT_2, TARSKI, XBOOLE_0;

begin
definition
struct (2-sorted) MultiGraphStruct(# carrier , carrier' -> set , Source , Target -> (Function of the carrier' , the carrier) #);
end;
definition
let C1 being MultiGraphStruct;
mode Vertex of C1
 is (Element of C1);
mode Edge of C1
 is (Element of (the carrier' of C1));
end;
registration
cluster  strict non  empty non  void for MultiGraphStruct;
existence
proof
L3: MultiGraphStruct (# 1 , 1 , ( op1 ) , ( op1 ) #) is non  empty non  void;
thus L4: thesis by L3;
end;
end;
definition
mode Graph
 is non  empty MultiGraphStruct;
end;
definition
let C2 being MultiGraphStruct;
let C3 being (Edge of C2);
func dom C3 -> (Vertex of C2) equals 
:L7: ( (the Source of C2) . C3 ) if C2 is non  void non  empty otherwise the (Vertex of C2);
coherence
proof
thus L8: (C2 is non  void non  empty implies ( (the Source of C2) . C3 ) is (Vertex of C2))
proof
assume L9: C2 is non  void non  empty;
reconsider D1 = C2 as non  void non  empty MultiGraphStruct by L9;
reconsider D2 = C3 as (Edge of D1);
L10: ( (the Source of D1) . D2 ) is (Vertex of D1);
thus L11: thesis by L10;
end;

thus L12: thesis;
end;
consistency;
func cod C3 -> (Vertex of C2) equals 
:L13: ( (the Target of C2) . C3 ) if C2 is non  void non  empty otherwise the (Vertex of C2);
correctness
proof
thus L14: (C2 is non  void non  empty implies ( (the Target of C2) . C3 ) is (Vertex of C2))
proof
assume L15: C2 is non  void non  empty;
reconsider D3 = C2 as non  void non  empty MultiGraphStruct by L15;
reconsider D4 = C3 as (Edge of D3);
L16: ( (the Target of D3) . D4 ) is (Vertex of D3);
thus L17: thesis by L16;
end;

thus L18: thesis;
end;
end;
definition
let C4 being non  void non  empty MultiGraphStruct;
let C5 being (Edge of C4);
redefine func dom C5 -> (Vertex of C4) equals 
( (the Source of C4) . C5 );
compatibility by L7;
coherence;
redefine func cod C5 -> (Vertex of C4) equals 
( (the Target of C4) . C5 );
compatibility by L13;
coherence;
end;
definition
let R9 being Graph;
let R10 being Graph;
assume that
L21: (the Source of R9) tolerates (the Source of R10)
and
L22: (the Target of R9) tolerates (the Target of R10);
func R9 \/ R10 ->  strict Graph means 
:L23: ((the carrier of it) = ( (the carrier of R9) \/ (the carrier of R10) ) & (the carrier' of it) = ( (the carrier' of R9) \/ (the carrier' of R10) ) & (for R4 being set holds (R4 in (the carrier' of R9) implies (( (the Source of it) . R4 ) = ( (the Source of R9) . R4 ) & ( (the Target of it) . R4 ) = ( (the Target of R9) . R4 )))) & (for R4 being set holds (R4 in (the carrier' of R10) implies (( (the Source of it) . R4 ) = ( (the Source of R10) . R4 ) & ( (the Target of it) . R4 ) = ( (the Target of R10) . R4 )))));
existence
proof
set D5 = ( (the carrier of R9) \/ (the carrier of R10) );
set D6 = ( (the carrier' of R9) \/ (the carrier' of R10) );
L24: (ex B1 being (Function of D6 , D5) st ((for R4 being set holds (R4 in (the carrier' of R9) implies ( B1 . R4 ) = ( (the Source of R9) . R4 ))) & (for R4 being set holds (R4 in (the carrier' of R10) implies ( B1 . R4 ) = ( (the Source of R10) . R4 )))))
proof
defpred S1[ set , set ] means (($1 in (the carrier' of R9) implies $2 = ( (the Source of R9) . $1 )) & ($1 in (the carrier' of R10) implies $2 = ( (the Source of R10) . $1 )));
L25: (for B2 being set holds (B2 in D6 implies (ex B3 being set st (B3 in D5 & S1[ B2 , B3 ]))))
proof
let C6 being set;
assume L26: C6 in D6;
L27: (C6 in (the carrier' of R9) implies thesis)
proof
assume L28: C6 in (the carrier' of R9);
take D7 = (( (the Source of R9) . C6 ) qua set);
L29: D7 in (the carrier of R9) by L28 , FUNCT_2:5;
thus L30: D7 in D5 by L29 , XBOOLE_0:def 3;
thus L31: (C6 in (the carrier' of R9) implies D7 = ( (the Source of R9) . C6 ));
assume L32: C6 in (the carrier' of R10);
L33: C6 in ( (the carrier' of R9) /\ (the carrier' of R10) ) by L32 , L28 , XBOOLE_0:def 4;
L34: ( dom (the Source of R9) ) = (the carrier' of R9) by FUNCT_2:def 1;
L35: C6 in ( ( dom (the Source of R9) ) /\ ( dom (the Source of R10) ) ) by L34 , L33 , FUNCT_2:def 1;
thus L36: D7 = ( (the Source of R10) . C6 ) by L35 , L21 , PARTFUN1:def 4;
end;
L37: ((not C6 in (the carrier' of R9)) implies thesis)
proof
assume L38: (not C6 in (the carrier' of R9));
L39: C6 in (the carrier' of R10) by L38 , L26 , XBOOLE_0:def 3;
take D8 = (( (the Source of R10) . C6 ) qua set);
L40: D8 in (the carrier of R10) by L39 , FUNCT_2:5;
thus L41: D8 in D5 by L40 , XBOOLE_0:def 3;
thus L42: thesis by L38;
end;
thus L43: thesis by L37 , L27;
end;
consider C7 being (Function of D6 , D5) such that L44: (for B4 being set holds (B4 in D6 implies S1[ B4 , ( C7 . B4 ) ])) from FUNCT_2:sch 1(L25);
take C7;
thus L45: (for R4 being set holds (R4 in (the carrier' of R9) implies ( C7 . R4 ) = ( (the Source of R9) . R4 )))
proof
let R4 being set;
assume L46: R4 in (the carrier' of R9);
L47: R4 in D6 by L46 , XBOOLE_0:def 3;
thus L48: thesis by L47 , L44 , L46;
end;

let R4 being set;
assume L49: R4 in (the carrier' of R10);
L50: R4 in D6 by L49 , XBOOLE_0:def 3;
thus L51: thesis by L50 , L44 , L49;
end;
consider C8 being (Function of D6 , D5) such that L52: (for R4 being set holds (R4 in (the carrier' of R9) implies ( C8 . R4 ) = ( (the Source of R9) . R4 ))) and L53: (for R4 being set holds (R4 in (the carrier' of R10) implies ( C8 . R4 ) = ( (the Source of R10) . R4 ))) by L24;
L54: (ex B5 being (Function of D6 , D5) st ((for R4 being set holds (R4 in (the carrier' of R9) implies ( B5 . R4 ) = ( (the Target of R9) . R4 ))) & (for R4 being set holds (R4 in (the carrier' of R10) implies ( B5 . R4 ) = ( (the Target of R10) . R4 )))))
proof
defpred S2[ set , set ] means (($1 in (the carrier' of R9) implies $2 = ( (the Target of R9) . $1 )) & ($1 in (the carrier' of R10) implies $2 = ( (the Target of R10) . $1 )));
L55: (for B6 being set holds (B6 in D6 implies (ex B7 being set st (B7 in D5 & S2[ B6 , B7 ]))))
proof
let C9 being set;
assume L56: C9 in D6;
L57: (C9 in (the carrier' of R9) implies thesis)
proof
assume L58: C9 in (the carrier' of R9);
take D9 = (( (the Target of R9) . C9 ) qua set);
L59: D9 in (the carrier of R9) by L58 , FUNCT_2:5;
thus L60: D9 in D5 by L59 , XBOOLE_0:def 3;
thus L61: (C9 in (the carrier' of R9) implies D9 = ( (the Target of R9) . C9 ));
assume L62: C9 in (the carrier' of R10);
L63: C9 in ( (the carrier' of R9) /\ (the carrier' of R10) ) by L62 , L58 , XBOOLE_0:def 4;
L64: ( dom (the Target of R9) ) = (the carrier' of R9) by FUNCT_2:def 1;
L65: C9 in ( ( dom (the Target of R9) ) /\ ( dom (the Target of R10) ) ) by L64 , L63 , FUNCT_2:def 1;
thus L66: D9 = ( (the Target of R10) . C9 ) by L65 , L22 , PARTFUN1:def 4;
end;
L67: ((not C9 in (the carrier' of R9)) implies thesis)
proof
assume L68: (not C9 in (the carrier' of R9));
L69: C9 in (the carrier' of R10) by L68 , L56 , XBOOLE_0:def 3;
take D10 = (( (the Target of R10) . C9 ) qua set);
L70: D10 in (the carrier of R10) by L69 , FUNCT_2:5;
thus L71: D10 in D5 by L70 , XBOOLE_0:def 3;
thus L72: thesis by L68;
end;
thus L73: thesis by L67 , L57;
end;
consider C10 being (Function of D6 , D5) such that L74: (for B8 being set holds (B8 in D6 implies S2[ B8 , ( C10 . B8 ) ])) from FUNCT_2:sch 1(L55);
take C10;
thus L75: (for R4 being set holds (R4 in (the carrier' of R9) implies ( C10 . R4 ) = ( (the Target of R9) . R4 )))
proof
let R4 being set;
assume L76: R4 in (the carrier' of R9);
L77: R4 in D6 by L76 , XBOOLE_0:def 3;
thus L78: thesis by L77 , L74 , L76;
end;

let R4 being set;
assume L79: R4 in (the carrier' of R10);
L80: R4 in D6 by L79 , XBOOLE_0:def 3;
thus L81: thesis by L80 , L74 , L79;
end;
consider C11 being (Function of D6 , D5) such that L82: (for R4 being set holds (R4 in (the carrier' of R9) implies ( C11 . R4 ) = ( (the Target of R9) . R4 ))) and L83: (for R4 being set holds (R4 in (the carrier' of R10) implies ( C11 . R4 ) = ( (the Target of R10) . R4 ))) by L54;
reconsider D11 = MultiGraphStruct (# D5 , D6 , C8 , C11 #) as  strict Graph;
take D11;
thus L84: (the carrier of D11) = D5;
thus L85: (the carrier' of D11) = D6;
thus L86: (for R4 being set holds (R4 in (the carrier' of R9) implies (( (the Source of D11) . R4 ) = ( (the Source of R9) . R4 ) & ( (the Target of D11) . R4 ) = ( (the Target of R9) . R4 )))) by L52 , L82;
let R4 being set;
assume L87: R4 in (the carrier' of R10);
thus L88: ( (the Source of D11) . R4 ) = ( (the Source of R10) . R4 ) by L87 , L53;
thus L89: thesis by L83 , L87;
end;
uniqueness
proof
let C12 , C13 being  strict Graph;
assume that
L90: (the carrier of C12) = ( (the carrier of R9) \/ (the carrier of R10) )
and
L91: (the carrier' of C12) = ( (the carrier' of R9) \/ (the carrier' of R10) )
and
L92: (for R4 being set holds (R4 in (the carrier' of R9) implies (( (the Source of C12) . R4 ) = ( (the Source of R9) . R4 ) & ( (the Target of C12) . R4 ) = ( (the Target of R9) . R4 ))))
and
L93: (for R4 being set holds (R4 in (the carrier' of R10) implies (( (the Source of C12) . R4 ) = ( (the Source of R10) . R4 ) & ( (the Target of C12) . R4 ) = ( (the Target of R10) . R4 ))))
and
L94: (the carrier of C13) = ( (the carrier of R9) \/ (the carrier of R10) )
and
L95: (the carrier' of C13) = ( (the carrier' of R9) \/ (the carrier' of R10) )
and
L96: (for R4 being set holds (R4 in (the carrier' of R9) implies (( (the Source of C13) . R4 ) = ( (the Source of R9) . R4 ) & ( (the Target of C13) . R4 ) = ( (the Target of R9) . R4 ))))
and
L97: (for R4 being set holds (R4 in (the carrier' of R10) implies (( (the Source of C13) . R4 ) = ( (the Source of R10) . R4 ) & ( (the Target of C13) . R4 ) = ( (the Target of R10) . R4 ))));
L98: (( dom (the Source of C12) ) = (the carrier' of C12) & ( dom (the Source of C13) ) = (the carrier' of C12)) by L91 , L95 , FUNCT_2:def 1;
L99: (( dom (the Target of C12) ) = (the carrier' of C12) & ( dom (the Target of C13) ) = (the carrier' of C12)) by L91 , L95 , FUNCT_2:def 1;
L100: (for B9 being set holds (B9 in (the carrier' of C12) implies ( (the Source of C12) . B9 ) = ( (the Source of C13) . B9 )))
proof
let C14 being set;
assume that
L101: C14 in (the carrier' of C12);
L102:
now
assume L103: C14 in (the carrier' of R9);
thus L104: ( (the Source of C12) . C14 ) = ( (the Source of R9) . C14 ) by L103 , L92
.= ( (the Source of C13) . C14 ) by L96 , L103;
end;
L105:
now
assume L106: C14 in (the carrier' of R10);
thus L107: ( (the Source of C12) . C14 ) = ( (the Source of R10) . C14 ) by L106 , L93
.= ( (the Source of C13) . C14 ) by L97 , L106;
end;
thus L108: thesis by L105 , L91 , L101 , L102 , XBOOLE_0:def 3;
end;
L109: (the Source of C12) = (the Source of C13) by L100 , L98 , FUNCT_1:2;
L110: (for B10 being set holds (B10 in (the carrier' of C12) implies ( (the Target of C12) . B10 ) = ( (the Target of C13) . B10 )))
proof
let C15 being set;
assume that
L111: C15 in (the carrier' of C12);
L112:
now
assume L113: C15 in (the carrier' of R9);
thus L114: ( (the Target of C12) . C15 ) = ( (the Target of R9) . C15 ) by L113 , L92
.= ( (the Target of C13) . C15 ) by L96 , L113;
end;
L115:
now
assume L116: C15 in (the carrier' of R10);
thus L117: ( (the Target of C12) . C15 ) = ( (the Target of R10) . C15 ) by L116 , L93
.= ( (the Target of C13) . C15 ) by L97 , L116;
end;
thus L118: thesis by L115 , L91 , L111 , L112 , XBOOLE_0:def 3;
end;
thus L119: thesis by L110 , L90 , L91 , L94 , L95 , L99 , L109 , FUNCT_1:2;
end;
end;
definition
let C16 , C17 , C18 being Graph;
pred C16 is_sum_of C17 , C18
means
:L121: ((the Target of C17) tolerates (the Target of C18) & (the Source of C17) tolerates (the Source of C18) & ( the MultiGraphStruct of C16 ) = ( C17 \/ C18 ))
;end;
definition
let C19 being Graph;
attr C19 is  oriented
means
:L123: (for R1 being set holds (for R2 being set holds ((R1 in (the carrier' of C19) & R2 in (the carrier' of C19) & ( (the Source of C19) . R1 ) = ( (the Source of C19) . R2 ) & ( (the Target of C19) . R1 ) = ( (the Target of C19) . R2 )) implies R1 = R2)));
attr C19 is  non-multi
means
:L124: (for R1 being set holds (for R2 being set holds ((R1 in (the carrier' of C19) & R2 in (the carrier' of C19) & ((( (the Source of C19) . R1 ) = ( (the Source of C19) . R2 ) & ( (the Target of C19) . R1 ) = ( (the Target of C19) . R2 )) or (( (the Source of C19) . R1 ) = ( (the Target of C19) . R2 ) & ( (the Source of C19) . R2 ) = ( (the Target of C19) . R1 )))) implies R1 = R2)));
attr C19 is  simple
means
:L125: (not (ex R1 being set st (R1 in (the carrier' of C19) & ( (the Source of C19) . R1 ) = ( (the Target of C19) . R1 ))));
attr C19 is  connected
means
:L126: (not (ex B11 , B12 being Graph st ((the carrier of B11) misses (the carrier of B12) & C19 is_sum_of B11 , B12)));
end;
definition
let C20 being MultiGraphStruct;
attr C20 is  finite
means
:L128: ((the carrier of C20) is  finite & (the carrier' of C20) is  finite);
end;
registration
cluster  finite for MultiGraphStruct;
existence
proof
take D12 = MultiGraphStruct (# 1 , 1 , ( op1 ) , ( op1 ) #);
thus L130: (the carrier of D12) is  finite;
thus L131: thesis;
end;
cluster  finite  non-multi  oriented  simple  connected for Graph;
existence
proof
set D13 = { 1 };
reconsider D14 = ( {} ) as (Function of ( {} ) , D13) by RELSET_1:12;
reconsider D15 = MultiGraphStruct (# D13 , ( {} ) , D14 , D14 #) as Graph;
take D15;
thus L132: D15 is  finite by L128;
L133: (for R1 being set holds (for R2 being set holds ((R1 in (the carrier' of D15) & R2 in (the carrier' of D15) & ((( (the Source of D15) . R1 ) = ( (the Source of D15) . R2 ) & ( (the Target of D15) . R1 ) = ( (the Target of D15) . R2 )) or (( (the Source of D15) . R1 ) = ( (the Target of D15) . R2 ) & ( (the Source of D15) . R2 ) = ( (the Target of D15) . R1 )))) implies R1 = R2)));
thus L134: D15 is  non-multi by L133 , L124;
L135: (for R1 being set holds (for R2 being set holds ((R1 in (the carrier' of D15) & R2 in (the carrier' of D15) & ( (the Source of D15) . R1 ) = ( (the Source of D15) . R2 ) & ( (the Target of D15) . R1 ) = ( (the Target of D15) . R2 )) implies R1 = R2)));
thus L136: D15 is  oriented by L135 , L123;
L137: (not (ex R1 being set st (R1 in (the carrier' of D15) & ( (the Source of D15) . R1 ) = ( (the Target of D15) . R1 ))));
thus L138: D15 is  simple by L137 , L125;
L139: (not (ex B13 , B14 being Graph st ((the carrier of B13) misses (the carrier of B14) & D15 is_sum_of B13 , B14)))
proof
given C21 , C22 being Graph such that
L140: (the carrier of C21) misses (the carrier of C22)
and
L141: D15 is_sum_of C21 , C22;

L142: ( (the carrier of C21) /\ (the carrier of C22) ) = ( {} ) by L140 , XBOOLE_0:def 7;
L143: ((the Source of C21) tolerates (the Source of C22) & (the Target of C21) tolerates (the Target of C22)) by L141 , L121;
L144: D15 = ( C21 \/ C22 ) by L141 , L121;
L145: ( (the carrier of C21) \/ (the carrier of C22) ) = D13 by L144 , L143 , L23;
set D16 = the (Vertex of C21);
L146: (D16 in (the carrier of C21) & D16 in D13) by L145 , XBOOLE_0:def 3;
L147: 1 in (the carrier of C21) by L146 , TARSKI:def 1;
set D17 = the (Vertex of C22);
L148: (D17 in (the carrier of C22) & D17 in D13) by L145 , XBOOLE_0:def 3;
L149: 1 in (the carrier of C22) by L148 , TARSKI:def 1;
thus L150: contradiction by L149 , L142 , L147 , XBOOLE_0:def 4;
end;
thus L151: thesis by L139 , L126;
end;
end;
registration
let C23 being  finite MultiGraphStruct;
cluster (the carrier of C23) ->  finite;
coherence by L128;
cluster (the carrier' of C23) ->  finite;
coherence by L128;
end;
definition
let R8 being Graph;
let R12 being (Element of (the carrier of R8));
let R13 being (Element of (the carrier of R8));
let R4 being set;
pred R4 joins R12 , R13
means
((( (the Source of R8) . R4 ) = R12 & ( (the Target of R8) . R4 ) = R13) or (( (the Source of R8) . R4 ) = R13 & ( (the Target of R8) . R4 ) = R12))
;end;
definition
let R8 being Graph;
let C24 , C25 being (Element of (the carrier of R8));
pred C24 , C25 are_incident 
means
(ex B15 being set st (B15 in (the carrier' of R8) & B15 joins C24 , C25))
;end;
definition
let C26 being Graph;
mode Chain of C26
 -> FinSequence
means :L156: ((for R5 being (Element of ( NAT )) holds ((1 <= R5 & R5 <= ( len it )) implies ( it . R5 ) in (the carrier' of C26))) & (ex B16 being FinSequence st (( len B16 ) = ( ( len it ) + 1 ) & (for R5 being (Element of ( NAT )) holds ((1 <= R5 & R5 <= ( len B16 )) implies ( B16 . R5 ) in (the carrier of C26))) & (for R5 being (Element of ( NAT )) holds ((1 <= R5 & R5 <= ( len it )) implies (ex B17 , B18 being (Vertex of C26) st (B17 = ( B16 . R5 ) & B18 = ( B16 . ( R5 + 1 ) ) & ( it . R5 ) joins B17 , B18)))))));
existence
proof
take ( {} );
thus L157: (for R5 being (Element of ( NAT )) holds ((1 <= R5 & R5 <= ( len ( {} ) )) implies ( ( {} ) . R5 ) in (the carrier' of C26))) by XXREAL_0:2;
set D18 = the (Vertex of C26);
L158: D18 in (the carrier of C26);
take <* D18 *>;
thus L159: ( len <* D18 *> ) = ( ( len ( {} ) ) + 1 ) by FINSEQ_1:39;
thus L160: (for R5 being (Element of ( NAT )) holds ((1 <= R5 & R5 <= ( len <* D18 *> )) implies ( <* D18 *> . R5 ) in (the carrier of C26)))
proof
let R5 being (Element of ( NAT ));
assume that
L161: 1 <= R5
and
L162: R5 <= ( len <* D18 *> );
L163: R5 <= 1 by L162 , FINSEQ_1:39;
L164: R5 = 1 by L163 , L161 , XXREAL_0:1;
thus L165: thesis by L164 , L158 , FINSEQ_1:40;
end;

let R5 being (Element of ( NAT ));
thus L166: thesis by XXREAL_0:2;
end;
end;
L168: (for R8 being Graph holds ( {} ) is (Chain of R8))
proof
let R8 being Graph;
thus L169: (for R5 being (Element of ( NAT )) holds ((1 <= R5 & R5 <= ( len ( {} ) )) implies ( ( {} ) . R5 ) in (the carrier' of R8))) by XXREAL_0:2;
set D19 = the (Vertex of R8);
L170: D19 in (the carrier of R8);
take <* D19 *>;
thus L171: ( len <* D19 *> ) = ( ( len ( {} ) ) + 1 ) by FINSEQ_1:39;
thus L172: (for R5 being (Element of ( NAT )) holds ((1 <= R5 & R5 <= ( len <* D19 *> )) implies ( <* D19 *> . R5 ) in (the carrier of R8)))
proof
let R5 being (Element of ( NAT ));
assume that
L173: 1 <= R5
and
L174: R5 <= ( len <* D19 *> );
L175: R5 <= 1 by L174 , FINSEQ_1:39;
L176: R5 = 1 by L175 , L173 , XXREAL_0:1;
thus L177: thesis by L176 , L170 , FINSEQ_1:40;
end;

let R5 being (Element of ( NAT ));
thus L178: thesis by XXREAL_0:2;
end;
definition
let C27 being Graph;
redefine mode Chain of C27
 -> (FinSequence of (the carrier' of C27));
coherence
proof
let C28 being (Chain of C27);
L179: ( rng C28 ) c= (the carrier' of C27)
proof
let C29 being set;
assume L180: C29 in ( rng C28 );
consider C30 being set such that L181: C30 in ( dom C28 ) and L182: C29 = ( C28 . C30 ) by L180 , FUNCT_1:def 3;
reconsider D20 = C30 as (Element of ( NAT )) by L181;
L183: (1 <= D20 & D20 <= ( len C28 )) by L181 , FINSEQ_3:25;
thus L184: thesis by L183 , L182 , L156;
end;
thus L185: thesis by L179 , FINSEQ_1:def 4;
end;
end;
definition
let C31 being Graph;
let C32 being (Chain of C31);
attr C32 is  oriented
means
(for R5 being (Element of ( NAT )) holds ((1 <= R5 & R5 < ( len C32 )) implies ( (the Source of C31) . ( C32 . ( R5 + 1 ) ) ) = ( (the Target of C31) . ( C32 . R5 ) )));
end;
registration
let C33 being Graph;
cluster  empty for (Chain of C33);
existence
proof
L188: ( {} ) is (Chain of C33) by L168;
thus L189: thesis by L188;
end;
end;
registration
let C34 being Graph;
cluster  empty ->  oriented for (Chain of C34);
coherence
proof
let C35 being (Chain of C34);
assume L191: C35 is  empty;
let R5 being (Element of ( NAT ));
thus L192: thesis by L191 , CARD_1:27 , XXREAL_0:2;
end;
end;
definition
let C36 being Graph;
let C37 being (Chain of C36);
redefine attr C37 is  one-to-one
means
(for R5 being (Element of ( NAT )) holds (for R6 being (Element of ( NAT )) holds ((1 <= R5 & R5 < R6 & R6 <= ( len C37 )) implies ( C37 . R5 ) <> ( C37 . R6 ))));
compatibility
proof
thus L194: (C37 is  one-to-one implies (for R5 being (Element of ( NAT )) holds (for R6 being (Element of ( NAT )) holds ((1 <= R5 & R5 < R6 & R6 <= ( len C37 )) implies ( C37 . R5 ) <> ( C37 . R6 )))))
proof
assume L195: C37 is  one-to-one;
let R5 being (Element of ( NAT ));
let R6 being (Element of ( NAT ));
assume that
L196: 1 <= R5
and
L197: R5 < R6
and
L198: R6 <= ( len C37 );
L199: R5 <= ( len C37 ) by L197 , L198 , XXREAL_0:2;
L200: 1 <= R6 by L196 , L197 , XXREAL_0:2;
L201: R5 in ( dom C37 ) by L196 , L199 , FINSEQ_3:25;
L202: R6 in ( dom C37 ) by L198 , L200 , FINSEQ_3:25;
thus L203: thesis by L202 , L195 , L197 , L201 , FUNCT_1:def 4;
end;

assume L204: (for R5 being (Element of ( NAT )) holds (for R6 being (Element of ( NAT )) holds ((1 <= R5 & R5 < R6 & R6 <= ( len C37 )) implies ( C37 . R5 ) <> ( C37 . R6 ))));
let C38 , C39 being set;
assume that
L205: (C38 in ( dom C37 ) & C39 in ( dom C37 ))
and
L206: ( C37 . C38 ) = ( C37 . C39 );
reconsider D21 = C38 , D22 = C39 as (Element of ( NAT )) by L205;
L207: (D21 <= ( len C37 ) & 1 <= D22) by L205 , FINSEQ_3:25;
L208: (1 <= D21 & D22 <= ( len C37 )) by L205 , FINSEQ_3:25;
per cases ;
suppose L209: D21 <> D22;

L210:
now
per cases  by L209 , XXREAL_0:1;
suppose L211: D21 < D22;

thus L212: thesis by L211 , L204 , L206 , L208;
end;
suppose L213: D22 < D21;

thus L214: thesis by L213 , L204 , L206 , L207;
end;
end;
thus L216: thesis by L210;
end;
suppose L217: D21 = D22;

thus L218: thesis by L217;
end;
end;
end;
definition
let C40 being Graph;
mode Path of C40
 is  one-to-one (Chain of C40);
end;
definition
let C41 being Graph;
mode OrientedPath of C41
 is  one-to-one  oriented (Chain of C41);
end;
definition
let C42 being Graph;
let C43 being (Path of C42);
attr C43 is  cyclic
means
(ex B19 being FinSequence st (( len B19 ) = ( ( len C43 ) + 1 ) & (for R5 being (Element of ( NAT )) holds ((1 <= R5 & R5 <= ( len B19 )) implies ( B19 . R5 ) in (the carrier of C42))) & (for R5 being (Element of ( NAT )) holds ((1 <= R5 & R5 <= ( len C43 )) implies (ex B20 , B21 being (Vertex of C42) st (B20 = ( B19 . R5 ) & B21 = ( B19 . ( R5 + 1 ) ) & ( C43 . R5 ) joins B20 , B21)))) & ( B19 . 1 ) = ( B19 . ( len B19 ) )));
end;
registration
let C44 being Graph;
cluster  empty ->  cyclic for (Path of C44);
coherence
proof
let C45 being (Path of C44);
assume L224: C45 is  empty;
set D23 = the (Vertex of C44);
L225: D23 in (the carrier of C44);
take <* D23 *>;
thus L226: ( len <* D23 *> ) = ( ( len C45 ) + 1 ) by L224 , CARD_1:27 , FINSEQ_1:39;
thus L227: (for R5 being (Element of ( NAT )) holds ((1 <= R5 & R5 <= ( len <* D23 *> )) implies ( <* D23 *> . R5 ) in (the carrier of C44)))
proof
let R5 being (Element of ( NAT ));
assume that
L228: 1 <= R5
and
L229: R5 <= ( len <* D23 *> );
L230: R5 <= 1 by L229 , FINSEQ_1:39;
L231: R5 = 1 by L230 , L228 , XXREAL_0:1;
thus L232: thesis by L231 , L225 , FINSEQ_1:40;
end;

thus L233: (for R5 being (Element of ( NAT )) holds ((1 <= R5 & R5 <= ( len C45 )) implies (ex B22 , B23 being (Vertex of C44) st (B22 = ( <* D23 *> . R5 ) & B23 = ( <* D23 *> . ( R5 + 1 ) ) & ( C45 . R5 ) joins B22 , B23)))) by L224 , CARD_1:27 , XXREAL_0:2;
thus L234: thesis by FINSEQ_1:39;
end;
end;
definition
let C46 being Graph;
mode Cycle of C46
 is  cyclic (Path of C46);
end;
definition
let C47 being Graph;
mode OrientedCycle of C47
 is  cyclic (OrientedPath of C47);
end;
definition
let C48 being Graph;
mode Subgraph of C48
 -> Graph
means :L238: ((the carrier of it) c= (the carrier of C48) & (the carrier' of it) c= (the carrier' of C48) & (for R4 being set holds (R4 in (the carrier' of it) implies (( (the Source of it) . R4 ) = ( (the Source of C48) . R4 ) & ( (the Target of it) . R4 ) = ( (the Target of C48) . R4 ) & ( (the Source of C48) . R4 ) in (the carrier of it) & ( (the Target of C48) . R4 ) in (the carrier of it)))));
existence
proof
take C48;
thus L239: (the carrier of C48) c= (the carrier of C48);
thus L240: (the carrier' of C48) c= (the carrier' of C48);
let R4 being set;
assume L241: R4 in (the carrier' of C48);
thus L242: thesis by L241 , FUNCT_2:5;
end;
end;
registration
let C49 being Graph;
cluster  strict for (Subgraph of C49);
existence
proof
reconsider D24 = MultiGraphStruct (# (the carrier of C49) , (the carrier' of C49) , (the Source of C49) , (the Target of C49) #) as Graph;
L244: (for R4 being set holds (R4 in (the carrier' of D24) implies (( (the Source of D24) . R4 ) = ( (the Source of C49) . R4 ) & ( (the Target of D24) . R4 ) = ( (the Target of C49) . R4 ) & ( (the Source of C49) . R4 ) in (the carrier of D24) & ( (the Target of C49) . R4 ) in (the carrier of D24)))) by FUNCT_2:5;
L245: D24 is (Subgraph of C49) by L244 , L238;
thus L246: thesis by L245;
end;
end;
definition
let C50 being  finite Graph;
func VerticesCount C50 -> (Element of ( NAT )) means 
(ex B24 being  finite set st (B24 = (the carrier of C50) & it = ( card B24 )));
existence
proof
set D25 = (the carrier of C50);
take ( card D25 );
take D25;
thus L248: thesis;
end;
uniqueness;
func EdgesCount C50 -> (Element of ( NAT )) means 
(ex B25 being  finite set st (B25 = (the carrier' of C50) & it = ( card B25 )));
existence
proof
set D26 = (the carrier' of C50);
take ( card D26 );
take D26;
thus L249: thesis;
end;
uniqueness;
end;
definition
let C51 being  finite Graph;
let C52 being (Vertex of C51);
func EdgesIn C52 -> (Element of ( NAT )) means 
(ex B26 being  finite set st ((for B27 being set holds (B27 in B26 iff (B27 in (the carrier' of C51) & ( (the Target of C51) . B27 ) = C52))) & it = ( card B26 )));
existence
proof
defpred S3[ set ] means ( (the Target of C51) . $1 ) = C52;
consider C53 being set such that L251: (for B28 being set holds (B28 in C53 iff (B28 in (the carrier' of C51) & S3[ B28 ]))) from XBOOLE_0:sch 1;
L252: (for B29 being set holds (B29 in C53 implies B29 in (the carrier' of C51))) by L251;
L253: C53 c= (the carrier' of C51) by L252 , TARSKI:def 3;
reconsider D27 = C53 as  finite set by L253;
take ( card D27 );
take D27;
thus L254: thesis by L251;
end;
uniqueness
proof
let C54 , C55 being (Element of ( NAT ));
assume that
L255: (ex B30 being  finite set st ((for B31 being set holds (B31 in B30 iff (B31 in (the carrier' of C51) & ( (the Target of C51) . B31 ) = C52))) & C54 = ( card B30 )))
and
L256: (ex B32 being  finite set st ((for B33 being set holds (B33 in B32 iff (B33 in (the carrier' of C51) & ( (the Target of C51) . B33 ) = C52))) & C55 = ( card B32 )));
consider C56 being  finite set such that L257: (for B34 being set holds (B34 in C56 iff (B34 in (the carrier' of C51) & ( (the Target of C51) . B34 ) = C52))) and L258: C54 = ( card C56 ) by L255;
consider C57 being  finite set such that L259: (for B35 being set holds (B35 in C57 iff (B35 in (the carrier' of C51) & ( (the Target of C51) . B35 ) = C52))) and L260: C55 = ( card C57 ) by L256;
L261: (for B36 being set holds (B36 in C56 iff B36 in C57))
proof
let R3 being set;
L262: (R3 in C56 iff (R3 in (the carrier' of C51) & ( (the Target of C51) . R3 ) = C52)) by L257;
thus L263: thesis by L262 , L259;
end;
thus L264: thesis by L261 , L258 , L260 , TARSKI:1;
end;
func EdgesOut C52 -> (Element of ( NAT )) means 
(ex B37 being  finite set st ((for B38 being set holds (B38 in B37 iff (B38 in (the carrier' of C51) & ( (the Source of C51) . B38 ) = C52))) & it = ( card B37 )));
existence
proof
defpred S4[ set ] means ( (the Source of C51) . $1 ) = C52;
consider C58 being set such that L265: (for B39 being set holds (B39 in C58 iff (B39 in (the carrier' of C51) & S4[ B39 ]))) from XBOOLE_0:sch 1;
L266: (for B40 being set holds (B40 in C58 implies B40 in (the carrier' of C51))) by L265;
L267: C58 c= (the carrier' of C51) by L266 , TARSKI:def 3;
reconsider D28 = C58 as  finite set by L267;
take ( card D28 );
take D28;
thus L268: thesis by L265;
end;
uniqueness
proof
let C59 , C60 being (Element of ( NAT ));
assume that
L269: (ex B41 being  finite set st ((for B42 being set holds (B42 in B41 iff (B42 in (the carrier' of C51) & ( (the Source of C51) . B42 ) = C52))) & C59 = ( card B41 )))
and
L270: (ex B43 being  finite set st ((for B44 being set holds (B44 in B43 iff (B44 in (the carrier' of C51) & ( (the Source of C51) . B44 ) = C52))) & C60 = ( card B43 )));
consider C61 being  finite set such that L271: (for B45 being set holds (B45 in C61 iff (B45 in (the carrier' of C51) & ( (the Source of C51) . B45 ) = C52))) and L272: C59 = ( card C61 ) by L269;
consider C62 being  finite set such that L273: (for B46 being set holds (B46 in C62 iff (B46 in (the carrier' of C51) & ( (the Source of C51) . B46 ) = C52))) and L274: C60 = ( card C62 ) by L270;
L275: (for B47 being set holds (B47 in C61 iff B47 in C62))
proof
let R3 being set;
L276: (R3 in C61 iff (R3 in (the carrier' of C51) & ( (the Source of C51) . R3 ) = C52)) by L271;
thus L277: thesis by L276 , L273;
end;
thus L278: thesis by L275 , L272 , L274 , TARSKI:1;
end;
end;
definition
let C63 being  finite Graph;
let C64 being (Vertex of C63);
func Degree C64 -> (Element of ( NAT )) equals 
( ( EdgesIn C64 ) + ( EdgesOut C64 ) );
correctness;
end;
L281: (for R5 being (Element of ( NAT )) holds (for R8 being Graph holds (for B48 being (Chain of R8) holds ( B48 | ( Seg R5 ) ) is (Chain of R8))))
proof
let R5 being (Element of ( NAT ));
let R8 being Graph;
let C65 being (Chain of R8);
reconsider D29 = ( C65 | ( Seg R5 ) ) as FinSequence by FINSEQ_1:15;
L282: (for R5 being (Element of ( NAT )) holds ((1 <= R5 & R5 <= ( len D29 )) implies ( D29 . R5 ) in (the carrier' of R8)))
proof
let C66 being (Element of ( NAT ));
assume that
L283: 1 <= C66
and
L284: C66 <= ( len D29 );
L285: C66 in ( dom D29 ) by L283 , L284 , FINSEQ_3:25;
L286: ( dom D29 ) c= ( dom C65 ) by RELAT_1:60;
L287: C66 <= ( len C65 ) by L286 , L285 , FINSEQ_3:25;
L288: ( C65 . C66 ) in (the carrier' of R8) by L287 , L283 , L156;
thus L289: thesis by L288 , L285 , FUNCT_1:47;
end;
L290: (ex B49 being FinSequence st (( len B49 ) = ( ( len D29 ) + 1 ) & (for R5 being (Element of ( NAT )) holds ((1 <= R5 & R5 <= ( len B49 )) implies ( B49 . R5 ) in (the carrier of R8))) & (for R5 being (Element of ( NAT )) holds ((1 <= R5 & R5 <= ( len D29 )) implies (ex B50 , B51 being (Vertex of R8) st (B50 = ( B49 . R5 ) & B51 = ( B49 . ( R5 + 1 ) ) & ( D29 . R5 ) joins B50 , B51))))))
proof
consider C67 being FinSequence such that L291: ( len C67 ) = ( ( len C65 ) + 1 ) and L292: (for R5 being (Element of ( NAT )) holds ((1 <= R5 & R5 <= ( len C67 )) implies ( C67 . R5 ) in (the carrier of R8))) and L293: (for R5 being (Element of ( NAT )) holds ((1 <= R5 & R5 <= ( len C65 )) implies (ex B52 , B53 being (Vertex of R8) st (B52 = ( C67 . R5 ) & B53 = ( C67 . ( R5 + 1 ) ) & ( C65 . R5 ) joins B52 , B53)))) by L156;
reconsider D30 = ( C67 | ( Seg ( R5 + 1 ) ) ) as FinSequence by FINSEQ_1:15;
take D30;
thus L294: ( len D30 ) = ( ( len D29 ) + 1 )
proof
L295: ( dom D30 ) = ( ( dom C67 ) /\ ( Seg ( R5 + 1 ) ) ) by RELAT_1:61
.= ( ( Seg ( ( len C65 ) + 1 ) ) /\ ( Seg ( R5 + 1 ) ) ) by L291 , FINSEQ_1:def 3;
L296: ( dom D29 ) = ( ( dom C65 ) /\ ( Seg R5 ) ) by RELAT_1:61
.= ( ( Seg ( len C65 ) ) /\ ( Seg R5 ) ) by FINSEQ_1:def 3;
L297:
now
assume L298: ( ( len C65 ) + 1 ) <= ( R5 + 1 );
L299: ( Seg ( ( len C65 ) + 1 ) ) c= ( Seg ( R5 + 1 ) ) by L298 , FINSEQ_1:5;
L300: ( dom D30 ) = ( Seg ( ( len C65 ) + 1 ) ) by L299 , L295 , XBOOLE_1:28;
L301: ( len D30 ) = ( ( len C65 ) + 1 ) by L300 , FINSEQ_1:def 3;
L302: ( len C65 ) <= R5 by L298 , XREAL_1:6;
L303: ( Seg ( len C65 ) ) c= ( Seg R5 ) by L302 , FINSEQ_1:5;
L304: ( dom D29 ) = ( Seg ( len C65 ) ) by L303 , L296 , XBOOLE_1:28;
thus L305: thesis by L304 , L301 , FINSEQ_1:def 3;
end;
L306:
now
assume L307: ( R5 + 1 ) <= ( ( len C65 ) + 1 );
L308: ( Seg ( R5 + 1 ) ) c= ( Seg ( ( len C65 ) + 1 ) ) by L307 , FINSEQ_1:5;
L309: ( dom D30 ) = ( Seg ( R5 + 1 ) ) by L308 , L295 , XBOOLE_1:28;
L310: ( len D30 ) = ( R5 + 1 ) by L309 , FINSEQ_1:def 3;
L311: R5 <= ( len C65 ) by L307 , XREAL_1:6;
L312: ( Seg R5 ) c= ( Seg ( len C65 ) ) by L311 , FINSEQ_1:5;
L313: ( dom D29 ) = ( Seg R5 ) by L312 , L296 , XBOOLE_1:28;
thus L314: thesis by L313 , L310 , FINSEQ_1:def 3;
end;
thus L315: thesis by L306 , L297;
end;

thus L316: (for R5 being (Element of ( NAT )) holds ((1 <= R5 & R5 <= ( len D30 )) implies ( D30 . R5 ) in (the carrier of R8)))
proof
let C68 being (Element of ( NAT ));
assume that
L317: 1 <= C68
and
L318: C68 <= ( len D30 );
L319: C68 in ( dom D30 ) by L317 , L318 , FINSEQ_3:25;
L320: ( dom D30 ) c= ( dom C67 ) by RELAT_1:60;
L321: C68 <= ( len C67 ) by L320 , L319 , FINSEQ_3:25;
L322: ( C67 . C68 ) in (the carrier of R8) by L321 , L292 , L317;
thus L323: thesis by L322 , L319 , FUNCT_1:47;
end;

let R7 being (Element of ( NAT ));
assume that
L324: 1 <= R7
and
L325: R7 <= ( len D29 );
L326: R7 in ( dom D29 ) by L324 , L325 , FINSEQ_3:25;
L327: ( dom D29 ) c= ( dom C65 ) by RELAT_1:60;
L328: R7 <= ( len C65 ) by L327 , L326 , FINSEQ_3:25;
consider C69 , C70 being (Vertex of R8) such that L329: C69 = ( C67 . R7 ) and L330: C70 = ( C67 . ( R7 + 1 ) ) and L331: ( C65 . R7 ) joins C69 , C70 by L328 , L293 , L324;
take C69;
take C70;
L332: ( len D29 ) <= ( ( len D29 ) + 1 ) by NAT_1:11;
L333: R7 <= ( len D30 ) by L332 , L294 , L325 , XXREAL_0:2;
L334: R7 in ( dom D30 ) by L333 , L324 , FINSEQ_3:25;
thus L335: C69 = ( D30 . R7 ) by L334 , L329 , FUNCT_1:47;
L336: ( R7 + 1 ) <= ( len D30 ) by L294 , L325 , XREAL_1:7;
L337: ( 1 + 1 ) <= ( R7 + 1 ) by L324 , XREAL_1:7;
L338: 1 <= ( R7 + 1 ) by L337 , XXREAL_0:2;
L339: ( R7 + 1 ) in ( dom D30 ) by L338 , L336 , FINSEQ_3:25;
thus L340: C70 = ( D30 . ( R7 + 1 ) ) by L339 , L330 , FUNCT_1:47;
thus L341: thesis by L326 , L331 , FUNCT_1:47;
end;
thus L342: thesis by L290 , L282 , L156;
end;
L343: (for R8 being Graph holds (for B54 , B55 being  strict (Subgraph of R8) holds (((the carrier of B54) = (the carrier of B55) & (the carrier' of B54) = (the carrier' of B55)) implies B54 = B55)))
proof
let R8 being Graph;
let C71 , C72 being  strict (Subgraph of R8);
assume that
L344: (the carrier of C71) = (the carrier of C72)
and
L345: (the carrier' of C71) = (the carrier' of C72);
L346: (( dom (the Source of C71) ) = (the carrier' of C71) & ( dom (the Source of C72) ) = (the carrier' of C72)) by FUNCT_2:def 1;
L347: (( dom (the Target of C71) ) = (the carrier' of C71) & ( dom (the Target of C72) ) = (the carrier' of C72)) by FUNCT_2:def 1;
L348: (for B56 being set holds (B56 in (the carrier' of C71) implies ( (the Source of C71) . B56 ) = ( (the Source of C72) . B56 )))
proof
let C73 being set;
assume L349: C73 in (the carrier' of C71);
thus L350: ( (the Source of C71) . C73 ) = ( (the Source of R8) . C73 ) by L349 , L238
.= ( (the Source of C72) . C73 ) by L345 , L349 , L238;
end;
L351: (the Source of C71) = (the Source of C72) by L348 , L345 , L346 , FUNCT_1:2;
L352: (for B57 being set holds (B57 in (the carrier' of C71) implies ( (the Target of C71) . B57 ) = ( (the Target of C72) . B57 )))
proof
let C74 being set;
assume L353: C74 in (the carrier' of C71);
thus L354: ( (the Target of C71) . C74 ) = ( (the Target of R8) . C74 ) by L353 , L238
.= ( (the Target of C72) . C74 ) by L345 , L353 , L238;
end;
thus L355: thesis by L352 , L344 , L345 , L347 , L351 , FUNCT_1:2;
end;
definition
let C75 , C76 being Graph;
pred C75 c= C76
means
:L356: C75 is (Subgraph of C76)
;reflexivity
proof
let R8 being Graph;
L357: (for R4 being set holds (R4 in (the carrier' of R8) implies (( (the Source of R8) . R4 ) = ( (the Source of R8) . R4 ) & ( (the Target of R8) . R4 ) = ( (the Target of R8) . R4 ) & ( (the Source of R8) . R4 ) in (the carrier of R8) & ( (the Target of R8) . R4 ) in (the carrier of R8)))) by FUNCT_2:5;
thus L358: thesis by L357 , L238;
end;
end;
L360: (for B58 being Graph holds (for B59 being (Subgraph of B58) holds ((the Source of B59) in ( PFuncs ((the carrier' of B58) , (the carrier of B58)) ) & (the Target of B59) in ( PFuncs ((the carrier' of B58) , (the carrier of B58)) ))))
proof
let C77 being Graph;
let C78 being (Subgraph of C77);
set D31 = (the carrier' of C78);
set D32 = (the carrier of C78);
set D33 = (the carrier' of C77);
set D34 = (the carrier of C77);
L361: (D31 c= D33 & D32 c= D34) by L238;
L362: (( Funcs (D31 , D32) ) c= ( PFuncs (D31 , D32) ) & ( PFuncs (D31 , D32) ) c= ( PFuncs (D33 , D34) )) by L361 , FUNCT_2:72 , PARTFUN1:50;
L363: ( Funcs (D31 , D32) ) c= ( PFuncs (D33 , D34) ) by L362 , XBOOLE_1:1;
L364: (the Source of C78) in ( Funcs (D31 , D32) ) by FUNCT_2:8;
thus L365: (the Source of C78) in ( PFuncs (D33 , D34) ) by L364 , L363;
L366: (the Target of C78) in ( Funcs (D31 , D32) ) by FUNCT_2:8;
thus L367: thesis by L366 , L363;
end;
definition
let C79 being Graph;
func bool C79 -> set means 
:L368: (for B60 being set holds (B60 in it iff B60 is  strict  strict  strict  strict (Subgraph of C79)));
existence
proof
reconsider D35 = (the carrier of C79) as non  empty set;
set D36 = (the carrier' of C79);
set D37 = [: ( bool D35 ) , ( bool D36 ) , ( PFuncs (D36 , D35) ) , ( PFuncs (D36 , D35) ) :];
defpred S5[ set ] means (ex B61 being (Element of D37) st (ex B62 being Graph st (ex B63 being non  empty set st (ex B64 being set st (ex B65 being (Function of B64 , B63) st (ex B66 being (Function of B64 , B63) st (B61 = $1 & B63 = ( B61 `1_4 ) & B64 = ( B61 `2_4 ) & B65 = ( B61 `3_4 ) & B66 = ( B61 `4_4 ) & B62 = MultiGraphStruct (# B63 , B64 , B65 , B66 #) & B62 is (Subgraph of C79))))))));
consider C80 being set such that L369: (for B67 being set holds (B67 in C80 iff (B67 in D37 & S5[ B67 ]))) from XBOOLE_0:sch 1;
defpred S6[ set , set ] means (ex B68 being (Element of D37) st (ex B69 being  strict Graph st (ex B70 being non  empty set st (ex B71 being set st (ex B72 being (Function of B71 , B70) st (ex B73 being (Function of B71 , B70) st (B68 = $1 & B70 = ( B68 `1_4 ) & B71 = ( B68 `2_4 ) & B72 = ( B68 `3_4 ) & B73 = ( B68 `4_4 ) & B69 = MultiGraphStruct (# B70 , B71 , B72 , B73 #) & B69 is (Subgraph of C79) & $2 = B69)))))));
L370: (for B74 , B75 , B76 being set holds ((S6[ B74 , B75 ] & S6[ B74 , B76 ]) implies B75 = B76));
consider C81 being set such that L371: (for B77 being set holds (B77 in C81 iff (ex B78 being set st (B78 in C80 & S6[ B78 , B77 ])))) from TARSKI:sch 1(L370);
take C81;
let C82 being set;
thus L372: (C82 in C81 implies C82 is  strict  strict  strict  strict (Subgraph of C79))
proof
assume L373: C82 in C81;
L374: (ex B79 being set st (B79 in C80 & S6[ B79 , C82 ])) by L373 , L371;
thus L375: thesis by L374;
end;

assume L376: C82 is  strict  strict  strict  strict (Subgraph of C79);
reconsider D38 = C82 as  strict (Subgraph of C79) by L376;
L377: (ex B80 being set st (B80 in C80 & S6[ B80 , C82 ]))
proof
take D39 = [ (the carrier of D38) , (the carrier' of D38) , (the Source of D38) , (the Target of D38) ];
L378: ((the carrier of D38) c= D35 & (the carrier' of D38) c= D36) by L238;
L379: ((the Source of D38) in ( PFuncs (D36 , D35) ) & (the Target of D38) in ( PFuncs (D36 , D35) )) by L360;
reconsider D40 = D39 as (Element of D37) by L379 , L378 , MCART_1:80;
reconsider D41 = (the carrier of D38) as non  empty set;
set D42 = (the carrier' of D38);
reconsider D43 = (the Source of D38) as (Function of D42 , D41);
reconsider D44 = (the Target of D38) as (Function of D42 , D41);
L380: (D41 = ( D40 `1_4 ) & D42 = ( D40 `2_4 )) by MCART_1:def 8 , MCART_1:def 9;
L381: (D43 = ( D40 `3_4 ) & D44 = ( D40 `4_4 )) by MCART_1:def 10 , MCART_1:def 11;
thus L382: D39 in C80 by L381 , L369 , L380;
thus L383: thesis by L380 , L381;
end;
thus L384: thesis by L377 , L371;
end;
uniqueness
proof
defpred S7[ set ] means $1 is  strict  strict  strict  strict (Subgraph of C79);
let C83 , C84 being set;
assume that
L385: (for B81 being set holds (B81 in C83 iff S7[ B81 ]))
and
L386: (for B82 being set holds (B82 in C84 iff S7[ B82 ]));
thus L387: C83 = C84 from XBOOLE_0:sch 2(L385 , L386);
end;
end;
scheme GraphSeparation { F1() -> Graph , P1[set] } : (ex B83 being set st (for B84 being set holds (B84 in B83 iff (B84 is  strict  strict  strict  strict (Subgraph of F1()) & P1[ B84 ]))))
proof
consider C85 being set such that L389: (for B85 being set holds (B85 in C85 iff (B85 in ( bool F1() ) & P1[ B85 ]))) from XBOOLE_0:sch 1;
take C85;
let C86 being set;
thus L390: (C86 in C85 implies (C86 is  strict  strict  strict  strict (Subgraph of F1()) & P1[ C86 ]))
proof
assume L391: C86 in C85;
L392: C86 in ( bool F1() ) by L391 , L389;
thus L393: C86 is  strict  strict  strict  strict (Subgraph of F1()) by L392 , L368;
thus L394: thesis by L389 , L391;
end;

assume that
L395: C86 is  strict  strict  strict  strict (Subgraph of F1())
and
L396: P1[ C86 ];
L397: C86 in ( bool F1() ) by L395 , L368;
thus L398: thesis by L397 , L389 , L396;
end;
theorem
L399: (for B86 being Graph holds (( dom (the Source of B86) ) = (the carrier' of B86) & ( dom (the Target of B86) ) = (the carrier' of B86))) by FUNCT_2:def 1;
theorem
L400: (for R8 being Graph holds (for B87 being (Vertex of R8) holds B87 in (the carrier of R8)));
theorem
L401: (for R8 being Graph holds (for B88 being set holds (B88 in (the carrier' of R8) implies (( (the Source of R8) . B88 ) in (the carrier of R8) & ( (the Target of R8) . B88 ) in (the carrier of R8))))) by FUNCT_2:5;
theorem
L402: (for R5 being (Element of ( NAT )) holds (for R8 being Graph holds (for B89 being (Chain of R8) holds ( B89 | ( Seg R5 ) ) is (Chain of R8)))) by L281;
theorem
L403: (for R8 being Graph holds (for R9 being Graph holds (R9 c= R8 implies ((the Source of R9) c= (the Source of R8) & (the Target of R9) c= (the Target of R8)))))
proof
let R8 being Graph;
let R9 being Graph;
assume L404: R9 c= R8;
L405: R9 is (Subgraph of R8) by L404 , L356;
L406: (for R4 being set holds (R4 in (the Source of R9) implies R4 in (the Source of R8)))
proof
let R4 being set;
assume L407: R4 in (the Source of R9);
consider C87 , C88 being set such that L408: [ C87 , C88 ] = R4 by L407 , RELAT_1:def 1;
L409: C87 in ( dom (the Source of R9) ) by L407 , L408 , FUNCT_1:1;
L410: C88 = ( (the Source of R9) . C87 ) by L407 , L408 , FUNCT_1:1;
L411: C87 in (the carrier' of R9) by L409;
L412: (the carrier' of R9) c= (the carrier' of R8) by L405 , L238;
L413: C87 in (the carrier' of R8) by L412 , L411;
L414: C87 in ( dom (the Source of R8) ) by L413 , FUNCT_2:def 1;
L415: C88 = ( (the Source of R8) . C87 ) by L405 , L409 , L410 , L238;
thus L416: thesis by L415 , L408 , L414 , FUNCT_1:def 2;
end;
thus L417: (the Source of R9) c= (the Source of R8) by L406 , TARSKI:def 3;
L418: (for R4 being set holds (R4 in (the Target of R9) implies R4 in (the Target of R8)))
proof
let R4 being set;
assume L419: R4 in (the Target of R9);
consider C89 , C90 being set such that L420: [ C89 , C90 ] = R4 by L419 , RELAT_1:def 1;
L421: C89 in ( dom (the Target of R9) ) by L419 , L420 , FUNCT_1:1;
L422: C90 = ( (the Target of R9) . C89 ) by L419 , L420 , FUNCT_1:1;
L423: C89 in (the carrier' of R9) by L421;
L424: (the carrier' of R9) c= (the carrier' of R8) by L405 , L238;
L425: C89 in (the carrier' of R8) by L424 , L423;
L426: C89 in ( dom (the Target of R8) ) by L425 , FUNCT_2:def 1;
L427: C90 = ( (the Target of R8) . C89 ) by L405 , L421 , L422 , L238;
thus L428: thesis by L427 , L420 , L426 , FUNCT_1:def 2;
end;
thus L429: thesis by L418 , TARSKI:def 3;
end;
theorem
L430: (for R9 being Graph holds (for R10 being Graph holds (((the Source of R9) tolerates (the Source of R10) & (the Target of R9) tolerates (the Target of R10)) implies ((the Source of ( R9 \/ R10 )) = ( (the Source of R9) \/ (the Source of R10) ) & (the Target of ( R9 \/ R10 )) = ( (the Target of R9) \/ (the Target of R10) )))))
proof
let R9 being Graph;
let R10 being Graph;
assume L431: ((the Source of R9) tolerates (the Source of R10) & (the Target of R9) tolerates (the Target of R10));
set D45 = (the Source of ( R9 \/ R10 ));
set D46 = (the Source of R9);
set D47 = (the Source of R10);
set D48 = (the Target of ( R9 \/ R10 ));
set D49 = (the Target of R9);
set D50 = (the Target of R10);
L432: (for R4 being set holds (R4 in D45 iff R4 in ( D46 \/ D47 )))
proof
let R4 being set;
thus L433: (R4 in D45 implies R4 in ( D46 \/ D47 ))
proof
assume L434: R4 in D45;
consider C91 , C92 being set such that L435: [ C91 , C92 ] = R4 by L434 , RELAT_1:def 1;
L436: C91 in ( dom D45 ) by L434 , L435 , FUNCT_1:1;
L437: C91 in (the carrier' of ( R9 \/ R10 )) by L436;
L438: C91 in ( (the carrier' of R9) \/ (the carrier' of R10) ) by L437 , L431 , L23;
L439:
now
assume L440: C91 in (the carrier' of R9);
L441: C91 in ( dom D46 ) by L440 , FUNCT_2:def 1;
L442: ( D46 . C91 ) = ( D45 . C91 ) by L431 , L440 , L23
.= C92 by L434 , L435 , FUNCT_1:1;
L443: ([ C91 , C92 ] in D46 or [ C91 , C92 ] in D47) by L442 , L441 , FUNCT_1:def 2;
thus L444: [ C91 , C92 ] in ( D46 \/ D47 ) by L443 , XBOOLE_0:def 3;
end;
L445:
now
assume L446: C91 in (the carrier' of R10);
L447: C91 in ( dom D47 ) by L446 , FUNCT_2:def 1;
L448: ( D47 . C91 ) = ( D45 . C91 ) by L431 , L446 , L23
.= C92 by L434 , L435 , FUNCT_1:1;
L449: ([ C91 , C92 ] in D46 or [ C91 , C92 ] in D47) by L448 , L447 , FUNCT_1:def 2;
thus L450: [ C91 , C92 ] in ( D46 \/ D47 ) by L449 , XBOOLE_0:def 3;
end;
thus L451: thesis by L445 , L435 , L438 , L439 , XBOOLE_0:def 3;
end;

assume L452: R4 in ( D46 \/ D47 );
L453:
now
assume L454: R4 in D46;
consider C93 , C94 being set such that L455: [ C93 , C94 ] = R4 by L454 , RELAT_1:def 1;
L456: C93 in ( dom D46 ) by L454 , L455 , FUNCT_1:1;
L457: C94 = ( D46 . C93 ) by L454 , L455 , FUNCT_1:1;
L458: C93 in ( (the carrier' of R9) \/ (the carrier' of R10) ) by L456 , XBOOLE_0:def 3;
L459: C93 in (the carrier' of ( R9 \/ R10 )) by L458 , L431 , L23;
L460: C93 in ( dom D45 ) by L459 , FUNCT_2:def 1;
L461: ( D45 . C93 ) = C94 by L431 , L456 , L457 , L23;
thus L462: thesis by L461 , L455 , L460 , FUNCT_1:def 2;
end;
L463:
now
assume L464: R4 in D47;
consider C95 , C96 being set such that L465: [ C95 , C96 ] = R4 by L464 , RELAT_1:def 1;
L466: C95 in ( dom D47 ) by L464 , L465 , FUNCT_1:1;
L467: C96 = ( D47 . C95 ) by L464 , L465 , FUNCT_1:1;
L468: C95 in ( (the carrier' of R9) \/ (the carrier' of R10) ) by L466 , XBOOLE_0:def 3;
L469: C95 in (the carrier' of ( R9 \/ R10 )) by L468 , L431 , L23;
L470: C95 in ( dom D45 ) by L469 , FUNCT_2:def 1;
L471: ( D45 . C95 ) = C96 by L431 , L466 , L467 , L23;
thus L472: thesis by L471 , L465 , L470 , FUNCT_1:def 2;
end;
thus L473: thesis by L463 , L452 , L453 , XBOOLE_0:def 3;
end;
thus L474: D45 = ( D46 \/ D47 ) by L432 , TARSKI:1;
L475: (for R4 being set holds (R4 in D48 iff R4 in ( D49 \/ D50 )))
proof
let R4 being set;
thus L476: (R4 in D48 implies R4 in ( D49 \/ D50 ))
proof
assume L477: R4 in D48;
consider C97 , C98 being set such that L478: [ C97 , C98 ] = R4 by L477 , RELAT_1:def 1;
L479: C97 in ( dom D48 ) by L477 , L478 , FUNCT_1:1;
L480: C97 in (the carrier' of ( R9 \/ R10 )) by L479;
L481: C97 in ( (the carrier' of R9) \/ (the carrier' of R10) ) by L480 , L431 , L23;
L482:
now
assume L483: C97 in (the carrier' of R9);
L484: C97 in ( dom D49 ) by L483 , FUNCT_2:def 1;
L485: ( D49 . C97 ) = ( D48 . C97 ) by L431 , L483 , L23
.= C98 by L477 , L478 , FUNCT_1:1;
L486: ([ C97 , C98 ] in D49 or [ C97 , C98 ] in D50) by L485 , L484 , FUNCT_1:def 2;
thus L487: [ C97 , C98 ] in ( D49 \/ D50 ) by L486 , XBOOLE_0:def 3;
end;
L488:
now
assume L489: C97 in (the carrier' of R10);
L490: C97 in ( dom D50 ) by L489 , FUNCT_2:def 1;
L491: ( D50 . C97 ) = ( D48 . C97 ) by L431 , L489 , L23
.= C98 by L477 , L478 , FUNCT_1:1;
L492: ([ C97 , C98 ] in D49 or [ C97 , C98 ] in D50) by L491 , L490 , FUNCT_1:def 2;
thus L493: [ C97 , C98 ] in ( D49 \/ D50 ) by L492 , XBOOLE_0:def 3;
end;
thus L494: thesis by L488 , L478 , L481 , L482 , XBOOLE_0:def 3;
end;

assume L495: R4 in ( D49 \/ D50 );
L496:
now
assume L497: R4 in D49;
consider C99 , C100 being set such that L498: [ C99 , C100 ] = R4 by L497 , RELAT_1:def 1;
L499: C99 in ( dom D49 ) by L497 , L498 , FUNCT_1:1;
L500: C100 = ( D49 . C99 ) by L497 , L498 , FUNCT_1:1;
L501: C99 in ( (the carrier' of R9) \/ (the carrier' of R10) ) by L499 , XBOOLE_0:def 3;
L502: C99 in (the carrier' of ( R9 \/ R10 )) by L501 , L431 , L23;
L503: C99 in ( dom D48 ) by L502 , FUNCT_2:def 1;
L504: ( D48 . C99 ) = C100 by L431 , L499 , L500 , L23;
thus L505: thesis by L504 , L498 , L503 , FUNCT_1:def 2;
end;
L506:
now
assume L507: R4 in D50;
consider C101 , C102 being set such that L508: [ C101 , C102 ] = R4 by L507 , RELAT_1:def 1;
L509: C101 in ( dom D50 ) by L507 , L508 , FUNCT_1:1;
L510: C102 = ( D50 . C101 ) by L507 , L508 , FUNCT_1:1;
L511: C101 in ( (the carrier' of R9) \/ (the carrier' of R10) ) by L509 , XBOOLE_0:def 3;
L512: C101 in (the carrier' of ( R9 \/ R10 )) by L511 , L431 , L23;
L513: C101 in ( dom D48 ) by L512 , FUNCT_2:def 1;
L514: ( D48 . C101 ) = C102 by L431 , L509 , L510 , L23;
thus L515: thesis by L514 , L508 , L513 , FUNCT_1:def 2;
end;
thus L516: thesis by L506 , L495 , L496 , XBOOLE_0:def 3;
end;
thus L517: thesis by L475 , TARSKI:1;
end;
theorem
L518: (for B90 being  strict Graph holds B90 = ( B90 \/ B90 ))
proof
let C103 being  strict Graph;
L519: (the carrier of ( C103 \/ C103 )) = ( (the carrier of C103) \/ (the carrier of C103) ) by L23
.= (the carrier of C103);
L520: (the carrier' of ( C103 \/ C103 )) = ( (the carrier' of C103) \/ (the carrier' of C103) ) by L23
.= (the carrier' of C103);
L521: ( dom (the Source of C103) ) = (the carrier' of ( C103 \/ C103 )) by L520 , FUNCT_2:def 1
.= ( dom (the Source of ( C103 \/ C103 )) ) by FUNCT_2:def 1;
L522: (for R4 being set holds (R4 in ( dom (the Source of C103) ) implies ( (the Source of C103) . R4 ) = ( (the Source of ( C103 \/ C103 )) . R4 ))) by L23;
L523: (the Source of C103) = (the Source of ( C103 \/ C103 )) by L522 , L521 , FUNCT_1:2;
L524: ( dom (the Target of C103) ) = (the carrier' of ( C103 \/ C103 )) by L520 , FUNCT_2:def 1
.= ( dom (the Target of ( C103 \/ C103 )) ) by FUNCT_2:def 1;
L525: (for R4 being set holds (R4 in ( dom (the Target of C103) ) implies ( (the Target of C103) . R4 ) = ( (the Target of ( C103 \/ C103 )) . R4 ))) by L23;
thus L526: thesis by L525 , L519 , L520 , L523 , L524 , FUNCT_1:2;
end;
theorem
L527: (for R9 being Graph holds (for R10 being Graph holds (((the Source of R9) tolerates (the Source of R10) & (the Target of R9) tolerates (the Target of R10)) implies ( R9 \/ R10 ) = ( R10 \/ R9 ))))
proof
let R9 being Graph;
let R10 being Graph;
assume L528: ((the Source of R9) tolerates (the Source of R10) & (the Target of R9) tolerates (the Target of R10));
L529: (the carrier of ( R9 \/ R10 )) = ( (the carrier of R10) \/ (the carrier of R9) ) by L528 , L23
.= (the carrier of ( R10 \/ R9 )) by L528 , L23;
L530: (the carrier' of ( R9 \/ R10 )) = ( (the carrier' of R10) \/ (the carrier' of R9) ) by L528 , L23
.= (the carrier' of ( R10 \/ R9 )) by L528 , L23;
L531: ( dom (the Source of ( R9 \/ R10 )) ) = (the carrier' of ( R10 \/ R9 )) by L530 , FUNCT_2:def 1
.= ( dom (the Source of ( R10 \/ R9 )) ) by FUNCT_2:def 1;
L532: (for R4 being set holds (R4 in ( dom (the Source of ( R9 \/ R10 )) ) implies ( (the Source of ( R9 \/ R10 )) . R4 ) = ( (the Source of ( R10 \/ R9 )) . R4 )))
proof
let R4 being set;
assume L533: R4 in ( dom (the Source of ( R9 \/ R10 )) );
L534: R4 in (the carrier' of ( R9 \/ R10 )) by L533;
L535: R4 in ( (the carrier' of R9) \/ (the carrier' of R10) ) by L534 , L528 , L23;
L536:
now
assume L537: R4 in (the carrier' of R9);
thus L538: ( (the Source of ( R9 \/ R10 )) . R4 ) = ( (the Source of R9) . R4 ) by L537 , L528 , L23
.= ( (the Source of ( R10 \/ R9 )) . R4 ) by L528 , L537 , L23;
end;
L539:
now
assume L540: R4 in (the carrier' of R10);
thus L541: ( (the Source of ( R9 \/ R10 )) . R4 ) = ( (the Source of R10) . R4 ) by L540 , L528 , L23
.= ( (the Source of ( R10 \/ R9 )) . R4 ) by L528 , L540 , L23;
end;
thus L542: thesis by L539 , L535 , L536 , XBOOLE_0:def 3;
end;
L543: (the Source of ( R9 \/ R10 )) = (the Source of ( R10 \/ R9 )) by L532 , L531 , FUNCT_1:2;
L544: ( dom (the Target of ( R9 \/ R10 )) ) = (the carrier' of ( R10 \/ R9 )) by L530 , FUNCT_2:def 1
.= ( dom (the Target of ( R10 \/ R9 )) ) by FUNCT_2:def 1;
L545: (for R4 being set holds (R4 in ( dom (the Target of ( R9 \/ R10 )) ) implies ( (the Target of ( R9 \/ R10 )) . R4 ) = ( (the Target of ( R10 \/ R9 )) . R4 )))
proof
let R4 being set;
assume L546: R4 in ( dom (the Target of ( R9 \/ R10 )) );
L547: R4 in (the carrier' of ( R9 \/ R10 )) by L546;
L548: R4 in ( (the carrier' of R9) \/ (the carrier' of R10) ) by L547 , L528 , L23;
L549:
now
assume L550: R4 in (the carrier' of R9);
thus L551: ( (the Target of ( R9 \/ R10 )) . R4 ) = ( (the Target of R9) . R4 ) by L550 , L528 , L23
.= ( (the Target of ( R10 \/ R9 )) . R4 ) by L528 , L550 , L23;
end;
L552:
now
assume L553: R4 in (the carrier' of R10);
thus L554: ( (the Target of ( R9 \/ R10 )) . R4 ) = ( (the Target of R10) . R4 ) by L553 , L528 , L23
.= ( (the Target of ( R10 \/ R9 )) . R4 ) by L528 , L553 , L23;
end;
thus L555: thesis by L552 , L548 , L549 , XBOOLE_0:def 3;
end;
thus L556: thesis by L545 , L529 , L530 , L543 , L544 , FUNCT_1:2;
end;
theorem
L557: (for R9 being Graph holds (for R10 being Graph holds (for R11 being Graph holds (((the Source of R9) tolerates (the Source of R10) & (the Target of R9) tolerates (the Target of R10) & (the Source of R9) tolerates (the Source of R11) & (the Target of R9) tolerates (the Target of R11) & (the Source of R10) tolerates (the Source of R11) & (the Target of R10) tolerates (the Target of R11)) implies ( ( R9 \/ R10 ) \/ R11 ) = ( R9 \/ ( R10 \/ R11 ) )))))
proof
let R9 being Graph;
let R10 being Graph;
let R11 being Graph;
assume that
L558: (the Source of R9) tolerates (the Source of R10)
and
L559: (the Target of R9) tolerates (the Target of R10)
and
L560: (the Source of R9) tolerates (the Source of R11)
and
L561: (the Target of R9) tolerates (the Target of R11)
and
L562: (the Source of R10) tolerates (the Source of R11)
and
L563: (the Target of R10) tolerates (the Target of R11);
L564: (for R4 being set holds (R4 in ( ( dom (the Source of ( R9 \/ R10 )) ) /\ ( dom (the Source of R11) ) ) implies ( (the Source of ( R9 \/ R10 )) . R4 ) = ( (the Source of R11) . R4 )))
proof
let R4 being set;
assume L565: R4 in ( ( dom (the Source of ( R9 \/ R10 )) ) /\ ( dom (the Source of R11) ) );
L566: R4 in ( dom (the Source of R11) ) by L565 , XBOOLE_0:def 4;
L567: R4 in ( dom (the Source of ( R9 \/ R10 )) ) by L565 , XBOOLE_0:def 4;
L568: R4 in (the carrier' of ( R9 \/ R10 )) by L567;
L569: R4 in ( (the carrier' of R9) \/ (the carrier' of R10) ) by L568 , L558 , L559 , L23;
L570:
now
assume L571: R4 in (the carrier' of R9);
L572: R4 in ( dom (the Source of R9) ) by L571 , FUNCT_2:def 1;
L573: R4 in ( ( dom (the Source of R9) ) /\ ( dom (the Source of R11) ) ) by L572 , L566 , XBOOLE_0:def 4;
thus L574: ( (the Source of ( R9 \/ R10 )) . R4 ) = ( (the Source of R9) . R4 ) by L558 , L559 , L571 , L23
.= ( (the Source of R11) . R4 ) by L560 , L573 , PARTFUN1:def 4;
end;
L575:
now
assume L576: R4 in (the carrier' of R10);
L577: R4 in ( dom (the Source of R10) ) by L576 , FUNCT_2:def 1;
L578: R4 in ( ( dom (the Source of R10) ) /\ ( dom (the Source of R11) ) ) by L577 , L566 , XBOOLE_0:def 4;
thus L579: ( (the Source of ( R9 \/ R10 )) . R4 ) = ( (the Source of R10) . R4 ) by L558 , L559 , L576 , L23
.= ( (the Source of R11) . R4 ) by L562 , L578 , PARTFUN1:def 4;
end;
thus L580: thesis by L575 , L569 , L570 , XBOOLE_0:def 3;
end;
L581: (for R4 being set holds (R4 in ( ( dom (the Target of ( R9 \/ R10 )) ) /\ ( dom (the Target of R11) ) ) implies ( (the Target of ( R9 \/ R10 )) . R4 ) = ( (the Target of R11) . R4 )))
proof
let R4 being set;
assume L582: R4 in ( ( dom (the Target of ( R9 \/ R10 )) ) /\ ( dom (the Target of R11) ) );
L583: R4 in ( dom (the Target of R11) ) by L582 , XBOOLE_0:def 4;
L584: R4 in ( dom (the Target of ( R9 \/ R10 )) ) by L582 , XBOOLE_0:def 4;
L585: R4 in (the carrier' of ( R9 \/ R10 )) by L584;
L586: R4 in ( (the carrier' of R9) \/ (the carrier' of R10) ) by L585 , L558 , L559 , L23;
L587:
now
assume L588: R4 in (the carrier' of R9);
L589: R4 in ( dom (the Target of R9) ) by L588 , FUNCT_2:def 1;
L590: R4 in ( ( dom (the Target of R9) ) /\ ( dom (the Target of R11) ) ) by L589 , L583 , XBOOLE_0:def 4;
thus L591: ( (the Target of ( R9 \/ R10 )) . R4 ) = ( (the Target of R9) . R4 ) by L558 , L559 , L588 , L23
.= ( (the Target of R11) . R4 ) by L561 , L590 , PARTFUN1:def 4;
end;
L592:
now
assume L593: R4 in (the carrier' of R10);
L594: R4 in ( dom (the Target of R10) ) by L593 , FUNCT_2:def 1;
L595: R4 in ( ( dom (the Target of R10) ) /\ ( dom (the Target of R11) ) ) by L594 , L583 , XBOOLE_0:def 4;
thus L596: ( (the Target of ( R9 \/ R10 )) . R4 ) = ( (the Target of R10) . R4 ) by L558 , L559 , L593 , L23
.= ( (the Target of R11) . R4 ) by L563 , L595 , PARTFUN1:def 4;
end;
thus L597: thesis by L592 , L586 , L587 , XBOOLE_0:def 3;
end;
L598: (the Source of ( R9 \/ R10 )) tolerates (the Source of R11) by L564 , PARTFUN1:def 4;
L599: (the Target of ( R9 \/ R10 )) tolerates (the Target of R11) by L581 , PARTFUN1:def 4;
L600: (for R4 being set holds (R4 in ( ( dom (the Source of R9) ) /\ ( dom (the Source of ( R10 \/ R11 )) ) ) implies ( (the Source of R9) . R4 ) = ( (the Source of ( R10 \/ R11 )) . R4 )))
proof
let R4 being set;
assume L601: R4 in ( ( dom (the Source of R9) ) /\ ( dom (the Source of ( R10 \/ R11 )) ) );
L602: R4 in ( dom (the Source of R9) ) by L601 , XBOOLE_0:def 4;
L603: R4 in (the carrier' of ( R10 \/ R11 )) by L601;
L604: R4 in ( (the carrier' of R10) \/ (the carrier' of R11) ) by L603 , L562 , L563 , L23;
L605: R4 in ( (the carrier' of R10) \/ ( dom (the Source of R11) ) ) by L604 , FUNCT_2:def 1;
L606: R4 in ( ( dom (the Source of R10) ) \/ ( dom (the Source of R11) ) ) by L605 , FUNCT_2:def 1;
L607:
now
assume L608: R4 in ( dom (the Source of R10) );
L609: R4 in ( ( dom (the Source of R9) ) /\ ( dom (the Source of R10) ) ) by L608 , L602 , XBOOLE_0:def 4;
thus L610: ( (the Source of ( R10 \/ R11 )) . R4 ) = ( (the Source of R10) . R4 ) by L562 , L563 , L608 , L23
.= ( (the Source of R9) . R4 ) by L558 , L609 , PARTFUN1:def 4;
end;
L611:
now
assume L612: R4 in ( dom (the Source of R11) );
L613: R4 in ( ( dom (the Source of R9) ) /\ ( dom (the Source of R11) ) ) by L612 , L602 , XBOOLE_0:def 4;
thus L614: ( (the Source of ( R10 \/ R11 )) . R4 ) = ( (the Source of R11) . R4 ) by L562 , L563 , L612 , L23
.= ( (the Source of R9) . R4 ) by L560 , L613 , PARTFUN1:def 4;
end;
thus L615: thesis by L611 , L606 , L607 , XBOOLE_0:def 3;
end;
L616: (for R4 being set holds (R4 in ( ( dom (the Target of R9) ) /\ ( dom (the Target of ( R10 \/ R11 )) ) ) implies ( (the Target of R9) . R4 ) = ( (the Target of ( R10 \/ R11 )) . R4 )))
proof
let R4 being set;
assume L617: R4 in ( ( dom (the Target of R9) ) /\ ( dom (the Target of ( R10 \/ R11 )) ) );
L618: R4 in ( dom (the Target of R9) ) by L617 , XBOOLE_0:def 4;
L619: R4 in (the carrier' of ( R10 \/ R11 )) by L617;
L620: R4 in ( (the carrier' of R10) \/ (the carrier' of R11) ) by L619 , L562 , L563 , L23;
L621: R4 in ( (the carrier' of R10) \/ ( dom (the Target of R11) ) ) by L620 , FUNCT_2:def 1;
L622: R4 in ( ( dom (the Target of R10) ) \/ ( dom (the Target of R11) ) ) by L621 , FUNCT_2:def 1;
L623:
now
assume L624: R4 in ( dom (the Target of R10) );
L625: R4 in ( ( dom (the Target of R9) ) /\ ( dom (the Target of R10) ) ) by L624 , L618 , XBOOLE_0:def 4;
thus L626: ( (the Target of ( R10 \/ R11 )) . R4 ) = ( (the Target of R10) . R4 ) by L562 , L563 , L624 , L23
.= ( (the Target of R9) . R4 ) by L559 , L625 , PARTFUN1:def 4;
end;
L627:
now
assume L628: R4 in ( dom (the Target of R11) );
L629: R4 in ( ( dom (the Target of R9) ) /\ ( dom (the Target of R11) ) ) by L628 , L618 , XBOOLE_0:def 4;
thus L630: ( (the Target of ( R10 \/ R11 )) . R4 ) = ( (the Target of R11) . R4 ) by L562 , L563 , L628 , L23
.= ( (the Target of R9) . R4 ) by L561 , L629 , PARTFUN1:def 4;
end;
thus L631: thesis by L627 , L622 , L623 , XBOOLE_0:def 3;
end;
L632: (the Source of R9) tolerates (the Source of ( R10 \/ R11 )) by L600 , PARTFUN1:def 4;
L633: (the Target of R9) tolerates (the Target of ( R10 \/ R11 )) by L616 , PARTFUN1:def 4;
L634: (the carrier' of ( ( R9 \/ R10 ) \/ R11 )) = ( (the carrier' of ( R9 \/ R10 )) \/ (the carrier' of R11) ) by L598 , L599 , L23
.= ( ( (the carrier' of R9) \/ (the carrier' of R10) ) \/ (the carrier' of R11) ) by L558 , L559 , L23
.= ( (the carrier' of R9) \/ ( (the carrier' of R10) \/ (the carrier' of R11) ) ) by XBOOLE_1:4
.= ( (the carrier' of R9) \/ (the carrier' of ( R10 \/ R11 )) ) by L562 , L563 , L23
.= (the carrier' of ( R9 \/ ( R10 \/ R11 ) )) by L632 , L633 , L23;
L635: (the carrier of ( ( R9 \/ R10 ) \/ R11 )) = ( (the carrier of ( R9 \/ R10 )) \/ (the carrier of R11) ) by L598 , L599 , L23
.= ( ( (the carrier of R9) \/ (the carrier of R10) ) \/ (the carrier of R11) ) by L558 , L559 , L23
.= ( (the carrier of R9) \/ ( (the carrier of R10) \/ (the carrier of R11) ) ) by XBOOLE_1:4
.= ( (the carrier of R9) \/ (the carrier of ( R10 \/ R11 )) ) by L562 , L563 , L23
.= (the carrier of ( R9 \/ ( R10 \/ R11 ) )) by L632 , L633 , L23;
L636: ( dom (the Source of ( ( R9 \/ R10 ) \/ R11 )) ) = (the carrier' of ( R9 \/ ( R10 \/ R11 ) )) by L634 , FUNCT_2:def 1
.= ( dom (the Source of ( R9 \/ ( R10 \/ R11 ) )) ) by FUNCT_2:def 1;
L637: (for R4 being set holds (R4 in ( dom (the Source of ( ( R9 \/ R10 ) \/ R11 )) ) implies ( (the Source of ( ( R9 \/ R10 ) \/ R11 )) . R4 ) = ( (the Source of ( R9 \/ ( R10 \/ R11 ) )) . R4 )))
proof
let R4 being set;
assume that
L638: R4 in ( dom (the Source of ( ( R9 \/ R10 ) \/ R11 )) );
L639: ( dom (the Source of ( ( R9 \/ R10 ) \/ R11 )) ) = (the carrier' of ( ( R9 \/ R10 ) \/ R11 )) by FUNCT_2:def 1
.= ( (the carrier' of ( R9 \/ R10 )) \/ (the carrier' of R11) ) by L598 , L599 , L23
.= ( ( (the carrier' of R9) \/ (the carrier' of R10) ) \/ (the carrier' of R11) ) by L558 , L559 , L23;
L640: (R4 in ( (the carrier' of R9) \/ (the carrier' of R10) ) or R4 in (the carrier' of R11)) by L639 , L638 , XBOOLE_0:def 3;
L641:
now
assume L642: R4 in (the carrier' of R9);
L643: (the carrier' of R9) c= ( (the carrier' of R9) \/ (the carrier' of R10) ) by XBOOLE_1:7;
L644: (the carrier' of R9) c= (the carrier' of ( R9 \/ R10 )) by L643 , L558 , L559 , L23;
thus L645: ( (the Source of ( ( R9 \/ R10 ) \/ R11 )) . R4 ) = ( (the Source of ( R9 \/ R10 )) . R4 ) by L644 , L598 , L599 , L642 , L23
.= ( (the Source of R9) . R4 ) by L558 , L559 , L642 , L23
.= ( (the Source of ( R9 \/ ( R10 \/ R11 ) )) . R4 ) by L632 , L633 , L642 , L23;
end;
L646:
now
assume L647: R4 in (the carrier' of R10);
L648: (the carrier' of R10) c= ( (the carrier' of R9) \/ (the carrier' of R10) ) by XBOOLE_1:7;
L649: (the carrier' of R10) c= (the carrier' of ( R9 \/ R10 )) by L648 , L558 , L559 , L23;
L650: (the carrier' of R10) c= ( (the carrier' of R10) \/ (the carrier' of R11) ) by XBOOLE_1:7;
L651: (the carrier' of R10) c= (the carrier' of ( R10 \/ R11 )) by L650 , L562 , L563 , L23;
thus L652: ( (the Source of ( ( R9 \/ R10 ) \/ R11 )) . R4 ) = ( (the Source of ( R9 \/ R10 )) . R4 ) by L598 , L599 , L647 , L649 , L23
.= ( (the Source of R10) . R4 ) by L558 , L559 , L647 , L23
.= ( (the Source of ( R10 \/ R11 )) . R4 ) by L562 , L563 , L647 , L23
.= ( (the Source of ( R9 \/ ( R10 \/ R11 ) )) . R4 ) by L632 , L633 , L647 , L651 , L23;
end;
L653:
now
assume L654: R4 in (the carrier' of R11);
L655: (the carrier' of R11) c= ( (the carrier' of R10) \/ (the carrier' of R11) ) by XBOOLE_1:7;
L656: (the carrier' of R11) c= (the carrier' of ( R10 \/ R11 )) by L655 , L562 , L563 , L23;
thus L657: ( (the Source of ( ( R9 \/ R10 ) \/ R11 )) . R4 ) = ( (the Source of R11) . R4 ) by L598 , L599 , L654 , L23
.= ( (the Source of ( R10 \/ R11 )) . R4 ) by L562 , L563 , L654 , L23
.= ( (the Source of ( R9 \/ ( R10 \/ R11 ) )) . R4 ) by L632 , L633 , L654 , L656 , L23;
end;
thus L658: thesis by L653 , L640 , L641 , L646 , XBOOLE_0:def 3;
end;
L659: (the Source of ( ( R9 \/ R10 ) \/ R11 )) = (the Source of ( R9 \/ ( R10 \/ R11 ) )) by L637 , L636 , FUNCT_1:2;
L660: ( dom (the Target of ( ( R9 \/ R10 ) \/ R11 )) ) = (the carrier' of ( R9 \/ ( R10 \/ R11 ) )) by L634 , FUNCT_2:def 1
.= ( dom (the Target of ( R9 \/ ( R10 \/ R11 ) )) ) by FUNCT_2:def 1;
L661: (for R4 being set holds (R4 in ( dom (the Target of ( ( R9 \/ R10 ) \/ R11 )) ) implies ( (the Target of ( ( R9 \/ R10 ) \/ R11 )) . R4 ) = ( (the Target of ( R9 \/ ( R10 \/ R11 ) )) . R4 )))
proof
let R4 being set;
assume that
L662: R4 in ( dom (the Target of ( ( R9 \/ R10 ) \/ R11 )) );
L663: ( dom (the Target of ( ( R9 \/ R10 ) \/ R11 )) ) = (the carrier' of ( ( R9 \/ R10 ) \/ R11 )) by FUNCT_2:def 1
.= ( (the carrier' of ( R9 \/ R10 )) \/ (the carrier' of R11) ) by L598 , L599 , L23
.= ( ( (the carrier' of R9) \/ (the carrier' of R10) ) \/ (the carrier' of R11) ) by L558 , L559 , L23;
L664: (R4 in ( (the carrier' of R9) \/ (the carrier' of R10) ) or R4 in (the carrier' of R11)) by L663 , L662 , XBOOLE_0:def 3;
L665:
now
assume L666: R4 in (the carrier' of R9);
L667: (the carrier' of R9) c= ( (the carrier' of R9) \/ (the carrier' of R10) ) by XBOOLE_1:7;
L668: (the carrier' of R9) c= (the carrier' of ( R9 \/ R10 )) by L667 , L558 , L559 , L23;
thus L669: ( (the Target of ( ( R9 \/ R10 ) \/ R11 )) . R4 ) = ( (the Target of ( R9 \/ R10 )) . R4 ) by L668 , L598 , L599 , L666 , L23
.= ( (the Target of R9) . R4 ) by L558 , L559 , L666 , L23
.= ( (the Target of ( R9 \/ ( R10 \/ R11 ) )) . R4 ) by L632 , L633 , L666 , L23;
end;
L670:
now
assume L671: R4 in (the carrier' of R10);
L672: (the carrier' of R10) c= ( (the carrier' of R9) \/ (the carrier' of R10) ) by XBOOLE_1:7;
L673: (the carrier' of R10) c= (the carrier' of ( R9 \/ R10 )) by L672 , L558 , L559 , L23;
L674: (the carrier' of R10) c= ( (the carrier' of R10) \/ (the carrier' of R11) ) by XBOOLE_1:7;
L675: (the carrier' of R10) c= (the carrier' of ( R10 \/ R11 )) by L674 , L562 , L563 , L23;
thus L676: ( (the Target of ( ( R9 \/ R10 ) \/ R11 )) . R4 ) = ( (the Target of ( R9 \/ R10 )) . R4 ) by L598 , L599 , L671 , L673 , L23
.= ( (the Target of R10) . R4 ) by L558 , L559 , L671 , L23
.= ( (the Target of ( R10 \/ R11 )) . R4 ) by L562 , L563 , L671 , L23
.= ( (the Target of ( R9 \/ ( R10 \/ R11 ) )) . R4 ) by L632 , L633 , L671 , L675 , L23;
end;
L677:
now
assume L678: R4 in (the carrier' of R11);
L679: (the carrier' of R11) c= ( (the carrier' of R10) \/ (the carrier' of R11) ) by XBOOLE_1:7;
L680: (the carrier' of R11) c= (the carrier' of ( R10 \/ R11 )) by L679 , L562 , L563 , L23;
thus L681: ( (the Target of ( ( R9 \/ R10 ) \/ R11 )) . R4 ) = ( (the Target of R11) . R4 ) by L598 , L599 , L678 , L23
.= ( (the Target of ( R10 \/ R11 )) . R4 ) by L562 , L563 , L678 , L23
.= ( (the Target of ( R9 \/ ( R10 \/ R11 ) )) . R4 ) by L632 , L633 , L678 , L680 , L23;
end;
thus L682: thesis by L677 , L664 , L665 , L670 , XBOOLE_0:def 3;
end;
thus L683: thesis by L661 , L634 , L635 , L659 , L660 , FUNCT_1:2;
end;
theorem
L684: (for R8 being Graph holds (for R9 being Graph holds (for R10 being Graph holds (R8 is_sum_of R9 , R10 implies R8 is_sum_of R10 , R9))))
proof
let R8 being Graph;
let R9 being Graph;
let R10 being Graph;
assume L685: R8 is_sum_of R9 , R10;
L686: (the Target of R9) tolerates (the Target of R10) by L685 , L121;
L687: ((the Source of R9) tolerates (the Source of R10) & ( the MultiGraphStruct of R8 ) = ( R9 \/ R10 )) by L685 , L121;
L688: (the Source of R10) tolerates (the Source of R9) by L685 , L121;
L689: ( the MultiGraphStruct of R8 ) = ( R10 \/ R9 ) by L686 , L687 , L527;
thus L690: thesis by L689 , L686 , L688 , L121;
end;
theorem
L691: (for B91 being  strict Graph holds B91 is_sum_of B91 , B91)
proof
let C104 being  strict Graph;
L692: C104 = ( C104 \/ C104 ) by L518;
thus L693: thesis by L692 , L121;
end;
theorem
L694: (for R9 being Graph holds (for R10 being Graph holds ((ex R8 being Graph st (R9 c= R8 & R10 c= R8)) implies ( R9 \/ R10 ) = ( R10 \/ R9 ))))
proof
let R9 being Graph;
let R10 being Graph;
given R8 being Graph such that
L695: (R9 c= R8 & R10 c= R8);

L696: ((the Source of R9) c= (the Source of R8) & (the Source of R10) c= (the Source of R8)) by L695 , L403;
L697: ((the Target of R9) c= (the Target of R8) & (the Target of R10) c= (the Target of R8)) by L695 , L403;
L698: (the Source of R9) tolerates (the Source of R10) by L696 , PARTFUN1:52;
L699: (the Target of R9) tolerates (the Target of R10) by L697 , PARTFUN1:52;
thus L700: thesis by L699 , L698 , L527;
end;
theorem
L701: (for R9 being Graph holds (for R10 being Graph holds (for R11 being Graph holds ((ex R8 being Graph st (R9 c= R8 & R10 c= R8 & R11 c= R8)) implies ( ( R9 \/ R10 ) \/ R11 ) = ( R9 \/ ( R10 \/ R11 ) )))))
proof
let R9 being Graph;
let R10 being Graph;
let R11 being Graph;
given R8 being Graph such that
L702: R9 c= R8
and
L703: R10 c= R8
and
L704: R11 c= R8;

L705: (the Source of R9) c= (the Source of R8) by L702 , L403;
L706: (the Source of R10) c= (the Source of R8) by L703 , L403;
L707: (the Source of R11) c= (the Source of R8) by L704 , L403;
L708: (the Target of R9) c= (the Target of R8) by L702 , L403;
L709: (the Target of R10) c= (the Target of R8) by L703 , L403;
L710: (the Target of R11) c= (the Target of R8) by L704 , L403;
L711: (the Source of R9) tolerates (the Source of R10) by L705 , L706 , PARTFUN1:57;
L712: (the Source of R9) tolerates (the Source of R11) by L705 , L707 , PARTFUN1:57;
L713: (the Source of R10) tolerates (the Source of R11) by L706 , L707 , PARTFUN1:57;
L714: (the Target of R9) tolerates (the Target of R10) by L708 , L709 , PARTFUN1:57;
L715: (the Target of R9) tolerates (the Target of R11) by L708 , L710 , PARTFUN1:57;
L716: (the Target of R10) tolerates (the Target of R11) by L709 , L710 , PARTFUN1:57;
thus L717: thesis by L716 , L711 , L712 , L713 , L714 , L715 , L557;
end;
theorem
L718: (for R8 being Graph holds ( {} ) is (Chain of R8)) by L168;
theorem
L719: (for R8 being Graph holds (for B92 , B93 being  strict (Subgraph of R8) holds (((the carrier of B92) = (the carrier of B93) & (the carrier' of B92) = (the carrier' of B93)) implies B92 = B93))) by L343;
theorem
L720: (for B94 , B95 being  strict Graph holds ((B94 c= B95 & B95 c= B94) implies B94 = B95))
proof
let C105 , C106 being  strict Graph;
assume that
L721: C105 c= C106
and
L722: C106 c= C105;
L723: C105 is (Subgraph of C106) by L721 , L356;
L724: C106 is (Subgraph of C105) by L722 , L356;
L725: (the carrier of C105) c= (the carrier of C106) by L723 , L238;
L726: (the carrier of C106) c= (the carrier of C105) by L724 , L238;
L727: (the carrier of C105) = (the carrier of C106) by L726 , L725 , XBOOLE_0:def 10;
L728: (the carrier' of C105) c= (the carrier' of C106) by L723 , L238;
L729: (the carrier' of C106) c= (the carrier' of C105) by L724 , L238;
L730: (the carrier' of C105) = (the carrier' of C106) by L729 , L728 , XBOOLE_0:def 10;
L731: ( dom (the Source of C105) ) = (the carrier' of C106) by L730 , FUNCT_2:def 1
.= ( dom (the Source of C106) ) by FUNCT_2:def 1;
L732: (for R4 being set holds (R4 in ( dom (the Source of C105) ) implies ( (the Source of C105) . R4 ) = ( (the Source of C106) . R4 ))) by L723 , L238;
L733: (the Source of C105) = (the Source of C106) by L732 , L731 , FUNCT_1:2;
L734: ( dom (the Target of C105) ) = (the carrier' of C106) by L730 , FUNCT_2:def 1
.= ( dom (the Target of C106) ) by FUNCT_2:def 1;
L735: (for R4 being set holds (R4 in ( dom (the Target of C105) ) implies ( (the Target of C105) . R4 ) = ( (the Target of C106) . R4 ))) by L723 , L238;
thus L736: thesis by L735 , L727 , L730 , L733 , L734 , FUNCT_1:2;
end;
theorem
L737: (for R9 being Graph holds (for R10 being Graph holds (for R11 being Graph holds ((R9 c= R10 & R10 c= R11) implies R9 c= R11))))
proof
let R9 being Graph;
let R10 being Graph;
let R11 being Graph;
assume that
L738: R9 c= R10
and
L739: R10 c= R11;
L740: R9 is (Subgraph of R10) by L738 , L356;
L741: R10 is (Subgraph of R11) by L739 , L356;
L742: (the carrier of R9) c= (the carrier of R10) by L740 , L238;
L743: (the carrier of R10) c= (the carrier of R11) by L741 , L238;
L744: (the carrier of R9) c= (the carrier of R11) by L743 , L742 , XBOOLE_1:1;
L745: (the carrier' of R9) c= (the carrier' of R10) by L740 , L238;
L746: (the carrier' of R10) c= (the carrier' of R11) by L741 , L238;
L747: (the carrier' of R9) c= (the carrier' of R11) by L746 , L745 , XBOOLE_1:1;
L748: (for R4 being set holds (R4 in (the carrier' of R9) implies (( (the Source of R9) . R4 ) = ( (the Source of R11) . R4 ) & ( (the Target of R9) . R4 ) = ( (the Target of R11) . R4 ) & ( (the Source of R11) . R4 ) in (the carrier of R9) & ( (the Target of R11) . R4 ) in (the carrier of R9))))
proof
let R4 being set;
assume L749: R4 in (the carrier' of R9);
thus L750: ( (the Source of R9) . R4 ) = ( (the Source of R10) . R4 ) by L749 , L740 , L238
.= ( (the Source of R11) . R4 ) by L741 , L745 , L749 , L238;
thus L751: ( (the Target of R9) . R4 ) = ( (the Target of R10) . R4 ) by L740 , L749 , L238
.= ( (the Target of R11) . R4 ) by L741 , L745 , L749 , L238;
L752: R4 in ( dom (the Source of R9) ) by L749 , FUNCT_2:def 1;
L753: ( (the Source of R9) . R4 ) in ( rng (the Source of R9) ) by L752 , FUNCT_1:def 3;
thus L754: ( (the Source of R11) . R4 ) in (the carrier of R9) by L753 , L750;
L755: R4 in ( dom (the Target of R9) ) by L749 , FUNCT_2:def 1;
L756: ( (the Target of R9) . R4 ) in ( rng (the Target of R9) ) by L755 , FUNCT_1:def 3;
thus L757: thesis by L756 , L751;
end;
L758: R9 is (Subgraph of R11) by L748 , L744 , L747 , L238;
thus L759: thesis by L758 , L356;
end;
theorem
L760: (for R8 being Graph holds (for R9 being Graph holds (for R10 being Graph holds (R8 is_sum_of R9 , R10 implies (R9 c= R8 & R10 c= R8)))))
proof
let R8 being Graph;
let R9 being Graph;
let R10 being Graph;
assume L761: R8 is_sum_of R9 , R10;
L762: (for B96 , B97 , B98 being Graph holds (B96 is_sum_of B97 , B98 implies B97 c= B96))
proof
let C107 , C108 , C109 being Graph;
assume L763: C107 is_sum_of C108 , C109;
L764: ((the Source of C108) tolerates (the Source of C109) & (the Target of C108) tolerates (the Target of C109)) by L763 , L121;
L765: ( the MultiGraphStruct of C107 ) = ( C108 \/ C109 ) by L763 , L121;
L766: (the carrier of C107) = ( (the carrier of C108) \/ (the carrier of C109) ) by L765 , L764 , L23;
L767: (the carrier of C108) c= (the carrier of C107) by L766 , XBOOLE_1:7;
L768: (the carrier' of C107) = ( (the carrier' of C108) \/ (the carrier' of C109) ) by L764 , L765 , L23;
L769: (the carrier' of C108) c= (the carrier' of C107) by L768 , XBOOLE_1:7;
L770: (for R4 being set holds (R4 in (the carrier' of C108) implies (( (the Source of C108) . R4 ) = ( (the Source of C107) . R4 ) & ( (the Target of C108) . R4 ) = ( (the Target of C107) . R4 ) & ( (the Source of C107) . R4 ) in (the carrier of C108) & ( (the Target of C107) . R4 ) in (the carrier of C108))))
proof
let R4 being set;
assume L771: R4 in (the carrier' of C108);
thus L772: ( (the Source of C108) . R4 ) = ( (the Source of C107) . R4 ) by L771 , L764 , L765 , L23;
thus L773: ( (the Target of C108) . R4 ) = ( (the Target of C107) . R4 ) by L764 , L765 , L771 , L23;
thus L774: ( (the Source of C107) . R4 ) in (the carrier of C108) by L771 , L772 , FUNCT_2:5;
thus L775: thesis by L771 , L773 , FUNCT_2:5;
end;
L776: C108 is (Subgraph of C107) by L770 , L767 , L769 , L238;
thus L777: thesis by L776 , L356;
end;
thus L778: R9 c= R8 by L762 , L761;
thus L779: thesis by L761 , L762 , L684;
end;
theorem
L780: (for R9 being Graph holds (for R10 being Graph holds (((the Source of R9) tolerates (the Source of R10) & (the Target of R9) tolerates (the Target of R10)) implies (R9 c= ( R9 \/ R10 ) & R10 c= ( R9 \/ R10 )))))
proof
let R9 being Graph;
let R10 being Graph;
assume L781: ((the Source of R9) tolerates (the Source of R10) & (the Target of R9) tolerates (the Target of R10));
L782: ( R9 \/ R10 ) is_sum_of R9 , R10 by L781 , L121;
thus L783: thesis by L782 , L760;
end;
theorem
L784: (for R9 being Graph holds (for R10 being Graph holds ((ex R8 being Graph st (R9 c= R8 & R10 c= R8)) implies (R9 c= ( R9 \/ R10 ) & R10 c= ( R9 \/ R10 )))))
proof
let R9 being Graph;
let R10 being Graph;
given R8 being Graph such that
L785: (R9 c= R8 & R10 c= R8);

L786: ((the Source of R9) c= (the Source of R8) & (the Source of R10) c= (the Source of R8)) by L785 , L403;
L787: ((the Target of R9) c= (the Target of R8) & (the Target of R10) c= (the Target of R8)) by L785 , L403;
L788: (the Source of R9) tolerates (the Source of R10) by L786 , PARTFUN1:57;
L789: (the Target of R9) tolerates (the Target of R10) by L787 , PARTFUN1:57;
thus L790: thesis by L789 , L788 , L780;
end;
theorem
L791: (for R8 being Graph holds (for R9 being Graph holds (for R10 being Graph holds (for R11 being Graph holds ((R9 c= R11 & R10 c= R11 & R8 is_sum_of R9 , R10) implies R8 c= R11)))))
proof
let R8 being Graph;
let R9 being Graph;
let R10 being Graph;
let R11 being Graph;
assume that
L792: R9 c= R11
and
L793: R10 c= R11
and
L794: R8 is_sum_of R9 , R10;
L795: ((the Source of R9) tolerates (the Source of R10) & (the Target of R9) tolerates (the Target of R10)) by L794 , L121;
L796: ( the MultiGraphStruct of R8 ) = ( R9 \/ R10 ) by L794 , L121;
L797: R9 is (Subgraph of R11) by L792 , L356;
L798: R10 is (Subgraph of R11) by L793 , L356;
L799: (the carrier of R9) c= (the carrier of R11) by L797 , L238;
L800: (the carrier of R10) c= (the carrier of R11) by L798 , L238;
L801: ( (the carrier of R9) \/ (the carrier of R10) ) c= (the carrier of R11) by L800 , L799 , XBOOLE_1:8;
L802: (the carrier' of R9) c= (the carrier' of R11) by L797 , L238;
L803: (the carrier' of R10) c= (the carrier' of R11) by L798 , L238;
L804: ( (the carrier' of R9) \/ (the carrier' of R10) ) c= (the carrier' of R11) by L803 , L802 , XBOOLE_1:8;
L805: (for R4 being set holds (R4 in (the carrier' of ( R9 \/ R10 )) implies (( (the Source of ( R9 \/ R10 )) . R4 ) = ( (the Source of R11) . R4 ) & ( (the Target of ( R9 \/ R10 )) . R4 ) = ( (the Target of R11) . R4 ) & ( (the Source of R11) . R4 ) in (the carrier of ( R9 \/ R10 )) & ( (the Target of R11) . R4 ) in (the carrier of ( R9 \/ R10 )))))
proof
let R4 being set;
assume that
L806: R4 in (the carrier' of ( R9 \/ R10 ));
thus L807: (( (the Source of ( R9 \/ R10 )) . R4 ) = ( (the Source of R11) . R4 ) & ( (the Target of ( R9 \/ R10 )) . R4 ) = ( (the Target of R11) . R4 ))
proof
L808: R4 in ( (the carrier' of R9) \/ (the carrier' of R10) ) by L795 , L806 , L23;
L809:
now
assume L810: R4 in (the carrier' of R9);
L811: ( (the Source of R11) . R4 ) = ( (the Source of R9) . R4 ) by L810 , L797 , L238
.= ( (the Source of ( R9 \/ R10 )) . R4 ) by L795 , L810 , L23;
L812: ( (the Target of R11) . R4 ) = ( (the Target of R9) . R4 ) by L797 , L810 , L238
.= ( (the Target of ( R9 \/ R10 )) . R4 ) by L795 , L810 , L23;
thus L813: thesis by L812 , L811;
end;
L814:
now
assume L815: R4 in (the carrier' of R10);
L816: ( (the Source of R11) . R4 ) = ( (the Source of R10) . R4 ) by L815 , L798 , L238
.= ( (the Source of ( R9 \/ R10 )) . R4 ) by L795 , L815 , L23;
L817: ( (the Target of R11) . R4 ) = ( (the Target of R10) . R4 ) by L798 , L815 , L238
.= ( (the Target of ( R9 \/ R10 )) . R4 ) by L795 , L815 , L23;
thus L818: thesis by L817 , L816;
end;
thus L819: thesis by L814 , L808 , L809 , XBOOLE_0:def 3;
end;

thus L820: ( (the Source of R11) . R4 ) in (the carrier of ( R9 \/ R10 )) by L807 , L806 , FUNCT_2:5;
thus L821: thesis by L806 , L807 , FUNCT_2:5;
end;
thus L822: ((the carrier of R8) c= (the carrier of R11) & (the carrier' of R8) c= (the carrier' of R11) & (for R4 being set holds (R4 in (the carrier' of R8) implies (( (the Source of R8) . R4 ) = ( (the Source of R11) . R4 ) & ( (the Target of R8) . R4 ) = ( (the Target of R11) . R4 ) & ( (the Source of R11) . R4 ) in (the carrier of R8) & ( (the Target of R11) . R4 ) in (the carrier of R8))))) by L805 , L795 , L796 , L801 , L804 , L23;
end;
theorem
L823: (for R8 being Graph holds (for R9 being Graph holds (for R10 being Graph holds ((R9 c= R8 & R10 c= R8) implies ( R9 \/ R10 ) c= R8))))
proof
let R8 being Graph;
let R9 being Graph;
let R10 being Graph;
assume L824: (R9 c= R8 & R10 c= R8);
L825: ((the Source of R9) c= (the Source of R8) & (the Source of R10) c= (the Source of R8)) by L824 , L403;
L826: ((the Target of R9) c= (the Target of R8) & (the Target of R10) c= (the Target of R8)) by L824 , L403;
L827: (the Source of R9) tolerates (the Source of R10) by L825 , PARTFUN1:57;
L828: (the Target of R9) tolerates (the Target of R10) by L826 , PARTFUN1:57;
L829: ( R9 \/ R10 ) is_sum_of R9 , R10 by L828 , L827 , L121;
thus L830: thesis by L829 , L824 , L791;
end;
theorem
L831: (for B99 , B100 being  strict Graph holds (B99 c= B100 implies (( B99 \/ B100 ) = B100 & ( B100 \/ B99 ) = B100)))
proof
let C110 , C111 being  strict Graph;
assume L832: C110 c= C111;
L833: (( C110 \/ C111 ) c= C111 & C111 c= ( C110 \/ C111 )) by L832 , L784 , L823;
thus L834: ( C110 \/ C111 ) = C111 by L833 , L720;
thus L835: thesis by L834 , L832 , L694;
end;
theorem
L836: (for R9 being Graph holds (for R10 being Graph holds (((the Source of R9) tolerates (the Source of R10) & (the Target of R9) tolerates (the Target of R10) & (( R9 \/ R10 ) = R10 or ( R10 \/ R9 ) = R10)) implies R9 c= R10)))
proof
let R9 being Graph;
let R10 being Graph;
assume L837: ((the Source of R9) tolerates (the Source of R10) & (the Target of R9) tolerates (the Target of R10));
assume L838: (( R9 \/ R10 ) = R10 or ( R10 \/ R9 ) = R10);
L839: (the carrier of R10) = ( (the carrier of R9) \/ (the carrier of R10) ) by L838 , L837 , L23;
L840: (the carrier of R9) c= (the carrier of R10) by L839 , XBOOLE_1:7;
L841: (the carrier' of R10) = ( (the carrier' of R9) \/ (the carrier' of R10) ) by L837 , L838 , L23;
L842: (the carrier' of R9) c= (the carrier' of R10) by L841 , XBOOLE_1:7;
L843: (for R4 being set holds (R4 in (the carrier' of R9) implies (( (the Source of R9) . R4 ) = ( (the Source of R10) . R4 ) & ( (the Target of R9) . R4 ) = ( (the Target of R10) . R4 ) & ( (the Source of R10) . R4 ) in (the carrier of R9) & ( (the Target of R10) . R4 ) in (the carrier of R9))))
proof
let R4 being set;
assume L844: R4 in (the carrier' of R9);
thus L845: ( (the Source of R9) . R4 ) = ( (the Source of R10) . R4 ) by L844 , L837 , L838 , L23;
thus L846: ( (the Target of R9) . R4 ) = ( (the Target of R10) . R4 ) by L837 , L838 , L844 , L23;
thus L847: ( (the Source of R10) . R4 ) in (the carrier of R9) by L844 , L845 , FUNCT_2:5;
thus L848: thesis by L844 , L846 , FUNCT_2:5;
end;
L849: R9 is (Subgraph of R10) by L843 , L840 , L842 , L238;
thus L850: thesis by L849 , L356;
end;
theorem
L851: (for R9 being Graph holds (for B101 being  oriented Graph holds (R9 c= B101 implies R9 is  oriented)))
proof
let R9 being Graph;
let C112 being  oriented Graph;
assume L852: R9 c= C112;
L853: R9 is (Subgraph of C112) by L852 , L356;
L854: (for B102 , B103 being set holds ((B102 in (the carrier' of R9) & B103 in (the carrier' of R9) & ( (the Source of R9) . B102 ) = ( (the Source of R9) . B103 ) & ( (the Target of R9) . B102 ) = ( (the Target of R9) . B103 )) implies B102 = B103))
proof
let C113 , C114 being set;
assume that
L855: C113 in (the carrier' of R9)
and
L856: C114 in (the carrier' of R9)
and
L857: ( (the Source of R9) . C113 ) = ( (the Source of R9) . C114 )
and
L858: ( (the Target of R9) . C113 ) = ( (the Target of R9) . C114 );
L859: (the carrier' of R9) c= (the carrier' of C112) by L853 , L238;
L860: ( (the Source of C112) . C113 ) = ( (the Source of R9) . C114 ) by L853 , L855 , L857 , L238
.= ( (the Source of C112) . C114 ) by L853 , L856 , L238;
L861: ( (the Target of C112) . C113 ) = ( (the Target of R9) . C114 ) by L853 , L855 , L858 , L238
.= ( (the Target of C112) . C114 ) by L853 , L856 , L238;
thus L862: thesis by L861 , L855 , L856 , L859 , L860 , L123;
end;
thus L863: thesis by L854 , L123;
end;
theorem
L864: (for R9 being Graph holds (for B104 being  non-multi Graph holds (R9 c= B104 implies R9 is  non-multi)))
proof
let R9 being Graph;
let C115 being  non-multi Graph;
assume L865: R9 c= C115;
L866: R9 is (Subgraph of C115) by L865 , L356;
L867: (for B105 , B106 being set holds ((B105 in (the carrier' of R9) & B106 in (the carrier' of R9) & ((( (the Source of R9) . B105 ) = ( (the Source of R9) . B106 ) & ( (the Target of R9) . B105 ) = ( (the Target of R9) . B106 )) or (( (the Source of R9) . B105 ) = ( (the Target of R9) . B106 ) & ( (the Source of R9) . B106 ) = ( (the Target of R9) . B105 )))) implies B105 = B106))
proof
let C116 , C117 being set;
assume that
L868: (C116 in (the carrier' of R9) & C117 in (the carrier' of R9));
assume L869: ((( (the Source of R9) . C116 ) = ( (the Source of R9) . C117 ) & ( (the Target of R9) . C116 ) = ( (the Target of R9) . C117 )) or (( (the Source of R9) . C116 ) = ( (the Target of R9) . C117 ) & ( (the Source of R9) . C117 ) = ( (the Target of R9) . C116 )));
L870: (the carrier' of R9) c= (the carrier' of C115) by L866 , L238;
L871: (( (the Source of R9) . C116 ) = ( (the Source of C115) . C116 ) & ( (the Source of R9) . C117 ) = ( (the Source of C115) . C117 )) by L866 , L868 , L238;
L872: (( (the Target of R9) . C116 ) = ( (the Target of C115) . C116 ) & ( (the Target of R9) . C117 ) = ( (the Target of C115) . C117 )) by L866 , L868 , L238;
thus L873: thesis by L872 , L868 , L869 , L870 , L871 , L124;
end;
thus L874: thesis by L867 , L124;
end;
theorem
L875: (for R9 being Graph holds (for B107 being  simple Graph holds (R9 c= B107 implies R9 is  simple)))
proof
let R9 being Graph;
let C118 being  simple Graph;
assume L876: R9 c= C118;
L877: R9 is (Subgraph of C118) by L876 , L356;
L878: (not (ex B108 being set st (B108 in (the carrier' of R9) & ( (the Source of R9) . B108 ) = ( (the Target of R9) . B108 ))))
proof
given C119 being set such that
L879: C119 in (the carrier' of R9)
and
L880: ( (the Source of R9) . C119 ) = ( (the Target of R9) . C119 );

L881: (the carrier' of R9) c= (the carrier' of C118) by L877 , L238;
L882: ( (the Source of C118) . C119 ) = ( (the Target of R9) . C119 ) by L877 , L879 , L880 , L238
.= ( (the Target of C118) . C119 ) by L877 , L879 , L238;
thus L883: contradiction by L882 , L879 , L881 , L125;
end;
thus L884: thesis by L878 , L125;
end;
theorem
L885: (for R8 being Graph holds (for B109 being  strict Graph holds (B109 in ( bool R8 ) iff B109 c= R8)))
proof
let R8 being Graph;
let C120 being  strict Graph;
thus L886: (C120 in ( bool R8 ) implies C120 c= R8)
proof
assume L887: C120 in ( bool R8 );
L888: C120 is (Subgraph of R8) by L887 , L368;
thus L889: thesis by L888 , L356;
end;

assume L890: C120 c= R8;
L891: C120 is (Subgraph of R8) by L890 , L356;
thus L892: thesis by L891 , L368;
end;
theorem
L893: (for B110 being  strict Graph holds B110 in ( bool B110 ))
proof
let C121 being  strict Graph;
L894: C121 is (Subgraph of C121) by L356;
thus L895: thesis by L894 , L368;
end;
theorem
L896: (for R10 being Graph holds (for B111 being  strict Graph holds (B111 c= R10 iff ( bool B111 ) c= ( bool R10 ))))
proof
let R10 being Graph;
let C122 being  strict Graph;
thus L897: (C122 c= R10 implies ( bool C122 ) c= ( bool R10 ))
proof
assume L898: C122 c= R10;
L899: (for B112 being set holds (B112 in ( bool C122 ) implies B112 in ( bool R10 )))
proof
let C123 being set;
assume L900: C123 in ( bool C122 );
reconsider D51 = C123 as  strict (Subgraph of C122) by L900 , L368;
L901: D51 c= C122 by L356;
L902: D51 c= R10 by L901 , L898 , L737;
L903: D51 is  strict  strict  strict  strict (Subgraph of R10) by L902 , L356;
thus L904: thesis by L903 , L368;
end;
thus L905: thesis by L899 , TARSKI:def 3;
end;

assume L906: ( bool C122 ) c= ( bool R10 );
L907: C122 in ( bool C122 ) by L893;
L908: C122 is (Subgraph of R10) by L907 , L906 , L368;
thus L909: thesis by L908 , L356;
end;
theorem
L910: (for B113 being  strict Graph holds { B113 } c= ( bool B113 ))
proof
let C124 being  strict Graph;
L911: C124 in ( bool C124 ) by L893;
thus L912: thesis by L911 , ZFMISC_1:31;
end;
theorem
L913: (for B114 , B115 being  strict Graph holds (((the Source of B114) tolerates (the Source of B115) & (the Target of B114) tolerates (the Target of B115) & ( bool ( B114 \/ B115 ) ) c= ( ( bool B114 ) \/ ( bool B115 ) )) implies (B114 c= B115 or B115 c= B114)))
proof
let C125 , C126 being  strict Graph;
assume L914: ((the Source of C125) tolerates (the Source of C126) & (the Target of C125) tolerates (the Target of C126));
assume L915: ( bool ( C125 \/ C126 ) ) c= ( ( bool C125 ) \/ ( bool C126 ) );
L916: ( C125 \/ C126 ) in ( bool ( C125 \/ C126 ) ) by L893;
L917:
now
assume L918: ( C125 \/ C126 ) in ( bool C125 );
L919: ( C125 \/ C126 ) is (Subgraph of C125) by L918 , L368;
L920: ( C125 \/ C126 ) c= C125 by L919 , L356;
L921: C125 c= ( C125 \/ C126 ) by L914 , L780;
L922: ( C125 \/ C126 ) = C125 by L921 , L920 , L720;
thus L923: C126 c= C125 by L922 , L914 , L836;
end;
L924:
now
assume L925: ( C125 \/ C126 ) in ( bool C126 );
L926: ( C125 \/ C126 ) is (Subgraph of C126) by L925 , L368;
L927: ( C125 \/ C126 ) c= C126 by L926 , L356;
L928: C126 c= ( C125 \/ C126 ) by L914 , L780;
L929: ( C125 \/ C126 ) = C126 by L928 , L927 , L720;
thus L930: C125 c= C126 by L929 , L914 , L836;
end;
thus L931: thesis by L924 , L915 , L916 , L917 , XBOOLE_0:def 3;
end;
theorem
L932: (for R9 being Graph holds (for R10 being Graph holds (((the Source of R9) tolerates (the Source of R10) & (the Target of R9) tolerates (the Target of R10)) implies ( ( bool R9 ) \/ ( bool R10 ) ) c= ( bool ( R9 \/ R10 ) ))))
proof
let R9 being Graph;
let R10 being Graph;
assume L933: ((the Source of R9) tolerates (the Source of R10) & (the Target of R9) tolerates (the Target of R10));
L934: (for R4 being set holds (R4 in ( bool R9 ) implies R4 in ( bool ( R9 \/ R10 ) )))
proof
let R4 being set;
assume L935: R4 in ( bool R9 );
reconsider D52 = R4 as  strict (Subgraph of R9) by L935 , L368;
L936: (D52 c= R9 & R9 c= ( R9 \/ R10 )) by L933 , L356 , L780;
L937: D52 c= ( R9 \/ R10 ) by L936 , L737;
L938: D52 is  strict  strict  strict  strict (Subgraph of ( R9 \/ R10 )) by L937 , L356;
thus L939: thesis by L938 , L368;
end;
L940: (for R4 being set holds (R4 in ( bool R10 ) implies R4 in ( bool ( R9 \/ R10 ) )))
proof
let R4 being set;
assume L941: R4 in ( bool R10 );
reconsider D53 = R4 as  strict (Subgraph of R10) by L941 , L368;
L942: (D53 c= R10 & R10 c= ( R9 \/ R10 )) by L933 , L356 , L780;
L943: D53 c= ( R9 \/ R10 ) by L942 , L737;
L944: D53 is  strict  strict  strict  strict (Subgraph of ( R9 \/ R10 )) by L943 , L356;
thus L945: thesis by L944 , L368;
end;
L946: (for R4 being set holds (R4 in ( ( bool R9 ) \/ ( bool R10 ) ) implies R4 in ( bool ( R9 \/ R10 ) )))
proof
let R4 being set;
assume L947: R4 in ( ( bool R9 ) \/ ( bool R10 ) );
L948: (R4 in ( bool R9 ) or R4 in ( bool R10 )) by L947 , XBOOLE_0:def 3;
thus L949: thesis by L948 , L934 , L940;
end;
thus L950: thesis by L946 , TARSKI:def 3;
end;
theorem
L951: (for R8 being Graph holds (for R9 being Graph holds (for R10 being Graph holds ((R9 in ( bool R8 ) & R10 in ( bool R8 )) implies ( R9 \/ R10 ) in ( bool R8 )))))
proof
let R8 being Graph;
let R9 being Graph;
let R10 being Graph;
assume that
L952: R9 in ( bool R8 )
and
L953: R10 in ( bool R8 );
L954: R9 is (Subgraph of R8) by L952 , L368;
L955: R10 is (Subgraph of R8) by L953 , L368;
L956: R9 c= R8 by L954 , L356;
L957: R10 c= R8 by L955 , L356;
L958: ( R9 \/ R10 ) c= R8 by L957 , L956 , L823;
L959: ( R9 \/ R10 ) is (Subgraph of R8) by L958 , L356;
thus L960: thesis by L959 , L368;
end;
