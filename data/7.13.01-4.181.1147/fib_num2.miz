:: Some Properties of {F}ibonacci Numbers
::  by Magdalena Jastrz\c{e}bska and Adam Grabowski
::
:: Received May 10, 2004
:: Copyright (c) 2004-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, NAT_1, XBOOLE_0, SUBSET_1, ARYTM_1, ARYTM_3, XXREAL_0,
      ABIAN, INT_1, XREAL_0, ORDINAL1, POWER, RELAT_1, NEWTON, PREPOWER,
      SQUARE_1, FINSET_1, MEMBERED, SETFAM_1, FUNCT_1, FINSEQ_1, TARSKI,
      TURING_1, CARD_1, XXREAL_2, FUNCOP_1, VALUED_1, FUNCT_4, ZFMISC_1,
      PRE_FF, FIB_NUM, INT_2, ORDINAL4, CARD_3, PYTHTRIP, FIB_NUM2;
 notations TARSKI, ORDINAL1, SUBSET_1, XBOOLE_0, SETFAM_1, CARD_1, NUMBERS,
      XCMPLX_0, XXREAL_0, XREAL_0, SQUARE_1, INT_1, NAT_1, INT_2, NAT_D,
      FINSET_1, MEMBERED, RELAT_1, FUNCT_1, FUNCT_2, PRE_FF, RVSUM_1, ZFMISC_1,
      NEWTON, PREPOWER, POWER, XXREAL_2, ABIAN, DOMAIN_1, FINSEQ_1, FUNCT_4,
      FIB_NUM, PYTHTRIP, PEPIN, PNPROC_1, TREES_4;
 constructors REAL_1, NAT_D, FINSOP_1, NEWTON, PREPOWER, POWER, PRE_FF,
      BINARITH, WSIERP_1, ABIAN, PEPIN, PYTHTRIP, FIB_NUM, PNPROC_1, XXREAL_2,
      RELSET_1, DOMAIN_1;
 registrations XBOOLE_0, SETFAM_1, RELAT_1, FUNCT_1, ORDINAL1, FINSET_1,
      NUMBERS, XXREAL_0, XREAL_0, SQUARE_1, NAT_1, INT_1, MEMBERED, FINSEQ_1,
      NEWTON, PREPOWER, ABIAN, NAT_2, VALUED_0, XXREAL_2, RELSET_1;
 requirements SUBSET, NUMERALS, REAL, ARITHM, BOOLE;
 definitions TARSKI, XBOOLE_0, SQUARE_1, FINSEQ_1;
 theorems NAT_1, PRE_FF, INT_2, SQUARE_1, WSIERP_1, PYTHTRIP, POWER, NEWTON,
      PREPOWER, XCMPLX_1, NAT_2, FINSEQ_1, XBOOLE_1, RELAT_1, ORDINAL1, CARD_2,
      PNPROC_1, FINSEQ_3, RVSUM_1, XBOOLE_0, FIB_NUM, TARSKI, FUNCT_1, FUNCT_2,
      ZFMISC_1, PEPIN, GRFUNC_1, FUNCT_4, FINSEQ_2, ENUMSET1, SETFAM_1,
      XREAL_1, XXREAL_0, NAT_D, XXREAL_2, XREAL_0, XTUPLE_0;
 schemes NAT_1, FIB_NUM, FUNCT_2, DOMAIN_1, BINOP_2;

begin
theorem
L1: (for B1 being non  empty (Element of ( NAT )) holds ( ( B1 -' 1 ) + 2 ) = ( B1 + 1 ))
proof
let C1 being non  empty (Element of ( NAT ));
L2: C1 >= 1 by NAT_2:19;
L3: ( ( C1 -' 1 ) + 2 ) = ( ( C1 + 2 ) -' 1 ) by L2 , NAT_D:38
.= ( ( C1 + 2 ) - 1 ) by NAT_D:37;
thus L4: thesis by L3;
end;
theorem
L5: (for B2 being  odd Integer holds ( ( - 1 ) to_power B2 ) = ( - 1 ))
proof
let C2 being  odd Integer;
L6: ( ( - 1 ) to_power C2 ) = ( - ( 1 to_power C2 ) ) by POWER:48
.= ( - 1 ) by POWER:26;
thus L7: thesis by L6;
end;
theorem
L8: (for B3 being  even Integer holds ( ( - 1 ) to_power B3 ) = 1)
proof
let C3 being  even Integer;
L9: ( ( - 1 ) to_power C3 ) = ( 1 to_power C3 ) by POWER:47;
thus L10: thesis by L9 , POWER:26;
end;
theorem
L11: (for B4 being non  empty  real number holds (for B5 being Integer holds ( ( ( - 1 ) * B4 ) to_power B5 ) = ( ( ( - 1 ) to_power B5 ) * ( B4 to_power B5 ) )))
proof
let C4 being non  empty  real number;
let C5 being Integer;
per cases ;
suppose L12: C5 is  odd;

L13: ( ( - C4 ) to_power C5 ) = ( - ( C4 to_power C5 ) ) by L12 , POWER:48
.= ( ( - 1 ) * ( C4 to_power C5 ) )
.= ( ( ( - 1 ) to_power C5 ) * ( C4 to_power C5 ) ) by L12 , L5;
thus L14: thesis by L13;
end;
suppose L15: C5 is  even;

L16: ( ( - C4 ) to_power C5 ) = ( 1 * ( C4 to_power C5 ) ) by L15 , POWER:47
.= ( ( ( - 1 ) to_power C5 ) * ( C4 to_power C5 ) ) by L15 , L8;
thus L17: thesis by L16;
end;
end;
theorem
L19: (for R2 being Nat holds (for R4 being Nat holds (for B6 being  real number holds ( B6 to_power ( R2 + R4 ) ) = ( ( B6 to_power R2 ) * ( B6 to_power R4 ) ))))
proof
let R2 being Nat;
let R4 being Nat;
let C6 being  real number;
thus L20: ( C6 to_power ( R2 + R4 ) ) = ( C6 |^ ( R2 + R4 ) ) by POWER:41
.= ( ( C6 |^ R2 ) * ( C6 |^ R4 ) ) by NEWTON:8
.= ( ( C6 to_power R2 ) * ( C6 |^ R4 ) ) by POWER:41
.= ( ( C6 to_power R2 ) * ( C6 to_power R4 ) ) by POWER:41;
end;
theorem
L21: (for R1 being Nat holds (for B7 being non  empty  real number holds (for B8 being  odd Integer holds ( ( B7 to_power B8 ) to_power R1 ) = ( B7 to_power ( B8 * R1 ) ))))
proof
let R1 being Nat;
let C7 being non  empty  real number;
let C8 being  odd Integer;
L22: ( C7 to_power ( C8 * R1 ) ) = ( C7 #Z ( C8 * R1 ) ) by POWER:def 2
.= ( ( C7 #Z C8 ) #Z R1 ) by PREPOWER:45
.= ( ( C7 to_power C8 ) #Z R1 ) by POWER:def 2
.= ( ( C7 to_power C8 ) to_power R1 ) by POWER:def 2;
thus L23: thesis by L22;
end;
theorem
L24: (for R1 being Nat holds ( ( ( - 1 ) to_power ( - R1 ) ) ^2 ) = 1)
proof
let R1 being Nat;
L25: ( ( ( - 1 ) to_power ( - R1 ) ) ^2 ) = ( ( ( - 1 ) #Z ( - R1 ) ) ^2 ) by POWER:def 2
.= ( ( 1 / ( ( - 1 ) #Z R1 ) ) ^2 ) by PREPOWER:41
.= ( ( 1 / ( ( - 1 ) #Z R1 ) ) to_power 2 ) by POWER:46
.= ( ( 1 / ( ( - 1 ) #Z R1 ) ) |^ 2 ) by POWER:41
.= ( 1 / ( ( ( - 1 ) #Z R1 ) |^ 2 ) ) by PREPOWER:7
.= ( 1 / ( ( ( - 1 ) #Z R1 ) #Z 2 ) ) by PREPOWER:36
.= ( 1 / ( ( - 1 ) #Z ( R1 * 2 ) ) ) by PREPOWER:45
.= ( 1 / ( ( - 1 ) |^ ( 2 * R1 ) ) ) by PREPOWER:36
.= ( 1 / ( 1 |^ ( 2 * R1 ) ) ) by WSIERP_1:2
.= ( 1 / ( ( 1 |^ 2 ) |^ R1 ) ) by NEWTON:9
.= ( 1 / ( 1 |^ R1 ) ) by NEWTON:10
.= ( 1 / 1 ) by NEWTON:10;
thus L26: thesis by L25;
end;
theorem
L27: (for R2 being Nat holds (for R4 being Nat holds (for B9 being non  empty  real number holds ( ( B9 to_power ( - R2 ) ) * ( B9 to_power ( - R4 ) ) ) = ( B9 to_power ( ( - R2 ) - R4 ) ))))
proof
let R2 being Nat;
let R4 being Nat;
set D1 = ( - R2 );
set D2 = ( - R4 );
let C9 being non  empty  real number;
L28: ( ( C9 to_power ( - R2 ) ) * ( C9 to_power ( - R4 ) ) ) = ( ( C9 #Z ( - R2 ) ) * ( C9 to_power ( - R4 ) ) ) by POWER:def 2
.= ( ( C9 #Z D1 ) * ( C9 #Z D2 ) ) by POWER:def 2
.= ( C9 #Z ( D1 + D2 ) ) by PREPOWER:44
.= ( C9 to_power ( ( - R2 ) - R4 ) ) by POWER:def 2;
thus L29: thesis by L28;
end;
theorem
L30: (for R1 being Nat holds ( ( - 1 ) to_power ( - ( 2 * R1 ) ) ) = 1)
proof
let R1 being Nat;
L31: ( ( - 1 ) to_power ( - ( 2 * R1 ) ) ) = ( ( - 1 ) #Z ( ( - 1 ) * ( 2 * R1 ) ) ) by POWER:def 2
.= ( ( ( - 1 ) #Z ( - 1 ) ) #Z ( 2 * R1 ) ) by PREPOWER:45
.= ( ( 1 / ( ( - 1 ) #Z 1 ) ) #Z ( 2 * R1 ) ) by PREPOWER:41
.= ( ( 1 / ( - 1 ) ) #Z ( 2 * R1 ) ) by PREPOWER:35
.= ( ( - 1 ) |^ ( 2 * R1 ) ) by PREPOWER:36
.= ( 1 |^ ( 2 * R1 ) ) by WSIERP_1:2
.= ( ( 1 |^ 2 ) |^ R1 ) by NEWTON:9
.= ( 1 |^ R1 ) by NEWTON:10
.= 1 by NEWTON:10;
thus L32: thesis by L31;
end;
theorem
L33: (for R2 being Nat holds (for B10 being non  empty  real number holds ( ( B10 to_power R2 ) * ( B10 to_power ( - R2 ) ) ) = 1))
proof
let R2 being Nat;
let C10 being non  empty  real number;
L34: ( ( C10 to_power R2 ) * ( C10 to_power ( - R2 ) ) ) = ( ( C10 #Z R2 ) * ( C10 to_power ( - R2 ) ) ) by POWER:def 2
.= ( ( C10 #Z R2 ) * ( C10 #Z ( - R2 ) ) ) by POWER:def 2
.= ( C10 #Z ( R2 + ( - R2 ) ) ) by PREPOWER:44
.= 1 by PREPOWER:34;
thus L35: thesis by L34;
end;
registration
let C11 being  odd Integer;
cluster ( - C11 ) ->  odd;
coherence
proof
L36: ( - 1 ) = ( ( 2 * ( - 1 ) ) + 1 );
reconsider D3 = ( - 1 ) as  odd Integer by L36;
L37: ( D3 * C11 ) is  odd;
thus L38: thesis by L37;
end;
end;
registration
let C12 being  even Integer;
cluster ( - C12 ) ->  even;
coherence
proof
reconsider D4 = ( - 1 ) as Integer;
L40: ( D4 * C12 ) is  even;
thus L41: thesis by L40;
end;
end;
theorem
L43: (for R1 being Nat holds ( ( - 1 ) to_power ( - R1 ) ) = ( ( - 1 ) to_power R1 ))
proof
let R1 being Nat;
per cases ;
suppose L44: R1 is  odd;

reconsider D5 = R1 as  odd Integer by L44;
L45: ( ( - 1 ) to_power ( - D5 ) ) = ( - 1 ) by L5
.= ( ( - 1 ) to_power D5 ) by L5;
thus L46: thesis by L45;
end;
suppose L47: R1 is  even;

reconsider D6 = R1 as  even Integer by L47;
L48: ( ( - 1 ) to_power ( - D6 ) ) = 1 by L8
.= ( ( - 1 ) to_power D6 ) by L8;
thus L49: thesis by L48;
end;
end;
theorem
L51: (for R1 being Nat holds (for B11 , B12 , B13 , B14 being (Element of ( NAT )) holds ((B11 divides B12 & B11 divides R1) implies B11 divides ( ( B12 * B13 ) + ( R1 * B14 ) ))))
proof
let R1 being Nat;
let C13 , C14 , C15 , C16 being (Element of ( NAT ));
assume L52: (C13 divides C14 & C13 divides R1);
L53: (C13 divides ( C14 * C15 ) & C13 divides ( R1 * C16 )) by L52 , NAT_D:9;
thus L54: thesis by L53 , NAT_D:8;
end;
registration
cluster  finite non  empty  natural-membered  with_non-empty_elements for set;
existence
proof
take D7 = { 1 };
thus L55: D7 is  finite non  empty;
thus L56: D7 is  natural-membered;
thus L57: thesis;
end;
end;
registration
let C17 being (Function of ( NAT ) , ( NAT ));
let C18 being  finite  natural-membered  with_non-empty_elements set;
cluster ( C17 | C18 ) ->  FinSubsequence-like;
coherence
proof
per cases ;
suppose L59: C18 is non  empty;

reconsider D8 = C18 as non  empty  finite  natural-membered  with_non-empty_elements set by L59;
reconsider D9 = ( max D8 ) as (Element of ( NAT )) by ORDINAL1:def 12;
L60: ( dom ( C17 | C18 ) ) c= C18 by RELAT_1:58;
L61: ( dom ( C17 | C18 ) ) c= ( Seg D9 )
proof
let C19 being set;
assume L62: C19 in ( dom ( C17 | C18 ) );
reconsider D10 = C19 as Nat by L62 , L60;
reconsider D11 = D10 as (Element of ( NAT )) by ORDINAL1:def 12;
L63: (1 <= D11 & D11 <= D9) by L60 , L62 , NAT_1:14 , XXREAL_2:def 8;
thus L64: thesis by L63;
end;
thus L65: thesis by L61 , FINSEQ_1:def 12;
end;
suppose L66: C18 is  empty;

thus L67: thesis by L66;
end;
end;
end;
theorem
L70: (for B15 being FinSubsequence holds ( rng ( Seq B15 ) ) c= ( rng B15 )) by RELAT_1:26;
definition
let C20 being (Function of ( NAT ) , ( NAT ));
let C21 being  finite  with_non-empty_elements  natural-membered set;
func Prefix (C20 , C21) -> (FinSequence of ( NAT )) equals 
( Seq ( C20 | C21 ) );
coherence
proof
L71: ( rng ( Seq ( C20 | C21 ) ) ) c= ( NAT ) by RELAT_1:def 19;
thus L72: thesis by L71 , FINSEQ_1:def 4;
end;
end;
theorem
L74: (for R1 being Nat holds (for R4 being Nat holds (for B16 being (Element of ( NAT )) holds (B16 <> ( 0 ) implies (( B16 + R4 ) <= R1 implies R4 < R1)))))
proof
let R1 being Nat;
let R4 being Nat;
let C22 being (Element of ( NAT ));
assume L75: C22 <> ( 0 );
assume L76: ( C22 + R4 ) <= R1;
per cases  by L76 , XXREAL_0:1;
suppose L77: ( C22 + R4 ) < R1;

thus L78: thesis by L77 , NAT_1:12;
end;
suppose L79: ( C22 + R4 ) = R1;

assume L80: (not R4 < R1);
L81: ( R4 + C22 ) >= ( R1 + C22 ) by L80 , XREAL_1:7;
L82: ( R1 - R1 ) >= ( ( R1 + C22 ) - R1 ) by L81 , L79 , XREAL_1:9;
thus L83: contradiction by L82 , L75;
end;
end;
registration
cluster ( NAT ) ->  bounded_below;
coherence;
end;
theorem
L86: (for R5 being Nat holds (for R6 being Nat holds (for B17 , B18 being set holds ((( 0 ) < R5 & R5 < R6) implies { [ R5 , B17 ] , [ R6 , B18 ] } is FinSubsequence))))
proof
let R5 being Nat;
let R6 being Nat;
let C23 , C24 being set;
assume that
L87: ( 0 ) < R5
and
L88: R5 < R6;
reconsider D12 = { [ R5 , C23 ] , [ R6 , C24 ] } as Function by L88 , GRFUNC_1:8;
L89: ( ( 0 ) + 1 ) <= R5 by L87 , NAT_1:13;
L90:
now
let C25 being set;
assume L91: C25 in { R5 , R6 };
L92: (C25 = R5 or C25 = R6) by L91 , TARSKI:def 2;
L93: R5 in ( NAT ) by ORDINAL1:def 12;
thus L94: C25 in ( Seg R6 ) by L93 , L88 , L89 , L92 , FINSEQ_1:3;
end;
L95: (( dom D12 ) = { R5 , R6 } & { R5 , R6 } c= ( Seg R6 )) by L90 , RELAT_1:10 , TARSKI:def 3;
thus L96: thesis by L95 , FINSEQ_1:def 12;
end;
theorem
L97: (for R5 being Nat holds (for R6 being Nat holds (for B19 , B20 being set holds (for B21 being FinSubsequence holds ((R5 < R6 & B21 = { [ R5 , B19 ] , [ R6 , B20 ] }) implies ( Seq B21 ) = <* B19 , B20 *>)))))
proof
let R5 being Nat;
let R6 being Nat;
let C26 , C27 being set;
let C28 being FinSubsequence;
assume that
L98: R5 < R6
and
L99: C28 = { [ R5 , C26 ] , [ R6 , C27 ] };
L100: C28 = ( (R5 , R6) --> (C26 , C27) ) by L98 , L99 , FUNCT_4:67;
L101: [ R5 , C26 ] in C28 by L99 , TARSKI:def 2;
L102: R5 in ( dom C28 ) by L101 , XTUPLE_0:def 12;
L103: [ R6 , C27 ] in C28 by L99 , TARSKI:def 2;
L104: R6 in ( dom C28 ) by L103 , XTUPLE_0:def 12;
L105: ( dom C28 ) = { R5 , R6 } by L99 , RELAT_1:10;
L106: (ex B22 being Nat st ( dom C28 ) c= ( Seg B22 )) by FINSEQ_1:def 12;
L107: R5 >= ( ( 0 ) + 1 ) by L106 , L102 , FINSEQ_1:1;
L108: ( Seq C28 ) = ( C28 * <* R5 , R6 *> ) by L107 , L98 , L105 , FINSEQ_3:45
.= <* ( C28 . R5 ) , ( C28 . R6 ) *> by L102 , L104 , FINSEQ_2:125
.= <* C26 , ( C28 . R6 ) *> by L98 , L100 , FUNCT_4:63
.= <* C26 , C27 *> by L100 , FUNCT_4:63;
thus L109: thesis by L108;
end;
registration
let C29 being (Element of ( NAT ));
cluster ( Seg C29 ) ->  with_non-empty_elements;
coherence
proof
L110: (not ( 0 ) in ( Seg C29 )) by FINSEQ_1:1;
thus L111: thesis by L110 , SETFAM_1:def 8;
end;
end;
registration
let C30 being  with_non-empty_elements set;
cluster  ->  with_non-empty_elements for (Subset of C30);
coherence
proof
let C31 being (Subset of C30);
L113: (not ( 0 ) in C31);
thus L114: thesis by L113 , SETFAM_1:def 8;
end;
end;
registration
let C32 being  with_non-empty_elements set;
let C33 being set;
cluster ( C32 /\ C33 ) ->  with_non-empty_elements;
coherence
proof
reconsider D13 = ( C32 /\ C33 ) as (Subset of C32) by XBOOLE_1:17;
L116: D13 is  with_non-empty_elements;
thus L117: thesis by L116;
end;
cluster ( C33 /\ C32 ) ->  with_non-empty_elements;
coherence;
end;
theorem
L119: (for B23 being (Element of ( NAT )) holds (for B24 being set holds (B23 >= 1 implies { [ B23 , B24 ] } is FinSubsequence)))
proof
let C34 being (Element of ( NAT ));
let C35 being set;
reconsider D14 = { [ C34 , C35 ] } as Function;
L120: ( dom D14 ) = { C34 } by RELAT_1:9;
assume L121: C34 >= 1;
L122: ( dom D14 ) c= ( Seg C34 )
proof
let C36 being set;
assume L123: C36 in ( dom D14 );
L124: C36 = C34 by L123 , L120 , TARSKI:def 1;
thus L125: thesis by L124 , L121;
end;
thus L126: thesis by L122 , FINSEQ_1:def 12;
end;
theorem
L127: (for B25 being (Element of ( NAT )) holds (for B26 being set holds (for B27 being FinSubsequence holds (B27 = { [ 1 , B26 ] } implies ( B25 Shift B27 ) = { [ ( 1 + B25 ) , B26 ] }))))
proof
let C37 being (Element of ( NAT ));
let C38 being set;
let C39 being FinSubsequence;
set D15 = ( C37 Shift C39 );
assume L128: C39 = { [ 1 , C38 ] };
L129: ( card C39 ) = 1 by L128 , CARD_2:42;
L130: ( card ( C37 Shift C39 ) ) = 1 by L129 , PNPROC_1:54;
L131: (ex B28 being set st ( C37 Shift C39 ) = { B28 }) by L130 , CARD_2:42;
L132: ( dom C39 ) = { 1 } by L128 , RELAT_1:9;
L133: ( dom D15 ) = { ( 1 + C37 ) }
proof
thus L134:now
let C40 being set;
assume L135: C40 in ( dom D15 );
L136: C40 in { ( C37 + B29 ) where B29 is (Element of ( NAT )) : B29 in ( dom C39 ) } by L135 , PNPROC_1:def 14;
consider C41 being (Element of ( NAT )) such that L137: ( C37 + C41 ) = C40 and L138: C41 in ( dom C39 ) by L136;
L139: C41 = 1 by L132 , L138 , TARSKI:def 1;
thus L140: C40 in { ( 1 + C37 ) } by L139 , L137 , TARSKI:def 1;
end;
let C42 being set;
assume L141: C42 in { ( 1 + C37 ) };
L142: C42 = ( 1 + C37 ) by L141 , TARSKI:def 1;
L143: 1 in ( dom C39 ) by L132 , TARSKI:def 1;
L144: C42 in { ( C37 + B30 ) where B30 is (Element of ( NAT )) : B30 in ( dom C39 ) } by L143 , L142;
thus L145: thesis by L144 , PNPROC_1:def 14;
end;
L146: ( 1 + C37 ) in ( dom D15 ) by L133 , TARSKI:def 1;
L147: 1 in ( dom C39 ) by L132 , TARSKI:def 1;
L148: ( D15 . ( 1 + C37 ) ) = ( C39 . 1 ) by L147 , PNPROC_1:def 14
.= C38 by L128 , GRFUNC_1:6;
L149: [ ( 1 + C37 ) , C38 ] in D15 by L148 , L146 , FUNCT_1:def 2;
thus L150: thesis by L149 , L131 , TARSKI:def 1;
end;
theorem
L151: (for B31 being FinSubsequence holds (for B32 , B33 being (Element of ( NAT )) holds ((( dom B31 ) c= ( Seg B32 ) & B33 > B32) implies (ex B34 being FinSequence st (B31 c= B34 & ( dom B34 ) = ( Seg B33 ))))))
proof
let C43 being FinSubsequence;
let C44 , C45 being (Element of ( NAT ));
assume that
L152: ( dom C43 ) c= ( Seg C44 )
and
L153: C45 > C44;
reconsider D16 = ( id ( Seg C45 ) ) as Function;
set D17 = ( D16 +* C43 );
L154: ( Seg C44 ) c= ( Seg C45 ) by L153 , FINSEQ_1:5;
L155: ( dom D17 ) = ( ( dom D16 ) \/ ( dom C43 ) ) by FUNCT_4:def 1
.= ( ( Seg C45 ) \/ ( dom C43 ) ) by RELAT_1:45
.= ( Seg C45 ) by L152 , L154 , XBOOLE_1:1 , XBOOLE_1:12;
reconsider D18 = D17 as FinSequence by L155 , FINSEQ_1:def 2;
L156: C43 c= D18 by FUNCT_4:25;
thus L157: thesis by L156 , L155;
end;
theorem
L158: (for B35 being FinSubsequence holds (ex B36 being FinSequence st B35 c= B36))
proof
let C46 being FinSubsequence;
consider C47 being Nat such that L159: ( dom C46 ) c= ( Seg C47 ) by FINSEQ_1:def 12;
reconsider D19 = ( id ( Seg C47 ) ) as Function;
set D20 = ( D19 +* C46 );
L160: ( dom D20 ) = ( ( dom D19 ) \/ ( dom C46 ) ) by FUNCT_4:def 1
.= ( ( Seg C47 ) \/ ( dom C46 ) ) by RELAT_1:45
.= ( Seg C47 ) by L159 , XBOOLE_1:12;
reconsider D21 = D20 as FinSequence by L160 , FINSEQ_1:def 2;
L161: C46 c= D21 by FUNCT_4:25;
thus L162: thesis by L161;
end;
begin
scheme FibInd1 { P1[set] } : (for B37 being non  empty Nat holds P1[ B37 ])
provided
L163: P1[ 1 ]
and
L164: P1[ 2 ]
and
L165: (for B38 being non  empty Nat holds ((P1[ B38 ] & P1[ ( B38 + 1 ) ]) implies P1[ ( B38 + 2 ) ]))
proof
let C48 being non  empty Nat;
defpred S1[ Nat ] means (P1[ $1 ] & P1[ ( $1 + 1 ) ]);
L166: (for B39 being non  empty Nat holds (S1[ B39 ] implies S1[ ( B39 + 1 ) ]))
proof
let C49 being non  empty Nat;
L167: ( C49 + 2 ) = ( ( C49 + 1 ) + 1 );
assume L168: S1[ C49 ];
thus L169: thesis by L168 , L165 , L167;
end;
L170: S1[ 1 ] by L163 , L164;
L171: (for B40 being non  empty Nat holds S1[ B40 ]) from NAT_1:sch 10(L170 , L166);
thus L172: thesis by L171;
end;
scheme FibInd2 { P2[set] } : (for B41 being non  trivial Nat holds P2[ B41 ])
provided
L173: P2[ 2 ]
and
L174: P2[ 3 ]
and
L175: (for B42 being non  trivial Nat holds ((P2[ B42 ] & P2[ ( B42 + 1 ) ]) implies P2[ ( B42 + 2 ) ]))
proof
defpred S2[ Nat ] means (P2[ ( $1 + 1 ) ] & P2[ ( $1 + 2 ) ]);
L176: (for B43 being non  empty Nat holds (S2[ B43 ] implies S2[ ( B43 + 1 ) ]))
proof
let C50 being non  empty Nat;
L177: ( C50 + 1 ) <> ( ( 0 ) + 1 );
L178: ( C50 + 1 ) is non  trivial non  trivial non  trivial non  trivial Nat by L177 , NAT_2:def 1;
assume L179: S2[ C50 ];
L180: P2[ ( ( C50 + 1 ) + 1 ) ] by L179;
thus L181: thesis by L180 , L175 , L178 , L179;
end;
let C51 being non  trivial Nat;
L182: C51 <> 1 by NAT_2:def 1;
L183: C51 > 1 by L182 , NAT_2:19;
L184: ( C51 - 1 ) > ( 1 - 1 ) by L183 , XREAL_1:9;
L185: ( C51 - 1 ) > ( 0 ) by L184;
L186: S2[ 1 ] by L173 , L174;
L187: (for B44 being non  empty Nat holds S2[ B44 ]) from NAT_1:sch 10(L186 , L176);
L188: ( ( C51 -' 1 ) + 1 ) = C51 by L183 , XREAL_1:235;
thus L189: thesis by L188 , L187 , L185;
end;
theorem
L190: ( Fib 2 ) = 1
proof
L191: ( Fib 2 ) = ( Fib ( ( ( 0 ) + 1 ) + 1 ) )
.= 1 by PRE_FF:1;
thus L192: thesis by L191;
end;
theorem
L193: ( Fib 3 ) = 2
proof
L194: ( Fib 3 ) = ( Fib ( ( 1 + 1 ) + 1 ) )
.= 2 by L190 , PRE_FF:1;
thus L195: thesis by L194;
end;
theorem
L196: ( Fib 4 ) = 3
proof
L197: ( Fib 4 ) = ( Fib ( ( 2 + 1 ) + 1 ) )
.= 3 by L190 , L193 , PRE_FF:1;
thus L198: thesis by L197;
end;
theorem
L199: (for B45 being Nat holds ( Fib ( B45 + 2 ) ) = ( ( Fib B45 ) + ( Fib ( B45 + 1 ) ) ))
proof
defpred S3[ Nat ] means ( Fib ( $1 + 2 ) ) = ( ( Fib $1 ) + ( Fib ( $1 + 1 ) ) );
let C52 being Nat;
L200: (for B46 being Nat holds ((S3[ B46 ] & S3[ ( B46 + 1 ) ]) implies S3[ ( B46 + 2 ) ]))
proof
let C53 being Nat;
assume L201: S3[ C53 ];
assume L202: S3[ ( C53 + 1 ) ];
L203: ( Fib ( ( C53 + 2 ) + 2 ) ) = ( Fib ( ( ( C53 + 2 ) + 1 ) + 1 ) )
.= ( ( Fib ( C53 + 2 ) ) + ( Fib ( ( C53 + 2 ) + 1 ) ) ) by PRE_FF:1;
thus L204: thesis by L203;
end;
L205: ( Fib ( ( 0 ) + 2 ) ) = ( Fib ( ( ( 0 ) + 1 ) + 1 ) )
.= ( ( Fib ( 0 ) ) + ( Fib 1 ) ) by PRE_FF:1;
L206: S3[ ( 0 ) ] by L205;
L207: S3[ 1 ] by PRE_FF:1;
L208: (for B47 being Nat holds S3[ B47 ]) from FIB_NUM:sch 1(L206 , L207 , L200);
thus L209: thesis by L208;
end;
theorem
L210: (for B48 being Nat holds ( Fib ( B48 + 3 ) ) = ( ( Fib ( B48 + 2 ) ) + ( Fib ( B48 + 1 ) ) ))
proof
let C54 being Nat;
L211: ( Fib ( C54 + 3 ) ) = ( Fib ( ( C54 + 1 ) + 2 ) )
.= ( ( Fib ( ( C54 + 1 ) + 1 ) ) + ( Fib ( C54 + 1 ) ) ) by L199
.= ( ( Fib ( C54 + 2 ) ) + ( Fib ( C54 + 1 ) ) );
thus L212: thesis by L211;
end;
theorem
L213: (for R1 being Nat holds ( Fib ( R1 + 4 ) ) = ( ( Fib ( R1 + 2 ) ) + ( Fib ( R1 + 3 ) ) ))
proof
let R1 being Nat;
L214: ( Fib ( R1 + 4 ) ) = ( Fib ( ( ( R1 + 2 ) + 1 ) + 1 ) )
.= ( ( Fib ( R1 + 2 ) ) + ( Fib ( ( R1 + 2 ) + 1 ) ) ) by PRE_FF:1;
thus L215: thesis by L214;
end;
theorem
L216: (for R1 being Nat holds ( Fib ( R1 + 5 ) ) = ( ( Fib ( R1 + 3 ) ) + ( Fib ( R1 + 4 ) ) ))
proof
let R1 being Nat;
L217: ( Fib ( R1 + 5 ) ) = ( Fib ( ( ( R1 + 3 ) + 1 ) + 1 ) )
.= ( ( Fib ( R1 + 3 ) ) + ( Fib ( ( R1 + 3 ) + 1 ) ) ) by PRE_FF:1;
thus L218: thesis by L217;
end;
L219: (for B49 being Nat holds ( Fib ( ( 2 * ( B49 + 2 ) ) + 1 ) ) = ( ( Fib ( ( 2 * B49 ) + 3 ) ) + ( Fib ( ( 2 * B49 ) + 4 ) ) ))
proof
let C55 being Nat;
L220: ( Fib ( ( 2 * ( C55 + 2 ) ) + 1 ) ) = ( ( Fib ( ( ( 2 * C55 ) + 2 ) + 1 ) ) + ( Fib ( ( ( ( 2 * C55 ) + 2 ) + 1 ) + 1 ) ) ) by PRE_FF:1
.= ( ( Fib ( ( 2 * C55 ) + 3 ) ) + ( Fib ( ( 2 * C55 ) + 4 ) ) );
thus L221: thesis by L220;
end;
theorem
L222: (for R1 being Nat holds ( Fib ( R1 + 2 ) ) = ( ( Fib ( R1 + 3 ) ) - ( Fib ( R1 + 1 ) ) ))
proof
let R1 being Nat;
L223: ( Fib ( R1 + 3 ) ) = ( Fib ( ( ( R1 + 1 ) + 1 ) + 1 ) )
.= ( ( Fib ( R1 + 1 ) ) + ( Fib ( R1 + 2 ) ) ) by PRE_FF:1;
thus L224: thesis by L223;
end;
theorem
L225: (for B50 being Nat holds ( Fib ( B50 + 1 ) ) = ( ( Fib ( B50 + 2 ) ) - ( Fib B50 ) ))
proof
let C56 being Nat;
L226: ( ( Fib ( C56 + 2 ) ) - ( Fib C56 ) ) = ( ( Fib ( ( C56 + 1 ) + 1 ) ) - ( Fib C56 ) )
.= ( ( ( Fib C56 ) + ( Fib ( C56 + 1 ) ) ) - ( Fib C56 ) ) by PRE_FF:1
.= ( Fib ( C56 + 1 ) );
thus L227: thesis by L226;
end;
theorem
L228: (for R1 being Nat holds ( Fib R1 ) = ( ( Fib ( R1 + 2 ) ) - ( Fib ( R1 + 1 ) ) ))
proof
let R1 being Nat;
L229: ( ( Fib ( R1 + 2 ) ) - ( Fib ( R1 + 1 ) ) ) = ( ( ( Fib R1 ) + ( Fib ( R1 + 1 ) ) ) - ( Fib ( R1 + 1 ) ) ) by L199
.= ( Fib R1 );
thus L230: thesis by L229;
end;
begin
theorem
L231: (for R1 being Nat holds ( ( ( Fib R1 ) * ( Fib ( R1 + 2 ) ) ) - ( ( Fib ( R1 + 1 ) ) ^2 ) ) = ( ( - 1 ) |^ ( R1 + 1 ) ))
proof
let R1 being Nat;
defpred S4[ Nat ] means ( ( ( Fib $1 ) * ( Fib ( $1 + 2 ) ) ) - ( ( Fib ( $1 + 1 ) ) ^2 ) ) = ( ( - 1 ) |^ ( $1 + 1 ) );
L232: (for B51 being Nat holds (S4[ B51 ] implies S4[ ( B51 + 1 ) ]))
proof
let C57 being Nat;
L233: ( ( Fib ( C57 + 2 ) ) - ( Fib ( C57 + 1 ) ) ) = ( ( ( Fib ( C57 + 1 ) ) + ( Fib C57 ) ) - ( Fib ( C57 + 1 ) ) ) by L199
.= ( Fib C57 );
L234: ( ( Fib ( C57 + 3 ) ) - ( Fib ( C57 + 1 ) ) ) = ( ( ( Fib ( C57 + 2 ) ) + ( Fib ( C57 + 1 ) ) ) - ( Fib ( C57 + 1 ) ) ) by L210
.= ( Fib ( C57 + 2 ) );
assume L235: S4[ C57 ];
L236: ( ( - 1 ) |^ ( ( C57 + 1 ) + 1 ) ) = ( ( - 1 ) * ( ( ( Fib C57 ) * ( Fib ( C57 + 2 ) ) ) - ( ( Fib ( C57 + 1 ) ) ^2 ) ) ) by L235 , NEWTON:6
.= ( ( ( Fib ( C57 + 1 ) ) * ( Fib ( ( C57 + 1 ) + 2 ) ) ) - ( ( Fib ( ( C57 + 1 ) + 1 ) ) ^2 ) ) by L233 , L234;
thus L237: thesis by L236;
end;
L238: S4[ ( 0 ) ] by NEWTON:5 , PRE_FF:1;
L239: (for B52 being Nat holds S4[ B52 ]) from NAT_1:sch 2(L238 , L232);
thus L240: thesis by L239;
end;
theorem
L241: (for B53 being non  empty (Element of ( NAT )) holds ( ( ( Fib ( B53 -' 1 ) ) * ( Fib ( B53 + 1 ) ) ) - ( ( Fib B53 ) ^2 ) ) = ( ( - 1 ) |^ B53 ))
proof
let C58 being non  empty (Element of ( NAT ));
set D22 = ( C58 -' 1 );
L242: C58 >= 1 by NAT_2:19;
L243: C58 = ( D22 + 1 ) by L242 , XREAL_1:235;
L244: ( ( ( Fib ( C58 -' 1 ) ) * ( Fib ( C58 + 1 ) ) ) - ( ( Fib C58 ) ^2 ) ) = ( ( ( Fib D22 ) * ( Fib ( D22 + 2 ) ) ) - ( ( Fib ( D22 + 1 ) ) ^2 ) ) by L243
.= ( ( - 1 ) |^ ( ( C58 -' 1 ) + 1 ) ) by L231
.= ( ( - 1 ) |^ C58 ) by L242 , XREAL_1:235;
thus L245: thesis by L244;
end;
theorem
L246: ( tau ) > ( 0 )
proof
L247: ( sqrt 5 ) > ( 0 ) by SQUARE_1:25;
thus L248: thesis by L247 , FIB_NUM:def 1 , XREAL_1:139;
end;
theorem
L249: ( tau_bar ) = ( ( - ( tau ) ) to_power ( - 1 ) )
proof
L250: ( 1 - ( sqrt 5 ) ) <> ( 0 ) by SQUARE_1:20 , SQUARE_1:27;
L251: ( ( - ( tau ) ) to_power ( - 1 ) ) = ( ( ( ( - 1 ) - ( sqrt 5 ) ) / 2 ) #Z ( - 1 ) ) by FIB_NUM:def 1 , POWER:def 2
.= ( 1 / ( ( ( ( - 1 ) - ( sqrt 5 ) ) / 2 ) #Z 1 ) ) by PREPOWER:41
.= ( 1 / ( ( ( - 1 ) - ( sqrt 5 ) ) / 2 ) ) by PREPOWER:35
.= ( 2 / ( - ( 1 + ( sqrt 5 ) ) ) ) by XCMPLX_1:57
.= ( - ( 2 / ( 1 + ( sqrt 5 ) ) ) ) by XCMPLX_1:188
.= ( ( - 2 ) / ( 1 + ( sqrt 5 ) ) ) by XCMPLX_1:187
.= ( ( ( - 2 ) * ( 1 - ( sqrt 5 ) ) ) / ( ( 1 + ( sqrt 5 ) ) * ( 1 - ( sqrt 5 ) ) ) ) by L250 , XCMPLX_1:91
.= ( ( ( - 2 ) * ( 1 - ( sqrt 5 ) ) ) / ( ( 1 ^2 ) - ( ( sqrt 5 ) ^2 ) ) )
.= ( ( ( - 2 ) * ( 1 - ( sqrt 5 ) ) ) / ( 1 - 5 ) ) by SQUARE_1:def 2
.= ( tau_bar ) by FIB_NUM:def 2;
thus L252: thesis by L251;
end;
theorem
L253: (for R1 being Nat holds ( ( - ( tau ) ) to_power ( ( - 1 ) * R1 ) ) = ( ( ( - ( tau ) ) to_power ( - 1 ) ) to_power R1 ))
proof
let R1 being Nat;
L254: ( ( - ( tau ) ) to_power ( ( - 1 ) * R1 ) ) = ( ( - ( tau ) ) #Z ( ( - 1 ) * R1 ) ) by POWER:def 2
.= ( ( ( - ( tau ) ) #Z ( - 1 ) ) #Z R1 ) by PREPOWER:45
.= ( ( 1 / ( ( - ( tau ) ) #Z 1 ) ) #Z R1 ) by PREPOWER:41
.= ( ( 1 / ( - ( tau ) ) ) #Z R1 ) by PREPOWER:35
.= ( ( 1 / ( - ( tau ) ) ) to_power R1 ) by POWER:def 2
.= ( ( ( 1 / ( - ( tau ) ) ) to_power 1 ) to_power R1 ) by POWER:25
.= ( ( ( 1 / ( - ( tau ) ) ) #Z 1 ) to_power R1 ) by POWER:def 2
.= ( ( 1 / ( ( - ( tau ) ) #Z 1 ) ) to_power R1 ) by PREPOWER:42
.= ( ( ( - ( tau ) ) #Z ( - 1 ) ) to_power R1 ) by PREPOWER:41;
thus L255: thesis by L254 , POWER:def 2;
end;
theorem
L256: ( - ( 1 / ( tau ) ) ) = ( tau_bar )
proof
L257: ( 1 - ( sqrt 5 ) ) <> ( 0 ) by SQUARE_1:20 , SQUARE_1:27;
L258: ( - ( 1 / ( tau ) ) ) = ( - ( 1 * ( 2 / ( 1 + ( sqrt 5 ) ) ) ) ) by FIB_NUM:def 1 , XCMPLX_1:57
.= ( - ( 1 * ( ( 2 * ( 1 - ( sqrt 5 ) ) ) / ( ( 1 + ( sqrt 5 ) ) * ( 1 - ( sqrt 5 ) ) ) ) ) ) by L257 , XCMPLX_1:91
.= ( - ( 1 * ( ( 2 * ( 1 - ( sqrt 5 ) ) ) / ( 1 - ( ( sqrt 5 ) ^2 ) ) ) ) )
.= ( - ( 1 * ( ( 2 * ( 1 - ( sqrt 5 ) ) ) / ( 1 - 5 ) ) ) ) by SQUARE_1:def 2
.= ( ( 1 - ( sqrt 5 ) ) / 2 );
thus L259: thesis by L258 , FIB_NUM:def 2;
end;
theorem
L260: (for R3 being Nat holds ( ( ( ( ( tau ) to_power R3 ) ^2 ) - ( 2 * ( ( - 1 ) to_power R3 ) ) ) + ( ( ( tau ) to_power ( - R3 ) ) ^2 ) ) = ( ( ( ( tau ) to_power R3 ) - ( ( tau_bar ) to_power R3 ) ) ^2 ))
proof
let R3 being Nat;
L261: ( ( - 1 ) / ( tau ) ) < ( 0 ) by L246 , XREAL_1:141;
L262: ( - ( 1 / ( tau ) ) ) < ( 0 ) by L261 , XCMPLX_1:187;
L263: ( 1 / ( tau ) ) > ( - (( 0 ) qua Nat) ) by L262;
L264: ( ( ( ( tau ) to_power R3 ) - ( ( tau_bar ) to_power R3 ) ) ^2 ) = ( ( ( ( ( tau ) to_power R3 ) ^2 ) - ( ( 2 * ( ( tau ) to_power R3 ) ) * ( ( - ( 1 / ( tau ) ) ) to_power R3 ) ) ) + ( ( ( - ( 1 / ( tau ) ) ) to_power R3 ) ^2 ) ) by L256
.= ( ( ( ( ( tau ) to_power R3 ) ^2 ) - ( ( 2 * ( ( tau ) to_power R3 ) ) * ( ( ( - 1 ) * ( 1 / ( tau ) ) ) #Z R3 ) ) ) + ( ( ( - ( 1 / ( tau ) ) ) to_power R3 ) ^2 ) ) by POWER:def 2
.= ( ( ( ( ( tau ) to_power R3 ) ^2 ) - ( ( 2 * ( ( tau ) to_power R3 ) ) * ( ( ( - 1 ) #Z R3 ) * ( ( 1 / ( tau ) ) #Z R3 ) ) ) ) + ( ( ( - ( 1 / ( tau ) ) ) to_power R3 ) ^2 ) ) by PREPOWER:40
.= ( ( ( ( ( tau ) to_power R3 ) ^2 ) - ( ( 2 * ( ( tau ) to_power R3 ) ) * ( ( ( 1 / ( tau ) ) |^ R3 ) * ( ( - 1 ) #Z R3 ) ) ) ) + ( ( ( - ( 1 / ( tau ) ) ) to_power R3 ) ^2 ) ) by PREPOWER:36
.= ( ( ( ( ( tau ) to_power R3 ) ^2 ) - ( ( 2 * ( ( tau ) |^ R3 ) ) * ( ( ( 1 / ( tau ) ) |^ R3 ) * ( ( - 1 ) #Z R3 ) ) ) ) + ( ( ( - ( 1 / ( tau ) ) ) to_power R3 ) ^2 ) ) by POWER:41
.= ( ( ( ( ( tau ) to_power R3 ) ^2 ) - ( ( 2 * ( ( ( tau ) |^ R3 ) * ( ( 1 / ( tau ) ) |^ R3 ) ) ) * ( ( - 1 ) #Z R3 ) ) ) + ( ( ( - ( 1 / ( tau ) ) ) to_power R3 ) ^2 ) )
.= ( ( ( ( ( tau ) to_power R3 ) ^2 ) - ( ( 2 * ( ( ( tau ) * ( 1 / ( tau ) ) ) |^ R3 ) ) * ( ( - 1 ) #Z R3 ) ) ) + ( ( ( - ( 1 / ( tau ) ) ) to_power R3 ) ^2 ) ) by NEWTON:7
.= ( ( ( ( ( tau ) to_power R3 ) ^2 ) - ( ( 2 * ( 1 |^ R3 ) ) * ( ( - 1 ) #Z R3 ) ) ) + ( ( ( - ( 1 / ( tau ) ) ) to_power R3 ) ^2 ) ) by L246 , XCMPLX_1:106
.= ( ( ( ( ( tau ) to_power R3 ) ^2 ) - ( ( 2 * 1 ) * ( ( - 1 ) #Z R3 ) ) ) + ( ( ( - ( 1 / ( tau ) ) ) to_power R3 ) ^2 ) ) by NEWTON:10
.= ( ( ( ( ( tau ) to_power R3 ) ^2 ) - ( 2 * ( ( - 1 ) to_power R3 ) ) ) + ( ( ( - ( 1 / ( tau ) ) ) to_power R3 ) ^2 ) ) by POWER:def 2
.= ( ( ( ( ( tau ) to_power R3 ) ^2 ) - ( 2 * ( ( - 1 ) to_power R3 ) ) ) + ( ( ( - ( 1 / ( tau ) ) ) #Z R3 ) ^2 ) ) by POWER:def 2
.= ( ( ( ( ( tau ) to_power R3 ) ^2 ) - ( 2 * ( ( - 1 ) to_power R3 ) ) ) + ( ( ( - ( 1 / ( tau ) ) ) * ( - ( 1 / ( tau ) ) ) ) #Z R3 ) ) by PREPOWER:40
.= ( ( ( ( ( tau ) to_power R3 ) ^2 ) - ( 2 * ( ( - 1 ) to_power R3 ) ) ) + ( ( ( - ( 1 / ( tau ) ) ) ^2 ) |^ R3 ) ) by PREPOWER:36
.= ( ( ( ( ( tau ) to_power R3 ) ^2 ) - ( 2 * ( ( - 1 ) to_power R3 ) ) ) + ( ( ( 1 / ( tau ) ) ^2 ) to_power R3 ) ) by POWER:41
.= ( ( ( ( ( tau ) to_power R3 ) ^2 ) - ( 2 * ( ( - 1 ) to_power R3 ) ) ) + ( ( ( 1 / ( tau ) ) to_power R3 ) ^2 ) ) by L263 , POWER:30
.= ( ( ( ( ( tau ) to_power R3 ) ^2 ) - ( 2 * ( ( - 1 ) to_power R3 ) ) ) + ( ( ( tau ) to_power ( - R3 ) ) ^2 ) ) by L246 , POWER:32;
thus L265: thesis by L264;
end;
theorem
L266: (for B54 , B55 being non  empty (Element of ( NAT )) holds (B55 <= B54 implies ( ( ( Fib B54 ) ^2 ) - ( ( Fib ( B54 + B55 ) ) * ( Fib ( B54 -' B55 ) ) ) ) = ( ( ( - 1 ) |^ ( B54 -' B55 ) ) * ( ( Fib B55 ) ^2 ) )))
proof
set D23 = ( tau );
set D24 = ( 1 / ( sqrt 5 ) );
L267: ( - 1 ) is non  empty;
reconsider D25 = D23 as non  empty  real number by L246;
let C59 , C60 being non  empty (Element of ( NAT ));
assume that
L268: C60 <= C59;
set D26 = ( C59 -' C60 );
set D27 = ( C59 + C60 );
L269: ( D27 + D26 ) = ( ( C60 + C59 ) + ( C59 - C60 ) ) by L268 , XREAL_1:233
.= ( ( ( C60 + C59 ) + C59 ) - C60 )
.= ( ( C60 + ( 2 * C59 ) ) -' C60 ) by NAT_1:12 , XREAL_1:233
.= ( ( C60 -' C60 ) + ( 2 * C59 ) ) by NAT_D:38
.= ( ( 0 ) + ( 2 * C59 ) ) by XREAL_1:232
.= ( 2 * C59 );
L270: ( D27 - D26 ) = ( ( C59 + C60 ) - ( C59 - C60 ) ) by L268 , XREAL_1:233
.= ( 2 * C60 );
set D28 = ( D25 to_power ( - D26 ) );
set D29 = ( D25 to_power ( - D27 ) );
set D30 = ( D25 to_power ( - C59 ) );
set D31 = ( D25 to_power D26 );
set D32 = ( D25 to_power D27 );
set D33 = ( D25 to_power C59 );
L271: (( - D25 ) <> ( 0 ) & ( - 1 ) = ( ( 2 * ( - 1 ) ) + 1 ));
L272: ( ( ( Fib C59 ) ^2 ) - ( ( Fib D27 ) * ( Fib D26 ) ) ) = ( ( ( ( D33 - ( ( tau_bar ) to_power C59 ) ) / ( sqrt 5 ) ) ^2 ) - ( ( Fib D27 ) * ( Fib D26 ) ) ) by FIB_NUM:7
.= ( ( ( ( D33 - ( ( tau_bar ) to_power C59 ) ) / ( sqrt 5 ) ) ^2 ) - ( ( ( D32 - ( ( tau_bar ) to_power D27 ) ) / ( sqrt 5 ) ) * ( Fib D26 ) ) ) by FIB_NUM:7
.= ( ( ( ( D33 - ( ( tau_bar ) to_power C59 ) ) / ( sqrt 5 ) ) ^2 ) - ( ( ( D32 - ( ( tau_bar ) to_power D27 ) ) / ( sqrt 5 ) ) * ( ( D31 - ( ( tau_bar ) to_power D26 ) ) / ( sqrt 5 ) ) ) ) by FIB_NUM:7
.= ( ( ( ( D33 - ( ( tau_bar ) to_power C59 ) ) * D24 ) ^2 ) - ( ( ( D32 - ( ( tau_bar ) to_power D27 ) ) / ( sqrt 5 ) ) * ( ( D31 - ( ( tau_bar ) to_power D26 ) ) / ( sqrt 5 ) ) ) ) by XCMPLX_1:99
.= ( ( ( ( D33 - ( ( tau_bar ) to_power C59 ) ) * D24 ) ^2 ) - ( ( ( D32 - ( ( tau_bar ) to_power D27 ) ) * D24 ) * ( ( D31 - ( ( tau_bar ) to_power D26 ) ) / ( sqrt 5 ) ) ) ) by XCMPLX_1:99
.= ( ( ( ( D33 - ( ( tau_bar ) to_power C59 ) ) * D24 ) ^2 ) - ( ( ( D32 - ( ( tau_bar ) to_power D27 ) ) * D24 ) * ( ( D31 - ( ( tau_bar ) to_power D26 ) ) * D24 ) ) ) by XCMPLX_1:99
.= ( ( D24 ^2 ) * ( ( ( ( D33 ^2 ) - ( ( 2 * D33 ) * ( ( ( - D25 ) to_power ( - 1 ) ) to_power C59 ) ) ) + ( ( ( ( - D25 ) to_power ( - 1 ) ) to_power C59 ) ^2 ) ) - ( ( D32 - ( ( ( - D25 ) to_power ( - 1 ) ) to_power D27 ) ) * ( D31 - ( ( ( - D25 ) to_power ( - 1 ) ) to_power D26 ) ) ) ) ) by L249
.= ( ( D24 ^2 ) * ( ( ( ( D33 ^2 ) - ( ( 2 * D33 ) * ( ( - D25 ) to_power ( ( - 1 ) * C59 ) ) ) ) + ( ( ( ( - D25 ) to_power ( - 1 ) ) to_power C59 ) ^2 ) ) - ( ( D32 - ( ( ( - D25 ) to_power ( - 1 ) ) to_power D27 ) ) * ( D31 - ( ( ( - D25 ) to_power ( - 1 ) ) to_power D26 ) ) ) ) ) by L271 , L21
.= ( ( D24 ^2 ) * ( ( ( ( D33 ^2 ) - ( ( 2 * D33 ) * ( ( - D25 ) to_power ( - C59 ) ) ) ) + ( ( ( - D25 ) to_power ( ( - 1 ) * C59 ) ) ^2 ) ) - ( ( D32 - ( ( ( - D25 ) to_power ( - 1 ) ) to_power D27 ) ) * ( D31 - ( ( ( - D25 ) to_power ( - 1 ) ) to_power D26 ) ) ) ) ) by L271 , L21
.= ( ( D24 ^2 ) * ( ( ( ( D33 ^2 ) - ( ( 2 * D33 ) * ( ( - D25 ) to_power ( - C59 ) ) ) ) + ( ( ( - D25 ) to_power ( - C59 ) ) ^2 ) ) - ( ( D32 - ( ( - D25 ) to_power ( ( - 1 ) * D27 ) ) ) * ( D31 - ( ( ( - D25 ) to_power ( - 1 ) ) to_power D26 ) ) ) ) ) by L253
.= ( ( D24 ^2 ) * ( ( ( ( D33 ^2 ) - ( ( 2 * D33 ) * ( ( - D25 ) to_power ( - C59 ) ) ) ) + ( ( ( - D25 ) to_power ( - C59 ) ) ^2 ) ) - ( ( D32 - ( ( - D25 ) to_power ( - D27 ) ) ) * ( D31 - ( ( - D25 ) to_power ( ( - 1 ) * D26 ) ) ) ) ) ) by L253
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( ( 2 * D33 ) * ( ( ( - 1 ) * D25 ) to_power ( - C59 ) ) ) ) + ( ( ( ( - 1 ) * D25 ) to_power ( - C59 ) ) ^2 ) ) - ( D32 * D31 ) ) + ( D32 * ( ( ( - 1 ) * D25 ) to_power ( - D26 ) ) ) ) + ( ( ( ( - 1 ) * D25 ) to_power ( - D27 ) ) * D31 ) ) - ( ( ( ( - 1 ) * D25 ) to_power ( - D27 ) ) * ( ( ( - 1 ) * D25 ) to_power ( - D26 ) ) ) ) )
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( ( 2 * D33 ) * ( ( ( - 1 ) * D25 ) to_power ( - C59 ) ) ) ) + ( ( ( ( - 1 ) * D25 ) to_power ( - C59 ) ) ^2 ) ) - ( D32 * D31 ) ) + ( D32 * ( ( ( - 1 ) * D25 ) to_power ( - D26 ) ) ) ) + ( ( ( ( - 1 ) * D25 ) to_power ( - D27 ) ) * D31 ) ) - ( ( ( ( - 1 ) * D25 ) to_power ( - D27 ) ) * ( ( ( - 1 ) to_power ( - D26 ) ) * D28 ) ) ) ) by L11
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( ( 2 * D33 ) * ( ( ( - 1 ) to_power ( - C59 ) ) * D30 ) ) ) + ( ( ( ( - 1 ) * D25 ) to_power ( - C59 ) ) ^2 ) ) - ( D32 * D31 ) ) + ( D32 * ( ( ( - 1 ) * D25 ) to_power ( - D26 ) ) ) ) + ( ( ( ( - 1 ) * D25 ) to_power ( - D27 ) ) * D31 ) ) - ( ( ( ( - 1 ) * D25 ) to_power ( - D27 ) ) * ( ( ( - 1 ) to_power ( - D26 ) ) * D28 ) ) ) ) by L11
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( ( 2 * D33 ) * ( ( ( - 1 ) to_power ( - C59 ) ) * D30 ) ) ) + ( ( ( ( - 1 ) to_power ( - C59 ) ) * D30 ) ^2 ) ) - ( D32 * D31 ) ) + ( D32 * ( ( ( - 1 ) * D25 ) to_power ( - D26 ) ) ) ) + ( ( ( ( - 1 ) * D25 ) to_power ( - D27 ) ) * D31 ) ) - ( ( ( ( - 1 ) * D25 ) to_power ( - D27 ) ) * ( ( ( - 1 ) to_power ( - D26 ) ) * D28 ) ) ) ) by L11
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( ( 2 * D33 ) * ( ( ( - 1 ) to_power ( - C59 ) ) * D30 ) ) ) + ( ( ( ( - 1 ) to_power ( - C59 ) ) * D30 ) ^2 ) ) - ( D32 * D31 ) ) + ( D32 * ( ( ( - 1 ) to_power ( - D26 ) ) * D28 ) ) ) + ( ( ( ( - 1 ) * D25 ) to_power ( - D27 ) ) * D31 ) ) - ( ( ( ( - 1 ) * D25 ) to_power ( - D27 ) ) * ( ( ( - 1 ) to_power ( - D26 ) ) * D28 ) ) ) ) by L11
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( ( 2 * D33 ) * ( ( ( - 1 ) to_power ( - C59 ) ) * D30 ) ) ) + ( ( ( ( - 1 ) to_power ( - C59 ) ) * D30 ) ^2 ) ) - ( D32 * D31 ) ) + ( D32 * ( ( ( - 1 ) to_power ( - D26 ) ) * D28 ) ) ) + ( ( ( ( - 1 ) to_power ( - D27 ) ) * D29 ) * D31 ) ) - ( ( ( ( - 1 ) * D25 ) to_power ( - D27 ) ) * ( ( ( - 1 ) to_power ( - D26 ) ) * D28 ) ) ) ) by L11
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( ( 2 * D33 ) * ( ( ( - 1 ) to_power ( - C59 ) ) * D30 ) ) ) + ( ( ( ( - 1 ) to_power ( - C59 ) ) * D30 ) ^2 ) ) - ( D32 * D31 ) ) + ( D32 * ( ( ( - 1 ) to_power ( - D26 ) ) * D28 ) ) ) + ( ( ( ( - 1 ) to_power ( - D27 ) ) * D29 ) * D31 ) ) - ( ( ( ( - 1 ) to_power ( - D27 ) ) * D29 ) * ( ( ( - 1 ) to_power ( - D26 ) ) * D28 ) ) ) ) by L11
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( ( 2 * ( D33 * D30 ) ) * ( ( - 1 ) to_power ( - C59 ) ) ) ) + ( ( ( ( - 1 ) to_power ( - C59 ) ) ^2 ) * ( D30 ^2 ) ) ) - ( D32 * D31 ) ) + ( ( D32 * ( ( - 1 ) to_power ( - D26 ) ) ) * D28 ) ) + ( ( ( ( - 1 ) to_power ( - D27 ) ) * D29 ) * D31 ) ) - ( ( ( ( ( - 1 ) to_power ( - D27 ) ) * D29 ) * ( ( - 1 ) to_power ( - D26 ) ) ) * D28 ) ) )
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( ( 2 * 1 ) * ( ( - 1 ) to_power ( - C59 ) ) ) ) + ( ( ( ( - 1 ) to_power ( - C59 ) ) ^2 ) * ( D30 ^2 ) ) ) - ( D32 * D31 ) ) + ( ( D32 * ( ( - 1 ) to_power ( - D26 ) ) ) * D28 ) ) + ( ( ( ( - 1 ) to_power ( - D27 ) ) * D29 ) * D31 ) ) - ( ( ( ( ( - 1 ) to_power ( - D27 ) ) * D29 ) * ( ( - 1 ) to_power ( - D26 ) ) ) * D28 ) ) ) by L33
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( 2 * ( ( - 1 ) to_power ( - C59 ) ) ) ) + ( 1 * ( D30 ^2 ) ) ) - ( D32 * D31 ) ) + ( ( D32 * D28 ) * ( ( - 1 ) to_power ( - D26 ) ) ) ) + ( ( ( ( - 1 ) to_power ( - D27 ) ) * D29 ) * D31 ) ) - ( ( ( ( ( - 1 ) to_power ( - D27 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) * D29 ) * D28 ) ) ) by L24
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( 2 * ( ( - 1 ) to_power ( - C59 ) ) ) ) + ( D30 ^2 ) ) - ( D32 * D31 ) ) + ( ( D32 * ( 1 / D31 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) ) + ( ( ( ( - 1 ) to_power ( - D27 ) ) * D29 ) * D31 ) ) - ( ( ( ( ( - 1 ) to_power ( - D27 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) * D29 ) * D28 ) ) ) by L246 , POWER:28
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( 2 * ( ( - 1 ) to_power ( - C59 ) ) ) ) + ( D30 ^2 ) ) - ( D32 * D31 ) ) + ( ( D32 / D31 ) * ( ( - 1 ) to_power ( - D26 ) ) ) ) + ( ( ( ( - 1 ) to_power ( - D27 ) ) * D29 ) * D31 ) ) - ( ( ( ( ( - 1 ) to_power ( - D27 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) * D29 ) * D28 ) ) ) by XCMPLX_1:99
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( 2 * ( ( - 1 ) to_power ( - C59 ) ) ) ) + ( D30 ^2 ) ) - ( D32 * D31 ) ) + ( ( D25 to_power ( D27 - D26 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) ) + ( ( ( ( - 1 ) to_power ( - D27 ) ) * D29 ) * D31 ) ) - ( ( ( ( ( - 1 ) to_power ( - D27 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) * D29 ) * D28 ) ) ) by L246 , POWER:29
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( 2 * ( ( - 1 ) to_power ( - C59 ) ) ) ) + ( D30 ^2 ) ) - ( D25 to_power ( D27 + D26 ) ) ) + ( ( D25 to_power ( D27 - D26 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) ) + ( ( ( - 1 ) to_power ( - D27 ) ) * ( D31 * D29 ) ) ) - ( ( ( ( - 1 ) to_power ( - D27 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) * ( D29 * D28 ) ) ) ) by L246 , POWER:27
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( 2 * ( ( - 1 ) to_power ( - C59 ) ) ) ) + ( D30 ^2 ) ) - ( D25 to_power ( D27 + D26 ) ) ) + ( ( D25 to_power ( D27 - D26 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) ) + ( ( ( - 1 ) to_power ( - D27 ) ) * ( D31 * ( 1 / D32 ) ) ) ) - ( ( ( ( - 1 ) to_power ( - D27 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) * ( D29 * D28 ) ) ) ) by L246 , POWER:28
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( 2 * ( ( - 1 ) to_power ( - C59 ) ) ) ) + ( D30 ^2 ) ) - ( D25 to_power ( D27 + D26 ) ) ) + ( ( D25 to_power ( D27 - D26 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) ) + ( ( ( - 1 ) to_power ( - D27 ) ) * ( D31 / D32 ) ) ) - ( ( ( ( - 1 ) to_power ( - D27 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) * ( D29 * D28 ) ) ) ) by XCMPLX_1:99
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( 2 * ( ( - 1 ) to_power ( - C59 ) ) ) ) + ( D30 ^2 ) ) - ( D25 to_power ( D27 + D26 ) ) ) + ( ( D25 to_power ( D27 - D26 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) ) + ( ( ( - 1 ) to_power ( - D27 ) ) * ( D25 to_power ( D26 - D27 ) ) ) ) - ( ( ( ( - 1 ) to_power ( - D27 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) * ( D29 * D28 ) ) ) ) by L246 , POWER:29
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( 2 * ( ( - 1 ) to_power ( - C59 ) ) ) ) + ( D30 ^2 ) ) - ( D25 to_power ( D27 + D26 ) ) ) + ( ( D25 to_power ( D27 - D26 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) ) + ( ( ( - 1 ) to_power ( - D27 ) ) * ( D25 to_power ( D26 - D27 ) ) ) ) - ( ( ( - 1 ) to_power ( ( - D27 ) - D26 ) ) * ( D29 * D28 ) ) ) ) by L267 , L27
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( 2 * ( ( - 1 ) to_power ( - C59 ) ) ) ) + ( D30 ^2 ) ) - ( D25 to_power ( 2 * C59 ) ) ) + ( ( D25 to_power ( 2 * C60 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) ) + ( ( ( - 1 ) to_power ( - D27 ) ) * ( D25 to_power ( - ( 2 * C60 ) ) ) ) ) - ( ( ( - 1 ) to_power ( - ( 2 * C59 ) ) ) * ( D25 to_power ( - ( 2 * C59 ) ) ) ) ) ) by L269 , L27
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 ^2 ) - ( 2 * ( ( - 1 ) to_power ( - C59 ) ) ) ) + ( D30 ^2 ) ) - ( D25 to_power ( 2 * C59 ) ) ) + ( ( D25 to_power ( 2 * C60 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) ) + ( ( ( - 1 ) to_power ( - D27 ) ) * ( D25 to_power ( - ( 2 * C60 ) ) ) ) ) - ( 1 * ( D25 to_power ( - ( 2 * C59 ) ) ) ) ) ) by L30
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D33 to_power 2 ) - ( 2 * ( ( - 1 ) to_power ( - C59 ) ) ) ) + ( D30 ^2 ) ) - ( D25 to_power ( 2 * C59 ) ) ) + ( ( D25 to_power ( 2 * C60 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) ) + ( ( ( - 1 ) to_power ( - D27 ) ) * ( D25 to_power ( - ( 2 * C60 ) ) ) ) ) - ( 1 * ( D25 to_power ( - ( 2 * C59 ) ) ) ) ) ) by POWER:46
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D25 to_power ( 2 * C59 ) ) - ( 2 * ( ( - 1 ) to_power ( - C59 ) ) ) ) + ( D30 ^2 ) ) - ( D25 to_power ( 2 * C59 ) ) ) + ( ( D25 to_power ( 2 * C60 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) ) + ( ( ( - 1 ) to_power ( - D27 ) ) * ( D25 to_power ( - ( 2 * C60 ) ) ) ) ) - ( D25 to_power ( - ( 2 * C59 ) ) ) ) ) by L246 , POWER:33
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D25 to_power ( 2 * C59 ) ) - ( 2 * ( ( - 1 ) to_power C59 ) ) ) + ( D30 ^2 ) ) - ( D25 to_power ( 2 * C59 ) ) ) + ( ( D25 to_power ( 2 * C60 ) ) * ( ( - 1 ) to_power ( - D26 ) ) ) ) + ( ( ( - 1 ) to_power ( - D27 ) ) * ( D25 to_power ( - ( 2 * C60 ) ) ) ) ) - ( D25 to_power ( - ( 2 * C59 ) ) ) ) ) by L43
.= ( ( D24 ^2 ) * ( ( ( ( ( ( ( D25 to_power ( 2 * C59 ) ) - ( D25 to_power ( 2 * C59 ) ) ) - ( 2 * ( ( - 1 ) to_power C59 ) ) ) + ( D30 ^2 ) ) + ( ( D25 to_power ( 2 * C60 ) ) * ( ( - 1 ) to_power D26 ) ) ) + ( ( ( - 1 ) to_power ( - D27 ) ) * ( D25 to_power ( - ( 2 * C60 ) ) ) ) ) - ( D25 to_power ( - ( 2 * C59 ) ) ) ) ) by L43
.= ( ( D24 ^2 ) * ( ( ( ( ( - ( 2 * ( ( - 1 ) to_power C59 ) ) ) + ( D30 ^2 ) ) + ( ( D25 to_power ( 2 * C60 ) ) * ( ( - 1 ) to_power D26 ) ) ) + ( ( ( - 1 ) to_power D27 ) * ( D25 to_power ( - ( 2 * C60 ) ) ) ) ) - ( D25 to_power ( 2 * ( - C59 ) ) ) ) ) by L43
.= ( ( D24 ^2 ) * ( ( ( ( ( - ( 2 * ( ( - 1 ) to_power C59 ) ) ) + ( D30 ^2 ) ) + ( ( D25 to_power ( 2 * C60 ) ) * ( ( - 1 ) to_power D26 ) ) ) + ( ( ( - 1 ) to_power D27 ) * ( D25 to_power ( - ( 2 * C60 ) ) ) ) ) - ( ( D25 to_power ( - C59 ) ) to_power 2 ) ) ) by L246 , POWER:33
.= ( ( D24 ^2 ) * ( ( ( ( ( - ( 2 * ( ( - 1 ) to_power C59 ) ) ) + ( ( D25 to_power ( 2 * C60 ) ) * ( ( - 1 ) to_power D26 ) ) ) + ( ( ( - 1 ) to_power D27 ) * ( D25 to_power ( - ( 2 * C60 ) ) ) ) ) + ( D30 ^2 ) ) - ( D30 ^2 ) ) ) by POWER:46
.= ( ( D24 ^2 ) * ( ( ( - ( 2 * ( ( - 1 ) to_power ( ( C59 -' C60 ) + C60 ) ) ) ) + ( ( ( - 1 ) to_power D26 ) * ( D25 to_power ( 2 * C60 ) ) ) ) + ( ( ( - 1 ) to_power ( ( 2 * C60 ) + D26 ) ) * ( D25 to_power ( - ( 2 * C60 ) ) ) ) ) ) by L270
.= ( ( D24 ^2 ) * ( ( ( - ( 2 * ( ( ( - 1 ) to_power C60 ) * ( ( - 1 ) to_power ( C59 -' C60 ) ) ) ) ) + ( ( ( - 1 ) to_power D26 ) * ( D25 to_power ( 2 * C60 ) ) ) ) + ( ( ( - 1 ) to_power ( ( 2 * C60 ) + D26 ) ) * ( D25 to_power ( - ( 2 * C60 ) ) ) ) ) ) by L19
.= ( ( D24 ^2 ) * ( ( ( - ( 2 * ( ( ( - 1 ) to_power C60 ) * ( ( - 1 ) to_power ( C59 -' C60 ) ) ) ) ) + ( ( ( - 1 ) to_power ( C59 -' C60 ) ) * ( D25 to_power ( 2 * C60 ) ) ) ) + ( ( ( ( - 1 ) to_power ( 2 * C60 ) ) * ( ( - 1 ) to_power ( C59 -' C60 ) ) ) * ( D25 to_power ( - ( 2 * C60 ) ) ) ) ) ) by L19
.= ( ( ( D24 ^2 ) * ( ( ( - ( 2 * ( ( - 1 ) to_power C60 ) ) ) + ( D25 to_power ( 2 * C60 ) ) ) + ( ( D25 to_power ( - ( 2 * C60 ) ) ) * ( ( - 1 ) to_power ( 2 * C60 ) ) ) ) ) * ( ( - 1 ) to_power ( C59 -' C60 ) ) )
.= ( ( ( D24 ^2 ) * ( ( ( - ( 2 * ( ( - 1 ) to_power C60 ) ) ) + ( D25 to_power ( 2 * C60 ) ) ) + ( ( D25 to_power ( - ( 2 * C60 ) ) ) * 1 ) ) ) * ( ( - 1 ) to_power ( C59 -' C60 ) ) ) by L8
.= ( ( ( D24 ^2 ) * ( ( ( D25 to_power ( 2 * C60 ) ) - ( 2 * ( ( - 1 ) to_power C60 ) ) ) + ( D25 to_power ( 2 * ( - C60 ) ) ) ) ) * ( ( - 1 ) to_power ( C59 -' C60 ) ) )
.= ( ( ( D24 ^2 ) * ( ( ( ( D25 to_power C60 ) to_power 2 ) - ( 2 * ( ( - 1 ) to_power C60 ) ) ) + ( D25 to_power ( ( - C60 ) * 2 ) ) ) ) * ( ( - 1 ) to_power ( C59 -' C60 ) ) ) by L246 , POWER:33
.= ( ( ( D24 ^2 ) * ( ( ( ( D25 to_power C60 ) ^2 ) - ( 2 * ( ( - 1 ) to_power C60 ) ) ) + ( D25 to_power ( ( - C60 ) * 2 ) ) ) ) * ( ( - 1 ) to_power ( C59 -' C60 ) ) ) by POWER:46
.= ( ( ( - 1 ) to_power ( C59 -' C60 ) ) * ( ( D24 ^2 ) * ( ( ( ( D25 to_power C60 ) ^2 ) - ( 2 * ( ( - 1 ) to_power C60 ) ) ) + ( ( D25 to_power ( - C60 ) ) to_power 2 ) ) ) ) by L246 , POWER:33
.= ( ( ( - 1 ) to_power ( C59 -' C60 ) ) * ( ( D24 ^2 ) * ( ( ( ( D25 to_power C60 ) ^2 ) - ( 2 * ( ( - 1 ) to_power C60 ) ) ) + ( ( D25 to_power ( - C60 ) ) ^2 ) ) ) ) by POWER:46
.= ( ( ( - 1 ) to_power ( C59 -' C60 ) ) * ( ( D24 ^2 ) * ( ( ( ( tau ) to_power C60 ) - ( ( tau_bar ) to_power C60 ) ) ^2 ) ) ) by L260
.= ( ( ( - 1 ) to_power ( C59 -' C60 ) ) * ( ( ( ( ( tau ) to_power C60 ) - ( ( tau_bar ) to_power C60 ) ) * D24 ) ^2 ) )
.= ( ( ( - 1 ) to_power ( C59 -' C60 ) ) * ( ( ( ( ( tau ) to_power C60 ) - ( ( tau_bar ) to_power C60 ) ) / ( sqrt 5 ) ) ^2 ) ) by XCMPLX_1:99
.= ( ( ( - 1 ) |^ ( C59 -' C60 ) ) * ( ( ( ( D25 to_power C60 ) - ( ( tau_bar ) to_power C60 ) ) / ( sqrt 5 ) ) ^2 ) ) by POWER:41
.= ( ( ( - 1 ) |^ ( C59 -' C60 ) ) * ( ( Fib C60 ) ^2 ) ) by FIB_NUM:7;
thus L273: thesis by L272;
end;
theorem
L274: (for R1 being Nat holds ( ( ( Fib R1 ) ^2 ) + ( ( Fib ( R1 + 1 ) ) ^2 ) ) = ( Fib ( ( 2 * R1 ) + 1 ) ))
proof
let R1 being Nat;
defpred S5[ Nat ] means ( ( ( Fib $1 ) ^2 ) + ( ( Fib ( $1 + 1 ) ) ^2 ) ) = ( Fib ( ( 2 * $1 ) + 1 ) );
L275: S5[ ( 0 ) ] by PRE_FF:1;
L276: (for B56 being Nat holds ((S5[ B56 ] & S5[ ( B56 + 1 ) ]) implies S5[ ( B56 + 2 ) ]))
proof
let C61 being Nat;
assume L277: S5[ C61 ];
assume L278: S5[ ( C61 + 1 ) ];
L279: ( Fib ( ( 2 * ( C61 + 2 ) ) + 1 ) ) = ( ( Fib ( ( 2 * C61 ) + 3 ) ) + ( Fib ( ( 2 * C61 ) + 4 ) ) ) by L219
.= ( ( Fib ( ( 2 * C61 ) + 3 ) ) + ( ( Fib ( ( 2 * C61 ) + 3 ) ) + ( Fib ( ( 2 * C61 ) + 2 ) ) ) ) by L213
.= ( ( ( Fib ( ( 2 * C61 ) + 3 ) ) + ( Fib ( ( 2 * C61 ) + 3 ) ) ) + ( Fib ( ( 2 * C61 ) + 2 ) ) )
.= ( ( 2 * ( Fib ( ( 2 * C61 ) + 3 ) ) ) + ( ( Fib ( ( 2 * C61 ) + 3 ) ) - ( Fib ( ( 2 * C61 ) + 1 ) ) ) ) by L222
.= ( ( ( 2 * ( ( Fib ( C61 + 1 ) ) ^2 ) ) + ( 2 * ( ( Fib ( C61 + 2 ) ) ^2 ) ) ) + ( ( ( Fib ( C61 + 2 ) ) - ( Fib C61 ) ) * ( ( Fib ( C61 + 2 ) ) + ( Fib C61 ) ) ) ) by L277 , L278
.= ( ( ( 2 * ( ( Fib ( C61 + 1 ) ) ^2 ) ) + ( 2 * ( ( Fib ( C61 + 2 ) ) ^2 ) ) ) + ( ( Fib ( C61 + 1 ) ) * ( ( Fib ( C61 + 2 ) ) + ( Fib C61 ) ) ) ) by L225
.= ( ( ( Fib ( C61 + 1 ) ) * ( ( Fib ( C61 + 1 ) ) + ( ( Fib ( C61 + 1 ) ) + ( Fib C61 ) ) ) ) + ( ( Fib ( C61 + 2 ) ) * ( ( Fib ( C61 + 2 ) ) + ( ( Fib ( C61 + 2 ) ) + ( Fib ( C61 + 1 ) ) ) ) ) )
.= ( ( ( Fib ( C61 + 1 ) ) * ( ( Fib ( C61 + 1 ) ) + ( Fib ( C61 + 2 ) ) ) ) + ( ( Fib ( C61 + 2 ) ) * ( ( Fib ( C61 + 2 ) ) + ( ( Fib ( C61 + 2 ) ) + ( Fib ( C61 + 1 ) ) ) ) ) ) by L199
.= ( ( ( Fib ( C61 + 1 ) ) * ( ( Fib ( C61 + 2 ) ) + ( Fib ( C61 + 1 ) ) ) ) + ( ( Fib ( C61 + 2 ) ) * ( ( Fib ( C61 + 2 ) ) + ( Fib ( C61 + 3 ) ) ) ) ) by L210
.= ( ( ( Fib ( C61 + 1 ) ) * ( Fib ( C61 + 3 ) ) ) + ( ( ( Fib ( C61 + 2 ) ) * ( Fib ( C61 + 2 ) ) ) + ( ( Fib ( C61 + 2 ) ) * ( Fib ( C61 + 3 ) ) ) ) ) by L210
.= ( ( ( Fib ( C61 + 3 ) ) * ( ( Fib ( C61 + 1 ) ) + ( Fib ( C61 + 2 ) ) ) ) + ( ( Fib ( C61 + 2 ) ) ^2 ) )
.= ( ( ( Fib ( C61 + 3 ) ) ^2 ) + ( ( Fib ( C61 + 2 ) ) ^2 ) ) by L210;
thus L280: thesis by L279;
end;
L281: S5[ 1 ] by L190 , PRE_FF:1;
L282: (for B57 being Nat holds S5[ B57 ]) from FIB_NUM:sch 1(L275 , L281 , L276);
thus L283: thesis by L282;
end;
theorem
L284: (for R1 being Nat holds (for B58 being non  empty (Element of ( NAT )) holds ( Fib ( R1 + B58 ) ) = ( ( ( Fib B58 ) * ( Fib ( R1 + 1 ) ) ) + ( ( Fib ( B58 -' 1 ) ) * ( Fib R1 ) ) )))
proof
let R1 being Nat;
defpred S6[ Nat ] means ( Fib ( R1 + $1 ) ) = ( ( ( Fib $1 ) * ( Fib ( R1 + 1 ) ) ) + ( ( Fib ( $1 -' 1 ) ) * ( Fib R1 ) ) );
L285: ( ( ( Fib 1 ) * ( Fib ( R1 + 1 ) ) ) + ( ( Fib ( 1 -' 1 ) ) * ( Fib R1 ) ) ) = ( ( 1 * ( Fib ( R1 + 1 ) ) ) + ( ( 0 ) * ( Fib R1 ) ) ) by PRE_FF:1 , XREAL_1:232
.= ( Fib ( R1 + 1 ) );
L286: S6[ 1 ] by L285;
L287: (for B59 being non  empty Nat holds ((S6[ B59 ] & S6[ ( B59 + 1 ) ]) implies S6[ ( B59 + 2 ) ]))
proof
let C62 being non  empty Nat;
L288: C62 >= 1 by NAT_2:19;
set D34 = ( ( Fib ( C62 + 2 ) ) * ( Fib ( R1 + 1 ) ) );
set D35 = ( ( Fib ( R1 + 1 ) ) * ( Fib ( C62 + 2 ) ) );
set D36 = ( C62 -' 1 );
assume L289: (S6[ C62 ] & S6[ ( C62 + 1 ) ]);
L290: ( Fib ( R1 + ( C62 + 2 ) ) ) = ( Fib ( ( R1 + C62 ) + 2 ) )
.= ( ( Fib ( R1 + C62 ) ) + ( Fib ( ( R1 + C62 ) + 1 ) ) ) by L199
.= ( ( ( ( Fib C62 ) * ( Fib ( R1 + 1 ) ) ) + ( ( Fib D36 ) * ( Fib R1 ) ) ) + ( ( ( Fib ( C62 + 1 ) ) * ( Fib ( R1 + 1 ) ) ) + ( ( Fib ( C62 + ( 1 -' 1 ) ) ) * ( Fib R1 ) ) ) ) by L289 , NAT_D:38
.= ( ( ( ( Fib C62 ) * ( Fib ( R1 + 1 ) ) ) + ( ( Fib D36 ) * ( Fib R1 ) ) ) + ( ( ( Fib ( C62 + 1 ) ) * ( Fib ( R1 + 1 ) ) ) + ( ( Fib ( C62 + ( 0 ) ) ) * ( Fib R1 ) ) ) ) by XREAL_1:232
.= ( ( ( Fib ( R1 + 1 ) ) * ( ( Fib C62 ) + ( Fib ( C62 + 1 ) ) ) ) + ( ( Fib R1 ) * ( ( Fib D36 ) + ( Fib C62 ) ) ) )
.= ( D35 + ( ( Fib R1 ) * ( ( Fib D36 ) + ( Fib C62 ) ) ) ) by L199
.= ( D35 + ( ( Fib R1 ) * ( ( Fib D36 ) + ( Fib ( D36 + 1 ) ) ) ) ) by L288 , XREAL_1:235
.= ( D34 + ( ( Fib R1 ) * ( Fib ( ( C62 -' 1 ) + 2 ) ) ) ) by L199
.= ( D34 + ( ( Fib ( ( C62 + 2 ) -' 1 ) ) * ( Fib R1 ) ) ) by L288 , NAT_D:38;
thus L291: thesis by L290;
end;
L292: ( 2 -' 1 ) = ( 2 - 1 ) by NAT_D:39;
L293: S6[ 2 ] by L292 , L190 , L199 , PRE_FF:1;
L294: (for B60 being non  empty Nat holds S6[ B60 ]) from FibInd1(L286 , L293 , L287);
thus L295: thesis by L294;
end;
theorem
L296: (for R2 being Nat holds (for B61 being non  empty (Element of ( NAT )) holds ( Fib B61 ) divides ( Fib ( B61 * R2 ) )))
proof
let R2 being Nat;
let C63 being non  empty (Element of ( NAT ));
defpred S7[ Nat ] means ( Fib C63 ) divides ( Fib ( C63 * $1 ) );
L297: (for B62 being Nat holds (S7[ B62 ] implies S7[ ( B62 + 1 ) ]))
proof
let C64 being Nat;
assume L298: S7[ C64 ];
L299: ( Fib ( C63 * ( C64 + 1 ) ) ) = ( Fib ( ( C63 * C64 ) + C63 ) )
.= ( ( ( Fib C63 ) * ( Fib ( ( C63 * C64 ) + 1 ) ) ) + ( ( Fib ( C63 * C64 ) ) * ( Fib ( C63 -' 1 ) ) ) ) by L284;
thus L300: thesis by L299 , L298 , L51;
end;
L301: S7[ ( 0 ) ] by NAT_D:6 , PRE_FF:1;
L302: (for B63 being Nat holds S7[ B63 ]) from NAT_1:sch 2(L301 , L297);
thus L303: thesis by L302;
end;
theorem
L304: (for R1 being Nat holds (for B64 being non  empty (Element of ( NAT )) holds (B64 divides R1 implies ( Fib B64 ) divides ( Fib R1 ))))
proof
let R1 being Nat;
let C65 being non  empty (Element of ( NAT ));
assume L305: C65 divides R1;
L306: (ex B65 being Nat st R1 = ( C65 * B65 )) by L305 , NAT_D:def 3;
thus L307: thesis by L306 , L296;
end;
theorem
L308: (for R1 being Nat holds ( Fib R1 ) <= ( Fib ( R1 + 1 ) ))
proof
let R1 being Nat;
defpred S8[ Nat ] means ( Fib $1 ) <= ( Fib ( $1 + 1 ) );
L309: S8[ ( 0 ) ] by PRE_FF:1;
L310: (for B66 being Nat holds ((S8[ B66 ] & S8[ ( B66 + 1 ) ]) implies S8[ ( B66 + 2 ) ]))
proof
let C66 being Nat;
assume L311: S8[ C66 ];
assume L312: S8[ ( C66 + 1 ) ];
L313: ( ( Fib C66 ) + ( Fib ( C66 + 1 ) ) ) <= ( ( Fib ( C66 + 1 ) ) + ( Fib ( C66 + 2 ) ) ) by L312 , L311 , XREAL_1:7;
L314: ( Fib ( C66 + 2 ) ) <= ( ( Fib ( C66 + 1 ) ) + ( Fib ( C66 + 2 ) ) ) by L313 , L199;
L315: ( Fib ( C66 + 2 ) ) <= ( Fib ( C66 + 3 ) ) by L314 , L210;
thus L316: thesis by L315;
end;
L317: S8[ 1 ] by L190 , PRE_FF:1;
L318: (for B67 being Nat holds S8[ B67 ]) from FIB_NUM:sch 1(L309 , L317 , L310);
thus L319: thesis by L318;
end;
theorem
L320: (for B68 being (Element of ( NAT )) holds (B68 > 1 implies ( Fib B68 ) < ( Fib ( B68 + 1 ) )))
proof
defpred S9[ Nat ] means ( Fib $1 ) < ( Fib ( $1 + 1 ) );
let C67 being (Element of ( NAT ));
assume L321: C67 > 1;
L322: C67 is non  trivial by L321 , NAT_2:def 1;
L323: S9[ 3 ] by L193 , L196;
L324: (for B69 being non  trivial Nat holds ((S9[ B69 ] & S9[ ( B69 + 1 ) ]) implies S9[ ( B69 + 2 ) ]))
proof
let C68 being non  trivial Nat;
assume L325: S9[ C68 ];
assume L326: S9[ ( C68 + 1 ) ];
L327: ( ( Fib C68 ) + ( Fib ( C68 + 1 ) ) ) < ( ( Fib ( C68 + 1 ) ) + ( Fib ( C68 + 2 ) ) ) by L326 , L325 , XREAL_1:8;
L328: ( Fib ( C68 + 2 ) ) < ( ( Fib ( C68 + 1 ) ) + ( Fib ( C68 + 2 ) ) ) by L327 , L199;
L329: ( Fib ( C68 + 2 ) ) < ( Fib ( C68 + 3 ) ) by L328 , L210;
thus L330: thesis by L329;
end;
L331: S9[ 2 ] by L190 , L193;
L332: (for B70 being non  trivial Nat holds S9[ B70 ]) from FibInd2(L331 , L323 , L324);
thus L333: thesis by L332 , L322;
end;
theorem
L334: (for R4 being Nat holds (for R1 being Nat holds (R4 >= R1 implies ( Fib R4 ) >= ( Fib R1 ))))
proof
let R4 being Nat;
let R1 being Nat;
assume L335: R4 >= R1;
consider C69 being Nat such that L336: R4 = ( R1 + C69 ) by L335 , NAT_1:10;
L337: (for B71 , B72 being Nat holds ( Fib ( B72 + B71 ) ) >= ( Fib B72 ))
proof
defpred S10[ Nat ] means (for B73 being Nat holds ( Fib ( B73 + $1 ) ) >= ( Fib B73 ));
L338: (for B74 being Nat holds (S10[ B74 ] implies S10[ ( B74 + 1 ) ]))
proof
let R2 being Nat;
assume L339: S10[ R2 ];
let R1 being Nat;
L340: ( R1 + ( R2 + 1 ) ) = ( ( R1 + R2 ) + 1 );
L341: ( Fib ( R1 + ( R2 + 1 ) ) ) >= ( Fib ( R1 + R2 ) ) by L340 , L308;
L342: ( Fib ( R1 + R2 ) ) >= ( Fib R1 ) by L339;
thus L343: thesis by L342 , L341 , XXREAL_0:2;
end;
let R2 being Nat;
let R1 being Nat;
L344: S10[ ( 0 ) ];
L345: (for R2 being Nat holds S10[ R2 ]) from NAT_1:sch 2(L344 , L338);
thus L346: thesis by L345;
end;
thus L347: thesis by L337 , L336;
end;
theorem
L348: (for R1 being Nat holds (for B75 being Nat holds (B75 > 1 implies (B75 < R1 implies ( Fib B75 ) < ( Fib R1 )))))
proof
let R1 being Nat;
let C70 being Nat;
assume that
L349: C70 > 1;
assume L350: C70 < R1;
consider C71 being Nat such that L351: R1 = ( C70 + C71 ) by L350 , NAT_1:10;
reconsider D37 = C70 as non  empty (Element of ( NAT )) by L349 , ORDINAL1:def 12;
reconsider D38 = C71 as non  empty (Element of ( NAT )) by L350 , L351 , ORDINAL1:def 12;
L352: (for B76 , B77 being non  empty (Element of ( NAT )) holds (B76 > 1 implies ( Fib B76 ) < ( Fib ( B76 + B77 ) )))
proof
let C72 , C73 being non  empty (Element of ( NAT ));
assume that
L353: C72 > 1;
defpred S11[ Nat ] means ( Fib C72 ) < ( Fib ( C72 + $1 ) );
L354: (for B78 being non  empty Nat holds (S11[ B78 ] implies S11[ ( B78 + 1 ) ]))
proof
let C74 being non  empty Nat;
L355: ( C72 + C74 ) > ( ( 0 ) + 1 ) by L353 , XREAL_1:8;
L356: ( Fib ( C72 + C74 ) ) < ( Fib ( ( C72 + C74 ) + 1 ) ) by L355 , L320;
assume L357: S11[ C74 ];
thus L358: thesis by L357 , L356 , XXREAL_0:2;
end;
L359: S11[ 1 ] by L353 , L320;
L360: (for B79 being non  empty Nat holds S11[ B79 ]) from NAT_1:sch 10(L359 , L354);
thus L361: thesis by L360;
end;
L362: ( Fib D37 ) < ( Fib ( D37 + D38 ) ) by L352 , L349;
thus L363: thesis by L362 , L351;
end;
theorem
L364: (for R2 being Nat holds (( Fib R2 ) = 1 iff (R2 = 1 or R2 = 2)))
proof
let R2 being Nat;
L365: (( Fib R2 ) = 1 implies (R2 = 1 or R2 = 2))
proof
assume L366: ( Fib R2 ) = 1;
assume that
L367: (not R2 = 1)
and
L368: (not R2 = 2);
L369: (R2 < 2 or R2 > 2) by L368 , XXREAL_0:1;
L370: (R2 = ( 0 ) or R2 > 1) by L367 , NAT_2:19;
thus L371: contradiction by L370 , L366 , L369 , L190 , L348 , PRE_FF:1;
end;
thus L372: thesis by L365 , L190 , PRE_FF:1;
end;
theorem
L373: (for B80 , B81 being (Element of ( NAT )) holds ((B81 > 1 & B80 <> ( 0 ) & B80 <> 1) implies (( Fib B80 ) = ( Fib B81 ) iff B80 = B81)))
proof
let C75 , C76 being (Element of ( NAT ));
assume that
L374: C76 > 1
and
L375: (C75 <> ( 0 ) & C75 <> 1);
L376: C75 is non  trivial by L375 , NAT_2:def 1;
L377: C75 >= ( 1 + 1 ) by L376 , NAT_2:29;
L378: C75 > 1 by L377 , NAT_1:13;
L379: (( Fib C75 ) = ( Fib C76 ) implies C75 = C76)
proof
assume L380: ( Fib C75 ) = ( Fib C76 );
assume L381: C75 <> C76;
per cases  by L381 , XXREAL_0:1;
suppose L382: C75 > C76;

thus L383: contradiction by L382 , L374 , L380 , L348;
end;
suppose L384: C75 < C76;

thus L385: contradiction by L384 , L378 , L380 , L348;
end;
end;
thus L387: thesis by L379;
end;
theorem
L388: (for B82 being (Element of ( NAT )) holds ((B82 > 1 & B82 <> 4) implies (B82 is non  prime implies (ex B83 being non  empty (Element of ( NAT )) st (B83 <> 1 & B83 <> 2 & B83 <> B82 & B83 divides B82)))))
proof
let C77 being (Element of ( NAT ));
assume that
L389: C77 > 1
and
L390: C77 <> 4;
assume L391: C77 is non  prime;
per cases  by L391 , INT_2:def 4;
suppose L392: C77 <= 1;

thus L393: thesis by L392 , L389;
end;
suppose L394: (not (for B84 being Nat holds (B84 divides C77 implies (B84 = 1 or B84 = C77))));

consider C78 being Nat such that L395: C78 divides C77 and L396: (C78 <> 1 & C78 <> C77) by L394;
consider C79 being Nat such that L397: C77 = ( C78 * C79 ) by L395 , NAT_D:def 3;
L398: (C79 divides C77 & C79 is non  empty non  empty non  empty non  empty (Element of ( NAT ))) by L389 , L397 , NAT_D:def 3 , ORDINAL1:def 12;
L399: C78 is non  empty non  empty non  empty non  empty (Element of ( NAT )) by L389 , L395 , INT_2:3 , ORDINAL1:def 12;
L400: (C78 <> 2 or C79 <> 2) by L390 , L397;
L401: (C79 <> 1 & C79 <> C77) by L389 , L396 , L397 , XCMPLX_1:7;
thus L402: thesis by L401 , L395 , L396 , L399 , L398 , L400;
end;
end;
theorem
L404: (for B85 being (Element of ( NAT )) holds ((B85 > 1 & B85 <> 4) implies (( Fib B85 ) is  prime implies B85 is  prime)))
proof
let C80 being (Element of ( NAT ));
assume that
L405: C80 > 1
and
L406: C80 <> 4;
assume L407: ( Fib C80 ) is  prime;
assume L408: (not C80 is  prime);
consider C81 being non  empty (Element of ( NAT )) such that L409: C81 <> 1 and L410: C81 <> 2 and L411: C81 <> C80 and L412: C81 divides C80 by L408 , L405 , L406 , L388;
L413: ( Fib C81 ) <> ( Fib C80 ) by L405 , L409 , L411 , L373;
L414: (( Fib C81 ) <> 1 & ( Fib C81 ) divides ( Fib C80 )) by L409 , L410 , L412 , L304 , L364;
thus L415: contradiction by L414 , L407 , L413 , INT_2:def 4;
end;
begin
definition
func FIB -> (Function of ( NAT ) , ( NAT )) means 
:L416: (for B86 being (Element of ( NAT )) holds ( it . B86 ) = ( Fib B86 ));
existence
proof
L417: (ex B87 being (Function of ( NAT ) , ( NAT )) st (for B88 being (Element of ( NAT )) holds ( B87 . B88 ) = ( Fib B88 ))) from FUNCT_2:sch 4;
thus L418: thesis by L417;
end;
uniqueness
proof
L419: (for B89 , B90 being (Function of ( NAT ) , ( NAT )) holds (((for B91 being (Element of ( NAT )) holds ( B89 . B91 ) = ( Fib B91 )) & (for B92 being (Element of ( NAT )) holds ( B90 . B92 ) = ( Fib B92 ))) implies B89 = B90)) from BINOP_2:sch 1;
let C82 , C83 being (Function of ( NAT ) , ( NAT ));
assume L420: ((for B93 being (Element of ( NAT )) holds ( C82 . B93 ) = ( Fib B93 )) & (for B94 being (Element of ( NAT )) holds ( C83 . B94 ) = ( Fib B94 )));
thus L421: thesis by L420 , L419;
end;
end;
definition
func EvenNAT -> (Subset of ( NAT )) equals 
{ ( 2 * B95 ) where B95 is (Element of ( NAT )) : (not contradiction) };
coherence
proof
defpred S12[ set ] means (not contradiction);
deffunc H1((Element of ( NAT ))) = ( 2 * $1 );
L423: { H1(B96) where B96 is (Element of ( NAT )) : S12[ B96 ] } is (Subset of ( NAT )) from DOMAIN_1:sch 8;
thus L424: thesis by L423;
end;
func OddNAT -> (Subset of ( NAT )) equals 
{ ( ( 2 * B97 ) + 1 ) where B97 is (Element of ( NAT )) : (not contradiction) };
coherence
proof
defpred S13[ set ] means (not contradiction);
deffunc H2((Element of ( NAT ))) = ( ( 2 * $1 ) + 1 );
L425: { H2(B98) where B98 is (Element of ( NAT )) : S13[ B98 ] } is (Subset of ( NAT )) from DOMAIN_1:sch 8;
thus L426: thesis by L425;
end;
end;
theorem
L428: (for B99 being (Element of ( NAT )) holds (( 2 * B99 ) in ( EvenNAT ) & (not ( ( 2 * B99 ) + 1 ) in ( EvenNAT ))))
proof
let C84 being (Element of ( NAT ));
thus L429: ( 2 * C84 ) in ( EvenNAT );
assume L430: ( ( 2 * C84 ) + 1 ) in ( EvenNAT );
L431: (ex B100 being (Element of ( NAT )) st (( ( 2 * C84 ) + 1 ) = ( 2 * B100 ) & (not contradiction))) by L430;
thus L432: thesis by L431;
end;
theorem
L433: (for B101 being (Element of ( NAT )) holds (( ( 2 * B101 ) + 1 ) in ( OddNAT ) & (not ( 2 * B101 ) in ( OddNAT ))))
proof
let C85 being (Element of ( NAT ));
thus L434: ( ( 2 * C85 ) + 1 ) in ( OddNAT );
assume L435: ( 2 * C85 ) in ( OddNAT );
L436: (ex B102 being (Element of ( NAT )) st (( 2 * C85 ) = ( ( 2 * B102 ) + 1 ) & (not contradiction))) by L435;
thus L437: thesis by L436;
end;
definition
let C86 being (Element of ( NAT ));
func EvenFibs C86 -> (FinSequence of ( NAT )) equals 
( Prefix (( FIB ) , ( ( EvenNAT ) /\ ( Seg C86 ) )) );
coherence;
func OddFibs C86 -> (FinSequence of ( NAT )) equals 
( Prefix (( FIB ) , ( ( OddNAT ) /\ ( Seg C86 ) )) );
coherence;
end;
theorem
L439: ( EvenFibs ( 0 ) ) = ( {} );
theorem
L440: ( Seq ( ( FIB ) | { 2 } ) ) = <* 1 *>
proof
reconsider D39 = { [ 2 , ( ( FIB ) . 2 ) ] } as Function;
L441: ( dom D39 ) = { 2 } by RELAT_1:9;
L442: ( dom D39 ) c= ( Seg 2 )
proof
let C87 being set;
assume L443: C87 in ( dom D39 );
L444: C87 = 2 by L443 , L441 , TARSKI:def 1;
thus L445: thesis by L444;
end;
reconsider D40 = D39 as FinSubsequence by L442 , FINSEQ_1:def 12;
L446: 2 in ( NAT );
L447: 2 in ( dom ( FIB ) ) by L446 , FUNCT_2:def 1;
L448: ( Seq ( ( FIB ) | { 2 } ) ) = ( Seq D40 ) by L447 , GRFUNC_1:28
.= <* ( ( FIB ) . 2 ) *> by PNPROC_1:3
.= <* 1 *> by L416 , L190;
thus L449: thesis by L448;
end;
theorem
L450: ( EvenFibs 2 ) = <* 1 *>
proof
L451:
now
let C88 being set;
assume L452: C88 in ( ( EvenNAT ) /\ { 1 , 2 } );
L453: C88 in ( EvenNAT ) by L452 , XBOOLE_0:def 4;
L454: C88 in { 1 , 2 } by L452 , XBOOLE_0:def 4;
per cases  by L454 , TARSKI:def 2;
suppose L455: C88 = ( ( 2 * (( 0 ) qua Nat) ) + 1 );

thus L456: C88 in { 2 } by L455 , L453 , L428;
end;
suppose L457: C88 = ( 2 * 1 );

thus L458: C88 in { 2 } by L457 , TARSKI:def 1;
end;
end;
L460: ( ( EvenNAT ) /\ { 1 , 2 } ) c= { 2 } by L451 , TARSKI:def 3;
set D41 = { [ 2 , ( ( FIB ) . 2 ) ] };
reconsider D42 = D41 as FinSubsequence by L119;
L461: 2 in ( NAT );
L462: 2 in ( dom ( FIB ) ) by L461 , FUNCT_2:def 1;
L463:
now
let C89 being set;
assume L464: C89 in { 2 };
L465: C89 = ( 2 * 1 ) by L464 , TARSKI:def 1;
L466: (C89 in ( EvenNAT ) & C89 in { 1 , 2 }) by L465 , TARSKI:def 2;
thus L467: C89 in ( ( EvenNAT ) /\ { 1 , 2 } ) by L466 , XBOOLE_0:def 4;
end;
L468: { 2 } c= ( ( EvenNAT ) /\ { 1 , 2 } ) by L463 , TARSKI:def 3;
L469: ( ( EvenNAT ) /\ { 1 , 2 } ) = { 2 } by L468 , L460 , XBOOLE_0:def 10;
L470: ( EvenFibs 2 ) = ( Seq D42 ) by L469 , L462 , FINSEQ_1:2 , GRFUNC_1:28
.= <* ( ( FIB ) . 2 ) *> by PNPROC_1:3
.= <* 1 *> by L416 , L190;
thus L471: thesis by L470;
end;
theorem
L472: ( EvenFibs 4 ) = <* 1 , 3 *>
proof
L473:
now
let C90 being set;
assume L474: C90 in ( ( EvenNAT ) /\ { 1 , 2 , 3 , 4 } );
L475: C90 in ( EvenNAT ) by L474 , XBOOLE_0:def 4;
L476: C90 in { 1 , 2 , 3 , 4 } by L474 , XBOOLE_0:def 4;
per cases  by L476 , ENUMSET1:def 2;
suppose L477: C90 = ( ( 2 * (( 0 ) qua Nat) ) + 1 );

thus L478: C90 in { 2 , 4 } by L477 , L475 , L428;
end;
suppose L479: C90 = ( 2 * 1 );

thus L480: C90 in { 2 , 4 } by L479 , TARSKI:def 2;
end;
suppose L481: C90 = ( ( 2 * 1 ) + 1 );

thus L482: C90 in { 2 , 4 } by L481 , L475 , L428;
end;
suppose L483: C90 = ( 2 * 2 );

thus L484: C90 in { 2 , 4 } by L483 , TARSKI:def 2;
end;
end;
L486: ( ( EvenNAT ) /\ { 1 , 2 , 3 , 4 } ) c= { 2 , 4 } by L473 , TARSKI:def 3;
set D43 = { [ 2 , ( ( FIB ) . 2 ) ] , [ 4 , ( ( FIB ) . 4 ) ] };
L487: 4 in ( NAT );
L488: 4 in ( dom ( FIB ) ) by L487 , FUNCT_2:def 1;
reconsider D44 = D43 as FinSubsequence by L86;
L489: 2 in ( NAT );
L490: 2 in ( dom ( FIB ) ) by L489 , FUNCT_2:def 1;
L491: ( ( FIB ) | ( { 2 } \/ { 4 } ) ) = ( ( ( FIB ) | { 2 } ) \/ ( ( FIB ) | { 4 } ) ) by RELAT_1:78
.= ( { [ 2 , ( ( FIB ) . 2 ) ] } \/ ( ( FIB ) | { 4 } ) ) by L490 , GRFUNC_1:28
.= ( { [ 2 , ( ( FIB ) . 2 ) ] } \/ { [ 4 , ( ( FIB ) . 4 ) ] } ) by L488 , GRFUNC_1:28
.= D44 by ENUMSET1:1;
L492:
now
let C91 being set;
assume L493: C91 in { 2 , 4 };
L494: (C91 = ( 2 * 1 ) or C91 = ( 2 * 2 )) by L493 , TARSKI:def 2;
L495: C91 in ( EvenNAT ) by L494;
L496: (C91 = 2 or C91 = 4) by L493 , TARSKI:def 2;
L497: C91 in { 1 , 2 , 3 , 4 } by L496 , ENUMSET1:def 2;
thus L498: C91 in ( ( EvenNAT ) /\ { 1 , 2 , 3 , 4 } ) by L497 , L495 , XBOOLE_0:def 4;
end;
L499: { 2 , 4 } c= ( ( EvenNAT ) /\ { 1 , 2 , 3 , 4 } ) by L492 , TARSKI:def 3;
L500: ( ( EvenNAT ) /\ { 1 , 2 , 3 , 4 } ) = { 2 , 4 } by L499 , L486 , XBOOLE_0:def 10;
L501: ( EvenFibs 4 ) = ( Seq D44 ) by L500 , L491 , ENUMSET1:1 , FINSEQ_3:2
.= <* ( ( FIB ) . 2 ) , ( ( FIB ) . 4 ) *> by L97
.= <* ( Fib 2 ) , ( ( FIB ) . 4 ) *> by L416
.= <* 1 , 3 *> by L416 , L190 , L196;
thus L502: thesis by L501;
end;
theorem
L503: (for B103 being (Element of ( NAT )) holds ( ( ( EvenNAT ) /\ ( Seg ( ( 2 * B103 ) + 2 ) ) ) \/ { ( ( 2 * B103 ) + 4 ) } ) = ( ( EvenNAT ) /\ ( Seg ( ( 2 * B103 ) + 4 ) ) ))
proof
let C92 being (Element of ( NAT ));
L504: ( ( 2 * C92 ) + 4 ) = ( 2 * ( C92 + 2 ) );
L505: ( ( 2 * C92 ) + 4 ) in ( EvenNAT ) by L504;
L506: ( ( 2 * C92 ) + 3 ) = ( ( 2 * ( C92 + 1 ) ) + 1 );
L507: { ( ( 2 * C92 ) + 3 ) } misses ( EvenNAT ) by L506 , L428 , ZFMISC_1:50;
L508: ( ( EvenNAT ) /\ ( Seg ( ( 2 * C92 ) + 4 ) ) ) = ( ( EvenNAT ) /\ ( Seg ( ( ( 2 * C92 ) + 3 ) + 1 ) ) )
.= ( ( EvenNAT ) /\ ( ( Seg ( ( 2 * C92 ) + 3 ) ) \/ { ( ( 2 * C92 ) + 4 ) } ) ) by FINSEQ_1:9
.= ( ( ( EvenNAT ) /\ ( Seg ( ( 2 * C92 ) + 3 ) ) ) \/ ( ( EvenNAT ) /\ { ( ( 2 * C92 ) + 4 ) } ) ) by XBOOLE_1:23
.= ( ( ( EvenNAT ) /\ ( Seg ( ( ( 2 * C92 ) + 2 ) + 1 ) ) ) \/ { ( ( 2 * C92 ) + 4 ) } ) by L505 , ZFMISC_1:46
.= ( ( ( EvenNAT ) /\ ( ( Seg ( ( 2 * C92 ) + 2 ) ) \/ { ( ( 2 * C92 ) + 3 ) } ) ) \/ { ( ( 2 * C92 ) + 4 ) } ) by FINSEQ_1:9
.= ( ( ( ( EvenNAT ) /\ ( Seg ( ( 2 * C92 ) + 2 ) ) ) \/ ( ( EvenNAT ) /\ { ( ( 2 * C92 ) + 3 ) } ) ) \/ { ( ( 2 * C92 ) + 4 ) } ) by XBOOLE_1:23
.= ( ( ( ( EvenNAT ) /\ ( Seg ( ( 2 * C92 ) + 2 ) ) ) \/ ( {} ) ) \/ { ( ( 2 * C92 ) + 4 ) } ) by L507 , XBOOLE_0:def 7
.= ( ( ( EvenNAT ) /\ ( Seg ( ( 2 * C92 ) + 2 ) ) ) \/ { ( ( 2 * C92 ) + 4 ) } );
thus L509: thesis by L508;
end;
theorem
L510: (for B104 being (Element of ( NAT )) holds ( ( ( FIB ) | ( ( EvenNAT ) /\ ( Seg ( ( 2 * B104 ) + 2 ) ) ) ) \/ { [ ( ( 2 * B104 ) + 4 ) , ( ( FIB ) . ( ( 2 * B104 ) + 4 ) ) ] } ) = ( ( FIB ) | ( ( EvenNAT ) /\ ( Seg ( ( 2 * B104 ) + 4 ) ) ) ))
proof
let C93 being (Element of ( NAT ));
L511: ( dom ( FIB ) ) = ( NAT ) by FUNCT_2:def 1;
L512: ( ( FIB ) | ( ( EvenNAT ) /\ ( Seg ( ( 2 * C93 ) + 4 ) ) ) ) = ( ( FIB ) | ( ( ( EvenNAT ) /\ ( Seg ( ( 2 * C93 ) + 2 ) ) ) \/ { ( ( 2 * C93 ) + 4 ) } ) ) by L503
.= ( ( ( FIB ) | ( ( EvenNAT ) /\ ( Seg ( ( 2 * C93 ) + 2 ) ) ) ) \/ ( ( FIB ) | { ( ( 2 * C93 ) + 4 ) } ) ) by RELAT_1:78
.= ( ( ( FIB ) | ( ( EvenNAT ) /\ ( Seg ( ( 2 * C93 ) + 2 ) ) ) ) \/ { [ ( ( 2 * C93 ) + 4 ) , ( ( FIB ) . ( ( 2 * C93 ) + 4 ) ) ] } ) by L511 , GRFUNC_1:28;
thus L513: thesis by L512;
end;
theorem
L514: (for B105 being (Element of ( NAT )) holds ( EvenFibs ( ( 2 * B105 ) + 2 ) ) = ( ( EvenFibs ( 2 * B105 ) ) ^ <* ( Fib ( ( 2 * B105 ) + 2 ) ) *> ))
proof
defpred S14[ (Element of ( NAT )) ] means ( EvenFibs ( ( 2 * $1 ) + 2 ) ) = ( ( EvenFibs ( 2 * $1 ) ) ^ <* ( Fib ( ( 2 * $1 ) + 2 ) ) *> );
let C94 being (Element of ( NAT ));
L515: (for B106 being (Element of ( NAT )) holds (S14[ B106 ] implies S14[ ( B106 + 1 ) ]))
proof
let C95 being (Element of ( NAT ));
reconsider D45 = { [ 1 , ( ( FIB ) . ( ( 2 * C95 ) + 4 ) ) ] } as FinSubsequence by L119;
assume L516: S14[ C95 ];
set D46 = ( EvenFibs ( ( 2 * ( C95 + 1 ) ) + 2 ) );
set D47 = ( ( EvenFibs ( 2 * ( C95 + 1 ) ) ) ^ <* ( Fib ( ( 2 * ( C95 + 1 ) ) + 2 ) ) *> );
reconsider D48 = ( ( FIB ) | ( ( EvenNAT ) /\ ( Seg ( ( 2 * C95 ) + 2 ) ) ) ) as FinSubsequence;
set D49 = ( ( ( 2 * C95 ) + 3 ) Shift D45 );
L517: ( ( 2 * C95 ) + 3 ) > ( ( 2 * C95 ) + 2 ) by XREAL_1:6;
L518: (( dom D48 ) c= ( ( EvenNAT ) /\ ( Seg ( ( 2 * C95 ) + 2 ) ) ) & ( ( EvenNAT ) /\ ( Seg ( ( 2 * C95 ) + 2 ) ) ) c= ( Seg ( ( 2 * C95 ) + 2 ) )) by RELAT_1:58 , XBOOLE_1:17;
consider C96 being FinSequence such that L519: D48 c= C96 and L520: ( dom C96 ) = ( Seg ( ( 2 * C95 ) + 3 ) ) by L518 , L517 , L151 , XBOOLE_1:1;
L521: (ex B107 being FinSequence st D45 c= B107) by L158;
L522: ( 1 + ( ( 2 * C95 ) + 3 ) ) = ( ( 2 * C95 ) + 4 );
L523: D49 = { [ ( ( 2 * C95 ) + 4 ) , ( ( FIB ) . ( ( 2 * C95 ) + 4 ) ) ] } by L522 , L127;
L524: ( len C96 ) = ( ( 2 * C95 ) + 3 ) by L520 , FINSEQ_1:def 3;
consider C97 being FinSubsequence such that L525: C97 = ( D48 \/ D49 ) and L526: ( ( Seq D48 ) ^ ( Seq D45 ) ) = ( Seq C97 ) by L524 , L519 , L521 , PNPROC_1:79;
L527: D47 = ( ( Seq ( ( FIB ) | ( ( EvenNAT ) /\ ( Seg ( ( 2 * C95 ) + 2 ) ) ) ) ) ^ <* ( ( FIB ) . ( ( 2 * C95 ) + 4 ) ) *> ) by L416
.= ( Seq C97 ) by L526 , PNPROC_1:3
.= D46 by L525 , L523 , L510;
thus L528: thesis by L527;
end;
L529: S14[ ( 0 ) ] by L190 , L439 , L450 , FINSEQ_1:34;
L530: (for B108 being (Element of ( NAT )) holds S14[ B108 ]) from NAT_1:sch 1(L529 , L515);
thus L531: thesis by L530;
end;
theorem
L532: ( OddFibs 1 ) = <* 1 *>
proof
L533:
now
let C98 being set;
assume L534: C98 in { 1 };
L535: C98 = ( ( 2 * (( 0 ) qua Nat) ) + 1 ) by L534 , TARSKI:def 1;
L536: C98 in ( OddNAT ) by L535;
thus L537: C98 in ( ( OddNAT ) /\ { 1 } ) by L536 , L534 , XBOOLE_0:def 4;
end;
L538: { 1 } c= ( ( OddNAT ) /\ { 1 } ) by L533 , TARSKI:def 3;
L539: 1 in ( NAT );
L540: 1 in ( dom ( FIB ) ) by L539 , FUNCT_2:def 1;
L541: (for B109 being set holds (B109 in ( ( OddNAT ) /\ { 1 } ) implies B109 in { 1 })) by XBOOLE_0:def 4;
L542: ( ( OddNAT ) /\ { 1 } ) c= { 1 } by L541 , TARSKI:def 3;
L543: ( ( OddNAT ) /\ { 1 } ) = { 1 } by L542 , L538 , XBOOLE_0:def 10;
L544: ( OddFibs 1 ) = <* ( ( FIB ) . 1 ) *> by L543 , L540 , FINSEQ_1:2 , GRFUNC_1:28 , PNPROC_1:3
.= <* 1 *> by L416 , PRE_FF:1;
thus L545: thesis by L544;
end;
theorem
L546: ( OddFibs 3 ) = <* 1 , 2 *>
proof
L547:
now
let C99 being set;
assume L548: C99 in ( ( OddNAT ) /\ { 1 , 2 , 3 } );
L549: C99 in ( OddNAT ) by L548 , XBOOLE_0:def 4;
L550: C99 in { 1 , 2 , 3 } by L548 , XBOOLE_0:def 4;
per cases  by L550 , ENUMSET1:def 1;
suppose L551: C99 = ( ( 2 * (( 0 ) qua Nat) ) + 1 );

thus L552: C99 in { 1 , 3 } by L551 , TARSKI:def 2;
end;
suppose L553: C99 = ( 2 * 1 );

thus L554: C99 in { 1 , 3 } by L553 , L549 , L433;
end;
suppose L555: C99 = ( ( 2 * 1 ) + 1 );

thus L556: C99 in { 1 , 3 } by L555 , TARSKI:def 2;
end;
end;
L558: ( ( OddNAT ) /\ { 1 , 2 , 3 } ) c= { 1 , 3 } by L547 , TARSKI:def 3;
set D50 = { [ 1 , ( ( FIB ) . 1 ) ] , [ 3 , ( ( FIB ) . 3 ) ] };
L559: 3 in ( NAT );
L560: 3 in ( dom ( FIB ) ) by L559 , FUNCT_2:def 1;
reconsider D51 = D50 as FinSubsequence by L86;
L561: 1 in ( NAT );
L562: 1 in ( dom ( FIB ) ) by L561 , FUNCT_2:def 1;
L563: ( ( FIB ) | ( { 1 } \/ { 3 } ) ) = ( ( ( FIB ) | { 1 } ) \/ ( ( FIB ) | { 3 } ) ) by RELAT_1:78
.= ( { [ 1 , ( ( FIB ) . 1 ) ] } \/ ( ( FIB ) | { 3 } ) ) by L562 , GRFUNC_1:28
.= ( { [ 1 , ( ( FIB ) . 1 ) ] } \/ { [ 3 , ( ( FIB ) . 3 ) ] } ) by L560 , GRFUNC_1:28
.= D51 by ENUMSET1:1;
L564:
now
let C100 being set;
assume L565: C100 in { 1 , 3 };
L566: (C100 = ( ( 2 * (( 0 ) qua Nat) ) + 1 ) or C100 = ( ( 2 * 1 ) + 1 )) by L565 , TARSKI:def 2;
L567: C100 in ( OddNAT ) by L566;
L568: (C100 = 1 or C100 = 3) by L565 , TARSKI:def 2;
L569: C100 in { 1 , 2 , 3 } by L568 , ENUMSET1:def 1;
thus L570: C100 in ( ( OddNAT ) /\ { 1 , 2 , 3 } ) by L569 , L567 , XBOOLE_0:def 4;
end;
L571: { 1 , 3 } c= ( ( OddNAT ) /\ { 1 , 2 , 3 } ) by L564 , TARSKI:def 3;
L572: ( ( OddNAT ) /\ { 1 , 2 , 3 } ) = { 1 , 3 } by L571 , L558 , XBOOLE_0:def 10;
L573: ( OddFibs 3 ) = ( Seq ( ( FIB ) | ( { 1 } \/ { 3 } ) ) ) by L572 , ENUMSET1:1 , FINSEQ_3:1
.= <* ( ( FIB ) . 1 ) , ( ( FIB ) . 3 ) *> by L563 , L97
.= <* ( Fib 1 ) , ( ( FIB ) . 3 ) *> by L416
.= <* 1 , 2 *> by L416 , L193 , PRE_FF:1;
thus L574: thesis by L573;
end;
theorem
L575: (for B110 being Nat holds ( ( ( OddNAT ) /\ ( Seg ( ( 2 * B110 ) + 3 ) ) ) \/ { ( ( 2 * B110 ) + 5 ) } ) = ( ( OddNAT ) /\ ( Seg ( ( 2 * B110 ) + 5 ) ) ))
proof
let C101 being Nat;
L576: ( ( 2 * C101 ) + 5 ) = ( ( 2 * ( C101 + 2 ) ) + 1 );
L577: ( ( 2 * C101 ) + 5 ) in ( OddNAT ) by L576;
L578: ( ( 2 * C101 ) + 4 ) = ( 2 * ( ( C101 + 1 ) + 1 ) );
L579: { ( ( 2 * C101 ) + 4 ) } misses ( OddNAT ) by L578 , L433 , ZFMISC_1:50;
L580: ( ( OddNAT ) /\ ( Seg ( ( 2 * C101 ) + 5 ) ) ) = ( ( OddNAT ) /\ ( Seg ( ( ( 2 * C101 ) + 4 ) + 1 ) ) )
.= ( ( OddNAT ) /\ ( ( Seg ( ( 2 * C101 ) + 4 ) ) \/ { ( ( 2 * C101 ) + 5 ) } ) ) by FINSEQ_1:9
.= ( ( ( OddNAT ) /\ ( Seg ( ( ( 2 * C101 ) + 3 ) + 1 ) ) ) \/ ( ( OddNAT ) /\ { ( ( 2 * C101 ) + 5 ) } ) ) by XBOOLE_1:23
.= ( ( ( OddNAT ) /\ ( ( Seg ( ( 2 * C101 ) + 3 ) ) \/ { ( ( 2 * C101 ) + 4 ) } ) ) \/ ( ( OddNAT ) /\ { ( ( 2 * C101 ) + 5 ) } ) ) by FINSEQ_1:9
.= ( ( ( ( OddNAT ) /\ ( Seg ( ( 2 * C101 ) + 3 ) ) ) \/ ( ( OddNAT ) /\ { ( ( 2 * C101 ) + 4 ) } ) ) \/ ( ( OddNAT ) /\ { ( ( 2 * C101 ) + 5 ) } ) ) by XBOOLE_1:23
.= ( ( ( ( OddNAT ) /\ ( Seg ( ( 2 * C101 ) + 3 ) ) ) \/ ( {} ) ) \/ ( ( OddNAT ) /\ { ( ( 2 * C101 ) + 5 ) } ) ) by L579 , XBOOLE_0:def 7
.= ( ( ( OddNAT ) /\ ( Seg ( ( 2 * C101 ) + 3 ) ) ) \/ { ( ( 2 * C101 ) + 5 ) } ) by L577 , ZFMISC_1:46;
thus L581: thesis by L580;
end;
theorem
L582: (for B111 being Nat holds ( ( ( FIB ) | ( ( OddNAT ) /\ ( Seg ( ( 2 * B111 ) + 3 ) ) ) ) \/ { [ ( ( 2 * B111 ) + 5 ) , ( ( FIB ) . ( ( 2 * B111 ) + 5 ) ) ] } ) = ( ( FIB ) | ( ( OddNAT ) /\ ( Seg ( ( 2 * B111 ) + 5 ) ) ) ))
proof
let C102 being Nat;
L583: ( dom ( FIB ) ) = ( NAT ) by FUNCT_2:def 1;
L584: ( ( FIB ) | ( ( OddNAT ) /\ ( Seg ( ( 2 * C102 ) + 5 ) ) ) ) = ( ( FIB ) | ( ( ( OddNAT ) /\ ( Seg ( ( 2 * C102 ) + 3 ) ) ) \/ { ( ( 2 * C102 ) + 5 ) } ) ) by L575
.= ( ( ( FIB ) | ( ( OddNAT ) /\ ( Seg ( ( 2 * C102 ) + 3 ) ) ) ) \/ ( ( FIB ) | { ( ( 2 * C102 ) + 5 ) } ) ) by RELAT_1:78
.= ( ( ( FIB ) | ( ( OddNAT ) /\ ( Seg ( ( 2 * C102 ) + 3 ) ) ) ) \/ { [ ( ( 2 * C102 ) + 5 ) , ( ( FIB ) . ( ( 2 * C102 ) + 5 ) ) ] } ) by L583 , GRFUNC_1:28;
thus L585: thesis by L584;
end;
theorem
L586: (for B112 being Nat holds ( OddFibs ( ( 2 * B112 ) + 3 ) ) = ( ( OddFibs ( ( 2 * B112 ) + 1 ) ) ^ <* ( Fib ( ( 2 * B112 ) + 3 ) ) *> ))
proof
defpred S15[ Nat ] means ( OddFibs ( ( 2 * $1 ) + 3 ) ) = ( ( OddFibs ( ( 2 * $1 ) + 1 ) ) ^ <* ( Fib ( ( 2 * $1 ) + 3 ) ) *> );
let C103 being Nat;
L587: (for B113 being Nat holds (S15[ B113 ] implies S15[ ( B113 + 1 ) ]))
proof
let C104 being Nat;
reconsider D52 = { [ 1 , ( ( FIB ) . ( ( 2 * C104 ) + 5 ) ) ] } as FinSubsequence by L119;
assume L588: S15[ C104 ];
set D53 = ( OddFibs ( ( 2 * ( C104 + 1 ) ) + 3 ) );
set D54 = ( ( OddFibs ( ( 2 * ( C104 + 1 ) ) + 1 ) ) ^ <* ( Fib ( ( 2 * ( C104 + 1 ) ) + 3 ) ) *> );
reconsider D55 = ( ( FIB ) | ( ( OddNAT ) /\ ( Seg ( ( 2 * C104 ) + 3 ) ) ) ) as FinSubsequence;
set D56 = ( ( ( 2 * C104 ) + 4 ) Shift D52 );
L589: ( ( 2 * C104 ) + 4 ) > ( ( 2 * C104 ) + 3 ) by XREAL_1:6;
L590: (( dom D55 ) c= ( ( OddNAT ) /\ ( Seg ( ( 2 * C104 ) + 3 ) ) ) & ( ( OddNAT ) /\ ( Seg ( ( 2 * C104 ) + 3 ) ) ) c= ( Seg ( ( 2 * C104 ) + 3 ) )) by RELAT_1:58 , XBOOLE_1:17;
consider C105 being FinSequence such that L591: D55 c= C105 and L592: ( dom C105 ) = ( Seg ( ( 2 * C104 ) + 4 ) ) by L590 , L589 , L151 , XBOOLE_1:1;
L593: (ex B114 being FinSequence st D52 c= B114) by L158;
L594: ( 1 + ( ( 2 * C104 ) + 4 ) ) = ( ( 2 * C104 ) + 5 );
L595: D56 = { [ ( ( 2 * C104 ) + 5 ) , ( ( FIB ) . ( ( 2 * C104 ) + 5 ) ) ] } by L594 , L127;
L596: ( len C105 ) = ( ( 2 * C104 ) + 4 ) by L592 , FINSEQ_1:def 3;
consider C106 being FinSubsequence such that L597: C106 = ( D55 \/ D56 ) and L598: ( ( Seq D55 ) ^ ( Seq D52 ) ) = ( Seq C106 ) by L596 , L591 , L593 , PNPROC_1:79;
L599: D54 = ( ( Seq ( ( FIB ) | ( ( OddNAT ) /\ ( Seg ( ( 2 * C104 ) + 3 ) ) ) ) ) ^ <* ( ( FIB ) . ( ( 2 * C104 ) + 5 ) ) *> ) by L416
.= ( Seq C106 ) by L598 , PNPROC_1:3
.= D53 by L597 , L595 , L582;
thus L600: thesis by L599;
end;
L601: S15[ ( 0 ) ] by L193 , L532 , L546;
L602: (for B115 being Nat holds S15[ B115 ]) from NAT_1:sch 2(L601 , L587);
thus L603: thesis by L602;
end;
theorem
L604: (for B116 being (Element of ( NAT )) holds ( Sum ( EvenFibs ( ( 2 * B116 ) + 2 ) ) ) = ( ( Fib ( ( 2 * B116 ) + 3 ) ) - 1 ))
proof
defpred S16[ Nat ] means ( Sum ( EvenFibs ( ( 2 * $1 ) + 2 ) ) ) = ( ( Fib ( ( 2 * $1 ) + 3 ) ) - 1 );
let C107 being (Element of ( NAT ));
L605: (for B117 being (Element of ( NAT )) holds (S16[ B117 ] implies S16[ ( B117 + 1 ) ]))
proof
let C108 being (Element of ( NAT ));
reconsider D57 = ( EvenFibs ( 2 * ( C108 + 1 ) ) ) as (FinSequence of ( REAL ));
assume L606: S16[ C108 ];
L607: ( Sum ( EvenFibs ( ( 2 * ( C108 + 1 ) ) + 2 ) ) ) = ( Sum ( (( EvenFibs ( 2 * ( C108 + 1 ) ) ) qua (FinSequence of ( NAT ))) ^ <* ( Fib ( ( 2 * ( C108 + 1 ) ) + 2 ) ) *> ) ) by L514
.= ( ( Sum D57 ) + ( Fib ( ( 2 * ( C108 + 1 ) ) + 2 ) ) ) by RVSUM_1:74
.= ( ( ( Fib ( ( 2 * C108 ) + 3 ) ) + ( Fib ( ( 2 * C108 ) + 4 ) ) ) - 1 ) by L606
.= ( ( Fib ( ( 2 * C108 ) + 5 ) ) - 1 ) by L216;
thus L608: thesis by L607;
end;
L609: S16[ ( 0 ) ] by L193 , L450 , RVSUM_1:73;
L610: (for B118 being (Element of ( NAT )) holds S16[ B118 ]) from NAT_1:sch 1(L609 , L605);
thus L611: thesis by L610;
end;
theorem
L612: (for B119 being Nat holds ( Sum ( OddFibs ( ( 2 * B119 ) + 1 ) ) ) = ( Fib ( ( 2 * B119 ) + 2 ) ))
proof
defpred S17[ Nat ] means ( Sum ( OddFibs ( ( 2 * $1 ) + 1 ) ) ) = ( Fib ( ( 2 * $1 ) + 2 ) );
let C109 being Nat;
L613: (for B120 being Nat holds (S17[ B120 ] implies S17[ ( B120 + 1 ) ]))
proof
let C110 being Nat;
reconsider D58 = ( OddFibs ( ( 2 * C110 ) + 1 ) ) as (FinSequence of ( REAL ));
assume L614: S17[ C110 ];
L615: ( Sum ( OddFibs ( ( 2 * ( C110 + 1 ) ) + 1 ) ) ) = ( Sum ( ( OddFibs ( ( 2 * C110 ) + 1 ) ) ^ <* (( Fib ( ( 2 * C110 ) + 3 ) ) qua (Element of ( NAT ))) *> ) ) by L586
.= ( ( Sum D58 ) + ( Fib ( ( 2 * C110 ) + 3 ) ) ) by RVSUM_1:74
.= ( Fib ( ( 2 * C110 ) + 4 ) ) by L614 , L213;
thus L616: thesis by L615;
end;
L617: S17[ ( 0 ) ] by L190 , L532 , RVSUM_1:73;
L618: (for B121 being Nat holds S17[ B121 ]) from NAT_1:sch 2(L617 , L613);
thus L619: thesis by L618;
end;
begin
theorem
L620: (for B122 being (Element of ( NAT )) holds ( Fib B122 ) , ( Fib ( B122 + 1 ) ) are_relative_prime )
proof
let C111 being (Element of ( NAT ));
L621: C111 , ( C111 + 1 ) are_relative_prime  by PEPIN:1;
L622: ( ( Fib C111 ) gcd ( Fib ( C111 + 1 ) ) ) = ( Fib ( C111 gcd ( C111 + 1 ) ) ) by FIB_NUM:5
.= 1 by L621 , INT_2:def 3 , PRE_FF:1;
thus L623: thesis by L622 , INT_2:def 3;
end;
theorem
L624: (for B123 being non  empty Nat holds (for B124 being Nat holds (B124 <> 1 implies (B124 divides ( Fib B123 ) implies (not B124 divides ( Fib ( B123 -' 1 ) ))))))
proof
let C112 being non  empty Nat;
let C113 being Nat;
assume L625: C113 <> 1;
assume L626: C113 divides ( Fib C112 );
L627: C112 >= 1 by NAT_2:19;
L628: C112 = ( ( C112 -' 1 ) + 1 ) by L627 , XREAL_1:235;
L629: ( Fib ( C112 -' 1 ) ) , ( Fib C112 ) are_relative_prime  by L628 , L620;
L630: ( ( Fib ( C112 -' 1 ) ) gcd ( Fib C112 ) ) = 1 by L629 , INT_2:def 3;
assume L631: C113 divides ( Fib ( C112 -' 1 ) );
L632: C113 divides 1 by L631 , L626 , L630 , NAT_D:def 5;
thus L633: contradiction by L632 , L625 , WSIERP_1:15;
end;
::$N Carmichael's Theorem on Prime Divisors
theorem
L634: (for R4 being Nat holds (for B125 being non  empty Nat holds ((R4 is  prime & B125 is  prime & R4 divides ( Fib B125 )) implies (for B126 being Nat holds ((B126 < B125 & B126 <> ( 0 )) implies (not R4 divides ( Fib B126 )))))))
proof
let R4 being Nat;
let C114 being non  empty Nat;
assume L635: R4 is  prime;
defpred S18[ (Element of ( NAT )) ] means ($1 < C114 & $1 <> ( 0 ) & R4 divides ( Fib $1 ));
assume L636: C114 is  prime;
reconsider D59 = { B127 where B127 is (Element of ( NAT )) : S18[ B127 ] } as (Subset of ( NAT )) from DOMAIN_1:sch 7;
assume L637: R4 divides ( Fib C114 );
assume L638: (not (for B128 being Nat holds ((B128 < C114 & B128 <> ( 0 )) implies (not R4 divides ( Fib B128 )))));
L639: D59 is non  empty non  empty non  empty non  empty (Subset of ( NAT ))
proof
consider C115 being Nat such that L640: (C115 < C114 & C115 <> ( 0 ) & R4 divides ( Fib C115 )) by L638;
L641: C115 in ( NAT ) by ORDINAL1:def 12;
L642: C115 in D59 by L641 , L640;
thus L643: thesis by L642;
end;
reconsider D60 = D59 as non  empty (Subset of ( NAT )) by L639;
set D61 = ( min D60 );
defpred S19[ Nat ] means (R4 divides ( Fib ( C114 -' ( D61 * ( $1 + 1 ) ) ) ) & D61 <= ( C114 / ( $1 + 2 ) ));
L644: D61 in D60 by XXREAL_2:def 7;
L645: (ex B129 being (Element of ( NAT )) st (B129 = D61 & S18[ B129 ])) by L644;
L646: ( C114 -' D61 ) < C114 by L645 , NAT_2:9;
L647: R4 <> 1 by L635 , INT_2:def 4;
L648: (not R4 divides ( Fib ( D61 -' 1 ) )) by L647 , L645 , L624;
L649: (for B130 being Nat holds (S19[ B130 ] implies S19[ ( B130 + 1 ) ]))
proof
let C116 being Nat;
L650: R4 divides ( ( Fib D61 ) * ( Fib ( ( C114 -' ( ( C116 + 2 ) * D61 ) ) + 1 ) ) ) by L645 , NAT_D:9;
L651: ( C114 - ( D61 * ( C116 + 2 ) ) ) <> ( 0 )
proof
assume L652: ( C114 - ( D61 * ( C116 + 2 ) ) ) = ( 0 );
L653: (D61 divides C114 & ( C116 + 2 ) divides C114) by L652 , NAT_D:def 3;
per cases  by L636 , L653 , INT_2:def 4;
suppose L654: (D61 = 1 & ( C116 + 2 ) = C114);

L655: R4 = 1 by L654 , L645 , PRE_FF:1 , WSIERP_1:15;
thus L656: contradiction by L655 , L635 , INT_2:def 4;
end;
suppose L657: (D61 = 1 & ( C116 + 2 ) = 1);

thus L658: contradiction by L657 , L636 , L652 , INT_2:def 4;
end;
suppose L659: (D61 = C114 & ( C116 + 2 ) = C114);

thus L660: contradiction by L659 , L645;
end;
suppose L661: (D61 = C114 & ( C116 + 2 ) = 1);

thus L662: contradiction by L661 , L645;
end;
end;
L664: ( - D61 ) < ( - (( 0 ) qua Nat) ) by L645 , XREAL_1:24;
L665: ( ( - D61 ) * ( C116 + 2 ) ) < ( ( 0 ) * ( C116 + 2 ) ) by L664 , XREAL_1:68;
L666: ( ( - ( D61 * ( C116 + 2 ) ) ) + C114 ) < ( ( 0 ) + C114 ) by L665 , XREAL_1:6;
L667: ( C114 -' ( ( C116 + 2 ) * D61 ) ) < C114 by L666 , L651 , XREAL_0:def 2;
assume L668: S19[ C116 ];
L669: ( D61 * ( C116 + 2 ) ) <= ( ( C114 / ( C116 + 2 ) ) * ( C116 + 2 ) ) by L668 , XREAL_1:64;
L670: ( D61 * ( C116 + 2 ) ) <= C114 by L669 , XCMPLX_1:87;
L671: ( C114 - ( D61 * ( C116 + 2 ) ) ) >= ( ( D61 * ( C116 + 2 ) ) - ( D61 * ( C116 + 2 ) ) ) by L670 , XREAL_1:9;
L672: ( C114 -' ( ( C116 + 2 ) * D61 ) ) <> ( 0 ) by L671 , L651 , XREAL_0:def 2;
L673: ( D61 + ( D61 * ( C116 + 1 ) ) ) <= C114 by L669 , XCMPLX_1:87;
L674: ( D61 * ( C116 + 1 ) ) < C114 by L673 , L645 , L74;
L675: ( ( ( C116 + 1 ) * D61 ) - ( ( C116 + 1 ) * D61 ) ) < ( C114 - ( ( C116 + 1 ) * D61 ) ) by L674 , XREAL_1:9;
L676: ( ( C114 - ( ( C116 + 1 ) * D61 ) ) - D61 ) > ( 0 ) by L651 , L671;
L677: ( ( C114 -' ( ( C116 + 1 ) * D61 ) ) - D61 ) > ( 0 ) by L676 , L675 , XREAL_0:def 2;
L678: ( ( C114 -' ( ( C116 + 1 ) * D61 ) ) -' D61 ) = ( ( C114 -' ( ( C116 + 1 ) * D61 ) ) - D61 ) by L677 , XREAL_0:def 2
.= ( ( C114 - ( ( C116 + 1 ) * D61 ) ) - D61 ) by L675 , XREAL_0:def 2
.= ( C114 -' ( ( C116 + 2 ) * D61 ) ) by L671 , XREAL_0:def 2;
L679: ( C114 - ( D61 * ( C116 + 1 ) ) ) >= ( ( D61 + ( D61 * ( C116 + 1 ) ) ) - ( D61 * ( C116 + 1 ) ) ) by L670 , XREAL_1:9;
L680: D61 <= ( C114 -' ( D61 * ( C116 + 1 ) ) ) by L679 , XREAL_0:def 2;
L681: ( Fib ( C114 -' ( ( C116 + 1 ) * D61 ) ) ) = ( Fib ( ( C114 -' ( ( C116 + 2 ) * D61 ) ) + D61 ) ) by L680 , L678 , XREAL_1:235
.= ( ( ( Fib D61 ) * ( Fib ( ( C114 -' ( ( C116 + 2 ) * D61 ) ) + 1 ) ) ) + ( ( Fib ( D61 -' 1 ) ) * ( Fib ( C114 -' ( ( C116 + 2 ) * D61 ) ) ) ) ) by L645 , L284;
L682: R4 divides ( ( Fib ( D61 -' 1 ) ) * ( Fib ( C114 -' ( ( C116 + 2 ) * D61 ) ) ) ) by L681 , L668 , L650 , NAT_D:10;
L683: R4 divides ( Fib ( C114 -' ( ( C116 + 2 ) * D61 ) ) ) by L682 , L635 , L648 , NEWTON:80;
L684: ( C114 -' ( ( C116 + 2 ) * D61 ) ) in D60 by L683 , L672 , L667;
L685: ( C114 -' ( ( C116 + 2 ) * D61 ) ) >= D61 by L684 , XXREAL_2:def 7;
L686: C114 >= ( D61 + ( ( C116 + 2 ) * D61 ) ) by L685 , L670 , NAT_D:54;
L687: ( C114 * ( 1 / ( ( 1 + C116 ) + 2 ) ) ) >= ( ( D61 * ( ( 1 + C116 ) + 2 ) ) * ( 1 / ( ( 1 + C116 ) + 2 ) ) ) by L686 , XREAL_1:64;
L688: ( C114 * ( 1 / ( ( 1 + C116 ) + 2 ) ) ) >= ( ( D61 * ( ( 1 + C116 ) + 2 ) ) / ( ( 1 + C116 ) + 2 ) ) by L687 , XCMPLX_1:99;
L689: ( C114 / ( ( 1 + C116 ) + 2 ) ) >= ( ( D61 * ( ( 1 + C116 ) + 2 ) ) / ( ( 1 + C116 ) + 2 ) ) by L688 , XCMPLX_1:99;
thus L690: thesis by L689 , L635 , L648 , L682 , NEWTON:80 , XCMPLX_1:89;
end;
L691: ( D61 - D61 ) < ( C114 - D61 ) by L645 , XREAL_1:9;
L692: ( C114 -' D61 ) <> ( 0 ) by L691 , XREAL_0:def 2;
L693: R4 divides ( ( Fib D61 ) * ( Fib ( ( C114 -' D61 ) + 1 ) ) ) by L645 , NAT_D:9;
L694: ( Fib C114 ) = ( Fib ( ( C114 -' D61 ) + D61 ) ) by L645 , XREAL_1:235
.= ( ( ( Fib D61 ) * ( Fib ( ( C114 -' D61 ) + 1 ) ) ) + ( ( Fib ( D61 -' 1 ) ) * ( Fib ( C114 -' D61 ) ) ) ) by L645 , L284;
L695: R4 divides ( ( Fib ( D61 -' 1 ) ) * ( Fib ( C114 -' D61 ) ) ) by L694 , L637 , L693 , NAT_D:10;
L696: R4 divides ( Fib ( C114 -' D61 ) ) by L695 , L635 , L648 , NEWTON:80;
L697: ( C114 -' D61 ) in D60 by L696 , L646 , L692;
L698: ( C114 -' D61 ) >= D61 by L697 , XXREAL_2:def 7;
L699: C114 >= ( D61 + D61 ) by L698 , L645 , NAT_D:54;
L700: ( C114 / 2 ) >= ( ( 2 * D61 ) / 2 ) by L699 , XREAL_1:72;
L701: S19[ ( 0 ) ] by L700 , L635 , L648 , L695 , NEWTON:80;
L702: (for B131 being Nat holds S19[ B131 ]) from NAT_1:sch 2(L701 , L649);
L703: (( C114 / ( C114 + 2 ) ) < 1 & D61 <= ( C114 / ( C114 + 2 ) )) by L702 , XREAL_1:29 , XREAL_1:191;
L704: D61 < ( 1 + ( 0 ) ) by L703 , XXREAL_0:2;
thus L705: contradiction by L704 , L645 , NAT_1:13;
end;
begin
theorem
L706: (for B132 being non  empty (Element of ( NAT )) holds { ( ( Fib B132 ) * ( Fib ( B132 + 3 ) ) ) , ( ( 2 * ( Fib ( B132 + 1 ) ) ) * ( Fib ( B132 + 2 ) ) ) , ( ( ( Fib ( B132 + 1 ) ) ^2 ) + ( ( Fib ( B132 + 2 ) ) ^2 ) ) } is Pythagorean_triple)
proof
let C117 being non  empty (Element of ( NAT ));
L707: ( ( ( ( Fib C117 ) * ( Fib ( C117 + 3 ) ) ) ^2 ) + ( ( ( 2 * ( Fib ( C117 + 1 ) ) ) * ( Fib ( C117 + 2 ) ) ) ^2 ) ) = ( ( ( ( Fib C117 ) ^2 ) * ( ( Fib ( C117 + 3 ) ) ^2 ) ) + ( ( ( 2 * 2 ) * ( ( Fib ( C117 + 1 ) ) ^2 ) ) * ( ( Fib ( C117 + 2 ) ) ^2 ) ) )
.= ( ( ( ( Fib C117 ) ^2 ) * ( ( ( Fib ( C117 + 2 ) ) + ( Fib ( C117 + 1 ) ) ) ^2 ) ) + ( ( 4 * ( ( Fib ( C117 + 1 ) ) ^2 ) ) * ( ( Fib ( C117 + 2 ) ) ^2 ) ) ) by L210
.= ( ( ( ( ( Fib ( C117 + 2 ) ) - ( Fib ( C117 + 1 ) ) ) ^2 ) * ( ( ( Fib ( C117 + 2 ) ) + ( Fib ( C117 + 1 ) ) ) ^2 ) ) + ( ( 4 * ( ( Fib ( C117 + 1 ) ) ^2 ) ) * ( ( Fib ( C117 + 2 ) ) ^2 ) ) ) by L228
.= ( ( ( ( Fib ( C117 + 1 ) ) ^2 ) + ( ( Fib ( C117 + 2 ) ) ^2 ) ) ^2 );
thus L708: thesis by L707 , PYTHTRIP:def 4;
end;
