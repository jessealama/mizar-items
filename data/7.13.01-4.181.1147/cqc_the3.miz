:: Logical Equivalence of Formulae
::  by Oleg Okhotnikov
::
:: Received January 24, 1995
:: Copyright (c) 1995-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, SUBSET_1, CQC_LANG, QC_LANG1, CQC_THE1, TARSKI,
      XBOOLE_0, XBOOLEAN, BVFUNC_2, RCOMP_1, XXREAL_0, FINSEQ_1, FUNCT_1,
      ARYTM_3, CARD_1, ZFREFLE1, FUNCOP_1, REALSET1, QC_LANG3, CQC_THE3;
 notations TARSKI, XBOOLE_0, SUBSET_1, DOMAIN_1, NUMBERS, ORDINAL1, NAT_1,
      FUNCT_1, FINSEQ_1, QC_LANG1, QC_LANG3, CQC_LANG, CQC_THE1, XXREAL_0;
 constructors DOMAIN_1, XXREAL_0, NAT_1, MEMBERED, QC_LANG3, CQC_THE1;
 registrations SUBSET_1, RELSET_1, MEMBERED, CQC_LANG, LUKASI_1, RELAT_1;
 requirements NUMERALS, REAL, BOOLE, SUBSET, ARITHM;
 definitions TARSKI;
 theorems TARSKI, ZFMISC_1, SUBSET_1, CQC_THE1, CQC_THE2, LUKASI_1, NAT_1,
      QC_LANG1, QC_LANG2, QC_LANG3, PROCAL_1, CQC_LANG, XBOOLE_0, XBOOLE_1;
 schemes NAT_1, QC_LANG1;

begin
theorem
L1: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (R2 in R8 implies R8 |- R2))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R8 being (Subset of ( CQC-WFF R1 ));
L2: R8 c= ( Cn R8 ) by CQC_THE1:17;
thus L3: thesis by L2 , CQC_THE1:def 8;
end;
theorem
L4: (for R1 being QC-alphabet holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (for R9 being (Subset of ( CQC-WFF R1 )) holds (R8 c= ( Cn R9 ) implies ( Cn R8 ) c= ( Cn R9 ))))) by CQC_THE1:15 , CQC_THE1:16;
theorem
L5: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R8 being (Subset of ( CQC-WFF R1 )) holds ((R8 |- R2 & { R2 } |- R3) implies R8 |- R3)))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R8 being (Subset of ( CQC-WFF R1 ));
assume that
L6: R8 |- R2
and
L7: { R2 } |- R3;
L8: R2 in ( Cn R8 ) by L6 , CQC_THE1:def 8;
L9: { R2 } c= ( Cn R8 ) by L8 , ZFMISC_1:31;
L10: ( Cn { R2 } ) c= ( Cn R8 ) by L9 , CQC_THE1:15 , CQC_THE1:16;
L11: R3 in ( Cn { R2 } ) by L7 , CQC_THE1:def 8;
thus L12: thesis by L11 , L10 , CQC_THE1:def 8;
end;
theorem
L13: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (for R9 being (Subset of ( CQC-WFF R1 )) holds ((R8 |- R2 & R8 c= R9) implies R9 |- R2)))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R8 being (Subset of ( CQC-WFF R1 ));
let R9 being (Subset of ( CQC-WFF R1 ));
assume that
L14: R8 |- R2
and
L15: R8 c= R9;
L16: R2 in ( Cn R8 ) by L14 , CQC_THE1:def 8;
L17: ( Cn R8 ) c= ( Cn R9 ) by L15 , CQC_THE1:18;
thus L18: thesis by L17 , L16 , CQC_THE1:def 8;
end;
definition
let R1 being QC-alphabet;
let C1 , C2 being (Element of ( CQC-WFF R1 ));
pred C1 |- C2
means
:L19: { C1 } |- C2
;end;
theorem
L21: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds R2 |- R2))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
L22: { R2 } |- R2 by CQC_THE2:87;
thus L23: thesis by L22 , L19;
end;
theorem
L24: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R4 being (Element of ( CQC-WFF R1 )) holds ((R2 |- R3 & R3 |- R4) implies R2 |- R4)))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R4 being (Element of ( CQC-WFF R1 ));
assume that
L25: R2 |- R3
and
L26: R3 |- R4;
L27: { R3 } |- R4 by L26 , L19;
L28: { R2 } |- R3 by L25 , L19;
L29: { R2 } |- R4 by L28 , L27 , L5;
thus L30: thesis by L29 , L19;
end;
definition
let R1 being QC-alphabet;
let C3 , C4 being (Subset of ( CQC-WFF R1 ));
pred C3 |- C4
means
:L31: (for B1 being (Element of ( CQC-WFF R1 )) holds (B1 in C4 implies C3 |- B1))
;end;
theorem
L33: (for R1 being QC-alphabet holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (for R9 being (Subset of ( CQC-WFF R1 )) holds (R8 |- R9 iff R9 c= ( Cn R8 )))))
proof
let R1 being QC-alphabet;
let R8 being (Subset of ( CQC-WFF R1 ));
let R9 being (Subset of ( CQC-WFF R1 ));
L34:
now
assume L35: R8 |- R9;
L36:
now
let C5 being set;
assume L37: C5 in R9;
reconsider D1 = C5 as (Element of ( CQC-WFF R1 )) by L37;
L38: R8 |- D1 by L35 , L37 , L31;
thus L39: C5 in ( Cn R8 ) by L38 , CQC_THE1:def 8;
end;
thus L40: R9 c= ( Cn R8 ) by L36 , TARSKI:def 3;
end;
L41:
now
assume L42: R9 c= ( Cn R8 );
L43: (for R2 being (Element of ( CQC-WFF R1 )) holds (R2 in R9 implies R8 |- R2)) by L42 , CQC_THE1:def 8;
thus L44: R8 |- R9 by L43 , L31;
end;
thus L45: thesis by L41 , L34;
end;
theorem
L46: (for R1 being QC-alphabet holds (for R8 being (Subset of ( CQC-WFF R1 )) holds R8 |- R8))
proof
let R1 being QC-alphabet;
let R8 being (Subset of ( CQC-WFF R1 ));
L47: (for R2 being (Element of ( CQC-WFF R1 )) holds (R2 in R8 implies R8 |- R2)) by L1;
thus L48: thesis by L47 , L31;
end;
theorem
L49: (for R1 being QC-alphabet holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (for R9 being (Subset of ( CQC-WFF R1 )) holds (for R10 being (Subset of ( CQC-WFF R1 )) holds ((R8 |- R9 & R9 |- R10) implies R8 |- R10)))))
proof
let R1 being QC-alphabet;
let R8 being (Subset of ( CQC-WFF R1 ));
let R9 being (Subset of ( CQC-WFF R1 ));
let R10 being (Subset of ( CQC-WFF R1 ));
assume that
L50: R8 |- R9
and
L51: R9 |- R10;
L52: (for R2 being (Element of ( CQC-WFF R1 )) holds (R2 in R10 implies R8 |- R2))
proof
let R2 being (Element of ( CQC-WFF R1 ));
assume L53: R2 in R10;
L54: R9 |- R2 by L53 , L51 , L31;
L55: R2 in ( Cn R9 ) by L54 , CQC_THE1:def 8;
L56: R9 c= ( Cn R8 ) by L50 , L33;
L57: ( Cn R9 ) c= ( Cn R8 ) by L56 , CQC_THE1:15 , CQC_THE1:16;
thus L58: thesis by L57 , L55 , CQC_THE1:def 8;
end;
thus L59: thesis by L52 , L31;
end;
theorem
L60: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (R8 |- { R2 } iff R8 |- R2))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R8 being (Subset of ( CQC-WFF R1 ));
L61:
now
assume L62: R8 |- R2;
L63: (for R3 being (Element of ( CQC-WFF R1 )) holds (R3 in { R2 } implies R8 |- R3)) by L62 , TARSKI:def 1;
thus L64: R8 |- { R2 } by L63 , L31;
end;
L65:
now
L66: R2 in { R2 } by TARSKI:def 1;
assume L67: R8 |- { R2 };
thus L68: R8 |- R2 by L67 , L66 , L31;
end;
thus L69: thesis by L65 , L61;
end;
theorem
L70: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds ({ R2 } |- { R3 } iff R2 |- R3))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
L71:
now
assume L72: R2 |- R3;
L73: { R2 } |- R3 by L72 , L19;
thus L74: { R2 } |- { R3 } by L73 , L60;
end;
L75:
now
assume L76: { R2 } |- { R3 };
L77: { R2 } |- R3 by L76 , L60;
thus L78: R2 |- R3 by L77 , L19;
end;
thus L79: thesis by L75 , L71;
end;
theorem
L80: (for R1 being QC-alphabet holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (for R9 being (Subset of ( CQC-WFF R1 )) holds (R8 c= R9 implies R9 |- R8))))
proof
let R1 being QC-alphabet;
let R8 being (Subset of ( CQC-WFF R1 ));
let R9 being (Subset of ( CQC-WFF R1 ));
assume L81: R8 c= R9;
L82: (for R2 being (Element of ( CQC-WFF R1 )) holds (R2 in R8 implies R9 |- R2)) by L81 , L1;
thus L83: thesis by L82 , L31;
end;
theorem
L84: (for R1 being QC-alphabet holds (for R8 being (Subset of ( CQC-WFF R1 )) holds R8 |- ( TAUT R1 )))
proof
let R1 being QC-alphabet;
let R8 being (Subset of ( CQC-WFF R1 ));
L85: ( TAUT R1 ) c= ( Cn R8 ) by CQC_THE1:39;
thus L86: thesis by L85 , L33;
end;
theorem
L87: (for R1 being QC-alphabet holds ( {} ( CQC-WFF R1 ) ) |- ( TAUT R1 )) by L84;
definition
let R1 being QC-alphabet;
let C6 being (Subset of ( CQC-WFF R1 ));
pred  |- C6
means
:L88: (for B2 being (Element of ( CQC-WFF R1 )) holds (B2 in C6 implies B2 is  valid))
;end;
theorem
L90: (for R1 being QC-alphabet holds (for R8 being (Subset of ( CQC-WFF R1 )) holds ( |- R8 iff ( {} ( CQC-WFF R1 ) ) |- R8)))
proof
let R1 being QC-alphabet;
let R8 being (Subset of ( CQC-WFF R1 ));
L91:
now
assume L92: ( {} ( CQC-WFF R1 ) ) |- R8;
L93:
now
let R2 being (Element of ( CQC-WFF R1 ));
assume L94: R2 in R8;
L95: ( {} ( CQC-WFF R1 ) ) |- R2 by L94 , L92 , L31;
thus L96: R2 is  valid by L95 , CQC_THE1:def 9;
end;
thus L97:  |- R8 by L93 , L88;
end;
L98:
now
assume L99:  |- R8;
L100:
now
let R2 being (Element of ( CQC-WFF R1 ));
assume L101: R2 in R8;
L102: R2 is  valid by L101 , L99 , L88;
thus L103: ( {} ( CQC-WFF R1 ) ) |- R2 by L102 , CQC_THE1:def 9;
end;
thus L104: ( {} ( CQC-WFF R1 ) ) |- R8 by L100 , L31;
end;
thus L105: thesis by L98 , L91;
end;
theorem
L106: (for R1 being QC-alphabet holds  |- ( TAUT R1 ))
proof
let R1 being QC-alphabet;
L107: ( |- ( TAUT R1 ) iff ( {} ( CQC-WFF R1 ) ) |- ( TAUT R1 )) by L90;
L108: ( {} ( CQC-WFF R1 ) ) |- ( TAUT R1 ) by L84;
thus L109: thesis by L108 , L107;
end;
theorem
L110: (for R1 being QC-alphabet holds (for R8 being (Subset of ( CQC-WFF R1 )) holds ( |- R8 iff R8 c= ( TAUT R1 ))))
proof
let R1 being QC-alphabet;
let R8 being (Subset of ( CQC-WFF R1 ));
L111:
now
assume L112:  |- R8;
L113:
now
let R2 being (Element of ( CQC-WFF R1 ));
assume L114: R2 in R8;
L115: R2 is  valid by L114 , L112 , L88;
thus L116: R2 in ( TAUT R1 ) by L115 , CQC_THE1:def 10;
end;
thus L117: R8 c= ( TAUT R1 ) by L113 , SUBSET_1:2;
end;
L118:
now
assume L119: R8 c= ( TAUT R1 );
L120: (for R2 being (Element of ( CQC-WFF R1 )) holds (R2 in R8 implies R2 is  valid)) by L119 , CQC_THE1:def 10;
thus L121:  |- R8 by L120 , L88;
end;
thus L122: thesis by L118 , L111;
end;
definition
let R1 being QC-alphabet;
let R8 being (Subset of ( CQC-WFF R1 ));
let R9 being (Subset of ( CQC-WFF R1 ));
pred R8 |-| R9
means
:L123: (for R2 being (Element of ( CQC-WFF R1 )) holds (R8 |- R2 iff R9 |- R2))
;reflexivity
;
symmetry
;
end;
theorem
L125: (for R1 being QC-alphabet holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (for R9 being (Subset of ( CQC-WFF R1 )) holds (R8 |-| R9 iff (R8 |- R9 & R9 |- R8)))))
proof
let R1 being QC-alphabet;
let R8 being (Subset of ( CQC-WFF R1 ));
let R9 being (Subset of ( CQC-WFF R1 ));
L126:
now
assume that
L127: R8 |- R9
and
L128: R9 |- R8;
L129:
now
let R2 being (Element of ( CQC-WFF R1 ));
L130:
now
assume L131: R9 |- R2;
L132: R9 |- { R2 } by L131 , L60;
L133: R8 |- { R2 } by L132 , L127 , L49;
thus L134: R8 |- R2 by L133 , L60;
end;
L135:
now
assume L136: R8 |- R2;
L137: R8 |- { R2 } by L136 , L60;
L138: R9 |- { R2 } by L137 , L128 , L49;
thus L139: R9 |- R2 by L138 , L60;
end;
thus L140: (R8 |- R2 iff R9 |- R2) by L135 , L130;
end;
thus L141: R8 |-| R9 by L129 , L123;
end;
L142:
now
assume L143: R8 |-| R9;
L144:
now
let R2 being (Element of ( CQC-WFF R1 ));
assume L145: R2 in R9;
L146: R9 |- R2 by L145 , L1;
thus L147: R8 |- R2 by L146 , L143 , L123;
end;
thus L148: R8 |- R9 by L144 , L31;
L149:
now
let R2 being (Element of ( CQC-WFF R1 ));
assume L150: R2 in R8;
L151: R8 |- R2 by L150 , L1;
thus L152: R9 |- R2 by L151 , L143 , L123;
end;
thus L153: R9 |- R8 by L149 , L31;
end;
thus L154: thesis by L142 , L126;
end;
theorem
L155: (for R1 being QC-alphabet holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (for R9 being (Subset of ( CQC-WFF R1 )) holds (for R10 being (Subset of ( CQC-WFF R1 )) holds ((R8 |-| R9 & R9 |-| R10) implies R8 |-| R10)))))
proof
let R1 being QC-alphabet;
let R8 being (Subset of ( CQC-WFF R1 ));
let R9 being (Subset of ( CQC-WFF R1 ));
let R10 being (Subset of ( CQC-WFF R1 ));
assume that
L156: R8 |-| R9
and
L157: R9 |-| R10;
L158: R10 |- R9 by L157 , L125;
L159: R9 |- R8 by L156 , L125;
L160: R10 |- R8 by L159 , L158 , L49;
L161: R9 |- R10 by L157 , L125;
L162: R8 |- R9 by L156 , L125;
L163: R8 |- R10 by L162 , L161 , L49;
thus L164: thesis by L163 , L160 , L125;
end;
theorem
L165: (for R1 being QC-alphabet holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (for R9 being (Subset of ( CQC-WFF R1 )) holds (R8 |-| R9 iff ( Cn R8 ) = ( Cn R9 )))))
proof
let R1 being QC-alphabet;
let R8 being (Subset of ( CQC-WFF R1 ));
let R9 being (Subset of ( CQC-WFF R1 ));
L166:
now
assume L167: R8 |-| R9;
L168: R9 |- R8 by L167 , L125;
L169: R8 c= ( Cn R9 ) by L168 , L33;
L170: ( Cn R8 ) c= ( Cn R9 ) by L169 , CQC_THE1:15 , CQC_THE1:16;
L171: R8 |- R9 by L167 , L125;
L172: R9 c= ( Cn R8 ) by L171 , L33;
L173: ( Cn R9 ) c= ( Cn R8 ) by L172 , CQC_THE1:15 , CQC_THE1:16;
thus L174: ( Cn R8 ) = ( Cn R9 ) by L173 , L170 , XBOOLE_0:def 10;
end;
L175:
now
assume L176: ( Cn R8 ) = ( Cn R9 );
L177: R8 c= ( Cn R8 ) by CQC_THE1:17;
L178: R9 |- R8 by L177 , L176 , L33;
L179: R9 c= ( Cn R9 ) by CQC_THE1:17;
L180: R8 |- R9 by L179 , L176 , L33;
thus L181: R8 |-| R9 by L180 , L178 , L125;
end;
thus L182: thesis by L175 , L166;
end;
L183: (for R1 being QC-alphabet holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (for R9 being (Subset of ( CQC-WFF R1 )) holds ( R8 \/ R9 ) c= ( ( Cn R8 ) \/ ( Cn R9 ) ))))
proof
let R1 being QC-alphabet;
let R8 being (Subset of ( CQC-WFF R1 ));
let R9 being (Subset of ( CQC-WFF R1 ));
L184: R9 c= ( Cn R9 ) by CQC_THE1:17;
L185: R8 c= ( Cn R8 ) by CQC_THE1:17;
thus L186: thesis by L185 , L184 , XBOOLE_1:13;
end;
theorem
L187: (for R1 being QC-alphabet holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (for R9 being (Subset of ( CQC-WFF R1 )) holds ( ( Cn R8 ) \/ ( Cn R9 ) ) c= ( Cn ( R8 \/ R9 ) ))))
proof
let R1 being QC-alphabet;
let R8 being (Subset of ( CQC-WFF R1 ));
let R9 being (Subset of ( CQC-WFF R1 ));
L188: ( Cn R9 ) c= ( Cn ( R8 \/ R9 ) ) by CQC_THE1:18 , XBOOLE_1:7;
L189: ( Cn R8 ) c= ( Cn ( R8 \/ R9 ) ) by CQC_THE1:18 , XBOOLE_1:7;
thus L190: thesis by L189 , L188 , XBOOLE_1:8;
end;
theorem
L191: (for R1 being QC-alphabet holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (for R9 being (Subset of ( CQC-WFF R1 )) holds ( Cn ( R8 \/ R9 ) ) = ( Cn ( ( Cn R8 ) \/ ( Cn R9 ) ) ))))
proof
let R1 being QC-alphabet;
let R8 being (Subset of ( CQC-WFF R1 ));
let R9 being (Subset of ( CQC-WFF R1 ));
L192: ( Cn ( R8 \/ R9 ) ) c= ( Cn ( ( Cn R8 ) \/ ( Cn R9 ) ) ) by L183 , CQC_THE1:18;
L193: ( Cn ( ( Cn R8 ) \/ ( Cn R9 ) ) ) c= ( Cn ( R8 \/ R9 ) ) by L4 , L187;
thus L194: thesis by L193 , L192 , XBOOLE_0:def 10;
end;
theorem
L195: (for R1 being QC-alphabet holds (for R8 being (Subset of ( CQC-WFF R1 )) holds R8 |-| ( Cn R8 )))
proof
let R1 being QC-alphabet;
let R8 being (Subset of ( CQC-WFF R1 ));
L196: ( Cn R8 ) = ( Cn ( Cn R8 ) ) by CQC_THE1:19;
thus L197: thesis by L196 , L165;
end;
theorem
L198: (for R1 being QC-alphabet holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (for R9 being (Subset of ( CQC-WFF R1 )) holds ( R8 \/ R9 ) |-| ( ( Cn R8 ) \/ ( Cn R9 ) ))))
proof
let R1 being QC-alphabet;
let R8 being (Subset of ( CQC-WFF R1 ));
let R9 being (Subset of ( CQC-WFF R1 ));
L199: ( Cn ( R8 \/ R9 ) ) = ( Cn ( ( Cn R8 ) \/ ( Cn R9 ) ) ) by L191;
thus L200: thesis by L199 , L165;
end;
theorem
L201: (for R1 being QC-alphabet holds (for R9 being (Subset of ( CQC-WFF R1 )) holds (for R11 being (Subset of ( CQC-WFF R1 )) holds (for R12 being (Subset of ( CQC-WFF R1 )) holds (R11 |-| R12 implies ( R11 \/ R9 ) |-| ( R12 \/ R9 ))))))
proof
let R1 being QC-alphabet;
let R9 being (Subset of ( CQC-WFF R1 ));
let R11 being (Subset of ( CQC-WFF R1 ));
let R12 being (Subset of ( CQC-WFF R1 ));
assume L202: R11 |-| R12;
L203: ( Cn R11 ) = ( Cn R12 ) by L202 , L165;
L204: ( Cn ( R11 \/ R9 ) ) = ( Cn ( ( Cn R12 ) \/ ( Cn R9 ) ) ) by L203 , L191
.= ( Cn ( R12 \/ R9 ) ) by L191;
thus L205: thesis by L204 , L165;
end;
theorem
L206: (for R1 being QC-alphabet holds (for R9 being (Subset of ( CQC-WFF R1 )) holds (for R10 being (Subset of ( CQC-WFF R1 )) holds (for R11 being (Subset of ( CQC-WFF R1 )) holds (for R12 being (Subset of ( CQC-WFF R1 )) holds ((R11 |-| R12 & ( R11 \/ R9 ) |- R10) implies ( R12 \/ R9 ) |- R10))))))
proof
let R1 being QC-alphabet;
let R9 being (Subset of ( CQC-WFF R1 ));
let R10 being (Subset of ( CQC-WFF R1 ));
let R11 being (Subset of ( CQC-WFF R1 ));
let R12 being (Subset of ( CQC-WFF R1 ));
assume that
L207: R11 |-| R12
and
L208: ( R11 \/ R9 ) |- R10;
L209: ( R11 \/ R9 ) |-| ( R12 \/ R9 ) by L207 , L201;
L210: ( Cn ( R11 \/ R9 ) ) = ( Cn ( R12 \/ R9 ) ) by L209 , L165;
L211: R10 c= ( Cn ( R12 \/ R9 ) ) by L210 , L208 , L33;
thus L212: thesis by L211 , L33;
end;
theorem
L213: (for R1 being QC-alphabet holds (for R9 being (Subset of ( CQC-WFF R1 )) holds (for R11 being (Subset of ( CQC-WFF R1 )) holds (for R12 being (Subset of ( CQC-WFF R1 )) holds ((R11 |-| R12 & R9 |- R11) implies R9 |- R12)))))
proof
let R1 being QC-alphabet;
let R9 being (Subset of ( CQC-WFF R1 ));
let R11 being (Subset of ( CQC-WFF R1 ));
let R12 being (Subset of ( CQC-WFF R1 ));
assume that
L214: R11 |-| R12
and
L215: R9 |- R11;
L216: R11 |- R12 by L214 , L125;
thus L217: thesis by L216 , L215 , L49;
end;
definition
let R1 being QC-alphabet;
let C7 , C8 being (Element of ( CQC-WFF R1 ));
pred C7 |-| C8
means
:L218: (C7 |- C8 & C8 |- C7)
;reflexivity
 by L21;
symmetry
;
end;
theorem
L220: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R4 being (Element of ( CQC-WFF R1 )) holds ((R2 |-| R3 & R3 |-| R4) implies R2 |-| R4)))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R4 being (Element of ( CQC-WFF R1 ));
assume that
L221: R2 |-| R3
and
L222: R3 |-| R4;
L223: R4 |- R3 by L222 , L218;
L224: R3 |- R2 by L221 , L218;
L225: R4 |- R2 by L224 , L223 , L24;
L226: R3 |- R4 by L222 , L218;
L227: R2 |- R3 by L221 , L218;
L228: R2 |- R4 by L227 , L226 , L24;
thus L229: thesis by L228 , L225 , L218;
end;
theorem
L230: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (R2 |-| R3 iff { R2 } |-| { R3 }))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
L231:
now
assume L232: { R2 } |-| { R3 };
L233: { R3 } |- { R2 } by L232 , L125;
L234: R3 |- R2 by L233 , L70;
L235: { R2 } |- { R3 } by L232 , L125;
L236: R2 |- R3 by L235 , L70;
thus L237: R2 |-| R3 by L236 , L234 , L218;
end;
L238:
now
assume L239: R2 |-| R3;
L240: R3 |- R2 by L239 , L218;
L241: { R3 } |- { R2 } by L240 , L70;
L242: R2 |- R3 by L239 , L218;
L243: { R2 } |- { R3 } by L242 , L70;
thus L244: { R2 } |-| { R3 } by L243 , L241 , L125;
end;
thus L245: thesis by L238 , L231;
end;
theorem
L246: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R8 being (Subset of ( CQC-WFF R1 )) holds ((R2 |-| R3 & R8 |- R2) implies R8 |- R3)))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R8 being (Subset of ( CQC-WFF R1 ));
assume that
L247: R2 |-| R3
and
L248: R8 |- R2;
L249: R8 |- { R2 } by L248 , L60;
L250: { R2 } |-| { R3 } by L247 , L230;
L251: R8 |- { R3 } by L250 , L249 , L213;
thus L252: thesis by L251 , L60;
end;
theorem
L253: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds { R2 , R3 } |-| { ( R2 '&' R3 ) })))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
L254: (for R4 being (Element of ( CQC-WFF R1 )) holds ({ R2 , R3 } |- R4 iff { ( R2 '&' R3 ) } |- R4)) by CQC_THE2:89;
thus L255: thesis by L254 , L123;
end;
theorem
L256: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds ( R2 '&' R3 ) |-| ( R3 '&' R2 ))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
L257: { R3 , R2 } |-| { ( R3 '&' R2 ) } by L253;
L258: { ( R2 '&' R3 ) } |-| { R3 , R2 } by L253;
L259: { ( R2 '&' R3 ) } |-| { ( R3 '&' R2 ) } by L258 , L257 , L155;
thus L260: thesis by L259 , L230;
end;
L261: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R8 being (Subset of ( CQC-WFF R1 )) holds ((R8 |- R2 & R8 |- R3) implies R8 |- ( R2 '&' R3 ))))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R8 being (Subset of ( CQC-WFF R1 ));
assume that
L262: R8 |- R2
and
L263: R8 |- R3;
L264: (for R4 being (Element of ( CQC-WFF R1 )) holds (R4 in { R2 , R3 } implies R8 |- R4)) by L262 , L263 , TARSKI:def 2;
L265: R8 |- { R2 , R3 } by L264 , L31;
L266: R8 |- { ( R2 '&' R3 ) } by L265 , L213 , L253;
thus L267: thesis by L266 , L60;
end;
L268: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (R8 |- ( R2 '&' R3 ) implies (R8 |- R2 & R8 |- R3))))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R8 being (Subset of ( CQC-WFF R1 ));
assume L269: R8 |- ( R2 '&' R3 );
L270: R8 |- { ( R2 '&' R3 ) } by L269 , L60;
L271: { R2 , R3 } |-| { ( R2 '&' R3 ) } by L253;
L272: R8 |- { R2 , R3 } by L271 , L270 , L213;
L273: R2 in { R2 , R3 } by TARSKI:def 2;
thus L274: R8 |- R2 by L273 , L272 , L31;
L275: R3 in { R2 , R3 } by TARSKI:def 2;
thus L276: thesis by L275 , L272 , L31;
end;
theorem
L277: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (R8 |- ( R2 '&' R3 ) iff (R8 |- R2 & R8 |- R3)))))) by L261 , L268;
L278: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R4 being (Element of ( CQC-WFF R1 )) holds (for R5 being (Element of ( CQC-WFF R1 )) holds ((R2 |-| R3 & R4 |-| R5) implies ( R2 '&' R4 ) |- ( R3 '&' R5 )))))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R4 being (Element of ( CQC-WFF R1 ));
let R5 being (Element of ( CQC-WFF R1 ));
assume that
L279: R2 |-| R3
and
L280: R4 |-| R5;
L281: R4 |- R5 by L280 , L218;
L282: { R4 } |- R5 by L281 , L19;
L283: { R2 , R4 } |- R5 by L282 , L13 , ZFMISC_1:7;
L284: { R2 , R4 } |-| { ( R2 '&' R4 ) } by L253;
L285: { ( R2 '&' R4 ) } |- { R2 , R4 } by L284 , L125;
L286: R2 |- R3 by L279 , L218;
L287: { R2 } |- R3 by L286 , L19;
L288: { R2 , R4 } |- R3 by L287 , L13 , ZFMISC_1:7;
L289: { R2 , R4 } |- ( R3 '&' R5 ) by L288 , L283 , L261;
L290: { R2 , R4 } |- { ( R3 '&' R5 ) } by L289 , L60;
L291: { ( R2 '&' R4 ) } |- { ( R3 '&' R5 ) } by L290 , L285 , L49;
thus L292: thesis by L291 , L70;
end;
theorem
L293: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R4 being (Element of ( CQC-WFF R1 )) holds (for R5 being (Element of ( CQC-WFF R1 )) holds ((R2 |-| R3 & R4 |-| R5) implies ( R2 '&' R4 ) |-| ( R3 '&' R5 )))))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R4 being (Element of ( CQC-WFF R1 ));
let R5 being (Element of ( CQC-WFF R1 ));
assume that
L294: R2 |-| R3
and
L295: R4 |-| R5;
L296: ( R3 '&' R5 ) |- ( R2 '&' R4 ) by L294 , L295 , L278;
L297: ( R2 '&' R4 ) |- ( R3 '&' R5 ) by L294 , L295 , L278;
thus L298: thesis by L297 , L296 , L218;
end;
theorem
L299: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (for R14 being (bound_QC-variable of R1) holds (R8 |- ( All (R14 , R2) ) iff R8 |- R2)))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R8 being (Subset of ( CQC-WFF R1 ));
let R14 being (bound_QC-variable of R1);
thus L300: (R8 |- ( All (R14 , R2) ) implies R8 |- R2)
proof
L301: R8 |- ( ( All (R14 , R2) ) => R2 ) by CQC_THE1:56;
assume L302: R8 |- ( All (R14 , R2) );
thus L303: thesis by L302 , L301 , CQC_THE1:55;
end;

thus L304: thesis by CQC_THE2:90;
end;
theorem
L305: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R14 being (bound_QC-variable of R1) holds ( All (R14 , R2) ) |-| R2)))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R14 being (bound_QC-variable of R1);
L306: { ( All (R14 , R2) ) } |- ( ( All (R14 , R2) ) => R2 ) by CQC_THE1:56;
L307: { ( All (R14 , R2) ) } |- R2 by L306 , CQC_THE1:55 , CQC_THE2:87;
thus L308: ( All (R14 , R2) ) |- R2 by L307 , L19;
L309: { R2 } |- R2 by CQC_THE2:87;
L310: { R2 } |- ( All (R14 , R2) ) by L309 , L299;
thus L311: thesis by L310 , L19;
end;
theorem
L312: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R14 being (bound_QC-variable of R1) holds (for R15 being (bound_QC-variable of R1) holds (R2 |-| R3 implies ( All (R14 , R2) ) |-| ( All (R15 , R3) )))))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R14 being (bound_QC-variable of R1);
let R15 being (bound_QC-variable of R1);
assume L313: R2 |-| R3;
L314: R3 |-| ( All (R15 , R3) ) by L305;
L315: ( All (R14 , R2) ) |-| R2 by L305;
L316: ( All (R14 , R2) ) |-| R3 by L315 , L313 , L220;
thus L317: thesis by L316 , L314 , L220;
end;
definition
let R1 being QC-alphabet;
let C9 , C10 being (Element of ( CQC-WFF R1 ));
pred C9 is_an_universal_closure_of C10
means
:L318: (C9 is  closed & (ex B3 being (Element of ( NAT )) st (1 <= B3 & (ex B4 being FinSequence st (( len B4 ) = B3 & ( B4 . 1 ) = C10 & ( B4 . B3 ) = C9 & (for B5 being (Element of ( NAT )) holds ((1 <= B5 & B5 < B3) implies (ex B6 being (bound_QC-variable of R1) st (ex B7 being (Element of ( CQC-WFF R1 )) st (B7 = ( B4 . B5 ) & ( B4 . ( B5 + 1 ) ) = ( All (B6 , B7) )))))))))))
;end;
theorem
L320: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (R2 is_an_universal_closure_of R3 implies R2 |-| R3))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
assume L321: R2 is_an_universal_closure_of R3;
consider C11 being (Element of ( NAT )) such that L322: 1 <= C11 and L323: (ex B8 being FinSequence st (( len B8 ) = C11 & ( B8 . 1 ) = R3 & ( B8 . C11 ) = R2 & (for B9 being (Element of ( NAT )) holds ((1 <= B9 & B9 < C11) implies (ex R14 being (bound_QC-variable of R1) st (ex R4 being (Element of ( CQC-WFF R1 )) st (R4 = ( B8 . B9 ) & ( B8 . ( B9 + 1 ) ) = ( All (R14 , R4) )))))))) by L321 , L318;
consider C12 being FinSequence such that L324: ( len C12 ) = C11 and L325: ( C12 . 1 ) = R3 and L326: ( C12 . C11 ) = R2 and L327: (for B10 being (Element of ( NAT )) holds ((1 <= B10 & B10 < C11) implies (ex R14 being (bound_QC-variable of R1) st (ex R4 being (Element of ( CQC-WFF R1 )) st (R4 = ( C12 . B10 ) & ( C12 . ( B10 + 1 ) ) = ( All (R14 , R4) )))))) by L323;
L328: (for B11 being (Element of ( NAT )) holds ((1 <= B11 & B11 <= C11) implies (ex R4 being (Element of ( CQC-WFF R1 )) st (R4 = ( C12 . B11 ) & R3 |-| R4))))
proof
defpred S1[ (Element of ( NAT )) ] means ((1 <= $1 & $1 <= C11) implies (ex R4 being (Element of ( CQC-WFF R1 )) st (R4 = ( C12 . $1 ) & R3 |-| R4)));
L329: (for B12 being (Element of ( NAT )) holds (S1[ B12 ] implies S1[ ( B12 + 1 ) ]))
proof
let C13 being (Element of ( NAT ));
assume that
L330: S1[ C13 ];
L331:
now
assume that
L332: 1 <= ( C13 + 1 )
and
L333: ( C13 + 1 ) <= C11;
per cases  by L333 , NAT_1:13 , NAT_1:14;
case L334: C13 = ( 0 );
take D2 = R3;
thus L335: (ex R4 being (Element of ( CQC-WFF R1 )) st (R4 = ( C12 . ( C13 + 1 ) ) & R3 |-| R4)) by L325 , L334;
end;
case L336: (1 <= C13 & C13 < C11);
consider R14 being (bound_QC-variable of R1), R4 being (Element of ( CQC-WFF R1 )) such that L337: R4 = ( C12 . C13 ) and L338: ( C12 . ( C13 + 1 ) ) = ( All (R14 , R4) ) by L336 , L327;
consider R5 being (Element of ( CQC-WFF R1 )) such that L339: R5 = ( All (R14 , R4) );
L340: R5 |-| R4 by L339 , L305;
thus L341: (ex R5 being (Element of ( CQC-WFF R1 )) st (R5 = ( C12 . ( C13 + 1 ) ) & R3 |-| R5)) by L340 , L330 , L336 , L337 , L338 , L339 , L220;
end;
end;
thus L343: thesis by L331;
end;
L344: S1[ ( 0 ) ];
thus L345: (for B13 being (Element of ( NAT )) holds S1[ B13 ]) from NAT_1:sch 1(L344 , L329);
end;
L346: (ex R4 being (Element of ( CQC-WFF R1 )) st (R4 = ( C12 . C11 ) & R3 |-| R4)) by L328 , L322;
thus L347: thesis by L346 , L326;
end;
theorem
L348: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (( R2 => R3 ) is  valid implies R2 |- R3))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
assume L349: ( R2 => R3 ) is  valid;
L350: { R2 } |- ( R2 => R3 ) by L349 , CQC_THE1:59;
L351: { R2 } |- R3 by L350 , CQC_THE1:55 , CQC_THE2:87;
thus L352: thesis by L351 , L19;
end;
theorem
L353: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (R8 |- ( R2 => R3 ) implies ( R8 \/ { R2 } ) |- R3)))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R8 being (Subset of ( CQC-WFF R1 ));
L354: R2 in { R2 } by TARSKI:def 1;
L355: R2 in ( R8 \/ { R2 } ) by L354 , XBOOLE_0:def 3;
L356: ( R8 \/ { R2 } ) |- R2 by L355 , L1;
assume L357: R8 |- ( R2 => R3 );
L358: ( R8 \/ { R2 } ) |- ( R2 => R3 ) by L357 , L13 , XBOOLE_1:7;
thus L359: thesis by L358 , L356 , CQC_THE1:55;
end;
theorem
L360: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds ((R2 is  closed & R2 |- R3) implies ( R2 => R3 ) is  valid))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
assume that
L361: R2 is  closed
and
L362: R2 |- R3;
L363: ( ( {} ( CQC-WFF R1 ) ) \/ { R2 } ) |- R3 by L362 , L19;
L364: ( {} ( CQC-WFF R1 ) ) |- ( R2 => R3 ) by L363 , L361 , CQC_THE2:92;
thus L365: thesis by L364 , CQC_THE1:def 9;
end;
theorem
L366: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R6 being (Element of ( CQC-WFF R1 )) holds (for R8 being (Subset of ( CQC-WFF R1 )) holds (R6 is_an_universal_closure_of R2 implies (( R8 \/ { R2 } ) |- R3 iff R8 |- ( R6 => R3 ))))))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R6 being (Element of ( CQC-WFF R1 ));
let R8 being (Subset of ( CQC-WFF R1 ));
assume L367: R6 is_an_universal_closure_of R2;
L368:
now
assume L369: ( R8 \/ { R2 } ) |- R3;
L370: ( R8 \/ { R2 } ) |- { R3 } by L369 , L60;
L371: R2 |-| R6 by L367 , L320;
L372: { R2 } |-| { R6 } by L371 , L230;
L373: ( R8 \/ { R6 } ) |- { R3 } by L372 , L370 , L206;
L374: ( R8 \/ { R6 } ) |- R3 by L373 , L60;
L375: R6 is  closed by L367 , L318;
thus L376: R8 |- ( R6 => R3 ) by L375 , L374 , CQC_THE2:92;
end;
thus L377: (( R8 \/ { R2 } ) |- R3 implies R8 |- ( R6 => R3 )) by L368;
L378:
now
assume L379: R8 |- ( R6 => R3 );
L380: ( R8 \/ { R6 } ) |- R3 by L379 , L353;
L381: ( R8 \/ { R6 } ) |- { R3 } by L380 , L60;
L382: R2 |-| R6 by L367 , L320;
L383: { R2 } |-| { R6 } by L382 , L230;
L384: ( R8 \/ { R2 } ) |- { R3 } by L383 , L381 , L206;
thus L385: ( R8 \/ { R2 } ) |- R3 by L384 , L60;
end;
thus L386: thesis by L378;
end;
theorem
L387: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds ((R2 is  closed & R2 |- R3) implies ( 'not' R3 ) |- ( 'not' R2 )))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
assume that
L388: R2 is  closed
and
L389: R2 |- R3;
L390: ( R2 => R3 ) is  valid by L388 , L389 , L360;
L391: ( ( 'not' R3 ) => ( 'not' R2 ) ) is  valid by L390 , LUKASI_1:52;
thus L392: thesis by L391 , L348;
end;
theorem
L393: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R8 being (Subset of ( CQC-WFF R1 )) holds ((R2 is  closed & ( R8 \/ { R2 } ) |- R3) implies ( R8 \/ { ( 'not' R3 ) } ) |- ( 'not' R2 ))))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R8 being (Subset of ( CQC-WFF R1 ));
assume that
L394: R2 is  closed
and
L395: ( R8 \/ { R2 } ) |- R3;
L396: R8 |- ( R2 => R3 ) by L394 , L395 , CQC_THE2:92;
L397: R8 |- ( ( 'not' R3 ) => ( 'not' R2 ) ) by L396 , LUKASI_1:69;
thus L398: thesis by L397 , L353;
end;
theorem
L399: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds ((R2 is  closed & ( 'not' R2 ) |- ( 'not' R3 )) implies R3 |- R2))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
assume that
L400: R2 is  closed
and
L401: ( 'not' R2 ) |- ( 'not' R3 );
L402: ( 'not' R2 ) is  closed by L400 , QC_LANG3:21;
L403: ( ( 'not' R2 ) => ( 'not' R3 ) ) is  valid by L402 , L401 , L360;
L404: ( R3 => R2 ) is  valid by L403 , LUKASI_1:52;
thus L405: thesis by L404 , L348;
end;
theorem
L406: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R8 being (Subset of ( CQC-WFF R1 )) holds ((R2 is  closed & ( R8 \/ { ( 'not' R2 ) } ) |- ( 'not' R3 )) implies ( R8 \/ { R3 } ) |- R2)))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R8 being (Subset of ( CQC-WFF R1 ));
assume that
L407: R2 is  closed
and
L408: ( R8 \/ { ( 'not' R2 ) } ) |- ( 'not' R3 );
L409: ( 'not' R2 ) is  closed by L407 , QC_LANG3:21;
L410: R8 |- ( ( 'not' R2 ) => ( 'not' R3 ) ) by L409 , L408 , CQC_THE2:92;
L411: R8 |- ( R3 => R2 ) by L410 , LUKASI_1:69;
thus L412: thesis by L411 , L353;
end;
theorem
L413: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds ((R2 is  closed & R3 is  closed) implies (R2 |- R3 iff ( 'not' R3 ) |- ( 'not' R2 )))))) by L387 , L399;
theorem
L414: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R6 being (Element of ( CQC-WFF R1 )) holds (for R7 being (Element of ( CQC-WFF R1 )) holds ((R6 is_an_universal_closure_of R2 & R7 is_an_universal_closure_of R3) implies (R2 |- R3 iff ( 'not' R7 ) |- ( 'not' R6 ))))))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R6 being (Element of ( CQC-WFF R1 ));
let R7 being (Element of ( CQC-WFF R1 ));
assume that
L415: R6 is_an_universal_closure_of R2
and
L416: R7 is_an_universal_closure_of R3;
L417:
now
L418: R3 |-| R7 by L416 , L320;
L419: R3 |- R7 by L418 , L218;
L420: R6 |-| R2 by L415 , L320;
L421: R6 |- R2 by L420 , L218;
assume L422: R2 |- R3;
L423: R6 |- R3 by L422 , L421 , L24;
L424: R6 |- R7 by L423 , L419 , L24;
L425: R6 is  closed by L415 , L318;
thus L426: ( 'not' R7 ) |- ( 'not' R6 ) by L425 , L424 , L387;
end;
thus L427: (R2 |- R3 implies ( 'not' R7 ) |- ( 'not' R6 )) by L417;
L428:
now
L429: R7 |-| R3 by L416 , L320;
L430: R7 |- R3 by L429 , L218;
L431: R6 |-| R2 by L415 , L320;
L432: R2 |- R6 by L431 , L218;
assume L433: ( 'not' R7 ) |- ( 'not' R6 );
L434: R7 is  closed by L416 , L318;
L435: R6 |- R7 by L434 , L433 , L399;
L436: R2 |- R7 by L435 , L432 , L24;
thus L437: R2 |- R3 by L436 , L430 , L24;
end;
thus L438: thesis by L428;
end;
theorem
L439: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R6 being (Element of ( CQC-WFF R1 )) holds (for R7 being (Element of ( CQC-WFF R1 )) holds ((R6 is_an_universal_closure_of R2 & R7 is_an_universal_closure_of R3) implies (R2 |-| R3 iff ( 'not' R6 ) |-| ( 'not' R7 ))))))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R6 being (Element of ( CQC-WFF R1 ));
let R7 being (Element of ( CQC-WFF R1 ));
assume that
L440: R6 is_an_universal_closure_of R2
and
L441: R7 is_an_universal_closure_of R3;
L442:
now
assume L443: R2 |-| R3;
L444: R2 |- R3 by L443 , L218;
L445: ( 'not' R7 ) |- ( 'not' R6 ) by L444 , L440 , L441 , L414;
L446: R3 |- R2 by L443 , L218;
L447: ( 'not' R6 ) |- ( 'not' R7 ) by L446 , L440 , L441 , L414;
thus L448: ( 'not' R6 ) |-| ( 'not' R7 ) by L447 , L445 , L218;
end;
thus L449: (R2 |-| R3 implies ( 'not' R6 ) |-| ( 'not' R7 )) by L442;
L450:
now
assume L451: ( 'not' R6 ) |-| ( 'not' R7 );
L452: ( 'not' R7 ) |- ( 'not' R6 ) by L451 , L218;
L453: R2 |- R3 by L452 , L440 , L441 , L414;
L454: ( 'not' R6 ) |- ( 'not' R7 ) by L451 , L218;
L455: R3 |- R2 by L454 , L440 , L441 , L414;
thus L456: R2 |-| R3 by L455 , L453 , L218;
end;
thus L457: thesis by L450;
end;
definition
let R1 being QC-alphabet;
let C14 , C15 being (Element of ( CQC-WFF R1 ));
pred C14 <==> C15
means
:L458: ( C14 <=> C15 ) is  valid
;reflexivity
proof
let R2 being (Element of ( CQC-WFF R1 ));
L459: ( {} ( CQC-WFF R1 ) ) |- ( R2 => R2 ) by CQC_THE1:def 9;
L460: ( {} ( CQC-WFF R1 ) ) |- ( ( R2 => R2 ) '&' ( R2 => R2 ) ) by L459 , L261;
L461: ( ( R2 => R2 ) '&' ( R2 => R2 ) ) is  valid by L460 , CQC_THE1:def 9;
thus L462: thesis by L461 , QC_LANG2:def 4;
end;
symmetry
proof
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
assume L463: ( R2 <=> R3 ) is  valid;
L464: ( ( R2 => R3 ) '&' ( R3 => R2 ) ) is  valid by L463 , QC_LANG2:def 4;
L465: ( {} ( CQC-WFF R1 ) ) |- ( ( R2 => R3 ) '&' ( R3 => R2 ) ) by L464 , CQC_THE1:def 9;
L466: ( {} ( CQC-WFF R1 ) ) |- ( R3 => R2 ) by L465 , L268;
L467: ( {} ( CQC-WFF R1 ) ) |- ( R2 => R3 ) by L465 , L268;
L468: ( {} ( CQC-WFF R1 ) ) |- ( ( R3 => R2 ) '&' ( R2 => R3 ) ) by L467 , L466 , L261;
L469: ( ( R3 => R2 ) '&' ( R2 => R3 ) ) is  valid by L468 , CQC_THE1:def 9;
thus L470: thesis by L469 , QC_LANG2:def 4;
end;
end;
theorem
L472: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (R2 <==> R3 iff (( R2 => R3 ) is  valid & ( R3 => R2 ) is  valid)))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
L473:
now
assume that
L474: ( R2 => R3 ) is  valid
and
L475: ( R3 => R2 ) is  valid;
L476: ( {} ( CQC-WFF R1 ) ) |- ( R3 => R2 ) by L475 , CQC_THE1:def 9;
L477: ( {} ( CQC-WFF R1 ) ) |- ( R2 => R3 ) by L474 , CQC_THE1:def 9;
L478: ( {} ( CQC-WFF R1 ) ) |- ( ( R2 => R3 ) '&' ( R3 => R2 ) ) by L477 , L476 , L261;
L479: ( ( R2 => R3 ) '&' ( R3 => R2 ) ) is  valid by L478 , CQC_THE1:def 9;
L480: ( R2 <=> R3 ) is  valid by L479 , QC_LANG2:def 4;
thus L481: R2 <==> R3 by L480 , L458;
end;
L482:
now
assume L483: R2 <==> R3;
L484: ( R2 <=> R3 ) is  valid by L483 , L458;
L485: ( ( R2 => R3 ) '&' ( R3 => R2 ) ) is  valid by L484 , QC_LANG2:def 4;
L486: ( {} ( CQC-WFF R1 ) ) |- ( ( R2 => R3 ) '&' ( R3 => R2 ) ) by L485 , CQC_THE1:def 9;
L487: ( {} ( CQC-WFF R1 ) ) |- ( R3 => R2 ) by L486 , L268;
L488: ( {} ( CQC-WFF R1 ) ) |- ( R2 => R3 ) by L486 , L268;
thus L489: (( R2 => R3 ) is  valid & ( R3 => R2 ) is  valid) by L488 , L487 , CQC_THE1:def 9;
end;
thus L490: thesis by L482 , L473;
end;
theorem
L491: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R4 being (Element of ( CQC-WFF R1 )) holds ((R2 <==> R3 & R3 <==> R4) implies R2 <==> R4)))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R4 being (Element of ( CQC-WFF R1 ));
assume that
L492: R2 <==> R3
and
L493: R3 <==> R4;
L494: ( R4 => R3 ) is  valid by L493 , L472;
L495: ( R3 => R2 ) is  valid by L492 , L472;
L496: ( R4 => R2 ) is  valid by L495 , L494 , LUKASI_1:42;
L497: ( R3 => R4 ) is  valid by L493 , L472;
L498: ( R2 => R3 ) is  valid by L492 , L472;
L499: ( R2 => R4 ) is  valid by L498 , L497 , LUKASI_1:42;
thus L500: thesis by L499 , L496 , L472;
end;
theorem
L501: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (R2 <==> R3 implies R2 |-| R3))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
assume L502: R2 <==> R3;
L503: ( R2 <=> R3 ) is  valid by L502 , L458;
L504: ( ( R2 => R3 ) '&' ( R3 => R2 ) ) is  valid by L503 , QC_LANG2:def 4;
L505: ( {} ( CQC-WFF R1 ) ) |- ( ( R2 => R3 ) '&' ( R3 => R2 ) ) by L504 , CQC_THE1:def 9;
L506: ( {} ( CQC-WFF R1 ) ) |- ( R3 => R2 ) by L505 , L268;
L507: ( R3 => R2 ) is  valid by L506 , CQC_THE1:def 9;
L508: ( {} ( CQC-WFF R1 ) ) |- ( R2 => R3 ) by L505 , L268;
L509: ( R2 => R3 ) is  valid by L508 , CQC_THE1:def 9;
thus L510: (R2 |- R3 & R3 |- R2) by L509 , L507 , L348;
end;
L511: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (R2 <==> R3 implies ( 'not' R2 ) <==> ( 'not' R3 )))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
assume L512: R2 <==> R3;
L513: ( R3 => R2 ) is  valid by L512 , L472;
L514: ( ( 'not' R2 ) => ( 'not' R3 ) ) is  valid by L513 , LUKASI_1:52;
L515: ( R2 => R3 ) is  valid by L512 , L472;
L516: ( ( 'not' R3 ) => ( 'not' R2 ) ) is  valid by L515 , LUKASI_1:52;
thus L517: thesis by L516 , L514 , L472;
end;
L518: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (( 'not' R2 ) <==> ( 'not' R3 ) implies R2 <==> R3))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
assume L519: ( 'not' R2 ) <==> ( 'not' R3 );
L520: ( ( 'not' R3 ) => ( 'not' R2 ) ) is  valid by L519 , L472;
L521: ( R2 => R3 ) is  valid by L520 , LUKASI_1:52;
L522: ( ( 'not' R2 ) => ( 'not' R3 ) ) is  valid by L519 , L472;
L523: ( R3 => R2 ) is  valid by L522 , LUKASI_1:52;
thus L524: thesis by L523 , L521 , L472;
end;
theorem
L525: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (R2 <==> R3 iff ( 'not' R2 ) <==> ( 'not' R3 ))))) by L511 , L518;
theorem
L526: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R4 being (Element of ( CQC-WFF R1 )) holds (for R5 being (Element of ( CQC-WFF R1 )) holds ((R2 <==> R3 & R4 <==> R5) implies ( R2 '&' R4 ) <==> ( R3 '&' R5 )))))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R4 being (Element of ( CQC-WFF R1 ));
let R5 being (Element of ( CQC-WFF R1 ));
assume that
L527: R2 <==> R3
and
L528: R4 <==> R5;
L529: ( R5 => R4 ) is  valid by L528 , L472;
L530: ( R5 => R4 ) in ( TAUT R1 ) by L529 , CQC_THE1:def 10;
L531: ( R3 => R2 ) is  valid by L527 , L472;
L532: ( R3 => R2 ) in ( TAUT R1 ) by L531 , CQC_THE1:def 10;
L533: ( ( R3 '&' R5 ) => ( R2 '&' R4 ) ) in ( TAUT R1 ) by L532 , L530 , PROCAL_1:56;
L534: ( ( R3 '&' R5 ) => ( R2 '&' R4 ) ) is  valid by L533 , CQC_THE1:def 10;
L535: ( R4 => R5 ) is  valid by L528 , L472;
L536: ( R4 => R5 ) in ( TAUT R1 ) by L535 , CQC_THE1:def 10;
L537: ( R2 => R3 ) is  valid by L527 , L472;
L538: ( R2 => R3 ) in ( TAUT R1 ) by L537 , CQC_THE1:def 10;
L539: ( ( R2 '&' R4 ) => ( R3 '&' R5 ) ) in ( TAUT R1 ) by L538 , L536 , PROCAL_1:56;
L540: ( ( R2 '&' R4 ) => ( R3 '&' R5 ) ) is  valid by L539 , CQC_THE1:def 10;
thus L541: thesis by L540 , L534 , L472;
end;
theorem
L542: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R4 being (Element of ( CQC-WFF R1 )) holds (for R5 being (Element of ( CQC-WFF R1 )) holds ((R2 <==> R3 & R4 <==> R5) implies ( R2 => R4 ) <==> ( R3 => R5 )))))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R4 being (Element of ( CQC-WFF R1 ));
let R5 being (Element of ( CQC-WFF R1 ));
assume that
L543: R2 <==> R3
and
L544: R4 <==> R5;
L545: ( 'not' R4 ) <==> ( 'not' R5 ) by L544 , L511;
L546: ( R2 '&' ( 'not' R4 ) ) <==> ( R3 '&' ( 'not' R5 ) ) by L545 , L543 , L526;
L547: ( 'not' ( R2 '&' ( 'not' R4 ) ) ) <==> ( 'not' ( R3 '&' ( 'not' R5 ) ) ) by L546 , L511;
L548: ( R2 => R4 ) = ( 'not' ( R2 '&' ( 'not' R4 ) ) ) by QC_LANG2:def 2;
thus L549: thesis by L548 , L547 , QC_LANG2:def 2;
end;
theorem
L550: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R4 being (Element of ( CQC-WFF R1 )) holds (for R5 being (Element of ( CQC-WFF R1 )) holds ((R2 <==> R3 & R4 <==> R5) implies ( R2 'or' R4 ) <==> ( R3 'or' R5 )))))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R4 being (Element of ( CQC-WFF R1 ));
let R5 being (Element of ( CQC-WFF R1 ));
assume that
L551: R2 <==> R3
and
L552: R4 <==> R5;
L553: ( R5 => R4 ) is  valid by L552 , L472;
L554: ( R5 => R4 ) in ( TAUT R1 ) by L553 , CQC_THE1:def 10;
L555: ( R3 => R2 ) is  valid by L551 , L472;
L556: ( R3 => R2 ) in ( TAUT R1 ) by L555 , CQC_THE1:def 10;
L557: ( ( R3 'or' R5 ) => ( R2 'or' R4 ) ) in ( TAUT R1 ) by L556 , L554 , PROCAL_1:57;
L558: ( ( R3 'or' R5 ) => ( R2 'or' R4 ) ) is  valid by L557 , CQC_THE1:def 10;
L559: ( R4 => R5 ) is  valid by L552 , L472;
L560: ( R4 => R5 ) in ( TAUT R1 ) by L559 , CQC_THE1:def 10;
L561: ( R2 => R3 ) is  valid by L551 , L472;
L562: ( R2 => R3 ) in ( TAUT R1 ) by L561 , CQC_THE1:def 10;
L563: ( ( R2 'or' R4 ) => ( R3 'or' R5 ) ) in ( TAUT R1 ) by L562 , L560 , PROCAL_1:57;
L564: ( ( R2 'or' R4 ) => ( R3 'or' R5 ) ) is  valid by L563 , CQC_THE1:def 10;
thus L565: thesis by L564 , L558 , L472;
end;
theorem
L566: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R4 being (Element of ( CQC-WFF R1 )) holds (for R5 being (Element of ( CQC-WFF R1 )) holds ((R2 <==> R3 & R4 <==> R5) implies ( R2 <=> R4 ) <==> ( R3 <=> R5 )))))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R4 being (Element of ( CQC-WFF R1 ));
let R5 being (Element of ( CQC-WFF R1 ));
assume that
L567: R2 <==> R3
and
L568: R4 <==> R5;
L569: ( R4 => R2 ) <==> ( R5 => R3 ) by L567 , L568 , L542;
L570: ( R2 <=> R4 ) = ( ( R2 => R4 ) '&' ( R4 => R2 ) ) by QC_LANG2:def 4;
L571: ( R2 => R4 ) <==> ( R3 => R5 ) by L567 , L568 , L542;
L572: ( ( R2 => R4 ) '&' ( R4 => R2 ) ) <==> ( ( R3 => R5 ) '&' ( R5 => R3 ) ) by L571 , L569 , L526;
thus L573: thesis by L572 , L570 , QC_LANG2:def 4;
end;
theorem
L574: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R14 being (bound_QC-variable of R1) holds (R2 <==> R3 implies ( All (R14 , R2) ) <==> ( All (R14 , R3) ))))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R14 being (bound_QC-variable of R1);
assume L575: R2 <==> R3;
L576: ( R3 => R2 ) is  valid by L575 , L472;
L577: ( All (R14 , ( R3 => R2 )) ) is  valid by L576 , CQC_THE2:23;
L578: ( ( All (R14 , R3) ) => ( All (R14 , R2) ) ) is  valid by L577 , CQC_THE2:31;
L579: ( R2 => R3 ) is  valid by L575 , L472;
L580: ( All (R14 , ( R2 => R3 )) ) is  valid by L579 , CQC_THE2:23;
L581: ( ( All (R14 , R2) ) => ( All (R14 , R3) ) ) is  valid by L580 , CQC_THE2:31;
thus L582: thesis by L581 , L578 , L472;
end;
theorem
L583: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R14 being (bound_QC-variable of R1) holds (R2 <==> R3 implies ( Ex (R14 , R2) ) <==> ( Ex (R14 , R3) ))))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R14 being (bound_QC-variable of R1);
assume L584: R2 <==> R3;
L585: ( 'not' R2 ) <==> ( 'not' R3 ) by L584 , L511;
L586: ( All (R14 , ( 'not' R2 )) ) <==> ( All (R14 , ( 'not' R3 )) ) by L585 , L574;
L587: ( 'not' ( All (R14 , ( 'not' R2 )) ) ) <==> ( 'not' ( All (R14 , ( 'not' R3 )) ) ) by L586 , L511;
L588: ( Ex (R14 , R2) ) = ( 'not' ( All (R14 , ( 'not' R2 )) ) ) by QC_LANG2:def 5;
thus L589: thesis by L588 , L587 , QC_LANG2:def 5;
end;
theorem
L590: (for R1 being QC-alphabet holds (for B14 being (Element of ( NAT )) holds (for B15 being (QC-variable_list of B14 , R1) holds (for B16 being (free_QC-variable of R1) holds (for B17 being (bound_QC-variable of R1) holds ( still_not-bound_in B15 ) c= ( still_not-bound_in ( Subst (B15 , ( B16 .--> B17 )) ) ))))))
proof
let R1 being QC-alphabet;
let C16 being (Element of ( NAT ));
let C17 being (QC-variable_list of C16 , R1);
let C18 being (free_QC-variable of R1);
let C19 being (bound_QC-variable of R1);
L591:
now
let C20 being set;
L592: ( still_not-bound_in C17 ) = { ( C17 . R16 ) where R16 is (Element of ( NAT )) : (1 <= R16 & R16 <= ( len C17 ) & ( C17 . R16 ) in ( bound_QC-variables R1 )) } by QC_LANG1:def 29;
assume L593: C20 in ( still_not-bound_in C17 );
reconsider D3 = C20 as (Element of ( still_not-bound_in C17 )) by L593;
L594: ( still_not-bound_in ( Subst (C17 , ( C18 .--> C19 )) ) ) = { ( ( Subst (C17 , ( C18 .--> C19 )) ) . R16 ) where R16 is (Element of ( NAT )) : (1 <= R16 & R16 <= ( len ( Subst (C17 , ( C18 .--> C19 )) ) ) & ( ( Subst (C17 , ( C18 .--> C19 )) ) . R16 ) in ( bound_QC-variables R1 )) } by QC_LANG1:def 29;
consider R16 being (Element of ( NAT )) such that L595: D3 = ( C17 . R16 ) and L596: 1 <= R16 and L597: R16 <= ( len C17 ) and L598: ( C17 . R16 ) in ( bound_QC-variables R1 ) by L592 , L593;
L599: ( C17 . R16 ) <> C18 by L598 , QC_LANG3:34;
L600: ( C17 . R16 ) = ( ( Subst (C17 , ( C18 .--> C19 )) ) . R16 ) by L599 , L596 , L597 , CQC_LANG:3;
L601: R16 <= ( len ( Subst (C17 , ( C18 .--> C19 )) ) ) by L597 , CQC_LANG:def 1;
thus L602: C20 in ( still_not-bound_in ( Subst (C17 , ( C18 .--> C19 )) ) ) by L601 , L594 , L595 , L596 , L598 , L600;
end;
thus L603: thesis by L591 , TARSKI:def 3;
end;
theorem
L604: (for R1 being QC-alphabet holds (for B18 being (Element of ( NAT )) holds (for B19 being (QC-variable_list of B18 , R1) holds (for B20 being (free_QC-variable of R1) holds (for B21 being (bound_QC-variable of R1) holds ( still_not-bound_in ( Subst (B19 , ( B20 .--> B21 )) ) ) c= ( ( still_not-bound_in B19 ) \/ { B21 } ))))))
proof
let R1 being QC-alphabet;
let C21 being (Element of ( NAT ));
let C22 being (QC-variable_list of C21 , R1);
let C23 being (free_QC-variable of R1);
let C24 being (bound_QC-variable of R1);
let C25 being set;
L605: ( still_not-bound_in C22 ) = { ( C22 . R16 ) where R16 is (Element of ( NAT )) : (1 <= R16 & R16 <= ( len C22 ) & ( C22 . R16 ) in ( bound_QC-variables R1 )) } by QC_LANG1:def 29;
assume L606: C25 in ( still_not-bound_in ( Subst (C22 , ( C23 .--> C24 )) ) );
reconsider D4 = C25 as (Element of ( still_not-bound_in ( Subst (C22 , ( C23 .--> C24 )) ) )) by L606;
L607: ( still_not-bound_in ( Subst (C22 , ( C23 .--> C24 )) ) ) = { ( ( Subst (C22 , ( C23 .--> C24 )) ) . R16 ) where R16 is (Element of ( NAT )) : (1 <= R16 & R16 <= ( len ( Subst (C22 , ( C23 .--> C24 )) ) ) & ( ( Subst (C22 , ( C23 .--> C24 )) ) . R16 ) in ( bound_QC-variables R1 )) } by QC_LANG1:def 29;
consider R16 being (Element of ( NAT )) such that L608: D4 = ( ( Subst (C22 , ( C23 .--> C24 )) ) . R16 ) and L609: 1 <= R16 and L610: R16 <= ( len ( Subst (C22 , ( C23 .--> C24 )) ) ) and L611: ( ( Subst (C22 , ( C23 .--> C24 )) ) . R16 ) in ( bound_QC-variables R1 ) by L607 , L606;
L612: R16 <= ( len C22 ) by L610 , CQC_LANG:def 1;
per cases ;
suppose L613: ( C22 . R16 ) = C23;

L614: D4 = C24 by L613 , L608 , L609 , L612 , CQC_LANG:3;
L615: D4 in { C24 } by L614 , TARSKI:def 1;
thus L616: thesis by L615 , XBOOLE_0:def 3;
end;
suppose L617: ( C22 . R16 ) <> C23;

L618: ( C22 . R16 ) = ( ( Subst (C22 , ( C23 .--> C24 )) ) . R16 ) by L617 , L609 , L612 , CQC_LANG:3;
L619: D4 in ( still_not-bound_in C22 ) by L618 , L605 , L608 , L609 , L611 , L612;
thus L620: thesis by L619 , XBOOLE_0:def 3;
end;
end;
theorem
L622: (for R1 being QC-alphabet holds (for R14 being (bound_QC-variable of R1) holds (for R13 being (QC-formula of R1) holds ( still_not-bound_in R13 ) c= ( still_not-bound_in ( R13 . R14 ) ))))
proof
let R1 being QC-alphabet;
let R14 being (bound_QC-variable of R1);
defpred S2[ (QC-formula of R1) ] means ( still_not-bound_in $1 ) c= ( still_not-bound_in ( $1 . R14 ) );
L623: (for B22 being (Element of ( QC-WFF R1 )) holds (S2[ B22 ] implies S2[ ( 'not' B22 ) ]))
proof
let C26 being (Element of ( QC-WFF R1 ));
L624: ( still_not-bound_in ( ( 'not' C26 ) . R14 ) ) = ( still_not-bound_in ( 'not' ( C26 . R14 ) ) ) by CQC_LANG:19
.= ( still_not-bound_in ( C26 . R14 ) ) by QC_LANG3:7;
thus L625: thesis by L624 , QC_LANG3:7;
end;
L626: (for B23 , B24 being (Element of ( QC-WFF R1 )) holds ((S2[ B23 ] & S2[ B24 ]) implies S2[ ( B23 '&' B24 ) ]))
proof
let C27 , C28 being (Element of ( QC-WFF R1 ));
assume that
L627: S2[ C27 ]
and
L628: S2[ C28 ];
L629: ( still_not-bound_in ( ( C27 '&' C28 ) . R14 ) ) = ( still_not-bound_in ( ( C27 . R14 ) '&' ( C28 . R14 ) ) ) by CQC_LANG:21
.= ( ( still_not-bound_in ( C27 . R14 ) ) \/ ( still_not-bound_in ( C28 . R14 ) ) ) by QC_LANG3:10;
L630: ( still_not-bound_in ( C27 '&' C28 ) ) = ( ( still_not-bound_in C27 ) \/ ( still_not-bound_in C28 ) ) by QC_LANG3:10;
thus L631: thesis by L630 , L627 , L628 , L629 , XBOOLE_1:13;
end;
L632: (for B25 being (bound_QC-variable of R1) holds (for B26 being (Element of ( QC-WFF R1 )) holds (S2[ B26 ] implies S2[ ( All (B25 , B26) ) ])))
proof
let C29 being (bound_QC-variable of R1);
let C30 being (Element of ( QC-WFF R1 ));
assume that
L633: S2[ C30 ];
per cases ;
suppose L634: C29 = R14;

thus L635: thesis by L634 , CQC_LANG:24;
end;
suppose L636: C29 <> R14;

L637: ( still_not-bound_in ( All (C29 , C30) ) ) = ( ( still_not-bound_in C30 ) \ { C29 } ) by QC_LANG3:12;
L638: ( still_not-bound_in ( ( All (C29 , C30) ) . R14 ) ) = ( still_not-bound_in ( All (C29 , ( C30 . R14 )) ) ) by L636 , CQC_LANG:25
.= ( ( still_not-bound_in ( C30 . R14 ) ) \ { C29 } ) by QC_LANG3:12;
thus L639: thesis by L638 , L633 , L637 , XBOOLE_1:33;
end;
end;
L641: (for B27 being (Element of ( NAT )) holds (for B28 being (QC-pred_symbol of B27 , R1) holds (for B29 being (QC-variable_list of B27 , R1) holds S2[ ( B28 ! B29 ) ])))
proof
let C31 being (Element of ( NAT ));
let C32 being (QC-pred_symbol of C31 , R1);
let C33 being (QC-variable_list of C31 , R1);
L642: ( still_not-bound_in ( ( C32 ! C33 ) . R14 ) ) = ( still_not-bound_in ( C32 ! ( Subst (C33 , ( ( R1 a. ( 0 ) ) .--> R14 )) ) ) ) by CQC_LANG:17
.= ( still_not-bound_in ( Subst (C33 , ( ( R1 a. ( 0 ) ) .--> R14 )) ) ) by QC_LANG3:5;
L643: ( still_not-bound_in C33 ) c= ( still_not-bound_in ( Subst (C33 , ( ( R1 a. ( 0 ) ) .--> R14 )) ) ) by L590;
thus L644: thesis by L643 , L642 , QC_LANG3:5;
end;
L645: S2[ ( VERUM R1 ) ] by CQC_LANG:15;
thus L646: (for R13 being (QC-formula of R1) holds S2[ R13 ]) from QC_LANG1:sch 1(L641 , L645 , L623 , L626 , L632);
end;
theorem
L647: (for R1 being QC-alphabet holds (for R14 being (bound_QC-variable of R1) holds (for R13 being (QC-formula of R1) holds ( still_not-bound_in ( R13 . R14 ) ) c= ( ( still_not-bound_in R13 ) \/ { R14 } ))))
proof
let R1 being QC-alphabet;
let R14 being (bound_QC-variable of R1);
defpred S3[ (QC-formula of R1) ] means ( still_not-bound_in ( $1 . R14 ) ) c= ( ( still_not-bound_in $1 ) \/ { R14 } );
L648: (for B30 being (Element of ( QC-WFF R1 )) holds (S3[ B30 ] implies S3[ ( 'not' B30 ) ]))
proof
let C34 being (Element of ( QC-WFF R1 ));
L649: ( still_not-bound_in ( ( 'not' C34 ) . R14 ) ) = ( still_not-bound_in ( 'not' ( C34 . R14 ) ) ) by CQC_LANG:19
.= ( still_not-bound_in ( C34 . R14 ) ) by QC_LANG3:7;
thus L650: thesis by L649 , QC_LANG3:7;
end;
L651: (for B31 , B32 being (Element of ( QC-WFF R1 )) holds ((S3[ B31 ] & S3[ B32 ]) implies S3[ ( B31 '&' B32 ) ]))
proof
let C35 , C36 being (Element of ( QC-WFF R1 ));
assume that
L652: S3[ C35 ]
and
L653: S3[ C36 ];
L654: ( still_not-bound_in ( ( C35 '&' C36 ) . R14 ) ) = ( still_not-bound_in ( ( C35 . R14 ) '&' ( C36 . R14 ) ) ) by CQC_LANG:21
.= ( ( still_not-bound_in ( C35 . R14 ) ) \/ ( still_not-bound_in ( C36 . R14 ) ) ) by QC_LANG3:10;
L655: ( ( ( still_not-bound_in C35 ) \/ { R14 } ) \/ ( ( still_not-bound_in C36 ) \/ { R14 } ) ) = ( ( ( still_not-bound_in C35 ) \/ ( { R14 } \/ ( still_not-bound_in C36 ) ) ) \/ { R14 } ) by XBOOLE_1:4
.= ( ( ( ( still_not-bound_in C35 ) \/ ( still_not-bound_in C36 ) ) \/ { R14 } ) \/ { R14 } ) by XBOOLE_1:4
.= ( ( ( still_not-bound_in C35 ) \/ ( still_not-bound_in C36 ) ) \/ ( { R14 } \/ { R14 } ) ) by XBOOLE_1:4
.= ( ( ( still_not-bound_in C35 ) \/ ( still_not-bound_in C36 ) ) \/ { R14 } );
L656: ( ( still_not-bound_in ( C35 . R14 ) ) \/ ( still_not-bound_in ( C36 . R14 ) ) ) c= ( ( ( still_not-bound_in C35 ) \/ { R14 } ) \/ ( ( still_not-bound_in C36 ) \/ { R14 } ) ) by L652 , L653 , XBOOLE_1:13;
thus L657: thesis by L656 , L654 , L655 , QC_LANG3:10;
end;
L658: (for B33 being (bound_QC-variable of R1) holds (for B34 being (Element of ( QC-WFF R1 )) holds (S3[ B34 ] implies S3[ ( All (B33 , B34) ) ])))
proof
let C37 being (bound_QC-variable of R1);
let C38 being (Element of ( QC-WFF R1 ));
assume that
L659: S3[ C38 ];
per cases ;
suppose L660: C37 = R14;

L661: ( ( still_not-bound_in C38 ) \ { R14 } ) c= ( still_not-bound_in C38 ) by XBOOLE_1:36;
L662: ( still_not-bound_in ( All (R14 , C38) ) ) = ( ( still_not-bound_in C38 ) \ { R14 } ) by QC_LANG3:12;
L663: ( still_not-bound_in C38 ) c= ( still_not-bound_in ( C38 . R14 ) ) by L622;
L664: ( still_not-bound_in ( All (R14 , C38) ) ) c= ( still_not-bound_in ( C38 . R14 ) ) by L663 , L662 , L661 , XBOOLE_1:1;
L665: ( still_not-bound_in ( All (R14 , C38) ) ) c= ( ( still_not-bound_in C38 ) \/ { R14 } ) by L664 , L659 , XBOOLE_1:1;
L666: ( ( still_not-bound_in ( All (C37 , C38) ) ) \/ { R14 } ) = ( ( ( still_not-bound_in C38 ) \ { R14 } ) \/ { R14 } ) by L660 , QC_LANG3:12
.= ( ( still_not-bound_in C38 ) \/ { R14 } ) by XBOOLE_1:39;
thus L667: thesis by L666 , L660 , L665 , CQC_LANG:24;
end;
suppose L668: C37 <> R14;

L669: ( ( still_not-bound_in ( All (C37 , C38) ) ) \/ { R14 } ) = ( ( ( still_not-bound_in C38 ) \ { C37 } ) \/ { R14 } ) by QC_LANG3:12
.= ( ( ( still_not-bound_in C38 ) \/ { R14 } ) \ { C37 } ) by L668 , XBOOLE_1:87 , ZFMISC_1:11;
L670: ( still_not-bound_in ( ( All (C37 , C38) ) . R14 ) ) = ( still_not-bound_in ( All (C37 , ( C38 . R14 )) ) ) by L668 , CQC_LANG:25
.= ( ( still_not-bound_in ( C38 . R14 ) ) \ { C37 } ) by QC_LANG3:12;
thus L671: thesis by L670 , L659 , L669 , XBOOLE_1:33;
end;
end;
L673: (for B35 being (Element of ( NAT )) holds (for B36 being (QC-pred_symbol of B35 , R1) holds (for B37 being (QC-variable_list of B35 , R1) holds S3[ ( B36 ! B37 ) ])))
proof
let C39 being (Element of ( NAT ));
let C40 being (QC-pred_symbol of C39 , R1);
let C41 being (QC-variable_list of C39 , R1);
L674: ( still_not-bound_in ( ( C40 ! C41 ) . R14 ) ) = ( still_not-bound_in ( C40 ! ( Subst (C41 , ( ( R1 a. ( 0 ) ) .--> R14 )) ) ) ) by CQC_LANG:17
.= ( still_not-bound_in ( Subst (C41 , ( ( R1 a. ( 0 ) ) .--> R14 )) ) ) by QC_LANG3:5;
L675: ( still_not-bound_in ( Subst (C41 , ( ( R1 a. ( 0 ) ) .--> R14 )) ) ) c= ( ( still_not-bound_in C41 ) \/ { R14 } ) by L604;
thus L676: thesis by L675 , L674 , QC_LANG3:5;
end;
L677: ( still_not-bound_in ( VERUM R1 ) ) = ( {} ) by QC_LANG3:3;
L678: ( ( VERUM R1 ) . R14 ) = ( VERUM R1 ) by CQC_LANG:15;
L679: ( still_not-bound_in ( ( VERUM R1 ) . R14 ) ) = ( {} ) by L678 , L677;
L680: ( still_not-bound_in ( ( VERUM R1 ) . R14 ) ) c= ( ( still_not-bound_in ( VERUM R1 ) ) \/ { R14 } ) by L679 , XBOOLE_1:2;
L681: S3[ ( VERUM R1 ) ] by L680;
thus L682: (for R13 being (QC-formula of R1) holds S3[ R13 ]) from QC_LANG1:sch 1(L673 , L681 , L648 , L651 , L658);
end;
theorem
L683: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R13 being (QC-formula of R1) holds (for R14 being (bound_QC-variable of R1) holds (for R15 being (bound_QC-variable of R1) holds ((R2 = ( R13 . R14 ) & R14 <> R15 & (not R15 in ( still_not-bound_in R13 ))) implies (not R15 in ( still_not-bound_in R2 ))))))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R13 being (QC-formula of R1);
let R14 being (bound_QC-variable of R1);
let R15 being (bound_QC-variable of R1);
assume that
L684: R2 = ( R13 . R14 )
and
L685: R14 <> R15
and
L686: (not R15 in ( still_not-bound_in R13 ))
and
L687: R15 in ( still_not-bound_in R2 );
L688: ( still_not-bound_in R2 ) c= ( ( still_not-bound_in R13 ) \/ { R14 } ) by L684 , L647;
per cases  by L687 , L688 , XBOOLE_0:def 3;
suppose L689: R15 in ( still_not-bound_in R13 );

thus L690: contradiction by L689 , L686;
end;
suppose L691: R15 in { R14 };

thus L692: contradiction by L691 , L685 , TARSKI:def 1;
end;
end;
theorem
L694: (for R1 being QC-alphabet holds (for R2 being (Element of ( CQC-WFF R1 )) holds (for R3 being (Element of ( CQC-WFF R1 )) holds (for R13 being (QC-formula of R1) holds (for R14 being (bound_QC-variable of R1) holds (for R15 being (bound_QC-variable of R1) holds ((R2 = ( R13 . R14 ) & R3 = ( R13 . R15 ) & (not R14 in ( still_not-bound_in R13 )) & (not R15 in ( still_not-bound_in R13 ))) implies ( All (R14 , R2) ) <==> ( All (R15 , R3) ))))))))
proof
let R1 being QC-alphabet;
let R2 being (Element of ( CQC-WFF R1 ));
let R3 being (Element of ( CQC-WFF R1 ));
let R13 being (QC-formula of R1);
let R14 being (bound_QC-variable of R1);
let R15 being (bound_QC-variable of R1);
assume that
L695: R2 = ( R13 . R14 )
and
L696: R3 = ( R13 . R15 )
and
L697: (not R14 in ( still_not-bound_in R13 ))
and
L698: (not R15 in ( still_not-bound_in R13 ));
per cases ;
suppose L699: R14 = R15;

thus L700: thesis by L699 , L695 , L696;
end;
suppose L701: R14 <> R15;

L702: (not R14 in ( still_not-bound_in R3 )) by L701 , L696 , L697 , L683;
L703: ( ( All (R15 , R3) ) => ( All (R14 , R2) ) ) is  valid by L702 , L695 , L696 , L698 , CQC_THE2:27;
L704: (not R15 in ( still_not-bound_in R2 )) by L695 , L698 , L701 , L683;
L705: ( ( All (R14 , R2) ) => ( All (R15 , R3) ) ) is  valid by L704 , L695 , L696 , L697 , CQC_THE2:27;
thus L706: thesis by L705 , L703 , L472;
end;
end;
