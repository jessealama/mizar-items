:: Modifying addresses of instructions of { \bf SCM_FSA }
::  by Andrzej Trybulec and Yatsuka Nakamura
::
:: Received February 14, 1996
:: Copyright (c) 1996-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, SUBSET_1, AMI_1, AMI_3, SCMFSA_2, AMISTD_2, CARD_1,
      GRAPHSP, ARYTM_3, RELAT_1, FUNCT_1, FUNCT_4, XBOOLE_0, FSM_1, ARYTM_1,
      INT_1, COMPLEX1, PARTFUN1, FINSEQ_1, FINSEQ_2, NAT_1, COMPOS_1;
 notations TARSKI, XBOOLE_0, ENUMSET1,
      XTUPLE_0, SUBSET_1, NUMBERS, CARD_3, XXREAL_0,
      XCMPLX_0, ORDINAL1, NAT_1, NAT_D, VALUED_1, INT_1, INT_2,
      RELAT_1, FUNCT_1, PARTFUN1, FUNCT_2, FUNCT_4, FUNCOP_1, FUNCT_7,
      FINSEQ_1, FINSEQ_2, STRUCT_0, MEMSTR_0, COMPOS_0, COMPOS_1, EXTPRO_1,
      AMI_3, SCMFSA_2, AMISTD_2, AMISTD_5;
 constructors DOMAIN_1, XXREAL_0, AMI_3, SCMFSA_2, NAT_D, RELSET_1, VALUED_1,
      AMISTD_2, AMISTD_5, PBOOLE, FUNCT_7, MEMSTR_0, FINSEQ_2;
 registrations XBOOLE_0, SETFAM_1, FUNCT_1, ORDINAL1, RELSET_1, FUNCOP_1,
      NUMBERS, XREAL_0, INT_1, CARD_3, SCMFSA_2, FINSET_1, VALUED_1, FUNCT_4,
      RELAT_1, AMI_3, AMI_6, RELOC, XXREAL_0, SCMFSA10, AMISTD_2, VALUED_0,
      COMPOS_1, EXTPRO_1, AMISTD_5, MEMSTR_0, FINSEQ_1, COMPOS_0, XTUPLE_0;
 requirements NUMERALS, REAL, SUBSET, BOOLE, ARITHM;
 definitions TARSKI, COMPOS_1, EXTPRO_1, AMI_3, SCMFSA_2, FUNCOP_1, RELAT_1,
      AMISTD_2, FUNCT_1, AMISTD_5, MEMSTR_0, COMPOS_0, XTUPLE_0;
 theorems SCMFSA_2, ENUMSET1, NAT_1, TARSKI, SCMFSA_3, VALUED_1, AMISTD_2,
      RECDEF_2, SCMFSA10, FINSEQ_1, ORDINAL1, EXTPRO_1, MEMSTR_0, COMPOS_0;

begin
registration
let C1 , C2 being Int-Location;
cluster ( C1 := C2 ) ->  ins-loc-free;
coherence
proof
L1: ( C1 := C2 ) = [ 1 , ( {} ) , <* C1 , C2 *> ] by SCMFSA10:2;
thus L2: ( JumpPart ( C1 := C2 ) ) is  empty by L1 , RECDEF_2:def 2;
end;
cluster ( AddTo (C1 , C2) ) ->  ins-loc-free;
coherence
proof
L3: ( AddTo (C1 , C2) ) = [ 2 , ( {} ) , <* C1 , C2 *> ] by SCMFSA10:3;
thus L4: ( JumpPart ( AddTo (C1 , C2) ) ) is  empty by L3 , RECDEF_2:def 2;
end;
cluster ( SubFrom (C1 , C2) ) ->  ins-loc-free;
coherence
proof
L5: ( SubFrom (C1 , C2) ) = [ 3 , ( {} ) , <* C1 , C2 *> ] by SCMFSA10:4;
thus L6: ( JumpPart ( SubFrom (C1 , C2) ) ) is  empty by L5 , RECDEF_2:def 2;
end;
cluster ( MultBy (C1 , C2) ) ->  ins-loc-free;
coherence
proof
L7: ( MultBy (C1 , C2) ) = [ 4 , ( {} ) , <* C1 , C2 *> ] by SCMFSA10:5;
thus L8: ( JumpPart ( MultBy (C1 , C2) ) ) is  empty by L7 , RECDEF_2:def 2;
end;
cluster ( Divide (C1 , C2) ) ->  ins-loc-free;
coherence
proof
L9: ( Divide (C1 , C2) ) = [ 5 , ( {} ) , <* C1 , C2 *> ] by SCMFSA10:6;
thus L10: ( JumpPart ( Divide (C1 , C2) ) ) is  empty by L9 , RECDEF_2:def 2;
end;
end;
theorem
L12: (for B1 , B2 being (Element of ( NAT )) holds ( IncAddr (( goto B2 ) , B1) ) = ( goto ( B2 + B1 ) ))
proof
let C3 , C4 being (Element of ( NAT ));
L13: ( InsCode ( IncAddr (( goto C4 ) , C3) ) ) = ( InsCode ( goto C4 ) ) by COMPOS_0:def 9
.= 6 by RECDEF_2:def 1
.= ( InsCode ( goto ( C4 + C3 ) ) ) by RECDEF_2:def 1;
L14: ( AddressPart ( IncAddr (( goto C4 ) , C3) ) ) = ( AddressPart ( goto C4 ) ) by COMPOS_0:def 9
.= ( {} ) by RECDEF_2:def 3
.= ( AddressPart ( goto ( C4 + C3 ) ) ) by RECDEF_2:def 3;
L15: ( JumpPart ( IncAddr (( goto C4 ) , C3) ) ) = ( C3 + ( JumpPart ( goto C4 ) ) ) by COMPOS_0:def 9;
L16: ( JumpPart ( IncAddr (( goto C4 ) , C3) ) ) = ( JumpPart ( goto ( C4 + C3 ) ) )
proof
thus L17: ( dom ( JumpPart ( IncAddr (( goto C4 ) , C3) ) ) ) = ( dom ( JumpPart ( goto ( C4 + C3 ) ) ) ) by L13 , COMPOS_0:def 5;
L18: ( JumpPart ( goto C4 ) ) = <* C4 *> by RECDEF_2:def 2;
L19: ( JumpPart ( goto ( C4 + C3 ) ) ) = <* ( C4 + C3 ) *> by RECDEF_2:def 2;
let C5 being set;
assume L20: C5 in ( dom ( JumpPart ( IncAddr (( goto C4 ) , C3) ) ) );
L21: ( dom <* ( C4 + C3 ) *> ) = { 1 } by FINSEQ_1:2 , FINSEQ_1:38;
L22: C5 = 1 by L21 , L20 , L17 , L19 , TARSKI:def 1;
thus L23: ( ( JumpPart ( IncAddr (( goto C4 ) , C3) ) ) . C5 ) = ( C3 + ( ( JumpPart ( goto C4 ) ) . C5 ) ) by L15 , L20 , VALUED_1:def 2
.= ( C4 + C3 ) by L18 , L22 , FINSEQ_1:40
.= ( ( JumpPart ( goto ( C4 + C3 ) ) ) . C5 ) by L19 , L22 , FINSEQ_1:40;
end;
thus L24: thesis by L16 , L13 , L14 , COMPOS_0:1;
end;
theorem
L25: (for B3 , B4 being (Element of ( NAT )) holds (for B5 being Int-Location holds ( IncAddr (( B5 =0_goto B4 ) , B3) ) = ( B5 =0_goto ( B4 + B3 ) )))
proof
let C6 , C7 being (Element of ( NAT ));
let C8 being Int-Location;
L26: ( C8 =0_goto C7 ) = [ 7 , <* C7 *> , <* C8 *> ] by SCMFSA10:7;
L27: ( C8 =0_goto ( C7 + C6 ) ) = [ 7 , <* ( C7 + C6 ) *> , <* C8 *> ] by SCMFSA10:7;
L28: ( InsCode ( IncAddr (( C8 =0_goto C7 ) , C6) ) ) = ( InsCode ( C8 =0_goto C7 ) ) by COMPOS_0:def 9
.= 7 by L26 , RECDEF_2:def 1
.= ( InsCode ( C8 =0_goto ( C7 + C6 ) ) ) by L27 , RECDEF_2:def 1;
L29: ( AddressPart ( IncAddr (( C8 =0_goto C7 ) , C6) ) ) = ( AddressPart ( C8 =0_goto C7 ) ) by COMPOS_0:def 9
.= <* C8 *> by L26 , RECDEF_2:def 3
.= ( AddressPart ( C8 =0_goto ( C7 + C6 ) ) ) by L27 , RECDEF_2:def 3;
L30: ( JumpPart ( IncAddr (( C8 =0_goto C7 ) , C6) ) ) = ( C6 + ( JumpPart ( C8 =0_goto C7 ) ) ) by COMPOS_0:def 9;
L31: ( JumpPart ( IncAddr (( C8 =0_goto C7 ) , C6) ) ) = ( JumpPart ( C8 =0_goto ( C7 + C6 ) ) )
proof
thus L32: ( dom ( JumpPart ( IncAddr (( C8 =0_goto C7 ) , C6) ) ) ) = ( dom ( JumpPart ( C8 =0_goto ( C7 + C6 ) ) ) ) by L28 , COMPOS_0:def 5;
L33: ( JumpPart ( C8 =0_goto C7 ) ) = <* C7 *> by L26 , RECDEF_2:def 2;
L34: ( JumpPart ( C8 =0_goto ( C7 + C6 ) ) ) = <* ( C7 + C6 ) *> by L27 , RECDEF_2:def 2;
let C9 being set;
assume L35: C9 in ( dom ( JumpPart ( IncAddr (( C8 =0_goto C7 ) , C6) ) ) );
L36: ( dom <* ( C7 + C6 ) *> ) = { 1 } by FINSEQ_1:2 , FINSEQ_1:38;
L37: C9 = 1 by L36 , L35 , L32 , L34 , TARSKI:def 1;
thus L38: ( ( JumpPart ( IncAddr (( C8 =0_goto C7 ) , C6) ) ) . C9 ) = ( C6 + ( ( JumpPart ( C8 =0_goto C7 ) ) . C9 ) ) by L30 , L35 , VALUED_1:def 2
.= ( C7 + C6 ) by L33 , L37 , FINSEQ_1:40
.= ( ( JumpPart ( C8 =0_goto ( C7 + C6 ) ) ) . C9 ) by L34 , L37 , FINSEQ_1:40;
end;
thus L39: thesis by L31 , L28 , L29 , COMPOS_0:1;
end;
theorem
L40: (for B6 , B7 being (Element of ( NAT )) holds (for B8 being Int-Location holds ( IncAddr (( B8 >0_goto B7 ) , B6) ) = ( B8 >0_goto ( B7 + B6 ) )))
proof
let C10 , C11 being (Element of ( NAT ));
let C12 being Int-Location;
L41: ( C12 >0_goto C11 ) = [ 8 , <* C11 *> , <* C12 *> ] by SCMFSA10:8;
L42: ( C12 >0_goto ( C11 + C10 ) ) = [ 8 , <* ( C11 + C10 ) *> , <* C12 *> ] by SCMFSA10:8;
L43: ( InsCode ( IncAddr (( C12 >0_goto C11 ) , C10) ) ) = ( InsCode ( C12 >0_goto C11 ) ) by COMPOS_0:def 9
.= 8 by L41 , RECDEF_2:def 1
.= ( InsCode ( C12 >0_goto ( C11 + C10 ) ) ) by L42 , RECDEF_2:def 1;
L44: ( AddressPart ( IncAddr (( C12 >0_goto C11 ) , C10) ) ) = ( AddressPart ( C12 >0_goto C11 ) ) by COMPOS_0:def 9
.= <* C12 *> by L41 , RECDEF_2:def 3
.= ( AddressPart ( C12 >0_goto ( C11 + C10 ) ) ) by L42 , RECDEF_2:def 3;
L45: ( JumpPart ( IncAddr (( C12 >0_goto C11 ) , C10) ) ) = ( C10 + ( JumpPart ( C12 >0_goto C11 ) ) ) by COMPOS_0:def 9;
L46: ( JumpPart ( IncAddr (( C12 >0_goto C11 ) , C10) ) ) = ( JumpPart ( C12 >0_goto ( C11 + C10 ) ) )
proof
thus L47: ( dom ( JumpPart ( IncAddr (( C12 >0_goto C11 ) , C10) ) ) ) = ( dom ( JumpPart ( C12 >0_goto ( C11 + C10 ) ) ) ) by L43 , COMPOS_0:def 5;
L48: ( JumpPart ( C12 >0_goto C11 ) ) = <* C11 *> by L41 , RECDEF_2:def 2;
L49: ( JumpPart ( C12 >0_goto ( C11 + C10 ) ) ) = <* ( C11 + C10 ) *> by L42 , RECDEF_2:def 2;
let C13 being set;
assume L50: C13 in ( dom ( JumpPart ( IncAddr (( C12 >0_goto C11 ) , C10) ) ) );
L51: ( dom <* ( C11 + C10 ) *> ) = { 1 } by FINSEQ_1:2 , FINSEQ_1:38;
L52: C13 = 1 by L51 , L50 , L47 , L49 , TARSKI:def 1;
thus L53: ( ( JumpPart ( IncAddr (( C12 >0_goto C11 ) , C10) ) ) . C13 ) = ( C10 + ( ( JumpPart ( C12 >0_goto C11 ) ) . C13 ) ) by L45 , L50 , VALUED_1:def 2
.= ( C11 + C10 ) by L48 , L52 , FINSEQ_1:40
.= ( ( JumpPart ( C12 >0_goto ( C11 + C10 ) ) ) . C13 ) by L49 , L52 , FINSEQ_1:40;
end;
thus L54: thesis by L46 , L43 , L44 , COMPOS_0:1;
end;
registration
let C14 , C15 being Int-Location;
let C16 being FinSeq-Location;
cluster ( C15 := (C16 , C14) ) ->  ins-loc-free;
coherence
proof
thus L55: ( JumpPart ( C15 := (C16 , C14) ) ) is  empty by RECDEF_2:def 2;
end;
cluster ( (C16 , C14) := C15 ) ->  ins-loc-free;
coherence
proof
thus L56: ( JumpPart ( (C16 , C14) := C15 ) ) is  empty by RECDEF_2:def 2;
end;
end;
registration
let C17 being Int-Location;
let C18 being FinSeq-Location;
cluster ( C17 :=len C18 ) ->  ins-loc-free;
coherence
proof
thus L58: ( JumpPart ( C17 :=len C18 ) ) is  empty by RECDEF_2:def 2;
end;
cluster ( C18 :=<0,...,0> C17 ) ->  ins-loc-free;
coherence
proof
thus L59: ( JumpPart ( C18 :=<0,...,0> C17 ) ) is  empty by RECDEF_2:def 2;
end;
end;
begin
registration
cluster ( SCM+FSA ) ->  relocable;
coherence
proof
let C19 being (Instruction of ( SCM+FSA ));
let C20 , C21 being Nat;
reconsider D1 = C21 as (Element of ( NAT )) by ORDINAL1:def 12;
let C22 being (State of ( SCM+FSA ));
L61: ( IC ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) ) = ( ( IC ( Exec (( IncAddr (C19 , C20) ) , C22) ) ) + D1 ) by MEMSTR_0:53
.= ( IC ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) ) by AMISTD_2:def 3;
per cases  by NAT_1:36 , SCMFSA_2:16;
suppose L62: ( InsCode C19 ) = ( 0 );

L63: C19 = ( halt ( SCM+FSA ) ) by L62 , SCMFSA_2:95;
L64: ( IncAddr (C19 , C20) ) = ( halt ( SCM+FSA ) ) by L63 , COMPOS_0:4;
L65: ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) = ( Exec (C19 , ( IncIC (C22 , D1) )) ) by L63 , COMPOS_0:4
.= ( IncIC (C22 , D1) ) by L63 , EXTPRO_1:def 3
.= ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) by L64 , EXTPRO_1:def 3;
thus L66: thesis by L65;
end;
suppose L67: ( InsCode C19 ) = 1;

consider C23 , C24 being Int-Location such that L68: C19 = ( C23 := C24 ) by L67 , SCMFSA_2:30;
L69:
now
let C25 being FinSeq-Location;
thus L70: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C25 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C25 ) by L68 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C25 ) by L68 , SCMFSA_2:63
.= ( C22 . C25 ) by SCMFSA_3:4
.= ( ( Exec (C19 , C22) ) . C25 ) by L68 , SCMFSA_2:63
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C25 ) by L68 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C25 ) by SCMFSA_3:4;
end;
L71:
now
let C26 being Int-Location;
per cases ;
suppose L72: C23 = C26;

thus L73: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C26 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C26 ) by L68 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C24 ) by L68 , L72 , SCMFSA_2:63
.= ( C22 . C24 ) by SCMFSA_3:3
.= ( ( Exec (C19 , C22) ) . C26 ) by L68 , L72 , SCMFSA_2:63
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C26 ) by L68 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C26 ) by SCMFSA_3:3;
end;
suppose L74: C23 <> C26;

thus L75: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C26 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C26 ) by L68 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C26 ) by L68 , L74 , SCMFSA_2:63
.= ( C22 . C26 ) by SCMFSA_3:3
.= ( ( Exec (C19 , C22) ) . C26 ) by L68 , L74 , SCMFSA_2:63
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C26 ) by L68 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C26 ) by SCMFSA_3:3;
end;
end;
thus L77: thesis by L71 , L69 , L61 , SCMFSA_2:104;
end;
suppose L78: ( InsCode C19 ) = 2;

consider C27 , C28 being Int-Location such that L79: C19 = ( AddTo (C27 , C28) ) by L78 , SCMFSA_2:31;
L80:
now
let C29 being FinSeq-Location;
thus L81: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C29 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C29 ) by L79 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C29 ) by L79 , SCMFSA_2:64
.= ( C22 . C29 ) by SCMFSA_3:4
.= ( ( Exec (C19 , C22) ) . C29 ) by L79 , SCMFSA_2:64
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C29 ) by L79 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C29 ) by SCMFSA_3:4;
end;
L82:
now
let C30 being Int-Location;
per cases ;
suppose L83: C27 = C30;

thus L84: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C30 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C30 ) by L79 , COMPOS_0:4
.= ( ( ( IncIC (C22 , D1) ) . C27 ) + ( ( IncIC (C22 , D1) ) . C28 ) ) by L83 , L79 , SCMFSA_2:64
.= ( ( C22 . C27 ) + ( ( IncIC (C22 , D1) ) . C28 ) ) by SCMFSA_3:3
.= ( ( C22 . C27 ) + ( C22 . C28 ) ) by SCMFSA_3:3
.= ( ( Exec (C19 , C22) ) . C30 ) by L79 , L83 , SCMFSA_2:64
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C30 ) by L79 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C30 ) by SCMFSA_3:3;
end;
suppose L85: C27 <> C30;

thus L86: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C30 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C30 ) by L79 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C30 ) by L79 , L85 , SCMFSA_2:64
.= ( C22 . C30 ) by SCMFSA_3:3
.= ( ( Exec (C19 , C22) ) . C30 ) by L79 , L85 , SCMFSA_2:64
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C30 ) by L79 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C30 ) by SCMFSA_3:3;
end;
end;
thus L88: thesis by L82 , L80 , L61 , SCMFSA_2:104;
end;
suppose L89: ( InsCode C19 ) = 3;

consider C31 , C32 being Int-Location such that L90: C19 = ( SubFrom (C31 , C32) ) by L89 , SCMFSA_2:32;
L91:
now
let C33 being FinSeq-Location;
thus L92: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C33 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C33 ) by L90 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C33 ) by L90 , SCMFSA_2:65
.= ( C22 . C33 ) by SCMFSA_3:4
.= ( ( Exec (C19 , C22) ) . C33 ) by L90 , SCMFSA_2:65
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C33 ) by L90 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C33 ) by SCMFSA_3:4;
end;
L93:
now
let C34 being Int-Location;
per cases ;
suppose L94: C31 = C34;

thus L95: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C34 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C34 ) by L90 , COMPOS_0:4
.= ( ( ( IncIC (C22 , D1) ) . C31 ) - ( ( IncIC (C22 , D1) ) . C32 ) ) by L94 , L90 , SCMFSA_2:65
.= ( ( C22 . C31 ) - ( ( IncIC (C22 , D1) ) . C32 ) ) by SCMFSA_3:3
.= ( ( C22 . C31 ) - ( C22 . C32 ) ) by SCMFSA_3:3
.= ( ( Exec (C19 , C22) ) . C34 ) by L90 , L94 , SCMFSA_2:65
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C34 ) by L90 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C34 ) by SCMFSA_3:3;
end;
suppose L96: C31 <> C34;

thus L97: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C34 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C34 ) by L90 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C34 ) by L90 , L96 , SCMFSA_2:65
.= ( C22 . C34 ) by SCMFSA_3:3
.= ( ( Exec (C19 , C22) ) . C34 ) by L90 , L96 , SCMFSA_2:65
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C34 ) by L90 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C34 ) by SCMFSA_3:3;
end;
end;
thus L99: thesis by L93 , L91 , L61 , SCMFSA_2:104;
end;
suppose L100: ( InsCode C19 ) = 4;

consider C35 , C36 being Int-Location such that L101: C19 = ( MultBy (C35 , C36) ) by L100 , SCMFSA_2:33;
L102:
now
let C37 being FinSeq-Location;
thus L103: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C37 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C37 ) by L101 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C37 ) by L101 , SCMFSA_2:66
.= ( C22 . C37 ) by SCMFSA_3:4
.= ( ( Exec (C19 , C22) ) . C37 ) by L101 , SCMFSA_2:66
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C37 ) by L101 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C37 ) by SCMFSA_3:4;
end;
L104:
now
let C38 being Int-Location;
per cases ;
suppose L105: C35 = C38;

thus L106: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C38 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C38 ) by L101 , COMPOS_0:4
.= ( ( ( IncIC (C22 , D1) ) . C35 ) * ( ( IncIC (C22 , D1) ) . C36 ) ) by L105 , L101 , SCMFSA_2:66
.= ( ( C22 . C35 ) * ( ( IncIC (C22 , D1) ) . C36 ) ) by SCMFSA_3:3
.= ( ( C22 . C35 ) * ( C22 . C36 ) ) by SCMFSA_3:3
.= ( ( Exec (C19 , C22) ) . C38 ) by L101 , L105 , SCMFSA_2:66
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C38 ) by L101 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C38 ) by SCMFSA_3:3;
end;
suppose L107: C35 <> C38;

thus L108: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C38 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C38 ) by L101 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C38 ) by L101 , L107 , SCMFSA_2:66
.= ( C22 . C38 ) by SCMFSA_3:3
.= ( ( Exec (C19 , C22) ) . C38 ) by L101 , L107 , SCMFSA_2:66
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C38 ) by L101 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C38 ) by SCMFSA_3:3;
end;
end;
thus L110: thesis by L104 , L102 , L61 , SCMFSA_2:104;
end;
suppose L111: ( InsCode C19 ) = 5;

consider C39 , C40 being Int-Location such that L112: C19 = ( Divide (C39 , C40) ) by L111 , SCMFSA_2:34;
L113:
now
let C41 being FinSeq-Location;
thus L114: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C41 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C41 ) by L112 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C41 ) by L112 , SCMFSA_2:67
.= ( C22 . C41 ) by SCMFSA_3:4
.= ( ( Exec (C19 , C22) ) . C41 ) by L112 , SCMFSA_2:67
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C41 ) by L112 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C41 ) by SCMFSA_3:4;
end;
L115:
now
let C42 being Int-Location;
per cases ;
suppose L116: C39 <> C40;

thus L117:now
per cases ;
suppose L118: C39 = C42;

thus L119: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C42 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C42 ) by L112 , COMPOS_0:4
.= ( ( ( IncIC (C22 , D1) ) . C39 ) div ( ( IncIC (C22 , D1) ) . C40 ) ) by L116 , L118 , L112 , SCMFSA_2:67
.= ( ( C22 . C39 ) div ( ( IncIC (C22 , D1) ) . C40 ) ) by SCMFSA_3:3
.= ( ( C22 . C39 ) div ( C22 . C40 ) ) by SCMFSA_3:3
.= ( ( Exec (C19 , C22) ) . C42 ) by L112 , L116 , L118 , SCMFSA_2:67
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C42 ) by L112 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C42 ) by SCMFSA_3:3;
end;
suppose L120: C40 = C42;

thus L121: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C42 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C42 ) by L112 , COMPOS_0:4
.= ( ( ( IncIC (C22 , D1) ) . C39 ) mod ( ( IncIC (C22 , D1) ) . C40 ) ) by L120 , L112 , SCMFSA_2:67
.= ( ( C22 . C39 ) mod ( ( IncIC (C22 , D1) ) . C40 ) ) by SCMFSA_3:3
.= ( ( C22 . C39 ) mod ( C22 . C40 ) ) by SCMFSA_3:3
.= ( ( Exec (C19 , C22) ) . C42 ) by L112 , L120 , SCMFSA_2:67
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C42 ) by L112 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C42 ) by SCMFSA_3:3;
end;
suppose L122: (C39 <> C42 & C40 <> C42);

thus L123: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C42 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C42 ) by L112 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C42 ) by L112 , L122 , SCMFSA_2:67
.= ( C22 . C42 ) by SCMFSA_3:3
.= ( ( Exec (C19 , C22) ) . C42 ) by L112 , L122 , SCMFSA_2:67
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C42 ) by L112 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C42 ) by SCMFSA_3:3;
end;
end;
end;
suppose L118: C39 = C40;

per cases ;
suppose L119: C39 = C42;

thus L120: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C42 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C42 ) by L112 , COMPOS_0:4
.= ( ( ( IncIC (C22 , D1) ) . C39 ) mod ( ( IncIC (C22 , D1) ) . C40 ) ) by L118 , L119 , L112 , SCMFSA_2:67
.= ( ( C22 . C39 ) mod ( ( IncIC (C22 , D1) ) . C40 ) ) by SCMFSA_3:3
.= ( ( C22 . C39 ) mod ( C22 . C40 ) ) by SCMFSA_3:3
.= ( ( Exec (C19 , C22) ) . C42 ) by L112 , L118 , L119 , SCMFSA_2:67
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C42 ) by L112 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C42 ) by SCMFSA_3:3;
end;
suppose L121: C39 <> C42;

thus L122: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C42 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C42 ) by L112 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C42 ) by L112 , L118 , L121 , SCMFSA_2:67
.= ( C22 . C42 ) by SCMFSA_3:3
.= ( ( Exec (C19 , C22) ) . C42 ) by L112 , L118 , L121 , SCMFSA_2:67
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C42 ) by L112 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C42 ) by SCMFSA_3:3;
end;
end;
end;
thus L125: thesis by L115 , L113 , L61 , SCMFSA_2:104;
end;
suppose L126: ( InsCode C19 ) = 6;

consider C43 being (Element of ( NAT )) such that L127: C19 = ( goto C43 ) by L126 , SCMFSA_2:35;
L128: ( IncAddr (C19 , ( C20 + D1 )) ) = ( goto ( C43 + ( C20 + D1 ) ) ) by L127 , L12;
reconsider D2 = C20 as (Element of ( NAT )) by ORDINAL1:def 12;
L129: ( IncAddr (C19 , D2) ) = ( goto ( C43 + D2 ) ) by L127 , L12;
L130:
now
let C44 being FinSeq-Location;
thus L131: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C44 ) = ( ( IncIC (C22 , D1) ) . C44 ) by L128 , SCMFSA_2:69
.= ( C22 . C44 ) by SCMFSA_3:4
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C44 ) by L129 , SCMFSA_2:69
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C44 ) by SCMFSA_3:4;
end;
L132:
now
let C45 being Int-Location;
thus L133: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C45 ) = ( ( IncIC (C22 , D1) ) . C45 ) by L128 , SCMFSA_2:69
.= ( C22 . C45 ) by SCMFSA_3:3
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C45 ) by L129 , SCMFSA_2:69
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C45 ) by SCMFSA_3:3;
end;
thus L134: thesis by L132 , L130 , L61 , SCMFSA_2:104;
end;
suppose L135: ( InsCode C19 ) = 7;

consider C46 being (Element of ( NAT )), C47 being Int-Location such that L136: C19 = ( C47 =0_goto C46 ) by L135 , SCMFSA_2:36;
L137: ( IncAddr (C19 , ( C20 + D1 )) ) = ( C47 =0_goto ( C46 + ( C20 + D1 ) ) ) by L136 , L25;
reconsider D3 = C20 as (Element of ( NAT )) by ORDINAL1:def 12;
L138: ( IncAddr (C19 , D3) ) = ( C47 =0_goto ( C46 + D3 ) ) by L136 , L25;
L139:
now
let C48 being FinSeq-Location;
thus L140: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C48 ) = ( ( IncIC (C22 , D1) ) . C48 ) by L137 , SCMFSA_2:70
.= ( C22 . C48 ) by SCMFSA_3:4
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C48 ) by L138 , SCMFSA_2:70
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C48 ) by SCMFSA_3:4;
end;
L141:
now
let C49 being Int-Location;
thus L142: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C49 ) = ( ( IncIC (C22 , D1) ) . C49 ) by L137 , SCMFSA_2:70
.= ( C22 . C49 ) by SCMFSA_3:3
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C49 ) by L138 , SCMFSA_2:70
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C49 ) by SCMFSA_3:3;
end;
thus L143: thesis by L141 , L61 , L139 , SCMFSA_2:104;
end;
suppose L144: ( InsCode C19 ) = 8;

consider C50 being (Element of ( NAT )), C51 being Int-Location such that L145: C19 = ( C51 >0_goto C50 ) by L144 , SCMFSA_2:37;
L146: ( IncAddr (C19 , ( C20 + D1 )) ) = ( C51 >0_goto ( C50 + ( C20 + D1 ) ) ) by L145 , L40;
reconsider D4 = C20 as (Element of ( NAT )) by ORDINAL1:def 12;
L147: ( IncAddr (C19 , D4) ) = ( C51 >0_goto ( C50 + D4 ) ) by L145 , L40;
L148:
now
let C52 being FinSeq-Location;
thus L149: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C52 ) = ( ( IncIC (C22 , D1) ) . C52 ) by L146 , SCMFSA_2:71
.= ( C22 . C52 ) by SCMFSA_3:4
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C52 ) by L147 , SCMFSA_2:71
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C52 ) by SCMFSA_3:4;
end;
L150:
now
let C53 being Int-Location;
thus L151: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C53 ) = ( ( IncIC (C22 , D1) ) . C53 ) by L146 , SCMFSA_2:71
.= ( C22 . C53 ) by SCMFSA_3:3
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C53 ) by L147 , SCMFSA_2:71
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C53 ) by SCMFSA_3:3;
end;
thus L152: thesis by L150 , L148 , L61 , SCMFSA_2:104;
end;
suppose L153: ( InsCode C19 ) = 9;

consider C54 , C55 being Int-Location, C56 being FinSeq-Location such that L154: C19 = ( C55 := (C56 , C54) ) by L153 , SCMFSA_2:38;
L155:
now
let C57 being FinSeq-Location;
thus L156: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C57 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C57 ) by L154 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C57 ) by L154 , SCMFSA_2:72
.= ( C22 . C57 ) by SCMFSA_3:4
.= ( ( Exec (C19 , C22) ) . C57 ) by L154 , SCMFSA_2:72
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C57 ) by L154 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C57 ) by SCMFSA_3:4;
end;
L157:
now
let C58 being Int-Location;
per cases ;
suppose L158: C55 = C58;

consider C59 being (Element of ( NAT )) such that L159: C59 = ( abs ( C22 . C54 ) ) and L160: ( ( Exec (C19 , C22) ) . C55 ) = ( ( C22 . C56 ) /. C59 ) by L154 , SCMFSA_2:72;
L161: (ex B9 being (Element of ( NAT )) st (B9 = ( abs ( ( IncIC (C22 , D1) ) . C54 ) ) & ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C55 ) = ( ( ( IncIC (C22 , D1) ) . C56 ) /. B9 ))) by L154 , SCMFSA_2:72;
L162: ( ( IncIC (C22 , D1) ) . C54 ) = ( C22 . C54 ) by SCMFSA_3:3;
thus L163: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C58 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C58 ) by L154 , COMPOS_0:4
.= ( ( C22 . C56 ) /. C59 ) by L159 , L161 , L158 , L162 , SCMFSA_3:4
.= ( ( IncIC (( Exec (C19 , C22) ) , D1) ) . C58 ) by L160 , L158 , SCMFSA_3:3
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C58 ) by L154 , COMPOS_0:4;
end;
suppose L164: C55 <> C58;

thus L165: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C58 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C58 ) by L154 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C58 ) by L154 , L164 , SCMFSA_2:72
.= ( C22 . C58 ) by SCMFSA_3:3
.= ( ( Exec (C19 , C22) ) . C58 ) by L154 , L164 , SCMFSA_2:72
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C58 ) by L154 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C58 ) by SCMFSA_3:3;
end;
end;
thus L167: thesis by L157 , L155 , L61 , SCMFSA_2:104;
end;
suppose L168: ( InsCode C19 ) = 10;

consider C60 , C61 being Int-Location, C62 being FinSeq-Location such that L169: C19 = ( (C62 , C60) := C61 ) by L168 , SCMFSA_2:39;
L170:
now
let C63 being FinSeq-Location;
consider C64 being (Element of ( NAT )) such that L171: C64 = ( abs ( C22 . C60 ) ) and L172: ( ( Exec (C19 , C22) ) . C62 ) = ( ( C22 . C62 ) +* (C64 , ( C22 . C61 )) ) by L169 , SCMFSA_2:73;
L173: (ex B10 being (Element of ( NAT )) st (B10 = ( abs ( ( IncIC (C22 , D1) ) . C60 ) ) & ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C62 ) = ( ( ( IncIC (C22 , D1) ) . C62 ) +* (B10 , ( ( IncIC (C22 , D1) ) . C61 )) ))) by L169 , SCMFSA_2:73;
per cases ;
suppose L174: C62 = C63;

L175: (( ( IncIC (C22 , D1) ) . C62 ) = ( C22 . C62 ) & ( ( IncIC (C22 , D1) ) . C60 ) = ( C22 . C60 )) by SCMFSA_3:3 , SCMFSA_3:4;
thus L176: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C63 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C63 ) by L169 , COMPOS_0:4
.= ( ( C22 . C62 ) +* (C64 , ( C22 . C61 )) ) by L171 , L173 , L174 , L175 , SCMFSA_3:3
.= ( ( IncIC (( Exec (C19 , C22) ) , D1) ) . C63 ) by L172 , L174 , SCMFSA_3:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C63 ) by L169 , COMPOS_0:4;
end;
suppose L177: C62 <> C63;

thus L178: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C63 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C63 ) by L169 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C63 ) by L169 , L177 , SCMFSA_2:73
.= ( C22 . C63 ) by SCMFSA_3:4
.= ( ( Exec (C19 , C22) ) . C63 ) by L169 , L177 , SCMFSA_2:73
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C63 ) by L169 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C63 ) by SCMFSA_3:4;
end;
end;
L180:
now
let C65 being Int-Location;
thus L181: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C65 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C65 ) by L169 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C65 ) by L169 , SCMFSA_2:73
.= ( C22 . C65 ) by SCMFSA_3:3
.= ( ( Exec (C19 , C22) ) . C65 ) by L169 , SCMFSA_2:73
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C65 ) by L169 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C65 ) by SCMFSA_3:3;
end;
thus L182: thesis by L180 , L170 , L61 , SCMFSA_2:104;
end;
suppose L183: ( InsCode C19 ) = 11;

consider C66 being Int-Location, C67 being FinSeq-Location such that L184: C19 = ( C66 :=len C67 ) by L183 , SCMFSA_2:40;
L185:
now
let C68 being FinSeq-Location;
thus L186: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C68 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C68 ) by L184 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C68 ) by L184 , SCMFSA_2:74
.= ( C22 . C68 ) by SCMFSA_3:4
.= ( ( Exec (C19 , C22) ) . C68 ) by L184 , SCMFSA_2:74
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C68 ) by L184 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C68 ) by SCMFSA_3:4;
end;
L187:
now
let C69 being Int-Location;
per cases ;
suppose L188: C66 = C69;

thus L189: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C69 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C69 ) by L184 , COMPOS_0:4
.= ( len ( ( IncIC (C22 , D1) ) . C67 ) ) by L188 , L184 , SCMFSA_2:74
.= ( len ( C22 . C67 ) ) by SCMFSA_3:4
.= ( ( Exec (C19 , C22) ) . C69 ) by L184 , L188 , SCMFSA_2:74
.= ( ( IncIC (( Exec (C19 , C22) ) , D1) ) . C69 ) by SCMFSA_3:3
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C69 ) by L184 , COMPOS_0:4;
end;
suppose L190: C66 <> C69;

thus L191: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C69 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C69 ) by L184 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C69 ) by L184 , L190 , SCMFSA_2:74
.= ( C22 . C69 ) by SCMFSA_3:3
.= ( ( Exec (C19 , C22) ) . C69 ) by L184 , L190 , SCMFSA_2:74
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C69 ) by L184 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C69 ) by SCMFSA_3:3;
end;
end;
thus L193: thesis by L187 , L185 , L61 , SCMFSA_2:104;
end;
suppose L194: ( InsCode C19 ) = 12;

consider C70 being Int-Location, C71 being FinSeq-Location such that L195: C19 = ( C71 :=<0,...,0> C70 ) by L194 , SCMFSA_2:41;
L196:
now
let C72 being FinSeq-Location;
L197: ((ex B11 being (Element of ( NAT )) st (B11 = ( abs ( C22 . C70 ) ) & ( ( Exec (C19 , C22) ) . C71 ) = ( B11 |-> ( 0 ) ))) & (ex B12 being (Element of ( NAT )) st (B12 = ( abs ( ( IncIC (C22 , D1) ) . C70 ) ) & ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C71 ) = ( B12 |-> ( 0 ) )))) by L195 , SCMFSA_2:75;
per cases ;
suppose L198: C71 = C72;

L199: ( ( IncIC (C22 , D1) ) . C70 ) = ( C22 . C70 ) by SCMFSA_3:3;
thus L200: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C72 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C72 ) by L195 , COMPOS_0:4
.= ( ( IncIC (( Exec (C19 , C22) ) , D1) ) . C72 ) by L197 , L198 , L199 , SCMFSA_3:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C72 ) by L195 , COMPOS_0:4;
end;
suppose L201: C71 <> C72;

thus L202: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C72 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C72 ) by L195 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C72 ) by L195 , L201 , SCMFSA_2:75
.= ( C22 . C72 ) by SCMFSA_3:4
.= ( ( Exec (C19 , C22) ) . C72 ) by L195 , L201 , SCMFSA_2:75
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C72 ) by L195 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C72 ) by SCMFSA_3:4;
end;
end;
L204:
now
let C73 being Int-Location;
thus L205: ( ( Exec (( IncAddr (C19 , ( C20 + D1 )) ) , ( IncIC (C22 , D1) )) ) . C73 ) = ( ( Exec (C19 , ( IncIC (C22 , D1) )) ) . C73 ) by L195 , COMPOS_0:4
.= ( ( IncIC (C22 , D1) ) . C73 ) by L195 , SCMFSA_2:75
.= ( C22 . C73 ) by SCMFSA_3:3
.= ( ( Exec (C19 , C22) ) . C73 ) by L195 , SCMFSA_2:75
.= ( ( Exec (( IncAddr (C19 , C20) ) , C22) ) . C73 ) by L195 , COMPOS_0:4
.= ( ( IncIC (( Exec (( IncAddr (C19 , C20) ) , C22) ) , D1) ) . C73 ) by SCMFSA_3:3;
end;
thus L206: thesis by L204 , L196 , L61 , SCMFSA_2:104;
end;
end;
end;
theorem
L209: (for R3 being (Element of ( NAT )) holds (for R11 being (Instruction of ( SCM+FSA )) holds ((not ( InsCode R11 ) in { 6 , 7 , 8 }) implies ( IncAddr (R11 , R3) ) = R11)))
proof
let R3 being (Element of ( NAT ));
let R11 being (Instruction of ( SCM+FSA ));
assume L210: (not ( InsCode R11 ) in { 6 , 7 , 8 });
L211: (( InsCode R11 ) <> 6 & ( InsCode R11 ) <> 7 & ( InsCode R11 ) <> 8) by L210 , ENUMSET1:def 1;
per cases  by L211 , NAT_1:36 , SCMFSA_2:16;
suppose L212: ( InsCode R11 ) = ( 0 );

L213: R11 = ( halt ( SCM+FSA ) ) by L212 , SCMFSA_2:95;
thus L214: thesis by L213 , COMPOS_0:4;
end;
suppose L215: ( InsCode R11 ) = 1;

consider C74 , C75 being Int-Location such that L216: R11 = ( C74 := C75 ) by L215 , SCMFSA_2:30;
thus L217: thesis by L216 , COMPOS_0:4;
end;
suppose L218: ( InsCode R11 ) = 2;

consider C76 , C77 being Int-Location such that L219: R11 = ( AddTo (C76 , C77) ) by L218 , SCMFSA_2:31;
thus L220: thesis by L219 , COMPOS_0:4;
end;
suppose L221: ( InsCode R11 ) = 3;

consider C78 , C79 being Int-Location such that L222: R11 = ( SubFrom (C78 , C79) ) by L221 , SCMFSA_2:32;
thus L223: thesis by L222 , COMPOS_0:4;
end;
suppose L224: ( InsCode R11 ) = 4;

consider C80 , C81 being Int-Location such that L225: R11 = ( MultBy (C80 , C81) ) by L224 , SCMFSA_2:33;
thus L226: thesis by L225 , COMPOS_0:4;
end;
suppose L227: ( InsCode R11 ) = 5;

consider C82 , C83 being Int-Location such that L228: R11 = ( Divide (C82 , C83) ) by L227 , SCMFSA_2:34;
thus L229: thesis by L228 , COMPOS_0:4;
end;
suppose L230: ( InsCode R11 ) = 9;

consider C84 , C85 being Int-Location, C86 being FinSeq-Location such that L231: R11 = ( C85 := (C86 , C84) ) by L230 , SCMFSA_2:38;
thus L232: thesis by L231 , COMPOS_0:4;
end;
suppose L233: ( InsCode R11 ) = 10;

consider C87 , C88 being Int-Location, C89 being FinSeq-Location such that L234: R11 = ( (C89 , C87) := C88 ) by L233 , SCMFSA_2:39;
thus L235: thesis by L234 , COMPOS_0:4;
end;
suppose L236: ( InsCode R11 ) = 11;

consider C90 being Int-Location, C91 being FinSeq-Location such that L237: R11 = ( C90 :=len C91 ) by L236 , SCMFSA_2:40;
thus L238: thesis by L237 , COMPOS_0:4;
end;
suppose L239: ( InsCode R11 ) = 12;

consider C92 being Int-Location, C93 being FinSeq-Location such that L240: R11 = ( C93 :=<0,...,0> C92 ) by L239 , SCMFSA_2:41;
thus L241: thesis by L240 , COMPOS_0:4;
end;
end;
