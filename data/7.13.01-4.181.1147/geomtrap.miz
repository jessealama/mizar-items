:: A Construction of Analytical Ordered Trapezium Spaces
::  by Henryk Oryszczyszyn and Krzysztof Pra\.zmowski
::
:: Received October 29, 1990
:: Copyright (c) 1990-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, RLVECT_1, REAL_1, PARSP_1, ANALOAF, ANALMETR, RELAT_1,
      ARYTM_3, SUPINF_2, CARD_1, SUBSET_1, STRUCT_0, DIRAF, ARYTM_1, PBOOLE,
      SYMSP_1, MCART_1, ZFMISC_1, BINOP_1, FUNCT_1, MIDSP_1, XBOOLE_0,
      GEOMTRAP;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, DOMAIN_1, NUMBERS, XXREAL_0,
      REAL_1, STRUCT_0, DIRAF, RELSET_1, RLVECT_1, MIDSP_1, AFF_1, ANALOAF,
      BINOP_1, ANALMETR;
 constructors BINOP_1, DOMAIN_1, XXREAL_0, REAL_1, MEMBERED, MIDSP_1, AFF_1,
      ANALMETR;
 registrations SUBSET_1, RELSET_1, MEMBERED, STRUCT_0, ANALOAF, DIRAF,
      ANALMETR;
 requirements REAL, NUMERALS, SUBSET, BOOLE, ARITHM;
 definitions STRUCT_0, RLVECT_1;
 theorems RLVECT_1, RELAT_1, DIRAF, ANALOAF, ANALMETR, AFF_1, ZFMISC_1,
      RLSUB_2, XCMPLX_0, XCMPLX_1, XREAL_1, XTUPLE_0;
 schemes RELSET_1, BINOP_1, BINOP_2;

begin
definition
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R6 being (VECTOR of R1);
pred R2 , R5 '||' R3 , R6
means
:L1: (R2 , R5 // R3 , R6 or R2 , R5 // R6 , R3)
;end;
theorem
L3: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies ( OASpace R1 ) is OAffinSpace))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L4:  Gen R8 , R10;
L5: (for R12 being Real holds (for R13 being Real holds (( ( R12 * R8 ) + ( R13 * R10 ) ) = ( 0. R1 ) implies (R12 = ( 0 ) & R13 = ( 0 ))))) by L4 , ANALMETR:def 1;
thus L6: thesis by L5 , ANALOAF:26;
end;
theorem
L7: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for B1 , B2 , B3 , B4 being (Element of ( OASpace R1 )) holds ((B1 = R2 & B2 = R5 & B3 = R3 & B4 = R6) implies (B1 , B2 // B3 , B4 iff R2 , R5 // R3 , R6))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
L8: ( OASpace R1 ) = AffinStruct (# (the carrier of R1) , ( DirPar R1 ) #) by ANALOAF:def 4;
let C1 , C2 , C3 , C4 being (Element of ( OASpace R1 ));
assume that
L9: (C1 = R2 & C2 = R5 & C3 = R3 & C4 = R6);
L10:
now
assume L11: R2 , R5 // R3 , R6;
L12: [ [ C1 , C2 ] , [ C3 , C4 ] ] in (the CONGR of ( OASpace R1 )) by L11 , L9 , L8 , ANALOAF:22;
thus L13: C1 , C2 // C3 , C4 by L12 , ANALOAF:def 2;
end;
L14:
now
assume L15: C1 , C2 // C3 , C4;
L16: [ [ R2 , R5 ] , [ R3 , R6 ] ] in ( DirPar R1 ) by L15 , L9 , L8 , ANALOAF:def 2;
thus L17: R2 , R5 // R3 , R6 by L16 , ANALOAF:22;
end;
thus L18: thesis by L14 , L10;
end;
theorem
L19: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies (for B5 , B6 , B7 , B8 being (Element of (the carrier of ( Lambda ( OASpace R1 ) ))) holds ((B5 = R2 & B6 = R5 & B7 = R3 & B8 = R6) implies (B5 , B6 // B7 , B8 iff R2 , R5 '||' R3 , R6)))))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L20:  Gen R8 , R10;
reconsider D1 = ( OASpace R1 ) as OAffinSpace by L20 , L3;
let C5 , C6 , C7 , C8 being (Element of (the carrier of ( Lambda ( OASpace R1 ) )));
assume that
L21: (C5 = R2 & C6 = R5 & C7 = R3 & C8 = R6);
L22: ( Lambda ( OASpace R1 ) ) = AffinStruct (# (the carrier of ( OASpace R1 )) , ( lambda (the CONGR of ( OASpace R1 )) ) #) by DIRAF:def 2;
reconsider D2 = C5 , D3 = C6 , D4 = C7 , D5 = C8 as (Element of D1) by L22;
L23:
now
assume L24: R2 , R5 '||' R3 , R6;
L25: (R2 , R5 // R3 , R6 or R2 , R5 // R6 , R3) by L24 , L1;
L26: (D2 , D3 // D4 , D5 or D2 , D3 // D5 , D4) by L25 , L21 , L7;
L27: D2 , D3 '||' D4 , D5 by L26 , DIRAF:def 4;
thus L28: C5 , C6 // C7 , C8 by L27 , DIRAF:38;
end;
L29:
now
assume L30: C5 , C6 // C7 , C8;
L31: D2 , D3 '||' D4 , D5 by L30 , DIRAF:38;
L32: (D2 , D3 // D4 , D5 or D2 , D3 // D5 , D4) by L31 , DIRAF:def 4;
L33: (R2 , R5 // R3 , R6 or R2 , R5 // R6 , R3) by L32 , L21 , L7;
thus L34: R2 , R5 '||' R3 , R6 by L33 , L1;
end;
thus L35: thesis by L29 , L23;
end;
theorem
L36: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for B9 , B10 , B11 , B12 being (Element of (the carrier of ( AMSpace (R1 , R8 , R10) ))) holds ((B9 = R2 & B10 = R5 & B11 = R3 & B12 = R6) implies (B9 , B10 // B11 , B12 iff R2 , R5 '||' R3 , R6))))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let C9 , C10 , C11 , C12 being (Element of (the carrier of ( AMSpace (R1 , R8 , R10) )));
assume that
L37: (C9 = R2 & C10 = R5 & C11 = R3 & C12 = R6);
L38:
now
assume L39: C9 , C10 // C11 , C12;
L40: (ex R11 being Real st (ex R14 being Real st (( R11 * ( R5 - R2 ) ) = ( R14 * ( R6 - R3 ) ) & (R11 <> ( 0 ) or R14 <> ( 0 ))))) by L39 , L37 , ANALMETR:22;
L41: (R2 , R5 // R3 , R6 or R2 , R5 // R6 , R3) by L40 , ANALMETR:14;
thus L42: R2 , R5 '||' R3 , R6 by L41 , L1;
end;
L43:
now
assume L44: R2 , R5 '||' R3 , R6;
L45: (R2 , R5 // R3 , R6 or R2 , R5 // R6 , R3) by L44 , L1;
L46: (ex R11 being Real st (ex R14 being Real st (( R11 * ( R5 - R2 ) ) = ( R14 * ( R6 - R3 ) ) & (R11 <> ( 0 ) or R14 <> ( 0 ))))) by L45 , ANALMETR:14;
thus L47: C9 , C10 // C11 , C12 by L46 , L37 , ANALMETR:22;
end;
thus L48: thesis by L43 , L38;
end;
definition
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R5 being (VECTOR of R1);
func R2 # R5 -> (VECTOR of R1) means 
:L49: ( it + it ) = ( R2 + R5 );
existence
proof
set D6 = ( R2 + R5 );
set D7 = ( ( 2 " ) * D6 );
L50: ( ( 2 " ) + ( 2 " ) ) = 1;
L51: ( D7 + D7 ) = ( 1 * D6 ) by L50 , RLVECT_1:def 6
.= D6 by RLVECT_1:def 8;
thus L52: thesis by L51;
end;
uniqueness
proof
let R8 being (VECTOR of R1);
let R9 being (VECTOR of R1);
assume L53: (( R8 + R8 ) = ( R2 + R5 ) & ( R9 + R9 ) = ( R2 + R5 ));
L54: ( 0. R1 ) = ( ( R8 + R8 ) - ( R9 + R9 ) ) by L53 , RLVECT_1:15
.= ( R8 + ( R8 - ( R9 + R9 ) ) ) by RLVECT_1:def 3
.= ( R8 + ( ( R8 - R9 ) - R9 ) ) by RLVECT_1:27
.= ( ( R8 + ( R8 - R9 ) ) - R9 ) by RLVECT_1:def 3
.= ( ( R8 - R9 ) + ( R8 - R9 ) ) by RLVECT_1:def 3;
L55: ( R8 - R9 ) = ( 0. R1 ) by L54 , RLVECT_1:20;
thus L56: thesis by L55 , RLVECT_1:21;
end;
commutativity
;
idempotence
;
end;
theorem
L58: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (ex R10 being (VECTOR of R1) st ( R2 # R10 ) = R8))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R8 being (VECTOR of R1);
take D8 = ( ( - R2 ) + ( R8 + R8 ) );
L59: ( R2 + D8 ) = ( ( R2 + ( - R2 ) ) + ( R8 + R8 ) ) by RLVECT_1:def 3
.= ( ( 0. R1 ) + ( R8 + R8 ) ) by RLVECT_1:5
.= ( R8 + R8 ) by RLVECT_1:4;
thus L60: thesis by L59 , L49;
end;
theorem
L61: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds ( ( R2 # R3 ) # ( R5 # R6 ) ) = ( ( R2 # R5 ) # ( R3 # R6 ) ))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
set D9 = ( R2 # R3 );
set D10 = ( R5 # R6 );
set D11 = ( R2 # R5 );
set D12 = ( R3 # R6 );
set D13 = ( D9 # D10 );
set D14 = ( D11 # D12 );
L62:
now
let R8 being (VECTOR of R1);
L63: R8 = ( 1 * R8 ) by RLVECT_1:def 8;
L64: ( ( R8 + R8 ) + ( R8 + R8 ) ) = ( ( ( 1 + 1 ) * R8 ) + ( ( 1 * R8 ) + ( 1 * R8 ) ) ) by L63 , RLVECT_1:def 6
.= ( ( ( 1 + 1 ) * R8 ) + ( ( 1 + 1 ) * R8 ) ) by RLVECT_1:def 6
.= ( ( ( 1 + 1 ) + ( 1 + 1 ) ) * R8 ) by RLVECT_1:def 6;
thus L65: ( ( R8 + R8 ) + ( R8 + R8 ) ) = ( 4 * R8 ) by L64;
end;
L66: ( ( D13 + D13 ) + ( D13 + D13 ) ) = ( ( D13 + D13 ) + ( D9 + D10 ) ) by L49
.= ( ( D9 + D10 ) + ( D9 + D10 ) ) by L49
.= ( D9 + ( D10 + ( D9 + D10 ) ) ) by RLVECT_1:def 3
.= ( D9 + ( D9 + ( D10 + D10 ) ) ) by RLVECT_1:def 3
.= ( ( D9 + D9 ) + ( D10 + D10 ) ) by RLVECT_1:def 3
.= ( ( D9 + D9 ) + ( R5 + R6 ) ) by L49
.= ( ( R2 + R3 ) + ( R5 + R6 ) ) by L49
.= ( R2 + ( R3 + ( R5 + R6 ) ) ) by RLVECT_1:def 3
.= ( R2 + ( R5 + ( R6 + R3 ) ) ) by RLVECT_1:def 3
.= ( ( R2 + R5 ) + ( R6 + R3 ) ) by RLVECT_1:def 3
.= ( ( R2 + R5 ) + ( D12 + D12 ) ) by L49
.= ( ( D11 + D11 ) + ( D12 + D12 ) ) by L49
.= ( D11 + ( D11 + ( D12 + D12 ) ) ) by RLVECT_1:def 3
.= ( D11 + ( D12 + ( D12 + D11 ) ) ) by RLVECT_1:def 3
.= ( ( D11 + D12 ) + ( D12 + D11 ) ) by RLVECT_1:def 3
.= ( ( D14 + D14 ) + ( D11 + D12 ) ) by L49
.= ( ( D14 + D14 ) + ( D14 + D14 ) ) by L49;
L67: ( 4 * D13 ) = ( ( D14 + D14 ) + ( D14 + D14 ) ) by L66 , L62
.= ( 4 * D14 ) by L62;
thus L68: thesis by L67 , RLVECT_1:36;
end;
theorem
L69: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (( R2 # R10 ) = ( R2 # R8 ) implies R10 = R8)))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L70: ( R2 # R10 ) = ( R2 # R8 );
set D15 = ( R2 # R10 );
L71: ( R2 + R10 ) = ( D15 + D15 ) by L49
.= ( R2 + R8 ) by L70 , L49;
thus L72: thesis by L71 , RLVECT_1:8;
end;
theorem
L73: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds R2 , R5 // ( R10 # R2 ) , ( R10 # R5 )))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R10 being (VECTOR of R1);
set D16 = ( R10 # R2 );
set D17 = ( R10 # R5 );
L74: (( R10 + R2 ) = ( D16 + D16 ) & ( R10 + R5 ) = ( D17 + D17 )) by L49;
L75: ( 2 * ( D17 - D16 ) ) = ( ( ( 1 + 1 ) * D17 ) - ( ( 1 + 1 ) * D16 ) ) by RLVECT_1:34
.= ( ( ( 1 * D17 ) + ( 1 * D17 ) ) - ( ( 1 + 1 ) * D16 ) ) by RLVECT_1:def 6
.= ( ( ( 1 * D17 ) + ( 1 * D17 ) ) - ( ( 1 * D16 ) + ( 1 * D16 ) ) ) by RLVECT_1:def 6
.= ( ( D17 + ( 1 * D17 ) ) - ( ( 1 * D16 ) + ( 1 * D16 ) ) ) by RLVECT_1:def 8
.= ( ( D17 + D17 ) - ( ( 1 * D16 ) + ( 1 * D16 ) ) ) by RLVECT_1:def 8
.= ( ( D17 + D17 ) - ( D16 + ( 1 * D16 ) ) ) by RLVECT_1:def 8
.= ( ( R10 + R5 ) - ( R10 + R2 ) ) by L74 , RLVECT_1:def 8
.= ( R5 + ( R10 - ( R10 + R2 ) ) ) by RLVECT_1:def 3
.= ( R5 + ( ( R10 - R10 ) - R2 ) ) by RLVECT_1:27
.= ( R5 + ( ( 0. R1 ) - R2 ) ) by RLVECT_1:15
.= ( R5 - R2 ) by RLVECT_1:14
.= ( 1 * ( R5 - R2 ) ) by RLVECT_1:def 8;
thus L76: thesis by L75 , ANALOAF:def 1;
end;
theorem
L77: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds R2 , R5 '||' ( R8 # R2 ) , ( R8 # R5 )))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R8 being (VECTOR of R1);
L78: R2 , R5 // ( R8 # R2 ) , ( R8 # R5 ) by L73;
thus L79: thesis by L78 , L1;
end;
theorem
L80: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (( 2 * ( ( R2 # R5 ) - R2 ) ) = ( R5 - R2 ) & ( 2 * ( R5 - ( R2 # R5 ) ) ) = ( R5 - R2 )))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R5 being (VECTOR of R1);
set D18 = ( R2 # R5 );
L81: ( 2 - 1 ) = 1;
L82: ( 2 * ( R5 - D18 ) ) = ( ( 2 * R5 ) - ( ( 1 + 1 ) * D18 ) ) by RLVECT_1:34
.= ( ( 2 * R5 ) - ( ( 1 * D18 ) + ( 1 * D18 ) ) ) by RLVECT_1:def 6
.= ( ( 2 * R5 ) - ( ( 1 * D18 ) + D18 ) ) by RLVECT_1:def 8
.= ( ( 2 * R5 ) - ( D18 + D18 ) ) by RLVECT_1:def 8
.= ( ( 2 * R5 ) - ( R2 + R5 ) ) by L49
.= ( ( ( 2 * R5 ) - R5 ) - R2 ) by RLVECT_1:27
.= ( ( ( 2 * R5 ) - ( 1 * R5 ) ) - R2 ) by RLVECT_1:def 8
.= ( ( 1 * R5 ) - R2 ) by L81 , RLVECT_1:35
.= ( R5 - R2 ) by RLVECT_1:def 8;
L83: ( 1 - 2 ) = ( - 1 );
L84: ( 2 * ( D18 - R2 ) ) = ( ( ( 1 + 1 ) * D18 ) - ( 2 * R2 ) ) by RLVECT_1:34
.= ( ( ( 1 * D18 ) + ( 1 * D18 ) ) - ( 2 * R2 ) ) by RLVECT_1:def 6
.= ( ( D18 + ( 1 * D18 ) ) - ( 2 * R2 ) ) by RLVECT_1:def 8
.= ( ( D18 + D18 ) - ( 2 * R2 ) ) by RLVECT_1:def 8
.= ( ( R2 + R5 ) - ( 2 * R2 ) ) by L49
.= ( R5 + ( R2 - ( 2 * R2 ) ) ) by RLVECT_1:def 3
.= ( R5 + ( ( 1 * R2 ) - ( 2 * R2 ) ) ) by RLVECT_1:def 8
.= ( R5 + ( ( - 1 ) * R2 ) ) by L83 , RLVECT_1:35
.= ( R5 - R2 ) by RLVECT_1:16;
thus L85: thesis by L84 , L82;
end;
theorem
L86: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds R2 , ( R2 # R5 ) // ( R2 # R5 ) , R5)))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R5 being (VECTOR of R1);
set D19 = ( R2 # R5 );
L87: ( 2 * ( D19 - R2 ) ) = ( R5 - R2 ) by L80
.= ( 2 * ( R5 - D19 ) ) by L80;
thus L88: thesis by L87 , ANALOAF:def 1;
end;
theorem
L89: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (R2 , R5 // R2 , ( R2 # R5 ) & R2 , R5 // ( R2 # R5 ) , R5))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R5 being (VECTOR of R1);
set D20 = ( R2 # R5 );
L90: ( 1 * ( R5 - R2 ) ) = ( R5 - R2 ) by RLVECT_1:def 8
.= ( 2 * ( D20 - R2 ) ) by L80;
thus L91: R2 , R5 // R2 , ( R2 # R5 ) by L90 , ANALOAF:def 1;
L92: ( 1 * ( R5 - R2 ) ) = ( R5 - R2 ) by RLVECT_1:def 8
.= ( 2 * ( R5 - D20 ) ) by L80;
thus L93: thesis by L92 , ANALOAF:def 1;
end;
L94: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (R2 , R10 // R10 , R5 implies (R5 , R10 // R10 , R2 & R2 , R10 // R2 , R5 & R10 , R5 // R2 , R5))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L95: R2 , R10 // R10 , R5;
L96: R10 , R2 // R5 , R10 by L95 , ANALOAF:12;
thus L97: R5 , R10 // R10 , R2 by L96 , ANALOAF:12;
thus L98: R2 , R10 // R2 , R5 by L95 , ANALOAF:13;
L99: R5 , R10 // R5 , R2 by L97 , ANALOAF:13;
thus L100: thesis by L99 , ANALOAF:12;
end;
theorem
L101: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (R2 , R10 // R10 , R5 implies ( R2 # R10 ) , R10 // R10 , ( R10 # R5 ))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R10 being (VECTOR of R1);
set D21 = ( R2 # R10 );
set D22 = ( R10 # R5 );
L102: R2 , D21 // D21 , R10 by L86;
L103: D21 , R10 // R2 , R10 by L102 , L94;
L104: R2 , R10 // D21 , R10 by L103 , ANALOAF:12;
L105: R10 , D22 // D22 , R5 by L86;
L106: R10 , D22 // R10 , R5 by L105 , L94;
L107: R10 , R5 // R10 , D22 by L106 , ANALOAF:12;
assume L108: R2 , R10 // R10 , R5;
L109:
now
assume that
L110: R2 <> R10
and
L111: R10 <> R5;
L112: R10 , R5 // D21 , R10 by L108 , L104 , L110 , ANALOAF:11;
thus L113: thesis by L112 , L107 , L111 , ANALOAF:11;
end;
thus L114: thesis by L109 , ANALOAF:9;
end;
theorem
L115: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (R2 , R5 // R3 , R6 implies R2 , R5 // ( R2 # R3 ) , ( R5 # R6 )))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
assume L116: R2 , R5 // R3 , R6;
per cases ;
suppose L117: (R2 = R5 or R3 = R6);

thus L118: thesis by L117 , L73 , ANALOAF:9;
end;
suppose L119: (R2 <> R5 & R3 <> R6);

set D23 = ( R2 # R3 );
set D24 = ( R5 # R6 );
consider R11 being Real, R14 being Real such that L120: (( 0 ) < R11 & ( 0 ) < R14) and L121: ( R11 * ( R5 - R2 ) ) = ( R14 * ( R6 - R3 ) ) by L116 , L119 , ANALOAF:def 1;
L122: (( 0 ) < ( R11 + R14 ) & ( 0 ) < ( R14 * 2 )) by L120 , XREAL_1:34 , XREAL_1:129;
L123: ( ( R14 * 2 ) * ( D24 - D23 ) ) = ( R14 * ( 2 * ( D24 - D23 ) ) ) by RLVECT_1:def 7
.= ( R14 * ( ( ( 1 + 1 ) * D24 ) - ( 2 * D23 ) ) ) by RLVECT_1:34
.= ( R14 * ( ( ( 1 * D24 ) + ( 1 * D24 ) ) - ( 2 * D23 ) ) ) by RLVECT_1:def 6
.= ( R14 * ( ( D24 + ( 1 * D24 ) ) - ( 2 * D23 ) ) ) by RLVECT_1:def 8
.= ( R14 * ( ( D24 + D24 ) - ( 2 * D23 ) ) ) by RLVECT_1:def 8
.= ( R14 * ( ( R5 + R6 ) - ( 2 * D23 ) ) ) by L49
.= ( R14 * ( R5 + ( R6 - ( ( 1 + 1 ) * D23 ) ) ) ) by RLVECT_1:def 3
.= ( R14 * ( R5 + ( R6 - ( ( 1 * D23 ) + ( 1 * D23 ) ) ) ) ) by RLVECT_1:def 6
.= ( R14 * ( R5 + ( R6 - ( D23 + ( 1 * D23 ) ) ) ) ) by RLVECT_1:def 8
.= ( R14 * ( R5 + ( R6 - ( D23 + D23 ) ) ) ) by RLVECT_1:def 8
.= ( R14 * ( R5 + ( R6 - ( R2 + R3 ) ) ) ) by L49
.= ( R14 * ( R5 + ( ( R6 - R3 ) - R2 ) ) ) by RLVECT_1:27
.= ( R14 * ( ( R5 + ( R6 - R3 ) ) - R2 ) ) by RLVECT_1:def 3
.= ( R14 * ( ( R6 - R3 ) + ( R5 - R2 ) ) ) by RLVECT_1:def 3
.= ( ( R11 * ( R5 - R2 ) ) + ( R14 * ( R5 - R2 ) ) ) by L121 , RLVECT_1:def 5
.= ( ( R11 + R14 ) * ( R5 - R2 ) ) by RLVECT_1:def 6;
thus L124: thesis by L123 , L122 , ANALOAF:def 1;
end;
end;
L126: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (R2 , R5 // R3 , R6 implies R2 , R5 '||' ( R2 # R6 ) , ( R5 # R3 )))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
assume L127: R2 , R5 // R3 , R6;
per cases ;
suppose L128: R2 = R5;

L129: R2 , R5 // ( R2 # R6 ) , ( R5 # R3 ) by L128 , ANALOAF:9;
thus L130: thesis by L129 , L1;
end;
suppose L131: R3 = R6;

L132: R2 , R5 // ( R2 # R6 ) , ( R5 # R3 ) by L131 , L73;
thus L133: thesis by L132 , L1;
end;
suppose L134: (R2 <> R5 & R3 <> R6);

consider R11 being Real, R14 being Real such that L135: ( 0 ) < R11 and L136: ( 0 ) < R14 and L137: ( R11 * ( R5 - R2 ) ) = ( R14 * ( R6 - R3 ) ) by L134 , L127 , ANALOAF:def 1;
L138: ( R14 * ( R3 - R6 ) ) = ( R14 * ( - ( R6 - R3 ) ) ) by RLVECT_1:33
.= ( - ( R11 * ( R5 - R2 ) ) ) by L137 , RLVECT_1:25
.= ( R11 * ( - ( R5 - R2 ) ) ) by RLVECT_1:25
.= ( ( - R11 ) * ( R5 - R2 ) ) by RLVECT_1:24;
set D25 = ( R2 # R6 );
set D26 = ( R5 # R3 );
set D27 = ( R14 * 2 );
set D28 = ( R14 - R11 );
L139: D27 <> ( 0 ) by L136;
L140: ( D27 * ( D26 - D25 ) ) = ( R14 * ( 2 * ( D26 - D25 ) ) ) by RLVECT_1:def 7
.= ( R14 * ( ( ( 1 + 1 ) * D26 ) - ( 2 * D25 ) ) ) by RLVECT_1:34
.= ( R14 * ( ( ( 1 * D26 ) + ( 1 * D26 ) ) - ( 2 * D25 ) ) ) by RLVECT_1:def 6
.= ( R14 * ( ( D26 + ( 1 * D26 ) ) - ( 2 * D25 ) ) ) by RLVECT_1:def 8
.= ( R14 * ( ( D26 + D26 ) - ( 2 * D25 ) ) ) by RLVECT_1:def 8
.= ( R14 * ( ( R5 + R3 ) - ( 2 * D25 ) ) ) by L49
.= ( R14 * ( R5 + ( R3 - ( ( 1 + 1 ) * D25 ) ) ) ) by RLVECT_1:def 3
.= ( R14 * ( R5 + ( R3 - ( ( 1 * D25 ) + ( 1 * D25 ) ) ) ) ) by RLVECT_1:def 6
.= ( R14 * ( R5 + ( R3 - ( D25 + ( 1 * D25 ) ) ) ) ) by RLVECT_1:def 8
.= ( R14 * ( R5 + ( R3 - ( D25 + D25 ) ) ) ) by RLVECT_1:def 8
.= ( R14 * ( R5 + ( R3 - ( R2 + R6 ) ) ) ) by L49
.= ( R14 * ( R5 + ( ( R3 - R6 ) - R2 ) ) ) by RLVECT_1:27
.= ( R14 * ( ( R5 + ( R3 - R6 ) ) - R2 ) ) by RLVECT_1:def 3
.= ( R14 * ( ( R3 - R6 ) + ( R5 - R2 ) ) ) by RLVECT_1:def 3
.= ( ( ( - R11 ) * ( R5 - R2 ) ) + ( R14 * ( R5 - R2 ) ) ) by L138 , RLVECT_1:def 5
.= ( ( R14 + ( - R11 ) ) * ( R5 - R2 ) ) by RLVECT_1:def 6
.= ( D28 * ( R5 - R2 ) );
L141: (R2 , R5 // D25 , D26 or R2 , R5 // D26 , D25) by L140 , L139 , ANALMETR:14;
thus L142: thesis by L141 , L1;
end;
end;
L144: (for R1 being RealLinearSpace holds (for R3 being (VECTOR of R1) holds (for R4 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for R7 being (VECTOR of R1) holds (( R3 # R4 ) = ( R6 # R7 ) implies ( R6 - R3 ) = ( - ( R7 - R4 ) )))))))
proof
let R1 being RealLinearSpace;
let R3 being (VECTOR of R1);
let R4 being (VECTOR of R1);
let R6 being (VECTOR of R1);
let R7 being (VECTOR of R1);
set D29 = ( R3 # R4 );
L145: ( D29 + D29 ) = ( R3 + R4 ) by L49;
assume L146: ( R3 # R4 ) = ( R6 # R7 );
L147: ( D29 + D29 ) = ( R6 + R7 ) by L146 , L49;
L148: ( ( R6 - R3 ) + R7 ) = ( ( R7 + R6 ) - R3 ) by RLVECT_1:def 3
.= R4 by L145 , L147 , RLSUB_2:61;
L149: ( ( R6 - R3 ) + ( R7 - R4 ) ) = ( R4 - R4 ) by L148 , RLVECT_1:def 3
.= ( 0. R1 ) by RLVECT_1:15;
thus L150: thesis by L149 , RLVECT_1:6;
end;
L151: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (R2 , R5 , R3 , R6 are_Ort_wrt R8 , R10 implies R2 , R5 , R6 , R3 are_Ort_wrt R8 , R10))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L152: R2 , R5 , R3 , R6 are_Ort_wrt R8 , R10;
L153: ( R5 - R2 ) , ( R6 - R3 ) are_Ort_wrt R8 , R10 by L152 , ANALMETR:def 3;
L154: ( R5 - R2 ) , ( ( - 1 ) * ( R6 - R3 ) ) are_Ort_wrt R8 , R10 by L153 , ANALMETR:7;
L155: ( ( - 1 ) * ( R6 - R3 ) ) = ( - ( R6 - R3 ) ) by RLVECT_1:16
.= ( R3 - R6 ) by RLVECT_1:33;
thus L156: thesis by L155 , L154 , ANALMETR:def 3;
end;
L157: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (R2 , R5 , R3 , R6 are_Ort_wrt R8 , R10 implies R3 , R6 , R2 , R5 are_Ort_wrt R8 , R10))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L158: R2 , R5 , R3 , R6 are_Ort_wrt R8 , R10;
L159: ( R5 - R2 ) , ( R6 - R3 ) are_Ort_wrt R8 , R10 by L158 , ANALMETR:def 3;
L160: ( R6 - R3 ) , ( R5 - R2 ) are_Ort_wrt R8 , R10 by L159 , ANALMETR:4;
thus L161: thesis by L160 , ANALMETR:def 3;
end;
L162: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies R2 , R5 , R3 , R3 are_Ort_wrt R8 , R10)))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
L163: ( R3 - R3 ) = ( 0. R1 ) by RLVECT_1:15;
assume L164:  Gen R8 , R10;
L165: ( R5 - R2 ) , ( R3 - R3 ) are_Ort_wrt R8 , R10 by L164 , L163 , ANALMETR:5;
thus L166: thesis by L165 , ANALMETR:def 3;
end;
L167: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for R7 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R9 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (( Gen R8 , R10 & R2 , R5 , R9 , R6 are_Ort_wrt R8 , R10 & R2 , R5 , R9 , R7 are_Ort_wrt R8 , R10) implies R2 , R5 , R6 , R7 are_Ort_wrt R8 , R10)))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
let R7 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R9 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume that
L168:  Gen R8 , R10
and
L169: (R2 , R5 , R9 , R6 are_Ort_wrt R8 , R10 & R2 , R5 , R9 , R7 are_Ort_wrt R8 , R10);
L170: (( R5 - R2 ) , ( R6 - R9 ) are_Ort_wrt R8 , R10 & ( R5 - R2 ) , ( R7 - R9 ) are_Ort_wrt R8 , R10) by L169 , ANALMETR:def 3;
L171: ( R5 - R2 ) , ( ( R7 - R9 ) - ( R6 - R9 ) ) are_Ort_wrt R8 , R10 by L170 , L168 , ANALMETR:10;
L172: ( ( R7 - R9 ) - ( R6 - R9 ) ) = ( R7 - ( R9 + ( R6 - R9 ) ) ) by RLVECT_1:27
.= ( R7 - ( R6 - ( R9 - R9 ) ) ) by RLVECT_1:29
.= ( R7 - ( R6 - ( 0. R1 ) ) ) by RLVECT_1:15
.= ( R7 - R6 ) by RLVECT_1:13;
thus L173: thesis by L172 , L171 , ANALMETR:def 3;
end;
L174: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (( Gen R8 , R10 & R2 , R5 , R2 , R5 are_Ort_wrt R8 , R10) implies R2 = R5))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume that
L175:  Gen R8 , R10
and
L176: R2 , R5 , R2 , R5 are_Ort_wrt R8 , R10;
L177: ( R5 - R2 ) , ( R5 - R2 ) are_Ort_wrt R8 , R10 by L176 , ANALMETR:def 3;
L178: ( R5 - R2 ) = ( 0. R1 ) by L177 , L175 , ANALMETR:11;
thus L179: thesis by L178 , RLVECT_1:21;
end;
L180: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies (R2 , R5 , R3 , R3 are_Ort_wrt R8 , R10 & R3 , R3 , R2 , R5 are_Ort_wrt R8 , R10))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
L181: ( R3 - R3 ) = ( 0. R1 ) by RLVECT_1:15;
assume L182:  Gen R8 , R10;
L183: ( R5 - R2 ) , ( R3 - R3 ) are_Ort_wrt R8 , R10 by L182 , L181 , ANALMETR:5;
thus L184: R2 , R5 , R3 , R3 are_Ort_wrt R8 , R10 by L183 , ANALMETR:def 3;
thus L185: thesis by L184 , L157;
end;
L186: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R4 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for R7 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (( Gen R8 , R10 & (R3 , R6 '||' R2 , R5 or R2 , R5 '||' R3 , R6) & (R4 , R7 , R2 , R5 are_Ort_wrt R8 , R10 or R2 , R5 , R4 , R7 are_Ort_wrt R8 , R10) & R2 <> R5) implies (R3 , R6 , R4 , R7 are_Ort_wrt R8 , R10 & R4 , R7 , R3 , R6 are_Ort_wrt R8 , R10)))))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R4 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
let R7 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume that
L187:  Gen R8 , R10
and
L188: (R3 , R6 '||' R2 , R5 or R2 , R5 '||' R3 , R6)
and
L189: (R4 , R7 , R2 , R5 are_Ort_wrt R8 , R10 or R2 , R5 , R4 , R7 are_Ort_wrt R8 , R10)
and
L190: R2 <> R5;
reconsider D30 = R2 , D31 = R5 , D32 = R3 , D33 = R6 , D34 = R4 , D35 = R7 as (Element of (the carrier of ( AMSpace (R1 , R8 , R10) ))) by ANALMETR:19;
reconsider D36 = ( AMSpace (R1 , R8 , R10) ) as OrtAfSp by L187 , ANALMETR:33;
reconsider D37 = D30 , D38 = D31 , D39 = D32 , D40 = D33 , D41 = D34 , D42 = D35 as (Element of D36);
L191: (D41 , D42 _|_ D37 , D38 or D37 , D38 _|_ D41 , D42) by L189 , ANALMETR:21;
L192: (D39 , D40 // D37 , D38 or D37 , D38 // D39 , D40) by L188 , L36;
L193: (D39 , D40 _|_ D41 , D42 & D41 , D42 _|_ D39 , D40) by L192 , L190 , L191 , ANALMETR:62;
thus L194: thesis by L193 , ANALMETR:21;
end;
definition
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
pred R2 , R3 , R5 , R6 are_DTr_wrt R8 , R10
means
:L195: (R2 , R3 // R5 , R6 & R2 , R3 , ( R2 # R3 ) , ( R5 # R6 ) are_Ort_wrt R8 , R10 & R5 , R6 , ( R2 # R3 ) , ( R5 # R6 ) are_Ort_wrt R8 , R10)
;end;
theorem
L197: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies R2 , R2 , R5 , R5 are_DTr_wrt R8 , R10))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L198:  Gen R8 , R10;
L199: (R2 , R2 , ( R2 # R2 ) , ( R5 # R5 ) are_Ort_wrt R8 , R10 & R5 , R5 , ( R2 # R2 ) , ( R5 # R5 ) are_Ort_wrt R8 , R10) by L198 , L157 , L162;
L200: R2 , R2 // R5 , R5 by ANALOAF:9;
thus L201: thesis by L200 , L199 , L195;
end;
theorem
L202: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies R2 , R5 , R2 , R5 are_DTr_wrt R8 , R10))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L203:  Gen R8 , R10;
L204: (R2 , R5 // R2 , R5 & R2 , R5 , ( R2 # R5 ) , ( R2 # R5 ) are_Ort_wrt R8 , R10) by L203 , L162 , ANALOAF:8;
thus L205: thesis by L204 , L195;
end;
theorem
L206: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (R2 , R5 , R5 , R2 are_DTr_wrt R8 , R10 implies R2 = R5))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L207: R2 , R5 , R5 , R2 are_DTr_wrt R8 , R10;
L208: R2 , R5 // R5 , R2 by L207 , L195;
thus L209: thesis by L208 , ANALOAF:10;
end;
theorem
L210: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for R7 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (( Gen R8 , R10 & R6 , R2 , R2 , R7 are_DTr_wrt R8 , R10) implies (R6 = R2 & R2 = R7))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R6 being (VECTOR of R1);
let R7 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume that
L211:  Gen R8 , R10
and
L212: R6 , R2 , R2 , R7 are_DTr_wrt R8 , R10;
set D43 = ( R6 # R2 );
set D44 = ( R2 # R7 );
L213: R6 , R2 , D43 , D44 are_Ort_wrt R8 , R10 by L212 , L195;
L214: R2 , R7 , D43 , D44 are_Ort_wrt R8 , R10 by L212 , L195;
L215: R6 , R2 // R2 , R7 by L212 , L195;
per cases ;
suppose L216: R6 = R7;

thus L217: thesis by L216 , L212 , L206;
end;
suppose L218: R6 <> R7;

L219: D43 <> D44 by L218 , L69;
L220: R2 , R7 // R2 , D44 by L89;
L221: R2 , R7 '||' R2 , D44 by L220 , L1;
L222: D43 , R2 // R2 , D44 by L215 , L101;
L223: R2 , D44 // D43 , D44 by L222 , L94;
L224: R2 , D44 '||' D43 , D44 by L223 , L1;
L225: R2 = R7
proof
assume L226: R2 <> R7;
L227: R2 <> D44
proof
assume L228: R2 = D44;
L229: ( R2 # R7 ) = ( R2 # R2 ) by L228;
thus L230: contradiction by L229 , L226 , L69;
end;
L231: R2 , D44 , D43 , D44 are_Ort_wrt R8 , R10 by L211 , L214 , L221 , L226 , L186;
L232: R2 , D44 , R2 , D44 are_Ort_wrt R8 , R10 by L231 , L211 , L219 , L224 , L186;
thus L233: contradiction by L232 , L211 , L227 , L174;
end;
L234: R6 , R2 // D43 , R2 by L89;
L235: R6 , R2 '||' D43 , R2 by L234 , L1;
L236: D43 , R2 // D43 , D44 by L222 , L94;
L237: D43 , R2 '||' D43 , D44 by L236 , L1;
L238: R6 = R2
proof
assume L239: R6 <> R2;
L240: R2 <> D43
proof
assume L241: R2 = D43;
L242: ( R6 # R2 ) = ( R2 # R2 ) by L241;
thus L243: contradiction by L242 , L239 , L69;
end;
L244: D43 , R2 , D43 , D44 are_Ort_wrt R8 , R10 by L211 , L213 , L235 , L239 , L186;
L245: D43 , R2 , D43 , R2 are_Ort_wrt R8 , R10 by L244 , L211 , L219 , L237 , L186;
thus L246: contradiction by L245 , L211 , L240 , L174;
end;
thus L247: thesis by L238 , L225;
end;
end;
theorem
L249: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R4 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for R7 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (( Gen R8 , R10 & R2 , R5 , R3 , R6 are_DTr_wrt R8 , R10 & R2 , R5 , R4 , R7 are_DTr_wrt R8 , R10 & R2 <> R5) implies R3 , R6 , R4 , R7 are_DTr_wrt R8 , R10))))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R4 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
let R7 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume that
L250:  Gen R8 , R10
and
L251: R2 , R5 , R3 , R6 are_DTr_wrt R8 , R10
and
L252: R2 , R5 , R4 , R7 are_DTr_wrt R8 , R10
and
L253: R2 <> R5;
set D45 = ( R3 # R6 );
set D46 = ( R4 # R7 );
L254: (R2 , R5 , ( R2 # R5 ) , ( R3 # R6 ) are_Ort_wrt R8 , R10 & R2 , R5 , ( R2 # R5 ) , ( R4 # R7 ) are_Ort_wrt R8 , R10) by L251 , L252 , L195;
L255: R2 , R5 , D45 , D46 are_Ort_wrt R8 , R10 by L254 , L250 , L167;
L256: R2 , R5 // R4 , R7 by L252 , L195;
L257: R2 , R5 '||' R4 , R7 by L256 , L1;
L258: R4 , R7 , D45 , D46 are_Ort_wrt R8 , R10 by L257 , L250 , L253 , L255 , L186;
L259: R2 , R5 // R3 , R6 by L251 , L195;
L260: R2 , R5 '||' R3 , R6 by L259 , L1;
L261: R3 , R6 , D45 , D46 are_Ort_wrt R8 , R10 by L260 , L250 , L253 , L255 , L186;
L262: R3 , R6 // R4 , R7 by L253 , L259 , L256 , ANALOAF:11;
thus L263: thesis by L262 , L261 , L258 , L195;
end;
theorem
L264: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies (ex B13 being (VECTOR of R1) st (R2 , R5 , R3 , B13 are_DTr_wrt R8 , R10 or R2 , R5 , B13 , R3 are_DTr_wrt R8 , R10)))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L265:  Gen R8 , R10;
set D47 = ( R2 # R5 );
per cases ;
suppose L266: R2 = R5;

L267: R3 , R3 , ( R2 # R2 ) , ( R3 # R3 ) are_Ort_wrt R8 , R10 by L265 , L157 , L162;
L268: (R2 , R2 // R3 , R3 & R2 , R2 , ( R2 # R2 ) , ( R3 # R3 ) are_Ort_wrt R8 , R10) by L265 , L157 , L162 , ANALOAF:9;
L269: R2 , R2 , R3 , R3 are_DTr_wrt R8 , R10 by L268 , L267 , L195;
thus L270: thesis by L269 , L266;
end;
suppose L271: R2 <> R5;

L272: D47 <> R2
proof
assume L273: D47 = R2;
L274: ( R2 # R2 ) = ( R2 # R5 ) by L273;
thus L275: contradiction by L274 , L271 , L69;
end;
L276: ( R2 - D47 ) <> ( 0. R1 ) by L272 , RLVECT_1:21;
consider C13 being Real such that L277: ( ( R3 - D47 ) - ( C13 * ( R2 - D47 ) ) ) , ( R2 - D47 ) are_Ort_wrt R8 , R10 by L276 , L265 , ANALMETR:13;
set D48 = ( R3 - ( C13 * ( R2 - D47 ) ) );
set D49 = ( ( 2 * D48 ) - R3 );
L278: ( R3 + D49 ) = ( ( 1 + 1 ) * D48 ) by RLSUB_2:61
.= ( ( 1 * D48 ) + ( 1 * D48 ) ) by RLVECT_1:def 6
.= ( D48 + ( 1 * D48 ) ) by RLVECT_1:def 8
.= ( D48 + D48 ) by RLVECT_1:def 8;
L279: ( R3 # D49 ) = D48 by L278 , L49;
L280: ( R3 - D48 ) = ( ( R3 - R3 ) + ( C13 * ( R2 - D47 ) ) ) by RLVECT_1:29
.= ( ( 0. R1 ) + ( C13 * ( R2 - D47 ) ) ) by RLVECT_1:15
.= ( C13 * ( R2 - D47 ) ) by RLVECT_1:4;
L281: ( R3 - D49 ) = ( 2 * ( C13 * ( R2 - D47 ) ) ) by L280 , L279 , L80
.= ( ( 2 * C13 ) * ( R2 - D47 ) ) by RLVECT_1:def 7;
L282: ( R3 - ( D47 + ( C13 * ( R2 - D47 ) ) ) ) = ( ( R3 - ( C13 * ( R2 - D47 ) ) ) - D47 ) by RLVECT_1:27;
L283: ( D48 - D47 ) , ( R2 - D47 ) are_Ort_wrt R8 , R10 by L282 , L277 , RLVECT_1:27;
L284: ( D48 - D47 ) , ( R3 - D49 ) are_Ort_wrt R8 , R10 by L283 , L281 , ANALMETR:7;
L285: D47 , D48 , D49 , R3 are_Ort_wrt R8 , R10 by L284 , ANALMETR:def 3;
L286: D49 , R3 , ( R2 # R5 ) , ( D49 # R3 ) are_Ort_wrt R8 , R10 by L285 , L279 , L157;
L287: ( R2 - R5 ) = ( 2 * ( R2 - ( R2 # R5 ) ) ) by L80;
L288: ( R3 - D49 ) = ( C13 * ( R2 - R5 ) ) by L287 , L281 , RLVECT_1:def 7;
L289: ( C13 * ( R2 - R5 ) ) = ( 1 * ( R3 - D49 ) ) by L288 , RLVECT_1:def 8;
L290: (R5 , R2 // D49 , R3 or R5 , R2 // R3 , D49) by L289 , ANALMETR:14;
L291: (R2 , R5 // R3 , D49 or R2 , R5 // D49 , R3) by L290 , ANALOAF:12;
L292: D47 , D48 , R3 , D49 are_Ort_wrt R8 , R10 by L285 , L151;
L293: R3 , D49 , ( R2 # R5 ) , ( R3 # D49 ) are_Ort_wrt R8 , R10 by L292 , L279 , L157;
L294: ( D48 - D47 ) = ( ( R3 - D47 ) - ( C13 * ( R2 - D47 ) ) ) by L282 , RLVECT_1:27;
L295: ( D48 - D47 ) , ( R2 - R5 ) are_Ort_wrt R8 , R10 by L294 , L277 , L287 , ANALMETR:7;
L296: D47 , D48 , R5 , R2 are_Ort_wrt R8 , R10 by L295 , ANALMETR:def 3;
L297: D47 , D48 , R2 , R5 are_Ort_wrt R8 , R10 by L296 , L151;
L298: R2 , R5 , ( R2 # R5 ) , ( R3 # D49 ) are_Ort_wrt R8 , R10 by L297 , L279 , L157;
L299: (R2 , R5 , R3 , D49 are_DTr_wrt R8 , R10 or R2 , R5 , D49 , R3 are_DTr_wrt R8 , R10) by L298 , L293 , L286 , L291 , L195;
thus L300: thesis by L299;
end;
end;
theorem
L302: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (R2 , R5 , R3 , R6 are_DTr_wrt R8 , R10 implies R3 , R6 , R2 , R5 are_DTr_wrt R8 , R10))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L303: R2 , R5 , R3 , R6 are_DTr_wrt R8 , R10;
L304: R2 , R5 // R3 , R6 by L303 , L195;
L305: R3 , R6 // R2 , R5 by L304 , ANALOAF:12;
L306: R3 , R6 , ( R2 # R5 ) , ( R3 # R6 ) are_Ort_wrt R8 , R10 by L303 , L195;
L307: R3 , R6 , ( R3 # R6 ) , ( R2 # R5 ) are_Ort_wrt R8 , R10 by L306 , L151;
L308: R2 , R5 , ( R2 # R5 ) , ( R3 # R6 ) are_Ort_wrt R8 , R10 by L303 , L195;
L309: R2 , R5 , ( R3 # R6 ) , ( R2 # R5 ) are_Ort_wrt R8 , R10 by L308 , L151;
thus L310: thesis by L309 , L305 , L307 , L195;
end;
theorem
L311: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (R2 , R5 , R3 , R6 are_DTr_wrt R8 , R10 implies R5 , R2 , R6 , R3 are_DTr_wrt R8 , R10))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L312: R2 , R5 , R3 , R6 are_DTr_wrt R8 , R10;
L313: R2 , R5 // R3 , R6 by L312 , L195;
L314: R5 , R2 // R6 , R3 by L313 , ANALOAF:12;
L315:
now
let C14 , C15 , C16 , C17 being (VECTOR of R1);
assume L316: C14 , C15 , C16 , C17 are_Ort_wrt R8 , R10;
L317: C16 , C17 , C14 , C15 are_Ort_wrt R8 , R10 by L316 , L157;
L318: C16 , C17 , C15 , C14 are_Ort_wrt R8 , R10 by L317 , L151;
thus L319: C15 , C14 , C16 , C17 are_Ort_wrt R8 , R10 by L318 , L157;
end;
L320: R3 , R6 , ( R2 # R5 ) , ( R3 # R6 ) are_Ort_wrt R8 , R10 by L312 , L195;
L321: R6 , R3 , ( R5 # R2 ) , ( R6 # R3 ) are_Ort_wrt R8 , R10 by L320 , L315;
L322: R2 , R5 , ( R2 # R5 ) , ( R3 # R6 ) are_Ort_wrt R8 , R10 by L312 , L195;
L323: R5 , R2 , ( R5 # R2 ) , ( R6 # R3 ) are_Ort_wrt R8 , R10 by L322 , L315;
thus L324: thesis by L323 , L314 , L321 , L195;
end;
L325: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R4 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for R7 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (( Gen R8 , R10 & R2 <> R5 & R2 , R5 '||' R2 , R3 & R2 , R5 '||' R2 , R6 & R2 , R5 '||' R2 , R4 & R2 , R5 '||' R2 , R7) implies R3 , R6 '||' R4 , R7))))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R4 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
let R7 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume that
L326:  Gen R8 , R10
and
L327: R2 <> R5
and
L328: R2 , R5 '||' R2 , R3
and
L329: R2 , R5 '||' R2 , R6
and
L330: R2 , R5 '||' R2 , R4
and
L331: R2 , R5 '||' R2 , R7;
reconsider D50 = R2 , D51 = R5 , D52 = R3 , D53 = R6 , D54 = R4 , D55 = R7 as (Element of ( Lambda ( OASpace R1 ) )) by ANALMETR:16;
reconsider D56 = ( OASpace R1 ) as OAffinSpace by L326 , L3;
reconsider D57 = ( Lambda D56 ) as AffinSpace by DIRAF:41;
reconsider D58 = D50 , D59 = D51 , D60 = D52 , D61 = D53 , D62 = D54 , D63 = D55 as (Element of (the carrier of D57));
L332: D58 , D59 // D58 , D60 by L326 , L328 , L19;
L333:  LIN D58 , D59 , D60 by L332 , AFF_1:def 1;
L334: D58 , D59 // D58 , D61 by L326 , L329 , L19;
L335:  LIN D58 , D59 , D61 by L334 , AFF_1:def 1;
L336: D58 , D59 // D58 , D63 by L326 , L331 , L19;
L337:  LIN D58 , D59 , D63 by L336 , AFF_1:def 1;
L338:  LIN D60 , D61 , D63 by L337 , L327 , L333 , L335 , AFF_1:8;
L339: D58 , D59 // D58 , D62 by L326 , L330 , L19;
L340:  LIN D58 , D59 , D62 by L339 , AFF_1:def 1;
L341:  LIN D60 , D61 , D62 by L340 , L327 , L333 , L335 , AFF_1:8;
L342: D60 , D61 // D62 , D63 by L341 , L338 , AFF_1:10;
thus L343: thesis by L342 , L326 , L19;
end;
theorem
L344: (for R1 being RealLinearSpace holds (for R3 being (VECTOR of R1) holds (for R4 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (( Gen R8 , R10 & R5 , R3 , R5 , R4 are_DTr_wrt R8 , R10) implies R3 = R4)))))))
proof
let R1 being RealLinearSpace;
let R3 being (VECTOR of R1);
let R4 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume that
L345:  Gen R8 , R10
and
L346: R5 , R3 , R5 , R4 are_DTr_wrt R8 , R10;
L347: R5 , R3 , ( R5 # R3 ) , ( R5 # R4 ) are_Ort_wrt R8 , R10 by L346 , L195;
L348: R5 , R4 , ( R5 # R3 ) , ( R5 # R4 ) are_Ort_wrt R8 , R10 by L346 , L195;
L349: R5 , R3 // R5 , R3 by ANALOAF:8;
L350: R5 , R3 '||' R5 , R3 by L349 , L1;
set D64 = ( R5 # R3 );
set D65 = ( R5 # R4 );
L351: R5 , R3 // R5 , D64 by L89;
L352: R5 , R3 '||' R5 , D64 by L351 , L1;
L353: R5 , R3 // R5 , R4 by L346 , L195;
L354: R5 , R4 // R5 , D64
proof
per cases ;
suppose L355: R5 = D64;

thus L356: thesis by L355 , ANALOAF:9;
end;
suppose L357: R5 <> D64;

L358: R5 <> R3 by L357;
thus L359: thesis by L358 , L353 , L351 , ANALOAF:11;
end;
end;
L361: R5 , R4 '||' R5 , D64 by L354 , L1;
L362: R5 , R4 // R5 , R5 by ANALOAF:9;
L363: R5 , R4 '||' R5 , R5 by L362 , L1;
L364: R5 , R4 // R5 , D65 by L89;
L365: R5 , R4 '||' R5 , D65 by L364 , L1;
L366: R5 , R4 // R5 , R3 by L353 , ANALOAF:12;
L367: R5 , R3 // R5 , D65
proof
per cases ;
suppose L368: R5 = D65;

thus L369: thesis by L368 , ANALOAF:9;
end;
suppose L370: R5 <> D65;

L371: R5 <> R4 by L370;
thus L372: thesis by L371 , L366 , L364 , ANALOAF:11;
end;
end;
L374: R5 , R3 '||' R5 , D65 by L367 , L1;
L375: R5 , R4 // R5 , R4 by ANALOAF:8;
L376: R5 , R4 '||' R5 , R4 by L375 , L1;
L377: R5 , R3 // R5 , R5 by ANALOAF:9;
L378: R5 , R3 '||' R5 , R5 by L377 , L1;
assume L379: R3 <> R4;
per cases  by L379;
suppose L380: R5 <> R3;

L381: R5 , R3 '||' D64 , D65 by L380 , L345 , L352 , L350 , L378 , L374 , L325;
L382: D64 , D65 , D64 , D65 are_Ort_wrt R8 , R10 by L381 , L345 , L347 , L380 , L186;
thus L383: thesis by L382 , L345 , L379 , L174 , L69;
end;
suppose L384: R5 <> R4;

L385: R5 , R4 '||' D64 , D65 by L384 , L345 , L365 , L376 , L363 , L361 , L325;
L386: D64 , D65 , D64 , D65 are_Ort_wrt R8 , R10 by L385 , L345 , L348 , L384 , L186;
thus L387: thesis by L386 , L345 , L379 , L174 , L69;
end;
end;
theorem
L389: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for R7 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (( Gen R8 , R10 & R2 , R5 , R3 , R6 are_DTr_wrt R8 , R10 & R2 , R5 , R3 , R7 are_DTr_wrt R8 , R10) implies (R2 = R5 or R6 = R7))))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
let R7 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume that
L390:  Gen R8 , R10
and
L391: (R2 , R5 , R3 , R6 are_DTr_wrt R8 , R10 & R2 , R5 , R3 , R7 are_DTr_wrt R8 , R10);
assume L392: R2 <> R5;
L393: R3 , R6 , R3 , R7 are_DTr_wrt R8 , R10 by L392 , L390 , L391 , L249;
thus L394: thesis by L393 , L390 , L344;
end;
theorem
L395: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for R7 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (( Gen R8 , R10 & R2 <> R3 & R2 , R3 , R5 , R6 are_DTr_wrt R8 , R10 & (R2 , R3 , R5 , R7 are_DTr_wrt R8 , R10 or R2 , R3 , R7 , R5 are_DTr_wrt R8 , R10)) implies R6 = R7)))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
let R7 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume that
L396:  Gen R8 , R10
and
L397: (R2 <> R3 & R2 , R3 , R5 , R6 are_DTr_wrt R8 , R10)
and
L398: (R2 , R3 , R5 , R7 are_DTr_wrt R8 , R10 or R2 , R3 , R7 , R5 are_DTr_wrt R8 , R10);
L399:
now
assume L400: R2 , R3 , R7 , R5 are_DTr_wrt R8 , R10;
L401: R7 , R5 , R5 , R6 are_DTr_wrt R8 , R10 by L400 , L396 , L397 , L249;
L402: R5 = R7 by L401 , L396 , L210;
thus L403: thesis by L402 , L396 , L401 , L210;
end;
thus L404: thesis by L399 , L396 , L397 , L398 , L389;
end;
theorem
L405: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (( Gen R8 , R10 & R2 , R5 , R3 , R6 are_DTr_wrt R8 , R10) implies R2 , R5 , ( R2 # R3 ) , ( R5 # R6 ) are_DTr_wrt R8 , R10))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume that
L406:  Gen R8 , R10
and
L407: R2 , R5 , R3 , R6 are_DTr_wrt R8 , R10;
set D66 = ( R2 # R3 );
set D67 = ( R5 # R6 );
set D68 = ( R2 # R5 );
set D69 = ( R3 # R6 );
L408: ((R2 = R5 & R3 = R6) implies D66 , D67 , D68 , ( D66 # D67 ) are_Ort_wrt R8 , R10) by L406 , L180;
L409: ( D66 # D67 ) = ( D68 # D69 ) by L61;
L410: D68 , D69 // D68 , ( D66 # D67 ) by L409 , L89;
L411: D68 , D69 '||' D68 , ( D66 # D67 ) by L410 , L1;
L412: (R2 , R5 , D68 , D69 are_Ort_wrt R8 , R10 & R3 , R6 , D68 , D69 are_Ort_wrt R8 , R10) by L407 , L195;
L413: (D68 <> D69 implies (R3 , R6 , D68 , ( D66 # D67 ) are_Ort_wrt R8 , R10 & R2 , R5 , D68 , ( D66 # D67 ) are_Ort_wrt R8 , R10)) by L412 , L406 , L411 , L186;
L414:
now
assume L415: D68 = D69;
L416: D68 = ( D68 # D69 ) by L415
.= ( D66 # D67 ) by L61;
thus L417: (R3 , R6 , D68 , ( D66 # D67 ) are_Ort_wrt R8 , R10 & R2 , R5 , D68 , ( D66 # D67 ) are_Ort_wrt R8 , R10) by L416 , L406 , L180;
end;
L418: R2 , R5 // R3 , R6 by L407 , L195;
L419: R3 , R6 // R2 , R5 by L418 , ANALOAF:12;
L420: R3 , R6 // ( R3 # R2 ) , ( R6 # R5 ) by L419 , L115;
L421: R3 , R6 '||' D66 , D67 by L420 , L1;
L422: ((R2 = R5 & R3 <> R6) implies D66 , D67 , D68 , ( D66 # D67 ) are_Ort_wrt R8 , R10) by L421 , L406 , L414 , L413 , L186;
L423: R2 , R5 // ( R2 # R3 ) , ( R5 # R6 ) by L418 , L115;
L424: R2 , R5 '||' D66 , D67 by L423 , L1;
L425: (R2 <> R5 implies D66 , D67 , D68 , ( D66 # D67 ) are_Ort_wrt R8 , R10) by L424 , L406 , L414 , L413 , L186;
thus L426: thesis by L425 , L423 , L414 , L413 , L422 , L408 , L195;
end;
theorem
L427: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (( Gen R8 , R10 & R2 , R5 , R3 , R6 are_DTr_wrt R8 , R10) implies (R2 , R5 , ( R2 # R6 ) , ( R5 # R3 ) are_DTr_wrt R8 , R10 or R2 , R5 , ( R5 # R3 ) , ( R2 # R6 ) are_DTr_wrt R8 , R10)))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume that
L428:  Gen R8 , R10
and
L429: R2 , R5 , R3 , R6 are_DTr_wrt R8 , R10;
set D70 = ( R2 # R6 );
set D71 = ( R5 # R3 );
set D72 = ( R2 # R5 );
set D73 = ( R3 # R6 );
L430: R2 , R5 , D72 , D73 are_Ort_wrt R8 , R10 by L429 , L195;
L431: ( D70 # D71 ) = ( D72 # D73 ) by L61;
L432: D72 , D73 // D72 , ( D70 # D71 ) by L431 , L89;
L433: D72 , D73 '||' D72 , ( D70 # D71 ) by L432 , L1;
L434: R2 , R5 // R3 , R6 by L429 , L195;
L435: R2 , R5 '||' D70 , D71 by L434 , L126;
L436: (R2 , R5 // D70 , D71 or R2 , R5 // D71 , D70) by L435 , L1;
per cases ;
suppose L437: R2 = R5;

thus L438: thesis by L437 , L428 , L429 , L405;
end;
suppose that L439: R2 <> R5;
per cases ;
suppose L440: D72 = D73;

L441: D71 , D70 , D72 , ( D71 # D70 ) are_Ort_wrt R8 , R10 by L440 , L428 , L431 , L180;
L442: (R2 , R5 , D72 , ( D70 # D71 ) are_Ort_wrt R8 , R10 & D70 , D71 , D72 , ( D70 # D71 ) are_Ort_wrt R8 , R10) by L428 , L431 , L440 , L180;
thus L443: thesis by L442 , L436 , L441 , L195;
end;
suppose L444: D72 <> D73;

L445: R2 , R5 , D72 , ( D70 # D71 ) are_Ort_wrt R8 , R10 by L444 , L428 , L430 , L433 , L186;
L446: D72 , ( D70 # D71 ) , D70 , D71 are_Ort_wrt R8 , R10 by L445 , L428 , L435 , L439 , L186;
L447: D72 , ( D70 # D71 ) , D71 , D70 are_Ort_wrt R8 , R10 by L446 , L151;
L448: D71 , D70 , D72 , ( D71 # D70 ) are_Ort_wrt R8 , R10 by L447 , L157;
L449: D70 , D71 , D72 , ( D70 # D71 ) are_Ort_wrt R8 , R10 by L428 , L435 , L439 , L445 , L186;
thus L450: thesis by L449 , L436 , L445 , L448 , L195;
end;
end;
end;
theorem
L453: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for B14 , B15 , B16 , B17 , B18 , B19 , B20 , B21 , B22 being (VECTOR of R1) holds ((B14 = ( B15 # B19 ) & B14 = ( B16 # B20 ) & B14 = ( B17 # B21 ) & B14 = ( B18 # B22 ) & B15 , B16 , B17 , B18 are_DTr_wrt R8 , R10) implies B19 , B20 , B21 , B22 are_DTr_wrt R8 , R10)))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let C18 , C19 , C20 , C21 , C22 , C23 , C24 , C25 , C26 being (VECTOR of R1);
assume that
L454: (C18 = ( C19 # C23 ) & C18 = ( C20 # C24 ))
and
L455: (C18 = ( C21 # C25 ) & C18 = ( C22 # C26 ))
and
L456: C19 , C20 , C21 , C22 are_DTr_wrt R8 , R10;
L457: C19 , C20 // C21 , C22 by L456 , L195;
set D74 = ( C19 # C20 );
set D75 = ( C21 # C22 );
set D76 = ( C23 # C24 );
set D77 = ( C25 # C26 );
L458: ( D75 # D77 ) = ( C18 # C18 ) by L455 , L61
.= C18;
L459: ( D74 # D76 ) = ( C18 # C18 ) by L454 , L61
.= C18;
L460: ( D77 - D76 ) = ( - ( D75 - D74 ) ) by L459 , L458 , L144
.= ( ( - 1 ) * ( D75 - D74 ) ) by RLVECT_1:16;
L461: (( C20 - C19 ) = ( - ( C24 - C23 ) ) & ( C22 - C21 ) = ( - ( C26 - C25 ) )) by L454 , L455 , L144;
L462: C23 , C24 // C25 , C26
proof
per cases ;
suppose L463: C19 = C20;

L464: C23 = C24 by L463 , L454 , L69;
thus L465: thesis by L464 , ANALOAF:9;
end;
suppose L466: C21 = C22;

L467: C25 = C26 by L466 , L455 , L69;
thus L468: thesis by L467 , ANALOAF:9;
end;
suppose L469: (C19 <> C20 & C21 <> C22);

consider R11 being Real, R14 being Real such that L470: (( 0 ) < R11 & ( 0 ) < R14) and L471: ( R11 * ( C20 - C19 ) ) = ( R14 * ( C22 - C21 ) ) by L469 , L457 , ANALOAF:def 1;
L472: ( R11 * ( C24 - C23 ) ) = ( R11 * ( - ( - ( C24 - C23 ) ) ) ) by RLVECT_1:17
.= ( - ( R14 * ( - ( C26 - C25 ) ) ) ) by L461 , L471 , RLVECT_1:25
.= ( R14 * ( - ( - ( C26 - C25 ) ) ) ) by RLVECT_1:25
.= ( R14 * ( C26 - C25 ) ) by RLVECT_1:17;
thus L473: thesis by L472 , L470 , ANALOAF:def 1;
end;
end;
L475: ( C26 - C25 ) = ( - ( C22 - C21 ) ) by L455 , L144;
L476: ( C26 - C25 ) = ( ( - 1 ) * ( C22 - C21 ) ) by L475 , RLVECT_1:16;
L477: C21 , C22 , D74 , D75 are_Ort_wrt R8 , R10 by L456 , L195;
L478: ( C22 - C21 ) , ( D75 - D74 ) are_Ort_wrt R8 , R10 by L477 , ANALMETR:def 3;
L479: ( C26 - C25 ) , ( D77 - D76 ) are_Ort_wrt R8 , R10 by L478 , L460 , L476 , ANALMETR:6;
L480: C25 , C26 , D76 , D77 are_Ort_wrt R8 , R10 by L479 , ANALMETR:def 3;
L481: ( C24 - C23 ) = ( - ( C20 - C19 ) ) by L454 , L144;
L482: ( C24 - C23 ) = ( ( - 1 ) * ( C20 - C19 ) ) by L481 , RLVECT_1:16;
L483: C19 , C20 , D74 , D75 are_Ort_wrt R8 , R10 by L456 , L195;
L484: ( C20 - C19 ) , ( D75 - D74 ) are_Ort_wrt R8 , R10 by L483 , ANALMETR:def 3;
L485: ( C24 - C23 ) , ( D77 - D76 ) are_Ort_wrt R8 , R10 by L484 , L460 , L482 , ANALMETR:6;
L486: C23 , C24 , D76 , D77 are_Ort_wrt R8 , R10 by L485 , ANALMETR:def 3;
thus L487: thesis by L486 , L462 , L480 , L195;
end;
L488: (for R1 being RealLinearSpace holds (for R6 being (VECTOR of R1) holds (for R7 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R15 being Real holds (for R16 being Real holds (for R17 being Real holds (for R18 being Real holds ((R6 = ( ( R15 * R8 ) + ( R16 * R10 ) ) & R7 = ( ( R17 * R8 ) + ( R18 * R10 ) )) implies (( R6 + R7 ) = ( ( ( R15 + R17 ) * R8 ) + ( ( R16 + R18 ) * R10 ) ) & ( R6 - R7 ) = ( ( ( R15 - R17 ) * R8 ) + ( ( R16 - R18 ) * R10 ) ))))))))))))
proof
let R1 being RealLinearSpace;
let R6 being (VECTOR of R1);
let R7 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R15 being Real;
let R16 being Real;
let R17 being Real;
let R18 being Real;
assume L489: (R6 = ( ( R15 * R8 ) + ( R16 * R10 ) ) & R7 = ( ( R17 * R8 ) + ( R18 * R10 ) ));
thus L490: ( R6 + R7 ) = ( ( ( ( R15 * R8 ) + ( R16 * R10 ) ) + ( R17 * R8 ) ) + ( R18 * R10 ) ) by L489 , RLVECT_1:def 3
.= ( ( ( ( R15 * R8 ) + ( R17 * R8 ) ) + ( R16 * R10 ) ) + ( R18 * R10 ) ) by RLVECT_1:def 3
.= ( ( ( ( R15 + R17 ) * R8 ) + ( R16 * R10 ) ) + ( R18 * R10 ) ) by RLVECT_1:def 6
.= ( ( ( R15 + R17 ) * R8 ) + ( ( R16 * R10 ) + ( R18 * R10 ) ) ) by RLVECT_1:def 3
.= ( ( ( R15 + R17 ) * R8 ) + ( ( R16 + R18 ) * R10 ) ) by RLVECT_1:def 6;
thus L491: ( R6 - R7 ) = ( ( ( R15 * R8 ) + ( R16 * R10 ) ) + ( ( - ( R17 * R8 ) ) + ( - ( R18 * R10 ) ) ) ) by L489 , RLVECT_1:31
.= ( ( ( R15 * R8 ) + ( R16 * R10 ) ) + ( ( R17 * ( - R8 ) ) + ( - ( R18 * R10 ) ) ) ) by RLVECT_1:25
.= ( ( ( R15 * R8 ) + ( R16 * R10 ) ) + ( ( R17 * ( - R8 ) ) + ( R18 * ( - R10 ) ) ) ) by RLVECT_1:25
.= ( ( ( R15 * R8 ) + ( R16 * R10 ) ) + ( ( ( - R17 ) * R8 ) + ( R18 * ( - R10 ) ) ) ) by RLVECT_1:24
.= ( ( ( R15 * R8 ) + ( R16 * R10 ) ) + ( ( ( - R17 ) * R8 ) + ( ( - R18 ) * R10 ) ) ) by RLVECT_1:24
.= ( ( ( ( R15 * R8 ) + ( R16 * R10 ) ) + ( ( - R17 ) * R8 ) ) + ( ( - R18 ) * R10 ) ) by RLVECT_1:def 3
.= ( ( ( ( R15 * R8 ) + ( ( - R17 ) * R8 ) ) + ( R16 * R10 ) ) + ( ( - R18 ) * R10 ) ) by RLVECT_1:def 3
.= ( ( ( ( R15 + ( - R17 ) ) * R8 ) + ( R16 * R10 ) ) + ( ( - R18 ) * R10 ) ) by RLVECT_1:def 6
.= ( ( ( R15 + ( - R17 ) ) * R8 ) + ( ( R16 * R10 ) + ( ( - R18 ) * R10 ) ) ) by RLVECT_1:def 3
.= ( ( ( R15 - R17 ) * R8 ) + ( ( R16 + ( - R18 ) ) * R10 ) ) by RLVECT_1:def 6
.= ( ( ( R15 - R17 ) * R8 ) + ( ( R16 - R18 ) * R10 ) );
end;
L492: (for R1 being RealLinearSpace holds (for R5 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R11 being Real holds (for R15 being Real holds (for R16 being Real holds (R5 = ( ( R15 * R8 ) + ( R16 * R10 ) ) implies ( R11 * R5 ) = ( ( ( R11 * R15 ) * R8 ) + ( ( R11 * R16 ) * R10 ) )))))))))
proof
let R1 being RealLinearSpace;
let R5 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R11 being Real;
let R15 being Real;
let R16 being Real;
assume L493: R5 = ( ( R15 * R8 ) + ( R16 * R10 ) );
thus L494: ( R11 * R5 ) = ( ( R11 * ( R15 * R8 ) ) + ( R11 * ( R16 * R10 ) ) ) by L493 , RLVECT_1:def 5
.= ( ( ( R11 * R15 ) * R8 ) + ( R11 * ( R16 * R10 ) ) ) by RLVECT_1:def 7
.= ( ( ( R11 * R15 ) * R8 ) + ( ( R11 * R16 ) * R10 ) ) by RLVECT_1:def 7;
end;
L495: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R12 being Real holds (for R13 being Real holds (for R15 being Real holds (for R16 being Real holds (( Gen R8 , R10 & ( ( R12 * R8 ) + ( R13 * R10 ) ) = ( ( R15 * R8 ) + ( R16 * R10 ) )) implies (R12 = R15 & R13 = R16)))))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R12 being Real;
let R13 being Real;
let R15 being Real;
let R16 being Real;
assume that
L496:  Gen R8 , R10
and
L497: ( ( R12 * R8 ) + ( R13 * R10 ) ) = ( ( R15 * R8 ) + ( R16 * R10 ) );
L498: ( 0. R1 ) = ( ( ( R12 * R8 ) + ( R13 * R10 ) ) - ( ( R15 * R8 ) + ( R16 * R10 ) ) ) by L497 , RLVECT_1:15
.= ( ( ( R12 - R15 ) * R8 ) + ( ( R13 - R16 ) * R10 ) ) by L488;
L499: (( ( - R15 ) + R12 ) = ( 0 ) & ( ( - R16 ) + R13 ) = ( 0 )) by L498 , L496 , ANALMETR:def 1;
thus L500: thesis by L499;
end;
definition
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R2 being (VECTOR of R1);
assume that
L501:  Gen R8 , R10;
func pr1 (R8 , R10 , R2) -> Real means 
:L502: (ex R14 being Real st R2 = ( ( it * R8 ) + ( R14 * R10 ) ));
existence by L501 , ANALMETR:def 1;
uniqueness by L501 , L495;
end;
definition
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R2 being (VECTOR of R1);
assume that
L504:  Gen R8 , R10;
func pr2 (R8 , R10 , R2) -> Real means 
:L505: (ex R11 being Real st R2 = ( ( R11 * R8 ) + ( it * R10 ) ));
existence
proof
consider R11 being Real, R14 being Real such that L506: R2 = ( ( R11 * R8 ) + ( R14 * R10 ) ) by L504 , ANALMETR:def 1;
take R14;
thus L507: thesis by L506;
end;
uniqueness by L504 , L495;
end;
L509: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies R2 = ( ( ( pr1 (R8 , R10 , R2) ) * R8 ) + ( ( pr2 (R8 , R10 , R2) ) * R10 ) ))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L510:  Gen R8 , R10;
L511: (ex R14 being Real st R2 = ( ( ( pr1 (R8 , R10 , R2) ) * R8 ) + ( R14 * R10 ) )) by L510 , L502;
thus L512: thesis by L511 , L510 , L505;
end;
L513: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R11 being Real holds (for R14 being Real holds (( Gen R8 , R10 & R2 = ( ( R11 * R8 ) + ( R14 * R10 ) )) implies (R11 = ( pr1 (R8 , R10 , R2) ) & R14 = ( pr2 (R8 , R10 , R2) )))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R11 being Real;
let R14 being Real;
assume that
L514:  Gen R8 , R10
and
L515: R2 = ( ( R11 * R8 ) + ( R14 * R10 ) );
L516: R2 = ( ( ( pr1 (R8 , R10 , R2) ) * R8 ) + ( ( pr2 (R8 , R10 , R2) ) * R10 ) ) by L514 , L509;
thus L517: thesis by L516 , L514 , L515 , L495;
end;
L518: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R11 being Real holds ( Gen R8 , R10 implies (( pr1 (R8 , R10 , ( R2 + R5 )) ) = ( ( pr1 (R8 , R10 , R2) ) + ( pr1 (R8 , R10 , R5) ) ) & ( pr2 (R8 , R10 , ( R2 + R5 )) ) = ( ( pr2 (R8 , R10 , R2) ) + ( pr2 (R8 , R10 , R5) ) ) & ( pr1 (R8 , R10 , ( R2 - R5 )) ) = ( ( pr1 (R8 , R10 , R2) ) - ( pr1 (R8 , R10 , R5) ) ) & ( pr2 (R8 , R10 , ( R2 - R5 )) ) = ( ( pr2 (R8 , R10 , R2) ) - ( pr2 (R8 , R10 , R5) ) ) & ( pr1 (R8 , R10 , ( R11 * R2 )) ) = ( R11 * ( pr1 (R8 , R10 , R2) ) ) & ( pr2 (R8 , R10 , ( R11 * R2 )) ) = ( R11 * ( pr2 (R8 , R10 , R2) ) )))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R11 being Real;
set D78 = ( pr1 (R8 , R10 , R2) );
set D79 = ( pr2 (R8 , R10 , R2) );
set D80 = ( pr1 (R8 , R10 , R5) );
set D81 = ( pr2 (R8 , R10 , R5) );
assume L519:  Gen R8 , R10;
L520: R2 = ( ( D78 * R8 ) + ( D79 * R10 ) ) by L519 , L509;
L521: R5 = ( ( D80 * R8 ) + ( D81 * R10 ) ) by L519 , L509;
L522: ( R2 + R5 ) = ( ( ( ( D78 * R8 ) + ( D79 * R10 ) ) + ( D80 * R8 ) ) + ( D81 * R10 ) ) by L521 , L520 , RLVECT_1:def 3
.= ( ( ( ( D78 * R8 ) + ( D80 * R8 ) ) + ( D79 * R10 ) ) + ( D81 * R10 ) ) by RLVECT_1:def 3
.= ( ( ( D78 * R8 ) + ( D80 * R8 ) ) + ( ( D79 * R10 ) + ( D81 * R10 ) ) ) by RLVECT_1:def 3
.= ( ( ( D78 + D80 ) * R8 ) + ( ( D79 * R10 ) + ( D81 * R10 ) ) ) by RLVECT_1:def 6
.= ( ( ( D78 + D80 ) * R8 ) + ( ( D79 + D81 ) * R10 ) ) by RLVECT_1:def 6;
thus L523: (( pr1 (R8 , R10 , ( R2 + R5 )) ) = ( D78 + D80 ) & ( pr2 (R8 , R10 , ( R2 + R5 )) ) = ( D79 + D81 )) by L522 , L519 , L513;
L524: ( R2 - R5 ) = ( ( ( D78 - D80 ) * R8 ) + ( ( D79 - D81 ) * R10 ) ) by L520 , L521 , L488;
thus L525: (( pr1 (R8 , R10 , ( R2 - R5 )) ) = ( D78 - D80 ) & ( pr2 (R8 , R10 , ( R2 - R5 )) ) = ( D79 - D81 )) by L524 , L519 , L513;
L526: ( R11 * R2 ) = ( ( ( R11 * D78 ) * R8 ) + ( ( R11 * D79 ) * R10 ) ) by L520 , L492;
thus L527: thesis by L526 , L519 , L513;
end;
L528: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies (( 2 * ( pr1 (R8 , R10 , ( R2 # R5 )) ) ) = ( ( pr1 (R8 , R10 , R2) ) + ( pr1 (R8 , R10 , R5) ) ) & ( 2 * ( pr2 (R8 , R10 , ( R2 # R5 )) ) ) = ( ( pr2 (R8 , R10 , R2) ) + ( pr2 (R8 , R10 , R5) ) ))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L529:  Gen R8 , R10;
set D82 = ( R2 # R5 );
L530: ( 2 * ( R2 # R5 ) ) = ( ( 1 + 1 ) * D82 )
.= ( ( 1 * D82 ) + ( 1 * D82 ) ) by RLVECT_1:def 6
.= ( D82 + ( 1 * D82 ) ) by RLVECT_1:def 8
.= ( D82 + D82 ) by RLVECT_1:def 8
.= ( R2 + R5 ) by L49;
L531: (( 2 * ( pr1 (R8 , R10 , ( R2 # R5 )) ) ) = ( pr1 (R8 , R10 , ( R2 + R5 )) ) & ( 2 * ( pr2 (R8 , R10 , ( R2 # R5 )) ) ) = ( pr2 (R8 , R10 , ( R2 + R5 )) )) by L530 , L529 , L518;
thus L532: thesis by L531 , L529 , L518;
end;
L533: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds ( ( - R2 ) + ( - R5 ) ) = ( - ( R2 + R5 ) ))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R5 being (VECTOR of R1);
L534: ( ( R2 + R5 ) + ( ( - R2 ) + ( - R5 ) ) ) = ( ( ( R2 + R5 ) + ( - R2 ) ) + ( - R5 ) ) by RLVECT_1:def 3
.= ( ( R5 + ( R2 + ( - R2 ) ) ) + ( - R5 ) ) by RLVECT_1:def 3
.= ( ( R5 + ( 0. R1 ) ) + ( - R5 ) ) by RLVECT_1:5
.= ( R5 + ( - R5 ) ) by RLVECT_1:4
.= ( 0. R1 ) by RLVECT_1:5;
thus L535: thesis by L534 , RLVECT_1:def 10;
end;
L536: (for R1 being RealLinearSpace holds (for R3 being (VECTOR of R1) holds (for R4 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R12 being Real holds (for R13 being Real holds ( ( R4 + ( R13 * R5 ) ) - ( R3 + ( R12 * R5 ) ) ) = ( ( R4 - R3 ) + ( ( R13 - R12 ) * R5 ) )))))))
proof
let R1 being RealLinearSpace;
let R3 being (VECTOR of R1);
let R4 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R12 being Real;
let R13 being Real;
thus L537: ( ( R4 + ( R13 * R5 ) ) - ( R3 + ( R12 * R5 ) ) ) = ( ( ( R4 + ( R13 * R5 ) ) - R3 ) - ( R12 * R5 ) ) by RLVECT_1:27
.= ( ( ( R13 * R5 ) + ( R4 - R3 ) ) - ( R12 * R5 ) ) by RLVECT_1:def 3
.= ( ( R4 - R3 ) + ( ( R13 * R5 ) - ( R12 * R5 ) ) ) by RLVECT_1:def 3
.= ( ( R4 - R3 ) + ( ( R13 - R12 ) * R5 ) ) by RLVECT_1:35;
end;
definition
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R2 being (VECTOR of R1);
let R5 being (VECTOR of R1);
func PProJ (R8 , R10 , R2 , R5) -> Real equals 
( ( ( pr1 (R8 , R10 , R2) ) * ( pr1 (R8 , R10 , R5) ) ) + ( ( pr2 (R8 , R10 , R2) ) * ( pr2 (R8 , R10 , R5) ) ) );
correctness;
end;
theorem
L539: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds ( PProJ (R8 , R10 , R2 , R5) ) = ( PProJ (R8 , R10 , R5 , R2) ))))));
theorem
L540: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (( PProJ (R8 , R10 , R2 , ( R5 + R6 )) ) = ( ( PProJ (R8 , R10 , R2 , R5) ) + ( PProJ (R8 , R10 , R2 , R6) ) ) & ( PProJ (R8 , R10 , R2 , ( R5 - R6 )) ) = ( ( PProJ (R8 , R10 , R2 , R5) ) - ( PProJ (R8 , R10 , R2 , R6) ) ) & ( PProJ (R8 , R10 , ( R5 - R6 ) , R2) ) = ( ( PProJ (R8 , R10 , R5 , R2) ) - ( PProJ (R8 , R10 , R6 , R2) ) ) & ( PProJ (R8 , R10 , ( R5 + R6 ) , R2) ) = ( ( PProJ (R8 , R10 , R5 , R2) ) + ( PProJ (R8 , R10 , R6 , R2) ) )))))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L541:  Gen R8 , R10;
let C27 , C28 , C29 being (VECTOR of R1);
L542:
now
let C30 , C31 , C32 being (VECTOR of R1);
L543: ( PProJ (R8 , R10 , C30 , ( C31 - C32 )) ) = ( ( ( pr1 (R8 , R10 , C30) ) * ( ( pr1 (R8 , R10 , C31) ) - ( pr1 (R8 , R10 , C32) ) ) ) + ( ( pr2 (R8 , R10 , C30) ) * ( pr2 (R8 , R10 , ( C31 - C32 )) ) ) ) by L541 , L518
.= ( ( ( pr1 (R8 , R10 , C30) ) * ( ( pr1 (R8 , R10 , C31) ) - ( pr1 (R8 , R10 , C32) ) ) ) + ( ( pr2 (R8 , R10 , C30) ) * ( ( pr2 (R8 , R10 , C31) ) - ( pr2 (R8 , R10 , C32) ) ) ) ) by L541 , L518
.= ( ( PProJ (R8 , R10 , C30 , C31) ) - ( PProJ (R8 , R10 , C30 , C32) ) );
L544: ( PProJ (R8 , R10 , C30 , ( C31 + C32 )) ) = ( ( ( pr1 (R8 , R10 , C30) ) * ( ( pr1 (R8 , R10 , C31) ) + ( pr1 (R8 , R10 , C32) ) ) ) + ( ( pr2 (R8 , R10 , C30) ) * ( pr2 (R8 , R10 , ( C31 + C32 )) ) ) ) by L541 , L518
.= ( ( ( pr1 (R8 , R10 , C30) ) * ( ( pr1 (R8 , R10 , C31) ) + ( pr1 (R8 , R10 , C32) ) ) ) + ( ( pr2 (R8 , R10 , C30) ) * ( ( pr2 (R8 , R10 , C31) ) + ( pr2 (R8 , R10 , C32) ) ) ) ) by L541 , L518
.= ( ( PProJ (R8 , R10 , C30 , C31) ) + ( PProJ (R8 , R10 , C30 , C32) ) );
thus L545: (( PProJ (R8 , R10 , C30 , ( C31 + C32 )) ) = ( ( PProJ (R8 , R10 , C30 , C31) ) + ( PProJ (R8 , R10 , C30 , C32) ) ) & ( PProJ (R8 , R10 , C30 , ( C31 - C32 )) ) = ( ( PProJ (R8 , R10 , C30 , C31) ) - ( PProJ (R8 , R10 , C30 , C32) ) )) by L544 , L543;
end;
thus L546: (( PProJ (R8 , R10 , C27 , ( C28 + C29 )) ) = ( ( PProJ (R8 , R10 , C27 , C28) ) + ( PProJ (R8 , R10 , C27 , C29) ) ) & ( PProJ (R8 , R10 , C27 , ( C28 - C29 )) ) = ( ( PProJ (R8 , R10 , C27 , C28) ) - ( PProJ (R8 , R10 , C27 , C29) ) )) by L542;
thus L547: ( PProJ (R8 , R10 , ( C28 - C29 ) , C27) ) = ( PProJ (R8 , R10 , C27 , ( C28 - C29 )) )
.= ( ( PProJ (R8 , R10 , C27 , C28) ) - ( PProJ (R8 , R10 , C27 , C29) ) ) by L542
.= ( ( PProJ (R8 , R10 , C28 , C27) ) - ( PProJ (R8 , R10 , C29 , C27) ) );
thus L548: ( PProJ (R8 , R10 , ( C28 + C29 ) , C27) ) = ( PProJ (R8 , R10 , C27 , ( C28 + C29 )) )
.= ( ( PProJ (R8 , R10 , C27 , C28) ) + ( PProJ (R8 , R10 , C27 , C29) ) ) by L542
.= ( ( PProJ (R8 , R10 , C28 , C27) ) + ( PProJ (R8 , R10 , C29 , C27) ) );
end;
theorem
L549: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies (for B23 , B24 being (VECTOR of R1) holds (for B25 being Real holds (( PProJ (R8 , R10 , ( B25 * B23 ) , B24) ) = ( B25 * ( PProJ (R8 , R10 , B23 , B24) ) ) & ( PProJ (R8 , R10 , B23 , ( B25 * B24 )) ) = ( B25 * ( PProJ (R8 , R10 , B23 , B24) ) ) & ( PProJ (R8 , R10 , ( B25 * B23 ) , B24) ) = ( ( PProJ (R8 , R10 , B23 , B24) ) * B25 ) & ( PProJ (R8 , R10 , B23 , ( B25 * B24 )) ) = ( ( PProJ (R8 , R10 , B23 , B24) ) * B25 ))))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L550:  Gen R8 , R10;
L551:
now
let C33 , C34 being (VECTOR of R1);
let C35 being Real;
L552: ( PProJ (R8 , R10 , ( C35 * C33 ) , C34) ) = ( ( ( C35 * ( pr1 (R8 , R10 , C33) ) ) * ( pr1 (R8 , R10 , C34) ) ) + ( ( pr2 (R8 , R10 , ( C35 * C33 )) ) * ( pr2 (R8 , R10 , C34) ) ) ) by L550 , L518
.= ( ( ( C35 * ( pr1 (R8 , R10 , C33) ) ) * ( pr1 (R8 , R10 , C34) ) ) + ( ( C35 * ( pr2 (R8 , R10 , C33) ) ) * ( pr2 (R8 , R10 , C34) ) ) ) by L550 , L518
.= ( C35 * ( PProJ (R8 , R10 , C33 , C34) ) );
thus L553: ( PProJ (R8 , R10 , ( C35 * C33 ) , C34) ) = ( C35 * ( PProJ (R8 , R10 , C33 , C34) ) ) by L552;
end;
let C36 , C37 being (VECTOR of R1);
let C38 being Real;
thus L554: ( PProJ (R8 , R10 , ( C38 * C36 ) , C37) ) = ( C38 * ( PProJ (R8 , R10 , C36 , C37) ) ) by L551;
thus L555: ( PProJ (R8 , R10 , C36 , ( C38 * C37 )) ) = ( PProJ (R8 , R10 , ( C38 * C37 ) , C36) )
.= ( C38 * ( PProJ (R8 , R10 , C37 , C36) ) ) by L551
.= ( C38 * ( PProJ (R8 , R10 , C36 , C37) ) );
thus L556: ( PProJ (R8 , R10 , ( C38 * C36 ) , C37) ) = ( ( PProJ (R8 , R10 , C36 , C37) ) * C38 ) by L551;
thus L557: ( PProJ (R8 , R10 , C36 , ( C38 * C37 )) ) = ( PProJ (R8 , R10 , ( C38 * C37 ) , C36) )
.= ( C38 * ( PProJ (R8 , R10 , C37 , C36) ) ) by L551
.= ( ( PProJ (R8 , R10 , C36 , C37) ) * C38 );
end;
theorem
L558: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies (for B26 , B27 being (VECTOR of R1) holds (B26 , B27 are_Ort_wrt R8 , R10 iff ( PProJ (R8 , R10 , B26 , B27) ) = ( 0 )))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L559:  Gen R8 , R10;
let C39 , C40 being (VECTOR of R1);
set D83 = ( pr1 (R8 , R10 , C39) );
set D84 = ( pr2 (R8 , R10 , C39) );
set D85 = ( pr1 (R8 , R10 , C40) );
set D86 = ( pr2 (R8 , R10 , C40) );
L560: (C39 = ( ( D83 * R8 ) + ( D84 * R10 ) ) & C40 = ( ( D85 * R8 ) + ( D86 * R10 ) )) by L559 , L509;
thus L561: thesis by L560 , L559 , ANALMETR:1 , ANALMETR:def 2;
end;
theorem
L562: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies (for B28 , B29 , B30 , B31 being (VECTOR of R1) holds (B28 , B29 , B30 , B31 are_Ort_wrt R8 , R10 iff ( PProJ (R8 , R10 , ( B29 - B28 ) , ( B31 - B30 )) ) = ( 0 )))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L563:  Gen R8 , R10;
let C41 , C42 , C43 , C44 being (VECTOR of R1);
L564: (C41 , C42 , C43 , C44 are_Ort_wrt R8 , R10 iff ( C42 - C41 ) , ( C44 - C43 ) are_Ort_wrt R8 , R10) by ANALMETR:def 3;
thus L565: thesis by L564 , L563 , L558;
end;
theorem
L566: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies (for B32 , B33 , B34 being (VECTOR of R1) holds ( 2 * ( PProJ (R8 , R10 , B32 , ( B33 # B34 )) ) ) = ( ( PProJ (R8 , R10 , B32 , B33) ) + ( PProJ (R8 , R10 , B32 , B34) ) ))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L567:  Gen R8 , R10;
let C45 , C46 , C47 being (VECTOR of R1);
set D87 = ( pr1 (R8 , R10 , C45) );
set D88 = ( pr2 (R8 , R10 , C45) );
set D89 = ( pr1 (R8 , R10 , C46) );
set D90 = ( pr2 (R8 , R10 , C46) );
set D91 = ( pr1 (R8 , R10 , C47) );
set D92 = ( pr2 (R8 , R10 , C47) );
thus L568: ( 2 * ( PProJ (R8 , R10 , C45 , ( C46 # C47 )) ) ) = ( ( D87 * ( 2 * ( pr1 (R8 , R10 , ( C46 # C47 )) ) ) ) + ( 2 * ( D88 * ( pr2 (R8 , R10 , ( C46 # C47 )) ) ) ) )
.= ( ( D87 * ( D89 + D91 ) ) + ( D88 * ( 2 * ( pr2 (R8 , R10 , ( C46 # C47 )) ) ) ) ) by L567 , L528
.= ( ( D87 * ( D89 + D91 ) ) + ( D88 * ( D90 + D92 ) ) ) by L567 , L528
.= ( ( PProJ (R8 , R10 , C45 , C46) ) + ( PProJ (R8 , R10 , C45 , C47) ) );
end;
theorem
L569: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies (for B35 , B36 being (VECTOR of R1) holds (B35 <> B36 implies ( PProJ (R8 , R10 , ( B35 - B36 ) , ( B35 - B36 )) ) <> ( 0 )))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L570:  Gen R8 , R10;
let C48 , C49 being (VECTOR of R1);
assume L571: C48 <> C49;
assume L572: ( PProJ (R8 , R10 , ( C48 - C49 ) , ( C48 - C49 )) ) = ( 0 );
L573: ( C48 - C49 ) , ( C48 - C49 ) are_Ort_wrt R8 , R10 by L572 , L570 , L558;
L574: ( C48 - C49 ) = ( 0. R1 ) by L573 , L570 , ANALMETR:11;
thus L575: contradiction by L574 , L571 , RLVECT_1:21;
end;
theorem
L576: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies (for B37 , B38 , B39 , B40 , B41 being (VECTOR of R1) holds (for B42 being Real holds ((B37 , B38 , B39 , B40 are_DTr_wrt R8 , R10 & B37 <> B38 & B42 = ( ( ( PProJ (R8 , R10 , ( B37 - B38 ) , ( B37 + B38 )) ) - ( 2 * ( PProJ (R8 , R10 , ( B37 - B38 ) , B39) ) ) ) * ( ( PProJ (R8 , R10 , ( B37 - B38 ) , ( B37 - B38 )) ) " ) ) & B41 = ( B39 + ( B42 * ( B37 - B38 ) ) )) implies B40 = B41)))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L577:  Gen R8 , R10;
let C50 , C51 , C52 , C53 , C54 being (VECTOR of R1);
let C55 being Real;
assume that
L578: C50 , C51 , C52 , C53 are_DTr_wrt R8 , R10
and
L579: C50 <> C51
and
L580: C55 = ( ( ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 + C51 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C50 - C51 ) , C52) ) ) ) * ( ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 - C51 )) ) " ) )
and
L581: C54 = ( C52 + ( C55 * ( C50 - C51 ) ) );
L582: ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 - C51 )) ) <> ( 0 ) by L577 , L579 , L569;
L583: ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C55 * ( C50 - C51 ) )) ) = ( ( ( ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 + C51 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C50 - C51 ) , C52) ) ) ) * ( ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 - C51 )) ) " ) ) * ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 - C51 )) ) ) by L577 , L580 , L549
.= ( ( ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 + C51 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C50 - C51 ) , C52) ) ) ) * ( ( ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 - C51 )) ) " ) * ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 - C51 )) ) ) )
.= ( ( ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 + C51 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C50 - C51 ) , C52) ) ) ) * 1 ) by L582 , XCMPLX_0:def 7
.= ( ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 + C51 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C50 - C51 ) , C52) ) ) );
set D93 = ( C50 # C51 );
set D94 = ( PProJ (R8 , R10 , ( C50 - C51 ) , ( ( C54 # C52 ) - D93 )) );
L584: ( 2 * D94 ) = ( 2 * ( ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C54 # C52 )) ) - ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 # C51 )) ) ) ) by L577 , L540
.= ( ( 2 * ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C54 # C52 )) ) ) - ( 2 * ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 # C51 )) ) ) )
.= ( ( ( PProJ (R8 , R10 , ( C50 - C51 ) , C54) ) + ( PProJ (R8 , R10 , ( C50 - C51 ) , C52) ) ) - ( 2 * ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 # C51 )) ) ) ) by L577 , L566
.= ( ( ( PProJ (R8 , R10 , ( C50 - C51 ) , C54) ) + ( PProJ (R8 , R10 , ( C50 - C51 ) , C52) ) ) - ( ( PProJ (R8 , R10 , ( C50 - C51 ) , C50) ) + ( PProJ (R8 , R10 , ( C50 - C51 ) , C51) ) ) ) by L577 , L566
.= ( ( ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C52 + ( C55 * ( C50 - C51 ) ) )) ) + ( PProJ (R8 , R10 , ( C50 - C51 ) , C52) ) ) - ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 + C51 )) ) ) by L577 , L581 , L540
.= ( ( ( ( PProJ (R8 , R10 , ( C50 - C51 ) , C52) ) + ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C55 * ( C50 - C51 ) )) ) ) + ( PProJ (R8 , R10 , ( C50 - C51 ) , C52) ) ) - ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 + C51 )) ) ) by L577 , L540;
L585: C51 , C50 , ( C50 # C51 ) , ( C54 # C52 ) are_Ort_wrt R8 , R10 by L584 , L577 , L583 , L562;
L586: D93 , ( C54 # C52 ) , C51 , C50 are_Ort_wrt R8 , R10 by L585 , L157;
L587: D93 , ( C54 # C52 ) , C50 , C51 are_Ort_wrt R8 , R10 by L586 , L151;
set D95 = ( PProJ (R8 , R10 , ( C54 - C52 ) , ( ( C54 # C52 ) - D93 )) );
L588: ( C54 - C52 ) = ( C55 * ( C50 - C51 ) ) by L581 , RLSUB_2:61;
L589: ( 1 * ( C54 - C52 ) ) = ( ( C52 + ( C55 * ( C50 - C51 ) ) ) - C52 ) by L581 , RLVECT_1:def 8
.= ( C55 * ( C50 - C51 ) ) by RLSUB_2:61;
L590: (C51 , C50 // C52 , C54 or C51 , C50 // C54 , C52) by L589 , ANALMETR:14;
L591: (C50 , C51 // C52 , C54 or C50 , C51 // C54 , C52) by L590 , ANALOAF:12;
L592: ( PProJ (R8 , R10 , ( C55 * ( C50 - C51 ) ) , ( C55 * ( C50 - C51 ) )) ) = ( C55 * ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C55 * ( C50 - C51 ) )) ) ) by L577 , L549
.= ( C55 * ( ( ( ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 + C51 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C50 - C51 ) , C52) ) ) ) * ( ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 - C51 )) ) " ) ) * ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 - C51 )) ) ) ) by L577 , L580 , L549
.= ( C55 * ( ( ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 + C51 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C50 - C51 ) , C52) ) ) ) * ( ( ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 - C51 )) ) " ) * ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 - C51 )) ) ) ) )
.= ( C55 * ( ( ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 + C51 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C50 - C51 ) , C52) ) ) ) * 1 ) ) by L582 , XCMPLX_0:def 7
.= ( C55 * ( ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 + C51 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C50 - C51 ) , C52) ) ) ) );
L593: ( 2 * D95 ) = ( 2 * ( ( PProJ (R8 , R10 , ( C54 - C52 ) , ( C54 # C52 )) ) - ( PProJ (R8 , R10 , ( C54 - C52 ) , ( C50 # C51 )) ) ) ) by L577 , L540
.= ( ( 2 * ( PProJ (R8 , R10 , ( C54 - C52 ) , ( C54 # C52 )) ) ) - ( 2 * ( PProJ (R8 , R10 , ( C54 - C52 ) , ( C50 # C51 )) ) ) )
.= ( ( ( PProJ (R8 , R10 , ( C54 - C52 ) , C54) ) + ( PProJ (R8 , R10 , ( C54 - C52 ) , C52) ) ) - ( 2 * ( PProJ (R8 , R10 , ( C54 - C52 ) , ( C50 # C51 )) ) ) ) by L577 , L566
.= ( ( ( PProJ (R8 , R10 , ( C54 - C52 ) , C54) ) + ( PProJ (R8 , R10 , ( C54 - C52 ) , C52) ) ) - ( ( PProJ (R8 , R10 , ( C54 - C52 ) , C50) ) + ( PProJ (R8 , R10 , ( C54 - C52 ) , C51) ) ) ) by L577 , L566
.= ( ( ( PProJ (R8 , R10 , ( C54 - C52 ) , ( C52 + ( C55 * ( C50 - C51 ) ) )) ) + ( PProJ (R8 , R10 , ( C54 - C52 ) , C52) ) ) - ( PProJ (R8 , R10 , ( C54 - C52 ) , ( C50 + C51 )) ) ) by L577 , L581 , L540
.= ( ( ( ( PProJ (R8 , R10 , ( C54 - C52 ) , C52) ) + ( PProJ (R8 , R10 , ( C54 - C52 ) , ( C55 * ( C50 - C51 ) )) ) ) + ( PProJ (R8 , R10 , ( C54 - C52 ) , C52) ) ) - ( PProJ (R8 , R10 , ( C54 - C52 ) , ( C50 + C51 )) ) ) by L577 , L540;
L594: ( 2 * D95 ) = ( ( ( ( PProJ (R8 , R10 , ( C55 * ( C50 - C51 ) ) , C52) ) + ( ( C55 * ( PProJ (R8 , R10 , ( C50 - C51 ) , ( C50 + C51 )) ) ) - ( C55 * ( 2 * ( PProJ (R8 , R10 , ( C50 - C51 ) , C52) ) ) ) ) ) + ( PProJ (R8 , R10 , ( C55 * ( C50 - C51 ) ) , C52) ) ) - ( PProJ (R8 , R10 , ( C55 * ( C50 - C51 ) ) , ( C50 + C51 )) ) ) by L593 , L588 , L592
.= ( ( ( ( PProJ (R8 , R10 , ( C55 * ( C50 - C51 ) ) , C52) ) + ( ( PProJ (R8 , R10 , ( C55 * ( C50 - C51 ) ) , ( C50 + C51 )) ) - ( 2 * ( C55 * ( PProJ (R8 , R10 , ( C50 - C51 ) , C52) ) ) ) ) ) + ( PProJ (R8 , R10 , ( C55 * ( C50 - C51 ) ) , C52) ) ) - ( PProJ (R8 , R10 , ( C55 * ( C50 - C51 ) ) , ( C50 + C51 )) ) ) by L577 , L549
.= ( ( ( ( PProJ (R8 , R10 , ( C55 * ( C50 - C51 ) ) , C52) ) + ( ( PProJ (R8 , R10 , ( C55 * ( C50 - C51 ) ) , ( C50 + C51 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C55 * ( C50 - C51 ) ) , C52) ) ) ) ) + ( PProJ (R8 , R10 , ( C55 * ( C50 - C51 ) ) , C52) ) ) - ( PProJ (R8 , R10 , ( C55 * ( C50 - C51 ) ) , ( C50 + C51 )) ) ) by L577 , L549
.= ( 0 );
L595: C52 , C54 , D93 , ( C54 # C52 ) are_Ort_wrt R8 , R10 by L594 , L577 , L562;
L596: D93 , ( C54 # C52 ) , C52 , C54 are_Ort_wrt R8 , R10 by L595 , L157;
L597: D93 , ( C54 # C52 ) , C54 , C52 are_Ort_wrt R8 , R10 by L596 , L151;
L598: (C50 , C51 , D93 , ( C52 # C54 ) are_Ort_wrt R8 , R10 & C52 , C54 , D93 , ( C52 # C54 ) are_Ort_wrt R8 , R10 & C50 , C51 , D93 , ( C54 # C52 ) are_Ort_wrt R8 , R10 & C54 , C52 , D93 , ( C54 # C52 ) are_Ort_wrt R8 , R10) by L597 , L577 , L587 , L594 , L157 , L562;
L599: (C50 , C51 , C52 , C54 are_DTr_wrt R8 , R10 or C50 , C51 , C54 , C52 are_DTr_wrt R8 , R10) by L598 , L591 , L195;
thus L600: thesis by L599 , L577 , L578 , L579 , L395;
end;
L601: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies (for B43 , B44 , B45 , B46 , B47 , B48 being (VECTOR of R1) holds (for B49 , B50 being Real holds ((B49 = ( ( ( PProJ (R8 , R10 , ( B43 - B44 ) , ( B43 + B44 )) ) - ( 2 * ( PProJ (R8 , R10 , ( B43 - B44 ) , B45) ) ) ) * ( ( PProJ (R8 , R10 , ( B43 - B44 ) , ( B43 - B44 )) ) " ) ) & B50 = ( ( ( PProJ (R8 , R10 , ( B43 - B44 ) , ( B43 + B44 )) ) - ( 2 * ( PProJ (R8 , R10 , ( B43 - B44 ) , B46) ) ) ) * ( ( PProJ (R8 , R10 , ( B43 - B44 ) , ( B43 - B44 )) ) " ) ) & B47 = ( B45 + ( B49 * ( B43 - B44 ) ) ) & B48 = ( B46 + ( B50 * ( B43 - B44 ) ) )) implies (( B48 - B47 ) = ( ( B46 - B45 ) + ( ( B50 - B49 ) * ( B43 - B44 ) ) ) & ( B50 - B49 ) = ( ( ( - 2 ) * ( PProJ (R8 , R10 , ( B43 - B44 ) , ( B46 - B45 )) ) ) * ( ( PProJ (R8 , R10 , ( B43 - B44 ) , ( B43 - B44 )) ) " ) )))))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L602:  Gen R8 , R10;
let C56 , C57 , C58 , C59 , C60 , C61 being (VECTOR of R1);
let C62 , C63 being Real;
assume that
L603: (C62 = ( ( ( PProJ (R8 , R10 , ( C56 - C57 ) , ( C56 + C57 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C56 - C57 ) , C58) ) ) ) * ( ( PProJ (R8 , R10 , ( C56 - C57 ) , ( C56 - C57 )) ) " ) ) & C63 = ( ( ( PProJ (R8 , R10 , ( C56 - C57 ) , ( C56 + C57 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C56 - C57 ) , C59) ) ) ) * ( ( PProJ (R8 , R10 , ( C56 - C57 ) , ( C56 - C57 )) ) " ) ) & C60 = ( C58 + ( C62 * ( C56 - C57 ) ) ) & C61 = ( C59 + ( C63 * ( C56 - C57 ) ) ));
thus L604: (( C61 - C60 ) = ( ( C59 - C58 ) + ( ( C63 - C62 ) * ( C56 - C57 ) ) ) & ( C63 - C62 ) = ( ( ( - 2 ) * ( PProJ (R8 , R10 , ( C56 - C57 ) , ( C59 - C58 )) ) ) * ( ( PProJ (R8 , R10 , ( C56 - C57 ) , ( C56 - C57 )) ) " ) ))
proof
set D96 = ( ( ( PProJ (R8 , R10 , ( C56 - C57 ) , ( C56 + C57 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C56 - C57 ) , C59) ) ) ) - ( ( PProJ (R8 , R10 , ( C56 - C57 ) , ( C56 + C57 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C56 - C57 ) , C58) ) ) ) );
L605: ( ( 2 * C58 ) - ( 2 * C59 ) ) = ( - ( ( 2 * C59 ) - ( 2 * C58 ) ) ) by RLVECT_1:33
.= ( - ( 2 * ( C59 - C58 ) ) ) by RLVECT_1:34
.= ( 2 * ( - ( C59 - C58 ) ) ) by RLVECT_1:25
.= ( ( - 2 ) * ( C59 - C58 ) ) by RLVECT_1:24;
L606: D96 = ( ( ( PProJ (R8 , R10 , ( C56 - C57 ) , ( C56 + C57 )) ) - ( PProJ (R8 , R10 , ( C56 - C57 ) , ( 2 * C59 )) ) ) - ( ( PProJ (R8 , R10 , ( C56 - C57 ) , ( C56 + C57 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C56 - C57 ) , C58) ) ) ) ) by L602 , L549
.= ( ( ( PProJ (R8 , R10 , ( C56 - C57 ) , ( C56 + C57 )) ) - ( PProJ (R8 , R10 , ( C56 - C57 ) , ( 2 * C59 )) ) ) - ( ( PProJ (R8 , R10 , ( C56 - C57 ) , ( C56 + C57 )) ) - ( PProJ (R8 , R10 , ( C56 - C57 ) , ( 2 * C58 )) ) ) ) by L602 , L549
.= ( ( PProJ (R8 , R10 , ( C56 - C57 ) , ( 2 * C58 )) ) - ( PProJ (R8 , R10 , ( C56 - C57 ) , ( 2 * C59 )) ) )
.= ( PProJ (R8 , R10 , ( C56 - C57 ) , ( ( 2 * C58 ) - ( 2 * C59 ) )) ) by L602 , L540;
L607: D96 = ( ( - 2 ) * ( PProJ (R8 , R10 , ( C56 - C57 ) , ( C59 - C58 )) ) ) by L606 , L602 , L605 , L549;
thus L608: thesis by L607 , L603 , L536 , XCMPLX_1:40;
end;

end;
theorem
L605: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies (for B51 , B52 , B53 , B54 , B55 , B56 , B57 , B58 , B59 , B60 being (VECTOR of R1) holds ((B51 <> B52 & B51 , B52 , B53 , B57 are_DTr_wrt R8 , R10 & B51 , B52 , B54 , B58 are_DTr_wrt R8 , R10 & B51 , B52 , B55 , B59 are_DTr_wrt R8 , R10 & B51 , B52 , B56 , B60 are_DTr_wrt R8 , R10 & B53 , B54 // B55 , B56) implies B57 , B58 // B59 , B60))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L606:  Gen R8 , R10;
let C64 , C65 , C66 , C67 , C68 , C69 , C70 , C71 , C72 , C73 being (VECTOR of R1);
assume that
L607: C64 <> C65
and
L608: (C64 , C65 , C66 , C70 are_DTr_wrt R8 , R10 & C64 , C65 , C67 , C71 are_DTr_wrt R8 , R10)
and
L609: (C64 , C65 , C68 , C72 are_DTr_wrt R8 , R10 & C64 , C65 , C69 , C73 are_DTr_wrt R8 , R10)
and
L610: C66 , C67 // C68 , C69;
set D97 = ( ( ( PProJ (R8 , R10 , ( C64 - C65 ) , ( C64 + C65 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C64 - C65 ) , C66) ) ) ) * ( ( PProJ (R8 , R10 , ( C64 - C65 ) , ( C64 - C65 )) ) " ) );
set D98 = ( ( ( PProJ (R8 , R10 , ( C64 - C65 ) , ( C64 + C65 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C64 - C65 ) , C67) ) ) ) * ( ( PProJ (R8 , R10 , ( C64 - C65 ) , ( C64 - C65 )) ) " ) );
set D99 = ( ( ( PProJ (R8 , R10 , ( C64 - C65 ) , ( C64 + C65 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C64 - C65 ) , C68) ) ) ) * ( ( PProJ (R8 , R10 , ( C64 - C65 ) , ( C64 - C65 )) ) " ) );
set D100 = ( ( ( PProJ (R8 , R10 , ( C64 - C65 ) , ( C64 + C65 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C64 - C65 ) , C69) ) ) ) * ( ( PProJ (R8 , R10 , ( C64 - C65 ) , ( C64 - C65 )) ) " ) );
L611: (( C66 + ( D97 * ( C64 - C65 ) ) ) = C70 & ( C67 + ( D98 * ( C64 - C65 ) ) ) = C71) by L606 , L607 , L608 , L576;
L612: (( C68 + ( D99 * ( C64 - C65 ) ) ) = C72 & ( C69 + ( D100 * ( C64 - C65 ) ) ) = C73) by L606 , L607 , L609 , L576;
L613: (C70 = ( C66 + ( D97 * ( C64 - C65 ) ) ) & C71 = ( C67 + ( D98 * ( C64 - C65 ) ) )) by L606 , L607 , L608 , L576;
per cases ;
suppose L614: C66 = C67;

L615: C70 = C71 by L614 , L606 , L607 , L608 , L389;
thus L616: thesis by L615 , ANALOAF:def 1;
end;
suppose L617: C68 = C69;

L618: C72 = C73 by L617 , L606 , L607 , L609 , L389;
thus L619: thesis by L618 , ANALOAF:def 1;
end;
suppose that L620: (C66 <> C67 & C68 <> C69);
set D101 = ( ( PProJ (R8 , R10 , ( C64 - C65 ) , ( C64 - C65 )) ) " );
set D102 = ( ( - 2 ) * ( PProJ (R8 , R10 , ( C64 - C65 ) , ( C69 - C68 )) ) );
set D103 = ( ( - 2 ) * ( PProJ (R8 , R10 , ( C64 - C65 ) , ( C67 - C66 )) ) );
L621: ( C73 - C72 ) = ( ( C69 - C68 ) + ( ( D100 - D99 ) * ( C64 - C65 ) ) ) by L606 , L612 , L601;
consider R11 being Real, R14 being Real such that L622: ( R11 * ( C67 - C66 ) ) = ( R14 * ( C69 - C68 ) ) and L623: (( 0 ) < R11 & ( 0 ) < R14) by L610 , L620 , ANALOAF:7;
L624: ( R11 * D103 ) = ( ( - 2 ) * ( R11 * ( PProJ (R8 , R10 , ( C64 - C65 ) , ( C67 - C66 )) ) ) )
.= ( ( - 2 ) * ( PProJ (R8 , R10 , ( C64 - C65 ) , ( R14 * ( C69 - C68 ) )) ) ) by L606 , L622 , L549
.= ( ( - 2 ) * ( R14 * ( PProJ (R8 , R10 , ( C64 - C65 ) , ( C69 - C68 )) ) ) ) by L606 , L549
.= ( R14 * D102 );
L625: ( R11 * ( D98 - D97 ) ) = ( R11 * ( D103 * D101 ) ) by L606 , L613 , L601
.= ( ( R14 * D102 ) * D101 ) by L624 , XCMPLX_1:4
.= ( R14 * ( D102 * D101 ) )
.= ( R14 * ( D100 - D99 ) ) by L606 , L612 , L601;
L626: ( C71 - C70 ) = ( ( C67 - C66 ) + ( ( D98 - D97 ) * ( C64 - C65 ) ) ) by L606 , L611 , L601;
L627: ( R11 * ( C71 - C70 ) ) = ( ( R11 * ( C67 - C66 ) ) + ( R11 * ( ( D98 - D97 ) * ( C64 - C65 ) ) ) ) by L626 , RLVECT_1:def 5
.= ( ( R14 * ( C69 - C68 ) ) + ( ( R14 * ( D100 - D99 ) ) * ( C64 - C65 ) ) ) by L622 , L625 , RLVECT_1:def 7
.= ( ( R14 * ( C69 - C68 ) ) + ( R14 * ( ( D100 - D99 ) * ( C64 - C65 ) ) ) ) by RLVECT_1:def 7
.= ( R14 * ( C73 - C72 ) ) by L621 , RLVECT_1:def 5;
thus L628: thesis by L627 , L623 , ANALOAF:def 1;
end;
end;
theorem
L630: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies (for B61 , B62 , B63 , B64 , B65 , B66 , B67 , B68 being (VECTOR of R1) holds ((B61 <> B62 & B61 , B62 , B63 , B66 are_DTr_wrt R8 , R10 & B61 , B62 , B64 , B67 are_DTr_wrt R8 , R10 & B61 , B62 , B65 , B68 are_DTr_wrt R8 , R10 & B65 = ( B63 # B64 )) implies B68 = ( B66 # B67 )))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L631:  Gen R8 , R10;
let C74 , C75 , C76 , C77 , C78 , C79 , C80 , C81 being (VECTOR of R1);
assume that
L632: C74 <> C75
and
L633: (C74 , C75 , C76 , C79 are_DTr_wrt R8 , R10 & C74 , C75 , C77 , C80 are_DTr_wrt R8 , R10)
and
L634: C74 , C75 , C78 , C81 are_DTr_wrt R8 , R10
and
L635: C78 = ( C76 # C77 );
set D104 = ( PProJ (R8 , R10 , ( C74 - C75 ) , ( C74 + C75 )) );
set D105 = ( PProJ (R8 , R10 , ( C74 - C75 ) , C76) );
set D106 = ( PProJ (R8 , R10 , ( C74 - C75 ) , C77) );
set D107 = ( PProJ (R8 , R10 , ( C74 - C75 ) , C78) );
set D108 = ( PProJ (R8 , R10 , ( C74 - C75 ) , ( C74 - C75 )) );
set D109 = ( ( D104 - ( 2 * D105 ) ) * ( D108 " ) );
set D110 = ( ( D104 - ( 2 * D106 ) ) * ( D108 " ) );
set D111 = ( ( D104 - ( 2 * D107 ) ) * ( D108 " ) );
L636: ( D105 + D106 ) = ( PProJ (R8 , R10 , ( C74 - C75 ) , ( C76 + C77 )) ) by L631 , L540
.= ( PProJ (R8 , R10 , ( C74 - C75 ) , ( C78 + C78 )) ) by L635 , L49
.= ( D107 + D107 ) by L631 , L540;
L637: ( C78 + ( D111 * ( C74 - C75 ) ) ) = C81 by L631 , L632 , L634 , L576;
L638: ( C81 + C81 ) = ( ( D111 * ( C74 - C75 ) ) + ( C78 + ( C78 + ( D111 * ( C74 - C75 ) ) ) ) ) by L637 , RLVECT_1:def 3
.= ( ( D111 * ( C74 - C75 ) ) + ( ( C78 + C78 ) + ( D111 * ( C74 - C75 ) ) ) ) by RLVECT_1:def 3
.= ( ( C78 + C78 ) + ( ( D111 * ( C74 - C75 ) ) + ( D111 * ( C74 - C75 ) ) ) ) by RLVECT_1:def 3
.= ( ( C78 + C78 ) + ( ( D111 + D111 ) * ( C74 - C75 ) ) ) by RLVECT_1:def 6;
L639: (( C76 + ( D109 * ( C74 - C75 ) ) ) = C79 & ( C77 + ( D110 * ( C74 - C75 ) ) ) = C80) by L631 , L632 , L633 , L576;
L640: ( C79 + C80 ) = ( ( D109 * ( C74 - C75 ) ) + ( C76 + ( C77 + ( D110 * ( C74 - C75 ) ) ) ) ) by L639 , RLVECT_1:def 3
.= ( ( D109 * ( C74 - C75 ) ) + ( ( C76 + C77 ) + ( D110 * ( C74 - C75 ) ) ) ) by RLVECT_1:def 3
.= ( ( C76 + C77 ) + ( ( D109 * ( C74 - C75 ) ) + ( D110 * ( C74 - C75 ) ) ) ) by RLVECT_1:def 3
.= ( ( C76 + C77 ) + ( ( D109 + D110 ) * ( C74 - C75 ) ) ) by RLVECT_1:def 6
.= ( ( C78 + C78 ) + ( ( D109 + D110 ) * ( C74 - C75 ) ) ) by L635 , L49;
set D112 = ( ( D104 - ( 2 * D107 ) ) + ( D104 - ( 2 * D107 ) ) );
L641: ( D109 + D110 ) = ( ( ( D104 - ( 2 * D105 ) ) + ( D104 - ( 2 * D106 ) ) ) * ( D108 " ) )
.= ( D112 * ( D108 " ) ) by L636
.= ( D111 + D111 );
thus L642: thesis by L641 , L640 , L638 , L49;
end;
theorem
L643: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies (for B69 , B70 , B71 , B72 , B73 , B74 being (VECTOR of R1) holds ((B69 <> B70 & B69 , B70 , B71 , B73 are_DTr_wrt R8 , R10 & B69 , B70 , B72 , B74 are_DTr_wrt R8 , R10) implies B69 , B70 , ( B71 # B72 ) , ( B73 # B74 ) are_DTr_wrt R8 , R10))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L644:  Gen R8 , R10;
let C82 , C83 , C84 , C85 , C86 , C87 being (VECTOR of R1);
assume that
L645: C82 <> C83
and
L646: C82 , C83 , C84 , C86 are_DTr_wrt R8 , R10
and
L647: C82 , C83 , C85 , C87 are_DTr_wrt R8 , R10;
L648: C84 , C86 , C85 , C87 are_DTr_wrt R8 , R10 by L644 , L645 , L646 , L647 , L249;
L649: C84 , C86 , ( C84 # C85 ) , ( C86 # C87 ) are_DTr_wrt R8 , R10 by L648 , L644 , L405;
L650: C85 , C87 , C84 , C86 are_DTr_wrt R8 , R10 by L644 , L645 , L646 , L647 , L249;
L651: C85 , C87 , ( C85 # C84 ) , ( C87 # C86 ) are_DTr_wrt R8 , R10 by L650 , L644 , L405;
per cases ;
suppose L652: C84 <> C86;

L653: C84 , C86 , C82 , C83 are_DTr_wrt R8 , R10 by L646 , L302;
thus L654: thesis by L653 , L644 , L649 , L652 , L249;
end;
suppose L655: C85 <> C87;

L656: C85 , C87 , C82 , C83 are_DTr_wrt R8 , R10 by L647 , L302;
thus L657: thesis by L656 , L644 , L651 , L655 , L249;
end;
suppose that L658: C84 = C86
and
L659: C85 = C87;
L660: ( C82 # C83 ) , ( ( C84 # C85 ) # ( C86 # C87 ) ) , ( C84 # C85 ) , ( C86 # C87 ) are_Ort_wrt R8 , R10 by L644 , L658 , L659 , L162;
L661: ( C84 # C85 ) , ( C86 # C87 ) , ( C82 # C83 ) , ( ( C84 # C85 ) # ( C86 # C87 ) ) are_Ort_wrt R8 , R10 by L660 , L157;
L662: C82 , C83 , ( C82 # C83 ) , ( C84 # C85 ) are_Ort_wrt R8 , R10
proof
set D113 = ( C82 # C83 );
L663: ( 2 * ( C84 # C85 ) ) = ( ( 1 + 1 ) * ( C84 # C85 ) )
.= ( ( 1 * ( C84 # C85 ) ) + ( 1 * ( C84 # C85 ) ) ) by RLVECT_1:def 6
.= ( ( C84 # C85 ) + ( 1 * ( C84 # C85 ) ) ) by RLVECT_1:def 8
.= ( ( C84 # C85 ) + ( C84 # C85 ) ) by RLVECT_1:def 8
.= ( C84 + C85 ) by L49;
L664: ( - ( 2 * D113 ) ) = ( - ( ( 1 + 1 ) * D113 ) )
.= ( - ( ( 1 * D113 ) + ( 1 * D113 ) ) ) by RLVECT_1:def 6
.= ( - ( D113 + ( 1 * D113 ) ) ) by RLVECT_1:def 8
.= ( - ( D113 + D113 ) ) by RLVECT_1:def 8
.= ( ( - D113 ) + ( - D113 ) ) by L533;
L665: C82 , C83 , D113 , ( C85 # C87 ) are_Ort_wrt R8 , R10 by L647 , L195;
L666: ( C83 - C82 ) , ( C85 - D113 ) are_Ort_wrt R8 , R10 by L665 , L659 , ANALMETR:def 3;
L667: ( C83 - C82 ) , ( ( 2 " ) * ( C85 - D113 ) ) are_Ort_wrt R8 , R10 by L666 , ANALMETR:7;
L668: C82 , C83 , D113 , ( C84 # C86 ) are_Ort_wrt R8 , R10 by L646 , L195;
L669: ( C83 - C82 ) , ( C84 - D113 ) are_Ort_wrt R8 , R10 by L668 , L658 , ANALMETR:def 3;
L670: ( C83 - C82 ) , ( ( 2 " ) * ( C84 - D113 ) ) are_Ort_wrt R8 , R10 by L669 , ANALMETR:7;
L671: ( ( C84 # C85 ) - D113 ) = ( ( ( 2 " ) * 2 ) * ( ( C84 # C85 ) - D113 ) ) by RLVECT_1:def 8
.= ( ( 2 " ) * ( 2 * ( ( C84 # C85 ) - D113 ) ) ) by RLVECT_1:def 7
.= ( ( 2 " ) * ( ( C84 + C85 ) - ( 2 * D113 ) ) ) by L663 , RLVECT_1:34
.= ( ( 2 " ) * ( ( ( C84 + C85 ) + ( - D113 ) ) + ( - D113 ) ) ) by L664 , RLVECT_1:def 3
.= ( ( 2 " ) * ( ( ( C84 - D113 ) + C85 ) + ( - D113 ) ) ) by RLVECT_1:def 3
.= ( ( 2 " ) * ( ( C84 - D113 ) + ( C85 - D113 ) ) ) by RLVECT_1:def 3
.= ( ( ( 2 " ) * ( C84 - D113 ) ) + ( ( 2 " ) * ( C85 - D113 ) ) ) by RLVECT_1:def 5;
L672: ( C83 - C82 ) , ( ( C84 # C85 ) - D113 ) are_Ort_wrt R8 , R10 by L671 , L644 , L670 , L667 , ANALMETR:10;
thus L673: thesis by L672 , ANALMETR:def 3;
end;
L674: C82 , C83 // ( C84 # C85 ) , ( C86 # C87 ) by L658 , L659 , ANALOAF:9;
thus L675: thesis by L674 , L658 , L659 , L661 , L662 , L195;
end;
end;
theorem
L677: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies (for B75 , B76 , B77 , B78 , B79 , B80 , B81 , B82 , B83 , B84 being (VECTOR of R1) holds ((B75 <> B76 & B75 , B76 , B77 , B81 are_DTr_wrt R8 , R10 & B75 , B76 , B78 , B82 are_DTr_wrt R8 , R10 & B75 , B76 , B79 , B83 are_DTr_wrt R8 , R10 & B75 , B76 , B80 , B84 are_DTr_wrt R8 , R10 & B77 , B78 , B79 , B80 are_Ort_wrt R8 , R10) implies B81 , B82 , B83 , B84 are_Ort_wrt R8 , R10))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
assume L678:  Gen R8 , R10;
let C88 , C89 , C90 , C91 , C92 , C93 , C94 , C95 , C96 , C97 being (VECTOR of R1);
assume that
L679: C88 <> C89
and
L680: (C88 , C89 , C90 , C94 are_DTr_wrt R8 , R10 & C88 , C89 , C91 , C95 are_DTr_wrt R8 , R10)
and
L681: (C88 , C89 , C92 , C96 are_DTr_wrt R8 , R10 & C88 , C89 , C93 , C97 are_DTr_wrt R8 , R10)
and
L682: C90 , C91 , C92 , C93 are_Ort_wrt R8 , R10;
set D114 = ( ( ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C88 + C89 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C88 - C89 ) , C90) ) ) ) * ( ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C88 - C89 )) ) " ) );
set D115 = ( ( ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C88 + C89 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C88 - C89 ) , C91) ) ) ) * ( ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C88 - C89 )) ) " ) );
set D116 = ( ( ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C88 + C89 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C88 - C89 ) , C92) ) ) ) * ( ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C88 - C89 )) ) " ) );
set D117 = ( ( ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C88 + C89 )) ) - ( 2 * ( PProJ (R8 , R10 , ( C88 - C89 ) , C93) ) ) ) * ( ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C88 - C89 )) ) " ) );
L683: (( C90 + ( D114 * ( C88 - C89 ) ) ) = C94 & ( C91 + ( D115 * ( C88 - C89 ) ) ) = C95) by L678 , L679 , L680 , L576;
L684: ( C95 - C94 ) = ( ( C91 - C90 ) + ( ( D115 - D114 ) * ( C88 - C89 ) ) ) by L683 , L678 , L601;
L685: (C94 = ( C90 + ( D114 * ( C88 - C89 ) ) ) & C95 = ( C91 + ( D115 * ( C88 - C89 ) ) )) by L678 , L679 , L680 , L576;
L686: (( C92 + ( D116 * ( C88 - C89 ) ) ) = C96 & ( C93 + ( D117 * ( C88 - C89 ) ) ) = C97) by L678 , L679 , L681 , L576;
L687: ( C97 - C96 ) = ( ( C93 - C92 ) + ( ( D117 - D116 ) * ( C88 - C89 ) ) ) by L686 , L678 , L601;
L688: ( PProJ (R8 , R10 , ( C95 - C94 ) , ( C97 - C96 )) ) = ( ( PProJ (R8 , R10 , ( C91 - C90 ) , ( ( C93 - C92 ) + ( ( D117 - D116 ) * ( C88 - C89 ) ) )) ) + ( PProJ (R8 , R10 , ( ( D115 - D114 ) * ( C88 - C89 ) ) , ( ( C93 - C92 ) + ( ( D117 - D116 ) * ( C88 - C89 ) ) )) ) ) by L687 , L678 , L684 , L540
.= ( ( ( PProJ (R8 , R10 , ( C91 - C90 ) , ( C93 - C92 )) ) + ( PProJ (R8 , R10 , ( C91 - C90 ) , ( ( D117 - D116 ) * ( C88 - C89 ) )) ) ) + ( PProJ (R8 , R10 , ( ( D115 - D114 ) * ( C88 - C89 ) ) , ( ( C93 - C92 ) + ( ( D117 - D116 ) * ( C88 - C89 ) ) )) ) ) by L678 , L540
.= ( ( ( 0 ) + ( PProJ (R8 , R10 , ( C91 - C90 ) , ( ( D117 - D116 ) * ( C88 - C89 ) )) ) ) + ( PProJ (R8 , R10 , ( ( D115 - D114 ) * ( C88 - C89 ) ) , ( ( C93 - C92 ) + ( ( D117 - D116 ) * ( C88 - C89 ) ) )) ) ) by L678 , L682 , L562
.= ( ( PProJ (R8 , R10 , ( C91 - C90 ) , ( ( D117 - D116 ) * ( C88 - C89 ) )) ) + ( ( PProJ (R8 , R10 , ( ( D115 - D114 ) * ( C88 - C89 ) ) , ( C93 - C92 )) ) + ( PProJ (R8 , R10 , ( ( D115 - D114 ) * ( C88 - C89 ) ) , ( ( D117 - D116 ) * ( C88 - C89 ) )) ) ) ) by L678 , L540;
set D118 = ( ( ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C88 - C89 )) ) " ) * ( ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C91 - C90 )) ) * ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C93 - C92 )) ) ) );
L689: ( PProJ (R8 , R10 , ( ( D115 - D114 ) * ( C88 - C89 ) ) , ( C93 - C92 )) ) = ( PProJ (R8 , R10 , ( C93 - C92 ) , ( ( D115 - D114 ) * ( C88 - C89 ) )) )
.= ( ( PProJ (R8 , R10 , ( C93 - C92 ) , ( C88 - C89 )) ) * ( D115 - D114 ) ) by L678 , L549
.= ( ( PProJ (R8 , R10 , ( C93 - C92 ) , ( C88 - C89 )) ) * ( ( ( - 2 ) * ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C91 - C90 )) ) ) * ( ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C88 - C89 )) ) " ) ) ) by L678 , L685 , L601
.= ( ( - 2 ) * D118 );
L690: ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C88 - C89 )) ) <> ( 0 ) by L678 , L679 , L569;
L691: ( PProJ (R8 , R10 , ( C91 - C90 ) , ( ( D117 - D116 ) * ( C88 - C89 ) )) ) = ( ( PProJ (R8 , R10 , ( C91 - C90 ) , ( C88 - C89 )) ) * ( D117 - D116 ) ) by L678 , L549
.= ( ( PProJ (R8 , R10 , ( C91 - C90 ) , ( C88 - C89 )) ) * ( ( ( - 2 ) * ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C93 - C92 )) ) ) * ( ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C88 - C89 )) ) " ) ) ) by L678 , L686 , L601
.= ( ( - 2 ) * D118 );
L692: ( PProJ (R8 , R10 , ( ( D115 - D114 ) * ( C88 - C89 ) ) , ( ( D117 - D116 ) * ( C88 - C89 ) )) ) = ( ( D115 - D114 ) * ( PProJ (R8 , R10 , ( C88 - C89 ) , ( ( D117 - D116 ) * ( C88 - C89 ) )) ) ) by L678 , L549
.= ( ( D115 - D114 ) * ( ( D117 - D116 ) * ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C88 - C89 )) ) ) ) by L678 , L549
.= ( ( D115 - D114 ) * ( ( ( ( - 2 ) * ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C93 - C92 )) ) ) * ( ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C88 - C89 )) ) " ) ) * ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C88 - C89 )) ) ) ) by L678 , L686 , L601
.= ( ( D115 - D114 ) * ( ( ( - 2 ) * ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C93 - C92 )) ) ) * ( ( ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C88 - C89 )) ) " ) * ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C88 - C89 )) ) ) ) )
.= ( ( D115 - D114 ) * ( ( ( - 2 ) * ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C93 - C92 )) ) ) * 1 ) ) by L690 , XCMPLX_0:def 7
.= ( ( ( - 2 ) * ( D115 - D114 ) ) * ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C93 - C92 )) ) )
.= ( ( ( - 2 ) * ( ( ( - 2 ) * ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C91 - C90 )) ) ) * ( ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C88 - C89 )) ) " ) ) ) * ( PProJ (R8 , R10 , ( C88 - C89 ) , ( C93 - C92 )) ) ) by L678 , L685 , L601
.= ( 4 * D118 );
thus L693: thesis by L692 , L678 , L688 , L691 , L689 , L562;
end;
theorem
L694: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for B85 , B86 , B87 , B88 , B89 , B90 , B91 , B92 , B93 , B94 being (VECTOR of R1) holds (( Gen R8 , R10 & B85 <> B86 & B85 , B86 , B87 , B91 are_DTr_wrt R8 , R10 & B85 , B86 , B88 , B92 are_DTr_wrt R8 , R10 & B85 , B86 , B89 , B93 are_DTr_wrt R8 , R10 & B85 , B86 , B90 , B94 are_DTr_wrt R8 , R10 & B87 , B88 , B89 , B90 are_DTr_wrt R8 , R10) implies B91 , B92 , B93 , B94 are_DTr_wrt R8 , R10)))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let C98 , C99 , C100 , C101 , C102 , C103 , C104 , C105 , C106 , C107 being (VECTOR of R1);
assume that
L695: ( Gen R8 , R10 & C98 <> C99)
and
L696: (C98 , C99 , C100 , C104 are_DTr_wrt R8 , R10 & C98 , C99 , C101 , C105 are_DTr_wrt R8 , R10)
and
L697: (C98 , C99 , C102 , C106 are_DTr_wrt R8 , R10 & C98 , C99 , C103 , C107 are_DTr_wrt R8 , R10)
and
L698: C100 , C101 , C102 , C103 are_DTr_wrt R8 , R10;
set D119 = ( C100 # C101 );
set D120 = ( C102 # C103 );
L699: (C98 , C99 , D119 , ( C104 # C105 ) are_DTr_wrt R8 , R10 & C98 , C99 , D120 , ( C106 # C107 ) are_DTr_wrt R8 , R10) by L695 , L696 , L697 , L643;
L700: C102 , C103 , D119 , D120 are_Ort_wrt R8 , R10 by L698 , L195;
L701: C106 , C107 , ( C104 # C105 ) , ( C106 # C107 ) are_Ort_wrt R8 , R10 by L700 , L695 , L697 , L699 , L677;
L702: C100 , C101 , D119 , D120 are_Ort_wrt R8 , R10 by L698 , L195;
L703: C104 , C105 , ( C104 # C105 ) , ( C106 # C107 ) are_Ort_wrt R8 , R10 by L702 , L695 , L696 , L699 , L677;
L704: C100 , C101 // C102 , C103 by L698 , L195;
L705: C104 , C105 // C106 , C107 by L704 , L695 , L696 , L697 , L605;
thus L706: thesis by L705 , L703 , L701 , L195;
end;
definition
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
func DTrapezium (R1 , R8 , R10) -> (Relation of [: (the carrier of R1) , (the carrier of R1) :]) means 
:L707: (for R19 being set holds (for R20 being set holds ([ R19 , R20 ] in it iff (ex R2 being (VECTOR of R1) st (ex R3 being (VECTOR of R1) st (ex R5 being (VECTOR of R1) st (ex R6 being (VECTOR of R1) st (R19 = [ R2 , R3 ] & R20 = [ R5 , R6 ] & R2 , R3 , R5 , R6 are_DTr_wrt R8 , R10))))))));
existence
proof
defpred S1[ set , set ] means (ex R2 being (VECTOR of R1) st (ex R3 being (VECTOR of R1) st (ex R5 being (VECTOR of R1) st (ex R6 being (VECTOR of R1) st ($1 = [ R2 , R3 ] & $2 = [ R5 , R6 ] & R2 , R3 , R5 , R6 are_DTr_wrt R8 , R10)))));
set D121 = [: (the carrier of R1) , (the carrier of R1) :];
consider C108 being (Relation of D121 , D121) such that L708: (for R19 being set holds (for R20 being set holds ([ R19 , R20 ] in C108 iff (R19 in D121 & R20 in D121 & S1[ R19 , R20 ])))) from RELSET_1:sch 1;
take C108;
let R19 being set;
let R20 being set;
thus L709: ([ R19 , R20 ] in C108 implies (ex R2 being (VECTOR of R1) st (ex R3 being (VECTOR of R1) st (ex R5 being (VECTOR of R1) st (ex R6 being (VECTOR of R1) st (R19 = [ R2 , R3 ] & R20 = [ R5 , R6 ] & R2 , R3 , R5 , R6 are_DTr_wrt R8 , R10)))))) by L708;
assume L710: (ex R2 being (VECTOR of R1) st (ex R3 being (VECTOR of R1) st (ex R5 being (VECTOR of R1) st (ex R6 being (VECTOR of R1) st (R19 = [ R2 , R3 ] & R20 = [ R5 , R6 ] & R2 , R3 , R5 , R6 are_DTr_wrt R8 , R10)))));
thus L711: thesis by L710 , L708;
end;
uniqueness
proof
let C109 , C110 being (Relation of [: (the carrier of R1) , (the carrier of R1) :]);
assume that
L712: (for R19 being set holds (for R20 being set holds ([ R19 , R20 ] in C109 iff (ex R2 being (VECTOR of R1) st (ex R3 being (VECTOR of R1) st (ex R5 being (VECTOR of R1) st (ex R6 being (VECTOR of R1) st (R19 = [ R2 , R3 ] & R20 = [ R5 , R6 ] & R2 , R3 , R5 , R6 are_DTr_wrt R8 , R10))))))))
and
L713: (for R19 being set holds (for R20 being set holds ([ R19 , R20 ] in C110 iff (ex R2 being (VECTOR of R1) st (ex R3 being (VECTOR of R1) st (ex R5 being (VECTOR of R1) st (ex R6 being (VECTOR of R1) st (R19 = [ R2 , R3 ] & R20 = [ R5 , R6 ] & R2 , R3 , R5 , R6 are_DTr_wrt R8 , R10))))))));
L714: (for R19 being set holds (for R20 being set holds ([ R19 , R20 ] in C109 iff [ R19 , R20 ] in C110)))
proof
let R19 being set;
let R20 being set;
L715: ([ R19 , R20 ] in C109 iff (ex R2 being (VECTOR of R1) st (ex R3 being (VECTOR of R1) st (ex R5 being (VECTOR of R1) st (ex R6 being (VECTOR of R1) st (R19 = [ R2 , R3 ] & R20 = [ R5 , R6 ] & R2 , R3 , R5 , R6 are_DTr_wrt R8 , R10)))))) by L712;
thus L716: thesis by L715 , L713;
end;
thus L717: thesis by L714 , RELAT_1:def 2;
end;
end;
theorem
L719: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ([ [ R2 , R5 ] , [ R3 , R6 ] ] in ( DTrapezium (R1 , R8 , R10) ) iff R2 , R5 , R3 , R6 are_DTr_wrt R8 , R10))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
L720:
now
assume L721: [ [ R2 , R5 ] , [ R3 , R6 ] ] in ( DTrapezium (R1 , R8 , R10) );
consider C111 , C112 , C113 , C114 being (VECTOR of R1) such that L722: [ R2 , R5 ] = [ C111 , C112 ] and L723: [ R3 , R6 ] = [ C113 , C114 ] and L724: C111 , C112 , C113 , C114 are_DTr_wrt R8 , R10 by L721 , L707;
L725: R3 = C113 by L723 , XTUPLE_0:1;
L726: (R2 = C111 & R5 = C112) by L722 , XTUPLE_0:1;
thus L727: R2 , R5 , R3 , R6 are_DTr_wrt R8 , R10 by L726 , L723 , L724 , L725 , XTUPLE_0:1;
end;
thus L728: thesis by L720 , L707;
end;
definition
let R1 being RealLinearSpace;
func MidPoint R1 -> (BinOp of (the carrier of R1)) means 
:L729: (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds ( it . (R2 , R5) ) = ( R2 # R5 )));
existence
proof
deffunc H1((VECTOR of R1) , (VECTOR of R1)) = ( $1 # $2 );
L730: (ex B95 being (BinOp of (the carrier of R1)) st (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds ( B95 . (R2 , R5) ) = H1(R2 , R5)))) from BINOP_1:sch 4;
thus L731: thesis by L730;
end;
uniqueness
proof
deffunc H2((VECTOR of R1) , (VECTOR of R1)) = ( $1 # $2 );
L732: (for B96 , B97 being (BinOp of (the carrier of R1)) holds (((for B98 , B99 being (Element of R1) holds ( B96 . (B98 , B99) ) = H2(B98 , B99)) & (for B100 , B101 being (Element of R1) holds ( B97 . (B100 , B101) ) = H2(B100 , B101))) implies B96 = B97)) from BINOP_2:sch 2;
thus L733: thesis by L732;
end;
end;
definition
struct (AffinStruct , MidStr) AfMidStruct(# carrier -> set , MIDPOINT -> (BinOp of the carrier) , CONGR -> (Relation of [: the carrier , the carrier :]) #);
end;
registration
cluster non  empty  strict for AfMidStruct;
existence
proof
set D122 = the non  empty set;
set D123 = the (BinOp of D122);
set D124 = the (Relation of [: D122 , D122 :]);
take AfMidStruct (# D122 , D123 , D124 #);
thus L736: (the carrier of AfMidStruct (# D122 , D123 , D124 #)) is non  empty;
thus L737: thesis;
end;
end;
definition
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
func DTrSpace (R1 , R8 , R10) ->  strict AfMidStruct equals 
AfMidStruct (# (the carrier of R1) , ( MidPoint R1 ) , ( DTrapezium (R1 , R8 , R10) ) #);
correctness;
end;
registration
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
cluster ( DTrSpace (R1 , R8 , R10) ) -> non  empty;
coherence;
end;
definition
let C115 being AfMidStruct;
func Af C115 ->  strict AffinStruct equals 
AffinStruct (# (the carrier of C115) , (the CONGR of C115) #);
correctness;
end;
registration
let C116 being non  empty AfMidStruct;
cluster ( Af C116 ) -> non  empty;
coherence;
end;
definition
let C117 being non  empty AfMidStruct;
let C118 , C119 being (Element of C117);
func C118 # C119 -> (Element of C117) equals 
( (the MIDPOINT of C117) . (C118 , C119) );
correctness;
end;
theorem
L744: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for B102 being set holds (B102 is (Element of (the carrier of ( DTrSpace (R1 , R8 , R10) ))) iff B102 is (VECTOR of R1))))));
theorem
L745: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R3 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R6 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R21 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R22 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R25 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R27 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds ((R2 = R21 & R5 = R22 & R3 = R25 & R6 = R27) implies (R21 , R22 // R25 , R27 iff R2 , R5 , R3 , R6 are_DTr_wrt R8 , R10)))))))))))))
proof
let R1 being RealLinearSpace;
let R2 being (VECTOR of R1);
let R3 being (VECTOR of R1);
let R5 being (VECTOR of R1);
let R6 being (VECTOR of R1);
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R21 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R22 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R25 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R27 being (Element of ( DTrSpace (R1 , R8 , R10) ));
assume L746: (R2 = R21 & R5 = R22 & R3 = R25 & R6 = R27);
thus L747:now
assume L748: R21 , R22 // R25 , R27;
L749: [ [ R21 , R22 ] , [ R25 , R27 ] ] in ( DTrapezium (R1 , R8 , R10) ) by L748 , ANALOAF:def 2;
thus L750: R2 , R5 , R3 , R6 are_DTr_wrt R8 , R10 by L749 , L746 , L719;
end;
assume L751: R2 , R5 , R3 , R6 are_DTr_wrt R8 , R10;
L752: [ [ R21 , R22 ] , [ R25 , R27 ] ] in ( DTrapezium (R1 , R8 , R10) ) by L751 , L746 , L719;
thus L753: R21 , R22 // R25 , R27 by L752 , ANALOAF:def 2;
end;
theorem
L754: (for R1 being RealLinearSpace holds (for R2 being (VECTOR of R1) holds (for R5 being (VECTOR of R1) holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R21 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R22 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (( Gen R8 , R10 & R2 = R21 & R5 = R22) implies ( R2 # R5 ) = ( R21 # R22 ))))))))) by L729;
L755: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R21 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R22 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R23 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (( Gen R8 , R10 & R21 , R22 // R22 , R23) implies (R21 = R22 & R22 = R23))))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R21 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R22 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R23 being (Element of ( DTrSpace (R1 , R8 , R10) ));
assume that
L756:  Gen R8 , R10
and
L757: R21 , R22 // R22 , R23;
reconsider D125 = R21 , D126 = R22 , D127 = R23 as (VECTOR of R1);
L758: D125 , D126 , D126 , D127 are_DTr_wrt R8 , R10 by L757 , L745;
thus L759: thesis by L758 , L756 , L210;
end;
L760: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R21 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R22 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R25 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R27 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R28 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R29 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (( Gen R8 , R10 & R21 , R22 // R25 , R27 & R21 , R22 // R28 , R29 & R21 <> R22) implies R25 , R27 // R28 , R29))))))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R21 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R22 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R25 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R27 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R28 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R29 being (Element of ( DTrSpace (R1 , R8 , R10) ));
assume that
L761:  Gen R8 , R10
and
L762: (R21 , R22 // R25 , R27 & R21 , R22 // R28 , R29)
and
L763: R21 <> R22;
reconsider D128 = R21 , D129 = R22 , D130 = R25 , D131 = R27 , D132 = R28 , D133 = R29 as (VECTOR of R1);
L764: (D128 , D129 , D130 , D131 are_DTr_wrt R8 , R10 & D128 , D129 , D132 , D133 are_DTr_wrt R8 , R10) by L762 , L745;
L765: D130 , D131 , D132 , D133 are_DTr_wrt R8 , R10 by L764 , L761 , L763 , L249;
thus L766: thesis by L765 , L745;
end;
L767: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R21 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R22 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R23 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R24 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (R21 , R22 // R23 , R24 implies (R23 , R24 // R21 , R22 & R22 , R21 // R24 , R23)))))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R21 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R22 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R23 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R24 being (Element of ( DTrSpace (R1 , R8 , R10) ));
reconsider D134 = R21 , D135 = R22 , D136 = R23 , D137 = R24 as (VECTOR of R1);
assume L768: R21 , R22 // R23 , R24;
L769: D134 , D135 , D136 , D137 are_DTr_wrt R8 , R10 by L768 , L745;
L770: (D135 , D134 , D137 , D136 are_DTr_wrt R8 , R10 & D136 , D137 , D134 , D135 are_DTr_wrt R8 , R10) by L769 , L302 , L311;
thus L771: thesis by L770 , L745;
end;
L772: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R21 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R22 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R23 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds ( Gen R8 , R10 implies (ex R24 being (Element of ( DTrSpace (R1 , R8 , R10) )) st (R21 , R22 // R23 , R24 or R21 , R22 // R24 , R23)))))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R21 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R22 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R23 being (Element of ( DTrSpace (R1 , R8 , R10) ));
reconsider D138 = R21 , D139 = R22 , D140 = R23 as (VECTOR of R1);
assume L773:  Gen R8 , R10;
consider C120 being (VECTOR of R1) such that L774: (D138 , D139 , D140 , C120 are_DTr_wrt R8 , R10 or D138 , D139 , C120 , D140 are_DTr_wrt R8 , R10) by L773 , L264;
reconsider D141 = C120 as (Element of ( DTrSpace (R1 , R8 , R10) ));
L775: (R21 , R22 // R23 , D141 or R21 , R22 // D141 , R23) by L774 , L745;
thus L776: thesis by L775;
end;
L777: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R21 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R22 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R23 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R29 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R30 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (( Gen R8 , R10 & R21 , R22 // R23 , R29 & R21 , R22 // R23 , R30) implies (R21 = R22 or R29 = R30))))))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R21 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R22 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R23 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R29 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R30 being (Element of ( DTrSpace (R1 , R8 , R10) ));
assume that
L778:  Gen R8 , R10
and
L779: (R21 , R22 // R23 , R29 & R21 , R22 // R23 , R30);
reconsider D142 = R21 , D143 = R22 , D144 = R23 , D145 = R29 , D146 = R30 as (VECTOR of R1);
L780: (D142 , D143 , D144 , D145 are_DTr_wrt R8 , R10 & D142 , D143 , D144 , D146 are_DTr_wrt R8 , R10) by L779 , L745;
thus L781: thesis by L780 , L778 , L389;
end;
L782: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R21 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R22 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds ( R21 # R22 ) = ( R22 # R21 ))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R21 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R22 being (Element of ( DTrSpace (R1 , R8 , R10) ));
reconsider D147 = R21 , D148 = R22 as (VECTOR of R1);
thus L783: ( R21 # R22 ) = ( D147 # D148 ) by L729
.= ( R22 # R21 ) by L729;
end;
L784: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R21 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds ( R21 # R21 ) = R21))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R21 being (Element of ( DTrSpace (R1 , R8 , R10) ));
reconsider D149 = R21 as (VECTOR of R1);
L785: ( D149 # D149 ) = D149;
thus L786: thesis by L785 , L729;
end;
L787: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R21 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R22 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R23 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R24 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds ( ( R21 # R22 ) # ( R23 # R24 ) ) = ( ( R21 # R23 ) # ( R22 # R24 ) ))))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R21 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R22 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R23 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R24 being (Element of ( DTrSpace (R1 , R8 , R10) ));
reconsider D150 = R21 , D151 = R22 , D152 = R23 , D153 = R24 as (VECTOR of R1);
set D154 = ( R21 # R22 );
set D155 = ( R23 # R24 );
set D156 = ( R21 # R23 );
set D157 = ( R22 # R24 );
set D158 = ( D150 # D151 );
set D159 = ( D152 # D153 );
set D160 = ( D150 # D152 );
set D161 = ( D151 # D153 );
L788: (D156 = D160 & D157 = D161) by L729;
L789: (D154 = D158 & D155 = D159) by L729;
thus L790: ( D154 # D155 ) = ( D158 # D159 ) by L789 , L729
.= ( D160 # D161 ) by L61
.= ( D156 # D157 ) by L788 , L729;
end;
L791: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R21 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R22 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (ex R31 being (Element of ( DTrSpace (R1 , R8 , R10) )) st ( R31 # R21 ) = R22))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R21 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R22 being (Element of ( DTrSpace (R1 , R8 , R10) ));
reconsider D162 = R21 , D163 = R22 as (VECTOR of R1);
consider R3 being (VECTOR of R1) such that L792: ( D162 # R3 ) = D163 by L58;
reconsider D164 = R3 as (Element of ( DTrSpace (R1 , R8 , R10) ));
L793: ( D164 # R21 ) = ( D162 # R3 ) by L729;
thus L794: thesis by L793 , L792;
end;
L795: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R21 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R25 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R26 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (( R21 # R25 ) = ( R21 # R26 ) implies R25 = R26)))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R21 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R25 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R26 being (Element of ( DTrSpace (R1 , R8 , R10) ));
assume L796: ( R21 # R25 ) = ( R21 # R26 );
reconsider D165 = R21 , D166 = R25 , D167 = R26 as (VECTOR of R1);
L797: (( D165 # D166 ) = ( R21 # R25 ) & ( D165 # D167 ) = ( R21 # R26 )) by L729;
thus L798: thesis by L797 , L796 , L69;
end;
L799: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R21 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R22 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R23 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R24 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (( Gen R8 , R10 & R21 , R22 // R23 , R24) implies R21 , R22 // ( R21 # R23 ) , ( R22 # R24 )))))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R21 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R22 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R23 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R24 being (Element of ( DTrSpace (R1 , R8 , R10) ));
assume that
L800:  Gen R8 , R10
and
L801: R21 , R22 // R23 , R24;
reconsider D168 = R21 , D169 = R22 , D170 = R23 , D171 = R24 as (VECTOR of R1);
L802: D168 , D169 , D170 , D171 are_DTr_wrt R8 , R10 by L801 , L745;
L803: D168 , D169 , ( D168 # D170 ) , ( D169 # D171 ) are_DTr_wrt R8 , R10 by L802 , L800 , L405;
L804: (( R21 # R23 ) = ( D168 # D170 ) & ( R22 # R24 ) = ( D169 # D171 )) by L729;
thus L805: thesis by L804 , L803 , L745;
end;
L806: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R21 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R22 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R23 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R24 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (( Gen R8 , R10 & R21 , R22 // R23 , R24) implies (R21 , R22 // ( R21 # R24 ) , ( R22 # R23 ) or R21 , R22 // ( R22 # R23 ) , ( R21 # R24 ))))))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R21 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R22 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R23 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R24 being (Element of ( DTrSpace (R1 , R8 , R10) ));
assume that
L807:  Gen R8 , R10
and
L808: R21 , R22 // R23 , R24;
reconsider D172 = R21 , D173 = R22 , D174 = R23 , D175 = R24 as (VECTOR of R1);
L809: D172 , D173 , D174 , D175 are_DTr_wrt R8 , R10 by L808 , L745;
L810: (D172 , D173 , ( D172 # D175 ) , ( D173 # D174 ) are_DTr_wrt R8 , R10 or D172 , D173 , ( D173 # D174 ) , ( D172 # D175 ) are_DTr_wrt R8 , R10) by L809 , L807 , L427;
L811: (( R21 # R24 ) = ( D172 # D175 ) & ( R22 # R23 ) = ( D173 # D174 )) by L729;
thus L812: thesis by L811 , L810 , L745;
end;
L813: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R21 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R22 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R23 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R24 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R25 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R27 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R28 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R29 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R31 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds ((R21 , R22 // R23 , R24 & ( R21 # R25 ) = R31 & ( R22 # R27 ) = R31 & ( R23 # R28 ) = R31 & ( R24 # R29 ) = R31) implies R25 , R27 // R28 , R29)))))))))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R21 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R22 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R23 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R24 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R25 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R27 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R28 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R29 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R31 being (Element of ( DTrSpace (R1 , R8 , R10) ));
assume that
L814: (R21 , R22 // R23 , R24 & ( R21 # R25 ) = R31)
and
L815: (( R22 # R27 ) = R31 & ( R23 # R28 ) = R31)
and
L816: ( R24 # R29 ) = R31;
reconsider D176 = R21 , D177 = R22 , D178 = R23 , D179 = R24 , D180 = R31 , D181 = R25 , D182 = R27 , D183 = R28 , D184 = R29 as (VECTOR of R1);
L817: (D180 = ( D177 # D182 ) & D180 = ( D178 # D183 )) by L815 , L729;
L818: D180 = ( D179 # D184 ) by L816 , L729;
L819: (D176 , D177 , D178 , D179 are_DTr_wrt R8 , R10 & D180 = ( D176 # D181 )) by L814 , L729 , L745;
L820: D181 , D182 , D183 , D184 are_DTr_wrt R8 , R10 by L819 , L817 , L818 , L453;
thus L821: thesis by L820 , L745;
end;
L822: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds (for R21 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R22 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R23 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R24 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R25 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R27 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R28 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R29 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R31 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (for R32 being (Element of ( DTrSpace (R1 , R8 , R10) )) holds (( Gen R8 , R10 & R31 <> R32 & R31 , R32 // R21 , R25 & R31 , R32 // R22 , R27 & R31 , R32 // R23 , R28 & R31 , R32 // R24 , R29 & R21 , R22 // R23 , R24) implies R25 , R27 // R28 , R29))))))))))))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
let R21 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R22 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R23 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R24 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R25 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R27 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R28 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R29 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R31 being (Element of ( DTrSpace (R1 , R8 , R10) ));
let R32 being (Element of ( DTrSpace (R1 , R8 , R10) ));
assume that
L823: ( Gen R8 , R10 & R31 <> R32)
and
L824: (R31 , R32 // R21 , R25 & R31 , R32 // R22 , R27)
and
L825: (R31 , R32 // R23 , R28 & R31 , R32 // R24 , R29)
and
L826: R21 , R22 // R23 , R24;
reconsider D185 = R31 , D186 = R32 , D187 = R21 , D188 = R22 , D189 = R23 , D190 = R24 , D191 = R25 , D192 = R27 , D193 = R28 , D194 = R29 as (VECTOR of R1);
L827: (D185 , D186 , D189 , D193 are_DTr_wrt R8 , R10 & D185 , D186 , D190 , D194 are_DTr_wrt R8 , R10) by L825 , L745;
L828: D187 , D188 , D189 , D190 are_DTr_wrt R8 , R10 by L826 , L745;
L829: (D185 , D186 , D187 , D191 are_DTr_wrt R8 , R10 & D185 , D186 , D188 , D192 are_DTr_wrt R8 , R10) by L824 , L745;
L830: D191 , D192 , D193 , D194 are_DTr_wrt R8 , R10 by L829 , L823 , L827 , L828 , L694;
thus L831: thesis by L830 , L745;
end;
definition
let C121 being non  empty AfMidStruct;
attr C121 is  MidOrdTrapSpace-like
means
:L832: (for B103 , B104 , B105 , B106 , B107 , B108 , B109 , B110 , B111 , B112 being (Element of C121) holds (( B103 # B104 ) = ( B104 # B103 ) & ( B103 # B103 ) = B103 & ( ( B103 # B104 ) # ( B105 # B106 ) ) = ( ( B103 # B105 ) # ( B104 # B106 ) ) & (ex B113 being (Element of C121) st ( B113 # B103 ) = B104) & (( B103 # B104 ) = ( B103 # B105 ) implies B104 = B105) & (B103 , B104 // B105 , B106 implies B103 , B104 // ( B103 # B105 ) , ( B104 # B106 )) & (B103 , B104 // B105 , B106 implies (B103 , B104 // ( B103 # B106 ) , ( B104 # B105 ) or B103 , B104 // ( B104 # B105 ) , ( B103 # B106 ))) & ((B103 , B104 // B105 , B106 & ( B103 # B107 ) = B111 & ( B104 # B108 ) = B111 & ( B105 # B109 ) = B111 & ( B106 # B110 ) = B111) implies B107 , B108 // B109 , B110) & ((B111 <> B112 & B111 , B112 // B103 , B107 & B111 , B112 // B104 , B108 & B111 , B112 // B105 , B109 & B111 , B112 // B106 , B110 & B103 , B104 // B105 , B106) implies B107 , B108 // B109 , B110) & (B103 , B104 // B104 , B105 implies (B103 = B104 & B104 = B105)) & ((B103 , B104 // B107 , B108 & B103 , B104 // B109 , B110 & B103 <> B104) implies B107 , B108 // B109 , B110) & (B103 , B104 // B105 , B106 implies (B105 , B106 // B103 , B104 & B104 , B103 // B106 , B105)) & (ex B114 being (Element of C121) st (B103 , B104 // B105 , B114 or B103 , B104 // B114 , B105)) & ((B103 , B104 // B105 , B111 & B103 , B104 // B105 , B112) implies (B103 = B104 or B111 = B112))));
end;
registration
cluster  strict  MidOrdTrapSpace-like for non  empty non  empty non  empty non  empty AfMidStruct;
existence
proof
consider R1 being RealLinearSpace such that L834: (ex R8 being (VECTOR of R1) st (ex R10 being (VECTOR of R1) st  Gen R8 , R10)) by ANALMETR:3;
consider C122 , C123 being (VECTOR of R1) such that L835:  Gen C122 , C123 by L834;
set D195 = ( DTrSpace (R1 , C122 , C123) );
L836: D195 is  MidOrdTrapSpace-like
proof
let C124 , C125 , C126 , C127 , C128 , C129 , C130 , C131 , C132 , C133 being (Element of D195);
thus L837: (( C124 # C125 ) = ( C125 # C124 ) & ( C124 # C124 ) = C124 & ( ( C124 # C125 ) # ( C126 # C127 ) ) = ( ( C124 # C126 ) # ( C125 # C127 ) )) by L782 , L784 , L787;
thus L838: (ex B115 being (Element of D195) st ( B115 # C124 ) = C125) by L791;
thus L839: (( C124 # C125 ) = ( C124 # C126 ) implies C125 = C126) by L795;
thus L840: (C124 , C125 // C126 , C127 implies C124 , C125 // ( C124 # C126 ) , ( C125 # C127 )) by L835 , L799;
thus L841: (C124 , C125 // C126 , C127 implies (C124 , C125 // ( C124 # C127 ) , ( C125 # C126 ) or C124 , C125 // ( C125 # C126 ) , ( C124 # C127 ))) by L835 , L806;
thus L842: ((C124 , C125 // C126 , C127 & ( C124 # C128 ) = C132 & ( C125 # C129 ) = C132 & ( C126 # C130 ) = C132 & ( C127 # C131 ) = C132) implies C128 , C129 // C130 , C131) by L813;
thus L843: ((C132 <> C133 & C132 , C133 // C124 , C128 & C132 , C133 // C125 , C129 & C132 , C133 // C126 , C130 & C132 , C133 // C127 , C131 & C124 , C125 // C126 , C127) implies C128 , C129 // C130 , C131) by L835 , L822;
thus L844: (C124 , C125 // C125 , C126 implies (C124 = C125 & C125 = C126)) by L835 , L755;
thus L845: ((C124 , C125 // C128 , C129 & C124 , C125 // C130 , C131 & C124 <> C125) implies C128 , C129 // C130 , C131) by L835 , L760;
thus L846: (C124 , C125 // C126 , C127 implies (C126 , C127 // C124 , C125 & C125 , C124 // C127 , C126)) by L767;
thus L847: (ex B116 being (Element of D195) st (C124 , C125 // C126 , B116 or C124 , C125 // B116 , C126)) by L835 , L772;
thus L848: ((C124 , C125 // C126 , C132 & C124 , C125 // C126 , C133) implies (C124 = C125 or C132 = C133)) by L835 , L777;
end;
thus L849: thesis by L836;
end;
end;
definition
mode MidOrdTrapSpace
 is  MidOrdTrapSpace-like non  empty AfMidStruct;
end;
theorem
L852: (for R1 being RealLinearSpace holds (for R8 being (VECTOR of R1) holds (for R10 being (VECTOR of R1) holds ( Gen R8 , R10 implies ( DTrSpace (R1 , R8 , R10) ) is MidOrdTrapSpace))))
proof
let R1 being RealLinearSpace;
let R8 being (VECTOR of R1);
let R10 being (VECTOR of R1);
set D196 = ( DTrSpace (R1 , R8 , R10) );
assume L853:  Gen R8 , R10;
L854: D196 is  MidOrdTrapSpace-like
proof
let C134 , C135 , C136 , C137 , C138 , C139 , C140 , C141 , C142 , C143 being (Element of D196);
thus L855: (( C134 # C135 ) = ( C135 # C134 ) & ( C134 # C134 ) = C134 & ( ( C134 # C135 ) # ( C136 # C137 ) ) = ( ( C134 # C136 ) # ( C135 # C137 ) )) by L782 , L784 , L787;
thus L856: (ex B117 being (Element of D196) st ( B117 # C134 ) = C135) by L791;
thus L857: (( C134 # C135 ) = ( C134 # C136 ) implies C135 = C136) by L795;
thus L858: (C134 , C135 // C136 , C137 implies C134 , C135 // ( C134 # C136 ) , ( C135 # C137 )) by L853 , L799;
thus L859: (C134 , C135 // C136 , C137 implies (C134 , C135 // ( C134 # C137 ) , ( C135 # C136 ) or C134 , C135 // ( C135 # C136 ) , ( C134 # C137 ))) by L853 , L806;
thus L860: ((C134 , C135 // C136 , C137 & ( C134 # C138 ) = C142 & ( C135 # C139 ) = C142 & ( C136 # C140 ) = C142 & ( C137 # C141 ) = C142) implies C138 , C139 // C140 , C141) by L813;
thus L861: ((C142 <> C143 & C142 , C143 // C134 , C138 & C142 , C143 // C135 , C139 & C142 , C143 // C136 , C140 & C142 , C143 // C137 , C141 & C134 , C135 // C136 , C137) implies C138 , C139 // C140 , C141) by L853 , L822;
thus L862: (C134 , C135 // C135 , C136 implies (C134 = C135 & C135 = C136)) by L853 , L755;
thus L863: ((C134 , C135 // C138 , C139 & C134 , C135 // C140 , C141 & C134 <> C135) implies C138 , C139 // C140 , C141) by L853 , L760;
thus L864: (C134 , C135 // C136 , C137 implies (C136 , C137 // C134 , C135 & C135 , C134 // C137 , C136)) by L767;
thus L865: (ex B118 being (Element of D196) st (C134 , C135 // C136 , B118 or C134 , C135 // B118 , C136)) by L853 , L772;
thus L866: ((C134 , C135 // C136 , C142 & C134 , C135 // C136 , C143) implies (C134 = C135 or C142 = C143)) by L853 , L777;
end;
thus L867: thesis by L854;
end;
set D197 = the MidOrdTrapSpace;
set D198 = ( Af D197 );
L868:
now
let C144 , C145 , C146 , C147 , C148 , C149 , C150 , C151 , C152 , C153 being (Element of D198);
reconsider D199 = C144 , D200 = C145 , D201 = C146 , D202 = C147 , D203 = C148 , D204 = C149 , D205 = C150 , D206 = C151 , D207 = C152 , D208 = C153 as (Element of D197);
L869:
now
let C154 , C155 , C156 , C157 being (Element of D198);
let C158 , C159 , C160 , C161 being (Element of (the carrier of D197));
assume that
L870: (C154 = C158 & C155 = C159 & C156 = C160 & C157 = C161);
L871:
now
assume L872: C158 , C159 // C160 , C161;
L873: [ [ C154 , C155 ] , [ C156 , C157 ] ] in (the CONGR of D197) by L872 , L870 , ANALOAF:def 2;
thus L874: C154 , C155 // C156 , C157 by L873 , ANALOAF:def 2;
end;
L875:
now
assume L876: C154 , C155 // C156 , C157;
L877: [ [ C154 , C155 ] , [ C156 , C157 ] ] in (the CONGR of D197) by L876 , ANALOAF:def 2;
thus L878: C158 , C159 // C160 , C161 by L877 , L870 , ANALOAF:def 2;
end;
thus L879: (C154 , C155 // C156 , C157 iff C158 , C159 // C160 , C161) by L875 , L871;
end;
thus L880:now
assume L881: C144 , C145 // C145 , C146;
L882: D199 , D200 // D200 , D201 by L881 , L869;
thus L883: (C144 = C145 & C145 = C146) by L882 , L832;
end;
thus L884:now
assume that
L885: (C144 , C145 // C148 , C149 & C144 , C145 // C150 , C151)
and
L886: C144 <> C145;
L887: (D199 , D200 // D203 , D204 & D199 , D200 // D205 , D206) by L869 , L885;
L888: D203 , D204 // D205 , D206 by L887 , L886 , L832;
thus L889: C148 , C149 // C150 , C151 by L888 , L869;
end;
thus L890:now
assume L891: C144 , C145 // C146 , C147;
L892: D199 , D200 // D201 , D202 by L891 , L869;
L893: (D201 , D202 // D199 , D200 & D200 , D199 // D202 , D201) by L892 , L832;
thus L894: (C146 , C147 // C144 , C145 & C145 , C144 // C147 , C146) by L893 , L869;
end;
thus L895: (ex B119 being (Element of D198) st (C144 , C145 // C146 , B119 or C144 , C145 // B119 , C146))
proof
consider C162 being (Element of D197) such that L896: (D199 , D200 // D201 , C162 or D199 , D200 // C162 , D201) by L832;
reconsider D209 = C162 as (Element of D198);
take D209;
thus L897: thesis by L869 , L896;
end;

assume L898: (C144 , C145 // C146 , C152 & C144 , C145 // C146 , C153);
L899: (D199 , D200 // D201 , D207 & D199 , D200 // D201 , D208) by L898 , L869;
thus L900: (C144 = C145 or C152 = C153) by L899 , L832;
end;
definition
let C163 being non  empty AffinStruct;
attr C163 is  OrdTrapSpace-like
means
:L901: (for B120 , B121 , B122 , B123 , B124 , B125 , B126 , B127 , B128 , B129 being (Element of C163) holds ((B120 , B121 // B121 , B122 implies (B120 = B121 & B121 = B122)) & ((B120 , B121 // B124 , B125 & B120 , B121 // B126 , B127 & B120 <> B121) implies B124 , B125 // B126 , B127) & (B120 , B121 // B122 , B123 implies (B122 , B123 // B120 , B121 & B121 , B120 // B123 , B122)) & (ex B130 being (Element of C163) st (B120 , B121 // B122 , B130 or B120 , B121 // B130 , B122)) & ((B120 , B121 // B122 , B128 & B120 , B121 // B122 , B129) implies (B120 = B121 or B128 = B129))));
end;
registration
cluster  strict  OrdTrapSpace-like for non  empty non  empty non  empty non  empty AffinStruct;
existence
proof
L903: D198 is  OrdTrapSpace-like by L901 , L868;
thus L904: thesis by L903;
end;
end;
definition
mode OrdTrapSpace
 is  OrdTrapSpace-like non  empty AffinStruct;
end;
registration
let C164 being MidOrdTrapSpace;
cluster ( Af C164 ) ->  OrdTrapSpace-like;
coherence
proof
set D210 = ( Af C164 );
L907: ( Af C164 ) is  OrdTrapSpace-like
proof
let C165 , C166 , C167 , C168 , C169 , C170 , C171 , C172 , C173 , C174 being (Element of D210);
reconsider D211 = C165 , D212 = C166 , D213 = C167 , D214 = C168 , D215 = C169 , D216 = C170 , D217 = C171 , D218 = C172 , D219 = C173 , D220 = C174 as (Element of C164);
L908:
now
let C175 , C176 , C177 , C178 being (Element of D210);
let C179 , C180 , C181 , C182 being (Element of (the carrier of C164));
assume that
L909: (C175 = C179 & C176 = C180 & C177 = C181 & C178 = C182);
thus L910:now
assume L911: C175 , C176 // C177 , C178;
L912: [ [ C175 , C176 ] , [ C177 , C178 ] ] in (the CONGR of C164) by L911 , ANALOAF:def 2;
thus L913: C179 , C180 // C181 , C182 by L912 , L909 , ANALOAF:def 2;
end;
assume L914: C179 , C180 // C181 , C182;
L915: [ [ C175 , C176 ] , [ C177 , C178 ] ] in (the CONGR of C164) by L914 , L909 , ANALOAF:def 2;
thus L916: C175 , C176 // C177 , C178 by L915 , ANALOAF:def 2;
end;
thus L917:now
assume L918: C165 , C166 // C166 , C167;
L919: D211 , D212 // D212 , D213 by L918 , L908;
thus L920: (C165 = C166 & C166 = C167) by L919 , L832;
end;
thus L921:now
assume that
L922: (C165 , C166 // C169 , C170 & C165 , C166 // C171 , C172)
and
L923: C165 <> C166;
L924: (D211 , D212 // D215 , D216 & D211 , D212 // D217 , D218) by L908 , L922;
L925: D215 , D216 // D217 , D218 by L924 , L923 , L832;
thus L926: C169 , C170 // C171 , C172 by L925 , L908;
end;
thus L927:now
assume L928: C165 , C166 // C167 , C168;
L929: D211 , D212 // D213 , D214 by L928 , L908;
L930: (D213 , D214 // D211 , D212 & D212 , D211 // D214 , D213) by L929 , L832;
thus L931: (C167 , C168 // C165 , C166 & C166 , C165 // C168 , C167) by L930 , L908;
end;
thus L932: (ex B131 being (Element of D210) st (C165 , C166 // C167 , B131 or C165 , C166 // B131 , C167))
proof
consider C183 being (Element of C164) such that L933: (D211 , D212 // D213 , C183 or D211 , D212 // C183 , D213) by L832;
reconsider D221 = C183 as (Element of D210);
take D221;
thus L934: thesis by L908 , L933;
end;

assume L935: (C165 , C166 // C167 , C173 & C165 , C166 // C167 , C174);
L936: (D211 , D212 // D213 , D219 & D211 , D212 // D213 , D220) by L935 , L908;
thus L937: (C165 = C166 or C173 = C174) by L936 , L832;
end;
thus L938: thesis by L907;
end;
end;
theorem
L940: (for R33 being OrdTrapSpace holds (for B132 being set holds (B132 is (Element of R33) iff B132 is (Element of ( Lambda R33 )))))
proof
let R33 being OrdTrapSpace;
let C184 being set;
L941: ( Lambda R33 ) = AffinStruct (# (the carrier of R33) , ( lambda (the CONGR of R33) ) #) by DIRAF:def 2;
thus L942: thesis by L941;
end;
theorem
L943: (for R33 being OrdTrapSpace holds (for R34 being (Element of R33) holds (for R35 being (Element of R33) holds (for R36 being (Element of R33) holds (for R37 being (Element of R33) holds (for R38 being (Element of ( Lambda R33 )) holds (for R39 being (Element of ( Lambda R33 )) holds (for R40 being (Element of ( Lambda R33 )) holds (for R41 being (Element of ( Lambda R33 )) holds ((R34 = R38 & R35 = R39 & R36 = R40 & R37 = R41) implies (R38 , R39 // R40 , R41 iff (R34 , R35 // R36 , R37 or R34 , R35 // R37 , R36))))))))))))
proof
let R33 being OrdTrapSpace;
let R34 being (Element of R33);
let R35 being (Element of R33);
let R36 being (Element of R33);
let R37 being (Element of R33);
let R38 being (Element of ( Lambda R33 ));
let R39 being (Element of ( Lambda R33 ));
let R40 being (Element of ( Lambda R33 ));
let R41 being (Element of ( Lambda R33 ));
L944: ( Lambda R33 ) = AffinStruct (# (the carrier of R33) , ( lambda (the CONGR of R33) ) #) by DIRAF:def 2;
assume L945: (R34 = R38 & R35 = R39 & R36 = R40 & R37 = R41);
thus L946:now
assume L947: R38 , R39 // R40 , R41;
L948: [ [ R38 , R39 ] , [ R40 , R41 ] ] in ( lambda (the CONGR of R33) ) by L947 , L944 , ANALOAF:def 2;
L949: ([ [ R34 , R35 ] , [ R36 , R37 ] ] in (the CONGR of R33) or [ [ R34 , R35 ] , [ R37 , R36 ] ] in (the CONGR of R33)) by L948 , L945 , DIRAF:def 1;
thus L950: (R34 , R35 // R36 , R37 or R34 , R35 // R37 , R36) by L949 , ANALOAF:def 2;
end;
assume L951: (R34 , R35 // R36 , R37 or R34 , R35 // R37 , R36);
L952: ([ [ R34 , R35 ] , [ R36 , R37 ] ] in (the CONGR of R33) or [ [ R34 , R35 ] , [ R37 , R36 ] ] in (the CONGR of R33)) by L951 , ANALOAF:def 2;
L953: [ [ R34 , R35 ] , [ R36 , R37 ] ] in (the CONGR of ( Lambda R33 )) by L952 , L944 , DIRAF:def 1;
thus L954: thesis by L953 , L945 , ANALOAF:def 2;
end;
L955: (for R33 being OrdTrapSpace holds (for R38 being (Element of ( Lambda R33 )) holds (for R39 being (Element of ( Lambda R33 )) holds (for R40 being (Element of ( Lambda R33 )) holds (ex R41 being (Element of ( Lambda R33 )) st R38 , R39 // R40 , R41)))))
proof
let R33 being OrdTrapSpace;
let R38 being (Element of ( Lambda R33 ));
let R39 being (Element of ( Lambda R33 ));
let R40 being (Element of ( Lambda R33 ));
reconsider D222 = R38 , D223 = R39 , D224 = R40 as (Element of R33) by L940;
consider R37 being (Element of R33) such that L956: (D222 , D223 // D224 , R37 or D222 , D223 // R37 , D224) by L901;
reconsider D225 = R37 as (Element of ( Lambda R33 )) by L940;
take D225;
thus L957: thesis by L956 , L943;
end;
L958: (for R33 being OrdTrapSpace holds (for R38 being (Element of ( Lambda R33 )) holds (for R39 being (Element of ( Lambda R33 )) holds (for R40 being (Element of ( Lambda R33 )) holds (for R41 being (Element of ( Lambda R33 )) holds (R38 , R39 // R40 , R41 implies R40 , R41 // R38 , R39))))))
proof
let R33 being OrdTrapSpace;
let R38 being (Element of ( Lambda R33 ));
let R39 being (Element of ( Lambda R33 ));
let R40 being (Element of ( Lambda R33 ));
let R41 being (Element of ( Lambda R33 ));
reconsider D226 = R38 , D227 = R39 , D228 = R40 , D229 = R41 as (Element of (the carrier of R33)) by L940;
assume L959: R38 , R39 // R40 , R41;
per cases  by L959 , L943;
suppose L960: D226 , D227 // D228 , D229;

L961: D228 , D229 // D226 , D227 by L960 , L901;
thus L962: thesis by L961 , L943;
end;
suppose L963: D226 , D227 // D229 , D228;

L964: D227 , D226 // D228 , D229 by L963 , L901;
L965: D228 , D229 // D227 , D226 by L964 , L901;
thus L966: thesis by L965 , L943;
end;
end;
L968: (for R33 being OrdTrapSpace holds (for R38 being (Element of ( Lambda R33 )) holds (for R39 being (Element of ( Lambda R33 )) holds (for R40 being (Element of ( Lambda R33 )) holds (for R41 being (Element of ( Lambda R33 )) holds (for R42 being (Element of ( Lambda R33 )) holds (for R43 being (Element of ( Lambda R33 )) holds ((R42 <> R43 & R42 , R43 // R38 , R39 & R42 , R43 // R40 , R41) implies R38 , R39 // R40 , R41))))))))
proof
let R33 being OrdTrapSpace;
let R38 being (Element of ( Lambda R33 ));
let R39 being (Element of ( Lambda R33 ));
let R40 being (Element of ( Lambda R33 ));
let R41 being (Element of ( Lambda R33 ));
let R42 being (Element of ( Lambda R33 ));
let R43 being (Element of ( Lambda R33 ));
reconsider D230 = R42 , D231 = R43 , D232 = R38 , D233 = R39 , D234 = R40 , D235 = R41 as (Element of R33) by L940;
assume that
L969: R42 <> R43
and
L970: R42 , R43 // R38 , R39
and
L971: R42 , R43 // R40 , R41;
L972: (D230 , D231 // D234 , D235 or D230 , D231 // D235 , D234) by L971 , L943;
L973: (D230 , D231 // D232 , D233 or D230 , D231 // D233 , D232) by L970 , L943;
L974: (D232 , D233 // D234 , D235 or D232 , D233 // D235 , D234 or D233 , D232 // D234 , D235 or D233 , D232 // D235 , D234) by L973 , L969 , L972 , L901;
L975: (D232 , D233 // D234 , D235 or D232 , D233 // D235 , D234) by L974 , L901;
thus L976: thesis by L975 , L943;
end;
L977: (for R33 being OrdTrapSpace holds (for R38 being (Element of ( Lambda R33 )) holds (for R39 being (Element of ( Lambda R33 )) holds (for R40 being (Element of ( Lambda R33 )) holds (for R41 being (Element of ( Lambda R33 )) holds (for R44 being (Element of ( Lambda R33 )) holds ((R38 , R39 // R40 , R41 & R38 , R39 // R40 , R44) implies (R38 = R39 or R41 = R44))))))))
proof
let R33 being OrdTrapSpace;
let R38 being (Element of ( Lambda R33 ));
let R39 being (Element of ( Lambda R33 ));
let R40 being (Element of ( Lambda R33 ));
let R41 being (Element of ( Lambda R33 ));
let R44 being (Element of ( Lambda R33 ));
reconsider D236 = R38 , D237 = R39 , D238 = R40 , D239 = R41 , D240 = R44 as (Element of R33) by L940;
assume L978: (R38 , R39 // R40 , R41 & R38 , R39 // R40 , R44);
L979: ((D236 , D237 // D238 , D239 & D236 , D237 // D238 , D240) or (D236 , D237 // D238 , D239 & D236 , D237 // D240 , D238) or (D236 , D237 // D239 , D238 & D236 , D237 // D238 , D240) or (D236 , D237 // D239 , D238 & D236 , D237 // D240 , D238)) by L978 , L943;
assume L980: R38 <> R39;
L981: (D239 = D240 or D240 , D238 // D238 , D239 or D239 , D238 // D238 , D240 or (D237 , D236 // D238 , D239 & D237 , D236 // D238 , D240)) by L980 , L979 , L901;
L982: (D239 = D240 or (D238 = D239 & D238 = D240)) by L981 , L980 , L901;
thus L983: thesis by L982;
end;
L984: (for R33 being OrdTrapSpace holds (for R34 being (Element of R33) holds (for R35 being (Element of R33) holds R34 , R35 // R34 , R35)))
proof
let R33 being OrdTrapSpace;
let R34 being (Element of R33);
let R35 being (Element of R33);
consider R36 being (Element of R33) such that L985: (R34 , R35 // R34 , R36 or R34 , R35 // R36 , R34) by L901;
per cases  by L985;
suppose L986: R34 , R35 // R36 , R34;

L987: R36 , R34 // R34 , R35 by L986 , L901;
L988: R36 = R34 by L987 , L901;
thus L989: thesis by L988 , L987 , L901;
end;
suppose L990: R34 , R35 // R34 , R36;

per cases ;
suppose L991: R34 <> R36;

L992: R34 , R36 // R34 , R35 by L990 , L901;
thus L993: thesis by L992 , L991 , L901;
end;
suppose L994: R34 = R36;

L995: R34 , R34 // R34 , R35 by L994 , L990 , L901;
thus L996: thesis by L995 , L901;
end;
end;
end;
L999: (for R33 being OrdTrapSpace holds (for R38 being (Element of ( Lambda R33 )) holds (for R39 being (Element of ( Lambda R33 )) holds R38 , R39 // R39 , R38)))
proof
let R33 being OrdTrapSpace;
let R38 being (Element of ( Lambda R33 ));
let R39 being (Element of ( Lambda R33 ));
reconsider D241 = R38 , D242 = R39 as (Element of R33) by L940;
L1000: D241 , D242 // D241 , D242 by L984;
thus L1001: thesis by L1000 , L943;
end;
definition
let C185 being non  empty AffinStruct;
attr C185 is  TrapSpace-like
means
(for B133 , B134 , B135 , B136 , B137 , B138 being (Element of C185) holds (B133 , B134 // B134 , B133 & ((B133 , B134 // B135 , B136 & B133 , B134 // B135 , B138) implies (B133 = B134 or B136 = B138)) & ((B137 <> B138 & B137 , B138 // B133 , B134 & B137 , B138 // B135 , B136) implies B133 , B134 // B135 , B136) & (B133 , B134 // B135 , B136 implies B135 , B136 // B133 , B134) & (ex B139 being (Element of C185) st B133 , B134 // B135 , B139)));
end;
L1003: (for B140 being OrdTrapSpace holds ( Lambda B140 ) is  TrapSpace-like)
proof
let C186 being OrdTrapSpace;
set D243 = ( Lambda C186 );
let C187 , C188 , C189 , C190 , C191 , C192 being (Element of D243);
thus L1004: C187 , C188 // C188 , C187 by L999;
thus L1005: ((C187 , C188 // C189 , C190 & C187 , C188 // C189 , C192) implies (C187 = C188 or C190 = C192)) by L977;
thus L1006: ((C191 <> C192 & C191 , C192 // C187 , C188 & C191 , C192 // C189 , C190) implies C187 , C188 // C189 , C190) by L968;
thus L1007: (C187 , C188 // C189 , C190 implies C189 , C190 // C187 , C188) by L958;
thus L1008: (ex B141 being (Element of D243) st C187 , C188 // C189 , B141) by L955;
end;
registration
cluster  strict  TrapSpace-like for non  empty non  empty non  empty non  empty AffinStruct;
existence
proof
set D244 = ( Lambda the OrdTrapSpace );
L1009: D244 is  TrapSpace-like by L1003;
thus L1010: thesis by L1009;
end;
end;
definition
mode TrapSpace
 is  TrapSpace-like non  empty AffinStruct;
end;
registration
let C193 being OrdTrapSpace;
cluster ( Lambda C193 ) ->  TrapSpace-like;
correctness by L1003;
end;
definition
let C194 being non  empty AffinStruct;
attr C194 is  Regular
means
:L1014: (for B142 , B143 , B144 , B145 , B146 , B147 , B148 , B149 , B150 , B151 being (Element of C194) holds ((B142 <> B143 & B142 , B143 // B144 , B145 & B142 , B143 // B146 , B147 & B142 , B143 // B148 , B149 & B142 , B143 // B150 , B151 & B144 , B146 // B148 , B150) implies B145 , B147 // B149 , B151));
end;
registration
cluster  strict  Regular for non  empty non  empty non  empty non  empty OrdTrapSpace;
existence
proof
set D245 = the MidOrdTrapSpace;
set D246 = ( Af D245 );
L1016:
now
let C195 , C196 , C197 , C198 being (Element of D246);
let C199 , C200 , C201 , C202 being (Element of (the carrier of D245));
assume that
L1017: (C195 = C199 & C196 = C200 & C197 = C201 & C198 = C202);
thus L1018:now
assume L1019: C195 , C196 // C197 , C198;
L1020: [ [ C195 , C196 ] , [ C197 , C198 ] ] in (the CONGR of D245) by L1019 , ANALOAF:def 2;
thus L1021: C199 , C200 // C201 , C202 by L1020 , L1017 , ANALOAF:def 2;
end;
assume L1022: C199 , C200 // C201 , C202;
L1023: [ [ C195 , C196 ] , [ C197 , C198 ] ] in (the CONGR of D245) by L1022 , L1017 , ANALOAF:def 2;
thus L1024: C195 , C196 // C197 , C198 by L1023 , ANALOAF:def 2;
end;
L1025: D246 is  Regular
proof
let C203 , C204 , C205 , C206 , C207 , C208 , C209 , C210 , C211 , C212 being (Element of D246);
assume that
L1026: C203 <> C204
and
L1027: (C203 , C204 // C205 , C206 & C203 , C204 // C207 , C208)
and
L1028: (C203 , C204 // C209 , C210 & C203 , C204 // C211 , C212)
and
L1029: C205 , C207 // C209 , C211;
reconsider D247 = C205 , D248 = C207 , D249 = C209 , D250 = C211 , D251 = C206 , D252 = C208 , D253 = C210 , D254 = C212 , D255 = C203 , D256 = C204 as (Element of D245);
L1030: (D255 , D256 // D249 , D253 & D255 , D256 // D250 , D254) by L1016 , L1028;
L1031: D247 , D248 // D249 , D250 by L1016 , L1029;
L1032: (D255 , D256 // D247 , D251 & D255 , D256 // D248 , D252) by L1016 , L1027;
L1033: D251 , D252 // D253 , D254 by L1032 , L1026 , L1030 , L1031 , L832;
thus L1034: C206 , C208 // C210 , C212 by L1033 , L1016;
end;
thus L1035: thesis by L1025;
end;
end;
registration
let C213 being MidOrdTrapSpace;
cluster ( Af C213 ) ->  Regular;
correctness
proof
set D257 = ( Af C213 );
L1037:
now
let C214 , C215 , C216 , C217 , C218 , C219 , C220 , C221 , C222 , C223 being (Element of D257);
assume that
L1038: C214 <> C215
and
L1039: (C214 , C215 // C216 , C217 & C214 , C215 // C218 , C219)
and
L1040: (C214 , C215 // C220 , C221 & C214 , C215 // C222 , C223)
and
L1041: C216 , C218 // C220 , C222;
reconsider D258 = C216 , D259 = C218 , D260 = C220 , D261 = C222 , D262 = C217 , D263 = C219 , D264 = C221 , D265 = C223 , D266 = C214 , D267 = C215 as (Element of C213);
L1042:
now
let C224 , C225 , C226 , C227 being (Element of D257);
let C228 , C229 , C230 , C231 being (Element of (the carrier of C213));
assume that
L1043: (C224 = C228 & C225 = C229 & C226 = C230 & C227 = C231);
thus L1044:now
assume L1045: C224 , C225 // C226 , C227;
L1046: [ [ C224 , C225 ] , [ C226 , C227 ] ] in (the CONGR of C213) by L1045 , ANALOAF:def 2;
thus L1047: C228 , C229 // C230 , C231 by L1046 , L1043 , ANALOAF:def 2;
end;
assume L1048: C228 , C229 // C230 , C231;
L1049: [ [ C224 , C225 ] , [ C226 , C227 ] ] in (the CONGR of C213) by L1048 , L1043 , ANALOAF:def 2;
thus L1050: C224 , C225 // C226 , C227 by L1049 , ANALOAF:def 2;
end;
L1051: (D266 , D267 // D260 , D264 & D266 , D267 // D261 , D265) by L1042 , L1040;
L1052: D258 , D259 // D260 , D261 by L1041 , L1042;
L1053: (D266 , D267 // D258 , D262 & D266 , D267 // D259 , D263) by L1039 , L1042;
L1054: D262 , D263 // D264 , D265 by L1053 , L1038 , L1051 , L1052 , L832;
thus L1055: C217 , C219 // C221 , C223 by L1054 , L1042;
end;
thus L1056: thesis by L1037 , L1014;
end;
end;
