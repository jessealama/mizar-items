:: Replacing of Variables in Formulas of ZF Theory
::  by Grzegorz Bancerek
::
:: Received August 10, 1990
:: Copyright (c) 1990-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, ZF_LANG, XBOOLEAN, XXREAL_0, BVFUNC_2, CLASSES2,
      FUNCT_1, CARD_1, FINSEQ_1, ARYTM_3, TARSKI, XBOOLE_0, ZF_MODEL, SUBSET_1,
      REALSET1, RELAT_1, FUNCT_4, FINSET_1, NAT_1, ZFMISC_1, ORDINAL4,
      ZF_LANG1;
 notations TARSKI, XBOOLE_0, ENUMSET1, ZFMISC_1, SUBSET_1, NUMBERS, ORDINAL1,
      NAT_1, RELAT_1, FUNCT_1, FUNCT_2, FINSEQ_1, FINSET_1, ZF_LANG, ZF_MODEL,
      XXREAL_0, FUNCT_7;
 constructors ENUMSET1, XXREAL_0, XREAL_0, NAT_1, ZF_MODEL, FUNCT_7, RELSET_1;
 registrations XBOOLE_0, SUBSET_1, ORDINAL1, RELSET_1, FINSET_1, XXREAL_0,
      NAT_1, FINSEQ_1, ZF_LANG;
 requirements NUMERALS, REAL, BOOLE, SUBSET, ARITHM;
 definitions TARSKI, ZF_LANG, ZF_MODEL, XBOOLE_0;
 theorems TARSKI, ZFMISC_1, ENUMSET1, NAT_1, FINSEQ_1, FINSEQ_3, FUNCT_1,
      FUNCT_2, ZF_LANG, ZF_MODEL, ZFMODEL1, RELSET_1, XBOOLE_0, XBOOLE_1,
      XXREAL_0, ORDINAL1, FUNCT_7, RELAT_1;
 schemes PARTFUN1, ZF_LANG;

begin
theorem
L1: (for R13 being Variable holds (for R16 being Variable holds (( Var1 ( R13 '=' R16 ) ) = R13 & ( Var2 ( R13 '=' R16 ) ) = R16)))
proof
let R13 being Variable;
let R16 being Variable;
L2: ( R13 '=' R16 ) is  being_equality by ZF_LANG:5;
L3: ( R13 '=' R16 ) = ( ( Var1 ( R13 '=' R16 ) ) '=' ( Var2 ( R13 '=' R16 ) ) ) by L2 , ZF_LANG:36;
thus L4: thesis by L3 , ZF_LANG:1;
end;
theorem
L5: (for R13 being Variable holds (for R16 being Variable holds (( Var1 ( R13 'in' R16 ) ) = R13 & ( Var2 ( R13 'in' R16 ) ) = R16)))
proof
let R13 being Variable;
let R16 being Variable;
L6: ( R13 'in' R16 ) is  being_membership by ZF_LANG:5;
L7: ( R13 'in' R16 ) = ( ( Var1 ( R13 'in' R16 ) ) 'in' ( Var2 ( R13 'in' R16 ) ) ) by L6 , ZF_LANG:37;
thus L8: thesis by L7 , ZF_LANG:2;
end;
theorem
L9: (for R1 being ZF-formula holds ( the_argument_of ( 'not' R1 ) ) = R1)
proof
let R1 being ZF-formula;
L10: ( 'not' R1 ) is  negative by ZF_LANG:5;
thus L11: thesis by L10 , ZF_LANG:def 30;
end;
theorem
L12: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (( the_left_argument_of ( R1 '&' R4 ) ) = R1 & ( the_right_argument_of ( R1 '&' R4 ) ) = R4)))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
L13: ( R1 '&' R4 ) is  conjunctive by ZF_LANG:5;
L14: ( R1 '&' R4 ) = ( ( the_left_argument_of ( R1 '&' R4 ) ) '&' ( the_right_argument_of ( R1 '&' R4 ) ) ) by L13 , ZF_LANG:40;
thus L15: thesis by L14 , ZF_LANG:30;
end;
theorem
L16: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (( the_left_argument_of ( R1 'or' R4 ) ) = R1 & ( the_right_argument_of ( R1 'or' R4 ) ) = R4)))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
L17: ( R1 'or' R4 ) is  disjunctive by ZF_LANG:6;
L18: ( R1 'or' R4 ) = ( ( the_left_argument_of ( R1 'or' R4 ) ) 'or' ( the_right_argument_of ( R1 'or' R4 ) ) ) by L17 , ZF_LANG:41;
thus L19: thesis by L18 , ZF_LANG:31;
end;
theorem
L20: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (( the_antecedent_of ( R1 => R4 ) ) = R1 & ( the_consequent_of ( R1 => R4 ) ) = R4)))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
L21: ( R1 => R4 ) is  conditional by ZF_LANG:6;
L22: ( R1 => R4 ) = ( ( the_antecedent_of ( R1 => R4 ) ) => ( the_consequent_of ( R1 => R4 ) ) ) by L21 , ZF_LANG:47;
thus L23: thesis by L22 , ZF_LANG:32;
end;
theorem
L24: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (( the_left_side_of ( R1 <=> R4 ) ) = R1 & ( the_right_side_of ( R1 <=> R4 ) ) = R4)))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
L25: ( R1 <=> R4 ) is  biconditional by ZF_LANG:6;
L26: ( R1 <=> R4 ) = ( ( the_left_side_of ( R1 <=> R4 ) ) <=> ( the_right_side_of ( R1 <=> R4 ) ) ) by L25 , ZF_LANG:49;
thus L27: thesis by L26 , ZF_LANG:33;
end;
theorem
L28: (for R1 being ZF-formula holds (for R13 being Variable holds (( bound_in ( All (R13 , R1) ) ) = R13 & ( the_scope_of ( All (R13 , R1) ) ) = R1)))
proof
let R1 being ZF-formula;
let R13 being Variable;
L29: ( All (R13 , R1) ) is  universal by ZF_LANG:5;
L30: ( All (R13 , R1) ) = ( All (( bound_in ( All (R13 , R1) ) ) , ( the_scope_of ( All (R13 , R1) ) )) ) by L29 , ZF_LANG:44;
thus L31: thesis by L30 , ZF_LANG:3;
end;
theorem
L32: (for R1 being ZF-formula holds (for R13 being Variable holds (( bound_in ( Ex (R13 , R1) ) ) = R13 & ( the_scope_of ( Ex (R13 , R1) ) ) = R1)))
proof
let R1 being ZF-formula;
let R13 being Variable;
L33: ( Ex (R13 , R1) ) is  existential by ZF_LANG:6;
L34: ( Ex (R13 , R1) ) = ( Ex (( bound_in ( Ex (R13 , R1) ) ) , ( the_scope_of ( Ex (R13 , R1) ) )) ) by L33 , ZF_LANG:45;
thus L35: thesis by L34 , ZF_LANG:34;
end;
theorem
L36: (for R1 being ZF-formula holds (for R4 being ZF-formula holds ( R1 'or' R4 ) = ( ( 'not' R1 ) => R4 )));
theorem
L37: (for R1 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (( All (R13 , R16 , R1) ) is  universal & ( bound_in ( All (R13 , R16 , R1) ) ) = R13 & ( the_scope_of ( All (R13 , R16 , R1) ) ) = ( All (R16 , R1) ))))) by L28 , ZF_LANG:5;
theorem
L38: (for R1 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (( Ex (R13 , R16 , R1) ) is  existential & ( bound_in ( Ex (R13 , R16 , R1) ) ) = R13 & ( the_scope_of ( Ex (R13 , R16 , R1) ) ) = ( Ex (R16 , R1) ))))) by L32 , ZF_LANG:6;
theorem
L39: (for R1 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (for R19 being Variable holds (( All (R13 , R16 , R19 , R1) ) = ( All (R13 , ( All (R16 , ( All (R19 , R1) )) )) ) & ( All (R13 , R16 , R19 , R1) ) = ( All (R13 , R16 , ( All (R19 , R1) )) ))))));
theorem
L40: (for R2 being ZF-formula holds (for R3 being ZF-formula holds (for R14 being Variable holds (for R15 being Variable holds (for R17 being Variable holds (for R18 being Variable holds (( All (R14 , R17 , R2) ) = ( All (R15 , R18 , R3) ) implies (R14 = R15 & R17 = R18 & R2 = R3))))))))
proof
let R2 being ZF-formula;
let R3 being ZF-formula;
let R14 being Variable;
let R15 being Variable;
let R17 being Variable;
let R18 being Variable;
assume L41: ( All (R14 , R17 , R2) ) = ( All (R15 , R18 , R3) );
L42: ( All (R17 , R2) ) = ( All (R18 , R3) ) by L41 , ZF_LANG:3;
thus L43: thesis by L42 , L41 , ZF_LANG:3;
end;
theorem
L44: (for R2 being ZF-formula holds (for R3 being ZF-formula holds (for R14 being Variable holds (for R15 being Variable holds (for R17 being Variable holds (for R18 being Variable holds (for R20 being Variable holds (for R21 being Variable holds (( All (R14 , R17 , R20 , R2) ) = ( All (R15 , R18 , R21 , R3) ) implies (R14 = R15 & R17 = R18 & R20 = R21 & R2 = R3))))))))))
proof
let R2 being ZF-formula;
let R3 being ZF-formula;
let R14 being Variable;
let R15 being Variable;
let R17 being Variable;
let R18 being Variable;
let R20 being Variable;
let R21 being Variable;
assume L45: ( All (R14 , R17 , R20 , R2) ) = ( All (R15 , R18 , R21 , R3) );
L46: ( All (R17 , R20 , R2) ) = ( All (R18 , R21 , R3) ) by L45 , ZF_LANG:3;
thus L47: thesis by L46 , L45 , L40 , ZF_LANG:3;
end;
theorem
L48: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (for R19 being Variable holds (for R22 being Variable holds (for R23 being Variable holds (( All (R13 , R16 , R19 , R1) ) = ( All (R23 , R22 , R4) ) implies (R13 = R23 & R16 = R22 & ( All (R19 , R1) ) = R4)))))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
let R19 being Variable;
let R22 being Variable;
let R23 being Variable;
L49: ( All (R13 , R16 , R19 , R1) ) = ( All (R13 , R16 , ( All (R19 , R1) )) );
thus L50: thesis by L49 , L40;
end;
theorem
L51: (for R2 being ZF-formula holds (for R3 being ZF-formula holds (for R14 being Variable holds (for R15 being Variable holds (for R17 being Variable holds (for R18 being Variable holds (( Ex (R14 , R17 , R2) ) = ( Ex (R15 , R18 , R3) ) implies (R14 = R15 & R17 = R18 & R2 = R3))))))))
proof
let R2 being ZF-formula;
let R3 being ZF-formula;
let R14 being Variable;
let R15 being Variable;
let R17 being Variable;
let R18 being Variable;
assume L52: ( Ex (R14 , R17 , R2) ) = ( Ex (R15 , R18 , R3) );
L53: ( Ex (R17 , R2) ) = ( Ex (R18 , R3) ) by L52 , ZF_LANG:34;
thus L54: thesis by L53 , L52 , ZF_LANG:34;
end;
theorem
L55: (for R1 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (for R19 being Variable holds (( Ex (R13 , R16 , R19 , R1) ) = ( Ex (R13 , ( Ex (R16 , ( Ex (R19 , R1) )) )) ) & ( Ex (R13 , R16 , R19 , R1) ) = ( Ex (R13 , R16 , ( Ex (R19 , R1) )) ))))));
theorem
L56: (for R2 being ZF-formula holds (for R3 being ZF-formula holds (for R14 being Variable holds (for R15 being Variable holds (for R17 being Variable holds (for R18 being Variable holds (for R20 being Variable holds (for R21 being Variable holds (( Ex (R14 , R17 , R20 , R2) ) = ( Ex (R15 , R18 , R21 , R3) ) implies (R14 = R15 & R17 = R18 & R20 = R21 & R2 = R3))))))))))
proof
let R2 being ZF-formula;
let R3 being ZF-formula;
let R14 being Variable;
let R15 being Variable;
let R17 being Variable;
let R18 being Variable;
let R20 being Variable;
let R21 being Variable;
assume L57: ( Ex (R14 , R17 , R20 , R2) ) = ( Ex (R15 , R18 , R21 , R3) );
L58: ( Ex (R17 , R20 , R2) ) = ( Ex (R18 , R21 , R3) ) by L57 , ZF_LANG:34;
thus L59: thesis by L58 , L57 , L51 , ZF_LANG:34;
end;
theorem
L60: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (for R19 being Variable holds (for R22 being Variable holds (for R23 being Variable holds (( Ex (R13 , R16 , R19 , R1) ) = ( Ex (R23 , R22 , R4) ) implies (R13 = R23 & R16 = R22 & ( Ex (R19 , R1) ) = R4)))))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
let R19 being Variable;
let R22 being Variable;
let R23 being Variable;
L61: ( Ex (R13 , R16 , R19 , R1) ) = ( Ex (R13 , R16 , ( Ex (R19 , R1) )) );
thus L62: thesis by L61 , L51;
end;
theorem
L63: (for R1 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (for R19 being Variable holds (( All (R13 , R16 , R19 , R1) ) is  universal & ( bound_in ( All (R13 , R16 , R19 , R1) ) ) = R13 & ( the_scope_of ( All (R13 , R16 , R19 , R1) ) ) = ( All (R16 , R19 , R1) )))))) by L28 , ZF_LANG:5;
theorem
L64: (for R1 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (for R19 being Variable holds (( Ex (R13 , R16 , R19 , R1) ) is  existential & ( bound_in ( Ex (R13 , R16 , R19 , R1) ) ) = R13 & ( the_scope_of ( Ex (R13 , R16 , R19 , R1) ) ) = ( Ex (R16 , R19 , R1) )))))) by L32 , ZF_LANG:6;
theorem
L65: (for R10 being ZF-formula holds (R10 is  disjunctive implies ( the_left_argument_of R10 ) = ( the_argument_of ( the_left_argument_of ( the_argument_of R10 ) ) )))
proof
let R10 being ZF-formula;
assume L66: R10 is  disjunctive;
L67: R10 = ( ( the_left_argument_of R10 ) 'or' ( the_right_argument_of R10 ) ) by L66 , ZF_LANG:41;
L68: ( the_argument_of R10 ) = ( ( 'not' ( the_left_argument_of R10 ) ) '&' ( 'not' ( the_right_argument_of R10 ) ) ) by L67 , L9;
L69: ( the_left_argument_of ( the_argument_of R10 ) ) = ( 'not' ( the_left_argument_of R10 ) ) by L68 , L12;
thus L70: thesis by L69 , L9;
end;
theorem
L71: (for R10 being ZF-formula holds (R10 is  disjunctive implies ( the_right_argument_of R10 ) = ( the_argument_of ( the_right_argument_of ( the_argument_of R10 ) ) )))
proof
let R10 being ZF-formula;
assume L72: R10 is  disjunctive;
L73: R10 = ( ( the_left_argument_of R10 ) 'or' ( the_right_argument_of R10 ) ) by L72 , ZF_LANG:41;
L74: ( the_argument_of R10 ) = ( ( 'not' ( the_left_argument_of R10 ) ) '&' ( 'not' ( the_right_argument_of R10 ) ) ) by L73 , L9;
L75: ( the_right_argument_of ( the_argument_of R10 ) ) = ( 'not' ( the_right_argument_of R10 ) ) by L74 , L12;
thus L76: thesis by L75 , L9;
end;
theorem
L77: (for R10 being ZF-formula holds (R10 is  conditional implies ( the_antecedent_of R10 ) = ( the_left_argument_of ( the_argument_of R10 ) )))
proof
let R10 being ZF-formula;
assume L78: R10 is  conditional;
L79: R10 = ( ( the_antecedent_of R10 ) => ( the_consequent_of R10 ) ) by L78 , ZF_LANG:47;
L80: ( the_argument_of R10 ) = ( ( the_antecedent_of R10 ) '&' ( 'not' ( the_consequent_of R10 ) ) ) by L79 , L9;
thus L81: thesis by L80 , L12;
end;
theorem
L82: (for R10 being ZF-formula holds (R10 is  conditional implies ( the_consequent_of R10 ) = ( the_argument_of ( the_right_argument_of ( the_argument_of R10 ) ) )))
proof
let R10 being ZF-formula;
assume L83: R10 is  conditional;
L84: R10 = ( ( the_antecedent_of R10 ) => ( the_consequent_of R10 ) ) by L83 , ZF_LANG:47;
L85: ( the_argument_of R10 ) = ( ( the_antecedent_of R10 ) '&' ( 'not' ( the_consequent_of R10 ) ) ) by L84 , L9;
L86: ( the_right_argument_of ( the_argument_of R10 ) ) = ( 'not' ( the_consequent_of R10 ) ) by L85 , L12;
thus L87: thesis by L86 , L9;
end;
theorem
L88: (for R10 being ZF-formula holds (R10 is  biconditional implies (( the_left_side_of R10 ) = ( the_antecedent_of ( the_left_argument_of R10 ) ) & ( the_left_side_of R10 ) = ( the_consequent_of ( the_right_argument_of R10 ) ))))
proof
let R10 being ZF-formula;
assume L89: R10 is  biconditional;
L90: R10 = ( ( the_left_side_of R10 ) <=> ( the_right_side_of R10 ) ) by L89 , ZF_LANG:49;
L91: (( the_left_argument_of R10 ) = ( ( the_left_side_of R10 ) => ( the_right_side_of R10 ) ) & ( the_right_argument_of R10 ) = ( ( the_right_side_of R10 ) => ( the_left_side_of R10 ) )) by L90 , L12;
thus L92: thesis by L91 , L20;
end;
theorem
L93: (for R10 being ZF-formula holds (R10 is  biconditional implies (( the_right_side_of R10 ) = ( the_consequent_of ( the_left_argument_of R10 ) ) & ( the_right_side_of R10 ) = ( the_antecedent_of ( the_right_argument_of R10 ) ))))
proof
let R10 being ZF-formula;
assume L94: R10 is  biconditional;
L95: R10 = ( ( the_left_side_of R10 ) <=> ( the_right_side_of R10 ) ) by L94 , ZF_LANG:49;
L96: (( the_left_argument_of R10 ) = ( ( the_left_side_of R10 ) => ( the_right_side_of R10 ) ) & ( the_right_argument_of R10 ) = ( ( the_right_side_of R10 ) => ( the_left_side_of R10 ) )) by L95 , L12;
thus L97: thesis by L96 , L20;
end;
theorem
L98: (for R10 being ZF-formula holds (R10 is  existential implies (( bound_in R10 ) = ( bound_in ( the_argument_of R10 ) ) & ( the_scope_of R10 ) = ( the_argument_of ( the_scope_of ( the_argument_of R10 ) ) ))))
proof
let R10 being ZF-formula;
assume L99: R10 is  existential;
L100: R10 = ( Ex (( bound_in R10 ) , ( the_scope_of R10 )) ) by L99 , ZF_LANG:45;
L101: ( the_argument_of R10 ) = ( All (( bound_in R10 ) , ( 'not' ( the_scope_of R10 ) )) ) by L100 , L9;
thus L102: ( bound_in R10 ) = ( bound_in ( the_argument_of R10 ) ) by L101 , L28;
L103: ( 'not' ( the_scope_of R10 ) ) = ( the_scope_of ( the_argument_of R10 ) ) by L101 , L28;
thus L104: thesis by L103 , L9;
end;
theorem
L105: (for R6 being ZF-formula holds (for R7 being ZF-formula holds (( the_argument_of ( R6 'or' R7 ) ) = ( ( 'not' R6 ) '&' ( 'not' R7 ) ) & ( the_antecedent_of ( R6 'or' R7 ) ) = ( 'not' R6 ) & ( the_consequent_of ( R6 'or' R7 ) ) = R7)))
proof
let R6 being ZF-formula;
let R7 being ZF-formula;
thus L106: ( the_argument_of ( R6 'or' R7 ) ) = ( ( 'not' R6 ) '&' ( 'not' R7 ) ) by L9;
L107: ( R6 'or' R7 ) = ( ( 'not' R6 ) => R7 );
thus L108: thesis by L107 , L20;
end;
theorem
L109: (for R6 being ZF-formula holds (for R7 being ZF-formula holds ( the_argument_of ( R6 => R7 ) ) = ( R6 '&' ( 'not' R7 ) ))) by L9;
theorem
L110: (for R6 being ZF-formula holds (for R7 being ZF-formula holds (( the_left_argument_of ( R6 <=> R7 ) ) = ( R6 => R7 ) & ( the_right_argument_of ( R6 <=> R7 ) ) = ( R7 => R6 )))) by L12;
theorem
L111: (for R10 being ZF-formula holds (for R13 being Variable holds ( the_argument_of ( Ex (R13 , R10) ) ) = ( All (R13 , ( 'not' R10 )) ))) by L9;
theorem
L112: (for R10 being ZF-formula holds (R10 is  disjunctive implies (R10 is  conditional & R10 is  negative & ( the_argument_of R10 ) is  conjunctive & ( the_left_argument_of ( the_argument_of R10 ) ) is  negative & ( the_right_argument_of ( the_argument_of R10 ) ) is  negative)))
proof
let R10 being ZF-formula;
assume L113: R10 is  disjunctive;
L114: R10 = ( ( the_left_argument_of R10 ) 'or' ( the_right_argument_of R10 ) ) by L113 , ZF_LANG:41;
L115: R10 = ( ( 'not' ( the_left_argument_of R10 ) ) => ( the_right_argument_of R10 ) ) by L114;
thus L116: (R10 is  conditional & R10 is  negative) by L115 , ZF_LANG:5 , ZF_LANG:6;
L117: ( the_argument_of R10 ) = ( ( 'not' ( the_left_argument_of R10 ) ) '&' ( 'not' ( the_right_argument_of R10 ) ) ) by L114 , L9;
thus L118: ( the_argument_of R10 ) is  conjunctive by L117 , ZF_LANG:5;
L119: (( the_left_argument_of ( the_argument_of R10 ) ) = ( 'not' ( the_left_argument_of R10 ) ) & ( the_right_argument_of ( the_argument_of R10 ) ) = ( 'not' ( the_right_argument_of R10 ) )) by L117 , L12;
thus L120: thesis by L119 , ZF_LANG:5;
end;
theorem
L121: (for R10 being ZF-formula holds (R10 is  conditional implies (R10 is  negative & ( the_argument_of R10 ) is  conjunctive & ( the_right_argument_of ( the_argument_of R10 ) ) is  negative)))
proof
let R10 being ZF-formula;
assume L122: R10 is  conditional;
L123: R10 = ( ( the_antecedent_of R10 ) => ( the_consequent_of R10 ) ) by L122 , ZF_LANG:47;
thus L124: R10 is  negative by L123 , ZF_LANG:5;
L125: ( the_argument_of R10 ) = ( ( the_antecedent_of R10 ) '&' ( 'not' ( the_consequent_of R10 ) ) ) by L123 , L9;
thus L126: ( the_argument_of R10 ) is  conjunctive by L125 , ZF_LANG:5;
L127: ( the_right_argument_of ( the_argument_of R10 ) ) = ( 'not' ( the_consequent_of R10 ) ) by L125 , L12;
thus L128: thesis by L127 , ZF_LANG:5;
end;
theorem
L129: (for R10 being ZF-formula holds (R10 is  biconditional implies (R10 is  conjunctive & ( the_left_argument_of R10 ) is  conditional & ( the_right_argument_of R10 ) is  conditional)))
proof
let R10 being ZF-formula;
assume L130: R10 is  biconditional;
L131: R10 = ( ( the_left_side_of R10 ) <=> ( the_right_side_of R10 ) ) by L130 , ZF_LANG:49;
thus L132: R10 is  conjunctive by L131 , ZF_LANG:5;
L133: (( the_left_argument_of R10 ) = ( ( the_left_side_of R10 ) => ( the_right_side_of R10 ) ) & ( the_right_argument_of R10 ) = ( ( the_right_side_of R10 ) => ( the_left_side_of R10 ) )) by L131 , L12;
thus L134: thesis by L133 , ZF_LANG:6;
end;
theorem
L135: (for R10 being ZF-formula holds (R10 is  existential implies (R10 is  negative & ( the_argument_of R10 ) is  universal & ( the_scope_of ( the_argument_of R10 ) ) is  negative)))
proof
let R10 being ZF-formula;
assume L136: R10 is  existential;
L137: R10 = ( Ex (( bound_in R10 ) , ( the_scope_of R10 )) ) by L136 , ZF_LANG:45;
thus L138: R10 is  negative by L137 , ZF_LANG:5;
L139: ( the_argument_of R10 ) = ( All (( bound_in R10 ) , ( 'not' ( the_scope_of R10 ) )) ) by L137 , L9;
thus L140: ( the_argument_of R10 ) is  universal by L139 , ZF_LANG:5;
L141: ( 'not' ( the_scope_of R10 ) ) = ( the_scope_of ( the_argument_of R10 ) ) by L139 , L28;
thus L142: thesis by L141 , ZF_LANG:5;
end;
theorem
L143: (for R10 being ZF-formula holds ((not (R10 is  being_equality & (R10 is  being_membership or R10 is  negative or R10 is  conjunctive or R10 is  universal))) & (not (R10 is  being_membership & (R10 is  negative or R10 is  conjunctive or R10 is  universal))) & (not (R10 is  negative & (R10 is  conjunctive or R10 is  universal))) & (not (R10 is  conjunctive & R10 is  universal))))
proof
let R10 being ZF-formula;
L144: (( R10 . 1 ) = ( 0 ) or ( R10 . 1 ) = 1 or ( R10 . 1 ) = 2 or ( R10 . 1 ) = 3 or ( R10 . 1 ) = 4) by ZF_LANG:23;
thus L145: thesis by L144 , ZF_LANG:18 , ZF_LANG:19 , ZF_LANG:20 , ZF_LANG:21 , ZF_LANG:22;
end;
theorem
L146: (for R6 being ZF-formula holds (for R7 being ZF-formula holds (R6 is_subformula_of R7 implies ( len R6 ) <= ( len R7 ))))
proof
let R6 being ZF-formula;
let R7 being ZF-formula;
assume L147: R6 is_subformula_of R7;
L148: (R6 is_proper_subformula_of R7 or R6 = R7) by L147 , ZF_LANG:def 41;
thus L149: thesis by L148 , ZF_LANG:62;
end;
theorem
L150: (for R6 being ZF-formula holds (for R7 being ZF-formula holds (for R10 being ZF-formula holds (((R6 is_proper_subformula_of R7 & R7 is_subformula_of R10) or (R6 is_subformula_of R7 & R7 is_proper_subformula_of R10) or (R6 is_subformula_of R7 & R7 is_immediate_constituent_of R10) or (R6 is_immediate_constituent_of R7 & R7 is_subformula_of R10) or (R6 is_proper_subformula_of R7 & R7 is_immediate_constituent_of R10) or (R6 is_immediate_constituent_of R7 & R7 is_proper_subformula_of R10)) implies R6 is_proper_subformula_of R10))))
proof
let R6 being ZF-formula;
let R7 being ZF-formula;
let R10 being ZF-formula;
L151: (R6 is_immediate_constituent_of R7 implies R6 is_proper_subformula_of R7) by ZF_LANG:61;
L152:
now
assume L153: R6 is_proper_subformula_of R7;
L154: ( len R6 ) < ( len R7 ) by L153 , ZF_LANG:62;
assume L155: R7 is_subformula_of R10;
L156: R6 is_subformula_of R7 by L153 , ZF_LANG:def 41;
L157: R6 is_subformula_of R10 by L156 , L155 , ZF_LANG:65;
L158: ( len R7 ) <= ( len R10 ) by L155 , L146;
thus L159: R6 is_proper_subformula_of R10 by L158 , L154 , L157 , ZF_LANG:def 41;
end;
L160:
now
assume that
L161: R6 is_subformula_of R7
and
L162: R7 is_proper_subformula_of R10;
L163: R7 is_subformula_of R10 by L162 , ZF_LANG:def 41;
L164: R6 is_subformula_of R10 by L163 , L161 , ZF_LANG:65;
L165: ( len R6 ) <= ( len R7 ) by L161 , L146;
L166: ( len R6 ) < ( len R10 ) by L165 , L162 , XXREAL_0:2 , ZF_LANG:62;
thus L167: thesis by L166 , L164 , ZF_LANG:def 41;
end;
L168: (R7 is_immediate_constituent_of R10 implies R7 is_proper_subformula_of R10) by ZF_LANG:61;
thus L169: thesis by L168 , L152 , L160 , L151 , ZF_LANG:64;
end;
theorem
L170: (for R10 being ZF-formula holds (not R10 is_immediate_constituent_of R10))
proof
let R10 being ZF-formula;
assume L171: R10 is_immediate_constituent_of R10;
L172: R10 is_proper_subformula_of R10 by L171 , ZF_LANG:61;
thus L173: contradiction by L172 , ZF_LANG:def 41;
end;
theorem
L174: (for R7 being ZF-formula holds (for R10 being ZF-formula holds (not (R7 is_proper_subformula_of R10 & R10 is_subformula_of R7))))
proof
let R7 being ZF-formula;
let R10 being ZF-formula;
assume L175: (R7 is_proper_subformula_of R10 & R10 is_subformula_of R7);
L176: R7 is_proper_subformula_of R7 by L175 , L150;
thus L177: contradiction by L176 , ZF_LANG:def 41;
end;
theorem
L178: (for R7 being ZF-formula holds (for R10 being ZF-formula holds (not (R7 is_proper_subformula_of R10 & R10 is_proper_subformula_of R7))))
proof
let R7 being ZF-formula;
let R10 being ZF-formula;
assume L179: (R7 is_proper_subformula_of R10 & R10 is_proper_subformula_of R7);
L180: R7 is_proper_subformula_of R7 by L179 , ZF_LANG:64;
thus L181: contradiction by L180 , ZF_LANG:def 41;
end;
theorem
L182: (for R7 being ZF-formula holds (for R10 being ZF-formula holds (not (R7 is_subformula_of R10 & R10 is_immediate_constituent_of R7))))
proof
let R7 being ZF-formula;
let R10 being ZF-formula;
assume L183: (R7 is_subformula_of R10 & R10 is_immediate_constituent_of R7);
L184: R7 is_proper_subformula_of R7 by L183 , L150;
thus L185: contradiction by L184 , ZF_LANG:def 41;
end;
theorem
L186: (for R7 being ZF-formula holds (for R10 being ZF-formula holds (not (R7 is_proper_subformula_of R10 & R10 is_immediate_constituent_of R7))))
proof
let R7 being ZF-formula;
let R10 being ZF-formula;
assume L187: (R7 is_proper_subformula_of R10 & R10 is_immediate_constituent_of R7);
L188: R7 is_proper_subformula_of R7 by L187 , L150;
thus L189: contradiction by L188 , ZF_LANG:def 41;
end;
theorem
L190: (for R6 being ZF-formula holds (for R10 being ZF-formula holds (( 'not' R6 ) is_subformula_of R10 implies R6 is_proper_subformula_of R10)))
proof
let R6 being ZF-formula;
let R10 being ZF-formula;
L191: R6 is_immediate_constituent_of ( 'not' R6 ) by ZF_LANG:def 39;
thus L192: thesis by L191 , L150;
end;
theorem
L193: (for R6 being ZF-formula holds (for R7 being ZF-formula holds (for R10 being ZF-formula holds (( R6 '&' R7 ) is_subformula_of R10 implies (R6 is_proper_subformula_of R10 & R7 is_proper_subformula_of R10)))))
proof
let R6 being ZF-formula;
let R7 being ZF-formula;
let R10 being ZF-formula;
L194: (R6 is_immediate_constituent_of ( R6 '&' R7 ) & R7 is_immediate_constituent_of ( R6 '&' R7 )) by ZF_LANG:def 39;
thus L195: thesis by L194 , L150;
end;
theorem
L196: (for R6 being ZF-formula holds (for R10 being ZF-formula holds (for R13 being Variable holds (( All (R13 , R10) ) is_subformula_of R6 implies R10 is_proper_subformula_of R6))))
proof
let R6 being ZF-formula;
let R10 being ZF-formula;
let R13 being Variable;
L197: R10 is_immediate_constituent_of ( All (R13 , R10) ) by ZF_LANG:def 39;
thus L198: thesis by L197 , L150;
end;
theorem
L199: (for R6 being ZF-formula holds (for R7 being ZF-formula holds (( R6 '&' ( 'not' R7 ) ) is_proper_subformula_of ( R6 => R7 ) & R6 is_proper_subformula_of ( R6 => R7 ) & ( 'not' R7 ) is_proper_subformula_of ( R6 => R7 ) & R7 is_proper_subformula_of ( R6 => R7 ))))
proof
let R6 being ZF-formula;
let R7 being ZF-formula;
L200: ( R6 '&' ( 'not' R7 ) ) is_immediate_constituent_of ( R6 => R7 ) by ZF_LANG:def 39;
thus L201: ( R6 '&' ( 'not' R7 ) ) is_proper_subformula_of ( R6 => R7 ) by L200 , ZF_LANG:61;
L202: (R6 is_immediate_constituent_of ( R6 '&' ( 'not' R7 ) ) & ( 'not' R7 ) is_immediate_constituent_of ( R6 '&' ( 'not' R7 ) )) by ZF_LANG:def 39;
thus L203: (R6 is_proper_subformula_of ( R6 => R7 ) & ( 'not' R7 ) is_proper_subformula_of ( R6 => R7 )) by L202 , L201 , L150;
L204: R7 is_immediate_constituent_of ( 'not' R7 ) by ZF_LANG:def 39;
thus L205: thesis by L204 , L203 , L150;
end;
theorem
L206: (for R6 being ZF-formula holds (for R7 being ZF-formula holds (( ( 'not' R6 ) '&' ( 'not' R7 ) ) is_proper_subformula_of ( R6 'or' R7 ) & ( 'not' R6 ) is_proper_subformula_of ( R6 'or' R7 ) & ( 'not' R7 ) is_proper_subformula_of ( R6 'or' R7 ) & R6 is_proper_subformula_of ( R6 'or' R7 ) & R7 is_proper_subformula_of ( R6 'or' R7 ))))
proof
let R6 being ZF-formula;
let R7 being ZF-formula;
L207: ( ( 'not' R6 ) '&' ( 'not' R7 ) ) is_immediate_constituent_of ( R6 'or' R7 ) by ZF_LANG:def 39;
thus L208: ( ( 'not' R6 ) '&' ( 'not' R7 ) ) is_proper_subformula_of ( R6 'or' R7 ) by L207 , ZF_LANG:61;
L209: (( 'not' R6 ) is_immediate_constituent_of ( ( 'not' R6 ) '&' ( 'not' R7 ) ) & ( 'not' R7 ) is_immediate_constituent_of ( ( 'not' R6 ) '&' ( 'not' R7 ) )) by ZF_LANG:def 39;
thus L210: (( 'not' R6 ) is_proper_subformula_of ( R6 'or' R7 ) & ( 'not' R7 ) is_proper_subformula_of ( R6 'or' R7 )) by L209 , L208 , L150;
L211: (R6 is_immediate_constituent_of ( 'not' R6 ) & R7 is_immediate_constituent_of ( 'not' R7 )) by ZF_LANG:def 39;
thus L212: thesis by L211 , L210 , L150;
end;
theorem
L213: (for R10 being ZF-formula holds (for R13 being Variable holds (( All (R13 , ( 'not' R10 )) ) is_proper_subformula_of ( Ex (R13 , R10) ) & ( 'not' R10 ) is_proper_subformula_of ( Ex (R13 , R10) ))))
proof
let R10 being ZF-formula;
let R13 being Variable;
L214: ( All (R13 , ( 'not' R10 )) ) is_immediate_constituent_of ( Ex (R13 , R10) ) by ZF_LANG:def 39;
thus L215: ( All (R13 , ( 'not' R10 )) ) is_proper_subformula_of ( Ex (R13 , R10) ) by L214 , ZF_LANG:61;
L216: ( 'not' R10 ) is_immediate_constituent_of ( All (R13 , ( 'not' R10 )) ) by ZF_LANG:def 39;
thus L217: thesis by L216 , L215 , L150;
end;
theorem
L218: (for R7 being ZF-formula holds (for R10 being ZF-formula holds (R7 is_subformula_of R10 iff R7 in ( Subformulae R10 )))) by ZF_LANG:78 , ZF_LANG:def 42;
theorem
L219: (for R7 being ZF-formula holds (for R10 being ZF-formula holds (R7 in ( Subformulae R10 ) implies ( Subformulae R7 ) c= ( Subformulae R10 )))) by ZF_LANG:78 , ZF_LANG:79;
theorem
L220: (for R10 being ZF-formula holds R10 in ( Subformulae R10 ))
proof
let R10 being ZF-formula;
L221: R10 is_subformula_of R10 by ZF_LANG:59;
thus L222: thesis by L221 , ZF_LANG:def 42;
end;
theorem
L223: (for R6 being ZF-formula holds (for R7 being ZF-formula holds ( Subformulae ( R6 => R7 ) ) = ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ { ( 'not' R7 ) , ( R6 '&' ( 'not' R7 ) ) , ( R6 => R7 ) } )))
proof
let R6 being ZF-formula;
let R7 being ZF-formula;
thus L224: ( Subformulae ( R6 => R7 ) ) = ( ( Subformulae ( R6 '&' ( 'not' R7 ) ) ) \/ { ( R6 => R7 ) } ) by ZF_LANG:82
.= ( ( ( ( Subformulae R6 ) \/ ( Subformulae ( 'not' R7 ) ) ) \/ { ( R6 '&' ( 'not' R7 ) ) } ) \/ { ( R6 => R7 ) } ) by ZF_LANG:83
.= ( ( ( ( Subformulae R6 ) \/ ( ( Subformulae R7 ) \/ { ( 'not' R7 ) } ) ) \/ { ( R6 '&' ( 'not' R7 ) ) } ) \/ { ( R6 => R7 ) } ) by ZF_LANG:82
.= ( ( ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ { ( 'not' R7 ) } ) \/ { ( R6 '&' ( 'not' R7 ) ) } ) \/ { ( R6 => R7 ) } ) by XBOOLE_1:4
.= ( ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ { ( 'not' R7 ) } ) \/ ( { ( R6 '&' ( 'not' R7 ) ) } \/ { ( R6 => R7 ) } ) ) by XBOOLE_1:4
.= ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ ( { ( 'not' R7 ) } \/ ( { ( R6 '&' ( 'not' R7 ) ) } \/ { ( R6 => R7 ) } ) ) ) by XBOOLE_1:4
.= ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ ( { ( 'not' R7 ) } \/ { ( R6 '&' ( 'not' R7 ) ) , ( R6 => R7 ) } ) ) by ENUMSET1:1
.= ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ { ( 'not' R7 ) , ( R6 '&' ( 'not' R7 ) ) , ( R6 => R7 ) } ) by ENUMSET1:2;
end;
theorem
L225: (for R6 being ZF-formula holds (for R7 being ZF-formula holds ( Subformulae ( R6 'or' R7 ) ) = ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ { ( 'not' R7 ) , ( 'not' R6 ) , ( ( 'not' R6 ) '&' ( 'not' R7 ) ) , ( R6 'or' R7 ) } )))
proof
let R6 being ZF-formula;
let R7 being ZF-formula;
thus L226: ( Subformulae ( R6 'or' R7 ) ) = ( ( Subformulae ( ( 'not' R6 ) '&' ( 'not' R7 ) ) ) \/ { ( R6 'or' R7 ) } ) by ZF_LANG:82
.= ( ( ( ( Subformulae ( 'not' R6 ) ) \/ ( Subformulae ( 'not' R7 ) ) ) \/ { ( ( 'not' R6 ) '&' ( 'not' R7 ) ) } ) \/ { ( R6 'or' R7 ) } ) by ZF_LANG:83
.= ( ( ( ( Subformulae ( 'not' R6 ) ) \/ ( ( Subformulae R7 ) \/ { ( 'not' R7 ) } ) ) \/ { ( ( 'not' R6 ) '&' ( 'not' R7 ) ) } ) \/ { ( R6 'or' R7 ) } ) by ZF_LANG:82
.= ( ( ( ( ( Subformulae R6 ) \/ { ( 'not' R6 ) } ) \/ ( ( Subformulae R7 ) \/ { ( 'not' R7 ) } ) ) \/ { ( ( 'not' R6 ) '&' ( 'not' R7 ) ) } ) \/ { ( R6 'or' R7 ) } ) by ZF_LANG:82
.= ( ( ( ( Subformulae R6 ) \/ ( ( ( Subformulae R7 ) \/ { ( 'not' R7 ) } ) \/ { ( 'not' R6 ) } ) ) \/ { ( ( 'not' R6 ) '&' ( 'not' R7 ) ) } ) \/ { ( R6 'or' R7 ) } ) by XBOOLE_1:4
.= ( ( ( ( Subformulae R6 ) \/ ( ( Subformulae R7 ) \/ ( { ( 'not' R7 ) } \/ { ( 'not' R6 ) } ) ) ) \/ { ( ( 'not' R6 ) '&' ( 'not' R7 ) ) } ) \/ { ( R6 'or' R7 ) } ) by XBOOLE_1:4
.= ( ( ( ( Subformulae R6 ) \/ ( ( Subformulae R7 ) \/ { ( 'not' R7 ) , ( 'not' R6 ) } ) ) \/ { ( ( 'not' R6 ) '&' ( 'not' R7 ) ) } ) \/ { ( R6 'or' R7 ) } ) by ENUMSET1:1
.= ( ( ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ { ( 'not' R7 ) , ( 'not' R6 ) } ) \/ { ( ( 'not' R6 ) '&' ( 'not' R7 ) ) } ) \/ { ( R6 'or' R7 ) } ) by XBOOLE_1:4
.= ( ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ { ( 'not' R7 ) , ( 'not' R6 ) } ) \/ ( { ( ( 'not' R6 ) '&' ( 'not' R7 ) ) } \/ { ( R6 'or' R7 ) } ) ) by XBOOLE_1:4
.= ( ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ { ( 'not' R7 ) , ( 'not' R6 ) } ) \/ { ( ( 'not' R6 ) '&' ( 'not' R7 ) ) , ( R6 'or' R7 ) } ) by ENUMSET1:1
.= ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ ( { ( 'not' R7 ) , ( 'not' R6 ) } \/ { ( ( 'not' R6 ) '&' ( 'not' R7 ) ) , ( R6 'or' R7 ) } ) ) by XBOOLE_1:4
.= ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ { ( 'not' R7 ) , ( 'not' R6 ) , ( ( 'not' R6 ) '&' ( 'not' R7 ) ) , ( R6 'or' R7 ) } ) by ENUMSET1:5;
end;
theorem
L227: (for R6 being ZF-formula holds (for R7 being ZF-formula holds ( Subformulae ( R6 <=> R7 ) ) = ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ { ( 'not' R7 ) , ( R6 '&' ( 'not' R7 ) ) , ( R6 => R7 ) , ( 'not' R6 ) , ( R7 '&' ( 'not' R6 ) ) , ( R7 => R6 ) , ( R6 <=> R7 ) } )))
proof
let R6 being ZF-formula;
let R7 being ZF-formula;
thus L228: ( Subformulae ( R6 <=> R7 ) ) = ( ( ( Subformulae ( R6 => R7 ) ) \/ ( Subformulae ( R7 => R6 ) ) ) \/ { ( R6 <=> R7 ) } ) by ZF_LANG:83
.= ( ( ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ { ( 'not' R7 ) , ( R6 '&' ( 'not' R7 ) ) , ( R6 => R7 ) } ) \/ ( Subformulae ( R7 => R6 ) ) ) \/ { ( R6 <=> R7 ) } ) by L223
.= ( ( ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ { ( 'not' R7 ) , ( R6 '&' ( 'not' R7 ) ) , ( R6 => R7 ) } ) \/ ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ { ( 'not' R6 ) , ( R7 '&' ( 'not' R6 ) ) , ( R7 => R6 ) } ) ) \/ { ( R6 <=> R7 ) } ) by L223
.= ( ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ ( ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ { ( 'not' R7 ) , ( R6 '&' ( 'not' R7 ) ) , ( R6 => R7 ) } ) \/ { ( 'not' R6 ) , ( R7 '&' ( 'not' R6 ) ) , ( R7 => R6 ) } ) ) \/ { ( R6 <=> R7 ) } ) by XBOOLE_1:4
.= ( ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ ( { ( 'not' R7 ) , ( R6 '&' ( 'not' R7 ) ) , ( R6 => R7 ) } \/ { ( 'not' R6 ) , ( R7 '&' ( 'not' R6 ) ) , ( R7 => R6 ) } ) ) ) \/ { ( R6 <=> R7 ) } ) by XBOOLE_1:4
.= ( ( ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) ) \/ ( { ( 'not' R7 ) , ( R6 '&' ( 'not' R7 ) ) , ( R6 => R7 ) } \/ { ( 'not' R6 ) , ( R7 '&' ( 'not' R6 ) ) , ( R7 => R6 ) } ) ) \/ { ( R6 <=> R7 ) } ) by XBOOLE_1:4
.= ( ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ { ( 'not' R7 ) , ( R6 '&' ( 'not' R7 ) ) , ( R6 => R7 ) , ( 'not' R6 ) , ( R7 '&' ( 'not' R6 ) ) , ( R7 => R6 ) } ) \/ { ( R6 <=> R7 ) } ) by ENUMSET1:13
.= ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ ( { ( 'not' R7 ) , ( R6 '&' ( 'not' R7 ) ) , ( R6 => R7 ) , ( 'not' R6 ) , ( R7 '&' ( 'not' R6 ) ) , ( R7 => R6 ) } \/ { ( R6 <=> R7 ) } ) ) by XBOOLE_1:4
.= ( ( ( Subformulae R6 ) \/ ( Subformulae R7 ) ) \/ { ( 'not' R7 ) , ( R6 '&' ( 'not' R7 ) ) , ( R6 => R7 ) , ( 'not' R6 ) , ( R7 '&' ( 'not' R6 ) ) , ( R7 => R6 ) , ( R6 <=> R7 ) } ) by ENUMSET1:21;
end;
theorem
L229: (for R13 being Variable holds (for R16 being Variable holds ( Free ( R13 '=' R16 ) ) = { R13 , R16 }))
proof
let R13 being Variable;
let R16 being Variable;
L230: ( Var2 ( R13 '=' R16 ) ) = R16 by L1;
L231: (( R13 '=' R16 ) is  being_equality & ( Var1 ( R13 '=' R16 ) ) = R13) by L1 , ZF_LANG:5;
thus L232: thesis by L231 , L230 , ZF_MODEL:1;
end;
theorem
L233: (for R13 being Variable holds (for R16 being Variable holds ( Free ( R13 'in' R16 ) ) = { R13 , R16 }))
proof
let R13 being Variable;
let R16 being Variable;
L234: ( Var2 ( R13 'in' R16 ) ) = R16 by L5;
L235: (( R13 'in' R16 ) is  being_membership & ( Var1 ( R13 'in' R16 ) ) = R13) by L5 , ZF_LANG:5;
thus L236: thesis by L235 , L234 , ZF_MODEL:1;
end;
theorem
L237: (for R1 being ZF-formula holds ( Free ( 'not' R1 ) ) = ( Free R1 ))
proof
let R1 being ZF-formula;
L238: (( 'not' R1 ) is  negative & ( the_argument_of ( 'not' R1 ) ) = R1) by L9 , ZF_LANG:5;
thus L239: thesis by L238 , ZF_MODEL:1;
end;
theorem
L240: (for R1 being ZF-formula holds (for R4 being ZF-formula holds ( Free ( R1 '&' R4 ) ) = ( ( Free R1 ) \/ ( Free R4 ) )))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
L241: ( the_right_argument_of ( R1 '&' R4 ) ) = R4 by L12;
L242: (( R1 '&' R4 ) is  conjunctive & ( the_left_argument_of ( R1 '&' R4 ) ) = R1) by L12 , ZF_LANG:5;
thus L243: thesis by L242 , L241 , ZF_MODEL:1;
end;
theorem
L244: (for R1 being ZF-formula holds (for R13 being Variable holds ( Free ( All (R13 , R1) ) ) = ( ( Free R1 ) \ { R13 } )))
proof
let R1 being ZF-formula;
let R13 being Variable;
L245: ( the_scope_of ( All (R13 , R1) ) ) = R1 by L28;
L246: (( All (R13 , R1) ) is  universal & ( bound_in ( All (R13 , R1) ) ) = R13) by L28 , ZF_LANG:5;
thus L247: thesis by L246 , L245 , ZF_MODEL:1;
end;
theorem
L248: (for R1 being ZF-formula holds (for R4 being ZF-formula holds ( Free ( R1 'or' R4 ) ) = ( ( Free R1 ) \/ ( Free R4 ) )))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
thus L249: ( Free ( R1 'or' R4 ) ) = ( Free ( ( 'not' R1 ) '&' ( 'not' R4 ) ) ) by L237
.= ( ( Free ( 'not' R1 ) ) \/ ( Free ( 'not' R4 ) ) ) by L240
.= ( ( Free R1 ) \/ ( Free ( 'not' R4 ) ) ) by L237
.= ( ( Free R1 ) \/ ( Free R4 ) ) by L237;
end;
theorem
L250: (for R1 being ZF-formula holds (for R4 being ZF-formula holds ( Free ( R1 => R4 ) ) = ( ( Free R1 ) \/ ( Free R4 ) )))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
thus L251: ( Free ( R1 => R4 ) ) = ( Free ( R1 '&' ( 'not' R4 ) ) ) by L237
.= ( ( Free R1 ) \/ ( Free ( 'not' R4 ) ) ) by L240
.= ( ( Free R1 ) \/ ( Free R4 ) ) by L237;
end;
theorem
L252: (for R1 being ZF-formula holds (for R4 being ZF-formula holds ( Free ( R1 <=> R4 ) ) = ( ( Free R1 ) \/ ( Free R4 ) )))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
thus L253: ( Free ( R1 <=> R4 ) ) = ( ( Free ( R1 => R4 ) ) \/ ( Free ( R4 => R1 ) ) ) by L240
.= ( ( ( Free R1 ) \/ ( Free R4 ) ) \/ ( Free ( R4 => R1 ) ) ) by L250
.= ( ( ( Free R1 ) \/ ( Free R4 ) ) \/ ( ( Free R4 ) \/ ( Free R1 ) ) ) by L250
.= ( ( ( ( Free R1 ) \/ ( Free R4 ) ) \/ ( Free R4 ) ) \/ ( Free R1 ) ) by XBOOLE_1:4
.= ( ( ( Free R1 ) \/ ( ( Free R4 ) \/ ( Free R4 ) ) ) \/ ( Free R1 ) ) by XBOOLE_1:4
.= ( ( ( Free R1 ) \/ ( Free R1 ) ) \/ ( Free R4 ) ) by XBOOLE_1:4
.= ( ( Free R1 ) \/ ( Free R4 ) );
end;
theorem
L254: (for R1 being ZF-formula holds (for R13 being Variable holds ( Free ( Ex (R13 , R1) ) ) = ( ( Free R1 ) \ { R13 } )))
proof
let R1 being ZF-formula;
let R13 being Variable;
thus L255: ( Free ( Ex (R13 , R1) ) ) = ( Free ( All (R13 , ( 'not' R1 )) ) ) by L237
.= ( ( Free ( 'not' R1 ) ) \ { R13 } ) by L244
.= ( ( Free R1 ) \ { R13 } ) by L237;
end;
theorem
L256: (for R1 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds ( Free ( All (R13 , R16 , R1) ) ) = ( ( Free R1 ) \ { R13 , R16 } ))))
proof
let R1 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
thus L257: ( Free ( All (R13 , R16 , R1) ) ) = ( ( Free ( All (R16 , R1) ) ) \ { R13 } ) by L244
.= ( ( ( Free R1 ) \ { R16 } ) \ { R13 } ) by L244
.= ( ( Free R1 ) \ ( { R13 } \/ { R16 } ) ) by XBOOLE_1:41
.= ( ( Free R1 ) \ { R13 , R16 } ) by ENUMSET1:1;
end;
theorem
L258: (for R1 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (for R19 being Variable holds ( Free ( All (R13 , R16 , R19 , R1) ) ) = ( ( Free R1 ) \ { R13 , R16 , R19 } )))))
proof
let R1 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
let R19 being Variable;
thus L259: ( Free ( All (R13 , R16 , R19 , R1) ) ) = ( ( Free ( All (R16 , R19 , R1) ) ) \ { R13 } ) by L244
.= ( ( ( Free R1 ) \ { R16 , R19 } ) \ { R13 } ) by L256
.= ( ( Free R1 ) \ ( { R13 } \/ { R16 , R19 } ) ) by XBOOLE_1:41
.= ( ( Free R1 ) \ { R13 , R16 , R19 } ) by ENUMSET1:2;
end;
theorem
L260: (for R1 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds ( Free ( Ex (R13 , R16 , R1) ) ) = ( ( Free R1 ) \ { R13 , R16 } ))))
proof
let R1 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
thus L261: ( Free ( Ex (R13 , R16 , R1) ) ) = ( ( Free ( Ex (R16 , R1) ) ) \ { R13 } ) by L254
.= ( ( ( Free R1 ) \ { R16 } ) \ { R13 } ) by L254
.= ( ( Free R1 ) \ ( { R13 } \/ { R16 } ) ) by XBOOLE_1:41
.= ( ( Free R1 ) \ { R13 , R16 } ) by ENUMSET1:1;
end;
theorem
L262: (for R1 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (for R19 being Variable holds ( Free ( Ex (R13 , R16 , R19 , R1) ) ) = ( ( Free R1 ) \ { R13 , R16 , R19 } )))))
proof
let R1 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
let R19 being Variable;
thus L263: ( Free ( Ex (R13 , R16 , R19 , R1) ) ) = ( ( Free ( Ex (R16 , R19 , R1) ) ) \ { R13 } ) by L254
.= ( ( ( Free R1 ) \ { R16 , R19 } ) \ { R13 } ) by L260
.= ( ( Free R1 ) \ ( { R13 } \/ { R16 , R19 } ) ) by XBOOLE_1:41
.= ( ( Free R1 ) \ { R13 , R16 , R19 } ) by ENUMSET1:2;
end;
scheme ZFInduction { P1[ZF-formula] } : (for R10 being ZF-formula holds P1[ R10 ])
provided
L264: (for R14 being Variable holds (for R15 being Variable holds (P1[ ( R14 '=' R15 ) ] & P1[ ( R14 'in' R15 ) ])))
and
L265: (for R10 being ZF-formula holds (P1[ R10 ] implies P1[ ( 'not' R10 ) ]))
and
L266: (for R11 being ZF-formula holds (for R12 being ZF-formula holds ((P1[ R11 ] & P1[ R12 ]) implies P1[ ( R11 '&' R12 ) ])))
and
L267: (for R10 being ZF-formula holds (for R13 being Variable holds (P1[ R10 ] implies P1[ ( All (R13 , R10) ) ])))
proof
L268: (for R10 being ZF-formula holds ((R10 is  conjunctive & P1[ ( the_left_argument_of R10 ) ] & P1[ ( the_right_argument_of R10 ) ]) implies P1[ R10 ]))
proof
let R10 being ZF-formula;
assume L269: R10 is  conjunctive;
L270: R10 = ( ( the_left_argument_of R10 ) '&' ( the_right_argument_of R10 ) ) by L269 , ZF_LANG:40;
thus L271: thesis by L270 , L266;
end;
L272: (for R10 being ZF-formula holds (R10 is  atomic implies P1[ R10 ]))
proof
let R10 being ZF-formula;
assume that
L273: (R10 is  being_equality or R10 is  being_membership);
L274: (R10 is  being_membership implies thesis)
proof
given R14 being Variable , R15 being Variable such that
L275: R10 = ( R14 'in' R15 );

thus L276: thesis by L264 , L275;
end;
L277: (R10 is  being_equality implies thesis)
proof
given R14 being Variable , R15 being Variable such that
L278: R10 = ( R14 '=' R15 );

thus L279: thesis by L264 , L278;
end;
thus L280: thesis by L277 , L273 , L274;
end;
L281: (for R10 being ZF-formula holds ((R10 is  universal & P1[ ( the_scope_of R10 ) ]) implies P1[ R10 ]))
proof
let R10 being ZF-formula;
assume L282: R10 is  universal;
L283: R10 = ( All (( bound_in R10 ) , ( the_scope_of R10 )) ) by L282 , ZF_LANG:44;
thus L284: thesis by L283 , L267;
end;
L285: (for R10 being ZF-formula holds ((R10 is  negative & P1[ ( the_argument_of R10 ) ]) implies P1[ R10 ]))
proof
let R10 being ZF-formula;
assume L286: R10 is  negative;
L287: R10 = ( 'not' ( the_argument_of R10 ) ) by L286 , ZF_LANG:def 30;
thus L288: thesis by L287 , L265;
end;
thus L289: (for R10 being ZF-formula holds P1[ R10 ]) from ZF_LANG:sch 1(L272 , L285 , L268 , L281);
end;
definition
let C1 , C2 , C3 being non  empty set;
let C4 being (Function of C1 , C2);
assume L290: C2 c= C3;
func C3 ! C4 -> (Function of C1 , C3) equals 
C4;
correctness
proof
L291: ( rng C4 ) c= C2 by RELAT_1:def 19;
L292: ( rng C4 ) c= C3 by L291 , L290 , XBOOLE_1:1;
L293: ( dom C4 ) = C1 by FUNCT_2:def 1;
thus L294: thesis by L293 , L292 , FUNCT_2:def 1 , RELSET_1:4;
end;
end;
notation
let C5 being non  empty set;
let C6 being (Function of ( VAR ) , C5);
let C7 being Variable;
let C8 being (Element of C5);
synonym C6 / (C7 , C8) for C6 +* (C7 , C8);
end;
definition
let C9 being non  empty set;
let C10 being (Function of ( VAR ) , C9);
let C11 being Variable;
let C12 being (Element of C9);
redefine func C10 / (C11 , C12) -> (Function of ( VAR ) , C9);

coherence
proof
L297: ( C10 +* (C11 , C12) ) is (Function of ( VAR ) , C9);
thus L298: thesis by L297;
end;
end;
theorem
L300: (for R10 being ZF-formula holds (for R13 being Variable holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( All (R13 , R10) ) iff (for R27 being (Element of R26) holds R26 , ( R29 / (R13 , R27) ) |= R10))))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
thus L301: (R26 , R29 |= ( All (R13 , R10) ) implies (for R27 being (Element of R26) holds R26 , ( R29 / (R13 , R27) ) |= R10))
proof
assume L302: R26 , R29 |= ( All (R13 , R10) );
let R27 being (Element of R26);
L303: (for R16 being Variable holds (( ( R29 / (R13 , R27) ) . R16 ) <> ( R29 . R16 ) implies R13 = R16)) by FUNCT_7:32;
thus L304: thesis by L303 , L302 , ZF_MODEL:16;
end;

assume L305: (for R27 being (Element of R26) holds R26 , ( R29 / (R13 , R27) ) |= R10);
L306:
now
let R30 being (Function of ( VAR ) , R26);
assume L307: (for R16 being Variable holds (( R30 . R16 ) <> ( R29 . R16 ) implies R13 = R16));
L308: R30 = ( R29 / (R13 , ( R30 . R13 )) ) by L307 , FUNCT_7:129;
thus L309: R26 , R30 |= R10 by L308 , L305;
end;
thus L310: thesis by L306 , ZF_MODEL:16;
end;
theorem
L311: (for R10 being ZF-formula holds (for R13 being Variable holds (for R26 being non  empty set holds (for R27 being (Element of R26) holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( All (R13 , R10) ) iff R26 , ( R29 / (R13 , R27) ) |= ( All (R13 , R10) )))))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R26 being non  empty set;
let R27 being (Element of R26);
let R29 being (Function of ( VAR ) , R26);
L312: (for R29 being (Function of ( VAR ) , R26) holds (for R27 being (Element of R26) holds (R26 , R29 |= ( All (R13 , R10) ) implies R26 , ( R29 / (R13 , R27) ) |= ( All (R13 , R10) ))))
proof
let R29 being (Function of ( VAR ) , R26);
let R27 being (Element of R26);
assume that
L313: R26 , R29 |= ( All (R13 , R10) );
L314:
now
let R28 being (Element of R26);
L315: ( ( R29 / (R13 , R27) ) / (R13 , R28) ) = ( R29 / (R13 , R28) ) by FUNCT_7:34;
thus L316: R26 , ( ( R29 / (R13 , R27) ) / (R13 , R28) ) |= R10 by L315 , L313 , L300;
end;
thus L317: thesis by L314 , L300;
end;
L318: ( ( R29 / (R13 , R27) ) / (R13 , ( R29 . R13 )) ) = ( R29 / (R13 , ( R29 . R13 )) ) by FUNCT_7:34
.= R29 by FUNCT_7:35;
thus L319: thesis by L318 , L312;
end;
theorem
L320: (for R10 being ZF-formula holds (for R13 being Variable holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( Ex (R13 , R10) ) iff (ex R27 being (Element of R26) st R26 , ( R29 / (R13 , R27) ) |= R10))))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
thus L321: (R26 , R29 |= ( Ex (R13 , R10) ) implies (ex R27 being (Element of R26) st R26 , ( R29 / (R13 , R27) ) |= R10))
proof
assume L322: R26 , R29 |= ( Ex (R13 , R10) );
consider R30 being (Function of ( VAR ) , R26) such that L323: ((for R16 being Variable holds (( R30 . R16 ) <> ( R29 . R16 ) implies R13 = R16)) & R26 , R30 |= R10) by L322 , ZF_MODEL:20;
take ( R30 . R13 );
thus L324: thesis by L323 , FUNCT_7:129;
end;

given R27 being (Element of R26) such that
L325: R26 , ( R29 / (R13 , R27) ) |= R10;

L326:
now
take D1 = ( R29 / (R13 , R27) );
thus L327: (for R16 being Variable holds (( D1 . R16 ) <> ( R29 . R16 ) implies R13 = R16)) by FUNCT_7:32;
thus L328: R26 , D1 |= R10 by L325;
end;
thus L329: thesis by L326 , ZF_MODEL:20;
end;
theorem
L330: (for R10 being ZF-formula holds (for R13 being Variable holds (for R26 being non  empty set holds (for R27 being (Element of R26) holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( Ex (R13 , R10) ) iff R26 , ( R29 / (R13 , R27) ) |= ( Ex (R13 , R10) )))))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R26 being non  empty set;
let R27 being (Element of R26);
let R29 being (Function of ( VAR ) , R26);
L331: (for R29 being (Function of ( VAR ) , R26) holds (for R27 being (Element of R26) holds (R26 , R29 |= ( Ex (R13 , R10) ) implies R26 , ( R29 / (R13 , R27) ) |= ( Ex (R13 , R10) ))))
proof
let R29 being (Function of ( VAR ) , R26);
let R27 being (Element of R26);
assume L332: R26 , R29 |= ( Ex (R13 , R10) );
consider R28 being (Element of R26) such that L333: R26 , ( R29 / (R13 , R28) ) |= R10 by L332 , L320;
L334: ( ( R29 / (R13 , R27) ) / (R13 , R28) ) = ( R29 / (R13 , R28) ) by FUNCT_7:34;
thus L335: thesis by L334 , L333 , L320;
end;
L336: ( ( R29 / (R13 , R27) ) / (R13 , ( R29 . R13 )) ) = ( R29 / (R13 , ( R29 . R13 )) ) by FUNCT_7:34
.= R29 by FUNCT_7:35;
thus L337: thesis by L336 , L331;
end;
theorem
L338: (for R10 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (for R30 being (Function of ( VAR ) , R26) holds ((for R13 being Variable holds (R13 in ( Free R10 ) implies ( R30 . R13 ) = ( R29 . R13 ))) implies (R26 , R29 |= R10 implies R26 , R30 |= R10))))))
proof
let R10 being ZF-formula;
let R26 being non  empty set;
defpred S1[ ZF-formula ] means (for R29 being (Function of ( VAR ) , R26) holds (for R30 being (Function of ( VAR ) , R26) holds ((for R13 being Variable holds (R13 in ( Free $1 ) implies ( R30 . R13 ) = ( R29 . R13 ))) implies (R26 , R29 |= $1 implies R26 , R30 |= $1))));
L339: (for R11 being ZF-formula holds (for R12 being ZF-formula holds ((S1[ R11 ] & S1[ R12 ]) implies S1[ ( R11 '&' R12 ) ])))
proof
let R11 being ZF-formula;
let R12 being ZF-formula;
assume that
L340: S1[ R11 ]
and
L341: S1[ R12 ];
let R29 being (Function of ( VAR ) , R26);
let R30 being (Function of ( VAR ) , R26);
assume L342: (for R13 being Variable holds (R13 in ( Free ( R11 '&' R12 ) ) implies ( R30 . R13 ) = ( R29 . R13 )));
L343: ( Free ( R11 '&' R12 ) ) = ( ( Free R11 ) \/ ( Free R12 ) ) by L240;
L344:
now
let R13 being Variable;
assume L345: R13 in ( Free R12 );
L346: R13 in ( Free ( R11 '&' R12 ) ) by L345 , L343 , XBOOLE_0:def 3;
thus L347: ( R30 . R13 ) = ( R29 . R13 ) by L346 , L342;
end;
assume L348: R26 , R29 |= ( R11 '&' R12 );
L349: R26 , R29 |= R12 by L348 , ZF_MODEL:15;
L350: R26 , R30 |= R12 by L349 , L341 , L344;
L351:
now
let R13 being Variable;
assume L352: R13 in ( Free R11 );
L353: R13 in ( Free ( R11 '&' R12 ) ) by L352 , L343 , XBOOLE_0:def 3;
thus L354: ( R30 . R13 ) = ( R29 . R13 ) by L353 , L342;
end;
L355: R26 , R29 |= R11 by L348 , ZF_MODEL:15;
L356: R26 , R30 |= R11 by L355 , L340 , L351;
thus L357: thesis by L356 , L350 , ZF_MODEL:15;
end;
L358: (for R14 being Variable holds (for R15 being Variable holds (S1[ ( R14 '=' R15 ) ] & S1[ ( R14 'in' R15 ) ])))
proof
let R14 being Variable;
let R15 being Variable;
L359: ( Free ( R14 '=' R15 ) ) = { R14 , R15 } by L229;
thus L360: S1[ ( R14 '=' R15 ) ]
proof
let R29 being (Function of ( VAR ) , R26);
let R30 being (Function of ( VAR ) , R26);
assume L361: (for R13 being Variable holds (R13 in ( Free ( R14 '=' R15 ) ) implies ( R30 . R13 ) = ( R29 . R13 )));
L362: R15 in ( Free ( R14 '=' R15 ) ) by L359 , TARSKI:def 2;
L363: ( R30 . R15 ) = ( R29 . R15 ) by L362 , L361;
assume L364: R26 , R29 |= ( R14 '=' R15 );
L365: ( R29 . R14 ) = ( R29 . R15 ) by L364 , ZF_MODEL:12;
L366: R14 in ( Free ( R14 '=' R15 ) ) by L359 , TARSKI:def 2;
L367: ( R30 . R14 ) = ( R29 . R14 ) by L366 , L361;
thus L368: thesis by L367 , L365 , L363 , ZF_MODEL:12;
end;

let R29 being (Function of ( VAR ) , R26);
let R30 being (Function of ( VAR ) , R26);
assume L369: (for R13 being Variable holds (R13 in ( Free ( R14 'in' R15 ) ) implies ( R30 . R13 ) = ( R29 . R13 )));
L370: ( Free ( R14 'in' R15 ) ) = { R14 , R15 } by L233;
L371: R15 in ( Free ( R14 'in' R15 ) ) by L370 , TARSKI:def 2;
L372: ( R30 . R15 ) = ( R29 . R15 ) by L371 , L369;
assume L373: R26 , R29 |= ( R14 'in' R15 );
L374: ( R29 . R14 ) in ( R29 . R15 ) by L373 , ZF_MODEL:13;
L375: R14 in ( Free ( R14 'in' R15 ) ) by L370 , TARSKI:def 2;
L376: ( R30 . R14 ) = ( R29 . R14 ) by L375 , L369;
thus L377: thesis by L376 , L374 , L372 , ZF_MODEL:13;
end;
L378: (for R10 being ZF-formula holds (for R13 being Variable holds (S1[ R10 ] implies S1[ ( All (R13 , R10) ) ])))
proof
let R10 being ZF-formula;
let R14 being Variable;
assume that
L379: S1[ R10 ];
let R29 being (Function of ( VAR ) , R26);
let R30 being (Function of ( VAR ) , R26);
assume that
L380: (for R13 being Variable holds (R13 in ( Free ( All (R14 , R10) ) ) implies ( R30 . R13 ) = ( R29 . R13 )))
and
L381: R26 , R29 |= ( All (R14 , R10) );
L382:
now
let R27 being (Element of R26);
L383: ( Free ( All (R14 , R10) ) ) = ( ( Free R10 ) \ { R14 } ) by L244;
L384:
now
let R13 being Variable;
assume L385: R13 in ( Free R10 );
L386: ((R13 in ( Free ( All (R14 , R10) ) ) & (not R13 in { R14 })) or R13 in { R14 }) by L385 , L383 , XBOOLE_0:def 5;
L387: ((( R30 . R13 ) = ( R29 . R13 ) & R13 <> R14) or R13 = R14) by L386 , L380 , TARSKI:def 1;
L388: ((( ( R30 / (R14 , R27) ) . R13 ) = ( R29 . R13 ) & ( R29 . R13 ) = ( ( R29 / (R14 , R27) ) . R13 )) or (( ( R29 / (R14 , R27) ) . R13 ) = R27 & ( ( R30 / (R14 , R27) ) . R13 ) = R27)) by L387 , FUNCT_7:32 , FUNCT_7:128;
thus L389: ( ( R30 / (R14 , R27) ) . R13 ) = ( ( R29 / (R14 , R27) ) . R13 ) by L388;
end;
L390: R26 , ( R29 / (R14 , R27) ) |= R10 by L381 , L300;
thus L391: R26 , ( R30 / (R14 , R27) ) |= R10 by L390 , L379 , L384;
end;
thus L392: thesis by L382 , L300;
end;
L393: (for R10 being ZF-formula holds (S1[ R10 ] implies S1[ ( 'not' R10 ) ]))
proof
let R10 being ZF-formula;
assume that
L394: S1[ R10 ];
let R29 being (Function of ( VAR ) , R26);
let R30 being (Function of ( VAR ) , R26);
assume L395: (for R13 being Variable holds (R13 in ( Free ( 'not' R10 ) ) implies ( R30 . R13 ) = ( R29 . R13 )));
L396:
now
let R13 being Variable;
assume L397: R13 in ( Free R10 );
L398: R13 in ( Free ( 'not' R10 ) ) by L397 , L237;
thus L399: ( R29 . R13 ) = ( R30 . R13 ) by L398 , L395;
end;
assume L400: R26 , R29 |= ( 'not' R10 );
L401: (not R26 , R29 |= R10) by L400 , ZF_MODEL:14;
L402: (not R26 , R30 |= R10) by L401 , L394 , L396;
thus L403: thesis by L402 , ZF_MODEL:14;
end;
L404: (for R10 being ZF-formula holds S1[ R10 ]) from ZFInduction(L358 , L393 , L339 , L378);
thus L405: thesis by L404;
end;
registration
let R10 being ZF-formula;
cluster ( Free R10 ) ->  finite;
coherence
proof
defpred S2[ ZF-formula ] means ( Free $1 ) is  finite;
L406: (for R1 being ZF-formula holds (for R4 being ZF-formula holds ((S2[ R1 ] & S2[ R4 ]) implies S2[ ( R1 '&' R4 ) ])))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
L407: ( Free ( R1 '&' R4 ) ) = ( ( Free R1 ) \/ ( Free R4 ) ) by L240;
thus L408: thesis by L407;
end;
L409: (for R1 being ZF-formula holds (for R13 being Variable holds (S2[ R1 ] implies S2[ ( All (R13 , R1) ) ])))
proof
let R1 being ZF-formula;
let R13 being Variable;
L410: ( Free ( All (R13 , R1) ) ) = ( ( Free R1 ) \ { R13 } ) by L244;
thus L411: thesis by L410;
end;
L412: (for R13 being Variable holds (for R16 being Variable holds (S2[ ( R13 '=' R16 ) ] & S2[ ( R13 'in' R16 ) ])))
proof
let R13 being Variable;
let R16 being Variable;
L413: ( Free ( R13 '=' R16 ) ) = { R13 , R16 } by L229;
thus L414: thesis by L413 , L233;
end;
L415: (for R1 being ZF-formula holds (S2[ R1 ] implies S2[ ( 'not' R1 ) ])) by L237;
L416: (for R1 being ZF-formula holds S2[ R1 ]) from ZFInduction(L412 , L415 , L406 , L409);
thus L417: thesis by L416;
end;
end;
theorem
L419: (for R31 being (Element of ( NAT )) holds (for R32 being (Element of ( NAT )) holds (( x. R31 ) = ( x. R32 ) implies R31 = R32)));
theorem
L420: (for R13 being Variable holds (ex R31 being (Element of ( NAT )) st R13 = ( x. R31 )))
proof
let R13 being Variable;
L421: R13 in ( VAR );
consider R32 being (Element of ( NAT )) such that L422: R13 = R32 and L423: 5 <= R32 by L421;
consider C13 being Nat such that L424: R32 = ( 5 + C13 ) by L423 , NAT_1:10;
reconsider D2 = C13 as (Element of ( NAT )) by ORDINAL1:def 12;
take D2;
thus L425: thesis by L422 , L424;
end;
theorem
L426: (for R13 being Variable holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds R26 , R29 |= ( R13 '=' R13 ))))
proof
let R13 being Variable;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L427: ( R29 . R13 ) = ( R29 . R13 );
thus L428: thesis by L427 , ZF_MODEL:12;
end;
theorem
L429: (for R13 being Variable holds (for R26 being non  empty set holds R26 |= ( R13 '=' R13 )))
proof
let R13 being Variable;
let R26 being non  empty set;
L430: (for R29 being (Function of ( VAR ) , R26) holds R26 , R29 |= ( R13 '=' R13 )) by L426;
thus L431: thesis by L430 , ZF_MODEL:def 5;
end;
theorem
L432: (for R13 being Variable holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (not R26 , R29 |= ( R13 'in' R13 )))))
proof
let R13 being Variable;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L433: (not ( R29 . R13 ) in ( R29 . R13 ));
thus L434: thesis by L433 , ZF_MODEL:13;
end;
theorem
L435: (for R13 being Variable holds (for R26 being non  empty set holds ((not R26 |= ( R13 'in' R13 )) & R26 |= ( 'not' ( R13 'in' R13 ) ))))
proof
let R13 being Variable;
let R26 being non  empty set;
set D3 = the (Function of ( VAR ) , R26);
L436: (not R26 , D3 |= ( R13 'in' R13 )) by L432;
thus L437: (not R26 |= ( R13 'in' R13 )) by L436 , ZF_MODEL:def 5;
let R29 being (Function of ( VAR ) , R26);
L438: (not R26 , R29 |= ( R13 'in' R13 )) by L432;
thus L439: thesis by L438 , ZF_MODEL:14;
end;
theorem
L440: (for R13 being Variable holds (for R16 being Variable holds (for R26 being non  empty set holds (R26 |= ( R13 '=' R16 ) iff (R13 = R16 or (ex R24 being set st { R24 } = R26))))))
proof
let R13 being Variable;
let R16 being Variable;
let R26 being non  empty set;
thus L441: (R26 |= ( R13 '=' R16 ) implies (R13 = R16 or (ex R24 being set st { R24 } = R26)))
proof
set D4 = the (Function of ( VAR ) , R26);
set D5 = the (Element of R26);
assume that
L442: (for R29 being (Function of ( VAR ) , R26) holds R26 , R29 |= ( R13 '=' R16 ))
and
L443: R13 <> R16;
reconsider D6 = D5 as set;
take D6;
thus L444: { D6 } c= R26 by ZFMISC_1:31;
let C14 being set;
assume that
L445: C14 in R26
and
L446: (not C14 in { D6 });
reconsider D7 = C14 as (Element of R26) by L445;
L447: R26 , ( ( D4 / (R13 , D5) ) / (R16 , D7) ) |= ( R13 '=' R16 ) by L442;
L448: ( ( ( D4 / (R13 , D5) ) / (R16 , D7) ) . R13 ) = ( ( ( D4 / (R13 , D5) ) / (R16 , D7) ) . R16 ) by L447 , ZF_MODEL:12;
L449: (( ( D4 / (R13 , D5) ) . R13 ) = D5 & ( ( ( D4 / (R13 , D5) ) / (R16 , D7) ) . R16 ) = D7) by FUNCT_7:128;
L450: ( ( ( D4 / (R13 , D5) ) / (R16 , D7) ) . R13 ) = ( ( D4 / (R13 , D5) ) . R13 ) by L443 , FUNCT_7:32;
thus L451: contradiction by L450 , L446 , L448 , L449 , TARSKI:def 1;
end;

L452:
now
given R24 being set such that
L453: { R24 } = R26;

let R29 being (Function of ( VAR ) , R26);
L454: (( R29 . R13 ) = R24 & ( R29 . R16 ) = R24) by L453 , TARSKI:def 1;
thus L455: R26 , R29 |= ( R13 '=' R16 ) by L454 , ZF_MODEL:12;
end;
thus L456: thesis by L452 , L429 , ZF_MODEL:def 5;
end;
theorem
L457: (for R13 being Variable holds (for R16 being Variable holds (for R26 being non  empty set holds (R26 |= ( 'not' ( R13 'in' R16 ) ) iff (R13 = R16 or (for R25 being set holds (R25 in R26 implies R25 misses R26)))))))
proof
let R13 being Variable;
let R16 being Variable;
let R26 being non  empty set;
thus L458: (R26 |= ( 'not' ( R13 'in' R16 ) ) implies (R13 = R16 or (for R25 being set holds (R25 in R26 implies R25 misses R26))))
proof
set D8 = the (Function of ( VAR ) , R26);
assume that
L459: (for R29 being (Function of ( VAR ) , R26) holds R26 , R29 |= ( 'not' ( R13 'in' R16 ) ))
and
L460: R13 <> R16;
let R25 being set;
set D9 = the (Element of ( R25 /\ R26 ));
assume L461: R25 in R26;
reconsider D10 = R25 as (Element of R26) by L461;
assume L462: ( R25 /\ R26 ) <> ( {} );
reconsider D11 = D9 as (Element of R26) by L462 , XBOOLE_0:def 4;
L463: R26 , ( ( D8 / (R13 , D11) ) / (R16 , D10) ) |= ( 'not' ( R13 'in' R16 ) ) by L459;
L464: (not R26 , ( ( D8 / (R13 , D11) ) / (R16 , D10) ) |= ( R13 'in' R16 )) by L463 , ZF_MODEL:14;
L465: (not ( ( ( D8 / (R13 , D11) ) / (R16 , D10) ) . R13 ) in ( ( ( D8 / (R13 , D11) ) / (R16 , D10) ) . R16 )) by L464 , ZF_MODEL:13;
L466: (( ( D8 / (R13 , D11) ) . R13 ) = D11 & ( ( ( D8 / (R13 , D11) ) / (R16 , D10) ) . R16 ) = D10) by FUNCT_7:128;
L467: ( ( ( D8 / (R13 , D11) ) / (R16 , D10) ) . R13 ) = ( ( D8 / (R13 , D11) ) . R13 ) by L460 , FUNCT_7:32;
thus L468: contradiction by L467 , L462 , L465 , L466 , XBOOLE_0:def 4;
end;

L469:
now
assume L470: (for R25 being set holds (R25 in R26 implies R25 misses R26));
let R29 being (Function of ( VAR ) , R26);
L471: ( R29 . R16 ) misses R26 by L470;
L472: (not ( R29 . R13 ) in ( R29 . R16 )) by L471 , XBOOLE_0:3;
L473: (not R26 , R29 |= ( R13 'in' R16 )) by L472 , ZF_MODEL:13;
thus L474: R26 , R29 |= ( 'not' ( R13 'in' R16 ) ) by L473 , ZF_MODEL:14;
end;
thus L475: thesis by L469 , L435 , ZF_MODEL:def 5;
end;
theorem
L476: (for R10 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R10 is  being_equality implies (R26 , R29 |= R10 iff ( R29 . ( Var1 R10 ) ) = ( R29 . ( Var2 R10 ) ))))))
proof
let R10 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
assume L477: R10 is  being_equality;
L478: R10 = ( ( Var1 R10 ) '=' ( Var2 R10 ) ) by L477 , ZF_LANG:36;
thus L479: thesis by L478 , ZF_MODEL:12;
end;
theorem
L480: (for R10 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R10 is  being_membership implies (R26 , R29 |= R10 iff ( R29 . ( Var1 R10 ) ) in ( R29 . ( Var2 R10 ) ))))))
proof
let R10 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
assume L481: R10 is  being_membership;
L482: R10 = ( ( Var1 R10 ) 'in' ( Var2 R10 ) ) by L481 , ZF_LANG:37;
thus L483: thesis by L482 , ZF_MODEL:13;
end;
theorem
L484: (for R10 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R10 is  negative implies (R26 , R29 |= R10 iff (not R26 , R29 |= ( the_argument_of R10 )))))))
proof
let R10 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
assume L485: R10 is  negative;
L486: R10 = ( 'not' ( the_argument_of R10 ) ) by L485 , ZF_LANG:def 30;
thus L487: thesis by L486 , ZF_MODEL:14;
end;
theorem
L488: (for R10 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R10 is  conjunctive implies (R26 , R29 |= R10 iff (R26 , R29 |= ( the_left_argument_of R10 ) & R26 , R29 |= ( the_right_argument_of R10 )))))))
proof
let R10 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
assume L489: R10 is  conjunctive;
L490: R10 = ( ( the_left_argument_of R10 ) '&' ( the_right_argument_of R10 ) ) by L489 , ZF_LANG:40;
thus L491: thesis by L490 , ZF_MODEL:15;
end;
theorem
L492: (for R10 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R10 is  universal implies (R26 , R29 |= R10 iff (for R27 being (Element of R26) holds R26 , ( R29 / (( bound_in R10 ) , R27) ) |= ( the_scope_of R10 )))))))
proof
let R10 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
assume L493: R10 is  universal;
L494: R10 = ( All (( bound_in R10 ) , ( the_scope_of R10 )) ) by L493 , ZF_LANG:44;
thus L495: thesis by L494 , L300;
end;
theorem
L496: (for R10 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R10 is  disjunctive implies (R26 , R29 |= R10 iff (R26 , R29 |= ( the_left_argument_of R10 ) or R26 , R29 |= ( the_right_argument_of R10 )))))))
proof
let R10 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
assume L497: R10 is  disjunctive;
L498: R10 = ( ( the_left_argument_of R10 ) 'or' ( the_right_argument_of R10 ) ) by L497 , ZF_LANG:41;
thus L499: thesis by L498 , ZF_MODEL:17;
end;
theorem
L500: (for R10 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R10 is  conditional implies (R26 , R29 |= R10 iff (R26 , R29 |= ( the_antecedent_of R10 ) implies R26 , R29 |= ( the_consequent_of R10 )))))))
proof
let R10 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
assume L501: R10 is  conditional;
L502: R10 = ( ( the_antecedent_of R10 ) => ( the_consequent_of R10 ) ) by L501 , ZF_LANG:47;
thus L503: thesis by L502 , ZF_MODEL:18;
end;
theorem
L504: (for R10 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R10 is  biconditional implies (R26 , R29 |= R10 iff (R26 , R29 |= ( the_left_side_of R10 ) iff R26 , R29 |= ( the_right_side_of R10 )))))))
proof
let R10 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
assume L505: R10 is  biconditional;
L506: R10 = ( ( the_left_side_of R10 ) <=> ( the_right_side_of R10 ) ) by L505 , ZF_LANG:49;
thus L507: thesis by L506 , ZF_MODEL:19;
end;
theorem
L508: (for R10 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R10 is  existential implies (R26 , R29 |= R10 iff (ex R27 being (Element of R26) st R26 , ( R29 / (( bound_in R10 ) , R27) ) |= ( the_scope_of R10 )))))))
proof
let R10 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
assume L509: R10 is  existential;
L510: R10 = ( Ex (( bound_in R10 ) , ( the_scope_of R10 )) ) by L509 , ZF_LANG:45;
thus L511: thesis by L510 , L320;
end;
theorem
L512: (for R10 being ZF-formula holds (for R13 being Variable holds (for R26 being non  empty set holds (R26 |= ( Ex (R13 , R10) ) iff (for R29 being (Function of ( VAR ) , R26) holds (ex R27 being (Element of R26) st R26 , ( R29 / (R13 , R27) ) |= R10))))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R26 being non  empty set;
thus L513: (R26 |= ( Ex (R13 , R10) ) implies (for R29 being (Function of ( VAR ) , R26) holds (ex R27 being (Element of R26) st R26 , ( R29 / (R13 , R27) ) |= R10)))
proof
assume L514: (for R29 being (Function of ( VAR ) , R26) holds R26 , R29 |= ( Ex (R13 , R10) ));
let R29 being (Function of ( VAR ) , R26);
L515: R26 , R29 |= ( Ex (R13 , R10) ) by L514;
thus L516: thesis by L515 , L320;
end;

assume L517: (for R29 being (Function of ( VAR ) , R26) holds (ex R27 being (Element of R26) st R26 , ( R29 / (R13 , R27) ) |= R10));
let R29 being (Function of ( VAR ) , R26);
L518: (ex R27 being (Element of R26) st R26 , ( R29 / (R13 , R27) ) |= R10) by L517;
thus L519: thesis by L518 , L320;
end;
theorem
L520: (for R10 being ZF-formula holds (for R13 being Variable holds (for R26 being non  empty set holds (R26 |= R10 implies R26 |= ( Ex (R13 , R10) )))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R26 being non  empty set;
assume L521: R26 |= R10;
let R29 being (Function of ( VAR ) , R26);
L522: R26 , ( R29 / (R13 , ( R29 . R13 )) ) |= R10 by L521 , ZF_MODEL:def 5;
thus L523: thesis by L522 , L320;
end;
theorem
L524: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (for R26 being non  empty set holds (R26 |= R10 iff R26 |= ( All (R13 , R16 , R10) ))))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
let R26 being non  empty set;
L525: (R26 |= R10 iff R26 |= ( All (R16 , R10) )) by ZF_MODEL:23;
thus L526: thesis by L525 , ZF_MODEL:23;
end;
theorem
L527: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (for R26 being non  empty set holds (R26 |= R10 implies R26 |= ( Ex (R13 , R16 , R10) ))))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
let R26 being non  empty set;
L528: (R26 |= R10 implies R26 |= ( Ex (R16 , R10) )) by L520;
thus L529: thesis by L528 , L520;
end;
theorem
L530: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (for R19 being Variable holds (for R26 being non  empty set holds (R26 |= R10 iff R26 |= ( All (R13 , R16 , R19 , R10) )))))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
let R19 being Variable;
let R26 being non  empty set;
L531: (R26 |= R10 iff R26 |= ( All (R16 , R19 , R10) )) by L524;
thus L532: thesis by L531 , ZF_MODEL:23;
end;
theorem
L533: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (for R19 being Variable holds (for R26 being non  empty set holds (R26 |= R10 implies R26 |= ( Ex (R13 , R16 , R19 , R10) )))))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
let R19 being Variable;
let R26 being non  empty set;
L534: (R26 |= R10 implies R26 |= ( Ex (R16 , R19 , R10) )) by L527;
thus L535: thesis by L534 , L520;
end;
theorem
L536: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( ( R1 <=> R4 ) => ( R1 => R4 ) ) & R26 |= ( ( R1 <=> R4 ) => ( R1 => R4 ) ))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L537:
now
let R29 being (Function of ( VAR ) , R26);
L538: (R26 , R29 |= ( R1 <=> R4 ) implies R26 , R29 |= ( R1 => R4 )) by ZF_MODEL:15;
thus L539: R26 , R29 |= ( ( R1 <=> R4 ) => ( R1 => R4 ) ) by L538 , ZF_MODEL:18;
end;
thus L540: R26 , R29 |= ( ( R1 <=> R4 ) => ( R1 => R4 ) ) by L537;
let R29 being (Function of ( VAR ) , R26);
thus L541: thesis by L537;
end;
theorem
L542: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( ( R1 <=> R4 ) => ( R4 => R1 ) ) & R26 |= ( ( R1 <=> R4 ) => ( R4 => R1 ) ))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L543:
now
let R29 being (Function of ( VAR ) , R26);
L544: (R26 , R29 |= ( R1 <=> R4 ) implies R26 , R29 |= ( R4 => R1 )) by ZF_MODEL:15;
thus L545: R26 , R29 |= ( ( R1 <=> R4 ) => ( R4 => R1 ) ) by L544 , ZF_MODEL:18;
end;
thus L546: R26 , R29 |= ( ( R1 <=> R4 ) => ( R4 => R1 ) ) by L543;
let R29 being (Function of ( VAR ) , R26);
thus L547: thesis by L543;
end;
theorem
L548: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R5 being ZF-formula holds (for R26 being non  empty set holds R26 |= ( ( R1 => R4 ) => ( ( R4 => R5 ) => ( R1 => R5 ) ) )))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R5 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L549:
now
assume L550: R26 , R29 |= ( R1 => R4 );
L551:
now
assume L552: R26 , R29 |= ( R4 => R5 );
L553:
now
assume L554: R26 , R29 |= R1;
L555: R26 , R29 |= R4 by L554 , L550 , ZF_MODEL:18;
thus L556: R26 , R29 |= R5 by L555 , L552 , ZF_MODEL:18;
end;
thus L557: R26 , R29 |= ( R1 => R5 ) by L553 , ZF_MODEL:18;
end;
thus L558: R26 , R29 |= ( ( R4 => R5 ) => ( R1 => R5 ) ) by L551 , ZF_MODEL:18;
end;
thus L559: thesis by L549 , ZF_MODEL:18;
end;
theorem
L560: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R5 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds ((R26 , R29 |= ( R1 => R4 ) & R26 , R29 |= ( R4 => R5 )) implies R26 , R29 |= ( R1 => R5 )))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R5 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
assume that
L561: R26 , R29 |= ( R1 => R4 )
and
L562: R26 , R29 |= ( R4 => R5 );
L563: R26 |= ( ( R1 => R4 ) => ( ( R4 => R5 ) => ( R1 => R5 ) ) ) by L548;
L564: R26 , R29 |= ( ( R1 => R4 ) => ( ( R4 => R5 ) => ( R1 => R5 ) ) ) by L563 , ZF_MODEL:def 5;
L565: R26 , R29 |= ( ( R4 => R5 ) => ( R1 => R5 ) ) by L564 , L561 , ZF_MODEL:18;
thus L566: thesis by L565 , L562 , ZF_MODEL:18;
end;
theorem
L567: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R5 being ZF-formula holds (for R26 being non  empty set holds ((R26 |= ( R1 => R4 ) & R26 |= ( R4 => R5 )) implies R26 |= ( R1 => R5 ))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R5 being ZF-formula;
let R26 being non  empty set;
assume L568: (R26 |= ( R1 => R4 ) & R26 |= ( R4 => R5 ));
let R29 being (Function of ( VAR ) , R26);
L569: (R26 , R29 |= ( R1 => R4 ) & R26 , R29 |= ( R4 => R5 )) by L568 , ZF_MODEL:def 5;
thus L570: thesis by L569 , L560;
end;
theorem
L571: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R5 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( ( ( R1 => R4 ) '&' ( R4 => R5 ) ) => ( R1 => R5 ) ) & R26 |= ( ( ( R1 => R4 ) '&' ( R4 => R5 ) ) => ( R1 => R5 ) )))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R5 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L572:
now
let R29 being (Function of ( VAR ) , R26);
L573:
now
assume L574: R26 , R29 |= ( ( R1 => R4 ) '&' ( R4 => R5 ) );
L575: (R26 , R29 |= ( R1 => R4 ) & R26 , R29 |= ( R4 => R5 )) by L574 , ZF_MODEL:15;
thus L576: R26 , R29 |= ( R1 => R5 ) by L575 , L560;
end;
thus L577: R26 , R29 |= ( ( ( R1 => R4 ) '&' ( R4 => R5 ) ) => ( R1 => R5 ) ) by L573 , ZF_MODEL:18;
end;
thus L578: thesis by L572 , ZF_MODEL:def 5;
end;
theorem
L579: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( R1 => ( R4 => R1 ) ) & R26 |= ( R1 => ( R4 => R1 ) ))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L580:
now
let R29 being (Function of ( VAR ) , R26);
L581: (R26 , R29 |= R1 implies R26 , R29 |= ( R4 => R1 )) by ZF_MODEL:18;
thus L582: R26 , R29 |= ( R1 => ( R4 => R1 ) ) by L581 , ZF_MODEL:18;
end;
thus L583: thesis by L580 , ZF_MODEL:def 5;
end;
theorem
L584: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R5 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( ( R1 => ( R4 => R5 ) ) => ( ( R1 => R4 ) => ( R1 => R5 ) ) ) & R26 |= ( ( R1 => ( R4 => R5 ) ) => ( ( R1 => R4 ) => ( R1 => R5 ) ) )))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R5 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L585:
now
let R29 being (Function of ( VAR ) , R26);
L586:
now
assume L587: R26 , R29 |= ( R1 => ( R4 => R5 ) );
L588:
now
assume L589: R26 , R29 |= ( R1 => R4 );
L590: (R26 , R29 |= R1 implies (R26 , R29 |= ( R4 => R5 ) & R26 , R29 |= R4)) by L589 , L587 , ZF_MODEL:18;
L591: ((R26 , R29 |= R4 & R26 , R29 |= ( R4 => R5 )) implies R26 , R29 |= R5) by ZF_MODEL:18;
thus L592: R26 , R29 |= ( R1 => R5 ) by L591 , L590 , ZF_MODEL:18;
end;
thus L593: R26 , R29 |= ( ( R1 => R4 ) => ( R1 => R5 ) ) by L588 , ZF_MODEL:18;
end;
thus L594: R26 , R29 |= ( ( R1 => ( R4 => R5 ) ) => ( ( R1 => R4 ) => ( R1 => R5 ) ) ) by L586 , ZF_MODEL:18;
end;
thus L595: thesis by L585 , ZF_MODEL:def 5;
end;
theorem
L596: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( ( R1 '&' R4 ) => R1 ) & R26 |= ( ( R1 '&' R4 ) => R1 ))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L597:
now
let R29 being (Function of ( VAR ) , R26);
L598: (R26 , R29 |= ( R1 '&' R4 ) implies R26 , R29 |= R1) by ZF_MODEL:15;
thus L599: R26 , R29 |= ( ( R1 '&' R4 ) => R1 ) by L598 , ZF_MODEL:18;
end;
thus L600: thesis by L597 , ZF_MODEL:def 5;
end;
theorem
L601: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( ( R1 '&' R4 ) => R4 ) & R26 |= ( ( R1 '&' R4 ) => R4 ))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L602:
now
let R29 being (Function of ( VAR ) , R26);
L603: (R26 , R29 |= ( R1 '&' R4 ) implies R26 , R29 |= R4) by ZF_MODEL:15;
thus L604: R26 , R29 |= ( ( R1 '&' R4 ) => R4 ) by L603 , ZF_MODEL:18;
end;
thus L605: thesis by L602 , ZF_MODEL:def 5;
end;
theorem
L606: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( ( R1 '&' R4 ) => ( R4 '&' R1 ) ) & R26 |= ( ( R1 '&' R4 ) => ( R4 '&' R1 ) ))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L607:
now
let R29 being (Function of ( VAR ) , R26);
L608: ((R26 , R29 |= R1 & R26 , R29 |= R4) implies R26 , R29 |= ( R4 '&' R1 )) by ZF_MODEL:15;
L609: (R26 , R29 |= ( R1 '&' R4 ) implies (R26 , R29 |= R1 & R26 , R29 |= R4)) by ZF_MODEL:15;
thus L610: R26 , R29 |= ( ( R1 '&' R4 ) => ( R4 '&' R1 ) ) by L609 , L608 , ZF_MODEL:18;
end;
thus L611: thesis by L607 , ZF_MODEL:def 5;
end;
theorem
L612: (for R1 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( R1 => ( R1 '&' R1 ) ) & R26 |= ( R1 => ( R1 '&' R1 ) )))))
proof
let R1 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L613:
now
let R29 being (Function of ( VAR ) , R26);
L614: (R26 , R29 |= R1 implies R26 , R29 |= ( R1 '&' R1 )) by ZF_MODEL:15;
thus L615: R26 , R29 |= ( R1 => ( R1 '&' R1 ) ) by L614 , ZF_MODEL:18;
end;
thus L616: thesis by L613 , ZF_MODEL:def 5;
end;
theorem
L617: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R5 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( ( R1 => R4 ) => ( ( R1 => R5 ) => ( R1 => ( R4 '&' R5 ) ) ) ) & R26 |= ( ( R1 => R4 ) => ( ( R1 => R5 ) => ( R1 => ( R4 '&' R5 ) ) ) )))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R5 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L618:
now
let R29 being (Function of ( VAR ) , R26);
L619:
now
assume L620: R26 , R29 |= ( R1 => R4 );
L621:
now
assume L622: R26 , R29 |= ( R1 => R5 );
L623: (R26 , R29 |= R1 implies (R26 , R29 |= R5 & R26 , R29 |= R4)) by L622 , L620 , ZF_MODEL:18;
L624: (R26 , R29 |= R1 implies R26 , R29 |= ( R4 '&' R5 )) by L623 , ZF_MODEL:15;
thus L625: R26 , R29 |= ( R1 => ( R4 '&' R5 ) ) by L624 , ZF_MODEL:18;
end;
thus L626: R26 , R29 |= ( ( R1 => R5 ) => ( R1 => ( R4 '&' R5 ) ) ) by L621 , ZF_MODEL:18;
end;
thus L627: R26 , R29 |= ( ( R1 => R4 ) => ( ( R1 => R5 ) => ( R1 => ( R4 '&' R5 ) ) ) ) by L619 , ZF_MODEL:18;
end;
thus L628: thesis by L618 , ZF_MODEL:def 5;
end;
theorem
L629: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( R1 => ( R1 'or' R4 ) ) & R26 |= ( R1 => ( R1 'or' R4 ) ))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L630:
now
let R29 being (Function of ( VAR ) , R26);
L631: (R26 , R29 |= R1 implies R26 , R29 |= ( R1 'or' R4 )) by ZF_MODEL:17;
thus L632: R26 , R29 |= ( R1 => ( R1 'or' R4 ) ) by L631 , ZF_MODEL:18;
end;
thus L633: thesis by L630 , ZF_MODEL:def 5;
end;
theorem
L634: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( R4 => ( R1 'or' R4 ) ) & R26 |= ( R4 => ( R1 'or' R4 ) ))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L635:
now
let R29 being (Function of ( VAR ) , R26);
L636: (R26 , R29 |= R4 implies R26 , R29 |= ( R1 'or' R4 )) by ZF_MODEL:17;
thus L637: R26 , R29 |= ( R4 => ( R1 'or' R4 ) ) by L636 , ZF_MODEL:18;
end;
thus L638: thesis by L635 , ZF_MODEL:def 5;
end;
theorem
L639: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( ( R1 'or' R4 ) => ( R4 'or' R1 ) ) & R26 |= ( ( R1 'or' R4 ) => ( R4 'or' R1 ) ))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L640:
now
let R29 being (Function of ( VAR ) , R26);
L641: ((R26 , R29 |= R1 or R26 , R29 |= R4) implies R26 , R29 |= ( R4 'or' R1 )) by ZF_MODEL:17;
L642: (R26 , R29 |= ( R1 'or' R4 ) implies (R26 , R29 |= R1 or R26 , R29 |= R4)) by ZF_MODEL:17;
thus L643: R26 , R29 |= ( ( R1 'or' R4 ) => ( R4 'or' R1 ) ) by L642 , L641 , ZF_MODEL:18;
end;
thus L644: thesis by L640 , ZF_MODEL:def 5;
end;
theorem
L645: (for R1 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( R1 => ( R1 'or' R1 ) ) & R26 |= ( R1 => ( R1 'or' R1 ) ))))) by L629;
theorem
L646: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R5 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( ( R1 => R5 ) => ( ( R4 => R5 ) => ( ( R1 'or' R4 ) => R5 ) ) ) & R26 |= ( ( R1 => R5 ) => ( ( R4 => R5 ) => ( ( R1 'or' R4 ) => R5 ) ) )))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R5 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L647:
now
let R29 being (Function of ( VAR ) , R26);
L648:
now
assume L649: R26 , R29 |= ( R1 => R5 );
L650:
now
assume L651: R26 , R29 |= ( R4 => R5 );
L652: ((R26 , R29 |= R1 or R26 , R29 |= R4) implies R26 , R29 |= R5) by L651 , L649 , ZF_MODEL:18;
L653: (R26 , R29 |= ( R1 'or' R4 ) implies R26 , R29 |= R5) by L652 , ZF_MODEL:17;
thus L654: R26 , R29 |= ( ( R1 'or' R4 ) => R5 ) by L653 , ZF_MODEL:18;
end;
thus L655: R26 , R29 |= ( ( R4 => R5 ) => ( ( R1 'or' R4 ) => R5 ) ) by L650 , ZF_MODEL:18;
end;
thus L656: R26 , R29 |= ( ( R1 => R5 ) => ( ( R4 => R5 ) => ( ( R1 'or' R4 ) => R5 ) ) ) by L648 , ZF_MODEL:18;
end;
thus L657: thesis by L647 , ZF_MODEL:def 5;
end;
theorem
L658: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R5 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( ( ( R1 => R5 ) '&' ( R4 => R5 ) ) => ( ( R1 'or' R4 ) => R5 ) ) & R26 |= ( ( ( R1 => R5 ) '&' ( R4 => R5 ) ) => ( ( R1 'or' R4 ) => R5 ) )))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R5 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L659:
now
let R29 being (Function of ( VAR ) , R26);
L660:
now
assume L661: R26 , R29 |= ( ( R1 => R5 ) '&' ( R4 => R5 ) );
L662: (R26 , R29 |= ( R1 => R5 ) & R26 , R29 |= ( R4 => R5 )) by L661 , ZF_MODEL:15;
L663: ((R26 , R29 |= R1 or R26 , R29 |= R4) implies R26 , R29 |= R5) by L662 , ZF_MODEL:18;
L664: (R26 , R29 |= ( R1 'or' R4 ) implies R26 , R29 |= R5) by L663 , ZF_MODEL:17;
thus L665: R26 , R29 |= ( ( R1 'or' R4 ) => R5 ) by L664 , ZF_MODEL:18;
end;
thus L666: R26 , R29 |= ( ( ( R1 => R5 ) '&' ( R4 => R5 ) ) => ( ( R1 'or' R4 ) => R5 ) ) by L660 , ZF_MODEL:18;
end;
thus L667: thesis by L659 , ZF_MODEL:def 5;
end;
theorem
L668: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( ( R1 => ( 'not' R4 ) ) => ( R4 => ( 'not' R1 ) ) ) & R26 |= ( ( R1 => ( 'not' R4 ) ) => ( R4 => ( 'not' R1 ) ) ))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L669:
now
let R29 being (Function of ( VAR ) , R26);
L670:
now
assume L671: R26 , R29 |= ( R1 => ( 'not' R4 ) );
L672: (R26 , R29 |= R1 implies R26 , R29 |= ( 'not' R4 )) by L671 , ZF_MODEL:18;
L673: (R26 , R29 |= R4 implies R26 , R29 |= ( 'not' R1 )) by L672 , ZF_MODEL:14;
thus L674: R26 , R29 |= ( R4 => ( 'not' R1 ) ) by L673 , ZF_MODEL:18;
end;
thus L675: R26 , R29 |= ( ( R1 => ( 'not' R4 ) ) => ( R4 => ( 'not' R1 ) ) ) by L670 , ZF_MODEL:18;
end;
thus L676: thesis by L669 , ZF_MODEL:def 5;
end;
theorem
L677: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( ( 'not' R1 ) => ( R1 => R4 ) ) & R26 |= ( ( 'not' R1 ) => ( R1 => R4 ) ))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L678:
now
let R29 being (Function of ( VAR ) , R26);
L679:
now
assume L680: R26 , R29 |= ( 'not' R1 );
L681: (not R26 , R29 |= R1) by L680 , ZF_MODEL:14;
thus L682: R26 , R29 |= ( R1 => R4 ) by L681 , ZF_MODEL:18;
end;
thus L683: R26 , R29 |= ( ( 'not' R1 ) => ( R1 => R4 ) ) by L679 , ZF_MODEL:18;
end;
thus L684: thesis by L678 , ZF_MODEL:def 5;
end;
theorem
L685: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( ( ( R1 => R4 ) '&' ( R1 => ( 'not' R4 ) ) ) => ( 'not' R1 ) ) & R26 |= ( ( ( R1 => R4 ) '&' ( R1 => ( 'not' R4 ) ) ) => ( 'not' R1 ) ))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L686:
now
let R29 being (Function of ( VAR ) , R26);
L687:
now
assume L688: R26 , R29 |= ( ( R1 => R4 ) '&' ( R1 => ( 'not' R4 ) ) );
L689: (R26 , R29 |= ( R1 => R4 ) & R26 , R29 |= ( R1 => ( 'not' R4 ) )) by L688 , ZF_MODEL:15;
L690: (R26 , R29 |= R1 implies (R26 , R29 |= R4 & R26 , R29 |= ( 'not' R4 ))) by L689 , ZF_MODEL:18;
thus L691: R26 , R29 |= ( 'not' R1 ) by L690 , ZF_MODEL:14;
end;
thus L692: R26 , R29 |= ( ( ( R1 => R4 ) '&' ( R1 => ( 'not' R4 ) ) ) => ( 'not' R1 ) ) by L687 , ZF_MODEL:18;
end;
thus L693: thesis by L686 , ZF_MODEL:def 5;
end;
theorem
L694: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R26 being non  empty set holds ((R26 |= ( R1 => R4 ) & R26 |= R1) implies R26 |= R4))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R26 being non  empty set;
assume L695: (R26 |= ( R1 => R4 ) & R26 |= R1);
let R29 being (Function of ( VAR ) , R26);
L696: (R26 , R29 |= ( R1 => R4 ) & R26 , R29 |= R1) by L695 , ZF_MODEL:def 5;
thus L697: thesis by L696 , ZF_MODEL:18;
end;
theorem
L698: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( ( 'not' ( R1 '&' R4 ) ) => ( ( 'not' R1 ) 'or' ( 'not' R4 ) ) ) & R26 |= ( ( 'not' ( R1 '&' R4 ) ) => ( ( 'not' R1 ) 'or' ( 'not' R4 ) ) ))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L699:
now
let R29 being (Function of ( VAR ) , R26);
L700:
now
assume L701: R26 , R29 |= ( 'not' ( R1 '&' R4 ) );
L702: (not R26 , R29 |= ( R1 '&' R4 )) by L701 , ZF_MODEL:14;
L703: ((not R26 , R29 |= R1) or (not R26 , R29 |= R4)) by L702 , ZF_MODEL:15;
L704: (R26 , R29 |= ( 'not' R1 ) or R26 , R29 |= ( 'not' R4 )) by L703 , ZF_MODEL:14;
thus L705: R26 , R29 |= ( ( 'not' R1 ) 'or' ( 'not' R4 ) ) by L704 , ZF_MODEL:17;
end;
thus L706: R26 , R29 |= ( ( 'not' ( R1 '&' R4 ) ) => ( ( 'not' R1 ) 'or' ( 'not' R4 ) ) ) by L700 , ZF_MODEL:18;
end;
thus L707: thesis by L699 , ZF_MODEL:def 5;
end;
theorem
L708: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( ( ( 'not' R1 ) 'or' ( 'not' R4 ) ) => ( 'not' ( R1 '&' R4 ) ) ) & R26 |= ( ( ( 'not' R1 ) 'or' ( 'not' R4 ) ) => ( 'not' ( R1 '&' R4 ) ) ))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L709:
now
let R29 being (Function of ( VAR ) , R26);
L710:
now
assume L711: R26 , R29 |= ( ( 'not' R1 ) 'or' ( 'not' R4 ) );
L712: (R26 , R29 |= ( 'not' R1 ) or R26 , R29 |= ( 'not' R4 )) by L711 , ZF_MODEL:17;
L713: ((not R26 , R29 |= R1) or (not R26 , R29 |= R4)) by L712 , ZF_MODEL:14;
L714: (not R26 , R29 |= ( R1 '&' R4 )) by L713 , ZF_MODEL:15;
thus L715: R26 , R29 |= ( 'not' ( R1 '&' R4 ) ) by L714 , ZF_MODEL:14;
end;
thus L716: R26 , R29 |= ( ( ( 'not' R1 ) 'or' ( 'not' R4 ) ) => ( 'not' ( R1 '&' R4 ) ) ) by L710 , ZF_MODEL:18;
end;
thus L717: thesis by L709 , ZF_MODEL:def 5;
end;
theorem
L718: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( ( 'not' ( R1 'or' R4 ) ) => ( ( 'not' R1 ) '&' ( 'not' R4 ) ) ) & R26 |= ( ( 'not' ( R1 'or' R4 ) ) => ( ( 'not' R1 ) '&' ( 'not' R4 ) ) ))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L719:
now
let R29 being (Function of ( VAR ) , R26);
L720:
now
assume L721: R26 , R29 |= ( 'not' ( R1 'or' R4 ) );
L722: (not R26 , R29 |= ( R1 'or' R4 )) by L721 , ZF_MODEL:14;
L723: (not R26 , R29 |= R4) by L722 , ZF_MODEL:17;
L724: R26 , R29 |= ( 'not' R4 ) by L723 , ZF_MODEL:14;
L725: (not R26 , R29 |= R1) by L722 , ZF_MODEL:17;
L726: R26 , R29 |= ( 'not' R1 ) by L725 , ZF_MODEL:14;
thus L727: R26 , R29 |= ( ( 'not' R1 ) '&' ( 'not' R4 ) ) by L726 , L724 , ZF_MODEL:15;
end;
thus L728: R26 , R29 |= ( ( 'not' ( R1 'or' R4 ) ) => ( ( 'not' R1 ) '&' ( 'not' R4 ) ) ) by L720 , ZF_MODEL:18;
end;
thus L729: thesis by L719 , ZF_MODEL:def 5;
end;
theorem
L730: (for R1 being ZF-formula holds (for R4 being ZF-formula holds (for R26 being non  empty set holds (for R29 being (Function of ( VAR ) , R26) holds (R26 , R29 |= ( ( ( 'not' R1 ) '&' ( 'not' R4 ) ) => ( 'not' ( R1 'or' R4 ) ) ) & R26 |= ( ( ( 'not' R1 ) '&' ( 'not' R4 ) ) => ( 'not' ( R1 'or' R4 ) ) ))))))
proof
let R1 being ZF-formula;
let R4 being ZF-formula;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L731:
now
let R29 being (Function of ( VAR ) , R26);
L732:
now
assume L733: R26 , R29 |= ( ( 'not' R1 ) '&' ( 'not' R4 ) );
L734: R26 , R29 |= ( 'not' R4 ) by L733 , ZF_MODEL:15;
L735: (not R26 , R29 |= R4) by L734 , ZF_MODEL:14;
L736: R26 , R29 |= ( 'not' R1 ) by L733 , ZF_MODEL:15;
L737: (not R26 , R29 |= R1) by L736 , ZF_MODEL:14;
L738: (not R26 , R29 |= ( R1 'or' R4 )) by L737 , L735 , ZF_MODEL:17;
thus L739: R26 , R29 |= ( 'not' ( R1 'or' R4 ) ) by L738 , ZF_MODEL:14;
end;
thus L740: R26 , R29 |= ( ( ( 'not' R1 ) '&' ( 'not' R4 ) ) => ( 'not' ( R1 'or' R4 ) ) ) by L732 , ZF_MODEL:18;
end;
thus L741: thesis by L731 , ZF_MODEL:def 5;
end;
theorem
L742: (for R10 being ZF-formula holds (for R13 being Variable holds (for R26 being non  empty set holds R26 |= ( ( All (R13 , R10) ) => R10 ))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L743: (R26 , R29 |= ( All (R13 , R10) ) implies R26 , ( R29 / (R13 , ( R29 . R13 )) ) |= R10) by L300;
L744: (R26 , R29 |= ( All (R13 , R10) ) implies R26 , R29 |= R10) by L743 , FUNCT_7:35;
thus L745: thesis by L744 , ZF_MODEL:18;
end;
theorem
L746: (for R10 being ZF-formula holds (for R13 being Variable holds (for R26 being non  empty set holds R26 |= ( R10 => ( Ex (R13 , R10) ) ))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R26 being non  empty set;
let R29 being (Function of ( VAR ) , R26);
L747: (R26 , ( R29 / (R13 , ( R29 . R13 )) ) |= R10 implies R26 , R29 |= ( Ex (R13 , R10) )) by L320;
L748: (R26 , R29 |= R10 implies R26 , R29 |= ( Ex (R13 , R10) )) by L747 , FUNCT_7:35;
thus L749: thesis by L748 , ZF_MODEL:18;
end;
theorem
L750: (for R11 being ZF-formula holds (for R12 being ZF-formula holds (for R13 being Variable holds (for R26 being non  empty set holds ((not R13 in ( Free R11 )) implies R26 |= ( ( All (R13 , ( R11 => R12 )) ) => ( R11 => ( All (R13 , R12) ) ) ))))))
proof
let R11 being ZF-formula;
let R12 being ZF-formula;
let R13 being Variable;
let R26 being non  empty set;
assume L751: (not R13 in ( Free R11 ));
let R29 being (Function of ( VAR ) , R26);
L752:
now
assume L753: R26 , R29 |= ( All (R13 , ( R11 => R12 )) );
L754:
now
assume L755: R26 , R29 |= R11;
L756:
now
let R27 being (Element of R26);
L757: R26 , R29 |= ( All (R13 , R11) ) by L751 , L755 , ZFMODEL1:10;
L758: R26 , ( R29 / (R13 , R27) ) |= R11 by L757 , L300;
L759: R26 , ( R29 / (R13 , R27) ) |= ( R11 => R12 ) by L753 , L300;
thus L760: R26 , ( R29 / (R13 , R27) ) |= R12 by L759 , L758 , ZF_MODEL:18;
end;
thus L761: R26 , R29 |= ( All (R13 , R12) ) by L756 , L300;
end;
thus L762: R26 , R29 |= ( R11 => ( All (R13 , R12) ) ) by L754 , ZF_MODEL:18;
end;
thus L763: thesis by L752 , ZF_MODEL:18;
end;
theorem
L764: (for R11 being ZF-formula holds (for R12 being ZF-formula holds (for R13 being Variable holds (for R26 being non  empty set holds (((not R13 in ( Free R11 )) & R26 |= ( R11 => R12 )) implies R26 |= ( R11 => ( All (R13 , R12) ) ))))))
proof
let R11 being ZF-formula;
let R12 being ZF-formula;
let R13 being Variable;
let R26 being non  empty set;
assume that
L765: (not R13 in ( Free R11 ))
and
L766: (for R29 being (Function of ( VAR ) , R26) holds R26 , R29 |= ( R11 => R12 ));
let R29 being (Function of ( VAR ) , R26);
L767: R26 |= ( ( All (R13 , ( R11 => R12 )) ) => ( R11 => ( All (R13 , R12) ) ) ) by L765 , L750;
L768: R26 , R29 |= ( ( All (R13 , ( R11 => R12 )) ) => ( R11 => ( All (R13 , R12) ) ) ) by L767 , ZF_MODEL:def 5;
L769: (for R27 being (Element of R26) holds R26 , ( R29 / (R13 , R27) ) |= ( R11 => R12 )) by L766;
L770: R26 , R29 |= ( All (R13 , ( R11 => R12 )) ) by L769 , L300;
thus L771: thesis by L770 , L768 , ZF_MODEL:18;
end;
theorem
L772: (for R11 being ZF-formula holds (for R12 being ZF-formula holds (for R13 being Variable holds (for R26 being non  empty set holds ((not R13 in ( Free R12 )) implies R26 |= ( ( All (R13 , ( R11 => R12 )) ) => ( ( Ex (R13 , R11) ) => R12 ) ))))))
proof
let R11 being ZF-formula;
let R12 being ZF-formula;
let R13 being Variable;
let R26 being non  empty set;
assume L773: (not R13 in ( Free R12 ));
let R29 being (Function of ( VAR ) , R26);
L774:
now
assume L775: R26 , R29 |= ( All (R13 , ( R11 => R12 )) );
L776:
now
assume L777: R26 , R29 |= ( Ex (R13 , R11) );
consider R27 being (Element of R26) such that L778: R26 , ( R29 / (R13 , R27) ) |= R11 by L777 , L320;
L779: R26 , ( R29 / (R13 , R27) ) |= ( R11 => R12 ) by L775 , L300;
L780: R26 , ( R29 / (R13 , R27) ) |= R12 by L779 , L778 , ZF_MODEL:18;
L781: R26 , ( R29 / (R13 , R27) ) |= ( All (R13 , R12) ) by L780 , L773 , ZFMODEL1:10;
L782: R26 , R29 |= ( All (R13 , R12) ) by L781 , L311;
L783: R26 , ( R29 / (R13 , ( R29 . R13 )) ) |= R12 by L782 , L300;
thus L784: R26 , R29 |= R12 by L783 , FUNCT_7:35;
end;
thus L785: R26 , R29 |= ( ( Ex (R13 , R11) ) => R12 ) by L776 , ZF_MODEL:18;
end;
thus L786: thesis by L774 , ZF_MODEL:18;
end;
theorem
L787: (for R11 being ZF-formula holds (for R12 being ZF-formula holds (for R13 being Variable holds (for R26 being non  empty set holds (((not R13 in ( Free R12 )) & R26 |= ( R11 => R12 )) implies R26 |= ( ( Ex (R13 , R11) ) => R12 ))))))
proof
let R11 being ZF-formula;
let R12 being ZF-formula;
let R13 being Variable;
let R26 being non  empty set;
assume that
L788: (not R13 in ( Free R12 ))
and
L789: (for R29 being (Function of ( VAR ) , R26) holds R26 , R29 |= ( R11 => R12 ));
let R29 being (Function of ( VAR ) , R26);
L790: R26 |= ( ( All (R13 , ( R11 => R12 )) ) => ( ( Ex (R13 , R11) ) => R12 ) ) by L788 , L772;
L791: R26 , R29 |= ( ( All (R13 , ( R11 => R12 )) ) => ( ( Ex (R13 , R11) ) => R12 ) ) by L790 , ZF_MODEL:def 5;
L792: (for R27 being (Element of R26) holds R26 , ( R29 / (R13 , R27) ) |= ( R11 => R12 )) by L789;
L793: R26 , R29 |= ( All (R13 , ( R11 => R12 )) ) by L792 , L300;
thus L794: thesis by L793 , L791 , ZF_MODEL:18;
end;
theorem
L795: (for R11 being ZF-formula holds (for R12 being ZF-formula holds (for R13 being Variable holds (for R26 being non  empty set holds (R26 |= ( R11 => ( All (R13 , R12) ) ) implies R26 |= ( R11 => R12 ))))))
proof
let R11 being ZF-formula;
let R12 being ZF-formula;
let R13 being Variable;
let R26 being non  empty set;
assume L796: (for R29 being (Function of ( VAR ) , R26) holds R26 , R29 |= ( R11 => ( All (R13 , R12) ) ));
let R29 being (Function of ( VAR ) , R26);
L797: R26 , R29 |= ( R11 => ( All (R13 , R12) ) ) by L796;
L798:
now
assume L799: R26 , R29 |= R11;
L800: R26 , R29 |= ( All (R13 , R12) ) by L799 , L797 , ZF_MODEL:18;
L801: R26 , ( R29 / (R13 , ( R29 . R13 )) ) |= R12 by L800 , L300;
thus L802: R26 , R29 |= R12 by L801 , FUNCT_7:35;
end;
thus L803: thesis by L798 , ZF_MODEL:18;
end;
theorem
L804: (for R11 being ZF-formula holds (for R12 being ZF-formula holds (for R13 being Variable holds (for R26 being non  empty set holds (R26 |= ( ( Ex (R13 , R11) ) => R12 ) implies R26 |= ( R11 => R12 ))))))
proof
let R11 being ZF-formula;
let R12 being ZF-formula;
let R13 being Variable;
let R26 being non  empty set;
assume L805: (for R29 being (Function of ( VAR ) , R26) holds R26 , R29 |= ( ( Ex (R13 , R11) ) => R12 ));
let R29 being (Function of ( VAR ) , R26);
L806: R26 , R29 |= ( ( Ex (R13 , R11) ) => R12 ) by L805;
L807:
now
assume L808: R26 , R29 |= R11;
L809: R26 , ( R29 / (R13 , ( R29 . R13 )) ) |= R11 by L808 , FUNCT_7:35;
L810: R26 , R29 |= ( Ex (R13 , R11) ) by L809 , L320;
thus L811: R26 , R29 |= R12 by L810 , L806 , ZF_MODEL:18;
end;
thus L812: thesis by L807 , ZF_MODEL:18;
end;
theorem
L813: ( WFF ) c= ( bool [: ( NAT ) , ( NAT ) :] )
proof
let R24 being set;
assume L814: R24 in ( WFF );
reconsider D12 = R24 as ZF-formula by L814 , ZF_LANG:4;
L815: D12 c= [: ( NAT ) , ( NAT ) :];
thus L816: thesis by L815;
end;
definition
let R10 being ZF-formula;
func variables_in R10 -> set equals 
( ( rng R10 ) \ { ( 0 ) , 1 , 2 , 3 , 4 } );
correctness;
end;
theorem
L818: (for R13 being Variable holds (R13 <> ( 0 ) & R13 <> 1 & R13 <> 2 & R13 <> 3 & R13 <> 4))
proof
let R13 being Variable;
L819: R13 in ( VAR );
L820: (ex R31 being (Element of ( NAT )) st (R13 = R31 & 5 <= R31)) by L819;
assume L821: (R13 = ( 0 ) or R13 = 1 or R13 = 2 or R13 = 3 or R13 = 4);
thus L822: contradiction by L821 , L820;
end;
theorem
L823: (for R13 being Variable holds (not R13 in { ( 0 ) , 1 , 2 , 3 , 4 }))
proof
let R13 being Variable;
assume L824: R13 in { ( 0 ) , 1 , 2 , 3 , 4 };
L825: R13 in ( { ( 0 ) , 1 } \/ { 2 , 3 , 4 } ) by L824 , ENUMSET1:8;
L826: (R13 in { ( 0 ) , 1 } or R13 in { 2 , 3 , 4 }) by L825 , XBOOLE_0:def 3;
L827: (R13 = ( 0 ) or R13 = 1 or R13 = 2 or R13 = 3 or R13 = 4) by L826 , ENUMSET1:def 1 , TARSKI:def 2;
L828: R13 in ( VAR );
L829: (ex R31 being (Element of ( NAT )) st (R13 = R31 & 5 <= R31)) by L828;
thus L830: contradiction by L829 , L827;
end;
theorem
L831: (for R10 being ZF-formula holds (for R24 being set holds (R24 in ( variables_in R10 ) implies (R24 <> ( 0 ) & R24 <> 1 & R24 <> 2 & R24 <> 3 & R24 <> 4))))
proof
let R10 being ZF-formula;
let R24 being set;
assume L832: R24 in ( variables_in R10 );
L833: (not R24 in { ( 0 ) , 1 , 2 , 3 , 4 }) by L832 , XBOOLE_0:def 5;
L834: (not R24 in ( { ( 0 ) , 1 } \/ { 2 , 3 , 4 } )) by L833 , ENUMSET1:8;
L835: ((not R24 in { ( 0 ) , 1 }) & (not R24 in { 2 , 3 , 4 })) by L834 , XBOOLE_0:def 3;
thus L836: thesis by L835 , ENUMSET1:def 1 , TARSKI:def 2;
end;
theorem
L837: (for R13 being Variable holds (for R16 being Variable holds ( variables_in ( R13 '=' R16 ) ) = { R13 , R16 }))
proof
let R13 being Variable;
let R16 being Variable;
L838: ( rng ( R13 '=' R16 ) ) = ( ( rng ( <* ( 0 ) *> ^ <* R13 *> ) ) \/ ( rng <* R16 *> ) ) by FINSEQ_1:31
.= ( ( ( rng <* ( 0 ) *> ) \/ ( rng <* R13 *> ) ) \/ ( rng <* R16 *> ) ) by FINSEQ_1:31
.= ( ( { ( 0 ) } \/ ( rng <* R13 *> ) ) \/ ( rng <* R16 *> ) ) by FINSEQ_1:39
.= ( ( { ( 0 ) } \/ { R13 } ) \/ ( rng <* R16 *> ) ) by FINSEQ_1:39
.= ( ( { ( 0 ) } \/ { R13 } ) \/ { R16 } ) by FINSEQ_1:39
.= ( { ( 0 ) } \/ ( { R13 } \/ { R16 } ) ) by XBOOLE_1:4
.= ( { ( 0 ) } \/ { R13 , R16 } ) by ENUMSET1:1;
thus L839: ( variables_in ( R13 '=' R16 ) ) c= { R13 , R16 }
proof
let R24 being set;
assume L840: R24 in ( variables_in ( R13 '=' R16 ) );
L841: R24 <> ( 0 ) by L840 , L831;
L842: (not R24 in { ( 0 ) }) by L841 , TARSKI:def 1;
thus L843: thesis by L842 , L838 , L840 , XBOOLE_0:def 3;
end;

let R24 being set;
assume L844: R24 in { R13 , R16 };
L845: (R24 = R13 or R24 = R16) by L844 , TARSKI:def 2;
L846: (not R24 in { ( 0 ) , 1 , 2 , 3 , 4 }) by L845 , L823;
L847: R24 in ( { ( 0 ) } \/ { R13 , R16 } ) by L844 , XBOOLE_0:def 3;
thus L848: thesis by L847 , L838 , L846 , XBOOLE_0:def 5;
end;
theorem
L849: (for R13 being Variable holds (for R16 being Variable holds ( variables_in ( R13 'in' R16 ) ) = { R13 , R16 }))
proof
let R13 being Variable;
let R16 being Variable;
L850: ( rng ( R13 'in' R16 ) ) = ( ( rng ( <* 1 *> ^ <* R13 *> ) ) \/ ( rng <* R16 *> ) ) by FINSEQ_1:31
.= ( ( ( rng <* 1 *> ) \/ ( rng <* R13 *> ) ) \/ ( rng <* R16 *> ) ) by FINSEQ_1:31
.= ( ( { 1 } \/ ( rng <* R13 *> ) ) \/ ( rng <* R16 *> ) ) by FINSEQ_1:39
.= ( ( { 1 } \/ { R13 } ) \/ ( rng <* R16 *> ) ) by FINSEQ_1:39
.= ( ( { 1 } \/ { R13 } ) \/ { R16 } ) by FINSEQ_1:39
.= ( { 1 } \/ ( { R13 } \/ { R16 } ) ) by XBOOLE_1:4
.= ( { 1 } \/ { R13 , R16 } ) by ENUMSET1:1;
thus L851: ( variables_in ( R13 'in' R16 ) ) c= { R13 , R16 }
proof
let R24 being set;
assume L852: R24 in ( variables_in ( R13 'in' R16 ) );
L853: R24 <> 1 by L852 , L831;
L854: (not R24 in { 1 }) by L853 , TARSKI:def 1;
thus L855: thesis by L854 , L850 , L852 , XBOOLE_0:def 3;
end;

let R24 being set;
assume L856: R24 in { R13 , R16 };
L857: (R24 = R13 or R24 = R16) by L856 , TARSKI:def 2;
L858: (not R24 in { ( 0 ) , 1 , 2 , 3 , 4 }) by L857 , L823;
L859: R24 in ( { 1 } \/ { R13 , R16 } ) by L856 , XBOOLE_0:def 3;
thus L860: thesis by L859 , L850 , L858 , XBOOLE_0:def 5;
end;
theorem
L861: (for R10 being ZF-formula holds ( variables_in ( 'not' R10 ) ) = ( variables_in R10 ))
proof
let R10 being ZF-formula;
L862: ( rng ( 'not' R10 ) ) = ( ( rng <* 2 *> ) \/ ( rng R10 ) ) by FINSEQ_1:31
.= ( { 2 } \/ ( rng R10 ) ) by FINSEQ_1:39;
thus L863: ( variables_in ( 'not' R10 ) ) c= ( variables_in R10 )
proof
let R24 being set;
assume L864: R24 in ( variables_in ( 'not' R10 ) );
L865: R24 <> 2 by L864 , L831;
L866: (not R24 in { 2 }) by L865 , TARSKI:def 1;
L867: R24 in ( rng R10 ) by L866 , L862 , L864 , XBOOLE_0:def 3;
L868: (not R24 in { ( 0 ) , 1 , 2 , 3 , 4 }) by L864 , XBOOLE_0:def 5;
thus L869: thesis by L868 , L867 , XBOOLE_0:def 5;
end;

thus L870: thesis by L862 , XBOOLE_1:7 , XBOOLE_1:33;
end;
theorem
L871: (for R11 being ZF-formula holds (for R12 being ZF-formula holds ( variables_in ( R11 '&' R12 ) ) = ( ( variables_in R11 ) \/ ( variables_in R12 ) )))
proof
let R11 being ZF-formula;
let R12 being ZF-formula;
L872: ( ( variables_in R11 ) \/ ( variables_in R12 ) ) = ( ( ( rng R11 ) \/ ( rng R12 ) ) \ { ( 0 ) , 1 , 2 , 3 , 4 } ) by XBOOLE_1:42;
L873: ( rng ( R11 '&' R12 ) ) = ( ( rng ( <* 3 *> ^ R11 ) ) \/ ( rng R12 ) ) by FINSEQ_1:31
.= ( ( ( rng <* 3 *> ) \/ ( rng R11 ) ) \/ ( rng R12 ) ) by FINSEQ_1:31
.= ( ( { 3 } \/ ( rng R11 ) ) \/ ( rng R12 ) ) by FINSEQ_1:39
.= ( { 3 } \/ ( ( rng R11 ) \/ ( rng R12 ) ) ) by XBOOLE_1:4;
thus L874: ( variables_in ( R11 '&' R12 ) ) c= ( ( variables_in R11 ) \/ ( variables_in R12 ) )
proof
let R24 being set;
assume L875: R24 in ( variables_in ( R11 '&' R12 ) );
L876: R24 <> 3 by L875 , L831;
L877: (not R24 in { 3 }) by L876 , TARSKI:def 1;
L878: R24 in ( ( rng R11 ) \/ ( rng R12 ) ) by L877 , L873 , L875 , XBOOLE_0:def 3;
L879: (not R24 in { ( 0 ) , 1 , 2 , 3 , 4 }) by L875 , XBOOLE_0:def 5;
thus L880: thesis by L879 , L872 , L878 , XBOOLE_0:def 5;
end;

thus L881: thesis by L873 , L872 , XBOOLE_1:7 , XBOOLE_1:33;
end;
theorem
L882: (for R10 being ZF-formula holds (for R13 being Variable holds ( variables_in ( All (R13 , R10) ) ) = ( ( variables_in R10 ) \/ { R13 } )))
proof
let R10 being ZF-formula;
let R13 being Variable;
L883: ( rng ( All (R13 , R10) ) ) = ( ( rng ( <* 4 *> ^ <* R13 *> ) ) \/ ( rng R10 ) ) by FINSEQ_1:31
.= ( ( ( rng <* 4 *> ) \/ ( rng <* R13 *> ) ) \/ ( rng R10 ) ) by FINSEQ_1:31
.= ( ( { 4 } \/ ( rng <* R13 *> ) ) \/ ( rng R10 ) ) by FINSEQ_1:39
.= ( ( { 4 } \/ { R13 } ) \/ ( rng R10 ) ) by FINSEQ_1:39
.= ( { 4 } \/ ( { R13 } \/ ( rng R10 ) ) ) by XBOOLE_1:4;
thus L884: ( variables_in ( All (R13 , R10) ) ) c= ( ( variables_in R10 ) \/ { R13 } )
proof
let R24 being set;
assume L885: R24 in ( variables_in ( All (R13 , R10) ) );
L886: R24 <> 4 by L885 , L831;
L887: (not R24 in { 4 }) by L886 , TARSKI:def 1;
L888: R24 in ( { R13 } \/ ( rng R10 ) ) by L887 , L883 , L885 , XBOOLE_0:def 3;
L889: (R24 in { R13 } or R24 in ( rng R10 )) by L888 , XBOOLE_0:def 3;
L890: (not R24 in { ( 0 ) , 1 , 2 , 3 , 4 }) by L885 , XBOOLE_0:def 5;
L891: (R24 in ( rng R10 ) implies R24 in ( variables_in R10 )) by L890 , XBOOLE_0:def 5;
thus L892: thesis by L891 , L889 , XBOOLE_0:def 3;
end;

let R24 being set;
assume L893: R24 in ( ( variables_in R10 ) \/ { R13 } );
L894: (R24 in ( variables_in R10 ) or R24 in { R13 }) by L893 , XBOOLE_0:def 3;
L895: R24 in ( { R13 } \/ ( rng R10 ) ) by L894 , XBOOLE_0:def 3;
L896: R24 in ( { 4 } \/ ( { R13 } \/ ( rng R10 ) ) ) by L895 , XBOOLE_0:def 3;
L897: ((R24 in ( rng R10 ) & (not R24 in { ( 0 ) , 1 , 2 , 3 , 4 })) or (R24 in { R13 } & R13 = R24)) by L894 , TARSKI:def 1 , XBOOLE_0:def 5;
L898: (not R24 in { ( 0 ) , 1 , 2 , 3 , 4 }) by L897 , L823;
thus L899: thesis by L898 , L883 , L896 , XBOOLE_0:def 5;
end;
theorem
L900: (for R11 being ZF-formula holds (for R12 being ZF-formula holds ( variables_in ( R11 'or' R12 ) ) = ( ( variables_in R11 ) \/ ( variables_in R12 ) )))
proof
let R11 being ZF-formula;
let R12 being ZF-formula;
thus L901: ( variables_in ( R11 'or' R12 ) ) = ( variables_in ( ( 'not' R11 ) '&' ( 'not' R12 ) ) ) by L861
.= ( ( variables_in ( 'not' R11 ) ) \/ ( variables_in ( 'not' R12 ) ) ) by L871
.= ( ( variables_in R11 ) \/ ( variables_in ( 'not' R12 ) ) ) by L861
.= ( ( variables_in R11 ) \/ ( variables_in R12 ) ) by L861;
end;
theorem
L902: (for R11 being ZF-formula holds (for R12 being ZF-formula holds ( variables_in ( R11 => R12 ) ) = ( ( variables_in R11 ) \/ ( variables_in R12 ) )))
proof
let R11 being ZF-formula;
let R12 being ZF-formula;
thus L903: ( variables_in ( R11 => R12 ) ) = ( variables_in ( R11 '&' ( 'not' R12 ) ) ) by L861
.= ( ( variables_in R11 ) \/ ( variables_in ( 'not' R12 ) ) ) by L871
.= ( ( variables_in R11 ) \/ ( variables_in R12 ) ) by L861;
end;
theorem
L904: (for R11 being ZF-formula holds (for R12 being ZF-formula holds ( variables_in ( R11 <=> R12 ) ) = ( ( variables_in R11 ) \/ ( variables_in R12 ) )))
proof
let R11 being ZF-formula;
let R12 being ZF-formula;
thus L905: ( variables_in ( R11 <=> R12 ) ) = ( ( variables_in ( R11 => R12 ) ) \/ ( variables_in ( R12 => R11 ) ) ) by L871
.= ( ( ( variables_in R11 ) \/ ( variables_in R12 ) ) \/ ( variables_in ( R12 => R11 ) ) ) by L902
.= ( ( ( variables_in R11 ) \/ ( variables_in R12 ) ) \/ ( ( variables_in R11 ) \/ ( variables_in R12 ) ) ) by L902
.= ( ( variables_in R11 ) \/ ( variables_in R12 ) );
end;
theorem
L906: (for R10 being ZF-formula holds (for R13 being Variable holds ( variables_in ( Ex (R13 , R10) ) ) = ( ( variables_in R10 ) \/ { R13 } )))
proof
let R10 being ZF-formula;
let R13 being Variable;
thus L907: ( variables_in ( Ex (R13 , R10) ) ) = ( variables_in ( All (R13 , ( 'not' R10 )) ) ) by L861
.= ( ( variables_in ( 'not' R10 ) ) \/ { R13 } ) by L882
.= ( ( variables_in R10 ) \/ { R13 } ) by L861;
end;
theorem
L908: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds ( variables_in ( All (R13 , R16 , R10) ) ) = ( ( variables_in R10 ) \/ { R13 , R16 } ))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
thus L909: ( variables_in ( All (R13 , R16 , R10) ) ) = ( ( variables_in ( All (R16 , R10) ) ) \/ { R13 } ) by L882
.= ( ( ( variables_in R10 ) \/ { R16 } ) \/ { R13 } ) by L882
.= ( ( variables_in R10 ) \/ ( { R16 } \/ { R13 } ) ) by XBOOLE_1:4
.= ( ( variables_in R10 ) \/ { R13 , R16 } ) by ENUMSET1:1;
end;
theorem
L910: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds ( variables_in ( Ex (R13 , R16 , R10) ) ) = ( ( variables_in R10 ) \/ { R13 , R16 } ))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
thus L911: ( variables_in ( Ex (R13 , R16 , R10) ) ) = ( ( variables_in ( Ex (R16 , R10) ) ) \/ { R13 } ) by L906
.= ( ( ( variables_in R10 ) \/ { R16 } ) \/ { R13 } ) by L906
.= ( ( variables_in R10 ) \/ ( { R16 } \/ { R13 } ) ) by XBOOLE_1:4
.= ( ( variables_in R10 ) \/ { R13 , R16 } ) by ENUMSET1:1;
end;
theorem
L912: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (for R19 being Variable holds ( variables_in ( All (R13 , R16 , R19 , R10) ) ) = ( ( variables_in R10 ) \/ { R13 , R16 , R19 } )))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
let R19 being Variable;
thus L913: ( variables_in ( All (R13 , R16 , R19 , R10) ) ) = ( ( variables_in ( All (R16 , R19 , R10) ) ) \/ { R13 } ) by L882
.= ( ( ( variables_in R10 ) \/ { R16 , R19 } ) \/ { R13 } ) by L908
.= ( ( variables_in R10 ) \/ ( { R16 , R19 } \/ { R13 } ) ) by XBOOLE_1:4
.= ( ( variables_in R10 ) \/ { R16 , R19 , R13 } ) by ENUMSET1:3
.= ( ( variables_in R10 ) \/ { R13 , R16 , R19 } ) by ENUMSET1:59;
end;
theorem
L914: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (for R19 being Variable holds ( variables_in ( Ex (R13 , R16 , R19 , R10) ) ) = ( ( variables_in R10 ) \/ { R13 , R16 , R19 } )))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
let R19 being Variable;
thus L915: ( variables_in ( Ex (R13 , R16 , R19 , R10) ) ) = ( ( variables_in ( Ex (R16 , R19 , R10) ) ) \/ { R13 } ) by L906
.= ( ( ( variables_in R10 ) \/ { R16 , R19 } ) \/ { R13 } ) by L910
.= ( ( variables_in R10 ) \/ ( { R16 , R19 } \/ { R13 } ) ) by XBOOLE_1:4
.= ( ( variables_in R10 ) \/ { R16 , R19 , R13 } ) by ENUMSET1:3
.= ( ( variables_in R10 ) \/ { R13 , R16 , R19 } ) by ENUMSET1:59;
end;
theorem
L916: (for R10 being ZF-formula holds ( Free R10 ) c= ( variables_in R10 ))
proof
let R10 being ZF-formula;
defpred S3[ ZF-formula ] means ( Free $1 ) c= ( variables_in $1 );
L917: (for R11 being ZF-formula holds (S3[ R11 ] implies S3[ ( 'not' R11 ) ]))
proof
let R11 being ZF-formula;
assume L918: ( Free R11 ) c= ( variables_in R11 );
L919: ( Free ( 'not' R11 ) ) c= ( variables_in R11 ) by L918 , L237;
thus L920: thesis by L919 , L861;
end;
L921: (for R11 being ZF-formula holds (for R12 being ZF-formula holds ((S3[ R11 ] & S3[ R12 ]) implies S3[ ( R11 '&' R12 ) ])))
proof
let R11 being ZF-formula;
let R12 being ZF-formula;
assume L922: (( Free R11 ) c= ( variables_in R11 ) & ( Free R12 ) c= ( variables_in R12 ));
L923: ( ( Free R11 ) \/ ( Free R12 ) ) c= ( ( variables_in R11 ) \/ ( variables_in R12 ) ) by L922 , XBOOLE_1:13;
L924: ( Free ( R11 '&' R12 ) ) c= ( ( variables_in R11 ) \/ ( variables_in R12 ) ) by L923 , L240;
thus L925: thesis by L924 , L871;
end;
L926: (for R11 being ZF-formula holds (for R13 being Variable holds (S3[ R11 ] implies S3[ ( All (R13 , R11) ) ])))
proof
let R11 being ZF-formula;
let R13 being Variable;
L927: ( ( Free R11 ) \ { R13 } ) c= ( Free R11 ) by XBOOLE_1:36;
L928: ( Free ( All (R13 , R11) ) ) c= ( Free R11 ) by L927 , L244;
L929: ( variables_in R11 ) c= ( ( variables_in R11 ) \/ { R13 } ) by XBOOLE_1:7;
L930: ( variables_in R11 ) c= ( variables_in ( All (R13 , R11) ) ) by L929 , L882;
assume L931: ( Free R11 ) c= ( variables_in R11 );
L932: ( Free R11 ) c= ( variables_in ( All (R13 , R11) ) ) by L931 , L930 , XBOOLE_1:1;
thus L933: thesis by L932 , L928 , XBOOLE_1:1;
end;
L934: (for R13 being Variable holds (for R16 being Variable holds (S3[ ( R13 '=' R16 ) ] & S3[ ( R13 'in' R16 ) ])))
proof
let R13 being Variable;
let R16 being Variable;
L935: (( variables_in ( R13 '=' R16 ) ) = { R13 , R16 } & ( variables_in ( R13 'in' R16 ) ) = { R13 , R16 }) by L837 , L849;
thus L936: thesis by L935 , L229 , L233;
end;
L937: (for R10 being ZF-formula holds S3[ R10 ]) from ZFInduction(L934 , L917 , L921 , L926);
thus L938: thesis by L937;
end;
definition
let R10 being ZF-formula;
redefine func variables_in R10 -> non  empty (Subset of ( VAR ));

coherence
proof
defpred S4[ ZF-formula ] means ( variables_in $1 ) <> ( {} );
L939: (for R11 being ZF-formula holds (for R12 being ZF-formula holds ((S4[ R11 ] & S4[ R12 ]) implies S4[ ( R11 '&' R12 ) ])))
proof
let R11 being ZF-formula;
let R12 being ZF-formula;
L940: ( variables_in ( R11 '&' R12 ) ) = ( ( variables_in R11 ) \/ ( variables_in R12 ) ) by L871;
thus L941: thesis by L940;
end;
L942: (for R10 being ZF-formula holds (for R13 being Variable holds (S4[ R10 ] implies S4[ ( All (R13 , R10) ) ])))
proof
let R10 being ZF-formula;
let R13 being Variable;
L943: ( variables_in ( All (R13 , R10) ) ) = ( ( variables_in R10 ) \/ { R13 } ) by L882;
thus L944: thesis by L943;
end;
L945: (for R13 being Variable holds (for R16 being Variable holds (S4[ ( R13 '=' R16 ) ] & S4[ ( R13 'in' R16 ) ])))
proof
let R13 being Variable;
let R16 being Variable;
L946: ( variables_in ( R13 '=' R16 ) ) = { R13 , R16 } by L837;
thus L947: thesis by L946 , L849;
end;
L948: (for R10 being ZF-formula holds (S4[ R10 ] implies S4[ ( 'not' R10 ) ])) by L861;
L949: (for R10 being ZF-formula holds S4[ R10 ]) from ZFInduction(L945 , L948 , L939 , L942);
reconsider D13 = ( variables_in R10 ) as non  empty set by L949;
L950: D13 c= ( VAR )
proof
let R24 being set;
L951: ( rng R10 ) c= ( NAT ) by FINSEQ_1:def 4;
L952: ( ( 0 ) + 1 ) = 1;
assume L953: R24 in D13;
L954: R24 in ( rng R10 ) by L953;
reconsider D14 = R24 as (Element of ( NAT )) by L954 , L951;
L955: R24 <> ( 0 ) by L953 , L831;
L956: 1 <= D14 by L955 , L952 , NAT_1:13;
L957: ( 3 + 1 ) = 4;
L958: ( 2 + 1 ) = 3;
L959: ( 1 + 1 ) = 2;
L960: R24 <> 1 by L953 , L831;
L961: 1 < D14 by L960 , L956 , XXREAL_0:1;
L962: 2 <= D14 by L961 , L959 , NAT_1:13;
L963: R24 <> 2 by L953 , L831;
L964: 2 < D14 by L963 , L962 , XXREAL_0:1;
L965: 3 <= D14 by L964 , L958 , NAT_1:13;
L966: R24 <> 3 by L953 , L831;
L967: 3 < D14 by L966 , L965 , XXREAL_0:1;
L968: 4 <= D14 by L967 , L957 , NAT_1:13;
L969: R24 <> 4 by L953 , L831;
L970: 4 < D14 by L969 , L968 , XXREAL_0:1;
L971: ( 4 + 1 ) = 5;
L972: 5 <= D14 by L971 , L970 , NAT_1:13;
thus L973: thesis by L972;
end;
thus L974: thesis by L950;
end;
end;
definition
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
func R10 / (R13 , R16) -> Function means 
:L976: (( dom it ) = ( dom R10 ) & (for R24 being set holds (R24 in ( dom R10 ) implies ((( R10 . R24 ) = R13 implies ( it . R24 ) = R16) & (( R10 . R24 ) <> R13 implies ( it . R24 ) = ( R10 . R24 ))))));
existence
proof
deffunc H1(set) = ( R10 . $1 );
deffunc H2(set) = R16;
set D15 = ( dom R10 );
defpred S5[ set ] means ( R10 . $1 ) = R13;
thus L977: (ex B1 being Function st (( dom B1 ) = D15 & (for R24 being set holds (R24 in D15 implies ((S5[ R24 ] implies ( B1 . R24 ) = H2(R24)) & ((not S5[ R24 ]) implies ( B1 . R24 ) = H1(R24))))))) from PARTFUN1:sch 1;
end;
uniqueness
proof
let C15 , C16 being Function;
assume that
L978: ( dom C15 ) = ( dom R10 )
and
L979: (for R24 being set holds (R24 in ( dom R10 ) implies ((( R10 . R24 ) = R13 implies ( C15 . R24 ) = R16) & (( R10 . R24 ) <> R13 implies ( C15 . R24 ) = ( R10 . R24 )))))
and
L980: ( dom C16 ) = ( dom R10 )
and
L981: (for R24 being set holds (R24 in ( dom R10 ) implies ((( R10 . R24 ) = R13 implies ( C16 . R24 ) = R16) & (( R10 . R24 ) <> R13 implies ( C16 . R24 ) = ( R10 . R24 )))));
L982:
now
let R24 being set;
assume L983: R24 in ( dom R10 );
L984: (( R10 . R24 ) <> R13 implies ( C15 . R24 ) = ( R10 . R24 )) by L983 , L979;
L985: (( R10 . R24 ) = R13 implies ( C15 . R24 ) = R16) by L979 , L983;
thus L986: ( C15 . R24 ) = ( C16 . R24 ) by L985 , L981 , L983 , L984;
end;
thus L987: thesis by L982 , L978 , L980 , FUNCT_1:2;
end;
end;
theorem
L989: (for R14 being Variable holds (for R15 being Variable holds (for R17 being Variable holds (for R18 being Variable holds (for R20 being Variable holds (for R21 being Variable holds (( ( R14 '=' R15 ) / (R17 , R18) ) = ( R20 '=' R21 ) iff ((R14 <> R17 & R15 <> R17 & R20 = R14 & R21 = R15) or (R14 = R17 & R15 <> R17 & R20 = R18 & R21 = R15) or (R14 <> R17 & R15 = R17 & R20 = R14 & R21 = R18) or (R14 = R17 & R15 = R17 & R20 = R18 & R21 = R18)))))))))
proof
let R14 being Variable;
let R15 being Variable;
let R17 being Variable;
let R18 being Variable;
let R20 being Variable;
let R21 being Variable;
set D16 = ( R14 '=' R15 );
set D17 = ( R20 '=' R21 );
set D18 = ( D16 / (R17 , R18) );
L990: (( D16 . 1 ) = ( 0 ) & R17 <> ( 0 )) by L818 , ZF_LANG:15;
L991: D16 is  being_equality by ZF_LANG:5;
L992: D16 is  atomic by L991 , ZF_LANG:def 15;
L993: ( len D16 ) = 3 by L992 , ZF_LANG:11;
L994: ( dom D16 ) = { 1 , 2 , 3 } by L993 , FINSEQ_1:def 3 , FINSEQ_3:1;
L995: D17 is  being_equality by ZF_LANG:5;
L996: D17 is  atomic by L995 , ZF_LANG:def 15;
L997: ( len D17 ) = 3 by L996 , ZF_LANG:11;
L998: ( dom D17 ) = ( Seg 3 ) by L997 , FINSEQ_1:def 3;
L999: ( Var1 D17 ) = R20 by L1;
L1000: ( D17 . 2 ) = R20 by L999 , L996 , ZF_LANG:35;
L1001: ( Var2 D17 ) = R21 by L1;
L1002: ( D17 . 3 ) = R21 by L1001 , L996 , ZF_LANG:35;
L1003: ( Var2 D16 ) = R15 by L1;
L1004: ( D16 . 3 ) = R15 by L1003 , L992 , ZF_LANG:35;
L1005: ( Var1 D16 ) = R14 by L1;
L1006: ( D16 . 2 ) = R14 by L1005 , L992 , ZF_LANG:35;
thus L1007: (( ( R14 '=' R15 ) / (R17 , R18) ) = ( R20 '=' R21 ) implies ((R14 <> R17 & R15 <> R17 & R20 = R14 & R21 = R15) or (R14 = R17 & R15 <> R17 & R20 = R18 & R21 = R15) or (R14 <> R17 & R15 = R17 & R20 = R14 & R21 = R18) or (R14 = R17 & R15 = R17 & R20 = R18 & R21 = R18)))
proof
assume L1008: ( ( R14 '=' R15 ) / (R17 , R18) ) = ( R20 '=' R21 );
per cases ;
case L1009: (R14 <> R17 & R15 <> R17);
L1010: (2 in ( dom D16 ) & 3 in ( dom D16 )) by L994 , ENUMSET1:def 1;
thus L1011: thesis by L1010 , L1006 , L1004 , L1000 , L1002 , L1008 , L1009 , L976;
end;
case L1012: (R14 = R17 & R15 <> R17);
L1013: (2 in ( dom D16 ) & 3 in ( dom D16 )) by L994 , ENUMSET1:def 1;
L1014: ( D16 . 2 ) = R17 by L992 , L1005 , L1012 , ZF_LANG:35;
thus L1015: thesis by L1014 , L1004 , L1000 , L1002 , L1008 , L1012 , L1013 , L976;
end;
case L1016: (R14 <> R17 & R15 = R17);
L1017: (2 in ( dom D16 ) & 3 in ( dom D16 )) by L994 , ENUMSET1:def 1;
L1018: ( D16 . 3 ) = R17 by L992 , L1003 , L1016 , ZF_LANG:35;
thus L1019: thesis by L1018 , L1006 , L1000 , L1002 , L1008 , L1016 , L1017 , L976;
end;
case L1020: (R14 = R17 & R15 = R17);
L1021: (2 in ( dom D16 ) & 3 in ( dom D16 )) by L994 , ENUMSET1:def 1;
L1022: (( D16 . 2 ) = R17 & ( D16 . 3 ) = R17) by L992 , L1005 , L1003 , L1020 , ZF_LANG:35;
thus L1023: thesis by L1022 , L1000 , L1002 , L1008 , L1021 , L976;
end;
end;

L1025: ( dom D16 ) = ( Seg 3 ) by L993 , FINSEQ_1:def 3;
L1026: ( dom D18 ) = ( dom D16 ) by L976;
L1027:
now
assume L1028: (R14 <> R17 & R15 <> R17 & R20 = R14 & R21 = R15);
L1029:
now
let R24 being set;
assume L1030: R24 in ( dom D16 );
L1031: (R24 = 1 or R24 = 2 or R24 = 3) by L1030 , L994 , ENUMSET1:def 1;
thus L1032: ( D17 . R24 ) = ( D18 . R24 ) by L1031 , L1006 , L1004 , L990 , L1028 , L1030 , L976;
end;
thus L1033: D18 = D17 by L1029 , L1026 , L1025 , L998 , FUNCT_1:2;
end;
L1034: ( D17 . 1 ) = ( 0 ) by ZF_LANG:15;
L1035:
now
assume L1036: (R14 <> R17 & R15 = R17 & R20 = R14 & R21 = R18);
L1037:
now
let R24 being set;
assume L1038: R24 in ( dom D16 );
L1039: (R24 = 1 or R24 = 2 or R24 = 3) by L1038 , L994 , ENUMSET1:def 1;
thus L1040: ( D17 . R24 ) = ( D18 . R24 ) by L1039 , L1006 , L1004 , L1034 , L1000 , L1002 , L990 , L1036 , L1038 , L976;
end;
thus L1041: D18 = D17 by L1037 , L1026 , L1025 , L998 , FUNCT_1:2;
end;
L1042:
now
assume L1043: (R14 = R17 & R15 = R17 & R20 = R18 & R21 = R18);
L1044:
now
let R24 being set;
assume L1045: R24 in ( dom D16 );
L1046: (R24 = 1 or R24 = 2 or R24 = 3) by L1045 , L994 , ENUMSET1:def 1;
thus L1047: ( D17 . R24 ) = ( D18 . R24 ) by L1046 , L1006 , L1004 , L1034 , L1000 , L1002 , L990 , L1043 , L1045 , L976;
end;
thus L1048: D18 = D17 by L1044 , L1026 , L1025 , L998 , FUNCT_1:2;
end;
L1049:
now
assume L1050: (R14 = R17 & R15 <> R17 & R20 = R18 & R21 = R15);
L1051:
now
let R24 being set;
assume L1052: R24 in ( dom D16 );
L1053: (R24 = 1 or R24 = 2 or R24 = 3) by L1052 , L994 , ENUMSET1:def 1;
thus L1054: ( D17 . R24 ) = ( D18 . R24 ) by L1053 , L1006 , L1004 , L1034 , L1000 , L1002 , L990 , L1050 , L1052 , L976;
end;
thus L1055: D18 = D17 by L1051 , L1026 , L1025 , L998 , FUNCT_1:2;
end;
thus L1056: thesis by L1049 , L1027 , L1035 , L1042;
end;
theorem
L1057: (for R14 being Variable holds (for R15 being Variable holds (for R17 being Variable holds (for R18 being Variable holds (ex R20 being Variable st (ex R21 being Variable st ( ( R14 '=' R15 ) / (R17 , R18) ) = ( R20 '=' R21 )))))))
proof
let R14 being Variable;
let R15 being Variable;
let R17 being Variable;
let R18 being Variable;
L1058: ((R14 <> R17 & R15 <> R17) or (R14 = R17 & R15 <> R17) or (R14 <> R17 & R15 = R17) or (R14 = R17 & R15 = R17));
consider R20 being Variable, R21 being Variable such that L1059: ((R14 <> R17 & R15 <> R17 & R20 = R14 & R21 = R15) or (R14 = R17 & R15 <> R17 & R20 = R18 & R21 = R15) or (R14 <> R17 & R15 = R17 & R20 = R14 & R21 = R18) or (R14 = R17 & R15 = R17 & R20 = R18 & R21 = R18)) by L1058;
take R20;
take R21;
thus L1060: thesis by L1059 , L989;
end;
theorem
L1061: (for R14 being Variable holds (for R15 being Variable holds (for R17 being Variable holds (for R18 being Variable holds (for R20 being Variable holds (for R21 being Variable holds (( ( R14 'in' R15 ) / (R17 , R18) ) = ( R20 'in' R21 ) iff ((R14 <> R17 & R15 <> R17 & R20 = R14 & R21 = R15) or (R14 = R17 & R15 <> R17 & R20 = R18 & R21 = R15) or (R14 <> R17 & R15 = R17 & R20 = R14 & R21 = R18) or (R14 = R17 & R15 = R17 & R20 = R18 & R21 = R18)))))))))
proof
let R14 being Variable;
let R15 being Variable;
let R17 being Variable;
let R18 being Variable;
let R20 being Variable;
let R21 being Variable;
set D19 = ( R14 'in' R15 );
set D20 = ( R20 'in' R21 );
set D21 = ( D19 / (R17 , R18) );
L1062: (( D19 . 1 ) = 1 & R17 <> 1) by L818 , ZF_LANG:15;
L1063: D19 is  being_membership by ZF_LANG:5;
L1064: D19 is  atomic by L1063 , ZF_LANG:def 15;
L1065: ( len D19 ) = 3 by L1064 , ZF_LANG:11;
L1066: ( dom D19 ) = { 1 , 2 , 3 } by L1065 , FINSEQ_1:def 3 , FINSEQ_3:1;
L1067: D20 is  being_membership by ZF_LANG:5;
L1068: D20 is  atomic by L1067 , ZF_LANG:def 15;
L1069: ( len D20 ) = 3 by L1068 , ZF_LANG:11;
L1070: ( dom D20 ) = ( Seg 3 ) by L1069 , FINSEQ_1:def 3;
L1071: ( Var1 D20 ) = R20 by L5;
L1072: ( D20 . 2 ) = R20 by L1071 , L1068 , ZF_LANG:35;
L1073: ( Var2 D20 ) = R21 by L5;
L1074: ( D20 . 3 ) = R21 by L1073 , L1068 , ZF_LANG:35;
L1075: ( Var2 D19 ) = R15 by L5;
L1076: ( D19 . 3 ) = R15 by L1075 , L1064 , ZF_LANG:35;
L1077: ( Var1 D19 ) = R14 by L5;
L1078: ( D19 . 2 ) = R14 by L1077 , L1064 , ZF_LANG:35;
thus L1079: (( ( R14 'in' R15 ) / (R17 , R18) ) = ( R20 'in' R21 ) implies ((R14 <> R17 & R15 <> R17 & R20 = R14 & R21 = R15) or (R14 = R17 & R15 <> R17 & R20 = R18 & R21 = R15) or (R14 <> R17 & R15 = R17 & R20 = R14 & R21 = R18) or (R14 = R17 & R15 = R17 & R20 = R18 & R21 = R18)))
proof
assume L1080: ( ( R14 'in' R15 ) / (R17 , R18) ) = ( R20 'in' R21 );
per cases ;
case L1081: (R14 <> R17 & R15 <> R17);
L1082: (2 in ( dom D19 ) & 3 in ( dom D19 )) by L1066 , ENUMSET1:def 1;
thus L1083: thesis by L1082 , L1078 , L1076 , L1072 , L1074 , L1080 , L1081 , L976;
end;
case L1084: (R14 = R17 & R15 <> R17);
L1085: (2 in ( dom D19 ) & 3 in ( dom D19 )) by L1066 , ENUMSET1:def 1;
L1086: ( D19 . 2 ) = R17 by L1064 , L1077 , L1084 , ZF_LANG:35;
thus L1087: thesis by L1086 , L1076 , L1072 , L1074 , L1080 , L1084 , L1085 , L976;
end;
case L1088: (R14 <> R17 & R15 = R17);
L1089: (2 in ( dom D19 ) & 3 in ( dom D19 )) by L1066 , ENUMSET1:def 1;
L1090: ( D19 . 3 ) = R17 by L1064 , L1075 , L1088 , ZF_LANG:35;
thus L1091: thesis by L1090 , L1078 , L1072 , L1074 , L1080 , L1088 , L1089 , L976;
end;
case L1092: (R14 = R17 & R15 = R17);
L1093: (2 in ( dom D19 ) & 3 in ( dom D19 )) by L1066 , ENUMSET1:def 1;
L1094: (( D19 . 2 ) = R17 & ( D19 . 3 ) = R17) by L1064 , L1077 , L1075 , L1092 , ZF_LANG:35;
thus L1095: thesis by L1094 , L1072 , L1074 , L1080 , L1093 , L976;
end;
end;

L1097: ( dom D19 ) = ( Seg 3 ) by L1065 , FINSEQ_1:def 3;
L1098: ( dom D21 ) = ( dom D19 ) by L976;
L1099:
now
assume L1100: (R14 <> R17 & R15 <> R17 & R20 = R14 & R21 = R15);
L1101:
now
let R24 being set;
assume L1102: R24 in ( dom D19 );
L1103: (R24 = 1 or R24 = 2 or R24 = 3) by L1102 , L1066 , ENUMSET1:def 1;
thus L1104: ( D20 . R24 ) = ( D21 . R24 ) by L1103 , L1078 , L1076 , L1062 , L1100 , L1102 , L976;
end;
thus L1105: D21 = D20 by L1101 , L1098 , L1097 , L1070 , FUNCT_1:2;
end;
L1106: ( D20 . 1 ) = 1 by ZF_LANG:15;
L1107:
now
assume L1108: (R14 <> R17 & R15 = R17 & R20 = R14 & R21 = R18);
L1109:
now
let R24 being set;
assume L1110: R24 in ( dom D19 );
L1111: (R24 = 1 or R24 = 2 or R24 = 3) by L1110 , L1066 , ENUMSET1:def 1;
thus L1112: ( D20 . R24 ) = ( D21 . R24 ) by L1111 , L1078 , L1076 , L1106 , L1072 , L1074 , L1062 , L1108 , L1110 , L976;
end;
thus L1113: D21 = D20 by L1109 , L1098 , L1097 , L1070 , FUNCT_1:2;
end;
L1114:
now
assume L1115: (R14 = R17 & R15 = R17 & R20 = R18 & R21 = R18);
L1116:
now
let R24 being set;
assume L1117: R24 in ( dom D19 );
L1118: (R24 = 1 or R24 = 2 or R24 = 3) by L1117 , L1066 , ENUMSET1:def 1;
thus L1119: ( D20 . R24 ) = ( D21 . R24 ) by L1118 , L1078 , L1076 , L1106 , L1072 , L1074 , L1062 , L1115 , L1117 , L976;
end;
thus L1120: D21 = D20 by L1116 , L1098 , L1097 , L1070 , FUNCT_1:2;
end;
L1121:
now
assume L1122: (R14 = R17 & R15 <> R17 & R20 = R18 & R21 = R15);
L1123:
now
let R24 being set;
assume L1124: R24 in ( dom D19 );
L1125: (R24 = 1 or R24 = 2 or R24 = 3) by L1124 , L1066 , ENUMSET1:def 1;
thus L1126: ( D20 . R24 ) = ( D21 . R24 ) by L1125 , L1078 , L1076 , L1106 , L1072 , L1074 , L1062 , L1122 , L1124 , L976;
end;
thus L1127: D21 = D20 by L1123 , L1098 , L1097 , L1070 , FUNCT_1:2;
end;
thus L1128: thesis by L1121 , L1099 , L1107 , L1114;
end;
theorem
L1129: (for R14 being Variable holds (for R15 being Variable holds (for R17 being Variable holds (for R18 being Variable holds (ex R20 being Variable st (ex R21 being Variable st ( ( R14 'in' R15 ) / (R17 , R18) ) = ( R20 'in' R21 )))))))
proof
let R14 being Variable;
let R15 being Variable;
let R17 being Variable;
let R18 being Variable;
L1130: ((R14 <> R17 & R15 <> R17) or (R14 = R17 & R15 <> R17) or (R14 <> R17 & R15 = R17) or (R14 = R17 & R15 = R17));
consider R20 being Variable, R21 being Variable such that L1131: ((R14 <> R17 & R15 <> R17 & R20 = R14 & R21 = R15) or (R14 = R17 & R15 <> R17 & R20 = R18 & R21 = R15) or (R14 <> R17 & R15 = R17 & R20 = R14 & R21 = R18) or (R14 = R17 & R15 = R17 & R20 = R18 & R21 = R18)) by L1130;
take R20;
take R21;
thus L1132: thesis by L1131 , L1061;
end;
theorem
L1133: (for R6 being ZF-formula holds (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (( 'not' R6 ) = ( ( 'not' R10 ) / (R13 , R16) ) iff R6 = ( R10 / (R13 , R16) ))))))
proof
let R6 being ZF-formula;
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
set D22 = ( ( 'not' R10 ) / (R13 , R16) );
L1134: ( len <* 2 *> ) = 1 by FINSEQ_1:39;
L1135: (( dom ( 'not' R6 ) ) = ( Seg ( len ( 'not' R6 ) ) ) & ( dom ( 'not' R10 ) ) = ( Seg ( len ( 'not' R10 ) ) )) by FINSEQ_1:def 3;
L1136: (( len ( 'not' R6 ) ) = ( ( len <* 2 *> ) + ( len R6 ) ) & ( len ( 'not' R10 ) ) = ( ( len <* 2 *> ) + ( len R10 ) )) by FINSEQ_1:22;
L1137: (( dom R6 ) = ( Seg ( len R6 ) ) & ( dom R10 ) = ( Seg ( len R10 ) )) by FINSEQ_1:def 3;
thus L1138: (( 'not' R6 ) = ( ( 'not' R10 ) / (R13 , R16) ) implies R6 = ( R10 / (R13 , R16) ))
proof
assume L1139: ( 'not' R6 ) = D22;
L1140: ( dom ( 'not' R6 ) ) = ( dom ( 'not' R10 ) ) by L1139 , L976;
L1141: ( len ( 'not' R6 ) ) = ( len ( 'not' R10 ) ) by L1140 , FINSEQ_3:29;
L1142:
now
let R24 being set;
assume L1143: R24 in ( dom R6 );
reconsider D23 = R24 as (Element of ( NAT )) by L1143;
L1144: (( R6 . R24 ) = ( D22 . ( 1 + D23 ) ) & ( 1 + D23 ) in ( dom D22 )) by L1134 , L1139 , L1143 , FINSEQ_1:28 , FINSEQ_1:def 7;
L1145: ( ( 'not' R10 ) . ( 1 + D23 ) ) = ( R10 . R24 ) by L1134 , L1137 , L1136 , L1141 , L1143 , FINSEQ_1:def 7;
L1146: (( R10 . R24 ) = R13 implies ( R6 . R24 ) = R16) by L1145 , L1139 , L1140 , L1144 , L976;
L1147: (( R10 . R24 ) <> R13 implies ( R6 . R24 ) = ( R10 . R24 )) by L1139 , L1140 , L1144 , L1145 , L976;
L1148: (( R10 . R24 ) = R13 implies ( ( R10 / (R13 , R16) ) . R24 ) = R16) by L1137 , L1136 , L1141 , L1143 , L976;
thus L1149: ( R6 . R24 ) = ( ( R10 / (R13 , R16) ) . R24 ) by L1148 , L1137 , L1136 , L1141 , L1143 , L1146 , L1147 , L976;
end;
L1150: ( dom R10 ) = ( dom ( R10 / (R13 , R16) ) ) by L976;
L1151: ( dom R6 ) = ( dom R10 ) by L1136 , L1141 , FINSEQ_3:29;
thus L1152: thesis by L1151 , L1150 , L1142 , FUNCT_1:2;
end;

assume L1153: R6 = ( R10 / (R13 , R16) );
L1154: ( dom R6 ) = ( dom R10 ) by L1153 , L976;
L1155: ( len R6 ) = ( len R10 ) by L1154 , FINSEQ_3:29;
L1156: ( dom <* 2 *> ) = { 1 } by FINSEQ_1:2 , FINSEQ_1:def 8;
L1157:
now
let R24 being set;
assume L1158: R24 in ( dom ( 'not' R6 ) );
reconsider D24 = R24 as (Element of ( NAT )) by L1158;
L1159:
now
L1160: (( ( 'not' R10 ) . R24 ) <> R13 implies ( D22 . R24 ) = ( ( 'not' R10 ) . R24 )) by L1135 , L1136 , L1155 , L1158 , L976;
given C17 being Nat such that
L1161: C17 in ( dom R6 )
and
L1162: D24 = ( 1 + C17 );

L1163: (( R10 . C17 ) = ( ( 'not' R10 ) . D24 ) & ( R6 . C17 ) = ( ( 'not' R6 ) . D24 )) by L1134 , L1154 , L1161 , L1162 , FINSEQ_1:def 7;
L1164: (( ( 'not' R10 ) . R24 ) = R13 implies ( ( 'not' R6 ) . R24 ) = R16) by L1163 , L1153 , L1154 , L1161 , L976;
L1165: (( ( 'not' R10 ) . R24 ) <> R13 implies ( ( 'not' R6 ) . R24 ) = ( ( 'not' R10 ) . R24 )) by L1153 , L1154 , L1161 , L1163 , L976;
thus L1166: ( ( 'not' R6 ) . R24 ) = ( D22 . R24 ) by L1165 , L1135 , L1136 , L1155 , L1158 , L1164 , L1160 , L976;
end;
L1167:
now
L1168: (( ( 'not' R10 ) . 1 ) = 2 & 2 <> R13) by L818 , FINSEQ_1:41;
assume L1169: D24 in { 1 };
L1170: D24 = 1 by L1169 , TARSKI:def 1;
L1171: ( ( 'not' R6 ) . D24 ) = 2 by L1170 , FINSEQ_1:41;
thus L1172: ( ( 'not' R6 ) . R24 ) = ( D22 . R24 ) by L1171 , L1135 , L1136 , L1155 , L1158 , L1170 , L1168 , L976;
end;
thus L1173: ( ( 'not' R6 ) . R24 ) = ( D22 . R24 ) by L1167 , L1134 , L1156 , L1158 , L1159 , FINSEQ_1:25;
end;
L1174: ( dom ( 'not' R6 ) ) = ( dom D22 ) by L1135 , L1136 , L1155 , L976;
thus L1175: thesis by L1174 , L1157 , FUNCT_1:2;
end;
L1176: (for R8 being ZF-formula holds (for R9 being ZF-formula holds (for R11 being ZF-formula holds (for R12 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds ((R8 = ( R11 / (R13 , R16) ) & R9 = ( R12 / (R13 , R16) )) implies ( R8 '&' R9 ) = ( ( R11 '&' R12 ) / (R13 , R16) ))))))))
proof
let R8 being ZF-formula;
let R9 being ZF-formula;
let R11 being ZF-formula;
let R12 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
set D25 = ( ( R11 '&' R12 ) / (R13 , R16) );
L1177: ( dom <* 3 *> ) = { 1 } by FINSEQ_1:2 , FINSEQ_1:def 8;
L1178: (( dom ( R8 '&' R9 ) ) = ( Seg ( len ( R8 '&' R9 ) ) ) & ( dom ( R11 '&' R12 ) ) = ( Seg ( len ( R11 '&' R12 ) ) )) by FINSEQ_1:def 3;
L1179: ( len <* 3 *> ) = 1 by FINSEQ_1:39;
L1180: ( len ( <* 3 *> ^ R8 ) ) = ( 1 + ( len R8 ) ) by L1179 , FINSEQ_1:22;
L1181: ( len ( R8 '&' R9 ) ) = ( ( 1 + ( len R8 ) ) + ( len R9 ) ) by L1180 , FINSEQ_1:22;
L1182: ( len ( <* 3 *> ^ R11 ) ) = ( 1 + ( len R11 ) ) by L1179 , FINSEQ_1:22;
L1183: ( len ( R11 '&' R12 ) ) = ( ( 1 + ( len R11 ) ) + ( len R12 ) ) by L1182 , FINSEQ_1:22;
L1184: ( dom ( <* 3 *> ^ R11 ) ) = ( Seg ( 1 + ( len R11 ) ) ) by L1182 , FINSEQ_1:def 3;
L1185: ( dom D25 ) = ( dom ( R11 '&' R12 ) ) by L976;
assume that
L1186: R8 = ( R11 / (R13 , R16) )
and
L1187: R9 = ( R12 / (R13 , R16) );
L1188: ( dom R8 ) = ( dom R11 ) by L1186 , L976;
L1189: ( len R8 ) = ( len R11 ) by L1188 , FINSEQ_3:29;
L1190: ( dom R9 ) = ( dom R12 ) by L1187 , L976;
L1191: ( len R9 ) = ( len R12 ) by L1190 , FINSEQ_3:29;
L1192: ( dom D25 ) = ( dom ( R8 '&' R9 ) ) by L1191 , L1178 , L1181 , L1183 , L1189 , L976;
L1193: ( dom ( <* 3 *> ^ R8 ) ) = ( Seg ( 1 + ( len R8 ) ) ) by L1180 , FINSEQ_1:def 3;
L1194:
now
let R24 being set;
assume L1195: R24 in ( dom D25 );
reconsider D26 = R24 as (Element of ( NAT )) by L1195 , L1192;
L1196:
now
L1197:
now
assume L1198: D26 in { 1 };
L1199: D26 = 1 by L1198 , TARSKI:def 1;
L1200: (( ( R11 '&' R12 ) . 1 ) = 3 & R13 <> 3) by L818 , ZF_LANG:16;
L1201: ( D25 . D26 ) = 3 by L1200 , L1185 , L1195 , L1199 , L976;
thus L1202: ( D25 . R24 ) = ( ( R8 '&' R9 ) . R24 ) by L1201 , L1199 , ZF_LANG:16;
end;
assume L1203: D26 in ( dom ( <* 3 *> ^ R8 ) );
L1204: (( ( R8 '&' R9 ) . D26 ) = ( ( <* 3 *> ^ R8 ) . D26 ) & ( ( R11 '&' R12 ) . D26 ) = ( ( <* 3 *> ^ R11 ) . D26 )) by L1203 , L1193 , L1184 , L1189 , FINSEQ_1:def 7;
L1205:
now
L1206: (( ( R11 '&' R12 ) . R24 ) <> R13 implies ( D25 . R24 ) = ( ( R11 '&' R12 ) . R24 )) by L1185 , L1195 , L976;
given C18 being Nat such that
L1207: C18 in ( dom R8 )
and
L1208: D26 = ( 1 + C18 );

L1209: (( R8 . C18 ) = ( ( R8 '&' R9 ) . D26 ) & ( R11 . C18 ) = ( ( R11 '&' R12 ) . D26 )) by L1179 , L1188 , L1204 , L1207 , L1208 , FINSEQ_1:def 7;
L1210: (( ( R11 '&' R12 ) . R24 ) = R13 implies ( ( R8 '&' R9 ) . R24 ) = R16) by L1209 , L1186 , L1188 , L1207 , L976;
L1211: (( ( R11 '&' R12 ) . R24 ) <> R13 implies ( ( R8 '&' R9 ) . R24 ) = ( ( R11 '&' R12 ) . R24 )) by L1186 , L1188 , L1207 , L1209 , L976;
thus L1212: ( ( R8 '&' R9 ) . R24 ) = ( D25 . R24 ) by L1211 , L1185 , L1195 , L1210 , L1206 , L976;
end;
thus L1213: ( ( R8 '&' R9 ) . R24 ) = ( D25 . R24 ) by L1205 , L1179 , L1177 , L1203 , L1197 , FINSEQ_1:25;
end;
L1214:
now
L1215: (( ( R11 '&' R12 ) . R24 ) <> R13 implies ( D25 . R24 ) = ( ( R11 '&' R12 ) . R24 )) by L1185 , L1195 , L976;
given C19 being Nat such that
L1216: C19 in ( dom R9 )
and
L1217: D26 = ( ( 1 + ( len R8 ) ) + C19 );

L1218: (( R9 . C19 ) = ( ( R8 '&' R9 ) . D26 ) & ( R12 . C19 ) = ( ( R11 '&' R12 ) . D26 )) by L1180 , L1182 , L1190 , L1189 , L1216 , L1217 , FINSEQ_1:def 7;
L1219: (( ( R11 '&' R12 ) . R24 ) = R13 implies ( ( R8 '&' R9 ) . R24 ) = R16) by L1218 , L1187 , L1190 , L1216 , L976;
L1220: (( ( R11 '&' R12 ) . R24 ) <> R13 implies ( ( R8 '&' R9 ) . R24 ) = ( ( R11 '&' R12 ) . R24 )) by L1187 , L1190 , L1216 , L1218 , L976;
thus L1221: ( ( R8 '&' R9 ) . R24 ) = ( D25 . R24 ) by L1220 , L1185 , L1195 , L1215 , L1219 , L976;
end;
thus L1222: ( ( R8 '&' R9 ) . R24 ) = ( D25 . R24 ) by L1214 , L1180 , L1192 , L1195 , L1196 , FINSEQ_1:25;
end;
thus L1223: thesis by L1194 , L1192 , FUNCT_1:2;
end;
L1224: (for R6 being ZF-formula holds (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (for R19 being Variable holds (for R22 being Variable holds ((R6 = ( R10 / (R13 , R16) ) & ((R19 = R22 & R22 <> R13) or (R19 = R16 & R22 = R13))) implies ( All (R19 , R6) ) = ( ( All (R22 , R10) ) / (R13 , R16) ))))))))
proof
let R6 being ZF-formula;
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
let R19 being Variable;
let R22 being Variable;
set D27 = ( ( All (R22 , R10) ) / (R13 , R16) );
L1225: (( len <* 4 *> ) = 1 & ( 1 + 1 ) = 2) by FINSEQ_1:39;
L1226: ( len <* R22 *> ) = 1 by FINSEQ_1:39;
L1227: ( len ( <* 4 *> ^ <* R22 *> ) ) = 2 by L1226 , L1225 , FINSEQ_1:22;
L1228: ( dom ( <* 4 *> ^ <* R22 *> ) ) = { 1 , 2 } by L1227 , FINSEQ_1:2 , FINSEQ_1:def 3;
L1229: ( len ( All (R22 , R10) ) ) = ( 2 + ( len R10 ) ) by L1227 , FINSEQ_1:22;
L1230: ( dom ( All (R22 , R10) ) ) = ( Seg ( 2 + ( len R10 ) ) ) by L1229 , FINSEQ_1:def 3;
L1231: (( <* 4 *> ^ <* R19 *> ) = <* 4 , R19 *> & ( <* 4 *> ^ <* R22 *> ) = <* 4 , R22 *>) by FINSEQ_1:def 9;
L1232: ( dom D27 ) = ( dom ( All (R22 , R10) ) ) by L976;
assume that
L1233: R6 = ( R10 / (R13 , R16) )
and
L1234: ((R19 = R22 & R22 <> R13) or (R19 = R16 & R22 = R13));
L1235: ( dom R6 ) = ( dom R10 ) by L1233 , L976;
L1236: ( len <* R19 *> ) = 1 by FINSEQ_1:39;
L1237: ( len ( <* 4 *> ^ <* R19 *> ) ) = 2 by L1236 , L1225 , FINSEQ_1:22;
L1238: ( dom ( <* 4 *> ^ <* R19 *> ) ) = { 1 , 2 } by L1237 , FINSEQ_1:2 , FINSEQ_1:def 3;
L1239:
now
let R24 being set;
assume L1240: R24 in ( dom D27 );
reconsider D28 = R24 as (Element of ( NAT )) by L1240 , L1232;
L1241:
now
L1242: (R13 <> 4 & ( <* 4 , R19 *> . 1 ) = 4) by L818 , FINSEQ_1:44;
L1243: (( <* 4 , R22 *> . 1 ) = 4 & ( <* 4 , R19 *> . 2 ) = R19) by FINSEQ_1:44;
L1244: ( <* 4 , R22 *> . 2 ) = R22 by FINSEQ_1:44;
assume L1245: R24 in { 1 , 2 };
L1246: (R24 = 1 or R24 = 2) by L1245 , TARSKI:def 2;
L1247: (( ( All (R19 , R6) ) . D28 ) = ( <* 4 , R19 *> . D28 ) & ( ( All (R22 , R10) ) . D28 ) = ( <* 4 , R22 *> . D28 )) by L1238 , L1228 , L1231 , L1245 , FINSEQ_1:def 7;
thus L1248: ( ( All (R19 , R6) ) . R24 ) = ( ( ( All (R22 , R10) ) / (R13 , R16) ) . R24 ) by L1247 , L1234 , L1232 , L1240 , L1246 , L1242 , L1243 , L1244 , L976;
end;
L1249:
now
L1250: (( ( All (R22 , R10) ) . R24 ) <> R13 implies ( ( ( All (R22 , R10) ) / (R13 , R16) ) . R24 ) = ( ( All (R22 , R10) ) . R24 )) by L1232 , L1240 , L976;
given C20 being Nat such that
L1251: C20 in ( dom R10 )
and
L1252: D28 = ( 2 + C20 );

L1253: (( ( All (R19 , R6) ) . R24 ) = ( R6 . C20 ) & ( ( All (R22 , R10) ) . R24 ) = ( R10 . C20 )) by L1237 , L1227 , L1235 , L1251 , L1252 , FINSEQ_1:def 7;
L1254: (( ( All (R22 , R10) ) . R24 ) = R13 implies ( ( All (R19 , R6) ) . R24 ) = R16) by L1253 , L1233 , L1251 , L976;
L1255: (( ( All (R22 , R10) ) . R24 ) <> R13 implies ( ( All (R19 , R6) ) . R24 ) = ( ( All (R22 , R10) ) . R24 )) by L1233 , L1251 , L1253 , L976;
thus L1256: ( ( All (R19 , R6) ) . R24 ) = ( ( ( All (R22 , R10) ) / (R13 , R16) ) . R24 ) by L1255 , L1232 , L1240 , L1254 , L1250 , L976;
end;
thus L1257: ( ( All (R19 , R6) ) . R24 ) = ( ( ( All (R22 , R10) ) / (R13 , R16) ) . R24 ) by L1249 , L1227 , L1228 , L1232 , L1240 , L1241 , FINSEQ_1:25;
end;
L1258: ( len ( All (R19 , R6) ) ) = ( 2 + ( len R6 ) ) by L1237 , FINSEQ_1:22;
L1259: ( dom ( All (R19 , R6) ) ) = ( Seg ( 2 + ( len R6 ) ) ) by L1258 , FINSEQ_1:def 3;
L1260: ( dom ( All (R22 , R10) ) ) = ( dom ( All (R19 , R6) ) ) by L1259 , L1230 , L1235 , FINSEQ_3:29;
thus L1261: thesis by L1260 , L1232 , L1239 , FUNCT_1:2;
end;
theorem
L1262: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds ( R10 / (R13 , R16) ) in ( WFF ))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
defpred S6[ ZF-formula ] means ( $1 / (R13 , R16) ) in ( WFF );
L1263: (for R10 being ZF-formula holds (S6[ R10 ] implies S6[ ( 'not' R10 ) ]))
proof
let R10 being ZF-formula;
assume L1264: ( R10 / (R13 , R16) ) in ( WFF );
reconsider D29 = ( R10 / (R13 , R16) ) as ZF-formula by L1264 , ZF_LANG:4;
L1265: ( 'not' D29 ) = ( ( 'not' R10 ) / (R13 , R16) ) by L1133;
thus L1266: thesis by L1265 , ZF_LANG:4;
end;
L1267: (for R11 being ZF-formula holds (for R12 being ZF-formula holds ((S6[ R11 ] & S6[ R12 ]) implies S6[ ( R11 '&' R12 ) ])))
proof
let R11 being ZF-formula;
let R12 being ZF-formula;
assume L1268: (( R11 / (R13 , R16) ) in ( WFF ) & ( R12 / (R13 , R16) ) in ( WFF ));
reconsider D30 = ( R11 / (R13 , R16) ) , D31 = ( R12 / (R13 , R16) ) as ZF-formula by L1268 , ZF_LANG:4;
L1269: ( D30 '&' D31 ) = ( ( R11 '&' R12 ) / (R13 , R16) ) by L1176;
thus L1270: thesis by L1269 , ZF_LANG:4;
end;
L1271: (for R10 being ZF-formula holds (for R19 being Variable holds (S6[ R10 ] implies S6[ ( All (R19 , R10) ) ])))
proof
let R10 being ZF-formula;
let R19 being Variable;
assume L1272: ( R10 / (R13 , R16) ) in ( WFF );
reconsider D32 = ( R10 / (R13 , R16) ) as ZF-formula by L1272 , ZF_LANG:4;
L1273: (R19 <> R13 or R19 = R13);
consider R22 being Variable such that L1274: ((R22 = R19 & R19 <> R13) or (R22 = R16 & R19 = R13)) by L1273;
L1275: ( All (R22 , D32) ) = ( ( All (R19 , R10) ) / (R13 , R16) ) by L1274 , L1224;
thus L1276: thesis by L1275 , ZF_LANG:4;
end;
L1277: (for R14 being Variable holds (for R15 being Variable holds (S6[ ( R14 '=' R15 ) ] & S6[ ( R14 'in' R15 ) ])))
proof
let R14 being Variable;
let R15 being Variable;
L1278: ((ex R17 being Variable st (ex R18 being Variable st ( ( R14 '=' R15 ) / (R13 , R16) ) = ( R17 '=' R18 ))) & (ex R20 being Variable st (ex R21 being Variable st ( ( R14 'in' R15 ) / (R13 , R16) ) = ( R20 'in' R21 )))) by L1057 , L1129;
thus L1279: thesis by L1278 , ZF_LANG:4;
end;
L1280: (for R10 being ZF-formula holds S6[ R10 ]) from ZFInduction(L1277 , L1263 , L1267 , L1271);
thus L1281: thesis by L1280;
end;
definition
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
redefine func R10 / (R13 , R16) -> ZF-formula;

coherence
proof
L1282: ( dom ( R10 / (R13 , R16) ) ) = ( dom R10 ) by L976;
L1283: ( dom R10 ) = ( Seg ( len R10 ) ) by FINSEQ_1:def 3;
reconsider D33 = ( R10 / (R13 , R16) ) as FinSequence by L1283 , L1282 , FINSEQ_1:def 2;
L1284: (for R24 being set holds (R24 in ( dom R10 ) implies ((( R10 . R24 ) = R13 implies ( ( R10 / (R13 , R16) ) . R24 ) = R16) & (( R10 . R24 ) <> R13 implies ( ( R10 / (R13 , R16) ) . R24 ) = ( R10 . R24 ))))) by L976;
L1285: ( rng D33 ) c= ( NAT )
proof
let R24 being set;
assume L1286: R24 in ( rng D33 );
consider C21 being set such that L1287: C21 in ( dom D33 ) and L1288: R24 = ( D33 . C21 ) by L1286 , FUNCT_1:def 3;
L1289: (( rng R10 ) c= ( NAT ) & ( R10 . C21 ) in ( rng R10 )) by L1282 , L1287 , FINSEQ_1:def 4 , FUNCT_1:def 3;
L1290: (R24 = R16 or (R24 = ( R10 . C21 ) & ( R10 . C21 ) in ( NAT ))) by L1289 , L1282 , L1284 , L1287 , L1288;
thus L1291: thesis by L1290;
end;
reconsider D34 = D33 as (FinSequence of ( NAT )) by L1285 , FINSEQ_1:def 4;
L1292: D34 in ( WFF ) by L1262;
thus L1293: thesis by L1292 , ZF_LANG:4;
end;
end;
theorem
L1295: (for R8 being ZF-formula holds (for R9 being ZF-formula holds (for R11 being ZF-formula holds (for R12 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (( R8 '&' R9 ) = ( ( R11 '&' R12 ) / (R13 , R16) ) iff (R8 = ( R11 / (R13 , R16) ) & R9 = ( R12 / (R13 , R16) )))))))))
proof
let R8 being ZF-formula;
let R9 being ZF-formula;
let R11 being ZF-formula;
let R12 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
thus L1296: (( R8 '&' R9 ) = ( ( R11 '&' R12 ) / (R13 , R16) ) implies (R8 = ( R11 / (R13 , R16) ) & R9 = ( R12 / (R13 , R16) )))
proof
assume L1297: ( R8 '&' R9 ) = ( ( R11 '&' R12 ) / (R13 , R16) );
L1298: ( R8 '&' R9 ) = ( ( R11 / (R13 , R16) ) '&' ( R12 / (R13 , R16) ) ) by L1297 , L1176;
thus L1299: thesis by L1298 , ZF_LANG:30;
end;

thus L1300: thesis by L1176;
end;
theorem
L1301: (for R7 being ZF-formula holds (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (for R19 being Variable holds (R19 <> R13 implies (( All (R19 , R7) ) = ( ( All (R19 , R10) ) / (R13 , R16) ) iff R7 = ( R10 / (R13 , R16) ))))))))
proof
let R7 being ZF-formula;
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
let R19 being Variable;
assume L1302: R19 <> R13;
thus L1303: (( All (R19 , R7) ) = ( ( All (R19 , R10) ) / (R13 , R16) ) implies R7 = ( R10 / (R13 , R16) ))
proof
assume L1304: ( All (R19 , R7) ) = ( ( All (R19 , R10) ) / (R13 , R16) );
L1305: ( All (R19 , R7) ) = ( All (R19 , ( R10 / (R13 , R16) )) ) by L1304 , L1302 , L1224;
thus L1306: thesis by L1305 , ZF_LANG:3;
end;

thus L1307: thesis by L1302 , L1224;
end;
theorem
L1308: (for R7 being ZF-formula holds (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (( All (R16 , R7) ) = ( ( All (R13 , R10) ) / (R13 , R16) ) iff R7 = ( R10 / (R13 , R16) ))))))
proof
let R7 being ZF-formula;
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
thus L1309: (( All (R16 , R7) ) = ( ( All (R13 , R10) ) / (R13 , R16) ) implies R7 = ( R10 / (R13 , R16) ))
proof
assume L1310: ( All (R16 , R7) ) = ( ( All (R13 , R10) ) / (R13 , R16) );
L1311: ( All (R16 , R7) ) = ( All (R16 , ( R10 / (R13 , R16) )) ) by L1310 , L1224;
thus L1312: thesis by L1311 , ZF_LANG:3;
end;

thus L1313: thesis by L1224;
end;
theorem
L1314: (for R8 being ZF-formula holds (for R9 being ZF-formula holds (for R11 being ZF-formula holds (for R12 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (( R8 'or' R9 ) = ( ( R11 'or' R12 ) / (R13 , R16) ) iff (R8 = ( R11 / (R13 , R16) ) & R9 = ( R12 / (R13 , R16) )))))))))
proof
let R8 being ZF-formula;
let R9 being ZF-formula;
let R11 being ZF-formula;
let R12 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
L1315: ((( 'not' R8 ) = ( ( 'not' R11 ) / (R13 , R16) ) & ( 'not' R9 ) = ( ( 'not' R12 ) / (R13 , R16) )) iff ( ( 'not' R8 ) '&' ( 'not' R9 ) ) = ( ( ( 'not' R11 ) '&' ( 'not' R12 ) ) / (R13 , R16) )) by L1295;
thus L1316: thesis by L1315 , L1133;
end;
theorem
L1317: (for R8 being ZF-formula holds (for R9 being ZF-formula holds (for R11 being ZF-formula holds (for R12 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (( R8 => R9 ) = ( ( R11 => R12 ) / (R13 , R16) ) iff (R8 = ( R11 / (R13 , R16) ) & R9 = ( R12 / (R13 , R16) )))))))))
proof
let R8 being ZF-formula;
let R9 being ZF-formula;
let R11 being ZF-formula;
let R12 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
L1318: ((R8 = ( R11 / (R13 , R16) ) & ( 'not' R9 ) = ( ( 'not' R12 ) / (R13 , R16) )) iff ( R8 '&' ( 'not' R9 ) ) = ( ( R11 '&' ( 'not' R12 ) ) / (R13 , R16) )) by L1295;
thus L1319: thesis by L1318 , L1133;
end;
theorem
L1320: (for R8 being ZF-formula holds (for R9 being ZF-formula holds (for R11 being ZF-formula holds (for R12 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (( R8 <=> R9 ) = ( ( R11 <=> R12 ) / (R13 , R16) ) iff (R8 = ( R11 / (R13 , R16) ) & R9 = ( R12 / (R13 , R16) )))))))))
proof
let R8 being ZF-formula;
let R9 being ZF-formula;
let R11 being ZF-formula;
let R12 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
L1321: (( R8 <=> R9 ) = ( ( R11 <=> R12 ) / (R13 , R16) ) iff (( R8 => R9 ) = ( ( R11 => R12 ) / (R13 , R16) ) & ( R9 => R8 ) = ( ( R12 => R11 ) / (R13 , R16) ))) by L1295;
thus L1322: thesis by L1321 , L1317;
end;
theorem
L1323: (for R7 being ZF-formula holds (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (for R19 being Variable holds (R19 <> R13 implies (( Ex (R19 , R7) ) = ( ( Ex (R19 , R10) ) / (R13 , R16) ) iff R7 = ( R10 / (R13 , R16) ))))))))
proof
let R7 being ZF-formula;
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
let R19 being Variable;
assume L1324: R19 <> R13;
L1325: (( 'not' R7 ) = ( ( 'not' R10 ) / (R13 , R16) ) iff ( All (R19 , ( 'not' R7 )) ) = ( ( All (R19 , ( 'not' R10 )) ) / (R13 , R16) )) by L1324 , L1301;
thus L1326: thesis by L1325 , L1133;
end;
theorem
L1327: (for R7 being ZF-formula holds (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (( Ex (R16 , R7) ) = ( ( Ex (R13 , R10) ) / (R13 , R16) ) iff R7 = ( R10 / (R13 , R16) ))))))
proof
let R7 being ZF-formula;
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
L1328: (( 'not' R7 ) = ( ( 'not' R10 ) / (R13 , R16) ) iff ( All (R16 , ( 'not' R7 )) ) = ( ( All (R13 , ( 'not' R10 )) ) / (R13 , R16) )) by L1308;
thus L1329: thesis by L1328 , L1133;
end;
theorem
L1330: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (R10 is  being_equality iff ( R10 / (R13 , R16) ) is  being_equality))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
thus L1331: (R10 is  being_equality implies ( R10 / (R13 , R16) ) is  being_equality)
proof
given R14 being Variable , R15 being Variable such that
L1332: R10 = ( R14 '=' R15 );

L1333: (ex R20 being Variable st (ex R21 being Variable st ( R10 / (R13 , R16) ) = ( R20 '=' R21 ))) by L1332 , L1057;
thus L1334: thesis by L1333 , ZF_LANG:5;
end;

assume L1335: ( R10 / (R13 , R16) ) is  being_equality;
L1336: ( ( R10 / (R13 , R16) ) . 1 ) = ( 0 ) by L1335 , ZF_LANG:18;
L1337: 3 <= ( len R10 ) by ZF_LANG:13;
L1338: 1 <= ( len R10 ) by L1337 , XXREAL_0:2;
L1339: 1 in ( dom R10 ) by L1338 , FINSEQ_3:25;
L1340: R16 <> ( 0 ) by L818;
L1341: ( R10 . 1 ) <> R13 by L1340 , L1336 , L1339 , L976;
L1342: ( 0 ) = ( R10 . 1 ) by L1341 , L1336 , L1339 , L976;
thus L1343: thesis by L1342 , ZF_LANG:24;
end;
theorem
L1344: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (R10 is  being_membership iff ( R10 / (R13 , R16) ) is  being_membership))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
thus L1345: (R10 is  being_membership implies ( R10 / (R13 , R16) ) is  being_membership)
proof
given R14 being Variable , R15 being Variable such that
L1346: R10 = ( R14 'in' R15 );

L1347: (ex R20 being Variable st (ex R21 being Variable st ( R10 / (R13 , R16) ) = ( R20 'in' R21 ))) by L1346 , L1129;
thus L1348: thesis by L1347 , ZF_LANG:5;
end;

assume L1349: ( R10 / (R13 , R16) ) is  being_membership;
L1350: ( ( R10 / (R13 , R16) ) . 1 ) = 1 by L1349 , ZF_LANG:19;
L1351: 3 <= ( len R10 ) by ZF_LANG:13;
L1352: 1 <= ( len R10 ) by L1351 , XXREAL_0:2;
L1353: 1 in ( dom R10 ) by L1352 , FINSEQ_3:25;
L1354: R16 <> 1 by L818;
L1355: ( R10 . 1 ) <> R13 by L1354 , L1350 , L1353 , L976;
L1356: 1 = ( R10 . 1 ) by L1355 , L1350 , L1353 , L976;
thus L1357: thesis by L1356 , ZF_LANG:25;
end;
theorem
L1358: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (R10 is  negative iff ( R10 / (R13 , R16) ) is  negative))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
thus L1359: (R10 is  negative implies ( R10 / (R13 , R16) ) is  negative)
proof
given R11 being ZF-formula such that
L1360: R10 = ( 'not' R11 );

L1361: ( R10 / (R13 , R16) ) = ( 'not' ( R11 / (R13 , R16) ) ) by L1360 , L1133;
thus L1362: thesis by L1361 , ZF_LANG:5;
end;

assume L1363: ( R10 / (R13 , R16) ) is  negative;
L1364: ( ( R10 / (R13 , R16) ) . 1 ) = 2 by L1363 , ZF_LANG:20;
L1365: 3 <= ( len R10 ) by ZF_LANG:13;
L1366: 1 <= ( len R10 ) by L1365 , XXREAL_0:2;
L1367: 1 in ( dom R10 ) by L1366 , FINSEQ_3:25;
L1368: R16 <> 2 by L818;
L1369: ( R10 . 1 ) <> R13 by L1368 , L1364 , L1367 , L976;
L1370: 2 = ( R10 . 1 ) by L1369 , L1364 , L1367 , L976;
thus L1371: thesis by L1370 , ZF_LANG:26;
end;
theorem
L1372: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (R10 is  conjunctive iff ( R10 / (R13 , R16) ) is  conjunctive))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
thus L1373: (R10 is  conjunctive implies ( R10 / (R13 , R16) ) is  conjunctive)
proof
given R11 being ZF-formula , R12 being ZF-formula such that
L1374: R10 = ( R11 '&' R12 );

L1375: ( R10 / (R13 , R16) ) = ( ( R11 / (R13 , R16) ) '&' ( R12 / (R13 , R16) ) ) by L1374 , L1295;
thus L1376: thesis by L1375 , ZF_LANG:5;
end;

assume L1377: ( R10 / (R13 , R16) ) is  conjunctive;
L1378: ( ( R10 / (R13 , R16) ) . 1 ) = 3 by L1377 , ZF_LANG:21;
L1379: 3 <= ( len R10 ) by ZF_LANG:13;
L1380: 1 <= ( len R10 ) by L1379 , XXREAL_0:2;
L1381: 1 in ( dom R10 ) by L1380 , FINSEQ_3:25;
L1382: R16 <> 3 by L818;
L1383: ( R10 . 1 ) <> R13 by L1382 , L1378 , L1381 , L976;
L1384: 3 = ( R10 . 1 ) by L1383 , L1378 , L1381 , L976;
thus L1385: thesis by L1384 , ZF_LANG:27;
end;
theorem
L1386: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (R10 is  universal iff ( R10 / (R13 , R16) ) is  universal))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
thus L1387: (R10 is  universal implies ( R10 / (R13 , R16) ) is  universal)
proof
given R19 being Variable , R11 being ZF-formula such that
L1388: R10 = ( All (R19 , R11) );

L1389: (R19 = R13 or R19 <> R13);
consider R22 being Variable such that L1390: ((R19 = R13 & R22 = R16) or (R19 <> R13 & R22 = R19)) by L1389;
L1391: ( R10 / (R13 , R16) ) = ( All (R22 , ( R11 / (R13 , R16) )) ) by L1388 , L1390 , L1301 , L1308;
thus L1392: thesis by L1391 , ZF_LANG:5;
end;

assume L1393: ( R10 / (R13 , R16) ) is  universal;
L1394: ( ( R10 / (R13 , R16) ) . 1 ) = 4 by L1393 , ZF_LANG:22;
L1395: 3 <= ( len R10 ) by ZF_LANG:13;
L1396: 1 <= ( len R10 ) by L1395 , XXREAL_0:2;
L1397: 1 in ( dom R10 ) by L1396 , FINSEQ_3:25;
L1398: R16 <> 4 by L818;
L1399: ( R10 . 1 ) <> R13 by L1398 , L1394 , L1397 , L976;
L1400: 4 = ( R10 . 1 ) by L1399 , L1394 , L1397 , L976;
thus L1401: thesis by L1400 , ZF_LANG:28;
end;
theorem
L1402: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (R10 is  negative implies ( the_argument_of ( R10 / (R13 , R16) ) ) = ( ( the_argument_of R10 ) / (R13 , R16) )))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
assume L1403: R10 is  negative;
L1404: ( R10 / (R13 , R16) ) is  negative by L1403 , L1358;
L1405: ( R10 / (R13 , R16) ) = ( 'not' ( the_argument_of ( R10 / (R13 , R16) ) ) ) by L1404 , ZF_LANG:def 30;
L1406: R10 = ( 'not' ( the_argument_of R10 ) ) by L1403 , ZF_LANG:def 30;
thus L1407: thesis by L1406 , L1405 , L1133;
end;
theorem
L1408: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (R10 is  conjunctive implies (( the_left_argument_of ( R10 / (R13 , R16) ) ) = ( ( the_left_argument_of R10 ) / (R13 , R16) ) & ( the_right_argument_of ( R10 / (R13 , R16) ) ) = ( ( the_right_argument_of R10 ) / (R13 , R16) ))))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
assume L1409: R10 is  conjunctive;
L1410: ( R10 / (R13 , R16) ) is  conjunctive by L1409 , L1372;
L1411: ( R10 / (R13 , R16) ) = ( ( the_left_argument_of ( R10 / (R13 , R16) ) ) '&' ( the_right_argument_of ( R10 / (R13 , R16) ) ) ) by L1410 , ZF_LANG:40;
L1412: R10 = ( ( the_left_argument_of R10 ) '&' ( the_right_argument_of R10 ) ) by L1409 , ZF_LANG:40;
thus L1413: thesis by L1412 , L1411 , L1295;
end;
theorem
L1414: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (R10 is  universal implies (( the_scope_of ( R10 / (R13 , R16) ) ) = ( ( the_scope_of R10 ) / (R13 , R16) ) & (( bound_in R10 ) = R13 implies ( bound_in ( R10 / (R13 , R16) ) ) = R16) & (( bound_in R10 ) <> R13 implies ( bound_in ( R10 / (R13 , R16) ) ) = ( bound_in R10 )))))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
assume L1415: R10 is  universal;
L1416: ( R10 / (R13 , R16) ) is  universal by L1415 , L1386;
L1417: ( R10 / (R13 , R16) ) = ( All (( bound_in ( R10 / (R13 , R16) ) ) , ( the_scope_of ( R10 / (R13 , R16) ) )) ) by L1416 , ZF_LANG:44;
L1418: R10 = ( All (( bound_in R10 ) , ( the_scope_of R10 )) ) by L1415 , ZF_LANG:44;
L1419: (( bound_in R10 ) <> R13 implies ( R10 / (R13 , R16) ) = ( All (( bound_in R10 ) , ( ( the_scope_of R10 ) / (R13 , R16) )) )) by L1418 , L1301;
L1420: (( bound_in R10 ) = R13 implies ( R10 / (R13 , R16) ) = ( All (R16 , ( ( the_scope_of R10 ) / (R13 , R16) )) )) by L1418 , L1308;
thus L1421: thesis by L1420 , L1417 , L1419 , ZF_LANG:3;
end;
theorem
L1422: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (R10 is  disjunctive iff ( R10 / (R13 , R16) ) is  disjunctive))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
set D35 = ( R10 / (R13 , R16) );
thus L1423: (R10 is  disjunctive implies ( R10 / (R13 , R16) ) is  disjunctive)
proof
given R11 being ZF-formula , R12 being ZF-formula such that
L1424: R10 = ( R11 'or' R12 );

L1425: ( R10 / (R13 , R16) ) = ( ( R11 / (R13 , R16) ) 'or' ( R12 / (R13 , R16) ) ) by L1424 , L1314;
thus L1426: thesis by L1425 , ZF_LANG:6;
end;

given R8 being ZF-formula , R9 being ZF-formula such that
L1427: D35 = ( R8 'or' R9 );

L1428: D35 is  negative by L1427 , ZF_LANG:5;
L1429: R10 is  negative by L1428 , L1358;
consider C22 being ZF-formula such that L1430: R10 = ( 'not' C22 ) by L1429 , ZF_LANG:5;
L1431: ( ( 'not' R8 ) '&' ( 'not' R9 ) ) = ( C22 / (R13 , R16) ) by L1427 , L1430 , L1133;
L1432: ( C22 / (R13 , R16) ) is  conjunctive by L1431 , ZF_LANG:5;
L1433: C22 is  conjunctive by L1432 , L1372;
consider R11 being ZF-formula, R12 being ZF-formula such that L1434: C22 = ( R11 '&' R12 ) by L1433 , ZF_LANG:5;
L1435: ( 'not' R9 ) = ( R12 / (R13 , R16) ) by L1431 , L1434 , L1295;
L1436: ( R12 / (R13 , R16) ) is  negative by L1435 , ZF_LANG:5;
L1437: R12 is  negative by L1436 , L1358;
consider R3 being ZF-formula such that L1438: R12 = ( 'not' R3 ) by L1437 , ZF_LANG:5;
L1439: ( 'not' R8 ) = ( R11 / (R13 , R16) ) by L1431 , L1434 , L1295;
L1440: ( R11 / (R13 , R16) ) is  negative by L1439 , ZF_LANG:5;
L1441: R11 is  negative by L1440 , L1358;
consider R2 being ZF-formula such that L1442: R11 = ( 'not' R2 ) by L1441 , ZF_LANG:5;
L1443: R10 = ( R2 'or' R3 ) by L1430 , L1434 , L1442 , L1438;
thus L1444: thesis by L1443 , ZF_LANG:6;
end;
theorem
L1445: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (R10 is  conditional iff ( R10 / (R13 , R16) ) is  conditional))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
set D36 = ( R10 / (R13 , R16) );
thus L1446: (R10 is  conditional implies ( R10 / (R13 , R16) ) is  conditional)
proof
given R11 being ZF-formula , R12 being ZF-formula such that
L1447: R10 = ( R11 => R12 );

L1448: ( R10 / (R13 , R16) ) = ( ( R11 / (R13 , R16) ) => ( R12 / (R13 , R16) ) ) by L1447 , L1317;
thus L1449: thesis by L1448 , ZF_LANG:6;
end;

given R8 being ZF-formula , R9 being ZF-formula such that
L1450: D36 = ( R8 => R9 );

L1451: D36 is  negative by L1450 , ZF_LANG:5;
L1452: R10 is  negative by L1451 , L1358;
consider C23 being ZF-formula such that L1453: R10 = ( 'not' C23 ) by L1452 , ZF_LANG:5;
L1454: ( R8 '&' ( 'not' R9 ) ) = ( C23 / (R13 , R16) ) by L1450 , L1453 , L1133;
L1455: ( C23 / (R13 , R16) ) is  conjunctive by L1454 , ZF_LANG:5;
L1456: C23 is  conjunctive by L1455 , L1372;
consider R11 being ZF-formula, R12 being ZF-formula such that L1457: C23 = ( R11 '&' R12 ) by L1456 , ZF_LANG:5;
L1458: ( 'not' R9 ) = ( R12 / (R13 , R16) ) by L1454 , L1457 , L1295;
L1459: ( R12 / (R13 , R16) ) is  negative by L1458 , ZF_LANG:5;
L1460: R12 is  negative by L1459 , L1358;
consider R3 being ZF-formula such that L1461: R12 = ( 'not' R3 ) by L1460 , ZF_LANG:5;
L1462: R10 = ( R11 => R3 ) by L1453 , L1457 , L1461;
thus L1463: thesis by L1462 , ZF_LANG:6;
end;
theorem
L1464: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (R10 is  biconditional implies ( R10 / (R13 , R16) ) is  biconditional))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
given R11 being ZF-formula , R12 being ZF-formula such that
L1465: R10 = ( R11 <=> R12 );

L1466: ( R10 / (R13 , R16) ) = ( ( R11 / (R13 , R16) ) <=> ( R12 / (R13 , R16) ) ) by L1465 , L1320;
thus L1467: thesis by L1466 , ZF_LANG:6;
end;
theorem
L1468: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (R10 is  existential iff ( R10 / (R13 , R16) ) is  existential))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
thus L1469: (R10 is  existential implies ( R10 / (R13 , R16) ) is  existential)
proof
given R19 being Variable , R11 being ZF-formula such that
L1470: R10 = ( Ex (R19 , R11) );

L1471: (R19 = R13 or R19 <> R13);
consider R22 being Variable such that L1472: ((R19 = R13 & R22 = R16) or (R19 <> R13 & R22 = R19)) by L1471;
L1473: ( R10 / (R13 , R16) ) = ( Ex (R22 , ( R11 / (R13 , R16) )) ) by L1470 , L1472 , L1323 , L1327;
thus L1474: thesis by L1473 , ZF_LANG:6;
end;

given R19 being Variable , R7 being ZF-formula such that
L1475: ( R10 / (R13 , R16) ) = ( Ex (R19 , R7) );

L1476: ( R10 / (R13 , R16) ) is  negative by L1475 , ZF_LANG:5;
L1477: R10 is  negative by L1476 , L1358;
consider R11 being ZF-formula such that L1478: R10 = ( 'not' R11 ) by L1477 , ZF_LANG:5;
L1479: (( bound_in R11 ) = R13 or ( bound_in R11 ) <> R13);
consider R22 being Variable such that L1480: ((( bound_in R11 ) = R13 & R22 = R16) or (( bound_in R11 ) <> R13 & R22 = ( bound_in R11 ))) by L1479;
L1481: ( R11 / (R13 , R16) ) = ( All (R19 , ( 'not' R7 )) ) by L1475 , L1478 , L1133;
L1482: ( R11 / (R13 , R16) ) is  universal by L1481 , ZF_LANG:5;
L1483: R11 is  universal by L1482 , L1386;
L1484: R11 = ( All (( bound_in R11 ) , ( the_scope_of R11 )) ) by L1483 , ZF_LANG:44;
L1485: ( All (R19 , ( 'not' R7 )) ) = ( All (R22 , ( ( the_scope_of R11 ) / (R13 , R16) )) ) by L1484 , L1481 , L1480 , L1301 , L1308;
L1486: ( 'not' R7 ) = ( ( the_scope_of R11 ) / (R13 , R16) ) by L1485 , ZF_LANG:3;
L1487: ( ( the_scope_of R11 ) / (R13 , R16) ) is  negative by L1486 , ZF_LANG:5;
L1488: ( the_scope_of R11 ) is  negative by L1487 , L1358;
L1489: R10 = ( Ex (( bound_in R11 ) , ( the_argument_of ( the_scope_of R11 ) )) ) by L1488 , L1478 , L1484 , ZF_LANG:def 30;
thus L1490: thesis by L1489 , ZF_LANG:6;
end;
theorem
L1491: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (R10 is  disjunctive implies (( the_left_argument_of ( R10 / (R13 , R16) ) ) = ( ( the_left_argument_of R10 ) / (R13 , R16) ) & ( the_right_argument_of ( R10 / (R13 , R16) ) ) = ( ( the_right_argument_of R10 ) / (R13 , R16) ))))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
assume L1492: R10 is  disjunctive;
L1493: ( R10 / (R13 , R16) ) is  disjunctive by L1492 , L1422;
L1494: ( R10 / (R13 , R16) ) = ( ( the_left_argument_of ( R10 / (R13 , R16) ) ) 'or' ( the_right_argument_of ( R10 / (R13 , R16) ) ) ) by L1493 , ZF_LANG:41;
L1495: R10 = ( ( the_left_argument_of R10 ) 'or' ( the_right_argument_of R10 ) ) by L1492 , ZF_LANG:41;
thus L1496: thesis by L1495 , L1494 , L1314;
end;
theorem
L1497: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (R10 is  conditional implies (( the_antecedent_of ( R10 / (R13 , R16) ) ) = ( ( the_antecedent_of R10 ) / (R13 , R16) ) & ( the_consequent_of ( R10 / (R13 , R16) ) ) = ( ( the_consequent_of R10 ) / (R13 , R16) ))))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
assume L1498: R10 is  conditional;
L1499: ( R10 / (R13 , R16) ) is  conditional by L1498 , L1445;
L1500: ( R10 / (R13 , R16) ) = ( ( the_antecedent_of ( R10 / (R13 , R16) ) ) => ( the_consequent_of ( R10 / (R13 , R16) ) ) ) by L1499 , ZF_LANG:47;
L1501: R10 = ( ( the_antecedent_of R10 ) => ( the_consequent_of R10 ) ) by L1498 , ZF_LANG:47;
thus L1502: thesis by L1501 , L1500 , L1317;
end;
theorem
L1503: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (R10 is  biconditional implies (( the_left_side_of ( R10 / (R13 , R16) ) ) = ( ( the_left_side_of R10 ) / (R13 , R16) ) & ( the_right_side_of ( R10 / (R13 , R16) ) ) = ( ( the_right_side_of R10 ) / (R13 , R16) ))))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
assume L1504: R10 is  biconditional;
L1505: (R10 = ( ( the_left_side_of R10 ) <=> ( the_right_side_of R10 ) ) & ( R10 / (R13 , R16) ) = ( ( the_left_side_of ( R10 / (R13 , R16) ) ) <=> ( the_right_side_of ( R10 / (R13 , R16) ) ) )) by L1504 , L1464 , ZF_LANG:49;
thus L1506: thesis by L1505 , L1320;
end;
theorem
L1507: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (R10 is  existential implies (( the_scope_of ( R10 / (R13 , R16) ) ) = ( ( the_scope_of R10 ) / (R13 , R16) ) & (( bound_in R10 ) = R13 implies ( bound_in ( R10 / (R13 , R16) ) ) = R16) & (( bound_in R10 ) <> R13 implies ( bound_in ( R10 / (R13 , R16) ) ) = ( bound_in R10 )))))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
assume L1508: R10 is  existential;
L1509: ( R10 / (R13 , R16) ) is  existential by L1508 , L1468;
L1510: ( R10 / (R13 , R16) ) = ( Ex (( bound_in ( R10 / (R13 , R16) ) ) , ( the_scope_of ( R10 / (R13 , R16) ) )) ) by L1509 , ZF_LANG:45;
L1511: R10 = ( Ex (( bound_in R10 ) , ( the_scope_of R10 )) ) by L1508 , ZF_LANG:45;
L1512: (( bound_in R10 ) <> R13 implies ( R10 / (R13 , R16) ) = ( Ex (( bound_in R10 ) , ( ( the_scope_of R10 ) / (R13 , R16) )) )) by L1511 , L1323;
L1513: (( bound_in R10 ) = R13 implies ( R10 / (R13 , R16) ) = ( Ex (R16 , ( ( the_scope_of R10 ) / (R13 , R16) )) )) by L1511 , L1327;
thus L1514: thesis by L1513 , L1510 , L1512 , ZF_LANG:34;
end;
theorem
L1515: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds ((not R13 in ( variables_in R10 )) implies ( R10 / (R13 , R16) ) = R10))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
assume L1516: (not R13 in ( variables_in R10 ));
L1517: (not R13 in { ( 0 ) , 1 , 2 , 3 , 4 }) by L823;
L1518:
now
let R24 being set;
assume L1519: R24 in ( dom R10 );
L1520: ( R10 . R24 ) in ( rng R10 ) by L1519 , FUNCT_1:def 3;
L1521: (( R10 . R24 ) <> R13 implies ( ( R10 / (R13 , R16) ) . R24 ) = ( R10 . R24 )) by L1519 , L976;
thus L1522: ( ( R10 / (R13 , R16) ) . R24 ) = ( R10 . R24 ) by L1521 , L1516 , L1517 , L1520 , XBOOLE_0:def 5;
end;
L1523: ( dom R10 ) = ( dom ( R10 / (R13 , R16) ) ) by L976;
thus L1524: thesis by L1523 , L1518 , FUNCT_1:2;
end;
theorem
L1525: (for R10 being ZF-formula holds (for R13 being Variable holds ( R10 / (R13 , R13) ) = R10))
proof
let R10 being ZF-formula;
let R13 being Variable;
L1526:
now
let R24 being set;
assume L1527: R24 in ( dom R10 );
L1528: (( R10 . R24 ) = R13 implies ( ( R10 / (R13 , R13) ) . R24 ) = R13) by L1527 , L976;
thus L1529: ( R10 . R24 ) = ( ( R10 / (R13 , R13) ) . R24 ) by L1528 , L1527 , L976;
end;
L1530: ( dom ( R10 / (R13 , R13) ) ) = ( dom R10 ) by L976;
thus L1531: thesis by L1530 , L1526 , FUNCT_1:2;
end;
theorem
L1532: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (R13 <> R16 implies (not R13 in ( variables_in ( R10 / (R13 , R16) ) ))))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
assume L1533: R13 <> R16;
assume L1534: R13 in ( variables_in ( R10 / (R13 , R16) ) );
consider R24 being set such that L1535: R24 in ( dom ( R10 / (R13 , R16) ) ) and L1536: R13 = ( ( R10 / (R13 , R16) ) . R24 ) by L1534 , FUNCT_1:def 3;
L1537: ( dom ( R10 / (R13 , R16) ) ) = ( dom R10 ) by L976;
L1538: (( R10 . R24 ) = R13 implies ( ( R10 / (R13 , R16) ) . R24 ) = R16) by L1537 , L1535 , L976;
thus L1539: contradiction by L1538 , L1533 , L1535 , L1536 , L1537 , L976;
end;
theorem
L1540: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (R13 in ( variables_in R10 ) implies R16 in ( variables_in ( R10 / (R13 , R16) ) )))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
assume L1541: R13 in ( variables_in R10 );
consider R24 being set such that L1542: R24 in ( dom R10 ) and L1543: R13 = ( R10 . R24 ) by L1541 , FUNCT_1:def 3;
L1544: ( dom ( R10 / (R13 , R16) ) ) = ( dom R10 ) by L976;
L1545: (not R16 in { ( 0 ) , 1 , 2 , 3 , 4 }) by L823;
L1546: ( ( R10 / (R13 , R16) ) . R24 ) = R16 by L1542 , L1543 , L976;
L1547: R16 in ( rng ( R10 / (R13 , R16) ) ) by L1546 , L1542 , L1544 , FUNCT_1:def 3;
thus L1548: thesis by L1547 , L1545 , XBOOLE_0:def 5;
end;
theorem
L1549: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds (for R19 being Variable holds (R13 <> R16 implies ( ( R10 / (R13 , R16) ) / (R13 , R19) ) = ( R10 / (R13 , R16) ))))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
let R19 being Variable;
assume L1550: R13 <> R16;
L1551: (not R13 in ( variables_in ( R10 / (R13 , R16) ) )) by L1550 , L1532;
thus L1552: thesis by L1551 , L1515;
end;
theorem
L1553: (for R10 being ZF-formula holds (for R13 being Variable holds (for R16 being Variable holds ( variables_in ( R10 / (R13 , R16) ) ) c= ( ( ( variables_in R10 ) \ { R13 } ) \/ { R16 } ))))
proof
let R10 being ZF-formula;
let R13 being Variable;
let R16 being Variable;
let R24 being set;
assume L1554: R24 in ( variables_in ( R10 / (R13 , R16) ) );
reconsider D37 = R24 as Variable by L1554;
consider C24 being set such that L1555: C24 in ( dom ( R10 / (R13 , R16) ) ) and L1556: D37 = ( ( R10 / (R13 , R16) ) . C24 ) by L1554 , FUNCT_1:def 3;
L1557: ( dom ( R10 / (R13 , R16) ) ) = ( dom R10 ) by L976;
L1558: (( R10 . C24 ) <> R13 implies D37 = ( R10 . C24 )) by L1557 , L1555 , L1556 , L976;
L1559: (( R10 . C24 ) = R13 implies D37 = R16) by L1555 , L1556 , L1557 , L976;
L1560: (D37 in { R16 } or (D37 in ( rng R10 ) & (not D37 in { ( 0 ) , 1 , 2 , 3 , 4 }) & (not D37 in { R13 }))) by L1559 , L1555 , L1557 , L1558 , L823 , FUNCT_1:def 3 , TARSKI:def 1;
L1561: (D37 in { R16 } or (D37 in ( ( rng R10 ) \ { ( 0 ) , 1 , 2 , 3 , 4 } ) & (not D37 in { R13 }))) by L1560 , XBOOLE_0:def 5;
L1562: (D37 in { R16 } or D37 in ( ( variables_in R10 ) \ { R13 } )) by L1561 , XBOOLE_0:def 5;
thus L1563: thesis by L1562 , XBOOLE_0:def 3;
end;
