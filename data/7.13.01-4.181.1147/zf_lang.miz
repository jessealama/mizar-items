:: A Model of ZF Set Theory Language
::  by Grzegorz Bancerek
::
:: Received April 4, 1989
:: Copyright (c) 1990-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, SUBSET_1, XBOOLE_0, FINSEQ_1, XXREAL_0, TARSKI, ARYTM_3,
      CARD_1, ORDINAL4, FUNCT_1, XBOOLEAN, BVFUNC_2, RELAT_1, CLASSES2, NAT_1,
      ARYTM_1, ZF_LANG;
 notations TARSKI, XBOOLE_0, SUBSET_1, XCMPLX_0, RELAT_1, FUNCT_1, ORDINAL1,
      NAT_1, NUMBERS, FINSEQ_1, XXREAL_0;
 constructors XXREAL_0, XREAL_0, NAT_1, FINSEQ_1;
 registrations SUBSET_1, ORDINAL1, RELSET_1, XREAL_0, FINSEQ_1, CARD_1,
      XBOOLE_0;
 requirements NUMERALS, REAL, SUBSET, BOOLE, ARITHM;
 definitions TARSKI;
 theorems TARSKI, FUNCT_1, NAT_1, FINSEQ_1, XBOOLE_0, XREAL_1, XXREAL_0,
      ORDINAL1;
 schemes NAT_1, XBOOLE_0;

begin
definition
func VAR -> (Subset of ( NAT )) equals
{ R1 where R1 is (Element of ( NAT )) : 5 <= R1 };
coherence
proof
set D1 = { R1 where R1 is (Element of ( NAT )) : 5 <= R1 };
L1: D1 c= ( NAT )
proof
let R4 being set;
assume L2: R4 in D1;
L3: (ex R1 being (Element of ( NAT )) st (R4 = R1 & 5 <= R1)) by L2;
thus L4: thesis by L3;
end;
thus L5: thesis by L1;
end;
end;
registration
cluster ( VAR ) -> non  empty;
coherence
proof
L7: 5 in { R1 where R1 is (Element of ( NAT )) : 5 <= R1 };
thus L8: thesis by L7;
end;
end;
definition
mode Variable
 is (Element of ( VAR ));
end;
definition
let R3 being (Element of ( NAT ));
func x. R3 -> Variable equals
( 5 + R3 );
coherence
proof
set D2 = ( 5 + R3 );
L11: 5 <= D2 by NAT_1:11;
L12: D2 in { R1 where R1 is (Element of ( NAT )) : 5 <= R1 } by L11;
thus L13: thesis by L12;
end;
end;
definition
let R12 being Variable;
redefine func <*R12 *> -> (FinSequence of ( NAT ));

coherence
proof
reconsider D3 = ( VAR ) as non  empty (Subset of ( NAT ));
reconsider D4 = R12 as (Element of D3);
reconsider D5 = D4 as (Element of ( NAT ));
L15: <* D5 *> is (FinSequence of ( NAT ));
thus L16: thesis by L15;
end;
end;
definition
let R12 being Variable;
let R13 being Variable;
func R12 '=' R13 -> (FinSequence of ( NAT )) equals
( ( <* ( 0 ) *> ^ <* R12 *> ) ^ <* R13 *> );
coherence;
func R12 'in' R13 -> (FinSequence of ( NAT )) equals
( ( <* 1 *> ^ <* R12 *> ) ^ <* R13 *> );
coherence;
end;
theorem
L19: (for R12 being Variable holds (for R13 being Variable holds (for R14 being Variable holds (for R15 being Variable holds (( R12 '=' R13 ) = ( R14 '=' R15 ) implies (R12 = R14 & R13 = R15))))))
proof
let R12 being Variable;
let R13 being Variable;
let R14 being Variable;
let R15 being Variable;
L20: (( ( <* ( 0 ) *> ^ <* R12 *> ) ^ <* R13 *> ) = ( <* ( 0 ) *> ^ ( <* R12 *> ^ <* R13 *> ) ) & ( ( <* ( 0 ) *> ^ <* R14 *> ) ^ <* R15 *> ) = ( <* ( 0 ) *> ^ ( <* R14 *> ^ <* R15 *> ) )) by FINSEQ_1:32;
L21: (( <* R12 , R13 *> . 1 ) = R12 & ( <* R12 , R13 *> . 2 ) = R13) by FINSEQ_1:44;
L22: (( <* R12 *> ^ <* R13 *> ) = <* R12 , R13 *> & ( <* R14 *> ^ <* R15 *> ) = <* R14 , R15 *>) by FINSEQ_1:def 9;
L23: (( <* R14 , R15 *> . 1 ) = R14 & ( <* R14 , R15 *> . 2 ) = R15) by FINSEQ_1:44;
assume L24: ( R12 '=' R13 ) = ( R14 '=' R15 );
thus L25: thesis by L24 , L20 , L21 , L23 , L22 , FINSEQ_1:33;
end;
theorem
L26: (for R12 being Variable holds (for R13 being Variable holds (for R14 being Variable holds (for R15 being Variable holds (( R12 'in' R13 ) = ( R14 'in' R15 ) implies (R12 = R14 & R13 = R15))))))
proof
let R12 being Variable;
let R13 being Variable;
let R14 being Variable;
let R15 being Variable;
L27: (( ( <* 1 *> ^ <* R12 *> ) ^ <* R13 *> ) = ( <* 1 *> ^ ( <* R12 *> ^ <* R13 *> ) ) & ( ( <* 1 *> ^ <* R14 *> ) ^ <* R15 *> ) = ( <* 1 *> ^ ( <* R14 *> ^ <* R15 *> ) )) by FINSEQ_1:32;
L28: (( <* R12 , R13 *> . 1 ) = R12 & ( <* R12 , R13 *> . 2 ) = R13) by FINSEQ_1:44;
L29: (( <* R12 *> ^ <* R13 *> ) = <* R12 , R13 *> & ( <* R14 *> ^ <* R15 *> ) = <* R14 , R15 *>) by FINSEQ_1:def 9;
L30: (( <* R14 , R15 *> . 1 ) = R14 & ( <* R14 , R15 *> . 2 ) = R15) by FINSEQ_1:44;
assume L31: ( R12 'in' R13 ) = ( R14 'in' R15 );
thus L32: thesis by L31 , L27 , L28 , L30 , L29 , FINSEQ_1:33;
end;
definition
let R10 being (FinSequence of ( NAT ));
func 'not' R10 -> (FinSequence of ( NAT )) equals
( <* 2 *> ^ R10 );
coherence;
let R11 being (FinSequence of ( NAT ));
func R10 '&' R11 -> (FinSequence of ( NAT )) equals
( ( <* 3 *> ^ R10 ) ^ R11 );
coherence;
end;
definition
let R12 being Variable;
let R10 being (FinSequence of ( NAT ));
func All (R12 , R10) -> (FinSequence of ( NAT )) equals
( ( <* 4 *> ^ <* R12 *> ) ^ R10 );
coherence;
end;
theorem
L35: (for R10 being (FinSequence of ( NAT )) holds (for R11 being (FinSequence of ( NAT )) holds (for R12 being Variable holds (for R13 being Variable holds (( All (R12 , R10) ) = ( All (R13 , R11) ) implies (R12 = R13 & R10 = R11))))))
proof
let R10 being (FinSequence of ( NAT ));
let R11 being (FinSequence of ( NAT ));
let R12 being Variable;
let R13 being Variable;
L36: (( ( <* 4 *> ^ <* R12 *> ) ^ R10 ) = ( <* 4 *> ^ ( <* R12 *> ^ R10 ) ) & ( ( <* 4 *> ^ <* R13 *> ) ^ R11 ) = ( <* 4 *> ^ ( <* R13 *> ^ R11 ) )) by FINSEQ_1:32;
L37: (( ( <* R12 *> ^ R10 ) . 1 ) = R12 & ( ( <* R13 *> ^ R11 ) . 1 ) = R13) by FINSEQ_1:41;
assume L38: ( All (R12 , R10) ) = ( All (R13 , R11) );
thus L39: R12 = R13 by L38 , L36 , L37 , FINSEQ_1:33;
L40: ( <* R12 *> ^ R10 ) = ( <* R13 *> ^ R11 ) by L38 , L36 , FINSEQ_1:33;
thus L41: thesis by L40 , L37 , FINSEQ_1:33;
end;
definition
func WFF -> non  empty set means
:L42: ((for R4 being set holds (R4 in it implies R4 is (FinSequence of ( NAT )))) & (for R12 being Variable holds (for R13 being Variable holds (( R12 '=' R13 ) in it & ( R12 'in' R13 ) in it))) & (for R10 being (FinSequence of ( NAT )) holds (R10 in it implies ( 'not' R10 ) in it)) & (for R10 being (FinSequence of ( NAT )) holds (for R11 being (FinSequence of ( NAT )) holds ((R10 in it & R11 in it) implies ( R10 '&' R11 ) in it))) & (for R12 being Variable holds (for R10 being (FinSequence of ( NAT )) holds (R10 in it implies ( All (R12 , R10) ) in it))) & (for R7 being non  empty set holds (((for R4 being set holds (R4 in R7 implies R4 is (FinSequence of ( NAT )))) & (for R12 being Variable holds (for R13 being Variable holds (( R12 '=' R13 ) in R7 & ( R12 'in' R13 ) in R7))) & (for R10 being (FinSequence of ( NAT )) holds (R10 in R7 implies ( 'not' R10 ) in R7)) & (for R10 being (FinSequence of ( NAT )) holds (for R11 being (FinSequence of ( NAT )) holds ((R10 in R7 & R11 in R7) implies ( R10 '&' R11 ) in R7))) & (for R12 being Variable holds (for R10 being (FinSequence of ( NAT )) holds (R10 in R7 implies ( All (R12 , R10) ) in R7)))) implies it c= R7)));
existence
proof
defpred S1[ set ] means ((for R4 being set holds (R4 in $1 implies R4 is (FinSequence of ( NAT )))) & (for R12 being Variable holds (for R13 being Variable holds (( R12 '=' R13 ) in $1 & ( R12 'in' R13 ) in $1))) & (for R10 being (FinSequence of ( NAT )) holds (R10 in $1 implies ( 'not' R10 ) in $1)) & (for R10 being (FinSequence of ( NAT )) holds (for R11 being (FinSequence of ( NAT )) holds ((R10 in $1 & R11 in $1) implies ( R10 '&' R11 ) in $1))) & (for R12 being Variable holds (for R10 being (FinSequence of ( NAT )) holds (R10 in $1 implies ( All (R12 , R10) ) in $1))));
defpred S2[ set ] means (for R7 being non  empty set holds (S1[ R7 ] implies $1 in R7));
consider R6 being set such that L43: (for R4 being set holds (R4 in R6 iff (R4 in ( ( NAT ) * ) & S2[ R4 ]))) from XBOOLE_0:sch 1;
L44:
now
set D6 = ( ( x. ( 0 ) ) '=' ( x. ( 0 ) ) );
take D7 = D6;
L45: (D6 in ( ( NAT ) * ) & (for R7 being non  empty set holds (S1[ R7 ] implies D6 in R7))) by FINSEQ_1:def 11;
thus L46: D7 in R6 by L45 , L43;
end;
reconsider D8 = R6 as non  empty set by L44;
take D8;
thus L47: (for R4 being set holds (R4 in D8 implies R4 is (FinSequence of ( NAT ))))
proof
let R4 being set;
assume L48: R4 in D8;
L49: R4 in ( ( NAT ) * ) by L48 , L43;
thus L50: thesis by L49 , FINSEQ_1:def 11;
end;

thus L51: (for R12 being Variable holds (for R13 being Variable holds (( R12 '=' R13 ) in D8 & ( R12 'in' R13 ) in D8)))
proof
let R12 being Variable;
let R13 being Variable;
L52: (( R12 '=' R13 ) in ( ( NAT ) * ) & (for R7 being non  empty set holds (S1[ R7 ] implies ( R12 '=' R13 ) in R7))) by FINSEQ_1:def 11;
thus L53: ( R12 '=' R13 ) in D8 by L52 , L43;
L54: (( R12 'in' R13 ) in ( ( NAT ) * ) & (for R7 being non  empty set holds (S1[ R7 ] implies ( R12 'in' R13 ) in R7))) by FINSEQ_1:def 11;
thus L55: thesis by L54 , L43;
end;

thus L56: (for R10 being (FinSequence of ( NAT )) holds (R10 in D8 implies ( 'not' R10 ) in D8))
proof
let R10 being (FinSequence of ( NAT ));
assume L57: R10 in D8;
L58: (for R7 being non  empty set holds (S1[ R7 ] implies ( 'not' R10 ) in R7))
proof
let R7 being non  empty set;
assume L59: S1[ R7 ];
L60: R10 in R7 by L59 , L43 , L57;
thus L61: thesis by L60 , L59;
end;
L62: ( 'not' R10 ) in ( ( NAT ) * ) by FINSEQ_1:def 11;
thus L63: thesis by L62 , L43 , L58;
end;

thus L64: (for R11 being (FinSequence of ( NAT )) holds (for R10 being (FinSequence of ( NAT )) holds ((R11 in D8 & R10 in D8) implies ( R11 '&' R10 ) in D8)))
proof
let R11 being (FinSequence of ( NAT ));
let R10 being (FinSequence of ( NAT ));
assume L65: (R11 in D8 & R10 in D8);
L66: (for R7 being non  empty set holds (S1[ R7 ] implies ( R11 '&' R10 ) in R7))
proof
let R7 being non  empty set;
assume L67: S1[ R7 ];
L68: (R10 in R7 & R11 in R7) by L67 , L43 , L65;
thus L69: thesis by L68 , L67;
end;
L70: ( R11 '&' R10 ) in ( ( NAT ) * ) by FINSEQ_1:def 11;
thus L71: thesis by L70 , L43 , L66;
end;

thus L72: (for R12 being Variable holds (for R10 being (FinSequence of ( NAT )) holds (R10 in D8 implies ( All (R12 , R10) ) in D8)))
proof
let R12 being Variable;
let R10 being (FinSequence of ( NAT ));
assume that
L73: R10 in D8;
L74: (for R7 being non  empty set holds (S1[ R7 ] implies ( All (R12 , R10) ) in R7))
proof
let R7 being non  empty set;
assume L75: S1[ R7 ];
L76: R10 in R7 by L75 , L43 , L73;
thus L77: thesis by L76 , L75;
end;
L78: ( All (R12 , R10) ) in ( ( NAT ) * ) by FINSEQ_1:def 11;
thus L79: thesis by L78 , L43 , L74;
end;

let R7 being non  empty set;
assume that
L80: S1[ R7 ];
let R4 being set;
assume L81: R4 in D8;
thus L82: thesis by L81 , L43 , L80;
end;
uniqueness
proof
let R8 being non  empty set;
let R9 being non  empty set;
assume L83: ((for R4 being set holds (R4 in R8 implies R4 is (FinSequence of ( NAT )))) & (for R12 being Variable holds (for R13 being Variable holds (( R12 '=' R13 ) in R8 & ( R12 'in' R13 ) in R8))) & (for R10 being (FinSequence of ( NAT )) holds (R10 in R8 implies ( 'not' R10 ) in R8)) & (for R10 being (FinSequence of ( NAT )) holds (for R11 being (FinSequence of ( NAT )) holds ((R10 in R8 & R11 in R8) implies ( R10 '&' R11 ) in R8))) & (for R12 being Variable holds (for R10 being (FinSequence of ( NAT )) holds (R10 in R8 implies ( All (R12 , R10) ) in R8))) & (for R7 being non  empty set holds (((for R4 being set holds (R4 in R7 implies R4 is (FinSequence of ( NAT )))) & (for R12 being Variable holds (for R13 being Variable holds (( R12 '=' R13 ) in R7 & ( R12 'in' R13 ) in R7))) & (for R10 being (FinSequence of ( NAT )) holds (R10 in R7 implies ( 'not' R10 ) in R7)) & (for R10 being (FinSequence of ( NAT )) holds (for R11 being (FinSequence of ( NAT )) holds ((R10 in R7 & R11 in R7) implies ( R10 '&' R11 ) in R7))) & (for R12 being Variable holds (for R10 being (FinSequence of ( NAT )) holds (R10 in R7 implies ( All (R12 , R10) ) in R7)))) implies R8 c= R7)) & (for R4 being set holds (R4 in R9 implies R4 is (FinSequence of ( NAT )))) & (for R12 being Variable holds (for R13 being Variable holds (( R12 '=' R13 ) in R9 & ( R12 'in' R13 ) in R9))) & (for R10 being (FinSequence of ( NAT )) holds (R10 in R9 implies ( 'not' R10 ) in R9)) & (for R10 being (FinSequence of ( NAT )) holds (for R11 being (FinSequence of ( NAT )) holds ((R10 in R9 & R11 in R9) implies ( R10 '&' R11 ) in R9))) & (for R12 being Variable holds (for R10 being (FinSequence of ( NAT )) holds (R10 in R9 implies ( All (R12 , R10) ) in R9))) & (for R7 being non  empty set holds (((for R4 being set holds (R4 in R7 implies R4 is (FinSequence of ( NAT )))) & (for R12 being Variable holds (for R13 being Variable holds (( R12 '=' R13 ) in R7 & ( R12 'in' R13 ) in R7))) & (for R10 being (FinSequence of ( NAT )) holds (R10 in R7 implies ( 'not' R10 ) in R7)) & (for R10 being (FinSequence of ( NAT )) holds (for R11 being (FinSequence of ( NAT )) holds ((R10 in R7 & R11 in R7) implies ( R10 '&' R11 ) in R7))) & (for R12 being Variable holds (for R10 being (FinSequence of ( NAT )) holds (R10 in R7 implies ( All (R12 , R10) ) in R7)))) implies R9 c= R7)));
L84: (R8 c= R9 & R9 c= R8) by L83;
thus L85: thesis by L84 , XBOOLE_0:def 10;
end;
end;
definition
let C1 being (FinSequence of ( NAT ));
attr C1 is  ZF-formula-like
means
:L87: C1 is (Element of ( WFF ));
end;
registration
cluster  ZF-formula-like for (FinSequence of ( NAT ));
existence
proof
set D9 = the (Element of ( WFF ));
reconsider D10 = D9 as (FinSequence of ( NAT )) by L42;
take D10;
thus L89: D10 is (Element of ( WFF ));
end;
end;
definition
mode ZF-formula
 is  ZF-formula-like (FinSequence of ( NAT ));
end;
theorem
L92: (for R4 being set holds (R4 is ZF-formula iff R4 in ( WFF )))
proof
let R4 being set;
thus L93: (R4 is ZF-formula implies R4 in ( WFF ))
proof
assume L94: R4 is ZF-formula;
L95: R4 is (Element of ( WFF )) by L94 , L87;
thus L96: thesis by L95;
end;

assume L97: R4 in ( WFF );
thus L98: thesis by L97 , L42 , L87;
end;
registration
let R12 being Variable;
let R13 being Variable;
cluster ( R12 '=' R13 ) ->  ZF-formula-like;
coherence
proof
L99: ( R12 '=' R13 ) is (Element of ( WFF )) by L42;
thus L100: thesis by L99 , L87;
end;
cluster ( R12 'in' R13 ) ->  ZF-formula-like;
coherence
proof
L101: ( R12 'in' R13 ) is (Element of ( WFF )) by L42;
thus L102: thesis by L101 , L87;
end;
end;
registration
let R20 being ZF-formula;
cluster ( 'not' R20 ) ->  ZF-formula-like;
coherence
proof
L104: R20 is (Element of ( WFF )) by L87;
L105: ( 'not' R20 ) is (Element of ( WFF )) by L104 , L42;
thus L106: thesis by L105 , L87;
end;
let R18 being ZF-formula;
cluster ( R20 '&' R18 ) ->  ZF-formula-like;
coherence
proof
L107: (R20 is (Element of ( WFF )) & R18 is (Element of ( WFF ))) by L87;
L108: ( R20 '&' R18 ) is (Element of ( WFF )) by L107 , L42;
thus L109: thesis by L108 , L87;
end;
end;
registration
let R12 being Variable;
let R20 being ZF-formula;
cluster ( All (R12 , R20) ) ->  ZF-formula-like;
coherence
proof
L111: R20 is (Element of ( WFF )) by L87;
L112: ( All (R12 , R20) ) is (Element of ( WFF )) by L111 , L42;
thus L113: thesis by L112 , L87;
end;
end;
definition
let R20 being ZF-formula;
attr R20 is  being_equality
means
:L115: (ex R12 being Variable st (ex R13 being Variable st R20 = ( R12 '=' R13 )));
attr R20 is  being_membership
means
:L116: (ex R12 being Variable st (ex R13 being Variable st R20 = ( R12 'in' R13 )));
attr R20 is  negative
means
:L117: (ex R21 being ZF-formula st R20 = ( 'not' R21 ));
attr R20 is  conjunctive
means
:L118: (ex R16 being ZF-formula st (ex R18 being ZF-formula st R20 = ( R16 '&' R18 )));
attr R20 is  universal
means
:L119: (ex R12 being Variable st (ex R21 being ZF-formula st R20 = ( All (R12 , R21) )));
end;
theorem
L121: (for R20 being ZF-formula holds ((R20 is  being_equality iff (ex R12 being Variable st (ex R13 being Variable st R20 = ( R12 '=' R13 )))) & (R20 is  being_membership iff (ex R12 being Variable st (ex R13 being Variable st R20 = ( R12 'in' R13 )))) & (R20 is  negative iff (ex R21 being ZF-formula st R20 = ( 'not' R21 ))) & (R20 is  conjunctive iff (ex R16 being ZF-formula st (ex R18 being ZF-formula st R20 = ( R16 '&' R18 )))) & (R20 is  universal iff (ex R12 being Variable st (ex R21 being ZF-formula st R20 = ( All (R12 , R21) )))))) by L115 , L116 , L117 , L118 , L119;
definition
let R20 being ZF-formula;
attr R20 is  atomic
means
:L122: (R20 is  being_equality or R20 is  being_membership);
end;
definition
let R16 being ZF-formula;
let R18 being ZF-formula;
func R16 'or' R18 -> ZF-formula equals
( 'not' ( ( 'not' R16 ) '&' ( 'not' R18 ) ) );
coherence;
func R16 => R18 -> ZF-formula equals
( 'not' ( R16 '&' ( 'not' R18 ) ) );
coherence;
end;
definition
let R16 being ZF-formula;
let R18 being ZF-formula;
func R16 <=> R18 -> ZF-formula equals
( ( R16 => R18 ) '&' ( R18 => R16 ) );
coherence;
end;
definition
let R12 being Variable;
let R20 being ZF-formula;
func Ex (R12 , R20) -> ZF-formula equals
( 'not' ( All (R12 , ( 'not' R20 )) ) );
coherence;
end;
definition
let R20 being ZF-formula;
attr R20 is  disjunctive
means
:L127: (ex R16 being ZF-formula st (ex R18 being ZF-formula st R20 = ( R16 'or' R18 )));
attr R20 is  conditional
means
:L128: (ex R16 being ZF-formula st (ex R18 being ZF-formula st R20 = ( R16 => R18 )));
attr R20 is  biconditional
means
:L129: (ex R16 being ZF-formula st (ex R18 being ZF-formula st R20 = ( R16 <=> R18 )));
attr R20 is  existential
means
:L130: (ex R12 being Variable st (ex R21 being ZF-formula st R20 = ( Ex (R12 , R21) )));
end;
theorem
L132: (for R20 being ZF-formula holds ((R20 is  disjunctive iff (ex R16 being ZF-formula st (ex R18 being ZF-formula st R20 = ( R16 'or' R18 )))) & (R20 is  conditional iff (ex R16 being ZF-formula st (ex R18 being ZF-formula st R20 = ( R16 => R18 )))) & (R20 is  biconditional iff (ex R16 being ZF-formula st (ex R18 being ZF-formula st R20 = ( R16 <=> R18 )))) & (R20 is  existential iff (ex R12 being Variable st (ex R21 being ZF-formula st R20 = ( Ex (R12 , R21) )))))) by L127 , L128 , L129 , L130;
definition
let R12 being Variable;
let R13 being Variable;
let R20 being ZF-formula;
func All (R12 , R13 , R20) -> ZF-formula equals
( All (R12 , ( All (R13 , R20) )) );
coherence;
func Ex (R12 , R13 , R20) -> ZF-formula equals
( Ex (R12 , ( Ex (R13 , R20) )) );
coherence;
end;
theorem
L134: (for R12 being Variable holds (for R13 being Variable holds (for R20 being ZF-formula holds (( All (R12 , R13 , R20) ) = ( All (R12 , ( All (R13 , R20) )) ) & ( Ex (R12 , R13 , R20) ) = ( Ex (R12 , ( Ex (R13 , R20) )) )))));
definition
let R12 being Variable;
let R13 being Variable;
let R14 being Variable;
let R20 being ZF-formula;
func All (R12 , R13 , R14 , R20) -> ZF-formula equals
( All (R12 , ( All (R13 , R14 , R20) )) );
coherence;
func Ex (R12 , R13 , R14 , R20) -> ZF-formula equals
( Ex (R12 , ( Ex (R13 , R14 , R20) )) );
coherence;
end;
theorem
L136: (for R12 being Variable holds (for R13 being Variable holds (for R14 being Variable holds (for R20 being ZF-formula holds (( All (R12 , R13 , R14 , R20) ) = ( All (R12 , ( All (R13 , R14 , R20) )) ) & ( Ex (R12 , R13 , R14 , R20) ) = ( Ex (R12 , ( Ex (R13 , R14 , R20) )) ))))));
theorem
L137: (for R20 being ZF-formula holds (R20 is  being_equality or R20 is  being_membership or R20 is  negative or R20 is  conjunctive or R20 is  universal))
proof
let R20 being ZF-formula;
L138: R20 is (Element of ( WFF )) by L87;
assume L139: (not thesis);
L140: ( ( x. ( 0 ) ) '=' ( x. 1 ) ) <> R20 by L139 , L115;
L141: (not ( ( x. ( 0 ) ) '=' ( x. 1 ) ) in { R20 }) by L140 , TARSKI:def 1;
L142:
now
let R12 being Variable;
let R13 being Variable;
L143: ( R12 '=' R13 ) <> R20 by L139 , L115;
L144: (not ( R12 '=' R13 ) in { R20 }) by L143 , TARSKI:def 1;
L145: ( R12 '=' R13 ) in ( WFF ) by L42;
thus L146: ( R12 '=' R13 ) in ( ( WFF ) \ { R20 } ) by L145 , L144 , XBOOLE_0:def 5;
L147: ( R12 'in' R13 ) <> R20 by L139 , L116;
L148: (not ( R12 'in' R13 ) in { R20 }) by L147 , TARSKI:def 1;
L149: ( R12 'in' R13 ) in ( WFF ) by L42;
thus L150: ( R12 'in' R13 ) in ( ( WFF ) \ { R20 } ) by L149 , L148 , XBOOLE_0:def 5;
end;
L151:
now
let R12 being Variable;
let R10 being (FinSequence of ( NAT ));
assume L152: R10 in ( ( WFF ) \ { R20 } );
reconsider D11 = R10 as ZF-formula by L152 , L87;
L153: ( All (R12 , D11) ) <> R20 by L139 , L119;
L154: (not ( All (R12 , R10) ) in { R20 }) by L153 , TARSKI:def 1;
L155: ( All (R12 , R10) ) in ( WFF ) by L152 , L42;
thus L156: ( All (R12 , R10) ) in ( ( WFF ) \ { R20 } ) by L155 , L154 , XBOOLE_0:def 5;
end;
L157:
now
let R10 being (FinSequence of ( NAT ));
let R11 being (FinSequence of ( NAT ));
assume L158: (R10 in ( ( WFF ) \ { R20 } ) & R11 in ( ( WFF ) \ { R20 } ));
reconsider D12 = R10 , D13 = R11 as ZF-formula by L158 , L87;
L159: ( D12 '&' D13 ) <> R20 by L139 , L118;
L160: (not ( R10 '&' R11 ) in { R20 }) by L159 , TARSKI:def 1;
L161: ( R10 '&' R11 ) in ( WFF ) by L158 , L42;
thus L162: ( R10 '&' R11 ) in ( ( WFF ) \ { R20 } ) by L161 , L160 , XBOOLE_0:def 5;
end;
L163:
now
let R10 being (FinSequence of ( NAT ));
assume L164: R10 in ( ( WFF ) \ { R20 } );
reconsider D14 = R10 as ZF-formula by L164 , L87;
L165: ( 'not' D14 ) <> R20 by L139 , L117;
L166: (not ( 'not' R10 ) in { R20 }) by L165 , TARSKI:def 1;
L167: ( 'not' R10 ) in ( WFF ) by L164 , L42;
thus L168: ( 'not' R10 ) in ( ( WFF ) \ { R20 } ) by L167 , L166 , XBOOLE_0:def 5;
end;
L169: ( ( x. ( 0 ) ) '=' ( x. 1 ) ) in ( WFF ) by L42;
L170: ( ( WFF ) \ { R20 } ) is non  empty non  empty non  empty non  empty set by L169 , L141 , XBOOLE_0:def 5;
L171: (for R4 being set holds (R4 in ( ( WFF ) \ { R20 } ) implies R4 is (FinSequence of ( NAT )))) by L42;
L172: ( WFF ) c= ( ( WFF ) \ { R20 } ) by L171 , L170 , L142 , L163 , L157 , L151 , L42;
L173: R20 in ( ( WFF ) \ { R20 } ) by L172 , L138 , TARSKI:def 3;
L174: (not R20 in { R20 }) by L173 , XBOOLE_0:def 5;
thus L175: contradiction by L174 , TARSKI:def 1;
end;
theorem
L176: (for R20 being ZF-formula holds (R20 is  atomic or R20 is  negative or R20 is  conjunctive or R20 is  universal))
proof
let R20 being ZF-formula;
assume L177: ((not R20 is  being_equality) & (not R20 is  being_membership));
thus L178: thesis by L177 , L137;
end;
theorem
L179: (for R20 being ZF-formula holds (R20 is  atomic implies ( len R20 ) = 3))
proof
let R20 being ZF-formula;
L180:
now
assume L181: R20 is  being_equality;
consider R12 being Variable, R13 being Variable such that L182: R20 = ( R12 '=' R13 ) by L181 , L115;
L183: R20 = <* ( 0 ) , R12 , R13 *> by L182 , FINSEQ_1:def 10;
thus L184: thesis by L183 , FINSEQ_1:45;
end;
L185:
now
assume L186: R20 is  being_membership;
consider R12 being Variable, R13 being Variable such that L187: R20 = ( R12 'in' R13 ) by L186 , L116;
L188: R20 = <* 1 , R12 , R13 *> by L187 , FINSEQ_1:def 10;
thus L189: thesis by L188 , FINSEQ_1:45;
end;
assume L190: R20 is  atomic;
thus L191: thesis by L190 , L180 , L185 , L122;
end;
theorem
L192: (for R20 being ZF-formula holds (R20 is  atomic or (ex R21 being ZF-formula st ( ( len R21 ) + 1 ) <= ( len R20 ))))
proof
let R20 being ZF-formula;
L193:
now
let R20 being ZF-formula;
assume L194: R20 is  universal;
consider R12 being Variable, R21 being ZF-formula such that L195: R20 = ( All (R12 , R21) ) by L194 , L119;
take D15 = R21;
L196: (( len <* 4 , R12 *> ) = 2 & ( <* 4 *> ^ <* R12 *> ) = <* 4 , R12 *>) by FINSEQ_1:44 , FINSEQ_1:def 9;
L197: ( ( 1 + 1 ) + ( len D15 ) ) = ( 1 + ( 1 + ( len D15 ) ) );
L198: ( len R20 ) = ( ( len ( <* 4 *> ^ <* R12 *> ) ) + ( len D15 ) ) by L195 , FINSEQ_1:22;
thus L199: ( ( len D15 ) + 1 ) <= ( len R20 ) by L198 , L196 , L197 , NAT_1:11;
end;
L200:
now
let R20 being ZF-formula;
assume L201: R20 is  negative;
consider R21 being ZF-formula such that L202: R20 = ( 'not' R21 ) by L201 , L117;
take D16 = R21;
L203: ( len R20 ) = ( ( len <* 2 *> ) + ( len D16 ) ) by L202 , FINSEQ_1:22;
thus L204: ( ( len D16 ) + 1 ) <= ( len R20 ) by L203 , FINSEQ_1:40;
end;
L205:
now
let R20 being ZF-formula;
assume L206: R20 is  conjunctive;
consider R21 being ZF-formula, R17 being ZF-formula such that L207: R20 = ( R21 '&' R17 ) by L206 , L118;
take D17 = R21;
L208: (( len ( <* 3 *> ^ D17 ) ) = ( ( len <* 3 *> ) + ( len D17 ) ) & ( len <* 3 *> ) = 1) by FINSEQ_1:22 , FINSEQ_1:40;
L209: ( len R20 ) = ( ( len ( <* 3 *> ^ D17 ) ) + ( len R17 ) ) by L207 , FINSEQ_1:22;
thus L210: ( ( len D17 ) + 1 ) <= ( len R20 ) by L209 , L208 , NAT_1:11;
end;
assume L211: (not R20 is  atomic);
L212: (R20 is  negative or R20 is  conjunctive or R20 is  universal) by L211 , L176;
thus L213: thesis by L212 , L200 , L205 , L193;
end;
theorem
L214: (for R20 being ZF-formula holds 3 <= ( len R20 ))
proof
let R20 being ZF-formula;
L215:
now
assume L216: (not R20 is  atomic);
consider R21 being ZF-formula such that L217: ( ( len R21 ) + 1 ) <= ( len R20 ) by L216 , L192;
L218:
now
assume L219: (not R21 is  atomic);
consider R16 being ZF-formula such that L220: ( ( len R16 ) + 1 ) <= ( len R21 ) by L219 , L192;
L221:
now
assume L222: (not R16 is  atomic);
consider R17 being ZF-formula such that L223: ( ( len R17 ) + 1 ) <= ( len R16 ) by L222 , L192;
L224: ( 0 ) <= ( len R17 ) by NAT_1:2;
L225: ( ( 0 ) + 1 ) <= ( ( len R17 ) + 1 ) by L224 , XREAL_1:7;
L226: 1 <= ( len R16 ) by L225 , L223 , XXREAL_0:2;
L227: ( 1 + 1 ) <= ( ( len R16 ) + 1 ) by L226 , XREAL_1:7;
L228: 2 <= ( len R21 ) by L227 , L220 , XXREAL_0:2;
L229: ( 2 + 1 ) <= ( ( len R21 ) + 1 ) by L228 , XREAL_1:7;
thus L230: thesis by L229 , L217 , XXREAL_0:2;
end;
L231: ( ( ( len R16 ) + 1 ) + 1 ) <= ( ( len R21 ) + 1 ) by L220 , XREAL_1:7;
L232:
now
assume L233: R16 is  atomic;
L234: ( len R16 ) = 3 by L233 , L179;
L235: ( ( 3 + 1 ) + 1 ) <= ( len R20 ) by L234 , L217 , L231 , XXREAL_0:2;
thus L236: thesis by L235 , XXREAL_0:2;
end;
thus L237: thesis by L232 , L221;
end;
L238:
now
assume L239: R21 is  atomic;
L240: ( 3 + 1 ) <= ( len R20 ) by L239 , L217 , L179;
thus L241: thesis by L240 , XXREAL_0:2;
end;
thus L242: thesis by L238 , L218;
end;
thus L243: thesis by L215 , L179;
end;
theorem
L244: (for R20 being ZF-formula holds (( len R20 ) = 3 implies R20 is  atomic))
proof
let R20 being ZF-formula;
assume L245: ( len R20 ) = 3;
assume L246: (not R20 is  atomic);
consider R21 being ZF-formula such that L247: ( ( len R21 ) + 1 ) <= ( len R20 ) by L246 , L192;
L248: 3 <= ( len R21 ) by L214;
L249: ( 3 + 1 ) <= ( ( len R21 ) + 1 ) by L248 , XREAL_1:7;
thus L250: contradiction by L249 , L245 , L247 , XXREAL_0:2;
end;
theorem
L251: (for R12 being Variable holds (for R13 being Variable holds (( ( R12 '=' R13 ) . 1 ) = ( 0 ) & ( ( R12 'in' R13 ) . 1 ) = 1)))
proof
let R12 being Variable;
let R13 being Variable;
thus L252: ( ( R12 '=' R13 ) . 1 ) = ( ( <* ( 0 ) *> ^ ( <* R12 *> ^ <* R13 *> ) ) . 1 ) by FINSEQ_1:32
.= ( 0 ) by FINSEQ_1:41;
thus L253: ( ( R12 'in' R13 ) . 1 ) = ( ( <* 1 *> ^ ( <* R12 *> ^ <* R13 *> ) ) . 1 ) by FINSEQ_1:32
.= 1 by FINSEQ_1:41;
end;
theorem
L254: (for R16 being ZF-formula holds (for R18 being ZF-formula holds ( ( R16 '&' R18 ) . 1 ) = 3))
proof
let R16 being ZF-formula;
let R18 being ZF-formula;
thus L255: ( ( R16 '&' R18 ) . 1 ) = ( ( <* 3 *> ^ ( R16 ^ R18 ) ) . 1 ) by FINSEQ_1:32
.= 3 by FINSEQ_1:41;
end;
theorem
L256: (for R12 being Variable holds (for R20 being ZF-formula holds ( ( All (R12 , R20) ) . 1 ) = 4))
proof
let R12 being Variable;
let R20 being ZF-formula;
thus L257: ( ( All (R12 , R20) ) . 1 ) = ( ( <* 4 *> ^ ( <* R12 *> ^ R20 ) ) . 1 ) by FINSEQ_1:32
.= 4 by FINSEQ_1:41;
end;
theorem
L258: (for R20 being ZF-formula holds (R20 is  being_equality implies ( R20 . 1 ) = ( 0 )))
proof
let R20 being ZF-formula;
assume L259: R20 is  being_equality;
consider R12 being Variable, R13 being Variable such that L260: R20 = ( R12 '=' R13 ) by L259 , L115;
L261: R20 = <* ( 0 ) , R12 , R13 *> by L260 , FINSEQ_1:def 10;
thus L262: thesis by L261 , FINSEQ_1:45;
end;
theorem
L263: (for R20 being ZF-formula holds (R20 is  being_membership implies ( R20 . 1 ) = 1))
proof
let R20 being ZF-formula;
assume L264: R20 is  being_membership;
consider R12 being Variable, R13 being Variable such that L265: R20 = ( R12 'in' R13 ) by L264 , L116;
L266: R20 = <* 1 , R12 , R13 *> by L265 , FINSEQ_1:def 10;
thus L267: thesis by L266 , FINSEQ_1:45;
end;
theorem
L268: (for R20 being ZF-formula holds (R20 is  negative implies ( R20 . 1 ) = 2))
proof
let R20 being ZF-formula;
assume L269: R20 is  negative;
L270: (ex R21 being ZF-formula st R20 = ( 'not' R21 )) by L269 , L117;
thus L271: thesis by L270 , FINSEQ_1:41;
end;
theorem
L272: (for R20 being ZF-formula holds (R20 is  conjunctive implies ( R20 . 1 ) = 3))
proof
let R20 being ZF-formula;
assume L273: R20 is  conjunctive;
consider R16 being ZF-formula, R18 being ZF-formula such that L274: R20 = ( R16 '&' R18 ) by L273 , L118;
L275: ( ( <* 3 *> ^ R16 ) ^ R18 ) = ( <* 3 *> ^ ( R16 ^ R18 ) ) by FINSEQ_1:32;
thus L276: thesis by L275 , L274 , FINSEQ_1:41;
end;
theorem
L277: (for R20 being ZF-formula holds (R20 is  universal implies ( R20 . 1 ) = 4))
proof
let R20 being ZF-formula;
assume L278: R20 is  universal;
consider R12 being Variable, R21 being ZF-formula such that L279: R20 = ( All (R12 , R21) ) by L278 , L119;
L280: ( ( <* 4 *> ^ <* R12 *> ) ^ R21 ) = ( <* 4 *> ^ ( <* R12 *> ^ R21 ) ) by FINSEQ_1:32;
thus L281: thesis by L280 , L279 , FINSEQ_1:41;
end;
theorem
L282: (for R20 being ZF-formula holds ((R20 is  being_equality & ( R20 . 1 ) = ( 0 )) or (R20 is  being_membership & ( R20 . 1 ) = 1) or (R20 is  negative & ( R20 . 1 ) = 2) or (R20 is  conjunctive & ( R20 . 1 ) = 3) or (R20 is  universal & ( R20 . 1 ) = 4)))
proof
let R20 being ZF-formula;
per cases  by L137;
case L283: R20 is  being_equality;
thus L284: thesis by L283 , L258;
end;
case L285: R20 is  being_membership;
thus L286: thesis by L285 , L263;
end;
case L287: R20 is  negative;
thus L288: thesis by L287 , L268;
end;
case L289: R20 is  conjunctive;
thus L290: thesis by L289 , L272;
end;
case L291: R20 is  universal;
thus L292: thesis by L291 , L277;
end;
end;
theorem
L294: (for R20 being ZF-formula holds (( R20 . 1 ) = ( 0 ) implies R20 is  being_equality)) by L282;
theorem
L295: (for R20 being ZF-formula holds (( R20 . 1 ) = 1 implies R20 is  being_membership)) by L282;
theorem
L296: (for R20 being ZF-formula holds (( R20 . 1 ) = 2 implies R20 is  negative)) by L282;
theorem
L297: (for R20 being ZF-formula holds (( R20 . 1 ) = 3 implies R20 is  conjunctive)) by L282;
theorem
L298: (for R20 being ZF-formula holds (( R20 . 1 ) = 4 implies R20 is  universal)) by L282;
theorem
L299: (for R16 being ZF-formula holds (for R20 being ZF-formula holds (for R22 being FinSequence holds (R20 = ( R16 ^ R22 ) implies R20 = R16))))
proof
let R16 being ZF-formula;
let R20 being ZF-formula;
let R22 being FinSequence;
defpred S3[ Nat ] means (for R20 being ZF-formula holds (for R16 being ZF-formula holds (for R22 being FinSequence holds ((( len R20 ) = $1 & R20 = ( R16 ^ R22 )) implies R20 = R16))));
L300: (for B1 being Nat holds ((for B2 being Nat holds (B2 < B1 implies (for R20 being ZF-formula holds (for R16 being ZF-formula holds (for R22 being FinSequence holds ((( len R20 ) = B2 & R20 = ( R16 ^ R22 )) implies R20 = R16)))))) implies (for R20 being ZF-formula holds (for R16 being ZF-formula holds (for R22 being FinSequence holds ((( len R20 ) = B1 & R20 = ( R16 ^ R22 )) implies R20 = R16))))))
proof
let C2 being Nat;
assume that
L301: (for B3 being Nat holds (B3 < C2 implies (for R20 being ZF-formula holds (for R16 being ZF-formula holds (for R22 being FinSequence holds ((( len R20 ) = B3 & R20 = ( R16 ^ R22 )) implies R20 = R16))))));
let R20 being ZF-formula;
let R16 being ZF-formula;
let R22 being FinSequence;
assume that
L302: ( len R20 ) = C2
and
L303: R20 = ( R16 ^ R22 );
L304: 3 <= ( len R16 ) by L214;
L305: (( dom R16 ) = ( Seg ( len R16 ) ) & 1 <= ( len R16 )) by L304 , FINSEQ_1:def 3 , XXREAL_0:2;
L306: 1 in ( dom R16 ) by L305 , FINSEQ_1:1;
L307:
now
L308: ( len <* 2 *> ) = 1 by FINSEQ_1:40;
assume L309: R20 is  negative;
consider R21 being ZF-formula such that L310: R20 = ( 'not' R21 ) by L309 , L117;
L311: ( ( R16 ^ R22 ) . 1 ) = 2 by L303 , L309 , L268;
L312: ( R16 . 1 ) = 2 by L311 , L306 , FINSEQ_1:def 7;
L313: R16 is  negative by L312 , L282;
consider R17 being ZF-formula such that L314: R16 = ( 'not' R17 ) by L313 , L117;
L315: ( ( len <* 2 *> ) + ( len R21 ) ) = ( len R20 ) by L310 , FINSEQ_1:22;
L316: ( len R21 ) < ( len R20 ) by L315 , L308 , NAT_1:13;
L317: ( ( <* 2 *> ^ R17 ) ^ R22 ) = ( <* 2 *> ^ ( R17 ^ R22 ) ) by FINSEQ_1:32;
L318: R21 = ( R17 ^ R22 ) by L317 , L303 , L310 , L314 , FINSEQ_1:33;
thus L319: thesis by L318 , L301 , L302 , L310 , L314 , L316;
end;
L320:
now
assume L321: R20 is  conjunctive;
consider R19 being ZF-formula, R18 being ZF-formula such that L322: R20 = ( R19 '&' R18 ) by L321 , L118;
L323: ( ( len R18 ) + ( 1 + ( len R19 ) ) ) = ( ( ( len R18 ) + 1 ) + ( len R19 ) );
L324: (( len ( <* 3 *> ^ R19 ) ) = ( ( len <* 3 *> ) + ( len R19 ) ) & ( len <* 3 *> ) = 1) by FINSEQ_1:22 , FINSEQ_1:40;
L325: ( ( len ( <* 3 *> ^ R19 ) ) + ( len R18 ) ) = ( len R20 ) by L322 , FINSEQ_1:22;
L326: ( ( len R18 ) + 1 ) <= ( len R20 ) by L325 , L324 , L323 , NAT_1:11;
L327: ( len R18 ) < ( len R20 ) by L326 , NAT_1:13;
L328: ( ( R16 ^ R22 ) . 1 ) = 3 by L303 , L321 , L272;
L329: ( R16 . 1 ) = 3 by L328 , L306 , FINSEQ_1:def 7;
L330: R16 is  conjunctive by L329 , L282;
consider R17 being ZF-formula, R21 being ZF-formula such that L331: R16 = ( R17 '&' R21 ) by L330 , L118;
L332:
now
L333: ( ( ( ( len R17 ) + 1 ) + ( len R21 ) ) + ( len R22 ) ) = ( ( ( len R17 ) + 1 ) + ( ( len R21 ) + ( len R22 ) ) );
given R23 being FinSequence such that
L334: R17 = ( R19 ^ R23 );

L335: (( len ( R16 ^ R22 ) ) = ( ( len R16 ) + ( len R22 ) ) & ( len <* 3 *> ) = 1) by FINSEQ_1:22 , FINSEQ_1:40;
L336: (( len ( <* 3 *> ^ R17 ) ) = ( ( len <* 3 *> ) + ( len R17 ) ) & ( len R16 ) = ( ( len ( <* 3 *> ^ R17 ) ) + ( len R21 ) )) by L331 , FINSEQ_1:22;
L337: ( ( len R17 ) + 1 ) <= ( len R20 ) by L336 , L303 , L335 , L333 , NAT_1:11;
L338: ( len R17 ) < ( len R20 ) by L337 , NAT_1:13;
thus L339: R17 = R19 by L338 , L301 , L302 , L334;
end;
L340: (( ( <* 3 *> ^ R17 ) ^ R21 ) = ( <* 3 *> ^ ( R17 ^ R21 ) ) & ( ( <* 3 *> ^ ( R17 ^ R21 ) ) ^ R22 ) = ( <* 3 *> ^ ( ( R17 ^ R21 ) ^ R22 ) )) by FINSEQ_1:32;
L341:
now
given R23 being FinSequence such that
L342: R19 = ( R17 ^ R23 );

L343: ( len <* 3 *> ) = 1 by FINSEQ_1:40;
L344: (( ( len ( <* 3 *> ^ R19 ) ) + ( len R18 ) ) = ( len R20 ) & ( len ( <* 3 *> ^ R19 ) ) = ( ( len <* 3 *> ) + ( len R19 ) )) by L322 , FINSEQ_1:22;
L345: ( ( len R19 ) + 1 ) <= ( len R20 ) by L344 , L343 , NAT_1:11;
L346: ( len R19 ) < ( len R20 ) by L345 , NAT_1:13;
thus L347: R19 = R17 by L346 , L301 , L302 , L342;
end;
L348: ( ( R17 ^ R21 ) ^ R22 ) = ( R17 ^ ( R21 ^ R22 ) ) by FINSEQ_1:32;
L349: ( ( <* 3 *> ^ R19 ) ^ R18 ) = ( <* 3 *> ^ ( R19 ^ R18 ) ) by FINSEQ_1:32;
L350: ( R19 ^ R18 ) = ( R17 ^ ( R21 ^ R22 ) ) by L349 , L303 , L322 , L331 , L340 , L348 , FINSEQ_1:33;
L351: (( len R17 ) <= ( len R19 ) implies (ex R23 being FinSequence st R19 = ( R17 ^ R23 ))) by L350 , FINSEQ_1:47;
L352: R18 = ( R21 ^ R22 ) by L351 , L350 , L341 , L332 , FINSEQ_1:33 , FINSEQ_1:47;
thus L353: thesis by L352 , L301 , L302 , L303 , L331 , L340 , L348 , L327;
end;
L354:
now
assume L355: R20 is  universal;
consider R12 being Variable, R21 being ZF-formula such that L356: R20 = ( All (R12 , R21) ) by L355 , L119;
L357: ( <* 4 *> ^ <* R12 *> ) = <* 4 , R12 *> by FINSEQ_1:def 9;
L358: (( len <* 4 , R12 *> ) = 2 & ( 1 + ( 1 + ( len R21 ) ) ) = ( ( 1 + ( len R21 ) ) + 1 )) by FINSEQ_1:44;
L359: ( ( len ( <* 4 *> ^ <* R12 *> ) ) + ( len R21 ) ) = ( len R20 ) by L356 , FINSEQ_1:22;
L360: ( ( len R21 ) + 1 ) <= ( len R20 ) by L359 , L358 , L357 , NAT_1:11;
L361: ( len R21 ) < ( len R20 ) by L360 , NAT_1:13;
L362: ( ( R16 ^ R22 ) . 1 ) = 4 by L303 , L355 , L277;
L363: ( R16 . 1 ) = 4 by L362 , L306 , FINSEQ_1:def 7;
L364: R16 is  universal by L363 , L282;
consider R13 being Variable, R17 being ZF-formula such that L365: R16 = ( All (R13 , R17) ) by L364 , L119;
L366: (( ( <* R12 *> ^ R21 ) . 1 ) = R12 & ( ( <* R13 *> ^ ( R17 ^ R22 ) ) . 1 ) = R13) by FINSEQ_1:41;
L367: ( ( ( <* 4 *> ^ <* R13 *> ) ^ R17 ) ^ R22 ) = ( ( <* 4 *> ^ <* R13 *> ) ^ ( R17 ^ R22 ) ) by FINSEQ_1:32;
L368: (( ( <* 4 *> ^ <* R12 *> ) ^ R21 ) = ( <* 4 *> ^ ( <* R12 *> ^ R21 ) ) & ( ( <* 4 *> ^ <* R13 *> ) ^ ( R17 ^ R22 ) ) = ( <* 4 *> ^ ( <* R13 *> ^ ( R17 ^ R22 ) ) )) by FINSEQ_1:32;
L369: ( <* R12 *> ^ R21 ) = ( <* R13 *> ^ ( R17 ^ R22 ) ) by L368 , L303 , L356 , L365 , L367 , FINSEQ_1:33;
L370: R21 = ( R17 ^ R22 ) by L369 , L366 , FINSEQ_1:33;
thus L371: thesis by L370 , L301 , L302 , L303 , L365 , L367 , L361;
end;
L372: ( ( len R16 ) + ( len R22 ) ) = ( len ( R16 ^ R22 ) ) by FINSEQ_1:22;
L373:
now
L374: 3 <= ( len R16 ) by L214;
assume L375: R20 is  atomic;
L376: ( len R20 ) = 3 by L375 , L179;
L377: ( len R16 ) <= 3 by L376 , L303 , L372 , NAT_1:11;
L378: ( 3 + ( len R22 ) ) = ( 3 + ( 0 ) ) by L377 , L303 , L372 , L376 , L374 , XXREAL_0:1;
L379: R22 = ( {} ) by L378;
thus L380: thesis by L379 , L303 , FINSEQ_1:34;
end;
thus L381: thesis by L373 , L307 , L354 , L320 , L176;
end;
L382: (for B4 being Nat holds ((for B5 being Nat holds (B5 < B4 implies S3[ B5 ])) implies S3[ B4 ])) by L300;
L383: (for B6 being Nat holds S3[ B6 ]) from NAT_1:sch 4(L382);
L384: ( len R20 ) = ( len R20 );
thus L385: thesis by L384 , L383;
end;
theorem
L386: (for R18 being ZF-formula holds (for R19 being ZF-formula holds (for R20 being ZF-formula holds (for R21 being ZF-formula holds (( R20 '&' R18 ) = ( R21 '&' R19 ) implies (R20 = R21 & R18 = R19))))))
proof
let R18 being ZF-formula;
let R19 being ZF-formula;
let R20 being ZF-formula;
let R21 being ZF-formula;
assume L387: ( R20 '&' R18 ) = ( R21 '&' R19 );
L388: (( ( <* 3 *> ^ R20 ) ^ R18 ) = ( <* 3 *> ^ ( R20 ^ R18 ) ) & ( ( <* 3 *> ^ R21 ) ^ R19 ) = ( <* 3 *> ^ ( R21 ^ R19 ) )) by FINSEQ_1:32;
L389: ( R20 ^ R18 ) = ( R21 ^ R19 ) by L388 , L387 , FINSEQ_1:33;
L390: (( len R21 ) <= ( len R20 ) implies (ex R22 being FinSequence st R20 = ( R21 ^ R22 ))) by L389 , FINSEQ_1:47;
L391: (( len R20 ) <= ( len R21 ) implies (ex R22 being FinSequence st R21 = ( R20 ^ R22 ))) by L389 , FINSEQ_1:47;
thus L392: R20 = R21 by L391 , L390 , L299;
L393: ((ex R22 being FinSequence st R21 = ( R20 ^ R22 )) implies R21 = R20) by L299;
thus L394: thesis by L393 , L387 , L390 , L391 , L299 , FINSEQ_1:33;
end;
theorem
L395: (for R16 being ZF-formula holds (for R17 being ZF-formula holds (for R18 being ZF-formula holds (for R19 being ZF-formula holds (( R16 'or' R18 ) = ( R17 'or' R19 ) implies (R16 = R17 & R18 = R19))))))
proof
let R16 being ZF-formula;
let R17 being ZF-formula;
let R18 being ZF-formula;
let R19 being ZF-formula;
assume L396: ( R16 'or' R18 ) = ( R17 'or' R19 );
L397: ( ( 'not' R16 ) '&' ( 'not' R18 ) ) = ( ( 'not' R17 ) '&' ( 'not' R19 ) ) by L396 , FINSEQ_1:33;
L398: (( 'not' R16 ) = ( 'not' R17 ) & ( 'not' R18 ) = ( 'not' R19 )) by L397 , L386;
thus L399: thesis by L398 , FINSEQ_1:33;
end;
theorem
L400: (for R16 being ZF-formula holds (for R17 being ZF-formula holds (for R18 being ZF-formula holds (for R19 being ZF-formula holds (( R16 => R18 ) = ( R17 => R19 ) implies (R16 = R17 & R18 = R19))))))
proof
let R16 being ZF-formula;
let R17 being ZF-formula;
let R18 being ZF-formula;
let R19 being ZF-formula;
assume L401: ( R16 => R18 ) = ( R17 => R19 );
L402: ( R16 '&' ( 'not' R18 ) ) = ( R17 '&' ( 'not' R19 ) ) by L401 , FINSEQ_1:33;
thus L403: R16 = R17 by L402 , L386;
L404: ( 'not' R18 ) = ( 'not' R19 ) by L402 , L386;
thus L405: thesis by L404 , FINSEQ_1:33;
end;
theorem
L406: (for R16 being ZF-formula holds (for R17 being ZF-formula holds (for R18 being ZF-formula holds (for R19 being ZF-formula holds (( R16 <=> R18 ) = ( R17 <=> R19 ) implies (R16 = R17 & R18 = R19))))))
proof
let R16 being ZF-formula;
let R17 being ZF-formula;
let R18 being ZF-formula;
let R19 being ZF-formula;
assume L407: ( R16 <=> R18 ) = ( R17 <=> R19 );
L408: ( R16 => R18 ) = ( R17 => R19 ) by L407 , L386;
thus L409: thesis by L408 , L400;
end;
theorem
L410: (for R12 being Variable holds (for R13 being Variable holds (for R18 being ZF-formula holds (for R20 being ZF-formula holds (( Ex (R12 , R20) ) = ( Ex (R13 , R18) ) implies (R12 = R13 & R20 = R18))))))
proof
let R12 being Variable;
let R13 being Variable;
let R18 being ZF-formula;
let R20 being ZF-formula;
assume L411: ( Ex (R12 , R20) ) = ( Ex (R13 , R18) );
L412: ( All (R12 , ( 'not' R20 )) ) = ( All (R13 , ( 'not' R18 )) ) by L411 , FINSEQ_1:33;
L413: ( 'not' R20 ) = ( 'not' R18 ) by L412 , L35;
thus L414: thesis by L413 , L412 , L35 , FINSEQ_1:33;
end;
definition
let R20 being ZF-formula;
assume L415: R20 is  atomic;
func Var1 R20 -> Variable equals
:L416: ( R20 . 2 );
coherence
proof
L417: ((ex R12 being Variable st (ex R13 being Variable st R20 = ( R12 'in' R13 ))) implies (ex R1 being (Element of ( NAT )) st (ex R12 being Variable st (ex R13 being Variable st R20 = ( ( <* R1 *> ^ <* R12 *> ) ^ <* R13 *> )))));
L418: ((ex R12 being Variable st (ex R13 being Variable st R20 = ( R12 '=' R13 ))) implies (ex R1 being (Element of ( NAT )) st (ex R12 being Variable st (ex R13 being Variable st R20 = ( ( <* R1 *> ^ <* R12 *> ) ^ <* R13 *> )))));
L419: (R20 is  being_equality or R20 is  being_membership) by L415 , L122;
consider R1 being (Element of ( NAT )), R12 being Variable, R13 being Variable such that L420: R20 = ( ( <* R1 *> ^ <* R12 *> ) ^ <* R13 *> ) by L419 , L418 , L417 , L115 , L116;
L421: R20 = <* R1 , R12 , R13 *> by L420 , FINSEQ_1:def 10;
thus L422: thesis by L421 , FINSEQ_1:45;
end;
func Var2 R20 -> Variable equals
:L423: ( R20 . 3 );
coherence
proof
L424: ((ex R12 being Variable st (ex R13 being Variable st R20 = ( R12 'in' R13 ))) implies (ex R1 being (Element of ( NAT )) st (ex R12 being Variable st (ex R13 being Variable st R20 = ( ( <* R1 *> ^ <* R12 *> ) ^ <* R13 *> )))));
L425: ((ex R12 being Variable st (ex R13 being Variable st R20 = ( R12 '=' R13 ))) implies (ex R1 being (Element of ( NAT )) st (ex R12 being Variable st (ex R13 being Variable st R20 = ( ( <* R1 *> ^ <* R12 *> ) ^ <* R13 *> )))));
L426: (R20 is  being_equality or R20 is  being_membership) by L415 , L122;
consider R1 being (Element of ( NAT )), R12 being Variable, R13 being Variable such that L427: R20 = ( ( <* R1 *> ^ <* R12 *> ) ^ <* R13 *> ) by L426 , L425 , L424 , L115 , L116;
L428: R20 = <* R1 , R12 , R13 *> by L427 , FINSEQ_1:def 10;
thus L429: thesis by L428 , FINSEQ_1:45;
end;
end;
theorem
L431: (for R20 being ZF-formula holds (R20 is  atomic implies (( Var1 R20 ) = ( R20 . 2 ) & ( Var2 R20 ) = ( R20 . 3 )))) by L416 , L423;
theorem
L432: (for R20 being ZF-formula holds (R20 is  being_equality implies R20 = ( ( Var1 R20 ) '=' ( Var2 R20 ) )))
proof
let R20 being ZF-formula;
assume L433: R20 is  being_equality;
consider R12 being Variable, R13 being Variable such that L434: R20 = ( R12 '=' R13 ) by L433 , L115;
L435: ( ( <* ( 0 ) *> ^ <* R12 *> ) ^ <* R13 *> ) = <* ( 0 ) , R12 , R13 *> by FINSEQ_1:def 10;
L436: (( R20 . 2 ) = R12 & ( R20 . 3 ) = R13) by L435 , L434 , FINSEQ_1:45;
L437: R20 is  atomic by L433 , L122;
L438: ( R20 . 2 ) = ( Var1 R20 ) by L437 , L416;
thus L439: thesis by L438 , L434 , L437 , L436 , L423;
end;
theorem
L440: (for R20 being ZF-formula holds (R20 is  being_membership implies R20 = ( ( Var1 R20 ) 'in' ( Var2 R20 ) )))
proof
let R20 being ZF-formula;
assume L441: R20 is  being_membership;
consider R12 being Variable, R13 being Variable such that L442: R20 = ( R12 'in' R13 ) by L441 , L116;
L443: ( ( <* 1 *> ^ <* R12 *> ) ^ <* R13 *> ) = <* 1 , R12 , R13 *> by FINSEQ_1:def 10;
L444: (( R20 . 2 ) = R12 & ( R20 . 3 ) = R13) by L443 , L442 , FINSEQ_1:45;
L445: R20 is  atomic by L441 , L122;
L446: ( R20 . 2 ) = ( Var1 R20 ) by L445 , L416;
thus L447: thesis by L446 , L442 , L445 , L444 , L423;
end;
definition
let R20 being ZF-formula;
assume L448: R20 is  negative;
func the_argument_of R20 -> ZF-formula means
:L449: ( 'not' it ) = R20;
existence by L448 , L117;
uniqueness by FINSEQ_1:33;
end;
definition
let R20 being ZF-formula;
assume L451: (R20 is  conjunctive or R20 is  disjunctive);
func the_left_argument_of R20 -> ZF-formula means
:L452: (ex R21 being ZF-formula st ( it '&' R21 ) = R20) if R20 is  conjunctive otherwise (ex R21 being ZF-formula st ( it 'or' R21 ) = R20);
existence by L451 , L118 , L127;
uniqueness by L386 , L395;
consistency;
func the_right_argument_of R20 -> ZF-formula means
:L453: (ex R21 being ZF-formula st ( R21 '&' it ) = R20) if R20 is  conjunctive otherwise (ex R21 being ZF-formula st ( R21 'or' it ) = R20);
existence
proof
thus L454: (R20 is  conjunctive implies (ex R18 being ZF-formula st (ex R21 being ZF-formula st ( R21 '&' R18 ) = R20)))
proof
assume L455: R20 is  conjunctive;
consider R18 being ZF-formula, R16 being ZF-formula such that L456: ( R18 '&' R16 ) = R20 by L455 , L118;
take R16;
thus L457: thesis by L456;
end;

thus L458: ((not R20 is  conjunctive) implies (ex R18 being ZF-formula st (ex R21 being ZF-formula st ( R21 'or' R18 ) = R20)))
proof
assume L459: (not R20 is  conjunctive);
consider R18 being ZF-formula, R16 being ZF-formula such that L460: ( R18 'or' R16 ) = R20 by L459 , L451 , L127;
take R16;
thus L461: thesis by L460;
end;

end;
uniqueness by L386 , L395;
consistency;
end;
theorem
L460: (for R16 being ZF-formula holds (for R20 being ZF-formula holds (R20 is  conjunctive implies ((R16 = ( the_left_argument_of R20 ) iff (ex R18 being ZF-formula st ( R16 '&' R18 ) = R20)) & (R16 = ( the_right_argument_of R20 ) iff (ex R18 being ZF-formula st ( R18 '&' R16 ) = R20)))))) by L452 , L453;
theorem
L461: (for R16 being ZF-formula holds (for R20 being ZF-formula holds (R20 is  disjunctive implies ((R16 = ( the_left_argument_of R20 ) iff (ex R18 being ZF-formula st ( R16 'or' R18 ) = R20)) & (R16 = ( the_right_argument_of R20 ) iff (ex R18 being ZF-formula st ( R18 'or' R16 ) = R20))))))
proof
let R16 being ZF-formula;
let R20 being ZF-formula;
assume L462: R20 is  disjunctive;
L463: (ex R16 being ZF-formula st (ex R18 being ZF-formula st R20 = ( R16 'or' R18 ))) by L462 , L127;
L464: ( R20 . 1 ) = 2 by L463 , FINSEQ_1:41;
L465: (not R20 is  conjunctive) by L464 , L272;
thus L466: thesis by L465 , L462 , L452 , L453;
end;
theorem
L467: (for R20 being ZF-formula holds (R20 is  conjunctive implies R20 = ( ( the_left_argument_of R20 ) '&' ( the_right_argument_of R20 ) )))
proof
let R20 being ZF-formula;
assume L468: R20 is  conjunctive;
L469: (ex R17 being ZF-formula st R20 = ( ( the_left_argument_of R20 ) '&' R17 )) by L468 , L452;
thus L470: thesis by L469 , L468 , L453;
end;
theorem
L471: (for R20 being ZF-formula holds (R20 is  disjunctive implies R20 = ( ( the_left_argument_of R20 ) 'or' ( the_right_argument_of R20 ) )))
proof
let R20 being ZF-formula;
assume L472: R20 is  disjunctive;
L473: (ex R17 being ZF-formula st R20 = ( ( the_left_argument_of R20 ) 'or' R17 )) by L472 , L461;
thus L474: thesis by L473 , L472 , L461;
end;
definition
let R20 being ZF-formula;
assume L475: (R20 is  universal or R20 is  existential);
func bound_in R20 -> Variable means
:L476: (ex R21 being ZF-formula st ( All (it , R21) ) = R20) if R20 is  universal otherwise (ex R21 being ZF-formula st ( Ex (it , R21) ) = R20);
existence by L475 , L119 , L130;
uniqueness by L35 , L410;
consistency;
func the_scope_of R20 -> ZF-formula means
:L477: (ex R12 being Variable st ( All (R12 , it) ) = R20) if R20 is  universal otherwise (ex R12 being Variable st ( Ex (R12 , it) ) = R20);
existence
proof
thus L478: (R20 is  universal implies (ex R21 being ZF-formula st (ex R12 being Variable st ( All (R12 , R21) ) = R20)))
proof
assume L479: R20 is  universal;
consider R12 being Variable, R18 being ZF-formula such that L480: ( All (R12 , R18) ) = R20 by L479 , L119;
take R18;
thus L481: thesis by L480;
end;

thus L482: ((not R20 is  universal) implies (ex R21 being ZF-formula st (ex R12 being Variable st ( Ex (R12 , R21) ) = R20)))
proof
assume L483: (not R20 is  universal);
consider R12 being Variable, R18 being ZF-formula such that L484: ( Ex (R12 , R18) ) = R20 by L483 , L475 , L130;
take R18;
thus L485: thesis by L484;
end;

end;
uniqueness by L35 , L410;
consistency;
end;
theorem
L484: (for R12 being Variable holds (for R20 being ZF-formula holds (for R21 being ZF-formula holds (R20 is  universal implies ((R12 = ( bound_in R20 ) iff (ex R21 being ZF-formula st ( All (R12 , R21) ) = R20)) & (R21 = ( the_scope_of R20 ) iff (ex R12 being Variable st ( All (R12 , R21) ) = R20))))))) by L476 , L477;
theorem
L485: (for R12 being Variable holds (for R20 being ZF-formula holds (for R21 being ZF-formula holds (R20 is  existential implies ((R12 = ( bound_in R20 ) iff (ex R21 being ZF-formula st ( Ex (R12 , R21) ) = R20)) & (R21 = ( the_scope_of R20 ) iff (ex R12 being Variable st ( Ex (R12 , R21) ) = R20)))))))
proof
let R12 being Variable;
let R20 being ZF-formula;
let R21 being ZF-formula;
assume L486: R20 is  existential;
L487: (ex R13 being Variable st (ex R16 being ZF-formula st R20 = ( Ex (R13 , R16) ))) by L486 , L130;
L488: ( R20 . 1 ) = 2 by L487 , FINSEQ_1:41;
L489: (not R20 is  universal) by L488 , L277;
thus L490: thesis by L489 , L486 , L476 , L477;
end;
theorem
L491: (for R20 being ZF-formula holds (R20 is  universal implies R20 = ( All (( bound_in R20 ) , ( the_scope_of R20 )) )))
proof
let R20 being ZF-formula;
assume L492: R20 is  universal;
L493: (ex R12 being Variable st R20 = ( All (R12 , ( the_scope_of R20 )) )) by L492 , L477;
thus L494: thesis by L493 , L492 , L476;
end;
theorem
L495: (for R20 being ZF-formula holds (R20 is  existential implies R20 = ( Ex (( bound_in R20 ) , ( the_scope_of R20 )) )))
proof
let R20 being ZF-formula;
assume L496: R20 is  existential;
L497: (ex R12 being Variable st R20 = ( Ex (R12 , ( the_scope_of R20 )) )) by L496 , L485;
thus L498: thesis by L497 , L496 , L485;
end;
definition
let R20 being ZF-formula;
assume L499: R20 is  conditional;
func the_antecedent_of R20 -> ZF-formula means
:L500: (ex R21 being ZF-formula st R20 = ( it => R21 ));
existence by L499 , L128;
uniqueness by L400;
func the_consequent_of R20 -> ZF-formula means
:L501: (ex R21 being ZF-formula st R20 = ( R21 => it ));
existence
proof
consider R16 being ZF-formula, R18 being ZF-formula such that L502: R20 = ( R16 => R18 ) by L499 , L128;
take R18;
take R16;
thus L503: thesis by L502;
end;
uniqueness by L400;
end;
theorem
L505: (for R16 being ZF-formula holds (for R20 being ZF-formula holds (R20 is  conditional implies ((R16 = ( the_antecedent_of R20 ) iff (ex R18 being ZF-formula st R20 = ( R16 => R18 ))) & (R16 = ( the_consequent_of R20 ) iff (ex R18 being ZF-formula st R20 = ( R18 => R16 ))))))) by L500 , L501;
theorem
L506: (for R20 being ZF-formula holds (R20 is  conditional implies R20 = ( ( the_antecedent_of R20 ) => ( the_consequent_of R20 ) )))
proof
let R20 being ZF-formula;
assume L507: R20 is  conditional;
L508: (ex R16 being ZF-formula st R20 = ( ( the_antecedent_of R20 ) => R16 )) by L507 , L500;
thus L509: thesis by L508 , L507 , L501;
end;
definition
let R20 being ZF-formula;
assume L510: R20 is  biconditional;
func the_left_side_of R20 -> ZF-formula means
:L511: (ex R21 being ZF-formula st R20 = ( it <=> R21 ));
existence by L510 , L129;
uniqueness by L406;
func the_right_side_of R20 -> ZF-formula means
:L512: (ex R21 being ZF-formula st R20 = ( R21 <=> it ));
existence
proof
consider R16 being ZF-formula, R18 being ZF-formula such that L513: R20 = ( R16 <=> R18 ) by L510 , L129;
take R18;
take R16;
thus L514: thesis by L513;
end;
uniqueness by L406;
end;
theorem
L516: (for R16 being ZF-formula holds (for R20 being ZF-formula holds (R20 is  biconditional implies ((R16 = ( the_left_side_of R20 ) iff (ex R18 being ZF-formula st R20 = ( R16 <=> R18 ))) & (R16 = ( the_right_side_of R20 ) iff (ex R18 being ZF-formula st R20 = ( R18 <=> R16 ))))))) by L511 , L512;
theorem
L517: (for R20 being ZF-formula holds (R20 is  biconditional implies R20 = ( ( the_left_side_of R20 ) <=> ( the_right_side_of R20 ) )))
proof
let R20 being ZF-formula;
assume L518: R20 is  biconditional;
L519: (ex R16 being ZF-formula st R20 = ( ( the_left_side_of R20 ) <=> R16 )) by L518 , L511;
thus L520: thesis by L519 , L518 , L512;
end;
definition
let R20 being ZF-formula;
let R16 being ZF-formula;
pred R20 is_immediate_constituent_of R16
means
:L521: (R16 = ( 'not' R20 ) or (ex R21 being ZF-formula st (R16 = ( R20 '&' R21 ) or R16 = ( R21 '&' R20 ))) or (ex R12 being Variable st R16 = ( All (R12 , R20) )))
;end;
theorem
L523: (for R12 being Variable holds (for R13 being Variable holds (for R20 being ZF-formula holds (not R20 is_immediate_constituent_of ( R12 '=' R13 )))))
proof
let R12 being Variable;
let R13 being Variable;
let R20 being ZF-formula;
assume L524: R20 is_immediate_constituent_of ( R12 '=' R13 );
L525: (( R12 '=' R13 ) = ( 'not' R20 ) or (ex R21 being ZF-formula st (( R12 '=' R13 ) = ( R20 '&' R21 ) or ( R12 '=' R13 ) = ( R21 '&' R20 ))) or (ex R14 being Variable st ( R12 '=' R13 ) = ( All (R14 , R20) ))) by L524 , L521;
L526: ( ( R12 '=' R13 ) . 1 ) = ( 0 ) by L251;
thus L527: contradiction by L526 , L525 , L254 , L256 , FINSEQ_1:41;
end;
theorem
L528: (for R12 being Variable holds (for R13 being Variable holds (for R20 being ZF-formula holds (not R20 is_immediate_constituent_of ( R12 'in' R13 )))))
proof
let R12 being Variable;
let R13 being Variable;
let R20 being ZF-formula;
assume L529: R20 is_immediate_constituent_of ( R12 'in' R13 );
L530: (( R12 'in' R13 ) = ( 'not' R20 ) or (ex R21 being ZF-formula st (( R12 'in' R13 ) = ( R20 '&' R21 ) or ( R12 'in' R13 ) = ( R21 '&' R20 ))) or (ex R14 being Variable st ( R12 'in' R13 ) = ( All (R14 , R20) ))) by L529 , L521;
L531: ( ( R12 'in' R13 ) . 1 ) = 1 by L251;
thus L532: contradiction by L531 , L530 , L254 , L256 , FINSEQ_1:41;
end;
theorem
L533: (for R16 being ZF-formula holds (for R20 being ZF-formula holds (R16 is_immediate_constituent_of ( 'not' R20 ) iff R16 = R20)))
proof
let R16 being ZF-formula;
let R20 being ZF-formula;
thus L534: (R16 is_immediate_constituent_of ( 'not' R20 ) implies R16 = R20)
proof
L535:
now
given R12 being Variable such that
L536: ( 'not' R20 ) = ( All (R12 , R16) );

L537: ( ( 'not' R20 ) . 1 ) = 2 by FINSEQ_1:41;
thus L538: contradiction by L537 , L536 , L256;
end;
L539:
now
given R21 being ZF-formula such that
L540: (( 'not' R20 ) = ( R16 '&' R21 ) or ( 'not' R20 ) = ( R21 '&' R16 ));

L541: ( ( 'not' R20 ) . 1 ) = 2 by FINSEQ_1:41;
thus L542: contradiction by L541 , L540 , L254;
end;
assume L543: R16 is_immediate_constituent_of ( 'not' R20 );
L544: (( 'not' R20 ) = ( 'not' R16 ) or (ex R21 being ZF-formula st (( 'not' R20 ) = ( R16 '&' R21 ) or ( 'not' R20 ) = ( R21 '&' R16 ))) or (ex R12 being Variable st ( 'not' R20 ) = ( All (R12 , R16) ))) by L543 , L521;
thus L545: thesis by L544 , L539 , L535 , FINSEQ_1:33;
end;

thus L546: thesis by L521;
end;
theorem
L547: (for R16 being ZF-formula holds (for R18 being ZF-formula holds (for R20 being ZF-formula holds (R16 is_immediate_constituent_of ( R18 '&' R20 ) iff (R16 = R18 or R16 = R20)))))
proof
let R16 being ZF-formula;
let R18 being ZF-formula;
let R20 being ZF-formula;
thus L548: (R16 is_immediate_constituent_of ( R18 '&' R20 ) implies (R16 = R18 or R16 = R20))
proof
L549:
now
given R12 being Variable such that
L550: ( R18 '&' R20 ) = ( All (R12 , R16) );

L551: ( ( R18 '&' R20 ) . 1 ) = 3 by L254;
thus L552: contradiction by L551 , L550 , L256;
end;
L553:
now
assume L554: ( R18 '&' R20 ) = ( 'not' R16 );
L555: ( ( R18 '&' R20 ) . 1 ) = 3 by L254;
thus L556: contradiction by L555 , L554 , FINSEQ_1:41;
end;
assume L557: R16 is_immediate_constituent_of ( R18 '&' R20 );
L558: (ex R21 being ZF-formula st (( R18 '&' R20 ) = ( R16 '&' R21 ) or ( R18 '&' R20 ) = ( R21 '&' R16 ))) by L557 , L553 , L549 , L521;
thus L559: thesis by L558 , L386;
end;

assume L560: (R16 = R18 or R16 = R20);
thus L561: thesis by L560 , L521;
end;
theorem
L562: (for R12 being Variable holds (for R16 being ZF-formula holds (for R20 being ZF-formula holds (R16 is_immediate_constituent_of ( All (R12 , R20) ) iff R16 = R20))))
proof
let R12 being Variable;
let R16 being ZF-formula;
let R20 being ZF-formula;
thus L563: (R16 is_immediate_constituent_of ( All (R12 , R20) ) implies R16 = R20)
proof
L564:
now
given R18 being ZF-formula such that
L565: (( All (R12 , R20) ) = ( R16 '&' R18 ) or ( All (R12 , R20) ) = ( R18 '&' R16 ));

L566: (( ( R16 '&' R18 ) . 1 ) = 3 & ( ( R18 '&' R16 ) . 1 ) = 3) by L254;
thus L567: contradiction by L566 , L565 , L256;
end;
L568:
now
assume L569: ( All (R12 , R20) ) = ( 'not' R16 );
L570: ( ( All (R12 , R20) ) . 1 ) = 4 by L256;
thus L571: contradiction by L570 , L569 , FINSEQ_1:41;
end;
assume L572: R16 is_immediate_constituent_of ( All (R12 , R20) );
L573: (ex R13 being Variable st ( All (R12 , R20) ) = ( All (R13 , R16) )) by L572 , L568 , L564 , L521;
thus L574: thesis by L573 , L35;
end;

thus L575: thesis by L521;
end;
theorem
L576: (for R16 being ZF-formula holds (for R20 being ZF-formula holds (R20 is  atomic implies (not R16 is_immediate_constituent_of R20))))
proof
let R16 being ZF-formula;
let R20 being ZF-formula;
L577:
now
assume L578: R20 is  being_equality;
L579: R20 = ( ( Var1 R20 ) '=' ( Var2 R20 ) ) by L578 , L432;
thus L580: thesis by L579 , L523;
end;
L581:
now
assume L582: R20 is  being_membership;
L583: R20 = ( ( Var1 R20 ) 'in' ( Var2 R20 ) ) by L582 , L440;
thus L584: thesis by L583 , L528;
end;
assume L585: R20 is  atomic;
thus L586: thesis by L585 , L577 , L581 , L122;
end;
theorem
L587: (for R16 being ZF-formula holds (for R20 being ZF-formula holds (R20 is  negative implies (R16 is_immediate_constituent_of R20 iff R16 = ( the_argument_of R20 )))))
proof
let R16 being ZF-formula;
let R20 being ZF-formula;
assume L588: R20 is  negative;
L589: R20 = ( 'not' ( the_argument_of R20 ) ) by L588 , L449;
thus L590: thesis by L589 , L533;
end;
theorem
L591: (for R16 being ZF-formula holds (for R20 being ZF-formula holds (R20 is  conjunctive implies (R16 is_immediate_constituent_of R20 iff (R16 = ( the_left_argument_of R20 ) or R16 = ( the_right_argument_of R20 ))))))
proof
let R16 being ZF-formula;
let R20 being ZF-formula;
assume L592: R20 is  conjunctive;
L593: R20 = ( ( the_left_argument_of R20 ) '&' ( the_right_argument_of R20 ) ) by L592 , L467;
thus L594: thesis by L593 , L547;
end;
theorem
L595: (for R16 being ZF-formula holds (for R20 being ZF-formula holds (R20 is  universal implies (R16 is_immediate_constituent_of R20 iff R16 = ( the_scope_of R20 )))))
proof
let R16 being ZF-formula;
let R20 being ZF-formula;
assume L596: R20 is  universal;
L597: R20 = ( All (( bound_in R20 ) , ( the_scope_of R20 )) ) by L596 , L491;
thus L598: thesis by L597 , L562;
end;
definition
let R20 being ZF-formula;
let R16 being ZF-formula;
pred R20 is_subformula_of R16
means
:L599: (ex R3 being (Element of ( NAT )) st (ex R24 being FinSequence st (1 <= R3 & ( len R24 ) = R3 & ( R24 . 1 ) = R20 & ( R24 . R3 ) = R16 & (for R1 being (Element of ( NAT )) holds ((1 <= R1 & R1 < R3) implies (ex R21 being ZF-formula st (ex R17 being ZF-formula st (( R24 . R1 ) = R21 & ( R24 . ( R1 + 1 ) ) = R17 & R21 is_immediate_constituent_of R17))))))))
;end;
theorem
L601: (for R20 being ZF-formula holds R20 is_subformula_of R20)
proof
let R20 being ZF-formula;
take 1;
take <* R20 *>;
thus L602: 1 <= 1;
thus L603: ( len <* R20 *> ) = 1 by FINSEQ_1:40;
thus L604: (( <* R20 *> . 1 ) = R20 & ( <* R20 *> . 1 ) = R20) by FINSEQ_1:def 8;
thus L605: thesis;
end;
definition
let R20 being ZF-formula;
let R16 being ZF-formula;
pred R20 is_proper_subformula_of R16
means
:L606: (R20 is_subformula_of R16 & R20 <> R16)
;end;
theorem
L608: (for R16 being ZF-formula holds (for R20 being ZF-formula holds (R20 is_immediate_constituent_of R16 implies ( len R20 ) < ( len R16 ))))
proof
let R16 being ZF-formula;
let R20 being ZF-formula;
L609:
now
assume L610: R16 = ( 'not' R20 );
L611: ( len R16 ) = ( ( len <* 2 *> ) + ( len R20 ) ) by L610 , FINSEQ_1:22
.= ( ( len R20 ) + 1 ) by FINSEQ_1:40;
thus L612: thesis by L611 , NAT_1:13;
end;
L613:
now
given R21 being ZF-formula such that
L614: (R16 = ( R20 '&' R21 ) or R16 = ( R21 '&' R20 ));

L615: ( len ( ( <* 3 *> ^ R21 ) ^ R20 ) ) = ( len ( <* 3 *> ^ ( R21 ^ R20 ) ) ) by FINSEQ_1:32
.= ( ( len <* 3 *> ) + ( len ( R21 ^ R20 ) ) ) by FINSEQ_1:22
.= ( 1 + ( len ( R21 ^ R20 ) ) ) by FINSEQ_1:40
.= ( 1 + ( ( len R20 ) + ( len R21 ) ) ) by FINSEQ_1:22
.= ( ( 1 + ( len R20 ) ) + ( len R21 ) );
L616: ( len ( ( <* 3 *> ^ R20 ) ^ R21 ) ) = ( ( len ( <* 3 *> ^ R20 ) ) + ( len R21 ) ) by FINSEQ_1:22
.= ( ( ( len <* 3 *> ) + ( len R20 ) ) + ( len R21 ) ) by FINSEQ_1:22
.= ( ( 1 + ( len R20 ) ) + ( len R21 ) ) by FINSEQ_1:40;
L617: ( 1 + ( len R20 ) ) <= ( len R16 ) by L616 , L614 , L615 , NAT_1:11;
thus L618: thesis by L617 , NAT_1:13;
end;
L619:
now
given R12 being Variable such that
L620: R16 = ( All (R12 , R20) );

L621: ( len R16 ) = ( ( len ( <* 4 *> ^ <* R12 *> ) ) + ( len R20 ) ) by L620 , FINSEQ_1:22
.= ( ( ( len <* 4 *> ) + ( len <* R12 *> ) ) + ( len R20 ) ) by FINSEQ_1:22
.= ( ( 1 + ( len <* R12 *> ) ) + ( len R20 ) ) by FINSEQ_1:40
.= ( ( 1 + 1 ) + ( len R20 ) ) by FINSEQ_1:40
.= ( ( 1 + ( len R20 ) ) + 1 );
L622: ( 1 + ( len R20 ) ) <= ( len R16 ) by L621 , NAT_1:11;
thus L623: thesis by L622 , NAT_1:13;
end;
assume L624: R20 is_immediate_constituent_of R16;
thus L625: thesis by L624 , L609 , L613 , L619 , L521;
end;
theorem
L626: (for R16 being ZF-formula holds (for R20 being ZF-formula holds (R20 is_immediate_constituent_of R16 implies R20 is_proper_subformula_of R16)))
proof
let R16 being ZF-formula;
let R20 being ZF-formula;
assume L627: R20 is_immediate_constituent_of R16;
thus L628: R20 is_subformula_of R16
proof
take D18 = 2;
take D19 = <* R20 , R16 *>;
thus L629: 1 <= D18;
thus L630: ( len D19 ) = D18 by FINSEQ_1:44;
thus L631: (( D19 . 1 ) = R20 & ( D19 . D18 ) = R16) by FINSEQ_1:44;
let R1 being (Element of ( NAT ));
assume that
L632: 1 <= R1
and
L633: R1 < D18;
take R20;
take R16;
L634: R1 < ( 1 + 1 ) by L633;
L635: R1 <= 1 by L634 , NAT_1:13;
L636: R1 = 1 by L635 , L632 , XXREAL_0:1;
thus L637: (( D19 . R1 ) = R20 & ( D19 . ( R1 + 1 ) ) = R16) by L636 , FINSEQ_1:44;
thus L638: thesis by L627;
end;

assume L639: R20 = R16;
L640: ( len R20 ) = ( len R16 ) by L639;
thus L641: contradiction by L640 , L627 , L608;
end;
theorem
L642: (for R16 being ZF-formula holds (for R20 being ZF-formula holds (R20 is_proper_subformula_of R16 implies ( len R20 ) < ( len R16 ))))
proof
let R16 being ZF-formula;
let R20 being ZF-formula;
assume L643: R20 is_subformula_of R16;
consider R3 being (Element of ( NAT )), R24 being FinSequence such that L644: 1 <= R3 and L645: ( len R24 ) = R3 and L646: ( R24 . 1 ) = R20 and L647: ( R24 . R3 ) = R16 and L648: (for R1 being (Element of ( NAT )) holds ((1 <= R1 & R1 < R3) implies (ex R21 being ZF-formula st (ex R17 being ZF-formula st (( R24 . R1 ) = R21 & ( R24 . ( R1 + 1 ) ) = R17 & R21 is_immediate_constituent_of R17))))) by L643 , L599;
defpred S4[ (Element of ( NAT )) ] means ((1 <= $1 & $1 < R3) implies (for R21 being ZF-formula holds (( R24 . ( $1 + 1 ) ) = R21 implies ( len R20 ) < ( len R21 ))));
L649: (for R1 being (Element of ( NAT )) holds (S4[ R1 ] implies S4[ ( R1 + 1 ) ]))
proof
let R1 being (Element of ( NAT ));
assume that
L650: ((1 <= R1 & R1 < R3) implies (for R21 being ZF-formula holds (( R24 . ( R1 + 1 ) ) = R21 implies ( len R20 ) < ( len R21 ))))
and
L651: 1 <= ( R1 + 1 )
and
L652: ( R1 + 1 ) < R3;
consider R17 being ZF-formula, R18 being ZF-formula such that L653: ( R24 . ( R1 + 1 ) ) = R17 and L654: (( R24 . ( ( R1 + 1 ) + 1 ) ) = R18 & R17 is_immediate_constituent_of R18) by L648 , L651 , L652;
let R21 being ZF-formula;
assume that
L655: ( R24 . ( ( R1 + 1 ) + 1 ) ) = R21;
L656:
now
given C3 being Nat such that
L657: R1 = ( C3 + 1 );

L658: ( len R20 ) < ( len R17 ) by L650 , L652 , L653 , L657 , NAT_1:11 , NAT_1:13;
thus L659: thesis by L658 , L655 , L654 , L608 , XXREAL_0:2;
end;
L660: (R1 = ( 0 ) implies ( len R20 ) < ( len R21 )) by L646 , L655 , L653 , L654 , L608;
thus L661: thesis by L660 , L656 , NAT_1:6;
end;
assume L662: R20 <> R16;
L663: 1 < R3 by L662 , L644 , L646 , L647 , XXREAL_0:1;
L664: ( 1 + 1 ) <= R3 by L663 , NAT_1:13;
consider C4 being Nat such that L665: R3 = ( 2 + C4 ) by L664 , NAT_1:10;
L666: S4[ ( 0 ) ];
L667: (for R1 being (Element of ( NAT )) holds S4[ R1 ]) from NAT_1:sch 1(L666 , L649);
reconsider D20 = C4 as (Element of ( NAT )) by ORDINAL1:def 12;
L668: ( ( 1 + 1 ) + D20 ) = ( ( 1 + D20 ) + 1 );
L669: ( 1 + D20 ) < R3 by L668 , L665 , NAT_1:13;
thus L670: thesis by L669 , L647 , L667 , L665 , L668 , NAT_1:11;
end;
theorem
L671: (for R16 being ZF-formula holds (for R20 being ZF-formula holds (R20 is_proper_subformula_of R16 implies (ex R18 being ZF-formula st R18 is_immediate_constituent_of R16))))
proof
let R16 being ZF-formula;
let R20 being ZF-formula;
assume L672: R20 is_subformula_of R16;
consider R3 being (Element of ( NAT )), R24 being FinSequence such that L673: 1 <= R3 and L674: ( len R24 ) = R3 and L675: ( R24 . 1 ) = R20 and L676: ( R24 . R3 ) = R16 and L677: (for R1 being (Element of ( NAT )) holds ((1 <= R1 & R1 < R3) implies (ex R21 being ZF-formula st (ex R17 being ZF-formula st (( R24 . R1 ) = R21 & ( R24 . ( R1 + 1 ) ) = R17 & R21 is_immediate_constituent_of R17))))) by L672 , L599;
assume L678: R20 <> R16;
L679: 1 < R3 by L678 , L673 , L675 , L676 , XXREAL_0:1;
L680: ( 1 + 1 ) <= R3 by L679 , NAT_1:13;
consider C5 being Nat such that L681: R3 = ( 2 + C5 ) by L680 , NAT_1:10;
reconsider D21 = C5 as (Element of ( NAT )) by ORDINAL1:def 12;
L682: ( ( 1 + 1 ) + D21 ) = ( ( 1 + D21 ) + 1 );
L683: ( 1 + D21 ) < R3 by L682 , L681 , NAT_1:13;
consider R21 being ZF-formula, R17 being ZF-formula such that L684: ( R24 . ( 1 + D21 ) ) = R21 and L685: (( R24 . ( ( 1 + D21 ) + 1 ) ) = R17 & R21 is_immediate_constituent_of R17) by L683 , L677 , NAT_1:11;
take R21;
thus L686: thesis by L676 , L681 , L685;
end;
theorem
L687: (for R16 being ZF-formula holds (for R18 being ZF-formula holds (for R20 being ZF-formula holds ((R16 is_proper_subformula_of R18 & R18 is_proper_subformula_of R20) implies R16 is_proper_subformula_of R20))))
proof
let R16 being ZF-formula;
let R18 being ZF-formula;
let R20 being ZF-formula;
assume that
L688: R16 is_subformula_of R18
and
L689: R16 <> R18
and
L690: R18 is_subformula_of R20
and
L691: R18 <> R20;
consider R2 being (Element of ( NAT )), R25 being FinSequence such that L692: 1 <= R2 and L693: ( len R25 ) = R2 and L694: ( R25 . 1 ) = R18 and L695: ( R25 . R2 ) = R20 and L696: (for R1 being (Element of ( NAT )) holds ((1 <= R1 & R1 < R2) implies (ex R21 being ZF-formula st (ex R17 being ZF-formula st (( R25 . R1 ) = R21 & ( R25 . ( R1 + 1 ) ) = R17 & R21 is_immediate_constituent_of R17))))) by L690 , L599;
consider R3 being (Element of ( NAT )), R24 being FinSequence such that L697: 1 <= R3 and L698: ( len R24 ) = R3 and L699: ( R24 . 1 ) = R16 and L700: ( R24 . R3 ) = R18 and L701: (for R1 being (Element of ( NAT )) holds ((1 <= R1 & R1 < R3) implies (ex R21 being ZF-formula st (ex R17 being ZF-formula st (( R24 . R1 ) = R21 & ( R24 . ( R1 + 1 ) ) = R17 & R21 is_immediate_constituent_of R17))))) by L688 , L599;
L702: 1 < R3 by L689 , L697 , L699 , L700 , XXREAL_0:1;
L703: ( 1 + 1 ) <= R3 by L702 , NAT_1:13;
consider C6 being Nat such that L704: R3 = ( 2 + C6 ) by L703 , NAT_1:10;
reconsider D22 = C6 as (Element of ( NAT )) by ORDINAL1:def 12;
reconsider D23 = ( R24 | ( Seg ( 1 + D22 ) ) ) as FinSequence by FINSEQ_1:15;
thus L705: R16 is_subformula_of R20
proof
take D24 = ( ( 1 + D22 ) + R2 );
take D25 = ( D23 ^ R25 );
L706: ( ( ( 1 + D22 ) + R2 ) - ( 1 + D22 ) ) = R2;
L707: R2 <= ( R2 + ( 1 + D22 ) ) by NAT_1:11;
thus L708: 1 <= D24 by L707 , L692 , XXREAL_0:2;
L709: ( ( 1 + 1 ) + D22 ) = ( ( 1 + D22 ) + 1 );
L710: ( 1 + D22 ) <= R3 by L709 , L704 , NAT_1:11;
L711: ( len D23 ) = ( 1 + D22 ) by L710 , L698 , FINSEQ_1:17;
thus L712: ( len D25 ) = D24 by L711 , L693 , FINSEQ_1:22;
L713:
now
let R26 being (Element of ( NAT ));
assume L714: (1 <= R26 & R26 <= ( 1 + D22 ));
L715: R26 in ( Seg ( 1 + D22 ) ) by L714 , FINSEQ_1:1;
L716: R26 in ( dom D23 ) by L715 , L698 , L710 , FINSEQ_1:17;
L717: ( D25 . R26 ) = ( D23 . R26 ) by L716 , FINSEQ_1:def 7;
thus L718: ( D25 . R26 ) = ( R24 . R26 ) by L717 , L715 , FUNCT_1:49;
end;
L719: 1 <= ( 1 + D22 ) by NAT_1:11;
thus L720: ( D25 . 1 ) = R16 by L719 , L699 , L713;
L721: ( ( len D23 ) + 1 ) <= ( ( len D23 ) + R2 ) by L692 , XREAL_1:7;
L722: ( len D23 ) < D24 by L721 , L711 , NAT_1:13;
L723: ( D25 . D24 ) = ( R25 . ( D24 - ( len D23 ) ) ) by L722 , L712 , FINSEQ_1:24;
thus L724: ( D25 . D24 ) = R20 by L723 , L698 , L695 , L710 , L706 , FINSEQ_1:17;
let R26 being (Element of ( NAT ));
assume that
L725: 1 <= R26
and
L726: R26 < D24;
L727: ( R26 + ( 0 ) ) <= ( R26 + 1 ) by XREAL_1:7;
L728: 1 <= ( R26 + 1 ) by L727 , L725 , XXREAL_0:2;
L729:
now
assume L730: R26 < ( 1 + D22 );
L731: ( R26 + 1 ) <= ( 1 + D22 ) by L730 , NAT_1:13;
L732: ( R26 + 1 ) <= R3 by L731 , L710 , XXREAL_0:2;
L733: R26 < R3 by L732 , NAT_1:13;
consider R17 being ZF-formula, R19 being ZF-formula such that L734: (( R24 . R26 ) = R17 & ( R24 . ( R26 + 1 ) ) = R19 & R17 is_immediate_constituent_of R19) by L733 , L701 , L725;
take D26 = R17;
take D27 = R19;
thus L735: (( D25 . R26 ) = D26 & ( D25 . ( R26 + 1 ) ) = D27 & D26 is_immediate_constituent_of D27) by L713 , L725 , L728 , L730 , L731 , L734;
end;
L736:
now
L737: ( R26 + 1 ) <= D24 by L726 , NAT_1:13;
assume L738: ( 1 + D22 ) < R26;
L739: ( 1 + D22 ) < ( R26 + 1 ) by L738 , NAT_1:13;
L740: ( ( 1 + D22 ) + 1 ) <= R26 by L738 , NAT_1:13;
consider C7 being Nat such that L741: R26 = ( ( ( 1 + D22 ) + 1 ) + C7 ) by L740 , NAT_1:10;
reconsider D28 = C7 as (Element of ( NAT )) by ORDINAL1:def 12;
L742: ( R26 - ( 1 + D22 ) ) < ( D24 - ( 1 + D22 ) ) by L726 , XREAL_1:9;
consider R17 being ZF-formula, R19 being ZF-formula such that L743: (( R25 . ( 1 + D28 ) ) = R17 & ( R25 . ( ( 1 + D28 ) + 1 ) ) = R19 & R17 is_immediate_constituent_of R19) by L742 , L696 , L741 , NAT_1:11;
take D29 = R17;
take D30 = R19;
L744: ( ( ( 1 + D28 ) + ( 1 + D22 ) ) - ( 1 + D22 ) ) = ( ( ( 1 + D28 ) + ( 1 + D22 ) ) + ( - ( 1 + D22 ) ) );
L745: ( ( R26 + 1 ) - ( len D23 ) ) = ( 1 + ( R26 + ( - ( len D23 ) ) ) )
.= ( ( 1 + D28 ) + 1 ) by L698 , L710 , L741 , L744 , FINSEQ_1:17;
thus L746: (( D25 . R26 ) = D29 & ( D25 . ( R26 + 1 ) ) = D30 & D29 is_immediate_constituent_of D30) by L745 , L711 , L712 , L726 , L738 , L739 , L737 , L744 , L743 , FINSEQ_1:24;
end;
L747:
now
L748: (( R26 + 1 ) <= D24 & ( ( R26 + 1 ) - R26 ) = ( ( R26 + 1 ) + ( - R26 ) )) by L726 , NAT_1:13;
assume L749: R26 = ( 1 + D22 );
L750: R26 < ( ( 1 + D22 ) + 1 ) by L749 , NAT_1:13;
consider R17 being ZF-formula, R19 being ZF-formula such that L751: (( R24 . R26 ) = R17 & ( R24 . ( R26 + 1 ) ) = R19 & R17 is_immediate_constituent_of R19) by L750 , L701 , L704 , L725;
take D31 = R17;
take D32 = R19;
L752: ( 1 + D22 ) < ( R26 + 1 ) by L749 , NAT_1:13;
thus L753: (( D25 . R26 ) = D31 & ( D25 . ( R26 + 1 ) ) = D32 & D31 is_immediate_constituent_of D32) by L752 , L700 , L694 , L704 , L711 , L712 , L713 , L725 , L749 , L748 , L751 , FINSEQ_1:24;
end;
thus L754: thesis by L747 , L729 , L736 , XXREAL_0:1;
end;

assume L755: R16 = R20;
L756: R16 is_proper_subformula_of R18 by L688 , L689 , L606;
L757: ( len R16 ) < ( len R18 ) by L756 , L642;
L758: R18 is_proper_subformula_of R20 by L690 , L691 , L606;
thus L759: contradiction by L758 , L755 , L757 , L642;
end;
theorem
L760: (for R16 being ZF-formula holds (for R18 being ZF-formula holds (for R20 being ZF-formula holds ((R16 is_subformula_of R18 & R18 is_subformula_of R20) implies R16 is_subformula_of R20))))
proof
let R16 being ZF-formula;
let R18 being ZF-formula;
let R20 being ZF-formula;
assume that
L761: R16 is_subformula_of R18
and
L762: R18 is_subformula_of R20;
L763:
now
assume L764: R16 <> R18;
L765: R16 is_proper_subformula_of R18 by L764 , L761 , L606;
L766:
now
assume L767: R18 <> R20;
L768: R18 is_proper_subformula_of R20 by L767 , L762 , L606;
L769: R16 is_proper_subformula_of R20 by L768 , L765 , L687;
thus L770: thesis by L769 , L606;
end;
thus L771: thesis by L766 , L761;
end;
thus L772: thesis by L763 , L762;
end;
theorem
L773: (for R18 being ZF-formula holds (for R20 being ZF-formula holds ((R18 is_subformula_of R20 & R20 is_subformula_of R18) implies R18 = R20)))
proof
let R18 being ZF-formula;
let R20 being ZF-formula;
assume that
L774: R18 is_subformula_of R20
and
L775: R20 is_subformula_of R18;
assume L776: R18 <> R20;
L777: R18 is_proper_subformula_of R20 by L776 , L774 , L606;
L778: ( len R18 ) < ( len R20 ) by L777 , L642;
L779: R20 is_proper_subformula_of R18 by L775 , L776 , L606;
thus L780: contradiction by L779 , L778 , L642;
end;
theorem
L781: (for R12 being Variable holds (for R13 being Variable holds (for R16 being ZF-formula holds (not R16 is_proper_subformula_of ( R12 '=' R13 )))))
proof
let R12 being Variable;
let R13 being Variable;
let R16 being ZF-formula;
assume L782: R16 is_proper_subformula_of ( R12 '=' R13 );
L783: (ex R18 being ZF-formula st R18 is_immediate_constituent_of ( R12 '=' R13 )) by L782 , L671;
thus L784: contradiction by L783 , L523;
end;
theorem
L785: (for R12 being Variable holds (for R13 being Variable holds (for R16 being ZF-formula holds (not R16 is_proper_subformula_of ( R12 'in' R13 )))))
proof
let R12 being Variable;
let R13 being Variable;
let R16 being ZF-formula;
assume L786: R16 is_proper_subformula_of ( R12 'in' R13 );
L787: (ex R18 being ZF-formula st R18 is_immediate_constituent_of ( R12 'in' R13 )) by L786 , L671;
thus L788: contradiction by L787 , L528;
end;
theorem
L789: (for R16 being ZF-formula holds (for R20 being ZF-formula holds (R16 is_proper_subformula_of ( 'not' R20 ) implies R16 is_subformula_of R20)))
proof
let R16 being ZF-formula;
let R20 being ZF-formula;
assume that
L790: R16 is_subformula_of ( 'not' R20 )
and
L791: R16 <> ( 'not' R20 );
consider R3 being (Element of ( NAT )), R24 being FinSequence such that L792: 1 <= R3 and L793: ( len R24 ) = R3 and L794: ( R24 . 1 ) = R16 and L795: ( R24 . R3 ) = ( 'not' R20 ) and L796: (for R1 being (Element of ( NAT )) holds ((1 <= R1 & R1 < R3) implies (ex R21 being ZF-formula st (ex R17 being ZF-formula st (( R24 . R1 ) = R21 & ( R24 . ( R1 + 1 ) ) = R17 & R21 is_immediate_constituent_of R17))))) by L790 , L599;
L797: 1 < R3 by L791 , L792 , L794 , L795 , XXREAL_0:1;
L798: ( 1 + 1 ) <= R3 by L797 , NAT_1:13;
consider C8 being Nat such that L799: R3 = ( 2 + C8 ) by L798 , NAT_1:10;
reconsider D33 = C8 as (Element of ( NAT )) by ORDINAL1:def 12;
reconsider D34 = ( R24 | ( Seg ( 1 + D33 ) ) ) as FinSequence by FINSEQ_1:15;
take D35 = ( 1 + D33 );
take D34;
thus L800: 1 <= D35 by NAT_1:11;
L801: ( 1 + D33 ) <= ( ( 1 + D33 ) + 1 ) by NAT_1:11;
thus L802: ( len D34 ) = D35 by L801 , L793 , L799 , FINSEQ_1:17;
L803:
now
let R26 being (Element of ( NAT ));
assume L804: (1 <= R26 & R26 <= D35);
L805: R26 in { R27 where R27 is (Element of ( NAT )) : (1 <= R27 & R27 <= ( 1 + D33 )) } by L804;
L806: R26 in ( Seg ( 1 + D33 ) ) by L805 , FINSEQ_1:def 1;
thus L807: ( D34 . R26 ) = ( R24 . R26 ) by L806 , FUNCT_1:49;
end;
thus L808: ( D34 . 1 ) = R16 by L803 , L794 , L800;
L809: D35 < ( D35 + 1 ) by NAT_1:13;
consider R17 being ZF-formula, R19 being ZF-formula such that L810: ( R24 . D35 ) = R17 and L811: (( R24 . ( D35 + 1 ) ) = R19 & R17 is_immediate_constituent_of R19) by L809 , L796 , L799 , NAT_1:11;
L812: R17 = R20 by L795 , L799 , L811 , L533;
thus L813: ( D34 . D35 ) = R20 by L812 , L800 , L803 , L810;
let R26 being (Element of ( NAT ));
assume that
L814: 1 <= R26
and
L815: R26 < D35;
L816: D35 <= ( D35 + 1 ) by NAT_1:11;
L817: R26 < R3 by L816 , L799 , L815 , XXREAL_0:2;
consider R17 being ZF-formula, R19 being ZF-formula such that L818: (( R24 . R26 ) = R17 & ( R24 . ( R26 + 1 ) ) = R19 & R17 is_immediate_constituent_of R19) by L817 , L796 , L814;
take R17;
take R19;
L819: (1 <= ( 1 + R26 ) & ( R26 + 1 ) <= D35) by L814 , L815 , NAT_1:13;
thus L820: thesis by L819 , L803 , L814 , L815 , L818;
end;
theorem
L821: (for R16 being ZF-formula holds (for R18 being ZF-formula holds (for R20 being ZF-formula holds (R16 is_proper_subformula_of ( R18 '&' R20 ) implies (R16 is_subformula_of R18 or R16 is_subformula_of R20)))))
proof
let R16 being ZF-formula;
let R18 being ZF-formula;
let R20 being ZF-formula;
assume that
L822: R16 is_subformula_of ( R18 '&' R20 )
and
L823: R16 <> ( R18 '&' R20 );
consider R3 being (Element of ( NAT )), R24 being FinSequence such that L824: 1 <= R3 and L825: ( len R24 ) = R3 and L826: ( R24 . 1 ) = R16 and L827: ( R24 . R3 ) = ( R18 '&' R20 ) and L828: (for R1 being (Element of ( NAT )) holds ((1 <= R1 & R1 < R3) implies (ex R21 being ZF-formula st (ex R17 being ZF-formula st (( R24 . R1 ) = R21 & ( R24 . ( R1 + 1 ) ) = R17 & R21 is_immediate_constituent_of R17))))) by L822 , L599;
L829: 1 < R3 by L823 , L824 , L826 , L827 , XXREAL_0:1;
L830: ( 1 + 1 ) <= R3 by L829 , NAT_1:13;
consider C9 being Nat such that L831: R3 = ( 2 + C9 ) by L830 , NAT_1:10;
reconsider D36 = C9 as (Element of ( NAT )) by ORDINAL1:def 12;
L832: ( ( 1 + 1 ) + D36 ) = ( ( 1 + D36 ) + 1 );
L833: ( 1 + D36 ) < R3 by L832 , L831 , NAT_1:13;
consider R21 being ZF-formula, R19 being ZF-formula such that L834: ( R24 . ( 1 + D36 ) ) = R21 and L835: (( R24 . ( ( 1 + D36 ) + 1 ) ) = R19 & R21 is_immediate_constituent_of R19) by L833 , L828 , NAT_1:11;
reconsider D37 = ( R24 | ( Seg ( 1 + D36 ) ) ) as FinSequence by FINSEQ_1:15;
L836: R16 is_subformula_of R21
proof
take D38 = ( 1 + D36 );
take D37;
thus L837: 1 <= D38 by NAT_1:11;
L838: ( 1 + D36 ) <= ( ( 1 + D36 ) + 1 ) by NAT_1:11;
thus L839: ( len D37 ) = D38 by L838 , L825 , L831 , FINSEQ_1:17;
L840:
now
let R26 being (Element of ( NAT ));
assume L841: (1 <= R26 & R26 <= D38);
L842: R26 in { R27 where R27 is (Element of ( NAT )) : (1 <= R27 & R27 <= ( 1 + D36 )) } by L841;
L843: R26 in ( Seg ( 1 + D36 ) ) by L842 , FINSEQ_1:def 1;
thus L844: ( D37 . R26 ) = ( R24 . R26 ) by L843 , FUNCT_1:49;
end;
thus L845: ( D37 . 1 ) = R16 by L840 , L826 , L837;
thus L846: ( D37 . D38 ) = R21 by L834 , L837 , L840;
let R26 being (Element of ( NAT ));
assume that
L847: 1 <= R26
and
L848: R26 < D38;
L849: D38 <= ( D38 + 1 ) by NAT_1:11;
L850: R26 < R3 by L849 , L831 , L848 , XXREAL_0:2;
consider R17 being ZF-formula, R19 being ZF-formula such that L851: (( R24 . R26 ) = R17 & ( R24 . ( R26 + 1 ) ) = R19 & R17 is_immediate_constituent_of R19) by L850 , L828 , L847;
take R17;
take R19;
L852: (1 <= ( 1 + R26 ) & ( R26 + 1 ) <= D38) by L847 , L848 , NAT_1:13;
thus L853: thesis by L852 , L840 , L847 , L848 , L851;
end;
thus L854: thesis by L836 , L827 , L831 , L835 , L547;
end;
theorem
L855: (for R12 being Variable holds (for R16 being ZF-formula holds (for R20 being ZF-formula holds (R16 is_proper_subformula_of ( All (R12 , R20) ) implies R16 is_subformula_of R20))))
proof
let R12 being Variable;
let R16 being ZF-formula;
let R20 being ZF-formula;
assume that
L856: R16 is_subformula_of ( All (R12 , R20) )
and
L857: R16 <> ( All (R12 , R20) );
consider R3 being (Element of ( NAT )), R24 being FinSequence such that L858: 1 <= R3 and L859: ( len R24 ) = R3 and L860: ( R24 . 1 ) = R16 and L861: ( R24 . R3 ) = ( All (R12 , R20) ) and L862: (for R1 being (Element of ( NAT )) holds ((1 <= R1 & R1 < R3) implies (ex R21 being ZF-formula st (ex R17 being ZF-formula st (( R24 . R1 ) = R21 & ( R24 . ( R1 + 1 ) ) = R17 & R21 is_immediate_constituent_of R17))))) by L856 , L599;
L863: 1 < R3 by L857 , L858 , L860 , L861 , XXREAL_0:1;
L864: ( 1 + 1 ) <= R3 by L863 , NAT_1:13;
consider C10 being Nat such that L865: R3 = ( 2 + C10 ) by L864 , NAT_1:10;
reconsider D39 = C10 as (Element of ( NAT )) by ORDINAL1:def 12;
reconsider D40 = ( R24 | ( Seg ( 1 + D39 ) ) ) as FinSequence by FINSEQ_1:15;
take D41 = ( 1 + D39 );
take D40;
thus L866: 1 <= D41 by NAT_1:11;
L867: ( 1 + D39 ) <= ( ( 1 + D39 ) + 1 ) by NAT_1:11;
thus L868: ( len D40 ) = D41 by L867 , L859 , L865 , FINSEQ_1:17;
L869:
now
let R26 being (Element of ( NAT ));
assume L870: (1 <= R26 & R26 <= D41);
L871: R26 in { R27 where R27 is (Element of ( NAT )) : (1 <= R27 & R27 <= ( 1 + D39 )) } by L870;
L872: R26 in ( Seg ( 1 + D39 ) ) by L871 , FINSEQ_1:def 1;
thus L873: ( D40 . R26 ) = ( R24 . R26 ) by L872 , FUNCT_1:49;
end;
thus L874: ( D40 . 1 ) = R16 by L869 , L860 , L866;
L875: D41 < ( D41 + 1 ) by NAT_1:13;
consider R17 being ZF-formula, R19 being ZF-formula such that L876: ( R24 . D41 ) = R17 and L877: (( R24 . ( D41 + 1 ) ) = R19 & R17 is_immediate_constituent_of R19) by L875 , L862 , L865 , NAT_1:11;
L878: R17 = R20 by L861 , L865 , L877 , L562;
thus L879: ( D40 . D41 ) = R20 by L878 , L866 , L869 , L876;
let R26 being (Element of ( NAT ));
assume that
L880: 1 <= R26
and
L881: R26 < D41;
L882: D41 <= ( D41 + 1 ) by NAT_1:11;
L883: R26 < R3 by L882 , L865 , L881 , XXREAL_0:2;
consider R17 being ZF-formula, R19 being ZF-formula such that L884: (( R24 . R26 ) = R17 & ( R24 . ( R26 + 1 ) ) = R19 & R17 is_immediate_constituent_of R19) by L883 , L862 , L880;
take R17;
take R19;
L885: (1 <= ( 1 + R26 ) & ( R26 + 1 ) <= D41) by L880 , L881 , NAT_1:13;
thus L886: thesis by L885 , L869 , L880 , L881 , L884;
end;
theorem
L887: (for R16 being ZF-formula holds (for R20 being ZF-formula holds (R20 is  atomic implies (not R16 is_proper_subformula_of R20))))
proof
let R16 being ZF-formula;
let R20 being ZF-formula;
assume L888: R20 is  atomic;
L889: (R20 is  being_equality or R20 is  being_membership) by L888 , L122;
L890: (R20 = ( ( Var1 R20 ) '=' ( Var2 R20 ) ) or R20 = ( ( Var1 R20 ) 'in' ( Var2 R20 ) )) by L889 , L432 , L440;
thus L891: thesis by L890 , L781 , L785;
end;
theorem
L892: (for R20 being ZF-formula holds (R20 is  negative implies ( the_argument_of R20 ) is_proper_subformula_of R20))
proof
let R20 being ZF-formula;
assume L893: R20 is  negative;
L894: ( the_argument_of R20 ) is_immediate_constituent_of R20 by L893 , L587;
thus L895: thesis by L894 , L626;
end;
theorem
L896: (for R20 being ZF-formula holds (R20 is  conjunctive implies (( the_left_argument_of R20 ) is_proper_subformula_of R20 & ( the_right_argument_of R20 ) is_proper_subformula_of R20)))
proof
let R20 being ZF-formula;
assume L897: R20 is  conjunctive;
L898: (( the_left_argument_of R20 ) is_immediate_constituent_of R20 & ( the_right_argument_of R20 ) is_immediate_constituent_of R20) by L897 , L591;
thus L899: thesis by L898 , L626;
end;
theorem
L900: (for R20 being ZF-formula holds (R20 is  universal implies ( the_scope_of R20 ) is_proper_subformula_of R20))
proof
let R20 being ZF-formula;
assume L901: R20 is  universal;
L902: ( the_scope_of R20 ) is_immediate_constituent_of R20 by L901 , L595;
thus L903: thesis by L902 , L626;
end;
theorem
L904: (for R12 being Variable holds (for R13 being Variable holds (for R20 being ZF-formula holds (R20 is_subformula_of ( R12 '=' R13 ) iff R20 = ( R12 '=' R13 )))))
proof
let R12 being Variable;
let R13 being Variable;
let R20 being ZF-formula;
thus L905: (R20 is_subformula_of ( R12 '=' R13 ) implies R20 = ( R12 '=' R13 ))
proof
assume L906: R20 is_subformula_of ( R12 '=' R13 );
assume L907: R20 <> ( R12 '=' R13 );
L908: R20 is_proper_subformula_of ( R12 '=' R13 ) by L907 , L906 , L606;
L909: (ex R16 being ZF-formula st R16 is_immediate_constituent_of ( R12 '=' R13 )) by L908 , L671;
thus L910: contradiction by L909 , L523;
end;

thus L911: thesis by L601;
end;
theorem
L912: (for R12 being Variable holds (for R13 being Variable holds (for R20 being ZF-formula holds (R20 is_subformula_of ( R12 'in' R13 ) iff R20 = ( R12 'in' R13 )))))
proof
let R12 being Variable;
let R13 being Variable;
let R20 being ZF-formula;
thus L913: (R20 is_subformula_of ( R12 'in' R13 ) implies R20 = ( R12 'in' R13 ))
proof
assume L914: R20 is_subformula_of ( R12 'in' R13 );
assume L915: R20 <> ( R12 'in' R13 );
L916: R20 is_proper_subformula_of ( R12 'in' R13 ) by L915 , L914 , L606;
L917: (ex R16 being ZF-formula st R16 is_immediate_constituent_of ( R12 'in' R13 )) by L916 , L671;
thus L918: contradiction by L917 , L528;
end;

assume L919: R20 = ( R12 'in' R13 );
thus L920: thesis by L919 , L601;
end;
definition
let R20 being ZF-formula;
func Subformulae R20 -> set means
:L921: (for R4 being set holds (R4 in it iff (ex R16 being ZF-formula st (R16 = R4 & R16 is_subformula_of R20))));
existence
proof
defpred S5[ set ] means (ex R16 being ZF-formula st (R16 = $1 & R16 is_subformula_of R20));
consider R5 being set such that L922: (for R4 being set holds (R4 in R5 iff (R4 in ( ( NAT ) * ) & S5[ R4 ]))) from XBOOLE_0:sch 1;
take R5;
let R4 being set;
thus L923: (R4 in R5 implies (ex R16 being ZF-formula st (R16 = R4 & R16 is_subformula_of R20))) by L922;
given R16 being ZF-formula such that
L924: (R16 = R4 & R16 is_subformula_of R20);

L925: R16 in ( ( NAT ) * ) by FINSEQ_1:def 11;
thus L926: thesis by L925 , L922 , L924;
end;
uniqueness
proof
let R5 being set;
let R6 being set;
assume that
L927: (for R4 being set holds (R4 in R5 iff (ex R16 being ZF-formula st (R16 = R4 & R16 is_subformula_of R20))))
and
L928: (for R4 being set holds (R4 in R6 iff (ex R16 being ZF-formula st (R16 = R4 & R16 is_subformula_of R20))));
L929:
now
let R4 being set;
thus L930: (R4 in R5 implies R4 in R6)
proof
assume L931: R4 in R5;
L932: (ex R16 being ZF-formula st (R16 = R4 & R16 is_subformula_of R20)) by L931 , L927;
thus L933: thesis by L932 , L928;
end;

assume L934: R4 in R6;
L935: (ex R16 being ZF-formula st (R16 = R4 & R16 is_subformula_of R20)) by L934 , L928;
thus L936: R4 in R5 by L935 , L927;
end;
thus L937: thesis by L929 , TARSKI:1;
end;
end;
theorem
L939: (for R18 being ZF-formula holds (for R20 being ZF-formula holds (R18 in ( Subformulae R20 ) implies R18 is_subformula_of R20)))
proof
let R18 being ZF-formula;
let R20 being ZF-formula;
assume L940: R18 in ( Subformulae R20 );
L941: (ex R16 being ZF-formula st (R16 = R18 & R16 is_subformula_of R20)) by L940 , L921;
thus L942: thesis by L941;
end;
theorem
L943: (for R16 being ZF-formula holds (for R20 being ZF-formula holds (R16 is_subformula_of R20 implies ( Subformulae R16 ) c= ( Subformulae R20 ))))
proof
let R16 being ZF-formula;
let R20 being ZF-formula;
assume L944: R16 is_subformula_of R20;
let R4 being set;
assume L945: R4 in ( Subformulae R16 );
consider R17 being ZF-formula such that L946: R17 = R4 and L947: R17 is_subformula_of R16 by L945 , L921;
L948: R17 is_subformula_of R20 by L944 , L947 , L760;
thus L949: thesis by L948 , L946 , L921;
end;
theorem
L950: (for R12 being Variable holds (for R13 being Variable holds ( Subformulae ( R12 '=' R13 ) ) = { ( R12 '=' R13 ) }))
proof
let R12 being Variable;
let R13 being Variable;
L951:
now
let R4 being set;
thus L952: (R4 in ( Subformulae ( R12 '=' R13 ) ) implies R4 in { ( R12 '=' R13 ) })
proof
assume L953: R4 in ( Subformulae ( R12 '=' R13 ) );
consider R16 being ZF-formula such that L954: R16 = R4 and L955: R16 is_subformula_of ( R12 '=' R13 ) by L953 , L921;
L956: R16 = ( R12 '=' R13 ) by L955 , L904;
thus L957: thesis by L956 , L954 , TARSKI:def 1;
end;

assume L958: R4 in { ( R12 '=' R13 ) };
L959: R4 = ( R12 '=' R13 ) by L958 , TARSKI:def 1;
L960: ( R12 '=' R13 ) is_subformula_of ( R12 '=' R13 ) by L601;
thus L961: R4 in ( Subformulae ( R12 '=' R13 ) ) by L960 , L959 , L921;
end;
thus L962: thesis by L951 , TARSKI:1;
end;
theorem
L963: (for R12 being Variable holds (for R13 being Variable holds ( Subformulae ( R12 'in' R13 ) ) = { ( R12 'in' R13 ) }))
proof
let R12 being Variable;
let R13 being Variable;
L964:
now
let R4 being set;
thus L965: (R4 in ( Subformulae ( R12 'in' R13 ) ) implies R4 in { ( R12 'in' R13 ) })
proof
assume L966: R4 in ( Subformulae ( R12 'in' R13 ) );
consider R16 being ZF-formula such that L967: R16 = R4 and L968: R16 is_subformula_of ( R12 'in' R13 ) by L966 , L921;
L969: R16 = ( R12 'in' R13 ) by L968 , L912;
thus L970: thesis by L969 , L967 , TARSKI:def 1;
end;

assume L971: R4 in { ( R12 'in' R13 ) };
L972: R4 = ( R12 'in' R13 ) by L971 , TARSKI:def 1;
L973: ( R12 'in' R13 ) is_subformula_of ( R12 'in' R13 ) by L601;
thus L974: R4 in ( Subformulae ( R12 'in' R13 ) ) by L973 , L972 , L921;
end;
thus L975: thesis by L964 , TARSKI:1;
end;
theorem
L976: (for R20 being ZF-formula holds ( Subformulae ( 'not' R20 ) ) = ( ( Subformulae R20 ) \/ { ( 'not' R20 ) } ))
proof
let R20 being ZF-formula;
L977:
now
let R4 being set;
L978:
now
assume L979: R4 in { ( 'not' R20 ) };
L980: R4 = ( 'not' R20 ) by L979 , TARSKI:def 1;
L981: ( 'not' R20 ) is_subformula_of ( 'not' R20 ) by L601;
thus L982: R4 in ( Subformulae ( 'not' R20 ) ) by L981 , L980 , L921;
end;
thus L983: (R4 in ( Subformulae ( 'not' R20 ) ) implies R4 in ( ( Subformulae R20 ) \/ { ( 'not' R20 ) } ))
proof
assume L984: R4 in ( Subformulae ( 'not' R20 ) );
consider R16 being ZF-formula such that L985: R16 = R4 and L986: R16 is_subformula_of ( 'not' R20 ) by L984 , L921;
L987:
now
assume L988: R16 <> ( 'not' R20 );
L989: R16 is_proper_subformula_of ( 'not' R20 ) by L988 , L986 , L606;
L990: R16 is_subformula_of R20 by L989 , L789;
thus L991: R4 in ( Subformulae R20 ) by L990 , L985 , L921;
end;
L992: (R4 in ( Subformulae R20 ) or R4 in { ( 'not' R20 ) }) by L987 , L985 , TARSKI:def 1;
thus L993: thesis by L992 , XBOOLE_0:def 3;
end;

L994:
now
assume L995: R4 in ( Subformulae R20 );
consider R16 being ZF-formula such that L996: R16 = R4 and L997: R16 is_subformula_of R20 by L995 , L921;
L998: R20 is_immediate_constituent_of ( 'not' R20 ) by L533;
L999: R20 is_proper_subformula_of ( 'not' R20 ) by L998 , L626;
L1000: R20 is_subformula_of ( 'not' R20 ) by L999 , L606;
L1001: R16 is_subformula_of ( 'not' R20 ) by L1000 , L997 , L760;
thus L1002: R4 in ( Subformulae ( 'not' R20 ) ) by L1001 , L996 , L921;
end;
assume L1003: R4 in ( ( Subformulae R20 ) \/ { ( 'not' R20 ) } );
thus L1004: R4 in ( Subformulae ( 'not' R20 ) ) by L1003 , L994 , L978 , XBOOLE_0:def 3;
end;
thus L1005: thesis by L977 , TARSKI:1;
end;
theorem
L1006: (for R16 being ZF-formula holds (for R20 being ZF-formula holds ( Subformulae ( R20 '&' R16 ) ) = ( ( ( Subformulae R20 ) \/ ( Subformulae R16 ) ) \/ { ( R20 '&' R16 ) } )))
proof
let R16 being ZF-formula;
let R20 being ZF-formula;
L1007:
now
let R4 being set;
L1008: (R4 in ( ( Subformulae R20 ) \/ ( Subformulae R16 ) ) implies (R4 in ( Subformulae R20 ) or R4 in ( Subformulae R16 ))) by XBOOLE_0:def 3;
thus L1009: (R4 in ( Subformulae ( R20 '&' R16 ) ) implies R4 in ( ( ( Subformulae R20 ) \/ ( Subformulae R16 ) ) \/ { ( R20 '&' R16 ) } ))
proof
assume L1010: R4 in ( Subformulae ( R20 '&' R16 ) );
consider R18 being ZF-formula such that L1011: R18 = R4 and L1012: R18 is_subformula_of ( R20 '&' R16 ) by L1010 , L921;
L1013:
now
assume L1014: R18 <> ( R20 '&' R16 );
L1015: R18 is_proper_subformula_of ( R20 '&' R16 ) by L1014 , L1012 , L606;
L1016: (R18 is_subformula_of R20 or R18 is_subformula_of R16) by L1015 , L821;
L1017: (R4 in ( Subformulae R20 ) or R4 in ( Subformulae R16 )) by L1016 , L1011 , L921;
thus L1018: R4 in ( ( Subformulae R20 ) \/ ( Subformulae R16 ) ) by L1017 , XBOOLE_0:def 3;
end;
L1019: (R4 in ( ( Subformulae R20 ) \/ ( Subformulae R16 ) ) or R4 in { ( R20 '&' R16 ) }) by L1013 , L1011 , TARSKI:def 1;
thus L1020: thesis by L1019 , XBOOLE_0:def 3;
end;

L1021:
now
assume L1022: R4 in { ( R20 '&' R16 ) };
L1023: R4 = ( R20 '&' R16 ) by L1022 , TARSKI:def 1;
L1024: ( R20 '&' R16 ) is_subformula_of ( R20 '&' R16 ) by L601;
thus L1025: R4 in ( Subformulae ( R20 '&' R16 ) ) by L1024 , L1023 , L921;
end;
L1026:
now
assume L1027: R4 in ( Subformulae R16 );
consider R18 being ZF-formula such that L1028: R18 = R4 and L1029: R18 is_subformula_of R16 by L1027 , L921;
L1030: R16 is_immediate_constituent_of ( R20 '&' R16 ) by L547;
L1031: R16 is_proper_subformula_of ( R20 '&' R16 ) by L1030 , L626;
L1032: R16 is_subformula_of ( R20 '&' R16 ) by L1031 , L606;
L1033: R18 is_subformula_of ( R20 '&' R16 ) by L1032 , L1029 , L760;
thus L1034: R4 in ( Subformulae ( R20 '&' R16 ) ) by L1033 , L1028 , L921;
end;
L1035:
now
assume L1036: R4 in ( Subformulae R20 );
consider R18 being ZF-formula such that L1037: R18 = R4 and L1038: R18 is_subformula_of R20 by L1036 , L921;
L1039: R20 is_immediate_constituent_of ( R20 '&' R16 ) by L547;
L1040: R20 is_proper_subformula_of ( R20 '&' R16 ) by L1039 , L626;
L1041: R20 is_subformula_of ( R20 '&' R16 ) by L1040 , L606;
L1042: R18 is_subformula_of ( R20 '&' R16 ) by L1041 , L1038 , L760;
thus L1043: R4 in ( Subformulae ( R20 '&' R16 ) ) by L1042 , L1037 , L921;
end;
assume L1044: R4 in ( ( ( Subformulae R20 ) \/ ( Subformulae R16 ) ) \/ { ( R20 '&' R16 ) } );
thus L1045: R4 in ( Subformulae ( R20 '&' R16 ) ) by L1044 , L1008 , L1035 , L1026 , L1021 , XBOOLE_0:def 3;
end;
thus L1046: thesis by L1007 , TARSKI:1;
end;
theorem
L1047: (for R12 being Variable holds (for R20 being ZF-formula holds ( Subformulae ( All (R12 , R20) ) ) = ( ( Subformulae R20 ) \/ { ( All (R12 , R20) ) } )))
proof
let R12 being Variable;
let R20 being ZF-formula;
L1048:
now
let R4 being set;
L1049:
now
assume L1050: R4 in { ( All (R12 , R20) ) };
L1051: R4 = ( All (R12 , R20) ) by L1050 , TARSKI:def 1;
L1052: ( All (R12 , R20) ) is_subformula_of ( All (R12 , R20) ) by L601;
thus L1053: R4 in ( Subformulae ( All (R12 , R20) ) ) by L1052 , L1051 , L921;
end;
thus L1054: (R4 in ( Subformulae ( All (R12 , R20) ) ) implies R4 in ( ( Subformulae R20 ) \/ { ( All (R12 , R20) ) } ))
proof
assume L1055: R4 in ( Subformulae ( All (R12 , R20) ) );
consider R16 being ZF-formula such that L1056: R16 = R4 and L1057: R16 is_subformula_of ( All (R12 , R20) ) by L1055 , L921;
L1058:
now
assume L1059: R16 <> ( All (R12 , R20) );
L1060: R16 is_proper_subformula_of ( All (R12 , R20) ) by L1059 , L1057 , L606;
L1061: R16 is_subformula_of R20 by L1060 , L855;
thus L1062: R4 in ( Subformulae R20 ) by L1061 , L1056 , L921;
end;
L1063: (R4 in ( Subformulae R20 ) or R4 in { ( All (R12 , R20) ) }) by L1058 , L1056 , TARSKI:def 1;
thus L1064: thesis by L1063 , XBOOLE_0:def 3;
end;

L1065:
now
assume L1066: R4 in ( Subformulae R20 );
consider R16 being ZF-formula such that L1067: R16 = R4 and L1068: R16 is_subformula_of R20 by L1066 , L921;
L1069: R20 is_immediate_constituent_of ( All (R12 , R20) ) by L562;
L1070: R20 is_proper_subformula_of ( All (R12 , R20) ) by L1069 , L626;
L1071: R20 is_subformula_of ( All (R12 , R20) ) by L1070 , L606;
L1072: R16 is_subformula_of ( All (R12 , R20) ) by L1071 , L1068 , L760;
thus L1073: R4 in ( Subformulae ( All (R12 , R20) ) ) by L1072 , L1067 , L921;
end;
assume L1074: R4 in ( ( Subformulae R20 ) \/ { ( All (R12 , R20) ) } );
thus L1075: R4 in ( Subformulae ( All (R12 , R20) ) ) by L1074 , L1065 , L1049 , XBOOLE_0:def 3;
end;
thus L1076: thesis by L1048 , TARSKI:1;
end;
theorem
L1077: (for R20 being ZF-formula holds (R20 is  atomic iff ( Subformulae R20 ) = { R20 }))
proof
let R20 being ZF-formula;
thus L1078: (R20 is  atomic implies ( Subformulae R20 ) = { R20 })
proof
assume L1079: R20 is  atomic;
L1080: (R20 is  being_equality or R20 is  being_membership) by L1079 , L122;
L1081: (R20 = ( ( Var1 R20 ) '=' ( Var2 R20 ) ) or R20 = ( ( Var1 R20 ) 'in' ( Var2 R20 ) )) by L1080 , L432 , L440;
thus L1082: thesis by L1081 , L950 , L963;
end;

assume L1083: ( Subformulae R20 ) = { R20 };
L1084:
now
assume L1085: R20 = ( 'not' ( the_argument_of R20 ) );
L1086: ( the_argument_of R20 ) is_immediate_constituent_of R20 by L1085 , L533;
L1087: ( the_argument_of R20 ) is_proper_subformula_of R20 by L1086 , L626;
L1088: ( the_argument_of R20 ) is_subformula_of R20 by L1087 , L606;
L1089: ( the_argument_of R20 ) in ( Subformulae R20 ) by L1088 , L921;
L1090: ( len ( the_argument_of R20 ) ) <> ( len R20 ) by L1086 , L608;
thus L1091: contradiction by L1090 , L1083 , L1089 , TARSKI:def 1;
end;
L1092:
now
assume L1093: R20 = ( ( the_left_argument_of R20 ) '&' ( the_right_argument_of R20 ) );
L1094: ( the_left_argument_of R20 ) is_immediate_constituent_of R20 by L1093 , L547;
L1095: ( the_left_argument_of R20 ) is_proper_subformula_of R20 by L1094 , L626;
L1096: ( the_left_argument_of R20 ) is_subformula_of R20 by L1095 , L606;
L1097: ( the_left_argument_of R20 ) in ( Subformulae R20 ) by L1096 , L921;
L1098: ( len ( the_left_argument_of R20 ) ) <> ( len R20 ) by L1094 , L608;
thus L1099: contradiction by L1098 , L1083 , L1097 , TARSKI:def 1;
end;
assume L1100: (not R20 is  atomic);
L1101: (R20 is  negative or R20 is  conjunctive or R20 is  universal) by L1100 , L176;
L1102: (R20 = ( 'not' ( the_argument_of R20 ) ) or R20 = ( ( the_left_argument_of R20 ) '&' ( the_right_argument_of R20 ) ) or R20 = ( All (( bound_in R20 ) , ( the_scope_of R20 )) )) by L1101 , L449 , L467 , L491;
L1103: ( the_scope_of R20 ) is_immediate_constituent_of R20 by L1102 , L1084 , L1092 , L562;
L1104: ( the_scope_of R20 ) is_proper_subformula_of R20 by L1103 , L626;
L1105: ( the_scope_of R20 ) is_subformula_of R20 by L1104 , L606;
L1106: ( the_scope_of R20 ) in ( Subformulae R20 ) by L1105 , L921;
L1107: ( len ( the_scope_of R20 ) ) <> ( len R20 ) by L1103 , L608;
thus L1108: contradiction by L1107 , L1083 , L1106 , TARSKI:def 1;
end;
theorem
L1109: (for R20 being ZF-formula holds (R20 is  negative implies ( Subformulae R20 ) = ( ( Subformulae ( the_argument_of R20 ) ) \/ { R20 } )))
proof
let R20 being ZF-formula;
assume L1110: R20 is  negative;
L1111: R20 = ( 'not' ( the_argument_of R20 ) ) by L1110 , L449;
thus L1112: thesis by L1111 , L976;
end;
theorem
L1113: (for R20 being ZF-formula holds (R20 is  conjunctive implies ( Subformulae R20 ) = ( ( ( Subformulae ( the_left_argument_of R20 ) ) \/ ( Subformulae ( the_right_argument_of R20 ) ) ) \/ { R20 } )))
proof
let R20 being ZF-formula;
assume L1114: R20 is  conjunctive;
L1115: R20 = ( ( the_left_argument_of R20 ) '&' ( the_right_argument_of R20 ) ) by L1114 , L467;
thus L1116: thesis by L1115 , L1006;
end;
theorem
L1117: (for R20 being ZF-formula holds (R20 is  universal implies ( Subformulae R20 ) = ( ( Subformulae ( the_scope_of R20 ) ) \/ { R20 } )))
proof
let R20 being ZF-formula;
assume L1118: R20 is  universal;
L1119: R20 = ( All (( bound_in R20 ) , ( the_scope_of R20 )) ) by L1118 , L491;
thus L1120: thesis by L1119 , L1047;
end;
theorem
L1121: (for R16 being ZF-formula holds (for R18 being ZF-formula holds (for R20 being ZF-formula holds (((R20 is_immediate_constituent_of R18 or R20 is_proper_subformula_of R18 or R20 is_subformula_of R18) & R18 in ( Subformulae R16 )) implies R20 in ( Subformulae R16 )))))
proof
let R16 being ZF-formula;
let R18 being ZF-formula;
let R20 being ZF-formula;
assume that
L1122: (R20 is_immediate_constituent_of R18 or R20 is_proper_subformula_of R18 or R20 is_subformula_of R18)
and
L1123: R18 in ( Subformulae R16 );
L1124: (R20 is_proper_subformula_of R18 or R20 is_subformula_of R18) by L1122 , L626;
L1125: R20 is_subformula_of R18 by L1124 , L606;
L1126: R18 is_subformula_of R16 by L1123 , L939;
L1127: R20 is_subformula_of R16 by L1126 , L1125 , L760;
thus L1128: thesis by L1127 , L921;
end;
scheme ZFInd { P1[ZF-formula] } : (for R20 being ZF-formula holds P1[ R20 ])
provided
L1129: (for R20 being ZF-formula holds (R20 is  atomic implies P1[ R20 ]))
and
L1130: (for R20 being ZF-formula holds ((R20 is  negative & P1[ ( the_argument_of R20 ) ]) implies P1[ R20 ]))
and
L1131: (for R20 being ZF-formula holds ((R20 is  conjunctive & P1[ ( the_left_argument_of R20 ) ] & P1[ ( the_right_argument_of R20 ) ]) implies P1[ R20 ]))
and
L1132: (for R20 being ZF-formula holds ((R20 is  universal & P1[ ( the_scope_of R20 ) ]) implies P1[ R20 ]))
proof
defpred S6[ Nat ] means (for R20 being ZF-formula holds (( len R20 ) = $1 implies P1[ R20 ]));
L1133: (for B7 being Nat holds ((for B8 being Nat holds (B8 < B7 implies S6[ B8 ])) implies S6[ B7 ]))
proof
let C11 being Nat;
assume that
L1134: (for B9 being Nat holds (B9 < C11 implies (for R20 being ZF-formula holds (( len R20 ) = B9 implies P1[ R20 ]))));
let R20 being ZF-formula;
assume that
L1135: ( len R20 ) = C11;
L1136:
now
assume L1137: R20 is  conjunctive;
L1138: R20 = ( ( the_left_argument_of R20 ) '&' ( the_right_argument_of R20 ) ) by L1137 , L467;
L1139: ( the_right_argument_of R20 ) is_immediate_constituent_of R20 by L1138 , L547;
L1140: ( len ( the_right_argument_of R20 ) ) < ( len R20 ) by L1139 , L608;
L1141: P1[ ( the_right_argument_of R20 ) ] by L1140 , L1134 , L1135;
L1142: ( the_left_argument_of R20 ) is_immediate_constituent_of R20 by L1138 , L547;
L1143: ( len ( the_left_argument_of R20 ) ) < ( len R20 ) by L1142 , L608;
L1144: P1[ ( the_left_argument_of R20 ) ] by L1143 , L1134 , L1135;
thus L1145: thesis by L1144 , L1131 , L1137 , L1141;
end;
L1146:
now
assume L1147: R20 is  universal;
L1148: R20 = ( All (( bound_in R20 ) , ( the_scope_of R20 )) ) by L1147 , L491;
L1149: ( the_scope_of R20 ) is_immediate_constituent_of R20 by L1148 , L562;
L1150: ( len ( the_scope_of R20 ) ) < ( len R20 ) by L1149 , L608;
thus L1151: thesis by L1150 , L1132 , L1134 , L1135 , L1147;
end;
L1152:
now
assume L1153: R20 is  negative;
L1154: R20 = ( 'not' ( the_argument_of R20 ) ) by L1153 , L449;
L1155: ( the_argument_of R20 ) is_immediate_constituent_of R20 by L1154 , L533;
L1156: ( len ( the_argument_of R20 ) ) < ( len R20 ) by L1155 , L608;
thus L1157: thesis by L1156 , L1130 , L1134 , L1135 , L1153;
end;
thus L1158: thesis by L1152 , L1129 , L1136 , L1146 , L176;
end;
L1159: (for B10 being Nat holds S6[ B10 ]) from NAT_1:sch 4(L1133);
let R20 being ZF-formula;
L1160: ( len R20 ) = ( len R20 );
thus L1161: thesis by L1160 , L1159;
end;
scheme ZFCompInd { P2[ZF-formula] } : (for R20 being ZF-formula holds P2[ R20 ])
provided
L1162: (for R20 being ZF-formula holds ((for R16 being ZF-formula holds (R16 is_proper_subformula_of R20 implies P2[ R16 ])) implies P2[ R20 ]))
proof
defpred S7[ Nat ] means (for R20 being ZF-formula holds (( len R20 ) = $1 implies P2[ R20 ]));
L1163: (for B11 being Nat holds ((for B12 being Nat holds (B12 < B11 implies S7[ B12 ])) implies S7[ B11 ]))
proof
let C12 being Nat;
assume that
L1164: (for B13 being Nat holds (B13 < C12 implies (for R20 being ZF-formula holds (( len R20 ) = B13 implies P2[ R20 ]))));
let R20 being ZF-formula;
assume that
L1165: ( len R20 ) = C12;
L1166:
now
let R16 being ZF-formula;
assume L1167: R16 is_proper_subformula_of R20;
L1168: ( len R16 ) < ( len R20 ) by L1167 , L642;
thus L1169: P2[ R16 ] by L1168 , L1164 , L1165;
end;
thus L1170: thesis by L1166 , L1162;
end;
L1171: (for B14 being Nat holds S7[ B14 ]) from NAT_1:sch 4(L1163);
let R20 being ZF-formula;
L1172: ( len R20 ) = ( len R20 );
thus L1173: thesis by L1172 , L1171;
end;
