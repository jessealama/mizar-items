:: Coincidence Lemma and Substitution Lemma
::  by Patrick Braselmann and Peter Koepke
::
:: Received September 25, 2004
:: Copyright (c) 2004-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies SUBSET_1, NUMBERS, CQC_LANG, QC_LANG1, XBOOLE_0, VALUAT_1,
      FUNCT_1, FINSEQ_1, RELAT_1, TARSKI, FUNCT_4, FUNCOP_1, ORDINAL1,
      PARTFUN1, FUNCT_2, MCART_1, REALSET1, XBOOLEAN, ZF_MODEL, ORDINAL4,
      ZF_LANG, ARYTM_3, NAT_1, XXREAL_0, ZFMISC_1, BVFUNC_2, CLASSES2,
      ZF_LANG1, SUBLEMMA, CARD_1, SUBSTUT1;
 notations TARSKI, XBOOLE_0, ZFMISC_1,
      XTUPLE_0, SUBSET_1, FINSEQ_1, FUNCT_1, ORDINAL1, NAT_1,
      QC_LANG1, QC_LANG3, PARTFUN1, CARD_1, NUMBERS, XXREAL_0, FUNCOP_1,
      CQC_LANG, RELAT_1, FUNCT_4, SEQ_4, VALUAT_1, RELSET_1, FUNCT_2, MARGREL1,
      DOMAIN_1, MCART_1, SUBSTUT1;
 constructors DOMAIN_1, FUNCT_4, XXREAL_0, SEQ_4, QC_LANG3, VALUAT_1,
      RELSET_1, SUBSTUT1, XTUPLE_0;
 registrations XBOOLE_0, SUBSET_1, RELAT_1, FUNCT_1, ORDINAL1, FUNCOP_1,
      MEMBERED, QC_LANG1, CQC_LANG, XXREAL_0, XXREAL_2, CARD_1,
      RELSET_1, SUBSTUT1, FUNCT_4, XTUPLE_0;
 requirements NUMERALS, SUBSET, BOOLE;
 definitions TARSKI, XBOOLE_0, FUNCOP_1, XTUPLE_0;
 theorems TARSKI, FINSEQ_1, FUNCT_1, MCART_1, VALUAT_1, XBOOLE_0, XBOOLE_1,
      FINSEQ_2, CQC_LANG, QC_LANG1, ZFMISC_1, RELAT_1, QC_LANG3, FUNCOP_1,
      FUNCT_2, RELSET_1, QC_LANG2, FUNCT_4, FUNCT_7, ORDINAL1,
      CARD_1, SUBSTUT1, XTUPLE_0;
 schemes CQC_LANG, XBOOLE_0, SUBSTUT1;

begin
theorem
L1: (for B1 , B2 , B3 , B4 , B5 being Function holds ((( dom B4 ) c= ( dom B3 ) & ( dom B5 ) c= ( dom B3 )) implies ( ( B1 +* B2 ) +* B3 ) = ( ( ( B1 +* B4 ) +* ( B2 +* B5 ) ) +* B3 )))
proof
let C1 , C2 , C3 , C4 , C5 being Function;
assume that
L2: ( dom C4 ) c= ( dom C3 )
and
L3: ( dom C5 ) c= ( dom C3 );
L4: (( dom ( C1 +* C4 ) ) = ( ( dom C1 ) \/ ( dom C4 ) ) & ( dom ( C2 +* C5 ) ) = ( ( dom C2 ) \/ ( dom C5 ) )) by FUNCT_4:def 1;
L5: ( dom ( ( C1 +* C4 ) +* ( C2 +* C5 ) ) ) = ( ( ( dom C1 ) \/ ( dom C4 ) ) \/ ( ( dom C2 ) \/ ( dom C5 ) ) ) by L4 , FUNCT_4:def 1;
L6: ( dom ( ( ( C1 +* C4 ) +* ( C2 +* C5 ) ) +* C3 ) ) = ( ( ( ( dom C1 ) \/ ( dom C4 ) ) \/ ( ( dom C2 ) \/ ( dom C5 ) ) ) \/ ( dom C3 ) ) by L5 , FUNCT_4:def 1;
L7: ( dom ( ( ( C1 +* C4 ) +* ( C2 +* C5 ) ) +* C3 ) ) = ( ( ( dom C1 ) \/ ( dom C4 ) ) \/ ( ( ( dom C2 ) \/ ( dom C5 ) ) \/ ( dom C3 ) ) ) by L6 , XBOOLE_1:4;
L8: ( dom ( ( ( C1 +* C4 ) +* ( C2 +* C5 ) ) +* C3 ) ) = ( ( ( dom C1 ) \/ ( dom C4 ) ) \/ ( ( dom C2 ) \/ ( ( dom C5 ) \/ ( dom C3 ) ) ) ) by L7 , XBOOLE_1:4;
L9: ( dom ( ( ( C1 +* C4 ) +* ( C2 +* C5 ) ) +* C3 ) ) = ( ( ( dom C1 ) \/ ( dom C4 ) ) \/ ( ( dom C2 ) \/ ( dom C3 ) ) ) by L8 , L3 , XBOOLE_1:12;
L10: ( dom ( ( ( C1 +* C4 ) +* ( C2 +* C5 ) ) +* C3 ) ) = ( ( ( ( dom C1 ) \/ ( dom C4 ) ) \/ ( dom C3 ) ) \/ ( dom C2 ) ) by L9 , XBOOLE_1:4;
L11: ( dom ( ( ( C1 +* C4 ) +* ( C2 +* C5 ) ) +* C3 ) ) = ( ( ( dom C1 ) \/ ( ( dom C4 ) \/ ( dom C3 ) ) ) \/ ( dom C2 ) ) by L10 , XBOOLE_1:4;
L12: ( dom ( ( ( C1 +* C4 ) +* ( C2 +* C5 ) ) +* C3 ) ) = ( ( ( dom C1 ) \/ ( dom C3 ) ) \/ ( dom C2 ) ) by L11 , L2 , XBOOLE_1:12;
L13: (for R3 being set holds (R3 in ( dom ( ( C1 +* C2 ) +* C3 ) ) implies ( ( ( C1 +* C2 ) +* C3 ) . R3 ) = ( ( ( ( C1 +* C4 ) +* ( C2 +* C5 ) ) +* C3 ) . R3 )))
proof
let R3 being set;
assume that
L14: R3 in ( dom ( ( C1 +* C2 ) +* C3 ) );
L15:
now
assume L16: (not R3 in ( dom C3 ));
L17: ( ( ( ( C1 +* C4 ) +* ( C2 +* C5 ) ) +* C3 ) . R3 ) = ( ( ( C1 +* C4 ) +* ( C2 +* C5 ) ) . R3 ) by L16 , FUNCT_4:11;
L18: ( ( ( C1 +* C2 ) +* C3 ) . R3 ) = ( ( C1 +* C2 ) . R3 ) by L16 , FUNCT_4:11;
L19:
now
L20: (not R3 in ( dom C5 )) by L3 , L16;
assume L21: R3 in ( dom C2 );
L22: ( dom C2 ) c= ( ( dom C2 ) \/ ( dom C5 ) ) by XBOOLE_1:7;
L23: R3 in ( ( dom C2 ) \/ ( dom C5 ) ) by L22 , L21;
L24: R3 in ( dom ( C2 +* C5 ) ) by L23 , FUNCT_4:def 1;
L25: ( ( ( ( C1 +* C4 ) +* ( C2 +* C5 ) ) +* C3 ) . R3 ) = ( ( C2 +* C5 ) . R3 ) by L24 , L17 , FUNCT_4:13;
L26: ( ( ( C1 +* C2 ) +* C3 ) . R3 ) = ( C2 . R3 ) by L18 , L21 , FUNCT_4:13;
thus L27: thesis by L26 , L25 , L20 , FUNCT_4:11;
end;
L28:
now
L29: (not R3 in ( dom C4 )) by L2 , L16;
assume L30: (not R3 in ( dom C2 ));
L31: (not R3 in ( dom C5 )) by L3 , L16;
L32: (not R3 in ( ( dom C2 ) \/ ( dom C5 ) )) by L31 , L30 , XBOOLE_0:def 3;
L33: (not R3 in ( dom ( C2 +* C5 ) )) by L32 , FUNCT_4:def 1;
L34: ( ( ( ( C1 +* C4 ) +* ( C2 +* C5 ) ) +* C3 ) . R3 ) = ( ( C1 +* C4 ) . R3 ) by L33 , L17 , FUNCT_4:11;
L35: ( ( ( C1 +* C2 ) +* C3 ) . R3 ) = ( C1 . R3 ) by L18 , L30 , FUNCT_4:11;
thus L36: thesis by L35 , L34 , L29 , FUNCT_4:11;
end;
thus L37: thesis by L28 , L19;
end;
L38:
now
assume L39: R3 in ( dom C3 );
L40: ( ( ( C1 +* C2 ) +* C3 ) . R3 ) = ( C3 . R3 ) by L39 , FUNCT_4:13;
thus L41: thesis by L40 , L39 , FUNCT_4:13;
end;
thus L42: thesis by L38 , L15;
end;
L43: ( dom ( C1 +* C2 ) ) = ( ( dom C1 ) \/ ( dom C2 ) ) by FUNCT_4:def 1;
L44: ( dom ( ( C1 +* C2 ) +* C3 ) ) = ( ( ( dom C1 ) \/ ( dom C2 ) ) \/ ( dom C3 ) ) by L43 , FUNCT_4:def 1;
thus L45: thesis by L44 , L12 , L13 , FUNCT_1:2 , XBOOLE_1:4;
end;
theorem
L46: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for B6 being Function holds (R11 in ( dom B6 ) implies ( ( B6 | ( ( dom B6 ) \ { R11 } ) ) +* ( R11 .--> ( B6 . R11 ) ) ) = B6))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let C6 being Function;
assume L47: R11 in ( dom C6 );
L48: (( ( ( dom C6 ) \ { R11 } ) \/ { R11 } ) = ( ( dom C6 ) \/ { R11 } ) & { R11 } c= ( dom C6 )) by L47 , XBOOLE_1:39 , ZFMISC_1:31;
L49: ( ( ( dom C6 ) \ { R11 } ) \/ { R11 } ) = ( dom C6 ) by L48 , XBOOLE_1:12;
thus L50: thesis by L49 , FUNCT_7:14;
end;
definition
let R1 being QC-alphabet;
let R14 being non  empty set;
mode Val_Sub of R14 , R1
 is (PartFunc of ( bound_QC-variables R1 ) , R14);
end;
notation
let R1 being QC-alphabet;
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R33 being (Val_Sub of R14 , R1);
synonym R16 . R33 for R16 +* R33;
end;
definition
let R1 being QC-alphabet;
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R33 being (Val_Sub of R14 , R1);
redefine func R16 . R33 -> (Element of ( Valuations_in (R1 , R14) ));

coherence
proof
L53: R16 is (Element of ( Funcs (( bound_QC-variables R1 ) , R14) )) by VALUAT_1:def 1;
L54: (ex R18 being Function st (R16 = R18 & ( dom R18 ) = ( bound_QC-variables R1 ) & ( rng R18 ) c= R14)) by L53 , FUNCT_2:def 2;
L55: ( dom ( R16 +* R33 ) ) = ( ( bound_QC-variables R1 ) \/ ( dom R33 ) ) by L54 , FUNCT_4:def 1;
L56: ( dom ( R16 +* R33 ) ) = ( bound_QC-variables R1 ) by L55 , XBOOLE_1:12;
L57: ( rng ( R16 +* R33 ) ) c= ( ( rng R16 ) \/ ( rng R33 ) ) by FUNCT_4:17;
L58: ( R16 +* R33 ) in ( Funcs (( bound_QC-variables R1 ) , R14) ) by L57 , L56 , FUNCT_2:def 2;
thus L59: thesis by L58 , VALUAT_1:def 1;
end;
end;
definition
let R1 being QC-alphabet;
let R28 being (Element of ( CQC-Sub-WFF R1 ));
redefine func R28 `1 -> (Element of ( CQC-WFF R1 ));

coherence
proof
L61: R28 in ( CQC-Sub-WFF R1 );
L62: R28 in { B7 where B7 is (Element of ( QC-Sub-WFF R1 )) : ( B7 `1 ) is (Element of ( CQC-WFF R1 )) } by L61 , SUBSTUT1:def 39;
L63: (ex B8 being (Element of ( QC-Sub-WFF R1 )) st (R28 = B8 & ( B8 `1 ) is (Element of ( CQC-WFF R1 )))) by L62;
thus L64: thesis by L63;
end;
end;
definition
let R1 being QC-alphabet;
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
func Val_S (R16 , R28) -> (Val_Sub of R14 , R1) equals 
( ( @ ( R28 `2 ) ) * R16 );
coherence;
end;
theorem
L67: (for R1 being QC-alphabet holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (R28 is R1 -Sub_VERUM implies ( CQC_Sub R28 ) = ( VERUM R1 ))))
proof
let R1 being QC-alphabet;
let R28 being (Element of ( CQC-Sub-WFF R1 ));
L68: (ex B9 being (Function of ( QC-Sub-WFF R1 ) , ( QC-WFF R1 )) st (( CQC_Sub R28 ) = ( B9 . R28 ) & (for B10 being (Element of ( QC-Sub-WFF R1 )) holds ((B10 is R1 -Sub_VERUM implies ( B9 . B10 ) = ( VERUM R1 )) & (B10 is  Sub_atomic implies ( B9 . B10 ) = ( ( the_pred_symbol_of ( B10 `1 ) ) ! ( CQC_Subst (( Sub_the_arguments_of B10 ) , ( B10 `2 )) ) )) & (B10 is  Sub_negative implies ( B9 . B10 ) = ( 'not' ( B9 . ( Sub_the_argument_of B10 ) ) )) & (B10 is  Sub_conjunctive implies ( B9 . B10 ) = ( ( B9 . ( Sub_the_left_argument_of B10 ) ) '&' ( B9 . ( Sub_the_right_argument_of B10 ) ) )) & (B10 is  Sub_universal implies ( B9 . B10 ) = ( Quant (B10 , ( B9 . ( Sub_the_scope_of B10 ) )) )))))) by SUBSTUT1:def 38;
thus L69: thesis by L68;
end;
definition
let R1 being QC-alphabet;
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R15 being (interpretation of R1 , R14);
pred R15 , R16 |= R28
means
:L70: R15 , R16 |= ( R28 `1 )
;end;
theorem
L72: (for R1 being QC-alphabet holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (R28 is R1 -Sub_VERUM implies (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (R15 , R16 |= ( CQC_Sub R28 ) iff R15 , ( R16 . ( Val_S (R16 , R28) ) ) |= R28)))))))
proof
let R1 being QC-alphabet;
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
let R28 being (Element of ( CQC-Sub-WFF R1 ));
assume L73: R28 is R1 -Sub_VERUM;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
L74: (ex R25 being (CQC_Substitution of R1) st R28 = [ ( VERUM R1 ) , R25 ]) by L73 , SUBSTUT1:def 19;
L75: ( R28 `1 ) = ( VERUM R1 ) by L74 , MCART_1:7;
L76: (R15 , ( R16 . ( Val_S (R16 , R28) ) ) |= ( VERUM R1 ) iff R15 , ( R16 . ( Val_S (R16 , R28) ) ) |= R28) by L75 , L70;
thus L77: (R15 , R16 |= ( CQC_Sub R28 ) implies R15 , ( R16 . ( Val_S (R16 , R28) ) ) |= R28) by L76 , VALUAT_1:32;
L78: (R15 , ( R16 . ( Val_S (R16 , R28) ) ) |= R28 implies R15 , R16 |= ( VERUM R1 )) by VALUAT_1:32;
thus L79: thesis by L78 , L73 , L67;
end;
theorem
L80: (for R1 being QC-alphabet holds (for R6 being (Element of ( NAT )) holds (for R7 being (Element of ( NAT )) holds (for R22 being (CQC-variable_list of R7 , R1) holds (R6 in ( dom R22 ) implies ( R22 . R6 ) is (bound_QC-variable of R1))))))
proof
let R1 being QC-alphabet;
let R6 being (Element of ( NAT ));
let R7 being (Element of ( NAT ));
let R22 being (CQC-variable_list of R7 , R1);
assume L81: R6 in ( dom R22 );
L82: ( R22 . R6 ) in ( rng R22 ) by L81 , FUNCT_1:3;
L83: ( rng R22 ) c= ( bound_QC-variables R1 ) by RELAT_1:def 19;
thus L84: thesis by L83 , L82;
end;
theorem
L85: (for R1 being QC-alphabet holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (R28 is  Sub_atomic implies ( CQC_Sub R28 ) = ( ( the_pred_symbol_of ( R28 `1 ) ) ! ( CQC_Subst (( Sub_the_arguments_of R28 ) , ( R28 `2 )) ) ))))
proof
let R1 being QC-alphabet;
let R28 being (Element of ( CQC-Sub-WFF R1 ));
L86: (ex B11 being (Function of ( QC-Sub-WFF R1 ) , ( QC-WFF R1 )) st (( CQC_Sub R28 ) = ( B11 . R28 ) & (for B12 being (Element of ( QC-Sub-WFF R1 )) holds ((B12 is R1 -Sub_VERUM implies ( B11 . B12 ) = ( VERUM R1 )) & (B12 is  Sub_atomic implies ( B11 . B12 ) = ( ( the_pred_symbol_of ( B12 `1 ) ) ! ( CQC_Subst (( Sub_the_arguments_of B12 ) , ( B12 `2 )) ) )) & (B12 is  Sub_negative implies ( B11 . B12 ) = ( 'not' ( B11 . ( Sub_the_argument_of B12 ) ) )) & (B12 is  Sub_conjunctive implies ( B11 . B12 ) = ( ( B11 . ( Sub_the_left_argument_of B12 ) ) '&' ( B11 . ( Sub_the_right_argument_of B12 ) ) )) & (B12 is  Sub_universal implies ( B11 . B12 ) = ( Quant (B12 , ( B11 . ( Sub_the_scope_of B12 ) )) )))))) by SUBSTUT1:def 38;
thus L87: thesis by L86;
end;
theorem
L88: (for R1 being QC-alphabet holds (for R7 being (Element of ( NAT )) holds (for R20 being (QC-pred_symbol of R7 , R1) holds (for R21 being (QC-pred_symbol of R7 , R1) holds (for R22 being (CQC-variable_list of R7 , R1) holds (for R23 being (CQC-variable_list of R7 , R1) holds (for R25 being (CQC_Substitution of R1) holds (for R26 being (CQC_Substitution of R1) holds (( Sub_the_arguments_of ( Sub_P (R20 , R22 , R25) ) ) = ( Sub_the_arguments_of ( Sub_P (R21 , R23 , R26) ) ) implies R22 = R23)))))))))
proof
let R1 being QC-alphabet;
let R7 being (Element of ( NAT ));
let R20 being (QC-pred_symbol of R7 , R1);
let R21 being (QC-pred_symbol of R7 , R1);
let R22 being (CQC-variable_list of R7 , R1);
let R23 being (CQC-variable_list of R7 , R1);
let R25 being (CQC_Substitution of R1);
let R26 being (CQC_Substitution of R1);
assume L89: ( Sub_the_arguments_of ( Sub_P (R20 , R22 , R25) ) ) = ( Sub_the_arguments_of ( Sub_P (R21 , R23 , R26) ) );
consider C7 being (Element of ( NAT )), C8 being (QC-pred_symbol of C7 , R1), C9 being (QC-variable_list of C7 , R1), C10 being (Element of ( vSUB R1 )) such that L90: ( Sub_the_arguments_of ( Sub_P (R20 , R22 , R25) ) ) = C9 and L91: ( Sub_P (R20 , R22 , R25) ) = ( Sub_P (C8 , C9 , C10) ) by SUBSTUT1:def 29;
L92: (( R20 ! R22 ) = ( <* R20 *> ^ R22 ) & ( C8 ! C9 ) = ( <* C8 *> ^ C9 )) by QC_LANG1:8;
L93: ( Sub_P (R20 , R22 , R25) ) = [ ( R20 ! R22 ) , R25 ] by SUBSTUT1:9;
L94: [ ( R20 ! R22 ) , R25 ] = [ ( C8 ! C9 ) , C10 ] by L93 , L91 , SUBSTUT1:9;
L95: ( <* C8 *> ^ C9 ) = ( <* R20 *> ^ R22 ) by L94 , L92 , XTUPLE_0:1;
L96: (( ( <* C8 *> ^ C9 ) . 1 ) = C8 & ( ( <* R20 *> ^ R22 ) . 1 ) = R20) by FINSEQ_1:41;
L97: C9 = R22 by L96 , L95 , FINSEQ_1:33;
consider C11 being (Element of ( NAT )), C12 being (QC-pred_symbol of C11 , R1), C13 being (QC-variable_list of C11 , R1), C14 being (Element of ( vSUB R1 )) such that L98: ( Sub_the_arguments_of ( Sub_P (R21 , R23 , R26) ) ) = C13 and L99: ( Sub_P (R21 , R23 , R26) ) = ( Sub_P (C12 , C13 , C14) ) by SUBSTUT1:def 29;
L100: (( R21 ! R23 ) = ( <* R21 *> ^ R23 ) & ( C12 ! C13 ) = ( <* C12 *> ^ C13 )) by QC_LANG1:8;
L101: ( Sub_P (R21 , R23 , R26) ) = [ ( R21 ! R23 ) , R26 ] by SUBSTUT1:9;
L102: [ ( R21 ! R23 ) , R26 ] = [ ( C12 ! C13 ) , C14 ] by L101 , L99 , SUBSTUT1:9;
L103: ( <* C12 *> ^ C13 ) = ( <* R21 *> ^ R23 ) by L102 , L100 , XTUPLE_0:1;
L104: (( ( <* C12 *> ^ C13 ) . 1 ) = C12 & ( ( <* R21 *> ^ R23 ) . 1 ) = R21) by FINSEQ_1:41;
thus L105: thesis by L104 , L89 , L90 , L98 , L97 , L103 , FINSEQ_1:33;
end;
definition
let R7 being (Element of ( NAT ));
let R1 being QC-alphabet;
let R20 being (QC-pred_symbol of R7 , R1);
let R22 being (CQC-variable_list of R7 , R1);
let R25 being (CQC_Substitution of R1);
redefine func Sub_P (R20 , R22 , R25) -> (Element of ( CQC-Sub-WFF R1 ));

coherence
proof
set D1 = { B13 where B13 is (Element of ( QC-Sub-WFF R1 )) : ( B13 `1 ) is (Element of ( CQC-WFF R1 )) };
L106: D1 = ( CQC-Sub-WFF R1 ) by SUBSTUT1:def 39;
L107: (for B14 being (Element of ( QC-Sub-WFF R1 )) holds (( B14 `1 ) is (Element of ( CQC-WFF R1 )) implies B14 in ( CQC-Sub-WFF R1 ))) by L106;
L108: ( Sub_P (R20 , R22 , R25) ) = [ ( R20 ! R22 ) , R25 ] by SUBSTUT1:9;
L109: (( ( Sub_P (R20 , R22 , R25) ) `1 ) = ( R20 ! R22 ) & ( R20 ! R22 ) in ( CQC-WFF R1 )) by L108 , MCART_1:7;
thus L110: thesis by L109 , L107;
end;
end;
theorem
L112: (for R1 being QC-alphabet holds (for R7 being (Element of ( NAT )) holds (for R20 being (QC-pred_symbol of R7 , R1) holds (for R22 being (CQC-variable_list of R7 , R1) holds (for R25 being (CQC_Substitution of R1) holds ( CQC_Sub ( Sub_P (R20 , R22 , R25) ) ) = ( R20 ! ( CQC_Subst (R22 , R25) ) ))))))
proof
let R1 being QC-alphabet;
let R7 being (Element of ( NAT ));
let R20 being (QC-pred_symbol of R7 , R1);
let R22 being (CQC-variable_list of R7 , R1);
let R25 being (CQC_Substitution of R1);
L113: ( R20 ! R22 ) is  atomic by QC_LANG1:def 18;
L114: ( Sub_P (R20 , R22 , R25) ) = [ ( R20 ! R22 ) , R25 ] by SUBSTUT1:9;
L115: ( ( Sub_P (R20 , R22 , R25) ) `2 ) = R25 by L114 , MCART_1:7;
L116: ( ( Sub_P (R20 , R22 , R25) ) `1 ) = ( R20 ! R22 ) by L114 , MCART_1:7;
L117: (( Sub_the_arguments_of ( Sub_P (R20 , R22 , R25) ) ) = R22 & ( the_pred_symbol_of ( ( Sub_P (R20 , R22 , R25) ) `1 ) ) = R20) by L116 , L113 , QC_LANG1:def 22 , SUBSTUT1:def 29;
thus L118: thesis by L117 , L115 , L85;
end;
theorem
L119: (for R1 being QC-alphabet holds (for R7 being (Element of ( NAT )) holds (for R20 being (QC-pred_symbol of R7 , R1) holds (for R22 being (CQC-variable_list of R7 , R1) holds (for R25 being (CQC_Substitution of R1) holds ( R20 ! ( CQC_Subst (R22 , R25) ) ) is (Element of ( CQC-WFF R1 )))))))
proof
let R1 being QC-alphabet;
let R7 being (Element of ( NAT ));
let R20 being (QC-pred_symbol of R7 , R1);
let R22 being (CQC-variable_list of R7 , R1);
let R25 being (CQC_Substitution of R1);
L120: ( CQC_Sub ( Sub_P (R20 , R22 , R25) ) ) = ( R20 ! ( CQC_Subst (R22 , R25) ) ) by L112;
thus L121: thesis by L120;
end;
theorem
L122: (for R1 being QC-alphabet holds (for R7 being (Element of ( NAT )) holds (for R22 being (CQC-variable_list of R7 , R1) holds (for R25 being (CQC_Substitution of R1) holds ( CQC_Subst (R22 , R25) ) is (CQC-variable_list of R7 , R1)))))
proof
let R1 being QC-alphabet;
let R7 being (Element of ( NAT ));
let R22 being (CQC-variable_list of R7 , R1);
let R25 being (CQC_Substitution of R1);
reconsider D2 = R22 as (FinSequence of ( bound_QC-variables R1 )) by SUBSTUT1:34;
reconsider D3 = ( CQC_Subst (D2 , R25) ) as (FinSequence of ( bound_QC-variables R1 ));
L123: D3 = ( CQC_Subst (( @ D2 ) , R25) ) by SUBSTUT1:def 5;
L124: ( len D2 ) = R7 by CARD_1:def 7;
L125: ( len ( @ D2 ) ) = R7 by L124 , SUBSTUT1:def 4;
L126: ( len D3 ) = R7 by L125 , L123 , SUBSTUT1:def 3;
L127: D3 is (CQC-variable_list of R7 , R1) by L126 , SUBSTUT1:34;
thus L128: thesis by L127 , L123 , SUBSTUT1:def 4;
end;
registration
let R1 being QC-alphabet;
let R7 being (Element of ( NAT ));
let R22 being (CQC-variable_list of R7 , R1);
let R25 being (CQC_Substitution of R1);
cluster ( CQC_Subst (R22 , R25) ) -> ( bound_QC-variables R1 ) -valued R7 -element;
coherence by L122;
end;
theorem
L130: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds ((not R11 in ( dom ( R28 `2 ) )) implies ( ( R16 . ( Val_S (R16 , R28) ) ) . R11 ) = ( R16 . R11 )))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R28 being (Element of ( CQC-Sub-WFF R1 ));
assume L131: (not R11 in ( dom ( R28 `2 ) ));
L132: (not R11 in ( dom ( @ ( R28 `2 ) ) )) by L131 , SUBSTUT1:def 2;
L133: ( dom ( ( @ ( R28 `2 ) ) * R16 ) ) c= ( dom ( @ ( R28 `2 ) ) ) by RELAT_1:25;
L134: (not R11 in ( dom ( Val_S (R16 , R28) ) )) by L133 , L132;
thus L135: thesis by L134 , FUNCT_4:11;
end;
theorem
L136: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (R11 in ( dom ( R28 `2 ) ) implies ( ( R16 . ( Val_S (R16 , R28) ) ) . R11 ) = ( ( Val_S (R16 , R28) ) . R11 )))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R28 being (Element of ( CQC-Sub-WFF R1 ));
assume L137: R11 in ( dom ( R28 `2 ) );
L138: R11 in ( dom ( @ ( R28 `2 ) ) ) by L137 , SUBSTUT1:def 2;
L139: (( rng ( @ ( R28 `2 ) ) ) c= ( bound_QC-variables R1 ) & ( dom R16 ) = ( bound_QC-variables R1 )) by FUNCT_2:def 1;
L140: R11 in ( dom ( Val_S (R16 , R28) ) ) by L139 , L138 , RELAT_1:27;
thus L141: thesis by L140 , FUNCT_4:13;
end;
theorem
L142: (for R1 being QC-alphabet holds (for R7 being (Element of ( NAT )) holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R20 being (QC-pred_symbol of R7 , R1) holds (for R22 being (CQC-variable_list of R7 , R1) holds (for R25 being (CQC_Substitution of R1) holds ( ( R16 . ( Val_S (R16 , ( Sub_P (R20 , R22 , R25) )) ) ) *' R22 ) = ( R16 *' ( CQC_Subst (R22 , R25) ) ))))))))
proof
let R1 being QC-alphabet;
let R7 being (Element of ( NAT ));
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R20 being (QC-pred_symbol of R7 , R1);
let R22 being (CQC-variable_list of R7 , R1);
let R25 being (CQC_Substitution of R1);
set D4 = ( Sub_P (R20 , R22 , R25) );
set D5 = ( CQC_Subst (R22 , R25) );
L143: ( len R22 ) = R7 by CARD_1:def 7;
L144: D4 = [ ( R20 ! R22 ) , R25 ] by SUBSTUT1:9;
L145: ( D4 `2 ) = R25 by L144 , MCART_1:7;
L146: ( len ( ( R16 . ( Val_S (R16 , D4) ) ) *' R22 ) ) = R7 by VALUAT_1:def 3;
L147: ( dom ( ( R16 . ( Val_S (R16 , D4) ) ) *' R22 ) ) = ( Seg R7 ) by L146 , FINSEQ_1:def 3;
L148: (for B15 being  natural number holds (B15 in ( dom ( ( R16 . ( Val_S (R16 , D4) ) ) *' R22 ) ) implies ( ( ( R16 . ( Val_S (R16 , D4) ) ) *' R22 ) . B15 ) = ( ( R16 *' ( CQC_Subst (R22 , R25) ) ) . B15 )))
proof
let C15 being  natural number;
assume that
L149: C15 in ( dom ( ( R16 . ( Val_S (R16 , D4) ) ) *' R22 ) );
L150: (1 <= C15 & C15 <= R7) by L147 , L149 , FINSEQ_1:1;
reconsider D6 = C15 as (Element of ( NAT )) by ORDINAL1:def 12;
L151: D6 in ( Seg ( len R22 ) ) by L147 , L149 , CARD_1:def 7;
L152: D6 in ( dom R22 ) by L151 , FINSEQ_1:def 3;
reconsider D7 = ( R22 . D6 ) as (bound_QC-variable of R1) by L152 , L80;
L153:
now
assume L154: ( R22 . D6 ) in ( dom R25 );
L155: (( ( R16 . ( Val_S (R16 , D4) ) ) . ( R22 . D6 ) ) = ( ( Val_S (R16 , D4) ) . D7 ) & ( R22 . D6 ) in ( dom ( @ ( D4 `2 ) ) )) by L154 , L145 , L136 , SUBSTUT1:def 2;
L156: ( ( R16 . ( Val_S (R16 , D4) ) ) . ( R22 . D6 ) ) = ( R16 . ( ( @ ( D4 `2 ) ) . ( R22 . D6 ) ) ) by L155 , FUNCT_1:13;
L157: ( ( R16 . ( Val_S (R16 , D4) ) ) . ( R22 . D6 ) ) = ( R16 . ( ( D4 `2 ) . ( R22 . D6 ) ) ) by L156 , SUBSTUT1:def 2;
L158: ( ( ( R16 . ( Val_S (R16 , D4) ) ) *' R22 ) . D6 ) = ( ( R16 . ( Val_S (R16 , D4) ) ) . ( R22 . D6 ) ) by L150 , VALUAT_1:def 3;
L159: ( R16 . ( D5 . D6 ) ) = ( R16 . ( ( D4 `2 ) . ( R22 . D6 ) ) ) by L145 , L143 , L150 , L154 , SUBSTUT1:def 3;
thus L160: thesis by L159 , L150 , L157 , L158 , VALUAT_1:def 3;
end;
L161:
now
assume L162: (not ( R22 . D6 ) in ( dom R25 ));
L163: (( R16 . ( D5 . D6 ) ) = ( R16 . ( R22 . D6 ) ) & ( ( R16 . ( Val_S (R16 , D4) ) ) . ( R22 . D6 ) ) = ( R16 . D7 )) by L162 , L145 , L143 , L150 , L130 , SUBSTUT1:def 3;
L164: ( ( R16 *' D5 ) . D6 ) = ( R16 . ( D5 . D6 ) ) by L150 , VALUAT_1:def 3;
thus L165: thesis by L164 , L150 , L163 , VALUAT_1:def 3;
end;
thus L166: thesis by L161 , L153;
end;
L167: ( len ( R16 *' D5 ) ) = R7 by VALUAT_1:def 3;
thus L168: thesis by L167 , L146 , L148 , FINSEQ_2:9;
end;
theorem
L169: (for R1 being QC-alphabet holds (for R7 being (Element of ( NAT )) holds (for R20 being (QC-pred_symbol of R7 , R1) holds (for R22 being (CQC-variable_list of R7 , R1) holds (for R25 being (CQC_Substitution of R1) holds ( ( Sub_P (R20 , R22 , R25) ) `1 ) = ( R20 ! R22 ))))))
proof
let R1 being QC-alphabet;
let R7 being (Element of ( NAT ));
let R20 being (QC-pred_symbol of R7 , R1);
let R22 being (CQC-variable_list of R7 , R1);
let R25 being (CQC_Substitution of R1);
L170: ( Sub_P (R20 , R22 , R25) ) = [ ( R20 ! R22 ) , R25 ] by SUBSTUT1:9;
thus L171: thesis by L170 , MCART_1:7;
end;
theorem
L172: (for R1 being QC-alphabet holds (for R7 being (Element of ( NAT )) holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R20 being (QC-pred_symbol of R7 , R1) holds (for R22 being (CQC-variable_list of R7 , R1) holds (for R25 being (CQC_Substitution of R1) holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (R15 , R16 |= ( CQC_Sub ( Sub_P (R20 , R22 , R25) ) ) iff R15 , ( R16 . ( Val_S (R16 , ( Sub_P (R20 , R22 , R25) )) ) ) |= ( Sub_P (R20 , R22 , R25) ))))))))))
proof
let R1 being QC-alphabet;
let R7 being (Element of ( NAT ));
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
let R20 being (QC-pred_symbol of R7 , R1);
let R22 being (CQC-variable_list of R7 , R1);
let R25 being (CQC_Substitution of R1);
set D8 = ( Sub_P (R20 , R22 , R25) );
set D9 = ( CQC_Subst (R22 , R25) );
reconsider D10 = ( R20 ! D9 ) as (Element of ( CQC-WFF R1 ));
reconsider D11 = D9 as (CQC-variable_list of R7 , R1);
let R16 being (Element of ( Valuations_in (R1 , R14) ));
L173: (( ( Valid (D10 , R15) ) . R16 ) = ( TRUE ) iff ( R16 *' D11 ) in ( R15 . R20 )) by VALUAT_1:7;
L174: (( ( R16 . ( Val_S (R16 , D8) ) ) *' R22 ) in ( R15 . R20 ) iff ( ( Valid (( R20 ! R22 ) , R15) ) . ( R16 . ( Val_S (R16 , D8) ) ) ) = ( TRUE )) by VALUAT_1:7;
L175: (R15 , ( R16 . ( Val_S (R16 , D8) ) ) |= ( R20 ! R22 ) iff R15 , ( R16 . ( Val_S (R16 , D8) ) ) |= ( ( Sub_P (R20 , R22 , R25) ) `1 )) by L169;
L176: (R15 , R16 |= ( CQC_Sub ( Sub_P (R20 , R22 , R25) ) ) iff R15 , R16 |= D10) by L112;
thus L177: thesis by L176 , L173 , L174 , L175 , L70 , L142 , VALUAT_1:def 7;
end;
theorem
L178: (for R1 being QC-alphabet holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (( ( Sub_not R28 ) `1 ) = ( 'not' ( R28 `1 ) ) & ( ( Sub_not R28 ) `2 ) = ( R28 `2 ))))
proof
let R1 being QC-alphabet;
let R28 being (Element of ( CQC-Sub-WFF R1 ));
L179: ( Sub_not R28 ) = [ ( 'not' ( R28 `1 ) ) , ( R28 `2 ) ] by SUBSTUT1:def 20;
thus L180: thesis by L179 , MCART_1:7;
end;
definition
let R1 being QC-alphabet;
let R28 being (Element of ( CQC-Sub-WFF R1 ));
redefine func Sub_not R28 -> (Element of ( CQC-Sub-WFF R1 ));

coherence
proof
set D12 = { B16 where B16 is (Element of ( QC-Sub-WFF R1 )) : ( B16 `1 ) is (Element of ( CQC-WFF R1 )) };
L181: D12 = ( CQC-Sub-WFF R1 ) by SUBSTUT1:def 39;
L182: (for B17 being (Element of ( QC-Sub-WFF R1 )) holds (( B17 `1 ) is (Element of ( CQC-WFF R1 )) implies B17 in ( CQC-Sub-WFF R1 ))) by L181;
L183: ( 'not' ( R28 `1 ) ) in ( CQC-WFF R1 );
L184: ( ( Sub_not R28 ) `1 ) in ( CQC-WFF R1 ) by L183 , L178;
thus L185: thesis by L184 , L182;
end;
end;
theorem
L187: (for R1 being QC-alphabet holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds ((not R15 , ( R16 . ( Val_S (R16 , R28) ) ) |= R28) iff R15 , ( R16 . ( Val_S (R16 , R28) ) ) |= ( Sub_not R28 )))))))
proof
let R1 being QC-alphabet;
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R28 being (Element of ( CQC-Sub-WFF R1 ));
L188: ((not R15 , ( R16 . ( Val_S (R16 , R28) ) ) |= ( R28 `1 )) iff R15 , ( R16 . ( Val_S (R16 , R28) ) ) |= ( 'not' ( R28 `1 ) )) by VALUAT_1:17;
L189: (R15 , ( R16 . ( Val_S (R16 , R28) ) ) |= ( 'not' ( R28 `1 ) ) iff R15 , ( R16 . ( Val_S (R16 , R28) ) ) |= ( ( Sub_not R28 ) `1 )) by L178;
thus L190: thesis by L189 , L188 , L70;
end;
theorem
L191: (for R1 being QC-alphabet holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds ( Val_S (R16 , R28) ) = ( Val_S (R16 , ( Sub_not R28 )) )))))
proof
let R1 being QC-alphabet;
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R28 being (Element of ( CQC-Sub-WFF R1 ));
L192: ( Sub_not R28 ) = [ ( 'not' ( R28 `1 ) ) , ( R28 `2 ) ] by SUBSTUT1:def 20;
thus L193: thesis by L192 , MCART_1:7;
end;
theorem
L194: (for R1 being QC-alphabet holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds ((for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (R15 , R16 |= ( CQC_Sub R28 ) iff R15 , ( R16 . ( Val_S (R16 , R28) ) ) |= R28)) implies (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (R15 , R16 |= ( CQC_Sub ( Sub_not R28 ) ) iff R15 , ( R16 . ( Val_S (R16 , ( Sub_not R28 )) ) ) |= ( Sub_not R28 ))))))))
proof
let R1 being QC-alphabet;
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
let R28 being (Element of ( CQC-Sub-WFF R1 ));
assume L195: (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (R15 , R16 |= ( CQC_Sub R28 ) iff R15 , ( R16 . ( Val_S (R16 , R28) ) ) |= R28));
let R16 being (Element of ( Valuations_in (R1 , R14) ));
L196: (R15 , R16 |= ( 'not' ( CQC_Sub R28 ) ) iff (not R15 , R16 |= ( CQC_Sub R28 ))) by VALUAT_1:17;
L197: ((not R15 , ( R16 . ( Val_S (R16 , R28) ) ) |= R28) iff R15 , ( R16 . ( Val_S (R16 , R28) ) ) |= ( Sub_not R28 )) by L187;
thus L198: thesis by L197 , L195 , L196 , L191 , SUBSTUT1:29;
end;
definition
let R1 being QC-alphabet;
let R30 being (Element of ( CQC-Sub-WFF R1 ));
let R31 being (Element of ( CQC-Sub-WFF R1 ));
assume L199: ( R30 `2 ) = ( R31 `2 );
func CQCSub_& (R30 , R31) -> (Element of ( CQC-Sub-WFF R1 )) equals 
:L200: ( Sub_& (R30 , R31) );
coherence
proof
set D13 = { B18 where B18 is (Element of ( QC-Sub-WFF R1 )) : ( B18 `1 ) is (Element of ( CQC-WFF R1 )) };
L201: D13 = ( CQC-Sub-WFF R1 ) by SUBSTUT1:def 39;
L202: (for B19 being (Element of ( QC-Sub-WFF R1 )) holds (( B19 `1 ) is (Element of ( CQC-WFF R1 )) implies B19 in ( CQC-Sub-WFF R1 ))) by L201;
L203: ( Sub_& (R30 , R31) ) = [ ( ( R30 `1 ) '&' ( R31 `1 ) ) , ( R30 `2 ) ] by L199 , SUBSTUT1:def 21;
L204: ( ( Sub_& (R30 , R31) ) `1 ) = ( ( R30 `1 ) '&' ( R31 `1 ) ) by L203 , MCART_1:7;
thus L205: thesis by L204 , L202;
end;
end;
theorem
L207: (for R1 being QC-alphabet holds (for R30 being (Element of ( CQC-Sub-WFF R1 )) holds (for R31 being (Element of ( CQC-Sub-WFF R1 )) holds (( R30 `2 ) = ( R31 `2 ) implies (( ( CQCSub_& (R30 , R31) ) `1 ) = ( ( R30 `1 ) '&' ( R31 `1 ) ) & ( ( CQCSub_& (R30 , R31) ) `2 ) = ( R30 `2 ))))))
proof
let R1 being QC-alphabet;
let R30 being (Element of ( CQC-Sub-WFF R1 ));
let R31 being (Element of ( CQC-Sub-WFF R1 ));
assume L208: ( R30 `2 ) = ( R31 `2 );
L209: ( Sub_& (R30 , R31) ) = [ ( ( R30 `1 ) '&' ( R31 `1 ) ) , ( R30 `2 ) ] by L208 , SUBSTUT1:def 21;
L210: ( CQCSub_& (R30 , R31) ) = [ ( ( R30 `1 ) '&' ( R31 `1 ) ) , ( R30 `2 ) ] by L209 , L208 , L200;
thus L211: thesis by L210 , MCART_1:7;
end;
theorem
L212: (for R1 being QC-alphabet holds (for R30 being (Element of ( CQC-Sub-WFF R1 )) holds (for R31 being (Element of ( CQC-Sub-WFF R1 )) holds (( R30 `2 ) = ( R31 `2 ) implies ( ( CQCSub_& (R30 , R31) ) `2 ) = ( R30 `2 )))))
proof
let R1 being QC-alphabet;
let R30 being (Element of ( CQC-Sub-WFF R1 ));
let R31 being (Element of ( CQC-Sub-WFF R1 ));
assume L213: ( R30 `2 ) = ( R31 `2 );
L214: ( CQCSub_& (R30 , R31) ) = ( Sub_& (R30 , R31) ) by L213 , L200;
L215: ( CQCSub_& (R30 , R31) ) = [ ( ( R30 `1 ) '&' ( R31 `1 ) ) , ( R30 `2 ) ] by L214 , L213 , SUBSTUT1:def 21;
thus L216: thesis by L215 , MCART_1:7;
end;
theorem
L217: (for R1 being QC-alphabet holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R30 being (Element of ( CQC-Sub-WFF R1 )) holds (for R31 being (Element of ( CQC-Sub-WFF R1 )) holds (( R30 `2 ) = ( R31 `2 ) implies (( Val_S (R16 , R30) ) = ( Val_S (R16 , ( CQCSub_& (R30 , R31) )) ) & ( Val_S (R16 , R31) ) = ( Val_S (R16 , ( CQCSub_& (R30 , R31) )) )))))))) by L212;
theorem
L218: (for R1 being QC-alphabet holds (for R30 being (Element of ( CQC-Sub-WFF R1 )) holds (for R31 being (Element of ( CQC-Sub-WFF R1 )) holds (( R30 `2 ) = ( R31 `2 ) implies ( CQC_Sub ( CQCSub_& (R30 , R31) ) ) = ( ( CQC_Sub R30 ) '&' ( CQC_Sub R31 ) )))))
proof
let R1 being QC-alphabet;
let R30 being (Element of ( CQC-Sub-WFF R1 ));
let R31 being (Element of ( CQC-Sub-WFF R1 ));
assume L219: ( R30 `2 ) = ( R31 `2 );
L220: ( CQCSub_& (R30 , R31) ) = ( Sub_& (R30 , R31) ) by L219 , L200;
thus L221: thesis by L220 , L219 , SUBSTUT1:31;
end;
theorem
L222: (for R1 being QC-alphabet holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R30 being (Element of ( CQC-Sub-WFF R1 )) holds (for R31 being (Element of ( CQC-Sub-WFF R1 )) holds (( R30 `2 ) = ( R31 `2 ) implies ((R15 , ( R16 . ( Val_S (R16 , R30) ) ) |= R30 & R15 , ( R16 . ( Val_S (R16 , R31) ) ) |= R31) iff R15 , ( R16 . ( Val_S (R16 , ( CQCSub_& (R30 , R31) )) ) ) |= ( CQCSub_& (R30 , R31) )))))))))
proof
let R1 being QC-alphabet;
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R30 being (Element of ( CQC-Sub-WFF R1 ));
let R31 being (Element of ( CQC-Sub-WFF R1 ));
assume L223: ( R30 `2 ) = ( R31 `2 );
L224: ( Val_S (R16 , R30) ) = ( Val_S (R16 , ( CQCSub_& (R30 , R31) )) ) by L223 , L212;
L225: ((R15 , ( R16 . ( Val_S (R16 , R30) ) ) |= ( R30 `1 ) & R15 , ( R16 . ( Val_S (R16 , R30) ) ) |= ( R31 `1 )) iff R15 , ( R16 . ( Val_S (R16 , ( CQCSub_& (R30 , R31) )) ) ) |= ( ( R30 `1 ) '&' ( R31 `1 ) )) by L224 , VALUAT_1:18;
L226: (R15 , ( R16 . ( Val_S (R16 , ( CQCSub_& (R30 , R31) )) ) ) |= ( ( R30 `1 ) '&' ( R31 `1 ) ) iff R15 , ( R16 . ( Val_S (R16 , ( CQCSub_& (R30 , R31) )) ) ) |= ( ( CQCSub_& (R30 , R31) ) `1 )) by L223 , L207;
thus L227: thesis by L226 , L223 , L225 , L70;
end;
theorem
L228: (for R1 being QC-alphabet holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R30 being (Element of ( CQC-Sub-WFF R1 )) holds (for R31 being (Element of ( CQC-Sub-WFF R1 )) holds ((( R30 `2 ) = ( R31 `2 ) & (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (R15 , R16 |= ( CQC_Sub R30 ) iff R15 , ( R16 . ( Val_S (R16 , R30) ) ) |= R30)) & (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (R15 , R16 |= ( CQC_Sub R31 ) iff R15 , ( R16 . ( Val_S (R16 , R31) ) ) |= R31))) implies (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (R15 , R16 |= ( CQC_Sub ( CQCSub_& (R30 , R31) ) ) iff R15 , ( R16 . ( Val_S (R16 , ( CQCSub_& (R30 , R31) )) ) ) |= ( CQCSub_& (R30 , R31) )))))))))
proof
let R1 being QC-alphabet;
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
let R30 being (Element of ( CQC-Sub-WFF R1 ));
let R31 being (Element of ( CQC-Sub-WFF R1 ));
assume that
L229: ( R30 `2 ) = ( R31 `2 )
and
L230: ((for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (R15 , R16 |= ( CQC_Sub R30 ) iff R15 , ( R16 . ( Val_S (R16 , R30) ) ) |= R30)) & (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (R15 , R16 |= ( CQC_Sub R31 ) iff R15 , ( R16 . ( Val_S (R16 , R31) ) ) |= R31)));
let R16 being (Element of ( Valuations_in (R1 , R14) ));
L231: ((R15 , R16 |= ( CQC_Sub R30 ) & R15 , R16 |= ( CQC_Sub R31 )) iff (R15 , ( R16 . ( Val_S (R16 , R30) ) ) |= R30 & R15 , ( R16 . ( Val_S (R16 , R31) ) ) |= R31)) by L230;
L232: (R15 , R16 |= ( CQC_Sub ( CQCSub_& (R30 , R31) ) ) iff R15 , R16 |= ( ( CQC_Sub R30 ) '&' ( CQC_Sub R31 ) )) by L229 , L218;
thus L233: thesis by L232 , L229 , L231 , L222 , VALUAT_1:18;
end;
theorem
L234: (for R1 being QC-alphabet holds (for R36 being (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]) holds (for R37 being (second_Q_comp of R36) holds (R36 is  quantifiable implies (( ( Sub_All (R36 , R37) ) `1 ) = ( All (( R36 `2 ) , ( ( R36 `1 ) `1 )) ) & ( ( Sub_All (R36 , R37) ) `2 ) = R37)))))
proof
let R1 being QC-alphabet;
let R36 being (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]);
let R37 being (second_Q_comp of R36);
assume L235: R36 is  quantifiable;
L236: ( Sub_All (R36 , R37) ) = [ ( All (( R36 `2 ) , ( ( R36 `1 ) `1 )) ) , R37 ] by L235 , SUBSTUT1:def 24;
thus L237: thesis by L236 , MCART_1:7;
end;
definition
let R1 being QC-alphabet;
let C16 being (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]);
attr C16 is  CQC-WFF-like
means
:L238: ( C16 `1 ) in ( CQC-Sub-WFF R1 );
end;
registration
let R1 being QC-alphabet;
cluster  CQC-WFF-like for (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]);
existence
proof
set D14 = the (CQC_Substitution of R1);
set D15 = the (bound_QC-variable of R1);
set D16 = [ [ ( VERUM R1 ) , D14 ] , D15 ];
L240: ( VERUM R1 ) = <* [ ( 0 ) , ( 0 ) ] *> by QC_LANG1:def 14;
L241: [ <* [ ( 0 ) , ( 0 ) ] *> , D14 ] in ( QC-Sub-WFF R1 ) by SUBSTUT1:def 16;
reconsider D17 = [ ( VERUM R1 ) , D14 ] as (Element of ( QC-Sub-WFF R1 )) by L240 , SUBSTUT1:def 16;
L242: [ ( VERUM R1 ) , D14 ] in ( QC-Sub-WFF R1 ) by L241 , QC_LANG1:def 14;
reconsider D18 = D16 as (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]) by L242 , ZFMISC_1:87;
take D18;
set D19 = { B20 where B20 is (Element of ( QC-Sub-WFF R1 )) : ( B20 `1 ) is (Element of ( CQC-WFF R1 )) };
L243: D19 = ( CQC-Sub-WFF R1 ) by SUBSTUT1:def 39;
L244: ( D17 `1 ) is (Element of ( CQC-WFF R1 )) by MCART_1:7;
L245: D17 in ( CQC-Sub-WFF R1 ) by L244 , L243;
L246: ( D18 `1 ) in ( CQC-Sub-WFF R1 ) by L245 , MCART_1:7;
thus L247: thesis by L246 , L238;
end;
end;
definition
let R1 being QC-alphabet;
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R11 being (bound_QC-variable of R1);
redefine func [R28 , R11 ] ->  CQC-WFF-like (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]);

coherence
proof
L249: ( [ R28 , R11 ] `1 ) = R28;
thus L250: thesis by L249 , L238;
end;
end;
definition
let R1 being QC-alphabet;
let R38 being  CQC-WFF-like (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]);
redefine func R38 `1 -> (Element of ( CQC-Sub-WFF R1 ));

coherence by L238;
end;
definition
let R1 being QC-alphabet;
let R38 being  CQC-WFF-like (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]);
let R40 being (second_Q_comp of R38);
assume L253: R38 is  quantifiable;
func CQCSub_All (R38 , R40) -> (Element of ( CQC-Sub-WFF R1 )) equals 
:L254: ( Sub_All (R38 , R40) );
coherence
proof
set D20 = { B21 where B21 is (Element of ( QC-Sub-WFF R1 )) : ( B21 `1 ) is (Element of ( CQC-WFF R1 )) };
L255: D20 = ( CQC-Sub-WFF R1 ) by SUBSTUT1:def 39;
L256: (for B22 being (Element of ( QC-Sub-WFF R1 )) holds (( B22 `1 ) is (Element of ( CQC-WFF R1 )) implies B22 in ( CQC-Sub-WFF R1 ))) by L255;
L257: ( All (( R38 `2 ) , ( ( R38 `1 ) `1 )) ) in ( CQC-WFF R1 );
L258: ( ( Sub_All (R38 , R40) ) `1 ) in ( CQC-WFF R1 ) by L257 , L253 , L234;
thus L259: thesis by L258 , L256;
end;
end;
theorem
L261: (for R1 being QC-alphabet holds (for R38 being  CQC-WFF-like (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]) holds (for R40 being (second_Q_comp of R38) holds (R38 is  quantifiable implies ( CQCSub_All (R38 , R40) ) is  Sub_universal))))
proof
let R1 being QC-alphabet;
let R38 being  CQC-WFF-like (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]);
let R40 being (second_Q_comp of R38);
assume L262: R38 is  quantifiable;
L263: ( Sub_All (R38 , R40) ) is  Sub_universal by L262 , SUBSTUT1:14;
thus L264: thesis by L263 , L262 , L254;
end;
definition
let R1 being QC-alphabet;
let R28 being (Element of ( CQC-Sub-WFF R1 ));
assume that
L265: R28 is  Sub_universal;
func CQCSub_the_scope_of R28 -> (Element of ( CQC-Sub-WFF R1 )) equals 
:L266: ( Sub_the_scope_of R28 );
coherence
proof
consider C17 being (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]), C18 being (second_Q_comp of C17) such that L267: R28 = ( Sub_All (C17 , C18) ) and L268: ( C17 `1 ) = ( Sub_the_scope_of R28 ) and L269: C17 is  quantifiable by L265 , SUBSTUT1:def 34;
set D21 = { B23 where B23 is (Element of ( QC-Sub-WFF R1 )) : ( B23 `1 ) is (Element of ( CQC-WFF R1 )) };
L270: D21 = ( CQC-Sub-WFF R1 ) by SUBSTUT1:def 39;
L271: (for B24 being (Element of ( QC-Sub-WFF R1 )) holds (( B24 `1 ) is (Element of ( CQC-WFF R1 )) implies B24 in ( CQC-Sub-WFF R1 ))) by L270;
L272: ( R28 `1 ) = ( All (( C17 `2 ) , ( ( C17 `1 ) `1 )) ) by L267 , L269 , L234;
L273: ( ( C17 `1 ) `1 ) is (Element of ( CQC-WFF R1 )) by L272 , CQC_LANG:13;
thus L274: thesis by L273 , L271 , L268;
end;
end;
definition
let R1 being QC-alphabet;
let R30 being (Element of ( CQC-Sub-WFF R1 ));
let R9 being (Element of ( CQC-WFF R1 ));
assume that
L276: R30 is  Sub_universal
and
L277: R9 = ( CQC_Sub ( CQCSub_the_scope_of R30 ) );
func CQCQuant (R30 , R9) -> (Element of ( CQC-WFF R1 )) equals 
:L278: ( Quant (R30 , R9) );
coherence
proof
L279: ( CQCSub_the_scope_of R30 ) = ( Sub_the_scope_of R30 ) by L276 , L266;
L280: ( CQC_Sub R30 ) = ( Quant (R30 , R9) ) by L279 , L276 , L277 , SUBSTUT1:32;
thus L281: thesis by L280;
end;
end;
theorem
L283: (for R1 being QC-alphabet holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (R28 is  Sub_universal implies ( CQC_Sub R28 ) = ( CQCQuant (R28 , ( CQC_Sub ( CQCSub_the_scope_of R28 ) )) ))))
proof
let R1 being QC-alphabet;
let R28 being (Element of ( CQC-Sub-WFF R1 ));
assume L284: R28 is  Sub_universal;
L285: ( CQCSub_the_scope_of R28 ) = ( Sub_the_scope_of R28 ) by L284 , L266;
L286: ( CQCQuant (R28 , ( CQC_Sub ( CQCSub_the_scope_of R28 ) )) ) = ( Quant (R28 , ( CQC_Sub ( Sub_the_scope_of R28 ) )) ) by L285 , L284 , L278;
thus L287: thesis by L286 , L284 , SUBSTUT1:32;
end;
theorem
L288: (for R1 being QC-alphabet holds (for R38 being  CQC-WFF-like (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]) holds (for R40 being (second_Q_comp of R38) holds (R38 is  quantifiable implies ( CQCSub_the_scope_of ( CQCSub_All (R38 , R40) ) ) = ( R38 `1 )))))
proof
let R1 being QC-alphabet;
let R38 being  CQC-WFF-like (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]);
let R40 being (second_Q_comp of R38);
assume L289: R38 is  quantifiable;
L290: ( CQCSub_All (R38 , R40) ) = ( Sub_All (R38 , R40) ) by L289 , L254;
L291: ( CQCSub_All (R38 , R40) ) is  Sub_universal by L290 , L289 , SUBSTUT1:14;
L292: ( CQCSub_the_scope_of ( CQCSub_All (R38 , R40) ) ) = ( Sub_the_scope_of ( Sub_All (R38 , R40) ) ) by L291 , L290 , L266;
thus L293: thesis by L292 , L289 , SUBSTUT1:21;
end;
begin
theorem
L294: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds ([ R28 , R11 ] is  quantifiable implies (( CQCSub_the_scope_of ( CQCSub_All ([ R28 , R11 ] , R39) ) ) = R28 & ( CQCQuant (( CQCSub_All ([ R28 , R11 ] , R39) ) , ( CQC_Sub ( CQCSub_the_scope_of ( CQCSub_All ([ R28 , R11 ] , R39) ) ) )) ) = ( CQCQuant (( CQCSub_All ([ R28 , R11 ] , R39) ) , ( CQC_Sub R28 )) )))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
assume L295: [ R28 , R11 ] is  quantifiable;
L296: ( CQCSub_the_scope_of ( CQCSub_All ([ R28 , R11 ] , R39) ) ) = ( [ R28 , R11 ] `1 ) by L295 , L288;
thus L297: thesis by L296;
end;
theorem
L298: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds ([ R28 , R11 ] is  quantifiable implies ( CQCQuant (( CQCSub_All ([ R28 , R11 ] , R39) ) , ( CQC_Sub R28 )) ) = ( All (( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) , ( CQC_Sub R28 )) ))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
set D22 = ( CQCSub_All ([ R28 , R11 ] , R39) );
set D23 = ( CQC_Sub ( CQCSub_the_scope_of D22 ) );
L299: ( Quant (D22 , D23) ) = ( All (( S_Bound ( @ D22 ) ) , D23) ) by SUBSTUT1:def 37;
assume L300: [ R28 , R11 ] is  quantifiable;
L301: ( CQCSub_All ([ R28 , R11 ] , R39) ) = ( Sub_All ([ R28 , R11 ] , R39) ) by L300 , L254;
L302: ( CQCSub_All ([ R28 , R11 ] , R39) ) is  Sub_universal by L301 , L300 , SUBSTUT1:14;
L303: ( CQCQuant (D22 , D23) ) = ( Quant (D22 , D23) ) by L302 , L278;
L304: ( CQCQuant (D22 , ( CQC_Sub R28 )) ) = ( CQCQuant (D22 , D23) ) by L300 , L294;
thus L305: thesis by L304 , L300 , L303 , L299 , L294;
end;
theorem
L306: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (R11 in ( dom ( R28 `2 ) ) implies ( R16 . ( ( @ ( R28 `2 ) ) . R11 ) ) = ( ( R16 . ( Val_S (R16 , R28) ) ) . R11 )))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R28 being (Element of ( CQC-Sub-WFF R1 ));
assume L307: R11 in ( dom ( R28 `2 ) );
L308: (( ( R16 . ( Val_S (R16 , R28) ) ) . R11 ) = ( ( Val_S (R16 , R28) ) . R11 ) & R11 in ( dom ( @ ( R28 `2 ) ) )) by L307 , L136 , SUBSTUT1:def 2;
thus L309: thesis by L308 , FUNCT_1:13;
end;
theorem
L310: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (R11 in ( dom ( @ ( R28 `2 ) ) ) implies ( ( @ ( R28 `2 ) ) . R11 ) is (bound_QC-variable of R1)))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R28 being (Element of ( CQC-Sub-WFF R1 ));
assume L311: R11 in ( dom ( @ ( R28 `2 ) ) );
L312: ( ( @ ( R28 `2 ) ) . R11 ) in ( rng ( @ ( R28 `2 ) ) ) by L311 , FUNCT_1:3;
thus L313: thesis by L312;
end;
theorem
L314: (for R1 being QC-alphabet holds [: ( QC-WFF R1 ) , ( vSUB R1 ) :] c= ( dom ( QSub R1 ) ))
proof
let R1 being QC-alphabet;
let R2 being set;
assume L315: R2 in [: ( QC-WFF R1 ) , ( vSUB R1 ) :];
consider R3 being set, R4 being set such that L316: R3 in ( QC-WFF R1 ) and L317: R4 in ( vSUB R1 ) and L318: R2 = [ R3 , R4 ] by L315 , ZFMISC_1:def 2;
reconsider D24 = R4 as (CQC_Substitution of R1) by L317;
reconsider D25 = R3 as (Element of ( QC-WFF R1 )) by L316;
L319:
now
set D26 = ( {} );
set D27 = [ [ D25 , D24 ] , D26 ];
assume L320: (not D25 is  universal);
L321: D25 , D24 PQSub D26 by L320 , SUBSTUT1:def 14;
L322: D27 in ( QSub R1 ) by L321 , SUBSTUT1:def 15;
thus L323: thesis by L322 , L318 , FUNCT_1:1;
end;
L324:
now
set D28 = ( ExpandSub (( bound_in D25 ) , ( the_scope_of D25 ) , ( RestrictSub (( bound_in D25 ) , D25 , D24) )) );
set D29 = [ [ D25 , D24 ] , D28 ];
assume L325: D25 is  universal;
L326: D25 , D24 PQSub D28 by L325 , SUBSTUT1:def 14;
L327: D29 in ( QSub R1 ) by L326 , SUBSTUT1:def 15;
thus L328: thesis by L327 , L318 , FUNCT_1:1;
end;
thus L329: thesis by L324 , L319;
end;
theorem
L330: (for R1 being QC-alphabet holds (for R38 being  CQC-WFF-like (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]) holds (for R40 being (second_Q_comp of R38) holds (for R41 being (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]) holds (for R42 being (second_Q_comp of R41) holds ((R38 is  quantifiable & R41 is  quantifiable & ( Sub_All (R38 , R40) ) = ( Sub_All (R41 , R42) )) implies (( R38 `2 ) = ( R41 `2 ) & R40 = R42)))))))
proof
let R1 being QC-alphabet;
let R38 being  CQC-WFF-like (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]);
let R40 being (second_Q_comp of R38);
let R41 being (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]);
let R42 being (second_Q_comp of R41);
assume that
L331: R38 is  quantifiable
and
L332: (R41 is  quantifiable & ( Sub_All (R38 , R40) ) = ( Sub_All (R41 , R42) ));
L333: ( Sub_All (R38 , R40) ) = [ ( All (( R38 `2 ) , ( ( R38 `1 ) `1 )) ) , R40 ] by L331 , SUBSTUT1:def 24;
L334: [ ( All (( R38 `2 ) , ( ( R38 `1 ) `1 )) ) , R40 ] = [ ( All (( R41 `2 ) , ( ( R41 `1 ) `1 )) ) , R42 ] by L333 , L332 , SUBSTUT1:def 24;
L335: ( All (( R38 `2 ) , ( ( R38 `1 ) `1 )) ) = ( All (( R41 `2 ) , ( ( R41 `1 ) `1 )) ) by L334 , XTUPLE_0:1;
thus L336: thesis by L335 , L334 , QC_LANG2:5 , XTUPLE_0:1;
end;
theorem
L337: (for R1 being QC-alphabet holds (for R38 being  CQC-WFF-like (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]) holds (for R40 being (second_Q_comp of R38) holds (for R41 being (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]) holds (for R42 being (second_Q_comp of R41) holds ((R38 is  quantifiable & R41 is  quantifiable & ( CQCSub_All (R38 , R40) ) = ( Sub_All (R41 , R42) )) implies (( R38 `2 ) = ( R41 `2 ) & R40 = R42)))))))
proof
let R1 being QC-alphabet;
let R38 being  CQC-WFF-like (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]);
let R40 being (second_Q_comp of R38);
let R41 being (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]);
let R42 being (second_Q_comp of R41);
assume that
L338: R38 is  quantifiable
and
L339: R41 is  quantifiable
and
L340: ( CQCSub_All (R38 , R40) ) = ( Sub_All (R41 , R42) );
L341: ( Sub_All (R38 , R40) ) = ( Sub_All (R41 , R42) ) by L338 , L340 , L254;
thus L342: thesis by L341 , L338 , L339 , L330;
end;
theorem
L343: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds ([ R28 , R11 ] is  quantifiable implies ( Sub_the_bound_of ( CQCSub_All ([ R28 , R11 ] , R39) ) ) = R11)))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
set D30 = ( CQCSub_All ([ R28 , R11 ] , R39) );
assume L344: [ R28 , R11 ] is  quantifiable;
L345: D30 = ( Sub_All ([ R28 , R11 ] , R39) ) by L344 , L254;
L346: D30 is  Sub_universal by L345 , L344 , SUBSTUT1:14;
consider C19 being (Element of [: ( QC-Sub-WFF R1 ) , ( bound_QC-variables R1 ) :]), C20 being (second_Q_comp of C19) such that L347: D30 = ( Sub_All (C19 , C20) ) and L348: ( C19 `2 ) = ( Sub_the_bound_of D30 ) and L349: C19 is  quantifiable by L346 , SUBSTUT1:def 33;
L350: ( [ R28 , R11 ] `2 ) = ( C19 `2 ) by L344 , L347 , L349 , L337;
thus L351: thesis by L350 , L348;
end;
theorem
L352: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds (([ R28 , R11 ] is  quantifiable & R11 in ( rng ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) )) implies ((not ( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) in ( rng ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) )) & (not ( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) in ( Bound_Vars ( R28 `1 ) ))))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
set D31 = ( CQCSub_All ([ R28 , R11 ] , R39) );
assume that
L353: [ R28 , R11 ] is  quantifiable
and
L354: R11 in ( rng ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) );
L355: D31 = ( Sub_All ([ R28 , R11 ] , R39) ) by L353 , L254;
L356: ( D31 `1 ) = ( All (( [ R28 , R11 ] `2 ) , ( ( [ R28 , R11 ] `1 ) `1 )) ) by L355 , L353 , L234;
L357: ( D31 `1 ) = ( All (R11 , ( ( [ R28 , R11 ] `1 ) `1 )) ) by L356;
L358: ( bound_in ( D31 `1 ) ) = R11 by L357 , QC_LANG2:7;
set D32 = ( RestrictSub (( bound_in ( D31 `1 ) ) , ( D31 `1 ) , ( D31 `2 )) );
L359: ( Dom_Bound_Vars ( the_scope_of ( D31 `1 ) ) ) = { R32 where R32 is (QC-symbol of R1) : ( x. R32 ) in ( Bound_Vars ( the_scope_of ( D31 `1 ) ) ) } by SUBSTUT1:def 9;
L360: ( D31 `2 ) = R39 by L353 , L355 , L234;
L361: D32 = ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) by L360 , L357 , L358;
set D33 = ( ( Dom_Bound_Vars ( the_scope_of ( D31 `1 ) ) ) \/ ( Sub_Var D32 ) );
set D34 = ( upVar (D32 , ( the_scope_of ( D31 `1 ) )) );
L362: ( NSub (( the_scope_of ( D31 `1 ) ) , D32) ) = ( ( NAT ) \ D33 ) by SUBSTUT1:def 11;
reconsider D35 = ( ( NAT ) \ D33 ) as non  empty (Subset of ( QC-symbols R1 )) by L362;
L363: D34 in ( NSub (( the_scope_of ( D31 `1 ) ) , D32) )
proof
L364: ( upVar (D32 , ( the_scope_of ( D31 `1 ) )) ) = the (Element of ( NSub (( the_scope_of ( D31 `1 ) ) , D32) )) by SUBSTUT1:def 12;
thus L365: thesis by L364;
end;
L366: (( Dom_Bound_Vars ( the_scope_of ( D31 `1 ) ) ) c= ( ( Dom_Bound_Vars ( the_scope_of ( D31 `1 ) ) ) \/ ( Sub_Var D32 ) ) & D34 in ( ( NAT ) \ ( ( Dom_Bound_Vars ( the_scope_of ( D31 `1 ) ) ) \/ ( Sub_Var D32 ) ) )) by L363 , SUBSTUT1:def 11 , XBOOLE_1:7;
L367: (not D34 in ( Dom_Bound_Vars ( the_scope_of ( D31 `1 ) ) )) by L366 , XBOOLE_0:def 5;
L368: (not ( x. D34 ) in ( Bound_Vars ( the_scope_of ( D31 `1 ) ) )) by L367 , L359;
L369: ( D31 `1 ) = ( All (R11 , ( R28 `1 )) ) by L357;
L370: (not ( x. ( upVar (D32 , ( the_scope_of ( D31 `1 ) )) ) ) in ( Bound_Vars ( R28 `1 ) )) by L369 , L368 , QC_LANG2:7;
L371: (( Sub_Var D32 ) c= D33 & D34 in ( ( NAT ) \ ( ( Dom_Bound_Vars ( the_scope_of ( D31 `1 ) ) ) \/ ( Sub_Var D32 ) ) )) by L363 , SUBSTUT1:def 11 , XBOOLE_1:7;
L372: (not D34 in ( Sub_Var D32 )) by L371 , XBOOLE_0:def 5;
L373: ( Sub_Var D32 ) = { R32 where R32 is (QC-symbol of R1) : ( x. R32 ) in ( rng D32 ) } by SUBSTUT1:def 10;
L374: (not ( x. ( upVar (D32 , ( the_scope_of ( D31 `1 ) )) ) ) in ( rng D32 )) by L373 , L372;
L375: D31 = ( @ D31 ) by SUBSTUT1:def 35;
thus L376: thesis by L375 , L354 , L358 , L361 , L374 , L370 , SUBSTUT1:def 36;
end;
theorem
L377: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds (([ R28 , R11 ] is  quantifiable & (not R11 in ( rng ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) ))) implies (not ( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) in ( rng ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) )))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
set D36 = ( CQCSub_All ([ R28 , R11 ] , R39) );
assume that
L378: [ R28 , R11 ] is  quantifiable
and
L379: (not R11 in ( rng ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) ));
L380: D36 = ( Sub_All ([ R28 , R11 ] , R39) ) by L378 , L254;
L381: ( D36 `1 ) = ( All (( [ R28 , R11 ] `2 ) , ( ( [ R28 , R11 ] `1 ) `1 )) ) by L380 , L378 , L234;
L382: ( D36 `1 ) = ( All (R11 , ( ( [ R28 , R11 ] `1 ) `1 )) ) by L381;
set D37 = ( RestrictSub (( bound_in ( D36 `1 ) ) , ( D36 `1 ) , ( D36 `2 )) );
L383: D36 = ( @ D36 ) by SUBSTUT1:def 35;
L384: ( D36 `1 ) = ( All (R11 , ( ( [ R28 , R11 ] `1 ) `1 )) ) by L381;
L385: ( bound_in ( D36 `1 ) ) = R11 by L384 , QC_LANG2:7;
L386: ( D36 `2 ) = R39 by L378 , L380 , L234;
L387: (not ( bound_in ( D36 `1 ) ) in ( rng D37 )) by L386 , L379 , L385 , L382;
thus L388: thesis by L387 , L379 , L385 , L383 , SUBSTUT1:def 36;
end;
theorem
L389: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds ([ R28 , R11 ] is  quantifiable implies (not ( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) in ( rng ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) )))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
assume L390: [ R28 , R11 ] is  quantifiable;
L391: (R11 in ( rng ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) ) implies thesis) by L390 , L352;
thus L392: thesis by L391 , L390 , L377;
end;
theorem
L393: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds ([ R28 , R11 ] is  quantifiable implies ( R28 `2 ) = ( ExpandSub (R11 , ( R28 `1 ) , ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) )) ))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
set D38 = [ ( All (R11 , ( R28 `1 )) ) , R39 ];
set D39 = ( All (R11 , ( R28 `1 )) );
assume L394: [ R28 , R11 ] is  quantifiable;
L395: ( ( [ R28 , R11 ] `1 ) `2 ) = ( ( QSub R1 ) . [ ( All (( [ R28 , R11 ] `2 ) , ( ( [ R28 , R11 ] `1 ) `1 )) ) , R39 ] ) by L394 , SUBSTUT1:def 23;
L396: D38 in [: ( QC-WFF R1 ) , ( vSUB R1 ) :] by ZFMISC_1:def 2;
L397: [: ( QC-WFF R1 ) , ( vSUB R1 ) :] c= ( dom ( QSub R1 ) ) by L314;
L398: [ D38 , ( ( [ R28 , R11 ] `1 ) `2 ) ] in ( QSub R1 ) by L397 , L396 , L395 , FUNCT_1:1;
L399: [ D38 , ( R28 `2 ) ] in ( QSub R1 ) by L398;
consider C21 being (QC-formula of R1), R27 being (CQC_Substitution of R1), R3 being set such that L400: [ D38 , ( R28 `2 ) ] = [ [ C21 , R27 ] , R3 ] and L401: C21 , R27 PQSub R3 by L399 , SUBSTUT1:def 15;
L402: D38 = [ C21 , R27 ] by L400 , XTUPLE_0:1;
L403: (( All (R11 , ( R28 `1 )) ) = C21 & R39 = R27) by L402 , XTUPLE_0:1;
L404: D39 is  universal by QC_LANG1:def 21;
L405: ( bound_in D39 ) = R11 by L404 , QC_LANG1:def 27;
L406: ( R28 `2 ) = R3 by L400 , XTUPLE_0:1;
L407: ( R28 `2 ) = ( ExpandSub (( bound_in D39 ) , ( the_scope_of D39 ) , ( RestrictSub (( bound_in D39 ) , D39 , R39) )) ) by L406 , L401 , L403 , L404 , SUBSTUT1:def 14;
thus L408: thesis by L407 , L404 , L405 , QC_LANG1:def 28;
end;
theorem
L409: (for R1 being QC-alphabet holds ( still_not-bound_in ( VERUM R1 ) ) c= ( Bound_Vars ( VERUM R1 ) ))
proof
let R1 being QC-alphabet;
L410: ( Bound_Vars ( VERUM R1 ) ) = ( {} ) by SUBSTUT1:2;
thus L411: thesis by L410 , QC_LANG3:3;
end;
theorem
L412: (for R1 being QC-alphabet holds (for R7 being (Element of ( NAT )) holds (for R20 being (QC-pred_symbol of R7 , R1) holds (for R22 being (CQC-variable_list of R7 , R1) holds ( still_not-bound_in ( R20 ! R22 ) ) = ( Bound_Vars ( R20 ! R22 ) )))))
proof
let R1 being QC-alphabet;
let R7 being (Element of ( NAT ));
let R20 being (QC-pred_symbol of R7 , R1);
let R22 being (CQC-variable_list of R7 , R1);
set D40 = ( the_arguments_of ( R20 ! R22 ) );
L413: ( R20 ! R22 ) is  atomic by QC_LANG1:def 18;
consider C22 being (Element of ( NAT )), C23 being (QC-pred_symbol of C22 , R1), C24 being (QC-variable_list of C22 , R1) such that L414: D40 = C24 and L415: ( R20 ! R22 ) = ( C23 ! C24 ) by L413 , QC_LANG1:def 23;
L416: ( Bound_Vars ( R20 ! R22 ) ) = ( Bound_Vars D40 ) by L413 , SUBSTUT1:3;
L417: ( Bound_Vars ( R20 ! R22 ) ) = { ( D40 . R6 ) where R6 is (Element of ( NAT )) : (1 <= R6 & R6 <= ( len D40 ) & ( D40 . R6 ) in ( bound_QC-variables R1 )) } by L416 , SUBSTUT1:def 7;
L418: ( still_not-bound_in ( R20 ! R22 ) ) = ( still_not-bound_in R22 ) by QC_LANG3:5;
L419: ( still_not-bound_in ( R20 ! R22 ) ) = ( variables_in (R22 , ( bound_QC-variables R1 )) ) by L418 , QC_LANG3:2;
L420: (( ( <* C23 *> ^ C24 ) . 1 ) = C23 & ( ( <* R20 *> ^ R22 ) . 1 ) = R20) by FINSEQ_1:41;
L421: (( R20 ! R22 ) = ( <* R20 *> ^ R22 ) & ( C23 ! C24 ) = ( <* C23 *> ^ C24 )) by QC_LANG1:8;
L422: C24 = R22 by L421 , L415 , L420 , FINSEQ_1:33;
thus L423: thesis by L422 , L417 , L419 , L414 , QC_LANG3:def 1;
end;
theorem
L424: (for R1 being QC-alphabet holds (for R9 being (Element of ( CQC-WFF R1 )) holds (( still_not-bound_in R9 ) c= ( Bound_Vars R9 ) implies ( still_not-bound_in ( 'not' R9 ) ) c= ( Bound_Vars ( 'not' R9 ) ))))
proof
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
L425: ( 'not' R9 ) is  negative by QC_LANG1:def 19;
L426: ( Bound_Vars ( 'not' R9 ) ) = ( Bound_Vars ( the_argument_of ( 'not' R9 ) ) ) by L425 , SUBSTUT1:4;
L427: ( Bound_Vars ( 'not' R9 ) ) = ( Bound_Vars R9 ) by L426 , QC_LANG2:1;
assume L428: ( still_not-bound_in R9 ) c= ( Bound_Vars R9 );
thus L429: thesis by L428 , L427 , QC_LANG3:7;
end;
theorem
L430: (for R1 being QC-alphabet holds (for R9 being (Element of ( CQC-WFF R1 )) holds (for R10 being (Element of ( CQC-WFF R1 )) holds ((( still_not-bound_in R9 ) c= ( Bound_Vars R9 ) & ( still_not-bound_in R10 ) c= ( Bound_Vars R10 )) implies ( still_not-bound_in ( R9 '&' R10 ) ) c= ( Bound_Vars ( R9 '&' R10 ) )))))
proof
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
let R10 being (Element of ( CQC-WFF R1 ));
L431: ( still_not-bound_in ( R9 '&' R10 ) ) = ( ( still_not-bound_in R9 ) \/ ( still_not-bound_in R10 ) ) by QC_LANG3:10;
L432: ( R9 '&' R10 ) is  conjunctive by QC_LANG1:def 20;
L433: ( Bound_Vars ( R9 '&' R10 ) ) = ( ( Bound_Vars ( the_left_argument_of ( R9 '&' R10 ) ) ) \/ ( Bound_Vars ( the_right_argument_of ( R9 '&' R10 ) ) ) ) by L432 , SUBSTUT1:5;
L434: ( Bound_Vars ( R9 '&' R10 ) ) = ( ( Bound_Vars R9 ) \/ ( Bound_Vars ( the_right_argument_of ( R9 '&' R10 ) ) ) ) by L433 , QC_LANG2:4;
L435: ( Bound_Vars ( R9 '&' R10 ) ) = ( ( Bound_Vars R9 ) \/ ( Bound_Vars R10 ) ) by L434 , QC_LANG2:4;
assume L436: (( still_not-bound_in R9 ) c= ( Bound_Vars R9 ) & ( still_not-bound_in R10 ) c= ( Bound_Vars R10 ));
thus L437: thesis by L436 , L435 , L431 , XBOOLE_1:13;
end;
theorem
L438: (for R1 being QC-alphabet holds (for R9 being (Element of ( CQC-WFF R1 )) holds (for R11 being (bound_QC-variable of R1) holds (( still_not-bound_in R9 ) c= ( Bound_Vars R9 ) implies ( still_not-bound_in ( All (R11 , R9) ) ) c= ( Bound_Vars ( All (R11 , R9) ) )))))
proof
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
let R11 being (bound_QC-variable of R1);
L439: ( still_not-bound_in ( All (R11 , R9) ) ) = ( ( still_not-bound_in R9 ) \ { R11 } ) by QC_LANG3:12;
L440: ( All (R11 , R9) ) is  universal by QC_LANG1:def 21;
L441: ( Bound_Vars ( All (R11 , R9) ) ) = ( ( Bound_Vars ( the_scope_of ( All (R11 , R9) ) ) ) \/ { ( bound_in ( All (R11 , R9) ) ) } ) by L440 , SUBSTUT1:6;
L442: ( Bound_Vars ( All (R11 , R9) ) ) = ( ( Bound_Vars R9 ) \/ { ( bound_in ( All (R11 , R9) ) ) } ) by L441 , QC_LANG2:7;
L443: (( ( Bound_Vars R9 ) \ { R11 } ) c= ( Bound_Vars R9 ) & ( Bound_Vars R9 ) c= ( Bound_Vars ( All (R11 , R9) ) )) by L442 , XBOOLE_1:7 , XBOOLE_1:36;
L444: ( ( Bound_Vars R9 ) \ { R11 } ) c= ( Bound_Vars ( All (R11 , R9) ) ) by L443 , XBOOLE_1:1;
assume L445: ( still_not-bound_in R9 ) c= ( Bound_Vars R9 );
L446: ( still_not-bound_in ( All (R11 , R9) ) ) c= ( ( Bound_Vars R9 ) \ { R11 } ) by L445 , L439 , XBOOLE_1:33;
thus L447: thesis by L446 , L444 , XBOOLE_1:1;
end;
theorem
L448: (for R1 being QC-alphabet holds (for R9 being (Element of ( CQC-WFF R1 )) holds ( still_not-bound_in R9 ) c= ( Bound_Vars R9 )))
proof
let R1 being QC-alphabet;
defpred S1[ (Element of ( QC-WFF R1 )) ] means ( still_not-bound_in $1 ) c= ( Bound_Vars $1 );
L449: ( Bound_Vars ( VERUM R1 ) ) = ( {} ) by SUBSTUT1:2;
L450: (for R9 being (Element of ( CQC-WFF R1 )) holds (for R10 being (Element of ( CQC-WFF R1 )) holds (for R11 being (bound_QC-variable of R1) holds (for R7 being (Element of ( NAT )) holds (for B25 being (CQC-variable_list of R7 , R1) holds (for B26 being (QC-pred_symbol of R7 , R1) holds (S1[ ( VERUM R1 ) ] & S1[ ( B26 ! B25 ) ] & (S1[ R9 ] implies S1[ ( 'not' R9 ) ]) & ((S1[ R9 ] & S1[ R10 ]) implies S1[ ( R9 '&' R10 ) ]) & (S1[ R9 ] implies S1[ ( All (R11 , R9) ) ])))))))) by L449 , L412 , L424 , L430 , L438 , QC_LANG3:3;
thus L451: (for R9 being (Element of ( CQC-WFF R1 )) holds S1[ R9 ]) from CQC_LANG:sch 1(L450);
end;
notation
let R1 being QC-alphabet;
let R14 being non  empty set;
let R11 being (bound_QC-variable of R1);
let C25 being (Element of R14);
synonym R11 | C25 for R11 .--> C25;
end;
definition
let R1 being QC-alphabet;
let R14 being non  empty set;
let R11 being (bound_QC-variable of R1);
let C26 being (Element of R14);
redefine func R11 | C26 -> (Val_Sub of R14 , R1);

coherence
proof
L453: (( dom ( R11 .--> C26 ) ) = { R11 } & ( rng ( R11 .--> C26 ) ) = { C26 }) by FUNCOP_1:8 , FUNCOP_1:13;
thus L454: thesis by L453 , RELSET_1:4;
end;
end;
theorem
L456: (for R1 being QC-alphabet holds (for R3 being set holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R43 being (Element of R14) holds (R11 <> R3 implies ( ( R16 . ( R11 | R43 ) ) . R3 ) = ( R16 . R3 ))))))))
proof
let R1 being QC-alphabet;
let R3 being set;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R43 being (Element of R14);
assume L457: R11 <> R3;
L458: (not R3 in ( dom ( { R11 } --> R43 ) )) by L457 , TARSKI:def 1;
thus L459: thesis by L458 , FUNCT_4:11;
end;
theorem
L460: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R12 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R43 being (Element of R14) holds (R11 = R12 implies ( ( R16 . ( R11 | R43 ) ) . R12 ) = R43)))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R12 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R43 being (Element of R14);
assume L461: R11 = R12;
L462: R12 in { R11 } by L461 , TARSKI:def 1;
L463: R12 in ( dom ( R11 .--> R43 ) ) by L462 , FUNCOP_1:13;
L464: ( ( R11 .--> R43 ) . R12 ) = R43 by L461 , FUNCOP_1:72;
thus L465: thesis by L464 , L463 , FUNCT_4:13;
end;
theorem
L466: (for R1 being QC-alphabet holds (for R9 being (Element of ( CQC-WFF R1 )) holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (R15 , R16 |= ( All (R11 , R9) ) iff (for R43 being (Element of R14) holds R15 , ( R16 . ( R11 | R43 ) ) |= R9))))))))
proof
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
let R16 being (Element of ( Valuations_in (R1 , R14) ));
thus L467: (R15 , R16 |= ( All (R11 , R9) ) implies (for R43 being (Element of R14) holds R15 , ( R16 . ( R11 | R43 ) ) |= R9))
proof
assume L468: R15 , R16 |= ( All (R11 , R9) );
let R43 being (Element of R14);
L469: (for R12 being (bound_QC-variable of R1) holds (R11 <> R12 implies ( ( R16 . ( R11 | R43 ) ) . R12 ) = ( R16 . R12 ))) by L456;
thus L470: thesis by L469 , L468 , VALUAT_1:29;
end;

thus L471: ((for R43 being (Element of R14) holds R15 , ( R16 . ( R11 | R43 ) ) |= R9) implies R15 , R16 |= ( All (R11 , R9) ))
proof
assume L472: (for R43 being (Element of R14) holds R15 , ( R16 . ( R11 | R43 ) ) |= R9);
L473: (for R17 being (Element of ( Valuations_in (R1 , R14) )) holds ((for R12 being (bound_QC-variable of R1) holds (R11 <> R12 implies ( R17 . R12 ) = ( R16 . R12 ))) implies R15 , R17 |= R9))
proof
let R17 being (Element of ( Valuations_in (R1 , R14) ));
assume that
L474: (for R12 being (bound_QC-variable of R1) holds (R11 <> R12 implies ( R17 . R12 ) = ( R16 . R12 )));
set D41 = ( R17 . R11 );
L475: (for R3 being set holds (R3 in ( dom R17 ) implies ( R17 . R3 ) = ( ( R16 . ( R11 | D41 ) ) . R3 )))
proof
let R3 being set;
assume L476: R3 in ( dom R17 );
reconsider D42 = R3 as (bound_QC-variable of R1) by L476;
L477:
now
assume L478: R11 <> D42;
L479: ( R17 . D42 ) = ( R16 . D42 ) by L478 , L474;
thus L480: thesis by L479 , L478 , L456;
end;
thus L481: thesis by L477 , L460;
end;
L482: ( R16 . ( R11 | D41 ) ) is (Element of ( Funcs (( bound_QC-variables R1 ) , R14) )) by VALUAT_1:def 1;
L483: (ex R18 being Function st (( R16 . ( R11 | D41 ) ) = R18 & ( dom R18 ) = ( bound_QC-variables R1 ) & ( rng R18 ) c= R14)) by L482 , FUNCT_2:def 2;
L484: R17 is (Element of ( Funcs (( bound_QC-variables R1 ) , R14) )) by VALUAT_1:def 1;
L485: (ex R18 being Function st (R17 = R18 & ( dom R18 ) = ( bound_QC-variables R1 ) & ( rng R18 ) c= R14)) by L484 , FUNCT_2:def 2;
L486: ( R16 . ( R11 | D41 ) ) = R17 by L485 , L475 , L483 , FUNCT_1:2;
thus L487: thesis by L486 , L472;
end;
thus L488: thesis by L473 , VALUAT_1:29;
end;

end;
definition
let R1 being QC-alphabet;
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R11 being (bound_QC-variable of R1);
let R39 being (second_Q_comp of [ R28 , R11 ]);
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
func NEx_Val (R16 , R28 , R11 , R39) -> (Val_Sub of R14 , R1) equals 
( ( @ ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) ) * R16 );
coherence;
end;
definition
let R1 being QC-alphabet;
let R14 being non  empty set;
let C27 , C28 being (Val_Sub of R14 , R1);
redefine func C27 +* C28 -> (Val_Sub of R14 , R1);

coherence
proof
L473: (( dom ( C27 +* C28 ) ) = ( ( dom C27 ) \/ ( dom C28 ) ) & ( rng ( C27 +* C28 ) ) c= R14) by FUNCT_4:def 1;
thus L474: thesis by L473;
end;
end;
theorem
L476: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds (([ R28 , R11 ] is  quantifiable & R11 in ( rng ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) )) implies ( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) = ( x. ( upVar (( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) , ( R28 `1 )) ) ))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
set D43 = ( CQCSub_All ([ R28 , R11 ] , R39) );
assume that
L477: [ R28 , R11 ] is  quantifiable
and
L478: R11 in ( rng ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) );
L479: D43 = ( Sub_All ([ R28 , R11 ] , R39) ) by L477 , L254;
L480: ( D43 `2 ) = R39 by L479 , L477 , L234;
L481: ( D43 `1 ) = ( All (( [ R28 , R11 ] `2 ) , ( ( [ R28 , R11 ] `1 ) `1 )) ) by L477 , L479 , L234;
L482: ( D43 `1 ) = ( All (R11 , ( ( [ R28 , R11 ] `1 ) `1 )) ) by L481;
L483: (( D43 `1 ) = ( All (R11 , ( R28 `1 )) ) & R11 = ( bound_in ( D43 `1 ) )) by L482 , QC_LANG2:7;
set D44 = ( RestrictSub (( bound_in ( D43 `1 ) ) , ( D43 `1 ) , ( D43 `2 )) );
L484: ( @ D43 ) = D43 by SUBSTUT1:def 35;
L485: ( D43 `1 ) = ( All (R11 , ( ( [ R28 , R11 ] `1 ) `1 )) ) by L481;
L486: ( bound_in ( D43 `1 ) ) = R11 by L485 , QC_LANG2:7;
L487: ( bound_in ( D43 `1 ) ) in ( rng D44 ) by L486 , L478 , L480 , L482;
L488: ( S_Bound ( @ D43 ) ) = ( x. ( upVar (D44 , ( the_scope_of ( D43 `1 ) )) ) ) by L487 , L484 , SUBSTUT1:def 36;
thus L489: thesis by L488 , L480 , L483 , QC_LANG2:7;
end;
theorem
L490: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds (([ R28 , R11 ] is  quantifiable & (not R11 in ( rng ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) ))) implies ( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) = R11)))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
set D45 = ( CQCSub_All ([ R28 , R11 ] , R39) );
assume that
L491: [ R28 , R11 ] is  quantifiable
and
L492: (not R11 in ( rng ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) ));
L493: D45 = ( Sub_All ([ R28 , R11 ] , R39) ) by L491 , L254;
L494: ( D45 `1 ) = ( All (( [ R28 , R11 ] `2 ) , ( ( [ R28 , R11 ] `1 ) `1 )) ) by L493 , L491 , L234;
L495: ( D45 `1 ) = ( All (R11 , ( ( [ R28 , R11 ] `1 ) `1 )) ) by L494;
set D46 = ( RestrictSub (( bound_in ( D45 `1 ) ) , ( D45 `1 ) , ( D45 `2 )) );
L496: ( @ D45 ) = D45 by SUBSTUT1:def 35;
L497: ( D45 `1 ) = ( All (R11 , ( ( [ R28 , R11 ] `1 ) `1 )) ) by L494;
L498: ( bound_in ( D45 `1 ) ) = R11 by L497 , QC_LANG2:7;
L499: ( D45 `2 ) = R39 by L491 , L493 , L234;
L500: (not ( bound_in ( D45 `1 ) ) in ( rng D46 )) by L499 , L492 , L498 , L495;
thus L501: thesis by L500 , L498 , L496 , SUBSTUT1:def 36;
end;
theorem
L502: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds ([ R28 , R11 ] is  quantifiable implies (for R43 being (Element of R14) holds (( Val_S (( R16 . ( ( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) | R43 ) ) , R28) ) = ( ( NEx_Val (( R16 . ( ( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) | R43 ) ) , R28 , R11 , R39) ) +* ( R11 | R43 ) ) & ( dom ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) ) misses { R11 })))))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
assume L503: [ R28 , R11 ] is  quantifiable;
set D47 = ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) );
let R43 being (Element of R14);
set D48 = ( CQCSub_All ([ R28 , R11 ] , R39) );
set D49 = ( S_Bound ( @ D48 ) );
L504: ( R28 `2 ) = ( ExpandSub (R11 , ( R28 `1 ) , ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) )) ) by L503 , L393;
L505:
now
reconsider D50 = { [ R11 , R11 ] } as Function;
assume L506: (not R11 in ( rng D47 ));
L507: ( R28 `2 ) = ( D47 \/ D50 ) by L506 , L504 , SUBSTUT1:def 13;
L508: ( @ ( R28 `2 ) ) = ( D47 \/ D50 ) by L507 , SUBSTUT1:def 2;
L509:
now
set D51 = ( All (R11 , ( R28 `1 )) );
set D52 = { R13 where R13 is (bound_QC-variable of R1) : (R13 in ( still_not-bound_in D51 ) & R13 is (Element of ( dom R39 )) & R13 <> R11 & R13 <> ( R39 . R13 )) };
assume L510: (not ( dom D47 ) misses { R11 });
L511: ( ( dom D47 ) /\ { R11 } ) <> ( {} ) by L510 , XBOOLE_0:def 7;
consider R3 being set such that L512: R3 in ( ( dom D47 ) /\ { R11 } ) by L511 , XBOOLE_0:def 1;
L513: D47 = ( R39 | D52 ) by SUBSTUT1:def 6;
L514: D47 = ( ( @ R39 ) | D52 ) by L513 , SUBSTUT1:def 2;
L515: ( @ D47 ) = ( ( @ R39 ) | D52 ) by L514 , SUBSTUT1:def 2;
L516: ( dom ( @ D47 ) ) = ( ( dom ( @ R39 ) ) /\ D52 ) by L515 , RELAT_1:61;
L517: ( dom ( @ D47 ) ) c= D52 by L516 , XBOOLE_1:17;
L518: R3 in ( dom D47 ) by L512 , XBOOLE_0:def 4;
L519: R3 in ( dom ( @ D47 ) ) by L518 , SUBSTUT1:def 2;
L520: R3 in D52 by L519 , L517;
L521: (ex R12 being (bound_QC-variable of R1) st (R12 = R3 & R12 in ( still_not-bound_in D51 ) & R12 is (Element of ( dom R39 )) & R12 <> R11 & R12 <> ( R39 . R12 ))) by L520;
L522: R3 in { R11 } by L512 , XBOOLE_0:def 4;
thus L523: contradiction by L522 , L521 , TARSKI:def 1;
end;
thus L524: ( dom D47 ) misses { R11 } by L509;
L525: ( dom { [ R11 , R11 ] } ) = { R11 } by RELAT_1:9;
L526: ( dom ( @ D47 ) ) misses ( dom D50 ) by L525 , L509 , SUBSTUT1:def 2;
L527: ( ( @ D47 ) \/ D50 ) = ( ( @ D47 ) +* D50 ) by L526 , FUNCT_4:31;
L528: ( R16 . ( D49 | R43 ) ) is (Element of ( Funcs (( bound_QC-variables R1 ) , R14) )) by VALUAT_1:def 1;
L529: (ex R18 being Function st (( R16 . ( D49 | R43 ) ) = R18 & ( dom R18 ) = ( bound_QC-variables R1 ) & ( rng R18 ) c= R14)) by L528 , FUNCT_2:def 2;
L530: ( rng D50 ) = { R11 } by RELAT_1:9;
L531: ( dom ( D50 * ( R16 . ( D49 | R43 ) ) ) ) = ( dom D50 ) by L530 , L529 , RELAT_1:27;
L532: ( dom ( D50 * ( R16 . ( D49 | R43 ) ) ) ) = { R11 } by L531 , RELAT_1:9;
L533: { [ R11 , R11 ] } = ( R11 .--> R11 ) by FUNCT_4:82;
L534: (for R3 being set holds (R3 in ( dom ( R11 | R43 ) ) implies ( ( R11 | R43 ) . R3 ) = ( ( D50 * ( R16 . ( D49 | R43 ) ) ) . R3 )))
proof
let R3 being set;
assume that
L535: R3 in ( dom ( R11 | R43 ) );
L536: ( ( D50 * ( R16 . ( D49 | R43 ) ) ) . R3 ) = ( ( R16 . ( D49 | R43 ) ) . ( D50 . R3 ) ) by L532 , L535 , FUNCT_1:12;
L537: R3 = R11 by L535 , TARSKI:def 1;
L538: (( ( R11 | R43 ) . R3 ) = R43 & ( D50 . R3 ) = R11) by L537 , L533 , FUNCOP_1:72;
thus L539: thesis by L538 , L503 , L506 , L536 , L460 , L490;
end;
L540: ( R11 | R43 ) = ( D50 * ( R16 . ( D49 | R43 ) ) ) by L534 , L532 , FUNCOP_1:13 , FUNCT_1:2;
L541: ( ( ( @ D47 ) +* D50 ) * ( R16 . ( D49 | R43 ) ) ) = ( ( ( @ D47 ) * ( R16 . ( D49 | R43 ) ) ) +* ( D50 * ( R16 . ( D49 | R43 ) ) ) ) by L529 , L530 , FUNCT_7:9;
thus L542: ( Val_S (( R16 . ( D49 | R43 ) ) , R28) ) = ( ( NEx_Val (( R16 . ( D49 | R43 ) ) , R28 , R11 , R39) ) +* ( R11 | R43 ) ) by L541 , L527 , L508 , L540 , SUBSTUT1:def 2;
end;
L543:
now
reconsider D53 = { [ R11 , ( x. ( upVar (D47 , ( R28 `1 )) ) ) ] } as Function;
assume L544: R11 in ( rng D47 );
L545:
now
set D54 = ( All (R11 , ( R28 `1 )) );
set D55 = { R13 where R13 is (bound_QC-variable of R1) : (R13 in ( still_not-bound_in D54 ) & R13 is (Element of ( dom R39 )) & R13 <> R11 & R13 <> ( R39 . R13 )) };
assume L546: ( dom D47 ) meets { R11 };
consider R3 being set such that L547: R3 in ( dom D47 ) and L548: R3 in { R11 } by L546 , XBOOLE_0:3;
L549: D47 = ( R39 | D55 ) by SUBSTUT1:def 6;
L550: D47 = ( ( @ R39 ) | D55 ) by L549 , SUBSTUT1:def 2;
L551: ( @ D47 ) = ( ( @ R39 ) | D55 ) by L550 , SUBSTUT1:def 2;
L552: ( dom ( @ D47 ) ) = ( ( dom ( @ R39 ) ) /\ D55 ) by L551 , RELAT_1:61;
L553: ( dom ( @ D47 ) ) c= D55 by L552 , XBOOLE_1:17;
L554: R3 in ( dom ( @ D47 ) ) by L547 , SUBSTUT1:def 2;
L555: R3 in D55 by L554 , L553;
L556: (ex R12 being (bound_QC-variable of R1) st (R12 = R3 & R12 in ( still_not-bound_in D54 ) & R12 is (Element of ( dom R39 )) & R12 <> R11 & R12 <> ( R39 . R12 ))) by L555;
thus L557: contradiction by L556 , L548 , TARSKI:def 1;
end;
thus L558: ( dom D47 ) misses { R11 } by L545;
L559: ( dom { [ R11 , ( x. ( upVar (D47 , ( R28 `1 )) ) ) ] } ) = { R11 } by RELAT_1:9;
L560: ( dom ( @ D47 ) ) misses ( dom D53 ) by L559 , L545 , SUBSTUT1:def 2;
L561: ( ( @ D47 ) \/ D53 ) = ( ( @ D47 ) +* D53 ) by L560 , FUNCT_4:31;
L562: ( R16 . ( D49 | R43 ) ) is (Element of ( Funcs (( bound_QC-variables R1 ) , R14) )) by VALUAT_1:def 1;
L563: (ex R18 being Function st (( R16 . ( D49 | R43 ) ) = R18 & ( dom R18 ) = ( bound_QC-variables R1 ) & ( rng R18 ) c= R14)) by L562 , FUNCT_2:def 2;
L564: ( rng D53 ) = { ( x. ( upVar (D47 , ( R28 `1 )) ) ) } by RELAT_1:9;
L565: ( dom ( D53 * ( R16 . ( D49 | R43 ) ) ) ) = ( dom D53 ) by L564 , L563 , RELAT_1:27;
L566: ( dom ( D53 * ( R16 . ( D49 | R43 ) ) ) ) = { R11 } by L565 , RELAT_1:9;
L567: { [ R11 , ( x. ( upVar (D47 , ( R28 `1 )) ) ) ] } = ( R11 .--> ( x. ( upVar (D47 , ( R28 `1 )) ) ) ) by FUNCT_4:82;
L568: (for R3 being set holds (R3 in ( dom ( R11 | R43 ) ) implies ( ( R11 | R43 ) . R3 ) = ( ( D53 * ( R16 . ( D49 | R43 ) ) ) . R3 )))
proof
let R3 being set;
assume that
L569: R3 in ( dom ( R11 | R43 ) );
L570: ( ( D53 * ( R16 . ( D49 | R43 ) ) ) . R3 ) = ( ( R16 . ( D49 | R43 ) ) . ( D53 . R3 ) ) by L566 , L569 , FUNCT_1:12;
L571: R3 = R11 by L569 , TARSKI:def 1;
L572: (( ( R11 | R43 ) . R3 ) = R43 & ( D53 . R3 ) = ( x. ( upVar (D47 , ( R28 `1 )) ) )) by L571 , L567 , FUNCOP_1:72;
thus L573: thesis by L572 , L503 , L544 , L570 , L460 , L476;
end;
L574: ( R11 | R43 ) = ( D53 * ( R16 . ( D49 | R43 ) ) ) by L568 , L566 , FUNCOP_1:13 , FUNCT_1:2;
L575: ( rng D53 ) = { ( x. ( upVar (D47 , ( R28 `1 )) ) ) } by RELAT_1:9;
L576: ( ( ( @ D47 ) +* D53 ) * ( R16 . ( D49 | R43 ) ) ) = ( ( ( @ D47 ) * ( R16 . ( D49 | R43 ) ) ) +* ( D53 * ( R16 . ( D49 | R43 ) ) ) ) by L575 , L563 , FUNCT_7:9;
L577: ( R28 `2 ) = ( D47 \/ D53 ) by L504 , L544 , SUBSTUT1:def 13;
L578: ( @ ( R28 `2 ) ) = ( D47 \/ D53 ) by L577 , SUBSTUT1:def 2;
thus L579: ( Val_S (( R16 . ( D49 | R43 ) ) , R28) ) = ( ( NEx_Val (( R16 . ( D49 | R43 ) ) , R28 , R11 , R39) ) +* ( R11 | R43 ) ) by L578 , L561 , L576 , L574 , SUBSTUT1:def 2;
end;
thus L580: thesis by L543 , L505;
end;
theorem
L581: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds ([ R28 , R11 ] is  quantifiable implies ((for R43 being (Element of R14) holds R15 , ( ( R16 . ( ( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) | R43 ) ) . ( Val_S (( R16 . ( ( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) | R43 ) ) , R28) ) ) |= R28) iff (for R43 being (Element of R14) holds R15 , ( ( R16 . ( ( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) | R43 ) ) . ( ( NEx_Val (( R16 . ( ( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) | R43 ) ) , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28))))))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
set D56 = ( CQCSub_All ([ R28 , R11 ] , R39) );
set D57 = ( S_Bound ( @ D56 ) );
assume L582: [ R28 , R11 ] is  quantifiable;
thus L583: ((for R43 being (Element of R14) holds R15 , ( ( R16 . ( D57 | R43 ) ) . ( Val_S (( R16 . ( D57 | R43 ) ) , R28) ) ) |= R28) implies (for R43 being (Element of R14) holds R15 , ( ( R16 . ( D57 | R43 ) ) . ( ( NEx_Val (( R16 . ( D57 | R43 ) ) , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28))
proof
assume L584: (for R43 being (Element of R14) holds R15 , ( ( R16 . ( D57 | R43 ) ) . ( Val_S (( R16 . ( D57 | R43 ) ) , R28) ) ) |= R28);
let R43 being (Element of R14);
L585: ( Val_S (( R16 . ( D57 | R43 ) ) , R28) ) = ( ( NEx_Val (( R16 . ( D57 | R43 ) ) , R28 , R11 , R39) ) +* ( R11 | R43 ) ) by L582 , L502;
thus L586: thesis by L585 , L584;
end;

thus L587: ((for R43 being (Element of R14) holds R15 , ( ( R16 . ( D57 | R43 ) ) . ( ( NEx_Val (( R16 . ( D57 | R43 ) ) , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28) implies (for R43 being (Element of R14) holds R15 , ( ( R16 . ( D57 | R43 ) ) . ( Val_S (( R16 . ( D57 | R43 ) ) , R28) ) ) |= R28))
proof
assume L588: (for R43 being (Element of R14) holds R15 , ( ( R16 . ( D57 | R43 ) ) . ( ( NEx_Val (( R16 . ( D57 | R43 ) ) , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28);
let R43 being (Element of R14);
L589: ( Val_S (( R16 . ( D57 | R43 ) ) , R28) ) = ( ( NEx_Val (( R16 . ( D57 | R43 ) ) , R28 , R11 , R39) ) +* ( R11 | R43 ) ) by L582 , L502;
thus L590: thesis by L589 , L588;
end;

end;
theorem
L588: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds ([ R28 , R11 ] is  quantifiable implies (for R43 being (Element of R14) holds ( NEx_Val (( R16 . ( ( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) | R43 ) ) , R28 , R11 , R39) ) = ( NEx_Val (R16 , R28 , R11 , R39) )))))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
assume L589: [ R28 , R11 ] is  quantifiable;
set D58 = ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) );
set D59 = ( NEx_Val (R16 , R28 , R11 , R39) );
set D60 = ( CQCSub_All ([ R28 , R11 ] , R39) );
let R43 being (Element of R14);
set D61 = ( S_Bound ( @ D60 ) );
set D62 = ( NEx_Val (( R16 . ( D61 | R43 ) ) , R28 , R11 , R39) );
L590: R16 is (Element of ( Funcs (( bound_QC-variables R1 ) , R14) )) by VALUAT_1:def 1;
L591: (ex R18 being Function st (R16 = R18 & ( dom R18 ) = ( bound_QC-variables R1 ) & ( rng R18 ) c= R14)) by L590 , FUNCT_2:def 2;
L592: ( rng ( @ D58 ) ) c= ( dom R16 ) by L591;
L593: ( dom D59 ) = ( dom ( @ D58 ) ) by L592 , RELAT_1:27;
L594: ( R16 . ( D61 | R43 ) ) is (Element of ( Funcs (( bound_QC-variables R1 ) , R14) )) by VALUAT_1:def 1;
L595: (ex R18 being Function st (( R16 . ( D61 | R43 ) ) = R18 & ( dom R18 ) = ( bound_QC-variables R1 ) & ( rng R18 ) c= R14)) by L594 , FUNCT_2:def 2;
L596: ( rng ( @ D58 ) ) c= ( dom ( R16 . ( D61 | R43 ) ) ) by L595;
L597: ( dom D62 ) = ( dom ( @ D58 ) ) by L596 , RELAT_1:27;
L598: (for R3 being set holds (R3 in ( dom D62 ) implies ( D62 . R3 ) = ( D59 . R3 )))
proof
let R3 being set;
assume that
L599: R3 in ( dom D62 );
L600: ( ( @ D58 ) . R3 ) in ( rng ( @ D58 ) ) by L597 , L599 , FUNCT_1:3;
reconsider D63 = ( ( @ D58 ) . R3 ) as (bound_QC-variable of R1) by L600;
L601: (not D61 in ( rng D58 )) by L589 , L389;
L602: D61 <> D63 by L601 , L600 , SUBSTUT1:def 2;
L603: ( ( R16 . ( D61 | R43 ) ) . D63 ) = ( R16 . D63 ) by L602 , L456;
L604: ( D62 . R3 ) = ( ( R16 . ( D61 | R43 ) ) . D63 ) by L599 , FUNCT_1:12;
thus L605: thesis by L604 , L597 , L593 , L599 , L603 , FUNCT_1:12;
end;
thus L606: thesis by L598 , L596 , L593 , FUNCT_1:2 , RELAT_1:27;
end;
theorem
L607: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds ([ R28 , R11 ] is  quantifiable implies ((for R43 being (Element of R14) holds R15 , ( ( R16 . ( ( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) | R43 ) ) . ( ( NEx_Val (( R16 . ( ( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) | R43 ) ) , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28) iff (for R43 being (Element of R14) holds R15 , ( ( R16 . ( ( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) | R43 ) ) . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28))))))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
set D64 = ( CQCSub_All ([ R28 , R11 ] , R39) );
set D65 = ( S_Bound ( @ D64 ) );
assume L608: [ R28 , R11 ] is  quantifiable;
thus L609: ((for R43 being (Element of R14) holds R15 , ( ( R16 . ( D65 | R43 ) ) . ( ( NEx_Val (( R16 . ( D65 | R43 ) ) , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28) implies (for R43 being (Element of R14) holds R15 , ( ( R16 . ( D65 | R43 ) ) . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28))
proof
assume L610: (for R43 being (Element of R14) holds R15 , ( ( R16 . ( D65 | R43 ) ) . ( ( NEx_Val (( R16 . ( D65 | R43 ) ) , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28);
let R43 being (Element of R14);
L611: ( NEx_Val (( R16 . ( D65 | R43 ) ) , R28 , R11 , R39) ) = ( NEx_Val (R16 , R28 , R11 , R39) ) by L608 , L588;
thus L612: thesis by L611 , L610;
end;

thus L613: ((for R43 being (Element of R14) holds R15 , ( ( R16 . ( D65 | R43 ) ) . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28) implies (for R43 being (Element of R14) holds R15 , ( ( R16 . ( D65 | R43 ) ) . ( ( NEx_Val (( R16 . ( D65 | R43 ) ) , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28))
proof
assume L614: (for R43 being (Element of R14) holds R15 , ( ( R16 . ( D65 | R43 ) ) . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28);
let R43 being (Element of R14);
L615: ( NEx_Val (( R16 . ( D65 | R43 ) ) , R28 , R11 , R39) ) = ( NEx_Val (R16 , R28 , R11 , R39) ) by L608 , L588;
thus L616: thesis by L615 , L614;
end;

end;
begin
theorem
L614: (for R1 being QC-alphabet holds (for R24 being (FinSequence of ( QC-variables R1 )) holds (( rng R24 ) c= ( bound_QC-variables R1 ) implies ( still_not-bound_in R24 ) = ( rng R24 ))))
proof
let R1 being QC-alphabet;
let R24 being (FinSequence of ( QC-variables R1 ));
L615: ( variables_in (R24 , ( bound_QC-variables R1 )) ) = { ( R24 . R7 ) where R7 is (Element of ( NAT )) : (1 <= R7 & R7 <= ( len R24 ) & ( R24 . R7 ) in ( bound_QC-variables R1 )) } by QC_LANG3:def 1;
assume L616: ( rng R24 ) c= ( bound_QC-variables R1 );
L617: ( rng R24 ) c= ( variables_in (R24 , ( bound_QC-variables R1 )) )
proof
let R3 being set;
assume L618: R3 in ( rng R24 );
consider C29 being  natural number such that L619: C29 in ( dom R24 ) and L620: ( R24 . C29 ) = R3 by L618 , FINSEQ_2:10;
L621: C29 in ( Seg ( len R24 ) ) by L619 , FINSEQ_1:def 3;
L622: (1 <= C29 & C29 <= ( len R24 )) by L621 , FINSEQ_1:1;
thus L623: thesis by L622 , L616 , L615 , L618 , L619 , L620;
end;
L624: ( variables_in (R24 , ( bound_QC-variables R1 )) ) c= ( rng R24 )
proof
let R3 being set;
assume L625: R3 in ( variables_in (R24 , ( bound_QC-variables R1 )) );
consider R7 being (Element of ( NAT )) such that L626: R3 = ( R24 . R7 ) and L627: (1 <= R7 & R7 <= ( len R24 )) and L628: ( R24 . R7 ) in ( bound_QC-variables R1 ) by L625 , L615;
L629: R7 in ( Seg ( len R24 ) ) by L627 , FINSEQ_1:1;
L630: R7 in ( dom R24 ) by L629 , FINSEQ_1:def 3;
thus L631: thesis by L630 , L626 , FUNCT_1:3;
end;
L632: ( variables_in (R24 , ( bound_QC-variables R1 )) ) = ( rng R24 ) by L624 , L617 , XBOOLE_0:def 10;
thus L633: thesis by L632 , QC_LANG3:2;
end;
theorem
L634: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R43 being (Element of R14) holds (( dom R16 ) = ( bound_QC-variables R1 ) & ( dom ( R11 | R43 ) ) = { R11 }))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R43 being (Element of R14);
L635: R16 is (Element of ( Funcs (( bound_QC-variables R1 ) , R14) )) by VALUAT_1:def 1;
L636: (ex R18 being Function st (R16 = R18 & ( dom R18 ) = ( bound_QC-variables R1 ) & ( rng R18 ) c= R14)) by L635 , FUNCT_2:def 2;
thus L637: ( dom R16 ) = ( bound_QC-variables R1 ) by L636;
thus L638: thesis by FUNCOP_1:13;
end;
theorem
L639: (for R1 being QC-alphabet holds (for R7 being (Element of ( NAT )) holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R22 being (CQC-variable_list of R7 , R1) holds ( R16 *' R22 ) = ( R22 * ( R16 | ( still_not-bound_in R22 ) ) ))))))
proof
let R1 being QC-alphabet;
let R7 being (Element of ( NAT ));
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R22 being (CQC-variable_list of R7 , R1);
L640: ( rng R22 ) c= ( bound_QC-variables R1 ) by RELAT_1:def 19;
L641: ( rng R22 ) = ( still_not-bound_in R22 ) by L640 , L614;
L642: ( dom ( R16 | ( still_not-bound_in R22 ) ) ) = ( ( dom R16 ) /\ ( still_not-bound_in R22 ) ) by RELAT_1:61;
L643: ( dom ( R16 | ( still_not-bound_in R22 ) ) ) = ( ( bound_QC-variables R1 ) /\ ( still_not-bound_in R22 ) ) by L642 , L634;
L644: ( rng R22 ) = ( dom ( R16 | ( still_not-bound_in R22 ) ) ) by L643 , L641 , XBOOLE_1:28;
L645: ( dom ( R22 * ( R16 | ( still_not-bound_in R22 ) ) ) ) = ( dom R22 ) by L644 , RELAT_1:27;
L646: ( dom ( R22 * ( R16 | ( still_not-bound_in R22 ) ) ) ) = ( Seg ( len R22 ) ) by L645 , FINSEQ_1:def 3;
reconsider D66 = ( R22 * ( R16 | ( still_not-bound_in R22 ) ) ) as FinSequence by L646 , FINSEQ_1:def 2;
L647: ( len D66 ) = ( len R22 ) by L646 , FINSEQ_1:def 3;
L648: ( len D66 ) = R7 by L647 , SUBSTUT1:34;
L649: ( dom D66 ) = ( Seg R7 ) by L648 , FINSEQ_1:def 3;
L650: (for B27 being  natural number holds (B27 in ( dom D66 ) implies ( D66 . B27 ) = ( ( R16 *' R22 ) . B27 )))
proof
L651: ( rng R22 ) c= ( bound_QC-variables R1 ) by RELAT_1:def 19;
let C30 being  natural number;
assume that
L652: C30 in ( dom D66 );
reconsider D67 = C30 as (Element of ( NAT )) by ORDINAL1:def 12;
L653: ( R22 . D67 ) in ( rng R22 ) by L645 , L652 , FUNCT_1:3;
L654: ( R22 . D67 ) in ( bound_QC-variables R1 ) by L653 , L651;
L655: ( R22 . D67 ) in ( dom R16 ) by L654 , L634;
L656: ( R22 . D67 ) in ( still_not-bound_in R22 ) by L641 , L645 , L652 , FUNCT_1:3;
L657: ( R22 . D67 ) in ( ( dom R16 ) /\ ( still_not-bound_in R22 ) ) by L656 , L655 , XBOOLE_0:def 4;
L658: ( ( R16 | ( still_not-bound_in R22 ) ) . ( R22 . D67 ) ) = ( R16 . ( R22 . D67 ) ) by L657 , FUNCT_1:48;
L659: (1 <= D67 & D67 <= R7) by L649 , L652 , FINSEQ_1:1;
L660: ( ( R16 | ( still_not-bound_in R22 ) ) . ( R22 . D67 ) ) = ( ( R16 *' R22 ) . D67 ) by L659 , L658 , VALUAT_1:def 3;
thus L661: thesis by L660 , L645 , L652 , FUNCT_1:13;
end;
L662: ( len ( R16 *' R22 ) ) = R7 by VALUAT_1:def 3;
thus L663: thesis by L662 , L648 , L650 , FINSEQ_2:9;
end;
theorem
L664: (for R1 being QC-alphabet holds (for R7 being (Element of ( NAT )) holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R20 being (QC-pred_symbol of R7 , R1) holds (for R22 being (CQC-variable_list of R7 , R1) holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R17 being (Element of ( Valuations_in (R1 , R14) )) holds (( R16 | ( still_not-bound_in ( R20 ! R22 ) ) ) = ( R17 | ( still_not-bound_in ( R20 ! R22 ) ) ) implies (R15 , R16 |= ( R20 ! R22 ) iff R15 , R17 |= ( R20 ! R22 )))))))))))
proof
let R1 being QC-alphabet;
let R7 being (Element of ( NAT ));
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
let R20 being (QC-pred_symbol of R7 , R1);
let R22 being (CQC-variable_list of R7 , R1);
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R17 being (Element of ( Valuations_in (R1 , R14) ));
assume L665: ( R16 | ( still_not-bound_in ( R20 ! R22 ) ) ) = ( R17 | ( still_not-bound_in ( R20 ! R22 ) ) );
L666: ( still_not-bound_in ( R20 ! R22 ) ) = ( still_not-bound_in R22 ) by QC_LANG3:5;
L667: (( R17 *' R22 ) in ( R15 . R20 ) iff ( ( Valid (( R20 ! R22 ) , R15) ) . R17 ) = ( TRUE )) by VALUAT_1:7;
L668: (( ( Valid (( R20 ! R22 ) , R15) ) . R16 ) = ( TRUE ) iff ( R16 *' R22 ) in ( R15 . R20 )) by VALUAT_1:7;
L669: (( R22 * ( R17 | ( still_not-bound_in R22 ) ) ) in ( R15 . R20 ) iff ( R17 *' R22 ) in ( R15 . R20 )) by L639;
thus L670: thesis by L669 , L665 , L666 , L668 , L667 , L639 , VALUAT_1:def 7;
end;
theorem
L671: (for R1 being QC-alphabet holds (for R9 being (Element of ( CQC-WFF R1 )) holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds ((for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R17 being (Element of ( Valuations_in (R1 , R14) )) holds (( R16 | ( still_not-bound_in R9 ) ) = ( R17 | ( still_not-bound_in R9 ) ) implies (R15 , R16 |= R9 iff R15 , R17 |= R9)))) implies (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R17 being (Element of ( Valuations_in (R1 , R14) )) holds (( R16 | ( still_not-bound_in ( 'not' R9 ) ) ) = ( R17 | ( still_not-bound_in ( 'not' R9 ) ) ) implies (R15 , R16 |= ( 'not' R9 ) iff R15 , R17 |= ( 'not' R9 ))))))))))
proof
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
assume L672: (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R17 being (Element of ( Valuations_in (R1 , R14) )) holds (( R16 | ( still_not-bound_in R9 ) ) = ( R17 | ( still_not-bound_in R9 ) ) implies (R15 , R16 |= R9 iff R15 , R17 |= R9))));
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R17 being (Element of ( Valuations_in (R1 , R14) ));
L673: ( still_not-bound_in ( 'not' R9 ) ) = ( still_not-bound_in R9 ) by QC_LANG3:7;
assume L674: ( R16 | ( still_not-bound_in ( 'not' R9 ) ) ) = ( R17 | ( still_not-bound_in ( 'not' R9 ) ) );
L675: ((not R15 , R16 |= R9) iff (not R15 , R17 |= R9)) by L674 , L672 , L673;
thus L676: thesis by L675 , VALUAT_1:17;
end;
theorem
L677: (for R1 being QC-alphabet holds (for R9 being (Element of ( CQC-WFF R1 )) holds (for R10 being (Element of ( CQC-WFF R1 )) holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (((for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R17 being (Element of ( Valuations_in (R1 , R14) )) holds (( R16 | ( still_not-bound_in R9 ) ) = ( R17 | ( still_not-bound_in R9 ) ) implies (R15 , R16 |= R9 iff R15 , R17 |= R9)))) & (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R17 being (Element of ( Valuations_in (R1 , R14) )) holds (( R16 | ( still_not-bound_in R10 ) ) = ( R17 | ( still_not-bound_in R10 ) ) implies (R15 , R16 |= R10 iff R15 , R17 |= R10))))) implies (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R17 being (Element of ( Valuations_in (R1 , R14) )) holds (( R16 | ( still_not-bound_in ( R9 '&' R10 ) ) ) = ( R17 | ( still_not-bound_in ( R9 '&' R10 ) ) ) implies (R15 , R16 |= ( R9 '&' R10 ) iff R15 , R17 |= ( R9 '&' R10 )))))))))))
proof
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
let R10 being (Element of ( CQC-WFF R1 ));
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
assume L678: ((for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R17 being (Element of ( Valuations_in (R1 , R14) )) holds (( R16 | ( still_not-bound_in R9 ) ) = ( R17 | ( still_not-bound_in R9 ) ) implies (R15 , R16 |= R9 iff R15 , R17 |= R9)))) & (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R17 being (Element of ( Valuations_in (R1 , R14) )) holds (( R16 | ( still_not-bound_in R10 ) ) = ( R17 | ( still_not-bound_in R10 ) ) implies (R15 , R16 |= R10 iff R15 , R17 |= R10)))));
set D68 = ( ( still_not-bound_in R9 ) \/ ( still_not-bound_in R10 ) );
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R17 being (Element of ( Valuations_in (R1 , R14) ));
L679: ( still_not-bound_in ( R9 '&' R10 ) ) = D68 by QC_LANG3:10;
assume L680: ( R16 | ( still_not-bound_in ( R9 '&' R10 ) ) ) = ( R17 | ( still_not-bound_in ( R9 '&' R10 ) ) );
L681: (( R16 | ( still_not-bound_in R9 ) ) = ( R17 | ( still_not-bound_in R9 ) ) & ( R16 | ( still_not-bound_in R10 ) ) = ( R17 | ( still_not-bound_in R10 ) )) by L680 , L679 , RELAT_1:153 , XBOOLE_1:7;
L682: ((R15 , R16 |= R9 & R15 , R16 |= R10) iff (R15 , R17 |= R9 & R15 , R17 |= R10)) by L681 , L678;
thus L683: thesis by L682 , VALUAT_1:18;
end;
theorem
L684: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R43 being (Element of R14) holds (for B28 being set holds (B28 c= ( bound_QC-variables R1 ) implies (( dom ( R16 | B28 ) ) = ( dom ( ( R16 . ( R11 | R43 ) ) | B28 ) ) & ( dom ( R16 | B28 ) ) = B28))))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R43 being (Element of R14);
let C31 being set;
L685: ( dom ( ( R16 . ( R11 | R43 ) ) | C31 ) ) = ( ( dom ( R16 . ( R11 | R43 ) ) ) /\ C31 ) by RELAT_1:61;
L686: ( dom ( R16 | C31 ) ) = ( ( dom R16 ) /\ C31 ) by RELAT_1:61;
L687: ( dom ( R16 | C31 ) ) = ( ( bound_QC-variables R1 ) /\ C31 ) by L686 , L634;
assume L688: C31 c= ( bound_QC-variables R1 );
thus L689: thesis by L688 , L687 , L685 , L634 , XBOOLE_1:28;
end;
theorem
L690: (for R1 being QC-alphabet holds (for R9 being (Element of ( CQC-WFF R1 )) holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R17 being (Element of ( Valuations_in (R1 , R14) )) holds (for R43 being (Element of R14) holds (( R16 | ( still_not-bound_in R9 ) ) = ( R17 | ( still_not-bound_in R9 ) ) implies ( ( R16 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) = ( ( R17 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) )))))))))
proof
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R17 being (Element of ( Valuations_in (R1 , R14) ));
let R43 being (Element of R14);
assume L691: ( R16 | ( still_not-bound_in R9 ) ) = ( R17 | ( still_not-bound_in R9 ) );
L692: ( dom ( R16 | ( still_not-bound_in R9 ) ) ) = ( dom ( ( R16 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) ) by L684;
L693: ( dom ( ( R16 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) ) = ( dom ( ( R17 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) ) by L692 , L691 , L684;
L694: (for R3 being set holds (R3 in ( dom ( ( R16 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) ) implies ( ( ( R16 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) . R3 ) = ( ( ( R17 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) . R3 )))
proof
let R3 being set;
assume that
L695: R3 in ( dom ( ( R16 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) );
L696: (( ( ( R16 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) . R3 ) = ( ( R16 . ( R11 | R43 ) ) . R3 ) & ( ( ( R17 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) . R3 ) = ( ( R17 . ( R11 | R43 ) ) . R3 )) by L693 , L695 , FUNCT_1:47;
L697: R3 in ( dom ( R16 | ( still_not-bound_in R9 ) ) ) by L695 , L684;
L698: ( ( R16 | ( still_not-bound_in R9 ) ) . R3 ) = ( R16 . R3 ) by L697 , FUNCT_1:47;
L699: R3 in ( dom ( R17 | ( still_not-bound_in R9 ) ) ) by L691 , L695 , L684;
L700: ( R16 . R3 ) = ( R17 . R3 ) by L699 , L691 , L698 , FUNCT_1:47;
L701:
now
assume L702: R3 <> R11;
L703: ( ( R16 . ( R11 | R43 ) ) . R3 ) = ( R16 . R3 ) by L702 , L456;
thus L704: thesis by L703 , L696 , L700 , L702 , L456;
end;
L705:
now
assume L706: R3 = R11;
L707: ( ( R16 . ( R11 | R43 ) ) . R3 ) = R43 by L706 , L460;
thus L708: thesis by L707 , L696 , L706 , L460;
end;
thus L709: thesis by L705 , L701;
end;
thus L710: thesis by L694 , L693 , FUNCT_1:2;
end;
theorem
L711: (for R1 being QC-alphabet holds (for R9 being (Element of ( CQC-WFF R1 )) holds (for R11 being (bound_QC-variable of R1) holds ( still_not-bound_in R9 ) c= ( ( still_not-bound_in ( All (R11 , R9) ) ) \/ { R11 } ))))
proof
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
let R11 being (bound_QC-variable of R1);
set D69 = ( ( still_not-bound_in R9 ) \ { R11 } );
L712: (( still_not-bound_in ( All (R11 , R9) ) ) = D69 & ( { R11 } \/ D69 ) = ( { R11 } \/ ( still_not-bound_in R9 ) )) by QC_LANG3:12 , XBOOLE_1:39;
thus L713: thesis by L712 , XBOOLE_1:7;
end;
theorem
L714: (for R1 being QC-alphabet holds (for R9 being (Element of ( CQC-WFF R1 )) holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R17 being (Element of ( Valuations_in (R1 , R14) )) holds (for R43 being (Element of R14) holds (( R16 | ( ( still_not-bound_in R9 ) \ { R11 } ) ) = ( R17 | ( ( still_not-bound_in R9 ) \ { R11 } ) ) implies ( ( R16 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) = ( ( R17 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) )))))))))
proof
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R17 being (Element of ( Valuations_in (R1 , R14) ));
let R43 being (Element of R14);
L715: ( dom ( ( R17 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) ) = ( still_not-bound_in R9 ) by L684;
L716: ( dom ( ( R16 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) ) = ( dom ( ( R17 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) ) by L715 , L684;
assume L717: ( R16 | ( ( still_not-bound_in R9 ) \ { R11 } ) ) = ( R17 | ( ( still_not-bound_in R9 ) \ { R11 } ) );
L718: (for R3 being set holds (R3 in ( dom ( ( R16 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) ) implies ( ( ( R16 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) . R3 ) = ( ( ( R17 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) . R3 )))
proof
let R3 being set;
assume that
L719: R3 in ( dom ( ( R16 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) );
L720: (( ( ( R16 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) . R3 ) = ( ( R16 . ( R11 | R43 ) ) . R3 ) & ( ( ( R17 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) . R3 ) = ( ( R17 . ( R11 | R43 ) ) . R3 )) by L716 , L719 , FUNCT_1:47;
L721:
now
assume L722: R3 <> R11;
L723: (not R3 in { R11 }) by L722 , TARSKI:def 1;
L724: R3 in ( still_not-bound_in R9 ) by L719 , L684;
L725: R3 in ( ( still_not-bound_in R9 ) \ { R11 } ) by L724 , L723 , XBOOLE_0:def 5;
L726: R3 in ( dom ( R17 | ( ( still_not-bound_in R9 ) \ { R11 } ) ) ) by L725 , L684;
L727: ( ( R17 | ( ( still_not-bound_in R9 ) \ { R11 } ) ) . R3 ) = ( R17 . R3 ) by L726 , FUNCT_1:47;
L728: (( ( R16 . ( R11 | R43 ) ) . R3 ) = ( R16 . R3 ) & ( ( R17 . ( R11 | R43 ) ) . R3 ) = ( R17 . R3 )) by L722 , L456;
L729: R3 in ( dom ( R16 | ( ( still_not-bound_in R9 ) \ { R11 } ) ) ) by L725 , L684;
thus L730: thesis by L729 , L717 , L720 , L727 , L728 , FUNCT_1:47;
end;
L731:
now
L732: ( ( ( R17 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) . R3 ) = ( ( R17 . ( R11 | R43 ) ) . R3 ) by L716 , L719 , FUNCT_1:47;
assume L733: R3 = R11;
L734: ( ( ( R16 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) . R3 ) = ( ( R16 . ( R11 | R43 ) ) . R3 ) by L719 , FUNCT_1:47;
L735: ( ( ( R16 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) . R3 ) = R43 by L734 , L733 , L460;
thus L736: thesis by L735 , L733 , L732 , L460;
end;
thus L737: thesis by L731 , L721;
end;
thus L738: thesis by L718 , L715 , L684 , FUNCT_1:2;
end;
theorem
L739: (for R1 being QC-alphabet holds (for R9 being (Element of ( CQC-WFF R1 )) holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds ((for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R17 being (Element of ( Valuations_in (R1 , R14) )) holds (( R16 | ( still_not-bound_in R9 ) ) = ( R17 | ( still_not-bound_in R9 ) ) implies (R15 , R16 |= R9 iff R15 , R17 |= R9)))) implies (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R17 being (Element of ( Valuations_in (R1 , R14) )) holds (( R16 | ( still_not-bound_in ( All (R11 , R9) ) ) ) = ( R17 | ( still_not-bound_in ( All (R11 , R9) ) ) ) implies (R15 , R16 |= ( All (R11 , R9) ) iff R15 , R17 |= ( All (R11 , R9) )))))))))))
proof
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
assume L740: (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R17 being (Element of ( Valuations_in (R1 , R14) )) holds (( R16 | ( still_not-bound_in R9 ) ) = ( R17 | ( still_not-bound_in R9 ) ) implies (R15 , R16 |= R9 iff R15 , R17 |= R9))));
set D70 = ( ( still_not-bound_in R9 ) \ { R11 } );
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R17 being (Element of ( Valuations_in (R1 , R14) ));
L741: ( R16 | ( still_not-bound_in ( All (R11 , R9) ) ) ) = ( R16 | D70 ) by QC_LANG3:12;
assume L742: ( R16 | ( still_not-bound_in ( All (R11 , R9) ) ) ) = ( R17 | ( still_not-bound_in ( All (R11 , R9) ) ) );
L743: ( R16 | D70 ) = ( R17 | D70 ) by L742 , L741 , QC_LANG3:12;
L744: ((for R43 being (Element of R14) holds R15 , ( R17 . ( R11 | R43 ) ) |= R9) implies (for R43 being (Element of R14) holds R15 , ( R16 . ( R11 | R43 ) ) |= R9))
proof
assume L745: (for R43 being (Element of R14) holds R15 , ( R17 . ( R11 | R43 ) ) |= R9);
let R43 being (Element of R14);
L746: ( ( R16 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) = ( ( R17 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) by L743 , L714;
L747: (R15 , ( R16 . ( R11 | R43 ) ) |= R9 iff R15 , ( R17 . ( R11 | R43 ) ) |= R9) by L746 , L740;
thus L748: thesis by L747 , L745;
end;
L749: ((for R43 being (Element of R14) holds R15 , ( R16 . ( R11 | R43 ) ) |= R9) implies (for R43 being (Element of R14) holds R15 , ( R17 . ( R11 | R43 ) ) |= R9))
proof
assume L750: (for R43 being (Element of R14) holds R15 , ( R16 . ( R11 | R43 ) ) |= R9);
let R43 being (Element of R14);
L751: ( ( R16 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) = ( ( R17 . ( R11 | R43 ) ) | ( still_not-bound_in R9 ) ) by L743 , L714;
L752: (R15 , ( R16 . ( R11 | R43 ) ) |= R9 iff R15 , ( R17 . ( R11 | R43 ) ) |= R9) by L751 , L740;
thus L753: thesis by L752 , L750;
end;
thus L754: thesis by L749 , L744 , L466;
end;
theorem
L755: (for R1 being QC-alphabet holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R9 being (Element of ( CQC-WFF R1 )) holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R17 being (Element of ( Valuations_in (R1 , R14) )) holds (( R16 | ( still_not-bound_in R9 ) ) = ( R17 | ( still_not-bound_in R9 ) ) implies (R15 , R16 |= R9 iff R15 , R17 |= R9))))))))
proof
let R1 being QC-alphabet;
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
defpred S2[ (Element of ( CQC-WFF R1 )) ] means (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R17 being (Element of ( Valuations_in (R1 , R14) )) holds (( R16 | ( still_not-bound_in $1 ) ) = ( R17 | ( still_not-bound_in $1 ) ) implies (R15 , R16 |= $1 iff R15 , R17 |= $1))));
L756: (for R9 being (Element of ( CQC-WFF R1 )) holds (for R10 being (Element of ( CQC-WFF R1 )) holds (for R11 being (bound_QC-variable of R1) holds (for R7 being (Element of ( NAT )) holds (for B29 being (CQC-variable_list of R7 , R1) holds (for B30 being (QC-pred_symbol of R7 , R1) holds (S2[ ( VERUM R1 ) ] & S2[ ( B30 ! B29 ) ] & (S2[ R9 ] implies S2[ ( 'not' R9 ) ]) & ((S2[ R9 ] & S2[ R10 ]) implies S2[ ( R9 '&' R10 ) ]) & (S2[ R9 ] implies S2[ ( All (R11 , R9) ) ])))))))) by L664 , L671 , L677 , L739 , VALUAT_1:32;
thus L757: (for R9 being (Element of ( CQC-WFF R1 )) holds S2[ R9 ]) from CQC_LANG:sch 1(L756);
end;
theorem
L758: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds (for R43 being (Element of R14) holds ([ R28 , R11 ] is  quantifiable implies ( ( ( R16 . ( ( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) | R43 ) ) . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) | ( still_not-bound_in ( R28 `1 ) ) ) = ( ( R16 . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) | ( still_not-bound_in ( R28 `1 ) ) )))))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
let R43 being (Element of R14);
set D71 = ( CQCSub_All ([ R28 , R11 ] , R39) );
set D72 = ( S_Bound ( @ D71 ) );
set D73 = ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) );
set D74 = ( ( R16 . ( D72 | R43 ) ) . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) );
set D75 = ( R16 . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) );
set D76 = ( still_not-bound_in ( R28 `1 ) );
L759: ( dom D74 ) = ( ( dom ( R16 . ( D72 | R43 ) ) ) \/ ( dom ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) ) by FUNCT_4:def 1;
L760: ( dom ( R16 . ( D72 | R43 ) ) ) = ( bound_QC-variables R1 ) by L634;
L761: ( dom ( R16 . ( D72 | R43 ) ) ) = ( dom R16 ) by L760 , L634;
L762: ( dom D74 ) = ( dom D75 ) by L761 , L759 , FUNCT_4:def 1;
assume L763: [ R28 , R11 ] is  quantifiable;
L764:
now
assume L765: (not R11 in ( rng D73 ));
L766: D72 = R11 by L765 , L763 , L490;
L767: (for R3 being set holds (R3 in ( dom D74 ) implies ( D74 . R3 ) = ( D75 . R3 )))
proof
let R3 being set;
assume that
L768: R3 in ( dom D74 );
L769:
now
assume L770: R3 <> D72;
L771:
now
L772: (not R3 in ( dom ( R11 | R43 ) )) by L766 , L770 , TARSKI:def 1;
assume L773: (not R3 in ( dom ( NEx_Val (R16 , R28 , R11 , R39) ) ));
L774: (not R3 in ( ( dom ( NEx_Val (R16 , R28 , R11 , R39) ) ) \/ ( dom ( R11 | R43 ) ) )) by L773 , L772 , XBOOLE_0:def 3;
L775: (not R3 in ( dom ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) )) by L774 , FUNCT_4:def 1;
reconsider D77 = R3 as (bound_QC-variable of R1) by L768;
L776: ( D74 . R3 ) = ( ( R16 . ( D72 | R43 ) ) . R3 ) by L775 , FUNCT_4:11;
L777: ( D74 . R3 ) = ( R16 . D77 ) by L776 , L770 , L456;
thus L778: thesis by L777 , L775 , FUNCT_4:11;
end;
L779:
now
L780: ( dom ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) = ( ( dom ( NEx_Val (R16 , R28 , R11 , R39) ) ) \/ ( dom ( R11 | R43 ) ) ) by FUNCT_4:def 1;
L781: ( dom ( NEx_Val (R16 , R28 , R11 , R39) ) ) c= ( dom ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) by L780 , XBOOLE_1:7;
assume L782: R3 in ( dom ( NEx_Val (R16 , R28 , R11 , R39) ) );
L783: ( D74 . R3 ) = ( ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) . R3 ) by L782 , L781 , FUNCT_4:13;
thus L784: thesis by L783 , L782 , L781 , FUNCT_4:13;
end;
thus L785: thesis by L779 , L771;
end;
L786:
now
assume L787: R3 = D72;
L788: R3 in { R11 } by L787 , L766 , TARSKI:def 1;
L789: R3 in ( dom ( R11 | R43 ) ) by L788 , L634;
L790: ( dom ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) = ( ( dom ( NEx_Val (R16 , R28 , R11 , R39) ) ) \/ ( dom ( R11 | R43 ) ) ) by FUNCT_4:def 1;
L791: ( dom ( R11 | R43 ) ) c= ( dom ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) by L790 , XBOOLE_1:7;
L792: ( D74 . R3 ) = ( ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) . R3 ) by L791 , L789 , FUNCT_4:13;
thus L793: thesis by L792 , L789 , L791 , FUNCT_4:13;
end;
thus L794: thesis by L786 , L769;
end;
thus L795: thesis by L767 , L762 , FUNCT_1:2;
end;
L796:
now
assume L797: R11 in ( rng D73 );
L798: ( dom ( D74 | D76 ) ) = ( ( ( dom ( R16 . ( D72 | R43 ) ) ) \/ ( dom ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) ) /\ D76 ) by L759 , RELAT_1:61;
L799: (for R3 being set holds (R3 in ( dom ( D74 | D76 ) ) implies ( ( D74 | D76 ) . R3 ) = ( ( D75 | D76 ) . R3 )))
proof
L800: D76 c= ( Bound_Vars ( R28 `1 ) ) by L448;
let R3 being set;
assume that
L801: R3 in ( dom ( D74 | D76 ) );
L802: R3 in D76 by L798 , L801 , XBOOLE_0:def 4;
L803: R3 <> D72 by L802 , L763 , L797 , L800 , L352;
L804: ( D75 | D76 ) = ( ( R16 | D76 ) +* ( ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) | D76 ) ) by FUNCT_4:71;
L805: ( D74 | D76 ) = ( ( ( R16 . ( D72 | R43 ) ) | D76 ) +* ( ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) | D76 ) ) by FUNCT_4:71;
L806: ( dom ( D74 | D76 ) ) = ( ( dom ( ( R16 . ( D72 | R43 ) ) | D76 ) ) \/ ( dom ( ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) | D76 ) ) ) by L805 , FUNCT_4:def 1;
L807:
now
assume L808: (not R3 in ( dom ( ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) | D76 ) ));
L809: R3 in ( dom ( ( R16 . ( D72 | R43 ) ) | D76 ) ) by L808 , L801 , L806 , XBOOLE_0:def 3;
L810: R3 in ( ( dom ( R16 . ( D72 | R43 ) ) ) /\ D76 ) by L809 , RELAT_1:61;
L811: R3 in D76 by L810 , XBOOLE_0:def 4;
L812: R3 in ( bound_QC-variables R1 ) by L801;
L813: R3 in ( dom R16 ) by L812 , L634;
L814: R3 in ( ( dom R16 ) /\ D76 ) by L813 , L811 , XBOOLE_0:def 4;
L815: ( ( D74 | D76 ) . R3 ) = ( ( ( R16 . ( D72 | R43 ) ) | D76 ) . R3 ) by L805 , L808 , FUNCT_4:11;
L816: ( ( D74 | D76 ) . R3 ) = ( ( R16 . ( D72 | R43 ) ) . R3 ) by L815 , L809 , FUNCT_1:47;
L817: ( ( D74 | D76 ) . R3 ) = ( R16 . R3 ) by L816 , L803 , L456;
L818: ( ( D75 | D76 ) . R3 ) = ( ( R16 | D76 ) . R3 ) by L804 , L808 , FUNCT_4:11;
thus L819: thesis by L818 , L817 , L814 , FUNCT_1:48;
end;
L820:
now
assume L821: R3 in ( dom ( ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) | D76 ) );
L822: ( ( D74 | D76 ) . R3 ) = ( ( ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) | D76 ) . R3 ) by L821 , L805 , FUNCT_4:13;
thus L823: thesis by L822 , L804 , L821 , FUNCT_4:13;
end;
thus L824: thesis by L820 , L807;
end;
L825: ( dom ( D75 | D76 ) ) = ( ( dom D74 ) /\ D76 ) by L762 , RELAT_1:61;
thus L826: thesis by L825 , L799 , FUNCT_1:2 , RELAT_1:61;
end;
thus L827: thesis by L796 , L764;
end;
theorem
L828: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds ([ R28 , R11 ] is  quantifiable implies ((for R43 being (Element of R14) holds R15 , ( ( R16 . ( ( S_Bound ( @ ( CQCSub_All ([ R28 , R11 ] , R39) ) ) ) | R43 ) ) . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28) iff (for R43 being (Element of R14) holds R15 , ( R16 . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28))))))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
set D78 = ( CQCSub_All ([ R28 , R11 ] , R39) );
set D79 = ( S_Bound ( @ D78 ) );
assume L829: [ R28 , R11 ] is  quantifiable;
thus L830: ((for R43 being (Element of R14) holds R15 , ( ( R16 . ( D79 | R43 ) ) . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28) implies (for R43 being (Element of R14) holds R15 , ( R16 . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28))
proof
set D80 = ( still_not-bound_in ( R28 `1 ) );
assume L831: (for R43 being (Element of R14) holds R15 , ( ( R16 . ( D79 | R43 ) ) . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28);
let R43 being (Element of R14);
set D81 = ( ( R16 . ( D79 | R43 ) ) . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) );
set D82 = ( R16 . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) );
L832: ( D81 | D80 ) = ( D82 | D80 ) by L829 , L758;
L833: (R15 , D81 |= ( R28 `1 ) iff R15 , D82 |= ( R28 `1 )) by L832 , L755;
L834: R15 , D81 |= R28 by L831;
thus L835: thesis by L834 , L833 , L70;
end;

thus L836: ((for R43 being (Element of R14) holds R15 , ( R16 . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28) implies (for R43 being (Element of R14) holds R15 , ( ( R16 . ( D79 | R43 ) ) . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28))
proof
set D83 = ( still_not-bound_in ( R28 `1 ) );
assume L837: (for R43 being (Element of R14) holds R15 , ( R16 . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28);
let R43 being (Element of R14);
set D84 = ( ( R16 . ( D79 | R43 ) ) . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) );
set D85 = ( R16 . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) );
L838: ( D84 | D83 ) = ( D85 | D83 ) by L829 , L758;
L839: (R15 , D84 |= ( R28 `1 ) iff R15 , D85 |= ( R28 `1 )) by L838 , L755;
L840: R15 , D85 |= R28 by L837;
thus L841: thesis by L840 , L839 , L70;
end;

end;
theorem
L837: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds ( dom ( NEx_Val (R16 , R28 , R11 , R39) ) ) = ( dom ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) )))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
L838: ( rng ( @ ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) ) ) c= ( bound_QC-variables R1 );
L839: ( rng ( @ ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) ) ) c= ( dom R16 ) by L838 , L634;
L840: ( dom ( NEx_Val (R16 , R28 , R11 , R39) ) ) = ( dom ( @ ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) ) ) by L839 , RELAT_1:27;
thus L841: thesis by L840 , SUBSTUT1:def 2;
end;
theorem
L842: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds ((for R43 being (Element of R14) holds R15 , ( R16 . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28) iff (for R43 being (Element of R14) holds R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= R28)))))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
thus L843: ((for R43 being (Element of R14) holds R15 , ( R16 . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28) implies (for R43 being (Element of R14) holds R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= R28))
proof
assume L844: (for R43 being (Element of R14) holds R15 , ( R16 . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28);
let R43 being (Element of R14);
L845: ( R16 . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) = ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) by FUNCT_4:14;
thus L846: thesis by L845 , L844;
end;

thus L847: ((for R43 being (Element of R14) holds R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= R28) implies (for R43 being (Element of R14) holds R15 , ( R16 . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28))
proof
assume L848: (for R43 being (Element of R14) holds R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= R28);
let R43 being (Element of R14);
L849: ( R16 . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) = ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) by FUNCT_4:14;
thus L850: thesis by L849 , L848;
end;

end;
theorem
L848: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds ((for R43 being (Element of R14) holds R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= R28) iff (for R43 being (Element of R14) holds R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= ( R28 `1 ))))))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
thus L849: ((for R43 being (Element of R14) holds R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= R28) implies (for R43 being (Element of R14) holds R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= ( R28 `1 )))
proof
assume L850: (for R43 being (Element of R14) holds R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= R28);
let R43 being (Element of R14);
L851: (R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= R28 iff R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= ( R28 `1 )) by L70;
thus L852: thesis by L851 , L850;
end;

thus L853: ((for R43 being (Element of R14) holds R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= ( R28 `1 )) implies (for R43 being (Element of R14) holds R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= R28))
proof
assume L854: (for R43 being (Element of R14) holds R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= ( R28 `1 ));
let R43 being (Element of R14);
L855: (R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= R28 iff R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= ( R28 `1 )) by L70;
thus L856: thesis by L855 , L854;
end;

end;
theorem
L854: (for R1 being QC-alphabet holds (for R7 being (Element of ( NAT )) holds (for R14 being non  empty set holds (for R22 being (CQC-variable_list of R7 , R1) holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R33 being (Val_Sub of R14 , R1) holds (for R34 being (Val_Sub of R14 , R1) holds (for R35 being (Val_Sub of R14 , R1) holds (((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in R22 )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 )) implies ( ( R16 . R33 ) *' R22 ) = ( ( R16 . ( ( R33 +* R34 ) +* R35 ) ) *' R22 ))))))))))
proof
let R1 being QC-alphabet;
let R7 being (Element of ( NAT ));
let R14 being non  empty set;
let R22 being (CQC-variable_list of R7 , R1);
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R33 being (Val_Sub of R14 , R1);
let R34 being (Val_Sub of R14 , R1);
let R35 being (Val_Sub of R14 , R1);
assume that
L855: (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in R22 ))))
and
L856: (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 )))
and
L857: ( dom R33 ) misses ( dom R35 );
set D86 = ( ( R16 . ( ( R33 +* R34 ) +* R35 ) ) *' R22 );
set D87 = ( ( R16 . R33 ) *' R22 );
L858: ( len D87 ) = R7 by VALUAT_1:def 3;
L859: ( dom D87 ) = ( Seg R7 ) by L858 , FINSEQ_1:def 3;
L860: ( len D86 ) = R7 by VALUAT_1:def 3;
L861: (for B31 being  natural number holds (B31 in ( dom D87 ) implies ( D87 . B31 ) = ( D86 . B31 )))
proof
let C32 being  natural number;
assume that
L862: C32 in ( dom D87 );
L863: C32 in ( dom D86 ) by L860 , L859 , L862 , FINSEQ_1:def 3;
reconsider D88 = C32 as (Element of ( NAT )) by ORDINAL1:def 12;
L864: ( dom D86 ) c= ( dom R22 ) by RELAT_1:25;
L865:
now
reconsider D89 = ( R22 . D88 ) as (bound_QC-variable of R1) by L863 , L864 , L80;
assume L866: ( R22 . D88 ) in ( dom ( ( R33 +* R34 ) +* R35 ) );
L867:
now
L868:
now
L869: ( len R22 ) = R7 by SUBSTUT1:34;
L870: D88 <= ( len R22 ) by L869 , L859 , L862 , FINSEQ_1:1;
L871: 1 <= D88 by L859 , L862 , FINSEQ_1:1;
L872: D89 in { ( R22 . R8 ) where R8 is (Element of ( NAT )) : (1 <= R8 & R8 <= ( len R22 ) & ( R22 . R8 ) in ( bound_QC-variables R1 )) } by L871 , L870;
L873: D89 in ( variables_in (R22 , ( bound_QC-variables R1 )) ) by L872 , QC_LANG3:def 1;
assume L874: D89 in ( dom R34 );
L875: (not D89 in ( still_not-bound_in R22 )) by L874 , L855;
thus L876: contradiction by L875 , L873 , QC_LANG3:2;
end;
assume L877: (not D89 in ( dom R35 ));
L878: ( ( ( R33 +* R34 ) +* R35 ) . D89 ) = ( ( R33 +* R34 ) . D89 ) by L877 , FUNCT_4:11;
L879: D89 in ( dom ( R33 +* R34 ) ) by L866 , L877 , FUNCT_4:12;
L880:
now
assume L881: (not D89 in ( dom R34 ));
L882: ( ( ( R33 +* R34 ) +* R35 ) . D89 ) = ( R33 . D89 ) by L881 , L878 , FUNCT_4:11;
L883: ( ( R16 +* ( ( R33 +* R34 ) +* R35 ) ) . D89 ) = ( R33 . D89 ) by L882 , L866 , FUNCT_4:13;
L884: D89 in ( dom R33 ) by L879 , L881 , FUNCT_4:12;
L885: ( ( R16 . ( ( R33 +* R34 ) +* R35 ) ) . D89 ) = ( ( R16 +* R33 ) . D89 ) by L884 , L883 , FUNCT_4:13;
L886: ( D86 . D88 ) = ( ( R16 . R33 ) . D89 ) by L885 , L863 , FUNCT_1:12;
thus L887: thesis by L886 , L862 , FUNCT_1:12;
end;
thus L888: thesis by L880 , L868;
end;
L889:
now
assume L890: D89 in ( dom R35 );
L891: ( ( ( R33 +* R34 ) +* R35 ) . D89 ) = ( R35 . D89 ) by L890 , FUNCT_4:13;
L892: ( ( ( R33 +* R34 ) +* R35 ) . D89 ) = ( R16 . D89 ) by L891 , L856 , L890;
L893: ( ( R16 +* ( ( R33 +* R34 ) +* R35 ) ) . D89 ) = ( R16 . D89 ) by L892 , L866 , FUNCT_4:13;
L894: ( D86 . D88 ) = ( R16 . D89 ) by L893 , L863 , FUNCT_1:12;
L895: (not D89 in ( dom R33 )) by L857 , L890 , XBOOLE_0:3;
L896: ( ( R16 +* R33 ) . D89 ) = ( R16 . D89 ) by L895 , FUNCT_4:11;
thus L897: thesis by L896 , L862 , L894 , FUNCT_1:12;
end;
thus L898: thesis by L889 , L867;
end;
L899:
now
assume L900: (not ( R22 . D88 ) in ( dom ( ( R33 +* R34 ) +* R35 ) ));
L901: (not ( R22 . D88 ) in ( dom ( R33 +* R34 ) )) by L900 , FUNCT_4:12;
L902: (not ( R22 . D88 ) in ( dom R33 )) by L901 , FUNCT_4:12;
L903: ( ( R16 +* R33 ) . ( R22 . D88 ) ) = ( R16 . ( R22 . D88 ) ) by L902 , FUNCT_4:11;
L904: ( D87 . D88 ) = ( R16 . ( R22 . D88 ) ) by L903 , L862 , FUNCT_1:12;
L905: ( ( R16 +* ( ( R33 +* R34 ) +* R35 ) ) . ( R22 . D88 ) ) = ( R16 . ( R22 . D88 ) ) by L900 , FUNCT_4:11;
thus L906: thesis by L905 , L863 , L904 , FUNCT_1:12;
end;
thus L907: thesis by L899 , L865;
end;
thus L908: thesis by L861 , L858 , L860 , FINSEQ_2:9;
end;
theorem
L909: (for R1 being QC-alphabet holds (for R7 being (Element of ( NAT )) holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R20 being (QC-pred_symbol of R7 , R1) holds (for R22 being (CQC-variable_list of R7 , R1) holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R33 being (Val_Sub of R14 , R1) holds (for R34 being (Val_Sub of R14 , R1) holds (for R35 being (Val_Sub of R14 , R1) holds (((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in ( R20 ! R22 ) )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 )) implies (R15 , ( R16 . R33 ) |= ( R20 ! R22 ) iff R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= ( R20 ! R22 )))))))))))))
proof
let R1 being QC-alphabet;
let R7 being (Element of ( NAT ));
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
let R20 being (QC-pred_symbol of R7 , R1);
let R22 being (CQC-variable_list of R7 , R1);
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R33 being (Val_Sub of R14 , R1);
let R34 being (Val_Sub of R14 , R1);
let R35 being (Val_Sub of R14 , R1);
assume that
L910: (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in ( R20 ! R22 ) ))))
and
L911: ((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 ));
L912: (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in R22 ))))
proof
let R12 being (bound_QC-variable of R1);
assume L913: R12 in ( dom R34 );
L914: (not R12 in ( still_not-bound_in ( R20 ! R22 ) )) by L913 , L910;
thus L915: thesis by L914 , QC_LANG3:5;
end;
L916: (( ( R16 . ( ( R33 +* R34 ) +* R35 ) ) *' R22 ) in ( R15 . R20 ) iff ( ( Valid (( R20 ! R22 ) , R15) ) . ( R16 . ( ( R33 +* R34 ) +* R35 ) ) ) = ( TRUE )) by VALUAT_1:7;
L917: (( ( Valid (( R20 ! R22 ) , R15) ) . ( R16 . R33 ) ) = ( TRUE ) iff ( ( R16 . R33 ) *' R22 ) in ( R15 . R20 )) by VALUAT_1:7;
thus L918: thesis by L917 , L911 , L912 , L916 , L854 , VALUAT_1:def 7;
end;
theorem
L919: (for R1 being QC-alphabet holds (for R9 being (Element of ( CQC-WFF R1 )) holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds ((for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R33 being (Val_Sub of R14 , R1) holds (for R34 being (Val_Sub of R14 , R1) holds (for R35 being (Val_Sub of R14 , R1) holds (((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in R9 )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 )) implies (R15 , ( R16 . R33 ) |= R9 iff R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= R9)))))) implies (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R33 being (Val_Sub of R14 , R1) holds (for R34 being (Val_Sub of R14 , R1) holds (for R35 being (Val_Sub of R14 , R1) holds (((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in ( 'not' R9 ) )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 )) implies (R15 , ( R16 . R33 ) |= ( 'not' R9 ) iff R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= ( 'not' R9 ))))))))))))
proof
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
assume L920: (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R33 being (Val_Sub of R14 , R1) holds (for R34 being (Val_Sub of R14 , R1) holds (for R35 being (Val_Sub of R14 , R1) holds (((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in R9 )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 )) implies (R15 , ( R16 . R33 ) |= R9 iff R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= R9))))));
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R33 being (Val_Sub of R14 , R1);
let R34 being (Val_Sub of R14 , R1);
let R35 being (Val_Sub of R14 , R1);
assume that
L921: (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in ( 'not' R9 ) ))))
and
L922: ((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 ));
L923: (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in R9 ))))
proof
let R12 being (bound_QC-variable of R1);
assume L924: R12 in ( dom R34 );
L925: (not R12 in ( still_not-bound_in ( 'not' R9 ) )) by L924 , L921;
thus L926: thesis by L925 , QC_LANG3:7;
end;
L927: ((not R15 , ( R16 . R33 ) |= R9) iff (not R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= R9)) by L923 , L920 , L922;
thus L928: thesis by L927 , VALUAT_1:17;
end;
theorem
L929: (for R1 being QC-alphabet holds (for R9 being (Element of ( CQC-WFF R1 )) holds (for R10 being (Element of ( CQC-WFF R1 )) holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (((for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R33 being (Val_Sub of R14 , R1) holds (for R34 being (Val_Sub of R14 , R1) holds (for R35 being (Val_Sub of R14 , R1) holds (((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in R9 )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 )) implies (R15 , ( R16 . R33 ) |= R9 iff R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= R9)))))) & (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R33 being (Val_Sub of R14 , R1) holds (for R34 being (Val_Sub of R14 , R1) holds (for R35 being (Val_Sub of R14 , R1) holds (((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in R10 )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 )) implies (R15 , ( R16 . R33 ) |= R10 iff R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= R10))))))) implies (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R33 being (Val_Sub of R14 , R1) holds (for R34 being (Val_Sub of R14 , R1) holds (for R35 being (Val_Sub of R14 , R1) holds (((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in ( R9 '&' R10 ) )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 )) implies (R15 , ( R16 . R33 ) |= ( R9 '&' R10 ) iff R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= ( R9 '&' R10 )))))))))))))
proof
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
let R10 being (Element of ( CQC-WFF R1 ));
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
assume L930: ((for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R33 being (Val_Sub of R14 , R1) holds (for R34 being (Val_Sub of R14 , R1) holds (for R35 being (Val_Sub of R14 , R1) holds (((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in R9 )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 )) implies (R15 , ( R16 . R33 ) |= R9 iff R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= R9)))))) & (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R33 being (Val_Sub of R14 , R1) holds (for R34 being (Val_Sub of R14 , R1) holds (for R35 being (Val_Sub of R14 , R1) holds (((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in R10 )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 )) implies (R15 , ( R16 . R33 ) |= R10 iff R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= R10)))))));
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R33 being (Val_Sub of R14 , R1);
let R34 being (Val_Sub of R14 , R1);
let R35 being (Val_Sub of R14 , R1);
assume that
L931: (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in ( R9 '&' R10 ) ))))
and
L932: ((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 ));
L933: (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies ((not R12 in ( still_not-bound_in R9 )) & (not R12 in ( still_not-bound_in R10 )))))
proof
let R12 being (bound_QC-variable of R1);
assume L934: R12 in ( dom R34 );
L935: (not R12 in ( still_not-bound_in ( R9 '&' R10 ) )) by L934 , L931;
L936: (not R12 in ( ( still_not-bound_in R9 ) \/ ( still_not-bound_in R10 ) )) by L935 , QC_LANG3:10;
thus L937: thesis by L936 , XBOOLE_0:def 3;
end;
L938: ((R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= R9 & R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= R10) implies (R15 , ( R16 . R33 ) |= R9 & R15 , ( R16 . R33 ) |= R10))
proof
assume L939: (R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= R9 & R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= R10);
L940: ((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in R9 )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in R10 ))))) by L933;
thus L941: thesis by L940 , L930 , L932 , L939;
end;
L942: ((R15 , ( R16 . R33 ) |= R9 & R15 , ( R16 . R33 ) |= R10) implies (R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= R9 & R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= R10))
proof
assume L943: (R15 , ( R16 . R33 ) |= R9 & R15 , ( R16 . R33 ) |= R10);
L944: ((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in R9 )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in R10 ))))) by L933;
thus L945: thesis by L944 , L930 , L932 , L943;
end;
thus L946: thesis by L942 , L938 , VALUAT_1:18;
end;
theorem
L947: (for R1 being QC-alphabet holds (for R9 being (Element of ( CQC-WFF R1 )) holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R34 being (Val_Sub of R14 , R1) holds ((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in ( All (R11 , R9) ) )))) implies (for R12 being (bound_QC-variable of R1) holds (R12 in ( ( dom R34 ) \ { R11 } ) implies (not R12 in ( still_not-bound_in R9 ))))))))))
proof
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R34 being (Val_Sub of R14 , R1);
assume L948: (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in ( All (R11 , R9) ) ))));
let R12 being (bound_QC-variable of R1);
assume that
L949: R12 in ( ( dom R34 ) \ { R11 } );
L950: ( ( dom R34 ) \ { R11 } ) c= ( dom R34 ) by XBOOLE_1:36;
L951: (not R12 in ( still_not-bound_in ( All (R11 , R9) ) )) by L950 , L948 , L949;
L952: (not R12 in ( ( still_not-bound_in R9 ) \ { R11 } )) by L951 , QC_LANG3:12;
L953: ( { R11 } \/ ( ( still_not-bound_in R9 ) \ { R11 } ) ) = ( { R11 } \/ ( still_not-bound_in R9 ) ) by XBOOLE_1:39;
L954: (not R12 in { R11 }) by L949 , XBOOLE_0:def 5;
L955: (not R12 in ( { R11 } \/ ( ( still_not-bound_in R9 ) \ { R11 } ) )) by L954 , L952 , XBOOLE_0:def 3;
thus L956: thesis by L955 , L953 , XBOOLE_0:def 3;
end;
theorem
L957: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R33 being (Val_Sub of R14 , R1) holds (for B32 being Function holds (((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom B32 ) implies ( B32 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom B32 )) implies (for R12 being (bound_QC-variable of R1) holds (R12 in ( ( dom B32 ) \ { R11 } ) implies ( ( B32 | ( ( dom B32 ) \ { R11 } ) ) . R12 ) = ( ( R16 . R33 ) . R12 ))))))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R33 being (Val_Sub of R14 , R1);
let C33 being Function;
assume that
L958: (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom C33 ) implies ( C33 . R12 ) = ( R16 . R12 )))
and
L959: ( dom R33 ) misses ( dom C33 );
let R12 being (bound_QC-variable of R1);
assume that
L960: R12 in ( ( dom C33 ) \ { R11 } );
L961: R12 in ( ( dom C33 ) /\ ( ( dom C33 ) \ { R11 } ) ) by L960 , XBOOLE_0:def 4;
L962: ( ( C33 | ( ( dom C33 ) \ { R11 } ) ) . R12 ) = ( C33 . R12 ) by L961 , FUNCT_1:48;
L963: ( ( C33 | ( ( dom C33 ) \ { R11 } ) ) . R12 ) = ( R16 . R12 ) by L962 , L958 , L960;
L964: (not R12 in ( dom R33 )) by L959 , L960 , XBOOLE_0:3;
thus L965: thesis by L964 , L963 , FUNCT_4:11;
end;
theorem
L966: (for R1 being QC-alphabet holds (for R9 being (Element of ( CQC-WFF R1 )) holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds ((for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R33 being (Val_Sub of R14 , R1) holds (for R34 being (Val_Sub of R14 , R1) holds (for R35 being (Val_Sub of R14 , R1) holds (((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in R9 )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 )) implies (R15 , ( R16 . R33 ) |= R9 iff R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= R9)))))) implies (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R33 being (Val_Sub of R14 , R1) holds (for R34 being (Val_Sub of R14 , R1) holds (for R35 being (Val_Sub of R14 , R1) holds (((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in ( All (R11 , R9) ) )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 )) implies (R15 , ( R16 . R33 ) |= ( All (R11 , R9) ) iff R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= ( All (R11 , R9) )))))))))))))
proof
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
assume L967: (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R33 being (Val_Sub of R14 , R1) holds (for R34 being (Val_Sub of R14 , R1) holds (for R35 being (Val_Sub of R14 , R1) holds (((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in R9 )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 )) implies (R15 , ( R16 . R33 ) |= R9 iff R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= R9))))));
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R33 being (Val_Sub of R14 , R1);
let R34 being (Val_Sub of R14 , R1);
let R35 being (Val_Sub of R14 , R1);
assume that
L968: (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in ( All (R11 , R9) ) ))))
and
L969: ((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 ));
set D90 = ( R34 | ( ( dom R34 ) \ { R11 } ) );
set D91 = ( R35 | ( ( dom R35 ) \ { R11 } ) );
L970: (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom D91 ) implies ( D91 . R12 ) = ( ( R16 . R33 ) . R12 ))) by L969 , L957;
L971: ( dom D91 ) misses { R11 } by XBOOLE_1:63 , XBOOLE_1:79;
L972: (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom D90 ) implies (not R12 in ( still_not-bound_in R9 )))) by L968 , L947;
L973: ((for R43 being (Element of R14) holds R15 , ( ( R16 . R33 ) . ( R11 | R43 ) ) |= R9) implies (for R43 being (Element of R14) holds R15 , ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) |= R9))
proof
assume L974: (for R43 being (Element of R14) holds R15 , ( ( R16 . R33 ) . ( R11 | R43 ) ) |= R9);
let R43 being (Element of R14);
L975: ( dom D91 ) misses ( dom ( R11 | R43 ) ) by L971 , L634;
L976: (R15 , ( ( R16 . R33 ) . ( R11 | R43 ) ) |= R9 iff R15 , ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) |= R9) by L975 , L967 , L972 , L970;
thus L977: thesis by L976 , L974;
end;
L978: ( dom D90 ) misses { R11 } by XBOOLE_1:63 , XBOOLE_1:79;
L979: (for R43 being (Element of R14) holds ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) = ( ( R16 . ( ( R33 +* R34 ) +* R35 ) ) . ( R11 | R43 ) ))
proof
let R43 being (Element of R14);
L980: ( dom D90 ) misses ( dom ( R11 | R43 ) ) by L978 , L634;
L981: ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) = ( ( R16 +* R33 ) +* ( ( D90 +* ( R11 | R43 ) ) +* D91 ) ) by L980 , FUNCT_4:35;
L982: ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) = ( ( R16 +* R33 ) +* ( D90 +* ( ( R11 | R43 ) +* D91 ) ) ) by L981 , FUNCT_4:14;
L983: ( dom D91 ) misses ( dom ( R11 | R43 ) ) by L971 , L634;
L984: ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) = ( ( R16 +* R33 ) +* ( D90 +* ( D91 +* ( R11 | R43 ) ) ) ) by L983 , L982 , FUNCT_4:35;
L985: ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) = ( ( R16 +* R33 ) +* ( ( D90 +* D91 ) +* ( R11 | R43 ) ) ) by L984 , FUNCT_4:14;
L986:
now
assume L987: R11 in ( dom R34 );
L988: ( D90 +* ( R11 .--> ( R34 . R11 ) ) ) = R34 by L987 , L46;
L989:
now
assume L990: (not R11 in ( dom R35 ));
L991: D91 = ( R35 | ( dom R35 ) ) by L990 , ZFMISC_1:57;
L992: D91 = R35 by L991;
L993: ( D91 +* ( {} ) ) = R35 by L992;
L994: ( dom ( R11 .--> ( R34 . R11 ) ) ) = { R11 } by FUNCOP_1:13;
L995: (( dom ( {} ) ) c= ( dom ( R11 | R43 ) ) & ( dom ( R11 .--> ( R34 . R11 ) ) ) = ( dom ( R11 | R43 ) )) by L994 , L634 , XBOOLE_1:2;
thus L996: ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) = ( ( R16 +* R33 ) +* ( ( R34 +* R35 ) +* ( R11 | R43 ) ) ) by L995 , L985 , L988 , L993 , L1;
end;
L997:
now
L998: ( dom ( R11 .--> ( R35 . R11 ) ) ) = { R11 } by FUNCOP_1:13;
L999: ( dom ( R11 .--> ( R35 . R11 ) ) ) = ( dom ( R11 | R43 ) ) by L998 , L634;
L1000: ( dom ( R11 .--> ( R34 . R11 ) ) ) = { R11 } by FUNCOP_1:13;
L1001: ( dom ( R11 .--> ( R34 . R11 ) ) ) = ( dom ( R11 | R43 ) ) by L1000 , L634;
assume L1002: R11 in ( dom R35 );
L1003: ( D91 +* ( R11 .--> ( R35 . R11 ) ) ) = R35 by L1002 , L46;
thus L1004: ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) = ( ( R16 +* R33 ) +* ( ( R34 +* R35 ) +* ( R11 | R43 ) ) ) by L1003 , L985 , L988 , L1001 , L999 , L1;
end;
thus L1005: ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) = ( ( R16 +* R33 ) +* ( ( R34 +* R35 ) +* ( R11 | R43 ) ) ) by L997 , L989;
end;
L1006:
now
L1007: ( dom ( {} ) ) c= ( dom ( R11 | R43 ) ) by XBOOLE_1:2;
assume L1008: (not R11 in ( dom R34 ));
L1009: D90 = ( R34 | ( dom R34 ) ) by L1008 , ZFMISC_1:57;
L1010: D90 = R34 by L1009 , RELAT_1:68;
L1011: ( D90 +* ( {} ) ) = R34 by L1010;
L1012:
now
L1013: ( dom ( R11 .--> ( R35 . R11 ) ) ) = { R11 } by FUNCOP_1:13;
L1014: ( dom ( R11 .--> ( R35 . R11 ) ) ) = ( dom ( R11 | R43 ) ) by L1013 , L634;
assume L1015: R11 in ( dom R35 );
L1016: ( D91 +* ( R11 .--> ( R35 . R11 ) ) ) = R35 by L1015 , L46;
thus L1017: ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) = ( ( R16 +* R33 ) +* ( ( R34 +* R35 ) +* ( R11 | R43 ) ) ) by L1016 , L985 , L1011 , L1007 , L1014 , L1;
end;
L1018:
now
assume L1019: (not R11 in ( dom R35 ));
L1020: D91 = ( R35 | ( dom R35 ) ) by L1019 , ZFMISC_1:57;
thus L1021: ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) = ( ( R16 +* R33 ) +* ( ( R34 +* R35 ) +* ( R11 | R43 ) ) ) by L1020 , L985 , L1010 , RELAT_1:68;
end;
thus L1022: ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) = ( ( R16 +* R33 ) +* ( ( R34 +* R35 ) +* ( R11 | R43 ) ) ) by L1018 , L1012;
end;
L1023: ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) = ( ( ( R16 +* R33 ) +* ( R34 +* R35 ) ) +* ( R11 | R43 ) ) by L1006 , L986 , FUNCT_4:14;
L1024: ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) = ( ( ( ( R16 +* R33 ) +* R34 ) +* R35 ) +* ( R11 | R43 ) ) by L1023 , FUNCT_4:14;
L1025: ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) = ( ( ( R16 +* ( R33 +* R34 ) ) +* R35 ) +* ( R11 | R43 ) ) by L1024 , FUNCT_4:14;
thus L1026: thesis by L1025 , FUNCT_4:14;
end;
L1027: ((for R43 being (Element of R14) holds R15 , ( ( R16 . ( ( R33 +* R34 ) +* R35 ) ) . ( R11 | R43 ) ) |= R9) implies (for R43 being (Element of R14) holds R15 , ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) |= R9))
proof
assume L1028: (for R43 being (Element of R14) holds R15 , ( ( R16 . ( ( R33 +* R34 ) +* R35 ) ) . ( R11 | R43 ) ) |= R9);
let R43 being (Element of R14);
L1029: ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) = ( ( R16 . ( ( R33 +* R34 ) +* R35 ) ) . ( R11 | R43 ) ) by L979;
thus L1030: thesis by L1029 , L1028;
end;
L1031: ((for R43 being (Element of R14) holds R15 , ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) |= R9) implies (for R43 being (Element of R14) holds R15 , ( ( R16 . R33 ) . ( R11 | R43 ) ) |= R9))
proof
assume L1032: (for R43 being (Element of R14) holds R15 , ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) |= R9);
let R43 being (Element of R14);
L1033: ( dom D91 ) misses ( dom ( R11 | R43 ) ) by L971 , L634;
L1034: (R15 , ( ( R16 . R33 ) . ( R11 | R43 ) ) |= R9 iff R15 , ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) |= R9) by L1033 , L967 , L972 , L970;
thus L1035: thesis by L1034 , L1032;
end;
L1036: ((for R43 being (Element of R14) holds R15 , ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) |= R9) implies (for R43 being (Element of R14) holds R15 , ( ( R16 . ( ( R33 +* R34 ) +* R35 ) ) . ( R11 | R43 ) ) |= R9))
proof
assume L1037: (for R43 being (Element of R14) holds R15 , ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) |= R9);
let R43 being (Element of R14);
L1038: ( ( R16 . R33 ) . ( ( ( R11 | R43 ) +* D90 ) +* D91 ) ) = ( ( R16 . ( ( R33 +* R34 ) +* R35 ) ) . ( R11 | R43 ) ) by L979;
thus L1039: thesis by L1038 , L1037;
end;
thus L1040: thesis by L1036 , L973 , L1031 , L1027 , L466;
end;
theorem
L1041: (for R1 being QC-alphabet holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R9 being (Element of ( CQC-WFF R1 )) holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R33 being (Val_Sub of R14 , R1) holds (for R34 being (Val_Sub of R14 , R1) holds (for R35 being (Val_Sub of R14 , R1) holds (((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in R9 )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 )) implies (R15 , ( R16 . R33 ) |= R9 iff R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= R9))))))))))
proof
let R1 being QC-alphabet;
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
defpred S3[ (Element of ( CQC-WFF R1 )) ] means (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R33 being (Val_Sub of R14 , R1) holds (for R34 being (Val_Sub of R14 , R1) holds (for R35 being (Val_Sub of R14 , R1) holds (((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in $1 )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom R33 ) misses ( dom R35 )) implies (R15 , ( R16 . R33 ) |= $1 iff R15 , ( R16 . ( ( R33 +* R34 ) +* R35 ) ) |= $1))))));
L1042: (for R9 being (Element of ( CQC-WFF R1 )) holds (for R10 being (Element of ( CQC-WFF R1 )) holds (for R11 being (bound_QC-variable of R1) holds (for R7 being (Element of ( NAT )) holds (for B33 being (CQC-variable_list of R7 , R1) holds (for B34 being (QC-pred_symbol of R7 , R1) holds (S3[ ( VERUM R1 ) ] & S3[ ( B34 ! B33 ) ] & (S3[ R9 ] implies S3[ ( 'not' R9 ) ]) & ((S3[ R9 ] & S3[ R10 ]) implies S3[ ( R9 '&' R10 ) ]) & (S3[ R9 ] implies S3[ ( All (R11 , R9) ) ])))))))) by L909 , L919 , L929 , L966 , VALUAT_1:32;
thus L1043: (for R9 being (Element of ( CQC-WFF R1 )) holds S3[ R9 ]) from CQC_LANG:sch 1(L1042);
end;
definition
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
func RSub1 R9 -> set means 
:L1044: (for R3 being set holds (R3 in it iff (ex R11 being (bound_QC-variable of R1) st (R11 = R3 & (not R11 in ( still_not-bound_in R9 ))))));
existence
proof
defpred S4[ set ] means (ex R11 being (bound_QC-variable of R1) st (R11 = $1 & (not R11 in ( still_not-bound_in R9 ))));
consider C34 being set such that L1045: (for R3 being set holds (R3 in C34 iff (R3 in ( bound_QC-variables R1 ) & S4[ R3 ]))) from XBOOLE_0:sch 1;
take C34;
thus L1046: thesis by L1045;
end;
uniqueness
proof
let C35 , C36 being set;
assume that
L1047: (for R3 being set holds (R3 in C35 iff (ex R11 being (bound_QC-variable of R1) st (R11 = R3 & (not R11 in ( still_not-bound_in R9 ))))))
and
L1048: (for R3 being set holds (R3 in C36 iff (ex R11 being (bound_QC-variable of R1) st (R11 = R3 & (not R11 in ( still_not-bound_in R9 ))))));
L1049:
now
let R3 being set;
L1050: (R3 in C35 iff (ex R11 being (bound_QC-variable of R1) st (R11 = R3 & (not R11 in ( still_not-bound_in R9 ))))) by L1047;
thus L1051: (R3 in C35 iff R3 in C36) by L1050 , L1048;
end;
thus L1052: thesis by L1049 , TARSKI:1;
end;
end;
definition
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
let R25 being (CQC_Substitution of R1);
func RSub2 (R9 , R25) -> set means 
:L1054: (for R3 being set holds (R3 in it iff (ex R11 being (bound_QC-variable of R1) st (R11 = R3 & R11 in ( still_not-bound_in R9 ) & R11 = ( ( @ R25 ) . R11 )))));
existence
proof
defpred S5[ set ] means (ex R11 being (bound_QC-variable of R1) st (R11 = $1 & R11 in ( still_not-bound_in R9 ) & R11 = ( ( @ R25 ) . R11 )));
consider C37 being set such that L1055: (for R3 being set holds (R3 in C37 iff (R3 in ( bound_QC-variables R1 ) & S5[ R3 ]))) from XBOOLE_0:sch 1;
take C37;
thus L1056: thesis by L1055;
end;
uniqueness
proof
let C38 , C39 being set;
assume that
L1057: (for R3 being set holds (R3 in C38 iff (ex R11 being (bound_QC-variable of R1) st (R11 = R3 & R11 in ( still_not-bound_in R9 ) & R11 = ( ( @ R25 ) . R11 )))))
and
L1058: (for R3 being set holds (R3 in C39 iff (ex R11 being (bound_QC-variable of R1) st (R11 = R3 & R11 in ( still_not-bound_in R9 ) & R11 = ( ( @ R25 ) . R11 )))));
L1059:
now
let R3 being set;
L1060: (R3 in C38 iff (ex R11 being (bound_QC-variable of R1) st (R11 = R3 & R11 in ( still_not-bound_in R9 ) & R11 = ( ( @ R25 ) . R11 )))) by L1057;
thus L1061: (R3 in C38 iff R3 in C39) by L1060 , L1058;
end;
thus L1062: thesis by L1059 , TARSKI:1;
end;
end;
theorem
L1064: (for R1 being QC-alphabet holds (for R9 being (Element of ( CQC-WFF R1 )) holds (for R25 being (CQC_Substitution of R1) holds ( dom ( ( @ R25 ) | ( RSub1 R9 ) ) ) misses ( dom ( ( @ R25 ) | ( RSub2 (R9 , R25) ) ) ))))
proof
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
let R25 being (CQC_Substitution of R1);
L1065:
now
assume L1066: ( dom ( ( @ R25 ) | ( RSub1 R9 ) ) ) meets ( dom ( ( @ R25 ) | ( RSub2 (R9 , R25) ) ) );
consider C40 being set such that L1067: C40 in ( ( dom ( ( @ R25 ) | ( RSub1 R9 ) ) ) /\ ( dom ( ( @ R25 ) | ( RSub2 (R9 , R25) ) ) ) ) by L1066 , XBOOLE_0:4;
L1068: (( dom ( ( @ R25 ) | ( RSub1 R9 ) ) ) = ( ( dom ( @ R25 ) ) /\ ( RSub1 R9 ) ) & ( dom ( ( @ R25 ) | ( RSub2 (R9 , R25) ) ) ) = ( ( dom ( @ R25 ) ) /\ ( RSub2 (R9 , R25) ) )) by RELAT_1:61;
L1069: C40 in ( ( ( dom ( @ R25 ) ) /\ ( ( dom ( @ R25 ) ) /\ ( RSub1 R9 ) ) ) /\ ( RSub2 (R9 , R25) ) ) by L1068 , L1067 , XBOOLE_1:16;
L1070: C40 in ( ( ( ( dom ( @ R25 ) ) /\ ( dom ( @ R25 ) ) ) /\ ( RSub1 R9 ) ) /\ ( RSub2 (R9 , R25) ) ) by L1069 , XBOOLE_1:16;
L1071: C40 in ( ( dom ( @ R25 ) ) /\ ( ( RSub1 R9 ) /\ ( RSub2 (R9 , R25) ) ) ) by L1070 , XBOOLE_1:16;
L1072: C40 in ( ( RSub1 R9 ) /\ ( RSub2 (R9 , R25) ) ) by L1071 , XBOOLE_0:def 4;
L1073: C40 in ( RSub2 (R9 , R25) ) by L1072 , XBOOLE_0:def 4;
L1074: (ex B35 being (bound_QC-variable of R1) st (B35 = C40 & B35 in ( still_not-bound_in R9 ) & B35 = ( ( @ R25 ) . B35 ))) by L1073 , L1054;
L1075: C40 in ( RSub1 R9 ) by L1072 , XBOOLE_0:def 4;
L1076: (ex B36 being (bound_QC-variable of R1) st (B36 = C40 & (not B36 in ( still_not-bound_in R9 )))) by L1075 , L1044;
thus L1077: contradiction by L1076 , L1074;
end;
thus L1078: thesis by L1065;
end;
theorem
L1079: (for R1 being QC-alphabet holds (for R9 being (Element of ( CQC-WFF R1 )) holds (for R11 being (bound_QC-variable of R1) holds (for R25 being (CQC_Substitution of R1) holds ( @ ( RestrictSub (R11 , ( All (R11 , R9) ) , R25) ) ) = ( ( @ R25 ) \ ( ( ( @ R25 ) | ( RSub1 ( All (R11 , R9) ) ) ) +* ( ( @ R25 ) | ( RSub2 (( All (R11 , R9) ) , R25) ) ) ) )))))
proof
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
let R11 being (bound_QC-variable of R1);
let R25 being (CQC_Substitution of R1);
set D92 = { R12 where R12 is (bound_QC-variable of R1) : (R12 in ( still_not-bound_in ( All (R11 , R9) ) ) & R12 is (Element of ( dom R25 )) & R12 <> R11 & R12 <> ( R25 . R12 )) };
thus L1080: ( @ ( RestrictSub (R11 , ( All (R11 , R9) ) , R25) ) ) c= ( ( @ R25 ) \ ( ( ( @ R25 ) | ( RSub1 ( All (R11 , R9) ) ) ) +* ( ( @ R25 ) | ( RSub2 (( All (R11 , R9) ) , R25) ) ) ) )
proof
let R3 being set;
L1081: ( dom ( ( @ R25 ) | ( RSub1 ( All (R11 , R9) ) ) ) ) misses ( dom ( ( @ R25 ) | ( RSub2 (( All (R11 , R9) ) , R25) ) ) ) by L1064;
assume L1082: R3 in ( @ ( RestrictSub (R11 , ( All (R11 , R9) ) , R25) ) );
L1083: R3 in ( RestrictSub (R11 , ( All (R11 , R9) ) , R25) ) by L1082 , SUBSTUT1:def 2;
L1084: R3 in ( R25 | D92 ) by L1083 , SUBSTUT1:def 6;
L1085: R3 in ( ( @ R25 ) | D92 ) by L1084 , SUBSTUT1:def 2;
L1086: R3 in ( ( @ R25 ) /\ [: D92 , ( rng ( @ R25 ) ) :] ) by L1085 , RELAT_1:67;
L1087: R3 in [: D92 , ( rng ( @ R25 ) ) :] by L1086 , XBOOLE_0:def 4;
consider R4 being set, R5 being set such that L1088: R4 in D92 and L1089: R5 in ( rng ( @ R25 ) ) and L1090: R3 = [ R4 , R5 ] by L1087 , ZFMISC_1:def 2;
L1091: (ex R13 being (bound_QC-variable of R1) st (R13 = R4 & R13 in ( still_not-bound_in ( All (R11 , R9) ) ) & R13 is (Element of ( dom R25 )) & R13 <> R11 & R13 <> ( R25 . R13 ))) by L1088;
L1092:
now
assume L1093: R4 in ( RSub2 (( All (R11 , R9) ) , R25) );
L1094: (ex R12 being (bound_QC-variable of R1) st (R12 = R4 & R12 in ( still_not-bound_in ( All (R11 , R9) ) ) & R12 = ( ( @ R25 ) . R12 ))) by L1093 , L1054;
thus L1095: contradiction by L1094 , L1091 , SUBSTUT1:def 2;
end;
L1096: (not R3 in [: ( RSub2 (( All (R11 , R9) ) , R25) ) , ( rng ( @ R25 ) ) :]) by L1092 , L1090 , ZFMISC_1:87;
L1097: (not R3 in ( ( @ R25 ) /\ [: ( RSub2 (( All (R11 , R9) ) , R25) ) , ( rng ( @ R25 ) ) :] )) by L1096 , XBOOLE_0:def 4;
L1098: (not R3 in ( ( @ R25 ) | ( RSub2 (( All (R11 , R9) ) , R25) ) )) by L1097 , RELAT_1:67;
L1099:
now
assume L1100: R4 in ( RSub1 ( All (R11 , R9) ) );
L1101: (ex R12 being (bound_QC-variable of R1) st (R12 = R4 & (not R12 in ( still_not-bound_in ( All (R11 , R9) ) )))) by L1100 , L1044;
thus L1102: contradiction by L1101 , L1091;
end;
L1103: (not R3 in [: ( RSub1 ( All (R11 , R9) ) ) , ( rng ( @ R25 ) ) :]) by L1099 , L1090 , ZFMISC_1:87;
L1104: (not R3 in ( ( @ R25 ) /\ [: ( RSub1 ( All (R11 , R9) ) ) , ( rng ( @ R25 ) ) :] )) by L1103 , XBOOLE_0:def 4;
L1105: (not R3 in ( ( @ R25 ) | ( RSub1 ( All (R11 , R9) ) ) )) by L1104 , RELAT_1:67;
L1106: (not R3 in ( ( ( @ R25 ) | ( RSub1 ( All (R11 , R9) ) ) ) \/ ( ( @ R25 ) | ( RSub2 (( All (R11 , R9) ) , R25) ) ) )) by L1105 , L1098 , XBOOLE_0:def 3;
L1107: (not R3 in ( ( ( @ R25 ) | ( RSub1 ( All (R11 , R9) ) ) ) +* ( ( @ R25 ) | ( RSub2 (( All (R11 , R9) ) , R25) ) ) )) by L1106 , L1081 , FUNCT_4:31;
L1108: R3 in ( @ R25 ) by L1086 , XBOOLE_0:def 4;
thus L1109: thesis by L1108 , L1107 , XBOOLE_0:def 5;
end;

thus L1110: ( ( @ R25 ) \ ( ( ( @ R25 ) | ( RSub1 ( All (R11 , R9) ) ) ) +* ( ( @ R25 ) | ( RSub2 (( All (R11 , R9) ) , R25) ) ) ) ) c= ( @ ( RestrictSub (R11 , ( All (R11 , R9) ) , R25) ) )
proof
L1111: ( dom ( ( @ R25 ) | ( RSub1 ( All (R11 , R9) ) ) ) ) misses ( dom ( ( @ R25 ) | ( RSub2 (( All (R11 , R9) ) , R25) ) ) ) by L1064;
let R3 being set;
assume L1112: R3 in ( ( @ R25 ) \ ( ( ( @ R25 ) | ( RSub1 ( All (R11 , R9) ) ) ) +* ( ( @ R25 ) | ( RSub2 (( All (R11 , R9) ) , R25) ) ) ) );
L1113: R3 in ( @ R25 ) by L1112 , XBOOLE_0:def 5;
consider R4 being set, R5 being set such that L1114: R3 = [ R4 , R5 ] by L1112 , RELAT_1:def 1;
L1115: R4 in ( dom ( @ R25 ) ) by L1113 , L1114 , FUNCT_1:1;
reconsider D93 = R4 as (bound_QC-variable of R1) by L1115;
L1116: R5 = ( ( @ R25 ) . R4 ) by L1113 , L1114 , FUNCT_1:1;
L1117: R5 in ( rng ( @ R25 ) ) by L1116 , L1115 , FUNCT_1:3;
L1118: (not R3 in ( ( ( @ R25 ) | ( RSub1 ( All (R11 , R9) ) ) ) +* ( ( @ R25 ) | ( RSub2 (( All (R11 , R9) ) , R25) ) ) )) by L1112 , XBOOLE_0:def 5;
L1119: (not R3 in ( ( ( @ R25 ) | ( RSub1 ( All (R11 , R9) ) ) ) \/ ( ( @ R25 ) | ( RSub2 (( All (R11 , R9) ) , R25) ) ) )) by L1118 , L1111 , FUNCT_4:31;
L1120: (not R3 in ( ( @ R25 ) | ( RSub1 ( All (R11 , R9) ) ) )) by L1119 , XBOOLE_0:def 3;
L1121: (not R3 in ( ( @ R25 ) /\ [: ( RSub1 ( All (R11 , R9) ) ) , ( rng ( @ R25 ) ) :] )) by L1120 , RELAT_1:67;
L1122: (not [ D93 , R5 ] in [: ( RSub1 ( All (R11 , R9) ) ) , ( rng ( @ R25 ) ) :]) by L1121 , L1113 , L1114 , XBOOLE_0:def 4;
L1123: (not D93 in ( RSub1 ( All (R11 , R9) ) )) by L1122 , L1117 , ZFMISC_1:87;
L1124: D93 in ( still_not-bound_in ( All (R11 , R9) ) ) by L1123 , L1044;
L1125: D93 in ( ( still_not-bound_in R9 ) \ { R11 } ) by L1124 , QC_LANG3:12;
L1126: (not D93 in { R11 }) by L1125 , XBOOLE_0:def 5;
L1127: D93 <> R11 by L1126 , TARSKI:def 1;
L1128: R5 in ( rng ( @ R25 ) ) by L1115 , L1116 , FUNCT_1:3;
L1129: (not R3 in ( ( @ R25 ) | ( RSub2 (( All (R11 , R9) ) , R25) ) )) by L1119 , XBOOLE_0:def 3;
L1130: (not R3 in ( ( @ R25 ) /\ [: ( RSub2 (( All (R11 , R9) ) , R25) ) , ( rng ( @ R25 ) ) :] )) by L1129 , RELAT_1:67;
L1131: (not [ D93 , R5 ] in [: ( RSub2 (( All (R11 , R9) ) , R25) ) , ( rng ( @ R25 ) ) :]) by L1130 , L1113 , L1114 , XBOOLE_0:def 4;
L1132: (not D93 in ( RSub2 (( All (R11 , R9) ) , R25) )) by L1131 , L1128 , ZFMISC_1:87;
L1133: ((not D93 in ( still_not-bound_in ( All (R11 , R9) ) )) or D93 <> ( ( @ R25 ) . D93 )) by L1132 , L1054;
L1134: D93 <> ( R25 . D93 ) by L1133 , L1123 , L1044 , SUBSTUT1:def 2;
L1135: R5 in ( rng ( @ R25 ) ) by L1115 , L1116 , FUNCT_1:3;
L1136: D93 is (Element of ( dom R25 )) by L1115 , SUBSTUT1:def 2;
L1137: D93 in D92 by L1136 , L1124 , L1127 , L1134;
L1138: [ D93 , R5 ] in [: D92 , ( rng ( @ R25 ) ) :] by L1137 , L1135 , ZFMISC_1:87;
L1139: R3 in ( ( @ R25 ) /\ [: D92 , ( rng ( @ R25 ) ) :] ) by L1138 , L1113 , L1114 , XBOOLE_0:def 4;
L1140: R3 in ( ( @ R25 ) | D92 ) by L1139 , RELAT_1:67;
L1141: R3 in ( R25 | D92 ) by L1140 , SUBSTUT1:def 2;
L1142: R3 in ( RestrictSub (R11 , ( All (R11 , R9) ) , R25) ) by L1141 , SUBSTUT1:def 6;
thus L1143: thesis by L1142 , SUBSTUT1:def 2;
end;

end;
theorem
L1111: (for R1 being QC-alphabet holds (for R9 being (Element of ( CQC-WFF R1 )) holds (for R11 being (bound_QC-variable of R1) holds (for R25 being (CQC_Substitution of R1) holds ( dom ( @ ( RestrictSub (R11 , R9 , R25) ) ) ) misses ( ( dom ( ( @ R25 ) | ( RSub1 R9 ) ) ) \/ ( dom ( ( @ R25 ) | ( RSub2 (R9 , R25) ) ) ) )))))
proof
let R1 being QC-alphabet;
let R9 being (Element of ( CQC-WFF R1 ));
let R11 being (bound_QC-variable of R1);
let R25 being (CQC_Substitution of R1);
set D94 = { R12 where R12 is (bound_QC-variable of R1) : (R12 in ( still_not-bound_in R9 ) & R12 is (Element of ( dom R25 )) & R12 <> R11 & R12 <> ( R25 . R12 )) };
L1112: ( dom ( ( @ R25 ) | ( RSub2 (R9 , R25) ) ) ) = ( ( dom ( @ R25 ) ) /\ ( RSub2 (R9 , R25) ) ) by RELAT_1:61;
L1113: ( RestrictSub (R11 , R9 , R25) ) = ( R25 | D94 ) by SUBSTUT1:def 6;
L1114: ( RestrictSub (R11 , R9 , R25) ) = ( ( @ R25 ) | D94 ) by L1113 , SUBSTUT1:def 2;
L1115: ( dom ( @ ( RestrictSub (R11 , R9 , R25) ) ) ) = ( dom ( ( @ R25 ) | D94 ) ) by L1114 , SUBSTUT1:def 2;
L1116: ( dom ( @ ( RestrictSub (R11 , R9 , R25) ) ) ) = ( ( dom ( @ R25 ) ) /\ D94 ) by L1115 , RELAT_1:61;
L1117: ( dom ( ( @ R25 ) | ( RSub1 R9 ) ) ) = ( ( dom ( @ R25 ) ) /\ ( RSub1 R9 ) ) by RELAT_1:61;
L1118:
now
assume L1119: ( dom ( @ ( RestrictSub (R11 , R9 , R25) ) ) ) meets ( ( dom ( ( @ R25 ) | ( RSub1 R9 ) ) ) \/ ( dom ( ( @ R25 ) | ( RSub2 (R9 , R25) ) ) ) );
consider R3 being set such that L1120: R3 in ( dom ( @ ( RestrictSub (R11 , R9 , R25) ) ) ) and L1121: R3 in ( ( dom ( ( @ R25 ) | ( RSub1 R9 ) ) ) \/ ( dom ( ( @ R25 ) | ( RSub2 (R9 , R25) ) ) ) ) by L1119 , XBOOLE_0:3;
L1122: R3 in D94 by L1116 , L1120 , XBOOLE_0:def 4;
L1123: (ex R12 being (bound_QC-variable of R1) st (R3 = R12 & R12 in ( still_not-bound_in R9 ) & R12 is (Element of ( dom R25 )) & R12 <> R11 & R12 <> ( R25 . R12 ))) by L1122;
L1124:
now
assume L1125: R3 in ( dom ( ( @ R25 ) | ( RSub2 (R9 , R25) ) ) );
L1126: R3 in ( RSub2 (R9 , R25) ) by L1125 , L1112 , XBOOLE_0:def 4;
L1127: (ex R13 being (bound_QC-variable of R1) st (R13 = R3 & R13 in ( still_not-bound_in R9 ) & R13 = ( ( @ R25 ) . R13 ))) by L1126 , L1054;
thus L1128: contradiction by L1127 , L1123 , SUBSTUT1:def 2;
end;
L1129:
now
assume L1130: R3 in ( dom ( ( @ R25 ) | ( RSub1 R9 ) ) );
L1131: R3 in ( RSub1 R9 ) by L1130 , L1117 , XBOOLE_0:def 4;
L1132: (ex R13 being (bound_QC-variable of R1) st (R13 = R3 & (not R13 in ( still_not-bound_in R9 )))) by L1131 , L1044;
thus L1133: contradiction by L1132 , L1123;
end;
thus L1134: contradiction by L1129 , L1121 , L1124 , XBOOLE_0:def 3;
end;
thus L1135: thesis by L1118;
end;
theorem
L1136: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds ([ R28 , R11 ] is  quantifiable implies ( @ ( ( CQCSub_All ([ R28 , R11 ] , R39) ) `2 ) ) = ( ( ( @ ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) ) +* ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) ) +* ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) ))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
set D95 = ( CQCSub_All ([ R28 , R11 ] , R39) );
L1137: ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) c= ( @ R39 ) by RELAT_1:59;
L1138: ( dom ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) ) misses ( dom ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) ) by L1064;
L1139: ( ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) +* ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) ) = ( ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) \/ ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) ) by L1138 , FUNCT_4:31;
assume L1140: [ R28 , R11 ] is  quantifiable;
L1141: D95 = ( Sub_All ([ R28 , R11 ] , R39) ) by L1140 , L254;
L1142: ( @ ( D95 `2 ) ) = ( @ R39 ) by L1141 , L1140 , L234;
L1143: ( @ ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) ) = ( ( @ R39 ) \ ( ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) +* ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) ) ) by L1079;
reconsider D96 = ( ( @ R39 ) \ ( ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) +* ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) ) ) as (PartFunc of ( bound_QC-variables R1 ) , ( bound_QC-variables R1 )) by L1143;
L1144: ( dom D96 ) misses ( ( dom ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) ) \/ ( dom ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) ) ) by L1143 , L1111;
L1145: ( dom D96 ) misses ( dom ( ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) +* ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) ) ) by L1144 , FUNCT_4:def 1;
L1146: (( ( ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) +* ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) ) \/ D96 ) = ( ( ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) +* ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) ) \/ ( @ R39 ) ) & ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) c= ( @ R39 )) by RELAT_1:59 , XBOOLE_1:39;
L1147: ( ( ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) +* ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) ) \/ D96 ) = ( @ R39 ) by L1146 , L1139 , L1137 , XBOOLE_1:8 , XBOOLE_1:12;
L1148: ( D96 +* ( ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) +* ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) ) ) = ( @ R39 ) by L1147 , L1145 , FUNCT_4:31;
thus L1149: thesis by L1148 , L1142 , L1143 , FUNCT_4:14;
end;
theorem
L1150: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds ([ R28 , R11 ] is  quantifiable implies (ex R34 being (Val_Sub of R14 , R1) st (ex R35 being (Val_Sub of R14 , R1) st ((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in ( All (R11 , ( R28 `1 )) ) )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom ( NEx_Val (R16 , R28 , R11 , R39) ) ) misses ( dom R35 ) & ( R16 . ( Val_S (R16 , ( CQCSub_All ([ R28 , R11 ] , R39) )) ) ) = ( R16 . ( ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* R34 ) +* R35 ) )))))))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
set D97 = ( CQCSub_All ([ R28 , R11 ] , R39) );
assume L1151: [ R28 , R11 ] is  quantifiable;
L1152: ( Val_S (R16 , D97) ) = ( ( ( ( @ ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) ) +* ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) ) +* ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) ) * R16 ) by L1151 , L1136;
take D98 = ( ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) * R16 );
take D99 = ( ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) * R16 );
L1153: ( rng ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) ) c= ( bound_QC-variables R1 );
L1154: ( rng ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) ) c= ( dom R16 ) by L1153 , L634;
thus L1155: (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom D98 ) implies (not R12 in ( still_not-bound_in ( All (R11 , ( R28 `1 )) ) ))))
proof
let R12 being (bound_QC-variable of R1);
assume L1156: R12 in ( dom D98 );
L1157: R12 in ( dom ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) ) by L1156 , L1154 , RELAT_1:27;
L1158: R12 in ( ( dom ( @ R39 ) ) /\ ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) by L1157 , RELAT_1:61;
L1159: R12 in ( RSub1 ( All (R11 , ( R28 `1 )) ) ) by L1158 , XBOOLE_0:def 4;
L1160: (ex R13 being (bound_QC-variable of R1) st (R13 = R12 & (not R13 in ( still_not-bound_in ( All (R11 , ( R28 `1 )) ) )))) by L1159 , L1044;
thus L1161: thesis by L1160;
end;

L1162: ( rng ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) ) c= ( bound_QC-variables R1 );
L1163: ( rng ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) ) c= ( dom R16 ) by L1162 , L634;
thus L1164: (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom D99 ) implies ( D99 . R12 ) = ( R16 . R12 )))
proof
let R12 being (bound_QC-variable of R1);
assume L1165: R12 in ( dom D99 );
L1166: R12 in ( dom ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) ) by L1165 , L1163 , RELAT_1:27;
L1167: R12 in ( ( dom ( @ R39 ) ) /\ ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) by L1166 , RELAT_1:61;
L1168: R12 in ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) by L1167 , XBOOLE_0:def 4;
L1169: (ex R13 being (bound_QC-variable of R1) st (R13 = R12 & R13 in ( still_not-bound_in ( All (R11 , ( R28 `1 )) ) ) & R13 = ( ( @ R39 ) . R13 ))) by L1168 , L1054;
L1170: ( R16 . R12 ) = ( R16 . ( ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) . R12 ) ) by L1169 , L1166 , FUNCT_1:47;
thus L1171: thesis by L1170 , L1166 , FUNCT_1:13;
end;

thus L1172: ( dom ( NEx_Val (R16 , R28 , R11 , R39) ) ) misses ( dom D99 )
proof
set D100 = { R12 where R12 is (bound_QC-variable of R1) : (R12 in ( still_not-bound_in ( All (R11 , ( R28 `1 )) ) ) & R12 is (Element of ( dom R39 )) & R12 <> R11 & R12 <> ( R39 . R12 )) };
L1173: ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) = ( R39 | D100 ) by SUBSTUT1:def 6;
L1174: ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) = ( ( @ R39 ) | D100 ) by L1173 , SUBSTUT1:def 2;
L1175: ( dom ( NEx_Val (R16 , R28 , R11 , R39) ) ) = ( dom ( ( @ R39 ) | D100 ) ) by L1174 , L837;
L1176: ( dom ( NEx_Val (R16 , R28 , R11 , R39) ) ) = ( ( dom ( @ R39 ) ) /\ D100 ) by L1175 , RELAT_1:61;
L1177: ( dom D99 ) = ( dom ( ( @ R39 ) | ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) ) by L1163 , RELAT_1:27;
L1178: ( dom D99 ) = ( ( dom ( @ R39 ) ) /\ ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) ) by L1177 , RELAT_1:61;
L1179:
now
assume L1180: ( dom ( NEx_Val (R16 , R28 , R11 , R39) ) ) meets ( dom D99 );
consider R3 being set such that L1181: R3 in ( dom ( NEx_Val (R16 , R28 , R11 , R39) ) ) and L1182: R3 in ( dom D99 ) by L1180 , XBOOLE_0:3;
L1183: R3 in D100 by L1176 , L1181 , XBOOLE_0:def 4;
L1184: (ex R12 being (bound_QC-variable of R1) st (R12 = R3 & R12 in ( still_not-bound_in ( All (R11 , ( R28 `1 )) ) ) & R12 is (Element of ( dom R39 )) & R12 <> R11 & R12 <> ( R39 . R12 ))) by L1183;
L1185: R3 in ( RSub2 (( All (R11 , ( R28 `1 )) ) , R39) ) by L1178 , L1182 , XBOOLE_0:def 4;
L1186: (ex R13 being (bound_QC-variable of R1) st (R13 = R3 & R13 in ( still_not-bound_in ( All (R11 , ( R28 `1 )) ) ) & R13 = ( ( @ R39 ) . R13 ))) by L1185 , L1054;
thus L1187: contradiction by L1186 , L1184 , SUBSTUT1:def 2;
end;
thus L1188: thesis by L1179;
end;

L1189: ( ( ( @ ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) ) +* ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) ) * R16 ) = ( ( ( @ ( RestrictSub (R11 , ( All (R11 , ( R28 `1 )) ) , R39) ) ) * R16 ) +* ( ( ( @ R39 ) | ( RSub1 ( All (R11 , ( R28 `1 )) ) ) ) * R16 ) ) by L1154 , FUNCT_7:9;
thus L1190: thesis by L1189 , L1152 , L1163 , FUNCT_7:9;
end;
theorem
L1191: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds ([ R28 , R11 ] is  quantifiable implies (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (R15 , ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) |= ( All (R11 , ( R28 `1 )) ) iff R15 , ( R16 . ( Val_S (R16 , ( CQCSub_All ([ R28 , R11 ] , R39) )) ) ) |= ( CQCSub_All ([ R28 , R11 ] , R39) ))))))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
set D101 = ( CQCSub_All ([ R28 , R11 ] , R39) );
assume L1192: [ R28 , R11 ] is  quantifiable;
L1193: D101 = ( Sub_All ([ R28 , R11 ] , R39) ) by L1192 , L254;
L1194: ( D101 `1 ) = ( All (( [ R28 , R11 ] `2 ) , ( ( [ R28 , R11 ] `1 ) `1 )) ) by L1193 , L1192 , L234;
L1195: ( D101 `1 ) = ( All (R11 , ( ( [ R28 , R11 ] `1 ) `1 )) ) by L1194 , MCART_1:7;
L1196: ( D101 `1 ) = ( All (R11 , ( R28 `1 )) ) by L1195 , MCART_1:7;
let R16 being (Element of ( Valuations_in (R1 , R14) ));
consider R34 being (Val_Sub of R14 , R1), R35 being (Val_Sub of R14 , R1) such that L1197: ((for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R34 ) implies (not R12 in ( still_not-bound_in ( All (R11 , ( R28 `1 )) ) )))) & (for R12 being (bound_QC-variable of R1) holds (R12 in ( dom R35 ) implies ( R35 . R12 ) = ( R16 . R12 ))) & ( dom ( NEx_Val (R16 , R28 , R11 , R39) ) ) misses ( dom R35 )) and L1198: ( R16 . ( Val_S (R16 , D101) ) ) = ( R16 . ( ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* R34 ) +* R35 ) ) by L1192 , L1150;
L1199: (R15 , ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) |= ( All (R11 , ( R28 `1 )) ) iff R15 , ( R16 . ( ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* R34 ) +* R35 ) ) |= ( All (R11 , ( R28 `1 )) )) by L1197 , L1041;
thus L1200: thesis by L1199 , L1198 , L1196 , L70;
end;
theorem
L1201: (for R1 being QC-alphabet holds (for R11 being (bound_QC-variable of R1) holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R39 being (second_Q_comp of [ R28 , R11 ]) holds (([ R28 , R11 ] is  quantifiable & (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (R15 , R16 |= ( CQC_Sub R28 ) iff R15 , ( R16 . ( Val_S (R16 , R28) ) ) |= R28))) implies (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (R15 , R16 |= ( CQC_Sub ( CQCSub_All ([ R28 , R11 ] , R39) ) ) iff R15 , ( R16 . ( Val_S (R16 , ( CQCSub_All ([ R28 , R11 ] , R39) )) ) ) |= ( CQCSub_All ([ R28 , R11 ] , R39) ))))))))))
proof
let R1 being QC-alphabet;
let R11 being (bound_QC-variable of R1);
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
let R28 being (Element of ( CQC-Sub-WFF R1 ));
let R39 being (second_Q_comp of [ R28 , R11 ]);
assume that
L1202: [ R28 , R11 ] is  quantifiable
and
L1203: (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (R15 , R16 |= ( CQC_Sub R28 ) iff R15 , ( R16 . ( Val_S (R16 , R28) ) ) |= R28));
let R16 being (Element of ( Valuations_in (R1 , R14) ));
set D102 = ( CQCSub_All ([ R28 , R11 ] , R39) );
set D103 = ( S_Bound ( @ D102 ) );
L1204: ((for R43 being (Element of R14) holds R15 , ( ( R16 . ( D103 | R43 ) ) . ( Val_S (( R16 . ( D103 | R43 ) ) , R28) ) ) |= R28) iff (for R43 being (Element of R14) holds R15 , ( ( R16 . ( D103 | R43 ) ) . ( ( NEx_Val (( R16 . ( D103 | R43 ) ) , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28)) by L1202 , L581;
set D104 = ( CQC_Sub R28 );
L1205: (R15 , R16 |= ( All (D103 , D104) ) iff (for R43 being (Element of R14) holds R15 , ( R16 . ( D103 | R43 ) ) |= D104)) by L466;
L1206: ((for R43 being (Element of R14) holds R15 , ( R16 . ( D103 | R43 ) ) |= D104) implies (for R43 being (Element of R14) holds R15 , ( ( R16 . ( D103 | R43 ) ) . ( Val_S (( R16 . ( D103 | R43 ) ) , R28) ) ) |= R28))
proof
assume L1207: (for R43 being (Element of R14) holds R15 , ( R16 . ( D103 | R43 ) ) |= D104);
let R43 being (Element of R14);
L1208: R15 , ( R16 . ( D103 | R43 ) ) |= D104 by L1207;
thus L1209: thesis by L1208 , L1203;
end;
L1210: ((for R43 being (Element of R14) holds R15 , ( ( R16 . ( D103 | R43 ) ) . ( Val_S (( R16 . ( D103 | R43 ) ) , R28) ) ) |= R28) implies (for R43 being (Element of R14) holds R15 , ( R16 . ( D103 | R43 ) ) |= D104))
proof
assume L1211: (for R43 being (Element of R14) holds R15 , ( ( R16 . ( D103 | R43 ) ) . ( Val_S (( R16 . ( D103 | R43 ) ) , R28) ) ) |= R28);
let R43 being (Element of R14);
L1212: R15 , ( ( R16 . ( D103 | R43 ) ) . ( Val_S (( R16 . ( D103 | R43 ) ) , R28) ) ) |= R28 by L1211;
thus L1213: thesis by L1212 , L1203;
end;
set D105 = ( CQC_Sub ( CQCSub_the_scope_of D102 ) );
L1214: (R15 , R16 |= ( CQCQuant (D102 , D105) ) iff R15 , R16 |= ( CQCQuant (D102 , ( CQC_Sub R28 )) )) by L1202 , L294;
L1215: ((for R43 being (Element of R14) holds R15 , ( ( R16 . ( D103 | R43 ) ) . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28) iff (for R43 being (Element of R14) holds R15 , ( R16 . ( ( NEx_Val (R16 , R28 , R11 , R39) ) +* ( R11 | R43 ) ) ) |= R28)) by L1202 , L828;
L1216: (R15 , ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) |= ( All (R11 , ( R28 `1 )) ) implies (for R43 being (Element of R14) holds R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= R28))
proof
assume L1217: R15 , ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) |= ( All (R11 , ( R28 `1 )) );
L1218: (for R43 being (Element of R14) holds R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= ( R28 `1 )) by L1217 , L466;
thus L1219: thesis by L1218 , L848;
end;
L1220: ((for R43 being (Element of R14) holds R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= R28) implies R15 , ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) |= ( All (R11 , ( R28 `1 )) ))
proof
assume L1221: (for R43 being (Element of R14) holds R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= R28);
L1222: (for R43 being (Element of R14) holds R15 , ( ( R16 . ( NEx_Val (R16 , R28 , R11 , R39) ) ) . ( R11 | R43 ) ) |= ( R28 `1 )) by L1221 , L848;
thus L1223: thesis by L1222 , L466;
end;
L1224: D102 is  Sub_universal by L1202 , L261;
thus L1225: thesis by L1224 , L1202 , L1214 , L1205 , L1206 , L1210 , L1204 , L1215 , L1220 , L1216 , L283 , L298 , L607 , L842 , L1191;
end;
scheme SubCQCInd1 { F1() -> QC-alphabet , P1[set] } : (for B37 being (Element of ( CQC-Sub-WFF F1() )) holds P1[ B37 ])
provided
L1226: (for B38 , B39 being (Element of ( CQC-Sub-WFF F1() )) holds (for B40 being (bound_QC-variable of F1()) holds (for B41 being (second_Q_comp of [ B38 , B40 ]) holds (for B42 being (Element of ( NAT )) holds (for B43 being (CQC-variable_list of B42 , F1()) holds (for B44 being (QC-pred_symbol of B42 , F1()) holds (for B45 being (Element of ( vSUB F1() )) holds (P1[ ( Sub_P (B44 , B43 , B45) ) ] & (B38 is F1() -Sub_VERUM implies P1[ B38 ]) & (P1[ B38 ] implies P1[ ( Sub_not B38 ) ]) & ((( B38 `2 ) = ( B39 `2 ) & P1[ B38 ] & P1[ B39 ]) implies P1[ ( CQCSub_& (B38 , B39) ) ]) & (([ B38 , B40 ] is  quantifiable & P1[ B38 ]) implies P1[ ( CQCSub_All ([ B38 , B40 ] , B41) ) ])))))))))
proof
L1227: (for B46 , B47 being (Element of ( CQC-Sub-WFF F1() )) holds (for B48 being (bound_QC-variable of F1()) holds (for B49 being (second_Q_comp of [ B46 , B48 ]) holds (([ B46 , B48 ] is  quantifiable & P1[ B46 ]) implies P1[ ( Sub_All ([ B46 , B48 ] , B49) ) ]))))
proof
let C41 , C42 being (Element of ( CQC-Sub-WFF F1() ));
let C43 being (bound_QC-variable of F1());
let C44 being (second_Q_comp of [ C41 , C43 ]);
assume that
L1228: [ C41 , C43 ] is  quantifiable
and
L1229: P1[ C41 ];
L1230: P1[ ( CQCSub_All ([ C41 , C43 ] , C44) ) ] by L1226 , L1228 , L1229;
thus L1231: thesis by L1230 , L1228 , L254;
end;
L1232: (for B50 , B51 being (Element of ( CQC-Sub-WFF F1() )) holds ((( B50 `2 ) = ( B51 `2 ) & P1[ B50 ] & P1[ B51 ]) implies P1[ ( Sub_& (B50 , B51) ) ]))
proof
let C45 , C46 being (Element of ( CQC-Sub-WFF F1() ));
assume that
L1233: ( C45 `2 ) = ( C46 `2 )
and
L1234: (P1[ C45 ] & P1[ C46 ]);
L1235: ( CQCSub_& (C45 , C46) ) = ( Sub_& (C45 , C46) ) by L1233 , L200;
thus L1236: thesis by L1235 , L1226 , L1233 , L1234;
end;
L1237: (for B52 , B53 being (Element of ( CQC-Sub-WFF F1() )) holds (for B54 being (bound_QC-variable of F1()) holds (for B55 being (second_Q_comp of [ B52 , B54 ]) holds (for B56 being (Element of ( NAT )) holds (for B57 being (CQC-variable_list of B56 , F1()) holds (for B58 being (QC-pred_symbol of B56 , F1()) holds (for B59 being (Element of ( vSUB F1() )) holds (P1[ ( Sub_P (B58 , B57 , B59) ) ] & (B52 is F1() -Sub_VERUM implies P1[ B52 ]) & (P1[ B52 ] implies P1[ ( Sub_not B52 ) ]) & ((( B52 `2 ) = ( B53 `2 ) & P1[ B52 ] & P1[ B53 ]) implies P1[ ( Sub_& (B52 , B53) ) ]) & (([ B52 , B54 ] is  quantifiable & P1[ B52 ]) implies P1[ ( Sub_All ([ B52 , B54 ] , B55) ) ]))))))))) by L1232 , L1226 , L1227;
thus L1238: thesis from SUBSTUT1:sch 5(L1237);
end;
theorem
L1239: (for R1 being QC-alphabet holds (for R14 being non  empty set holds (for R15 being (interpretation of R1 , R14) holds (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (R15 , R16 |= ( CQC_Sub R28 ) iff R15 , ( R16 . ( Val_S (R16 , R28) ) ) |= R28))))))
proof
let R1 being QC-alphabet;
let R14 being non  empty set;
let R15 being (interpretation of R1 , R14);
defpred S6[ (Element of ( CQC-Sub-WFF R1 )) ] means (for R16 being (Element of ( Valuations_in (R1 , R14) )) holds (R15 , R16 |= ( CQC_Sub $1 ) iff R15 , ( R16 . ( Val_S (R16 , $1) ) ) |= $1));
L1240: (for B60 , B61 being (Element of ( CQC-Sub-WFF R1 )) holds (for B62 being (bound_QC-variable of R1) holds (for B63 being (second_Q_comp of [ B60 , B62 ]) holds (for B64 being (Element of ( NAT )) holds (for B65 being (CQC-variable_list of B64 , R1) holds (for B66 being (QC-pred_symbol of B64 , R1) holds (for B67 being (Element of ( vSUB R1 )) holds (S6[ ( Sub_P (B66 , B65 , B67) ) ] & (B60 is R1 -Sub_VERUM implies S6[ B60 ]) & (S6[ B60 ] implies S6[ ( Sub_not B60 ) ]) & ((( B60 `2 ) = ( B61 `2 ) & S6[ B60 ] & S6[ B61 ]) implies S6[ ( CQCSub_& (B60 , B61) ) ]) & (([ B60 , B62 ] is  quantifiable & S6[ B60 ]) implies S6[ ( CQCSub_All ([ B60 , B62 ] , B63) ) ]))))))))) by L72 , L172 , L194 , L228 , L1201;
thus L1241: (for R28 being (Element of ( CQC-Sub-WFF R1 )) holds S6[ R28 ]) from SubCQCInd1(L1240);
end;
