:: Finite Join and Finite Meet, and Dual Lattices
::  by Andrzej Trybulec
::
:: Received August 10, 1990
:: Copyright (c) 1990-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies XBOOLE_0, SUBSET_1, FUNCT_1, RELAT_1, FUNCT_4, TARSKI, FINSUB_1,
      BINOP_1, LATTICES, EQREL_1, STRUCT_0, PBOOLE, SETWISEO, FUNCOP_1,
      FILTER_0, FINSET_1, XXREAL_2, LATTICE2;
 notations TARSKI, XBOOLE_0, SUBSET_1, RELAT_1, FUNCT_1, FUNCT_2, FUNCT_4,
      PARTFUN1, FUNCOP_1, BINOP_1, FINSET_1, STRUCT_0, LATTICES, FINSUB_1,
      SETWISEO, FILTER_0;
 constructors BINOP_1, FUNCOP_1, FUNCT_4, SETWISEO, GROUP_1, FILTER_0,
      RELSET_1;
 registrations XBOOLE_0, RELAT_1, FUNCT_1, FUNCT_2, STRUCT_0, LATTICES,
      RELSET_1, FILTER_0;
 requirements SUBSET, BOOLE;
 definitions LATTICES, BINOP_1, SETWISEO, FILTER_0;
 theorems LATTICES, BINOP_1, SETWISEO, FUNCOP_1, FUNCT_4, SETWOP_2, FINSET_1,
      FINSUB_1, FUNCT_2, FUNCT_1, FILTER_0, GRFUNC_1, RELAT_1, RLSUB_2,
      XBOOLE_1;
 schemes FRAENKEL;

begin
theorem
L1: (for R1 being set holds (for R2 being non  empty set holds (for R3 being (Subset of R1) holds (for R6 being (Function of R1 , R2) holds ( dom ( R6 | R3 ) ) = R3))))
proof
let R1 being set;
let R2 being non  empty set;
let R3 being (Subset of R1);
let R6 being (Function of R1 , R2);
thus L2: ( dom ( R6 | R3 ) ) = ( ( dom R6 ) /\ R3 ) by RELAT_1:61
.= ( R1 /\ R3 ) by FUNCT_2:def 1
.= R3 by XBOOLE_1:28;
end;
theorem
L3: (for R1 being set holds (for R2 being non  empty set holds (for R3 being (Subset of R1) holds (for R5 being (Function of R1 , R2) holds (for R6 being (Function of R1 , R2) holds (( R5 | R3 ) = ( R6 | R3 ) iff (for R4 being (Element of R1) holds (R4 in R3 implies ( R6 . R4 ) = ( R5 . R4 )))))))))
proof
let R1 being set;
let R2 being non  empty set;
let R3 being (Subset of R1);
let R5 being (Function of R1 , R2);
let R6 being (Function of R1 , R2);
thus L4: (( R5 | R3 ) = ( R6 | R3 ) implies (for R4 being (Element of R1) holds (R4 in R3 implies ( R6 . R4 ) = ( R5 . R4 ))))
proof
assume L5: ( R5 | R3 ) = ( R6 | R3 );
let R4 being (Element of R1);
assume L6: R4 in R3;
thus L7: ( R6 . R4 ) = ( ( R6 | R3 ) . R4 ) by L6 , FUNCT_1:49
.= ( R5 . R4 ) by L5 , L6 , FUNCT_1:49;
end;

reconsider D1 = ( R5 | R3 ) , D2 = ( R6 | R3 ) as (Function of R3 , R2) by FUNCT_2:32;
assume L8: (for R4 being (Element of R1) holds (R4 in R3 implies ( R6 . R4 ) = ( R5 . R4 )));
L9:
now
let C1 being set;
assume L10: C1 in R3;
thus L11: ( D1 . C1 ) = ( R5 . C1 ) by L10 , FUNCT_1:49
.= ( R6 . C1 ) by L8 , L10
.= ( D2 . C1 ) by L10 , FUNCT_1:49;
end;
thus L12: ( R5 | R3 ) = ( D1 | R3 )
.= ( D2 | R3 ) by L9 , FUNCT_2:12
.= ( R6 | R3 );
end;
theorem
L13: (for R1 being set holds (for R2 being non  empty set holds (for R5 being (Function of R1 , R2) holds (for R6 being (Function of R1 , R2) holds (for B1 being set holds ( R5 +* ( R6 | B1 ) ) is (Function of R1 , R2))))))
proof
let R1 being set;
let R2 being non  empty set;
let R5 being (Function of R1 , R2);
let R6 being (Function of R1 , R2);
let C2 being set;
L14: (( dom R5 ) = R1 & ( dom R6 ) = R1) by FUNCT_2:def 1;
L15: ( dom ( R5 +* ( R6 | C2 ) ) ) = ( ( dom R5 ) \/ ( dom ( R6 | C2 ) ) ) by FUNCT_4:def 1
.= ( ( dom R5 ) \/ ( ( dom R6 ) /\ C2 ) ) by RELAT_1:61
.= R1 by L14 , XBOOLE_1:22;
thus L16: thesis by L15 , FUNCT_2:67;
end;
theorem
L17: (for R1 being set holds (for R2 being non  empty set holds (for R3 being (Subset of R1) holds (for R5 being (Function of R1 , R2) holds (for R6 being (Function of R1 , R2) holds ( ( R6 | R3 ) +* R5 ) = R5)))))
proof
let R1 being set;
let R2 being non  empty set;
let R3 being (Subset of R1);
let R5 being (Function of R1 , R2);
let R6 being (Function of R1 , R2);
L18: (( dom ( R6 | R3 ) ) = R3 & ( dom R5 ) = R1) by L1 , FUNCT_2:def 1;
thus L19: thesis by L18 , FUNCT_4:19;
end;
theorem
L20: (for B2 , B3 being Function holds (B3 c= B2 implies ( B2 +* B3 ) = B2))
proof
let C3 , C4 being Function;
assume L21: C4 c= C3;
L22: ( dom C4 ) c= ( dom C3 ) by L21 , GRFUNC_1:2;
L23: ( dom C3 ) = ( ( dom C3 ) \/ ( dom C4 ) ) by L22 , XBOOLE_1:12;
L24: (for B4 being set holds (B4 in ( dom C3 ) implies ((B4 in ( dom C4 ) implies ( C3 . B4 ) = ( C4 . B4 )) & ((not B4 in ( dom C4 )) implies ( C3 . B4 ) = ( C3 . B4 ))))) by L21 , GRFUNC_1:2;
thus L25: thesis by L24 , L23 , FUNCT_4:def 1;
end;
theorem
L26: (for R1 being set holds (for R2 being non  empty set holds (for R3 being (Subset of R1) holds (for R5 being (Function of R1 , R2) holds ( R5 +* ( R5 | R3 ) ) = R5)))) by L20 , RELAT_1:59;
theorem
L27: (for R1 being set holds (for R2 being non  empty set holds (for R3 being (Subset of R1) holds (for R5 being (Function of R1 , R2) holds (for R6 being (Function of R1 , R2) holds ((for R4 being (Element of R1) holds (R4 in R3 implies ( R6 . R4 ) = ( R5 . R4 ))) implies ( R5 +* ( R6 | R3 ) ) = R5))))))
proof
let R1 being set;
let R2 being non  empty set;
let R3 being (Subset of R1);
let R5 being (Function of R1 , R2);
let R6 being (Function of R1 , R2);
assume L28: (for R4 being (Element of R1) holds (R4 in R3 implies ( R6 . R4 ) = ( R5 . R4 )));
L29: ( R6 | R3 ) = ( R5 | R3 ) by L28 , L3;
thus L30: thesis by L29 , L20 , RELAT_1:59;
end;
theorem
L31: (for R1 being set holds (for R2 being non  empty set holds (for R5 being (Function of R1 , R2) holds (for R6 being (Function of R1 , R2) holds (for R7 being (Finite_Subset of R1) holds ( ( R6 | R7 ) +* R5 ) = R5)))))
proof
let R1 being set;
let R2 being non  empty set;
let R5 being (Function of R1 , R2);
let R6 being (Function of R1 , R2);
let R7 being (Finite_Subset of R1);
reconsider D3 = R7 as (Subset of R1) by FINSUB_1:17;
L32: ( ( R6 | D3 ) +* R5 ) = R5 by L17;
thus L33: thesis by L32;
end;
theorem
L34: (for R1 being set holds (for R2 being non  empty set holds (for R6 being (Function of R1 , R2) holds (for R7 being (Finite_Subset of R1) holds ( dom ( R6 | R7 ) ) = R7))))
proof
let R1 being set;
let R2 being non  empty set;
let R6 being (Function of R1 , R2);
let R7 being (Finite_Subset of R1);
reconsider D4 = R7 as (Subset of R1) by FINSUB_1:17;
L35: ( dom ( R6 | D4 ) ) = D4 by L1;
thus L36: thesis by L35;
end;
theorem
L37: (for R1 being set holds (for R2 being non  empty set holds (for R5 being (Function of R1 , R2) holds (for R6 being (Function of R1 , R2) holds (for R7 being (Finite_Subset of R1) holds ((for R4 being (Element of R1) holds (R4 in R7 implies ( R6 . R4 ) = ( R5 . R4 ))) implies ( R5 +* ( R6 | R7 ) ) = R5))))))
proof
let R1 being set;
let R2 being non  empty set;
let R5 being (Function of R1 , R2);
let R6 being (Function of R1 , R2);
let R7 being (Finite_Subset of R1);
reconsider D5 = R7 as (Subset of R1) by FINSUB_1:17;
L38: ((for R4 being (Element of R1) holds (R4 in D5 implies ( R6 . R4 ) = ( R5 . R4 ))) implies ( R5 +* ( R6 | D5 ) ) = R5) by L27;
thus L39: thesis by L38;
end;
definition
let C5 being non  empty set;
let C6 , C7 being (BinOp of C5);
pred C6 absorbs C7
means
:L40: (for B5 , B6 being (Element of C5) holds ( C6 . (B5 , ( C7 . (B5 , B6) )) ) = B5)
;end;
notation
let C8 being non  empty set;
let C9 , C10 being (BinOp of C8);
antonym C9 doesn't_absorb C10 for C9 absorbs C10;
end;
theorem
L43: (for R8 being non  empty LattStr holds (((the L_join of R8) is  commutative  associative & (the L_meet of R8) is  commutative  associative & (the L_join of R8) absorbs (the L_meet of R8) & (the L_meet of R8) absorbs (the L_join of R8)) implies R8 is  Lattice-like))
proof
let R8 being non  empty LattStr;
assume that
L44: (the L_join of R8) is  commutative
and
L45: (the L_join of R8) is  associative
and
L46: (the L_meet of R8) is  commutative
and
L47: (the L_meet of R8) is  associative
and
L48: (the L_join of R8) absorbs (the L_meet of R8)
and
L49: (the L_meet of R8) absorbs (the L_join of R8);
thus L50: (for R9 being (Element of R8) holds (for R10 being (Element of R8) holds ( R9 "\/" R10 ) = ( R10 "\/" R9 ))) by L44 , BINOP_1:def 2;
thus L51: (for R9 being (Element of R8) holds (for R10 being (Element of R8) holds (for R11 being (Element of R8) holds ( R9 "\/" ( R10 "\/" R11 ) ) = ( ( R9 "\/" R10 ) "\/" R11 )))) by L45 , BINOP_1:def 3;
thus L52: (for R9 being (Element of R8) holds (for R10 being (Element of R8) holds ( ( R9 "/\" R10 ) "\/" R10 ) = R10))
proof
let R9 being (Element of R8);
let R10 being (Element of R8);
thus L53: ( ( R9 "/\" R10 ) "\/" R10 ) = ( R10 "\/" ( R9 "/\" R10 ) ) by L44 , BINOP_1:def 2
.= ( R10 "\/" ( R10 "/\" R9 ) ) by L46 , BINOP_1:def 2
.= R10 by L48 , L40;
end;

thus L54: (for R9 being (Element of R8) holds (for R10 being (Element of R8) holds ( R9 "/\" R10 ) = ( R10 "/\" R9 ))) by L46 , BINOP_1:def 2;
thus L55: (for R9 being (Element of R8) holds (for R10 being (Element of R8) holds (for R11 being (Element of R8) holds ( R9 "/\" ( R10 "/\" R11 ) ) = ( ( R9 "/\" R10 ) "/\" R11 )))) by L47 , BINOP_1:def 3;
let R9 being (Element of R8);
let R10 being (Element of R8);
thus L56: thesis by L49 , L40;
end;
definition
let C11 being LattStr;
func C11 .: ->  strict LattStr equals 
LattStr (# (the carrier of C11) , (the L_meet of C11) , (the L_join of C11) #);
correctness;
end;
registration
let C12 being non  empty LattStr;
cluster ( C12 .: ) -> non  empty;
coherence;
end;
theorem
L59: (for R8 being non  empty LattStr holds ((the carrier of R8) = (the carrier of ( R8 .: )) & (the L_join of R8) = (the L_meet of ( R8 .: )) & (the L_meet of R8) = (the L_join of ( R8 .: ))));
theorem
L60: (for B7 being  strict non  empty LattStr holds ( ( B7 .: ) .: ) = B7);
theorem
L61: (for R12 being Lattice holds (for R16 being (Element of R12) holds ((for R17 being (Element of R12) holds ( R16 "\/" R17 ) = R17) implies R16 = ( Bottom R12 ))))
proof
let R12 being Lattice;
let R16 being (Element of R12);
assume L62: (for R17 being (Element of R12) holds ( R16 "\/" R17 ) = R17);
L63:
now
let R17 being (Element of R12);
L64: ( R17 "\/" R16 ) = R17 by L62;
L65: R16 [= R17 by L64 , LATTICES:def 3;
thus L66: ( R17 "/\" R16 ) = R16 by L65 , LATTICES:4;
end;
thus L67: thesis by L63 , RLSUB_2:64;
end;
theorem
L68: (for R12 being Lattice holds (for R16 being (Element of R12) holds ((for R17 being (Element of R12) holds ( (the L_join of R12) . (R16 , R17) ) = R17) implies R16 = ( Bottom R12 ))))
proof
let R12 being Lattice;
let R16 being (Element of R12);
assume L69: (for R17 being (Element of R12) holds ( (the L_join of R12) . (R16 , R17) ) = R17);
L70: (for R17 being (Element of R12) holds ( R16 "\/" R17 ) = R17) by L69;
thus L71: thesis by L70 , L61;
end;
theorem
L72: (for R12 being Lattice holds (for R16 being (Element of R12) holds ((for R17 being (Element of R12) holds ( R16 "/\" R17 ) = R17) implies R16 = ( Top R12 ))))
proof
let R12 being Lattice;
let R16 being (Element of R12);
assume L73: (for R17 being (Element of R12) holds ( R16 "/\" R17 ) = R17);
L74:
now
let R17 being (Element of R12);
L75: ( R17 "/\" R16 ) = R17 by L73;
L76: R17 [= R16 by L75 , LATTICES:4;
thus L77: R16 = ( R17 "\/" R16 ) by L76 , LATTICES:def 3;
end;
thus L78: thesis by L74 , RLSUB_2:65;
end;
theorem
L79: (for R12 being Lattice holds (for R16 being (Element of R12) holds ((for R17 being (Element of R12) holds ( (the L_meet of R12) . (R16 , R17) ) = R17) implies R16 = ( Top R12 ))))
proof
let R12 being Lattice;
let R16 being (Element of R12);
assume L80: (for R17 being (Element of R12) holds ( (the L_meet of R12) . (R16 , R17) ) = R17);
L81: (for R17 being (Element of R12) holds ( R16 "/\" R17 ) = R17) by L80;
thus L82: thesis by L81 , L72;
end;
registration
let R12 being Lattice;
cluster (the L_join of R12) ->  idempotent;
coherence
proof
let R13 being (Element of R12);
thus L83: ( (the L_join of R12) . (R13 , R13) ) = ( R13 "\/" R13 )
.= R13;
end;
end;
registration
let C13 being  join-commutative non  empty \/-SemiLattStr;
cluster (the L_join of C13) ->  commutative;
coherence
proof
let C14 , C15 being (Element of C13);
thus L85: ( (the L_join of C13) . (C14 , C15) ) = ( C15 "\/" C14 ) by LATTICES:def 1
.= ( (the L_join of C13) . (C15 , C14) );
end;
end;
theorem
L87: (for R12 being Lattice holds ((the L_join of R12) is  having_a_unity implies ( Bottom R12 ) = ( the_unity_wrt (the L_join of R12) )))
proof
let R12 being Lattice;
set D6 = (the L_join of R12);
given R16 being (Element of R12) such that
L88: R16 is_a_unity_wrt D6;

L89: (for R17 being (Element of R12) holds ( (the L_join of R12) . (R16 , R17) ) = R17) by L88 , BINOP_1:4;
L90: R16 = ( Bottom R12 ) by L89 , L68;
thus L91: thesis by L90 , L88 , BINOP_1:def 8;
end;
registration
let C16 being  join-associative non  empty \/-SemiLattStr;
cluster (the L_join of C16) ->  associative;
coherence
proof
let C17 , C18 , C19 being (Element of C16);
thus L92: ( (the L_join of C16) . (C17 , ( (the L_join of C16) . (C18 , C19) )) ) = ( C17 "\/" ( C18 "\/" C19 ) )
.= ( ( C17 "\/" C18 ) "\/" C19 ) by LATTICES:def 5
.= ( (the L_join of C16) . (( (the L_join of C16) . (C17 , C18) ) , C19) );
end;
end;
registration
let R12 being Lattice;
cluster (the L_meet of R12) ->  idempotent;
coherence
proof
let R13 being (Element of R12);
thus L94: ( (the L_meet of R12) . (R13 , R13) ) = ( R13 "/\" R13 )
.= R13;
end;
end;
registration
let C20 being  meet-commutative non  empty /\-SemiLattStr;
cluster (the L_meet of C20) ->  commutative;
coherence
proof
let C21 , C22 being (Element of C20);
thus L96: ( (the L_meet of C20) . (C21 , C22) ) = ( C22 "/\" C21 ) by LATTICES:def 2
.= ( (the L_meet of C20) . (C22 , C21) );
end;
end;
registration
let C23 being  meet-associative non  empty /\-SemiLattStr;
cluster (the L_meet of C23) ->  associative;
coherence
proof
let C24 , C25 , C26 being (Element of C23);
thus L98: ( (the L_meet of C23) . (C24 , ( (the L_meet of C23) . (C25 , C26) )) ) = ( C24 "/\" ( C25 "/\" C26 ) )
.= ( ( C24 "/\" C25 ) "/\" C26 ) by LATTICES:def 7
.= ( (the L_meet of C23) . (( (the L_meet of C23) . (C24 , C25) ) , C26) );
end;
end;
theorem
L100: (for R12 being Lattice holds ((the L_meet of R12) is  having_a_unity implies ( Top R12 ) = ( the_unity_wrt (the L_meet of R12) )))
proof
let R12 being Lattice;
set D7 = (the L_meet of R12);
given R16 being (Element of R12) such that
L101: R16 is_a_unity_wrt D7;

L102: (for R17 being (Element of R12) holds ( (the L_meet of R12) . (R16 , R17) ) = R17) by L101 , BINOP_1:4;
L103: R16 = ( Top R12 ) by L102 , L79;
thus L104: thesis by L103 , L101 , BINOP_1:def 8;
end;
theorem
L105: (for R12 being Lattice holds (the L_join of R12) is_distributive_wrt (the L_join of R12))
proof
let R12 being Lattice;
L106:
now
let R13 being (Element of R12);
let R14 being (Element of R12);
let R15 being (Element of R12);
thus L107: ( (the L_join of R12) . (R13 , ( (the L_join of R12) . (R14 , R15) )) ) = ( R13 "\/" ( R14 "\/" R15 ) )
.= ( ( R13 "\/" R14 ) "\/" R15 ) by LATTICES:def 5
.= ( ( ( R13 "\/" R13 ) "\/" R14 ) "\/" R15 )
.= ( ( ( R13 "\/" R14 ) "\/" R13 ) "\/" R15 ) by LATTICES:def 5
.= ( ( R13 "\/" R14 ) "\/" ( R13 "\/" R15 ) ) by LATTICES:def 5
.= ( (the L_join of R12) . (( (the L_join of R12) . (R13 , R14) ) , ( (the L_join of R12) . (R13 , R15) )) );
end;
thus L108: thesis by L106 , BINOP_1:12;
end;
theorem
L109: (for R12 being Lattice holds (R12 is D_Lattice implies (the L_join of R12) is_distributive_wrt (the L_meet of R12)))
proof
let R12 being Lattice;
assume L110: R12 is D_Lattice;
L111:
now
let R13 being (Element of R12);
let R14 being (Element of R12);
let R15 being (Element of R12);
thus L112: ( (the L_join of R12) . (R13 , ( (the L_meet of R12) . (R14 , R15) )) ) = ( R13 "\/" ( R14 "/\" R15 ) )
.= ( ( R13 "\/" R14 ) "/\" ( R13 "\/" R15 ) ) by L110 , LATTICES:11
.= ( (the L_meet of R12) . (( (the L_join of R12) . (R13 , R14) ) , ( (the L_join of R12) . (R13 , R15) )) );
end;
thus L113: thesis by L111 , BINOP_1:12;
end;
theorem
L114: (for R12 being Lattice holds ((the L_join of R12) is_distributive_wrt (the L_meet of R12) implies R12 is  distributive))
proof
let R12 being Lattice;
assume L115: (the L_join of R12) is_distributive_wrt (the L_meet of R12);
L116: (for R13 being (Element of R12) holds (for R14 being (Element of R12) holds (for R15 being (Element of R12) holds ( R13 "\/" ( R14 "/\" R15 ) ) = ( ( R13 "\/" R14 ) "/\" ( R13 "\/" R15 ) )))) by L115 , BINOP_1:12;
let R13 being (Element of R12);
let R14 being (Element of R12);
let R15 being (Element of R12);
thus L117: ( R13 "/\" ( R14 "\/" R15 ) ) = ( ( R13 "/\" ( R15 "\/" R13 ) ) "/\" ( R15 "\/" R14 ) ) by LATTICES:def 9
.= ( R13 "/\" ( ( R15 "\/" R13 ) "/\" ( R15 "\/" R14 ) ) ) by LATTICES:def 7
.= ( R13 "/\" ( ( R13 "/\" R14 ) "\/" R15 ) ) by L116
.= ( ( ( R13 "/\" R14 ) "\/" R13 ) "/\" ( ( R13 "/\" R14 ) "\/" R15 ) ) by LATTICES:def 8
.= ( ( R13 "/\" R14 ) "\/" ( R13 "/\" R15 ) ) by L115 , BINOP_1:12;
end;
theorem
L118: (for R12 being Lattice holds (R12 is D_Lattice implies (the L_meet of R12) is_distributive_wrt (the L_join of R12)))
proof
let R12 being Lattice;
assume L119: R12 is D_Lattice;
L120:
now
let R13 being (Element of R12);
let R14 being (Element of R12);
let R15 being (Element of R12);
thus L121: ( (the L_meet of R12) . (R13 , ( (the L_join of R12) . (R14 , R15) )) ) = ( R13 "/\" ( R14 "\/" R15 ) )
.= ( ( R13 "/\" R14 ) "\/" ( R13 "/\" R15 ) ) by L119 , LATTICES:def 11
.= ( (the L_join of R12) . (( (the L_meet of R12) . (R13 , R14) ) , ( (the L_meet of R12) . (R13 , R15) )) );
end;
thus L122: thesis by L120 , BINOP_1:12;
end;
theorem
L123: (for R12 being Lattice holds ((the L_meet of R12) is_distributive_wrt (the L_join of R12) implies R12 is  distributive))
proof
let R12 being Lattice;
assume L124: (the L_meet of R12) is_distributive_wrt (the L_join of R12);
let R13 being (Element of R12);
let R14 being (Element of R12);
let R15 being (Element of R12);
thus L125: ( R13 "/\" ( R14 "\/" R15 ) ) = ( ( R13 "/\" R14 ) "\/" ( R13 "/\" R15 ) ) by L124 , BINOP_1:12;
end;
theorem
L126: (for R12 being Lattice holds (the L_meet of R12) is_distributive_wrt (the L_meet of R12))
proof
let R12 being Lattice;
L127:
now
let R13 being (Element of R12);
let R14 being (Element of R12);
let R15 being (Element of R12);
thus L128: ( (the L_meet of R12) . (R13 , ( (the L_meet of R12) . (R14 , R15) )) ) = ( R13 "/\" ( R14 "/\" R15 ) )
.= ( ( R13 "/\" R14 ) "/\" R15 ) by LATTICES:def 7
.= ( ( ( R13 "/\" R13 ) "/\" R14 ) "/\" R15 )
.= ( ( ( R13 "/\" R14 ) "/\" R13 ) "/\" R15 ) by LATTICES:def 7
.= ( ( R13 "/\" R14 ) "/\" ( R13 "/\" R15 ) ) by LATTICES:def 7
.= ( (the L_meet of R12) . (( (the L_meet of R12) . (R13 , R14) ) , ( (the L_meet of R12) . (R13 , R15) )) );
end;
thus L129: thesis by L127 , BINOP_1:12;
end;
theorem
L130: (for R12 being Lattice holds (the L_join of R12) absorbs (the L_meet of R12))
proof
let R12 being Lattice;
let C27 , C28 being (Element of R12);
thus L131: ( (the L_join of R12) . (C27 , ( (the L_meet of R12) . (C27 , C28) )) ) = ( C27 "\/" ( C27 "/\" C28 ) )
.= C27 by LATTICES:def 8;
end;
theorem
L132: (for R12 being Lattice holds (the L_meet of R12) absorbs (the L_join of R12))
proof
let R12 being Lattice;
let C29 , C30 being (Element of R12);
thus L133: ( (the L_meet of R12) . (C29 , ( (the L_join of R12) . (C29 , C30) )) ) = ( C29 "/\" ( C29 "\/" C30 ) )
.= C29 by LATTICES:def 9;
end;
definition
let C31 being non  empty set;
let C32 being Lattice;
let C33 being (Finite_Subset of C31);
let C34 being (Function of C31 , (the carrier of C32));
func FinJoin (C33 , C34) -> (Element of C32) equals 
( (the L_join of C32) $$ (C33 , C34) );
correctness;
func FinMeet (C33 , C34) -> (Element of C32) equals 
( (the L_meet of C32) $$ (C33 , C34) );
correctness;
end;
theorem
L135: (for R12 being Lattice holds (for R18 being non  empty set holds (for R19 being (Element of R18) holds (for R20 being (Finite_Subset of R18) holds (for R21 being (Function of R18 , (the carrier of R12)) holds (R19 in R20 implies ( R21 . R19 ) [= ( FinJoin (R20 , R21) )))))))
proof
let R12 being Lattice;
let R18 being non  empty set;
let R19 being (Element of R18);
let R20 being (Finite_Subset of R18);
let R21 being (Function of R18 , (the carrier of R12));
assume L136: R19 in R20;
L137: ( ( R21 . R19 ) "\/" ( FinJoin (R20 , R21) ) ) = ( FinJoin (R20 , R21) ) by L136 , SETWISEO:22;
thus L138: thesis by L137 , LATTICES:def 3;
end;
theorem
L139: (for R12 being Lattice holds (for R16 being (Element of R12) holds (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R21 being (Function of R18 , (the carrier of R12)) holds ((ex R19 being (Element of R18) st (R19 in R20 & R16 [= ( R21 . R19 ))) implies R16 [= ( FinJoin (R20 , R21) )))))))
proof
let R12 being Lattice;
let R16 being (Element of R12);
let R18 being non  empty set;
let R20 being (Finite_Subset of R18);
let R21 being (Function of R18 , (the carrier of R12));
given R19 being (Element of R18) such that
L140: R19 in R20
and
L141: R16 [= ( R21 . R19 );

L142: ( R21 . R19 ) [= ( FinJoin (R20 , R21) ) by L140 , L135;
L143: ( ( R21 . R19 ) "\/" ( FinJoin (R20 , R21) ) ) = ( FinJoin (R20 , R21) ) by L142 , LATTICES:def 3;
L144: ( R16 "\/" ( FinJoin (R20 , R21) ) ) = ( ( R16 "\/" ( R21 . R19 ) ) "\/" ( FinJoin (R20 , R21) ) ) by L143 , LATTICES:def 5
.= ( FinJoin (R20 , R21) ) by L141 , L143 , LATTICES:def 3;
thus L145: thesis by L144 , LATTICES:def 3;
end;
theorem
L146: (for R12 being Lattice holds (for R16 being (Element of R12) holds (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R21 being (Function of R18 , (the carrier of R12)) holds (((for R19 being (Element of R18) holds (R19 in R20 implies ( R21 . R19 ) = R16)) & R20 <> ( {} )) implies ( FinJoin (R20 , R21) ) = R16)))))) by SETWISEO:24;
theorem
L147: (for R12 being Lattice holds (for R16 being (Element of R12) holds (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R21 being (Function of R18 , (the carrier of R12)) holds (( FinJoin (R20 , R21) ) [= R16 implies (for R19 being (Element of R18) holds (R19 in R20 implies ( R21 . R19 ) [= R16))))))))
proof
let R12 being Lattice;
let R16 being (Element of R12);
let R18 being non  empty set;
let R20 being (Finite_Subset of R18);
let R21 being (Function of R18 , (the carrier of R12));
assume L148: ( FinJoin (R20 , R21) ) [= R16;
let R19 being (Element of R18);
assume L149: R19 in R20;
L150: ( R21 . R19 ) [= ( FinJoin (R20 , R21) ) by L149 , L135;
thus L151: thesis by L150 , L148 , LATTICES:7;
end;
theorem
L152: (for R12 being Lattice holds (for R16 being (Element of R12) holds (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R21 being (Function of R18 , (the carrier of R12)) holds ((R20 <> ( {} ) & (for R19 being (Element of R18) holds (R19 in R20 implies ( R21 . R19 ) [= R16))) implies ( FinJoin (R20 , R21) ) [= R16))))))
proof
let R12 being Lattice;
let R16 being (Element of R12);
let R18 being non  empty set;
let R20 being (Finite_Subset of R18);
let R21 being (Function of R18 , (the carrier of R12));
assume that
L153: R20 <> ( {} )
and
L154: (for R19 being (Element of R18) holds (R19 in R20 implies ( R21 . R19 ) [= R16));
set D8 = (the L_join of R12);
L155:
now
let R19 being (Element of R18);
assume L156: R19 in R20;
L157: ( R21 . R19 ) [= R16 by L156 , L154;
thus L158: ( ( D8 [:] (R21 , R16) ) . R19 ) = ( ( R21 . R19 ) "\/" R16 ) by FUNCOP_1:48
.= R16 by L157 , LATTICES:def 3;
end;
L159: ( ( FinJoin (R20 , R21) ) "\/" R16 ) = ( D8 $$ (R20 , ( D8 [:] (R21 , R16) )) ) by L153 , L105 , SETWISEO:28
.= R16 by L153 , L155 , SETWISEO:24;
thus L160: thesis by L159 , LATTICES:def 3;
end;
theorem
L161: (for R12 being Lattice holds (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R21 being (Function of R18 , (the carrier of R12)) holds (for R22 being (Function of R18 , (the carrier of R12)) holds ((R20 <> ( {} ) & (for R19 being (Element of R18) holds (R19 in R20 implies ( R21 . R19 ) [= ( R22 . R19 )))) implies ( FinJoin (R20 , R21) ) [= ( FinJoin (R20 , R22) )))))))
proof
let R12 being Lattice;
let R18 being non  empty set;
let R20 being (Finite_Subset of R18);
let R21 being (Function of R18 , (the carrier of R12));
let R22 being (Function of R18 , (the carrier of R12));
assume that
L162: R20 <> ( {} )
and
L163: (for R19 being (Element of R18) holds (R19 in R20 implies ( R21 . R19 ) [= ( R22 . R19 )));
L164:
now
let R19 being (Element of R18);
assume L165: R19 in R20;
L166: ( R21 . R19 ) [= ( R22 . R19 ) by L165 , L163;
thus L167: ( R21 . R19 ) [= ( FinJoin (R20 , R22) ) by L166 , L165 , L139;
end;
thus L168: thesis by L164 , L162 , L152;
end;
theorem
L169: (for R12 being Lattice holds (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R21 being (Function of R18 , (the carrier of R12)) holds (for R22 being (Function of R18 , (the carrier of R12)) holds ((R20 <> ( {} ) & ( R21 | R20 ) = ( R22 | R20 )) implies ( FinJoin (R20 , R21) ) = ( FinJoin (R20 , R22) )))))))
proof
let R12 being Lattice;
let R18 being non  empty set;
let R20 being (Finite_Subset of R18);
let R21 being (Function of R18 , (the carrier of R12));
let R22 being (Function of R18 , (the carrier of R12));
assume that
L170: R20 <> ( {} )
and
L171: ( R21 | R20 ) = ( R22 | R20 );
L172: ( R21 .: R20 ) = ( R22 .: R20 ) by L171 , RELAT_1:166;
thus L173: thesis by L172 , L170 , SETWISEO:26;
end;
theorem
L174: (for R12 being Lattice holds (for R17 being (Element of R12) holds (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R21 being (Function of R18 , (the carrier of R12)) holds (R20 <> ( {} ) implies ( R17 "\/" ( FinJoin (R20 , R21) ) ) = ( FinJoin (R20 , ( (the L_join of R12) [;] (R17 , R21) )) ))))))) by L105 , SETWISEO:27;
registration
let C35 being Lattice;
cluster ( C35 .: ) ->  Lattice-like;
coherence
proof
L175: ((the L_join of ( C35 .: )) absorbs (the L_meet of ( C35 .: )) & (the L_meet of ( C35 .: )) absorbs (the L_join of ( C35 .: ))) by L130 , L132;
thus L176: thesis by L175 , L43;
end;
end;
theorem
L178: (for R18 being non  empty set holds (for B8 being Lattice holds (for B9 being (Finite_Subset of R18) holds (for B10 being (Function of R18 , (the carrier of B8)) holds (for B11 being (Function of R18 , (the carrier of ( B8 .: ))) holds (B10 = B11 implies (( FinJoin (B9 , B10) ) = ( FinMeet (B9 , B11) ) & ( FinMeet (B9 , B10) ) = ( FinJoin (B9 , B11) ))))))));
theorem
L179: (for R12 being Lattice holds (for R13 being (Element of R12) holds (for R14 being (Element of R12) holds (for B12 , B13 being (Element of ( R12 .: )) holds ((R13 = B12 & R14 = B13) implies (( R13 "/\" R14 ) = ( B12 "\/" B13 ) & ( R13 "\/" R14 ) = ( B12 "/\" B13 )))))));
theorem
L180: (for R12 being Lattice holds (for R13 being (Element of R12) holds (for R14 being (Element of R12) holds (R13 [= R14 implies (for B14 , B15 being (Element of ( R12 .: )) holds ((R13 = B14 & R14 = B15) implies B15 [= B14))))))
proof
let R12 being Lattice;
let R13 being (Element of R12);
let R14 being (Element of R12);
assume L181: R13 [= R14;
L182: ( R13 "\/" R14 ) = R14 by L181 , LATTICES:def 3;
let C36 , C37 being (Element of ( R12 .: ));
assume L183: (R13 = C36 & R14 = C37);
L184: ( C37 "/\" C36 ) = C37 by L183 , L182 , L179;
thus L185: thesis by L184 , LATTICES:4;
end;
theorem
L186: (for R12 being Lattice holds (for R13 being (Element of R12) holds (for R14 being (Element of R12) holds (for B16 , B17 being (Element of ( R12 .: )) holds ((B16 [= B17 & R13 = B16 & R14 = B17) implies R14 [= R13)))))
proof
let R12 being Lattice;
let R13 being (Element of R12);
let R14 being (Element of R12);
let C38 , C39 being (Element of ( R12 .: ));
assume that
L187: C38 [= C39
and
L188: (R13 = C38 & R14 = C39);
L189: ( C38 "\/" C39 ) = C39 by L187 , LATTICES:def 3;
L190: ( R14 "/\" R13 ) = R14 by L189 , L188 , L179;
thus L191: thesis by L190 , LATTICES:4;
end;
theorem
L192: (for R12 being Lattice holds (for R18 being non  empty set holds (for R19 being (Element of R18) holds (for R20 being (Finite_Subset of R18) holds (for R21 being (Function of R18 , (the carrier of R12)) holds (R19 in R20 implies ( FinMeet (R20 , R21) ) [= ( R21 . R19 )))))))
proof
let R12 being Lattice;
let R18 being non  empty set;
let R19 being (Element of R18);
let R20 being (Finite_Subset of R18);
let R21 being (Function of R18 , (the carrier of R12));
reconsider D9 = R21 as (Function of R18 , (the carrier of ( R12 .: )));
assume L193: R19 in R20;
L194: ( D9 . R19 ) [= ( FinJoin (R20 , D9) ) by L193 , L135;
thus L195: thesis by L194 , L186;
end;
theorem
L196: (for R12 being Lattice holds (for R16 being (Element of R12) holds (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R21 being (Function of R18 , (the carrier of R12)) holds ((ex R19 being (Element of R18) st (R19 in R20 & ( R21 . R19 ) [= R16)) implies ( FinMeet (R20 , R21) ) [= R16))))))
proof
let R12 being Lattice;
let R16 being (Element of R12);
let R18 being non  empty set;
let R20 being (Finite_Subset of R18);
let R21 being (Function of R18 , (the carrier of R12));
given R19 being (Element of R18) such that
L197: R19 in R20
and
L198: ( R21 . R19 ) [= R16;

reconsider D10 = R16 as (Element of ( R12 .: ));
reconsider D11 = R21 as (Function of R18 , (the carrier of ( R12 .: )));
L199: D10 [= ( D11 . R19 ) by L198 , L180;
L200: D10 [= ( FinJoin (R20 , D11) ) by L199 , L197 , L139;
thus L201: thesis by L200 , L186;
end;
theorem
L202: (for R12 being Lattice holds (for R16 being (Element of R12) holds (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R21 being (Function of R18 , (the carrier of R12)) holds (((for R19 being (Element of R18) holds (R19 in R20 implies ( R21 . R19 ) = R16)) & R20 <> ( {} )) implies ( FinMeet (R20 , R21) ) = R16)))))) by SETWISEO:24;
theorem
L203: (for R12 being Lattice holds (for R17 being (Element of R12) holds (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R21 being (Function of R18 , (the carrier of R12)) holds (R20 <> ( {} ) implies ( R17 "/\" ( FinMeet (R20 , R21) ) ) = ( FinMeet (R20 , ( (the L_meet of R12) [;] (R17 , R21) )) ))))))) by L126 , SETWISEO:27;
theorem
L204: (for R12 being Lattice holds (for R16 being (Element of R12) holds (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R21 being (Function of R18 , (the carrier of R12)) holds (R16 [= ( FinMeet (R20 , R21) ) implies (for R19 being (Element of R18) holds (R19 in R20 implies R16 [= ( R21 . R19 )))))))))
proof
let R12 being Lattice;
let R16 being (Element of R12);
let R18 being non  empty set;
let R20 being (Finite_Subset of R18);
let R21 being (Function of R18 , (the carrier of R12));
assume L205: R16 [= ( FinMeet (R20 , R21) );
let R19 being (Element of R18);
assume L206: R19 in R20;
L207: ( FinMeet (R20 , R21) ) [= ( R21 . R19 ) by L206 , L192;
thus L208: thesis by L207 , L205 , LATTICES:7;
end;
theorem
L209: (for R12 being Lattice holds (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R21 being (Function of R18 , (the carrier of R12)) holds (for R22 being (Function of R18 , (the carrier of R12)) holds ((R20 <> ( {} ) & ( R21 | R20 ) = ( R22 | R20 )) implies ( FinMeet (R20 , R21) ) = ( FinMeet (R20 , R22) )))))))
proof
let R12 being Lattice;
let R18 being non  empty set;
let R20 being (Finite_Subset of R18);
let R21 being (Function of R18 , (the carrier of R12));
let R22 being (Function of R18 , (the carrier of R12));
reconsider D12 = R21 , D13 = R22 as (Function of R18 , (the carrier of ( R12 .: )));
L210: (( FinMeet (R20 , R21) ) = ( FinJoin (R20 , D12) ) & ( FinMeet (R20 , R22) ) = ( FinJoin (R20 , D13) ));
assume L211: (R20 <> ( {} ) & ( R21 | R20 ) = ( R22 | R20 ));
thus L212: thesis by L211 , L210 , L169;
end;
theorem
L213: (for R12 being Lattice holds (for R16 being (Element of R12) holds (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R21 being (Function of R18 , (the carrier of R12)) holds ((R20 <> ( {} ) & (for R19 being (Element of R18) holds (R19 in R20 implies R16 [= ( R21 . R19 )))) implies R16 [= ( FinMeet (R20 , R21) )))))))
proof
let R12 being Lattice;
let R16 being (Element of R12);
let R18 being non  empty set;
let R20 being (Finite_Subset of R18);
let R21 being (Function of R18 , (the carrier of R12));
assume that
L214: R20 <> ( {} )
and
L215: (for R19 being (Element of R18) holds (R19 in R20 implies R16 [= ( R21 . R19 )));
reconsider D14 = R16 as (Element of ( R12 .: ));
reconsider D15 = R21 as (Function of R18 , (the carrier of ( R12 .: )));
L216: (for R19 being (Element of R18) holds (R19 in R20 implies ( D15 . R19 ) [= D14)) by L215 , L180;
L217: ( FinJoin (R20 , D15) ) [= D14 by L216 , L214 , L152;
thus L218: thesis by L217 , L186;
end;
theorem
L219: (for R12 being Lattice holds (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R21 being (Function of R18 , (the carrier of R12)) holds (for R22 being (Function of R18 , (the carrier of R12)) holds ((R20 <> ( {} ) & (for R19 being (Element of R18) holds (R19 in R20 implies ( R21 . R19 ) [= ( R22 . R19 )))) implies ( FinMeet (R20 , R21) ) [= ( FinMeet (R20 , R22) )))))))
proof
let R12 being Lattice;
let R18 being non  empty set;
let R20 being (Finite_Subset of R18);
let R21 being (Function of R18 , (the carrier of R12));
let R22 being (Function of R18 , (the carrier of R12));
assume that
L220: R20 <> ( {} )
and
L221: (for R19 being (Element of R18) holds (R19 in R20 implies ( R21 . R19 ) [= ( R22 . R19 )));
L222:
now
let R19 being (Element of R18);
assume L223: R19 in R20;
L224: ( R21 . R19 ) [= ( R22 . R19 ) by L223 , L221;
thus L225: ( FinMeet (R20 , R21) ) [= ( R22 . R19 ) by L224 , L223 , L196;
end;
thus L226: thesis by L222 , L220 , L213;
end;
theorem
L227: (for B18 being Lattice holds (B18 is  lower-bounded iff ( B18 .: ) is  upper-bounded))
proof
let C40 being Lattice;
thus L228: (C40 is  lower-bounded implies ( C40 .: ) is  upper-bounded)
proof
given C41 being (Element of C40) such that
L229: (for B19 being (Element of C40) holds (( C41 "/\" B19 ) = C41 & ( B19 "/\" C41 ) = C41));

reconsider D16 = C41 as (Element of ( C40 .: ));
take D16;
let C42 being (Element of ( C40 .: ));
reconsider D17 = C42 as (Element of C40);
thus L230: ( D16 "\/" C42 ) = ( C41 "/\" D17 )
.= D16 by L229;
thus L231: ( C42 "\/" D16 ) = D16 by L230;
end;

given C43 being (Element of ( C40 .: )) such that
L232: (for B20 being (Element of ( C40 .: )) holds (( C43 "\/" B20 ) = C43 & ( B20 "\/" C43 ) = C43));

reconsider D18 = C43 as (Element of C40);
take D18;
let C44 being (Element of C40);
reconsider D19 = C44 as (Element of ( C40 .: ));
thus L233: ( D18 "/\" C44 ) = ( C43 "\/" D19 )
.= D18 by L232;
thus L234: ( C44 "/\" D18 ) = D18 by L233;
end;
theorem
L235: (for B21 being Lattice holds (B21 is  upper-bounded iff ( B21 .: ) is  lower-bounded))
proof
let C45 being Lattice;
thus L236: (C45 is  upper-bounded implies ( C45 .: ) is  lower-bounded)
proof
given C46 being (Element of C45) such that
L237: (for B22 being (Element of C45) holds (( C46 "\/" B22 ) = C46 & ( B22 "\/" C46 ) = C46));

reconsider D20 = C46 as (Element of ( C45 .: ));
take D20;
let C47 being (Element of ( C45 .: ));
reconsider D21 = C47 as (Element of C45);
thus L238: ( D20 "/\" C47 ) = ( C46 "\/" D21 )
.= D20 by L237;
thus L239: ( C47 "/\" D20 ) = D20 by L238;
end;

given C48 being (Element of ( C45 .: )) such that
L240: (for B23 being (Element of ( C45 .: )) holds (( C48 "/\" B23 ) = C48 & ( B23 "/\" C48 ) = C48));

reconsider D22 = C48 as (Element of C45);
take D22;
let C49 being (Element of C45);
reconsider D23 = C49 as (Element of ( C45 .: ));
thus L241: ( D22 "\/" C49 ) = ( C48 "/\" D23 )
.= D22 by L240;
thus L242: ( C49 "\/" D22 ) = D22 by L241;
end;
theorem
L243: (for R12 being Lattice holds (R12 is D_Lattice iff ( R12 .: ) is D_Lattice)) by L114 , L118;
theorem
L244: (for R23 being 0_Lattice holds ( Bottom R23 ) is_a_unity_wrt (the L_join of R23))
proof
let R23 being 0_Lattice;
L245:
now
let R26 being (Element of R23);
thus L246: ( (the L_join of R23) . (( Bottom R23 ) , R26) ) = ( ( Bottom R23 ) "\/" R26 )
.= R26;
end;
thus L247: thesis by L245 , BINOP_1:4;
end;
registration
let R23 being 0_Lattice;
cluster (the L_join of R23) ->  having_a_unity;
coherence
proof
L248: ( Bottom R23 ) is_a_unity_wrt (the L_join of R23) by L244;
thus L249: thesis by L248 , SETWISEO:def 2;
end;
end;
theorem
L251: (for R23 being 0_Lattice holds ( Bottom R23 ) = ( the_unity_wrt (the L_join of R23) )) by L87;
theorem
L252: (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R23 being 0_Lattice holds (for R24 being (Function of R18 , (the carrier of R23)) holds (for R25 being (Function of R18 , (the carrier of R23)) holds (( R24 | R20 ) = ( R25 | R20 ) implies ( FinJoin (R20 , R24) ) = ( FinJoin (R20 , R25) )))))))
proof
let R18 being non  empty set;
let R20 being (Finite_Subset of R18);
let R23 being 0_Lattice;
let R24 being (Function of R18 , (the carrier of R23));
let R25 being (Function of R18 , (the carrier of R23));
set D24 = (the L_join of R23);
L253: ( Bottom R23 ) = ( the_unity_wrt D24 ) by L87;
assume L254: ( R24 | R20 ) = ( R25 | R20 );
L255:
now
per cases ;
suppose L256: R20 = ( {} );

thus L257: ( FinJoin (R20 , R24) ) = ( D24 $$ (( {}. R18 ) , R24) ) by L256
.= ( Bottom R23 ) by L253 , SETWISEO:31
.= ( D24 $$ (( {}. R18 ) , R25) ) by L253 , SETWISEO:31
.= ( FinJoin (R20 , R25) ) by L256;
end;
suppose L258: R20 <> ( {} );

thus L259: thesis by L258 , L254 , L169;
end;
end;
thus L261: thesis by L255;
end;
theorem
L262: (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R23 being 0_Lattice holds (for R24 being (Function of R18 , (the carrier of R23)) holds (for R26 being (Element of R23) holds ((for R19 being (Element of R18) holds (R19 in R20 implies ( R24 . R19 ) [= R26)) implies ( FinJoin (R20 , R24) ) [= R26))))))
proof
let R18 being non  empty set;
let R20 being (Finite_Subset of R18);
let R23 being 0_Lattice;
let R24 being (Function of R18 , (the carrier of R23));
let R26 being (Element of R23);
assume L263: (for R19 being (Element of R18) holds (R19 in R20 implies ( R24 . R19 ) [= R26));
set D25 = (the L_join of R23);
L264: ( Bottom R23 ) = ( the_unity_wrt D25 ) by L87;
L265:
now
per cases ;
suppose L266: R20 = ( {} );

L267: ( FinJoin (R20 , R24) ) = ( D25 $$ (( {}. R18 ) , R24) ) by L266
.= ( Bottom R23 ) by L264 , SETWISEO:31;
thus L268: thesis by L267 , LATTICES:16;
end;
suppose L269: R20 <> ( {} );

thus L270: thesis by L269 , L263 , L152;
end;
end;
thus L272: thesis by L265;
end;
theorem
L273: (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R23 being 0_Lattice holds (for R24 being (Function of R18 , (the carrier of R23)) holds (for R25 being (Function of R18 , (the carrier of R23)) holds ((for R19 being (Element of R18) holds (R19 in R20 implies ( R24 . R19 ) [= ( R25 . R19 ))) implies ( FinJoin (R20 , R24) ) [= ( FinJoin (R20 , R25) )))))))
proof
let R18 being non  empty set;
let R20 being (Finite_Subset of R18);
let R23 being 0_Lattice;
let R24 being (Function of R18 , (the carrier of R23));
let R25 being (Function of R18 , (the carrier of R23));
assume L274: (for R19 being (Element of R18) holds (R19 in R20 implies ( R24 . R19 ) [= ( R25 . R19 )));
L275:
now
let R19 being (Element of R18);
assume L276: R19 in R20;
L277: ( R24 . R19 ) [= ( R25 . R19 ) by L276 , L274;
thus L278: ( R24 . R19 ) [= ( FinJoin (R20 , R25) ) by L277 , L276 , L139;
end;
thus L279: thesis by L275 , L262;
end;
theorem
L280: (for R27 being 1_Lattice holds ( Top R27 ) is_a_unity_wrt (the L_meet of R27))
proof
let R27 being 1_Lattice;
L281:
now
let R30 being (Element of R27);
thus L282: ( (the L_meet of R27) . (( Top R27 ) , R30) ) = ( ( Top R27 ) "/\" R30 )
.= R30;
end;
thus L283: thesis by L281 , BINOP_1:4;
end;
registration
let R27 being 1_Lattice;
cluster (the L_meet of R27) ->  having_a_unity;
coherence
proof
L284: ( Top R27 ) is_a_unity_wrt (the L_meet of R27) by L280;
thus L285: thesis by L284 , SETWISEO:def 2;
end;
end;
theorem
L287: (for R27 being 1_Lattice holds ( Top R27 ) = ( the_unity_wrt (the L_meet of R27) )) by L100;
theorem
L288: (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R27 being 1_Lattice holds (for R28 being (Function of R18 , (the carrier of R27)) holds (for R29 being (Function of R18 , (the carrier of R27)) holds (( R28 | R20 ) = ( R29 | R20 ) implies ( FinMeet (R20 , R28) ) = ( FinMeet (R20 , R29) )))))))
proof
let R18 being non  empty set;
let R20 being (Finite_Subset of R18);
let R27 being 1_Lattice;
let R28 being (Function of R18 , (the carrier of R27));
let R29 being (Function of R18 , (the carrier of R27));
assume L289: ( R28 | R20 ) = ( R29 | R20 );
reconsider D26 = R28 , D27 = R29 as (Function of R18 , (the carrier of ( R27 .: )));
L290: ( FinMeet (R20 , R29) ) = ( FinJoin (R20 , D27) );
L291: (( R27 .: ) is 0_Lattice & ( FinMeet (R20 , R28) ) = ( FinJoin (R20 , D26) )) by L235;
thus L292: thesis by L291 , L289 , L290 , L252;
end;
theorem
L293: (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R27 being 1_Lattice holds (for R28 being (Function of R18 , (the carrier of R27)) holds (for R30 being (Element of R27) holds ((for R19 being (Element of R18) holds (R19 in R20 implies R30 [= ( R28 . R19 ))) implies R30 [= ( FinMeet (R20 , R28) )))))))
proof
let R18 being non  empty set;
let R20 being (Finite_Subset of R18);
let R27 being 1_Lattice;
let R28 being (Function of R18 , (the carrier of R27));
let R30 being (Element of R27);
reconsider D28 = R28 as (Function of R18 , (the carrier of ( R27 .: )));
reconsider D29 = R30 as (Element of ( R27 .: ));
assume L294: (for R19 being (Element of R18) holds (R19 in R20 implies R30 [= ( R28 . R19 )));
L295: (for R19 being (Element of R18) holds (R19 in R20 implies ( D28 . R19 ) [= D29)) by L294 , L180;
L296: ( R27 .: ) is 0_Lattice by L235;
L297: ( FinJoin (R20 , D28) ) [= D29 by L296 , L295 , L262;
thus L298: thesis by L297 , L186;
end;
theorem
L299: (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R27 being 1_Lattice holds (for R28 being (Function of R18 , (the carrier of R27)) holds (for R29 being (Function of R18 , (the carrier of R27)) holds ((for R19 being (Element of R18) holds (R19 in R20 implies ( R28 . R19 ) [= ( R29 . R19 ))) implies ( FinMeet (R20 , R28) ) [= ( FinMeet (R20 , R29) )))))))
proof
let R18 being non  empty set;
let R20 being (Finite_Subset of R18);
let R27 being 1_Lattice;
let R28 being (Function of R18 , (the carrier of R27));
let R29 being (Function of R18 , (the carrier of R27));
assume L300: (for R19 being (Element of R18) holds (R19 in R20 implies ( R28 . R19 ) [= ( R29 . R19 )));
L301:
now
let R19 being (Element of R18);
assume L302: R19 in R20;
L303: ( R28 . R19 ) [= ( R29 . R19 ) by L302 , L300;
thus L304: ( FinMeet (R20 , R28) ) [= ( R29 . R19 ) by L303 , L302 , L196;
end;
thus L305: thesis by L301 , L293;
end;
theorem
L306: (for B24 being 0_Lattice holds ( Bottom B24 ) = ( Top ( B24 .: ) ))
proof
let C50 being 0_Lattice;
reconsider D30 = ( Bottom C50 ) as (Element of ( C50 .: ));
L307:
now
let C51 being (Element of ( C50 .: ));
reconsider D31 = C51 as (Element of C50);
thus L308: ( C51 "\/" D30 ) = ( ( Bottom C50 ) "/\" D31 ) by L179
.= D30;
end;
thus L309: thesis by L307 , RLSUB_2:65;
end;
theorem
L310: (for B25 being 1_Lattice holds ( Top B25 ) = ( Bottom ( B25 .: ) ))
proof
let C52 being 1_Lattice;
reconsider D32 = ( Top C52 ) as (Element of ( C52 .: ));
L311:
now
let C53 being (Element of ( C52 .: ));
reconsider D33 = C53 as (Element of C52);
thus L312: ( C53 "/\" D32 ) = ( ( Top C52 ) "\/" D33 ) by L179
.= D32;
end;
thus L313: thesis by L311 , RLSUB_2:64;
end;
definition
mode D0_Lattice
 is  distributive  lower-bounded Lattice;
end;
theorem
L315: (for R31 being D0_Lattice holds (the L_meet of R31) is_distributive_wrt (the L_join of R31)) by L118;
theorem
L316: (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R31 being D0_Lattice holds (for R32 being (Function of R18 , (the carrier of R31)) holds (for R34 being (Element of R31) holds ( (the L_meet of R31) . (R34 , ( FinJoin (R20 , R32) )) ) = ( FinJoin (R20 , ( (the L_meet of R31) [;] (R34 , R32) )) ))))))
proof
let R18 being non  empty set;
let R20 being (Finite_Subset of R18);
let R31 being D0_Lattice;
let R32 being (Function of R18 , (the carrier of R31));
let R34 being (Element of R31);
L317: ( (the L_meet of R31) . (R34 , ( Bottom R31 )) ) = ( R34 "/\" ( Bottom R31 ) )
.= ( Bottom R31 );
L318: ((the L_meet of R31) is_distributive_wrt (the L_join of R31) & ( Bottom R31 ) = ( the_unity_wrt (the L_join of R31) )) by L87 , L118;
thus L319: thesis by L318 , L317 , SETWOP_2:12;
end;
theorem
L320: (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R31 being D0_Lattice holds (for R32 being (Function of R18 , (the carrier of R31)) holds (for R33 being (Function of R18 , (the carrier of R31)) holds (for R34 being (Element of R31) holds ((for R19 being (Element of R18) holds (R19 in R20 implies ( R33 . R19 ) = ( R34 "/\" ( R32 . R19 ) ))) implies ( R34 "/\" ( FinJoin (R20 , R32) ) ) = ( FinJoin (R20 , R33) ))))))))
proof
let R18 being non  empty set;
let R20 being (Finite_Subset of R18);
let R31 being D0_Lattice;
let R32 being (Function of R18 , (the carrier of R31));
let R33 being (Function of R18 , (the carrier of R31));
let R34 being (Element of R31);
reconsider D34 = ( ( (the L_meet of R31) [;] (R34 , R32) ) +* ( R33 | R20 ) ) as (Function of R18 , (the carrier of R31)) by L13;
L321: ( dom ( R33 | R20 ) ) = R20 by L34;
L322: ( D34 | R20 ) = ( R33 | R20 ) by L321 , FUNCT_4:23;
assume L323: (for R19 being (Element of R18) holds (R19 in R20 implies ( R33 . R19 ) = ( R34 "/\" ( R32 . R19 ) )));
L324:
now
let R19 being (Element of R18);
assume L325: R19 in R20;
thus L326: ( R33 . R19 ) = ( R34 "/\" ( R32 . R19 ) ) by L325 , L323
.= ( ( (the L_meet of R31) [;] (R34 , R32) ) . R19 ) by FUNCOP_1:53;
end;
L327: D34 = ( (the L_meet of R31) [;] (R34 , R32) ) by L324 , L37;
thus L328: ( R34 "/\" ( FinJoin (R20 , R32) ) ) = ( FinJoin (R20 , D34) ) by L327 , L316
.= ( FinJoin (R20 , R33) ) by L322 , L252;
end;
theorem
L329: (for R18 being non  empty set holds (for R20 being (Finite_Subset of R18) holds (for R31 being D0_Lattice holds (for R32 being (Function of R18 , (the carrier of R31)) holds (for R34 being (Element of R31) holds ( R34 "/\" ( FinJoin (R20 , R32) ) ) = ( FinJoin (R20 , ( (the L_meet of R31) [;] (R34 , R32) )) )))))) by L316;
definition
let C54 being Lattice;
attr C54 is  Heyting
means
:L330: C54 is  implicative  lower-bounded;
end;
registration
cluster  Heyting for Lattice;
existence
proof
set D35 = the B_Lattice;
take D35;
thus L332: D35 is  implicative  lower-bounded;
end;
end;
registration
cluster  Heyting ->  implicative  lower-bounded for Lattice;
coherence by L330;
cluster  implicative  lower-bounded ->  Heyting for Lattice;
coherence by L330;
end;
definition
mode H_Lattice
 is  Heyting Lattice;
end;
registration
cluster  Heyting  strict for Lattice;
existence
proof
set D36 = the  strict B_Lattice;
L336: D36 is I_Lattice;
thus L337: thesis by L336;
end;
end;
theorem
L339: (for B26 being 0_Lattice holds (B26 is H_Lattice iff (for B27 , B28 being (Element of B26) holds (ex B29 being (Element of B26) st (( B27 "/\" B29 ) [= B28 & (for B30 being (Element of B26) holds (( B27 "/\" B30 ) [= B28 implies B30 [= B29)))))))
proof
let C55 being 0_Lattice;
L340: (C55 is H_Lattice iff C55 is I_Lattice);
thus L341: thesis by L340 , FILTER_0:def 6;
end;
theorem
L342: (for B31 being Lattice holds (B31 is  finite iff ( B31 .: ) is  finite));
registration
cluster  finite ->  lower-bounded for Lattice;
coherence
proof
let C56 being Lattice;
assume L343: C56 is  finite;
reconsider D37 = (the carrier of C56) as (Finite_Subset of (the carrier of C56)) by L343 , FINSUB_1:def 5;
take D38 = ( FinMeet (D37 , ( id (the carrier of C56) )) );
let C57 being (Element of C56);
L344: ( ( id (the carrier of C56) ) . C57 ) [= C57 by FUNCT_1:18;
L345: D38 [= C57 by L344 , L196;
thus L346: ( D38 "/\" C57 ) = D38 by L345 , LATTICES:4;
thus L347: ( C57 "/\" D38 ) = D38 by L345 , LATTICES:4;
end;
cluster  finite ->  upper-bounded for Lattice;
coherence
proof
let C58 being Lattice;
assume L348: C58 is  finite;
reconsider D39 = (the carrier of C58) as (Finite_Subset of (the carrier of C58)) by L348 , FINSUB_1:def 5;
take D40 = ( FinJoin (D39 , ( id (the carrier of C58) )) );
let C59 being (Element of C58);
L349: C59 [= ( ( id (the carrier of C58) ) . C59 ) by FUNCT_1:18;
L350: C59 [= D40 by L349 , L139;
thus L351: ( D40 "\/" C59 ) = D40 by L350 , LATTICES:def 3;
thus L352: ( C59 "\/" D40 ) = D40 by L350 , LATTICES:def 3;
end;
end;
registration
cluster  finite ->  bounded for Lattice;
coherence;
end;
registration
cluster  distributive  finite ->  Heyting for Lattice;
coherence
proof
let C60 being Lattice;
assume L355: C60 is  distributive  finite;
reconsider D41 = C60 as D0_Lattice by L355;
set D42 = (the carrier of D41);
L356: D41 is  implicative
proof
let C61 , C62 being (Element of D42);
defpred S1[ (Element of D42) ] means ( C61 "/\" $1 ) [= C62;
set D43 = { B32 where B32 is (Element of D42) : S1[ B32 ] };
L357: D43 c= D42 from FRAENKEL:sch 10;
L358: D43 is  finite by L357 , L355 , FINSET_1:1;
reconsider D44 = D43 as (Finite_Subset of D42) by L358 , L357 , FINSUB_1:def 5;
take D45 = ( FinJoin (D44 , ( id D42 )) );
L359:
now
let C63 being (Element of D42);
assume L360: C63 in D44;
L361: (ex B33 being (Element of D42) st (B33 = C63 & ( C61 "/\" B33 ) [= C62)) by L360;
L362: ( ( (the L_meet of D41) [;] (C61 , ( id D42 )) ) . C63 ) = ( (the L_meet of D41) . (C61 , ( ( id D42 ) . C63 )) ) by FUNCOP_1:53
.= ( C61 "/\" C63 ) by FUNCT_1:18;
thus L363: ( ( (the L_meet of D41) [;] (C61 , ( id D42 )) ) . C63 ) [= C62 by L362 , L361;
end;
L364: ( C61 "/\" D45 ) = ( FinJoin (D44 , ( (the L_meet of D41) [;] (C61 , ( id D42 )) )) ) by L316;
thus L365: ( C61 "/\" D45 ) [= C62 by L364 , L359 , L262;
let C64 being (Element of D42);
assume L366: ( C61 "/\" C64 ) [= C62;
L367: C64 in D44 by L366;
L368: C64 = ( ( id D42 ) . C64 ) by FUNCT_1:18;
thus L369: C64 [= D45 by L368 , L367 , L135;
end;
thus L370: thesis by L356;
end;
end;
