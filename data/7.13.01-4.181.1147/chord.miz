:: Chordal Graphs
::  by Broderick Arneson and Piotr Rudnicki
::
:: Received August 18, 2006
:: Copyright (c) 2006-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, XCMPLX_0, ORDINAL1, ARYTM_1, XXREAL_0, NAT_1, CARD_1,
      ARYTM_3, ABIAN, SUBSET_1, RELAT_1, INT_1, FINSEQ_1, FUNCT_1, FINSEQ_4,
      XBOOLE_0, FINSET_1, GRAPH_2, ORDINAL4, GLIB_000, GLIB_001, TARSKI,
      ZFMISC_1, RCOMP_1, GRAPH_1, RELAT_2, REWRITE1, FUNCOP_1, GLIB_002,
      PARTFUN1, MEMBERED, TOPGEN_1, CHORD;
 notations TARSKI, XBOOLE_0, SUBSET_1, XXREAL_2, ORDINAL1, INT_1, XCMPLX_0,
      XXREAL_0, DOMAIN_1, RELAT_1, FUNCT_1, FUNCT_2, FINSEQ_1, CARD_1,
      FINSET_1, NAT_1, ZFMISC_1, GLIB_000, GLIB_001, GLIB_002, FUNCOP_1, ABIAN,
      ENUMSET1, FINSEQ_4, NUMBERS, GRAPH_2, MEMBERED;
 constructors DOMAIN_1, REAL_1, NAT_D, FINSEQ_4, GRAPH_2, GLIB_001, GLIB_002,
      VALUED_1, XXREAL_2, RELSET_1;
 registrations XBOOLE_0, SUBSET_1, RELAT_1, FUNCT_1, ORDINAL1, FUNCOP_1,
      FINSET_1, NUMBERS, XXREAL_0, XREAL_0, NAT_1, INT_1, MEMBERED, FINSEQ_1,
      GLIB_000, ABIAN, GRAPH_2, GLIB_001, GLIB_002, FUNCT_2, XXREAL_2, CARD_1,
      RELSET_1;
 requirements ARITHM, BOOLE, NUMERALS, REAL, SUBSET;
 definitions TARSKI, XBOOLE_0, GLIB_000, GLIB_001, GLIB_002, FUNCOP_1;
 theorems FINSEQ_1, FUNCT_1, GLIB_000, GLIB_001, GLIB_002, GRAPH_2, GRAPH_3,
      TREES_1, INT_1, JORDAN12, NAT_1, ORDINAL1, RELAT_1, TARSKI, XBOOLE_0,
      XBOOLE_1, FUNCOP_1, FUNCT_2, FINSEQ_3, FINSEQ_4, ZFMISC_1, ABIAN, CARD_2,
      ENUMSET1, FINSEQ_2, XREAL_1, MEMBERED, FINSEQ_5, XXREAL_0, NAT_D,
      PARTFUN1, XXREAL_2, PRE_POLY;
 schemes NAT_1, GRAPH_5, FUNCT_2, FRAENKEL;

begin
theorem
L1: (for B1 being non  zero Nat holds (( B1 - 1 ) is Nat & 1 <= B1))
proof
let C1 being non  zero Nat;
L2: ( ( 0 ) + 1 ) <= C1 by NAT_1:13;
L3: ( ( ( 0 ) + 1 ) - 1 ) <= ( C1 - 1 ) by L2 , XREAL_1:9;
L4: ( C1 - 1 ) in ( NAT ) by L3 , INT_1:3;
thus L5: ( C1 - 1 ) is Nat by L4;
thus L6: thesis by L2;
end;
theorem
L7: (for B2 being  odd Nat holds (( B2 - 1 ) is Nat & 1 <= B2)) by L1;
L8: (for B3 , B4 , B5 being Integer holds (( B3 + 2 ) < B4 implies ( ( ( B5 - B4 ) + 1 ) + 2 ) < ( ( B5 - B3 ) + 1 )))
proof
let C2 , C3 , C4 being Integer;
assume that
L9: ( C2 + 2 ) < C3;
assume L10: ( ( ( C4 - C3 ) + 1 ) + 2 ) >= ( ( C4 - C2 ) + 1 );
L11: ( ( ( C4 - C3 ) + 3 ) - 3 ) >= ( ( ( C4 - C2 ) + 1 ) - 3 ) by L10 , XREAL_1:9;
L12: ( C4 - C3 ) >= ( C4 - ( C2 + 2 ) ) by L11;
thus L13: contradiction by L12 , L9 , XREAL_1:10;
end;
theorem
L14: (for B6 , B7 being  odd Integer holds (B6 < B7 implies B6 <= ( B7 - 2 )))
proof
let C5 , C6 being  odd Integer;
assume L15: C5 < C6;
L16: ( C5 + 1 ) <= C6 by L15 , INT_1:7;
L17: ( ( C5 + 1 ) + ( - 1 ) ) <= ( C6 + ( - 1 ) ) by L16 , XREAL_1:7;
L18: C5 < ( C6 - 1 ) by L17 , XXREAL_0:1;
L19: ( C5 + 1 ) <= ( C6 - 1 ) by L18 , INT_1:7;
L20: ( ( C5 + 1 ) + ( - 1 ) ) <= ( ( C6 - 1 ) + ( - 1 ) ) by L19 , XREAL_1:7;
thus L21: thesis by L20;
end;
theorem
L22: (for B8 , B9 being  odd Integer holds (B9 < B8 implies ( B9 + 2 ) <= B8))
proof
let C7 , C8 being  odd Integer;
assume L23: C8 < C7;
L24: ( C8 + 1 ) <= C7 by L23 , INT_1:7;
L25: ( C8 + 1 ) < C7 by L24 , XXREAL_0:1;
L26: ( ( C8 + 1 ) + 1 ) <= C7 by L25 , INT_1:7;
thus L27: thesis by L26;
end;
theorem
L28: (for B10 being  odd Nat holds (1 <> B10 implies (ex B11 being  odd Nat st ( B11 + 2 ) = B10)))
proof
let C9 being  odd Nat;
L29: 1 <= C9 by ABIAN:12;
assume L30: 1 <> C9;
L31: ( ( 2 * ( 0 ) ) + 1 ) < C9 by L30 , L29 , XXREAL_0:1;
L32: ( 1 + 2 ) <= C9 by L31 , L22;
L33: ( ( 1 + 2 ) - 2 ) <= ( C9 - 2 ) by L32 , XREAL_1:9;
L34: ( C9 - ( 2 * 1 ) ) in ( NAT ) by L33 , INT_1:3;
reconsider D1 = ( C9 - 2 ) as  odd Nat by L34;
take D1;
thus L35: thesis;
end;
theorem
L36: (for B12 being  odd Nat holds (B12 <= 2 implies B12 = 1))
proof
let C10 being  odd Nat;
assume that
L37: C10 <= 2;
L38: C10 <> ( 2 * 1 );
L39: C10 < ( 1 + 1 ) by L38 , L37 , XXREAL_0:1;
L40: C10 <= 1 by L39 , NAT_1:13;
L41: C10 >= 1 by ABIAN:12;
thus L42: thesis by L41 , L40 , XXREAL_0:1;
end;
theorem
L43: (for B13 being  odd Nat holds (B13 <= 4 implies (B13 = 1 or B13 = 3)))
proof
let C11 being  odd Nat;
assume that
L44: C11 <= 4;
L45: C11 <> ( 2 * 2 );
L46: C11 < ( 3 + 1 ) by L45 , L44 , XXREAL_0:1;
L47: C11 <= 3 by L46 , NAT_1:13;
per cases  by L47 , XXREAL_0:1;
suppose L48: C11 = 3;

thus L49: thesis by L48;
end;
suppose L50: C11 < ( 2 + 1 );

L51: C11 <= 2 by L50 , NAT_1:13;
thus L52: thesis by L51 , L36;
end;
end;
theorem
L54: (for B14 being  odd Nat holds (B14 <= 6 implies (B14 = 1 or B14 = 3 or B14 = 5)))
proof
let C12 being  odd Nat;
assume that
L55: C12 <= 6;
L56: C12 <> ( 2 * 3 );
L57: C12 < ( 5 + 1 ) by L56 , L55 , XXREAL_0:1;
L58: C12 <= 5 by L57 , NAT_1:13;
per cases  by L58 , XXREAL_0:1;
suppose L59: C12 = 5;

thus L60: thesis by L59;
end;
suppose L61: C12 < ( 4 + 1 );

L62: C12 <= 4 by L61 , NAT_1:13;
thus L63: thesis by L62 , L43;
end;
end;
theorem
L65: (for B15 being  odd Nat holds (B15 <= 8 implies (B15 = 1 or B15 = 3 or B15 = 5 or B15 = 7)))
proof
let C13 being  odd Nat;
assume that
L66: C13 <= 8;
L67: C13 <> ( 2 * 4 );
L68: C13 < ( 7 + 1 ) by L67 , L66 , XXREAL_0:1;
L69: C13 <= 7 by L68 , NAT_1:13;
per cases  by L69 , XXREAL_0:1;
suppose L70: C13 = 7;

thus L71: thesis by L70;
end;
suppose L72: C13 < ( 6 + 1 );

L73: C13 <= 6 by L72 , NAT_1:13;
thus L74: thesis by L73 , L54;
end;
end;
theorem
L76: (for B16 being  even Nat holds (B16 <= 1 implies B16 = ( 0 )))
proof
let C14 being  even Nat;
assume that
L77: C14 <= 1;
L78: C14 <> ( ( 2 * ( 0 ) ) + 1 );
L79: C14 < ( ( 0 ) + 1 ) by L78 , L77 , XXREAL_0:1;
thus L80: thesis by L79 , NAT_1:13;
end;
theorem
L81: (for B17 being  even Nat holds (B17 <= 3 implies (B17 = ( 0 ) or B17 = 2)))
proof
let C15 being  even Nat;
assume that
L82: C15 <= 3;
L83: C15 <> ( ( 2 * 1 ) + 1 );
L84: C15 < ( 2 + 1 ) by L83 , L82 , XXREAL_0:1;
L85: C15 <= 2 by L84 , NAT_1:13;
per cases  by L85 , XXREAL_0:1;
suppose L86: C15 = 2;

thus L87: thesis by L86;
end;
suppose L88: C15 < ( 1 + 1 );

L89: C15 <= 1 by L88 , NAT_1:13;
thus L90: thesis by L89 , L76;
end;
end;
theorem
L92: (for B18 being  even Nat holds (B18 <= 5 implies (B18 = ( 0 ) or B18 = 2 or B18 = 4)))
proof
let C16 being  even Nat;
assume that
L93: C16 <= 5;
L94: C16 <> ( ( 2 * 2 ) + 1 );
L95: C16 < ( 4 + 1 ) by L94 , L93 , XXREAL_0:1;
L96: C16 <= 4 by L95 , NAT_1:13;
per cases  by L96 , XXREAL_0:1;
suppose L97: C16 = 4;

thus L98: thesis by L97;
end;
suppose L99: C16 < ( 3 + 1 );

L100: C16 <= 3 by L99 , NAT_1:13;
thus L101: thesis by L100 , L81;
end;
end;
theorem
L103: (for B19 being  even Nat holds (B19 <= 7 implies (B19 = ( 0 ) or B19 = 2 or B19 = 4 or B19 = 6)))
proof
let C17 being  even Nat;
assume that
L104: C17 <= 7;
L105: C17 <> ( ( 2 * 3 ) + 1 );
L106: C17 < ( 6 + 1 ) by L105 , L104 , XXREAL_0:1;
L107: C17 <= 6 by L106 , NAT_1:13;
per cases  by L107 , XXREAL_0:1;
suppose L108: C17 = 6;

thus L109: thesis by L108;
end;
suppose L110: C17 < ( 5 + 1 );

L111: C17 <= 5 by L110 , NAT_1:13;
thus L112: thesis by L111 , L92;
end;
end;
L114: (for B20 , B21 being  odd Nat holds (B20 <= B21 implies (ex B22 being Nat st ( B20 + ( 2 * B22 ) ) = B21)))
proof
let C18 , C19 being  odd Nat;
assume L115: C18 <= C19;
consider C20 being Nat such that L116: C19 = ( C18 + C20 ) by L115 , NAT_1:10;
L117: C20 in ( NAT ) by ORDINAL1:def 12;
L118: C20 is  even by L116;
consider C21 being (Element of ( NAT )) such that L119: ( 2 * C21 ) = C20 by L118 , L117 , ABIAN:def 2;
reconsider D2 = C21 as Nat;
take D2;
thus L120: thesis by L116 , L119;
end;
theorem
L121: (for B23 being FinSequence holds (for B24 being non  zero Nat holds ((B23 is  one-to-one & B24 <= ( len B23 )) implies ( ( B23 . B24 ) .. B23 ) = B24)))
proof
let C22 being FinSequence;
let C23 being non  zero Nat;
assume that
L122: C22 is  one-to-one
and
L123: C23 <= ( len C22 );
set D3 = ( ( C22 . C23 ) .. C22 );
L124: ( ( 0 ) + 1 ) <= C23 by NAT_1:14;
L125: C23 in ( dom C22 ) by L124 , L123 , FINSEQ_3:25;
L126: ( C22 . C23 ) in ( rng C22 ) by L125 , FUNCT_1:3;
L127: ( C22 . D3 ) = ( C22 . C23 ) by L126 , FINSEQ_4:19;
L128: D3 in ( dom C22 ) by L126 , FINSEQ_4:20;
thus L129: thesis by L128 , L122 , L125 , L127 , FUNCT_1:def 4;
end;
theorem
L130: (for B25 being non  empty FinSequence holds (for B26 being non  empty (Subset of ( rng B25 )) holds (ex B27 being set st (B27 in B26 & (for B28 being set holds (B28 in B26 implies ( B27 .. B25 ) <= ( B28 .. B25 )))))))
proof
let C24 being non  empty FinSequence;
let C25 being non  empty (Subset of ( rng C24 ));
deffunc H1(set) = ( $1 .. C24 );
consider C26 being (Element of C25) such that L131: (for B29 being (Element of C25) holds H1(C26) <= H1(B29)) from GRAPH_5:sch 2;
take C26;
thus L132: C26 in C25;
let C27 being set;
assume L133: C27 in C25;
thus L134: thesis by L133 , L131;
end;
definition
let C28 being FinSequence;
let C29 being Nat;
func C28 .followSet C29 ->  finite set equals 
( rng ( (C29 , ( len C28 )) -cut C28 ) );
correctness;
end;
theorem
L136: (for B30 being FinSequence holds (for B31 being set holds (for B32 being Nat holds ((B31 in ( rng B30 ) & B32 in ( dom B30 ) & B30 is  one-to-one) implies (B31 in ( B30 .followSet B32 ) iff ( B31 .. B30 ) >= B32)))))
proof
let C30 being FinSequence;
let C31 being set;
let C32 being Nat;
assume that
L137: C31 in ( rng C30 )
and
L138: C32 in ( dom C30 )
and
L139: C30 is  one-to-one;
L140: C32 <= ( len C30 ) by L138 , FINSEQ_3:25;
thus L141:now
L142: ( C30 . ( C31 .. C30 ) ) = C31 by L137 , FINSEQ_4:19;
assume L143: C31 in ( C30 .followSet C32 );
consider C33 being Nat such that L144: C33 in ( dom ( (C32 , ( len C30 )) -cut C30 ) ) and L145: ( ( (C32 , ( len C30 )) -cut C30 ) . C33 ) = C31 by L143 , FINSEQ_2:10;
L146: ( C31 .. C30 ) in ( dom C30 ) by L137 , FINSEQ_4:20;
L147: C32 in ( NAT ) by ORDINAL1:def 12;
L148: (ex B33 being (Element of ( NAT )) st (B33 in ( dom C30 ) & ( C30 . B33 ) = ( ( (C32 , ( len C30 )) -cut C30 ) . C33 ) & ( B33 + 1 ) = ( C32 + C33 ) & C32 <= B33 & B33 <= ( len C30 ))) by L147 , L144 , GRAPH_3:2;
thus L149: ( C31 .. C30 ) >= C32 by L148 , L139 , L145 , L146 , L142 , FUNCT_1:def 4;
end;
assume L150: ( C31 .. C30 ) >= C32;
consider C34 being Nat such that L151: ( C31 .. C30 ) = ( C32 + C34 ) by L150 , NAT_1:10;
L152: 1 <= C32 by L138 , FINSEQ_3:25;
L153: ( ( len ( (C32 , ( len C30 )) -cut C30 ) ) + C32 ) = ( ( len C30 ) + 1 ) by L152 , L140 , GRAPH_2:def 1;
L154: ( C31 .. C30 ) in ( dom C30 ) by L137 , FINSEQ_4:20;
L155: ( C34 + C32 ) <= ( len C30 ) by L154 , L151 , FINSEQ_3:25;
L156: ( ( C34 + C32 ) + ( - C32 ) ) <= ( ( len C30 ) + ( - C32 ) ) by L155 , XREAL_1:7;
L157: ( C34 + 1 ) <= ( ( ( len C30 ) - C32 ) + 1 ) by L156 , XREAL_1:7;
L158: C34 < ( len ( (C32 , ( len C30 )) -cut C30 ) ) by L157 , L153 , NAT_1:13;
L159: ( ( (C32 , ( len C30 )) -cut C30 ) . ( C34 + 1 ) ) = ( C30 . ( C31 .. C30 ) ) by L158 , L151 , L152 , L140 , GRAPH_2:def 1;
L160: ( C30 . ( C31 .. C30 ) ) = C31 by L137 , FINSEQ_4:19;
L161: ( ( 0 ) + 1 ) <= ( C34 + 1 ) by XREAL_1:7;
L162: ( C34 + 1 ) in ( dom ( (C32 , ( len C30 )) -cut C30 ) ) by L161 , L153 , L157 , FINSEQ_3:25;
thus L163: thesis by L162 , L160 , L159 , FUNCT_1:3;
end;
theorem
L164: (for B34 , B35 being FinSequence holds (for B36 being set holds (B34 = ( <* B36 *> ^ B35 ) implies (for B37 being non  zero Nat holds ( B34 .followSet ( B37 + 1 ) ) = ( B35 .followSet B37 )))))
proof
let C35 , C36 being FinSequence;
let C37 being set;
assume that
L165: C35 = ( <* C37 *> ^ C36 );
let C38 being non  zero Nat;
L166: ( len <* C37 *> ) = 1 by FINSEQ_1:40;
L167: ( len C35 ) = ( 1 + ( len C36 ) ) by L166 , L165 , FINSEQ_1:22;
per cases ;
suppose L168: C38 > ( len C36 );

L169: ( C38 + 1 ) > ( len C35 ) by L168 , L167 , XREAL_1:8;
L170: ( (( C38 + 1 ) , ( len C35 )) -cut C35 ) = ( {} ) by L169 , GRAPH_2:def 1;
thus L171: thesis by L170 , L168 , GRAPH_2:def 1;
end;
suppose L172: C38 <= ( len C36 );

L173: ( C38 + 1 ) <= ( len C35 ) by L172 , L167 , XREAL_1:7;
L174: ( ( 0 ) + 1 ) <= C38 by NAT_1:13;
L175: 1 <= ( C38 + 1 ) by L174 , XREAL_1:7;
L176: ( ( len ( (( C38 + 1 ) , ( len C35 )) -cut C35 ) ) + ( C38 + 1 ) ) = ( ( len C35 ) + 1 ) by L175 , L173 , GRAPH_2:def 1;
L177: ( ( len ( (C38 , ( len C36 )) -cut C36 ) ) + C38 ) = ( ( len C36 ) + 1 ) by L172 , L174 , GRAPH_2:def 1;
L178: ( dom ( (( C38 + 1 ) , ( len C35 )) -cut C35 ) ) = ( Seg ( len ( (C38 , ( len C36 )) -cut C36 ) ) ) by L177 , L167 , L176 , FINSEQ_1:def 3;
L179: ( dom ( (( C38 + 1 ) , ( len C35 )) -cut C35 ) ) = ( dom ( (C38 , ( len C36 )) -cut C36 ) ) by L178 , FINSEQ_1:def 3;
L180:
now
let C39 being Nat;
assume L181: C39 in ( dom C36 );
L182: ( C35 . ( ( len <* C37 *> ) + C39 ) ) = ( C36 . C39 ) by L181 , L165 , FINSEQ_1:def 7;
thus L183: ( C35 . ( C39 + 1 ) ) = ( C36 . C39 ) by L182 , FINSEQ_1:40;
end;
L184:
now
let C40 being Nat;
assume that
L185: C40 in ( dom ( (C38 , ( len C36 )) -cut C36 ) );
L186: C40 <= ( ( len C35 ) - C38 ) by L176 , L179 , L185 , FINSEQ_3:25;
L187: ( ( - 1 ) + C40 ) < ( ( 0 ) + ( ( len C35 ) - C38 ) ) by L186 , XREAL_1:8;
L188: 1 <= C40 by L185 , FINSEQ_3:25;
L189: ( 1 + ( - 1 ) ) <= ( C40 + ( - 1 ) ) by L188 , XREAL_1:7;
L190: ( C40 - 1 ) in ( NAT ) by L189 , INT_1:3;
reconsider D4 = ( C40 - 1 ) as Nat by L190;
L191: ( C38 + C40 ) <= ( C38 + ( ( len C35 ) - C38 ) ) by L186 , XREAL_1:7;
L192: ( ( ( D4 + C38 ) + 1 ) + ( - 1 ) ) <= ( ( ( len C36 ) + 1 ) + ( - 1 ) ) by L191 , L167 , XREAL_1:7;
L193: ( 1 + ( 0 ) ) <= ( C38 + D4 ) by NAT_1:13;
L194: ( C38 + D4 ) in ( dom C36 ) by L193 , L192 , FINSEQ_3:25;
thus L195: ( ( (( C38 + 1 ) , ( len C35 )) -cut C35 ) . C40 ) = ( ( (( C38 + 1 ) , ( len C35 )) -cut C35 ) . ( D4 + 1 ) )
.= ( C35 . ( ( C38 + 1 ) + D4 ) ) by L175 , L173 , L176 , L187 , GRAPH_2:def 1
.= ( C35 . ( ( C38 + D4 ) + 1 ) )
.= ( C36 . ( C38 + D4 ) ) by L180 , L194
.= ( ( (C38 , ( len C36 )) -cut C36 ) . ( D4 + 1 ) ) by L167 , L172 , L174 , L177 , L187 , GRAPH_2:def 1
.= ( ( (C38 , ( len C36 )) -cut C36 ) . C40 );
end;
L196:
now
let C41 being set;
thus L197:now
assume L198: C41 in ( rng ( (( C38 + 1 ) , ( len C35 )) -cut C35 ) );
consider C42 being Nat such that L199: C42 in ( dom ( (( C38 + 1 ) , ( len C35 )) -cut C35 ) ) and L200: ( ( (( C38 + 1 ) , ( len C35 )) -cut C35 ) . C42 ) = C41 by L198 , FINSEQ_2:10;
L201: ( ( (( C38 + 1 ) , ( len C35 )) -cut C35 ) . C42 ) = ( ( (C38 , ( len C36 )) -cut C36 ) . C42 ) by L179 , L184 , L199;
thus L202: C41 in ( rng ( (C38 , ( len C36 )) -cut C36 ) ) by L201 , L179 , L199 , L200 , FUNCT_1:3;
end;
assume L203: C41 in ( rng ( (C38 , ( len C36 )) -cut C36 ) );
consider C43 being Nat such that L204: C43 in ( dom ( (C38 , ( len C36 )) -cut C36 ) ) and L205: ( ( (C38 , ( len C36 )) -cut C36 ) . C43 ) = C41 by L203 , FINSEQ_2:10;
L206: ( ( (( C38 + 1 ) , ( len C35 )) -cut C35 ) . C43 ) = ( ( (C38 , ( len C36 )) -cut C36 ) . C43 ) by L184 , L204;
thus L207: C41 in ( rng ( (( C38 + 1 ) , ( len C35 )) -cut C35 ) ) by L206 , L179 , L204 , L205 , FUNCT_1:3;
end;
thus L208: thesis by L196 , TARSKI:1;
end;
end;
theorem
L210: (for B38 being set holds (for B39 being (FinSequence of B38) holds (for B40 being (Subset of B39) holds (( len ( Seq B40 ) ) = ( len B39 ) implies ( Seq B40 ) = B39))))
proof
let C44 being set;
let C45 being (FinSequence of C44);
let C46 being (Subset of C45);
assume that
L211: ( len ( Seq C46 ) ) = ( len C45 );
L212: ( len ( Seq C46 ) ) = ( card C46 ) by GLIB_001:5;
L213:
now
assume L214: C46 <> C45;
L215: C46 c< C45 by L214 , XBOOLE_0:def 8;
thus L216: contradiction by L215 , L211 , L212 , CARD_2:48;
end;
thus L217: thesis by L213 , FINSEQ_3:116;
end;
begin
theorem
L218: (for B41 being _Graph holds (for B42 being (Subset of ( the_Vertices_of B41 )) holds (for B43 being (inducedSubgraph of B41 , B42) holds (for B44 , B45 being set holds ((B44 in B42 & B45 in B42) implies (for B46 being set holds (B46 Joins B44 , B45 , B41 implies B46 Joins B44 , B45 , B43)))))))
proof
let C47 being _Graph;
let C48 being (Subset of ( the_Vertices_of C47 ));
let C49 being (inducedSubgraph of C47 , C48);
let C50 , C51 being set;
assume that
L219: C50 in C48
and
L220: C51 in C48;
reconsider D5 = C48 as non  empty (Subset of ( the_Vertices_of C47 )) by L219;
let C52 being set;
assume that
L221: C52 Joins C50 , C51 , C47;
L222: C52 in ( C47 .edgesBetween D5 ) by L219 , L220 , L221 , GLIB_000:32;
L223: C52 in ( the_Edges_of C49 ) by L222 , GLIB_000:def 37;
L224: ( the_Target_of C49 ) = ( ( the_Target_of C47 ) | ( the_Edges_of C49 ) ) by GLIB_000:45;
L225: ( ( the_Target_of C49 ) . C52 ) = ( ( the_Target_of C47 ) . C52 ) by L224 , L223 , FUNCT_1:49;
L226: ((( ( the_Source_of C47 ) . C52 ) = C50 & ( ( the_Target_of C47 ) . C52 ) = C51) or (( ( the_Source_of C47 ) . C52 ) = C51 & ( ( the_Target_of C47 ) . C52 ) = C50)) by L221 , GLIB_000:def 13;
L227: ( the_Source_of C49 ) = ( ( the_Source_of C47 ) | ( the_Edges_of C49 ) ) by GLIB_000:45;
L228: ( ( the_Source_of C49 ) . C52 ) = ( ( the_Source_of C47 ) . C52 ) by L227 , L223 , FUNCT_1:49;
thus L229: thesis by L228 , L223 , L226 , L225 , GLIB_000:def 13;
end;
theorem
L230: (for B47 being _Graph holds (for B48 being (Walk of B47) holds (B48 is  Trail-like iff ( len B48 ) = ( ( 2 * ( card ( B48 .edges() ) ) ) + 1 ))))
proof
let C53 being _Graph;
let C54 being (Walk of C53);
set D6 = ( C54 .edges() );
set D7 = ( C54 .edgeSeq() );
L231: (C54 is  Trail-like iff ( C54 .edgeSeq() ) is  one-to-one) by GLIB_001:def 27;
L232: (C54 is  Trail-like iff ( ( 2 * ( card D6 ) ) + 1 ) = ( ( 2 * ( len D7 ) ) + 1 )) by L231 , FINSEQ_4:62;
thus L233: thesis by L232 , GLIB_001:def 15;
end;
theorem
L234: (for B49 being _Graph holds (for B50 being (Subset of ( the_Vertices_of B49 )) holds (for B51 being (removeVertices of B49 , B50) holds (for B52 being (Walk of B49) holds ((for B53 being  odd Nat holds (B53 <= ( len B52 ) implies (not ( B52 . B53 ) in B50))) implies B52 is (Walk of B51))))))
proof
let C55 being _Graph;
let C56 being (Subset of ( the_Vertices_of C55 ));
let C57 being (removeVertices of C55 , C56);
let C58 being (Walk of C55);
assume that
L235: (for B54 being  odd Nat holds (B54 <= ( len C58 ) implies (not ( C58 . B54 ) in C56)));
L236:
now
assume L237: ( ( the_Vertices_of C55 ) \ C56 ) = ( {} );
L238: ( the_Vertices_of C55 ) c= C56 by L237 , XBOOLE_1:37;
L239: ( C58 .last() ) in ( the_Vertices_of C55 );
thus L240: contradiction by L239 , L235 , L238;
end;
L241: ( the_Edges_of C57 ) = ( C55 .edgesBetween ( ( the_Vertices_of C55 ) \ C56 ) ) by L236 , GLIB_000:def 37;
L242: ( C58 .edges() ) c= ( C55 .edgesBetween ( C58 .vertices() ) ) by GLIB_001:109;
L243: ( the_Vertices_of C57 ) = ( ( the_Vertices_of C55 ) \ C56 ) by L236 , GLIB_000:def 37;
L244:
now
let C59 being set;
assume that
L245: C59 in ( C58 .vertices() );
L246: (ex B55 being  odd (Element of ( NAT )) st (B55 <= ( len C58 ) & ( C58 . B55 ) = C59)) by L245 , GLIB_001:87;
L247: (not C59 in C56) by L246 , L235;
thus L248: C59 in ( the_Vertices_of C57 ) by L247 , L243 , L245 , XBOOLE_0:def 5;
end;
L249: ( C58 .vertices() ) c= ( the_Vertices_of C57 ) by L244 , TARSKI:def 3;
L250: ( C55 .edgesBetween ( C58 .vertices() ) ) c= ( C55 .edgesBetween ( the_Vertices_of C57 ) ) by L249 , GLIB_000:36;
L251: ( C58 .edges() ) c= ( C55 .edgesBetween ( the_Vertices_of C57 ) ) by L250 , L242 , XBOOLE_1:1;
thus L252: thesis by L251 , L243 , L241 , L249 , GLIB_001:170;
end;
theorem
L253: (for B56 being _Graph holds (for B57 , B58 being set holds (B57 <> B58 implies (for B59 being (Walk of B56) holds (( B59 .vertices() ) = { B57 , B58 } implies (ex B60 being set st B60 Joins B57 , B58 , B56))))))
proof
let C60 being _Graph;
let C61 , C62 being set;
assume that
L254: C61 <> C62;
let C63 being (Walk of C60);
assume that
L255: ( C63 .vertices() ) = { C61 , C62 };
L256: ( C63 .first() ) in ( C63 .vertices() ) by GLIB_001:88;
L257:
now
let C64 being set;
assume that
L258: ( C63 .first() ) = C64;
L259: (C64 = C61 or C64 = C62) by L255 , L256 , L258 , TARSKI:def 2;
L260: C64 in { C64 } by TARSKI:def 1;
let C65 being set;
assume that
L261: C65 in ( { C61 , C62 } \ { C64 } );
L262: (C65 = C61 or C65 = C62) by L261 , TARSKI:def 2;
set D8 = ( C63 .find C65 );
L263: ( C63 . D8 ) = C65 by L255 , L261 , GLIB_001:def 19;
L264: D8 <> 1 by L263 , L258 , L261 , L260 , XBOOLE_0:def 5;
consider C66 being  odd Nat such that L265: ( C66 + 2 ) = D8 by L264 , L28;
L266: C66 < D8 by L265 , NAT_1:16;
L267: D8 <= ( len C63 ) by L255 , L261 , GLIB_001:def 19;
L268: C66 < ( len C63 ) by L267 , L265 , NAT_1:16 , XXREAL_0:2;
L269: C66 in ( NAT ) by ORDINAL1:def 12;
L270: ( C63 . C66 ) in { C61 , C62 } by L269 , L255 , L268 , GLIB_001:87;
L271: (( C63 . C66 ) = C61 or ( C63 . C66 ) = C62) by L270 , TARSKI:def 2;
L272: ( C63 . ( C66 + 1 ) ) Joins ( C63 . C66 ) , ( C63 . D8 ) , C60 by L265 , L268 , L269 , GLIB_001:def 3;
thus L273: (ex B61 being set st B61 Joins C64 , C65 , C60) by L272 , L255 , L261 , L260 , L259 , L263 , L266 , L268 , L271 , L262 , GLIB_001:def 19 , XBOOLE_0:def 5;
end;
per cases  by L255 , L256 , TARSKI:def 2;
suppose L274: ( C63 .first() ) = C61;

L275: C62 in { C62 } by TARSKI:def 1;
L276: C62 in ( { C61 , C62 } \ { C61 } ) by L275 , L254 , ZFMISC_1:17;
thus L277: thesis by L276 , L257 , L274;
end;
suppose L278: ( C63 .first() ) = C62;

L279: C61 in { C61 } by TARSKI:def 1;
L280: C61 in ( { C61 , C62 } \ { C62 } ) by L279 , L254 , ZFMISC_1:17;
L281: (ex B62 being set st B62 Joins C62 , C61 , C60) by L280 , L257 , L278;
thus L282: thesis by L281 , GLIB_000:14;
end;
end;
theorem
L284: (for B63 being _Graph holds (for B64 being non  empty (Subset of ( the_Vertices_of B63 )) holds (for B65 being (inducedSubgraph of B63 , B64) holds (for B66 being (Walk of B63) holds (( B66 .vertices() ) c= B64 implies B66 is (Walk of B65))))))
proof
let C67 being _Graph;
let C68 being non  empty (Subset of ( the_Vertices_of C67 ));
let C69 being (inducedSubgraph of C67 , C68);
L285: ( the_Vertices_of C69 ) = C68 by GLIB_000:def 37;
L286: ( the_Edges_of C69 ) = ( C67 .edgesBetween C68 ) by GLIB_000:def 37;
let C70 being (Walk of C67);
assume L287: ( C70 .vertices() ) c= C68;
L288: ( C70 .vertices() ) c= ( the_Vertices_of C69 ) by L287 , GLIB_000:def 37;
L289: ( C70 .edges() ) c= ( C67 .edgesBetween ( C70 .vertices() ) ) by GLIB_001:109;
L290: ( C67 .edgesBetween ( C70 .vertices() ) ) c= ( C67 .edgesBetween ( the_Vertices_of C69 ) ) by L288 , GLIB_000:36;
L291: ( C70 .edges() ) c= ( the_Edges_of C69 ) by L290 , L285 , L286 , L289 , XBOOLE_1:1;
thus L292: thesis by L291 , L288 , GLIB_001:170;
end;
theorem
L293: (for B67 , B68 being _Graph holds (B67 == B68 implies (for B69 being (Walk of B67) holds (for B70 being (Walk of B68) holds (B69 = B70 implies (B69 is  Cycle-like implies B70 is  Cycle-like))))))
proof
let C71 , C72 being _Graph;
assume that
L294: C71 == C72;
let C73 being (Walk of C71);
let C74 being (Walk of C72);
assume that
L295: C73 = C74;
assume L296: C73 is  Cycle-like;
L297: ( len C74 ) <> 1 by L296 , L295 , GLIB_001:126;
L298: C74 is non  trivial by L297 , GLIB_001:126;
L299: ( C73 .first() ) = ( C73 .last() ) by L296 , GLIB_001:def 24;
L300: ( C74 .first() ) = ( C74 .last() ) by L299 , L295;
L301: C74 is  closed by L300 , GLIB_001:def 24;
L302: C74 is  Path-like by L294 , L295 , L296 , GLIB_001:181;
thus L303: thesis by L302 , L298 , L301 , GLIB_001:def 31;
end;
theorem
L304: (for B71 being _Graph holds (for B72 being (Path of B71) holds (for B73 , B74 being  odd Nat holds ((B73 <= ( len B72 ) & B74 <= ( len B72 ) & ( B72 . B73 ) = ( B72 . B74 )) implies (B73 = B74 or (B73 = 1 & B74 = ( len B72 )) or (B73 = ( len B72 ) & B74 = 1))))))
proof
let C75 being _Graph;
let C76 being (Path of C75);
let C77 , C78 being  odd Nat;
assume that
L305: C77 <= ( len C76 )
and
L306: C78 <= ( len C76 )
and
L307: ( C76 . C77 ) = ( C76 . C78 );
L308: C77 in ( NAT ) by ORDINAL1:def 12;
L309: C78 in ( NAT ) by ORDINAL1:def 12;
L310: (C77 = C78 or C77 < C78 or C78 < C77) by XXREAL_0:1;
thus L311: thesis by L310 , L305 , L306 , L307 , L308 , L309 , GLIB_001:def 28;
end;
theorem
L312: (for B75 being _Graph holds (for B76 being (Path of B75) holds (B76 is  open implies (for B77 , B78 , B79 being set holds (((not B77 in ( B76 .vertices() )) & B79 = ( B76 .first() ) & B78 Joins B77 , B79 , B75) implies ( ( B75 .walkOf (B77 , B78 , B79) ) .append B76 ) is  Path-like)))))
proof
let C79 being _Graph;
let C80 being (Path of C79);
assume that
L313: C80 is  open;
let C81 , C82 , C83 being set;
assume that
L314: (not C81 in ( C80 .vertices() ))
and
L315: C83 = ( C80 .first() )
and
L316: C82 Joins C81 , C83 , C79;
set D9 = ( C79 .walkOf (C81 , C82 , C83) );
L317: ( D9 .last() ) = ( C80 .first() ) by L315 , L316 , GLIB_001:15;
set D10 = ( D9 .append C80 );
L318: 3 in ( Seg 3 ) by FINSEQ_1:3;
L319: 3 in ( Seg ( len D9 ) ) by L318 , L316 , GLIB_001:14;
L320: 3 in ( dom D9 ) by L319 , FINSEQ_1:def 3;
L321: ( D10 . 3 ) = ( D9 . 3 ) by L320 , GLIB_001:32;
L322: ( D10 . 3 ) = ( D9 .last() ) by L321 , L316 , GLIB_001:14;
L323: ( D10 . 3 ) = C83 by L322 , L316 , GLIB_001:15;
L324:
now
let C84 , C85 being  odd Nat;
assume that
L325: C84 < C85
and
L326: C85 <= ( len D10 );
assume L327: ( D10 . C84 ) = ( D10 . C85 );
L328: 1 <= C84 by ABIAN:12;
L329: ( ( 2 * ( 0 ) ) + 1 ) < C85 by L328 , L325 , XXREAL_0:2;
L330: ( 1 + 2 ) <= C85 by L329 , L22;
L331:
now
assume L332: C84 = 1;
L333: ( D10 . C84 ) = ( D10 .first() ) by L332;
L334: ( D10 . C84 ) = ( D9 .first() ) by L333 , L317 , GLIB_001:30;
L335: (not ( D10 . C84 ) in ( C80 .vertices() )) by L334 , L314 , L316 , GLIB_001:15;
per cases  by L330 , XXREAL_0:1;
suppose L336: C85 = 3;

thus L337: contradiction by L336 , L315 , L323 , L327 , L335 , GLIB_001:88;
end;
suppose L338: C85 > 3;

L339: (not C85 in ( Seg 3 )) by L338 , FINSEQ_1:1;
L340: (not C85 in ( Seg ( len D9 ) )) by L339 , L316 , GLIB_001:14;
L341: (not C85 in ( dom D9 )) by L340 , FINSEQ_1:def 3;
L342: 1 <= C85 by L338 , XXREAL_0:2;
L343: C85 in ( dom D10 ) by L342 , L326 , FINSEQ_3:25;
consider C86 being (Element of ( NAT )) such that L344: C86 < ( len C80 ) and L345: C85 = ( ( len D9 ) + C86 ) by L343 , L341 , GLIB_001:34;
reconsider D11 = C86 as  even Nat by L345;
reconsider D12 = ( D11 + 1 ) as  odd Nat;
L346: ( C86 + 1 ) <= ( len C80 ) by L344 , NAT_1:13;
L347: ( C80 . D12 ) in ( C80 .vertices() ) by L346 , GLIB_001:87;
thus L348: contradiction by L347 , L317 , L327 , L335 , L344 , L345 , GLIB_001:33;
end;
end;
L350: ( ( 2 * ( 0 ) ) + 1 ) < C84 by L331 , L328 , XXREAL_0:1;
L351: ( 1 + 2 ) <= C84 by L350 , L22;
L352: 3 <= C85 by L351 , L325 , XXREAL_0:2;
L353: 1 <= C85 by L352 , XXREAL_0:2;
L354: C85 in ( Seg ( len D10 ) ) by L353 , L326 , FINSEQ_1:1;
L355: C85 in ( dom D10 ) by L354 , FINSEQ_1:def 3;
L356: 3 < C85 by L325 , L351 , XXREAL_0:2;
L357: (not C85 in ( Seg 3 )) by L356 , FINSEQ_1:1;
L358: (not C85 in ( Seg ( len D9 ) )) by L357 , L316 , GLIB_001:14;
L359: (not C85 in ( dom D9 )) by L358 , FINSEQ_1:def 3;
consider C87 being (Element of ( NAT )) such that L360: C87 < ( len C80 ) and L361: C85 = ( ( len D9 ) + C87 ) by L359 , L355 , GLIB_001:34;
reconsider D13 = C87 as  even Nat by L361;
reconsider D14 = ( D13 + 1 ) as  odd Nat;
L362: D14 <= ( len C80 ) by L360 , NAT_1:13;
L363: C84 < ( len D10 ) by L325 , L326 , XXREAL_0:2;
L364: C84 in ( dom D10 ) by L363 , L328 , FINSEQ_3:25;
L365: ( D10 . C85 ) = ( C80 . ( C87 + 1 ) ) by L317 , L360 , L361 , GLIB_001:33;
L366:
now
assume L367: C84 = 3;
L368: ( D10 . C84 ) = ( C80 . 1 ) by L367 , L315 , L316 , L322 , GLIB_001:15;
L369: ( 0 ) <> C87 by L316 , L325 , L351 , L361 , GLIB_001:14;
L370: ( ( 2 * ( 0 ) ) + 1 ) < D14 by L369 , XREAL_1:8;
thus L371: contradiction by L370 , L313 , L327 , L365 , L362 , L368 , GLIB_001:147;
end;
L372: 3 < C84 by L366 , L351 , XXREAL_0:1;
L373: (not C84 in ( Seg 3 )) by L372 , FINSEQ_1:1;
L374: (not C84 in ( Seg ( len D9 ) )) by L373 , L316 , GLIB_001:14;
L375: (not C84 in ( dom D9 )) by L374 , FINSEQ_1:def 3;
consider C88 being (Element of ( NAT )) such that L376: C88 < ( len C80 ) and L377: C84 = ( ( len D9 ) + C88 ) by L375 , L364 , GLIB_001:34;
reconsider D15 = C88 as  even Nat by L377;
reconsider D16 = ( D15 + 1 ) as  odd Nat;
L378: C88 < C87 by L325 , L361 , L377 , XREAL_1:7;
L379: D16 < D14 by L378 , XREAL_1:8;
L380: ( D10 . C84 ) = ( C80 . ( C88 + 1 ) ) by L317 , L376 , L377 , GLIB_001:33;
thus L381: contradiction by L380 , L313 , L327 , L365 , L362 , L379 , GLIB_001:147;
end;
L382:
now
let C89 , C90 being  odd (Element of ( NAT ));
assume that
L383: C89 <= ( len D10 )
and
L384: C90 <= ( len D10 );
assume L385: ( D10 . C89 ) = ( D10 . C90 );
L386: (not C90 < C89) by L385 , L324 , L383;
L387: C89 >= C90 by L324 , L384 , L385;
thus L388: C90 = C89 by L387 , L386 , XXREAL_0:1;
end;
thus L389: thesis by L382 , GLIB_001:146;
end;
theorem
L390: (for B80 being _Graph holds (for B81 , B82 being (Path of B80) holds ((( B81 .edges() ) misses ( B82 .edges() ) & B81 is  open & B82 is non  trivial & B82 is  open & ( ( B81 .vertices() ) /\ ( B82 .vertices() ) ) = { ( B81 .first() ) , ( B81 .last() ) } & ( B82 .first() ) = ( B81 .last() ) & ( B82 .last() ) = ( B81 .first() )) implies ( B81 .append B82 ) is  Cycle-like)))
proof
let C91 being _Graph;
let C92 , C93 being (Path of C91);
assume that
L391: ( C92 .edges() ) misses ( C93 .edges() )
and
L392: C92 is  open
and
L393: C93 is non  trivial
and
L394: C93 is  open
and
L395: ( ( C92 .vertices() ) /\ ( C93 .vertices() ) ) = { ( C92 .first() ) , ( C92 .last() ) }
and
L396: ( C93 .first() ) = ( C92 .last() )
and
L397: ( C93 .last() ) = ( C92 .first() );
set D17 = ( C92 .append C93 );
L398: ( D17 .first() ) = ( C92 .first() ) by L396 , GLIB_001:30;
L399:
now
let C94 being  odd Nat;
L400: 1 <= C94 by ABIAN:12;
assume L401: C94 <= ( len C92 );
L402: C94 in ( dom C92 ) by L401 , L400 , FINSEQ_3:25;
thus L403: ( D17 . C94 ) = ( C92 . C94 ) by L402 , GLIB_001:32;
end;
L404: (for B83 being  odd Nat holds ((B83 > ( len C92 ) & B83 <= ( len D17 )) implies (B83 in ( dom D17 ) & (not B83 in ( dom C92 )))))
proof
let C95 being  odd Nat;
assume that
L405: C95 > ( len C92 )
and
L406: C95 <= ( len D17 );
L407: 1 <= C95 by ABIAN:12;
thus L408: thesis by L407 , L405 , L406 , FINSEQ_3:25;
end;
L409: ( ( ( len D17 ) + 1 ) + ( - 1 ) ) = ( ( ( len C92 ) + ( len C93 ) ) + ( - 1 ) ) by L396 , GLIB_001:28;
L410:
now
let C96 , C97 being  odd (Element of ( NAT ));
assume that
L411: C96 < C97
and
L412: C97 <= ( len D17 );
L413: C96 <= ( len D17 ) by L411 , L412 , XXREAL_0:2;
L414: 1 <= C96 by ABIAN:12;
per cases ;
suppose L415: (C96 <= ( len C92 ) & C97 <= ( len C92 ));

L416: ( C92 . C96 ) = ( D17 . C96 ) by L415 , L399;
L417: ( C92 . C96 ) <> ( C92 . C97 ) by L392 , L411 , L415 , GLIB_001:147;
thus L418: (( D17 . C96 ) = ( D17 . C97 ) implies (C96 = 1 & C97 = ( len D17 ))) by L417 , L399 , L415 , L416;
end;
suppose L419: (C96 <= ( len C92 ) & C97 > ( len C92 ));

L420: ( D17 . C96 ) = ( C92 . C96 ) by L419 , L399;
L421: (not C97 in ( dom C92 )) by L404 , L412 , L419;
L422: C97 in ( dom D17 ) by L404 , L412 , L419;
consider C98 being (Element of ( NAT )) such that L423: C98 < ( len C93 ) and L424: C97 = ( ( len C92 ) + C98 ) by L422 , L421 , GLIB_001:34;
reconsider D18 = C98 as  even Nat by L424;
reconsider D19 = ( D18 + 1 ) as  odd Nat;
L425: D19 <= ( len C93 ) by L423 , NAT_1:13;
L426: ( D17 . C97 ) = ( C93 . ( C98 + 1 ) ) by L396 , L423 , L424 , GLIB_001:33;
L427:
now
assume L428: ( D17 . C96 ) = ( D17 . C97 );
L429:
now
L430: C98 <> ( 0 ) by L419 , L424;
L431: ( ( 0 ) + 1 ) < D19 by L430 , XREAL_1:8;
L432: ( C93 . ( ( 2 * ( 0 ) ) + 1 ) ) <> ( C93 . D19 ) by L431 , L394 , L425 , GLIB_001:147;
assume L433: ( D17 . C96 ) = ( C92 .last() );
thus L434: contradiction by L433 , L396 , L423 , L424 , L428 , L432 , GLIB_001:33;
end;
L435: ( D17 . C96 ) in ( C92 .vertices() ) by L419 , L420 , GLIB_001:87;
L436: ( D17 . C96 ) in ( C93 .vertices() ) by L426 , L425 , L428 , GLIB_001:87;
L437: ( D17 . C96 ) in ( ( C92 .vertices() ) /\ ( C93 .vertices() ) ) by L436 , L435 , XBOOLE_0:def 4;
L438: ( D17 . C97 ) = ( C93 .last() ) by L437 , L395 , L397 , L428 , L429 , TARSKI:def 2;
L439:
now
assume L440: C97 < ( len D17 );
L441: D19 <> ( len C93 ) by L440 , L409 , L424;
L442: D19 < ( len C93 ) by L441 , L425 , XXREAL_0:1;
L443: ( C93 . D19 ) = ( C93 . ( len C93 ) ) by L396 , L423 , L424 , L438 , GLIB_001:33;
thus L444: contradiction by L443 , L394 , L442 , GLIB_001:147;
end;
L445: ( D17 . C96 ) = ( C92 .first() ) by L395 , L437 , L429 , TARSKI:def 2;
L446:
now
assume L447: 1 < C96;
L448: ( C92 . C96 ) <> ( C92 . ( ( 2 * ( 0 ) ) + 1 ) ) by L447 , L392 , L419 , GLIB_001:147;
thus L449: contradiction by L448 , L399 , L419 , L445;
end;
thus L450: (C96 = 1 & C97 = ( len D17 )) by L446 , L412 , L414 , L439 , XXREAL_0:1;
end;
thus L451: (( D17 . C96 ) = ( D17 . C97 ) implies (C96 = 1 & C97 = ( len D17 ))) by L427;
end;
suppose L452: (C96 > ( len C92 ) & C97 <= ( len C92 ));

thus L453: (( D17 . C96 ) = ( D17 . C97 ) implies (C96 = 1 & C97 = ( len D17 ))) by L452 , L411 , XXREAL_0:2;
end;
suppose L454: (C96 > ( len C92 ) & C97 > ( len C92 ));

L455: (not C97 in ( dom C92 )) by L454 , L404 , L412;
L456: C97 in ( dom D17 ) by L404 , L412 , L454;
consider C99 being (Element of ( NAT )) such that L457: C99 < ( len C93 ) and L458: C97 = ( ( len C92 ) + C99 ) by L456 , L455 , GLIB_001:34;
reconsider D20 = C99 as  even Nat by L458;
reconsider D21 = ( D20 + 1 ) as  odd (Element of ( NAT ));
L459: D21 <= ( len C93 ) by L457 , NAT_1:13;
L460: (not C96 in ( dom C92 )) by L404 , L413 , L454;
L461: C96 in ( dom D17 ) by L404 , L413 , L454;
consider C100 being (Element of ( NAT )) such that L462: C100 < ( len C93 ) and L463: C96 = ( ( len C92 ) + C100 ) by L461 , L460 , GLIB_001:34;
reconsider D22 = C100 as  even Nat by L463;
reconsider D23 = ( D22 + 1 ) as  odd Nat;
L464: C100 < C99 by L411 , L463 , L458 , XREAL_1:7;
L465: D23 < D21 by L464 , XREAL_1:8;
L466: ( D17 . ( ( len C92 ) + C99 ) ) = ( C93 . ( C99 + 1 ) ) by L396 , L457 , GLIB_001:33;
L467: ( D17 . ( ( len C92 ) + C100 ) ) = ( C93 . ( C100 + 1 ) ) by L396 , L462 , GLIB_001:33;
thus L468: (( D17 . C96 ) = ( D17 . C97 ) implies (C96 = 1 & C97 = ( len D17 ))) by L467 , L394 , L463 , L458 , L466 , L465 , L459 , GLIB_001:147;
end;
end;
L470: ( C93 .edgeSeq() ) is  one-to-one by GLIB_001:def 27;
L471:
now
assume L472: ( len D17 ) = 1;
L473: ( 1 + 1 ) = ( ( len C92 ) + ( len C93 ) ) by L472 , L396 , GLIB_001:28;
L474:
now
assume L475: ( len C92 ) <> 1;
L476: 1 <= ( len C92 ) by L7;
L477: 1 < ( len C92 ) by L476 , L475 , XXREAL_0:1;
L478: ( ( len C92 ) + ( len C93 ) ) <= ( len C92 ) by L477 , L473 , NAT_1:13;
L479: ( ( ( len C92 ) + ( len C93 ) ) + ( - ( len C92 ) ) ) <= ( ( len C92 ) + ( - ( len C92 ) ) ) by L478 , XREAL_1:7;
L480: ( len C93 ) <= ( 0 ) by L479;
thus L481: contradiction by L480;
end;
thus L482: contradiction by L474 , L393 , L473 , GLIB_001:126;
end;
L483: D17 is non  trivial by L471 , GLIB_001:126;
L484: ( D17 .last() ) = ( C92 .first() ) by L396 , L397 , GLIB_001:30;
L485: D17 is  closed by L484 , L398 , GLIB_001:def 24;
L486: ( C92 .edgeSeq() ) is  one-to-one by GLIB_001:def 27;
L487: ( ( C92 .edgeSeq() ) ^ ( C93 .edgeSeq() ) ) is  one-to-one by L486 , L391 , L470 , FINSEQ_3:91;
L488: ( D17 .edgeSeq() ) is  one-to-one by L487 , L396 , GLIB_001:85;
L489: D17 is  Trail-like by L488 , GLIB_001:def 27;
L490: D17 is  Path-like by L489 , L410 , GLIB_001:def 28;
thus L491: thesis by L490 , L485 , L483 , GLIB_001:def 31;
end;
theorem
L492: (for B84 being _Graph holds (for B85 , B86 being (Walk of B84) holds (( B85 .last() ) = ( B86 .first() ) implies ( ( B85 .append B86 ) .length() ) = ( ( B85 .length() ) + ( B86 .length() ) ))))
proof
let C101 being _Graph;
let C102 , C103 being (Walk of C101);
assume L493: ( C103 .first() ) = ( C102 .last() );
thus L494: ( ( C102 .append C103 ) .length() ) = ( len ( ( C102 .edgeSeq() ) ^ ( C103 .edgeSeq() ) ) ) by L493 , GLIB_001:85
.= ( ( C102 .length() ) + ( C103 .length() ) ) by FINSEQ_1:22;
end;
theorem
L495: (for B87 being _Graph holds (for B88 , B89 being non  empty (Subset of ( the_Vertices_of B87 )) holds (B89 c= B88 implies (for B90 being (inducedSubgraph of B87 , B88) holds (for B91 being (inducedSubgraph of B90 , B89) holds B91 is (inducedSubgraph of B87 , B89))))))
proof
let C104 being _Graph;
let C105 , C106 being non  empty (Subset of ( the_Vertices_of C104 ));
assume that
L496: C106 c= C105;
let C107 being (inducedSubgraph of C104 , C105);
let C108 being (inducedSubgraph of C107 , C106);
L497: ( the_Vertices_of C107 ) = C105 by GLIB_000:def 37;
L498: ( the_Vertices_of C108 ) = C106 by L497 , L496 , GLIB_000:def 37;
L499:
now
let C109 being set;
assume that
L500: C109 in ( C104 .edgesBetween C106 );
L501: ( ( the_Target_of C104 ) . C109 ) in C106 by L500 , GLIB_000:31;
L502: ( ( the_Source_of C104 ) . C109 ) in C106 by L500 , GLIB_000:31;
L503: C109 in ( C104 .edgesBetween C105 ) by L502 , L496 , L500 , L501 , GLIB_000:31;
L504: C109 in ( the_Edges_of C107 ) by L503 , GLIB_000:def 37;
L505: ( ( the_Target_of C107 ) . C109 ) = ( ( the_Target_of C104 ) . C109 ) by L504 , GLIB_000:def 32;
L506: ( ( the_Source_of C107 ) . C109 ) = ( ( the_Source_of C104 ) . C109 ) by L504 , GLIB_000:def 32;
L507: C109 in ( C107 .edgesBetween C106 ) by L506 , L502 , L501 , L504 , L505 , GLIB_000:31;
thus L508: C109 in ( the_Edges_of C108 ) by L507 , L496 , L497 , GLIB_000:def 37;
end;
L509: ( C107 .edgesBetween C106 ) c= ( C104 .edgesBetween C106 ) by GLIB_000:76;
L510: ( the_Edges_of C108 ) c= ( C104 .edgesBetween C106 ) by L509 , L496 , L497 , GLIB_000:def 37;
L511: (for B92 being set holds (B92 in ( the_Edges_of C108 ) iff B92 in ( C104 .edgesBetween C106 ))) by L510 , L499;
L512: ( the_Edges_of C108 ) = ( C104 .edgesBetween C106 ) by L511 , TARSKI:1;
L513:
now
let C110 being set;
assume that
L514: C110 in ( the_Edges_of C108 );
L515: ( ( the_Target_of C108 ) . C110 ) = ( ( the_Target_of C107 ) . C110 ) by L514 , GLIB_000:def 32;
L516: ( ( the_Source_of C108 ) . C110 ) = ( ( the_Source_of C107 ) . C110 ) by L514 , GLIB_000:def 32;
thus L517: (( ( the_Source_of C108 ) . C110 ) = ( ( the_Source_of C104 ) . C110 ) & ( ( the_Target_of C108 ) . C110 ) = ( ( the_Target_of C104 ) . C110 )) by L516 , L514 , L515 , GLIB_000:def 32;
end;
L518: ( the_Edges_of C108 ) c= ( the_Edges_of C107 );
L519: ( the_Edges_of C108 ) c= ( the_Edges_of C104 ) by L518 , XBOOLE_1:1;
L520: C108 is (Subgraph of C104) by L519 , L498 , L513 , GLIB_000:def 32;
thus L521: thesis by L520 , L498 , L512 , GLIB_000:def 37;
end;
theorem
L522: (for B93 being _Graph holds (for B94 , B95 being non  empty (Subset of ( the_Vertices_of B93 )) holds (B95 c= B94 implies (for B96 being (inducedSubgraph of B93 , B94) holds (for B97 being (inducedSubgraph of B93 , B95) holds B97 is (inducedSubgraph of B96 , B95))))))
proof
let C111 being _Graph;
let C112 , C113 being non  empty (Subset of ( the_Vertices_of C111 ));
assume that
L523: C113 c= C112;
let C114 being (inducedSubgraph of C111 , C112);
let C115 being (inducedSubgraph of C111 , C113);
L524: ( the_Edges_of C115 ) = ( C111 .edgesBetween C113 ) by GLIB_000:def 37;
L525: ( the_Edges_of C114 ) = ( C111 .edgesBetween C112 ) by GLIB_000:def 37;
L526: ( the_Edges_of C115 ) c= ( the_Edges_of C114 ) by L525 , L523 , L524 , GLIB_000:36;
L527:
now
let C116 being set;
assume that
L528: C116 in ( the_Edges_of C115 );
L529: ( ( the_Target_of C111 ) . C116 ) = ( ( the_Target_of C114 ) . C116 ) by L526 , L528 , GLIB_000:def 32;
L530: ( ( the_Target_of C111 ) . C116 ) in C113 by L524 , L528 , GLIB_000:31;
L531: ( ( the_Source_of C111 ) . C116 ) in C113 by L524 , L528 , GLIB_000:31;
L532: ( ( the_Source_of C111 ) . C116 ) = ( ( the_Source_of C114 ) . C116 ) by L526 , L528 , GLIB_000:def 32;
thus L533: C116 in ( C114 .edgesBetween C113 ) by L532 , L526 , L528 , L529 , L531 , L530 , GLIB_000:31;
end;
L534: ( C114 .edgesBetween C113 ) c= ( the_Edges_of C115 ) by L524 , GLIB_000:76;
L535: (for B98 being set holds (B98 in ( the_Edges_of C115 ) iff B98 in ( C114 .edgesBetween C113 ))) by L534 , L527;
L536: ( the_Edges_of C115 ) = ( C114 .edgesBetween C113 ) by L535 , TARSKI:1;
L537: ( the_Vertices_of C114 ) = C112 by GLIB_000:def 37;
L538: ( the_Vertices_of C115 ) = C113 by GLIB_000:def 37;
L539:
now
let C117 being set;
assume that
L540: C117 in ( the_Edges_of C115 );
thus L541: ( ( the_Source_of C115 ) . C117 ) = ( ( the_Source_of C111 ) . C117 ) by L540 , GLIB_000:def 32
.= ( ( the_Source_of C114 ) . C117 ) by L526 , L540 , GLIB_000:def 32;
thus L542: ( ( the_Target_of C115 ) . C117 ) = ( ( the_Target_of C111 ) . C117 ) by L540 , GLIB_000:def 32
.= ( ( the_Target_of C114 ) . C117 ) by L526 , L540 , GLIB_000:def 32;
end;
L543: C115 is (Subgraph of C114) by L539 , L523 , L537 , L538 , L526 , GLIB_000:def 32;
thus L544: thesis by L543 , L523 , L537 , L538 , L536 , GLIB_000:def 37;
end;
theorem
L545: (for B99 being _Graph holds (for B100 , B101 being non  empty (Subset of ( the_Vertices_of B99 )) holds (B101 c= B100 implies (for B102 being (inducedSubgraph of B99 , B100) holds ( B102 .edgesBetween B101 ) = ( B99 .edgesBetween B101 )))))
proof
let C118 being _Graph;
let C119 , C120 being non  empty (Subset of ( the_Vertices_of C118 ));
assume that
L546: C120 c= C119;
let C121 being (inducedSubgraph of C118 , C119);
L547: ( the_Edges_of C121 ) = ( C118 .edgesBetween C119 ) by GLIB_000:def 37;
L548:
now
let C122 being set;
thus L549:now
assume L550: C122 in ( C118 .edgesBetween C120 );
L551: ( ( the_Source_of C118 ) . C122 ) in C120 by L550 , GLIB_000:31;
L552: ( ( the_Target_of C118 ) . C122 ) in C120 by L550 , GLIB_000:31;
L553: ( C118 .edgesBetween C120 ) c= ( C118 .edgesBetween C119 ) by L546 , GLIB_000:36;
L554: ( ( the_Target_of C121 ) . C122 ) = ( ( the_Target_of C118 ) . C122 ) by L553 , L547 , L550 , GLIB_000:def 32;
L555: ( ( the_Source_of C121 ) . C122 ) = ( ( the_Source_of C118 ) . C122 ) by L547 , L550 , L553 , GLIB_000:def 32;
thus L556: C122 in ( C121 .edgesBetween C120 ) by L555 , L547 , L550 , L553 , L551 , L552 , L554 , GLIB_000:31;
end;
assume L557: C122 in ( C121 .edgesBetween C120 );
L558: ( ( the_Source_of C121 ) . C122 ) in C120 by L557 , GLIB_000:31;
L559: ( ( the_Source_of C118 ) . C122 ) in C120 by L558 , L557 , GLIB_000:def 32;
L560: ( ( the_Target_of C121 ) . C122 ) in C120 by L557 , GLIB_000:31;
L561: ( ( the_Target_of C118 ) . C122 ) in C120 by L560 , L557 , GLIB_000:def 32;
L562: C122 in ( the_Edges_of C121 ) by L557;
thus L563: C122 in ( C118 .edgesBetween C120 ) by L562 , L559 , L561 , GLIB_000:31;
end;
thus L564: thesis by L548 , TARSKI:1;
end;
scheme FinGraphOrderCompInd { P1[set] } : (for B103 being  finite _Graph holds P1[ B103 ])
provided
L565: (for B104 being non  zero Nat holds ((for B105 being  finite _Graph holds (( B105 .order() ) < B104 implies P1[ B105 ])) implies (for B106 being  finite _Graph holds (( B106 .order() ) = B104 implies P1[ B106 ]))))
proof
let C123 being  finite _Graph;
defpred S1[ non  zero Nat ] means (for B107 being  finite _Graph holds (( B107 .order() ) < $1 implies P1[ B107 ]));
L566: (for B108 being non  zero Nat holds (S1[ B108 ] implies S1[ ( B108 + 1 ) ]))
proof
let C124 being non  zero Nat;
assume that
L567: S1[ C124 ];
L568:
now
let C125 being  finite _Graph;
assume L569: ( C125 .order() ) < ( C124 + 1 );
L570: ( C125 .order() ) <= C124 by L569 , NAT_1:13;
L571: (( C125 .order() ) < C124 or ( C125 .order() ) = C124) by L570 , XXREAL_0:1;
thus L572: P1[ C125 ] by L571 , L565 , L567;
end;
thus L573: thesis by L568;
end;
L574: S1[ 1 ] by NAT_1:14;
L575: (for B109 being non  zero Nat holds S1[ B109 ]) from NAT_1:sch 10(L574 , L566);
L576: (for B110 being  finite _Graph holds (( B110 .order() ) < ( C123 .order() ) implies P1[ B110 ])) by L575;
thus L577: thesis by L576 , L565;
end;
theorem
L578: (for B111 being _Graph holds (for B112 being (Walk of B111) holds ((B112 is  open & B112 is  Path-like) implies B112 is  vertex-distinct)))
proof
let C126 being _Graph;
let C127 being (Walk of C126);
assume that
L579: C127 is  open
and
L580: C127 is  Path-like;
L581:
now
let C128 , C129 being  odd (Element of ( NAT ));
assume that
L582: C128 <= ( len C127 )
and
L583: C129 <= ( len C127 )
and
L584: ( C127 . C128 ) = ( C127 . C129 );
assume L585: C128 <> C129;
per cases  by L585 , XXREAL_0:1;
suppose L586: C128 < C129;

L587: ( C127 . C129 ) = ( C127 .last() ) by L586 , L580 , L583 , L584 , GLIB_001:def 28;
L588: ( C127 . C128 ) = ( C127 .first() ) by L580 , L583 , L584 , L586 , GLIB_001:def 28;
thus L589: contradiction by L588 , L579 , L584 , L587 , GLIB_001:def 24;
end;
suppose L590: C128 > C129;

L591: ( C127 . C129 ) = ( C127 .first() ) by L590 , L580 , L582 , L584 , GLIB_001:def 28;
L592: ( C127 . C128 ) = ( C127 .last() ) by L580 , L582 , L584 , L590 , GLIB_001:def 28;
thus L593: contradiction by L592 , L579 , L584 , L591 , GLIB_001:def 24;
end;
end;
thus L595: thesis by L581 , GLIB_001:def 29;
end;
theorem
L596: (for B113 being _Graph holds (for B114 being (Path of B113) holds ((B114 is  open & ( len B114 ) > 3) implies (for B115 being set holds (B115 Joins ( B114 .last() ) , ( B114 .first() ) , B113 implies ( B114 .addEdge B115 ) is  Cycle-like)))))
proof
let C130 being _Graph;
let C131 being (Path of C130);
assume that
L597: C131 is  open
and
L598: ( len C131 ) > 3;
let C132 being set;
assume that
L599: C132 Joins ( C131 .last() ) , ( C131 .first() ) , C130;
L600:
now
assume L601: C132 in ( C131 .edges() );
consider C133 , C134 being (Vertex of C130), C135 being  odd (Element of ( NAT )) such that L602: ( C135 + 2 ) <= ( len C131 ) and L603: C133 = ( C131 . C135 ) and L604: C132 = ( C131 . ( C135 + 1 ) ) and L605: C134 = ( C131 . ( C135 + 2 ) ) and L606: C132 Joins C133 , C134 , C130 by L601 , GLIB_001:103;
L607: C135 < ( len C131 ) by L602 , XREAL_1:39;
per cases  by L599 , L606 , GLIB_000:15;
suppose L608: (C133 = ( C131 .first() ) & C134 = ( C131 .last() ));

L609:
now
assume L610: 1 <> C135;
L611: 1 <= C135 by L7;
L612: ( ( 2 * ( 0 ) ) + 1 ) < C135 by L611 , L610 , XXREAL_0:1;
thus L613: contradiction by L612 , L597 , L603 , L607 , L608 , GLIB_001:147;
end;
thus L614: contradiction by L609 , L597 , L598 , L605 , L608 , GLIB_001:147;
end;
suppose L615: (C133 = ( C131 .last() ) & C134 = ( C131 .first() ));

thus L616: contradiction by L615 , L597 , L603 , L607 , GLIB_001:147;
end;
end;
set D24 = ( C131 .addEdge C132 );
L618: ( D24 .last() ) = ( C131 .first() ) by L599 , GLIB_001:63;
L619: ( len D24 ) = ( ( len C131 ) + ( 2 * 1 ) ) by L599 , GLIB_001:64;
L620:
now
let C136 , C137 being  odd (Element of ( NAT ));
assume that
L621: C136 < C137
and
L622: C137 <= ( len D24 );
L623: C136 < ( ( len C131 ) + ( 2 * 1 ) ) by L619 , L621 , L622 , XXREAL_0:2;
L624: C136 <= ( ( ( len C131 ) + 2 ) - 2 ) by L623 , L14;
assume L625: ( D24 . C136 ) = ( D24 . C137 );
L626: 1 <= C136 by L7;
L627: C136 in ( dom C131 ) by L626 , L624 , FINSEQ_3:25;
L628: ( C131 . C136 ) = ( D24 . C136 ) by L627 , L599 , GLIB_001:65;
L629:
now
assume L630: C137 < ( len D24 );
L631: C137 < ( ( len C131 ) + ( 2 * 1 ) ) by L630 , L599 , GLIB_001:64;
L632: C137 <= ( ( ( len C131 ) + 2 ) - 2 ) by L631 , L14;
L633: 1 <= C137 by L7;
L634: C137 in ( dom C131 ) by L633 , L632 , FINSEQ_3:25;
L635: ( C131 . C137 ) <> ( C131 . C136 ) by L597 , L621 , L632 , GLIB_001:147;
thus L636: contradiction by L635 , L599 , L625 , L628 , L634 , GLIB_001:65;
end;
L637: ( D24 . C137 ) = ( C131 . 1 ) by L629 , L618 , L622 , XXREAL_0:1;
L638:
now
assume L639: C136 <> 1;
L640: 1 <= C136 by L7;
L641: ( ( 2 * ( 0 ) ) + 1 ) < C136 by L640 , L639 , XXREAL_0:1;
L642: ( C131 . 1 ) <> ( C131 . C136 ) by L641 , L597 , L624 , GLIB_001:147;
thus L643: contradiction by L642 , L599 , L625 , L627 , L637 , GLIB_001:65;
end;
thus L644: (C136 = 1 & C137 = ( len D24 )) by L638 , L622 , L629 , XXREAL_0:1;
end;
L645: C132 in ( ( C131 .last() ) .edgesInOut() ) by L599 , GLIB_000:62;
L646: D24 is  Trail-like by L645 , L600 , GLIB_001:142;
L647: D24 is  Path-like by L646 , L620 , GLIB_001:def 28;
L648: ( D24 .first() ) = ( C131 .first() ) by L599 , GLIB_001:63;
L649: D24 is  closed by L648 , L618 , GLIB_001:def 24;
L650: D24 is non  trivial by L599 , GLIB_001:132;
thus L651: thesis by L650 , L649 , L647 , GLIB_001:def 31;
end;
begin
definition
let C138 being _Graph;
let C139 being (Walk of C138);
attr C139 is  minlength
means
:L652: (for B116 being (Walk of C138) holds (B116 is_Walk_from ( C139 .first() ) , ( C139 .last() ) implies ( len B116 ) >= ( len C139 )));
end;
theorem
L654: (for B117 being _Graph holds (for B118 being (Walk of B117) holds (for B119 being (Subwalk of B118) holds ((( B119 .first() ) = ( B118 .first() ) & ( B119 .edgeSeq() ) = ( B118 .edgeSeq() )) implies B119 = B118))))
proof
let C140 being _Graph;
let C141 being (Walk of C140);
let C142 being (Subwalk of C141);
assume that
L655: ( C142 .first() ) = ( C141 .first() )
and
L656: ( C142 .edgeSeq() ) = ( C141 .edgeSeq() );
defpred S2[ Nat ] means ($1 in ( dom C142 ) implies ( C142 . $1 ) = ( C141 . $1 ));
L657: ( len C142 ) = ( ( 2 * ( len ( C141 .edgeSeq() ) ) ) + 1 ) by L656 , GLIB_001:def 15;
L658: ( len C142 ) = ( len C141 ) by L657 , GLIB_001:def 15;
L659:
now
let C143 being Nat;
assume that
L660: (for B120 being Nat holds (B120 < C143 implies S2[ B120 ]));
L661: C143 in ( NAT ) by ORDINAL1:def 12;
per cases ;
suppose L662: C143 in ( dom C142 );

L663: 1 <= C143 by L662 , FINSEQ_3:25;
L664: C143 <= ( len C142 ) by L662 , FINSEQ_3:25;
per cases ;
suppose L665: C143 is  even;

L666: ( C142 . C143 ) = ( ( C142 .edgeSeq() ) . ( C143 div 2 ) ) by L665 , L661 , L663 , L664 , GLIB_001:77;
thus L667: S2[ C143 ] by L666 , L656 , L658 , L663 , L664 , L665 , GLIB_001:77;
end;
suppose L668: C143 is  odd;

reconsider D25 = C143 as  odd Nat by L668;
per cases  by L663 , XXREAL_0:1;
suppose L669: C143 = 1;

thus L670: S2[ C143 ] by L669 , L655;
end;
suppose L671: C143 > ( ( 2 * ( 0 ) ) + 1 );

L672: ( 1 + 2 ) <= D25 by L671 , L22;
L673: ( 3 + ( - 2 ) ) <= ( C143 + ( - 2 ) ) by L672 , XREAL_1:7;
L674: ( 0 ) <= 2;
L675: ( 3 + ( - 1 ) ) <= ( C143 + ( - 1 ) ) by L672 , XREAL_1:7;
reconsider D26 = ( C143 - 1 ) as (Element of ( NAT )) by L675 , L674 , INT_1:3;
L676: D26 < C143 by XREAL_1:44;
L677: D26 <= ( len C142 ) by L676 , L664 , XXREAL_0:2;
L678: ( 3 + ( - 1 ) ) <= ( C143 + ( - 1 ) ) by L672 , XREAL_1:7;
L679: 1 <= D26 by L678 , XXREAL_0:2;
L680: D26 in ( dom C142 ) by L679 , L677 , FINSEQ_3:25;
L681: ( C142 . D26 ) = ( C141 . D26 ) by L680 , L660 , XREAL_1:44;
L682: ( 3 + ( - 2 ) ) <= ( C143 + ( - 2 ) ) by L672 , XREAL_1:7;
reconsider D27 = ( D25 - ( 2 * 1 ) ) as  odd (Element of ( NAT )) by L682 , INT_1:3;
L683: D27 < C143 by XREAL_1:44;
L684: D27 < ( len C142 ) by L683 , L664 , XXREAL_0:2;
L685: ( C142 . ( D27 + 1 ) ) Joins ( C142 . D27 ) , ( C142 . ( D27 + 2 ) ) , C140 by L684 , GLIB_001:def 3;
L686: D27 <= ( len C142 ) by L664 , L683 , XXREAL_0:2;
L687: D27 in ( dom C142 ) by L686 , L673 , FINSEQ_3:25;
L688: ( C142 . D27 ) = ( C141 . D27 ) by L687 , L660 , XREAL_1:44;
L689: D27 < ( len C141 ) by L658 , L664 , L683 , XXREAL_0:2;
L690: ( C141 . ( D27 + 1 ) ) Joins ( C141 . D27 ) , ( C141 . ( D27 + 2 ) ) , C140 by L689 , GLIB_001:def 3;
L691: ((( C142 . D27 ) = ( C142 . D27 ) & ( C142 . C143 ) = ( C141 . C143 )) or (( C142 . D27 ) = ( C141 . C143 ) & ( C142 . C143 ) = ( C142 . D27 ))) by L690 , L681 , L688 , L685 , GLIB_000:15;
thus L692: S2[ C143 ] by L691;
end;
end;
end;
suppose L695: (not C143 in ( dom C142 ));

thus L696: S2[ C143 ] by L695;
end;
end;
L698: (for B121 being Nat holds S2[ B121 ]) from NAT_1:sch 4(L659);
L699:
now
let C144 being Nat;
assume that
L700: 1 <= C144
and
L701: C144 <= ( len C142 );
L702: C144 in ( dom C142 ) by L700 , L701 , FINSEQ_3:25;
thus L703: ( C142 . C144 ) = ( C141 . C144 ) by L702 , L698;
end;
thus L704: thesis by L699 , L658 , FINSEQ_1:14;
end;
theorem
L705: (for B122 being _Graph holds (for B123 being (Walk of B122) holds (for B124 being (Subwalk of B123) holds (( len B124 ) = ( len B123 ) implies B124 = B123))))
proof
let C145 being _Graph;
let C146 being (Walk of C145);
let C147 being (Subwalk of C146);
assume that
L706: ( len C147 ) = ( len C146 );
L707: ( len C147 ) = ( ( 2 * ( len ( C147 .edgeSeq() ) ) ) + 1 ) by GLIB_001:def 15;
L708: ( C147 .first() ) = ( C146 .first() ) by GLIB_001:161;
L709: ( len C146 ) = ( ( 2 * ( len ( C146 .edgeSeq() ) ) ) + 1 ) by GLIB_001:def 15;
L710: (ex B125 being (Subset of ( C146 .edgeSeq() )) st ( C147 .edgeSeq() ) = ( Seq B125 )) by GLIB_001:def 32;
thus L711: thesis by L710 , L706 , L707 , L709 , L708 , L210 , L654;
end;
theorem
L712: (for B126 being _Graph holds (for B127 being (Walk of B126) holds (B127 is  minlength implies B127 is  Path-like)))
proof
let C148 being _Graph;
let C149 being (Walk of C148);
assume that
L713: C149 is  minlength
and
L714: (not C149 is  Path-like);
set D28 = the  Path-like (Subwalk of C149);
L715: D28 is_Walk_from ( C149 .first() ) , ( C149 .last() ) by GLIB_001:def 32;
L716: ( len C149 ) <= ( len D28 ) by L715 , L713 , L652;
L717: ( len D28 ) <= ( len C149 ) by GLIB_001:162;
thus L718: contradiction by L717 , L714 , L716 , L705 , XXREAL_0:1;
end;
theorem
L719: (for B128 being _Graph holds (for B129 being (Walk of B128) holds (B129 is  minlength implies B129 is  Path-like)))
proof
let C150 being _Graph;
let C151 being (Walk of C150);
assume that
L720: C151 is  minlength;
assume L721: (not C151 is  Path-like);
consider C152 , C153 being  odd (Element of ( NAT )) such that L722: C152 <= ( len C151 ) and L723: C153 <= ( len C151 ) and L724: ( C151 . C152 ) = ( C151 . C153 ) and L725: C152 <> C153 by L721 , GLIB_001:146;
per cases  by L725 , XXREAL_0:1;
suppose L726: C152 < C153;

set D29 = ( C151 .cut (1 , C152) );
set D30 = ( C151 .cut (C153 , ( len C151 )) );
set D31 = ( D29 .append D30 );
L727: ( ( ( len D30 ) + C153 ) - C153 ) = ( ( ( len C151 ) + 1 ) - C153 ) by L723 , GLIB_001:36;
L728: ( ( 2 * ( 0 ) ) + 1 ) <= C152 by ABIAN:12;
L729: ( ( ( len D29 ) + 1 ) - 1 ) = ( ( C152 + 1 ) - 1 ) by L728 , L722 , GLIB_001:36;
L730: ( D30 .first() ) = ( C151 . C152 ) by L723 , L724 , GLIB_001:37;
L731: ( D29 .last() ) = ( C151 . C152 ) by L722 , L728 , GLIB_001:37;
L732: ( ( len D31 ) + 1 ) = ( ( len D29 ) + ( len D30 ) ) by L731 , L730 , GLIB_001:28;
L733: ( len D31 ) = ( ( ( len C151 ) - C153 ) + C152 ) by L732 , L729 , L727;
L734: ( len D31 ) < ( ( ( len C151 ) - C153 ) + C153 ) by L733 , L726 , XREAL_1:8;
L735: ( D30 .last() ) = ( C151 . ( len C151 ) ) by L723 , GLIB_001:37;
L736: ( D29 .first() ) = ( C151 . ( ( 2 * ( 0 ) ) + 1 ) ) by L722 , L728 , GLIB_001:37;
L737: D31 is_Walk_from ( C151 .first() ) , ( C151 .last() ) by L736 , L731 , L730 , L735 , GLIB_001:30;
thus L738: contradiction by L737 , L720 , L734 , L652;
end;
suppose L739: C153 < C152;

set D32 = ( C151 .cut (1 , C153) );
set D33 = ( C151 .cut (C152 , ( len C151 )) );
set D34 = ( D32 .append D33 );
L740: ( ( ( len D33 ) + C152 ) - C152 ) = ( ( ( len C151 ) + 1 ) - C152 ) by L722 , GLIB_001:36;
L741: ( ( 2 * ( 0 ) ) + 1 ) <= C153 by ABIAN:12;
L742: ( ( ( len D32 ) + 1 ) - 1 ) = ( ( C153 + 1 ) - 1 ) by L741 , L723 , GLIB_001:36;
L743: ( D33 .first() ) = ( C151 . C153 ) by L722 , L724 , GLIB_001:37;
L744: ( D32 .last() ) = ( C151 . C153 ) by L723 , L741 , GLIB_001:37;
L745: ( ( len D34 ) + 1 ) = ( ( len D32 ) + ( len D33 ) ) by L744 , L743 , GLIB_001:28;
L746: ( len D34 ) = ( ( ( len C151 ) - C152 ) + C153 ) by L745 , L742 , L740;
L747: ( len D34 ) < ( ( ( len C151 ) - C152 ) + C152 ) by L746 , L739 , XREAL_1:8;
L748: ( D33 .last() ) = ( C151 . ( len C151 ) ) by L722 , GLIB_001:37;
L749: ( D32 .first() ) = ( C151 . ( ( 2 * ( 0 ) ) + 1 ) ) by L723 , L741 , GLIB_001:37;
L750: D34 is_Walk_from ( C151 .first() ) , ( C151 .last() ) by L749 , L744 , L743 , L748 , GLIB_001:30;
thus L751: contradiction by L750 , L720 , L747 , L652;
end;
end;
theorem
L753: (for B130 being _Graph holds (for B131 being (Walk of B130) holds ((for B132 being (Path of B130) holds (B132 is_Walk_from ( B131 .first() ) , ( B131 .last() ) implies ( len B132 ) >= ( len B131 ))) implies B131 is  minlength)))
proof
let C154 being _Graph;
let C155 being (Walk of C154);
assume L754: (for B133 being (Path of C154) holds (B133 is_Walk_from ( C155 .first() ) , ( C155 .last() ) implies ( len B133 ) >= ( len C155 )));
L755:
now
let C156 being (Walk of C154);
assume that
L756: C156 is_Walk_from ( C155 .first() ) , ( C155 .last() );
set D35 = the  Path-like (Subwalk of C156);
L757: ( C156 .last() ) = ( C155 .last() ) by L756 , GLIB_001:def 23;
L758: ( D35 .last() ) = ( C155 .last() ) by L757 , GLIB_001:161;
L759: ( C156 .first() ) = ( C155 .first() ) by L756 , GLIB_001:def 23;
L760: ( D35 .first() ) = ( C155 .first() ) by L759 , GLIB_001:161;
L761: D35 is_Walk_from ( C155 .first() ) , ( C155 .last() ) by L760 , L758 , GLIB_001:def 23;
L762: ( len C155 ) <= ( len D35 ) by L761 , L754;
L763: ( len D35 ) <= ( len C156 ) by GLIB_001:162;
thus L764: ( len C156 ) >= ( len C155 ) by L763 , L762 , XXREAL_0:2;
end;
thus L765: thesis by L755 , L652;
end;
theorem
L766: (for B134 being _Graph holds (for B135 being (Walk of B134) holds (ex B136 being (Path of B134) st (B136 is_Walk_from ( B135 .first() ) , ( B135 .last() ) & B136 is  minlength))))
proof
let C157 being _Graph;
let C158 being (Walk of C157);
set D36 = { ( len B137 ) where B137 is (Path of C157) : B137 is_Walk_from ( C158 .first() ) , ( C158 .last() ) };
set D37 = the  Path-like (Subwalk of C158);
L767: ( D37 .last() ) = ( C158 .last() ) by GLIB_001:161;
L768: ( D37 .first() ) = ( C158 .first() ) by GLIB_001:161;
L769: D37 is_Walk_from ( C158 .first() ) , ( C158 .last() ) by L768 , L767 , GLIB_001:def 23;
L770: ( len D37 ) in D36 by L769;
L771: D36 c= ( NAT )
proof
let C159 being set;
assume L772: C159 in D36;
L773: (ex B138 being (Path of C157) st (C159 = ( len B138 ) & B138 is_Walk_from ( C158 .first() ) , ( C158 .last() ))) by L772;
thus L774: thesis by L773;
end;
reconsider D38 = D36 as non  empty (Subset of ( NAT )) by L771 , L770;
L775: ( min D38 ) in D38 by XXREAL_2:def 7;
consider C160 being (Path of C157) such that L776: ( len C160 ) = ( min D38 ) and L777: C160 is_Walk_from ( C158 .first() ) , ( C158 .last() ) by L775;
L778: ( C160 .first() ) = ( C158 .first() ) by L777 , GLIB_001:def 23;
take C160;
thus L779: C160 is_Walk_from ( C158 .first() ) , ( C158 .last() ) by L777;
let C161 being (Walk of C157);
assume that
L780: C161 is_Walk_from ( C160 .first() ) , ( C160 .last() );
L781: ( C160 .last() ) = ( C161 .last() ) by L780 , GLIB_001:def 23;
set D39 = the  Path-like (Subwalk of C161);
L782: ( D39 .first() ) = ( C161 .first() ) by GLIB_001:161;
L783: ( D39 .last() ) = ( C161 .last() ) by GLIB_001:161;
L784: ( C160 .last() ) = ( C158 .last() ) by L777 , GLIB_001:def 23;
L785: ( C160 .first() ) = ( C161 .first() ) by L780 , GLIB_001:def 23;
L786: D39 is_Walk_from ( C158 .first() ) , ( C158 .last() ) by L785 , L781 , L778 , L784 , L782 , L783 , GLIB_001:def 23;
L787: ( len D39 ) in D38 by L786;
L788: ( len C160 ) <= ( len D39 ) by L787 , L776 , XXREAL_2:def 7;
L789: ( len D39 ) <= ( len C161 ) by GLIB_001:162;
thus L790: thesis by L789 , L788 , XXREAL_0:2;
end;
theorem
L791: (for B139 being _Graph holds (for B140 being (Walk of B139) holds (B140 is  minlength implies (for B141 , B142 being  odd Nat holds ((( B141 + 2 ) < B142 & B142 <= ( len B140 )) implies (not (ex B143 being set st B143 Joins ( B140 . B141 ) , ( B140 . B142 ) , B139)))))))
proof
let C162 being _Graph;
let C163 being (Walk of C162);
assume that
L792: C163 is  minlength;
let C164 , C165 being  odd Nat;
assume that
L793: ( C164 + 2 ) < C165
and
L794: C165 <= ( len C163 );
L795: ( ( ( len C163 ) - C165 ) + ( C164 + 2 ) ) < ( ( ( len C163 ) - C165 ) + C165 ) by L793 , XREAL_1:8;
L796: ( C164 + ( 0 ) ) <= ( C164 + 2 ) by XREAL_1:7;
L797: C164 <= C165 by L796 , L793 , XXREAL_0:2;
L798: C164 <= ( len C163 ) by L797 , L794 , XXREAL_0:2;
set D40 = ( C163 .cut (C165 , ( len C163 )) );
L799: C165 in ( NAT ) by ORDINAL1:def 12;
L800: ( D40 .last() ) = ( C163 .last() ) by L799 , L794 , GLIB_001:37;
set D41 = ( C163 .cut (1 , C164) );
let C166 being set;
assume that
L801: C166 Joins ( C163 . C164 ) , ( C163 . C165 ) , C162;
set D42 = ( D41 .addEdge C166 );
set D43 = ( D42 .append D40 );
L802: ( ( 2 * ( 0 ) ) + 1 ) <= C164 by ABIAN:12;
L803: C164 in ( NAT ) by ORDINAL1:def 12;
L804: ( ( len D41 ) + 1 ) = ( C164 + 1 ) by L803 , L802 , L798 , GLIB_001:36;
L805: ( D41 .last() ) = ( C163 . C164 ) by L803 , L802 , L798 , GLIB_001:37;
L806: ( D42 .last() ) = ( C163 . C165 ) by L805 , L801 , GLIB_001:63;
L807: ( D41 .first() ) = ( C163 .first() ) by L803 , L802 , L798 , GLIB_001:37;
L808: ( D42 .first() ) = ( C163 .first() ) by L807 , L801 , L805 , GLIB_001:63;
L809: ( D40 .first() ) = ( C163 . C165 ) by L794 , L799 , GLIB_001:37;
L810: D43 is_Walk_from ( C163 .first() ) , ( C163 .last() ) by L809 , L808 , L806 , L800 , GLIB_001:30;
L811: ( D40 .first() ) = ( C163 . C165 ) by L794 , L799 , GLIB_001:37;
L812: ( ( len D43 ) + 1 ) = ( ( len D42 ) + ( len D40 ) ) by L811 , L806 , GLIB_001:28;
L813: ( D41 .last() ) = ( C163 . C164 ) by L803 , L802 , L798 , GLIB_001:37;
L814: ( len D42 ) = ( C164 + 2 ) by L813 , L801 , L804 , GLIB_001:64;
L815: ( ( len D40 ) + C165 ) = ( ( len C163 ) + 1 ) by L794 , L799 , GLIB_001:36;
thus L816: contradiction by L815 , L792 , L814 , L810 , L812 , L795 , L652;
end;
theorem
L817: (for B144 being _Graph holds (for B145 being non  empty (Subset of ( the_Vertices_of B144 )) holds (for B146 being (inducedSubgraph of B144 , B145) holds (for B147 being (Walk of B146) holds (B147 is  minlength implies (for B148 , B149 being  odd Nat holds ((( B148 + 2 ) < B149 & B149 <= ( len B147 )) implies (not (ex B150 being set st B150 Joins ( B147 . B148 ) , ( B147 . B149 ) , B144)))))))))
proof
let C167 being _Graph;
let C168 being non  empty (Subset of ( the_Vertices_of C167 ));
let C169 being (inducedSubgraph of C167 , C168);
let C170 being (Walk of C169);
L818: C168 = ( the_Vertices_of C169 ) by GLIB_000:def 37;
assume L819: C170 is  minlength;
L820:
now
let C171 , C172 being  odd Nat;
assume that
L821: ( C171 + 2 ) < C172
and
L822: C172 <= ( len C170 );
L823: ( C171 + ( 0 ) ) <= ( C171 + 2 ) by XREAL_1:7;
L824: C171 <= C172 by L823 , L821 , XXREAL_0:2;
L825: C172 in ( NAT ) by ORDINAL1:def 12;
L826: ( C170 . C172 ) in ( the_Vertices_of C169 ) by L825 , L822 , GLIB_001:7;
L827: C171 in ( NAT ) by ORDINAL1:def 12;
L828: ( C170 . C171 ) in ( the_Vertices_of C169 ) by L827 , L822 , L824 , GLIB_001:7 , XXREAL_0:2;
let C173 being set;
assume L829: C173 Joins ( C170 . C171 ) , ( C170 . C172 ) , C167;
thus L830: contradiction by L829 , L819 , L818 , L821 , L822 , L828 , L826 , L218 , L791;
end;
thus L831: thesis by L820;
end;
theorem
L832: (for B151 being _Graph holds (for B152 being (Walk of B151) holds (B152 is  minlength implies (for B153 , B154 being  odd Nat holds ((B153 <= B154 & B154 <= ( len B152 )) implies ( B152 .cut (B153 , B154) ) is  minlength)))))
proof
let C174 being _Graph;
let C175 being (Walk of C174);
assume that
L833: C175 is  minlength;
let C176 , C177 being  odd Nat;
assume that
L834: C176 <= C177
and
L835: C177 <= ( len C175 );
set D44 = ( C175 .cut (C176 , C177) );
assume L836: (not D44 is  minlength);
consider C178 being (Walk of C174) such that L837: C178 is_Walk_from ( D44 .first() ) , ( D44 .last() ) and L838: ( len C178 ) < ( len D44 ) by L836 , L652;
set D45 = ( C175 .cut (1 , C176) );
L839: ( ( 2 * ( 0 ) ) + 1 ) <= C176 by ABIAN:12;
set D46 = ( C175 .cut (C177 , ( len C175 )) );
L840: C177 in ( NAT ) by ORDINAL1:def 12;
L841: ( D46 .first() ) = ( C175 . C177 ) by L840 , L835 , GLIB_001:37;
set D47 = ( D45 .append C178 );
L842: C176 in ( NAT ) by ORDINAL1:def 12;
L843: C176 <= ( len C175 ) by L834 , L835 , XXREAL_0:2;
L844: ( D45 .last() ) = ( C175 . C176 ) by L843 , L839 , L842 , GLIB_001:37;
L845: ( D44 .first() ) = ( C175 . C176 ) by L834 , L835 , L842 , L840 , GLIB_001:37;
L846: ( C178 .first() ) = ( C175 . C176 ) by L845 , L837 , GLIB_001:def 23;
L847: ( ( len D47 ) + 1 ) = ( ( len D45 ) + ( len C178 ) ) by L846 , L844 , GLIB_001:28;
L848: ( ( len D47 ) + 1 ) < ( ( len D45 ) + ( len D44 ) ) by L847 , L838 , XREAL_1:8;
set D48 = ( D47 .append D46 );
L849: ( D44 .last() ) = ( C175 . C177 ) by L834 , L835 , L842 , L840 , GLIB_001:37;
L850: ( C178 .last() ) = ( C175 . C177 ) by L849 , L837 , GLIB_001:def 23;
L851: ( D47 .last() ) = ( C175 . C177 ) by L850 , L844 , L846 , GLIB_001:30;
L852: ( ( len D48 ) + 1 ) = ( ( len D47 ) + ( len D46 ) ) by L851 , L841 , GLIB_001:28;
L853: ( ( len D45 ) + 1 ) = ( C176 + 1 ) by L839 , L843 , L842 , GLIB_001:36;
L854: ( ( len D44 ) + C176 ) = ( C177 + 1 ) by L834 , L835 , L842 , L840 , GLIB_001:36;
L855: ( ( ( len D47 ) + 1 ) - 1 ) < ( ( C177 + 1 ) - 1 ) by L854 , L853 , L848 , XREAL_1:14;
L856: ( ( len D48 ) + 1 ) < ( ( len D46 ) + C177 ) by L855 , L852 , XREAL_1:8;
L857: ( ( len D46 ) + C177 ) = ( ( len C175 ) + 1 ) by L835 , L840 , GLIB_001:36;
L858: ( ( ( len D48 ) + 1 ) - 1 ) < ( ( ( len C175 ) + 1 ) - 1 ) by L857 , L856 , XREAL_1:14;
L859: ( D46 .last() ) = ( C175 . ( len C175 ) ) by L835 , L840 , GLIB_001:37;
L860: ( D48 .last() ) = ( C175 .last() ) by L859 , L841 , L851 , GLIB_001:30;
L861: ( D45 .first() ) = ( C175 . 1 ) by L839 , L843 , L842 , GLIB_001:37;
L862: ( D47 .first() ) = ( C175 . 1 ) by L861 , L844 , L846 , GLIB_001:30;
L863: ( D48 .first() ) = ( C175 .first() ) by L862 , L841 , L851 , GLIB_001:30;
L864: D48 is_Walk_from ( C175 .first() ) , ( C175 .last() ) by L863 , L860 , GLIB_001:def 23;
thus L865: contradiction by L864 , L833 , L858 , L652;
end;
theorem
L866: (for B155 being _Graph holds (B155 is  connected implies (for B156 , B157 being non  empty (Subset of ( the_Vertices_of B155 )) holds (B156 misses B157 implies (ex B158 being (Path of B155) st (B158 is  minlength & B158 is non  trivial & ( B158 .first() ) in B156 & ( B158 .last() ) in B157 & (for B159 being  odd Nat holds ((1 < B159 & B159 < ( len B158 )) implies ((not ( B158 . B159 ) in B156) & (not ( B158 . B159 ) in B157))))))))))
proof
let C179 being _Graph;
assume that
L867: C179 is  connected;
let C180 , C181 being non  empty (Subset of ( the_Vertices_of C179 ));
assume that
L868: C180 misses C181;
set D49 = { ( len B160 ) where B160 is (Path of C179) : (( B160 .first() ) in C180 & ( B160 .last() ) in C181) };
L869: D49 c= ( NAT )
proof
let C182 being set;
assume L870: C182 in D49;
L871: (ex B161 being (Path of C179) st (C182 = ( len B161 ) & ( B161 .first() ) in C180 & ( B161 .last() ) in C181)) by L870;
thus L872: thesis by L871;
end;
consider C183 being set such that L873: C183 in C181 by XBOOLE_0:def 1;
reconsider D50 = C183 as (Vertex of C179) by L873;
consider C184 being set such that L874: C184 in C180 by XBOOLE_0:def 1;
reconsider D51 = C184 as (Vertex of C179) by L874;
consider C185 being (Walk of C179) such that L875: C185 is_Walk_from D51 , D50 by L867 , GLIB_002:def 1;
consider C186 being (Path of C179) such that L876: C186 is_Walk_from ( C185 .first() ) , ( C185 .last() ) and L877: C186 is  minlength by L766;
L878: ( C185 .last() ) = D50 by L875 , GLIB_001:def 23;
L879: ( C186 .last() ) in C181 by L878 , L873 , L876 , GLIB_001:def 23;
L880: ( C185 .first() ) = D51 by L875 , GLIB_001:def 23;
L881: ( C186 .first() ) in C180 by L880 , L874 , L876 , GLIB_001:def 23;
L882: ( len C186 ) in D49 by L881 , L879;
reconsider D52 = D49 as non  empty (Subset of ( NAT )) by L882 , L869;
L883: ( min D52 ) in D52 by XXREAL_2:def 7;
consider C187 being (Path of C179) such that L884: ( len C187 ) = ( min D52 ) and L885: ( C187 .first() ) in C180 and L886: ( C187 .last() ) in C181 by L883;
L887:
now
let C188 being (Path of C179);
assume that
L888: C188 is_Walk_from ( C187 .first() ) , ( C187 .last() );
L889: ( C188 .last() ) in C181 by L886 , L888 , GLIB_001:def 23;
L890: ( C188 .first() ) in C180 by L885 , L888 , GLIB_001:def 23;
L891: ( len C188 ) in D52 by L890 , L889;
thus L892: ( len C188 ) >= ( len C187 ) by L891 , L884 , XXREAL_2:def 7;
end;
L893: C187 is  minlength by L887 , L753;
L894:
now
let C189 being  odd Nat;
assume that
L895: 1 < C189
and
L896: C189 < ( len C187 );
reconsider D53 = C189 as (Element of ( NAT )) by ORDINAL1:def 12;
assume L897: (( C187 . C189 ) in C180 or ( C187 . C189 ) in C181);
per cases  by L897;
suppose L898: ( C187 . C189 ) in C180;

reconsider D54 = ( C187 .cut (D53 , ( len C187 )) ) as (Path of C179);
L899: ( D54 .last() ) in C181 by L886 , L896 , GLIB_001:37;
L900: ( ( len D54 ) + D53 ) = ( ( len C187 ) + 1 ) by L896 , GLIB_001:36;
L901: ( ( len D54 ) + ( 0 ) ) < ( ( ( ( len C187 ) + 1 ) + ( - C189 ) ) + ( C189 + ( - 1 ) ) ) by L900 , L895 , XREAL_1:8;
L902: ( D54 .first() ) in C180 by L896 , L898 , GLIB_001:37;
L903: ( len D54 ) in D52 by L902 , L899;
thus L904: contradiction by L903 , L884 , L901 , XXREAL_2:def 7;
end;
suppose L905: ( C187 . C189 ) in C181;

reconsider D55 = ( C187 .cut (1 , D53) ) as (Path of C179);
L906: ( ( 2 * ( 0 ) ) + 1 ) <= C189 by L895;
L907: ( D55 .last() ) = ( C187 . D53 ) by L906 , L896 , GLIB_001:37;
L908: ( ( 2 * ( 0 ) ) + 1 ) <= C189 by L895;
L909: ( ( len D55 ) + 1 ) = ( D53 + 1 ) by L908 , L896 , GLIB_001:36;
L910: ( D55 .first() ) = ( C187 . 1 ) by L896 , L906 , GLIB_001:37;
L911: ( len D55 ) in D52 by L910 , L885 , L905 , L907;
thus L912: contradiction by L911 , L884 , L896 , L909 , XXREAL_2:def 7;
end;
end;
L914:
now
assume L915: ( C187 .first() ) = ( C187 .last() );
L916: ( C187 .first() ) in ( C180 /\ C181 ) by L915 , L885 , L886 , XBOOLE_0:def 4;
thus L917: contradiction by L916 , L868 , XBOOLE_0:def 7;
end;
L918: C187 is non  trivial by L914 , GLIB_001:127;
thus L919: thesis by L918 , L885 , L886 , L893 , L894;
end;
begin
definition
let C190 being _Graph;
let C191 , C192 being (Vertex of C190);
pred C191 , C192 are_adjacent 
means
:L920: (ex B162 being set st B162 Joins C191 , C192 , C190)
;symmetry
 by GLIB_000:14;
end;
theorem
L922: (for B163 , B164 being _Graph holds (B163 == B164 implies (for B165 , B166 being (Vertex of B163) holds (B165 , B166 are_adjacent  implies (for B167 , B168 being (Vertex of B164) holds ((B165 = B167 & B166 = B168) implies B167 , B168 are_adjacent ))))))
proof
let C193 , C194 being _Graph;
assume that
L923: C193 == C194;
let C195 , C196 being (Vertex of C193);
assume L924: C195 , C196 are_adjacent ;
consider C197 being set such that L925: C197 Joins C195 , C196 , C193 by L924 , L920;
let C198 , C199 being (Vertex of C194);
assume that
L926: C195 = C198
and
L927: C196 = C199;
L928: C197 Joins C198 , C199 , C194 by L923 , L926 , L927 , L925 , GLIB_000:88;
thus L929: thesis by L928 , L920;
end;
theorem
L930: (for B169 being _Graph holds (for B170 being non  empty (Subset of ( the_Vertices_of B169 )) holds (for B171 being (inducedSubgraph of B169 , B170) holds (for B172 , B173 being (Vertex of B169) holds (for B174 , B175 being (Vertex of B171) holds ((B172 = B174 & B173 = B175) implies (B172 , B173 are_adjacent  iff B174 , B175 are_adjacent )))))))
proof
let C200 being _Graph;
let C201 being non  empty (Subset of ( the_Vertices_of C200 ));
let C202 being (inducedSubgraph of C200 , C201);
let C203 , C204 being (Vertex of C200);
let C205 , C206 being (Vertex of C202);
assume that
L931: C203 = C205
and
L932: C204 = C206;
L933: C201 = ( the_Vertices_of C202 ) by GLIB_000:def 37;
thus L934:now
assume L935: C203 , C204 are_adjacent ;
consider C207 being set such that L936: C207 Joins C203 , C204 , C200 by L935 , L920;
L937: C207 Joins C205 , C206 , C202 by L931 , L932 , L933 , L936 , L218;
thus L938: C205 , C206 are_adjacent  by L937 , L920;
end;
assume L939: C205 , C206 are_adjacent ;
consider C208 being set such that L940: C208 Joins C205 , C206 , C202 by L939 , L920;
L941: C208 Joins C203 , C204 , C200 by L931 , L932 , L940 , GLIB_000:72;
thus L942: thesis by L941 , L920;
end;
theorem
L943: (for B176 being _Graph holds (for B177 being (Walk of B176) holds ((( B177 .first() ) <> ( B177 .last() ) & (not ( B177 .first() ) , ( B177 .last() ) are_adjacent )) implies ( B177 .length() ) >= 2)))
proof
let C209 being _Graph;
let C210 being (Walk of C209);
assume that
L944: ( C210 .first() ) <> ( C210 .last() )
and
L945: (not ( C210 .first() ) , ( C210 .last() ) are_adjacent );
set D56 = ( C210 .length() );
assume L946: D56 < 2;
L947: D56 < ( 1 + 1 ) by L946;
L948: D56 <= 1 by L947 , NAT_1:13;
per cases  by L948 , NAT_1:25;
suppose L949: D56 = ( 0 );

L950: C210 is  trivial by L949 , GLIB_001:def 26;
thus L951: contradiction by L950 , L944 , GLIB_001:127;
end;
suppose L952: D56 = 1;

L953: ( len C210 ) = ( ( 2 * 1 ) + 1 ) by L952 , GLIB_001:112
.= 3;
L954: 1 = ( ( 2 * ( 0 ) ) + 1 );
L955: ( C210 . ( 1 + 1 ) ) Joins ( C210 . 1 ) , ( C210 . ( 1 + 2 ) ) , C209 by L954 , L953 , GLIB_001:def 3;
thus L956: contradiction by L955 , L945 , L953 , L920;
end;
end;
theorem
L958: (for B178 being _Graph holds (for B179 , B180 , B181 being (Vertex of B178) holds ((B179 <> B180 & B179 <> B181 & B180 <> B181 & B179 , B180 are_adjacent  & B180 , B181 are_adjacent ) implies (ex B182 being (Path of B178) st (ex B183 , B184 being set st (B182 is  open & ( len B182 ) = 5 & ( B182 .length() ) = 2 & B183 Joins B179 , B180 , B178 & B184 Joins B180 , B181 , B178 & ( B182 .edges() ) = { B183 , B184 } & ( B182 .vertices() ) = { B179 , B180 , B181 } & ( B182 . 1 ) = B179 & ( B182 . 3 ) = B180 & ( B182 . 5 ) = B181))))))
proof
let C211 being _Graph;
let C212 , C213 , C214 being (Vertex of C211);
assume that
L959: C212 <> C213
and
L960: C212 <> C214
and
L961: C213 <> C214
and
L962: C212 , C213 are_adjacent 
and
L963: C213 , C214 are_adjacent ;
consider C215 being set such that L964: C215 Joins C212 , C213 , C211 by L962 , L920;
set D57 = ( C211 .walkOf (C212 , C215 , C213) );
L965: ( D57 .vertices() ) = { C212 , C213 } by L964 , GLIB_001:91;
L966: (not C214 in ( D57 .vertices() )) by L965 , L960 , L961 , TARSKI:def 2;
consider C216 being set such that L967: C216 Joins C213 , C214 , C211 by L963 , L920;
set D58 = ( D57 .addEdge C216 );
L968: ( D57 .last() ) = C213 by L964 , GLIB_001:15;
L969: ( D58 .last() ) = C214 by L968 , L967 , GLIB_001:63;
L970: ( D57 .first() ) = C212 by L964 , GLIB_001:15;
L971: ( D58 .first() ) = C212 by L970 , L967 , L968 , GLIB_001:63;
L972: D57 is  open by L959 , L970 , L968 , GLIB_001:def 24;
reconsider D59 = D58 as (Path of C211) by L972 , L967 , L968 , L966 , GLIB_001:151;
take D59;
take C215;
take C216;
thus L973: D59 is  open by L960 , L971 , L969 , GLIB_001:def 24;
L974: ( len D57 ) = 3 by L964 , GLIB_001:14;
L975: ( len D59 ) = ( 3 + 2 ) by L974 , L967 , L968 , GLIB_001:64;
thus L976: ( len D59 ) = 5 by L975;
L977: 5 = ( ( 2 * ( D59 .length() ) ) + 1 ) by L975 , GLIB_001:112;
thus L978: ( D59 .length() ) = 2 by L977;
thus L979: C215 Joins C212 , C213 , C211 by L964;
thus L980: C216 Joins C213 , C214 , C211 by L967;
L981: ( D57 .edges() ) = { C215 } by L964 , GLIB_001:108;
L982: ( D59 .edges() ) = ( { C215 } \/ { C216 } ) by L981 , L967 , L968 , GLIB_001:111;
thus L983: ( D59 .edges() ) = { C215 , C216 } by L982 , ENUMSET1:1;
L984: ( D59 .vertices() ) = ( { C212 , C213 } \/ { C214 } ) by L967 , L968 , L965 , GLIB_001:95;
thus L985: ( D59 .vertices() ) = { C212 , C213 , C214 } by L984 , ENUMSET1:3;
thus L986: ( D59 . 1 ) = C212 by L971;
L987: 3 in ( dom D57 ) by L974 , FINSEQ_3:25;
thus L988: ( D59 . 3 ) = ( D57 . 3 ) by L987 , L967 , L968 , GLIB_001:65
.= C213 by L964 , L968 , GLIB_001:14;
thus L989: thesis by L969 , L975;
end;
theorem
L990: (for B185 being _Graph holds (for B186 , B187 , B188 , B189 being (Vertex of B185) holds ((B186 <> B187 & B186 <> B188 & B187 <> B188 & B187 <> B189 & B188 <> B189 & B186 , B187 are_adjacent  & B187 , B188 are_adjacent  & B188 , B189 are_adjacent ) implies (ex B190 being (Path of B185) st (( len B190 ) = 7 & ( B190 .length() ) = 3 & ( B190 .vertices() ) = { B186 , B187 , B188 , B189 } & ( B190 . 1 ) = B186 & ( B190 . 3 ) = B187 & ( B190 . 5 ) = B188 & ( B190 . 7 ) = B189)))))
proof
let C217 being _Graph;
let C218 , C219 , C220 , C221 being (Vertex of C217);
assume that
L991: C218 <> C219
and
L992: C218 <> C220
and
L993: C219 <> C220
and
L994: C219 <> C221
and
L995: C220 <> C221
and
L996: C218 , C219 are_adjacent 
and
L997: C219 , C220 are_adjacent 
and
L998: C220 , C221 are_adjacent ;
consider C222 being (Path of C217), C223 , C224 being set such that L999: C222 is  open and L1000: ( len C222 ) = 5 and L1001: ( C222 .length() ) = 2 and L1002: C223 Joins C218 , C219 , C217 and L1003: C224 Joins C219 , C220 , C217 and L1004: ( C222 .edges() ) = { C223 , C224 } and L1005: ( C222 .vertices() ) = { C218 , C219 , C220 } and L1006: ( C222 . 1 ) = C218 and L1007: ( C222 . 3 ) = C219 and L1008: ( C222 . 5 ) = C220 by L991 , L992 , L993 , L996 , L997 , L958;
consider C225 being set such that L1009: C225 Joins C220 , C221 , C217 by L998 , L920;
L1010: (for B191 being  odd (Element of ( NAT )) holds ((1 < B191 & B191 <= ( len C222 )) implies ( C222 . B191 ) <> C221))
proof
let C226 being  odd (Element of ( NAT ));
assume that
L1011: 1 < C226
and
L1012: C226 <= ( len C222 );
per cases  by L1000 , L1011 , L1012 , L54 , XXREAL_0:2;
suppose L1013: C226 = 3;

thus L1014: thesis by L1013 , L994 , L1007;
end;
suppose L1015: C226 = 5;

thus L1016: thesis by L1015 , L995 , L1008;
end;
end;
L1018: C224 <> C225 by L993 , L994 , L1009 , L1003 , GLIB_000:15;
set D60 = ( C222 .addEdge C225 );
L1019: C223 <> C225 by L992 , L993 , L1009 , L1002 , GLIB_000:15;
L1020: (not C225 in ( C222 .edges() )) by L1019 , L1004 , L1018 , TARSKI:def 2;
reconsider D61 = D60 as (Path of C217) by L1020 , L1009 , L999 , L1000 , L1008 , L1010 , GLIB_001:150;
take D61;
L1021: ( len D61 ) = ( 5 + 2 ) by L1009 , L1000 , L1008 , GLIB_001:64;
thus L1022: ( len D61 ) = 7 by L1021;
L1023: 7 = ( ( 2 * ( D61 .length() ) ) + 1 ) by L1021 , GLIB_001:112;
thus L1024: ( D61 .length() ) = 3 by L1023;
L1025: ( D61 .vertices() ) = ( { C218 , C219 , C220 } \/ { C221 } ) by L1009 , L1000 , L1005 , L1008 , GLIB_001:95;
thus L1026: ( D61 .vertices() ) = { C218 , C219 , C220 , C221 } by L1025 , ENUMSET1:6;
L1027: 1 in ( dom C222 ) by L1000 , FINSEQ_3:25;
thus L1028: ( D61 . 1 ) = C218 by L1027 , L1009 , L1000 , L1006 , L1008 , GLIB_001:65;
L1029: 3 in ( dom C222 ) by L1000 , FINSEQ_3:25;
thus L1030: ( D61 . 3 ) = C219 by L1029 , L1009 , L1000 , L1007 , L1008 , GLIB_001:65;
L1031: 5 in ( dom C222 ) by L1000 , FINSEQ_3:25;
thus L1032: ( D61 . 5 ) = C220 by L1031 , L1009 , L1000 , L1008 , GLIB_001:65;
L1033: ( D61 .last() ) = C221 by L1009 , L1000 , L1008 , GLIB_001:63;
thus L1034: thesis by L1033 , L1021;
end;
definition
let C227 being _Graph;
let C228 being set;
func C227 .AdjacentSet C228 -> (Subset of ( the_Vertices_of C227 )) equals 
{ B192 where B192 is (Vertex of C227) : ((not B192 in C228) & (ex B193 being (Vertex of C227) st (B193 in C228 & B192 , B193 are_adjacent ))) };
coherence
proof
set D62 = { B194 where B194 is (Vertex of C227) : ((not B194 in C228) & (ex B195 being (Vertex of C227) st (B195 in C228 & B194 , B195 are_adjacent ))) };
L1035:
now
let C229 being set;
assume L1036: C229 in D62;
L1037: (ex B196 being (Vertex of C227) st (B196 = C229 & (not B196 in C228) & (ex B197 being (Vertex of C227) st (B197 in C228 & B196 , B197 are_adjacent )))) by L1036;
thus L1038: C229 in ( the_Vertices_of C227 ) by L1037;
end;
thus L1039: thesis by L1035 , TARSKI:def 3;
end;
end;
theorem
L1041: (for B198 being _Graph holds (for B199 , B200 being set holds (B200 in ( B198 .AdjacentSet B199 ) implies (not B200 in B199))))
proof
let C230 being _Graph;
let C231 , C232 being set;
assume L1042: C232 in ( C230 .AdjacentSet C231 );
L1043: (ex B201 being (Vertex of C230) st (B201 = C232 & (not B201 in C231) & (ex B202 being (Vertex of C230) st (B202 in C231 & B201 , B202 are_adjacent )))) by L1042;
thus L1044: thesis by L1043;
end;
theorem
L1045: (for B203 being _Graph holds (for B204 being set holds (for B205 being (Vertex of B203) holds (B205 in ( B203 .AdjacentSet B204 ) iff ((not B205 in B204) & (ex B206 being (Vertex of B203) st (B206 in B204 & B205 , B206 are_adjacent )))))))
proof
let C233 being _Graph;
let C234 being set;
let C235 being (Vertex of C233);
thus L1046:now
assume L1047: C235 in ( C233 .AdjacentSet C234 );
L1048: (ex B207 being (Vertex of C233) st (C235 = B207 & (not B207 in C234) & (ex B208 being (Vertex of C233) st (B208 in C234 & B207 , B208 are_adjacent )))) by L1047;
thus L1049: ((not C235 in C234) & (ex B209 being (Vertex of C233) st (B209 in C234 & C235 , B209 are_adjacent ))) by L1048;
end;
assume that
L1050: (not C235 in C234)
and
L1051: (ex B210 being (Vertex of C233) st (B210 in C234 & C235 , B210 are_adjacent ));
thus L1052: thesis by L1050 , L1051;
end;
theorem
L1053: (for B211 , B212 being _Graph holds (B211 == B212 implies (for B213 being set holds ( B211 .AdjacentSet B213 ) = ( B212 .AdjacentSet B213 ))))
proof
let C236 , C237 being _Graph;
assume that
L1054: C236 == C237;
let C238 being set;
L1055:
now
let C239 being set;
assume that
L1056: C239 in ( C237 .AdjacentSet C238 );
reconsider D63 = C239 as (Vertex of C237) by L1056;
L1057: (not D63 in C238) by L1056 , L1045;
consider C240 being (Vertex of C237) such that L1058: C240 in C238 and L1059: D63 , C240 are_adjacent  by L1056 , L1045;
reconsider D64 = D63 , D65 = C240 as (Vertex of C236) by L1054 , GLIB_000:def 34;
L1060: D64 , D65 are_adjacent  by L1054 , L1059 , L922;
thus L1061: C239 in ( C236 .AdjacentSet C238 ) by L1060 , L1057 , L1058;
end;
L1062:
now
let C241 being set;
assume that
L1063: C241 in ( C236 .AdjacentSet C238 );
reconsider D66 = C241 as (Vertex of C236) by L1063;
L1064: (not D66 in C238) by L1063 , L1045;
consider C242 being (Vertex of C236) such that L1065: C242 in C238 and L1066: D66 , C242 are_adjacent  by L1063 , L1045;
reconsider D67 = D66 , D68 = C242 as (Vertex of C237) by L1054 , GLIB_000:def 34;
L1067: D67 , D68 are_adjacent  by L1054 , L1066 , L922;
thus L1068: C241 in ( C237 .AdjacentSet C238 ) by L1067 , L1064 , L1065;
end;
thus L1069: thesis by L1062 , L1055 , TARSKI:1;
end;
theorem
L1070: (for B214 being _Graph holds (for B215 , B216 being (Vertex of B214) holds (B215 in ( B214 .AdjacentSet { B216 } ) iff (B215 <> B216 & B216 , B215 are_adjacent ))))
proof
let C243 being _Graph;
let C244 , C245 being (Vertex of C243);
L1071: C245 in { C245 } by TARSKI:def 1;
thus L1072:now
assume L1073: C244 in ( C243 .AdjacentSet { C245 } );
consider C246 being (Vertex of C243) such that L1074: C246 in { C245 } and L1075: C244 , C246 are_adjacent  by L1073 , L1045;
L1076: C246 = C245 by L1074 , TARSKI:def 1;
thus L1077: (C244 <> C245 & C245 , C244 are_adjacent ) by L1076 , L1073 , L1074 , L1075 , L1045;
end;
assume that
L1078: C244 <> C245
and
L1079: C245 , C244 are_adjacent ;
L1080: (not C244 in { C245 }) by L1078 , TARSKI:def 1;
thus L1081: thesis by L1080 , L1079 , L1071;
end;
theorem
L1082: (for B217 being _Graph holds (for B218 , B219 being set holds (B218 in ( B217 .AdjacentSet { B219 } ) iff B219 in ( B217 .AdjacentSet { B218 } ))))
proof
let C247 being _Graph;
let C248 , C249 being set;
thus L1083:now
assume L1084: C248 in ( C247 .AdjacentSet { C249 } );
reconsider D69 = C248 as (Vertex of C247) by L1084;
L1085:
now
consider C250 being (Vertex of C247) such that L1086: C250 in { C249 } and L1087: C250 , D69 are_adjacent  by L1084 , L1045;
assume L1088: (not C249 in ( the_Vertices_of C247 ));
L1089: C250 = C249 by L1086 , TARSKI:def 1;
thus L1090: contradiction by L1089 , L1088;
end;
reconsider D70 = C249 as (Vertex of C247) by L1085;
L1091: D69 , D70 are_adjacent  by L1084 , L1070;
L1092: D69 <> D70 by L1084 , L1070;
thus L1093: C249 in ( C247 .AdjacentSet { C248 } ) by L1092 , L1091 , L1070;
end;
assume L1094: C249 in ( C247 .AdjacentSet { C248 } );
reconsider D71 = C249 as (Vertex of C247) by L1094;
L1095:
now
consider C251 being (Vertex of C247) such that L1096: C251 in { C248 } and L1097: C251 , D71 are_adjacent  by L1094 , L1045;
assume L1098: (not C248 in ( the_Vertices_of C247 ));
L1099: C251 = C248 by L1096 , TARSKI:def 1;
thus L1100: contradiction by L1099 , L1098;
end;
reconsider D72 = C248 as (Vertex of C247) by L1095;
L1101: D72 , D71 are_adjacent  by L1094 , L1070;
L1102: D72 <> D71 by L1094 , L1070;
thus L1103: thesis by L1102 , L1101 , L1070;
end;
theorem
L1104: (for B220 being _Graph holds (for B221 being (Path of B220) holds ((B221 is  Cycle-like & ( B221 .length() ) > 3) implies (for B222 being (Vertex of B220) holds (B222 in ( B221 .vertices() ) implies (ex B223 , B224 being  odd Nat st (( B223 + 2 ) < B224 & B224 <= ( len B221 ) & (not (B223 = 1 & B224 = ( len B221 ))) & (not (B223 = 1 & B224 = ( ( len B221 ) - 2 ))) & (not (B223 = 3 & B224 = ( len B221 ))) & ( B221 . B223 ) <> ( B221 . B224 ) & ( B221 . B223 ) in ( B220 .AdjacentSet { B222 } ) & ( B221 . B224 ) in ( B220 .AdjacentSet { B222 } ))))))))
proof
let C252 being _Graph;
let C253 being (Path of C252);
assume that
L1105: C253 is  Cycle-like
and
L1106: ( C253 .length() ) > 3;
L1107: ( C253 .length() ) >= ( 3 + 1 ) by L1106 , NAT_1:13;
L1108: ( 2 * ( C253 .length() ) ) >= ( 2 * 4 ) by L1107 , XREAL_1:64;
L1109: ( ( 2 * ( C253 .length() ) ) + 1 ) >= ( 8 + 1 ) by L1108 , XREAL_1:7;
L1110: ( len C253 ) >= 9 by L1109 , GLIB_001:112;
let C254 being (Vertex of C252);
assume L1111: C254 in ( C253 .vertices() );
consider C255 being  odd (Element of ( NAT )) such that L1112: C255 <= ( len C253 ) and L1113: ( C253 . C255 ) = C254 by L1111 , GLIB_001:87;
L1114: ( ( 0 ) + 1 ) <= C255 by ABIAN:12;
per cases ;
suppose L1115: (C255 = 1 or C255 = ( len C253 ));

reconsider D73 = ( ( 2 * 1 ) + 1 ) as  odd Nat;
reconsider D74 = ( ( 2 * ( 0 ) ) + 1 ) as  odd Nat;
L1116: ( ( len C253 ) + ( 0 ) ) > ( 9 + ( - 6 ) ) by L1110 , XREAL_1:8;
reconsider D75 = ( C253 . D73 ) as (Vertex of C252) by L1116 , GLIB_001:7;
L1117:
now
per cases  by L1115;
suppose L1118: C255 = 1;

thus L1119: C254 = ( C253 . D74 ) by L1118 , L1113;
end;
suppose L1120: C255 = ( len C253 );

L1121: C254 = ( C253 .last() ) by L1120 , L1113;
L1122: C254 = ( C253 .first() ) by L1121 , L1105 , GLIB_001:def 24;
thus L1123: C254 = ( C253 . D74 ) by L1122;
end;
end;
L1125: C254 <> D75 by L1117 , L1116 , GLIB_001:def 28;
L1126: ( ( len C253 ) + ( - 2 ) ) >= ( 9 + ( - 2 ) ) by L1110 , XREAL_1:7;
L1127: ( ( len C253 ) - ( 2 * 1 ) ) >= ( 0 ) by L1126 , XXREAL_0:2;
L1128: ( ( len C253 ) - 2 ) is  odd  odd  odd  odd (Element of ( NAT )) by L1127 , INT_1:3;
reconsider D76 = ( ( len C253 ) - 2 ) as  odd Nat by L1128;
take D73;
take D76;
L1129: ( ( len C253 ) + ( - 2 ) ) >= ( 9 + ( - 2 ) ) by L1110 , XREAL_1:7;
thus L1130: ( D73 + 2 ) < D76 by L1129 , XXREAL_0:2;
L1131: ( ( len C253 ) + ( 0 ) ) > ( ( len C253 ) + ( - 2 ) ) by XREAL_1:8;
thus L1132: D76 <= ( len C253 ) by L1131;
thus L1133: ((not (D73 = 1 & D76 = ( len C253 ))) & (not (D73 = 1 & D76 = ( ( len C253 ) - 2 ))) & (not (D73 = 3 & D76 = ( len C253 ))));
thus L1134:now
assume L1135: ( C253 . D73 ) = ( C253 . D76 );
L1136: ( ( D73 + 2 ) + ( - 2 ) ) < ( D76 + ( 0 ) ) by L1129 , XXREAL_0:2;
thus L1137: contradiction by L1136 , L1131 , L1135 , GLIB_001:def 28;
end;
L1138: ( ( len C253 ) + ( 0 ) ) > ( 9 + ( - 8 ) ) by L1110 , XREAL_1:8;
L1139: ( C253 . ( D74 + 1 ) ) Joins ( C253 . D74 ) , ( C253 . D73 ) , C252 by L1138 , GLIB_001:def 3;
L1140: C254 , D75 are_adjacent  by L1139 , L1117 , L920;
thus L1141: ( C253 . D73 ) in ( C252 .AdjacentSet { C254 } ) by L1140 , L1125 , L1070;
L1142: D76 in ( NAT ) by ORDINAL1:def 12;
reconsider D77 = ( C253 . D76 ) as (Vertex of C252) by L1142 , L1131 , GLIB_001:7;
L1143:
now
per cases  by L1115;
suppose L1144: C255 = 1;

L1145: C254 = ( C253 .first() ) by L1144 , L1113;
L1146: C254 = ( C253 .last() ) by L1145 , L1105 , GLIB_001:def 24;
thus L1147: C254 = ( C253 . ( D76 + 2 ) ) by L1146;
end;
suppose L1148: C255 = ( len C253 );

thus L1149: C254 = ( C253 . ( D76 + 2 ) ) by L1148 , L1113;
end;
end;
L1151:
now
assume L1152: C254 = D77;
L1153: D76 = 1 by L1152 , L1142 , L1131 , L1143 , GLIB_001:def 28;
L1154: ( D76 + 2 ) = ( len C253 );
thus L1155: contradiction by L1154 , L1110 , L1153;
end;
L1156: ( C253 . ( D76 + 1 ) ) Joins D77 , C254 , C252 by L1142 , L1131 , L1143 , GLIB_001:def 3;
L1157: C254 , D77 are_adjacent  by L1156 , L920;
thus L1158: thesis by L1157 , L1151 , L1070;
end;
suppose L1159: (not (C255 = 1 or C255 = ( len C253 )));

L1160: ( ( 2 * ( 0 ) ) + 1 ) < C255 by L1159 , L1114 , XXREAL_0:1;
L1161: ( 1 + 2 ) <= C255 by L1160 , L22;
L1162: ( 3 + ( - 2 ) ) <= ( C255 + ( - 2 ) ) by L1161 , XREAL_1:7;
L1163: ( 0 ) <= ( C255 - ( 2 * 1 ) ) by L1162;
L1164: ( C255 - 2 ) is  odd  odd  odd  odd (Element of ( NAT )) by L1163 , INT_1:3;
reconsider D78 = ( C255 - 2 ) as  odd Nat by L1164;
L1165: ( D78 + ( 0 ) ) < ( D78 + 2 ) by XREAL_1:8;
reconsider D79 = ( C253 . D78 ) as (Vertex of C252) by L1165 , L1112 , GLIB_001:7 , XXREAL_0:2;
reconsider D80 = ( C255 + 2 ) as  odd Nat;
L1166: C255 < ( len C253 ) by L1112 , L1159 , XXREAL_0:1;
L1167: ( C255 + 2 ) <= ( ( ( len C253 ) - 2 ) + 2 ) by L1166 , L22;
reconsider D81 = ( C253 . D80 ) as (Vertex of C252) by L1167 , GLIB_001:7;
L1168:
now
L1169: ( C255 + 2 ) > ( C255 + ( 0 ) ) by XREAL_1:8;
assume L1170: D81 = C254;
thus L1171: contradiction by L1170 , L1113 , L1159 , L1167 , L1169 , GLIB_001:def 28;
end;
take D78;
take D80;
L1172: ( C255 + ( 0 ) ) < ( C255 + 2 ) by XREAL_1:8;
thus L1173: (( D78 + 2 ) < D80 & D80 <= ( len C253 )) by L1172 , L1166 , L22;
L1174:
now
assume that
L1175: D78 = 1
and
L1176: D80 = ( len C253 );
L1177: D80 = ( D78 + 4 );
thus L1178: contradiction by L1177 , L1110 , L1175 , L1176;
end;
thus L1179: (not (D78 = 1 & D80 = ( len C253 ))) by L1174;
thus L1180:now
assume that
L1181: D78 = 1
and
L1182: D80 = ( ( len C253 ) - 2 );
L1183: ( ( len C253 ) + ( - 2 ) ) >= ( 9 + ( - 3 ) ) by L1110 , XREAL_1:7;
thus L1184: contradiction by L1183 , L1181 , L1182;
end;
thus L1185:now
assume that
L1186: D78 = 3
and
L1187: D80 = ( len C253 );
L1188: D80 = ( D78 + 4 );
thus L1189: contradiction by L1188 , L1110 , L1186 , L1187;
end;
L1190: D78 in ( NAT ) by ORDINAL1:def 12;
L1191:
now
L1192: ( C255 + ( 0 ) ) > ( C255 + ( - 2 ) ) by XREAL_1:8;
assume L1193: D79 = C254;
thus L1194: contradiction by L1193 , L1112 , L1113 , L1159 , L1190 , L1192 , GLIB_001:def 28;
end;
L1195: ( C255 + 2 ) <= ( ( ( len C253 ) - 2 ) + 2 ) by L1166 , L22;
thus L1196:now
L1197: ( ( D78 + 2 ) + ( - 2 ) ) < ( D80 + ( 0 ) ) by XREAL_1:8;
assume L1198: ( C253 . D78 ) = ( C253 . D80 );
thus L1199: contradiction by L1198 , L1190 , L1195 , L1174 , L1197 , GLIB_001:def 28;
end;
L1200: D78 < ( len C253 ) by L1112 , L1165 , XXREAL_0:2;
L1201: ( C253 . ( D78 + 1 ) ) Joins ( C253 . D78 ) , ( C253 . ( D78 + 2 ) ) , C252 by L1200 , L1190 , GLIB_001:def 3;
L1202: C254 , D79 are_adjacent  by L1201 , L1113 , L920;
thus L1203: ( C253 . D78 ) in ( C252 .AdjacentSet { C254 } ) by L1202 , L1191 , L1070;
L1204: ( C253 . ( C255 + 1 ) ) Joins ( C253 . C255 ) , ( C253 . D80 ) , C252 by L1166 , GLIB_001:def 3;
L1205: C254 , D81 are_adjacent  by L1204 , L1113 , L920;
thus L1206: thesis by L1205 , L1168 , L1070;
end;
end;
theorem
L1208: (for B225 being _Graph holds (for B226 being (Path of B225) holds ((B226 is  Cycle-like & ( B226 .length() ) > 3) implies (for B227 being (Vertex of B225) holds (B227 in ( B226 .vertices() ) implies (ex B228 , B229 being  odd Nat st (( B228 + 2 ) < B229 & B229 <= ( len B226 ) & ( B226 . B228 ) <> ( B226 . B229 ) & ( B226 . B228 ) in ( B225 .AdjacentSet { B227 } ) & ( B226 . B229 ) in ( B225 .AdjacentSet { B227 } ) & (for B230 being set holds (B230 in ( B226 .edges() ) implies (not B230 Joins ( B226 . B228 ) , ( B226 . B229 ) , B225))))))))))
proof
let C256 being _Graph;
let C257 being (Path of C256);
assume that
L1209: C257 is  Cycle-like
and
L1210: ( C257 .length() ) > 3;
L1211: ( C257 .length() ) >= ( 3 + 1 ) by L1210 , NAT_1:13;
L1212: ( 2 * ( C257 .length() ) ) >= ( 2 * 4 ) by L1211 , XREAL_1:64;
L1213: ( ( 2 * ( C257 .length() ) ) + 1 ) >= ( 8 + 1 ) by L1212 , XREAL_1:7;
L1214: ( len C257 ) >= 9 by L1213 , GLIB_001:112;
let C258 being (Vertex of C256);
assume L1215: C258 in ( C257 .vertices() );
consider C259 being  odd (Element of ( NAT )) such that L1216: C259 <= ( len C257 ) and L1217: ( C257 . C259 ) = C258 by L1215 , GLIB_001:87;
L1218: ( ( 0 ) + 1 ) <= C259 by ABIAN:12;
per cases ;
suppose L1219: (C259 = 1 or C259 = ( len C257 ));

reconsider D82 = ( ( 2 * ( 0 ) ) + 1 ) as  odd Nat;
L1220:
now
per cases  by L1219;
suppose L1221: C259 = 1;

thus L1222: C258 = ( C257 . D82 ) by L1221 , L1217;
end;
suppose L1223: C259 = ( len C257 );

L1224: C258 = ( C257 .last() ) by L1223 , L1217;
L1225: C258 = ( C257 .first() ) by L1224 , L1209 , GLIB_001:def 24;
thus L1226: C258 = ( C257 . D82 ) by L1225;
end;
end;
L1228: ( ( len C257 ) + ( - 2 ) ) >= ( 9 + ( - 2 ) ) by L1214 , XREAL_1:7;
L1229: ( ( len C257 ) - ( 2 * 1 ) ) >= ( 0 ) by L1228 , XXREAL_0:2;
L1230: ( ( len C257 ) - 2 ) is  odd  odd  odd  odd (Element of ( NAT )) by L1229 , INT_1:3;
reconsider D83 = ( ( len C257 ) - 2 ) as  odd Nat by L1230;
reconsider D84 = ( ( 2 * 1 ) + 1 ) as  odd Nat;
take D84;
take D83;
L1231: ( ( len C257 ) + ( - 2 ) ) >= ( 9 + ( - 2 ) ) by L1214 , XREAL_1:7;
thus L1232: ( D84 + 2 ) < D83 by L1231 , XXREAL_0:2;
L1233: ( ( len C257 ) + ( 0 ) ) > ( ( len C257 ) + ( - 2 ) ) by XREAL_1:8;
thus L1234: D83 <= ( len C257 ) by L1233;
L1235: D84 < D83 by L1231 , XXREAL_0:2;
L1236: D84 < ( len C257 ) by L1235 , L1233 , XXREAL_0:2;
thus L1237:now
assume L1238: ( C257 . D84 ) = ( C257 . D83 );
L1239: ( ( D84 + 2 ) + ( - 2 ) ) < ( D83 + ( 0 ) ) by L1231 , XXREAL_0:2;
thus L1240: contradiction by L1239 , L1233 , L1238 , GLIB_001:def 28;
end;
L1241: ( ( len C257 ) + ( 0 ) ) > ( 9 + ( - 6 ) ) by L1214 , XREAL_1:8;
reconsider D85 = ( C257 . D84 ) as (Vertex of C256) by L1241 , GLIB_001:7;
L1242: ( ( len C257 ) + ( 0 ) ) > ( 9 + ( - 8 ) ) by L1214 , XREAL_1:8;
L1243: ( C257 . ( D82 + 1 ) ) Joins ( C257 . D82 ) , ( C257 . D84 ) , C256 by L1242 , GLIB_001:def 3;
L1244: C258 , D85 are_adjacent  by L1243 , L1220 , L920;
L1245: C258 <> D85 by L1241 , L1220 , GLIB_001:def 28;
thus L1246: ( C257 . D84 ) in ( C256 .AdjacentSet { C258 } ) by L1245 , L1244 , L1070;
L1247: D83 <> 1 by L1231;
L1248: D83 in ( NAT ) by ORDINAL1:def 12;
reconsider D86 = ( C257 . D83 ) as (Vertex of C256) by L1248 , L1233 , GLIB_001:7;
L1249:
now
per cases  by L1219;
suppose L1250: C259 = 1;

L1251: C258 = ( C257 .first() ) by L1250 , L1217;
L1252: C258 = ( C257 .last() ) by L1251 , L1209 , GLIB_001:def 24;
thus L1253: C258 = ( C257 . ( D83 + 2 ) ) by L1252;
end;
suppose L1254: C259 = ( len C257 );

thus L1255: C258 = ( C257 . ( D83 + 2 ) ) by L1254 , L1217;
end;
end;
L1257:
now
assume L1258: C258 = D86;
L1259: D83 = 1 by L1258 , L1248 , L1233 , L1249 , GLIB_001:def 28;
L1260: ( D83 + 2 ) = ( len C257 );
thus L1261: contradiction by L1260 , L1214 , L1259;
end;
L1262: ( C257 . ( D83 + 1 ) ) Joins ( C257 . D83 ) , ( C257 . ( D83 + 2 ) ) , C256 by L1248 , L1233 , GLIB_001:def 3;
L1263: C258 , D86 are_adjacent  by L1262 , L1249 , L920;
thus L1264: ( C257 . D83 ) in ( C256 .AdjacentSet { C258 } ) by L1263 , L1257 , L1070;
let C260 being set;
assume that
L1265: C260 in ( C257 .edges() )
and
L1266: C260 Joins ( C257 . D84 ) , ( C257 . D83 ) , C256;
consider C261 being  even (Element of ( NAT )) such that L1267: 1 <= C261 and L1268: C261 <= ( len C257 ) and L1269: ( C257 . C261 ) = C260 by L1265 , GLIB_001:99;
L1270: ((( ( the_Source_of C256 ) . C260 ) = ( C257 . D84 ) & ( ( the_Target_of C256 ) . C260 ) = ( C257 . D83 )) or (( ( the_Source_of C256 ) . C260 ) = ( C257 . D83 ) & ( ( the_Target_of C256 ) . C260 ) = ( C257 . D84 ))) by L1266 , GLIB_000:def 13;
L1271: C261 in ( dom C257 ) by L1267 , L1268 , FINSEQ_3:25;
consider C262 being  odd (Element of ( NAT )) such that L1272: C262 = ( C261 - 1 ) and L1273: ( C261 - 1 ) in ( dom C257 ) and L1274: ( C261 + 1 ) in ( dom C257 ) and L1275: ( C257 . C261 ) Joins ( C257 . C262 ) , ( C257 . ( C261 + 1 ) ) , C256 by L1271 , GLIB_001:9;
L1276: C262 <= ( len C257 ) by L1272 , L1273 , FINSEQ_3:25;
L1277: ( C261 + 1 ) <= ( len C257 ) by L1274 , FINSEQ_3:25;
per cases  by L1269 , L1275 , L1270 , GLIB_000:def 13;
suppose L1278: (( C257 . D84 ) = ( C257 . C262 ) & ( C257 . D83 ) = ( C257 . ( C261 + 1 ) ));

L1279: ( D84 + 2 ) = ( ( C261 - 1 ) + ( 1 + 1 ) ) by L1278 , L1272 , L1276 , L1236 , L304
.= D83 by L1233 , L1277 , L1247 , L1278 , L304;
thus L1280: contradiction by L1279 , L1231;
end;
suppose L1281: (( C257 . D84 ) = ( C257 . ( C261 + 1 ) ) & ( C257 . D83 ) = ( C257 . C262 ));

L1282: D84 = ( C261 + 1 ) by L1281 , L1277 , L1236 , L304;
thus L1283: contradiction by L1282 , L1233 , L1272 , L1276 , L1247 , L1281 , L304;
end;
end;
suppose L1285: (not (C259 = 1 or C259 = ( len C257 )));

L1286: ( ( 2 * ( 0 ) ) + 1 ) < C259 by L1285 , L1218 , XXREAL_0:1;
L1287: ( 1 + 2 ) <= C259 by L1286 , L22;
L1288: ( 3 + ( - 2 ) ) <= ( C259 + ( - 2 ) ) by L1287 , XREAL_1:7;
L1289: ( C259 - ( 2 * 1 ) ) is  odd  odd  odd  odd (Element of ( NAT )) by L1288 , INT_1:3;
reconsider D87 = ( C259 - ( 2 * 1 ) ) as  odd Nat by L1289;
L1290: ( D87 + ( 0 ) ) < ( D87 + 2 ) by XREAL_1:8;
reconsider D88 = ( C257 . D87 ) as (Vertex of C256) by L1290 , L1216 , GLIB_001:7 , XXREAL_0:2;
reconsider D89 = ( C259 + 2 ) as  odd Nat;
take D87;
take D89;
L1291: ( C259 + ( 0 ) ) < ( C259 + 2 ) by XREAL_1:8;
thus L1292: ( D87 + 2 ) < D89 by L1291;
L1293: C259 < ( len C257 ) by L1216 , L1285 , XXREAL_0:1;
thus L1294: D89 <= ( len C257 ) by L1293 , L22;
reconsider D90 = ( C257 . D89 ) as (Vertex of C256) by L1294 , GLIB_001:7;
L1295: D87 in ( NAT ) by ORDINAL1:def 12;
L1296:
now
L1297: ( C259 + ( 0 ) ) > ( C259 + ( - 2 ) ) by XREAL_1:8;
assume L1298: D88 = C258;
thus L1299: contradiction by L1298 , L1216 , L1217 , L1285 , L1295 , L1297 , GLIB_001:def 28;
end;
L1300:
now
assume that
L1301: D87 = 1
and
L1302: D89 = ( len C257 );
L1303: D89 = ( D87 + 4 );
thus L1304: contradiction by L1303 , L1214 , L1301 , L1302;
end;
thus L1305:now
L1306: ( ( D87 + 2 ) + ( - 2 ) ) < ( D89 + ( 0 ) ) by XREAL_1:8;
assume L1307: ( C257 . D87 ) = ( C257 . D89 );
thus L1308: contradiction by L1307 , L1295 , L1294 , L1300 , L1306 , GLIB_001:def 28;
end;
L1309: D87 < ( len C257 ) by L1216 , L1290 , XXREAL_0:2;
L1310: ( C257 . ( D87 + 1 ) ) Joins ( C257 . D87 ) , ( C257 . ( D87 + 2 ) ) , C256 by L1309 , L1295 , GLIB_001:def 3;
L1311: C258 , D88 are_adjacent  by L1310 , L1217 , L920;
thus L1312: ( C257 . D87 ) in ( C256 .AdjacentSet { C258 } ) by L1311 , L1296 , L1070;
L1313: ( 1 + 2 ) <= D89 by L1218 , XREAL_1:7;
L1314: D89 <> 1 by L1313;
L1315: ( C259 + 2 ) <= ( ( ( len C257 ) - 2 ) + 2 ) by L1293 , L22;
L1316:
now
L1317: ( C259 + 2 ) > ( C259 + ( 0 ) ) by XREAL_1:8;
assume L1318: D90 = C258;
thus L1319: contradiction by L1318 , L1217 , L1285 , L1315 , L1317 , GLIB_001:def 28;
end;
L1320: ( C257 . ( C259 + 1 ) ) Joins ( C257 . C259 ) , ( C257 . D89 ) , C256 by L1293 , GLIB_001:def 3;
L1321: C258 , D90 are_adjacent  by L1320 , L1217 , L920;
thus L1322: ( C257 . D89 ) in ( C256 .AdjacentSet { C258 } ) by L1321 , L1316 , L1070;
let C263 being set;
assume that
L1323: C263 in ( C257 .edges() )
and
L1324: C263 Joins ( C257 . D87 ) , ( C257 . D89 ) , C256;
consider C264 being  even (Element of ( NAT )) such that L1325: 1 <= C264 and L1326: C264 <= ( len C257 ) and L1327: ( C257 . C264 ) = C263 by L1323 , GLIB_001:99;
L1328: ((( ( the_Source_of C256 ) . C263 ) = ( C257 . D87 ) & ( ( the_Target_of C256 ) . C263 ) = ( C257 . D89 )) or (( ( the_Source_of C256 ) . C263 ) = ( C257 . D89 ) & ( ( the_Target_of C256 ) . C263 ) = ( C257 . D87 ))) by L1324 , GLIB_000:def 13;
L1329: ( 1 + 1 ) <= ( C264 + 1 ) by L1325 , XREAL_1:7;
L1330: ( C264 + 1 ) <> 1 by L1329;
L1331: ( C264 - 1 ) < ( len C257 ) by L1326 , XREAL_1:146 , XXREAL_0:2;
L1332: C264 in ( dom C257 ) by L1325 , L1326 , FINSEQ_3:25;
consider C265 being  odd (Element of ( NAT )) such that L1333: C265 = ( C264 - 1 ) and L1334: ( C264 - 1 ) in ( dom C257 ) and L1335: ( C264 + 1 ) in ( dom C257 ) and L1336: ( C257 . C264 ) Joins ( C257 . C265 ) , ( C257 . ( C264 + 1 ) ) , C256 by L1332 , GLIB_001:9;
L1337: ( C264 + 1 ) <= ( len C257 ) by L1335 , FINSEQ_3:25;
per cases  by L1327 , L1336 , L1328 , GLIB_000:def 13;
suppose L1338: (( C257 . D87 ) = ( C257 . C265 ) & ( C257 . D89 ) = ( C257 . ( C264 + 1 ) ));

L1339: ( D87 + 2 ) = ( ( C264 - 1 ) + ( 1 + 1 ) ) by L1338 , L1309 , L1333 , L1331 , L304
.= D89 by L1294 , L1337 , L1314 , L1330 , L1338 , L304;
thus L1340: contradiction by L1339;
end;
suppose L1341: (( C257 . D87 ) = ( C257 . ( C264 + 1 ) ) & ( C257 . D89 ) = ( C257 . C265 ));

per cases  by L1294 , L1309 , L1333 , L1331 , L1337 , L1341 , L304;
suppose L1342: (D87 = ( C264 + 1 ) & D89 = ( C264 - 1 ));

thus L1343: contradiction by L1342;
end;
suppose L1344: (D87 = ( C264 + 1 ) & ( C264 - 1 ) = 1 & D89 = ( len C257 ));

L1345: D89 = ( D87 + 4 );
thus L1346: contradiction by L1345 , L1214 , L1344;
end;
suppose L1347: (D87 = 1 & ( C264 + 1 ) = ( len C257 ) & D89 = ( C264 - 1 ));

L1348: ( C264 + 1 ) = 7 by L1347;
thus L1349: contradiction by L1348 , L1214 , L1347;
end;
suppose L1350: (D87 = 1 & ( C264 + 1 ) = ( len C257 ) & ( C264 - 1 ) = 1 & D89 = ( len C257 ));

thus L1351: contradiction by L1350;
end;
end;
end;
end;
theorem
L1355: (for B231 being  loopless _Graph holds (for B232 being (Vertex of B231) holds (( B231 .AdjacentSet { B232 } ) = ( {} ) iff B232 is  isolated)))
proof
let C266 being  loopless _Graph;
let C267 being (Vertex of C266);
thus L1356:now
assume L1357: ( C266 .AdjacentSet { C267 } ) = ( {} );
L1358:
now
assume L1359: ( C267 .edgesInOut() ) <> ( {} );
consider C268 being set such that L1360: C268 in ( C267 .edgesInOut() ) by L1359 , XBOOLE_0:def 1;
consider C269 being (Vertex of C266) such that L1361: C268 Joins C267 , C269 , C266 by L1360 , GLIB_000:64;
L1362:
now
L1363: C268 in ( the_Edges_of C266 ) by L1361 , GLIB_000:def 13;
assume L1364: C267 = C269;
L1365: ( ( the_Target_of C266 ) . C268 ) = C267 by L1364 , L1361 , GLIB_000:def 13;
L1366: ( ( the_Source_of C266 ) . C268 ) = C267 by L1361 , L1364 , GLIB_000:def 13;
thus L1367: contradiction by L1366 , L1363 , L1365 , GLIB_000:def 18;
end;
L1368: C269 , C267 are_adjacent  by L1361 , L920;
thus L1369: contradiction by L1368 , L1357 , L1362 , L1070;
end;
thus L1370: C267 is  isolated by L1358 , GLIB_000:def 49;
end;
assume L1371: C267 is  isolated;
L1372: ( C267 .edgesInOut() ) = ( {} ) by L1371 , GLIB_000:def 49;
L1373:
now
let C270 being set;
assume that
L1374: C270 in ( C266 .AdjacentSet { C267 } );
reconsider D91 = C270 as (Vertex of C266) by L1374;
L1375: D91 , C267 are_adjacent  by L1374 , L1070;
L1376: (ex B233 being set st B233 Joins D91 , C267 , C266) by L1375 , L920;
thus L1377: contradiction by L1376 , L1372 , GLIB_000:14 , GLIB_000:62;
end;
thus L1378: thesis by L1373 , XBOOLE_0:def 1;
end;
theorem
L1379: (for B234 being _Graph holds (for B235 being (Subgraph of B234) holds (for B236 being non  empty (Subset of ( the_Vertices_of B234 )) holds (for B237 being (Vertex of B234) holds (for B238 being (inducedSubgraph of B234 , B236) holds (for B239 being (inducedSubgraph of B234 , ( B236 \/ { B237 } )) holds ((B238 is  connected & B237 in ( B234 .AdjacentSet ( the_Vertices_of B238 ) )) implies B239 is  connected)))))))
proof
let C271 being _Graph;
let C272 being (Subgraph of C271);
let C273 being non  empty (Subset of ( the_Vertices_of C271 ));
let C274 being (Vertex of C271);
let C275 being (inducedSubgraph of C271 , C273);
let C276 being (inducedSubgraph of C271 , ( C273 \/ { C274 } ));
assume that
L1380: C275 is  connected
and
L1381: C274 in ( C271 .AdjacentSet ( the_Vertices_of C275 ) );
L1382: ( the_Vertices_of C275 ) = C273 by GLIB_000:def 37;
consider C277 being (Vertex of C271) such that L1383: C277 in C273 and L1384: C274 , C277 are_adjacent  by L1382 , L1381 , L1045;
consider C278 being set such that L1385: C278 Joins C274 , C277 , C271 by L1384 , L920;
reconsider D92 = ( C273 \/ { C274 } ) as (Subset of ( the_Vertices_of C271 ));
let C279 , C280 being (Vertex of C276);
L1386: ( the_Vertices_of C276 ) = D92 by GLIB_000:def 37;
L1387: (C279 in C273 or C279 in { C274 }) by L1386 , XBOOLE_0:def 3;
L1388: C274 in { C274 } by TARSKI:def 1;
L1389: C274 in D92 by L1388 , XBOOLE_0:def 3;
L1390: C277 in D92 by L1383 , XBOOLE_0:def 3;
L1391: C278 Joins C277 , C274 , C271 by L1385 , GLIB_000:14;
L1392: C278 Joins C277 , C274 , C276 by L1391 , L1389 , L1390 , L218;
L1393: C278 Joins C274 , C277 , C276 by L1392 , GLIB_000:14;
L1394: (C280 in C273 or C280 in { C274 }) by L1386 , XBOOLE_0:def 3;
L1395: C275 is (inducedSubgraph of C276 , C273) by L522 , XBOOLE_1:7;
per cases  by L1387 , L1394 , TARSKI:def 1;
suppose L1396: (C279 in C273 & C280 in C273);

L1397: ( the_Vertices_of C275 ) = C273 by GLIB_000:def 37;
consider C281 being (Walk of C275) such that L1398: C281 is_Walk_from C279 , C280 by L1397 , L1380 , L1396 , GLIB_002:def 1;
reconsider D93 = C281 as (Walk of C276) by L1395 , GLIB_001:167;
take D93;
thus L1399: thesis by L1398 , GLIB_001:19;
end;
suppose L1400: (C279 in C273 & C280 = C274);

consider C282 being (Walk of C275) such that L1401: C282 is_Walk_from C279 , C277 by L1400 , L1380 , L1382 , L1383 , GLIB_002:def 1;
reconsider D94 = C282 as (Walk of C276) by L1395 , GLIB_001:167;
take ( D94 .append ( C276 .walkOf (C277 , C278 , C274) ) );
L1402: ( C276 .walkOf (C277 , C278 , C274) ) is_Walk_from C277 , C274 by L1392 , GLIB_001:15;
L1403: D94 is_Walk_from C279 , C277 by L1401 , GLIB_001:19;
thus L1404: thesis by L1403 , L1400 , L1402 , GLIB_001:31;
end;
suppose L1405: (C279 = C274 & C280 in C273);

consider C283 being (Walk of C275) such that L1406: C283 is_Walk_from C277 , C280 by L1405 , L1380 , L1382 , L1383 , GLIB_002:def 1;
reconsider D95 = C283 as (Walk of C276) by L1395 , GLIB_001:167;
take ( ( C276 .walkOf (C274 , C278 , C277) ) .append D95 );
L1407: ( C276 .walkOf (C274 , C278 , C277) ) is_Walk_from C274 , C277 by L1393 , GLIB_001:15;
L1408: D95 is_Walk_from C277 , C280 by L1406 , GLIB_001:19;
thus L1409: thesis by L1408 , L1405 , L1407 , GLIB_001:31;
end;
suppose L1410: (C279 = C274 & C280 = C274);

L1411: ( C276 .walkOf C279 ) is_Walk_from C279 , C280 by L1410 , GLIB_001:13;
thus L1412: thesis by L1411;
end;
end;
theorem
L1414: (for B240 being _Graph holds (for B241 being non  empty (Subset of ( the_Vertices_of B240 )) holds (for B242 being (inducedSubgraph of B240 , B241) holds (for B243 being (Vertex of B240) holds ((B243 in B241 & ( B240 .AdjacentSet { B243 } ) c= B241) implies (for B244 being (Vertex of B242) holds (B243 = B244 implies ( B240 .AdjacentSet { B243 } ) = ( B242 .AdjacentSet { B244 } ))))))))
proof
let C284 being _Graph;
let C285 being non  empty (Subset of ( the_Vertices_of C284 ));
let C286 being (inducedSubgraph of C284 , C285);
let C287 being (Vertex of C284);
assume that
L1415: C287 in C285
and
L1416: ( C284 .AdjacentSet { C287 } ) c= C285;
let C288 being (Vertex of C286);
assume that
L1417: C287 = C288;
L1418:
now
let C289 being set;
thus L1419:now
assume L1420: C289 in ( C284 .AdjacentSet { C287 } );
reconsider D96 = C289 as (Vertex of C284) by L1420;
reconsider D97 = C289 as (Vertex of C286) by L1416 , L1420 , GLIB_000:def 37;
L1421: D96 , C287 are_adjacent  by L1420 , L1070;
consider C290 being set such that L1422: C290 Joins D96 , C287 , C284 by L1421 , L920;
L1423: C290 Joins D96 , C287 , C286 by L1415 , L1416 , L1420 , L1422 , L218;
L1424: D97 , C288 are_adjacent  by L1423 , L1417 , L920;
L1425: D97 <> C288 by L1417 , L1420 , L1070;
thus L1426: C289 in ( C286 .AdjacentSet { C288 } ) by L1425 , L1424 , L1070;
end;
assume L1427: C289 in ( C286 .AdjacentSet { C288 } );
reconsider D98 = C289 as (Vertex of C286) by L1427;
L1428: C289 in ( the_Vertices_of C286 ) by L1427;
reconsider D99 = C289 as (Vertex of C284) by L1428;
L1429: D98 , C288 are_adjacent  by L1427 , L1070;
consider C291 being set such that L1430: C291 Joins D98 , C288 , C286 by L1429 , L920;
L1431: C291 Joins D98 , C288 , C284 by L1430 , GLIB_000:72;
L1432: D99 , C287 are_adjacent  by L1431 , L1417 , L920;
L1433: D99 <> C287 by L1417 , L1427 , L1070;
thus L1434: C289 in ( C284 .AdjacentSet { C287 } ) by L1433 , L1432 , L1070;
end;
thus L1435: thesis by L1418 , TARSKI:1;
end;
definition
let C292 being _Graph;
let C293 being set;
mode AdjGraph of C292 , C293
 -> (Subgraph of C292)
means :L1436: it is (inducedSubgraph of C292 , ( C292 .AdjacentSet C293 )) if C293 is (Subset of ( the_Vertices_of C292 ));
existence
proof
set D100 = the (inducedSubgraph of C292 , ( C292 .AdjacentSet C293 ));
L1437: D100 is (Subgraph of C292);
thus L1438: thesis by L1437;
end;
consistency;
end;
theorem
L1440: (for B245 , B246 being _Graph holds (B245 == B246 implies (for B247 being (Vertex of B245) holds (for B248 being (Vertex of B246) holds (B247 = B248 implies (for B249 being (AdjGraph of B245 , { B247 }) holds (for B250 being (AdjGraph of B246 , { B248 }) holds B249 == B250)))))))
proof
let C294 , C295 being _Graph;
assume that
L1441: C294 == C295;
let C296 being (Vertex of C294);
let C297 being (Vertex of C295);
assume that
L1442: C296 = C297;
set D101 = ( C295 .AdjacentSet { C297 } );
set D102 = ( C294 .AdjacentSet { C296 } );
L1443: D102 = D101 by L1441 , L1442 , L1053;
let C298 being (AdjGraph of C294 , { C296 });
let C299 being (AdjGraph of C295 , { C297 });
L1444: C298 is (inducedSubgraph of C294 , D102) by L1436;
L1445: C299 is (inducedSubgraph of C295 , D101) by L1436;
per cases ;
suppose L1446: (not D102 is non  empty non  empty non  empty non  empty (Subset of ( the_Vertices_of C294 )));

L1447: C298 == C294 by L1446 , L1444 , GLIB_000:def 37;
L1448: C298 == C295 by L1447 , L1441 , GLIB_000:85;
L1449: C299 == C295 by L1445 , L1443 , L1446 , GLIB_000:def 37;
thus L1450: thesis by L1449 , L1448 , GLIB_000:85;
end;
suppose L1451: D102 is non  empty non  empty non  empty non  empty (Subset of ( the_Vertices_of C294 ));

L1452: ( the_Vertices_of C298 ) = D102 by L1451 , L1444 , GLIB_000:def 37;
L1453: ( the_Vertices_of C298 ) = ( the_Vertices_of C299 ) by L1452 , L1445 , L1443 , GLIB_000:def 37;
L1454: C294 is (Subgraph of C295) by L1441 , GLIB_000:87;
L1455: ( C294 .edgesBetween D102 ) c= ( C295 .edgesBetween D102 ) by L1454 , GLIB_000:76;
L1456: ( the_Edges_of C298 ) = ( C294 .edgesBetween D102 ) by L1444 , L1451 , GLIB_000:def 37;
L1457: C295 is (Subgraph of C294) by L1441 , GLIB_000:87;
L1458: ( C295 .edgesBetween D102 ) c= ( C294 .edgesBetween D102 ) by L1457 , GLIB_000:76;
L1459: C295 is (Subgraph of C294) by L1441 , GLIB_000:87;
L1460: C299 is (Subgraph of C294) by L1459 , GLIB_000:43;
L1461: ( the_Edges_of C299 ) = ( C295 .edgesBetween D101 ) by L1445 , L1443 , L1451 , GLIB_000:def 37;
L1462: ( the_Edges_of C298 ) = ( the_Edges_of C299 ) by L1461 , L1443 , L1456 , L1455 , L1458 , XBOOLE_0:def 10;
thus L1463: thesis by L1462 , L1453 , L1460 , GLIB_000:86;
end;
end;
theorem
L1465: (for B251 being _Graph holds (for B252 being non  empty (Subset of ( the_Vertices_of B251 )) holds (for B253 being (inducedSubgraph of B251 , B252) holds (for B254 being (Vertex of B251) holds ((B254 in B252 & ( B251 .AdjacentSet { B254 } ) c= B252 & ( B251 .AdjacentSet { B254 } ) <> ( {} )) implies (for B255 being (Vertex of B253) holds (B254 = B255 implies (for B256 being (AdjGraph of B251 , { B254 }) holds (for B257 being (AdjGraph of B253 , { B255 }) holds B256 == B257)))))))))
proof
let C300 being _Graph;
let C301 being non  empty (Subset of ( the_Vertices_of C300 ));
let C302 being (inducedSubgraph of C300 , C301);
let C303 being (Vertex of C300);
assume that
L1466: C303 in C301
and
L1467: ( C300 .AdjacentSet { C303 } ) c= C301
and
L1468: ( C300 .AdjacentSet { C303 } ) <> ( {} );
let C304 being (Vertex of C302);
assume L1469: C303 = C304;
L1470: ( C300 .AdjacentSet { C303 } ) = ( C302 .AdjacentSet { C304 } ) by L1469 , L1466 , L1467 , L1414;
let C305 being (AdjGraph of C300 , { C303 });
let C306 being (AdjGraph of C302 , { C304 });
L1471: C306 is (inducedSubgraph of C302 , ( C302 .AdjacentSet { C304 } )) by L1436;
L1472: C305 is (inducedSubgraph of C300 , ( C300 .AdjacentSet { C303 } )) by L1436;
L1473: ( the_Edges_of C305 ) = ( C300 .edgesBetween ( C300 .AdjacentSet { C303 } ) ) by L1472 , L1468 , GLIB_000:def 37;
L1474: ( the_Vertices_of C305 ) = ( C300 .AdjacentSet { C303 } ) by L1468 , L1472 , GLIB_000:def 37;
thus L1475: ( the_Vertices_of C305 ) = ( the_Vertices_of C306 ) by L1474 , L1470 , L1471 , GLIB_000:def 37;
L1476: ( the_Edges_of C306 ) = ( C302 .edgesBetween ( C302 .AdjacentSet { C304 } ) ) by L1468 , L1470 , L1471 , GLIB_000:def 37;
thus L1477: ( the_Edges_of C305 ) = ( the_Edges_of C306 ) by L1476 , L1467 , L1468 , L1470 , L1473 , L545;
L1478: ( the_Target_of C305 ) = ( ( the_Target_of C300 ) | ( the_Edges_of C305 ) ) by GLIB_000:45;
L1479: C306 is (inducedSubgraph of C302 , ( C300 .AdjacentSet { C303 } )) by L1470 , L1436;
L1480: C306 is (inducedSubgraph of C300 , ( C300 .AdjacentSet { C303 } )) by L1479 , L1467 , L1468 , L495;
L1481: ( the_Source_of C305 ) = ( ( the_Source_of C300 ) | ( the_Edges_of C305 ) ) by GLIB_000:45;
thus L1482: (( the_Source_of C306 ) = ( the_Source_of C305 ) & ( the_Target_of C306 ) = ( the_Target_of C305 )) by L1481 , L1477 , L1478 , L1480 , GLIB_000:45;
end;
definition
let C307 being _Graph;
attr C307 is  complete
means
:L1483: (for B258 , B259 being (Vertex of C307) holds (B258 <> B259 implies B258 , B259 are_adjacent ));
end;
theorem
L1485: (for B260 being _Graph holds (B260 is  trivial implies B260 is  complete))
proof
let C308 being _Graph;
assume L1486: C308 is  trivial;
consider C309 being (Vertex of C308) such that L1487: ( the_Vertices_of C308 ) = { C309 } by L1486 , GLIB_000:22;
let C310 , C311 being (Vertex of C308);
assume that
L1488: C310 <> C311
and
L1489: (not C310 , C311 are_adjacent );
L1490: C310 = C309 by L1487 , TARSKI:def 1;
thus L1491: contradiction by L1490 , L1487 , L1488 , TARSKI:def 1;
end;
registration
cluster  trivial ->  complete for _Graph;
coherence by L1485;
end;
registration
cluster  trivial  simple  complete for _Graph;
existence
proof
set D103 = the  trivial  simple _Graph;
take D103;
thus L1493: thesis;
end;
cluster non  trivial  finite  simple  complete for _Graph;
existence
proof
set D104 = { ( 0 ) , 1 };
set D105 = { ( 0 ) };
set D106 = ( ( 0 ) .--> ( 0 ) );
set D107 = ( ( 0 ) .--> 1 );
L1494: ( dom D107 ) = D105 by FUNCOP_1:13;
L1495:
now
let C312 being set;
assume L1496: C312 in D105;
L1497: C312 = ( 0 ) by L1496 , TARSKI:def 1;
L1498: ( D107 . C312 ) = 1 by L1497 , FUNCOP_1:72;
thus L1499: ( D107 . C312 ) in D104 by L1498 , TARSKI:def 2;
end;
L1500:
now
let C313 being set;
assume L1501: C313 in D105;
L1502: C313 = ( 0 ) by L1501 , TARSKI:def 1;
L1503: ( D106 . C313 ) = ( 0 ) by L1502 , FUNCOP_1:72;
thus L1504: ( D106 . C313 ) in D104 by L1503 , TARSKI:def 2;
end;
reconsider D108 = D107 as (Function of D105 , D104) by L1494 , L1495 , FUNCT_2:3;
L1505: ( dom D106 ) = D105 by FUNCOP_1:13;
reconsider D109 = D106 as (Function of D105 , D104) by L1505 , L1500 , FUNCT_2:3;
set D110 = ( createGraph (D104 , D105 , D109 , D108) );
take D110;
L1506: ( the_Source_of D110 ) = D109 by GLIB_000:6;
L1507: ( ( the_Source_of D110 ) . ( 0 ) ) = ( 0 ) by L1506 , FUNCOP_1:72;
L1508: ( the_Edges_of D110 ) = D105 by GLIB_000:6;
L1509:
now
let C314 , C315 , C316 , C317 being set;
assume that
L1510: C314 Joins C316 , C317 , D110
and
L1511: C315 Joins C316 , C317 , D110;
L1512: C314 in { ( 0 ) } by L1508 , L1510 , GLIB_000:def 13;
L1513: C314 = ( 0 ) by L1512 , TARSKI:def 1;
assume L1514: C314 <> C315;
L1515: C315 in { ( 0 ) } by L1508 , L1511 , GLIB_000:def 13;
thus L1516: contradiction by L1515 , L1514 , L1513 , TARSKI:def 1;
end;
L1517: D110 is  non-multi by L1509 , GLIB_000:def 20;
L1518: ( the_Vertices_of D110 ) = D104 by GLIB_000:6;
L1519:
now
assume L1520: ( card ( the_Vertices_of D110 ) ) = 1;
L1521: (ex B261 being set st ( the_Vertices_of D110 ) = { B261 }) by L1520 , CARD_2:42;
thus L1522: contradiction by L1521 , L1518 , ZFMISC_1:5;
end;
thus L1523: (D110 is non  trivial & D110 is  finite) by L1519 , GLIB_000:def 19;
L1524: ( the_Target_of D110 ) = D108 by GLIB_000:6;
L1525: ( ( the_Target_of D110 ) . ( 0 ) ) = 1 by L1524 , FUNCOP_1:72;
L1526: ( 0 ) in ( the_Edges_of D110 ) by L1508 , TARSKI:def 1;
L1527: ( 0 ) Joins ( 0 ) , 1 , D110 by L1526 , L1507 , L1525 , GLIB_000:def 13;
L1528:
now
let C318 being set;
let C319 being set;
assume that
L1529: C319 Joins C318 , C318 , D110;
reconsider D111 = C318 as (Vertex of D110) by L1529 , GLIB_000:13;
L1530: C319 in ( the_Edges_of D110 ) by L1529 , GLIB_000:def 13;
L1531: C319 Joins ( 0 ) , 1 , D110 by L1530 , L1508 , L1527 , TARSKI:def 1;
L1532: ((( 0 ) = D111 & 1 = D111) or (( 0 ) = D111 & 1 = D111)) by L1531 , L1529 , GLIB_000:15;
thus L1533: contradiction by L1532;
end;
L1534: D110 is  loopless by L1528 , GLIB_000:18;
thus L1535: D110 is  simple by L1534 , L1517;
L1536:
now
let C320 , C321 being (Vertex of D110);
assume that
L1537: C320 <> C321;
per cases  by L1518 , TARSKI:def 2;
suppose L1538: C320 = ( 0 );

L1539: ( 0 ) in ( the_Edges_of D110 ) by L1508 , TARSKI:def 1;
L1540: C321 = 1 by L1518 , L1537 , L1538 , TARSKI:def 2;
L1541: ( 0 ) Joins C320 , C321 , D110 by L1540 , L1507 , L1525 , L1538 , L1539 , GLIB_000:def 13;
thus L1542: C320 , C321 are_adjacent  by L1541 , L920;
end;
suppose L1543: C320 = 1;

L1544: ( 0 ) in ( the_Edges_of D110 ) by L1508 , TARSKI:def 1;
L1545: C321 = ( 0 ) by L1518 , L1537 , L1543 , TARSKI:def 2;
L1546: ( 0 ) Joins C321 , C320 , D110 by L1545 , L1507 , L1525 , L1543 , L1544 , GLIB_000:def 13;
thus L1547: C320 , C321 are_adjacent  by L1546 , L920;
end;
end;
thus L1549: thesis by L1536 , L1483;
end;
end;
theorem
L1551: (for B262 , B263 being _Graph holds (B262 == B263 implies (B262 is  complete implies B263 is  complete)))
proof
let C322 , C323 being _Graph;
assume that
L1552: C322 == C323;
assume L1553: C322 is  complete;
L1554:
now
let C324 , C325 being (Vertex of C323);
assume that
L1555: C324 <> C325;
reconsider D112 = C325 as (Vertex of C322) by L1552 , GLIB_000:def 34;
reconsider D113 = C324 as (Vertex of C322) by L1552 , GLIB_000:def 34;
L1556: D113 , D112 are_adjacent  by L1553 , L1555 , L1483;
thus L1557: C324 , C325 are_adjacent  by L1556 , L1552 , L922;
end;
thus L1558: thesis by L1554 , L1483;
end;
theorem
L1559: (for B264 being  complete _Graph holds (for B265 being (Subset of ( the_Vertices_of B264 )) holds (for B266 being (inducedSubgraph of B264 , B265) holds B266 is  complete)))
proof
let C326 being  complete _Graph;
let C327 being (Subset of ( the_Vertices_of C326 ));
let C328 being (inducedSubgraph of C326 , C327);
per cases ;
suppose L1560: C327 = ( {} );

L1561: C328 == C326 by L1560 , GLIB_000:def 37;
thus L1562: thesis by L1561 , L1551;
end;
suppose L1563: C327 <> ( {} );

L1564: ( the_Vertices_of C328 ) = C327 by L1563 , GLIB_000:def 37;
L1565:
now
let C329 , C330 being (Vertex of C328);
assume that
L1566: C329 <> C330;
reconsider D114 = C330 as (Vertex of C326) by L1564 , TARSKI:def 3;
reconsider D115 = C329 as (Vertex of C326) by L1564 , TARSKI:def 3;
L1567: D115 , D114 are_adjacent  by L1566 , L1483;
consider C331 being set such that L1568: C331 Joins D115 , D114 , C326 by L1567 , L920;
L1569: C331 Joins C329 , C330 , C328 by L1564 , L1568 , L218;
thus L1570: C329 , C330 are_adjacent  by L1569 , L920;
end;
thus L1571: thesis by L1565 , L1483;
end;
end;
begin
definition
let C332 being _Graph;
let C333 being (Vertex of C332);
attr C333 is  simplicial
means
:L1573: (( C332 .AdjacentSet { C333 } ) <> ( {} ) implies (for B267 being (AdjGraph of C332 , { C333 }) holds B267 is  complete));
end;
theorem
L1575: (for B268 being  complete _Graph holds (for B269 being (Vertex of B268) holds B269 is  simplicial))
proof
let C334 being  complete _Graph;
let C335 being (Vertex of C334);
L1576:
now
let C336 being (AdjGraph of C334 , { C335 });
L1577: C336 is (inducedSubgraph of C334 , ( C334 .AdjacentSet { C335 } )) by L1436;
thus L1578: C336 is  complete by L1577 , L1559;
end;
thus L1579: thesis by L1576 , L1573;
end;
theorem
L1580: (for B270 being  trivial _Graph holds (for B271 being (Vertex of B270) holds B271 is  simplicial))
proof
let C337 being  trivial _Graph;
let C338 being (Vertex of C337);
L1581:
now
assume L1582: ( C337 .AdjacentSet { C338 } ) <> ( {} );
consider C339 being set such that L1583: C339 in ( C337 .AdjacentSet { C338 } ) by L1582 , XBOOLE_0:def 1;
L1584: (ex B272 being (Vertex of C337) st (C339 = B272 & (not B272 in { C338 }) & (ex B273 being (Vertex of C337) st (B273 in { C338 } & B272 , B273 are_adjacent )))) by L1583;
consider C340 being (Vertex of C337) such that L1585: ( the_Vertices_of C337 ) = { C340 } by GLIB_000:22;
L1586: C338 = C340 by L1585 , TARSKI:def 1;
thus L1587: contradiction by L1586 , L1584 , L1585;
end;
thus L1588: thesis by L1581 , L1573;
end;
theorem
L1589: (for B274 , B275 being _Graph holds (B274 == B275 implies (for B276 being (Vertex of B274) holds (for B277 being (Vertex of B275) holds ((B276 = B277 & B276 is  simplicial) implies B277 is  simplicial)))))
proof
let C341 , C342 being _Graph;
assume that
L1590: C341 == C342;
let C343 being (Vertex of C341);
let C344 being (Vertex of C342);
assume that
L1591: C343 = C344;
assume L1592: C343 is  simplicial;
L1593:
now
per cases ;
suppose L1594: ( C341 .AdjacentSet { C343 } ) = ( {} );

L1595: ( C342 .AdjacentSet { C344 } ) = ( {} ) by L1594 , L1590 , L1591 , L1053;
thus L1596: thesis by L1595 , L1573;
end;
suppose L1597: ( C341 .AdjacentSet { C343 } ) <> ( {} );

set D116 = the (AdjGraph of C341 , { C343 });
L1598: D116 is  complete by L1592 , L1597 , L1573;
L1599: (for B278 being (AdjGraph of C342 , { C344 }) holds B278 is  complete) by L1598 , L1590 , L1591 , L1440 , L1551;
thus L1600: thesis by L1599 , L1573;
end;
end;
thus L1602: thesis by L1593;
end;
theorem
L1603: (for B279 being _Graph holds (for B280 being non  empty (Subset of ( the_Vertices_of B279 )) holds (for B281 being (inducedSubgraph of B279 , B280) holds (for B282 being (Vertex of B279) holds ((B282 in B280 & ( B279 .AdjacentSet { B282 } ) c= B280) implies (for B283 being (Vertex of B281) holds (B282 = B283 implies (B282 is  simplicial iff B283 is  simplicial))))))))
proof
let C345 being _Graph;
let C346 being non  empty (Subset of ( the_Vertices_of C345 ));
let C347 being (inducedSubgraph of C345 , C346);
let C348 being (Vertex of C345);
assume that
L1604: C348 in C346
and
L1605: ( C345 .AdjacentSet { C348 } ) c= C346;
let C349 being (Vertex of C347);
assume that
L1606: C348 = C349;
L1607: (( C345 .AdjacentSet { C348 } ) = ( {} ) iff ( C347 .AdjacentSet { C349 } ) = ( {} )) by L1604 , L1605 , L1606 , L1414;
per cases ;
suppose L1608: ( C345 .AdjacentSet { C348 } ) = ( {} );

thus L1609: thesis by L1608 , L1607 , L1573;
end;
suppose L1610: ( C345 .AdjacentSet { C348 } ) <> ( {} );

thus L1611:now
set D117 = the (AdjGraph of C345 , { C348 });
assume L1612: C348 is  simplicial;
L1613: D117 is  complete by L1612 , L1610 , L1573;
thus L1614: C349 is  simplicial
proof
assume L1615: ( C347 .AdjacentSet { C349 } ) <> ( {} );
let C350 being (AdjGraph of C347 , { C349 });
thus L1616: thesis by L1604 , L1605 , L1606 , L1610 , L1613 , L1465 , L1551;
end;

end;
set D118 = the (AdjGraph of C347 , { C349 });
assume L1615: C349 is  simplicial;
L1616: ( C347 .AdjacentSet { C349 } ) <> ( {} ) by L1604 , L1605 , L1606 , L1610 , L1414;
L1617: D118 is  complete by L1616 , L1615 , L1573;
thus L1618: C348 is  simplicial
proof
assume L1619: ( C345 .AdjacentSet { C348 } ) <> ( {} );
let C351 being (AdjGraph of C345 , { C348 });
L1620: C351 == D118 by L1604 , L1605 , L1606 , L1610 , L1465;
thus L1621: thesis by L1620 , L1617 , L1551;
end;

end;
end;
theorem
L1620: (for B284 being _Graph holds (for B285 being (Vertex of B284) holds (B285 is  simplicial implies (for B286 , B287 being set holds ((B286 <> B287 & B286 in ( B284 .AdjacentSet { B285 } ) & B287 in ( B284 .AdjacentSet { B285 } )) implies (ex B288 being set st B288 Joins B286 , B287 , B284))))))
proof
let C352 being _Graph;
let C353 being (Vertex of C352);
assume that
L1621: C353 is  simplicial;
set D119 = the (AdjGraph of C352 , { C353 });
let C354 , C355 being set;
assume that
L1622: C354 <> C355
and
L1623: C354 in ( C352 .AdjacentSet { C353 } )
and
L1624: C355 in ( C352 .AdjacentSet { C353 } );
L1625: D119 is (inducedSubgraph of C352 , ( C352 .AdjacentSet { C353 } )) by L1436;
reconsider D120 = C354 as (Vertex of D119) by L1625 , L1623 , GLIB_000:def 37;
reconsider D121 = C355 as (Vertex of D119) by L1624 , L1625 , GLIB_000:def 37;
L1626: D119 is  complete by L1621 , L1623 , L1573;
L1627: D120 , D121 are_adjacent  by L1626 , L1622 , L1483;
consider C356 being set such that L1628: C356 Joins D120 , D121 , D119 by L1627 , L920;
L1629: C356 Joins C354 , C355 , C352 by L1628 , GLIB_000:72;
thus L1630: thesis by L1629;
end;
theorem
L1631: (for B289 being _Graph holds (for B290 being (Vertex of B289) holds ((not B290 is  simplicial) implies (ex B291 , B292 being (Vertex of B289) st (B291 <> B292 & B290 <> B291 & B290 <> B292 & B290 , B291 are_adjacent  & B290 , B292 are_adjacent  & (not B291 , B292 are_adjacent ))))))
proof
let C357 being _Graph;
let C358 being (Vertex of C357);
assume that
L1632: (not C358 is  simplicial);
assume L1633: (not (ex B293 , B294 being (Vertex of C357) st (B293 <> B294 & C358 <> B293 & C358 <> B294 & C358 , B293 are_adjacent  & C358 , B294 are_adjacent  & (not B293 , B294 are_adjacent ))));
per cases ;
suppose L1634: ( C357 .AdjacentSet { C358 } ) = ( {} );

thus L1635: contradiction by L1634 , L1632 , L1573;
end;
suppose L1636: ( C357 .AdjacentSet { C358 } ) <> ( {} );

L1637:
now
let C359 being (AdjGraph of C357 , { C358 });
L1638: C359 is (inducedSubgraph of C357 , ( C357 .AdjacentSet { C358 } )) by L1436;
L1639:
now
let C360 , C361 being (Vertex of C359);
assume that
L1640: C360 <> C361;
L1641: ( the_Vertices_of C359 ) = ( C357 .AdjacentSet { C358 } ) by L1636 , L1638 , GLIB_000:def 37;
L1642: C361 in ( C357 .AdjacentSet { C358 } ) by L1641;
L1643: C360 in ( C357 .AdjacentSet { C358 } ) by L1641;
reconsider D122 = C358 , D123 = C360 , D124 = C361 as (Vertex of C357) by L1643 , L1642;
L1644: D123 , D122 are_adjacent  by L1641 , L1070;
L1645: D124 , D122 are_adjacent  by L1641 , L1070;
L1646: D123 <> D122 by L1641 , L1070;
L1647: D123 , D124 are_adjacent  by L1646 , L1633 , L1640 , L1644 , L1645;
thus L1648: C360 , C361 are_adjacent  by L1647 , L1636 , L1638 , L930;
end;
thus L1649: C359 is  complete by L1639 , L1483;
end;
thus L1650: contradiction by L1637 , L1632 , L1573;
end;
end;
begin
definition
let C362 being _Graph;
let C363 , C364 being (Vertex of C362);
assume that
L1652: C363 <> C364
and
L1653: (not C363 , C364 are_adjacent );
mode VertexSeparator of C363 , C364
 -> (Subset of ( the_Vertices_of C362 ))
means :L1654: ((not C363 in it) & (not C364 in it) & (for B295 being (removeVertices of C362 , it) holds (not (ex B296 being (Walk of B295) st B296 is_Walk_from C363 , C364))));
existence
proof
set D125 = ( ( the_Vertices_of C362 ) \ { C363 , C364 } );
L1655: C363 in { C363 , C364 } by TARSKI:def 2;
L1656: (not C363 in D125) by L1655 , XBOOLE_0:def 5;
L1657: (not (ex B297 being set st B297 Joins C363 , C364 , C362)) by L1653 , L920;
L1658: (for B298 being (removeVertices of C362 , D125) holds (not (ex B299 being (Walk of B298) st B299 is_Walk_from C363 , C364)))
proof
let C365 being (removeVertices of C362 , D125);
let C366 being (Walk of C365);
assume that
L1659: C366 is_Walk_from C363 , C364;
L1660:
now
let C367 being set;
assume that
L1661: C367 in { C363 , C364 };
L1662:
now
per cases  by L1661 , TARSKI:def 2;
suppose L1663: C367 = C363;

L1664: C367 = ( C366 .first() ) by L1663 , L1659 , GLIB_001:def 23;
thus L1665: C367 in ( C366 .vertices() ) by L1664 , GLIB_001:88;
end;
suppose L1666: C367 = C364;

L1667: C367 = ( C366 .last() ) by L1666 , L1659 , GLIB_001:def 23;
thus L1668: C367 in ( C366 .vertices() ) by L1667 , GLIB_001:88;
end;
end;
thus L1670: C367 in ( C366 .vertices() ) by L1662;
end;
reconsider D126 = C366 as (Walk of C362) by GLIB_001:167;
L1671:
now
let C368 being set;
thus L1672:now
assume L1673: C368 in ( D126 .vertices() );
L1674: (ex B300 being  odd (Element of ( NAT )) st (B300 <= ( len C366 ) & ( C366 . B300 ) = C368)) by L1673 , GLIB_001:87;
thus L1675: C368 in ( C366 .vertices() ) by L1674 , GLIB_001:87;
end;
assume L1676: C368 in ( C366 .vertices() );
L1677: (ex B301 being  odd (Element of ( NAT )) st (B301 <= ( len D126 ) & ( D126 . B301 ) = C368)) by L1676 , GLIB_001:87;
thus L1678: C368 in ( D126 .vertices() ) by L1677 , GLIB_001:87;
end;
L1679: ( ( the_Vertices_of C362 ) \ D125 ) is non  empty by L1656 , XBOOLE_0:def 5;
L1680: ( the_Vertices_of C365 ) = ( ( the_Vertices_of C362 ) \ D125 ) by L1679 , GLIB_000:def 37;
L1681: ( the_Vertices_of C365 ) = ( ( the_Vertices_of C362 ) /\ { C363 , C364 } ) by L1680 , XBOOLE_1:48;
L1682: ( the_Vertices_of C365 ) = { C363 , C364 } by L1681 , XBOOLE_1:28;
L1683: (for B302 being set holds (B302 in ( C366 .vertices() ) iff B302 in { C363 , C364 })) by L1682 , L1660;
L1684: ( C366 .vertices() ) = { C363 , C364 } by L1683 , TARSKI:1;
L1685: ( D126 .vertices() ) = { C363 , C364 } by L1684 , L1671 , TARSKI:1;
thus L1686: contradiction by L1685 , L1652 , L1657 , L253;
end;
L1687: C364 in { C363 , C364 } by TARSKI:def 2;
L1688: (not C364 in D125) by L1687 , XBOOLE_0:def 5;
thus L1689: thesis by L1688 , L1656 , L1658;
end;
end;
theorem
L1691: (for B303 being _Graph holds (for B304 , B305 being (Vertex of B303) holds ((B304 <> B305 & (not B304 , B305 are_adjacent )) implies (for B306 being (VertexSeparator of B304 , B305) holds B306 is (VertexSeparator of B305 , B304)))))
proof
let C369 being _Graph;
let C370 , C371 being (Vertex of C369);
assume that
L1692: C370 <> C371
and
L1693: (not C370 , C371 are_adjacent );
let C372 being (VertexSeparator of C370 , C371);
L1694: (not C371 in C372) by L1692 , L1693 , L1654;
L1695: (for B307 being (removeVertices of C369 , C372) holds (not (ex B308 being (Walk of B307) st B308 is_Walk_from C371 , C370)))
proof
let C373 being (removeVertices of C369 , C372);
let C374 being (Walk of C373);
assume L1696: C374 is_Walk_from C371 , C370;
L1697: ( C374 .reverse() ) is_Walk_from C370 , C371 by L1696 , GLIB_001:23;
thus L1698: contradiction by L1697 , L1692 , L1693 , L1654;
end;
L1699: (not C370 in C372) by L1692 , L1693 , L1654;
thus L1700: thesis by L1699 , L1692 , L1693 , L1694 , L1695 , L1654;
end;
theorem
L1701: (for B309 being _Graph holds (for B310 , B311 being (Vertex of B309) holds ((B310 <> B311 & (not B310 , B311 are_adjacent )) implies (for B312 being (Subset of ( the_Vertices_of B309 )) holds (B312 is (VertexSeparator of B310 , B311) iff ((not B310 in B312) & (not B311 in B312) & (for B313 being (Walk of B309) holds (B313 is_Walk_from B310 , B311 implies (ex B314 being (Vertex of B309) st (B314 in B312 & B314 in ( B313 .vertices() )))))))))))
proof
let C375 being _Graph;
let C376 , C377 being (Vertex of C375);
assume that
L1702: C376 <> C377
and
L1703: (not C376 , C377 are_adjacent );
let C378 being (Subset of ( the_Vertices_of C375 ));
thus L1704:now
assume L1705: C378 is (VertexSeparator of C376 , C377);
thus L1706: ((not C376 in C378) & (not C377 in C378)) by L1705 , L1702 , L1703 , L1654;
L1707: ( ( the_Vertices_of C375 ) \ C378 ) is non  empty by L1706 , XBOOLE_0:def 5;
let C379 being (Walk of C375);
assume that
L1708: C379 is_Walk_from C376 , C377;
L1709:
now
assume L1710: (not (ex B315 being (Vertex of C375) st (B315 in C378 & B315 in ( C379 .vertices() ))));
let C380 being (removeVertices of C375 , C378);
L1711: ( the_Vertices_of C380 ) = ( ( the_Vertices_of C375 ) \ C378 ) by L1707 , GLIB_000:def 37;
L1712: ( the_Edges_of C380 ) = ( C375 .edgesBetween ( the_Vertices_of C380 ) ) by L1711 , GLIB_000:def 37;
L1713: ( C379 .edges() ) c= ( C375 .edgesBetween ( C379 .vertices() ) ) by GLIB_001:109;
L1714:
now
let C381 being set;
assume that
L1715: C381 in ( C379 .vertices() );
L1716: (not C381 in C378) by L1710 , L1715;
thus L1717: C381 in ( the_Vertices_of C380 ) by L1716 , L1711 , L1715 , XBOOLE_0:def 5;
end;
L1718: ( C379 .vertices() ) c= ( the_Vertices_of C380 ) by L1714 , TARSKI:def 3;
L1719: ( C375 .edgesBetween ( C379 .vertices() ) ) c= ( C375 .edgesBetween ( the_Vertices_of C380 ) ) by L1718 , GLIB_000:36;
L1720: ( C379 .edges() ) c= ( the_Edges_of C380 ) by L1719 , L1712 , L1713 , XBOOLE_1:1;
reconsider D127 = C379 as (Walk of C380) by L1720 , L1718 , GLIB_001:170;
L1721: ( C379 .last() ) = C377 by L1708 , GLIB_001:def 23;
L1722: ( D127 .last() ) = C377 by L1721;
L1723: ( C379 .first() ) = C376 by L1708 , GLIB_001:def 23;
L1724: ( D127 .first() ) = C376 by L1723;
L1725: D127 is_Walk_from C376 , C377 by L1724 , L1722 , GLIB_001:def 23;
thus L1726: contradiction by L1725 , L1702 , L1703 , L1705 , L1654;
end;
thus L1727: (ex B316 being (Vertex of C375) st (B316 in C378 & B316 in ( C379 .vertices() ))) by L1709;
end;
assume that
L1728: (not C376 in C378)
and
L1729: (not C377 in C378)
and
L1730: (for B317 being (Walk of C375) holds (B317 is_Walk_from C376 , C377 implies (ex B318 being (Vertex of C375) st (B318 in C378 & B318 in ( B317 .vertices() )))));
L1731:
now
let C382 being (removeVertices of C375 , C378);
given C383 being (Walk of C382) such that
L1732: C383 is_Walk_from C376 , C377;

reconsider D128 = C383 as (Walk of C375) by GLIB_001:167;
L1733: ( C383 .last() ) = C377 by L1732 , GLIB_001:def 23;
L1734: ( D128 .last() ) = C377 by L1733;
L1735:
now
let C384 being set;
thus L1736:now
assume L1737: C384 in ( D128 .vertices() );
L1738: (ex B319 being  odd (Element of ( NAT )) st (B319 <= ( len C383 ) & ( C383 . B319 ) = C384)) by L1737 , GLIB_001:87;
thus L1739: C384 in ( C383 .vertices() ) by L1738 , GLIB_001:87;
end;
assume L1740: C384 in ( C383 .vertices() );
L1741: (ex B320 being  odd (Element of ( NAT )) st (B320 <= ( len D128 ) & ( D128 . B320 ) = C384)) by L1740 , GLIB_001:87;
thus L1742: C384 in ( D128 .vertices() ) by L1741 , GLIB_001:87;
end;
L1743: ( D128 .vertices() ) = ( C383 .vertices() ) by L1735 , TARSKI:1;
L1744: ( ( the_Vertices_of C375 ) \ C378 ) is non  empty by L1728 , XBOOLE_0:def 5;
L1745: ( the_Vertices_of C382 ) = ( ( the_Vertices_of C375 ) \ C378 ) by L1744 , GLIB_000:def 37;
L1746: (for B321 being (Vertex of C375) holds (not (B321 in C378 & B321 in ( D128 .vertices() )))) by L1745 , L1743 , XBOOLE_0:def 5;
L1747: ( C383 .first() ) = C376 by L1732 , GLIB_001:def 23;
L1748: ( D128 .first() ) = C376 by L1747;
L1749: D128 is_Walk_from C376 , C377 by L1748 , L1734 , GLIB_001:def 23;
thus L1750: contradiction by L1749 , L1730 , L1746;
end;
thus L1751: thesis by L1731 , L1702 , L1703 , L1728 , L1729 , L1654;
end;
theorem
L1752: (for B322 being _Graph holds (for B323 , B324 being (Vertex of B322) holds ((B323 <> B324 & (not B323 , B324 are_adjacent )) implies (for B325 being (VertexSeparator of B323 , B324) holds (for B326 being (Walk of B322) holds (B326 is_Walk_from B323 , B324 implies (ex B327 being  odd Nat st (1 < B327 & B327 < ( len B326 ) & ( B326 . B327 ) in B325))))))))
proof
let C385 being _Graph;
let C386 , C387 being (Vertex of C385);
assume that
L1753: C386 <> C387
and
L1754: (not C386 , C387 are_adjacent );
let C388 being (VertexSeparator of C386 , C387);
let C389 being (Walk of C385);
assume that
L1755: C389 is_Walk_from C386 , C387;
consider C390 being (Vertex of C385) such that L1756: C390 in C388 and L1757: C390 in ( C389 .vertices() ) by L1753 , L1754 , L1755 , L1701;
consider C391 being  odd (Element of ( NAT )) such that L1758: C391 <= ( len C389 ) and L1759: ( C389 . C391 ) = C390 by L1757 , GLIB_001:87;
L1760: (not C386 in C388) by L1753 , L1754 , L1701;
L1761:
now
assume L1762: 1 = C391;
L1763: ( C389 . C391 ) = ( C389 .first() ) by L1762;
thus L1764: contradiction by L1763 , L1755 , L1760 , L1756 , L1759 , GLIB_001:def 23;
end;
L1765: (not C387 in C388) by L1753 , L1754 , L1701;
L1766:
now
assume L1767: C391 = ( len C389 );
L1768: ( C389 . C391 ) = ( C389 .last() ) by L1767;
thus L1769: contradiction by L1768 , L1755 , L1765 , L1756 , L1759 , GLIB_001:def 23;
end;
L1770: C391 < ( len C389 ) by L1766 , L1758 , XXREAL_0:1;
L1771: 1 <= C391 by ABIAN:12;
L1772: 1 < C391 by L1771 , L1761 , XXREAL_0:1;
thus L1773: thesis by L1772 , L1756 , L1759 , L1770;
end;
theorem
L1774: (for B328 being _Graph holds (for B329 , B330 being (Vertex of B328) holds ((B329 <> B330 & (not B329 , B330 are_adjacent )) implies (for B331 being (VertexSeparator of B329 , B330) holds (B331 = ( {} ) implies (not (ex B332 being (Walk of B328) st B332 is_Walk_from B329 , B330)))))))
proof
let C392 being _Graph;
let C393 , C394 being (Vertex of C392);
assume that
L1775: C393 <> C394
and
L1776: (not C393 , C394 are_adjacent );
let C395 being (VertexSeparator of C393 , C394);
assume L1777: C395 = ( {} );
L1778: ( the_Edges_of C392 ) c= ( C392 .edgesBetween ( the_Vertices_of C392 ) ) by GLIB_000:34;
L1779: ( the_Vertices_of C392 ) c= ( the_Vertices_of C392 );
set D129 = the (removeVertices of C392 , C395);
given C396 being (Walk of C392) such that
L1780: C396 is_Walk_from C393 , C394;

L1781: ( the_Vertices_of D129 ) = ( the_Vertices_of C392 ) by L1777 , GLIB_000:def 37;
L1782: ( C396 .vertices() ) c= ( the_Vertices_of D129 ) by L1781;
L1783: D129 is (inducedSubgraph of C392 , ( the_Vertices_of C392 ) , ( the_Edges_of C392 )) by L1777 , GLIB_000:34;
L1784: ( the_Edges_of D129 ) = ( the_Edges_of C392 ) by L1783 , L1779 , L1778 , GLIB_000:def 37;
L1785: ( C396 .edges() ) c= ( the_Edges_of D129 ) by L1784;
reconsider D130 = C396 as (Walk of D129) by L1785 , L1782 , GLIB_001:170;
L1786: ( C396 .last() ) = C394 by L1780 , GLIB_001:def 23;
L1787: ( D130 .last() ) = C394 by L1786;
L1788: ( C396 .first() ) = C393 by L1780 , GLIB_001:def 23;
L1789: ( D130 .first() ) = C393 by L1788;
L1790: D130 is_Walk_from C393 , C394 by L1789 , L1787 , GLIB_001:def 23;
thus L1791: contradiction by L1790 , L1775 , L1776 , L1654;
end;
theorem
L1792: (for B333 being _Graph holds (for B334 , B335 being (Vertex of B333) holds ((B334 <> B335 & (not B334 , B335 are_adjacent ) & (not (ex B336 being (Walk of B333) st B336 is_Walk_from B334 , B335))) implies ( {} ) is (VertexSeparator of B334 , B335))))
proof
let C397 being _Graph;
let C398 , C399 being (Vertex of C397);
assume that
L1793: C398 <> C399
and
L1794: (not C398 , C399 are_adjacent );
assume L1795: (not (ex B337 being (Walk of C397) st B337 is_Walk_from C398 , C399));
L1796:
now
let C400 being (removeVertices of C397 , ( {} ));
given C401 being (Walk of C400) such that
L1797: (C401 is_Walk_from C398 , C399 or C401 is_Walk_from C399 , C398);

per cases  by L1797;
suppose L1798: C401 is_Walk_from C398 , C399;

reconsider D131 = C401 as (Walk of C397) by GLIB_001:167;
L1799: ( C401 .last() ) = C399 by L1798 , GLIB_001:def 23;
L1800: ( D131 .last() ) = C399 by L1799;
L1801: ( C401 .first() ) = C398 by L1798 , GLIB_001:def 23;
L1802: ( D131 .first() ) = C398 by L1801;
L1803: D131 is_Walk_from C398 , C399 by L1802 , L1800 , GLIB_001:def 23;
thus L1804: contradiction by L1803 , L1795;
end;
suppose L1805: C401 is_Walk_from C399 , C398;

set D132 = ( C401 .reverse() );
reconsider D133 = D132 as (Walk of C397) by GLIB_001:167;
L1806: D132 is_Walk_from C398 , C399 by L1805 , GLIB_001:23;
L1807: ( D132 .last() ) = C399 by L1806 , GLIB_001:def 23;
L1808: ( D133 .last() ) = C399 by L1807;
L1809: ( D132 .first() ) = C398 by L1806 , GLIB_001:def 23;
L1810: ( D133 .first() ) = C398 by L1809;
L1811: D133 is_Walk_from C398 , C399 by L1810 , L1808 , GLIB_001:def 23;
thus L1812: contradiction by L1811 , L1795;
end;
end;
L1814: ( {} ) is (Subset of ( the_Vertices_of C397 )) by XBOOLE_1:2;
thus L1815: thesis by L1814 , L1793 , L1794 , L1796 , L1654;
end;
theorem
L1816: (for B338 being _Graph holds (for B339 , B340 being (Vertex of B338) holds ((B339 <> B340 & (not B339 , B340 are_adjacent )) implies (for B341 being (VertexSeparator of B339 , B340) holds (for B342 being (removeVertices of B338 , B341) holds (for B343 being (Vertex of B342) holds ( ( B342 .reachableFrom B343 ) /\ B341 ) = ( {} )))))))
proof
let C402 being _Graph;
let C403 , C404 being (Vertex of C402);
assume that
L1817: C403 <> C404
and
L1818: (not C403 , C404 are_adjacent );
let C405 being (VertexSeparator of C403 , C404);
let C406 being (removeVertices of C402 , C405);
let C407 being (Vertex of C406);
set D134 = ( C406 .reachableFrom C407 );
L1819: (not C403 in C405) by L1817 , L1818 , L1654;
L1820: C403 in ( ( the_Vertices_of C402 ) \ C405 ) by L1819 , XBOOLE_0:def 5;
L1821: ( the_Vertices_of C406 ) = ( ( the_Vertices_of C402 ) \ C405 ) by L1820 , GLIB_000:def 37;
L1822:
now
let C408 being set;
assume that
L1823: C408 in ( D134 /\ C405 );
L1824: C408 in C405 by L1823 , XBOOLE_0:def 4;
L1825: C408 in D134 by L1823 , XBOOLE_0:def 4;
thus L1826: contradiction by L1825 , L1821 , L1824 , XBOOLE_0:def 5;
end;
thus L1827: thesis by L1822 , XBOOLE_0:def 1;
end;
theorem
L1828: (for B344 being _Graph holds (for B345 , B346 being (Vertex of B344) holds ((B345 <> B346 & (not B345 , B346 are_adjacent )) implies (for B347 being (VertexSeparator of B345 , B346) holds (for B348 being (removeVertices of B344 , B347) holds (for B349 , B350 being (Vertex of B348) holds ((B349 = B345 & B350 = B346) implies ( ( B348 .reachableFrom B349 ) /\ ( B348 .reachableFrom B350 ) ) = ( {} ))))))))
proof
let C409 being _Graph;
let C410 , C411 being (Vertex of C409);
assume that
L1829: C410 <> C411
and
L1830: (not C410 , C411 are_adjacent );
let C412 being (VertexSeparator of C410 , C411);
let C413 being (removeVertices of C409 , C412);
let C414 , C415 being (Vertex of C413);
assume that
L1831: C414 = C410
and
L1832: C415 = C411;
set D135 = ( C413 .reachableFrom C414 );
set D136 = ( C413 .reachableFrom C415 );
L1833:
now
let C416 being set;
assume that
L1834: C416 in ( D135 /\ D136 );
L1835: C416 in D135 by L1834 , XBOOLE_0:def 4;
consider C417 being (Walk of C413) such that L1836: C417 is_Walk_from C414 , C416 by L1835 , GLIB_002:def 5;
L1837: C416 in D136 by L1834 , XBOOLE_0:def 4;
consider C418 being (Walk of C413) such that L1838: C418 is_Walk_from C415 , C416 by L1837 , GLIB_002:def 5;
set D137 = ( C418 .reverse() );
set D138 = ( C417 .append D137 );
L1839: D137 is_Walk_from C416 , C415 by L1838 , GLIB_001:23;
L1840: D138 is_Walk_from C414 , C415 by L1839 , L1836 , GLIB_001:31;
thus L1841: contradiction by L1840 , L1829 , L1830 , L1831 , L1832 , L1654;
end;
thus L1842: thesis by L1833 , XBOOLE_0:def 1;
end;
theorem
L1843: (for B351 being _Graph holds (for B352 , B353 being (Vertex of B351) holds ((B352 <> B353 & (not B352 , B353 are_adjacent )) implies (for B354 being (VertexSeparator of B352 , B353) holds (for B355 being (removeVertices of B351 , B354) holds (B352 is (Vertex of B355) & B353 is (Vertex of B355)))))))
proof
let C419 being _Graph;
let C420 , C421 being (Vertex of C419);
assume that
L1844: C420 <> C421
and
L1845: (not C420 , C421 are_adjacent );
let C422 being (VertexSeparator of C420 , C421);
let C423 being (removeVertices of C419 , C422);
L1846: (not C421 in C422) by L1844 , L1845 , L1654;
L1847: C421 in ( ( the_Vertices_of C419 ) \ C422 ) by L1846 , XBOOLE_0:def 5;
L1848: (not C420 in C422) by L1844 , L1845 , L1654;
L1849: C420 in ( ( the_Vertices_of C419 ) \ C422 ) by L1848 , XBOOLE_0:def 5;
thus L1850: thesis by L1849 , L1847 , GLIB_000:def 37;
end;
definition
let C424 being _Graph;
let C425 , C426 being (Vertex of C424);
let C427 being (VertexSeparator of C425 , C426);
attr C427 is  minimal
means
:L1851: (for B356 being (Subset of C427) holds (B356 <> C427 implies (not B356 is (VertexSeparator of C425 , C426))));
end;
theorem
L1853: (for B357 being _Graph holds (for B358 , B359 being (Vertex of B357) holds (for B360 being (VertexSeparator of B358 , B359) holds (B360 = ( {} ) implies B360 is  minimal))))
proof
let C428 being _Graph;
let C429 , C430 being (Vertex of C428);
let C431 being (VertexSeparator of C429 , C430);
assume L1854: C431 = ( {} );
L1855:
now
assume L1856: (not C431 is  minimal);
L1857: (ex B361 being (Subset of C431) st (B361 <> C431 & B361 is (VertexSeparator of C429 , C430))) by L1856 , L1851;
thus L1858: contradiction by L1857 , L1854;
end;
thus L1859: thesis by L1855;
end;
theorem
L1860: (for B362 being  finite _Graph holds (for B363 , B364 being (Vertex of B362) holds (ex B365 being (VertexSeparator of B363 , B364) st B365 is  minimal)))
proof
let C432 being  finite _Graph;
let C433 , C434 being (Vertex of C432);
set D139 = { B366 where B366 is (VertexSeparator of C433 , C434) : (not contradiction) };
set D140 = the (VertexSeparator of C433 , C434);
L1861: D140 in D139;
L1862:
now
let C435 being set;
assume L1863: C435 in D139;
L1864: (ex B367 being (VertexSeparator of C433 , C434) st C435 = B367) by L1863;
thus L1865: C435 in ( bool ( the_Vertices_of C432 ) ) by L1864;
end;
L1866: D139 c= ( bool ( the_Vertices_of C432 ) ) by L1862 , TARSKI:def 3;
reconsider D141 = D139 as non  empty  finite set by L1866 , L1861;
defpred S3[ set , set ] means (ex B368 being (VertexSeparator of C433 , C434) st ($1 = B368 & $2 = ( card B368 )));
L1867:
now
let C436 being set;
assume L1868: C436 in D141;
consider C437 being (VertexSeparator of C433 , C434) such that L1869: C437 = C436 by L1868;
L1870: ( card C437 ) is (Element of ( NAT ));
thus L1871: (ex B369 being set st (B369 in ( REAL ) & S3[ C436 , B369 ])) by L1870 , L1869;
end;
consider C438 being (Function of D141 , ( REAL )) such that L1872: (for B370 being set holds (B370 in D141 implies S3[ B370 , ( C438 . B370 ) ])) from FUNCT_2:sch 1(L1867);
deffunc H2((Element of D141)) = ( C438 /. $1 );
consider C439 being (Element of D141) such that L1873: (for B371 being (Element of D141) holds H2(C439) <= H2(B371)) from GRAPH_5:sch 2;
consider C440 being (VertexSeparator of C433 , C434) such that L1874: C440 = C439 and L1875: ( card C440 ) = ( C438 . C439 ) by L1872;
L1876: ( dom C438 ) = D141 by FUNCT_2:def 1;
L1877:
now
assume L1878: (not C440 is  minimal);
consider C441 being (Subset of C440) such that L1879: C441 <> C440 and L1880: C441 is (VertexSeparator of C433 , C434) by L1878 , L1851;
L1881: C441 in D141 by L1880;
reconsider D142 = C441 as (Element of D141) by L1881;
consider C442 being (VertexSeparator of C433 , C434) such that L1882: C442 = D142 and L1883: ( card C442 ) = ( C438 . D142 ) by L1872;
L1884: C442 in ( dom C438 ) by L1876;
L1885: ( C438 /. C442 ) = ( C438 . C442 ) by L1884 , PARTFUN1:def 6;
L1886: ( card C440 ) <= ( card C441 ) by L1885 , L1873 , L1875 , L1882 , L1883;
L1887: ( card C441 ) <= ( card C440 ) by NAT_1:43;
thus L1888: contradiction by L1887 , L1879 , L1886 , PRE_POLY:8 , XXREAL_0:1;
end;
thus L1889: thesis by L1877;
end;
theorem
L1890: (for B372 being _Graph holds (for B373 , B374 being (Vertex of B372) holds ((B373 <> B374 & (not B373 , B374 are_adjacent )) implies (for B375 being (VertexSeparator of B373 , B374) holds (B375 is  minimal implies (for B376 being (VertexSeparator of B374 , B373) holds (B375 = B376 implies B376 is  minimal)))))))
proof
let C443 being _Graph;
let C444 , C445 being (Vertex of C443);
assume that
L1891: C444 <> C445
and
L1892: (not C444 , C445 are_adjacent );
let C446 being (VertexSeparator of C444 , C445);
assume that
L1893: C446 is  minimal;
let C447 being (VertexSeparator of C445 , C444);
assume that
L1894: C446 = C447;
assume L1895: (not C447 is  minimal);
consider C448 being (Subset of C447) such that L1896: C448 <> C447 and L1897: C448 is (VertexSeparator of C445 , C444) by L1895 , L1851;
L1898: C448 is (VertexSeparator of C444 , C445) by L1891 , L1892 , L1897 , L1691;
thus L1899: contradiction by L1898 , L1893 , L1894 , L1896 , L1851;
end;
theorem
L1900: (for B377 being _Graph holds (for B378 , B379 being (Vertex of B377) holds ((B378 <> B379 & (not B378 , B379 are_adjacent )) implies (for B380 being (VertexSeparator of B378 , B379) holds (B380 is  minimal implies (for B381 being (Vertex of B377) holds (B381 in B380 implies (ex B382 being (Walk of B377) st (B382 is_Walk_from B378 , B379 & B381 in ( B382 .vertices() ))))))))))
proof
let C449 being _Graph;
let C450 , C451 being (Vertex of C449);
assume that
L1901: C450 <> C451
and
L1902: (not C450 , C451 are_adjacent );
let C452 being (VertexSeparator of C450 , C451);
assume that
L1903: C452 is  minimal;
let C453 being (Vertex of C449);
assume that
L1904: C453 in C452;
set D143 = ( C452 \ { C453 } );
L1905: D143 c= C452 by XBOOLE_1:36;
L1906: (not C451 in D143) by L1905 , L1901 , L1902 , L1654;
assume L1907: (not (ex B383 being (Walk of C449) st (B383 is_Walk_from C450 , C451 & C453 in ( B383 .vertices() ))));
L1908:
now
let C454 being (Walk of C449);
assume that
L1909: C454 is_Walk_from C450 , C451;
consider C455 being (Vertex of C449) such that L1910: C455 in C452 and L1911: C455 in ( C454 .vertices() ) by L1901 , L1902 , L1909 , L1701;
take D144 = C455;
L1912: D144 <> C453 by L1907 , L1909 , L1911;
L1913: (not D144 in { C453 }) by L1912 , TARSKI:def 1;
thus L1914: D144 in D143 by L1913 , L1910 , XBOOLE_0:def 5;
thus L1915: D144 in ( C454 .vertices() ) by L1911;
end;
L1916: C453 in { C453 } by TARSKI:def 1;
L1917: D143 <> C452 by L1916 , L1904 , XBOOLE_0:def 5;
L1918: (not C450 in D143) by L1901 , L1902 , L1905 , L1654;
L1919: D143 is (VertexSeparator of C450 , C451) by L1918 , L1901 , L1902 , L1906 , L1908 , L1701;
thus L1920: contradiction by L1919 , L1903 , L1917 , L1905 , L1851;
end;
theorem
L1921: (for B384 being _Graph holds (for B385 , B386 being (Vertex of B384) holds ((B385 <> B386 & (not B385 , B386 are_adjacent )) implies (for B387 being (VertexSeparator of B385 , B386) holds (B387 is  minimal implies (for B388 being (removeVertices of B384 , B387) holds (for B389 being (Vertex of B388) holds (B389 = B385 implies (for B390 being (Vertex of B384) holds (B390 in B387 implies (ex B391 being (Vertex of B384) st (B391 in ( B388 .reachableFrom B389 ) & B390 , B391 are_adjacent ))))))))))))
proof
let C456 being _Graph;
let C457 , C458 being (Vertex of C456);
assume that
L1922: C457 <> C458
and
L1923: (not C457 , C458 are_adjacent );
let C459 being (VertexSeparator of C457 , C458);
assume that
L1924: C459 is  minimal;
let C460 being (removeVertices of C456 , C459);
let C461 being (Vertex of C460);
assume that
L1925: C461 = C457;
set D145 = ( C460 .reachableFrom C461 );
let C462 being (Vertex of C456);
assume that
L1926: C462 in C459;
set D146 = ( C459 \ { C462 } );
L1927: D146 c= C459 by XBOOLE_1:36;
L1928: (not C458 in D146) by L1927 , L1922 , L1923 , L1654;
assume L1929: (not (ex B392 being (Vertex of C456) st (B392 in ( C460 .reachableFrom C461 ) & C462 , B392 are_adjacent )));
L1930: (for B393 being (Walk of C456) holds ((B393 is_Walk_from C457 , C458 & C462 in ( B393 .vertices() )) implies (ex B394 being (Vertex of C456) st (B394 in D146 & B394 in ( B393 .vertices() )))))
proof
let C463 being (Walk of C456);
assume that
L1931: C463 is_Walk_from C457 , C458
and
L1932: C462 in ( C463 .vertices() );
L1933:
now
assume L1934: ( C463 .find C462 ) = 1;
L1935: ( C463 . ( C463 .find C462 ) ) = ( C463 .first() ) by L1934;
L1936: ( C463 . ( C463 .find C462 ) ) = C457 by L1935 , L1931 , GLIB_001:def 23;
L1937: (not ( C463 . ( C463 .find C462 ) ) in C459) by L1936 , L1922 , L1923 , L1654;
thus L1938: contradiction by L1937 , L1926 , L1932 , GLIB_001:def 19;
end;
consider C464 being  odd (Element of ( NAT )) such that L1939: C464 <= ( len C463 ) and L1940: ( C463 . C464 ) = C462 by L1932 , GLIB_001:87;
L1941: ( C463 .find ( C463 . C464 ) ) <= C464 by L1939 , GLIB_001:115;
L1942: ( C463 .find C462 ) <= ( len C463 ) by L1941 , L1939 , L1940 , XXREAL_0:2;
L1943: ( ( C463 .find C462 ) + ( - 2 ) ) <= ( ( len C463 ) + ( 0 ) ) by L1942 , XREAL_1:7;
L1944: ( ( 0 ) + 1 ) <= ( C463 .find C462 ) by ABIAN:12;
L1945: ( ( 2 * ( 0 ) ) + 1 ) < ( C463 .find C462 ) by L1944 , L1933 , XXREAL_0:1;
L1946: ( ( 2 * 1 ) + 1 ) <= ( C463 .find C462 ) by L1945 , L22;
L1947: ( 3 + ( - 2 ) ) <= ( ( C463 .find C462 ) + ( - 2 ) ) by L1946 , XREAL_1:7;
L1948: ( ( C463 .find C462 ) - 2 ) is (Element of ( NAT )) by L1947 , INT_1:3;
reconsider D147 = ( ( C463 .find C462 ) - ( 2 * 1 ) ) as  odd Nat by L1948;
set D148 = ( C463 .cut (1 , D147) );
L1949: ( ( 2 * ( 0 ) ) + 1 ) <= D147 by L1947;
L1950: ( ( ( len D148 ) + 1 ) + ( - 1 ) ) = ( ( D147 + 1 ) + ( - 1 ) ) by L1949 , L1948 , L1943 , GLIB_001:36;
assume L1951: (not (ex B395 being (Vertex of C456) st (B395 in D146 & B395 in ( C463 .vertices() ))));
L1952: (for B396 being  odd Nat holds (B396 <= D147 implies ((not ( D148 . B396 ) in C459) & ( D148 . B396 ) = ( C463 . B396 ))))
proof
let C465 being  odd Nat;
assume that
L1953: C465 <= D147;
L1954: 1 <= C465 by ABIAN:12;
L1955: ( 1 + ( - 1 ) ) <= ( C465 + ( - 1 ) ) by L1954 , XREAL_1:7;
L1956: ( C465 - 1 ) is (Element of ( NAT )) by L1955 , INT_1:3;
reconsider D149 = ( C465 - 1 ) as Nat by L1956;
L1957: C465 < ( D147 + 1 ) by L1953 , NAT_1:13;
L1958: ( C465 + ( - 1 ) ) < ( ( D147 + 1 ) + ( - 1 ) ) by L1957 , XREAL_1:8;
L1959: ( D148 . ( D149 + 1 ) ) = ( C463 . ( 1 + D149 ) ) by L1958 , L1943 , L1949 , L1950 , L1956 , GLIB_001:36;
L1960:
now
L1961: ( D148 .vertices() ) c= ( C463 .vertices() ) by L1948 , L1943 , L1949 , GLIB_001:94;
L1962: C465 in ( NAT ) by ORDINAL1:def 12;
L1963: ( D148 . C465 ) in ( D148 .vertices() ) by L1962 , L1950 , L1953 , GLIB_001:87;
L1964: (not ( D148 . C465 ) in D146) by L1963 , L1951 , L1961;
L1965: C465 < ( D147 + 1 ) by L1953 , NAT_1:13;
L1966: ( C465 + ( 0 ) ) < ( ( D147 + 1 ) + 1 ) by L1965 , XREAL_1:8;
L1967: ( C459 \/ { C462 } ) = ( { C462 } \/ D146 ) by XBOOLE_1:39;
L1968: { C462 } c= C459 by L1926 , ZFMISC_1:31;
L1969: C459 = ( { C462 } \/ D146 ) by L1968 , L1967 , XBOOLE_1:12;
L1970: C465 <= ( len C463 ) by L1943 , L1953 , XXREAL_0:2;
assume L1971: ( D148 . C465 ) in C459;
L1972: ( D148 . C465 ) in { C462 } by L1971 , L1964 , L1969 , XBOOLE_0:def 3;
L1973: C465 < ( C463 .find ( C463 . C465 ) ) by L1972 , L1959 , L1966 , TARSKI:def 1;
thus L1974: contradiction by L1973 , L1962 , L1970 , GLIB_001:115;
end;
thus L1975: thesis by L1960 , L1959;
end;
L1976: (for B397 being  odd Nat holds (B397 <= D147 implies (not ( D148 . B397 ) in C459))) by L1952;
reconsider D150 = D148 as (Walk of C460) by L1976 , L1950 , L234;
L1977: ( C463 .first() ) = C457 by L1931 , GLIB_001:def 23;
L1978: ( D148 . ( ( 2 * ( 0 ) ) + 1 ) ) = C457 by L1977 , L1947 , L1952;
L1979: C461 in ( D150 .vertices() ) by L1978 , L1925 , L1947 , L1950 , GLIB_001:87;
L1980: ( D150 .vertices() ) c= D145 by L1979 , GLIB_002:13;
L1981: ( C463 .find C462 ) < ( ( len C463 ) + 1 ) by L1942 , NAT_1:13;
L1982: ( ( C463 .find C462 ) + ( - 2 ) ) < ( ( ( len C463 ) + 1 ) + ( - 2 ) ) by L1981 , XREAL_1:8;
L1983: ( D148 . D147 ) is (Vertex of C456) by L1950 , GLIB_001:7;
reconsider D151 = ( C463 . D147 ) as (Vertex of C456) by L1983 , L1952;
L1984: ( ( len C463 ) + ( - 1 ) ) < ( ( len C463 ) + ( 0 ) ) by XREAL_1:8;
L1985: D147 < ( len C463 ) by L1984 , L1982 , XXREAL_0:2;
L1986: ( C463 . ( D147 + 1 ) ) Joins D151 , ( C463 . ( D147 + 2 ) ) , C456 by L1985 , L1948 , GLIB_001:def 3;
L1987: ( C463 . ( D147 + 1 ) ) Joins D151 , C462 , C456 by L1986 , L1932 , GLIB_001:def 19;
L1988: D151 , C462 are_adjacent  by L1987 , L920;
L1989: ( D148 . D147 ) in ( D150 .vertices() ) by L1950 , GLIB_001:87;
L1990: ( C463 . D147 ) in ( D150 .vertices() ) by L1989 , L1952;
thus L1991: contradiction by L1990 , L1929 , L1980 , L1988;
end;
L1992:
now
let C466 being (Walk of C456);
assume that
L1993: C466 is_Walk_from C457 , C458;
consider C467 being (Vertex of C456) such that L1994: C467 in C459 and L1995: C467 in ( C466 .vertices() ) by L1922 , L1923 , L1993 , L1701;
per cases ;
suppose L1996: C467 = C462;

thus L1997: (ex B398 being (Vertex of C456) st (B398 in D146 & B398 in ( C466 .vertices() ))) by L1996 , L1930 , L1993 , L1995;
end;
suppose L1998: C467 <> C462;

take D152 = C467;
L1999: (not D152 in { C462 }) by L1998 , TARSKI:def 1;
thus L2000: D152 in D146 by L1999 , L1994 , XBOOLE_0:def 5;
thus L2001: D152 in ( C466 .vertices() ) by L1995;
end;
end;
L2003: C462 in { C462 } by TARSKI:def 1;
L2004: D146 <> C459 by L2003 , L1926 , XBOOLE_0:def 5;
L2005: (not C457 in D146) by L1922 , L1923 , L1927 , L1654;
L2006: D146 is (VertexSeparator of C457 , C458) by L2005 , L1922 , L1923 , L1928 , L1992 , L1701;
thus L2007: contradiction by L2006 , L1924 , L2004 , L1927 , L1851;
end;
theorem
L2008: (for B399 being _Graph holds (for B400 , B401 being (Vertex of B399) holds ((B400 <> B401 & (not B400 , B401 are_adjacent )) implies (for B402 being (VertexSeparator of B400 , B401) holds (B402 is  minimal implies (for B403 being (removeVertices of B399 , B402) holds (for B404 being (Vertex of B403) holds (B404 = B401 implies (for B405 being (Vertex of B399) holds (B405 in B402 implies (ex B406 being (Vertex of B399) st (B406 in ( B403 .reachableFrom B404 ) & B405 , B406 are_adjacent ))))))))))))
proof
let C468 being _Graph;
let C469 , C470 being (Vertex of C468);
assume that
L2009: C469 <> C470
and
L2010: (not C469 , C470 are_adjacent );
let C471 being (VertexSeparator of C469 , C470);
assume that
L2011: C471 is  minimal;
reconsider D153 = C471 as (VertexSeparator of C470 , C469) by L2009 , L2010 , L1691;
L2012: D153 is  minimal by L2009 , L2010 , L2011 , L1890;
let C472 being (removeVertices of C468 , C471);
let C473 being (Vertex of C472);
assume that
L2013: C473 = C470;
let C474 being (Vertex of C468);
assume L2014: C474 in C471;
thus L2015: thesis by L2014 , L2009 , L2010 , L2013 , L2012 , L1921;
end;
begin
definition
let C475 being _Graph;
let C476 being (Walk of C475);
attr C476 is  chordal
means
:L2016: (ex B407 , B408 being  odd Nat st (( B407 + 2 ) < B408 & B408 <= ( len C476 ) & ( C476 . B407 ) <> ( C476 . B408 ) & (ex B409 being set st B409 Joins ( C476 . B407 ) , ( C476 . B408 ) , C475) & (for B410 being set holds (B410 in ( C476 .edges() ) implies (not B410 Joins ( C476 . B407 ) , ( C476 . B408 ) , C475)))));
end;
notation
let C477 being _Graph;
let C478 being (Walk of C477);
antonym C478 is  chordless for C478 is  chordal;
end;
theorem
L2019: (for B411 being _Graph holds (for B412 being (Walk of B411) holds (B412 is  chordal implies (ex B413 , B414 being  odd Nat st (( B413 + 2 ) < B414 & B414 <= ( len B412 ) & ( B412 . B413 ) <> ( B412 . B414 ) & (ex B415 being set st B415 Joins ( B412 . B413 ) , ( B412 . B414 ) , B411) & (B412 is  Cycle-like implies ((not (B413 = 1 & B414 = ( len B412 ))) & (not (B413 = 1 & B414 = ( ( len B412 ) - 2 ))) & (not (B413 = 3 & B414 = ( len B412 ))))))))))
proof
let C479 being _Graph;
let C480 being (Walk of C479);
given C481 , C482 being  odd Nat such that
L2020: ( C481 + 2 ) < C482
and
L2021: C482 <= ( len C480 )
and
L2022: ( C480 . C481 ) <> ( C480 . C482 )
and
L2023: (ex B416 being set st B416 Joins ( C480 . C481 ) , ( C480 . C482 ) , C479)
and
L2024: (for B417 being set holds (B417 in ( C480 .edges() ) implies (not B417 Joins ( C480 . C481 ) , ( C480 . C482 ) , C479)));

take C481;
take C482;
thus L2025: ( C481 + 2 ) < C482 by L2020;
thus L2026: C482 <= ( len C480 ) by L2021;
thus L2027: ( C480 . C481 ) <> ( C480 . C482 ) by L2022;
thus L2028: (ex B418 being set st B418 Joins ( C480 . C481 ) , ( C480 . C482 ) , C479) by L2023;
L2029: ( C480 .last() ) = ( C480 . ( len C480 ) );
assume L2030: C480 is  Cycle-like;
L2031: 3 <= ( len C480 ) by L2030 , GLIB_001:125;
reconsider D154 = ( ( len C480 ) - ( 2 * 1 ) ) as  odd (Element of ( NAT )) by L2031 , INT_1:5 , XXREAL_0:2;
L2032: ( C480 .first() ) = ( C480 . 1 );
L2033: ( C480 . 1 ) = ( C480 . ( len C480 ) ) by L2032 , L2030 , L2029 , GLIB_001:def 24;
reconsider D155 = D154 as  odd Nat;
reconsider D156 = ( D155 + 1 ) as  even Nat;
L2034: 1 <= D156 by NAT_1:12;
L2035: D155 < ( len C480 ) by XREAL_1:44;
L2036: D156 <= ( len C480 ) by L2035 , NAT_1:13;
L2037: ( D156 div 2 ) in ( dom ( C480 .edgeSeq() ) ) by L2036 , L2034 , GLIB_001:77;
L2038: ( ( C480 .edgeSeq() ) . ( D156 div 2 ) ) in ( rng ( C480 .edgeSeq() ) ) by L2037 , FUNCT_1:3;
L2039: ( C480 . ( ( ( len C480 ) - 2 ) + 1 ) ) in ( C480 .edges() ) by L2038 , L2034 , L2036 , GLIB_001:77;
thus L2040: (not (C481 = 1 & C482 = ( len C480 ))) by L2022 , L2030 , L2032 , L2029 , GLIB_001:def 24;
L2041: ( C480 . ( D155 + 1 ) ) Joins ( C480 . D155 ) , ( C480 . ( D155 + 2 ) ) , C479 by L2035 , GLIB_001:def 3;
thus L2042: (not (C481 = 1 & C482 = ( ( len C480 ) - 2 ))) by L2041 , L2024 , L2033 , L2039 , GLIB_000:14;
L2043: ( ( 2 * ( 0 ) ) + 1 ) is  odd  odd  odd  odd Nat;
L2044: ( ( 2 * 1 ) div 2 ) = 1 by NAT_D:18;
L2045: ( 1 + 1 ) <= ( len C480 ) by L2031 , XXREAL_0:2;
L2046: 1 in ( dom ( C480 .edgeSeq() ) ) by L2045 , L2044 , GLIB_001:77;
L2047: ( ( C480 .edgeSeq() ) . 1 ) in ( rng ( C480 .edgeSeq() ) ) by L2046 , FUNCT_1:3;
L2048: ( C480 . ( 1 + 1 ) ) in ( rng ( C480 .edgeSeq() ) ) by L2047 , L2044 , L2045 , GLIB_001:77;
L2049: 1 < ( len C480 ) by L2031 , XXREAL_0:2;
L2050: ( C480 . ( 1 + 1 ) ) Joins ( C480 . 1 ) , ( C480 . ( 1 + 2 ) ) , C479 by L2049 , L2043 , GLIB_001:def 3;
thus L2051: thesis by L2050 , L2024 , L2033 , L2048 , GLIB_000:14;
end;
theorem
L2052: (for B419 being _Graph holds (for B420 being (Path of B419) holds ((ex B421 , B422 being  odd Nat st (( B421 + 2 ) < B422 & B422 <= ( len B420 ) & (ex B423 being set st B423 Joins ( B420 . B421 ) , ( B420 . B422 ) , B419) & (B420 is  Cycle-like implies ((not (B421 = 1 & B422 = ( len B420 ))) & (not (B421 = 1 & B422 = ( ( len B420 ) - 2 ))) & (not (B421 = 3 & B422 = ( len B420 ))))))) implies B420 is  chordal)))
proof
let C483 being _Graph;
let C484 being (Path of C483);
given C485 , C486 being  odd Nat such that
L2053: ( C485 + 2 ) < C486
and
L2054: C486 <= ( len C484 )
and
L2055: (ex B424 being set st B424 Joins ( C484 . C485 ) , ( C484 . C486 ) , C483)
and
L2056: (C484 is  Cycle-like implies ((not (C485 = 1 & C486 = ( len C484 ))) & (not (C485 = 1 & C486 = ( ( len C484 ) - 2 ))) & (not (C485 = 3 & C486 = ( len C484 )))));

L2057: C486 in ( NAT ) by ORDINAL1:def 12;
take C485;
take C486;
thus L2058: ( C485 + 2 ) < C486 by L2053;
thus L2059: C486 <= ( len C484 ) by L2054;
L2060: C485 in ( NAT ) by ORDINAL1:def 12;
L2061: C485 < C486 by L2053 , NAT_1:12;
L2062: C485 < ( len C484 ) by L2061 , L2054 , XXREAL_0:2;
L2063:
now
assume L2064: ( len C484 ) = 1;
L2065: ( C485 + 2 ) < 1 by L2064 , L2053 , L2054 , XXREAL_0:2;
thus L2066: contradiction by L2065 , NAT_1:12;
end;
L2067: C484 is non  trivial by L2063 , GLIB_001:126;
thus L2068:now
L2069: ( C484 .last() ) = ( C484 . ( len C484 ) );
L2070: ( C484 .first() ) = ( C484 . 1 );
assume L2071: ( C484 . C485 ) = ( C484 . C486 );
L2072: C486 = ( len C484 ) by L2071 , L2054 , L2060 , L2057 , L2061 , GLIB_001:def 28;
L2073: C485 = 1 by L2054 , L2060 , L2057 , L2061 , L2071 , GLIB_001:def 28;
L2074: C484 is  closed by L2073 , L2071 , L2072 , L2070 , L2069 , GLIB_001:def 24;
thus L2075: contradiction by L2074 , L2054 , L2056 , L2060 , L2057 , L2061 , L2067 , L2071 , GLIB_001:def 28 , GLIB_001:def 31;
end;
thus L2076: (ex B425 being set st B425 Joins ( C484 . C485 ) , ( C484 . C486 ) , C483) by L2055;
let C487 being set;
assume that
L2077: C487 in ( C484 .edges() )
and
L2078: C487 Joins ( C484 . C485 ) , ( C484 . C486 ) , C483;
consider C488 being Nat such that L2079: C488 in ( dom ( C484 .edgeSeq() ) ) and L2080: ( ( C484 .edgeSeq() ) . C488 ) = C487 by L2077 , FINSEQ_2:10;
reconsider D157 = C488 as (Element of ( NAT )) by ORDINAL1:def 12;
set D158 = ( ( 2 * D157 ) - 1 );
L2081: 1 <= D157 by L2079 , FINSEQ_3:25;
L2082: ( 2 * 1 ) <= ( 2 * D157 ) by L2081 , XREAL_1:64;
L2083: ( 2 - 1 ) <= D158 by L2082 , XREAL_1:9;
L2084: D158 is (Element of ( NAT )) by L2083 , INT_1:3;
L2085: D157 <= ( len ( C484 .edgeSeq() ) ) by L2079 , FINSEQ_3:25;
L2086: ( ( C484 .edgeSeq() ) . D157 ) = ( C484 . ( 2 * D157 ) ) by L2085 , L2081 , GLIB_001:def 15;
reconsider D159 = D158 as  odd Nat by L2084;
L2087: ( 2 * D157 ) in ( dom C484 ) by L2079 , GLIB_001:78;
L2088: ( 2 * D157 ) <= ( len C484 ) by L2087 , FINSEQ_3:25;
L2089: ( D159 + 1 ) = ( 2 * D157 );
L2090: D159 < ( len C484 ) by L2089 , L2088 , NAT_1:13;
L2091: ( D159 + 2 ) <= ( len C484 ) by L2090 , L22;
L2092: D159 in ( NAT ) by ORDINAL1:def 12;
L2093: ( C484 . ( D159 + 1 ) ) Joins ( C484 . D159 ) , ( C484 . ( D159 + 2 ) ) , C483 by L2092 , L2090 , GLIB_001:def 3;
per cases  by L2078 , L2080 , L2086 , L2093 , GLIB_000:15;
suppose L2094: (( C484 . D159 ) = ( C484 . C485 ) & ( C484 . ( D159 + 2 ) ) = ( C484 . C486 ));

per cases  by XXREAL_0:1;
suppose L2095: D159 < C485;

thus L2096: contradiction by L2095 , L2060 , L2062 , L2092 , L2094 , GLIB_001:def 28;
end;
suppose L2097: D159 = C485;

per cases  by XXREAL_0:1;
suppose L2098: ( D159 + 2 ) < C486;

L2099: 1 <= D159 by ABIAN:12;
L2100: ( D159 + 2 ) = 1 by L2054 , L2057 , L2094 , L2098 , GLIB_001:def 28;
L2101: ( D159 + 2 ) < ( D159 + 1 ) by L2100 , L2099 , NAT_1:13;
thus L2102: contradiction by L2101 , XREAL_1:6;
end;
suppose L2103: ( D159 + 2 ) = C486;

thus L2104: contradiction by L2103 , L2053 , L2097;
end;
suppose L2105: ( D159 + 2 ) > C486;

L2106: ( D159 + 2 ) <= ( len C484 ) by L2090 , L22;
L2107: C486 = 1 by L2106 , L2057 , L2094 , L2105 , GLIB_001:def 28;
thus L2108: contradiction by L2107 , L2053 , ABIAN:12;
end;
end;
suppose L2110: D159 > C485;

thus L2111: contradiction by L2110 , L2060 , L2092 , L2090 , L2094 , GLIB_001:def 28;
end;
end;
suppose L2113: (( C484 . D159 ) = ( C484 . C486 ) & ( C484 . ( D159 + 2 ) ) = ( C484 . C485 ));

per cases  by XXREAL_0:1;
suppose L2114: D159 < C486;

L2115: C486 = ( len C484 ) by L2114 , L2054 , L2057 , L2092 , L2113 , GLIB_001:def 28;
L2116: D159 = 1 by L2054 , L2057 , L2092 , L2113 , L2114 , GLIB_001:def 28;
per cases  by XXREAL_0:1;
suppose L2117: ( D159 + 2 ) < C485;

thus L2118: contradiction by L2117 , L2060 , L2062 , L2113 , GLIB_001:def 28;
end;
suppose L2119: ( D159 + 2 ) = C485;

L2120: ( C484 .last() ) = ( C484 . ( len C484 ) );
L2121: ( C484 .first() ) = ( C484 . 1 );
L2122: C484 is  closed by L2121 , L2113 , L2116 , L2115 , L2120 , GLIB_001:def 24;
thus L2123: contradiction by L2122 , L2054 , L2056 , L2057 , L2067 , L2113 , L2114 , L2116 , L2119 , GLIB_001:def 28 , GLIB_001:def 31;
end;
suppose L2124: ( D159 + 2 ) > C485;

L2125: ( C484 .last() ) = ( C484 . ( len C484 ) );
L2126: ( D159 + 2 ) <= C486 by L2114 , L22;
L2127: ( C484 .first() ) = ( C484 . 1 );
L2128: ( D159 + 2 ) = ( len C484 ) by L2060 , L2091 , L2113 , L2124 , GLIB_001:def 28;
L2129: C485 = 1 by L2060 , L2091 , L2113 , L2124 , GLIB_001:def 28;
L2130: C484 is  closed by L2129 , L2113 , L2128 , L2127 , L2125 , GLIB_001:def 24;
thus L2131: contradiction by L2130 , L2054 , L2056 , L2060 , L2067 , L2113 , L2124 , L2128 , L2126 , GLIB_001:def 28 , GLIB_001:def 31 , XXREAL_0:1;
end;
end;
suppose L2133: D159 = C486;

per cases  by XXREAL_0:1;
suppose L2134: ( D159 + 2 ) < C485;

thus L2135: contradiction by L2134 , L2061 , L2133 , NAT_1:12;
end;
suppose L2136: ( D159 + 2 ) = C485;

thus L2137: contradiction by L2136 , L2061 , L2133 , NAT_1:12;
end;
suppose L2138: ( D159 + 2 ) > C485;

L2139: ( C484 .last() ) = ( C484 . ( len C484 ) );
L2140: ( C484 .first() ) = ( C484 . 1 );
L2141: ( D159 + 2 ) = ( len C484 ) by L2060 , L2091 , L2113 , L2138 , GLIB_001:def 28;
L2142: C485 = 1 by L2060 , L2091 , L2113 , L2138 , GLIB_001:def 28;
L2143: C484 is  closed by L2142 , L2113 , L2141 , L2140 , L2139 , GLIB_001:def 24;
thus L2144: contradiction by L2143 , L2056 , L2060 , L2067 , L2113 , L2133 , L2138 , L2141 , GLIB_001:def 28 , GLIB_001:def 31;
end;
end;
suppose L2146: D159 > C486;

thus L2147: contradiction by L2146 , L2057 , L2092 , L2090 , L2113 , GLIB_001:def 28;
end;
end;
end;
theorem
L2150: (for B426 , B427 being _Graph holds (B426 == B427 implies (for B428 being (Walk of B426) holds (for B429 being (Walk of B427) holds (B428 = B429 implies (B428 is  chordal implies B429 is  chordal))))))
proof
let C489 , C490 being _Graph;
assume that
L2151: C489 == C490;
let C491 being (Walk of C489);
let C492 being (Walk of C490);
assume that
L2152: C491 = C492;
given C493 , C494 being  odd Nat such that
L2153: ( C493 + 2 ) < C494
and
L2154: C494 <= ( len C491 )
and
L2155: ( C491 . C493 ) <> ( C491 . C494 )
and
L2156: (ex B430 being set st B430 Joins ( C491 . C493 ) , ( C491 . C494 ) , C489)
and
L2157: (for B431 being set holds (B431 in ( C491 .edges() ) implies (not B431 Joins ( C491 . C493 ) , ( C491 . C494 ) , C489)));

take C493;
take C494;
thus L2158: (( C493 + 2 ) < C494 & C494 <= ( len C492 ) & ( C492 . C493 ) <> ( C492 . C494 )) by L2152 , L2153 , L2154 , L2155;
consider C495 being set such that L2159: C495 Joins ( C491 . C493 ) , ( C491 . C494 ) , C489 by L2156;
L2160: C495 Joins ( C492 . C493 ) , ( C492 . C494 ) , C490 by L2151 , L2152 , L2159 , GLIB_000:88;
thus L2161: (ex B432 being set st B432 Joins ( C492 . C493 ) , ( C492 . C494 ) , C490) by L2160;
let C496 being set;
assume L2162: C496 in ( C492 .edges() );
L2163: C496 in ( C491 .edges() ) by L2162 , L2152 , GLIB_001:110;
L2164: (not C496 Joins ( C491 . C493 ) , ( C491 . C494 ) , C489) by L2163 , L2157;
thus L2165: thesis by L2164 , L2151 , L2152 , GLIB_000:88;
end;
theorem
L2166: (for B433 being _Graph holds (for B434 being non  empty (Subset of ( the_Vertices_of B433 )) holds (for B435 being (inducedSubgraph of B433 , B434) holds (for B436 being (Walk of B433) holds (for B437 being (Walk of B435) holds (B436 = B437 implies (B437 is  chordal iff B436 is  chordal)))))))
proof
let C497 being _Graph;
let C498 being non  empty (Subset of ( the_Vertices_of C497 ));
let C499 being (inducedSubgraph of C497 , C498);
let C500 being (Walk of C497);
let C501 being (Walk of C499);
assume that
L2167: C500 = C501;
thus L2168: (C501 is  chordal implies C500 is  chordal)
proof
given C502 , C503 being  odd Nat such that
L2169: ( C502 + 2 ) < C503
and
L2170: C503 <= ( len C501 )
and
L2171: ( C501 . C502 ) <> ( C501 . C503 )
and
L2172: (ex B438 being set st B438 Joins ( C501 . C502 ) , ( C501 . C503 ) , C499)
and
L2173: (for B439 being set holds (B439 in ( C501 .edges() ) implies (not B439 Joins ( C501 . C502 ) , ( C501 . C503 ) , C499)));

take C502;
take C503;
thus L2174: (( C502 + 2 ) < C503 & C503 <= ( len C500 ) & ( C500 . C502 ) <> ( C500 . C503 )) by L2167 , L2169 , L2170 , L2171;
consider C504 being set such that L2175: C504 Joins ( C501 . C502 ) , ( C501 . C503 ) , C499 by L2172;
L2176: C504 Joins ( C500 . C502 ) , ( C500 . C503 ) , C497 by L2167 , L2175 , GLIB_000:72;
thus L2177: (ex B440 being set st B440 Joins ( C500 . C502 ) , ( C500 . C503 ) , C497) by L2176;
let C505 being set;
assume L2178: C505 in ( C500 .edges() );
L2179: C505 in ( C501 .edges() ) by L2178 , L2167 , GLIB_001:110;
L2180: (not C505 Joins ( C500 . C502 ) , ( C500 . C503 ) , C499) by L2179 , L2167 , L2173;
thus L2181: thesis by L2180 , L2179 , GLIB_000:73;
end;

L2182: C498 = ( the_Vertices_of C499 ) by GLIB_000:def 37;
thus L2183: (C500 is  chordal implies C501 is  chordal)
proof
given C506 , C507 being  odd Nat such that
L2184: ( C506 + 2 ) < C507
and
L2185: C507 <= ( len C500 )
and
L2186: ( C500 . C506 ) <> ( C500 . C507 )
and
L2187: (ex B441 being set st B441 Joins ( C500 . C506 ) , ( C500 . C507 ) , C497)
and
L2188: (for B442 being set holds (B442 in ( C500 .edges() ) implies (not B442 Joins ( C500 . C506 ) , ( C500 . C507 ) , C497)));

take C506;
take C507;
thus L2189: (( C506 + 2 ) < C507 & C507 <= ( len C501 ) & ( C501 . C506 ) <> ( C501 . C507 )) by L2167 , L2184 , L2185 , L2186;
L2190: C506 in ( NAT ) by ORDINAL1:def 12;
L2191: C507 in ( NAT ) by ORDINAL1:def 12;
L2192: ( C500 . C507 ) in ( the_Vertices_of C499 ) by L2191 , L2167 , L2185 , GLIB_001:7;
L2193: C506 < C507 by L2184 , NAT_1:12;
L2194: ( C500 . C506 ) in ( the_Vertices_of C499 ) by L2193 , L2167 , L2185 , L2190 , GLIB_001:7 , XXREAL_0:2;
thus L2195: (ex B443 being set st B443 Joins ( C501 . C506 ) , ( C501 . C507 ) , C499) by L2194 , L2167 , L2182 , L2187 , L2192 , L218;
let C508 being set;
assume L2196: C508 in ( C501 .edges() );
L2197: C508 in ( C500 .edges() ) by L2196 , L2167 , GLIB_001:110;
L2198: (not C508 Joins ( C501 . C506 ) , ( C501 . C507 ) , C497) by L2197 , L2167 , L2188;
thus L2199: thesis by L2198 , GLIB_000:72;
end;

end;
theorem
L2184: (for B444 being _Graph holds (for B445 being (Walk of B444) holds ((B445 is  Cycle-like & B445 is  chordal & ( B445 .length() ) = 4) implies (ex B446 being set st (B446 Joins ( B445 . 1 ) , ( B445 . 5 ) , B444 or B446 Joins ( B445 . 3 ) , ( B445 . 7 ) , B444)))))
proof
let C509 being _Graph;
let C510 being (Walk of C509);
assume that
L2185: C510 is  Cycle-like
and
L2186: C510 is  chordal
and
L2187: ( C510 .length() ) = 4;
L2188: ( len C510 ) = ( ( 2 * 4 ) + 1 ) by L2187 , GLIB_001:112;
consider C511 , C512 being  odd Nat such that L2189: ( C511 + 2 ) < C512 and L2190: C512 <= ( len C510 ) and L2191: ( C510 . C511 ) <> ( C510 . C512 ) and L2192: (ex B447 being set st B447 Joins ( C510 . C511 ) , ( C510 . C512 ) , C509) and L2193: (C510 is  Cycle-like implies ((not (C511 = 1 & C512 = ( len C510 ))) & (not (C511 = 1 & C512 = ( ( len C510 ) - 2 ))) & (not (C511 = 3 & C512 = ( len C510 ))))) by L2186 , L2019;
consider C513 being set such that L2194: C513 Joins ( C510 . C511 ) , ( C510 . C512 ) , C509 by L2192;
assume L2195: (not (ex B448 being set st (B448 Joins ( C510 . 1 ) , ( C510 . 5 ) , C509 or B448 Joins ( C510 . 3 ) , ( C510 . 7 ) , C509)));
L2196:
now
assume L2197: C511 = 3;
L2198: C512 < ( len C510 ) by L2197 , L2185 , L2190 , L2193 , XXREAL_0:1;
L2199: C512 <= ( 9 - 2 ) by L2198 , L2188 , L14;
L2200: C512 <> 7 by L2195 , L2194 , L2197;
L2201: C512 < ( ( 2 * 3 ) + 1 ) by L2200 , L2199 , XXREAL_0:1;
L2202: C512 <= ( 7 - 2 ) by L2201 , L14;
thus L2203: contradiction by L2202 , L2189 , L2197;
end;
L2204:
now
reconsider D160 = ( ( 2 * 3 ) + 1 ) as  odd Nat;
assume L2205: C511 = 1;
L2206: C512 < ( len C510 ) by L2205 , L2185 , L2190 , L2193 , XXREAL_0:1;
L2207: C512 <= ( 9 - 2 ) by L2206 , L2188 , L14;
L2208: C512 < D160 by L2207 , L2185 , L2188 , L2193 , L2205 , XXREAL_0:1;
L2209: C512 <= ( D160 - 2 ) by L2208 , L14;
L2210: C512 <> 5 by L2195 , L2194 , L2205;
L2211: C512 < ( ( 2 * 2 ) + 1 ) by L2210 , L2209 , XXREAL_0:1;
L2212: C512 <= ( 5 - 2 ) by L2211 , L14;
thus L2213: contradiction by L2212 , L2189 , L2205;
end;
L2214: ( C510 .first() ) = ( C510 .last() ) by L2185 , GLIB_001:def 24;
L2215:
now
assume L2216: C511 = 5;
L2217:
now
assume L2218: C512 = 9;
L2219: C513 Joins ( C510 . 1 ) , ( C510 . 5 ) , C509 by L2218 , L2214 , L2188 , L2194 , L2216 , GLIB_000:14;
thus L2220: contradiction by L2219 , L2195;
end;
L2221: C512 < ( len C510 ) by L2217 , L2188 , L2190 , XXREAL_0:1;
L2222: C512 <= ( ( len C510 ) - 2 ) by L2221 , L14;
thus L2223: contradiction by L2222 , L2188 , L2189 , L2216;
end;
L2224: ( ( 0 ) + 1 ) <= C511 by ABIAN:12;
L2225: ( ( 2 * ( 0 ) ) + 1 ) < C511 by L2224 , L2204 , XXREAL_0:1;
L2226: ( 1 + 2 ) <= C511 by L2225 , L22;
L2227: ( ( 2 * 1 ) + 1 ) < C511 by L2226 , L2196 , XXREAL_0:1;
L2228: ( 3 + 2 ) <= C511 by L2227 , L22;
L2229: ( ( 2 * 2 ) + 1 ) < C511 by L2228 , L2215 , XXREAL_0:1;
L2230: ( 5 + 2 ) <= C511 by L2229 , L22;
L2231: ( 7 + 2 ) <= ( C511 + 2 ) by L2230 , XREAL_1:7;
thus L2232: contradiction by L2231 , L2188 , L2189 , L2190 , XXREAL_0:2;
end;
theorem
L2233: (for B449 being _Graph holds (for B450 being (Walk of B449) holds (B450 is  minlength implies B450 is  chordless)))
proof
let C514 being _Graph;
let C515 being (Walk of C514);
assume L2234: C515 is  minlength;
assume L2235: C515 is  chordal;
L2236: (ex B451 , B452 being  odd Nat st (( B451 + 2 ) < B452 & B452 <= ( len C515 ) & ( C515 . B451 ) <> ( C515 . B452 ) & (ex B453 being set st B453 Joins ( C515 . B451 ) , ( C515 . B452 ) , C514) & (C515 is  Cycle-like implies ((not (B451 = 1 & B452 = ( len C515 ))) & (not (B451 = 1 & B452 = ( ( len C515 ) - 2 ))) & (not (B451 = 3 & B452 = ( len C515 ))))))) by L2235 , L2019;
thus L2237: contradiction by L2236 , L2234 , L791;
end;
theorem
L2238: (for B454 being _Graph holds (for B455 being (Walk of B454) holds ((( len B455 ) = 5 & (not ( B455 .first() ) , ( B455 .last() ) are_adjacent )) implies B455 is  chordless)))
proof
let C516 being _Graph;
let C517 being (Walk of C516);
assume that
L2239: ( len C517 ) = 5
and
L2240: (not ( C517 .first() ) , ( C517 .last() ) are_adjacent );
assume L2241: C517 is  chordal;
consider C518 , C519 being  odd Nat such that L2242: ( C518 + 2 ) < C519 and L2243: C519 <= ( len C517 ) and L2244: ( C517 . C518 ) <> ( C517 . C519 ) and L2245: (ex B456 being set st B456 Joins ( C517 . C518 ) , ( C517 . C519 ) , C516) and L2246: (C517 is  Cycle-like implies ((not (C518 = 1 & C519 = ( len C517 ))) & (not (C518 = 1 & C519 = ( ( len C517 ) - 2 ))) & (not (C518 = 3 & C519 = ( len C517 ))))) by L2241 , L2019;
L2247:
now
assume L2248: C518 <> 1;
L2249: 1 <= C518 by L7;
L2250: ( ( 2 * ( 0 ) ) + 1 ) < C518 by L2249 , L2248 , XXREAL_0:1;
L2251: ( 1 + 2 ) <= C518 by L2250 , L22;
L2252: ( 3 + 2 ) <= ( C518 + 2 ) by L2251 , XREAL_1:7;
thus L2253: contradiction by L2252 , L2239 , L2242 , L2243 , XXREAL_0:2;
end;
L2254: ( 3 + 2 ) <= C519 by L2247 , L2242 , L22;
L2255: ( C517 . C519 ) = ( C517 .last() ) by L2254 , L2239 , L2243 , XXREAL_0:1;
thus L2256: contradiction by L2255 , L2240 , L2245 , L2247 , L920;
end;
L2257: (for B457 being _Graph holds (for B458 being (Walk of B457) holds (B458 is  chordal implies ( B458 .reverse() ) is  chordal)))
proof
let C520 being _Graph;
let C521 being (Walk of C520);
set D161 = ( C521 .reverse() );
assume L2258: C521 is  chordal;
consider C522 , C523 being  odd Nat such that L2259: ( C522 + 2 ) < C523 and L2260: C523 <= ( len C521 ) and L2261: ( C521 . C522 ) <> ( C521 . C523 ) and L2262: (ex B459 being set st B459 Joins ( C521 . C522 ) , ( C521 . C523 ) , C520) and L2263: (for B460 being set holds (B460 in ( C521 .edges() ) implies (not B460 Joins ( C521 . C522 ) , ( C521 . C523 ) , C520))) by L2258 , L2016;
consider C524 being set such that L2264: C524 Joins ( C521 . C522 ) , ( C521 . C523 ) , C520 by L2262;
set D162 = ( ( ( len C521 ) - C522 ) + 1 );
set D163 = ( ( ( len C521 ) - C523 ) + 1 );
L2265: C522 < ( C522 + 2 ) by XREAL_1:29;
L2266: C522 < C523 by L2265 , L2259 , XXREAL_0:2;
reconsider D164 = D162 , D165 = D163 as  odd (Element of ( NAT )) by L2266 , L2260 , FINSEQ_5:1 , XXREAL_0:2;
reconsider D166 = D164 , D167 = D165 as  odd Nat;
L2267: ( D167 + 2 ) < D166 by L2259 , L8;
L2268: 1 <= C523 by L7;
L2269: C523 in ( dom C521 ) by L2268 , L2260 , FINSEQ_3:25;
L2270: ( C521 . C523 ) = ( D161 . D167 ) by L2269 , GLIB_001:24;
L2271: 1 <= C522 by L7;
L2272: ( ( ( len C521 ) - C522 ) + 1 ) <= ( len C521 ) by INT_1:7 , XREAL_1:44;
L2273: D166 <= ( len D161 ) by L2272 , GLIB_001:21;
L2274: C522 <= ( len C521 ) by L2260 , L2266 , XXREAL_0:2;
L2275: C522 in ( dom C521 ) by L2274 , L2271 , FINSEQ_3:25;
L2276: ( C521 . C522 ) = ( D161 . D166 ) by L2275 , GLIB_001:24;
L2277: C524 Joins ( D161 . D167 ) , ( D161 . D166 ) , C520 by L2276 , L2264 , L2270 , GLIB_000:14;
L2278: ( C521 .edges() ) = ( D161 .edges() ) by GLIB_001:107;
L2279: (for B461 being set holds (B461 in ( D161 .edges() ) implies (not B461 Joins ( D161 . D167 ) , ( D161 . D166 ) , C520))) by L2278 , L2263 , L2276 , L2270 , GLIB_000:14;
thus L2280: thesis by L2279 , L2261 , L2267 , L2273 , L2276 , L2270 , L2277 , L2016;
end;
theorem
L2281: (for B462 being _Graph holds (for B463 being (Walk of B462) holds (B463 is  chordal iff ( B463 .reverse() ) is  chordal)))
proof
let C525 being _Graph;
let C526 being (Walk of C525);
thus L2282: (C526 is  chordal implies ( C526 .reverse() ) is  chordal) by L2257;
assume L2283: ( C526 .reverse() ) is  chordal;
L2284: ( ( C526 .reverse() ) .reverse() ) is  chordal by L2283 , L2257;
thus L2285: thesis by L2284;
end;
theorem
L2286: (for B464 being _Graph holds (for B465 being (Path of B464) holds ((B465 is  open & B465 is  chordless) implies (for B466 , B467 being  odd Nat holds ((B466 < B467 & B467 <= ( len B465 )) implies ((ex B468 being set st B468 Joins ( B465 . B466 ) , ( B465 . B467 ) , B464) iff ( B466 + 2 ) = B467))))))
proof
let C527 being _Graph;
let C528 being (Path of C527);
assume that
L2287: C528 is  open
and
L2288: C528 is  chordless;
L2289: C528 is  vertex-distinct by L2287 , L578;
let C529 , C530 being  odd Nat;
assume that
L2290: C529 < C530
and
L2291: C530 <= ( len C528 );
L2292: C529 <= ( len C528 ) by L2290 , L2291 , XXREAL_0:2;
L2293: C529 in ( NAT ) by ORDINAL1:def 12;
L2294: C530 in ( NAT ) by ORDINAL1:def 12;
L2295: ( C528 . C529 ) <> ( C528 . C530 ) by L2294 , L2287 , L2290 , L2291 , L2293 , GLIB_001:147;
thus L2296:now
assume L2297: (ex B469 being set st B469 Joins ( C528 . C529 ) , ( C528 . C530 ) , C527);
L2298:
now
assume L2299: ( C529 + 2 ) < C530;
L2300:
now
let C531 being set;
assume L2301: C531 in ( C528 .edges() );
consider C532 being  odd (Element of ( NAT )) such that L2302: C532 < ( len C528 ) and L2303: ( C528 . ( C532 + 1 ) ) = C531 by L2301 , GLIB_001:100;
L2304: C531 Joins ( C528 . C532 ) , ( C528 . ( C532 + 2 ) ) , C527 by L2302 , L2303 , GLIB_001:def 3;
L2305: ( C532 + 2 ) <= ( len C528 ) by L2302 , L22;
assume L2306: C531 Joins ( C528 . C529 ) , ( C528 . C530 ) , C527;
per cases  by L2304 , L2306 , GLIB_000:15;
suppose L2307: (( C528 . C529 ) = ( C528 . C532 ) & ( C528 . C530 ) = ( C528 . ( C532 + 2 ) ));

L2308: C529 = C532 by L2307 , L2293 , L2289 , L2292 , L2302 , GLIB_001:def 29;
thus L2309: contradiction by L2308 , L2291 , L2294 , L2289 , L2299 , L2305 , L2307 , GLIB_001:def 29;
end;
suppose L2310: (( C528 . C529 ) = ( C528 . ( C532 + 2 ) ) & ( C528 . C530 ) = ( C528 . C532 ));

L2311: C530 = C532 by L2310 , L2291 , L2294 , L2289 , L2302 , GLIB_001:def 29;
L2312: C529 = ( C532 + ( 2 * 1 ) ) by L2293 , L2289 , L2292 , L2305 , L2310 , GLIB_001:def 29;
L2313: C529 > C530 by L2312 , L2311 , XREAL_1:29;
L2314: ( C529 + 2 ) > C529 by XREAL_1:29;
thus L2315: contradiction by L2314 , L2299 , L2313 , XXREAL_0:2;
end;
end;
thus L2317: contradiction by L2300 , L2288 , L2291 , L2295 , L2297 , L2299 , L2016;
end;
L2318: ( C529 + 2 ) <= C530 by L2290 , L22;
thus L2319: ( C529 + 2 ) = C530 by L2318 , L2298 , XXREAL_0:1;
end;
assume L2320: ( C529 + 2 ) = C530;
take ( C528 . ( C529 + 1 ) );
L2321: C529 < ( len C528 ) by L2290 , L2291 , XXREAL_0:2;
thus L2322: thesis by L2321 , L2293 , L2320 , GLIB_001:def 3;
end;
theorem
L2323: (for B470 being _Graph holds (for B471 being (Path of B470) holds ((B471 is  open & B471 is  chordless) implies (for B472 , B473 being  odd Nat holds ((B472 < B473 & B473 <= ( len B471 )) implies (( B471 .cut (B472 , B473) ) is  chordless & ( B471 .cut (B472 , B473) ) is  open))))))
proof
let C533 being _Graph;
let C534 being (Path of C533);
assume that
L2324: C534 is  open
and
L2325: C534 is  chordless;
let C535 , C536 being  odd Nat;
assume that
L2326: C535 < C536
and
L2327: C536 <= ( len C534 );
set D168 = ( C534 .cut (C535 , C536) );
L2328: C536 in ( NAT ) by ORDINAL1:def 12;
L2329: C535 in ( NAT ) by ORDINAL1:def 12;
L2330:
now
assume L2331: D168 is  chordal;
consider C537 , C538 being  odd Nat such that L2332: ( C537 + 2 ) < C538 and L2333: C538 <= ( len D168 ) and L2334: ( D168 . C537 ) <> ( D168 . C538 ) and L2335: (ex B474 being set st B474 Joins ( D168 . C537 ) , ( D168 . C538 ) , C533) and L2336: (for B475 being set holds (B475 in ( D168 .edges() ) implies (not B475 Joins ( D168 . C537 ) , ( D168 . C538 ) , C533))) by L2331 , L2016;
consider C539 being set such that L2337: C539 Joins ( D168 . C537 ) , ( D168 . C538 ) , C533 by L2335;
set D169 = ( ( C535 + C537 ) - 1 );
set D170 = ( ( C535 + C538 ) - 1 );
L2338: 1 <= C538 by L7;
L2339: C538 in ( dom D168 ) by L2338 , L2333 , FINSEQ_3:25;
L2340: ( D168 . C538 ) = ( C534 . D170 ) by L2339 , L2326 , L2327 , L2329 , L2328 , GLIB_001:47;
L2341: D170 in ( dom C534 ) by L2326 , L2327 , L2329 , L2328 , L2339 , GLIB_001:47;
L2342: ( C537 + ( 0 ) ) < ( C537 + 2 ) by XREAL_1:8;
L2343: C537 < C538 by L2342 , L2332 , XXREAL_0:2;
L2344: C537 < ( len D168 ) by L2343 , L2333 , XXREAL_0:2;
L2345: 1 <= C537 by L7;
L2346: C537 in ( dom D168 ) by L2345 , L2344 , FINSEQ_3:25;
L2347: D169 in ( dom C534 ) by L2346 , L2326 , L2327 , L2329 , L2328 , GLIB_001:47;
reconsider D171 = D170 as  odd (Element of ( NAT )) by L2341;
reconsider D172 = D171 as  odd Nat;
L2348: D172 <= ( len C534 ) by L2341 , FINSEQ_3:25;
reconsider D173 = D169 as  odd (Element of ( NAT )) by L2347;
reconsider D174 = D173 as  odd Nat;
L2349: ( ( C537 + 2 ) + C535 ) < ( C538 + C535 ) by L2332 , XREAL_1:8;
L2350: ( ( ( C535 + C537 ) + 2 ) - 1 ) < ( ( C535 + C538 ) - 1 ) by L2349 , XREAL_1:9;
L2351: ( D174 + 2 ) < D172 by L2350;
L2352: ( D174 + ( 0 ) ) < ( D174 + 2 ) by XREAL_1:8;
L2353: D174 < D172 by L2352 , L2350 , XXREAL_0:2;
L2354: C539 Joins ( C534 . D174 ) , ( C534 . D172 ) , C533 by L2326 , L2327 , L2329 , L2328 , L2337 , L2346 , L2340 , GLIB_001:47;
thus L2355: contradiction by L2354 , L2324 , L2325 , L2351 , L2353 , L2348 , L2286;
end;
thus L2356: D168 is  chordless by L2330;
L2357:
now
assume L2358: D168 is  closed;
L2359: ( D168 .first() ) = ( D168 .last() ) by L2358 , GLIB_001:def 24;
L2360: ( C534 . C536 ) = ( D168 .last() ) by L2326 , L2327 , L2329 , L2328 , GLIB_001:37;
L2361: ( C534 . C535 ) = ( D168 .first() ) by L2326 , L2327 , L2329 , L2328 , GLIB_001:37;
thus L2362: contradiction by L2361 , L2324 , L2326 , L2327 , L2329 , L2328 , L2359 , L2360 , GLIB_001:147;
end;
thus L2363: thesis by L2357;
end;
theorem
L2364: (for B476 being _Graph holds (for B477 being non  empty (Subset of ( the_Vertices_of B476 )) holds (for B478 being (inducedSubgraph of B476 , B477) holds (for B479 being (Walk of B476) holds (for B480 being (Walk of B478) holds (B479 = B480 implies (B479 is  chordless iff B480 is  chordless)))))))
proof
let C540 being _Graph;
let C541 being non  empty (Subset of ( the_Vertices_of C540 ));
let C542 being (inducedSubgraph of C540 , C541);
let C543 being (Walk of C540);
let C544 being (Walk of C542);
assume that
L2365: C543 = C544;
thus L2366:now
assume L2367: C543 is  chordless;
assume L2368: C544 is  chordal;
consider C545 , C546 being  odd Nat such that L2369: ( C545 + 2 ) < C546 and L2370: C546 <= ( len C544 ) and L2371: ( C544 . C545 ) <> ( C544 . C546 ) and L2372: (ex B481 being set st B481 Joins ( C544 . C545 ) , ( C544 . C546 ) , C542) and L2373: (for B482 being set holds (B482 in ( C544 .edges() ) implies (not B482 Joins ( C544 . C545 ) , ( C544 . C546 ) , C542))) by L2368 , L2016;
consider C547 being set such that L2374: C547 Joins ( C544 . C545 ) , ( C544 . C546 ) , C542 by L2372;
L2375: C546 in ( NAT ) by ORDINAL1:def 12;
L2376: ( C544 . C546 ) in ( C544 .vertices() ) by L2375 , L2370 , GLIB_001:87;
L2377: ( C544 . C546 ) in ( the_Vertices_of C542 ) by L2376;
L2378: ( C544 . C546 ) in C541 by L2377 , GLIB_000:def 37;
L2379: ( C545 + ( 0 ) ) <= ( C545 + 2 ) by XREAL_1:7;
L2380: C545 <= C546 by L2379 , L2369 , XXREAL_0:2;
L2381: C545 <= ( len C544 ) by L2380 , L2370 , XXREAL_0:2;
L2382: C545 in ( NAT ) by ORDINAL1:def 12;
L2383: ( C544 . C545 ) in ( C544 .vertices() ) by L2382 , L2381 , GLIB_001:87;
L2384: ( C544 . C545 ) in ( the_Vertices_of C542 ) by L2383;
L2385: ( C544 . C545 ) in C541 by L2384 , GLIB_000:def 37;
L2386: (for B483 being set holds (B483 in ( C543 .edges() ) implies (not B483 Joins ( C543 . C545 ) , ( C543 . C546 ) , C540)))
proof
let C548 being set;
assume L2387: C548 in ( C543 .edges() );
L2388: C548 in ( C544 .edges() ) by L2387 , L2365 , GLIB_001:110;
assume L2389: C548 Joins ( C543 . C545 ) , ( C543 . C546 ) , C540;
thus L2390: contradiction by L2389 , L2365 , L2373 , L2378 , L2385 , L2388 , L218;
end;
L2391: C547 Joins ( C543 . C545 ) , ( C543 . C546 ) , C540 by L2365 , L2374 , GLIB_000:72;
thus L2392: contradiction by L2391 , L2365 , L2367 , L2369 , L2370 , L2371 , L2386 , L2016;
end;
assume L2393: C544 is  chordless;
assume L2394: C543 is  chordal;
consider C549 , C550 being  odd Nat such that L2395: ( C549 + 2 ) < C550 and L2396: C550 <= ( len C543 ) and L2397: ( C543 . C549 ) <> ( C543 . C550 ) and L2398: (ex B484 being set st B484 Joins ( C543 . C549 ) , ( C543 . C550 ) , C540) and L2399: (for B485 being set holds (B485 in ( C543 .edges() ) implies (not B485 Joins ( C543 . C549 ) , ( C543 . C550 ) , C540))) by L2394 , L2016;
consider C551 being set such that L2400: C551 Joins ( C543 . C549 ) , ( C543 . C550 ) , C540 by L2398;
L2401: (for B486 being set holds (B486 in ( C544 .edges() ) implies (not B486 Joins ( C544 . C549 ) , ( C544 . C550 ) , C542)))
proof
let C552 being set;
assume L2402: C552 in ( C544 .edges() );
L2403: C552 in ( C543 .edges() ) by L2402 , L2365 , GLIB_001:110;
assume L2404: C552 Joins ( C544 . C549 ) , ( C544 . C550 ) , C542;
L2405: C552 Joins ( C543 . C549 ) , ( C543 . C550 ) , C540 by L2404 , L2365 , GLIB_000:72;
thus L2406: contradiction by L2405 , L2399 , L2403;
end;
L2407: C550 in ( NAT ) by ORDINAL1:def 12;
L2408: ( C543 . C550 ) in ( C544 .vertices() ) by L2407 , L2365 , L2396 , GLIB_001:87;
L2409: ( C543 . C550 ) in ( the_Vertices_of C542 ) by L2408;
L2410: ( C543 . C550 ) in C541 by L2409 , GLIB_000:def 37;
L2411: ( C549 + ( 0 ) ) <= ( C549 + 2 ) by XREAL_1:7;
L2412: C549 <= C550 by L2411 , L2395 , XXREAL_0:2;
L2413: C549 <= ( len C543 ) by L2412 , L2396 , XXREAL_0:2;
L2414: C549 in ( NAT ) by ORDINAL1:def 12;
L2415: ( C543 . C549 ) in ( C544 .vertices() ) by L2414 , L2365 , L2413 , GLIB_001:87;
L2416: ( C543 . C549 ) in ( the_Vertices_of C542 ) by L2415;
L2417: ( C543 . C549 ) in C541 by L2416 , GLIB_000:def 37;
L2418: C551 Joins ( C544 . C549 ) , ( C544 . C550 ) , C542 by L2417 , L2365 , L2400 , L2410 , L218;
thus L2419: contradiction by L2418 , L2365 , L2393 , L2395 , L2396 , L2397 , L2401 , L2016;
end;
definition
let C553 being _Graph;
attr C553 is  chordal
means
:L2420: (for B487 being (Walk of C553) holds ((( B487 .length() ) > 3 & B487 is  Cycle-like) implies B487 is  chordal));
end;
theorem
L2422: (for B488 , B489 being _Graph holds (B488 == B489 implies (B488 is  chordal implies B489 is  chordal)))
proof
let C554 , C555 being _Graph;
assume that
L2423: C554 == C555;
assume L2424: C554 is  chordal;
L2425:
now
let C556 being (Walk of C555);
assume that
L2426: ( C556 .length() ) > 3
and
L2427: C556 is  Cycle-like;
reconsider D175 = C556 as (Walk of C554) by L2423 , GLIB_001:179;
L2428: ( ( 2 * ( D175 .length() ) ) + 1 ) = ( len C556 ) by GLIB_001:112;
L2429: ( ( 2 * ( D175 .length() ) ) + 1 ) = ( ( 2 * ( C556 .length() ) ) + 1 ) by L2428 , GLIB_001:112;
L2430: D175 is  Cycle-like by L2423 , L2427 , L293;
L2431: D175 is  chordal by L2430 , L2424 , L2426 , L2429 , L2420;
thus L2432: C556 is  chordal by L2431 , L2423 , L2150;
end;
thus L2433: thesis by L2425 , L2420;
end;
theorem
L2434: (for B490 being  finite _Graph holds (( card ( the_Vertices_of B490 ) ) <= 3 implies B490 is  chordal))
proof
let C557 being  finite _Graph;
assume that
L2435: ( card ( the_Vertices_of C557 ) ) <= 3;
L2436:
now
reconsider D176 = ( ( 2 * 3 ) + 1 ) as  odd Nat;
reconsider D177 = ( ( 2 * 2 ) + 1 ) as  odd Nat;
reconsider D178 = ( ( 2 * 1 ) + 1 ) as  odd Nat;
reconsider D179 = ( ( 2 * ( 0 ) ) + 1 ) as  odd Nat;
let C558 being (Walk of C557);
assume that
L2437: ( C558 .length() ) > 3
and
L2438: C558 is  Cycle-like;
set D180 = ( C558 . D177 );
set D181 = ( C558 . D178 );
set D182 = ( C558 . D176 );
set D183 = ( C558 . D179 );
L2439: ( C558 .length() ) >= ( 3 + 1 ) by L2437 , NAT_1:13;
L2440: ( 2 * ( C558 .length() ) ) >= ( 2 * 4 ) by L2439 , XREAL_1:64;
L2441: ( ( 2 * ( C558 .length() ) ) + 1 ) >= ( 8 + 1 ) by L2440 , XREAL_1:7;
L2442: ( len C558 ) >= 9 by L2441 , GLIB_001:112;
L2443: D176 < ( len C558 ) by L2442 , XXREAL_0:2;
L2444: D183 <> D182 by L2443 , L2438 , GLIB_001:def 28;
L2445: D178 < ( len C558 ) by L2442 , XXREAL_0:2;
L2446: D183 <> D181 by L2445 , L2438 , GLIB_001:def 28;
L2447: D177 < ( len C558 ) by L2442 , XXREAL_0:2;
L2448: D181 <> D180 by L2447 , L2438 , GLIB_001:def 28;
L2449: D180 <> D182 by L2438 , L2443 , GLIB_001:def 28;
L2450: D181 <> D182 by L2438 , L2443 , GLIB_001:def 28;
L2451:
now
let C559 being set;
assume L2452: C559 in { D183 , D181 , D180 , D182 };
L2453:
now
per cases  by L2452 , ENUMSET1:def 2;
suppose L2454: C559 = D183;

thus L2455: C559 in ( the_Vertices_of C557 ) by L2454 , L2442 , GLIB_001:7 , XXREAL_0:2;
end;
suppose L2456: C559 = D181;

thus L2457: C559 in ( the_Vertices_of C557 ) by L2456 , L2442 , GLIB_001:7 , XXREAL_0:2;
end;
suppose L2458: C559 = D180;

thus L2459: C559 in ( the_Vertices_of C557 ) by L2458 , L2442 , GLIB_001:7 , XXREAL_0:2;
end;
suppose L2460: C559 = D182;

thus L2461: C559 in ( the_Vertices_of C557 ) by L2460 , L2442 , GLIB_001:7 , XXREAL_0:2;
end;
end;
thus L2463: C559 in ( the_Vertices_of C557 ) by L2453;
end;
L2464: { D183 , D181 , D180 , D182 } c= ( the_Vertices_of C557 ) by L2451 , TARSKI:def 3;
L2465: D183 <> D180 by L2438 , L2447 , GLIB_001:def 28;
L2466: ( card { D183 , D181 , D180 , D182 } ) = 4 by L2465 , L2446 , L2444 , L2448 , L2450 , L2449 , CARD_2:59;
L2467: 4 <= ( card ( the_Vertices_of C557 ) ) by L2466 , L2464 , NAT_1:43;
thus L2468: contradiction by L2467 , L2435 , XXREAL_0:2;
end;
L2469: (for B491 being (Walk of C557) holds ((( B491 .length() ) > 3 & B491 is  Cycle-like) implies B491 is  chordal)) by L2436;
thus L2470: thesis by L2469 , L2420;
end;
registration
cluster  trivial  finite  chordal for _Graph;
existence
proof
set D184 = the  trivial  finite _Graph;
consider C560 being (Vertex of D184) such that L2471: ( the_Vertices_of D184 ) = { C560 } by GLIB_000:22;
L2472:
now
reconsider D185 = ( ( 2 * 2 ) + 1 ) as  odd Nat;
reconsider D186 = ( ( 2 * 1 ) + 1 ) as  odd Nat;
let C561 being (Walk of D184);
assume that
L2473: ( C561 .length() ) > 3
and
L2474: C561 is  Cycle-like;
L2475: ( 2 * ( C561 .length() ) ) > ( 2 * 3 ) by L2473 , XREAL_1:68;
L2476: ( ( 2 * ( C561 .length() ) ) + 1 ) > ( 6 + 1 ) by L2475 , XREAL_1:8;
L2477: ( len C561 ) > 7 by L2476 , GLIB_001:112;
L2478: D186 <= ( len C561 ) by L2477 , XXREAL_0:2;
L2479: ( C561 . D186 ) in ( C561 .vertices() ) by L2478 , GLIB_001:87;
L2480: ( C561 . D186 ) = C560 by L2479 , L2471 , TARSKI:def 1;
L2481: D185 <= ( len C561 ) by L2477 , XXREAL_0:2;
L2482: ( C561 . D185 ) in ( C561 .vertices() ) by L2481 , GLIB_001:87;
L2483: ( C561 . D185 ) = C560 by L2482 , L2471 , TARSKI:def 1;
thus L2484: contradiction by L2483 , L2474 , L2481 , L2480 , GLIB_001:def 28;
end;
L2485: (for B492 being (Walk of D184) holds ((( B492 .length() ) > 3 & B492 is  Cycle-like) implies B492 is  chordal)) by L2472;
L2486: D184 is  chordal by L2485 , L2420;
thus L2487: thesis by L2486;
end;
cluster non  trivial  finite  simple  chordal for _Graph;
existence
proof
set D187 = { ( 0 ) , 1 };
set D188 = { ( 0 ) };
set D189 = ( ( 0 ) .--> ( 0 ) );
set D190 = ( ( 0 ) .--> 1 );
L2488: ( dom D190 ) = D188 by FUNCOP_1:13;
L2489:
now
let C562 being set;
assume L2490: C562 in D188;
L2491: C562 = ( 0 ) by L2490 , TARSKI:def 1;
L2492: ( D190 . C562 ) = 1 by L2491 , FUNCOP_1:72;
thus L2493: ( D190 . C562 ) in D187 by L2492 , TARSKI:def 2;
end;
L2494:
now
let C563 being set;
assume L2495: C563 in D188;
L2496: C563 = ( 0 ) by L2495 , TARSKI:def 1;
L2497: ( D189 . C563 ) = ( 0 ) by L2496 , FUNCOP_1:72;
thus L2498: ( D189 . C563 ) in D187 by L2497 , TARSKI:def 2;
end;
reconsider D191 = D190 as (Function of D188 , D187) by L2488 , L2489 , FUNCT_2:3;
L2499: ( dom D189 ) = D188 by FUNCOP_1:13;
reconsider D192 = D189 as (Function of D188 , D187) by L2499 , L2494 , FUNCT_2:3;
set D193 = ( createGraph (D187 , D188 , D192 , D191) );
take D193;
L2500: ( the_Source_of D193 ) = D192 by GLIB_000:6;
L2501: ( ( the_Source_of D193 ) . ( 0 ) ) = ( 0 ) by L2500 , FUNCOP_1:72;
L2502: ( the_Vertices_of D193 ) = D187 by GLIB_000:6;
L2503:
now
assume L2504: ( card ( the_Vertices_of D193 ) ) = 1;
L2505: (ex B493 being set st ( the_Vertices_of D193 ) = { B493 }) by L2504 , CARD_2:42;
thus L2506: contradiction by L2505 , L2502 , ZFMISC_1:5;
end;
thus L2507: (D193 is non  trivial & D193 is  finite) by L2503 , GLIB_000:def 19;
L2508: ( the_Target_of D193 ) = D191 by GLIB_000:6;
L2509: ( ( the_Target_of D193 ) . ( 0 ) ) = 1 by L2508 , FUNCOP_1:72;
L2510: ( the_Edges_of D193 ) = D188 by GLIB_000:6;
L2511: ( 0 ) in ( the_Edges_of D193 ) by L2510 , TARSKI:def 1;
L2512: ( 0 ) Joins ( 0 ) , 1 , D193 by L2511 , L2501 , L2509 , GLIB_000:def 13;
L2513:
now
let C564 being set;
let C565 being set;
assume that
L2514: C565 Joins C564 , C564 , D193;
reconsider D194 = C564 as (Vertex of D193) by L2514 , GLIB_000:13;
L2515: C565 in ( the_Edges_of D193 ) by L2514 , GLIB_000:def 13;
L2516: C565 Joins ( 0 ) , 1 , D193 by L2515 , L2510 , L2512 , TARSKI:def 1;
L2517: ((( 0 ) = D194 & 1 = D194) or (( 0 ) = D194 & 1 = D194)) by L2516 , L2514 , GLIB_000:15;
thus L2518: contradiction by L2517;
end;
L2519: D193 is  loopless by L2513 , GLIB_000:18;
L2520:
now
let C566 , C567 , C568 , C569 being set;
assume that
L2521: C566 Joins C568 , C569 , D193
and
L2522: C567 Joins C568 , C569 , D193;
L2523: C566 in { ( 0 ) } by L2510 , L2521 , GLIB_000:def 13;
L2524: C566 = ( 0 ) by L2523 , TARSKI:def 1;
assume L2525: C566 <> C567;
L2526: C567 in { ( 0 ) } by L2510 , L2522 , GLIB_000:def 13;
thus L2527: contradiction by L2526 , L2525 , L2524 , TARSKI:def 1;
end;
L2528: D193 is  non-multi by L2520 , GLIB_000:def 20;
thus L2529: D193 is  simple by L2528 , L2519;
L2530: ( card ( the_Vertices_of D193 ) ) = 2 by L2502 , CARD_2:57;
thus L2531: thesis by L2530 , L2434;
end;
cluster  complete ->  chordal for _Graph;
correctness
proof
let C570 being _Graph;
assume L2532: C570 is  complete;
L2533:
now
reconsider D195 = ( ( 2 * 3 ) + 1 ) as  odd Nat;
reconsider D196 = ( ( 2 * 1 ) + 1 ) as  odd Nat;
let C571 being (Walk of C570);
assume that
L2534: ( C571 .length() ) > 3
and
L2535: C571 is  Cycle-like;
L2536: ( C571 .length() ) >= ( 3 + 1 ) by L2534 , NAT_1:13;
L2537: ( 2 * ( C571 .length() ) ) >= ( 2 * 4 ) by L2536 , XREAL_1:64;
L2538: ( ( 2 * ( C571 .length() ) ) + 1 ) >= ( 8 + 1 ) by L2537 , XREAL_1:7;
L2539: ( len C571 ) >= 9 by L2538 , GLIB_001:112;
reconsider D197 = ( C571 . D196 ) as (Vertex of C570) by L2539 , GLIB_001:7 , XXREAL_0:2;
L2540: (not (D196 = 3 & D195 = ( len C571 ))) by L2539;
reconsider D198 = ( C571 . D195 ) as (Vertex of C570) by L2539 , GLIB_001:7 , XXREAL_0:2;
L2541: D195 <= ( len C571 ) by L2539 , XXREAL_0:2;
L2542: D197 <> D198 by L2541 , L2535 , GLIB_001:def 28;
L2543: D197 , D198 are_adjacent  by L2542 , L2532 , L1483;
L2544: (ex B494 being set st B494 Joins D197 , D198 , C570) by L2543 , L920;
L2545: ( D196 + 2 ) < D195;
L2546: D195 <= ( len C571 ) by L2539 , XXREAL_0:2;
thus L2547: C571 is  chordal by L2546 , L2535 , L2544 , L2545 , L2540 , L2052;
end;
thus L2548: thesis by L2533 , L2420;
end;
end;
registration
let C572 being  chordal _Graph;
let C573 being set;
cluster  ->  chordal for (inducedSubgraph of C572 , C573);
coherence
proof
let C574 being (inducedSubgraph of C572 , C573);
L2550:
now
per cases ;
suppose L2551: (not C573 is non  empty non  empty non  empty non  empty (Subset of ( the_Vertices_of C572 )));

L2552: C574 == C572 by L2551 , GLIB_000:def 37;
thus L2553: thesis by L2552 , L2422;
end;
suppose L2554: C573 is non  empty non  empty non  empty non  empty (Subset of ( the_Vertices_of C572 ));

L2555: C573 = ( the_Vertices_of C574 ) by L2554 , GLIB_000:def 37;
L2556:
now
let C575 being (Walk of C574);
assume that
L2557: ( C575 .length() ) > 3
and
L2558: C575 is  Cycle-like;
reconsider D199 = C575 as (Walk of C572) by GLIB_001:167;
reconsider D200 = D199 as (Path of C572) by L2558 , GLIB_001:175;
L2559: D200 is non  trivial by L2558 , GLIB_001:176;
L2560: ( D200 .length() ) > 3 by L2557 , GLIB_001:114;
L2561: D200 is  closed by L2558 , GLIB_001:176;
L2562: D200 is  Cycle-like by L2561 , L2559 , GLIB_001:def 31;
L2563: D200 is  chordal by L2562 , L2560 , L2420;
consider C576 , C577 being  odd Nat such that L2564: ( C576 + 2 ) < C577 and L2565: C577 <= ( len D200 ) and L2566: ( D200 . C576 ) <> ( D200 . C577 ) and L2567: (ex B495 being set st B495 Joins ( D200 . C576 ) , ( D200 . C577 ) , C572) and L2568: (D200 is  Cycle-like implies ((not (C576 = 1 & C577 = ( len D200 ))) & (not (C576 = 1 & C577 = ( ( len D200 ) - 2 ))) & (not (C576 = 3 & C577 = ( len D200 ))))) by L2563 , L2019;
consider C578 being set such that L2569: C578 Joins ( D200 . C576 ) , ( D200 . C577 ) , C572 by L2567;
L2570: ( C576 + ( 0 ) ) <= ( C576 + 2 ) by XREAL_1:7;
L2571: C576 <= C577 by L2570 , L2564 , XXREAL_0:2;
L2572: C577 in ( NAT ) by ORDINAL1:def 12;
L2573: ( D200 . C577 ) in ( the_Vertices_of C574 ) by L2572 , L2565 , GLIB_001:7;
L2574: C576 in ( NAT ) by ORDINAL1:def 12;
L2575: ( D200 . C576 ) in ( the_Vertices_of C574 ) by L2574 , L2565 , L2571 , GLIB_001:7 , XXREAL_0:2;
L2576: C578 Joins ( D200 . C576 ) , ( C575 . C577 ) , C574 by L2575 , L2555 , L2569 , L2573 , L218;
thus L2577: C575 is  chordal by L2576 , L2558 , L2561 , L2559 , L2564 , L2565 , L2568 , L2052 , GLIB_001:def 31;
end;
thus L2578: thesis by L2556 , L2420;
end;
end;
thus L2580: thesis by L2550;
end;
end;
theorem
L2582: (for B496 being  chordal _Graph holds (for B497 being (Path of B496) holds ((B497 is  open & B497 is  chordless) implies (for B498 , B499 being set holds (((not B498 in ( B497 .vertices() )) & B499 Joins ( B497 .last() ) , B498 , B496 & (not (ex B500 being set st B500 Joins ( B497 . ( ( len B497 ) - 2 ) ) , B498 , B496))) implies (( B497 .addEdge B499 ) is  Path-like & ( B497 .addEdge B499 ) is  open & ( B497 .addEdge B499 ) is  chordless))))))
proof
let C579 being  chordal _Graph;
let C580 being (Path of C579);
assume that
L2583: C580 is  open
and
L2584: C580 is  chordless;
let C581 , C582 being set;
assume that
L2585: (not C581 in ( C580 .vertices() ))
and
L2586: C582 Joins ( C580 .last() ) , C581 , C579
and
L2587: (not (ex B501 being set st B501 Joins ( C580 . ( ( len C580 ) - 2 ) ) , C581 , C579));
reconsider D201 = ( C580 .addEdge C582 ) as (Path of C579) by L2583 , L2585 , L2586 , GLIB_001:151;
L2588: ( len D201 ) = ( ( len C580 ) + 2 ) by L2586 , GLIB_001:64;
defpred S4[ Nat ] means ((4 <= ( 2 * $1 ) & ( 2 * $1 ) <= ( ( len C580 ) + 1 )) implies (for B502 being  odd Nat holds (( B502 + ( 2 * $1 ) ) = ( ( len C580 ) + 2 ) implies (not (ex B503 being set st B503 Joins ( D201 . B502 ) , C581 , C579)))));
L2589:
now
let C583 being  odd Nat;
assume that
L2590: C583 <= ( len C580 );
L2591: 1 <= C583 by L7;
L2592: C583 in ( dom C580 ) by L2591 , L2590 , FINSEQ_3:25;
thus L2593: ( C580 . C583 ) = ( D201 . C583 ) by L2592 , L2586 , GLIB_001:65;
end;
L2594: ( D201 .last() ) = C581 by L2586 , GLIB_001:63;
L2595: (for B504 being Nat holds ((for B505 being Nat holds (B505 < B504 implies S4[ B505 ])) implies S4[ B504 ]))
proof
let C584 being Nat;
assume that
L2596: (for B506 being Nat holds (B506 < C584 implies S4[ B506 ]));
assume that
L2597: 4 <= ( 2 * C584 )
and
L2598: ( 2 * C584 ) <= ( ( len C580 ) + 1 );
let C585 being  odd Nat;
assume that
L2599: ( C585 + ( 2 * C584 ) ) = ( ( len C580 ) + 2 );
L2600: ( C585 + 4 ) <= ( C585 + ( 2 * C584 ) ) by L2597 , XREAL_1:7;
L2601: ( ( C585 + 4 ) - 4 ) <= ( ( ( len C580 ) + 2 ) - 4 ) by L2600 , L2599 , XREAL_1:9;
L2602: ( ( len C580 ) - 2 ) <= ( len C580 ) by XREAL_1:43;
L2603: C585 <= ( len C580 ) by L2602 , L2601 , XXREAL_0:2;
L2604: C585 in ( NAT ) by ORDINAL1:def 12;
let C586 being set;
assume that
L2605: C586 Joins ( D201 . C585 ) , C581 , C579;
per cases  by L2601 , XXREAL_0:1;
suppose L2606: C585 = ( ( len C580 ) - 2 );

L2607: ( D201 . C585 ) = ( C580 . ( ( len C580 ) - 2 ) ) by L2606 , L2589 , XREAL_1:43;
thus L2608: contradiction by L2607 , L2587 , L2605;
end;
suppose L2609: C585 < ( ( len C580 ) - ( 2 * 1 ) );

reconsider D202 = ( ( len C580 ) + 2 ) as  odd (Element of ( NAT ));
reconsider D203 = C585 as  odd (Element of ( NAT )) by ORDINAL1:def 12;
set D204 = ( D201 .cut (D203 , D202) );
L2610: ( len C580 ) < ( ( len C580 ) + 2 ) by XREAL_1:29;
L2611: C585 <= ( ( len C580 ) + 2 ) by L2610 , L2603 , XXREAL_0:2;
L2612: ( D204 .last() ) = C581 by L2611 , L2594 , L2588 , GLIB_001:37;
L2613: ( ( len D204 ) + C585 ) = ( ( ( len C580 ) + 2 ) + 1 ) by L2588 , L2611 , GLIB_001:36;
L2614:
now
let C587 being  even Nat;
assume that
L2615: C587 < ( ( len D204 ) - 1 );
L2616: ( C585 + C587 ) < ( ( ( len D204 ) - 1 ) + C585 ) by L2615 , XREAL_1:8;
L2617: ( C585 + C587 ) <= ( ( ( len C580 ) + 2 ) - 2 ) by L2616 , L2613 , L14;
L2618: ( ( len D204 ) - 1 ) < ( len D204 ) by XREAL_1:44;
L2619: C587 < ( len D204 ) by L2618 , L2615 , XXREAL_0:2;
L2620: C587 in ( NAT ) by ORDINAL1:def 12;
L2621: ( C585 + C587 ) in ( dom D201 ) by L2620 , L2588 , L2611 , L2619 , GLIB_001:36;
L2622: 1 <= ( C585 + C587 ) by L2621 , FINSEQ_3:25;
L2623: ( D204 . ( C587 + 1 ) ) = ( D201 . ( C585 + C587 ) ) by L2588 , L2611 , L2620 , L2619 , GLIB_001:36;
thus L2624: (( D204 . ( C587 + 1 ) ) = ( C580 . ( C585 + C587 ) ) & ( C585 + C587 ) in ( dom C580 )) by L2623 , L2589 , L2622 , L2617 , FINSEQ_3:25;
end;
set D205 = ( D204 .addEdge C586 );
L2625: ( D204 .first() ) = ( D201 . C585 ) by L2588 , L2611 , GLIB_001:37;
L2626: ( D204 .first() ) = ( D201 . C585 ) by L2588 , L2611 , GLIB_001:37;
L2627: C586 Joins ( D204 .last() ) , ( D204 .first() ) , C579 by L2626 , L2605 , L2612 , GLIB_000:14;
L2628:
now
let C588 being  odd Nat;
assume that
L2629: C588 <= ( len D204 );
L2630: 1 <= C588 by L7;
L2631: C588 in ( dom D204 ) by L2630 , L2629 , FINSEQ_3:25;
thus L2632: ( D205 . C588 ) = ( D204 . C588 ) by L2631 , L2627 , GLIB_001:65;
end;
L2633: ( ( ( len C580 ) + 3 ) - ( ( len C580 ) - 2 ) ) < ( ( ( len C580 ) + 3 ) - C585 ) by L2609 , XREAL_1:15;
L2634: 3 < ( len D204 ) by L2633 , L2613 , XXREAL_0:2;
L2635: ( ( len D204 ) + 2 ) > ( 5 + 2 ) by L2613 , L2633 , XREAL_1:8;
L2636: ( len D205 ) > 7 by L2635 , L2605 , L2612 , GLIB_000:14 , GLIB_001:64;
L2637:
now
assume L2638: ( D205 .length() ) <= 3;
L2639: ( 2 * ( D205 .length() ) ) <= ( 2 * 3 ) by L2638 , XREAL_1:64;
L2640: ( ( 2 * ( D205 .length() ) ) + 1 ) <= ( ( 2 * 3 ) + 1 ) by L2639 , XREAL_1:6;
thus L2641: contradiction by L2640 , L2636 , GLIB_001:112;
end;
L2642: ( C580 .vertexAt C585 ) = ( C580 . C585 ) by L2603 , GLIB_001:def 8;
L2643: ( C580 . C585 ) in ( C580 .vertices() ) by L2642 , L2604 , L2601 , L2602 , GLIB_001:89 , XXREAL_0:2;
L2644: ( D204 .first() ) in ( C580 .vertices() ) by L2643 , L2589 , L2601 , L2602 , L2625 , XXREAL_0:2;
L2645: D204 is  open by L2644 , L2585 , L2612 , GLIB_001:def 24;
L2646: D205 is  Cycle-like by L2645 , L2605 , L2634 , L2626 , L2612 , L596 , GLIB_000:14;
L2647: D205 is  chordal by L2646 , L2637 , L2420;
consider C589 , C590 being  odd Nat such that L2648: ( C589 + 2 ) < C590 and L2649: C590 <= ( len D205 ) and L2650: ( D205 . C589 ) <> ( D205 . C590 ) and L2651: (ex B507 being set st B507 Joins ( D205 . C589 ) , ( D205 . C590 ) , C579) and L2652: (D205 is  Cycle-like implies ((not (C589 = 1 & C590 = ( len D205 ))) & (not (C589 = 1 & C590 = ( ( len D205 ) - 2 ))) & (not (C589 = 3 & C590 = ( len D205 ))))) by L2647 , L2019;
consider C591 being set such that L2653: C591 Joins ( D205 . C589 ) , ( D205 . C590 ) , C579 by L2651;
L2654: 1 <= C589 by L7;
L2655: ( 1 - 1 ) <= ( C589 - 1 ) by L2654 , XREAL_1:9;
reconsider D206 = ( C589 - 1 ) as  even (Element of ( NAT )) by L2655 , INT_1:3;
reconsider D207 = D206 as  even Nat;
L2656: ( len D205 ) = ( ( len D204 ) + 2 ) by L2605 , L2612 , GLIB_000:14 , GLIB_001:64;
L2657: ( C589 + 2 ) < ( ( len D204 ) + 2 ) by L2656 , L2648 , L2649 , XXREAL_0:2;
L2658: ( ( C589 + 2 ) - 2 ) < ( ( ( len D204 ) + 2 ) - 2 ) by L2657 , XREAL_1:9;
L2659: D207 < ( ( len D204 ) - 1 ) by L2658 , XREAL_1:9;
L2660: ( D204 . ( D207 + 1 ) ) = ( C580 . ( C585 + D207 ) ) by L2659 , L2614;
L2661: ( C585 + D207 ) in ( dom C580 ) by L2614 , L2659;
L2662: ( C585 + D207 ) <= ( len C580 ) by L2661 , FINSEQ_3:25;
L2663: ( D205 .last() ) = ( D201 . C585 ) by L2625 , L2627 , GLIB_001:63;
L2664:
now
assume L2665: C590 = ( len D205 );
L2666: C591 Joins ( C580 . ( C585 + D207 ) ) , ( D201 . C585 ) , C579 by L2665 , L2628 , L2663 , L2653 , L2658 , L2660;
L2667: C591 Joins ( C580 . ( C585 + D207 ) ) , ( C580 . C585 ) , C579 by L2666 , L2589 , L2601 , L2602 , XXREAL_0:2;
L2668: C591 Joins ( C580 . C585 ) , ( C580 . ( C585 + D207 ) ) , C579 by L2667 , GLIB_000:14;
L2669:
now
assume L2670: C589 <= 3;
L2671: C589 <= 4 by L2670 , XXREAL_0:2;
thus L2672: contradiction by L2671 , L2605 , L2634 , L2626 , L2612 , L2645 , L2652 , L2665 , L43 , L596 , GLIB_000:14;
end;
L2673: ( ( 2 + 1 ) - 1 ) < ( C589 - 1 ) by L2669 , XREAL_1:9;
L2674: C585 < ( C585 + D207 ) by L2673 , XREAL_1:29;
L2675: ( C585 + 2 ) < ( C585 + D207 ) by L2673 , XREAL_1:8;
thus L2676: contradiction by L2675 , L2583 , L2584 , L2662 , L2668 , L2674 , L2286;
end;
L2677: C590 < ( ( len D204 ) + ( 2 * 1 ) ) by L2664 , L2656 , L2649 , XXREAL_0:1;
L2678: C590 <= ( ( ( len D204 ) + 2 ) - 2 ) by L2677 , L14;
L2679: ( D205 . C590 ) = ( D204 . C590 ) by L2678 , L2628;
L2680: 1 <= C590 by L7;
L2681: ( 1 - 1 ) <= ( C590 - 1 ) by L2680 , XREAL_1:9;
reconsider D208 = ( C590 - 1 ) as  even (Element of ( NAT )) by L2681 , INT_1:3;
reconsider D209 = D208 as  even Nat;
L2682: ( ( C589 + 2 ) - 1 ) < ( C590 - 1 ) by L2648 , XREAL_1:9;
L2683: ( C585 + ( D207 + 2 ) ) < ( C585 + D209 ) by L2682 , XREAL_1:8;
L2684: ( ( C585 + D207 ) + 2 ) < ( C585 + D209 ) by L2683;
L2685:
now
L2686: ( D205 . C589 ) = ( D204 . C589 ) by L2628 , L2658;
L2687: ( D205 . C589 ) = ( D201 . ( C585 + D207 ) ) by L2686 , L2589 , L2660 , L2662;
L2688: ( len C580 ) < ( ( len C580 ) + 2 ) by XREAL_1:29;
L2689: ( C585 + D207 ) <= ( len C580 ) by L2661 , FINSEQ_3:25;
consider C592 being Nat such that L2690: ( ( C585 + D207 ) + ( 2 * C592 ) ) = ( ( len C580 ) + 2 ) by L2689 , L2688 , L114 , XXREAL_0:2;
assume L2691: C590 = ( len D204 );
L2692:
now
assume L2693: ( 2 * C592 ) < ( 3 + 1 );
L2694: ( 2 * C592 ) <= 3 by L2693 , NAT_1:13;
L2695: (( 2 * C592 ) = ( 0 ) or ( 2 * C592 ) = 2) by L2694 , L81;
thus L2696: contradiction by L2695 , L2613 , L2648 , L2650 , L2691 , L2690;
end;
L2697: 1 <= C589 by L7;
L2698: 1 < C589 by L2697 , L2634 , L2645 , L2627 , L2656 , L2652 , L2691 , L596 , XXREAL_0:1;
L2699: ( 1 - 1 ) < ( C589 - 1 ) by L2698 , XREAL_1:9;
L2700:
now
assume L2701: ( 2 * C592 ) > ( ( len C580 ) + 1 );
L2702: ( 2 * C592 ) >= ( ( ( len C580 ) + 1 ) + 1 ) by L2701 , NAT_1:13;
thus L2703: contradiction by L2702 , L2690 , XREAL_1:29;
end;
L2704:
now
assume L2705: C592 >= C584;
L2706: ( 2 * C592 ) >= ( 2 * C584 ) by L2705 , XREAL_1:64;
L2707: ( ( C585 + ( 2 * C592 ) ) + D207 ) > ( C585 + ( 2 * C592 ) ) by L2699 , XREAL_1:29;
thus L2708: contradiction by L2707 , L2599 , L2690 , L2706 , XREAL_1:7;
end;
L2709: ( D205 . C590 ) = C581 by L2612 , L2628 , L2691;
thus L2710: contradiction by L2709 , L2596 , L2653 , L2690 , L2692 , L2700 , L2704 , L2687;
end;
L2711: C590 < ( len D204 ) by L2685 , L2678 , XXREAL_0:1;
L2712: D209 < ( ( len D204 ) - 1 ) by L2711 , XREAL_1:9;
L2713: ( C585 + D209 ) in ( dom C580 ) by L2712 , L2614;
L2714: ( C585 + D209 ) <= ( len C580 ) by L2713 , FINSEQ_3:25;
L2715: C589 < ( C589 + 2 ) by XREAL_1:29;
L2716: C589 < C590 by L2715 , L2648 , XXREAL_0:2;
L2717: D207 < D209 by L2716 , XREAL_1:9;
L2718: ( C585 + D207 ) < ( C585 + D209 ) by L2717 , XREAL_1:8;
L2719: ( D205 . C589 ) = ( D204 . C589 ) by L2628 , L2658;
L2720: ( D204 . ( D209 + 1 ) ) = ( C580 . ( C585 + D209 ) ) by L2614 , L2712;
thus L2721: contradiction by L2720 , L2583 , L2584 , L2653 , L2660 , L2714 , L2719 , L2679 , L2718 , L2684 , L2286;
end;
end;
L2723: (for B508 being Nat holds ((for B509 being Nat holds (B509 < B508 implies S4[ B509 ])) implies S4[ B508 ])) by L2595;
L2724: (for B510 being Nat holds S4[ B510 ]) from NAT_1:sch 4(L2723);
L2725:
now
let C593 being  odd Nat;
assume that
L2726: C593 <= ( ( len C580 ) - 2 );
L2727: ( ( len C580 ) - 2 ) <= ( ( ( len C580 ) - 2 ) + 4 ) by XREAL_1:31;
consider C594 being Nat such that L2728: ( C593 + ( 2 * C594 ) ) = ( ( len C580 ) + 2 ) by L2727 , L2726 , L114 , XXREAL_0:2;
L2729:
now
assume L2730: ( 2 * C594 ) > ( ( len C580 ) + 1 );
L2731: ( C593 + ( 2 * C594 ) ) > ( 1 + ( ( len C580 ) + 1 ) ) by L2730 , L7 , XREAL_1:8;
thus L2732: contradiction by L2731 , L2728;
end;
L2733:
now
assume L2734: ( 2 * C594 ) < 4;
L2735: ( C593 + 4 ) <= ( ( ( len C580 ) - 2 ) + 4 ) by L2726 , XREAL_1:7;
thus L2736: contradiction by L2735 , L2728 , L2734 , XREAL_1:8;
end;
thus L2737: (not (ex B511 being set st B511 Joins ( D201 . C593 ) , C581 , C579)) by L2733 , L2724 , L2728 , L2729;
end;
L2738:
now
assume L2739: D201 is  chordal;
consider C595 , C596 being  odd Nat such that L2740: ( C595 + 2 ) < C596 and L2741: C596 <= ( len D201 ) and L2742: ( D201 . C595 ) <> ( D201 . C596 ) and L2743: (ex B512 being set st B512 Joins ( D201 . C595 ) , ( D201 . C596 ) , C579) and L2744: (D201 is  Cycle-like implies ((not (C595 = 1 & C596 = ( len D201 ))) & (not (C595 = 1 & C596 = ( ( len D201 ) - 2 ))) & (not (C595 = 3 & C596 = ( len D201 ))))) by L2739 , L2019;
L2745: ( C595 + 2 ) < ( ( len C580 ) + 2 ) by L2588 , L2740 , L2741 , XXREAL_0:2;
L2746: ( ( C595 + 2 ) - 2 ) < ( ( ( len C580 ) + 2 ) - 2 ) by L2745 , XREAL_1:9;
L2747: C595 < ( C595 + 2 ) by XREAL_1:29;
L2748: C595 < C596 by L2747 , L2740 , XXREAL_0:2;
per cases  by L2741 , XXREAL_0:1;
suppose L2749: C596 = ( len D201 );

L2750: ( ( C595 + 2 ) - 2 ) < ( ( ( len C580 ) + 2 ) - 2 ) by L2749 , L2588 , L2740 , XREAL_1:9;
thus L2751: contradiction by L2750 , L2594 , L2725 , L2743 , L2749 , L14;
end;
suppose L2752: C596 < ( len D201 );

L2753: ( D201 . C595 ) = ( C580 . C595 ) by L2589 , L2746;
L2754: C596 <= ( ( ( len C580 ) + 2 ) - 2 ) by L2588 , L2752 , L14;
L2755: ( D201 . C596 ) = ( C580 . C596 ) by L2754 , L2589;
thus L2756: contradiction by L2755 , L2583 , L2584 , L2740 , L2743 , L2748 , L2754 , L2753 , L2286;
end;
end;
L2758: ( D201 .first() ) = ( C580 .first() ) by L2586 , GLIB_001:63;
L2759: ( D201 .first() ) in ( C580 .vertices() ) by L2758 , GLIB_001:88;
thus L2760: thesis by L2759 , L2585 , L2594 , L2738 , GLIB_001:def 24;
end;
theorem
L2761: (for B513 being  chordal _Graph holds (for B514 , B515 being (Vertex of B513) holds ((B514 <> B515 & (not B514 , B515 are_adjacent )) implies (for B516 being (VertexSeparator of B514 , B515) holds ((B516 is  minimal & B516 is non  empty) implies (for B517 being (inducedSubgraph of B513 , B516) holds B517 is  complete))))))
proof
let C597 being  chordal _Graph;
set D210 = ( the_Vertices_of C597 );
let C598 , C599 being (Vertex of C597);
assume that
L2762: C598 <> C599
and
L2763: (not C598 , C599 are_adjacent );
let C600 being (VertexSeparator of C598 , C599);
assume that
L2764: C600 is  minimal
and
L2765: C600 is non  empty;
set D211 = the (removeVertices of C597 , C600);
reconsider D212 = C598 , D213 = C599 as (Vertex of D211) by L2762 , L2763 , L1843;
set D214 = ( D211 .reachableFrom D212 );
set D215 = ( D211 .reachableFrom D213 );
L2766: ( D214 /\ D215 ) = ( {} ) by L2762 , L2763 , L1828;
set D216 = the (inducedSubgraph of D211 , D215);
set D217 = the (inducedSubgraph of D211 , D214);
L2767: ( the_Vertices_of D217 ) = D214 by GLIB_000:def 37;
L2768: ( the_Vertices_of D216 ) = D215 by GLIB_000:def 37;
L2769: ( D215 /\ C600 ) = ( {} ) by L2762 , L2763 , L1816;
L2770: ( D214 /\ C600 ) = ( {} ) by L2762 , L2763 , L1816;
L2771: ( the_Vertices_of D211 ) c= D210;
reconsider D218 = D214 , D219 = D215 as non  empty (Subset of D210) by L2771 , XBOOLE_1:1;
let C601 being (inducedSubgraph of C597 , C600);
let C602 , C603 being (Vertex of C601);
assume that
L2772: C602 <> C603
and
L2773: (not C602 , C603 are_adjacent );
reconsider D220 = C602 , D221 = C603 as (Vertex of C597) by GLIB_000:42;
L2774: C600 = ( the_Vertices_of C601 ) by L2765 , GLIB_000:def 37;
L2775: (ex B518 being (Vertex of C597) st (B518 in D218 & D220 , B518 are_adjacent )) by L2774 , L2762 , L2763 , L2764 , L1921;
set D222 = ( D219 \/ { D220 } );
set D223 = ( D218 \/ { D220 } );
set D224 = the (inducedSubgraph of C597 , D222);
set D225 = the (inducedSubgraph of C597 , D223);
set D226 = { D220 , D221 };
L2776: ( the_Vertices_of D224 ) = D222 by GLIB_000:def 37;
L2777:
now
let C604 being set;
assume that
L2778: C604 in D218;
L2779: (not C604 in C600) by L2770 , L2778 , XBOOLE_0:def 4;
thus L2780: C604 in ( D210 \ C600 ) by L2779 , L2778 , XBOOLE_0:def 5;
end;
L2781: D218 c= ( D210 \ C600 ) by L2777 , TARSKI:def 3;
consider C605 being (Vertex of C597) such that L2782: C605 in D218 and L2783: D221 , C605 are_adjacent  by L2762 , L2763 , L2764 , L2774 , L1921;
L2784: C605 in D223 by L2782 , XBOOLE_0:def 3;
set D227 = the (inducedSubgraph of C597 , ( ( D219 \/ { C602 } ) \/ { C603 } ));
set D228 = the (inducedSubgraph of C597 , ( ( D218 \/ { C602 } ) \/ { C603 } ));
L2785: ( the_Vertices_of D225 ) = D223 by GLIB_000:def 37;
L2786: (not C598 in C600) by L2762 , L2763 , L1654;
L2787: ( D210 \ C600 ) is non  empty non  empty non  empty non  empty (Subset of D210) by L2786 , XBOOLE_0:def 5;
reconsider D229 = D217 as (inducedSubgraph of C597 , D218) by L2787 , L2781 , L495;
L2788: (not C603 in { C602 }) by L2772 , TARSKI:def 1;
L2789:
now
let C606 being set;
assume that
L2790: C606 in D219;
L2791: (not C606 in C600) by L2769 , L2790 , XBOOLE_0:def 4;
thus L2792: C606 in ( D210 \ C600 ) by L2791 , L2790 , XBOOLE_0:def 5;
end;
L2793: D219 c= ( D210 \ C600 ) by L2789 , TARSKI:def 3;
reconsider D230 = D216 as (inducedSubgraph of C597 , D219) by L2793 , L2787 , L495;
L2794: C603 in D226 by TARSKI:def 2;
L2795: C603 in ( D218 \/ D226 ) by L2794 , XBOOLE_0:def 3;
L2796: (ex B519 being (Vertex of C597) st (B519 in D219 & D220 , B519 are_adjacent )) by L2762 , L2763 , L2764 , L2774 , L2008;
L2797: (not C602 in D219) by L2793 , L2774 , XBOOLE_0:def 5;
L2798: C602 in ( C597 .AdjacentSet ( the_Vertices_of D230 ) ) by L2797 , L2768 , L2796;
L2799: D224 is  connected by L2798 , L1379;
L2800: C603 in D226 by TARSKI:def 2;
L2801: C603 in ( D219 \/ D226 ) by L2800 , XBOOLE_0:def 3;
consider C607 being (Vertex of C597) such that L2802: C607 in D219 and L2803: D221 , C607 are_adjacent  by L2762 , L2763 , L2764 , L2774 , L2008;
L2804: ( ( D219 \/ { C602 } ) \/ { C603 } ) = ( D219 \/ ( { C602 } \/ { C603 } ) ) by XBOOLE_1:4
.= ( D219 \/ D226 ) by ENUMSET1:1;
L2805: ( the_Vertices_of D227 ) c= ( D219 \/ D226 ) by L2804 , GLIB_000:def 37;
L2806: C602 in D226 by TARSKI:def 2;
L2807: C602 in ( D219 \/ D226 ) by L2806 , XBOOLE_0:def 3;
reconsider D231 = C602 , D232 = C603 as (Vertex of D227) by L2807 , L2804 , L2801 , GLIB_000:def 37;
L2808: C607 in D222 by L2802 , XBOOLE_0:def 3;
L2809: (not C603 in D219) by L2793 , L2774 , XBOOLE_0:def 5;
L2810: (not D221 in ( the_Vertices_of D224 )) by L2809 , L2776 , L2788 , XBOOLE_0:def 3;
L2811: C603 in ( C597 .AdjacentSet ( the_Vertices_of D224 ) ) by L2810 , L2776 , L2803 , L2808;
L2812: D227 is  connected by L2811 , L2799 , L1379;
consider C608 being (Walk of D227) such that L2813: C608 is_Walk_from D232 , D231 by L2812 , GLIB_002:def 1;
L2814: (not C602 in D218) by L2781 , L2774 , XBOOLE_0:def 5;
L2815: C602 in ( C597 .AdjacentSet ( the_Vertices_of D229 ) ) by L2814 , L2767 , L2775;
L2816: D225 is  connected by L2815 , L1379;
L2817: ( ( D218 \/ { C602 } ) \/ { C603 } ) = ( D218 \/ ( { C602 } \/ { C603 } ) ) by XBOOLE_1:4
.= ( D218 \/ D226 ) by ENUMSET1:1;
L2818: ( the_Vertices_of D228 ) c= ( D218 \/ D226 ) by L2817 , GLIB_000:def 37;
L2819: C602 in D226 by TARSKI:def 2;
L2820: C602 in ( D218 \/ D226 ) by L2819 , XBOOLE_0:def 3;
reconsider D233 = C602 , D234 = C603 as (Vertex of D228) by L2820 , L2817 , L2795 , GLIB_000:def 37;
L2821: (not C603 in { C602 }) by L2772 , TARSKI:def 1;
L2822: (not C603 in D218) by L2781 , L2774 , XBOOLE_0:def 5;
L2823: (not D221 in ( the_Vertices_of D225 )) by L2822 , L2785 , L2821 , XBOOLE_0:def 3;
L2824: C603 in ( C597 .AdjacentSet ( the_Vertices_of D225 ) ) by L2823 , L2785 , L2783 , L2784;
L2825: D228 is  connected by L2824 , L2816 , L1379;
consider C609 being (Walk of D228) such that L2826: C609 is_Walk_from D233 , D234 by L2825 , GLIB_002:def 1;
L2827: ( ( D218 \/ D226 ) /\ ( D219 \/ D226 ) ) = ( ( D218 /\ D219 ) \/ D226 ) by XBOOLE_1:24
.= D226 by L2766;
L2828: ( C609 .last() ) = D234 by L2826 , GLIB_001:def 23;
L2829: ( C609 .first() ) = D233 by L2826 , GLIB_001:def 23;
L2830: ( C608 .last() ) = D233 by L2813 , GLIB_001:def 23;
L2831: ( C608 .first() ) = D234 by L2813 , GLIB_001:def 23;
consider C610 being (Path of D227) such that L2832: C610 is_Walk_from ( C608 .first() ) , ( C608 .last() ) and L2833: C610 is  minlength by L766;
consider C611 being (Path of D228) such that L2834: C611 is_Walk_from ( C609 .first() ) , ( C609 .last() ) and L2835: C611 is  minlength by L766;
reconsider D235 = C611 , D236 = C610 as (Path of C597) by GLIB_001:175;
L2836: ( C610 .first() ) = ( C610 . 1 );
L2837: ( D236 . 1 ) = D221 by L2836 , L2831 , L2832 , GLIB_001:def 23;
L2838: ( D236 .vertices() ) = ( C610 .vertices() ) by GLIB_001:98;
L2839: ( D236 .vertices() ) c= ( D219 \/ D226 ) by L2838 , L2805 , XBOOLE_1:1;
L2840: ( D235 .vertices() ) = ( C611 .vertices() ) by GLIB_001:98;
L2841: ( D235 .vertices() ) c= ( D218 \/ D226 ) by L2840 , L2818 , XBOOLE_1:1;
L2842: ( ( D235 .vertices() ) /\ ( D236 .vertices() ) ) c= D226 by L2841 , L2839 , L2827 , XBOOLE_1:27;
set D237 = ( D235 .append D236 );
L2843: ( C611 .last() ) = ( C611 . ( len C611 ) );
L2844: ( D235 . ( len D235 ) ) = D221 by L2843 , L2828 , L2834 , GLIB_001:def 23;
L2845: ( C610 .last() ) = ( C610 . ( len C610 ) );
L2846: ( D236 . ( len D236 ) ) = D220 by L2845 , L2830 , L2832 , GLIB_001:def 23;
L2847: ( D236 .last() ) = ( D236 . ( len D236 ) );
L2848: C602 in ( D236 .vertices() ) by L2847 , L2846 , GLIB_001:88;
L2849: ( D236 .first() ) = ( D236 . 1 );
L2850: C603 in ( D236 .vertices() ) by L2849 , L2837 , GLIB_001:88;
L2851: D236 is non  trivial by L2772 , L2849 , L2847 , L2837 , L2846 , GLIB_001:127;
L2852: D236 is  open by L2772 , L2849 , L2847 , L2837 , L2846 , GLIB_001:def 24;
L2853: (not D236 is  Cycle-like) by L2772 , L2849 , L2847 , L2837 , L2846 , GLIB_001:def 24;
L2854: (not D220 , D221 are_adjacent ) by L2765 , L2773 , L930;
L2855: ( D236 .length() ) >= 2 by L2854 , L2772 , L2849 , L2847 , L2837 , L2846 , L943;
L2856: ( C611 .first() ) = ( C611 . 1 );
L2857: ( D235 . 1 ) = D220 by L2856 , L2829 , L2834 , GLIB_001:def 23;
L2858: ( D235 .edges() ) misses ( D236 .edges() )
proof
assume L2859: ( ( D235 .edges() ) /\ ( D236 .edges() ) ) <> ( {} );
consider C612 being set such that L2860: C612 in ( ( D235 .edges() ) /\ ( D236 .edges() ) ) by L2859 , XBOOLE_0:def 1;
L2861: C612 in ( D235 .edges() ) by L2860 , XBOOLE_0:def 4;
L2862: C612 in ( C611 .edges() ) by L2861 , GLIB_001:110;
consider C613 , C614 being (Vertex of D228), C615 being  odd (Element of ( NAT )) such that L2863: ( C615 + 2 ) <= ( len D235 ) and L2864: C613 = ( D235 . C615 ) and L2865: C612 = ( D235 . ( C615 + 1 ) ) and L2866: C614 = ( D235 . ( C615 + 2 ) ) and L2867: C612 Joins C613 , C614 , D228 by L2862 , GLIB_001:103;
L2868: C612 Joins C613 , C614 , C597 by L2867 , GLIB_000:72;
L2869: C612 in ( D236 .edges() ) by L2860 , XBOOLE_0:def 4;
L2870: C612 in ( C610 .edges() ) by L2869 , GLIB_001:110;
consider C616 , C617 being (Vertex of D227), C618 being  odd (Element of ( NAT )) such that L2871: ( C618 + 2 ) <= ( len D236 ) and L2872: C616 = ( D236 . C618 ) and L2873: C612 = ( D236 . ( C618 + 1 ) ) and L2874: C617 = ( D236 . ( C618 + 2 ) ) and L2875: C612 Joins C616 , C617 , D227 by L2870 , GLIB_001:103;
L2876: ( the_Vertices_of D227 ) = ( D219 \/ D226 ) by L2804 , GLIB_000:def 37;
L2877: C612 Joins C616 , C617 , C597 by L2875 , GLIB_000:72;
L2878: ((C613 = C616 & C614 = C617) or (C613 = C617 & C614 = C616)) by L2877 , L2868 , GLIB_000:15;
L2879: (C613 in D219 or C613 in D226) by L2878 , L2876 , XBOOLE_0:def 3;
L2880: ( the_Vertices_of D228 ) = ( D218 \/ D226 ) by L2817 , GLIB_000:def 37;
L2881: (C613 in D218 or C613 in D226) by L2880 , XBOOLE_0:def 3;
L2882: (C614 in D218 or C614 in D226) by L2880 , XBOOLE_0:def 3;
L2883: (C614 in D219 or C614 in D226) by L2878 , L2876 , XBOOLE_0:def 3;
per cases  by L2766 , L2881 , L2882 , L2879 , L2883 , TARSKI:def 2 , XBOOLE_0:def 4;
suppose L2884: ((C613 = C602 & C614 = C602) or (C613 = C603 & C614 = C603));

L2885: C615 < ( C615 + 2 ) by XREAL_1:39;
thus L2886: contradiction by L2885 , L2772 , L2857 , L2844 , L2863 , L2864 , L2866 , L2884 , GLIB_001:def 28;
end;
suppose L2887: ((C613 = C602 & C614 = C603) or (C613 = C603 & C614 = C602));

thus L2888: contradiction by L2887 , L2854 , L2868 , L920;
end;
end;
L2890: ( D235 .first() ) = ( D235 . 1 );
L2891: C602 in ( D235 .vertices() ) by L2890 , L2857 , GLIB_001:88;
L2892: ( D235 .last() ) = ( D235 . ( len D235 ) );
L2893: ( ( len D237 ) + 1 ) = ( ( len D235 ) + ( len D236 ) ) by L2892 , L2844 , L2849 , L2837 , GLIB_001:28;
L2894: ( D235 .length() ) >= 2 by L2772 , L2854 , L2890 , L2892 , L2857 , L2844 , L943;
L2895: ( D237 .length() ) = ( ( D235 .length() ) + ( D236 .length() ) ) by L2892 , L2844 , L2849 , L2837 , L492;
L2896: ( D237 .length() ) >= ( 2 + 2 ) by L2895 , L2894 , L2855 , XREAL_1:7;
L2897: ( D237 .length() ) >= ( 3 + 1 ) by L2896;
L2898: ( D237 .length() ) > 3 by L2897 , NAT_1:13;
L2899: D235 is  open by L2772 , L2890 , L2892 , L2857 , L2844 , GLIB_001:def 24;
L2900: C603 in ( D235 .vertices() ) by L2892 , L2844 , GLIB_001:88;
L2901: D226 c= ( ( D235 .vertices() ) /\ ( D236 .vertices() ) )
proof
let C619 being set;
assume L2902: C619 in D226;
L2903: (C619 = C602 or C619 = C603) by L2902 , TARSKI:def 2;
thus L2904: thesis by L2903 , L2891 , L2900 , L2848 , L2850 , XBOOLE_0:def 4;
end;
L2905: ( ( D235 .vertices() ) /\ ( D236 .vertices() ) ) = D226 by L2901 , L2842 , XBOOLE_0:def 10;
L2906: D237 is  Cycle-like by L2905 , L2890 , L2892 , L2857 , L2844 , L2899 , L2849 , L2847 , L2837 , L2846 , L2852 , L2851 , L2858 , L390;
L2907: D237 is  chordal by L2906 , L2898 , L2420;
consider C620 , C621 being  odd Nat such that L2908: ( C620 + 2 ) < C621 and L2909: C621 <= ( len D237 ) and L2910: ( D237 . C620 ) <> ( D237 . C621 ) and L2911: (ex B520 being set st B520 Joins ( D237 . C620 ) , ( D237 . C621 ) , C597) and L2912: (for B521 being set holds (B521 in ( D237 .edges() ) implies (not B521 Joins ( D237 . C620 ) , ( D237 . C621 ) , C597))) by L2907 , L2016;
L2913: C620 < C621 by L2908 , NAT_1:12;
consider C622 being set such that L2914: C622 Joins ( D237 . C620 ) , ( D237 . C621 ) , C597 by L2911;
L2915: C622 Joins ( D237 . C621 ) , ( D237 . C620 ) , C597 by L2914 , GLIB_000:14;
L2916: C620 in ( NAT ) by ORDINAL1:def 12;
L2917: (not D235 is  Cycle-like) by L2772 , L2890 , L2892 , L2857 , L2844 , GLIB_001:def 24;
L2918: 1 <= C621 by ABIAN:12;
L2919: 1 <= C620 by ABIAN:12;
per cases ;
suppose L2920: (C620 < ( len D235 ) & C621 <= ( len D235 ));

L2921: C621 in ( dom D235 ) by L2920 , L2918 , FINSEQ_3:25;
L2922: ( D237 . C621 ) = ( D235 . C621 ) by L2921 , GLIB_001:32;
L2923: C620 in ( dom D235 ) by L2919 , L2920 , FINSEQ_3:25;
L2924: ( D237 . C620 ) = ( D235 . C620 ) by L2923 , GLIB_001:32;
L2925: D235 is  chordal by L2924 , L2917 , L2908 , L2911 , L2920 , L2922 , L2052;
L2926: C611 is  chordal by L2925 , L2817 , L2166;
thus L2927: contradiction by L2926 , L2835 , L2233;
end;
suppose L2928: (C620 < ( len D235 ) & ( len D235 ) < C621);

L2929: ( D235 . C620 ) in ( the_Vertices_of D228 ) by L2928 , L2916 , GLIB_001:7;
L2930: C620 in ( dom D235 ) by L2919 , L2928 , FINSEQ_3:25;
L2931: ( D237 . C620 ) = ( D235 . C620 ) by L2930 , GLIB_001:32;
L2932: (not C621 in ( dom D235 )) by L2928 , FINSEQ_3:25;
L2933: C621 in ( dom D237 ) by L2909 , L2918 , FINSEQ_3:25;
consider C623 being (Element of ( NAT )) such that L2934: C623 < ( len D236 ) and L2935: C621 = ( ( len D235 ) + C623 ) by L2933 , L2932 , GLIB_001:34;
L2936: ( D237 . ( ( len D235 ) + C623 ) ) = ( D236 . ( C623 + 1 ) ) by L2892 , L2844 , L2849 , L2837 , L2934 , GLIB_001:33;
reconsider D238 = C623 as  even (Element of ( NAT )) by L2935;
reconsider D239 = ( D238 + 1 ) as  odd (Element of ( NAT ));
L2937: D239 <= ( len D236 ) by L2934 , NAT_1:13;
L2938: ( D236 . D239 ) in ( the_Vertices_of D227 ) by L2937 , GLIB_001:7;
per cases  by L2818 , L2805 , L2929 , L2938 , XBOOLE_0:def 3;
suppose L2939: (( D235 . C620 ) in D218 & ( D236 . D239 ) in D226);

per cases  by L2857 , L2844 , L2939 , TARSKI:def 2;
suppose L2940: ( D236 . D239 ) = ( D235 . 1 );

L2941:
now
assume L2942: ( 1 + 2 ) >= C620;
per cases  by L2942 , XXREAL_0:1;
suppose L2943: ( 1 + 2 ) > C620;

L2944: 1 >= C620 by L2943 , L22 , JORDAN12:2;
thus L2945: contradiction by L2944 , L2910 , L2919 , L2931 , L2935 , L2936 , L2940 , XXREAL_0:1;
end;
suppose L2946: ( 1 + 2 ) = C620;

L2947: ( 1 + 1 ) < ( len D235 ) by L2946 , L2928 , XXREAL_0:2;
L2948: ( 1 + 1 ) in ( dom D235 ) by L2947 , FINSEQ_3:25;
L2949: ( D235 . ( 1 + 1 ) ) = ( D237 . ( 1 + 1 ) ) by L2948 , GLIB_001:32;
L2950: 1 < ( ( len D235 ) - 1 ) by L2947 , XREAL_1:20;
L2951: ( 1 + ( 0 ) ) < ( ( ( len D235 ) - 1 ) + ( len D236 ) ) by L2950 , XREAL_1:8;
L2952: ( D237 . ( 1 + 1 ) ) in ( D237 .edges() ) by L2951 , L2893 , GLIB_001:100 , JORDAN12:2;
L2953: 1 < ( len D235 ) by L2919 , L2928 , XXREAL_0:2;
L2954: ( D235 . ( 1 + 1 ) ) Joins ( D235 . 1 ) , ( D235 . C620 ) , C597 by L2953 , L2946 , GLIB_001:def 3 , JORDAN12:2;
thus L2955: contradiction by L2954 , L2912 , L2931 , L2935 , L2936 , L2940 , L2949 , L2952 , GLIB_000:14;
end;
end;
L2957: D235 is  chordal by L2941 , L2917 , L2915 , L2928 , L2931 , L2935 , L2936 , L2940 , L2052 , JORDAN12:2;
L2958: C611 is  chordal by L2957 , L2817 , L2166;
thus L2959: contradiction by L2958 , L2835 , L2233;
end;
suppose L2960: ( D236 . D239 ) = ( D235 . ( len D235 ) );

L2961:
now
set D240 = ( len D235 );
assume L2962: ( C620 + 2 ) >= ( len D235 );
per cases  by L2962 , XXREAL_0:1;
suppose L2963: ( C620 + 2 ) = D240;

L2964: D240 = ( ( C620 + 1 ) + 1 ) by L2963;
L2965: ( C620 + 1 ) < D240 by L2964 , NAT_1:13;
L2966: 1 <= ( C620 + 1 ) by NAT_1:12;
L2967: ( C620 + 1 ) in ( dom D235 ) by L2966 , L2965 , FINSEQ_3:25;
L2968: ( D235 . ( C620 + 1 ) ) = ( D237 . ( C620 + 1 ) ) by L2967 , GLIB_001:32;
L2969: C620 < ( ( len D235 ) - 1 ) by L2964 , NAT_1:13;
L2970: ( C620 + ( 0 ) ) < ( ( ( len D235 ) - 1 ) + ( len D236 ) ) by L2969 , XREAL_1:8;
L2971: ( D237 . ( C620 + 1 ) ) in ( D237 .edges() ) by L2970 , L2893 , GLIB_001:100;
L2972: C620 < D240 by L2965 , NAT_1:13;
L2973: ( D235 . ( C620 + 1 ) ) Joins ( D235 . C620 ) , ( D235 . D240 ) , C597 by L2972 , L2916 , L2963 , GLIB_001:def 3;
thus L2974: contradiction by L2973 , L2912 , L2931 , L2935 , L2936 , L2960 , L2968 , L2971;
end;
suppose L2975: ( C620 + 2 ) > ( len D235 );

thus L2976: contradiction by L2975 , L2928 , L22;
end;
end;
L2978: D235 is  chordal by L2961 , L2917 , L2911 , L2931 , L2935 , L2936 , L2960 , L2052;
L2979: C611 is  chordal by L2978 , L2817 , L2166;
thus L2980: contradiction by L2979 , L2835 , L2233;
end;
end;
suppose L2982: (( D235 . C620 ) in D218 & ( D236 . D239 ) in D219);

reconsider D241 = ( C610 . D239 ) as (Vertex of D230) by L2982 , GLIB_000:def 37;
reconsider D242 = ( C611 . C620 ) as (Vertex of D229) by L2982 , GLIB_000:def 37;
set D243 = ( D211 .walkOf (D242 , C622 , D241) );
L2983: C622 Joins D242 , D241 , D211 by L2781 , L2793 , L2914 , L2931 , L2935 , L2936 , L2982 , L218;
L2984: D243 is_Walk_from D242 , D241 by L2983 , GLIB_001:15;
L2985: C599 in D219 by GLIB_002:9;
reconsider D244 = C599 as (Vertex of D230) by L2985 , GLIB_000:def 37;
L2986: C598 in D218 by GLIB_002:9;
reconsider D245 = C598 as (Vertex of D229) by L2986 , GLIB_000:def 37;
consider C624 being (Walk of D229) such that L2987: C624 is_Walk_from D245 , D242 by GLIB_002:def 1;
consider C625 being (Walk of D230) such that L2988: C625 is_Walk_from D241 , D244 by GLIB_002:def 1;
reconsider D246 = C624 , D247 = C625 as (Walk of D211) by GLIB_001:167;
reconsider D248 = D246 , D249 = D247 as (Walk of D211);
L2989: D249 is_Walk_from D241 , D244 by L2988 , GLIB_001:19;
set D250 = ( D248 .append D243 );
set D251 = ( D250 .append D249 );
L2990: D248 is_Walk_from D245 , D242 by L2987 , GLIB_001:19;
L2991: D250 is_Walk_from D245 , D241 by L2990 , L2984 , GLIB_001:31;
L2992: D251 is_Walk_from C598 , C599 by L2991 , L2989 , GLIB_001:31;
thus L2993: contradiction by L2992 , L2762 , L2763 , L1654;
end;
suppose L2994: (( D235 . C620 ) in D226 & ( D236 . D239 ) in D219);

L2995: (( D235 . C620 ) = C602 or ( D235 . C620 ) = C603) by L2994 , TARSKI:def 2;
L2996: ( D235 . C620 ) = C602 by L2995 , L2857 , L2844 , L2916 , L2928 , GLIB_001:def 28
.= ( D236 . ( len D236 ) ) by L2830 , L2832 , L2845 , GLIB_001:def 23;
L2997:
now
set D252 = ( len D236 );
assume L2998: ( D239 + 2 ) >= ( len D236 );
per cases  by L2998 , XXREAL_0:1;
suppose L2999: ( D239 + 2 ) = D252;

L3000: D252 = ( ( D239 + 1 ) + 1 ) by L2999;
L3001: D239 < ( ( len D236 ) - 1 ) by L3000 , NAT_1:13;
L3002: ( ( len D235 ) + D239 ) < ( ( ( len D236 ) - 1 ) + ( len D235 ) ) by L3001 , XREAL_1:6;
L3003: ( D239 + 1 ) < D252 by L3000 , NAT_1:13;
L3004: D239 < D252 by L3003 , NAT_1:13;
L3005: ( D236 . ( D239 + 1 ) ) Joins ( D236 . D239 ) , ( D236 . D252 ) , D227 by L3004 , L2999 , GLIB_001:def 3;
L3006: ( D236 . ( D239 + 1 ) ) Joins ( D236 . D252 ) , ( D236 . D239 ) , D227 by L3005 , GLIB_000:14;
L3007: ( D236 . ( D239 + 1 ) ) Joins ( D236 . D252 ) , ( D236 . D239 ) , C597 by L3006 , GLIB_000:72;
L3008: 1 <= ( ( len D235 ) + D239 ) by ABIAN:12 , NAT_1:12;
L3009: ( D236 . ( D239 + 1 ) ) = ( D237 . ( ( len D235 ) + D239 ) ) by L2892 , L2844 , L2849 , L2837 , L3004 , GLIB_001:33;
L3010: ( D236 . ( D239 + 1 ) ) in ( D237 .edges() ) by L3009 , L2893 , L3008 , L3002 , GLIB_001:99;
thus L3011: contradiction by L3010 , L2912 , L2931 , L2935 , L2936 , L2996 , L3007;
end;
suppose L3012: ( D239 + 2 ) > ( len D236 );

L3013: D239 >= ( len D236 ) by L3012 , L22;
thus L3014: contradiction by L3013 , L2910 , L2931 , L2935 , L2936 , L2937 , L2996 , XXREAL_0:1;
end;
end;
L3016: D236 is  chordal by L2997 , L2853 , L2915 , L2931 , L2935 , L2936 , L2996 , L2052;
L3017: C610 is  chordal by L3016 , L2804 , L2166;
thus L3018: contradiction by L3017 , L2833 , L2233;
end;
suppose L3019: (( D235 . C620 ) in D226 & ( D236 . D239 ) in D226);

L3020: (( D236 . D239 ) = C602 or ( D236 . D239 ) = C603) by L3019 , TARSKI:def 2;
L3021: (( D235 . C620 ) = C602 or ( D235 . C620 ) = C603) by L3019 , TARSKI:def 2;
L3022: D220 , D221 are_adjacent  by L3021 , L2910 , L2911 , L2931 , L2935 , L2936 , L3020 , L920;
thus L3023: contradiction by L3022 , L2765 , L2773 , L930;
end;
end;
suppose L3025: ( len D235 ) <= C620;

consider C626 being Nat such that L3026: C620 = ( ( len D235 ) + C626 ) by L3025 , NAT_1:10;
L3027: C621 > ( len D235 ) by L2913 , L3025 , XXREAL_0:2;
L3028: (not C621 in ( dom D235 )) by L3027 , FINSEQ_3:25;
L3029: C621 in ( dom D237 ) by L2909 , L2918 , FINSEQ_3:25;
consider C627 being (Element of ( NAT )) such that L3030: C627 < ( len D236 ) and L3031: C621 = ( ( len D235 ) + C627 ) by L3029 , L3028 , GLIB_001:34;
L3032: ( D237 . ( ( len D235 ) + C627 ) ) = ( D236 . ( C627 + 1 ) ) by L2892 , L2844 , L2849 , L2837 , L3030 , GLIB_001:33;
L3033: C626 in ( NAT ) by ORDINAL1:def 12;
L3034: C626 < C627 by L2913 , L3026 , L3031 , XREAL_1:6;
L3035: C626 < ( len D236 ) by L3034 , L3030 , XXREAL_0:2;
L3036: ( D237 . ( ( len D235 ) + C626 ) ) = ( D236 . ( C626 + 1 ) ) by L3035 , L2892 , L2844 , L2849 , L2837 , L3033 , GLIB_001:33;
reconsider D253 = C627 , D254 = C626 as  even (Element of ( NAT )) by L3026 , L3031 , ORDINAL1:def 12;
reconsider D255 = ( D254 + 1 ) , D256 = ( D253 + 1 ) as  odd (Element of ( NAT ));
L3037: D255 < D256 by L3034 , XREAL_1:6;
L3038: D256 <= ( len D236 ) by L3030 , NAT_1:13;
L3039: D255 < ( len D236 ) by L3038 , L3037 , XXREAL_0:2;
L3040:
now
assume L3041: ( D255 + 2 ) >= D256;
per cases  by L3041 , XXREAL_0:1;
suppose L3042: ( D255 + 2 ) = D256;

L3043: ( D255 + 1 ) < ( len D236 ) by L3042 , L3030;
L3044: D255 < ( ( len D236 ) - 1 ) by L3043 , XREAL_1:20;
L3045: ( ( len D235 ) + D255 ) < ( ( ( len D236 ) - 1 ) + ( len D235 ) ) by L3044 , XREAL_1:6;
L3046: 1 <= ( ( len D235 ) + D255 ) by ABIAN:12 , NAT_1:12;
L3047: ( D236 . ( D255 + 1 ) ) Joins ( D236 . D255 ) , ( D236 . D256 ) , C597 by L3039 , L3042 , GLIB_001:def 3;
L3048: ( D236 . ( D255 + 1 ) ) = ( D237 . ( ( len D235 ) + D255 ) ) by L2892 , L2844 , L2849 , L2837 , L3039 , GLIB_001:33;
L3049: ( D236 . ( D255 + 1 ) ) in ( D237 .edges() ) by L3048 , L2893 , L3046 , L3045 , GLIB_001:99;
thus L3050: contradiction by L3049 , L2912 , L3026 , L3031 , L3032 , L3036 , L3047;
end;
suppose L3051: ( D255 + 2 ) > D256;

L3052: D255 >= D256 by L3051 , L22;
thus L3053: contradiction by L3052 , L3034 , XREAL_1:6;
end;
end;
L3055: D256 <= ( len D236 ) by L3030 , NAT_1:13;
L3056: D236 is  chordal by L3055 , L2853 , L2911 , L3026 , L3031 , L3032 , L3036 , L3040 , L2052;
L3057: C610 is  chordal by L3056 , L2804 , L2166;
thus L3058: contradiction by L3057 , L2833 , L2233;
end;
end;
theorem
L3060: (for B522 being  finite _Graph holds ((for B523 , B524 being (Vertex of B522) holds ((B523 <> B524 & (not B523 , B524 are_adjacent )) implies (for B525 being (VertexSeparator of B523 , B524) holds ((B525 is  minimal & B525 is non  empty) implies (for B526 being (inducedSubgraph of B522 , B525) holds B526 is  complete))))) implies B522 is  chordal))
proof
reconsider D257 = ( ( 2 * 2 ) + 1 ) as  odd Nat;
reconsider D258 = ( ( 2 * ( 0 ) ) + 1 ) as  odd Nat;
let C628 being  finite _Graph;
assume that
L3061: (for B527 , B528 being (Vertex of C628) holds ((B527 <> B528 & (not B527 , B528 are_adjacent )) implies (for B529 being (VertexSeparator of B527 , B528) holds ((B529 is  minimal & B529 is non  empty) implies (for B530 being (inducedSubgraph of C628 , B529) holds B530 is  complete)))));
let C629 being (Walk of C628);
assume that
L3062: ( C629 .length() ) > 3
and
L3063: C629 is  Cycle-like;
L3064: ( C629 .length() ) >= ( 3 + 1 ) by L3062 , NAT_1:13;
L3065: ( 2 * ( C629 .length() ) ) >= ( 2 * 4 ) by L3064 , XREAL_1:64;
L3066: ( ( 2 * ( C629 .length() ) ) + 1 ) >= ( 8 + 1 ) by L3065 , XREAL_1:7;
L3067: ( len C629 ) >= 9 by L3066 , GLIB_001:112;
L3068:
now
assume L3069: ( C629 . D258 ) = ( C629 . D257 );
L3070: D257 <= ( len C629 ) by L3067 , XXREAL_0:2;
L3071: D257 = ( len C629 ) by L3070 , L3063 , L3069 , GLIB_001:def 28;
thus L3072: contradiction by L3071 , L3067;
end;
per cases ;
suppose L3073: (ex B531 being set st B531 Joins ( C629 . D258 ) , ( C629 . D257 ) , C628);

L3074: ( D258 + 2 ) < D257;
L3075: ( ( len C629 ) + ( - 2 ) ) >= ( 9 + ( - 2 ) ) by L3067 , XREAL_1:7;
L3076: (not (D258 = 1 & D257 = ( ( len C629 ) - 2 ))) by L3075;
L3077: (not (D258 = 1 & D257 = ( len C629 ))) by L3067;
L3078: D257 <= ( len C629 ) by L3067 , XXREAL_0:2;
thus L3079: thesis by L3078 , L3063 , L3073 , L3074 , L3077 , L3076 , L2052;
end;
suppose L3080: (not (ex B532 being set st B532 Joins ( C629 . D258 ) , ( C629 . D257 ) , C628));

reconsider D259 = ( C629 . D257 ) as (Vertex of C628) by L3067 , GLIB_001:7 , XXREAL_0:2;
reconsider D260 = ( C629 . D258 ) as (Vertex of C628) by L3067 , GLIB_001:7 , XXREAL_0:2;
set D261 = ( C629 .cut (D257 , ( len C629 )) );
consider C630 being (VertexSeparator of D260 , D259) such that L3081: C630 is  minimal by L1860;
set D262 = the (inducedSubgraph of C628 , C630);
L3082: D257 <= ( len C629 ) by L3067 , XXREAL_0:2;
L3083: D261 is_Walk_from ( C629 . D257 ) , ( C629 . ( len C629 ) ) by L3082 , GLIB_001:37;
L3084: D261 is_Walk_from ( C629 . D257 ) , ( C629 . D258 ) by L3083 , L3063 , GLIB_001:118;
L3085: (not D260 , D259 are_adjacent ) by L3080 , L920;
L3086: C630 is (VertexSeparator of D259 , D260) by L3085 , L3068 , L1691;
consider C631 being  odd Nat such that L3087: 1 < C631 and L3088: C631 < ( len D261 ) and L3089: ( D261 . C631 ) in C630 by L3086 , L3068 , L3085 , L3084 , L1752;
L3090: ( 1 + ( - 1 ) ) < ( C631 + ( - 1 ) ) by L3087 , XREAL_1:8;
reconsider D263 = ( C631 - 1 ) as  even (Element of ( NAT )) by L3090 , INT_1:3;
reconsider D264 = D263 as  even Nat;
L3091: ( C631 + ( - 1 ) ) < ( ( len D261 ) + ( - 1 ) ) by L3088 , XREAL_1:8;
L3092: ( ( ( len D261 ) + 5 ) + ( - 5 ) ) = ( ( ( len C629 ) + 1 ) + ( - 5 ) ) by L3082 , GLIB_001:36;
L3093: ( D264 + D257 ) < ( ( ( len C629 ) - 5 ) + D257 ) by L3092 , L3091 , XREAL_1:8;
L3094: ( C631 + ( - 1 ) ) < ( C631 + ( 0 ) ) by XREAL_1:8;
L3095: ( C631 - 1 ) < ( len D261 ) by L3094 , L3088 , XXREAL_0:2;
L3096: ( D261 . ( D264 + 1 ) ) = ( C629 . ( D257 + D264 ) ) by L3095 , L3082 , GLIB_001:36;
reconsider D265 = ( C629 . ( D257 + D264 ) ) as (Vertex of D262) by L3096 , L3089 , GLIB_000:def 37;
set D266 = ( C629 .cut (D258 , D257) );
L3097: D257 <= ( len C629 ) by L3067 , XXREAL_0:2;
L3098: D266 is_Walk_from ( C629 . D258 ) , ( C629 . D257 ) by L3097 , GLIB_001:37;
L3099: C630 is non  empty by L3098 , L3068 , L3085 , L1774;
L3100: D262 is  complete by L3099 , L3061 , L3068 , L3085 , L3081;
L3101: ( ( ( len D266 ) + 1 ) + ( - 1 ) ) = ( ( 5 + 1 ) + ( - 1 ) ) by L3097 , GLIB_001:36;
consider C632 being  odd Nat such that L3102: D258 < C632 and L3103: C632 < D257 and L3104: ( D266 . C632 ) in C630 by L3101 , L3068 , L3085 , L3098 , L1752;
L3105: C632 <= ( 5 - 2 ) by L3103 , L14;
L3106: ( 1 + 2 ) <= C632 by L3102 , L22;
L3107: C632 = 3 by L3106 , L3105 , XXREAL_0:1;
L3108: ( D266 . ( 2 + 1 ) ) = ( C629 . ( 1 + 2 ) ) by L3097 , L3101 , GLIB_001:36;
L3109: ( C629 . 3 ) in C630 by L3108 , L3104 , L3106 , L3105 , XXREAL_0:1;
reconsider D267 = ( C629 . 3 ) as (Vertex of D262) by L3109 , GLIB_000:def 37;
L3110: ( ( C632 + 2 ) + ( 0 ) ) < ( ( C632 + 2 ) + D264 ) by L3090 , XREAL_1:8;
L3111: ( D257 + D264 ) in ( NAT ) by ORDINAL1:def 12;
L3112:
now
assume L3113: D267 = D265;
L3114: C632 < ( D257 + D264 ) by L3107 , L3110 , XXREAL_0:2;
thus L3115: contradiction by L3114 , L3063 , L3107 , L3093 , L3111 , L3113 , GLIB_001:def 28;
end;
L3116: D267 , D265 are_adjacent  by L3112 , L3100 , L1483;
consider C633 being set such that L3117: C633 Joins ( C629 . 3 ) , ( C629 . ( D257 + D264 ) ) , D262 by L3116 , L920;
L3118: C633 Joins ( C629 . C632 ) , ( C629 . ( D257 + D264 ) ) , C628 by L3107 , L3117 , GLIB_000:72;
thus L3119: thesis by L3118 , L3063 , L3107 , L3093 , L3110 , L2052;
end;
end;
theorem
L3121: (for B533 being  finite  chordal _Graph holds (for B534 , B535 being (Vertex of B533) holds ((B534 <> B535 & (not B534 , B535 are_adjacent )) implies (for B536 being (VertexSeparator of B534 , B535) holds (B536 is  minimal implies (for B537 being (removeVertices of B533 , B536) holds (for B538 being (Vertex of B537) holds (B534 = B538 implies (ex B539 being (Vertex of B533) st (B539 in ( B537 .reachableFrom B538 ) & (for B540 being (Vertex of B533) holds (B540 in B536 implies B539 , B540 are_adjacent ))))))))))))
proof
let C634 being  finite  chordal _Graph;
let C635 , C636 being (Vertex of C634);
assume that
L3122: C635 <> C636
and
L3123: (not C635 , C636 are_adjacent );
let C637 being (VertexSeparator of C635 , C636);
assume that
L3124: C637 is  minimal;
let C638 being (removeVertices of C634 , C637);
let C639 being (Vertex of C638);
assume that
L3125: C635 = C639;
assume L3126: (for B541 being (Vertex of C634) holds ((not B541 in ( C638 .reachableFrom C639 )) or (ex B542 being (Vertex of C634) st (B542 in C637 & (not B541 , B542 are_adjacent )))));
per cases ;
suppose L3127: C637 is  empty;

L3128: (not (ex B543 being (Vertex of C634) st (B543 in C637 & (not C635 , B543 are_adjacent )))) by L3127;
thus L3129: contradiction by L3128 , L3125 , L3126 , GLIB_002:9;
end;
suppose L3130: C637 is non  empty;

reconsider D268 = C637 as non  empty (Subset of ( the_Vertices_of C634 )) by L3130;
set D269 = ( C638 .reachableFrom C639 );
deffunc H3(set) = ( card ( ( C634 .AdjacentSet { $1 } ) /\ D268 ) );
set D270 = { H3(B544) where B544 is (Vertex of C634) : B544 in D269 };
L3131:
now
let C640 being set;
assume L3132: C640 in D270;
L3133: (ex B545 being (Vertex of C634) st (C640 = ( card ( ( C634 .AdjacentSet { B545 } ) /\ D268 ) ) & B545 in D269)) by L3132;
thus L3134: C640 is  natural by L3133;
end;
L3135: D269 is  finite;
L3136: D270 is  finite from FRAENKEL:sch 21(L3135);
L3137: C635 in D269 by L3125 , GLIB_002:9;
L3138: ( card ( ( C634 .AdjacentSet { C635 } ) /\ D268 ) ) in D270 by L3137;
reconsider D271 = D270 as  finite non  empty  natural-membered set by L3138 , L3136 , L3131 , MEMBERED:def 6;
set D272 = the (inducedSubgraph of C638 , D269);
L3139: ( the_Vertices_of D272 ) = D269 by GLIB_000:def 37;
L3140: ( max D271 ) in D271 by XXREAL_2:def 8;
consider C641 being (Vertex of C634) such that L3141: ( max D271 ) = ( card ( ( C634 .AdjacentSet { C641 } ) /\ D268 ) ) and L3142: C641 in D269 by L3140;
set D273 = ( ( C634 .AdjacentSet { C641 } ) /\ D268 );
L3143: ( D269 /\ D268 ) = ( {} ) by L3122 , L3123 , L1816;
set D274 = the (inducedSubgraph of C634 , D268);
set D275 = ( the_Vertices_of C634 );
L3144: ( ( 2 * ( 0 ) ) + 1 ) is  odd;
L3145: (not C635 in D268) by L3122 , L3123 , L1654;
L3146: ( D275 \ D268 ) is non  empty non  empty non  empty non  empty (Subset of D275) by L3145 , XBOOLE_0:def 5;
L3147: ( the_Vertices_of C638 ) c= D275;
reconsider D276 = D269 as non  empty (Subset of D275) by L3147 , XBOOLE_1:1;
L3148:
now
let C642 being set;
assume that
L3149: C642 in D276;
L3150: (not C642 in D268) by L3143 , L3149 , XBOOLE_0:def 4;
thus L3151: C642 in ( D275 \ D268 ) by L3150 , L3149 , XBOOLE_0:def 5;
end;
L3152: D276 c= ( D275 \ D268 ) by L3148 , TARSKI:def 3;
reconsider D277 = D272 as (inducedSubgraph of C634 , D276) by L3152 , L3146 , L495;
consider C643 being (Vertex of C634) such that L3153: C643 in D268 and L3154: (not C641 , C643 are_adjacent ) by L3126 , L3142;
L3155: (not C643 in D276) by L3153 , L3143 , XBOOLE_0:def 4;
set D278 = ( D276 \/ { C643 } );
set D279 = the (inducedSubgraph of C634 , D278);
L3156: C643 in { C643 } by TARSKI:def 1;
L3157: C643 in D278 by L3156 , XBOOLE_0:def 3;
L3158: C641 in D278 by L3142 , XBOOLE_0:def 3;
reconsider D280 = C641 , D281 = C643 as (Vertex of D279) by L3158 , L3157 , GLIB_000:def 37;
L3159: (ex B546 being (Vertex of C634) st (B546 in D276 & C643 , B546 are_adjacent )) by L3122 , L3123 , L3124 , L3125 , L3153 , L1921;
L3160: C643 in ( C634 .AdjacentSet ( the_Vertices_of D277 ) ) by L3159 , L3139 , L3155;
L3161: D279 is  connected by L3160 , L1379;
consider C644 being (Walk of D279) such that L3162: C644 is_Walk_from D280 , D281 by L3161 , GLIB_002:def 1;
consider C645 being (Path of D279) such that L3163: C645 is_Walk_from ( C644 .first() ) , ( C644 .last() ) and L3164: C645 is  minlength by L766;
L3165: ( C644 .first() ) = D280 by L3162 , GLIB_001:def 23;
L3166: ( C645 .first() ) = D280 by L3165 , L3163 , GLIB_001:def 23;
L3167: ( C644 .last() ) = D281 by L3162 , GLIB_001:def 23;
L3168: ( C645 .last() ) = C643 by L3167 , L3163 , GLIB_001:def 23;
L3169: C641 <> C643 by L3142 , L3153 , L3143 , XBOOLE_0:def 4;
L3170: C645 is non  trivial by L3169 , L3166 , L3168 , GLIB_001:127;
L3171: ( len C645 ) >= 3 by L3170 , GLIB_001:125;
L3172:
now
assume L3173: ( len C645 ) < ( ( 2 * 2 ) + 1 );
L3174: ( len C645 ) <= ( 5 - 2 ) by L3173 , L14;
L3175: ( len C645 ) = 3 by L3174 , L3171 , XXREAL_0:1;
L3176: ( ( 2 * ( 0 ) ) + 1 ) < ( len C645 ) by L3175;
L3177: ( C645 . ( 1 + 1 ) ) Joins ( C645 . 1 ) , ( C645 . ( 1 + 2 ) ) , D279 by L3176 , GLIB_001:def 3;
L3178: ( C645 . 2 ) Joins C641 , C643 , C634 by L3177 , L3166 , L3168 , L3175 , GLIB_000:72;
thus L3179: contradiction by L3178 , L3154 , L920;
end;
L3180: ( 5 + ( - 2 ) ) <= ( ( len C645 ) + ( - 2 ) ) by L3172 , XREAL_1:7;
reconsider D282 = ( ( len C645 ) - ( 2 * 1 ) ) as  odd (Element of ( NAT )) by L3180 , INT_1:3 , XXREAL_0:2;
set D283 = ( C645 . D282 );
L3181: D282 < ( len C645 ) by XREAL_1:44;
L3182:
now
assume L3183: D283 = C643;
L3184: ( ( len C645 ) - 2 ) = 1 by L3183 , L3168 , L3181 , GLIB_001:def 28;
L3185: ( len C645 ) = ( 1 + 2 ) by L3184;
thus L3186: contradiction by L3185 , L3172;
end;
L3187: (not C643 in ( C634 .AdjacentSet { C641 } )) by L3154 , L1070;
L3188: ( the_Vertices_of D279 ) = D278 by GLIB_000:def 37;
L3189: ( C645 . D282 ) in ( the_Vertices_of D279 ) by L3181 , GLIB_001:7;
L3190: (D283 in D276 or D283 in { C643 }) by L3189 , L3188 , XBOOLE_0:def 3;
reconsider D284 = D283 as (Vertex of C634) by L3189;
set D285 = ( ( C634 .AdjacentSet { D284 } ) /\ D268 );
L3191: ( C645 . ( D282 + 1 ) ) Joins D284 , ( C645 . ( ( ( len C645 ) - 2 ) + 2 ) ) , D279 by L3181 , GLIB_001:def 3;
L3192: ( C645 . ( D282 + 1 ) ) Joins D284 , C643 , C634 by L3191 , L3168 , GLIB_000:72;
L3193: D284 , C643 are_adjacent  by L3192 , L920;
L3194: C643 in ( C634 .AdjacentSet { D284 } ) by L3193 , L3182 , L1070;
L3195: C643 in ( ( C634 .AdjacentSet { D284 } ) /\ D268 ) by L3194 , L3153 , XBOOLE_0:def 4;
L3196:
now
assume L3197: D273 c= D285;
L3198: (not C643 in D273) by L3187 , XBOOLE_0:def 4;
L3199: D273 c< D285 by L3198 , L3195 , L3197 , XBOOLE_0:def 8;
L3200: ( card D273 ) < ( card D285 ) by L3199 , TREES_1:6;
L3201: ( card D285 ) in D271 by L3190 , L3182 , TARSKI:def 1;
thus L3202: contradiction by L3201 , L3141 , L3200 , XXREAL_2:def 8;
end;
consider C646 being set such that L3203: C646 in ( ( C634 .AdjacentSet { C641 } ) /\ D268 ) and L3204: (not C646 in ( ( C634 .AdjacentSet { D284 } ) /\ D268 )) by L3196 , TARSKI:def 3;
L3205: C646 in D268 by L3203 , XBOOLE_0:def 4;
L3206: (not C646 in ( C634 .AdjacentSet { D284 } )) by L3205 , L3204 , XBOOLE_0:def 4;
reconsider D286 = C646 as (Vertex of C634) by L3203;
defpred S5[ Nat ] means ($1 in ( dom C645 ) & $1 is  odd & $1 < ( len C645 ) & (ex B547 being set st B547 Joins D286 , ( C645 . $1 ) , C634));
L3207: (for B548 being Nat holds (S5[ B548 ] implies B548 <= ( len C645 )));
L3208: (not D286 in D276) by L3143 , L3205 , XBOOLE_0:def 4;
L3209: 1 < ( len C645 ) by L3172 , XXREAL_0:2;
L3210: 1 in ( dom C645 ) by L3209 , FINSEQ_3:25;
L3211: D286 in ( C634 .AdjacentSet { C641 } ) by L3203 , XBOOLE_0:def 4;
L3212: C641 , D286 are_adjacent  by L3211 , L1070;
L3213: (ex B549 being set st B549 Joins D286 , ( C645 . 1 ) , C634) by L3212 , L3166 , L920;
L3214: (ex B550 being Nat st S5[ B550 ]) by L3213 , L3209 , L3210 , L3144;
consider C647 being Nat such that L3215: S5[ C647 ] and L3216: (for B551 being Nat holds (S5[ B551 ] implies C647 >= B551)) from NAT_1:sch 6(L3207 , L3214);
reconsider D287 = C647 as  odd (Element of ( NAT )) by L3215;
set D288 = ( C645 .cut (D287 , D282) );
reconsider D289 = D288 as (Path of C634) by GLIB_001:175;
L3217: D287 <= D282 by L3215 , L14;
L3218: D282 < ( len C645 ) by XREAL_1:44;
L3219: D288 is  minlength by L3218 , L3164 , L3217 , L832;
L3220: ( ( len D289 ) + D287 ) = ( D282 + 1 ) by L3217 , L3218 , GLIB_001:36;
L3221:
now
let C648 being  odd Nat;
assume that
L3222: C648 in ( dom D289 )
and
L3223: C648 <> 1;
L3224: 1 <= C648 by L3222 , FINSEQ_3:25;
L3225: ( 1 + ( - 1 ) ) <= ( C648 + ( - 1 ) ) by L3224 , XREAL_1:7;
reconsider D290 = ( C648 - 1 ) as  even (Element of ( NAT )) by L3225 , INT_1:3;
reconsider D291 = ( D287 + D290 ) as  odd (Element of ( NAT ));
L3226: ( C648 + ( - 1 ) ) < ( C648 + ( - ( 0 ) ) ) by XREAL_1:8;
L3227: C648 <= ( len D289 ) by L3222 , FINSEQ_3:25;
L3228: D290 < ( len D289 ) by L3227 , L3226 , XXREAL_0:2;
L3229: D291 in ( dom C645 ) by L3228 , L3217 , L3218 , GLIB_001:36;
L3230: ( ( len C645 ) + ( - 1 ) ) < ( ( len C645 ) + ( - ( 0 ) ) ) by XREAL_1:8;
assume L3231: (ex B552 being set st B552 Joins ( D289 . C648 ) , D286 , C634);
L3232: ( D290 + D287 ) < ( ( ( ( len C645 ) - 1 ) - D287 ) + D287 ) by L3220 , L3228 , XREAL_1:8;
L3233: D291 < ( len C645 ) by L3232 , L3230 , XXREAL_0:2;
L3234: ( D289 . ( D290 + 1 ) ) = ( C645 . D291 ) by L3217 , L3218 , L3228 , GLIB_001:36;
L3235:
now
assume L3236: D290 <> ( 0 );
L3237: ( D287 + ( 0 ) ) < ( D287 + D290 ) by L3236 , XREAL_1:8;
thus L3238: contradiction by L3237 , L3216 , L3231 , L3234 , L3229 , L3233 , GLIB_000:14;
end;
thus L3239: contradiction by L3235 , L3223;
end;
set D292 = ( D289 .first() );
set D293 = ( D289 .last() );
L3240: ( D288 .first() ) = ( C645 . D287 ) by L3217 , L3218 , GLIB_001:37;
L3241: D286 , D292 are_adjacent  by L3240 , L3215 , L920;
L3242: D286 <> C643 by L3153 , L3194 , L3204 , XBOOLE_0:def 4;
L3243: (not D286 in { C643 }) by L3242 , TARSKI:def 1;
reconsider D294 = D286 , D295 = C643 as (Vertex of D274) by L3153 , L3205 , GLIB_000:def 37;
L3244: D274 is  complete by L3122 , L3123 , L3124 , L2761;
L3245: D294 , D295 are_adjacent  by L3244 , L3242 , L1483;
consider C649 being set such that L3246: C649 Joins D294 , D295 , D274 by L3245 , L920;
L3247: C649 Joins D286 , C643 , C634 by L3246 , GLIB_000:72;
L3248: D286 , C643 are_adjacent  by L3247 , L920;
L3249: ( D288 .last() ) = ( C645 . D282 ) by L3217 , L3218 , GLIB_001:37;
L3250: ( D289 .last() ) = ( C645 . D282 ) by L3249;
L3251: D284 <> D286 by L3143 , L3190 , L3182 , L3205 , TARSKI:def 1 , XBOOLE_0:def 4;
L3252: (not D284 , D286 are_adjacent ) by L3251 , L3206 , L1070;
L3253: ( D289 .first() ) <> ( D289 .last() ) by L3252 , L3215 , L3240 , L3249 , L920;
L3254: D289 is  open by L3253 , GLIB_001:def 24;
L3255: ( D289 .vertices() ) = ( D288 .vertices() ) by GLIB_001:98;
L3256: D293 in ( D288 .vertices() ) by L3255 , GLIB_001:88;
L3257: D293 <> D286 by L3256 , L3188 , L3208 , L3243 , XBOOLE_0:def 3;
L3258:
now
L3259: ( ( 2 * ( 0 ) ) + 1 ) <= D287 by ABIAN:12;
L3260: ( ( len ( C645 .cut (1 , D287) ) ) + 1 ) = ( D287 + 1 ) by L3259 , L3215 , GLIB_001:36;
assume L3261: ( C645 . D287 ) = ( C645 . ( len C645 ) );
L3262: ( C645 .cut (1 , D287) ) is_Walk_from ( C645 .first() ) , ( C645 .last() ) by L3261 , L3215 , L3259 , GLIB_001:37;
thus L3263: contradiction by L3262 , L3164 , L3215 , L3260 , L652;
end;
L3264:
now
let C650 being set;
assume that
L3265: C650 in ( D289 .vertices() );
consider C651 being  odd (Element of ( NAT )) such that L3266: C651 <= ( len D289 ) and L3267: ( D289 . C651 ) = C650 by L3265 , GLIB_001:87;
L3268: 1 <= C651 by ABIAN:12;
L3269: ( 1 + ( - 1 ) ) <= ( C651 + ( - 1 ) ) by L3268 , XREAL_1:7;
reconsider D296 = ( C651 - 1 ) as  even (Element of ( NAT )) by L3269 , INT_1:3;
reconsider D297 = ( D287 + D296 ) as  odd (Element of ( NAT ));
L3270: ( ( len C645 ) + ( - 1 ) ) < ( ( len C645 ) + ( - ( 0 ) ) ) by XREAL_1:8;
L3271: ( C651 + ( - 1 ) ) < ( C651 + ( - ( 0 ) ) ) by XREAL_1:8;
L3272: D296 < ( len D289 ) by L3271 , L3266 , XXREAL_0:2;
L3273: ( D287 + D296 ) < ( ( ( ( len C645 ) - 1 ) - D287 ) + D287 ) by L3272 , L3220 , XREAL_1:8;
L3274: D297 < ( len C645 ) by L3273 , L3270 , XXREAL_0:2;
L3275: ( D289 . ( D296 + 1 ) ) = ( C645 . D297 ) by L3217 , L3218 , L3272 , GLIB_001:36;
L3276:
now
L3277: 1 <= D287 by ABIAN:12;
assume L3278: C650 = C643;
L3279: ( D287 + ( C651 + ( - 1 ) ) ) = 1 by L3278 , L3168 , L3267 , L3275 , L3274 , GLIB_001:def 28;
L3280:
now
assume L3281: 1 < C651;
L3282: ( 1 + 1 ) <= C651 by L3281 , NAT_1:13;
L3283: ( 2 + 1 ) <= ( D287 + C651 ) by L3282 , L3277 , XREAL_1:7;
thus L3284: contradiction by L3283 , L3279;
end;
L3285: 1 <= C651 by ABIAN:12;
thus L3286: contradiction by L3285 , L3168 , L3258 , L3240 , L3267 , L3278 , L3280 , XXREAL_0:1;
end;
L3287: (not C650 in { C643 }) by L3276 , TARSKI:def 1;
L3288: ( D289 .vertices() ) c= ( C645 .vertices() ) by L3217 , L3218 , L3255 , GLIB_001:94;
L3289: C650 in ( C645 .vertices() ) by L3288 , L3265;
thus L3290: C650 in D276 by L3289 , L3188 , L3287 , XBOOLE_0:def 3;
end;
L3291: D292 in ( D288 .vertices() ) by L3255 , GLIB_001:88;
L3292: D292 <> D286 by L3291 , L3188 , L3208 , L3243 , XBOOLE_0:def 3;
L3293: D293 , C643 are_adjacent  by L3192 , L3249 , L920;
consider C652 being (Path of C634) such that L3294: ( len C652 ) = 7 and L3295: ( C652 .length() ) = 3 and L3296: ( C652 .vertices() ) = { D293 , C643 , D286 , D292 } and L3297: ( C652 . 1 ) = D293 and L3298: ( C652 . 3 ) = C643 and L3299: ( C652 . 5 ) = D286 and L3300: ( C652 . 7 ) = D292 by L3293 , L3168 , L3182 , L3242 , L3248 , L3258 , L3240 , L3249 , L3257 , L3292 , L3241 , L990;
L3301: C652 is non  trivial by L3294 , GLIB_001:126;
L3302: ( D289 .edges() ) misses ( C652 .edges() )
proof
assume L3303: (not ( D289 .edges() ) misses ( C652 .edges() ));
L3304: ( ( D289 .edges() ) /\ ( C652 .edges() ) ) <> ( {} ) by L3303 , XBOOLE_0:def 7;
consider C653 being set such that L3305: C653 in ( ( D289 .edges() ) /\ ( C652 .edges() ) ) by L3304 , XBOOLE_0:def 1;
L3306: C653 in ( D289 .edges() ) by L3305 , XBOOLE_0:def 4;
L3307: C653 in ( C652 .edges() ) by L3305 , XBOOLE_0:def 4;
consider C654 being  even (Element of ( NAT )) such that L3308: 1 <= C654 and L3309: C654 <= 7 and L3310: ( C652 . C654 ) = C653 by L3307 , L3294 , GLIB_001:99;
per cases  by L3308 , L3309 , L103;
suppose L3311: C654 = 2;

L3312: ( ( 2 * ( 0 ) ) + 1 ) < ( len C652 ) by L3294;
L3313: ( C652 . ( 1 + 1 ) ) Joins ( C652 . 1 ) , ( C652 . ( 1 + 2 ) ) , C634 by L3312 , GLIB_001:def 3;
L3314: C643 in ( D289 .vertices() ) by L3313 , L3298 , L3306 , L3310 , L3311 , GLIB_001:105;
L3315: C643 in D276 by L3314 , L3264;
thus L3316: contradiction by L3315 , L3153 , L3143 , XBOOLE_0:def 4;
end;
suppose L3317: C654 = 4;

L3318: ( ( 2 * 1 ) + 1 ) < ( len C652 ) by L3294;
L3319: ( C652 . ( 3 + 1 ) ) Joins ( C652 . 3 ) , ( C652 . ( 3 + 2 ) ) , C634 by L3318 , GLIB_001:def 3;
L3320: C643 in ( D289 .vertices() ) by L3319 , L3298 , L3306 , L3310 , L3317 , GLIB_001:105;
L3321: C643 in D276 by L3320 , L3264;
thus L3322: contradiction by L3321 , L3153 , L3143 , XBOOLE_0:def 4;
end;
suppose L3323: C654 = 6;

L3324: ( ( 2 * 2 ) + 1 ) < ( len C652 ) by L3294;
L3325: ( C652 . ( 5 + 1 ) ) Joins ( C652 . 5 ) , ( C652 . ( 5 + 2 ) ) , C634 by L3324 , GLIB_001:def 3;
L3326: D286 in ( D289 .vertices() ) by L3325 , L3299 , L3306 , L3310 , L3323 , GLIB_001:105;
L3327: D286 in D276 by L3326 , L3264;
thus L3328: contradiction by L3327 , L3143 , L3205 , XBOOLE_0:def 4;
end;
end;
L3330:
now
let C655 being set;
assume that
L3331: C655 in { ( D289 .first() ) , ( D289 .last() ) };
per cases  by L3331 , TARSKI:def 2;
suppose L3332: C655 = D292;

L3333: C655 in ( D289 .vertices() ) by L3332 , GLIB_001:88;
L3334: C655 in ( C652 .vertices() ) by L3294 , L3300 , L3332 , GLIB_001:87;
thus L3335: C655 in ( ( D289 .vertices() ) /\ ( C652 .vertices() ) ) by L3334 , L3333 , XBOOLE_0:def 4;
end;
suppose L3336: C655 = D293;

L3337: ( ( 2 * ( 0 ) ) + 1 ) <= ( len C652 ) by L3294;
L3338: C655 in ( C652 .vertices() ) by L3337 , L3297 , L3336 , GLIB_001:87;
L3339: C655 in ( D289 .vertices() ) by L3336 , GLIB_001:88;
thus L3340: C655 in ( ( D289 .vertices() ) /\ ( C652 .vertices() ) ) by L3339 , L3338 , XBOOLE_0:def 4;
end;
end;
L3342: { ( D289 .first() ) , ( D289 .last() ) } c= ( ( D289 .vertices() ) /\ ( C652 .vertices() ) ) by L3330 , TARSKI:def 3;
L3343:
now
let C656 being set;
assume that
L3344: C656 in ( ( D289 .vertices() ) /\ ( C652 .vertices() ) );
L3345: C656 in { D293 , C643 , D286 , D292 } by L3296 , L3344 , XBOOLE_0:def 4;
L3346: (C656 = D293 or C656 = C643 or C656 = D286 or C656 = D292) by L3345 , ENUMSET1:def 2;
L3347: C656 in ( D289 .vertices() ) by L3344 , XBOOLE_0:def 4;
L3348: C656 in D276 by L3347 , L3264;
thus L3349: C656 in { ( D289 .first() ) , ( D289 .last() ) } by L3348 , L3153 , L3143 , L3205 , L3346 , TARSKI:def 2 , XBOOLE_0:def 4;
end;
L3350: ( ( D289 .vertices() ) /\ ( C652 .vertices() ) ) c= { ( D289 .first() ) , ( D289 .last() ) } by L3343 , TARSKI:def 3;
L3351: ( ( D289 .vertices() ) /\ ( C652 .vertices() ) ) = { ( D289 .first() ) , ( D289 .last() ) } by L3350 , L3342 , XBOOLE_0:def 10;
L3352:
now
let C657 being  odd Nat;
assume that
L3353: C657 in ( dom D289 )
and
L3354: C657 <> ( len D289 );
L3355: 1 <= C657 by L3353 , FINSEQ_3:25;
L3356: ( 1 + ( - 1 ) ) <= ( C657 + ( - 1 ) ) by L3355 , XREAL_1:7;
reconsider D298 = ( C657 - 1 ) as  even (Element of ( NAT )) by L3356 , INT_1:3;
reconsider D299 = ( D287 + D298 ) as  odd (Element of ( NAT ));
L3357: ( C657 + ( - 1 ) ) < ( C657 + ( - ( 0 ) ) ) by XREAL_1:8;
L3358: C657 <= ( len D289 ) by L3353 , FINSEQ_3:25;
L3359: D298 < ( len D289 ) by L3358 , L3357 , XXREAL_0:2;
L3360: D299 in ( dom C645 ) by L3359 , L3217 , L3218 , GLIB_001:36;
L3361: D299 <= ( len C645 ) by L3360 , FINSEQ_3:25;
L3362: ( C645 . D299 ) in D278 by L3361 , L3188 , GLIB_001:7;
L3363:
now
L3364: ( ( ( len C645 ) - D287 ) + ( - 1 ) ) < ( ( len C645 ) - D287 ) by XREAL_1:30;
assume L3365: D299 = ( len C645 );
thus L3366: contradiction by L3365 , L3220 , L3358 , L3357 , L3364 , XXREAL_0:2;
end;
L3367: D299 < ( len C645 ) by L3363 , L3361 , XXREAL_0:1;
L3368: ( D299 + 2 ) <= ( len C645 ) by L3367 , L22;
L3369: ( D299 + 2 ) <> ( len C645 ) by L3220 , L3354;
L3370: ( D299 + 2 ) < ( len C645 ) by L3369 , L3368 , XXREAL_0:1;
L3371: ( C645 . ( len C645 ) ) in D278 by L3188 , GLIB_001:7;
assume L3372: (ex B553 being set st B553 Joins ( D289 . C657 ) , C643 , C634);
L3373: ( D289 . ( D298 + 1 ) ) = ( C645 . D299 ) by L3217 , L3218 , L3359 , GLIB_001:36;
thus L3374: contradiction by L3373 , L3164 , L3168 , L3372 , L3370 , L3362 , L3371 , L218 , L791;
end;
L3375: ( D289 .first() ) = ( C645 . D287 ) by L3240;
L3376: ( C645 . D287 ) <> ( C645 . D282 ) by L3252 , L3215 , L920;
L3377: D289 is non  trivial by L3376 , L3375 , L3250 , GLIB_001:127;
L3378: ( D289 .length() ) <> ( 0 ) by L3377 , GLIB_001:def 26;
L3379: ( D289 .length() ) >= ( ( 0 ) + 1 ) by L3378 , NAT_1:13;
set D300 = ( D289 .append C652 );
L3380: ( C652 .first() ) = D293 by L3297;
L3381: ( D300 . ( ( len D289 ) + 6 ) ) = ( C652 . ( 6 + 1 ) ) by L3380 , L3294 , GLIB_001:33;
L3382: ( D300 . ( ( len D289 ) + 4 ) ) = ( C652 . ( 4 + 1 ) ) by L3294 , L3380 , GLIB_001:33;
L3383: ( D300 . ( ( len D289 ) + 2 ) ) = ( C652 . ( 2 + 1 ) ) by L3294 , L3380 , GLIB_001:33;
L3384: ( D300 .length() ) = ( ( D289 .length() ) + 3 ) by L3295 , L3380 , L492;
L3385: ( D300 .length() ) >= ( 1 + 3 ) by L3384 , L3379 , XREAL_1:7;
L3386: ( D300 .length() ) > 3 by L3385 , NAT_1:13;
L3387: ( C652 .last() ) = D292 by L3294 , L3300;
L3388: C652 is  open by L3387 , L3253 , L3380 , GLIB_001:def 24;
L3389: D300 is  Cycle-like by L3388 , L3254 , L3380 , L3387 , L3301 , L3302 , L3351 , L390;
L3390: D300 is  chordal by L3389 , L3386 , L2420;
consider C658 , C659 being  odd Nat such that L3391: ( C658 + 2 ) < C659 and L3392: C659 <= ( len D300 ) and L3393: ( D300 . C658 ) <> ( D300 . C659 ) and L3394: (ex B554 being set st B554 Joins ( D300 . C658 ) , ( D300 . C659 ) , C634) and L3395: (D300 is  Cycle-like implies ((not (C658 = 1 & C659 = ( len D300 ))) & (not (C658 = 1 & C659 = ( ( len D300 ) - 2 ))) & (not (C658 = 3 & C659 = ( len D300 ))))) by L3390 , L2019;
consider C660 being set such that L3396: C660 Joins ( D300 . C658 ) , ( D300 . C659 ) , C634 by L3394;
L3397: ( ( ( len D300 ) + 1 ) + ( - 1 ) ) = ( ( ( len D289 ) + ( len C652 ) ) + ( - 1 ) ) by L3380 , GLIB_001:28;
L3398: (C659 <= ( len D289 ) or C659 = ( ( len D289 ) + 2 ) or C659 = ( ( len D289 ) + 4 ) or C659 = ( ( len D289 ) + 6 ))
proof
per cases ;
suppose L3399: C659 <= ( len D289 );

thus L3400: thesis by L3399;
end;
suppose L3401: C659 > ( len D289 );

L3402: ( ( len D289 ) + 2 ) <= C659 by L3401 , L22;
per cases  by L3402 , XXREAL_0:1;
suppose L3403: ( ( len D289 ) + 2 ) = C659;

thus L3404: thesis by L3403;
end;
suppose L3405: ( ( len D289 ) + 2 ) < C659;

L3406: ( ( ( len D289 ) + 2 ) + 2 ) <= C659 by L3405 , L22;
per cases  by L3406 , XXREAL_0:1;
suppose L3407: ( ( len D289 ) + 4 ) = C659;

thus L3408: thesis by L3407;
end;
suppose L3409: ( ( len D289 ) + ( 2 * 2 ) ) < C659;

L3410: ( ( ( len D289 ) + 4 ) + 2 ) <= C659 by L3409 , L22;
thus L3411: thesis by L3410 , L3294 , L3397 , L3392 , XXREAL_0:1;
end;
end;
end;
end;
L3415: 1 <= C658 by ABIAN:12;
per cases  by L3398;
suppose L3416: C659 <= ( len D289 );

L3417: ( C658 + ( 0 ) ) <= ( C658 + 2 ) by XREAL_1:7;
L3418: ( C658 + 2 ) <= ( len D289 ) by L3391 , L3416 , XXREAL_0:2;
L3419: C658 <= ( len D289 ) by L3418 , L3417 , XXREAL_0:2;
L3420: C658 in ( dom D289 ) by L3419 , L3415 , FINSEQ_3:25;
L3421: ( D289 . C658 ) = ( D300 . C658 ) by L3420 , GLIB_001:32;
L3422: 1 <= C659 by ABIAN:12;
L3423: C659 in ( dom D289 ) by L3422 , L3416 , FINSEQ_3:25;
L3424: ( D289 . C659 ) = ( D300 . C659 ) by L3423 , GLIB_001:32;
thus L3425: contradiction by L3424 , L3219 , L3391 , L3396 , L3416 , L3421 , L817;
end;
suppose L3426: C659 = ( ( len D289 ) + 2 );

L3427: C658 < ( len D289 ) by L3426 , L3391 , XREAL_1:6;
L3428: C658 in ( dom D289 ) by L3427 , L3415 , FINSEQ_3:25;
L3429: C660 Joins ( D289 . C658 ) , C643 , C634 by L3428 , L3298 , L3383 , L3396 , L3426 , GLIB_001:32;
thus L3430: contradiction by L3429 , L3352 , L3391 , L3426 , L3428;
end;
suppose L3431: C659 = ( ( len D289 ) + 4 );

L3432: ( ( C658 + 2 ) + 2 ) <= ( ( len D289 ) + 4 ) by L3431 , L3391 , L22;
L3433: ( C658 + 4 ) <= ( ( len D289 ) + 4 ) by L3432;
L3434: C658 <= ( len D289 ) by L3433 , XREAL_1:6;
L3435: C658 in ( dom D289 ) by L3434 , L3415 , FINSEQ_3:25;
L3436: C660 Joins ( D289 . C658 ) , D286 , C634 by L3435 , L3299 , L3382 , L3396 , L3431 , GLIB_001:32;
per cases  by L3415 , XXREAL_0:1;
suppose L3437: 1 = C658;

thus L3438: contradiction by L3437 , L3254 , L3294 , L3380 , L3387 , L3301 , L3388 , L3302 , L3351 , L3397 , L3395 , L3431 , L390;
end;
suppose L3439: 1 < C658;

thus L3440: contradiction by L3439 , L3221 , L3435 , L3436;
end;
end;
suppose L3442: C659 = ( ( len D289 ) + 6 );

L3443: ( ( C658 + 2 ) + 2 ) <= ( ( len D289 ) + 6 ) by L3442 , L3391 , L22;
L3444: ( C658 + 4 ) <= ( ( ( len D289 ) + 2 ) + 4 ) by L3443;
L3445: C658 <= ( ( len D289 ) + 2 ) by L3444 , XREAL_1:6;
per cases  by L3445 , XXREAL_0:1;
suppose L3446: C658 < ( ( len D289 ) + 2 );

L3447:
now
assume L3448: ( 1 + 2 ) >= C658;
L3449: C658 < ( ( 2 * 1 ) + 1 ) by L3448 , L3254 , L3294 , L3380 , L3387 , L3301 , L3388 , L3302 , L3351 , L3397 , L3395 , L3442 , L390 , XXREAL_0:1;
L3450: C658 <= ( 3 - 2 ) by L3449 , L14;
L3451: C658 < 1 by L3450 , L3254 , L3294 , L3380 , L3387 , L3301 , L3388 , L3302 , L3351 , L3397 , L3395 , L3442 , L390 , XXREAL_0:1;
thus L3452: contradiction by L3451 , ABIAN:12;
end;
L3453: ( ( ( 2 * ( 0 ) ) + 1 ) + 2 ) < C658 by L3447;
L3454: C658 <= ( len D289 ) by L3446 , L22;
L3455: C658 in ( dom D289 ) by L3454 , L3415 , FINSEQ_3:25;
L3456: ( D300 . C658 ) = ( D289 . C658 ) by L3455 , GLIB_001:32;
thus L3457: contradiction by L3456 , L3219 , L3300 , L3381 , L3396 , L3442 , L3454 , L3453 , L817 , GLIB_000:14;
end;
suppose L3458: C658 = ( ( len D289 ) + 2 );

L3459: 3 <= ( len D289 ) by L3377 , GLIB_001:125;
L3460: 1 <= ( len D289 ) by L3459 , XXREAL_0:2;
L3461: ( ( 2 * ( 0 ) ) + 1 ) in ( dom D289 ) by L3460 , FINSEQ_3:25;
L3462: 1 <> ( len D289 ) by L3252 , L3215 , L3240 , L3249 , L920;
thus L3463: contradiction by L3462 , L3352 , L3298 , L3300 , L3381 , L3383 , L3396 , L3442 , L3458 , L3461 , GLIB_000:14;
end;
end;
end;
end;
theorem
L3467: (for B555 being  finite  chordal _Graph holds (for B556 , B557 being (Vertex of B555) holds ((B556 <> B557 & (not B556 , B557 are_adjacent )) implies (for B558 being (VertexSeparator of B556 , B557) holds (B558 is  minimal implies (for B559 being (removeVertices of B555 , B558) holds (for B560 being (Vertex of B559) holds (B556 = B560 implies (for B561 , B562 being (Vertex of B555) holds ((B561 in B558 & B562 in B558) implies (ex B563 being (Vertex of B555) st (B563 in ( B559 .reachableFrom B560 ) & B563 , B561 are_adjacent  & B563 , B562 are_adjacent ))))))))))))
proof
let C661 being  finite  chordal _Graph;
let C662 , C663 being (Vertex of C661);
assume that
L3468: C662 <> C663
and
L3469: (not C662 , C663 are_adjacent );
let C664 being (VertexSeparator of C662 , C663);
assume that
L3470: C664 is  minimal;
let C665 being (removeVertices of C661 , C664);
let C666 being (Vertex of C665);
assume L3471: C662 = C666;
consider C667 being (Vertex of C661) such that L3472: C667 in ( C665 .reachableFrom C666 ) and L3473: (for B564 being (Vertex of C661) holds (B564 in C664 implies C667 , B564 are_adjacent )) by L3471 , L3468 , L3469 , L3470 , L3121;
let C668 , C669 being (Vertex of C661);
assume that
L3474: C668 in C664
and
L3475: C669 in C664;
L3476: C667 , C669 are_adjacent  by L3475 , L3473;
L3477: C667 , C668 are_adjacent  by L3474 , L3473;
thus L3478: thesis by L3477 , L3472 , L3476;
end;
theorem
L3479: (for B565 being non  trivial  finite  chordal _Graph holds ((not B565 is  complete) implies (ex B566 , B567 being (Vertex of B565) st (B566 <> B567 & (not B566 , B567 are_adjacent ) & B566 is  simplicial & B567 is  simplicial))))
proof
defpred S6[  finite _Graph ] means (($1 is non  trivial & $1 is  chordal & (not $1 is  complete)) implies (ex B568 , B569 being (Vertex of $1) st (B568 <> B569 & (not B568 , B569 are_adjacent ) & B568 is  simplicial & B569 is  simplicial)));
L3480: (for B570 being non  zero Nat holds ((for B571 being  finite _Graph holds (( B571 .order() ) < B570 implies S6[ B571 ])) implies (for B572 being  finite _Graph holds (( B572 .order() ) = B570 implies S6[ B572 ]))))
proof
let C670 being non  zero Nat;
assume that
L3481: (for B573 being  finite _Graph holds (( B573 .order() ) < C670 implies S6[ B573 ]));
let C671 being  finite _Graph;
assume that
L3482: ( C671 .order() ) = C670
and
L3483: C671 is non  trivial
and
L3484: C671 is  chordal
and
L3485: (not C671 is  complete);
reconsider D301 = C671 as non  trivial  finite  chordal _Graph by L3483 , L3484;
consider C672 , C673 being (Vertex of D301) such that L3486: C672 <> C673 and L3487: (not C672 , C673 are_adjacent ) by L3485 , L1483;
consider C674 being (VertexSeparator of C672 , C673) such that L3488: C674 is  minimal by L1860;
set D302 = the (removeVertices of D301 , C674);
reconsider D303 = C672 , D304 = C673 as (Vertex of D302) by L3486 , L3487 , L1843;
set D305 = ( D302 .reachableFrom D303 );
set D306 = ( D302 .reachableFrom D304 );
set D307 = the (inducedSubgraph of D301 , ( D305 \/ C674 ));
L3489: D305 c= ( the_Vertices_of D302 );
L3490: D305 c= ( the_Vertices_of D301 ) by L3489 , XBOOLE_1:1;
L3491: ( D305 \/ C674 ) is non  empty non  empty non  empty non  empty (Subset of ( the_Vertices_of D301 )) by L3490 , XBOOLE_1:8;
L3492: ( D305 /\ D306 ) = ( {} ) by L3486 , L3487 , L1828;
L3493:
now
assume L3494: C673 in ( D305 \/ C674 );
L3495: (not C673 in C674) by L3486 , L3487 , L1654;
L3496: C673 in D305 by L3495 , L3494 , XBOOLE_0:def 3;
L3497: C673 in D306 by GLIB_002:9;
thus L3498: contradiction by L3497 , L3492 , L3496 , XBOOLE_0:def 4;
end;
L3499:
now
assume L3500: ( D307 .order() ) = C670;
L3501: ( the_Vertices_of D307 ) = ( the_Vertices_of D301 ) by L3500 , L3482 , PRE_POLY:8;
L3502: ( the_Vertices_of D307 ) = ( D305 \/ C674 ) by L3491 , GLIB_000:def 37;
thus L3503: contradiction by L3502 , L3493 , L3501;
end;
set D308 = the (inducedSubgraph of D301 , ( D306 \/ C674 ));
L3504: D306 c= ( the_Vertices_of D301 ) by L3489 , XBOOLE_1:1;
L3505: ( D306 \/ C674 ) is non  empty non  empty non  empty non  empty (Subset of ( the_Vertices_of D301 )) by L3504 , XBOOLE_1:8;
L3506:
now
assume L3507: C672 in ( D306 \/ C674 );
L3508: (not C672 in C674) by L3486 , L3487 , L1654;
L3509: C672 in D306 by L3508 , L3507 , XBOOLE_0:def 3;
L3510: C672 in D305 by GLIB_002:9;
thus L3511: contradiction by L3510 , L3492 , L3509 , XBOOLE_0:def 4;
end;
L3512:
now
assume L3513: ( D308 .order() ) = C670;
L3514: ( the_Vertices_of D308 ) = ( the_Vertices_of D301 ) by L3513 , L3482 , PRE_POLY:8;
L3515: ( the_Vertices_of D308 ) = ( D306 \/ C674 ) by L3505 , GLIB_000:def 37;
thus L3516: contradiction by L3515 , L3506 , L3514;
end;
set D309 = the (inducedSubgraph of D301 , C674);
L3517: (not C672 in C674) by L3486 , L3487 , L1654;
L3518: C672 in ( ( the_Vertices_of D301 ) \ C674 ) by L3517 , XBOOLE_0:def 5;
L3519: ( the_Vertices_of D302 ) = ( ( the_Vertices_of D301 ) \ C674 ) by L3518 , GLIB_000:def 37;
L3520: ( D308 .order() ) <= C670 by L3482 , GLIB_000:75;
L3521: ( D308 .order() ) < C670 by L3520 , L3512 , XXREAL_0:1;
L3522: (ex B574 being (Vertex of C671) st (B574 in D306 & B574 is  simplicial))
proof
consider C675 being set such that L3523: C675 in D306 by XBOOLE_0:def 1;
L3524: ( the_Vertices_of D308 ) = ( D306 \/ C674 ) by L3505 , GLIB_000:def 37;
reconsider D310 = C675 as (Vertex of D308) by L3524 , L3523 , XBOOLE_0:def 3;
L3525: (ex B575 being (Vertex of D308) st (B575 in D306 & B575 is  simplicial))
proof
per cases ;
suppose L3526: D308 is  complete;

L3527: D310 is  simplicial by L3526 , L1575;
thus L3528: thesis by L3527 , L3523;
end;
suppose L3529: (not D308 is  complete);

L3530: (not D308 is  trivial) by L3529;
consider C676 , C677 being (Vertex of D308) such that L3531: C676 <> C677 and L3532: (not C676 , C677 are_adjacent ) and L3533: C676 is  simplicial and L3534: C677 is  simplicial by L3530 , L3481 , L3521 , L3529;
L3535:
now
assume that
L3536: C676 in C674
and
L3537: C677 in C674;
reconsider D311 = C676 , D312 = C677 as (Vertex of D309) by L3536 , L3537 , GLIB_000:def 37;
L3538: D309 is  complete by L3486 , L3487 , L3488 , L3536 , L2761;
L3539: D311 , D312 are_adjacent  by L3538 , L3531 , L1483;
reconsider D313 = C676 , D314 = C677 as (Vertex of D301) by L3536 , L3537;
L3540: (not D313 , D314 are_adjacent ) by L3505 , L3532 , L930;
thus L3541: contradiction by L3540 , L3536 , L3539 , L930;
end;
L3542: (C677 in D306 or C676 in D306) by L3535 , L3524 , XBOOLE_0:def 3;
thus L3543: thesis by L3542 , L3533 , L3534;
end;
end;
consider C678 being (Vertex of D308) such that L3545: C678 in D306 and L3546: C678 is  simplicial by L3525;
reconsider D315 = C678 as (Vertex of C671) by L3504 , L3545;
L3547:
now
let C679 being set;
assume that
L3548: C679 in ( C671 .AdjacentSet { D315 } );
assume L3549: (not C679 in ( D306 \/ C674 ));
L3550: (not C679 in D306) by L3549 , XBOOLE_0:def 3;
L3551: (not C679 in C674) by L3549 , XBOOLE_0:def 3;
reconsider D316 = C679 as (Vertex of C671) by L3548;
L3552: D315 , D316 are_adjacent  by L3548 , L1070;
consider C680 being set such that L3553: C680 Joins D315 , D316 , C671 by L3552 , L920;
L3554: D316 in ( the_Vertices_of D302 ) by L3519 , L3551 , XBOOLE_0:def 5;
L3555: C680 Joins D315 , D316 , D302 by L3554 , L3519 , L3545 , L3553 , L218;
thus L3556: contradiction by L3555 , L3545 , L3550 , GLIB_002:10;
end;
L3557: ( C671 .AdjacentSet { D315 } ) c= ( D306 \/ C674 ) by L3547 , TARSKI:def 3;
L3558: D315 in ( D306 \/ C674 ) by L3545 , XBOOLE_0:def 3;
L3559: D315 is  simplicial by L3558 , L3505 , L3546 , L3557 , L1603;
thus L3560: thesis by L3559 , L3545;
end;
consider C681 being (Vertex of C671) such that L3561: C681 in D306 and L3562: C681 is  simplicial by L3522;
L3563: ( D307 .order() ) <= C670 by L3482 , GLIB_000:75;
L3564: ( D307 .order() ) < C670 by L3563 , L3499 , XXREAL_0:1;
L3565: (ex B576 being (Vertex of C671) st (B576 in D305 & B576 is  simplicial))
proof
consider C682 being set such that L3566: C682 in D305 by XBOOLE_0:def 1;
L3567: ( the_Vertices_of D307 ) = ( D305 \/ C674 ) by L3491 , GLIB_000:def 37;
reconsider D317 = C682 as (Vertex of D307) by L3567 , L3566 , XBOOLE_0:def 3;
L3568: (ex B577 being (Vertex of D307) st (B577 in D305 & B577 is  simplicial))
proof
per cases ;
suppose L3569: D307 is  complete;

L3570: D317 is  simplicial by L3569 , L1575;
thus L3571: thesis by L3570 , L3566;
end;
suppose L3572: (not D307 is  complete);

L3573: (not D307 is  trivial) by L3572;
consider C683 , C684 being (Vertex of D307) such that L3574: C683 <> C684 and L3575: (not C683 , C684 are_adjacent ) and L3576: C683 is  simplicial and L3577: C684 is  simplicial by L3573 , L3481 , L3564 , L3572;
L3578:
now
assume that
L3579: C683 in C674
and
L3580: C684 in C674;
reconsider D318 = C683 , D319 = C684 as (Vertex of D309) by L3579 , L3580 , GLIB_000:def 37;
L3581: D309 is  complete by L3486 , L3487 , L3488 , L3579 , L2761;
L3582: D318 , D319 are_adjacent  by L3581 , L3574 , L1483;
reconsider D320 = C683 , D321 = C684 as (Vertex of D301) by L3579 , L3580;
L3583: (not D320 , D321 are_adjacent ) by L3491 , L3575 , L930;
thus L3584: contradiction by L3583 , L3579 , L3582 , L930;
end;
L3585: (C684 in D305 or C683 in D305) by L3578 , L3567 , XBOOLE_0:def 3;
thus L3586: thesis by L3585 , L3576 , L3577;
end;
end;
consider C685 being (Vertex of D307) such that L3588: C685 in D305 and L3589: C685 is  simplicial by L3568;
reconsider D322 = C685 as (Vertex of C671) by L3490 , L3588;
L3590:
now
let C686 being set;
assume that
L3591: C686 in ( C671 .AdjacentSet { D322 } );
assume L3592: (not C686 in ( D305 \/ C674 ));
L3593: (not C686 in D305) by L3592 , XBOOLE_0:def 3;
L3594: (not C686 in C674) by L3592 , XBOOLE_0:def 3;
reconsider D323 = C686 as (Vertex of C671) by L3591;
L3595: D322 , D323 are_adjacent  by L3591 , L1070;
consider C687 being set such that L3596: C687 Joins D322 , D323 , C671 by L3595 , L920;
L3597: D323 in ( the_Vertices_of D302 ) by L3519 , L3594 , XBOOLE_0:def 5;
L3598: C687 Joins D322 , D323 , D302 by L3597 , L3519 , L3588 , L3596 , L218;
thus L3599: contradiction by L3598 , L3588 , L3593 , GLIB_002:10;
end;
L3600: ( C671 .AdjacentSet { D322 } ) c= ( D305 \/ C674 ) by L3590 , TARSKI:def 3;
L3601: D322 in ( D305 \/ C674 ) by L3588 , XBOOLE_0:def 3;
L3602: D322 is  simplicial by L3601 , L3491 , L3589 , L3600 , L1603;
thus L3603: thesis by L3602 , L3588;
end;
consider C688 being (Vertex of C671) such that L3604: C688 in D305 and L3605: C688 is  simplicial by L3565;
L3606:
now
reconsider D324 = C688 , D325 = C681 as (Vertex of D302) by L3604 , L3561;
assume L3607: C688 , C681 are_adjacent ;
consider C689 being set such that L3608: C689 Joins C688 , C681 , C671 by L3607 , L920;
L3609: C689 Joins D324 , D325 , D302 by L3519 , L3608 , L218;
L3610: D325 in D305 by L3609 , L3604 , GLIB_002:10;
thus L3611: contradiction by L3610 , L3492 , L3561 , XBOOLE_0:def 4;
end;
L3612: C688 <> C681 by L3492 , L3604 , L3561 , XBOOLE_0:def 4;
thus L3613: thesis by L3612 , L3605 , L3562 , L3606;
end;
L3614: (for B578 being  finite _Graph holds S6[ B578 ]) from FinGraphOrderCompInd(L3480);
let C690 being non  trivial  finite  chordal _Graph;
assume L3615: (not C690 is  complete);
thus L3616: thesis by L3615 , L3614;
end;
theorem
L3617: (for B579 being  finite  chordal _Graph holds (ex B580 being (Vertex of B579) st B580 is  simplicial))
proof
let C691 being  finite  chordal _Graph;
per cases ;
suppose L3618: C691 is  complete;

set D326 = the (Vertex of C691);
L3619: D326 is  simplicial by L3618 , L1575;
thus L3620: thesis by L3619;
end;
suppose L3621: (not C691 is  complete);

L3622: (not C691 is  trivial) by L3621;
L3623: (ex B581 , B582 being (Vertex of C691) st (B581 <> B582 & (not B581 , B582 are_adjacent ) & B581 is  simplicial & B582 is  simplicial)) by L3622 , L3621 , L3479;
thus L3624: thesis by L3623;
end;
end;
begin
definition
let C692 being  finite _Graph;
mode VertexScheme of C692
 -> (FinSequence of ( the_Vertices_of C692 ))
means :L3626: (it is  one-to-one & ( rng it ) = ( the_Vertices_of C692 ));
existence
proof
consider C693 being FinSequence such that L3627: ( rng C693 ) = ( the_Vertices_of C692 ) and L3628: C693 is  one-to-one by FINSEQ_4:58;
reconsider D327 = C693 as (FinSequence of ( the_Vertices_of C692 )) by L3627 , FINSEQ_1:def 4;
take D327;
thus L3629: thesis by L3627 , L3628;
end;
end;
registration
let C694 being  finite _Graph;
cluster  -> non  empty for (VertexScheme of C694);
correctness by L3626 , RELAT_1:38;
end;
theorem
L3632: (for B583 being  finite _Graph holds (for B584 being (VertexScheme of B583) holds ( len B584 ) = ( card ( the_Vertices_of B583 ) )))
proof
let C695 being  finite _Graph;
let C696 being (VertexScheme of C695);
L3633: C696 is  one-to-one by L3626;
L3634: ( rng C696 ) = ( the_Vertices_of C695 ) by L3626;
thus L3635: thesis by L3634 , L3633 , FINSEQ_4:62;
end;
theorem
L3636: (for B585 being  finite _Graph holds (for B586 being (VertexScheme of B585) holds 1 <= ( len B586 ))) by NAT_1:14;
theorem
L3637: (for B587 , B588 being  finite _Graph holds (for B589 being (VertexScheme of B587) holds (B587 == B588 implies B589 is (VertexScheme of B588))))
proof
let C697 , C698 being  finite _Graph;
let C699 being (VertexScheme of C697);
assume that
L3638: C697 == C698;
L3639: ( rng C699 ) = ( the_Vertices_of C697 ) by L3626;
L3640: ( rng C699 ) = ( the_Vertices_of C698 ) by L3639 , L3638 , GLIB_000:def 34;
L3641: C699 is  one-to-one by L3626;
L3642: C699 is (FinSequence of ( the_Vertices_of C698 )) by L3638 , GLIB_000:def 34;
thus L3643: thesis by L3642 , L3641 , L3640 , L3626;
end;
definition
let C700 being  finite _Graph;
let C701 being (VertexScheme of C700);
let C702 being (Vertex of C700);
redefine func C702 .. C701 -> non  zero (Element of ( NAT ));

correctness
proof
L3644: ( rng C701 ) = ( the_Vertices_of C700 ) by L3626;
thus L3645: thesis by L3644 , FINSEQ_4:21;
end;
end;
definition
let C703 being  finite _Graph;
let C704 being (VertexScheme of C703);
let C705 being Nat;
redefine func C704 .followSet C705 -> (Subset of ( the_Vertices_of C703 ));

coherence
proof
L3647: C705 in ( NAT ) by ORDINAL1:def 12;
L3648: ( rng ( (C705 , ( len C704 )) -cut C704 ) ) c= ( rng C704 ) by L3647 , GRAPH_2:11;
L3649:
now
let C706 being set;
assume L3650: C706 in ( C704 .followSet C705 );
L3651: C706 in ( rng C704 ) by L3650 , L3648;
thus L3652: C706 in ( the_Vertices_of C703 ) by L3651 , L3626;
end;
thus L3653: thesis by L3649 , TARSKI:def 3;
end;
end;
theorem
L3655: (for B590 being  finite _Graph holds (for B591 being (VertexScheme of B590) holds (for B592 being non  zero Nat holds (B592 <= ( len B591 ) implies ( B591 .followSet B592 ) is non  empty))))
proof
let C707 being  finite _Graph;
let C708 being (VertexScheme of C707);
let C709 being non  zero Nat;
assume that
L3656: C709 <= ( len C708 );
L3657: ( ( 0 ) + 1 ) <= C709 by NAT_1:13;
L3658: ( ( len ( (C709 , ( len C708 )) -cut C708 ) ) + C709 ) = ( ( len C708 ) + 1 ) by L3657 , L3656 , GRAPH_2:def 1;
L3659: ( ( ( len C708 ) + 1 ) - C709 ) <> ( 0 ) by L3656 , NAT_1:13;
L3660: ( (C709 , ( len C708 )) -cut C708 ) <> ( {} ) by L3659 , L3658;
thus L3661: thesis by L3660;
end;
definition
let C710 being  finite _Graph;
let C711 being (VertexScheme of C710);
attr C711 is  perfect
means
:L3662: (for B593 being non  zero Nat holds (B593 <= ( len C711 ) implies (for B594 being (inducedSubgraph of C710 , ( C711 .followSet B593 )) holds (for B595 being (Vertex of B594) holds (B595 = ( C711 . B593 ) implies B595 is  simplicial)))));
end;
theorem
L3664: (for B596 being  finite  trivial _Graph holds (for B597 being (Vertex of B596) holds (ex B598 being (VertexScheme of B596) st (B598 = <* B597 *> & B598 is  perfect))))
proof
let C712 being  finite  trivial _Graph;
let C713 being (Vertex of C712);
consider C714 being (Vertex of C712) such that L3665: ( the_Vertices_of C712 ) = { C714 } by GLIB_000:22;
set D328 = <* C713 *>;
L3666: C714 = C713 by L3665 , TARSKI:def 1;
L3667: ( rng D328 ) = ( the_Vertices_of C712 ) by L3666 , L3665 , FINSEQ_1:39;
L3668: D328 is  one-to-one by FINSEQ_3:93;
reconsider D329 = D328 as (VertexScheme of C712) by L3668 , L3667 , L3626;
take D329;
thus L3669: D329 = <* C713 *>;
let C715 being non  zero Nat;
assume that
L3670: C715 <= ( len D329 );
let C716 being (inducedSubgraph of C712 , ( D329 .followSet C715 ));
thus L3671: thesis by L1580;
end;
theorem
L3672: (for B599 being  finite _Graph holds (for B600 being (VertexScheme of B599) holds (B600 is  perfect iff (for B601 , B602 , B603 being (Vertex of B599) holds ((B602 <> B603 & B601 , B602 are_adjacent  & B601 , B603 are_adjacent ) implies (for B604 , B605 , B606 being Nat holds ((B604 in ( dom B600 ) & B605 in ( dom B600 ) & B606 in ( dom B600 ) & ( B600 . B604 ) = B601 & ( B600 . B605 ) = B602 & ( B600 . B606 ) = B603 & B604 < B605 & B604 < B606) implies B602 , B603 are_adjacent )))))))
proof
let C717 being  finite _Graph;
let C718 being (VertexScheme of C717);
L3673: C718 is  one-to-one by L3626;
L3674:
now
let C719 , C720 , C721 being (Vertex of C717);
assume that
L3675: C720 <> C721
and
L3676: C719 , C720 are_adjacent 
and
L3677: C719 , C721 are_adjacent 
and
L3678: (not C720 , C721 are_adjacent );
let C722 , C723 , C724 being Nat;
assume that
L3679: C722 in ( dom C718 )
and
L3680: C723 in ( dom C718 )
and
L3681: C724 in ( dom C718 )
and
L3682: ( C718 . C722 ) = C719
and
L3683: ( C718 . C723 ) = C720
and
L3684: ( C718 . C724 ) = C721
and
L3685: C722 < C723
and
L3686: C722 < C724;
set D330 = the (inducedSubgraph of C717 , ( C718 .followSet C722 ));
set D331 = ( (C722 , ( len C718 )) -cut C718 );
L3687: C722 <= ( len C718 ) by L3679 , FINSEQ_3:25;
L3688: ( C722 - C722 ) <= ( ( len C718 ) - C722 ) by L3687 , XREAL_1:9;
L3689: 1 <= C722 by L3679 , FINSEQ_3:25;
L3690: ( ( ( len D331 ) + C722 ) - C722 ) = ( ( ( len C718 ) + 1 ) - C722 ) by L3689 , L3687 , GRAPH_2:def 1;
L3691: ( len D331 ) = ( ( ( len C718 ) - C722 ) + 1 ) by L3690;
L3692: ( ( 0 ) + 1 ) <= ( len D331 ) by L3691 , L3688 , NAT_1:13;
L3693: ( ( 0 ) + 1 ) in ( dom D331 ) by L3692 , FINSEQ_3:25;
L3694: ( D331 . ( ( 0 ) + 1 ) ) = ( C718 . ( C722 + ( 0 ) ) ) by L3689 , L3687 , L3691 , L3688 , GRAPH_2:def 1;
L3695: C719 in ( C718 .followSet C722 ) by L3694 , L3682 , L3693 , FUNCT_1:3;
reconsider D332 = C719 as (Vertex of D330) by L3695 , GLIB_000:def 37;
consider C725 being Nat such that L3696: ( C722 + C725 ) = C724 by L3686 , NAT_1:10;
L3697: ( ( 0 ) + 1 ) <= ( C725 + 1 ) by XREAL_1:7;
L3698:
now
assume L3699: C725 >= ( len D331 );
L3700: ( C722 + C725 ) >= ( ( ( ( len C718 ) + 1 ) - C722 ) + C722 ) by L3699 , L3690 , XREAL_1:7;
L3701: C724 > ( len C718 ) by L3700 , L3696 , NAT_1:13;
thus L3702: contradiction by L3701 , L3681 , FINSEQ_3:25;
end;
L3703: ( C725 + 1 ) <= ( len D331 ) by L3698 , NAT_1:13;
L3704: ( C725 + 1 ) in ( dom D331 ) by L3703 , L3697 , FINSEQ_3:25;
L3705: ( D331 . ( C725 + 1 ) ) = ( C718 . ( C722 + C725 ) ) by L3689 , L3687 , L3698 , GRAPH_2:def 1;
L3706: C721 in ( C718 .followSet C722 ) by L3705 , L3684 , L3696 , L3704 , FUNCT_1:3;
reconsider D333 = C721 as (Vertex of D330) by L3706 , GLIB_000:def 37;
L3707: ( C718 .followSet C722 ) is non  empty by L3689 , L3687 , L3655;
L3708: D332 , D333 are_adjacent  by L3707 , L3677 , L930;
consider C726 being Nat such that L3709: ( C722 + C726 ) = C723 by L3685 , NAT_1:10;
L3710: ( ( 0 ) + 1 ) <= ( C726 + 1 ) by XREAL_1:7;
L3711:
now
assume L3712: C726 >= ( len D331 );
L3713: ( C722 + C726 ) >= ( ( ( ( len C718 ) + 1 ) - C722 ) + C722 ) by L3712 , L3690 , XREAL_1:7;
L3714: C723 > ( len C718 ) by L3713 , L3709 , NAT_1:13;
thus L3715: contradiction by L3714 , L3680 , FINSEQ_3:25;
end;
L3716: ( C726 + 1 ) <= ( len D331 ) by L3711 , NAT_1:13;
L3717: ( C726 + 1 ) in ( dom D331 ) by L3716 , L3710 , FINSEQ_3:25;
L3718: ( D331 . ( C726 + 1 ) ) = ( C718 . ( C722 + C726 ) ) by L3689 , L3687 , L3711 , GRAPH_2:def 1;
L3719: C720 in ( C718 .followSet C722 ) by L3718 , L3683 , L3709 , L3717 , FUNCT_1:3;
reconsider D334 = C720 as (Vertex of D330) by L3719 , GLIB_000:def 37;
L3720: (not D334 , D333 are_adjacent ) by L3678 , L3707 , L930;
assume L3721: C718 is  perfect;
L3722: D332 is  simplicial by L3721 , L3682 , L3689 , L3687 , L3662;
L3723: C719 <> C721 by L3673 , L3679 , L3681 , L3682 , L3684 , L3686 , FUNCT_1:def 4;
L3724: D333 in ( D330 .AdjacentSet { D332 } ) by L3723 , L3708 , L1070;
L3725: D332 , D334 are_adjacent  by L3676 , L3707 , L930;
L3726: D334 in ( D330 .AdjacentSet { D332 } ) by L3725 , L3708 , L3720 , L1070;
L3727: (ex B607 being set st B607 Joins D334 , D333 , D330) by L3726 , L3675 , L3722 , L3724 , L1620;
thus L3728: contradiction by L3727 , L3720 , L920;
end;
L3729: ( rng C718 ) = ( the_Vertices_of C717 ) by L3626;
L3730:
now
assume L3731: (not C718 is  perfect);
L3732: (not (for B608 being non  zero Nat holds (B608 <= ( len C718 ) implies (for B609 being (inducedSubgraph of C717 , ( C718 .followSet B608 )) holds (for B610 being (Vertex of B609) holds (B610 = ( C718 . B608 ) implies B610 is  simplicial)))))) by L3731 , L3662;
consider C727 being non  zero Nat, C728 being (inducedSubgraph of C717 , ( C718 .followSet C727 )), C729 being (Vertex of C728) such that L3733: C727 <= ( len C718 ) and L3734: C729 = ( C718 . C727 ) and L3735: (not C729 is  simplicial) by L3732;
L3736: ( C718 .followSet C727 ) is non  empty non  empty non  empty non  empty (Subset of ( the_Vertices_of C717 )) by L3733 , L3655;
L3737: ( the_Vertices_of C728 ) = ( C718 .followSet C727 ) by L3736 , GLIB_000:def 37;
reconsider D335 = C729 as (Vertex of C717) by L3737 , TARSKI:def 3;
consider C730 , C731 being (Vertex of C728) such that L3738: C730 <> C731 and L3739: C729 <> C730 and L3740: C729 <> C731 and L3741: C729 , C730 are_adjacent  and L3742: C729 , C731 are_adjacent  and L3743: (not C730 , C731 are_adjacent ) by L3735 , L1631;
reconsider D336 = C730 , D337 = C731 as (Vertex of C717) by L3737 , TARSKI:def 3;
L3744: D335 , D337 are_adjacent  by L3742 , L3736 , L930;
L3745: 1 <= C727 by L1;
L3746: C727 in ( dom C718 ) by L3745 , L3733 , FINSEQ_3:25;
L3747: C731 in ( the_Vertices_of C717 ) by L3737 , TARSKI:def 3;
consider C732 being Nat such that L3748: C732 in ( dom C718 ) and L3749: ( C718 . C732 ) = C731 by L3747 , L3729 , FINSEQ_2:10;
L3750: C731 in ( rng C718 ) by L3729 , L3737 , TARSKI:def 3;
L3751:
now
assume L3752: C732 <= C727;
L3753: C732 < C727 by L3752 , L3734 , L3740 , L3749 , XXREAL_0:1;
L3754: ( C731 .. C718 ) >= C727 by L3673 , L3746 , L3737 , L3750 , L136;
L3755: C732 < ( C731 .. C718 ) by L3754 , L3753 , XXREAL_0:2;
thus L3756: contradiction by L3755 , L3748 , L3749 , FINSEQ_4:24;
end;
L3757: C730 in ( the_Vertices_of C717 ) by L3737 , TARSKI:def 3;
consider C733 being Nat such that L3758: C733 in ( dom C718 ) and L3759: ( C718 . C733 ) = C730 by L3757 , L3729 , FINSEQ_2:10;
L3760: C730 in ( rng C718 ) by L3729 , L3737 , TARSKI:def 3;
L3761:
now
assume L3762: C733 <= C727;
L3763: C733 < C727 by L3762 , L3734 , L3739 , L3759 , XXREAL_0:1;
L3764: ( C730 .. C718 ) >= C727 by L3673 , L3746 , L3737 , L3760 , L136;
L3765: C733 < ( C730 .. C718 ) by L3764 , L3763 , XXREAL_0:2;
thus L3766: contradiction by L3765 , L3758 , L3759 , FINSEQ_4:24;
end;
L3767: (not D336 , D337 are_adjacent ) by L3743 , L3736 , L930;
L3768: D335 , D336 are_adjacent  by L3741 , L3736 , L930;
thus L3769: (ex B611 , B612 , B613 being (Vertex of C717) st (ex B614 , B615 , B616 being Nat st (B612 <> B613 & B611 , B612 are_adjacent  & B611 , B613 are_adjacent  & B614 in ( dom C718 ) & B615 in ( dom C718 ) & B616 in ( dom C718 ) & ( C718 . B614 ) = B611 & ( C718 . B615 ) = B612 & ( C718 . B616 ) = B613 & B614 < B615 & B614 < B616 & (not B612 , B613 are_adjacent )))) by L3768 , L3734 , L3746 , L3738 , L3744 , L3767 , L3758 , L3759 , L3748 , L3749 , L3761 , L3751;
end;
thus L3770: thesis by L3730 , L3674;
end;
registration
let C734 being  finite  chordal _Graph;
cluster  perfect for (VertexScheme of C734);
existence
proof
defpred S7[  finite _Graph ] means ($1 is  chordal implies (ex B617 being (VertexScheme of $1) st B617 is  perfect));
L3771:
now
let C735 being non  zero Nat;
assume that
L3772: (for B618 being  finite _Graph holds (( B618 .order() ) < C735 implies S7[ B618 ]));
let C736 being  finite _Graph;
assume that
L3773: ( C736 .order() ) = C735;
thus L3774: S7[ C736 ]
proof
assume L3775: C736 is  chordal;
per cases ;
suppose L3776: C735 = 1;

set D338 = the (Vertex of C736);
L3777: C736 is  trivial by L3773 , L3776 , GLIB_000:26;
L3778: (ex B619 being (VertexScheme of C736) st (B619 = <* D338 *> & B619 is  perfect)) by L3777 , L3664;
thus L3779: thesis by L3778;
end;
suppose L3780: C735 <> 1;

reconsider D339 = C736 as non  trivial  finite  chordal _Graph by L3780 , L3773 , L3775 , GLIB_000:26;
consider C737 being (Vertex of D339) such that L3781: C737 is  simplicial by L3617;
set D340 = the (removeVertex of D339 , C737);
L3782: <* C737 *> is  one-to-one by FINSEQ_3:93;
L3783: ( ( the_Vertices_of D339 ) \ { C737 } ) is non  empty by GLIB_000:20;
L3784: ( the_Vertices_of D340 ) = ( ( the_Vertices_of D339 ) \ { C737 } ) by L3783 , GLIB_000:def 37;
L3785: ( D340 .order() ) = ( card ( ( the_Vertices_of D339 ) \ { C737 } ) ) by L3783 , GLIB_000:def 37
.= ( ( D339 .order() ) - ( card { C737 } ) ) by CARD_2:44
.= ( C735 - 1 ) by L3773 , CARD_2:42;
consider C738 being (VertexScheme of D340) such that L3786: C738 is  perfect by L3785 , L3772 , XREAL_1:146;
L3787: ( { C737 } /\ ( rng C738 ) ) = ( { C737 } /\ ( ( the_Vertices_of D339 ) \ { C737 } ) ) by L3784 , L3626
.= ( ( { C737 } /\ ( the_Vertices_of D339 ) ) \ { C737 } ) by XBOOLE_1:49
.= ( { C737 } \ { C737 } ) by XBOOLE_1:28
.= ( {} ) by XBOOLE_1:37;
L3788: { C737 } misses ( rng C738 ) by L3787 , XBOOLE_0:def 7;
L3789: ( rng <* C737 *> ) misses ( rng C738 ) by L3788 , FINSEQ_1:38;
set D341 = ( <* C737 *> ^ C738 );
L3790: ( rng C738 ) = ( ( the_Vertices_of D339 ) \ { C737 } ) by L3784 , L3626;
L3791: ( rng D341 ) = ( ( ( the_Vertices_of D339 ) \ { C737 } ) \/ ( rng <* C737 *> ) ) by L3790 , FINSEQ_1:31;
L3792: ( rng D341 ) = ( ( ( the_Vertices_of D339 ) \ { C737 } ) \/ { C737 } ) by L3791 , FINSEQ_1:38;
L3793: ( rng D341 ) = ( { C737 } \/ ( the_Vertices_of D339 ) ) by L3792 , XBOOLE_1:39;
L3794: ( rng D341 ) = ( the_Vertices_of D339 ) by L3793 , XBOOLE_1:12;
reconsider D342 = D341 as (FinSequence of ( the_Vertices_of D339 )) by L3794 , FINSEQ_1:def 4;
L3795: C738 is  one-to-one by L3626;
L3796: D342 is  one-to-one by L3795 , L3789 , L3782 , FINSEQ_3:91;
reconsider D343 = D342 as (VertexScheme of C736) by L3796 , L3794 , L3626;
take D343;
let C739 being non  zero Nat;
assume that
L3797: C739 <= ( len D343 );
L3798: 1 <= C739 by NAT_1:14;
let C740 being (inducedSubgraph of C736 , ( D343 .followSet C739 ));
let C741 being (Vertex of C740);
assume that
L3799: C741 = ( D343 . C739 );
per cases  by L3798 , XXREAL_0:1;
suppose L3800: 1 = C739;

L3801: ( D343 .followSet C739 ) = ( rng D343 ) by L3800 , GRAPH_2:7
.= ( the_Vertices_of D339 ) by L3626;
L3802: C737 = C741 by L3799 , L3800 , FINSEQ_1:41;
thus L3803: thesis by L3802 , L3781 , L3801 , L1589 , GLIB_000:94;
end;
suppose L3804: 1 < C739;

L3805: ( 1 + ( - 1 ) ) < ( C739 + ( - 1 ) ) by L3804 , XREAL_1:8;
reconsider D344 = ( C739 - 1 ) as non  zero (Element of ( NAT )) by L3805 , INT_1:3;
L3806: ( len <* C737 *> ) = 1 by FINSEQ_1:39;
L3807: ( D343 . C739 ) = ( C738 . D344 ) by L3806 , L3797 , L3804 , FINSEQ_1:24;
L3808: ( C738 .followSet D344 ) = ( D343 .followSet ( D344 + 1 ) ) by L164;
L3809: ( C739 + ( - 1 ) ) <= ( ( len D343 ) + ( - 1 ) ) by L3797 , XREAL_1:7;
L3810: D344 <= ( ( ( len <* C737 *> ) + ( len C738 ) ) + ( - 1 ) ) by L3809 , FINSEQ_1:22;
L3811: D344 <= ( ( 1 + ( len C738 ) ) + ( - 1 ) ) by L3810 , FINSEQ_1:39;
L3812: ( C738 .followSet D344 ) is non  empty by L3811 , L3655;
L3813: C740 is (inducedSubgraph of D340 , ( C738 .followSet D344 )) by L3812 , L3784 , L3808 , L522;
thus L3814: thesis by L3813 , L3786 , L3799 , L3807 , L3811 , L3662;
end;
end;
end;

end;
L3775: (for B620 being  finite _Graph holds S7[ B620 ]) from FinGraphOrderCompInd(L3771);
consider C742 being (VertexScheme of C734) such that L3776: C742 is  perfect by L3775;
take C742;
thus L3777: thesis by L3776;
end;
end;
theorem
L3779: (for B621 , B622 being  finite  chordal _Graph holds (for B623 being  perfect (VertexScheme of B621) holds (B621 == B622 implies B623 is  perfect  perfect  perfect  perfect (VertexScheme of B622))))
proof
let C743 , C744 being  finite  chordal _Graph;
let C745 being  perfect (VertexScheme of C743);
assume that
L3780: C743 == C744;
reconsider D345 = C745 as (VertexScheme of C744) by L3780 , L3637;
L3781:
now
let C746 being non  zero Nat;
assume that
L3782: C746 <= ( len D345 );
let C747 being (inducedSubgraph of C744 , ( D345 .followSet C746 ));
let C748 being (Vertex of C747);
assume that
L3783: C748 = ( D345 . C746 );
L3784: ( C743 .edgesBetween ( C745 .followSet C746 ) ) = ( C744 .edgesBetween ( C745 .followSet C746 ) ) by L3780 , GLIB_000:90;
reconsider D346 = C747 as (inducedSubgraph of C743 , ( C745 .followSet C746 )) by L3784 , L3780 , GLIB_000:95;
reconsider D347 = C748 as (Vertex of D346);
L3785: D347 is  simplicial by L3782 , L3783 , L3662;
thus L3786: C748 is  simplicial by L3785;
end;
thus L3787: thesis by L3781 , L3662;
end;
theorem
L3788: (for B624 being  finite _Graph holds ((ex B625 being (VertexScheme of B624) st B625 is  perfect) implies B624 is  chordal))
proof
let C749 being  finite _Graph;
given C750 being (VertexScheme of C749) such that
L3789: C750 is  perfect;

L3790: ( rng C750 ) = ( the_Vertices_of C749 ) by L3626;
let C751 being (Walk of C749);
assume that
L3791: ( C751 .length() ) > 3
and
L3792: C751 is  Cycle-like;
L3793: ( C751 .vertices() ) is non  empty by GLIB_001:88;
consider C752 being set such that L3794: C752 in ( C751 .vertices() ) and L3795: (for B626 being set holds (B626 in ( C751 .vertices() ) implies ( C752 .. C750 ) <= ( B626 .. C750 ))) by L3793 , L3790 , L130;
reconsider D348 = C752 as (Vertex of C749) by L3794;
set D349 = ( D348 .. C750 );
set D350 = the (inducedSubgraph of C749 , ( C750 .followSet D349 ));
L3796: ( rng C750 ) = ( the_Vertices_of C749 ) by L3626;
L3797: D349 in ( dom C750 ) by L3796 , FINSEQ_4:20;
L3798: C750 is  one-to-one by L3626;
L3799: D348 in ( C750 .followSet D349 ) by L3798 , L3796 , L3797 , L136;
reconsider D351 = D348 as (Vertex of D350) by L3799 , GLIB_000:def 37;
L3800: ( C750 .followSet D349 ) is non  empty by L3796 , L3655 , FINSEQ_4:21;
L3801:
now
let C753 being set;
assume that
L3802: C753 in ( C751 .vertices() );
reconsider D352 = C753 as (Vertex of C749) by L3802;
L3803: ( D348 .. C750 ) <= ( D352 .. C750 ) by L3795 , L3802;
thus L3804: C753 in ( C750 .followSet D349 ) by L3803 , L3796 , L3797 , L3798 , L136;
end;
L3805: ( C751 .vertices() ) c= ( C750 .followSet D349 ) by L3801 , TARSKI:def 3;
reconsider D353 = C751 as (Walk of D350) by L3805 , L3800 , L284;
reconsider D354 = D353 as (Path of D350) by L3792 , GLIB_001:176;
L3806: D354 is  closed by L3792 , GLIB_001:176;
L3807: D351 in ( D354 .vertices() ) by L3794 , GLIB_001:98;
L3808: ( rng C750 ) = ( the_Vertices_of C749 ) by L3626;
L3809: ( C750 . D349 ) = D348 by L3808 , FINSEQ_4:19;
L3810: D354 is non  trivial by L3792 , GLIB_001:176;
L3811: D354 is  Cycle-like by L3810 , L3806 , GLIB_001:def 31;
L3812: ( D354 .length() ) > 3 by L3791 , GLIB_001:114;
consider C754 , C755 being  odd Nat such that L3813: ( C754 + 2 ) < C755 and L3814: C755 <= ( len D354 ) and L3815: ( D354 . C754 ) <> ( D354 . C755 ) and L3816: ( D354 . C754 ) in ( D350 .AdjacentSet { D351 } ) and L3817: ( D354 . C755 ) in ( D350 .AdjacentSet { D351 } ) and L3818: (for B627 being set holds (B627 in ( D354 .edges() ) implies (not B627 Joins ( D354 . C754 ) , ( D354 . C755 ) , D350))) by L3812 , L3811 , L3807 , L1208;
L3819: D349 <= ( len C750 ) by L3808 , FINSEQ_4:21;
L3820: D351 is  simplicial by L3819 , L3789 , L3809 , L3662;
L3821: (ex B628 being set st B628 Joins ( D354 . C754 ) , ( D354 . C755 ) , D350) by L3820 , L3815 , L3816 , L3817 , L1620;
L3822: D354 is  chordal by L3821 , L3813 , L3814 , L3815 , L3818 , L2016;
thus L3823: thesis by L3822 , L3800 , L2166;
end;
