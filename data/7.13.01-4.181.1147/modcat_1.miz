:: Category of Left Modules
::  by Micha{\l} Muzalewski
::
:: Received December 12, 1991
:: Copyright (c) 1991-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies XBOOLE_0, CLASSES2, FUNCSDOM, VECTSP_2, SUBSET_1, STRUCT_0,
      MOD_2, MIDSP_1, CAT_1, GRCAT_1, FUNCT_2, ENS_1, RELAT_1, GRAPH_1,
      FUNCT_1, ALGSTR_0, VECTSP_1, ZFMISC_1, FUNCT_5, MCART_1, TARSKI, ARYTM_3,
      PARTFUN1, MODCAT_1, MSSUBFAM, UNIALG_1, MONOID_0, RELAT_2, BINOP_1,
      SETFAM_1;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, RELAT_1,
      SETFAM_1, RELSET_1, PARTFUN1, FUNCT_2, FUNCT_3,
       BINOP_1, FUNCT_5, STRUCT_0, ALGSTR_0, VECTSP_1, FUNCSDOM, VECTSP_2,
       GRAPH_1, CAT_1, CLASSES2, GRCAT_1, MOD_2;
 constructors GRCAT_1, MOD_2, RELSET_1, FUNCT_5;
 registrations XBOOLE_0, RELSET_1, STRUCT_0, CAT_1, VECTSP_2, GRCAT_1, MOD_2,
      FUNCT_2, SETFAM_1;
 requirements SUBSET, BOOLE;
 definitions ALGSTR_0, GRAPH_1, CAT_1, STRUCT_0;
 theorems CAT_1, GRCAT_1, FUNCT_2, MOD_2, TARSKI, ZFMISC_1, XBOOLE_0, BINOP_1,
      RELAT_1, SUBSET_1, XTUPLE_0;
 schemes FUNCT_2, BINOP_1, TARSKI;

begin
definition
let R5 being Ring;
mode LeftMod_DOMAIN of R5
 -> non  empty set
means :L1: (for B1 being (Element of it) holds B1 is  strict  strict  strict  strict (LeftMod of R5));
existence
proof
set D1 = { ( TrivialLMod R5 ) };
take D1;
thus L2: thesis by TARSKI:def 1;
end;
end;
definition
let R5 being Ring;
let R8 being (LeftMod_DOMAIN of R5);
redefine mode Element of R8
 -> (LeftMod of R5);
coherence by L1;
end;
registration
let R5 being Ring;
let R8 being (LeftMod_DOMAIN of R5);
cluster  strict for (Element of R8);
existence
proof
set D2 = the (Element of R8);
take D2;
thus L5: thesis by L1;
end;
end;
definition
let R5 being Ring;
mode LModMorphism_DOMAIN of R5
 -> non  empty set
means :L7: (for B2 being (Element of it) holds B2 is  strict  strict  strict  strict (LModMorphism of R5));
existence
proof
set D3 = the (LeftMod of R5);
take { ( ID D3 ) };
let C1 being (Element of { ( ID D3 ) });
thus L8: thesis by TARSKI:def 1;
end;
end;
definition
let R5 being Ring;
let C2 being (LModMorphism_DOMAIN of R5);
redefine mode Element of C2
 -> (LModMorphism of R5);
coherence by L7;
end;
registration
let R5 being Ring;
let C3 being (LModMorphism_DOMAIN of R5);
cluster  strict for (Element of C3);
existence
proof
set D4 = the (Element of C3);
take D4;
thus L11: thesis by L7;
end;
end;
theorem
L13: (for R5 being Ring holds (for B3 being  strict (LModMorphism of R5) holds { B3 } is (LModMorphism_DOMAIN of R5)))
proof
let R5 being Ring;
let C4 being  strict (LModMorphism of R5);
L14: (for B4 being (Element of { C4 }) holds B4 is  strict  strict  strict  strict (LModMorphism of R5)) by TARSKI:def 1;
thus L15: thesis by L14 , L7;
end;
definition
let R5 being Ring;
let R6 being (LeftMod of R5);
let R7 being (LeftMod of R5);
mode LModMorphism_DOMAIN of R6 , R7
 -> (LModMorphism_DOMAIN of R5)
means :L16: (for B5 being (Element of it) holds B5 is  strict  strict  strict  strict (Morphism of R6 , R7));
existence
proof
reconsider D5 = { ( ZERO (R6 , R7) ) } as (LModMorphism_DOMAIN of R5) by L13;
take D5;
thus L17: thesis by TARSKI:def 1;
end;
end;
theorem
L19: (for R3 being non  empty set holds (for R5 being Ring holds (for R6 being (LeftMod of R5) holds (for R7 being (LeftMod of R5) holds (R3 is (LModMorphism_DOMAIN of R6 , R7) iff (for B6 being (Element of R3) holds B6 is  strict  strict  strict  strict (Morphism of R6 , R7)))))))
proof
let R3 being non  empty set;
let R5 being Ring;
let R6 being (LeftMod of R5);
let R7 being (LeftMod of R5);
thus L20: (R3 is (LModMorphism_DOMAIN of R6 , R7) implies (for B7 being (Element of R3) holds B7 is  strict  strict  strict  strict (Morphism of R6 , R7))) by L16;
thus L21: ((for B8 being (Element of R3) holds B8 is  strict  strict  strict  strict (Morphism of R6 , R7)) implies R3 is (LModMorphism_DOMAIN of R6 , R7))
proof
assume L22: (for B9 being (Element of R3) holds B9 is  strict  strict  strict  strict (Morphism of R6 , R7));
L23: (for B10 being (Element of R3) holds B10 is  strict  strict  strict  strict (LModMorphism of R5)) by L22;
reconsider D6 = R3 as (LModMorphism_DOMAIN of R5) by L23 , L7;
L24: (for B11 being (Element of D6) holds B11 is  strict  strict  strict  strict (Morphism of R6 , R7)) by L22;
thus L25: thesis by L24 , L16;
end;

end;
theorem
L22: (for R5 being Ring holds (for R6 being (LeftMod of R5) holds (for R7 being (LeftMod of R5) holds (for B12 being  strict (Morphism of R6 , R7) holds { B12 } is (LModMorphism_DOMAIN of R6 , R7)))))
proof
let R5 being Ring;
let R6 being (LeftMod of R5);
let R7 being (LeftMod of R5);
let C5 being  strict (Morphism of R6 , R7);
L23: (for B13 being (Element of { C5 }) holds B13 is  strict  strict  strict  strict (Morphism of R6 , R7)) by TARSKI:def 1;
thus L24: thesis by L23 , L19;
end;
definition
let R5 being Ring;
let R6 being (LeftMod of R5);
let R7 being (LeftMod of R5);
func Morphs (R6 , R7) -> (LModMorphism_DOMAIN of R6 , R7) means 
:L25: (for R1 being set holds (R1 in it iff R1 is  strict  strict  strict  strict (Morphism of R6 , R7)));
existence
proof
L26: ( ZeroMap (R6 , R7) ) is (Element of ( Funcs ((the carrier of R6) , (the carrier of R7)) )) by FUNCT_2:8;
reconsider D7 = ( ZeroMap (R6 , R7) ) as (Element of ( Maps (R6 , R7) )) by L26 , GRCAT_1:def 21;
set D8 = { LModMorphismStr (# R6 , R7 , B14 #) where B14 is (Element of ( Maps (R6 , R7) )) : B14 is  additive  homogeneous };
L27: LModMorphismStr (# R6 , R7 , D7 #) in D8;
reconsider D9 = D8 as non  empty set by L27;
L28: (for R1 being set holds (R1 is  strict  strict  strict  strict (Morphism of R6 , R7) implies R1 in D9))
proof
let R1 being set;
assume L29: R1 is  strict  strict  strict  strict (Morphism of R6 , R7);
reconsider D10 = R1 as  strict (Morphism of R6 , R7) by L29;
L30: ( dom D10 ) = R6 by MOD_2:def 8;
L31: (the Dom of D10) = R6 by L30 , MOD_2:def 3;
L32: ( cod D10 ) = R7 by MOD_2:def 8;
L33: (the Cod of D10) = R7 by L32 , MOD_2:def 4;
reconsider D11 = (the Fun of D10) as (Function of R6 , R7) by L33 , L31;
L34: D11 is (Element of ( Funcs ((the carrier of R6) , (the carrier of R7)) )) by FUNCT_2:8;
reconsider D12 = D11 as (Element of ( Maps (R6 , R7) )) by L34 , GRCAT_1:def 21;
L35: ((the Fun of D10) is  additive  homogeneous & D10 = LModMorphismStr (# R6 , R7 , D12 #)) by L32 , L31 , MOD_2:4 , MOD_2:def 4;
thus L36: thesis by L35;
end;
L37: (for R1 being set holds (R1 in D9 implies R1 is  strict  strict  strict  strict (Morphism of R6 , R7)))
proof
let R1 being set;
assume L38: R1 in D9;
L39: (ex B15 being (Element of ( Maps (R6 , R7) )) st (R1 = LModMorphismStr (# R6 , R7 , B15 #) & B15 is  additive  homogeneous)) by L38;
thus L40: thesis by L39 , MOD_2:6;
end;
L41: (for B16 being (Element of D9) holds B16 is  strict  strict  strict  strict (Morphism of R6 , R7)) by L37;
reconsider D13 = D9 as (LModMorphism_DOMAIN of R6 , R7) by L41 , L19;
take D13;
thus L42: thesis by L37 , L28;
end;
uniqueness
proof
let C6 , C7 being (LModMorphism_DOMAIN of R6 , R7);
assume that
L43: (for R1 being set holds (R1 in C6 iff R1 is  strict  strict  strict  strict (Morphism of R6 , R7)))
and
L44: (for R1 being set holds (R1 in C7 iff R1 is  strict  strict  strict  strict (Morphism of R6 , R7)));
L45: (for R1 being set holds (R1 in C6 iff R1 in C7))
proof
let R1 being set;
thus L46:now
assume L47: R1 in C6;
L48: R1 is  strict  strict  strict  strict (Morphism of R6 , R7) by L47 , L43;
thus L49: R1 in C7 by L48 , L44;
end;
assume L50: R1 in C7;
L51: R1 is  strict  strict  strict  strict (Morphism of R6 , R7) by L50 , L44;
thus L52: thesis by L51 , L43;
end;
thus L53: thesis by L45 , TARSKI:1;
end;
end;
definition
let R5 being Ring;
let R6 being (LeftMod of R5);
let R7 being (LeftMod of R5);
let C8 being (LModMorphism_DOMAIN of R6 , R7);
redefine mode Element of C8
 -> (Morphism of R6 , R7);
coherence by L16;
end;
definition
let R1 being set;
let R2 being set;
let R5 being Ring;
pred  GO R1 , R2 , R5
means
:L56: (ex B17 , B18 being set st (R1 = [ B17 , B18 ] & (ex B19 being  strict (LeftMod of R5) st (R2 = B19 & B17 = ( the addLoopStr of B19 ) & B18 = (the lmult of B19)))))
;end;
theorem
L58: (for R5 being Ring holds (for B20 , B21 , B22 being set holds (( GO B20 , B21 , R5 &  GO B20 , B22 , R5) implies B21 = B22)))
proof
let R5 being Ring;
let C9 , C10 , C11 being set;
assume that
L59:  GO C9 , C10 , R5
and
L60:  GO C9 , C11 , R5;
consider C12 , C13 being set such that L61: C9 = [ C12 , C13 ] and L62: (ex B23 being  strict (LeftMod of R5) st (C10 = B23 & C12 = ( the addLoopStr of B23 ) & C13 = (the lmult of B23))) by L59 , L56;
consider C14 being  strict (LeftMod of R5) such that L63: C10 = C14 and L64: C12 = ( the addLoopStr of C14 ) and L65: C13 = (the lmult of C14) by L62;
consider C15 , C16 being set such that L66: C9 = [ C15 , C16 ] and L67: (ex B24 being  strict (LeftMod of R5) st (C11 = B24 & C15 = ( the addLoopStr of B24 ) & C16 = (the lmult of B24))) by L60 , L56;
consider C17 being  strict (LeftMod of R5) such that L68: C11 = C17 and L69: C15 = ( the addLoopStr of C17 ) and L70: C16 = (the lmult of C17) by L67;
L71: ( the addLoopStr of C14 ) = ( the addLoopStr of C17 ) by L61 , L66 , L64 , L69 , XTUPLE_0:1;
thus L72: thesis by L71 , L61 , L66 , L63 , L65 , L68 , L70 , XTUPLE_0:1;
end;
theorem
L73: (for R5 being Ring holds (for R4 being Universe holds (ex R1 being set st (R1 in { [ B25 , B26 ] where B25 is (Element of ( GroupObjects R4 )) , B26 is (Element of ( Funcs ([: (the carrier of R5) , 1 :] , 1) )) : (not contradiction) } &  GO R1 , ( TrivialLMod R5 ) , R5))))
proof
let R5 being Ring;
let R4 being Universe;
set D14 = ( TrivialLMod R5 );
L74: D14 = VectSpStr (# 1 , ( op2 ) , ( op0 ) , ( pr2 ((the carrier of R5) , 1) ) #) by MOD_2:def 1;
reconsider D15 = ( the addLoopStr of D14 ) as (Element of ( GroupObjects R4 )) by L74 , GRCAT_1:29;
reconsider D16 = (the lmult of D14) as (Function of [: (the carrier of R5) , 1 :] , 1) by L74;
reconsider D17 = D16 as (Element of ( Funcs ([: (the carrier of R5) , 1 :] , 1) )) by FUNCT_2:8;
take D18 = [ D15 , D17 ];
thus L75: D18 in { [ B27 , B28 ] where B27 is (Element of ( GroupObjects R4 )) , B28 is (Element of ( Funcs ([: (the carrier of R5) , 1 :] , 1) )) : (not contradiction) };
thus L76: thesis by L56;
end;
definition
let R4 being Universe;
let R5 being Ring;
func LModObjects (R4 , R5) -> set means 
:L77: (for R2 being set holds (R2 in it iff (ex R1 being set st (R1 in { [ B29 , B30 ] where B29 is (Element of ( GroupObjects R4 )) , B30 is (Element of ( Funcs ([: (the carrier of R5) , 1 :] , 1) )) : (not contradiction) } &  GO R1 , R2 , R5))));
existence
proof
defpred S1[ set , set ] means  GO $1 , $2 , R5;
set D19 = { [ B31 , B32 ] where B31 is (Element of ( GroupObjects R4 )) , B32 is (Element of ( Funcs ([: (the carrier of R5) , 1 :] , 1) )) : (not contradiction) };
L78: (for B33 , B34 , B35 being set holds ((S1[ B33 , B34 ] & S1[ B33 , B35 ]) implies B34 = B35)) by L58;
consider C18 being set such that L79: (for R2 being set holds (R2 in C18 iff (ex R1 being set st (R1 in D19 & S1[ R1 , R2 ])))) from TARSKI:sch 1(L78);
take C18;
thus L80: thesis by L79;
end;
uniqueness
proof
set D20 = { [ B36 , B37 ] where B36 is (Element of ( GroupObjects R4 )) , B37 is (Element of ( Funcs ([: (the carrier of R5) , 1 :] , 1) )) : (not contradiction) };
let C19 , C20 being set;
assume that
L81: (for R2 being set holds (R2 in C19 iff (ex R1 being set st (R1 in D20 &  GO R1 , R2 , R5))))
and
L82: (for R2 being set holds (R2 in C20 iff (ex R1 being set st (R1 in D20 &  GO R1 , R2 , R5))));
L83:
now
let R2 being set;
L84: (R2 in C19 iff (ex R1 being set st (R1 in D20 &  GO R1 , R2 , R5))) by L81;
thus L85: (R2 in C19 iff R2 in C20) by L84 , L82;
end;
thus L86: thesis by L83 , TARSKI:1;
end;
end;
theorem
L88: (for R4 being Universe holds (for R5 being Ring holds ( TrivialLMod R5 ) in ( LModObjects (R4 , R5) )))
proof
let R4 being Universe;
let R5 being Ring;
L89: (ex R1 being set st (R1 in { [ B38 , B39 ] where B38 is (Element of ( GroupObjects R4 )) , B39 is (Element of ( Funcs ([: (the carrier of R5) , 1 :] , 1) )) : (not contradiction) } &  GO R1 , ( TrivialLMod R5 ) , R5)) by L73;
thus L90: thesis by L89 , L77;
end;
registration
let R4 being Universe;
let R5 being Ring;
cluster ( LModObjects (R4 , R5) ) -> non  empty;
coherence by L88;
end;
theorem
L92: (for R4 being Universe holds (for R5 being Ring holds (for B40 being (Element of ( LModObjects (R4 , R5) )) holds B40 is  strict  strict  strict  strict (LeftMod of R5))))
proof
let R4 being Universe;
let R5 being Ring;
let C21 being (Element of ( LModObjects (R4 , R5) ));
set D21 = { [ B41 , B42 ] where B41 is (Element of ( GroupObjects R4 )) , B42 is (Element of ( Funcs ([: (the carrier of R5) , 1 :] , 1) )) : (not contradiction) };
consider C22 being set such that L93: C22 in D21 and L94:  GO C22 , C21 , R5 by L77;
L95: (ex B43 , B44 being set st (C22 = [ B43 , B44 ] & (ex B45 being  strict (LeftMod of R5) st (C21 = B45 & B43 = ( the addLoopStr of B45 ) & B44 = (the lmult of B45))))) by L94 , L56;
thus L96: thesis by L95;
end;
definition
let R4 being Universe;
let R5 being Ring;
redefine func LModObjects (R4 , R5) -> (LeftMod_DOMAIN of R5);

coherence
proof
L97: (for B46 being (Element of ( LModObjects (R4 , R5) )) holds B46 is  strict  strict  strict  strict (LeftMod of R5)) by L92;
thus L98: thesis by L97 , L1;
end;
end;
definition
let R5 being Ring;
let R8 being (LeftMod_DOMAIN of R5);
func Morphs R8 -> (LModMorphism_DOMAIN of R5) means 
:L100: (for R1 being set holds (R1 in it iff (ex B47 , B48 being  strict (Element of R8) st R1 is  strict  strict  strict  strict (Morphism of B47 , B48))));
existence
proof
set D22 = the  strict (Element of R8);
set D23 = ( Morphs (D22 , D22) );
set D24 = { ( Morphs (B49 , B50) ) where B49 is  strict (Element of R8) , B50 is  strict (Element of R8) : (not contradiction) };
L101: (( ZERO (D22 , D22) ) is (Element of D23) & D23 in D24) by L25;
reconsider D25 = ( union D24 ) as non  empty set by L101 , TARSKI:def 4;
L102: (for R1 being set holds (R1 in D25 iff (ex B51 , B52 being  strict (Element of R8) st R1 is  strict  strict  strict  strict (Morphism of B51 , B52))))
proof
let R1 being set;
thus L103: (R1 in D25 implies (ex B53 , B54 being  strict (Element of R8) st R1 is  strict  strict  strict  strict (Morphism of B53 , B54)))
proof
assume L104: R1 in D25;
consider C23 being set such that L105: R1 in C23 and L106: C23 in D24 by L104 , TARSKI:def 4;
consider C24 , C25 being  strict (Element of R8) such that L107: C23 = ( Morphs (C24 , C25) ) by L106;
take C24;
take C25;
thus L108: thesis by L105 , L107 , L25;
end;

thus L109: ((ex B55 , B56 being  strict (Element of R8) st R1 is  strict  strict  strict  strict (Morphism of B55 , B56)) implies R1 in D25)
proof
given C26 , C27 being  strict (Element of R8) such that
L110: R1 is  strict  strict  strict  strict (Morphism of C26 , C27);

set D26 = ( Morphs (C26 , C27) );
L111: D26 in D24;
L112: R1 in D26 by L110 , L25;
thus L113: thesis by L112 , L111 , TARSKI:def 4;
end;

end;
L110:
now
let C28 being (Element of D25);
L111: (ex B57 , B58 being  strict (Element of R8) st C28 is  strict  strict  strict  strict (Morphism of B57 , B58)) by L102;
thus L112: C28 is  strict  strict  strict  strict (LModMorphism of R5) by L111;
end;
reconsider D27 = D25 as (LModMorphism_DOMAIN of R5) by L110 , L7;
take D27;
thus L113: thesis by L102;
end;
uniqueness
proof
let C29 , C30 being (LModMorphism_DOMAIN of R5);
assume that
L114: (for R1 being set holds (R1 in C29 iff (ex B59 , B60 being  strict (Element of R8) st R1 is  strict  strict  strict  strict (Morphism of B59 , B60))))
and
L115: (for R1 being set holds (R1 in C30 iff (ex B61 , B62 being  strict (Element of R8) st R1 is  strict  strict  strict  strict (Morphism of B61 , B62))));
L116:
now
let R1 being set;
L117: (R1 in C29 iff (ex B63 , B64 being  strict (Element of R8) st R1 is  strict  strict  strict  strict (Morphism of B63 , B64))) by L114;
thus L118: (R1 in C29 iff R1 in C30) by L117 , L115;
end;
thus L119: thesis by L116 , TARSKI:1;
end;
end;
definition
let R5 being Ring;
let R8 being (LeftMod_DOMAIN of R5);
let C31 being (Element of ( Morphs R8 ));
func dom' C31 -> (Element of R8) equals 
( dom C31 );
coherence
proof
consider C32 , C33 being  strict (Element of R8) such that L121: C31 is  strict  strict  strict  strict (Morphism of C32 , C33) by L100;
reconsider D28 = C31 as (Morphism of C32 , C33) by L121;
L122: ( dom D28 ) = C32 by MOD_2:def 8;
thus L123: thesis by L122;
end;
func cod' C31 -> (Element of R8) equals 
( cod C31 );
coherence
proof
consider C34 , C35 being  strict (Element of R8) such that L124: C31 is  strict  strict  strict  strict (Morphism of C34 , C35) by L100;
reconsider D29 = C31 as (Morphism of C34 , C35) by L124;
L125: ( cod D29 ) = C35 by MOD_2:def 8;
thus L126: thesis by L125;
end;
end;
definition
let R5 being Ring;
let R8 being (LeftMod_DOMAIN of R5);
let C36 being (Element of R8);
func ID C36 ->  strict (Element of ( Morphs R8 )) equals 
( ID C36 );
coherence
proof
reconsider D30 = C36 as  strict (Element of R8) by L1;
L128: ( ID D30 ) is  strict  strict  strict  strict (Element of ( Morphs R8 )) by L100;
thus L129: thesis by L128;
end;
end;
definition
let R5 being Ring;
let R8 being (LeftMod_DOMAIN of R5);
func dom R8 -> (Function of ( Morphs R8 ) , R8) means 
:L131: (for B65 being (Element of ( Morphs R8 )) holds ( it . B65 ) = ( dom' B65 ));
existence
proof
deffunc H1((Element of ( Morphs R8 ))) = ( dom' $1 );
consider C37 being (Function of ( Morphs R8 ) , R8) such that L132: (for B66 being (Element of ( Morphs R8 )) holds ( C37 . B66 ) = H1(B66)) from FUNCT_2:sch 4;
take C37;
thus L133: thesis by L132;
end;
uniqueness
proof
let C38 , C39 being (Function of ( Morphs R8 ) , R8);
assume that
L134: (for B67 being (Element of ( Morphs R8 )) holds ( C38 . B67 ) = ( dom' B67 ))
and
L135: (for B68 being (Element of ( Morphs R8 )) holds ( C39 . B68 ) = ( dom' B68 ));
L136:
now
let C40 being (Element of ( Morphs R8 ));
L137: ( C38 . C40 ) = ( dom' C40 ) by L134;
thus L138: ( C38 . C40 ) = ( C39 . C40 ) by L137 , L135;
end;
thus L139: thesis by L136 , FUNCT_2:63;
end;
func cod R8 -> (Function of ( Morphs R8 ) , R8) means 
:L140: (for B69 being (Element of ( Morphs R8 )) holds ( it . B69 ) = ( cod' B69 ));
existence
proof
deffunc H2((Element of ( Morphs R8 ))) = ( cod' $1 );
consider C41 being (Function of ( Morphs R8 ) , R8) such that L141: (for B70 being (Element of ( Morphs R8 )) holds ( C41 . B70 ) = H2(B70)) from FUNCT_2:sch 4;
take C41;
thus L142: thesis by L141;
end;
uniqueness
proof
let C42 , C43 being (Function of ( Morphs R8 ) , R8);
assume that
L143: (for B71 being (Element of ( Morphs R8 )) holds ( C42 . B71 ) = ( cod' B71 ))
and
L144: (for B72 being (Element of ( Morphs R8 )) holds ( C43 . B72 ) = ( cod' B72 ));
L145:
now
let C44 being (Element of ( Morphs R8 ));
L146: ( C42 . C44 ) = ( cod' C44 ) by L143;
thus L147: ( C42 . C44 ) = ( C43 . C44 ) by L146 , L144;
end;
thus L148: thesis by L145 , FUNCT_2:63;
end;
canceled 1;
end;
theorem
L150: (for R5 being Ring holds (for R8 being (LeftMod_DOMAIN of R5) holds (for B73 , B74 being (Element of ( Morphs R8 )) holds (( dom' B73 ) = ( cod' B74 ) implies (ex B75 , B76 , B77 being  strict (Element of R8) st (B73 is (Morphism of B76 , B77) & B74 is (Morphism of B75 , B76)))))))
proof
let R5 being Ring;
let R8 being (LeftMod_DOMAIN of R5);
set D31 = ( Morphs R8 );
defpred S2[ (Element of D31) , (Element of D31) ] means ( dom' $1 ) = ( cod' $2 );
let C45 , C46 being (Element of D31);
assume that
L151: S2[ C45 , C46 ];
consider C47 , C48 being  strict (Element of R8) such that L152: C45 is  strict  strict  strict  strict (Morphism of C47 , C48) by L100;
consider C49 , C50 being  strict (Element of R8) such that L153: C46 is  strict  strict  strict  strict (Morphism of C49 , C50) by L100;
L154: C50 = ( cod' C46 ) by L153 , MOD_2:def 8;
L155: C47 = ( dom' C45 ) by L152 , MOD_2:def 8;
thus L156: thesis by L155 , L151 , L152 , L153 , L154;
end;
theorem
L157: (for R5 being Ring holds (for R8 being (LeftMod_DOMAIN of R5) holds (for B78 , B79 being (Element of ( Morphs R8 )) holds (( dom' B78 ) = ( cod' B79 ) implies ( B78 * B79 ) in ( Morphs R8 )))))
proof
let R5 being Ring;
let R8 being (LeftMod_DOMAIN of R5);
set D32 = ( Morphs R8 );
defpred S3[ (Element of D32) , (Element of D32) ] means ( dom' $1 ) = ( cod' $2 );
let C51 , C52 being (Element of D32);
assume L158: S3[ C51 , C52 ];
consider C53 , C54 , C55 being  strict (Element of R8) such that L159: C51 is (Morphism of C54 , C55) and L160: C52 is (Morphism of C53 , C54) by L158 , L150;
reconsider D33 = C52 as (Morphism of C53 , C54) by L160;
reconsider D34 = C51 as (Morphism of C54 , C55) by L159;
L161: ( D34 * D33 ) = ( D34 *' D33 ) by MOD_2:def 11;
thus L162: thesis by L161 , L100;
end;
theorem
L163: (for R5 being Ring holds (for R8 being (LeftMod_DOMAIN of R5) holds (for B80 , B81 being (Element of ( Morphs R8 )) holds (( dom B80 ) = ( cod B81 ) implies ( B80 * B81 ) in ( Morphs R8 )))))
proof
let R5 being Ring;
let R8 being (LeftMod_DOMAIN of R5);
let C56 , C57 being (Element of ( Morphs R8 ));
assume L164: ( dom C56 ) = ( cod C57 );
L165: ( dom' C56 ) = ( cod' C57 ) by L164;
thus L166: thesis by L165 , L157;
end;
definition
let R5 being Ring;
let R8 being (LeftMod_DOMAIN of R5);
func comp R8 -> (PartFunc of [: ( Morphs R8 ) , ( Morphs R8 ) :] , ( Morphs R8 )) means 
:L167: ((for B82 , B83 being (Element of ( Morphs R8 )) holds ([ B82 , B83 ] in ( dom it ) iff ( dom' B82 ) = ( cod' B83 ))) & (for B84 , B85 being (Element of ( Morphs R8 )) holds ([ B84 , B85 ] in ( dom it ) implies ( it . (B84 , B85) ) = ( B84 * B85 ))));
existence
proof
set D35 = ( Morphs R8 );
defpred S4[ (Element of D35) , (Element of D35) ] means ( dom' $1 ) = ( cod' $2 );
deffunc H3((Element of D35) , (Element of D35)) = ( $1 * $2 );
L168: (for B86 , B87 being (Element of D35) holds (S4[ B86 , B87 ] implies H3(B86 , B87) in D35)) by L157;
consider C58 being (PartFunc of [: D35 , D35 :] , D35) such that L169: ((for B88 , B89 being (Element of D35) holds ([ B88 , B89 ] in ( dom C58 ) iff S4[ B88 , B89 ])) & (for B90 , B91 being (Element of D35) holds ([ B90 , B91 ] in ( dom C58 ) implies ( C58 . (B90 , B91) ) = H3(B90 , B91)))) from BINOP_1:sch 8(L168);
take C58;
thus L170: thesis by L169;
end;
uniqueness
proof
set D36 = ( Morphs R8 );
defpred S5[ (Element of D36) , (Element of D36) ] means ( dom' $1 ) = ( cod' $2 );
let C59 , C60 being (PartFunc of [: D36 , D36 :] , D36);
assume that
L171: (for B92 , B93 being (Element of D36) holds ([ B92 , B93 ] in ( dom C59 ) iff S5[ B92 , B93 ]))
and
L172: (for B94 , B95 being (Element of D36) holds ([ B94 , B95 ] in ( dom C59 ) implies ( C59 . (B94 , B95) ) = ( B94 * B95 )))
and
L173: (for B96 , B97 being (Element of D36) holds ([ B96 , B97 ] in ( dom C60 ) iff S5[ B96 , B97 ]))
and
L174: (for B98 , B99 being (Element of D36) holds ([ B98 , B99 ] in ( dom C60 ) implies ( C60 . (B98 , B99) ) = ( B98 * B99 )));
set D37 = ( dom C59 );
L175:
now
let R1 being set;
assume L176: R1 in ( dom C59 );
consider C61 , C62 being (Element of D36) such that L177: R1 = [ C61 , C62 ] by L176 , SUBSET_1:43;
L178: S5[ C61 , C62 ] by L171 , L176 , L177;
thus L179: R1 in ( dom C60 ) by L178 , L173 , L177;
end;
L180: ( dom C59 ) c= ( dom C60 ) by L175 , TARSKI:def 3;
L181: (for R1 being set holds (for R2 being set holds ([ R1 , R2 ] in D37 implies ( C59 . (R1 , R2) ) = ( C60 . (R1 , R2) ))))
proof
let R1 being set;
let R2 being set;
assume L182: [ R1 , R2 ] in D37;
reconsider D38 = R1 , D39 = R2 as (Element of D36) by L182 , ZFMISC_1:87;
L183: ( C59 . (D38 , D39) ) = ( D38 * D39 ) by L172 , L182;
thus L184: thesis by L183 , L174 , L180 , L182;
end;
L185:
now
let R1 being set;
assume L186: R1 in ( dom C60 );
consider C63 , C64 being (Element of D36) such that L187: R1 = [ C63 , C64 ] by L186 , SUBSET_1:43;
L188: S5[ C63 , C64 ] by L173 , L186 , L187;
thus L189: R1 in ( dom C59 ) by L188 , L171 , L187;
end;
L190: ( dom C60 ) c= ( dom C59 ) by L185 , TARSKI:def 3;
L191: ( dom C59 ) = ( dom C60 ) by L190 , L180 , XBOOLE_0:def 10;
thus L192: thesis by L191 , L181 , BINOP_1:20;
end;
end;
theorem
L194: (for R5 being Ring holds (for R8 being (LeftMod_DOMAIN of R5) holds (for B100 , B101 being (Element of ( Morphs R8 )) holds ([ B100 , B101 ] in ( dom ( comp R8 ) ) iff ( dom B100 ) = ( cod B101 )))))
proof
let R5 being Ring;
let R8 being (LeftMod_DOMAIN of R5);
let C65 , C66 being (Element of ( Morphs R8 ));
L195: (( dom C65 ) = ( dom' C65 ) & ( cod C66 ) = ( cod' C66 ));
thus L196: thesis by L195 , L167;
end;
definition
let R4 being Universe;
let R5 being Ring;
func LModCat (R4 , R5) ->  strict CatStr equals 
CatStr (# ( LModObjects (R4 , R5) ) , ( Morphs ( LModObjects (R4 , R5) ) ) , ( dom ( LModObjects (R4 , R5) ) ) , ( cod ( LModObjects (R4 , R5) ) ) , ( comp ( LModObjects (R4 , R5) ) ) #);
coherence;
end;
registration
let R4 being Universe;
let R5 being Ring;
cluster ( LModCat (R4 , R5) ) -> non  void non  empty;
coherence;
end;
theorem
L199: (for R4 being Universe holds (for R5 being Ring holds (for B102 , B103 being (Morphism of ( LModCat (R4 , R5) )) holds ([ B103 , B102 ] in ( dom (the Comp of ( LModCat (R4 , R5) )) ) iff ( dom B103 ) = ( cod B102 )))))
proof
let R4 being Universe;
let R5 being Ring;
set D40 = ( LModCat (R4 , R5) );
set D41 = ( LModObjects (R4 , R5) );
let C67 , C68 being (Morphism of D40);
reconsider D42 = C67 as (Element of ( Morphs D41 ));
reconsider D43 = C68 as (Element of ( Morphs D41 ));
L200: ( cod C67 ) = ( cod' D42 ) by L140
.= ( cod D42 );
L201: ( dom C68 ) = ( dom' D43 ) by L131
.= ( dom D43 );
L202:
now
assume L203: ( dom C68 ) = ( cod C67 );
L204: ( dom' D43 ) = ( cod' D42 ) by L203 , L201 , L200;
thus L205: [ C68 , C67 ] in ( dom (the Comp of D40) ) by L204 , L167;
end;
L206:
now
assume L207: [ C68 , C67 ] in ( dom (the Comp of D40) );
L208: ( dom' D43 ) = ( cod' D42 ) by L207 , L167
.= ( cod D42 );
thus L209: ( dom C68 ) = ( cod C67 ) by L208 , L201 , L200;
end;
thus L210: thesis by L206 , L202;
end;
registration
let R4 being Universe;
let R5 being Ring;
cluster  ->  strict for (Element of ( Morphs ( LModObjects (R4 , R5) ) ));
coherence
proof
set D44 = ( LModObjects (R4 , R5) );
let C69 being (Element of ( Morphs D44 ));
L211: (ex B104 , B105 being  strict (Element of D44) st C69 is  strict  strict  strict  strict (Morphism of B104 , B105)) by L100;
thus L212: C69 is  strict by L211;
end;
end;
canceled 2;
theorem
L214: (for R4 being Universe holds (for R5 being Ring holds (for B106 being (Morphism of ( LModCat (R4 , R5) )) holds (for B107 being (Element of ( Morphs ( LModObjects (R4 , R5) ) )) holds (B106 = B107 implies (( dom B106 ) = ( dom B107 ) & ( cod B106 ) = ( cod B107 )))))))
proof
let R4 being Universe;
let R5 being Ring;
set D45 = ( LModCat (R4 , R5) );
set D46 = ( LModObjects (R4 , R5) );
set D47 = ( Morphs D46 );
let C70 being (Morphism of D45);
let C71 being (Element of D47);
assume L215: C70 = C71;
thus L216: ( dom C70 ) = ( dom' C71 ) by L215 , L131
.= ( dom C71 );
thus L217: ( cod C70 ) = ( cod' C71 ) by L215 , L140
.= ( cod C71 );
end;
theorem
L218: (for R4 being Universe holds (for R5 being Ring holds (for B108 , B109 being (Morphism of ( LModCat (R4 , R5) )) holds (for B110 , B111 being (Element of ( Morphs ( LModObjects (R4 , R5) ) )) holds ((B108 = B110 & B109 = B111) implies ((( dom B109 ) = ( cod B108 ) iff ( dom B111 ) = ( cod B110 )) & (( dom B109 ) = ( cod B108 ) iff [ B111 , B110 ] in ( dom ( comp ( LModObjects (R4 , R5) ) ) )) & (( dom B109 ) = ( cod B108 ) implies ( B109 (*) B108 ) = ( B111 * B110 )) & (( dom B108 ) = ( dom B109 ) iff ( dom B110 ) = ( dom B111 )) & (( cod B108 ) = ( cod B109 ) iff ( cod B110 ) = ( cod B111 ))))))))
proof
let R4 being Universe;
let R5 being Ring;
set D48 = ( LModCat (R4 , R5) );
set D49 = ( LModObjects (R4 , R5) );
set D50 = ( Morphs D49 );
let C72 , C73 being (Morphism of D48);
let C74 , C75 being (Element of D50);
assume that
L219: C72 = C74
and
L220: C73 = C75;
L221: ( cod C72 ) = ( cod C74 ) by L219 , L214;
thus L222: (( dom C73 ) = ( cod C72 ) iff ( dom C75 ) = ( cod C74 )) by L221 , L220 , L214;
L223: ( dom C73 ) = ( dom C75 ) by L220 , L214;
thus L224: (( dom C73 ) = ( cod C72 ) iff [ C75 , C74 ] in ( dom ( comp D49 ) )) by L223 , L221 , L194;
thus L225: (( dom C73 ) = ( cod C72 ) implies ( C73 (*) C72 ) = ( C75 * C74 ))
proof
assume L226: ( dom C73 ) = ( cod C72 );
L227: [ C73 , C72 ] in ( dom (the Comp of D48) ) by L226 , L199;
thus L228: ( C73 (*) C72 ) = ( ( comp D49 ) . (C75 , C74) ) by L227 , L219 , L220 , CAT_1:def 1
.= ( C75 * C74 ) by L224 , L226 , L167;
end;

L229: ( dom C72 ) = ( dom C74 ) by L219 , L214;
thus L230: (( dom C72 ) = ( dom C73 ) iff ( dom C74 ) = ( dom C75 )) by L229 , L220 , L214;
L231: ( cod C73 ) = ( cod C75 ) by L220 , L214;
thus L232: thesis by L231 , L219 , L214;
end;
L233: (for R4 being Universe holds (for R5 being Ring holds (for B112 , B113 being (Morphism of ( LModCat (R4 , R5) )) holds (( dom B113 ) = ( cod B112 ) implies (( dom ( B113 (*) B112 ) ) = ( dom B112 ) & ( cod ( B113 (*) B112 ) ) = ( cod B113 ))))))
proof
let R4 being Universe;
let R5 being Ring;
set D51 = ( Morphs ( LModObjects (R4 , R5) ) );
let C76 , C77 being (Morphism of ( LModCat (R4 , R5) ));
assume that
L234: ( dom C77 ) = ( cod C76 );
reconsider D52 = C77 as  strict (Element of D51);
reconsider D53 = C76 as  strict (Element of D51);
L235: ( dom D52 ) = ( cod D53 ) by L234 , L218;
L236: (( dom ( D52 * D53 ) ) = ( dom D53 ) & ( cod ( D52 * D53 ) ) = ( cod D52 )) by L235 , MOD_2:15;
reconsider D54 = ( D52 * D53 ) as (Element of D51) by L235 , L163;
L237: D54 = ( C77 (*) C76 ) by L234 , L218;
thus L238: thesis by L237 , L236 , L218;
end;
L239: (for R4 being Universe holds (for R5 being Ring holds (for B114 , B115 , B116 being (Morphism of ( LModCat (R4 , R5) )) holds ((( dom B116 ) = ( cod B115 ) & ( dom B115 ) = ( cod B114 )) implies ( B116 (*) ( B115 (*) B114 ) ) = ( ( B116 (*) B115 ) (*) B114 )))))
proof
let R4 being Universe;
let R5 being Ring;
set D55 = ( Morphs ( LModObjects (R4 , R5) ) );
let C78 , C79 , C80 being (Morphism of ( LModCat (R4 , R5) ));
assume that
L240: (( dom C80 ) = ( cod C79 ) & ( dom C79 ) = ( cod C78 ));
reconsider D56 = C78 , D57 = C79 , D58 = C80 as  strict (Element of D55);
L241: (( D58 * D57 ) = ( C80 (*) C79 ) & ( dom ( C80 (*) C79 ) ) = ( cod C78 )) by L240 , L233 , L218;
L242: (( dom D58 ) = ( cod D57 ) & ( dom D57 ) = ( cod D56 )) by L240 , L218;
reconsider D59 = ( D57 * D56 ) , D60 = ( D58 * D57 ) as  strict (Element of D55) by L242 , L163;
L243: (( D57 * D56 ) = ( C79 (*) C78 ) & ( dom C80 ) = ( cod ( C79 (*) C78 ) )) by L240 , L233 , L218;
L244: ( C80 (*) ( C79 (*) C78 ) ) = ( D58 * D59 ) by L243 , L218
.= ( D60 * D56 ) by L242 , MOD_2:17
.= ( ( C80 (*) C79 ) (*) C78 ) by L241 , L218;
thus L245: thesis by L244;
end;
registration
let R4 being Universe;
let R5 being Ring;
cluster ( LModCat (R4 , R5) ) ->  Category-like  transitive  associative  reflexive;
coherence
proof
set D61 = ( LModCat (R4 , R5) );
thus L246: D61 is  Category-like
proof
let C81 being (Morphism of D61);
thus L247: thesis by L218;
end;

thus L248: D61 is  transitive
proof
let C82 being (Morphism of D61);
thus L249: thesis by L233;
end;

thus L250: D61 is  associative
proof
let C83 being (Morphism of D61);
thus L251: thesis by L239;
end;

thus L252: D61 is  reflexive
proof
let C84 being (Element of D61);
reconsider D62 = C84 as (Element of ( LModObjects (R4 , R5) ));
consider R1 being set such that L253: R1 in { [ B117 , B118 ] where B117 is (Element of ( GroupObjects R4 )) , B118 is (Element of ( Funcs ([: (the carrier of R5) , 1 :] , 1) )) : (not contradiction) } and L254:  GO R1 , D62 , R5 by L77;
set D63 = ( ID D62 );
consider C85 , C86 being set such that L255: R1 = [ C85 , C86 ] and L256: (ex B119 being  strict (LeftMod of R5) st (D62 = B119 & C85 = ( the addLoopStr of B119 ) & C86 = (the lmult of B119))) by L254 , L56;
reconsider D64 = D62 as  strict (Element of ( LModObjects (R4 , R5) )) by L256;
reconsider D65 = D63 as (Morphism of D61);
reconsider D66 = D65 as LModMorphismStr over R5;
L257: ( dom D65 ) = ( dom D66 ) by L214
.= C84 by MOD_2:18;
L258: ( cod D65 ) = ( cod D66 ) by L214
.= C84 by MOD_2:18;
L259: D65 in ( Hom (C84 , C84) ) by L258 , L257;
thus L260: ( Hom (C84 , C84) ) <> ( {} ) by L259;
end;

end;
end;
