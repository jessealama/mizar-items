:: Binary Operations Applied to Finite Sequences
::  by Czes{\l}aw Byli\'nski
::
:: Received May 4, 1990
:: Copyright (c) 1990-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies XBOOLE_0, SUBSET_1, FUNCT_1, PARTFUN1, RELAT_1, ZFMISC_1,
      FUNCOP_1, TARSKI, NAT_1, FINSEQ_1, FINSEQ_2, ORDINAL4, ARYTM_3, CARD_1,
      BINOP_1, SETWISEO, FINSEQOP;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, NUMBERS, ORDINAL1, XCMPLX_0,
      NAT_1, RELAT_1, EQREL_1, FUNCT_1, FINSEQ_1, RELSET_1, PARTFUN1, FUNCT_2,
      BINOP_1, FUNCT_3, FUNCOP_1, FINSEQ_2, SETWISEO;
 constructors PARTFUN1, BINOP_1, FUNCT_3, FUNCOP_1, SETWISEO, NAT_1, FINSEQ_2,
      RELSET_1, EQREL_1;
 registrations XBOOLE_0, SUBSET_1, RELAT_1, FUNCT_1, FUNCT_2, FUNCOP_1, NAT_1,
      FINSEQ_2, ORDINAL1, XCMPLX_0, FINSEQ_1, CARD_1, RELSET_1;
 requirements NUMERALS, BOOLE, SUBSET;
 definitions BINOP_1, FUNCOP_1, FINSEQ_2;
 theorems ZFMISC_1, FUNCT_1, FUNCT_2, FUNCOP_1, FINSEQ_1, BINOP_1, SETWISEO,
      FINSEQ_2, FUNCT_3, RELAT_1, XBOOLE_0, CARD_1;
 schemes NAT_1, FINSEQ_2;

begin
theorem
L1: (for B1 being Function holds (<: ( {} ) , B1 :> = ( {} ) & <: B1 , ( {} ) :> = ( {} )))
proof
let C1 being Function;
L2: (( dom <: ( {} ) , C1 :> ) = ( ( dom ( {} ) ) /\ ( dom C1 ) ) & ( dom <: C1 , ( {} ) :> ) = ( ( dom C1 ) /\ ( dom ( {} ) ) )) by FUNCT_3:def 7;
thus L3: thesis by L2;
end;
theorem
L4: (for B2 being Function holds ([: ( {} ) , B2 :] = ( {} ) & [: B2 , ( {} ) :] = ( {} )))
proof
let C2 being Function;
L5: (( dom [: ( {} ) , C2 :] ) = [: ( dom ( {} ) ) , ( dom C2 ) :] & ( dom [: C2 , ( {} ) :] ) = [: ( dom C2 ) , ( dom ( {} ) ) :]) by FUNCT_3:def 8;
thus L6: thesis by L5 , ZFMISC_1:90;
end;
theorem
L7: (for B3 , B4 being Function holds (( B3 .: (( {} ) , B4) ) = ( {} ) & ( B3 .: (B4 , ( {} )) ) = ( {} )))
proof
let C3 , C4 being Function;
L8: ( C3 .: (( {} ) , C4) ) = ( C3 * ( {} ) ) by L1;
thus L9: thesis by L8 , L1;
end;
theorem
L10: (for R1 being set holds (for B5 being Function holds ( B5 [:] (( {} ) , R1) ) = ( {} )))
proof
let R1 being set;
let C5 being Function;
L11: ( C5 [:] (( {} ) , R1) ) = ( C5 .: (( {} ) , ( ( dom ( {} ) ) --> R1 )) );
thus L12: thesis by L11 , L7;
end;
theorem
L13: (for R1 being set holds (for B6 being Function holds ( B6 [;] (R1 , ( {} )) ) = ( {} )))
proof
let R1 being set;
let C6 being Function;
L14: ( C6 [;] (R1 , ( {} )) ) = ( C6 .: (( ( dom ( {} ) ) --> R1 ) , ( {} )) );
thus L15: thesis by L14 , L7;
end;
theorem
L16: (for B7 being set holds (for B8 , B9 being set holds <: ( B7 --> B8 ) , ( B7 --> B9 ) :> = ( B7 --> [ B8 , B9 ] )))
proof
let C7 being set;
let C8 , C9 being set;
set D1 = ( C7 --> C8 );
set D2 = ( C7 --> C9 );
set D3 = <: D1 , D2 :>;
L17:
now
per cases ;
suppose L18: C7 = ( {} );

thus L19: thesis by L18;
end;
suppose L20: C7 <> ( {} );

L21: ( rng D3 ) c= [: { C8 } , { C9 } :];
L22: ( rng D3 ) c= { [ C8 , C9 ] } by L21 , ZFMISC_1:29;
set D4 = the (Element of C7);
L23: (( dom D1 ) = C7 & ( dom D2 ) = C7) by FUNCOP_1:13;
L24: ( dom D3 ) = C7 by L23 , FUNCT_3:50;
L25: (( D1 . D4 ) = C8 & ( D2 . D4 ) = C9) by L20 , FUNCOP_1:7;
L26: ( D3 . D4 ) = [ C8 , C9 ] by L25 , L20 , L23 , FUNCT_3:49;
L27: [ C8 , C9 ] in ( rng D3 ) by L26 , L20 , L24 , FUNCT_1:def 3;
L28: { [ C8 , C9 ] } c= ( rng D3 ) by L27 , ZFMISC_1:31;
L29: ( rng D3 ) = { [ C8 , C9 ] } by L28 , L22 , XBOOLE_0:def 10;
thus L30: thesis by L29 , L24 , FUNCOP_1:9;
end;
end;
thus L32: thesis by L17;
end;
theorem
L33: (for B10 being Function holds (for B11 being set holds (for B12 , B13 being set holds ([ B12 , B13 ] in ( dom B10 ) implies ( B10 .: (( B11 --> B12 ) , ( B11 --> B13 )) ) = ( B11 --> ( B10 . (B12 , B13) ) )))))
proof
let C10 being Function;
let C11 being set;
let C12 , C13 being set;
assume that
L34: [ C12 , C13 ] in ( dom C10 );
set D5 = ( C11 --> C12 );
set D6 = ( C11 --> C13 );
thus L35: ( C10 .: (D5 , D6) ) = ( C10 * ( C11 --> [ C12 , C13 ] ) ) by L16
.= ( C11 --> ( C10 . (C12 , C13) ) ) by L34 , FUNCOP_1:17;
end;
definition
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R19 being (Function of [: R5 , R6 :] , R7);
let R20 being (FinSequence of R5);
let R22 being (FinSequence of R6);
redefine func R19 .: (R20 , R22) -> (FinSequence of R7);

coherence by FINSEQ_2:70;
end;
definition
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R19 being (Function of [: R5 , R6 :] , R7);
let R20 being (FinSequence of R5);
let R16 being (Element of R6);
redefine func R19 [:] (R20 , R16) -> (FinSequence of R7);

coherence by FINSEQ_2:83;
end;
definition
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R19 being (Function of [: R5 , R6 :] , R7);
let R10 being (Element of R5);
let R22 being (FinSequence of R6);
redefine func R19 [;] (R10 , R22) -> (FinSequence of R7);

coherence by FINSEQ_2:77;
end;
definition
let C14 , C15 being set;
let C16 being (FinSequence of C14);
let C17 being (Function of C14 , C15);
redefine func C17 * C16 -> (FinSequence of C15);

coherence by FINSEQ_2:32;
end;
theorem
L40: (for R5 being non  empty set holds (for R7 being non  empty set holds (for R10 being (Element of R5) holds (for R20 being (FinSequence of R5) holds (for R26 being (Function of R5 , R7) holds ( R26 * ( R20 ^ <* R10 *> ) ) = ( ( R26 * R20 ) ^ <* ( R26 . R10 ) *> ))))))
proof
let R5 being non  empty set;
let R7 being non  empty set;
let R10 being (Element of R5);
let R20 being (FinSequence of R5);
let R26 being (Function of R5 , R7);
set D7 = ( R26 * ( R20 ^ <* R10 *> ) );
set D8 = ( ( R26 * R20 ) ^ <* ( R26 . R10 ) *> );
set D9 = ( ( len R20 ) + 1 );
L41: ( len D7 ) = ( len ( R20 ^ <* R10 *> ) ) by FINSEQ_2:33;
L42: ( len ( R26 * R20 ) ) = ( len R20 ) by FINSEQ_2:33;
L43: ( len ( R20 ^ <* R10 *> ) ) = D9 by FINSEQ_2:16;
L44: ( dom D7 ) = ( Seg D9 ) by L43 , L41 , FINSEQ_1:def 3;
L45:
now
let C18 being Nat;
L46: ( Seg ( len R20 ) ) = ( dom R20 ) by FINSEQ_1:def 3;
L47: ( Seg ( len ( R26 * R20 ) ) ) = ( dom ( R26 * R20 ) ) by FINSEQ_1:def 3;
assume L48: C18 in ( dom D7 );
L49:
now
per cases  by L44 , L48 , L46 , FINSEQ_2:7;
suppose L50: C18 in ( dom R20 );

thus L51: ( R26 . ( ( R20 ^ <* R10 *> ) . C18 ) ) = ( R26 . ( R20 . C18 ) ) by L50 , FINSEQ_1:def 7
.= ( ( R26 * R20 ) . C18 ) by L42 , L46 , L47 , L50 , FUNCT_1:12
.= ( D8 . C18 ) by L42 , L46 , L47 , L50 , FINSEQ_1:def 7;
end;
suppose L52: C18 = D9;

thus L53: ( R26 . ( ( R20 ^ <* R10 *> ) . C18 ) ) = ( R26 . R10 ) by L52 , FINSEQ_1:42
.= ( D8 . C18 ) by L42 , L52 , FINSEQ_1:42;
end;
end;
thus L55: ( D7 . C18 ) = ( D8 . C18 ) by L49 , L48 , FUNCT_1:12;
end;
L56: ( len D8 ) = ( ( len ( R26 * R20 ) ) + 1 ) by FINSEQ_2:16;
thus L57: thesis by L56 , L41 , L42 , L45 , FINSEQ_2:9 , FINSEQ_2:16;
end;
theorem
L58: (for R5 being non  empty set holds (for R7 being non  empty set holds (for R20 being (FinSequence of R5) holds (for R21 being (FinSequence of R5) holds (for R26 being (Function of R5 , R7) holds ( R26 * ( R20 ^ R21 ) ) = ( ( R26 * R20 ) ^ ( R26 * R21 ) ))))))
proof
let R5 being non  empty set;
let R7 being non  empty set;
let R20 being (FinSequence of R5);
let R21 being (FinSequence of R5);
let R26 being (Function of R5 , R7);
defpred S1[ (FinSequence of R5) ] means ( R26 * ( R20 ^ $1 ) ) = ( ( R26 * R20 ) ^ ( R26 * $1 ) );
L59: (for R21 being (FinSequence of R5) holds (for R10 being (Element of R5) holds (S1[ R21 ] implies S1[ ( R21 ^ <* R10 *> ) ])))
proof
let R21 being (FinSequence of R5);
let R10 being (Element of R5);
assume that
L60: ( R26 * ( R20 ^ R21 ) ) = ( ( R26 * R20 ) ^ ( R26 * R21 ) );
thus L61: ( R26 * ( R20 ^ ( R21 ^ <* R10 *> ) ) ) = ( R26 * ( ( R20 ^ R21 ) ^ <* R10 *> ) ) by FINSEQ_1:32
.= ( ( R26 * ( R20 ^ R21 ) ) ^ <* ( R26 . R10 ) *> ) by L40
.= ( ( R26 * R20 ) ^ ( ( R26 * R21 ) ^ <* ( R26 . R10 ) *> ) ) by L60 , FINSEQ_1:32
.= ( ( R26 * R20 ) ^ ( R26 * ( R21 ^ <* R10 *> ) ) ) by L40;
end;
L62: ( R26 * ( R20 ^ ( <*> R5 ) ) ) = ( R26 * R20 ) by FINSEQ_1:34
.= ( ( R26 * R20 ) ^ ( R26 * ( <*> R5 ) ) ) by FINSEQ_1:34;
L63: S1[ ( <*> R5 ) ] by L62;
L64: (for R21 being (FinSequence of R5) holds S1[ R21 ]) from FINSEQ_2:sch 2(L63 , L59);
thus L65: thesis by L64;
end;
L66: (for R5 being non  empty set holds (for R6 being non  empty set holds (for R7 being non  empty set holds (for R17 being Nat holds (for R19 being (Function of [: R5 , R6 :] , R7) holds (for R31 being (Tuple of R17 , R6) holds (for B14 being (Tuple of ( 0 ) , R5) holds ( R19 .: (B14 , R31) ) = ( <*> R7 ))))))))
proof
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R17 being Nat;
let R19 being (Function of [: R5 , R6 :] , R7);
let R31 being (Tuple of R17 , R6);
let C19 being (Tuple of ( 0 ) , R5);
L67: C19 = ( <*> R5 );
thus L68: thesis by L67 , FINSEQ_2:73;
end;
L69: (for R5 being non  empty set holds (for R6 being non  empty set holds (for R7 being non  empty set holds (for R10 being (Element of R5) holds (for R19 being (Function of [: R5 , R6 :] , R7) holds (for B15 being (Tuple of ( 0 ) , R6) holds ( R19 [;] (R10 , B15) ) = ( <*> R7 )))))))
proof
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R10 being (Element of R5);
let R19 being (Function of [: R5 , R6 :] , R7);
let C20 being (Tuple of ( 0 ) , R6);
L70: C20 = ( <*> R6 );
thus L71: thesis by L70 , FINSEQ_2:79;
end;
L72: (for R5 being non  empty set holds (for R6 being non  empty set holds (for R7 being non  empty set holds (for R16 being (Element of R6) holds (for R19 being (Function of [: R5 , R6 :] , R7) holds (for B16 being (Tuple of ( 0 ) , R5) holds ( R19 [:] (B16 , R16) ) = ( <*> R7 )))))))
proof
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R16 being (Element of R6);
let R19 being (Function of [: R5 , R6 :] , R7);
let C21 being (Tuple of ( 0 ) , R5);
L73: C21 = ( <*> R5 );
thus L74: thesis by L73 , FINSEQ_2:85;
end;
theorem
L75: (for R5 being non  empty set holds (for R6 being non  empty set holds (for R7 being non  empty set holds (for R10 being (Element of R5) holds (for R16 being (Element of R6) holds (for R17 being Nat holds (for R19 being (Function of [: R5 , R6 :] , R7) holds (for R27 being (Tuple of R17 , R5) holds (for R31 being (Tuple of R17 , R6) holds ( R19 .: (( R27 ^ <* R10 *> ) , ( R31 ^ <* R16 *> )) ) = ( ( R19 .: (R27 , R31) ) ^ <* ( R19 . (R10 , R16) ) *> ))))))))))
proof
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R10 being (Element of R5);
let R16 being (Element of R6);
let R17 being Nat;
let R19 being (Function of [: R5 , R6 :] , R7);
let R27 being (Tuple of R17 , R5);
let R31 being (Tuple of R17 , R6);
set D10 = ( R27 ^ <* R10 *> );
set D11 = ( R31 ^ <* R16 *> );
set D12 = ( R19 .: (R27 , R31) );
set D13 = ( R19 .: (D10 , D11) );
set D14 = ( D12 ^ <* ( R19 . (R10 , R16) ) *> );
L76: ( len R31 ) = R17 by CARD_1:def 7;
L77: ( len D11 ) = ( R17 + 1 ) by L76 , FINSEQ_2:16;
L78: ( len R27 ) = R17 by CARD_1:def 7;
L79: ( len D12 ) = R17 by L78 , L76 , FINSEQ_2:72;
L80: ( len D10 ) = ( R17 + 1 ) by L78 , FINSEQ_2:16;
L81: ( len D13 ) = ( R17 + 1 ) by L80 , L77 , FINSEQ_2:72;
L82: ( dom D13 ) = ( Seg ( R17 + 1 ) ) by L81 , FINSEQ_1:def 3;
L83:
now
let C22 being Nat;
assume L84: C22 in ( dom D13 );
L85:
now
per cases  by L82 , L84 , FINSEQ_2:7;
suppose L86: C22 in ( Seg R17 );

L87: ( Seg ( len R27 ) ) = ( dom R27 ) by FINSEQ_1:def 3;
L88: ( D10 . C22 ) = ( R27 . C22 ) by L87 , L78 , L86 , FINSEQ_1:def 7;
L89: ( Seg ( len D12 ) ) = ( dom D12 ) by FINSEQ_1:def 3;
L90: ( Seg ( len R31 ) ) = ( dom R31 ) by FINSEQ_1:def 3;
L91: ( D11 . C22 ) = ( R31 . C22 ) by L90 , L76 , L86 , FINSEQ_1:def 7;
L92: C22 in ( dom D12 ) by L79 , L86 , FINSEQ_1:def 3;
thus L93: ( R19 . (( D10 . C22 ) , ( D11 . C22 )) ) = ( D12 . C22 ) by L92 , L88 , L91 , FUNCOP_1:22
.= ( D14 . C22 ) by L79 , L86 , L89 , FINSEQ_1:def 7;
end;
suppose L94: C22 = ( R17 + 1 );

L95: (( D10 . C22 ) = R10 & ( D11 . C22 ) = R16) by L94 , L78 , L76 , FINSEQ_1:42;
thus L96: ( R19 . (( D10 . C22 ) , ( D11 . C22 )) ) = ( D14 . C22 ) by L95 , L79 , L94 , FINSEQ_1:42;
end;
end;
thus L98: ( D13 . C22 ) = ( D14 . C22 ) by L85 , L84 , FUNCOP_1:22;
end;
L99: ( len D14 ) = ( ( len D12 ) + 1 ) by FINSEQ_2:16;
thus L100: thesis by L99 , L81 , L79 , L83 , FINSEQ_2:9;
end;
theorem
L101: (for R5 being non  empty set holds (for R6 being non  empty set holds (for R7 being non  empty set holds (for R17 being Nat holds (for R18 being Nat holds (for R19 being (Function of [: R5 , R6 :] , R7) holds (for R27 being (Tuple of R17 , R5) holds (for R31 being (Tuple of R17 , R6) holds (for R32 being (Tuple of R18 , R5) holds (for R33 being (Tuple of R18 , R6) holds ( R19 .: (( R27 ^ R32 ) , ( R31 ^ R33 )) ) = ( ( R19 .: (R27 , R31) ) ^ ( R19 .: (R32 , R33) ) )))))))))))
proof
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R17 being Nat;
let R18 being Nat;
let R19 being (Function of [: R5 , R6 :] , R7);
let R27 being (Tuple of R17 , R5);
let R31 being (Tuple of R17 , R6);
let R32 being (Tuple of R18 , R5);
let R33 being (Tuple of R18 , R6);
defpred S2[ Nat ] means (for B17 being (Tuple of $1 , R5) holds (for B18 being (Tuple of $1 , R6) holds ( R19 .: (( R27 ^ B17 ) , ( R31 ^ B18 )) ) = ( ( R19 .: (R27 , R31) ) ^ ( R19 .: (B17 , B18) ) )));
L102:
now
let R18 being Nat;
assume that
L103: (for R32 being (Tuple of R18 , R5) holds (for R33 being (Tuple of R18 , R6) holds ( R19 .: (( R27 ^ R32 ) , ( R31 ^ R33 )) ) = ( ( R19 .: (R27 , R31) ) ^ ( R19 .: (R32 , R33) ) )));
let C23 being (Tuple of ( R18 + 1 ) , R5);
let C24 being (Tuple of ( R18 + 1 ) , R6);
consider C25 being (Element of ( R18 -tuples_on R5 )), R10 being (Element of R5) such that L104: C23 = ( C25 ^ <* R10 *> ) by FINSEQ_2:117;
L105: ( R27 ^ C23 ) = ( ( R27 ^ C25 ) ^ <* R10 *> ) by L104 , FINSEQ_1:32;
reconsider D15 = C25 as (Tuple of R18 , R5);
consider C26 being (Element of ( R18 -tuples_on R6 )), R16 being (Element of R6) such that L106: C24 = ( C26 ^ <* R16 *> ) by FINSEQ_2:117;
L107: ( R31 ^ C24 ) = ( ( R31 ^ C26 ) ^ <* R16 *> ) by L106 , FINSEQ_1:32;
reconsider D16 = C26 as (Tuple of R18 , R6);
L108: (( R27 ^ D15 ) is (Tuple of ( R17 + R18 ) , R5) & ( R31 ^ D16 ) is (Tuple of ( R17 + R18 ) , R6)) by FINSEQ_2:107;
thus L109: ( R19 .: (( R27 ^ C23 ) , ( R31 ^ C24 )) ) = ( ( R19 .: (( R27 ^ D15 ) , ( R31 ^ D16 )) ) ^ <* ( R19 . (R10 , R16) ) *> ) by L108 , L105 , L107 , L75
.= ( ( ( R19 .: (R27 , R31) ) ^ ( R19 .: (D15 , D16) ) ) ^ <* ( R19 . (R10 , R16) ) *> ) by L103
.= ( ( R19 .: (R27 , R31) ) ^ ( ( R19 .: (D15 , D16) ) ^ <* ( R19 . (R10 , R16) ) *> ) ) by FINSEQ_1:32
.= ( ( R19 .: (R27 , R31) ) ^ ( R19 .: (C23 , C24) ) ) by L104 , L106 , L75;
end;
L110: (for R18 being Nat holds (S2[ R18 ] implies S2[ ( R18 + 1 ) ])) by L102;
L111:
now
let C27 being (Tuple of ( 0 ) , R5);
let C28 being (Tuple of ( 0 ) , R6);
L112: C27 = ( <*> R5 );
L113: ( R19 .: (C27 , C28) ) = ( <*> R7 ) by L112 , FINSEQ_2:73;
L114: (( R27 ^ C27 ) = R27 & ( R31 ^ C28 ) = R31) by FINSEQ_2:95;
thus L115: ( R19 .: (( R27 ^ C27 ) , ( R31 ^ C28 )) ) = ( ( R19 .: (R27 , R31) ) ^ ( R19 .: (C27 , C28) ) ) by L114 , L113 , FINSEQ_1:34;
end;
L116: S2[ ( 0 ) ] by L111;
L117: (for R18 being Nat holds S2[ R18 ]) from NAT_1:sch 2(L116 , L110);
thus L118: thesis by L117;
end;
theorem
L119: (for R5 being non  empty set holds (for R6 being non  empty set holds (for R7 being non  empty set holds (for R10 being (Element of R5) holds (for R16 being (Element of R6) holds (for R19 being (Function of [: R5 , R6 :] , R7) holds (for R22 being (FinSequence of R6) holds ( R19 [;] (R10 , ( R22 ^ <* R16 *> )) ) = ( ( R19 [;] (R10 , R22) ) ^ <* ( R19 . (R10 , R16) ) *> ))))))))
proof
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R10 being (Element of R5);
let R16 being (Element of R6);
let R19 being (Function of [: R5 , R6 :] , R7);
let R22 being (FinSequence of R6);
set D17 = ( R22 ^ <* R16 *> );
set D18 = ( R19 [;] (R10 , R22) );
set D19 = ( R19 [;] (R10 , D17) );
set D20 = ( D18 ^ <* ( R19 . (R10 , R16) ) *> );
set D21 = ( len R22 );
L120: ( len D18 ) = D21 by FINSEQ_2:78;
L121: ( len D17 ) = ( D21 + 1 ) by FINSEQ_2:16;
L122: ( len D19 ) = ( D21 + 1 ) by L121 , FINSEQ_2:78;
L123: ( dom D19 ) = ( Seg ( D21 + 1 ) ) by L122 , FINSEQ_1:def 3;
L124:
now
let C29 being Nat;
assume L125: C29 in ( dom D19 );
L126:
now
per cases  by L123 , L125 , FINSEQ_2:7;
suppose L127: C29 in ( Seg D21 );

L128: C29 in ( dom D18 ) by L127 , L120 , FINSEQ_1:def 3;
L129: ( Seg ( len D18 ) ) = ( dom D18 ) by FINSEQ_1:def 3;
L130: ( Seg ( len R22 ) ) = ( dom R22 ) by FINSEQ_1:def 3;
thus L131: ( R19 . (R10 , ( D17 . C29 )) ) = ( R19 . (R10 , ( R22 . C29 )) ) by L130 , L127 , FINSEQ_1:def 7
.= ( D18 . C29 ) by L128 , FUNCOP_1:32
.= ( D20 . C29 ) by L120 , L127 , L129 , FINSEQ_1:def 7;
end;
suppose L132: C29 = ( D21 + 1 );

thus L133: ( R19 . (R10 , ( D17 . C29 )) ) = ( R19 . (R10 , R16) ) by L132 , FINSEQ_1:42
.= ( D20 . C29 ) by L120 , L132 , FINSEQ_1:42;
end;
end;
thus L135: ( D19 . C29 ) = ( D20 . C29 ) by L126 , L125 , FUNCOP_1:32;
end;
L136: ( len D20 ) = ( ( len D18 ) + 1 ) by FINSEQ_2:16;
thus L137: thesis by L136 , L120 , L122 , L124 , FINSEQ_2:9;
end;
theorem
L138: (for R5 being non  empty set holds (for R6 being non  empty set holds (for R7 being non  empty set holds (for R10 being (Element of R5) holds (for R19 being (Function of [: R5 , R6 :] , R7) holds (for R22 being (FinSequence of R6) holds (for R23 being (FinSequence of R6) holds ( R19 [;] (R10 , ( R22 ^ R23 )) ) = ( ( R19 [;] (R10 , R22) ) ^ ( R19 [;] (R10 , R23) ) ))))))))
proof
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R10 being (Element of R5);
let R19 being (Function of [: R5 , R6 :] , R7);
let R22 being (FinSequence of R6);
let R23 being (FinSequence of R6);
defpred S3[ (FinSequence of R6) ] means ( R19 [;] (R10 , ( R22 ^ $1 )) ) = ( ( R19 [;] (R10 , R22) ) ^ ( R19 [;] (R10 , $1) ) );
L139: (for R23 being (FinSequence of R6) holds (for R16 being (Element of R6) holds (S3[ R23 ] implies S3[ ( R23 ^ <* R16 *> ) ])))
proof
let R23 being (FinSequence of R6);
let R16 being (Element of R6);
assume that
L140: ( R19 [;] (R10 , ( R22 ^ R23 )) ) = ( ( R19 [;] (R10 , R22) ) ^ ( R19 [;] (R10 , R23) ) );
thus L141: ( R19 [;] (R10 , ( R22 ^ ( R23 ^ <* R16 *> ) )) ) = ( R19 [;] (R10 , ( ( R22 ^ R23 ) ^ <* R16 *> )) ) by FINSEQ_1:32
.= ( ( R19 [;] (R10 , ( R22 ^ R23 )) ) ^ <* ( R19 . (R10 , R16) ) *> ) by L119
.= ( ( R19 [;] (R10 , R22) ) ^ ( ( R19 [;] (R10 , R23) ) ^ <* ( R19 . (R10 , R16) ) *> ) ) by L140 , FINSEQ_1:32
.= ( ( R19 [;] (R10 , R22) ) ^ ( R19 [;] (R10 , ( R23 ^ <* R16 *> )) ) ) by L119;
end;
L142: ( R19 [;] (R10 , ( R22 ^ ( <*> R6 ) )) ) = ( R19 [;] (R10 , R22) ) by FINSEQ_1:34
.= ( ( R19 [;] (R10 , R22) ) ^ ( <*> R7 ) ) by FINSEQ_1:34
.= ( ( R19 [;] (R10 , R22) ) ^ ( R19 [;] (R10 , ( <*> R6 )) ) ) by FINSEQ_2:79;
L143: S3[ ( <*> R6 ) ] by L142;
L144: (for R23 being (FinSequence of R6) holds S3[ R23 ]) from FINSEQ_2:sch 2(L143 , L139);
thus L145: thesis by L144;
end;
theorem
L146: (for R5 being non  empty set holds (for R6 being non  empty set holds (for R7 being non  empty set holds (for R10 being (Element of R5) holds (for R16 being (Element of R6) holds (for R19 being (Function of [: R5 , R6 :] , R7) holds (for R20 being (FinSequence of R5) holds ( R19 [:] (( R20 ^ <* R10 *> ) , R16) ) = ( ( R19 [:] (R20 , R16) ) ^ <* ( R19 . (R10 , R16) ) *> ))))))))
proof
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R10 being (Element of R5);
let R16 being (Element of R6);
let R19 being (Function of [: R5 , R6 :] , R7);
let R20 being (FinSequence of R5);
set D22 = ( R20 ^ <* R10 *> );
set D23 = ( R19 [:] (R20 , R16) );
set D24 = ( R19 [:] (D22 , R16) );
set D25 = ( D23 ^ <* ( R19 . (R10 , R16) ) *> );
set D26 = ( len R20 );
L147: ( len D23 ) = D26 by FINSEQ_2:84;
L148: ( len D22 ) = ( D26 + 1 ) by FINSEQ_2:16;
L149: ( len D24 ) = ( D26 + 1 ) by L148 , FINSEQ_2:84;
L150: ( dom D24 ) = ( Seg ( D26 + 1 ) ) by L149 , FINSEQ_1:def 3;
L151:
now
let C30 being Nat;
assume L152: C30 in ( dom D24 );
L153:
now
per cases  by L150 , L152 , FINSEQ_2:7;
suppose L154: C30 in ( Seg D26 );

L155: C30 in ( dom D23 ) by L154 , L147 , FINSEQ_1:def 3;
L156: ( Seg ( len R20 ) ) = ( dom R20 ) by FINSEQ_1:def 3;
thus L157: ( R19 . (( D22 . C30 ) , R16) ) = ( R19 . (( R20 . C30 ) , R16) ) by L156 , L154 , FINSEQ_1:def 7
.= ( D23 . C30 ) by L155 , FUNCOP_1:27
.= ( D25 . C30 ) by L155 , FINSEQ_1:def 7;
end;
suppose L158: C30 = ( D26 + 1 );

thus L159: ( R19 . (( D22 . C30 ) , R16) ) = ( R19 . (R10 , R16) ) by L158 , FINSEQ_1:42
.= ( D25 . C30 ) by L147 , L158 , FINSEQ_1:42;
end;
end;
thus L161: ( D24 . C30 ) = ( D25 . C30 ) by L153 , L152 , FUNCOP_1:27;
end;
L162: ( len D25 ) = ( ( len D23 ) + 1 ) by FINSEQ_2:16;
thus L163: thesis by L162 , L147 , L149 , L151 , FINSEQ_2:9;
end;
theorem
L164: (for R5 being non  empty set holds (for R6 being non  empty set holds (for R7 being non  empty set holds (for R16 being (Element of R6) holds (for R19 being (Function of [: R5 , R6 :] , R7) holds (for R20 being (FinSequence of R5) holds (for R21 being (FinSequence of R5) holds ( R19 [:] (( R20 ^ R21 ) , R16) ) = ( ( R19 [:] (R20 , R16) ) ^ ( R19 [:] (R21 , R16) ) ))))))))
proof
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R16 being (Element of R6);
let R19 being (Function of [: R5 , R6 :] , R7);
let R20 being (FinSequence of R5);
let R21 being (FinSequence of R5);
defpred S4[ (FinSequence of R5) ] means ( R19 [:] (( R20 ^ $1 ) , R16) ) = ( ( R19 [:] (R20 , R16) ) ^ ( R19 [:] ($1 , R16) ) );
L165: (for R21 being (FinSequence of R5) holds (for R10 being (Element of R5) holds (S4[ R21 ] implies S4[ ( R21 ^ <* R10 *> ) ])))
proof
let R21 being (FinSequence of R5);
let R10 being (Element of R5);
assume that
L166: ( R19 [:] (( R20 ^ R21 ) , R16) ) = ( ( R19 [:] (R20 , R16) ) ^ ( R19 [:] (R21 , R16) ) );
thus L167: ( R19 [:] (( R20 ^ ( R21 ^ <* R10 *> ) ) , R16) ) = ( R19 [:] (( ( R20 ^ R21 ) ^ <* R10 *> ) , R16) ) by FINSEQ_1:32
.= ( ( R19 [:] (( R20 ^ R21 ) , R16) ) ^ <* ( R19 . (R10 , R16) ) *> ) by L146
.= ( ( R19 [:] (R20 , R16) ) ^ ( ( R19 [:] (R21 , R16) ) ^ <* ( R19 . (R10 , R16) ) *> ) ) by L166 , FINSEQ_1:32
.= ( ( R19 [:] (R20 , R16) ) ^ ( R19 [:] (( R21 ^ <* R10 *> ) , R16) ) ) by L146;
end;
L168: ( R19 [:] (( R20 ^ ( <*> R5 ) ) , R16) ) = ( R19 [:] (R20 , R16) ) by FINSEQ_1:34
.= ( ( R19 [:] (R20 , R16) ) ^ ( <*> R7 ) ) by FINSEQ_1:34
.= ( ( R19 [:] (R20 , R16) ) ^ ( R19 [:] (( <*> R5 ) , R16) ) ) by FINSEQ_2:85;
L169: S4[ ( <*> R5 ) ] by L168;
L170: (for R21 being (FinSequence of R5) holds S4[ R21 ]) from FINSEQ_2:sch 2(L169 , L165);
thus L171: thesis by L170;
end;
theorem
L172: (for R5 being non  empty set holds (for R7 being non  empty set holds (for R10 being (Element of R5) holds (for R17 being Nat holds (for B19 being (Function of R5 , R7) holds ( B19 * ( R17 |-> R10 ) ) = ( R17 |-> ( B19 . R10 ) ))))))
proof
let R5 being non  empty set;
let R7 being non  empty set;
let R10 being (Element of R5);
let R17 being Nat;
let C31 being (Function of R5 , R7);
L173: R10 in R5;
L174: R10 in ( dom C31 ) by L173 , FUNCT_2:def 1;
thus L175: thesis by L174 , FUNCOP_1:17;
end;
theorem
L176: (for R5 being non  empty set holds (for R6 being non  empty set holds (for R7 being non  empty set holds (for R10 being (Element of R5) holds (for R16 being (Element of R6) holds (for R17 being Nat holds (for R19 being (Function of [: R5 , R6 :] , R7) holds ( R19 .: (( R17 |-> R10 ) , ( R17 |-> R16 )) ) = ( R17 |-> ( R19 . (R10 , R16) ) ))))))))
proof
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R10 being (Element of R5);
let R16 being (Element of R6);
let R17 being Nat;
let R19 being (Function of [: R5 , R6 :] , R7);
L177: [ R10 , R16 ] in [: R5 , R6 :] by ZFMISC_1:def 2;
L178: [ R10 , R16 ] in ( dom R19 ) by L177 , FUNCT_2:def 1;
thus L179: thesis by L178 , L33;
end;
theorem
L180: (for R5 being non  empty set holds (for R6 being non  empty set holds (for R7 being non  empty set holds (for R10 being (Element of R5) holds (for R16 being (Element of R6) holds (for R17 being Nat holds (for R19 being (Function of [: R5 , R6 :] , R7) holds ( R19 [;] (R10 , ( R17 |-> R16 )) ) = ( R17 |-> ( R19 . (R10 , R16) ) ))))))))
proof
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R10 being (Element of R5);
let R16 being (Element of R6);
let R17 being Nat;
let R19 being (Function of [: R5 , R6 :] , R7);
thus L181: ( R19 [;] (R10 , ( R17 |-> R16 )) ) = ( R19 .: (( R17 |-> R10 ) , ( R17 |-> R16 )) ) by FUNCOP_1:13
.= ( R17 |-> ( R19 . (R10 , R16) ) ) by L176;
end;
theorem
L182: (for R5 being non  empty set holds (for R6 being non  empty set holds (for R7 being non  empty set holds (for R10 being (Element of R5) holds (for R16 being (Element of R6) holds (for R17 being Nat holds (for R19 being (Function of [: R5 , R6 :] , R7) holds ( R19 [:] (( R17 |-> R10 ) , R16) ) = ( R17 |-> ( R19 . (R10 , R16) ) ))))))))
proof
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R10 being (Element of R5);
let R16 being (Element of R6);
let R17 being Nat;
let R19 being (Function of [: R5 , R6 :] , R7);
thus L183: ( R19 [:] (( R17 |-> R10 ) , R16) ) = ( R19 .: (( R17 |-> R10 ) , ( R17 |-> R16 )) ) by FUNCOP_1:13
.= ( R17 |-> ( R19 . (R10 , R16) ) ) by L176;
end;
theorem
L184: (for R5 being non  empty set holds (for R6 being non  empty set holds (for R7 being non  empty set holds (for R10 being (Element of R5) holds (for R17 being Nat holds (for R19 being (Function of [: R5 , R6 :] , R7) holds (for R31 being (Tuple of R17 , R6) holds ( R19 .: (( R17 |-> R10 ) , R31) ) = ( R19 [;] (R10 , R31) ))))))))
proof
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R10 being (Element of R5);
let R17 being Nat;
let R19 being (Function of [: R5 , R6 :] , R7);
let R31 being (Tuple of R17 , R6);
L185: ( dom R31 ) = ( Seg ( len R31 ) ) by FINSEQ_1:def 3
.= ( Seg R17 ) by CARD_1:def 7;
thus L186: thesis by L185;
end;
theorem
L187: (for R5 being non  empty set holds (for R6 being non  empty set holds (for R7 being non  empty set holds (for R10 being (Element of R5) holds (for R17 being Nat holds (for R19 being (Function of [: R5 , R6 :] , R7) holds (for R27 being (Tuple of R17 , R5) holds ( R19 .: (R27 , ( R17 |-> R10 )) ) = ( R19 [:] (R27 , R10) ))))))))
proof
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R10 being (Element of R5);
let R17 being Nat;
let R19 being (Function of [: R5 , R6 :] , R7);
let R27 being (Tuple of R17 , R5);
L188: ( dom R27 ) = ( Seg ( len R27 ) ) by FINSEQ_1:def 3
.= ( Seg R17 ) by CARD_1:def 7;
thus L189: thesis by L188;
end;
theorem
L190: (for R5 being non  empty set holds (for R6 being non  empty set holds (for R7 being non  empty set holds (for R10 being (Element of R5) holds (for R17 being Nat holds (for R19 being (Function of [: R5 , R6 :] , R7) holds (for R31 being (Tuple of R17 , R6) holds ( R19 [;] (R10 , R31) ) = ( ( R19 [;] (R10 , ( id R6 )) ) * R31 ))))))))
proof
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R10 being (Element of R5);
let R17 being Nat;
let R19 being (Function of [: R5 , R6 :] , R7);
let R31 being (Tuple of R17 , R6);
L191: ( rng R31 ) c= R6;
thus L192: ( R19 [;] (R10 , R31) ) = ( R19 [;] (R10 , ( ( id R6 ) * R31 )) ) by L191 , RELAT_1:53
.= ( ( R19 [;] (R10 , ( id R6 )) ) * R31 ) by FUNCOP_1:34;
end;
theorem
L193: (for R5 being non  empty set holds (for R6 being non  empty set holds (for R7 being non  empty set holds (for R10 being (Element of R5) holds (for R17 being Nat holds (for R19 being (Function of [: R5 , R6 :] , R7) holds (for R27 being (Tuple of R17 , R5) holds ( R19 [:] (R27 , R10) ) = ( ( R19 [:] (( id R5 ) , R10) ) * R27 ))))))))
proof
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R10 being (Element of R5);
let R17 being Nat;
let R19 being (Function of [: R5 , R6 :] , R7);
let R27 being (Tuple of R17 , R5);
L194: ( rng R27 ) c= R5;
thus L195: ( R19 [:] (R27 , R10) ) = ( R19 [:] (( ( id R5 ) * R27 ) , R10) ) by L194 , RELAT_1:53
.= ( ( R19 [:] (( id R5 ) , R10) ) * R27 ) by FUNCOP_1:29;
end;
L196: (for R5 being non  empty set holds (for R17 being Nat holds (for R27 being (Tuple of R17 , R5) holds R27 is (Function of ( Seg R17 ) , R5))))
proof
let R5 being non  empty set;
let R17 being Nat;
let R27 being (Tuple of R17 , R5);
L197: ( len R27 ) = R17 by CARD_1:def 7;
L198: ( Seg R17 ) = ( dom R27 ) by L197 , FINSEQ_1:def 3;
thus L199: thesis by L198 , FINSEQ_2:26;
end;
theorem
L200: (for R3 being non  empty set holds (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R24 being (Function of R3 , R5) holds (for R25 being (Function of R3 , R5) holds (for R34 being (BinOp of R5) holds (R34 is  associative implies ( ( R34 [;] (R10 , ( id R5 )) ) * ( R34 .: (R24 , R25) ) ) = ( R34 .: (( ( R34 [;] (R10 , ( id R5 )) ) * R24 ) , R25) ))))))))
proof
let R3 being non  empty set;
let R5 being non  empty set;
let R10 being (Element of R5);
let R24 being (Function of R3 , R5);
let R25 being (Function of R3 , R5);
let R34 being (BinOp of R5);
assume L201: R34 is  associative;
L202:
now
let R8 being (Element of R3);
thus L203: ( ( ( R34 [;] (R10 , ( id R5 )) ) * ( R34 .: (R24 , R25) ) ) . R8 ) = ( ( R34 [;] (R10 , ( id R5 )) ) . ( ( R34 .: (R24 , R25) ) . R8 ) ) by FUNCT_2:15
.= ( ( R34 [;] (R10 , ( id R5 )) ) . ( R34 . (( R24 . R8 ) , ( R25 . R8 )) ) ) by FUNCOP_1:37
.= ( R34 . (R10 , ( ( id R5 ) . ( R34 . (( R24 . R8 ) , ( R25 . R8 )) ) )) ) by FUNCOP_1:53
.= ( R34 . (R10 , ( R34 . (( R24 . R8 ) , ( R25 . R8 )) )) ) by FUNCT_1:18
.= ( R34 . (( R34 . (R10 , ( R24 . R8 )) ) , ( R25 . R8 )) ) by L201 , BINOP_1:def 3
.= ( R34 . (( ( R34 [;] (R10 , R24) ) . R8 ) , ( R25 . R8 )) ) by FUNCOP_1:53
.= ( R34 . (( ( ( R34 [;] (R10 , ( id R5 )) ) * R24 ) . R8 ) , ( R25 . R8 )) ) by FUNCOP_1:55
.= ( ( R34 .: (( ( R34 [;] (R10 , ( id R5 )) ) * R24 ) , R25) ) . R8 ) by FUNCOP_1:37;
end;
thus L204: thesis by L202 , FUNCT_2:63;
end;
theorem
L205: (for R3 being non  empty set holds (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R24 being (Function of R3 , R5) holds (for R25 being (Function of R3 , R5) holds (for R34 being (BinOp of R5) holds (R34 is  associative implies ( ( R34 [:] (( id R5 ) , R10) ) * ( R34 .: (R24 , R25) ) ) = ( R34 .: (R24 , ( ( R34 [:] (( id R5 ) , R10) ) * R25 )) ))))))))
proof
let R3 being non  empty set;
let R5 being non  empty set;
let R10 being (Element of R5);
let R24 being (Function of R3 , R5);
let R25 being (Function of R3 , R5);
let R34 being (BinOp of R5);
assume L206: R34 is  associative;
L207:
now
let R8 being (Element of R3);
thus L208: ( ( ( R34 [:] (( id R5 ) , R10) ) * ( R34 .: (R24 , R25) ) ) . R8 ) = ( ( R34 [:] (( id R5 ) , R10) ) . ( ( R34 .: (R24 , R25) ) . R8 ) ) by FUNCT_2:15
.= ( ( R34 [:] (( id R5 ) , R10) ) . ( R34 . (( R24 . R8 ) , ( R25 . R8 )) ) ) by FUNCOP_1:37
.= ( R34 . (( ( id R5 ) . ( R34 . (( R24 . R8 ) , ( R25 . R8 )) ) ) , R10) ) by FUNCOP_1:48
.= ( R34 . (( R34 . (( R24 . R8 ) , ( R25 . R8 )) ) , R10) ) by FUNCT_1:18
.= ( R34 . (( R24 . R8 ) , ( R34 . (( R25 . R8 ) , R10) )) ) by L206 , BINOP_1:def 3
.= ( R34 . (( R24 . R8 ) , ( ( R34 [:] (R25 , R10) ) . R8 )) ) by FUNCOP_1:48
.= ( R34 . (( R24 . R8 ) , ( ( ( R34 [:] (( id R5 ) , R10) ) * R25 ) . R8 )) ) by FUNCOP_1:50
.= ( ( R34 .: (R24 , ( ( R34 [:] (( id R5 ) , R10) ) * R25 )) ) . R8 ) by FUNCOP_1:37;
end;
thus L209: thesis by L207 , FUNCT_2:63;
end;
theorem
L210: (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R17 being Nat holds (for R28 being (Tuple of R17 , R5) holds (for R29 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (R34 is  associative implies ( ( R34 [;] (R10 , ( id R5 )) ) * ( R34 .: (R28 , R29) ) ) = ( R34 .: (( ( R34 [;] (R10 , ( id R5 )) ) * R28 ) , R29) ))))))))
proof
let R5 being non  empty set;
let R10 being (Element of R5);
let R17 being Nat;
let R28 being (Tuple of R17 , R5);
let R29 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
assume L211: R34 is  associative;
per cases ;
suppose L212: R17 = ( 0 );

L213: ( R34 .: (R28 , R29) ) = ( <*> R5 ) by L212 , L66;
L214: ( ( R34 [;] (R10 , ( id R5 )) ) * ( R34 .: (R28 , R29) ) ) = ( <*> R5 ) by L213;
L215: R29 = ( <*> R5 ) by L212;
thus L216: thesis by L215 , L214 , FINSEQ_2:73;
end;
suppose L217: R17 <> ( 0 );

reconsider D27 = ( Seg R17 ) as non  empty set by L217;
L218: (R28 is (Function of D27 , R5) & R29 is (Function of D27 , R5)) by L196;
thus L219: thesis by L218 , L211 , L200;
end;
end;
theorem
L221: (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R17 being Nat holds (for R28 being (Tuple of R17 , R5) holds (for R29 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (R34 is  associative implies ( ( R34 [:] (( id R5 ) , R10) ) * ( R34 .: (R28 , R29) ) ) = ( R34 .: (R28 , ( ( R34 [:] (( id R5 ) , R10) ) * R29 )) ))))))))
proof
let R5 being non  empty set;
let R10 being (Element of R5);
let R17 being Nat;
let R28 being (Tuple of R17 , R5);
let R29 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
assume L222: R34 is  associative;
per cases ;
suppose L223: R17 = ( 0 );

L224: ( R34 .: (R28 , R29) ) = ( <*> R5 ) by L223 , L66;
L225: ( ( R34 [:] (( id R5 ) , R10) ) * ( R34 .: (R28 , R29) ) ) = ( <*> R5 ) by L224;
L226: R28 = ( <*> R5 ) by L223;
thus L227: thesis by L226 , L225 , FINSEQ_2:73;
end;
suppose L228: R17 <> ( 0 );

reconsider D28 = ( Seg R17 ) as non  empty set by L228;
L229: (R28 is (Function of D28 , R5) & R29 is (Function of D28 , R5)) by L196;
thus L230: thesis by L229 , L222 , L205;
end;
end;
theorem
L232: (for R5 being non  empty set holds (for R17 being Nat holds (for R28 being (Tuple of R17 , R5) holds (for R29 being (Tuple of R17 , R5) holds (for R30 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (R34 is  associative implies ( R34 .: (( R34 .: (R28 , R29) ) , R30) ) = ( R34 .: (R28 , ( R34 .: (R29 , R30) )) ))))))))
proof
let R5 being non  empty set;
let R17 being Nat;
let R28 being (Tuple of R17 , R5);
let R29 being (Tuple of R17 , R5);
let R30 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
assume L233: R34 is  associative;
per cases ;
suppose L234: R17 = ( 0 );

L235: ( R34 .: (R28 , R29) ) = ( <*> R5 ) by L234 , L66;
L236: ( R34 .: (( R34 .: (R28 , R29) ) , R30) ) = ( <*> R5 ) by L235 , FINSEQ_2:73;
L237: ( R34 .: (R29 , R30) ) = ( <*> R5 ) by L234 , L66;
thus L238: thesis by L237 , L236 , FINSEQ_2:73;
end;
suppose L239: R17 <> ( 0 );

reconsider D29 = ( Seg R17 ) as non  empty set by L239;
L240: R30 is (Function of D29 , R5) by L196;
L241: (R28 is (Function of D29 , R5) & R29 is (Function of D29 , R5)) by L196;
thus L242: thesis by L241 , L233 , L240 , FUNCOP_1:61;
end;
end;
theorem
L244: (for R5 being non  empty set holds (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds (for R17 being Nat holds (for R27 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (R34 is  associative implies ( R34 [:] (( R34 [;] (R11 , R27) ) , R12) ) = ( R34 [;] (R11 , ( R34 [:] (R27 , R12) )) ))))))))
proof
let R5 being non  empty set;
let R11 being (Element of R5);
let R12 being (Element of R5);
let R17 being Nat;
let R27 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
assume L245: R34 is  associative;
per cases ;
suppose L246: R17 = ( 0 );

L247: ( R34 [;] (R11 , R27) ) = ( <*> R5 ) by L246 , L69;
L248: ( R34 [:] (( R34 [;] (R11 , R27) ) , R12) ) = ( <*> R5 ) by L247 , FINSEQ_2:85;
L249: ( R34 [:] (R27 , R12) ) = ( <*> R5 ) by L246 , L72;
thus L250: thesis by L249 , L248 , FINSEQ_2:79;
end;
suppose L251: R17 <> ( 0 );

reconsider D30 = ( Seg R17 ) as non  empty set by L251;
L252: R27 is (Function of D30 , R5) by L196;
thus L253: thesis by L252 , L245 , FUNCOP_1:59;
end;
end;
theorem
L255: (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R17 being Nat holds (for R28 being (Tuple of R17 , R5) holds (for R29 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (R34 is  associative implies ( R34 .: (( R34 [:] (R28 , R10) ) , R29) ) = ( R34 .: (R28 , ( R34 [;] (R10 , R29) )) ))))))))
proof
let R5 being non  empty set;
let R10 being (Element of R5);
let R17 being Nat;
let R28 being (Tuple of R17 , R5);
let R29 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
assume L256: R34 is  associative;
per cases ;
suppose L257: R17 = ( 0 );

L258: ( R34 [:] (R28 , R10) ) = ( <*> R5 ) by L257 , L72;
L259: ( R34 .: (( R34 [:] (R28 , R10) ) , R29) ) = ( <*> R5 ) by L258 , FINSEQ_2:73;
L260: ( R34 [;] (R10 , R29) ) = ( <*> R5 ) by L257 , L69;
thus L261: thesis by L260 , L259 , FINSEQ_2:73;
end;
suppose L262: R17 <> ( 0 );

reconsider D31 = ( Seg R17 ) as non  empty set by L262;
L263: (R28 is (Function of D31 , R5) & R29 is (Function of D31 , R5)) by L196;
thus L264: thesis by L263 , L256 , FUNCOP_1:60;
end;
end;
theorem
L266: (for R5 being non  empty set holds (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds (for R17 being Nat holds (for R27 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (R34 is  associative implies ( R34 [;] (( R34 . (R11 , R12) ) , R27) ) = ( R34 [;] (R11 , ( R34 [;] (R12 , R27) )) ))))))))
proof
let R5 being non  empty set;
let R11 being (Element of R5);
let R12 being (Element of R5);
let R17 being Nat;
let R27 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
assume L267: R34 is  associative;
per cases ;
suppose L268: R17 = ( 0 );

L269: (R27 = ( <*> R5 ) & ( R34 [;] (R12 , R27) ) = ( <*> R5 )) by L268 , L69;
thus L270: thesis by L269;
end;
suppose L271: R17 <> ( 0 );

reconsider D32 = ( Seg R17 ) as non  empty set by L271;
L272: R27 is (Function of D32 , R5) by L196;
thus L273: thesis by L272 , L267 , FUNCOP_1:62;
end;
end;
theorem
L275: (for R5 being non  empty set holds (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds (for R17 being Nat holds (for R27 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (R34 is  associative implies ( R34 [:] (R27 , ( R34 . (R11 , R12) )) ) = ( R34 [:] (( R34 [:] (R27 , R11) ) , R12) ))))))))
proof
let R5 being non  empty set;
let R11 being (Element of R5);
let R12 being (Element of R5);
let R17 being Nat;
let R27 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
assume L276: R34 is  associative;
per cases ;
suppose L277: R17 = ( 0 );

L278: (R27 = ( <*> R5 ) & ( R34 [:] (R27 , R11) ) = ( <*> R5 )) by L277 , L72;
thus L279: thesis by L278;
end;
suppose L280: R17 <> ( 0 );

reconsider D33 = ( Seg R17 ) as non  empty set by L280;
L281: R27 is (Function of D33 , R5) by L196;
thus L282: thesis by L281 , L276 , FUNCOP_1:63;
end;
end;
theorem
L284: (for R5 being non  empty set holds (for R17 being Nat holds (for R28 being (Tuple of R17 , R5) holds (for R29 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (R34 is  commutative implies ( R34 .: (R28 , R29) ) = ( R34 .: (R29 , R28) )))))))
proof
let R5 being non  empty set;
let R17 being Nat;
let R28 being (Tuple of R17 , R5);
let R29 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
assume L285: R34 is  commutative;
per cases ;
suppose L286: R17 = ( 0 );

L287: ( R34 .: (R28 , R29) ) = ( <*> R5 ) by L286 , L66;
thus L288: thesis by L287 , L286 , L66;
end;
suppose L289: R17 <> ( 0 );

reconsider D34 = ( Seg R17 ) as non  empty set by L289;
L290: (R28 is (Function of D34 , R5) & R29 is (Function of D34 , R5)) by L196;
thus L291: thesis by L290 , L285 , FUNCOP_1:65;
end;
end;
theorem
L293: (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R17 being Nat holds (for R27 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (R34 is  commutative implies ( R34 [;] (R10 , R27) ) = ( R34 [:] (R27 , R10) )))))))
proof
let R5 being non  empty set;
let R10 being (Element of R5);
let R17 being Nat;
let R27 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
assume L294: R34 is  commutative;
per cases ;
suppose L295: R17 = ( 0 );

L296: ( R34 [;] (R10 , R27) ) = ( <*> R5 ) by L295 , L69;
thus L297: thesis by L296 , L295 , L72;
end;
suppose L298: R17 <> ( 0 );

reconsider D35 = ( Seg R17 ) as non  empty set by L298;
L299: R27 is (Function of D35 , R5) by L196;
thus L300: thesis by L299 , L294 , FUNCOP_1:64;
end;
end;
theorem
L302: (for R3 being non  empty set holds (for R5 being non  empty set holds (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds (for R24 being (Function of R3 , R5) holds (for R34 being (BinOp of R5) holds (for R35 being (BinOp of R5) holds (R34 is_distributive_wrt R35 implies ( R34 [;] (( R35 . (R11 , R12) ) , R24) ) = ( R35 .: (( R34 [;] (R11 , R24) ) , ( R34 [;] (R12 , R24) )) )))))))))
proof
let R3 being non  empty set;
let R5 being non  empty set;
let R11 being (Element of R5);
let R12 being (Element of R5);
let R24 being (Function of R3 , R5);
let R34 being (BinOp of R5);
let R35 being (BinOp of R5);
assume L303: R34 is_distributive_wrt R35;
L304:
now
let R8 being (Element of R3);
thus L305: ( ( R34 [;] (( R35 . (R11 , R12) ) , R24) ) . R8 ) = ( R34 . (( R35 . (R11 , R12) ) , ( R24 . R8 )) ) by FUNCOP_1:53
.= ( R35 . (( R34 . (R11 , ( R24 . R8 )) ) , ( R34 . (R12 , ( R24 . R8 )) )) ) by L303 , BINOP_1:11
.= ( R35 . (( ( R34 [;] (R11 , R24) ) . R8 ) , ( R34 . (R12 , ( R24 . R8 )) )) ) by FUNCOP_1:53
.= ( R35 . (( ( R34 [;] (R11 , R24) ) . R8 ) , ( ( R34 [;] (R12 , R24) ) . R8 )) ) by FUNCOP_1:53
.= ( ( R35 .: (( R34 [;] (R11 , R24) ) , ( R34 [;] (R12 , R24) )) ) . R8 ) by FUNCOP_1:37;
end;
thus L306: thesis by L304 , FUNCT_2:63;
end;
theorem
L307: (for R3 being non  empty set holds (for R5 being non  empty set holds (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds (for R24 being (Function of R3 , R5) holds (for R34 being (BinOp of R5) holds (for R35 being (BinOp of R5) holds (R34 is_distributive_wrt R35 implies ( R34 [:] (R24 , ( R35 . (R11 , R12) )) ) = ( R35 .: (( R34 [:] (R24 , R11) ) , ( R34 [:] (R24 , R12) )) )))))))))
proof
let R3 being non  empty set;
let R5 being non  empty set;
let R11 being (Element of R5);
let R12 being (Element of R5);
let R24 being (Function of R3 , R5);
let R34 being (BinOp of R5);
let R35 being (BinOp of R5);
assume L308: R34 is_distributive_wrt R35;
L309:
now
let R8 being (Element of R3);
thus L310: ( ( R34 [:] (R24 , ( R35 . (R11 , R12) )) ) . R8 ) = ( R34 . (( R24 . R8 ) , ( R35 . (R11 , R12) )) ) by FUNCOP_1:48
.= ( R35 . (( R34 . (( R24 . R8 ) , R11) ) , ( R34 . (( R24 . R8 ) , R12) )) ) by L308 , BINOP_1:11
.= ( R35 . (( ( R34 [:] (R24 , R11) ) . R8 ) , ( R34 . (( R24 . R8 ) , R12) )) ) by FUNCOP_1:48
.= ( R35 . (( ( R34 [:] (R24 , R11) ) . R8 ) , ( ( R34 [:] (R24 , R12) ) . R8 )) ) by FUNCOP_1:48
.= ( ( R35 .: (( R34 [:] (R24 , R11) ) , ( R34 [:] (R24 , R12) )) ) . R8 ) by FUNCOP_1:37;
end;
thus L311: thesis by L309 , FUNCT_2:63;
end;
theorem
L312: (for R3 being non  empty set holds (for R5 being non  empty set holds (for R7 being non  empty set holds (for R24 being (Function of R3 , R5) holds (for R25 being (Function of R3 , R5) holds (for R26 being (Function of R5 , R7) holds (for R34 being (BinOp of R5) holds (for R37 being (BinOp of R7) holds ((for R11 being (Element of R5) holds (for R12 being (Element of R5) holds ( R26 . ( R34 . (R11 , R12) ) ) = ( R37 . (( R26 . R11 ) , ( R26 . R12 )) ))) implies ( R26 * ( R34 .: (R24 , R25) ) ) = ( R37 .: (( R26 * R24 ) , ( R26 * R25 )) ))))))))))
proof
let R3 being non  empty set;
let R5 being non  empty set;
let R7 being non  empty set;
let R24 being (Function of R3 , R5);
let R25 being (Function of R3 , R5);
let R26 being (Function of R5 , R7);
let R34 being (BinOp of R5);
let R37 being (BinOp of R7);
assume L313: (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds ( R26 . ( R34 . (R11 , R12) ) ) = ( R37 . (( R26 . R11 ) , ( R26 . R12 )) )));
L314:
now
let R8 being (Element of R3);
thus L315: ( ( R26 * ( R34 .: (R24 , R25) ) ) . R8 ) = ( R26 . ( ( R34 .: (R24 , R25) ) . R8 ) ) by FUNCT_2:15
.= ( R26 . ( R34 . (( R24 . R8 ) , ( R25 . R8 )) ) ) by FUNCOP_1:37
.= ( R37 . (( R26 . ( R24 . R8 ) ) , ( R26 . ( R25 . R8 ) )) ) by L313
.= ( R37 . (( ( R26 * R24 ) . R8 ) , ( R26 . ( R25 . R8 ) )) ) by FUNCT_2:15
.= ( R37 . (( ( R26 * R24 ) . R8 ) , ( ( R26 * R25 ) . R8 )) ) by FUNCT_2:15
.= ( ( R37 .: (( R26 * R24 ) , ( R26 * R25 )) ) . R8 ) by FUNCOP_1:37;
end;
thus L316: thesis by L314 , FUNCT_2:63;
end;
theorem
L317: (for R3 being non  empty set holds (for R5 being non  empty set holds (for R7 being non  empty set holds (for R10 being (Element of R5) holds (for R24 being (Function of R3 , R5) holds (for R26 being (Function of R5 , R7) holds (for R34 being (BinOp of R5) holds (for R37 being (BinOp of R7) holds ((for R11 being (Element of R5) holds (for R12 being (Element of R5) holds ( R26 . ( R34 . (R11 , R12) ) ) = ( R37 . (( R26 . R11 ) , ( R26 . R12 )) ))) implies ( R26 * ( R34 [;] (R10 , R24) ) ) = ( R37 [;] (( R26 . R10 ) , ( R26 * R24 )) ))))))))))
proof
let R3 being non  empty set;
let R5 being non  empty set;
let R7 being non  empty set;
let R10 being (Element of R5);
let R24 being (Function of R3 , R5);
let R26 being (Function of R5 , R7);
let R34 being (BinOp of R5);
let R37 being (BinOp of R7);
assume L318: (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds ( R26 . ( R34 . (R11 , R12) ) ) = ( R37 . (( R26 . R11 ) , ( R26 . R12 )) )));
reconsider D36 = ( R3 --> R10 ) as (Function of R3 , R5);
L319: (( dom R26 ) = R5 & ( dom ( R26 * R24 ) ) = R3) by FUNCT_2:def 1;
thus L320: ( R26 * ( R34 [;] (R10 , R24) ) ) = ( R26 * ( R34 .: (D36 , R24) ) ) by FUNCT_2:def 1
.= ( R37 .: (( R26 * D36 ) , ( R26 * R24 )) ) by L318 , L312
.= ( R37 [;] (( R26 . R10 ) , ( R26 * R24 )) ) by L319 , FUNCOP_1:17;
end;
theorem
L321: (for R3 being non  empty set holds (for R5 being non  empty set holds (for R7 being non  empty set holds (for R10 being (Element of R5) holds (for R24 being (Function of R3 , R5) holds (for R26 being (Function of R5 , R7) holds (for R34 being (BinOp of R5) holds (for R37 being (BinOp of R7) holds ((for R11 being (Element of R5) holds (for R12 being (Element of R5) holds ( R26 . ( R34 . (R11 , R12) ) ) = ( R37 . (( R26 . R11 ) , ( R26 . R12 )) ))) implies ( R26 * ( R34 [:] (R24 , R10) ) ) = ( R37 [:] (( R26 * R24 ) , ( R26 . R10 )) ))))))))))
proof
let R3 being non  empty set;
let R5 being non  empty set;
let R7 being non  empty set;
let R10 being (Element of R5);
let R24 being (Function of R3 , R5);
let R26 being (Function of R5 , R7);
let R34 being (BinOp of R5);
let R37 being (BinOp of R7);
assume L322: (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds ( R26 . ( R34 . (R11 , R12) ) ) = ( R37 . (( R26 . R11 ) , ( R26 . R12 )) )));
reconsider D37 = ( R3 --> R10 ) as (Function of R3 , R5);
L323: (( dom R26 ) = R5 & ( dom ( R26 * R24 ) ) = R3) by FUNCT_2:def 1;
thus L324: ( R26 * ( R34 [:] (R24 , R10) ) ) = ( R26 * ( R34 .: (R24 , D37) ) ) by FUNCT_2:def 1
.= ( R37 .: (( R26 * R24 ) , ( R26 * D37 )) ) by L322 , L312
.= ( R37 [:] (( R26 * R24 ) , ( R26 . R10 )) ) by L323 , FUNCOP_1:17;
end;
theorem
L325: (for R3 being non  empty set holds (for R5 being non  empty set holds (for R24 being (Function of R3 , R5) holds (for R25 being (Function of R3 , R5) holds (for R34 being (BinOp of R5) holds (for R36 being (UnOp of R5) holds (R36 is_distributive_wrt R34 implies ( R36 * ( R34 .: (R24 , R25) ) ) = ( R34 .: (( R36 * R24 ) , ( R36 * R25 )) ))))))))
proof
let R3 being non  empty set;
let R5 being non  empty set;
let R24 being (Function of R3 , R5);
let R25 being (Function of R3 , R5);
let R34 being (BinOp of R5);
let R36 being (UnOp of R5);
assume L326: (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds ( R36 . ( R34 . (R11 , R12) ) ) = ( R34 . (( R36 . R11 ) , ( R36 . R12 )) )));
thus L327: thesis by L326 , L312;
end;
theorem
L328: (for R3 being non  empty set holds (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R24 being (Function of R3 , R5) holds (for R34 being (BinOp of R5) holds (for R36 being (UnOp of R5) holds (R36 is_distributive_wrt R34 implies ( R36 * ( R34 [;] (R10 , R24) ) ) = ( R34 [;] (( R36 . R10 ) , ( R36 * R24 )) ))))))))
proof
let R3 being non  empty set;
let R5 being non  empty set;
let R10 being (Element of R5);
let R24 being (Function of R3 , R5);
let R34 being (BinOp of R5);
let R36 being (UnOp of R5);
assume L329: (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds ( R36 . ( R34 . (R11 , R12) ) ) = ( R34 . (( R36 . R11 ) , ( R36 . R12 )) )));
thus L330: thesis by L329 , L317;
end;
theorem
L331: (for R3 being non  empty set holds (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R24 being (Function of R3 , R5) holds (for R34 being (BinOp of R5) holds (for R36 being (UnOp of R5) holds (R36 is_distributive_wrt R34 implies ( R36 * ( R34 [:] (R24 , R10) ) ) = ( R34 [:] (( R36 * R24 ) , ( R36 . R10 )) ))))))))
proof
let R3 being non  empty set;
let R5 being non  empty set;
let R10 being (Element of R5);
let R24 being (Function of R3 , R5);
let R34 being (BinOp of R5);
let R36 being (UnOp of R5);
assume L332: (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds ( R36 . ( R34 . (R11 , R12) ) ) = ( R34 . (( R36 . R11 ) , ( R36 . R12 )) )));
thus L333: thesis by L332 , L321;
end;
theorem
L334: (for R3 being non  empty set holds (for R5 being non  empty set holds (for R24 being (Function of R3 , R5) holds (for R34 being (BinOp of R5) holds (R34 is  having_a_unity implies (( R34 .: (( R3 --> ( the_unity_wrt R34 ) ) , R24) ) = R24 & ( R34 .: (R24 , ( R3 --> ( the_unity_wrt R34 ) )) ) = R24))))))
proof
let R3 being non  empty set;
let R5 being non  empty set;
let R24 being (Function of R3 , R5);
let R34 being (BinOp of R5);
set D38 = ( the_unity_wrt R34 );
reconsider D39 = ( R3 --> D38 ) as (Function of R3 , R5);
assume L335: R34 is  having_a_unity;
L336:
now
let R8 being (Element of R3);
thus L337: ( ( R34 .: (D39 , R24) ) . R8 ) = ( R34 . (( D39 . R8 ) , ( R24 . R8 )) ) by FUNCOP_1:37
.= ( R34 . (D38 , ( R24 . R8 )) ) by FUNCOP_1:7
.= ( R24 . R8 ) by L335 , SETWISEO:15;
end;
thus L338: ( R34 .: (( R3 --> D38 ) , R24) ) = R24 by L336 , FUNCT_2:63;
L339:
now
let R8 being (Element of R3);
thus L340: ( ( R34 .: (R24 , D39) ) . R8 ) = ( R34 . (( R24 . R8 ) , ( D39 . R8 )) ) by FUNCOP_1:37
.= ( R34 . (( R24 . R8 ) , D38) ) by FUNCOP_1:7
.= ( R24 . R8 ) by L335 , SETWISEO:15;
end;
thus L341: thesis by L339 , FUNCT_2:63;
end;
theorem
L342: (for R3 being non  empty set holds (for R5 being non  empty set holds (for R24 being (Function of R3 , R5) holds (for R34 being (BinOp of R5) holds (R34 is  having_a_unity implies ( R34 [;] (( the_unity_wrt R34 ) , R24) ) = R24)))))
proof
let R3 being non  empty set;
let R5 being non  empty set;
let R24 being (Function of R3 , R5);
let R34 being (BinOp of R5);
set D40 = ( the_unity_wrt R34 );
assume L343: R34 is  having_a_unity;
L344:
now
let R8 being (Element of R3);
thus L345: ( ( R34 [;] (D40 , R24) ) . R8 ) = ( R34 . (D40 , ( R24 . R8 )) ) by FUNCOP_1:53
.= ( R24 . R8 ) by L343 , SETWISEO:15;
end;
thus L346: thesis by L344 , FUNCT_2:63;
end;
theorem
L347: (for R3 being non  empty set holds (for R5 being non  empty set holds (for R24 being (Function of R3 , R5) holds (for R34 being (BinOp of R5) holds (R34 is  having_a_unity implies ( R34 [:] (R24 , ( the_unity_wrt R34 )) ) = R24)))))
proof
let R3 being non  empty set;
let R5 being non  empty set;
let R24 being (Function of R3 , R5);
let R34 being (BinOp of R5);
set D41 = ( the_unity_wrt R34 );
assume L348: R34 is  having_a_unity;
L349:
now
let R8 being (Element of R3);
thus L350: ( ( R34 [:] (R24 , D41) ) . R8 ) = ( R34 . (( R24 . R8 ) , D41) ) by FUNCOP_1:48
.= ( R24 . R8 ) by L348 , SETWISEO:15;
end;
thus L351: thesis by L349 , FUNCT_2:63;
end;
theorem
L352: (for R5 being non  empty set holds (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds (for R17 being Nat holds (for R27 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (for R35 being (BinOp of R5) holds (R34 is_distributive_wrt R35 implies ( R34 [;] (( R35 . (R11 , R12) ) , R27) ) = ( R35 .: (( R34 [;] (R11 , R27) ) , ( R34 [;] (R12 , R27) )) )))))))))
proof
let R5 being non  empty set;
let R11 being (Element of R5);
let R12 being (Element of R5);
let R17 being Nat;
let R27 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
let R35 being (BinOp of R5);
assume L353: R34 is_distributive_wrt R35;
per cases ;
suppose L354: R17 = ( 0 );

L355: (( R34 [;] (R11 , R27) ) = ( <*> R5 ) & ( R34 [;] (( R35 . (R11 , R12) ) , R27) ) = ( <*> R5 )) by L354 , L69;
thus L356: thesis by L355 , FINSEQ_2:73;
end;
suppose L357: R17 <> ( 0 );

reconsider D42 = ( Seg R17 ) as non  empty set by L357;
L358: R27 is (Function of D42 , R5) by L196;
thus L359: thesis by L358 , L353 , L302;
end;
end;
theorem
L361: (for R5 being non  empty set holds (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds (for R17 being Nat holds (for R27 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (for R35 being (BinOp of R5) holds (R34 is_distributive_wrt R35 implies ( R34 [:] (R27 , ( R35 . (R11 , R12) )) ) = ( R35 .: (( R34 [:] (R27 , R11) ) , ( R34 [:] (R27 , R12) )) )))))))))
proof
let R5 being non  empty set;
let R11 being (Element of R5);
let R12 being (Element of R5);
let R17 being Nat;
let R27 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
let R35 being (BinOp of R5);
assume L362: R34 is_distributive_wrt R35;
per cases ;
suppose L363: R17 = ( 0 );

L364: (( R34 [:] (R27 , R11) ) = ( <*> R5 ) & ( R34 [:] (R27 , ( R35 . (R11 , R12) )) ) = ( <*> R5 )) by L363 , L72;
thus L365: thesis by L364 , FINSEQ_2:73;
end;
suppose L366: R17 <> ( 0 );

reconsider D43 = ( Seg R17 ) as non  empty set by L366;
L367: R27 is (Function of D43 , R5) by L196;
thus L368: thesis by L367 , L362 , L307;
end;
end;
theorem
L370: (for R5 being non  empty set holds (for R7 being non  empty set holds (for R17 being Nat holds (for R26 being (Function of R5 , R7) holds (for R28 being (Tuple of R17 , R5) holds (for R29 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (for R37 being (BinOp of R7) holds ((for R11 being (Element of R5) holds (for R12 being (Element of R5) holds ( R26 . ( R34 . (R11 , R12) ) ) = ( R37 . (( R26 . R11 ) , ( R26 . R12 )) ))) implies ( R26 * ( R34 .: (R28 , R29) ) ) = ( R37 .: (( R26 * R28 ) , ( R26 * R29 )) ))))))))))
proof
let R5 being non  empty set;
let R7 being non  empty set;
let R17 being Nat;
let R26 being (Function of R5 , R7);
let R28 being (Tuple of R17 , R5);
let R29 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
let R37 being (BinOp of R7);
assume L371: (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds ( R26 . ( R34 . (R11 , R12) ) ) = ( R37 . (( R26 . R11 ) , ( R26 . R12 )) )));
per cases ;
suppose L372: R17 = ( 0 );

L373: ( R34 .: (R28 , R29) ) = ( <*> R5 ) by L372 , L66;
L374: ( R26 * ( R34 .: (R28 , R29) ) ) = ( <*> R7 ) by L373;
L375: ( R26 * R28 ) = ( <*> R7 ) by L372;
thus L376: thesis by L375 , L374 , FINSEQ_2:73;
end;
suppose L377: R17 <> ( 0 );

reconsider D44 = ( Seg R17 ) as non  empty set by L377;
L378: (R28 is (Function of D44 , R5) & R29 is (Function of D44 , R5)) by L196;
thus L379: thesis by L378 , L371 , L312;
end;
end;
theorem
L381: (for R5 being non  empty set holds (for R7 being non  empty set holds (for R10 being (Element of R5) holds (for R17 being Nat holds (for R26 being (Function of R5 , R7) holds (for R27 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (for R37 being (BinOp of R7) holds ((for R11 being (Element of R5) holds (for R12 being (Element of R5) holds ( R26 . ( R34 . (R11 , R12) ) ) = ( R37 . (( R26 . R11 ) , ( R26 . R12 )) ))) implies ( R26 * ( R34 [;] (R10 , R27) ) ) = ( R37 [;] (( R26 . R10 ) , ( R26 * R27 )) ))))))))))
proof
let R5 being non  empty set;
let R7 being non  empty set;
let R10 being (Element of R5);
let R17 being Nat;
let R26 being (Function of R5 , R7);
let R27 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
let R37 being (BinOp of R7);
assume L382: (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds ( R26 . ( R34 . (R11 , R12) ) ) = ( R37 . (( R26 . R11 ) , ( R26 . R12 )) )));
per cases ;
suppose L383: R17 = ( 0 );

L384: ( R34 [;] (R10 , R27) ) = ( <*> R5 ) by L383 , L69;
L385: ( R26 * ( R34 [;] (R10 , R27) ) ) = ( <*> R7 ) by L384;
L386: ( R26 * R27 ) = ( <*> R7 ) by L383;
thus L387: thesis by L386 , L385 , FINSEQ_2:79;
end;
suppose L388: R17 <> ( 0 );

reconsider D45 = ( Seg R17 ) as non  empty set by L388;
L389: R27 is (Function of D45 , R5) by L196;
thus L390: thesis by L389 , L382 , L317;
end;
end;
theorem
L392: (for R5 being non  empty set holds (for R7 being non  empty set holds (for R10 being (Element of R5) holds (for R17 being Nat holds (for R26 being (Function of R5 , R7) holds (for R27 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (for R37 being (BinOp of R7) holds ((for R11 being (Element of R5) holds (for R12 being (Element of R5) holds ( R26 . ( R34 . (R11 , R12) ) ) = ( R37 . (( R26 . R11 ) , ( R26 . R12 )) ))) implies ( R26 * ( R34 [:] (R27 , R10) ) ) = ( R37 [:] (( R26 * R27 ) , ( R26 . R10 )) ))))))))))
proof
let R5 being non  empty set;
let R7 being non  empty set;
let R10 being (Element of R5);
let R17 being Nat;
let R26 being (Function of R5 , R7);
let R27 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
let R37 being (BinOp of R7);
assume L393: (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds ( R26 . ( R34 . (R11 , R12) ) ) = ( R37 . (( R26 . R11 ) , ( R26 . R12 )) )));
per cases ;
suppose L394: R17 = ( 0 );

L395: ( R34 [:] (R27 , R10) ) = ( <*> R5 ) by L394 , L72;
L396: ( R26 * ( R34 [:] (R27 , R10) ) ) = ( <*> R7 ) by L395;
L397: ( R26 * R27 ) = ( <*> R7 ) by L394;
thus L398: thesis by L397 , L396 , FINSEQ_2:85;
end;
suppose L399: R17 <> ( 0 );

reconsider D46 = ( Seg R17 ) as non  empty set by L399;
L400: R27 is (Function of D46 , R5) by L196;
thus L401: thesis by L400 , L393 , L321;
end;
end;
theorem
L403: (for R5 being non  empty set holds (for R17 being Nat holds (for R28 being (Tuple of R17 , R5) holds (for R29 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (for R36 being (UnOp of R5) holds (R36 is_distributive_wrt R34 implies ( R36 * ( R34 .: (R28 , R29) ) ) = ( R34 .: (( R36 * R28 ) , ( R36 * R29 )) ))))))))
proof
let R5 being non  empty set;
let R17 being Nat;
let R28 being (Tuple of R17 , R5);
let R29 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
let R36 being (UnOp of R5);
assume L404: (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds ( R36 . ( R34 . (R11 , R12) ) ) = ( R34 . (( R36 . R11 ) , ( R36 . R12 )) )));
thus L405: thesis by L404 , L370;
end;
theorem
L406: (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R17 being Nat holds (for R27 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (for R36 being (UnOp of R5) holds (R36 is_distributive_wrt R34 implies ( R36 * ( R34 [;] (R10 , R27) ) ) = ( R34 [;] (( R36 . R10 ) , ( R36 * R27 )) ))))))))
proof
let R5 being non  empty set;
let R10 being (Element of R5);
let R17 being Nat;
let R27 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
let R36 being (UnOp of R5);
assume L407: (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds ( R36 . ( R34 . (R11 , R12) ) ) = ( R34 . (( R36 . R11 ) , ( R36 . R12 )) )));
thus L408: thesis by L407 , L381;
end;
theorem
L409: (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R17 being Nat holds (for R27 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (for R36 being (UnOp of R5) holds (R36 is_distributive_wrt R34 implies ( R36 * ( R34 [:] (R27 , R10) ) ) = ( R34 [:] (( R36 * R27 ) , ( R36 . R10 )) ))))))))
proof
let R5 being non  empty set;
let R10 being (Element of R5);
let R17 being Nat;
let R27 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
let R36 being (UnOp of R5);
assume L410: (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds ( R36 . ( R34 . (R11 , R12) ) ) = ( R34 . (( R36 . R11 ) , ( R36 . R12 )) )));
thus L411: thesis by L410 , L392;
end;
theorem
L412: (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R34 being (BinOp of R5) holds (for R35 being (BinOp of R5) holds (for R36 being (UnOp of R5) holds ((R35 is_distributive_wrt R34 & R36 = ( R35 [;] (R10 , ( id R5 )) )) implies R36 is_distributive_wrt R34))))))
proof
let R5 being non  empty set;
let R10 being (Element of R5);
let R34 being (BinOp of R5);
let R35 being (BinOp of R5);
let R36 being (UnOp of R5);
assume that
L413: R35 is_distributive_wrt R34
and
L414: R36 = ( R35 [;] (R10 , ( id R5 )) );
let R11 being (Element of R5);
let R12 being (Element of R5);
thus L415: ( R36 . ( R34 . (R11 , R12) ) ) = ( R35 . (R10 , ( ( id R5 ) . ( R34 . (R11 , R12) ) )) ) by L414 , FUNCOP_1:53
.= ( R35 . (R10 , ( R34 . (R11 , R12) )) ) by FUNCT_1:18
.= ( R34 . (( R35 . (R10 , R11) ) , ( R35 . (R10 , R12) )) ) by L413 , BINOP_1:11
.= ( R34 . (( R35 . (R10 , ( ( id R5 ) . R11 )) ) , ( R35 . (R10 , R12) )) ) by FUNCT_1:18
.= ( R34 . (( R35 . (R10 , ( ( id R5 ) . R11 )) ) , ( R35 . (R10 , ( ( id R5 ) . R12 )) )) ) by FUNCT_1:18
.= ( R34 . (( R36 . R11 ) , ( R35 . (R10 , ( ( id R5 ) . R12 )) )) ) by L414 , FUNCOP_1:53
.= ( R34 . (( R36 . R11 ) , ( R36 . R12 )) ) by L414 , FUNCOP_1:53;
end;
theorem
L416: (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R34 being (BinOp of R5) holds (for R35 being (BinOp of R5) holds (for R36 being (UnOp of R5) holds ((R35 is_distributive_wrt R34 & R36 = ( R35 [:] (( id R5 ) , R10) )) implies R36 is_distributive_wrt R34))))))
proof
let R5 being non  empty set;
let R10 being (Element of R5);
let R34 being (BinOp of R5);
let R35 being (BinOp of R5);
let R36 being (UnOp of R5);
assume that
L417: R35 is_distributive_wrt R34
and
L418: R36 = ( R35 [:] (( id R5 ) , R10) );
let R11 being (Element of R5);
let R12 being (Element of R5);
thus L419: ( R36 . ( R34 . (R11 , R12) ) ) = ( R35 . (( ( id R5 ) . ( R34 . (R11 , R12) ) ) , R10) ) by L418 , FUNCOP_1:48
.= ( R35 . (( R34 . (R11 , R12) ) , R10) ) by FUNCT_1:18
.= ( R34 . (( R35 . (R11 , R10) ) , ( R35 . (R12 , R10) )) ) by L417 , BINOP_1:11
.= ( R34 . (( R35 . (( ( id R5 ) . R11 ) , R10) ) , ( R35 . (R12 , R10) )) ) by FUNCT_1:18
.= ( R34 . (( R35 . (( ( id R5 ) . R11 ) , R10) ) , ( R35 . (( ( id R5 ) . R12 ) , R10) )) ) by FUNCT_1:18
.= ( R34 . (( R36 . R11 ) , ( R35 . (( ( id R5 ) . R12 ) , R10) )) ) by L418 , FUNCOP_1:48
.= ( R34 . (( R36 . R11 ) , ( R36 . R12 )) ) by L418 , FUNCOP_1:48;
end;
theorem
L420: (for R5 being non  empty set holds (for R17 being Nat holds (for R27 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (R34 is  having_a_unity implies (( R34 .: (( R17 |-> ( the_unity_wrt R34 ) ) , R27) ) = R27 & ( R34 .: (R27 , ( R17 |-> ( the_unity_wrt R34 ) )) ) = R27))))))
proof
let R5 being non  empty set;
let R17 being Nat;
let R27 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
assume L421: R34 is  having_a_unity;
per cases ;
suppose L422: R17 = ( 0 );

L423: R27 = ( <*> R5 ) by L422;
thus L424: thesis by L423 , L422 , L66;
end;
suppose L425: R17 <> ( 0 );

reconsider D47 = ( Seg R17 ) as non  empty set by L425;
L426: R27 is (Function of D47 , R5) by L196;
thus L427: thesis by L426 , L421 , L334;
end;
end;
theorem
L429: (for R5 being non  empty set holds (for R17 being Nat holds (for R27 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (R34 is  having_a_unity implies ( R34 [;] (( the_unity_wrt R34 ) , R27) ) = R27)))))
proof
let R5 being non  empty set;
let R17 being Nat;
let R27 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
assume L430: R34 is  having_a_unity;
per cases ;
suppose L431: R17 = ( 0 );

L432: R27 = ( <*> R5 ) by L431;
thus L433: thesis by L432 , L69;
end;
suppose L434: R17 <> ( 0 );

reconsider D48 = ( Seg R17 ) as non  empty set by L434;
L435: R27 is (Function of D48 , R5) by L196;
thus L436: thesis by L435 , L430 , L342;
end;
end;
theorem
L438: (for R5 being non  empty set holds (for R17 being Nat holds (for R27 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (R34 is  having_a_unity implies ( R34 [:] (R27 , ( the_unity_wrt R34 )) ) = R27)))))
proof
let R5 being non  empty set;
let R17 being Nat;
let R27 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
assume L439: R34 is  having_a_unity;
per cases ;
suppose L440: R17 = ( 0 );

L441: R27 = ( <*> R5 ) by L440;
thus L442: thesis by L441 , L72;
end;
suppose L443: R17 <> ( 0 );

reconsider D49 = ( Seg R17 ) as non  empty set by L443;
L444: R27 is (Function of D49 , R5) by L196;
thus L445: thesis by L444 , L439 , L347;
end;
end;
definition
let R5 being non  empty set;
let R36 being (UnOp of R5);
let R34 being (BinOp of R5);
pred R36 is_an_inverseOp_wrt R34
means
:L447: (for R10 being (Element of R5) holds (( R34 . (R10 , ( R36 . R10 )) ) = ( the_unity_wrt R34 ) & ( R34 . (( R36 . R10 ) , R10) ) = ( the_unity_wrt R34 )))
;end;
definition
let R5 being non  empty set;
let R34 being (BinOp of R5);
attr R34 is  having_an_inverseOp
means
:L449: (ex R36 being (UnOp of R5) st R36 is_an_inverseOp_wrt R34);
end;
definition
let R5 being non  empty set;
let R34 being (BinOp of R5);
assume that
L451: R34 is  having_a_unity
and
L452: R34 is  associative
and
L453: R34 is  having_an_inverseOp;
func the_inverseOp_wrt R34 -> (UnOp of R5) means 
:L454: it is_an_inverseOp_wrt R34;
existence by L453 , L449;
uniqueness
proof
set D50 = ( the_unity_wrt R34 );
let C32 , C33 being (UnOp of R5);
assume that
L455: (for R10 being (Element of R5) holds (( R34 . (R10 , ( C32 . R10 )) ) = D50 & ( R34 . (( C32 . R10 ) , R10) ) = D50))
and
L456: (for R10 being (Element of R5) holds (( R34 . (R10 , ( C33 . R10 )) ) = D50 & ( R34 . (( C33 . R10 ) , R10) ) = D50));
L457:
now
let R10 being (Element of R5);
set D51 = ( C32 . R10 );
set D52 = ( C33 . R10 );
thus L458: ( C32 . R10 ) = ( R34 . (D51 , D50) ) by L451 , SETWISEO:15
.= ( R34 . (D51 , ( R34 . (R10 , D52) )) ) by L456
.= ( R34 . (( R34 . (D51 , R10) ) , D52) ) by L452 , BINOP_1:def 3
.= ( R34 . (D50 , D52) ) by L455
.= ( C33 . R10 ) by L451 , SETWISEO:15;
end;
thus L459: thesis by L457 , FUNCT_2:63;
end;
end;
theorem
L461: (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R34 being (BinOp of R5) holds ((R34 is  having_a_unity & R34 is  associative & R34 is  having_an_inverseOp) implies (( R34 . (( ( the_inverseOp_wrt R34 ) . R10 ) , R10) ) = ( the_unity_wrt R34 ) & ( R34 . (R10 , ( ( the_inverseOp_wrt R34 ) . R10 )) ) = ( the_unity_wrt R34 ))))))
proof
let R5 being non  empty set;
let R10 being (Element of R5);
let R34 being (BinOp of R5);
assume L462: (R34 is  having_a_unity & R34 is  associative & R34 is  having_an_inverseOp);
L463: ( the_inverseOp_wrt R34 ) is_an_inverseOp_wrt R34 by L462 , L454;
thus L464: thesis by L463 , L447;
end;
theorem
L465: (for R5 being non  empty set holds (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds (for R34 being (BinOp of R5) holds ((R34 is  having_a_unity & R34 is  associative & R34 is  having_an_inverseOp & ( R34 . (R11 , R12) ) = ( the_unity_wrt R34 )) implies (R11 = ( ( the_inverseOp_wrt R34 ) . R12 ) & ( ( the_inverseOp_wrt R34 ) . R11 ) = R12))))))
proof
let R5 being non  empty set;
let R11 being (Element of R5);
let R12 being (Element of R5);
let R34 being (BinOp of R5);
assume that
L466: R34 is  having_a_unity
and
L467: R34 is  associative
and
L468: R34 is  having_an_inverseOp
and
L469: ( R34 . (R11 , R12) ) = ( the_unity_wrt R34 );
set D53 = ( the_unity_wrt R34 );
set D54 = ( ( the_inverseOp_wrt R34 ) . R12 );
L470: ( R34 . (( R34 . (R11 , R12) ) , D54) ) = D54 by L466 , L469 , SETWISEO:15;
L471: ( R34 . (R11 , ( R34 . (R12 , D54) )) ) = D54 by L470 , L467 , BINOP_1:def 3;
L472: ( R34 . (R11 , D53) ) = D54 by L471 , L466 , L467 , L468 , L461;
thus L473: R11 = D54 by L472 , L466 , SETWISEO:15;
set D55 = ( ( the_inverseOp_wrt R34 ) . R11 );
L474: ( R34 . (D55 , ( R34 . (R11 , R12) )) ) = D55 by L466 , L469 , SETWISEO:15;
L475: ( R34 . (( R34 . (D55 , R11) ) , R12) ) = D55 by L474 , L467 , BINOP_1:def 3;
L476: ( R34 . (D53 , R12) ) = D55 by L475 , L466 , L467 , L468 , L461;
thus L477: thesis by L476 , L466 , SETWISEO:15;
end;
theorem
L478: (for R5 being non  empty set holds (for R34 being (BinOp of R5) holds ((R34 is  having_a_unity & R34 is  associative & R34 is  having_an_inverseOp) implies ( ( the_inverseOp_wrt R34 ) . ( the_unity_wrt R34 ) ) = ( the_unity_wrt R34 ))))
proof
let R5 being non  empty set;
let R34 being (BinOp of R5);
assume that
L479: R34 is  having_a_unity
and
L480: (R34 is  associative & R34 is  having_an_inverseOp);
set D56 = ( the_unity_wrt R34 );
L481: ( R34 . (D56 , D56) ) = D56 by L479 , SETWISEO:15;
thus L482: thesis by L481 , L479 , L480 , L465;
end;
theorem
L483: (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R34 being (BinOp of R5) holds ((R34 is  having_a_unity & R34 is  associative & R34 is  having_an_inverseOp) implies ( ( the_inverseOp_wrt R34 ) . ( ( the_inverseOp_wrt R34 ) . R10 ) ) = R10))))
proof
let R5 being non  empty set;
let R10 being (Element of R5);
let R34 being (BinOp of R5);
assume L484: (R34 is  having_a_unity & R34 is  associative & R34 is  having_an_inverseOp);
L485: ( R34 . (R10 , ( ( the_inverseOp_wrt R34 ) . R10 )) ) = ( the_unity_wrt R34 ) by L484 , L461;
thus L486: thesis by L485 , L484 , L465;
end;
theorem
L487: (for R5 being non  empty set holds (for R34 being (BinOp of R5) holds ((R34 is  having_a_unity & R34 is  associative & R34 is  commutative & R34 is  having_an_inverseOp) implies ( the_inverseOp_wrt R34 ) is_distributive_wrt R34)))
proof
let R5 being non  empty set;
let R34 being (BinOp of R5);
assume that
L488: R34 is  having_a_unity
and
L489: R34 is  associative
and
L490: R34 is  commutative
and
L491: R34 is  having_an_inverseOp;
let R11 being (Element of R5);
let R12 being (Element of R5);
set D57 = ( the_unity_wrt R34 );
set D58 = ( the_inverseOp_wrt R34 );
L492: ( R34 . (( R34 . (( D58 . R11 ) , ( D58 . R12 )) ) , ( R34 . (R11 , R12) )) ) = ( R34 . (( D58 . R11 ) , ( R34 . (( D58 . R12 ) , ( R34 . (R11 , R12) )) )) ) by L489 , BINOP_1:def 3
.= ( R34 . (( D58 . R11 ) , ( R34 . (( R34 . (( D58 . R12 ) , R11) ) , R12) )) ) by L489 , BINOP_1:def 3
.= ( R34 . (( D58 . R11 ) , ( R34 . (( R34 . (R11 , ( D58 . R12 )) ) , R12) )) ) by L490 , BINOP_1:def 2
.= ( R34 . (( D58 . R11 ) , ( R34 . (R11 , ( R34 . (( D58 . R12 ) , R12) )) )) ) by L489 , BINOP_1:def 3
.= ( R34 . (( D58 . R11 ) , ( R34 . (R11 , D57) )) ) by L488 , L489 , L491 , L461
.= ( R34 . (( R34 . (( D58 . R11 ) , R11) ) , D57) ) by L489 , BINOP_1:def 3
.= ( R34 . (D57 , D57) ) by L488 , L489 , L491 , L461
.= D57 by L488 , SETWISEO:15;
thus L493: ( D58 . ( R34 . (R11 , R12) ) ) = ( R34 . (( D58 . R11 ) , ( D58 . R12 )) ) by L492 , L488 , L489 , L491 , L465;
end;
theorem
L494: (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds (for R34 being (BinOp of R5) holds ((R34 is  having_a_unity & R34 is  associative & R34 is  having_an_inverseOp & (( R34 . (R10 , R11) ) = ( R34 . (R10 , R12) ) or ( R34 . (R11 , R10) ) = ( R34 . (R12 , R10) ))) implies R11 = R12))))))
proof
let R5 being non  empty set;
let R10 being (Element of R5);
let R11 being (Element of R5);
let R12 being (Element of R5);
let R34 being (BinOp of R5);
assume that
L495: R34 is  having_a_unity
and
L496: R34 is  associative
and
L497: R34 is  having_an_inverseOp
and
L498: (( R34 . (R10 , R11) ) = ( R34 . (R10 , R12) ) or ( R34 . (R11 , R10) ) = ( R34 . (R12 , R10) ));
set D59 = ( the_unity_wrt R34 );
set D60 = ( the_inverseOp_wrt R34 );
per cases  by L498;
suppose L499: ( R34 . (R10 , R11) ) = ( R34 . (R10 , R12) );

thus L500: R11 = ( R34 . (D59 , R11) ) by L495 , SETWISEO:15
.= ( R34 . (( R34 . (( D60 . R10 ) , R10) ) , R11) ) by L495 , L496 , L497 , L461
.= ( R34 . (( D60 . R10 ) , ( R34 . (R10 , R12) )) ) by L496 , L499 , BINOP_1:def 3
.= ( R34 . (( R34 . (( D60 . R10 ) , R10) ) , R12) ) by L496 , BINOP_1:def 3
.= ( R34 . (D59 , R12) ) by L495 , L496 , L497 , L461
.= R12 by L495 , SETWISEO:15;
end;
suppose L501: ( R34 . (R11 , R10) ) = ( R34 . (R12 , R10) );

thus L502: R11 = ( R34 . (R11 , D59) ) by L495 , SETWISEO:15
.= ( R34 . (R11 , ( R34 . (R10 , ( D60 . R10 )) )) ) by L495 , L496 , L497 , L461
.= ( R34 . (( R34 . (R12 , R10) ) , ( D60 . R10 )) ) by L496 , L501 , BINOP_1:def 3
.= ( R34 . (R12 , ( R34 . (R10 , ( D60 . R10 )) )) ) by L496 , BINOP_1:def 3
.= ( R34 . (R12 , D59) ) by L495 , L496 , L497 , L461
.= R12 by L495 , SETWISEO:15;
end;
end;
theorem
L504: (for R5 being non  empty set holds (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds (for R34 being (BinOp of R5) holds ((R34 is  having_a_unity & R34 is  associative & R34 is  having_an_inverseOp & (( R34 . (R11 , R12) ) = R12 or ( R34 . (R12 , R11) ) = R12)) implies R11 = ( the_unity_wrt R34 ))))))
proof
let R5 being non  empty set;
let R11 being (Element of R5);
let R12 being (Element of R5);
let R34 being (BinOp of R5);
assume that
L505: R34 is  having_a_unity
and
L506: (R34 is  associative & R34 is  having_an_inverseOp);
set D61 = ( the_unity_wrt R34 );
assume L507: (( R34 . (R11 , R12) ) = R12 or ( R34 . (R12 , R11) ) = R12);
L508: (( R34 . (R11 , R12) ) = ( R34 . (D61 , R12) ) or ( R34 . (R12 , R11) ) = ( R34 . (R12 , D61) )) by L507 , L505 , SETWISEO:15;
thus L509: thesis by L508 , L505 , L506 , L494;
end;
theorem
L510: (for R5 being non  empty set holds (for R15 being (Element of R5) holds (for R34 being (BinOp of R5) holds (for R35 being (BinOp of R5) holds ((R34 is  associative & R34 is  having_a_unity & R34 is  having_an_inverseOp & R35 is_distributive_wrt R34 & R15 = ( the_unity_wrt R34 )) implies (for R10 being (Element of R5) holds (( R35 . (R15 , R10) ) = R15 & ( R35 . (R10 , R15) ) = R15)))))))
proof
let R5 being non  empty set;
let R15 being (Element of R5);
let R34 being (BinOp of R5);
let R35 being (BinOp of R5);
assume that
L511: R34 is  associative
and
L512: R34 is  having_a_unity
and
L513: R34 is  having_an_inverseOp
and
L514: R35 is_distributive_wrt R34
and
L515: R15 = ( the_unity_wrt R34 );
let R10 being (Element of R5);
set D62 = ( R35 . (R15 , R10) );
L516: ( R34 . (D62 , D62) ) = ( R35 . (( R34 . (R15 , R15) ) , R10) ) by L514 , BINOP_1:11
.= D62 by L512 , L515 , SETWISEO:15;
thus L517: D62 = R15 by L516 , L511 , L512 , L513 , L515 , L504;
set D63 = ( R35 . (R10 , R15) );
L518: ( R34 . (D63 , D63) ) = ( R35 . (R10 , ( R34 . (R15 , R15) )) ) by L514 , BINOP_1:11
.= D63 by L512 , L515 , SETWISEO:15;
thus L519: thesis by L518 , L511 , L512 , L513 , L515 , L504;
end;
theorem
L520: (for R5 being non  empty set holds (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds (for R34 being (BinOp of R5) holds (for R35 being (BinOp of R5) holds (for R36 being (UnOp of R5) holds ((R34 is  having_a_unity & R34 is  associative & R34 is  having_an_inverseOp & R36 = ( the_inverseOp_wrt R34 ) & R35 is_distributive_wrt R34) implies (( R36 . ( R35 . (R11 , R12) ) ) = ( R35 . (( R36 . R11 ) , R12) ) & ( R36 . ( R35 . (R11 , R12) ) ) = ( R35 . (R11 , ( R36 . R12 )) )))))))))
proof
let R5 being non  empty set;
let R11 being (Element of R5);
let R12 being (Element of R5);
let R34 being (BinOp of R5);
let R35 being (BinOp of R5);
let R36 being (UnOp of R5);
assume that
L521: (R34 is  having_a_unity & R34 is  associative & R34 is  having_an_inverseOp)
and
L522: R36 = ( the_inverseOp_wrt R34 )
and
L523: R35 is_distributive_wrt R34;
set D64 = ( the_unity_wrt R34 );
L524: ( R34 . (( R35 . (R11 , R12) ) , ( R35 . (( R36 . R11 ) , R12) )) ) = ( R35 . (( R34 . (R11 , ( R36 . R11 )) ) , R12) ) by L523 , BINOP_1:11
.= ( R35 . (D64 , R12) ) by L521 , L522 , L461
.= D64 by L521 , L523 , L510;
thus L525: ( R36 . ( R35 . (R11 , R12) ) ) = ( R35 . (( R36 . R11 ) , R12) ) by L524 , L521 , L522 , L465;
L526: ( R34 . (( R35 . (R11 , R12) ) , ( R35 . (R11 , ( R36 . R12 )) )) ) = ( R35 . (R11 , ( R34 . (R12 , ( R36 . R12 )) )) ) by L523 , BINOP_1:11
.= ( R35 . (R11 , D64) ) by L521 , L522 , L461
.= D64 by L521 , L523 , L510;
thus L527: thesis by L526 , L521 , L522 , L465;
end;
theorem
L528: (for R5 being non  empty set holds (for R34 being (BinOp of R5) holds (for R35 being (BinOp of R5) holds (for R36 being (UnOp of R5) holds ((R34 is  having_a_unity & R34 is  associative & R34 is  having_an_inverseOp & R36 = ( the_inverseOp_wrt R34 ) & R35 is_distributive_wrt R34 & R35 is  having_a_unity) implies ( R35 [;] (( R36 . ( the_unity_wrt R35 ) ) , ( id R5 )) ) = R36)))))
proof
let R5 being non  empty set;
let R34 being (BinOp of R5);
let R35 being (BinOp of R5);
let R36 being (UnOp of R5);
assume that
L529: (R34 is  having_a_unity & R34 is  associative & R34 is  having_an_inverseOp & R36 = ( the_inverseOp_wrt R34 ) & R35 is_distributive_wrt R34)
and
L530: R35 is  having_a_unity;
set D65 = ( the_unity_wrt R35 );
L531: (for R10 being (Element of R5) holds ( ( R35 [;] (( R36 . D65 ) , ( id R5 )) ) . R10 ) = ( R36 . R10 ))
proof
let R10 being (Element of R5);
thus L532: ( ( R35 [;] (( R36 . D65 ) , ( id R5 )) ) . R10 ) = ( R35 . (( R36 . D65 ) , ( ( id R5 ) . R10 )) ) by FUNCOP_1:53
.= ( R35 . (( R36 . D65 ) , R10) ) by FUNCT_1:18
.= ( R36 . ( R35 . (D65 , R10) ) ) by L529 , L520
.= ( R36 . R10 ) by L530 , SETWISEO:15;
end;
thus L533: thesis by L531 , FUNCT_2:63;
end;
theorem
L534: (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R34 being (BinOp of R5) holds (for R35 being (BinOp of R5) holds ((R34 is  associative & R34 is  having_a_unity & R34 is  having_an_inverseOp & R35 is_distributive_wrt R34) implies ( ( R35 [;] (R10 , ( id R5 )) ) . ( the_unity_wrt R34 ) ) = ( the_unity_wrt R34 ))))))
proof
let R5 being non  empty set;
let R10 being (Element of R5);
let R34 being (BinOp of R5);
let R35 being (BinOp of R5);
assume that
L535: R34 is  associative
and
L536: R34 is  having_a_unity
and
L537: R34 is  having_an_inverseOp
and
L538: R35 is_distributive_wrt R34;
set D66 = ( the_unity_wrt R34 );
set D67 = ( the_inverseOp_wrt R34 );
L539: ( R35 . (R10 , D66) ) = ( R35 . (R10 , ( R34 . (D66 , D66) )) ) by L536 , SETWISEO:15
.= ( R34 . (( R35 . (R10 , D66) ) , ( R35 . (R10 , D66) )) ) by L538 , BINOP_1:11;
L540: D66 = ( R34 . (( R34 . (( R35 . (R10 , D66) ) , ( R35 . (R10 , D66) )) ) , ( D67 . ( R35 . (R10 , D66) ) )) ) by L539 , L535 , L536 , L537 , L461;
L541: D66 = ( R34 . (( R35 . (R10 , D66) ) , ( R34 . (( R35 . (R10 , D66) ) , ( D67 . ( R35 . (R10 , D66) ) )) )) ) by L540 , L535 , BINOP_1:def 3;
L542: D66 = ( R34 . (( R35 . (R10 , D66) ) , D66) ) by L541 , L535 , L536 , L537 , L461;
L543: D66 = ( R35 . (R10 , D66) ) by L542 , L536 , SETWISEO:15;
L544: ( R35 . (R10 , ( ( id R5 ) . D66 )) ) = D66 by L543 , FUNCT_1:18;
thus L545: thesis by L544 , FUNCOP_1:53;
end;
theorem
L546: (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R34 being (BinOp of R5) holds (for R35 being (BinOp of R5) holds ((R34 is  associative & R34 is  having_a_unity & R34 is  having_an_inverseOp & R35 is_distributive_wrt R34) implies ( ( R35 [:] (( id R5 ) , R10) ) . ( the_unity_wrt R34 ) ) = ( the_unity_wrt R34 ))))))
proof
let R5 being non  empty set;
let R10 being (Element of R5);
let R34 being (BinOp of R5);
let R35 being (BinOp of R5);
assume that
L547: R34 is  associative
and
L548: R34 is  having_a_unity
and
L549: R34 is  having_an_inverseOp
and
L550: R35 is_distributive_wrt R34;
set D68 = ( the_unity_wrt R34 );
set D69 = ( the_inverseOp_wrt R34 );
L551: ( R35 . (D68 , R10) ) = ( R35 . (( R34 . (D68 , D68) ) , R10) ) by L548 , SETWISEO:15
.= ( R34 . (( R35 . (D68 , R10) ) , ( R35 . (D68 , R10) )) ) by L550 , BINOP_1:11;
L552: D68 = ( R34 . (( R34 . (( R35 . (D68 , R10) ) , ( R35 . (D68 , R10) )) ) , ( D69 . ( R35 . (D68 , R10) ) )) ) by L551 , L547 , L548 , L549 , L461;
L553: D68 = ( R34 . (( R35 . (D68 , R10) ) , ( R34 . (( R35 . (D68 , R10) ) , ( D69 . ( R35 . (D68 , R10) ) )) )) ) by L552 , L547 , BINOP_1:def 3;
L554: D68 = ( R34 . (( R35 . (D68 , R10) ) , D68) ) by L553 , L547 , L548 , L549 , L461;
L555: D68 = ( R35 . (D68 , R10) ) by L554 , L548 , SETWISEO:15;
L556: ( R35 . (( ( id R5 ) . D68 ) , R10) ) = D68 by L555 , FUNCT_1:18;
thus L557: thesis by L556 , FUNCOP_1:48;
end;
theorem
L558: (for R3 being non  empty set holds (for R5 being non  empty set holds (for R24 being (Function of R3 , R5) holds (for R34 being (BinOp of R5) holds ((R34 is  having_a_unity & R34 is  associative & R34 is  having_an_inverseOp) implies (( R34 .: (R24 , ( ( the_inverseOp_wrt R34 ) * R24 )) ) = ( R3 --> ( the_unity_wrt R34 ) ) & ( R34 .: (( ( the_inverseOp_wrt R34 ) * R24 ) , R24) ) = ( R3 --> ( the_unity_wrt R34 ) )))))))
proof
let R3 being non  empty set;
let R5 being non  empty set;
let R24 being (Function of R3 , R5);
let R34 being (BinOp of R5);
set D70 = ( the_inverseOp_wrt R34 );
reconsider D71 = ( R3 --> ( the_unity_wrt R34 ) ) as (Function of R3 , R5);
assume L559: (R34 is  having_a_unity & R34 is  associative & R34 is  having_an_inverseOp);
L560:
now
let R8 being (Element of R3);
thus L561: ( ( R34 .: (R24 , ( D70 * R24 )) ) . R8 ) = ( R34 . (( R24 . R8 ) , ( ( D70 * R24 ) . R8 )) ) by FUNCOP_1:37
.= ( R34 . (( R24 . R8 ) , ( D70 . ( R24 . R8 ) )) ) by FUNCT_2:15
.= ( the_unity_wrt R34 ) by L559 , L461
.= ( D71 . R8 ) by FUNCOP_1:7;
end;
thus L562: ( R34 .: (R24 , ( ( the_inverseOp_wrt R34 ) * R24 )) ) = ( R3 --> ( the_unity_wrt R34 ) ) by L560 , FUNCT_2:63;
L563:
now
let R8 being (Element of R3);
thus L564: ( ( R34 .: (( D70 * R24 ) , R24) ) . R8 ) = ( R34 . (( ( D70 * R24 ) . R8 ) , ( R24 . R8 )) ) by FUNCOP_1:37
.= ( R34 . (( D70 . ( R24 . R8 ) ) , ( R24 . R8 )) ) by FUNCT_2:15
.= ( the_unity_wrt R34 ) by L559 , L461
.= ( D71 . R8 ) by FUNCOP_1:7;
end;
thus L565: thesis by L563 , FUNCT_2:63;
end;
theorem
L566: (for R3 being non  empty set holds (for R5 being non  empty set holds (for R24 being (Function of R3 , R5) holds (for R25 being (Function of R3 , R5) holds (for R34 being (BinOp of R5) holds ((R34 is  associative & R34 is  having_an_inverseOp & R34 is  having_a_unity & ( R34 .: (R24 , R25) ) = ( R3 --> ( the_unity_wrt R34 ) )) implies (R24 = ( ( the_inverseOp_wrt R34 ) * R25 ) & ( ( the_inverseOp_wrt R34 ) * R24 ) = R25)))))))
proof
let R3 being non  empty set;
let R5 being non  empty set;
let R24 being (Function of R3 , R5);
let R25 being (Function of R3 , R5);
let R34 being (BinOp of R5);
assume that
L567: (R34 is  associative & R34 is  having_an_inverseOp & R34 is  having_a_unity)
and
L568: ( R34 .: (R24 , R25) ) = ( R3 --> ( the_unity_wrt R34 ) );
set D72 = ( the_inverseOp_wrt R34 );
set D73 = ( the_unity_wrt R34 );
reconsider D74 = ( R3 --> D73 ) as (Function of R3 , R5);
L569:
now
let R8 being (Element of R3);
L570: ( R34 . (( R24 . R8 ) , ( R25 . R8 )) ) = ( D74 . R8 ) by L568 , FUNCOP_1:37
.= D73 by FUNCOP_1:7;
thus L571: ( R24 . R8 ) = ( D72 . ( R25 . R8 ) ) by L570 , L567 , L465
.= ( ( D72 * R25 ) . R8 ) by FUNCT_2:15;
end;
thus L572: R24 = ( ( the_inverseOp_wrt R34 ) * R25 ) by L569 , FUNCT_2:63;
L573:
now
let R8 being (Element of R3);
L574: ( R34 . (( R24 . R8 ) , ( R25 . R8 )) ) = ( D74 . R8 ) by L568 , FUNCOP_1:37
.= D73 by FUNCOP_1:7;
L575: ( R25 . R8 ) = ( D72 . ( R24 . R8 ) ) by L574 , L567 , L465;
thus L576: ( ( D72 * R24 ) . R8 ) = ( R25 . R8 ) by L575 , FUNCT_2:15;
end;
thus L577: thesis by L573 , FUNCT_2:63;
end;
theorem
L578: (for R5 being non  empty set holds (for R17 being Nat holds (for R27 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds ((R34 is  having_a_unity & R34 is  associative & R34 is  having_an_inverseOp) implies (( R34 .: (R27 , ( ( the_inverseOp_wrt R34 ) * R27 )) ) = ( R17 |-> ( the_unity_wrt R34 ) ) & ( R34 .: (( ( the_inverseOp_wrt R34 ) * R27 ) , R27) ) = ( R17 |-> ( the_unity_wrt R34 ) )))))))
proof
let R5 being non  empty set;
let R17 being Nat;
let R27 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
assume L579: (R34 is  having_a_unity & R34 is  associative & R34 is  having_an_inverseOp);
reconsider D75 = ( ( the_inverseOp_wrt R34 ) * R27 ) as (Element of ( R17 -tuples_on R5 )) by FINSEQ_2:113;
per cases ;
suppose L580: R17 = ( 0 );

L581: (( R34 .: (R27 , D75) ) = ( <*> R5 ) & ( R34 .: (D75 , R27) ) = ( <*> R5 )) by L580 , L66;
thus L582: thesis by L581 , L580;
end;
suppose L583: R17 <> ( 0 );

reconsider D76 = ( Seg R17 ) as non  empty set by L583;
L584: R27 is (Function of D76 , R5) by L196;
thus L585: thesis by L584 , L579 , L558;
end;
end;
theorem
L587: (for R5 being non  empty set holds (for R17 being Nat holds (for R28 being (Tuple of R17 , R5) holds (for R29 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds ((R34 is  associative & R34 is  having_an_inverseOp & R34 is  having_a_unity & ( R34 .: (R28 , R29) ) = ( R17 |-> ( the_unity_wrt R34 ) )) implies (R28 = ( ( the_inverseOp_wrt R34 ) * R29 ) & ( ( the_inverseOp_wrt R34 ) * R28 ) = R29)))))))
proof
let R5 being non  empty set;
let R17 being Nat;
let R28 being (Tuple of R17 , R5);
let R29 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
assume L588: (R34 is  associative & R34 is  having_an_inverseOp & R34 is  having_a_unity & ( R34 .: (R28 , R29) ) = ( R17 |-> ( the_unity_wrt R34 ) ));
per cases ;
suppose L589: R17 = ( 0 );

L590: (R28 = ( <*> R5 ) & R29 = ( <*> R5 )) by L589;
thus L591: thesis by L590;
end;
suppose L592: R17 <> ( 0 );

reconsider D77 = ( Seg R17 ) as non  empty set by L592;
L593: (R28 is (Function of D77 , R5) & R29 is (Function of D77 , R5)) by L196;
thus L594: thesis by L593 , L588 , L566;
end;
end;
theorem
L596: (for R3 being non  empty set holds (for R5 being non  empty set holds (for R15 being (Element of R5) holds (for R24 being (Function of R3 , R5) holds (for R34 being (BinOp of R5) holds (for R35 being (BinOp of R5) holds ((R34 is  associative & R34 is  having_a_unity & R15 = ( the_unity_wrt R34 ) & R34 is  having_an_inverseOp & R35 is_distributive_wrt R34) implies ( R35 [;] (R15 , R24) ) = ( R3 --> R15 ))))))))
proof
let R3 being non  empty set;
let R5 being non  empty set;
let R15 being (Element of R5);
let R24 being (Function of R3 , R5);
let R34 being (BinOp of R5);
let R35 being (BinOp of R5);
reconsider D78 = ( R3 --> R15 ) as (Function of R3 , R5);
assume L597: (R34 is  associative & R34 is  having_a_unity & R15 = ( the_unity_wrt R34 ) & R34 is  having_an_inverseOp & R35 is_distributive_wrt R34);
L598:
now
let R8 being (Element of R3);
thus L599: ( ( R35 [;] (R15 , R24) ) . R8 ) = ( R35 . (R15 , ( R24 . R8 )) ) by FUNCOP_1:53
.= R15 by L597 , L510
.= ( D78 . R8 ) by FUNCOP_1:7;
end;
thus L600: thesis by L598 , FUNCT_2:63;
end;
theorem
L601: (for R5 being non  empty set holds (for R15 being (Element of R5) holds (for R17 being Nat holds (for R27 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (for R35 being (BinOp of R5) holds ((R34 is  associative & R34 is  having_a_unity & R15 = ( the_unity_wrt R34 ) & R34 is  having_an_inverseOp & R35 is_distributive_wrt R34) implies ( R35 [;] (R15 , R27) ) = ( R17 |-> R15 ))))))))
proof
let R5 being non  empty set;
let R15 being (Element of R5);
let R17 being Nat;
let R27 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
let R35 being (BinOp of R5);
assume L602: (R34 is  associative & R34 is  having_a_unity & R15 = ( the_unity_wrt R34 ) & R34 is  having_an_inverseOp & R35 is_distributive_wrt R34);
per cases ;
suppose L603: R17 = ( 0 );

L604: ( R35 [;] (R15 , R27) ) = ( <*> R5 ) by L603 , L69;
thus L605: thesis by L604 , L603;
end;
suppose L606: R17 <> ( 0 );

reconsider D79 = ( Seg R17 ) as non  empty set by L606;
L607: R27 is (Function of D79 , R5) by L196;
thus L608: thesis by L607 , L602 , L596;
end;
end;
definition
let C34 , C35 , C36 being Function;
func C34 * (C35 , C36) -> Function equals 
( C34 * [: C35 , C36 :] );
correctness;
end;
theorem
L611: (for R1 being set holds (for R2 being set holds (for B20 , B21 , B22 being Function holds ([ R1 , R2 ] in ( dom ( B20 * (B21 , B22) ) ) implies ( ( B20 * (B21 , B22) ) . (R1 , R2) ) = ( B20 . (( B21 . R1 ) , ( B22 . R2 )) )))))
proof
let R1 being set;
let R2 being set;
let C37 , C38 , C39 being Function;
assume that
L612: [ R1 , R2 ] in ( dom ( C37 * (C38 , C39) ) );
L613: [ R1 , R2 ] in ( dom [: C38 , C39 :] ) by L612 , FUNCT_1:11;
L614: [ R1 , R2 ] in [: ( dom C38 ) , ( dom C39 ) :] by L613 , FUNCT_3:def 8;
L615: ( [: C38 , C39 :] . (R1 , R2) ) = [ ( C38 . R1 ) , ( C39 . R2 ) ] by L614 , FUNCT_3:65;
thus L616: thesis by L615 , L612 , FUNCT_1:12;
end;
theorem
L617: (for R1 being set holds (for R2 being set holds (for B23 , B24 , B25 being Function holds ([ R1 , R2 ] in ( dom ( B23 * (B24 , B25) ) ) implies ( ( B23 * (B24 , B25) ) . (R1 , R2) ) = ( B23 . (( B24 . R1 ) , ( B25 . R2 )) ))))) by L611;
theorem
L618: (for R3 being non  empty set holds (for R4 being non  empty set holds (for R5 being non  empty set holds (for R6 being non  empty set holds (for R7 being non  empty set holds (for B26 being (Function of [: R5 , R6 :] , R7) holds (for B27 being (Function of R3 , R5) holds (for B28 being (Function of R4 , R6) holds ( B26 * (B27 , B28) ) is (Function of [: R3 , R4 :] , R7)))))))))
proof
let R3 being non  empty set;
let R4 being non  empty set;
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let C40 being (Function of [: R5 , R6 :] , R7);
let C41 being (Function of R3 , R5);
let C42 being (Function of R4 , R6);
L619: ( C40 * (C41 , C42) ) = ( C40 * [: C41 , C42 :] );
thus L620: thesis by L619;
end;
theorem
L621: (for R5 being non  empty set holds (for R34 being (BinOp of R5) holds (for B29 , B30 being (Function of R5 , R5) holds ( R34 * (B29 , B30) ) is (BinOp of R5)))) by L618;
definition
let R5 being non  empty set;
let R34 being (BinOp of R5);
let C43 , C44 being (Function of R5 , R5);
redefine func R34 * (C43 , C44) -> (BinOp of R5);

coherence by L618;
end;
theorem
L623: (for R3 being non  empty set holds (for R4 being non  empty set holds (for R5 being non  empty set holds (for R6 being non  empty set holds (for R7 being non  empty set holds (for R8 being (Element of R3) holds (for R9 being (Element of R4) holds (for B31 being (Function of [: R5 , R6 :] , R7) holds (for B32 being (Function of R3 , R5) holds (for B33 being (Function of R4 , R6) holds ( ( B31 * (B32 , B33) ) . (R8 , R9) ) = ( B31 . (( B32 . R8 ) , ( B33 . R9 )) )))))))))))
proof
let R3 being non  empty set;
let R4 being non  empty set;
let R5 being non  empty set;
let R6 being non  empty set;
let R7 being non  empty set;
let R8 being (Element of R3);
let R9 being (Element of R4);
let C45 being (Function of [: R5 , R6 :] , R7);
let C46 being (Function of R3 , R5);
let C47 being (Function of R4 , R6);
set D80 = ( C45 * (C46 , C47) );
L624: D80 is (Function of [: R3 , R4 :] , R7) by L618;
L625: ( dom D80 ) = [: R3 , R4 :] by L624 , FUNCT_2:def 1;
L626: [ R8 , R9 ] in ( dom D80 ) by L625 , ZFMISC_1:def 2;
thus L627: thesis by L626 , L611;
end;
theorem
L628: (for R5 being non  empty set holds (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds (for R34 being (BinOp of R5) holds (for B34 being (Function of R5 , R5) holds (( ( R34 * (( id R5 ) , B34) ) . (R11 , R12) ) = ( R34 . (R11 , ( B34 . R12 )) ) & ( ( R34 * (B34 , ( id R5 )) ) . (R11 , R12) ) = ( R34 . (( B34 . R11 ) , R12) )))))))
proof
let R5 being non  empty set;
let R11 being (Element of R5);
let R12 being (Element of R5);
let R34 being (BinOp of R5);
let C48 being (Function of R5 , R5);
L629: (( ( id R5 ) . R11 ) = R11 & ( ( id R5 ) . R12 ) = R12) by FUNCT_1:18;
thus L630: thesis by L629 , L623;
end;
theorem
L631: (for R3 being non  empty set holds (for R5 being non  empty set holds (for R24 being (Function of R3 , R5) holds (for R25 being (Function of R3 , R5) holds (for R34 being (BinOp of R5) holds (for R36 being (UnOp of R5) holds ( ( R34 * (( id R5 ) , R36) ) .: (R24 , R25) ) = ( R34 .: (R24 , ( R36 * R25 )) )))))))
proof
let R3 being non  empty set;
let R5 being non  empty set;
let R24 being (Function of R3 , R5);
let R25 being (Function of R3 , R5);
let R34 being (BinOp of R5);
let R36 being (UnOp of R5);
L632:
now
let R8 being (Element of R3);
thus L633: ( ( ( R34 * (( id R5 ) , R36) ) .: (R24 , R25) ) . R8 ) = ( ( R34 * (( id R5 ) , R36) ) . (( R24 . R8 ) , ( R25 . R8 )) ) by FUNCOP_1:37
.= ( R34 . (( R24 . R8 ) , ( R36 . ( R25 . R8 ) )) ) by L628
.= ( R34 . (( R24 . R8 ) , ( ( R36 * R25 ) . R8 )) ) by FUNCT_2:15
.= ( ( R34 .: (R24 , ( R36 * R25 )) ) . R8 ) by FUNCOP_1:37;
end;
thus L634: thesis by L632 , FUNCT_2:63;
end;
theorem
L635: (for R5 being non  empty set holds (for R17 being Nat holds (for R28 being (Tuple of R17 , R5) holds (for R29 being (Tuple of R17 , R5) holds (for R34 being (BinOp of R5) holds (for R36 being (UnOp of R5) holds ( ( R34 * (( id R5 ) , R36) ) .: (R28 , R29) ) = ( R34 .: (R28 , ( R36 * R29 )) )))))))
proof
let R5 being non  empty set;
let R17 being Nat;
let R28 being (Tuple of R17 , R5);
let R29 being (Tuple of R17 , R5);
let R34 being (BinOp of R5);
let R36 being (UnOp of R5);
L636:
now
per cases ;
suppose L637: R17 = ( 0 );

L638: (( ( R34 * (( id R5 ) , R36) ) .: (R28 , R29) ) = ( <*> R5 ) & ( R36 * R29 ) = ( <*> R5 )) by L637 , L66;
thus L639: thesis by L638 , FINSEQ_2:73;
end;
suppose L640: R17 <> ( 0 );

reconsider D81 = ( Seg R17 ) as non  empty set by L640;
L641: (R28 is (Function of D81 , R5) & R29 is (Function of D81 , R5)) by L196;
thus L642: thesis by L641 , L631;
end;
end;
thus L644: thesis by L636;
end;
theorem
L645: (for R5 being non  empty set holds (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds (for R34 being (BinOp of R5) holds (for R36 being (UnOp of R5) holds ((R34 is  associative & R34 is  having_a_unity & R34 is  commutative & R34 is  having_an_inverseOp & R36 = ( the_inverseOp_wrt R34 )) implies (( R36 . ( ( R34 * (( id R5 ) , R36) ) . (R11 , R12) ) ) = ( ( R34 * (R36 , ( id R5 )) ) . (R11 , R12) ) & ( ( R34 * (( id R5 ) , R36) ) . (R11 , R12) ) = ( R36 . ( ( R34 * (R36 , ( id R5 )) ) . (R11 , R12) ) ))))))))
proof
let R5 being non  empty set;
let R11 being (Element of R5);
let R12 being (Element of R5);
let R34 being (BinOp of R5);
let R36 being (UnOp of R5);
assume that
L646: (R34 is  associative & R34 is  having_a_unity)
and
L647: R34 is  commutative
and
L648: (R34 is  having_an_inverseOp & R36 = ( the_inverseOp_wrt R34 ));
L649: R36 is_distributive_wrt R34 by L646 , L647 , L648 , L487;
thus L650: ( R36 . ( ( R34 * (( id R5 ) , R36) ) . (R11 , R12) ) ) = ( R36 . ( R34 . (R11 , ( R36 . R12 )) ) ) by L628
.= ( R34 . (( R36 . R11 ) , ( R36 . ( R36 . R12 ) )) ) by L649 , BINOP_1:def 12
.= ( R34 . (( R36 . R11 ) , R12) ) by L646 , L648 , L483
.= ( ( R34 * (R36 , ( id R5 )) ) . (R11 , R12) ) by L628;
thus L651: thesis by L650 , L646 , L648 , L483;
end;
theorem
L652: (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R34 being (BinOp of R5) holds ((R34 is  associative & R34 is  having_a_unity & R34 is  having_an_inverseOp) implies ( ( R34 * (( id R5 ) , ( the_inverseOp_wrt R34 )) ) . (R10 , R10) ) = ( the_unity_wrt R34 )))))
proof
let R5 being non  empty set;
let R10 being (Element of R5);
let R34 being (BinOp of R5);
assume L653: (R34 is  associative & R34 is  having_a_unity & R34 is  having_an_inverseOp);
set D82 = ( the_inverseOp_wrt R34 );
thus L654: ( ( R34 * (( id R5 ) , D82) ) . (R10 , R10) ) = ( R34 . (R10 , ( D82 . R10 )) ) by L628
.= ( the_unity_wrt R34 ) by L653 , L461;
end;
theorem
L655: (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R34 being (BinOp of R5) holds ((R34 is  associative & R34 is  having_a_unity & R34 is  having_an_inverseOp) implies ( ( R34 * (( id R5 ) , ( the_inverseOp_wrt R34 )) ) . (R10 , ( the_unity_wrt R34 )) ) = R10))))
proof
let R5 being non  empty set;
let R10 being (Element of R5);
let R34 being (BinOp of R5);
assume that
L656: R34 is  associative
and
L657: R34 is  having_a_unity
and
L658: R34 is  having_an_inverseOp;
set D83 = ( the_inverseOp_wrt R34 );
set D84 = ( the_unity_wrt R34 );
thus L659: ( ( R34 * (( id R5 ) , D83) ) . (R10 , D84) ) = ( R34 . (R10 , ( D83 . D84 )) ) by L628
.= ( R34 . (R10 , D84) ) by L656 , L657 , L658 , L478
.= R10 by L657 , SETWISEO:15;
end;
theorem
L660: (for R5 being non  empty set holds (for R10 being (Element of R5) holds (for R34 being (BinOp of R5) holds (for R36 being (UnOp of R5) holds (R34 is  having_a_unity implies ( ( R34 * (( id R5 ) , R36) ) . (( the_unity_wrt R34 ) , R10) ) = ( R36 . R10 ))))))
proof
let R5 being non  empty set;
let R10 being (Element of R5);
let R34 being (BinOp of R5);
let R36 being (UnOp of R5);
assume L661: R34 is  having_a_unity;
set D85 = ( the_unity_wrt R34 );
thus L662: ( ( R34 * (( id R5 ) , R36) ) . (D85 , R10) ) = ( R34 . (D85 , ( R36 . R10 )) ) by L628
.= ( R36 . R10 ) by L661 , SETWISEO:15;
end;
theorem
L663: (for R5 being non  empty set holds (for R34 being (BinOp of R5) holds (for R35 being (BinOp of R5) holds ((R34 is  commutative & R34 is  associative & R34 is  having_a_unity & R34 is  having_an_inverseOp & R35 = ( R34 * (( id R5 ) , ( the_inverseOp_wrt R34 )) )) implies (for R11 being (Element of R5) holds (for R12 being (Element of R5) holds (for R13 being (Element of R5) holds (for R14 being (Element of R5) holds ( R34 . (( R35 . (R11 , R12) ) , ( R35 . (R13 , R14) )) ) = ( R35 . (( R34 . (R11 , R13) ) , ( R34 . (R12 , R14) )) )))))))))
proof
let R5 being non  empty set;
let R34 being (BinOp of R5);
let R35 being (BinOp of R5);
assume that
L664: R34 is  commutative
and
L665: R34 is  associative
and
L666: (R34 is  having_a_unity & R34 is  having_an_inverseOp)
and
L667: R35 = ( R34 * (( id R5 ) , ( the_inverseOp_wrt R34 )) );
set D86 = ( the_inverseOp_wrt R34 );
L668: D86 is_distributive_wrt R34 by L664 , L665 , L666 , L487;
let R11 being (Element of R5);
let R12 being (Element of R5);
let R13 being (Element of R5);
let R14 being (Element of R5);
thus L669: ( R34 . (( R35 . (R11 , R12) ) , ( R35 . (R13 , R14) )) ) = ( R34 . (( R34 . (R11 , ( D86 . R12 )) ) , ( R35 . (R13 , R14) )) ) by L667 , L628
.= ( R34 . (( R34 . (R11 , ( D86 . R12 )) ) , ( R34 . (R13 , ( D86 . R14 )) )) ) by L667 , L628
.= ( R34 . (R11 , ( R34 . (( D86 . R12 ) , ( R34 . (R13 , ( D86 . R14 )) )) )) ) by L665 , BINOP_1:def 3
.= ( R34 . (R11 , ( R34 . (( R34 . (( D86 . R12 ) , R13) ) , ( D86 . R14 )) )) ) by L665 , BINOP_1:def 3
.= ( R34 . (R11 , ( R34 . (( R34 . (R13 , ( D86 . R12 )) ) , ( D86 . R14 )) )) ) by L664 , BINOP_1:def 2
.= ( R34 . (R11 , ( R34 . (R13 , ( R34 . (( D86 . R12 ) , ( D86 . R14 )) )) )) ) by L665 , BINOP_1:def 3
.= ( R34 . (( R34 . (R11 , R13) ) , ( R34 . (( D86 . R12 ) , ( D86 . R14 )) )) ) by L665 , BINOP_1:def 3
.= ( R34 . (( R34 . (R11 , R13) ) , ( D86 . ( R34 . (R12 , R14) ) )) ) by L668 , BINOP_1:def 12
.= ( R35 . (( R34 . (R11 , R13) ) , ( R34 . (R12 , R14) )) ) by L667 , L628;
end;
