:: Sets and Functions of Trees and Joining Operations of Trees
::  by Grzegorz Bancerek
::
:: Received November 27, 1992
:: Copyright (c) 1992-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, SUBSET_1, FINSEQ_1, FUNCT_1, XXREAL_0, ORDINAL4,
      RELAT_1, TREES_1, XBOOLE_0, FINSET_1, TARSKI, TREES_2, FUNCT_2, CARD_1,
      FINSEQ_2, FUNCOP_1, FUNCT_6, ZFMISC_1, PARTFUN1, MCART_1, NAT_1, ARYTM_3,
      TREES_A, ARYTM_1, TREES_3;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, NUMBERS, XCMPLX_0, ORDINAL1,
      NAT_1, RELAT_1, FUNCT_1, FINSEQ_1, FINSET_1, DOMAIN_1, FUNCOP_1,
      RELSET_1, PARTFUN1, BINOP_1, FUNCT_2, FUNCT_3, FINSEQ_2, TREES_1,
      TREES_2, FUNCT_6, XXREAL_0;
 constructors PARTFUN1, BINOP_1, DOMAIN_1, FUNCT_3, SQUARE_1, NAT_1, FINSEQ_2,
      FUNCT_6, TREES_2, RELSET_1;
 registrations XBOOLE_0, SUBSET_1, RELAT_1, FUNCT_1, ORDINAL1, FUNCT_2,
      FINSET_1, XXREAL_0, XREAL_0, NAT_1, FINSEQ_1, TREES_1, TREES_2, CARD_1,
      RELSET_1, FINSEQ_2;
 requirements NUMERALS, REAL, BOOLE, SUBSET, ARITHM;
 definitions TARSKI, XBOOLE_0, FUNCT_1, TREES_1, TREES_2, BINOP_1;
 theorems TARSKI, ZFMISC_1, FINSEQ_1, MCART_1, NAT_1, FUNCT_1, FUNCT_2,
      FUNCT_3, FUNCOP_1, FUNCT_6, FINSEQ_2, FINSEQ_3, ENUMSET1, TREES_1,
      TREES_2, RELAT_1, RELSET_1, XBOOLE_0, XBOOLE_1, XREAL_1, XXREAL_0,
      ORDINAL1, CARD_1;
 schemes NAT_1, CARD_2, XBOOLE_0, FINSEQ_1;

begin
L1: (for R8 being (Element of ( NAT )) holds (for R9 being FinSequence holds (for R10 being FinSequence holds ((1 <= R8 & R8 <= ( len R9 )) implies ( ( R9 ^ R10 ) . R8 ) = ( R9 . R8 )))))
proof
let R8 being (Element of ( NAT ));
let R9 being FinSequence;
let R10 being FinSequence;
assume that
L2: 1 <= R8
and
L3: R8 <= ( len R9 );
L4: R8 in ( dom R9 ) by L2 , L3 , FINSEQ_3:25;
thus L5: thesis by L4 , FINSEQ_1:def 7;
end;
begin
definition
func Trees -> set means 
:L6: (for R1 being set holds (R1 in it iff R1 is Tree));
existence
proof
set D1 = { B1 where B1 is (Subset of ( ( NAT ) * )) : B1 is Tree };
take D1;
let R1 being set;
thus L7: (R1 in D1 implies R1 is Tree)
proof
assume L8: R1 in D1;
L9: (ex B2 being (Subset of ( ( NAT ) * )) st (R1 = B2 & B2 is Tree)) by L8;
thus L10: thesis by L9;
end;

assume L11: R1 is Tree;
reconsider D2 = R1 as Tree by L11;
L12: D2 is (Subset of ( ( NAT ) * )) by TREES_1:def 3;
thus L13: thesis by L12;
end;
uniqueness
proof
defpred S1[ set ] means $1 is Tree;
let C1 , C2 being set;
assume that
L14: (for R1 being set holds (R1 in C1 iff S1[ R1 ]))
and
L15: (for R1 being set holds (R1 in C2 iff S1[ R1 ]));
thus L16: thesis from XBOOLE_0:sch 2(L14 , L15);
end;
end;
registration
cluster ( Trees ) -> non  empty;
coherence
proof
set D3 = the Tree;
L18: D3 in ( Trees ) by L6;
thus L19: thesis by L18;
end;
end;
definition
func FinTrees -> (Subset of ( Trees )) means 
:L21: (for R1 being set holds (R1 in it iff R1 is  finite  finite  finite  finite Tree));
existence
proof
set D4 = { B3 where B3 is (Element of ( Trees )) : B3 is  finite  finite  finite  finite Tree };
L22: D4 c= ( Trees )
proof
let R1 being set;
assume L23: R1 in D4;
L24: (ex B4 being (Element of ( Trees )) st (R1 = B4 & B4 is  finite  finite  finite  finite Tree)) by L23;
thus L25: thesis by L24;
end;
reconsider D5 = D4 as (Subset of ( Trees )) by L22;
take D5;
let R1 being set;
thus L26: (R1 in D5 implies R1 is  finite  finite  finite  finite Tree)
proof
assume L27: R1 in D5;
L28: (ex B5 being (Element of ( Trees )) st (R1 = B5 & B5 is  finite  finite  finite  finite Tree)) by L27;
thus L29: thesis by L28;
end;

assume L30: R1 is  finite  finite  finite  finite Tree;
reconsider D6 = R1 as  finite Tree by L30;
L31: D6 in ( Trees ) by L6;
thus L32: thesis by L31;
end;
uniqueness
proof
defpred S2[ set ] means $1 is  finite  finite  finite  finite Tree;
let C3 , C4 being (Subset of ( Trees ));
assume that
L33: (for R1 being set holds (R1 in C3 iff S2[ R1 ]))
and
L34: (for R1 being set holds (R1 in C4 iff S2[ R1 ]));
thus L35: thesis from XBOOLE_0:sch 2(L33 , L34);
end;
end;
registration
cluster ( FinTrees ) -> non  empty;
coherence
proof
set D7 = the  finite Tree;
L37: D7 in ( FinTrees ) by L21;
thus L38: thesis by L37;
end;
end;
definition
let C5 being set;
attr C5 is  constituted-Trees
means
:L40: (for R1 being set holds (R1 in C5 implies R1 is Tree));
attr C5 is  constituted-FinTrees
means
:L41: (for R1 being set holds (R1 in C5 implies R1 is  finite  finite  finite  finite Tree));
attr C5 is  constituted-DTrees
means
:L42: (for R1 being set holds (R1 in C5 implies R1 is DecoratedTree));
end;
theorem
L44: (for R4 being set holds (R4 is  constituted-Trees iff R4 c= ( Trees )))
proof
let R4 being set;
thus L45: (R4 is  constituted-Trees implies R4 c= ( Trees ))
proof
assume L46: (for R1 being set holds (R1 in R4 implies R1 is Tree));
let R1 being set;
assume L47: R1 in R4;
L48: R1 is Tree by L47 , L46;
thus L49: thesis by L48 , L6;
end;

assume L50: R4 c= ( Trees );
let R1 being set;
assume L51: R1 in R4;
thus L52: thesis by L51 , L50 , L6;
end;
theorem
L53: (for R4 being set holds (R4 is  constituted-FinTrees iff R4 c= ( FinTrees )))
proof
let R4 being set;
thus L54: (R4 is  constituted-FinTrees implies R4 c= ( FinTrees ))
proof
assume L55: (for R1 being set holds (R1 in R4 implies R1 is  finite  finite  finite  finite Tree));
let R1 being set;
assume L56: R1 in R4;
L57: R1 is  finite  finite  finite  finite Tree by L56 , L55;
thus L58: thesis by L57 , L21;
end;

assume L59: R4 c= ( FinTrees );
let R1 being set;
assume L60: R1 in R4;
thus L61: thesis by L60 , L59 , L21;
end;
theorem
L62: (for R4 being set holds (for R5 being set holds ((R4 is  constituted-Trees & R5 is  constituted-Trees) iff ( R4 \/ R5 ) is  constituted-Trees)))
proof
let R4 being set;
let R5 being set;
thus L63: ((R4 is  constituted-Trees & R5 is  constituted-Trees) implies ( R4 \/ R5 ) is  constituted-Trees)
proof
assume that
L64: (for R1 being set holds (R1 in R4 implies R1 is Tree))
and
L65: (for R1 being set holds (R1 in R5 implies R1 is Tree));
let R1 being set;
assume L66: R1 in ( R4 \/ R5 );
L67: (R1 in R4 or R1 in R5) by L66 , XBOOLE_0:def 3;
thus L68: thesis by L67 , L64 , L65;
end;

assume L69: (for R1 being set holds (R1 in ( R4 \/ R5 ) implies R1 is Tree));
thus L70: R4 is  constituted-Trees
proof
let R1 being set;
assume L71: R1 in R4;
L72: R1 in ( R4 \/ R5 ) by L71 , XBOOLE_0:def 3;
thus L73: thesis by L72 , L69;
end;

let R1 being set;
assume L74: R1 in R5;
L75: R1 in ( R4 \/ R5 ) by L74 , XBOOLE_0:def 3;
thus L76: thesis by L75 , L69;
end;
theorem
L77: (for R4 being set holds (for R5 being set holds ((R4 is  constituted-Trees & R5 is  constituted-Trees) implies ( R4 \+\ R5 ) is  constituted-Trees)))
proof
let R4 being set;
let R5 being set;
assume that
L78: (for R1 being set holds (R1 in R4 implies R1 is Tree))
and
L79: (for R1 being set holds (R1 in R5 implies R1 is Tree));
let R1 being set;
assume L80: R1 in ( R4 \+\ R5 );
L81: ((not R1 in R4) iff R1 in R5) by L80 , XBOOLE_0:1;
thus L82: thesis by L81 , L78 , L79;
end;
theorem
L83: (for R4 being set holds (for R5 being set holds (R4 is  constituted-Trees implies (( R4 /\ R5 ) is  constituted-Trees & ( R5 /\ R4 ) is  constituted-Trees & ( R4 \ R5 ) is  constituted-Trees))))
proof
let R4 being set;
let R5 being set;
assume L84: (for R1 being set holds (R1 in R4 implies R1 is Tree));
thus L85: ( R4 /\ R5 ) is  constituted-Trees
proof
let R1 being set;
assume L86: R1 in ( R4 /\ R5 );
L87: R1 in R4 by L86 , XBOOLE_0:def 4;
thus L88: thesis by L87 , L84;
end;

thus L89: ( R5 /\ R4 ) is  constituted-Trees by L85;
let R1 being set;
assume L90: R1 in ( R4 \ R5 );
thus L91: thesis by L90 , L84;
end;
theorem
L92: (for R4 being set holds (for R5 being set holds ((R4 is  constituted-FinTrees & R5 is  constituted-FinTrees) iff ( R4 \/ R5 ) is  constituted-FinTrees)))
proof
let R4 being set;
let R5 being set;
thus L93: ((R4 is  constituted-FinTrees & R5 is  constituted-FinTrees) implies ( R4 \/ R5 ) is  constituted-FinTrees)
proof
assume that
L94: (for R1 being set holds (R1 in R4 implies R1 is  finite  finite  finite  finite Tree))
and
L95: (for R1 being set holds (R1 in R5 implies R1 is  finite  finite  finite  finite Tree));
let R1 being set;
assume L96: R1 in ( R4 \/ R5 );
L97: (R1 in R4 or R1 in R5) by L96 , XBOOLE_0:def 3;
thus L98: thesis by L97 , L94 , L95;
end;

assume L99: (for R1 being set holds (R1 in ( R4 \/ R5 ) implies R1 is  finite  finite  finite  finite Tree));
thus L100: R4 is  constituted-FinTrees
proof
let R1 being set;
assume L101: R1 in R4;
L102: R1 in ( R4 \/ R5 ) by L101 , XBOOLE_0:def 3;
thus L103: thesis by L102 , L99;
end;

let R1 being set;
assume L104: R1 in R5;
L105: R1 in ( R4 \/ R5 ) by L104 , XBOOLE_0:def 3;
thus L106: thesis by L105 , L99;
end;
theorem
L107: (for R4 being set holds (for R5 being set holds ((R4 is  constituted-FinTrees & R5 is  constituted-FinTrees) implies ( R4 \+\ R5 ) is  constituted-FinTrees)))
proof
let R4 being set;
let R5 being set;
assume that
L108: (for R1 being set holds (R1 in R4 implies R1 is  finite  finite  finite  finite Tree))
and
L109: (for R1 being set holds (R1 in R5 implies R1 is  finite  finite  finite  finite Tree));
let R1 being set;
assume L110: R1 in ( R4 \+\ R5 );
L111: ((not R1 in R4) iff R1 in R5) by L110 , XBOOLE_0:1;
thus L112: thesis by L111 , L108 , L109;
end;
theorem
L113: (for R4 being set holds (for R5 being set holds (R4 is  constituted-FinTrees implies (( R4 /\ R5 ) is  constituted-FinTrees & ( R5 /\ R4 ) is  constituted-FinTrees & ( R4 \ R5 ) is  constituted-FinTrees))))
proof
let R4 being set;
let R5 being set;
assume L114: (for R1 being set holds (R1 in R4 implies R1 is  finite  finite  finite  finite Tree));
thus L115: ( R4 /\ R5 ) is  constituted-FinTrees
proof
let R1 being set;
assume L116: R1 in ( R4 /\ R5 );
L117: R1 in R4 by L116 , XBOOLE_0:def 4;
thus L118: thesis by L117 , L114;
end;

thus L119: ( R5 /\ R4 ) is  constituted-FinTrees by L115;
let R1 being set;
assume L120: R1 in ( R4 \ R5 );
thus L121: thesis by L120 , L114;
end;
theorem
L122: (for R4 being set holds (for R5 being set holds ((R4 is  constituted-DTrees & R5 is  constituted-DTrees) iff ( R4 \/ R5 ) is  constituted-DTrees)))
proof
let R4 being set;
let R5 being set;
thus L123: ((R4 is  constituted-DTrees & R5 is  constituted-DTrees) implies ( R4 \/ R5 ) is  constituted-DTrees)
proof
assume that
L124: (for R1 being set holds (R1 in R4 implies R1 is DecoratedTree))
and
L125: (for R1 being set holds (R1 in R5 implies R1 is DecoratedTree));
let R1 being set;
assume L126: R1 in ( R4 \/ R5 );
L127: (R1 in R4 or R1 in R5) by L126 , XBOOLE_0:def 3;
thus L128: thesis by L127 , L124 , L125;
end;

assume L129: (for R1 being set holds (R1 in ( R4 \/ R5 ) implies R1 is DecoratedTree));
thus L130: R4 is  constituted-DTrees
proof
let R1 being set;
assume L131: R1 in R4;
L132: R1 in ( R4 \/ R5 ) by L131 , XBOOLE_0:def 3;
thus L133: thesis by L132 , L129;
end;

let R1 being set;
assume L134: R1 in R5;
L135: R1 in ( R4 \/ R5 ) by L134 , XBOOLE_0:def 3;
thus L136: thesis by L135 , L129;
end;
theorem
L137: (for R4 being set holds (for R5 being set holds ((R4 is  constituted-DTrees & R5 is  constituted-DTrees) implies ( R4 \+\ R5 ) is  constituted-DTrees)))
proof
let R4 being set;
let R5 being set;
assume that
L138: (for R1 being set holds (R1 in R4 implies R1 is DecoratedTree))
and
L139: (for R1 being set holds (R1 in R5 implies R1 is DecoratedTree));
let R1 being set;
assume L140: R1 in ( R4 \+\ R5 );
L141: ((not R1 in R4) iff R1 in R5) by L140 , XBOOLE_0:1;
thus L142: thesis by L141 , L138 , L139;
end;
theorem
L143: (for R4 being set holds (for R5 being set holds (R4 is  constituted-DTrees implies (( R4 /\ R5 ) is  constituted-DTrees & ( R5 /\ R4 ) is  constituted-DTrees & ( R4 \ R5 ) is  constituted-DTrees))))
proof
let R4 being set;
let R5 being set;
assume L144: (for R1 being set holds (R1 in R4 implies R1 is DecoratedTree));
thus L145: ( R4 /\ R5 ) is  constituted-DTrees
proof
let R1 being set;
assume L146: R1 in ( R4 /\ R5 );
L147: R1 in R4 by L146 , XBOOLE_0:def 4;
thus L148: thesis by L147 , L144;
end;

thus L149: ( R5 /\ R4 ) is  constituted-DTrees by L145;
let R1 being set;
assume L150: R1 in ( R4 \ R5 );
thus L151: thesis by L150 , L144;
end;
registration
cluster  empty ->  constituted-Trees  constituted-FinTrees  constituted-DTrees for set;
coherence
proof
let C6 being set;
assume L152: C6 is  empty;
thus L153: (for R1 being set holds (R1 in C6 implies R1 is Tree)) by L152;
thus L154: (for R1 being set holds (R1 in C6 implies R1 is  finite  finite  finite  finite Tree)) by L152;
thus L155: (for R1 being set holds (R1 in C6 implies R1 is DecoratedTree)) by L152;
end;
end;
theorem
L157: (for R1 being set holds ({ R1 } is  constituted-Trees iff R1 is Tree))
proof
let R1 being set;
thus L158: ({ R1 } is  constituted-Trees implies R1 is Tree)
proof
assume L159: (for R2 being set holds (R2 in { R1 } implies R2 is Tree));
L160: R1 in { R1 } by TARSKI:def 1;
thus L161: thesis by L160 , L159;
end;

assume L162: R1 is Tree;
let R2 being set;
thus L163: thesis by L162 , TARSKI:def 1;
end;
theorem
L164: (for R1 being set holds ({ R1 } is  constituted-FinTrees iff R1 is  finite  finite  finite  finite Tree))
proof
let R1 being set;
thus L165: ({ R1 } is  constituted-FinTrees implies R1 is  finite  finite  finite  finite Tree)
proof
assume L166: (for R2 being set holds (R2 in { R1 } implies R2 is  finite  finite  finite  finite Tree));
L167: R1 in { R1 } by TARSKI:def 1;
thus L168: thesis by L167 , L166;
end;

assume L169: R1 is  finite  finite  finite  finite Tree;
let R2 being set;
thus L170: thesis by L169 , TARSKI:def 1;
end;
theorem
L171: (for R1 being set holds ({ R1 } is  constituted-DTrees iff R1 is DecoratedTree))
proof
let R1 being set;
thus L172: ({ R1 } is  constituted-DTrees implies R1 is DecoratedTree)
proof
assume L173: (for R2 being set holds (R2 in { R1 } implies R2 is DecoratedTree));
L174: R1 in { R1 } by TARSKI:def 1;
thus L175: thesis by L174 , L173;
end;

assume L176: R1 is DecoratedTree;
let R2 being set;
thus L177: thesis by L176 , TARSKI:def 1;
end;
theorem
L178: (for R1 being set holds (for R2 being set holds ({ R1 , R2 } is  constituted-Trees iff (R1 is Tree & R2 is Tree))))
proof
let R1 being set;
let R2 being set;
thus L179: ({ R1 , R2 } is  constituted-Trees implies (R1 is Tree & R2 is Tree))
proof
assume L180: (for R3 being set holds (R3 in { R1 , R2 } implies R3 is Tree));
L181: R1 in { R1 , R2 } by TARSKI:def 2;
L182: R2 in { R1 , R2 } by TARSKI:def 2;
thus L183: thesis by L182 , L180 , L181;
end;

assume that
L184: R1 is Tree
and
L185: R2 is Tree;
let R3 being set;
thus L186: thesis by L184 , L185 , TARSKI:def 2;
end;
theorem
L187: (for R1 being set holds (for R2 being set holds ({ R1 , R2 } is  constituted-FinTrees iff (R1 is  finite  finite  finite  finite Tree & R2 is  finite  finite  finite  finite Tree))))
proof
let R1 being set;
let R2 being set;
thus L188: ({ R1 , R2 } is  constituted-FinTrees implies (R1 is  finite  finite  finite  finite Tree & R2 is  finite  finite  finite  finite Tree))
proof
assume L189: (for R3 being set holds (R3 in { R1 , R2 } implies R3 is  finite  finite  finite  finite Tree));
L190: R1 in { R1 , R2 } by TARSKI:def 2;
L191: R2 in { R1 , R2 } by TARSKI:def 2;
thus L192: thesis by L191 , L189 , L190;
end;

assume that
L193: R1 is  finite  finite  finite  finite Tree
and
L194: R2 is  finite  finite  finite  finite Tree;
let R3 being set;
thus L195: thesis by L193 , L194 , TARSKI:def 2;
end;
theorem
L196: (for R1 being set holds (for R2 being set holds ({ R1 , R2 } is  constituted-DTrees iff (R1 is DecoratedTree & R2 is DecoratedTree))))
proof
let R1 being set;
let R2 being set;
thus L197: ({ R1 , R2 } is  constituted-DTrees implies (R1 is DecoratedTree & R2 is DecoratedTree))
proof
assume L198: (for R3 being set holds (R3 in { R1 , R2 } implies R3 is DecoratedTree));
L199: R1 in { R1 , R2 } by TARSKI:def 2;
L200: R2 in { R1 , R2 } by TARSKI:def 2;
thus L201: thesis by L200 , L198 , L199;
end;

assume that
L202: R1 is DecoratedTree
and
L203: R2 is DecoratedTree;
let R3 being set;
thus L204: thesis by L202 , L203 , TARSKI:def 2;
end;
theorem
L205: (for R4 being set holds (for R5 being set holds ((R4 is  constituted-Trees & R5 c= R4) implies R5 is  constituted-Trees)))
proof
let R4 being set;
let R5 being set;
assume L206: (for R1 being set holds (R1 in R4 implies R1 is Tree));
assume L207: R5 c= R4;
let R1 being set;
assume L208: R1 in R5;
thus L209: thesis by L208 , L206 , L207;
end;
theorem
L210: (for R4 being set holds (for R5 being set holds ((R4 is  constituted-FinTrees & R5 c= R4) implies R5 is  constituted-FinTrees)))
proof
let R4 being set;
let R5 being set;
assume L211: (for R1 being set holds (R1 in R4 implies R1 is  finite  finite  finite  finite Tree));
assume L212: R5 c= R4;
let R1 being set;
assume L213: R1 in R5;
thus L214: thesis by L213 , L211 , L212;
end;
theorem
L215: (for R4 being set holds (for R5 being set holds ((R4 is  constituted-DTrees & R5 c= R4) implies R5 is  constituted-DTrees)))
proof
let R4 being set;
let R5 being set;
assume L216: (for R1 being set holds (R1 in R4 implies R1 is DecoratedTree));
assume L217: R5 c= R4;
let R1 being set;
assume L218: R1 in R5;
thus L219: thesis by L218 , L216 , L217;
end;
registration
cluster  finite  constituted-Trees  constituted-FinTrees non  empty for set;
existence
proof
set D8 = the  finite Tree;
take { D8 };
thus L220: thesis by L157 , L164;
end;
cluster  finite  constituted-DTrees non  empty for set;
existence
proof
set D9 = the DecoratedTree;
take { D9 };
thus L221: thesis by L171;
end;
end;
registration
cluster  constituted-FinTrees ->  constituted-Trees for set;
coherence
proof
let C7 being set;
assume L223: C7 is  constituted-FinTrees;
thus L224: (for R1 being set holds (R1 in C7 implies R1 is Tree)) by L223 , L41;
end;
end;
registration
let C8 being  constituted-Trees set;
cluster  ->  constituted-Trees for (Subset of C8);
coherence
proof
let C9 being (Subset of C8);
let R1 being set;
thus L226: thesis by L40;
end;
end;
registration
let C10 being  constituted-FinTrees set;
cluster  ->  constituted-FinTrees for (Subset of C10);
coherence
proof
let C11 being (Subset of C10);
let R1 being set;
thus L228: thesis by L41;
end;
end;
registration
let C12 being  constituted-DTrees set;
cluster  ->  constituted-DTrees for (Subset of C12);
coherence
proof
let C13 being (Subset of C12);
let R1 being set;
thus L230: thesis by L42;
end;
end;
registration
let C14 being  constituted-Trees non  empty set;
cluster  -> non  empty  Tree-like for (Element of C14);
coherence by L40;
end;
registration
let C15 being  constituted-FinTrees non  empty set;
cluster  ->  finite for (Element of C15);
coherence by L41;
end;
registration
cluster  constituted-DTrees ->  functional for set;
coherence
proof
let C16 being set;
assume L234: C16 is  constituted-DTrees;
let C17 being set;
thus L235: thesis by L234 , L42;
end;
end;
registration
let C18 being  constituted-DTrees non  empty set;
cluster  ->  DecoratedTree-like for (Element of C18);
coherence by L42;
end;
registration
cluster ( Trees ) ->  constituted-Trees;
coherence
proof
let R1 being set;
thus L238: thesis by L6;
end;
end;
registration
cluster ( FinTrees ) ->  constituted-FinTrees;
coherence
proof
let R1 being set;
thus L240: thesis by L21;
end;
end;
registration
cluster  constituted-FinTrees non  empty for (Subset of ( Trees ));
existence
proof
take ( FinTrees );
thus L242: thesis;
end;
end;
definition
let C19 being non  empty set;
mode DTree-set of C19
 -> non  empty set
means :L244: (for R1 being set holds (R1 in it implies R1 is (DecoratedTree of C19)));
existence
proof
take { ( ( elementary_tree ( 0 ) ) --> the (Element of C19) ) };
thus L245: thesis by TARSKI:def 1;
end;
end;
registration
let C20 being non  empty set;
cluster  ->  constituted-DTrees for (DTree-set of C20);
coherence
proof
let C21 being (DTree-set of C20);
let R1 being set;
thus L247: thesis by L244;
end;
end;
registration
let C22 being non  empty set;
cluster  finite non  empty for (DTree-set of C22);
existence
proof
set D10 = { the (DecoratedTree of C22) };
L249: D10 is  constituted-DTrees
proof
let R1 being set;
thus L250: thesis by TARSKI:def 1;
end;
reconsider D11 = D10 as non  empty  constituted-DTrees set by L249;
L251: D11 is (DTree-set of C22)
proof
let R1 being set;
thus L252: thesis by TARSKI:def 1;
end;
reconsider D12 = D11 as (DTree-set of C22) by L251;
take D12;
thus L253: thesis;
end;
end;
registration
let C23 being non  empty set;
let C24 being non  empty (DTree-set of C23);
cluster  -> C23 -valued for (Element of C24);
coherence by L244;
end;
definition
let C25 being Tree;
let C26 being non  empty set;
redefine func Funcs (C25 , C26) -> non  empty (DTree-set of C26);

coherence
proof
set D13 = ( Funcs (C25 , C26) );
L256: D13 is  constituted-DTrees
proof
let R1 being set;
assume L257: R1 in D13;
L258: (ex B6 being Function st (R1 = B6 & ( dom B6 ) = C25 & ( rng B6 ) c= C26)) by L257 , FUNCT_2:def 2;
thus L259: thesis by L258 , TREES_2:def 8;
end;
reconsider D14 = D13 as non  empty  constituted-DTrees set by L256;
L260: D14 is (DTree-set of C26)
proof
let R1 being set;
assume L261: R1 in D14;
L262: (ex B7 being Function st (R1 = B7 & ( dom B7 ) = C25 & ( rng B7 ) c= C26)) by L261 , FUNCT_2:def 2;
thus L263: thesis by L262 , RELAT_1:def 19 , TREES_2:def 8;
end;
reconsider D15 = D14 as (DTree-set of C26) by L260;
set D16 = the (Function of C25 , C26);
L264: ( dom D16 ) = C25 by FUNCT_2:def 1;
L265: ( rng D16 ) c= C26;
L266: D16 in D15 by L265 , L264 , FUNCT_2:def 2;
thus L267: thesis by L266;
end;
end;
registration
let C27 being Tree;
let C28 being non  empty set;
cluster  ->  DecoratedTree-like for (Function of C27 , C28);
coherence
proof
let C29 being (Function of C27 , C28);
thus L269: ( dom C29 ) is Tree by FUNCT_2:def 1;
end;
end;
definition
let C30 being non  empty set;
func Trees C30 -> (DTree-set of C30) means 
:L271: (for B8 being (DecoratedTree of C30) holds B8 in it);
existence
proof
set D17 = { ( Funcs (B9 , C30) ) where B9 is (Element of ( Trees )) : (not contradiction) };
set D18 = ( union D17 );
set D19 = ( the (Element of ( Trees )) --> the (Element of C30) );
L272: D19 in ( Funcs (the (Element of ( Trees )) , C30) ) by FUNCT_2:8;
L273: ( Funcs (the (Element of ( Trees )) , C30) ) in D17;
L274: D18 is  constituted-DTrees
proof
let R1 being set;
assume L275: R1 in D18;
consider R4 being set such that L276: R1 in R4 and L277: R4 in { ( Funcs (B10 , C30) ) where B10 is (Element of ( Trees )) : (not contradiction) } by L275 , TARSKI:def 4;
L278: (ex B11 being (Element of ( Trees )) st R4 = ( Funcs (B11 , C30) )) by L277;
thus L279: thesis by L278 , L276;
end;
reconsider D20 = D18 as non  empty  constituted-DTrees set by L274 , L273 , L272 , TARSKI:def 4;
L280: D20 is (DTree-set of C30)
proof
let R1 being set;
assume L281: R1 in D20;
consider R4 being set such that L282: R1 in R4 and L283: R4 in { ( Funcs (B12 , C30) ) where B12 is (Element of ( Trees )) : (not contradiction) } by L281 , TARSKI:def 4;
L284: (ex B13 being (Element of ( Trees )) st R4 = ( Funcs (B13 , C30) )) by L283;
thus L285: thesis by L284 , L282;
end;
reconsider D21 = D20 as (DTree-set of C30) by L280;
take D21;
let C31 being (DecoratedTree of C30);
reconsider D22 = ( dom C31 ) as (Element of ( Trees )) by L6;
L286: ( rng C31 ) c= C30;
L287: C31 in ( Funcs (D22 , C30) ) by L286 , FUNCT_2:def 2;
L288: ( Funcs (D22 , C30) ) in { ( Funcs (B14 , C30) ) where B14 is (Element of ( Trees )) : (not contradiction) };
thus L289: thesis by L288 , L287 , TARSKI:def 4;
end;
uniqueness
proof
let C32 , C33 being (DTree-set of C30);
assume that
L290: (for B15 being (DecoratedTree of C30) holds B15 in C32)
and
L291: (for B16 being (DecoratedTree of C30) holds B16 in C33);
thus L292: C32 c= C33
proof
let R1 being set;
thus L293: thesis by L291;
end;

let R1 being set;
thus L294: thesis by L290;
end;
end;
registration
let C34 being non  empty set;
cluster ( Trees C34 ) -> non  empty;
coherence;
end;
definition
let C35 being non  empty set;
func FinTrees C35 -> (DTree-set of C35) means 
:L297: (for B17 being (DecoratedTree of C35) holds (( dom B17 ) is  finite iff B17 in it));
existence
proof
defpred S3[ set ] means (ex B18 being (DecoratedTree of C35) st ($1 = B18 & ( dom B18 ) is  finite));
consider R4 being set such that L298: (for R1 being set holds (R1 in R4 iff (R1 in ( Trees C35 ) & S3[ R1 ]))) from XBOOLE_0:sch 1;
set D23 = the  finite (DecoratedTree of C35);
L299: ( dom D23 ) is  finite;
L300: D23 in ( Trees C35 ) by L271;
L301: R4 is non  empty by L300 , L298 , L299;
L302:
now
let R1 being set;
assume L303: R1 in R4;
L304: R1 in ( Trees C35 ) by L303 , L298;
thus L305: R1 is (DecoratedTree of C35) by L304;
end;
reconsider D24 = R4 as (DTree-set of C35) by L302 , L301 , L244;
take D24;
let C36 being (DecoratedTree of C35);
L306: C36 in ( Trees C35 ) by L271;
thus L307: (( dom C36 ) is  finite implies C36 in D24) by L306 , L298;
assume L308: C36 in D24;
L309: (ex B19 being (DecoratedTree of C35) st (C36 = B19 & ( dom B19 ) is  finite)) by L308 , L298;
thus L310: thesis by L309;
end;
uniqueness
proof
let C37 , C38 being (DTree-set of C35);
assume that
L311: (for B20 being (DecoratedTree of C35) holds (( dom B20 ) is  finite iff B20 in C37))
and
L312: (for B21 being (DecoratedTree of C35) holds (( dom B21 ) is  finite iff B21 in C38));
thus L313: C37 c= C38
proof
let R1 being set;
assume L314: R1 in C37;
reconsider D25 = R1 as (DecoratedTree of C35) by L314;
L315: ( dom D25 ) is  finite by L311 , L314;
thus L316: thesis by L315 , L312;
end;

let R1 being set;
assume L317: R1 in C38;
reconsider D26 = R1 as (DecoratedTree of C35) by L317;
L318: ( dom D26 ) is  finite by L312 , L317;
thus L319: thesis by L318 , L311;
end;
end;
theorem
L321: (for B22 being non  empty set holds ( FinTrees B22 ) c= ( Trees B22 ))
proof
let C39 being non  empty set;
let R1 being set;
thus L322: thesis by L271;
end;
begin
definition
let C40 being Function;
attr C40 is  Tree-yielding
means
:L323: ( rng C40 ) is  constituted-Trees;
attr C40 is  FinTree-yielding
means
:L324: ( rng C40 ) is  constituted-FinTrees;
attr C40 is  DTree-yielding
means
:L325: ( rng C40 ) is  constituted-DTrees;
end;
registration
cluster  empty ->  Tree-yielding  FinTree-yielding  DTree-yielding for Function;
coherence
proof
let C41 being Function;
assume L327: C41 is  empty;
thus L328: ( rng C41 ) is  constituted-Trees by L327;
thus L329: ( rng C41 ) is  constituted-FinTrees by L327;
thus L330: ( rng C41 ) is  constituted-DTrees by L327;
end;
end;
theorem
L332: (for R14 being Function holds (R14 is  Tree-yielding iff (for R1 being set holds (R1 in ( dom R14 ) implies ( R14 . R1 ) is Tree))))
proof
let R14 being Function;
thus L333: (R14 is  Tree-yielding implies (for R1 being set holds (R1 in ( dom R14 ) implies ( R14 . R1 ) is Tree)))
proof
assume L334: (for R1 being set holds (R1 in ( rng R14 ) implies R1 is Tree));
let R1 being set;
assume L335: R1 in ( dom R14 );
L336: ( R14 . R1 ) in ( rng R14 ) by L335 , FUNCT_1:def 3;
thus L337: thesis by L336 , L334;
end;

assume L338: (for R1 being set holds (R1 in ( dom R14 ) implies ( R14 . R1 ) is Tree));
let R1 being set;
assume L339: R1 in ( rng R14 );
L340: (ex R2 being set st (R2 in ( dom R14 ) & R1 = ( R14 . R2 ))) by L339 , FUNCT_1:def 3;
thus L341: thesis by L340 , L338;
end;
theorem
L342: (for R14 being Function holds (R14 is  FinTree-yielding iff (for R1 being set holds (R1 in ( dom R14 ) implies ( R14 . R1 ) is  finite  finite  finite  finite Tree))))
proof
let R14 being Function;
thus L343: (R14 is  FinTree-yielding implies (for R1 being set holds (R1 in ( dom R14 ) implies ( R14 . R1 ) is  finite  finite  finite  finite Tree)))
proof
assume L344: (for R1 being set holds (R1 in ( rng R14 ) implies R1 is  finite  finite  finite  finite Tree));
let R1 being set;
assume L345: R1 in ( dom R14 );
L346: ( R14 . R1 ) in ( rng R14 ) by L345 , FUNCT_1:def 3;
thus L347: thesis by L346 , L344;
end;

assume L348: (for R1 being set holds (R1 in ( dom R14 ) implies ( R14 . R1 ) is  finite  finite  finite  finite Tree));
let R1 being set;
assume L349: R1 in ( rng R14 );
L350: (ex R2 being set st (R2 in ( dom R14 ) & R1 = ( R14 . R2 ))) by L349 , FUNCT_1:def 3;
thus L351: thesis by L350 , L348;
end;
theorem
L352: (for R14 being Function holds (R14 is  DTree-yielding iff (for R1 being set holds (R1 in ( dom R14 ) implies ( R14 . R1 ) is DecoratedTree))))
proof
let R14 being Function;
thus L353: (R14 is  DTree-yielding implies (for R1 being set holds (R1 in ( dom R14 ) implies ( R14 . R1 ) is DecoratedTree)))
proof
assume L354: (for R1 being set holds (R1 in ( rng R14 ) implies R1 is DecoratedTree));
let R1 being set;
assume L355: R1 in ( dom R14 );
L356: ( R14 . R1 ) in ( rng R14 ) by L355 , FUNCT_1:def 3;
thus L357: thesis by L356 , L354;
end;

assume L358: (for R1 being set holds (R1 in ( dom R14 ) implies ( R14 . R1 ) is DecoratedTree));
let R1 being set;
assume L359: R1 in ( rng R14 );
L360: (ex R2 being set st (R2 in ( dom R14 ) & R1 = ( R14 . R2 ))) by L359 , FUNCT_1:def 3;
thus L361: thesis by L360 , L358;
end;
theorem
L362: (for R9 being FinSequence holds (for R10 being FinSequence holds ((R9 is  Tree-yielding & R10 is  Tree-yielding) iff ( R9 ^ R10 ) is  Tree-yielding)))
proof
let R9 being FinSequence;
let R10 being FinSequence;
L363: ( rng ( R9 ^ R10 ) ) = ( ( rng R9 ) \/ ( rng R10 ) ) by FINSEQ_1:31;
thus L364: ((R9 is  Tree-yielding & R10 is  Tree-yielding) implies ( R9 ^ R10 ) is  Tree-yielding)
proof
assume that
L365: ( rng R9 ) is  constituted-Trees
and
L366: ( rng R10 ) is  constituted-Trees;
thus L367: ( rng ( R9 ^ R10 ) ) is  constituted-Trees by L363 , L365 , L366 , L62;
end;

assume L368: ( rng ( R9 ^ R10 ) ) is  constituted-Trees;
thus L369: ( rng R9 ) is  constituted-Trees by L368 , L363 , L62;
thus L370: ( rng R10 ) is  constituted-Trees by L363 , L368 , L62;
end;
theorem
L371: (for R9 being FinSequence holds (for R10 being FinSequence holds ((R9 is  FinTree-yielding & R10 is  FinTree-yielding) iff ( R9 ^ R10 ) is  FinTree-yielding)))
proof
let R9 being FinSequence;
let R10 being FinSequence;
L372: ( rng ( R9 ^ R10 ) ) = ( ( rng R9 ) \/ ( rng R10 ) ) by FINSEQ_1:31;
thus L373: ((R9 is  FinTree-yielding & R10 is  FinTree-yielding) implies ( R9 ^ R10 ) is  FinTree-yielding)
proof
assume that
L374: ( rng R9 ) is  constituted-FinTrees
and
L375: ( rng R10 ) is  constituted-FinTrees;
thus L376: ( rng ( R9 ^ R10 ) ) is  constituted-FinTrees by L372 , L374 , L375 , L92;
end;

assume L377: ( rng ( R9 ^ R10 ) ) is  constituted-FinTrees;
thus L378: ( rng R9 ) is  constituted-FinTrees by L377 , L372 , L92;
thus L379: ( rng R10 ) is  constituted-FinTrees by L372 , L377 , L92;
end;
theorem
L380: (for R9 being FinSequence holds (for R10 being FinSequence holds ((R9 is  DTree-yielding & R10 is  DTree-yielding) iff ( R9 ^ R10 ) is  DTree-yielding)))
proof
let R9 being FinSequence;
let R10 being FinSequence;
L381: ( rng ( R9 ^ R10 ) ) = ( ( rng R9 ) \/ ( rng R10 ) ) by FINSEQ_1:31;
thus L382: ((R9 is  DTree-yielding & R10 is  DTree-yielding) implies ( R9 ^ R10 ) is  DTree-yielding)
proof
assume that
L383: ( rng R9 ) is  constituted-DTrees
and
L384: ( rng R10 ) is  constituted-DTrees;
thus L385: ( rng ( R9 ^ R10 ) ) is  constituted-DTrees by L381 , L383 , L384 , L122;
end;

assume L386: ( rng ( R9 ^ R10 ) ) is  constituted-DTrees;
thus L387: ( rng R9 ) is  constituted-DTrees by L386 , L381 , L122;
thus L388: ( rng R10 ) is  constituted-DTrees by L381 , L386 , L122;
end;
theorem
L389: (for R1 being set holds (<* R1 *> is  Tree-yielding iff R1 is Tree))
proof
let R1 being set;
L390: (R1 is Tree iff { R1 } is  constituted-Trees) by L157;
L391: ( rng <* R1 *> ) = { R1 } by FINSEQ_1:39;
thus L392: thesis by L391 , L390 , L323;
end;
theorem
L393: (for R1 being set holds (<* R1 *> is  FinTree-yielding iff R1 is  finite  finite  finite  finite Tree))
proof
let R1 being set;
L394: (R1 is  finite  finite  finite  finite Tree iff { R1 } is  constituted-FinTrees) by L164;
L395: ( rng <* R1 *> ) = { R1 } by FINSEQ_1:39;
thus L396: thesis by L395 , L394 , L324;
end;
theorem
L397: (for R1 being set holds (<* R1 *> is  DTree-yielding iff R1 is DecoratedTree))
proof
let R1 being set;
L398: (R1 is DecoratedTree iff { R1 } is  constituted-DTrees) by L171;
L399: ( rng <* R1 *> ) = { R1 } by FINSEQ_1:39;
thus L400: thesis by L399 , L398 , L325;
end;
theorem
L401: (for R1 being set holds (for R2 being set holds (<* R1 , R2 *> is  Tree-yielding iff (R1 is Tree & R2 is Tree))))
proof
let R1 being set;
let R2 being set;
L402: ((R1 is Tree & R2 is Tree) iff { R1 , R2 } is  constituted-Trees) by L178;
L403: ( rng <* R1 , R2 *> ) = { R1 , R2 } by FINSEQ_2:127;
thus L404: thesis by L403 , L402 , L323;
end;
theorem
L405: (for R1 being set holds (for R2 being set holds (<* R1 , R2 *> is  FinTree-yielding iff (R1 is  finite  finite  finite  finite Tree & R2 is  finite  finite  finite  finite Tree))))
proof
let R1 being set;
let R2 being set;
L406: ((R1 is  finite  finite  finite  finite Tree & R2 is  finite  finite  finite  finite Tree) iff { R1 , R2 } is  constituted-FinTrees) by L187;
L407: ( rng <* R1 , R2 *> ) = { R1 , R2 } by FINSEQ_2:127;
thus L408: thesis by L407 , L406 , L324;
end;
theorem
L409: (for R1 being set holds (for R2 being set holds (<* R1 , R2 *> is  DTree-yielding iff (R1 is DecoratedTree & R2 is DecoratedTree))))
proof
let R1 being set;
let R2 being set;
L410: ((R1 is DecoratedTree & R2 is DecoratedTree) iff { R1 , R2 } is  constituted-DTrees) by L196;
L411: ( rng <* R1 , R2 *> ) = { R1 , R2 } by FINSEQ_2:127;
thus L412: thesis by L411 , L410 , L325;
end;
theorem
L413: (for R1 being set holds (for R6 being (Element of ( NAT )) holds (R6 <> ( 0 ) implies (( R6 |-> R1 ) is  Tree-yielding iff R1 is Tree))))
proof
let R1 being set;
let R6 being (Element of ( NAT ));
assume L414: R6 <> ( 0 );
L415: ( R6 |-> R1 ) = ( ( Seg R6 ) --> R1 ) by FINSEQ_2:def 2;
L416: ( rng ( R6 |-> R1 ) ) = { R1 } by L415 , L414 , FUNCOP_1:8;
L417: (R1 is Tree iff ( rng ( R6 |-> R1 ) ) is  constituted-Trees) by L416 , L157;
thus L418: thesis by L417 , L323;
end;
theorem
L419: (for R1 being set holds (for R6 being (Element of ( NAT )) holds (R6 <> ( 0 ) implies (( R6 |-> R1 ) is  FinTree-yielding iff R1 is  finite  finite  finite  finite Tree))))
proof
let R1 being set;
let R6 being (Element of ( NAT ));
assume L420: R6 <> ( 0 );
L421: ( R6 |-> R1 ) = ( ( Seg R6 ) --> R1 ) by FINSEQ_2:def 2;
L422: ( rng ( R6 |-> R1 ) ) = { R1 } by L421 , L420 , FUNCOP_1:8;
L423: (R1 is  finite  finite  finite  finite Tree iff ( rng ( R6 |-> R1 ) ) is  constituted-FinTrees) by L422 , L164;
thus L424: thesis by L423 , L324;
end;
theorem
L425: (for R1 being set holds (for R6 being (Element of ( NAT )) holds (R6 <> ( 0 ) implies (( R6 |-> R1 ) is  DTree-yielding iff R1 is DecoratedTree))))
proof
let R1 being set;
let R6 being (Element of ( NAT ));
assume L426: R6 <> ( 0 );
L427: ( R6 |-> R1 ) = ( ( Seg R6 ) --> R1 ) by FINSEQ_2:def 2;
L428: ( rng ( R6 |-> R1 ) ) = { R1 } by L427 , L426 , FUNCOP_1:8;
L429: (R1 is DecoratedTree iff ( rng ( R6 |-> R1 ) ) is  constituted-DTrees) by L428 , L171;
thus L430: thesis by L429 , L325;
end;
registration
cluster  Tree-yielding  FinTree-yielding non  empty for FinSequence;
existence
proof
set D27 = the  finite Tree;
take <* D27 *>;
thus L431: thesis by L389 , L393;
end;
cluster  DTree-yielding non  empty for FinSequence;
existence
proof
set D28 = the DecoratedTree;
take <* D28 *>;
thus L432: thesis by L397;
end;
end;
registration
cluster  Tree-yielding  FinTree-yielding non  empty for Function;
existence
proof
set D29 = the  Tree-yielding  FinTree-yielding non  empty FinSequence;
take D29;
thus L434: thesis;
end;
cluster  DTree-yielding non  empty for Function;
existence
proof
set D30 = the  DTree-yielding non  empty FinSequence;
take D30;
thus L435: thesis;
end;
end;
registration
cluster  FinTree-yielding ->  Tree-yielding for Function;
coherence
proof
let C42 being Function;
assume L437: C42 is  FinTree-yielding;
L438: ( rng C42 ) is  constituted-FinTrees  constituted-FinTrees  constituted-FinTrees  constituted-FinTrees set by L437 , L324;
thus L439: ( rng C42 ) is  constituted-Trees by L438;
end;
end;
registration
let C43 being  constituted-Trees non  empty set;
cluster  ->  Tree-yielding for (FinSequence of C43);
coherence
proof
let C44 being (FinSequence of C43);
let R1 being set;
L441: ( rng C44 ) c= C43;
thus L442: thesis by L441;
end;
end;
registration
let C45 , C46 being  Tree-yielding FinSequence;
cluster ( C45 ^ C46 ) ->  Tree-yielding;
coherence by L362;
end;
registration
let C47 being  constituted-FinTrees non  empty set;
cluster  ->  FinTree-yielding for (FinSequence of C47);
coherence
proof
let C48 being (FinSequence of C47);
let R1 being set;
L445: ( rng C48 ) c= C47;
thus L446: thesis by L445;
end;
end;
registration
let C49 , C50 being  FinTree-yielding FinSequence;
cluster ( C49 ^ C50 ) ->  FinTree-yielding;
coherence by L371;
end;
registration
let C51 being  constituted-DTrees non  empty set;
cluster  ->  DTree-yielding for (FinSequence of C51);
coherence
proof
let C52 being (FinSequence of C51);
let R1 being set;
L449: ( rng C52 ) c= C51;
thus L450: thesis by L449;
end;
end;
registration
let C53 , C54 being  DTree-yielding FinSequence;
cluster ( C53 ^ C54 ) ->  DTree-yielding;
coherence by L380;
end;
registration
let C55 being Tree;
cluster <* C55 *> ->  Tree-yielding non  empty;
coherence by L389;
let C56 being Tree;
cluster <* C55 , C56 *> ->  Tree-yielding non  empty;
coherence by L401;
end;
registration
let C57 being (Element of ( NAT ));
let C58 being Tree;
cluster ( C57 |-> C58 ) ->  Tree-yielding;
coherence
proof
L454: ( ( 0 ) |-> C58 ) = ( {} );
thus L455: thesis by L454 , L413;
end;
end;
registration
let C59 being  finite Tree;
cluster <* C59 *> ->  FinTree-yielding;
coherence by L393;
let C60 being  finite Tree;
cluster <* C59 , C60 *> ->  FinTree-yielding;
coherence by L405;
end;
registration
let C61 being (Element of ( NAT ));
let C62 being  finite Tree;
cluster ( C61 |-> C62 ) ->  FinTree-yielding;
coherence
proof
L458: ( ( 0 ) |-> C62 ) = ( {} );
thus L459: thesis by L458 , L419;
end;
end;
registration
let C63 being DecoratedTree;
cluster <* C63 *> ->  DTree-yielding non  empty;
coherence by L397;
let C64 being DecoratedTree;
cluster <* C63 , C64 *> ->  DTree-yielding non  empty;
coherence by L409;
end;
registration
let C65 being (Element of ( NAT ));
let C66 being DecoratedTree;
cluster ( C65 |-> C66 ) ->  DTree-yielding;
coherence
proof
L462: ( ( 0 ) |-> C66 ) = ( {} );
thus L463: thesis by L462 , L425;
end;
end;
theorem
L465: (for B23 being  DTree-yielding Function holds (( dom ( doms B23 ) ) = ( dom B23 ) & ( doms B23 ) is  Tree-yielding))
proof
let C67 being  DTree-yielding Function;
L466: ( dom ( doms C67 ) ) = ( C67 " ( SubFuncs ( rng C67 ) ) ) by FUNCT_6:def 2;
thus L467: ( dom ( doms C67 ) ) c= ( dom C67 ) by L466 , RELAT_1:132;
thus L468: ( dom C67 ) c= ( dom ( doms C67 ) )
proof
let R1 being set;
assume L469: R1 in ( dom C67 );
L470: ( C67 . R1 ) is DecoratedTree by L469 , L352;
thus L471: thesis by L470 , L466 , L469 , FUNCT_6:19;
end;

L472:
now
let R1 being set;
assume L473: R1 in ( dom ( doms C67 ) );
L474: R1 in ( dom C67 ) by L473 , L466 , FUNCT_6:19;
reconsider D31 = ( C67 . R1 ) as DecoratedTree by L474 , L352;
L475: ( ( doms C67 ) . R1 ) = ( dom D31 ) by L474 , FUNCT_6:22;
thus L476: ( ( doms C67 ) . R1 ) is Tree by L475;
end;
thus L477: thesis by L472 , L332;
end;
registration
let C68 being  DTree-yielding FinSequence;
cluster ( doms C68 ) ->  Tree-yielding  FinSequence-like;
coherence
proof
L478: ( dom ( doms C68 ) ) = ( dom C68 ) by L465;
L479: ( Seg ( len C68 ) ) = ( dom C68 ) by FINSEQ_1:def 3;
thus L480: thesis by L479 , L478 , L465 , FINSEQ_1:def 2;
end;
end;
theorem
L482: (for B24 being  DTree-yielding FinSequence holds ( len ( doms B24 ) ) = ( len B24 ))
proof
let C69 being  DTree-yielding FinSequence;
L483: ( dom C69 ) = ( dom ( doms C69 ) ) by L465;
L484: ( Seg ( len C69 ) ) = ( dom C69 ) by FINSEQ_1:def 3;
thus L485: thesis by L484 , L483 , FINSEQ_1:def 3;
end;
L486: (for B25 being non  empty set holds (for B26 being (DecoratedTree of B25) holds B26 is (Function of ( dom B26 ) , B25)))
proof
let C70 being non  empty set;
let C71 being (DecoratedTree of C70);
L487: ( rng C71 ) c= C70;
thus L488: thesis by L487 , FUNCT_2:def 1 , RELSET_1:4;
end;
begin
definition
let C72 , C73 being non  empty set;
mode DecoratedTree of C72 , C73
 is (DecoratedTree of [: C72 , C73 :]);
mode DTree-set of C72 , C73
 is (DTree-set of [: C72 , C73 :]);
end;
registration
let C74 , C75 being DecoratedTree;
cluster <: C74 , C75 :> ->  DecoratedTree-like;
coherence
proof
L490: ( dom <: C74 , C75 :> ) = ( ( dom C74 ) /\ ( dom C75 ) ) by FUNCT_3:def 7;
thus L491: thesis by L490 , TREES_2:def 8;
end;
end;
registration
let C76 , C77 being non  empty set;
let C78 being (DecoratedTree of C76);
let C79 being (DecoratedTree of C77);
cluster <: C78 , C79 :> -> [: C76 , C77 :] -valued;
coherence
proof
L493: ( rng <: C78 , C79 :> ) c= [: ( rng C78 ) , ( rng C79 ) :] by FUNCT_3:51;
L494: [: ( rng C78 ) , ( rng C79 ) :] c= [: C76 , C77 :] by ZFMISC_1:96;
L495: ( rng <: C78 , C79 :> ) c= [: C76 , C77 :] by L494 , L493 , XBOOLE_1:1;
thus L496: thesis by L495 , RELAT_1:def 19;
end;
end;
registration
let C80 , C81 being non  empty set;
let C82 being (DecoratedTree of C80);
let C83 being (Function of C80 , C81);
cluster ( C83 * C82 ) ->  DecoratedTree-like;
coherence
proof
reconsider D32 = C82 as (Function of ( dom C82 ) , C80) by L486;
reconsider D33 = ( C83 * D32 ) as (Function of ( dom C82 ) , C81);
L498: ( rng D33 ) c= C81;
thus L499: thesis by L498;
end;
end;
definition
let C84 , C85 being non  empty set;
redefine func pr1 (C84 , C85) -> (Function of [: C84 , C85 :] , C84);

coherence
proof
thus L501: ( pr1 (C84 , C85) ) is (Function of [: C84 , C85 :] , C84);
end;
redefine func pr2 (C84 , C85) -> (Function of [: C84 , C85 :] , C85);

coherence
proof
thus L502: ( pr2 (C84 , C85) ) is (Function of [: C84 , C85 :] , C85);
end;
end;
definition
let C86 , C87 being non  empty set;
let C88 being (DecoratedTree of C86 , C87);
func C88 `1 -> (DecoratedTree of C86) equals 
( ( pr1 (C86 , C87) ) * C88 );
correctness;
func C88 `2 -> (DecoratedTree of C87) equals 
( ( pr2 (C86 , C87) ) * C88 );
correctness;
end;
theorem
L505: (for B27 , B28 being non  empty set holds (for B29 being (DecoratedTree of B27 , B28) holds (for B30 being (Element of ( dom B29 )) holds (( ( B29 . B30 ) `1 ) = ( ( B29 `1 ) . B30 ) & ( ( B29 `2 ) . B30 ) = ( ( B29 . B30 ) `2 )))))
proof
let C89 , C90 being non  empty set;
let C91 being (DecoratedTree of C89 , C90);
let C92 being (Element of ( dom C91 ));
L506: ( dom ( pr1 (C89 , C90) ) ) = [: C89 , C90 :] by FUNCT_2:def 1;
L507: ( dom ( pr2 (C89 , C90) ) ) = [: C89 , C90 :] by FUNCT_2:def 1;
L508: ( rng C91 ) c= [: C89 , C90 :];
L509: ( dom ( C91 `1 ) ) = ( dom C91 ) by L508 , L506 , RELAT_1:27;
L510: ( dom ( C91 `2 ) ) = ( dom C91 ) by L507 , L508 , RELAT_1:27;
L511: ( C91 . C92 ) = [ ( ( C91 . C92 ) `1 ) , ( ( C91 . C92 ) `2 ) ] by MCART_1:21;
L512: ( ( C91 `1 ) . C92 ) = ( ( pr1 (C89 , C90) ) . (( ( C91 . C92 ) `1 ) , ( ( C91 . C92 ) `2 )) ) by L511 , L509 , FUNCT_1:12;
L513: ( ( C91 `2 ) . C92 ) = ( ( pr2 (C89 , C90) ) . (( ( C91 . C92 ) `1 ) , ( ( C91 . C92 ) `2 )) ) by L510 , L511 , FUNCT_1:12;
thus L514: thesis by L513 , L512 , FUNCT_3:def 4 , FUNCT_3:def 5;
end;
theorem
L515: (for B31 , B32 being non  empty set holds (for B33 being (DecoratedTree of B31 , B32) holds <: ( B33 `1 ) , ( B33 `2 ) :> = B33))
proof
let C93 , C94 being non  empty set;
let C95 being (DecoratedTree of C93 , C94);
L516: ( dom ( pr1 (C93 , C94) ) ) = [: C93 , C94 :] by FUNCT_2:def 1;
L517: ( dom ( pr2 (C93 , C94) ) ) = [: C93 , C94 :] by FUNCT_2:def 1;
L518: ( rng C95 ) c= [: C93 , C94 :];
L519: ( dom ( C95 `1 ) ) = ( dom C95 ) by L518 , L516 , RELAT_1:27;
L520: ( dom ( C95 `2 ) ) = ( dom C95 ) by L517 , L518 , RELAT_1:27;
L521: ( dom <: ( C95 `1 ) , ( C95 `2 ) :> ) = ( dom C95 ) by L520 , L519 , FUNCT_3:50;
L522:
now
let R1 being set;
assume L523: R1 in ( dom C95 );
reconsider D34 = R1 as (Element of ( dom C95 )) by L523;
thus L524: ( <: ( C95 `1 ) , ( C95 `2 ) :> . R1 ) = [ ( ( C95 `1 ) . D34 ) , ( ( C95 `2 ) . D34 ) ] by L519 , L520 , FUNCT_3:49
.= [ ( ( C95 . D34 ) `1 ) , ( ( C95 `2 ) . D34 ) ] by L505
.= [ ( ( C95 . D34 ) `1 ) , ( ( C95 . D34 ) `2 ) ] by L505
.= ( C95 . R1 ) by MCART_1:21;
end;
thus L525: thesis by L522 , L521 , FUNCT_1:2;
end;
registration
let C96 being  finite Tree;
cluster ( Leaves C96 ) ->  finite non  empty;
coherence
proof
L526: C96 <> ( {} );
defpred S4[ set , set ] means (ex B34 , B35 being (Element of C96) st ($1 = B34 & $2 = B35 & B35 is_a_prefix_of B34));
L527: (for R1 being set holds (for R2 being set holds ((S4[ R1 , R2 ] & S4[ R2 , R1 ]) implies R1 = R2))) by XBOOLE_0:def 10;
L528: (for R1 being set holds (for R2 being set holds (for R3 being set holds ((S4[ R1 , R2 ] & S4[ R2 , R3 ]) implies S4[ R1 , R3 ])))) by XBOOLE_1:1;
consider R1 being set such that L529: (R1 in C96 & (for R2 being set holds ((R2 in C96 & R2 <> R1) implies (not S4[ R2 , R1 ])))) from CARD_2:sch 1(L526 , L527 , L528);
reconsider D35 = R1 as (Element of C96) by L529;
L530:
now
let C97 being (FinSequence of ( NAT ));
assume L531: C97 in C96;
reconsider D36 = C97 as (Element of C96) by L531;
thus L532: (not D35 is_a_proper_prefix_of C97)
proof
assume L533: D35 is_a_prefix_of C97;
L534: D35 = D36 by L533 , L529;
thus L535: thesis by L534;
end;

end;
thus L533: thesis by L530 , TREES_1:def 5;
end;
end;
definition
let C98 being Tree;
let C99 being non  empty (Subset of C98);
redefine mode Element of C99
 -> (Element of C98);
coherence
proof
let C100 being (Element of C99);
thus L535: thesis;
end;
end;
definition
let C101 being  finite Tree;
redefine mode Leaf of C101
 -> (Element of ( Leaves C101 ));
coherence by TREES_1:def 7;
end;
definition
let C102 being  finite Tree;
mode T-Substitution of C102
 -> Tree
means :L538: (for B36 being (Element of it) holds (B36 in C102 or (ex B37 being (Leaf of C102) st B37 is_a_proper_prefix_of B36)));
existence
proof
take C102;
thus L539: thesis;
end;
end;
definition
let C103 being  finite Tree;
let C104 being (Leaf of C103);
let C105 being Tree;
redefine func C103 with-replacement (C104 , C105) -> (T-Substitution of C103);

coherence
proof
let C106 being (Element of ( C103 with-replacement (C104 , C105) ));
assume L541: (not C106 in C103);
consider C107 being (FinSequence of ( NAT )) such that L542: C107 in C105 and L543: C106 = ( C104 ^ C107 ) by L541 , TREES_1:def 9;
take C104;
L544: ( C104 ^ ( {} ) ) = C104 by FINSEQ_1:34;
L545: C107 <> ( {} ) by L544 , L541 , L543;
thus L546: thesis by L545 , L543 , TREES_1:10;
end;
end;
registration
let C108 being  finite Tree;
cluster  finite for (T-Substitution of C108);
existence
proof
L548: (for B38 being (Element of C108) holds (B38 in C108 or (ex B39 being (Leaf of C108) st B39 is_a_proper_prefix_of B38)));
L549: C108 is (T-Substitution of C108) by L548 , L538;
thus L550: thesis by L549;
end;
end;
definition
let R8 being (Element of ( NAT ));
mode T-Substitution of R8
 is (T-Substitution of ( elementary_tree R8 ));
end;
theorem
L553: (for B40 being Tree holds B40 is (T-Substitution of ( 0 )))
proof
let C109 being Tree;
let C110 being (Element of C109);
assume L554: (not C110 in ( elementary_tree ( 0 ) ));
set D37 = the (Leaf of ( elementary_tree ( 0 ) ));
take D37;
L555: D37 = ( {} ) by TARSKI:def 1 , TREES_1:29;
L556: C110 <> ( {} ) by L554 , TARSKI:def 1 , TREES_1:29;
L557: ( {} ) is_a_prefix_of C110 by XBOOLE_1:2;
thus L558: thesis by L557 , L555 , L556 , XBOOLE_0:def 8;
end;
theorem
L559: (for B41 , B42 being Tree holds ((( B41 -level 1 ) c= ( B42 -level 1 ) & (for R8 being (Element of ( NAT )) holds (<* R8 *> in B41 implies ( B41 | <* R8 *> ) = ( B42 | <* R8 *> )))) implies B41 c= B42))
proof
let C111 , C112 being Tree;
assume that
L560: ( C111 -level 1 ) c= ( C112 -level 1 )
and
L561: (for R8 being (Element of ( NAT )) holds (<* R8 *> in C111 implies ( C111 | <* R8 *> ) = ( C112 | <* R8 *> )));
let R1 being set;
assume L562: R1 in C111;
reconsider D38 = R1 as (Element of C111) by L562;
L563:
now
assume L564: D38 <> ( {} );
consider C113 being (FinSequence of ( NAT )), C114 being (Element of ( NAT )) such that L565: D38 = ( <* C114 *> ^ C113 ) by L564 , FINSEQ_2:130;
L566: ( len <* C114 *> ) = 1 by FINSEQ_1:39;
reconsider D39 = C114 as (Element of ( NAT ));
reconsider D40 = <* D39 *> as (Element of C111) by L565 , TREES_1:21;
L567: D40 in ( C111 -level 1 ) by L566;
L568: D40 in ( C112 -level 1 ) by L567 , L560;
L569: C113 in ( C111 | D40 ) by L565 , TREES_1:def 6;
L570: ( C111 | <* D39 *> ) = ( C112 | <* D39 *> ) by L561 , L567;
thus L571: D38 in C112 by L570 , L565 , L568 , L569 , TREES_1:def 6;
end;
thus L572: thesis by L563 , TREES_1:22;
end;
L573: (for R8 being (Element of ( NAT )) holds (for R9 being FinSequence holds (R8 < ( len R9 ) implies (( R8 + 1 ) in ( dom R9 ) & ( R9 . ( R8 + 1 ) ) in ( rng R9 )))))
proof
let R8 being (Element of ( NAT ));
let R9 being FinSequence;
assume L574: R8 < ( len R9 );
L575: ( R8 + 1 ) >= ( ( 0 ) + 1 ) by NAT_1:13;
L576: ( R8 + 1 ) <= ( len R9 ) by L574 , NAT_1:13;
L577: ( R8 + 1 ) in ( dom R9 ) by L576 , L575 , FINSEQ_3:25;
thus L578: thesis by L577 , FUNCT_1:def 3;
end;
begin
theorem
L579: (for B43 , B44 being Tree holds (for B45 being (FinSequence of ( NAT )) holds (B45 in ( Leaves B43 ) implies B43 c= ( B43 with-replacement (B45 , B44) ))))
proof
let C115 , C116 being Tree;
let C117 being (FinSequence of ( NAT ));
assume that
L580: C117 in ( Leaves C115 );
let R1 being set;
assume L581: R1 in C115;
reconsider D41 = R1 as (Element of C115) by L581;
L582: (not C117 is_a_proper_prefix_of D41) by L580 , TREES_1:def 5;
thus L583: thesis by L582 , L580 , TREES_1:def 9;
end;
theorem
L584: (for B46 , B47 being DecoratedTree holds (for B48 being (Element of ( dom B46 )) holds ( ( B46 with-replacement (B48 , B47) ) . B48 ) = ( B47 . ( {} ) )))
proof
let C118 , C119 being DecoratedTree;
let C120 being (Element of ( dom C118 ));
L585: C120 in ( ( dom C118 ) with-replacement (C120 , ( dom C119 )) ) by TREES_1:def 9;
L586: (ex B49 being (FinSequence of ( NAT )) st (B49 in ( dom C119 ) & C120 = ( C120 ^ B49 ) & ( ( C118 with-replacement (C120 , C119) ) . C120 ) = ( C119 . B49 ))) by L585 , TREES_2:def 11;
L587: C120 = ( C120 ^ ( {} ) ) by FINSEQ_1:34;
thus L588: thesis by L587 , L586 , FINSEQ_1:33;
end;
theorem
L589: (for B50 , B51 being DecoratedTree holds (for B52 , B53 being (Element of ( dom B50 )) holds ((not B52 is_a_prefix_of B53) implies ( ( B50 with-replacement (B52 , B51) ) . B53 ) = ( B50 . B53 ))))
proof
let C121 , C122 being DecoratedTree;
let C123 , C124 being (Element of ( dom C121 ));
assume L590: (not C123 is_a_prefix_of C124);
L591: C124 in ( ( dom C121 ) with-replacement (C123 , ( dom C122 )) ) by L590 , TREES_2:7;
L592: (not (ex B54 being (FinSequence of ( NAT )) st (B54 in ( dom C122 ) & C124 = ( C123 ^ B54 ) & ( ( C121 with-replacement (C123 , C122) ) . C124 ) = ( C122 . B54 )))) by L590 , TREES_1:1;
thus L593: thesis by L592 , L591 , TREES_2:def 11;
end;
theorem
L594: (for B55 , B56 being DecoratedTree holds (for B57 being (Element of ( dom B55 )) holds (for B58 being (Element of ( dom B56 )) holds ( ( B55 with-replacement (B57 , B56) ) . ( B57 ^ B58 ) ) = ( B56 . B58 ))))
proof
let C125 , C126 being DecoratedTree;
let C127 being (Element of ( dom C125 ));
let C128 being (Element of ( dom C126 ));
L595: C127 is_a_prefix_of ( C127 ^ C128 ) by TREES_1:1;
L596: ( C127 ^ C128 ) in ( ( dom C125 ) with-replacement (C127 , ( dom C126 )) ) by TREES_1:def 9;
L597: (ex B59 being (FinSequence of ( NAT )) st (B59 in ( dom C126 ) & ( C127 ^ C128 ) = ( C127 ^ B59 ) & ( ( C125 with-replacement (C127 , C126) ) . ( C127 ^ C128 ) ) = ( C126 . B59 ))) by L596 , L595 , TREES_2:def 11;
thus L598: thesis by L597 , FINSEQ_1:33;
end;
registration
let C129 , C130 being Tree;
cluster ( C129 \/ C130 ) -> non  empty  Tree-like;
coherence;
end;
theorem
L600: (for B60 , B61 being Tree holds (for B62 being (Element of ( B60 \/ B61 )) holds (((B62 in B60 & B62 in B61) implies ( ( B60 \/ B61 ) | B62 ) = ( ( B60 | B62 ) \/ ( B61 | B62 ) )) & ((not B62 in B60) implies ( ( B60 \/ B61 ) | B62 ) = ( B61 | B62 )) & ((not B62 in B61) implies ( ( B60 \/ B61 ) | B62 ) = ( B60 | B62 )))))
proof
let C131 , C132 being Tree;
let C133 being (Element of ( C131 \/ C132 ));
thus L601: ((C133 in C131 & C133 in C132) implies ( ( C131 \/ C132 ) | C133 ) = ( ( C131 | C133 ) \/ ( C132 | C133 ) ))
proof
assume that
L602: C133 in C131
and
L603: C133 in C132;
let C134 being (FinSequence of ( NAT ));
thus L604: (C134 in ( ( C131 \/ C132 ) | C133 ) implies C134 in ( ( C131 | C133 ) \/ ( C132 | C133 ) ))
proof
assume L605: C134 in ( ( C131 \/ C132 ) | C133 );
L606: ( C133 ^ C134 ) in ( C131 \/ C132 ) by L605 , TREES_1:def 6;
L607: (( C133 ^ C134 ) in C131 or ( C133 ^ C134 ) in C132) by L606 , XBOOLE_0:def 3;
L608: (C134 in ( C131 | C133 ) or C134 in ( C132 | C133 )) by L607 , L602 , L603 , TREES_1:def 6;
thus L609: thesis by L608 , XBOOLE_0:def 3;
end;

assume L610: C134 in ( ( C131 | C133 ) \/ ( C132 | C133 ) );
L611: (C134 in ( C131 | C133 ) or C134 in ( C132 | C133 )) by L610 , XBOOLE_0:def 3;
L612: (( C133 ^ C134 ) in C131 or ( C133 ^ C134 ) in C132) by L611 , L602 , L603 , TREES_1:def 6;
L613: ( C133 ^ C134 ) in ( C131 \/ C132 ) by L612 , XBOOLE_0:def 3;
thus L614: thesis by L613 , TREES_1:def 6;
end;

L615: (for B63 , B64 being Tree holds (for B65 being (Element of ( B63 \/ B64 )) holds ((not B65 in B63) implies ( ( B63 \/ B64 ) | B65 ) = ( B64 | B65 ))))
proof
let C135 , C136 being Tree;
let C137 being (Element of ( C135 \/ C136 ));
assume L616: (not C137 in C135);
L617: C137 in C136 by L616 , XBOOLE_0:def 3;
let C138 being (FinSequence of ( NAT ));
thus L618: (C138 in ( ( C135 \/ C136 ) | C137 ) implies C138 in ( C136 | C137 ))
proof
assume L619: C138 in ( ( C135 \/ C136 ) | C137 );
L620: ( C137 ^ C138 ) in ( C135 \/ C136 ) by L619 , TREES_1:def 6;
L621: (( C137 ^ C138 ) in C135 or ( C137 ^ C138 ) in C136) by L620 , XBOOLE_0:def 3;
thus L622: thesis by L621 , L616 , L617 , TREES_1:21 , TREES_1:def 6;
end;

assume L623: C138 in ( C136 | C137 );
L624: ( C137 ^ C138 ) in C136 by L623 , L617 , TREES_1:def 6;
L625: ( C137 ^ C138 ) in ( C135 \/ C136 ) by L624 , XBOOLE_0:def 3;
thus L626: thesis by L625 , TREES_1:def 6;
end;
thus L627: thesis by L615;
end;
definition
let R9 being FinSequence;
assume that
L628: R9 is  Tree-yielding;
func tree R9 -> Tree means 
:L629: (for R1 being set holds (R1 in it iff (R1 = ( {} ) or (ex R8 being (Element of ( NAT )) st (ex R10 being FinSequence st (R8 < ( len R9 ) & R10 in ( R9 . ( R8 + 1 ) ) & R1 = ( <* R8 *> ^ R10 )))))));
existence
proof
defpred S5[ set ] means ($1 = ( {} ) or (ex R8 being (Element of ( NAT )) st (ex R10 being FinSequence st (R8 < ( len R9 ) & R10 in ( R9 . ( R8 + 1 ) ) & $1 = ( <* R8 *> ^ R10 )))));
consider C139 being set such that L630: (for R2 being set holds (R2 in C139 iff (R2 in ( ( NAT ) * ) & S5[ R2 ]))) from XBOOLE_0:sch 1;
L631: ( <*> ( NAT ) ) in ( ( NAT ) * ) by FINSEQ_1:def 11;
reconsider D42 = C139 as non  empty set by L631 , L630;
L632: ( rng R9 ) is  constituted-Trees by L628 , L323;
L633:
now
let R8 being (Element of ( NAT ));
assume L634: R8 < ( len R9 );
L635: ( R9 . ( R8 + 1 ) ) in ( rng R9 ) by L634 , L573;
thus L636: ( R9 . ( R8 + 1 ) ) is Tree by L635 , L632;
end;
L637: D42 is  Tree-like
proof
thus L638: D42 c= ( ( NAT ) * )
proof
let R2 being set;
thus L639: thesis by L630;
end;

thus L640: (for R13 being (FinSequence of ( NAT )) holds (R13 in D42 implies ( ProperPrefixes R13 ) c= D42))
proof
let R13 being (FinSequence of ( NAT ));
assume L641: R13 in D42;
L642:
now
assume L643: R13 <> ( {} );
consider R8 being (Element of ( NAT )), R10 being FinSequence such that L644: R8 < ( len R9 ) and L645: R10 in ( R9 . ( R8 + 1 ) ) and L646: R13 = ( <* R8 *> ^ R10 ) by L643 , L630 , L641;
reconsider D43 = R10 as (FinSequence of ( NAT )) by L646 , FINSEQ_1:36;
thus L647: thesis
proof
let R1 being set;
assume L648: R1 in ( ProperPrefixes R13 );
consider R11 being FinSequence such that L649: R1 = R11 and L650: R11 is_a_proper_prefix_of R13 by L648 , TREES_1:def 2;
L651: R11 is_a_prefix_of R13 by L650 , XBOOLE_0:def 8;
consider R7 being (Element of ( NAT )) such that L652: R11 = ( R13 | ( Seg R7 ) ) by L651 , TREES_1:def 1;
L653: ( rng R11 ) = ( R13 .: ( Seg R7 ) ) by L652 , RELAT_1:115;
reconsider D44 = R11 as (FinSequence of ( NAT )) by L653 , FINSEQ_1:def 4;
L654: D44 in ( ( NAT ) * ) by FINSEQ_1:def 11;
L655:
now
assume L656: D44 <> ( {} );
consider C140 being (FinSequence of ( NAT )), C141 being (Element of ( NAT )) such that L657: D44 = ( <* C141 *> ^ C140 ) by L656 , FINSEQ_2:130;
L658: ( dom <* C141 *> ) = ( Seg 1 ) by FINSEQ_1:38;
L659: 1 in ( Seg 1 ) by FINSEQ_1:2 , TARSKI:def 1;
L660: ( Seg 1 ) c= ( dom D44 ) by L657 , L658 , FINSEQ_1:26;
L661: ( D44 . 1 ) = C141 by L657 , FINSEQ_1:41;
L662: ( R13 . 1 ) = R8 by L646 , FINSEQ_1:41;
L663: ( D44 . 1 ) = ( R13 . 1 ) by L652 , L659 , L660 , FUNCT_1:47;
L664: C140 is_a_proper_prefix_of D43 by L663 , L646 , L650 , L657 , L661 , L662 , TREES_1:49;
L665: ( R9 . ( R8 + 1 ) ) is Tree by L633 , L644;
L666: C140 is_a_prefix_of D43 by L664 , XBOOLE_0:def 8;
L667: C140 in ( R9 . ( R8 + 1 ) ) by L666 , L645 , L665 , TREES_1:20;
thus L668: thesis by L667 , L630 , L644 , L649 , L654 , L657 , L661 , L662 , L663;
end;
thus L669: thesis by L655 , L630 , L649 , L654;
end;

end;
thus L648: thesis by L642 , TREES_1:15 , XBOOLE_1:2;
end;

let R13 being (FinSequence of ( NAT ));
let R7 being (Element of ( NAT ));
let R8 being (Element of ( NAT ));
assume that
L649: ( R13 ^ <* R7 *> ) in D42
and
L650: R8 <= R7;
L651:
now
assume L652: R13 = ( {} );
L653: <* R7 *> in D42 by L652 , L649 , FINSEQ_1:34;
consider C142 being (Element of ( NAT )), R10 being FinSequence such that L654: C142 < ( len R9 ) and L655: R10 in ( R9 . ( C142 + 1 ) ) and L656: <* R7 *> = ( <* C142 *> ^ R10 ) by L653 , L630;
L657: ( <* R7 *> . 1 ) = R7 by FINSEQ_1:def 8;
L658: ( ( <* C142 *> ^ R10 ) . 1 ) = C142 by FINSEQ_1:41;
L659: R8 < ( len R9 ) by L658 , L650 , L654 , L656 , L657 , XXREAL_0:2;
L660: ( R9 . ( R8 + 1 ) ) in ( rng R9 ) by L659 , L573;
L661: ( {} ) in ( R9 . ( R8 + 1 ) ) by L660 , L632 , TREES_1:22;
L662: ( <* R8 *> ^ ( {} ) ) = <* R8 *> by FINSEQ_1:34;
L663: ( ( {} ) ^ <* R8 *> ) = <* R8 *> by FINSEQ_1:34;
L664: <* R8 *> in ( ( NAT ) * ) by FINSEQ_1:def 11;
thus L665: thesis by L664 , L630 , L652 , L659 , L661 , L662 , L663;
end;
L666:
now
assume L667: R13 <> ( {} );
consider C143 being (FinSequence of ( NAT )), C144 being (Element of ( NAT )) such that L668: R13 = ( <* C144 *> ^ C143 ) by L667 , FINSEQ_2:130;
consider C145 being (Element of ( NAT )), R11 being FinSequence such that L669: C145 < ( len R9 ) and L670: R11 in ( R9 . ( C145 + 1 ) ) and L671: ( R13 ^ <* R7 *> ) = ( <* C145 *> ^ R11 ) by L630 , L649;
L672: ( R13 ^ <* R7 *> ) = ( <* C144 *> ^ ( C143 ^ <* R7 *> ) ) by L668 , FINSEQ_1:32;
L673: ( R13 ^ <* R8 *> ) = ( <* C144 *> ^ ( C143 ^ <* R8 *> ) ) by L668 , FINSEQ_1:32;
L674: ( ( R13 ^ <* R7 *> ) . 1 ) = C144 by L672 , FINSEQ_1:41;
L675: ( ( R13 ^ <* R7 *> ) . 1 ) = C145 by L671 , FINSEQ_1:41;
L676: ( <* C144 *> ^ ( C143 ^ <* R8 *> ) ) in ( ( NAT ) * ) by FINSEQ_1:def 11;
L677: R11 = ( C143 ^ <* R7 *> ) by L671 , L672 , L674 , L675 , FINSEQ_1:33;
L678: ( R9 . ( C144 + 1 ) ) in ( rng R9 ) by L669 , L674 , L675 , L573;
L679: ( C143 ^ <* R8 *> ) in ( R9 . ( C144 + 1 ) ) by L678 , L632 , L650 , L670 , L674 , L675 , L677 , TREES_1:def 3;
thus L680: thesis by L679 , L630 , L669 , L673 , L674 , L675 , L676;
end;
thus L681: thesis by L666 , L651;
end;
reconsider D45 = D42 as Tree by L637;
take D45;
let R1 being set;
thus L682: (R1 in D45 implies (R1 = ( {} ) or (ex R8 being (Element of ( NAT )) st (ex R10 being FinSequence st (R8 < ( len R9 ) & R10 in ( R9 . ( R8 + 1 ) ) & R1 = ( <* R8 *> ^ R10 )))))) by L630;
assume L683: (R1 = ( {} ) or (ex R8 being (Element of ( NAT )) st (ex R10 being FinSequence st (R8 < ( len R9 ) & R10 in ( R9 . ( R8 + 1 ) ) & R1 = ( <* R8 *> ^ R10 )))));
L684:
now
given R8 being (Element of ( NAT )) , R10 being FinSequence such that
L685: R8 < ( len R9 )
and
L686: R10 in ( R9 . ( R8 + 1 ) )
and
L687: R1 = ( <* R8 *> ^ R10 );

reconsider D46 = ( R9 . ( R8 + 1 ) ) as Tree by L633 , L685;
reconsider D47 = R10 as (Element of D46) by L686;
L688: ( <* R8 *> ^ D47 ) in ( ( NAT ) * ) by FINSEQ_1:def 11;
thus L689: R1 in ( ( NAT ) * ) by L688 , L687;
end;
L690: ( {} ) in ( ( NAT ) * ) by FINSEQ_1:49;
thus L691: thesis by L690 , L630 , L683 , L684;
end;
uniqueness
proof
defpred S6[ set ] means ($1 = ( {} ) or (ex R8 being (Element of ( NAT )) st (ex R10 being FinSequence st (R8 < ( len R9 ) & R10 in ( R9 . ( R8 + 1 ) ) & $1 = ( <* R8 *> ^ R10 )))));
let C146 , C147 being Tree;
assume that
L692: (for R1 being set holds (R1 in C146 iff S6[ R1 ]))
and
L693: (for R1 being set holds (R1 in C147 iff S6[ R1 ]));
thus L694: thesis from XBOOLE_0:sch 2(L692 , L693);
end;
end;
definition
let C148 being Tree;
func ^ C148 -> Tree equals 
( tree <* C148 *> );
correctness;
end;
definition
let C149 , C150 being Tree;
func tree (C149 , C150) -> Tree equals 
( tree <* C149 , C150 *> );
correctness;
end;
theorem
L698: (for R8 being (Element of ( NAT )) holds (for R9 being FinSequence holds (for R10 being FinSequence holds (R9 is  Tree-yielding implies (( <* R8 *> ^ R10 ) in ( tree R9 ) iff (R8 < ( len R9 ) & R10 in ( R9 . ( R8 + 1 ) )))))))
proof
let R8 being (Element of ( NAT ));
let R9 being FinSequence;
let R10 being FinSequence;
assume L699: R9 is  Tree-yielding;
thus L700: (( <* R8 *> ^ R10 ) in ( tree R9 ) implies (R8 < ( len R9 ) & R10 in ( R9 . ( R8 + 1 ) )))
proof
assume L701: ( <* R8 *> ^ R10 ) in ( tree R9 );
consider R7 being (Element of ( NAT )), R11 being FinSequence such that L702: R7 < ( len R9 ) and L703: R11 in ( R9 . ( R7 + 1 ) ) and L704: ( <* R8 *> ^ R10 ) = ( <* R7 *> ^ R11 ) by L701 , L699 , L629;
L705: ( ( <* R8 *> ^ R10 ) . 1 ) = R8 by FINSEQ_1:41;
L706: ( ( <* R7 *> ^ R11 ) . 1 ) = R7 by FINSEQ_1:41;
thus L707: thesis by L706 , L702 , L703 , L704 , L705 , FINSEQ_1:33;
end;

thus L708: thesis by L699 , L629;
end;
theorem
L709: (for R9 being FinSequence holds (R9 is  Tree-yielding implies (( ( tree R9 ) -level 1 ) = { <* R8 *> where R8 is (Element of ( NAT )) : R8 < ( len R9 ) } & (for R8 being (Element of ( NAT )) holds (R8 < ( len R9 ) implies ( ( tree R9 ) | <* R8 *> ) = ( R9 . ( R8 + 1 ) ))))))
proof
let R9 being FinSequence;
set D48 = ( tree R9 );
assume L710: R9 is  Tree-yielding;
L711: ( rng R9 ) is  constituted-Trees by L710 , L323;
thus L712: ( D48 -level 1 ) = { <* R8 *> where R8 is (Element of ( NAT )) : R8 < ( len R9 ) }
proof
thus L713: ( D48 -level 1 ) c= { <* R8 *> where R8 is (Element of ( NAT )) : R8 < ( len R9 ) }
proof
let R1 being set;
assume L714: R1 in ( D48 -level 1 );
consider C151 being (Element of D48) such that L715: R1 = C151 and L716: ( len C151 ) = 1 by L714;
L717: C151 = <* ( C151 . 1 ) *> by L716 , FINSEQ_1:40;
consider R8 being (Element of ( NAT )), R10 being FinSequence such that L718: R8 < ( len R9 ) and L719: R10 in ( R9 . ( R8 + 1 ) ) and L720: C151 = ( <* R8 *> ^ R10 ) by L717 , L710 , L629;
L721: C151 = <* R8 *> by L717 , L720 , FINSEQ_1:88;
thus L722: thesis by L721 , L715 , L718;
end;

let R1 being set;
assume L723: R1 in { <* R8 *> where R8 is (Element of ( NAT )) : R8 < ( len R9 ) };
consider R8 being (Element of ( NAT )) such that L724: R1 = <* R8 *> and L725: R8 < ( len R9 ) by L723;
L726: ( R9 . ( R8 + 1 ) ) in ( rng R9 ) by L725 , L573;
L727: ( {} ) in ( R9 . ( R8 + 1 ) ) by L726 , L711 , TREES_1:22;
L728: ( <* R8 *> ^ ( {} ) ) = <* R8 *> by FINSEQ_1:34;
reconsider D49 = <* R8 *> as (Element of D48) by L728 , L710 , L725 , L727 , L629;
L729: ( len D49 ) = 1 by FINSEQ_1:39;
thus L730: thesis by L729 , L724;
end;

let R8 being (Element of ( NAT ));
assume L731: R8 < ( len R9 );
L732: ( R9 . ( R8 + 1 ) ) in ( rng R9 ) by L731 , L573;
reconsider D50 = ( R9 . ( R8 + 1 ) ) as Tree by L732 , L711;
L733: ( {} ) in D50 by TREES_1:22;
L734: ( <* R8 *> ^ ( {} ) ) = <* R8 *> by FINSEQ_1:34;
L735: <* R8 *> in D48 by L734 , L710 , L731 , L733 , L629;
L736: ( D48 | <* R8 *> ) = D50
proof
let C152 being (FinSequence of ( NAT ));
thus L737: (C152 in ( D48 | <* R8 *> ) implies C152 in D50)
proof
assume L738: C152 in ( D48 | <* R8 *> );
L739: ( <* R8 *> ^ C152 ) in D48 by L738 , L735 , TREES_1:def 6;
consider C153 being (Element of ( NAT )), R10 being FinSequence such that L740: C153 < ( len R9 ) and L741: R10 in ( R9 . ( C153 + 1 ) ) and L742: ( <* R8 *> ^ C152 ) = ( <* C153 *> ^ R10 ) by L739 , L710 , L629;
L743: ( ( <* R8 *> ^ C152 ) . 1 ) = R8 by FINSEQ_1:41;
L744: ( ( <* C153 *> ^ R10 ) . 1 ) = C153 by FINSEQ_1:41;
thus L745: thesis by L744 , L741 , L742 , L743 , FINSEQ_1:33;
end;

assume L746: C152 in D50;
L747: ( <* R8 *> ^ C152 ) in D48 by L746 , L710 , L731 , L629;
L748: <* R8 *> in D48 by L747 , TREES_1:21;
thus L749: thesis by L748 , L747 , TREES_1:def 6;
end;
thus L750: thesis by L736;
end;
theorem
L751: (for B66 , B67 being  Tree-yielding FinSequence holds (( tree B66 ) = ( tree B67 ) implies B66 = B67))
proof
let C154 , C155 being  Tree-yielding FinSequence;
assume that
L752: ( tree C154 ) = ( tree C155 );
L753: ( ( tree C154 ) -level 1 ) = { <* R8 *> where R8 is (Element of ( NAT )) : R8 < ( len C154 ) } by L709;
L754: ( ( tree C155 ) -level 1 ) = { <* R7 *> where R7 is (Element of ( NAT )) : R7 < ( len C155 ) } by L709;
L755:
now
let C156 , C157 being (Element of ( NAT ));
assume L756: ({ <* R6 *> where R6 is (Element of ( NAT )) : R6 < C156 } = { <* R7 *> where R7 is (Element of ( NAT )) : R7 < C157 } & C156 < C157);
L757: <* C156 *> in { <* R6 *> where R6 is (Element of ( NAT )) : R6 < C156 } by L756;
L758: (ex R6 being (Element of ( NAT )) st (<* C156 *> = <* R6 *> & R6 < C156)) by L757;
L759: ( <* C156 *> . 1 ) = C156 by FINSEQ_1:40;
thus L760: contradiction by L759 , L758 , FINSEQ_1:40;
end;
L761: (not ( len C154 ) < ( len C155 )) by L755 , L752 , L753 , L754;
L762: (not ( len C154 ) > ( len C155 )) by L752 , L753 , L754 , L755;
L763: ( len C154 ) = ( len C155 ) by L762 , L761 , XXREAL_0:1;
L764:
now
let C158 being Nat;
assume that
L765: C158 >= 1
and
L766: C158 <= ( len C154 );
consider C159 being Nat such that L767: C158 = ( 1 + C159 ) by L765 , NAT_1:10;
reconsider D51 = C159 as (Element of ( NAT )) by ORDINAL1:def 12;
L768: D51 < ( len C154 ) by L766 , L767 , NAT_1:13;
L769: ( C154 . C158 ) = ( ( tree C154 ) | <* D51 *> ) by L768 , L767 , L709;
thus L770: ( C154 . C158 ) = ( C155 . C158 ) by L769 , L752 , L763 , L767 , L768 , L709;
end;
thus L771: thesis by L764 , L761 , L762 , FINSEQ_1:14 , XXREAL_0:1;
end;
theorem
L772: (for R9 being FinSequence holds (for B68 , B69 being  Tree-yielding FinSequence holds (for B70 being Tree holds (R9 in B70 iff ( <* ( len B68 ) *> ^ R9 ) in ( tree ( ( B68 ^ <* B70 *> ) ^ B69 ) )))))
proof
let R9 being FinSequence;
let C160 , C161 being  Tree-yielding FinSequence;
let C162 being Tree;
L773: ( len ( ( C160 ^ <* C162 *> ) ^ C161 ) ) = ( ( len ( C160 ^ <* C162 *> ) ) + ( len C161 ) ) by FINSEQ_1:22;
L774: ( len ( C160 ^ <* C162 *> ) ) = ( ( len C160 ) + ( len <* C162 *> ) ) by FINSEQ_1:22;
L775: ( len <* C162 *> ) = 1 by FINSEQ_1:40;
L776: ( ( ( len C160 ) + 1 ) + ( len C161 ) ) = ( ( ( len C160 ) + ( len C161 ) ) + 1 );
L777: ( len C160 ) <= ( ( len C160 ) + ( len C161 ) ) by NAT_1:11;
L778: ( len C160 ) < ( len ( ( C160 ^ <* C162 *> ) ^ C161 ) ) by L777 , L773 , L774 , L775 , L776 , NAT_1:13;
L779: ( ( len C160 ) + 1 ) >= 1 by NAT_1:11;
L780: ( ( len C160 ) + 1 ) in ( dom ( C160 ^ <* C162 *> ) ) by L779 , L774 , L775 , FINSEQ_3:25;
L781: ( ( ( C160 ^ <* C162 *> ) ^ C161 ) . ( ( len C160 ) + 1 ) ) = ( ( C160 ^ <* C162 *> ) . ( ( len C160 ) + 1 ) ) by L780 , FINSEQ_1:def 7
.= C162 by FINSEQ_1:42;
thus L782: (R9 in C162 implies ( <* ( len C160 ) *> ^ R9 ) in ( tree ( ( C160 ^ <* C162 *> ) ^ C161 ) )) by L781 , L778 , L629;
assume L783: ( <* ( len C160 ) *> ^ R9 ) in ( tree ( ( C160 ^ <* C162 *> ) ^ C161 ) );
consider R8 being (Element of ( NAT )), R10 being FinSequence such that L784: R8 < ( len ( ( C160 ^ <* C162 *> ) ^ C161 ) ) and L785: R10 in ( ( ( C160 ^ <* C162 *> ) ^ C161 ) . ( R8 + 1 ) ) and L786: ( <* ( len C160 ) *> ^ R9 ) = ( <* R8 *> ^ R10 ) by L783 , L629;
L787: ( ( <* ( len C160 ) *> ^ R9 ) . 1 ) = ( len C160 ) by FINSEQ_1:41;
L788: ( ( <* R8 *> ^ R10 ) . 1 ) = R8 by FINSEQ_1:41;
thus L789: thesis by L788 , L781 , L785 , L786 , L787 , FINSEQ_1:33;
end;
theorem
L790: ( tree ( {} ) ) = ( elementary_tree ( 0 ) )
proof
let C163 being (FinSequence of ( NAT ));
thus L791: (C163 in ( tree ( {} ) ) implies C163 in ( elementary_tree ( 0 ) ))
proof
assume L792: C163 in ( tree ( {} ) );
L793: (C163 = ( {} ) or (ex R8 being (Element of ( NAT )) st (ex R10 being FinSequence st (R8 < ( len ( {} ) ) & R10 in ( ( {} ) . ( R8 + 1 ) ) & C163 = ( <* R8 *> ^ R10 ))))) by L792 , L629;
assume L794: (not thesis);
thus L795: contradiction by L794 , L793 , TARSKI:def 1 , TREES_1:29;
end;

assume L796: C163 in ( elementary_tree ( 0 ) );
L797: C163 = ( {} ) by L796 , TARSKI:def 1 , TREES_1:29;
thus L798: thesis by L797 , L629;
end;
theorem
L799: (for R9 being FinSequence holds (R9 is  Tree-yielding implies ( elementary_tree ( len R9 ) ) c= ( tree R9 )))
proof
let R9 being FinSequence;
assume L800: R9 is  Tree-yielding;
L801: ( rng R9 ) is  constituted-Trees by L800 , L323;
let C164 being set;
assume L802: C164 in ( elementary_tree ( len R9 ) );
L803: (C164 in { <* R8 *> where R8 is (Element of ( NAT )) : R8 < ( len R9 ) } or C164 in { ( {} ) }) by L802 , XBOOLE_0:def 3;
L804: ((ex R8 being (Element of ( NAT )) st (C164 = <* R8 *> & R8 < ( len R9 ))) or C164 = ( {} )) by L803 , TARSKI:def 1;
assume L805: (not thesis);
consider R8 being (Element of ( NAT )) such that L806: C164 = <* R8 *> and L807: R8 < ( len R9 ) by L805 , L804 , TREES_1:22;
L808: ( R9 . ( R8 + 1 ) ) in ( rng R9 ) by L807 , L573;
reconsider D52 = ( R9 . ( R8 + 1 ) ) as Tree by L808 , L801;
L809: ( {} ) in D52 by TREES_1:22;
L810: ( <* R8 *> ^ ( {} ) ) = C164 by L806 , FINSEQ_1:34;
thus L811: thesis by L810 , L800 , L805 , L807 , L809 , L629;
end;
theorem
L812: (for R6 being (Element of ( NAT )) holds ( elementary_tree R6 ) = ( tree ( R6 |-> ( elementary_tree ( 0 ) ) ) ))
proof
let R6 being (Element of ( NAT ));
set D53 = ( R6 |-> ( elementary_tree ( 0 ) ) );
let C165 being (FinSequence of ( NAT ));
L813: ( len D53 ) = R6 by CARD_1:def 7;
L814: ( elementary_tree R6 ) c= ( tree D53 ) by L813 , L799;
thus L815: (C165 in ( elementary_tree R6 ) implies C165 in ( tree D53 )) by L814;
assume L816: C165 in ( tree D53 );
L817: (C165 = ( {} ) or (ex R8 being (Element of ( NAT )) st (ex R11 being FinSequence st (R8 < ( len D53 ) & R11 in ( D53 . ( R8 + 1 ) ) & C165 = ( <* R8 *> ^ R11 ))))) by L816 , L629;
L818:
now
given R8 being (Element of ( NAT )) , R11 being FinSequence such that
L819: R8 < ( len D53 )
and
L820: R11 in ( D53 . ( R8 + 1 ) )
and
L821: C165 = ( <* R8 *> ^ R11 );

L822: D53 = ( ( Seg R6 ) --> ( elementary_tree ( 0 ) ) ) by FINSEQ_2:def 2;
L823: ( rng D53 ) c= { ( elementary_tree ( 0 ) ) } by L822 , FUNCOP_1:13;
L824: ( D53 . ( R8 + 1 ) ) in ( rng D53 ) by L819 , L573;
L825: ( D53 . ( R8 + 1 ) ) = ( elementary_tree ( 0 ) ) by L824 , L823 , TARSKI:def 1;
L826: R11 = ( {} ) by L825 , L820 , TARSKI:def 1 , TREES_1:29;
L827: C165 = <* R8 *> by L826 , L821 , FINSEQ_1:34;
thus L828: thesis by L827 , L813 , L819 , TREES_1:28;
end;
thus L829: thesis by L818 , L817 , TREES_1:22;
end;
theorem
L830: (for B71 being Tree holds (for B72 being  Tree-yielding FinSequence holds ( tree ( B72 ^ <* B71 *> ) ) = ( ( ( tree B72 ) \/ ( elementary_tree ( ( len B72 ) + 1 ) ) ) with-replacement (<* ( len B72 ) *> , B71) )))
proof
let C166 being Tree;
let C167 being  Tree-yielding FinSequence;
set D54 = ( elementary_tree ( ( len C167 ) + 1 ) );
set D55 = ( ( tree C167 ) \/ D54 );
set D56 = ( D55 with-replacement (<* ( len C167 ) *> , C166) );
L831: ( len <* C166 *> ) = 1 by FINSEQ_1:40;
L832: ( len ( C167 ^ <* C166 *> ) ) = ( ( len C167 ) + 1 ) by L831 , FINSEQ_1:22;
L833: ( len C167 ) < ( ( len C167 ) + 1 ) by NAT_1:13;
L834: <* ( len C167 ) *> in D54 by L833 , TREES_1:28;
L835: <* ( len C167 ) *> in D55 by L834 , XBOOLE_0:def 3;
let C168 being (FinSequence of ( NAT ));
thus L836: (C168 in ( tree ( C167 ^ <* C166 *> ) ) implies C168 in D56)
proof
assume L837: C168 in ( tree ( C167 ^ <* C166 *> ) );
L838: (C168 = ( {} ) or (ex R8 being (Element of ( NAT )) st (ex R11 being FinSequence st (R8 < ( len ( C167 ^ <* C166 *> ) ) & R11 in ( ( C167 ^ <* C166 *> ) . ( R8 + 1 ) ) & C168 = ( <* R8 *> ^ R11 ))))) by L837 , L629;
L839:
now
given R8 being (Element of ( NAT )) , R11 being FinSequence such that
L840: R8 < ( len ( C167 ^ <* C166 *> ) )
and
L841: R11 in ( ( C167 ^ <* C166 *> ) . ( R8 + 1 ) )
and
L842: C168 = ( <* R8 *> ^ R11 );

reconsider D57 = R11 as (FinSequence of ( NAT )) by L842 , FINSEQ_1:36;
L843: R8 <= ( len C167 ) by L832 , L840 , NAT_1:13;
L844:
now
assume L845: R8 < ( len C167 );
L846: ( R8 + 1 ) in ( dom C167 ) by L845 , L573;
L847: ( ( C167 ^ <* C166 *> ) . ( R8 + 1 ) ) = ( C167 . ( R8 + 1 ) ) by L846 , FINSEQ_1:def 7;
L848: C168 in ( tree C167 ) by L847 , L841 , L842 , L845 , L629;
L849: C168 in D55 by L848 , XBOOLE_0:def 3;
L850: (not <* ( len C167 ) *> is_a_prefix_of ( <* R8 *> ^ D57 )) by L845 , TREES_1:50;
L851: (not <* ( len C167 ) *> is_a_proper_prefix_of ( <* R8 *> ^ D57 )) by L850 , XBOOLE_0:def 8;
thus L852: thesis by L851 , L835 , L842 , L849 , TREES_1:def 9;
end;
L853:
now
assume L854: R8 = ( len C167 );
L855: ( ( C167 ^ <* C166 *> ) . ( R8 + 1 ) ) = C166 by L854 , FINSEQ_1:42;
L856: D57 = D57;
thus L857: thesis by L856 , L835 , L841 , L842 , L854 , L855 , TREES_1:def 9;
end;
thus L858: thesis by L853 , L843 , L844 , XXREAL_0:1;
end;
thus L859: thesis by L839 , L838 , TREES_1:22;
end;

assume L860: C168 in D56;
assume L861: (not thesis);
L862:
now
given C169 being (FinSequence of ( NAT )) such that
L863: C169 in C166
and
L864: C168 = ( <* ( len C167 ) *> ^ C169 );

L865: ( len C167 ) < ( ( len C167 ) + 1 ) by NAT_1:13;
L866: ( ( C167 ^ <* C166 *> ) . ( ( len C167 ) + 1 ) ) = C166 by FINSEQ_1:42;
thus L867: thesis by L866 , L832 , L861 , L863 , L864 , L865 , L629;
end;
L868:
now
assume L869: C168 in D55;
L870: (C168 in ( tree C167 ) or C168 in D54) by L869 , XBOOLE_0:def 3;
L871:
now
assume L872: C168 in ( tree C167 );
L873: ((C168 = ( {} ) & ( {} ) in ( tree ( C167 ^ <* C166 *> ) )) or (ex R8 being (Element of ( NAT )) st (ex R11 being FinSequence st (R8 < ( len C167 ) & R11 in ( C167 . ( R8 + 1 ) ) & C168 = ( <* R8 *> ^ R11 ))))) by L872 , L629;
consider R8 being (Element of ( NAT )), R11 being FinSequence such that L874: R8 < ( len C167 ) and L875: R11 in ( C167 . ( R8 + 1 ) ) and L876: C168 = ( <* R8 *> ^ R11 ) by L873 , L861;
L877: ( R8 + 1 ) in ( dom C167 ) by L874 , L573;
L878: ( C167 . ( R8 + 1 ) ) = ( ( C167 ^ <* C166 *> ) . ( R8 + 1 ) ) by L877 , FINSEQ_1:def 7;
L879: R8 < ( len ( C167 ^ <* C166 *> ) ) by L832 , L874 , NAT_1:13;
thus L880: thesis by L879 , L861 , L875 , L876 , L878 , L629;
end;
L881:
now
assume L882: (not C168 in ( tree C167 ));
L883: (C168 = ( {} ) or (ex R8 being (Element of ( NAT )) st (R8 < ( ( len C167 ) + 1 ) & C168 = <* R8 *>))) by L882 , L870 , TREES_1:30;
consider R8 being (Element of ( NAT )) such that L884: R8 < ( ( len C167 ) + 1 ) and L885: C168 = <* R8 *> by L883 , L861 , TREES_1:22;
L886:
now
assume L887: R8 < ( len C167 );
L888: ( C167 . ( R8 + 1 ) ) in ( rng C167 ) by L887 , L573;
L889: ( rng C167 ) is  constituted-Trees by L323;
thus L890: ( {} ) in ( C167 . ( R8 + 1 ) ) by L889 , L888 , TREES_1:22;
end;
L891: C168 = ( <* R8 *> ^ ( {} ) ) by L885 , FINSEQ_1:34;
L892: R8 >= ( len C167 ) by L891 , L882 , L886 , L629;
L893: R8 <= ( len C167 ) by L884 , NAT_1:13;
L894: ( len C167 ) = R8 by L893 , L892 , XXREAL_0:1;
L895: R8 < ( R8 + 1 ) by NAT_1:13;
L896: ( ( C167 ^ <* C166 *> ) . ( ( len C167 ) + 1 ) ) = C166 by FINSEQ_1:42;
L897: ( {} ) in C166 by TREES_1:22;
thus L898: thesis by L897 , L832 , L861 , L891 , L894 , L895 , L896 , L629;
end;
thus L899: thesis by L881 , L871;
end;
thus L900: thesis by L868 , L835 , L860 , L862 , TREES_1:def 9;
end;
theorem
L901: (for B73 being  Tree-yielding FinSequence holds ( tree ( B73 ^ <* ( elementary_tree ( 0 ) ) *> ) ) = ( ( tree B73 ) \/ ( elementary_tree ( ( len B73 ) + 1 ) ) ))
proof
let C170 being  Tree-yielding FinSequence;
L902: ( len C170 ) < ( ( len C170 ) + 1 ) by NAT_1:13;
L903: <* ( len C170 ) *> in ( elementary_tree ( ( len C170 ) + 1 ) ) by L902 , TREES_1:28;
L904: <* ( len C170 ) *> in ( ( tree C170 ) \/ ( elementary_tree ( ( len C170 ) + 1 ) ) ) by L903 , XBOOLE_0:def 3;
L905: ( {} ) in ( ( elementary_tree ( ( len C170 ) + 1 ) ) | <* ( len C170 ) *> ) by TREES_1:22;
L906: ( elementary_tree ( 0 ) ) c= ( ( elementary_tree ( ( len C170 ) + 1 ) ) | <* ( len C170 ) *> ) by L905 , TREES_1:29 , ZFMISC_1:31;
L907: ( ( elementary_tree ( ( len C170 ) + 1 ) ) | <* ( len C170 ) *> ) c= ( elementary_tree ( 0 ) )
proof
let R1 being set;
assume L908: R1 in ( ( elementary_tree ( ( len C170 ) + 1 ) ) | <* ( len C170 ) *> );
reconsider D58 = R1 as (Element of ( ( elementary_tree ( ( len C170 ) + 1 ) ) | <* ( len C170 ) *> )) by L908;
L909: ( <* ( len C170 ) *> ^ D58 ) in ( elementary_tree ( ( len C170 ) + 1 ) ) by L903 , TREES_1:def 6;
consider R8 being (Element of ( NAT )) such that L910: R8 < ( ( len C170 ) + 1 ) and L911: ( <* ( len C170 ) *> ^ D58 ) = <* R8 *> by L909 , TREES_1:30;
L912: ( len <* R8 *> ) = 1 by FINSEQ_1:40;
L913: ( len <* ( len C170 ) *> ) = 1 by FINSEQ_1:40;
L914: ( 1 + ( len D58 ) ) = ( 1 + ( 0 ) ) by L913 , L911 , L912 , FINSEQ_1:22;
L915: R1 = ( {} ) by L914;
thus L916: thesis by L915 , TREES_1:22;
end;
L917:
now
let R8 being (Element of ( NAT ));
let R11 being FinSequence;
assume L918: <* ( len C170 ) *> = ( <* R8 *> ^ R11 );
L919: R8 = ( <* ( len C170 ) *> . 1 ) by L918 , FINSEQ_1:41
.= ( len C170 ) by FINSEQ_1:40;
thus L920: (not R8 < ( len C170 )) by L919;
end;
L921: (not (ex R8 being (Element of ( NAT )) st (ex R10 being FinSequence st (R8 < ( len C170 ) & R10 in ( C170 . ( R8 + 1 ) ) & <* ( len C170 ) *> = ( <* R8 *> ^ R10 ))))) by L917;
L922: (not <* ( len C170 ) *> in ( tree C170 )) by L921 , L629;
L923: ( ( ( tree C170 ) \/ ( elementary_tree ( ( len C170 ) + 1 ) ) ) | <* ( len C170 ) *> ) = ( ( elementary_tree ( ( len C170 ) + 1 ) ) | <* ( len C170 ) *> ) by L922 , L904 , L600
.= ( elementary_tree ( 0 ) ) by L906 , L907 , XBOOLE_0:def 10;
thus L924: ( tree ( C170 ^ <* ( elementary_tree ( 0 ) ) *> ) ) = ( ( ( tree C170 ) \/ ( elementary_tree ( ( len C170 ) + 1 ) ) ) with-replacement (<* ( len C170 ) *> , ( elementary_tree ( 0 ) )) ) by L830
.= ( ( tree C170 ) \/ ( elementary_tree ( ( len C170 ) + 1 ) ) ) by L904 , L923 , TREES_2:6;
end;
theorem
L925: (for B74 , B75 being  Tree-yielding FinSequence holds (for B76 , B77 being Tree holds ( tree ( ( B74 ^ <* B76 *> ) ^ B75 ) ) = ( ( tree ( ( B74 ^ <* B77 *> ) ^ B75 ) ) with-replacement (<* ( len B74 ) *> , B76) )))
proof
let C171 , C172 being  Tree-yielding FinSequence;
let C173 , C174 being Tree;
set D59 = ( ( C171 ^ <* C173 *> ) ^ C172 );
set D60 = ( tree D59 );
set D61 = ( ( C171 ^ <* C174 *> ) ^ C172 );
set D62 = ( tree D61 );
set D63 = ( D62 with-replacement (<* ( len C171 ) *> , C173) );
L926: ( len <* C173 *> ) = 1 by FINSEQ_1:40;
L927: ( len <* C174 *> ) = 1 by FINSEQ_1:40;
L928: ( len ( C171 ^ <* C173 *> ) ) = ( ( len C171 ) + 1 ) by L926 , FINSEQ_1:22;
L929: ( len D59 ) = ( ( len ( C171 ^ <* C173 *> ) ) + ( len C172 ) ) by FINSEQ_1:22;
L930: ( len ( C171 ^ <* C174 *> ) ) = ( ( len C171 ) + 1 ) by L927 , FINSEQ_1:22;
L931: ( len D61 ) = ( ( len ( C171 ^ <* C174 *> ) ) + ( len C172 ) ) by FINSEQ_1:22;
L932: ( ( len C171 ) + 1 ) <= ( ( ( len C171 ) + 1 ) + ( len C172 ) ) by NAT_1:11;
L933: ( len C171 ) < ( ( ( len C171 ) + 1 ) + ( len C172 ) ) by L932 , NAT_1:13;
L934: ( D61 . ( ( len C171 ) + 1 ) ) in ( rng D61 ) by L933 , L930 , L931 , L573;
L935: ( rng D61 ) is  constituted-Trees by L323;
L936: ( {} ) in ( D61 . ( ( len C171 ) + 1 ) ) by L935 , L934 , TREES_1:22;
L937: ( <* ( len C171 ) *> ^ ( {} ) ) = <* ( len C171 ) *> by FINSEQ_1:34;
L938: <* ( len C171 ) *> in D62 by L937 , L930 , L931 , L933 , L936 , L629;
let C175 being (FinSequence of ( NAT ));
thus L939: (C175 in D60 implies C175 in D63)
proof
assume L940: C175 in D60;
L941: (C175 = ( {} ) or (ex R8 being (Element of ( NAT )) st (ex R12 being FinSequence st (R8 < ( len D59 ) & R12 in ( D59 . ( R8 + 1 ) ) & C175 = ( <* R8 *> ^ R12 ))))) by L940 , L629;
L942:
now
given R8 being (Element of ( NAT )) , R12 being FinSequence such that
L943: R8 < ( len D59 )
and
L944: R12 in ( D59 . ( R8 + 1 ) )
and
L945: C175 = ( <* R8 *> ^ R12 );

reconsider D64 = R12 as (FinSequence of ( NAT )) by L945 , FINSEQ_1:36;
L946: (R8 <= ( len C171 ) or R8 >= ( ( len C171 ) + 1 )) by NAT_1:13;
L947:
now
assume L948: R8 < ( len C171 );
L949: ( R8 + 1 ) in ( dom C171 ) by L948 , L573;
L950: ( dom C171 ) c= ( dom ( C171 ^ <* C174 *> ) ) by FINSEQ_1:26;
L951: ( dom C171 ) c= ( dom ( C171 ^ <* C173 *> ) ) by FINSEQ_1:26;
L952: ( ( C171 ^ <* C174 *> ) . ( R8 + 1 ) ) = ( C171 . ( R8 + 1 ) ) by L949 , FINSEQ_1:def 7;
L953: ( ( C171 ^ <* C173 *> ) . ( R8 + 1 ) ) = ( C171 . ( R8 + 1 ) ) by L949 , FINSEQ_1:def 7;
L954: ( D61 . ( R8 + 1 ) ) = ( C171 . ( R8 + 1 ) ) by L949 , L950 , L952 , FINSEQ_1:def 7;
L955: ( D59 . ( R8 + 1 ) ) = ( C171 . ( R8 + 1 ) ) by L949 , L951 , L953 , FINSEQ_1:def 7;
L956: C175 in D62 by L955 , L928 , L929 , L930 , L931 , L943 , L944 , L945 , L954 , L629;
L957: (not <* ( len C171 ) *> is_a_prefix_of ( <* R8 *> ^ D64 )) by L948 , TREES_1:50;
L958: (not <* ( len C171 ) *> is_a_proper_prefix_of ( <* R8 *> ^ D64 )) by L957 , XBOOLE_0:def 8;
thus L959: thesis by L958 , L938 , L945 , L956 , TREES_1:def 9;
end;
L960:
now
assume L961: R8 = ( len C171 );
L962: ( ( C171 ^ <* C173 *> ) . ( R8 + 1 ) ) = C173 by L961 , FINSEQ_1:42;
L963: R8 < ( ( len C171 ) + 1 ) by L961 , NAT_1:13;
L964: ( R8 + 1 ) in ( dom ( C171 ^ <* C173 *> ) ) by L963 , L928 , L573;
L965: ( D59 . ( R8 + 1 ) ) = C173 by L964 , L962 , FINSEQ_1:def 7;
L966: D64 = D64;
thus L967: thesis by L966 , L938 , L944 , L945 , L961 , L965 , TREES_1:def 9;
end;
L968:
now
assume that
L969: R8 >= ( ( len C171 ) + 1 )
and
L970: R8 < ( ( ( len C171 ) + 1 ) + ( len C172 ) );
L971: ( R8 + 1 ) >= ( ( ( len C171 ) + 1 ) + 1 ) by L969 , XREAL_1:7;
L972: ( R8 + 1 ) <= ( ( ( len C171 ) + 1 ) + ( len C172 ) ) by L970 , NAT_1:13;
L973: ( D59 . ( R8 + 1 ) ) = ( C172 . ( ( R8 + 1 ) - ( ( len C171 ) + 1 ) ) ) by L972 , L928 , L971 , FINSEQ_1:23;
L974: ( D61 . ( R8 + 1 ) ) = ( C172 . ( ( R8 + 1 ) - ( ( len C171 ) + 1 ) ) ) by L930 , L971 , L972 , FINSEQ_1:23;
L975: C175 in D62 by L974 , L928 , L929 , L930 , L931 , L943 , L944 , L945 , L973 , L629;
L976: ( len C171 ) <> R8 by L969 , NAT_1:13;
L977: (not <* ( len C171 ) *> is_a_prefix_of ( <* R8 *> ^ D64 )) by L976 , TREES_1:50;
L978: (not <* ( len C171 ) *> is_a_proper_prefix_of ( <* R8 *> ^ D64 )) by L977 , XBOOLE_0:def 8;
thus L979: thesis by L978 , L938 , L945 , L975 , TREES_1:def 9;
end;
thus L980: thesis by L968 , L928 , L943 , L946 , L947 , L960 , FINSEQ_1:22 , XXREAL_0:1;
end;
thus L981: thesis by L942 , L941 , TREES_1:22;
end;

assume L982: C175 in D63;
L983: ((C175 in D62 & (not <* ( len C171 ) *> is_a_proper_prefix_of C175)) or (ex B78 being (FinSequence of ( NAT )) st (B78 in C173 & C175 = ( <* ( len C171 ) *> ^ B78 )))) by L982 , L938 , TREES_1:def 9;
assume L984: (not C175 in D60);
L985: C175 <> ( {} ) by L984 , L629;
L986: ( ( C171 ^ <* C173 *> ) . ( ( len C171 ) + 1 ) ) = C173 by FINSEQ_1:42;
L987: ( len C171 ) < ( ( len C171 ) + 1 ) by NAT_1:13;
L988: ( ( len C171 ) + 1 ) <= ( ( ( len C171 ) + 1 ) + ( len C172 ) ) by NAT_1:11;
L989: ( len C171 ) < ( len D61 ) by L988 , L930 , L931 , NAT_1:13;
L990: ( ( len C171 ) + 1 ) in ( dom ( C171 ^ <* C173 *> ) ) by L928 , L987 , L573;
L991: ( D59 . ( ( len C171 ) + 1 ) ) = C173 by L990 , L986 , FINSEQ_1:def 7;
consider R8 being (Element of ( NAT )), R12 being FinSequence such that L992: R8 < ( len D61 ) and L993: R12 in ( D61 . ( R8 + 1 ) ) and L994: C175 = ( <* R8 *> ^ R12 ) by L991 , L928 , L929 , L930 , L931 , L983 , L984 , L985 , L989 , L629;
reconsider D65 = R12 as (FinSequence of ( NAT )) by L994 , FINSEQ_1:36;
L995: (R8 = ( len C171 ) implies D65 = ( {} )) by L928 , L929 , L930 , L931 , L983 , L984 , L991 , L992 , L994 , L629 , TREES_1:10;
L996: ( {} ) in C173 by TREES_1:22;
L997: R8 <> ( len C171 ) by L996 , L928 , L929 , L930 , L931 , L984 , L991 , L992 , L994 , L995 , L629;
L998: (R8 < ( len C171 ) or (R8 > ( len C171 ) & 1 <= 1)) by L997 , XXREAL_0:1;
L999: ((1 <= ( 1 + R8 ) & ( 1 + R8 ) = ( R8 + 1 ) & ( R8 + 1 ) <= ( len C171 ) & D59 = ( C171 ^ ( <* C173 *> ^ C172 ) ) & D61 = ( C171 ^ ( <* C174 *> ^ C172 ) )) or (( ( len C171 ) + 1 ) < ( R8 + 1 ) & ( R8 + 1 ) <= ( len D59 ))) by L998 , L928 , L929 , L930 , L931 , L992 , FINSEQ_1:32 , NAT_1:11 , NAT_1:13 , XREAL_1:6;
L1000: ((( D59 . ( R8 + 1 ) ) = ( C171 . ( R8 + 1 ) ) & ( D61 . ( R8 + 1 ) ) = ( C171 . ( R8 + 1 ) )) or (( D59 . ( R8 + 1 ) ) = ( C172 . ( ( R8 + 1 ) - ( ( len C171 ) + 1 ) ) ) & ( D61 . ( R8 + 1 ) ) = ( C172 . ( ( R8 + 1 ) - ( ( len C171 ) + 1 ) ) ))) by L999 , L928 , L929 , L930 , L931 , L1 , FINSEQ_1:24;
thus L1001: contradiction by L1000 , L928 , L929 , L930 , L931 , L984 , L992 , L993 , L994 , L629;
end;
theorem
L1002: (for B79 being Tree holds ( ^ B79 ) = ( ( elementary_tree 1 ) with-replacement (<* ( 0 ) *> , B79) ))
proof
let C176 being Tree;
let C177 being (FinSequence of ( NAT ));
L1003: ( <* C176 *> . 1 ) = C176 by FINSEQ_1:40;
L1004: ( len <* C176 *> ) = 1 by FINSEQ_1:40;
L1005: ( ( 0 ) + 1 ) = 1;
L1006: ( {} ) in C176 by TREES_1:22;
L1007: <* ( 0 ) *> in ( elementary_tree 1 ) by TARSKI:def 2 , TREES_1:51;
thus L1008: (C177 in ( ^ C176 ) implies C177 in ( ( elementary_tree 1 ) with-replacement (<* ( 0 ) *> , C176) ))
proof
assume L1009: C177 in ( ^ C176 );
L1010:
now
assume L1011: C177 <> ( {} );
consider R8 being (Element of ( NAT )), R10 being FinSequence such that L1012: R8 < ( len <* C176 *> ) and L1013: R10 in ( <* C176 *> . ( R8 + 1 ) ) and L1014: C177 = ( <* R8 *> ^ R10 ) by L1011 , L1009 , L629;
reconsider D66 = R10 as (FinSequence of ( NAT )) by L1014 , FINSEQ_1:36;
L1015: R8 = ( 0 ) by L1004 , L1005 , L1012 , NAT_1:13;
L1016: C177 = ( <* R8 *> ^ D66 ) by L1014;
thus L1017: thesis by L1016 , L1003 , L1007 , L1013 , L1015 , TREES_1:def 9;
end;
thus L1018: thesis by L1010 , TREES_1:22;
end;

assume L1019: C177 in ( ( elementary_tree 1 ) with-replacement (<* ( 0 ) *> , C176) );
L1020: ((C177 in ( elementary_tree 1 ) & (not <* ( 0 ) *> is_a_proper_prefix_of C177)) or (ex B80 being (FinSequence of ( NAT )) st (B80 in C176 & C177 = ( <* ( 0 ) *> ^ B80 )))) by L1019 , L1007 , TREES_1:def 9;
L1021:
now
assume L1022: C177 in ( elementary_tree 1 );
L1023: (C177 = ( {} ) or (C177 = <* ( 0 ) *> & ( C177 ^ ( {} ) ) = C177)) by L1022 , FINSEQ_1:34 , TARSKI:def 2 , TREES_1:51;
thus L1024: thesis by L1023 , L1003 , L1004 , L1005 , L1006 , L629;
end;
thus L1025: thesis by L1021 , L1003 , L1004 , L1005 , L1020 , L629;
end;
theorem
L1026: (for B81 , B82 being Tree holds ( tree (B81 , B82) ) = ( ( ( elementary_tree 2 ) with-replacement (<* ( 0 ) *> , B81) ) with-replacement (<* 1 *> , B82) ))
proof
let C178 , C179 being Tree;
let C180 being (FinSequence of ( NAT ));
L1027: ( <* C178 , C179 *> . 1 ) = C178 by FINSEQ_1:44;
L1028: ( <* C178 , C179 *> . 2 ) = C179 by FINSEQ_1:44;
L1029: ( len <* C178 , C179 *> ) = 2 by FINSEQ_1:44;
L1030: ( 1 + 1 ) = 2;
L1031: ( ( 0 ) + 1 ) = 1;
L1032: ( {} ) in C178 by TREES_1:22;
L1033: ( {} ) in C179 by TREES_1:22;
L1034: <* ( 0 ) *> in ( elementary_tree 2 ) by ENUMSET1:def 1 , TREES_1:53;
L1035: <* 1 *> in ( elementary_tree 2 ) by ENUMSET1:def 1 , TREES_1:53;
L1036: (not <* ( 0 ) *> is_a_proper_prefix_of <* 1 *>) by TREES_1:52;
L1037: <* 1 *> in ( ( elementary_tree 2 ) with-replacement (<* ( 0 ) *> , C178) ) by L1036 , L1034 , L1035 , TREES_1:def 9;
thus L1038: (C180 in ( tree (C178 , C179) ) implies C180 in ( ( ( elementary_tree 2 ) with-replacement (<* ( 0 ) *> , C178) ) with-replacement (<* 1 *> , C179) ))
proof
assume L1039: C180 in ( tree (C178 , C179) );
L1040:
now
assume L1041: C180 <> ( {} );
consider R8 being (Element of ( NAT )), R10 being FinSequence such that L1042: R8 < ( len <* C178 , C179 *> ) and L1043: R10 in ( <* C178 , C179 *> . ( R8 + 1 ) ) and L1044: C180 = ( <* R8 *> ^ R10 ) by L1041 , L1039 , L629;
reconsider D67 = R10 as (FinSequence of ( NAT )) by L1044 , FINSEQ_1:36;
L1045: (not <* 1 *> is_a_prefix_of ( <* ( 0 ) *> ^ D67 )) by TREES_1:50;
L1046:
now
assume L1047: R8 = ( 0 );
L1048: (not <* 1 *> is_a_proper_prefix_of ( <* R8 *> ^ D67 )) by L1047 , L1045 , XBOOLE_0:def 8;
L1049: ( <* R8 *> ^ D67 ) in ( ( elementary_tree 2 ) with-replacement (<* ( 0 ) *> , C178) ) by L1027 , L1034 , L1043 , L1047 , TREES_1:def 9;
thus L1050: thesis by L1049 , L1037 , L1044 , L1048 , TREES_1:def 9;
end;
L1051: R8 <= ( ( 0 ) + 1 ) by L1029 , L1030 , L1042 , NAT_1:13;
L1052: ((R8 = 1 & (R8 = 1 implies ( <* R8 *> ^ D67 ) in ( ( ( elementary_tree 2 ) with-replacement (<* ( 0 ) *> , C178) ) with-replacement (<* 1 *> , C179) ))) or (R8 >= ( 0 ) & R8 <= ( 0 ))) by L1051 , L1028 , L1037 , L1043 , NAT_1:8 , TREES_1:def 9;
thus L1053: thesis by L1052 , L1044 , L1046;
end;
thus L1054: thesis by L1040 , TREES_1:22;
end;

assume L1055: C180 in ( ( ( elementary_tree 2 ) with-replacement (<* ( 0 ) *> , C178) ) with-replacement (<* 1 *> , C179) );
L1056: ((C180 in ( ( elementary_tree 2 ) with-replacement (<* ( 0 ) *> , C178) ) & (not <* 1 *> is_a_proper_prefix_of C180)) or (ex B83 being (FinSequence of ( NAT )) st (B83 in C179 & C180 = ( <* 1 *> ^ B83 )))) by L1055 , L1037 , TREES_1:def 9;
L1057:
now
assume L1058: C180 in ( ( elementary_tree 2 ) with-replacement (<* ( 0 ) *> , C178) );
L1059: ((C180 in ( elementary_tree 2 ) & (not <* ( 0 ) *> is_a_proper_prefix_of C180)) or (ex B84 being (FinSequence of ( NAT )) st (B84 in C178 & C180 = ( <* ( 0 ) *> ^ B84 )))) by L1058 , L1034 , TREES_1:def 9;
L1060:
now
assume L1061: C180 in ( elementary_tree 2 );
L1062: (C180 = ( {} ) or C180 = <* ( 0 ) *> or C180 = <* 1 *>) by L1061 , ENUMSET1:def 1 , TREES_1:53;
L1063: ( C180 ^ ( {} ) ) = C180 by FINSEQ_1:34;
thus L1064: thesis by L1063 , L1027 , L1028 , L1029 , L1030 , L1031 , L1032 , L1033 , L1062 , L629;
end;
thus L1065: thesis by L1060 , L1027 , L1029 , L1031 , L1059 , L629;
end;
thus L1066: thesis by L1057 , L1028 , L1029 , L1030 , L1056 , L629;
end;
registration
let C181 being  FinTree-yielding FinSequence;
cluster ( tree C181 ) ->  finite;
coherence
proof
defpred S7[ set ] means (for B85 being  FinTree-yielding FinSequence holds (( len B85 ) = $1 implies ( tree B85 ) is  finite  finite  finite  finite Tree));
L1067: S7[ ( 0 ) ]
proof
let C182 being  FinTree-yielding FinSequence;
assume L1068: ( len C182 ) = ( 0 );
L1069: C182 = ( {} ) by L1068;
thus L1070: thesis by L1069 , L790;
end;
L1071: (for R8 being (Element of ( NAT )) holds (S7[ R8 ] implies S7[ ( R8 + 1 ) ]))
proof
let R8 being (Element of ( NAT ));
assume L1072: (for B86 being  FinTree-yielding FinSequence holds (( len B86 ) = R8 implies ( tree B86 ) is  finite  finite  finite  finite Tree));
let C183 being  FinTree-yielding FinSequence;
assume that
L1073: ( len C183 ) = ( R8 + 1 );
L1074: C183 <> ( {} ) by L1073;
consider R10 being FinSequence, R1 being set such that L1075: C183 = ( R10 ^ <* R1 *> ) by L1074 , FINSEQ_1:46;
reconsider D68 = R10 as  FinTree-yielding FinSequence by L1075 , L371;
L1076: ( len <* R1 *> ) = 1 by FINSEQ_1:40;
L1077: ( len C183 ) = ( ( len D68 ) + 1 ) by L1076 , L1075 , FINSEQ_1:22;
L1078: ( tree D68 ) is  finite by L1077 , L1072 , L1073;
reconsider D69 = ( ( tree D68 ) \/ ( elementary_tree ( R8 + 1 ) ) ) as  finite Tree by L1078;
L1079: <* R1 *> is  FinTree-yielding by L1075 , L371;
reconsider D70 = R1 as  finite Tree by L1079 , L393;
L1080: R8 < ( R8 + 1 ) by NAT_1:13;
L1081: <* R8 *> in ( elementary_tree ( R8 + 1 ) ) by L1080 , TREES_1:28;
reconsider D71 = <* R8 *> as (Element of D69) by L1081 , XBOOLE_0:def 3;
L1082: ( tree C183 ) = ( D69 with-replacement (D71 , D70) ) by L1073 , L1075 , L1077 , L830;
thus L1083: thesis by L1082;
end;
L1084: (for R8 being (Element of ( NAT )) holds S7[ R8 ]) from NAT_1:sch 1(L1067 , L1071);
L1085: (( len C181 ) = ( len C181 ) implies thesis) by L1084;
thus L1086: thesis by L1085;
end;
end;
registration
let C184 being  finite Tree;
cluster ( ^ C184 ) ->  finite;
coherence;
end;
registration
let C185 , C186 being  finite Tree;
cluster ( tree (C185 , C186) ) ->  finite;
coherence;
end;
theorem
L1090: (for B87 being Tree holds (for B88 being set holds (B88 in ( ^ B87 ) iff (B88 = ( {} ) or (ex R9 being FinSequence st (R9 in B87 & B88 = ( <* ( 0 ) *> ^ R9 )))))))
proof
let C187 being Tree;
let R1 being set;
set D72 = <* C187 *>;
L1091: ( len D72 ) = 1 by FINSEQ_1:40;
L1092: ( D72 . 1 ) = C187 by FINSEQ_1:40;
thus L1093: ((R1 in ( ^ C187 ) & R1 <> ( {} )) implies (ex R9 being FinSequence st (R9 in C187 & R1 = ( <* ( 0 ) *> ^ R9 ))))
proof
assume that
L1094: R1 in ( ^ C187 )
and
L1095: R1 <> ( {} );
consider R8 being (Element of ( NAT )), R10 being FinSequence such that L1096: R8 < ( len D72 ) and L1097: R10 in ( D72 . ( R8 + 1 ) ) and L1098: R1 = ( <* R8 *> ^ R10 ) by L1094 , L1095 , L629;
L1099: ( ( 0 ) + 1 ) = 1;
L1100: R8 = ( 0 ) by L1099 , L1091 , L1096 , NAT_1:13;
thus L1101: thesis by L1100 , L1092 , L1097 , L1098;
end;

L1102: ( 0 ) < ( ( 0 ) + 1 );
thus L1103: thesis by L1102 , L1091 , L1092 , L629;
end;
theorem
L1104: (for B89 being Tree holds (for B90 being FinSequence holds (B90 in B89 iff ( <* ( 0 ) *> ^ B90 ) in ( ^ B89 ))))
proof
let C188 being Tree;
let C189 being FinSequence;
thus L1105: (C189 in C188 implies ( <* ( 0 ) *> ^ C189 ) in ( ^ C188 )) by L1090;
assume L1106: ( <* ( 0 ) *> ^ C189 ) in ( ^ C188 );
consider R8 being (Element of ( NAT )), R10 being FinSequence such that L1107: R8 < ( len <* C188 *> ) and L1108: R10 in ( <* C188 *> . ( R8 + 1 ) ) and L1109: ( <* ( 0 ) *> ^ C189 ) = ( <* R8 *> ^ R10 ) by L1106 , L629;
L1110: ( ( <* ( 0 ) *> ^ C189 ) . 1 ) = ( 0 ) by FINSEQ_1:41;
L1111: ( ( <* R8 *> ^ R10 ) . 1 ) = R8 by FINSEQ_1:41;
L1112: C189 = R10 by L1111 , L1109 , L1110 , FINSEQ_1:33;
thus L1113: thesis by L1112 , L1108 , L1109 , L1110 , L1111 , FINSEQ_1:40;
end;
theorem
L1114: (for B91 being Tree holds ( elementary_tree 1 ) c= ( ^ B91 ))
proof
let C190 being Tree;
let R1 being set;
assume L1115: R1 in ( elementary_tree 1 );
reconsider D73 = R1 as (Element of ( elementary_tree 1 )) by L1115;
L1116: (D73 = ( {} ) or (D73 = <* ( 0 ) *> & ( {} ) in C190 & ( <* ( 0 ) *> ^ ( {} ) ) = <* ( 0 ) *>)) by FINSEQ_1:34 , TARSKI:def 2 , TREES_1:22 , TREES_1:51;
thus L1117: thesis by L1116 , L1090;
end;
theorem
L1118: (for B92 , B93 being Tree holds (B92 c= B93 implies ( ^ B92 ) c= ( ^ B93 )))
proof
let C191 , C192 being Tree;
assume that
L1119: C191 c= C192;
let R1 being set;
assume L1120: R1 in ( ^ C191 );
reconsider D74 = R1 as (Element of ( ^ C191 )) by L1120;
L1121: (D74 = ( {} ) or (ex R10 being FinSequence st (R10 in C191 & D74 = ( <* ( 0 ) *> ^ R10 )))) by L1090;
thus L1122: thesis by L1121 , L1119 , L1090;
end;
theorem
L1123: (for B94 , B95 being Tree holds (( ^ B94 ) = ( ^ B95 ) implies B94 = B95))
proof
let C193 , C194 being Tree;
assume that
L1124: ( ^ C193 ) = ( ^ C194 );
let C195 being (FinSequence of ( NAT ));
L1125: (C195 in C193 iff ( <* ( 0 ) *> ^ C195 ) in ( ^ C193 )) by L1104;
thus L1126: thesis by L1125 , L1124 , L1104;
end;
theorem
L1127: (for B96 being Tree holds ( ( ^ B96 ) | <* ( 0 ) *> ) = B96)
proof
let C196 being Tree;
set D75 = <* C196 *>;
L1128: ( len D75 ) = 1 by FINSEQ_1:40;
L1129: ( D75 . 1 ) = C196 by FINSEQ_1:40;
L1130: ( ( 0 ) + 1 ) = 1;
thus L1131: thesis by L1130 , L1128 , L1129 , L709;
end;
theorem
L1132: (for B97 , B98 being Tree holds ( ( ^ B97 ) with-replacement (<* ( 0 ) *> , B98) ) = ( ^ B98 ))
proof
let C197 , C198 being Tree;
L1133: ( len ( {} ) ) = ( 0 );
L1134: <* C197 *> = ( ( {} ) ^ <* C197 *> ) by FINSEQ_1:34;
L1135: <* C198 *> = ( ( {} ) ^ <* C198 *> ) by FINSEQ_1:34;
L1136: <* C197 *> = ( <* C197 *> ^ ( {} ) ) by FINSEQ_1:34;
L1137: <* C198 *> = ( <* C198 *> ^ ( {} ) ) by FINSEQ_1:34;
thus L1138: thesis by L1137 , L1133 , L1134 , L1135 , L1136 , L925;
end;
theorem
L1139: ( ^ ( elementary_tree ( 0 ) ) ) = ( elementary_tree 1 )
proof
set D76 = ( elementary_tree ( 0 ) );
thus L1140: ( ^ D76 ) = ( tree ( 1 |-> D76 ) ) by FINSEQ_2:59
.= ( elementary_tree 1 ) by L812;
end;
theorem
L1141: (for B99 , B100 being Tree holds (for B101 being set holds (B101 in ( tree (B99 , B100) ) iff (B101 = ( {} ) or (ex R9 being FinSequence st ((R9 in B99 & B101 = ( <* ( 0 ) *> ^ R9 )) or (R9 in B100 & B101 = ( <* 1 *> ^ R9 ))))))))
proof
let C199 , C200 being Tree;
let R1 being set;
set D77 = <* C199 , C200 *>;
L1142: ( len D77 ) = 2 by FINSEQ_1:44;
L1143: ( D77 . 1 ) = C199 by FINSEQ_1:44;
L1144: ( D77 . 2 ) = C200 by FINSEQ_1:44;
thus L1145: ((R1 in ( tree (C199 , C200) ) & R1 <> ( {} )) implies (ex R9 being FinSequence st ((R9 in C199 & R1 = ( <* ( 0 ) *> ^ R9 )) or (R9 in C200 & R1 = ( <* 1 *> ^ R9 )))))
proof
assume that
L1146: R1 in ( tree (C199 , C200) )
and
L1147: R1 <> ( {} );
consider R8 being (Element of ( NAT )), R10 being FinSequence such that L1148: R8 < ( len D77 ) and L1149: R10 in ( D77 . ( R8 + 1 ) ) and L1150: R1 = ( <* R8 *> ^ R10 ) by L1146 , L1147 , L629;
L1151: ( 1 + 1 ) = 2;
L1152: R8 <= 1 by L1151 , L1142 , L1148 , NAT_1:13;
L1153: (R8 = 1 or R8 < ( ( 0 ) + 1 )) by L1152 , XXREAL_0:1;
L1154: (R8 = 1 or R8 = ( 0 )) by L1153 , NAT_1:13;
thus L1155: thesis by L1154 , L1143 , L1144 , L1149 , L1150;
end;

L1156:
now
given R10 being FinSequence such that
L1157: ((R10 in C199 & R1 = ( <* ( 0 ) *> ^ R10 )) or (R10 in C200 & R1 = ( <* 1 *> ^ R10 )));

L1158: (R1 = ( <* ( 0 ) *> ^ R10 ) or R1 <> ( <* ( 0 ) *> ^ R10 ));
consider R8 being (Element of ( NAT )) such that L1159: ((R8 = ( 0 ) & R1 = ( <* ( 0 ) *> ^ R10 )) or (R8 = 1 & R1 <> ( <* ( 0 ) *> ^ R10 ))) by L1158;
take D78 = R8;
take D79 = R10;
thus L1160: D78 < ( len D77 ) by L1142 , L1159;
L1161: ( ( <* ( 0 ) *> ^ D79 ) . 1 ) = ( 0 ) by FINSEQ_1:41;
thus L1162: (D79 in ( D77 . ( D78 + 1 ) ) & R1 = ( <* D78 *> ^ D79 )) by L1161 , L1157 , L1159 , FINSEQ_1:41 , FINSEQ_1:44;
end;
thus L1163: thesis by L1156 , L629;
end;
theorem
L1164: (for B102 , B103 being Tree holds (for B104 being FinSequence holds (B104 in B102 iff ( <* ( 0 ) *> ^ B104 ) in ( tree (B102 , B103) ))))
proof
let C201 , C202 being Tree;
L1165: <* C201 , C202 *> = ( <* C201 *> ^ <* C202 *> ) by FINSEQ_1:def 9;
L1166: <* C201 *> = ( ( {} ) ^ <* C201 *> ) by FINSEQ_1:34;
L1167: ( len ( {} ) ) = ( 0 );
thus L1168: thesis by L1167 , L1165 , L1166 , L772;
end;
theorem
L1169: (for B105 , B106 being Tree holds (for B107 being FinSequence holds (B107 in B106 iff ( <* 1 *> ^ B107 ) in ( tree (B105 , B106) ))))
proof
let C203 , C204 being Tree;
L1170: <* C203 , C204 *> = ( <* C203 *> ^ <* C204 *> ) by FINSEQ_1:def 9;
L1171: ( len <* C203 *> ) = 1 by FINSEQ_1:40;
L1172: <* C203 , C204 *> = ( <* C203 , C204 *> ^ ( {} ) ) by FINSEQ_1:34;
thus L1173: thesis by L1172 , L1170 , L1171 , L772;
end;
theorem
L1174: (for B108 , B109 being Tree holds ( elementary_tree 2 ) c= ( tree (B108 , B109) ))
proof
let C205 , C206 being Tree;
let R1 being set;
assume L1175: R1 in ( elementary_tree 2 );
reconsider D80 = R1 as (Element of ( elementary_tree 2 )) by L1175;
L1176: (D80 = ( {} ) or (D80 = <* ( 0 ) *> & ( {} ) in C205 & ( <* ( 0 ) *> ^ ( {} ) ) = <* ( 0 ) *>) or (D80 = <* 1 *> & ( {} ) in C206 & ( <* 1 *> ^ ( {} ) ) = <* 1 *>)) by ENUMSET1:def 1 , FINSEQ_1:34 , TREES_1:22 , TREES_1:53;
thus L1177: thesis by L1176 , L1141;
end;
theorem
L1178: (for B110 , B111 , B112 , B113 being Tree holds ((B110 c= B112 & B111 c= B113) implies ( tree (B110 , B111) ) c= ( tree (B112 , B113) )))
proof
let C207 , C208 , C209 , C210 being Tree;
assume that
L1179: C207 c= C209
and
L1180: C208 c= C210;
let R1 being set;
assume L1181: R1 in ( tree (C207 , C208) );
reconsider D81 = R1 as (Element of ( tree (C207 , C208) )) by L1181;
L1182: (D81 = ( {} ) or (ex R10 being FinSequence st ((R10 in C207 & D81 = ( <* ( 0 ) *> ^ R10 )) or (R10 in C208 & D81 = ( <* 1 *> ^ R10 ))))) by L1141;
thus L1183: thesis by L1182 , L1179 , L1180 , L1141;
end;
theorem
L1184: (for B114 , B115 , B116 , B117 being Tree holds (( tree (B114 , B115) ) = ( tree (B116 , B117) ) implies (B114 = B116 & B115 = B117)))
proof
let C211 , C212 , C213 , C214 being Tree;
assume that
L1185: ( tree (C211 , C212) ) = ( tree (C213 , C214) );
L1186:
now
let R9 being FinSequence;
L1187: (R9 in C211 iff ( <* ( 0 ) *> ^ R9 ) in ( tree (C211 , C212) )) by L1164;
thus L1188: (R9 in C211 iff R9 in C213) by L1187 , L1185 , L1164;
end;
thus L1189: (for B118 being (FinSequence of ( NAT )) holds (B118 in C211 iff B118 in C213)) by L1186;
let C215 being (FinSequence of ( NAT ));
L1190: (C215 in C212 iff ( <* 1 *> ^ C215 ) in ( tree (C211 , C212) )) by L1169;
thus L1191: thesis by L1190 , L1185 , L1169;
end;
theorem
L1192: (for B119 , B120 being Tree holds (( ( tree (B119 , B120) ) | <* ( 0 ) *> ) = B119 & ( ( tree (B119 , B120) ) | <* 1 *> ) = B120))
proof
let C216 , C217 being Tree;
set D82 = <* C216 , C217 *>;
L1193: ( len D82 ) = 2 by FINSEQ_1:44;
L1194: ( D82 . 1 ) = C216 by FINSEQ_1:44;
L1195: ( D82 . 2 ) = C217 by FINSEQ_1:44;
L1196: ( ( 0 ) + 1 ) = 1;
L1197: ( 1 + 1 ) = 2;
thus L1198: thesis by L1197 , L1193 , L1194 , L1195 , L1196 , L709;
end;
theorem
L1199: (for B121 , B122 , B123 being Tree holds (( ( tree (B122 , B123) ) with-replacement (<* ( 0 ) *> , B121) ) = ( tree (B121 , B123) ) & ( ( tree (B122 , B123) ) with-replacement (<* 1 *> , B121) ) = ( tree (B122 , B121) )))
proof
let C218 , C219 , C220 being Tree;
L1200: ( len ( {} ) ) = ( 0 );
L1201: <* C219 *> = ( ( {} ) ^ <* C219 *> ) by FINSEQ_1:34;
L1202: <* C218 *> = ( ( {} ) ^ <* C218 *> ) by FINSEQ_1:34;
L1203: ( <* C219 , C220 *> ^ ( {} ) ) = <* C219 , C220 *> by FINSEQ_1:34;
L1204: ( <* C219 , C218 *> ^ ( {} ) ) = <* C219 , C218 *> by FINSEQ_1:34;
L1205: ( len <* C219 *> ) = 1 by FINSEQ_1:40;
L1206: <* C219 , C220 *> = ( <* C219 *> ^ <* C220 *> ) by FINSEQ_1:def 9;
L1207: <* C219 , C218 *> = ( <* C219 *> ^ <* C218 *> ) by FINSEQ_1:def 9;
L1208: <* C218 , C220 *> = ( <* C218 *> ^ <* C220 *> ) by FINSEQ_1:def 9;
thus L1209: thesis by L1208 , L1200 , L1201 , L1202 , L1203 , L1204 , L1205 , L1206 , L1207 , L925;
end;
theorem
L1210: ( tree (( elementary_tree ( 0 ) ) , ( elementary_tree ( 0 ) )) ) = ( elementary_tree 2 )
proof
set D83 = ( elementary_tree ( 0 ) );
thus L1211: ( tree (D83 , D83) ) = ( tree ( 2 |-> D83 ) ) by FINSEQ_2:61
.= ( elementary_tree 2 ) by L812;
end;
theorem
L1212: (for R8 being (Element of ( NAT )) holds (for R15 being  FinTree-yielding FinSequence holds ((for B124 being  finite Tree holds (B124 in ( rng R15 ) implies ( height B124 ) <= R8)) implies ( height ( tree R15 ) ) <= ( R8 + 1 ))))
proof
let R8 being (Element of ( NAT ));
let R15 being  FinTree-yielding FinSequence;
assume that
L1213: (for B125 being  finite Tree holds (B125 in ( rng R15 ) implies ( height B125 ) <= R8));
consider C221 being (FinSequence of ( NAT )) such that L1214: C221 in ( tree R15 ) and L1215: ( len C221 ) = ( height ( tree R15 ) ) by TREES_1:def 12;
L1216: ((C221 = ( {} ) & ( len ( {} ) ) = ( 0 )) or (ex R8 being (Element of ( NAT )) st (ex R10 being FinSequence st (R8 < ( len R15 ) & R10 in ( R15 . ( R8 + 1 ) ) & C221 = ( <* R8 *> ^ R10 ))))) by L1214 , L629;
L1217:
now
given R7 being (Element of ( NAT )) , R10 being FinSequence such that
L1218: R7 < ( len R15 )
and
L1219: R10 in ( R15 . ( R7 + 1 ) )
and
L1220: C221 = ( <* R7 *> ^ R10 );

L1221: ( R15 . ( R7 + 1 ) ) in ( rng R15 ) by L1218 , L573;
L1222: ( rng R15 ) is  constituted-FinTrees by L324;
reconsider D84 = ( R15 . ( R7 + 1 ) ) as  finite Tree by L1222 , L1221;
reconsider D85 = R10 as (FinSequence of ( NAT )) by L1220 , FINSEQ_1:36;
L1223: ( len D85 ) <= ( height D84 ) by L1219 , TREES_1:def 12;
L1224: ( height D84 ) <= R8 by L1213 , L1218 , L573;
L1225: ( len <* R7 *> ) = 1 by FINSEQ_1:40;
L1226: ( len D85 ) <= R8 by L1223 , L1224 , XXREAL_0:2;
L1227: ( len C221 ) = ( 1 + ( len D85 ) ) by L1220 , L1225 , FINSEQ_1:22;
thus L1228: thesis by L1227 , L1215 , L1226 , XREAL_1:7;
end;
thus L1229: thesis by L1217 , L1215 , L1216;
end;
theorem
L1230: (for R15 being  FinTree-yielding FinSequence holds (for B126 being  finite Tree holds (B126 in ( rng R15 ) implies ( height ( tree R15 ) ) > ( height B126 ))))
proof
let R15 being  FinTree-yielding FinSequence;
let C222 being  finite Tree;
assume L1231: C222 in ( rng R15 );
consider R1 being set such that L1232: R1 in ( dom R15 ) and L1233: C222 = ( R15 . R1 ) by L1231 , FUNCT_1:def 3;
reconsider D86 = R1 as (Element of ( NAT )) by L1232;
L1234: 1 <= D86 by L1232 , FINSEQ_3:25;
L1235: ( len R15 ) >= D86 by L1232 , FINSEQ_3:25;
consider C223 being Nat such that L1236: D86 = ( 1 + C223 ) by L1234 , NAT_1:10;
reconsider D87 = C223 as (Element of ( NAT )) by ORDINAL1:def 12;
L1237: D87 < ( len R15 ) by L1235 , L1236 , NAT_1:13;
L1238: ( {} ) in C222 by TREES_1:22;
L1239: ( <* D87 *> ^ ( {} ) ) = <* D87 *> by FINSEQ_1:34;
L1240: C222 = ( ( tree R15 ) | <* D87 *> ) by L1233 , L1236 , L1237 , L709;
L1241: <* D87 *> in ( tree R15 ) by L1233 , L1236 , L1237 , L1238 , L1239 , L629;
thus L1242: thesis by L1241 , L1240 , TREES_1:48;
end;
theorem
L1243: (for R15 being  FinTree-yielding FinSequence holds (for B127 being  finite Tree holds ((B127 in ( rng R15 ) & (for B128 being  finite Tree holds (B128 in ( rng R15 ) implies ( height B128 ) <= ( height B127 )))) implies ( height ( tree R15 ) ) = ( ( height B127 ) + 1 ))))
proof
let R15 being  FinTree-yielding FinSequence;
let C224 being  finite Tree;
assume that
L1244: C224 in ( rng R15 )
and
L1245: (for B129 being  finite Tree holds (B129 in ( rng R15 ) implies ( height B129 ) <= ( height C224 )));
L1246: ( height ( tree R15 ) ) > ( height C224 ) by L1244 , L1230;
L1247: ( height ( tree R15 ) ) <= ( ( height C224 ) + 1 ) by L1245 , L1212;
L1248: ( height ( tree R15 ) ) >= ( ( height C224 ) + 1 ) by L1246 , NAT_1:13;
thus L1249: thesis by L1248 , L1247 , XXREAL_0:1;
end;
theorem
L1250: (for B130 being  finite Tree holds ( height ( ^ B130 ) ) = ( ( height B130 ) + 1 ))
proof
let C225 being  finite Tree;
set D88 = ( height C225 );
L1251: ( rng <* C225 *> ) = { C225 } by FINSEQ_1:38;
L1252: C225 in { C225 } by TARSKI:def 1;
L1253: (for B131 being  finite Tree holds (B131 in ( rng <* C225 *> ) implies ( height B131 ) <= D88)) by L1251 , TARSKI:def 1;
thus L1254: thesis by L1253 , L1251 , L1252 , L1243;
end;
theorem
L1255: (for B132 , B133 being  finite Tree holds ( height ( tree (B132 , B133) ) ) = ( ( max (( height B132 ) , ( height B133 )) ) + 1 ))
proof
let C226 , C227 being  finite Tree;
set D89 = ( max (( height C226 ) , ( height C227 )) );
L1256: ( rng <* C226 , C227 *> ) = { C226 , C227 } by FINSEQ_2:127;
L1257: C226 in { C226 , C227 } by TARSKI:def 2;
L1258: C227 in { C226 , C227 } by TARSKI:def 2;
L1259: (D89 = ( height C226 ) or D89 = ( height C227 )) by XXREAL_0:def 10;
L1260:
now
let C228 being  finite Tree;
assume L1261: C228 in ( rng <* C226 , C227 *> );
L1262: (C228 = C226 or C228 = C227) by L1261 , L1256 , TARSKI:def 2;
thus L1263: ( height C228 ) <= D89 by L1262 , XXREAL_0:25;
end;
thus L1264: thesis by L1260 , L1256 , L1257 , L1258 , L1259 , L1243;
end;
begin
registration
let C229 being non  empty set;
let C230 being (Element of ( FinTrees C229 ));
cluster ( dom C230 ) ->  finite;
coherence by L297;
end;
definition
let C231 being FinSequence;
assume that
L1266: C231 is  DTree-yielding;
defpred S8[ Nat , set ] means (ex B134 being DecoratedTree st (B134 = ( C231 . $1 ) & $2 = ( B134 . ( {} ) )));
func roots C231 -> FinSequence means 
(( dom it ) = ( dom C231 ) & (for B135 being (Element of ( NAT )) holds (B135 in ( dom C231 ) implies (ex B136 being DecoratedTree st (B136 = ( C231 . B135 ) & ( it . B135 ) = ( B136 . ( {} ) ))))));
existence
proof
L1267: ( Seg ( len C231 ) ) = ( dom C231 ) by FINSEQ_1:def 3;
L1268: (for B137 being Nat holds (B137 in ( Seg ( len C231 ) ) implies (ex B138 being set st S8[ B137 , B138 ])))
proof
let C232 being Nat;
assume L1269: C232 in ( Seg ( len C231 ) );
L1270: ( C231 . C232 ) in ( rng C231 ) by L1269 , L1267 , FUNCT_1:def 3;
L1271: ( rng C231 ) is  constituted-DTrees by L1266 , L325;
reconsider D90 = ( C231 . C232 ) as DecoratedTree by L1271 , L1270;
take ( D90 . ( {} ) );
take D90;
thus L1272: thesis;
end;
consider C233 being FinSequence such that L1273: (( dom C233 ) = ( Seg ( len C231 ) ) & (for B139 being Nat holds (B139 in ( Seg ( len C231 ) ) implies S8[ B139 , ( C233 . B139 ) ]))) from FINSEQ_1:sch 1(L1268);
take C233;
thus L1274: ( dom C233 ) = ( dom C231 ) by L1273 , FINSEQ_1:def 3;
thus L1275: thesis by L1267 , L1273;
end;
uniqueness
proof
let C234 , C235 being FinSequence;
assume that
L1276: ( dom C234 ) = ( dom C231 )
and
L1277: (for B140 being (Element of ( NAT )) holds (B140 in ( dom C231 ) implies S8[ B140 , ( C234 . B140 ) ]))
and
L1278: ( dom C235 ) = ( dom C231 )
and
L1279: (for B141 being (Element of ( NAT )) holds (B141 in ( dom C231 ) implies S8[ B141 , ( C235 . B141 ) ]));
L1280:
now
let C236 being Nat;
assume L1281: C236 in ( dom C231 );
L1282: S8[ C236 , ( C234 . C236 ) ] by L1281 , L1277;
L1283: S8[ C236 , ( C235 . C236 ) ] by L1279 , L1281;
thus L1284: ( C234 . C236 ) = ( C235 . C236 ) by L1283 , L1282;
end;
thus L1285: thesis by L1280 , L1276 , L1278 , FINSEQ_1:13;
end;
end;
