:: Sequences of Ordinal Numbers. Beginnings of Ordinal Arithmetics
::  by Grzegorz Bancerek
::
:: Received July 18, 1989
:: Copyright (c) 1990-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies ORDINAL1, FUNCT_1, XBOOLE_0, TARSKI, ZFMISC_1, RELAT_1, SETFAM_1,
      SUBSET_1, FUNCOP_1, ORDINAL2, NAT_1;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, RELAT_1, FUNCT_1, ORDINAL1,
      SETFAM_1, FUNCOP_1;
 constructors SETFAM_1, ORDINAL1, FUNCOP_1;
 registrations XBOOLE_0, SUBSET_1, FUNCT_1, ORDINAL1, FUNCOP_1;
 requirements SUBSET, BOOLE, NUMERALS;
 definitions ORDINAL1, TARSKI, XBOOLE_0;
 theorems TARSKI, XBOOLE_0, ORDINAL1, SETFAM_1, ZFMISC_1, FUNCT_1, RELAT_1,
      XBOOLE_1, FUNCOP_1, XTUPLE_0;
 schemes XBOOLE_0, FUNCT_1, ORDINAL1;

begin
scheme OrdinalInd { P1[Ordinal] } : (for R1 being Ordinal holds P1[ R1 ])
provided
L1: P1[ ( {} ) ]
and
L2: (for R1 being Ordinal holds (P1[ R1 ] implies P1[ ( succ R1 ) ]))
and
L3: (for R1 being Ordinal holds ((R1 <> ( {} ) & R1 is  limit_ordinal & (for R4 being Ordinal holds (R4 in R1 implies P1[ R4 ]))) implies P1[ R1 ]))
proof
L4: (for R1 being Ordinal holds ((for R4 being Ordinal holds (R4 in R1 implies P1[ R4 ])) implies P1[ R1 ]))
proof
let R1 being Ordinal;
assume that
L5: (for R4 being Ordinal holds (R4 in R1 implies P1[ R4 ]));
L6:
now
assume that
L7: R1 <> ( {} )
and
L8: (for R4 being Ordinal holds R1 <> ( succ R4 ));
L9: R1 is  limit_ordinal by L8 , ORDINAL1:29;
thus L10: thesis by L9 , L3 , L5 , L7;
end;
L11:
now
given R4 being Ordinal such that
L12: R1 = ( succ R4 );

L13: R4 in R1 by L12 , ORDINAL1:6;
thus L14: thesis by L13 , L2 , L5 , L12;
end;
thus L15: thesis by L11 , L1 , L6;
end;
thus L16: (for R1 being Ordinal holds P1[ R1 ]) from ORDINAL1:sch 2(L4);
end;
theorem
L17: (for R1 being Ordinal holds (for R4 being Ordinal holds (R1 c= R4 iff ( succ R1 ) c= ( succ R4 ))))
proof
let R1 being Ordinal;
let R4 being Ordinal;
L18: (R1 c= R4 iff R1 in ( succ R4 )) by ORDINAL1:22;
thus L19: thesis by L18 , ORDINAL1:21;
end;
theorem
L20: (for R1 being Ordinal holds ( union ( succ R1 ) ) = R1)
proof
let R1 being Ordinal;
thus L21: ( union ( succ R1 ) ) c= R1
proof
let R9 being set;
assume L22: R9 in ( union ( succ R1 ) );
consider R7 being set such that L23: R9 in R7 and L24: R7 in ( succ R1 ) by L22 , TARSKI:def 4;
reconsider D1 = R7 as Ordinal by L24;
L25: D1 c= R1 by L24 , ORDINAL1:22;
thus L26: thesis by L25 , L23;
end;

thus L27: thesis by ORDINAL1:6 , ZFMISC_1:74;
end;
theorem
L28: (for R1 being Ordinal holds ( succ R1 ) c= ( bool R1 ))
proof
let R1 being Ordinal;
let R9 being set;
assume L29: R9 in ( succ R1 );
reconsider D2 = R9 as Ordinal by L29;
L30: (R9 in R1 or R9 = R1) by L29 , ORDINAL1:8;
L31: D2 c= R1 by L30 , ORDINAL1:def 2;
thus L32: thesis by L31;
end;
theorem
L33: ( {} ) is  limit_ordinal
proof
thus L34: ( {} ) = ( union ( {} ) ) by ZFMISC_1:2;
end;
theorem
L35: (for R1 being Ordinal holds ( union R1 ) c= R1)
proof
let R1 being Ordinal;
let R9 being set;
assume L36: R9 in ( union R1 );
consider R8 being set such that L37: R9 in R8 and L38: R8 in R1 by L36 , TARSKI:def 4;
L39: R8 c= R1 by L38 , ORDINAL1:def 2;
thus L40: thesis by L39 , L37;
end;
definition
let R14 being T-Sequence;
func last R14 -> set equals 
( R14 . ( union ( dom R14 ) ) );
coherence;
end;
theorem
L42: (for R1 being Ordinal holds (for R14 being T-Sequence holds (( dom R14 ) = ( succ R1 ) implies ( last R14 ) = ( R14 . R1 )))) by L20;
theorem
L43: (for R7 being set holds ( On R7 ) c= R7)
proof
let R7 being set;
thus L44: (for R9 being set holds (R9 in ( On R7 ) implies R9 in R7)) by ORDINAL1:def 9;
end;
theorem
L45: (for R1 being Ordinal holds ( On R1 ) = R1)
proof
let R1 being Ordinal;
L46: (for R9 being set holds (R9 in R1 iff (R9 in R1 & R9 is Ordinal)));
thus L47: thesis by L46 , ORDINAL1:def 9;
end;
theorem
L48: (for R7 being set holds (for R8 being set holds (R7 c= R8 implies ( On R7 ) c= ( On R8 ))))
proof
let R7 being set;
let R8 being set;
assume L49: R7 c= R8;
let R9 being set;
assume L50: R9 in ( On R7 );
L51: (R9 in R7 & R9 is Ordinal) by L50 , ORDINAL1:def 9;
thus L52: thesis by L51 , L49 , ORDINAL1:def 9;
end;
theorem
L53: (for R7 being set holds ( Lim R7 ) c= R7)
proof
let R7 being set;
thus L54: (for R9 being set holds (R9 in ( Lim R7 ) implies R9 in R7)) by ORDINAL1:def 10;
end;
theorem
L55: (for R7 being set holds (for R8 being set holds (R7 c= R8 implies ( Lim R7 ) c= ( Lim R8 ))))
proof
let R7 being set;
let R8 being set;
assume L56: R7 c= R8;
let R9 being set;
assume L57: R9 in ( Lim R7 );
L58: (R9 in R7 & (ex R1 being Ordinal st (R9 = R1 & R1 is  limit_ordinal))) by L57 , ORDINAL1:def 10;
thus L59: thesis by L58 , L56 , ORDINAL1:def 10;
end;
theorem
L60: (for R7 being set holds ( Lim R7 ) c= ( On R7 ))
proof
let R7 being set;
let R9 being set;
assume L61: R9 in ( Lim R7 );
L62: (R9 in R7 & (ex R1 being Ordinal st (R9 = R1 & R1 is  limit_ordinal))) by L61 , ORDINAL1:def 10;
thus L63: thesis by L62 , ORDINAL1:def 9;
end;
theorem
L64: (for R7 being set holds ((for R9 being set holds (R9 in R7 implies R9 is Ordinal)) implies ( meet R7 ) is Ordinal))
proof
let R7 being set;
assume L65: (for R9 being set holds (R9 in R7 implies R9 is Ordinal));
L66:
now
defpred S1[ Ordinal ] means $1 in R7;
set D3 = the (Element of R7);
assume L67: R7 <> ( {} );
L68: D3 is Ordinal by L67 , L65;
L69: (ex R1 being Ordinal st S1[ R1 ]) by L68 , L67;
consider R1 being Ordinal such that L70: (S1[ R1 ] & (for R4 being Ordinal holds (S1[ R4 ] implies R1 c= R4))) from ORDINAL1:sch 1(L69);
L71: (for R9 being set holds (R9 in R1 iff (for R8 being set holds (R8 in R7 implies R9 in R8))))
proof
let R9 being set;
thus L72: (R9 in R1 implies (for R8 being set holds (R8 in R7 implies R9 in R8)))
proof
assume L73: R9 in R1;
let R8 being set;
assume L74: R8 in R7;
reconsider D4 = R8 as Ordinal by L74 , L65;
L75: R1 c= D4 by L70 , L74;
thus L76: thesis by L75 , L73;
end;

assume L77: (for R8 being set holds (R8 in R7 implies R9 in R8));
thus L78: thesis by L77 , L70;
end;
thus L79: thesis by L71 , L67 , SETFAM_1:def 1;
end;
thus L80: thesis by L66 , SETFAM_1:def 1;
end;
registration
cluster  limit_ordinal for Ordinal;
existence
proof
take ( omega );
thus L81: thesis by ORDINAL1:def 11;
end;
end;
definition
let R7 being set;
func inf R7 -> Ordinal equals 
( meet ( On R7 ) );
coherence
proof
L83: (for R9 being set holds (R9 in ( On R7 ) implies R9 is Ordinal)) by ORDINAL1:def 9;
thus L84: thesis by L83 , L64;
end;
func sup R7 -> Ordinal means 
:L85: (( On R7 ) c= it & (for R1 being Ordinal holds (( On R7 ) c= R1 implies it c= R1)));
existence
proof
defpred S2[ Ordinal ] means ( On R7 ) c= $1;
L86: (for R9 being set holds (R9 in ( On R7 ) implies R9 is Ordinal)) by ORDINAL1:def 9;
reconsider D5 = ( union ( On R7 ) ) as Ordinal by L86 , ORDINAL1:23;
L87: ( On R7 ) c= ( succ D5 )
proof
let R9 being set;
assume L88: R9 in ( On R7 );
reconsider D6 = R9 as Ordinal by L88 , ORDINAL1:def 9;
L89: D6 c= D5 by L88 , ZFMISC_1:74;
thus L90: thesis by L89 , ORDINAL1:22;
end;
L91: (ex R1 being Ordinal st S2[ R1 ]) by L87;
thus L92: (ex B1 being Ordinal st (S2[ B1 ] & (for R1 being Ordinal holds (S2[ R1 ] implies B1 c= R1)))) from ORDINAL1:sch 1(L91);
end;
uniqueness
proof
let R4 being Ordinal;
let R5 being Ordinal;
assume L93: (( On R7 ) c= R4 & (for R1 being Ordinal holds (( On R7 ) c= R1 implies R4 c= R1)) & ( On R7 ) c= R5 & (for R1 being Ordinal holds (( On R7 ) c= R1 implies R5 c= R1)));
thus L94: (R4 c= R5 & R5 c= R4) by L93;
end;
end;
theorem
L96: (for R1 being Ordinal holds (for R7 being set holds (R1 in R7 implies ( inf R7 ) c= R1)))
proof
let R1 being Ordinal;
let R7 being set;
assume L97: R1 in R7;
L98: R1 in ( On R7 ) by L97 , ORDINAL1:def 9;
thus L99: thesis by L98 , SETFAM_1:3;
end;
theorem
L100: (for R6 being Ordinal holds (for R7 being set holds ((( On R7 ) <> ( {} ) & (for R1 being Ordinal holds (R1 in R7 implies R6 c= R1))) implies R6 c= ( inf R7 ))))
proof
let R6 being Ordinal;
let R7 being set;
assume that
L101: ( On R7 ) <> ( {} )
and
L102: (for R1 being Ordinal holds (R1 in R7 implies R6 c= R1));
let R9 being set;
assume that
L103: R9 in R6;
L104: (for R8 being set holds (R8 in ( On R7 ) implies R9 in R8))
proof
let R8 being set;
assume L105: R8 in ( On R7 );
reconsider D7 = R8 as Ordinal by L105 , ORDINAL1:def 9;
L106: D7 in R7 by L105 , ORDINAL1:def 9;
L107: R6 c= D7 by L106 , L102;
thus L108: thesis by L107 , L103;
end;
thus L109: thesis by L104 , L101 , SETFAM_1:def 1;
end;
theorem
L110: (for R1 being Ordinal holds (for R7 being set holds (for R8 being set holds ((R1 in R7 & R7 c= R8) implies ( inf R8 ) c= ( inf R7 )))))
proof
let R1 being Ordinal;
let R7 being set;
let R8 being set;
assume L111: R1 in R7;
L112: ( On R7 ) <> ( {} ) by L111 , ORDINAL1:def 9;
assume L113: R7 c= R8;
L114: ( On R7 ) c= ( On R8 ) by L113 , L48;
thus L115: thesis by L114 , L112 , SETFAM_1:6;
end;
theorem
L116: (for R1 being Ordinal holds (for R7 being set holds (R1 in R7 implies ( inf R7 ) in R7)))
proof
let R1 being Ordinal;
let R7 being set;
defpred S3[ Ordinal ] means $1 in R7;
assume L117: R1 in R7;
L118: (ex R1 being Ordinal st S3[ R1 ]) by L117;
consider R1 being Ordinal such that L119: (S3[ R1 ] & (for R4 being Ordinal holds (S3[ R4 ] implies R1 c= R4))) from ORDINAL1:sch 1(L118);
L120: R1 in ( On R7 ) by L119 , ORDINAL1:def 9;
L121:
now
let R9 being set;
thus L122: (R9 in R1 implies (for R8 being set holds (R8 in ( On R7 ) implies R9 in R8)))
proof
assume L123: R9 in R1;
let R8 being set;
assume L124: R8 in ( On R7 );
reconsider D8 = R8 as Ordinal by L124 , ORDINAL1:def 9;
L125: R8 in R7 by L124 , ORDINAL1:def 9;
L126: R1 c= D8 by L125 , L119;
thus L127: thesis by L126 , L123;
end;

assume L128: (for R8 being set holds (R8 in ( On R7 ) implies R9 in R8));
thus L129: R9 in R1 by L128 , L120;
end;
L130: ( On R7 ) <> ( {} ) by L119 , ORDINAL1:def 9;
thus L131: thesis by L130 , L119 , L121 , SETFAM_1:def 1;
end;
theorem
L132: (for R1 being Ordinal holds ( sup R1 ) = R1)
proof
let R1 being Ordinal;
L133: (( On R1 ) = R1 & (for R4 being Ordinal holds (( On R1 ) c= R4 implies R1 c= R4))) by L45;
thus L134: thesis by L133 , L85;
end;
theorem
L135: (for R1 being Ordinal holds (for R7 being set holds (R1 in R7 implies R1 in ( sup R7 ))))
proof
let R1 being Ordinal;
let R7 being set;
assume L136: R1 in R7;
L137: R1 in ( On R7 ) by L136 , ORDINAL1:def 9;
L138: ( On R7 ) c= ( sup R7 ) by L85;
thus L139: thesis by L138 , L137;
end;
theorem
L140: (for R6 being Ordinal holds (for R7 being set holds ((for R1 being Ordinal holds (R1 in R7 implies R1 in R6)) implies ( sup R7 ) c= R6)))
proof
let R6 being Ordinal;
let R7 being set;
assume L141: (for R1 being Ordinal holds (R1 in R7 implies R1 in R6));
L142: ( On R7 ) c= R6
proof
let R9 being set;
assume L143: R9 in ( On R7 );
reconsider D9 = R9 as Ordinal by L143 , ORDINAL1:def 9;
L144: D9 in R7 by L143 , ORDINAL1:def 9;
thus L145: thesis by L144 , L141;
end;
thus L146: thesis by L142 , L85;
end;
theorem
L147: (for R1 being Ordinal holds (for R7 being set holds (R1 in ( sup R7 ) implies (ex R4 being Ordinal st (R4 in R7 & R1 c= R4)))))
proof
let R1 being Ordinal;
let R7 being set;
assume that
L148: R1 in ( sup R7 )
and
L149: (for R4 being Ordinal holds (R4 in R7 implies (not R1 c= R4)));
L150: (for R4 being Ordinal holds (R4 in R7 implies R4 in R1)) by L149 , ORDINAL1:16;
L151: ( sup R7 ) c= R1 by L150 , L140;
thus L152: contradiction by L151 , L148 , ORDINAL1:5;
end;
theorem
L153: (for R7 being set holds (for R8 being set holds (R7 c= R8 implies ( sup R7 ) c= ( sup R8 ))))
proof
let R7 being set;
let R8 being set;
assume L154: R7 c= R8;
L155: ( On R7 ) c= ( On R8 ) by L154 , L48;
L156: ( On R8 ) c= ( sup R8 ) by L85;
L157: ( On R7 ) c= ( sup R8 ) by L156 , L155 , XBOOLE_1:1;
thus L158: thesis by L157 , L85;
end;
theorem
L159: (for R1 being Ordinal holds ( sup { R1 } ) = ( succ R1 ))
proof
let R1 being Ordinal;
L160: ( On { R1 } ) c= ( succ R1 )
proof
let R9 being set;
assume L161: R9 in ( On { R1 } );
L162: R9 in { R1 } by L161 , ORDINAL1:def 9;
L163: R9 = R1 by L162 , TARSKI:def 1;
thus L164: thesis by L163 , ORDINAL1:6;
end;
L165:
now
L166: R1 in { R1 } by TARSKI:def 1;
L167: R1 in ( On { R1 } ) by L166 , ORDINAL1:def 9;
let R4 being Ordinal;
assume L168: ( On { R1 } ) c= R4;
thus L169: ( succ R1 ) c= R4 by L168 , L167 , ORDINAL1:21;
end;
thus L170: thesis by L165 , L160 , L85;
end;
theorem
L171: (for R7 being set holds ( inf R7 ) c= ( sup R7 ))
proof
let R7 being set;
let R9 being set;
set D10 = the (Element of ( On R7 ));
assume L172: R9 in ( inf R7 );
reconsider D11 = D10 as Ordinal by L172 , ORDINAL1:def 9 , SETFAM_1:1;
L173: ( On R7 ) c= ( sup R7 ) by L85;
L174: D11 in ( sup R7 ) by L173 , L172 , SETFAM_1:1 , TARSKI:def 3;
L175: D11 c= ( sup R7 ) by L174 , ORDINAL1:def 2;
L176: R9 in D11 by L172 , SETFAM_1:1 , SETFAM_1:def 1;
thus L177: thesis by L176 , L175;
end;
scheme TSLambda { F1() -> Ordinal , F2(Ordinal) -> set } : (ex R14 being T-Sequence st (( dom R14 ) = F1() & (for R1 being Ordinal holds (R1 in F1() implies ( R14 . R1 ) = F2(R1)))))
proof
deffunc H1(set) = F2(( sup ( union { $1 } ) ));
consider R18 being Function such that L178: (( dom R18 ) = F1() & (for R9 being set holds (R9 in F1() implies ( R18 . R9 ) = H1(R9)))) from FUNCT_1:sch 3;
reconsider D12 = R18 as T-Sequence by L178 , ORDINAL1:def 7;
take D13 = D12;
thus L179: ( dom D13 ) = F1() by L178;
let R1 being Ordinal;
assume L180: R1 in F1();
thus L181: ( D13 . R1 ) = F2(( sup ( union { R1 } ) )) by L180 , L178
.= F2(( sup R1 )) by ZFMISC_1:25
.= F2(R1) by L132;
end;
definition
let R18 being Function;
attr R18 is  Ordinal-yielding
means
:L182: (ex R1 being Ordinal st ( rng R18 ) c= R1);
end;
registration
cluster  Ordinal-yielding for T-Sequence;
existence
proof
set D14 = the Ordinal;
set D15 = the (T-Sequence of D14);
take D15;
take D14;
thus L184: thesis by RELAT_1:def 19;
end;
end;
definition
mode Ordinal-Sequence
 is  Ordinal-yielding T-Sequence;
end;
registration
let R1 being Ordinal;
cluster  ->  Ordinal-yielding for (T-Sequence of R1);
coherence
proof
let C1 being (T-Sequence of R1);
take R1;
thus L187: thesis by RELAT_1:def 19;
end;
end;
registration
let C2 being Ordinal-Sequence;
let R1 being Ordinal;
cluster ( C2 | R1 ) ->  Ordinal-yielding;
coherence
proof
consider R4 being Ordinal such that L189: ( rng C2 ) c= R4 by L182;
L190: ( C2 | R1 ) is  Ordinal-yielding
proof
take R4;
L191: ( rng ( C2 | R1 ) ) c= ( rng C2 ) by RELAT_1:70;
thus L192: thesis by L191 , L189 , XBOOLE_1:1;
end;
thus L193: thesis by L190;
end;
end;
theorem
L195: (for R1 being Ordinal holds (for R19 being Ordinal-Sequence holds (R1 in ( dom R19 ) implies ( R19 . R1 ) is Ordinal)))
proof
let R1 being Ordinal;
let R19 being Ordinal-Sequence;
assume L196: R1 in ( dom R19 );
L197: ( R19 . R1 ) in ( rng R19 ) by L196 , FUNCT_1:def 3;
L198: (ex R4 being Ordinal st ( rng R19 ) c= R4) by L182;
thus L199: thesis by L198 , L197;
end;
registration
let C3 being Ordinal-Sequence;
let C4 being Ordinal;
cluster ( C3 . C4 ) ->  ordinal;
coherence
proof
L200: (C4 in ( dom C3 ) or (not C4 in ( dom C3 )));
thus L201: thesis by L200 , L195 , FUNCT_1:def 2;
end;
end;
scheme OSLambda { F3() -> Ordinal , F4(Ordinal) -> Ordinal } : (ex R19 being Ordinal-Sequence st (( dom R19 ) = F3() & (for R1 being Ordinal holds (R1 in F3() implies ( R19 . R1 ) = F4(R1)))))
proof
consider R14 being T-Sequence such that L203: (( dom R14 ) = F3() & (for R1 being Ordinal holds (R1 in F3() implies ( R14 . R1 ) = F4(R1)))) from TSLambda;
L204: R14 is  Ordinal-yielding
proof
take ( sup ( rng R14 ) );
let R9 being set;
assume L205: R9 in ( rng R14 );
consider R10 being set such that L206: R10 in ( dom R14 ) and L207: R9 = ( R14 . R10 ) by L205 , FUNCT_1:def 3;
reconsider D16 = R10 as Ordinal by L206;
L208: ( R14 . D16 ) = F4(D16) by L203 , L206;
L209: R9 in ( On ( rng R14 ) ) by L208 , L205 , L207 , ORDINAL1:def 9;
L210: ( On ( rng R14 ) ) c= ( sup ( rng R14 ) ) by L85;
thus L211: thesis by L210 , L209;
end;
reconsider D17 = R14 as Ordinal-Sequence by L204;
take D18 = D17;
thus L212: ( dom D18 ) = F3() by L203;
let R1 being Ordinal;
assume L213: R1 in F3();
thus L214: thesis by L213 , L203;
end;
scheme TSUniq1 { F5() -> Ordinal , F6() -> set , F7(Ordinal , set) -> set , F8(Ordinal , T-Sequence) -> set , F9() -> T-Sequence , F10() -> T-Sequence } : F9() = F10()
provided
L215: ( dom F9() ) = F5()
and
L216: (( {} ) in F5() implies ( F9() . ( {} ) ) = F6())
and
L217: (for R1 being Ordinal holds (( succ R1 ) in F5() implies ( F9() . ( succ R1 ) ) = F7(R1 , ( F9() . R1 ))))
and
L218: (for R1 being Ordinal holds ((R1 in F5() & R1 <> ( {} ) & R1 is  limit_ordinal) implies ( F9() . R1 ) = F8(R1 , ( F9() | R1 ))))
and
L219: ( dom F10() ) = F5()
and
L220: (( {} ) in F5() implies ( F10() . ( {} ) ) = F6())
and
L221: (for R1 being Ordinal holds (( succ R1 ) in F5() implies ( F10() . ( succ R1 ) ) = F7(R1 , ( F10() . R1 ))))
and
L222: (for R1 being Ordinal holds ((R1 in F5() & R1 <> ( {} ) & R1 is  limit_ordinal) implies ( F10() . R1 ) = F8(R1 , ( F10() | R1 ))))
proof
defpred S4[ set ] means ( F9() . $1 ) <> ( F10() . $1 );
consider R7 being set such that L223: (for R8 being set holds (R8 in R7 iff (R8 in F5() & S4[ R8 ]))) from XBOOLE_0:sch 1;
L224: (for R12 being set holds (R12 in R7 implies R12 in F5())) by L223;
L225: R7 c= F5() by L224 , TARSKI:def 3;
assume L226: F9() <> F10();
L227: (ex R11 being set st (R11 in F5() & ( F9() . R11 ) <> ( F10() . R11 ))) by L226 , L215 , L219 , FUNCT_1:2;
L228: R7 <> ( {} ) by L227 , L223;
consider R4 being Ordinal such that L229: R4 in R7 and L230: (for R5 being Ordinal holds (R5 in R7 implies R4 c= R5)) by L228 , L225 , ORDINAL1:20;
L231: R4 in F5() by L223 , L229;
L232: R4 c= F5() by L231 , ORDINAL1:def 2;
L233: (( dom ( F9() | R4 ) ) = R4 & ( dom ( F10() | R4 ) ) = R4) by L232 , L215 , L219 , RELAT_1:62;
L234:
now
let R5 being Ordinal;
assume L235: R5 in R4;
L236: (not R5 in R7) by L235 , L230 , ORDINAL1:5;
thus L237: ( F9() . R5 ) = ( F10() . R5 ) by L236 , L223 , L232 , L235;
end;
L238:
now
let R11 being set;
assume L239: R11 in R4;
L240: (( ( F9() | R4 ) . R11 ) = ( F9() . R11 ) & ( ( F10() | R4 ) . R11 ) = ( F10() . R11 )) by L233 , L239 , FUNCT_1:47;
thus L241: ( ( F9() | R4 ) . R11 ) = ( ( F10() | R4 ) . R11 ) by L240 , L234 , L239;
end;
L242:
now
given R5 being Ordinal such that
L243: R4 = ( succ R5 );

L244: (( F9() . R5 ) = ( ( F9() | R4 ) . R5 ) & ( F10() . R5 ) = ( ( F10() | R4 ) . R5 )) by L243 , FUNCT_1:49 , ORDINAL1:6;
L245: (( F9() . R4 ) = F7(R5 , ( F9() . R5 )) & ( F10() . R4 ) = F7(R5 , ( F10() . R5 ))) by L217 , L221 , L231 , L243;
thus L246: ( F9() . R4 ) = ( F10() . R4 ) by L245 , L238 , L243 , L244 , ORDINAL1:6;
end;
L247:
now
assume that
L248: R4 <> ( {} )
and
L249: (for R5 being Ordinal holds R4 <> ( succ R5 ));
L250: R4 is  limit_ordinal by L249 , ORDINAL1:29;
L251: (( F9() . R4 ) = F8(R4 , ( F9() | R4 )) & ( F10() . R4 ) = F8(R4 , ( F10() | R4 ))) by L250 , L218 , L222 , L231 , L248;
thus L252: ( F9() . R4 ) = ( F10() . R4 ) by L251 , L233 , L238 , FUNCT_1:2;
end;
thus L253: contradiction by L247 , L216 , L220 , L223 , L229 , L242;
end;
scheme TSExist1 { F11() -> Ordinal , F12() -> set , F13(Ordinal , set) -> set , F14(Ordinal , T-Sequence) -> set } : (ex R14 being T-Sequence st (( dom R14 ) = F11() & (( {} ) in F11() implies ( R14 . ( {} ) ) = F12()) & (for R1 being Ordinal holds (( succ R1 ) in F11() implies ( R14 . ( succ R1 ) ) = F13(R1 , ( R14 . R1 )))) & (for R1 being Ordinal holds ((R1 in F11() & R1 <> ( {} ) & R1 is  limit_ordinal) implies ( R14 . R1 ) = F14(R1 , ( R14 | R1 ))))))
proof
defpred S5[ Ordinal , T-Sequence ] means (( dom $2 ) = $1 & (( {} ) in $1 implies ( $2 . ( {} ) ) = F12()) & (for R1 being Ordinal holds (( succ R1 ) in $1 implies ( $2 . ( succ R1 ) ) = F13(R1 , ( $2 . R1 )))) & (for R1 being Ordinal holds ((R1 in $1 & R1 <> ( {} ) & R1 is  limit_ordinal) implies ( $2 . R1 ) = F14(R1 , ( $2 | R1 )))));
defpred S6[ Ordinal ] means (ex R14 being T-Sequence st S5[ $1 , R14 ]);
L254: (for R4 being Ordinal holds ((for R5 being Ordinal holds (R5 in R4 implies S6[ R5 ])) implies S6[ R4 ]))
proof
defpred S7[ set , set ] means ($1 is Ordinal & $2 is T-Sequence & (for R1 being Ordinal holds (for R14 being T-Sequence holds ((R1 = $1 & R14 = $2) implies S5[ R1 , R14 ]))));
let R4 being Ordinal;
assume that
L255: (for R5 being Ordinal holds (R5 in R4 implies (ex R14 being T-Sequence st S5[ R5 , R14 ])));
L256: (for R11 being set holds (for R12 being set holds (for R13 being set holds ((S7[ R11 , R12 ] & S7[ R11 , R13 ]) implies R12 = R13))))
proof
let R11 being set;
let R12 being set;
let R13 being set;
assume that
L257: R11 is Ordinal
and
L258: R12 is T-Sequence
and
L259: (for R1 being Ordinal holds (for R14 being T-Sequence holds ((R1 = R11 & R14 = R12) implies S5[ R1 , R14 ])))
and
L260: R11 is Ordinal
and
L261: R13 is T-Sequence
and
L262: (for R1 being Ordinal holds (for R14 being T-Sequence holds ((R1 = R11 & R14 = R13) implies S5[ R1 , R14 ])));
reconsider D19 = R11 as Ordinal by L257;
reconsider D20 = R13 as T-Sequence by L261;
L263: ( dom D20 ) = D19 by L262;
L264: (for R1 being Ordinal holds ((R1 in D19 & R1 <> ( {} ) & R1 is  limit_ordinal) implies ( D20 . R1 ) = F14(R1 , ( D20 | R1 )))) by L262;
L265: (for R1 being Ordinal holds (( succ R1 ) in D19 implies ( D20 . ( succ R1 ) ) = F13(R1 , ( D20 . R1 )))) by L262;
L266: (( {} ) in D19 implies ( D20 . ( {} ) ) = F12()) by L262;
reconsider D21 = R12 as T-Sequence by L258;
L267: (( {} ) in D19 implies ( D21 . ( {} ) ) = F12()) by L259;
L268: (for R1 being Ordinal holds (( succ R1 ) in D19 implies ( D21 . ( succ R1 ) ) = F13(R1 , ( D21 . R1 )))) by L259;
L269: (for R1 being Ordinal holds ((R1 in D19 & R1 <> ( {} ) & R1 is  limit_ordinal) implies ( D21 . R1 ) = F14(R1 , ( D21 | R1 )))) by L259;
L270: ( dom D21 ) = D19 by L259;
L271: D21 = D20 from TSUniq1(L270 , L267 , L268 , L269 , L263 , L266 , L265 , L264);
thus L272: thesis by L271;
end;
consider C5 being Function such that L273: (for R11 being set holds (for R12 being set holds ([ R11 , R12 ] in C5 iff (R11 in R4 & S7[ R11 , R12 ])))) from FUNCT_1:sch 1(L256);
defpred S8[ set , set ] means (ex R1 being Ordinal st (ex R14 being T-Sequence st (R1 = $1 & R14 = ( C5 . $1 ) & ((R1 = ( {} ) & $2 = F12()) or (ex R4 being Ordinal st (R1 = ( succ R4 ) & $2 = F13(R4 , ( R14 . R4 )))) or (R1 <> ( {} ) & R1 is  limit_ordinal & $2 = F14(R1 , R14))))));
L274: ( dom C5 ) = R4
proof
thus L275: (for R11 being set holds (R11 in ( dom C5 ) implies R11 in R4))
proof
let R11 being set;
assume L276: R11 in ( dom C5 );
L277: (ex R12 being set st [ R11 , R12 ] in C5) by L276 , XTUPLE_0:def 12;
thus L278: thesis by L277 , L273;
end;

let R11 being set;
assume L279: R11 in R4;
reconsider D22 = R11 as Ordinal by L279;
consider R14 being T-Sequence such that L280: S5[ D22 , R14 ] by L255 , L279;
L281: (for R1 being Ordinal holds (for B2 being T-Sequence holds ((R1 = D22 & B2 = R14) implies S5[ R1 , B2 ]))) by L280;
L282: [ D22 , R14 ] in C5 by L281 , L273 , L279;
thus L283: thesis by L282 , XTUPLE_0:def 12;
end;
L284: (for R11 being set holds (R11 in R4 implies (ex R12 being set st S8[ R11 , R12 ])))
proof
let R11 being set;
assume L285: R11 in R4;
reconsider D23 = R11 as Ordinal by L285;
consider R13 being set such that L286: [ R11 , R13 ] in C5 by L274 , L285 , XTUPLE_0:def 12;
reconsider D24 = R13 as T-Sequence by L273 , L286;
L287:
now
given R5 being Ordinal such that
L288: D23 = ( succ R5 );

thus L289: (ex R12 being set st S8[ R11 , R12 ])
proof
take F13(R5 , ( D24 . R5 ));
take D23;
take D24;
thus L290: (D23 = R11 & D24 = ( C5 . R11 )) by L286 , FUNCT_1:1;
thus L291: thesis by L288;
end;

end;
L290:
now
assume L291: (D23 <> ( {} ) & (for R5 being Ordinal holds D23 <> ( succ R5 )));
thus L292: S8[ R11 , F14(D23 , D24) ]
proof
take D23;
take D24;
thus L293: (D23 = R11 & D24 = ( C5 . R11 )) by L286 , FUNCT_1:1;
thus L294: thesis by L291 , ORDINAL1:29;
end;

end;
L293:
now
assume L294: D23 = ( {} );
thus L295: S8[ R11 , F12() ]
proof
take D23;
take D24;
thus L296: (D23 = R11 & D24 = ( C5 . R11 )) by L286 , FUNCT_1:1;
thus L297: thesis by L294;
end;

end;
thus L296: thesis by L293 , L287 , L290;
end;
L297: (for R11 being set holds (for R12 being set holds (for R13 being set holds ((R11 in R4 & S8[ R11 , R12 ] & S8[ R11 , R13 ]) implies R12 = R13))))
proof
let R11 being set;
let R12 being set;
let R13 being set;
assume that
L298: R11 in R4;
given C6 being Ordinal , C7 being T-Sequence such that
L299: C6 = R11
and
L300: C7 = ( C5 . R11 )
and
L301: ((C6 = ( {} ) & R12 = F12()) or (ex R4 being Ordinal st (C6 = ( succ R4 ) & R12 = F13(R4 , ( C7 . R4 )))) or (C6 <> ( {} ) & C6 is  limit_ordinal & R12 = F14(C6 , C7)));

given C8 being Ordinal , C9 being T-Sequence such that
L302: C8 = R11
and
L303: C9 = ( C5 . R11 )
and
L304: ((C8 = ( {} ) & R13 = F12()) or (ex R4 being Ordinal st (C8 = ( succ R4 ) & R13 = F13(R4 , ( C9 . R4 )))) or (C8 <> ( {} ) & C8 is  limit_ordinal & R13 = F14(C8 , C9)));

L305:
now
given R5 being Ordinal such that
L306: C6 = ( succ R5 );

consider R1 being Ordinal such that L307: C6 = ( succ R1 ) and L308: R12 = F13(R1 , ( C7 . R1 )) by L301 , L306 , ORDINAL1:29;
consider R6 being Ordinal such that L309: C8 = ( succ R6 ) and L310: R13 = F13(R6 , ( C9 . R6 )) by L299 , L302 , L304 , L306 , ORDINAL1:29;
L311: R1 = R6 by L299 , L302 , L307 , L309 , ORDINAL1:7;
thus L312: thesis by L311 , L300 , L303 , L308 , L310;
end;
thus L313: thesis by L305 , L299 , L300 , L301 , L302 , L303 , L304;
end;
consider C10 being Function such that L314: (( dom C10 ) = R4 & (for R11 being set holds (R11 in R4 implies S8[ R11 , ( C10 . R11 ) ]))) from FUNCT_1:sch 2(L297 , L284);
reconsider D25 = C10 as T-Sequence by L314 , ORDINAL1:def 7;
take D25;
thus L315: ( dom D25 ) = R4 by L314;
thus L316: (( {} ) in R4 implies ( D25 . ( {} ) ) = F12())
proof
assume L317: ( {} ) in R4;
L318: (ex B3 being Ordinal st (ex B4 being T-Sequence st (B3 = ( {} ) & B4 = ( C5 . ( {} ) ) & ((B3 = ( {} ) & ( C10 . ( {} ) ) = F12()) or (ex R4 being Ordinal st (B3 = ( succ R4 ) & ( C10 . ( {} ) ) = F13(R4 , ( B4 . R4 )))) or (B3 <> ( {} ) & B3 is  limit_ordinal & ( C10 . ( {} ) ) = F14(B3 , B4)))))) by L317 , L314;
thus L319: thesis by L318;
end;

L320: (for R1 being Ordinal holds (for R15 being T-Sequence holds ((R1 in R4 & R15 = ( C5 . R1 )) implies ( D25 | R1 ) = R15)))
proof
defpred S9[ Ordinal ] means (for R15 being T-Sequence holds (($1 in R4 & R15 = ( C5 . $1 )) implies ( D25 | $1 ) = R15));
L321: (for R1 being Ordinal holds ((for R5 being Ordinal holds (R5 in R1 implies S9[ R5 ])) implies S9[ R1 ]))
proof
let R1 being Ordinal;
assume that
L322: (for R5 being Ordinal holds (R5 in R1 implies (for R15 being T-Sequence holds ((R5 in R4 & R15 = ( C5 . R5 )) implies ( D25 | R5 ) = R15))));
let R15 being T-Sequence;
assume that
L323: R1 in R4
and
L324: R15 = ( C5 . R1 );
L325: [ R1 , R15 ] in C5 by L274 , L323 , L324 , FUNCT_1:1;
L326: S5[ R1 , R15 ] by L325 , L273;
L327:
now
let R9 being set;
assume L328: R9 in R1;
reconsider D26 = R9 as Ordinal by L328;
L329: D26 in R4 by L323 , L328 , ORDINAL1:10;
consider R2 being Ordinal, R16 being T-Sequence such that L330: R2 = D26 and L331: R16 = ( C5 . D26 ) and L332: ((R2 = ( {} ) & ( D25 . D26 ) = F12()) or (ex R4 being Ordinal st (R2 = ( succ R4 ) & ( D25 . D26 ) = F13(R4 , ( R16 . R4 )))) or (R2 <> ( {} ) & R2 is  limit_ordinal & ( D25 . D26 ) = F14(R2 , R16))) by L329 , L314;
L333: (for R6 being Ordinal holds (for R17 being T-Sequence holds ((R6 = D26 & R17 = ( R15 | D26 )) implies S5[ R6 , R17 ])))
proof
let R6 being Ordinal;
let R17 being T-Sequence;
assume that
L334: R6 = D26
and
L335: R17 = ( R15 | D26 );
L336: D26 c= R1 by L328 , ORDINAL1:def 2;
thus L337: ( dom R17 ) = R6 by L336 , L326 , L334 , L335 , RELAT_1:62;
thus L338: (( {} ) in R6 implies ( R17 . ( {} ) ) = F12()) by L326 , L328 , L334 , L335 , FUNCT_1:49 , ORDINAL1:10;
thus L339: (for R5 being Ordinal holds (( succ R5 ) in R6 implies ( R17 . ( succ R5 ) ) = F13(R5 , ( R17 . R5 ))))
proof
let R5 being Ordinal;
assume L340: ( succ R5 ) in R6;
L341: R5 in ( succ R5 ) by ORDINAL1:6;
L342: ( ( R15 | D26 ) . R5 ) = ( R15 . R5 ) by L341 , L334 , L340 , FUNCT_1:49 , ORDINAL1:10;
L343: (( succ R5 ) in R1 & ( ( R15 | D26 ) . ( succ R5 ) ) = ( R15 . ( succ R5 ) )) by L328 , L334 , L340 , FUNCT_1:49 , ORDINAL1:10;
thus L344: thesis by L343 , L273 , L325 , L335 , L342;
end;

let R5 being Ordinal;
assume that
L345: R5 in R6
and
L346: (R5 <> ( {} ) & R5 is  limit_ordinal);
L347: R5 c= D26 by L334 , L345 , ORDINAL1:def 2;
L348: ( R15 | R5 ) = ( R17 | R5 ) by L347 , L335 , FUNCT_1:51;
L349: R5 in R1 by L328 , L334 , L345 , ORDINAL1:10;
L350: ( R15 . R5 ) = F14(R5 , ( R17 | R5 )) by L349 , L273 , L325 , L346 , L348;
thus L351: thesis by L350 , L334 , L335 , L345 , FUNCT_1:49;
end;
L352: [ D26 , ( R15 | D26 ) ] in C5 by L333 , L273 , L329;
L353: ( R15 | D26 ) = R16 by L352 , L331 , FUNCT_1:1;
L354: ( ( D25 | R1 ) . R9 ) = ( D25 . R9 ) by L328 , FUNCT_1:49;
L355:
now
given R6 being Ordinal such that
L356: D26 = ( succ R6 );

L357: ( R15 . R9 ) = F13(R6 , ( R15 . R6 )) by L273 , L325 , L328 , L356;
consider R5 being Ordinal such that L358: R2 = ( succ R5 ) and L359: ( D25 . D26 ) = F13(R5 , ( R16 . R5 )) by L330 , L332 , L356 , ORDINAL1:29;
L360: R5 = R6 by L330 , L356 , L358 , ORDINAL1:7;
thus L361: ( R15 . R9 ) = ( ( D25 | R1 ) . R9 ) by L360 , L354 , L353 , L356 , L359 , L357 , FUNCT_1:49 , ORDINAL1:6;
end;
thus L362: ( R15 . R9 ) = ( ( D25 | R1 ) . R9 ) by L355 , L273 , L325 , L328 , L330 , L332 , L354 , L353;
end;
L363: R1 c= ( dom D25 ) by L314 , L323 , ORDINAL1:def 2;
L364: ( dom ( D25 | R1 ) ) = R1 by L363 , RELAT_1:62;
thus L365: thesis by L364 , L326 , L327 , FUNCT_1:2;
end;
thus L366: (for R1 being Ordinal holds S9[ R1 ]) from ORDINAL1:sch 2(L321);
end;
thus L367: (for R1 being Ordinal holds (( succ R1 ) in R4 implies ( D25 . ( succ R1 ) ) = F13(R1 , ( D25 . R1 ))))
proof
let R1 being Ordinal;
assume L368: ( succ R1 ) in R4;
consider C11 being Ordinal, C12 being T-Sequence such that L369: C11 = ( succ R1 ) and L370: C12 = ( C5 . ( succ R1 ) ) and L371: ((C11 = ( {} ) & ( C10 . ( succ R1 ) ) = F12()) or (ex R4 being Ordinal st (C11 = ( succ R4 ) & ( C10 . ( succ R1 ) ) = F13(R4 , ( C12 . R4 )))) or (C11 <> ( {} ) & C11 is  limit_ordinal & ( C10 . ( succ R1 ) ) = F14(C11 , C12))) by L368 , L314;
L372: C12 = ( D25 | ( succ R1 ) ) by L320 , L368 , L370;
consider R6 being Ordinal such that L373: C11 = ( succ R6 ) and L374: ( C10 . ( succ R1 ) ) = F13(R6 , ( C12 . R6 )) by L369 , L371 , ORDINAL1:29;
L375: R1 = R6 by L369 , L373 , ORDINAL1:7;
thus L376: thesis by L375 , L374 , L372 , FUNCT_1:49 , ORDINAL1:6;
end;

let R6 being Ordinal;
assume that
L377: R6 in R4
and
L378: (R6 <> ( {} ) & R6 is  limit_ordinal);
L379: (ex B5 being Ordinal st (ex B6 being T-Sequence st (B5 = R6 & B6 = ( C5 . R6 ) & ((B5 = ( {} ) & ( C10 . R6 ) = F12()) or (ex R4 being Ordinal st (B5 = ( succ R4 ) & ( C10 . R6 ) = F13(R4 , ( B6 . R4 )))) or (B5 <> ( {} ) & B5 is  limit_ordinal & ( C10 . R6 ) = F14(B5 , B6)))))) by L314 , L377;
thus L380: thesis by L379 , L320 , L377 , L378 , ORDINAL1:29;
end;
L381: (for R1 being Ordinal holds S6[ R1 ]) from ORDINAL1:sch 2(L254);
thus L382: thesis by L381;
end;
scheme TSResult { F15() -> T-Sequence , F16(Ordinal) -> set , F17() -> Ordinal , F18() -> set , F19(Ordinal , set) -> set , F20(Ordinal , T-Sequence) -> set } : (for R1 being Ordinal holds (R1 in ( dom F15() ) implies ( F15() . R1 ) = F16(R1)))
provided
L383: (for R1 being Ordinal holds (for R9 being set holds (R9 = F16(R1) iff (ex R14 being T-Sequence st (R9 = ( last R14 ) & ( dom R14 ) = ( succ R1 ) & ( R14 . ( {} ) ) = F18() & (for R5 being Ordinal holds (( succ R5 ) in ( succ R1 ) implies ( R14 . ( succ R5 ) ) = F19(R5 , ( R14 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R1 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R14 . R5 ) = F20(R5 , ( R14 | R5 )))))))))
and
L384: ( dom F15() ) = F17()
and
L385: (( {} ) in F17() implies ( F15() . ( {} ) ) = F18())
and
L386: (for R1 being Ordinal holds (( succ R1 ) in F17() implies ( F15() . ( succ R1 ) ) = F19(R1 , ( F15() . R1 ))))
and
L387: (for R1 being Ordinal holds ((R1 in F17() & R1 <> ( {} ) & R1 is  limit_ordinal) implies ( F15() . R1 ) = F20(R1 , ( F15() | R1 ))))
proof
let R1 being Ordinal;
set D27 = ( F15() | ( succ R1 ) );
assume L388: R1 in ( dom F15() );
L389: ( succ R1 ) c= ( dom F15() ) by L388 , ORDINAL1:21;
L390: (for R5 being Ordinal holds (( succ R5 ) in ( succ R1 ) implies ( D27 . ( succ R5 ) ) = F19(R5 , ( D27 . R5 ))))
proof
let R5 being Ordinal;
assume that
L391: ( succ R5 ) in ( succ R1 );
L392: R5 in ( succ R5 ) by ORDINAL1:6;
L393: ( D27 . R5 ) = ( F15() . R5 ) by L392 , L391 , FUNCT_1:49 , ORDINAL1:10;
L394: ( D27 . ( succ R5 ) ) = ( F15() . ( succ R5 ) ) by L391 , FUNCT_1:49;
thus L395: thesis by L394 , L384 , L386 , L389 , L391 , L393;
end;
L396: (for R5 being Ordinal holds ((R5 in ( succ R1 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( D27 . R5 ) = F20(R5 , ( D27 | R5 ))))
proof
let R5 being Ordinal;
assume that
L397: R5 in ( succ R1 )
and
L398: (R5 <> ( {} ) & R5 is  limit_ordinal);
L399: R5 c= ( succ R1 ) by L397 , ORDINAL1:def 2;
L400: ( D27 | R5 ) = ( F15() | R5 ) by L399 , FUNCT_1:51;
L401: ( D27 . R5 ) = ( F15() . R5 ) by L397 , FUNCT_1:49;
thus L402: thesis by L401 , L384 , L387 , L389 , L397 , L398 , L400;
end;
L403: ( {} ) c= ( succ R1 );
L404: ( {} ) c< ( succ R1 ) by L403 , XBOOLE_0:def 8;
L405: (( {} ) in ( succ R1 ) & ( D27 . ( {} ) ) = ( F15() . ( {} ) )) by L404 , FUNCT_1:49 , ORDINAL1:11;
L406: ( dom D27 ) = ( succ R1 ) by L389 , RELAT_1:62;
L407: (R1 in ( succ R1 ) & ( last D27 ) = ( D27 . R1 )) by L406 , L20 , ORDINAL1:21;
L408: ( last D27 ) = ( F15() . R1 ) by L407 , FUNCT_1:49;
thus L409: thesis by L408 , L383 , L384 , L385 , L389 , L406 , L405 , L390 , L396;
end;
scheme TSDef { F21() -> Ordinal , F22() -> set , F23(Ordinal , set) -> set , F24(Ordinal , T-Sequence) -> set } : ((ex R9 being set st (ex R14 being T-Sequence st (R9 = ( last R14 ) & ( dom R14 ) = ( succ F21() ) & ( R14 . ( {} ) ) = F22() & (for R5 being Ordinal holds (( succ R5 ) in ( succ F21() ) implies ( R14 . ( succ R5 ) ) = F23(R5 , ( R14 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ F21() ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R14 . R5 ) = F24(R5 , ( R14 | R5 ))))))) & (for B7 , B8 being set holds (((ex R14 being T-Sequence st (B7 = ( last R14 ) & ( dom R14 ) = ( succ F21() ) & ( R14 . ( {} ) ) = F22() & (for R5 being Ordinal holds (( succ R5 ) in ( succ F21() ) implies ( R14 . ( succ R5 ) ) = F23(R5 , ( R14 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ F21() ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R14 . R5 ) = F24(R5 , ( R14 | R5 )))))) & (ex R14 being T-Sequence st (B8 = ( last R14 ) & ( dom R14 ) = ( succ F21() ) & ( R14 . ( {} ) ) = F22() & (for R5 being Ordinal holds (( succ R5 ) in ( succ F21() ) implies ( R14 . ( succ R5 ) ) = F23(R5 , ( R14 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ F21() ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R14 . R5 ) = F24(R5 , ( R14 | R5 ))))))) implies B7 = B8)))
proof
consider R14 being T-Sequence such that L410: (( dom R14 ) = ( succ F21() ) & (( {} ) in ( succ F21() ) implies ( R14 . ( {} ) ) = F22()) & (for R5 being Ordinal holds (( succ R5 ) in ( succ F21() ) implies ( R14 . ( succ R5 ) ) = F23(R5 , ( R14 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ F21() ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R14 . R5 ) = F24(R5 , ( R14 | R5 ))))) from TSExist1;
thus L411: (ex R9 being set st (ex R14 being T-Sequence st (R9 = ( last R14 ) & ( dom R14 ) = ( succ F21() ) & ( R14 . ( {} ) ) = F22() & (for R5 being Ordinal holds (( succ R5 ) in ( succ F21() ) implies ( R14 . ( succ R5 ) ) = F23(R5 , ( R14 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ F21() ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R14 . R5 ) = F24(R5 , ( R14 | R5 )))))))
proof
take D28 = ( last R14 );
take R14;
thus L412: (D28 = ( last R14 ) & ( dom R14 ) = ( succ F21() )) by L410;
L413: ( {} ) c= ( succ F21() );
L414: ( {} ) c< ( succ F21() ) by L413 , XBOOLE_0:def 8;
thus L415: thesis by L414 , L410 , ORDINAL1:11;
end;

let C13 , C14 being set;
given R15 being T-Sequence such that
L416: C13 = ( last R15 )
and
L417: ( dom R15 ) = ( succ F21() )
and
L418: ( R15 . ( {} ) ) = F22()
and
L419: (for R5 being Ordinal holds (( succ R5 ) in ( succ F21() ) implies ( R15 . ( succ R5 ) ) = F23(R5 , ( R15 . R5 ))))
and
L420: (for R5 being Ordinal holds ((R5 in ( succ F21() ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R15 . R5 ) = F24(R5 , ( R15 | R5 ))));

L421: (( {} ) in ( succ F21() ) implies ( R15 . ( {} ) ) = F22()) by L418;
given R16 being T-Sequence such that
L422: C14 = ( last R16 )
and
L423: ( dom R16 ) = ( succ F21() )
and
L424: ( R16 . ( {} ) ) = F22()
and
L425: (for R5 being Ordinal holds (( succ R5 ) in ( succ F21() ) implies ( R16 . ( succ R5 ) ) = F23(R5 , ( R16 . R5 ))))
and
L426: (for R5 being Ordinal holds ((R5 in ( succ F21() ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R16 . R5 ) = F24(R5 , ( R16 | R5 ))));

L427: (( {} ) in ( succ F21() ) implies ( R16 . ( {} ) ) = F22()) by L424;
L428: R15 = R16 from TSUniq1(L417 , L421 , L419 , L420 , L423 , L427 , L425 , L426);
thus L429: thesis by L428 , L416 , L422;
end;
scheme TSResult0 { F25(Ordinal) -> set , F26() -> set , F27(Ordinal , set) -> set , F28(Ordinal , T-Sequence) -> set } : F25(( {} )) = F26()
provided
L430: (for R1 being Ordinal holds (for R9 being set holds (R9 = F25(R1) iff (ex R14 being T-Sequence st (R9 = ( last R14 ) & ( dom R14 ) = ( succ R1 ) & ( R14 . ( {} ) ) = F26() & (for R5 being Ordinal holds (( succ R5 ) in ( succ R1 ) implies ( R14 . ( succ R5 ) ) = F27(R5 , ( R14 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R1 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R14 . R5 ) = F28(R5 , ( R14 | R5 )))))))))
proof
consider R14 being T-Sequence such that L431: (( dom R14 ) = ( succ ( {} ) ) & (( {} ) in ( succ ( {} ) ) implies ( R14 . ( {} ) ) = F26()) & (for R1 being Ordinal holds (( succ R1 ) in ( succ ( {} ) ) implies ( R14 . ( succ R1 ) ) = F27(R1 , ( R14 . R1 )))) & (for R1 being Ordinal holds ((R1 in ( succ ( {} ) ) & R1 <> ( {} ) & R1 is  limit_ordinal) implies ( R14 . R1 ) = F28(R1 , ( R14 | R1 ))))) from TSExist1;
L432: F26() = ( last R14 ) by L431 , L20 , ORDINAL1:6;
thus L433: thesis by L432 , L430 , L431 , ORDINAL1:6;
end;
scheme TSResultS { F29() -> set , F30(Ordinal , set) -> set , F31(Ordinal , T-Sequence) -> set , F32(Ordinal) -> set } : (for R1 being Ordinal holds F32(( succ R1 )) = F30(R1 , F32(R1)))
provided
L434: (for R1 being Ordinal holds (for R9 being set holds (R9 = F32(R1) iff (ex R14 being T-Sequence st (R9 = ( last R14 ) & ( dom R14 ) = ( succ R1 ) & ( R14 . ( {} ) ) = F29() & (for R5 being Ordinal holds (( succ R5 ) in ( succ R1 ) implies ( R14 . ( succ R5 ) ) = F30(R5 , ( R14 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R1 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R14 . R5 ) = F31(R5 , ( R14 | R5 )))))))))
proof
let R1 being Ordinal;
consider R14 being T-Sequence such that L435: ( dom R14 ) = ( succ ( succ R1 ) ) and L436: (( {} ) in ( succ ( succ R1 ) ) implies ( R14 . ( {} ) ) = F29()) and L437: (for R5 being Ordinal holds (( succ R5 ) in ( succ ( succ R1 ) ) implies ( R14 . ( succ R5 ) ) = F30(R5 , ( R14 . R5 )))) and L438: (for R5 being Ordinal holds ((R5 in ( succ ( succ R1 ) ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R14 . R5 ) = F31(R5 , ( R14 | R5 )))) from TSExist1;
L439: (for R1 being Ordinal holds (for R9 being set holds (R9 = F32(R1) iff (ex R14 being T-Sequence st (R9 = ( last R14 ) & ( dom R14 ) = ( succ R1 ) & ( R14 . ( {} ) ) = F29() & (for R5 being Ordinal holds (( succ R5 ) in ( succ R1 ) implies ( R14 . ( succ R5 ) ) = F30(R5 , ( R14 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R1 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R14 . R5 ) = F31(R5 , ( R14 | R5 ))))))))) by L434;
L440: (for R4 being Ordinal holds (R4 in ( dom R14 ) implies ( R14 . R4 ) = F32(R4))) from TSResult(L439 , L435 , L436 , L437 , L438);
L441: ( R14 . ( succ R1 ) ) = F32(( succ R1 )) by L440 , L435 , ORDINAL1:6;
L442: (R1 in ( succ R1 ) & ( succ R1 ) in ( succ ( succ R1 ) )) by ORDINAL1:6;
L443: ( R14 . R1 ) = F32(R1) by L442 , L435 , L440 , ORDINAL1:10;
thus L444: thesis by L443 , L437 , L441 , ORDINAL1:6;
end;
scheme TSResultL { F33() -> T-Sequence , F34() -> Ordinal , F35(Ordinal) -> set , F36() -> set , F37(Ordinal , set) -> set , F38(Ordinal , T-Sequence) -> set } : F35(F34()) = F38(F34() , F33())
provided
L445: (for R1 being Ordinal holds (for R9 being set holds (R9 = F35(R1) iff (ex R14 being T-Sequence st (R9 = ( last R14 ) & ( dom R14 ) = ( succ R1 ) & ( R14 . ( {} ) ) = F36() & (for R5 being Ordinal holds (( succ R5 ) in ( succ R1 ) implies ( R14 . ( succ R5 ) ) = F37(R5 , ( R14 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R1 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R14 . R5 ) = F38(R5 , ( R14 | R5 )))))))))
and
L446: (F34() <> ( {} ) & F34() is  limit_ordinal)
and
L447: ( dom F33() ) = F34()
and
L448: (for R1 being Ordinal holds (R1 in F34() implies ( F33() . R1 ) = F35(R1)))
proof
L449: F34() in ( succ F34() ) by ORDINAL1:6;
consider R14 being T-Sequence such that L450: ( dom R14 ) = ( succ F34() ) and L451: (( {} ) in ( succ F34() ) implies ( R14 . ( {} ) ) = F36()) and L452: (for R5 being Ordinal holds (( succ R5 ) in ( succ F34() ) implies ( R14 . ( succ R5 ) ) = F37(R5 , ( R14 . R5 )))) and L453: (for R5 being Ordinal holds ((R5 in ( succ F34() ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R14 . R5 ) = F38(R5 , ( R14 | R5 )))) from TSExist1;
set D29 = ( R14 | F34() );
L454: (for R1 being Ordinal holds (for R9 being set holds (R9 = F35(R1) iff (ex R14 being T-Sequence st (R9 = ( last R14 ) & ( dom R14 ) = ( succ R1 ) & ( R14 . ( {} ) ) = F36() & (for R5 being Ordinal holds (( succ R5 ) in ( succ R1 ) implies ( R14 . ( succ R5 ) ) = F37(R5 , ( R14 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R1 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R14 . R5 ) = F38(R5 , ( R14 | R5 ))))))))) by L445;
L455: (for R4 being Ordinal holds (R4 in ( dom R14 ) implies ( R14 . R4 ) = F35(R4))) from TSResult(L454 , L450 , L451 , L452 , L453);
L456:
now
let R9 being set;
assume L457: R9 in F34();
reconsider D30 = R9 as Ordinal by L457;
thus L458: ( D29 . R9 ) = ( R14 . D30 ) by L457 , FUNCT_1:49
.= F35(D30) by L450 , L455 , L449 , L457 , ORDINAL1:10
.= ( F33() . R9 ) by L448 , L457;
end;
L459: F34() c= ( dom R14 ) by L450 , L449 , ORDINAL1:def 2;
L460: ( dom D29 ) = F34() by L459 , RELAT_1:62;
L461: D29 = F33() by L460 , L447 , L456 , FUNCT_1:2;
L462: ( R14 . F34() ) = F38(F34() , F33()) by L461 , L446 , L453 , ORDINAL1:6;
thus L463: thesis by L462 , L450 , L455 , ORDINAL1:6;
end;
scheme OSExist { F39() -> Ordinal , F40() -> Ordinal , F41(Ordinal , Ordinal) -> Ordinal , F42(Ordinal , T-Sequence) -> Ordinal } : (ex R19 being Ordinal-Sequence st (( dom R19 ) = F39() & (( {} ) in F39() implies ( R19 . ( {} ) ) = F40()) & (for R1 being Ordinal holds (( succ R1 ) in F39() implies ( R19 . ( succ R1 ) ) = F41(R1 , ( R19 . R1 )))) & (for R1 being Ordinal holds ((R1 in F39() & R1 <> ( {} ) & R1 is  limit_ordinal) implies ( R19 . R1 ) = F42(R1 , ( R19 | R1 ))))))
proof
deffunc H2(Ordinal , set) = F41($1 , ( sup ( union { $2 } ) ));
consider R14 being T-Sequence such that L464: ( dom R14 ) = F39() and L465: (( {} ) in F39() implies ( R14 . ( {} ) ) = F40()) and L466: (for R1 being Ordinal holds (( succ R1 ) in F39() implies ( R14 . ( succ R1 ) ) = H2(R1 , ( R14 . R1 )))) and L467: (for R1 being Ordinal holds ((R1 in F39() & R1 <> ( {} ) & R1 is  limit_ordinal) implies ( R14 . R1 ) = F42(R1 , ( R14 | R1 )))) from TSExist1;
L468: R14 is  Ordinal-yielding
proof
take ( sup ( rng R14 ) );
let R9 being set;
assume L469: R9 in ( rng R14 );
consider R10 being set such that L470: R10 in ( dom R14 ) and L471: R9 = ( R14 . R10 ) by L469 , FUNCT_1:def 3;
reconsider D31 = R10 as Ordinal by L470;
L472:
now
assume that
L473: D31 <> ( {} )
and
L474: (for R4 being Ordinal holds D31 <> ( succ R4 ));
L475: D31 is  limit_ordinal by L474 , ORDINAL1:29;
L476: ( R14 . D31 ) = F42(D31 , ( R14 | D31 )) by L475 , L464 , L467 , L470 , L473;
thus L477: R9 is Ordinal by L476 , L471;
end;
L478: ( On ( rng R14 ) ) c= ( sup ( rng R14 ) ) by L85;
L479:
now
given R4 being Ordinal such that
L480: D31 = ( succ R4 );

L481: ( R14 . D31 ) = F41(R4 , ( sup ( union { ( R14 . R4 ) } ) )) by L464 , L466 , L470 , L480;
thus L482: R9 is Ordinal by L481 , L471;
end;
L483: R9 in ( On ( rng R14 ) ) by L479 , L464 , L465 , L469 , L470 , L471 , L472 , ORDINAL1:def 9;
thus L484: thesis by L483 , L478;
end;
reconsider D32 = R14 as Ordinal-Sequence by L468;
take D33 = D32;
thus L485: (( dom D33 ) = F39() & (( {} ) in F39() implies ( D33 . ( {} ) ) = F40())) by L464 , L465;
thus L486: (for R1 being Ordinal holds (( succ R1 ) in F39() implies ( D33 . ( succ R1 ) ) = F41(R1 , ( D33 . R1 ))))
proof
let R1 being Ordinal;
reconsider D34 = ( D33 . R1 ) as Ordinal;
L487: ( sup ( union { D34 } ) ) = ( sup D34 ) by ZFMISC_1:25
.= D34 by L132;
thus L488: thesis by L487 , L466;
end;

thus L489: thesis by L467;
end;
scheme OSResult { F43() -> Ordinal-Sequence , F44(Ordinal) -> Ordinal , F45() -> Ordinal , F46() -> Ordinal , F47(Ordinal , Ordinal) -> Ordinal , F48(Ordinal , T-Sequence) -> Ordinal } : (for R1 being Ordinal holds (R1 in ( dom F43() ) implies ( F43() . R1 ) = F44(R1)))
provided
L490: (for R1 being Ordinal holds (for R4 being Ordinal holds (R4 = F44(R1) iff (ex R19 being Ordinal-Sequence st (R4 = ( last R19 ) & ( dom R19 ) = ( succ R1 ) & ( R19 . ( {} ) ) = F46() & (for R5 being Ordinal holds (( succ R5 ) in ( succ R1 ) implies ( R19 . ( succ R5 ) ) = F47(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R1 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = F48(R5 , ( R19 | R5 )))))))))
and
L491: ( dom F43() ) = F45()
and
L492: (( {} ) in F45() implies ( F43() . ( {} ) ) = F46())
and
L493: (for R1 being Ordinal holds (( succ R1 ) in F45() implies ( F43() . ( succ R1 ) ) = F47(R1 , ( F43() . R1 ))))
and
L494: (for R1 being Ordinal holds ((R1 in F45() & R1 <> ( {} ) & R1 is  limit_ordinal) implies ( F43() . R1 ) = F48(R1 , ( F43() | R1 ))))
proof
let R1 being Ordinal;
set D35 = ( F43() | ( succ R1 ) );
assume L495: R1 in ( dom F43() );
L496: ( succ R1 ) c= ( dom F43() ) by L495 , ORDINAL1:21;
L497: (for R5 being Ordinal holds (( succ R5 ) in ( succ R1 ) implies ( D35 . ( succ R5 ) ) = F47(R5 , ( D35 . R5 ))))
proof
let R5 being Ordinal;
assume that
L498: ( succ R5 ) in ( succ R1 );
L499: R5 in ( succ R5 ) by ORDINAL1:6;
L500: ( D35 . R5 ) = ( F43() . R5 ) by L499 , L498 , FUNCT_1:49 , ORDINAL1:10;
L501: ( D35 . ( succ R5 ) ) = ( F43() . ( succ R5 ) ) by L498 , FUNCT_1:49;
thus L502: thesis by L501 , L491 , L493 , L496 , L498 , L500;
end;
L503: (for R5 being Ordinal holds ((R5 in ( succ R1 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( D35 . R5 ) = F48(R5 , ( D35 | R5 ))))
proof
let R5 being Ordinal;
assume that
L504: R5 in ( succ R1 )
and
L505: (R5 <> ( {} ) & R5 is  limit_ordinal);
L506: R5 c= ( succ R1 ) by L504 , ORDINAL1:def 2;
L507: ( D35 | R5 ) = ( F43() | R5 ) by L506 , FUNCT_1:51;
L508: ( D35 . R5 ) = ( F43() . R5 ) by L504 , FUNCT_1:49;
thus L509: thesis by L508 , L491 , L494 , L496 , L504 , L505 , L507;
end;
L510: ( {} ) c= ( succ R1 );
L511: ( {} ) c< ( succ R1 ) by L510 , XBOOLE_0:def 8;
L512: (( {} ) in ( succ R1 ) & ( D35 . ( {} ) ) = ( F43() . ( {} ) )) by L511 , FUNCT_1:49 , ORDINAL1:11;
L513: ( dom D35 ) = ( succ R1 ) by L496 , RELAT_1:62;
L514: (R1 in ( succ R1 ) & ( last D35 ) = ( D35 . R1 )) by L513 , L20 , ORDINAL1:21;
L515: ( last D35 ) = ( F43() . R1 ) by L514 , FUNCT_1:49;
thus L516: thesis by L515 , L490 , L491 , L492 , L496 , L513 , L512 , L497 , L503;
end;
scheme OSDef { F49() -> Ordinal , F50() -> Ordinal , F51(Ordinal , Ordinal) -> Ordinal , F52(Ordinal , T-Sequence) -> Ordinal } : ((ex R1 being Ordinal st (ex R19 being Ordinal-Sequence st (R1 = ( last R19 ) & ( dom R19 ) = ( succ F49() ) & ( R19 . ( {} ) ) = F50() & (for R5 being Ordinal holds (( succ R5 ) in ( succ F49() ) implies ( R19 . ( succ R5 ) ) = F51(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ F49() ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = F52(R5 , ( R19 | R5 ))))))) & (for R2 being Ordinal holds (for R3 being Ordinal holds (((ex R19 being Ordinal-Sequence st (R2 = ( last R19 ) & ( dom R19 ) = ( succ F49() ) & ( R19 . ( {} ) ) = F50() & (for R5 being Ordinal holds (( succ R5 ) in ( succ F49() ) implies ( R19 . ( succ R5 ) ) = F51(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ F49() ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = F52(R5 , ( R19 | R5 )))))) & (ex R19 being Ordinal-Sequence st (R3 = ( last R19 ) & ( dom R19 ) = ( succ F49() ) & ( R19 . ( {} ) ) = F50() & (for R5 being Ordinal holds (( succ R5 ) in ( succ F49() ) implies ( R19 . ( succ R5 ) ) = F51(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ F49() ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = F52(R5 , ( R19 | R5 ))))))) implies R2 = R3))))
proof
consider R19 being Ordinal-Sequence such that L517: (( dom R19 ) = ( succ F49() ) & (( {} ) in ( succ F49() ) implies ( R19 . ( {} ) ) = F50()) & (for R5 being Ordinal holds (( succ R5 ) in ( succ F49() ) implies ( R19 . ( succ R5 ) ) = F51(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ F49() ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = F52(R5 , ( R19 | R5 ))))) from OSExist;
reconsider D36 = ( last R19 ) as Ordinal;
thus L518: (ex R1 being Ordinal st (ex R19 being Ordinal-Sequence st (R1 = ( last R19 ) & ( dom R19 ) = ( succ F49() ) & ( R19 . ( {} ) ) = F50() & (for R5 being Ordinal holds (( succ R5 ) in ( succ F49() ) implies ( R19 . ( succ R5 ) ) = F51(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ F49() ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = F52(R5 , ( R19 | R5 )))))))
proof
take D36;
take R19;
thus L519: (D36 = ( last R19 ) & ( dom R19 ) = ( succ F49() )) by L517;
L520: ( {} ) c= ( succ F49() );
L521: ( {} ) c< ( succ F49() ) by L520 , XBOOLE_0:def 8;
thus L522: thesis by L521 , L517 , ORDINAL1:11;
end;

deffunc H3(Ordinal , Ordinal) = F51($1 , ( sup ( union { $2 } ) ));
let C15 , C16 being Ordinal;
given C17 being Ordinal-Sequence such that
L523: C15 = ( last C17 )
and
L524: ( dom C17 ) = ( succ F49() )
and
L525: ( C17 . ( {} ) ) = F50()
and
L526: (for R5 being Ordinal holds (( succ R5 ) in ( succ F49() ) implies ( C17 . ( succ R5 ) ) = F51(R5 , ( C17 . R5 ))))
and
L527: (for R5 being Ordinal holds ((R5 in ( succ F49() ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( C17 . R5 ) = F52(R5 , ( C17 | R5 ))));

L528: (( {} ) in ( succ F49() ) implies ( C17 . ( {} ) ) = F50()) by L525;
L529: (for R5 being Ordinal holds (( succ R5 ) in ( succ F49() ) implies ( C17 . ( succ R5 ) ) = H3(R5 , ( C17 . R5 ))))
proof
let R5 being Ordinal;
assume that
L530: ( succ R5 ) in ( succ F49() );
reconsider D37 = ( C17 . R5 ) as Ordinal;
L531: ( sup ( union { ( C17 . R5 ) } ) ) = ( sup D37 ) by ZFMISC_1:25
.= D37 by L132;
thus L532: thesis by L531 , L526 , L530;
end;
given C18 being Ordinal-Sequence such that
L533: C16 = ( last C18 )
and
L534: ( dom C18 ) = ( succ F49() )
and
L535: ( C18 . ( {} ) ) = F50()
and
L536: (for R5 being Ordinal holds (( succ R5 ) in ( succ F49() ) implies ( C18 . ( succ R5 ) ) = F51(R5 , ( C18 . R5 ))))
and
L537: (for R5 being Ordinal holds ((R5 in ( succ F49() ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( C18 . R5 ) = F52(R5 , ( C18 | R5 ))));

L538: (for R5 being Ordinal holds ((R5 in ( succ F49() ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( C18 . R5 ) = F52(R5 , ( C18 | R5 )))) by L537;
L539: (for R5 being Ordinal holds ((R5 in ( succ F49() ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( C17 . R5 ) = F52(R5 , ( C17 | R5 )))) by L527;
L540: (for R5 being Ordinal holds (( succ R5 ) in ( succ F49() ) implies ( C18 . ( succ R5 ) ) = H3(R5 , ( C18 . R5 ))))
proof
let R5 being Ordinal;
assume that
L541: ( succ R5 ) in ( succ F49() );
reconsider D38 = ( C18 . R5 ) as Ordinal;
L542: ( sup ( union { ( C18 . R5 ) } ) ) = ( sup D38 ) by ZFMISC_1:25
.= D38 by L132;
thus L543: thesis by L542 , L536 , L541;
end;
L544: (( {} ) in ( succ F49() ) implies ( C18 . ( {} ) ) = F50()) by L535;
L545: C17 = C18 from TSUniq1(L524 , L528 , L529 , L539 , L534 , L544 , L540 , L538);
thus L546: thesis by L545 , L523 , L533;
end;
scheme OSResult0 { F53(Ordinal) -> Ordinal , F54() -> Ordinal , F55(Ordinal , Ordinal) -> Ordinal , F56(Ordinal , T-Sequence) -> Ordinal } : F53(( {} )) = F54()
provided
L547: (for R1 being Ordinal holds (for R4 being Ordinal holds (R4 = F53(R1) iff (ex R19 being Ordinal-Sequence st (R4 = ( last R19 ) & ( dom R19 ) = ( succ R1 ) & ( R19 . ( {} ) ) = F54() & (for R5 being Ordinal holds (( succ R5 ) in ( succ R1 ) implies ( R19 . ( succ R5 ) ) = F55(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R1 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = F56(R5 , ( R19 | R5 )))))))))
proof
consider R19 being Ordinal-Sequence such that L548: (( dom R19 ) = ( succ ( {} ) ) & (( {} ) in ( succ ( {} ) ) implies ( R19 . ( {} ) ) = F54()) & (for R1 being Ordinal holds (( succ R1 ) in ( succ ( {} ) ) implies ( R19 . ( succ R1 ) ) = F55(R1 , ( R19 . R1 )))) & (for R1 being Ordinal holds ((R1 in ( succ ( {} ) ) & R1 <> ( {} ) & R1 is  limit_ordinal) implies ( R19 . R1 ) = F56(R1 , ( R19 | R1 ))))) from OSExist;
L549: F54() = ( last R19 ) by L548 , L20 , ORDINAL1:6;
thus L550: thesis by L549 , L547 , L548 , ORDINAL1:6;
end;
scheme OSResultS { F57() -> Ordinal , F58(Ordinal , Ordinal) -> Ordinal , F59(Ordinal , T-Sequence) -> Ordinal , F60(Ordinal) -> Ordinal } : (for R1 being Ordinal holds F60(( succ R1 )) = F58(R1 , F60(R1)))
provided
L551: (for R1 being Ordinal holds (for R4 being Ordinal holds (R4 = F60(R1) iff (ex R19 being Ordinal-Sequence st (R4 = ( last R19 ) & ( dom R19 ) = ( succ R1 ) & ( R19 . ( {} ) ) = F57() & (for R5 being Ordinal holds (( succ R5 ) in ( succ R1 ) implies ( R19 . ( succ R5 ) ) = F58(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R1 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = F59(R5 , ( R19 | R5 )))))))))
proof
let R1 being Ordinal;
consider R19 being Ordinal-Sequence such that L552: ( dom R19 ) = ( succ ( succ R1 ) ) and L553: (( {} ) in ( succ ( succ R1 ) ) implies ( R19 . ( {} ) ) = F57()) and L554: (for R5 being Ordinal holds (( succ R5 ) in ( succ ( succ R1 ) ) implies ( R19 . ( succ R5 ) ) = F58(R5 , ( R19 . R5 )))) and L555: (for R5 being Ordinal holds ((R5 in ( succ ( succ R1 ) ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = F59(R5 , ( R19 | R5 )))) from OSExist;
L556: (for R1 being Ordinal holds (for R4 being Ordinal holds (R4 = F60(R1) iff (ex R19 being Ordinal-Sequence st (R4 = ( last R19 ) & ( dom R19 ) = ( succ R1 ) & ( R19 . ( {} ) ) = F57() & (for R5 being Ordinal holds (( succ R5 ) in ( succ R1 ) implies ( R19 . ( succ R5 ) ) = F58(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R1 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = F59(R5 , ( R19 | R5 ))))))))) by L551;
L557: (for R4 being Ordinal holds (R4 in ( dom R19 ) implies ( R19 . R4 ) = F60(R4))) from OSResult(L556 , L552 , L553 , L554 , L555);
L558: ( R19 . ( succ R1 ) ) = F60(( succ R1 )) by L557 , L552 , ORDINAL1:6;
L559: (R1 in ( succ R1 ) & ( succ R1 ) in ( succ ( succ R1 ) )) by ORDINAL1:6;
L560: ( R19 . R1 ) = F60(R1) by L559 , L552 , L557 , ORDINAL1:10;
thus L561: thesis by L560 , L554 , L558 , ORDINAL1:6;
end;
scheme OSResultL { F61() -> Ordinal-Sequence , F62() -> Ordinal , F63(Ordinal) -> Ordinal , F64() -> Ordinal , F65(Ordinal , Ordinal) -> Ordinal , F66(Ordinal , T-Sequence) -> Ordinal } : F63(F62()) = F66(F62() , F61())
provided
L562: (for R1 being Ordinal holds (for R4 being Ordinal holds (R4 = F63(R1) iff (ex R19 being Ordinal-Sequence st (R4 = ( last R19 ) & ( dom R19 ) = ( succ R1 ) & ( R19 . ( {} ) ) = F64() & (for R5 being Ordinal holds (( succ R5 ) in ( succ R1 ) implies ( R19 . ( succ R5 ) ) = F65(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R1 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = F66(R5 , ( R19 | R5 )))))))))
and
L563: (F62() <> ( {} ) & F62() is  limit_ordinal)
and
L564: ( dom F61() ) = F62()
and
L565: (for R1 being Ordinal holds (R1 in F62() implies ( F61() . R1 ) = F63(R1)))
proof
L566: F62() in ( succ F62() ) by ORDINAL1:6;
consider R19 being Ordinal-Sequence such that L567: ( dom R19 ) = ( succ F62() ) and L568: (( {} ) in ( succ F62() ) implies ( R19 . ( {} ) ) = F64()) and L569: (for R5 being Ordinal holds (( succ R5 ) in ( succ F62() ) implies ( R19 . ( succ R5 ) ) = F65(R5 , ( R19 . R5 )))) and L570: (for R5 being Ordinal holds ((R5 in ( succ F62() ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = F66(R5 , ( R19 | R5 )))) from OSExist;
set D39 = ( R19 | F62() );
L571: (for R1 being Ordinal holds (for R4 being Ordinal holds (R4 = F63(R1) iff (ex R19 being Ordinal-Sequence st (R4 = ( last R19 ) & ( dom R19 ) = ( succ R1 ) & ( R19 . ( {} ) ) = F64() & (for R5 being Ordinal holds (( succ R5 ) in ( succ R1 ) implies ( R19 . ( succ R5 ) ) = F65(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R1 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = F66(R5 , ( R19 | R5 ))))))))) by L562;
L572: (for R4 being Ordinal holds (R4 in ( dom R19 ) implies ( R19 . R4 ) = F63(R4))) from OSResult(L571 , L567 , L568 , L569 , L570);
L573:
now
let R9 being set;
assume L574: R9 in F62();
reconsider D40 = R9 as Ordinal by L574;
thus L575: ( D39 . R9 ) = ( R19 . D40 ) by L574 , FUNCT_1:49
.= F63(D40) by L567 , L572 , L566 , L574 , ORDINAL1:10
.= ( F61() . R9 ) by L565 , L574;
end;
L576: F62() c= ( dom R19 ) by L567 , L566 , ORDINAL1:def 2;
L577: ( dom D39 ) = F62() by L576 , RELAT_1:62;
L578: D39 = F61() by L577 , L564 , L573 , FUNCT_1:2;
L579: ( R19 . F62() ) = F66(F62() , F61()) by L578 , L563 , L570 , ORDINAL1:6;
thus L580: thesis by L579 , L567 , L572 , ORDINAL1:6;
end;
definition
let R14 being T-Sequence;
func sup R14 -> Ordinal equals 
( sup ( rng R14 ) );
correctness;
func inf R14 -> Ordinal equals 
( inf ( rng R14 ) );
correctness;
end;
theorem
L582: (for R14 being T-Sequence holds (( sup R14 ) = ( sup ( rng R14 ) ) & ( inf R14 ) = ( inf ( rng R14 ) )));
definition
let R14 being T-Sequence;
func lim_sup R14 -> Ordinal means 
(ex R19 being Ordinal-Sequence st (it = ( inf R19 ) & ( dom R19 ) = ( dom R14 ) & (for R1 being Ordinal holds (R1 in ( dom R14 ) implies ( R19 . R1 ) = ( sup ( rng ( R14 | ( ( dom R14 ) \ R1 ) ) ) )))));
existence
proof
deffunc H4(Ordinal) = ( sup ( rng ( R14 | ( ( dom R14 ) \ $1 ) ) ) );
consider R19 being Ordinal-Sequence such that L583: (( dom R19 ) = ( dom R14 ) & (for R1 being Ordinal holds (R1 in ( dom R14 ) implies ( R19 . R1 ) = H4(R1)))) from OSLambda;
take ( inf R19 );
take R19;
thus L584: thesis by L583;
end;
uniqueness
proof
let C19 , C20 being Ordinal;
given R19 being Ordinal-Sequence such that
L585: (C19 = ( inf R19 ) & ( dom R19 ) = ( dom R14 ))
and
L586: (for R1 being Ordinal holds (R1 in ( dom R14 ) implies ( R19 . R1 ) = ( sup ( rng ( R14 | ( ( dom R14 ) \ R1 ) ) ) )));

given R20 being Ordinal-Sequence such that
L587: (C20 = ( inf R20 ) & ( dom R20 ) = ( dom R14 ))
and
L588: (for R1 being Ordinal holds (R1 in ( dom R14 ) implies ( R20 . R1 ) = ( sup ( rng ( R14 | ( ( dom R14 ) \ R1 ) ) ) )));

L589:
now
let R9 being set;
assume L590: R9 in ( dom R14 );
reconsider D41 = R9 as Ordinal by L590;
L591: ( R19 . D41 ) = ( sup ( rng ( R14 | ( ( dom R14 ) \ D41 ) ) ) ) by L586 , L590;
thus L592: ( R19 . R9 ) = ( R20 . R9 ) by L591 , L588 , L590;
end;
thus L593: thesis by L589 , L585 , L587 , FUNCT_1:2;
end;
func lim_inf R14 -> Ordinal means 
(ex R19 being Ordinal-Sequence st (it = ( sup R19 ) & ( dom R19 ) = ( dom R14 ) & (for R1 being Ordinal holds (R1 in ( dom R14 ) implies ( R19 . R1 ) = ( inf ( rng ( R14 | ( ( dom R14 ) \ R1 ) ) ) )))));
existence
proof
deffunc H5(Ordinal) = ( inf ( rng ( R14 | ( ( dom R14 ) \ $1 ) ) ) );
consider R19 being Ordinal-Sequence such that L594: (( dom R19 ) = ( dom R14 ) & (for R1 being Ordinal holds (R1 in ( dom R14 ) implies ( R19 . R1 ) = H5(R1)))) from OSLambda;
take ( sup R19 );
take R19;
thus L595: thesis by L594;
end;
uniqueness
proof
let C21 , C22 being Ordinal;
given R19 being Ordinal-Sequence such that
L596: (C21 = ( sup R19 ) & ( dom R19 ) = ( dom R14 ))
and
L597: (for R1 being Ordinal holds (R1 in ( dom R14 ) implies ( R19 . R1 ) = ( inf ( rng ( R14 | ( ( dom R14 ) \ R1 ) ) ) )));

given R20 being Ordinal-Sequence such that
L598: (C22 = ( sup R20 ) & ( dom R20 ) = ( dom R14 ))
and
L599: (for R1 being Ordinal holds (R1 in ( dom R14 ) implies ( R20 . R1 ) = ( inf ( rng ( R14 | ( ( dom R14 ) \ R1 ) ) ) )));

L600:
now
let R9 being set;
assume L601: R9 in ( dom R14 );
reconsider D42 = R9 as Ordinal by L601;
L602: ( R19 . D42 ) = ( inf ( rng ( R14 | ( ( dom R14 ) \ D42 ) ) ) ) by L597 , L601;
thus L603: ( R19 . R9 ) = ( R20 . R9 ) by L602 , L599 , L601;
end;
thus L604: thesis by L600 , L596 , L598 , FUNCT_1:2;
end;
end;
definition
let R1 being Ordinal;
let R19 being Ordinal-Sequence;
pred R1 is_limes_of R19
means
:L606: (ex R4 being Ordinal st (R4 in ( dom R19 ) & (for R5 being Ordinal holds ((R4 c= R5 & R5 in ( dom R19 )) implies ( R19 . R5 ) = ( {} ))))) if R1 = ( {} ) otherwise (for R4 being Ordinal holds (for R5 being Ordinal holds ((R4 in R1 & R1 in R5) implies (ex R6 being Ordinal st (R6 in ( dom R19 ) & (for B9 being Ordinal holds ((R6 c= B9 & B9 in ( dom R19 )) implies (R4 in ( R19 . B9 ) & ( R19 . B9 ) in R5))))))))
;consistency;
end;
definition
let R19 being Ordinal-Sequence;
given R1 being Ordinal such that
L608: R1 is_limes_of R19;

func lim R19 -> Ordinal means 
:L609: it is_limes_of R19;
existence by L608;
uniqueness
proof
let C23 , C24 being Ordinal;
assume that
L610: ((C23 = ( {} ) & (ex R4 being Ordinal st (R4 in ( dom R19 ) & (for R5 being Ordinal holds ((R4 c= R5 & R5 in ( dom R19 )) implies ( R19 . R5 ) = ( {} )))))) or (C23 <> ( {} ) & (for R4 being Ordinal holds (for R5 being Ordinal holds ((R4 in C23 & C23 in R5) implies (ex R6 being Ordinal st (R6 in ( dom R19 ) & (for B10 being Ordinal holds ((R6 c= B10 & B10 in ( dom R19 )) implies (R4 in ( R19 . B10 ) & ( R19 . B10 ) in R5))))))))))
and
L611: ((C24 = ( {} ) & (ex R4 being Ordinal st (R4 in ( dom R19 ) & (for R5 being Ordinal holds ((R4 c= R5 & R5 in ( dom R19 )) implies ( R19 . R5 ) = ( {} )))))) or (C24 <> ( {} ) & (for R4 being Ordinal holds (for R5 being Ordinal holds ((R4 in C24 & C24 in R5) implies (ex R6 being Ordinal st (R6 in ( dom R19 ) & (for B11 being Ordinal holds ((R6 c= B11 & B11 in ( dom R19 )) implies (R4 in ( R19 . B11 ) & ( R19 . B11 ) in R5))))))))));
L612:
now
set D43 = the (Element of C23);
reconsider D44 = D43 as Ordinal;
assume L613: C23 in C24;
consider R6 being Ordinal such that L614: R6 in ( dom R19 ) and L615: (for R1 being Ordinal holds ((R6 c= R1 & R1 in ( dom R19 )) implies (C23 in ( R19 . R1 ) & ( R19 . R1 ) in ( succ C24 )))) by L613 , L611 , ORDINAL1:6;
L616:
now
assume L617: C23 = ( {} );
consider R4 being Ordinal such that L618: R4 in ( dom R19 ) and L619: (for R5 being Ordinal holds ((R4 c= R5 & R5 in ( dom R19 )) implies ( R19 . R5 ) = ( {} ))) by L617 , L610;
L620: (R4 c= R6 or R6 c= R4);
consider C25 being Ordinal such that L621: ((C25 = R6 & R4 c= R6) or (C25 = R4 & R6 c= R4)) by L620;
L622: ( R19 . C25 ) = ( {} ) by L614 , L618 , L619 , L621;
thus L623: contradiction by L622 , L614 , L615 , L618 , L621;
end;
consider R5 being Ordinal such that L624: R5 in ( dom R19 ) and L625: (for R1 being Ordinal holds ((R5 c= R1 & R1 in ( dom R19 )) implies (D44 in ( R19 . R1 ) & ( R19 . R1 ) in ( succ C23 )))) by L616 , L610 , ORDINAL1:6;
L626: (R5 c= R6 or R6 c= R5);
consider C26 being Ordinal such that L627: ((C26 = R6 & R5 c= R6) or (C26 = R5 & R6 c= R5)) by L626;
L628: ( R19 . C26 ) in ( succ C23 ) by L614 , L624 , L625 , L627;
L629: (( R19 . C26 ) in C23 or ( R19 . C26 ) = C23) by L628 , ORDINAL1:8;
L630: C23 in ( R19 . C26 ) by L614 , L615 , L624 , L627;
thus L631: contradiction by L630 , L629;
end;
set D45 = the (Element of C24);
reconsider D46 = D45 as Ordinal;
assume L632: C23 <> C24;
L633: (C23 in C24 or C24 in C23) by L632 , ORDINAL1:14;
consider R6 being Ordinal such that L634: R6 in ( dom R19 ) and L635: (for R1 being Ordinal holds ((R6 c= R1 & R1 in ( dom R19 )) implies (C24 in ( R19 . R1 ) & ( R19 . R1 ) in ( succ C23 )))) by L633 , L610 , L612 , ORDINAL1:6;
L636:
now
assume L637: C24 = ( {} );
consider R4 being Ordinal such that L638: R4 in ( dom R19 ) and L639: (for R5 being Ordinal holds ((R4 c= R5 & R5 in ( dom R19 )) implies ( R19 . R5 ) = ( {} ))) by L637 , L611;
L640: (R4 c= R6 or R6 c= R4);
consider C27 being Ordinal such that L641: ((C27 = R6 & R4 c= R6) or (C27 = R4 & R6 c= R4)) by L640;
L642: ( R19 . C27 ) = ( {} ) by L634 , L638 , L639 , L641;
thus L643: contradiction by L642 , L634 , L635 , L638 , L641;
end;
consider R5 being Ordinal such that L644: R5 in ( dom R19 ) and L645: (for R1 being Ordinal holds ((R5 c= R1 & R1 in ( dom R19 )) implies (D46 in ( R19 . R1 ) & ( R19 . R1 ) in ( succ C24 )))) by L636 , L611 , ORDINAL1:6;
L646: (R5 c= R6 or R6 c= R5);
consider C28 being Ordinal such that L647: ((C28 = R6 & R5 c= R6) or (C28 = R5 & R6 c= R5)) by L646;
L648: ( R19 . C28 ) in ( succ C24 ) by L634 , L644 , L645 , L647;
L649: (( R19 . C28 ) in C24 or ( R19 . C28 ) = C24) by L648 , ORDINAL1:8;
L650: C24 in ( R19 . C28 ) by L634 , L635 , L644 , L647;
thus L651: contradiction by L650 , L649;
end;
end;
definition
let R1 being Ordinal;
let R19 being Ordinal-Sequence;
func lim (R1 , R19) -> Ordinal equals 
( lim ( R19 | R1 ) );
correctness;
end;
definition
let C29 being Ordinal-Sequence;
attr C29 is  increasing
means
(for R1 being Ordinal holds (for R4 being Ordinal holds ((R1 in R4 & R4 in ( dom C29 )) implies ( C29 . R1 ) in ( C29 . R4 ))));
attr C29 is  continuous
means
(for R1 being Ordinal holds (for R4 being Ordinal holds ((R1 in ( dom C29 ) & R1 <> ( {} ) & R1 is  limit_ordinal & R4 = ( C29 . R1 )) implies R4 is_limes_of ( C29 | R1 ))));
end;
definition
let R1 being Ordinal;
let R4 being Ordinal;
func R1 +^ R4 -> Ordinal means 
:L655: (ex R19 being Ordinal-Sequence st (it = ( last R19 ) & ( dom R19 ) = ( succ R4 ) & ( R19 . ( {} ) ) = R1 & (for R5 being Ordinal holds (( succ R5 ) in ( succ R4 ) implies ( R19 . ( succ R5 ) ) = ( succ ( R19 . R5 ) ))) & (for R5 being Ordinal holds ((R5 in ( succ R4 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = ( sup ( R19 | R5 ) )))));
correctness
proof
deffunc H6(Ordinal , T-Sequence) = ( sup $2 );
deffunc H7(Ordinal , Ordinal) = ( succ $2 );
L656: ((ex B12 being Ordinal st (ex R19 being Ordinal-Sequence st (B12 = ( last R19 ) & ( dom R19 ) = ( succ R4 ) & ( R19 . ( {} ) ) = R1 & (for R5 being Ordinal holds (( succ R5 ) in ( succ R4 ) implies ( R19 . ( succ R5 ) ) = H7(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R4 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = H6(R5 , ( R19 | R5 ))))))) & (for R2 being Ordinal holds (for R3 being Ordinal holds (((ex R19 being Ordinal-Sequence st (R2 = ( last R19 ) & ( dom R19 ) = ( succ R4 ) & ( R19 . ( {} ) ) = R1 & (for R5 being Ordinal holds (( succ R5 ) in ( succ R4 ) implies ( R19 . ( succ R5 ) ) = H7(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R4 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = H6(R5 , ( R19 | R5 )))))) & (ex R19 being Ordinal-Sequence st (R3 = ( last R19 ) & ( dom R19 ) = ( succ R4 ) & ( R19 . ( {} ) ) = R1 & (for R5 being Ordinal holds (( succ R5 ) in ( succ R4 ) implies ( R19 . ( succ R5 ) ) = H7(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R4 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = H6(R5 , ( R19 | R5 ))))))) implies R2 = R3)))) from OSDef;
thus L657: thesis by L656;
end;
end;
definition
let R1 being Ordinal;
let R4 being Ordinal;
func R1 *^ R4 -> Ordinal means 
:L659: (ex R19 being Ordinal-Sequence st (it = ( last R19 ) & ( dom R19 ) = ( succ R1 ) & ( R19 . ( {} ) ) = ( {} ) & (for R5 being Ordinal holds (( succ R5 ) in ( succ R1 ) implies ( R19 . ( succ R5 ) ) = ( ( R19 . R5 ) +^ R4 ))) & (for R5 being Ordinal holds ((R5 in ( succ R1 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = ( union ( sup ( R19 | R5 ) ) )))));
correctness
proof
deffunc H8(Ordinal , Ordinal-Sequence) = ( union ( sup $2 ) );
deffunc H9(Ordinal , Ordinal) = ( $2 +^ R4 );
L660: ((ex B13 being Ordinal st (ex R19 being Ordinal-Sequence st (B13 = ( last R19 ) & ( dom R19 ) = ( succ R1 ) & ( R19 . ( {} ) ) = ( {} ) & (for R5 being Ordinal holds (( succ R5 ) in ( succ R1 ) implies ( R19 . ( succ R5 ) ) = H9(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R1 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = H8(R5 , ( R19 | R5 ))))))) & (for R2 being Ordinal holds (for R3 being Ordinal holds (((ex R19 being Ordinal-Sequence st (R2 = ( last R19 ) & ( dom R19 ) = ( succ R1 ) & ( R19 . ( {} ) ) = ( {} ) & (for R5 being Ordinal holds (( succ R5 ) in ( succ R1 ) implies ( R19 . ( succ R5 ) ) = H9(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R1 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = H8(R5 , ( R19 | R5 )))))) & (ex R19 being Ordinal-Sequence st (R3 = ( last R19 ) & ( dom R19 ) = ( succ R1 ) & ( R19 . ( {} ) ) = ( {} ) & (for R5 being Ordinal holds (( succ R5 ) in ( succ R1 ) implies ( R19 . ( succ R5 ) ) = H9(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R1 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = H8(R5 , ( R19 | R5 ))))))) implies R2 = R3)))) from OSDef;
thus L661: thesis by L660;
end;
end;
registration
let C30 being Ordinal;
cluster  ->  ordinal for (Element of C30);
coherence;
end;
definition
let R1 being Ordinal;
let R4 being Ordinal;
func exp (R1 , R4) -> Ordinal means 
:L664: (ex R19 being Ordinal-Sequence st (it = ( last R19 ) & ( dom R19 ) = ( succ R4 ) & ( R19 . ( {} ) ) = 1 & (for R5 being Ordinal holds (( succ R5 ) in ( succ R4 ) implies ( R19 . ( succ R5 ) ) = ( R1 *^ ( R19 . R5 ) ))) & (for R5 being Ordinal holds ((R5 in ( succ R4 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = ( lim ( R19 | R5 ) )))));
correctness
proof
deffunc H10(Ordinal , Ordinal-Sequence) = ( lim $2 );
deffunc H11(Ordinal , Ordinal) = ( R1 *^ $2 );
L665: ((ex B14 being Ordinal st (ex R19 being Ordinal-Sequence st (B14 = ( last R19 ) & ( dom R19 ) = ( succ R4 ) & ( R19 . ( {} ) ) = 1 & (for R5 being Ordinal holds (( succ R5 ) in ( succ R4 ) implies ( R19 . ( succ R5 ) ) = H11(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R4 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = H10(R5 , ( R19 | R5 ))))))) & (for R2 being Ordinal holds (for R3 being Ordinal holds (((ex R19 being Ordinal-Sequence st (R2 = ( last R19 ) & ( dom R19 ) = ( succ R4 ) & ( R19 . ( {} ) ) = 1 & (for R5 being Ordinal holds (( succ R5 ) in ( succ R4 ) implies ( R19 . ( succ R5 ) ) = H11(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R4 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = H10(R5 , ( R19 | R5 )))))) & (ex R19 being Ordinal-Sequence st (R3 = ( last R19 ) & ( dom R19 ) = ( succ R4 ) & ( R19 . ( {} ) ) = 1 & (for R5 being Ordinal holds (( succ R5 ) in ( succ R4 ) implies ( R19 . ( succ R5 ) ) = H11(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R4 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = H10(R5 , ( R19 | R5 ))))))) implies R2 = R3)))) from OSDef;
thus L666: thesis by L665;
end;
end;
theorem
L668: (for R1 being Ordinal holds ( R1 +^ ( {} ) ) = R1)
proof
let R1 being Ordinal;
deffunc H12(Ordinal , Ordinal) = ( succ $2 );
deffunc H13(Ordinal , T-Sequence) = ( sup $2 );
deffunc H14(Ordinal) = ( R1 +^ $1 );
L669: (for R4 being Ordinal holds (for R5 being Ordinal holds (R5 = H14(R4) iff (ex R19 being Ordinal-Sequence st (R5 = ( last R19 ) & ( dom R19 ) = ( succ R4 ) & ( R19 . ( {} ) ) = R1 & (for R5 being Ordinal holds (( succ R5 ) in ( succ R4 ) implies ( R19 . ( succ R5 ) ) = H12(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R4 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = H13(R5 , ( R19 | R5 ))))))))) by L655;
thus L670: H14(( {} )) = R1 from OSResult0(L669);
end;
theorem
L671: (for R1 being Ordinal holds (for R4 being Ordinal holds ( R1 +^ ( succ R4 ) ) = ( succ ( R1 +^ R4 ) )))
proof
let R1 being Ordinal;
let R4 being Ordinal;
deffunc H15(Ordinal , Ordinal) = ( succ $2 );
deffunc H16(Ordinal , T-Sequence) = ( sup $2 );
deffunc H17(Ordinal) = ( R1 +^ $1 );
L672: (for R4 being Ordinal holds (for R5 being Ordinal holds (R5 = H17(R4) iff (ex R19 being Ordinal-Sequence st (R5 = ( last R19 ) & ( dom R19 ) = ( succ R4 ) & ( R19 . ( {} ) ) = R1 & (for R5 being Ordinal holds (( succ R5 ) in ( succ R4 ) implies ( R19 . ( succ R5 ) ) = H15(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R4 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = H16(R5 , ( R19 | R5 ))))))))) by L655;
L673: (for R4 being Ordinal holds H17(( succ R4 )) = H15(R4 , H17(R4))) from OSResultS(L672);
thus L674: thesis by L673;
end;
theorem
L675: (for R1 being Ordinal holds (for R4 being Ordinal holds ((R4 <> ( {} ) & R4 is  limit_ordinal) implies (for R19 being Ordinal-Sequence holds ((( dom R19 ) = R4 & (for R5 being Ordinal holds (R5 in R4 implies ( R19 . R5 ) = ( R1 +^ R5 )))) implies ( R1 +^ R4 ) = ( sup R19 ))))))
proof
let R1 being Ordinal;
let R4 being Ordinal;
deffunc H18(Ordinal , Ordinal) = ( succ $2 );
deffunc H19(Ordinal , Ordinal-Sequence) = ( sup $2 );
assume L676: (R4 <> ( {} ) & R4 is  limit_ordinal);
deffunc H20(Ordinal) = ( R1 +^ $1 );
let R19 being Ordinal-Sequence;
assume that
L677: ( dom R19 ) = R4
and
L678: (for R5 being Ordinal holds (R5 in R4 implies ( R19 . R5 ) = H20(R5)));
L679: (for R4 being Ordinal holds (for R5 being Ordinal holds (R5 = H20(R4) iff (ex R19 being Ordinal-Sequence st (R5 = ( last R19 ) & ( dom R19 ) = ( succ R4 ) & ( R19 . ( {} ) ) = R1 & (for R5 being Ordinal holds (( succ R5 ) in ( succ R4 ) implies ( R19 . ( succ R5 ) ) = H18(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R4 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = H19(R5 , ( R19 | R5 ))))))))) by L655;
thus L680: H20(R4) = H19(R4 , R19) from OSResultL(L679 , L676 , L677 , L678);
end;
theorem
L681: (for R1 being Ordinal holds ( ( {} ) +^ R1 ) = R1)
proof
let R1 being Ordinal;
defpred S10[ Ordinal ] means ( ( {} ) +^ $1 ) = $1;
L682: (for R1 being Ordinal holds (S10[ R1 ] implies S10[ ( succ R1 ) ])) by L671;
L683: (for R1 being Ordinal holds ((R1 <> ( {} ) & R1 is  limit_ordinal & (for R4 being Ordinal holds (R4 in R1 implies S10[ R4 ]))) implies S10[ R1 ]))
proof
deffunc H21(Ordinal) = ( ( {} ) +^ $1 );
let R1 being Ordinal;
assume that
L684: (R1 <> ( {} ) & R1 is  limit_ordinal)
and
L685: (for R4 being Ordinal holds (R4 in R1 implies ( ( {} ) +^ R4 ) = R4));
consider R19 being Ordinal-Sequence such that L686: (( dom R19 ) = R1 & (for R4 being Ordinal holds (R4 in R1 implies ( R19 . R4 ) = H21(R4)))) from OSLambda;
L687: ( rng R19 ) = R1
proof
thus L688: (for R9 being set holds (R9 in ( rng R19 ) implies R9 in R1))
proof
let R9 being set;
assume L689: R9 in ( rng R19 );
consider R10 being set such that L690: R10 in ( dom R19 ) and L691: R9 = ( R19 . R10 ) by L689 , FUNCT_1:def 3;
reconsider D47 = R10 as Ordinal by L690;
L692: R9 = ( ( {} ) +^ D47 ) by L686 , L690 , L691
.= D47 by L685 , L686 , L690;
thus L693: thesis by L692 , L686 , L690;
end;

let R9 being set;
assume L694: R9 in R1;
reconsider D48 = R9 as Ordinal by L694;
L695: (( ( {} ) +^ D48 ) = D48 & ( R19 . D48 ) = ( ( {} ) +^ D48 )) by L685 , L686 , L694;
thus L696: thesis by L695 , L686 , L694 , FUNCT_1:def 3;
end;
L697: ( ( {} ) +^ R1 ) = ( sup R19 ) by L684 , L686 , L675
.= ( sup ( rng R19 ) );
thus L698: thesis by L697 , L687 , L132;
end;
L699: S10[ ( {} ) ] by L668;
L700: (for R1 being Ordinal holds S10[ R1 ]) from OrdinalInd(L699 , L682 , L683);
thus L701: thesis by L700;
end;
L702: 1 = ( succ ( {} ) );
theorem
L703: (for R1 being Ordinal holds ( R1 +^ 1 ) = ( succ R1 ))
proof
let R1 being Ordinal;
thus L704: ( R1 +^ 1 ) = ( succ ( R1 +^ ( {} ) ) ) by L702 , L671
.= ( succ R1 ) by L668;
end;
theorem
L705: (for R1 being Ordinal holds (for R4 being Ordinal holds (for R5 being Ordinal holds (R1 in R4 implies ( R5 +^ R1 ) in ( R5 +^ R4 )))))
proof
let R1 being Ordinal;
let R4 being Ordinal;
let R5 being Ordinal;
defpred S11[ Ordinal ] means (R1 in $1 implies ( R5 +^ R1 ) in ( R5 +^ $1 ));
L706: (for R4 being Ordinal holds ((for R6 being Ordinal holds (R6 in R4 implies S11[ R6 ])) implies S11[ R4 ]))
proof
let R4 being Ordinal;
assume that
L707: (for R6 being Ordinal holds (R6 in R4 implies (R1 in R6 implies ( R5 +^ R1 ) in ( R5 +^ R6 ))))
and
L708: R1 in R4;
L709:
now
given R6 being Ordinal such that
L710: R4 = ( succ R6 );

L711:
now
assume L712: R1 in R6;
L713: ( R5 +^ R1 ) in ( R5 +^ R6 ) by L712 , L707 , L710 , ORDINAL1:6;
L714: (( succ ( R5 +^ R6 ) ) = ( R5 +^ ( succ R6 ) ) & ( R5 +^ R6 ) in ( succ ( R5 +^ R6 ) )) by L671 , ORDINAL1:6;
thus L715: thesis by L714 , L710 , L713 , ORDINAL1:10;
end;
L716:
now
assume L717: (not R1 in R6);
L718: (R1 c< R6 iff (R1 c= R6 & R1 <> R6)) by XBOOLE_0:def 8;
L719: ( R5 +^ R1 ) in ( succ ( R5 +^ R6 ) ) by L718 , L708 , L710 , L717 , ORDINAL1:11 , ORDINAL1:22;
thus L720: thesis by L719 , L710 , L671;
end;
thus L721: thesis by L716 , L711;
end;
L722:
now
deffunc H22(Ordinal) = ( R5 +^ $1 );
consider R19 being Ordinal-Sequence such that L723: (( dom R19 ) = R4 & (for R6 being Ordinal holds (R6 in R4 implies ( R19 . R6 ) = H22(R6)))) from OSLambda;
L724: ( R19 . R1 ) = ( R5 +^ R1 ) by L708 , L723;
L725: ( R5 +^ R1 ) in ( rng R19 ) by L724 , L708 , L723 , FUNCT_1:def 3;
assume L726: (for R6 being Ordinal holds R4 <> ( succ R6 ));
L727: R4 is  limit_ordinal by L726 , ORDINAL1:29;
L728: ( R5 +^ R4 ) = ( sup R19 ) by L727 , L708 , L723 , L675
.= ( sup ( rng R19 ) );
thus L729: thesis by L728 , L725 , L135;
end;
thus L730: thesis by L722 , L709;
end;
L731: (for R4 being Ordinal holds S11[ R4 ]) from ORDINAL1:sch 2(L706);
thus L732: thesis by L731;
end;
theorem
L733: (for R1 being Ordinal holds (for R4 being Ordinal holds (for R5 being Ordinal holds (R1 c= R4 implies ( R5 +^ R1 ) c= ( R5 +^ R4 )))))
proof
let R1 being Ordinal;
let R4 being Ordinal;
let R5 being Ordinal;
assume L734: R1 c= R4;
L735:
now
assume L736: R1 <> R4;
L737: R1 c< R4 by L736 , L734 , XBOOLE_0:def 8;
L738: ( R5 +^ R1 ) in ( R5 +^ R4 ) by L737 , L705 , ORDINAL1:11;
thus L739: thesis by L738 , ORDINAL1:def 2;
end;
thus L740: thesis by L735;
end;
theorem
L741: (for R1 being Ordinal holds (for R4 being Ordinal holds (for R5 being Ordinal holds (R1 c= R4 implies ( R1 +^ R5 ) c= ( R4 +^ R5 )))))
proof
let R1 being Ordinal;
let R4 being Ordinal;
let R5 being Ordinal;
defpred S12[ Ordinal ] means ( R1 +^ $1 ) c= ( R4 +^ $1 );
assume L742: R1 c= R4;
L743: (for R5 being Ordinal holds ((for R6 being Ordinal holds (R6 in R5 implies S12[ R6 ])) implies S12[ R5 ]))
proof
let R5 being Ordinal;
assume that
L744: (for R6 being Ordinal holds (R6 in R5 implies ( R1 +^ R6 ) c= ( R4 +^ R6 )));
L745:
now
given R6 being Ordinal such that
L746: R5 = ( succ R6 );

L747: ( R4 +^ R5 ) = ( succ ( R4 +^ R6 ) ) by L746 , L671;
L748: (( R1 +^ R6 ) c= ( R4 +^ R6 ) & ( R1 +^ R5 ) = ( succ ( R1 +^ R6 ) )) by L744 , L746 , L671 , ORDINAL1:6;
thus L749: thesis by L748 , L747 , L17;
end;
L750:
now
deffunc H23(Ordinal) = ( R1 +^ $1 );
assume that
L751: R5 <> ( {} )
and
L752: (for R6 being Ordinal holds R5 <> ( succ R6 ));
consider R19 being Ordinal-Sequence such that L753: (( dom R19 ) = R5 & (for R6 being Ordinal holds (R6 in R5 implies ( R19 . R6 ) = H23(R6)))) from OSLambda;
L754:
now
let R6 being Ordinal;
assume L755: R6 in ( rng R19 );
consider R9 being set such that L756: R9 in ( dom R19 ) and L757: R6 = ( R19 . R9 ) by L755 , FUNCT_1:def 3;
reconsider D49 = R9 as Ordinal by L756;
L758: ( R4 +^ D49 ) in ( R4 +^ R5 ) by L753 , L756 , L705;
L759: (R6 = ( R1 +^ D49 ) & ( R1 +^ D49 ) c= ( R4 +^ D49 )) by L744 , L753 , L756 , L757;
thus L760: R6 in ( R4 +^ R5 ) by L759 , L758 , ORDINAL1:12;
end;
L761: R5 is  limit_ordinal by L752 , ORDINAL1:29;
L762: ( R1 +^ R5 ) = ( sup R19 ) by L761 , L751 , L753 , L675
.= ( sup ( rng R19 ) );
thus L763: thesis by L762 , L754 , L140;
end;
L764:
now
assume L765: R5 = ( {} );
L766: ( R1 +^ R5 ) = R1 by L765 , L668;
thus L767: thesis by L766 , L742 , L765 , L668;
end;
thus L768: thesis by L764 , L745 , L750;
end;
L769: (for R5 being Ordinal holds S12[ R5 ]) from ORDINAL1:sch 2(L743);
thus L770: thesis by L769;
end;
theorem
L771: (for R1 being Ordinal holds ( ( {} ) *^ R1 ) = ( {} ))
proof
let R1 being Ordinal;
deffunc H24(Ordinal , T-Sequence) = ( union ( sup $2 ) );
deffunc H25(Ordinal) = ( $1 *^ R1 );
deffunc H26(Ordinal , Ordinal) = ( $2 +^ R1 );
L772: (for R4 being Ordinal holds (for R5 being Ordinal holds (R5 = H25(R4) iff (ex R19 being Ordinal-Sequence st (R5 = ( last R19 ) & ( dom R19 ) = ( succ R4 ) & ( R19 . ( {} ) ) = ( {} ) & (for R5 being Ordinal holds (( succ R5 ) in ( succ R4 ) implies ( R19 . ( succ R5 ) ) = H26(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R4 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = H24(R5 , ( R19 | R5 ))))))))) by L659;
thus L773: H25(( {} )) = ( {} ) from OSResult0(L772);
end;
theorem
L774: (for R1 being Ordinal holds (for R4 being Ordinal holds ( ( succ R4 ) *^ R1 ) = ( ( R4 *^ R1 ) +^ R1 )))
proof
let R1 being Ordinal;
let R4 being Ordinal;
deffunc H27(Ordinal , T-Sequence) = ( union ( sup $2 ) );
deffunc H28(Ordinal) = ( $1 *^ R1 );
deffunc H29(Ordinal , Ordinal) = ( $2 +^ R1 );
L775: (for R4 being Ordinal holds (for R5 being Ordinal holds (R5 = H28(R4) iff (ex R19 being Ordinal-Sequence st (R5 = ( last R19 ) & ( dom R19 ) = ( succ R4 ) & ( R19 . ( {} ) ) = ( {} ) & (for R5 being Ordinal holds (( succ R5 ) in ( succ R4 ) implies ( R19 . ( succ R5 ) ) = H29(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R4 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = H27(R5 , ( R19 | R5 ))))))))) by L659;
L776: (for R4 being Ordinal holds H28(( succ R4 )) = H29(R4 , H28(R4))) from OSResultS(L775);
thus L777: thesis by L776;
end;
theorem
L778: (for R1 being Ordinal holds (for R4 being Ordinal holds ((R4 <> ( {} ) & R4 is  limit_ordinal) implies (for R19 being Ordinal-Sequence holds ((( dom R19 ) = R4 & (for R5 being Ordinal holds (R5 in R4 implies ( R19 . R5 ) = ( R5 *^ R1 )))) implies ( R4 *^ R1 ) = ( union ( sup R19 ) ))))))
proof
let R1 being Ordinal;
let R4 being Ordinal;
deffunc H30(Ordinal , Ordinal-Sequence) = ( union ( sup $2 ) );
assume L779: (R4 <> ( {} ) & R4 is  limit_ordinal);
deffunc H31(Ordinal , Ordinal) = ( $2 +^ R1 );
deffunc H32(Ordinal) = ( $1 *^ R1 );
let R19 being Ordinal-Sequence;
assume that
L780: ( dom R19 ) = R4
and
L781: (for R5 being Ordinal holds (R5 in R4 implies ( R19 . R5 ) = H32(R5)));
L782: (for R4 being Ordinal holds (for R5 being Ordinal holds (R5 = H32(R4) iff (ex R19 being Ordinal-Sequence st (R5 = ( last R19 ) & ( dom R19 ) = ( succ R4 ) & ( R19 . ( {} ) ) = ( {} ) & (for R5 being Ordinal holds (( succ R5 ) in ( succ R4 ) implies ( R19 . ( succ R5 ) ) = H31(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R4 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = H30(R5 , ( R19 | R5 ))))))))) by L659;
thus L783: H32(R4) = H30(R4 , R19) from OSResultL(L782 , L779 , L780 , L781);
end;
theorem
L784: (for R1 being Ordinal holds ( R1 *^ ( {} ) ) = ( {} ))
proof
let R1 being Ordinal;
defpred S13[ Ordinal ] means ( $1 *^ ( {} ) ) = ( {} );
L785: (for R1 being Ordinal holds (S13[ R1 ] implies S13[ ( succ R1 ) ]))
proof
let R1 being Ordinal;
assume L786: ( R1 *^ ( {} ) ) = ( {} );
thus L787: ( ( succ R1 ) *^ ( {} ) ) = ( ( {} ) +^ ( {} ) ) by L786 , L774
.= ( {} ) by L668;
end;
L788: (for R1 being Ordinal holds ((R1 <> ( {} ) & R1 is  limit_ordinal & (for R4 being Ordinal holds (R4 in R1 implies S13[ R4 ]))) implies S13[ R1 ]))
proof
deffunc H33(Ordinal) = ( $1 *^ ( {} ) );
let R1 being Ordinal;
assume that
L789: R1 <> ( {} )
and
L790: R1 is  limit_ordinal
and
L791: (for R4 being Ordinal holds (R4 in R1 implies ( R4 *^ ( {} ) ) = ( {} )));
consider R19 being Ordinal-Sequence such that L792: (( dom R19 ) = R1 & (for R4 being Ordinal holds (R4 in R1 implies ( R19 . R4 ) = H33(R4)))) from OSLambda;
L793: ( rng R19 ) = ( succ ( {} ) )
proof
thus L794: (for R9 being set holds (R9 in ( rng R19 ) implies R9 in ( succ ( {} ) )))
proof
let R9 being set;
assume L795: R9 in ( rng R19 );
consider R10 being set such that L796: R10 in ( dom R19 ) and L797: R9 = ( R19 . R10 ) by L795 , FUNCT_1:def 3;
reconsider D50 = R10 as Ordinal by L796;
L798: R9 = ( D50 *^ ( {} ) ) by L792 , L796 , L797
.= ( {} ) by L791 , L792 , L796;
thus L799: thesis by L798 , TARSKI:def 1;
end;

let R9 being set;
assume L800: R9 in ( succ ( {} ) );
L801: R9 = ( {} ) by L800 , TARSKI:def 1;
L802: ( {} ) c= R1;
L803: ( {} ) c< R1 by L802 , L789 , XBOOLE_0:def 8;
L804: ( {} ) in R1 by L803 , ORDINAL1:11;
L805: ( ( {} ) *^ ( {} ) ) = ( {} ) by L771;
L806: ( R19 . R9 ) = R9 by L805 , L792 , L803 , L801 , ORDINAL1:11;
thus L807: thesis by L806 , L792 , L804 , L801 , FUNCT_1:def 3;
end;
L808: ( sup ( rng R19 ) ) = ( succ ( {} ) ) by L793 , L132;
L809: ( R1 *^ ( {} ) ) = ( union ( sup R19 ) ) by L789 , L790 , L792 , L778
.= ( union ( sup ( rng R19 ) ) );
thus L810: thesis by L809 , L808 , L20;
end;
L811: S13[ ( {} ) ] by L771;
L812: (for R1 being Ordinal holds S13[ R1 ]) from OrdinalInd(L811 , L785 , L788);
thus L813: thesis by L812;
end;
theorem
L814: (for R1 being Ordinal holds (( 1 *^ R1 ) = R1 & ( R1 *^ 1 ) = R1))
proof
let R1 being Ordinal;
defpred S14[ Ordinal ] means ( $1 *^ ( succ ( {} ) ) ) = $1;
thus L815: ( 1 *^ R1 ) = ( ( ( {} ) *^ R1 ) +^ R1 ) by L702 , L774
.= ( ( {} ) +^ R1 ) by L771
.= R1 by L681;
L816: (for R1 being Ordinal holds ((for R4 being Ordinal holds (R4 in R1 implies S14[ R4 ])) implies S14[ R1 ]))
proof
let R1 being Ordinal;
assume that
L817: (for R4 being Ordinal holds (R4 in R1 implies ( R4 *^ ( succ ( {} ) ) ) = R4));
L818:
now
deffunc H34(Ordinal) = ( $1 *^ ( succ ( {} ) ) );
assume that
L819: R1 <> ( {} )
and
L820: (for R4 being Ordinal holds R1 <> ( succ R4 ));
consider R19 being Ordinal-Sequence such that L821: (( dom R19 ) = R1 & (for R6 being Ordinal holds (R6 in R1 implies ( R19 . R6 ) = H34(R6)))) from OSLambda;
L822: R1 = ( rng R19 )
proof
thus L823: R1 c= ( rng R19 )
proof
let R9 being set;
assume L824: R9 in R1;
reconsider D51 = R9 as Ordinal by L824;
L825: R9 = ( D51 *^ ( succ ( {} ) ) ) by L817 , L824
.= ( R19 . R9 ) by L821 , L824;
thus L826: thesis by L825 , L821 , L824 , FUNCT_1:def 3;
end;

let R9 being set;
assume L827: R9 in ( rng R19 );
consider R10 being set such that L828: R10 in ( dom R19 ) and L829: R9 = ( R19 . R10 ) by L827 , FUNCT_1:def 3;
reconsider D52 = R10 as Ordinal by L828;
L830: ( R19 . D52 ) = ( D52 *^ ( succ ( {} ) ) ) by L821 , L828
.= D52 by L817 , L821 , L828;
thus L831: thesis by L830 , L821 , L828 , L829;
end;
L832: R1 is  limit_ordinal by L820 , ORDINAL1:29;
L833: ( R1 *^ ( succ ( {} ) ) ) = ( union ( sup R19 ) ) by L832 , L819 , L821 , L778
.= ( union ( sup ( rng R19 ) ) );
thus L834: ( R1 *^ ( succ ( {} ) ) ) = ( union R1 ) by L833 , L822 , L132
.= R1 by L832 , ORDINAL1:def 6;
end;
L835:
now
given R4 being Ordinal such that
L836: R1 = ( succ R4 );

thus L837: ( R1 *^ ( succ ( {} ) ) ) = ( ( R4 *^ ( succ ( {} ) ) ) +^ ( succ ( {} ) ) ) by L836 , L774
.= ( R4 +^ ( succ ( {} ) ) ) by L817 , L836 , ORDINAL1:6
.= ( succ ( R4 +^ ( {} ) ) ) by L671
.= R1 by L836 , L668;
end;
thus L838: thesis by L835 , L818 , L771;
end;
L839: (for R1 being Ordinal holds S14[ R1 ]) from ORDINAL1:sch 2(L816);
thus L840: thesis by L839;
end;
theorem
L841: (for R1 being Ordinal holds (for R4 being Ordinal holds (for R5 being Ordinal holds ((R5 <> ( {} ) & R1 in R4) implies ( R1 *^ R5 ) in ( R4 *^ R5 )))))
proof
let R1 being Ordinal;
let R4 being Ordinal;
let R5 being Ordinal;
L842: ( {} ) c= R5;
defpred S15[ Ordinal ] means (R1 in $1 implies ( R1 *^ R5 ) in ( $1 *^ R5 ));
assume L843: R5 <> ( {} );
L844: ( {} ) c< R5 by L843 , L842 , XBOOLE_0:def 8;
L845: ( {} ) in R5 by L844 , ORDINAL1:11;
L846: (for R4 being Ordinal holds ((for R6 being Ordinal holds (R6 in R4 implies S15[ R6 ])) implies S15[ R4 ]))
proof
let R4 being Ordinal;
assume that
L847: (for R6 being Ordinal holds (R6 in R4 implies (R1 in R6 implies ( R1 *^ R5 ) in ( R6 *^ R5 ))))
and
L848: R1 in R4;
L849:
now
given R6 being Ordinal such that
L850: R4 = ( succ R6 );

L851:
now
assume L852: R1 in R6;
L853: ( R1 *^ R5 ) in ( R6 *^ R5 ) by L852 , L847 , L850 , ORDINAL1:6;
L854: ( ( R6 *^ R5 ) +^ ( {} ) ) in ( ( R6 *^ R5 ) +^ R5 ) by L844 , L705 , ORDINAL1:11;
L855: (( ( R6 *^ R5 ) +^ R5 ) = ( ( succ R6 ) *^ R5 ) & ( ( R6 *^ R5 ) +^ ( {} ) ) = ( R6 *^ R5 )) by L668 , L774;
thus L856: thesis by L855 , L850 , L853 , L854 , ORDINAL1:10;
end;
L857:
now
L858: ( ( R1 *^ R5 ) +^ ( {} ) ) = ( R1 *^ R5 ) by L668;
assume L859: (not R1 in R6);
L860: (R1 c< R6 iff (R1 c= R6 & R1 <> R6)) by XBOOLE_0:def 8;
L861: ( ( R1 *^ R5 ) +^ ( {} ) ) in ( ( R6 *^ R5 ) +^ R5 ) by L860 , L845 , L848 , L850 , L859 , L705 , ORDINAL1:11 , ORDINAL1:22;
thus L862: thesis by L861 , L850 , L858 , L774;
end;
thus L863: thesis by L857 , L851;
end;
L864:
now
L865: (( ( R1 *^ R5 ) +^ ( {} ) ) = ( R1 *^ R5 ) & ( ( R1 *^ R5 ) +^ ( {} ) ) in ( ( R1 *^ R5 ) +^ R5 )) by L844 , L668 , L705 , ORDINAL1:11;
L866: ( ( succ R1 ) *^ R5 ) = ( ( R1 *^ R5 ) +^ R5 ) by L774;
deffunc H35(Ordinal) = ( $1 *^ R5 );
consider R19 being Ordinal-Sequence such that L867: (( dom R19 ) = R4 & (for R6 being Ordinal holds (R6 in R4 implies ( R19 . R6 ) = H35(R6)))) from OSLambda;
assume L868: (for R6 being Ordinal holds R4 <> ( succ R6 ));
L869: R4 is  limit_ordinal by L868 , ORDINAL1:29;
L870: ( succ R1 ) in R4 by L869 , L848 , ORDINAL1:28;
L871: ( R19 . ( succ R1 ) ) = ( ( succ R1 ) *^ R5 ) by L870 , L867;
L872: ( ( succ R1 ) *^ R5 ) in ( rng R19 ) by L871 , L867 , L870 , FUNCT_1:def 3;
L873: ( ( succ R1 ) *^ R5 ) c= ( union ( sup ( rng R19 ) ) ) by L872 , L135 , ZFMISC_1:74;
L874: ( R4 *^ R5 ) = ( union ( sup R19 ) ) by L848 , L869 , L867 , L778
.= ( union ( sup ( rng R19 ) ) );
thus L875: thesis by L874 , L873 , L865 , L866;
end;
thus L876: thesis by L864 , L849;
end;
L877: (for R4 being Ordinal holds S15[ R4 ]) from ORDINAL1:sch 2(L846);
thus L878: thesis by L877;
end;
theorem
L879: (for R1 being Ordinal holds (for R4 being Ordinal holds (for R5 being Ordinal holds (R1 c= R4 implies ( R1 *^ R5 ) c= ( R4 *^ R5 )))))
proof
let R1 being Ordinal;
let R4 being Ordinal;
let R5 being Ordinal;
assume L880: R1 c= R4;
L881:
now
assume L882: R5 <> ( {} );
L883:
now
assume L884: R1 <> R4;
L885: R1 c< R4 by L884 , L880 , XBOOLE_0:def 8;
L886: ( R1 *^ R5 ) in ( R4 *^ R5 ) by L885 , L882 , L841 , ORDINAL1:11;
thus L887: thesis by L886 , ORDINAL1:def 2;
end;
thus L888: thesis by L883;
end;
L889:
now
assume L890: R5 = ( {} );
L891: ( R1 *^ R5 ) = ( {} ) by L890 , L784;
thus L892: thesis by L891;
end;
thus L893: thesis by L889 , L881;
end;
theorem
L894: (for R1 being Ordinal holds (for R4 being Ordinal holds (for R5 being Ordinal holds (R1 c= R4 implies ( R5 *^ R1 ) c= ( R5 *^ R4 )))))
proof
let R1 being Ordinal;
let R4 being Ordinal;
let R5 being Ordinal;
assume L895: R1 c= R4;
L896:
now
defpred S16[ Ordinal ] means ( $1 *^ R1 ) c= ( $1 *^ R4 );
assume L897: R4 <> ( {} );
L898: (for R5 being Ordinal holds ((for R6 being Ordinal holds (R6 in R5 implies S16[ R6 ])) implies S16[ R5 ]))
proof
let R5 being Ordinal;
assume that
L899: (for R6 being Ordinal holds (R6 in R5 implies ( R6 *^ R1 ) c= ( R6 *^ R4 )));
L900:
now
given R6 being Ordinal such that
L901: R5 = ( succ R6 );

L902: ( R6 *^ R1 ) c= ( R6 *^ R4 ) by L899 , L901 , ORDINAL1:6;
L903: ( ( R6 *^ R1 ) +^ R1 ) c= ( ( R6 *^ R4 ) +^ R1 ) by L902 , L741;
L904: (( R5 *^ R1 ) = ( ( R6 *^ R1 ) +^ R1 ) & ( R5 *^ R4 ) = ( ( R6 *^ R4 ) +^ R4 )) by L901 , L774;
L905: ( ( R6 *^ R4 ) +^ R1 ) c= ( ( R6 *^ R4 ) +^ R4 ) by L895 , L733;
thus L906: thesis by L905 , L903 , L904 , XBOOLE_1:1;
end;
L907:
now
deffunc H36(Ordinal) = ( $1 *^ R1 );
assume that
L908: R5 <> ( {} )
and
L909: (for R6 being Ordinal holds R5 <> ( succ R6 ));
consider R19 being Ordinal-Sequence such that L910: (( dom R19 ) = R5 & (for R6 being Ordinal holds (R6 in R5 implies ( R19 . R6 ) = H36(R6)))) from OSLambda;
L911:
now
let R6 being Ordinal;
assume L912: R6 in ( rng R19 );
consider R9 being set such that L913: R9 in ( dom R19 ) and L914: R6 = ( R19 . R9 ) by L912 , FUNCT_1:def 3;
reconsider D53 = R9 as Ordinal by L913;
L915: ( D53 *^ R4 ) in ( R5 *^ R4 ) by L897 , L910 , L913 , L841;
L916: (R6 = ( D53 *^ R1 ) & ( D53 *^ R1 ) c= ( D53 *^ R4 )) by L899 , L910 , L913 , L914;
thus L917: R6 in ( R5 *^ R4 ) by L916 , L915 , ORDINAL1:12;
end;
L918: ( sup ( rng R19 ) ) c= ( R5 *^ R4 ) by L911 , L140;
L919: R5 is  limit_ordinal by L909 , ORDINAL1:29;
L920: ( R5 *^ R1 ) = ( union ( sup R19 ) ) by L919 , L908 , L910 , L778
.= ( union ( sup ( rng R19 ) ) );
L921: ( union ( sup ( rng R19 ) ) ) c= ( sup ( rng R19 ) ) by L35;
thus L922: thesis by L921 , L920 , L918 , XBOOLE_1:1;
end;
L923:
now
assume L924: R5 = ( {} );
L925: ( R5 *^ R1 ) = ( {} ) by L924 , L771;
thus L926: thesis by L925;
end;
thus L927: thesis by L923 , L900 , L907;
end;
L928: (for R5 being Ordinal holds S16[ R5 ]) from ORDINAL1:sch 2(L898);
thus L929: thesis by L928;
end;
thus L930: thesis by L896 , L895;
end;
theorem
L931: (for R1 being Ordinal holds ( exp (R1 , ( {} )) ) = 1)
proof
let R1 being Ordinal;
deffunc H37(Ordinal , Ordinal-Sequence) = ( lim $2 );
deffunc H38(Ordinal) = ( exp (R1 , $1) );
deffunc H39(Ordinal , Ordinal) = ( R1 *^ $2 );
L932: (for R4 being Ordinal holds (for R5 being Ordinal holds (R5 = H38(R4) iff (ex R19 being Ordinal-Sequence st (R5 = ( last R19 ) & ( dom R19 ) = ( succ R4 ) & ( R19 . ( {} ) ) = 1 & (for R5 being Ordinal holds (( succ R5 ) in ( succ R4 ) implies ( R19 . ( succ R5 ) ) = H39(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R4 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = H37(R5 , ( R19 | R5 ))))))))) by L664;
thus L933: H38(( {} )) = 1 from OSResult0(L932);
end;
theorem
L934: (for R1 being Ordinal holds (for R4 being Ordinal holds ( exp (R1 , ( succ R4 )) ) = ( R1 *^ ( exp (R1 , R4) ) )))
proof
let R1 being Ordinal;
let R4 being Ordinal;
deffunc H40(Ordinal , Ordinal-Sequence) = ( lim $2 );
deffunc H41(Ordinal) = ( exp (R1 , $1) );
deffunc H42(Ordinal , Ordinal) = ( R1 *^ $2 );
L935: (for R4 being Ordinal holds (for R5 being Ordinal holds (R5 = H41(R4) iff (ex R19 being Ordinal-Sequence st (R5 = ( last R19 ) & ( dom R19 ) = ( succ R4 ) & ( R19 . ( {} ) ) = 1 & (for R5 being Ordinal holds (( succ R5 ) in ( succ R4 ) implies ( R19 . ( succ R5 ) ) = H42(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R4 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = H40(R5 , ( R19 | R5 ))))))))) by L664;
L936: (for R4 being Ordinal holds H41(( succ R4 )) = H42(R4 , H41(R4))) from OSResultS(L935);
thus L937: thesis by L936;
end;
theorem
L938: (for R1 being Ordinal holds (for R4 being Ordinal holds ((R4 <> ( {} ) & R4 is  limit_ordinal) implies (for R19 being Ordinal-Sequence holds ((( dom R19 ) = R4 & (for R5 being Ordinal holds (R5 in R4 implies ( R19 . R5 ) = ( exp (R1 , R5) )))) implies ( exp (R1 , R4) ) = ( lim R19 ))))))
proof
let R1 being Ordinal;
let R4 being Ordinal;
deffunc H43(Ordinal , Ordinal-Sequence) = ( lim $2 );
assume L939: (R4 <> ( {} ) & R4 is  limit_ordinal);
deffunc H44(Ordinal , Ordinal) = ( R1 *^ $2 );
deffunc H45(Ordinal) = ( exp (R1 , $1) );
let R19 being Ordinal-Sequence;
assume that
L940: ( dom R19 ) = R4
and
L941: (for R5 being Ordinal holds (R5 in R4 implies ( R19 . R5 ) = H45(R5)));
L942: (for R4 being Ordinal holds (for R5 being Ordinal holds (R5 = H45(R4) iff (ex R19 being Ordinal-Sequence st (R5 = ( last R19 ) & ( dom R19 ) = ( succ R4 ) & ( R19 . ( {} ) ) = 1 & (for R5 being Ordinal holds (( succ R5 ) in ( succ R4 ) implies ( R19 . ( succ R5 ) ) = H44(R5 , ( R19 . R5 )))) & (for R5 being Ordinal holds ((R5 in ( succ R4 ) & R5 <> ( {} ) & R5 is  limit_ordinal) implies ( R19 . R5 ) = H43(R5 , ( R19 | R5 ))))))))) by L664;
thus L943: H45(R4) = H43(R4 , R19) from OSResultL(L942 , L939 , L940 , L941);
end;
theorem
L944: (for R1 being Ordinal holds (( exp (R1 , 1) ) = R1 & ( exp (1 , R1) ) = 1))
proof
let R1 being Ordinal;
defpred S17[ Ordinal ] means ( exp (1 , $1) ) = 1;
L945: (for R1 being Ordinal holds (S17[ R1 ] implies S17[ ( succ R1 ) ]))
proof
let R1 being Ordinal;
assume L946: ( exp (1 , R1) ) = 1;
thus L947: ( exp (1 , ( succ R1 )) ) = ( 1 *^ 1 ) by L946 , L934
.= 1 by L814;
end;
thus L948: ( exp (R1 , 1) ) = ( R1 *^ ( exp (R1 , ( {} )) ) ) by L702 , L934
.= ( R1 *^ 1 ) by L931
.= R1 by L814;
L949: (for R1 being Ordinal holds ((R1 <> ( {} ) & R1 is  limit_ordinal & (for R4 being Ordinal holds (R4 in R1 implies S17[ R4 ]))) implies S17[ R1 ]))
proof
deffunc H46(Ordinal) = ( exp (1 , $1) );
let R1 being Ordinal;
assume that
L950: R1 <> ( {} )
and
L951: R1 is  limit_ordinal
and
L952: (for R4 being Ordinal holds (R4 in R1 implies ( exp (1 , R4) ) = 1));
consider R19 being Ordinal-Sequence such that L953: (( dom R19 ) = R1 & (for R4 being Ordinal holds (R4 in R1 implies ( R19 . R4 ) = H46(R4)))) from OSLambda;
L954: ( rng R19 ) c= { 1 }
proof
let R9 being set;
assume L955: R9 in ( rng R19 );
consider R10 being set such that L956: R10 in ( dom R19 ) and L957: R9 = ( R19 . R10 ) by L955 , FUNCT_1:def 3;
reconsider D54 = R10 as Ordinal by L956;
L958: R9 = ( exp (1 , D54) ) by L953 , L956 , L957
.= 1 by L952 , L953 , L956;
thus L959: thesis by L958 , TARSKI:def 1;
end;
L960:
now
set D55 = the (Element of R1);
thus L961: ( {} ) <> 1;
let R4 being Ordinal;
let R5 being Ordinal;
assume that
L962: (R4 in 1 & 1 in R5);
reconsider D56 = D55 as Ordinal;
take D57 = D56;
thus L963: D57 in ( dom R19 ) by L950 , L953;
let C31 being Ordinal;
assume that
L964: D57 c= C31
and
L965: C31 in ( dom R19 );
L966: ( R19 . C31 ) in ( rng R19 ) by L965 , FUNCT_1:def 3;
thus L967: (R4 in ( R19 . C31 ) & ( R19 . C31 ) in R5) by L966 , L954 , L962 , TARSKI:def 1;
end;
L968: 1 is_limes_of R19 by L960 , L606;
L969: ( exp (1 , R1) ) = ( lim R19 ) by L950 , L951 , L953 , L938;
thus L970: thesis by L969 , L968 , L609;
end;
L971: S17[ ( {} ) ] by L931;
L972: (for R1 being Ordinal holds S17[ R1 ]) from OrdinalInd(L971 , L945 , L949);
thus L973: thesis by L972;
end;
theorem
L974: (for R1 being Ordinal holds (ex R4 being Ordinal st (ex R5 being Ordinal st (R4 is  limit_ordinal & R5 is  natural & R1 = ( R4 +^ R5 )))))
proof
defpred S18[ Ordinal ] means (ex R4 being Ordinal st (ex R5 being Ordinal st (R4 is  limit_ordinal & R5 is  natural & $1 = ( R4 +^ R5 ))));
L975: (for R1 being Ordinal holds ((for R4 being Ordinal holds (R4 in R1 implies S18[ R4 ])) implies S18[ R1 ]))
proof
let R1 being Ordinal;
assume that
L976: (for R4 being Ordinal holds (R4 in R1 implies S18[ R4 ]));
L977: ((ex R4 being Ordinal st R1 = ( succ R4 )) implies S18[ R1 ])
proof
given R4 being Ordinal such that
L978: R1 = ( succ R4 );

consider R5 being Ordinal, R6 being Ordinal such that L979: R5 is  limit_ordinal and L980: R6 is  natural and L981: R4 = ( R5 +^ R6 ) by L976 , L978 , ORDINAL1:6;
take R5;
take D58 = ( succ R6 );
thus L982: R5 is  limit_ordinal by L979;
thus L983: D58 in ( omega ) by L980 , ORDINAL1:def 12;
thus L984: thesis by L978 , L981 , L671;
end;
L985: ((for R4 being Ordinal holds R1 <> ( succ R4 )) implies S18[ R1 ])
proof
assume L986: (for R6 being Ordinal holds R1 <> ( succ R6 ));
take D59 = R1;
take D60 = ( {} );
thus L987: D59 is  limit_ordinal by L986 , ORDINAL1:29;
thus L988: D60 in ( omega ) by ORDINAL1:def 11;
thus L989: thesis by L668;
end;
thus L990: thesis by L985 , L977;
end;
thus L991: (for R1 being Ordinal holds S18[ R1 ]) from ORDINAL1:sch 2(L975);
end;
registration
let C32 being set;
let C33 being Ordinal;
cluster ( C32 --> C33 ) ->  Ordinal-yielding;
coherence
proof
L992: (( rng ( C32 --> C33 ) ) c= { C33 } & { C33 } c= ( succ C33 )) by FUNCOP_1:13 , XBOOLE_1:7;
L993: ( rng ( C32 --> C33 ) ) c= ( succ C33 ) by L992 , XBOOLE_1:1;
thus L994: thesis by L993 , L182;
end;
end;
registration
let C34 being Ordinal;
let C35 being set;
cluster ( C34 --> C35 ) ->  T-Sequence-like;
coherence
proof
L996: ( dom ( C34 --> C35 ) ) = C34 by FUNCOP_1:13;
thus L997: thesis by L996 , ORDINAL1:def 7;
end;
end;
definition
let C36 , C37 being Ordinal;
pred C36 is_cofinal_with C37
means
(ex B15 being Ordinal-Sequence st (( dom B15 ) = C37 & ( rng B15 ) c= C36 & B15 is  increasing & C36 = ( sup B15 )))
;reflexivity
proof
let R1 being Ordinal;
L999: ( dom ( id R1 ) ) = R1 by RELAT_1:45;
reconsider D61 = ( id R1 ) as T-Sequence by L999 , ORDINAL1:def 7;
L1000: ( rng ( id R1 ) ) = R1 by RELAT_1:45;
reconsider D62 = D61 as Ordinal-Sequence by L1000 , L182;
take D62;
thus L1001: (( dom D62 ) = R1 & ( rng D62 ) c= R1) by RELAT_1:45;
thus L1002: D62 is  increasing
proof
let R4 being Ordinal;
let R5 being Ordinal;
assume that
L1003: R4 in R5
and
L1004: R5 in ( dom D62 );
L1005: ( D62 . R5 ) = R5 by L999 , L1004 , FUNCT_1:18;
thus L1006: thesis by L1005 , L999 , L1003 , L1004 , FUNCT_1:18 , ORDINAL1:10;
end;

thus L1007: thesis by L1000 , L132;
end;
end;
theorem
L1009: (for R20 being Ordinal-Sequence holds (for R21 being set holds (R21 in ( rng R20 ) implies R21 is Ordinal)))
proof
let R20 being Ordinal-Sequence;
let R21 being set;
assume L1010: R21 in ( rng R20 );
L1011: (ex R22 being set st (R22 in ( dom R20 ) & R21 = ( R20 . R22 ))) by L1010 , FUNCT_1:def 3;
thus L1012: thesis by L1011;
end;
theorem
L1013: (for R20 being Ordinal-Sequence holds ( rng R20 ) c= ( sup R20 ))
proof
let R20 being Ordinal-Sequence;
let R21 being set;
assume L1014: R21 in ( rng R20 );
L1015: R21 is Ordinal by L1014 , L1009;
thus L1016: thesis by L1015 , L1014 , L135;
end;
theorem
L1017: (for R1 being Ordinal holds (R1 is_cofinal_with ( {} ) implies R1 = ( {} )))
proof
let R1 being Ordinal;
given R20 being Ordinal-Sequence such that
L1018: ( dom R20 ) = ( {} )
and
L1019: ( rng R20 ) c= R1
and
L1020: R20 is  increasing
and
L1021: R1 = ( sup R20 );

thus L1022: R1 = ( sup ( {} ) ) by L1018 , L1021 , RELAT_1:42
.= ( {} ) by L132;
end;
scheme OmegaInd { F67() -> Nat , P2[set] } : P2[ F67() ]
provided
L1023: P2[ ( {} ) ]
and
L1024: (for B16 being Nat holds (P2[ B16 ] implies P2[ ( succ B16 ) ]))
proof
defpred S19[ Ordinal ] means ($1 is  natural implies P2[ $1 ]);
L1025:
now
let R1 being Ordinal;
assume L1026: S19[ R1 ];
L1027:
now
assume L1028: ( succ R1 ) is  natural;
L1029: ( succ R1 ) in ( omega ) by L1028 , ORDINAL1:def 12;
L1030: R1 in ( succ R1 ) by ORDINAL1:6;
L1031: R1 is (Element of ( omega )) by L1030 , L1029 , ORDINAL1:10;
thus L1032: S19[ ( succ R1 ) ] by L1031 , L1024 , L1026;
end;
thus L1033: S19[ ( succ R1 ) ] by L1027;
end;
L1034:
now
let R1 being Ordinal;
assume L1035: R1 <> ( {} );
L1036: ( {} ) c= R1;
L1037: ( {} ) c< R1 by L1036 , L1035 , XBOOLE_0:def 8;
L1038: ( {} ) in R1 by L1037 , ORDINAL1:11;
L1039: (not R1 in R1);
assume L1040: R1 is  limit_ordinal;
L1041: ( omega ) c= R1 by L1040 , L1038 , ORDINAL1:def 11;
L1042: (not R1 in ( omega )) by L1041 , L1039;
thus L1043: ((for R4 being Ordinal holds (R4 in R1 implies S19[ R4 ])) implies S19[ R1 ]) by L1042 , ORDINAL1:def 12;
end;
L1044: S19[ ( {} ) ] by L1023;
L1045: (for R1 being Ordinal holds S19[ R1 ]) from OrdinalInd(L1044 , L1025 , L1034);
thus L1046: thesis by L1045;
end;
registration
let C38 , C39 being Nat;
cluster ( C38 +^ C39 ) ->  natural;
coherence
proof
defpred S20[ Nat ] means ( C38 +^ $1 ) is  natural;
L1047:
now
let C40 being Nat;
assume L1048: S20[ C40 ];
reconsider D63 = ( C38 +^ C40 ) as Nat by L1048;
L1049: ( C38 +^ ( succ C40 ) ) = ( succ D63 ) by L671;
thus L1050: S20[ ( succ C40 ) ] by L1049;
end;
L1051: S20[ ( {} ) ] by L668;
thus L1052: S20[ C39 ] from OmegaInd(L1051 , L1047);
end;
end;
registration
let C41 , C42 being set;
let C43 , C44 being Nat;
cluster ( IFEQ (C41 , C42 , C43 , C44) ) ->  natural;
coherence
proof
per cases ;
suppose L1054: C41 = C42;

thus L1055: thesis by L1054 , FUNCOP_1:def 8;
end;
suppose L1056: C41 <> C42;

thus L1057: thesis by L1056 , FUNCOP_1:def 8;
end;
end;
end;
scheme LambdaRecEx { F68() -> set , F69(set , set) -> set } : (ex B17 being Function st (( dom B17 ) = ( omega ) & ( B17 . ( {} ) ) = F68() & (for B18 being Nat holds ( B17 . ( succ B18 ) ) = F69(B18 , ( B17 . B18 )))))
proof
deffunc H47(set , set) = ( {} );
consider C45 being T-Sequence such that L1060: ( dom C45 ) = ( omega ) and L1061: (( {} ) in ( omega ) implies ( C45 . ( {} ) ) = F68()) and L1062: (for B19 being Ordinal holds (( succ B19 ) in ( omega ) implies ( C45 . ( succ B19 ) ) = F69(B19 , ( C45 . B19 )))) and L1063: (for B20 being Ordinal holds ((B20 in ( omega ) & B20 <> ( {} ) & B20 is  limit_ordinal) implies ( C45 . B20 ) = H47(B20 , ( C45 | B20 )))) from TSExist1;
take C45;
thus L1064: ( dom C45 ) = ( omega ) by L1060;
L1065: ( {} ) in ( omega ) by ORDINAL1:def 12;
thus L1066: ( C45 . ( {} ) ) = F68() by L1065 , L1061;
let C46 being Nat;
L1067: ( succ C46 ) in ( omega ) by ORDINAL1:def 12;
thus L1068: thesis by L1067 , L1062;
end;
scheme RecUn { F70() -> set , F71 , F72() -> Function , P3[set , set , set] } : F71() = F72()
provided
L1069: ( dom F71() ) = ( omega )
and
L1070: ( F71() . ( {} ) ) = F70()
and
L1071: (for R23 being Nat holds P3[ R23 , ( F71() . R23 ) , ( F71() . ( succ R23 ) ) ])
and
L1072: ( dom F72() ) = ( omega )
and
L1073: ( F72() . ( {} ) ) = F70()
and
L1074: (for R23 being Nat holds P3[ R23 , ( F72() . R23 ) , ( F72() . ( succ R23 ) ) ])
and
L1075: (for R23 being Nat holds (for B21 , B22 , B23 being set holds ((P3[ R23 , B21 , B22 ] & P3[ R23 , B21 , B23 ]) implies B22 = B23)))
proof
defpred S21[ Nat ] means ( F71() . $1 ) = ( F72() . $1 );
L1076: (for R23 being Nat holds (S21[ R23 ] implies S21[ ( succ R23 ) ]))
proof
let R23 being Nat;
assume L1077: ( F71() . R23 ) = ( F72() . R23 );
L1078: P3[ R23 , ( F71() . R23 ) , ( F72() . ( succ R23 ) ) ] by L1077 , L1074;
L1079: P3[ R23 , ( F71() . R23 ) , ( F71() . ( succ R23 ) ) ] by L1071;
thus L1080: thesis by L1079 , L1075 , L1078;
end;
L1081: S21[ ( {} ) ] by L1070 , L1073;
L1082: (for R23 being Nat holds S21[ R23 ])
proof
let R23 being Nat;
thus L1083: thesis from OmegaInd(L1081 , L1076);
end;
L1084: (for R9 being set holds (R9 in ( omega ) implies ( F71() . R9 ) = ( F72() . R9 ))) by L1082;
thus L1085: thesis by L1084 , L1069 , L1072 , FUNCT_1:2;
end;
scheme LambdaRecUn { F73() -> set , F74(set , set) -> set , F75 , F76() -> Function } : F75() = F76()
provided
L1086: ( dom F75() ) = ( omega )
and
L1087: ( F75() . ( {} ) ) = F73()
and
L1088: (for R23 being Nat holds ( F75() . ( succ R23 ) ) = F74(R23 , ( F75() . R23 )))
and
L1089: ( dom F76() ) = ( omega )
and
L1090: ( F76() . ( {} ) ) = F73()
and
L1091: (for R23 being Nat holds ( F76() . ( succ R23 ) ) = F74(R23 , ( F76() . R23 )))
proof
defpred S22[ Nat , set , set ] means $3 = F74($1 , $2);
L1092: (for R23 being Nat holds S22[ R23 , ( F76() . R23 ) , ( F76() . ( succ R23 ) ) ]) by L1091;
L1093: (for B24 being Nat holds (for B25 , B26 , B27 being set holds ((S22[ B24 , B25 , B26 ] & S22[ B24 , B25 , B27 ]) implies B26 = B27)));
L1094: (for R23 being Nat holds S22[ R23 , ( F75() . R23 ) , ( F75() . ( succ R23 ) ) ]) by L1088;
thus L1095: F75() = F76() from RecUn(L1086 , L1087 , L1094 , L1089 , L1090 , L1092 , L1093);
end;
