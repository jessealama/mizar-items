:: The Ring of Polynomials
::  by Robert Milewski
::
:: Received April 17, 2000
:: Copyright (c) 2000-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, RLVECT_1, ALGSTR_0, XBOOLE_0, FINSEQ_1, STRUCT_0,
      SUBSET_1, RELAT_1, FUNCT_1, SUPINF_2, CARD_3, NAT_1, PARTFUN1, FINSEQ_5,
      ORDINAL4, ARYTM_3, XXREAL_0, FINSEQ_3, FINSEQ_2, PRE_POLY, TARSKI,
      CARD_1, ORDERS_1, RELAT_2, FINSET_1, ARYTM_1, FUNCT_2, POLYNOM1,
      ALGSEQ_1, FUNCOP_1, FUNCT_4, MESFUNC1, LATTICES, VECTSP_1, BINOP_1,
      CLASSES1, GROUP_1, ZFMISC_1, POLYNOM3;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, CARD_1, NUMBERS, XCMPLX_0,
      RELAT_1, RELAT_2, FUNCT_1, ORDERS_1, XXREAL_0, ORDINAL1, NAT_1, NAT_D,
      CLASSES1, RELSET_1, PARTFUN1, FINSET_1, FUNCT_2, FUNCOP_1, FINSEQ_1,
      PRE_POLY, FINSEQ_2, FINSEQ_5, BINOP_1, RVSUM_1, FUNCT_7, TREES_4,
      WSIERP_1, STRUCT_0, ALGSTR_0, MATRLIN, GROUP_1, RLVECT_1, VFUNCT_1,
      FVSUM_1, VECTSP_1, NORMSP_1, POLYNOM1, ALGSEQ_1, RECDEF_1;
 constructors BINOP_1, FINSEQOP, REALSET1, NAT_D, FINSEQ_5, WSIERP_1, ALGSEQ_1,
      TRIANG_1, POLYNOM1, RECDEF_1, BINARITH, CLASSES1, RELSET_1, FUNCT_7,
      MATRLIN, FVSUM_1, VFUNCT_1;
 registrations ORDINAL1, FUNCT_2, NUMBERS, XXREAL_0, XREAL_0, NAT_1, INT_1,
      MEMBERED, FINSEQ_1, FINSEQ_2, FINSEQ_5, STRUCT_0, VECTSP_1, VALUED_0,
      FINSET_1, RELSET_1, PRE_POLY, VFUNCT_1, CARD_1, FUNCT_1, FINSEQ_3;
 requirements NUMERALS, BOOLE, SUBSET, REAL, ARITHM;
 definitions TARSKI, XBOOLE_0, RELAT_1, RELAT_2, RLVECT_1, GROUP_1, VECTSP_1,
      ALGSEQ_1, FINSEQ_2, FUNCT_2, STRUCT_0, CARD_1, ALGSTR_0;
 theorems AXIOMS, TARSKI, ENUMSET1, RELSET_1, INT_1, NAT_1, CARD_1, RLVECT_1,
      VECTSP_1, ALGSEQ_1, RELAT_2, ORDERS_1, FUNCT_1, FUNCT_2, FUNCT_7,
      FUNCOP_1, FINSEQ_1, FINSEQ_2, FINSEQ_3, FINSEQ_4, FINSEQ_5, RFINSEQ,
      BINOP_1, CARD_3, RVSUM_1, FVSUM_1, MATRLIN, POLYNOM1, RELAT_1,
      XBOOLE_0, RLVECT_2, XCMPLX_1, PARTFUN1, GROUP_1, XREAL_1, XXREAL_0,
      ORDINAL1, BHSP_1, NORMSP_1, XREAL_0, NAT_D, PRE_POLY;
 schemes FUNCT_2, FINSEQ_1, FINSEQ_2, NAT_1, RELSET_1, SUBSET_1, BINOP_1,
      RECDEF_1;

begin
theorem
L1: (for B1 being  add-associative  right_zeroed  right_complementable non  empty addLoopStr holds (for B2 being (FinSequence of (the carrier of B1)) holds ((for B3 being (Element of ( NAT )) holds (B3 in ( dom B2 ) implies ( B2 . B3 ) = ( 0. B1 ))) implies ( Sum B2 ) = ( 0. B1 ))))
proof
let C1 being  add-associative  right_zeroed  right_complementable non  empty addLoopStr;
let C2 being (FinSequence of (the carrier of C1));
assume L2: (for B4 being (Element of ( NAT )) holds (B4 in ( dom C2 ) implies ( C2 . B4 ) = ( 0. C1 )));
L3:
now
let C3 being Nat;
assume L4: C3 in ( dom C2 );
thus L5: ( C2 /. C3 ) = ( C2 . C3 ) by L4 , PARTFUN1:def 6
.= ( 0. C1 ) by L2 , L4;
end;
thus L6: thesis by L3 , MATRLIN:11;
end;
theorem
L7: (for B5 being  Abelian  add-associative  right_zeroed non  empty addLoopStr holds (for B6 being (FinSequence of (the carrier of B5)) holds ( Sum B6 ) = ( Sum ( Rev B6 ) )))
proof
let C4 being  Abelian  add-associative  right_zeroed non  empty addLoopStr;
defpred S1[ (FinSequence of (the carrier of C4)) ] means ( Sum $1 ) = ( Sum ( Rev $1 ) );
L8: (for B7 being (FinSequence of (the carrier of C4)) holds (for B8 being (Element of C4) holds (S1[ B7 ] implies S1[ ( B7 ^ <* B8 *> ) ])))
proof
let C5 being (FinSequence of (the carrier of C4));
let C6 being (Element of C4);
assume L9: ( Sum C5 ) = ( Sum ( Rev C5 ) );
thus L10: ( Sum ( C5 ^ <* C6 *> ) ) = ( ( Sum C5 ) + ( Sum <* C6 *> ) ) by RLVECT_1:41
.= ( Sum ( <* C6 *> ^ ( Rev C5 ) ) ) by L9 , RLVECT_1:41
.= ( Sum ( Rev ( C5 ^ <* C6 *> ) ) ) by FINSEQ_5:63;
end;
L11: S1[ ( <*> (the carrier of C4) ) ];
thus L12: (for B9 being (FinSequence of (the carrier of C4)) holds S1[ B9 ]) from FINSEQ_2:sch 2(L11 , L8);
end;
theorem
L13: (for B10 being (FinSequence of ( REAL )) holds ( Sum B10 ) = ( Sum ( Rev B10 ) ))
proof
defpred S2[ (FinSequence of ( REAL )) ] means ( Sum $1 ) = ( Sum ( Rev $1 ) );
L14: (for B11 being (FinSequence of ( REAL )) holds (for B12 being (Element of ( REAL )) holds (S2[ B11 ] implies S2[ ( B11 ^ <* B12 *> ) ])))
proof
let C7 being (FinSequence of ( REAL ));
let C8 being (Element of ( REAL ));
assume L15: ( Sum C7 ) = ( Sum ( Rev C7 ) );
thus L16: ( Sum ( C7 ^ <* C8 *> ) ) = ( ( Sum C7 ) + ( Sum <* C8 *> ) ) by RVSUM_1:75
.= ( Sum ( <* C8 *> ^ ( Rev C7 ) ) ) by L15 , RVSUM_1:75
.= ( Sum ( Rev ( C7 ^ <* C8 *> ) ) ) by FINSEQ_5:63;
end;
L17: S2[ ( <*> ( REAL ) ) ];
thus L18: (for B13 being (FinSequence of ( REAL )) holds S2[ B13 ]) from FINSEQ_2:sch 2(L17 , L14);
end;
theorem
L19: (for B14 being (FinSequence of ( NAT )) holds (for B15 being (Element of ( NAT )) holds (B15 in ( dom B14 ) implies ( Sum B14 ) >= ( B14 . B15 ))))
proof
defpred S3[ (FinSequence of ( NAT )) ] means (for B16 being (Element of ( NAT )) holds (B16 in ( dom $1 ) implies ( Sum $1 ) >= ( $1 . B16 )));
L20: (for B17 being (FinSequence of ( NAT )) holds (for B18 being (Element of ( NAT )) holds (S3[ B17 ] implies S3[ ( B17 ^ <* B18 *> ) ])))
proof
let C9 being (FinSequence of (( NAT ) qua set));
let C10 being (Element of ( NAT ));
assume L21: (for B19 being (Element of ( NAT )) holds (B19 in ( dom C9 ) implies ( Sum C9 ) >= ( C9 . B19 )));
let C11 being (Element of ( NAT ));
L22: ( ( C9 . C11 ) + C10 ) >= ( C9 . C11 ) by NAT_1:11;
L23: ( len ( C9 ^ <* C10 *> ) ) = ( ( len C9 ) + 1 ) by FINSEQ_2:16;
L24: ( dom ( C9 ^ <* C10 *> ) ) = ( Seg ( ( len C9 ) + 1 ) ) by L23 , FINSEQ_1:def 3
.= ( ( Seg ( len C9 ) ) \/ { ( ( len C9 ) + 1 ) } ) by FINSEQ_1:9
.= ( ( dom C9 ) \/ { ( ( len C9 ) + 1 ) } ) by FINSEQ_1:def 3;
assume L25: C11 in ( dom ( C9 ^ <* C10 *> ) );
per cases  by L25 , L24 , XBOOLE_0:def 3;
suppose L26: C11 in ( dom C9 );

L27: ( Sum C9 ) >= ( C9 . C11 ) by L26 , L21;
L28: ( ( Sum C9 ) + C10 ) >= ( ( C9 . C11 ) + C10 ) by L27 , XREAL_1:6;
L29: ( Sum ( C9 ^ <* C10 *> ) ) >= ( ( C9 . C11 ) + C10 ) by L28 , RVSUM_1:74;
L30: ( Sum ( C9 ^ <* C10 *> ) ) >= ( C9 . C11 ) by L29 , L22 , XXREAL_0:2;
thus L31: thesis by L30 , L26 , FINSEQ_1:def 7;
end;
suppose L32: C11 in { ( ( len C9 ) + 1 ) };

L33: C11 = ( ( len C9 ) + 1 ) by L32 , TARSKI:def 1;
L34: ( ( C9 ^ <* C10 *> ) . C11 ) = C10 by L33 , FINSEQ_1:42;
L35: ( ( Sum C9 ) + C10 ) >= ( ( C9 ^ <* C10 *> ) . C11 ) by L34 , NAT_1:11;
thus L36: thesis by L35 , RVSUM_1:74;
end;
end;
L38: S3[ (( <*> ( NAT ) ) qua (FinSequence of ( NAT ))) ];
thus L39: (for B20 being (FinSequence of ( NAT )) holds S3[ B20 ]) from FINSEQ_2:sch 2(L38 , L20);
end;
definition
let C12 being non  empty set;
let C13 being (Element of ( NAT ));
let C14 being (FinSequence of C12);
redefine func Del (C14 , C13) -> (FinSequence of C12);

coherence by FINSEQ_3:105;
end;
definition
let C15 being non  empty set;
let C16 , C17 being (Element of C15);
redefine func <*C16 , C17 *> -> (Element of ( 2 -tuples_on C15 ));

coherence by FINSEQ_2:101;
end;
definition
let C18 being non  empty set;
let C19 , C20 being (Element of ( NAT ));
let C21 being (Element of ( C19 -tuples_on C18 ));
let C22 being (Element of ( C20 -tuples_on C18 ));
redefine func C21 ^ C22 -> (Element of ( ( C19 + C20 ) -tuples_on C18 ));

coherence
proof
L42: ( C21 ^ C22 ) is (Tuple of ( C19 + C20 ) , C18);
thus L43: thesis by L42 , FINSEQ_2:131;
end;
end;
definition
let C23 being non  empty set;
let C24 , C25 being (Element of ( NAT ));
let C26 being (FinSequence of ( C24 -tuples_on C23 ));
let C27 being (FinSequence of ( C25 -tuples_on C23 ));
redefine func C26 ^^ C27 -> (Element of ( ( ( C24 + C25 ) -tuples_on C23 ) * ));

coherence
proof
L45: ( rng ( C26 ^^ C27 ) ) c= ( ( C24 + C25 ) -tuples_on C23 )
proof
let C28 being set;
assume L46: C28 in ( rng ( C26 ^^ C27 ) );
consider C29 being set such that L47: C29 in ( dom ( C26 ^^ C27 ) ) and L48: C28 = ( ( C26 ^^ C27 ) . C29 ) by L46 , FUNCT_1:def 3;
L49: C29 in ( ( dom C26 ) /\ ( dom C27 ) ) by L47 , PRE_POLY:def 4;
L50: C29 in ( dom C26 ) by L49 , XBOOLE_0:def 4;
L51: C29 in ( dom C27 ) by L49 , XBOOLE_0:def 4;
L52: C28 = ( ( C26 . C29 ) ^ ( C27 . C29 ) ) by L47 , L48 , PRE_POLY:def 4
.= ( ( C26 /. C29 ) ^ ( C27 . C29 ) ) by L50 , PARTFUN1:def 6
.= ( ( C26 /. C29 ) ^ ( C27 /. C29 ) ) by L51 , PARTFUN1:def 6;
thus L53: thesis by L52;
end;
L54: ( C26 ^^ C27 ) is (FinSequence of ( ( C24 + C25 ) -tuples_on C23 )) by L45 , FINSEQ_1:def 4;
thus L55: thesis by L54 , FINSEQ_1:def 11;
end;
end;
scheme SeqOfSeqLambdaD { F1() -> non  empty set , F2() -> (Element of ( NAT )) , F3((Element of ( NAT ))) -> (Element of ( NAT )) , F4(set , set) -> (Element of F1()) } : (ex B21 being (FinSequence of ( F1() * )) st (( len B21 ) = F2() & (for B22 being (Element of ( NAT )) holds (B22 in ( Seg F2() ) implies (( len ( B21 /. B22 ) ) = F3(B22) & (for B23 being (Element of ( NAT )) holds (B23 in ( dom ( B21 /. B22 ) ) implies ( ( B21 /. B22 ) . B23 ) = F4(B22 , B23))))))))
proof
defpred S4[ (Element of ( NAT )) , FinSequence ] means (( len $2 ) = F3($1) & (for B24 being (Element of ( NAT )) holds (B24 in ( dom $2 ) implies ( $2 . B24 ) = F4($1 , B24))));
L57: (for B25 being (Element of ( NAT )) holds (B25 in ( Seg F2() ) implies (ex B26 being (Element of ( F1() * )) st S4[ B25 , B26 ])))
proof
let C30 being (Element of ( NAT ));
assume L58: C30 in ( Seg F2() );
deffunc H1(Nat) = F4(C30 , $1);
consider C31 being (FinSequence of F1()) such that L59: ( len C31 ) = F3(C30) and L60: (for B27 being Nat holds (B27 in ( dom C31 ) implies ( C31 . B27 ) = H1(B27))) from FINSEQ_2:sch 1;
reconsider D1 = C31 as (Element of ( F1() * )) by FINSEQ_1:def 11;
take D1;
thus L61: ( len D1 ) = F3(C30) by L59;
let C32 being (Element of ( NAT ));
assume L62: C32 in ( dom D1 );
thus L63: thesis by L62 , L60;
end;
consider C33 being (FinSequence of ( F1() * )) such that L64: ( dom C33 ) = ( Seg F2() ) and L65: (for B28 being (Element of ( NAT )) holds (B28 in ( Seg F2() ) implies S4[ B28 , ( C33 /. B28 ) ])) from RECDEF_1:sch 17(L57);
take C33;
thus L66: ( len C33 ) = F2() by L64 , FINSEQ_1:def 3;
let C34 being (Element of ( NAT ));
assume L67: C34 in ( Seg F2() );
thus L68: thesis by L67 , L65;
end;
begin
definition
let C35 being (Element of ( NAT ));
let C36 , C37 being (Element of ( C35 -tuples_on ( NAT ) ));
pred C36 < C37
means
:L69: (ex B29 being (Element of ( NAT )) st (B29 in ( Seg C35 ) & ( C36 . B29 ) < ( C37 . B29 ) & (for B30 being (Element of ( NAT )) holds ((1 <= B30 & B30 < B29) implies ( C36 . B30 ) = ( C37 . B30 )))))
;asymmetry
proof
let C38 , C39 being (Element of ( C35 -tuples_on ( NAT ) ));
given C40 being (Element of ( NAT )) such that
L70: C40 in ( Seg C35 )
and
L71: ( C38 . C40 ) < ( C39 . C40 )
and
L72: (for B31 being (Element of ( NAT )) holds ((1 <= B31 & B31 < C40) implies ( C38 . B31 ) = ( C39 . B31 )));

L73: 1 <= C40 by L70 , FINSEQ_1:1;
given C41 being (Element of ( NAT )) such that
L74: C41 in ( Seg C35 )
and
L75: ( C39 . C41 ) < ( C38 . C41 )
and
L76: (for B32 being (Element of ( NAT )) holds ((1 <= B32 & B32 < C41) implies ( C39 . B32 ) = ( C38 . B32 )));

L77: 1 <= C41 by L74 , FINSEQ_1:1;
per cases  by XXREAL_0:1;
suppose L78: C40 < C41;

thus L79: contradiction by L78 , L71 , L76 , L73;
end;
suppose L80: C41 < C40;

thus L81: contradiction by L80 , L72 , L75 , L77;
end;
suppose L82: C40 = C41;

thus L83: contradiction by L82 , L71 , L75;
end;
end;
end;
notation
let C42 being (Element of ( NAT ));
let C43 , C44 being (Element of ( C42 -tuples_on ( NAT ) ));
synonym C44 > C43 for C43 < C44;
end;
definition
let C45 being (Element of ( NAT ));
let C46 , C47 being (Element of ( C45 -tuples_on ( NAT ) ));
pred C46 <= C47
means
:L87: (C46 < C47 or C46 = C47)
;reflexivity
;
end;
notation
let C48 being (Element of ( NAT ));
let C49 , C50 being (Element of ( C48 -tuples_on ( NAT ) ));
synonym C50 >= C49 for C49 <= C50;
end;
theorem
L90: (for B33 being (Element of ( NAT )) holds (for B34 , B35 , B36 being (Element of ( B33 -tuples_on ( NAT ) )) holds (((B34 < B35 & B35 < B36) implies B34 < B36) & (((B34 < B35 & B35 <= B36) or (B34 <= B35 & B35 < B36) or (B34 <= B35 & B35 <= B36)) implies B34 <= B36))))
proof
let C51 being (Element of ( NAT ));
let C52 , C53 , C54 being (Element of ( C51 -tuples_on ( NAT ) ));
thus L91: ((C52 < C53 & C53 < C54) implies C52 < C54)
proof
assume that
L92: C52 < C53
and
L93: C53 < C54;
consider C55 being (Element of ( NAT )) such that L94: C55 in ( Seg C51 ) and L95: ( C52 . C55 ) < ( C53 . C55 ) and L96: (for B37 being (Element of ( NAT )) holds ((1 <= B37 & B37 < C55) implies ( C52 . B37 ) = ( C53 . B37 ))) by L92 , L69;
consider C56 being (Element of ( NAT )) such that L97: C56 in ( Seg C51 ) and L98: ( C53 . C56 ) < ( C54 . C56 ) and L99: (for B38 being (Element of ( NAT )) holds ((1 <= B38 & B38 < C56) implies ( C53 . B38 ) = ( C54 . B38 ))) by L93 , L69;
reconsider D2 = ( min (C55 , C56) ) as (Element of ( NAT ));
take D2;
thus L100: D2 in ( Seg C51 ) by L94 , L97 , XXREAL_0:15;
L101:
now
per cases  by XXREAL_0:1;
suppose L102: C55 < C56;

L103: C55 >= 1 by L94 , FINSEQ_1:1;
L104: D2 = C55 by L102 , XXREAL_0:def 9;
thus L105: ( C52 . D2 ) < ( C54 . D2 ) by L104 , L95 , L99 , L102 , L103;
end;
suppose L106: C55 > C56;

L107: C56 >= 1 by L97 , FINSEQ_1:1;
L108: D2 = C56 by L106 , XXREAL_0:def 9;
thus L109: ( C52 . D2 ) < ( C54 . D2 ) by L108 , L96 , L98 , L106 , L107;
end;
suppose L110: C55 = C56;

thus L111: ( C52 . D2 ) < ( C54 . D2 ) by L110 , L95 , L98 , XXREAL_0:2;
end;
end;
thus L113: ( C52 . D2 ) < ( C54 . D2 ) by L101;
let C57 being (Element of ( NAT ));
assume that
L114: 1 <= C57
and
L115: C57 < D2;
L116: D2 <= C56 by XXREAL_0:17;
L117: C57 < C56 by L116 , L115 , XXREAL_0:2;
L118: D2 <= C55 by XXREAL_0:17;
L119: C57 < C55 by L118 , L115 , XXREAL_0:2;
thus L120: ( C52 . C57 ) = ( C53 . C57 ) by L119 , L96 , L114
.= ( C54 . C57 ) by L99 , L114 , L117;
end;

assume L121: ((C52 < C53 & C53 <= C54) or (C52 <= C53 & C53 < C54) or (C52 <= C53 & C53 <= C54));
per cases  by L121;
suppose L122: (C52 < C53 & C53 <= C54);

L123: (C53 < C54 or C53 = C54) by L122 , L87;
thus L124: thesis by L123 , L91 , L122 , L87;
end;
suppose L125: (C52 <= C53 & C53 < C54);

L126: (C52 < C53 or C52 = C53) by L125 , L87;
thus L127: thesis by L126 , L91 , L125 , L87;
end;
suppose L128: (C52 <= C53 & C53 <= C54);

thus L129: thesis by L128 , L91 , L87;
end;
end;
theorem
L131: (for B39 being (Element of ( NAT )) holds (for B40 , B41 being (Element of ( B39 -tuples_on ( NAT ) )) holds (B40 <> B41 implies (ex B42 being (Element of ( NAT )) st (B42 in ( Seg B39 ) & ( B40 . B42 ) <> ( B41 . B42 ) & (for B43 being (Element of ( NAT )) holds ((1 <= B43 & B43 < B42) implies ( B40 . B43 ) = ( B41 . B43 ))))))))
proof
defpred S5[ Nat ] means (for B44 , B45 being (Element of ( $1 -tuples_on ( NAT ) )) holds (B44 <> B45 implies (ex B46 being (Element of ( NAT )) st (B46 in ( Seg $1 ) & ( B44 . B46 ) <> ( B45 . B46 ) & (for B47 being (Element of ( NAT )) holds ((1 <= B47 & B47 < B46) implies ( B44 . B47 ) = ( B45 . B47 )))))));
L132: (for B48 being (Element of ( NAT )) holds (S5[ B48 ] implies S5[ ( B48 + 1 ) ]))
proof
let C58 being (Element of ( NAT ));
assume L133: (for B49 , B50 being (Element of ( C58 -tuples_on ( NAT ) )) holds (B49 <> B50 implies (ex B51 being (Element of ( NAT )) st (B51 in ( Seg C58 ) & ( B49 . B51 ) <> ( B50 . B51 ) & (for B52 being (Element of ( NAT )) holds ((1 <= B52 & B52 < B51) implies ( B49 . B52 ) = ( B50 . B52 )))))));
let C59 , C60 being (Element of ( ( C58 + 1 ) -tuples_on ( NAT ) ));
consider C61 being (Element of ( C58 -tuples_on ( NAT ) )), C62 being (Element of ( NAT )) such that L134: C59 = ( C61 ^ <* C62 *> ) by FINSEQ_2:117;
assume L135: C59 <> C60;
consider C63 being (Element of ( C58 -tuples_on ( NAT ) )), C64 being (Element of ( NAT )) such that L136: C60 = ( C63 ^ <* C64 *> ) by FINSEQ_2:117;
L137: ( len C61 ) = C58 by CARD_1:def 7;
L138: ( len C63 ) = C58 by CARD_1:def 7;
per cases ;
suppose L139: C61 <> C63;

consider C65 being (Element of ( NAT )) such that L140: C65 in ( Seg C58 ) and L141: ( C61 . C65 ) <> ( C63 . C65 ) and L142: (for B53 being (Element of ( NAT )) holds ((1 <= B53 & B53 < C65) implies ( C61 . B53 ) = ( C63 . B53 ))) by L139 , L133;
take C65;
thus L143: C65 in ( Seg ( C58 + 1 ) ) by L140 , FINSEQ_2:8;
L144: C65 in ( dom C61 ) by L137 , L140 , FINSEQ_1:def 3;
L145: ( C59 . C65 ) = ( C61 . C65 ) by L144 , L134 , FINSEQ_1:def 7;
L146: C65 in ( dom C63 ) by L138 , L140 , FINSEQ_1:def 3;
thus L147: ( C59 . C65 ) <> ( C60 . C65 ) by L146 , L136 , L141 , L145 , FINSEQ_1:def 7;
let C66 being (Element of ( NAT ));
assume that
L148: 1 <= C66
and
L149: C66 < C65;
L150: C65 <= C58 by L140 , FINSEQ_1:1;
L151: C66 <= C58 by L150 , L149 , XXREAL_0:2;
L152: C66 in ( dom C61 ) by L151 , L137 , L148 , FINSEQ_3:25;
L153: C66 in ( dom C63 ) by L138 , L148 , L151 , FINSEQ_3:25;
L154: ( C61 . C66 ) = ( C63 . C66 ) by L142 , L148 , L149;
thus L155: ( C59 . C66 ) = ( C63 . C66 ) by L154 , L134 , L152 , FINSEQ_1:def 7
.= ( C60 . C66 ) by L136 , L153 , FINSEQ_1:def 7;
end;
suppose L156: C61 = C63;

take D3 = ( C58 + 1 );
thus L157: D3 in ( Seg ( C58 + 1 ) ) by FINSEQ_1:4;
L158: ( C59 . D3 ) = C62 by L134 , FINSEQ_2:116;
thus L159: ( C59 . D3 ) <> ( C60 . D3 ) by L158 , L134 , L136 , L135 , L156 , FINSEQ_2:116;
let C67 being (Element of ( NAT ));
assume that
L160: 1 <= C67
and
L161: C67 < D3;
L162: C67 <= C58 by L161 , NAT_1:13;
L163: C67 in ( dom C63 ) by L162 , L138 , L160 , FINSEQ_3:25;
L164: C67 in ( dom C61 ) by L137 , L160 , L162 , FINSEQ_3:25;
thus L165: ( C59 . C67 ) = ( C63 . C67 ) by L164 , L134 , L156 , FINSEQ_1:def 7
.= ( C60 . C67 ) by L136 , L163 , FINSEQ_1:def 7;
end;
end;
L167: S5[ ( 0 ) ];
thus L168: (for B54 being (Element of ( NAT )) holds S5[ B54 ]) from NAT_1:sch 1(L167 , L132);
end;
theorem
L169: (for B55 being (Element of ( NAT )) holds (for B56 , B57 being (Element of ( B55 -tuples_on ( NAT ) )) holds (B56 <= B57 or B56 > B57)))
proof
let C68 being (Element of ( NAT ));
let C69 , C70 being (Element of ( C68 -tuples_on ( NAT ) ));
assume L170: (not C69 <= C70);
consider C71 being (Element of ( NAT )) such that L171: C71 in ( Seg C68 ) and L172: ( C69 . C71 ) <> ( C70 . C71 ) and L173: (for B58 being (Element of ( NAT )) holds ((1 <= B58 & B58 < C71) implies ( C69 . B58 ) = ( C70 . B58 ))) by L170 , L131;
take C71;
thus L174: C71 in ( Seg C68 ) by L171;
L175: (not C69 < C70) by L170 , L87;
L176: ( C69 . C71 ) >= ( C70 . C71 ) by L175 , L171 , L173 , L69;
thus L177: ( C70 . C71 ) < ( C69 . C71 ) by L176 , L172 , XXREAL_0:1;
thus L178: thesis by L173;
end;
definition
let C72 being (Element of ( NAT ));
func TuplesOrder C72 -> (Order of ( C72 -tuples_on ( NAT ) )) means 
:L179: (for B59 , B60 being (Element of ( C72 -tuples_on ( NAT ) )) holds ([ B59 , B60 ] in it iff B59 <= B60));
existence
proof
defpred S6[ (Element of ( C72 -tuples_on ( NAT ) )) , (Element of ( C72 -tuples_on ( NAT ) )) ] means $1 <= $2;
consider C73 being (Relation of ( C72 -tuples_on ( NAT ) ) , ( C72 -tuples_on ( NAT ) )) such that L180: (for B61 , B62 being (Element of ( C72 -tuples_on ( NAT ) )) holds ([ B61 , B62 ] in C73 iff S6[ B61 , B62 ])) from RELSET_1:sch 2;
L181: C73 is_transitive_in ( C72 -tuples_on ( NAT ) )
proof
let C74 , C75 , C76 being set;
assume that
L182: (C74 in ( C72 -tuples_on ( NAT ) ) & C75 in ( C72 -tuples_on ( NAT ) ) & C76 in ( C72 -tuples_on ( NAT ) ))
and
L183: ([ C74 , C75 ] in C73 & [ C75 , C76 ] in C73);
reconsider D4 = C74 , D5 = C75 , D6 = C76 as (Element of ( C72 -tuples_on ( NAT ) )) by L182;
L184: (D4 <= D5 & D5 <= D6) by L180 , L183;
L185: D4 <= D6 by L184 , L90;
thus L186: thesis by L185 , L180;
end;
L187: C73 is_reflexive_in ( C72 -tuples_on ( NAT ) )
proof
let C77 being set;
assume L188: C77 in ( C72 -tuples_on ( NAT ) );
reconsider D7 = C77 as (Element of ( C72 -tuples_on ( NAT ) )) by L188;
L189: D7 <= D7;
thus L190: thesis by L189 , L180;
end;
L191: (( dom C73 ) = ( C72 -tuples_on ( NAT ) ) & ( field C73 ) = ( C72 -tuples_on ( NAT ) )) by L187 , ORDERS_1:13;
L192: C73 is_antisymmetric_in ( C72 -tuples_on ( NAT ) )
proof
let C78 , C79 being set;
assume that
L193: (C78 in ( C72 -tuples_on ( NAT ) ) & C79 in ( C72 -tuples_on ( NAT ) ))
and
L194: [ C78 , C79 ] in C73
and
L195: [ C79 , C78 ] in C73;
reconsider D8 = C78 , D9 = C79 as (Element of ( C72 -tuples_on ( NAT ) )) by L193;
L196: D8 <= D9 by L180 , L194;
L197: (D8 < D9 or D8 = D9) by L196 , L87;
L198: D9 <= D8 by L180 , L195;
thus L199: thesis by L198 , L197 , L87;
end;
reconsider D10 = C73 as (Order of ( C72 -tuples_on ( NAT ) )) by L192 , L187 , L181 , L191 , PARTFUN1:def 2 , RELAT_2:def 9 , RELAT_2:def 12 , RELAT_2:def 16;
take D10;
thus L200: thesis by L180;
end;
uniqueness
proof
let C80 , C81 being (Order of ( C72 -tuples_on ( NAT ) ));
assume that
L201: (for B63 , B64 being (Element of ( C72 -tuples_on ( NAT ) )) holds ([ B63 , B64 ] in C80 iff B63 <= B64))
and
L202: (for B65 , B66 being (Element of ( C72 -tuples_on ( NAT ) )) holds ([ B65 , B66 ] in C81 iff B65 <= B66));
let C82 , C83 being set;
thus L203: ([ C82 , C83 ] in C80 implies [ C82 , C83 ] in C81)
proof
assume L204: [ C82 , C83 ] in C80;
consider C84 , C85 being set such that L205: [ C82 , C83 ] = [ C84 , C85 ] and L206: (C84 in ( C72 -tuples_on ( NAT ) ) & C85 in ( C72 -tuples_on ( NAT ) )) by L204 , RELSET_1:2;
reconsider D11 = C84 , D12 = C85 as (Element of ( C72 -tuples_on ( NAT ) )) by L206;
L207: D11 <= D12 by L201 , L204 , L205;
thus L208: thesis by L207 , L202 , L205;
end;

assume L209: [ C82 , C83 ] in C81;
consider C86 , C87 being set such that L210: [ C82 , C83 ] = [ C86 , C87 ] and L211: (C86 in ( C72 -tuples_on ( NAT ) ) & C87 in ( C72 -tuples_on ( NAT ) )) by L209 , RELSET_1:2;
reconsider D13 = C86 , D14 = C87 as (Element of ( C72 -tuples_on ( NAT ) )) by L211;
L212: D13 <= D14 by L202 , L209 , L210;
thus L213: thesis by L212 , L201 , L210;
end;
end;
registration
let C88 being (Element of ( NAT ));
cluster ( TuplesOrder C88 ) ->  being_linear-order;
coherence
proof
L215:
now
let C89 , C90 being set;
assume that
L216: (C89 in ( C88 -tuples_on ( NAT ) ) & C90 in ( C88 -tuples_on ( NAT ) ))
and
L217: C89 <> C90
and
L218: (not [ C89 , C90 ] in ( TuplesOrder C88 ));
reconsider D15 = C89 , D16 = C90 as (Element of ( C88 -tuples_on ( NAT ) )) by L216;
L219: (not D15 <= D16) by L218 , L179;
L220: D15 > D16 by L219 , L169;
L221: D16 <= D15 by L220 , L87;
thus L222: [ C90 , C89 ] in ( TuplesOrder C88 ) by L221 , L179;
end;
L223: (( field ( TuplesOrder C88 ) ) = ( C88 -tuples_on ( NAT ) ) & ( TuplesOrder C88 ) is_connected_in ( C88 -tuples_on ( NAT ) )) by L215 , ORDERS_1:15 , RELAT_2:def 6;
L224: ( TuplesOrder C88 ) is  connected by L223 , RELAT_2:def 14;
thus L225: thesis by L224 , ORDERS_1:def 5;
end;
end;
begin
definition
let C91 being non  empty (Element of ( NAT ));
let C92 being (Element of ( NAT ));
func Decomp (C92 , C91) -> (FinSequence of ( C91 -tuples_on ( NAT ) )) means 
:L227: (ex B67 being  finite (Subset of ( C91 -tuples_on ( NAT ) )) st (it = ( SgmX (( TuplesOrder C91 ) , B67) ) & (for B68 being (Element of ( C91 -tuples_on ( NAT ) )) holds (B68 in B67 iff ( Sum B68 ) = C92))));
existence
proof
reconsider D17 = ( C92 + 1 ) as non  empty set;
defpred S7[ (Element of ( C91 -tuples_on ( NAT ) )) ] means ( Sum $1 ) = C92;
consider C93 being (Subset of ( C91 -tuples_on ( NAT ) )) such that L228: (for B69 being (Element of ( C91 -tuples_on ( NAT ) )) holds (B69 in C93 iff S7[ B69 ])) from SUBSET_1:sch 3;
L229: C93 c= ( C91 -tuples_on ( C92 + 1 ) )
proof
let C94 being set;
assume L230: C94 in C93;
reconsider D18 = C94 as (Element of ( C91 -tuples_on ( NAT ) )) by L230;
L231: ( Sum D18 ) = C92 by L228 , L230;
L232: ( rng D18 ) c= ( C92 + 1 )
proof
let C95 being set;
assume that
L233: C95 in ( rng D18 )
and
L234: (not C95 in ( C92 + 1 ));
L235: ( rng D18 ) c= ( NAT ) by FINSEQ_1:def 4;
reconsider D19 = C95 as (Element of ( NAT )) by L235 , L233;
L236: (not C95 in { B70 where B70 is (Element of ( NAT )) : B70 < ( C92 + 1 ) }) by L234 , AXIOMS:4;
L237: D19 >= ( C92 + 1 ) by L236;
L238: (ex B71 being Nat st (B71 in ( dom D18 ) & ( D18 . B71 ) = D19)) by L233 , FINSEQ_2:10;
L239: ( Sum D18 ) >= D19 by L238 , L19;
thus L240: contradiction by L239 , L231 , L237 , NAT_1:13;
end;
L241: (( len D18 ) = C91 & D18 is (FinSequence of ( C92 + 1 ))) by L232 , CARD_1:def 7 , FINSEQ_1:def 4;
L242: D18 is (Element of ( C91 -tuples_on D17 )) by L241 , FINSEQ_2:92;
thus L243: thesis by L242;
end;
reconsider D20 = C93 as  finite (Subset of ( C91 -tuples_on ( NAT ) )) by L229;
take ( SgmX (( TuplesOrder C91 ) , D20) );
thus L244: thesis by L228;
end;
uniqueness
proof
let C96 , C97 being (FinSequence of ( C91 -tuples_on ( NAT ) ));
given C98 being  finite (Subset of ( C91 -tuples_on ( NAT ) )) such that
L245: C96 = ( SgmX (( TuplesOrder C91 ) , C98) )
and
L246: (for B72 being (Element of ( C91 -tuples_on ( NAT ) )) holds (B72 in C98 iff ( Sum B72 ) = C92));

given C99 being  finite (Subset of ( C91 -tuples_on ( NAT ) )) such that
L247: C97 = ( SgmX (( TuplesOrder C91 ) , C99) )
and
L248: (for B73 being (Element of ( C91 -tuples_on ( NAT ) )) holds (B73 in C99 iff ( Sum B73 ) = C92));

L249:
now
let C100 being set;
thus L250: (C100 in C98 implies C100 in C99)
proof
assume L251: C100 in C98;
reconsider D21 = C100 as (Element of ( C91 -tuples_on ( NAT ) )) by L251;
L252: ( Sum D21 ) = C92 by L246 , L251;
thus L253: thesis by L252 , L248;
end;

assume L254: C100 in C99;
reconsider D22 = C100 as (Element of ( C91 -tuples_on ( NAT ) )) by L254;
L255: ( Sum D22 ) = C92 by L248 , L254;
thus L256: C100 in C98 by L255 , L246;
end;
thus L257: thesis by L249 , L245 , L247 , TARSKI:1;
end;
end;
registration
let C101 being non  empty (Element of ( NAT ));
let C102 being (Element of ( NAT ));
cluster ( Decomp (C102 , C101) ) -> non  empty  one-to-one  FinSequence-yielding;
coherence
proof
reconsider D23 = ( ( C101 -' 1 ) |-> ( 0 ) ) as (FinSequence of ( NAT ));
L259: C101 >= 1 by NAT_1:14;
L260: ( ( C101 -' 1 ) + 1 ) = C101 by L259 , XREAL_1:235;
L261: ( ( ( C101 -' 1 ) |-> ( 0 ) ) ^ <* C102 *> ) is (Tuple of C101 , ( NAT )) by L260;
reconsider D24 = ( ( ( C101 -' 1 ) |-> ( 0 ) ) ^ <* C102 *> ) as (Element of ( C101 -tuples_on ( NAT ) )) by L261 , FINSEQ_2:131;
consider C103 being  finite (Subset of ( C101 -tuples_on ( NAT ) )) such that L262: ( Decomp (C102 , C101) ) = ( SgmX (( TuplesOrder C101 ) , C103) ) and L263: (for B74 being (Element of ( C101 -tuples_on ( NAT ) )) holds (B74 in C103 iff ( Sum B74 ) = C102)) by L227;
L264: ( Sum D24 ) = ( ( Sum D23 ) + C102 ) by RVSUM_1:74
.= ( (( 0 ) qua Nat) + C102 ) by RVSUM_1:81;
reconsider D25 = C103 as non  empty  finite (Subset of ( C101 -tuples_on ( NAT ) )) by L264 , L263;
L265: ( SgmX (( TuplesOrder C101 ) , D25) ) is non  empty  finite;
thus L266: thesis by L265 , L262;
end;
end;
theorem
L268: (for B75 being (Element of ( NAT )) holds ( len ( Decomp (B75 , 1) ) ) = 1)
proof
let C104 being (Element of ( NAT ));
consider C105 being  finite (Subset of ( 1 -tuples_on ( NAT ) )) such that L269: ( Decomp (C104 , 1) ) = ( SgmX (( TuplesOrder 1 ) , C105) ) and L270: (for B76 being (Element of ( 1 -tuples_on ( NAT ) )) holds (B76 in C105 iff ( Sum B76 ) = C104)) by L227;
L271: C105 = { <* C104 *> }
proof
thus L272: C105 c= { <* C104 *> }
proof
let C106 being set;
assume L273: C106 in C105;
reconsider D26 = C106 as (Element of ( 1 -tuples_on ( NAT ) )) by L273;
L274: ( Sum D26 ) = C104 by L270 , L273;
consider C107 being (Element of ( NAT )) such that L275: D26 = <* C107 *> by FINSEQ_2:97;
L276: ( Sum D26 ) = C107 by L275 , RVSUM_1:73;
thus L277: thesis by L276 , L274 , L275 , TARSKI:def 1;
end;

let C108 being set;
assume L278: C108 in { <* C104 *> };
L279: C108 = <* C104 *> by L278 , TARSKI:def 1;
L280: <* C104 *> is (Element of ( 1 -tuples_on ( NAT ) )) by FINSEQ_2:131;
L281: ( Sum <* C104 *> ) = C104 by RVSUM_1:73;
thus L282: C108 in C105 by L281 , L270 , L279 , L280;
end;
L283: ( field ( TuplesOrder 1 ) ) = ( 1 -tuples_on ( NAT ) ) by ORDERS_1:15;
L284: ( TuplesOrder 1 ) linearly_orders ( 1 -tuples_on ( NAT ) ) by L283 , ORDERS_1:37;
thus L285: ( len ( Decomp (C104 , 1) ) ) = ( card C105 ) by L284 , L269 , ORDERS_1:38 , PRE_POLY:11
.= 1 by L271 , CARD_1:30;
end;
theorem
L286: (for B77 being (Element of ( NAT )) holds ( len ( Decomp (B77 , 2) ) ) = ( B77 + 1 ))
proof
let C109 being (Element of ( NAT ));
deffunc H2(Nat) = <* $1 , ( C109 -' $1 ) *>;
consider C110 being FinSequence such that L287: ( len C110 ) = C109 and L288: (for B78 being Nat holds (B78 in ( dom C110 ) implies ( C110 . B78 ) = H2(B78))) from FINSEQ_1:sch 2;
L289: ( dom C110 ) = ( Seg C109 ) by L287 , FINSEQ_1:def 3;
set D27 = ( C110 ^ <* <* ( 0 ) , C109 *> *> );
L290: ( dom C110 ) = ( Seg C109 ) by L287 , FINSEQ_1:def 3;
L291: ( len D27 ) = ( C109 + 1 ) by L287 , FINSEQ_2:16;
L292: ( dom D27 ) = ( Seg ( C109 + 1 ) ) by L291 , FINSEQ_1:def 3;
L293:
now
let C111 , C112 being set;
assume that
L294: C111 in ( dom D27 )
and
L295: C112 in ( dom D27 )
and
L296: ( D27 . C111 ) = ( D27 . C112 );
reconsider D28 = C111 , D29 = C112 as (Element of ( NAT )) by L294 , L295;
L297: C112 in ( ( Seg C109 ) \/ { ( C109 + 1 ) } ) by L292 , L295 , FINSEQ_1:9;
L298: (C112 in ( Seg C109 ) or C112 in { ( C109 + 1 ) }) by L297 , XBOOLE_0:def 3;
L299: C111 in ( ( Seg C109 ) \/ { ( C109 + 1 ) } ) by L292 , L294 , FINSEQ_1:9;
L300: (C111 in ( Seg C109 ) or C111 in { ( C109 + 1 ) }) by L299 , XBOOLE_0:def 3;
L301:
now
per cases  by L300 , L298 , TARSKI:def 1;
suppose L302: (C111 in ( Seg C109 ) & C112 in ( Seg C109 ));

L303: (( D27 . D28 ) = ( C110 . D28 ) & ( D27 . D29 ) = ( C110 . D29 )) by L302 , L289 , FINSEQ_1:def 7;
L304: (( C110 . D28 ) = <* D28 , ( C109 -' D28 ) *> & ( C110 . D29 ) = <* D29 , ( C109 -' D29 ) *>) by L288 , L290 , L302;
thus L305: C111 = C112 by L304 , L296 , L303 , FINSEQ_1:77;
end;
suppose L306: (C111 in ( Seg C109 ) & C112 = ( C109 + 1 ));

L307: ( D27 . D29 ) = <* ( 0 ) , C109 *> by L306 , L287 , FINSEQ_1:42;
L308: ( D27 . D28 ) = ( C110 . D28 ) by L289 , L306 , FINSEQ_1:def 7
.= <* D28 , ( C109 -' D28 ) *> by L288 , L290 , L306;
L309: D28 = ( 0 ) by L308 , L296 , L307 , FINSEQ_1:77;
thus L310: C111 = C112 by L309 , L306 , FINSEQ_1:1;
end;
suppose L311: (C111 = ( C109 + 1 ) & C112 in ( Seg C109 ));

L312: ( D27 . D28 ) = <* ( 0 ) , C109 *> by L311 , L287 , FINSEQ_1:42;
L313: ( D27 . D29 ) = ( C110 . D29 ) by L289 , L311 , FINSEQ_1:def 7
.= <* D29 , ( C109 -' D29 ) *> by L288 , L290 , L311;
L314: D29 = ( 0 ) by L313 , L296 , L312 , FINSEQ_1:77;
thus L315: C111 = C112 by L314 , L311 , FINSEQ_1:1;
end;
suppose L316: (C111 = ( C109 + 1 ) & C112 = ( C109 + 1 ));

thus L317: C111 = C112 by L316;
end;
end;
thus L319: C111 = C112 by L301;
end;
L320: D27 is  one-to-one by L293 , FUNCT_1:def 4;
L321: ( card ( rng D27 ) ) = ( C109 + 1 ) by L320 , L291 , FINSEQ_4:62;
L322: ( rng C110 ) c= ( rng D27 ) by FINSEQ_1:29;
L323: ( rng D27 ) = { <* B79 , ( C109 -' B79 ) *> where B79 is (Element of ( NAT )) : B79 <= C109 }
proof
thus L324: ( rng D27 ) c= { <* B80 , ( C109 -' B80 ) *> where B80 is (Element of ( NAT )) : B80 <= C109 }
proof
let C113 being set;
assume L325: C113 in ( rng D27 );
consider C114 being Nat such that L326: C114 in ( dom D27 ) and L327: ( D27 . C114 ) = C113 by L325 , FINSEQ_2:10;
reconsider D30 = C114 as (Element of ( NAT )) by ORDINAL1:def 12;
L328: D30 in ( ( Seg C109 ) \/ { ( C109 + 1 ) } ) by L292 , L326 , FINSEQ_1:9;
L329: (D30 in ( Seg C109 ) or D30 in { ( C109 + 1 ) }) by L328 , XBOOLE_0:def 3;
L330:
now
per cases  by L329 , TARSKI:def 1;
suppose L331: D30 in ( Seg C109 );

L332: ( D27 . D30 ) = ( C110 . D30 ) by L331 , L289 , FINSEQ_1:def 7;
L333: (( C110 . D30 ) = <* D30 , ( C109 -' D30 ) *> & D30 <= C109) by L288 , L290 , L331 , FINSEQ_1:1;
thus L334: thesis by L333 , L327 , L332;
end;
suppose L335: D30 = ( C109 + 1 );

L336: ( D27 . D30 ) = <* ( 0 ) , C109 *> by L335 , L287 , FINSEQ_1:42
.= <* ( 0 ) , ( C109 -' ( 0 ) ) *> by NAT_D:40;
thus L337: thesis by L336 , L327;
end;
end;
thus L339: thesis by L330;
end;

let C115 being set;
assume L340: C115 in { <* B81 , ( C109 -' B81 ) *> where B81 is (Element of ( NAT )) : B81 <= C109 };
consider C116 being (Element of ( NAT )) such that L341: C115 = <* C116 , ( C109 -' C116 ) *> and L342: C116 <= C109 by L340;
L343: (C116 = ( 0 ) or C116 >= ( (( 0 ) qua Nat) + 1 )) by NAT_1:13;
L344:
now
per cases  by L342 , L343 , FINSEQ_1:1;
suppose L345: C116 = ( 0 );

L346: ( C109 + 1 ) in ( dom D27 ) by L292 , FINSEQ_1:4;
L347: ( D27 . ( C109 + 1 ) ) = <* ( 0 ) , C109 *> by L287 , FINSEQ_1:42
.= C115 by L341 , L345 , NAT_D:40;
thus L348: thesis by L347 , L346 , FUNCT_1:def 3;
end;
suppose L349: C116 in ( Seg C109 );

L350: ( C110 . C116 ) = C115 by L349 , L288 , L290 , L341;
L351: C115 in ( rng C110 ) by L350 , L289 , L349 , FUNCT_1:def 3;
thus L352: thesis by L351 , L322;
end;
end;
thus L354: thesis by L344;
end;
consider C117 being  finite (Subset of ( 2 -tuples_on ( NAT ) )) such that L355: ( Decomp (C109 , 2) ) = ( SgmX (( TuplesOrder 2 ) , C117) ) and L356: (for B82 being (Element of ( 2 -tuples_on ( NAT ) )) holds (B82 in C117 iff ( Sum B82 ) = C109)) by L227;
L357: C117 = { <* B83 , ( C109 -' B83 ) *> where B83 is (Element of ( NAT )) : B83 <= C109 }
proof
thus L358: C117 c= { <* B84 , ( C109 -' B84 ) *> where B84 is (Element of ( NAT )) : B84 <= C109 }
proof
let C118 being set;
assume L359: C118 in C117;
reconsider D31 = C118 as (Element of ( 2 -tuples_on ( NAT ) )) by L359;
consider C119 , C120 being (Element of ( NAT )) such that L360: D31 = <* C119 , C120 *> by FINSEQ_2:100;
L361: ( C119 + C120 ) = ( Sum D31 ) by L360 , RVSUM_1:77
.= C109 by L356 , L359;
L362: ( C109 - C119 ) >= ( 0 ) by L361;
L363: C120 = ( C109 -' C119 ) by L362 , L361 , XREAL_0:def 2;
L364: C119 <= C109 by L361 , NAT_1:11;
thus L365: thesis by L364 , L360 , L363;
end;

let C121 being set;
assume L366: C121 in { <* B85 , ( C109 -' B85 ) *> where B85 is (Element of ( NAT )) : B85 <= C109 };
consider C122 being (Element of ( NAT )) such that L367: C121 = <* C122 , ( C109 -' C122 ) *> and L368: C122 <= C109 by L366;
L369: ( C109 - C122 ) >= ( 0 ) by L368 , XREAL_1:48;
L370: ( Sum <* C122 , ( C109 -' C122 ) *> ) = ( C122 + ( C109 -' C122 ) ) by RVSUM_1:77
.= ( C122 + ( C109 - C122 ) ) by L369 , XREAL_0:def 2
.= C109;
thus L371: thesis by L370 , L356 , L367;
end;
L372: ( field ( TuplesOrder 2 ) ) = ( 2 -tuples_on ( NAT ) ) by ORDERS_1:15;
L373: ( TuplesOrder 2 ) linearly_orders ( 2 -tuples_on ( NAT ) ) by L372 , ORDERS_1:37;
thus L374: thesis by L373 , L355 , L357 , L323 , L321 , ORDERS_1:38 , PRE_POLY:11;
end;
theorem
L375: (for B86 being (Element of ( NAT )) holds ( Decomp (B86 , 1) ) = <* <* B86 *> *>)
proof
let C123 being (Element of ( NAT ));
consider C124 being  finite (Subset of ( 1 -tuples_on ( NAT ) )) such that L376: ( Decomp (C123 , 1) ) = ( SgmX (( TuplesOrder 1 ) , C124) ) and L377: (for B87 being (Element of ( 1 -tuples_on ( NAT ) )) holds (B87 in C124 iff ( Sum B87 ) = C123)) by L227;
L378: C124 = { <* C123 *> }
proof
thus L379: C124 c= { <* C123 *> }
proof
let C125 being set;
assume L380: C125 in C124;
reconsider D32 = C125 as (Element of ( 1 -tuples_on ( NAT ) )) by L380;
L381: ( Sum D32 ) = C123 by L377 , L380;
consider C126 being (Element of ( NAT )) such that L382: D32 = <* C126 *> by FINSEQ_2:97;
L383: ( Sum D32 ) = C126 by L382 , RVSUM_1:73;
thus L384: thesis by L383 , L381 , L382 , TARSKI:def 1;
end;

let C127 being set;
assume L385: C127 in { <* C123 *> };
L386: C127 = <* C123 *> by L385 , TARSKI:def 1;
L387: <* C123 *> is (Element of ( 1 -tuples_on ( NAT ) )) by FINSEQ_2:131;
L388: ( Sum <* C123 *> ) = C123 by RVSUM_1:73;
thus L389: thesis by L388 , L377 , L386 , L387;
end;
L390: ( len ( Decomp (C123 , 1) ) ) = 1 by L268;
L391: ( dom ( Decomp (C123 , 1) ) ) = ( Seg 1 ) by L390 , FINSEQ_1:def 3
.= ( dom <* <* C123 *> *> ) by FINSEQ_1:38;
L392: ( field ( TuplesOrder 1 ) ) = ( 1 -tuples_on ( NAT ) ) by ORDERS_1:15;
L393: ( TuplesOrder 1 ) linearly_orders C124 by L392 , ORDERS_1:37 , ORDERS_1:38;
L394: (( rng <* <* C123 *> *> ) = { <* C123 *> } & ( rng ( Decomp (C123 , 1) ) ) = { <* C123 *> }) by L393 , L376 , L378 , FINSEQ_1:39 , PRE_POLY:def 2;
thus L395: thesis by L394 , L391 , FUNCT_1:7;
end;
theorem
L396: (for B88 , B89 , B90 , B91 , B92 being (Element of ( NAT )) holds ((( ( Decomp (B90 , 2) ) . B88 ) = <* B91 , ( B90 -' B91 ) *> & ( ( Decomp (B90 , 2) ) . B89 ) = <* B92 , ( B90 -' B92 ) *>) implies (B88 < B89 iff B91 < B92)))
proof
let C128 , C129 , C130 , C131 , C132 being (Element of ( NAT ));
assume that
L397: ( ( Decomp (C130 , 2) ) . C128 ) = <* C131 , ( C130 -' C131 ) *>
and
L398: ( ( Decomp (C130 , 2) ) . C129 ) = <* C132 , ( C130 -' C132 ) *>;
L399: C129 in ( dom ( Decomp (C130 , 2) ) ) by L398 , FUNCT_1:def 2;
L400: ( ( Decomp (C130 , 2) ) . C129 ) = ( ( Decomp (C130 , 2) ) /. C129 ) by L399 , PARTFUN1:def 6;
consider C133 being  finite (Subset of ( 2 -tuples_on ( NAT ) )) such that L401: ( Decomp (C130 , 2) ) = ( SgmX (( TuplesOrder 2 ) , C133) ) and L402: (for B93 being (Element of ( 2 -tuples_on ( NAT ) )) holds (B93 in C133 iff ( Sum B93 ) = C130)) by L227;
L403: ( field ( TuplesOrder 2 ) ) = ( 2 -tuples_on ( NAT ) ) by ORDERS_1:15;
L404: ( TuplesOrder 2 ) linearly_orders C133 by L403 , ORDERS_1:37 , ORDERS_1:38;
L405: C128 in ( dom ( Decomp (C130 , 2) ) ) by L397 , FUNCT_1:def 2;
L406: ( ( Decomp (C130 , 2) ) . C128 ) = ( ( Decomp (C130 , 2) ) /. C128 ) by L405 , PARTFUN1:def 6;
thus L407: (C128 < C129 implies C131 < C132)
proof
assume L408: C128 < C129;
L409: [ <* C131 , ( C130 -' C131 ) *> , <* C132 , ( C130 -' C132 ) *> ] in ( TuplesOrder 2 ) by L408 , L401 , L404 , L397 , L398 , L405 , L399 , L406 , L400 , PRE_POLY:def 2;
L410: <* C131 , ( C130 -' C131 ) *> <= <* C132 , ( C130 -' C132 ) *> by L409 , L179;
L411: <* C131 , ( C130 -' C131 ) *> <> <* C132 , ( C130 -' C132 ) *> by L401 , L404 , L397 , L398 , L405 , L399 , L406 , L400 , L408 , PRE_POLY:def 2;
L412: <* C131 , ( C130 -' C131 ) *> < <* C132 , ( C130 -' C132 ) *> by L411 , L410 , L87;
consider C134 being (Element of ( NAT )) such that L413: C134 in ( Seg 2 ) and L414: ( <* C131 , ( C130 -' C131 ) *> . C134 ) < ( <* C132 , ( C130 -' C132 ) *> . C134 ) and L415: (for B94 being (Element of ( NAT )) holds ((1 <= B94 & B94 < C134) implies ( <* C131 , ( C130 -' C131 ) *> . B94 ) = ( <* C132 , ( C130 -' C132 ) *> . B94 ))) by L412 , L69;
per cases  by L413 , FINSEQ_1:2 , TARSKI:def 2;
suppose L416: C134 = 1;

L417: ( <* C131 , ( C130 -' C131 ) *> . C134 ) = C131 by L416 , FINSEQ_1:44;
thus L418: thesis by L417 , L414 , L416 , FINSEQ_1:44;
end;
suppose L419: C134 = 2;

L420: ( <* C131 , ( C130 -' C131 ) *> . 1 ) = ( <* C132 , ( C130 -' C132 ) *> . 1 ) by L419 , L415;
L421: ( <* C131 , ( C130 -' C131 ) *> . 1 ) = C132 by L420 , FINSEQ_1:44;
L422: C131 = C132 by L421 , FINSEQ_1:44;
thus L423: thesis by L422 , L414;
end;
end;

assume L425: C131 < C132;
L426: (for B95 being (Element of ( NAT )) holds ((1 <= B95 & B95 < 1) implies ( <* C131 , ( C130 -' C131 ) *> . B95 ) = ( <* C132 , ( C130 -' C132 ) *> . B95 )));
L427: ( <* C131 , ( C130 -' C131 ) *> . 1 ) = C131 by FINSEQ_1:44;
L428: (1 in ( Seg 2 ) & ( <* C132 , ( C130 -' C132 ) *> . 1 ) = C132) by FINSEQ_1:1 , FINSEQ_1:44;
L429: <* C131 , ( C130 -' C131 ) *> < <* C132 , ( C130 -' C132 ) *> by L428 , L425 , L427 , L426 , L69;
assume L430: C128 >= C129;
per cases  by L430 , XXREAL_0:1;
suppose L431: C128 = C129;

thus L432: contradiction by L431 , L397 , L398 , L425 , L427 , FINSEQ_1:44;
end;
suppose L433: C129 < C128;

L434: [ <* C132 , ( C130 -' C132 ) *> , <* C131 , ( C130 -' C131 ) *> ] in ( TuplesOrder 2 ) by L433 , L401 , L404 , L397 , L398 , L405 , L399 , L406 , L400 , PRE_POLY:def 2;
L435: <* C132 , ( C130 -' C132 ) *> <= <* C131 , ( C130 -' C131 ) *> by L434 , L179;
L436: <* C132 , ( C130 -' C132 ) *> <> <* C131 , ( C130 -' C131 ) *> by L401 , L404 , L397 , L398 , L405 , L399 , L406 , L400 , L433 , PRE_POLY:def 2;
thus L437: contradiction by L436 , L429 , L435 , L87;
end;
end;
theorem
L439: (for B96 , B97 , B98 , B99 being (Element of ( NAT )) holds ((( ( Decomp (B97 , 2) ) . B96 ) = <* B98 , ( B97 -' B98 ) *> & ( ( Decomp (B97 , 2) ) . ( B96 + 1 ) ) = <* B99 , ( B97 -' B99 ) *>) implies B99 = ( B98 + 1 )))
proof
let C135 , C136 , C137 , C138 being (Element of ( NAT ));
assume that
L440: ( ( Decomp (C136 , 2) ) . C135 ) = <* C137 , ( C136 -' C137 ) *>
and
L441: ( ( Decomp (C136 , 2) ) . ( C135 + 1 ) ) = <* C138 , ( C136 -' C138 ) *>;
assume L442: C138 <> ( C137 + 1 );
L443: ( C135 + (( 0 ) qua Nat) ) < ( C135 + 1 ) by XREAL_1:6;
L444: C137 < C138 by L443 , L440 , L441 , L396;
L445: ( C137 + 1 ) <= C138 by L444 , NAT_1:13;
L446: ( C137 + 1 ) < C138 by L445 , L442 , XXREAL_0:1;
consider C139 being  finite (Subset of ( 2 -tuples_on ( NAT ) )) such that L447: ( Decomp (C136 , 2) ) = ( SgmX (( TuplesOrder 2 ) , C139) ) and L448: (for B100 being (Element of ( 2 -tuples_on ( NAT ) )) holds (B100 in C139 iff ( Sum B100 ) = C136)) by L227;
L449: ( field ( TuplesOrder 2 ) ) = ( 2 -tuples_on ( NAT ) ) by ORDERS_1:15;
L450: ( TuplesOrder 2 ) linearly_orders C139 by L449 , ORDERS_1:37 , ORDERS_1:38;
L451: ( rng ( Decomp (C136 , 2) ) ) = C139 by L450 , L447 , PRE_POLY:def 2;
L452: C137 < C136
proof
L453: ( Sum <* C138 , ( C136 -' C138 ) *> ) = ( C138 + ( C136 -' C138 ) ) by RVSUM_1:77;
L454: ( Sum <* C138 , ( C136 -' C138 ) *> ) >= C138 by L453 , NAT_1:11;
assume L455: C137 >= C136;
L456: C138 > C136 by L455 , L444 , XXREAL_0:2;
L457: (not ( ( Decomp (C136 , 2) ) . ( C135 + 1 ) ) in ( rng ( Decomp (C136 , 2) ) )) by L456 , L448 , L451 , L441 , L454;
L458: (not ( C135 + 1 ) in ( dom ( Decomp (C136 , 2) ) )) by L457 , FUNCT_1:def 3;
thus L459: contradiction by L458 , L441 , FUNCT_1:def 2;
end;
L460: ( C137 + 1 ) <= C136 by L452 , NAT_1:13;
L461: ( Sum <* ( C137 + 1 ) , ( C136 -' ( C137 + 1 ) ) *> ) = ( ( C137 + 1 ) + ( C136 -' ( C137 + 1 ) ) ) by RVSUM_1:77
.= C136 by L460 , XREAL_1:235;
L462: <* ( C137 + 1 ) , ( C136 -' ( C137 + 1 ) ) *> in ( rng ( Decomp (C136 , 2) ) ) by L461 , L448 , L451;
consider C140 being Nat such that L463: C140 in ( dom ( Decomp (C136 , 2) ) ) and L464: ( ( Decomp (C136 , 2) ) . C140 ) = <* ( C137 + 1 ) , ( C136 -' ( C137 + 1 ) ) *> by L462 , FINSEQ_2:10;
reconsider D33 = C140 as (Element of ( NAT )) by ORDINAL1:def 12;
L465: ( C137 + (( 0 ) qua Nat) ) < ( C137 + 1 ) by XREAL_1:6;
L466: C135 < D33 by L465 , L440 , L464 , L396;
L467: ( C135 + 1 ) <= D33 by L466 , NAT_1:13;
thus L468: contradiction by L467 , L441 , L446 , L464 , L396;
end;
theorem
L469: (for B101 being (Element of ( NAT )) holds ( ( Decomp (B101 , 2) ) . 1 ) = <* ( 0 ) , B101 *>)
proof
let C141 being (Element of ( NAT ));
consider C142 being  finite (Subset of ( 2 -tuples_on ( NAT ) )) such that L470: ( Decomp (C141 , 2) ) = ( SgmX (( TuplesOrder 2 ) , C142) ) and L471: (for B102 being (Element of ( 2 -tuples_on ( NAT ) )) holds (B102 in C142 iff ( Sum B102 ) = C141)) by L227;
L472:
now
let C143 being (Element of ( 2 -tuples_on ( NAT ) ));
consider C144 , C145 being (Element of ( NAT )) such that L473: C143 = <* C144 , C145 *> by FINSEQ_2:100;
assume L474: C143 in C142;
L475: ( Sum <* C144 , C145 *> ) = C141 by L474 , L471 , L473;
L476: ( C144 + C145 ) = C141 by L475 , RVSUM_1:77;
L477:
now
per cases ;
suppose L478: C144 = ( 0 );

thus L479: <* ( 0 ) , C141 *> <= <* C144 , C145 *> by L478 , L476;
end;
suppose L480: C144 > ( 0 );

L481: ( <* ( 0 ) , C141 *> . 1 ) < C144 by L480 , FINSEQ_1:44;
L482: ( <* ( 0 ) , C141 *> . 1 ) < ( <* C144 , C145 *> . 1 ) by L481 , FINSEQ_1:44;
L483: (1 in ( Seg 2 ) & (for B103 being (Element of ( NAT )) holds ((1 <= B103 & B103 < 1) implies ( <* ( 0 ) , C141 *> . B103 ) = ( <* C144 , C145 *> . B103 )))) by FINSEQ_1:1;
L484: <* ( 0 ) , C141 *> < <* C144 , C145 *> by L483 , L482 , L69;
thus L485: <* ( 0 ) , C141 *> <= <* C144 , C145 *> by L484 , L87;
end;
end;
thus L487: [ <* ( 0 ) , C141 *> , C143 ] in ( TuplesOrder 2 ) by L477 , L473 , L179;
end;
L488: 1 <= ( C141 + 1 ) by NAT_1:11;
L489: 1 in ( Seg ( C141 + 1 ) ) by L488 , FINSEQ_1:1;
L490: 1 in ( Seg ( len ( Decomp (C141 , 2) ) ) ) by L489 , L286;
L491: 1 in ( dom ( Decomp (C141 , 2) ) ) by L490 , FINSEQ_1:def 3;
L492: ( field ( TuplesOrder 2 ) ) = ( 2 -tuples_on ( NAT ) ) by ORDERS_1:15;
L493: ( TuplesOrder 2 ) linearly_orders C142 by L492 , ORDERS_1:37 , ORDERS_1:38;
L494: ( Sum <* ( 0 ) , C141 *> ) = ( (( 0 ) qua Nat) + C141 ) by RVSUM_1:77;
L495: <* ( 0 ) , C141 *> in C142 by L494 , L471;
L496: ( ( SgmX (( TuplesOrder 2 ) , C142) ) /. 1 ) = <* ( 0 ) , C141 *> by L495 , L493 , L472 , PRE_POLY:20;
thus L497: thesis by L496 , L470 , L491 , PARTFUN1:def 6;
end;
theorem
L498: (for B104 , B105 being (Element of ( NAT )) holds (B105 in ( Seg ( B104 + 1 ) ) implies ( ( Decomp (B104 , 2) ) . B105 ) = <* ( B105 -' 1 ) , ( ( B104 + 1 ) -' B105 ) *>))
proof
let C146 , C147 being (Element of ( NAT ));
defpred S8[ Nat ] means ($1 <= ( C146 + 1 ) implies ( ( Decomp (C146 , 2) ) . $1 ) = <* ( $1 -' 1 ) , ( ( C146 + 1 ) -' $1 ) *>);
assume L499: C147 in ( Seg ( C146 + 1 ) );
L500: (1 <= C147 & C147 <= ( C146 + 1 )) by L499 , FINSEQ_1:1;
consider C148 being  finite (Subset of ( 2 -tuples_on ( NAT ) )) such that L501: ( Decomp (C146 , 2) ) = ( SgmX (( TuplesOrder 2 ) , C148) ) and L502: (for B106 being (Element of ( 2 -tuples_on ( NAT ) )) holds (B106 in C148 iff ( Sum B106 ) = C146)) by L227;
L503: (for B107 being non  empty Nat holds (S8[ B107 ] implies S8[ ( B107 + 1 ) ]))
proof
L504: ( field ( TuplesOrder 2 ) ) = ( 2 -tuples_on ( NAT ) ) by ORDERS_1:15;
L505: ( TuplesOrder 2 ) linearly_orders C148 by L504 , ORDERS_1:37 , ORDERS_1:38;
let C149 being non  empty Nat;
assume that
L506: (C149 <= ( C146 + 1 ) implies ( ( Decomp (C146 , 2) ) . C149 ) = <* ( C149 -' 1 ) , ( ( C146 + 1 ) -' C149 ) *>)
and
L507: ( C149 + 1 ) <= ( C146 + 1 );
L508: C146 >= C149 by L507 , XREAL_1:6;
L509: ( C146 - C149 ) >= ( 0 ) by L508 , XREAL_1:48;
L510: ( ( C146 + 1 ) - ( C149 + 1 ) ) >= ( 0 ) by L507 , XREAL_1:48;
L511: ( ( C146 + 1 ) -' ( C149 + 1 ) ) = ( C146 - C149 ) by L510 , XREAL_0:def 2
.= ( C146 -' C149 ) by L509 , XREAL_0:def 2;
reconsider D34 = C149 as non  empty (Element of ( NAT )) by ORDINAL1:def 12;
L512: C149 >= 1 by NAT_1:14;
L513: ( C149 - 1 ) >= ( 1 - 1 ) by L512 , XREAL_1:9;
L514: ( C149 + 1 ) >= 1 by NAT_1:11;
L515: ( C149 + 1 ) in ( Seg ( C146 + 1 ) ) by L514 , L507 , FINSEQ_1:1;
L516: ( C149 + 1 ) in ( Seg ( len ( Decomp (C146 , 2) ) ) ) by L515 , L286;
L517: ( C149 + 1 ) in ( dom ( Decomp (C146 , 2) ) ) by L516 , FINSEQ_1:def 3;
L518: ( ( Decomp (C146 , 2) ) . ( C149 + 1 ) ) = ( ( Decomp (C146 , 2) ) /. ( C149 + 1 ) ) by L517 , PARTFUN1:def 6;
consider C150 , C151 being (Element of ( NAT )) such that L519: ( ( Decomp (C146 , 2) ) . ( C149 + 1 ) ) = <* C150 , C151 *> by L518 , FINSEQ_2:100;
L520: ( ( Decomp (C146 , 2) ) . ( C149 + 1 ) ) in ( rng ( Decomp (C146 , 2) ) ) by L517 , FUNCT_1:def 3;
L521: ( ( Decomp (C146 , 2) ) . ( C149 + 1 ) ) in C148 by L520 , L501 , L505 , PRE_POLY:def 2;
L522: ( Sum <* C150 , C151 *> ) = C146 by L521 , L502 , L519;
L523: ( C150 + C151 ) = C146 by L522 , RVSUM_1:77;
L524: ( C146 - C150 ) >= ( 0 ) by L523;
L525: C151 = ( C146 -' C150 ) by L524 , L523 , XREAL_0:def 2;
L526: C149 < ( C146 + 1 ) by L507 , NAT_1:13;
L527: ( ( C146 + 1 ) - C149 ) >= ( 0 ) by L526 , XREAL_1:48;
L528: ( C146 - ( C149 - 1 ) ) >= ( 0 ) by L527;
L529: ( C146 - ( C149 -' 1 ) ) >= ( 0 ) by L528 , L513 , XREAL_0:def 2;
L530: ( ( C146 + 1 ) -' C149 ) = ( C146 - ( C149 - 1 ) ) by L527 , XREAL_0:def 2
.= ( C146 - ( C149 -' 1 ) ) by L513 , XREAL_0:def 2
.= ( C146 -' ( C149 -' 1 ) ) by L529 , XREAL_0:def 2;
L531: C150 = ( ( D34 -' 1 ) + 1 ) by L530 , L506 , L507 , L519 , L525 , L439 , NAT_1:13
.= C149 by NAT_1:14 , XREAL_1:235;
thus L532: thesis by L531 , L519 , L525 , L511 , NAT_D:34;
end;
L533: S8[ 1 ]
proof
assume L534: 1 <= ( C146 + 1 );
thus L535: ( ( Decomp (C146 , 2) ) . 1 ) = <* ( 0 ) , C146 *> by L469
.= <* ( 1 -' 1 ) , C146 *> by XREAL_1:232
.= <* ( 1 -' 1 ) , ( ( C146 + 1 ) -' 1 ) *> by NAT_D:34;
end;
L536: (for B108 being non  empty Nat holds S8[ B108 ]) from NAT_1:sch 10(L533 , L503);
thus L537: thesis by L536 , L500;
end;
definition
let C152 being non  empty multMagma;
let C153 , C154 , C155 being (sequence of C152);
let C156 being (FinSequence of ( 3 -tuples_on ( NAT ) ));
func prodTuples (C153 , C154 , C155 , C156) -> (Element of ( (the carrier of C152) * )) means 
:L538: (( len it ) = ( len C156 ) & (for B109 being (Element of ( NAT )) holds (B109 in ( dom C156 ) implies ( it . B109 ) = ( ( ( C153 . ( ( C156 /. B109 ) /. 1 ) ) * ( C154 . ( ( C156 /. B109 ) /. 2 ) ) ) * ( C155 . ( ( C156 /. B109 ) /. 3 ) ) ))));
existence
proof
deffunc H3(Nat) = ( ( ( C153 . ( ( C156 /. $1 ) /. 1 ) ) * ( C154 . ( ( C156 /. $1 ) /. 2 ) ) ) * ( C155 . ( ( C156 /. $1 ) /. 3 ) ) );
consider C157 being (FinSequence of (the carrier of C152)) such that L539: ( len C157 ) = ( len C156 ) and L540: (for B110 being Nat holds (B110 in ( dom C157 ) implies ( C157 . B110 ) = H3(B110))) from FINSEQ_2:sch 1;
L541: ( dom C157 ) = ( Seg ( len C156 ) ) by L539 , FINSEQ_1:def 3;
reconsider D35 = C157 as (Element of ( (the carrier of C152) * )) by FINSEQ_1:def 11;
take D35;
thus L542: ( len D35 ) = ( len C156 ) by L539;
let C158 being (Element of ( NAT ));
assume L543: C158 in ( dom C156 );
L544: C158 in ( Seg ( len C156 ) ) by L543 , FINSEQ_1:def 3;
thus L545: thesis by L544 , L540 , L541;
end;
uniqueness
proof
let C159 , C160 being (Element of ( (the carrier of C152) * ));
assume that
L546: ( len C159 ) = ( len C156 )
and
L547: (for B111 being (Element of ( NAT )) holds (B111 in ( dom C156 ) implies ( C159 . B111 ) = ( ( ( C153 . ( ( C156 /. B111 ) /. 1 ) ) * ( C154 . ( ( C156 /. B111 ) /. 2 ) ) ) * ( C155 . ( ( C156 /. B111 ) /. 3 ) ) )))
and
L548: ( len C160 ) = ( len C156 )
and
L549: (for B112 being (Element of ( NAT )) holds (B112 in ( dom C156 ) implies ( C160 . B112 ) = ( ( ( C153 . ( ( C156 /. B112 ) /. 1 ) ) * ( C154 . ( ( C156 /. B112 ) /. 2 ) ) ) * ( C155 . ( ( C156 /. B112 ) /. 3 ) ) )));
L550: ( dom C159 ) = ( Seg ( len C156 ) ) by L546 , FINSEQ_1:def 3;
L551:
now
let C161 being Nat;
assume L552: C161 in ( dom C159 );
L553: C161 in ( dom C156 ) by L552 , L550 , FINSEQ_1:def 3;
thus L554: ( C159 . C161 ) = ( ( ( C153 . ( ( C156 /. C161 ) /. 1 ) ) * ( C154 . ( ( C156 /. C161 ) /. 2 ) ) ) * ( C155 . ( ( C156 /. C161 ) /. 3 ) ) ) by L553 , L547
.= ( C160 . C161 ) by L549 , L553;
end;
thus L555: thesis by L551 , L546 , L548 , FINSEQ_2:9;
end;
end;
theorem
L557: (for B113 being non  empty multMagma holds (for B114 , B115 , B116 being (sequence of B113) holds (for B117 being (FinSequence of ( 3 -tuples_on ( NAT ) )) holds (for B118 being (Permutation of ( dom B117 )) holds (for B119 being (FinSequence of ( 3 -tuples_on ( NAT ) )) holds (B119 = ( B117 * B118 ) implies ( prodTuples (B114 , B115 , B116 , B119) ) = ( ( prodTuples (B114 , B115 , B116 , B117) ) * B118 )))))))
proof
let C162 being non  empty multMagma;
let C163 , C164 , C165 being (sequence of C162);
let C166 being (FinSequence of ( 3 -tuples_on ( NAT ) ));
let C167 being (Permutation of ( dom C166 ));
let C168 being (FinSequence of ( 3 -tuples_on ( NAT ) ));
L558: ( rng C167 ) = ( dom C166 ) by FUNCT_2:def 3;
assume L559: C168 = ( C166 * C167 );
L560: ( dom C167 ) = ( dom C168 ) by L559 , L558 , RELAT_1:27;
L561:
now
let C169 being set;
assume L562: C169 in ( dom C168 );
reconsider D36 = C169 as (Element of ( NAT )) by L562;
L563: (( ( prodTuples (C163 , C164 , C165 , C168) ) . D36 ) = ( ( ( C163 . ( ( C168 /. D36 ) /. 1 ) ) * ( C164 . ( ( C168 /. D36 ) /. 2 ) ) ) * ( C165 . ( ( C168 /. D36 ) /. 3 ) ) ) & ( ( ( prodTuples (C163 , C164 , C165 , C166) ) * C167 ) . C169 ) = ( ( prodTuples (C163 , C164 , C165 , C166) ) . ( C167 . C169 ) )) by L560 , L562 , L538 , FUNCT_1:13;
reconsider D37 = ( C167 . D36 ) as (Element of ( NAT ));
L564: ( C167 . D36 ) in ( rng C167 ) by L560 , L562 , FUNCT_1:def 3;
L565: ( C168 /. D36 ) = ( C168 . D36 ) by L562 , PARTFUN1:def 6
.= ( C166 . ( C167 . D36 ) ) by L559 , L562 , FUNCT_1:12
.= ( C166 /. D37 ) by L558 , L564 , PARTFUN1:def 6;
thus L566: ( ( prodTuples (C163 , C164 , C165 , C168) ) . C169 ) = ( ( ( prodTuples (C163 , C164 , C165 , C166) ) * C167 ) . C169 ) by L565 , L558 , L564 , L563 , L538;
end;
L567: ( len ( prodTuples (C163 , C164 , C165 , C168) ) ) = ( len C168 ) by L538;
L568: ( dom ( prodTuples (C163 , C164 , C165 , C168) ) ) = ( Seg ( len C168 ) ) by L567 , FINSEQ_1:def 3;
L569: ( len ( prodTuples (C163 , C164 , C165 , C166) ) ) = ( len C166 ) by L538;
L570: ( rng C167 ) = ( dom ( prodTuples (C163 , C164 , C165 , C166) ) ) by L569 , L558 , FINSEQ_3:29;
L571: ( dom ( ( prodTuples (C163 , C164 , C165 , C166) ) * C167 ) ) = ( dom C168 ) by L570 , L560 , RELAT_1:27;
L572: ( dom C168 ) = ( Seg ( len C168 ) ) by FINSEQ_1:def 3;
thus L573: thesis by L572 , L568 , L571 , L561 , FUNCT_1:2;
end;
theorem
L574: (for B120 being set holds (for B121 being (FinSequence of ( B120 * )) holds (for B122 being (Element of ( NAT )) holds ( Card ( B121 | B122 ) ) = ( ( Card B121 ) | B122 ))))
proof
let C170 being set;
let C171 being (FinSequence of ( C170 * ));
let C172 being (Element of ( NAT ));
L575: ( C171 | C172 ) = ( C171 | ( Seg C172 ) ) by FINSEQ_1:def 15;
reconsider D38 = ( min (C172 , ( len C171 )) ) as (Element of ( NAT ));
L576: ( dom ( Card ( C171 | C172 ) ) ) = ( dom ( C171 | C172 ) ) by CARD_3:def 2;
L577: ( len ( Card ( C171 | C172 ) ) ) = ( len ( C171 | C172 ) ) by L576 , FINSEQ_3:29
.= ( min (C172 , ( len C171 )) ) by L575 , FINSEQ_2:21;
L578: ( dom ( Card ( C171 | C172 ) ) ) = ( Seg D38 ) by L577 , FINSEQ_1:def 3;
L579: ( dom ( Card C171 ) ) = ( dom C171 ) by CARD_3:def 2;
L580: ( ( Card C171 ) | C172 ) = ( ( Card C171 ) | ( Seg C172 ) ) by FINSEQ_1:def 15;
L581:
now
L582: ( len C171 ) = ( len ( Card C171 ) ) by L579 , FINSEQ_3:29;
let C173 being Nat;
assume L583: C173 in ( dom ( Card ( C171 | C172 ) ) );
per cases ;
suppose L584: C172 <= ( len C171 );

L585: 1 <= C173 by L578 , L583 , FINSEQ_1:1;
L586: D38 = C172 by L584 , XXREAL_0:def 9;
L587: C173 <= C172 by L586 , L578 , L583 , FINSEQ_1:1;
L588: C173 <= ( len C171 ) by L587 , L584 , XXREAL_0:2;
L589: C173 in ( dom C171 ) by L588 , L585 , FINSEQ_3:25;
L590: ( len ( ( Card C171 ) | C172 ) ) = C172 by L582 , L584 , FINSEQ_1:59;
L591: ( dom ( ( Card C171 ) | C172 ) ) = ( Seg C172 ) by L590 , FINSEQ_1:def 3;
reconsider D39 = ( Card C171 ) as (FinSequence of (( NAT ) qua set));
L592: ( Seg ( len ( C171 | C172 ) ) ) = ( dom ( C171 | C172 ) ) by FINSEQ_1:def 3;
L593: ( len ( C171 | C172 ) ) = C172 by L584 , FINSEQ_1:59;
thus L594: ( ( Card ( C171 | C172 ) ) . C173 ) = ( card ( ( C171 | C172 ) . C173 ) ) by L593 , L578 , L583 , L586 , L592 , CARD_3:def 2
.= ( card ( ( C171 | C172 ) /. C173 ) ) by L578 , L583 , L586 , L593 , L592 , PARTFUN1:def 6
.= ( card ( C171 /. C173 ) ) by L578 , L583 , L586 , L593 , L592 , FINSEQ_4:70
.= ( card ( C171 . C173 ) ) by L589 , PARTFUN1:def 6
.= ( ( Card C171 ) . C173 ) by L589 , CARD_3:def 2
.= ( D39 /. C173 ) by L579 , L589 , PARTFUN1:def 6
.= ( ( D39 | C172 ) /. C173 ) by L578 , L583 , L586 , L591 , FINSEQ_4:70
.= ( ( ( Card C171 ) | C172 ) . C173 ) by L578 , L583 , L586 , L591 , PARTFUN1:def 6;
end;
suppose L595: C172 > ( len C171 );

L596: ( C171 | C172 ) = C171 by L595 , L575 , FINSEQ_2:20;
thus L597: ( ( Card ( C171 | C172 ) ) . C173 ) = ( ( ( Card C171 ) | C172 ) . C173 ) by L596 , L580 , L582 , L595 , FINSEQ_2:20;
end;
end;
L599: ( len ( ( Card C171 ) | C172 ) ) = ( min (C172 , ( len ( Card C171 ) )) ) by L580 , FINSEQ_2:21
.= ( min (C172 , ( len C171 )) ) by L579 , FINSEQ_3:29;
thus L600: thesis by L599 , L577 , L581 , FINSEQ_2:9;
end;
theorem
L601: (for B123 being (FinSequence of ( REAL )) holds (for B124 being (FinSequence of ( NAT )) holds (B123 = B124 implies (for B125 being (Element of ( NAT )) holds ( B123 | B125 ) = ( B124 | B125 )))));
theorem
L602: (for B126 being (FinSequence of ( NAT )) holds (for B127 , B128 being (Element of ( NAT )) holds (B127 <= B128 implies ( Sum ( B126 | B127 ) ) <= ( Sum ( B126 | B128 ) ))))
proof
let C174 being (FinSequence of ( NAT ));
let C175 , C176 being (Element of ( NAT ));
assume L603: C175 <= C176;
consider C177 being Nat such that L604: C176 = ( C175 + C177 ) by L603 , NAT_1:10;
reconsider D40 = C177 as (Element of ( NAT )) by ORDINAL1:def 12;
per cases ;
suppose L605: C176 <= ( len C174 );

L606: ( len ( C174 | C176 ) ) = ( C175 + D40 ) by L605 , L604 , FINSEQ_1:59;
consider C178 , C179 being (FinSequence of ( NAT )) such that L607: ( len C178 ) = C175 and L608: ( len C179 ) = D40 and L609: ( C174 | C176 ) = ( C178 ^ C179 ) by L606 , FINSEQ_2:23;
L610: ( len ( C174 | C175 ) ) = C175 by L603 , L605 , FINSEQ_1:59 , XXREAL_0:2;
L611: ( dom ( C174 | C175 ) ) = ( Seg C175 ) by L610 , FINSEQ_1:def 3;
L612:
now
reconsider D41 = C174 as (FinSequence of ( REAL ));
let C180 being Nat;
assume L613: C180 in ( dom ( C174 | C175 ) );
L614: ( ( D41 | C175 ) /. C180 ) = ( C174 /. C180 ) by L613 , FINSEQ_4:70;
L615: ( Seg C175 ) = ( dom C178 ) by L607 , FINSEQ_1:def 3;
L616: (( Seg C175 ) c= ( Seg C176 ) & ( Seg C176 ) = ( dom ( C174 | C176 ) )) by L603 , L604 , L606 , FINSEQ_1:5 , FINSEQ_1:def 3;
L617: ( Seg C175 ) = ( dom ( C174 | C175 ) ) by L610 , FINSEQ_1:def 3;
L618: ( ( D41 | C176 ) /. C180 ) = ( C174 /. C180 ) by L617 , L613 , L616 , FINSEQ_4:70;
thus L619: ( ( C174 | C175 ) . C180 ) = ( ( D41 | C175 ) /. C180 ) by L613 , PARTFUN1:def 6
.= ( ( C174 | C176 ) . C180 ) by L611 , L613 , L616 , L614 , L618 , PARTFUN1:def 6
.= ( C178 . C180 ) by L609 , L611 , L613 , L615 , FINSEQ_1:def 7;
end;
L620: ( ( Sum C178 ) + ( Sum C179 ) ) >= ( ( Sum C178 ) + (( 0 ) qua Nat) ) by XREAL_1:6;
L621: ( Sum ( C174 | C176 ) ) = ( ( Sum C178 ) + ( Sum C179 ) ) by L609 , RVSUM_1:75;
thus L622: thesis by L621 , L610 , L607 , L612 , L620 , FINSEQ_2:9;
end;
suppose L623: C176 > ( len C174 );

L624: ( C174 | C176 ) = C174 by L623 , FINSEQ_1:58;
L625:
now
per cases ;
suppose L626: C175 >= ( len C174 );

thus L627: thesis by L626 , L624 , FINSEQ_1:58;
end;
suppose L628: C175 < ( len C174 );

consider C181 being Nat such that L629: ( len C174 ) = ( C175 + C181 ) by L628 , NAT_1:10;
consider C182 , C183 being (FinSequence of ( NAT )) such that L630: ( len C182 ) = C175 and L631: ( len C183 ) = C181 and L632: C174 = ( C182 ^ C183 ) by L629 , FINSEQ_2:23;
L633: ( len ( C174 | C175 ) ) = C175 by L628 , FINSEQ_1:59;
L634: ( dom ( C174 | C175 ) ) = ( Seg C175 ) by L633 , FINSEQ_1:def 3;
L635:
now
L636: ( Seg C175 ) = ( dom C182 ) by L630 , FINSEQ_1:def 3;
reconsider D42 = C174 as (FinSequence of ( REAL ));
let C184 being Nat;
L637: ( dom ( C174 | C175 ) ) c= ( dom C174 ) by FINSEQ_5:18;
assume L638: C184 in ( dom ( C174 | C175 ) );
L639: ( ( D42 | C175 ) /. C184 ) = ( C174 /. C184 ) by L638 , FINSEQ_4:70;
thus L640: ( ( C174 | C175 ) . C184 ) = ( ( D42 | C175 ) /. C184 ) by L638 , PARTFUN1:def 6
.= ( C174 . C184 ) by L638 , L639 , L637 , PARTFUN1:def 6
.= ( C182 . C184 ) by L632 , L634 , L638 , L636 , FINSEQ_1:def 7;
end;
L641: ( ( Sum C182 ) + ( Sum C183 ) ) >= ( ( Sum C182 ) + (( 0 ) qua Nat) ) by XREAL_1:6;
L642: ( Sum C174 ) = ( ( Sum C182 ) + ( Sum C183 ) ) by L632 , RVSUM_1:75;
thus L643: thesis by L642 , L624 , L630 , L633 , L635 , L641 , FINSEQ_2:9;
end;
end;
thus L645: thesis by L625;
end;
end;
theorem
L647: (for B129 being set holds (for B130 being (FinSequence of B129) holds (for B131 being (Element of ( NAT )) holds (B131 < ( len B130 ) implies ( B130 | ( B131 + 1 ) ) = ( ( B130 | B131 ) ^ <* ( B130 . ( B131 + 1 ) ) *> ))))) by FINSEQ_5:83;
theorem
L648: (for B132 being (FinSequence of ( REAL )) holds (for B133 being (Element of ( NAT )) holds (B133 < ( len B132 ) implies ( Sum ( B132 | ( B133 + 1 ) ) ) = ( ( Sum ( B132 | B133 ) ) + ( B132 . ( B133 + 1 ) ) ))))
proof
let C185 being (FinSequence of ( REAL ));
let C186 being (Element of ( NAT ));
assume L649: C186 < ( len C185 );
L650: ( C185 | ( C186 + 1 ) ) = ( ( C185 | C186 ) ^ <* ( C185 . ( C186 + 1 ) ) *> ) by L649 , FINSEQ_5:83;
thus L651: thesis by L650 , RVSUM_1:74;
end;
theorem
L652: (for B134 being (FinSequence of ( NAT )) holds (for B135 , B136 , B137 , B138 being (Element of ( NAT )) holds ((B135 < ( len B134 ) & B136 < ( len B134 ) & 1 <= B137 & 1 <= B138 & B137 <= ( B134 . ( B135 + 1 ) ) & B138 <= ( B134 . ( B136 + 1 ) ) & ( ( Sum ( B134 | B135 ) ) + B137 ) = ( ( Sum ( B134 | B136 ) ) + B138 )) implies (B135 = B136 & B137 = B138))))
proof
let C187 being (FinSequence of ( NAT ));
let C188 , C189 , C190 , C191 being (Element of ( NAT ));
assume that
L653: C188 < ( len C187 )
and
L654: C189 < ( len C187 )
and
L655: 1 <= C190
and
L656: 1 <= C191
and
L657: C190 <= ( C187 . ( C188 + 1 ) )
and
L658: C191 <= ( C187 . ( C189 + 1 ) )
and
L659: ( ( Sum ( C187 | C188 ) ) + C190 ) = ( ( Sum ( C187 | C189 ) ) + C191 )
and
L660: (C188 <> C189 or C190 <> C191);
L661: C188 <> C189 by L659 , L660 , XCMPLX_1:2;
reconsider D43 = C187 as (FinSequence of ( REAL ));
L662: ( ( Sum ( D43 | C188 ) ) + ( C187 . ( C188 + 1 ) ) ) >= ( ( Sum ( C187 | C188 ) ) + C190 ) by L657 , XREAL_1:6;
L663: ( ( Sum ( D43 | C189 ) ) + ( C187 . ( C189 + 1 ) ) ) >= ( ( Sum ( C187 | C189 ) ) + C191 ) by L658 , XREAL_1:6;
per cases ;
suppose L664: C188 < C189;

L665: ( C188 + 1 ) <= C189 by L664 , NAT_1:13;
L666: ( Sum ( C187 | C189 ) ) >= ( Sum ( D43 | ( C188 + 1 ) ) ) by L665 , L602;
L667: ( Sum ( C187 | C189 ) ) >= ( ( Sum ( D43 | C188 ) ) + ( C187 . ( C188 + 1 ) ) ) by L666 , L653 , L648;
L668: ( Sum ( C187 | C189 ) ) >= ( ( Sum ( C187 | C189 ) ) + C191 ) by L667 , L659 , L662 , XXREAL_0:2;
L669: ( ( Sum ( C187 | C189 ) ) + C191 ) >= ( Sum ( C187 | C189 ) ) by NAT_1:11;
L670: ( Sum ( C187 | C189 ) ) = ( ( Sum ( C187 | C189 ) ) + C191 ) by L669 , L668 , XXREAL_0:1;
L671: C191 = ( 0 ) by L670;
thus L672: contradiction by L671 , L656;
end;
suppose L673: C188 >= C189;

L674: C189 < C188 by L673 , L661 , XXREAL_0:1;
L675: ( C189 + 1 ) <= C188 by L674 , NAT_1:13;
L676: ( Sum ( C187 | C188 ) ) >= ( Sum ( D43 | ( C189 + 1 ) ) ) by L675 , L602;
L677: ( Sum ( C187 | C188 ) ) >= ( ( Sum ( D43 | C189 ) ) + ( C187 . ( C189 + 1 ) ) ) by L676 , L654 , L648;
L678: ( Sum ( C187 | C188 ) ) >= ( ( Sum ( C187 | C188 ) ) + C190 ) by L677 , L659 , L663 , XXREAL_0:2;
L679: ( ( Sum ( C187 | C188 ) ) + C190 ) >= ( Sum ( C187 | C188 ) ) by NAT_1:11;
L680: ( Sum ( C187 | C188 ) ) = ( ( Sum ( C187 | C188 ) ) + C190 ) by L679 , L678 , XXREAL_0:1;
L681: C190 = ( 0 ) by L680;
thus L682: contradiction by L681 , L655;
end;
end;
theorem
L684: (for B139 , B140 being set holds (for B141 being (FinSequence of ( B139 * )) holds (for B142 being (FinSequence of ( B140 * )) holds (for B143 , B144 , B145 , B146 being (Element of ( NAT )) holds ((B143 in ( dom B141 ) & B144 in ( dom B142 ) & B145 in ( dom ( B141 . B143 ) ) & B146 in ( dom ( B142 . B144 ) ) & ( Card B141 ) = ( Card B142 ) & ( ( Sum ( ( Card B141 ) | ( B143 -' 1 ) ) ) + B145 ) = ( ( Sum ( ( Card B142 ) | ( B144 -' 1 ) ) ) + B146 )) implies (B143 = B144 & B145 = B146))))))
proof
let C192 , C193 being set;
let C194 being (FinSequence of ( C192 * ));
let C195 being (FinSequence of ( C193 * ));
let C196 , C197 , C198 , C199 being (Element of ( NAT ));
assume that
L685: C196 in ( dom C194 )
and
L686: C197 in ( dom C195 )
and
L687: C198 in ( dom ( C194 . C196 ) )
and
L688: C199 in ( dom ( C195 . C197 ) )
and
L689: (( Card C194 ) = ( Card C195 ) & ( ( Sum ( ( Card C194 ) | ( C196 -' 1 ) ) ) + C198 ) = ( ( Sum ( ( Card C195 ) | ( C197 -' 1 ) ) ) + C199 ));
L690: (C198 >= 1 & C199 >= 1) by L687 , L688 , FINSEQ_3:25;
L691: 1 <= C196 by L685 , FINSEQ_3:25;
L692: ( C196 - 1 ) >= ( 0 ) by L691 , XREAL_1:48;
L693: C198 <= ( len ( C194 . C196 ) ) by L687 , FINSEQ_3:25;
L694: C198 <= ( ( Card C194 ) . C196 ) by L693 , L685 , CARD_3:def 2;
L695: C198 <= ( ( Card C194 ) . ( ( C196 -' 1 ) + 1 ) ) by L694 , L691 , XREAL_1:235;
L696: 1 <= C197 by L686 , FINSEQ_3:25;
L697: ( C197 - 1 ) >= ( 0 ) by L696 , XREAL_1:48;
L698: ( dom ( Card C195 ) ) = ( dom C195 ) by CARD_3:def 2;
L699: ( len ( Card C195 ) ) = ( len C195 ) by L698 , FINSEQ_3:29;
L700: ( dom ( Card C194 ) ) = ( dom C194 ) by CARD_3:def 2;
L701: ( len ( Card C194 ) ) = ( len C194 ) by L700 , FINSEQ_3:29;
L702: C196 <= ( len C194 ) by L685 , FINSEQ_3:25;
L703: C196 < ( ( len C194 ) + 1 ) by L702 , NAT_1:13;
L704: ( C196 - 1 ) < ( ( ( len C194 ) + 1 ) - 1 ) by L703 , XREAL_1:9;
L705: ( C196 -' 1 ) < ( len ( Card C194 ) ) by L704 , L701 , L692 , XREAL_0:def 2;
L706: C199 <= ( len ( C195 . C197 ) ) by L688 , FINSEQ_3:25;
L707: C199 <= ( ( Card C195 ) . C197 ) by L706 , L686 , CARD_3:def 2;
L708: C199 <= ( ( Card C195 ) . ( ( C197 -' 1 ) + 1 ) ) by L707 , L696 , XREAL_1:235;
L709: C197 <= ( len C195 ) by L686 , FINSEQ_3:25;
L710: C197 < ( ( len C195 ) + 1 ) by L709 , NAT_1:13;
L711: ( C197 - 1 ) < ( ( ( len C195 ) + 1 ) - 1 ) by L710 , XREAL_1:9;
L712: ( C197 -' 1 ) < ( len ( Card C195 ) ) by L711 , L699 , L697 , XREAL_0:def 2;
L713: ( C196 -' 1 ) = ( C197 -' 1 ) by L712 , L689 , L705 , L690 , L695 , L708 , L652;
L714: ( C196 - 1 ) = ( C197 -' 1 ) by L713 , L692 , XREAL_0:def 2;
L715: ( C196 - 1 ) = ( C197 - 1 ) by L714 , L697 , XREAL_0:def 2;
thus L716: thesis by L715 , L689 , L705 , L690 , L695 , L708 , L652;
end;
begin
definition
let C200 being non  empty ZeroStr;
mode Polynomial of C200
 is (AlgSequence of C200);
end;
theorem
L718: (for B147 being non  empty ZeroStr holds (for B148 being (Polynomial of B147) holds (for B149 being (Element of ( NAT )) holds (B149 >= ( len B148 ) iff B149 is_at_least_length_of B148))))
proof
let C201 being non  empty ZeroStr;
let C202 being (Polynomial of C201);
let C203 being (Element of ( NAT ));
thus L719: (C203 >= ( len C202 ) implies C203 is_at_least_length_of C202)
proof
assume L720: C203 >= ( len C202 );
let C204 being Nat;
assume L721: C204 >= C203;
thus L722: ( C202 . C204 ) = ( 0. C201 ) by L721 , L720 , ALGSEQ_1:8 , XXREAL_0:2;
end;

assume L723: C203 is_at_least_length_of C202;
thus L724: thesis by L723 , ALGSEQ_1:def 3;
end;
scheme PolynomialLambdaF { F5() -> non  empty addLoopStr , F6() -> (Element of ( NAT )) , F7((Element of ( NAT ))) -> (Element of F5()) } : (ex B150 being (Polynomial of F5()) st (( len B150 ) <= F6() & (for B151 being (Element of ( NAT )) holds (B151 < F6() implies ( B150 . B151 ) = F7(B151)))))
proof
defpred S9[ (Element of ( NAT )) , (Element of F5()) ] means (($1 < F6() & $2 = F7($1)) or ($1 >= F6() & $2 = ( 0. F5() )));
L725: (for B152 being (Element of ( NAT )) holds (ex B153 being (Element of F5()) st S9[ B152 , B153 ]))
proof
let C205 being (Element of ( NAT ));
L726: (C205 < F6() implies (C205 < F6() & F7(C205) = F7(C205)));
thus L727: thesis by L726;
end;
L728: (ex B154 being (Function of ( NAT ) , (the carrier of F5())) st (for B155 being (Element of ( NAT )) holds S9[ B155 , ( B154 . B155 ) ])) from FUNCT_2:sch 3(L725);
consider C206 being (Function of ( NAT ) , (the carrier of F5())) such that L729: (for B156 being (Element of ( NAT )) holds ((B156 < F6() & ( C206 . B156 ) = F7(B156)) or (B156 >= F6() & ( C206 . B156 ) = ( 0. F5() )))) by L728;
L730: (ex B157 being Nat st (for B158 being Nat holds (B158 >= B157 implies ( C206 . B158 ) = ( 0. F5() ))))
proof
take F6();
let C207 being Nat;
L731: C207 in ( NAT ) by ORDINAL1:def 12;
thus L732: thesis by L731 , L729;
end;
reconsider D44 = C206 as (AlgSequence of F5()) by L730 , ALGSEQ_1:def 1;
take D44;
L733:
now
let C208 being Nat;
L734: C208 in ( NAT ) by ORDINAL1:def 12;
thus L735: (C208 >= F6() implies ( D44 . C208 ) = ( 0. F5() )) by L734 , L729;
end;
L736: F6() is_at_least_length_of D44 by L733 , ALGSEQ_1:def 2;
thus L737: thesis by L736 , L729 , ALGSEQ_1:def 3;
end;
registration
let C209 being  right_zeroed non  empty addLoopStr;
let C210 , C211 being (Polynomial of C209);
cluster ( C210 + C211 ) ->  finite-Support;
coherence
proof
take D45 = ( ( len C210 ) + ( len C211 ) );
let C212 being Nat;
assume L738: C212 >= D45;
L739: ( ( len C210 ) + ( len C211 ) ) >= ( len C210 ) by NAT_1:11;
L740: ( C210 . C212 ) = ( 0. C209 ) by L739 , L738 , ALGSEQ_1:8 , XXREAL_0:2;
L741: ( ( len C210 ) + ( len C211 ) ) >= ( len C211 ) by NAT_1:11;
L742: C212 in ( NAT ) by ORDINAL1:def 12;
thus L743: ( ( C210 + C211 ) . C212 ) = ( ( C210 . C212 ) + ( C211 . C212 ) ) by L742 , NORMSP_1:def 2
.= ( ( 0. C209 ) + ( 0. C209 ) ) by L738 , L740 , L741 , ALGSEQ_1:8 , XXREAL_0:2
.= ( 0. C209 ) by RLVECT_1:def 4;
end;
end;
theorem
L745: (for B159 being  right_zeroed non  empty addLoopStr holds (for B160 , B161 being (Polynomial of B159) holds (for B162 being (Element of ( NAT )) holds ((B162 is_at_least_length_of B160 & B162 is_at_least_length_of B161) implies B162 is_at_least_length_of ( B160 + B161 )))))
proof
let C213 being  right_zeroed non  empty addLoopStr;
let C214 , C215 being (Polynomial of C213);
let C216 being (Element of ( NAT ));
assume L746: (C216 is_at_least_length_of C214 & C216 is_at_least_length_of C215);
let C217 being Nat;
assume L747: C217 >= C216;
L748: (( C214 . C217 ) = ( 0. C213 ) & ( C215 . C217 ) = ( 0. C213 )) by L747 , L746 , ALGSEQ_1:def 2;
L749: C217 in ( NAT ) by ORDINAL1:def 12;
thus L750: ( ( C214 + C215 ) . C217 ) = ( ( 0. C213 ) + ( 0. C213 ) ) by L749 , L748 , NORMSP_1:def 2
.= ( 0. C213 ) by RLVECT_1:def 4;
end;
theorem
L751: (for B163 being  right_zeroed non  empty addLoopStr holds (for B164 , B165 being (Polynomial of B163) holds ( support ( B164 + B165 ) ) c= ( ( support B164 ) \/ ( support B165 ) )))
proof
let C218 being  right_zeroed non  empty addLoopStr;
let C219 , C220 being (Polynomial of C218);
let C221 being set;
assume L752: C221 in ( support ( C219 + C220 ) );
reconsider D46 = C221 as (Element of ( NAT )) by L752;
L753: D46 < ( len ( C219 + C220 ) ) by L752 , ALGSEQ_1:1;
L754: (D46 < ( len C219 ) or D46 < ( len C220 ))
proof
assume L755: ((not D46 < ( len C219 )) & (not D46 < ( len C220 )));
L756: (D46 is_at_least_length_of C219 & D46 is_at_least_length_of C220) by L755 , L718;
L757: D46 is_at_least_length_of ( C219 + C220 ) by L756 , L745;
thus L758: contradiction by L757 , L753 , L718;
end;
L759: (C221 in ( Segm ( len C219 ) ) or C221 in ( Segm ( len C220 ) )) by L754 , NAT_1:44;
thus L760: thesis by L759 , XBOOLE_0:def 3;
end;
definition
let C222 being  Abelian non  empty addLoopStr;
let C223 , C224 being (sequence of C222);
redefine func C223 + C224;

commutativity
proof
let C225 , C226 being (sequence of C222);
L761:
now
let C227 being (Element of ( NAT ));
thus L762: ( ( C225 + C226 ) . C227 ) = ( ( C225 . C227 ) + ( C226 . C227 ) ) by NORMSP_1:def 2
.= ( ( C226 + C225 ) . C227 ) by NORMSP_1:def 2;
end;
thus L763: ( C225 + C226 ) = ( C226 + C225 ) by L761 , FUNCT_2:63;
end;
end;
theorem
L765: (for B166 being  add-associative non  empty addLoopStr holds (for B167 , B168 , B169 being (sequence of B166) holds ( ( B167 + B168 ) + B169 ) = ( B167 + ( B168 + B169 ) )))
proof
let C228 being  add-associative non  empty addLoopStr;
let C229 , C230 , C231 being (sequence of C228);
L766:
now
let C232 being (Element of ( NAT ));
thus L767: ( ( ( C229 + C230 ) + C231 ) . C232 ) = ( ( ( C229 + C230 ) . C232 ) + ( C231 . C232 ) ) by NORMSP_1:def 2
.= ( ( ( C229 . C232 ) + ( C230 . C232 ) ) + ( C231 . C232 ) ) by NORMSP_1:def 2
.= ( ( C229 . C232 ) + ( ( C230 . C232 ) + ( C231 . C232 ) ) ) by RLVECT_1:def 3
.= ( ( C229 . C232 ) + ( ( C230 + C231 ) . C232 ) ) by NORMSP_1:def 2
.= ( ( C229 + ( C230 + C231 ) ) . C232 ) by NORMSP_1:def 2;
end;
thus L768: thesis by L766 , FUNCT_2:63;
end;
registration
let C233 being  add-associative  right_zeroed  right_complementable non  empty addLoopStr;
let C234 being (Polynomial of C233);
cluster ( - C234 ) ->  finite-Support;
coherence
proof
take D47 = ( len C234 );
let C235 being Nat;
assume L769: C235 >= D47;
L770: C235 in ( NAT ) by ORDINAL1:def 12;
thus L771: ( ( - C234 ) . C235 ) = ( - ( C234 . C235 ) ) by L770 , BHSP_1:44
.= ( - ( 0. C233 ) ) by L769 , ALGSEQ_1:8
.= ( 0. C233 ) by RLVECT_1:12;
end;
end;
L773: (for B170 being non  empty addLoopStr holds (for B171 , B172 being (sequence of B170) holds ( B171 - B172 ) = ( B171 + ( - B172 ) )))
proof
let C236 being non  empty addLoopStr;
let C237 , C238 being (sequence of C236);
let C239 being (Element of ( NAT ));
thus L774: ( ( C237 - C238 ) . C239 ) = ( ( C237 . C239 ) - ( C238 . C239 ) ) by NORMSP_1:def 3
.= ( ( C237 . C239 ) + ( ( - C238 ) . C239 ) ) by BHSP_1:44
.= ( ( C237 + ( - C238 ) ) . C239 ) by NORMSP_1:def 2;
end;
definition
let C240 being non  empty addLoopStr;
let C241 , C242 being (sequence of C240);
redefine func C241 - C242 equals 
( C241 + ( - C242 ) );
compatibility by L773;
end;
registration
let C243 being  add-associative  right_zeroed  right_complementable non  empty addLoopStr;
let C244 , C245 being (Polynomial of C243);
cluster ( C244 - C245 ) ->  finite-Support;
coherence;
end;
theorem
L777: (for B173 being non  empty addLoopStr holds (for B174 , B175 being (sequence of B173) holds (for B176 being (Element of ( NAT )) holds ( ( B174 - B175 ) . B176 ) = ( ( B174 . B176 ) - ( B175 . B176 ) )))) by NORMSP_1:def 3;
definition
let C246 being non  empty ZeroStr;
func 0_. C246 -> (sequence of C246) equals 
( ( NAT ) --> ( 0. C246 ) );
coherence;
end;
registration
let C247 being non  empty ZeroStr;
cluster ( 0_. C247 ) ->  finite-Support;
coherence
proof
take ( 0 );
let C248 being Nat;
assume L779: C248 >= ( 0 );
L780: C248 in ( NAT ) by ORDINAL1:def 12;
thus L781: thesis by L780 , FUNCOP_1:7;
end;
end;
theorem
L783: (for B177 being  right_zeroed non  empty addLoopStr holds (for B178 being (sequence of B177) holds ( B178 + ( 0_. B177 ) ) = B178))
proof
let C249 being  right_zeroed non  empty addLoopStr;
let C250 being (sequence of C249);
L784:
now
let C251 being (Element of ( NAT ));
thus L785: ( ( C250 + ( 0_. C249 ) ) . C251 ) = ( ( C250 . C251 ) + ( ( 0_. C249 ) . C251 ) ) by NORMSP_1:def 2
.= ( ( C250 . C251 ) + ( 0. C249 ) ) by FUNCOP_1:7
.= ( C250 . C251 ) by RLVECT_1:def 4;
end;
thus L786: thesis by L784 , FUNCT_2:63;
end;
theorem
L787: (for B179 being  add-associative  right_zeroed  right_complementable non  empty addLoopStr holds (for B180 being (sequence of B179) holds ( B180 - B180 ) = ( 0_. B179 )))
proof
let C252 being  add-associative  right_zeroed  right_complementable non  empty addLoopStr;
let C253 being (sequence of C252);
L788:
now
let C254 being (Element of ( NAT ));
thus L789: ( ( C253 - C253 ) . C254 ) = ( ( C253 . C254 ) - ( C253 . C254 ) ) by NORMSP_1:def 3
.= ( 0. C252 ) by RLVECT_1:15
.= ( ( 0_. C252 ) . C254 ) by FUNCOP_1:7;
end;
thus L790: thesis by L788 , FUNCT_2:63;
end;
definition
let C255 being non  empty multLoopStr_0;
func 1_. C255 -> (sequence of C255) equals 
( ( 0_. C255 ) +* (( 0 ) , ( 1. C255 )) );
coherence;
end;
registration
let C256 being non  empty multLoopStr_0;
cluster ( 1_. C256 ) ->  finite-Support;
coherence
proof
take 1;
let C257 being Nat;
L792: C257 in ( NAT ) by ORDINAL1:def 12;
assume L793: C257 >= 1;
thus L794: ( ( 1_. C256 ) . C257 ) = ( ( 0_. C256 ) . C257 ) by L793 , FUNCT_7:32
.= ( 0. C256 ) by L792 , FUNCOP_1:7;
end;
end;
theorem
L796: (for B181 being non  empty multLoopStr_0 holds (( ( 1_. B181 ) . ( 0 ) ) = ( 1. B181 ) & (for B182 being Nat holds (B182 <> ( 0 ) implies ( ( 1_. B181 ) . B182 ) = ( 0. B181 )))))
proof
let C258 being non  empty multLoopStr_0;
L797: ( 0 ) in ( NAT );
L798: ( 0 ) in ( dom ( 0_. C258 ) ) by L797 , FUNCT_2:def 1;
thus L799: ( ( 1_. C258 ) . ( 0 ) ) = ( 1. C258 ) by L798 , FUNCT_7:31;
let C259 being Nat;
L800: C259 in ( NAT ) by ORDINAL1:def 12;
assume L801: C259 <> ( 0 );
thus L802: ( ( 1_. C258 ) . C259 ) = ( ( 0_. C258 ) . C259 ) by L801 , FUNCT_7:32
.= ( 0. C258 ) by L800 , FUNCOP_1:7;
end;
definition
let C260 being non  empty doubleLoopStr;
let C261 , C262 being (sequence of C260);
func C261 *' C262 -> (sequence of C260) means 
:L803: (for B183 being (Element of ( NAT )) holds (ex B184 being (FinSequence of (the carrier of C260)) st (( len B184 ) = ( B183 + 1 ) & ( it . B183 ) = ( Sum B184 ) & (for B185 being (Element of ( NAT )) holds (B185 in ( dom B184 ) implies ( B184 . B185 ) = ( ( C261 . ( B185 -' 1 ) ) * ( C262 . ( ( B183 + 1 ) -' B185 ) ) ))))));
existence
proof
defpred S10[ (Element of ( NAT )) , (Element of C260) ] means (ex B186 being (FinSequence of (the carrier of C260)) st (( len B186 ) = ( $1 + 1 ) & $2 = ( Sum B186 ) & (for B187 being (Element of ( NAT )) holds (B187 in ( dom B186 ) implies ( B186 . B187 ) = ( ( C261 . ( B187 -' 1 ) ) * ( C262 . ( ( $1 + 1 ) -' B187 ) ) )))));
L804: (for B188 being (Element of ( NAT )) holds (ex B189 being (Element of C260) st S10[ B188 , B189 ]))
proof
let C263 being (Element of ( NAT ));
deffunc H4(Nat) = ( ( C261 . ( $1 -' 1 ) ) * ( C262 . ( ( C263 + 1 ) -' $1 ) ) );
consider C264 being (FinSequence of (the carrier of C260)) such that L805: ( len C264 ) = ( C263 + 1 ) and L806: (for B190 being Nat holds (B190 in ( dom C264 ) implies ( C264 . B190 ) = H4(B190))) from FINSEQ_2:sch 1;
take D48 = ( Sum C264 );
take C264;
thus L807: ( len C264 ) = ( C263 + 1 ) by L805;
thus L808: D48 = ( Sum C264 );
let C265 being (Element of ( NAT ));
assume L809: C265 in ( dom C264 );
thus L810: thesis by L809 , L806;
end;
consider C266 being (Function of ( NAT ) , (the carrier of C260)) such that L811: (for B191 being (Element of ( NAT )) holds S10[ B191 , ( C266 . B191 ) ]) from FUNCT_2:sch 3(L804);
take C266;
thus L812: thesis by L811;
end;
uniqueness
proof
let C267 , C268 being (sequence of C260);
assume that
L813: (for B192 being (Element of ( NAT )) holds (ex B193 being (FinSequence of (the carrier of C260)) st (( len B193 ) = ( B192 + 1 ) & ( C267 . B192 ) = ( Sum B193 ) & (for B194 being (Element of ( NAT )) holds (B194 in ( dom B193 ) implies ( B193 . B194 ) = ( ( C261 . ( B194 -' 1 ) ) * ( C262 . ( ( B192 + 1 ) -' B194 ) ) ))))))
and
L814: (for B195 being (Element of ( NAT )) holds (ex B196 being (FinSequence of (the carrier of C260)) st (( len B196 ) = ( B195 + 1 ) & ( C268 . B195 ) = ( Sum B196 ) & (for B197 being (Element of ( NAT )) holds (B197 in ( dom B196 ) implies ( B196 . B197 ) = ( ( C261 . ( B197 -' 1 ) ) * ( C262 . ( ( B195 + 1 ) -' B197 ) ) ))))));
L815:
now
let C269 being (Element of ( NAT ));
consider C270 being (FinSequence of (the carrier of C260)) such that L816: ( len C270 ) = ( C269 + 1 ) and L817: ( C267 . C269 ) = ( Sum C270 ) and L818: (for B198 being (Element of ( NAT )) holds (B198 in ( dom C270 ) implies ( C270 . B198 ) = ( ( C261 . ( B198 -' 1 ) ) * ( C262 . ( ( C269 + 1 ) -' B198 ) ) ))) by L813;
consider C271 being (FinSequence of (the carrier of C260)) such that L819: ( len C271 ) = ( C269 + 1 ) and L820: ( C268 . C269 ) = ( Sum C271 ) and L821: (for B199 being (Element of ( NAT )) holds (B199 in ( dom C271 ) implies ( C271 . B199 ) = ( ( C261 . ( B199 -' 1 ) ) * ( C262 . ( ( C269 + 1 ) -' B199 ) ) ))) by L814;
L822: ( dom C270 ) = ( Seg ( len C271 ) ) by L816 , L819 , FINSEQ_1:def 3
.= ( dom C271 ) by FINSEQ_1:def 3;
L823:
now
let C272 being Nat;
assume L824: C272 in ( dom C270 );
thus L825: ( C270 . C272 ) = ( ( C261 . ( C272 -' 1 ) ) * ( C262 . ( ( C269 + 1 ) -' C272 ) ) ) by L824 , L818
.= ( C271 . C272 ) by L821 , L822 , L824;
end;
thus L826: ( C267 . C269 ) = ( C268 . C269 ) by L823 , L817 , L820 , L822 , FINSEQ_1:13;
end;
thus L827: C267 = C268 by L815 , FUNCT_2:63;
end;
end;
registration
let C273 being  add-associative  right_zeroed  right_complementable  distributive non  empty doubleLoopStr;
let C274 , C275 being (Polynomial of C273);
cluster ( C274 *' C275 ) ->  finite-Support;
coherence
proof
take D49 = ( ( len C274 ) + ( len C275 ) );
let C276 being Nat;
L829: C276 in ( NAT ) by ORDINAL1:def 12;
consider C277 being (FinSequence of (the carrier of C273)) such that L830: ( len C277 ) = ( C276 + 1 ) and L831: ( ( C274 *' C275 ) . C276 ) = ( Sum C277 ) and L832: (for B200 being (Element of ( NAT )) holds (B200 in ( dom C277 ) implies ( C277 . B200 ) = ( ( C274 . ( B200 -' 1 ) ) * ( C275 . ( ( C276 + 1 ) -' B200 ) ) ))) by L829 , L803;
assume L833: C276 >= D49;
L834: ( len C274 ) <= ( C276 - ( len C275 ) ) by L833 , XREAL_1:19;
L835: ( - ( len C274 ) ) >= ( - ( C276 - ( len C275 ) ) ) by L834 , XREAL_1:24;
L836:
now
let C278 being (Element of ( NAT ));
assume L837: C278 in ( dom C277 );
L838: ( C277 . C278 ) = ( ( C274 . ( C278 -' 1 ) ) * ( C275 . ( ( C276 + 1 ) -' C278 ) ) ) by L837 , L832;
L839: C278 <= ( C276 + 1 ) by L830 , L837 , FINSEQ_3:25;
L840: ( ( C276 + 1 ) - C278 ) >= ( 0 ) by L839 , XREAL_1:48;
per cases ;
suppose L841: ( C278 -' 1 ) < ( len C274 );

L842: ( C278 - 1 ) < ( len C274 ) by L841 , XREAL_0:def 2;
L843: ( - ( C278 - 1 ) ) > ( - ( len C274 ) ) by L842 , XREAL_1:24;
L844: ( 1 - C278 ) > ( ( len C275 ) - C276 ) by L843 , L835 , XXREAL_0:2;
L845: ( C276 + ( 1 - C278 ) ) > ( len C275 ) by L844 , XREAL_1:19;
L846: ( ( C276 + 1 ) -' C278 ) >= ( len C275 ) by L845 , L840 , XREAL_0:def 2;
L847: ( C275 . ( ( C276 + 1 ) -' C278 ) ) = ( 0. C273 ) by L846 , ALGSEQ_1:8;
thus L848: ( C277 . C278 ) = ( 0. C273 ) by L847 , L838 , VECTSP_1:6;
end;
suppose L849: ( C278 -' 1 ) >= ( len C274 );

L850: ( C274 . ( C278 -' 1 ) ) = ( 0. C273 ) by L849 , ALGSEQ_1:8;
thus L851: ( C277 . C278 ) = ( 0. C273 ) by L850 , L838 , VECTSP_1:7;
end;
end;
thus L853: thesis by L836 , L831 , L1;
end;
end;
theorem
L855: (for B201 being  Abelian  add-associative  right_zeroed  right_complementable  right-distributive non  empty doubleLoopStr holds (for B202 , B203 , B204 being (sequence of B201) holds ( B202 *' ( B203 + B204 ) ) = ( ( B202 *' B203 ) + ( B202 *' B204 ) )))
proof
let C279 being  Abelian  add-associative  right_zeroed  right_complementable  right-distributive non  empty doubleLoopStr;
let C280 , C281 , C282 being (sequence of C279);
L856:
now
let C283 being (Element of ( NAT ));
consider C284 being (FinSequence of (the carrier of C279)) such that L857: ( len C284 ) = ( C283 + 1 ) and L858: ( ( C280 *' ( C281 + C282 ) ) . C283 ) = ( Sum C284 ) and L859: (for B205 being (Element of ( NAT )) holds (B205 in ( dom C284 ) implies ( C284 . B205 ) = ( ( C280 . ( B205 -' 1 ) ) * ( ( C281 + C282 ) . ( ( C283 + 1 ) -' B205 ) ) ))) by L803;
L860: ( dom C284 ) = ( Seg ( C283 + 1 ) ) by L857 , FINSEQ_1:def 3;
consider C285 being (FinSequence of (the carrier of C279)) such that L861: ( len C285 ) = ( C283 + 1 ) and L862: ( ( C280 *' C282 ) . C283 ) = ( Sum C285 ) and L863: (for B206 being (Element of ( NAT )) holds (B206 in ( dom C285 ) implies ( C285 . B206 ) = ( ( C280 . ( B206 -' 1 ) ) * ( C282 . ( ( C283 + 1 ) -' B206 ) ) ))) by L803;
consider C286 being (FinSequence of (the carrier of C279)) such that L864: ( len C286 ) = ( C283 + 1 ) and L865: ( ( C280 *' C281 ) . C283 ) = ( Sum C286 ) and L866: (for B207 being (Element of ( NAT )) holds (B207 in ( dom C286 ) implies ( C286 . B207 ) = ( ( C280 . ( B207 -' 1 ) ) * ( C281 . ( ( C283 + 1 ) -' B207 ) ) ))) by L803;
reconsider D50 = C286 , D51 = C285 as (Element of ( ( C283 + 1 ) -tuples_on (the carrier of C279) )) by L864 , L861 , FINSEQ_2:92;
L867: ( len ( D50 + D51 ) ) = ( C283 + 1 ) by CARD_1:def 7;
L868:
now
let C287 being Nat;
assume L869: C287 in ( dom C284 );
L870: C287 in ( dom ( C286 + C285 ) ) by L869 , L867 , L860 , FINSEQ_1:def 3;
L871: C287 in ( dom C285 ) by L861 , L860 , L869 , FINSEQ_1:def 3;
L872: ( C285 . C287 ) = ( ( C280 . ( C287 -' 1 ) ) * ( C282 . ( ( C283 + 1 ) -' C287 ) ) ) by L871 , L863;
L873: C287 in ( dom C286 ) by L864 , L860 , L869 , FINSEQ_1:def 3;
L874: ( C286 . C287 ) = ( ( C280 . ( C287 -' 1 ) ) * ( C281 . ( ( C283 + 1 ) -' C287 ) ) ) by L873 , L866;
thus L875: ( C284 . C287 ) = ( ( C280 . ( C287 -' 1 ) ) * ( ( C281 + C282 ) . ( ( C283 + 1 ) -' C287 ) ) ) by L859 , L869
.= ( ( C280 . ( C287 -' 1 ) ) * ( ( C281 . ( ( C283 + 1 ) -' C287 ) ) + ( C282 . ( ( C283 + 1 ) -' C287 ) ) ) ) by NORMSP_1:def 2
.= ( ( ( C280 . ( C287 -' 1 ) ) * ( C281 . ( ( C283 + 1 ) -' C287 ) ) ) + ( ( C280 . ( C287 -' 1 ) ) * ( C282 . ( ( C283 + 1 ) -' C287 ) ) ) ) by VECTSP_1:def 2
.= ( ( C286 + C285 ) . C287 ) by L870 , L874 , L872 , FVSUM_1:17;
end;
L876: ( Sum C284 ) = ( Sum ( D50 + D51 ) ) by L868 , L857 , L867 , FINSEQ_2:9
.= ( ( Sum C286 ) + ( Sum C285 ) ) by FVSUM_1:76;
thus L877: ( ( C280 *' ( C281 + C282 ) ) . C283 ) = ( ( ( C280 *' C281 ) + ( C280 *' C282 ) ) . C283 ) by L876 , L858 , L865 , L862 , NORMSP_1:def 2;
end;
thus L878: thesis by L856 , FUNCT_2:63;
end;
theorem
L879: (for B208 being  Abelian  add-associative  right_zeroed  right_complementable  left-distributive non  empty doubleLoopStr holds (for B209 , B210 , B211 being (sequence of B208) holds ( ( B209 + B210 ) *' B211 ) = ( ( B209 *' B211 ) + ( B210 *' B211 ) )))
proof
let C288 being  Abelian  add-associative  right_zeroed  right_complementable  left-distributive non  empty doubleLoopStr;
let C289 , C290 , C291 being (sequence of C288);
L880:
now
let C292 being (Element of ( NAT ));
consider C293 being (FinSequence of (the carrier of C288)) such that L881: ( len C293 ) = ( C292 + 1 ) and L882: ( ( ( C289 + C290 ) *' C291 ) . C292 ) = ( Sum C293 ) and L883: (for B212 being (Element of ( NAT )) holds (B212 in ( dom C293 ) implies ( C293 . B212 ) = ( ( ( C289 + C290 ) . ( B212 -' 1 ) ) * ( C291 . ( ( C292 + 1 ) -' B212 ) ) ))) by L803;
L884: ( dom C293 ) = ( Seg ( C292 + 1 ) ) by L881 , FINSEQ_1:def 3;
consider C294 being (FinSequence of (the carrier of C288)) such that L885: ( len C294 ) = ( C292 + 1 ) and L886: ( ( C290 *' C291 ) . C292 ) = ( Sum C294 ) and L887: (for B213 being (Element of ( NAT )) holds (B213 in ( dom C294 ) implies ( C294 . B213 ) = ( ( C290 . ( B213 -' 1 ) ) * ( C291 . ( ( C292 + 1 ) -' B213 ) ) ))) by L803;
consider C295 being (FinSequence of (the carrier of C288)) such that L888: ( len C295 ) = ( C292 + 1 ) and L889: ( ( C289 *' C291 ) . C292 ) = ( Sum C295 ) and L890: (for B214 being (Element of ( NAT )) holds (B214 in ( dom C295 ) implies ( C295 . B214 ) = ( ( C289 . ( B214 -' 1 ) ) * ( C291 . ( ( C292 + 1 ) -' B214 ) ) ))) by L803;
reconsider D52 = C295 , D53 = C294 as (Element of ( ( C292 + 1 ) -tuples_on (the carrier of C288) )) by L888 , L885 , FINSEQ_2:92;
L891: ( len ( D52 + D53 ) ) = ( C292 + 1 ) by CARD_1:def 7;
L892:
now
let C296 being Nat;
assume L893: C296 in ( dom C293 );
L894: C296 in ( dom ( C295 + C294 ) ) by L893 , L891 , L884 , FINSEQ_1:def 3;
L895: C296 in ( dom C294 ) by L885 , L884 , L893 , FINSEQ_1:def 3;
L896: ( C294 . C296 ) = ( ( C290 . ( C296 -' 1 ) ) * ( C291 . ( ( C292 + 1 ) -' C296 ) ) ) by L895 , L887;
L897: C296 in ( dom C295 ) by L888 , L884 , L893 , FINSEQ_1:def 3;
L898: ( C295 . C296 ) = ( ( C289 . ( C296 -' 1 ) ) * ( C291 . ( ( C292 + 1 ) -' C296 ) ) ) by L897 , L890;
thus L899: ( C293 . C296 ) = ( ( ( C289 + C290 ) . ( C296 -' 1 ) ) * ( C291 . ( ( C292 + 1 ) -' C296 ) ) ) by L883 , L893
.= ( ( ( C289 . ( C296 -' 1 ) ) + ( C290 . ( C296 -' 1 ) ) ) * ( C291 . ( ( C292 + 1 ) -' C296 ) ) ) by NORMSP_1:def 2
.= ( ( ( C289 . ( C296 -' 1 ) ) * ( C291 . ( ( C292 + 1 ) -' C296 ) ) ) + ( ( C290 . ( C296 -' 1 ) ) * ( C291 . ( ( C292 + 1 ) -' C296 ) ) ) ) by VECTSP_1:def 3
.= ( ( C295 + C294 ) . C296 ) by L894 , L898 , L896 , FVSUM_1:17;
end;
L900: ( Sum C293 ) = ( Sum ( D52 + D53 ) ) by L892 , L881 , L891 , FINSEQ_2:9
.= ( ( Sum C295 ) + ( Sum C294 ) ) by FVSUM_1:76;
thus L901: ( ( ( C289 + C290 ) *' C291 ) . C292 ) = ( ( ( C289 *' C291 ) + ( C290 *' C291 ) ) . C292 ) by L900 , L882 , L889 , L886 , NORMSP_1:def 2;
end;
thus L902: thesis by L880 , FUNCT_2:63;
end;
definition
let C297 being (Element of ( NAT ));
redefine func <*C297 *> -> (Element of ( 1 -tuples_on ( NAT ) ));

coherence
proof
thus L903: <* C297 *> is (Element of ( 1 -tuples_on ( NAT ) )) by FINSEQ_2:131;
end;
end;
theorem
L905: (for B215 being  Abelian  add-associative  right_zeroed  right_complementable  well-unital  associative  distributive non  empty doubleLoopStr holds (for B216 , B217 , B218 being (sequence of B215) holds ( ( B216 *' B217 ) *' B218 ) = ( B216 *' ( B217 *' B218 ) )))
proof
let C298 being  Abelian  add-associative  right_zeroed  right_complementable  well-unital  associative  distributive non  empty doubleLoopStr;
let C299 , C300 , C301 being (sequence of C298);
L906:
now
let C302 being (Element of ( NAT ));
deffunc H5(Nat) = ( ( Decomp (( $1 -' 1 ) , 2) ) ^^ (( $1 |-> <* ( ( C302 + 1 ) -' $1 ) *> ) qua (FinSequence of ( 1 -tuples_on ( NAT ) ))) );
consider C303 being (FinSequence of ( ( ( 2 + 1 ) -tuples_on ( NAT ) ) * )) such that L907: ( len C303 ) = ( C302 + 1 ) and L908: (for B219 being Nat holds (B219 in ( dom C303 ) implies ( C303 . B219 ) = H5(B219))) from FINSEQ_2:sch 1;
L909: ( dom C303 ) = ( Seg ( C302 + 1 ) ) by L907 , FINSEQ_1:def 3;
reconsider D54 = C303 as (FinSequence of ( ( 3 -tuples_on ( NAT ) ) * ));
deffunc H6(Nat) = ( ( ( ( C302 + 2 ) -' $1 ) |-> <* ( $1 -' 1 ) *> ) ^^ ( Decomp (( ( C302 + 1 ) -' $1 ) , 2) ) );
consider C304 being (FinSequence of ( ( ( 1 + 2 ) -tuples_on ( NAT ) ) * )) such that L910: ( len C304 ) = ( C302 + 1 ) and L911: (for B220 being Nat holds (B220 in ( dom C304 ) implies ( C304 . B220 ) = H6(B220))) from FINSEQ_2:sch 1;
L912: ( dom C304 ) = ( Seg ( C302 + 1 ) ) by L910 , FINSEQ_1:def 3;
reconsider D55 = C304 as (FinSequence of ( ( 3 -tuples_on ( NAT ) ) * ));
consider C305 being (FinSequence of (the carrier of C298)) such that L913: ( len C305 ) = ( C302 + 1 ) and L914: ( ( C299 *' ( C300 *' C301 ) ) . C302 ) = ( Sum C305 ) and L915: (for B221 being (Element of ( NAT )) holds (B221 in ( dom C305 ) implies ( C305 . B221 ) = ( ( C299 . ( B221 -' 1 ) ) * ( ( C300 *' C301 ) . ( ( C302 + 1 ) -' B221 ) ) ))) by L803;
L916: ( dom C305 ) = ( Seg ( C302 + 1 ) ) by L913 , FINSEQ_1:def 3;
L917: ( dom ( Card D54 ) ) = ( dom D54 ) by CARD_3:def 2
.= ( Seg ( len D55 ) ) by L907 , L910 , FINSEQ_1:def 3
.= ( dom D55 ) by FINSEQ_1:def 3
.= ( dom ( Card D55 ) ) by CARD_3:def 2
.= ( dom ( Rev ( Card D55 ) ) ) by FINSEQ_5:57;
L918:
now
let C306 being Nat;
L919: ( dom ( C306 |-> <* ( ( C302 + 1 ) -' C306 ) *> ) ) = ( Seg C306 ) by FUNCOP_1:13;
assume L920: C306 in ( dom ( Card D54 ) );
L921: C306 in ( Seg ( len ( Rev ( Card D55 ) ) ) ) by L920 , L917 , FINSEQ_1:def 3;
L922: C306 >= 1 by L921 , FINSEQ_1:1;
L923: ( C306 - 1 ) >= ( 0 ) by L922 , XREAL_1:48;
L924: ( ( C302 + 1 ) - ( C306 - 1 ) ) <= ( C302 + 1 ) by L923 , XREAL_1:43;
L925: ( dom ( Card D55 ) ) = ( dom D55 ) by CARD_3:def 2;
L926: ( len ( Card D55 ) ) = ( len D55 ) by L925 , FINSEQ_3:29;
L927: C306 in ( Seg ( len D55 ) ) by L926 , L921 , FINSEQ_5:def 3;
L928: ( D54 . C306 ) = ( ( Decomp (( C306 -' 1 ) , 2) ) ^^ ( C306 |-> <* ( ( C302 + 1 ) -' C306 ) *> ) ) by L927 , L908 , L909 , L910;
L929: ( C302 + 1 ) >= C306 by L910 , L927 , FINSEQ_1:1;
L930: ( ( C302 + 1 ) - C306 ) >= ( 0 ) by L929 , XREAL_1:48;
L931: ( ( ( C302 + 1 ) - C306 ) + 1 ) = ( ( ( C302 + 1 ) -' C306 ) + 1 ) by L930 , XREAL_0:def 2;
reconsider D56 = ( ( ( len ( Card D55 ) ) - C306 ) + 1 ) as (Element of ( NAT )) by L931 , L910 , L925 , FINSEQ_3:29;
L932: ( ( C302 + 1 ) - ( ( ( C302 + 1 ) - C306 ) + 1 ) ) = ( (( 0 ) qua Nat) + ( C306 - 1 ) );
L933: ( ( C302 + 1 ) - ( ( ( C302 + 1 ) - C306 ) + 1 ) ) >= ( 0 ) by L932 , L922 , XREAL_1:48;
L934: ( ( ( C302 + 1 ) -' D56 ) + 1 ) = ( ( (( 0 ) qua Nat) + ( C306 - 1 ) ) + 1 ) by L933 , L910 , L926 , XREAL_0:def 2
.= C306;
L935: ( ( ( C302 + 1 ) - C306 ) + 1 ) >= ( (( 0 ) qua Nat) + 1 ) by L930 , XREAL_1:6;
L936: D56 in ( Seg ( C302 + 1 ) ) by L935 , L910 , L926 , L924 , FINSEQ_1:1;
L937: ( D55 . D56 ) = ( ( ( ( C302 + 2 ) -' D56 ) |-> <* ( D56 -' 1 ) *> ) ^^ ( Decomp (( ( C302 + 1 ) -' D56 ) , 2) ) ) by L936 , L911 , L912;
L938: ( ( ( C302 + 1 ) -' D56 ) + 1 ) = ( ( ( C302 + 1 ) - D56 ) + 1 ) by L910 , L926 , L933 , XREAL_0:def 2
.= ( ( C302 + ( 1 + 1 ) ) - D56 );
L939: ( dom ( ( ( C302 + 2 ) -' D56 ) |-> <* ( D56 -' 1 ) *> ) ) = ( Seg ( ( C302 + 2 ) -' D56 ) ) by FUNCOP_1:13
.= ( Seg C306 ) by L934 , L938 , XREAL_0:def 2;
L940: ( dom ( Decomp (( ( C302 + 1 ) -' D56 ) , 2) ) ) = ( Seg ( len ( Decomp (( ( C302 + 1 ) -' D56 ) , 2) ) ) ) by FINSEQ_1:def 3
.= ( Seg C306 ) by L934 , L286;
L941: ( Seg ( len ( D55 . D56 ) ) ) = ( dom ( D55 . D56 ) ) by FINSEQ_1:def 3
.= ( ( Seg C306 ) /\ ( Seg C306 ) ) by L937 , L940 , L939 , PRE_POLY:def 4
.= ( Seg C306 );
L942: ( len ( D55 . D56 ) ) = C306 by L941 , FINSEQ_1:6;
L943: ( dom ( Decomp (( C306 -' 1 ) , 2) ) ) = ( Seg ( len ( Decomp (( C306 -' 1 ) , 2) ) ) ) by FINSEQ_1:def 3
.= ( Seg ( ( C306 -' 1 ) + 1 ) ) by L286
.= ( Seg C306 ) by L922 , XREAL_1:235;
L944: ( Seg ( len ( D54 . C306 ) ) ) = ( dom ( D54 . C306 ) ) by FINSEQ_1:def 3
.= ( ( Seg C306 ) /\ ( Seg C306 ) ) by L928 , L943 , L919 , PRE_POLY:def 4
.= ( Seg C306 );
L945: ( len ( D54 . C306 ) ) = C306 by L944 , FINSEQ_1:6;
L946: ( ( ( len ( Card D55 ) ) - C306 ) + 1 ) in ( Seg ( len D55 ) ) by L926 , L927 , FINSEQ_5:2;
L947: ( ( ( len ( Card D55 ) ) - C306 ) + 1 ) in ( dom D55 ) by L946 , FINSEQ_1:def 3;
L948: C306 in ( dom D54 ) by L920 , CARD_3:def 2;
thus L949: ( ( Card D54 ) . C306 ) = C306 by L948 , L945 , CARD_3:def 2
.= ( ( Card D55 ) . ( ( ( len ( Card D55 ) ) - C306 ) + 1 ) ) by L947 , L942 , CARD_3:def 2
.= ( ( Rev ( Card D55 ) ) . C306 ) by L917 , L920 , FINSEQ_5:def 3;
end;
L950: ( len ( Card D54 ) ) = ( len ( Rev ( Card D55 ) ) ) by L917 , FINSEQ_3:29;
L951: ( Card D54 ) = ( Rev ( Card D55 ) ) by L950 , L918 , FINSEQ_2:9;
reconsider D57 = ( Card D55 ) as (FinSequence of ( NAT ));
L952: ( Seg ( len ( FlattenSeq D54 ) ) ) = ( dom ( FlattenSeq D54 ) ) by FINSEQ_1:def 3;
L953:
now
let C307 being set;
thus L954: (C307 in ( rng ( FlattenSeq D54 ) ) implies C307 in ( rng ( FlattenSeq D55 ) ))
proof
assume L955: C307 in ( rng ( FlattenSeq D54 ) );
consider C308 being Nat such that L956: C308 in ( dom ( FlattenSeq D54 ) ) and L957: ( ( FlattenSeq D54 ) . C308 ) = C307 by L955 , FINSEQ_2:10;
consider C309 , C310 being (Element of ( NAT )) such that L958: C309 in ( dom D54 ) and L959: C310 in ( dom ( D54 . C309 ) ) and L960: C308 = ( ( Sum ( Card ( D54 | ( C309 -' 1 ) ) ) ) + C310 ) and L961: ( ( D54 . C309 ) . C310 ) = ( ( FlattenSeq D54 ) . C308 ) by L956 , PRE_POLY:29;
L962: ( D54 . C309 ) = ( ( Decomp (( C309 -' 1 ) , 2) ) ^^ ( C309 |-> <* ( ( C302 + 1 ) -' C309 ) *> ) ) by L908 , L958;
L963: C310 in ( ( dom ( Decomp (( C309 -' 1 ) , 2) ) ) /\ ( dom ( C309 |-> <* ( ( C302 + 1 ) -' C309 ) *> ) ) ) by L962 , L959 , PRE_POLY:def 4;
L964: C310 in ( dom ( C309 |-> <* ( ( C302 + 1 ) -' C309 ) *> ) ) by L963 , XBOOLE_0:def 4;
L965: C310 in ( Seg C309 ) by L964 , FUNCOP_1:13;
L966: C310 <= C309 by L965 , FINSEQ_1:1;
L967: ( C309 - C310 ) >= ( 0 ) by L966 , XREAL_1:48;
set D58 = ( ( C309 -' C310 ) + 1 );
set D59 = C310;
L968: ( dom ( ( ( C302 + 2 ) -' D59 ) |-> <* ( D59 -' 1 ) *> ) ) = ( Seg ( ( C302 + 2 ) -' D59 ) ) by FUNCOP_1:13;
L969: C309 in ( Seg ( C302 + 1 ) ) by L907 , L958 , FINSEQ_1:def 3;
L970: 1 <= C309 by L969 , FINSEQ_1:1;
L971: C310 in ( Seg ( ( C309 -' 1 ) + 1 ) ) by L970 , L965 , XREAL_1:235;
L972: C309 <= ( C302 + 1 ) by L969 , FINSEQ_1:1;
L973: ( ( C302 + 1 ) - C309 ) >= ( 0 ) by L972 , XREAL_1:48;
L974: ( C302 + 1 ) >= C310 by L972 , L966 , XXREAL_0:2;
L975: ( ( C302 + 1 ) - C310 ) >= ( 0 ) by L974 , XREAL_1:48;
L976: ( ( ( C302 + 1 ) -' D59 ) + 1 ) = ( ( ( C302 + 1 ) - D59 ) + 1 ) by L975 , XREAL_0:def 2
.= ( ( C302 + ( 1 + 1 ) ) - D59 );
L977: ( ( C302 + 1 ) -' C310 ) >= ( C309 -' C310 ) by L972 , NAT_D:42;
L978: ( ( ( C302 + 1 ) -' C310 ) + 1 ) >= ( ( C309 -' C310 ) + 1 ) by L977 , XREAL_1:6;
L979: ( ( ( ( C302 + 1 ) -' C310 ) + 1 ) - ( ( C309 -' C310 ) + 1 ) ) >= ( 0 ) by L978 , XREAL_1:48;
L980: ( ( ( ( C302 + 1 ) -' C310 ) + 1 ) -' ( ( C309 -' C310 ) + 1 ) ) = ( ( ( ( C302 + 1 ) -' C310 ) + 1 ) - ( ( C309 -' C310 ) + 1 ) ) by L979 , XREAL_0:def 2
.= ( ( ( ( C302 + 1 ) -' C310 ) + 1 ) - ( ( C309 - C310 ) + 1 ) ) by L967 , XREAL_0:def 2
.= ( ( ( ( C302 + 1 ) - C310 ) + 1 ) - ( ( 1 - C310 ) + C309 ) ) by L975 , XREAL_0:def 2
.= ( ( C302 + 1 ) -' C309 ) by L973 , XREAL_0:def 2;
L981: 1 <= C310 by L965 , FINSEQ_1:1;
L982: D59 in ( Seg ( C302 + 1 ) ) by L981 , L974 , FINSEQ_1:1;
L983: ( D55 . D59 ) = ( ( ( ( C302 + 2 ) -' D59 ) |-> <* ( D59 -' 1 ) *> ) ^^ ( Decomp (( ( C302 + 1 ) -' D59 ) , 2) ) ) by L982 , L911 , L912;
L984: ( C309 -' C310 ) <= ( ( C302 + 1 ) -' D59 ) by L972 , NAT_D:42;
L985: (1 <= ( ( C309 -' C310 ) + 1 ) & ( ( C309 -' C310 ) + 1 ) <= ( ( ( C302 + 1 ) -' D59 ) + 1 )) by L984 , NAT_1:11 , XREAL_1:6;
L986: D58 in ( Seg ( ( ( C302 + 1 ) -' D59 ) + 1 ) ) by L985 , FINSEQ_1:1;
L987: D58 in ( Seg ( ( C302 + 2 ) -' D59 ) ) by L986 , L976 , XREAL_0:def 2;
L988: ( dom ( Decomp (( ( C302 + 1 ) -' D59 ) , 2) ) ) = ( Seg ( len ( Decomp (( ( C302 + 1 ) -' D59 ) , 2) ) ) ) by FINSEQ_1:def 3
.= ( Seg ( ( ( C302 + 1 ) -' D59 ) + 1 ) ) by L286
.= ( Seg ( ( C302 + 2 ) -' D59 ) ) by L976 , XREAL_0:def 2;
L989: ( dom ( D55 . D59 ) ) = ( ( Seg ( ( C302 + 2 ) -' D59 ) ) /\ ( Seg ( ( C302 + 2 ) -' D59 ) ) ) by L988 , L983 , L968 , PRE_POLY:def 4;
L990: D58 in ( dom ( D55 . D59 ) ) by L989 , L986 , L976 , XREAL_0:def 2;
L991: ( ( D55 . D59 ) . D58 ) = ( ( ( ( ( C302 + 2 ) -' D59 ) |-> <* ( D59 -' 1 ) *> ) . D58 ) ^ ( ( Decomp (( ( C302 + 1 ) -' D59 ) , 2) ) . D58 ) ) by L990 , L983 , PRE_POLY:def 4
.= ( <* ( D59 -' 1 ) *> ^ ( ( Decomp (( ( C302 + 1 ) -' D59 ) , 2) ) . D58 ) ) by L987 , FUNCOP_1:7
.= ( <* ( D59 -' 1 ) *> ^ <* ( D58 -' 1 ) , ( ( ( ( C302 + 1 ) -' D59 ) + 1 ) -' D58 ) *> ) by L986 , L498
.= <* ( C310 -' 1 ) , ( ( ( C309 -' C310 ) + 1 ) -' 1 ) , ( ( ( ( C302 + 1 ) -' C310 ) + 1 ) -' ( ( C309 -' C310 ) + 1 ) ) *> by FINSEQ_1:43
.= <* ( C310 -' 1 ) , ( C309 -' C310 ) , ( ( C302 + 1 ) -' C309 ) *> by L980 , NAT_D:34;
L992: D59 in ( dom D55 ) by L910 , L982 , FINSEQ_1:def 3;
L993: (( ( Sum ( Card ( D55 | ( D59 -' 1 ) ) ) ) + D58 ) in ( dom ( FlattenSeq D55 ) ) & ( ( D55 . D59 ) . D58 ) = ( ( FlattenSeq D55 ) . ( ( Sum ( Card ( D55 | ( D59 -' 1 ) ) ) ) + D58 ) )) by L992 , L990 , PRE_POLY:30;
L994: C307 = ( ( ( Decomp (( C309 -' 1 ) , 2) ) . C310 ) ^ ( ( C309 |-> <* ( ( C302 + 1 ) -' C309 ) *> ) . C310 ) ) by L957 , L959 , L961 , L962 , PRE_POLY:def 4
.= ( ( ( Decomp (( C309 -' 1 ) , 2) ) . C310 ) ^ <* ( ( C302 + 1 ) -' C309 ) *> ) by L965 , FUNCOP_1:7
.= ( <* ( C310 -' 1 ) , ( ( ( C309 -' 1 ) + 1 ) -' C310 ) *> ^ <* ( ( C302 + 1 ) -' C309 ) *> ) by L971 , L498
.= ( <* ( C310 -' 1 ) , ( C309 -' C310 ) *> ^ <* ( ( C302 + 1 ) -' C309 ) *> ) by L970 , XREAL_1:235
.= <* ( C310 -' 1 ) , ( C309 -' C310 ) , ( ( C302 + 1 ) -' C309 ) *> by FINSEQ_1:43;
thus L995: thesis by L994 , L991 , L993 , FUNCT_1:def 3;
end;

assume L996: C307 in ( rng ( FlattenSeq D55 ) );
consider C311 being Nat such that L997: C311 in ( dom ( FlattenSeq D55 ) ) and L998: ( ( FlattenSeq D55 ) . C311 ) = C307 by L996 , FINSEQ_2:10;
consider C312 , C313 being (Element of ( NAT )) such that L999: C312 in ( dom D55 ) and L1000: C313 in ( dom ( D55 . C312 ) ) and L1001: C311 = ( ( Sum ( Card ( D55 | ( C312 -' 1 ) ) ) ) + C313 ) and L1002: ( ( D55 . C312 ) . C313 ) = ( ( FlattenSeq D55 ) . C311 ) by L997 , PRE_POLY:29;
L1003: ( D55 . C312 ) = ( ( ( ( C302 + 2 ) -' C312 ) |-> <* ( C312 -' 1 ) *> ) ^^ ( Decomp (( ( C302 + 1 ) -' C312 ) , 2) ) ) by L911 , L999;
L1004: C313 in ( ( dom ( ( ( C302 + 2 ) -' C312 ) |-> <* ( C312 -' 1 ) *> ) ) /\ ( dom ( Decomp (( ( C302 + 1 ) -' C312 ) , 2) ) ) ) by L1003 , L1000 , PRE_POLY:def 4;
L1005: C313 in ( dom ( ( ( C302 + 2 ) -' C312 ) |-> <* ( C312 -' 1 ) *> ) ) by L1004 , XBOOLE_0:def 4;
L1006: C313 in ( Seg ( ( C302 + 2 ) -' C312 ) ) by L1005 , FUNCOP_1:13;
L1007: C313 >= 1 by L1006 , FINSEQ_1:1;
L1008: ( C313 - 1 ) >= ( 0 ) by L1007 , XREAL_1:48;
L1009: C312 in ( Seg ( C302 + 1 ) ) by L910 , L999 , FINSEQ_1:def 3;
L1010: C312 <= ( C302 + 1 ) by L1009 , FINSEQ_1:1;
L1011: ( ( C302 + 1 ) - C312 ) >= ( 0 ) by L1010 , XREAL_1:48;
L1012: ( ( ( C302 + 1 ) -' C312 ) + 1 ) = ( ( ( C302 + 1 ) - C312 ) + 1 ) by L1011 , XREAL_0:def 2
.= ( ( C302 + ( 1 + 1 ) ) - C312 );
L1013: C313 in ( Seg ( ( ( C302 + 1 ) -' C312 ) + 1 ) ) by L1012 , L1006 , XREAL_0:def 2;
L1014: C313 <= ( ( ( C302 + 1 ) -' C312 ) + 1 ) by L1013 , FINSEQ_1:1;
L1015: ( ( ( ( C302 + 1 ) -' C312 ) + 1 ) - C313 ) >= ( 0 ) by L1014 , XREAL_1:48;
L1016: C313 <= ( ( ( C302 + 1 ) - C312 ) + 1 ) by L1011 , L1014 , XREAL_0:def 2;
L1017: ( C313 - 1 ) <= ( ( C302 + 1 ) - C312 ) by L1016 , XREAL_1:20;
L1018: ( ( C313 - 1 ) + C312 ) <= ( C302 + 1 ) by L1017 , XREAL_1:19;
L1019: ( ( C313 -' 1 ) + C312 ) <= ( C302 + 1 ) by L1018 , L1008 , XREAL_0:def 2;
L1020: ( ( C302 + 1 ) - ( ( C313 - 1 ) + C312 ) ) >= ( 0 ) by L1018 , XREAL_1:48;
L1021: ( ( C302 + 1 ) - ( ( C313 -' 1 ) + C312 ) ) >= ( 0 ) by L1020 , L1008 , XREAL_0:def 2;
L1022: ( ( C302 + 1 ) -' ( ( C313 -' 1 ) + C312 ) ) = ( ( C302 + 1 ) - ( ( C313 -' 1 ) + C312 ) ) by L1021 , XREAL_0:def 2
.= ( ( C302 + 1 ) - ( ( C313 - 1 ) + C312 ) ) by L1008 , XREAL_0:def 2
.= ( ( ( ( C302 + 1 ) - C312 ) + 1 ) - C313 )
.= ( ( ( ( C302 + 1 ) -' C312 ) + 1 ) - C313 ) by L1011 , XREAL_0:def 2
.= ( ( ( ( C302 + 1 ) -' C312 ) + 1 ) -' C313 ) by L1015 , XREAL_0:def 2;
L1023: C307 = ( ( ( ( ( C302 + 2 ) -' C312 ) |-> <* ( C312 -' 1 ) *> ) . C313 ) ^ ( ( Decomp (( ( C302 + 1 ) -' C312 ) , 2) ) . C313 ) ) by L998 , L1000 , L1002 , L1003 , PRE_POLY:def 4
.= ( <* ( C312 -' 1 ) *> ^ ( ( Decomp (( ( C302 + 1 ) -' C312 ) , 2) ) . C313 ) ) by L1006 , FUNCOP_1:7
.= ( <* ( C312 -' 1 ) *> ^ <* ( C313 -' 1 ) , ( ( ( ( C302 + 1 ) -' C312 ) + 1 ) -' C313 ) *> ) by L1013 , L498
.= <* ( C312 -' 1 ) , ( C313 -' 1 ) , ( ( ( ( C302 + 1 ) -' C312 ) + 1 ) -' C313 ) *> by FINSEQ_1:43;
set D60 = C312;
set D61 = ( ( C313 -' 1 ) + C312 );
L1024: ( ( C313 -' 1 ) + C312 ) >= C312 by NAT_1:11;
L1025: ( dom ( D61 |-> <* ( ( C302 + 1 ) -' D61 ) *> ) ) = ( Seg D61 ) by FUNCOP_1:13;
L1026: 1 <= C312 by L1009 , FINSEQ_1:1;
L1027: D60 in ( Seg D61 ) by L1026 , L1024 , FINSEQ_1:1;
L1028: D60 in ( Seg ( ( D61 -' 1 ) + 1 ) ) by L1027 , L1026 , L1024 , XREAL_1:235 , XXREAL_0:2;
L1029: ( ( C313 -' 1 ) + C312 ) >= 1 by L1026 , L1024 , XXREAL_0:2;
L1030: D61 in ( Seg ( C302 + 1 ) ) by L1029 , L1019 , FINSEQ_1:1;
L1031: ( D54 . D61 ) = ( ( Decomp (( D61 -' 1 ) , 2) ) ^^ ( D61 |-> <* ( ( C302 + 1 ) -' D61 ) *> ) ) by L1030 , L908 , L909;
L1032: ( dom ( Decomp (( D61 -' 1 ) , 2) ) ) = ( Seg ( len ( Decomp (( D61 -' 1 ) , 2) ) ) ) by FINSEQ_1:def 3
.= ( Seg ( ( D61 -' 1 ) + 1 ) ) by L286
.= ( Seg D61 ) by L1026 , L1024 , XREAL_1:235 , XXREAL_0:2;
L1033: ( dom ( D54 . D61 ) ) = ( ( Seg D61 ) /\ ( Seg D61 ) ) by L1032 , L1031 , L1025 , PRE_POLY:def 4;
L1034: D60 in ( dom ( D54 . D61 ) ) by L1033 , L1026 , L1024 , FINSEQ_1:1;
L1035: D61 in ( dom D54 ) by L907 , L1030 , FINSEQ_1:def 3;
L1036: (( ( Sum ( Card ( D54 | ( D61 -' 1 ) ) ) ) + D60 ) in ( dom ( FlattenSeq D54 ) ) & ( ( D54 . D61 ) . D60 ) = ( ( FlattenSeq D54 ) . ( ( Sum ( Card ( D54 | ( D61 -' 1 ) ) ) ) + D60 ) )) by L1035 , L1034 , PRE_POLY:30;
L1037: ( ( D54 . D61 ) . D60 ) = ( ( ( Decomp (( D61 -' 1 ) , 2) ) . D60 ) ^ ( ( D61 |-> <* ( ( C302 + 1 ) -' D61 ) *> ) . D60 ) ) by L1031 , L1034 , PRE_POLY:def 4
.= ( ( ( Decomp (( D61 -' 1 ) , 2) ) . D60 ) ^ <* ( ( C302 + 1 ) -' D61 ) *> ) by L1027 , FUNCOP_1:7
.= ( <* ( D60 -' 1 ) , ( ( ( D61 -' 1 ) + 1 ) -' D60 ) *> ^ <* ( ( C302 + 1 ) -' D61 ) *> ) by L1028 , L498
.= <* ( D60 -' 1 ) , ( ( ( D61 -' 1 ) + 1 ) -' D60 ) , ( ( C302 + 1 ) -' D61 ) *> by FINSEQ_1:43
.= <* ( C312 -' 1 ) , ( ( ( C313 -' 1 ) + C312 ) -' C312 ) , ( ( C302 + 1 ) -' ( ( C313 -' 1 ) + C312 ) ) *> by L1026 , L1024 , XREAL_1:235 , XXREAL_0:2
.= <* ( C312 -' 1 ) , ( C313 -' 1 ) , ( ( ( ( C302 + 1 ) -' C312 ) + 1 ) -' C313 ) *> by L1022 , NAT_D:34;
thus L1038: C307 in ( rng ( FlattenSeq D54 ) ) by L1037 , L1023 , L1036 , FUNCT_1:def 3;
end;
L1039: ( rng ( FlattenSeq D54 ) ) = ( rng ( FlattenSeq D55 ) ) by L953 , TARSKI:1;
L1040:
now
L1041: ( ( C302 + 1 ) + 1 ) >= ( C302 + 1 ) by NAT_1:11;
let C314 , C315 being set;
assume that
L1042: C314 in ( dom ( FlattenSeq D55 ) )
and
L1043: C315 in ( dom ( FlattenSeq D55 ) )
and
L1044: ( ( FlattenSeq D55 ) . C314 ) = ( ( FlattenSeq D55 ) . C315 );
consider C316 , C317 being (Element of ( NAT )) such that L1045: C316 in ( dom D55 ) and L1046: C317 in ( dom ( D55 . C316 ) ) and L1047: C314 = ( ( Sum ( Card ( D55 | ( C316 -' 1 ) ) ) ) + C317 ) and L1048: ( ( D55 . C316 ) . C317 ) = ( ( FlattenSeq D55 ) . C314 ) by L1042 , PRE_POLY:29;
L1049: ( D55 . C316 ) = ( ( ( ( C302 + 2 ) -' C316 ) |-> <* ( C316 -' 1 ) *> ) ^^ ( Decomp (( ( C302 + 1 ) -' C316 ) , 2) ) ) by L911 , L1045;
L1050: C316 in ( Seg ( C302 + 1 ) ) by L910 , L1045 , FINSEQ_1:def 3;
L1051: C316 <= ( C302 + 1 ) by L1050 , FINSEQ_1:1;
L1052: ( ( C302 + 1 ) + 1 ) >= C316 by L1051 , L1041 , XXREAL_0:2;
L1053: ( ( C302 + 2 ) - C316 ) >= ( 0 ) by L1052 , XREAL_1:48;
L1054: ( ( C302 + 1 ) - C316 ) >= ( 0 ) by L1051 , XREAL_1:48;
L1055: ( ( ( C302 + 1 ) -' C316 ) + 1 ) = ( ( ( C302 + 1 ) - C316 ) + 1 ) by L1054 , XREAL_0:def 2
.= ( ( C302 + 2 ) -' C316 ) by L1053 , XREAL_0:def 2;
L1056: ( dom ( ( ( C302 + 2 ) -' C316 ) |-> <* ( C316 -' 1 ) *> ) ) = ( Seg ( ( C302 + 2 ) -' C316 ) ) by FUNCOP_1:13;
L1057: ( dom ( Decomp (( ( C302 + 1 ) -' C316 ) , 2) ) ) = ( Seg ( len ( Decomp (( ( C302 + 1 ) -' C316 ) , 2) ) ) ) by FINSEQ_1:def 3
.= ( Seg ( ( C302 + 2 ) -' C316 ) ) by L1055 , L286;
L1058: ( dom ( D55 . C316 ) ) = ( ( Seg ( ( C302 + 2 ) -' C316 ) ) /\ ( Seg ( ( C302 + 2 ) -' C316 ) ) ) by L1057 , L1049 , L1056 , PRE_POLY:def 4
.= ( Seg ( ( C302 + 2 ) -' C316 ) );
L1059: C317 in ( Seg ( len ( D55 . C316 ) ) ) by L1046 , FINSEQ_1:def 3;
L1060: C317 >= 1 by L1059 , FINSEQ_1:1;
consider C318 , C319 being (Element of ( NAT )) such that L1061: C318 in ( dom D55 ) and L1062: C319 in ( dom ( D55 . C318 ) ) and L1063: C315 = ( ( Sum ( Card ( D55 | ( C318 -' 1 ) ) ) ) + C319 ) and L1064: ( ( D55 . C318 ) . C319 ) = ( ( FlattenSeq D55 ) . C315 ) by L1043 , PRE_POLY:29;
L1065: ( D55 . C318 ) = ( ( ( ( C302 + 2 ) -' C318 ) |-> <* ( C318 -' 1 ) *> ) ^^ ( Decomp (( ( C302 + 1 ) -' C318 ) , 2) ) ) by L911 , L1061;
L1066: C318 in ( Seg ( C302 + 1 ) ) by L910 , L1061 , FINSEQ_1:def 3;
L1067: C318 <= ( C302 + 1 ) by L1066 , FINSEQ_1:1;
L1068: ( ( C302 + 1 ) + 1 ) >= C318 by L1067 , L1041 , XXREAL_0:2;
L1069: ( ( C302 + 2 ) - C318 ) >= ( 0 ) by L1068 , XREAL_1:48;
L1070: ( ( C302 + 1 ) - C318 ) >= ( 0 ) by L1067 , XREAL_1:48;
L1071: ( ( ( C302 + 1 ) -' C318 ) + 1 ) = ( ( ( C302 + 1 ) - C318 ) + 1 ) by L1070 , XREAL_0:def 2
.= ( ( C302 + 2 ) -' C318 ) by L1069 , XREAL_0:def 2;
L1072: ( dom ( ( ( C302 + 2 ) -' C318 ) |-> <* ( C318 -' 1 ) *> ) ) = ( Seg ( ( C302 + 2 ) -' C318 ) ) by FUNCOP_1:13;
L1073: ( dom ( Decomp (( ( C302 + 1 ) -' C318 ) , 2) ) ) = ( Seg ( len ( Decomp (( ( C302 + 1 ) -' C318 ) , 2) ) ) ) by FINSEQ_1:def 3
.= ( Seg ( ( C302 + 2 ) -' C318 ) ) by L1071 , L286;
L1074: ( dom ( D55 . C318 ) ) = ( ( Seg ( ( C302 + 2 ) -' C318 ) ) /\ ( Seg ( ( C302 + 2 ) -' C318 ) ) ) by L1073 , L1065 , L1072 , PRE_POLY:def 4
.= ( Seg ( ( C302 + 2 ) -' C318 ) );
L1075: ( ( D55 . C318 ) . C319 ) = ( ( ( ( ( C302 + 2 ) -' C318 ) |-> <* ( C318 -' 1 ) *> ) . C319 ) ^ ( ( Decomp (( ( C302 + 1 ) -' C318 ) , 2) ) . C319 ) ) by L1062 , L1065 , PRE_POLY:def 4
.= ( <* ( C318 -' 1 ) *> ^ ( ( Decomp (( ( C302 + 1 ) -' C318 ) , 2) ) . C319 ) ) by L1062 , L1074 , FUNCOP_1:7
.= ( <* ( C318 -' 1 ) *> ^ <* ( C319 -' 1 ) , ( ( ( ( C302 + 1 ) -' C318 ) + 1 ) -' C319 ) *> ) by L1062 , L1071 , L1074 , L498
.= <* ( C318 -' 1 ) , ( C319 -' 1 ) , ( ( ( ( C302 + 1 ) -' C318 ) + 1 ) -' C319 ) *> by FINSEQ_1:43;
L1076: C319 in ( Seg ( len ( D55 . C318 ) ) ) by L1062 , FINSEQ_1:def 3;
L1077: C319 >= 1 by L1076 , FINSEQ_1:1;
L1078: ( ( D55 . C316 ) . C317 ) = ( ( ( ( ( C302 + 2 ) -' C316 ) |-> <* ( C316 -' 1 ) *> ) . C317 ) ^ ( ( Decomp (( ( C302 + 1 ) -' C316 ) , 2) ) . C317 ) ) by L1046 , L1049 , PRE_POLY:def 4
.= ( <* ( C316 -' 1 ) *> ^ ( ( Decomp (( ( C302 + 1 ) -' C316 ) , 2) ) . C317 ) ) by L1046 , L1058 , FUNCOP_1:7
.= ( <* ( C316 -' 1 ) *> ^ <* ( C317 -' 1 ) , ( ( ( ( C302 + 1 ) -' C316 ) + 1 ) -' C317 ) *> ) by L1046 , L1055 , L1058 , L498
.= <* ( C316 -' 1 ) , ( C317 -' 1 ) , ( ( ( ( C302 + 1 ) -' C316 ) + 1 ) -' C317 ) *> by FINSEQ_1:43;
L1079: (( C316 -' 1 ) = ( C318 -' 1 ) & ( C317 -' 1 ) = ( C319 -' 1 )) by L1078 , L1044 , L1048 , L1064 , L1075 , FINSEQ_1:78;
thus L1080: C314 = C315 by L1079 , L1047 , L1063 , L1060 , L1077 , XREAL_1:234;
end;
L1081: ( FlattenSeq D55 ) is  one-to-one by L1040 , FUNCT_1:def 4;
L1082: ( len ( FlattenSeq D54 ) ) = ( Sum ( Card D54 ) ) by PRE_POLY:27
.= ( Sum D57 ) by L951 , L13
.= ( len ( FlattenSeq D55 ) ) by PRE_POLY:27;
L1083: ( FlattenSeq D54 ) is  one-to-one by L1082 , L1039 , L1081 , FINSEQ_4:61;
L1084: ( FlattenSeq D54 ) , ( FlattenSeq D55 ) are_fiberwise_equipotent  by L1083 , L1039 , L1081 , RFINSEQ:26;
consider C320 being (Permutation of ( dom ( FlattenSeq D55 ) )) such that L1085: ( FlattenSeq D54 ) = ( ( FlattenSeq D55 ) * C320 ) by L1084 , RFINSEQ:4;
L1086: ( dom ( Card D55 ) ) = ( dom D55 ) by CARD_3:def 2;
L1087: ( len ( Card D55 ) ) = ( len D55 ) by L1086 , FINSEQ_3:29;
consider C321 being (FinSequence of (the carrier of C298)) such that L1088: ( len C321 ) = ( C302 + 1 ) and L1089: ( ( ( C299 *' C300 ) *' C301 ) . C302 ) = ( Sum C321 ) and L1090: (for B222 being (Element of ( NAT )) holds (B222 in ( dom C321 ) implies ( C321 . B222 ) = ( ( ( C299 *' C300 ) . ( B222 -' 1 ) ) * ( C301 . ( ( C302 + 1 ) -' B222 ) ) ))) by L803;
L1091: ( dom C321 ) = ( Seg ( C302 + 1 ) ) by L1088 , FINSEQ_1:def 3;
deffunc H7(Nat) = ( prodTuples (C299 , C300 , C301 , (( D54 /. $1 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * )))) );
consider C322 being (FinSequence of ( (the carrier of C298) * )) such that L1092: ( len C322 ) = ( len D54 ) and L1093: (for B223 being Nat holds (B223 in ( dom C322 ) implies ( C322 . B223 ) = H7(B223))) from FINSEQ_2:sch 1;
L1094: ( dom C322 ) = ( Seg ( len D54 ) ) by L1092 , FINSEQ_1:def 3;
L1095:
now
let C323 being Nat;
L1096: ( dom ( C323 |-> <* ( ( C302 + 1 ) -' C323 ) *> ) ) = ( Seg C323 ) by FUNCOP_1:13;
consider C324 being (FinSequence of (the carrier of C298)) such that L1097: ( len C324 ) = ( ( C323 -' 1 ) + 1 ) and L1098: ( ( C299 *' C300 ) . ( C323 -' 1 ) ) = ( Sum C324 ) and L1099: (for B224 being (Element of ( NAT )) holds (B224 in ( dom C324 ) implies ( C324 . B224 ) = ( ( C299 . ( B224 -' 1 ) ) * ( C300 . ( ( ( C323 -' 1 ) + 1 ) -' B224 ) ) ))) by L803;
assume L1100: C323 in ( dom C321 );
L1101: 1 <= C323 by L1100 , L1091 , FINSEQ_1:1;
L1102: ( len C324 ) = C323 by L1101 , L1097 , XREAL_1:235;
L1103: ( len ( Decomp (( C323 -' 1 ) , 2) ) ) = ( ( C323 -' 1 ) + 1 ) by L286
.= C323 by L1101 , XREAL_1:235;
L1104: ( dom ( Decomp (( C323 -' 1 ) , 2) ) ) = ( Seg C323 ) by L1103 , FINSEQ_1:def 3;
L1105: ( dom C321 ) = ( dom C322 ) by L1088 , L907 , L1092 , FINSEQ_3:29;
L1106: ( C322 /. C323 ) = ( C322 . C323 ) by L1105 , L1100 , PARTFUN1:def 6
.= ( prodTuples (C299 , C300 , C301 , (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * )))) ) by L907 , L1093 , L1094 , L1091 , L1100;
L1107: ( dom C322 ) = ( dom D54 ) by L1092 , FINSEQ_3:29;
L1108: ( D54 /. C323 ) = ( D54 . C323 ) by L1107 , L1100 , L1105 , PARTFUN1:def 6
.= ( ( Decomp (( C323 -' 1 ) , 2) ) ^^ ( C323 |-> <* ( ( C302 + 1 ) -' C323 ) *> ) ) by L908 , L909 , L1091 , L1100;
L1109: ( dom ( D54 /. C323 ) ) = ( ( dom ( Decomp (( C323 -' 1 ) , 2) ) ) /\ ( dom ( C323 |-> <* ( ( C302 + 1 ) -' C323 ) *> ) ) ) by L1108 , PRE_POLY:def 4
.= ( Seg C323 ) by L1104 , L1096;
L1110: ( len ( prodTuples (C299 , C300 , C301 , (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * )))) ) ) = ( len (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) ) by L538
.= C323 by L1100 , L1109 , FINSEQ_1:def 3;
L1111: ( dom ( prodTuples (C299 , C300 , C301 , (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * )))) ) ) = ( Seg C323 ) by L1110 , FINSEQ_1:def 3;
L1112: ( dom ( C324 * ( C301 . ( ( C302 + 1 ) -' C323 ) ) ) ) = ( dom C324 ) by POLYNOM1:def 2;
L1113:
now
let C325 being Nat;
assume L1114: C325 in ( dom ( prodTuples (C299 , C300 , C301 , (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * )))) ) );
L1115: ( (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C325 ) = ( ( D54 /. C323 ) . C325 ) by L1114 , L1109 , L1111 , PARTFUN1:def 6
.= ( ( ( Decomp (( C323 -' 1 ) , 2) ) . C325 ) ^ ( ( C323 |-> <* ( ( C302 + 1 ) -' C323 ) *> ) . C325 ) ) by L1108 , L1109 , L1111 , L1114 , PRE_POLY:def 4
.= ( <* ( C325 -' 1 ) , ( ( ( C323 -' 1 ) + 1 ) -' C325 ) *> ^ ( ( C323 |-> <* ( ( C302 + 1 ) -' C323 ) *> ) . C325 ) ) by L1097 , L1102 , L1111 , L1114 , L498
.= ( <* ( C325 -' 1 ) , ( ( ( C323 -' 1 ) + 1 ) -' C325 ) *> ^ <* ( ( C302 + 1 ) -' C323 ) *> ) by L1111 , L1114 , FUNCOP_1:7
.= <* ( C325 -' 1 ) , ( ( ( C323 -' 1 ) + 1 ) -' C325 ) , ( ( C302 + 1 ) -' C323 ) *> by FINSEQ_1:43;
L1116: 1 in ( Seg 3 ) by ENUMSET1:def 1 , FINSEQ_3:1;
L1117: 1 in ( Seg ( len (( (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C325 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) ) ) by L1116 , L1115 , FINSEQ_1:45;
L1118: 1 in ( dom ( (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C325 ) ) by L1117 , FINSEQ_1:def 3;
L1119: ( (( (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C325 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 1 ) = ( ( (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C325 ) . 1 ) by L1118 , PARTFUN1:def 6
.= ( C325 -' 1 ) by L1115 , FINSEQ_1:45;
L1120: C325 in ( dom C324 ) by L1102 , L1111 , L1114 , FINSEQ_1:def 3;
L1121: ( C324 /. C325 ) = ( C324 . C325 ) by L1120 , PARTFUN1:def 6
.= ( ( C299 . ( C325 -' 1 ) ) * ( C300 . ( ( ( C323 -' 1 ) + 1 ) -' C325 ) ) ) by L1099 , L1120;
L1122: 3 in ( Seg 3 ) by ENUMSET1:def 1 , FINSEQ_3:1;
L1123: 3 in ( Seg ( len (( (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C325 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) ) ) by L1122 , L1115 , FINSEQ_1:45;
L1124: 3 in ( dom ( (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C325 ) ) by L1123 , FINSEQ_1:def 3;
L1125: ( (( (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C325 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 3 ) = ( ( (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C325 ) . 3 ) by L1124 , PARTFUN1:def 6
.= ( ( C302 + 1 ) -' C323 ) by L1115 , FINSEQ_1:45;
L1126: 2 in ( Seg 3 ) by ENUMSET1:def 1 , FINSEQ_3:1;
L1127: 2 in ( Seg ( len (( (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C325 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) ) ) by L1126 , L1115 , FINSEQ_1:45;
L1128: 2 in ( dom ( (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C325 ) ) by L1127 , FINSEQ_1:def 3;
L1129: ( (( (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C325 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 2 ) = ( (( (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C325 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) . 2 ) by L1128 , PARTFUN1:def 6
.= ( ( ( C323 -' 1 ) + 1 ) -' C325 ) by L1115 , FINSEQ_1:45;
thus L1130: ( ( prodTuples (C299 , C300 , C301 , (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * )))) ) . C325 ) = ( ( ( C299 . ( (( (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C325 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 1 ) ) * ( C300 . ( (( (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C325 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 2 ) ) ) * ( C301 . ( (( (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C325 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 3 ) ) ) by L1109 , L1111 , L1114 , L538
.= ( ( C324 * ( C301 . ( ( C302 + 1 ) -' C323 ) ) ) /. C325 ) by L1120 , L1121 , L1119 , L1129 , L1125 , POLYNOM1:def 2
.= ( ( C324 * ( C301 . ( ( C302 + 1 ) -' C323 ) ) ) . C325 ) by L1112 , L1120 , PARTFUN1:def 6;
end;
L1131: ( len C322 ) = ( len ( Sum C322 ) ) by MATRLIN:def 6;
L1132: ( dom C322 ) = ( dom ( Sum C322 ) ) by L1131 , FINSEQ_3:29;
L1133: ( len ( C324 * ( C301 . ( ( C302 + 1 ) -' C323 ) ) ) ) = ( len C324 ) by L1112 , FINSEQ_3:29;
L1134: ( prodTuples (C299 , C300 , C301 , (( D54 /. C323 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * )))) ) = ( C324 * ( C301 . ( ( C302 + 1 ) -' C323 ) ) ) by L1133 , L1110 , L1102 , L1113 , FINSEQ_2:9;
L1135: ( ( ( C299 *' C300 ) . ( C323 -' 1 ) ) * ( C301 . ( ( C302 + 1 ) -' C323 ) ) ) = ( Sum ( C324 * ( C301 . ( ( C302 + 1 ) -' C323 ) ) ) ) by L1098 , POLYNOM1:13;
thus L1136: ( C321 . C323 ) = ( Sum ( C324 * ( C301 . ( ( C302 + 1 ) -' C323 ) ) ) ) by L1135 , L1090 , L1100
.= ( ( Sum C322 ) /. C323 ) by L1100 , L1132 , L1105 , L1106 , L1134 , MATRLIN:def 6
.= ( ( Sum C322 ) . C323 ) by L1100 , L1132 , L1105 , PARTFUN1:def 6;
end;
deffunc H8(Nat) = ( prodTuples (C299 , C300 , C301 , (( D55 /. $1 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * )))) );
consider C326 being (FinSequence of ( (the carrier of C298) * )) such that L1137: ( len C326 ) = ( len D55 ) and L1138: (for B225 being Nat holds (B225 in ( dom C326 ) implies ( C326 . B225 ) = H8(B225))) from FINSEQ_2:sch 1;
L1139: ( dom C326 ) = ( Seg ( len D55 ) ) by L1137 , FINSEQ_1:def 3;
L1140:
now
let C327 being Nat;
L1141: ( dom ( ( ( C302 + 2 ) -' C327 ) |-> <* ( C327 -' 1 ) *> ) ) = ( Seg ( ( C302 + 2 ) -' C327 ) ) by FUNCOP_1:13;
consider C328 being (FinSequence of (the carrier of C298)) such that L1142: ( len C328 ) = ( ( ( C302 + 1 ) -' C327 ) + 1 ) and L1143: ( ( C300 *' C301 ) . ( ( C302 + 1 ) -' C327 ) ) = ( Sum C328 ) and L1144: (for B226 being (Element of ( NAT )) holds (B226 in ( dom C328 ) implies ( C328 . B226 ) = ( ( C300 . ( B226 -' 1 ) ) * ( C301 . ( ( ( ( C302 + 1 ) -' C327 ) + 1 ) -' B226 ) ) ))) by L803;
assume L1145: C327 in ( dom C305 );
L1146: C327 <= ( C302 + 1 ) by L1145 , L916 , FINSEQ_1:1;
L1147: ( ( C302 + 1 ) + 1 ) >= ( C302 + 1 ) by NAT_1:11;
L1148: ( ( C302 + 1 ) + 1 ) >= C327 by L1147 , L1146 , XXREAL_0:2;
L1149: ( ( C302 + 2 ) - C327 ) >= ( 0 ) by L1148 , XREAL_1:48;
L1150: ( ( C302 + 1 ) - C327 ) >= ( 0 ) by L1146 , XREAL_1:48;
L1151: ( ( ( C302 + 1 ) -' C327 ) + 1 ) = ( ( ( C302 + 1 ) - C327 ) + 1 ) by L1150 , XREAL_0:def 2
.= ( ( C302 + 2 ) -' C327 ) by L1149 , XREAL_0:def 2;
L1152: ( len ( Decomp (( ( C302 + 1 ) -' C327 ) , 2) ) ) = ( ( C302 + 2 ) -' C327 ) by L1151 , L286;
L1153: ( dom ( Decomp (( ( C302 + 1 ) -' C327 ) , 2) ) ) = ( Seg ( ( C302 + 2 ) -' C327 ) ) by L1152 , FINSEQ_1:def 3;
L1154: ( dom C305 ) = ( dom C326 ) by L913 , L910 , L1137 , FINSEQ_3:29;
L1155: ( C326 /. C327 ) = ( C326 . C327 ) by L1154 , L1145 , PARTFUN1:def 6
.= ( prodTuples (C299 , C300 , C301 , (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * )))) ) by L910 , L1138 , L1139 , L916 , L1145;
L1156: ( dom C326 ) = ( dom D55 ) by L1137 , FINSEQ_3:29;
L1157: ( D55 /. C327 ) = ( D55 . C327 ) by L1156 , L1145 , L1154 , PARTFUN1:def 6
.= ( ( ( ( C302 + 2 ) -' C327 ) |-> <* ( C327 -' 1 ) *> ) ^^ ( Decomp (( ( C302 + 1 ) -' C327 ) , 2) ) ) by L911 , L912 , L916 , L1145;
L1158: ( dom ( D55 /. C327 ) ) = ( ( dom ( ( ( C302 + 2 ) -' C327 ) |-> <* ( C327 -' 1 ) *> ) ) /\ ( dom ( Decomp (( ( C302 + 1 ) -' C327 ) , 2) ) ) ) by L1157 , PRE_POLY:def 4
.= ( Seg ( ( C302 + 2 ) -' C327 ) ) by L1153 , L1141;
L1159: ( len ( prodTuples (C299 , C300 , C301 , (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * )))) ) ) = ( len (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) ) by L538
.= ( ( C302 + 2 ) -' C327 ) by L1158 , FINSEQ_1:def 3;
L1160: ( dom ( prodTuples (C299 , C300 , C301 , (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * )))) ) ) = ( Seg ( ( C302 + 2 ) -' C327 ) ) by L1159 , FINSEQ_1:def 3;
L1161: ( dom ( ( C299 . ( C327 -' 1 ) ) * C328 ) ) = ( dom C328 ) by POLYNOM1:def 1;
L1162:
now
let C329 being Nat;
assume L1163: C329 in ( dom ( prodTuples (C299 , C300 , C301 , (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * )))) ) );
L1164: ( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) = ( ( D55 /. C327 ) . C329 ) by L1163 , L1158 , L1160 , PARTFUN1:def 6
.= ( ( ( ( ( C302 + 2 ) -' C327 ) |-> <* ( C327 -' 1 ) *> ) . C329 ) ^ ( ( Decomp (( ( C302 + 1 ) -' C327 ) , 2) ) . C329 ) ) by L1157 , L1158 , L1160 , L1163 , PRE_POLY:def 4
.= ( ( ( ( ( C302 + 2 ) -' C327 ) |-> <* ( C327 -' 1 ) *> ) . C329 ) ^ <* ( C329 -' 1 ) , ( ( ( ( C302 + 1 ) -' C327 ) + 1 ) -' C329 ) *> ) by L1151 , L1160 , L1163 , L498
.= ( <* ( C327 -' 1 ) *> ^ <* ( C329 -' 1 ) , ( ( ( ( C302 + 1 ) -' C327 ) + 1 ) -' C329 ) *> ) by L1160 , L1163 , FUNCOP_1:7
.= <* ( C327 -' 1 ) , ( C329 -' 1 ) , ( ( ( ( C302 + 1 ) -' C327 ) + 1 ) -' C329 ) *> by FINSEQ_1:43;
L1165: 1 in ( Seg 3 ) by ENUMSET1:def 1 , FINSEQ_3:1;
L1166: 1 in ( Seg ( len (( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) ) ) by L1165 , L1164 , FINSEQ_1:45;
L1167: 1 in ( dom ( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) ) by L1166 , FINSEQ_1:def 3;
L1168: ( (( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 1 ) = ( ( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) . 1 ) by L1167 , PARTFUN1:def 6
.= ( C327 -' 1 ) by L1164 , FINSEQ_1:45;
L1169: C329 in ( dom C328 ) by L1142 , L1151 , L1160 , L1163 , FINSEQ_1:def 3;
L1170: ( C328 /. C329 ) = ( C328 . C329 ) by L1169 , PARTFUN1:def 6
.= ( ( C300 . ( C329 -' 1 ) ) * ( C301 . ( ( ( ( C302 + 1 ) -' C327 ) + 1 ) -' C329 ) ) ) by L1144 , L1169;
L1171: 3 in ( Seg 3 ) by ENUMSET1:def 1 , FINSEQ_3:1;
L1172: 3 in ( Seg ( len (( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) ) ) by L1171 , L1164 , FINSEQ_1:45;
L1173: 3 in ( dom ( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) ) by L1172 , FINSEQ_1:def 3;
L1174: ( (( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 3 ) = ( ( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) . 3 ) by L1173 , PARTFUN1:def 6
.= ( ( ( ( C302 + 1 ) -' C327 ) + 1 ) -' C329 ) by L1164 , FINSEQ_1:45;
L1175: 2 in ( Seg 3 ) by ENUMSET1:def 1 , FINSEQ_3:1;
L1176: 2 in ( Seg ( len (( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) ) ) by L1175 , L1164 , FINSEQ_1:45;
L1177: 2 in ( dom ( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) ) by L1176 , FINSEQ_1:def 3;
L1178: ( (( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 2 ) = ( ( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) . 2 ) by L1177 , PARTFUN1:def 6
.= ( C329 -' 1 ) by L1164 , FINSEQ_1:45;
thus L1179: ( ( prodTuples (C299 , C300 , C301 , (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * )))) ) . C329 ) = ( ( ( C299 . ( (( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 1 ) ) * ( C300 . ( (( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 2 ) ) ) * ( C301 . ( (( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 3 ) ) ) by L1158 , L1160 , L1163 , L538
.= ( ( C299 . ( (( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 1 ) ) * ( ( C300 . ( (( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 2 ) ) * ( C301 . ( (( (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C329 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 3 ) ) ) ) by GROUP_1:def 3
.= ( ( ( C299 . ( C327 -' 1 ) ) * C328 ) /. C329 ) by L1169 , L1170 , L1168 , L1178 , L1174 , POLYNOM1:def 1
.= ( ( ( C299 . ( C327 -' 1 ) ) * C328 ) . C329 ) by L1161 , L1169 , PARTFUN1:def 6;
end;
L1180: ( len C326 ) = ( len ( Sum C326 ) ) by MATRLIN:def 6;
L1181: ( dom C326 ) = ( dom ( Sum C326 ) ) by L1180 , FINSEQ_3:29;
L1182: ( len ( ( C299 . ( C327 -' 1 ) ) * C328 ) ) = ( len C328 ) by L1161 , FINSEQ_3:29;
L1183: ( prodTuples (C299 , C300 , C301 , (( D55 /. C327 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * )))) ) = ( ( C299 . ( C327 -' 1 ) ) * C328 ) by L1182 , L1142 , L1151 , L1159 , L1162 , FINSEQ_2:9;
L1184: ( ( C299 . ( C327 -' 1 ) ) * ( ( C300 *' C301 ) . ( ( C302 + 1 ) -' C327 ) ) ) = ( Sum ( ( C299 . ( C327 -' 1 ) ) * C328 ) ) by L1143 , POLYNOM1:12;
thus L1185: ( C305 . C327 ) = ( Sum ( ( C299 . ( C327 -' 1 ) ) * C328 ) ) by L1184 , L915 , L1145
.= ( ( Sum C326 ) /. C327 ) by L1145 , L1181 , L1154 , L1155 , L1183 , MATRLIN:def 6
.= ( ( Sum C326 ) . C327 ) by L1145 , L1181 , L1154 , PARTFUN1:def 6;
end;
L1186: ( dom ( Card D55 ) ) = ( Seg ( C302 + 1 ) ) by L910 , L1086 , FINSEQ_1:def 3;
L1187:
now
let C330 being Nat;
assume L1188: C330 in ( dom ( Card D55 ) );
L1189: C330 in ( dom C326 ) by L1188 , L910 , L1137 , L1186 , FINSEQ_1:def 3;
L1190: ( C326 . C330 ) = ( prodTuples (C299 , C300 , C301 , (( D55 /. C330 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * )))) ) by L910 , L1138 , L1139 , L1186 , L1188;
L1191: ( len ( C326 . C330 ) ) = ( len ( D55 /. C330 ) ) by L1190 , L538
.= ( len ( D55 . C330 ) ) by L1086 , L1188 , PARTFUN1:def 6;
thus L1192: ( ( Card D55 ) . C330 ) = ( len ( D55 . C330 ) ) by L1086 , L1188 , CARD_3:def 2
.= ( ( Card C326 ) . C330 ) by L1189 , L1191 , CARD_3:def 2;
end;
L1193: ( dom ( Card C326 ) ) = ( dom C326 ) by CARD_3:def 2;
L1194: ( len ( Card C326 ) ) = ( len C326 ) by L1193 , FINSEQ_3:29;
L1195: ( Card D55 ) = ( Card C326 ) by L1194 , L1137 , L1087 , L1187 , FINSEQ_2:9;
L1196: ( len ( FlattenSeq D55 ) ) = ( len ( FlattenSeq C326 ) ) by L1195 , PRE_POLY:28;
L1197: ( dom ( FlattenSeq D55 ) ) = ( dom ( FlattenSeq C326 ) ) by L1196 , FINSEQ_3:29;
reconsider D62 = C320 as (Permutation of ( dom ( FlattenSeq C326 ) )) by L1197;
L1198: ( dom ( FlattenSeq C326 ) ) = ( Seg ( len ( FlattenSeq C326 ) ) ) by FINSEQ_1:def 3;
L1199:
now
let C331 being Nat;
assume L1200: C331 in ( dom ( FlattenSeq C326 ) );
consider C332 , C333 being (Element of ( NAT )) such that L1201: C332 in ( dom C326 ) and L1202: C333 in ( dom ( C326 . C332 ) ) and L1203: C331 = ( ( Sum ( Card ( C326 | ( C332 -' 1 ) ) ) ) + C333 ) and L1204: ( ( C326 . C332 ) . C333 ) = ( ( FlattenSeq C326 ) . C331 ) by L1200 , PRE_POLY:29;
L1205: C331 in ( dom ( FlattenSeq D55 ) ) by L1196 , L1198 , L1200 , FINSEQ_1:def 3;
consider C334 , C335 being (Element of ( NAT )) such that L1206: (C334 in ( dom D55 ) & C335 in ( dom ( D55 . C334 ) )) and L1207: C331 = ( ( Sum ( Card ( D55 | ( C334 -' 1 ) ) ) ) + C335 ) and L1208: ( ( D55 . C334 ) . C335 ) = ( ( FlattenSeq D55 ) . C331 ) by L1205 , PRE_POLY:29;
L1209: ( ( Sum ( ( Card C326 ) | ( C332 -' 1 ) ) ) + C333 ) = ( ( Sum ( Card ( C326 | ( C332 -' 1 ) ) ) ) + C333 ) by L574
.= ( ( Sum ( ( Card D55 ) | ( C334 -' 1 ) ) ) + C335 ) by L1203 , L1207 , L574;
L1210: (C332 = C334 & C333 = C335) by L1209 , L1195 , L1201 , L1202 , L1206 , L684;
L1211: C332 in ( Seg ( len D55 ) ) by L1137 , L1201 , FINSEQ_1:def 3;
L1212: C332 in ( dom D55 ) by L1211 , FINSEQ_1:def 3;
L1213: ( C326 . C332 ) = ( prodTuples (C299 , C300 , C301 , (( D55 /. C332 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * )))) ) by L1138 , L1201;
L1214: ( len ( C326 . C332 ) ) = ( len ( D55 /. C332 ) ) by L1213 , L538
.= ( len ( D55 . C332 ) ) by L1193 , L1086 , L1195 , L1201 , PARTFUN1:def 6;
L1215: C333 in ( Seg ( len ( D55 . C332 ) ) ) by L1214 , L1202 , FINSEQ_1:def 3;
L1216: C333 in ( Seg ( len ( D55 /. C332 ) ) ) by L1215 , L1212 , PARTFUN1:def 6;
L1217: C333 in ( dom ( D55 /. C332 ) ) by L1216 , FINSEQ_1:def 3;
L1218: ( (( D55 /. C332 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C333 ) = ( (( D55 /. C332 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) . C333 ) by L1217 , PARTFUN1:def 6
.= ( ( D55 . C332 ) . C333 ) by L1212 , PARTFUN1:def 6
.= ( ( FlattenSeq D55 ) /. C331 ) by L1205 , L1208 , L1210 , PARTFUN1:def 6;
L1219: ( Seg ( len ( D55 /. C332 ) ) ) = ( dom ( D55 /. C332 ) ) by FINSEQ_1:def 3;
thus L1220: ( ( FlattenSeq C326 ) . C331 ) = ( ( ( C299 . ( (( (( D55 /. C332 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C333 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 1 ) ) * ( C300 . ( (( (( D55 /. C332 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C333 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 2 ) ) ) * ( C301 . ( (( (( D55 /. C332 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C333 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 3 ) ) ) by L1219 , L1204 , L1213 , L1216 , L538
.= ( ( prodTuples (C299 , C300 , C301 , ( FlattenSeq D55 )) ) . C331 ) by L1197 , L1200 , L1218 , L538;
end;
L1221: ( dom ( Card D54 ) ) = ( dom D54 ) by CARD_3:def 2;
L1222: ( len ( Card D54 ) ) = ( len D54 ) by L1221 , FINSEQ_3:29;
L1223: ( dom ( Card D54 ) ) = ( Seg ( C302 + 1 ) ) by L907 , L1221 , FINSEQ_1:def 3;
L1224:
now
let C336 being Nat;
assume L1225: C336 in ( dom ( Card D54 ) );
L1226: C336 in ( dom C322 ) by L1225 , L907 , L1092 , L1223 , FINSEQ_1:def 3;
L1227: ( C322 . C336 ) = ( prodTuples (C299 , C300 , C301 , (( D54 /. C336 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * )))) ) by L907 , L1093 , L1094 , L1223 , L1225;
L1228: ( len ( C322 . C336 ) ) = ( len ( D54 /. C336 ) ) by L1227 , L538
.= ( len ( D54 . C336 ) ) by L1221 , L1225 , PARTFUN1:def 6;
thus L1229: ( ( Card D54 ) . C336 ) = ( len ( D54 . C336 ) ) by L1221 , L1225 , CARD_3:def 2
.= ( ( Card C322 ) . C336 ) by L1226 , L1228 , CARD_3:def 2;
end;
L1230: ( dom ( Card C322 ) ) = ( dom C322 ) by CARD_3:def 2;
L1231: ( len ( Card C322 ) ) = ( len C322 ) by L1230 , FINSEQ_3:29;
L1232: ( Card D54 ) = ( Card C322 ) by L1231 , L1092 , L1222 , L1224 , FINSEQ_2:9;
L1233: ( len ( FlattenSeq C322 ) ) = ( len ( FlattenSeq D54 ) ) by L1232 , PRE_POLY:28;
L1234: ( Seg ( len ( FlattenSeq C322 ) ) ) = ( dom ( FlattenSeq C322 ) ) by FINSEQ_1:def 3;
L1235:
now
let C337 being Nat;
assume L1236: C337 in ( dom ( FlattenSeq C322 ) );
consider C338 , C339 being (Element of ( NAT )) such that L1237: C338 in ( dom C322 ) and L1238: C339 in ( dom ( C322 . C338 ) ) and L1239: C337 = ( ( Sum ( Card ( C322 | ( C338 -' 1 ) ) ) ) + C339 ) and L1240: ( ( C322 . C338 ) . C339 ) = ( ( FlattenSeq C322 ) . C337 ) by L1236 , PRE_POLY:29;
L1241: C337 in ( dom ( FlattenSeq D54 ) ) by L1233 , L952 , L1236 , FINSEQ_1:def 3;
consider C340 , C341 being (Element of ( NAT )) such that L1242: (C340 in ( dom D54 ) & C341 in ( dom ( D54 . C340 ) )) and L1243: C337 = ( ( Sum ( Card ( D54 | ( C340 -' 1 ) ) ) ) + C341 ) and L1244: ( ( D54 . C340 ) . C341 ) = ( ( FlattenSeq D54 ) . C337 ) by L1241 , PRE_POLY:29;
L1245: ( ( Sum ( ( Card C322 ) | ( C338 -' 1 ) ) ) + C339 ) = ( ( Sum ( Card ( C322 | ( C338 -' 1 ) ) ) ) + C339 ) by L574
.= ( ( Sum ( ( Card D54 ) | ( C340 -' 1 ) ) ) + C341 ) by L1239 , L1243 , L574;
L1246: (C338 = C340 & C339 = C341) by L1245 , L1232 , L1237 , L1238 , L1242 , L684;
L1247: C338 in ( Seg ( len D54 ) ) by L1092 , L1237 , FINSEQ_1:def 3;
L1248: C338 in ( dom D54 ) by L1247 , FINSEQ_1:def 3;
L1249: ( C322 . C338 ) = ( prodTuples (C299 , C300 , C301 , (( D54 /. C338 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * )))) ) by L1093 , L1237;
L1250: ( len ( C322 . C338 ) ) = ( len ( D54 /. C338 ) ) by L1249 , L538
.= ( len ( D54 . C338 ) ) by L1230 , L1221 , L1232 , L1237 , PARTFUN1:def 6;
L1251: C339 in ( Seg ( len ( D54 . C338 ) ) ) by L1250 , L1238 , FINSEQ_1:def 3;
L1252: C339 in ( Seg ( len ( D54 /. C338 ) ) ) by L1251 , L1248 , PARTFUN1:def 6;
L1253: C339 in ( dom ( D54 /. C338 ) ) by L1252 , FINSEQ_1:def 3;
L1254: ( (( D54 /. C338 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C339 ) = ( (( D54 /. C338 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) . C339 ) by L1253 , PARTFUN1:def 6
.= ( ( D54 . C338 ) . C339 ) by L1248 , PARTFUN1:def 6
.= ( ( FlattenSeq D54 ) /. C337 ) by L1241 , L1244 , L1246 , PARTFUN1:def 6;
L1255: ( Seg ( len ( D54 /. C338 ) ) ) = ( dom ( D54 /. C338 ) ) by FINSEQ_1:def 3;
thus L1256: ( ( FlattenSeq C322 ) . C337 ) = ( ( ( C299 . ( (( (( D54 /. C338 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C339 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 1 ) ) * ( C300 . ( (( (( D54 /. C338 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C339 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 2 ) ) ) * ( C301 . ( (( (( D54 /. C338 ) qua (Element of ( ( 3 -tuples_on ( NAT ) ) * ))) /. C339 ) qua (Element of ( 3 -tuples_on ( NAT ) ))) /. 3 ) ) ) by L1255 , L1240 , L1249 , L1252 , L538
.= ( ( ( C299 . ( ( ( FlattenSeq D54 ) /. C337 ) /. 1 ) ) * ( C300 . ( ( ( FlattenSeq D54 ) /. C337 ) /. 2 ) ) ) * ( C301 . ( ( ( FlattenSeq D54 ) /. C337 ) /. 3 ) ) ) by L1254
.= ( ( prodTuples (C299 , C300 , C301 , ( FlattenSeq D54 )) ) . C337 ) by L1233 , L952 , L1234 , L1236 , L538;
end;
L1257: ( len ( Sum C326 ) ) = ( C302 + 1 ) by L910 , L1137 , MATRLIN:def 6;
L1258: C305 = ( Sum C326 ) by L1257 , L913 , L1140 , FINSEQ_2:9;
L1259: ( Sum C305 ) = ( Sum ( FlattenSeq C326 ) ) by L1258 , POLYNOM1:14;
L1260: ( len ( FlattenSeq C326 ) ) = ( len ( prodTuples (C299 , C300 , C301 , ( FlattenSeq D55 )) ) ) by L1196 , L538;
L1261: ( FlattenSeq C326 ) = ( prodTuples (C299 , C300 , C301 , ( FlattenSeq D55 )) ) by L1260 , L1199 , FINSEQ_2:9;
L1262: ( len ( FlattenSeq C322 ) ) = ( len ( prodTuples (C299 , C300 , C301 , ( FlattenSeq D54 )) ) ) by L1233 , L538;
L1263: ( FlattenSeq C322 ) = ( prodTuples (C299 , C300 , C301 , ( FlattenSeq D54 )) ) by L1262 , L1235 , FINSEQ_2:9;
L1264: ( FlattenSeq C322 ) = ( ( FlattenSeq C326 ) * D62 ) by L1263 , L1261 , L1085 , L557;
L1265: ( len ( Sum C322 ) ) = ( C302 + 1 ) by L907 , L1092 , MATRLIN:def 6;
L1266: C321 = ( Sum C322 ) by L1265 , L1088 , L1095 , FINSEQ_2:9;
L1267: ( Sum C321 ) = ( Sum ( FlattenSeq C322 ) ) by L1266 , POLYNOM1:14;
thus L1268: ( ( ( C299 *' C300 ) *' C301 ) . C302 ) = ( ( C299 *' ( C300 *' C301 ) ) . C302 ) by L1267 , L1089 , L914 , L1259 , L1264 , RLVECT_2:7;
end;
thus L1269: thesis by L906 , FUNCT_2:63;
end;
definition
let C342 being  Abelian  add-associative  right_zeroed  commutative non  empty doubleLoopStr;
let C343 , C344 being (sequence of C342);
redefine func C343 *' C344;

commutativity
proof
let C345 , C346 being (sequence of C342);
L1270:
now
let C347 being (Element of ( NAT ));
consider C348 being (FinSequence of (the carrier of C342)) such that L1271: ( len C348 ) = ( C347 + 1 ) and L1272: ( ( C345 *' C346 ) . C347 ) = ( Sum C348 ) and L1273: (for B227 being (Element of ( NAT )) holds (B227 in ( dom C348 ) implies ( C348 . B227 ) = ( ( C345 . ( B227 -' 1 ) ) * ( C346 . ( ( C347 + 1 ) -' B227 ) ) ))) by L803;
consider C349 being (FinSequence of (the carrier of C342)) such that L1274: ( len C349 ) = ( C347 + 1 ) and L1275: ( ( C346 *' C345 ) . C347 ) = ( Sum C349 ) and L1276: (for B228 being (Element of ( NAT )) holds (B228 in ( dom C349 ) implies ( C349 . B228 ) = ( ( C346 . ( B228 -' 1 ) ) * ( C345 . ( ( C347 + 1 ) -' B228 ) ) ))) by L803;
L1277:
now
let C350 being Nat;
assume L1278: C350 in ( dom C348 );
L1279: 1 <= C350 by L1278 , FINSEQ_3:25;
L1280: ( C350 - 1 ) >= ( 0 ) by L1279 , XREAL_1:48;
L1281: C350 <= ( C347 + 1 ) by L1271 , L1278 , FINSEQ_3:25;
L1282: ( ( C347 + 1 ) - C350 ) >= ( 0 ) by L1281 , XREAL_1:48;
reconsider D63 = ( ( ( len C349 ) - C350 ) + 1 ) as (Element of ( NAT )) by L1282 , L1274 , INT_1:3;
L1283: ( ( C347 + 1 ) -' C350 ) = ( ( ( ( C347 + 1 ) - C350 ) + 1 ) - 1 ) by L1282 , XREAL_0:def 2
.= ( D63 -' 1 ) by L1274 , L1282 , XREAL_0:def 2;
L1284: ( 1 - C350 ) <= ( 0 ) by L1279 , XREAL_1:47;
L1285: ( C347 + ( 1 - C350 ) ) <= ( C347 + (( 0 ) qua Nat) ) by L1284 , XREAL_1:6;
L1286: D63 <= ( C347 + 1 ) by L1285 , L1274 , XREAL_1:6;
L1287: ( ( C347 + 1 ) - D63 ) >= ( 0 ) by L1286 , XREAL_1:48;
L1288: ( ( C347 + 1 ) -' D63 ) = ( ( C347 + 1 ) - ( ( C347 + 1 ) - ( C350 - 1 ) ) ) by L1287 , L1274 , XREAL_0:def 2
.= ( C350 -' 1 ) by L1280 , XREAL_0:def 2;
L1289: ( ( ( C347 + 1 ) - C350 ) + 1 ) >= ( (( 0 ) qua Nat) + 1 ) by L1282 , XREAL_1:6;
L1290: D63 in ( dom C349 ) by L1289 , L1274 , L1286 , FINSEQ_3:25;
thus L1291: ( C348 . C350 ) = ( ( C345 . ( C350 -' 1 ) ) * ( C346 . ( ( C347 + 1 ) -' C350 ) ) ) by L1273 , L1278
.= ( C349 . ( ( ( len C349 ) - C350 ) + 1 ) ) by L1276 , L1290 , L1288 , L1283;
end;
L1292: C348 = ( Rev C349 ) by L1277 , L1271 , L1274 , FINSEQ_5:def 3;
thus L1293: ( ( C345 *' C346 ) . C347 ) = ( ( C346 *' C345 ) . C347 ) by L1292 , L1272 , L1275 , L7;
end;
thus L1294: ( C345 *' C346 ) = ( C346 *' C345 ) by L1270 , FUNCT_2:63;
end;
end;
theorem
L1296: (for B229 being  add-associative  right_zeroed  right_complementable  right-distributive non  empty doubleLoopStr holds (for B230 being (sequence of B229) holds ( B230 *' ( 0_. B229 ) ) = ( 0_. B229 )))
proof
let C351 being  add-associative  right_zeroed  right_complementable  right-distributive non  empty doubleLoopStr;
let C352 being (sequence of C351);
L1297:
now
let C353 being (Element of ( NAT ));
consider C354 being (FinSequence of (the carrier of C351)) such that L1298: ( len C354 ) = ( C353 + 1 ) and L1299: ( ( C352 *' ( 0_. C351 ) ) . C353 ) = ( Sum C354 ) and L1300: (for B231 being (Element of ( NAT )) holds (B231 in ( dom C354 ) implies ( C354 . B231 ) = ( ( C352 . ( B231 -' 1 ) ) * ( ( 0_. C351 ) . ( ( C353 + 1 ) -' B231 ) ) ))) by L803;
L1301:
now
let C355 being (Element of ( NAT ));
assume L1302: C355 in ( dom C354 );
thus L1303: ( C354 . C355 ) = ( ( C352 . ( C355 -' 1 ) ) * ( ( 0_. C351 ) . ( ( C353 + 1 ) -' C355 ) ) ) by L1302 , L1300
.= ( ( C352 . ( C355 -' 1 ) ) * ( 0. C351 ) ) by FUNCOP_1:7
.= ( 0. C351 ) by VECTSP_1:6;
end;
thus L1304: ( ( C352 *' ( 0_. C351 ) ) . C353 ) = ( 0. C351 ) by L1301 , L1299 , L1
.= ( ( 0_. C351 ) . C353 ) by FUNCOP_1:7;
end;
thus L1305: thesis by L1297 , FUNCT_2:63;
end;
theorem
L1306: (for B232 being  add-associative  right_zeroed  well-unital  right_complementable  right-distributive non  empty doubleLoopStr holds (for B233 being (sequence of B232) holds ( B233 *' ( 1_. B232 ) ) = B233))
proof
let C356 being  add-associative  right_zeroed  well-unital  right_complementable  right-distributive non  empty doubleLoopStr;
let C357 being (sequence of C356);
L1307:
now
let C358 being (Element of ( NAT ));
consider C359 being (FinSequence of (the carrier of C356)) such that L1308: ( len C359 ) = ( C358 + 1 ) and L1309: ( ( C357 *' ( 1_. C356 ) ) . C358 ) = ( Sum C359 ) and L1310: (for B234 being (Element of ( NAT )) holds (B234 in ( dom C359 ) implies ( C359 . B234 ) = ( ( C357 . ( B234 -' 1 ) ) * ( ( 1_. C356 ) . ( ( C358 + 1 ) -' B234 ) ) ))) by L803;
L1311: ( C358 + 1 ) in ( Seg ( len C359 ) ) by L1308 , FINSEQ_1:4;
L1312: ( C358 + 1 ) in ( dom C359 ) by L1311 , FINSEQ_1:def 3;
L1313:
now
let C360 being (Element of ( NAT ));
assume L1314: C360 in ( dom ( Del (C359 , ( C358 + 1 )) ) );
L1315: C360 in ( Seg ( len ( Del (C359 , ( C358 + 1 )) ) ) ) by L1314 , FINSEQ_1:def 3;
L1316: C360 in ( Seg C358 ) by L1315 , L1308 , PRE_POLY:12;
L1317: C360 <= C358 by L1316 , FINSEQ_1:1;
L1318: C360 < ( C358 + 1 ) by L1317 , NAT_1:13;
L1319: ( ( C358 + 1 ) - C360 ) <> ( 0 ) by L1317 , NAT_1:13;
L1320: ( ( C358 + 1 ) - C360 ) >= ( 0 ) by L1318 , XREAL_1:48;
L1321: ( ( C358 + 1 ) -' C360 ) <> ( 0 ) by L1320 , L1319 , XREAL_0:def 2;
L1322: 1 <= C360 by L1315 , FINSEQ_1:1;
L1323: C360 in ( Seg ( C358 + 1 ) ) by L1322 , L1318 , FINSEQ_1:1;
L1324: C360 in ( dom C359 ) by L1323 , L1308 , FINSEQ_1:def 3;
thus L1325: ( ( Del (C359 , ( C358 + 1 )) ) . C360 ) = ( C359 . C360 ) by L1318 , FINSEQ_3:110
.= ( ( C357 . ( C360 -' 1 ) ) * ( ( 1_. C356 ) . ( ( C358 + 1 ) -' C360 ) ) ) by L1310 , L1324
.= ( ( C357 . ( C360 -' 1 ) ) * ( 0. C356 ) ) by L1321 , L796
.= ( 0. C356 ) by VECTSP_1:6;
end;
L1326: ( Sum ( Del (C359 , ( C358 + 1 )) ) ) = ( 0. C356 ) by L1313 , L1;
L1327: C359 = ( ( Del (C359 , ( C358 + 1 )) ) ^ <* ( C359 . ( C358 + 1 ) ) *> ) by L1308 , PRE_POLY:13
.= ( ( Del (C359 , ( C358 + 1 )) ) ^ <* ( C359 /. ( C358 + 1 ) ) *> ) by L1312 , PARTFUN1:def 6;
L1328: ( Sum C359 ) = ( ( Sum ( Del (C359 , ( C358 + 1 )) ) ) + ( Sum <* ( C359 /. ( C358 + 1 ) ) *> ) ) by L1327 , RLVECT_1:41
.= ( ( Sum ( Del (C359 , ( C358 + 1 )) ) ) + ( C359 /. ( C358 + 1 ) ) ) by RLVECT_1:44;
L1329: ( C359 /. ( C358 + 1 ) ) = ( C359 . ( C358 + 1 ) ) by L1312 , PARTFUN1:def 6
.= ( ( C357 . ( ( C358 + 1 ) -' 1 ) ) * ( ( 1_. C356 ) . ( ( C358 + 1 ) -' ( C358 + 1 ) ) ) ) by L1310 , L1312
.= ( ( C357 . C358 ) * ( ( 1_. C356 ) . ( ( C358 + 1 ) -' ( C358 + 1 ) ) ) ) by NAT_D:34
.= ( ( C357 . C358 ) * ( ( 1_. C356 ) . ( 0 ) ) ) by XREAL_1:232
.= ( ( C357 . C358 ) * ( 1_ C356 ) ) by L796
.= ( C357 . C358 ) by VECTSP_1:def 4;
thus L1330: ( ( C357 *' ( 1_. C356 ) ) . C358 ) = ( C357 . C358 ) by L1329 , L1309 , L1328 , L1326 , RLVECT_1:4;
end;
thus L1331: thesis by L1307 , FUNCT_2:63;
end;
begin
definition
let C361 being  add-associative  right_zeroed  right_complementable  distributive non  empty doubleLoopStr;
func Polynom-Ring C361 ->  strict non  empty doubleLoopStr means 
:L1332: ((for B235 being set holds (B235 in (the carrier of it) iff B235 is (Polynomial of C361))) & (for B236 , B237 being (Element of it) holds (for B238 , B239 being (sequence of C361) holds ((B236 = B238 & B237 = B239) implies ( B236 + B237 ) = ( B238 + B239 )))) & (for B240 , B241 being (Element of it) holds (for B242 , B243 being (sequence of C361) holds ((B240 = B242 & B241 = B243) implies ( B240 * B241 ) = ( B242 *' B243 )))) & ( 0. it ) = ( 0_. C361 ) & ( 1. it ) = ( 1_. C361 ));
existence
proof
L1333: ( 0_. C361 ) in { B244 where B244 is (Polynomial of C361) : (not contradiction) };
reconsider D64 = { B245 where B245 is (Polynomial of C361) : (not contradiction) } as non  empty set by L1333;
reconsider D65 = ( 0_. C361 ) as (Element of D64) by L1333;
defpred S11[ set , set , set ] means (ex B246 , B247 being (Polynomial of C361) st (B246 = $1 & B247 = $2 & $3 = ( B246 + B247 )));
L1334: (for B248 , B249 being (Element of D64) holds (ex B250 being (Element of D64) st S11[ B248 , B249 , B250 ]))
proof
let C362 , C363 being (Element of D64);
L1335: C362 in D64;
consider C364 being (Polynomial of C361) such that L1336: C362 = C364 by L1335;
L1337: C363 in D64;
consider C365 being (Polynomial of C361) such that L1338: C363 = C365 by L1337;
L1339: ( C364 + C365 ) in D64;
reconsider D66 = ( C364 + C365 ) as (Element of D64) by L1339;
take D66;
take C364;
take C365;
thus L1340: thesis by L1336 , L1338;
end;
consider C366 being (Function of [: D64 , D64 :] , D64) such that L1341: (for B251 , B252 being (Element of D64) holds S11[ B251 , B252 , ( C366 . (B251 , B252) ) ]) from BINOP_1:sch 3(L1334);
L1342: ( 1_. C361 ) in { B253 where B253 is (Polynomial of C361) : (not contradiction) };
reconsider D67 = ( 1_. C361 ) as (Element of D64) by L1342;
defpred S12[ set , set , set ] means (ex B254 , B255 being (Polynomial of C361) st (B254 = $1 & B255 = $2 & $3 = ( B254 *' B255 )));
L1343: (for B256 , B257 being (Element of D64) holds (ex B258 being (Element of D64) st S12[ B256 , B257 , B258 ]))
proof
let C367 , C368 being (Element of D64);
L1344: C367 in D64;
consider C369 being (Polynomial of C361) such that L1345: C367 = C369 by L1344;
L1346: C368 in D64;
consider C370 being (Polynomial of C361) such that L1347: C368 = C370 by L1346;
L1348: ( C369 *' C370 ) in D64;
reconsider D68 = ( C369 *' C370 ) as (Element of D64) by L1348;
take D68;
take C369;
take C370;
thus L1349: thesis by L1345 , L1347;
end;
consider C371 being (Function of [: D64 , D64 :] , D64) such that L1350: (for B259 , B260 being (Element of D64) holds S12[ B259 , B260 , ( C371 . (B259 , B260) ) ]) from BINOP_1:sch 3(L1343);
reconsider D69 = doubleLoopStr (# D64 , C366 , C371 , D67 , D65 #) as  strict non  empty doubleLoopStr;
take D69;
thus L1351: (for B261 being set holds (B261 in (the carrier of D69) iff B261 is (Polynomial of C361)))
proof
let C372 being set;
thus L1352: (C372 in (the carrier of D69) implies C372 is (Polynomial of C361))
proof
assume L1353: C372 in (the carrier of D69);
L1354: (ex B262 being (Polynomial of C361) st C372 = B262) by L1353;
thus L1355: thesis by L1354;
end;

thus L1356: thesis;
end;

thus L1357: (for B263 , B264 being (Element of D69) holds (for B265 , B266 being (sequence of C361) holds ((B263 = B265 & B264 = B266) implies ( B263 + B264 ) = ( B265 + B266 ))))
proof
let C373 , C374 being (Element of D69);
let C375 , C376 being (sequence of C361);
assume L1358: (C373 = C375 & C374 = C376);
L1359: (ex B267 , B268 being (Polynomial of C361) st (B267 = C373 & B268 = C374 & ( C366 . (C373 , C374) ) = ( B267 + B268 ))) by L1341;
thus L1360: thesis by L1359 , L1358;
end;

thus L1361: (for B269 , B270 being (Element of D69) holds (for B271 , B272 being (sequence of C361) holds ((B269 = B271 & B270 = B272) implies ( B269 * B270 ) = ( B271 *' B272 ))))
proof
let C377 , C378 being (Element of D69);
let C379 , C380 being (sequence of C361);
assume L1362: (C377 = C379 & C378 = C380);
L1363: (ex B273 , B274 being (Polynomial of C361) st (B273 = C377 & B274 = C378 & ( C371 . (C377 , C378) ) = ( B273 *' B274 ))) by L1350;
thus L1364: thesis by L1363 , L1362;
end;

thus L1365: ( 0. D69 ) = ( 0_. C361 );
thus L1366: thesis;
end;
uniqueness
proof
let C381 , C382 being  strict non  empty doubleLoopStr;
assume that
L1367: (for B275 being set holds (B275 in (the carrier of C381) iff B275 is (Polynomial of C361)))
and
L1368: (for B276 , B277 being (Element of C381) holds (for B278 , B279 being (sequence of C361) holds ((B276 = B278 & B277 = B279) implies ( B276 + B277 ) = ( B278 + B279 ))))
and
L1369: (for B280 , B281 being (Element of C381) holds (for B282 , B283 being (sequence of C361) holds ((B280 = B282 & B281 = B283) implies ( B280 * B281 ) = ( B282 *' B283 ))))
and
L1370: (( 0. C381 ) = ( 0_. C361 ) & ( 1. C381 ) = ( 1_. C361 ))
and
L1371: (for B284 being set holds (B284 in (the carrier of C382) iff B284 is (Polynomial of C361)))
and
L1372: (for B285 , B286 being (Element of C382) holds (for B287 , B288 being (sequence of C361) holds ((B285 = B287 & B286 = B288) implies ( B285 + B286 ) = ( B287 + B288 ))))
and
L1373: (for B289 , B290 being (Element of C382) holds (for B291 , B292 being (sequence of C361) holds ((B289 = B291 & B290 = B292) implies ( B289 * B290 ) = ( B291 *' B292 ))))
and
L1374: (( 0. C382 ) = ( 0_. C361 ) & ( 1. C382 ) = ( 1_. C361 ));
L1375:
now
let C383 being set;
L1376: (C383 in (the carrier of C381) iff C383 is (Polynomial of C361)) by L1367;
thus L1377: (C383 in (the carrier of C381) iff C383 in (the carrier of C382)) by L1376 , L1371;
end;
L1378: (the carrier of C381) = (the carrier of C382) by L1375 , TARSKI:1;
L1379:
now
let C384 being (Element of C381);
let C385 being (Element of C382);
reconsider D70 = C385 as (Element of C381) by L1375;
reconsider D71 = C384 as (Element of C382) by L1375;
reconsider D72 = C384 as (sequence of C361) by L1367;
reconsider D73 = C385 as (sequence of C361) by L1371;
thus L1380: ( (the multF of C381) . (C384 , C385) ) = ( C384 * D70 )
.= ( D72 *' D73 ) by L1369
.= ( D71 * C385 ) by L1373
.= ( (the multF of C382) . (C384 , C385) );
end;
L1381:
now
let C386 being (Element of C381);
let C387 being (Element of C382);
reconsider D74 = C387 as (Element of C381) by L1375;
reconsider D75 = C386 as (Element of C382) by L1375;
reconsider D76 = C386 as (sequence of C361) by L1367;
reconsider D77 = C387 as (sequence of C361) by L1371;
thus L1382: ( (the addF of C381) . (C386 , C387) ) = ( C386 + D74 )
.= ( D76 + D77 ) by L1368
.= ( D75 + C387 ) by L1372
.= ( (the addF of C382) . (C386 , C387) );
end;
L1383: (the addF of C381) = (the addF of C382) by L1381 , L1378 , BINOP_1:2;
thus L1384: thesis by L1383 , L1370 , L1374 , L1378 , L1379 , BINOP_1:2;
end;
end;
registration
let C388 being  Abelian  add-associative  right_zeroed  right_complementable  distributive non  empty doubleLoopStr;
cluster ( Polynom-Ring C388 ) ->  Abelian;
coherence
proof
let C389 , C390 being (Element of ( Polynom-Ring C388 ));
reconsider D78 = C389 , D79 = C390 as (sequence of C388) by L1332;
thus L1386: ( C389 + C390 ) = ( D78 + D79 ) by L1332
.= ( C390 + C389 ) by L1332;
end;
end;
registration
let C391 being  add-associative  right_zeroed  right_complementable  distributive non  empty doubleLoopStr;
cluster ( Polynom-Ring C391 ) ->  add-associative;
coherence
proof
let C392 , C393 , C394 being (Element of ( Polynom-Ring C391 ));
reconsider D80 = C392 , D81 = C393 , D82 = C394 as (sequence of C391) by L1332;
L1388: ( C393 + C394 ) = ( D81 + D82 ) by L1332;
L1389: ( C392 + C393 ) = ( D80 + D81 ) by L1332;
thus L1390: ( ( C392 + C393 ) + C394 ) = ( ( D80 + D81 ) + D82 ) by L1389 , L1332
.= ( D80 + ( D81 + D82 ) ) by L765
.= ( C392 + ( C393 + C394 ) ) by L1388 , L1332;
end;
cluster ( Polynom-Ring C391 ) ->  right_zeroed;
coherence
proof
let C395 being (Element of ( Polynom-Ring C391 ));
reconsider D83 = C395 as (sequence of C391) by L1332;
L1391: ( 0. ( Polynom-Ring C391 ) ) = ( 0_. C391 ) by L1332;
thus L1392: ( C395 + ( 0. ( Polynom-Ring C391 ) ) ) = ( D83 + ( 0_. C391 ) ) by L1391 , L1332
.= C395 by L783;
end;
cluster ( Polynom-Ring C391 ) ->  right_complementable;
coherence
proof
let C396 being (Element of ( Polynom-Ring C391 ));
reconsider D84 = C396 as (Polynomial of C391) by L1332;
reconsider D85 = ( - D84 ) as (Element of ( Polynom-Ring C391 )) by L1332;
take D85;
thus L1393: ( C396 + D85 ) = ( D84 - D84 ) by L1332
.= ( 0_. C391 ) by L787
.= ( 0. ( Polynom-Ring C391 ) ) by L1332;
end;
end;
registration
let C397 being  Abelian  add-associative  right_zeroed  right_complementable  commutative  distributive non  empty doubleLoopStr;
cluster ( Polynom-Ring C397 ) ->  commutative;
coherence
proof
let C398 , C399 being (Element of ( Polynom-Ring C397 ));
reconsider D86 = C398 , D87 = C399 as (sequence of C397) by L1332;
thus L1395: ( C398 * C399 ) = ( D86 *' D87 ) by L1332
.= ( C399 * C398 ) by L1332;
end;
end;
registration
let C400 being  Abelian  add-associative  right_zeroed  right_complementable  well-unital  associative  distributive non  empty doubleLoopStr;
cluster ( Polynom-Ring C400 ) ->  associative;
coherence
proof
let C401 , C402 , C403 being (Element of ( Polynom-Ring C400 ));
reconsider D88 = C401 , D89 = C402 , D90 = C403 as (sequence of C400) by L1332;
L1397: ( C402 * C403 ) = ( D89 *' D90 ) by L1332;
L1398: ( C401 * C402 ) = ( D88 *' D89 ) by L1332;
thus L1399: ( ( C401 * C402 ) * C403 ) = ( ( D88 *' D89 ) *' D90 ) by L1398 , L1332
.= ( D88 *' ( D89 *' D90 ) ) by L905
.= ( C401 * ( C402 * C403 ) ) by L1397 , L1332;
end;
end;
L1401:
now
let C404 being  add-associative  right_zeroed  right_complementable  well-unital  Abelian  commutative  distributive non  empty doubleLoopStr;
set D91 = ( Polynom-Ring C404 );
let C405 , C406 being (Element of D91);
reconsider D92 = C405 as (Polynomial of C404) by L1332;
assume L1402: C406 = ( 1. D91 );
L1403: ( 1. D91 ) = ( 1_. C404 ) by L1332;
thus L1404: ( C405 * C406 ) = ( D92 *' ( 1_. C404 ) ) by L1403 , L1402 , L1332
.= C405 by L1306;
thus L1405: ( C406 * C405 ) = ( D92 *' ( 1_. C404 ) ) by L1402 , L1403 , L1332
.= C405 by L1306;
end;
registration
let C407 being  add-associative  right_zeroed  right_complementable  well-unital  Abelian  commutative  distributive non  empty doubleLoopStr;
cluster ( Polynom-Ring C407 ) ->  well-unital;
coherence
proof
let C408 being (Element of ( Polynom-Ring C407 ));
thus L1406: thesis by L1401;
end;
end;
registration
let C409 being  Abelian  add-associative  right_zeroed  right_complementable  distributive non  empty doubleLoopStr;
cluster ( Polynom-Ring C409 ) ->  distributive;
coherence
proof
let C410 , C411 , C412 being (Element of ( Polynom-Ring C409 ));
reconsider D93 = C410 , D94 = C411 , D95 = C412 as (sequence of C409) by L1332;
L1408: (( C410 * C411 ) = ( D93 *' D94 ) & ( C410 * C412 ) = ( D93 *' D95 )) by L1332;
L1409: ( C411 + C412 ) = ( D94 + D95 ) by L1332;
thus L1410: ( C410 * ( C411 + C412 ) ) = ( D93 *' ( D94 + D95 ) ) by L1409 , L1332
.= ( ( D93 *' D94 ) + ( D93 *' D95 ) ) by L855
.= ( ( C410 * C411 ) + ( C410 * C412 ) ) by L1408 , L1332;
L1411: (( C411 * C410 ) = ( D94 *' D93 ) & ( C412 * C410 ) = ( D95 *' D93 )) by L1332;
L1412: ( C411 + C412 ) = ( D94 + D95 ) by L1332;
thus L1413: ( ( C411 + C412 ) * C410 ) = ( ( D94 + D95 ) *' D93 ) by L1412 , L1332
.= ( ( D94 *' D93 ) + ( D95 *' D93 ) ) by L879
.= ( ( C411 * C410 ) + ( C412 * C410 ) ) by L1411 , L1332;
end;
end;
theorem
L1415: (for B293 being  add-associative  right_zeroed  right_complementable  well-unital  Abelian  commutative  distributive non  empty doubleLoopStr holds ( 1. ( Polynom-Ring B293 ) ) = ( 1_. B293 )) by L1332;
