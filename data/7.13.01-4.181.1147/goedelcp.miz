:: G{\"o}del's Completeness Theorem
::  by Patrick Braselmann and Peter Koepke
::
:: Received September 25, 2004
:: Copyright (c) 2004-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, SUBSET_1, CQC_LANG, QC_LANG1, XBOOLE_0, VALUAT_1,
      FINSEQ_1, HENMODEL, CQC_THE1, XBOOLEAN, BVFUNC_2, FUNCT_1, ORDINAL4,
      CALCUL_1, ARYTM_3, RELAT_1, CARD_1, XXREAL_0, TARSKI, ZF_MODEL, CQC_SIM1,
      REALSET1, SUBSTUT1, SUBSTUT2, ZF_LANG, ARYTM_1, CARD_3, ZFMISC_1,
      FINSET_1, MCART_1, GOEDELCP, ORDINAL1;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, XCMPLX_0, XXREAL_0, NAT_1,
      ORDINAL1, CARD_3, FINSEQ_1, FUNCT_1, QC_LANG1, QC_LANG2, QC_LANG3,
      NUMBERS, CQC_LANG, RELAT_1, FINSET_1, VALUAT_1, RELSET_1, FUNCT_2,
      CQC_SIM1, DOMAIN_1, XTUPLE_0, MCART_1, SUBSTUT1, SUBLEMMA, SUBSTUT2,
      CALCUL_1, HENMODEL;
 constructors SETFAM_1, DOMAIN_1, XXREAL_0, NAT_1, NAT_D, FINSEQ_2, QC_LANG3,
      CQC_SIM1, SUBSTUT2, CALCUL_1, HENMODEL, CARD_3, RELSET_1, XTUPLE_0;
 registrations SUBSET_1, RELAT_1, ORDINAL1, XXREAL_0, XREAL_0, CQC_LANG,
      HENMODEL, FINSEQ_1, FINSET_1, CARD_3, RELSET_1, XTUPLE_0;
 requirements REAL, NUMERALS, SUBSET, BOOLE, ARITHM;
 definitions TARSKI, XBOOLE_0, XTUPLE_0;
 theorems TARSKI, FUNCT_1, MCART_1, XBOOLE_0, XBOOLE_1, CQC_LANG, QC_LANG1,
      ZFMISC_1, RELAT_1, QC_LANG3, QC_LANG2, HENMODEL, CALCUL_1, SUBLEMMA,
      NAT_1, FINSEQ_1, VALUAT_1, FUNCT_2, SUBSTUT2, CQC_SIM1, CARD_4, CALCUL_2,
      SUPINF_2, XREAL_1, XXREAL_0, ORDINAL1;
 schemes XBOOLE_0, NAT_1, FUNCT_1, SUBSTUT2, RECDEF_1;

begin
registration
cluster  countable for QC-alphabet;
existence
proof
L1: [: ( NAT ) , ( NAT ) :] is QC-alphabet by QC_LANG1:def 1;
L2: [: ( NAT ) , ( NAT ) :] is  countable by CARD_4:7;
thus L3: thesis by L2 , L1;
end;
end;
definition
let R1 being QC-alphabet;
let R5 being (Subset of ( CQC-WFF R1 ));
attr R5 is  negation_faithful
means
:L5: (for R12 being (Element of ( CQC-WFF R1 )) holds (R5 |- R12 or R5 |- ( 'not' R12 )));
end;
definition
let R1 being QC-alphabet;
let R5 being (Subset of ( CQC-WFF R1 ));
attr R5 is  with_examples
means
:L7: (for R18 being (bound_QC-variable of R1) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (ex R21 being (bound_QC-variable of R1) st R5 |- ( ( 'not' ( Ex (R18 , R12) ) ) 'or' ( R12 . (R18 , R21) ) ))));
end;
theorem
L9: (for R1 being QC-alphabet holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R28 being  Consistent (Subset of ( CQC-WFF R1 )) holds (R28 is  negation_faithful implies (R28 |- R12 iff (not R28 |- ( 'not' R12 ))))))) by L5 , HENMODEL:def 2;
theorem
L10: (for R1 being QC-alphabet holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R14 being (Element of ( CQC-WFF R1 )) holds (for B1 being (FinSequence of ( CQC-WFF R1 )) holds (( |- ( B1 ^ <* ( ( 'not' R12 ) 'or' R14 ) *> ) &  |- ( B1 ^ <* R12 *> )) implies  |- ( B1 ^ <* R14 *> ))))))
proof
let R1 being QC-alphabet;
let R12 being (Element of ( CQC-WFF R1 ));
let R14 being (Element of ( CQC-WFF R1 ));
let C1 being (FinSequence of ( CQC-WFF R1 ));
assume that
L11:  |- ( C1 ^ <* ( ( 'not' R12 ) 'or' R14 ) *> )
and
L12:  |- ( C1 ^ <* R12 *> );
set D1 = ( ( C1 ^ <* ( 'not' R12 ) *> ) ^ <* R12 *> );
L13: ( Ant D1 ) = ( C1 ^ <* ( 'not' R12 ) *> ) by CALCUL_1:5;
L14: ( Ant ( C1 ^ <* R12 *> ) ) = C1 by CALCUL_1:5;
L15: ( Suc ( C1 ^ <* R12 *> ) ) = R12 by CALCUL_1:5;
L16: ( Suc ( C1 ^ <* R12 *> ) ) = ( Suc D1 ) by L15 , CALCUL_1:5;
L17:  |- D1 by L16 , L12 , L13 , L14 , CALCUL_1:8 , CALCUL_1:36;
set D2 = ( ( C1 ^ <* ( 'not' R12 ) *> ) ^ <* ( 'not' R12 ) *> );
L18: ( Ant D2 ) = ( C1 ^ <* ( 'not' R12 ) *> ) by CALCUL_1:5;
L19: ( Suc D2 ) = ( 'not' R12 ) by CALCUL_1:5;
L20: ( ( Ant D2 ) . ( ( len C1 ) + 1 ) ) = ( 'not' R12 ) by L18 , FINSEQ_1:42;
L21: ( ( len C1 ) + 1 ) = ( ( len C1 ) + ( len <* ( 'not' R12 ) *> ) ) by FINSEQ_1:39;
L22: ( ( len C1 ) + 1 ) = ( len ( Ant D2 ) ) by L21 , L18 , FINSEQ_1:22;
L23: ( ( len C1 ) + 1 ) in ( dom ( Ant D2 ) ) by L22 , L18 , CALCUL_1:10;
L24: ( Suc D2 ) is_tail_of ( Ant D2 ) by L23 , L19 , L20 , CALCUL_1:def 16;
L25:  |- D2 by L24 , CALCUL_1:33;
L26: ( ( 0 ) + 1 ) <= ( len D2 ) by CALCUL_1:10;
L27: ( Ant D1 ) = ( Ant D2 ) by L18 , CALCUL_1:5;
L28: ( 'not' ( Suc D1 ) ) = ( Suc D2 ) by L19 , CALCUL_1:5;
L29:  |- ( ( Ant D1 ) ^ <* ( 'not' ( Suc D1 ) ) *> ) by L28 , L25 , L26 , L27 , CALCUL_1:3;
L30:  |- ( ( Ant D1 ) ^ <* R14 *> ) by L29 , L17 , CALCUL_1:44;
set D3 = ( ( C1 ^ <* R14 *> ) ^ <* R14 *> );
L31: ( Ant D3 ) = ( C1 ^ <* R14 *> ) by CALCUL_1:5;
L32: ( Suc D3 ) = R14 by CALCUL_1:5;
L33: ( ( Ant D3 ) . ( ( len C1 ) + 1 ) ) = R14 by L31 , FINSEQ_1:42;
L34: ( ( len C1 ) + 1 ) = ( ( len C1 ) + ( len <* R14 *> ) ) by FINSEQ_1:39;
L35: ( ( len C1 ) + 1 ) = ( len ( Ant D3 ) ) by L34 , L31 , FINSEQ_1:22;
L36: ( ( len C1 ) + 1 ) in ( dom ( Ant D3 ) ) by L35 , L31 , CALCUL_1:10;
L37: ( Suc D3 ) is_tail_of ( Ant D3 ) by L36 , L32 , L33 , CALCUL_1:def 16;
L38:  |- D3 by L37 , CALCUL_1:33;
L39:  |- ( ( C1 ^ <* ( ( 'not' R12 ) 'or' R14 ) *> ) ^ <* R14 *> ) by L38 , L13 , L30 , CALCUL_1:53;
L40:  |- ( ( C1 ^ <* ( 'not' ( ( 'not' ( 'not' R12 ) ) '&' ( 'not' R14 ) ) ) *> ) ^ <* R14 *> ) by L39 , QC_LANG2:def 3;
set D4 = ( ( C1 ^ <* ( 'not' R14 ) *> ) ^ <* ( ( 'not' ( 'not' R12 ) ) '&' ( 'not' R14 ) ) *> );
L41: ( Suc D4 ) = ( ( 'not' ( 'not' R12 ) ) '&' ( 'not' R14 ) ) by CALCUL_1:5;
L42:  |- ( ( Ant D4 ) ^ <* ( 'not' ( 'not' R12 ) ) *> ) by L41 , L40 , CALCUL_1:40 , CALCUL_1:48;
L43:  |- ( ( Ant D4 ) ^ <* ( 'not' R14 ) *> ) by L40 , L41 , CALCUL_1:41 , CALCUL_1:48;
set D5 = ( ( Ant D4 ) ^ <* ( 'not' ( 'not' R12 ) ) *> );
set D6 = ( ( Ant D4 ) ^ <* ( 'not' R14 ) *> );
L44: ( Ant D5 ) = ( Ant D4 ) by CALCUL_1:5;
L45: ( Suc D5 ) = ( 'not' ( 'not' R12 ) ) by CALCUL_1:5;
L46: ( Ant D6 ) = ( Ant D4 ) by CALCUL_1:5;
L47: ( Suc D6 ) = ( 'not' R14 ) by CALCUL_1:5;
L48:  |- ( ( Ant D4 ) ^ <* ( ( 'not' ( 'not' R12 ) ) '&' ( 'not' R14 ) ) *> ) by L47 , L42 , L43 , L44 , L45 , L46 , CALCUL_1:39;
L49:  |- ( ( C1 ^ <* ( 'not' R14 ) *> ) ^ <* ( ( 'not' ( 'not' R12 ) ) '&' ( 'not' R14 ) ) *> ) by L48 , CALCUL_1:5;
L50:  |- ( ( C1 ^ <* ( 'not' ( ( 'not' ( 'not' R12 ) ) '&' ( 'not' R14 ) ) ) *> ) ^ <* R14 *> ) by L49 , CALCUL_1:48;
L51:  |- ( ( C1 ^ <* ( ( 'not' R12 ) 'or' R14 ) *> ) ^ <* R14 *> ) by L50 , QC_LANG2:def 3;
L52: 1 <= ( len ( C1 ^ <* ( ( 'not' R12 ) 'or' R14 ) *> ) ) by CALCUL_1:10;
L53:  |- ( ( Ant ( C1 ^ <* ( ( 'not' R12 ) 'or' R14 ) *> ) ) ^ <* R14 *> ) by L52 , L11 , L51 , CALCUL_1:45;
thus L54: thesis by L53 , CALCUL_1:5;
end;
theorem
L55: (for R1 being QC-alphabet holds (for R5 being (Subset of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R18 being (bound_QC-variable of R1) holds (R5 is  with_examples implies (R5 |- ( Ex (R18 , R12) ) iff (ex R21 being (bound_QC-variable of R1) st R5 |- ( R12 . (R18 , R21) ))))))))
proof
let R1 being QC-alphabet;
let R5 being (Subset of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
let R18 being (bound_QC-variable of R1);
assume L56: R5 is  with_examples;
thus L57: (R5 |- ( Ex (R18 , R12) ) implies (ex R21 being (bound_QC-variable of R1) st R5 |- ( R12 . (R18 , R21) )))
proof
assume L58: R5 |- ( Ex (R18 , R12) );
consider R26 being (FinSequence of ( CQC-WFF R1 )) such that L59: ( rng R26 ) c= R5 and L60:  |- ( R26 ^ <* ( Ex (R18 , R12) ) *> ) by L58 , HENMODEL:def 1;
consider R21 being (bound_QC-variable of R1) such that L61: R5 |- ( ( 'not' ( Ex (R18 , R12) ) ) 'or' ( R12 . (R18 , R21) ) ) by L56 , L7;
consider R27 being (FinSequence of ( CQC-WFF R1 )) such that L62: ( rng R27 ) c= R5 and L63:  |- ( R27 ^ <* ( ( 'not' ( Ex (R18 , R12) ) ) 'or' ( R12 . (R18 , R21) ) ) *> ) by L61 , HENMODEL:def 1;
take R21;
L64:  |- ( ( R26 ^ R27 ) ^ <* ( Ex (R18 , R12) ) *> ) by L60 , HENMODEL:5;
L65:  |- ( ( R26 ^ R27 ) ^ <* ( ( 'not' ( Ex (R18 , R12) ) ) 'or' ( R12 . (R18 , R21) ) ) *> ) by L63 , CALCUL_2:20;
L66:  |- ( ( R26 ^ R27 ) ^ <* ( R12 . (R18 , R21) ) *> ) by L65 , L64 , L10;
L67: ( rng ( R26 ^ R27 ) ) = ( ( rng R26 ) \/ ( rng R27 ) ) by FINSEQ_1:31;
L68: ( rng ( R26 ^ R27 ) ) c= R5 by L67 , L59 , L62 , XBOOLE_1:8;
thus L69: thesis by L68 , L66 , HENMODEL:def 1;
end;

thus L70: ((ex R21 being (bound_QC-variable of R1) st R5 |- ( R12 . (R18 , R21) )) implies R5 |- ( Ex (R18 , R12) ))
proof
given R21 being (bound_QC-variable of R1) such that
L71: R5 |- ( R12 . (R18 , R21) );

consider R26 being (FinSequence of ( CQC-WFF R1 )) such that L72: ( rng R26 ) c= R5 and L73:  |- ( R26 ^ <* ( R12 . (R18 , R21) ) *> ) by L71 , HENMODEL:def 1;
L74:  |- ( R26 ^ <* ( Ex (R18 , R12) ) *> ) by L73 , CALCUL_1:58;
thus L75: thesis by L74 , L72 , HENMODEL:def 1;
end;

end;
theorem
L71: (for R1 being QC-alphabet holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R28 being  Consistent (Subset of ( CQC-WFF R1 )) holds (for R31 being (Henkin_interpretation of R28) holds (((R28 is  negation_faithful & R28 is  with_examples) implies (R31 , ( valH R1 ) |= R12 iff R28 |- R12)) implies ((R28 is  negation_faithful & R28 is  with_examples) implies (R31 , ( valH R1 ) |= ( 'not' R12 ) iff R28 |- ( 'not' R12 )))))))) by L5 , HENMODEL:def 2 , VALUAT_1:17;
theorem
L72: (for R1 being QC-alphabet holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R14 being (Element of ( CQC-WFF R1 )) holds (for R26 being (FinSequence of ( CQC-WFF R1 )) holds (( |- ( R26 ^ <* R12 *> ) &  |- ( R26 ^ <* R14 *> )) implies  |- ( R26 ^ <* ( R12 '&' R14 ) *> ))))))
proof
let R1 being QC-alphabet;
let R12 being (Element of ( CQC-WFF R1 ));
let R14 being (Element of ( CQC-WFF R1 ));
let R26 being (FinSequence of ( CQC-WFF R1 ));
set D7 = ( R26 ^ <* R12 *> );
set D8 = ( R26 ^ <* R14 *> );
assume that
L73:  |- D7
and
L74:  |- D8;
L75: ( Ant D7 ) = R26 by CALCUL_1:5;
L76: ( Suc D7 ) = R12 by CALCUL_1:5;
L77: ( Suc D8 ) = R14 by CALCUL_1:5;
L78: ( Ant D7 ) = ( Ant D8 ) by L75 , CALCUL_1:5;
thus L79: thesis by L78 , L73 , L74 , L75 , L76 , L77 , CALCUL_1:39;
end;
theorem
L80: (for R1 being QC-alphabet holds (for R5 being (Subset of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R14 being (Element of ( CQC-WFF R1 )) holds ((R5 |- R12 & R5 |- R14) iff R5 |- ( R12 '&' R14 ))))))
proof
let R1 being QC-alphabet;
let R5 being (Subset of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
let R14 being (Element of ( CQC-WFF R1 ));
thus L81: ((R5 |- R12 & R5 |- R14) implies R5 |- ( R12 '&' R14 ))
proof
assume that
L82: R5 |- R12
and
L83: R5 |- R14;
consider R26 being (FinSequence of ( CQC-WFF R1 )) such that L84: ( rng R26 ) c= R5 and L85:  |- ( R26 ^ <* R12 *> ) by L82 , HENMODEL:def 1;
consider R27 being (FinSequence of ( CQC-WFF R1 )) such that L86: ( rng R27 ) c= R5 and L87:  |- ( R27 ^ <* R14 *> ) by L83 , HENMODEL:def 1;
L88:  |- ( ( R26 ^ R27 ) ^ <* R12 *> ) by L85 , HENMODEL:5;
L89:  |- ( ( R26 ^ R27 ) ^ <* R14 *> ) by L87 , CALCUL_2:20;
L90:  |- ( ( R26 ^ R27 ) ^ <* ( R12 '&' R14 ) *> ) by L89 , L88 , L72;
L91: ( rng ( R26 ^ R27 ) ) = ( ( rng R26 ) \/ ( rng R27 ) ) by FINSEQ_1:31;
L92: ( rng ( R26 ^ R27 ) ) c= R5 by L91 , L84 , L86 , XBOOLE_1:8;
thus L93: thesis by L92 , L90 , HENMODEL:def 1;
end;

thus L94: (R5 |- ( R12 '&' R14 ) implies (R5 |- R12 & R5 |- R14))
proof
assume L95: R5 |- ( R12 '&' R14 );
consider R26 being (FinSequence of ( CQC-WFF R1 )) such that L96: ( rng R26 ) c= R5 and L97:  |- ( R26 ^ <* ( R12 '&' R14 ) *> ) by L95 , HENMODEL:def 1;
L98:  |- ( R26 ^ <* R12 *> ) by L97 , CALCUL_2:22;
L99:  |- ( R26 ^ <* R14 *> ) by L97 , CALCUL_2:23;
thus L100: thesis by L99 , L96 , L98 , HENMODEL:def 1;
end;

end;
theorem
L95: (for R1 being QC-alphabet holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R14 being (Element of ( CQC-WFF R1 )) holds (for R28 being  Consistent (Subset of ( CQC-WFF R1 )) holds (for R31 being (Henkin_interpretation of R28) holds ((((R28 is  negation_faithful & R28 is  with_examples) implies (R31 , ( valH R1 ) |= R12 iff R28 |- R12)) & ((R28 is  negation_faithful & R28 is  with_examples) implies (R31 , ( valH R1 ) |= R14 iff R28 |- R14))) implies ((R28 is  negation_faithful & R28 is  with_examples) implies (R31 , ( valH R1 ) |= ( R12 '&' R14 ) iff R28 |- ( R12 '&' R14 ))))))))) by L80 , VALUAT_1:18;
theorem
L96: (for R1 being QC-alphabet holds (for R28 being  Consistent (Subset of ( CQC-WFF R1 )) holds (for R31 being (Henkin_interpretation of R28) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (( QuantNbr R12 ) <= ( 0 ) implies ((R28 is  negation_faithful & R28 is  with_examples) implies (R31 , ( valH R1 ) |= R12 iff R28 |- R12)))))))
proof
let R1 being QC-alphabet;
let R28 being  Consistent (Subset of ( CQC-WFF R1 ));
let R31 being (Henkin_interpretation of R28);
defpred S1[ (Element of ( CQC-WFF R1 )) ] means ((R28 is  negation_faithful & R28 is  with_examples) implies (R31 , ( valH R1 ) |= $1 iff R28 |- $1));
L97: (for R15 being (Element of ( CQC-WFF R1 )) holds (for R16 being (Element of ( CQC-WFF R1 )) holds (for R18 being (bound_QC-variable of R1) holds (for R9 being (Element of ( NAT )) holds (for B2 being (CQC-variable_list of R9 , R1) holds (for B3 being (QC-pred_symbol of R9 , R1) holds (S1[ ( VERUM R1 ) ] & S1[ ( B3 ! B2 ) ] & (S1[ R15 ] implies S1[ ( 'not' R15 ) ]) & ((S1[ R15 ] & S1[ R16 ]) implies S1[ ( R15 '&' R16 ) ])))))))) by L5 , L80 , HENMODEL:16 , HENMODEL:17 , HENMODEL:def 2 , VALUAT_1:17 , VALUAT_1:18;
L98: (for R12 being (Element of ( CQC-WFF R1 )) holds (( QuantNbr R12 ) = ( 0 ) implies S1[ R12 ])) from SUBSTUT2:sch 3(L97);
L99:
now
let R12 being (Element of ( CQC-WFF R1 ));
assume L100: ( QuantNbr R12 ) <= ( 0 );
L101: ( QuantNbr R12 ) = ( 0 ) by L100 , NAT_1:2;
thus L102: S1[ R12 ] by L101 , L98;
end;
thus L103: thesis by L99;
end;
theorem
L104: (for R1 being QC-alphabet holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R18 being (bound_QC-variable of R1) holds (for R23 being non  empty set holds (for R24 being (interpretation of R1 , R23) holds (for R25 being (Element of ( Valuations_in (R1 , R23) )) holds (R24 , R25 |= ( Ex (R18 , R12) ) iff (ex R32 being (Element of R23) st R24 , ( R25 . ( R18 | R32 ) ) |= R12))))))))
proof
let R1 being QC-alphabet;
let R12 being (Element of ( CQC-WFF R1 ));
let R18 being (bound_QC-variable of R1);
let R23 being non  empty set;
let R24 being (interpretation of R1 , R23);
let R25 being (Element of ( Valuations_in (R1 , R23) ));
L105: (R24 , R25 |= ( 'not' ( All (R18 , ( 'not' R12 )) ) ) iff (not R24 , R25 |= ( All (R18 , ( 'not' R12 )) ))) by VALUAT_1:17;
L106: ((ex R32 being (Element of R23) st (not R24 , ( R25 . ( R18 | R32 ) ) |= ( 'not' R12 ))) implies (ex R32 being (Element of R23) st R24 , ( R25 . ( R18 | R32 ) ) |= R12))
proof
given R32 being (Element of R23) such that
L107: (not R24 , ( R25 . ( R18 | R32 ) ) |= ( 'not' R12 ));

take R32;
thus L108: thesis by L107 , VALUAT_1:17;
end;
L109: ((ex R32 being (Element of R23) st R24 , ( R25 . ( R18 | R32 ) ) |= R12) implies (ex R32 being (Element of R23) st (not R24 , ( R25 . ( R18 | R32 ) ) |= ( 'not' R12 ))))
proof
given R32 being (Element of R23) such that
L110: R24 , ( R25 . ( R18 | R32 ) ) |= R12;

take R32;
thus L111: thesis by L110 , VALUAT_1:17;
end;
thus L112: thesis by L109 , L105 , L106 , QC_LANG2:def 5 , SUBLEMMA:50;
end;
theorem
L113: (for R1 being QC-alphabet holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R18 being (bound_QC-variable of R1) holds (for R28 being  Consistent (Subset of ( CQC-WFF R1 )) holds (for R31 being (Henkin_interpretation of R28) holds (R31 , ( valH R1 ) |= ( Ex (R18 , R12) ) iff (ex R21 being (bound_QC-variable of R1) st R31 , ( valH R1 ) |= ( R12 . (R18 , R21) ))))))))
proof
let R1 being QC-alphabet;
let R12 being (Element of ( CQC-WFF R1 ));
let R18 being (bound_QC-variable of R1);
let R28 being  Consistent (Subset of ( CQC-WFF R1 ));
let R31 being (Henkin_interpretation of R28);
thus L114: (R31 , ( valH R1 ) |= ( Ex (R18 , R12) ) implies (ex R21 being (bound_QC-variable of R1) st R31 , ( valH R1 ) |= ( R12 . (R18 , R21) )))
proof
assume L115: R31 , ( valH R1 ) |= ( Ex (R18 , R12) );
consider C2 being (Element of ( HCar R1 )) such that L116: R31 , ( ( valH R1 ) . ( R18 | C2 ) ) |= R12 by L115 , L104;
L117: ( HCar R1 ) = ( bound_QC-variables R1 ) by HENMODEL:def 4;
L118: ( valH R1 ) = ( id ( bound_QC-variables R1 ) ) by HENMODEL:def 6;
L119: ( rng ( valH R1 ) ) = ( bound_QC-variables R1 ) by L118 , RELAT_1:45;
consider R2 being set such that L120: R2 in ( dom ( valH R1 ) ) and L121: ( ( valH R1 ) . R2 ) = C2 by L119 , FUNCT_1:def 3 , L117;
reconsider D9 = R2 as (bound_QC-variable of R1) by L120;
take D9;
thus L122: thesis by L116 , L121 , CALCUL_1:24;
end;

thus L123: ((ex R21 being (bound_QC-variable of R1) st R31 , ( valH R1 ) |= ( R12 . (R18 , R21) )) implies R31 , ( valH R1 ) |= ( Ex (R18 , R12) ))
proof
given R21 being (bound_QC-variable of R1) such that
L124: R31 , ( valH R1 ) |= ( R12 . (R18 , R21) );

L125: (ex B4 being (Element of ( HCar R1 )) st (( ( valH R1 ) . R21 ) = B4 & R31 , ( ( valH R1 ) . ( R18 | B4 ) ) |= R12)) by L124 , CALCUL_1:24;
thus L126: thesis by L125 , L104;
end;

end;
theorem
L124: (for R1 being QC-alphabet holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R18 being (bound_QC-variable of R1) holds (for R23 being non  empty set holds (for R24 being (interpretation of R1 , R23) holds (for R25 being (Element of ( Valuations_in (R1 , R23) )) holds (R24 , R25 |= ( 'not' ( Ex (R18 , ( 'not' R12 )) ) ) iff R24 , R25 |= ( All (R18 , R12) ))))))))
proof
let R1 being QC-alphabet;
let R12 being (Element of ( CQC-WFF R1 ));
let R18 being (bound_QC-variable of R1);
let R23 being non  empty set;
let R24 being (interpretation of R1 , R23);
let R25 being (Element of ( Valuations_in (R1 , R23) ));
L125: ((not R24 , R25 |= ( Ex (R18 , ( 'not' R12 )) )) iff (for R32 being (Element of R23) holds (not R24 , ( R25 . ( R18 | R32 ) ) |= ( 'not' R12 )))) by L104;
L126: ((for R32 being (Element of R23) holds (not R24 , ( R25 . ( R18 | R32 ) ) |= ( 'not' R12 ))) implies (for R32 being (Element of R23) holds R24 , ( R25 . ( R18 | R32 ) ) |= R12))
proof
assume L127: (for R32 being (Element of R23) holds (not R24 , ( R25 . ( R18 | R32 ) ) |= ( 'not' R12 )));
let R32 being (Element of R23);
L128: (not R24 , ( R25 . ( R18 | R32 ) ) |= ( 'not' R12 )) by L127;
thus L129: thesis by L128 , VALUAT_1:17;
end;
L130: ((for R32 being (Element of R23) holds R24 , ( R25 . ( R18 | R32 ) ) |= R12) implies (for R32 being (Element of R23) holds (not R24 , ( R25 . ( R18 | R32 ) ) |= ( 'not' R12 ))))
proof
assume L131: (for R32 being (Element of R23) holds R24 , ( R25 . ( R18 | R32 ) ) |= R12);
let R32 being (Element of R23);
L132: R24 , ( R25 . ( R18 | R32 ) ) |= R12 by L131;
thus L133: thesis by L132 , VALUAT_1:17;
end;
thus L134: thesis by L130 , L125 , L126 , SUBLEMMA:50 , VALUAT_1:17;
end;
theorem
L135: (for R1 being QC-alphabet holds (for R5 being (Subset of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R18 being (bound_QC-variable of R1) holds (R5 |- ( 'not' ( Ex (R18 , ( 'not' R12 )) ) ) iff R5 |- ( All (R18 , R12) ))))))
proof
let R1 being QC-alphabet;
let R5 being (Subset of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
let R18 being (bound_QC-variable of R1);
thus L136: (R5 |- ( 'not' ( Ex (R18 , ( 'not' R12 )) ) ) implies R5 |- ( All (R18 , R12) ))
proof
assume L137: R5 |- ( 'not' ( Ex (R18 , ( 'not' R12 )) ) );
consider R26 being (FinSequence of ( CQC-WFF R1 )) such that L138: ( rng R26 ) c= R5 and L139:  |- ( R26 ^ <* ( 'not' ( Ex (R18 , ( 'not' R12 )) ) ) *> ) by L137 , HENMODEL:def 1;
L140:  |- ( R26 ^ <* ( All (R18 , R12) ) *> ) by L139 , CALCUL_1:68;
thus L141: thesis by L140 , L138 , HENMODEL:def 1;
end;

thus L142: (R5 |- ( All (R18 , R12) ) implies R5 |- ( 'not' ( Ex (R18 , ( 'not' R12 )) ) ))
proof
assume L143: R5 |- ( All (R18 , R12) );
consider R26 being (FinSequence of ( CQC-WFF R1 )) such that L144: ( rng R26 ) c= R5 and L145:  |- ( R26 ^ <* ( All (R18 , R12) ) *> ) by L143 , HENMODEL:def 1;
L146:  |- ( R26 ^ <* ( 'not' ( Ex (R18 , ( 'not' R12 )) ) ) *> ) by L145 , CALCUL_1:68;
thus L147: thesis by L146 , L144 , HENMODEL:def 1;
end;

end;
theorem
L143: (for R1 being QC-alphabet holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R18 being (bound_QC-variable of R1) holds ( QuantNbr ( Ex (R18 , R12) ) ) = ( ( QuantNbr R12 ) + 1 ))))
proof
let R1 being QC-alphabet;
let R12 being (Element of ( CQC-WFF R1 ));
let R18 being (bound_QC-variable of R1);
L144: ( QuantNbr ( Ex (R18 , R12) ) ) = ( QuantNbr ( 'not' ( All (R18 , ( 'not' R12 )) ) ) ) by QC_LANG2:def 5
.= ( QuantNbr ( All (R18 , ( 'not' R12 )) ) ) by CQC_SIM1:16
.= ( ( QuantNbr ( 'not' R12 ) ) + 1 ) by CQC_SIM1:18;
thus L145: thesis by L144 , CQC_SIM1:16;
end;
theorem
L146: (for R1 being QC-alphabet holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R18 being (bound_QC-variable of R1) holds (for R21 being (bound_QC-variable of R1) holds ( QuantNbr R12 ) = ( QuantNbr ( R12 . (R18 , R21) ) )))))
proof
let R1 being QC-alphabet;
let R12 being (Element of ( CQC-WFF R1 ));
let R18 being (bound_QC-variable of R1);
let R21 being (bound_QC-variable of R1);
L147: ( QuantNbr R12 ) = ( QuantNbr ( CQC_Sub [ R12 , ( Sbst (R18 , R21) ) ] ) ) by SUBSTUT2:25;
thus L148: thesis by L147 , SUBSTUT2:def 1;
end;
theorem
L149: (for R1 being QC-alphabet holds (for R28 being  Consistent (Subset of ( CQC-WFF R1 )) holds (for R31 being (Henkin_interpretation of R28) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (( QuantNbr R12 ) = 1 implies ((R28 is  negation_faithful & R28 is  with_examples) implies (R31 , ( valH R1 ) |= R12 iff R28 |- R12)))))))
proof
let R1 being QC-alphabet;
let R28 being  Consistent (Subset of ( CQC-WFF R1 ));
let R31 being (Henkin_interpretation of R28);
let R12 being (Element of ( CQC-WFF R1 ));
assume that
L150: ( QuantNbr R12 ) = 1
and
L151: R28 is  negation_faithful
and
L152: R28 is  with_examples;
consider R14 being (Element of ( CQC-WFF R1 )) such that L153: R14 is_subformula_of R12 and L154: (ex R18 being (bound_QC-variable of R1) st (ex R15 being (Element of ( CQC-WFF R1 )) st R14 = ( All (R18 , R15) ))) by L150 , SUBSTUT2:32;
consider R18 being (bound_QC-variable of R1), R15 being (Element of ( CQC-WFF R1 )) such that L155: R14 = ( All (R18 , R15) ) by L154;
L156: ( QuantNbr R14 ) <= 1 by L150 , L153 , SUBSTUT2:30;
L157: ( QuantNbr R14 ) = ( ( QuantNbr R15 ) + 1 ) by L155 , CQC_SIM1:18;
L158: 1 <= ( QuantNbr R14 ) by L157 , NAT_1:11;
L159: 1 = ( QuantNbr R14 ) by L158 , L156 , XXREAL_0:1;
set D10 = the (PATH of R14 , R12);
L160: 1 <= ( len D10 ) by L153 , SUBSTUT2:def 5;
defpred S2[ (Element of ( NAT )) ] means ((1 <= $1 & $1 <= ( len D10 )) implies (ex R13 being (Element of ( CQC-WFF R1 )) st (R13 = ( D10 . $1 ) & ( QuantNbr R14 ) <= ( QuantNbr R13 ) & (R28 |- R13 iff R31 , ( valH R1 ) |= R13))));
L161: S2[ ( 0 ) ];
L162: (for R9 being (Element of ( NAT )) holds (S2[ R9 ] implies S2[ ( R9 + 1 ) ]))
proof
let R9 being (Element of ( NAT ));
assume that
L163: S2[ R9 ];
assume that
L164: 1 <= ( R9 + 1 )
and
L165: ( R9 + 1 ) <= ( len D10 );
set D11 = ( R9 + 1 );
L166:
now
assume L167: R9 = ( 0 );
L168: ( D10 . D11 ) = R14 by L167 , L153 , SUBSTUT2:def 5;
take D12 = R14;
thus L169: ( QuantNbr D12 ) <= ( QuantNbr D12 );
L170:
now
assume L171: R31 , ( valH R1 ) |= ( Ex (R18 , ( 'not' R15 )) );
consider R21 being (bound_QC-variable of R1) such that L172: R31 , ( valH R1 ) |= ( ( 'not' R15 ) . (R18 , R21) ) by L171 , L113;
L173: ( QuantNbr ( 'not' R15 ) ) = ( 0 ) by L157 , L159 , CQC_SIM1:16;
L174: ( QuantNbr ( ( 'not' R15 ) . (R18 , R21) ) ) = ( 0 ) by L173 , L146;
L175: R28 |- ( ( 'not' R15 ) . (R18 , R21) ) by L174 , L151 , L152 , L172 , L96;
thus L176: R28 |- ( Ex (R18 , ( 'not' R15 )) ) by L175 , L152 , L55;
end;
L177:
now
assume L178: R28 |- ( Ex (R18 , ( 'not' R15 )) );
consider R21 being (bound_QC-variable of R1) such that L179: R28 |- ( ( 'not' R15 ) . (R18 , R21) ) by L178 , L152 , L55;
L180: ( QuantNbr ( 'not' R15 ) ) = ( 0 ) by L157 , L159 , CQC_SIM1:16;
L181: ( QuantNbr ( ( 'not' R15 ) . (R18 , R21) ) ) = ( 0 ) by L180 , L146;
L182: R31 , ( valH R1 ) |= ( ( 'not' R15 ) . (R18 , R21) ) by L181 , L151 , L152 , L179 , L96;
thus L183: R31 , ( valH R1 ) |= ( Ex (R18 , ( 'not' R15 )) ) by L182 , L113;
end;
L184: (R31 , ( valH R1 ) |= ( 'not' ( Ex (R18 , ( 'not' R15 )) ) ) iff R28 |- ( 'not' ( Ex (R18 , ( 'not' R15 )) ) )) by L177 , L151 , L170 , L5 , HENMODEL:def 2 , VALUAT_1:17;
L185: (R31 , ( valH R1 ) |= D12 iff R28 |- D12) by L184 , L155 , L124 , L135;
thus L186: thesis by L185 , L168;
end;
L187:
now
assume L188: R9 <> ( 0 );
L189: ( 0 ) < R9 by L188 , NAT_1:3;
L190: ( ( 0 ) + 1 ) <= R9 by L189 , NAT_1:13;
L191: R9 < ( len D10 ) by L165 , NAT_1:13;
consider C3 , C4 being (Element of ( QC-WFF R1 )) such that L192: ( D10 . R9 ) = C3 and L193: ( D10 . D11 ) = C4 and L194: C3 is_immediate_constituent_of C4 by L191 , L153 , L190 , SUBSTUT2:def 5;
consider R13 being (Element of ( CQC-WFF R1 )) such that L195: R13 = ( D10 . R9 ) and L196: ( QuantNbr R14 ) <= ( QuantNbr R13 ) and L197: (R28 |- R13 iff R31 , ( valH R1 ) |= R13) by L163 , L165 , L190 , NAT_1:13;
L198: (ex R37 being (QC-formula of R1) st (R37 = ( D10 . D11 ) & R37 is_subformula_of R12)) by L153 , L164 , L165 , SUBSTUT2:27;
reconsider D13 = C4 as (Element of ( CQC-WFF R1 )) by L153 , L164 , L165 , L193 , SUBSTUT2:28;
take D14 = D13;
L199:
now
assume L200: D14 = ( 'not' R13 );
L201: ( QuantNbr R14 ) <= ( QuantNbr D14 ) by L200 , L196 , CQC_SIM1:16;
L202: (R28 |- D14 iff R31 , ( valH R1 ) |= D14) by L151 , L197 , L200 , L5 , HENMODEL:def 2 , VALUAT_1:17;
thus L203: thesis by L202 , L193 , L201;
end;
L204: ( QuantNbr D14 ) <= 1 by L150 , L193 , L198 , SUBSTUT2:30;
L205:
now
given R36 being (QC-formula of R1) such that
L206: D14 = ( R13 '&' R36 );

reconsider D15 = R36 as (Element of ( CQC-WFF R1 )) by L206 , CQC_LANG:9;
L207: ( QuantNbr D14 ) = ( ( QuantNbr R13 ) + ( QuantNbr D15 ) ) by L206 , CQC_SIM1:17;
L208: ( QuantNbr R13 ) <= ( QuantNbr D14 ) by L207 , NAT_1:11;
L209: ( QuantNbr R13 ) <= 1 by L208 , L204 , XXREAL_0:2;
L210: 1 <= ( QuantNbr D14 ) by L159 , L196 , L208 , XXREAL_0:2;
L211: ( QuantNbr R13 ) = 1 by L159 , L196 , L209 , XXREAL_0:1;
L212: ( QuantNbr D14 ) = 1 by L204 , L210 , XXREAL_0:1;
L213: ( 1 - 1 ) = ( ( ( QuantNbr D15 ) + 1 ) - 1 ) by L212 , L206 , L211 , CQC_SIM1:17;
L214: (R28 |- D15 iff R31 , ( valH R1 ) |= D15) by L213 , L151 , L152 , L96;
L215: ( QuantNbr R14 ) <= ( QuantNbr D14 ) by L196 , L208 , XXREAL_0:2;
L216: (R28 |- D14 iff R31 , ( valH R1 ) |= D14) by L197 , L206 , L214 , L80 , VALUAT_1:18;
thus L217: thesis by L216 , L193 , L215;
end;
L218:
now
given R36 being (QC-formula of R1) such that
L219: D14 = ( R36 '&' R13 );

reconsider D16 = R36 as (Element of ( CQC-WFF R1 )) by L219 , CQC_LANG:9;
L220: ( QuantNbr D14 ) = ( ( QuantNbr R13 ) + ( QuantNbr D16 ) ) by L219 , CQC_SIM1:17;
L221: ( QuantNbr R13 ) <= ( QuantNbr D14 ) by L220 , NAT_1:11;
L222: ( QuantNbr R13 ) <= 1 by L221 , L204 , XXREAL_0:2;
L223: 1 <= ( QuantNbr D14 ) by L159 , L196 , L221 , XXREAL_0:2;
L224: ( QuantNbr R13 ) = 1 by L159 , L196 , L222 , XXREAL_0:1;
L225: ( QuantNbr D14 ) = 1 by L204 , L223 , XXREAL_0:1;
L226: (R28 |- D16 iff R31 , ( valH R1 ) |= D16) by L225 , L151 , L152 , L220 , L224 , L96;
L227: ( QuantNbr R14 ) <= ( QuantNbr D14 ) by L196 , L221 , XXREAL_0:2;
L228: (R28 |- D14 iff R31 , ( valH R1 ) |= D14) by L197 , L219 , L226 , L80 , VALUAT_1:18;
thus L229: thesis by L228 , L193 , L227;
end;
L230:
now
given R18 being (bound_QC-variable of R1) such that
L231: D14 = ( All (R18 , R13) );

L232: 1 < ( ( QuantNbr R13 ) + 1 ) by L159 , L196 , NAT_1:13;
thus L233: contradiction by L232 , L204 , L231 , CQC_SIM1:18;
end;
thus L234: thesis by L230 , L192 , L194 , L195 , L199 , L205 , L218 , QC_LANG2:def 19;
end;
thus L235: thesis by L187 , L166;
end;
L236: (for R9 being (Element of ( NAT )) holds S2[ R9 ]) from NAT_1:sch 1(L161 , L162);
L237: (ex R13 being (Element of ( CQC-WFF R1 )) st (R13 = ( D10 . ( len D10 ) ) & ( QuantNbr R14 ) <= ( QuantNbr R13 ) & (R28 |- R13 iff R31 , ( valH R1 ) |= R13))) by L236 , L160;
thus L238: thesis by L237 , L153 , SUBSTUT2:def 5;
end;
theorem
L239: (for R1 being QC-alphabet holds (for R28 being  Consistent (Subset of ( CQC-WFF R1 )) holds (for R31 being (Henkin_interpretation of R28) holds (for R11 being (Element of ( NAT )) holds ((for R12 being (Element of ( CQC-WFF R1 )) holds (( QuantNbr R12 ) <= R11 implies ((R28 is  negation_faithful & R28 is  with_examples) implies (R31 , ( valH R1 ) |= R12 iff R28 |- R12)))) implies (for R12 being (Element of ( CQC-WFF R1 )) holds (( QuantNbr R12 ) <= ( R11 + 1 ) implies ((R28 is  negation_faithful & R28 is  with_examples) implies (R31 , ( valH R1 ) |= R12 iff R28 |- R12)))))))))
proof
let R1 being QC-alphabet;
let R28 being  Consistent (Subset of ( CQC-WFF R1 ));
let R31 being (Henkin_interpretation of R28);
let R11 being (Element of ( NAT ));
assume that
L240: (for R12 being (Element of ( CQC-WFF R1 )) holds (( QuantNbr R12 ) <= R11 implies ((R28 is  negation_faithful & R28 is  with_examples) implies (R31 , ( valH R1 ) |= R12 iff R28 |- R12))));
let R12 being (Element of ( CQC-WFF R1 ));
assume that
L241: ( QuantNbr R12 ) <= ( R11 + 1 )
and
L242: R28 is  negation_faithful
and
L243: R28 is  with_examples;
L244: (( QuantNbr R12 ) <= R11 implies thesis) by L240 , L242 , L243;
L245:
now
assume L246: ( QuantNbr R12 ) = ( R11 + 1 );
consider R14 being (Element of ( CQC-WFF R1 )) such that L247: R14 is_subformula_of R12 and L248: ( QuantNbr R14 ) = 1 by L246 , NAT_1:11 , SUBSTUT2:34;
set D17 = the (PATH of R14 , R12);
L249: 1 <= ( len D17 ) by L247 , SUBSTUT2:def 5;
defpred S3[ (Element of ( NAT )) ] means ((1 <= $1 & $1 <= ( len D17 )) implies (ex R13 being (Element of ( CQC-WFF R1 )) st (R13 = ( D17 . $1 ) & ( QuantNbr R14 ) <= ( QuantNbr R13 ) & (R28 |- R13 iff R31 , ( valH R1 ) |= R13))));
L250: S3[ ( 0 ) ];
L251: (for R9 being (Element of ( NAT )) holds (S3[ R9 ] implies S3[ ( R9 + 1 ) ]))
proof
let R9 being (Element of ( NAT ));
assume that
L252: S3[ R9 ];
assume that
L253: 1 <= ( R9 + 1 )
and
L254: ( R9 + 1 ) <= ( len D17 );
set D18 = ( R9 + 1 );
L255:
now
assume L256: R9 = ( 0 );
L257: ( D17 . D18 ) = R14 by L256 , L247 , SUBSTUT2:def 5;
take D19 = R14;
L258: (R31 , ( valH R1 ) |= D19 iff R28 |- D19) by L242 , L243 , L248 , L149;
thus L259: thesis by L258 , L257;
end;
L260:
now
assume L261: R9 <> ( 0 );
L262: ( 0 ) < R9 by L261 , NAT_1:3;
L263: ( ( 0 ) + 1 ) <= R9 by L262 , NAT_1:13;
L264: R9 < ( len D17 ) by L254 , NAT_1:13;
consider C5 , C6 being (Element of ( QC-WFF R1 )) such that L265: ( D17 . R9 ) = C5 and L266: ( D17 . D18 ) = C6 and L267: C5 is_immediate_constituent_of C6 by L264 , L247 , L263 , SUBSTUT2:def 5;
consider R13 being (Element of ( CQC-WFF R1 )) such that L268: ( QuantNbr R14 ) <= ( QuantNbr R13 ) and L269: R13 = ( D17 . R9 ) and L270: (R28 |- R13 iff R31 , ( valH R1 ) |= R13) by L252 , L254 , L263 , NAT_1:13;
L271: (ex R37 being (QC-formula of R1) st (R37 = ( D17 . D18 ) & R37 is_subformula_of R12)) by L247 , L253 , L254 , SUBSTUT2:27;
reconsider D20 = C6 as (Element of ( CQC-WFF R1 )) by L247 , L253 , L254 , L266 , SUBSTUT2:28;
take D21 = D20;
L272:
now
assume L273: D21 = ( 'not' R13 );
L274: ( QuantNbr R14 ) <= ( QuantNbr D21 ) by L273 , L268 , CQC_SIM1:16;
L275: (R28 |- D21 iff R31 , ( valH R1 ) |= D21) by L242 , L270 , L273 , L5 , HENMODEL:def 2 , VALUAT_1:17;
thus L276: thesis by L275 , L266 , L274;
end;
L277: ( QuantNbr D21 ) <= ( R11 + 1 ) by L246 , L266 , L271 , SUBSTUT2:30;
L278:
now
given R36 being (QC-formula of R1) such that
L279: D21 = ( R13 '&' R36 );

reconsider D22 = R36 as (Element of ( CQC-WFF R1 )) by L279 , CQC_LANG:9;
L280: ( QuantNbr D21 ) = ( ( QuantNbr R13 ) + ( QuantNbr D22 ) ) by L279 , CQC_SIM1:17;
L281: ( 1 + ( QuantNbr D22 ) ) <= ( QuantNbr D21 ) by L280 , L248 , L268 , XREAL_1:6;
L282: ( 1 + ( QuantNbr D22 ) ) <= ( R11 + 1 ) by L281 , L277 , XXREAL_0:2;
L283: ( ( ( QuantNbr D22 ) + 1 ) + ( - 1 ) ) <= ( ( R11 + 1 ) + ( - 1 ) ) by L282 , XREAL_1:6;
L284: (R28 |- D22 iff R31 , ( valH R1 ) |= D22) by L283 , L240 , L242 , L243;
L285: (R28 |- D21 iff R31 , ( valH R1 ) |= D21) by L284 , L270 , L279 , L80 , VALUAT_1:18;
L286: ( QuantNbr R13 ) <= ( QuantNbr D21 ) by L280 , NAT_1:11;
L287: ( QuantNbr R14 ) <= ( QuantNbr D21 ) by L286 , L268 , XXREAL_0:2;
thus L288: thesis by L287 , L266 , L285;
end;
L289:
now
given R36 being (QC-formula of R1) such that
L290: D21 = ( R36 '&' R13 );

reconsider D23 = R36 as (Element of ( CQC-WFF R1 )) by L290 , CQC_LANG:9;
L291: ( QuantNbr D21 ) = ( ( QuantNbr R13 ) + ( QuantNbr D23 ) ) by L290 , CQC_SIM1:17;
L292: ( 1 + ( QuantNbr D23 ) ) <= ( QuantNbr D21 ) by L291 , L248 , L268 , XREAL_1:6;
L293: ( 1 + ( QuantNbr D23 ) ) <= ( R11 + 1 ) by L292 , L277 , XXREAL_0:2;
L294: ( ( ( QuantNbr D23 ) + 1 ) + ( - 1 ) ) <= ( ( R11 + 1 ) + ( - 1 ) ) by L293 , XREAL_1:6;
L295: (R28 |- D23 iff R31 , ( valH R1 ) |= D23) by L294 , L240 , L242 , L243;
L296: (R28 |- D21 iff R31 , ( valH R1 ) |= D21) by L295 , L270 , L290 , L80 , VALUAT_1:18;
L297: ( QuantNbr R13 ) <= ( QuantNbr D21 ) by L291 , NAT_1:11;
L298: ( QuantNbr R14 ) <= ( QuantNbr D21 ) by L297 , L268 , XXREAL_0:2;
thus L299: thesis by L298 , L266 , L296;
end;
L300:
now
given R18 being (bound_QC-variable of R1) such that
L301: D21 = ( All (R18 , R13) );

L302: ( QuantNbr D21 ) = ( ( QuantNbr R13 ) + 1 ) by L301 , CQC_SIM1:18;
L303: ( QuantNbr R13 ) < ( R11 + 1 ) by L302 , L277 , NAT_1:13;
L304: ( QuantNbr R13 ) <= R11 by L303 , NAT_1:13;
L305: ( QuantNbr ( 'not' R13 ) ) <= R11 by L304 , CQC_SIM1:16;
L306: ( QuantNbr R14 ) <= ( QuantNbr D21 ) by L268 , L302 , NAT_1:13;
L307:
now
assume L308: R31 , ( valH R1 ) |= ( Ex (R18 , ( 'not' R13 )) );
consider R21 being (bound_QC-variable of R1) such that L309: R31 , ( valH R1 ) |= ( ( 'not' R13 ) . (R18 , R21) ) by L308 , L113;
L310: ( QuantNbr ( ( 'not' R13 ) . (R18 , R21) ) ) <= R11 by L305 , L146;
L311: R28 |- ( ( 'not' R13 ) . (R18 , R21) ) by L310 , L240 , L242 , L243 , L309;
thus L312: R28 |- ( Ex (R18 , ( 'not' R13 )) ) by L311 , L243 , L55;
end;
L313:
now
assume L314: R28 |- ( Ex (R18 , ( 'not' R13 )) );
consider R21 being (bound_QC-variable of R1) such that L315: R28 |- ( ( 'not' R13 ) . (R18 , R21) ) by L314 , L243 , L55;
L316: ( QuantNbr ( ( 'not' R13 ) . (R18 , R21) ) ) <= R11 by L305 , L146;
L317: R31 , ( valH R1 ) |= ( ( 'not' R13 ) . (R18 , R21) ) by L316 , L240 , L242 , L243 , L315;
thus L318: R31 , ( valH R1 ) |= ( Ex (R18 , ( 'not' R13 )) ) by L317 , L113;
end;
L319: (R31 , ( valH R1 ) |= ( 'not' ( Ex (R18 , ( 'not' R13 )) ) ) iff R28 |- ( 'not' ( Ex (R18 , ( 'not' R13 )) ) )) by L313 , L242 , L307 , L5 , HENMODEL:def 2 , VALUAT_1:17;
L320: (R31 , ( valH R1 ) |= D21 iff R28 |- D21) by L319 , L301 , L124 , L135;
thus L321: thesis by L320 , L266 , L306;
end;
thus L322: thesis by L300 , L265 , L267 , L269 , L272 , L278 , L289 , QC_LANG2:def 19;
end;
thus L323: thesis by L260 , L255;
end;
L324: (for R9 being (Element of ( NAT )) holds S3[ R9 ]) from NAT_1:sch 1(L250 , L251);
L325: (ex R13 being (Element of ( CQC-WFF R1 )) st (R13 = ( D17 . ( len D17 ) ) & ( QuantNbr R14 ) <= ( QuantNbr R13 ) & (R28 |- R13 iff R31 , ( valH R1 ) |= R13))) by L324 , L249;
thus L326: thesis by L325 , L247 , SUBSTUT2:def 5;
end;
thus L327: thesis by L245 , L241 , L244 , NAT_1:8;
end;
theorem
L328: (for R1 being QC-alphabet holds (for R28 being  Consistent (Subset of ( CQC-WFF R1 )) holds (for R31 being (Henkin_interpretation of R28) holds (for R12 being (Element of ( CQC-WFF R1 )) holds ((R28 is  negation_faithful & R28 is  with_examples) implies (R31 , ( valH R1 ) |= R12 iff R28 |- R12))))))
proof
let R1 being QC-alphabet;
let R28 being  Consistent (Subset of ( CQC-WFF R1 ));
let R31 being (Henkin_interpretation of R28);
defpred S4[ (Element of ( CQC-WFF R1 )) ] means ((R28 is  negation_faithful & R28 is  with_examples) implies (R31 , ( valH R1 ) |= $1 iff R28 |- $1));
L329: (for R12 being (Element of ( CQC-WFF R1 )) holds (( QuantNbr R12 ) <= ( 0 ) implies S4[ R12 ])) by L96;
L330: (for R9 being (Element of ( NAT )) holds ((for R12 being (Element of ( CQC-WFF R1 )) holds (( QuantNbr R12 ) <= R9 implies S4[ R12 ])) implies (for R12 being (Element of ( CQC-WFF R1 )) holds (( QuantNbr R12 ) <= ( R9 + 1 ) implies S4[ R12 ])))) by L239;
thus L331: (for R12 being (Element of ( CQC-WFF R1 )) holds S4[ R12 ]) from SUBSTUT2:sch 2(L329 , L330);
end;
begin
theorem
L332: (for R1 being QC-alphabet holds (R1 is  countable implies ( QC-WFF R1 ) is  countable))
proof
let R1 being QC-alphabet;
assume L333: R1 is  countable;
L334: ( QC-WFF R1 ) is R1 -closed by QC_LANG1:def 11;
L335: ( QC-WFF R1 ) is (Subset of ( [: ( NAT ) , ( QC-symbols R1 ) :] * )) by L334 , QC_LANG1:def 10;
L336: ([: ( NAT ) , ( QC-symbols R1 ) :] is non  empty non  empty non  empty non  empty set & [: ( NAT ) , ( QC-symbols R1 ) :] is  countable) by QC_LANG1:5 , L333;
L337: ( [: ( NAT ) , ( QC-symbols R1 ) :] * ) is  countable by L336 , CARD_4:13;
thus L338: thesis by L337 , L335;
end;
definition
let R1 being QC-alphabet;
func ExCl R1 -> (Subset of ( CQC-WFF R1 )) means 
:L339: (for R38 being set holds (R38 in it iff (ex R18 being (bound_QC-variable of R1) st (ex R12 being (Element of ( CQC-WFF R1 )) st R38 = ( Ex (R18 , R12) )))));
existence
proof
defpred S5[ set ] means (ex R18 being (bound_QC-variable of R1) st (ex R12 being (Element of ( CQC-WFF R1 )) st $1 = ( Ex (R18 , R12) )));
consider C7 being set such that L340: (for R38 being set holds (R38 in C7 iff (R38 in ( CQC-WFF R1 ) & S5[ R38 ]))) from XBOOLE_0:sch 1;
L341: (for R38 being set holds (R38 in C7 implies R38 in ( CQC-WFF R1 ))) by L340;
reconsider D24 = C7 as (Subset of ( CQC-WFF R1 )) by L341 , TARSKI:def 3;
take D24;
thus L342: thesis by L340;
end;
uniqueness
proof
defpred S6[ set ] means (ex R18 being (bound_QC-variable of R1) st (ex R12 being (Element of ( CQC-WFF R1 )) st $1 = ( Ex (R18 , R12) )));
let C8 , C9 being (Subset of ( CQC-WFF R1 ));
assume that
L343: (for R38 being set holds (R38 in C8 iff S6[ R38 ]))
and
L344: (for R38 being set holds (R38 in C9 iff S6[ R38 ]));
L345:
now
let R38 being set;
L346: (R38 in C8 iff S6[ R38 ]) by L343;
thus L347: (R38 in C8 iff R38 in C9) by L346 , L344;
end;
thus L348: thesis by L345 , TARSKI:1;
end;
end;
theorem
L350: (for R1 being QC-alphabet holds (R1 is  countable implies ( CQC-WFF R1 ) is  countable))
proof
let R1 being QC-alphabet;
assume L351: R1 is  countable;
L352: ( QC-WFF R1 ) is  countable by L332 , L351;
thus L353: thesis by L352;
end;
theorem
L354: (for R1 being QC-alphabet holds (R1 is  countable implies (( ExCl R1 ) is non  empty & ( ExCl R1 ) is  countable)))
proof
let R1 being QC-alphabet;
assume L355: R1 is  countable;
set D25 = the (bound_QC-variable of R1);
set D26 = the (Element of ( CQC-WFF R1 ));
set D27 = ( Ex (D25 , D26) );
L356: D27 in ( ExCl R1 ) by L339;
thus L357: ( ExCl R1 ) is non  empty by L356;
L358: ( CQC-WFF R1 ) is  countable by L350 , L355;
thus L359: thesis by L358;
end;
L360: (for B5 being non  empty set holds (B5 is  countable implies (ex B6 being Function st (( dom B6 ) = ( NAT ) & B5 = ( rng B6 )))))
proof
let C10 being non  empty set;
assume that
L361: C10 is  countable;
L362: C10 c= C10;
consider C11 being (Function of ( NAT ) , C10) such that L363: C10 = ( rng C11 ) by L362 , L361 , SUPINF_2:def 8;
L364: ( dom C11 ) = ( NAT ) by FUNCT_2:def 1;
thus L365: thesis by L364 , L363;
end;
definition
let R1 being QC-alphabet;
let C12 being (Element of ( QC-WFF R1 ));
assume that
L366: C12 is  existential;
func Ex-bound_in C12 -> (bound_QC-variable of R1) means 
:L367: (ex B7 being (Element of ( QC-WFF R1 )) st C12 = ( Ex (it , B7) ));
existence by L366 , QC_LANG2:def 13;
uniqueness by QC_LANG2:13;
end;
definition
let R1 being QC-alphabet;
let C13 being (Element of ( CQC-WFF R1 ));
assume that
L369: C13 is  existential;
func Ex-the_scope_of C13 -> (Element of ( CQC-WFF R1 )) means 
:L370: (ex R18 being (bound_QC-variable of R1) st C13 = ( Ex (R18 , it) ));
existence
proof
consider R18 being (bound_QC-variable of R1), R36 being (QC-formula of R1) such that L371: C13 = ( Ex (R18 , R36) ) by L369 , QC_LANG2:def 13;
L372: C13 = ( 'not' ( All (R18 , ( 'not' R36 )) ) ) by L371 , QC_LANG2:def 5;
L373: ( All (R18 , ( 'not' R36 )) ) is (Element of ( CQC-WFF R1 )) by L372 , CQC_LANG:8;
L374: ( 'not' R36 ) is (Element of ( CQC-WFF R1 )) by L373 , CQC_LANG:13;
take R36;
thus L375: thesis by L371 , L374 , CQC_LANG:8;
end;
uniqueness by QC_LANG2:13;
end;
definition
let R1 being QC-alphabet;
let C14 being (Function of ( NAT ) , ( CQC-WFF R1 ));
let C15 being (Element of ( NAT ));
func bound_in (C14 , C15) -> (bound_QC-variable of R1) means 
:L377: (for R12 being (Element of ( CQC-WFF R1 )) holds (R12 = ( C14 . C15 ) implies it = ( Ex-bound_in R12 )));
existence
proof
reconsider D28 = ( C14 . C15 ) as (Element of ( CQC-WFF R1 ));
take ( Ex-bound_in D28 );
thus L378: thesis;
end;
uniqueness
proof
let R19 being (bound_QC-variable of R1);
let R20 being (bound_QC-variable of R1);
assume that
L379: (for R12 being (Element of ( CQC-WFF R1 )) holds (R12 = ( C14 . C15 ) implies R19 = ( Ex-bound_in R12 )))
and
L380: (for R12 being (Element of ( CQC-WFF R1 )) holds (R12 = ( C14 . C15 ) implies R20 = ( Ex-bound_in R12 )));
reconsider D29 = ( C14 . C15 ) as (Element of ( CQC-WFF R1 ));
L381: R19 = ( Ex-bound_in D29 ) by L379;
thus L382: thesis by L381 , L380;
end;
end;
definition
let R1 being QC-alphabet;
let C16 being (Function of ( NAT ) , ( CQC-WFF R1 ));
let C17 being (Element of ( NAT ));
func the_scope_of (C16 , C17) -> (Element of ( CQC-WFF R1 )) means 
:L384: (for R12 being (Element of ( CQC-WFF R1 )) holds (R12 = ( C16 . C17 ) implies it = ( Ex-the_scope_of R12 )));
existence
proof
reconsider D30 = ( C16 . C17 ) as (Element of ( CQC-WFF R1 ));
take ( Ex-the_scope_of D30 );
thus L385: thesis;
end;
uniqueness
proof
let C18 , C19 being (Element of ( CQC-WFF R1 ));
assume that
L386: (for R12 being (Element of ( CQC-WFF R1 )) holds (R12 = ( C16 . C17 ) implies C18 = ( Ex-the_scope_of R12 )))
and
L387: (for R12 being (Element of ( CQC-WFF R1 )) holds (R12 = ( C16 . C17 ) implies C19 = ( Ex-the_scope_of R12 )));
reconsider D31 = ( C16 . C17 ) as (Element of ( CQC-WFF R1 ));
L388: C18 = ( Ex-the_scope_of D31 ) by L386;
thus L389: thesis by L388 , L387;
end;
end;
definition
let R1 being QC-alphabet;
let R5 being (Subset of ( CQC-WFF R1 ));
func still_not-bound_in R5 -> (Subset of ( bound_QC-variables R1 )) equals 
( union { ( still_not-bound_in R12 ) where R12 is (Element of ( CQC-WFF R1 )) : R12 in R5 } );
coherence
proof
set D32 = ( union { ( still_not-bound_in R12 ) where R12 is (Element of ( CQC-WFF R1 )) : R12 in R5 } );
L391:
now
let R38 being set;
assume L392: R38 in D32;
consider R2 being set such that L393: (R38 in R2 & R2 in { ( still_not-bound_in R12 ) where R12 is (Element of ( CQC-WFF R1 )) : R12 in R5 }) by L392 , TARSKI:def 4;
L394: (ex R12 being (Element of ( CQC-WFF R1 )) st (R2 = ( still_not-bound_in R12 ) & R12 in R5)) by L393;
thus L395: R38 in ( bound_QC-variables R1 ) by L394 , L393;
end;
thus L396: thesis by L391 , TARSKI:def 3;
end;
end;
theorem
L398: (for R1 being QC-alphabet holds (for R5 being (Subset of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (R12 in R5 implies R5 |- R12))))
proof
let R1 being QC-alphabet;
let R5 being (Subset of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
assume L399: R12 in R5;
L400:
now
let R38 being set;
assume L401: R38 in ( rng <* R12 *> );
L402: R38 in { R12 } by L401 , FINSEQ_1:38;
thus L403: R38 in R5 by L402 , L399 , TARSKI:def 1;
end;
L404: ( rng <* R12 *> ) c= R5 by L400 , TARSKI:def 3;
L405:  |- ( ( ( <*> ( CQC-WFF R1 ) ) ^ <* R12 *> ) ^ <* R12 *> ) by CALCUL_2:21;
L406:  |- ( <* R12 *> ^ <* R12 *> ) by L405 , FINSEQ_1:34;
thus L407: thesis by L406 , L404 , HENMODEL:def 1;
end;
theorem
L408: (for R1 being QC-alphabet holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R18 being (bound_QC-variable of R1) holds (( Ex-bound_in ( Ex (R18 , R12) ) ) = R18 & ( Ex-the_scope_of ( Ex (R18 , R12) ) ) = R12))))
proof
let R1 being QC-alphabet;
let R12 being (Element of ( CQC-WFF R1 ));
let R18 being (bound_QC-variable of R1);
L409: ( Ex (R18 , R12) ) is  existential by QC_LANG2:def 13;
thus L410: thesis by L409 , L367 , L370;
end;
theorem
L411: (for R1 being QC-alphabet holds (for R5 being (Subset of ( CQC-WFF R1 )) holds R5 |- ( VERUM R1 )))
proof
let R1 being QC-alphabet;
let R5 being (Subset of ( CQC-WFF R1 ));
set D33 = ( <*> ( CQC-WFF R1 ) );
L412: ( rng D33 ) c= R5 by XBOOLE_1:2;
L413:  |- ( D33 ^ <* ( VERUM R1 ) *> ) by HENMODEL:15;
thus L414: thesis by L413 , L412 , HENMODEL:def 1;
end;
theorem
L415: (for R1 being QC-alphabet holds (for R5 being (Subset of ( CQC-WFF R1 )) holds (R5 |- ( 'not' ( VERUM R1 ) ) iff R5 is  Inconsistent)))
proof
let R1 being QC-alphabet;
let R5 being (Subset of ( CQC-WFF R1 ));
thus L416: (R5 |- ( 'not' ( VERUM R1 ) ) implies R5 is  Inconsistent)
proof
assume L417: R5 |- ( 'not' ( VERUM R1 ) );
L418: R5 |- ( VERUM R1 ) by L411;
thus L419: thesis by L418 , L417 , HENMODEL:def 2;
end;

thus L420: thesis by HENMODEL:6;
end;
theorem
L421: (for R1 being QC-alphabet holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for B8 , B9 being (FinSequence of ( CQC-WFF R1 )) holds ((( 0 ) < ( len B8 ) &  |- ( B8 ^ <* R12 *> )) implies  |- ( ( ( ( Ant B8 ) ^ B9 ) ^ <* ( Suc B8 ) *> ) ^ <* R12 *> )))))
proof
let R1 being QC-alphabet;
let R12 being (Element of ( CQC-WFF R1 ));
let C20 , C21 being (FinSequence of ( CQC-WFF R1 ));
assume that
L422: ( 0 ) < ( len C20 )
and
L423:  |- ( C20 ^ <* R12 *> );
L424: C20 is_Subsequence_of ( ( ( Ant C20 ) ^ C21 ) ^ <* ( Suc C20 ) *> ) by L422 , CALCUL_1:13;
L425: ( Ant ( C20 ^ <* R12 *> ) ) is_Subsequence_of ( ( ( Ant C20 ) ^ C21 ) ^ <* ( Suc C20 ) *> ) by L424 , CALCUL_1:5;
L426: ( Ant ( C20 ^ <* R12 *> ) ) is_Subsequence_of ( Ant ( ( ( ( Ant C20 ) ^ C21 ) ^ <* ( Suc C20 ) *> ) ^ <* R12 *> ) ) by L425 , CALCUL_1:5;
L427: ( Suc ( C20 ^ <* R12 *> ) ) = R12 by CALCUL_1:5;
L428: ( Suc ( C20 ^ <* R12 *> ) ) = ( Suc ( ( ( ( Ant C20 ) ^ C21 ) ^ <* ( Suc C20 ) *> ) ^ <* R12 *> ) ) by L427 , CALCUL_1:5;
thus L429: thesis by L428 , L423 , L426 , CALCUL_1:36;
end;
theorem
L430: (for R1 being QC-alphabet holds (for R12 being (Element of ( CQC-WFF R1 )) holds ( still_not-bound_in { R12 } ) = ( still_not-bound_in R12 )))
proof
let R1 being QC-alphabet;
let R12 being (Element of ( CQC-WFF R1 ));
L431:
now
let R38 being set;
assume L432: R38 in ( still_not-bound_in { R12 } );
consider R2 being set such that L433: (R38 in R2 & R2 in { ( still_not-bound_in R14 ) where R14 is (Element of ( CQC-WFF R1 )) : R14 in { R12 } }) by L432 , TARSKI:def 4;
L434: (ex R14 being (Element of ( CQC-WFF R1 )) st (R2 = ( still_not-bound_in R14 ) & R14 in { R12 })) by L433;
thus L435: R38 in ( still_not-bound_in R12 ) by L434 , L433 , TARSKI:def 1;
end;
L436:
now
let R38 being set;
assume that
L437: R38 in ( still_not-bound_in R12 );
set D34 = ( still_not-bound_in R12 );
L438: R12 in { R12 } by TARSKI:def 1;
L439: D34 in { ( still_not-bound_in R14 ) where R14 is (Element of ( CQC-WFF R1 )) : R14 in { R12 } } by L438;
thus L440: R38 in ( still_not-bound_in { R12 } ) by L439 , L437 , TARSKI:def 4;
end;
thus L441: thesis by L436 , L431 , TARSKI:1;
end;
theorem
L442: (for R1 being QC-alphabet holds (for R5 being (Subset of ( CQC-WFF R1 )) holds (for R6 being (Subset of ( CQC-WFF R1 )) holds ( still_not-bound_in ( R5 \/ R6 ) ) = ( ( still_not-bound_in R5 ) \/ ( still_not-bound_in R6 ) ))))
proof
let R1 being QC-alphabet;
let R5 being (Subset of ( CQC-WFF R1 ));
let R6 being (Subset of ( CQC-WFF R1 ));
thus L443: ( still_not-bound_in ( R5 \/ R6 ) ) c= ( ( still_not-bound_in R5 ) \/ ( still_not-bound_in R6 ) )
proof
set D35 = { ( still_not-bound_in R12 ) where R12 is (Element of ( CQC-WFF R1 )) : R12 in ( R5 \/ R6 ) };
let R2 being set;
assume L444: R2 in ( still_not-bound_in ( R5 \/ R6 ) );
consider R38 being set such that L445: R2 in R38 and L446: R38 in D35 by L444 , TARSKI:def 4;
consider R12 being (Element of ( CQC-WFF R1 )) such that L447: R38 = ( still_not-bound_in R12 ) and L448: R12 in ( R5 \/ R6 ) by L446;
L449:
now
assume L450: R12 in R5;
L451: R38 in { ( still_not-bound_in R14 ) where R14 is (Element of ( CQC-WFF R1 )) : R14 in R5 } by L450 , L447;
L452: R2 in ( union { ( still_not-bound_in R14 ) where R14 is (Element of ( CQC-WFF R1 )) : R14 in R5 } ) by L451 , L445 , TARSKI:def 4;
L453: ( still_not-bound_in R5 ) c= ( ( still_not-bound_in R5 ) \/ ( still_not-bound_in R6 ) ) by XBOOLE_1:7;
thus L454: thesis by L453 , L452;
end;
L455:
now
assume L456: R12 in R6;
L457: R38 in { ( still_not-bound_in R14 ) where R14 is (Element of ( CQC-WFF R1 )) : R14 in R6 } by L456 , L447;
L458: R2 in ( union { ( still_not-bound_in R14 ) where R14 is (Element of ( CQC-WFF R1 )) : R14 in R6 } ) by L457 , L445 , TARSKI:def 4;
L459: ( still_not-bound_in R6 ) c= ( ( still_not-bound_in R5 ) \/ ( still_not-bound_in R6 ) ) by XBOOLE_1:7;
thus L460: thesis by L459 , L458;
end;
thus L461: thesis by L455 , L448 , L449 , XBOOLE_0:def 3;
end;

thus L462: ( ( still_not-bound_in R5 ) \/ ( still_not-bound_in R6 ) ) c= ( still_not-bound_in ( R5 \/ R6 ) )
proof
let R2 being set;
assume that
L463: R2 in ( ( still_not-bound_in R5 ) \/ ( still_not-bound_in R6 ) );
L464:
now
assume L465: R2 in ( still_not-bound_in R5 );
consider R38 being set such that L466: (R2 in R38 & R38 in { ( still_not-bound_in R12 ) where R12 is (Element of ( CQC-WFF R1 )) : R12 in R5 }) by L465 , TARSKI:def 4;
L467: (ex R12 being (Element of ( CQC-WFF R1 )) st (R38 = ( still_not-bound_in R12 ) & R12 in R5)) by L466;
L468: R5 c= ( R5 \/ R6 ) by XBOOLE_1:7;
L469: R38 in { ( still_not-bound_in R14 ) where R14 is (Element of ( CQC-WFF R1 )) : R14 in ( R5 \/ R6 ) } by L468 , L467;
thus L470: thesis by L469 , L466 , TARSKI:def 4;
end;
L471:
now
assume L472: R2 in ( still_not-bound_in R6 );
consider R38 being set such that L473: (R2 in R38 & R38 in { ( still_not-bound_in R12 ) where R12 is (Element of ( CQC-WFF R1 )) : R12 in R6 }) by L472 , TARSKI:def 4;
L474: (ex R12 being (Element of ( CQC-WFF R1 )) st (R38 = ( still_not-bound_in R12 ) & R12 in R6)) by L473;
L475: R6 c= ( R5 \/ R6 ) by XBOOLE_1:7;
L476: R38 in { ( still_not-bound_in R14 ) where R14 is (Element of ( CQC-WFF R1 )) : R14 in ( R5 \/ R6 ) } by L475 , L474;
thus L477: thesis by L476 , L473 , TARSKI:def 4;
end;
thus L478: thesis by L471 , L463 , L464 , XBOOLE_0:def 3;
end;

end;
theorem
L463: (for R1 being QC-alphabet holds (for B10 being (Subset of ( bound_QC-variables R1 )) holds (B10 is  finite implies (ex R18 being (bound_QC-variable of R1) st (not R18 in B10)))))
proof
let R1 being QC-alphabet;
let C22 being (Subset of ( bound_QC-variables R1 ));
L464: (not ( bound_QC-variables R1 ) is  finite) by CALCUL_1:64;
assume L465: C22 is  finite;
L466: (not (for R2 being set holds (R2 in C22 iff R2 in ( bound_QC-variables R1 )))) by L465 , L464 , TARSKI:1;
consider R2 being set such that L467: (not R2 in C22) and L468: R2 in ( bound_QC-variables R1 ) by L466;
reconsider D36 = R2 as (bound_QC-variable of R1) by L468;
take D36;
thus L469: thesis by L467;
end;
theorem
L470: (for R1 being QC-alphabet holds (for R5 being (Subset of ( CQC-WFF R1 )) holds (for R6 being (Subset of ( CQC-WFF R1 )) holds (R5 c= R6 implies ( still_not-bound_in R5 ) c= ( still_not-bound_in R6 )))))
proof
let R1 being QC-alphabet;
let R5 being (Subset of ( CQC-WFF R1 ));
let R6 being (Subset of ( CQC-WFF R1 ));
set D37 = { ( still_not-bound_in R12 ) where R12 is (Element of ( CQC-WFF R1 )) : R12 in R5 };
assume L471: R5 c= R6;
L472:
now
let R38 being set;
assume L473: R38 in ( still_not-bound_in R5 );
consider R2 being set such that L474: R38 in R2 and L475: R2 in D37 by L473 , TARSKI:def 4;
L476: (ex R12 being (Element of ( CQC-WFF R1 )) st (R2 = ( still_not-bound_in R12 ) & R12 in R5)) by L475;
L477: R2 in { ( still_not-bound_in R14 ) where R14 is (Element of ( CQC-WFF R1 )) : R14 in R6 } by L476 , L471;
thus L478: R38 in ( still_not-bound_in R6 ) by L477 , L474 , TARSKI:def 4;
end;
thus L479: thesis by L472 , TARSKI:def 3;
end;
theorem
L480: (for R1 being QC-alphabet holds (for B11 being (FinSequence of ( CQC-WFF R1 )) holds ( still_not-bound_in ( rng B11 ) ) = ( still_not-bound_in B11 )))
proof
let R1 being QC-alphabet;
let C23 being (FinSequence of ( CQC-WFF R1 ));
set D38 = { ( still_not-bound_in R12 ) where R12 is (Element of ( CQC-WFF R1 )) : R12 in ( rng C23 ) };
L481:
now
let R38 being set;
assume L482: R38 in ( still_not-bound_in ( rng C23 ) );
consider R2 being set such that L483: R38 in R2 and L484: R2 in D38 by L482 , TARSKI:def 4;
consider R12 being (Element of ( CQC-WFF R1 )) such that L485: R2 = ( still_not-bound_in R12 ) and L486: R12 in ( rng C23 ) by L484;
L487: (ex R3 being set st (R3 in ( dom C23 ) & ( C23 . R3 ) = R12)) by L486 , FUNCT_1:def 3;
thus L488: R38 in ( still_not-bound_in C23 ) by L487 , L483 , L485 , CALCUL_1:def 5;
end;
L489:
now
let R38 being set;
assume L490: R38 in ( still_not-bound_in C23 );
consider R7 being (Element of ( NAT )), R14 being (Element of ( CQC-WFF R1 )) such that L491: R7 in ( dom C23 ) and L492: R14 = ( C23 . R7 ) and L493: R38 in ( still_not-bound_in R14 ) by L490 , CALCUL_1:def 5;
L494: R14 in ( rng C23 ) by L491 , L492 , FUNCT_1:def 3;
L495: ( still_not-bound_in R14 ) in D38 by L494;
thus L496: R38 in ( still_not-bound_in ( rng C23 ) ) by L495 , L493 , TARSKI:def 4;
end;
thus L497: thesis by L489 , L481 , TARSKI:1;
end;
theorem
L498: (for R1 being QC-alphabet holds (for R28 being  Consistent (Subset of ( CQC-WFF R1 )) holds ((R1 is  countable & ( still_not-bound_in R28 ) is  finite) implies (ex R29 being  Consistent (Subset of ( CQC-WFF R1 )) st (R28 c= R29 & R29 is  with_examples)))))
proof
let R1 being QC-alphabet;
let R28 being  Consistent (Subset of ( CQC-WFF R1 ));
assume L499: R1 is  countable;
assume L500: ( still_not-bound_in R28 ) is  finite;
L501: (( ExCl R1 ) is non  empty & ( ExCl R1 ) is  countable) by L499 , L354;
consider C24 being Function such that L502: ( dom C24 ) = ( NAT ) and L503: ( ExCl R1 ) = ( rng C24 ) by L501 , L360;
reconsider D39 = C24 as (Function of ( NAT ) , ( CQC-WFF R1 )) by L502 , L503 , FUNCT_2:2;
defpred S7[ (Element of ( NAT )) , set , set ] means (ex R41 being (Subset of ( bound_QC-variables R1 )) st (ex R42 being (Subset of ( bound_QC-variables R1 )) st (R41 = ( $2 `2 ) & R42 = ( R41 \/ ( still_not-bound_in { ( D39 . ( $1 + 1 ) ) } ) ) & $3 = [ ( ( 'not' ( D39 . ( $1 + 1 ) ) ) 'or' ( ( the_scope_of (D39 , ( $1 + 1 )) ) . (( bound_in (D39 , ( $1 + 1 )) ) , ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in R42) } ) )) ) ) , ( R41 \/ ( still_not-bound_in ( ( 'not' ( D39 . ( $1 + 1 ) ) ) 'or' ( ( the_scope_of (D39 , ( $1 + 1 )) ) . (( bound_in (D39 , ( $1 + 1 )) ) , ( x. ( R1 -one_in { R34 where R34 is (QC-symbol of R1) : (not ( x. R34 ) in R42) } ) )) ) ) ) ) ])));
L504: (for R11 being (Element of ( NAT )) holds (for R39 being (Element of [: ( CQC-WFF R1 ) , ( bool ( bound_QC-variables R1 ) ) :]) holds (ex R40 being (Element of [: ( CQC-WFF R1 ) , ( bool ( bound_QC-variables R1 ) ) :]) st S7[ R11 , R39 , R40 ])))
proof
let R11 being (Element of ( NAT ));
let R39 being (Element of [: ( CQC-WFF R1 ) , ( bool ( bound_QC-variables R1 ) ) :]);
set D40 = ( R39 `2 );
L505: (ex R38 being set st (ex R2 being set st (R38 in ( CQC-WFF R1 ) & R2 in ( bool ( bound_QC-variables R1 ) ) & R39 = [ R38 , R2 ]))) by ZFMISC_1:def 2;
reconsider D41 = D40 as (Subset of ( bound_QC-variables R1 )) by L505 , MCART_1:7;
set D42 = ( D41 \/ ( still_not-bound_in { ( D39 . ( R11 + 1 ) ) } ) );
set D43 = [ ( ( 'not' ( D39 . ( R11 + 1 ) ) ) 'or' ( ( the_scope_of (D39 , ( R11 + 1 )) ) . (( bound_in (D39 , ( R11 + 1 )) ) , ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in D42) } ) )) ) ) , ( D41 \/ ( still_not-bound_in ( ( 'not' ( D39 . ( R11 + 1 ) ) ) 'or' ( ( the_scope_of (D39 , ( R11 + 1 )) ) . (( bound_in (D39 , ( R11 + 1 )) ) , ( x. ( R1 -one_in { R34 where R34 is (QC-symbol of R1) : (not ( x. R34 ) in D42) } ) )) ) ) ) ) ];
take D43;
thus L506: thesis;
end;
reconsider D44 = [ ( ( 'not' ( D39 . ( 0 ) ) ) 'or' ( ( the_scope_of (D39 , ( 0 )) ) . (( bound_in (D39 , ( 0 )) ) , ( x. ( R1 -one_in { R34 where R34 is (QC-symbol of R1) : (not ( x. R34 ) in ( still_not-bound_in ( R28 \/ { ( D39 . ( 0 ) ) } ) )) } ) )) ) ) , ( still_not-bound_in ( R28 \/ { ( ( 'not' ( D39 . ( 0 ) ) ) 'or' ( ( the_scope_of (D39 , ( 0 )) ) . (( bound_in (D39 , ( 0 )) ) , ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in ( still_not-bound_in ( R28 \/ { ( D39 . ( 0 ) ) } ) )) } ) )) ) ) } ) ) ] as (Element of [: ( CQC-WFF R1 ) , ( bool ( bound_QC-variables R1 ) ) :]);
consider C25 being (Function of ( NAT ) , [: ( CQC-WFF R1 ) , ( bool ( bound_QC-variables R1 ) ) :]) such that L507: (( C25 . ( 0 ) ) = D44 & (for R11 being (Element of ( NAT )) holds S7[ R11 , ( C25 . R11 ) , ( C25 . ( R11 + 1 ) ) ])) from RECDEF_1:sch 2(L504);
set D45 = ( R28 \/ { ( ( C25 . R11 ) `1 ) where R11 is (Element of ( NAT )) : (not contradiction) } );
L508:
now
let R38 being set;
assume that
L509: R38 in D45;
L510:
now
assume L511: (not R38 in R28);
L512: R38 in { ( ( C25 . R11 ) `1 ) where R11 is (Element of ( NAT )) : (not contradiction) } by L511 , L509 , XBOOLE_0:def 3;
consider R11 being (Element of ( NAT )) such that L513: R38 = ( ( C25 . R11 ) `1 ) by L512;
L514: (ex R3 being set st (ex R4 being set st (R3 in ( CQC-WFF R1 ) & R4 in ( bool ( bound_QC-variables R1 ) ) & ( C25 . R11 ) = [ R3 , R4 ]))) by ZFMISC_1:def 2;
thus L515: R38 in ( CQC-WFF R1 ) by L514 , L513 , MCART_1:7;
end;
thus L516: R38 in ( CQC-WFF R1 ) by L510;
end;
reconsider D46 = D45 as (Subset of ( CQC-WFF R1 )) by L508 , TARSKI:def 3;
L517:
now
let R18 being (bound_QC-variable of R1);
let R12 being (Element of ( CQC-WFF R1 ));
L518: ( Ex (R18 , R12) ) in ( ExCl R1 ) by L339;
consider R38 being set such that L519: R38 in ( dom D39 ) and L520: ( D39 . R38 ) = ( Ex (R18 , R12) ) by L518 , L503 , FUNCT_1:def 3;
reconsider D47 = R38 as (Element of ( NAT )) by L519;
reconsider D48 = ( D39 . D47 ) as (Element of ( CQC-WFF R1 ));
L521: ( Ex-bound_in D48 ) = R18 by L520 , L408;
L522: ( Ex-the_scope_of D48 ) = R12 by L520 , L408;
L523: ( bound_in (D39 , D47) ) = R18 by L521 , L377;
L524: ( the_scope_of (D39 , D47) ) = R12 by L522 , L384;
L525: ( ( C25 . D47 ) `1 ) in { ( ( C25 . R11 ) `1 ) where R11 is (Element of ( NAT )) : (not contradiction) };
L526: { ( ( C25 . R11 ) `1 ) where R11 is (Element of ( NAT )) : (not contradiction) } c= D46 by XBOOLE_1:7;
L527:
now
assume L528: D47 = ( 0 );
take D49 = ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in ( still_not-bound_in ( R28 \/ { D48 } ) )) } ) );
L529: ( ( C25 . D47 ) `1 ) = ( ( 'not' D48 ) 'or' ( ( the_scope_of (D39 , D47) ) . (( bound_in (D39 , D47) ) , D49) ) ) by L507 , L528 , MCART_1:7;
thus L530: D46 |- ( ( 'not' ( Ex (R18 , R12) ) ) 'or' ( R12 . (R18 , D49) ) ) by L529 , L520 , L523 , L524 , L525 , L526 , L398;
end;
L531:
now
assume L532: D47 <> ( 0 );
consider C26 being  natural number such that L533: D47 = ( C26 + 1 ) by L532 , NAT_1:6;
reconsider D50 = C26 as (Element of ( NAT )) by ORDINAL1:def 12;
L534: (ex R41 being (Subset of ( bound_QC-variables R1 )) st (ex R42 being (Subset of ( bound_QC-variables R1 )) st (R41 = ( ( C25 . D50 ) `2 ) & R42 = ( R41 \/ ( still_not-bound_in { D48 } ) ) & ( C25 . D47 ) = [ ( ( 'not' D48 ) 'or' ( ( the_scope_of (D39 , D47) ) . (( bound_in (D39 , D47) ) , ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in R42) } ) )) ) ) , ( R41 \/ ( still_not-bound_in ( ( 'not' D48 ) 'or' ( ( the_scope_of (D39 , D47) ) . (( bound_in (D39 , D47) ) , ( x. ( R1 -one_in { R34 where R34 is (QC-symbol of R1) : (not ( x. R34 ) in R42) } ) )) ) ) ) ) ]))) by L507 , L533;
set D51 = ( ( C25 . D50 ) `2 );
set D52 = ( ( still_not-bound_in { D48 } ) \/ D51 );
take D53 = ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in D52) } ) );
L535: ( ( C25 . D47 ) `1 ) = ( ( 'not' D48 ) 'or' ( ( the_scope_of (D39 , D47) ) . (( bound_in (D39 , D47) ) , D53) ) ) by L534 , MCART_1:7;
thus L536: D46 |- ( ( 'not' ( Ex (R18 , R12) ) ) 'or' ( R12 . (R18 , D53) ) ) by L535 , L520 , L523 , L524 , L525 , L526 , L398;
end;
thus L537: (ex R21 being (bound_QC-variable of R1) st D46 |- ( ( 'not' ( Ex (R18 , R12) ) ) 'or' ( R12 . (R18 , R21) ) )) by L531 , L527;
end;
deffunc H1(set) = ( R28 \/ { ( ( C25 . R11 ) `1 ) where R11 is (Element of ( NAT )) : R11 in $1 } );
consider C27 being Function such that L538: (( dom C27 ) = ( NAT ) & (for R38 being set holds (R38 in ( NAT ) implies ( C27 . R38 ) = H1(R38)))) from FUNCT_1:sch 3;
L539: D46 c= ( union ( rng C27 ) )
proof
let R38 being set;
assume L540: R38 in D46;
L541:
now
assume L542: R38 in R28;
L543: ( C27 . ( 0 ) ) = ( R28 \/ { ( ( C25 . R11 ) `1 ) where R11 is (Element of ( NAT )) : R11 in ( 0 ) } ) by L538;
L544:
now
let R2 being set;
assume L545: R2 in { ( ( C25 . R11 ) `1 ) where R11 is (Element of ( NAT )) : R11 in ( 0 ) };
L546: (ex R11 being (Element of ( NAT )) st (R2 = ( ( C25 . R11 ) `1 ) & R11 in ( 0 ))) by L545;
thus L547: contradiction by L546;
end;
L548: { ( ( C25 . R11 ) `1 ) where R11 is (Element of ( NAT )) : R11 in ( 0 ) } = ( {} ) by L544 , XBOOLE_0:def 1;
L549: ( C27 . ( 0 ) ) in ( rng C27 ) by L538 , FUNCT_1:3;
thus L550: thesis by L549 , L542 , L543 , L548 , TARSKI:def 4;
end;
L551:
now
assume L552: R38 in { ( ( C25 . R11 ) `1 ) where R11 is (Element of ( NAT )) : (not contradiction) };
consider R11 being (Element of ( NAT )) such that L553: R38 = ( ( C25 . R11 ) `1 ) by L552;
L554: R11 < ( R11 + 1 ) by NAT_1:13;
L555: R11 in ( R11 + 1 ) by L554 , NAT_1:44;
L556: R38 in { ( ( C25 . R10 ) `1 ) where R10 is (Element of ( NAT )) : R10 in ( R11 + 1 ) } by L555 , L553;
L557: ( C27 . ( R11 + 1 ) ) = ( R28 \/ { ( ( C25 . R10 ) `1 ) where R10 is (Element of ( NAT )) : R10 in ( R11 + 1 ) } ) by L538;
L558: { ( ( C25 . R10 ) `1 ) where R10 is (Element of ( NAT )) : R10 in ( R11 + 1 ) } c= ( C27 . ( R11 + 1 ) ) by L557 , XBOOLE_1:7;
L559: ( C27 . ( R11 + 1 ) ) in ( rng C27 ) by L538 , FUNCT_1:3;
thus L560: thesis by L559 , L556 , L558 , TARSKI:def 4;
end;
thus L561: thesis by L551 , L540 , L541 , XBOOLE_0:def 3;
end;
L562: ( union ( rng C27 ) ) c= D46
proof
let R38 being set;
assume L563: R38 in ( union ( rng C27 ) );
consider R2 being set such that L564: R38 in R2 and L565: R2 in ( rng C27 ) by L563 , TARSKI:def 4;
consider R3 being set such that L566: R3 in ( dom C27 ) and L567: ( C27 . R3 ) = R2 by L565 , FUNCT_1:def 3;
reconsider D54 = R3 as (Element of ( NAT )) by L538 , L566;
L568: R38 in ( R28 \/ { ( ( C25 . R10 ) `1 ) where R10 is (Element of ( NAT )) : R10 in D54 } ) by L538 , L564 , L567;
L569:
now
assume L570: R38 in R28;
L571: R28 c= D46 by XBOOLE_1:7;
thus L572: thesis by L571 , L570;
end;
L573:
now
assume L574: R38 in { ( ( C25 . R10 ) `1 ) where R10 is (Element of ( NAT )) : R10 in D54 };
L575: (ex R10 being (Element of ( NAT )) st (R38 = ( ( C25 . R10 ) `1 ) & R10 in D54)) by L574;
L576: R38 in { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : (not contradiction) } by L575;
L577: { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : (not contradiction) } c= D46 by XBOOLE_1:7;
thus L578: thesis by L577 , L576;
end;
thus L579: thesis by L573 , L568 , L569 , XBOOLE_0:def 3;
end;
L580: D46 = ( union ( rng C27 ) ) by L562 , L539 , XBOOLE_0:def 10;
L581: (for R11 being (Element of ( NAT )) holds (for R10 being (Element of ( NAT )) holds ((R10 in ( dom C27 ) & R11 in ( dom C27 ) & R11 < R10) implies ( C27 . R11 ) c= ( C27 . R10 ))))
proof
let R11 being (Element of ( NAT ));
let R10 being (Element of ( NAT ));
assume that
L582: R10 in ( dom C27 )
and
L583: R11 in ( dom C27 )
and
L584: R11 < R10;
L585: ( C27 . R11 ) = ( R28 \/ { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in R11 } ) by L538;
L586: ( C27 . R10 ) = ( R28 \/ { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in R10 } ) by L538;
L587:
now
let R38 being set;
assume that
L588: R38 in ( C27 . R11 );
L589:
now
assume L590: R38 in R28;
L591: R28 c= ( C27 . R10 ) by L586 , XBOOLE_1:7;
thus L592: R38 in ( C27 . R10 ) by L591 , L590;
end;
L593:
now
assume L594: R38 in { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in R11 };
consider R7 being (Element of ( NAT )) such that L595: ( ( C25 . R7 ) `1 ) = R38 and L596: R7 in R11 by L594;
L597: R7 < R11 by L596 , NAT_1:44;
L598: R7 < R10 by L597 , L584 , XXREAL_0:2;
L599: R7 in R10 by L598 , NAT_1:44;
L600: R38 in { ( ( C25 . R8 ) `1 ) where R8 is (Element of ( NAT )) : R8 in R10 } by L599 , L595;
L601: { ( ( C25 . R8 ) `1 ) where R8 is (Element of ( NAT )) : R8 in R10 } c= ( C27 . R10 ) by L586 , XBOOLE_1:7;
thus L602: R38 in ( C27 . R10 ) by L601 , L600;
end;
thus L603: R38 in ( C27 . R10 ) by L593 , L585 , L588 , L589 , XBOOLE_0:def 3;
end;
thus L604: thesis by L587 , TARSKI:def 3;
end;
L605: ( rng C27 ) c= ( bool ( CQC-WFF R1 ) )
proof
let R38 being set;
assume L606: R38 in ( rng C27 );
consider R2 being set such that L607: R2 in ( dom C27 ) and L608: ( C27 . R2 ) = R38 by L606 , FUNCT_1:def 3;
reconsider D55 = R2 as (Element of ( NAT )) by L538 , L607;
L609: ( C27 . D55 ) = ( R28 \/ { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in D55 } ) by L538;
L610:
now
let R3 being set;
assume L611: R3 in { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in D55 };
L612: (ex R7 being (Element of ( NAT )) st (( ( C25 . R7 ) `1 ) = R3 & R7 in D55)) by L611;
thus L613: R3 in ( CQC-WFF R1 ) by L612 , MCART_1:10;
end;
L614: { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in D55 } c= ( CQC-WFF R1 ) by L610 , TARSKI:def 3;
L615: ( C27 . D55 ) c= ( CQC-WFF R1 ) by L614 , L609 , XBOOLE_1:8;
thus L616: thesis by L615 , L608;
end;
reconsider D56 = C27 as (Function of ( NAT ) , ( bool ( CQC-WFF R1 ) )) by L605 , L538 , FUNCT_2:2;
L617: (for R11 being (Element of ( NAT )) holds ( D56 . ( R11 + 1 ) ) = ( ( D56 . R11 ) \/ { ( ( C25 . R11 ) `1 ) } ))
proof
let R11 being (Element of ( NAT ));
L618:
now
let R38 being set;
assume L619: R38 in { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in ( R11 + 1 ) };
consider R8 being (Element of ( NAT )) such that L620: R38 = ( ( C25 . R8 ) `1 ) and L621: R8 in ( R11 + 1 ) by L619;
L622: R8 < ( R11 + 1 ) by L621 , NAT_1:44;
L623: ( R8 + 1 ) <= ( R11 + 1 ) by L622 , NAT_1:13;
L624:
now
assume L625: ( R8 + 1 ) = ( R11 + 1 );
L626: R38 in { ( ( C25 . R11 ) `1 ) } by L625 , L620 , TARSKI:def 1;
L627: { ( ( C25 . R11 ) `1 ) } c= ( { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in R11 } \/ { ( ( C25 . R11 ) `1 ) } ) by XBOOLE_1:7;
thus L628: R38 in ( { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in R11 } \/ { ( ( C25 . R11 ) `1 ) } ) by L627 , L626;
end;
L629:
now
assume L630: ( R8 + 1 ) <= R11;
L631: R8 < R11 by L630 , NAT_1:13;
L632: R8 in R11 by L631 , NAT_1:44;
L633: R38 in { ( ( C25 . R9 ) `1 ) where R9 is (Element of ( NAT )) : R9 in R11 } by L632 , L620;
L634: { ( ( C25 . R9 ) `1 ) where R9 is (Element of ( NAT )) : R9 in R11 } c= ( { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in R11 } \/ { ( ( C25 . R11 ) `1 ) } ) by XBOOLE_1:7;
thus L635: R38 in ( { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in R11 } \/ { ( ( C25 . R11 ) `1 ) } ) by L634 , L633;
end;
thus L636: R38 in ( { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in R11 } \/ { ( ( C25 . R11 ) `1 ) } ) by L629 , L623 , L624 , NAT_1:8;
end;
L637: { ( ( C25 . R9 ) `1 ) where R9 is (Element of ( NAT )) : R9 in ( R11 + 1 ) } c= ( { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in R11 } \/ { ( ( C25 . R11 ) `1 ) } ) by L618 , TARSKI:def 3;
L638:
now
let R38 being set;
assume L639: R38 in ( { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in R11 } \/ { ( ( C25 . R11 ) `1 ) } );
L640:
now
assume L641: R38 in { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in R11 };
consider R8 being (Element of ( NAT )) such that L642: ( ( C25 . R8 ) `1 ) = R38 and L643: R8 in R11 by L641;
L644: R11 <= ( R11 + 1 ) by NAT_1:11;
L645: R8 < R11 by L643 , NAT_1:44;
L646: R8 < ( R11 + 1 ) by L645 , L644 , XXREAL_0:2;
L647: R8 in ( R11 + 1 ) by L646 , NAT_1:44;
thus L648: R38 in { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in ( R11 + 1 ) } by L647 , L642;
end;
L649:
now
assume L650: R38 in { ( ( C25 . R11 ) `1 ) };
L651: R38 = ( ( C25 . R11 ) `1 ) by L650 , TARSKI:def 1;
L652: R11 < ( R11 + 1 ) by NAT_1:13;
L653: R11 in ( R11 + 1 ) by L652 , NAT_1:44;
thus L654: R38 in { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in ( R11 + 1 ) } by L653 , L651;
end;
thus L655: R38 in { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in ( R11 + 1 ) } by L649 , L639 , L640 , XBOOLE_0:def 3;
end;
L656: ( { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in R11 } \/ { ( ( C25 . R11 ) `1 ) } ) c= { ( ( C25 . R9 ) `1 ) where R9 is (Element of ( NAT )) : R9 in ( R11 + 1 ) } by L638 , TARSKI:def 3;
L657: ( { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in R11 } \/ { ( ( C25 . R11 ) `1 ) } ) = { ( ( C25 . R9 ) `1 ) where R9 is (Element of ( NAT )) : R9 in ( R11 + 1 ) } by L656 , L637 , XBOOLE_0:def 10;
L658: ( D56 . ( R11 + 1 ) ) = ( R28 \/ ( { ( ( C25 . R9 ) `1 ) where R9 is (Element of ( NAT )) : R9 in R11 } \/ { ( ( C25 . R11 ) `1 ) } ) ) by L657 , L538;
L659: ( D56 . ( R11 + 1 ) ) = ( ( R28 \/ { ( ( C25 . R9 ) `1 ) where R9 is (Element of ( NAT )) : R9 in R11 } ) \/ { ( ( C25 . R11 ) `1 ) } ) by L658 , XBOOLE_1:4;
thus L660: thesis by L659 , L538;
end;
defpred S8[ (Element of ( NAT )) ] means (( ( C25 . $1 ) `2 ) is  finite & ( ( C25 . $1 ) `2 ) is (Subset of ( bound_QC-variables R1 )));
L661: S8[ ( 0 ) ]
proof
L662: ( ( C25 . ( 0 ) ) `2 ) = ( still_not-bound_in ( R28 \/ { ( ( 'not' ( D39 . ( 0 ) ) ) 'or' ( ( the_scope_of (D39 , ( 0 )) ) . (( bound_in (D39 , ( 0 )) ) , ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in ( still_not-bound_in ( R28 \/ { ( D39 . ( 0 ) ) } ) )) } ) )) ) ) } ) ) by L507 , MCART_1:7;
reconsider D57 = ( ( 'not' ( D39 . ( 0 ) ) ) 'or' ( ( the_scope_of (D39 , ( 0 )) ) . (( bound_in (D39 , ( 0 )) ) , ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in ( still_not-bound_in ( R28 \/ { ( D39 . ( 0 ) ) } ) )) } ) )) ) ) as (Element of ( CQC-WFF R1 ));
L663: ( still_not-bound_in D57 ) is  finite by CQC_SIM1:19;
L664: ( still_not-bound_in { D57 } ) is  finite by L663 , L430;
L665: ( ( still_not-bound_in { D57 } ) \/ ( still_not-bound_in R28 ) ) is  finite by L664 , L500;
thus L666: thesis by L665 , L662 , L442;
end;
L667: (for R9 being (Element of ( NAT )) holds (S8[ R9 ] implies S8[ ( R9 + 1 ) ]))
proof
let R9 being (Element of ( NAT ));
assume that
L668: S8[ R9 ];
L669: (ex R41 being (Subset of ( bound_QC-variables R1 )) st (ex R42 being (Subset of ( bound_QC-variables R1 )) st (R41 = ( ( C25 . R9 ) `2 ) & R42 = ( R41 \/ ( still_not-bound_in { ( D39 . ( R9 + 1 ) ) } ) ) & ( C25 . ( R9 + 1 ) ) = [ ( ( 'not' ( D39 . ( R9 + 1 ) ) ) 'or' ( ( the_scope_of (D39 , ( R9 + 1 )) ) . (( bound_in (D39 , ( R9 + 1 )) ) , ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in R42) } ) )) ) ) , ( R41 \/ ( still_not-bound_in ( ( 'not' ( D39 . ( R9 + 1 ) ) ) 'or' ( ( the_scope_of (D39 , ( R9 + 1 )) ) . (( bound_in (D39 , ( R9 + 1 )) ) , ( x. ( R1 -one_in { R34 where R34 is (QC-symbol of R1) : (not ( x. R34 ) in R42) } ) )) ) ) ) ) ]))) by L507;
set D58 = ( ( C25 . R9 ) `2 );
reconsider D59 = D58 as (Subset of ( bound_QC-variables R1 )) by L668;
set D60 = ( D59 \/ ( still_not-bound_in { ( D39 . ( R9 + 1 ) ) } ) );
set D61 = ( ( 'not' ( D39 . ( R9 + 1 ) ) ) 'or' ( ( the_scope_of (D39 , ( R9 + 1 )) ) . (( bound_in (D39 , ( R9 + 1 )) ) , ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in D60) } ) )) ) );
L670: ( still_not-bound_in D61 ) is  finite by CQC_SIM1:19;
thus L671: thesis by L670 , L668 , L669 , MCART_1:7;
end;
L672: (for R9 being (Element of ( NAT )) holds S8[ R9 ]) from NAT_1:sch 1(L661 , L667);
defpred S9[ (Element of ( NAT )) ] means (( still_not-bound_in ( D56 . ( $1 + 1 ) ) ) c= ( ( C25 . $1 ) `2 ) & (not ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in ( ( still_not-bound_in { ( D39 . ( $1 + 1 ) ) } ) \/ ( ( C25 . $1 ) `2 ) )) } ) ) in ( still_not-bound_in ( ( D56 . ( $1 + 1 ) ) \/ { ( D39 . ( $1 + 1 ) ) } ) )));
L673: (for R9 being (Element of ( NAT )) holds (( still_not-bound_in ( D56 . ( R9 + 1 ) ) ) c= ( ( C25 . R9 ) `2 ) & (not ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in ( ( still_not-bound_in { ( D39 . ( R9 + 1 ) ) } ) \/ ( ( C25 . R9 ) `2 ) )) } ) ) in ( still_not-bound_in ( ( D56 . ( R9 + 1 ) ) \/ { ( D39 . ( R9 + 1 ) ) } ) ))))
proof
L674: S9[ ( 0 ) ]
proof
set D62 = ( ( 'not' ( D39 . ( 0 ) ) ) 'or' ( ( the_scope_of (D39 , ( 0 )) ) . (( bound_in (D39 , ( 0 )) ) , ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in ( still_not-bound_in ( R28 \/ { ( D39 . ( 0 ) ) } ) )) } ) )) ) );
set D63 = { D62 };
reconsider D64 = ( D39 . 1 ) as (Element of ( CQC-WFF R1 ));
L675: ( ( C25 . ( 0 ) ) `2 ) = ( still_not-bound_in ( R28 \/ D63 ) ) by L507 , MCART_1:7;
reconsider D65 = ( ( C25 . ( 0 ) ) `2 ) as (Subset of ( bound_QC-variables R1 )) by L507 , MCART_1:7;
reconsider D66 = ( ( still_not-bound_in { D64 } ) \/ D65 ) as (Element of ( bool ( bound_QC-variables R1 ) ));
L676: ( still_not-bound_in D64 ) is  finite by CQC_SIM1:19;
L677: ( still_not-bound_in { D64 } ) is  finite by L676 , L430;
consider R18 being (bound_QC-variable of R1) such that L678: (not R18 in D66) by L677 , L661 , L463;
consider R34 being (QC-symbol of R1) such that L679: ( x. R34 ) = R18 by QC_LANG3:30;
L680: R34 in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in D66) } by L678 , L679;
reconsider D67 = { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in D66) } as non  empty set by L680;
L681:
now
let R38 being set;
assume L682: R38 in D67;
L683: (ex R33 being (QC-symbol of R1) st (R38 = R33 & (not ( x. R33 ) in D66))) by L682;
thus L684: R38 in ( QC-symbols R1 ) by L683;
end;
reconsider D68 = { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in D66) } as non  empty (Subset of ( QC-symbols R1 )) by L681 , TARSKI:def 3;
set D69 = ( R1 -one_in D68 );
L685: D69 = the (Element of D68) by QC_LANG1:def 41;
L686: D69 in D68 by L685;
L687: (ex R33 being (QC-symbol of R1) st (R33 = D69 & (not ( x. R33 ) in D66))) by L686;
L688: ( D56 . ( 0 ) ) = ( R28 \/ { ( ( C25 . R11 ) `1 ) where R11 is (Element of ( NAT )) : R11 in ( 0 ) } ) by L538;
L689:
now
let R2 being set;
assume L690: R2 in { ( ( C25 . R11 ) `1 ) where R11 is (Element of ( NAT )) : R11 in ( 0 ) };
L691: (ex R11 being (Element of ( NAT )) st (R2 = ( ( C25 . R11 ) `1 ) & R11 in ( 0 ))) by L690;
thus L692: contradiction by L691;
end;
L693: { ( ( C25 . R11 ) `1 ) where R11 is (Element of ( NAT )) : R11 in ( 0 ) } = ( {} ) by L689 , XBOOLE_0:def 1;
L694: ( ( C25 . ( 0 ) ) `1 ) = D62 by L507 , MCART_1:7;
L695: ( D56 . ( ( 0 ) + 1 ) ) = ( R28 \/ { D62 } ) by L694 , L617 , L688 , L693;
thus L696: thesis by L695 , L675 , L687 , L442;
end;
L697: (for R9 being (Element of ( NAT )) holds (S9[ R9 ] implies S9[ ( R9 + 1 ) ]))
proof
let R9 being (Element of ( NAT ));
assume that
L698: S9[ R9 ];
reconsider D70 = ( D39 . ( R9 + 2 ) ) as (Element of ( CQC-WFF R1 ));
L699: (ex R41 being (Subset of ( bound_QC-variables R1 )) st (ex R42 being (Subset of ( bound_QC-variables R1 )) st (R41 = ( ( C25 . R9 ) `2 ) & R42 = ( R41 \/ ( still_not-bound_in { ( D39 . ( R9 + 1 ) ) } ) ) & ( C25 . ( R9 + 1 ) ) = [ ( ( 'not' ( D39 . ( R9 + 1 ) ) ) 'or' ( ( the_scope_of (D39 , ( R9 + 1 )) ) . (( bound_in (D39 , ( R9 + 1 )) ) , ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in R42) } ) )) ) ) , ( R41 \/ ( still_not-bound_in ( ( 'not' ( D39 . ( R9 + 1 ) ) ) 'or' ( ( the_scope_of (D39 , ( R9 + 1 )) ) . (( bound_in (D39 , ( R9 + 1 )) ) , ( x. ( R1 -one_in { R34 where R34 is (QC-symbol of R1) : (not ( x. R34 ) in R42) } ) )) ) ) ) ) ]))) by L507;
set D71 = ( ( C25 . R9 ) `2 );
reconsider D72 = D71 as (Subset of ( bound_QC-variables R1 )) by L672;
set D73 = ( D72 \/ ( still_not-bound_in { ( D39 . ( R9 + 1 ) ) } ) );
set D74 = ( ( 'not' ( D39 . ( R9 + 1 ) ) ) 'or' ( ( the_scope_of (D39 , ( R9 + 1 )) ) . (( bound_in (D39 , ( R9 + 1 )) ) , ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in D73) } ) )) ) );
L700: ( ( C25 . ( R9 + 1 ) ) `1 ) = D74 by L699 , MCART_1:7;
L701: ( ( C25 . ( R9 + 1 ) ) `2 ) = ( D72 \/ ( still_not-bound_in D74 ) ) by L699 , MCART_1:7;
reconsider D75 = ( ( C25 . ( R9 + 1 ) ) `2 ) as (Subset of ( bound_QC-variables R1 )) by L699 , MCART_1:7;
reconsider D76 = ( ( still_not-bound_in { D70 } ) \/ D75 ) as (Element of ( bool ( bound_QC-variables R1 ) ));
L702: ( still_not-bound_in D70 ) is  finite by CQC_SIM1:19;
L703: ( still_not-bound_in { D70 } ) is  finite by L702 , L430;
L704: ( ( C25 . ( R9 + 1 ) ) `2 ) is  finite by L672;
consider R18 being (bound_QC-variable of R1) such that L705: (not R18 in D76) by L704 , L703 , L463;
consider R34 being (QC-symbol of R1) such that L706: ( x. R34 ) = R18 by QC_LANG3:30;
L707: R34 in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in ( ( still_not-bound_in { D70 } ) \/ D75 )) } by L705 , L706;
reconsider D77 = { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in ( ( still_not-bound_in { D70 } ) \/ D75 )) } as non  empty set by L707;
L708:
now
let R38 being set;
assume L709: R38 in D77;
L710: (ex R33 being (QC-symbol of R1) st (R38 = R33 & (not ( x. R33 ) in D76))) by L709;
thus L711: R38 in ( QC-symbols R1 ) by L710;
end;
reconsider D78 = { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in ( ( still_not-bound_in { D70 } ) \/ D75 )) } as non  empty (Subset of ( QC-symbols R1 )) by L708 , TARSKI:def 3;
set D79 = ( R1 -one_in D78 );
L712: D79 = the (Element of D78) by QC_LANG1:def 41;
L713: D79 in D78 by L712;
L714: (ex R33 being (QC-symbol of R1) st (R33 = D79 & (not ( x. R33 ) in D76))) by L713;
L715: (not ( x. D79 ) in ( still_not-bound_in { D70 } )) by L714 , XBOOLE_0:def 3;
L716: ( ( still_not-bound_in ( D56 . ( R9 + 1 ) ) ) \/ ( still_not-bound_in D74 ) ) c= D75 by L698 , L701 , XBOOLE_1:9;
L717: ( ( still_not-bound_in ( D56 . ( R9 + 1 ) ) ) \/ ( still_not-bound_in { D74 } ) ) c= D75 by L716 , L430;
L718: ( still_not-bound_in ( ( D56 . ( R9 + 1 ) ) \/ { D74 } ) ) c= D75 by L717 , L442;
L719: ( still_not-bound_in ( D56 . ( ( R9 + 1 ) + 1 ) ) ) c= D75 by L718 , L617 , L700;
L720: (not ( x. D79 ) in ( still_not-bound_in ( D56 . ( ( R9 + 1 ) + 1 ) ) )) by L719 , L714 , XBOOLE_0:def 3;
L721: (not ( x. D79 ) in ( ( still_not-bound_in ( D56 . ( ( R9 + 1 ) + 1 ) ) ) \/ ( still_not-bound_in { D70 } ) )) by L720 , L715 , XBOOLE_0:def 3;
thus L722: thesis by L721 , L617 , L700 , L718 , L442;
end;
L723: (for R9 being (Element of ( NAT )) holds S9[ R9 ]) from NAT_1:sch 1(L674 , L697);
thus L724: thesis by L723;
end;
defpred S10[ (Element of ( NAT )) ] means ( D56 . $1 ) is  Consistent;
L725:
now
let R38 being set;
assume L726: R38 in { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in ( 0 ) };
L727: (ex R8 being (Element of ( NAT )) st (R38 = ( ( C25 . R8 ) `1 ) & R8 in ( 0 ))) by L726;
thus L728: contradiction by L727;
end;
L729: { ( ( C25 . R7 ) `1 ) where R7 is (Element of ( NAT )) : R7 in ( 0 ) } = ( {} ) by L725 , XBOOLE_0:def 1;
L730: ( D56 . ( 0 ) ) = ( R28 \/ ( {} ) ) by L729 , L538;
L731: S10[ ( 0 ) ] by L730;
L732: (for R9 being (Element of ( NAT )) holds (S10[ R9 ] implies S10[ ( R9 + 1 ) ]))
proof
let R9 being (Element of ( NAT ));
assume that
L733: S10[ R9 ];
L734: (ex R3 being set st (ex R4 being set st (R3 in ( CQC-WFF R1 ) & R4 in ( bool ( bound_QC-variables R1 ) ) & ( C25 . R9 ) = [ R3 , R4 ]))) by ZFMISC_1:def 2;
reconsider D80 = ( ( C25 . R9 ) `1 ) as (Element of ( CQC-WFF R1 )) by L734 , MCART_1:7;
L735:
now
assume L736: ( D56 . ( R9 + 1 ) ) is  Inconsistent;
L737: ( D56 . ( R9 + 1 ) ) |- ( 'not' ( VERUM R1 ) ) by L736 , HENMODEL:6;
L738: ( ( D56 . R9 ) \/ { D80 } ) |- ( 'not' ( VERUM R1 ) ) by L737 , L617;
consider C28 being (FinSequence of ( CQC-WFF R1 )) such that L739: ( rng C28 ) c= ( D56 . R9 ) and L740:  |- ( ( C28 ^ <* D80 *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L738 , HENMODEL:8;
L741:  |- ( ( C28 ^ <* ( 'not' ( D39 . R9 ) ) *> ) ^ <* ( 'not' ( D39 . R9 ) ) *> ) by CALCUL_2:21;
L742:
now
assume L743: R9 = ( 0 );
L744: D80 = ( ( 'not' ( D39 . ( 0 ) ) ) 'or' ( ( the_scope_of (D39 , ( 0 )) ) . (( bound_in (D39 , ( 0 )) ) , ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in ( still_not-bound_in ( R28 \/ { ( D39 . ( 0 ) ) } ) )) } ) )) ) ) by L743 , L507 , MCART_1:7;
reconsider D81 = ( ( the_scope_of (D39 , ( 0 )) ) . (( bound_in (D39 , ( 0 )) ) , ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in ( still_not-bound_in ( R28 \/ { ( D39 . ( 0 ) ) } ) )) } ) )) ) as (Element of ( CQC-WFF R1 ));
L745:  |- ( ( C28 ^ <* ( 'not' ( D39 . R9 ) ) *> ) ^ <* ( ( 'not' ( D39 . R9 ) ) 'or' D81 ) *> ) by L741 , CALCUL_1:51;
L746: ( ( 0 ) + 1 ) <= ( len ( C28 ^ <* D80 *> ) ) by CALCUL_1:10;
L747:  |- ( ( ( ( Ant ( C28 ^ <* D80 *> ) ) ^ <* ( 'not' ( D39 . R9 ) ) *> ) ^ <* ( Suc ( C28 ^ <* D80 *> ) ) *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L746 , L740 , L421;
L748:  |- ( ( ( C28 ^ <* ( 'not' ( D39 . R9 ) ) *> ) ^ <* ( Suc ( C28 ^ <* D80 *> ) ) *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L747 , CALCUL_1:5;
L749:  |- ( ( ( C28 ^ <* ( 'not' ( D39 . R9 ) ) *> ) ^ <* D80 *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L748 , CALCUL_1:5;
L750:  |- ( ( C28 ^ <* ( 'not' ( D39 . R9 ) ) *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L749 , L743 , L744 , L745 , CALCUL_2:24;
L751:  |- ( ( C28 ^ <* D81 *> ) ^ <* D81 *> ) by CALCUL_2:21;
L752:  |- ( ( C28 ^ <* D81 *> ) ^ <* ( ( 'not' ( D39 . R9 ) ) 'or' D81 ) *> ) by L751 , CALCUL_1:52;
L753: ( ( 0 ) + 1 ) <= ( len ( C28 ^ <* D80 *> ) ) by CALCUL_1:10;
L754:  |- ( ( ( ( Ant ( C28 ^ <* D80 *> ) ) ^ <* D81 *> ) ^ <* ( Suc ( C28 ^ <* D80 *> ) ) *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L753 , L740 , L421;
L755:  |- ( ( ( C28 ^ <* D81 *> ) ^ <* ( Suc ( C28 ^ <* D80 *> ) ) *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L754 , CALCUL_1:5;
L756:  |- ( ( ( C28 ^ <* D81 *> ) ^ <* D80 *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L755 , CALCUL_1:5;
L757:  |- ( ( C28 ^ <* D81 *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L756 , L743 , L744 , L752 , CALCUL_2:24;
reconsider D82 = ( D39 . ( 0 ) ) as (Element of ( CQC-WFF R1 ));
set D83 = ( still_not-bound_in ( R28 \/ { D82 } ) );
L758: ( still_not-bound_in D82 ) is  finite by CQC_SIM1:19;
L759: ( still_not-bound_in { D82 } ) is  finite by L758 , L430;
L760: ( ( still_not-bound_in { D82 } ) \/ ( still_not-bound_in R28 ) ) is  finite by L759 , L500;
L761: D83 is  finite by L760 , L442;
consider R18 being (bound_QC-variable of R1) such that L762: (not R18 in D83) by L761 , L463;
consider R34 being (QC-symbol of R1) such that L763: ( x. R34 ) = R18 by QC_LANG3:30;
L764: R34 in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in D83) } by L762 , L763;
reconsider D84 = { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in D83) } as non  empty set by L764;
L765:
now
let R38 being set;
assume L766: R38 in D84;
L767: (ex R33 being (QC-symbol of R1) st (R38 = R33 & (not ( x. R33 ) in D83))) by L766;
thus L768: R38 in ( QC-symbols R1 ) by L767;
end;
reconsider D85 = { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in D83) } as non  empty (Subset of ( QC-symbols R1 )) by L765 , TARSKI:def 3;
set D86 = ( R1 -one_in D85 );
L769: D86 = the (Element of D85) by QC_LANG1:def 41;
L770: D86 in D85 by L769;
consider R33 being (QC-symbol of R1) such that L771: R33 = D86 and L772: (not ( x. R33 ) in D83) by L770;
L773: (not ( x. R33 ) in ( ( still_not-bound_in R28 ) \/ ( still_not-bound_in { D82 } ) )) by L772 , L442;
L774: (not ( x. R33 ) in ( still_not-bound_in { D82 } )) by L773 , XBOOLE_0:def 3;
L775: ( D56 . ( 0 ) ) = ( R28 \/ { ( ( C25 . R11 ) `1 ) where R11 is (Element of ( NAT )) : R11 in ( 0 ) } ) by L538;
L776:
now
let R2 being set;
assume L777: R2 in { ( ( C25 . R11 ) `1 ) where R11 is (Element of ( NAT )) : R11 in ( 0 ) };
L778: (ex R11 being (Element of ( NAT )) st (R2 = ( ( C25 . R11 ) `1 ) & R11 in ( 0 ))) by L777;
thus L779: contradiction by L778;
end;
L780: { ( ( C25 . R11 ) `1 ) where R11 is (Element of ( NAT )) : R11 in ( 0 ) } = ( {} ) by L776 , XBOOLE_0:def 1;
L781: ( still_not-bound_in ( rng C28 ) ) c= ( still_not-bound_in R28 ) by L780 , L739 , L743 , L775 , L470;
L782: (not ( x. R33 ) in ( still_not-bound_in ( rng C28 ) )) by L781 , L773 , XBOOLE_0:def 3;
L783: (not ( x. D86 ) in ( still_not-bound_in C28 )) by L782 , L771 , L480;
reconsider D87 = ( the_scope_of (D39 , ( 0 )) ) as (Element of ( CQC-WFF R1 ));
reconsider D88 = ( bound_in (D39 , ( 0 )) ) as (bound_QC-variable of R1);
L784: D82 in ( ExCl R1 ) by L502 , L503 , FUNCT_1:3;
consider R22 being (bound_QC-variable of R1), R17 being (Element of ( CQC-WFF R1 )) such that L785: D82 = ( Ex (R22 , R17) ) by L784 , L339;
L786: R17 = ( Ex-the_scope_of D82 ) by L785 , L408;
L787: D87 = ( Ex-the_scope_of D82 ) by L384;
L788: R22 = ( Ex-bound_in D82 ) by L785 , L408;
L789: D88 = ( Ex-bound_in D82 ) by L377;
L790: (not ( x. D86 ) in ( still_not-bound_in D82 )) by L771 , L774 , L430;
L791: (not ( x. D86 ) in ( still_not-bound_in <* D82 *> )) by L790 , CALCUL_1:60;
L792: (not ( x. D86 ) in ( ( still_not-bound_in C28 ) \/ ( still_not-bound_in <* D82 *> ) )) by L791 , L783 , XBOOLE_0:def 3;
L793: (not ( x. D86 ) in ( still_not-bound_in ( C28 ^ <* D82 *> ) )) by L792 , CALCUL_1:59;
L794: ( still_not-bound_in ( VERUM R1 ) ) = ( {} ) by QC_LANG3:3;
L795: (not ( x. D86 ) in ( still_not-bound_in ( 'not' ( VERUM R1 ) ) )) by L794 , QC_LANG3:7;
L796: (not ( x. D86 ) in ( still_not-bound_in <* ( 'not' ( VERUM R1 ) ) *> )) by L795 , CALCUL_1:60;
L797: (not ( x. D86 ) in ( ( still_not-bound_in ( C28 ^ <* D82 *> ) ) \/ ( still_not-bound_in <* ( 'not' ( VERUM R1 ) ) *> ) )) by L796 , L793 , XBOOLE_0:def 3;
L798: (not ( x. D86 ) in ( still_not-bound_in ( ( C28 ^ <* D82 *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) )) by L797 , CALCUL_1:59;
L799:  |- ( ( C28 ^ <* D82 *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L798 , L757 , L785 , L786 , L787 , L788 , L789 , CALCUL_1:61;
L800:  |- ( C28 ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L799 , L743 , L750 , CALCUL_2:26;
L801: ( D56 . R9 ) |- ( 'not' ( VERUM R1 ) ) by L800 , L739 , HENMODEL:def 1;
thus L802: contradiction by L801 , L730 , L743 , L415;
end;
L803:
now
assume L804: R9 <> ( 0 );
consider C29 being  natural number such that L805: R9 = ( C29 + 1 ) by L804 , NAT_1:6;
reconsider D89 = C29 as (Element of ( NAT )) by ORDINAL1:def 12;
L806: (ex R41 being (Subset of ( bound_QC-variables R1 )) st (ex R42 being (Subset of ( bound_QC-variables R1 )) st (R41 = ( ( C25 . D89 ) `2 ) & R42 = ( R41 \/ ( still_not-bound_in { ( D39 . ( D89 + 1 ) ) } ) ) & ( C25 . ( D89 + 1 ) ) = [ ( ( 'not' ( D39 . ( D89 + 1 ) ) ) 'or' ( ( the_scope_of (D39 , ( D89 + 1 )) ) . (( bound_in (D39 , ( D89 + 1 )) ) , ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in R42) } ) )) ) ) , ( R41 \/ ( still_not-bound_in ( ( 'not' ( D39 . ( D89 + 1 ) ) ) 'or' ( ( the_scope_of (D39 , ( D89 + 1 )) ) . (( bound_in (D39 , ( D89 + 1 )) ) , ( x. ( R1 -one_in { R34 where R34 is (QC-symbol of R1) : (not ( x. R34 ) in R42) } ) )) ) ) ) ) ]))) by L507;
set D90 = ( ( C25 . D89 ) `2 );
set D91 = ( D39 . ( D89 + 1 ) );
set D92 = ( D90 \/ ( still_not-bound_in { D91 } ) );
set D93 = ( ( 'not' D91 ) 'or' ( ( the_scope_of (D39 , ( D89 + 1 )) ) . (( bound_in (D39 , ( D89 + 1 )) ) , ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in D92) } ) )) ) );
L807: D80 = D93 by L805 , L806 , MCART_1:7;
reconsider D94 = ( ( the_scope_of (D39 , ( D89 + 1 )) ) . (( bound_in (D39 , ( D89 + 1 )) ) , ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in D92) } ) )) ) as (Element of ( CQC-WFF R1 ));
L808:  |- ( ( C28 ^ <* ( 'not' D91 ) *> ) ^ <* D93 *> ) by L741 , L805 , CALCUL_1:51;
L809: ( ( 0 ) + 1 ) <= ( len ( C28 ^ <* D80 *> ) ) by CALCUL_1:10;
L810:  |- ( ( ( ( Ant ( C28 ^ <* D80 *> ) ) ^ <* ( 'not' D91 ) *> ) ^ <* ( Suc ( C28 ^ <* D80 *> ) ) *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L809 , L740 , L421;
L811:  |- ( ( ( C28 ^ <* ( 'not' D91 ) *> ) ^ <* ( Suc ( C28 ^ <* D80 *> ) ) *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L810 , CALCUL_1:5;
L812:  |- ( ( ( C28 ^ <* ( 'not' D91 ) *> ) ^ <* D80 *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L811 , CALCUL_1:5;
L813:  |- ( ( C28 ^ <* ( 'not' D91 ) *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L812 , L807 , L808 , CALCUL_2:24;
L814:  |- ( ( C28 ^ <* D94 *> ) ^ <* D94 *> ) by CALCUL_2:21;
L815:  |- ( ( C28 ^ <* D94 *> ) ^ <* D93 *> ) by L814 , CALCUL_1:52;
L816: ( ( 0 ) + 1 ) <= ( len ( C28 ^ <* D80 *> ) ) by CALCUL_1:10;
L817:  |- ( ( ( ( Ant ( C28 ^ <* D80 *> ) ) ^ <* D94 *> ) ^ <* ( Suc ( C28 ^ <* D80 *> ) ) *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L816 , L740 , L421;
L818:  |- ( ( ( C28 ^ <* D94 *> ) ^ <* ( Suc ( C28 ^ <* D80 *> ) ) *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L817 , CALCUL_1:5;
L819:  |- ( ( ( C28 ^ <* D94 *> ) ^ <* D93 *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L818 , L807 , CALCUL_1:5;
L820:  |- ( ( C28 ^ <* D94 *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L819 , L815 , CALCUL_2:24;
set D95 = ( x. ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in D92) } ) );
set D96 = ( R1 -one_in { R33 where R33 is (QC-symbol of R1) : (not ( x. R33 ) in D92) } );
reconsider D97 = ( the_scope_of (D39 , ( D89 + 1 )) ) as (Element of ( CQC-WFF R1 ));
reconsider D98 = ( bound_in (D39 , ( D89 + 1 )) ) as (bound_QC-variable of R1);
reconsider D99 = D91 as (Element of ( CQC-WFF R1 ));
L821: D99 in ( ExCl R1 ) by L502 , L503 , FUNCT_1:3;
consider R22 being (bound_QC-variable of R1), R17 being (Element of ( CQC-WFF R1 )) such that L822: D99 = ( Ex (R22 , R17) ) by L821 , L339;
L823: R17 = ( Ex-the_scope_of D99 ) by L822 , L408;
L824: D97 = ( Ex-the_scope_of D99 ) by L384;
L825: R22 = ( Ex-bound_in D99 ) by L822 , L408;
L826: D98 = ( Ex-bound_in D99 ) by L377;
reconsider D100 = ( D56 . R9 ) as (Subset of ( CQC-WFF R1 ));
L827: (not D95 in ( still_not-bound_in ( D100 \/ { D99 } ) )) by L673 , L805;
L828: (not D95 in ( ( still_not-bound_in D100 ) \/ ( still_not-bound_in { D99 } ) )) by L827 , L442;
L829: (not D95 in ( still_not-bound_in { D99 } )) by L828 , XBOOLE_0:def 3;
L830: ( still_not-bound_in ( rng C28 ) ) c= ( still_not-bound_in D100 ) by L739 , L470;
L831: (not D95 in ( still_not-bound_in ( rng C28 ) )) by L830 , L828 , XBOOLE_0:def 3;
L832: (not D95 in ( still_not-bound_in C28 )) by L831 , L480;
L833: (not D95 in ( still_not-bound_in D99 )) by L829 , L430;
L834: (not D95 in ( still_not-bound_in <* D99 *> )) by L833 , CALCUL_1:60;
L835: (not D95 in ( ( still_not-bound_in C28 ) \/ ( still_not-bound_in <* D99 *> ) )) by L834 , L832 , XBOOLE_0:def 3;
L836: (not D95 in ( still_not-bound_in ( C28 ^ <* D99 *> ) )) by L835 , CALCUL_1:59;
L837: ( still_not-bound_in ( VERUM R1 ) ) = ( {} ) by QC_LANG3:3;
L838: (not ( x. D96 ) in ( still_not-bound_in ( 'not' ( VERUM R1 ) ) )) by L837 , QC_LANG3:7;
L839: (not ( x. D96 ) in ( still_not-bound_in <* ( 'not' ( VERUM R1 ) ) *> )) by L838 , CALCUL_1:60;
L840: (not ( x. D96 ) in ( ( still_not-bound_in ( C28 ^ <* D99 *> ) ) \/ ( still_not-bound_in <* ( 'not' ( VERUM R1 ) ) *> ) )) by L839 , L836 , XBOOLE_0:def 3;
L841: (not ( x. D96 ) in ( still_not-bound_in ( ( C28 ^ <* D99 *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) )) by L840 , CALCUL_1:59;
L842:  |- ( ( C28 ^ <* D99 *> ) ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L841 , L820 , L822 , L823 , L824 , L825 , L826 , CALCUL_1:61;
L843:  |- ( C28 ^ <* ( 'not' ( VERUM R1 ) ) *> ) by L842 , L813 , CALCUL_2:26;
L844: ( D56 . R9 ) |- ( 'not' ( VERUM R1 ) ) by L843 , L739 , HENMODEL:def 1;
thus L845: contradiction by L844 , L733 , L415;
end;
thus L846: contradiction by L803 , L742;
end;
thus L847: thesis by L735;
end;
L848: (for R11 being (Element of ( NAT )) holds S10[ R11 ]) from NAT_1:sch 1(L731 , L732);
L849: (for R11 being (Element of ( NAT )) holds (for R10 being (Element of ( NAT )) holds ((R10 in ( dom D56 ) & R11 in ( dom D56 ) & R11 < R10) implies (( D56 . R11 ) is  Consistent & ( D56 . R11 ) c= ( D56 . R10 ))))) by L848 , L581;
reconsider D101 = D46 as  Consistent (Subset of ( CQC-WFF R1 )) by L849 , L580 , HENMODEL:11;
take D101;
thus L850: thesis by L517 , L7 , XBOOLE_1:7;
end;
theorem
L851: (for R1 being QC-alphabet holds (for R5 being (Subset of ( CQC-WFF R1 )) holds (for R6 being (Subset of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds ((R5 |- R12 & R5 c= R6) implies R6 |- R12)))))
proof
let R1 being QC-alphabet;
let R5 being (Subset of ( CQC-WFF R1 ));
let R6 being (Subset of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
assume that
L852: R5 |- R12
and
L853: R5 c= R6;
consider C30 being (FinSequence of ( CQC-WFF R1 )) such that L854: ( rng C30 ) c= R5 and L855:  |- ( C30 ^ <* R12 *> ) by L852 , HENMODEL:def 1;
L856: ( rng C30 ) c= R6 by L853 , L854 , XBOOLE_1:1;
thus L857: thesis by L856 , L855 , HENMODEL:def 1;
end;
theorem
L858: (for R1 being QC-alphabet holds (for R28 being  Consistent (Subset of ( CQC-WFF R1 )) holds ((R1 is  countable & R28 is  with_examples) implies (ex R29 being  Consistent (Subset of ( CQC-WFF R1 )) st (R28 c= R29 & R29 is  negation_faithful & R29 is  with_examples)))))
proof
let R1 being QC-alphabet;
let R28 being  Consistent (Subset of ( CQC-WFF R1 ));
assume L859: R1 is  countable;
assume L860: R28 is  with_examples;
L861: (( CQC-WFF R1 ) is non  empty & ( CQC-WFF R1 ) is  countable) by L350 , L859;
consider C31 being Function such that L862: ( dom C31 ) = ( NAT ) and L863: ( CQC-WFF R1 ) = ( rng C31 ) by L861 , L360;
reconsider D102 = C31 as (Function of ( NAT ) , ( CQC-WFF R1 )) by L862 , L863 , FUNCT_2:2;
defpred S11[ set , set , set ] means (ex R5 being (Subset of ( CQC-WFF R1 )) st (R5 = ( $2 \/ { ( D102 . $1 ) } ) & (R5 is  Consistent implies $3 = R5) & ((not R5 is  Consistent) implies $3 = $2)));
L864: (for R11 being (Element of ( NAT )) holds (for R43 being (Subset of ( CQC-WFF R1 )) holds (ex R44 being (Subset of ( CQC-WFF R1 )) st S11[ R11 , R43 , R44 ])))
proof
let R11 being (Element of ( NAT ));
reconsider D103 = ( D102 . R11 ) as (Element of ( CQC-WFF R1 ));
let R43 being (Subset of ( CQC-WFF R1 ));
set D104 = ( R43 \/ { D103 } );
reconsider D105 = D104 as (Subset of ( CQC-WFF R1 ));
L865: ((not D105 is  Consistent) implies (ex R44 being (Subset of ( CQC-WFF R1 )) st (R44 = R43 & (ex R5 being (Subset of ( CQC-WFF R1 )) st (R5 = ( R43 \/ { D103 } ) & (R5 is  Consistent implies R44 = R5) & ((not R5 is  Consistent) implies R44 = R43))))));
thus L866: thesis by L865;
end;
consider C32 being (Function of ( NAT ) , ( bool ( CQC-WFF R1 ) )) such that L867: (( C32 . ( 0 ) ) = R28 & (for R11 being (Element of ( NAT )) holds S11[ R11 , ( C32 . R11 ) , ( C32 . ( R11 + 1 ) ) ])) from RECDEF_1:sch 2(L864);
set D106 = ( union ( rng C32 ) );
L868:
now
let R38 being set;
assume that
L869: R38 in R28;
L870: ( dom C32 ) = ( NAT ) by FUNCT_2:def 1;
L871: ( C32 . ( 0 ) ) in ( rng C32 ) by L870 , FUNCT_1:3;
thus L872: R38 in ( union ( rng C32 ) ) by L871 , L867 , L869 , TARSKI:def 4;
end;
L873: R28 c= D106 by L868 , TARSKI:def 3;
L874: (for R11 being (Element of ( NAT )) holds ( C32 . R11 ) c= ( C32 . ( R11 + 1 ) ))
proof
let R11 being (Element of ( NAT ));
let R38 being set;
assume that
L875: R38 in ( C32 . R11 );
reconsider D107 = ( D102 . R11 ) as (Element of ( CQC-WFF R1 ));
set D108 = ( ( C32 . R11 ) \/ { D107 } );
reconsider D109 = D108 as (Subset of ( CQC-WFF R1 ));
L876: ( C32 . R11 ) c= D109 by XBOOLE_1:7;
L877: (ex R6 being (Subset of ( CQC-WFF R1 )) st (R6 = ( ( C32 . R11 ) \/ { ( D102 . R11 ) } ) & (R6 is  Consistent implies ( C32 . ( R11 + 1 ) ) = R6) & ((not R6 is  Consistent) implies ( C32 . ( R11 + 1 ) ) = ( C32 . R11 )))) by L867;
thus L878: thesis by L877 , L875 , L876;
end;
L879: (for R11 being (Element of ( NAT )) holds (for R10 being (Element of ( NAT )) holds ((R10 in ( dom C32 ) & R11 in ( dom C32 ) & R11 < R10) implies ( C32 . R11 ) c= ( C32 . R10 ))))
proof
let R11 being (Element of ( NAT ));
let R10 being (Element of ( NAT ));
assume that
L880: R10 in ( dom C32 )
and
L881: R11 in ( dom C32 )
and
L882: R11 < R10;
defpred S12[ (Element of ( NAT )) ] means (R11 <= $1 implies ( C32 . R11 ) c= ( C32 . $1 ));
L883: S12[ ( 0 ) ]
proof
assume L884: R11 <= ( 0 );
L885: R11 = ( 0 ) by L884 , NAT_1:2;
thus L886: thesis by L885;
end;
L887: (for R9 being (Element of ( NAT )) holds (S12[ R9 ] implies S12[ ( R9 + 1 ) ]))
proof
let R9 being (Element of ( NAT ));
assume that
L888: S12[ R9 ];
assume L889: R11 <= ( R9 + 1 );
L890:
now
assume L891: R11 <= R9;
L892: ( C32 . R9 ) c= ( C32 . ( R9 + 1 ) ) by L874;
thus L893: thesis by L892 , L888 , L891 , XBOOLE_1:1;
end;
thus L894: thesis by L890 , L889 , NAT_1:8;
end;
L895: (for R9 being (Element of ( NAT )) holds S12[ R9 ]) from NAT_1:sch 1(L883 , L887);
thus L896: thesis by L895 , L882;
end;
defpred S13[ (Element of ( NAT )) ] means ( C32 . $1 ) is  Consistent;
L897: S13[ ( 0 ) ] by L867;
L898: (for R9 being (Element of ( NAT )) holds (S13[ R9 ] implies S13[ ( R9 + 1 ) ]))
proof
let R11 being (Element of ( NAT ));
assume that
L899: S13[ R11 ];
L900: (ex R6 being (Subset of ( CQC-WFF R1 )) st (R6 = ( ( C32 . R11 ) \/ { ( D102 . R11 ) } ) & (R6 is  Consistent implies ( C32 . ( R11 + 1 ) ) = R6) & ((not R6 is  Consistent) implies ( C32 . ( R11 + 1 ) ) = ( C32 . R11 )))) by L867;
thus L901: thesis by L900 , L899;
end;
set D110 = ( union ( rng C32 ) );
L902: (for R11 being (Element of ( NAT )) holds S13[ R11 ]) from NAT_1:sch 1(L897 , L898);
L903: (for R11 being (Element of ( NAT )) holds (for R10 being (Element of ( NAT )) holds ((R10 in ( dom C32 ) & R11 in ( dom C32 ) & R11 < R10) implies (( C32 . R11 ) is  Consistent & ( C32 . R11 ) c= ( C32 . R10 ))))) by L902 , L879;
reconsider D111 = D110 as  Consistent (Subset of ( CQC-WFF R1 )) by L903 , HENMODEL:11;
L904: D111 is  negation_faithful
proof
let R12 being (Element of ( CQC-WFF R1 ));
consider R38 being set such that L905: R38 in ( dom D102 ) and L906: ( D102 . R38 ) = R12 by L863 , FUNCT_1:def 3;
reconsider D112 = R38 as (Element of ( NAT )) by L905;
L907:
now
assume L908: (not D111 |- ( 'not' R12 ));
L909: (not ( D111 \/ { R12 } ) is  Inconsistent) by L908 , HENMODEL:10;
L910:
now
assume L911: ( ( C32 . D112 ) \/ { R12 } ) is  Inconsistent;
L912: ( ( C32 . D112 ) \/ { R12 } ) |- ( 'not' ( VERUM R1 ) ) by L911 , L415;
L913:
now
let R38 being set;
assume that
L914: R38 in ( C32 . D112 );
L915: ( dom C32 ) = ( NAT ) by FUNCT_2:def 1;
L916: ( C32 . D112 ) in ( rng C32 ) by L915 , FUNCT_1:3;
thus L917: R38 in D111 by L916 , L914 , TARSKI:def 4;
end;
L918: ( C32 . D112 ) c= D111 by L913 , TARSKI:def 3;
L919: ( D111 \/ { R12 } ) |- ( 'not' ( VERUM R1 ) ) by L918 , L912 , L851 , XBOOLE_1:9;
thus L920: contradiction by L919 , L909 , L415;
end;
L921: (ex R6 being (Subset of ( CQC-WFF R1 )) st (R6 = ( ( C32 . D112 ) \/ { ( D102 . D112 ) } ) & (R6 is  Consistent implies ( C32 . ( D112 + 1 ) ) = R6) & ((not R6 is  Consistent) implies ( C32 . ( D112 + 1 ) ) = ( C32 . D112 )))) by L867;
L922:
now
let R38 being set;
assume that
L923: R38 in ( C32 . ( D112 + 1 ) );
L924: ( dom C32 ) = ( NAT ) by FUNCT_2:def 1;
L925: ( C32 . ( D112 + 1 ) ) in ( rng C32 ) by L924 , FUNCT_1:3;
thus L926: R38 in D111 by L925 , L923 , TARSKI:def 4;
end;
L927: ( C32 . ( D112 + 1 ) ) c= D111 by L922 , TARSKI:def 3;
L928: { R12 } c= ( C32 . ( D112 + 1 ) ) by L906 , L910 , L921 , XBOOLE_1:7;
L929: { R12 } c= D111 by L928 , L927 , XBOOLE_1:1;
L930: R12 in D111 by L929 , ZFMISC_1:31;
thus L931: D111 |- R12 by L930 , L398;
end;
thus L932: thesis by L907;
end;
L933: D111 is  with_examples
proof
let R18 being (bound_QC-variable of R1);
let R12 being (Element of ( CQC-WFF R1 ));
consider R21 being (bound_QC-variable of R1) such that L934: R28 |- ( ( 'not' ( Ex (R18 , R12) ) ) 'or' ( R12 . (R18 , R21) ) ) by L860 , L7;
take R21;
thus L935: thesis by L873 , L934 , L851;
end;
take D111;
thus L936: thesis by L868 , L904 , L933 , TARSKI:def 3;
end;
theorem
L937: (for R1 being QC-alphabet holds (for R28 being  Consistent (Subset of ( CQC-WFF R1 )) holds ((R1 is  countable & ( still_not-bound_in R28 ) is  finite) implies (ex R30 being  Consistent (Subset of ( CQC-WFF R1 )) st (ex R45 being (Henkin_interpretation of R30) st R45 , ( valH R1 ) |= R28)))))
proof
let R1 being QC-alphabet;
let R28 being  Consistent (Subset of ( CQC-WFF R1 ));
assume L938: R1 is  countable;
assume L939: ( still_not-bound_in R28 ) is  finite;
consider R29 being  Consistent (Subset of ( CQC-WFF R1 )) such that L940: R28 c= R29 and L941: R29 is  with_examples by L939 , L498 , L938;
consider R30 being  Consistent (Subset of ( CQC-WFF R1 )) such that L942: R29 c= R30 and L943: R30 is  negation_faithful and L944: R30 is  with_examples by L938 , L941 , L858;
L945: R28 c= R30 by L940 , L942 , XBOOLE_1:1;
set D113 = the (Henkin_interpretation of R30);
L946:
now
let R12 being (Element of ( CQC-WFF R1 ));
assume L947: R12 in R28;
L948: R30 |- R12 by L947 , L945 , L398;
thus L949: D113 , ( valH R1 ) |= R12 by L948 , L943 , L944 , L328;
end;
take R30;
take D113;
thus L950: thesis by L946 , CALCUL_1:def 11;
end;
begin
theorem
L951: (for R1 being QC-alphabet holds (for R5 being (Subset of ( CQC-WFF R1 )) holds (for R6 being (Subset of ( CQC-WFF R1 )) holds (for R23 being non  empty set holds (for R46 being (interpretation of R1 , R23) holds (for R47 being (Element of ( Valuations_in (R1 , R23) )) holds ((R46 , R47 |= R5 & R6 c= R5) implies R46 , R47 |= R6)))))))
proof
let R1 being QC-alphabet;
let R5 being (Subset of ( CQC-WFF R1 ));
let R6 being (Subset of ( CQC-WFF R1 ));
let R23 being non  empty set;
let R46 being (interpretation of R1 , R23);
let R47 being (Element of ( Valuations_in (R1 , R23) ));
assume L952: R46 , R47 |= R5;
assume L953: R6 c= R5;
L954: (for R12 being (Element of ( CQC-WFF R1 )) holds (R12 in R6 implies R46 , R47 |= R12)) by L953 , L952 , CALCUL_1:def 11;
thus L955: thesis by L954 , CALCUL_1:def 11;
end;
theorem
L956: (for R1 being QC-alphabet holds (for R5 being (Subset of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (( still_not-bound_in R5 ) is  finite implies ( still_not-bound_in ( R5 \/ { R12 } ) ) is  finite))))
proof
let R1 being QC-alphabet;
let R5 being (Subset of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
assume L957: ( still_not-bound_in R5 ) is  finite;
L958: ( still_not-bound_in R12 ) is  finite by CQC_SIM1:19;
L959: ( still_not-bound_in { R12 } ) is  finite by L958 , L430;
L960: ( ( still_not-bound_in R5 ) \/ ( still_not-bound_in { R12 } ) ) is  finite by L959 , L957;
thus L961: thesis by L960 , L442;
end;
theorem
L962: (for R1 being QC-alphabet holds (for R5 being (Subset of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R23 being non  empty set holds (for R46 being (interpretation of R1 , R23) holds (for R47 being (Element of ( Valuations_in (R1 , R23) )) holds (R5 |= R12 implies (not R46 , R47 |= ( R5 \/ { ( 'not' R12 ) } )))))))))
proof
let R1 being QC-alphabet;
let R5 being (Subset of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
let R23 being non  empty set;
let R46 being (interpretation of R1 , R23);
let R47 being (Element of ( Valuations_in (R1 , R23) ));
assume L963: R5 |= R12;
assume L964: R46 , R47 |= ( R5 \/ { ( 'not' R12 ) } );
L965: R46 , R47 |= R5 by L964 , L951 , XBOOLE_1:7;
L966: { ( 'not' R12 ) } c= ( R5 \/ { ( 'not' R12 ) } ) by XBOOLE_1:7;
L967: ( 'not' R12 ) in { ( 'not' R12 ) } by TARSKI:def 1;
L968: R46 , R47 |= ( 'not' R12 ) by L967 , L964 , L966 , CALCUL_1:def 11;
L969: (not R46 , R47 |= R12) by L968 , VALUAT_1:17;
thus L970: contradiction by L969 , L963 , L965 , CALCUL_1:def 12;
end;
::$N Goedel Completeness Theorem
theorem
L971: (for R1 being QC-alphabet holds (for R5 being (Subset of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds ((R1 is  countable & ( still_not-bound_in R5 ) is  finite & R5 |= R12) implies R5 |- R12))))
proof
let R1 being QC-alphabet;
let R5 being (Subset of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
assume L972: R1 is  countable;
assume L973: ( still_not-bound_in R5 ) is  finite;
assume L974: R5 |= R12;
assume L975: (not R5 |- R12);
reconsider D114 = ( R5 \/ { ( 'not' R12 ) } ) as (Subset of ( CQC-WFF R1 ));
L976: ( still_not-bound_in D114 ) is  finite by L973 , L956;
L977: D114 is  Consistent by L975 , HENMODEL:9;
L978: (ex R30 being  Consistent (Subset of ( CQC-WFF R1 )) st (ex R45 being (Henkin_interpretation of R30) st R45 , ( valH R1 ) |= D114)) by L977 , L972 , L976 , L937;
thus L979: contradiction by L978 , L974 , L962;
end;
