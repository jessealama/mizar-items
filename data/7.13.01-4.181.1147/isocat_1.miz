:: Isomorphisms of Categories
::  by Andrzej Trybulec
::
:: Received November 22, 1991
:: Copyright (c) 1991-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies CAT_1, FUNCT_1, ZFMISC_1, RELAT_1, MCART_1, STRUCT_0, ALGSTR_0,
      GRAPH_1, PZFMISC1, NATTRA_1, XBOOLE_0, WELLORD1, TARSKI, PARTFUN1,
      VALUED_1, REWRITE1, ISOCAT_1, MONOID_0;
 notations TARSKI, XBOOLE_0, ZFMISC_1, RELAT_1, FUNCT_1, RELSET_1, PARTFUN1,
      FUNCT_2, BINOP_1, FUNCT_3, STRUCT_0, GRAPH_1, CAT_1, CAT_2, CAT_3,
      NATTRA_1;
 constructors NATTRA_1, FUNCOP_1, RELSET_1, CAT_3;
 registrations RELSET_1, FUNCT_2, STRUCT_0, CAT_1, FUNCT_3;
 requirements SUBSET, BOOLE;
 definitions TARSKI, CAT_1, FUNCT_1, NATTRA_1, XBOOLE_0, CAT_2, BINOP_1,
      FUNCT_2;
 theorems FUNCT_2, CAT_1, ZFMISC_1, FUNCT_1, FUNCT_3, NATTRA_1, RELAT_1,
      TARSKI, CAT_3, XTUPLE_0;
 schemes FUNCT_2;

begin
canceled 2;
theorem
L1: (for R1 being Category holds (for R2 being Category holds (for R5 being (Functor of R1 , R2) holds (for B1 , B2 being (Object of R1) holds (for B3 being (Morphism of B1 , B2) holds (B3 is  invertible implies ( R5 /. B3 ) is  invertible))))))
proof
let R1 being Category;
let R2 being Category;
let R5 being (Functor of R1 , R2);
let C1 , C2 being (Object of R1);
let C3 being (Morphism of C1 , C2);
assume that
L2: (( Hom (C1 , C2) ) <> ( {} ) & ( Hom (C2 , C1) ) <> ( {} ));
given C4 being (Morphism of C2 , C1) such that
L3: ( C3 * C4 ) = ( id C2 )
and
L4: ( C4 * C3 ) = ( id C1 );

L5: ( dom C4 ) = C2 by L2 , CAT_1:5
.= ( cod C3 ) by L2 , CAT_1:5;
L6: ( cod C4 ) = C1 by L2 , CAT_1:5
.= ( dom C3 ) by L2 , CAT_1:5;
L7: ( cod C3 ) = C2 by L2 , CAT_1:5;
L8: ( dom C3 ) = C1 by L2 , CAT_1:5;
L9: ( C3 (*) C4 ) = ( id ( cod C3 ) ) by L3 , L2 , L7 , CAT_1:def 13;
L10: ( C4 (*) C3 ) = ( id ( dom C3 ) ) by L4 , L2 , L8 , CAT_1:def 13;
thus L11: (( Hom (( R5 . C1 ) , ( R5 . C2 )) ) <> ( {} ) & ( Hom (( R5 . C2 ) , ( R5 . C1 )) ) <> ( {} )) by L2 , CAT_1:84;
take ( R5 /. C4 );
L12: ( R5 /. C3 ) = ( R5 . C3 ) by L2 , CAT_3:def 10;
L13: ( R5 /. C4 ) = ( R5 . C4 ) by L2 , CAT_3:def 10;
thus L14: ( ( R5 /. C3 ) * ( R5 /. C4 ) ) = ( ( R5 . C3 ) (*) ( R5 . C4 ) ) by L11 , L12 , L13 , CAT_1:def 13
.= ( R5 . ( C3 (*) C4 ) ) by L6 , CAT_1:64
.= ( id ( cod ( R5 /. C3 ) ) ) by L9 , L12 , CAT_1:63
.= ( id ( R5 . C2 ) ) by L11 , CAT_1:5;
thus L15: ( ( R5 /. C4 ) * ( R5 /. C3 ) ) = ( ( R5 . C4 ) (*) ( R5 . C3 ) ) by L11 , L12 , L13 , CAT_1:def 13
.= ( R5 . ( C4 (*) C3 ) ) by L5 , CAT_1:64
.= ( id ( dom ( R5 /. C3 ) ) ) by L10 , L12 , CAT_1:63
.= ( id ( R5 . C1 ) ) by L11 , CAT_1:5;
end;
theorem
L16: (for R1 being Category holds (for R2 being Category holds (for B4 , B5 being (Functor of R1 , R2) holds (B4 is_transformable_to B5 implies (for B6 being (transformation of B4 , B5) holds (for B7 being (Object of R1) holds ( B6 . B7 ) in ( Hom (( B4 . B7 ) , ( B5 . B7 )) )))))))
proof
let R1 being Category;
let R2 being Category;
let C5 , C6 being (Functor of R1 , R2);
assume that
L17: C5 is_transformable_to C6;
let C7 being (transformation of C5 , C6);
let C8 being (Object of R1);
L18: ( Hom (( C5 . C8 ) , ( C6 . C8 )) ) <> ( {} ) by L17 , NATTRA_1:def 2;
thus L19: thesis by L18 , CAT_1:def 5;
end;
theorem
L20: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for B8 , B9 being (Functor of R1 , R2) holds (for B10 , B11 being (Functor of R2 , R3) holds ((B8 is_transformable_to B9 & B10 is_transformable_to B11) implies ( B10 * B8 ) is_transformable_to ( B11 * B9 )))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let C9 , C10 being (Functor of R1 , R2);
let C11 , C12 being (Functor of R2 , R3);
assume that
L21: C9 is_transformable_to C10
and
L22: C11 is_transformable_to C12;
let C13 being (Object of R1);
L23: ( Hom (( C9 . C13 ) , ( C10 . C13 )) ) <> ( {} ) by L21 , NATTRA_1:def 2;
L24: ( Hom (( C11 . ( C9 . C13 ) ) , ( C11 . ( C10 . C13 ) )) ) <> ( {} ) by L23 , CAT_1:84;
L25: (( C11 . ( C9 . C13 ) ) = ( ( C11 * C9 ) . C13 ) & ( C12 . ( C10 . C13 ) ) = ( ( C12 * C10 ) . C13 )) by CAT_1:76;
L26: ( Hom (( C11 . ( C10 . C13 ) ) , ( C12 . ( C10 . C13 ) )) ) <> ( {} ) by L22 , NATTRA_1:def 2;
thus L27: thesis by L26 , L25 , L24 , CAT_1:24;
end;
theorem
L28: (for R1 being Category holds (for R2 being Category holds (for B12 , B13 being (Functor of R1 , R2) holds (B12 is_transformable_to B13 implies (for B14 being (transformation of B12 , B13) holds (B14 is  invertible implies (for B15 being (Object of R1) holds ( B12 . B15 ) , ( B13 . B15 ) are_isomorphic )))))))
proof
let R1 being Category;
let R2 being Category;
let C14 , C15 being (Functor of R1 , R2);
assume that
L29: C14 is_transformable_to C15;
let C16 being (transformation of C14 , C15);
assume that
L30: C16 is  invertible;
let C17 being (Object of R1);
take ( C16 . C17 );
thus L31: thesis by L30 , NATTRA_1:def 10;
end;
definition
let R3 being Category;
let R4 being Category;
redefine mode Functor of R3 , R4
means ((for B16 being (Object of R3) holds (ex B17 being (Object of R4) st ( it . ( id B16 ) ) = ( id B17 ))) & (for B18 being (Morphism of R3) holds (( it . ( id ( dom B18 ) ) ) = ( id ( dom ( it . B18 ) ) ) & ( it . ( id ( cod B18 ) ) ) = ( id ( cod ( it . B18 ) ) ))) & (for B19 , B20 being (Morphism of R3) holds (( dom B20 ) = ( cod B19 ) implies ( it . ( B20 (*) B19 ) ) = ( ( it . B20 ) (*) ( it . B19 ) ))));
compatibility by CAT_1:61 , CAT_1:62 , CAT_1:63 , CAT_1:64;
end;
theorem
L33: (for R1 being Category holds (for R2 being Category holds (for R5 being (Functor of R1 , R2) holds (R5 is  isomorphic implies (for B21 being (Morphism of R2) holds (ex B22 being (Morphism of R1) st ( R5 . B22 ) = B21))))))
proof
let R1 being Category;
let R2 being Category;
let R5 being (Functor of R1 , R2);
assume L34: R5 is  isomorphic;
let C18 being (Morphism of R2);
L35: ( rng R5 ) = (the carrier' of R2) by L34 , CAT_1:def 25;
consider C19 being set such that L36: C19 in ( dom R5 ) and L37: ( R5 . C19 ) = C18 by L35 , FUNCT_1:def 3;
reconsider D1 = C19 as (Morphism of R1) by L36;
take D1;
thus L38: thesis by L37;
end;
theorem
L39: (for R1 being Category holds (for R2 being Category holds (for R5 being (Functor of R1 , R2) holds (R5 is  isomorphic implies (for B23 being (Object of R2) holds (ex B24 being (Object of R1) st ( R5 . B24 ) = B23))))))
proof
let R1 being Category;
let R2 being Category;
let R5 being (Functor of R1 , R2);
assume L40: R5 is  isomorphic;
let C20 being (Object of R2);
L41: ( rng ( Obj R5 ) ) = (the carrier of R2) by L40 , CAT_1:def 25;
consider C21 being set such that L42: C21 in ( dom ( Obj R5 ) ) and L43: ( ( Obj R5 ) . C21 ) = C20 by L41 , FUNCT_1:def 3;
reconsider D2 = C21 as (Object of R1) by L42;
take D2;
thus L44: thesis by L43;
end;
theorem
L45: (for R1 being Category holds (for R2 being Category holds (for R5 being (Functor of R1 , R2) holds (R5 is  one-to-one implies ( Obj R5 ) is  one-to-one))))
proof
let R1 being Category;
let R2 being Category;
let R5 being (Functor of R1 , R2);
assume L46: R5 is  one-to-one;
let C22 , C23 being set;
assume L47: (C22 in ( dom ( Obj R5 ) ) & C23 in ( dom ( Obj R5 ) ));
reconsider D3 = C22 , D4 = C23 as (Object of R1) by L47;
assume L48: ( ( Obj R5 ) . C22 ) = ( ( Obj R5 ) . C23 );
L49: ( R5 . D3 ) = ( R5 . D4 ) by L48;
L50: ( R5 . (( id D3 ) qua (Morphism of R1)) ) = ( id ( R5 . D4 ) ) by L49 , CAT_1:71
.= ( R5 . (( id D4 ) qua (Morphism of R1)) ) by CAT_1:71;
L51: ( dom R5 ) = (the carrier' of R1) by FUNCT_2:def 1;
L52: ( id D3 ) = ( id D4 ) by L51 , L46 , L50 , FUNCT_1:def 4;
thus L53: thesis by L52 , CAT_1:59;
end;
definition
let R1 being Category;
let R2 being Category;
let R5 being (Functor of R1 , R2);
assume L54: R5 is  isomorphic;
func R5 " -> (Functor of R2 , R1) equals 
:L55: ( R5 " );
coherence
proof
L56: R5 is  one-to-one by L54 , CAT_1:def 25;
L57: ( rng R5 ) = (the carrier' of R2) by L54 , CAT_1:def 25;
reconsider D5 = ( R5 " ) as (Function of (the carrier' of R2) , (the carrier' of R1)) by L57 , L56 , FUNCT_2:25;
L58: ( dom R5 ) = (the carrier' of R1) by FUNCT_2:def 1;
L59: ( Obj R5 ) is  one-to-one by L56 , L45;
L60: D5 is (Functor of R2 , R1)
proof
thus L61: (for B25 being (Object of R2) holds (ex B26 being (Object of R1) st ( D5 . ( id B25 ) ) = ( id B26 )))
proof
let C24 being (Object of R2);
consider C25 being (Object of R1) such that L62: ( R5 . C25 ) = C24 by L54 , L39;
take C25;
thus L63: ( D5 . ( id C24 ) ) = ( D5 . ( R5 . (( id C25 ) qua (Morphism of R1)) ) ) by L62 , CAT_1:71
.= ( id C25 ) by L56 , L58 , FUNCT_1:34;
end;

thus L64: (for B27 being (Morphism of R2) holds (( D5 . ( id ( dom B27 ) ) ) = ( id ( dom ( D5 . B27 ) ) ) & ( D5 . ( id ( cod B27 ) ) ) = ( id ( cod ( D5 . B27 ) ) )))
proof
let C26 being (Morphism of R2);
consider C27 being (Morphism of R1) such that L65: C26 = ( R5 . C27 ) by L54 , L33;
thus L66: ( D5 . ( id ( dom C26 ) ) ) = ( D5 . ( id ( R5 . ( dom C27 ) ) ) ) by L65 , CAT_1:72
.= ( D5 . ( R5 . (( id ( dom C27 ) ) qua (Morphism of R1)) ) ) by CAT_1:71
.= ( id ( dom C27 ) ) by L56 , L58 , FUNCT_1:34
.= ( id ( dom ( D5 . C26 ) ) ) by L56 , L58 , L65 , FUNCT_1:34;
thus L67: ( D5 . ( id ( cod C26 ) ) ) = ( D5 . ( id ( R5 . ( cod C27 ) ) ) ) by L65 , CAT_1:72
.= ( D5 . ( R5 . (( id ( cod C27 ) ) qua (Morphism of R1)) ) ) by CAT_1:71
.= ( id ( cod C27 ) ) by L56 , L58 , FUNCT_1:34
.= ( id ( cod ( D5 . C26 ) ) ) by L56 , L58 , L65 , FUNCT_1:34;
end;

let C28 , C29 being (Morphism of R2);
L68: ( dom ( Obj R5 ) ) = (the carrier of R1) by FUNCT_2:def 1;
assume L69: ( dom C29 ) = ( cod C28 );
consider C30 being (Morphism of R1) such that L70: C28 = ( R5 . C30 ) by L54 , L33;
consider C31 being (Morphism of R1) such that L71: C29 = ( R5 . C31 ) by L54 , L33;
L72: ( ( Obj R5 ) . ( dom C31 ) ) = ( R5 . ( dom C31 ) )
.= ( cod C28 ) by L71 , L69 , CAT_1:72
.= ( R5 . ( cod C30 ) ) by L70 , CAT_1:72
.= ( ( Obj R5 ) . ( cod C30 ) );
L73: ( dom C31 ) = ( cod C30 ) by L72 , L59 , L68 , FUNCT_1:def 4;
thus L74: ( D5 . ( C29 (*) C28 ) ) = ( D5 . ( R5 . ( C31 (*) C30 ) ) ) by L73 , L70 , L71 , CAT_1:64
.= ( C31 (*) C30 ) by L56 , L58 , FUNCT_1:34
.= ( C31 (*) ( D5 . C28 ) ) by L56 , L58 , L70 , FUNCT_1:34
.= ( ( D5 . C29 ) (*) ( D5 . C28 ) ) by L56 , L58 , L71 , FUNCT_1:34;
end;
thus L75: thesis by L60;
end;
end;
definition
let R1 being Category;
let R2 being Category;
let R5 being (Functor of R1 , R2);
redefine attr R5 is  isomorphic
means
:L77: (R5 is  one-to-one & ( rng R5 ) = (the carrier' of R2));
compatibility
proof
thus L78: (R5 is  isomorphic implies (R5 is  one-to-one & ( rng R5 ) = (the carrier' of R2))) by CAT_1:def 25;
assume that
L79: R5 is  one-to-one
and
L80: ( rng R5 ) = (the carrier' of R2);
thus L81: (R5 is  one-to-one & ( rng R5 ) = (the carrier' of R2)) by L79 , L80;
thus L82: ( rng ( Obj R5 ) ) c= (the carrier of R2);
let C32 being set;
assume L83: C32 in (the carrier of R2);
reconsider D6 = C32 as (Object of R2) by L83;
consider C33 being set such that L84: C33 in ( dom R5 ) and L85: ( id D6 ) = ( R5 . C33 ) by L80 , FUNCT_1:def 3;
reconsider D7 = C33 as (Morphism of R1) by L84;
reconsider D8 = ( id ( dom D7 ) ) as (Morphism of R1);
L86: ( R5 . D8 ) = ( id ( dom ( id D6 ) ) ) by L85 , CAT_1:63
.= ( id D6 );
L87: (( dom ( Obj R5 ) ) = (the carrier of R1) & ( ( Obj R5 ) . ( dom D7 ) ) = D6) by L86 , CAT_1:67 , FUNCT_2:def 1;
thus L88: C32 in ( rng ( Obj R5 ) ) by L87 , FUNCT_1:def 3;
end;
end;
theorem
L90: (for R1 being Category holds (for R2 being Category holds (for R5 being (Functor of R1 , R2) holds (R5 is  isomorphic implies ( R5 " ) is  isomorphic))))
proof
let R1 being Category;
let R2 being Category;
let R5 being (Functor of R1 , R2);
assume L91: R5 is  isomorphic;
L92: (R5 is  one-to-one & ( R5 " ) = ( (R5 qua (Function of (the carrier' of R1) , (the carrier' of R2))) " )) by L91 , L55 , CAT_1:def 25;
thus L93: ( R5 " ) is  one-to-one by L92 , FUNCT_1:40;
thus L94: ( rng ( R5 " ) ) = ( dom R5 ) by L92 , FUNCT_1:33
.= (the carrier' of R1) by FUNCT_2:def 1;
end;
theorem
L95: (for R1 being Category holds (for R2 being Category holds (for R5 being (Functor of R1 , R2) holds (R5 is  isomorphic implies ( ( Obj R5 ) " ) = ( Obj ( R5 " ) )))))
proof
let R1 being Category;
let R2 being Category;
let R5 being (Functor of R1 , R2);
assume L96: R5 is  isomorphic;
L97: R5 is  one-to-one by L96 , L77;
L98: ( rng ( Obj R5 ) ) = (the carrier of R2) by L96 , CAT_1:def 25;
reconsider D9 = ( ( Obj R5 ) " ) as (Function of (the carrier of R2) , (the carrier of R1)) by L98 , L97 , L45 , FUNCT_2:25;
L99: ( Obj R5 ) is  one-to-one by L97 , L45;
L100:
now
let C34 being (Object of R2);
L101: ( R5 . (( id ( D9 . C34 ) ) qua (Morphism of R1)) ) = ( id ( ( Obj R5 ) . ( D9 . C34 ) ) ) by CAT_1:68
.= ( id C34 ) by L98 , L99 , FUNCT_1:35;
L102: ( id ( D9 . C34 ) ) = ( ( (R5 qua (Function of (the carrier' of R1) , (the carrier' of R2))) " ) . ( id C34 ) ) by L101 , L97 , FUNCT_2:26
.= ( ( R5 " ) . (( id C34 ) qua (Morphism of R2)) ) by L96 , L55;
thus L103: ( D9 . C34 ) = ( ( Obj ( R5 " ) ) . C34 ) by L102 , CAT_1:67;
end;
thus L104: thesis by L100 , FUNCT_2:63;
end;
theorem
L105: (for R1 being Category holds (for R2 being Category holds (for R5 being (Functor of R1 , R2) holds (R5 is  isomorphic implies ( ( R5 " ) " ) = R5))))
proof
let R1 being Category;
let R2 being Category;
let R5 being (Functor of R1 , R2);
reconsider D10 = R5 as (Function of (the carrier' of R1) , (the carrier' of R2));
reconsider D11 = ( R5 " ) as (Function of (the carrier' of R2) , (the carrier' of R1));
assume L106: R5 is  isomorphic;
L107: R5 is  one-to-one by L106 , CAT_1:def 25;
thus L108: ( ( R5 " ) " ) = ( D11 " ) by L106 , L55 , L90
.= ( ( D10 " ) " ) by L106 , L55
.= R5 by L107 , FUNCT_1:43;
end;
theorem
L109: (for R1 being Category holds (for R2 being Category holds (for R5 being (Functor of R1 , R2) holds (R5 is  isomorphic implies (( R5 * ( R5 " ) ) = ( id R2 ) & ( ( R5 " ) * R5 ) = ( id R1 ))))))
proof
let R1 being Category;
let R2 being Category;
let R5 being (Functor of R1 , R2);
reconsider D12 = R5 as (Function of (the carrier' of R1) , (the carrier' of R2));
L110: ( dom D12 ) = (the carrier' of R1) by FUNCT_2:def 1;
assume L111: R5 is  isomorphic;
L112: R5 is  one-to-one by L111 , L77;
L113: ( rng D12 ) = (the carrier' of R2) by L111 , L77;
thus L114: ( R5 * ( R5 " ) ) = ( D12 * ( D12 " ) ) by L111 , L55
.= ( id R2 ) by L112 , L113 , FUNCT_1:39;
thus L115: ( ( R5 " ) * R5 ) = ( ( D12 " ) * D12 ) by L111 , L55
.= ( id R1 ) by L112 , L110 , FUNCT_1:39;
end;
theorem
L116: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for R5 being (Functor of R1 , R2) holds (for R6 being (Functor of R2 , R3) holds ((R5 is  isomorphic & R6 is  isomorphic) implies ( R6 * R5 ) is  isomorphic))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let R5 being (Functor of R1 , R2);
let R6 being (Functor of R2 , R3);
assume that
L117: R5 is  one-to-one
and
L118: ( rng R5 ) = (the carrier' of R2)
and
L119: R6 is  one-to-one
and
L120: ( rng R6 ) = (the carrier' of R3);
thus L121: ( R6 * R5 ) is  one-to-one by L117 , L119 , FUNCT_1:24;
L122: ( dom R6 ) = (the carrier' of R2) by FUNCT_2:def 1;
thus L123: thesis by L122 , L118 , L120 , RELAT_1:28;
end;
definition
let R1 being Category;
let R2 being Category;
pred R1 , R2 are_isomorphic 
means
(ex B28 being (Functor of R1 , R2) st B28 is  isomorphic)
;reflexivity
proof
let R1 being Category;
L124: ( id R1 ) is  isomorphic by CAT_1:80;
thus L125: thesis by L124;
end;
symmetry
proof
let R1 being Category;
let R2 being Category;
given C35 being (Functor of R1 , R2) such that
L126: C35 is  isomorphic;

take ( C35 " );
thus L127: thesis by L126 , L90;
end;
end;
notation
let R1 being Category;
let R2 being Category;
synonym R1 ~= R2 for R1 , R2 are_isomorphic ;
end;
theorem
L130: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds ((R1 ~= R2 & R2 ~= R3) implies R1 ~= R3))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
given C36 being (Functor of R1 , R2) such that
L131: C36 is  isomorphic;

given C37 being (Functor of R2 , R3) such that
L132: C37 is  isomorphic;

take ( C37 * C36 );
thus L133: thesis by L131 , L132 , L116;
end;
theorem
L134: (for R1 being Category holds (for R7 being set holds (for R8 being set holds [: ( 1Cat (R7 , R8) ) , R1 :] ~= R1)))
proof
let R1 being Category;
let R7 being set;
let R8 being set;
take D13 = ( pr2 (( 1Cat (R7 , R8) ) , R1) );
set D14 = [: (the carrier' of ( 1Cat (R7 , R8) )) , (the carrier' of R1) :];
L135:
now
let C38 , C39 being set;
assume L136: C38 in D14;
consider C40 , C41 being set such that L137: C40 in (the carrier' of ( 1Cat (R7 , R8) )) and L138: C41 in (the carrier' of R1) and L139: C38 = [ C40 , C41 ] by L136 , ZFMISC_1:def 2;
assume L140: C39 in D14;
consider C42 , C43 being set such that L141: C42 in (the carrier' of ( 1Cat (R7 , R8) )) and L142: C43 in (the carrier' of R1) and L143: C39 = [ C42 , C43 ] by L140 , ZFMISC_1:def 2;
reconsider D15 = C40 , D16 = C42 as (Morphism of ( 1Cat (R7 , R8) )) by L137 , L141;
assume L144: ( D13 . C38 ) = ( D13 . C39 );
reconsider D17 = C41 , D18 = C43 as (Morphism of R1) by L138 , L142;
L145: D15 = R8 by TARSKI:def 1
.= D16 by TARSKI:def 1;
L146: D17 = ( D13 . (D15 , D17) ) by FUNCT_3:def 5
.= ( D13 . (D16 , D18) ) by L139 , L143 , L144
.= D18 by FUNCT_3:def 5;
thus L147: C38 = C39 by L146 , L139 , L143 , L145;
end;
thus L148: D13 is  one-to-one by L135 , FUNCT_2:19;
thus L149: thesis by FUNCT_3:46;
end;
theorem
L150: (for R1 being Category holds (for R2 being Category holds [: R1 , R2 :] ~= [: R2 , R1 :]))
proof
let R1 being Category;
let R2 being Category;
take D19 = <: ( pr2 (R1 , R2) ) , ( pr1 (R1 , R2) ) :>;
L151: (( dom ( pr1 (R1 , R2) ) ) = (the carrier' of [: R1 , R2 :]) & ( dom ( pr2 (R1 , R2) ) ) = (the carrier' of [: R1 , R2 :])) by FUNCT_2:def 1;
L152:
now
let C44 , C45 being set;
assume L153: C44 in [: (the carrier' of R1) , (the carrier' of R2) :];
consider C46 , C47 being set such that L154: C46 in (the carrier' of R1) and L155: C47 in (the carrier' of R2) and L156: C44 = [ C46 , C47 ] by L153 , ZFMISC_1:def 2;
assume L157: C45 in [: (the carrier' of R1) , (the carrier' of R2) :];
consider C48 , C49 being set such that L158: C48 in (the carrier' of R1) and L159: C49 in (the carrier' of R2) and L160: C45 = [ C48 , C49 ] by L157 , ZFMISC_1:def 2;
reconsider D20 = C47 , D21 = C49 as (Morphism of R2) by L155 , L159;
reconsider D22 = C46 , D23 = C48 as (Morphism of R1) by L154 , L158;
L161: [ D23 , D21 ] in (the carrier' of [: R1 , R2 :]);
assume L162: ( D19 . C44 ) = ( D19 . C45 );
L163: [ D22 , D20 ] in (the carrier' of [: R1 , R2 :]);
L164: [ D20 , D22 ] = [ D20 , ( ( pr1 (R1 , R2) ) . (D22 , D20) ) ] by FUNCT_3:def 4
.= [ ( ( pr2 (R1 , R2) ) . (D22 , D20) ) , ( ( pr1 (R1 , R2) ) . (D22 , D20) ) ] by FUNCT_3:def 5
.= ( D19 . (D23 , D21) ) by L151 , L156 , L160 , L163 , L162 , FUNCT_3:49
.= [ ( ( pr2 (R1 , R2) ) . (D23 , D21) ) , ( ( pr1 (R1 , R2) ) . (D23 , D21) ) ] by L151 , L161 , FUNCT_3:49
.= [ D21 , ( ( pr1 (R1 , R2) ) . (D23 , D21) ) ] by FUNCT_3:def 5
.= [ D21 , D23 ] by FUNCT_3:def 4;
L165: C47 = C49 by L164 , XTUPLE_0:1;
thus L166: C44 = C45 by L165 , L156 , L160 , L164 , XTUPLE_0:1;
end;
thus L167: D19 is  one-to-one by L152 , FUNCT_2:19;
thus L168: ( rng D19 ) c= (the carrier' of [: R2 , R1 :]);
let C50 being set;
assume L169: C50 in (the carrier' of [: R2 , R1 :]);
consider C51 , C52 being set such that L170: C51 in (the carrier' of R2) and L171: C52 in (the carrier' of R1) and L172: C50 = [ C51 , C52 ] by L169 , ZFMISC_1:def 2;
reconsider D24 = C52 as (Morphism of R1) by L171;
reconsider D25 = C51 as (Morphism of R2) by L170;
L173: ( D19 . [ D24 , D25 ] ) = [ ( ( pr2 (R1 , R2) ) . (D24 , D25) ) , ( ( pr1 (R1 , R2) ) . (D24 , D25) ) ] by L151 , FUNCT_3:49
.= [ D25 , ( ( pr1 (R1 , R2) ) . (D24 , D25) ) ] by FUNCT_3:def 5
.= [ D25 , D24 ] by FUNCT_3:def 4;
thus L174: thesis by L173 , L172 , FUNCT_2:4;
end;
theorem
L175: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds [: [: R1 , R2 :] , R3 :] ~= [: R1 , [: R2 , R3 :] :])))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
set D26 = ( ( pr1 (R1 , R2) ) * ( pr1 ([: R1 , R2 :] , R3) ) );
set D27 = <: ( ( pr2 (R1 , R2) ) * ( pr1 ([: R1 , R2 :] , R3) ) ) , ( pr2 ([: R1 , R2 :] , R3) ) :>;
take D28 = <: D26 , D27 :>;
L176: (( dom ( pr2 ([: R1 , R2 :] , R3) ) ) = (the carrier' of [: [: R1 , R2 :] , R3 :]) & ( dom ( ( pr2 (R1 , R2) ) * ( pr1 ([: R1 , R2 :] , R3) ) ) ) = (the carrier' of [: [: R1 , R2 :] , R3 :])) by FUNCT_2:def 1;
L177: (( dom D26 ) = (the carrier' of [: [: R1 , R2 :] , R3 :]) & ( dom D27 ) = (the carrier' of [: [: R1 , R2 :] , R3 :])) by FUNCT_2:def 1;
L178:
now
let C53 , C54 being set;
assume L179: C53 in [: [: (the carrier' of R1) , (the carrier' of R2) :] , (the carrier' of R3) :];
consider C55 , C56 being set such that L180: C55 in [: (the carrier' of R1) , (the carrier' of R2) :] and L181: C56 in (the carrier' of R3) and L182: C53 = [ C55 , C56 ] by L179 , ZFMISC_1:def 2;
assume L183: C54 in [: [: (the carrier' of R1) , (the carrier' of R2) :] , (the carrier' of R3) :];
consider C57 , C58 being set such that L184: C57 in [: (the carrier' of R1) , (the carrier' of R2) :] and L185: C58 in (the carrier' of R3) and L186: C54 = [ C57 , C58 ] by L183 , ZFMISC_1:def 2;
reconsider D29 = C56 , D30 = C58 as (Morphism of R3) by L181 , L185;
assume L187: ( D28 . C53 ) = ( D28 . C54 );
consider C59 , C60 being set such that L188: C59 in (the carrier' of R1) and L189: C60 in (the carrier' of R2) and L190: C55 = [ C59 , C60 ] by L180 , ZFMISC_1:def 2;
consider C61 , C62 being set such that L191: C61 in (the carrier' of R1) and L192: C62 in (the carrier' of R2) and L193: C57 = [ C61 , C62 ] by L184 , ZFMISC_1:def 2;
reconsider D31 = C60 , D32 = C62 as (Morphism of R2) by L189 , L192;
reconsider D33 = C59 , D34 = C61 as (Morphism of R1) by L188 , L191;
L194: [ D33 , [ D31 , D29 ] ] = [ ( ( pr1 (R1 , R2) ) . (D33 , D31) ) , [ D31 , D29 ] ] by FUNCT_3:def 4
.= [ ( ( pr1 (R1 , R2) ) . ( ( pr1 ([: R1 , R2 :] , R3) ) . ([ D33 , D31 ] , D29) ) ) , [ D31 , D29 ] ] by FUNCT_3:def 4
.= [ ( ( pr1 (R1 , R2) ) . ( ( pr1 ([: R1 , R2 :] , R3) ) . [ [ D33 , D31 ] , D29 ] ) ) , [ D31 , D29 ] ]
.= [ ( D26 . ([ D33 , D31 ] , D29) ) , [ D31 , D29 ] ] by FUNCT_2:15
.= [ ( D26 . [ [ D33 , D31 ] , D29 ] ) , [ ( ( pr2 (R1 , R2) ) . (D33 , D31) ) , D29 ] ] by FUNCT_3:def 5
.= [ ( D26 . [ [ D33 , D31 ] , D29 ] ) , [ ( ( pr2 (R1 , R2) ) . ( ( pr1 ([: R1 , R2 :] , R3) ) . ([ D33 , D31 ] , D29) ) ) , D29 ] ] by FUNCT_3:def 4
.= [ ( D26 . [ [ D33 , D31 ] , D29 ] ) , [ ( ( ( pr2 (R1 , R2) ) * ( pr1 ([: R1 , R2 :] , R3) ) ) . [ [ D33 , D31 ] , D29 ] ) , D29 ] ] by FUNCT_2:15
.= [ ( D26 . [ [ D33 , D31 ] , D29 ] ) , [ ( ( ( pr2 (R1 , R2) ) * ( pr1 ([: R1 , R2 :] , R3) ) ) . [ [ D33 , D31 ] , D29 ] ) , ( ( pr2 ([: R1 , R2 :] , R3) ) . ([ D33 , D31 ] , D29) ) ] ] by FUNCT_3:def 5
.= [ ( D26 . [ [ D33 , D31 ] , D29 ] ) , ( D27 . [ [ D33 , D31 ] , D29 ] ) ] by L176 , FUNCT_3:49
.= ( D28 . [ [ D34 , D32 ] , D30 ] ) by L177 , L182 , L190 , L186 , L193 , L187 , FUNCT_3:49
.= [ ( D26 . [ [ D34 , D32 ] , D30 ] ) , ( D27 . [ [ D34 , D32 ] , D30 ] ) ] by L177 , FUNCT_3:49
.= [ ( D26 . [ [ D34 , D32 ] , D30 ] ) , [ ( ( ( pr2 (R1 , R2) ) * ( pr1 ([: R1 , R2 :] , R3) ) ) . [ [ D34 , D32 ] , D30 ] ) , ( ( pr2 ([: R1 , R2 :] , R3) ) . ([ D34 , D32 ] , D30) ) ] ] by L176 , FUNCT_3:49
.= [ ( D26 . [ [ D34 , D32 ] , D30 ] ) , [ ( ( ( pr2 (R1 , R2) ) * ( pr1 ([: R1 , R2 :] , R3) ) ) . [ [ D34 , D32 ] , D30 ] ) , D30 ] ] by FUNCT_3:def 5
.= [ ( D26 . [ [ D34 , D32 ] , D30 ] ) , [ ( ( pr2 (R1 , R2) ) . ( ( pr1 ([: R1 , R2 :] , R3) ) . ([ D34 , D32 ] , D30) ) ) , D30 ] ] by FUNCT_2:15
.= [ ( D26 . [ [ D34 , D32 ] , D30 ] ) , [ ( ( pr2 (R1 , R2) ) . (D34 , D32) ) , D30 ] ] by FUNCT_3:def 4
.= [ ( D26 . [ [ D34 , D32 ] , D30 ] ) , [ D32 , D30 ] ] by FUNCT_3:def 5
.= [ ( ( pr1 (R1 , R2) ) . ( ( pr1 ([: R1 , R2 :] , R3) ) . ([ D34 , D32 ] , D30) ) ) , [ D32 , D30 ] ] by FUNCT_2:15
.= [ ( ( pr1 (R1 , R2) ) . (D34 , D32) ) , [ D32 , D30 ] ] by FUNCT_3:def 4
.= [ D34 , [ D32 , D30 ] ] by FUNCT_3:def 4;
L195: [ C60 , C56 ] = [ C62 , C58 ] by L194 , XTUPLE_0:1;
L196: (C60 = C62 & C56 = C58) by L195 , XTUPLE_0:1;
thus L197: C53 = C54 by L196 , L182 , L190 , L186 , L193 , L194 , XTUPLE_0:1;
end;
thus L198: D28 is  one-to-one by L178 , FUNCT_2:19;
thus L199: ( rng D28 ) c= (the carrier' of [: R1 , [: R2 , R3 :] :]);
let C63 being set;
assume L200: C63 in (the carrier' of [: R1 , [: R2 , R3 :] :]);
consider C64 , C65 being set such that L201: C64 in (the carrier' of R1) and L202: C65 in (the carrier' of [: R2 , R3 :]) and L203: C63 = [ C64 , C65 ] by L200 , ZFMISC_1:def 2;
reconsider D35 = C64 as (Morphism of R1) by L201;
consider C66 , C67 being set such that L204: C66 in (the carrier' of R2) and L205: C67 in (the carrier' of R3) and L206: C65 = [ C66 , C67 ] by L202 , ZFMISC_1:def 2;
reconsider D36 = C67 as (Morphism of R3) by L205;
reconsider D37 = C66 as (Morphism of R2) by L204;
L207: ( D28 . [ [ D35 , D37 ] , D36 ] ) = [ ( D26 . [ [ D35 , D37 ] , D36 ] ) , ( D27 . [ [ D35 , D37 ] , D36 ] ) ] by L177 , FUNCT_3:49
.= [ ( ( pr1 (R1 , R2) ) . ( ( pr1 ([: R1 , R2 :] , R3) ) . ([ D35 , D37 ] , D36) ) ) , ( D27 . [ [ D35 , D37 ] , D36 ] ) ] by FUNCT_2:15
.= [ ( ( pr1 (R1 , R2) ) . (D35 , D37) ) , ( D27 . [ [ D35 , D37 ] , D36 ] ) ] by FUNCT_3:def 4
.= [ D35 , ( D27 . [ [ D35 , D37 ] , D36 ] ) ] by FUNCT_3:def 4
.= [ D35 , [ ( ( ( pr2 (R1 , R2) ) * ( pr1 ([: R1 , R2 :] , R3) ) ) . [ [ D35 , D37 ] , D36 ] ) , ( ( pr2 ([: R1 , R2 :] , R3) ) . [ [ D35 , D37 ] , D36 ] ) ] ] by L176 , FUNCT_3:49
.= [ D35 , [ ( ( pr2 (R1 , R2) ) . ( ( pr1 ([: R1 , R2 :] , R3) ) . ([ D35 , D37 ] , D36) ) ) , ( ( pr2 ([: R1 , R2 :] , R3) ) . [ [ D35 , D37 ] , D36 ] ) ] ] by FUNCT_2:15
.= [ D35 , [ ( ( pr2 (R1 , R2) ) . (D35 , D37) ) , ( ( pr2 ([: R1 , R2 :] , R3) ) . ([ D35 , D37 ] , D36) ) ] ] by FUNCT_3:def 4
.= [ D35 , [ D37 , ( ( pr2 ([: R1 , R2 :] , R3) ) . ([ D35 , D37 ] , D36) ) ] ] by FUNCT_3:def 5
.= [ D35 , [ D37 , D36 ] ] by FUNCT_3:def 5;
thus L208: thesis by L207 , L203 , L206 , FUNCT_2:4;
end;
theorem
L209: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for R4 being Category holds ((R1 ~= R2 & R3 ~= R4) implies [: R1 , R3 :] ~= [: R2 , R4 :])))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let R4 being Category;
given C68 being (Functor of R1 , R2) such that
L210: C68 is  isomorphic;

L211: C68 is  one-to-one by L210 , L77;
given C69 being (Functor of R3 , R4) such that
L212: C69 is  isomorphic;

take [: C68 , C69 :];
L213: C69 is  one-to-one by L212 , L77;
thus L214: [: C68 , C69 :] is  one-to-one by L213 , L211;
thus L215: ( rng [: C68 , C69 :] ) = [: ( rng C68 ) , ( rng C69 ) :] by FUNCT_3:67
.= [: (the carrier' of R2) , ( rng C69 ) :] by L210 , L77
.= (the carrier' of [: R2 , R4 :]) by L212 , L77;
end;
definition
let R1 being Category;
let R2 being Category;
let R3 being Category;
let C70 , C71 being (Functor of R1 , R2);
assume that
L216: C70 is_transformable_to C71;
let C72 being (transformation of C70 , C71);
let C73 being (Functor of R2 , R3);
func C73 * C72 -> (transformation of ( C73 * C70 ) , ( C73 * C71 )) equals 
:L217: ( C73 * C72 );
coherence
proof
reconsider D38 = ( C73 * C72 ) as (Function of (the carrier of R1) , (the carrier' of R3));
L218: D38 is (transformation of ( C73 * C70 ) , ( C73 * C71 ))
proof
thus L219: ( C73 * C70 ) is_transformable_to ( C73 * C71 ) by L216 , L20;
let C74 being (Object of R1);
L220: (( C73 . ( C70 . C74 ) ) = ( ( C73 * C70 ) . C74 ) & ( C73 . ( C71 . C74 ) ) = ( ( C73 * C71 ) . C74 )) by CAT_1:76;
L221: ( C72 . C74 ) in ( Hom (( C70 . C74 ) , ( C71 . C74 )) ) by L216 , L16;
L222: ( C73 . (( C72 . C74 ) qua (Morphism of R2)) ) in ( Hom (( ( C73 * C70 ) . C74 ) , ( ( C73 * C71 ) . C74 )) ) by L221 , L220 , CAT_1:81;
L223: ( D38 . C74 ) = ( C73 . ( (C72 qua (Function of (the carrier of R1) , (the carrier' of R2))) . C74 ) ) by FUNCT_2:15
.= ( C73 . (( C72 . C74 ) qua (Morphism of R2)) ) by L216 , NATTRA_1:def 5;
thus L224: thesis by L223 , L222 , CAT_1:def 5;
end;
thus L225: thesis by L218;
end;
correctness;
end;
definition
let R1 being Category;
let R2 being Category;
let R3 being Category;
let C75 , C76 being (Functor of R2 , R3);
assume that
L227: C75 is_transformable_to C76;
let C77 being (Functor of R1 , R2);
let C78 being (transformation of C75 , C76);
func C78 * C77 -> (transformation of ( C75 * C77 ) , ( C76 * C77 )) equals 
:L228: ( C78 * ( Obj C77 ) );
coherence
proof
reconsider D39 = ( C78 * ( Obj C77 ) ) as (Function of (the carrier of R1) , (the carrier' of R3));
L229: D39 is (transformation of ( C75 * C77 ) , ( C76 * C77 ))
proof
thus L230: ( C75 * C77 ) is_transformable_to ( C76 * C77 ) by L227 , L20;
let C79 being (Object of R1);
L231: ( C75 . ( C77 . C79 ) ) = ( ( C75 * C77 ) . C79 ) by CAT_1:76;
L232: ( D39 . C79 ) = ( C78 . (( ( Obj C77 ) . C79 ) qua set) ) by FUNCT_2:15
.= ( C78 . ( C77 . C79 ) ) by L227 , NATTRA_1:def 5;
thus L233: thesis by L232 , L231 , CAT_1:76;
end;
thus L234: thesis by L229;
end;
correctness;
end;
theorem
L236: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for B29 , B30 being (Functor of R2 , R3) holds (B29 is_transformable_to B30 implies (for B31 being (Functor of R1 , R2) holds (for B32 being (transformation of B29 , B30) holds (for B33 being (Object of R1) holds ( ( B32 * B31 ) . B33 ) = ( B32 . ( B31 . B33 ) )))))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let C80 , C81 being (Functor of R2 , R3);
assume that
L237: C80 is_transformable_to C81;
let C82 being (Functor of R1 , R2);
let C83 being (transformation of C80 , C81);
let C84 being (Object of R1);
thus L238: ( ( C83 * C82 ) . C84 ) = ( ( C83 * C82 ) . (C84 qua set) ) by L237 , L20 , NATTRA_1:def 5
.= ( ( (C83 qua (Function of (the carrier of R2) , (the carrier' of R3))) * ( Obj C82 ) ) . C84 ) by L237 , L228
.= ( C83 . (( ( Obj C82 ) . C84 ) qua set) ) by FUNCT_2:15
.= ( C83 . ( C82 . C84 ) ) by L237 , NATTRA_1:def 5;
end;
theorem
L239: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for B34 , B35 being (Functor of R1 , R2) holds (B34 is_transformable_to B35 implies (for B36 being (transformation of B34 , B35) holds (for B37 being (Functor of R2 , R3) holds (for B38 being (Object of R1) holds ( ( B37 * B36 ) . B38 ) = ( B37 /. ( B36 . B38 ) )))))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let C85 , C86 being (Functor of R1 , R2);
assume that
L240: C85 is_transformable_to C86;
let C87 being (transformation of C85 , C86);
let C88 being (Functor of R2 , R3);
let C89 being (Object of R1);
L241: ( Hom (( C85 . C89 ) , ( C86 . C89 )) ) <> ( {} ) by L240 , NATTRA_1:def 2;
thus L242: ( ( C88 * C87 ) . C89 ) = ( ( C88 * C87 ) . (C89 qua set) ) by L240 , L20 , NATTRA_1:def 5
.= ( ( (C88 qua (Function of (the carrier' of R2) , (the carrier' of R3))) * (C87 qua (Function of (the carrier of R1) , (the carrier' of R2))) ) . C89 ) by L240 , L217
.= ( C88 . ( C87 . (C89 qua set) ) ) by FUNCT_2:15
.= ( C88 . (( C87 . C89 ) qua (Morphism of R2)) ) by L240 , NATTRA_1:def 5
.= ( C88 /. ( C87 . C89 ) ) by L241 , CAT_3:def 10;
end;
theorem
L243: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for B39 , B40 being (Functor of R1 , R2) holds (for B41 , B42 being (Functor of R2 , R3) holds ((B39 is_naturally_transformable_to B40 & B41 is_naturally_transformable_to B42) implies ( B41 * B39 ) is_naturally_transformable_to ( B42 * B40 )))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let C90 , C91 being (Functor of R1 , R2);
let C92 , C93 being (Functor of R2 , R3);
assume that
L244: C90 is_naturally_transformable_to C91
and
L245: C92 is_naturally_transformable_to C93;
set D40 = the (natural_transformation of C90 , C91);
set D41 = the (natural_transformation of C92 , C93);
L246: C92 is_transformable_to C93 by L245 , NATTRA_1:def 7;
L247: C90 is_transformable_to C91 by L244 , NATTRA_1:def 7;
thus L248: ( C92 * C90 ) is_transformable_to ( C93 * C91 ) by L247 , L246 , L20;
take D42 = ( ( D41 * C91 ) `*` ( C92 * D40 ) );
let C94 , C95 being (Object of R1);
L249: ( Hom (( C92 . ( C91 . C95 ) ) , ( C93 . ( C91 . C95 ) )) ) <> ( {} ) by L246 , NATTRA_1:def 2;
L250: ( Hom (( ( C92 * C90 ) . C94 ) , ( ( C93 * C91 ) . C94 )) ) <> ( {} ) by L248 , NATTRA_1:def 2;
L251: ( C92 * C90 ) is_transformable_to ( C92 * C91 ) by L247 , L20;
L252: ( Hom (( ( C92 * C90 ) . C95 ) , ( ( C92 * C91 ) . C95 )) ) <> ( {} ) by L251 , NATTRA_1:def 2;
L253: ( Hom (( ( C92 * C90 ) . C95 ) , ( ( C93 * C91 ) . C95 )) ) <> ( {} ) by L248 , NATTRA_1:def 2;
assume L254: ( Hom (C94 , C95) ) <> ( {} );
L255: ( Hom (( ( C93 * C91 ) . C94 ) , ( ( C93 * C91 ) . C95 )) ) <> ( {} ) by L254 , CAT_1:84;
L256: ( Hom (( C90 . C95 ) , ( C91 . C95 )) ) <> ( {} ) by L247 , NATTRA_1:def 2;
L257: ( Hom (( C92 . ( C90 . C95 ) ) , ( C92 . ( C91 . C95 ) )) ) <> ( {} ) by L256 , CAT_1:84;
L258: ( Hom (( C92 . ( C90 . C95 ) ) , ( C93 . ( C91 . C95 ) )) ) <> ( {} ) by L257 , L249 , CAT_1:24;
L259: ( C92 * C91 ) is_transformable_to ( C93 * C91 ) by L246 , L20;
L260: ( Hom (( ( C92 * C91 ) . C95 ) , ( ( C93 * C91 ) . C95 )) ) <> ( {} ) by L259 , NATTRA_1:def 2;
L261: ( Hom (( ( C92 * C90 ) . C94 ) , ( ( C92 * C91 ) . C94 )) ) <> ( {} ) by L251 , NATTRA_1:def 2;
L262: ( Hom (( ( C92 * C91 ) . C94 ) , ( ( C93 * C91 ) . C94 )) ) <> ( {} ) by L259 , NATTRA_1:def 2;
L263: ( Hom (( C90 . C94 ) , ( C91 . C94 )) ) <> ( {} ) by L247 , NATTRA_1:def 2;
L264: ( Hom (( C92 . ( C90 . C94 ) ) , ( C92 . ( C91 . C94 ) )) ) <> ( {} ) by L263 , CAT_1:84;
let C96 being (Morphism of C94 , C95);
L265: ( Hom (( C91 . C94 ) , ( C91 . C95 )) ) <> ( {} ) by L254 , CAT_1:84;
L266: ( Hom (( C92 . ( C91 . C94 ) ) , ( C92 . ( C91 . C95 ) )) ) <> ( {} ) by L265 , CAT_1:84;
L267: ( Hom (( C90 . C94 ) , ( C90 . C95 )) ) <> ( {} ) by L254 , CAT_1:84;
L268: ( Hom (( C92 . ( C90 . C94 ) ) , ( C92 . ( C90 . C95 ) )) ) <> ( {} ) by L267 , CAT_1:84;
L269: ( Hom (( C92 . ( C91 . C94 ) ) , ( C93 . ( C91 . C94 ) )) ) <> ( {} ) by L246 , NATTRA_1:def 2;
L270: ( Hom (( C92 . ( C90 . C94 ) ) , ( C93 . ( C91 . C94 ) )) ) <> ( {} ) by L269 , L264 , CAT_1:24;
L271: ( Hom (( C93 . ( C91 . C94 ) ) , ( C93 . ( C91 . C95 ) )) ) <> ( {} ) by L265 , CAT_1:84;
L272: ( Hom (( ( C92 * C90 ) . C94 ) , ( ( C92 * C90 ) . C95 )) ) <> ( {} ) by L254 , CAT_1:84;
thus L273: ( ( D42 . C95 ) * ( ( C92 * C90 ) /. C96 ) ) = ( ( D42 . C95 ) (*) (( ( C92 * C90 ) /. C96 ) qua (Morphism of R3)) ) by L272 , L253 , CAT_1:def 13
.= ( ( D42 . C95 ) (*) (( C92 /. ( C90 /. C96 ) ) qua (Morphism of R3)) ) by L254 , NATTRA_1:11
.= ( ( ( ( D41 * C91 ) . C95 ) * ( ( C92 * D40 ) . C95 ) ) (*) ( C92 /. ( C90 /. C96 ) ) ) by L251 , L259 , NATTRA_1:def 6
.= ( ( (( ( D41 * C91 ) . C95 ) qua (Morphism of R3)) (*) ( ( C92 * D40 ) . C95 ) ) (*) ( C92 /. ( C90 /. C96 ) ) ) by L260 , L252 , CAT_1:def 13
.= ( ( ( ( D41 * C91 ) . C95 ) (*) ( C92 /. ( D40 . C95 ) ) ) (*) ( C92 /. ( C90 /. C96 ) ) ) by L247 , L239
.= ( ( (( D41 . ( C91 . C95 ) ) qua (Morphism of R3)) (*) ( C92 /. ( D40 . C95 ) ) ) (*) ( C92 /. ( C90 /. C96 ) ) ) by L246 , L236
.= ( (( ( D41 . ( C91 . C95 ) ) * ( C92 /. ( D40 . C95 ) ) ) qua (Morphism of R3)) (*) ( C92 /. ( C90 /. C96 ) ) ) by L249 , L257 , CAT_1:def 13
.= ( ( ( D41 . ( C91 . C95 ) ) * ( C92 /. ( D40 . C95 ) ) ) * ( C92 /. ( C90 /. C96 ) ) ) by L268 , L258 , CAT_1:def 13
.= ( ( D41 . ( C91 . C95 ) ) * ( ( C92 /. ( D40 . C95 ) ) * ( C92 /. ( C90 /. C96 ) ) ) ) by L249 , L257 , L268 , CAT_1:25
.= ( ( D41 . ( C91 . C95 ) ) * ( C92 /. ( ( D40 . C95 ) * ( C90 /. C96 ) ) ) ) by L256 , L267 , NATTRA_1:13
.= ( ( D41 . ( C91 . C95 ) ) * ( C92 /. ( ( C91 /. C96 ) * ( D40 . C94 ) ) ) ) by L244 , L254 , NATTRA_1:def 8
.= ( ( D41 . ( C91 . C95 ) ) * ( ( C92 /. ( C91 /. C96 ) ) * ( C92 /. ( D40 . C94 ) ) ) ) by L265 , L263 , NATTRA_1:13
.= ( ( ( D41 . ( C91 . C95 ) ) * ( C92 /. ( C91 /. C96 ) ) ) * ( C92 /. ( D40 . C94 ) ) ) by L249 , L266 , L264 , CAT_1:25
.= ( ( ( C93 /. ( C91 /. C96 ) ) * ( D41 . ( C91 . C94 ) ) ) * ( C92 /. ( D40 . C94 ) ) ) by L245 , L265 , NATTRA_1:def 8
.= ( ( C93 /. ( C91 /. C96 ) ) * ( ( D41 . ( C91 . C94 ) ) * ( C92 /. ( D40 . C94 ) ) ) ) by L264 , L271 , L269 , CAT_1:25
.= ( ( C93 /. ( C91 /. C96 ) ) (*) (( ( D41 . ( C91 . C94 ) ) * ( C92 /. ( D40 . C94 ) ) ) qua (Morphism of R3)) ) by L271 , L270 , CAT_1:def 13
.= ( ( C93 /. ( C91 /. C96 ) ) (*) ( (( D41 . ( C91 . C94 ) ) qua (Morphism of R3)) (*) ( C92 /. ( D40 . C94 ) ) ) ) by L264 , L269 , CAT_1:def 13
.= ( ( C93 /. ( C91 /. C96 ) ) (*) ( ( ( D41 * C91 ) . C94 ) (*) ( C92 /. ( D40 . C94 ) ) ) ) by L246 , L236
.= ( ( C93 /. ( C91 /. C96 ) ) (*) ( (( ( D41 * C91 ) . C94 ) qua (Morphism of R3)) (*) ( ( C92 * D40 ) . C94 ) ) ) by L247 , L239
.= ( ( C93 /. ( C91 /. C96 ) ) (*) ( ( ( D41 * C91 ) . C94 ) * ( ( C92 * D40 ) . C94 ) ) ) by L262 , L261 , CAT_1:def 13
.= ( ( C93 /. ( C91 /. C96 ) ) (*) ( D42 . C94 ) ) by L251 , L259 , NATTRA_1:def 6
.= ( (( ( C93 * C91 ) /. C96 ) qua (Morphism of R3)) (*) ( D42 . C94 ) ) by L254 , NATTRA_1:11
.= ( ( ( C93 * C91 ) /. C96 ) * ( D42 . C94 ) ) by L250 , L255 , CAT_1:def 13;
end;
definition
let R1 being Category;
let R2 being Category;
let R3 being Category;
let C97 , C98 being (Functor of R1 , R2);
assume that
L274: C97 is_naturally_transformable_to C98;
let C99 being (natural_transformation of C97 , C98);
let C100 being (Functor of R2 , R3);
func C100 * C99 -> (natural_transformation of ( C100 * C97 ) , ( C100 * C98 )) equals 
:L275: ( C100 * C99 );
coherence
proof
L276: C97 is_transformable_to C98 by L274 , NATTRA_1:def 7;
L277: ( C100 * C99 ) is (natural_transformation of ( C100 * C97 ) , ( C100 * C98 ))
proof
thus L278: ( C100 * C97 ) is_naturally_transformable_to ( C100 * C98 ) by L274 , L243;
L279: ( C100 * C97 ) is_transformable_to ( C100 * C98 ) by L278 , NATTRA_1:def 7;
let C101 , C102 being (Object of R1);
assume that
L280: ( Hom (C101 , C102) ) <> ( {} );
L281: ( Hom (( ( C100 * C97 ) . C101 ) , ( ( C100 * C97 ) . C102 )) ) <> ( {} ) by L280 , CAT_1:84;
L282: ( Hom (( ( C100 * C98 ) . C101 ) , ( ( C100 * C98 ) . C102 )) ) <> ( {} ) by L280 , CAT_1:84;
L283: ( Hom (( ( C100 * C97 ) . C101 ) , ( ( C100 * C98 ) . C101 )) ) <> ( {} ) by L279 , NATTRA_1:def 2;
let C103 being (Morphism of C101 , C102);
L284: ( Hom (( C97 . C102 ) , ( C98 . C102 )) ) <> ( {} ) by L276 , NATTRA_1:def 2;
L285: ( Hom (( C100 . ( C97 . C102 ) ) , ( C100 . ( C98 . C102 ) )) ) <> ( {} ) by L284 , CAT_1:84;
L286: ( Hom (( C97 . C101 ) , ( C98 . C101 )) ) <> ( {} ) by L276 , NATTRA_1:def 2;
L287: ( Hom (( C100 . ( C97 . C101 ) ) , ( C100 . ( C98 . C101 ) )) ) <> ( {} ) by L286 , CAT_1:84;
L288: ( Hom (( C98 . C101 ) , ( C98 . C102 )) ) <> ( {} ) by L280 , CAT_1:84;
L289: ( Hom (( C100 . ( C98 . C101 ) ) , ( C100 . ( C98 . C102 ) )) ) <> ( {} ) by L288 , CAT_1:84;
L290: ( Hom (( C97 . C101 ) , ( C97 . C102 )) ) <> ( {} ) by L280 , CAT_1:84;
L291: ( Hom (( C100 . ( C97 . C101 ) ) , ( C100 . ( C97 . C102 ) )) ) <> ( {} ) by L290 , CAT_1:84;
L292: ( Hom (( ( C100 * C97 ) . C102 ) , ( ( C100 * C98 ) . C102 )) ) <> ( {} ) by L279 , NATTRA_1:def 2;
thus L293: ( ( ( C100 * C99 ) . C102 ) * ( ( C100 * C97 ) /. C103 ) ) = ( ( ( C100 * C99 ) . C102 ) (*) (( ( C100 * C97 ) /. C103 ) qua (Morphism of R3)) ) by L292 , L281 , CAT_1:def 13
.= ( ( ( C100 * C99 ) . C102 ) (*) ( C100 /. ( C97 /. C103 ) ) ) by L280 , NATTRA_1:11
.= ( (( C100 /. ( C99 . C102 ) ) qua (Morphism of R3)) (*) ( C100 /. ( C97 /. C103 ) ) ) by L276 , L239
.= ( ( C100 /. ( C99 . C102 ) ) * ( C100 /. ( C97 /. C103 ) ) ) by L285 , L291 , CAT_1:def 13
.= ( C100 /. ( ( C99 . C102 ) * ( C97 /. C103 ) ) ) by L284 , L290 , NATTRA_1:13
.= ( C100 /. ( ( C98 /. C103 ) * ( C99 . C101 ) ) ) by L274 , L280 , NATTRA_1:def 8
.= ( ( C100 /. ( C98 /. C103 ) ) * ( C100 /. ( C99 . C101 ) ) ) by L286 , L288 , NATTRA_1:13
.= ( ( C100 /. ( C98 /. C103 ) ) (*) (( C100 /. ( C99 . C101 ) ) qua (Morphism of R3)) ) by L289 , L287 , CAT_1:def 13
.= ( ( C100 /. ( C98 /. C103 ) ) (*) ( ( C100 * C99 ) . C101 ) ) by L276 , L239
.= ( (( ( C100 * C98 ) /. C103 ) qua (Morphism of R3)) (*) ( ( C100 * C99 ) . C101 ) ) by L280 , NATTRA_1:11
.= ( ( ( C100 * C98 ) /. C103 ) * ( ( C100 * C99 ) . C101 ) ) by L283 , L282 , CAT_1:def 13;
end;
thus L294: thesis by L277;
end;
correctness;
end;
theorem
L296: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for B43 , B44 being (Functor of R1 , R2) holds (B43 is_naturally_transformable_to B44 implies (for B45 being (natural_transformation of B43 , B44) holds (for B46 being (Functor of R2 , R3) holds (for B47 being (Object of R1) holds ( ( B46 * B45 ) . B47 ) = ( B46 /. ( B45 . B47 ) )))))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let C104 , C105 being (Functor of R1 , R2);
assume L297: C104 is_naturally_transformable_to C105;
L298: C104 is_transformable_to C105 by L297 , NATTRA_1:def 7;
let C106 being (natural_transformation of C104 , C105);
let C107 being (Functor of R2 , R3);
let C108 being (Object of R1);
thus L299: ( ( C107 * C106 ) . C108 ) = ( ( C107 * (C106 qua (transformation of C104 , C105)) ) . C108 ) by L297 , L275
.= ( C107 /. ( C106 . C108 ) ) by L298 , L239;
end;
definition
let R1 being Category;
let R2 being Category;
let R3 being Category;
let C109 , C110 being (Functor of R2 , R3);
assume that
L300: C109 is_naturally_transformable_to C110;
let C111 being (Functor of R1 , R2);
let C112 being (natural_transformation of C109 , C110);
func C112 * C111 -> (natural_transformation of ( C109 * C111 ) , ( C110 * C111 )) equals 
:L301: ( C112 * C111 );
coherence
proof
L302: C109 is_transformable_to C110 by L300 , NATTRA_1:def 7;
L303: ( C112 * C111 ) is (natural_transformation of ( C109 * C111 ) , ( C110 * C111 ))
proof
thus L304: ( C109 * C111 ) is_naturally_transformable_to ( C110 * C111 ) by L300 , L243;
L305: ( C109 * C111 ) is_transformable_to ( C110 * C111 ) by L304 , NATTRA_1:def 7;
let C113 , C114 being (Object of R1);
L306: ( Hom (( ( C109 * C111 ) . C114 ) , ( ( C110 * C111 ) . C114 )) ) <> ( {} ) by L305 , NATTRA_1:def 2;
L307: ( Hom (( ( C109 * C111 ) . C113 ) , ( ( C110 * C111 ) . C113 )) ) <> ( {} ) by L305 , NATTRA_1:def 2;
assume L308: ( Hom (C113 , C114) ) <> ( {} );
L309: ( Hom (( ( C110 * C111 ) . C113 ) , ( ( C110 * C111 ) . C114 )) ) <> ( {} ) by L308 , CAT_1:84;
let C115 being (Morphism of C113 , C114);
L310: ( Hom (( C111 . C113 ) , ( C111 . C114 )) ) <> ( {} ) by L308 , CAT_1:84;
L311: ( Hom (( C109 . ( C111 . C113 ) ) , ( C109 . ( C111 . C114 ) )) ) <> ( {} ) by L310 , CAT_1:84;
L312: ( Hom (( C109 . ( C111 . C113 ) ) , ( C110 . ( C111 . C113 ) )) ) <> ( {} ) by L302 , NATTRA_1:def 2;
L313: ( Hom (( C109 . ( C111 . C114 ) ) , ( C110 . ( C111 . C114 ) )) ) <> ( {} ) by L302 , NATTRA_1:def 2;
L314: ( Hom (( C110 . ( C111 . C113 ) ) , ( C110 . ( C111 . C114 ) )) ) <> ( {} ) by L310 , CAT_1:84;
L315: ( Hom (( ( C109 * C111 ) . C113 ) , ( ( C109 * C111 ) . C114 )) ) <> ( {} ) by L308 , CAT_1:84;
thus L316: ( ( ( C112 * C111 ) . C114 ) * ( ( C109 * C111 ) /. C115 ) ) = ( ( ( C112 * C111 ) . C114 ) (*) (( ( C109 * C111 ) /. C115 ) qua (Morphism of R3)) ) by L315 , L306 , CAT_1:def 13
.= ( ( ( C112 * C111 ) . C114 ) (*) ( C109 /. ( C111 /. C115 ) ) ) by L308 , NATTRA_1:11
.= ( (( C112 . ( C111 . C114 ) ) qua (Morphism of R3)) (*) ( C109 /. ( C111 /. C115 ) ) ) by L302 , L236
.= ( ( C112 . ( C111 . C114 ) ) * ( C109 /. ( C111 /. C115 ) ) ) by L313 , L311 , CAT_1:def 13
.= ( ( C110 /. ( C111 /. C115 ) ) * ( C112 . ( C111 . C113 ) ) ) by L300 , L310 , NATTRA_1:def 8
.= ( ( C110 /. ( C111 /. C115 ) ) (*) (( C112 . ( C111 . C113 ) ) qua (Morphism of R3)) ) by L314 , L312 , CAT_1:def 13
.= ( ( C110 /. ( C111 /. C115 ) ) (*) ( ( C112 * C111 ) . C113 ) ) by L302 , L236
.= ( (( ( C110 * C111 ) /. C115 ) qua (Morphism of R3)) (*) ( ( C112 * C111 ) . C113 ) ) by L308 , NATTRA_1:11
.= ( ( ( C110 * C111 ) /. C115 ) * ( ( C112 * C111 ) . C113 ) ) by L309 , L307 , CAT_1:def 13;
end;
thus L317: thesis by L303;
end;
correctness;
end;
theorem
L319: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for B48 , B49 being (Functor of R2 , R3) holds (B48 is_naturally_transformable_to B49 implies (for B50 being (Functor of R1 , R2) holds (for B51 being (natural_transformation of B48 , B49) holds (for B52 being (Object of R1) holds ( ( B51 * B50 ) . B52 ) = ( B51 . ( B50 . B52 ) )))))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let C116 , C117 being (Functor of R2 , R3);
assume L320: C116 is_naturally_transformable_to C117;
L321: C116 is_transformable_to C117 by L320 , NATTRA_1:def 7;
let C118 being (Functor of R1 , R2);
let C119 being (natural_transformation of C116 , C117);
let C120 being (Object of R1);
thus L322: ( ( C119 * C118 ) . C120 ) = ( ( (C119 qua (transformation of C116 , C117)) * C118 ) . C120 ) by L320 , L301
.= ( C119 . ( C118 . C120 ) ) by L321 , L236;
end;
theorem
L323: (for R1 being Category holds (for R2 being Category holds (for R10 being (Functor of R1 , R2) holds (for R11 being (Functor of R1 , R2) holds (R10 is_naturally_transformable_to R11 implies (for B53 being (Object of R1) holds ( Hom (( R10 . B53 ) , ( R11 . B53 )) ) <> ( {} )))))))
proof
let R1 being Category;
let R2 being Category;
let R10 being (Functor of R1 , R2);
let R11 being (Functor of R1 , R2);
assume L324: R10 is_naturally_transformable_to R11;
let C121 being (Object of R1);
L325: R10 is_transformable_to R11 by L324 , NATTRA_1:def 7;
thus L326: thesis by L325 , NATTRA_1:def 2;
end;
theorem
L327: (for R1 being Category holds (for R2 being Category holds (for R10 being (Functor of R1 , R2) holds (for R11 being (Functor of R1 , R2) holds (R10 is_naturally_transformable_to R11 implies (for B54 , B55 being (natural_transformation of R10 , R11) holds ((for B56 being (Object of R1) holds ( B54 . B56 ) = ( B55 . B56 )) implies B54 = B55)))))))
proof
let R1 being Category;
let R2 being Category;
let R10 being (Functor of R1 , R2);
let R11 being (Functor of R1 , R2);
assume L328: R10 is_naturally_transformable_to R11;
L329: R10 is_transformable_to R11 by L328 , NATTRA_1:def 7;
thus L330: thesis by L329 , NATTRA_1:19;
end;
theorem
L331: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for R10 being (Functor of R1 , R2) holds (for R11 being (Functor of R1 , R2) holds (for R12 being (Functor of R1 , R2) holds (for R13 being (Functor of R2 , R3) holds (for R20 being (natural_transformation of R10 , R11) holds (for R21 being (natural_transformation of R11 , R12) holds ((R10 is_naturally_transformable_to R11 & R11 is_naturally_transformable_to R12) implies ( R13 * ( R21 `*` R20 ) ) = ( ( R13 * R21 ) `*` ( R13 * R20 ) )))))))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let R10 being (Functor of R1 , R2);
let R11 being (Functor of R1 , R2);
let R12 being (Functor of R1 , R2);
let R13 being (Functor of R2 , R3);
let R20 being (natural_transformation of R10 , R11);
let R21 being (natural_transformation of R11 , R12);
assume L332: (R10 is_naturally_transformable_to R11 & R11 is_naturally_transformable_to R12);
L333: (( R13 * R10 ) is_naturally_transformable_to ( R13 * R11 ) & ( R13 * R11 ) is_naturally_transformable_to ( R13 * R12 )) by L332 , L243;
L334:
now
let C122 being (Object of R1);
L335: (( R13 . ( R10 . C122 ) ) = ( ( R13 * R10 ) . C122 ) & ( R13 . ( R11 . C122 ) ) = ( ( R13 * R11 ) . C122 )) by CAT_1:76;
L336: ( R13 . ( R12 . C122 ) ) = ( ( R13 * R12 ) . C122 ) by CAT_1:76;
L337: (( Hom (( R10 . C122 ) , ( R11 . C122 )) ) <> ( {} ) & ( Hom (( R11 . C122 ) , ( R12 . C122 )) ) <> ( {} )) by L332 , L323;
L338: (( R13 /. ( R21 . C122 ) ) = ( ( R13 * R21 ) . C122 ) & ( R13 /. ( R20 . C122 ) ) = ( ( R13 * R20 ) . C122 )) by L332 , L296;
thus L339: ( ( R13 * ( R21 `*` R20 ) ) . C122 ) = ( R13 /. ( ( R21 `*` R20 ) . C122 ) ) by L332 , L296 , NATTRA_1:23
.= ( R13 /. ( ( R21 . C122 ) * ( R20 . C122 ) ) ) by L332 , NATTRA_1:25
.= ( ( R13 /. ( R21 . C122 ) ) * ( R13 /. ( R20 . C122 ) ) ) by L337 , NATTRA_1:13
.= ( ( ( R13 * R21 ) `*` ( R13 * R20 ) ) . C122 ) by L333 , L338 , L335 , L336 , NATTRA_1:25;
end;
thus L340: thesis by L334 , L333 , L327 , NATTRA_1:23;
end;
theorem
L341: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for R9 being (Functor of R1 , R2) holds (for R14 being (Functor of R2 , R3) holds (for R15 being (Functor of R2 , R3) holds (for R16 being (Functor of R2 , R3) holds (for R22 being (natural_transformation of R14 , R15) holds (for R23 being (natural_transformation of R15 , R16) holds ((R14 is_naturally_transformable_to R15 & R15 is_naturally_transformable_to R16) implies ( ( R23 `*` R22 ) * R9 ) = ( ( R23 * R9 ) `*` ( R22 * R9 ) )))))))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let R9 being (Functor of R1 , R2);
let R14 being (Functor of R2 , R3);
let R15 being (Functor of R2 , R3);
let R16 being (Functor of R2 , R3);
let R22 being (natural_transformation of R14 , R15);
let R23 being (natural_transformation of R15 , R16);
assume L342: (R14 is_naturally_transformable_to R15 & R15 is_naturally_transformable_to R16);
L343: (( R14 * R9 ) is_naturally_transformable_to ( R15 * R9 ) & ( R15 * R9 ) is_naturally_transformable_to ( R16 * R9 )) by L342 , L243;
L344:
now
let C123 being (Object of R1);
L345: (( R14 . ( R9 . C123 ) ) = ( ( R14 * R9 ) . C123 ) & ( R15 . ( R9 . C123 ) ) = ( ( R15 * R9 ) . C123 )) by CAT_1:76;
L346: ( R16 . ( R9 . C123 ) ) = ( ( R16 * R9 ) . C123 ) by CAT_1:76;
L347: (( R23 . ( R9 . C123 ) ) = ( ( R23 * R9 ) . C123 ) & ( R22 . ( R9 . C123 ) ) = ( ( R22 * R9 ) . C123 )) by L342 , L319;
thus L348: ( ( ( R23 `*` R22 ) * R9 ) . C123 ) = ( ( R23 `*` R22 ) . ( R9 . C123 ) ) by L342 , L319 , NATTRA_1:23
.= ( ( R23 . ( R9 . C123 ) ) * ( R22 . ( R9 . C123 ) ) ) by L342 , NATTRA_1:25
.= ( ( ( R23 * R9 ) `*` ( R22 * R9 ) ) . C123 ) by L343 , L347 , L345 , L346 , NATTRA_1:25;
end;
thus L349: thesis by L344 , L343 , L327 , NATTRA_1:23;
end;
theorem
L350: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for R4 being Category holds (for R9 being (Functor of R1 , R2) holds (for R13 being (Functor of R2 , R3) holds (for R18 being (Functor of R3 , R4) holds (for R19 being (Functor of R3 , R4) holds (for R24 being (natural_transformation of R18 , R19) holds (R18 is_naturally_transformable_to R19 implies ( ( R24 * R13 ) * R9 ) = ( R24 * ( R13 * R9 ) )))))))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let R4 being Category;
let R9 being (Functor of R1 , R2);
let R13 being (Functor of R2 , R3);
let R18 being (Functor of R3 , R4);
let R19 being (Functor of R3 , R4);
let R24 being (natural_transformation of R18 , R19);
assume L351: R18 is_naturally_transformable_to R19;
L352: ( R18 * ( R13 * R9 ) ) = ( ( R18 * R13 ) * R9 ) by RELAT_1:36;
reconsider D43 = ( R24 * ( R13 * R9 ) ) as (natural_transformation of ( ( R18 * R13 ) * R9 ) , ( ( R19 * R13 ) * R9 )) by L352 , RELAT_1:36;
L353: ( R19 * ( R13 * R9 ) ) = ( ( R19 * R13 ) * R9 ) by RELAT_1:36;
L354:
now
let C124 being (Object of R1);
thus L355: ( ( ( R24 * R13 ) * R9 ) . C124 ) = ( ( R24 * R13 ) . ( R9 . C124 ) ) by L351 , L243 , L319
.= ( R24 . ( R13 . ( R9 . C124 ) ) ) by L351 , L319
.= ( R24 . ( ( R13 * R9 ) . C124 ) ) by CAT_1:76
.= ( D43 . C124 ) by L351 , L352 , L353 , L319;
end;
L356: ( R18 * R13 ) is_naturally_transformable_to ( R19 * R13 ) by L351 , L243;
thus L357: thesis by L356 , L354 , L243 , L327;
end;
theorem
L358: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for R4 being Category holds (for R9 being (Functor of R1 , R2) holds (for R14 being (Functor of R2 , R3) holds (for R15 being (Functor of R2 , R3) holds (for R17 being (Functor of R3 , R4) holds (for R22 being (natural_transformation of R14 , R15) holds (R14 is_naturally_transformable_to R15 implies ( ( R17 * R22 ) * R9 ) = ( R17 * ( R22 * R9 ) )))))))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let R4 being Category;
let R9 being (Functor of R1 , R2);
let R14 being (Functor of R2 , R3);
let R15 being (Functor of R2 , R3);
let R17 being (Functor of R3 , R4);
let R22 being (natural_transformation of R14 , R15);
assume L359: R14 is_naturally_transformable_to R15;
L360: ( R17 * ( R14 * R9 ) ) = ( ( R17 * R14 ) * R9 ) by RELAT_1:36;
reconsider D44 = ( R17 * ( R22 * R9 ) ) as (natural_transformation of ( ( R17 * R14 ) * R9 ) , ( ( R17 * R15 ) * R9 )) by L360 , RELAT_1:36;
L361: ( R17 * ( R15 * R9 ) ) = ( ( R17 * R15 ) * R9 ) by RELAT_1:36;
L362:
now
let C125 being (Object of R1);
L363: (( R14 . ( R9 . C125 ) ) = ( ( R14 * R9 ) . C125 ) & ( R15 . ( R9 . C125 ) ) = ( ( R15 * R9 ) . C125 )) by CAT_1:76;
thus L364: ( ( ( R17 * R22 ) * R9 ) . C125 ) = ( ( R17 * R22 ) . ( R9 . C125 ) ) by L359 , L243 , L319
.= ( R17 /. ( R22 . ( R9 . C125 ) ) ) by L359 , L296
.= ( R17 /. ( ( R22 * R9 ) . C125 ) ) by L359 , L363 , L319
.= ( D44 . C125 ) by L359 , L360 , L361 , L243 , L296;
end;
L365: ( R17 * R14 ) is_naturally_transformable_to ( R17 * R15 ) by L359 , L243;
thus L366: thesis by L365 , L362 , L243 , L327;
end;
theorem
L367: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for R4 being Category holds (for R10 being (Functor of R1 , R2) holds (for R11 being (Functor of R1 , R2) holds (for R13 being (Functor of R2 , R3) holds (for R17 being (Functor of R3 , R4) holds (for R20 being (natural_transformation of R10 , R11) holds (R10 is_naturally_transformable_to R11 implies ( ( R17 * R13 ) * R20 ) = ( R17 * ( R13 * R20 ) )))))))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let R4 being Category;
let R10 being (Functor of R1 , R2);
let R11 being (Functor of R1 , R2);
let R13 being (Functor of R2 , R3);
let R17 being (Functor of R3 , R4);
let R20 being (natural_transformation of R10 , R11);
assume L368: R10 is_naturally_transformable_to R11;
L369: ( R17 * ( R13 * R10 ) ) = ( ( R17 * R13 ) * R10 ) by RELAT_1:36;
reconsider D45 = ( R17 * ( R13 * R20 ) ) as (natural_transformation of ( ( R17 * R13 ) * R10 ) , ( ( R17 * R13 ) * R11 )) by L369 , RELAT_1:36;
L370: ( R17 * ( R13 * R11 ) ) = ( ( R17 * R13 ) * R11 ) by RELAT_1:36;
L371:
now
let C126 being (Object of R1);
L372: (( R13 . ( R10 . C126 ) ) = ( ( R13 * R10 ) . C126 ) & ( R13 . ( R11 . C126 ) ) = ( ( R13 * R11 ) . C126 )) by CAT_1:76;
L373: ( Hom (( R10 . C126 ) , ( R11 . C126 )) ) <> ( {} ) by L368 , L323;
thus L374: ( ( ( R17 * R13 ) * R20 ) . C126 ) = ( ( R17 * R13 ) /. ( R20 . C126 ) ) by L368 , L296
.= ( R17 /. ( R13 /. ( R20 . C126 ) ) ) by L373 , NATTRA_1:11
.= ( R17 /. ( ( R13 * R20 ) . C126 ) ) by L368 , L372 , L296
.= ( D45 . C126 ) by L368 , L369 , L370 , L243 , L296;
end;
thus L375: thesis by L371 , L368 , L243 , L327;
end;
theorem
L376: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for R9 being (Functor of R1 , R2) holds (for R13 being (Functor of R2 , R3) holds ( ( id R13 ) * R9 ) = ( id ( R13 * R9 ) ))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let R9 being (Functor of R1 , R2);
let R13 being (Functor of R2 , R3);
L377:
now
let C127 being (Object of R1);
thus L378: ( ( ( id R13 ) * R9 ) . C127 ) = ( ( id R13 ) . ( R9 . C127 ) ) by L319
.= ( id ( R13 . ( R9 . C127 ) ) ) by NATTRA_1:20
.= ( id ( ( R13 * R9 ) . C127 ) ) by CAT_1:76
.= ( ( id ( R13 * R9 ) ) . C127 ) by NATTRA_1:20;
end;
thus L379: thesis by L377 , L327;
end;
theorem
L380: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for R9 being (Functor of R1 , R2) holds (for R13 being (Functor of R2 , R3) holds ( R13 * ( id R9 ) ) = ( id ( R13 * R9 ) ))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let R9 being (Functor of R1 , R2);
let R13 being (Functor of R2 , R3);
L381:
now
let C128 being (Object of R1);
thus L382: ( ( R13 * ( id R9 ) ) . C128 ) = ( R13 /. ( ( id R9 ) . C128 ) ) by L296
.= ( R13 /. ( id ( R9 . C128 ) ) ) by NATTRA_1:20
.= ( id ( R13 . ( R9 . C128 ) ) ) by NATTRA_1:15
.= ( id ( ( R13 * R9 ) . C128 ) ) by CAT_1:76
.= ( ( id ( R13 * R9 ) ) . C128 ) by NATTRA_1:20;
end;
thus L383: thesis by L381 , L327;
end;
theorem
L384: (for R2 being Category holds (for R3 being Category holds (for R14 being (Functor of R2 , R3) holds (for R15 being (Functor of R2 , R3) holds (for R22 being (natural_transformation of R14 , R15) holds (R14 is_naturally_transformable_to R15 implies ( R22 * ( id R2 ) ) = R22))))))
proof
let R2 being Category;
let R3 being Category;
let R14 being (Functor of R2 , R3);
let R15 being (Functor of R2 , R3);
let R22 being (natural_transformation of R14 , R15);
assume L385: R14 is_naturally_transformable_to R15;
L386: ( R14 * ( id R2 ) ) = R14 by FUNCT_2:17;
reconsider D46 = ( R22 * ( id R2 ) ) as (natural_transformation of R14 , R15) by L386 , FUNCT_2:17;
L387: ( R15 * ( id R2 ) ) = R15 by FUNCT_2:17;
L388:
now
let C129 being (Object of R2);
thus L389: ( D46 . C129 ) = ( R22 . ( ( id R2 ) . C129 ) ) by L385 , L386 , L387 , L319
.= ( R22 . C129 ) by CAT_1:79;
end;
thus L390: thesis by L388 , L385 , L327;
end;
theorem
L391: (for R1 being Category holds (for R2 being Category holds (for R10 being (Functor of R1 , R2) holds (for R11 being (Functor of R1 , R2) holds (for R20 being (natural_transformation of R10 , R11) holds (R10 is_naturally_transformable_to R11 implies ( ( id R2 ) * R20 ) = R20))))))
proof
let R1 being Category;
let R2 being Category;
let R10 being (Functor of R1 , R2);
let R11 being (Functor of R1 , R2);
let R20 being (natural_transformation of R10 , R11);
assume L392: R10 is_naturally_transformable_to R11;
L393: ( ( id R2 ) * R10 ) = R10 by FUNCT_2:17;
reconsider D47 = ( ( id R2 ) * R20 ) as (natural_transformation of R10 , R11) by L393 , FUNCT_2:17;
L394: ( ( id R2 ) * R11 ) = R11 by FUNCT_2:17;
L395:
now
let C130 being (Object of R1);
L396: ( Hom (( R10 . C130 ) , ( R11 . C130 )) ) <> ( {} ) by L392 , L323;
thus L397: ( D47 . C130 ) = ( ( id R2 ) /. ( R20 . C130 ) ) by L392 , L393 , L394 , L296
.= ( ( id R2 ) . (( R20 . C130 ) qua (Morphism of R2)) ) by L396 , CAT_3:def 10
.= ( R20 . C130 ) by FUNCT_1:18;
end;
thus L398: thesis by L395 , L392 , L327;
end;
definition
let R1 being Category;
let R2 being Category;
let R3 being Category;
let R10 being (Functor of R1 , R2);
let R11 being (Functor of R1 , R2);
let R14 being (Functor of R2 , R3);
let R15 being (Functor of R2 , R3);
let R20 being (natural_transformation of R10 , R11);
let R22 being (natural_transformation of R14 , R15);
func R22 (#) R20 -> (natural_transformation of ( R14 * R10 ) , ( R15 * R11 )) equals 
( ( R22 * R11 ) `*` ( R14 * R20 ) );
correctness;
end;
theorem
L400: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for R10 being (Functor of R1 , R2) holds (for R11 being (Functor of R1 , R2) holds (for R14 being (Functor of R2 , R3) holds (for R15 being (Functor of R2 , R3) holds (for R20 being (natural_transformation of R10 , R11) holds (for R22 being (natural_transformation of R14 , R15) holds ((R10 is_naturally_transformable_to R11 & R14 is_naturally_transformable_to R15) implies ( R22 (#) R20 ) = ( ( R15 * R20 ) `*` ( R22 * R10 ) )))))))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let R10 being (Functor of R1 , R2);
let R11 being (Functor of R1 , R2);
let R14 being (Functor of R2 , R3);
let R15 being (Functor of R2 , R3);
let R20 being (natural_transformation of R10 , R11);
let R22 being (natural_transformation of R14 , R15);
assume that
L401: R10 is_naturally_transformable_to R11
and
L402: R14 is_naturally_transformable_to R15;
L403: (( R14 * R10 ) is_naturally_transformable_to ( R14 * R11 ) & ( R14 * R11 ) is_naturally_transformable_to ( R15 * R11 )) by L401 , L402 , L243;
L404: (( R15 * R10 ) is_naturally_transformable_to ( R15 * R11 ) & ( R14 * R10 ) is_naturally_transformable_to ( R15 * R10 )) by L401 , L402 , L243;
L405:
now
let C131 being (Object of R1);
L406: (( ( R14 * R10 ) . C131 ) = ( R14 . ( R10 . C131 ) ) & ( ( R14 * R11 ) . C131 ) = ( R14 . ( R11 . C131 ) )) by CAT_1:76;
L407: ( ( R15 * R11 ) . C131 ) = ( R15 . ( R11 . C131 ) ) by CAT_1:76;
L408: (( ( R15 * R20 ) . C131 ) = ( R15 /. ( R20 . C131 ) ) & ( ( R14 * R10 ) . C131 ) = ( R14 . ( R10 . C131 ) )) by L401 , L296 , CAT_1:76;
L409: (( Hom (( R10 . C131 ) , ( R11 . C131 )) ) <> ( {} ) & ( ( R22 * R10 ) . C131 ) = ( R22 . ( R10 . C131 ) )) by L401 , L402 , L319 , L323;
L410: (( ( R15 * R10 ) . C131 ) = ( R15 . ( R10 . C131 ) ) & ( ( R15 * R11 ) . C131 ) = ( R15 . ( R11 . C131 ) )) by CAT_1:76;
L411: (( ( R22 * R11 ) . C131 ) = ( R22 . ( R11 . C131 ) ) & ( ( R14 * R20 ) . C131 ) = ( R14 /. ( R20 . C131 ) )) by L401 , L402 , L296 , L319;
thus L412: ( ( ( R22 * R11 ) `*` ( R14 * R20 ) ) . C131 ) = ( ( R22 . ( R11 . C131 ) ) * ( R14 /. ( R20 . C131 ) ) ) by L411 , L403 , L406 , L407 , NATTRA_1:25
.= ( ( ( R15 * R20 ) . C131 ) * ( ( R22 * R10 ) . C131 ) ) by L402 , L409 , L408 , L410 , NATTRA_1:def 8
.= ( ( ( R15 * R20 ) `*` ( R22 * R10 ) ) . C131 ) by L404 , NATTRA_1:25;
end;
thus L413: thesis by L405 , L403 , L327 , NATTRA_1:23;
end;
theorem
L414: (for R1 being Category holds (for R2 being Category holds (for R10 being (Functor of R1 , R2) holds (for R11 being (Functor of R1 , R2) holds (for R20 being (natural_transformation of R10 , R11) holds (R10 is_naturally_transformable_to R11 implies ( ( id ( id R2 ) ) (#) R20 ) = R20))))))
proof
let R1 being Category;
let R2 being Category;
let R10 being (Functor of R1 , R2);
let R11 being (Functor of R1 , R2);
let R20 being (natural_transformation of R10 , R11);
assume L415: R10 is_naturally_transformable_to R11;
L416: ( ( id R2 ) * R10 ) is_naturally_transformable_to ( ( id R2 ) * R11 ) by L415 , L243;
thus L417: ( ( id ( id R2 ) ) (#) R20 ) = ( ( id ( ( id R2 ) * R11 ) ) `*` ( ( id R2 ) * R20 ) ) by L376
.= ( ( id R2 ) * R20 ) by L416 , NATTRA_1:24
.= R20 by L415 , L391;
end;
theorem
L418: (for R2 being Category holds (for R3 being Category holds (for R14 being (Functor of R2 , R3) holds (for R15 being (Functor of R2 , R3) holds (for R22 being (natural_transformation of R14 , R15) holds (R14 is_naturally_transformable_to R15 implies ( R22 (#) ( id ( id R2 ) ) ) = R22))))))
proof
let R2 being Category;
let R3 being Category;
let R14 being (Functor of R2 , R3);
let R15 being (Functor of R2 , R3);
let R22 being (natural_transformation of R14 , R15);
assume L419: R14 is_naturally_transformable_to R15;
L420: ( R14 * ( id R2 ) ) is_naturally_transformable_to ( R15 * ( id R2 ) ) by L419 , L243;
thus L421: ( R22 (#) ( id ( id R2 ) ) ) = ( ( R22 * ( id R2 ) ) `*` ( id ( R14 * ( id R2 ) ) ) ) by L380
.= ( R22 * ( id R2 ) ) by L420 , NATTRA_1:24
.= R22 by L419 , L384;
end;
theorem
L422: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for R4 being Category holds (for R10 being (Functor of R1 , R2) holds (for R11 being (Functor of R1 , R2) holds (for R14 being (Functor of R2 , R3) holds (for R15 being (Functor of R2 , R3) holds (for R18 being (Functor of R3 , R4) holds (for R19 being (Functor of R3 , R4) holds (for R20 being (natural_transformation of R10 , R11) holds (for R22 being (natural_transformation of R14 , R15) holds (for R24 being (natural_transformation of R18 , R19) holds ((R10 is_naturally_transformable_to R11 & R14 is_naturally_transformable_to R15 & R18 is_naturally_transformable_to R19) implies ( R24 (#) ( R22 (#) R20 ) ) = ( ( R24 (#) R22 ) (#) R20 )))))))))))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let R4 being Category;
let R10 being (Functor of R1 , R2);
let R11 being (Functor of R1 , R2);
let R14 being (Functor of R2 , R3);
let R15 being (Functor of R2 , R3);
let R18 being (Functor of R3 , R4);
let R19 being (Functor of R3 , R4);
let R20 being (natural_transformation of R10 , R11);
let R22 being (natural_transformation of R14 , R15);
let R24 being (natural_transformation of R18 , R19);
assume that
L423: R10 is_naturally_transformable_to R11
and
L424: R14 is_naturally_transformable_to R15
and
L425: R18 is_naturally_transformable_to R19;
L426: (( R24 * ( R15 * R11 ) ) = ( ( R24 * R15 ) * R11 ) & ( R18 * ( R22 * R11 ) ) = ( ( R18 * R22 ) * R11 )) by L424 , L425 , L350 , L358;
L427: ( R18 * R14 ) is_naturally_transformable_to ( R18 * R15 ) by L424 , L243;
L428: ( ( R18 * R14 ) * R11 ) is_naturally_transformable_to ( ( R18 * R15 ) * R11 ) by L427 , L243;
L429: (( R18 * ( R14 * R20 ) ) = ( ( R18 * R14 ) * R20 ) & ( ( R18 * R14 ) * R10 ) is_naturally_transformable_to ( ( R18 * R14 ) * R11 )) by L423 , L243 , L367;
L430: (( ( R18 * R14 ) * R10 ) = ( R18 * ( R14 * R10 ) ) & ( ( R18 * R14 ) * R11 ) = ( R18 * ( R14 * R11 ) )) by RELAT_1:36;
L431: ( R18 * R15 ) is_naturally_transformable_to ( R19 * R15 ) by L425 , L243;
L432: ( ( R18 * R15 ) * R11 ) is_naturally_transformable_to ( ( R19 * R15 ) * R11 ) by L431 , L243;
L433: (( ( R18 * R15 ) * R11 ) = ( R18 * ( R15 * R11 ) ) & ( ( R19 * R15 ) * R11 ) = ( R19 * ( R15 * R11 ) )) by RELAT_1:36;
L434: (( R14 * R11 ) is_naturally_transformable_to ( R15 * R11 ) & ( R14 * R10 ) is_naturally_transformable_to ( R14 * R11 )) by L423 , L424 , L243;
thus L435: ( R24 (#) ( R22 (#) R20 ) ) = ( ( R24 * ( R15 * R11 ) ) `*` ( ( R18 * ( R22 * R11 ) ) `*` ( R18 * ( R14 * R20 ) ) ) ) by L434 , L331
.= ( ( ( ( R24 * R15 ) * R11 ) `*` ( ( R18 * R22 ) * R11 ) ) `*` ( ( R18 * R14 ) * R20 ) ) by L430 , L433 , L426 , L429 , L428 , L432 , NATTRA_1:26
.= ( ( R24 (#) R22 ) (#) R20 ) by L427 , L431 , L341;
end;
theorem
L436: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for R9 being (Functor of R1 , R2) holds (for R14 being (Functor of R2 , R3) holds (for R15 being (Functor of R2 , R3) holds (for R22 being (natural_transformation of R14 , R15) holds (R14 is_naturally_transformable_to R15 implies ( R22 * R9 ) = ( R22 (#) ( id R9 ) )))))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let R9 being (Functor of R1 , R2);
let R14 being (Functor of R2 , R3);
let R15 being (Functor of R2 , R3);
let R22 being (natural_transformation of R14 , R15);
assume L437: R14 is_naturally_transformable_to R15;
L438: ( R14 * R9 ) is_naturally_transformable_to ( R15 * R9 ) by L437 , L243;
thus L439: ( R22 * R9 ) = ( ( R22 * R9 ) `*` ( id ( R14 * R9 ) ) ) by L438 , NATTRA_1:24
.= ( R22 (#) ( id R9 ) ) by L380;
end;
theorem
L440: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for R10 being (Functor of R1 , R2) holds (for R11 being (Functor of R1 , R2) holds (for R13 being (Functor of R2 , R3) holds (for R20 being (natural_transformation of R10 , R11) holds (R10 is_naturally_transformable_to R11 implies ( R13 * R20 ) = ( ( id R13 ) (#) R20 )))))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let R10 being (Functor of R1 , R2);
let R11 being (Functor of R1 , R2);
let R13 being (Functor of R2 , R3);
let R20 being (natural_transformation of R10 , R11);
assume L441: R10 is_naturally_transformable_to R11;
L442: ( R13 * R10 ) is_naturally_transformable_to ( R13 * R11 ) by L441 , L243;
thus L443: ( R13 * R20 ) = ( ( id ( R13 * R11 ) ) `*` ( R13 * R20 ) ) by L442 , NATTRA_1:24
.= ( ( id R13 ) (#) R20 ) by L376;
end;
theorem
L444: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for R10 being (Functor of R1 , R2) holds (for R11 being (Functor of R1 , R2) holds (for R12 being (Functor of R1 , R2) holds (for R14 being (Functor of R2 , R3) holds (for R15 being (Functor of R2 , R3) holds (for R16 being (Functor of R2 , R3) holds (for R20 being (natural_transformation of R10 , R11) holds (for R21 being (natural_transformation of R11 , R12) holds (for R22 being (natural_transformation of R14 , R15) holds (for R23 being (natural_transformation of R15 , R16) holds ((R10 is_naturally_transformable_to R11 & R11 is_naturally_transformable_to R12 & R14 is_naturally_transformable_to R15 & R15 is_naturally_transformable_to R16) implies ( ( R23 `*` R22 ) (#) ( R21 `*` R20 ) ) = ( ( R23 (#) R21 ) `*` ( R22 (#) R20 ) )))))))))))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let R10 being (Functor of R1 , R2);
let R11 being (Functor of R1 , R2);
let R12 being (Functor of R1 , R2);
let R14 being (Functor of R2 , R3);
let R15 being (Functor of R2 , R3);
let R16 being (Functor of R2 , R3);
let R20 being (natural_transformation of R10 , R11);
let R21 being (natural_transformation of R11 , R12);
let R22 being (natural_transformation of R14 , R15);
let R23 being (natural_transformation of R15 , R16);
assume that
L445: R10 is_naturally_transformable_to R11
and
L446: R11 is_naturally_transformable_to R12
and
L447: R14 is_naturally_transformable_to R15
and
L448: R15 is_naturally_transformable_to R16;
L449: (( R23 (#) R21 ) = ( ( R16 * R21 ) `*` ( R23 * R11 ) ) & ( R22 (#) R20 ) = ( ( R15 * R20 ) `*` ( R22 * R10 ) )) by L445 , L446 , L447 , L448 , L400;
L450: ( R14 * R10 ) is_naturally_transformable_to ( R15 * R10 ) by L447 , L243;
L451: ( R15 * R10 ) is_naturally_transformable_to ( R15 * R11 ) by L445 , L243;
L452: ( R14 * R10 ) is_naturally_transformable_to ( R15 * R11 ) by L451 , L450 , NATTRA_1:23;
L453: ( R15 * R11 ) is_naturally_transformable_to ( R16 * R11 ) by L448 , L243;
L454: R14 is_naturally_transformable_to R16 by L447 , L448 , NATTRA_1:23;
L455: ( R14 * R10 ) is_naturally_transformable_to ( R16 * R10 ) by L454 , L243;
L456: ( R16 * R10 ) is_naturally_transformable_to ( R16 * R11 ) by L445 , L243;
L457: ( R15 * R10 ) is_naturally_transformable_to ( R16 * R10 ) by L448 , L243;
L458: ( R16 * R11 ) is_naturally_transformable_to ( R16 * R12 ) by L446 , L243;
L459: R10 is_naturally_transformable_to R12 by L445 , L446 , NATTRA_1:23;
thus L460: ( ( R23 `*` R22 ) (#) ( R21 `*` R20 ) ) = ( ( R16 * ( R21 `*` R20 ) ) `*` ( ( R23 `*` R22 ) * R10 ) ) by L459 , L454 , L400
.= ( ( ( R16 * R21 ) `*` ( R16 * R20 ) ) `*` ( ( R23 `*` R22 ) * R10 ) ) by L445 , L446 , L331
.= ( ( ( R16 * R21 ) `*` ( R16 * R20 ) ) `*` ( ( R23 * R10 ) `*` ( R22 * R10 ) ) ) by L447 , L448 , L341
.= ( ( R16 * R21 ) `*` ( ( R16 * R20 ) `*` ( ( R23 * R10 ) `*` ( R22 * R10 ) ) ) ) by L458 , L456 , L455 , NATTRA_1:26
.= ( ( R16 * R21 ) `*` ( ( ( R16 * R20 ) `*` ( R23 * R10 ) ) `*` ( R22 * R10 ) ) ) by L456 , L450 , L457 , NATTRA_1:26
.= ( ( R16 * R21 ) `*` ( ( R23 (#) R20 ) `*` ( R22 * R10 ) ) ) by L445 , L448 , L400
.= ( ( R16 * R21 ) `*` ( ( R23 * R11 ) `*` ( ( R15 * R20 ) `*` ( R22 * R10 ) ) ) ) by L450 , L453 , L451 , NATTRA_1:26
.= ( ( R23 (#) R21 ) `*` ( R22 (#) R20 ) ) by L458 , L453 , L452 , L449 , NATTRA_1:26;
end;
theorem
L461: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds (for R4 being Category holds (for B57 being (Functor of R1 , R2) holds (for B58 being (Functor of R3 , R4) holds (for B59 , B60 being (Functor of R2 , R3) holds (B59 ~= B60 implies (( B58 * B59 ) ~= ( B58 * B60 ) & ( B59 * B57 ) ~= ( B60 * B57 ))))))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
let R4 being Category;
let C132 being (Functor of R1 , R2);
let C133 being (Functor of R3 , R4);
let C134 , C135 being (Functor of R2 , R3);
assume L462: C134 is_naturally_transformable_to C135;
given C136 being (natural_transformation of C134 , C135) such that
L463: C136 is  invertible;

thus L464: ( C133 * C134 ) ~= ( C133 * C135 )
proof
thus L465: ( C133 * C134 ) is_naturally_transformable_to ( C133 * C135 ) by L462 , L243;
take ( C133 * C136 );
let C137 being (Object of R2);
L466: ( C136 . C137 ) is  invertible by L463 , NATTRA_1:def 10;
L467: (( C133 . ( C134 . C137 ) ) = ( ( C133 * C134 ) . C137 ) & ( C133 . ( C135 . C137 ) ) = ( ( C133 * C135 ) . C137 )) by CAT_1:76;
L468: ( ( C133 * C136 ) . C137 ) = ( C133 /. ( C136 . C137 ) ) by L462 , L296;
thus L469: ( ( C133 * C136 ) . C137 ) is  invertible by L468 , L466 , L1 , L467;
end;

thus L470: ( C134 * C132 ) is_naturally_transformable_to ( C135 * C132 ) by L462 , L243;
take ( C136 * C132 );
let C138 being (Object of R1);
L471: (( C134 . ( C132 . C138 ) ) = ( ( C134 * C132 ) . C138 ) & ( C135 . ( C132 . C138 ) ) = ( ( C135 * C132 ) . C138 )) by CAT_1:76;
L472: ( ( C136 * C132 ) . C138 ) = ( C136 . ( C132 . C138 ) ) by L462 , L319;
thus L473: ( ( C136 * C132 ) . C138 ) is  invertible by L472 , L463 , L471 , NATTRA_1:def 10;
end;
theorem
L474: (for R1 being Category holds (for R2 being Category holds (for B61 being (Functor of R1 , R2) holds (for B62 being (Functor of R2 , R1) holds (for B63 being (Functor of R1 , R1) holds (B63 ~= ( id R1 ) implies (( B61 * B63 ) ~= B61 & ( B63 * B62 ) ~= B62)))))))
proof
let R1 being Category;
let R2 being Category;
let C139 being (Functor of R1 , R2);
let C140 being (Functor of R2 , R1);
let C141 being (Functor of R1 , R1);
L475: (( C139 * ( id R1 ) ) = C139 & ( ( id R1 ) * C140 ) = C140) by FUNCT_2:17;
thus L476: thesis by L475 , L461;
end;
definition
let C142 , C143 being Category;
pred C142 is_equivalent_with C143
means
:L477: (ex B64 being (Functor of C142 , C143) st (ex B65 being (Functor of C143 , C142) st (( B65 * B64 ) ~= ( id C142 ) & ( B64 * B65 ) ~= ( id C143 ))))
;reflexivity
proof
let R1 being Category;
take ( id R1 );
take ( id R1 );
thus L478: thesis by FUNCT_2:17;
end;
symmetry
;
end;
notation
let C144 , C145 being Category;
synonym C144 , C145 are_equivalent  for C144 is_equivalent_with C145;
end;
theorem
L481: (for R1 being Category holds (for R2 being Category holds (R1 ~= R2 implies R1 is_equivalent_with R2)))
proof
let R1 being Category;
let R2 being Category;
given C146 being (Functor of R1 , R2) such that
L482: C146 is  isomorphic;

take C146;
take ( C146 " );
thus L483: thesis by L482 , L109;
end;
theorem
L484: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds ((R1 , R2 are_equivalent  & R2 , R3 are_equivalent ) implies R1 , R3 are_equivalent ))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
given C147 being (Functor of R1 , R2) , C148 being (Functor of R2 , R1) such that
L485: ( C148 * C147 ) ~= ( id R1 )
and
L486: ( C147 * C148 ) ~= ( id R2 );

given C149 being (Functor of R2 , R3) , C150 being (Functor of R3 , R2) such that
L487: ( C150 * C149 ) ~= ( id R2 )
and
L488: ( C149 * C150 ) ~= ( id R3 );

take ( C149 * C147 );
take ( C148 * C150 );
L489: ( ( C148 * C150 ) * C149 ) = ( C148 * ( C150 * C149 ) ) by RELAT_1:36;
L490: ( ( C148 * C150 ) * C149 ) ~= C148 by L489 , L487 , L474;
L491: ( ( C148 * C150 ) * ( C149 * C147 ) ) = ( ( ( C148 * C150 ) * C149 ) * C147 ) by RELAT_1:36;
L492: ( ( C148 * C150 ) * ( C149 * C147 ) ) ~= ( C148 * C147 ) by L491 , L490 , L461;
thus L493: ( ( C148 * C150 ) * ( C149 * C147 ) ) ~= ( id R1 ) by L492 , L485 , NATTRA_1:29;
L494: ( ( C149 * C147 ) * C148 ) = ( C149 * ( C147 * C148 ) ) by RELAT_1:36;
L495: ( ( C149 * C147 ) * C148 ) ~= C149 by L494 , L486 , L474;
L496: ( ( C149 * C147 ) * ( C148 * C150 ) ) = ( ( ( C149 * C147 ) * C148 ) * C150 ) by RELAT_1:36;
L497: ( ( C149 * C147 ) * ( C148 * C150 ) ) ~= ( C149 * C150 ) by L496 , L495 , L461;
thus L498: thesis by L497 , L488 , NATTRA_1:29;
end;
definition
let R1 being Category;
let R2 being Category;
assume L499: R1 , R2 are_equivalent ;
mode Equivalence of R1 , R2
 -> (Functor of R1 , R2)
means :L500: (ex B66 being (Functor of R2 , R1) st (( B66 * it ) ~= ( id R1 ) & ( it * B66 ) ~= ( id R2 )));
existence by L499 , L477;
end;
theorem
L502: (for R1 being Category holds ( id R1 ) is (Equivalence of R1 , R1))
proof
let R1 being Category;
thus L503: R1 is_equivalent_with R1;
take ( id R1 );
thus L504: thesis by FUNCT_2:17;
end;
theorem
L505: (for R1 being Category holds (for R2 being Category holds (for R3 being Category holds ((R1 , R2 are_equivalent  & R2 , R3 are_equivalent ) implies (for B67 being (Equivalence of R1 , R2) holds (for B68 being (Equivalence of R2 , R3) holds ( B68 * B67 ) is (Equivalence of R1 , R3)))))))
proof
let R1 being Category;
let R2 being Category;
let R3 being Category;
assume that
L506: R1 , R2 are_equivalent 
and
L507: R2 , R3 are_equivalent ;
let C151 being (Equivalence of R1 , R2);
let C152 being (Equivalence of R2 , R3);
thus L508: R1 , R3 are_equivalent  by L506 , L507 , L484;
consider C153 being (Functor of R2 , R1) such that L509: ( C153 * C151 ) ~= ( id R1 ) and L510: ( C151 * C153 ) ~= ( id R2 ) by L506 , L500;
L511: ( ( C152 * C151 ) * C153 ) = ( C152 * ( C151 * C153 ) ) by RELAT_1:36;
L512: ( ( C152 * C151 ) * C153 ) ~= C152 by L511 , L510 , L474;
consider C154 being (Functor of R3 , R2) such that L513: ( C154 * C152 ) ~= ( id R2 ) and L514: ( C152 * C154 ) ~= ( id R3 ) by L507 , L500;
take ( C153 * C154 );
L515: ( ( C153 * C154 ) * C152 ) = ( C153 * ( C154 * C152 ) ) by RELAT_1:36;
L516: ( ( C153 * C154 ) * C152 ) ~= C153 by L515 , L513 , L474;
L517: ( ( C153 * C154 ) * ( C152 * C151 ) ) = ( ( ( C153 * C154 ) * C152 ) * C151 ) by RELAT_1:36;
L518: ( ( C153 * C154 ) * ( C152 * C151 ) ) ~= ( C153 * C151 ) by L517 , L516 , L461;
thus L519: ( ( C153 * C154 ) * ( C152 * C151 ) ) ~= ( id R1 ) by L518 , L509 , NATTRA_1:29;
L520: ( ( C152 * C151 ) * ( C153 * C154 ) ) = ( ( ( C152 * C151 ) * C153 ) * C154 ) by RELAT_1:36;
L521: ( ( C152 * C151 ) * ( C153 * C154 ) ) ~= ( C152 * C154 ) by L520 , L512 , L461;
thus L522: thesis by L521 , L514 , NATTRA_1:29;
end;
theorem
L523: (for R1 being Category holds (for R2 being Category holds (R1 , R2 are_equivalent  implies (for B69 being (Equivalence of R1 , R2) holds (ex B70 being (Equivalence of R2 , R1) st (( B70 * B69 ) ~= ( id R1 ) & ( B69 * B70 ) ~= ( id R2 )))))))
proof
let R1 being Category;
let R2 being Category;
assume L524: R1 , R2 are_equivalent ;
let C155 being (Equivalence of R1 , R2);
consider C156 being (Functor of R2 , R1) such that L525: (( C156 * C155 ) ~= ( id R1 ) & ( C155 * C156 ) ~= ( id R2 )) by L524 , L500;
L526: C156 is (Equivalence of R2 , R1)
proof
thus L527: R2 , R1 are_equivalent  by L524;
take C155;
thus L528: thesis by L525;
end;
thus L529: thesis by L526 , L525;
end;
theorem
L530: (for R1 being Category holds (for R2 being Category holds (for B71 being (Functor of R1 , R2) holds (for B72 being (Functor of R2 , R1) holds (( B72 * B71 ) ~= ( id R1 ) implies B71 is  faithful)))))
proof
let R1 being Category;
let R2 being Category;
let C157 being (Functor of R1 , R2);
let C158 being (Functor of R2 , R1);
assume L531: ( C158 * C157 ) ~= ( id R1 );
L532: ( id R1 ) ~= ( C158 * C157 ) by L531 , NATTRA_1:28;
L533: ( id R1 ) is_naturally_transformable_to ( C158 * C157 ) by L532 , NATTRA_1:def 11;
consider C159 being (natural_transformation of ( id R1 ) , ( C158 * C157 )) such that L534: C159 is  invertible by L532 , NATTRA_1:def 11;
thus L535: C157 is  faithful
proof
let C160 , C161 being (Object of R1);
assume L536: ( Hom (C160 , C161) ) <> ( {} );
L537: ( Hom (( ( id R1 ) . C160 ) , ( ( id R1 ) . C161 )) ) <> ( {} ) by L536 , CAT_1:84;
let C162 , C163 being (Morphism of C160 , C161);
assume L538: ( C157 . (C162 qua (Morphism of R1)) ) = ( C157 . (C163 qua (Morphism of R1)) );
L539: ( ( C158 * C157 ) /. C162 ) = ( ( C158 * C157 ) . (C162 qua (Morphism of R1)) ) by L536 , CAT_3:def 10
.= ( C158 . ( C157 . (C163 qua (Morphism of R1)) ) ) by L538 , FUNCT_2:15
.= ( ( C158 * C157 ) . (C163 qua (Morphism of R1)) ) by FUNCT_2:15
.= ( ( C158 * C157 ) /. C163 ) by L536 , CAT_3:def 10;
L540: ( ( C159 . C161 ) * ( ( id R1 ) /. C162 ) ) = ( ( ( C158 * C157 ) /. C162 ) * ( C159 . C160 ) ) by L533 , L536 , NATTRA_1:def 8
.= ( ( C159 . C161 ) * ( ( id R1 ) /. C163 ) ) by L533 , L536 , L539 , NATTRA_1:def 8;
L541: ( Hom (( ( id R1 ) . C161 ) , ( ( C158 * C157 ) . C161 )) ) <> ( {} ) by L533 , L323;
L542: ( C159 . C161 ) is  invertible by L534 , NATTRA_1:def 10;
L543: ( C159 . C161 ) is  monic by L542 , CAT_1:43;
thus L544: C162 = ( ( id R1 ) /. C162 ) by L536 , NATTRA_1:16
.= ( ( id R1 ) /. C163 ) by L537 , L541 , L543 , L540 , CAT_1:31
.= C163 by L536 , NATTRA_1:16;
end;

end;
theorem
L536: (for R1 being Category holds (for R2 being Category holds (R1 , R2 are_equivalent  implies (for B73 being (Equivalence of R1 , R2) holds (B73 is  full & B73 is  faithful & (for B74 being (Object of R2) holds (ex B75 being (Object of R1) st B74 , ( B73 . B75 ) are_isomorphic )))))))
proof
let R1 being Category;
let R2 being Category;
assume L537: R1 , R2 are_equivalent ;
let C164 being (Equivalence of R1 , R2);
consider C165 being (Equivalence of R2 , R1) such that L538: ( C165 * C164 ) ~= ( id R1 ) and L539: ( C164 * C165 ) ~= ( id R2 ) by L537 , L523;
L540: ( id R1 ) ~= ( C165 * C164 ) by L538 , NATTRA_1:28;
L541: ( id R1 ) is_naturally_transformable_to ( C165 * C164 ) by L540 , NATTRA_1:def 11;
consider C166 being (natural_transformation of ( id R1 ) , ( C165 * C164 )) such that L542: C166 is  invertible by L540 , NATTRA_1:def 11;
L543: C165 is  faithful by L539 , L530;
thus L544: C164 is  full
proof
let C167 , C168 being (Object of R1);
assume that
L545: ( Hom (( C164 . C167 ) , ( C164 . C168 )) ) <> ( {} );
reconsider D48 = ( C166 . C168 ) as (Morphism of C168 , ( ( C165 * C164 ) . C168 )) by CAT_1:79;
reconsider D49 = ( C166 . C167 ) as (Morphism of C167 , ( ( C165 * C164 ) . C167 )) by CAT_1:79;
L546: ( C166 . C168 ) is  invertible by L542 , NATTRA_1:def 10;
L547: ( Hom (( ( id R1 ) . C168 ) , ( ( C165 * C164 ) . C168 )) ) <> ( {} ) by L541 , L323;
let C169 being (Morphism of ( C164 . C167 ) , ( C164 . C168 ));
L548: ( ( C165 * C164 ) . C167 ) = ( C165 . ( C164 . C167 ) ) by CAT_1:76;
reconsider D50 = ( C165 /. C169 ) as (Morphism of ( ( C165 * C164 ) . C167 ) , ( ( C165 * C164 ) . C168 )) by L548 , CAT_1:76;
L549: ( Hom (( ( id R1 ) . C167 ) , ( ( C165 * C164 ) . C167 )) ) <> ( {} ) by L541 , L323;
L550: ( ( C165 * C164 ) . C168 ) = ( C165 . ( C164 . C168 ) ) by CAT_1:76;
L551: ( Hom (( ( C165 * C164 ) . C167 ) , ( ( C165 * C164 ) . C168 )) ) <> ( {} ) by L550 , L545 , L548 , CAT_1:84;
L552: ( Hom (( ( id R1 ) . C167 ) , ( ( C165 * C164 ) . C168 )) ) <> ( {} ) by L551 , L549 , CAT_1:24;
L553: ( C166 . C167 ) is  invertible by L542 , NATTRA_1:def 10;
L554: ( C166 . C167 ) is  epi by L553 , CAT_1:43;
L555: ( C165 * C164 ) is_naturally_transformable_to ( id R1 ) by L538 , NATTRA_1:def 11;
L556: ( Hom (( ( C165 * C164 ) . C168 ) , ( ( id R1 ) . C168 )) ) <> ( {} ) by L555 , L323;
L557: (( ( id R1 ) . C167 ) = C167 & ( ( id R1 ) . C168 ) = C168) by CAT_1:79;
thus L558: ( Hom (C167 , C168) ) <> ( {} ) by L557 , L556 , L552 , CAT_1:24;
take D51 = ( ( D48 " ) * ( D50 * D49 ) );
L559: ( ( id R1 ) /. D51 ) = ( ( ( C166 . C168 ) " ) * ( D50 * ( C166 . C167 ) ) ) by L557 , L558 , NATTRA_1:16;
L560: ( D50 * ( C166 . C167 ) ) = ( ( id ( ( C165 * C164 ) . C168 ) ) * ( D50 * ( C166 . C167 ) ) ) by L552 , CAT_1:28
.= ( ( ( C166 . C168 ) * ( ( C166 . C168 ) " ) ) * ( D50 * ( C166 . C167 ) ) ) by L546 , CAT_1:def 17
.= ( ( C166 . C168 ) * ( ( id R1 ) /. D51 ) ) by L556 , L552 , L547 , L559 , CAT_1:25
.= ( ( ( C165 * C164 ) /. D51 ) * ( C166 . C167 ) ) by L541 , L558 , NATTRA_1:def 8;
L561: D50 = ( ( C165 * C164 ) /. D51 ) by L560 , L549 , L551 , L554 , CAT_1:36;
L562: ( C165 . (C169 qua (Morphism of R2)) ) = ( C165 /. C169 ) by L545 , CAT_3:def 10
.= ( ( C165 * C164 ) . (D51 qua (Morphism of R1)) ) by L558 , L561 , CAT_3:def 10
.= ( C165 . ( C164 . (D51 qua (Morphism of R1)) ) ) by FUNCT_2:15
.= ( C165 . (( C164 /. D51 ) qua (Morphism of R2)) ) by L558 , CAT_3:def 10;
thus L563: C169 = ( C164 /. D51 ) by L562 , L543 , L545 , CAT_1:def 27
.= ( C164 . (D51 qua (Morphism of R1)) ) by L558 , CAT_3:def 10;
end;

thus L564: C164 is  faithful by L538 , L530;
let C170 being (Object of R2);
take ( C165 . C170 );
L565: (( C164 . ( C165 . C170 ) ) = ( ( C164 * C165 ) . C170 ) & ( ( id R2 ) . C170 ) = C170) by CAT_1:76 , CAT_1:79;
L566: ( id R2 ) ~= ( C164 * C165 ) by L539 , NATTRA_1:28;
L567: ( id R2 ) is_naturally_transformable_to ( C164 * C165 ) by L566 , NATTRA_1:def 11;
L568: ( id R2 ) is_transformable_to ( C164 * C165 ) by L567 , NATTRA_1:def 7;
L569: (ex B76 being (natural_transformation of ( id R2 ) , ( C164 * C165 )) st B76 is  invertible) by L566 , NATTRA_1:def 11;
thus L570: thesis by L569 , L565 , L568 , L28;
end;
definition
let C171 being Category;
deffunc H1((Object of C171)) = ( id $1 );
func IdMap C171 -> (Function of (the carrier of C171) , (the carrier' of C171)) means 
(for B77 being (Object of C171) holds ( it . B77 ) = ( id B77 ));
existence
proof
deffunc H2((Object of C171)) = ( id $1 );
consider C172 being (Function of (the carrier of C171) , (the carrier' of C171)) such that L571: (for B78 being (Object of C171) holds ( C172 . B78 ) = H2(B78)) from FUNCT_2:sch 4;
take C172;
thus L572: thesis by L571;
end;
uniqueness
proof
let C173 , C174 being (Function of (the carrier of C171) , (the carrier' of C171));
assume that
L573: (for B79 being (Object of C171) holds ( C173 . B79 ) = ( id B79 ))
and
L574: (for B80 being (Object of C171) holds ( C174 . B80 ) = ( id B80 ));
let C175 being (Object of C171);
thus L575: ( C173 . C175 ) = ( id C175 ) by L573
.= ( C174 . C175 ) by L574;
end;
end;
