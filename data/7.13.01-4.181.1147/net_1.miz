:: Some Elementary Notions of the Theory of Petri Nets
::  by Waldemar Korczy\'nski
::
:: Received August 10, 1990
:: Copyright (c) 1990-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies RELAT_1, XBOOLE_0, TARSKI, ZFMISC_1, SUBSET_1, SETFAM_1, NET_1,
      STRUCT_0, PETRI;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, SETFAM_1, RELAT_1, PARTIT_2,
      STRUCT_0, PETRI;
 constructors TARSKI, SUBSET_1, RELAT_1, STRUCT_0, PETRI, PARTIT_2;
 registrations XBOOLE_0, SUBSET_1, RELAT_1;
 requirements SUBSET, BOOLE;
 definitions XBOOLE_0;
 theorems TARSKI, ZFMISC_1, XBOOLE_0, XBOOLE_1;
 schemes XBOOLE_0, SUBSET_1;

begin
definition
let C1 being PT_net_Str;
func Flow C1 equals 
( (the S-T_Arcs of C1) \/ (the T-S_Arcs of C1) );
coherence;
end;
registration
let C2 being PT_net_Str;
cluster ( Flow C2 ) ->  Relation-like;
coherence;
end;
definition
let C3 being PT_net_Str;
attr C3 is  Petri
means
:L3: ((the carrier of C3) misses (the carrier' of C3) & ( Flow C3 ) c= ( [: (the carrier of C3) , (the carrier' of C3) :] \/ [: (the carrier' of C3) , (the carrier of C3) :] ));
end;
definition
let C4 being PT_net_Str;
func Elements C4 equals 
( (the carrier of C4) \/ (the carrier' of C4) );
correctness;
end;
theorem
L6: (for R1 being set holds (for R3 being PT_net_Str holds (( Elements R3 ) <> ( {} ) implies (R1 is (Element of ( Elements R3 )) implies (R1 is (Element of (the carrier of R3)) or R1 is (Element of (the carrier' of R3))))))) by XBOOLE_0:def 3;
theorem
L7: (for R1 being set holds (for R3 being PT_net_Str holds ((R1 is (Element of (the carrier of R3)) & (the carrier of R3) <> ( {} )) implies R1 is (Element of ( Elements R3 )))))
proof
let R1 being set;
let R3 being PT_net_Str;
L8: (the carrier of R3) c= ( Elements R3 ) by XBOOLE_1:7;
assume L9: (R1 is (Element of (the carrier of R3)) & (the carrier of R3) <> ( {} ));
thus L10: thesis by L9 , L8 , TARSKI:def 3;
end;
theorem
L11: (for R1 being set holds (for R3 being PT_net_Str holds ((R1 is (Element of (the carrier' of R3)) & (the carrier' of R3) <> ( {} )) implies R1 is (Element of ( Elements R3 )))))
proof
let R1 being set;
let R3 being PT_net_Str;
L12: (the carrier' of R3) c= ( Elements R3 ) by XBOOLE_1:7;
assume L13: (R1 is (Element of (the carrier' of R3)) & (the carrier' of R3) <> ( {} ));
thus L14: thesis by L13 , L12 , TARSKI:def 3;
end;
L15: PT_net_Str (# ( {} ) , ( {} ) , ( {} (( {} ) , ( {} )) ) , ( {} (( {} ) , ( {} )) ) #) is  Petri
proof
set D1 = PT_net_Str (# ( {} ) , ( {} ) , ( {} (( {} ) , ( {} )) ) , ( {} (( {} ) , ( {} )) ) #);
thus L16: ( (the carrier of D1) /\ (the carrier' of D1) ) = ( {} );
thus L17: thesis;
end;
registration
cluster PT_net_Str (# ( {} ) , ( {} ) , ( {} (( {} ) , ( {} )) ) , ( {} (( {} ) , ( {} )) ) #) ->  Petri;
coherence by L15;
end;
registration
cluster  strict  Petri for PT_net_Str;
existence
proof
L19: PT_net_Str (# ( {} ) , ( {} ) , ( {} (( {} ) , ( {} )) ) , ( {} (( {} ) , ( {} )) ) #) is  Petri;
thus L20: thesis by L19;
end;
end;
definition
mode Pnet
 is  Petri PT_net_Str;
end;
theorem
L23: (for R1 being set holds (for B1 being Pnet holds (not (R1 in (the carrier of B1) & R1 in (the carrier' of B1)))))
proof
let R1 being set;
let C5 being Pnet;
L24: (the carrier of C5) misses (the carrier' of C5) by L3;
thus L25: thesis by L24 , XBOOLE_0:3;
end;
theorem
L26: (for R1 being set holds (for R2 being set holds (for B2 being Pnet holds (([ R1 , R2 ] in ( Flow B2 ) & R1 in (the carrier' of B2)) implies R2 in (the carrier of B2)))))
proof
let R1 being set;
let R2 being set;
let C6 being Pnet;
assume that
L27: [ R1 , R2 ] in ( Flow C6 )
and
L28: R1 in (the carrier' of C6);
L29: (not R1 in (the carrier of C6)) by L28 , L23;
L30: ( Flow C6 ) c= ( [: (the carrier of C6) , (the carrier' of C6) :] \/ [: (the carrier' of C6) , (the carrier of C6) :] ) by L3;
L31: ([ R1 , R2 ] in [: (the carrier of C6) , (the carrier' of C6) :] or [ R1 , R2 ] in [: (the carrier' of C6) , (the carrier of C6) :]) by L30 , L27 , XBOOLE_0:def 3;
thus L32: thesis by L31 , L29 , ZFMISC_1:87;
end;
theorem
L33: (for R1 being set holds (for R2 being set holds (for B3 being Pnet holds (([ R1 , R2 ] in ( Flow B3 ) & R2 in (the carrier' of B3)) implies R1 in (the carrier of B3)))))
proof
let R1 being set;
let R2 being set;
let C7 being Pnet;
assume that
L34: [ R1 , R2 ] in ( Flow C7 )
and
L35: R2 in (the carrier' of C7);
L36: (not R2 in (the carrier of C7)) by L35 , L23;
L37: ( Flow C7 ) c= ( [: (the carrier of C7) , (the carrier' of C7) :] \/ [: (the carrier' of C7) , (the carrier of C7) :] ) by L3;
L38: ([ R1 , R2 ] in [: (the carrier of C7) , (the carrier' of C7) :] or [ R1 , R2 ] in [: (the carrier' of C7) , (the carrier of C7) :]) by L37 , L34 , XBOOLE_0:def 3;
thus L39: thesis by L38 , L36 , ZFMISC_1:87;
end;
theorem
L40: (for R1 being set holds (for R2 being set holds (for B4 being Pnet holds (([ R1 , R2 ] in ( Flow B4 ) & R1 in (the carrier of B4)) implies R2 in (the carrier' of B4)))))
proof
let R1 being set;
let R2 being set;
let C8 being Pnet;
assume that
L41: [ R1 , R2 ] in ( Flow C8 )
and
L42: R1 in (the carrier of C8);
L43: (not R1 in (the carrier' of C8)) by L42 , L23;
L44: ( Flow C8 ) c= ( [: (the carrier of C8) , (the carrier' of C8) :] \/ [: (the carrier' of C8) , (the carrier of C8) :] ) by L3;
L45: ([ R1 , R2 ] in [: (the carrier' of C8) , (the carrier of C8) :] or [ R1 , R2 ] in [: (the carrier of C8) , (the carrier' of C8) :]) by L44 , L41 , XBOOLE_0:def 3;
thus L46: thesis by L45 , L43 , ZFMISC_1:87;
end;
theorem
L47: (for R1 being set holds (for R2 being set holds (for B5 being Pnet holds (([ R1 , R2 ] in ( Flow B5 ) & R2 in (the carrier of B5)) implies R1 in (the carrier' of B5)))))
proof
let R1 being set;
let R2 being set;
let C9 being Pnet;
assume that
L48: [ R1 , R2 ] in ( Flow C9 )
and
L49: R2 in (the carrier of C9);
L50: (not R2 in (the carrier' of C9)) by L49 , L23;
L51: ( Flow C9 ) c= ( [: (the carrier of C9) , (the carrier' of C9) :] \/ [: (the carrier' of C9) , (the carrier of C9) :] ) by L3;
L52: ([ R1 , R2 ] in [: (the carrier' of C9) , (the carrier of C9) :] or [ R1 , R2 ] in [: (the carrier of C9) , (the carrier' of C9) :]) by L51 , L48 , XBOOLE_0:def 3;
thus L53: thesis by L52 , L50 , ZFMISC_1:87;
end;
definition
let C10 being Pnet;
let R1 being set;
let R2 being set;
pred  pre C10 , R1 , R2
means
:L54: ([ R2 , R1 ] in ( Flow C10 ) & R1 in (the carrier' of C10))
;pred  post C10 , R1 , R2
means
:L55: ([ R1 , R2 ] in ( Flow C10 ) & R1 in (the carrier' of C10))
;end;
definition
let C11 being PT_net_Str;
let C12 being (Element of ( Elements C11 ));
func Pre (C11 , C12) means 
:L57: (for R2 being set holds (R2 in it iff (R2 in ( Elements C11 ) & [ R2 , C12 ] in ( Flow C11 ))));
existence
proof
defpred S1[ set ] means [ $1 , C12 ] in ( Flow C11 );
thus L58: (ex B6 being set st (for B7 being set holds (B7 in B6 iff (B7 in ( Elements C11 ) & S1[ B7 ])))) from XBOOLE_0:sch 1;
end;
uniqueness
proof
let C13 , C14 being set;
assume that
L59: (for R2 being set holds (R2 in C13 iff (R2 in ( Elements C11 ) & [ R2 , C12 ] in ( Flow C11 ))))
and
L60: (for R2 being set holds (R2 in C14 iff (R2 in ( Elements C11 ) & [ R2 , C12 ] in ( Flow C11 ))));
L61: (for R2 being set holds (R2 in C14 implies R2 in C13))
proof
let R2 being set;
assume L62: R2 in C14;
L63: (R2 in ( Elements C11 ) & [ R2 , C12 ] in ( Flow C11 )) by L62 , L60;
thus L64: thesis by L63 , L59;
end;
L65: (for R2 being set holds (R2 in C13 implies R2 in C14))
proof
let R2 being set;
assume L66: R2 in C13;
L67: (R2 in ( Elements C11 ) & [ R2 , C12 ] in ( Flow C11 )) by L66 , L59;
thus L68: thesis by L67 , L60;
end;
thus L69: thesis by L65 , L61 , TARSKI:1;
end;
func Post (C11 , C12) means 
:L70: (for R2 being set holds (R2 in it iff (R2 in ( Elements C11 ) & [ C12 , R2 ] in ( Flow C11 ))));
existence
proof
defpred S2[ set ] means [ C12 , $1 ] in ( Flow C11 );
thus L71: (ex B8 being set st (for B9 being set holds (B9 in B8 iff (B9 in ( Elements C11 ) & S2[ B9 ])))) from XBOOLE_0:sch 1;
end;
uniqueness
proof
let C15 , C16 being set;
assume that
L72: (for R2 being set holds (R2 in C15 iff (R2 in ( Elements C11 ) & [ C12 , R2 ] in ( Flow C11 ))))
and
L73: (for R2 being set holds (R2 in C16 iff (R2 in ( Elements C11 ) & [ C12 , R2 ] in ( Flow C11 ))));
L74: (for R2 being set holds (R2 in C16 implies R2 in C15))
proof
let R2 being set;
assume L75: R2 in C16;
L76: (R2 in ( Elements C11 ) & [ C12 , R2 ] in ( Flow C11 )) by L75 , L73;
thus L77: thesis by L76 , L72;
end;
L78: (for R2 being set holds (R2 in C15 implies R2 in C16))
proof
let R2 being set;
assume L79: R2 in C15;
L80: (R2 in ( Elements C11 ) & [ C12 , R2 ] in ( Flow C11 )) by L79 , L72;
thus L81: thesis by L80 , L73;
end;
thus L82: thesis by L78 , L74 , TARSKI:1;
end;
end;
theorem
L84: (for B10 being Pnet holds (for B11 being (Element of ( Elements B10 )) holds ( Pre (B10 , B11) ) c= ( Elements B10 )))
proof
let C17 being Pnet;
let C18 being (Element of ( Elements C17 ));
L85: (for R2 being set holds (R2 in ( Pre (C17 , C18) ) implies R2 in ( Elements C17 ))) by L57;
thus L86: thesis by L85 , TARSKI:def 3;
end;
theorem
L87: (for B12 being Pnet holds (for B13 being (Element of ( Elements B12 )) holds ( Pre (B12 , B13) ) c= ( Elements B12 ))) by L84;
theorem
L88: (for B14 being Pnet holds (for B15 being (Element of ( Elements B14 )) holds ( Post (B14 , B15) ) c= ( Elements B14 )))
proof
let C19 being Pnet;
let C20 being (Element of ( Elements C19 ));
L89: (for R2 being set holds (R2 in ( Post (C19 , C20) ) implies R2 in ( Elements C19 ))) by L70;
thus L90: thesis by L89 , TARSKI:def 3;
end;
theorem
L91: (for B16 being Pnet holds (for B17 being (Element of ( Elements B16 )) holds ( Post (B16 , B17) ) c= ( Elements B16 ))) by L88;
theorem
L92: (for R1 being set holds (for B18 being Pnet holds (for B19 being (Element of ( Elements B18 )) holds (B19 in (the carrier' of B18) implies (R1 in ( Pre (B18 , B19) ) iff  pre B18 , B19 , R1)))))
proof
let R1 being set;
let C21 being Pnet;
let C22 being (Element of ( Elements C21 ));
assume L93: C22 in (the carrier' of C21);
L94: ( pre C21 , C22 , R1 implies R1 in ( Pre (C21 , C22) ))
proof
assume L95:  pre C21 , C22 , R1;
L96: [ R1 , C22 ] in ( Flow C21 ) by L95 , L54;
L97: R1 in (the carrier of C21) by L96 , L93 , L33;
L98: R1 in ( Elements C21 ) by L97 , XBOOLE_0:def 3;
thus L99: thesis by L98 , L96 , L57;
end;
L100: (R1 in ( Pre (C21 , C22) ) implies  pre C21 , C22 , R1)
proof
assume L101: R1 in ( Pre (C21 , C22) );
L102: [ R1 , C22 ] in ( Flow C21 ) by L101 , L57;
thus L103: thesis by L102 , L93 , L54;
end;
thus L104: thesis by L100 , L94;
end;
theorem
L105: (for R1 being set holds (for B20 being Pnet holds (for B21 being (Element of ( Elements B20 )) holds (B21 in (the carrier' of B20) implies (R1 in ( Post (B20 , B21) ) iff  post B20 , B21 , R1)))))
proof
let R1 being set;
let C23 being Pnet;
let C24 being (Element of ( Elements C23 ));
assume L106: C24 in (the carrier' of C23);
L107: ( post C23 , C24 , R1 implies R1 in ( Post (C23 , C24) ))
proof
assume L108:  post C23 , C24 , R1;
L109: [ C24 , R1 ] in ( Flow C23 ) by L108 , L55;
L110: R1 in (the carrier of C23) by L109 , L106 , L26;
L111: R1 in ( Elements C23 ) by L110 , XBOOLE_0:def 3;
thus L112: thesis by L111 , L109 , L70;
end;
L113: (R1 in ( Post (C23 , C24) ) implies  post C23 , C24 , R1)
proof
assume L114: R1 in ( Post (C23 , C24) );
L115: [ C24 , R1 ] in ( Flow C23 ) by L114 , L70;
thus L116: thesis by L115 , L106 , L55;
end;
thus L117: thesis by L113 , L107;
end;
definition
let C25 being Pnet;
let C26 being (Element of ( Elements C25 ));
assume L118: ( Elements C25 ) <> ( {} );
func enter (C25 , C26) means 
:L119: ((C26 in (the carrier of C25) implies it = { C26 }) & (C26 in (the carrier' of C25) implies it = ( Pre (C25 , C26) )));
existence
proof
L120: (not (C26 in (the carrier of C25) & C26 in (the carrier' of C25))) by L23;
thus L121: thesis by L120;
end;
uniqueness by L118 , XBOOLE_0:def 3;
end;
theorem
L123: (for B22 being Pnet holds (for B23 being (Element of ( Elements B22 )) holds (( Elements B22 ) <> ( {} ) implies (( enter (B22 , B23) ) = { B23 } or ( enter (B22 , B23) ) = ( Pre (B22 , B23) )))))
proof
let C27 being Pnet;
let C28 being (Element of ( Elements C27 ));
assume L124: ( Elements C27 ) <> ( {} );
L125: (C28 in (the carrier of C27) or C28 in (the carrier' of C27)) by L124 , XBOOLE_0:def 3;
thus L126: thesis by L125 , L119;
end;
theorem
L127: (for B24 being Pnet holds (for B25 being (Element of ( Elements B24 )) holds (( Elements B24 ) <> ( {} ) implies ( enter (B24 , B25) ) c= ( Elements B24 ))))
proof
let C29 being Pnet;
let C30 being (Element of ( Elements C29 ));
assume L128: ( Elements C29 ) <> ( {} );
L129: (( enter (C29 , C30) ) = { C30 } implies ( enter (C29 , C30) ) c= ( Elements C29 ))
proof
L130: C30 in ( Elements C29 ) by L128;
L131: (for R2 being set holds (R2 in { C30 } implies R2 in ( Elements C29 ))) by L130 , TARSKI:def 1;
assume L132: ( enter (C29 , C30) ) = { C30 };
thus L133: thesis by L132 , L131 , TARSKI:def 3;
end;
L134: (( enter (C29 , C30) ) = { C30 } or ( enter (C29 , C30) ) = ( Pre (C29 , C30) )) by L128 , L123;
thus L135: thesis by L134 , L129 , L84;
end;
theorem
L136: (for B26 being Pnet holds (for B27 being (Element of ( Elements B26 )) holds (( Elements B26 ) <> ( {} ) implies ( enter (B26 , B27) ) c= ( Elements B26 )))) by L127;
definition
let C31 being Pnet;
let C32 being (Element of ( Elements C31 ));
assume L137: ( Elements C31 ) <> ( {} );
func exit (C31 , C32) -> set means 
:L138: ((C32 in (the carrier of C31) implies it = { C32 }) & (C32 in (the carrier' of C31) implies it = ( Post (C31 , C32) )));
existence
proof
L139: (not (C32 in (the carrier of C31) & C32 in (the carrier' of C31))) by L23;
thus L140: thesis by L139;
end;
uniqueness by L137 , XBOOLE_0:def 3;
end;
theorem
L142: (for B28 being Pnet holds (for B29 being (Element of ( Elements B28 )) holds (( Elements B28 ) <> ( {} ) implies (( exit (B28 , B29) ) = { B29 } or ( exit (B28 , B29) ) = ( Post (B28 , B29) )))))
proof
let C33 being Pnet;
let C34 being (Element of ( Elements C33 ));
assume L143: ( Elements C33 ) <> ( {} );
L144: (C34 in (the carrier of C33) or C34 in (the carrier' of C33)) by L143 , XBOOLE_0:def 3;
thus L145: thesis by L144 , L138;
end;
theorem
L146: (for B30 being Pnet holds (for B31 being (Element of ( Elements B30 )) holds (( Elements B30 ) <> ( {} ) implies ( exit (B30 , B31) ) c= ( Elements B30 ))))
proof
let C35 being Pnet;
let C36 being (Element of ( Elements C35 ));
assume L147: ( Elements C35 ) <> ( {} );
L148: (( exit (C35 , C36) ) = { C36 } implies ( exit (C35 , C36) ) c= ( Elements C35 ))
proof
L149: C36 in ( Elements C35 ) by L147;
L150: (for R2 being set holds (R2 in { C36 } implies R2 in ( Elements C35 ))) by L149 , TARSKI:def 1;
assume L151: ( exit (C35 , C36) ) = { C36 };
thus L152: thesis by L151 , L150 , TARSKI:def 3;
end;
L153: (( exit (C35 , C36) ) = { C36 } or ( exit (C35 , C36) ) = ( Post (C35 , C36) )) by L147 , L142;
thus L154: thesis by L153 , L148 , L88;
end;
theorem
L155: (for B32 being Pnet holds (for B33 being (Element of ( Elements B32 )) holds (( Elements B32 ) <> ( {} ) implies ( exit (B32 , B33) ) c= ( Elements B32 )))) by L146;
definition
let C37 being Pnet;
let C38 being (Element of ( Elements C37 ));
func field (C37 , C38) equals 
( ( enter (C37 , C38) ) \/ ( exit (C37 , C38) ) );
correctness;
end;
definition
let C39 being PT_net_Str;
let C40 being (Element of (the carrier' of C39));
func Prec (C39 , C40) means 
(for R2 being set holds (R2 in it iff (R2 in (the carrier of C39) & [ R2 , C40 ] in ( Flow C39 ))));
existence
proof
defpred S3[ set ] means [ $1 , C40 ] in ( Flow C39 );
thus L157: (ex B34 being set st (for B35 being set holds (B35 in B34 iff (B35 in (the carrier of C39) & S3[ B35 ])))) from XBOOLE_0:sch 1;
end;
uniqueness
proof
let C41 , C42 being set;
assume that
L158: (for R2 being set holds (R2 in C41 iff (R2 in (the carrier of C39) & [ R2 , C40 ] in ( Flow C39 ))))
and
L159: (for R2 being set holds (R2 in C42 iff (R2 in (the carrier of C39) & [ R2 , C40 ] in ( Flow C39 ))));
L160: (for R2 being set holds (R2 in C42 implies R2 in C41))
proof
let R2 being set;
assume L161: R2 in C42;
L162: (R2 in (the carrier of C39) & [ R2 , C40 ] in ( Flow C39 )) by L161 , L159;
thus L163: thesis by L162 , L158;
end;
L164: (for R2 being set holds (R2 in C41 implies R2 in C42))
proof
let R2 being set;
assume L165: R2 in C41;
L166: (R2 in (the carrier of C39) & [ R2 , C40 ] in ( Flow C39 )) by L165 , L158;
thus L167: thesis by L166 , L159;
end;
thus L168: thesis by L164 , L160 , TARSKI:1;
end;
func Postc (C39 , C40) means 
(for R2 being set holds (R2 in it iff (R2 in (the carrier of C39) & [ C40 , R2 ] in ( Flow C39 ))));
existence
proof
defpred S4[ set ] means [ C40 , $1 ] in ( Flow C39 );
thus L169: (ex B36 being set st (for B37 being set holds (B37 in B36 iff (B37 in (the carrier of C39) & S4[ B37 ])))) from XBOOLE_0:sch 1;
end;
uniqueness
proof
let C43 , C44 being set;
assume that
L170: (for R2 being set holds (R2 in C43 iff (R2 in (the carrier of C39) & [ C40 , R2 ] in ( Flow C39 ))))
and
L171: (for R2 being set holds (R2 in C44 iff (R2 in (the carrier of C39) & [ C40 , R2 ] in ( Flow C39 ))));
L172: (for R2 being set holds (R2 in C44 implies R2 in C43))
proof
let R2 being set;
assume L173: R2 in C44;
L174: (R2 in (the carrier of C39) & [ C40 , R2 ] in ( Flow C39 )) by L173 , L171;
thus L175: thesis by L174 , L170;
end;
L176: (for R2 being set holds (R2 in C43 implies R2 in C44))
proof
let R2 being set;
assume L177: R2 in C43;
L178: (R2 in (the carrier of C39) & [ C40 , R2 ] in ( Flow C39 )) by L177 , L170;
thus L179: thesis by L178 , L171;
end;
thus L180: thesis by L176 , L172 , TARSKI:1;
end;
end;
definition
let C45 being Pnet;
let C46 being set;
func Entr (C45 , C46) means 
:L182: (for R1 being set holds (R1 in it iff (R1 c= ( Elements C45 ) & (ex B38 being (Element of ( Elements C45 )) st (B38 in C46 & R1 = ( enter (C45 , B38) ))))));
existence
proof
defpred S5[ set ] means (ex B39 being (Element of ( Elements C45 )) st (B39 in C46 & $1 = ( enter (C45 , B39) )));
consider C47 being (Subset-Family of ( Elements C45 )) such that L183: (for B40 being (Subset of ( Elements C45 )) holds (B40 in C47 iff S5[ B40 ])) from SUBSET_1:sch 3;
take C47;
thus L184: thesis by L183;
end;
uniqueness
proof
let C48 , C49 being set;
assume that
L185: (for R1 being set holds (R1 in C48 iff (R1 c= ( Elements C45 ) & (ex B41 being (Element of ( Elements C45 )) st (B41 in C46 & R1 = ( enter (C45 , B41) ))))))
and
L186: (for R1 being set holds (R1 in C49 iff (R1 c= ( Elements C45 ) & (ex B42 being (Element of ( Elements C45 )) st (B42 in C46 & R1 = ( enter (C45 , B42) ))))));
L187: (for R1 being set holds (R1 in C49 implies R1 in C48))
proof
let R1 being set;
assume L188: R1 in C49;
L189: (R1 c= ( Elements C45 ) & (ex B43 being (Element of ( Elements C45 )) st (B43 in C46 & R1 = ( enter (C45 , B43) )))) by L188 , L186;
thus L190: thesis by L189 , L185;
end;
L191: (for R1 being set holds (R1 in C48 implies R1 in C49))
proof
let R1 being set;
assume L192: R1 in C48;
L193: (R1 c= ( Elements C45 ) & (ex B44 being (Element of ( Elements C45 )) st (B44 in C46 & R1 = ( enter (C45 , B44) )))) by L192 , L185;
thus L194: thesis by L193 , L186;
end;
thus L195: thesis by L191 , L187 , TARSKI:1;
end;
func Ext (C45 , C46) means 
:L196: (for R1 being set holds (R1 in it iff (R1 c= ( Elements C45 ) & (ex B45 being (Element of ( Elements C45 )) st (B45 in C46 & R1 = ( exit (C45 , B45) ))))));
existence
proof
defpred S6[ set ] means (ex B46 being (Element of ( Elements C45 )) st (B46 in C46 & $1 = ( exit (C45 , B46) )));
consider C50 being (Subset-Family of ( Elements C45 )) such that L197: (for B47 being (Subset of ( Elements C45 )) holds (B47 in C50 iff S6[ B47 ])) from SUBSET_1:sch 3;
take C50;
thus L198: thesis by L197;
end;
uniqueness
proof
let C51 , C52 being set;
assume that
L199: (for R1 being set holds (R1 in C51 iff (R1 c= ( Elements C45 ) & (ex B48 being (Element of ( Elements C45 )) st (B48 in C46 & R1 = ( exit (C45 , B48) ))))))
and
L200: (for R1 being set holds (R1 in C52 iff (R1 c= ( Elements C45 ) & (ex B49 being (Element of ( Elements C45 )) st (B49 in C46 & R1 = ( exit (C45 , B49) ))))));
L201: (for R1 being set holds (R1 in C52 implies R1 in C51))
proof
let R1 being set;
assume L202: R1 in C52;
L203: (R1 c= ( Elements C45 ) & (ex B50 being (Element of ( Elements C45 )) st (B50 in C46 & R1 = ( exit (C45 , B50) )))) by L202 , L200;
thus L204: thesis by L203 , L199;
end;
L205: (for R1 being set holds (R1 in C51 implies R1 in C52))
proof
let R1 being set;
assume L206: R1 in C51;
L207: (R1 c= ( Elements C45 ) & (ex B51 being (Element of ( Elements C45 )) st (B51 in C46 & R1 = ( exit (C45 , B51) )))) by L206 , L199;
thus L208: thesis by L207 , L200;
end;
thus L209: thesis by L205 , L201 , TARSKI:1;
end;
end;
theorem
L211: (for B52 being Pnet holds (for B53 being (Element of ( Elements B52 )) holds (for B54 being set holds ((( Elements B52 ) <> ( {} ) & B53 in B54) implies ( enter (B52 , B53) ) in ( Entr (B52 , B54) )))))
proof
let C53 being Pnet;
let C54 being (Element of ( Elements C53 ));
let C55 being set;
assume that
L212: ( Elements C53 ) <> ( {} )
and
L213: C54 in C55;
L214: ( enter (C53 , C54) ) c= ( Elements C53 ) by L212 , L127;
thus L215: thesis by L214 , L213 , L182;
end;
theorem
L216: (for B55 being Pnet holds (for B56 being (Element of ( Elements B55 )) holds (for B57 being set holds ((( Elements B55 ) <> ( {} ) & B56 in B57) implies ( exit (B55 , B56) ) in ( Ext (B55 , B57) )))))
proof
let C56 being Pnet;
let C57 being (Element of ( Elements C56 ));
let C58 being set;
assume that
L217: ( Elements C56 ) <> ( {} )
and
L218: C57 in C58;
L219: ( exit (C56 , C57) ) c= ( Elements C56 ) by L217 , L146;
thus L220: thesis by L219 , L218 , L196;
end;
definition
let C59 being Pnet;
let C60 being set;
func Input (C59 , C60) equals 
( union ( Entr (C59 , C60) ) );
correctness;
func Output (C59 , C60) equals 
( union ( Ext (C59 , C60) ) );
correctness;
end;
theorem
L222: (for B58 being Pnet holds (for R1 being set holds (for B59 being set holds (B59 c= ( Elements B58 ) implies (R1 in ( Input (B58 , B59) ) iff (ex B60 being (Element of ( Elements B58 )) st (B60 in B59 & R1 in ( enter (B58 , B60) ))))))))
proof
let C61 being Pnet;
let R1 being set;
let C62 being set;
L223: (R1 in ( Input (C61 , C62) ) implies (ex B61 being (Element of ( Elements C61 )) st (B61 in C62 & R1 in ( enter (C61 , B61) ))))
proof
assume L224: R1 in ( Input (C61 , C62) );
consider C63 being set such that L225: R1 in C63 and L226: C63 in ( Entr (C61 , C62) ) by L224 , TARSKI:def 4;
L227: (ex B62 being (Element of ( Elements C61 )) st (B62 in C62 & C63 = ( enter (C61 , B62) ))) by L226 , L182;
thus L228: thesis by L227 , L225;
end;
assume L229: C62 c= ( Elements C61 );
L230: ((ex B63 being (Element of ( Elements C61 )) st (B63 in C62 & R1 in ( enter (C61 , B63) ))) implies R1 in ( Input (C61 , C62) ))
proof
given C64 being (Element of ( Elements C61 )) such that
L231: C64 in C62
and
L232: R1 in ( enter (C61 , C64) );

L233: ( enter (C61 , C64) ) in ( Entr (C61 , C62) ) by L229 , L231 , L211;
thus L234: thesis by L233 , L232 , TARSKI:def 4;
end;
thus L235: thesis by L230 , L223;
end;
theorem
L236: (for B64 being Pnet holds (for R1 being set holds (for B65 being set holds (B65 c= ( Elements B64 ) implies (R1 in ( Output (B64 , B65) ) iff (ex B66 being (Element of ( Elements B64 )) st (B66 in B65 & R1 in ( exit (B64 , B66) ))))))))
proof
let C65 being Pnet;
let R1 being set;
let C66 being set;
L237: (R1 in ( Output (C65 , C66) ) implies (ex B67 being (Element of ( Elements C65 )) st (B67 in C66 & R1 in ( exit (C65 , B67) ))))
proof
assume L238: R1 in ( Output (C65 , C66) );
consider C67 being set such that L239: R1 in C67 and L240: C67 in ( Ext (C65 , C66) ) by L238 , TARSKI:def 4;
L241: (ex B68 being (Element of ( Elements C65 )) st (B68 in C66 & C67 = ( exit (C65 , B68) ))) by L240 , L196;
thus L242: thesis by L241 , L239;
end;
assume L243: C66 c= ( Elements C65 );
L244: ((ex B69 being (Element of ( Elements C65 )) st (B69 in C66 & R1 in ( exit (C65 , B69) ))) implies R1 in ( Output (C65 , C66) ))
proof
given C68 being (Element of ( Elements C65 )) such that
L245: C68 in C66
and
L246: R1 in ( exit (C65 , C68) );

L247: ( exit (C65 , C68) ) in ( Ext (C65 , C66) ) by L243 , L245 , L216;
thus L248: thesis by L247 , L246 , TARSKI:def 4;
end;
thus L249: thesis by L244 , L237;
end;
theorem
L250: (for B70 being Pnet holds (for B71 being (Subset of ( Elements B70 )) holds (for B72 being (Element of ( Elements B70 )) holds (( Elements B70 ) <> ( {} ) implies (B72 in ( Input (B70 , B71) ) iff ((B72 in B71 & B72 in (the carrier of B70)) or (ex B73 being (Element of ( Elements B70 )) st (B73 in B71 & B73 in (the carrier' of B70) &  pre B70 , B73 , B72))))))))
proof
let C69 being Pnet;
let C70 being (Subset of ( Elements C69 ));
let C71 being (Element of ( Elements C69 ));
L251: (((C71 in C70 & C71 in (the carrier of C69)) or (ex B74 being (Element of ( Elements C69 )) st (B74 in C70 & B74 in (the carrier' of C69) &  pre C69 , B74 , C71))) implies C71 in ( Input (C69 , C70) ))
proof
L252: ((ex B75 being (Element of ( Elements C69 )) st (B75 in C70 & B75 in (the carrier' of C69) &  pre C69 , B75 , C71)) implies C71 in ( Input (C69 , C70) ))
proof
given C72 being (Element of ( Elements C69 )) such that
L253: C72 in C70
and
L254: C72 in (the carrier' of C69)
and
L255:  pre C69 , C72 , C71;

L256: [ C71 , C72 ] in ( Flow C69 ) by L255 , L54;
L257: C71 in ( Pre (C69 , C72) ) by L256 , L254 , L57;
L258: C71 in ( enter (C69 , C72) ) by L257 , L254 , L119;
L259: ( enter (C69 , C72) ) in ( Entr (C69 , C70) ) by L253 , L211;
thus L260: thesis by L259 , L258 , TARSKI:def 4;
end;
L261: ((C71 in C70 & C71 in (the carrier of C69)) implies C71 in ( Input (C69 , C70) ))
proof
assume that
L262: C71 in C70
and
L263: C71 in (the carrier of C69);
L264: (( enter (C69 , C71) ) = { C71 } & { C71 } c= ( Elements C69 )) by L263 , L119 , ZFMISC_1:31;
L265: { C71 } in ( Entr (C69 , C70) ) by L264 , L262 , L182;
L266: C71 in { C71 } by TARSKI:def 1;
thus L267: thesis by L266 , L265 , TARSKI:def 4;
end;
assume L268: ((C71 in C70 & C71 in (the carrier of C69)) or (ex B76 being (Element of ( Elements C69 )) st (B76 in C70 & B76 in (the carrier' of C69) &  pre C69 , B76 , C71)));
thus L269: thesis by L268 , L261 , L252;
end;
assume L270: ( Elements C69 ) <> ( {} );
L271: (C71 in ( Input (C69 , C70) ) implies ((C71 in C70 & C71 in (the carrier of C69)) or (ex B77 being (Element of ( Elements C69 )) st (B77 in C70 & B77 in (the carrier' of C69) &  pre C69 , B77 , C71))))
proof
assume L272: C71 in ( Input (C69 , C70) );
L273: (ex B78 being set st (C71 in B78 & B78 in ( Entr (C69 , C70) ))) by L272 , TARSKI:def 4;
consider C73 being set such that L274: C73 in ( Entr (C69 , C70) ) and L275: C71 in C73 by L273;
consider C74 being (Element of ( Elements C69 )) such that L276: C74 in C70 and L277: C73 = ( enter (C69 , C74) ) by L274 , L182;
L278: (C74 in (the carrier' of C69) implies C73 = ( Pre (C69 , C74) )) by L277 , L119;
L279: (C74 in (the carrier' of C69) implies (ex B79 being (Element of ( Elements C69 )) st (B79 in C70 & B79 in (the carrier' of C69) &  pre C69 , B79 , C71)))
proof
assume L280: C74 in (the carrier' of C69);
take C74;
L281: [ C71 , C74 ] in ( Flow C69 ) by L275 , L278 , L280 , L57;
thus L282: thesis by L281 , L276 , L280 , L54;
end;
L283: (C74 in (the carrier of C69) or C74 in (the carrier' of C69)) by L270 , XBOOLE_0:def 3;
L284: (C74 in (the carrier of C69) implies C73 = { C74 }) by L277 , L119;
thus L285: thesis by L284 , L275 , L276 , L283 , L279 , TARSKI:def 1;
end;
thus L286: thesis by L271 , L251;
end;
theorem
L287: (for B80 being Pnet holds (for B81 being (Subset of ( Elements B80 )) holds (for B82 being (Element of ( Elements B80 )) holds (( Elements B80 ) <> ( {} ) implies (B82 in ( Output (B80 , B81) ) iff ((B82 in B81 & B82 in (the carrier of B80)) or (ex B83 being (Element of ( Elements B80 )) st (B83 in B81 & B83 in (the carrier' of B80) &  post B80 , B83 , B82))))))))
proof
let C75 being Pnet;
let C76 being (Subset of ( Elements C75 ));
let C77 being (Element of ( Elements C75 ));
L288: (((C77 in C76 & C77 in (the carrier of C75)) or (ex B84 being (Element of ( Elements C75 )) st (B84 in C76 & B84 in (the carrier' of C75) &  post C75 , B84 , C77))) implies C77 in ( Output (C75 , C76) ))
proof
L289: ((ex B85 being (Element of ( Elements C75 )) st (B85 in C76 & B85 in (the carrier' of C75) &  post C75 , B85 , C77)) implies C77 in ( Output (C75 , C76) ))
proof
given C78 being (Element of ( Elements C75 )) such that
L290: C78 in C76
and
L291: C78 in (the carrier' of C75)
and
L292:  post C75 , C78 , C77;

L293: [ C78 , C77 ] in ( Flow C75 ) by L292 , L55;
L294: C77 in ( Post (C75 , C78) ) by L293 , L291 , L70;
L295: C77 in ( exit (C75 , C78) ) by L294 , L291 , L138;
L296: ( exit (C75 , C78) ) in ( Ext (C75 , C76) ) by L290 , L216;
thus L297: thesis by L296 , L295 , TARSKI:def 4;
end;
L298: ((C77 in C76 & C77 in (the carrier of C75)) implies C77 in ( Output (C75 , C76) ))
proof
assume that
L299: C77 in C76
and
L300: C77 in (the carrier of C75);
L301: (( exit (C75 , C77) ) = { C77 } & { C77 } c= ( Elements C75 )) by L300 , L138 , ZFMISC_1:31;
L302: { C77 } in ( Ext (C75 , C76) ) by L301 , L299 , L196;
L303: C77 in { C77 } by TARSKI:def 1;
thus L304: thesis by L303 , L302 , TARSKI:def 4;
end;
assume L305: ((C77 in C76 & C77 in (the carrier of C75)) or (ex B86 being (Element of ( Elements C75 )) st (B86 in C76 & B86 in (the carrier' of C75) &  post C75 , B86 , C77)));
thus L306: thesis by L305 , L298 , L289;
end;
assume L307: ( Elements C75 ) <> ( {} );
L308: (C77 in ( Output (C75 , C76) ) implies ((C77 in C76 & C77 in (the carrier of C75)) or (ex B87 being (Element of ( Elements C75 )) st (B87 in C76 & B87 in (the carrier' of C75) &  post C75 , B87 , C77))))
proof
assume L309: C77 in ( Output (C75 , C76) );
L310: (ex B88 being set st (C77 in B88 & B88 in ( Ext (C75 , C76) ))) by L309 , TARSKI:def 4;
consider C79 being set such that L311: C79 in ( Ext (C75 , C76) ) and L312: C77 in C79 by L310;
consider C80 being (Element of ( Elements C75 )) such that L313: C80 in C76 and L314: C79 = ( exit (C75 , C80) ) by L311 , L196;
L315: (C80 in (the carrier' of C75) implies C79 = ( Post (C75 , C80) )) by L314 , L138;
L316: (C80 in (the carrier' of C75) implies (ex B89 being (Element of ( Elements C75 )) st (B89 in C76 & B89 in (the carrier' of C75) &  post C75 , B89 , C77)))
proof
assume L317: C80 in (the carrier' of C75);
take C80;
L318: [ C80 , C77 ] in ( Flow C75 ) by L312 , L315 , L317 , L70;
thus L319: thesis by L318 , L313 , L317 , L55;
end;
L320: (C80 in (the carrier of C75) or C80 in (the carrier' of C75)) by L307 , XBOOLE_0:def 3;
L321: (C80 in (the carrier of C75) implies C79 = { C80 }) by L314 , L138;
thus L322: thesis by L321 , L312 , L313 , L320 , L316 , TARSKI:def 1;
end;
thus L323: thesis by L308 , L288;
end;
