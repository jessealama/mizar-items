:: A Construction of an Abstract Space of Congruence of Vectors
::  by Grzegorz Lewandowski and Krzysztof Pra\.zmowski
::
:: Received May 23, 1990
:: Copyright (c) 1990-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies SUBSET_1, VECTSP_1, ARYTM_3, NUMBERS, REAL_1, SUPINF_2, XBOOLE_0,
      ALGSTR_0, STRUCT_0, RLVECT_1, PBOOLE, RELAT_1, ZFMISC_1, ANALOAF, CARD_1,
      ARYTM_1, TDGROUP;
 notations TARSKI, ZFMISC_1, SUBSET_1, NUMBERS, REAL_1, STRUCT_0, ALGSTR_0,
      ANALOAF, RELSET_1, BINOP_2, RLVECT_1, VECTSP_1;
 constructors BINOP_2, ANALOAF, REAL_1, DOMAIN_1, VECTSP_1, MEMBERED;
 registrations RELSET_1, STRUCT_0, VECTSP_1, ANALOAF, REAL_1, MEMBERED;
 requirements NUMERALS, SUBSET, BOOLE, ARITHM;
 definitions VECTSP_1, STRUCT_0;
 theorems VECTSP_1, RELAT_1, ZFMISC_1, DOMAIN_1, RLVECT_1, ANALOAF, STRUCT_0,
      XTUPLE_0;
 schemes RELSET_1;

begin
theorem
L1: (for B1 being (Element of ( G_Real )) holds (ex B2 being (Element of ( G_Real )) st ( B2 + B2 ) = B1))
proof
set D1 = ( G_Real );
let C1 being (Element of D1);
reconsider D2 = C1 as (Element of ( REAL ));
reconsider D3 = ( D2 / 2 ) as Real;
consider C2 being (Element of D1) such that L2: C2 = D3;
L3: ( C2 + C2 ) = D2 by L2;
thus L4: thesis by L3;
end;
theorem
L5: (for B3 being (Element of ( G_Real )) holds (( B3 + B3 ) = ( 0. ( G_Real ) ) implies B3 = ( 0. ( G_Real ) )));
definition
let C3 being non  empty addLoopStr;
attr C3 is  Two_Divisible
means
:L6: (for B4 being (Element of C3) holds (ex B5 being (Element of C3) st ( B5 + B5 ) = B4));
end;
L8: ( G_Real ) is  Fanoian
proof
let C4 being (Element of ( G_Real ));
assume L9: ( C4 + C4 ) = ( 0. ( G_Real ) );
thus L10: thesis by L9;
end;
registration
cluster ( G_Real ) ->  Fanoian  Two_Divisible;
coherence by L6 , L8 , L1;
end;
registration
cluster  strict  Fanoian  Two_Divisible  add-associative  right_zeroed  right_complementable  Abelian for non  empty non  empty non  empty non  empty addLoopStr;
existence by L8;
end;
definition
mode Two_Divisible_Group
 is  Two_Divisible  add-associative  right_zeroed  right_complementable  Abelian non  empty addLoopStr;
end;
definition
mode Uniquely_Two_Divisible_Group
 is  Fanoian  Two_Divisible  add-associative  right_zeroed  right_complementable  Abelian non  empty addLoopStr;
end;
theorem
L15: (for B6 being  add-associative  right_zeroed  right_complementable  Abelian non  empty addLoopStr holds (B6 is Uniquely_Two_Divisible_Group iff ((for B7 being (Element of B6) holds (ex B8 being (Element of B6) st ( B8 + B8 ) = B7)) & (for B9 being (Element of B6) holds (( B9 + B9 ) = ( 0. B6 ) implies B9 = ( 0. B6 )))))) by L6 , VECTSP_1:def 18;
notation
let C5 being non  empty addLoopStr;
let C6 , C7 being (Element of C5);
synonym C6 # C7 for C6 + C7;
end;
definition
let C8 being non  empty addLoopStr;
func CONGRD C8 -> (Relation of [: (the carrier of C8) , (the carrier of C8) :]) means 
:L17: (for B10 , B11 , B12 , B13 being (Element of C8) holds ([ [ B10 , B11 ] , [ B12 , B13 ] ] in it iff ( B10 # B13 ) = ( B11 # B12 )));
existence
proof
set D4 = (the carrier of C8);
set D5 = [: D4 , D4 :];
defpred S1[ set , set ] means (ex B14 , B15 , B16 , B17 being (Element of D4) st ($1 = [ B14 , B15 ] & $2 = [ B16 , B17 ] & ( B14 # B17 ) = ( B15 # B16 )));
consider C9 being (Relation of D5 , D5) such that L18: (for R11 being set holds (for R12 being set holds ([ R11 , R12 ] in C9 iff (R11 in D5 & R12 in D5 & S1[ R11 , R12 ])))) from RELSET_1:sch 1;
take C9;
let C10 , C11 , C12 , C13 being (Element of D4);
L19: ([ [ C10 , C11 ] , [ C12 , C13 ] ] in C9 implies ( C10 # C13 ) = ( C11 # C12 ))
proof
assume L20: [ [ C10 , C11 ] , [ C12 , C13 ] ] in C9;
consider C14 , C15 , C16 , C17 being (Element of D4) such that L21: [ C10 , C11 ] = [ C14 , C15 ] and L22: [ C12 , C13 ] = [ C16 , C17 ] and L23: ( C14 # C17 ) = ( C15 # C16 ) by L20 , L18;
L24: C12 = C16 by L22 , XTUPLE_0:1;
L25: (C10 = C14 & C11 = C15) by L21 , XTUPLE_0:1;
thus L26: thesis by L25 , L22 , L23 , L24 , XTUPLE_0:1;
end;
L27: ([ C10 , C11 ] in D5 & [ C12 , C13 ] in D5) by ZFMISC_1:def 2;
thus L28: thesis by L27 , L18 , L19;
end;
uniqueness
proof
set D6 = (the carrier of C8);
set D7 = [: D6 , D6 :];
let C18 , C19 being (Relation of [: D6 , D6 :]);
assume that
L29: (for B18 , B19 , B20 , B21 being (Element of D6) holds ([ [ B18 , B19 ] , [ B20 , B21 ] ] in C18 iff ( B18 # B21 ) = ( B19 # B20 )))
and
L30: (for B22 , B23 , B24 , B25 being (Element of D6) holds ([ [ B22 , B23 ] , [ B24 , B25 ] ] in C19 iff ( B22 # B25 ) = ( B23 # B24 )));
L31: (for B26 , B27 being set holds ([ B26 , B27 ] in C18 iff [ B26 , B27 ] in C19))
proof
let R11 being set;
let R12 being set;
L32:
now
assume L33: [ R11 , R12 ] in C19;
L34: R11 in D7 by L33 , ZFMISC_1:87;
consider C20 , C21 being (Element of C8) such that L35: R11 = [ C20 , C21 ] by L34 , DOMAIN_1:1;
L36: R12 in D7 by L33 , ZFMISC_1:87;
consider C22 , C23 being (Element of C8) such that L37: R12 = [ C22 , C23 ] by L36 , DOMAIN_1:1;
L38: ([ R11 , R12 ] in C19 iff ( C20 # C23 ) = ( C21 # C22 )) by L30 , L35 , L37;
thus L39: [ R11 , R12 ] in C18 by L38 , L29 , L33 , L35 , L37;
end;
L40:
now
assume L41: [ R11 , R12 ] in C18;
L42: R11 in D7 by L41 , ZFMISC_1:87;
consider C24 , C25 being (Element of C8) such that L43: R11 = [ C24 , C25 ] by L42 , DOMAIN_1:1;
L44: R12 in D7 by L41 , ZFMISC_1:87;
consider C26 , C27 being (Element of C8) such that L45: R12 = [ C26 , C27 ] by L44 , DOMAIN_1:1;
L46: ([ R11 , R12 ] in C18 iff ( C24 # C27 ) = ( C25 # C26 )) by L29 , L43 , L45;
thus L47: [ R11 , R12 ] in C19 by L46 , L30 , L41 , L43 , L45;
end;
thus L48: thesis by L40 , L32;
end;
thus L49: thesis by L31 , RELAT_1:def 2;
end;
end;
definition
let C28 being non  empty addLoopStr;
func AV C28 ->  strict AffinStruct equals 
AffinStruct (# (the carrier of C28) , ( CONGRD C28 ) #);
coherence;
end;
registration
let C29 being non  empty addLoopStr;
cluster ( AV C29 ) -> non  empty;
coherence;
end;
theorem
L53: (for R1 being Uniquely_Two_Divisible_Group holds ((the carrier of ( AV R1 )) = (the carrier of R1) & (the CONGR of ( AV R1 )) = ( CONGRD R1 )));
definition
let R1 being Uniquely_Two_Divisible_Group;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R5 being (Element of R1);
pred R2 , R3 ==> R4 , R5
means
:L54: [ [ R2 , R3 ] , [ R4 , R5 ] ] in (the CONGR of ( AV R1 ))
;end;
theorem
L56: (for R1 being Uniquely_Two_Divisible_Group holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (for R5 being (Element of R1) holds (R2 , R3 ==> R4 , R5 iff ( R2 # R5 ) = ( R3 # R4 )))))))
proof
let R1 being Uniquely_Two_Divisible_Group;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R5 being (Element of R1);
L57: (the CONGR of ( AV R1 )) = ( CONGRD R1 );
L58:
now
assume L59: R2 , R3 ==> R4 , R5;
L60: [ [ R2 , R3 ] , [ R4 , R5 ] ] in ( CONGRD R1 ) by L59 , L57 , L54;
thus L61: ( R2 # R5 ) = ( R3 # R4 ) by L60 , L17;
end;
L62:
now
assume L63: ( R2 # R5 ) = ( R3 # R4 );
L64: [ [ R2 , R3 ] , [ R4 , R5 ] ] in (the CONGR of ( AV R1 )) by L63 , L17;
thus L65: R2 , R3 ==> R4 , R5 by L64 , L54;
end;
thus L66: thesis by L62 , L58;
end;
theorem
L67: (ex B28 , B29 being (Element of ( G_Real )) st B28 <> B29)
proof
L68: ( 0 ) <> 1;
thus L69: thesis by L68;
end;
theorem
L70: (ex R1 being Uniquely_Two_Divisible_Group st (ex R2 being (Element of R1) st (ex R3 being (Element of R1) st R2 <> R3))) by L67;
theorem
L71: (for R1 being Uniquely_Two_Divisible_Group holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (R2 , R3 ==> R4 , R4 implies R2 = R3)))))
proof
let R1 being Uniquely_Two_Divisible_Group;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
assume L72: R2 , R3 ==> R4 , R4;
L73: ( R2 # R4 ) = ( R3 # R4 ) by L72 , L56;
thus L74: thesis by L73 , RLVECT_1:8;
end;
theorem
L75: (for R1 being Uniquely_Two_Divisible_Group holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (for R5 being (Element of R1) holds (for R9 being (Element of R1) holds (for R10 being (Element of R1) holds ((R2 , R3 ==> R9 , R10 & R4 , R5 ==> R9 , R10) implies R2 , R3 ==> R4 , R5))))))))
proof
let R1 being Uniquely_Two_Divisible_Group;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R5 being (Element of R1);
let R9 being (Element of R1);
let R10 being (Element of R1);
assume that
L76: R2 , R3 ==> R9 , R10
and
L77: R4 , R5 ==> R9 , R10;
L78: ( R2 # R10 ) = ( R3 # R9 ) by L76 , L56;
L79: ( R2 + ( R10 + R5 ) ) = ( ( R3 + R9 ) + R5 ) by L78 , RLVECT_1:def 3
.= ( R3 + ( R9 + R5 ) ) by RLVECT_1:def 3
.= ( R3 + ( R4 + R10 ) ) by L77 , L56;
L80: ( ( R2 + R5 ) + R10 ) = ( R3 + ( R4 + R10 ) ) by L79 , RLVECT_1:def 3
.= ( ( R3 + R4 ) + R10 ) by RLVECT_1:def 3;
L81: ( R2 + R5 ) = ( R3 + R4 ) by L80 , RLVECT_1:8;
thus L82: thesis by L81 , L56;
end;
theorem
L83: (for R1 being Uniquely_Two_Divisible_Group holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (ex R5 being (Element of R1) st R2 , R3 ==> R4 , R5)))))
proof
let R1 being Uniquely_Two_Divisible_Group;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
set D8 = ( ( - R2 ) + ( R3 + R4 ) );
take D8;
L84: ( R2 + D8 ) = ( ( R2 + ( - R2 ) ) + ( R3 + R4 ) ) by RLVECT_1:def 3
.= ( ( 0. R1 ) + ( R3 + R4 ) ) by RLVECT_1:5
.= ( R3 + R4 ) by RLVECT_1:4;
thus L85: thesis by L84 , L56;
end;
theorem
L86: (for R1 being Uniquely_Two_Divisible_Group holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (for R6 being (Element of R1) holds (for R7 being (Element of R1) holds (for R8 being (Element of R1) holds ((R2 , R3 ==> R6 , R7 & R2 , R4 ==> R6 , R8) implies R3 , R4 ==> R7 , R8))))))))
proof
let R1 being Uniquely_Two_Divisible_Group;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R6 being (Element of R1);
let R7 being (Element of R1);
let R8 being (Element of R1);
assume L87: (R2 , R3 ==> R6 , R7 & R2 , R4 ==> R6 , R8);
L88: (( R2 + R7 ) = ( R3 + R6 ) & ( R2 + R8 ) = ( R4 + R6 )) by L87 , L56;
L89: ( R3 + ( R6 + ( R2 + R8 ) ) ) = ( ( R4 + R6 ) + ( R2 + R7 ) ) by L88 , RLVECT_1:def 3
.= ( R4 + ( R6 + ( R2 + R7 ) ) ) by RLVECT_1:def 3;
L90: ( R3 + ( ( R6 + R2 ) + R8 ) ) = ( R4 + ( R6 + ( R2 + R7 ) ) ) by L89 , RLVECT_1:def 3
.= ( R4 + ( ( R6 + R2 ) + R7 ) ) by RLVECT_1:def 3;
L91: ( ( R3 + R8 ) + ( R6 + R2 ) ) = ( R4 + ( R7 + ( R6 + R2 ) ) ) by L90 , RLVECT_1:def 3
.= ( ( R4 + R7 ) + ( R6 + R2 ) ) by RLVECT_1:def 3;
L92: ( R3 + R8 ) = ( R4 + R7 ) by L91 , RLVECT_1:8;
thus L93: thesis by L92 , L56;
end;
theorem
L94: (for R1 being Uniquely_Two_Divisible_Group holds (for R2 being (Element of R1) holds (for R4 being (Element of R1) holds (ex R3 being (Element of R1) st R2 , R3 ==> R3 , R4))))
proof
let R1 being Uniquely_Two_Divisible_Group;
let R2 being (Element of R1);
let R4 being (Element of R1);
consider C30 being (Element of R1) such that L95: ( C30 + C30 ) = ( R2 + R4 ) by L6;
take C30;
thus L96: thesis by L95 , L56;
end;
theorem
L97: (for R1 being Uniquely_Two_Divisible_Group holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (for R7 being (Element of R1) holds ((R2 , R3 ==> R3 , R4 & R2 , R7 ==> R7 , R4) implies R3 = R7))))))
proof
let R1 being Uniquely_Two_Divisible_Group;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R7 being (Element of R1);
assume L98: (R2 , R3 ==> R3 , R4 & R2 , R7 ==> R7 , R4);
L99: (( R2 + R4 ) = ( R3 + R3 ) & ( R2 + R4 ) = ( R7 + R7 )) by L98 , L56;
L100: ( ( R3 + ( - R7 ) ) + R3 ) = ( ( R7 + R7 ) + ( - R7 ) ) by L99 , RLVECT_1:def 3
.= ( R7 + ( R7 + ( - R7 ) ) ) by RLVECT_1:def 3
.= ( R7 + ( 0. R1 ) ) by RLVECT_1:5
.= R7 by RLVECT_1:4;
L101: ( ( R3 + ( - R7 ) ) + ( R3 + ( - R7 ) ) ) = ( R7 + ( - R7 ) ) by L100 , RLVECT_1:def 3
.= ( 0. R1 ) by RLVECT_1:5;
L102: R7 = ( ( 0. R1 ) + R7 ) by RLVECT_1:4
.= ( ( R3 + ( - R7 ) ) + R7 ) by L101 , VECTSP_1:def 18
.= ( R3 + ( ( - R7 ) + R7 ) ) by RLVECT_1:def 3
.= ( R3 + ( 0. R1 ) ) by RLVECT_1:5
.= R3 by RLVECT_1:4;
thus L103: thesis by L102;
end;
theorem
L104: (for R1 being Uniquely_Two_Divisible_Group holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (for R5 being (Element of R1) holds (R2 , R3 ==> R4 , R5 implies R2 , R4 ==> R3 , R5))))))
proof
let R1 being Uniquely_Two_Divisible_Group;
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R5 being (Element of R1);
assume L105: R2 , R3 ==> R4 , R5;
L106: ( R2 + R5 ) = ( R3 + R4 ) by L105 , L56;
thus L107: thesis by L106 , L56;
end;
theorem
L108: (for R1 being Uniquely_Two_Divisible_Group holds ((ex B30 , B31 being (Element of R1) st B30 <> B31) implies ((ex B32 , B33 being (Element of ( AV R1 )) st B32 <> B33) & (for B34 , B35 , B36 being (Element of ( AV R1 )) holds (B34 , B35 // B36 , B36 implies B34 = B35)) & (for B37 , B38 , B39 , B40 , B41 , B42 being (Element of ( AV R1 )) holds ((B37 , B38 // B41 , B42 & B39 , B40 // B41 , B42) implies B37 , B38 // B39 , B40)) & (for B43 , B44 , B45 being (Element of ( AV R1 )) holds (ex B46 being (Element of ( AV R1 )) st B43 , B44 // B45 , B46)) & (for B47 , B48 , B49 , B50 , B51 , B52 being (Element of ( AV R1 )) holds ((B47 , B48 // B50 , B51 & B47 , B49 // B50 , B52) implies B48 , B49 // B51 , B52)) & (for B53 , B54 being (Element of ( AV R1 )) holds (ex B55 being (Element of ( AV R1 )) st B53 , B55 // B55 , B54)) & (for B56 , B57 , B58 , B59 being (Element of ( AV R1 )) holds ((B56 , B57 // B57 , B58 & B56 , B59 // B59 , B58) implies B57 = B59)) & (for B60 , B61 , B62 , B63 being (Element of ( AV R1 )) holds (B60 , B61 // B62 , B63 implies B60 , B62 // B61 , B63)))))
proof
let R1 being Uniquely_Two_Divisible_Group;
set D9 = ( AV R1 );
assume L109: (ex B64 , B65 being (Element of R1) st B64 <> B65);
thus L110: (ex B66 , B67 being (Element of D9) st B66 <> B67) by L109;
L111: D9 = AffinStruct (# (the carrier of R1) , ( CONGRD R1 ) #);
L112: (for B68 , B69 , B70 , B71 being (Element of D9) holds (for R2 being (Element of R1) holds (for R3 being (Element of R1) holds (for R4 being (Element of R1) holds (for R5 being (Element of R1) holds ((R2 = B68 & R3 = B69 & R4 = B70 & R5 = B71) implies (R2 , R3 ==> R4 , R5 iff B68 , B69 // B70 , B71)))))))
proof
let C31 , C32 , C33 , C34 being (Element of D9);
let R2 being (Element of R1);
let R3 being (Element of R1);
let R4 being (Element of R1);
let R5 being (Element of R1);
assume that
L113: (R2 = C31 & R3 = C32 & R4 = C33 & R5 = C34);
L114:
now
assume L115: C31 , C32 // C33 , C34;
L116: [ [ R2 , R3 ] , [ R4 , R5 ] ] in ( CONGRD R1 ) by L115 , L113 , ANALOAF:def 2;
thus L117: R2 , R3 ==> R4 , R5 by L116 , L111 , L54;
end;
L118:
now
assume L119: R2 , R3 ==> R4 , R5;
L120: [ [ R2 , R3 ] , [ R4 , R5 ] ] in ( CONGRD R1 ) by L119 , L111 , L54;
thus L121: C31 , C32 // C33 , C34 by L120 , L113 , ANALOAF:def 2;
end;
thus L122: thesis by L118 , L114;
end;
thus L123: (for B72 , B73 , B74 being (Element of D9) holds (B72 , B73 // B74 , B74 implies B72 = B73))
proof
let C35 , C36 , C37 being (Element of D9);
assume that
L124: C35 , C36 // C37 , C37;
reconsider D10 = C35 , D11 = C36 , D12 = C37 as (Element of R1);
L125: D10 , D11 ==> D12 , D12 by L112 , L124;
thus L126: thesis by L125 , L71;
end;

thus L127: (for B75 , B76 , B77 , B78 , B79 , B80 being (Element of D9) holds ((B75 , B76 // B79 , B80 & B77 , B78 // B79 , B80) implies B75 , B76 // B77 , B78))
proof
let C38 , C39 , C40 , C41 , C42 , C43 being (Element of D9);
reconsider D13 = C38 , D14 = C39 , D15 = C40 , D16 = C41 , D17 = C42 , D18 = C43 as (Element of R1);
assume L128: (C38 , C39 // C42 , C43 & C40 , C41 // C42 , C43);
L129: (D13 , D14 ==> D17 , D18 & D15 , D16 ==> D17 , D18) by L128 , L112;
L130: D13 , D14 ==> D15 , D16 by L129 , L75;
thus L131: thesis by L130 , L112;
end;

thus L132: (for B81 , B82 , B83 being (Element of D9) holds (ex B84 being (Element of D9) st B81 , B82 // B83 , B84))
proof
let C44 , C45 , C46 being (Element of D9);
reconsider D19 = C44 , D20 = C45 , D21 = C46 as (Element of R1);
consider C47 being (Element of R1) such that L133: D19 , D20 ==> D21 , C47 by L83;
reconsider D22 = C47 as (Element of D9);
take D22;
thus L134: thesis by L112 , L133;
end;

thus L135: (for B85 , B86 , B87 , B88 , B89 , B90 being (Element of D9) holds ((B85 , B86 // B88 , B89 & B85 , B87 // B88 , B90) implies B86 , B87 // B89 , B90))
proof
let C48 , C49 , C50 , C51 , C52 , C53 being (Element of D9);
reconsider D23 = C48 , D24 = C49 , D25 = C50 , D26 = C51 , D27 = C52 , D28 = C53 as (Element of R1);
assume L136: (C48 , C49 // C51 , C52 & C48 , C50 // C51 , C53);
L137: (D23 , D24 ==> D26 , D27 & D23 , D25 ==> D26 , D28) by L136 , L112;
L138: D24 , D25 ==> D27 , D28 by L137 , L86;
thus L139: thesis by L138 , L112;
end;

thus L140: (for B91 , B92 being (Element of D9) holds (ex B93 being (Element of D9) st B91 , B93 // B93 , B92))
proof
let C54 , C55 being (Element of D9);
reconsider D29 = C54 , D30 = C55 as (Element of R1);
consider C56 being (Element of R1) such that L141: D29 , C56 ==> C56 , D30 by L94;
reconsider D31 = C56 as (Element of D9);
take D31;
thus L142: thesis by L112 , L141;
end;

thus L143: (for B94 , B95 , B96 , B97 being (Element of D9) holds ((B94 , B95 // B95 , B96 & B94 , B97 // B97 , B96) implies B95 = B97))
proof
let C57 , C58 , C59 , C60 being (Element of D9);
reconsider D32 = C57 , D33 = C58 , D34 = C59 , D35 = C60 as (Element of R1);
assume L144: (C57 , C58 // C58 , C59 & C57 , C60 // C60 , C59);
L145: (D32 , D33 ==> D33 , D34 & D32 , D35 ==> D35 , D34) by L144 , L112;
thus L146: thesis by L145 , L97;
end;

thus L147: (for B98 , B99 , B100 , B101 being (Element of D9) holds (B98 , B99 // B100 , B101 implies B98 , B100 // B99 , B101))
proof
let C61 , C62 , C63 , C64 being (Element of D9);
reconsider D36 = C61 , D37 = C62 , D38 = C63 , D39 = C64 as (Element of R1);
assume L148: C61 , C62 // C63 , C64;
L149: D36 , D37 ==> D38 , D39 by L148 , L112;
L150: D36 , D38 ==> D37 , D39 by L149 , L104;
thus L151: thesis by L150 , L112;
end;

end;
definition
let C65 being non  empty AffinStruct;
attr C65 is  AffVect-like
means
:L148: ((for B102 , B103 , B104 being (Element of C65) holds (B102 , B103 // B104 , B104 implies B102 = B103)) & (for B105 , B106 , B107 , B108 , B109 , B110 being (Element of C65) holds ((B105 , B106 // B109 , B110 & B107 , B108 // B109 , B110) implies B105 , B106 // B107 , B108)) & (for B111 , B112 , B113 being (Element of C65) holds (ex B114 being (Element of C65) st B111 , B112 // B113 , B114)) & (for B115 , B116 , B117 , B118 , B119 , B120 being (Element of C65) holds ((B115 , B116 // B118 , B119 & B115 , B117 // B118 , B120) implies B116 , B117 // B119 , B120)) & (for B121 , B122 being (Element of C65) holds (ex B123 being (Element of C65) st B121 , B123 // B123 , B122)) & (for B124 , B125 , B126 , B127 being (Element of C65) holds ((B124 , B125 // B125 , B126 & B124 , B127 // B127 , B126) implies B125 = B127)) & (for B128 , B129 , B130 , B131 being (Element of C65) holds (B128 , B129 // B130 , B131 implies B128 , B130 // B129 , B131)));
end;
registration
cluster  strict  AffVect-like for non  trivial non  trivial non  trivial non  trivial AffinStruct;
existence
proof
consider R1 being Uniquely_Two_Divisible_Group such that L150: (ex R2 being (Element of R1) st (ex R3 being (Element of R1) st R2 <> R3)) by L67;
L151: ((for B132 , B133 , B134 , B135 , B136 , B137 being (Element of ( AV R1 )) holds ((B132 , B133 // B135 , B136 & B132 , B134 // B135 , B137) implies B133 , B134 // B136 , B137)) & (for B138 , B139 being (Element of ( AV R1 )) holds (ex B140 being (Element of ( AV R1 )) st B138 , B140 // B140 , B139))) by L150 , L108;
L152: ((for B141 , B142 , B143 being (Element of ( AV R1 )) holds (B141 , B142 // B143 , B143 implies B141 = B142)) & (for B144 , B145 , B146 , B147 being (Element of ( AV R1 )) holds ((B144 , B145 // B145 , B146 & B144 , B147 // B147 , B146) implies B145 = B147))) by L108;
L153: (for B148 , B149 , B150 , B151 being (Element of ( AV R1 )) holds (B148 , B149 // B150 , B151 implies B148 , B150 // B149 , B151)) by L150 , L108;
L154: ((for B152 , B153 , B154 , B155 , B156 , B157 being (Element of ( AV R1 )) holds ((B152 , B153 // B156 , B157 & B154 , B155 // B156 , B157) implies B152 , B153 // B154 , B155)) & (for B158 , B159 , B160 being (Element of ( AV R1 )) holds (ex B161 being (Element of ( AV R1 )) st B158 , B159 // B160 , B161))) by L150 , L108;
L155: ( AV R1 ) is non  trivial  AffVect-like by L154 , L150 , L151 , L152 , L153 , L148 , STRUCT_0:def 10;
thus L156: thesis by L155;
end;
end;
definition
mode AffVect
 is  AffVect-like non  trivial AffinStruct;
end;
theorem
L159: (for R13 being non  empty AffinStruct holds (((ex B162 , B163 being (Element of R13) st B162 <> B163) & (for B164 , B165 , B166 being (Element of R13) holds (B164 , B165 // B166 , B166 implies B164 = B165)) & (for B167 , B168 , B169 , B170 , B171 , B172 being (Element of R13) holds ((B167 , B168 // B171 , B172 & B169 , B170 // B171 , B172) implies B167 , B168 // B169 , B170)) & (for B173 , B174 , B175 being (Element of R13) holds (ex B176 being (Element of R13) st B173 , B174 // B175 , B176)) & (for B177 , B178 , B179 , B180 , B181 , B182 being (Element of R13) holds ((B177 , B178 // B180 , B181 & B177 , B179 // B180 , B182) implies B178 , B179 // B181 , B182)) & (for B183 , B184 being (Element of R13) holds (ex B185 being (Element of R13) st B183 , B185 // B185 , B184)) & (for B186 , B187 , B188 , B189 being (Element of R13) holds ((B186 , B187 // B187 , B188 & B186 , B189 // B189 , B188) implies B187 = B189)) & (for B190 , B191 , B192 , B193 being (Element of R13) holds (B190 , B191 // B192 , B193 implies B190 , B192 // B191 , B193))) iff R13 is AffVect)) by L148 , STRUCT_0:def 10;
theorem
L160: (for R1 being Uniquely_Two_Divisible_Group holds ((ex B194 , B195 being (Element of R1) st B194 <> B195) implies ( AV R1 ) is AffVect))
proof
let R1 being Uniquely_Two_Divisible_Group;
L161: ((for B196 , B197 , B198 being (Element of ( AV R1 )) holds (B196 , B197 // B198 , B198 implies B196 = B197)) & (for B199 , B200 , B201 , B202 being (Element of ( AV R1 )) holds ((B199 , B200 // B200 , B201 & B199 , B202 // B202 , B201) implies B200 = B202))) by L108;
assume L162: (ex B203 , B204 being (Element of R1) st B203 <> B204);
L163: ((for B205 , B206 , B207 , B208 , B209 , B210 being (Element of ( AV R1 )) holds ((B205 , B206 // B208 , B209 & B205 , B207 // B208 , B210) implies B206 , B207 // B209 , B210)) & (for B211 , B212 being (Element of ( AV R1 )) holds (ex B213 being (Element of ( AV R1 )) st B211 , B213 // B213 , B212))) by L162 , L108;
L164: (for B214 , B215 , B216 , B217 being (Element of ( AV R1 )) holds (B214 , B215 // B216 , B217 implies B214 , B216 // B215 , B217)) by L162 , L108;
L165: ((for B218 , B219 , B220 , B221 , B222 , B223 being (Element of ( AV R1 )) holds ((B218 , B219 // B222 , B223 & B220 , B221 // B222 , B223) implies B218 , B219 // B220 , B221)) & (for B224 , B225 , B226 being (Element of ( AV R1 )) holds (ex B227 being (Element of ( AV R1 )) st B224 , B225 // B226 , B227))) by L162 , L108;
thus L166: thesis by L165 , L162 , L163 , L161 , L164 , L148 , STRUCT_0:def 10;
end;
