:: Quantales
::  by Grzegorz Bancerek
::
:: Received May 9, 1994
:: Copyright (c) 1994-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies XBOOLE_0, SUBSET_1, TARSKI, LATTICES, STRUCT_0, ALGSTR_0,
      EQREL_1, PBOOLE, LATTICE3, BINOP_1, FUNCT_1, WAYBEL_0, FINSET_1, RELAT_1,
      VECTSP_1, FINSEQ_1, GROUP_1, REWRITE1, SETWISEO, ZFMISC_1, SEQM_3,
      GRAPH_1, FUNCT_3, SETFAM_1, QUANTAL1;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, SETFAM_1, FUNCT_1, RELSET_1,
      BINOP_1, SETWISEO, PARTFUN1, FUNCT_2, STRUCT_0, ALGSTR_0, FINSET_1,
      DOMAIN_1, LATTICES, LATTICE3, MONOID_0;
 constructors SETFAM_1, BINOP_1, DOMAIN_1, SETWISEO, VECTSP_1, LATTICE3,
      RELSET_1;
 registrations XBOOLE_0, SUBSET_1, RELAT_1, FUNCT_1, FUNCT_2, FINSET_1,
      STRUCT_0, LATTICES, LATTICE3, ALGSTR_0, RELSET_1;
 requirements BOOLE, SUBSET;
 definitions TARSKI, BINOP_1, SETWISEO, LATTICES, LATTICE3, MONOID_0, STRUCT_0,
      XBOOLE_0, ALGSTR_0;
 theorems TARSKI, ZFMISC_1, BINOP_1, LATTICES, LATTICE3, SETWISEO, MONOID_0,
      FUNCT_1, FUNCT_2, RELSET_1, XBOOLE_1, GROUP_1;
 schemes FUNCT_2, FRAENKEL;

begin
scheme DenestFraenkel { F1() -> non  empty set , F2() -> non  empty set , F3(set) -> set , F4(set) -> (Element of F2()) , P1[set] } : { F3(B1) where B1 is (Element of F2()) : B1 in { F4(B2) where B2 is (Element of F1()) : P1[ B2 ] } } = { F3(F4(B3)) where B3 is (Element of F1()) : P1[ B3 ] }
proof
thus L1: { F3(B4) where B4 is (Element of F2()) : B4 in { F4(B5) where B5 is (Element of F1()) : P1[ B5 ] } } c= { F3(F4(B6)) where B6 is (Element of F1()) : P1[ B6 ] }
proof
let C1 being set;
assume L2: C1 in { F3(B7) where B7 is (Element of F2()) : B7 in { F4(B8) where B8 is (Element of F1()) : P1[ B8 ] } };
consider C2 being (Element of F2()) such that L3: C1 = F3(C2) and L4: C2 in { F4(B9) where B9 is (Element of F1()) : P1[ B9 ] } by L2;
L5: (ex B10 being (Element of F1()) st (C2 = F4(B10) & P1[ B10 ])) by L4;
thus L6: thesis by L5 , L3;
end;

let C3 being set;
assume L7: C3 in { F3(F4(B11)) where B11 is (Element of F1()) : P1[ B11 ] };
consider C4 being (Element of F1()) such that L8: C3 = F3(F4(C4)) and L9: P1[ C4 ] by L7;
L10: F4(C4) in { F4(B12) where B12 is (Element of F1()) : P1[ B12 ] } by L9;
thus L11: thesis by L10 , L8;
end;
scheme EmptyFraenkel { F5() -> non  empty set , F6(set) -> set , P2[set] } : { F6(B13) where B13 is (Element of F5()) : P2[ B13 ] } = ( {} )
provided
L12: (not (ex B14 being (Element of F5()) st P2[ B14 ]))
proof
assume L13: (not thesis);
reconsider D1 = { F6(B15) where B15 is (Element of F5()) : P2[ B15 ] } as non  empty set by L13;
set D2 = the (Element of D1);
L14: D2 in D1;
L15: (ex B16 being (Element of F5()) st (D2 = F6(B16) & P2[ B16 ])) by L14;
thus L16: contradiction by L15 , L12;
end;
deffunc H1(non  empty LattStr) = (the carrier of $1);
deffunc H2(LattStr) = (the L_join of $1);
deffunc H3(LattStr) = (the L_meet of $1);
deffunc H4(multMagma) = (the multF of $1);
theorem
L17: (for B17 , B18 being non  empty LattStr holds (( the LattStr of B17 ) = ( the LattStr of B18 ) implies (for B19 , B20 being (Element of B17) holds (for B21 , B22 being (Element of B18) holds ((B19 = B21 & B20 = B22) implies (( B19 "\/" B20 ) = ( B21 "\/" B22 ) & ( B19 "/\" B20 ) = ( B21 "/\" B22 ) & (B19 [= B20 iff B21 [= B22)))))))
proof
let C5 , C6 being non  empty LattStr;
assume that
L18: ( the LattStr of C5 ) = ( the LattStr of C6 );
let C7 , C8 being (Element of C5);
let C9 , C10 being (Element of C6);
assume that
L19: (C7 = C9 & C8 = C10);
thus L20: ( C7 "\/" C8 ) = ( C9 "\/" C10 ) by L18 , L19;
thus L21: ( C7 "/\" C8 ) = ( C9 "/\" C10 ) by L18 , L19;
L22: (( C9 "\/" C10 ) = C10 iff C9 [= C10) by LATTICES:def 3;
L23: (C7 [= C8 iff ( C7 "\/" C8 ) = C8) by LATTICES:def 3;
thus L24: thesis by L23 , L18 , L19 , L22;
end;
theorem
L25: (for B23 , B24 being non  empty LattStr holds (( the LattStr of B23 ) = ( the LattStr of B24 ) implies (for B25 being (Element of B23) holds (for B26 being (Element of B24) holds (for B27 being set holds (B25 = B26 implies ((B25 is_less_than B27 iff B26 is_less_than B27) & (B25 is_greater_than B27 iff B26 is_greater_than B27))))))))
proof
let C11 , C12 being non  empty LattStr;
assume that
L26: ( the LattStr of C11 ) = ( the LattStr of C12 );
let C13 being (Element of C11);
let C14 being (Element of C12);
let C15 being set;
assume that
L27: C13 = C14;
thus L28: (C13 is_less_than C15 implies C14 is_less_than C15)
proof
assume L29: (for B28 being (Element of C11) holds (B28 in C15 implies C13 [= B28));
let C16 being (Element of C12);
reconsider D3 = C16 as (Element of C11) by L26;
assume L30: C16 in C15;
L31: C13 [= D3 by L30 , L29;
thus L32: thesis by L31 , L26 , L27 , L17;
end;

thus L33: (C14 is_less_than C15 implies C13 is_less_than C15)
proof
assume L34: (for B29 being (Element of C12) holds (B29 in C15 implies C14 [= B29));
let C17 being (Element of C11);
reconsider D4 = C17 as (Element of C12) by L26;
assume L35: C17 in C15;
L36: C14 [= D4 by L35 , L34;
thus L37: thesis by L36 , L26 , L27 , L17;
end;

thus L38: (C13 is_greater_than C15 implies C14 is_greater_than C15)
proof
assume L39: (for B30 being (Element of C11) holds (B30 in C15 implies B30 [= C13));
let C18 being (Element of C12);
reconsider D5 = C18 as (Element of C11) by L26;
assume L40: C18 in C15;
L41: D5 [= C13 by L40 , L39;
thus L42: thesis by L41 , L26 , L27 , L17;
end;

assume L43: (for B31 being (Element of C12) holds (B31 in C15 implies B31 [= C14));
let C19 being (Element of C11);
reconsider D6 = C19 as (Element of C12) by L26;
assume L44: C19 in C15;
L45: D6 [= C14 by L44 , L43;
thus L46: thesis by L45 , L26 , L27 , L17;
end;
definition
let C20 being 1-sorted;
mode UnOp of C20
 is (Function of C20 , C20);
end;
definition
let C21 being non  empty LattStr;
let C22 being (Subset of C21);
attr C22 is  directed
means
(for B32 being  finite (Subset of C22) holds (ex B33 being (Element of C21) st (( "\/" (B32 , C21) ) [= B33 & B33 in C22)));
end;
theorem
L49: (for B34 being non  empty LattStr holds (for B35 being (Subset of B34) holds (B35 is  directed implies B35 is non  empty)))
proof
let C23 being non  empty LattStr;
let C24 being (Subset of C23);
assume L50: (for B36 being  finite (Subset of C24) holds (ex B37 being (Element of C23) st (( "\/" (B36 , C23) ) [= B37 & B37 in C24)));
L51: (ex B38 being (Element of C23) st (( "\/" (( {} C24 ) , C23) ) [= B38 & B38 in C24)) by L50;
thus L52: thesis by L51;
end;
definition
struct (LattStr , multMagma) QuantaleStr(# carrier -> set , L_join , L_meet , multF -> (BinOp of the carrier) #);
end;
registration
cluster non  empty for QuantaleStr;
existence
proof
set D7 = the non  empty set;
set D8 = the (BinOp of D7);
take QuantaleStr (# D7 , D8 , D8 , D8 #);
thus L54: (the carrier of QuantaleStr (# D7 , D8 , D8 , D8 #)) is non  empty;
end;
end;
definition
struct (QuantaleStr , multLoopStr) QuasiNetStr(# carrier -> set , L_join , L_meet , multF -> (BinOp of the carrier) , OneF -> (Element of the carrier) #);
end;
registration
cluster non  empty for QuasiNetStr;
existence
proof
set D9 = the non  empty set;
set D10 = the (BinOp of D9);
set D11 = the (Element of D9);
take QuasiNetStr (# D9 , D10 , D10 , D10 , D11 #);
thus L57: (the carrier of QuasiNetStr (# D9 , D10 , D10 , D10 , D11 #)) is non  empty;
end;
end;
definition
let C25 being non  empty multMagma;
attr C25 is  with_left-zero
means
(ex B39 being (Element of C25) st (for B40 being (Element of C25) holds ( B39 * B40 ) = B39));
attr C25 is  with_right-zero
means
(ex B41 being (Element of C25) st (for B42 being (Element of C25) holds ( B42 * B41 ) = B41));
end;
definition
let C26 being non  empty multMagma;
attr C26 is  with_zero
means
:L60: C26 is  with_left-zero  with_right-zero;
end;
registration
cluster  with_zero ->  with_left-zero  with_right-zero for non  empty non  empty non  empty non  empty multMagma;
coherence by L60;
cluster  with_left-zero  with_right-zero ->  with_zero for non  empty non  empty non  empty non  empty multMagma;
coherence by L60;
end;
registration
cluster  with_zero for non  empty non  empty non  empty non  empty multMagma;
existence
proof
set D12 = the set;
set D13 = the (BinOp of { D12 });
take D14 = multMagma (# { D12 } , D13 #);
reconsider D15 = D12 as (Element of D14) by TARSKI:def 1;
thus L63: D14 is  with_left-zero
proof
take D15;
thus L64: thesis by TARSKI:def 1;
end;

take D15;
thus L65: thesis by TARSKI:def 1;
end;
end;
definition
let C27 being non  empty QuantaleStr;
attr C27 is  right-distributive
means
:L67: (for B43 being (Element of C27) holds (for B44 being set holds ( B43 [*] ( "\/" (B44 , C27) ) ) = ( "\/" ({ ( B43 [*] B45 ) where B45 is (Element of C27) : B45 in B44 } , C27) )));
attr C27 is  left-distributive
means
:L68: (for B46 being (Element of C27) holds (for B47 being set holds ( ( "\/" (B47 , C27) ) [*] B46 ) = ( "\/" ({ ( B48 [*] B46 ) where B48 is (Element of C27) : B48 in B47 } , C27) )));
attr C27 is  times-additive
means
(for B49 , B50 , B51 being (Element of C27) holds (( ( B49 "\/" B50 ) [*] B51 ) = ( ( B49 [*] B51 ) "\/" ( B50 [*] B51 ) ) & ( B51 [*] ( B49 "\/" B50 ) ) = ( ( B51 [*] B49 ) "\/" ( B51 [*] B50 ) )));
attr C27 is  times-continuous
means
(for B52 , B53 being (Subset of C27) holds ((B52 is  directed & B53 is  directed) implies ( ( "\/" B52 ) [*] ( "\/" B53 ) ) = ( "\/" ({ ( B54 [*] B55 ) where B54 is (Element of C27) , B55 is (Element of C27) : (B54 in B52 & B55 in B53) } , C27) )));
end;
theorem
L70: (for B56 being non  empty QuantaleStr holds (( the LattStr of B56 ) = ( BooleLatt ( {} ) ) implies B56 is  associative  commutative  unital  with_zero  complete  right-distributive  left-distributive  Lattice-like))
proof
set D16 = ( BooleLatt ( {} ) );
let C28 being non  empty QuantaleStr;
set D17 = the (Element of C28);
assume L71: ( the LattStr of C28 ) = D16;
L72:
now
let C29 , C30 being (Element of C28);
L73: H1(D16) = { ( {} ) } by LATTICE3:def 1 , ZFMISC_1:1;
L74: C29 = ( {} ) by L73 , L71 , TARSKI:def 1;
thus L75: C29 = C30 by L74 , L71 , L73 , TARSKI:def 1;
end;
thus L76: H4(C28) is  associative
proof
let C31 , C32 , C33 being (Element of C28);
thus L77: thesis by L72;
end;

L78: ((for B57 , B58 , B59 being (Element of C28) holds ( B57 "/\" ( B58 "/\" B59 ) ) = ( ( B57 "/\" B58 ) "/\" B59 )) & (for B60 , B61 being (Element of C28) holds ( B60 "/\" ( B60 "\/" B61 ) ) = B60)) by L72;
thus L79: H4(C28) is  commutative
proof
let C34 , C35 being (Element of C28);
thus L80: thesis by L72;
end;

thus L81: H4(C28) is  having_a_unity
proof
take D17;
thus L82: D17 is_a_left_unity_wrt H4(C28)
proof
let C36 being (Element of C28);
thus L83: thesis by L72;
end;

let C37 being (Element of C28);
thus L84: thesis by L72;
end;

thus L85: C28 is  with_zero
proof
thus L86: C28 is  with_left-zero
proof
take D17;
thus L87: thesis by L72;
end;

take D17;
thus L88: thesis by L72;
end;

L89:
now
let C38 being set;
consider C39 being (Element of D16) such that L90: C38 is_less_than C39 and L91: (for B62 being (Element of D16) holds (C38 is_less_than B62 implies C39 [= B62)) by LATTICE3:def 18;
reconsider D18 = C39 as (Element of C28) by L71;
take D19 = D18;
thus L92: C38 is_less_than D19 by L71 , L90 , L25;
let C40 being (Element of C28);
reconsider D20 = C40 as (Element of D16) by L71;
assume L93: C38 is_less_than C40;
L94: C38 is_less_than D20 by L93 , L71 , L25;
L95: C39 [= D20 by L94 , L91;
thus L96: D19 [= C40 by L95 , L71 , L17;
end;
thus L97: (for B63 being set holds (ex B64 being (Element of C28) st (B63 is_less_than B64 & (for B65 being (Element of C28) holds (B63 is_less_than B65 implies B64 [= B65))))) by L89;
thus L98: C28 is  right-distributive
proof
let C41 being (Element of C28);
let C42 being set;
thus L99: thesis by L72;
end;

thus L100: C28 is  left-distributive
proof
let C43 being (Element of C28);
let C44 being set;
thus L101: thesis by L72;
end;

L102: ((for B66 , B67 being (Element of C28) holds ( ( B66 "/\" B67 ) "\/" B67 ) = B67) & (for B68 , B69 being (Element of C28) holds ( B68 "/\" B69 ) = ( B69 "/\" B68 ))) by L72;
L103: ((for B70 , B71 being (Element of C28) holds ( B70 "\/" B71 ) = ( B71 "\/" B70 )) & (for B72 , B73 , B74 being (Element of C28) holds ( B72 "\/" ( B73 "\/" B74 ) ) = ( ( B72 "\/" B73 ) "\/" B74 ))) by L72;
L104: C28 is  join-commutative  join-associative  meet-absorbing  meet-commutative  meet-associative  join-absorbing by L103 , L102 , L78 , LATTICES:def 4 , LATTICES:def 5 , LATTICES:def 6 , LATTICES:def 7 , LATTICES:def 8 , LATTICES:def 9;
thus L105: thesis by L104;
end;
registration
let C45 being non  empty set;
let C46 , C47 , C48 being (BinOp of C45);
cluster QuantaleStr (# C45 , C46 , C47 , C48 #) -> non  empty;
coherence;
end;
registration
cluster  associative  commutative  unital  with_zero  left-distributive  right-distributive  complete  Lattice-like for non  empty non  empty non  empty non  empty QuantaleStr;
existence
proof
set D21 = ( BooleLatt ( {} ) );
set D22 = the (BinOp of D21);
take QuantaleStr (# H1(D21) , H2(D21) , H3(D21) , D22 #);
thus L107: thesis by L70;
end;
end;
scheme LUBFraenkelDistr { F7() ->  complete  Lattice-like non  empty QuantaleStr , F8(set , set) -> (Element of F7()) , F9 , F10() -> set } : ( "\/" ({ ( "\/" ({ F8(B75 , B76) where B76 is (Element of F7()) : B76 in F10() } , F7()) ) where B75 is (Element of F7()) : B75 in F9() } , F7()) ) = ( "\/" ({ F8(B77 , B78) where B77 is (Element of F7()) , B78 is (Element of F7()) : (B77 in F9() & B78 in F10()) } , F7()) )
proof
set D23 = F7();
set D24 = F9();
set D25 = F10();
set D26 = { { F8(B79 , B80) where B80 is (Element of D23) : B80 in D25 } where B79 is (Element of D23) : B79 in D24 };
set D27 = { ( "\/" B81 ) where B81 is (Subset of D23) : B81 in D26 };
set D28 = { F8(B82 , B83) where B82 is (Element of D23) , B83 is (Element of D23) : (B82 in D24 & B83 in D25) };
L109: D27 = { ( "\/" ({ F8(B84 , B85) where B85 is (Element of D23) : B85 in D25 } , D23) ) where B84 is (Element of D23) : B84 in D24 }
proof
thus L110: D27 c= { ( "\/" ({ F8(B86 , B87) where B87 is (Element of D23) : B87 in D25 } , D23) ) where B86 is (Element of D23) : B86 in D24 }
proof
let R1 being set;
assume L111: R1 in D27;
consider C49 being (Subset of D23) such that L112: R1 = ( "\/" C49 ) and L113: C49 in D26 by L111;
L114: (ex B88 being (Element of D23) st (C49 = { F8(B88 , B89) where B89 is (Element of D23) : B89 in D25 } & B88 in D24)) by L113;
thus L115: thesis by L114 , L112;
end;

let R1 being set;
assume L116: R1 in { ( "\/" ({ F8(B90 , B91) where B91 is (Element of D23) : B91 in D25 } , D23) ) where B90 is (Element of D23) : B90 in D24 };
consider C50 being (Element of D23) such that L117: R1 = ( "\/" ({ F8(C50 , B92) where B92 is (Element of D23) : B92 in D25 } , D23) ) and L118: C50 in D24 by L116;
L119: { F8(C50 , B93) where B93 is (Element of D23) : B93 in D25 } c= H1(D23)
proof
let R2 being set;
assume L120: R2 in { F8(C50 , B94) where B94 is (Element of D23) : B94 in D25 };
L121: (ex B95 being (Element of D23) st (R2 = F8(C50 , B95) & B95 in D25)) by L120;
thus L122: thesis by L121;
end;
L123: { F8(C50 , B96) where B96 is (Element of D23) : B96 in D25 } in D26 by L118;
thus L124: thesis by L123 , L117 , L119;
end;
L125: D28 = ( union D26 )
proof
thus L126: D28 c= ( union D26 )
proof
let R1 being set;
assume L127: R1 in D28;
consider C51 , C52 being (Element of D23) such that L128: (R1 = F8(C51 , C52) & C51 in D24 & C52 in D25) by L127;
L129: (R1 in { F8(C51 , B97) where B97 is (Element of D23) : B97 in D25 } & { F8(C51 , B98) where B98 is (Element of D23) : B98 in D25 } in D26) by L128;
thus L130: thesis by L129 , TARSKI:def 4;
end;

let R1 being set;
assume L131: R1 in ( union D26 );
consider C53 being set such that L132: R1 in C53 and L133: C53 in D26 by L131 , TARSKI:def 4;
consider C54 being (Element of D23) such that L134: C53 = { F8(C54 , B99) where B99 is (Element of D23) : B99 in D25 } and L135: C54 in D24 by L133;
L136: (ex B100 being (Element of D23) st (R1 = F8(C54 , B100) & B100 in D25)) by L132 , L134;
thus L137: thesis by L136 , L135;
end;
L138: D26 c= ( bool H1(D23) )
proof
let R1 being set;
assume L139: R1 in D26;
consider C55 being (Element of D23) such that L140: R1 = { F8(C55 , B101) where B101 is (Element of D23) : B101 in D25 } and L141: C55 in D24 by L139;
L142: R1 c= H1(D23)
proof
let R2 being set;
assume L143: R2 in R1;
L144: (ex B102 being (Element of D23) st (R2 = F8(C55 , B102) & B102 in D25)) by L143 , L140;
thus L145: thesis by L144;
end;
thus L146: thesis by L142;
end;
thus L147: thesis by L138 , L109 , L125 , LATTICE3:48;
end;
theorem
L148: (for R4 being  left-distributive  right-distributive  complete  Lattice-like non  empty QuantaleStr holds (for B103 , B104 being set holds ( ( "\/" (B103 , R4) ) [*] ( "\/" (B104 , R4) ) ) = ( "\/" ({ ( R5 [*] R6 ) where R5 is (Element of R4) , R6 is (Element of R4) : (R5 in B103 & R6 in B104) } , R4) )))
proof
let R4 being  left-distributive  right-distributive  complete  Lattice-like non  empty QuantaleStr;
let C56 , C57 being set;
deffunc H5((Element of R4)) = ( $1 [*] ( "\/" (C57 , R4) ) );
deffunc H6((Element of R4)) = ( "\/" ({ ( $1 [*] R6 ) where R6 is (Element of R4) : R6 in C57 } , R4) );
defpred S1[ set ] means $1 in C56;
deffunc H7((Element of R4) , (Element of R4)) = ( $1 [*] $2 );
L149: (for R5 being (Element of R4) holds H5(R5) = H6(R5)) by L67;
L150: { H5(R7) where R7 is (Element of R4) : S1[ R7 ] } = { H6(R5) where R5 is (Element of R4) : S1[ R5 ] } from FRAENKEL:sch 5(L149);
thus L151: ( ( "\/" (C56 , R4) ) [*] ( "\/" (C57 , R4) ) ) = ( "\/" ({ ( "\/" ({ H7(B105 , B106) where B106 is (Element of R4) : B106 in C57 } , R4) ) where B105 is (Element of R4) : B105 in C56 } , R4) ) by L150 , L68
.= ( "\/" ({ H7(B107 , B108) where B107 is (Element of R4) , B108 is (Element of R4) : (B107 in C56 & B108 in C57) } , R4) ) from LUBFraenkelDistr;
end;
theorem
L152: (for R4 being  left-distributive  right-distributive  complete  Lattice-like non  empty QuantaleStr holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds (for R7 being (Element of R4) holds (( ( R5 "\/" R6 ) [*] R7 ) = ( ( R5 [*] R7 ) "\/" ( R6 [*] R7 ) ) & ( R7 [*] ( R5 "\/" R6 ) ) = ( ( R7 [*] R5 ) "\/" ( R7 [*] R6 ) ))))))
proof
let R4 being  left-distributive  right-distributive  complete  Lattice-like non  empty QuantaleStr;
let R5 being (Element of R4);
let R6 being (Element of R4);
let R7 being (Element of R4);
set D29 = { ( R8 [*] R7 ) where R8 is (Element of R4) : R8 in { R5 , R6 } };
set D30 = { ( R7 [*] R8 ) where R8 is (Element of R4) : R8 in { R5 , R6 } };
L153:
now
let R1 being set;
L154: (R5 in { R5 , R6 } & R6 in { R5 , R6 }) by TARSKI:def 2;
thus L155: ((R1 = ( R5 [*] R7 ) or R1 = ( R6 [*] R7 )) implies R1 in D29) by L154;
assume L156: R1 in D29;
L157: (ex R8 being (Element of R4) st (R1 = ( R8 [*] R7 ) & R8 in { R5 , R6 })) by L156;
thus L158: (R1 = ( R5 [*] R7 ) or R1 = ( R6 [*] R7 )) by L157 , TARSKI:def 2;
end;
L159: D29 = { ( R5 [*] R7 ) , ( R6 [*] R7 ) } by L153 , TARSKI:def 2;
L160:
now
let R1 being set;
L161: (R5 in { R5 , R6 } & R6 in { R5 , R6 }) by TARSKI:def 2;
thus L162: ((R1 = ( R7 [*] R5 ) or R1 = ( R7 [*] R6 )) implies R1 in D30) by L161;
assume L163: R1 in D30;
L164: (ex R8 being (Element of R4) st (R1 = ( R7 [*] R8 ) & R8 in { R5 , R6 })) by L163;
thus L165: (R1 = ( R7 [*] R5 ) or R1 = ( R7 [*] R6 )) by L164 , TARSKI:def 2;
end;
L166: D30 = { ( R7 [*] R5 ) , ( R7 [*] R6 ) } by L160 , TARSKI:def 2;
L167: ( R5 "\/" R6 ) = ( "\/" { R5 , R6 } ) by LATTICE3:43;
L168: ( ( R5 "\/" R6 ) [*] R7 ) = ( "\/" (D29 , R4) ) by L167 , L68;
thus L169: ( ( R5 "\/" R6 ) [*] R7 ) = ( ( R5 [*] R7 ) "\/" ( R6 [*] R7 ) ) by L168 , L159 , LATTICE3:43;
L170: ( R7 [*] ( R5 "\/" R6 ) ) = ( "\/" (D30 , R4) ) by L167 , L67;
thus L171: thesis by L170 , L166 , LATTICE3:43;
end;
registration
let C58 being non  empty set;
let C59 , C60 , C61 being (BinOp of C58);
let C62 being (Element of C58);
cluster QuasiNetStr (# C58 , C59 , C60 , C61 , C62 #) -> non  empty;
coherence;
end;
registration
cluster  complete  Lattice-like for non  empty non  empty non  empty non  empty QuasiNetStr;
existence
proof
set D31 = ( BooleLatt ( {} ) );
set D32 = the (Element of D31);
set D33 = the (BinOp of D31);
take QuasiNetStr (# H1(D31) , H2(D31) , H3(D31) , D33 , D32 #);
thus L173: thesis by L70;
end;
end;
registration
cluster  left-distributive  right-distributive ->  times-continuous  times-additive for  complete  Lattice-like non  empty  complete  Lattice-like non  empty  complete  Lattice-like non  empty  complete  Lattice-like non  empty QuasiNetStr;
coherence
proof
let C63 being  complete  Lattice-like non  empty QuasiNetStr;
assume L175: C63 is  left-distributive  right-distributive;
thus L176: ((for B109 , B110 being (Subset of C63) holds ((B109 is  directed & B110 is  directed) implies ( ( "\/" (B109 , C63) ) [*] ( "\/" (B110 , C63) ) ) = ( "\/" ({ ( B111 [*] B112 ) where B111 is (Element of C63) , B112 is (Element of C63) : (B111 in B109 & B112 in B110) } , C63) ))) & (for B113 , B114 , B115 being (Element of C63) holds (( ( B113 "\/" B114 ) [*] B115 ) = ( ( B113 [*] B115 ) "\/" ( B114 [*] B115 ) ) & ( B115 [*] ( B113 "\/" B114 ) ) = ( ( B115 [*] B113 ) "\/" ( B115 [*] B114 ) )))) by L175 , L148 , L152;
end;
end;
registration
cluster  associative  commutative  unital  with_zero  with_left-zero  left-distributive  right-distributive  complete  Lattice-like for non  empty non  empty non  empty non  empty QuasiNetStr;
existence
proof
set D34 = ( BooleLatt ( {} ) );
set D35 = the (Element of D34);
set D36 = the (BinOp of D34);
take D37 = QuasiNetStr (# H1(D34) , H2(D34) , H3(D34) , D36 , D35 #);
L178: D37 is  with_zero  unital by L70;
thus L179: thesis by L178 , L70;
end;
end;
definition
mode Quantale
 is  associative  left-distributive  right-distributive  complete  Lattice-like non  empty QuantaleStr;
mode QuasiNet
 is  unital  associative  with_left-zero  times-continuous  times-additive  complete  Lattice-like non  empty QuasiNetStr;
end;
definition
mode BlikleNet
 is  with_zero non  empty QuasiNet;
end;
theorem
L183: (for B116 being  unital non  empty QuasiNetStr holds (B116 is Quantale implies B116 is BlikleNet))
proof
defpred S2[ set ] means $1 in ( {} );
let C64 being  unital non  empty QuasiNetStr;
assume L184: C64 is Quantale;
reconsider D38 = C64 as Quantale by L184;
L185: ( Bottom D38 ) = ( "\/" (( {} ) , D38) ) by LATTICE3:49;
L186: (not (ex B117 being (Element of D38) st S2[ B117 ]));
L187: D38 is  with_zero
proof
thus L188:now
reconsider D39 = ( Bottom D38 ) as (Element of D38);
take D40 = D39;
let C65 being (Element of D38);
deffunc H8((Element of D38)) = ( $1 [*] C65 );
L189: { H8(B118) where B118 is (Element of D38) : S2[ B118 ] } = ( {} ) from EmptyFraenkel(L186);
thus L190: ( D40 [*] C65 ) = D40 by L189 , L185 , L68;
end;
take ( Bottom D38 );
let C66 being (Element of D38);
deffunc H9((Element of D38)) = ( C66 [*] $1 );
L191: { H9(B119) where B119 is (Element of D38) : S2[ B119 ] } = ( {} ) from EmptyFraenkel(L186);
thus L192: thesis by L191 , L185 , L67;
end;
thus L193: thesis by L187;
end;
theorem
L194: (for R9 being Quantale holds (for R10 being (Element of R9) holds (for R12 being (Element of R9) holds (for R14 being (Element of R9) holds (R10 [= R12 implies (( R10 [*] R14 ) [= ( R12 [*] R14 ) & ( R14 [*] R10 ) [= ( R14 [*] R12 )))))))
proof
let R9 being Quantale;
let R10 being (Element of R9);
let R12 being (Element of R9);
let R14 being (Element of R9);
assume L195: R10 [= R12;
thus L196: ( ( R10 [*] R14 ) "\/" ( R12 [*] R14 ) ) = ( ( R10 "\/" R12 ) [*] R14 ) by L152
.= ( R12 [*] R14 ) by L195 , LATTICES:def 3;
thus L197: ( ( R14 [*] R10 ) "\/" ( R14 [*] R12 ) ) = ( R14 [*] ( R10 "\/" R12 ) ) by L152
.= ( R14 [*] R12 ) by L195 , LATTICES:def 3;
end;
theorem
L198: (for R9 being Quantale holds (for R10 being (Element of R9) holds (for R12 being (Element of R9) holds (for R14 being (Element of R9) holds (for R15 being (Element of R9) holds ((R10 [= R12 & R14 [= R15) implies ( R10 [*] R14 ) [= ( R12 [*] R15 )))))))
proof
let R9 being Quantale;
let R10 being (Element of R9);
let R12 being (Element of R9);
let R14 being (Element of R9);
let R15 being (Element of R9);
assume L199: (R10 [= R12 & R14 [= R15);
L200: (( R10 [*] R14 ) [= ( R12 [*] R14 ) & ( R12 [*] R14 ) [= ( R12 [*] R15 )) by L199 , L194;
thus L201: thesis by L200 , LATTICES:7;
end;
definition
let C67 being Function;
attr C67 is  idempotent
means
( C67 * C67 ) = C67;
end;
L203: (for B120 being non  empty set holds (for B121 being (UnOp of B120) holds (B121 is  idempotent implies (for B122 being (Element of B120) holds ( B121 . ( B121 . B122 ) ) = ( B121 . B122 )))))
proof
let C68 being non  empty set;
let C69 being (UnOp of C68);
assume L204: ( C69 * C69 ) = C69;
thus L205: thesis by L204 , FUNCT_2:15;
end;
definition
let C70 being non  empty LattStr;
let C71 being (UnOp of C70);
attr C71 is  inflationary
means
(for B123 being (Element of C70) holds B123 [= ( C71 . B123 ));
attr C71 is  deflationary
means
(for B124 being (Element of C70) holds ( C71 . B124 ) [= B124);
attr C71 is  monotone
means
:L206: (for B125 , B126 being (Element of C70) holds (B125 [= B126 implies ( C71 . B125 ) [= ( C71 . B126 )));
attr C71 is  \/-distributive
means
(for B127 being (Subset of C70) holds ( C71 . ( "\/" B127 ) ) [= ( "\/" ({ ( C71 . B128 ) where B128 is (Element of C70) : B128 in B127 } , C70) ));
end;
registration
let C72 being Lattice;
cluster  inflationary  deflationary  monotone for (UnOp of C72);
existence
proof
reconsider D41 = ( id (the carrier of C72) ) as (UnOp of C72);
take D41;
thus L208: D41 is  inflationary
proof
let C73 being (Element of C72);
L209: C73 [= C73;
thus L210: thesis by L209 , FUNCT_1:17;
end;

thus L211: D41 is  deflationary
proof
let C74 being (Element of C72);
L212: C74 [= C74;
thus L213: thesis by L212 , FUNCT_1:17;
end;

let C75 , C76 being (Element of C72);
L214: ( D41 . C75 ) = C75 by FUNCT_1:17;
thus L215: thesis by L214 , FUNCT_1:17;
end;
end;
theorem
L217: (for B129 being  complete Lattice holds (for B130 being (UnOp of B129) holds (B130 is  monotone implies (B130 is  \/-distributive iff (for B131 being (Subset of B129) holds ( B130 . ( "\/" B131 ) ) = ( "\/" ({ ( B130 . B132 ) where B132 is (Element of B129) : B132 in B131 } , B129) ))))))
proof
let C77 being  complete Lattice;
let C78 being (UnOp of C77);
assume that
L218: C78 is  monotone;
thus L219: (C78 is  \/-distributive implies (for B133 being (Subset of C77) holds ( C78 . ( "\/" B133 ) ) = ( "\/" ({ ( C78 . B134 ) where B134 is (Element of C77) : B134 in B133 } , C77) )))
proof
assume L220: (for B135 being (Subset of C77) holds ( C78 . ( "\/" B135 ) ) [= ( "\/" ({ ( C78 . B136 ) where B136 is (Element of C77) : B136 in B135 } , C77) ));
let C79 being (Subset of C77);
L221: { ( C78 . B137 ) where B137 is (Element of C77) : B137 in C79 } is_less_than ( C78 . ( "\/" C79 ) )
proof
let C80 being (Element of C77);
assume L222: C80 in { ( C78 . B138 ) where B138 is (Element of C77) : B138 in C79 };
consider C81 being (Element of C77) such that L223: C80 = ( C78 . C81 ) and L224: C81 in C79 by L222;
L225: C81 [= ( "\/" C79 ) by L224 , LATTICE3:38;
thus L226: thesis by L225 , L218 , L223 , L206;
end;
L227: ( "\/" ({ ( C78 . B139 ) where B139 is (Element of C77) : B139 in C79 } , C77) ) [= ( C78 . ( "\/" C79 ) ) by L221 , LATTICE3:def 21;
L228: ( C78 . ( "\/" C79 ) ) [= ( "\/" ({ ( C78 . B140 ) where B140 is (Element of C77) : B140 in C79 } , C77) ) by L220;
thus L229: thesis by L228 , L227 , LATTICES:8;
end;

assume L230: (for B141 being (Subset of C77) holds ( C78 . ( "\/" B141 ) ) = ( "\/" ({ ( C78 . B142 ) where B142 is (Element of C77) : B142 in B141 } , C77) ));
let C82 being (Subset of C77);
L231: ( C78 . ( "\/" C82 ) ) [= ( C78 . ( "\/" C82 ) );
thus L232: thesis by L231 , L230;
end;
definition
let C83 being non  empty QuantaleStr;
let C84 being (UnOp of C83);
attr C84 is  times-monotone
means
(for B143 , B144 being (Element of C83) holds ( ( C84 . B143 ) [*] ( C84 . B144 ) ) [= ( C84 . ( B143 [*] B144 ) ));
end;
definition
let C85 being non  empty QuantaleStr;
let C86 , C87 being (Element of C85);
func C86 -r> C87 -> (Element of C85) equals
( "\/" ({ B145 where B145 is (Element of C85) : ( B145 [*] C86 ) [= C87 } , C85) );
correctness;
func C86 -l> C87 -> (Element of C85) equals
( "\/" ({ B146 where B146 is (Element of C85) : ( C86 [*] B146 ) [= C87 } , C85) );
correctness;
end;
theorem
L235: (for R9 being Quantale holds (for R10 being (Element of R9) holds (for R12 being (Element of R9) holds (for R14 being (Element of R9) holds (( R10 [*] R12 ) [= R14 iff R12 [= ( R10 -l> R14 ))))))
proof
let R9 being Quantale;
let R10 being (Element of R9);
let R12 being (Element of R9);
let R14 being (Element of R9);
set D42 = { R15 where R15 is (Element of R9) : ( R10 [*] R15 ) [= R14 };
L236: D42 c= H1(R9)
proof
let R1 being set;
assume L237: R1 in D42;
L238: (ex R15 being (Element of R9) st (R1 = R15 & ( R10 [*] R15 ) [= R14)) by L237;
thus L239: thesis by L238;
end;
reconsider D43 = D42 as (Subset of R9) by L236;
thus L240: (( R10 [*] R12 ) [= R14 implies R12 [= ( R10 -l> R14 ))
proof
assume L241: ( R10 [*] R12 ) [= R14;
L242: R12 in D43 by L241;
thus L243: thesis by L242 , LATTICE3:38;
end;

deffunc H10((Element of R9)) = ( R10 [*] $1 );
defpred S3[ set ] means $1 in D43;
defpred S4[ (Element of R9) ] means ( R10 [*] $1 ) [= R14;
assume L244: R12 [= ( R10 -l> R14 );
L245: ( R10 [*] R12 ) [= ( R10 [*] ( "\/" D43 ) ) by L244 , L194;
L246:
now
let R15 being (Element of R9);
assume L247: R15 in D43;
L248: (ex R16 being (Element of R9) st (R15 = R16 & ( R10 [*] R16 ) [= R14)) by L247;
thus L249: ( R10 [*] R15 ) [= R14 by L248;
end;
L250: (for R15 being (Element of R9) holds (S3[ R15 ] iff S4[ R15 ])) by L246;
L251: { H10(R16) where R16 is (Element of R9) : S3[ R16 ] } = { H10(R17) where R17 is (Element of R9) : S4[ R17 ] } from FRAENKEL:sch 3(L250);
L252: { ( R10 [*] R15 ) where R15 is (Element of R9) : R15 in D43 } is_less_than R14
proof
let R16 being (Element of R9);
assume L253: R16 in { ( R10 [*] R15 ) where R15 is (Element of R9) : R15 in D43 };
L254: (ex R17 being (Element of R9) st (R16 = ( R10 [*] R17 ) & ( R10 [*] R17 ) [= R14)) by L253 , L251;
thus L255: thesis by L254;
end;
L256: ( R10 [*] ( "\/" D43 ) ) = ( "\/" ({ ( R10 [*] R15 ) where R15 is (Element of R9) : R15 in D43 } , R9) ) by L67;
L257: ( R10 [*] ( "\/" D43 ) ) [= R14 by L256 , L252 , LATTICE3:def 21;
thus L258: thesis by L257 , L245 , LATTICES:7;
end;
theorem
L259: (for R9 being Quantale holds (for R10 being (Element of R9) holds (for R12 being (Element of R9) holds (for R14 being (Element of R9) holds (( R10 [*] R12 ) [= R14 iff R10 [= ( R12 -r> R14 ))))))
proof
let R9 being Quantale;
let R10 being (Element of R9);
let R12 being (Element of R9);
let R14 being (Element of R9);
set D44 = { R15 where R15 is (Element of R9) : ( R15 [*] R12 ) [= R14 };
L260: D44 c= H1(R9)
proof
let R1 being set;
assume L261: R1 in D44;
L262: (ex R15 being (Element of R9) st (R1 = R15 & ( R15 [*] R12 ) [= R14)) by L261;
thus L263: thesis by L262;
end;
reconsider D45 = D44 as (Subset of R9) by L260;
thus L264: (( R10 [*] R12 ) [= R14 implies R10 [= ( R12 -r> R14 ))
proof
assume L265: ( R10 [*] R12 ) [= R14;
L266: R10 in D45 by L265;
thus L267: thesis by L266 , LATTICE3:38;
end;

deffunc H11((Element of R9)) = ( $1 [*] R12 );
defpred S5[ set ] means $1 in D45;
defpred S6[ (Element of R9) ] means ( $1 [*] R12 ) [= R14;
assume L268: R10 [= ( R12 -r> R14 );
L269: ( R10 [*] R12 ) [= ( ( "\/" D45 ) [*] R12 ) by L268 , L194;
L270:
now
let R15 being (Element of R9);
assume L271: R15 in D45;
L272: (ex R16 being (Element of R9) st (R15 = R16 & ( R16 [*] R12 ) [= R14)) by L271;
thus L273: ( R15 [*] R12 ) [= R14 by L272;
end;
L274: (for R15 being (Element of R9) holds (S5[ R15 ] iff S6[ R15 ])) by L270;
L275: { H11(R16) where R16 is (Element of R9) : S5[ R16 ] } = { H11(R17) where R17 is (Element of R9) : S6[ R17 ] } from FRAENKEL:sch 3(L274);
L276: { ( R15 [*] R12 ) where R15 is (Element of R9) : R15 in D45 } is_less_than R14
proof
let R16 being (Element of R9);
assume L277: R16 in { ( R15 [*] R12 ) where R15 is (Element of R9) : R15 in D45 };
L278: (ex R17 being (Element of R9) st (R16 = ( R17 [*] R12 ) & ( R17 [*] R12 ) [= R14)) by L277 , L275;
thus L279: thesis by L278;
end;
L280: ( ( "\/" D45 ) [*] R12 ) = ( "\/" ({ ( R15 [*] R12 ) where R15 is (Element of R9) : R15 in D45 } , R9) ) by L68;
L281: ( ( "\/" D45 ) [*] R12 ) [= R14 by L280 , L276 , LATTICE3:def 21;
thus L282: thesis by L281 , L269 , LATTICES:7;
end;
theorem
L283: (for B147 being Quantale holds (for B148 , B149 , B150 being (Element of B147) holds (B149 [= B150 implies (( B150 -r> B148 ) [= ( B149 -r> B148 ) & ( B150 -l> B148 ) [= ( B149 -l> B148 )))))
proof
let C88 being Quantale;
let C89 , C90 , C91 being (Element of C88);
assume that
L284: C90 [= C91;
L285: { B151 where B151 is (Element of C88) : ( B151 [*] C91 ) [= C89 } c= { B152 where B152 is (Element of C88) : ( B152 [*] C90 ) [= C89 }
proof
let R1 being set;
assume L286: R1 in { B153 where B153 is (Element of C88) : ( B153 [*] C91 ) [= C89 };
consider C92 being (Element of C88) such that L287: R1 = C92 and L288: ( C92 [*] C91 ) [= C89 by L286;
L289: ( C92 [*] C90 ) [= ( C92 [*] C91 ) by L284 , L194;
L290: ( C92 [*] C90 ) [= C89 by L289 , L288 , LATTICES:7;
thus L291: thesis by L290 , L287;
end;
thus L292: ( C91 -r> C89 ) [= ( C90 -r> C89 ) by L285 , LATTICE3:45;
L293: { B154 where B154 is (Element of C88) : ( C91 [*] B154 ) [= C89 } c= { B155 where B155 is (Element of C88) : ( C90 [*] B155 ) [= C89 }
proof
let R1 being set;
assume L294: R1 in { B156 where B156 is (Element of C88) : ( C91 [*] B156 ) [= C89 };
consider C93 being (Element of C88) such that L295: R1 = C93 and L296: ( C91 [*] C93 ) [= C89 by L294;
L297: ( C90 [*] C93 ) [= ( C91 [*] C93 ) by L284 , L194;
L298: ( C90 [*] C93 ) [= C89 by L297 , L296 , LATTICES:7;
thus L299: thesis by L298 , L295;
end;
thus L300: thesis by L293 , LATTICE3:45;
end;
theorem
L301: (for B157 being Quantale holds (for B158 being (Element of B157) holds (for B159 being (UnOp of B157) holds ((for B160 being (Element of B157) holds ( B159 . B160 ) = ( ( B160 -r> B158 ) -r> B158 )) implies B159 is  monotone))))
proof
let C94 being Quantale;
let C95 being (Element of C94);
let C96 being (UnOp of C94);
assume that
L302: (for B161 being (Element of C94) holds ( C96 . B161 ) = ( ( B161 -r> C95 ) -r> C95 ));
thus L303: C96 is  monotone
proof
let C97 , C98 being (Element of C94);
assume L304: C97 [= C98;
L305: ( C98 -r> C95 ) [= ( C97 -r> C95 ) by L304 , L283;
L306: ( ( C97 -r> C95 ) -r> C95 ) [= ( ( C98 -r> C95 ) -r> C95 ) by L305 , L283;
L307: ( ( C97 -r> C95 ) -r> C95 ) = ( C96 . C97 ) by L302;
thus L308: thesis by L307 , L302 , L306;
end;

end;
definition
let C99 being non  empty QuantaleStr;
let C100 being (Element of C99);
attr C100 is  dualizing
means
:L304: (for B162 being (Element of C99) holds (( ( B162 -r> C100 ) -l> C100 ) = B162 & ( ( B162 -l> C100 ) -r> C100 ) = B162));
attr C100 is  cyclic
means
:L305: (for B163 being (Element of C99) holds ( B163 -r> C100 ) = ( B163 -l> C100 ));
end;
theorem
L307: (for R9 being Quantale holds (for R14 being (Element of R9) holds (R14 is  cyclic iff (for R10 being (Element of R9) holds (for R12 being (Element of R9) holds (( R10 [*] R12 ) [= R14 implies ( R12 [*] R10 ) [= R14))))))
proof
let R9 being Quantale;
let R14 being (Element of R9);
thus L308: (R14 is  cyclic implies (for R10 being (Element of R9) holds (for R12 being (Element of R9) holds (( R10 [*] R12 ) [= R14 implies ( R12 [*] R10 ) [= R14))))
proof
assume L309: (for R10 being (Element of R9) holds ( R10 -r> R14 ) = ( R10 -l> R14 ));
let R10 being (Element of R9);
let R12 being (Element of R9);
assume L310: ( R10 [*] R12 ) [= R14;
L311: R10 [= ( R12 -r> R14 ) by L310 , L259;
L312: R10 [= ( R12 -l> R14 ) by L311 , L309;
thus L313: thesis by L312 , L235;
end;

assume L314: (for R10 being (Element of R9) holds (for R12 being (Element of R9) holds (( R10 [*] R12 ) [= R14 implies ( R12 [*] R10 ) [= R14)));
let R10 being (Element of R9);
set D46 = { R16 where R16 is (Element of R9) : ( R16 [*] R10 ) [= R14 };
set D47 = { R17 where R17 is (Element of R9) : ( R10 [*] R17 ) [= R14 };
L315: D46 = D47
proof
thus L316: D46 c= D47
proof
let R1 being set;
assume L317: R1 in D46;
consider R15 being (Element of R9) such that L318: R1 = R15 and L319: ( R15 [*] R10 ) [= R14 by L317;
L320: ( R10 [*] R15 ) [= R14 by L314 , L319;
thus L321: thesis by L320 , L318;
end;

let R1 being set;
assume L322: R1 in D47;
consider R15 being (Element of R9) such that L323: R1 = R15 and L324: ( R10 [*] R15 ) [= R14 by L322;
L325: ( R15 [*] R10 ) [= R14 by L314 , L324;
thus L326: thesis by L325 , L323;
end;
thus L327: thesis by L315;
end;
theorem
L328: (for B164 being Quantale holds (for B165 , B166 being (Element of B164) holds (B165 is  cyclic implies (B166 [= ( ( B166 -r> B165 ) -r> B165 ) & B166 [= ( ( B166 -l> B165 ) -l> B165 )))))
proof
let R9 being Quantale;
let C101 , C102 being (Element of R9);
assume that
L329: C101 is  cyclic;
L330: { R12 where R12 is (Element of R9) : R12 [= C102 } c= { R14 where R14 is (Element of R9) : ( R14 [*] ( C102 -r> C101 ) ) [= C101 }
proof
let R1 being set;
assume L331: R1 in { R12 where R12 is (Element of R9) : R12 [= C102 };
consider R12 being (Element of R9) such that L332: R1 = R12 and L333: R12 [= C102 by L331;
L334: ( ( R12 -r> C101 ) [*] R12 ) [= C101 by L259;
L335: ( R12 [*] ( R12 -r> C101 ) ) [= C101 by L334 , L329 , L307;
L336: ( C102 -r> C101 ) [= ( R12 -r> C101 ) by L333 , L283;
L337: ( R12 [*] ( C102 -r> C101 ) ) [= ( R12 [*] ( R12 -r> C101 ) ) by L336 , L194;
L338: ( R12 [*] ( C102 -r> C101 ) ) [= C101 by L337 , L335 , LATTICES:7;
thus L339: thesis by L338 , L332;
end;
L340: { R12 where R12 is (Element of R9) : R12 [= C102 } c= { R14 where R14 is (Element of R9) : ( ( C102 -l> C101 ) [*] R14 ) [= C101 }
proof
let R1 being set;
assume L341: R1 in { R12 where R12 is (Element of R9) : R12 [= C102 };
consider R12 being (Element of R9) such that L342: R1 = R12 and L343: R12 [= C102 by L341;
L344: ( R12 [*] ( R12 -l> C101 ) ) [= C101 by L235;
L345: ( ( R12 -l> C101 ) [*] R12 ) [= C101 by L344 , L329 , L307;
L346: ( C102 -l> C101 ) [= ( R12 -l> C101 ) by L343 , L283;
L347: ( ( C102 -l> C101 ) [*] R12 ) [= ( ( R12 -l> C101 ) [*] R12 ) by L346 , L194;
L348: ( ( C102 -l> C101 ) [*] R12 ) [= C101 by L347 , L345 , LATTICES:7;
thus L349: thesis by L348 , L342;
end;
L350: C102 = ( "\/" ({ R15 where R15 is (Element of R9) : R15 [= C102 } , R9) ) by LATTICE3:44;
thus L351: C102 [= ( ( C102 -r> C101 ) -r> C101 ) by L350 , L330 , LATTICE3:45;
L352: C102 = ( "\/" ({ R15 where R15 is (Element of R9) : R15 [= C102 } , R9) ) by LATTICE3:44;
thus L353: thesis by L352 , L340 , LATTICE3:45;
end;
theorem
L354: (for B167 being Quantale holds (for B168 , B169 being (Element of B167) holds (B168 is  cyclic implies (( B169 -r> B168 ) = ( ( ( B169 -r> B168 ) -r> B168 ) -r> B168 ) & ( B169 -l> B168 ) = ( ( ( B169 -l> B168 ) -l> B168 ) -l> B168 )))))
proof
let R9 being Quantale;
let C103 , C104 being (Element of R9);
assume L355: C103 is  cyclic;
L356: C104 [= ( ( C104 -r> C103 ) -r> C103 ) by L355 , L328;
L357: ( ( ( C104 -r> C103 ) -r> C103 ) -r> C103 ) [= ( C104 -r> C103 ) by L356 , L283;
L358: C104 [= ( ( C104 -l> C103 ) -l> C103 ) by L355 , L328;
L359: ( ( ( C104 -l> C103 ) -l> C103 ) -l> C103 ) [= ( C104 -l> C103 ) by L358 , L283;
L360: (( C104 -r> C103 ) [= ( ( ( C104 -r> C103 ) -r> C103 ) -r> C103 ) & ( C104 -l> C103 ) [= ( ( ( C104 -l> C103 ) -l> C103 ) -l> C103 )) by L355 , L328;
thus L361: thesis by L360 , L357 , L359 , LATTICES:8;
end;
theorem
L362: (for B170 being Quantale holds (for B171 , B172 , B173 being (Element of B170) holds ( ( ( B172 -r> B171 ) -r> B171 ) [*] ( ( B173 -r> B171 ) -r> B171 ) ) [= ( ( ( B172 [*] B173 ) -r> B171 ) -r> B171 )))
proof
let R9 being Quantale;
let C105 , C106 , C107 being (Element of R9);
deffunc H12((Element of R9)) = { R14 where R14 is (Element of R9) : ( R14 [*] ( $1 -r> C105 ) ) [= C105 };
L363: { ( R11 [*] R13 ) where R11 is (Element of R9) , R13 is (Element of R9) : (R11 in H12(C106) & R13 in H12(C107)) } c= H12(( C106 [*] C107 ))
proof
defpred S7[ (Element of R9) ] means ( $1 [*] ( C106 [*] C107 ) ) [= C105;
deffunc H13((Element of R9)) = $1;
let R1 being set;
set D48 = { H13(R14) where R14 is (Element of R9) : S7[ R14 ] };
assume L364: R1 in { ( R11 [*] R13 ) where R11 is (Element of R9) , R13 is (Element of R9) : (R11 in H12(C106) & R13 in H12(C107)) };
consider R11 being (Element of R9), R13 being (Element of R9) such that L365: R1 = ( R11 [*] R13 ) and L366: R11 in H12(C106) and L367: R13 in H12(C107) by L364;
deffunc H14((Element of R9)) = ( ( R11 [*] R13 ) [*] $1 );
set D49 = { H14(H13(R14)) where R14 is (Element of R9) : S7[ R14 ] };
L368: (ex R14 being (Element of R9) st (R13 = R14 & ( R14 [*] ( C107 -r> C105 ) ) [= C105)) by L367;
L369: (ex R14 being (Element of R9) st (R11 = R14 & ( R14 [*] ( C106 -r> C105 ) ) [= C105)) by L366;
L370: D49 is_less_than C105
proof
let R15 being (Element of R9);
assume L371: R15 in D49;
consider R14 being (Element of R9) such that L372: R15 = ( ( R11 [*] R13 ) [*] R14 ) and L373: ( R14 [*] ( C106 [*] C107 ) ) [= C105 by L371;
L374: ( C107 -r> C105 ) [= ( R13 -l> C105 ) by L368 , L235;
L375: ( ( R14 [*] C106 ) [*] C107 ) [= C105 by L373 , GROUP_1:def 3;
L376: ( R14 [*] C106 ) [= ( C107 -r> C105 ) by L375 , L259;
L377: ( R14 [*] C106 ) [= ( R13 -l> C105 ) by L376 , L374 , LATTICES:7;
L378: ( R13 [*] ( R14 [*] C106 ) ) [= C105 by L377 , L235;
L379: ( ( R13 [*] R14 ) [*] C106 ) [= C105 by L378 , GROUP_1:def 3;
L380: ( R13 [*] R14 ) [= ( C106 -r> C105 ) by L379 , L259;
L381: ( C106 -r> C105 ) [= ( R11 -l> C105 ) by L369 , L235;
L382: ( R13 [*] R14 ) [= ( R11 -l> C105 ) by L381 , L380 , LATTICES:7;
L383: ( R11 [*] ( R13 [*] R14 ) ) [= C105 by L382 , L235;
thus L384: R15 [= C105 by L383 , L372 , GROUP_1:def 3;
end;
L385: { H14(R14) where R14 is (Element of R9) : R14 in D48 } = D49 from DenestFraenkel;
L386: ( ( R11 [*] R13 ) [*] ( ( C106 [*] C107 ) -r> C105 ) ) = ( "\/" (D49 , R9) ) by L385 , L67;
L387: ( ( R11 [*] R13 ) [*] ( ( C106 [*] C107 ) -r> C105 ) ) [= C105 by L386 , L370 , LATTICE3:def 21;
thus L388: thesis by L387 , L365;
end;
L389: ( ( ( C106 -r> C105 ) -r> C105 ) [*] ( ( C107 -r> C105 ) -r> C105 ) ) = ( "\/" ({ ( R11 [*] R13 ) where R11 is (Element of R9) , R13 is (Element of R9) : (R11 in H12(C106) & R13 in H12(C107)) } , R9) ) by L148;
thus L390: thesis by L389 , L363 , LATTICE3:45;
end;
theorem
L391: (for R9 being Quantale holds (for R18 being (Element of R9) holds (R18 is  dualizing implies (R9 is  unital & ( the_unity_wrt (the multF of R9) ) = ( R18 -r> R18 ) & ( the_unity_wrt (the multF of R9) ) = ( R18 -l> R18 )))))
proof
let R9 being Quantale;
let R18 being (Element of R9);
set D50 = ( R18 -l> R18 );
set D51 = ( R18 -r> R18 );
assume L392: (for R10 being (Element of R9) holds (( ( R10 -r> R18 ) -l> R18 ) = R10 & ( ( R10 -l> R18 ) -r> R18 ) = R10));
L393:
now
deffunc H15(set) = $1;
let R10 being (Element of R9);
defpred S8[ (Element of R9) ] means ( $1 [*] ( R10 [*] D50 ) ) [= R18;
defpred S9[ (Element of R9) ] means ( $1 [*] R10 ) [= R18;
defpred S10[ (Element of R9) ] means ( ( D51 [*] R10 ) [*] $1 ) [= R18;
defpred S11[ (Element of R9) ] means ( R10 [*] $1 ) [= R18;
L394: (for R12 being (Element of R9) holds (S8[ R12 ] iff S9[ R12 ]))
proof
let R12 being (Element of R9);
L395: (( R12 [*] ( R10 [*] D50 ) ) = ( ( R12 [*] R10 ) [*] D50 ) & ( D50 -r> R18 ) = R18) by L392 , GROUP_1:def 3;
thus L396: thesis by L395 , L259;
end;
L397: { H15(R12) where R12 is (Element of R9) : S8[ R12 ] } = { H15(R14) where R14 is (Element of R9) : S9[ R14 ] } from FRAENKEL:sch 3(L394);
thus L398: ( R10 [*] D50 ) = ( ( ( R10 [*] D50 ) -r> R18 ) -l> R18 ) by L392
.= ( ( R10 -r> R18 ) -l> R18 ) by L397
.= R10 by L392;
L399: (for R12 being (Element of R9) holds (S10[ R12 ] iff S11[ R12 ]))
proof
let R12 being (Element of R9);
L400: (( D51 [*] ( R10 [*] R12 ) ) = ( ( D51 [*] R10 ) [*] R12 ) & ( D51 -l> R18 ) = R18) by L392 , GROUP_1:def 3;
thus L401: thesis by L400 , L235;
end;
L402: { H15(R12) where R12 is (Element of R9) : S10[ R12 ] } = { H15(R14) where R14 is (Element of R9) : S11[ R14 ] } from FRAENKEL:sch 3(L399);
thus L403: ( D51 [*] R10 ) = ( ( ( D51 [*] R10 ) -l> R18 ) -r> R18 ) by L392
.= ( ( R10 -l> R18 ) -r> R18 ) by L402
.= R10 by L392;
end;
L404: D50 is_a_right_unity_wrt H4(R9)
proof
let R10 being (Element of R9);
thus L405: ( H4(R9) . (R10 , D50) ) = ( R10 [*] D50 )
.= R10 by L393;
end;
L406: D50 = ( D51 [*] D50 ) by L393;
L407: D50 is_a_left_unity_wrt H4(R9)
proof
let R10 being (Element of R9);
thus L408: ( H4(R9) . (D50 , R10) ) = ( D51 [*] R10 ) by L393 , L406
.= R10 by L393;
end;
L409: D50 is_a_unity_wrt H4(R9) by L407 , L404 , BINOP_1:def 7;
thus L410: H4(R9) is  having_a_unity by L409 , SETWISEO:def 2;
L411: D51 = ( D51 [*] D50 ) by L393;
thus L412: thesis by L411 , L406 , L409 , BINOP_1:def 8;
end;
theorem
L413: (for R9 being Quantale holds (for R10 being (Element of R9) holds (for R12 being (Element of R9) holds (for R14 being (Element of R9) holds (R10 is  dualizing implies (( R12 -r> R14 ) = ( ( R12 [*] ( R14 -l> R10 ) ) -r> R10 ) & ( R12 -l> R14 ) = ( ( ( R14 -r> R10 ) [*] R12 ) -l> R10 )))))))
proof
let R9 being Quantale;
let R10 being (Element of R9);
let R12 being (Element of R9);
let R14 being (Element of R9);
deffunc H16(set) = $1;
defpred S12[ (Element of R9) ] means ( $1 [*] R12 ) [= R14;
defpred S13[ (Element of R9) ] means ( $1 [*] ( R12 [*] ( R14 -l> R10 ) ) ) [= R10;
defpred S14[ (Element of R9) ] means ( R12 [*] $1 ) [= R14;
defpred S15[ (Element of R9) ] means ( ( ( R14 -r> R10 ) [*] R12 ) [*] $1 ) [= R10;
assume L414: (for R15 being (Element of R9) holds (( ( R15 -r> R10 ) -l> R10 ) = R15 & ( ( R15 -l> R10 ) -r> R10 ) = R15));
L415: R14 = ( ( R14 -l> R10 ) -r> R10 ) by L414;
L416: (for R15 being (Element of R9) holds (S12[ R15 ] iff S13[ R15 ]))
proof
let R15 being (Element of R9);
L417: ( R15 [*] ( R12 [*] ( R14 -l> R10 ) ) ) = ( ( R15 [*] R12 ) [*] ( R14 -l> R10 ) ) by GROUP_1:def 3;
thus L418: thesis by L417 , L415 , L259;
end;
L419: { H16(R16) where R16 is (Element of R9) : S12[ R16 ] } = { H16(R17) where R17 is (Element of R9) : S13[ R17 ] } from FRAENKEL:sch 3(L416);
thus L420: ( R12 -r> R14 ) = ( ( R12 [*] ( R14 -l> R10 ) ) -r> R10 ) by L419;
L421: R14 = ( ( R14 -r> R10 ) -l> R10 ) by L414;
L422: (for R15 being (Element of R9) holds (S14[ R15 ] iff S15[ R15 ]))
proof
let R15 being (Element of R9);
L423: ( ( ( R14 -r> R10 ) [*] R12 ) [*] R15 ) = ( ( R14 -r> R10 ) [*] ( R12 [*] R15 ) ) by GROUP_1:def 3;
thus L424: thesis by L423 , L421 , L235;
end;
L425: { H16(R16) where R16 is (Element of R9) : S14[ R16 ] } = { H16(R17) where R17 is (Element of R9) : S15[ R17 ] } from FRAENKEL:sch 3(L422);
thus L426: thesis by L425;
end;
definition
struct (QuasiNetStr) Girard-QuantaleStr(# carrier -> set , L_join , L_meet , multF -> (BinOp of the carrier) , OneF , absurd -> (Element of the carrier) #);
end;
registration
cluster non  empty for Girard-QuantaleStr;
existence
proof
set D52 = the non  empty set;
set D53 = the (BinOp of D52);
set D54 = the (Element of D52);
take Girard-QuantaleStr (# D52 , D53 , D53 , D53 , D54 , D54 #);
thus L428: (the carrier of Girard-QuantaleStr (# D52 , D53 , D53 , D53 , D54 , D54 #)) is non  empty;
end;
end;
definition
let C108 being non  empty Girard-QuantaleStr;
attr C108 is  cyclic
means
:L430: (the absurd of C108) is  cyclic;
attr C108 is  dualized
means
:L431: (the absurd of C108) is  dualizing;
end;
theorem
L433: (for B174 being non  empty Girard-QuantaleStr holds (( the LattStr of B174 ) = ( BooleLatt ( {} ) ) implies B174 is  cyclic  dualized))
proof
let C109 being non  empty Girard-QuantaleStr;
set D55 = (the absurd of C109);
assume L434: ( the LattStr of C109 ) = ( BooleLatt ( {} ) );
L435: H1(C109) = { ( {} ) } by L434 , LATTICE3:def 1 , ZFMISC_1:1;
thus L436: C109 is  cyclic
proof
let C110 being (Element of C109);
L437: ( C110 -r> D55 ) = ( {} ) by L435 , TARSKI:def 1;
thus L438: thesis by L437 , L435 , TARSKI:def 1;
end;

let C111 being (Element of C109);
L439: (( ( C111 -r> D55 ) -l> D55 ) = ( {} ) & ( ( C111 -l> D55 ) -r> D55 ) = ( {} )) by L435 , TARSKI:def 1;
thus L440: thesis by L439 , L435 , TARSKI:def 1;
end;
registration
let C112 being non  empty set;
let C113 , C114 , C115 being (BinOp of C112);
let C116 , C117 being (Element of C112);
cluster Girard-QuantaleStr (# C112 , C113 , C114 , C115 , C116 , C117 #) -> non  empty;
coherence;
end;
registration
cluster  associative  commutative  unital  left-distributive  right-distributive  complete  Lattice-like  cyclic  dualized  strict for non  empty non  empty non  empty non  empty Girard-QuantaleStr;
existence
proof
set D56 = ( BooleLatt ( {} ) );
set D57 = the (BinOp of D56);
set D58 = the (Element of D56);
take Girard-QuantaleStr (# H1(D56) , H2(D56) , H3(D56) , D57 , D58 , D58 #);
thus L442: thesis by L70 , L433;
end;
end;
definition
mode Girard-Quantale
 is  associative  unital  left-distributive  right-distributive  complete  Lattice-like  cyclic  dualized non  empty Girard-QuantaleStr;
end;
definition
let C118 being Girard-QuantaleStr;
func Bottom C118 -> (Element of C118) equals
(the absurd of C118);
correctness;
end;
definition
let C119 being non  empty Girard-QuantaleStr;
func Top C119 -> (Element of C119) equals
( ( Bottom C119 ) -r> ( Bottom C119 ) );
correctness;
let C120 being (Element of C119);
func Bottom C120 -> (Element of C119) equals
( C120 -r> ( Bottom C119 ) );
correctness;
end;
definition
let C121 being non  empty Girard-QuantaleStr;
func Negation C121 -> (UnOp of C121) means
(for B175 being (Element of C121) holds ( it . B175 ) = ( Bottom B175 ));
existence
proof
deffunc H17((Element of C121)) = ( Bottom $1 );
consider C122 being (Function of (the carrier of C121) , (the carrier of C121)) such that L447: (for B176 being (Element of C121) holds ( C122 . B176 ) = H17(B176)) from FUNCT_2:sch 4;
reconsider D59 = C122 as (UnOp of C121);
take D59;
thus L448: thesis by L447;
end;
uniqueness
proof
let C123 , C124 being (UnOp of C121);
assume that
L449: (for B177 being (Element of C121) holds ( C123 . B177 ) = ( Bottom B177 ))
and
L450: (for B178 being (Element of C121) holds ( C124 . B178 ) = ( Bottom B178 ));
L451:
now
let C125 being (Element of C121);
thus L452: ( C123 . C125 ) = ( Bottom C125 ) by L449
.= ( C124 . C125 ) by L450;
end;
thus L453: thesis by L451 , FUNCT_2:63;
end;
end;
definition
let C126 being non  empty Girard-QuantaleStr;
let C127 being (UnOp of C126);
func Bottom C127 -> (UnOp of C126) equals
( ( Negation C126 ) * C127 );
correctness;
end;
definition
let C128 being non  empty Girard-QuantaleStr;
let C129 being (BinOp of C128);
func Bottom C129 -> (BinOp of C128) equals
( ( Negation C128 ) * C129 );
correctness;
end;
theorem
L457: (for R19 being Girard-Quantale holds (for R20 being (Element of R19) holds ( Bottom ( Bottom R20 ) ) = R20))
proof
let R19 being Girard-Quantale;
let R20 being (Element of R19);
L458: (the absurd of R19) is  cyclic by L430;
L459: ( R20 -l> (the absurd of R19) ) = ( R20 -r> (the absurd of R19) ) by L458 , L305;
L460: (the absurd of R19) is  dualizing by L431;
thus L461: thesis by L460 , L459 , L304;
end;
theorem
L462: (for R19 being Girard-Quantale holds (for R20 being (Element of R19) holds (for R23 being (Element of R19) holds (R20 [= R23 implies ( Bottom R23 ) [= ( Bottom R20 ))))) by L283;
theorem
L463: (for R19 being Girard-Quantale holds (for R28 being set holds ( Bottom ( "\/" (R28 , R19) ) ) = ( "/\" ({ ( Bottom R20 ) where R20 is (Element of R19) : R20 in R28 } , R19) )))
proof
let R19 being Girard-Quantale;
let R28 being set;
L464: { ( ( "/\" ({ ( Bottom R20 ) where R20 is (Element of R19) : R20 in R28 } , R19) ) [*] R23 ) where R23 is (Element of R19) : R23 in R28 } is_less_than ( Bottom R19 )
proof
let R26 being (Element of R19);
assume L465: R26 in { ( ( "/\" ({ ( Bottom R20 ) where R20 is (Element of R19) : R20 in R28 } , R19) ) [*] R23 ) where R23 is (Element of R19) : R23 in R28 };
consider R23 being (Element of R19) such that L466: (R26 = ( ( "/\" ({ ( Bottom R20 ) where R20 is (Element of R19) : R20 in R28 } , R19) ) [*] R23 ) & R23 in R28) by L465;
L467: ( Bottom R23 ) in { ( Bottom R20 ) where R20 is (Element of R19) : R20 in R28 } by L466;
L468: ( "/\" ({ ( Bottom R20 ) where R20 is (Element of R19) : R20 in R28 } , R19) ) [= ( Bottom R23 ) by L467 , LATTICE3:38;
thus L469: R26 [= ( Bottom R19 ) by L468 , L466 , L259;
end;
L470: ( "\/" ({ ( ( "/\" ({ ( Bottom R20 ) where R20 is (Element of R19) : R20 in R28 } , R19) ) [*] R23 ) where R23 is (Element of R19) : R23 in R28 } , R19) ) [= ( Bottom R19 ) by L464 , LATTICE3:def 21;
L471: ( ( "/\" ({ ( Bottom R20 ) where R20 is (Element of R19) : R20 in R28 } , R19) ) [*] ( "\/" (R28 , R19) ) ) [= ( Bottom R19 ) by L470 , L67;
L472: ( "/\" ({ ( Bottom R20 ) where R20 is (Element of R19) : R20 in R28 } , R19) ) [= ( Bottom ( "\/" (R28 , R19) ) ) by L471 , L259;
L473: ( Bottom ( "\/" (R28 , R19) ) ) is_less_than { ( Bottom R20 ) where R20 is (Element of R19) : R20 in R28 }
proof
let R23 being (Element of R19);
assume L474: R23 in { ( Bottom R20 ) where R20 is (Element of R19) : R20 in R28 };
consider R20 being (Element of R19) such that L475: R23 = ( Bottom R20 ) and L476: R20 in R28 by L474;
L477: R20 [= ( "\/" (R28 , R19) ) by L476 , LATTICE3:38;
thus L478: thesis by L477 , L475 , L283;
end;
L479: ( Bottom ( "\/" (R28 , R19) ) ) [= ( "/\" ({ ( Bottom R20 ) where R20 is (Element of R19) : R20 in R28 } , R19) ) by L473 , LATTICE3:39;
thus L480: thesis by L479 , L472 , LATTICES:8;
end;
theorem
L481: (for R19 being Girard-Quantale holds (for R28 being set holds ( Bottom ( "/\" (R28 , R19) ) ) = ( "\/" ({ ( Bottom R20 ) where R20 is (Element of R19) : R20 in R28 } , R19) )))
proof
let R19 being Girard-Quantale;
let R28 being set;
L482: R28 is_greater_than ( "/\" ({ ( Bottom R20 ) where R20 is (Element of R19) : R20 in { ( Bottom R23 ) where R23 is (Element of R19) : R23 in R28 } } , R19) )
proof
let R26 being (Element of R19);
assume L483: R26 in R28;
L484: ( Bottom R26 ) in { ( Bottom R23 ) where R23 is (Element of R19) : R23 in R28 } by L483;
L485: ( Bottom ( Bottom R26 ) ) in { ( Bottom R20 ) where R20 is (Element of R19) : R20 in { ( Bottom R23 ) where R23 is (Element of R19) : R23 in R28 } } by L484;
L486: ( Bottom ( Bottom R26 ) ) = R26 by L457;
thus L487: thesis by L486 , L485 , LATTICE3:38;
end;
L488: ( "/\" ({ ( Bottom R20 ) where R20 is (Element of R19) : R20 in { ( Bottom R23 ) where R23 is (Element of R19) : R23 in R28 } } , R19) ) [= ( "/\" (R28 , R19) ) by L482 , LATTICE3:39;
L489: { ( Bottom R20 ) where R20 is (Element of R19) : R20 in { ( Bottom R23 ) where R23 is (Element of R19) : R23 in R28 } } c= R28
proof
let R1 being set;
assume L490: R1 in { ( Bottom R20 ) where R20 is (Element of R19) : R20 in { ( Bottom R23 ) where R23 is (Element of R19) : R23 in R28 } };
consider R20 being (Element of R19) such that L491: (R1 = ( Bottom R20 ) & R20 in { ( Bottom R23 ) where R23 is (Element of R19) : R23 in R28 }) by L490;
L492: (ex R23 being (Element of R19) st (R20 = ( Bottom R23 ) & R23 in R28)) by L491;
thus L493: thesis by L492 , L491 , L457;
end;
L494: ( "/\" (R28 , R19) ) [= ( "/\" ({ ( Bottom R20 ) where R20 is (Element of R19) : R20 in { ( Bottom R23 ) where R23 is (Element of R19) : R23 in R28 } } , R19) ) by L489 , LATTICE3:45;
L495: ( "/\" (R28 , R19) ) = ( "/\" ({ ( Bottom R20 ) where R20 is (Element of R19) : R20 in { ( Bottom R23 ) where R23 is (Element of R19) : R23 in R28 } } , R19) ) by L494 , L488 , LATTICES:8;
thus L496: ( Bottom ( "/\" (R28 , R19) ) ) = ( Bottom ( Bottom ( "\/" ({ ( Bottom R20 ) where R20 is (Element of R19) : R20 in R28 } , R19) ) ) ) by L495 , L463
.= ( "\/" ({ ( Bottom R20 ) where R20 is (Element of R19) : R20 in R28 } , R19) ) by L457;
end;
theorem
L497: (for R19 being Girard-Quantale holds (for R20 being (Element of R19) holds (for R23 being (Element of R19) holds (( Bottom ( R20 "\/" R23 ) ) = ( ( Bottom R20 ) "/\" ( Bottom R23 ) ) & ( Bottom ( R20 "/\" R23 ) ) = ( ( Bottom R20 ) "\/" ( Bottom R23 ) )))))
proof
let R19 being Girard-Quantale;
let R20 being (Element of R19);
let R23 being (Element of R19);
L498: { ( Bottom R26 ) where R26 is (Element of R19) : R26 in { R20 , R23 } } = { ( Bottom R20 ) , ( Bottom R23 ) }
proof
thus L499: { ( Bottom R26 ) where R26 is (Element of R19) : R26 in { R20 , R23 } } c= { ( Bottom R20 ) , ( Bottom R23 ) }
proof
let R1 being set;
assume L500: R1 in { ( Bottom R26 ) where R26 is (Element of R19) : R26 in { R20 , R23 } };
consider R26 being (Element of R19) such that L501: R1 = ( Bottom R26 ) and L502: R26 in { R20 , R23 } by L500;
L503: (R26 = R20 or R26 = R23) by L502 , TARSKI:def 2;
thus L504: thesis by L503 , L501 , TARSKI:def 2;
end;

let R1 being set;
assume L505: R1 in { ( Bottom R20 ) , ( Bottom R23 ) };
L506: ((R1 = ( Bottom R20 ) & R20 in { R20 , R23 }) or (R1 = ( Bottom R23 ) & R23 in { R20 , R23 })) by L505 , TARSKI:def 2;
thus L507: thesis by L506;
end;
L508: (( R20 "\/" R23 ) = ( "\/" { R20 , R23 } ) & ( ( Bottom R20 ) "/\" ( Bottom R23 ) ) = ( "/\" { ( Bottom R20 ) , ( Bottom R23 ) } )) by LATTICE3:43;
thus L509: ( Bottom ( R20 "\/" R23 ) ) = ( ( Bottom R20 ) "/\" ( Bottom R23 ) ) by L508 , L498 , L463;
L510: (( ( Bottom R20 ) "\/" ( Bottom R23 ) ) = ( "\/" { ( Bottom R20 ) , ( Bottom R23 ) } ) & ( R20 "/\" R23 ) = ( "/\" { R20 , R23 } )) by LATTICE3:43;
thus L511: thesis by L510 , L498 , L481;
end;
definition
let R19 being Girard-Quantale;
let R20 being (Element of R19);
let R23 being (Element of R19);
func R20 delta R23 -> (Element of R19) equals
( Bottom ( ( Bottom R20 ) [*] ( Bottom R23 ) ) );
correctness;
end;
theorem
L513: (for R19 being Girard-Quantale holds (for R20 being (Element of R19) holds (for R28 being set holds (( R20 [*] ( "\/" (R28 , R19) ) ) = ( "\/" ({ ( R20 [*] R23 ) where R23 is (Element of R19) : R23 in R28 } , R19) ) & ( R20 delta ( "/\" (R28 , R19) ) ) = ( "/\" ({ ( R20 delta R26 ) where R26 is (Element of R19) : R26 in R28 } , R19) )))))
proof
let R19 being Girard-Quantale;
let R20 being (Element of R19);
let R28 being set;
deffunc H18((Element of R19)) = ( ( Bottom R20 ) [*] $1 );
deffunc H19((Element of R19)) = ( Bottom $1 );
deffunc H20((Element of R19)) = ( ( Bottom R20 ) [*] ( Bottom $1 ) );
defpred S16[ set ] means $1 in R28;
deffunc H21((Element of R19)) = ( Bottom ( ( Bottom R20 ) [*] ( Bottom $1 ) ) );
deffunc H22((Element of R19)) = ( R20 delta $1 );
thus L514: ( R20 [*] ( "\/" (R28 , R19) ) ) = ( "\/" ({ ( R20 [*] R23 ) where R23 is (Element of R19) : R23 in R28 } , R19) ) by L67;
L515: { H18(R26) where R26 is (Element of R19) : R26 in { H19(R27) where R27 is (Element of R19) : S16[ R27 ] } } = { H18(H19(R23)) where R23 is (Element of R19) : S16[ R23 ] } from DenestFraenkel;
L516: { H19(R26) where R26 is (Element of R19) : R26 in { H20(R27) where R27 is (Element of R19) : S16[ R27 ] } } = { H19(H20(R23)) where R23 is (Element of R19) : S16[ R23 ] } from DenestFraenkel;
L517: (for R23 being (Element of R19) holds H21(R23) = H22(R23));
L518: { H21(R23) where R23 is (Element of R19) : S16[ R23 ] } = { H22(R26) where R26 is (Element of R19) : S16[ R26 ] } from FRAENKEL:sch 5(L517);
thus L519: ( R20 delta ( "/\" (R28 , R19) ) ) = ( Bottom ( ( Bottom R20 ) [*] ( "\/" ({ ( Bottom R23 ) where R23 is (Element of R19) : R23 in R28 } , R19) ) ) ) by L481
.= ( Bottom ( "\/" ({ ( ( Bottom R20 ) [*] ( Bottom R23 ) ) where R23 is (Element of R19) : R23 in R28 } , R19) ) ) by L515 , L67
.= ( "/\" ({ ( R20 delta R23 ) where R23 is (Element of R19) : R23 in R28 } , R19) ) by L516 , L518 , L463;
end;
theorem
L520: (for R19 being Girard-Quantale holds (for R20 being (Element of R19) holds (for R28 being set holds (( ( "\/" (R28 , R19) ) [*] R20 ) = ( "\/" ({ ( R23 [*] R20 ) where R23 is (Element of R19) : R23 in R28 } , R19) ) & ( ( "/\" (R28 , R19) ) delta R20 ) = ( "/\" ({ ( R26 delta R20 ) where R26 is (Element of R19) : R26 in R28 } , R19) )))))
proof
let R19 being Girard-Quantale;
let R20 being (Element of R19);
let R28 being set;
deffunc H23((Element of R19)) = ( $1 [*] ( Bottom R20 ) );
deffunc H24((Element of R19)) = ( Bottom $1 );
deffunc H25((Element of R19)) = ( ( Bottom $1 ) [*] ( Bottom R20 ) );
defpred S17[ set ] means $1 in R28;
deffunc H26((Element of R19)) = ( Bottom ( ( Bottom $1 ) [*] ( Bottom R20 ) ) );
deffunc H27((Element of R19)) = ( $1 delta R20 );
thus L521: ( ( "\/" (R28 , R19) ) [*] R20 ) = ( "\/" ({ ( R23 [*] R20 ) where R23 is (Element of R19) : R23 in R28 } , R19) ) by L68;
L522: { H23(R26) where R26 is (Element of R19) : R26 in { H24(R27) where R27 is (Element of R19) : S17[ R27 ] } } = { H23(H24(R23)) where R23 is (Element of R19) : S17[ R23 ] } from DenestFraenkel;
L523: { H24(R26) where R26 is (Element of R19) : R26 in { H25(R27) where R27 is (Element of R19) : S17[ R27 ] } } = { H24(H25(R23)) where R23 is (Element of R19) : S17[ R23 ] } from DenestFraenkel;
L524: (for R23 being (Element of R19) holds H26(R23) = H27(R23));
L525: { H26(R23) where R23 is (Element of R19) : S17[ R23 ] } = { H27(R26) where R26 is (Element of R19) : S17[ R26 ] } from FRAENKEL:sch 5(L524);
thus L526: ( ( "/\" (R28 , R19) ) delta R20 ) = ( Bottom ( ( "\/" ({ ( Bottom R23 ) where R23 is (Element of R19) : R23 in R28 } , R19) ) [*] ( Bottom R20 ) ) ) by L481
.= ( Bottom ( "\/" ({ ( ( Bottom R23 ) [*] ( Bottom R20 ) ) where R23 is (Element of R19) : R23 in R28 } , R19) ) ) by L522 , L68
.= ( "/\" ({ ( R23 delta R20 ) where R23 is (Element of R19) : R23 in R28 } , R19) ) by L523 , L525 , L463;
end;
theorem
L527: (for R19 being Girard-Quantale holds (for R20 being (Element of R19) holds (for R23 being (Element of R19) holds (for R26 being (Element of R19) holds (( R20 delta ( R23 "/\" R26 ) ) = ( ( R20 delta R23 ) "/\" ( R20 delta R26 ) ) & ( ( R23 "/\" R26 ) delta R20 ) = ( ( R23 delta R20 ) "/\" ( R26 delta R20 ) ))))))
proof
let R19 being Girard-Quantale;
let R20 being (Element of R19);
let R23 being (Element of R19);
let R26 being (Element of R19);
thus L528: ( R20 delta ( R23 "/\" R26 ) ) = ( Bottom ( ( Bottom R20 ) [*] ( ( Bottom R23 ) "\/" ( Bottom R26 ) ) ) ) by L497
.= ( Bottom ( ( ( Bottom R20 ) [*] ( Bottom R23 ) ) "\/" ( ( Bottom R20 ) [*] ( Bottom R26 ) ) ) ) by L152
.= ( ( R20 delta R23 ) "/\" ( R20 delta R26 ) ) by L497;
thus L529: ( ( R23 "/\" R26 ) delta R20 ) = ( Bottom ( ( ( Bottom R23 ) "\/" ( Bottom R26 ) ) [*] ( Bottom R20 ) ) ) by L497
.= ( Bottom ( ( ( Bottom R23 ) [*] ( Bottom R20 ) ) "\/" ( ( Bottom R26 ) [*] ( Bottom R20 ) ) ) ) by L152
.= ( ( R23 delta R20 ) "/\" ( R26 delta R20 ) ) by L497;
end;
theorem
L530: (for R19 being Girard-Quantale holds (for R21 being (Element of R19) holds (for R22 being (Element of R19) holds (for R24 being (Element of R19) holds (for R25 being (Element of R19) holds ((R21 [= R24 & R22 [= R25) implies ( R21 delta R22 ) [= ( R24 delta R25 )))))))
proof
let R19 being Girard-Quantale;
let R21 being (Element of R19);
let R22 being (Element of R19);
let R24 being (Element of R19);
let R25 being (Element of R19);
assume L531: (R21 [= R24 & R22 [= R25);
L532: (( Bottom R24 ) [= ( Bottom R21 ) & ( Bottom R25 ) [= ( Bottom R22 )) by L531 , L283;
L533: ( ( Bottom R24 ) [*] ( Bottom R25 ) ) [= ( ( Bottom R21 ) [*] ( Bottom R22 ) ) by L532 , L198;
thus L534: thesis by L533 , L283;
end;
theorem
L535: (for R19 being Girard-Quantale holds (for R20 being (Element of R19) holds (for R23 being (Element of R19) holds (for R26 being (Element of R19) holds ( ( R20 delta R23 ) delta R26 ) = ( R20 delta ( R23 delta R26 ) )))))
proof
let R19 being Girard-Quantale;
let R20 being (Element of R19);
let R23 being (Element of R19);
let R26 being (Element of R19);
thus L536: ( ( R20 delta R23 ) delta R26 ) = ( Bottom ( ( ( Bottom R20 ) [*] ( Bottom R23 ) ) [*] ( Bottom R26 ) ) ) by L457
.= ( Bottom ( ( Bottom R20 ) [*] ( ( Bottom R23 ) [*] ( Bottom R26 ) ) ) ) by GROUP_1:def 3
.= ( R20 delta ( R23 delta R26 ) ) by L457;
end;
theorem
L537: (for R19 being Girard-Quantale holds (for R20 being (Element of R19) holds (( R20 [*] ( Top R19 ) ) = R20 & ( ( Top R19 ) [*] R20 ) = R20)))
proof
let R19 being Girard-Quantale;
let R20 being (Element of R19);
L538: (the absurd of R19) is  dualizing by L431;
L539: ( Top R19 ) = ( the_unity_wrt H4(R19) ) by L538 , L391;
L540: H4(R19) is  having_a_unity by MONOID_0:def 10;
thus L541: thesis by L540 , L539 , SETWISEO:15;
end;
theorem
L542: (for R19 being Girard-Quantale holds (for R20 being (Element of R19) holds (( R20 delta ( Bottom R19 ) ) = R20 & ( ( Bottom R19 ) delta R20 ) = R20)))
proof
let R19 being Girard-Quantale;
let R20 being (Element of R19);
L543: (( ( Bottom R20 ) [*] ( Top R19 ) ) = ( Bottom R20 ) & ( ( Top R19 ) [*] ( Bottom R20 ) ) = ( Bottom R20 )) by L537;
thus L544: thesis by L543 , L457;
end;
theorem
L545: (for B179 being Quantale holds (for B180 being (UnOp of B179) holds (B180 is  monotone  idempotent  \/-distributive implies (ex B181 being  complete Lattice st ((the carrier of B181) = ( rng B180 ) & (for B182 being (Subset of B181) holds ( "\/" B182 ) = ( B180 . ( "\/" (B182 , B179) ) )))))))
proof
let C130 being Quantale;
let C131 being (UnOp of C130);
assume L546: C131 is  monotone  idempotent  \/-distributive;
reconsider D60 = ( rng C131 ) as non  empty (Subset of C130);
L547: ( dom C131 ) = H1(C130) by FUNCT_2:def 1;
reconsider D61 = C131 as (Function of H1(C130) , D60) by L547 , RELSET_1:4;
deffunc H28((Subset of D60)) = ( D61 . ( "\/" ($1 , C130) ) );
consider C132 being (Function of ( bool D60 ) , D60) such that L548: (for B183 being (Subset of D60) holds ( C132 . B183 ) = H28(B183)) from FUNCT_2:sch 4;
L549: ( dom C132 ) = ( bool D60 ) by FUNCT_2:def 1;
L550: (for B184 being (Subset-Family of D60) holds ( C132 . ( C132 .: B184 ) ) = ( C132 . ( union B184 ) ))
proof
let C133 being (Subset-Family of D60);
set D62 = { ( C131 . B185 ) where B185 is (Element of C130) : B185 in ( C132 .: C133 ) };
set D63 = { ( C131 . B186 ) where B186 is (Element of C130) : B186 in ( union C133 ) };
reconsider D64 = ( C132 .: C133 ) , D65 = ( union C133 ) as (Subset of C130) by XBOOLE_1:1;
L551:
now
let C134 being (Element of C130);
assume L552: C134 in D63;
consider C135 being (Element of C130) such that L553: C134 = ( C131 . C135 ) and L554: C135 in ( union C133 ) by L552;
consider C136 being set such that L555: C135 in C136 and L556: C136 in C133 by L554 , TARSKI:def 4;
reconsider D66 = C136 as (Subset of D60) by L556;
L557: C135 [= ( "\/" (D66 , C130) ) by L555 , LATTICE3:38;
take D67 = ( C131 . ( "\/" (D66 , C130) ) );
L558: D67 = ( C132 . D66 ) by L548;
L559: D67 in ( C132 .: C133 ) by L558 , L549 , L556 , FUNCT_1:def 6;
L560: ( C131 . D67 ) = D67 by L546 , L203;
thus L561: (C134 [= D67 & D67 in D62) by L560 , L546 , L553 , L559 , L557 , L206;
end;
L562: ( "\/" (D63 , C130) ) [= ( "\/" (D62 , C130) ) by L551 , LATTICE3:47;
L563: D62 is_less_than ( "\/" (D63 , C130) )
proof
let C137 being (Element of C130);
assume L564: C137 in D62;
consider C138 being (Element of C130) such that L565: C137 = ( C131 . C138 ) and L566: C138 in ( C132 .: C133 ) by L564;
consider R1 being set such that L567: R1 in ( dom C132 ) and L568: R1 in C133 and L569: C138 = ( C132 . R1 ) by L566 , FUNCT_1:def 6;
reconsider D68 = R1 as (Subset of D60) by L567;
reconsider D69 = D68 as (Subset of C130) by XBOOLE_1:1;
L570: { ( C131 . B187 ) where B187 is (Element of C130) : B187 in D69 } c= D63
proof
let R3 being set;
assume L571: R3 in { ( C131 . B188 ) where B188 is (Element of C130) : B188 in D69 };
consider C139 being (Element of C130) such that L572: R3 = ( C131 . C139 ) and L573: C139 in D69 by L571;
L574: C139 in ( union C133 ) by L568 , L573 , TARSKI:def 4;
thus L575: thesis by L574 , L572;
end;
L576: C138 = ( C131 . ( "\/" D69 ) ) by L548 , L569;
L577: C138 = ( "\/" ({ ( C131 . B189 ) where B189 is (Element of C130) : B189 in D69 } , C130) ) by L576 , L546 , L217;
L578: C138 [= ( "\/" (D63 , C130) ) by L577 , L570 , LATTICE3:45;
L579: C137 [= ( C131 . ( "\/" (D63 , C130) ) ) by L578 , L546 , L565 , L206;
L580: C137 [= ( C131 . ( C131 . ( "\/" D65 ) ) ) by L579 , L546 , L217;
L581: C137 [= ( C131 . ( "\/" D65 ) ) by L580 , L546 , L203;
thus L582: thesis by L581 , L546 , L217;
end;
L583: ( "\/" (D62 , C130) ) [= ( "\/" (D63 , C130) ) by L563 , LATTICE3:def 21;
thus L584: ( C132 . ( C132 .: C133 ) ) = ( C131 . ( "\/" D64 ) ) by L548
.= ( "\/" (D62 , C130) ) by L546 , L217
.= ( "\/" (D63 , C130) ) by L583 , L562 , LATTICES:8
.= ( C131 . ( "\/" D65 ) ) by L546 , L217
.= ( C132 . ( union C133 ) ) by L548;
end;
L585: (for B190 being (Element of D60) holds ( C132 . { B190 } ) = B190)
proof
let C140 being (Element of D60);
consider C141 being set such that L586: C141 in ( dom C131 ) and L587: C140 = ( C131 . C141 ) by FUNCT_1:def 3;
reconsider D70 = C140 as (Element of C130);
reconsider D71 = { D70 } as (Subset of C130);
reconsider D72 = C141 as (Element of C130) by L586;
thus L588: ( C132 . { C140 } ) = ( C131 . ( "\/" D71 ) ) by L548
.= ( C131 . ( C131 . D72 ) ) by L587 , LATTICE3:42
.= C140 by L546 , L587 , L203;
end;
consider C142 being  complete  strict Lattice such that L589: H1(C142) = D60 and L590: (for B191 being (Subset of C142) holds ( "\/" B191 ) = ( C132 . B191 )) by L585 , L550 , LATTICE3:55;
take C142;
thus L591: H1(C142) = ( rng C131 ) by L589;
let C143 being (Subset of C142);
thus L592: ( "\/" C143 ) = ( C132 . C143 ) by L590
.= ( C131 . ( "\/" (C143 , C130) ) ) by L548 , L589;
end;
