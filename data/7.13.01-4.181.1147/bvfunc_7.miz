:: Propositional Calculus For Boolean Valued Functions, III
::  by Shunichi Kobayashi
::
:: Received April 23, 1999
:: Copyright (c) 1999-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies XBOOLE_0, SUBSET_1, FUNCT_2, MARGREL1, BVFUNC_1, XBOOLEAN,
      FUNCT_1, RELAT_1, TARSKI, PARTIT1;
 notations TARSKI, XBOOLE_0, SUBSET_1, XBOOLEAN, MARGREL1, RELAT_1, FUNCT_1,
      FUNCT_2, BVFUNC_1;
 constructors BVFUNC_1;
 registrations XBOOLE_0, XBOOLEAN, MARGREL1;
 requirements SUBSET, BOOLE;
 definitions BVFUNC_1, XBOOLEAN, FUNCT_2;
 theorems FUNCT_1, FUNCT_2, MARGREL1, BINARITH, BVFUNC_1, BVFUNC_4, XBOOLEAN;

begin
theorem
L1: (for R1 being non  empty set holds (for B1 , B2 being (Function of R1 , ( BOOLEAN )) holds ( ( B1 'imp' B2 ) '&' ( ( 'not' B1 ) 'imp' B2 ) ) = B2))
proof
let R1 being non  empty set;
let C1 , C2 being (Function of R1 , ( BOOLEAN ));
let C3 being (Element of R1);
L2: ( ( ( C1 'imp' C2 ) '&' ( ( 'not' C1 ) 'imp' C2 ) ) . C3 ) = ( ( ( C1 'imp' C2 ) . C3 ) '&' ( ( ( 'not' C1 ) 'imp' C2 ) . C3 ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( C1 . C3 ) ) 'or' ( C2 . C3 ) ) '&' ( ( ( 'not' C1 ) 'imp' C2 ) . C3 ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( C1 . C3 ) ) 'or' ( C2 . C3 ) ) '&' ( ( 'not' ( ( 'not' C1 ) . C3 ) ) 'or' ( C2 . C3 ) ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( C1 . C3 ) ) 'or' ( C2 . C3 ) ) '&' ( ( C1 . C3 ) 'or' ( C2 . C3 ) ) ) by MARGREL1:def 19;
L3:
now
per cases  by XBOOLEAN:def 3;
case L4: ( C1 . C3 ) = ( TRUE );
L5: ( ( ( C1 'imp' C2 ) '&' ( ( 'not' C1 ) 'imp' C2 ) ) . C3 ) = ( ( ( FALSE ) 'or' ( C2 . C3 ) ) '&' ( ( TRUE ) 'or' ( C2 . C3 ) ) ) by L4 , L2 , MARGREL1:11
.= ( ( ( FALSE ) 'or' ( C2 . C3 ) ) '&' ( TRUE ) ) by BINARITH:10
.= ( ( TRUE ) '&' ( C2 . C3 ) ) by BINARITH:3
.= ( C2 . C3 ) by MARGREL1:14;
thus L6: thesis by L5;
end;
case L7: ( C1 . C3 ) = ( FALSE );
L8: ( ( ( C1 'imp' C2 ) '&' ( ( 'not' C1 ) 'imp' C2 ) ) . C3 ) = ( ( ( TRUE ) 'or' ( C2 . C3 ) ) '&' ( ( FALSE ) 'or' ( C2 . C3 ) ) ) by L7 , L2 , MARGREL1:11
.= ( ( TRUE ) '&' ( ( FALSE ) 'or' ( C2 . C3 ) ) ) by BINARITH:10
.= ( ( TRUE ) '&' ( C2 . C3 ) ) by BINARITH:3
.= ( C2 . C3 ) by MARGREL1:14;
thus L9: thesis by L8;
end;
end;
thus L11: thesis by L3;
end;
theorem
L12: (for R1 being non  empty set holds (for B3 , B4 being (Function of R1 , ( BOOLEAN )) holds ( ( B3 'imp' B4 ) '&' ( B3 'imp' ( 'not' B4 ) ) ) = ( 'not' B3 )))
proof
let R1 being non  empty set;
let C4 , C5 being (Function of R1 , ( BOOLEAN ));
let C6 being (Element of R1);
L13: ( ( ( C4 'imp' C5 ) '&' ( C4 'imp' ( 'not' C5 ) ) ) . C6 ) = ( ( ( C4 'imp' C5 ) . C6 ) '&' ( ( C4 'imp' ( 'not' C5 ) ) . C6 ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( C4 . C6 ) ) 'or' ( C5 . C6 ) ) '&' ( ( C4 'imp' ( 'not' C5 ) ) . C6 ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( C4 . C6 ) ) 'or' ( C5 . C6 ) ) '&' ( ( 'not' ( C4 . C6 ) ) 'or' ( ( 'not' C5 ) . C6 ) ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( C4 . C6 ) ) 'or' ( C5 . C6 ) ) '&' ( ( 'not' ( C4 . C6 ) ) 'or' ( 'not' ( C5 . C6 ) ) ) ) by MARGREL1:def 19;
L14:
now
per cases  by XBOOLEAN:def 3;
case L15: ( C5 . C6 ) = ( TRUE );
L16: ( ( ( C4 'imp' C5 ) '&' ( C4 'imp' ( 'not' C5 ) ) ) . C6 ) = ( ( ( 'not' ( C4 . C6 ) ) 'or' ( TRUE ) ) '&' ( ( 'not' ( C4 . C6 ) ) 'or' ( FALSE ) ) ) by L15 , L13 , MARGREL1:11
.= ( ( ( 'not' ( C4 . C6 ) ) 'or' ( TRUE ) ) '&' ( 'not' ( C4 . C6 ) ) ) by BINARITH:3
.= ( ( TRUE ) '&' ( 'not' ( C4 . C6 ) ) ) by BINARITH:10
.= ( 'not' ( C4 . C6 ) ) by MARGREL1:14
.= ( ( 'not' C4 ) . C6 ) by MARGREL1:def 19;
thus L17: thesis by L16;
end;
case L18: ( C5 . C6 ) = ( FALSE );
L19: ( ( ( C4 'imp' C5 ) '&' ( C4 'imp' ( 'not' C5 ) ) ) . C6 ) = ( ( ( 'not' ( C4 . C6 ) ) 'or' ( FALSE ) ) '&' ( ( 'not' ( C4 . C6 ) ) 'or' ( TRUE ) ) ) by L18 , L13 , MARGREL1:11
.= ( ( 'not' ( C4 . C6 ) ) '&' ( ( 'not' ( C4 . C6 ) ) 'or' ( TRUE ) ) ) by BINARITH:3
.= ( ( TRUE ) '&' ( 'not' ( C4 . C6 ) ) ) by BINARITH:10
.= ( 'not' ( C4 . C6 ) ) by MARGREL1:14
.= ( ( 'not' C4 ) . C6 ) by MARGREL1:def 19;
thus L20: thesis by L19;
end;
end;
thus L22: thesis by L14;
end;
theorem
L23: (for R1 being non  empty set holds (for B5 , B6 , B7 being (Function of R1 , ( BOOLEAN )) holds ( B5 'imp' ( B6 'or' B7 ) ) = ( ( B5 'imp' B6 ) 'or' ( B5 'imp' B7 ) )))
proof
let R1 being non  empty set;
let C7 , C8 , C9 being (Function of R1 , ( BOOLEAN ));
let C10 being (Element of R1);
L24: ( ( ( C7 'imp' C8 ) 'or' ( C7 'imp' C9 ) ) . C10 ) = ( ( ( C7 'imp' C8 ) . C10 ) 'or' ( ( C7 'imp' C9 ) . C10 ) ) by BVFUNC_1:def 4
.= ( ( ( 'not' ( C7 . C10 ) ) 'or' ( C8 . C10 ) ) 'or' ( ( C7 'imp' C9 ) . C10 ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( C7 . C10 ) ) 'or' ( C8 . C10 ) ) 'or' ( ( 'not' ( C7 . C10 ) ) 'or' ( C9 . C10 ) ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( C7 . C10 ) ) 'or' ( ( 'not' ( C7 . C10 ) ) 'or' ( C8 . C10 ) ) ) 'or' ( C9 . C10 ) ) by BINARITH:11
.= ( ( ( ( 'not' ( C7 . C10 ) ) 'or' ( 'not' ( C7 . C10 ) ) ) 'or' ( C8 . C10 ) ) 'or' ( C9 . C10 ) ) by BINARITH:11
.= ( ( 'not' ( C7 . C10 ) ) 'or' ( ( C8 . C10 ) 'or' ( C9 . C10 ) ) ) by BINARITH:11
.= ( ( 'not' ( C7 . C10 ) ) 'or' ( ( C8 'or' C9 ) . C10 ) ) by BVFUNC_1:def 4
.= ( ( C7 'imp' ( C8 'or' C9 ) ) . C10 ) by BVFUNC_1:def 8;
thus L25: thesis by L24;
end;
theorem
L26: (for R1 being non  empty set holds (for B8 , B9 , B10 being (Function of R1 , ( BOOLEAN )) holds ( B8 'imp' ( B9 '&' B10 ) ) = ( ( B8 'imp' B9 ) '&' ( B8 'imp' B10 ) )))
proof
let R1 being non  empty set;
let C11 , C12 , C13 being (Function of R1 , ( BOOLEAN ));
let C14 being (Element of R1);
L27: ( ( ( C11 'imp' C12 ) '&' ( C11 'imp' C13 ) ) . C14 ) = ( ( ( C11 'imp' C12 ) . C14 ) '&' ( ( C11 'imp' C13 ) . C14 ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( C11 . C14 ) ) 'or' ( C12 . C14 ) ) '&' ( ( C11 'imp' C13 ) . C14 ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( C11 . C14 ) ) 'or' ( C12 . C14 ) ) '&' ( ( 'not' ( C11 . C14 ) ) 'or' ( C13 . C14 ) ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( C11 . C14 ) ) 'or' ( ( C12 . C14 ) '&' ( C13 . C14 ) ) ) by XBOOLEAN:9
.= ( ( 'not' ( C11 . C14 ) ) 'or' ( ( C12 '&' C13 ) . C14 ) ) by MARGREL1:def 20
.= ( ( C11 'imp' ( C12 '&' C13 ) ) . C14 ) by BVFUNC_1:def 8;
thus L28: thesis by L27;
end;
theorem
L29: (for R1 being non  empty set holds (for B11 , B12 , B13 being (Function of R1 , ( BOOLEAN )) holds ( ( B11 'or' B12 ) 'imp' B13 ) = ( ( B11 'imp' B13 ) '&' ( B12 'imp' B13 ) )))
proof
let R1 being non  empty set;
let C15 , C16 , C17 being (Function of R1 , ( BOOLEAN ));
let C18 being (Element of R1);
L30: ( ( ( C15 'imp' C17 ) '&' ( C16 'imp' C17 ) ) . C18 ) = ( ( ( C15 'imp' C17 ) . C18 ) '&' ( ( C16 'imp' C17 ) . C18 ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( C15 . C18 ) ) 'or' ( C17 . C18 ) ) '&' ( ( C16 'imp' C17 ) . C18 ) ) by BVFUNC_1:def 8
.= ( ( ( C17 . C18 ) 'or' ( 'not' ( C15 . C18 ) ) ) '&' ( ( 'not' ( C16 . C18 ) ) 'or' ( C17 . C18 ) ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( ( C15 . C18 ) 'or' ( C16 . C18 ) ) ) 'or' ( C17 . C18 ) ) by XBOOLEAN:9
.= ( ( 'not' ( ( C15 'or' C16 ) . C18 ) ) 'or' ( C17 . C18 ) ) by BVFUNC_1:def 4
.= ( ( ( C15 'or' C16 ) 'imp' C17 ) . C18 ) by BVFUNC_1:def 8;
thus L31: thesis by L30;
end;
theorem
L32: (for R1 being non  empty set holds (for B14 , B15 , B16 being (Function of R1 , ( BOOLEAN )) holds ( ( B14 '&' B15 ) 'imp' B16 ) = ( ( B14 'imp' B16 ) 'or' ( B15 'imp' B16 ) )))
proof
let R1 being non  empty set;
let C19 , C20 , C21 being (Function of R1 , ( BOOLEAN ));
let C22 being (Element of R1);
L33: ( ( ( C19 'imp' C21 ) 'or' ( C20 'imp' C21 ) ) . C22 ) = ( ( ( C19 'imp' C21 ) . C22 ) 'or' ( ( C20 'imp' C21 ) . C22 ) ) by BVFUNC_1:def 4
.= ( ( ( 'not' ( C19 . C22 ) ) 'or' ( C21 . C22 ) ) 'or' ( ( C20 'imp' C21 ) . C22 ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( C19 . C22 ) ) 'or' ( C21 . C22 ) ) 'or' ( ( 'not' ( C20 . C22 ) ) 'or' ( C21 . C22 ) ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( C19 . C22 ) ) 'or' ( ( C21 . C22 ) 'or' ( 'not' ( C20 . C22 ) ) ) ) 'or' ( C21 . C22 ) ) by BINARITH:11
.= ( ( ( ( 'not' ( C19 . C22 ) ) 'or' ( 'not' ( C20 . C22 ) ) ) 'or' ( C21 . C22 ) ) 'or' ( C21 . C22 ) ) by BINARITH:11
.= ( ( ( 'not' ( C19 . C22 ) ) 'or' ( 'not' ( C20 . C22 ) ) ) 'or' ( ( C21 . C22 ) 'or' ( C21 . C22 ) ) ) by BINARITH:11
.= ( ( 'not' ( ( C19 '&' C20 ) . C22 ) ) 'or' ( C21 . C22 ) ) by MARGREL1:def 20
.= ( ( ( C19 '&' C20 ) 'imp' C21 ) . C22 ) by BVFUNC_1:def 8;
thus L34: thesis by L33;
end;
theorem
L35: (for R1 being non  empty set holds (for B17 , B18 , B19 being (Function of R1 , ( BOOLEAN )) holds ( ( B17 '&' B18 ) 'imp' B19 ) = ( B17 'imp' ( B18 'imp' B19 ) )))
proof
let R1 being non  empty set;
let C23 , C24 , C25 being (Function of R1 , ( BOOLEAN ));
let C26 being (Element of R1);
L36: ( ( C23 'imp' ( C24 'imp' C25 ) ) . C26 ) = ( ( 'not' ( C23 . C26 ) ) 'or' ( ( C24 'imp' C25 ) . C26 ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( C23 . C26 ) ) 'or' ( ( 'not' ( C24 . C26 ) ) 'or' ( C25 . C26 ) ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( C23 . C26 ) ) 'or' ( 'not' ( C24 . C26 ) ) ) 'or' ( C25 . C26 ) ) by BINARITH:11
.= ( ( 'not' ( ( C23 '&' C24 ) . C26 ) ) 'or' ( C25 . C26 ) ) by MARGREL1:def 20
.= ( ( ( C23 '&' C24 ) 'imp' C25 ) . C26 ) by BVFUNC_1:def 8;
thus L37: thesis by L36;
end;
theorem
L38: (for R1 being non  empty set holds (for B20 , B21 , B22 being (Function of R1 , ( BOOLEAN )) holds ( ( B20 '&' B21 ) 'imp' B22 ) = ( B20 'imp' ( ( 'not' B21 ) 'or' B22 ) )))
proof
let R1 being non  empty set;
let C27 , C28 , C29 being (Function of R1 , ( BOOLEAN ));
let C30 being (Element of R1);
L39: ( ( C27 'imp' ( ( 'not' C28 ) 'or' C29 ) ) . C30 ) = ( ( C27 'imp' ( C28 'imp' C29 ) ) . C30 ) by BVFUNC_4:8;
thus L40: thesis by L39 , L35;
end;
theorem
L41: (for R1 being non  empty set holds (for B23 , B24 , B25 being (Function of R1 , ( BOOLEAN )) holds ( B23 'imp' ( B24 'or' B25 ) ) = ( ( B23 '&' ( 'not' B24 ) ) 'imp' B25 )))
proof
let R1 being non  empty set;
let C31 , C32 , C33 being (Function of R1 , ( BOOLEAN ));
let C34 being (Element of R1);
L42: ( ( ( C31 '&' ( 'not' C32 ) ) 'imp' C33 ) . C34 ) = ( ( 'not' ( ( C31 '&' ( 'not' C32 ) ) . C34 ) ) 'or' ( C33 . C34 ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( C31 . C34 ) ) 'or' ( 'not' ( ( 'not' C32 ) . C34 ) ) ) 'or' ( C33 . C34 ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( C31 . C34 ) ) 'or' ( C32 . C34 ) ) 'or' ( C33 . C34 ) ) by MARGREL1:def 19
.= ( ( 'not' ( C31 . C34 ) ) 'or' ( ( C32 . C34 ) 'or' ( C33 . C34 ) ) ) by BINARITH:11
.= ( ( 'not' ( C31 . C34 ) ) 'or' ( ( C32 'or' C33 ) . C34 ) ) by BVFUNC_1:def 4
.= ( ( C31 'imp' ( C32 'or' C33 ) ) . C34 ) by BVFUNC_1:def 8;
thus L43: thesis by L42;
end;
theorem
L44: (for R1 being non  empty set holds (for B26 , B27 being (Function of R1 , ( BOOLEAN )) holds ( B26 '&' ( B26 'imp' B27 ) ) = ( B26 '&' B27 )))
proof
let R1 being non  empty set;
let C35 , C36 being (Function of R1 , ( BOOLEAN ));
let C37 being (Element of R1);
L45: ( ( C35 '&' ( C35 'imp' C36 ) ) . C37 ) = ( ( C35 . C37 ) '&' ( ( C35 'imp' C36 ) . C37 ) ) by MARGREL1:def 20
.= ( ( C35 . C37 ) '&' ( ( 'not' ( C35 . C37 ) ) 'or' ( C36 . C37 ) ) ) by BVFUNC_1:def 8
.= ( ( ( C35 . C37 ) '&' ( 'not' ( C35 . C37 ) ) ) 'or' ( ( C35 . C37 ) '&' ( C36 . C37 ) ) ) by XBOOLEAN:8
.= ( ( FALSE ) 'or' ( ( C35 . C37 ) '&' ( C36 . C37 ) ) ) by XBOOLEAN:138
.= ( ( C35 . C37 ) '&' ( C36 . C37 ) ) by BINARITH:3
.= ( ( C35 '&' C36 ) . C37 ) by MARGREL1:def 20;
thus L46: thesis by L45;
end;
theorem
L47: (for R1 being non  empty set holds (for B28 , B29 being (Function of R1 , ( BOOLEAN )) holds ( ( B28 'imp' B29 ) '&' ( 'not' B29 ) ) = ( ( 'not' B28 ) '&' ( 'not' B29 ) )))
proof
let R1 being non  empty set;
let C38 , C39 being (Function of R1 , ( BOOLEAN ));
let C40 being (Element of R1);
L48: ( ( ( C38 'imp' C39 ) '&' ( 'not' C39 ) ) . C40 ) = ( ( ( C38 'imp' C39 ) . C40 ) '&' ( ( 'not' C39 ) . C40 ) ) by MARGREL1:def 20
.= ( ( ( 'not' C39 ) . C40 ) '&' ( ( 'not' ( C38 . C40 ) ) 'or' ( C39 . C40 ) ) ) by BVFUNC_1:def 8
.= ( ( ( ( 'not' C39 ) . C40 ) '&' ( 'not' ( C38 . C40 ) ) ) 'or' ( ( ( 'not' C39 ) . C40 ) '&' ( C39 . C40 ) ) ) by XBOOLEAN:8
.= ( ( ( ( 'not' C39 ) . C40 ) '&' ( 'not' ( C38 . C40 ) ) ) 'or' ( ( C39 . C40 ) '&' ( 'not' ( C39 . C40 ) ) ) ) by MARGREL1:def 19
.= ( ( ( ( 'not' C39 ) . C40 ) '&' ( 'not' ( C38 . C40 ) ) ) 'or' ( FALSE ) ) by XBOOLEAN:138
.= ( ( ( 'not' C39 ) . C40 ) '&' ( 'not' ( C38 . C40 ) ) ) by BINARITH:3
.= ( ( ( 'not' C39 ) . C40 ) '&' ( ( 'not' C38 ) . C40 ) ) by MARGREL1:def 19
.= ( ( ( 'not' C38 ) '&' ( 'not' C39 ) ) . C40 ) by MARGREL1:def 20;
thus L49: thesis by L48;
end;
theorem
L50: (for R1 being non  empty set holds (for B30 , B31 , B32 being (Function of R1 , ( BOOLEAN )) holds ( ( B30 'imp' B31 ) '&' ( B31 'imp' B32 ) ) = ( ( ( B30 'imp' B31 ) '&' ( B31 'imp' B32 ) ) '&' ( B30 'imp' B32 ) )))
proof
let R1 being non  empty set;
let C41 , C42 , C43 being (Function of R1 , ( BOOLEAN ));
let C44 being (Element of R1);
L51: ( ( ( ( C41 'imp' C42 ) '&' ( C42 'imp' C43 ) ) '&' ( C41 'imp' C43 ) ) . C44 ) = ( ( ( ( C41 'imp' C42 ) '&' ( C42 'imp' C43 ) ) . C44 ) '&' ( ( C41 'imp' C43 ) . C44 ) ) by MARGREL1:def 20
.= ( ( ( ( C41 'imp' C42 ) . C44 ) '&' ( ( C42 'imp' C43 ) . C44 ) ) '&' ( ( C41 'imp' C43 ) . C44 ) ) by MARGREL1:def 20
.= ( ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( C42 'imp' C43 ) . C44 ) ) '&' ( ( C41 'imp' C43 ) . C44 ) ) by BVFUNC_1:def 8
.= ( ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) '&' ( ( C41 'imp' C43 ) . C44 ) ) by BVFUNC_1:def 8
.= ( ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) '&' ( ( 'not' ( C41 . C44 ) ) 'or' ( C43 . C44 ) ) ) by BVFUNC_1:def 8
.= ( ( ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) '&' ( 'not' ( C41 . C44 ) ) ) 'or' ( ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) '&' ( C43 . C44 ) ) ) by XBOOLEAN:8;
L52: ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) = ( ( ( C41 'imp' C42 ) . C44 ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) by BVFUNC_1:def 8
.= ( ( ( C41 'imp' C42 ) . C44 ) '&' ( ( C42 'imp' C43 ) . C44 ) ) by BVFUNC_1:def 8
.= ( ( ( C41 'imp' C42 ) '&' ( C42 'imp' C43 ) ) . C44 ) by MARGREL1:def 20;
L53: ( ( ( C41 'imp' C42 ) '&' ( C42 'imp' C43 ) ) . C44 ) = ( ( ( C41 'imp' C42 ) . C44 ) '&' ( ( C42 'imp' C43 ) . C44 ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( C42 'imp' C43 ) . C44 ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) by BVFUNC_1:def 8;
L54:
now
per cases  by XBOOLEAN:def 3;
case L55: (( C41 . C44 ) = ( TRUE ) & ( C43 . C44 ) = ( TRUE ));
L56: ( ( ( ( C41 'imp' C42 ) '&' ( C42 'imp' C43 ) ) '&' ( C41 'imp' C43 ) ) . C44 ) = ( ( ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) '&' ( FALSE ) ) 'or' ( ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) '&' ( TRUE ) ) ) by L55 , L51 , MARGREL1:11
.= ( ( FALSE ) 'or' ( ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) '&' ( TRUE ) ) ) by MARGREL1:13
.= ( ( FALSE ) 'or' ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) ) by MARGREL1:14
.= ( ( ( C41 'imp' C42 ) '&' ( C42 'imp' C43 ) ) . C44 ) by L52 , BINARITH:3;
thus L57: thesis by L56;
end;
case L58: (( C41 . C44 ) = ( TRUE ) & ( C43 . C44 ) = ( FALSE ));
L59: ( ( ( C41 'imp' C42 ) '&' ( C42 'imp' C43 ) ) . C44 ) = ( ( ( FALSE ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( FALSE ) ) ) by L58 , L53 , MARGREL1:11
.= ( ( ( FALSE ) 'or' ( C42 . C44 ) ) '&' ( 'not' ( C42 . C44 ) ) ) by BINARITH:3
.= ( ( C42 . C44 ) '&' ( 'not' ( C42 . C44 ) ) ) by BINARITH:3
.= ( FALSE ) by XBOOLEAN:138;
L60: ( ( ( ( C41 'imp' C42 ) '&' ( C42 'imp' C43 ) ) '&' ( C41 'imp' C43 ) ) . C44 ) = ( ( ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) '&' ( FALSE ) ) 'or' ( ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) '&' ( FALSE ) ) ) by L51 , L58 , MARGREL1:11
.= ( FALSE ) by MARGREL1:13;
thus L61: thesis by L60 , L59;
end;
case L62: (( C41 . C44 ) = ( FALSE ) & ( C43 . C44 ) = ( TRUE ));
L63: ( ( ( ( C41 'imp' C42 ) '&' ( C42 'imp' C43 ) ) '&' ( C41 'imp' C43 ) ) . C44 ) = ( ( ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) '&' ( TRUE ) ) 'or' ( ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) '&' ( TRUE ) ) ) by L62 , L51 , MARGREL1:11
.= ( ( ( C41 'imp' C42 ) '&' ( C42 'imp' C43 ) ) . C44 ) by L52 , MARGREL1:14;
thus L64: thesis by L63;
end;
case L65: (( C41 . C44 ) = ( FALSE ) & ( C43 . C44 ) = ( FALSE ));
L66: ( ( ( ( C41 'imp' C42 ) '&' ( C42 'imp' C43 ) ) '&' ( C41 'imp' C43 ) ) . C44 ) = ( ( ( TRUE ) '&' ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) ) 'or' ( ( FALSE ) '&' ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) ) ) by L65 , L51 , MARGREL1:11
.= ( ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) 'or' ( ( FALSE ) '&' ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) ) ) by MARGREL1:14
.= ( ( ( ( 'not' ( C41 . C44 ) ) 'or' ( C42 . C44 ) ) '&' ( ( 'not' ( C42 . C44 ) ) 'or' ( C43 . C44 ) ) ) 'or' ( FALSE ) ) by MARGREL1:13
.= ( ( ( C41 'imp' C42 ) '&' ( C42 'imp' C43 ) ) . C44 ) by L52 , BINARITH:3;
thus L67: thesis by L66;
end;
end;
thus L69: thesis by L54;
end;
theorem
L70: (for R1 being non  empty set holds (for B33 being (Function of R1 , ( BOOLEAN )) holds ( ( I_el R1 ) 'imp' B33 ) = B33))
proof
let R1 being non  empty set;
let C45 being (Function of R1 , ( BOOLEAN ));
let C46 being (Element of R1);
L71: ( ( ( I_el R1 ) 'imp' C45 ) . C46 ) = ( ( 'not' ( ( I_el R1 ) . C46 ) ) 'or' ( C45 . C46 ) ) by BVFUNC_1:def 8
.= ( ( FALSE ) 'or' ( C45 . C46 ) ) by MARGREL1:11 , BVFUNC_1:def 11;
thus L72: thesis by L71 , BINARITH:3;
end;
theorem
L73: (for R1 being non  empty set holds (for B34 being (Function of R1 , ( BOOLEAN )) holds ( B34 'imp' ( O_el R1 ) ) = ( 'not' B34 )))
proof
let R1 being non  empty set;
let C47 being (Function of R1 , ( BOOLEAN ));
let C48 being (Element of R1);
L74: ( ( C47 'imp' ( O_el R1 ) ) . C48 ) = ( ( 'not' ( C47 . C48 ) ) 'or' ( ( O_el R1 ) . C48 ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( C47 . C48 ) ) 'or' ( FALSE ) ) by BVFUNC_1:def 10
.= ( 'not' ( C47 . C48 ) ) by BINARITH:3;
thus L75: thesis by L74 , MARGREL1:def 19;
end;
theorem
L76: (for R1 being non  empty set holds (for B35 being (Function of R1 , ( BOOLEAN )) holds ( ( O_el R1 ) 'imp' B35 ) = ( I_el R1 )))
proof
let R1 being non  empty set;
let C49 being (Function of R1 , ( BOOLEAN ));
L77: (for B36 being (Element of R1) holds ( ( ( O_el R1 ) 'imp' C49 ) . B36 ) = ( TRUE ))
proof
let C50 being (Element of R1);
L78: ( ( ( O_el R1 ) 'imp' C49 ) . C50 ) = ( ( 'not' ( ( O_el R1 ) . C50 ) ) 'or' ( C49 . C50 ) ) by BVFUNC_1:def 8
.= ( ( TRUE ) 'or' ( C49 . C50 ) ) by MARGREL1:11 , BVFUNC_1:def 10;
thus L79: thesis by L78 , BINARITH:10;
end;
thus L80: thesis by L77 , BVFUNC_1:def 11;
end;
theorem
L81: (for R1 being non  empty set holds (for B37 being (Function of R1 , ( BOOLEAN )) holds ( B37 'imp' ( I_el R1 ) ) = ( I_el R1 )))
proof
let R1 being non  empty set;
let C51 being (Function of R1 , ( BOOLEAN ));
L82: (for B38 being (Element of R1) holds ( ( C51 'imp' ( I_el R1 ) ) . B38 ) = ( TRUE ))
proof
let C52 being (Element of R1);
L83: ( ( C51 'imp' ( I_el R1 ) ) . C52 ) = ( ( 'not' ( C51 . C52 ) ) 'or' ( ( I_el R1 ) . C52 ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( C51 . C52 ) ) 'or' ( TRUE ) ) by BVFUNC_1:def 11;
thus L84: thesis by L83 , BINARITH:10;
end;
thus L85: thesis by L82 , BVFUNC_1:def 11;
end;
theorem
L86: (for R1 being non  empty set holds (for B39 being (Function of R1 , ( BOOLEAN )) holds ( B39 'imp' ( 'not' B39 ) ) = ( 'not' B39 )))
proof
let R1 being non  empty set;
let C53 being (Function of R1 , ( BOOLEAN ));
let C54 being (Element of R1);
L87: ( ( C53 'imp' ( 'not' C53 ) ) . C54 ) = ( ( 'not' ( C53 . C54 ) ) 'or' ( ( 'not' C53 ) . C54 ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' C53 ) . C54 ) 'or' ( ( 'not' C53 ) . C54 ) ) by MARGREL1:def 19
.= ( ( 'not' C53 ) . C54 );
thus L88: thesis by L87;
end;
theorem
L89: (for R1 being non  empty set holds (for B40 , B41 , B42 being (Function of R1 , ( BOOLEAN )) holds ( B40 'imp' B41 ) '<' ( ( B42 'imp' B40 ) 'imp' ( B42 'imp' B41 ) )))
proof
let R1 being non  empty set;
let C55 , C56 , C57 being (Function of R1 , ( BOOLEAN ));
let C58 being (Element of R1);
assume L90: ( ( C55 'imp' C56 ) . C58 ) = ( TRUE );
L91: ( ( 'not' ( C55 . C58 ) ) 'or' ( C56 . C58 ) ) = ( TRUE ) by L90 , BVFUNC_1:def 8;
L92: (( C56 . C58 ) = ( TRUE ) or ( C56 . C58 ) = ( FALSE )) by XBOOLEAN:def 3;
L93:
now
per cases  by L91 , L92 , BINARITH:3;
case L94: ( 'not' ( C55 . C58 ) ) = ( TRUE );
L95: ( ( ( C57 'imp' C55 ) 'imp' ( C57 'imp' C56 ) ) . C58 ) = ( ( 'not' ( ( C57 'imp' C55 ) . C58 ) ) 'or' ( ( C57 'imp' C56 ) . C58 ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( ( 'not' ( C57 . C58 ) ) 'or' ( C55 . C58 ) ) ) 'or' ( ( C57 'imp' C56 ) . C58 ) ) by BVFUNC_1:def 8
.= ( ( C57 . C58 ) 'or' ( ( C57 'imp' C56 ) . C58 ) ) by L94 , MARGREL1:14
.= ( ( C57 . C58 ) 'or' ( ( 'not' ( C57 . C58 ) ) 'or' ( C56 . C58 ) ) ) by BVFUNC_1:def 8
.= ( ( ( C57 . C58 ) 'or' ( 'not' ( C57 . C58 ) ) ) 'or' ( C56 . C58 ) ) by BINARITH:11
.= ( ( TRUE ) 'or' ( C56 . C58 ) ) by XBOOLEAN:102
.= ( TRUE ) by BINARITH:10;
thus L96: thesis by L95;
end;
case L97: ( C56 . C58 ) = ( TRUE );
L98: ( ( ( C57 'imp' C55 ) 'imp' ( C57 'imp' C56 ) ) . C58 ) = ( ( 'not' ( ( C57 'imp' C55 ) . C58 ) ) 'or' ( ( C57 'imp' C56 ) . C58 ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( ( 'not' ( C57 . C58 ) ) 'or' ( C55 . C58 ) ) ) 'or' ( ( C57 'imp' C56 ) . C58 ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( ( 'not' ( C57 . C58 ) ) 'or' ( C55 . C58 ) ) ) 'or' ( ( 'not' ( C57 . C58 ) ) 'or' ( TRUE ) ) ) by L97 , BVFUNC_1:def 8
.= ( ( 'not' ( ( 'not' ( C57 . C58 ) ) 'or' ( C55 . C58 ) ) ) 'or' ( TRUE ) ) by BINARITH:10
.= ( TRUE ) by BINARITH:10;
thus L99: thesis by L98;
end;
end;
thus L101: thesis by L93;
end;
theorem
L102: (for R1 being non  empty set holds (for B43 , B44 , B45 being (Function of R1 , ( BOOLEAN )) holds ( B43 'eqv' B44 ) '<' ( ( B43 'eqv' B45 ) 'eqv' ( B44 'eqv' B45 ) )))
proof
let R1 being non  empty set;
let C59 , C60 , C61 being (Function of R1 , ( BOOLEAN ));
let C62 being (Element of R1);
L103: ( ( C59 'eqv' C60 ) . C62 ) = ( ( ( C59 'imp' C60 ) '&' ( C60 'imp' C59 ) ) . C62 ) by BVFUNC_4:7
.= ( ( ( C59 'imp' C60 ) . C62 ) '&' ( ( C60 'imp' C59 ) . C62 ) ) by MARGREL1:def 20;
assume L104: ( ( C59 'eqv' C60 ) . C62 ) = ( TRUE );
L105: ( ( C59 'imp' C60 ) . C62 ) = ( TRUE ) by L104 , L103 , MARGREL1:12;
L106: ( ( 'not' ( C59 . C62 ) ) 'or' ( C60 . C62 ) ) = ( TRUE ) by L105 , BVFUNC_1:def 8;
L107: (( C59 . C62 ) = ( TRUE ) or ( C59 . C62 ) = ( FALSE )) by XBOOLEAN:def 3;
L108: (( C60 . C62 ) = ( TRUE ) or ( C60 . C62 ) = ( FALSE )) by XBOOLEAN:def 3;
L109: ( ( C60 'imp' C59 ) . C62 ) = ( ( 'not' ( C60 . C62 ) ) 'or' ( C59 . C62 ) ) by BVFUNC_1:def 8;
L110: ( ( ( C59 'eqv' C61 ) 'eqv' ( C60 'eqv' C61 ) ) . C62 ) = ( ( ( ( C59 'eqv' C61 ) 'imp' ( C60 'eqv' C61 ) ) '&' ( ( C60 'eqv' C61 ) 'imp' ( C59 'eqv' C61 ) ) ) . C62 ) by BVFUNC_4:7
.= ( ( ( ( ( C59 'imp' C61 ) '&' ( C61 'imp' C59 ) ) 'imp' ( C60 'eqv' C61 ) ) '&' ( ( C60 'eqv' C61 ) 'imp' ( C59 'eqv' C61 ) ) ) . C62 ) by BVFUNC_4:7
.= ( ( ( ( ( C59 'imp' C61 ) '&' ( C61 'imp' C59 ) ) 'imp' ( ( C60 'imp' C61 ) '&' ( C61 'imp' C60 ) ) ) '&' ( ( C60 'eqv' C61 ) 'imp' ( C59 'eqv' C61 ) ) ) . C62 ) by BVFUNC_4:7
.= ( ( ( ( ( C59 'imp' C61 ) '&' ( C61 'imp' C59 ) ) 'imp' ( ( C60 'imp' C61 ) '&' ( C61 'imp' C60 ) ) ) '&' ( ( ( C60 'imp' C61 ) '&' ( C61 'imp' C60 ) ) 'imp' ( C59 'eqv' C61 ) ) ) . C62 ) by BVFUNC_4:7
.= ( ( ( ( ( C59 'imp' C61 ) '&' ( C61 'imp' C59 ) ) 'imp' ( ( C60 'imp' C61 ) '&' ( C61 'imp' C60 ) ) ) '&' ( ( ( C60 'imp' C61 ) '&' ( C61 'imp' C60 ) ) 'imp' ( ( C59 'imp' C61 ) '&' ( C61 'imp' C59 ) ) ) ) . C62 ) by BVFUNC_4:7
.= ( ( ( ( ( ( 'not' C59 ) 'or' C61 ) '&' ( C61 'imp' C59 ) ) 'imp' ( ( C60 'imp' C61 ) '&' ( C61 'imp' C60 ) ) ) '&' ( ( ( C60 'imp' C61 ) '&' ( C61 'imp' C60 ) ) 'imp' ( ( C59 'imp' C61 ) '&' ( C61 'imp' C59 ) ) ) ) . C62 ) by BVFUNC_4:8
.= ( ( ( ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) 'imp' ( ( C60 'imp' C61 ) '&' ( C61 'imp' C60 ) ) ) '&' ( ( ( C60 'imp' C61 ) '&' ( C61 'imp' C60 ) ) 'imp' ( ( C59 'imp' C61 ) '&' ( C61 'imp' C59 ) ) ) ) . C62 ) by BVFUNC_4:8
.= ( ( ( ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) 'imp' ( ( ( 'not' C60 ) 'or' C61 ) '&' ( C61 'imp' C60 ) ) ) '&' ( ( ( C60 'imp' C61 ) '&' ( C61 'imp' C60 ) ) 'imp' ( ( C59 'imp' C61 ) '&' ( C61 'imp' C59 ) ) ) ) . C62 ) by BVFUNC_4:8
.= ( ( ( ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) 'imp' ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) ) '&' ( ( ( C60 'imp' C61 ) '&' ( C61 'imp' C60 ) ) 'imp' ( ( C59 'imp' C61 ) '&' ( C61 'imp' C59 ) ) ) ) . C62 ) by BVFUNC_4:8
.= ( ( ( ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) 'imp' ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) ) '&' ( ( ( ( 'not' C60 ) 'or' C61 ) '&' ( C61 'imp' C60 ) ) 'imp' ( ( C59 'imp' C61 ) '&' ( C61 'imp' C59 ) ) ) ) . C62 ) by BVFUNC_4:8
.= ( ( ( ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) 'imp' ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) ) '&' ( ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) 'imp' ( ( C59 'imp' C61 ) '&' ( C61 'imp' C59 ) ) ) ) . C62 ) by BVFUNC_4:8
.= ( ( ( ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) 'imp' ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) ) '&' ( ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) 'imp' ( ( ( 'not' C59 ) 'or' C61 ) '&' ( C61 'imp' C59 ) ) ) ) . C62 ) by BVFUNC_4:8
.= ( ( ( ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) 'imp' ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) ) '&' ( ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) 'imp' ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) ) ) . C62 ) by BVFUNC_4:8
.= ( ( ( ( 'not' ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) ) 'or' ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) ) '&' ( ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) 'imp' ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) ) ) . C62 ) by BVFUNC_4:8
.= ( ( ( ( 'not' ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) ) 'or' ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) ) '&' ( ( 'not' ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) ) 'or' ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) ) ) . C62 ) by BVFUNC_4:8
.= ( ( ( ( ( 'not' ( ( 'not' C59 ) 'or' C61 ) ) 'or' ( 'not' ( ( 'not' C61 ) 'or' C59 ) ) ) 'or' ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) ) '&' ( ( 'not' ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) ) 'or' ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) ) ) . C62 ) by BVFUNC_1:14
.= ( ( ( ( ( 'not' ( ( 'not' C59 ) 'or' C61 ) ) 'or' ( 'not' ( ( 'not' C61 ) 'or' C59 ) ) ) 'or' ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) ) '&' ( ( ( 'not' ( ( 'not' C60 ) 'or' C61 ) ) 'or' ( 'not' ( ( 'not' C61 ) 'or' C60 ) ) ) 'or' ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) ) ) . C62 ) by BVFUNC_1:14
.= ( ( ( ( ( ( 'not' ( 'not' C59 ) ) '&' ( 'not' C61 ) ) 'or' ( 'not' ( ( 'not' C61 ) 'or' C59 ) ) ) 'or' ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) ) '&' ( ( ( 'not' ( ( 'not' C60 ) 'or' C61 ) ) 'or' ( 'not' ( ( 'not' C61 ) 'or' C60 ) ) ) 'or' ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) ) ) . C62 ) by BVFUNC_1:13
.= ( ( ( ( ( ( 'not' ( 'not' C59 ) ) '&' ( 'not' C61 ) ) 'or' ( ( 'not' ( 'not' C61 ) ) '&' ( 'not' C59 ) ) ) 'or' ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) ) '&' ( ( ( 'not' ( ( 'not' C60 ) 'or' C61 ) ) 'or' ( 'not' ( ( 'not' C61 ) 'or' C60 ) ) ) 'or' ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) ) ) . C62 ) by BVFUNC_1:13
.= ( ( ( ( ( ( 'not' ( 'not' C59 ) ) '&' ( 'not' C61 ) ) 'or' ( ( 'not' ( 'not' C61 ) ) '&' ( 'not' C59 ) ) ) 'or' ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) ) '&' ( ( ( ( 'not' ( 'not' C60 ) ) '&' ( 'not' C61 ) ) 'or' ( 'not' ( ( 'not' C61 ) 'or' C60 ) ) ) 'or' ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) ) ) . C62 ) by BVFUNC_1:13
.= ( ( ( ( ( C59 '&' ( 'not' C61 ) ) 'or' ( C61 '&' ( 'not' C59 ) ) ) 'or' ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) ) '&' ( ( ( C60 '&' ( 'not' C61 ) ) 'or' ( ( 'not' ( 'not' C61 ) ) '&' ( 'not' C60 ) ) ) 'or' ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) ) ) . C62 ) by BVFUNC_1:13
.= ( ( ( ( ( C59 '&' ( 'not' C61 ) ) 'or' ( C61 '&' ( 'not' C59 ) ) ) 'or' ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) ) . C62 ) '&' ( ( ( ( C60 '&' ( 'not' C61 ) ) 'or' ( C61 '&' ( 'not' C60 ) ) ) 'or' ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) ) . C62 ) ) by MARGREL1:def 20
.= ( ( ( ( ( C59 '&' ( 'not' C61 ) ) 'or' ( C61 '&' ( 'not' C59 ) ) ) . C62 ) 'or' ( ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) . C62 ) ) '&' ( ( ( ( C60 '&' ( 'not' C61 ) ) 'or' ( C61 '&' ( 'not' C60 ) ) ) 'or' ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) ) . C62 ) ) by BVFUNC_1:def 4
.= ( ( ( ( ( C59 '&' ( 'not' C61 ) ) 'or' ( C61 '&' ( 'not' C59 ) ) ) . C62 ) 'or' ( ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) . C62 ) ) '&' ( ( ( ( C60 '&' ( 'not' C61 ) ) 'or' ( C61 '&' ( 'not' C60 ) ) ) . C62 ) 'or' ( ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) . C62 ) ) ) by BVFUNC_1:def 4
.= ( ( ( ( ( C59 '&' ( 'not' C61 ) ) . C62 ) 'or' ( ( C61 '&' ( 'not' C59 ) ) . C62 ) ) 'or' ( ( ( ( 'not' C60 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C60 ) ) . C62 ) ) '&' ( ( ( ( C60 '&' ( 'not' C61 ) ) 'or' ( C61 '&' ( 'not' C60 ) ) ) . C62 ) 'or' ( ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) . C62 ) ) ) by BVFUNC_1:def 4
.= ( ( ( ( ( C59 '&' ( 'not' C61 ) ) . C62 ) 'or' ( ( C61 '&' ( 'not' C59 ) ) . C62 ) ) 'or' ( ( ( ( 'not' C60 ) 'or' C61 ) . C62 ) '&' ( ( ( 'not' C61 ) 'or' C60 ) . C62 ) ) ) '&' ( ( ( ( C60 '&' ( 'not' C61 ) ) 'or' ( C61 '&' ( 'not' C60 ) ) ) . C62 ) 'or' ( ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) . C62 ) ) ) by MARGREL1:def 20
.= ( ( ( ( ( C59 '&' ( 'not' C61 ) ) . C62 ) 'or' ( ( C61 '&' ( 'not' C59 ) ) . C62 ) ) 'or' ( ( ( ( 'not' C60 ) 'or' C61 ) . C62 ) '&' ( ( ( 'not' C61 ) 'or' C60 ) . C62 ) ) ) '&' ( ( ( ( C60 '&' ( 'not' C61 ) ) . C62 ) 'or' ( ( C61 '&' ( 'not' C60 ) ) . C62 ) ) 'or' ( ( ( ( 'not' C59 ) 'or' C61 ) '&' ( ( 'not' C61 ) 'or' C59 ) ) . C62 ) ) ) by BVFUNC_1:def 4
.= ( ( ( ( ( C59 '&' ( 'not' C61 ) ) . C62 ) 'or' ( ( C61 '&' ( 'not' C59 ) ) . C62 ) ) 'or' ( ( ( ( 'not' C60 ) 'or' C61 ) . C62 ) '&' ( ( ( 'not' C61 ) 'or' C60 ) . C62 ) ) ) '&' ( ( ( ( C60 '&' ( 'not' C61 ) ) . C62 ) 'or' ( ( C61 '&' ( 'not' C60 ) ) . C62 ) ) 'or' ( ( ( ( 'not' C59 ) 'or' C61 ) . C62 ) '&' ( ( ( 'not' C61 ) 'or' C59 ) . C62 ) ) ) ) by MARGREL1:def 20
.= ( ( ( ( ( C59 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 '&' ( 'not' C59 ) ) . C62 ) ) 'or' ( ( ( ( 'not' C60 ) 'or' C61 ) . C62 ) '&' ( ( ( 'not' C61 ) 'or' C60 ) . C62 ) ) ) '&' ( ( ( ( C60 '&' ( 'not' C61 ) ) . C62 ) 'or' ( ( C61 '&' ( 'not' C60 ) ) . C62 ) ) 'or' ( ( ( ( 'not' C59 ) 'or' C61 ) . C62 ) '&' ( ( ( 'not' C61 ) 'or' C59 ) . C62 ) ) ) ) by MARGREL1:def 20
.= ( ( ( ( ( C59 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( ( 'not' C59 ) . C62 ) ) ) 'or' ( ( ( ( 'not' C60 ) 'or' C61 ) . C62 ) '&' ( ( ( 'not' C61 ) 'or' C60 ) . C62 ) ) ) '&' ( ( ( ( C60 '&' ( 'not' C61 ) ) . C62 ) 'or' ( ( C61 '&' ( 'not' C60 ) ) . C62 ) ) 'or' ( ( ( ( 'not' C59 ) 'or' C61 ) . C62 ) '&' ( ( ( 'not' C61 ) 'or' C59 ) . C62 ) ) ) ) by MARGREL1:def 20
.= ( ( ( ( ( C59 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( ( 'not' C59 ) . C62 ) ) ) 'or' ( ( ( ( 'not' C60 ) . C62 ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) 'or' C60 ) . C62 ) ) ) '&' ( ( ( ( C60 '&' ( 'not' C61 ) ) . C62 ) 'or' ( ( C61 '&' ( 'not' C60 ) ) . C62 ) ) 'or' ( ( ( ( 'not' C59 ) 'or' C61 ) . C62 ) '&' ( ( ( 'not' C61 ) 'or' C59 ) . C62 ) ) ) ) by BVFUNC_1:def 4
.= ( ( ( ( ( C59 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( ( 'not' C59 ) . C62 ) ) ) 'or' ( ( ( ( 'not' C60 ) . C62 ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C60 . C62 ) ) ) ) '&' ( ( ( ( C60 '&' ( 'not' C61 ) ) . C62 ) 'or' ( ( C61 '&' ( 'not' C60 ) ) . C62 ) ) 'or' ( ( ( ( 'not' C59 ) 'or' C61 ) . C62 ) '&' ( ( ( 'not' C61 ) 'or' C59 ) . C62 ) ) ) ) by BVFUNC_1:def 4
.= ( ( ( ( ( C59 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( ( 'not' C59 ) . C62 ) ) ) 'or' ( ( ( ( 'not' C60 ) . C62 ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C60 . C62 ) ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 '&' ( 'not' C60 ) ) . C62 ) ) 'or' ( ( ( ( 'not' C59 ) 'or' C61 ) . C62 ) '&' ( ( ( 'not' C61 ) 'or' C59 ) . C62 ) ) ) ) by MARGREL1:def 20
.= ( ( ( ( ( C59 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( ( 'not' C59 ) . C62 ) ) ) 'or' ( ( ( ( 'not' C60 ) . C62 ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C60 . C62 ) ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( ( 'not' C60 ) . C62 ) ) ) 'or' ( ( ( ( 'not' C59 ) 'or' C61 ) . C62 ) '&' ( ( ( 'not' C61 ) 'or' C59 ) . C62 ) ) ) ) by MARGREL1:def 20
.= ( ( ( ( ( C59 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( ( 'not' C59 ) . C62 ) ) ) 'or' ( ( ( ( 'not' C60 ) . C62 ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C60 . C62 ) ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( ( 'not' C60 ) . C62 ) ) ) 'or' ( ( ( ( 'not' C59 ) . C62 ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) 'or' C59 ) . C62 ) ) ) ) by BVFUNC_1:def 4
.= ( ( ( ( ( C59 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( ( 'not' C59 ) . C62 ) ) ) 'or' ( ( ( ( 'not' C60 ) . C62 ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C60 . C62 ) ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( ( 'not' C60 ) . C62 ) ) ) 'or' ( ( ( ( 'not' C59 ) . C62 ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C59 . C62 ) ) ) ) ) by BVFUNC_1:def 4
.= ( ( ( ( ( C59 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C59 . C62 ) ) ) ) 'or' ( ( ( ( 'not' C60 ) . C62 ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C60 . C62 ) ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( ( 'not' C60 ) . C62 ) ) ) 'or' ( ( ( ( 'not' C59 ) . C62 ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C59 . C62 ) ) ) ) ) by MARGREL1:def 19
.= ( ( ( ( ( C59 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C59 . C62 ) ) ) ) 'or' ( ( ( 'not' ( C60 . C62 ) ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C60 . C62 ) ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( ( 'not' C60 ) . C62 ) ) ) 'or' ( ( ( ( 'not' C59 ) . C62 ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C59 . C62 ) ) ) ) ) by MARGREL1:def 19
.= ( ( ( ( ( C59 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C59 . C62 ) ) ) ) 'or' ( ( ( 'not' ( C60 . C62 ) ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C60 . C62 ) ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) 'or' ( ( ( ( 'not' C59 ) . C62 ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C59 . C62 ) ) ) ) ) by MARGREL1:def 19
.= ( ( ( ( ( C59 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C59 . C62 ) ) ) ) 'or' ( ( ( 'not' ( C60 . C62 ) ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C60 . C62 ) ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) 'or' ( ( ( 'not' ( C59 . C62 ) ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C59 . C62 ) ) ) ) ) by MARGREL1:def 19;
L111: ( ( C60 'imp' C59 ) . C62 ) = ( TRUE ) by L104 , L103 , MARGREL1:12;
L112: (( 'not' ( C60 . C62 ) ) = ( TRUE ) or ( C59 . C62 ) = ( TRUE )) by L111 , L109 , L107 , BINARITH:3;
L113:
now
per cases  by L106 , L108 , BINARITH:3;
case L114: ( 'not' ( C59 . C62 ) ) = ( TRUE );
L115: ( C59 . C62 ) = ( FALSE ) by L114 , MARGREL1:11;
L116: ( ( ( C59 'eqv' C61 ) 'eqv' ( C60 'eqv' C61 ) ) . C62 ) = ( ( ( ( FALSE ) 'or' ( ( C61 . C62 ) '&' ( TRUE ) ) ) 'or' ( ( ( 'not' ( C60 . C62 ) ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C60 . C62 ) ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) 'or' ( ( ( TRUE ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( FALSE ) ) ) ) ) by L115 , L110 , L114 , MARGREL1:13
.= ( ( ( ( FALSE ) 'or' ( C61 . C62 ) ) 'or' ( ( ( 'not' ( C60 . C62 ) ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C60 . C62 ) ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) 'or' ( ( ( TRUE ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( FALSE ) ) ) ) ) by MARGREL1:14
.= ( ( ( C61 . C62 ) 'or' ( ( ( 'not' ( C60 . C62 ) ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C60 . C62 ) ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) 'or' ( ( ( TRUE ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( FALSE ) ) ) ) ) by BINARITH:3
.= ( ( ( C61 . C62 ) 'or' ( ( ( 'not' ( C60 . C62 ) ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C60 . C62 ) ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) 'or' ( ( ( TRUE ) 'or' ( C61 . C62 ) ) '&' ( ( 'not' C61 ) . C62 ) ) ) ) by BINARITH:3
.= ( ( ( C61 . C62 ) 'or' ( ( ( 'not' ( C60 . C62 ) ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C60 . C62 ) ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) 'or' ( ( TRUE ) '&' ( ( 'not' C61 ) . C62 ) ) ) ) by BINARITH:10
.= ( ( ( C61 . C62 ) 'or' ( ( ( 'not' ( C60 . C62 ) ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C60 . C62 ) ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) 'or' ( ( 'not' C61 ) . C62 ) ) ) by MARGREL1:14
.= ( ( ( ( C61 . C62 ) 'or' ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) ) '&' ( ( C61 . C62 ) 'or' ( ( ( 'not' C61 ) . C62 ) 'or' ( C60 . C62 ) ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) 'or' ( ( 'not' C61 ) . C62 ) ) ) by XBOOLEAN:9
.= ( ( ( ( ( C61 . C62 ) 'or' ( C61 . C62 ) ) 'or' ( 'not' ( C60 . C62 ) ) ) '&' ( ( C61 . C62 ) 'or' ( ( ( 'not' C61 ) . C62 ) 'or' ( C60 . C62 ) ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) 'or' ( ( 'not' C61 ) . C62 ) ) ) by BINARITH:11
.= ( ( ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) '&' ( ( ( C61 . C62 ) 'or' ( ( 'not' C61 ) . C62 ) ) 'or' ( C60 . C62 ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) 'or' ( ( 'not' C61 ) . C62 ) ) ) by BINARITH:11
.= ( ( ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) '&' ( ( ( C61 . C62 ) 'or' ( 'not' ( C61 . C62 ) ) ) 'or' ( C60 . C62 ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) 'or' ( ( 'not' C61 ) . C62 ) ) ) by MARGREL1:def 19
.= ( ( ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) '&' ( ( TRUE ) 'or' ( C60 . C62 ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) 'or' ( ( 'not' C61 ) . C62 ) ) ) by XBOOLEAN:102
.= ( ( ( TRUE ) '&' ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) 'or' ( ( 'not' C61 ) . C62 ) ) ) by BINARITH:10
.= ( ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) '&' ( ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) 'or' ( ( 'not' C61 ) . C62 ) ) ) by MARGREL1:14
.= ( ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) '&' ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( ( 'not' C61 ) . C62 ) 'or' ( ( C61 . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) ) ) by BINARITH:11
.= ( ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) '&' ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( ( ( 'not' C61 ) . C62 ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) ) ) ) by XBOOLEAN:9
.= ( ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) '&' ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( ( 'not' ( C61 . C62 ) ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) ) ) ) by MARGREL1:def 19
.= ( ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) '&' ( ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( TRUE ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) ) ) ) by XBOOLEAN:102
.= ( ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) '&' ( ( ( ( 'not' C61 ) . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) 'or' ( ( C60 . C62 ) '&' ( ( 'not' C61 ) . C62 ) ) ) ) by MARGREL1:14
.= ( ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) '&' ( ( ( ( ( 'not' C61 ) . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) 'or' ( C60 . C62 ) ) '&' ( ( ( ( 'not' C61 ) . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) 'or' ( ( 'not' C61 ) . C62 ) ) ) ) by XBOOLEAN:9
.= ( ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) '&' ( ( ( ( 'not' C61 ) . C62 ) 'or' ( ( 'not' ( C60 . C62 ) ) 'or' ( C60 . C62 ) ) ) '&' ( ( ( ( 'not' C61 ) . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) 'or' ( ( 'not' C61 ) . C62 ) ) ) ) by BINARITH:11
.= ( ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) '&' ( ( ( ( 'not' C61 ) . C62 ) 'or' ( TRUE ) ) '&' ( ( ( ( 'not' C61 ) . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) 'or' ( ( 'not' C61 ) . C62 ) ) ) ) by XBOOLEAN:102
.= ( ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) '&' ( ( TRUE ) '&' ( ( ( ( 'not' C61 ) . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) 'or' ( ( 'not' C61 ) . C62 ) ) ) ) by BINARITH:10
.= ( ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) '&' ( ( ( 'not' ( C60 . C62 ) ) 'or' ( ( 'not' C61 ) . C62 ) ) 'or' ( ( 'not' C61 ) . C62 ) ) ) by MARGREL1:14
.= ( ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) '&' ( ( 'not' ( C60 . C62 ) ) 'or' ( ( ( 'not' C61 ) . C62 ) 'or' ( ( 'not' C61 ) . C62 ) ) ) ) by BINARITH:11
.= ( ( ( 'not' ( C60 . C62 ) ) '&' ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) ) 'or' ( ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) '&' ( ( 'not' C61 ) . C62 ) ) ) by XBOOLEAN:8
.= ( ( ( ( 'not' ( C60 . C62 ) ) '&' ( C61 . C62 ) ) 'or' ( ( 'not' ( C60 . C62 ) ) '&' ( 'not' ( C60 . C62 ) ) ) ) 'or' ( ( ( 'not' C61 ) . C62 ) '&' ( ( C61 . C62 ) 'or' ( 'not' ( C60 . C62 ) ) ) ) ) by XBOOLEAN:8
.= ( ( ( ( 'not' ( C60 . C62 ) ) '&' ( C61 . C62 ) ) 'or' ( 'not' ( C60 . C62 ) ) ) 'or' ( ( ( ( 'not' C61 ) . C62 ) '&' ( C61 . C62 ) ) 'or' ( ( ( 'not' C61 ) . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) ) by XBOOLEAN:8
.= ( ( ( ( 'not' ( C60 . C62 ) ) '&' ( C61 . C62 ) ) 'or' ( 'not' ( C60 . C62 ) ) ) 'or' ( ( ( C61 . C62 ) '&' ( 'not' ( C61 . C62 ) ) ) 'or' ( ( ( 'not' C61 ) . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) ) by MARGREL1:def 19
.= ( ( ( ( 'not' ( C60 . C62 ) ) '&' ( C61 . C62 ) ) 'or' ( 'not' ( C60 . C62 ) ) ) 'or' ( ( FALSE ) 'or' ( ( ( 'not' C61 ) . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) ) by XBOOLEAN:138
.= ( ( ( 'not' ( C60 . C62 ) ) 'or' ( ( 'not' ( C60 . C62 ) ) '&' ( C61 . C62 ) ) ) 'or' ( ( ( 'not' C61 ) . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) by BINARITH:3
.= ( ( 'not' ( C60 . C62 ) ) 'or' ( ( ( 'not' ( C60 . C62 ) ) '&' ( C61 . C62 ) ) 'or' ( ( ( 'not' C61 ) . C62 ) '&' ( 'not' ( C60 . C62 ) ) ) ) ) by BINARITH:11
.= ( TRUE ) by L112 , L114 , BINARITH:10 , MARGREL1:11;
thus L117: thesis by L116;
end;
case L118: ( C60 . C62 ) = ( TRUE );
L119: ( 'not' ( C60 . C62 ) ) = ( FALSE ) by L118 , MARGREL1:11;
L120: ( ( ( C59 'eqv' C61 ) 'eqv' ( C60 'eqv' C61 ) ) . C62 ) = ( ( ( ( ( 'not' C61 ) . C62 ) 'or' ( ( FALSE ) '&' ( C61 . C62 ) ) ) 'or' ( ( ( FALSE ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( TRUE ) ) ) ) '&' ( ( ( ( 'not' C61 ) . C62 ) 'or' ( ( C61 . C62 ) '&' ( FALSE ) ) ) 'or' ( ( ( FALSE ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( TRUE ) ) ) ) ) by L119 , L104 , L103 , L109 , L107 , L110 , L118 , MARGREL1:12 , MARGREL1:14
.= ( ( ( ( ( 'not' C61 ) . C62 ) 'or' ( FALSE ) ) 'or' ( ( ( FALSE ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( TRUE ) ) ) ) '&' ( ( ( ( 'not' C61 ) . C62 ) 'or' ( FALSE ) ) 'or' ( ( ( FALSE ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( TRUE ) ) ) ) ) by MARGREL1:13
.= ( ( ( ( ( 'not' C61 ) . C62 ) 'or' ( FALSE ) ) 'or' ( ( ( FALSE ) 'or' ( C61 . C62 ) ) '&' ( TRUE ) ) ) '&' ( ( ( ( 'not' C61 ) . C62 ) 'or' ( FALSE ) ) 'or' ( ( ( FALSE ) 'or' ( C61 . C62 ) ) '&' ( TRUE ) ) ) ) by BINARITH:10
.= ( ( ( ( ( 'not' C61 ) . C62 ) 'or' ( FALSE ) ) 'or' ( ( C61 . C62 ) '&' ( TRUE ) ) ) '&' ( ( ( ( 'not' C61 ) . C62 ) 'or' ( FALSE ) ) 'or' ( ( C61 . C62 ) '&' ( TRUE ) ) ) ) by BINARITH:3
.= ( ( ( ( 'not' C61 ) . C62 ) 'or' ( ( TRUE ) '&' ( C61 . C62 ) ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( ( C61 . C62 ) '&' ( TRUE ) ) ) ) by BINARITH:3
.= ( ( ( ( 'not' C61 ) . C62 ) 'or' ( C61 . C62 ) ) '&' ( ( ( 'not' C61 ) . C62 ) 'or' ( C61 . C62 ) ) ) by MARGREL1:14
.= ( ( ( 'not' ( C61 . C62 ) ) 'or' ( C61 . C62 ) ) '&' ( ( 'not' ( C61 . C62 ) ) 'or' ( C61 . C62 ) ) ) by MARGREL1:def 19
.= ( TRUE ) by XBOOLEAN:102;
thus L121: thesis by L120;
end;
end;
thus L123: thesis by L113;
end;
theorem
L124: (for R1 being non  empty set holds (for B46 , B47 , B48 being (Function of R1 , ( BOOLEAN )) holds ( B46 'eqv' B47 ) '<' ( ( B46 'imp' B48 ) 'eqv' ( B47 'imp' B48 ) )))
proof
let R1 being non  empty set;
let C63 , C64 , C65 being (Function of R1 , ( BOOLEAN ));
let C66 being (Element of R1);
L125: ( ( C63 'eqv' C64 ) . C66 ) = ( ( ( C63 'imp' C64 ) '&' ( C64 'imp' C63 ) ) . C66 ) by BVFUNC_4:7
.= ( ( ( C63 'imp' C64 ) . C66 ) '&' ( ( C64 'imp' C63 ) . C66 ) ) by MARGREL1:def 20;
assume L126: ( ( C63 'eqv' C64 ) . C66 ) = ( TRUE );
L127: ( ( C63 'imp' C64 ) . C66 ) = ( TRUE ) by L126 , L125 , MARGREL1:12;
L128: ( ( 'not' ( C63 . C66 ) ) 'or' ( C64 . C66 ) ) = ( TRUE ) by L127 , BVFUNC_1:def 8;
L129: ( ( C64 'imp' C63 ) . C66 ) = ( TRUE ) by L126 , L125 , MARGREL1:12;
L130: ( ( 'not' ( C64 . C66 ) ) 'or' ( C63 . C66 ) ) = ( TRUE ) by L129 , BVFUNC_1:def 8;
L131: ( ( ( C63 'imp' C65 ) 'eqv' ( C64 'imp' C65 ) ) . C66 ) = ( ( ( ( C63 'imp' C65 ) 'imp' ( C64 'imp' C65 ) ) '&' ( ( C64 'imp' C65 ) 'imp' ( C63 'imp' C65 ) ) ) . C66 ) by BVFUNC_4:7
.= ( ( ( ( C63 'imp' C65 ) 'imp' ( C64 'imp' C65 ) ) . C66 ) '&' ( ( ( C64 'imp' C65 ) 'imp' ( C63 'imp' C65 ) ) . C66 ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( ( C63 'imp' C65 ) . C66 ) ) 'or' ( ( C64 'imp' C65 ) . C66 ) ) '&' ( ( ( C64 'imp' C65 ) 'imp' ( C63 'imp' C65 ) ) . C66 ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( ( C63 'imp' C65 ) . C66 ) ) 'or' ( ( C64 'imp' C65 ) . C66 ) ) '&' ( ( 'not' ( ( C64 'imp' C65 ) . C66 ) ) 'or' ( ( C63 'imp' C65 ) . C66 ) ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( ( 'not' ( C63 . C66 ) ) 'or' ( C65 . C66 ) ) ) 'or' ( ( C64 'imp' C65 ) . C66 ) ) '&' ( ( 'not' ( ( C64 'imp' C65 ) . C66 ) ) 'or' ( ( C63 'imp' C65 ) . C66 ) ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( ( 'not' ( C63 . C66 ) ) 'or' ( C65 . C66 ) ) ) 'or' ( ( 'not' ( C64 . C66 ) ) 'or' ( C65 . C66 ) ) ) '&' ( ( 'not' ( ( C64 'imp' C65 ) . C66 ) ) 'or' ( ( C63 'imp' C65 ) . C66 ) ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( ( 'not' ( C63 . C66 ) ) 'or' ( C65 . C66 ) ) ) 'or' ( ( 'not' ( C64 . C66 ) ) 'or' ( C65 . C66 ) ) ) '&' ( ( 'not' ( ( 'not' ( C64 . C66 ) ) 'or' ( C65 . C66 ) ) ) 'or' ( ( C63 'imp' C65 ) . C66 ) ) ) by BVFUNC_1:def 8
.= ( ( ( ( C63 . C66 ) '&' ( 'not' ( C65 . C66 ) ) ) 'or' ( ( 'not' ( C64 . C66 ) ) 'or' ( C65 . C66 ) ) ) '&' ( ( ( C64 . C66 ) '&' ( 'not' ( C65 . C66 ) ) ) 'or' ( ( 'not' ( C63 . C66 ) ) 'or' ( C65 . C66 ) ) ) ) by BVFUNC_1:def 8;
L132: (( C63 . C66 ) = ( TRUE ) or ( C63 . C66 ) = ( FALSE )) by XBOOLEAN:def 3;
L133: ( ( C64 'imp' C63 ) . C66 ) = ( ( 'not' ( C64 . C66 ) ) 'or' ( C63 . C66 ) ) by BVFUNC_1:def 8;
L134: (( C64 . C66 ) = ( TRUE ) or ( C64 . C66 ) = ( FALSE )) by XBOOLEAN:def 3;
L135:
now
per cases  by L128 , L134 , BINARITH:3;
case L136: ( 'not' ( C63 . C66 ) ) = ( TRUE );
L137: ( C63 . C66 ) = ( FALSE ) by L136 , MARGREL1:11;
L138: ( 'not' ( C64 . C66 ) ) = ( TRUE ) by L137 , L130 , BINARITH:3;
L139: ( ( ( C63 'imp' C65 ) 'eqv' ( C64 'imp' C65 ) ) . C66 ) = ( ( ( FALSE ) 'or' ( ( TRUE ) 'or' ( C65 . C66 ) ) ) '&' ( ( FALSE ) 'or' ( ( TRUE ) 'or' ( C65 . C66 ) ) ) ) by L138 , L131 , L136 , L137 , MARGREL1:13
.= ( ( ( TRUE ) 'or' ( C65 . C66 ) ) '&' ( ( TRUE ) 'or' ( C65 . C66 ) ) ) by BINARITH:3
.= ( TRUE ) by BINARITH:10;
thus L140: thesis by L139;
end;
case L141: ( C64 . C66 ) = ( TRUE );
L142: ( 'not' ( C64 . C66 ) ) = ( FALSE ) by L141 , MARGREL1:11;
L143: ( ( ( C63 'imp' C65 ) 'eqv' ( C64 'imp' C65 ) ) . C66 ) = ( ( ( 'not' ( C65 . C66 ) ) 'or' ( ( FALSE ) 'or' ( C65 . C66 ) ) ) '&' ( ( 'not' ( C65 . C66 ) ) 'or' ( ( FALSE ) 'or' ( C65 . C66 ) ) ) ) by L142 , L126 , L125 , L133 , L132 , L131 , L141 , BINARITH:3 , MARGREL1:12
.= ( ( ( 'not' ( C65 . C66 ) ) 'or' ( C65 . C66 ) ) '&' ( ( 'not' ( C65 . C66 ) ) 'or' ( C65 . C66 ) ) ) by BINARITH:3
.= ( TRUE ) by XBOOLEAN:102;
thus L144: thesis by L143;
end;
end;
thus L146: thesis by L135;
end;
theorem
L147: (for R1 being non  empty set holds (for B49 , B50 , B51 being (Function of R1 , ( BOOLEAN )) holds ( B49 'eqv' B50 ) '<' ( ( B51 'imp' B49 ) 'eqv' ( B51 'imp' B50 ) )))
proof
let R1 being non  empty set;
let C67 , C68 , C69 being (Function of R1 , ( BOOLEAN ));
let C70 being (Element of R1);
L148: ( ( C67 'eqv' C68 ) . C70 ) = ( ( ( C67 'imp' C68 ) '&' ( C68 'imp' C67 ) ) . C70 ) by BVFUNC_4:7
.= ( ( ( C67 'imp' C68 ) . C70 ) '&' ( ( C68 'imp' C67 ) . C70 ) ) by MARGREL1:def 20;
assume L149: ( ( C67 'eqv' C68 ) . C70 ) = ( TRUE );
L150: ( ( C67 'imp' C68 ) . C70 ) = ( TRUE ) by L149 , L148 , MARGREL1:12;
L151: ( ( 'not' ( C67 . C70 ) ) 'or' ( C68 . C70 ) ) = ( TRUE ) by L150 , BVFUNC_1:def 8;
L152: ( ( C68 'imp' C67 ) . C70 ) = ( TRUE ) by L149 , L148 , MARGREL1:12;
L153: ( ( 'not' ( C68 . C70 ) ) 'or' ( C67 . C70 ) ) = ( TRUE ) by L152 , BVFUNC_1:def 8;
L154: ( ( ( C69 'imp' C67 ) 'eqv' ( C69 'imp' C68 ) ) . C70 ) = ( ( ( ( C69 'imp' C67 ) 'imp' ( C69 'imp' C68 ) ) '&' ( ( C69 'imp' C68 ) 'imp' ( C69 'imp' C67 ) ) ) . C70 ) by BVFUNC_4:7
.= ( ( ( ( C69 'imp' C67 ) 'imp' ( C69 'imp' C68 ) ) . C70 ) '&' ( ( ( C69 'imp' C68 ) 'imp' ( C69 'imp' C67 ) ) . C70 ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( ( C69 'imp' C67 ) . C70 ) ) 'or' ( ( C69 'imp' C68 ) . C70 ) ) '&' ( ( ( C69 'imp' C68 ) 'imp' ( C69 'imp' C67 ) ) . C70 ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( ( C69 'imp' C67 ) . C70 ) ) 'or' ( ( C69 'imp' C68 ) . C70 ) ) '&' ( ( 'not' ( ( C69 'imp' C68 ) . C70 ) ) 'or' ( ( C69 'imp' C67 ) . C70 ) ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( ( 'not' ( C69 . C70 ) ) 'or' ( C67 . C70 ) ) ) 'or' ( ( C69 'imp' C68 ) . C70 ) ) '&' ( ( 'not' ( ( C69 'imp' C68 ) . C70 ) ) 'or' ( ( C69 'imp' C67 ) . C70 ) ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( ( 'not' ( C69 . C70 ) ) 'or' ( C67 . C70 ) ) ) 'or' ( ( 'not' ( C69 . C70 ) ) 'or' ( C68 . C70 ) ) ) '&' ( ( 'not' ( ( C69 'imp' C68 ) . C70 ) ) 'or' ( ( C69 'imp' C67 ) . C70 ) ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( ( 'not' ( C69 . C70 ) ) 'or' ( C67 . C70 ) ) ) 'or' ( ( 'not' ( C69 . C70 ) ) 'or' ( C68 . C70 ) ) ) '&' ( ( 'not' ( ( 'not' ( C69 . C70 ) ) 'or' ( C68 . C70 ) ) ) 'or' ( ( C69 'imp' C67 ) . C70 ) ) ) by BVFUNC_1:def 8
.= ( ( ( ( C69 . C70 ) '&' ( 'not' ( C67 . C70 ) ) ) 'or' ( ( 'not' ( C69 . C70 ) ) 'or' ( C68 . C70 ) ) ) '&' ( ( ( C69 . C70 ) '&' ( 'not' ( C68 . C70 ) ) ) 'or' ( ( 'not' ( C69 . C70 ) ) 'or' ( C67 . C70 ) ) ) ) by BVFUNC_1:def 8;
L155: (( C67 . C70 ) = ( TRUE ) or ( C67 . C70 ) = ( FALSE )) by XBOOLEAN:def 3;
L156: ( ( C68 'imp' C67 ) . C70 ) = ( ( 'not' ( C68 . C70 ) ) 'or' ( C67 . C70 ) ) by BVFUNC_1:def 8;
L157: (( C68 . C70 ) = ( TRUE ) or ( C68 . C70 ) = ( FALSE )) by XBOOLEAN:def 3;
L158:
now
per cases  by L151 , L157 , BINARITH:3;
case L159: ( 'not' ( C67 . C70 ) ) = ( TRUE );
L160: ( C67 . C70 ) = ( FALSE ) by L159 , MARGREL1:11;
L161: ( 'not' ( C68 . C70 ) ) = ( TRUE ) by L160 , L153 , BINARITH:3;
L162: ( ( ( C69 'imp' C67 ) 'eqv' ( C69 'imp' C68 ) ) . C70 ) = ( ( ( C69 . C70 ) 'or' ( ( 'not' ( C69 . C70 ) ) 'or' ( FALSE ) ) ) '&' ( ( C69 . C70 ) 'or' ( ( 'not' ( C69 . C70 ) ) 'or' ( FALSE ) ) ) ) by L161 , L154 , L159 , L160 , MARGREL1:14
.= ( ( ( C69 . C70 ) 'or' ( 'not' ( C69 . C70 ) ) ) '&' ( ( C69 . C70 ) 'or' ( 'not' ( C69 . C70 ) ) ) ) by BINARITH:3
.= ( TRUE ) by XBOOLEAN:102;
thus L163: thesis by L162;
end;
case L164: ( C68 . C70 ) = ( TRUE );
L165: ( 'not' ( C68 . C70 ) ) = ( FALSE ) by L164 , MARGREL1:11;
L166: ( ( ( C69 'imp' C67 ) 'eqv' ( C69 'imp' C68 ) ) . C70 ) = ( ( ( FALSE ) 'or' ( ( 'not' ( C69 . C70 ) ) 'or' ( TRUE ) ) ) '&' ( ( FALSE ) 'or' ( ( 'not' ( C69 . C70 ) ) 'or' ( TRUE ) ) ) ) by L165 , L149 , L148 , L156 , L155 , L154 , L164 , MARGREL1:12
.= ( ( ( 'not' ( C69 . C70 ) ) 'or' ( TRUE ) ) '&' ( ( 'not' ( C69 . C70 ) ) 'or' ( TRUE ) ) ) by BINARITH:3
.= ( TRUE ) by BINARITH:10;
thus L167: thesis by L166;
end;
end;
thus L169: thesis by L158;
end;
theorem
L170: (for R1 being non  empty set holds (for B52 , B53 , B54 being (Function of R1 , ( BOOLEAN )) holds ( B52 'eqv' B53 ) '<' ( ( B52 '&' B54 ) 'eqv' ( B53 '&' B54 ) )))
proof
let R1 being non  empty set;
let C71 , C72 , C73 being (Function of R1 , ( BOOLEAN ));
let C74 being (Element of R1);
L171: ( ( C71 'eqv' C72 ) . C74 ) = ( ( ( C71 'imp' C72 ) '&' ( C72 'imp' C71 ) ) . C74 ) by BVFUNC_4:7
.= ( ( ( C71 'imp' C72 ) . C74 ) '&' ( ( C72 'imp' C71 ) . C74 ) ) by MARGREL1:def 20;
assume L172: ( ( C71 'eqv' C72 ) . C74 ) = ( TRUE );
L173: ( ( C71 'imp' C72 ) . C74 ) = ( TRUE ) by L172 , L171 , MARGREL1:12;
L174: ( ( 'not' ( C71 . C74 ) ) 'or' ( C72 . C74 ) ) = ( TRUE ) by L173 , BVFUNC_1:def 8;
L175: ( ( C72 'imp' C71 ) . C74 ) = ( TRUE ) by L172 , L171 , MARGREL1:12;
L176: ( ( 'not' ( C72 . C74 ) ) 'or' ( C71 . C74 ) ) = ( TRUE ) by L175 , BVFUNC_1:def 8;
L177: ( ( ( C71 '&' C73 ) 'eqv' ( C72 '&' C73 ) ) . C74 ) = ( ( ( ( C71 '&' C73 ) 'imp' ( C72 '&' C73 ) ) '&' ( ( C72 '&' C73 ) 'imp' ( C71 '&' C73 ) ) ) . C74 ) by BVFUNC_4:7
.= ( ( ( ( C71 '&' C73 ) 'imp' ( C72 '&' C73 ) ) . C74 ) '&' ( ( ( C72 '&' C73 ) 'imp' ( C71 '&' C73 ) ) . C74 ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( ( C71 '&' C73 ) . C74 ) ) 'or' ( ( C72 '&' C73 ) . C74 ) ) '&' ( ( ( C72 '&' C73 ) 'imp' ( C71 '&' C73 ) ) . C74 ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( ( C71 '&' C73 ) . C74 ) ) 'or' ( ( C72 '&' C73 ) . C74 ) ) '&' ( ( 'not' ( ( C72 '&' C73 ) . C74 ) ) 'or' ( ( C71 '&' C73 ) . C74 ) ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( ( C71 . C74 ) '&' ( C73 . C74 ) ) ) 'or' ( ( C72 '&' C73 ) . C74 ) ) '&' ( ( 'not' ( ( C72 '&' C73 ) . C74 ) ) 'or' ( ( C71 '&' C73 ) . C74 ) ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( ( C71 . C74 ) '&' ( C73 . C74 ) ) ) 'or' ( ( C72 . C74 ) '&' ( C73 . C74 ) ) ) '&' ( ( 'not' ( ( C72 '&' C73 ) . C74 ) ) 'or' ( ( C71 '&' C73 ) . C74 ) ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( ( C71 . C74 ) '&' ( C73 . C74 ) ) ) 'or' ( ( C72 . C74 ) '&' ( C73 . C74 ) ) ) '&' ( ( 'not' ( ( C72 . C74 ) '&' ( C73 . C74 ) ) ) 'or' ( ( C71 '&' C73 ) . C74 ) ) ) by MARGREL1:def 20
.= ( ( ( ( 'not' ( C71 . C74 ) ) 'or' ( 'not' ( C73 . C74 ) ) ) 'or' ( ( C72 . C74 ) '&' ( C73 . C74 ) ) ) '&' ( ( ( 'not' ( C72 . C74 ) ) 'or' ( 'not' ( C73 . C74 ) ) ) 'or' ( ( C71 . C74 ) '&' ( C73 . C74 ) ) ) ) by MARGREL1:def 20;
L178: (( C71 . C74 ) = ( TRUE ) or ( C71 . C74 ) = ( FALSE )) by XBOOLEAN:def 3;
L179: ( ( C72 'imp' C71 ) . C74 ) = ( ( 'not' ( C72 . C74 ) ) 'or' ( C71 . C74 ) ) by BVFUNC_1:def 8;
L180: (( C72 . C74 ) = ( TRUE ) or ( C72 . C74 ) = ( FALSE )) by XBOOLEAN:def 3;
L181:
now
per cases  by L174 , L180 , BINARITH:3;
case L182: ( 'not' ( C71 . C74 ) ) = ( TRUE );
L183: ( C71 . C74 ) = ( FALSE ) by L182 , MARGREL1:11;
L184: ( 'not' ( C72 . C74 ) ) = ( TRUE ) by L183 , L176 , BINARITH:3;
L185: ( ( ( C71 '&' C73 ) 'eqv' ( C72 '&' C73 ) ) . C74 ) = ( ( ( ( TRUE ) 'or' ( 'not' ( C73 . C74 ) ) ) 'or' ( FALSE ) ) '&' ( ( ( TRUE ) 'or' ( 'not' ( C73 . C74 ) ) ) 'or' ( FALSE ) ) ) by L184 , L177 , L182 , L183 , MARGREL1:13
.= ( ( ( TRUE ) 'or' ( 'not' ( C73 . C74 ) ) ) '&' ( ( TRUE ) 'or' ( 'not' ( C73 . C74 ) ) ) ) by BINARITH:3
.= ( TRUE ) by BINARITH:10;
thus L186: thesis by L185;
end;
case L187: ( C72 . C74 ) = ( TRUE );
L188: ( 'not' ( C72 . C74 ) ) = ( FALSE ) by L187 , MARGREL1:11;
L189: ( ( ( C71 '&' C73 ) 'eqv' ( C72 '&' C73 ) ) . C74 ) = ( ( ( ( FALSE ) 'or' ( 'not' ( C73 . C74 ) ) ) 'or' ( C73 . C74 ) ) '&' ( ( ( FALSE ) 'or' ( 'not' ( C73 . C74 ) ) ) 'or' ( C73 . C74 ) ) ) by L188 , L172 , L171 , L179 , L178 , L177 , L187 , BINARITH:3 , MARGREL1:12
.= ( ( ( 'not' ( C73 . C74 ) ) 'or' ( C73 . C74 ) ) '&' ( ( 'not' ( C73 . C74 ) ) 'or' ( C73 . C74 ) ) ) by BINARITH:3
.= ( TRUE ) by XBOOLEAN:102;
thus L190: thesis by L189;
end;
end;
thus L192: thesis by L181;
end;
theorem
L193: (for R1 being non  empty set holds (for B55 , B56 , B57 being (Function of R1 , ( BOOLEAN )) holds ( B55 'eqv' B56 ) '<' ( ( B55 'or' B57 ) 'eqv' ( B56 'or' B57 ) )))
proof
let R1 being non  empty set;
let C75 , C76 , C77 being (Function of R1 , ( BOOLEAN ));
let C78 being (Element of R1);
L194: ( ( C75 'eqv' C76 ) . C78 ) = ( ( ( C75 'imp' C76 ) '&' ( C76 'imp' C75 ) ) . C78 ) by BVFUNC_4:7
.= ( ( ( C75 'imp' C76 ) . C78 ) '&' ( ( C76 'imp' C75 ) . C78 ) ) by MARGREL1:def 20;
assume L195: ( ( C75 'eqv' C76 ) . C78 ) = ( TRUE );
L196: ( ( C75 'imp' C76 ) . C78 ) = ( TRUE ) by L195 , L194 , MARGREL1:12;
L197: ( ( 'not' ( C75 . C78 ) ) 'or' ( C76 . C78 ) ) = ( TRUE ) by L196 , BVFUNC_1:def 8;
L198: ( ( C76 'imp' C75 ) . C78 ) = ( TRUE ) by L195 , L194 , MARGREL1:12;
L199: ( ( 'not' ( C76 . C78 ) ) 'or' ( C75 . C78 ) ) = ( TRUE ) by L198 , BVFUNC_1:def 8;
L200: ( ( ( C75 'or' C77 ) 'eqv' ( C76 'or' C77 ) ) . C78 ) = ( ( ( ( C75 'or' C77 ) 'imp' ( C76 'or' C77 ) ) '&' ( ( C76 'or' C77 ) 'imp' ( C75 'or' C77 ) ) ) . C78 ) by BVFUNC_4:7
.= ( ( ( ( C75 'or' C77 ) 'imp' ( C76 'or' C77 ) ) . C78 ) '&' ( ( ( C76 'or' C77 ) 'imp' ( C75 'or' C77 ) ) . C78 ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( ( C75 'or' C77 ) . C78 ) ) 'or' ( ( C76 'or' C77 ) . C78 ) ) '&' ( ( ( C76 'or' C77 ) 'imp' ( C75 'or' C77 ) ) . C78 ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( ( C75 'or' C77 ) . C78 ) ) 'or' ( ( C76 'or' C77 ) . C78 ) ) '&' ( ( 'not' ( ( C76 'or' C77 ) . C78 ) ) 'or' ( ( C75 'or' C77 ) . C78 ) ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( ( C75 . C78 ) 'or' ( C77 . C78 ) ) ) 'or' ( ( C76 'or' C77 ) . C78 ) ) '&' ( ( 'not' ( ( C76 'or' C77 ) . C78 ) ) 'or' ( ( C75 'or' C77 ) . C78 ) ) ) by BVFUNC_1:def 4
.= ( ( ( 'not' ( ( C75 . C78 ) 'or' ( C77 . C78 ) ) ) 'or' ( ( C76 . C78 ) 'or' ( C77 . C78 ) ) ) '&' ( ( 'not' ( ( C76 'or' C77 ) . C78 ) ) 'or' ( ( C75 'or' C77 ) . C78 ) ) ) by BVFUNC_1:def 4
.= ( ( ( 'not' ( ( C75 . C78 ) 'or' ( C77 . C78 ) ) ) 'or' ( ( C76 . C78 ) 'or' ( C77 . C78 ) ) ) '&' ( ( 'not' ( ( C76 . C78 ) 'or' ( C77 . C78 ) ) ) 'or' ( ( C75 'or' C77 ) . C78 ) ) ) by BVFUNC_1:def 4
.= ( ( ( ( 'not' ( C75 . C78 ) ) '&' ( 'not' ( C77 . C78 ) ) ) 'or' ( ( C76 . C78 ) 'or' ( C77 . C78 ) ) ) '&' ( ( ( 'not' ( C76 . C78 ) ) '&' ( 'not' ( C77 . C78 ) ) ) 'or' ( ( C75 . C78 ) 'or' ( C77 . C78 ) ) ) ) by BVFUNC_1:def 4;
L201: (( C75 . C78 ) = ( TRUE ) or ( C75 . C78 ) = ( FALSE )) by XBOOLEAN:def 3;
L202: ( ( C76 'imp' C75 ) . C78 ) = ( ( 'not' ( C76 . C78 ) ) 'or' ( C75 . C78 ) ) by BVFUNC_1:def 8;
L203: (( C76 . C78 ) = ( TRUE ) or ( C76 . C78 ) = ( FALSE )) by XBOOLEAN:def 3;
L204:
now
per cases  by L197 , L203 , BINARITH:3;
case L205: ( 'not' ( C75 . C78 ) ) = ( TRUE );
L206: ( C75 . C78 ) = ( FALSE ) by L205 , MARGREL1:11;
L207: ( 'not' ( C76 . C78 ) ) = ( TRUE ) by L206 , L199 , BINARITH:3;
L208: ( ( ( C75 'or' C77 ) 'eqv' ( C76 'or' C77 ) ) . C78 ) = ( ( ( 'not' ( C77 . C78 ) ) 'or' ( ( FALSE ) 'or' ( C77 . C78 ) ) ) '&' ( ( 'not' ( C77 . C78 ) ) 'or' ( ( FALSE ) 'or' ( C77 . C78 ) ) ) ) by L207 , L200 , L205 , L206 , MARGREL1:14
.= ( ( ( 'not' ( C77 . C78 ) ) 'or' ( C77 . C78 ) ) '&' ( ( 'not' ( C77 . C78 ) ) 'or' ( C77 . C78 ) ) ) by BINARITH:3
.= ( TRUE ) by XBOOLEAN:102;
thus L209: thesis by L208;
end;
case L210: ( C76 . C78 ) = ( TRUE );
L211: ( 'not' ( C76 . C78 ) ) = ( FALSE ) by L210 , MARGREL1:11;
L212: ( ( ( C75 'or' C77 ) 'eqv' ( C76 'or' C77 ) ) . C78 ) = ( ( ( FALSE ) 'or' ( ( TRUE ) 'or' ( C77 . C78 ) ) ) '&' ( ( FALSE ) 'or' ( ( TRUE ) 'or' ( C77 . C78 ) ) ) ) by L211 , L195 , L194 , L202 , L201 , L200 , L210 , MARGREL1:12
.= ( ( ( TRUE ) 'or' ( C77 . C78 ) ) '&' ( ( TRUE ) 'or' ( C77 . C78 ) ) ) by BINARITH:3
.= ( TRUE ) by BINARITH:10;
thus L213: thesis by L212;
end;
end;
thus L215: thesis by L204;
end;
theorem
L216: (for R1 being non  empty set holds (for B58 , B59 being (Function of R1 , ( BOOLEAN )) holds B58 '<' ( ( ( B58 'eqv' B59 ) 'eqv' ( B59 'eqv' B58 ) ) 'eqv' B58 )))
proof
let R1 being non  empty set;
let C79 , C80 being (Function of R1 , ( BOOLEAN ));
let C81 being (Element of R1);
L217: ( ( 'not' C79 ) . C81 ) = ( 'not' ( C79 . C81 ) ) by MARGREL1:def 19;
assume L218: ( C79 . C81 ) = ( TRUE );
L219: ( 'not' ( C79 . C81 ) ) = ( FALSE ) by L218 , MARGREL1:11;
L220: ( ( ( C79 'eqv' C80 ) 'eqv' ( C80 'eqv' C79 ) ) . C81 ) = ( ( ( ( C79 'eqv' C80 ) 'imp' ( C80 'eqv' C79 ) ) '&' ( ( C80 'eqv' C79 ) 'imp' ( C79 'eqv' C80 ) ) ) . C81 ) by BVFUNC_4:7
.= ( ( ( ( 'not' ( C79 'eqv' C80 ) ) 'or' ( C80 'eqv' C79 ) ) . C81 ) '&' ( ( ( 'not' ( C80 'eqv' C79 ) ) 'or' ( C79 'eqv' C80 ) ) . C81 ) ) by BVFUNC_4:8
.= ( ( ( ( 'not' ( C79 'eqv' C80 ) ) . C81 ) 'or' ( ( C80 'eqv' C79 ) . C81 ) ) '&' ( ( ( 'not' ( C80 'eqv' C79 ) ) . C81 ) 'or' ( ( C79 'eqv' C80 ) . C81 ) ) ) by BVFUNC_1:def 4
.= ( ( ( ( 'not' ( ( C79 'imp' C80 ) '&' ( C80 'imp' C79 ) ) ) . C81 ) 'or' ( ( C80 'eqv' C79 ) . C81 ) ) '&' ( ( ( 'not' ( C80 'eqv' C79 ) ) . C81 ) 'or' ( ( C79 'eqv' C80 ) . C81 ) ) ) by BVFUNC_4:7
.= ( ( ( ( 'not' ( ( C79 'imp' C80 ) '&' ( C80 'imp' C79 ) ) ) . C81 ) 'or' ( ( C80 'eqv' C79 ) . C81 ) ) '&' ( ( ( 'not' ( C80 'eqv' C79 ) ) . C81 ) 'or' ( ( ( C79 'imp' C80 ) '&' ( C80 'imp' C79 ) ) . C81 ) ) ) by BVFUNC_4:7
.= ( ( ( ( 'not' ( ( C79 'imp' C80 ) '&' ( C80 'imp' C79 ) ) ) . C81 ) 'or' ( ( ( C80 'imp' C79 ) '&' ( C79 'imp' C80 ) ) . C81 ) ) '&' ( ( ( 'not' ( C80 'eqv' C79 ) ) . C81 ) 'or' ( ( ( C79 'imp' C80 ) '&' ( C80 'imp' C79 ) ) . C81 ) ) ) by BVFUNC_4:7
.= ( ( ( ( 'not' ( ( C79 'imp' C80 ) '&' ( C80 'imp' C79 ) ) ) . C81 ) 'or' ( ( ( C80 'imp' C79 ) '&' ( C79 'imp' C80 ) ) . C81 ) ) '&' ( ( ( 'not' ( ( C80 'imp' C79 ) '&' ( C79 'imp' C80 ) ) ) . C81 ) 'or' ( ( ( C79 'imp' C80 ) '&' ( C80 'imp' C79 ) ) . C81 ) ) ) by BVFUNC_4:7
.= ( ( ( 'not' ( ( ( C79 'imp' C80 ) '&' ( C80 'imp' C79 ) ) . C81 ) ) 'or' ( ( ( C80 'imp' C79 ) '&' ( C79 'imp' C80 ) ) . C81 ) ) '&' ( ( 'not' ( ( ( C80 'imp' C79 ) '&' ( C79 'imp' C80 ) ) . C81 ) ) 'or' ( ( ( C79 'imp' C80 ) '&' ( C80 'imp' C79 ) ) . C81 ) ) ) by MARGREL1:def 19
.= ( ( ( 'not' ( ( ( C79 'imp' C80 ) . C81 ) '&' ( ( C80 'imp' C79 ) . C81 ) ) ) 'or' ( ( ( C80 'imp' C79 ) '&' ( C79 'imp' C80 ) ) . C81 ) ) '&' ( ( 'not' ( ( ( C80 'imp' C79 ) '&' ( C79 'imp' C80 ) ) . C81 ) ) 'or' ( ( ( C79 'imp' C80 ) '&' ( C80 'imp' C79 ) ) . C81 ) ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( ( ( C79 'imp' C80 ) . C81 ) '&' ( ( C80 'imp' C79 ) . C81 ) ) ) 'or' ( ( ( C80 'imp' C79 ) . C81 ) '&' ( ( C79 'imp' C80 ) . C81 ) ) ) '&' ( ( 'not' ( ( ( C80 'imp' C79 ) '&' ( C79 'imp' C80 ) ) . C81 ) ) 'or' ( ( ( C79 'imp' C80 ) '&' ( C80 'imp' C79 ) ) . C81 ) ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( ( ( C79 'imp' C80 ) . C81 ) '&' ( ( C80 'imp' C79 ) . C81 ) ) ) 'or' ( ( ( C80 'imp' C79 ) . C81 ) '&' ( ( C79 'imp' C80 ) . C81 ) ) ) '&' ( ( 'not' ( ( ( C80 'imp' C79 ) . C81 ) '&' ( ( C79 'imp' C80 ) . C81 ) ) ) 'or' ( ( ( C79 'imp' C80 ) '&' ( C80 'imp' C79 ) ) . C81 ) ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( ( ( C79 'imp' C80 ) . C81 ) '&' ( ( C80 'imp' C79 ) . C81 ) ) ) 'or' ( ( ( C80 'imp' C79 ) . C81 ) '&' ( ( C79 'imp' C80 ) . C81 ) ) ) '&' ( ( 'not' ( ( ( C80 'imp' C79 ) . C81 ) '&' ( ( C79 'imp' C80 ) . C81 ) ) ) 'or' ( ( ( C79 'imp' C80 ) . C81 ) '&' ( ( C80 'imp' C79 ) . C81 ) ) ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) '&' ( ( C80 'imp' C79 ) . C81 ) ) ) 'or' ( ( ( C80 'imp' C79 ) . C81 ) '&' ( ( C79 'imp' C80 ) . C81 ) ) ) '&' ( ( 'not' ( ( ( C80 'imp' C79 ) . C81 ) '&' ( ( C79 'imp' C80 ) . C81 ) ) ) 'or' ( ( ( C79 'imp' C80 ) . C81 ) '&' ( ( C80 'imp' C79 ) . C81 ) ) ) ) by BVFUNC_4:8
.= ( ( ( 'not' ( ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) '&' ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) ) ) 'or' ( ( ( C80 'imp' C79 ) . C81 ) '&' ( ( C79 'imp' C80 ) . C81 ) ) ) '&' ( ( 'not' ( ( ( C80 'imp' C79 ) . C81 ) '&' ( ( C79 'imp' C80 ) . C81 ) ) ) 'or' ( ( ( C79 'imp' C80 ) . C81 ) '&' ( ( C80 'imp' C79 ) . C81 ) ) ) ) by BVFUNC_4:8
.= ( ( ( 'not' ( ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) '&' ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) ) ) 'or' ( ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) '&' ( ( C79 'imp' C80 ) . C81 ) ) ) '&' ( ( 'not' ( ( ( C80 'imp' C79 ) . C81 ) '&' ( ( C79 'imp' C80 ) . C81 ) ) ) 'or' ( ( ( C79 'imp' C80 ) . C81 ) '&' ( ( C80 'imp' C79 ) . C81 ) ) ) ) by BVFUNC_4:8
.= ( ( ( 'not' ( ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) '&' ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) ) ) 'or' ( ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) '&' ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) ) ) '&' ( ( 'not' ( ( ( C80 'imp' C79 ) . C81 ) '&' ( ( C79 'imp' C80 ) . C81 ) ) ) 'or' ( ( ( C79 'imp' C80 ) . C81 ) '&' ( ( C80 'imp' C79 ) . C81 ) ) ) ) by BVFUNC_4:8
.= ( ( ( 'not' ( ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) '&' ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) ) ) 'or' ( ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) '&' ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) ) ) '&' ( ( 'not' ( ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) '&' ( ( C79 'imp' C80 ) . C81 ) ) ) 'or' ( ( ( C79 'imp' C80 ) . C81 ) '&' ( ( C80 'imp' C79 ) . C81 ) ) ) ) by BVFUNC_4:8
.= ( ( ( 'not' ( ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) '&' ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) ) ) 'or' ( ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) '&' ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) ) ) '&' ( ( 'not' ( ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) '&' ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) ) ) 'or' ( ( ( C79 'imp' C80 ) . C81 ) '&' ( ( C80 'imp' C79 ) . C81 ) ) ) ) by BVFUNC_4:8
.= ( ( ( 'not' ( ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) '&' ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) ) ) 'or' ( ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) '&' ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) ) ) '&' ( ( 'not' ( ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) '&' ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) ) ) 'or' ( ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) '&' ( ( C80 'imp' C79 ) . C81 ) ) ) ) by BVFUNC_4:8
.= ( ( ( 'not' ( ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) '&' ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) ) ) 'or' ( ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) '&' ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) ) ) '&' ( ( 'not' ( ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) '&' ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) ) ) 'or' ( ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) '&' ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) ) ) ) by BVFUNC_4:8
.= ( ( ( 'not' ( ( ( ( 'not' C79 ) . C81 ) 'or' ( C80 . C81 ) ) '&' ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) ) ) 'or' ( ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) '&' ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) ) ) '&' ( ( 'not' ( ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) '&' ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) ) ) 'or' ( ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) '&' ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) ) ) ) by BVFUNC_1:def 4
.= ( ( ( 'not' ( ( ( ( 'not' C79 ) . C81 ) 'or' ( C80 . C81 ) ) '&' ( ( ( 'not' C80 ) . C81 ) 'or' ( C79 . C81 ) ) ) ) 'or' ( ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) '&' ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) ) ) '&' ( ( 'not' ( ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) '&' ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) ) ) 'or' ( ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) '&' ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) ) ) ) by BVFUNC_1:def 4
.= ( ( ( 'not' ( ( ( ( 'not' C79 ) . C81 ) 'or' ( C80 . C81 ) ) '&' ( ( ( 'not' C80 ) . C81 ) 'or' ( C79 . C81 ) ) ) ) 'or' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( C79 . C81 ) ) '&' ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) ) ) '&' ( ( 'not' ( ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) '&' ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) ) ) 'or' ( ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) '&' ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) ) ) ) by BVFUNC_1:def 4
.= ( ( ( 'not' ( ( ( ( 'not' C79 ) . C81 ) 'or' ( C80 . C81 ) ) '&' ( ( ( 'not' C80 ) . C81 ) 'or' ( C79 . C81 ) ) ) ) 'or' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( C79 . C81 ) ) '&' ( ( ( 'not' C79 ) . C81 ) 'or' ( C80 . C81 ) ) ) ) '&' ( ( 'not' ( ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) '&' ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) ) ) 'or' ( ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) '&' ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) ) ) ) by BVFUNC_1:def 4
.= ( ( ( 'not' ( ( ( ( 'not' C79 ) . C81 ) 'or' ( C80 . C81 ) ) '&' ( ( ( 'not' C80 ) . C81 ) 'or' ( C79 . C81 ) ) ) ) 'or' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( C79 . C81 ) ) '&' ( ( ( 'not' C79 ) . C81 ) 'or' ( C80 . C81 ) ) ) ) '&' ( ( 'not' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( C79 . C81 ) ) '&' ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) ) ) 'or' ( ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) '&' ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) ) ) ) by BVFUNC_1:def 4
.= ( ( ( 'not' ( ( ( ( 'not' C79 ) . C81 ) 'or' ( C80 . C81 ) ) '&' ( ( ( 'not' C80 ) . C81 ) 'or' ( C79 . C81 ) ) ) ) 'or' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( C79 . C81 ) ) '&' ( ( ( 'not' C79 ) . C81 ) 'or' ( C80 . C81 ) ) ) ) '&' ( ( 'not' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( C79 . C81 ) ) '&' ( ( ( 'not' C79 ) . C81 ) 'or' ( C80 . C81 ) ) ) ) 'or' ( ( ( ( 'not' C79 ) 'or' C80 ) . C81 ) '&' ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) ) ) ) by BVFUNC_1:def 4
.= ( ( ( 'not' ( ( ( ( 'not' C79 ) . C81 ) 'or' ( C80 . C81 ) ) '&' ( ( ( 'not' C80 ) . C81 ) 'or' ( C79 . C81 ) ) ) ) 'or' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( C79 . C81 ) ) '&' ( ( ( 'not' C79 ) . C81 ) 'or' ( C80 . C81 ) ) ) ) '&' ( ( 'not' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( C79 . C81 ) ) '&' ( ( ( 'not' C79 ) . C81 ) 'or' ( C80 . C81 ) ) ) ) 'or' ( ( ( ( 'not' C79 ) . C81 ) 'or' ( C80 . C81 ) ) '&' ( ( ( 'not' C80 ) 'or' C79 ) . C81 ) ) ) ) by BVFUNC_1:def 4
.= ( ( ( 'not' ( ( ( FALSE ) 'or' ( C80 . C81 ) ) '&' ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) ) ) 'or' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) '&' ( ( FALSE ) 'or' ( C80 . C81 ) ) ) ) '&' ( ( 'not' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) '&' ( ( FALSE ) 'or' ( C80 . C81 ) ) ) ) 'or' ( ( ( FALSE ) 'or' ( C80 . C81 ) ) '&' ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) ) ) ) by L218 , L219 , L217 , BVFUNC_1:def 4
.= ( ( ( 'not' ( ( C80 . C81 ) '&' ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) ) ) 'or' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) '&' ( ( FALSE ) 'or' ( C80 . C81 ) ) ) ) '&' ( ( 'not' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) '&' ( ( FALSE ) 'or' ( C80 . C81 ) ) ) ) 'or' ( ( ( FALSE ) 'or' ( C80 . C81 ) ) '&' ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) ) ) ) by BINARITH:3
.= ( ( ( 'not' ( ( C80 . C81 ) '&' ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) ) ) 'or' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) '&' ( C80 . C81 ) ) ) '&' ( ( 'not' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) '&' ( ( FALSE ) 'or' ( C80 . C81 ) ) ) ) 'or' ( ( ( FALSE ) 'or' ( C80 . C81 ) ) '&' ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) ) ) ) by BINARITH:3
.= ( ( ( 'not' ( ( C80 . C81 ) '&' ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) ) ) 'or' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) '&' ( C80 . C81 ) ) ) '&' ( ( 'not' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) '&' ( ( FALSE ) 'or' ( C80 . C81 ) ) ) ) 'or' ( ( C80 . C81 ) '&' ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) ) ) ) by BINARITH:3
.= ( ( ( 'not' ( ( C80 . C81 ) '&' ( TRUE ) ) ) 'or' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) '&' ( C80 . C81 ) ) ) '&' ( ( 'not' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) '&' ( ( FALSE ) 'or' ( C80 . C81 ) ) ) ) 'or' ( ( C80 . C81 ) '&' ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) ) ) ) by BINARITH:10
.= ( ( ( 'not' ( ( C80 . C81 ) '&' ( TRUE ) ) ) 'or' ( ( TRUE ) '&' ( C80 . C81 ) ) ) '&' ( ( 'not' ( ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) '&' ( ( FALSE ) 'or' ( C80 . C81 ) ) ) ) 'or' ( ( C80 . C81 ) '&' ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) ) ) ) by BINARITH:10
.= ( ( ( 'not' ( ( C80 . C81 ) '&' ( TRUE ) ) ) 'or' ( ( TRUE ) '&' ( C80 . C81 ) ) ) '&' ( ( 'not' ( ( TRUE ) '&' ( ( FALSE ) 'or' ( C80 . C81 ) ) ) ) 'or' ( ( C80 . C81 ) '&' ( ( ( 'not' C80 ) . C81 ) 'or' ( TRUE ) ) ) ) ) by BINARITH:10
.= ( ( ( 'not' ( ( C80 . C81 ) '&' ( TRUE ) ) ) 'or' ( ( TRUE ) '&' ( C80 . C81 ) ) ) '&' ( ( 'not' ( ( TRUE ) '&' ( ( FALSE ) 'or' ( C80 . C81 ) ) ) ) 'or' ( ( C80 . C81 ) '&' ( TRUE ) ) ) ) by BINARITH:10
.= ( ( ( 'not' ( ( TRUE ) '&' ( C80 . C81 ) ) ) 'or' ( ( TRUE ) '&' ( C80 . C81 ) ) ) '&' ( ( 'not' ( ( TRUE ) '&' ( C80 . C81 ) ) ) 'or' ( ( C80 . C81 ) '&' ( TRUE ) ) ) ) by BINARITH:3
.= ( ( ( 'not' ( C80 . C81 ) ) 'or' ( ( TRUE ) '&' ( C80 . C81 ) ) ) '&' ( ( 'not' ( C80 . C81 ) ) 'or' ( ( TRUE ) '&' ( C80 . C81 ) ) ) ) by MARGREL1:14
.= ( ( ( 'not' ( C80 . C81 ) ) 'or' ( C80 . C81 ) ) '&' ( ( 'not' ( C80 . C81 ) ) 'or' ( C80 . C81 ) ) ) by MARGREL1:14
.= ( TRUE ) by XBOOLEAN:102;
L221: ( ( ( ( C79 'eqv' C80 ) 'eqv' ( C80 'eqv' C79 ) ) 'eqv' C79 ) . C81 ) = ( ( ( ( ( C79 'eqv' C80 ) 'eqv' ( C80 'eqv' C79 ) ) 'imp' C79 ) '&' ( C79 'imp' ( ( C79 'eqv' C80 ) 'eqv' ( C80 'eqv' C79 ) ) ) ) . C81 ) by BVFUNC_4:7
.= ( ( ( ( ( C79 'eqv' C80 ) 'eqv' ( C80 'eqv' C79 ) ) 'imp' C79 ) . C81 ) '&' ( ( C79 'imp' ( ( C79 'eqv' C80 ) 'eqv' ( C80 'eqv' C79 ) ) ) . C81 ) ) by MARGREL1:def 20
.= ( ( ( 'not' ( ( ( C79 'eqv' C80 ) 'eqv' ( C80 'eqv' C79 ) ) . C81 ) ) 'or' ( C79 . C81 ) ) '&' ( ( C79 'imp' ( ( C79 'eqv' C80 ) 'eqv' ( C80 'eqv' C79 ) ) ) . C81 ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( ( ( C79 'eqv' C80 ) 'eqv' ( C80 'eqv' C79 ) ) . C81 ) ) 'or' ( C79 . C81 ) ) '&' ( ( 'not' ( C79 . C81 ) ) 'or' ( ( ( C79 'eqv' C80 ) 'eqv' ( C80 'eqv' C79 ) ) . C81 ) ) ) by BVFUNC_1:def 8
.= ( ( ( FALSE ) 'or' ( C79 . C81 ) ) '&' ( ( 'not' ( C79 . C81 ) ) 'or' ( TRUE ) ) ) by L220 , MARGREL1:11
.= ( ( C79 . C81 ) '&' ( ( 'not' ( C79 . C81 ) ) 'or' ( TRUE ) ) ) by BINARITH:3
.= ( ( TRUE ) '&' ( C79 . C81 ) ) by BINARITH:10
.= ( TRUE ) by L218;
thus L222: thesis by L221;
end;
theorem
L223: (for R1 being non  empty set holds (for B60 , B61 being (Function of R1 , ( BOOLEAN )) holds B60 '<' ( ( B60 'imp' B61 ) 'eqv' B61 )))
proof
let R1 being non  empty set;
let C82 , C83 being (Function of R1 , ( BOOLEAN ));
let C84 being (Element of R1);
assume L224: ( C82 . C84 ) = ( TRUE );
L225: ( 'not' ( C82 . C84 ) ) = ( FALSE ) by L224 , MARGREL1:11;
L226: ( ( ( C82 'imp' C83 ) 'eqv' C83 ) . C84 ) = ( ( ( ( 'not' C82 ) 'or' C83 ) 'eqv' C83 ) . C84 ) by BVFUNC_4:8
.= ( ( ( ( ( 'not' C82 ) 'or' C83 ) 'imp' C83 ) '&' ( C83 'imp' ( ( 'not' C82 ) 'or' C83 ) ) ) . C84 ) by BVFUNC_4:7
.= ( ( ( ( 'not' ( ( 'not' C82 ) 'or' C83 ) ) 'or' C83 ) '&' ( C83 'imp' ( ( 'not' C82 ) 'or' C83 ) ) ) . C84 ) by BVFUNC_4:8
.= ( ( ( ( 'not' ( ( 'not' C82 ) 'or' C83 ) ) 'or' C83 ) '&' ( ( 'not' C83 ) 'or' ( ( 'not' C82 ) 'or' C83 ) ) ) . C84 ) by BVFUNC_4:8
.= ( ( ( ( 'not' ( ( 'not' C82 ) 'or' C83 ) ) 'or' C83 ) . C84 ) '&' ( ( ( 'not' C83 ) 'or' ( ( 'not' C82 ) 'or' C83 ) ) . C84 ) ) by MARGREL1:def 20
.= ( ( ( ( 'not' ( ( 'not' C82 ) 'or' C83 ) ) . C84 ) 'or' ( C83 . C84 ) ) '&' ( ( ( 'not' C83 ) 'or' ( ( 'not' C82 ) 'or' C83 ) ) . C84 ) ) by BVFUNC_1:def 4
.= ( ( ( 'not' ( ( ( 'not' C82 ) 'or' C83 ) . C84 ) ) 'or' ( C83 . C84 ) ) '&' ( ( ( 'not' C83 ) 'or' ( ( 'not' C82 ) 'or' C83 ) ) . C84 ) ) by MARGREL1:def 19
.= ( ( ( 'not' ( ( ( 'not' C82 ) . C84 ) 'or' ( C83 . C84 ) ) ) 'or' ( C83 . C84 ) ) '&' ( ( ( 'not' C83 ) 'or' ( ( 'not' C82 ) 'or' C83 ) ) . C84 ) ) by BVFUNC_1:def 4
.= ( ( ( ( 'not' ( 'not' ( C82 . C84 ) ) ) '&' ( 'not' ( C83 . C84 ) ) ) 'or' ( C83 . C84 ) ) '&' ( ( ( 'not' C83 ) 'or' ( ( 'not' C82 ) 'or' C83 ) ) . C84 ) ) by MARGREL1:def 19
.= ( ( ( ( C82 . C84 ) '&' ( 'not' ( C83 . C84 ) ) ) 'or' ( C83 . C84 ) ) '&' ( ( ( 'not' C83 ) . C84 ) 'or' ( ( ( 'not' C82 ) 'or' C83 ) . C84 ) ) ) by BVFUNC_1:def 4
.= ( ( ( ( C82 . C84 ) '&' ( 'not' ( C83 . C84 ) ) ) 'or' ( C83 . C84 ) ) '&' ( ( ( 'not' C83 ) . C84 ) 'or' ( ( ( 'not' C82 ) . C84 ) 'or' ( C83 . C84 ) ) ) ) by BVFUNC_1:def 4
.= ( ( ( ( C82 . C84 ) '&' ( 'not' ( C83 . C84 ) ) ) 'or' ( C83 . C84 ) ) '&' ( ( ( 'not' C83 ) . C84 ) 'or' ( ( 'not' ( C82 . C84 ) ) 'or' ( C83 . C84 ) ) ) ) by MARGREL1:def 19
.= ( ( ( ( TRUE ) '&' ( 'not' ( C83 . C84 ) ) ) 'or' ( C83 . C84 ) ) '&' ( ( 'not' ( C83 . C84 ) ) 'or' ( ( FALSE ) 'or' ( C83 . C84 ) ) ) ) by L224 , L225 , MARGREL1:def 19
.= ( ( ( 'not' ( C83 . C84 ) ) 'or' ( C83 . C84 ) ) '&' ( ( 'not' ( C83 . C84 ) ) 'or' ( ( FALSE ) 'or' ( C83 . C84 ) ) ) ) by MARGREL1:14
.= ( ( ( 'not' ( C83 . C84 ) ) 'or' ( C83 . C84 ) ) '&' ( ( 'not' ( C83 . C84 ) ) 'or' ( C83 . C84 ) ) ) by BINARITH:3
.= ( TRUE ) by XBOOLEAN:102;
thus L227: thesis by L226;
end;
theorem
L228: (for R1 being non  empty set holds (for B62 , B63 being (Function of R1 , ( BOOLEAN )) holds B62 '<' ( ( B63 'imp' B62 ) 'eqv' B62 )))
proof
let R1 being non  empty set;
let C85 , C86 being (Function of R1 , ( BOOLEAN ));
let C87 being (Element of R1);
assume L229: ( C85 . C87 ) = ( TRUE );
L230: ( 'not' ( C85 . C87 ) ) = ( FALSE ) by L229 , MARGREL1:11;
L231: ( ( ( C86 'imp' C85 ) 'eqv' C85 ) . C87 ) = ( ( ( ( 'not' C86 ) 'or' C85 ) 'eqv' C85 ) . C87 ) by BVFUNC_4:8
.= ( ( ( ( ( 'not' C86 ) 'or' C85 ) 'imp' C85 ) '&' ( C85 'imp' ( ( 'not' C86 ) 'or' C85 ) ) ) . C87 ) by BVFUNC_4:7
.= ( ( ( ( 'not' ( ( 'not' C86 ) 'or' C85 ) ) 'or' C85 ) '&' ( C85 'imp' ( ( 'not' C86 ) 'or' C85 ) ) ) . C87 ) by BVFUNC_4:8
.= ( ( ( ( 'not' ( ( 'not' C86 ) 'or' C85 ) ) 'or' C85 ) '&' ( ( 'not' C85 ) 'or' ( ( 'not' C86 ) 'or' C85 ) ) ) . C87 ) by BVFUNC_4:8
.= ( ( ( ( 'not' ( ( 'not' C86 ) 'or' C85 ) ) 'or' C85 ) . C87 ) '&' ( ( ( 'not' C85 ) 'or' ( ( 'not' C86 ) 'or' C85 ) ) . C87 ) ) by MARGREL1:def 20
.= ( ( ( ( 'not' ( ( 'not' C86 ) 'or' C85 ) ) . C87 ) 'or' ( C85 . C87 ) ) '&' ( ( ( 'not' C85 ) 'or' ( ( 'not' C86 ) 'or' C85 ) ) . C87 ) ) by BVFUNC_1:def 4
.= ( ( ( 'not' ( ( ( 'not' C86 ) 'or' C85 ) . C87 ) ) 'or' ( C85 . C87 ) ) '&' ( ( ( 'not' C85 ) 'or' ( ( 'not' C86 ) 'or' C85 ) ) . C87 ) ) by MARGREL1:def 19
.= ( ( ( 'not' ( ( ( 'not' C86 ) . C87 ) 'or' ( C85 . C87 ) ) ) 'or' ( C85 . C87 ) ) '&' ( ( ( 'not' C85 ) 'or' ( ( 'not' C86 ) 'or' C85 ) ) . C87 ) ) by BVFUNC_1:def 4
.= ( ( ( ( 'not' ( 'not' ( C86 . C87 ) ) ) '&' ( 'not' ( C85 . C87 ) ) ) 'or' ( C85 . C87 ) ) '&' ( ( ( 'not' C85 ) 'or' ( ( 'not' C86 ) 'or' C85 ) ) . C87 ) ) by MARGREL1:def 19
.= ( ( ( ( C86 . C87 ) '&' ( 'not' ( C85 . C87 ) ) ) 'or' ( C85 . C87 ) ) '&' ( ( ( 'not' C85 ) . C87 ) 'or' ( ( ( 'not' C86 ) 'or' C85 ) . C87 ) ) ) by BVFUNC_1:def 4
.= ( ( ( ( C86 . C87 ) '&' ( 'not' ( C85 . C87 ) ) ) 'or' ( C85 . C87 ) ) '&' ( ( ( 'not' C85 ) . C87 ) 'or' ( ( ( 'not' C86 ) . C87 ) 'or' ( C85 . C87 ) ) ) ) by BVFUNC_1:def 4
.= ( ( ( ( C86 . C87 ) '&' ( 'not' ( C85 . C87 ) ) ) 'or' ( C85 . C87 ) ) '&' ( ( ( 'not' C85 ) . C87 ) 'or' ( ( 'not' ( C86 . C87 ) ) 'or' ( C85 . C87 ) ) ) ) by MARGREL1:def 19
.= ( ( ( ( C86 . C87 ) '&' ( 'not' ( C85 . C87 ) ) ) 'or' ( C85 . C87 ) ) '&' ( ( 'not' ( C85 . C87 ) ) 'or' ( ( 'not' ( C86 . C87 ) ) 'or' ( C85 . C87 ) ) ) ) by MARGREL1:def 19
.= ( ( TRUE ) '&' ( ( FALSE ) 'or' ( ( 'not' ( C86 . C87 ) ) 'or' ( TRUE ) ) ) ) by L229 , L230 , BINARITH:10
.= ( ( FALSE ) 'or' ( ( 'not' ( C86 . C87 ) ) 'or' ( TRUE ) ) ) by MARGREL1:14
.= ( ( 'not' ( C86 . C87 ) ) 'or' ( TRUE ) ) by BINARITH:3
.= ( TRUE ) by BINARITH:10;
thus L232: thesis by L231;
end;
theorem
L233: (for R1 being non  empty set holds (for B64 , B65 being (Function of R1 , ( BOOLEAN )) holds B64 '<' ( ( ( B64 '&' B65 ) 'eqv' ( B65 '&' B64 ) ) 'eqv' B64 )))
proof
let R1 being non  empty set;
let C88 , C89 being (Function of R1 , ( BOOLEAN ));
let C90 being (Element of R1);
assume L234: ( C88 . C90 ) = ( TRUE );
L235: ( ( ( C88 '&' C89 ) 'eqv' ( C88 '&' C89 ) ) . C90 ) = ( ( ( ( C88 '&' C89 ) 'imp' ( C88 '&' C89 ) ) '&' ( ( C88 '&' C89 ) 'imp' ( C88 '&' C89 ) ) ) . C90 ) by BVFUNC_4:7
.= ( ( ( 'not' ( C88 '&' C89 ) ) 'or' ( C88 '&' C89 ) ) . C90 ) by BVFUNC_4:8
.= ( ( I_el R1 ) . C90 ) by BVFUNC_4:6
.= ( TRUE ) by BVFUNC_1:def 11;
L236: ( ( ( ( C88 '&' C89 ) 'eqv' ( C89 '&' C88 ) ) 'eqv' C88 ) . C90 ) = ( ( ( ( ( C88 '&' C89 ) 'eqv' ( C88 '&' C89 ) ) 'imp' C88 ) '&' ( C88 'imp' ( ( C88 '&' C89 ) 'eqv' ( C88 '&' C89 ) ) ) ) . C90 ) by BVFUNC_4:7
.= ( ( ( ( ( C88 '&' C89 ) 'eqv' ( C88 '&' C89 ) ) 'imp' C88 ) . C90 ) '&' ( ( C88 'imp' ( ( C88 '&' C89 ) 'eqv' ( C88 '&' C89 ) ) ) . C90 ) ) by MARGREL1:def 20
.= ( ( ( ( 'not' ( ( C88 '&' C89 ) 'eqv' ( C88 '&' C89 ) ) ) 'or' C88 ) . C90 ) '&' ( ( C88 'imp' ( ( C88 '&' C89 ) 'eqv' ( C88 '&' C89 ) ) ) . C90 ) ) by BVFUNC_4:8
.= ( ( ( ( 'not' ( ( C88 '&' C89 ) 'eqv' ( C88 '&' C89 ) ) ) 'or' C88 ) . C90 ) '&' ( ( ( 'not' C88 ) 'or' ( ( C88 '&' C89 ) 'eqv' ( C88 '&' C89 ) ) ) . C90 ) ) by BVFUNC_4:8
.= ( ( ( ( 'not' ( ( C88 '&' C89 ) 'eqv' ( C88 '&' C89 ) ) ) . C90 ) 'or' ( C88 . C90 ) ) '&' ( ( ( 'not' C88 ) 'or' ( ( C88 '&' C89 ) 'eqv' ( C88 '&' C89 ) ) ) . C90 ) ) by BVFUNC_1:def 4
.= ( ( ( ( 'not' ( ( C88 '&' C89 ) 'eqv' ( C88 '&' C89 ) ) ) . C90 ) 'or' ( C88 . C90 ) ) '&' ( ( ( 'not' C88 ) . C90 ) 'or' ( ( ( C88 '&' C89 ) 'eqv' ( C88 '&' C89 ) ) . C90 ) ) ) by BVFUNC_1:def 4
.= ( ( ( 'not' ( ( ( C88 '&' C89 ) 'eqv' ( C88 '&' C89 ) ) . C90 ) ) 'or' ( C88 . C90 ) ) '&' ( ( ( 'not' C88 ) . C90 ) 'or' ( ( ( C88 '&' C89 ) 'eqv' ( C88 '&' C89 ) ) . C90 ) ) ) by MARGREL1:def 19
.= ( ( ( FALSE ) 'or' ( C88 . C90 ) ) '&' ( ( ( 'not' C88 ) . C90 ) 'or' ( TRUE ) ) ) by L235 , MARGREL1:11
.= ( ( C88 . C90 ) '&' ( ( ( 'not' C88 ) . C90 ) 'or' ( TRUE ) ) ) by BINARITH:3
.= ( ( TRUE ) '&' ( C88 . C90 ) ) by BINARITH:10
.= ( TRUE ) by L234;
thus L237: thesis by L236;
end;
