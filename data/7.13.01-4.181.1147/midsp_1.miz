:: Midpoint algebras
::  by Micha{\l} Muzalewski
::
:: Received November 26, 1989
:: Copyright (c) 1990-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies STRUCT_0, BINOP_1, XBOOLE_0, SUBSET_1, QC_LANG1, FUNCT_1,
      FUNCT_5, ZFMISC_1, MCART_1, RELAT_1, VECTSP_1, ARYTM_3, ARYTM_1,
      ALGSTR_0, SUPINF_2, RLVECT_1, MIDSP_1;
 notations XBOOLE_0, ZFMISC_1, SUBSET_1, BINOP_1, MCART_1, DOMAIN_1,
      FUNCT_2, FUNCT_5, STRUCT_0, ALGSTR_0, RLVECT_1;
 constructors BINOP_1, DOMAIN_1, RLVECT_1, FUNCT_5, RELSET_1;
 registrations XBOOLE_0, SUBSET_1, RELSET_1, STRUCT_0, RELAT_1;
 requirements SUBSET, BOOLE;
 definitions STRUCT_0, RLVECT_1, ALGSTR_0;
 theorems FUNCT_2, TARSKI, MCART_1, BINOP_1, CARD_1;
 schemes FUNCT_2, BINOP_1;

begin
definition
struct (1-sorted) MidStr(# carrier -> set , MIDPOINT -> (BinOp of the carrier) #);
end;
registration
cluster non  empty for MidStr;
existence
proof
set D1 = the non  empty set;
set D2 = the (BinOp of D1);
take MidStr (# D1 , D2 #);
thus L2: (the carrier of MidStr (# D1 , D2 #)) is non  empty;
end;
end;
definition
let R1 being non  empty MidStr;
let R2 being (Element of R1);
let R3 being (Element of R1);
func R2 @ R3 -> (Element of R1) equals 
( (the MIDPOINT of R1) . (R2 , R3) );
coherence;
end;
definition
func Example -> MidStr equals 
MidStr (# 1 , ( op2 ) #);
correctness;
end;
registration
cluster ( Example ) ->  strict non  empty;
coherence;
end;
theorem
L7: (the carrier of ( Example )) = 1;
theorem
L8: (the MIDPOINT of ( Example )) = ( op2 );
theorem
L9: (for B1 , B2 being (Element of ( Example )) holds ( B1 @ B2 ) = ( ( op2 ) . (B1 , B2) ));
theorem
L10: (for B3 , B4 , B5 , B6 being (Element of ( Example )) holds (( B3 @ B3 ) = B3 & ( B3 @ B4 ) = ( B4 @ B3 ) & ( ( B3 @ B4 ) @ ( B5 @ B6 ) ) = ( ( B3 @ B5 ) @ ( B4 @ B6 ) ) & (ex B7 being (Element of ( Example )) st ( B7 @ B3 ) = B4)))
proof
let C1 , C2 , C3 , C4 being (Element of ( Example ));
thus L11: ( C1 @ C1 ) = ( {} ) by CARD_1:49 , TARSKI:def 1
.= C1 by CARD_1:49 , TARSKI:def 1;
thus L12: ( C1 @ C2 ) = ( {} ) by CARD_1:49 , TARSKI:def 1
.= ( C2 @ C1 ) by CARD_1:49 , TARSKI:def 1;
thus L13: ( ( C1 @ C2 ) @ ( C3 @ C4 ) ) = ( {} ) by CARD_1:49 , TARSKI:def 1
.= ( ( C1 @ C3 ) @ ( C2 @ C4 ) ) by CARD_1:49 , TARSKI:def 1;
take D3 = C1;
thus L14: ( D3 @ C1 ) = ( {} ) by CARD_1:49 , TARSKI:def 1
.= C2 by CARD_1:49 , TARSKI:def 1;
end;
definition
let C5 being non  empty MidStr;
attr C5 is  MidSp-like
means
:L15: (for B8 , B9 , B10 , B11 being (Element of C5) holds (( B8 @ B8 ) = B8 & ( B8 @ B9 ) = ( B9 @ B8 ) & ( ( B8 @ B9 ) @ ( B10 @ B11 ) ) = ( ( B8 @ B10 ) @ ( B9 @ B11 ) ) & (ex B12 being (Element of C5) st ( B12 @ B8 ) = B9)));
end;
registration
cluster  strict  MidSp-like for non  empty non  empty non  empty non  empty MidStr;
existence
proof
L17: ( Example ) is  MidSp-like by L15 , L10;
thus L18: thesis by L17;
end;
end;
definition
mode MidSp
 is  MidSp-like non  empty MidStr;
end;
definition
let C6 being MidSp;
let C7 , C8 being (Element of C6);
redefine func C7 @ C8;

commutativity
 by L15;
end;
theorem
L22: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds (for R7 being (Element of R4) holds ( ( R5 @ R6 ) @ R7 ) = ( ( R5 @ R7 ) @ ( R6 @ R7 ) )))))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
let R7 being (Element of R4);
L23: ( ( R5 @ R6 ) @ R7 ) = ( ( R5 @ R6 ) @ ( R7 @ R7 ) ) by L15
.= ( ( R5 @ R7 ) @ ( R6 @ R7 ) ) by L15;
thus L24: thesis by L23;
end;
theorem
L25: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds (for R7 being (Element of R4) holds ( R5 @ ( R6 @ R7 ) ) = ( ( R5 @ R6 ) @ ( R5 @ R7 ) )))))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
let R7 being (Element of R4);
L26: ( R5 @ ( R6 @ R7 ) ) = ( ( R5 @ R5 ) @ ( R6 @ R7 ) ) by L15
.= ( ( R5 @ R6 ) @ ( R5 @ R7 ) ) by L15;
thus L27: thesis by L26;
end;
theorem
L28: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds (( R5 @ R6 ) = R5 implies R5 = R6))))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
assume L29: ( R5 @ R6 ) = R5;
consider R13 being (Element of R4) such that L30: ( R13 @ R5 ) = R6 by L15;
L31: R6 = ( ( R13 @ R5 ) @ R6 ) by L30 , L15
.= ( ( R13 @ R6 ) @ R5 ) by L29 , L22
.= R5 by L29 , L30 , L22;
thus L32: thesis by L31;
end;
theorem
L33: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R13 being (Element of R4) holds (for R15 being (Element of R4) holds (( R13 @ R5 ) = ( R15 @ R5 ) implies R13 = R15)))))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R13 being (Element of R4);
let R15 being (Element of R4);
assume L34: ( R13 @ R5 ) = ( R15 @ R5 );
consider R14 being (Element of R4) such that L35: ( R14 @ R5 ) = R13 by L15;
L36: R13 = ( R13 @ ( R14 @ R5 ) ) by L35 , L15
.= ( ( R13 @ R14 ) @ ( R15 @ R5 ) ) by L34 , L25
.= ( R13 @ ( R13 @ R15 ) ) by L35 , L15;
L37: R13 = ( R13 @ R15 ) by L36 , L28;
thus L38: thesis by L37 , L28;
end;
theorem
L39: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R13 being (Element of R4) holds (for R15 being (Element of R4) holds (( R5 @ R13 ) = ( R5 @ R15 ) implies R13 = R15))))) by L33;
definition
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
let R7 being (Element of R4);
let R8 being (Element of R4);
pred R5 , R6 @@ R7 , R8
means
:L40: ( R5 @ R8 ) = ( R6 @ R7 )
;end;
theorem
L42: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds R5 , R5 @@ R6 , R6)))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
thus L43: ( R5 @ R6 ) = ( R5 @ R6 );
end;
theorem
L44: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds (for R7 being (Element of R4) holds (for R8 being (Element of R4) holds (R5 , R6 @@ R7 , R8 implies R7 , R8 @@ R5 , R6))))))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
let R7 being (Element of R4);
let R8 being (Element of R4);
assume L45: ( R5 @ R8 ) = ( R6 @ R7 );
thus L46: ( R7 @ R6 ) = ( R8 @ R5 ) by L45;
end;
theorem
L47: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds (for R7 being (Element of R4) holds (R5 , R5 @@ R6 , R7 implies R6 = R7)))))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
let R7 being (Element of R4);
assume L48: R5 , R5 @@ R6 , R7;
L49: ( R5 @ R7 ) = ( R5 @ R6 ) by L48 , L40;
thus L50: thesis by L49 , L33;
end;
theorem
L51: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds (for R7 being (Element of R4) holds (R5 , R6 @@ R7 , R7 implies R5 = R6))))) by L44 , L47;
theorem
L52: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds R5 , R6 @@ R5 , R6)))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
thus L53: ( R5 @ R6 ) = ( R6 @ R5 );
end;
theorem
L54: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds (for R7 being (Element of R4) holds (ex R8 being (Element of R4) st R5 , R6 @@ R7 , R8)))))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
let R7 being (Element of R4);
consider R8 being (Element of R4) such that L55: ( R8 @ R5 ) = ( R6 @ R7 ) by L15;
L56: R5 , R6 @@ R7 , R8 by L55 , L40;
thus L57: thesis by L56;
end;
theorem
L58: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds (for R7 being (Element of R4) holds (for R8 being (Element of R4) holds (for R12 being (Element of R4) holds ((R5 , R6 @@ R7 , R8 & R5 , R6 @@ R7 , R12) implies R8 = R12)))))))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
let R7 being (Element of R4);
let R8 being (Element of R4);
let R12 being (Element of R4);
assume L59: R5 , R6 @@ R7 , R8;
assume L60: R5 , R6 @@ R7 , R12;
L61: ( R5 @ R8 ) = ( R6 @ R7 ) by L59 , L40
.= ( R5 @ R12 ) by L60 , L40;
thus L62: thesis by L61 , L33;
end;
theorem
L63: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds (for R7 being (Element of R4) holds (for R8 being (Element of R4) holds (for R13 being (Element of R4) holds (for R14 being (Element of R4) holds ((R13 , R14 @@ R5 , R6 & R13 , R14 @@ R7 , R8) implies R5 , R6 @@ R7 , R8))))))))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
let R7 being (Element of R4);
let R8 being (Element of R4);
let R13 being (Element of R4);
let R14 being (Element of R4);
assume L64: R13 , R14 @@ R5 , R6;
assume L65: R13 , R14 @@ R7 , R8;
L66: ( ( R14 @ R13 ) @ ( R5 @ R8 ) ) = ( ( R14 @ R5 ) @ ( R13 @ R8 ) ) by L15
.= ( ( R13 @ R6 ) @ ( R13 @ R8 ) ) by L64 , L40
.= ( ( R13 @ R6 ) @ ( R14 @ R7 ) ) by L65 , L40
.= ( ( R14 @ R13 ) @ ( R6 @ R7 ) ) by L15;
thus L67: ( R5 @ R8 ) = ( R6 @ R7 ) by L66 , L33;
end;
theorem
L68: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds (for R7 being (Element of R4) holds (for R9 being (Element of R4) holds (for R10 being (Element of R4) holds (for R11 being (Element of R4) holds ((R5 , R6 @@ R9 , R10 & R6 , R7 @@ R10 , R11) implies R5 , R7 @@ R9 , R11))))))))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
let R7 being (Element of R4);
let R9 being (Element of R4);
let R10 being (Element of R4);
let R11 being (Element of R4);
assume L69: R5 , R6 @@ R9 , R10;
assume L70: R6 , R7 @@ R10 , R11;
L71: ( ( R10 @ R6 ) @ ( R5 @ R11 ) ) = ( ( R5 @ R10 ) @ ( R6 @ R11 ) ) by L15
.= ( ( R6 @ R9 ) @ ( R6 @ R11 ) ) by L69 , L40
.= ( ( R7 @ R10 ) @ ( R6 @ R9 ) ) by L70 , L40
.= ( ( R10 @ R6 ) @ ( R7 @ R9 ) ) by L15;
thus L72: ( R5 @ R11 ) = ( R7 @ R9 ) by L71 , L33;
end;
definition
let R4 being MidSp;
let R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]);
let R17 being (Element of [: (the carrier of R4) , (the carrier of R4) :]);
pred R16 ## R17
means
:L73: ( R16 `1 ) , ( R16 `2 ) @@ ( R17 `1 ) , ( R17 `2 )
;reflexivity
 by L52;
symmetry
 by L44;
end;
theorem
L75: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds (for R7 being (Element of R4) holds (for R8 being (Element of R4) holds (R5 , R6 @@ R7 , R8 implies [ R5 , R6 ] ## [ R7 , R8 ]))))))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
let R7 being (Element of R4);
let R8 being (Element of R4);
set D4 = [ R5 , R6 ];
set D5 = [ R7 , R8 ];
L76: (( D4 `1 ) = R5 & ( D4 `2 ) = R6) by MCART_1:7;
L77: (( D5 `1 ) = R7 & ( D5 `2 ) = R8) by MCART_1:7;
assume L78: R5 , R6 @@ R7 , R8;
thus L79: thesis by L78 , L76 , L77 , L73;
end;
theorem
L80: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds (for R7 being (Element of R4) holds (for R8 being (Element of R4) holds ([ R5 , R6 ] ## [ R7 , R8 ] implies R5 , R6 @@ R7 , R8))))))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
let R7 being (Element of R4);
let R8 being (Element of R4);
set D6 = [ R5 , R6 ];
set D7 = [ R7 , R8 ];
L81: (( D6 `1 ) = R5 & ( D6 `2 ) = R6) by MCART_1:7;
L82: (( D7 `1 ) = R7 & ( D7 `2 ) = R8) by MCART_1:7;
assume L83: [ R5 , R6 ] ## [ R7 , R8 ];
thus L84: thesis by L83 , L81 , L82 , L73;
end;
theorem
L85: (for R4 being MidSp holds (for R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds (for R17 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds (for R18 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds ((R16 ## R17 & R16 ## R18) implies R17 ## R18)))))
proof
let R4 being MidSp;
let R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]);
let R17 being (Element of [: (the carrier of R4) , (the carrier of R4) :]);
let R18 being (Element of [: (the carrier of R4) , (the carrier of R4) :]);
assume L86: (R16 ## R17 & R16 ## R18);
L87: (( R16 `1 ) , ( R16 `2 ) @@ ( R17 `1 ) , ( R17 `2 ) & ( R16 `1 ) , ( R16 `2 ) @@ ( R18 `1 ) , ( R18 `2 )) by L86 , L73;
thus L88: ( R17 `1 ) , ( R17 `2 ) @@ ( R18 `1 ) , ( R18 `2 ) by L87 , L63;
end;
theorem
L89: (for R4 being MidSp holds (for R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds (for R17 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds (for R18 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds ((R16 ## R18 & R17 ## R18) implies R16 ## R17))))) by L85;
theorem
L90: (for R4 being MidSp holds (for R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds (for R17 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds (for R18 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds ((R16 ## R17 & R17 ## R18) implies R16 ## R18))))) by L85;
theorem
L91: (for R4 being MidSp holds (for R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds (for R17 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds (for R18 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds (R16 ## R17 implies (R18 ## R16 iff R18 ## R17)))))) by L85;
theorem
L92: (for R4 being MidSp holds (for R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds { R17 where R17 is (Element of [: (the carrier of R4) , (the carrier of R4) :]) : R17 ## R16 } is non  empty non  empty non  empty non  empty (Subset of [: (the carrier of R4) , (the carrier of R4) :])))
proof
let R4 being MidSp;
let R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]);
set D8 = { R17 where R17 is (Element of [: (the carrier of R4) , (the carrier of R4) :]) : R17 ## R16 };
L93: (for B13 being set holds (B13 in D8 implies B13 in [: (the carrier of R4) , (the carrier of R4) :]))
proof
let C9 being set;
assume L94: C9 in D8;
L95: (ex R17 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) st (C9 = R17 & R17 ## R16)) by L94;
thus L96: thesis by L95;
end;
L97: R16 in D8;
thus L98: thesis by L97 , L93 , TARSKI:def 3;
end;
definition
let R4 being MidSp;
let R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]);
func R16 ~ -> (Subset of [: (the carrier of R4) , (the carrier of R4) :]) equals 
{ R17 where R17 is (Element of [: (the carrier of R4) , (the carrier of R4) :]) : R17 ## R16 };
coherence by L92;
end;
registration
let R4 being MidSp;
let R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]);
cluster ( R16 ~ ) -> non  empty;
coherence by L92;
end;
theorem
L101: (for R4 being MidSp holds (for R18 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds (for R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds (R18 in ( R16 ~ ) iff R18 ## R16))))
proof
let R4 being MidSp;
let R18 being (Element of [: (the carrier of R4) , (the carrier of R4) :]);
let R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]);
thus L102: (R18 in ( R16 ~ ) implies R18 ## R16)
proof
assume L103: R18 in ( R16 ~ );
L104: (ex R17 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) st (R18 = R17 & R17 ## R16)) by L103;
thus L105: thesis by L104;
end;

thus L106: thesis;
end;
theorem
L107: (for R4 being MidSp holds (for R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds (for R17 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds (R16 ## R17 implies ( R16 ~ ) = ( R17 ~ )))))
proof
let R4 being MidSp;
let R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]);
let R17 being (Element of [: (the carrier of R4) , (the carrier of R4) :]);
assume L108: R16 ## R17;
L109: (for B14 being set holds (B14 in ( R16 ~ ) iff B14 in ( R17 ~ )))
proof
let C10 being set;
thus L110: (C10 in ( R16 ~ ) implies C10 in ( R17 ~ ))
proof
assume L111: C10 in ( R16 ~ );
reconsider D9 = C10 as (Element of [: (the carrier of R4) , (the carrier of R4) :]) by L111;
L112: D9 ## R16 by L111 , L101;
L113: D9 ## R17 by L112 , L108 , L85;
thus L114: thesis by L113;
end;

thus L115: (C10 in ( R17 ~ ) implies C10 in ( R16 ~ ))
proof
assume L116: C10 in ( R17 ~ );
reconsider D10 = C10 as (Element of [: (the carrier of R4) , (the carrier of R4) :]) by L116;
L117: D10 ## R17 by L116 , L101;
L118: D10 ## R16 by L117 , L108 , L85;
thus L119: thesis by L118;
end;

end;
thus L116: thesis by L109 , TARSKI:1;
end;
theorem
L117: (for R4 being MidSp holds (for R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds (for R17 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds (( R16 ~ ) = ( R17 ~ ) implies R16 ## R17))))
proof
let R4 being MidSp;
let R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]);
let R17 being (Element of [: (the carrier of R4) , (the carrier of R4) :]);
L118: R16 in ( R16 ~ );
thus L119: thesis by L118 , L101;
end;
theorem
L120: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds (for R7 being (Element of R4) holds (for R8 being (Element of R4) holds (( [ R5 , R6 ] ~ ) = ( [ R7 , R8 ] ~ ) implies ( R5 @ R8 ) = ( R6 @ R7 )))))))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
let R7 being (Element of R4);
let R8 being (Element of R4);
assume L121: ( [ R5 , R6 ] ~ ) = ( [ R7 , R8 ] ~ );
L122: R5 , R6 @@ R7 , R8 by L121 , L80 , L117;
thus L123: thesis by L122 , L40;
end;
theorem
L124: (for R4 being MidSp holds (for R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds R16 in ( R16 ~ )));
definition
let R4 being MidSp;
mode Vector of R4
 -> non  empty (Subset of [: (the carrier of R4) , (the carrier of R4) :])
means :L125: (ex R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) st it = ( R16 ~ ));
existence
proof
set D11 = the (Element of [: (the carrier of R4) , (the carrier of R4) :]);
take ( D11 ~ );
thus L126: thesis;
end;
end;
definition
let R4 being MidSp;
let R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]);
redefine func R16 ~ -> (Vector of R4);

coherence by L125;
end;
theorem
L129: (for R4 being MidSp holds (ex R21 being (Vector of R4) st (for R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds (R16 in R21 iff ( R16 `1 ) = ( R16 `2 )))))
proof
let R4 being MidSp;
set D12 = the (Element of R4);
take ( [ D12 , D12 ] ~ );
let R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]);
L130: (( [ D12 , D12 ] `1 ) = D12 & ( [ D12 , D12 ] `2 ) = D12) by MCART_1:7;
L131: (( R16 `1 ) , ( R16 `2 ) @@ D12 , D12 iff R16 ## [ D12 , D12 ]) by L130 , L73;
thus L132: thesis by L131 , L42 , L51 , L101;
end;
definition
let R4 being MidSp;
func ID R4 -> (Vector of R4) equals 
{ R16 where R16 is (Element of [: (the carrier of R4) , (the carrier of R4) :]) : ( R16 `1 ) = ( R16 `2 ) };
coherence
proof
consider R21 being (Vector of R4) such that L133: (for R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds (R16 in R21 iff ( R16 `1 ) = ( R16 `2 ))) by L129;
L134: R21 = { R16 where R16 is (Element of [: (the carrier of R4) , (the carrier of R4) :]) : ( R16 `1 ) = ( R16 `2 ) }
proof
L135: (for B15 being set holds (B15 in R21 iff B15 in { R16 where R16 is (Element of [: (the carrier of R4) , (the carrier of R4) :]) : ( R16 `1 ) = ( R16 `2 ) }))
proof
let C11 being set;
thus L136: (C11 in R21 implies C11 in { R16 where R16 is (Element of [: (the carrier of R4) , (the carrier of R4) :]) : ( R16 `1 ) = ( R16 `2 ) })
proof
assume L137: C11 in R21;
reconsider D13 = C11 as (Element of [: (the carrier of R4) , (the carrier of R4) :]) by L137;
L138: ( D13 `1 ) = ( D13 `2 ) by L133 , L137;
thus L139: thesis by L138;
end;

thus L140: (C11 in { R16 where R16 is (Element of [: (the carrier of R4) , (the carrier of R4) :]) : ( R16 `1 ) = ( R16 `2 ) } implies C11 in R21)
proof
assume L141: C11 in { R16 where R16 is (Element of [: (the carrier of R4) , (the carrier of R4) :]) : ( R16 `1 ) = ( R16 `2 ) };
L142: (ex R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) st (C11 = R16 & ( R16 `1 ) = ( R16 `2 ))) by L141;
thus L143: thesis by L142 , L133;
end;

end;
thus L141: thesis by L135 , TARSKI:1;
end;
thus L142: thesis by L134;
end;
end;
theorem
L144: (for R4 being MidSp holds (for R6 being (Element of R4) holds ( ID R4 ) = ( [ R6 , R6 ] ~ )))
proof
let R4 being MidSp;
let R6 being (Element of R4);
L145: (for R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) holds (R16 in ( ID R4 ) iff R16 in ( [ R6 , R6 ] ~ )))
proof
let R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]);
thus L146: (R16 in ( ID R4 ) implies R16 in ( [ R6 , R6 ] ~ ))
proof
assume L147: R16 in ( ID R4 );
L148: (ex R17 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) st (R16 = R17 & ( R17 `1 ) = ( R17 `2 ))) by L147;
L149: ( R16 `1 ) , ( R16 `2 ) @@ R6 , R6 by L148 , L42;
L150: (( [ R6 , R6 ] `1 ) = R6 & ( [ R6 , R6 ] `2 ) = R6) by MCART_1:7;
L151: R16 ## [ R6 , R6 ] by L150 , L149 , L73;
thus L152: thesis by L151;
end;

thus L153: (R16 in ( [ R6 , R6 ] ~ ) implies R16 in ( ID R4 ))
proof
assume L154: R16 in ( [ R6 , R6 ] ~ );
L155: R16 ## [ R6 , R6 ] by L154 , L101;
L156: (( [ R6 , R6 ] `1 ) = R6 & ( [ R6 , R6 ] `2 ) = R6) by MCART_1:7;
L157: ( R16 `1 ) , ( R16 `2 ) @@ R6 , R6 by L156 , L155 , L73;
L158: ( R16 `1 ) = ( R16 `2 ) by L157 , L44 , L47;
thus L159: thesis by L158;
end;

end;
L154: (for B16 being set holds (B16 in ( ID R4 ) iff B16 in ( [ R6 , R6 ] ~ ))) by L145;
thus L155: thesis by L154 , TARSKI:1;
end;
theorem
L156: (for R4 being MidSp holds (for R21 being (Vector of R4) holds (for R22 being (Vector of R4) holds (for R23 being (Vector of R4) holds (for R25 being (Vector of R4) holds (((ex R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) st (ex R17 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) st (R21 = ( R16 ~ ) & R22 = ( R17 ~ ) & ( R16 `2 ) = ( R17 `1 ) & R23 = ( [ ( R16 `1 ) , ( R17 `2 ) ] ~ )))) & (ex R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) st (ex R17 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) st (R21 = ( R16 ~ ) & R22 = ( R17 ~ ) & ( R16 `2 ) = ( R17 `1 ) & R25 = ( [ ( R16 `1 ) , ( R17 `2 ) ] ~ ))))) implies R23 = R25))))))
proof
let R4 being MidSp;
let R21 being (Vector of R4);
let R22 being (Vector of R4);
let R23 being (Vector of R4);
let R25 being (Vector of R4);
given R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) , R17 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) such that
L157: R21 = ( R16 ~ )
and
L158: R22 = ( R17 ~ )
and
L159: ( R16 `2 ) = ( R17 `1 )
and
L160: R23 = ( [ ( R16 `1 ) , ( R17 `2 ) ] ~ );

given R19 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) , R20 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) such that
L161: R21 = ( R19 ~ )
and
L162: R22 = ( R20 ~ )
and
L163: ( R19 `2 ) = ( R20 `1 )
and
L164: R25 = ( [ ( R19 `1 ) , ( R20 `2 ) ] ~ );

L165: R17 ## R20 by L158 , L162 , L117;
L166: ( R17 `1 ) , ( R17 `2 ) @@ ( R20 `1 ) , ( R20 `2 ) by L165 , L73;
L167: R16 ## R19 by L157 , L161 , L117;
L168: ( R16 `1 ) , ( R16 `2 ) @@ ( R19 `1 ) , ( R19 `2 ) by L167 , L73;
L169: ( R16 `1 ) , ( R17 `2 ) @@ ( R19 `1 ) , ( R20 `2 ) by L168 , L159 , L163 , L166 , L68;
thus L170: thesis by L169 , L160 , L164 , L75 , L107;
end;
definition
let R4 being MidSp;
let R21 being (Vector of R4);
let R22 being (Vector of R4);
func R21 + R22 -> (Vector of R4) means 
:L171: (ex R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) st (ex R17 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) st (R21 = ( R16 ~ ) & R22 = ( R17 ~ ) & ( R16 `2 ) = ( R17 `1 ) & it = ( [ ( R16 `1 ) , ( R17 `2 ) ] ~ ))));
existence
proof
consider R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) such that L172: R21 = ( R16 ~ ) by L125;
consider R17 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) such that L173: R22 = ( R17 ~ ) by L125;
consider R8 being (Element of R4) such that L174: ( R17 `1 ) , ( R17 `2 ) @@ ( R16 `2 ) , R8 by L54;
take ( [ ( R16 `1 ) , R8 ] ~ );
take D14 = R16;
take D15 = [ ( R16 `2 ) , R8 ];
thus L175: R21 = ( D14 ~ ) by L172;
L176: (( D15 `1 ) = ( R16 `2 ) & ( D15 `2 ) = R8) by MCART_1:7;
L177: R17 ## D15 by L176 , L174 , L73;
thus L178: R22 = ( D15 ~ ) by L177 , L173 , L107;
thus L179: ( D14 `2 ) = ( D15 `1 ) by MCART_1:7;
thus L180: thesis by MCART_1:7;
end;
uniqueness by L156;
end;
theorem
L182: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R21 being (Vector of R4) holds (ex R6 being (Element of R4) st R21 = ( [ R5 , R6 ] ~ )))))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R21 being (Vector of R4);
consider R16 being (Element of [: (the carrier of R4) , (the carrier of R4) :]) such that L183: R21 = ( R16 ~ ) by L125;
consider R6 being (Element of R4) such that L184: ( R16 `1 ) , ( R16 `2 ) @@ R5 , R6 by L54;
L185: [ ( R16 `1 ) , ( R16 `2 ) ] ## [ R5 , R6 ] by L184 , L75;
L186: R16 ## [ R5 , R6 ] by L185 , MCART_1:21;
L187: ( R16 ~ ) = ( [ R5 , R6 ] ~ ) by L186 , L107;
thus L188: thesis by L187 , L183;
end;
definition
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
func vect (R5 , R6) -> (Vector of R4) equals 
( [ R5 , R6 ] ~ );
coherence;
end;
theorem
L190: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R21 being (Vector of R4) holds (ex R6 being (Element of R4) st R21 = ( vect (R5 , R6) )))))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R21 being (Vector of R4);
consider R6 being (Element of R4) such that L191: R21 = ( [ R5 , R6 ] ~ ) by L182;
L192: R21 = ( vect (R5 , R6) ) by L191;
thus L193: thesis by L192;
end;
theorem
L194: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds (for R7 being (Element of R4) holds (for R8 being (Element of R4) holds ([ R5 , R6 ] ## [ R7 , R8 ] implies ( vect (R5 , R6) ) = ( vect (R7 , R8) ))))))) by L107;
theorem
L195: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds (for R7 being (Element of R4) holds (for R8 being (Element of R4) holds (( vect (R5 , R6) ) = ( vect (R7 , R8) ) implies ( R5 @ R8 ) = ( R6 @ R7 ))))))) by L120;
theorem
L196: (for R4 being MidSp holds (for R6 being (Element of R4) holds ( ID R4 ) = ( vect (R6 , R6) ))) by L144;
theorem
L197: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds (for R7 being (Element of R4) holds (( vect (R5 , R6) ) = ( vect (R5 , R7) ) implies R6 = R7)))))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
let R7 being (Element of R4);
assume L198: ( vect (R5 , R6) ) = ( vect (R5 , R7) );
L199: (R5 , R6 @@ R5 , R6 & R5 , R6 @@ R5 , R7) by L198 , L80 , L117;
thus L200: thesis by L199 , L58;
end;
theorem
L201: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds (for R7 being (Element of R4) holds ( ( vect (R5 , R6) ) + ( vect (R6 , R7) ) ) = ( vect (R5 , R7) )))))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
let R7 being (Element of R4);
set D16 = [ R5 , R6 ];
set D17 = [ R6 , R7 ];
set D18 = ( D16 ~ );
set D19 = ( D17 ~ );
L202: ( D16 `2 ) = R6 by MCART_1:7
.= ( D17 `1 ) by MCART_1:7;
L203: (( D17 `2 ) = R7 & ( D18 + D19 ) = ( [ ( D16 `1 ) , ( D17 `2 ) ] ~ )) by L202 , L171 , MCART_1:7;
thus L204: thesis by L203 , MCART_1:7;
end;
theorem
L205: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds [ R5 , ( R5 @ R6 ) ] ## [ ( R5 @ R6 ) , R6 ])))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
L206: ( R5 @ R6 ) = ( ( R5 @ R6 ) @ ( R5 @ R6 ) ) by L15;
L207: R5 , ( R5 @ R6 ) @@ ( R5 @ R6 ) , R6 by L206 , L40;
thus L208: thesis by L207 , L75;
end;
theorem
L209: (for R4 being MidSp holds (for R5 being (Element of R4) holds (for R6 being (Element of R4) holds ( ( vect (R5 , ( R5 @ R6 )) ) + ( vect (R5 , ( R5 @ R6 )) ) ) = ( vect (R5 , R6) ))))
proof
let R4 being MidSp;
let R5 being (Element of R4);
let R6 being (Element of R4);
L210: ( ( vect (R5 , ( R5 @ R6 )) ) + ( vect (R5 , ( R5 @ R6 )) ) ) = ( ( vect (R5 , ( R5 @ R6 )) ) + ( vect (( R5 @ R6 ) , R6) ) ) by L107 , L205
.= ( vect (R5 , R6) ) by L201;
thus L211: thesis by L210;
end;
theorem
L212: (for R4 being MidSp holds (for R21 being (Vector of R4) holds (for R22 being (Vector of R4) holds (for R23 being (Vector of R4) holds ( ( R21 + R22 ) + R23 ) = ( R21 + ( R22 + R23 ) )))))
proof
let R4 being MidSp;
let R21 being (Vector of R4);
let R22 being (Vector of R4);
let R23 being (Vector of R4);
set D20 = the (Element of R4);
consider R6 being (Element of R4) such that L213: R21 = ( vect (D20 , R6) ) by L190;
consider R7 being (Element of R4) such that L214: R22 = ( vect (R6 , R7) ) by L190;
consider R8 being (Element of R4) such that L215: R23 = ( vect (R7 , R8) ) by L190;
L216: ( ( R21 + R22 ) + R23 ) = ( ( vect (D20 , R7) ) + R23 ) by L213 , L214 , L201
.= ( vect (D20 , R8) ) by L215 , L201
.= ( ( vect (D20 , R6) ) + ( vect (R6 , R8) ) ) by L201
.= ( R21 + ( R22 + R23 ) ) by L213 , L214 , L215 , L201;
thus L217: thesis by L216;
end;
theorem
L218: (for R4 being MidSp holds (for R21 being (Vector of R4) holds ( R21 + ( ID R4 ) ) = R21))
proof
let R4 being MidSp;
let R21 being (Vector of R4);
set D21 = the (Element of R4);
consider R6 being (Element of R4) such that L219: R21 = ( vect (D21 , R6) ) by L190;
L220: ( R21 + ( ID R4 ) ) = ( ( vect (D21 , R6) ) + ( vect (R6 , R6) ) ) by L219 , L144
.= R21 by L219 , L201;
thus L221: thesis by L220;
end;
theorem
L222: (for R4 being MidSp holds (for R21 being (Vector of R4) holds (ex R22 being (Vector of R4) st ( R21 + R22 ) = ( ID R4 ))))
proof
let R4 being MidSp;
let R21 being (Vector of R4);
set D22 = the (Element of R4);
consider R6 being (Element of R4) such that L223: R21 = ( vect (D22 , R6) ) by L190;
L224: ( R21 + ( vect (R6 , D22) ) ) = ( vect (D22 , D22) ) by L223 , L201
.= ( ID R4 ) by L144;
thus L225: thesis by L224;
end;
theorem
L226: (for R4 being MidSp holds (for R21 being (Vector of R4) holds (for R22 being (Vector of R4) holds ( R21 + R22 ) = ( R22 + R21 ))))
proof
let R4 being MidSp;
let R21 being (Vector of R4);
let R22 being (Vector of R4);
set D23 = the (Element of R4);
consider R6 being (Element of R4) such that L227: R21 = ( vect (D23 , R6) ) by L190;
consider R7 being (Element of R4) such that L228: R22 = ( vect (R6 , R7) ) by L190;
consider R8 being (Element of R4) such that L229: R22 = ( vect (D23 , R8) ) by L190;
consider R11 being (Element of R4) such that L230: R21 = ( vect (R8 , R11) ) by L190;
L231: ( D23 @ R11 ) = ( R6 @ R8 ) by L227 , L230 , L120
.= ( D23 @ R7 ) by L228 , L229 , L120;
L232: ( R21 + R22 ) = ( vect (D23 , R7) ) by L227 , L228 , L201
.= ( vect (D23 , R11) ) by L231 , L33
.= ( R22 + R21 ) by L229 , L230 , L201;
thus L233: thesis by L232;
end;
theorem
L234: (for R4 being MidSp holds (for R21 being (Vector of R4) holds (for R22 being (Vector of R4) holds (for R23 being (Vector of R4) holds (( R21 + R22 ) = ( R21 + R23 ) implies R22 = R23)))))
proof
let R4 being MidSp;
let R21 being (Vector of R4);
let R22 being (Vector of R4);
let R23 being (Vector of R4);
assume L235: ( R21 + R22 ) = ( R21 + R23 );
consider R24 being (Vector of R4) such that L236: ( R21 + R24 ) = ( ID R4 ) by L222;
L237: R22 = ( R22 + ( ID R4 ) ) by L218
.= ( ( R21 + R24 ) + R22 ) by L236 , L226
.= ( ( R24 + R21 ) + R22 ) by L226
.= ( R24 + ( R21 + R23 ) ) by L235 , L212
.= ( ( R24 + R21 ) + R23 ) by L212
.= ( ( ID R4 ) + R23 ) by L236 , L226
.= ( R23 + ( ID R4 ) ) by L226;
thus L238: thesis by L237 , L218;
end;
definition
let R4 being MidSp;
let R21 being (Vector of R4);
func - R21 -> (Vector of R4) means 
( R21 + it ) = ( ID R4 );
existence by L222;
uniqueness by L234;
end;
definition
let R4 being MidSp;
func setvect R4 -> set equals 
{ R26 where R26 is (Subset of [: (the carrier of R4) , (the carrier of R4) :]) : R26 is (Vector of R4) };
coherence;
end;
theorem
L241: (for R4 being MidSp holds (for R27 being set holds (R27 is (Vector of R4) iff R27 in ( setvect R4 ))))
proof
let R4 being MidSp;
let R27 being set;
thus L242: (R27 is (Vector of R4) implies R27 in ( setvect R4 ));
thus L243: (R27 in ( setvect R4 ) implies R27 is (Vector of R4))
proof
assume L244: R27 in ( setvect R4 );
L245: (ex R26 being (Subset of [: (the carrier of R4) , (the carrier of R4) :]) st (R27 = R26 & R26 is (Vector of R4))) by L244;
thus L246: thesis by L245;
end;

end;
registration
let R4 being MidSp;
cluster ( setvect R4 ) -> non  empty;
coherence
proof
L244: ( ID R4 ) in ( setvect R4 );
thus L245: thesis by L244;
end;
end;
definition
let R4 being MidSp;
let R28 being (Element of ( setvect R4 ));
let R29 being (Element of ( setvect R4 ));
func R28 + R29 -> (Element of ( setvect R4 )) means 
:L247: (for R21 being (Vector of R4) holds (for R22 being (Vector of R4) holds ((R28 = R21 & R29 = R22) implies it = ( R21 + R22 ))));
existence
proof
reconsider D24 = R28 , D25 = R29 as (Vector of R4) by L241;
reconsider D26 = ( D24 + D25 ) as (Element of ( setvect R4 )) by L241;
take D26;
thus L248: thesis;
end;
uniqueness
proof
reconsider D27 = R28 , D28 = R29 as (Vector of R4) by L241;
let R32 being (Element of ( setvect R4 ));
let R33 being (Element of ( setvect R4 ));
assume that
L249: (for R21 being (Vector of R4) holds (for R22 being (Vector of R4) holds ((R28 = R21 & R29 = R22) implies R32 = ( R21 + R22 ))))
and
L250: (for R21 being (Vector of R4) holds (for R22 being (Vector of R4) holds ((R28 = R21 & R29 = R22) implies R33 = ( R21 + R22 ))));
L251: R32 = ( D27 + D28 ) by L249;
thus L252: thesis by L251 , L250;
end;
end;
theorem
L254: (for R4 being MidSp holds (for R28 being (Element of ( setvect R4 )) holds (for R29 being (Element of ( setvect R4 )) holds ( R28 + R29 ) = ( R29 + R28 ))))
proof
let R4 being MidSp;
let R28 being (Element of ( setvect R4 ));
let R29 being (Element of ( setvect R4 ));
reconsider D29 = R28 , D30 = R29 as (Vector of R4) by L241;
thus L255: ( R28 + R29 ) = ( D29 + D30 ) by L247
.= ( D30 + D29 ) by L226
.= ( R29 + R28 ) by L247;
end;
theorem
L256: (for R4 being MidSp holds (for R28 being (Element of ( setvect R4 )) holds (for R29 being (Element of ( setvect R4 )) holds (for R30 being (Element of ( setvect R4 )) holds ( ( R28 + R29 ) + R30 ) = ( R28 + ( R29 + R30 ) )))))
proof
let R4 being MidSp;
let R28 being (Element of ( setvect R4 ));
let R29 being (Element of ( setvect R4 ));
let R30 being (Element of ( setvect R4 ));
reconsider D31 = R28 , D32 = R29 , D33 = R30 as (Vector of R4) by L241;
L257: ( R29 + R30 ) = ( D32 + D33 ) by L247;
L258: ( R28 + R29 ) = ( D31 + D32 ) by L247;
thus L259: ( ( R28 + R29 ) + R30 ) = ( ( D31 + D32 ) + D33 ) by L258 , L247
.= ( D31 + ( D32 + D33 ) ) by L212
.= ( R28 + ( R29 + R30 ) ) by L257 , L247;
end;
definition
let R4 being MidSp;
func addvect R4 -> (BinOp of ( setvect R4 )) means 
:L260: (for R28 being (Element of ( setvect R4 )) holds (for R29 being (Element of ( setvect R4 )) holds ( it . (R28 , R29) ) = ( R28 + R29 )));
existence
proof
defpred S1[ (Element of ( setvect R4 )) , (Element of ( setvect R4 )) , (Element of ( setvect R4 )) ] means $3 = ( $1 + $2 );
L261: (for R28 being (Element of ( setvect R4 )) holds (for R29 being (Element of ( setvect R4 )) holds (ex R31 being (Element of ( setvect R4 )) st S1[ R28 , R29 , R31 ])));
consider C12 being (BinOp of ( setvect R4 )) such that L262: (for R28 being (Element of ( setvect R4 )) holds (for R29 being (Element of ( setvect R4 )) holds S1[ R28 , R29 , ( C12 . (R28 , R29) ) ])) from BINOP_1:sch 3(L261);
take C12;
thus L263: thesis by L262;
end;
uniqueness
proof
let C13 , C14 being (BinOp of ( setvect R4 ));
assume that
L264: (for R28 being (Element of ( setvect R4 )) holds (for R29 being (Element of ( setvect R4 )) holds ( C13 . (R28 , R29) ) = ( R28 + R29 )))
and
L265: (for R28 being (Element of ( setvect R4 )) holds (for R29 being (Element of ( setvect R4 )) holds ( C14 . (R28 , R29) ) = ( R28 + R29 )));
L266: (for R28 being (Element of ( setvect R4 )) holds (for R29 being (Element of ( setvect R4 )) holds ( C13 . (R28 , R29) ) = ( C14 . (R28 , R29) )))
proof
let R28 being (Element of ( setvect R4 ));
let R29 being (Element of ( setvect R4 ));
L267: ( C13 . (R28 , R29) ) = ( R28 + R29 ) by L264;
thus L268: thesis by L267 , L265;
end;
thus L269: thesis by L266 , BINOP_1:2;
end;
end;
theorem
L271: (for R4 being MidSp holds (for R31 being (Element of ( setvect R4 )) holds (ex R34 being (Element of ( setvect R4 )) st ( R31 + R34 ) = ( ID R4 ))))
proof
let R4 being MidSp;
let R31 being (Element of ( setvect R4 ));
reconsider D34 = R31 as (Vector of R4) by L241;
consider C15 being (Vector of R4) such that L272: ( D34 + C15 ) = ( ID R4 ) by L222;
reconsider D35 = C15 as (Element of ( setvect R4 )) by L241;
L273: ( D34 + C15 ) = ( R31 + D35 ) by L247;
thus L274: thesis by L273 , L272;
end;
theorem
L275: (for R4 being MidSp holds (for R31 being (Element of ( setvect R4 )) holds (for R32 being (Element of ( setvect R4 )) holds (for R33 being (Element of ( setvect R4 )) holds ((( R31 + R32 ) = ( ID R4 ) & ( R31 + R33 ) = ( ID R4 )) implies R32 = R33)))))
proof
let R4 being MidSp;
let R31 being (Element of ( setvect R4 ));
let R32 being (Element of ( setvect R4 ));
let R33 being (Element of ( setvect R4 ));
assume that
L276: (( R31 + R32 ) = ( ID R4 ) & ( R31 + R33 ) = ( ID R4 ));
reconsider D36 = R31 , D37 = R32 , D38 = R33 as (Vector of R4) by L241;
L277: ( D36 + D37 ) = ( R31 + R33 ) by L276 , L247
.= ( D36 + D38 ) by L247;
thus L278: thesis by L277 , L234;
end;
definition
let R4 being MidSp;
func complvect R4 -> (UnOp of ( setvect R4 )) means 
:L279: (for R31 being (Element of ( setvect R4 )) holds ( R31 + ( it . R31 ) ) = ( ID R4 ));
existence
proof
defpred S2[ (Element of ( setvect R4 )) , (Element of ( setvect R4 )) ] means ( $1 + $2 ) = ( ID R4 );
L280: (for R31 being (Element of ( setvect R4 )) holds (ex R34 being (Element of ( setvect R4 )) st S2[ R31 , R34 ])) by L271;
consider C16 being (UnOp of ( setvect R4 )) such that L281: (for R31 being (Element of ( setvect R4 )) holds S2[ R31 , ( C16 . R31 ) ]) from FUNCT_2:sch 3(L280);
take C16;
thus L282: thesis by L281;
end;
uniqueness
proof
let C17 , C18 being (UnOp of ( setvect R4 ));
assume that
L283: ((for R31 being (Element of ( setvect R4 )) holds ( R31 + ( C17 . R31 ) ) = ( ID R4 )) & (for R31 being (Element of ( setvect R4 )) holds ( R31 + ( C18 . R31 ) ) = ( ID R4 )));
L284: (for R31 being (Element of ( setvect R4 )) holds ( C17 . R31 ) = ( C18 . R31 ))
proof
let R31 being (Element of ( setvect R4 ));
L285: (( R31 + ( C17 . R31 ) ) = ( ID R4 ) & ( R31 + ( C18 . R31 ) ) = ( ID R4 )) by L283;
thus L286: thesis by L285 , L275;
end;
thus L287: thesis by L284 , FUNCT_2:63;
end;
end;
definition
let R4 being MidSp;
func zerovect R4 -> (Element of ( setvect R4 )) equals 
( ID R4 );
coherence by L241;
end;
definition
let R4 being MidSp;
func vectgroup R4 -> addLoopStr equals 
addLoopStr (# ( setvect R4 ) , ( addvect R4 ) , ( zerovect R4 ) #);
coherence;
end;
registration
let R4 being MidSp;
cluster ( vectgroup R4 ) ->  strict non  empty;
coherence;
end;
theorem
L292: (for R4 being MidSp holds (the carrier of ( vectgroup R4 )) = ( setvect R4 ));
theorem
L293: (for R4 being MidSp holds (the addF of ( vectgroup R4 )) = ( addvect R4 ));
theorem
L294: (for R4 being MidSp holds ( 0. ( vectgroup R4 ) ) = ( zerovect R4 ));
theorem
L295: (for R4 being MidSp holds ( vectgroup R4 ) is  add-associative  right_zeroed  right_complementable  Abelian)
proof
let R4 being MidSp;
set D39 = ( vectgroup R4 );
thus L296: D39 is  add-associative
proof
let C19 , C20 , C21 being (Element of D39);
reconsider D40 = C19 , D41 = C20 , D42 = C21 as (Element of ( setvect R4 ));
thus L297: ( ( C19 + C20 ) + C21 ) = ( ( addvect R4 ) . (( D40 + D41 ) , D42) ) by L260
.= ( ( D40 + D41 ) + D42 ) by L260
.= ( D40 + ( D41 + D42 ) ) by L256
.= ( ( addvect R4 ) . (D40 , ( D41 + D42 )) ) by L260
.= ( C19 + ( C20 + C21 ) ) by L260;
end;

thus L298: D39 is  right_zeroed
proof
let C22 being (Element of D39);
reconsider D43 = C22 as (Element of ( setvect R4 ));
thus L299: ( C22 + ( 0. D39 ) ) = C22
proof
reconsider D44 = D43 as (Vector of R4) by L241;
L300: ( D43 + ( zerovect R4 ) ) = ( D44 + ( ID R4 ) ) by L247
.= C22 by L218;
thus L301: thesis by L300 , L260;
end;

end;

thus L300: D39 is  right_complementable
proof
let C23 being (Element of D39);
reconsider D45 = C23 as (Element of ( setvect R4 ));
reconsider D46 = ( ( complvect R4 ) . D45 ) as (Element of D39);
take D46;
thus L301: ( C23 + D46 ) = ( D45 + ( ( complvect R4 ) . D45 ) ) by L260
.= ( 0. D39 ) by L279;
end;

thus L302: D39 is  Abelian
proof
let C24 , C25 being (Element of D39);
reconsider D47 = C24 , D48 = C25 as (Element of ( setvect R4 ));
thus L303: ( C24 + C25 ) = ( D47 + D48 ) by L260
.= ( D48 + D47 ) by L254
.= ( C25 + C24 ) by L260;
end;

end;
