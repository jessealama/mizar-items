:: Model Checking, Part {III}
::  by Kazuhisa Ishida and Yasunari Shidama
::
:: Received August 19, 2008
:: Copyright (c) 2008-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, NAT_1, XBOOLE_0, FINSEQ_1, MODELC_2, SUBSET_1, ZF_LANG,
      XREAL_0, ORDINAL1, FUNCT_1, RELAT_1, XXREAL_0, INT_1, ARYTM_3, ARYTM_1,
      CARD_1, STRUCT_0, TARSKI, XBOOLEAN, LATTICES, CAT_3, ORDINAL4, ZF_MODEL,
      MODELC_1, FINSET_1, SEQ_1, REAL_1, CARD_3, SERIES_1, ZFMISC_1, MSUALG_3,
      ORDERS_1, SUBSTUT1, FSM_1, FSM_2, VALUED_1, MODELC_3;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, ORDINAL1, FINSET_1, CARD_1,
      NUMBERS, XCMPLX_0, XREAL_0, REAL_1, XXREAL_0, NAT_1, RELAT_1, FUNCT_1,
      RELSET_1, FINSEQ_1, ORDERS_1, FUNCT_2, INT_1, SEQ_1, SERIES_1, PARTFUN1,
      STRUCT_0, MODELC_1, MODELC_2, RFINSEQ2;
 constructors KNASTER, MODELC_2, SERIES_1, REAL_1, NEWTON, RFINSEQ2, SEQ_1,
      RELSET_1;
 registrations XBOOLE_0, SUBSET_1, RELAT_1, FUNCT_1, ORDINAL1, XXREAL_0,
      XREAL_0, NAT_1, INT_1, ORDERS_1, FINSET_1, MODELC_2, FINSEQ_1, NUMBERS,
      VALUED_0, CARD_1, RELSET_1, FUNCT_2;
 requirements REAL, NUMERALS, ARITHM, SUBSET, BOOLE;
 definitions TARSKI, MODELC_2, SERIES_1;
 theorems XBOOLE_0, ZFMISC_1, XBOOLE_1, TARSKI, FUNCT_1, FUNCT_2, FUNCT_7,
      NAT_1, INT_1, ENUMSET1, XREAL_1, FINSEQ_1, ORDERS_1, XXREAL_0, MODELC_1,
      MODELC_2, ORDINAL1, SUBSET_1, FINSEQ_4, SERIES_1, CARD_1, CARD_2,
      SERIES_2, FINSET_1, RFINSEQ2, FINSEQ_3, SUBSET, XTUPLE_0;
 schemes NAT_1, FUNCT_2, MODELC_2, TARSKI, FUNCT_1, FINSEQ_1, RECDEF_1;

begin
L1: (for R10 being set holds (for R14 being set holds (for R15 being set holds (for R16 being set holds (R10 in ( ( R14 \/ R15 ) \/ R16 ) iff (R10 in R14 or R10 in R15 or R10 in R16))))))
proof
let R10 being set;
let R14 being set;
let R15 being set;
let R16 being set;
L2: (R10 in ( ( R14 \/ R15 ) \/ R16 ) iff (R10 in ( R14 \/ R15 ) or R10 in R16)) by XBOOLE_0:def 3;
thus L3: thesis by L2 , XBOOLE_0:def 3;
end;
L4: (for R10 being set holds (for R14 being set holds (for R15 being set holds (for R16 being set holds (for R17 being set holds (R10 in ( ( R14 \ R15 ) \/ ( R16 \ R17 ) ) iff ((R10 in R14 & (not R10 in R15)) or (R10 in R16 & (not R10 in R17)))))))))
proof
let R10 being set;
let R14 being set;
let R15 being set;
let R16 being set;
let R17 being set;
L5: (R10 in ( ( R14 \ R15 ) \/ ( R16 \ R17 ) ) iff (R10 in ( R14 \ R15 ) or R10 in ( R16 \ R17 ))) by XBOOLE_0:def 3;
thus L6: thesis by L5 , XBOOLE_0:def 5;
end;
L7: (for R26 being LTL-formula holds (( <* R26 *> . 1 ) = R26 & ( rng <* R26 *> ) = { R26 }))
proof
let R26 being LTL-formula;
set D1 = <* R26 *>;
L8: (( dom D1 ) = { 1 } & ( D1 . 1 ) = R26) by FINSEQ_1:2 , FINSEQ_1:def 8;
thus L9: thesis by L8 , FUNCT_1:4;
end;
L10: (for B1 , B2 being  real number holds (B1 <= B2 implies [\ B1 /] <= [\ B2 /]))
proof
let C1 , C2 being  real number;
L11: (C1 <= C2 implies [\ C1 /] <= [\ C2 /])
proof
assume L12: C1 <= C2;
L13:
now
assume L14: [\ C2 /] < [\ C1 /];
L15: ( [\ C2 /] + 1 ) <= [\ C1 /] by L14 , INT_1:7;
L16: [\ C1 /] <= C1 by INT_1:def 6;
L17: ( [\ C2 /] + 1 ) <= C1 by L16 , L15 , XXREAL_0:2;
thus L18: contradiction by L17 , L12 , INT_1:29 , XXREAL_0:2;
end;
thus L19: thesis by L13;
end;
thus L20: thesis by L11;
end;
L21: (for B3 , B4 being  real number holds (B3 <= ( B4 - 1 ) implies [\ B3 /] <= ( [\ B4 /] - 1 )))
proof
let C3 , C4 being  real number;
L22: (C3 <= ( C4 - 1 ) implies [\ C3 /] <= ( [\ C4 /] - 1 ))
proof
assume L23: C3 <= ( C4 - 1 );
L24: ( C3 + 1 ) <= ( ( C4 - 1 ) + 1 ) by L23 , XREAL_1:6;
L25: [\ ( C3 + 1 ) /] <= [\ C4 /] by L24 , L10;
L26: ( [\ C3 /] + 1 ) <= [\ C4 /] by L25 , INT_1:28;
L27: ( ( [\ C3 /] + 1 ) - 1 ) <= ( [\ C4 /] - 1 ) by L26 , XREAL_1:9;
thus L28: thesis by L27;
end;
thus L29: thesis by L22;
end;
L30: (for R2 being Nat holds (R2 = ( 0 ) or 1 <= R2))
proof
let R2 being Nat;
L31: (R2 = ( 0 ) or ( 0 ) < ( ( 0 ) + R2 ));
thus L32: thesis by L31 , NAT_1:19;
end;
L33: (for R26 being LTL-formula holds ((R26 is  negative or R26 is  next) implies ( the_argument_of R26 ) is_subformula_of R26))
proof
let R26 being LTL-formula;
set D2 = ( the_argument_of R26 );
assume L34: (R26 is  negative or R26 is  next);
L35: D2 is_immediate_constituent_of R26 by L34 , MODELC_2:20 , MODELC_2:21;
L36: D2 is_proper_subformula_of R26 by L35 , MODELC_2:29;
thus L37: thesis by L36 , MODELC_2:def 23;
end;
L38: (for R26 being LTL-formula holds ((R26 is  conjunctive or R26 is  disjunctive or R26 is  Until or R26 is  Release) implies (( the_left_argument_of R26 ) is_subformula_of R26 & ( the_right_argument_of R26 ) is_subformula_of R26)))
proof
let R26 being LTL-formula;
set D3 = ( the_left_argument_of R26 );
set D4 = ( the_right_argument_of R26 );
assume L39: (R26 is  conjunctive or R26 is  disjunctive or R26 is  Until or R26 is  Release);
L40: D4 is_immediate_constituent_of R26 by L39 , MODELC_2:22 , MODELC_2:23 , MODELC_2:24 , MODELC_2:25;
L41: D4 is_proper_subformula_of R26 by L40 , MODELC_2:29;
L42: D3 is_immediate_constituent_of R26 by L39 , MODELC_2:22 , MODELC_2:23 , MODELC_2:24 , MODELC_2:25;
L43: D3 is_proper_subformula_of R26 by L42 , MODELC_2:29;
thus L44: thesis by L43 , L41 , MODELC_2:def 23;
end;
L45: (for R22 being LTL-formula holds (for R26 being LTL-formula holds (R22 is_subformula_of R26 implies { R22 } is (Subset of ( Subformulae R26 )))))
proof
let R22 being LTL-formula;
let R26 being LTL-formula;
set D5 = ( Subformulae R26 );
assume L46: R22 is_subformula_of R26;
L47: R22 in D5 by L46 , MODELC_2:45;
thus L48: thesis by L47 , SUBSET_1:41;
end;
L49: (for R22 being LTL-formula holds (for R24 being LTL-formula holds (for R26 being LTL-formula holds ((R22 is_subformula_of R26 & R24 is_subformula_of R26) implies { R22 , R24 } is (Subset of ( Subformulae R26 ))))))
proof
let R22 being LTL-formula;
let R24 being LTL-formula;
let R26 being LTL-formula;
set D6 = ( Subformulae R26 );
assume L50: (R22 is_subformula_of R26 & R24 is_subformula_of R26);
L51: (R22 in D6 & R24 in D6) by L50 , MODELC_2:45;
thus L52: thesis by L51 , SUBSET_1:34;
end;
L53: (for R26 being LTL-formula holds ((R26 is  disjunctive or R26 is  conjunctive or R26 is  Until or R26 is  Release) implies { ( the_left_argument_of R26 ) , ( the_right_argument_of R26 ) } is (Subset of ( Subformulae R26 ))))
proof
let R26 being LTL-formula;
assume L54: (R26 is  disjunctive or R26 is  conjunctive or R26 is  Until or R26 is  Release);
L55: (( the_left_argument_of R26 ) is_subformula_of R26 & ( the_right_argument_of R26 ) is_subformula_of R26) by L54 , L38;
thus L56: thesis by L55 , L49;
end;
L57: (for R26 being LTL-formula holds ((R26 is  disjunctive or R26 is  conjunctive or R26 is  Until or R26 is  Release) implies ({ ( the_left_argument_of R26 ) } is (Subset of ( Subformulae R26 )) & { ( the_right_argument_of R26 ) } is (Subset of ( Subformulae R26 )))))
proof
let R26 being LTL-formula;
assume L58: (R26 is  disjunctive or R26 is  conjunctive or R26 is  Until or R26 is  Release);
L59: (( the_left_argument_of R26 ) is_subformula_of R26 & ( the_right_argument_of R26 ) is_subformula_of R26) by L58 , L38;
thus L60: thesis by L59 , L45;
end;
L61: (for R26 being LTL-formula holds { R26 } is (Subset of ( Subformulae R26 ))) by L45;
L62: (for R26 being LTL-formula holds ((R26 is  negative or R26 is  next) implies { ( the_argument_of R26 ) } is (Subset of ( Subformulae R26 ))))
proof
let R26 being LTL-formula;
assume L63: (R26 is  negative or R26 is  next);
L64: ( the_argument_of R26 ) is_subformula_of R26 by L63 , L33;
thus L65: thesis by L64 , L45;
end;
definition
let R22 being LTL-formula;
redefine func Subformulae R22 -> (Subset of ( LTL_WFF ));

coherence
proof
set D7 = ( Subformulae R22 );
L66: D7 is (Subset of D7) by SUBSET:3;
thus L67: thesis by L66 , MODELC_2:47;
end;
end;
definition
let R26 being LTL-formula;
func LTLNew1 R26 -> (Subset of ( Subformulae R26 )) equals 
:L69: { ( the_left_argument_of R26 ) , ( the_right_argument_of R26 ) } if R26 is  conjunctive , { ( the_left_argument_of R26 ) } if R26 is  disjunctive , ( {} ) if R26 is  next , { ( the_left_argument_of R26 ) } if R26 is  Until , { ( the_right_argument_of R26 ) } if R26 is  Release otherwise ( {} );
correctness by L53 , L57 , MODELC_2:78 , SUBSET_1:1;
func LTLNew2 R26 -> (Subset of ( Subformulae R26 )) equals 
:L70: ( {} ) if R26 is  conjunctive , { ( the_right_argument_of R26 ) } if R26 is  disjunctive , ( {} ) if R26 is  next , { ( the_right_argument_of R26 ) } if R26 is  Until , { ( the_left_argument_of R26 ) , ( the_right_argument_of R26 ) } if R26 is  Release otherwise ( {} );
correctness by L53 , L57 , MODELC_2:78 , SUBSET_1:1;
func LTLNext R26 -> (Subset of ( Subformulae R26 )) equals 
:L71: ( {} ) if R26 is  conjunctive , ( {} ) if R26 is  disjunctive , { ( the_argument_of R26 ) } if R26 is  next , { R26 } if R26 is  Until , { R26 } if R26 is  Release otherwise ( {} );
correctness by L61 , L62 , MODELC_2:78 , SUBSET_1:1;
end;
definition
let R30 being LTL-formula;
struct LTLnode over R30(# LTLold , LTLnew , LTLnext -> (Subset of ( Subformulae R30 )) #);
end;
definition
let R30 being LTL-formula;
let C5 being LTLnode over R30;
let R26 being LTL-formula;
assume L74: R26 in (the LTLnew of C5);
func SuccNode1 (R26 , C5) ->  strict LTLnode over R30 means 
:L75: ((the LTLold of it) = ( (the LTLold of C5) \/ { R26 } ) & (the LTLnew of it) = ( ( (the LTLnew of C5) \ { R26 } ) \/ ( ( LTLNew1 R26 ) \ (the LTLold of C5) ) ) & (the LTLnext of it) = ( (the LTLnext of C5) \/ ( LTLNext R26 ) ));
existence
proof
set D8 = ( (the LTLnext of C5) \/ ( LTLNext R26 ) );
set D9 = ( ( LTLNew1 R26 ) \ (the LTLold of C5) );
set D10 = ( (the LTLnew of C5) \ { R26 } );
set D11 = ( (the LTLold of C5) \/ { R26 } );
set D12 = ( D10 \/ D9 );
L76: { R26 } c= ( Subformulae R30 ) by L74 , ZFMISC_1:31;
reconsider D13 = D11 as (Subset of ( Subformulae R30 )) by L76 , XBOOLE_1:8;
L77: (ex R22 being LTL-formula st (R26 = R22 & R22 is_subformula_of R30)) by L74 , MODELC_2:def 24;
L78: ( Subformulae R26 ) c= ( Subformulae R30 ) by L77 , MODELC_2:46;
L79: D9 c= ( Subformulae R30 ) by L78 , XBOOLE_1:1;
reconsider D14 = D12 as (Subset of ( Subformulae R30 )) by L79 , XBOOLE_1:8;
L80: ( LTLNext R26 ) c= ( Subformulae R30 ) by L78 , XBOOLE_1:1;
reconsider D15 = D8 as (Subset of ( Subformulae R30 )) by L80 , XBOOLE_1:8;
set D16 = LTLnode (# D13 , D14 , D15 #);
take D16;
thus L81: thesis;
end;
uniqueness;
end;
definition
let R30 being LTL-formula;
let C6 being LTLnode over R30;
let R26 being LTL-formula;
assume L83: R26 in (the LTLnew of C6);
func SuccNode2 (R26 , C6) ->  strict LTLnode over R30 means 
:L84: ((the LTLold of it) = ( (the LTLold of C6) \/ { R26 } ) & (the LTLnew of it) = ( ( (the LTLnew of C6) \ { R26 } ) \/ ( ( LTLNew2 R26 ) \ (the LTLold of C6) ) ) & (the LTLnext of it) = (the LTLnext of C6));
existence
proof
set D17 = (the LTLnext of C6);
set D18 = ( ( LTLNew2 R26 ) \ (the LTLold of C6) );
set D19 = ( (the LTLnew of C6) \ { R26 } );
set D20 = ( (the LTLold of C6) \/ { R26 } );
set D21 = ( D19 \/ D18 );
L85: { R26 } c= ( Subformulae R30 ) by L83 , ZFMISC_1:31;
reconsider D22 = D20 as (Subset of ( Subformulae R30 )) by L85 , XBOOLE_1:8;
L86: (ex R22 being LTL-formula st (R26 = R22 & R22 is_subformula_of R30)) by L83 , MODELC_2:def 24;
L87: ( Subformulae R26 ) c= ( Subformulae R30 ) by L86 , MODELC_2:46;
L88: D18 c= ( Subformulae R30 ) by L87 , XBOOLE_1:1;
reconsider D23 = D21 as (Subset of ( Subformulae R30 )) by L88 , XBOOLE_1:8;
set D24 = LTLnode (# D22 , D23 , D17 #);
take D24;
thus L89: thesis;
end;
uniqueness;
end;
definition
let R30 being LTL-formula;
let C7 , C8 being LTLnode over R30;
let R26 being LTL-formula;
pred C8 is_succ_of C7 , R26
means
:L91: (R26 in (the LTLnew of C7) & (C8 = ( SuccNode1 (R26 , C7) ) or ((R26 is  disjunctive or R26 is  Until or R26 is  Release) & C8 = ( SuccNode2 (R26 , C7) ))))
;end;
definition
let R30 being LTL-formula;
let C9 , C10 being LTLnode over R30;
pred C10 is_succ1_of C9
means
:L93: (ex R26 being LTL-formula st (R26 in (the LTLnew of C9) & C10 = ( SuccNode1 (R26 , C9) )))
;pred C10 is_succ2_of C9
means
:L94: (ex R26 being LTL-formula st (R26 in (the LTLnew of C9) & (R26 is  disjunctive or R26 is  Until or R26 is  Release) & C10 = ( SuccNode2 (R26 , C9) )))
;end;
definition
let R30 being LTL-formula;
let C11 , C12 being LTLnode over R30;
pred C12 is_succ_of C11
means
:L96: (C12 is_succ1_of C11 or C12 is_succ2_of C11)
;end;
definition
let R30 being LTL-formula;
let C13 being LTLnode over R30;
attr C13 is  failure
means
(ex R26 being LTL-formula st (ex R22 being LTL-formula st (R26 is  atomic & R22 = ( 'not' R26 ) & R26 in (the LTLold of C13) & R22 in (the LTLold of C13))));
end;
definition
let R30 being LTL-formula;
let C14 being LTLnode over R30;
attr C14 is  elementary
means
:L99: (the LTLnew of C14) = ( {} );
end;
definition
let R30 being LTL-formula;
let C15 being LTLnode over R30;
attr C15 is  final
means
(C15 is  elementary & (the LTLnext of C15) = ( {} ));
end;
definition
let R30 being LTL-formula;
func {} R30 -> (Subset of ( Subformulae R30 )) equals 
( {} );
correctness by SUBSET_1:1;
end;
definition
let R30 being LTL-formula;
func Seed R30 -> (Subset of ( Subformulae R30 )) equals 
{ R30 };
correctness by L45;
end;
registration
let R30 being LTL-formula;
cluster  elementary  strict for LTLnode over R30;
existence
proof
set D25 = LTLnode (# ( {} R30 ) , ( {} R30 ) , ( {} R30 ) #);
take D25;
thus L104: thesis by L99;
end;
end;
definition
let R30 being LTL-formula;
func FinalNode R30 ->  elementary  strict LTLnode over R30 equals 
LTLnode (# ( {} R30 ) , ( {} R30 ) , ( {} R30 ) #);
correctness by L99;
end;
definition
let R11 being set;
let R30 being LTL-formula;
func CastNode (R11 , R30) ->  strict LTLnode over R30 equals 
:L107: R11 if R11 is  strict  strict  strict  strict LTLnode over R30 otherwise LTLnode (# ( {} R30 ) , ( {} R30 ) , ( {} R30 ) #);
correctness;
end;
definition
let R30 being LTL-formula;
func init R30 ->  elementary  strict LTLnode over R30 equals 
LTLnode (# ( {} R30 ) , ( {} R30 ) , ( Seed R30 ) #);
correctness by L99;
end;
definition
let R30 being LTL-formula;
let C16 being LTLnode over R30;
func 'X' C16 ->  strict LTLnode over R30 equals 
LTLnode (# ( {} R30 ) , (the LTLnext of C16) , ( {} R30 ) #);
correctness;
end;
definition
let R30 being LTL-formula;
let R19 being FinSequence;
pred R19 is_Finseq_for R30
means
:L111: (for R1 being Nat holds ((1 <= R1 & R1 < ( len R19 )) implies (ex R31 being  strict LTLnode over R30 st (ex R36 being  strict LTLnode over R30 st (R31 = ( R19 . R1 ) & R36 = ( R19 . ( R1 + 1 ) ) & R36 is_succ_of R31)))))
;end;
L113: (for R4 being Nat holds (for R19 being FinSequence holds (for R30 being LTL-formula holds ((R19 is_Finseq_for R30 & 1 <= R4 & R4 <= ( len R19 )) implies (ex R20 being FinSequence st (ex R21 being FinSequence st (R21 is_Finseq_for R30 & R19 = ( R20 ^ R21 ) & ( R21 . 1 ) = ( R19 . R4 ) & 1 <= ( len R21 ) & ( len R21 ) = ( ( len R19 ) - ( R4 - 1 ) ) & ( R21 . ( len R21 ) ) = ( R19 . ( len R19 ) ))))))))
proof
let R4 being Nat;
let R19 being FinSequence;
let R30 being LTL-formula;
assume that
L114: R19 is_Finseq_for R30
and
L115: 1 <= R4
and
L116: R4 <= ( len R19 );
L117: ( R4 - 1 ) <= ( ( len R19 ) - ( 0 ) ) by L116 , XREAL_1:13;
set D26 = ( R4 - 1 );
reconsider D27 = D26 as Nat by L115 , NAT_1:21;
set D28 = ( R19 | ( Seg D27 ) );
reconsider D29 = D28 as FinSequence by FINSEQ_1:15;
consider C17 being FinSequence such that L118: R19 = ( D29 ^ C17 ) by FINSEQ_1:80;
L119: ( len R19 ) = ( ( len D29 ) + ( len C17 ) ) by L118 , FINSEQ_1:22;
L120: ( len C17 ) = ( ( len R19 ) - ( len D29 ) ) by L119
.= ( ( len R19 ) - D27 ) by L117 , FINSEQ_1:17;
L121: ( R4 - R4 ) <= ( ( len R19 ) - R4 ) by L116 , XREAL_1:9;
L122: ( ( 0 ) + 1 ) <= ( ( ( len R19 ) - R4 ) + 1 ) by L121 , XREAL_1:6;
L123: 1 in ( dom C17 ) by L122 , L120 , FINSEQ_3:25;
L124: ( C17 . 1 ) = ( R19 . ( ( len D29 ) + 1 ) ) by L123 , L118 , FINSEQ_1:def 7
.= ( R19 . ( D27 + 1 ) ) by L117 , FINSEQ_1:17
.= ( R19 . R4 );
L125: ( len D29 ) = D27 by L117 , FINSEQ_1:17;
L126: (for R1 being Nat holds ((1 <= R1 & R1 < ( len C17 )) implies (ex R31 being  strict LTLnode over R30 st (ex R36 being  strict LTLnode over R30 st (R31 = ( C17 . R1 ) & R36 = ( C17 . ( R1 + 1 ) ) & R36 is_succ_of R31)))))
proof
let R1 being Nat;
assume that
L127: (1 <= R1 & R1 < ( len C17 ));
set D30 = ( R1 + 1 );
L128: (1 <= D30 & D30 <= ( len C17 )) by L127 , NAT_1:13;
L129: D30 in ( dom C17 ) by L128 , FINSEQ_3:25;
set D31 = ( R1 + D27 );
L130: (( 1 + ( 0 ) ) <= ( R1 + D27 ) & D31 < ( ( ( len R19 ) - D27 ) + D27 )) by L120 , L127 , XREAL_1:6 , XREAL_1:7;
consider R31 being  strict LTLnode over R30, R36 being  strict LTLnode over R30 such that L131: R31 = ( R19 . D31 ) and L132: R36 = ( R19 . ( D31 + 1 ) ) and L133: R36 is_succ_of R31 by L130 , L114 , L111;
L134: R36 = ( R19 . ( D27 + D30 ) ) by L132
.= ( C17 . D30 ) by L125 , L118 , L129 , FINSEQ_1:def 7;
L135: R1 in ( dom C17 ) by L127 , FINSEQ_3:25;
L136: R31 = ( C17 . R1 ) by L135 , L125 , L118 , L131 , FINSEQ_1:def 7;
thus L137: thesis by L136 , L133 , L134;
end;
L138: C17 is_Finseq_for R30 by L126 , L111;
L139: ( len C17 ) in ( dom C17 ) by L122 , L120 , FINSEQ_3:25;
L140: ( C17 . ( len C17 ) ) = ( R19 . ( ( len D29 ) + ( len C17 ) ) ) by L139 , L118 , FINSEQ_1:def 7
.= ( R19 . ( len R19 ) ) by L118 , FINSEQ_1:22;
thus L141: thesis by L140 , L122 , L118 , L120 , L124 , L138;
end;
definition
let R30 being LTL-formula;
let R32 being  strict LTLnode over R30;
let R33 being  strict LTLnode over R30;
pred R33 is_next_of R32
means
:L142: (R32 is  elementary & R33 is  elementary & (ex R19 being FinSequence st (1 <= ( len R19 ) & R19 is_Finseq_for R30 & ( R19 . 1 ) = ( 'X' R32 ) & ( R19 . ( len R19 ) ) = R33)))
;end;
definition
let R30 being LTL-formula;
let C18 being (Subset of ( Subformulae R30 ));
func CastLTL C18 -> (Subset of ( LTL_WFF )) equals 
C18;
correctness by MODELC_2:47;
end;
definition
let R30 being LTL-formula;
let R31 being  strict LTLnode over R30;
func * R31 -> (Subset of ( LTL_WFF )) equals 
( ( (the LTLold of R31) \/ (the LTLnew of R31) ) \/ ( 'X' ( CastLTL (the LTLnext of R31) ) ) );
correctness
proof
set D32 = (the LTLnew of R31);
set D33 = (the LTLold of R31);
L145: (D33 is (Subset of ( LTL_WFF )) & D32 is (Subset of ( LTL_WFF ))) by MODELC_2:47;
L146: ( D33 \/ D32 ) c= ( LTL_WFF ) by L145 , XBOOLE_1:8;
thus L147: thesis by L146 , XBOOLE_1:8;
end;
end;
L149: (for R26 being LTL-formula holds (for R30 being LTL-formula holds (for R31 being  strict LTLnode over R30 holds ((R26 in (the LTLnew of R31) & (R26 is  atomic or R26 is  negative)) implies ( * R31 ) = ( * ( SuccNode1 (R26 , R31) ) )))))
proof
let R26 being LTL-formula;
let R30 being LTL-formula;
let R31 being  strict LTLnode over R30;
set D34 = ( SuccNode1 (R26 , R31) );
assume that
L150: R26 in (the LTLnew of R31)
and
L151: (R26 is  atomic or R26 is  negative);
L152: ((not R26 is  next) & (not R26 is  Until)) by L151 , MODELC_2:78;
set D35 = (the LTLnext of R31);
set D36 = (the LTLnext of D34);
L153: D36 = ( D35 \/ ( LTLNext R26 ) ) by L150 , L75;
set D37 = (the LTLnew of R31);
set D38 = (the LTLnew of D34);
set D39 = (the LTLold of R31);
set D40 = (the LTLold of D34);
L154: D40 = ( D39 \/ { R26 } ) by L150 , L75;
L155: (not R26 is  Release) by L151 , MODELC_2:78;
L156: ((not R26 is  conjunctive) & (not R26 is  disjunctive)) by L151 , MODELC_2:78;
L157: ( LTLNew1 R26 ) = ( {} ) by L156 , L152 , L155 , L69;
L158: D38 = ( ( D37 \ { R26 } ) \/ ( ( LTLNew1 R26 ) \ D39 ) ) by L150 , L75;
L159: (for R10 being set holds (R10 in ( D40 \/ D38 ) implies R10 in ( D39 \/ D37 )))
proof
let R10 being set;
assume L160: R10 in ( D40 \/ D38 );
L161: (R10 in D40 implies (R10 in D39 or R10 in { R26 })) by L154 , XBOOLE_0:def 3;
L162: (R10 in D40 implies (R10 in D39 or R10 in D37)) by L161 , L150 , TARSKI:def 1;
L163: (R10 in D38 implies (R10 in D37 & (not R10 in { R26 }))) by L157 , L158 , XBOOLE_0:def 5;
thus L164: thesis by L163 , L160 , L162 , XBOOLE_0:def 3;
end;
L165: (for R10 being set holds (R10 in ( D39 \/ D37 ) implies R10 in ( D40 \/ D38 )))
proof
let R10 being set;
assume L166: R10 in ( D39 \/ D37 );
L167: (R10 in D37 implies (((not R10 in { R26 }) & R10 in D37) or (R10 in { R26 } & R10 in D37)));
L168: (R10 in D37 implies (R10 in ( D37 \ { R26 } ) or R10 in ( D39 \/ { R26 } ))) by L167 , XBOOLE_0:def 3 , XBOOLE_0:def 5;
L169: (R10 in D39 implies R10 in D40) by L154 , XBOOLE_0:def 3;
thus L170: thesis by L169 , L157 , L154 , L158 , L166 , L168 , XBOOLE_0:def 3;
end;
L171: ( LTLNext R26 ) = ( {} ) by L156 , L152 , L155 , L71;
thus L172: thesis by L171 , L153 , L159 , L165 , TARSKI:1;
end;
L173: (for R26 being LTL-formula holds (for R30 being LTL-formula holds (for R31 being  strict LTLnode over R30 holds (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds ((R26 in (the LTLnew of R31) & (R26 is  conjunctive or R26 is  next)) implies (R37 |= ( * R31 ) iff R37 |= ( * ( SuccNode1 (R26 , R31) ) )))))))
proof
let R26 being LTL-formula;
let R30 being LTL-formula;
let R31 being  strict LTLnode over R30;
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
assume that
L174: R26 in (the LTLnew of R31)
and
L175: (R26 is  conjunctive or R26 is  next);
set D41 = (the LTLnext of R31);
set D42 = (the LTLnew of R31);
set D43 = (the LTLold of R31);
set D44 = ( SuccNode1 (R26 , R31) );
set D45 = (the LTLold of D44);
set D46 = (the LTLnew of D44);
set D47 = (the LTLnext of D44);
set D48 = ( 'X' ( CastLTL D47 ) );
set D49 = ( 'X' ( CastLTL D41 ) );
L176: R26 in ( * R31 ) by L174 , L1;
L177: (R37 |= ( * R31 ) implies R37 |= ( * D44 ))
proof
assume L178: R37 |= ( * R31 );
L179: R37 |= R26 by L178 , L176 , MODELC_2:def 64;
L180: (for B5 being LTL-formula holds (B5 in ( * D44 ) implies R37 |= B5))
proof
let C19 being LTL-formula;
assume that
L181: C19 in ( * D44 );
L182:
now
per cases  by L181 , L1;
suppose L183: C19 in D45;

L184: C19 in ( D43 \/ { R26 } ) by L183 , L174 , L75;
L185:
now
per cases  by L184 , XBOOLE_0:def 3;
suppose L186: C19 in D43;

L187: C19 in ( * R31 ) by L186 , L1;
thus L188: thesis by L187 , L178 , MODELC_2:def 64;
end;
suppose L189: C19 in { R26 };

L190: C19 in ( * R31 ) by L189 , L176 , TARSKI:def 1;
thus L191: thesis by L190 , L178 , MODELC_2:def 64;
end;
end;
thus L193: thesis by L185;
end;
suppose L194: C19 in D46;

L195: C19 in ( ( D42 \ { R26 } ) \/ ( ( LTLNew1 R26 ) \ D43 ) ) by L194 , L174 , L75;
L196:
now
per cases  by L195 , L4;
suppose L197: C19 in D42;

L198: C19 in ( ( D43 \/ D42 ) \/ D49 ) by L197 , L1;
thus L199: thesis by L198 , L178 , MODELC_2:def 64;
end;
suppose L200: C19 in ( LTLNew1 R26 );

L201:
now
per cases  by L175;
suppose L202: R26 is  conjunctive;

L203: C19 in { ( the_left_argument_of R26 ) , ( the_right_argument_of R26 ) } by L202 , L200 , L69;
L204: (C19 = ( the_left_argument_of R26 ) or C19 = ( the_right_argument_of R26 )) by L203 , TARSKI:def 2;
L205: R26 = ( ( the_left_argument_of R26 ) '&' ( the_right_argument_of R26 ) ) by L202 , MODELC_2:6;
thus L206: thesis by L205 , L179 , L204 , MODELC_2:65;
end;
suppose L207: R26 is  next;

thus L208: thesis by L207 , L200 , L69;
end;
end;
thus L210: thesis by L201;
end;
end;
thus L212: thesis by L196;
end;
suppose L213: C19 in D48;

set D50 = ( CastLTL D47 );
consider R24 being LTL-formula such that L214: C19 = R24 and L215: (ex R25 being LTL-formula st (R25 in D50 & R24 = ( 'X' R25 ))) by L213;
consider R25 being LTL-formula such that L216: R25 in D50 and L217: R24 = ( 'X' R25 ) by L215;
L218: D50 = ( D41 \/ ( LTLNext R26 ) ) by L174 , L75;
L219:
now
per cases  by L218 , L216 , XBOOLE_0:def 3;
suppose L220: R25 in D41;

L221: C19 in D49 by L220 , L214 , L217;
L222: C19 in ( ( D43 \/ D42 ) \/ D49 ) by L221 , L1;
thus L223: thesis by L222 , L178 , MODELC_2:def 64;
end;
suppose L224: R25 in ( LTLNext R26 );

L225:
now
per cases  by L175;
suppose L226: R26 is  next;

L227: R25 in { ( the_argument_of R26 ) } by L226 , L224 , L71;
L228: R25 = ( the_argument_of R26 ) by L227 , TARSKI:def 1;
thus L229: thesis by L228 , L179 , L214 , L217 , L226 , MODELC_2:5;
end;
suppose L230: R26 is  conjunctive;

thus L231: thesis by L230 , L224 , L71;
end;
end;
thus L233: thesis by L225;
end;
end;
thus L235: thesis by L219;
end;
end;
thus L237: thesis by L182;
end;
thus L238: thesis by L180 , MODELC_2:def 64;
end;
L239: (R37 |= ( * D44 ) implies R37 |= ( * R31 ))
proof
assume L240: R37 |= ( * D44 );
L241: (for B6 being LTL-formula holds (B6 in ( * R31 ) implies R37 |= B6))
proof
let C20 being LTL-formula;
assume that
L242: C20 in ( * R31 );
L243:
now
per cases  by L242 , L1;
suppose L244: C20 in D43;

L245: C20 in ( D43 \/ { R26 } ) by L244 , XBOOLE_0:def 3;
L246: C20 in D45 by L245 , L174 , L75;
L247: C20 in ( * D44 ) by L246 , L1;
thus L248: thesis by L247 , L240 , MODELC_2:def 64;
end;
suppose L249: C20 in D42;

L250:
now
per cases ;
suppose L251: C20 = R26;

L252: C20 in { R26 } by L251 , TARSKI:def 1;
L253: C20 in ( D43 \/ { R26 } ) by L252 , XBOOLE_0:def 3;
L254: C20 in D45 by L253 , L174 , L75;
L255: C20 in ( * D44 ) by L254 , L1;
thus L256: thesis by L255 , L240 , MODELC_2:def 64;
end;
suppose L257: (not C20 = R26);

L258: (not C20 in { R26 }) by L257 , TARSKI:def 1;
L259: C20 in ( D42 \ { R26 } ) by L258 , L249 , XBOOLE_0:def 5;
L260: C20 in ( ( D42 \ { R26 } ) \/ ( ( LTLNew1 R26 ) \ D43 ) ) by L259 , XBOOLE_0:def 3;
L261: C20 in D46 by L260 , L174 , L75;
L262: C20 in ( * D44 ) by L261 , L1;
thus L263: thesis by L262 , L240 , MODELC_2:def 64;
end;
end;
thus L265: thesis by L250;
end;
suppose L266: C20 in D49;

set D51 = ( D41 \/ ( LTLNext R26 ) );
L267: D47 = D51 by L174 , L75;
reconsider D52 = D51 as (Subset of ( Subformulae R30 )) by L267;
set D53 = ( CastLTL D52 );
set D54 = ( CastLTL D41 );
consider R24 being LTL-formula such that L268: C20 = R24 and L269: (ex R25 being LTL-formula st (R25 in D54 & R24 = ( 'X' R25 ))) by L266;
consider R25 being LTL-formula such that L270: R25 in D54 and L271: R24 = ( 'X' R25 ) by L269;
L272: R25 in D52 by L270 , XBOOLE_0:def 3;
L273: C20 in ( 'X' D53 ) by L272 , L268 , L271;
L274: C20 in D48 by L273 , L174 , L75;
L275: C20 in ( * D44 ) by L274 , L1;
thus L276: thesis by L275 , L240 , MODELC_2:def 64;
end;
end;
thus L278: thesis by L243;
end;
thus L279: thesis by L241 , MODELC_2:def 64;
end;
thus L280: thesis by L239 , L177;
end;
theorem
L281: (for R26 being LTL-formula holds (for R30 being LTL-formula holds (for R31 being  strict LTLnode over R30 holds (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds ((R26 in (the LTLnew of R31) & (R26 is  atomic or R26 is  negative or R26 is  conjunctive or R26 is  next)) implies (R37 |= ( * R31 ) iff R37 |= ( * ( SuccNode1 (R26 , R31) ) ))))))) by L149 , L173;
L282: (for R26 being LTL-formula holds (for R30 being LTL-formula holds (for R31 being  strict LTLnode over R30 holds (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds ((R26 in (the LTLnew of R31) & R26 is  disjunctive) implies (R37 |= ( * R31 ) iff (R37 |= ( * ( SuccNode1 (R26 , R31) ) ) or R37 |= ( * ( SuccNode2 (R26 , R31) ) ))))))))
proof
let R26 being LTL-formula;
let R30 being LTL-formula;
let R31 being  strict LTLnode over R30;
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
assume that
L283: R26 in (the LTLnew of R31)
and
L284: R26 is  disjunctive;
set D55 = (the LTLnew of R31);
set D56 = (the LTLold of R31);
set D57 = ( SuccNode2 (R26 , R31) );
set D58 = (the LTLnext of R31);
set D59 = ( SuccNode1 (R26 , R31) );
L285: R26 in ( * R31 ) by L283 , L1;
set D60 = (the LTLnext of D59);
L286: ( LTLNext R26 ) = ( {} ) by L284 , L71;
L287: D60 = ( D58 \/ ( {} ) ) by L286 , L283 , L75
.= D58;
set D61 = ( the_left_argument_of R26 );
set D62 = ( 'X' ( CastLTL D60 ) );
set D63 = (the LTLnew of D59);
set D64 = (the LTLold of D59);
L288: D64 = ( D56 \/ { R26 } ) by L283 , L75;
L289: ( LTLNew1 R26 ) = { D61 } by L284 , L69;
L290: D63 = ( ( D55 \ { R26 } ) \/ ( { D61 } \ D56 ) ) by L289 , L283 , L75;
L291: (for R22 being LTL-formula holds (R22 in ( * D59 ) implies (R22 in ( * R31 ) or R22 = D61)))
proof
let R22 being LTL-formula;
assume L292: R22 in ( * D59 );
L293:
now
per cases  by L292 , L1;
suppose L294: R22 in D64;

L295: (R22 in D56 or R22 in { R26 }) by L294 , L288 , XBOOLE_0:def 3;
thus L296: thesis by L295 , L285 , L1 , TARSKI:def 1;
end;
suppose L297: R22 in D63;

L298: (R22 in ( D55 \ { R26 } ) or R22 in ( { D61 } \ D56 )) by L297 , L290 , XBOOLE_0:def 3;
L299: (R22 in D55 or R22 in { D61 }) by L298 , XBOOLE_0:def 5;
thus L300: thesis by L299 , L1 , TARSKI:def 1;
end;
suppose L301: R22 in D62;

thus L302: thesis by L301 , L287 , L1;
end;
end;
thus L304: thesis by L293;
end;
set D65 = ( 'X' ( CastLTL D58 ) );
set D66 = (the LTLnext of D57);
set D67 = ( 'X' ( CastLTL D66 ) );
set D68 = (the LTLold of D57);
L305: D68 = ( D56 \/ { R26 } ) by L283 , L84;
set D69 = ( the_right_argument_of R26 );
set D70 = (the LTLnew of D57);
L306: ( LTLNew2 R26 ) = { D69 } by L284 , L70;
L307: D70 = ( ( D55 \ { R26 } ) \/ ( { D69 } \ D56 ) ) by L306 , L283 , L84;
L308: D66 = D58 by L283 , L84;
L309: (for R22 being LTL-formula holds (R22 in ( * D57 ) implies (R22 in ( * R31 ) or R22 = D69)))
proof
let R22 being LTL-formula;
assume L310: R22 in ( * D57 );
L311:
now
per cases  by L310 , L1;
suppose L312: R22 in D68;

L313: (R22 in D56 or R22 in { R26 }) by L312 , L305 , XBOOLE_0:def 3;
thus L314: thesis by L313 , L285 , L1 , TARSKI:def 1;
end;
suppose L315: R22 in D70;

L316: (R22 in ( D55 \ { R26 } ) or R22 in ( { D69 } \ D56 )) by L315 , L307 , XBOOLE_0:def 3;
L317: (R22 in D55 or R22 in { D69 }) by L316 , XBOOLE_0:def 5;
thus L318: thesis by L317 , L1 , TARSKI:def 1;
end;
suppose L319: R22 in D67;

thus L320: thesis by L319 , L308 , L1;
end;
end;
thus L322: thesis by L311;
end;
L323: R26 = ( D61 'or' D69 ) by L284 , MODELC_2:7;
L324: (R37 |= R26 iff (R37 |= D61 or R37 |= D69)) by L323 , MODELC_2:66;
L325: (R37 |= ( * R31 ) implies (R37 |= ( * D59 ) or R37 |= ( * D57 )))
proof
assume L326: R37 |= ( * R31 );
L327:
now
per cases  by L285 , L324 , L326 , MODELC_2:def 64;
suppose L328: R37 |= D61;

L329: (for R22 being LTL-formula holds (R22 in ( * D59 ) implies R37 |= R22))
proof
let R22 being LTL-formula;
assume L330: R22 in ( * D59 );
L331: (R22 in ( * R31 ) or R22 = D61) by L330 , L291;
thus L332: thesis by L331 , L326 , L328 , MODELC_2:def 64;
end;
thus L333: thesis by L329 , MODELC_2:def 64;
end;
suppose L334: R37 |= D69;

L335: (for R22 being LTL-formula holds (R22 in ( * D57 ) implies R37 |= R22))
proof
let R22 being LTL-formula;
assume L336: R22 in ( * D57 );
L337: (R22 in ( * R31 ) or R22 = D69) by L336 , L309;
thus L338: thesis by L337 , L326 , L334 , MODELC_2:def 64;
end;
thus L339: thesis by L335 , MODELC_2:def 64;
end;
end;
thus L341: thesis by L327;
end;
L342: (for R22 being LTL-formula holds (R22 in ( * R31 ) implies (R22 in ( * D59 ) & R22 in ( * D57 ))))
proof
let R22 being LTL-formula;
assume L343: R22 in ( * R31 );
L344:
now
per cases  by L343 , L1;
suppose L345: R22 in D56;

L346: (R22 in D64 & R22 in D68) by L345 , L288 , L305 , XBOOLE_0:def 3;
thus L347: thesis by L346 , L1;
end;
suppose L348: R22 in D55;

L349:
now
per cases ;
suppose L350: R22 = R26;

L351: R22 in { R26 } by L350 , TARSKI:def 1;
L352: (R22 in D64 & R22 in D68) by L351 , L288 , L305 , XBOOLE_0:def 3;
thus L353: thesis by L352 , L1;
end;
suppose L354: (not R22 = R26);

L355: (not R22 in { R26 }) by L354 , TARSKI:def 1;
L356: R22 in ( D55 \ { R26 } ) by L355 , L348 , XBOOLE_0:def 5;
L357: (R22 in D63 & R22 in D70) by L356 , L290 , L307 , XBOOLE_0:def 3;
thus L358: thesis by L357 , L1;
end;
end;
thus L360: thesis by L349;
end;
suppose L361: R22 in D65;

L362: R22 in D67 by L361 , L283 , L84;
thus L363: thesis by L362 , L287 , L361 , L1;
end;
end;
thus L365: thesis by L344;
end;
L366: ((R37 |= ( * D59 ) or R37 |= ( * D57 )) implies R37 |= ( * R31 ))
proof
assume L367: (R37 |= ( * D59 ) or R37 |= ( * D57 ));
L368: (for R22 being LTL-formula holds (R22 in ( * R31 ) implies R37 |= R22))
proof
let R22 being LTL-formula;
assume L369: R22 in ( * R31 );
L370: R22 in ( * D57 ) by L369 , L342;
L371: R22 in ( * D59 ) by L342 , L369;
L372:
now
per cases  by L367;
suppose L373: R37 |= ( * D59 );

thus L374: thesis by L373 , L371 , MODELC_2:def 64;
end;
suppose L375: R37 |= ( * D57 );

thus L376: thesis by L375 , L370 , MODELC_2:def 64;
end;
end;
thus L378: thesis by L372;
end;
thus L379: thesis by L368 , MODELC_2:def 64;
end;
thus L380: thesis by L366 , L325;
end;
L381: (for R26 being LTL-formula holds (for R30 being LTL-formula holds (for R31 being  strict LTLnode over R30 holds (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds ((R26 in (the LTLnew of R31) & R26 is  Until) implies (R37 |= ( * R31 ) iff (R37 |= ( * ( SuccNode1 (R26 , R31) ) ) or R37 |= ( * ( SuccNode2 (R26 , R31) ) ))))))))
proof
let R26 being LTL-formula;
let R30 being LTL-formula;
let R31 being  strict LTLnode over R30;
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
assume that
L382: R26 in (the LTLnew of R31)
and
L383: R26 is  Until;
set D71 = (the LTLnext of R31);
set D72 = ( SuccNode1 (R26 , R31) );
L384: R26 in ( * R31 ) by L382 , L1;
set D73 = (the LTLnext of D72);
L385: ( LTLNext R26 ) = { R26 } by L383 , L71;
L386: D73 = ( D71 \/ { R26 } ) by L385 , L382 , L75;
set D74 = (the LTLnew of R31);
set D75 = (the LTLold of R31);
set D76 = ( SuccNode2 (R26 , R31) );
set D77 = ( the_right_argument_of R26 );
set D78 = (the LTLnew of D76);
L387: ( LTLNew2 R26 ) = { D77 } by L383 , L70;
L388: D78 = ( ( D74 \ { R26 } ) \/ ( { D77 } \ D75 ) ) by L387 , L382 , L84;
set D79 = ( the_left_argument_of R26 );
set D80 = ( 'X' ( CastLTL D71 ) );
set D81 = ( 'X' ( CastLTL D73 ) );
set D82 = (the LTLnew of D72);
set D83 = (the LTLold of D72);
L389: D83 = ( D75 \/ { R26 } ) by L382 , L75;
L390: ( LTLNew1 R26 ) = { D79 } by L383 , L69;
L391: D82 = ( ( D74 \ { R26 } ) \/ ( { D79 } \ D75 ) ) by L390 , L382 , L75;
L392: (for R22 being LTL-formula holds (R22 in ( * D72 ) implies (R22 in ( * R31 ) or R22 = D79 or R22 = ( 'X' R26 ))))
proof
let R22 being LTL-formula;
assume L393: R22 in ( * D72 );
L394:
now
per cases  by L393 , L1;
suppose L395: R22 in D83;

L396: (R22 in D75 or R22 in { R26 }) by L395 , L389 , XBOOLE_0:def 3;
thus L397: thesis by L396 , L384 , L1 , TARSKI:def 1;
end;
suppose L398: R22 in D82;

L399: (R22 in ( D74 \ { R26 } ) or R22 in ( { D79 } \ D75 )) by L398 , L391 , XBOOLE_0:def 3;
L400: (R22 in D74 or R22 in { D79 }) by L399 , XBOOLE_0:def 5;
thus L401: thesis by L400 , L1 , TARSKI:def 1;
end;
suppose L402: R22 in D81;

consider R24 being LTL-formula such that L403: R22 = R24 and L404: (ex R25 being LTL-formula st (R25 in ( CastLTL D73 ) & R24 = ( 'X' R25 ))) by L402;
consider R25 being LTL-formula such that L405: R25 in D73 and L406: R24 = ( 'X' R25 ) by L404;
L407: (R25 in D71 or R25 in { R26 }) by L386 , L405 , XBOOLE_0:def 3;
L408:
now
per cases  by L407 , TARSKI:def 1;
suppose L409: R25 in D71;

L410: R22 in D80 by L409 , L403 , L406;
thus L411: thesis by L410 , L1;
end;
suppose L412: R25 = R26;

thus L413: thesis by L412 , L403 , L406;
end;
end;
thus L415: thesis by L408;
end;
end;
thus L417: thesis by L394;
end;
set D84 = (the LTLnext of D76);
set D85 = ( 'X' ( CastLTL D84 ) );
set D86 = (the LTLold of D76);
L418: D86 = ( D75 \/ { R26 } ) by L382 , L84;
L419: D84 = D71 by L382 , L84;
L420: (for R22 being LTL-formula holds (R22 in ( * D76 ) implies (R22 in ( * R31 ) or R22 = D77)))
proof
let R22 being LTL-formula;
assume L421: R22 in ( * D76 );
L422:
now
per cases  by L421 , L1;
suppose L423: R22 in D86;

L424: (R22 in D75 or R22 in { R26 }) by L423 , L418 , XBOOLE_0:def 3;
thus L425: thesis by L424 , L384 , L1 , TARSKI:def 1;
end;
suppose L426: R22 in D78;

L427: (R22 in ( D74 \ { R26 } ) or R22 in ( { D77 } \ D75 )) by L426 , L388 , XBOOLE_0:def 3;
L428: (R22 in D74 or R22 in { D77 }) by L427 , XBOOLE_0:def 5;
thus L429: thesis by L428 , L1 , TARSKI:def 1;
end;
suppose L430: R22 in D85;

thus L431: thesis by L430 , L419 , L1;
end;
end;
thus L433: thesis by L422;
end;
L434: R26 = ( D79 'U' D77 ) by L383 , MODELC_2:8;
L435: (R37 |= R26 iff R37 |= ( D77 'or' ( D79 '&' ( 'X' R26 ) ) )) by L434 , MODELC_2:75;
L436: (R37 |= R26 iff (R37 |= D77 or R37 |= ( D79 '&' ( 'X' R26 ) ))) by L435 , MODELC_2:66;
L437: (R37 |= ( * R31 ) implies (R37 |= ( * D72 ) or R37 |= ( * D76 )))
proof
assume L438: R37 |= ( * R31 );
L439:
now
per cases  by L384 , L436 , L438 , MODELC_2:65 , MODELC_2:def 64;
suppose L440: (R37 |= D79 & R37 |= ( 'X' R26 ));

L441: (for R22 being LTL-formula holds (R22 in ( * D72 ) implies R37 |= R22))
proof
let R22 being LTL-formula;
assume L442: R22 in ( * D72 );
L443: (R22 in ( * R31 ) or R22 = D79 or R22 = ( 'X' R26 )) by L442 , L392;
thus L444: thesis by L443 , L438 , L440 , MODELC_2:def 64;
end;
thus L445: thesis by L441 , MODELC_2:def 64;
end;
suppose L446: R37 |= D77;

L447: (for R22 being LTL-formula holds (R22 in ( * D76 ) implies R37 |= R22))
proof
let R22 being LTL-formula;
assume L448: R22 in ( * D76 );
L449: (R22 in ( * R31 ) or R22 = D77) by L448 , L420;
thus L450: thesis by L449 , L438 , L446 , MODELC_2:def 64;
end;
thus L451: thesis by L447 , MODELC_2:def 64;
end;
end;
thus L453: thesis by L439;
end;
L454: (for R22 being LTL-formula holds (R22 in ( * R31 ) implies (R22 in ( * D72 ) & R22 in ( * D76 ))))
proof
let R22 being LTL-formula;
assume L455: R22 in ( * R31 );
L456:
now
per cases  by L455 , L1;
suppose L457: R22 in D75;

L458: (R22 in D83 & R22 in D86) by L457 , L389 , L418 , XBOOLE_0:def 3;
thus L459: thesis by L458 , L1;
end;
suppose L460: R22 in D74;

L461:
now
per cases ;
suppose L462: R22 = R26;

L463: R22 in { R26 } by L462 , TARSKI:def 1;
L464: (R22 in D83 & R22 in D86) by L463 , L389 , L418 , XBOOLE_0:def 3;
thus L465: thesis by L464 , L1;
end;
suppose L466: R22 <> R26;

L467: (not R22 in { R26 }) by L466 , TARSKI:def 1;
L468: R22 in ( D74 \ { R26 } ) by L467 , L460 , XBOOLE_0:def 5;
L469: (R22 in D82 & R22 in D78) by L468 , L391 , L388 , XBOOLE_0:def 3;
thus L470: thesis by L469 , L1;
end;
end;
thus L472: thesis by L461;
end;
suppose L473: R22 in D80;

consider R24 being LTL-formula such that L474: R22 = R24 and L475: (ex R25 being LTL-formula st (R25 in ( CastLTL D71 ) & R24 = ( 'X' R25 ))) by L473;
consider R25 being LTL-formula such that L476: R25 in D71 and L477: R24 = ( 'X' R25 ) by L475;
L478: R25 in D73 by L386 , L476 , XBOOLE_0:def 3;
L479: R22 in D81 by L478 , L474 , L477;
L480: R22 in D85 by L419 , L474 , L476 , L477;
thus L481: thesis by L480 , L479 , L1;
end;
end;
thus L483: thesis by L456;
end;
L484: ((R37 |= ( * D72 ) or R37 |= ( * D76 )) implies R37 |= ( * R31 ))
proof
assume L485: (R37 |= ( * D72 ) or R37 |= ( * D76 ));
L486: (for R22 being LTL-formula holds (R22 in ( * R31 ) implies R37 |= R22))
proof
let R22 being LTL-formula;
assume L487: R22 in ( * R31 );
L488: R22 in ( * D76 ) by L487 , L454;
L489: R22 in ( * D72 ) by L454 , L487;
L490:
now
per cases  by L485;
suppose L491: R37 |= ( * D72 );

thus L492: thesis by L491 , L489 , MODELC_2:def 64;
end;
suppose L493: R37 |= ( * D76 );

thus L494: thesis by L493 , L488 , MODELC_2:def 64;
end;
end;
thus L496: thesis by L490;
end;
thus L497: thesis by L486 , MODELC_2:def 64;
end;
thus L498: thesis by L484 , L437;
end;
L499: (for R26 being LTL-formula holds (for R30 being LTL-formula holds (for R31 being  strict LTLnode over R30 holds (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds ((R26 in (the LTLnew of R31) & R26 is  Release) implies (R37 |= ( * R31 ) iff (R37 |= ( * ( SuccNode1 (R26 , R31) ) ) or R37 |= ( * ( SuccNode2 (R26 , R31) ) ))))))))
proof
let R26 being LTL-formula;
let R30 being LTL-formula;
let R31 being  strict LTLnode over R30;
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
assume that
L500: R26 in (the LTLnew of R31)
and
L501: R26 is  Release;
set D87 = (the LTLnext of R31);
set D88 = ( SuccNode1 (R26 , R31) );
L502: R26 in ( * R31 ) by L500 , L1;
set D89 = (the LTLnext of D88);
L503: ( LTLNext R26 ) = { R26 } by L501 , L71;
L504: D89 = ( D87 \/ { R26 } ) by L503 , L500 , L75;
set D90 = ( the_right_argument_of R26 );
set D91 = (the LTLnew of R31);
set D92 = (the LTLold of R31);
set D93 = ( SuccNode2 (R26 , R31) );
set D94 = ( the_left_argument_of R26 );
set D95 = (the LTLnew of D93);
L505: ( LTLNew2 R26 ) = { D94 , D90 } by L501 , L70;
L506: D95 = ( ( D91 \ { R26 } ) \/ ( { D94 , D90 } \ D92 ) ) by L505 , L500 , L84;
set D96 = ( 'X' ( CastLTL D87 ) );
set D97 = ( 'X' ( CastLTL D89 ) );
set D98 = (the LTLnew of D88);
set D99 = (the LTLold of D88);
L507: D99 = ( D92 \/ { R26 } ) by L500 , L75;
L508: ( LTLNew1 R26 ) = { D90 } by L501 , L69;
L509: D98 = ( ( D91 \ { R26 } ) \/ ( { D90 } \ D92 ) ) by L508 , L500 , L75;
L510: (for R22 being LTL-formula holds (R22 in ( * D88 ) implies (R22 in ( * R31 ) or R22 = D90 or R22 = ( 'X' R26 ))))
proof
let R22 being LTL-formula;
assume L511: R22 in ( * D88 );
L512:
now
per cases  by L511 , L1;
suppose L513: R22 in D99;

L514: (R22 in D92 or R22 in { R26 }) by L513 , L507 , XBOOLE_0:def 3;
thus L515: thesis by L514 , L502 , L1 , TARSKI:def 1;
end;
suppose L516: R22 in D98;

L517: (R22 in ( D91 \ { R26 } ) or R22 in ( { D90 } \ D92 )) by L516 , L509 , XBOOLE_0:def 3;
L518: (R22 in D91 or R22 in { D90 }) by L517 , XBOOLE_0:def 5;
thus L519: thesis by L518 , L1 , TARSKI:def 1;
end;
suppose L520: R22 in D97;

consider R24 being LTL-formula such that L521: R22 = R24 and L522: (ex R25 being LTL-formula st (R25 in ( CastLTL D89 ) & R24 = ( 'X' R25 ))) by L520;
consider R25 being LTL-formula such that L523: R25 in D89 and L524: R24 = ( 'X' R25 ) by L522;
L525: (R25 in D87 or R25 in { R26 }) by L504 , L523 , XBOOLE_0:def 3;
L526:
now
per cases  by L525 , TARSKI:def 1;
suppose L527: R25 in D87;

L528: R22 in D96 by L527 , L521 , L524;
thus L529: thesis by L528 , L1;
end;
suppose L530: R25 = R26;

thus L531: thesis by L530 , L521 , L524;
end;
end;
thus L533: thesis by L526;
end;
end;
thus L535: thesis by L512;
end;
set D100 = (the LTLnext of D93);
set D101 = ( 'X' ( CastLTL D100 ) );
set D102 = (the LTLold of D93);
L536: D102 = ( D92 \/ { R26 } ) by L500 , L84;
L537: D100 = D87 by L500 , L84;
L538: (for R22 being LTL-formula holds (R22 in ( * D93 ) implies (R22 in ( * R31 ) or R22 = D94 or R22 = D90)))
proof
let R22 being LTL-formula;
assume L539: R22 in ( * D93 );
L540:
now
per cases  by L539 , L1;
suppose L541: R22 in D102;

L542: (R22 in D92 or R22 in { R26 }) by L541 , L536 , XBOOLE_0:def 3;
thus L543: thesis by L542 , L502 , L1 , TARSKI:def 1;
end;
suppose L544: R22 in D95;

L545: (R22 in ( D91 \ { R26 } ) or R22 in ( { D94 , D90 } \ D92 )) by L544 , L506 , XBOOLE_0:def 3;
L546: (R22 in D91 or R22 in { D94 , D90 }) by L545 , XBOOLE_0:def 5;
thus L547: thesis by L546 , L1 , TARSKI:def 2;
end;
suppose L548: R22 in D101;

thus L549: thesis by L548 , L537 , L1;
end;
end;
thus L551: thesis by L540;
end;
L552: R26 = ( D94 'R' D90 ) by L501 , MODELC_2:9;
L553: (R37 |= R26 iff R37 |= ( ( D94 '&' D90 ) 'or' ( D90 '&' ( 'X' R26 ) ) )) by L552 , MODELC_2:76;
L554: (R37 |= R26 iff (R37 |= ( D94 '&' D90 ) or R37 |= ( D90 '&' ( 'X' R26 ) ))) by L553 , MODELC_2:66;
L555: (R37 |= ( * R31 ) implies (R37 |= ( * D88 ) or R37 |= ( * D93 )))
proof
assume L556: R37 |= ( * R31 );
L557:
now
per cases  by L502 , L554 , L556 , MODELC_2:65 , MODELC_2:def 64;
suppose L558: (R37 |= D90 & R37 |= ( 'X' R26 ));

L559: (for R22 being LTL-formula holds (R22 in ( * D88 ) implies R37 |= R22))
proof
let R22 being LTL-formula;
assume L560: R22 in ( * D88 );
L561: (R22 in ( * R31 ) or R22 = D90 or R22 = ( 'X' R26 )) by L560 , L510;
thus L562: thesis by L561 , L556 , L558 , MODELC_2:def 64;
end;
thus L563: thesis by L559 , MODELC_2:def 64;
end;
suppose L564: (R37 |= D94 & R37 |= D90);

L565: (for R22 being LTL-formula holds (R22 in ( * D93 ) implies R37 |= R22))
proof
let R22 being LTL-formula;
assume L566: R22 in ( * D93 );
L567: (R22 in ( * R31 ) or R22 = D94 or R22 = D90) by L566 , L538;
thus L568: thesis by L567 , L556 , L564 , MODELC_2:def 64;
end;
thus L569: thesis by L565 , MODELC_2:def 64;
end;
end;
thus L571: thesis by L557;
end;
L572: (for R22 being LTL-formula holds (R22 in ( * R31 ) implies (R22 in ( * D88 ) & R22 in ( * D93 ))))
proof
let R22 being LTL-formula;
assume L573: R22 in ( * R31 );
L574:
now
per cases  by L573 , L1;
suppose L575: R22 in D92;

L576: (R22 in D99 & R22 in D102) by L575 , L507 , L536 , XBOOLE_0:def 3;
thus L577: thesis by L576 , L1;
end;
suppose L578: R22 in D91;

L579:
now
per cases ;
suppose L580: R22 = R26;

L581: R22 in { R26 } by L580 , TARSKI:def 1;
L582: (R22 in D99 & R22 in D102) by L581 , L507 , L536 , XBOOLE_0:def 3;
thus L583: thesis by L582 , L1;
end;
suppose L584: (not R22 = R26);

L585: (not R22 in { R26 }) by L584 , TARSKI:def 1;
L586: R22 in ( D91 \ { R26 } ) by L585 , L578 , XBOOLE_0:def 5;
L587: (R22 in D98 & R22 in D95) by L586 , L509 , L506 , XBOOLE_0:def 3;
thus L588: thesis by L587 , L1;
end;
end;
thus L590: thesis by L579;
end;
suppose L591: R22 in D96;

consider R24 being LTL-formula such that L592: R22 = R24 and L593: (ex R25 being LTL-formula st (R25 in ( CastLTL D87 ) & R24 = ( 'X' R25 ))) by L591;
consider R25 being LTL-formula such that L594: R25 in D87 and L595: R24 = ( 'X' R25 ) by L593;
L596: R25 in D89 by L504 , L594 , XBOOLE_0:def 3;
L597: R22 in D97 by L596 , L592 , L595;
L598: R22 in D101 by L537 , L592 , L594 , L595;
thus L599: thesis by L598 , L597 , L1;
end;
end;
thus L601: thesis by L574;
end;
L602: ((R37 |= ( * D88 ) or R37 |= ( * D93 )) implies R37 |= ( * R31 ))
proof
assume L603: (R37 |= ( * D88 ) or R37 |= ( * D93 ));
L604: (for R22 being LTL-formula holds (R22 in ( * R31 ) implies R37 |= R22))
proof
let R22 being LTL-formula;
assume L605: R22 in ( * R31 );
L606: R22 in ( * D93 ) by L605 , L572;
L607: R22 in ( * D88 ) by L572 , L605;
L608:
now
per cases  by L603;
suppose L609: R37 |= ( * D88 );

thus L610: thesis by L609 , L607 , MODELC_2:def 64;
end;
suppose L611: R37 |= ( * D93 );

thus L612: thesis by L611 , L606 , MODELC_2:def 64;
end;
end;
thus L614: thesis by L608;
end;
thus L615: thesis by L604 , MODELC_2:def 64;
end;
thus L616: thesis by L602 , L555;
end;
theorem
L617: (for R26 being LTL-formula holds (for R30 being LTL-formula holds (for R31 being  strict LTLnode over R30 holds (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds ((R26 in (the LTLnew of R31) & (R26 is  disjunctive or R26 is  Until or R26 is  Release)) implies (R37 |= ( * R31 ) iff (R37 |= ( * ( SuccNode1 (R26 , R31) ) ) or R37 |= ( * ( SuccNode2 (R26 , R31) ) )))))))) by L282 , L381 , L499;
L618: (for R26 being LTL-formula holds ((R26 is  negative or R26 is  next) implies ( Subformulae R26 ) = ( ( Subformulae ( the_argument_of R26 ) ) \/ { R26 } )))
proof
let R26 being LTL-formula;
set D103 = ( the_argument_of R26 );
L619: R26 in ( Subformulae R26 ) by MODELC_2:45;
L620: { R26 } c= ( Subformulae R26 ) by L619 , ZFMISC_1:31;
assume L621: (R26 is  negative or R26 is  next);
L622: D103 is_immediate_constituent_of R26 by L621 , MODELC_2:20 , MODELC_2:21;
L623: D103 is_proper_subformula_of R26 by L622 , MODELC_2:29;
L624: D103 is_subformula_of R26 by L623 , MODELC_2:def 23;
L625: ( Subformulae D103 ) c= ( Subformulae R26 ) by L624 , MODELC_2:46;
L626: ( ( Subformulae D103 ) \/ { R26 } ) c= ( Subformulae R26 ) by L625 , L620 , XBOOLE_1:8;
L627: (for R11 being set holds (R11 in ( Subformulae R26 ) iff R11 in ( ( Subformulae D103 ) \/ { R26 } )))
proof
let R11 being set;
L628: (R11 in ( Subformulae R26 ) implies R11 in ( ( Subformulae D103 ) \/ { R26 } ))
proof
assume L629: R11 in ( Subformulae R26 );
consider R22 being LTL-formula such that L630: R22 = R11 and L631: R22 is_subformula_of R26 by L629 , MODELC_2:def 24;
L632:
now
per cases ;
suppose L633: R22 = R26;

L634: R22 in { R26 } by L633 , TARSKI:def 1;
thus L635: thesis by L634 , L630 , XBOOLE_0:def 3;
end;
suppose L636: R22 <> R26;

L637: R22 is_proper_subformula_of R26 by L636 , L631 , MODELC_2:def 23;
L638: R22 is_subformula_of D103 by L637 , L621 , MODELC_2:37;
L639: R22 in ( Subformulae D103 ) by L638 , MODELC_2:45;
thus L640: thesis by L639 , L630 , XBOOLE_0:def 3;
end;
end;
thus L642: thesis by L632;
end;
thus L643: thesis by L628 , L626;
end;
thus L644: thesis by L627 , TARSKI:1;
end;
L645: (for R26 being LTL-formula holds ((R26 is  conjunctive or R26 is  disjunctive or R26 is  Until or R26 is  Release) implies ( Subformulae R26 ) = ( ( ( Subformulae ( the_left_argument_of R26 ) ) \/ ( Subformulae ( the_right_argument_of R26 ) ) ) \/ { R26 } )))
proof
let R26 being LTL-formula;
set D104 = ( the_left_argument_of R26 );
set D105 = ( the_right_argument_of R26 );
set D106 = ( ( Subformulae ( the_left_argument_of R26 ) ) \/ ( Subformulae ( the_right_argument_of R26 ) ) );
L646: R26 in ( Subformulae R26 ) by MODELC_2:def 24;
L647: { R26 } c= ( Subformulae R26 ) by L646 , ZFMISC_1:31;
assume L648: (R26 is  conjunctive or R26 is  disjunctive or R26 is  Until or R26 is  Release);
L649: D105 is_immediate_constituent_of R26 by L648 , MODELC_2:22 , MODELC_2:23 , MODELC_2:24 , MODELC_2:25;
L650: D105 is_proper_subformula_of R26 by L649 , MODELC_2:29;
L651: D105 is_subformula_of R26 by L650 , MODELC_2:def 23;
L652: ( Subformulae D105 ) c= ( Subformulae R26 ) by L651 , MODELC_2:46;
L653: D104 is_immediate_constituent_of R26 by L648 , MODELC_2:22 , MODELC_2:23 , MODELC_2:24 , MODELC_2:25;
L654: D104 is_proper_subformula_of R26 by L653 , MODELC_2:29;
L655: D104 is_subformula_of R26 by L654 , MODELC_2:def 23;
L656: ( Subformulae D104 ) c= ( Subformulae R26 ) by L655 , MODELC_2:46;
L657: D106 c= ( Subformulae R26 ) by L656 , L652 , XBOOLE_1:8;
L658: ( D106 \/ { R26 } ) c= ( Subformulae R26 ) by L657 , L647 , XBOOLE_1:8;
L659: (for R11 being set holds (R11 in ( Subformulae R26 ) iff R11 in ( D106 \/ { R26 } )))
proof
let R11 being set;
L660: (R11 in ( Subformulae R26 ) implies R11 in ( D106 \/ { R26 } ))
proof
assume L661: R11 in ( Subformulae R26 );
consider R22 being LTL-formula such that L662: R22 = R11 and L663: R22 is_subformula_of R26 by L661 , MODELC_2:def 24;
L664:
now
per cases ;
suppose L665: R22 = R26;

L666: R22 in { R26 } by L665 , TARSKI:def 1;
thus L667: thesis by L666 , L662 , XBOOLE_0:def 3;
end;
suppose L668: R22 <> R26;

L669: R22 is_proper_subformula_of R26 by L668 , L663 , MODELC_2:def 23;
L670: (R22 is_subformula_of D104 or R22 is_subformula_of D105) by L669 , L648 , MODELC_2:38;
L671: (R22 in ( Subformulae D104 ) or R22 in ( Subformulae D105 )) by L670 , MODELC_2:45;
L672: R22 in D106 by L671 , XBOOLE_0:def 3;
thus L673: thesis by L672 , L662 , XBOOLE_0:def 3;
end;
end;
thus L675: thesis by L664;
end;
thus L676: thesis by L660 , L658;
end;
thus L677: thesis by L659 , TARSKI:1;
end;
L678: (for R26 being LTL-formula holds (R26 is  atomic implies ( Subformulae R26 ) = { R26 }))
proof
let R26 being LTL-formula;
assume L679: R26 is  atomic;
L680: (ex R2 being Nat st R26 = ( atom. R2 )) by L679 , MODELC_2:def 11;
L681: ( len R26 ) = 1 by L680 , FINSEQ_1:40;
L682: (for R11 being set holds (R11 in ( Subformulae R26 ) implies R11 in { R26 }))
proof
let R11 being set;
assume L683: R11 in ( Subformulae R26 );
consider R24 being LTL-formula such that L684: R24 = R11 and L685: R24 is_subformula_of R26 by L683 , MODELC_2:def 24;
L686:
now
assume L687: R24 <> R26;
L688: R24 is_proper_subformula_of R26 by L687 , L685 , MODELC_2:def 23;
L689: ( len R24 ) < 1 by L688 , L681 , MODELC_2:32;
thus L690: contradiction by L689 , MODELC_2:3;
end;
thus L691: thesis by L686 , L684 , TARSKI:def 1;
end;
L692: (for R11 being set holds (R11 in { R26 } implies R11 in ( Subformulae R26 )))
proof
let R11 being set;
assume L693: R11 in { R26 };
L694: R11 = R26 by L693 , TARSKI:def 1;
thus L695: thesis by L694 , MODELC_2:45;
end;
thus L696: thesis by L692 , L682 , TARSKI:1;
end;
L697: (for R26 being LTL-formula holds (for R27 being (Subset of ( Subformulae R26 )) holds (not ( {} ) in R27)))
proof
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
assume L698: ( {} ) in R27;
L699: (ex R22 being LTL-formula st (R22 = ( {} ) & R22 is_subformula_of R26)) by L698 , MODELC_2:def 24;
thus L700: contradiction by L699 , CARD_1:27 , MODELC_2:3;
end;
theorem
L701: (for R26 being LTL-formula holds (ex R19 being FinSequence st ( Subformulae R26 ) = ( rng R19 )))
proof
let R26 being LTL-formula;
defpred S1[ LTL-formula ] means (ex R19 being FinSequence st ( Subformulae $1 ) = ( rng R19 ));
L702: (for R26 being LTL-formula holds (((R26 is  negative or R26 is  next) & S1[ ( the_argument_of R26 ) ]) implies S1[ R26 ]))
proof
let R26 being LTL-formula;
assume that
L703: (R26 is  negative or R26 is  next)
and
L704: S1[ ( the_argument_of R26 ) ];
consider R20 being FinSequence such that L705: ( Subformulae ( the_argument_of R26 ) ) = ( rng R20 ) by L704;
set D107 = ( R20 ^ <* R26 *> );
take D107;
L706: ( rng D107 ) = ( ( rng R20 ) \/ ( rng <* R26 *> ) ) by FINSEQ_1:31
.= ( ( Subformulae ( the_argument_of R26 ) ) \/ { R26 } ) by L705 , L7
.= ( Subformulae R26 ) by L703 , L618;
thus L707: thesis by L706;
end;
L708: (for R26 being LTL-formula holds (((R26 is  conjunctive or R26 is  disjunctive or R26 is  Until or R26 is  Release) & S1[ ( the_left_argument_of R26 ) ] & S1[ ( the_right_argument_of R26 ) ]) implies S1[ R26 ]))
proof
let R26 being LTL-formula;
assume that
L709: (R26 is  conjunctive or R26 is  disjunctive or R26 is  Until or R26 is  Release)
and
L710: S1[ ( the_left_argument_of R26 ) ]
and
L711: S1[ ( the_right_argument_of R26 ) ];
consider R20 being FinSequence such that L712: ( Subformulae ( the_left_argument_of R26 ) ) = ( rng R20 ) by L710;
consider R21 being FinSequence such that L713: ( Subformulae ( the_right_argument_of R26 ) ) = ( rng R21 ) by L711;
L714: ( rng ( R20 ^ R21 ) ) = ( ( Subformulae ( the_left_argument_of R26 ) ) \/ ( Subformulae ( the_right_argument_of R26 ) ) ) by L712 , L713 , FINSEQ_1:31;
set D108 = ( ( R20 ^ R21 ) ^ <* R26 *> );
take D108;
L715: ( rng D108 ) = ( ( rng ( R20 ^ R21 ) ) \/ ( rng <* R26 *> ) ) by FINSEQ_1:31
.= ( ( ( Subformulae ( the_left_argument_of R26 ) ) \/ ( Subformulae ( the_right_argument_of R26 ) ) ) \/ { R26 } ) by L714 , L7
.= ( Subformulae R26 ) by L709 , L645;
thus L716: thesis by L715;
end;
L717: (for R26 being LTL-formula holds (R26 is  atomic implies S1[ R26 ]))
proof
let R26 being LTL-formula;
assume that
L718: R26 is  atomic;
set D109 = <* R26 *>;
take D109;
L719: ( rng D109 ) = { R26 } by L7
.= ( Subformulae R26 ) by L718 , L678;
thus L720: thesis by L719;
end;
L721: (for R26 being LTL-formula holds S1[ R26 ]) from MODELC_2:sch 1(L717 , L702 , L708);
thus L722: thesis by L721;
end;
registration
let R26 being LTL-formula;
cluster ( Subformulae R26 ) ->  finite;
correctness
proof
L723: (ex R19 being FinSequence st ( Subformulae R26 ) = ( rng R19 )) by L701;
thus L724: thesis by L723;
end;
end;
definition
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
let R19 being FinSequence;
let R11 being set;
func Length_fun (R19 , R27 , R11) -> Nat equals 
:L726: ( len ( CastLTL ( R19 . R11 ) ) ) if ( R19 . R11 ) in R27 otherwise ( 0 );
correctness;
end;
definition
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
let R19 being FinSequence;
func Partial_seq (R19 , R27) -> Real_Sequence means 
:L728: (for R1 being Nat holds ((( R19 . R1 ) in R27 implies ( it . R1 ) = ( len ( CastLTL ( R19 . R1 ) ) )) & ((not ( R19 . R1 ) in R27) implies ( it . R1 ) = ( 0 ))));
existence
proof
deffunc H1(set) = ( Length_fun (R19 , R27 , $1) );
L729: (for R11 being set holds (R11 in ( NAT ) implies H1(R11) in ( REAL )))
proof
let R11 being set;
assume that
L730: R11 in ( NAT );
L731: H1(R11) in ( NAT ) by ORDINAL1:def 12;
thus L732: thesis by L731;
end;
consider C21 being (Function of ( NAT ) , ( REAL )) such that L733: (for R11 being set holds (R11 in ( NAT ) implies ( C21 . R11 ) = H1(R11))) from FUNCT_2:sch 2(L729);
take C21;
L734: (for R1 being Nat holds ((( R19 . R1 ) in R27 implies ( C21 . R1 ) = ( len ( CastLTL ( R19 . R1 ) ) )) & ((not ( R19 . R1 ) in R27) implies ( C21 . R1 ) = ( 0 ))))
proof
let R1 being Nat;
L735: R1 in ( NAT ) by ORDINAL1:def 12;
L736: ((not ( R19 . R1 ) in R27) implies ( C21 . R1 ) = ( 0 ))
proof
assume L737: (not ( R19 . R1 ) in R27);
L738: ( C21 . R1 ) = ( Length_fun (R19 , R27 , R1) ) by L733 , L735;
thus L739: thesis by L738 , L737 , L726;
end;
L740: (( R19 . R1 ) in R27 implies ( C21 . R1 ) = ( len ( CastLTL ( R19 . R1 ) ) ))
proof
assume L741: ( R19 . R1 ) in R27;
L742: ( C21 . R1 ) = ( Length_fun (R19 , R27 , R1) ) by L733 , L735;
thus L743: thesis by L742 , L741 , L726;
end;
thus L744: thesis by L740 , L736;
end;
thus L745: thesis by L734;
end;
uniqueness
proof
let C22 , C23 being Real_Sequence;
L746: (((for R1 being Nat holds ((( R19 . R1 ) in R27 implies ( C22 . R1 ) = ( len ( CastLTL ( R19 . R1 ) ) )) & ((not ( R19 . R1 ) in R27) implies ( C22 . R1 ) = ( 0 )))) & (for R1 being Nat holds ((( R19 . R1 ) in R27 implies ( C23 . R1 ) = ( len ( CastLTL ( R19 . R1 ) ) )) & ((not ( R19 . R1 ) in R27) implies ( C23 . R1 ) = ( 0 ))))) implies C22 = C23)
proof
assume that
L747: (for R1 being Nat holds ((( R19 . R1 ) in R27 implies ( C22 . R1 ) = ( len ( CastLTL ( R19 . R1 ) ) )) & ((not ( R19 . R1 ) in R27) implies ( C22 . R1 ) = ( 0 ))))
and
L748: (for R1 being Nat holds ((( R19 . R1 ) in R27 implies ( C23 . R1 ) = ( len ( CastLTL ( R19 . R1 ) ) )) & ((not ( R19 . R1 ) in R27) implies ( C23 . R1 ) = ( 0 ))));
L749: (for R11 being set holds (R11 in ( NAT ) implies ( C22 . R11 ) = ( C23 . R11 )))
proof
let R11 being set;
assume L750: R11 in ( NAT );
reconsider D110 = R11 as Nat by L750;
L751:
now
per cases ;
suppose L752: ( R19 . D110 ) in R27;

L753: ( C22 . D110 ) = ( len ( CastLTL ( R19 . D110 ) ) ) by L752 , L747;
thus L754: thesis by L753 , L748 , L752;
end;
suppose L755: (not ( R19 . D110 ) in R27);

L756: ( C22 . D110 ) = ( 0 ) by L755 , L747;
thus L757: thesis by L756 , L748 , L755;
end;
end;
thus L759: thesis by L751;
end;
thus L760: thesis by L749 , FUNCT_2:12;
end;
thus L761: thesis by L746;
end;
end;
definition
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
let R19 being FinSequence;
func len (R19 , R27) -> Real equals 
( Sum (( Partial_seq (R19 , R27) ) , ( len R19 )) );
correctness;
end;
L764: (for R2 being Nat holds (for R38 being Real_Sequence holds (for R39 being Real_Sequence holds ((for R8 being Nat holds (R8 <= R2 implies ( R38 . R8 ) = ( R39 . R8 ))) implies ( Sum (R38 , R2) ) = ( Sum (R39 , R2) )))))
proof
let R2 being Nat;
let R38 being Real_Sequence;
let R39 being Real_Sequence;
L765: ( CastNat R2 ) = R2 by MODELC_2:def 1;
defpred S2[ Nat ] means ((for R8 being Nat holds (R8 <= $1 implies ( R38 . R8 ) = ( R39 . R8 ))) implies ( Sum (R38 , ( CastNat $1 )) ) = ( Sum (R39 , ( CastNat $1 )) ));
L766: (for B7 being Nat holds (S2[ B7 ] implies S2[ ( B7 + 1 ) ]))
proof
let C24 being Nat;
assume that
L767: S2[ C24 ];
L768: S2[ ( C24 + 1 ) ]
proof
set D111 = ( C24 + 1 );
assume L769: (for R8 being Nat holds (R8 <= ( C24 + 1 ) implies ( R38 . R8 ) = ( R39 . R8 )));
L770: (( CastNat C24 ) = C24 & ( R38 . D111 ) = ( R39 . D111 )) by L769 , MODELC_2:def 1;
L771: (for R8 being Nat holds (R8 <= C24 implies ( R38 . R8 ) = ( R39 . R8 )))
proof
L772: C24 <= ( C24 + 1 ) by NAT_1:11;
let R8 being Nat;
assume L773: R8 <= C24;
thus L774: thesis by L773 , L769 , L772 , XXREAL_0:2;
end;
reconsider D112 = C24 as (Element of ( NAT )) by ORDINAL1:def 12;
L775: ( Sum (R38 , ( CastNat D111 )) ) = ( Sum (R38 , D111) ) by MODELC_2:def 1
.= ( ( Sum (R39 , D112) ) + ( R39 . D111 ) ) by L767 , L771 , L770 , SERIES_1:def 1
.= ( Sum (R39 , D111) ) by SERIES_1:def 1;
thus L776: thesis by L775 , MODELC_2:def 1;
end;
thus L777: thesis by L768;
end;
L778: S2[ ( 0 ) ]
proof
assume L779: (for R8 being Nat holds (R8 <= ( 0 ) implies ( R38 . R8 ) = ( R39 . R8 )));
L780: ( Sum (R38 , ( CastNat ( 0 ) )) ) = ( Sum (R38 , ( 0 )) ) by MODELC_2:def 1
.= ( R38 . ( 0 ) ) by SERIES_1:def 1
.= ( R39 . ( 0 ) ) by L779
.= ( Sum (R39 , ( 0 )) ) by SERIES_1:def 1;
thus L781: thesis by L780 , MODELC_2:def 1;
end;
L782: (for B8 being Nat holds S2[ B8 ]) from NAT_1:sch 2(L778 , L766);
thus L783: thesis by L782 , L765;
end;
L784: (for R2 being Nat holds (for R9 being Nat holds (for R38 being Real_Sequence holds (for R39 being Real_Sequence holds (((for R8 being Nat holds ((R8 <= R2 & (not R8 = R9)) implies ( R38 . R8 ) = ( R39 . R8 ))) & R9 <= R2) implies ( ( Sum (R38 , R2) ) - ( R38 . R9 ) ) = ( ( Sum (R39 , R2) ) - ( R39 . R9 ) ))))))
proof
let R2 being Nat;
let R9 being Nat;
let R38 being Real_Sequence;
let R39 being Real_Sequence;
L785: ( CastNat R2 ) = R2 by MODELC_2:def 1;
defpred S3[ Nat ] means (((for R8 being Nat holds ((R8 <= $1 & (not R8 = R9)) implies ( R38 . R8 ) = ( R39 . R8 ))) & R9 <= $1) implies ( ( Sum (R38 , ( CastNat $1 )) ) - ( R38 . R9 ) ) = ( ( Sum (R39 , ( CastNat $1 )) ) - ( R39 . R9 ) ));
L786: (for B9 being Nat holds (S3[ B9 ] implies S3[ ( B9 + 1 ) ]))
proof
let C25 being Nat;
assume that
L787: S3[ C25 ];
L788: S3[ ( C25 + 1 ) ]
proof
L789: ( CastNat C25 ) = C25 by MODELC_2:def 1;
set D113 = ( C25 + 1 );
assume that
L790: (for R8 being Nat holds ((R8 <= ( C25 + 1 ) & (not R8 = R9)) implies ( R38 . R8 ) = ( R39 . R8 )))
and
L791: R9 <= ( C25 + 1 );
reconsider D114 = C25 as (Element of ( NAT )) by ORDINAL1:def 12;
L792:
now
per cases  by L791 , NAT_1:8;
suppose L793: R9 <= D114;

L794: R9 < D113 by L793 , NAT_1:13;
L795: ( ( Sum (R38 , ( CastNat D113 )) ) - ( R38 . R9 ) ) = ( ( Sum (R38 , D113) ) - ( R38 . R9 ) ) by MODELC_2:def 1
.= ( ( ( Sum (R38 , D114) ) + ( R38 . D113 ) ) - ( R38 . R9 ) ) by SERIES_1:def 1
.= ( ( ( Sum (R38 , D114) ) - ( R38 . R9 ) ) + ( R38 . D113 ) )
.= ( ( ( Sum (R39 , D114) ) - ( R39 . R9 ) ) + ( R39 . D113 ) ) by L787 , L790 , L789 , L793 , L794 , NAT_1:12
.= ( ( ( Sum (R39 , D114) ) + ( R39 . D113 ) ) - ( R39 . R9 ) )
.= ( ( Sum (R39 , D113) ) - ( R39 . R9 ) ) by SERIES_1:def 1;
thus L796: thesis by L795 , MODELC_2:def 1;
end;
suppose L797: R9 = ( D114 + 1 );

L798: (for R8 being Nat holds (R8 <= D114 implies ( R38 . R8 ) = ( R39 . R8 )))
proof
let R8 being Nat;
assume that
L799: R8 <= D114;
L800: R8 < R9 by L797 , L799 , NAT_1:13;
thus L801: thesis by L800 , L790 , L799 , NAT_1:12;
end;
L802: ( ( Sum (R38 , ( CastNat D113 )) ) - ( R38 . R9 ) ) = ( ( Sum (R38 , D113) ) - ( R38 . R9 ) ) by MODELC_2:def 1
.= ( ( ( Sum (R38 , D114) ) + ( R38 . D113 ) ) - ( R38 . R9 ) ) by SERIES_1:def 1
.= ( ( ( Sum (R39 , D114) ) + ( R39 . D113 ) ) - ( R39 . R9 ) ) by L797 , L798 , L764
.= ( ( Sum (R39 , D113) ) - ( R39 . R9 ) ) by SERIES_1:def 1;
thus L803: thesis by L802 , MODELC_2:def 1;
end;
end;
thus L805: thesis by L792;
end;
thus L806: thesis by L788;
end;
L807: S3[ ( 0 ) ]
proof
L808: ( Sum (R39 , ( CastNat ( 0 ) )) ) = ( Sum (R39 , ( 0 )) ) by MODELC_2:def 1
.= ( R39 . ( 0 ) ) by SERIES_1:def 1;
assume that
L809: (for R8 being Nat holds ((R8 <= ( 0 ) & (not R8 = R9)) implies ( R38 . R8 ) = ( R39 . R8 )))
and
L810: R9 <= ( 0 );
L811: ( Sum (R38 , ( CastNat ( 0 ) )) ) = ( Sum (R38 , ( 0 )) ) by MODELC_2:def 1
.= ( R38 . ( 0 ) ) by SERIES_1:def 1;
L812: R9 = ( 0 ) by L810;
thus L813: thesis by L812 , L811 , L808;
end;
L814: (for B10 being Nat holds S3[ B10 ]) from NAT_1:sch 2(L807 , L786);
thus L815: thesis by L814 , L785;
end;
theorem
L816: (for R19 being FinSequence holds (for R26 being LTL-formula holds ( len (R19 , ( {} R26 )) ) = ( 0 )))
proof
let R19 being FinSequence;
let R26 being LTL-formula;
set D115 = ( Partial_seq (R19 , ( {} R26 )) );
L817: (for B11 being (Element of ( NAT )) holds ( D115 . B11 ) = ( ( ( 0 ) * B11 ) + ( 0 ) )) by L728;
L818: (for R2 being Nat holds ( ( Partial_Sums D115 ) . R2 ) = ( 0 ))
proof
let R2 being Nat;
reconsider D116 = R2 as (Element of ( NAT )) by ORDINAL1:def 12;
L819: ( D115 . ( 0 ) ) = ( 0 ) by L728;
L820: ( ( Partial_Sums D115 ) . D116 ) = ( ( ( D116 + 1 ) * ( ( D115 . ( 0 ) ) + ( D115 . D116 ) ) ) / 2 ) by L817 , SERIES_2:42
.= ( ( ( D116 + 1 ) * ( ( 0 ) + ( 0 ) ) ) / 2 ) by L819 , L728;
thus L821: thesis by L820;
end;
thus L822: thesis by L818;
end;
theorem
L823: (for R19 being FinSequence holds (for R22 being LTL-formula holds (for R26 being LTL-formula holds (for R27 being (Subset of ( Subformulae R26 )) holds ((not R22 in R27) implies ( len (R19 , ( R27 \ { R22 } )) ) = ( len (R19 , R27) ))))))
proof
let R19 being FinSequence;
let R22 being LTL-formula;
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
assume L824: (not R22 in R27);
L825: (for R11 being set holds (R11 in R27 implies R11 in ( R27 \ { R22 } )))
proof
let R11 being set;
assume L826: R11 in R27;
L827: (not R11 in { R22 }) by L826 , L824 , TARSKI:def 1;
thus L828: thesis by L827 , L826 , XBOOLE_0:def 5;
end;
L829: (for R11 being set holds (R11 in ( R27 \ { R22 } ) implies R11 in R27)) by XBOOLE_0:def 5;
thus L830: thesis by L829 , L825 , TARSKI:1;
end;
theorem
L831: (for R19 being FinSequence holds (for R22 being LTL-formula holds (for R26 being LTL-formula holds (for R27 being (Subset of ( Subformulae R26 )) holds ((( rng R19 ) = ( Subformulae R26 ) & R19 is  one-to-one & R22 in R27) implies ( len (R19 , ( R27 \ { R22 } )) ) = ( ( len (R19 , R27) ) - ( len R22 ) ))))))
proof
let R19 being FinSequence;
let R22 being LTL-formula;
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
assume that
L832: ( rng R19 ) = ( Subformulae R26 )
and
L833: R19 is  one-to-one
and
L834: R22 in R27;
consider R11 being set such that L835: R11 in ( dom R19 ) and L836: ( R19 . R11 ) = R22 by L832 , L834 , FUNCT_1:def 3;
set D117 = ( Partial_seq (R19 , ( R27 \ { R22 } )) );
set D118 = ( Partial_seq (R19 , R27) );
set D119 = ( len R19 );
L837: R22 in ( LTL_WFF ) by MODELC_2:1;
L838: R11 in ( Seg D119 ) by L835 , FINSEQ_1:def 3;
L839: R11 in { B12 where B12 is (Element of ( NAT )) : (1 <= B12 & B12 <= D119) } by L838 , FINSEQ_1:def 1;
consider C26 being (Element of ( NAT )) such that L840: R11 = C26 and L841: 1 <= C26 and L842: C26 <= D119 by L839;
reconsider D120 = C26 as Nat;
L843: ( R19 . D120 ) in { R22 } by L836 , L840 , TARSKI:def 1;
L844: (not ( R19 . D120 ) in ( R27 \ { R22 } )) by L843 , XBOOLE_0:def 5;
L845: ( D117 . D120 ) = ( 0 ) by L844 , L728;
L846: (for R8 being Nat holds ((R8 <= D119 & (not R8 = D120)) implies ( D118 . R8 ) = ( D117 . R8 )))
proof
let R8 being Nat;
assume that
L847: R8 <= D119
and
L848: (not R8 = D120);
L849:
now
per cases ;
suppose L850: (not R8 in ( dom R19 ));

L851: ( R19 . R8 ) = ( {} ) by L850 , FUNCT_1:def 2;
L852: (not ( R19 . R8 ) in R27) by L851 , L697;
L853: (not ( R19 . R8 ) in ( R27 \ { R22 } )) by L851 , L697;
L854: ( D117 . R8 ) = ( 0 ) by L853 , L728
.= ( D118 . R8 ) by L852 , L728;
thus L855: thesis by L854;
end;
suppose L856: R8 in ( dom R19 );

L857: (not ( R19 . R8 ) = R22) by L856 , L833 , L835 , L836 , L840 , L848 , FUNCT_1:def 4;
L858: (not ( R19 . R8 ) in { R22 }) by L857 , TARSKI:def 1;
L859:
now
per cases ;
suppose L860: ( R19 . R8 ) in R27;

L861: ( R19 . R8 ) in ( R27 \ { R22 } ) by L860 , L858 , XBOOLE_0:def 5;
L862: ( D117 . R8 ) = ( len ( CastLTL ( R19 . R8 ) ) ) by L861 , L728
.= ( D118 . R8 ) by L860 , L728;
thus L863: thesis by L862;
end;
suppose L864: (not ( R19 . R8 ) in R27);

L865: (not ( R19 . R8 ) in ( R27 \ { R22 } )) by L864 , XBOOLE_0:def 5;
L866: ( D117 . R8 ) = ( 0 ) by L865 , L728
.= ( D118 . R8 ) by L864 , L728;
thus L867: thesis by L866;
end;
end;
thus L869: thesis by L859;
end;
end;
thus L871: thesis by L849;
end;
L872: ( ( Sum (D118 , D119) ) - ( D118 . D120 ) ) = ( ( Sum (D117 , D119) ) - ( D117 . D120 ) ) by L846 , L842 , L784;
L873: ( D118 . D120 ) = ( len ( CastLTL ( R19 . D120 ) ) ) by L834 , L836 , L840 , L728
.= ( len R22 ) by L836 , L840 , L837 , MODELC_2:def 25;
thus L874: thesis by L873 , L845 , L872;
end;
theorem
L875: (for R19 being FinSequence holds (for R22 being LTL-formula holds (for R26 being LTL-formula holds (for R27 being (Subset of ( Subformulae R26 )) holds (for R28 being (Subset of ( Subformulae R26 )) holds ((( rng R19 ) = ( Subformulae R26 ) & R19 is  one-to-one & (not R22 in R27) & R28 = ( R27 \/ { R22 } )) implies ( len (R19 , R28) ) = ( ( len (R19 , R27) ) + ( len R22 ) )))))))
proof
let R19 being FinSequence;
let R22 being LTL-formula;
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
let R28 being (Subset of ( Subformulae R26 ));
assume that
L876: (( rng R19 ) = ( Subformulae R26 ) & R19 is  one-to-one)
and
L877: (not R22 in R27)
and
L878: R28 = ( R27 \/ { R22 } );
L879: (for R11 being set holds (R11 in ( R28 \ { R22 } ) implies R11 in R27))
proof
let R11 being set;
assume L880: R11 in ( R28 \ { R22 } );
L881: (R11 in R28 & (not R11 in { R22 })) by L880 , XBOOLE_0:def 5;
thus L882: thesis by L881 , L878 , XBOOLE_0:def 3;
end;
L883: (for R11 being set holds (R11 in R27 implies R11 in ( R28 \ { R22 } )))
proof
let R11 being set;
assume L884: R11 in R27;
L885: ((not R11 in { R22 }) & R11 in R28) by L884 , L877 , L878 , TARSKI:def 1 , XBOOLE_0:def 3;
thus L886: thesis by L885 , XBOOLE_0:def 5;
end;
L887: ( R28 \ { R22 } ) = R27 by L883 , L879 , TARSKI:1;
L888: R22 in { R22 } by TARSKI:def 1;
L889: R22 in R28 by L888 , L878 , XBOOLE_0:def 3;
L890: ( len (R19 , R27) ) = ( ( len (R19 , R28) ) - ( len R22 ) ) by L889 , L876 , L887 , L831;
thus L891: thesis by L890;
end;
theorem
L892: (for R20 being FinSequence holds (for R21 being FinSequence holds (for R26 being LTL-formula holds (for R27 being (Subset of ( Subformulae R26 )) holds ((( rng R20 ) = ( Subformulae R26 ) & R20 is  one-to-one & ( rng R21 ) = ( Subformulae R26 ) & R21 is  one-to-one) implies ( len (R20 , R27) ) = ( len (R21 , R27) ))))))
proof
let R20 being FinSequence;
let R21 being FinSequence;
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
defpred S4[ Nat ] means (for R28 being (Subset of ( Subformulae R26 )) holds (( card R28 ) <= $1 implies ((( rng R20 ) = ( Subformulae R26 ) & R20 is  one-to-one & ( rng R21 ) = ( Subformulae R26 ) & R21 is  one-to-one) implies ( len (R20 , R28) ) = ( len (R21 , R28) ))));
set D121 = ( card R27 );
L893: (for B13 being Nat holds (S4[ B13 ] implies S4[ ( B13 + 1 ) ]))
proof
let C27 being Nat;
assume that
L894: S4[ C27 ];
L895: S4[ ( C27 + 1 ) ]
proof
let R28 being (Subset of ( Subformulae R26 ));
assume that
L896: ( card R28 ) <= ( C27 + 1 );
L897: ((( rng R20 ) = ( Subformulae R26 ) & R20 is  one-to-one & ( rng R21 ) = ( Subformulae R26 ) & R21 is  one-to-one) implies ( len (R20 , R28) ) = ( len (R21 , R28) ))
proof
assume that
L898: (( rng R20 ) = ( Subformulae R26 ) & R20 is  one-to-one)
and
L899: (( rng R21 ) = ( Subformulae R26 ) & R21 is  one-to-one);
L900:
now
per cases  by L896 , NAT_1:8;
suppose L901: ( card R28 ) <= C27;

thus L902: thesis by L901 , L894 , L898 , L899;
end;
suppose L903: ( card R28 ) = ( C27 + 1 );

L904: R28 <> ( {} ) by L903;
consider C28 being set such that L905: C28 in R28 by L904 , XBOOLE_0:def 1;
L906: C28 in ( Subformulae R26 ) by L905;
reconsider D122 = C28 as LTL-formula by L906 , MODELC_2:1;
L907: { D122 } c= R28 by L905 , ZFMISC_1:31;
L908: ( card ( R28 \ { D122 } ) ) = ( ( card R28 ) - ( card { D122 } ) ) by L907 , CARD_2:44
.= ( ( card R28 ) - 1 ) by CARD_1:30
.= C27 by L903;
L909: ( len (R20 , R28) ) = ( ( ( len (R20 , R28) ) - ( len D122 ) ) + ( len D122 ) )
.= ( ( len (R20 , ( R28 \ { D122 } )) ) + ( len D122 ) ) by L898 , L905 , L831;
L910: ( len (R21 , R28) ) = ( ( ( len (R21 , R28) ) - ( len D122 ) ) + ( len D122 ) )
.= ( ( len (R21 , ( R28 \ { D122 } )) ) + ( len D122 ) ) by L899 , L905 , L831
.= ( ( len (R20 , ( R28 \ { D122 } )) ) + ( len D122 ) ) by L894 , L898 , L899 , L908;
thus L911: thesis by L910 , L909;
end;
end;
thus L913: thesis by L900;
end;
thus L914: thesis by L897;
end;
thus L915: thesis by L895;
end;
L916: S4[ ( 0 ) ]
proof
let R28 being (Subset of ( Subformulae R26 ));
assume L917: ( card R28 ) <= ( 0 );
L918: R28 = ( {} R26 ) by L917;
L919: ( len (R20 , R28) ) = ( 0 ) by L918 , L816;
thus L920: thesis by L919 , L918 , L816;
end;
L921: (for B14 being Nat holds S4[ B14 ]) from NAT_1:sch 2(L916 , L893);
L922: S4[ D121 ] by L921;
thus L923: thesis by L922;
end;
definition
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
func len R27 -> Real means 
:L924: (ex R19 being FinSequence st (( rng R19 ) = ( Subformulae R26 ) & R19 is  one-to-one & it = ( len (R19 , R27) )));
existence
proof
consider R19 being FinSequence such that L925: (( rng R19 ) = ( Subformulae R26 ) & R19 is  one-to-one) by FINSEQ_4:58;
set D123 = ( len (R19 , R27) );
take D123;
thus L926: thesis by L925;
end;
uniqueness by L892;
end;
theorem
L928: (for R22 being LTL-formula holds (for R26 being LTL-formula holds (for R27 being (Subset of ( Subformulae R26 )) holds ((not R22 in R27) implies ( len ( R27 \ { R22 } ) ) = ( len R27 )))))
proof
let R22 being LTL-formula;
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
assume L929: (not R22 in R27);
consider R19 being FinSequence such that L930: (( rng R19 ) = ( Subformulae R26 ) & R19 is  one-to-one) by FINSEQ_4:58;
L931: ( len ( R27 \ { R22 } ) ) = ( len (R19 , ( R27 \ { R22 } )) ) by L930 , L924
.= ( len (R19 , R27) ) by L929 , L823;
thus L932: thesis by L931 , L930 , L924;
end;
theorem
L933: (for R22 being LTL-formula holds (for R26 being LTL-formula holds (for R27 being (Subset of ( Subformulae R26 )) holds (R22 in R27 implies ( len ( R27 \ { R22 } ) ) = ( ( len R27 ) - ( len R22 ) )))))
proof
let R22 being LTL-formula;
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
assume L934: R22 in R27;
consider R19 being FinSequence such that L935: (( rng R19 ) = ( Subformulae R26 ) & R19 is  one-to-one) by FINSEQ_4:58;
L936: ( len ( R27 \ { R22 } ) ) = ( len (R19 , ( R27 \ { R22 } )) ) by L935 , L924
.= ( ( len (R19 , R27) ) - ( len R22 ) ) by L934 , L935 , L831;
thus L937: thesis by L936 , L935 , L924;
end;
theorem
L938: (for R22 being LTL-formula holds (for R26 being LTL-formula holds (for R27 being (Subset of ( Subformulae R26 )) holds (for R28 being (Subset of ( Subformulae R26 )) holds (((not R22 in R27) & R28 = ( R27 \/ { R22 } )) implies ( len R28 ) = ( ( len R27 ) + ( len R22 ) ))))))
proof
let R22 being LTL-formula;
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
let R28 being (Subset of ( Subformulae R26 ));
assume L939: ((not R22 in R27) & R28 = ( R27 \/ { R22 } ));
consider R19 being FinSequence such that L940: (( rng R19 ) = ( Subformulae R26 ) & R19 is  one-to-one) by FINSEQ_4:58;
L941: ( len R28 ) = ( len (R19 , R28) ) by L940 , L924
.= ( ( len (R19 , R27) ) + ( len R22 ) ) by L939 , L940 , L875;
thus L942: thesis by L941 , L940 , L924;
end;
theorem
L943: (for R22 being LTL-formula holds (for R26 being LTL-formula holds (for R27 being (Subset of ( Subformulae R26 )) holds (for R28 being (Subset of ( Subformulae R26 )) holds (R28 = ( R27 \/ { R22 } ) implies ( len R28 ) <= ( ( len R27 ) + ( len R22 ) ))))))
proof
let R22 being LTL-formula;
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
let R28 being (Subset of ( Subformulae R26 ));
assume L944: R28 = ( R27 \/ { R22 } );
L945:
now
per cases ;
suppose L946: R22 in R27;

L947: { R22 } c= R27 by L946 , ZFMISC_1:31;
L948: R28 = R27 by L947 , L944 , XBOOLE_1:12;
thus L949: thesis by L948 , XREAL_1:31;
end;
suppose L950: (not R22 in R27);

thus L951: thesis by L950 , L944 , L938;
end;
end;
thus L953: thesis by L945;
end;
theorem
L954: (for R26 being LTL-formula holds ( len ( {} R26 ) ) = ( 0 ))
proof
let R26 being LTL-formula;
consider R19 being FinSequence such that L955: (( rng R19 ) = ( Subformulae R26 ) & R19 is  one-to-one) by FINSEQ_4:58;
L956: ( len ( {} R26 ) ) = ( len (R19 , ( {} R26 )) ) by L955 , L924;
thus L957: thesis by L956 , L816;
end;
theorem
L958: (for R22 being LTL-formula holds (for R26 being LTL-formula holds (for R27 being (Subset of ( Subformulae R26 )) holds (R27 = { R22 } implies ( len R27 ) = ( len R22 )))))
proof
let R22 being LTL-formula;
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
assume L959: R27 = { R22 };
L960: R22 in R27 by L959 , TARSKI:def 1;
L961:
now
assume L962: (ex R11 being set st R11 in ( R27 \ { R22 } ));
consider R11 being set such that L963: R11 in ( R27 \ { R22 } ) by L962;
L964: R11 in R27 by L963 , XBOOLE_0:def 5;
thus L965: contradiction by L964 , L959 , L963 , XBOOLE_0:def 5;
end;
L966: ( R27 \ { R22 } ) = ( {} R26 ) by L961 , XBOOLE_0:def 1;
L967: ( len R27 ) = ( ( ( len R27 ) - ( len R22 ) ) + ( len R22 ) )
.= ( ( len ( R27 \ { R22 } ) ) + ( len R22 ) ) by L960 , L933
.= ( ( 0 ) + ( len R22 ) ) by L966 , L954;
thus L968: thesis by L967;
end;
L969: (for R26 being LTL-formula holds (for R27 being (Subset of ( Subformulae R26 )) holds (for R28 being (Subset of ( Subformulae R26 )) holds (R27 c= R28 implies (R27 = R28 or (ex R11 being set st (R11 in R28 & R27 c= ( R28 \ { R11 } ))))))))
proof
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
let R28 being (Subset of ( Subformulae R26 ));
assume L970: R27 c= R28;
L971: ((not R27 = R28) implies (ex R11 being set st (R11 in R28 & R27 c= ( R28 \ { R11 } ))))
proof
assume L972: (not R27 = R28);
consider R11 being set such that L973: ((not (R11 in R27 implies R11 in R28)) or (not (R11 in R28 implies R11 in R27))) by L972 , TARSKI:1;
take R11;
L974: (for R12 being set holds (R12 in R27 implies R12 in ( R27 \ { R11 } )))
proof
let R12 being set;
assume L975: R12 in R27;
L976: (not R12 in { R11 }) by L975 , L970 , L973 , TARSKI:def 1;
thus L977: thesis by L976 , L975 , XBOOLE_0:def 5;
end;
L978: (for R12 being set holds (R12 in ( R27 \ { R11 } ) implies R12 in R27)) by XBOOLE_0:def 5;
L979: ( R27 \ { R11 } ) = R27 by L978 , L974 , TARSKI:1;
thus L980: thesis by L979 , L970 , L973 , XBOOLE_1:33;
end;
thus L981: thesis by L971;
end;
theorem
L982: (for R26 being LTL-formula holds (for R27 being (Subset of ( Subformulae R26 )) holds (for R28 being (Subset of ( Subformulae R26 )) holds (R27 c= R28 implies ( len R27 ) <= ( len R28 )))))
proof
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
let R28 being (Subset of ( Subformulae R26 ));
defpred S5[ Nat ] means (for R28 being (Subset of ( Subformulae R26 )) holds (( card R28 ) <= $1 implies (R27 c= R28 implies ( len R27 ) <= ( len R28 ))));
set D124 = ( card R28 );
L983: (for B15 being Nat holds (S5[ B15 ] implies S5[ ( B15 + 1 ) ]))
proof
let C29 being Nat;
assume that
L984: S5[ C29 ];
L985: S5[ ( C29 + 1 ) ]
proof
let R28 being (Subset of ( Subformulae R26 ));
assume that
L986: ( card R28 ) <= ( C29 + 1 );
L987: (R27 c= R28 implies ( len R27 ) <= ( len R28 ))
proof
assume L988: R27 c= R28;
L989:
now
per cases  by L988 , L969;
suppose L990: R27 = R28;

thus L991: thesis by L990;
end;
suppose L992: (ex R11 being set st (R11 in R28 & R27 c= ( R28 \ { R11 } )));

consider R11 being set such that L993: R11 in R28 and L994: R27 c= ( R28 \ { R11 } ) by L992;
L995: R11 in ( Subformulae R26 ) by L993;
reconsider D125 = R11 as LTL-formula by L995 , MODELC_2:1;
set D126 = { D125 };
L996: D126 c= R28 by L993 , ZFMISC_1:31;
L997: ( card ( R28 \ D126 ) ) = ( ( card R28 ) - ( card D126 ) ) by L996 , CARD_2:44
.= ( ( card R28 ) - 1 ) by CARD_1:30;
L998: ( ( card ( R28 \ D126 ) ) + 1 ) <= ( C29 + 1 ) by L997 , L986;
L999: ( card ( R28 \ D126 ) ) <= C29 by L998 , XREAL_1:6;
L1000: ( len R27 ) <= ( len ( R28 \ D126 ) ) by L999 , L984 , L994;
L1001: ( len R27 ) <= ( ( len R28 ) - ( len D125 ) ) by L1000 , L993 , L933;
L1002: ( ( len R28 ) - ( len D125 ) ) <= ( len R28 ) by XREAL_1:43;
thus L1003: thesis by L1002 , L1001 , XXREAL_0:2;
end;
end;
thus L1005: thesis by L989;
end;
thus L1006: thesis by L987;
end;
thus L1007: thesis by L985;
end;
L1008: S5[ ( 0 ) ]
proof
let R28 being (Subset of ( Subformulae R26 ));
assume L1009: ( card R28 ) <= ( 0 );
L1010: R28 = ( {} R26 ) by L1009;
thus L1011: thesis by L1010;
end;
L1012: (for B16 being Nat holds S5[ B16 ]) from NAT_1:sch 2(L1008 , L983);
L1013: S5[ D124 ] by L1012;
thus L1014: thesis by L1013;
end;
theorem
L1015: (for R26 being LTL-formula holds (for R27 being (Subset of ( Subformulae R26 )) holds (( len R27 ) < 1 implies R27 = ( {} R26 ))))
proof
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
assume L1016: ( len R27 ) < 1;
L1017:
now
assume L1018: R27 <> ( {} R26 );
consider R11 being set such that L1019: R11 in R27 by L1018 , XBOOLE_0:def 1;
L1020: R11 in ( Subformulae R26 ) by L1019;
reconsider D127 = R11 as LTL-formula by L1020 , MODELC_2:1;
set D128 = { D127 };
L1021: D128 c= R27 by L1019 , ZFMISC_1:31;
L1022: D127 is_subformula_of R26 by L1019 , MODELC_2:45;
reconsider D129 = D128 as (Subset of ( Subformulae R26 )) by L1022 , L45;
L1023: ( len D129 ) = ( len D127 ) by L958;
L1024: ( len D129 ) >= 1 by L1023 , MODELC_2:3;
L1025: ( len D129 ) <= ( len R27 ) by L1021 , L982;
thus L1026: contradiction by L1025 , L1016 , L1024 , XXREAL_0:2;
end;
thus L1027: thesis by L1017;
end;
theorem
L1028: (for R26 being LTL-formula holds (for R27 being (Subset of ( Subformulae R26 )) holds ( len R27 ) >= ( 0 )))
proof
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
L1029:
now
per cases ;
suppose L1030: R27 = ( {} R26 );

thus L1031: thesis by L1030 , L954;
end;
suppose L1032: R27 <> ( {} R26 );

thus L1033: thesis by L1032 , L1015;
end;
end;
thus L1035: thesis by L1029;
end;
theorem
L1036: (for R26 being LTL-formula holds (for R27 being (Subset of ( Subformulae R26 )) holds (for R28 being (Subset of ( Subformulae R26 )) holds (for R29 being (Subset of ( Subformulae R26 )) holds (R27 = ( R28 \/ R29 ) implies ( len R27 ) <= ( ( len R28 ) + ( len R29 ) ))))))
proof
let R26 being LTL-formula;
let R27 being (Subset of ( Subformulae R26 ));
let R28 being (Subset of ( Subformulae R26 ));
let R29 being (Subset of ( Subformulae R26 ));
defpred S6[ Nat ] means (for R27 being (Subset of ( Subformulae R26 )) holds (for R28 being (Subset of ( Subformulae R26 )) holds (for R29 being (Subset of ( Subformulae R26 )) holds (( card R28 ) <= $1 implies (R27 = ( R28 \/ R29 ) implies ( len R27 ) <= ( ( len R28 ) + ( len R29 ) ))))));
set D130 = ( card R28 );
L1037: (for B17 being Nat holds (S6[ B17 ] implies S6[ ( B17 + 1 ) ]))
proof
let C30 being Nat;
assume that
L1038: S6[ C30 ];
L1039: S6[ ( C30 + 1 ) ]
proof
let R27 being (Subset of ( Subformulae R26 ));
let R28 being (Subset of ( Subformulae R26 ));
let R29 being (Subset of ( Subformulae R26 ));
assume that
L1040: ( card R28 ) <= ( C30 + 1 );
L1041: (R27 = ( R28 \/ R29 ) implies ( len R27 ) <= ( ( len R28 ) + ( len R29 ) ))
proof
assume L1042: R27 = ( R28 \/ R29 );
L1043:
now
per cases  by L1040 , NAT_1:8;
suppose L1044: ( card R28 ) <= C30;

thus L1045: thesis by L1044 , L1038 , L1042;
end;
suppose L1046: ( card R28 ) = ( C30 + 1 );

L1047: R28 <> ( {} ) by L1046;
consider R11 being set such that L1048: R11 in R28 by L1047 , XBOOLE_0:def 1;
L1049: R11 in ( Subformulae R26 ) by L1048;
reconsider D131 = R11 as LTL-formula by L1049 , MODELC_2:1;
set D132 = { D131 };
set D133 = ( R28 \ D132 );
set D134 = ( D133 \/ R29 );
L1050: D132 c= R28 by L1048 , ZFMISC_1:31;
L1051: ( card D133 ) = ( ( card R28 ) - ( card D132 ) ) by L1050 , CARD_2:44
.= ( ( card R28 ) - 1 ) by CARD_1:30;
L1052: ( ( card D133 ) + 1 ) = ( card R28 ) by L1051;
L1053: ( card D133 ) <= C30 by L1052 , L1040 , XREAL_1:6;
L1054: (D134 = ( D133 \/ R29 ) implies ( len D134 ) <= ( ( len D133 ) + ( len R29 ) )) by L1053 , L1038;
L1055: ( len D134 ) <= ( ( ( len R28 ) - ( len D131 ) ) + ( len R29 ) ) by L1054 , L1048 , L933;
L1056: ( len D134 ) <= ( ( ( len R28 ) + ( len R29 ) ) - ( len D131 ) ) by L1055;
L1057: ( ( len D134 ) + ( len D131 ) ) <= ( ( len R28 ) + ( len R29 ) ) by L1056 , XREAL_1:19;
L1058: ( D134 \/ D132 ) = ( ( D133 \/ D132 ) \/ R29 ) by XBOOLE_1:4
.= ( R28 \/ R29 ) by L1050 , XBOOLE_1:45;
L1059: ( len R27 ) <= ( ( len D134 ) + ( len D131 ) ) by L1058 , L1042 , L943;
thus L1060: thesis by L1059 , L1057 , XXREAL_0:2;
end;
end;
thus L1062: thesis by L1043;
end;
thus L1063: thesis by L1041;
end;
thus L1064: thesis by L1039;
end;
L1065: S6[ ( 0 ) ]
proof
let R27 being (Subset of ( Subformulae R26 ));
let R28 being (Subset of ( Subformulae R26 ));
let R29 being (Subset of ( Subformulae R26 ));
assume L1066: ( card R28 ) <= ( 0 );
L1067: R28 = ( {} R26 ) by L1066;
L1068: ( len R28 ) = ( 0 ) by L1067 , L954;
thus L1069: thesis by L1068 , L1067;
end;
L1070: (for B18 being Nat holds S6[ B18 ]) from NAT_1:sch 2(L1065 , L1037);
L1071: S6[ D130 ] by L1070;
thus L1072: thesis by L1071;
end;
definition
let R30 being LTL-formula;
let R26 being LTL-formula;
assume L1073: R26 in ( Subformulae R30 );
func LTLNew1 (R26 , R30) -> (Subset of ( Subformulae R30 )) equals 
:L1074: ( LTLNew1 R26 );
correctness
proof
L1075: (ex R22 being LTL-formula st (R26 = R22 & R22 is_subformula_of R30)) by L1073 , MODELC_2:def 24;
L1076: ( Subformulae R26 ) c= ( Subformulae R30 ) by L1075 , MODELC_2:46;
thus L1077: thesis by L1076 , XBOOLE_1:1;
end;
func LTLNew2 (R26 , R30) -> (Subset of ( Subformulae R30 )) equals 
:L1078: ( LTLNew2 R26 );
correctness
proof
L1079: (ex R22 being LTL-formula st (R26 = R22 & R22 is_subformula_of R30)) by L1073 , MODELC_2:def 24;
L1080: ( Subformulae R26 ) c= ( Subformulae R30 ) by L1079 , MODELC_2:46;
thus L1081: thesis by L1080 , XBOOLE_1:1;
end;
end;
L1083: (for R26 being LTL-formula holds (for R30 being LTL-formula holds (R26 in ( Subformulae R30 ) implies ( len ( LTLNew1 (R26 , R30) ) ) <= ( ( len R26 ) - 1 ))))
proof
let R26 being LTL-formula;
let R30 being LTL-formula;
set D135 = ( LTLNew1 (R26 , R30) );
set D136 = { ( the_left_argument_of R26 ) };
set D137 = { ( the_right_argument_of R26 ) };
assume L1084: R26 in ( Subformulae R30 );
L1085: D135 = ( LTLNew1 R26 ) by L1084 , L1074;
L1086: (ex R22 being LTL-formula st (R26 = R22 & R22 is_subformula_of R30)) by L1084 , MODELC_2:def 24;
L1087: ( Subformulae R26 ) c= ( Subformulae R30 ) by L1086 , MODELC_2:46;
L1088:
now
per cases ;
suppose L1089: R26 is  conjunctive;

L1090: D137 is (Subset of ( Subformulae R26 )) by L1089 , L57;
reconsider D138 = D137 as (Subset of ( Subformulae R30 )) by L1090 , L1087 , XBOOLE_1:1;
L1091: D136 is (Subset of ( Subformulae R26 )) by L1089 , L57;
reconsider D139 = D136 as (Subset of ( Subformulae R30 )) by L1091 , L1087 , XBOOLE_1:1;
L1092: D135 = { ( the_left_argument_of R26 ) , ( the_right_argument_of R26 ) } by L1085 , L1089 , L69;
L1093: D135 = ( D139 \/ D138 ) by L1092 , ENUMSET1:1;
L1094: ( len D135 ) <= ( ( len D139 ) + ( len D138 ) ) by L1093 , L1036;
L1095: ( len R26 ) = ( ( 1 + ( len ( the_left_argument_of R26 ) ) ) + ( len ( the_right_argument_of R26 ) ) ) by L1089 , MODELC_2:11;
L1096: (( len D139 ) = ( len ( the_left_argument_of R26 ) ) & ( len D138 ) = ( len ( the_right_argument_of R26 ) )) by L958;
thus L1097: thesis by L1096 , L1095 , L1094;
end;
suppose L1098: (R26 is  disjunctive or R26 is  Until);

L1099: D135 = D136 by L1098 , L1085 , L69;
L1100: ( len D135 ) = ( len ( the_left_argument_of R26 ) ) by L1099 , L958;
L1101: ( ( len D135 ) + ( 0 ) ) <= ( ( len ( the_left_argument_of R26 ) ) + ( len ( the_right_argument_of R26 ) ) ) by L1100 , XREAL_1:7;
L1102: ( len R26 ) = ( ( 1 + ( len ( the_left_argument_of R26 ) ) ) + ( len ( the_right_argument_of R26 ) ) ) by L1098 , MODELC_2:11;
thus L1103: thesis by L1102 , L1101;
end;
suppose L1104: R26 is  next;

L1105: 1 <= ( len R26 ) by MODELC_2:3;
L1106: ( 1 - 1 ) <= ( ( len R26 ) - 1 ) by L1105 , XREAL_1:9;
L1107: D135 = ( {} R30 ) by L1085 , L1104 , L69;
thus L1108: thesis by L1107 , L1106 , L954;
end;
suppose L1109: R26 is  Release;

L1110: D135 = D137 by L1109 , L1085 , L69;
L1111: ( len D135 ) = ( len ( the_right_argument_of R26 ) ) by L1110 , L958;
L1112: ( ( len D135 ) + ( 0 ) ) <= ( ( len ( the_left_argument_of R26 ) ) + ( len ( the_right_argument_of R26 ) ) ) by L1111 , XREAL_1:7;
L1113: ( len R26 ) = ( ( 1 + ( len ( the_left_argument_of R26 ) ) ) + ( len ( the_right_argument_of R26 ) ) ) by L1109 , MODELC_2:11;
thus L1114: thesis by L1113 , L1112;
end;
suppose L1115: (not (R26 is  conjunctive or R26 is  disjunctive or R26 is  next or R26 is  Until or R26 is  Release));

L1116: 1 <= ( len R26 ) by MODELC_2:3;
L1117: ( 1 - 1 ) <= ( ( len R26 ) - 1 ) by L1116 , XREAL_1:9;
L1118: D135 = ( {} R30 ) by L1085 , L1115 , L69;
thus L1119: thesis by L1118 , L1117 , L954;
end;
end;
thus L1121: thesis by L1088;
end;
L1122: (for R26 being LTL-formula holds (for R30 being LTL-formula holds (R26 in ( Subformulae R30 ) implies ( len ( LTLNew2 (R26 , R30) ) ) <= ( ( len R26 ) - 1 ))))
proof
let R26 being LTL-formula;
let R30 being LTL-formula;
set D140 = ( LTLNew2 (R26 , R30) );
set D141 = { ( the_left_argument_of R26 ) };
set D142 = { ( the_right_argument_of R26 ) };
assume L1123: R26 in ( Subformulae R30 );
L1124: D140 = ( LTLNew2 R26 ) by L1123 , L1078;
L1125: (ex R22 being LTL-formula st (R26 = R22 & R22 is_subformula_of R30)) by L1123 , MODELC_2:def 24;
L1126: ( Subformulae R26 ) c= ( Subformulae R30 ) by L1125 , MODELC_2:46;
L1127:
now
per cases ;
suppose L1128: R26 is  Release;

L1129: D142 is (Subset of ( Subformulae R26 )) by L1128 , L57;
reconsider D143 = D142 as (Subset of ( Subformulae R30 )) by L1129 , L1126 , XBOOLE_1:1;
L1130: D141 is (Subset of ( Subformulae R26 )) by L1128 , L57;
reconsider D144 = D141 as (Subset of ( Subformulae R30 )) by L1130 , L1126 , XBOOLE_1:1;
L1131: D140 = { ( the_left_argument_of R26 ) , ( the_right_argument_of R26 ) } by L1124 , L1128 , L70;
L1132: D140 = ( D144 \/ D143 ) by L1131 , ENUMSET1:1;
L1133: ( len D140 ) <= ( ( len D144 ) + ( len D143 ) ) by L1132 , L1036;
L1134: ( len R26 ) = ( ( 1 + ( len ( the_left_argument_of R26 ) ) ) + ( len ( the_right_argument_of R26 ) ) ) by L1128 , MODELC_2:11;
L1135: (( len D144 ) = ( len ( the_left_argument_of R26 ) ) & ( len D143 ) = ( len ( the_right_argument_of R26 ) )) by L958;
thus L1136: thesis by L1135 , L1134 , L1133;
end;
suppose L1137: (R26 is  disjunctive or R26 is  Until);

L1138: D140 = D142 by L1137 , L1124 , L70;
L1139: ( len D140 ) = ( len ( the_right_argument_of R26 ) ) by L1138 , L958;
L1140: ( ( len D140 ) + ( 0 ) ) <= ( ( len ( the_left_argument_of R26 ) ) + ( len ( the_right_argument_of R26 ) ) ) by L1139 , XREAL_1:7;
L1141: ( len R26 ) = ( ( 1 + ( len ( the_left_argument_of R26 ) ) ) + ( len ( the_right_argument_of R26 ) ) ) by L1137 , MODELC_2:11;
thus L1142: thesis by L1141 , L1140;
end;
suppose L1143: (R26 is  conjunctive or R26 is  next);

L1144: 1 <= ( len R26 ) by MODELC_2:3;
L1145: ( 1 - 1 ) <= ( ( len R26 ) - 1 ) by L1144 , XREAL_1:9;
L1146: D140 = ( {} R30 ) by L1124 , L1143 , L70;
thus L1147: thesis by L1146 , L1145 , L954;
end;
suppose L1148: (not (R26 is  conjunctive or R26 is  disjunctive or R26 is  next or R26 is  Until or R26 is  Release));

L1149: 1 <= ( len R26 ) by MODELC_2:3;
L1150: ( 1 - 1 ) <= ( ( len R26 ) - 1 ) by L1149 , XREAL_1:9;
L1151: D140 = ( {} R30 ) by L1124 , L1148 , L70;
thus L1152: thesis by L1151 , L1150 , L954;
end;
end;
thus L1154: thesis by L1127;
end;
theorem
L1155: (for R30 being LTL-formula holds (for R32 being  strict LTLnode over R30 holds (for R33 being  strict LTLnode over R30 holds (R33 is_succ1_of R32 implies ( len (the LTLnew of R33) ) <= ( ( len (the LTLnew of R32) ) - 1 )))))
proof
let R30 being LTL-formula;
let R32 being  strict LTLnode over R30;
let R33 being  strict LTLnode over R30;
set D145 = (the LTLnew of R32);
set D146 = (the LTLnew of R33);
assume L1156: R33 is_succ1_of R32;
consider R26 being LTL-formula such that L1157: R26 in D145 and L1158: R33 = ( SuccNode1 (R26 , R32) ) by L1156 , L93;
set D147 = ( D145 \ { R26 } );
set D148 = ( LTLNew1 (R26 , R30) );
set D149 = ( D148 \ (the LTLold of R32) );
reconsider D150 = D147 as (Subset of ( Subformulae R30 ));
reconsider D151 = D149 as (Subset of ( Subformulae R30 ));
L1159: D148 = ( LTLNew1 R26 ) by L1157 , L1074;
L1160: D146 = ( D150 \/ D151 ) by L1159 , L1157 , L1158 , L75;
L1161: ( len D146 ) <= ( ( len D150 ) + ( len D151 ) ) by L1160 , L1036;
reconsider D152 = D145 as (Subset of ( Subformulae R30 ));
L1162: ( len D151 ) <= ( len D148 ) by L982 , XBOOLE_1:36;
L1163: ( len D148 ) <= ( ( len R26 ) - 1 ) by L1157 , L1083;
L1164: ( len D151 ) <= ( ( len R26 ) - 1 ) by L1163 , L1162 , XXREAL_0:2;
L1165: ( ( len D150 ) + ( len D151 ) ) <= ( ( len D150 ) + ( ( len R26 ) - 1 ) ) by L1164 , XREAL_1:6;
L1166: ( len D150 ) = ( ( len D152 ) - ( len R26 ) ) by L1157 , L933;
thus L1167: thesis by L1166 , L1165 , L1161 , XXREAL_0:2;
end;
theorem
L1168: (for R30 being LTL-formula holds (for R32 being  strict LTLnode over R30 holds (for R33 being  strict LTLnode over R30 holds (R33 is_succ2_of R32 implies ( len (the LTLnew of R33) ) <= ( ( len (the LTLnew of R32) ) - 1 )))))
proof
let R30 being LTL-formula;
let R32 being  strict LTLnode over R30;
let R33 being  strict LTLnode over R30;
set D153 = (the LTLnew of R32);
set D154 = (the LTLnew of R33);
assume L1169: R33 is_succ2_of R32;
consider R26 being LTL-formula such that L1170: R26 in D153 and L1171: (R26 is  disjunctive or R26 is  Until or R26 is  Release) and L1172: R33 = ( SuccNode2 (R26 , R32) ) by L1169 , L94;
set D155 = ( D153 \ { R26 } );
set D156 = ( LTLNew2 (R26 , R30) );
set D157 = ( D156 \ (the LTLold of R32) );
reconsider D158 = D155 as (Subset of ( Subformulae R30 ));
reconsider D159 = D157 as (Subset of ( Subformulae R30 ));
L1173: D156 = ( LTLNew2 R26 ) by L1170 , L1078;
L1174: D154 = ( D158 \/ D159 ) by L1173 , L1170 , L1172 , L84;
L1175: ( len D154 ) <= ( ( len D158 ) + ( len D159 ) ) by L1174 , L1036;
reconsider D160 = D153 as (Subset of ( Subformulae R30 ));
L1176: ( len D159 ) <= ( len D156 ) by L982 , XBOOLE_1:36;
L1177: ( len D156 ) <= ( ( len R26 ) - 1 ) by L1170 , L1122;
L1178: ( len D159 ) <= ( ( len R26 ) - 1 ) by L1177 , L1176 , XXREAL_0:2;
L1179: ( ( len D158 ) + ( len D159 ) ) <= ( ( len D158 ) + ( ( len R26 ) - 1 ) ) by L1178 , XREAL_1:6;
L1180: ( len D158 ) = ( ( len D160 ) - ( len R26 ) ) by L1170 , L933;
thus L1181: thesis by L1180 , L1179 , L1175 , XXREAL_0:2;
end;
definition
let R30 being LTL-formula;
let R31 being  strict LTLnode over R30;
func len R31 -> Nat equals 
[\ ( len (the LTLnew of R31) ) /];
correctness
proof
L1182: ( len (the LTLnew of R31) ) >= ( 0 ) by L1028;
thus L1183: thesis by L1182 , INT_1:53;
end;
end;
theorem
L1185: (for R30 being LTL-formula holds (for R32 being  strict LTLnode over R30 holds (for R33 being  strict LTLnode over R30 holds (R33 is_succ_of R32 implies ( len R33 ) <= ( ( len R32 ) - 1 )))))
proof
let R30 being LTL-formula;
let R32 being  strict LTLnode over R30;
let R33 being  strict LTLnode over R30;
set D161 = ( len (the LTLnew of R32) );
set D162 = ( len (the LTLnew of R33) );
assume L1186: R33 is_succ_of R32;
L1187: (R33 is_succ1_of R32 or R33 is_succ2_of R32) by L1186 , L96;
L1188: D162 <= ( D161 - 1 ) by L1187 , L1155 , L1168;
thus L1189: thesis by L1188 , L21;
end;
theorem
L1190: (for R30 being LTL-formula holds (for R31 being  strict LTLnode over R30 holds (( len R31 ) <= ( 0 ) implies (the LTLnew of R31) = ( {} R30 ))))
proof
let R30 being LTL-formula;
let R31 being  strict LTLnode over R30;
assume L1191: ( len R31 ) <= ( 0 );
L1192: ( ( len (the LTLnew of R31) ) - 1 ) < [\ ( len (the LTLnew of R31) ) /] by INT_1:def 6;
L1193: ( ( ( len (the LTLnew of R31) ) - 1 ) + 1 ) < ( ( 0 ) + 1 ) by L1192 , L1191 , XREAL_1:8;
thus L1194: thesis by L1193 , L1015;
end;
theorem
L1195: (for R30 being LTL-formula holds (for R31 being  strict LTLnode over R30 holds (( len R31 ) > ( 0 ) implies (the LTLnew of R31) <> ( {} R30 ))))
proof
let R30 being LTL-formula;
let R31 being  strict LTLnode over R30;
assume L1196: ( len R31 ) > ( 0 );
L1197:
now
assume L1198: (the LTLnew of R31) = ( {} R30 );
L1199: ( len (the LTLnew of R31) ) = ( 0 ) by L1198 , L954;
thus L1200: contradiction by L1199 , L1196 , INT_1:25;
end;
thus L1201: thesis by L1197;
end;
theorem
L1202: (for R30 being LTL-formula holds (for R31 being  strict LTLnode over R30 holds (ex R2 being Nat st (ex R19 being FinSequence st (ex R36 being  strict LTLnode over R30 st (1 <= R2 & ( len R19 ) = R2 & ( R19 . 1 ) = R31 & ( R19 . R2 ) = R36 & (the LTLnew of R36) = ( {} R30 ) & R19 is_Finseq_for R30))))))
proof
let R30 being LTL-formula;
let R31 being  strict LTLnode over R30;
defpred S7[ Nat ] means (for R31 being  strict LTLnode over R30 holds (( len R31 ) <= $1 implies (ex R2 being Nat st (ex R19 being FinSequence st (ex R36 being  strict LTLnode over R30 st (1 <= R2 & ( len R19 ) = R2 & ( R19 . 1 ) = R31 & ( R19 . R2 ) = R36 & (the LTLnew of R36) = ( {} R30 ) & R19 is_Finseq_for R30))))));
L1203: (for B19 being Nat holds (S7[ B19 ] implies S7[ ( B19 + 1 ) ]))
proof
let C31 being Nat;
assume that
L1204: S7[ C31 ];
L1205: S7[ ( C31 + 1 ) ]
proof
let R31 being  strict LTLnode over R30;
L1206: (( len R31 ) <= ( C31 + 1 ) implies (ex R2 being Nat st (ex R19 being FinSequence st (ex R36 being  strict LTLnode over R30 st (1 <= R2 & ( len R19 ) = R2 & ( R19 . 1 ) = R31 & ( R19 . R2 ) = R36 & (the LTLnew of R36) = ( {} R30 ) & R19 is_Finseq_for R30)))))
proof
assume L1207: ( len R31 ) <= ( C31 + 1 );
L1208: (ex R2 being Nat st (ex R19 being FinSequence st (ex R36 being  strict LTLnode over R30 st (1 <= R2 & ( len R19 ) = R2 & ( R19 . 1 ) = R31 & ( R19 . R2 ) = R36 & (the LTLnew of R36) = ( {} R30 ) & R19 is_Finseq_for R30))))
proof
set D163 = (the LTLnew of R31);
L1209:
now
per cases  by L1207 , NAT_1:8;
suppose L1210: ( len R31 ) <= C31;

thus L1211: thesis by L1210 , L1204;
end;
suppose L1212: ( len R31 ) = ( C31 + 1 );

L1213: D163 <> ( {} R30 ) by L1212 , L1195;
consider R11 being set such that L1214: R11 in D163 by L1213 , XBOOLE_0:def 1;
L1215: R11 in ( Subformulae R30 ) by L1214;
reconsider D164 = R11 as LTL-formula by L1215 , MODELC_2:1;
set D165 = ( SuccNode1 (D164 , R31) );
L1216: D165 is_succ1_of R31 by L1214 , L93;
L1217: D165 is_succ_of R31 by L1216 , L96;
L1218: ( len D165 ) <= ( ( len R31 ) - 1 ) by L1217 , L1185;
consider R2 being Nat, R19 being FinSequence, R36 being  strict LTLnode over R30 such that L1219: 1 <= R2 and L1220: ( len R19 ) = R2 and L1221: ( R19 . 1 ) = D165 and L1222: ( R19 . R2 ) = R36 and L1223: (the LTLnew of R36) = ( {} R30 ) and L1224: R19 is_Finseq_for R30 by L1218 , L1204 , L1212;
set D166 = ( <* R31 *> ^ R19 );
set D167 = ( R2 + 1 );
L1225: ( len D166 ) = ( ( len <* R31 *> ) + ( len R19 ) ) by FINSEQ_1:22
.= D167 by L1220 , FINSEQ_1:39;
L1226: D166 is_Finseq_for R30
proof
let R1 being Nat;
assume that
L1227: 1 <= R1
and
L1228: R1 < ( len D166 );
L1229: ( R1 + 1 ) <= ( len D166 ) by L1228 , NAT_1:13;
L1230: (ex R32 being  strict LTLnode over R30 st (ex R33 being  strict LTLnode over R30 st (( D166 . R1 ) = R32 & ( D166 . ( R1 + 1 ) ) = R33 & R33 is_succ_of R32)))
proof
set D168 = ( D166 . ( R1 + 1 ) );
set D169 = ( D166 . R1 );
L1231:
now
per cases ;
suppose L1232: R1 <= 1;

L1233: R1 = 1 by L1232 , L1227 , XXREAL_0:1;
reconsider D170 = D169 as  strict LTLnode over R30 by L1233 , FINSEQ_1:41;
L1234: ( len <* R31 *> ) = 1 by FINSEQ_1:39;
L1235: D168 = ( R19 . ( 2 - 1 ) ) by L1234 , L1229 , L1233 , FINSEQ_1:24
.= D165 by L1221;
reconsider D171 = D168 as  strict LTLnode over R30 by L1235;
take D172 = D170;
take D173 = D171;
thus L1236: thesis by L1217 , L1233 , L1235 , FINSEQ_1:41;
end;
suppose L1237: 1 < R1;

set D174 = ( R1 - 1 );
reconsider D175 = D174 as Nat by L1237 , NAT_1:20;
L1238: 1 < ( D175 + 1 ) by L1237;
L1239: 1 <= D175 by L1238 , NAT_1:13;
L1240: ( len <* R31 *> ) < R1 by L1237 , FINSEQ_1:39;
L1241: D169 = ( R19 . ( R1 - ( len <* R31 *> ) ) ) by L1240 , L1228 , FINSEQ_1:24
.= ( R19 . D175 ) by FINSEQ_1:39;
L1242: R1 <= ( R1 + 1 ) by NAT_1:11;
L1243: ( len <* R31 *> ) < ( R1 + 1 ) by L1242 , L1240 , XXREAL_0:2;
L1244: D168 = ( R19 . ( ( R1 + 1 ) - ( len <* R31 *> ) ) ) by L1243 , L1229 , FINSEQ_1:24
.= ( R19 . ( ( R1 + 1 ) - 1 ) ) by FINSEQ_1:39
.= ( R19 . ( D175 + 1 ) );
L1245: D175 < ( D167 - 1 ) by L1225 , L1228 , XREAL_1:14;
L1246: (ex R34 being  strict LTLnode over R30 st (ex R35 being  strict LTLnode over R30 st (( R19 . D175 ) = R34 & ( R19 . ( D175 + 1 ) ) = R35 & R35 is_succ_of R34))) by L1245 , L1220 , L1224 , L1239 , L111;
reconsider D176 = D169 as  strict LTLnode over R30 by L1246 , L1241;
reconsider D177 = D168 as  strict LTLnode over R30 by L1244 , L1246;
take D178 = D176;
take D179 = D177;
thus L1247: thesis by L1220 , L1224 , L1239 , L1245 , L1241 , L1244 , L111;
end;
end;
thus L1249: thesis by L1231;
end;
thus L1250: thesis by L1230;
end;
L1251: ( len <* R31 *> ) = 1 by FINSEQ_1:39;
L1252: ( D166 . 1 ) = R31 by FINSEQ_1:41;
L1253: 1 < D167 by L1219 , NAT_1:13;
L1254: ( D166 . D167 ) = ( R19 . ( D167 - 1 ) ) by L1253 , L1225 , L1251 , FINSEQ_1:24
.= R36 by L1222;
thus L1255: thesis by L1254 , L1223 , L1225 , L1252 , L1226 , NAT_1:11;
end;
end;
thus L1257: thesis by L1209;
end;
thus L1258: thesis by L1208;
end;
thus L1259: thesis by L1206;
end;
thus L1260: thesis by L1205;
end;
set D180 = ( len R31 );
reconsider D181 = D180 as Nat;
L1261: S7[ ( 0 ) ]
proof
let R31 being  strict LTLnode over R30;
L1262: (( len R31 ) <= ( 0 ) implies (ex R2 being Nat st (ex R19 being FinSequence st (ex R36 being  strict LTLnode over R30 st (1 <= R2 & ( len R19 ) = R2 & ( R19 . 1 ) = R31 & ( R19 . R2 ) = R36 & (the LTLnew of R36) = ( {} R30 ) & R19 is_Finseq_for R30)))))
proof
set D182 = 1;
set D183 = R31;
assume L1263: ( len R31 ) <= ( 0 );
take D182;
set D184 = <* D183 *>;
take D184;
take D183;
L1264: (for R1 being Nat holds ((1 <= R1 & R1 < ( len D184 )) implies (ex R32 being  strict LTLnode over R30 st (ex R33 being  strict LTLnode over R30 st (( D184 . R1 ) = R32 & ( D184 . ( R1 + 1 ) ) = R33 & R33 is_succ_of R32))))) by FINSEQ_1:39;
thus L1265: thesis by L1264 , L1263 , L111 , L1190 , FINSEQ_1:40;
end;
thus L1266: thesis by L1262;
end;
L1267: (for B20 being Nat holds S7[ B20 ]) from NAT_1:sch 2(L1261 , L1203);
L1268: S7[ D181 ] by L1267;
thus L1269: thesis by L1268;
end;
theorem
L1270: (for R30 being LTL-formula holds (for R32 being  strict LTLnode over R30 holds (for R33 being  strict LTLnode over R30 holds (R33 is_succ_of R32 implies ((the LTLold of R32) c= (the LTLold of R33) & (the LTLnext of R32) c= (the LTLnext of R33))))))
proof
let R30 being LTL-formula;
let R32 being  strict LTLnode over R30;
let R33 being  strict LTLnode over R30;
assume L1271: R33 is_succ_of R32;
L1272:
now
per cases  by L1271 , L96;
suppose L1273: R33 is_succ1_of R32;

consider R26 being LTL-formula such that L1274: (R26 in (the LTLnew of R32) & R33 = ( SuccNode1 (R26 , R32) )) by L1273 , L93;
L1275: ((the LTLold of R33) = ( (the LTLold of R32) \/ { R26 } ) & (the LTLnext of R33) = ( (the LTLnext of R32) \/ ( LTLNext R26 ) )) by L1274 , L75;
thus L1276: thesis by L1275 , XBOOLE_1:7;
end;
suppose L1277: R33 is_succ2_of R32;

consider R26 being LTL-formula such that L1278: R26 in (the LTLnew of R32) and L1279: (R26 is  disjunctive or R26 is  Until or R26 is  Release) and L1280: R33 = ( SuccNode2 (R26 , R32) ) by L1277 , L94;
L1281: (the LTLold of R33) = ( (the LTLold of R32) \/ { R26 } ) by L1278 , L1280 , L84;
thus L1282: thesis by L1281 , L1278 , L1280 , L84 , XBOOLE_1:7;
end;
end;
thus L1284: thesis by L1272;
end;
theorem
L1285: (for R4 being Nat holds (for R19 being FinSequence holds (for R20 being FinSequence holds (for R30 being LTL-formula holds ((R19 is_Finseq_for R30 & R4 <= ( len R19 ) & R20 = ( R19 | ( Seg R4 ) )) implies R20 is_Finseq_for R30)))))
proof
let R4 being Nat;
let R19 being FinSequence;
let R20 being FinSequence;
let R30 being LTL-formula;
assume that
L1286: R19 is_Finseq_for R30
and
L1287: R4 <= ( len R19 )
and
L1288: R20 = ( R19 | ( Seg R4 ) );
reconsider D185 = R20 as FinSequence;
L1289: ( len D185 ) = R4 by L1287 , L1288 , FINSEQ_1:17;
L1290: ( dom D185 ) = ( Seg R4 ) by L1287 , L1288 , FINSEQ_1:17;
L1291: (for R1 being Nat holds ((1 <= R1 & R1 < ( len D185 )) implies (ex R32 being  strict LTLnode over R30 st (ex R33 being  strict LTLnode over R30 st (R32 = ( D185 . R1 ) & R33 = ( D185 . ( R1 + 1 ) ) & R33 is_succ_of R32)))))
proof
let R1 being Nat;
assume that
L1292: 1 <= R1
and
L1293: R1 < ( len D185 );
L1294: R1 in ( dom D185 ) by L1289 , L1290 , L1292 , L1293 , FINSEQ_1:1;
L1295: ( D185 . R1 ) = ( R19 . R1 ) by L1294 , L1288 , FUNCT_1:47;
L1296: (1 <= ( R1 + 1 ) & ( R1 + 1 ) <= R4) by L1289 , L1292 , L1293 , NAT_1:13;
L1297: ( R1 + 1 ) in ( dom D185 ) by L1296 , L1290 , FINSEQ_1:1;
L1298: ( D185 . ( R1 + 1 ) ) = ( R19 . ( R1 + 1 ) ) by L1297 , L1288 , FUNCT_1:47;
L1299: R1 < ( len R19 ) by L1287 , L1289 , L1293 , XXREAL_0:2;
thus L1300: thesis by L1299 , L1286 , L1292 , L1295 , L1298 , L111;
end;
thus L1301: thesis by L1291 , L111;
end;
theorem
L1302: (for R2 being Nat holds (for R19 being FinSequence holds (for R22 being LTL-formula holds (for R30 being LTL-formula holds ((R19 is_Finseq_for R30 & (not R22 in (the LTLold of ( CastNode (( R19 . 1 ) , R30) ))) & 1 < R2 & R2 <= ( len R19 ) & R22 in (the LTLold of ( CastNode (( R19 . R2 ) , R30) ))) implies (ex R4 being Nat st (1 <= R4 & R4 < R2 & (not R22 in (the LTLold of ( CastNode (( R19 . R4 ) , R30) ))) & R22 in (the LTLold of ( CastNode (( R19 . ( R4 + 1 ) ) , R30) )))))))))
proof
let R2 being Nat;
let R19 being FinSequence;
let R22 being LTL-formula;
let R30 being LTL-formula;
assume L1303: (R19 is_Finseq_for R30 & (not R22 in (the LTLold of ( CastNode (( R19 . 1 ) , R30) ))) & 1 < R2 & R2 <= ( len R19 ) & R22 in (the LTLold of ( CastNode (( R19 . R2 ) , R30) )));
defpred S8[ Nat ] means (for R23 being LTL-formula holds (for R3 being Nat holds (for R20 being FinSequence holds (( len R20 ) <= $1 implies ((R20 is_Finseq_for R30 & (not R23 in (the LTLold of ( CastNode (( R20 . 1 ) , R30) ))) & 1 < R3 & R3 <= ( len R20 ) & R23 in (the LTLold of ( CastNode (( R20 . R3 ) , R30) ))) implies (ex R4 being Nat st (1 <= R4 & R4 < R3 & (not R23 in (the LTLold of ( CastNode (( R20 . R4 ) , R30) ))) & R23 in (the LTLold of ( CastNode (( R20 . ( R4 + 1 ) ) , R30) )))))))));
L1304: (for B21 being Nat holds (S8[ B21 ] implies S8[ ( B21 + 1 ) ]))
proof
let R1 being Nat;
assume that
L1305: S8[ R1 ];
L1306: S8[ ( R1 + 1 ) ]
proof
let R23 being LTL-formula;
let R3 being Nat;
let R20 being FinSequence;
assume that
L1307: ( len R20 ) <= ( R1 + 1 );
L1308:
now
per cases  by L1307 , NAT_1:8;
suppose L1309: ( len R20 ) <= R1;

thus L1310: thesis by L1309 , L1305;
end;
suppose L1311: ( len R20 ) = ( R1 + 1 );

L1312: ((R20 is_Finseq_for R30 & (not R23 in (the LTLold of ( CastNode (( R20 . 1 ) , R30) ))) & 1 < R3 & R3 <= ( len R20 ) & R23 in (the LTLold of ( CastNode (( R20 . R3 ) , R30) ))) implies (ex R4 being Nat st (1 <= R4 & R4 < R3 & (not R23 in (the LTLold of ( CastNode (( R20 . R4 ) , R30) ))) & R23 in (the LTLold of ( CastNode (( R20 . ( R4 + 1 ) ) , R30) )))))
proof
assume that
L1313: R20 is_Finseq_for R30
and
L1314: (not R23 in (the LTLold of ( CastNode (( R20 . 1 ) , R30) )))
and
L1315: 1 < R3
and
L1316: R3 <= ( len R20 )
and
L1317: R23 in (the LTLold of ( CastNode (( R20 . R3 ) , R30) ));
L1318:
now
per cases  by L1311 , L1316 , NAT_1:8;
suppose L1319: R3 <= R1;

set D186 = ( R20 | ( Seg R1 ) );
reconsider D187 = D186 as FinSequence by FINSEQ_1:15;
L1320: ( R1 + ( 0 ) ) <= ( R1 + 1 ) by XREAL_1:7;
L1321: ( dom D187 ) = ( Seg R1 ) by L1320 , L1311 , FINSEQ_1:17;
L1322: R3 in ( dom D187 ) by L1321 , L1315 , L1319 , FINSEQ_1:1;
L1323: ( D187 . R3 ) = ( R20 . R3 ) by L1322 , FUNCT_1:47;
L1324: 1 < R1 by L1315 , L1319 , XXREAL_0:2;
L1325: 1 in ( dom D187 ) by L1324 , L1321 , FINSEQ_1:1;
L1326: (not R23 in (the LTLold of ( CastNode (( D187 . 1 ) , R30) ))) by L1325 , L1314 , FUNCT_1:47;
L1327: (( len D187 ) = R1 & D187 is_Finseq_for R30) by L1311 , L1313 , L1320 , L1285 , FINSEQ_1:17;
consider R4 being Nat such that L1328: 1 <= R4 and L1329: R4 < R3 and L1330: ((not R23 in (the LTLold of ( CastNode (( D187 . R4 ) , R30) ))) & R23 in (the LTLold of ( CastNode (( D187 . ( R4 + 1 ) ) , R30) ))) by L1327 , L1305 , L1315 , L1317 , L1319 , L1326 , L1323;
L1331: ( R4 + 1 ) <= R3 by L1329 , NAT_1:13;
L1332: ( R4 + 1 ) <= R1 by L1331 , L1319 , XXREAL_0:2;
L1333: 1 <= ( R4 + 1 ) by L1328 , NAT_1:13;
L1334: ( R4 + 1 ) in ( dom D187 ) by L1333 , L1321 , L1332 , FINSEQ_1:1;
L1335: ( D187 . ( R4 + 1 ) ) = ( R20 . ( R4 + 1 ) ) by L1334 , FUNCT_1:47;
L1336: R4 <= R1 by L1319 , L1329 , XXREAL_0:2;
L1337: R4 in ( dom D187 ) by L1336 , L1321 , L1328 , FINSEQ_1:1;
L1338: ( D187 . R4 ) = ( R20 . R4 ) by L1337 , FUNCT_1:47;
thus L1339: thesis by L1338 , L1328 , L1329 , L1330 , L1335;
end;
suppose L1340: R3 = ( R1 + 1 );

L1341: 1 <= R1 by L1340 , L1315 , NAT_1:13;
L1342: ( R1 + ( 0 ) ) < ( R1 + 1 ) by XREAL_1:8;
L1343:
now
per cases ;
suppose L1344: (not R23 in (the LTLold of ( CastNode (( R20 . R1 ) , R30) )));

thus L1345: thesis by L1344 , L1317 , L1340 , L1342 , L1341;
end;
suppose L1346: R23 in (the LTLold of ( CastNode (( R20 . R1 ) , R30) ));

L1347: 1 < R1
proof
set D188 = ( 1 - R1 );
set D189 = ( R1 - 1 );
L1348: (( D189 + D188 ) = ( 0 ) & ( 1 - 1 ) <= ( R1 - 1 )) by L1341 , XREAL_1:9;
L1349:
now
assume L1350: R1 <= 1;
L1351: ( 1 - 1 ) <= ( 1 - R1 ) by L1350 , XREAL_1:10;
L1352: D189 = ( 0 ) by L1351 , L1348;
thus L1353: contradiction by L1352 , L1314 , L1346;
end;
thus L1354: thesis by L1349;
end;
set D190 = ( R20 | ( Seg R1 ) );
reconsider D191 = D190 as FinSequence by FINSEQ_1:15;
L1355: ( R1 + ( 0 ) ) <= ( R1 + 1 ) by XREAL_1:7;
L1356: ( dom D191 ) = ( Seg R1 ) by L1355 , L1311 , FINSEQ_1:17;
L1357: R1 in ( dom D191 ) by L1356 , L1341 , FINSEQ_1:1;
L1358: R23 in (the LTLold of ( CastNode (( D191 . R1 ) , R30) )) by L1357 , L1346 , FUNCT_1:47;
L1359: 1 in ( dom D191 ) by L1341 , L1356 , FINSEQ_1:1;
L1360: (not R23 in (the LTLold of ( CastNode (( D191 . 1 ) , R30) ))) by L1359 , L1314 , FUNCT_1:47;
L1361: (( len D191 ) = R1 & D191 is_Finseq_for R30) by L1311 , L1313 , L1355 , L1285 , FINSEQ_1:17;
consider R4 being Nat such that L1362: 1 <= R4 and L1363: R4 < R1 and L1364: (not R23 in (the LTLold of ( CastNode (( D191 . R4 ) , R30) ))) and L1365: R23 in (the LTLold of ( CastNode (( D191 . ( R4 + 1 ) ) , R30) )) by L1361 , L1305 , L1360 , L1358 , L1347;
L1366: R4 in ( dom D191 ) by L1356 , L1362 , L1363 , FINSEQ_1:1;
L1367: (not R23 in (the LTLold of ( CastNode (( R20 . R4 ) , R30) ))) by L1366 , L1364 , FUNCT_1:47;
L1368: (1 <= ( R4 + 1 ) & ( R4 + 1 ) <= R1) by L1362 , L1363 , NAT_1:13;
L1369: ( R4 + 1 ) in ( dom D191 ) by L1368 , L1356 , FINSEQ_1:1;
L1370: ( D191 . ( R4 + 1 ) ) = ( R20 . ( R4 + 1 ) ) by L1369 , FUNCT_1:47;
L1371: R4 < R3 by L1340 , L1342 , L1363 , XXREAL_0:2;
thus L1372: thesis by L1371 , L1362 , L1365 , L1367 , L1370;
end;
end;
thus L1374: thesis by L1343;
end;
end;
thus L1376: thesis by L1318;
end;
thus L1377: thesis by L1312;
end;
end;
thus L1379: thesis by L1308;
end;
thus L1380: thesis by L1306;
end;
L1381: S8[ ( 0 ) ];
L1382: (for B22 being Nat holds S8[ B22 ]) from NAT_1:sch 2(L1381 , L1304);
thus L1383: thesis by L1382 , L1303;
end;
theorem
L1384: (for R22 being LTL-formula holds (for R30 being LTL-formula holds (for R32 being  strict LTLnode over R30 holds (for R33 being  strict LTLnode over R30 holds ((R33 is_succ_of R32 & (not R22 in (the LTLold of R32)) & R22 in (the LTLold of R33)) implies R33 is_succ_of R32 , R22)))))
proof
let R22 being LTL-formula;
let R30 being LTL-formula;
let R32 being  strict LTLnode over R30;
let R33 being  strict LTLnode over R30;
assume that
L1385: R33 is_succ_of R32
and
L1386: (not R22 in (the LTLold of R32))
and
L1387: R22 in (the LTLold of R33);
L1388:
now
per cases  by L1385 , L96;
suppose L1389: R33 is_succ1_of R32;

consider R26 being LTL-formula such that L1390: (R26 in (the LTLnew of R32) & R33 = ( SuccNode1 (R26 , R32) )) by L1389 , L93;
L1391: (the LTLold of R33) = ( (the LTLold of R32) \/ { R26 } ) by L1390 , L75;
L1392: (R22 in (the LTLold of R32) or R22 in { R26 }) by L1391 , L1387 , XBOOLE_0:def 3;
L1393: R22 = R26 by L1392 , L1386 , TARSKI:def 1;
thus L1394: thesis by L1393 , L1390 , L91;
end;
suppose L1395: R33 is_succ2_of R32;

consider R26 being LTL-formula such that L1396: R26 in (the LTLnew of R32) and L1397: (R26 is  disjunctive or R26 is  Until or R26 is  Release) and L1398: R33 = ( SuccNode2 (R26 , R32) ) by L1395 , L94;
L1399: (the LTLold of R33) = ( (the LTLold of R32) \/ { R26 } ) by L1396 , L1398 , L84;
L1400: (R22 in (the LTLold of R32) or R22 in { R26 }) by L1399 , L1387 , XBOOLE_0:def 3;
L1401: R22 = R26 by L1400 , L1386 , TARSKI:def 1;
thus L1402: thesis by L1401 , L1396 , L1397 , L1398 , L91;
end;
end;
thus L1404: thesis by L1388;
end;
theorem
L1405: (for R2 being Nat holds (for R19 being FinSequence holds (for R22 being LTL-formula holds (for R30 being LTL-formula holds ((R19 is_Finseq_for R30 & R22 in (the LTLnew of ( CastNode (( R19 . 1 ) , R30) )) & 1 < R2 & R2 <= ( len R19 ) & (not R22 in (the LTLnew of ( CastNode (( R19 . R2 ) , R30) )))) implies (ex R4 being Nat st (1 <= R4 & R4 < R2 & R22 in (the LTLnew of ( CastNode (( R19 . R4 ) , R30) )) & (not R22 in (the LTLnew of ( CastNode (( R19 . ( R4 + 1 ) ) , R30) ))))))))))
proof
let R2 being Nat;
let R19 being FinSequence;
let R22 being LTL-formula;
let R30 being LTL-formula;
assume L1406: (R19 is_Finseq_for R30 & R22 in (the LTLnew of ( CastNode (( R19 . 1 ) , R30) )) & 1 < R2 & R2 <= ( len R19 ) & (not R22 in (the LTLnew of ( CastNode (( R19 . R2 ) , R30) ))));
defpred S9[ Nat ] means (for R23 being LTL-formula holds (for R3 being Nat holds (for R20 being FinSequence holds (( len R20 ) <= $1 implies ((R20 is_Finseq_for R30 & R23 in (the LTLnew of ( CastNode (( R20 . 1 ) , R30) )) & 1 < R3 & R3 <= ( len R20 ) & (not R23 in (the LTLnew of ( CastNode (( R20 . R3 ) , R30) )))) implies (ex R4 being Nat st (1 <= R4 & R4 < R3 & R23 in (the LTLnew of ( CastNode (( R20 . R4 ) , R30) )) & (not R23 in (the LTLnew of ( CastNode (( R20 . ( R4 + 1 ) ) , R30) ))))))))));
L1407: (for B23 being Nat holds (S9[ B23 ] implies S9[ ( B23 + 1 ) ]))
proof
let R1 being Nat;
assume that
L1408: S9[ R1 ];
L1409: S9[ ( R1 + 1 ) ]
proof
let R23 being LTL-formula;
let R3 being Nat;
let R20 being FinSequence;
assume that
L1410: ( len R20 ) <= ( R1 + 1 );
L1411:
now
per cases  by L1410 , NAT_1:8;
suppose L1412: ( len R20 ) <= R1;

thus L1413: thesis by L1412 , L1408;
end;
suppose L1414: ( len R20 ) = ( R1 + 1 );

L1415: ((R20 is_Finseq_for R30 & R23 in (the LTLnew of ( CastNode (( R20 . 1 ) , R30) )) & 1 < R3 & R3 <= ( len R20 ) & (not R23 in (the LTLnew of ( CastNode (( R20 . R3 ) , R30) )))) implies (ex R4 being Nat st (1 <= R4 & R4 < R3 & R23 in (the LTLnew of ( CastNode (( R20 . R4 ) , R30) )) & (not R23 in (the LTLnew of ( CastNode (( R20 . ( R4 + 1 ) ) , R30) ))))))
proof
assume that
L1416: R20 is_Finseq_for R30
and
L1417: R23 in (the LTLnew of ( CastNode (( R20 . 1 ) , R30) ))
and
L1418: 1 < R3
and
L1419: R3 <= ( len R20 )
and
L1420: (not R23 in (the LTLnew of ( CastNode (( R20 . R3 ) , R30) )));
L1421:
now
per cases  by L1414 , L1419 , NAT_1:8;
suppose L1422: R3 <= R1;

set D192 = ( R20 | ( Seg R1 ) );
reconsider D193 = D192 as FinSequence by FINSEQ_1:15;
L1423: ( R1 + ( 0 ) ) <= ( R1 + 1 ) by XREAL_1:7;
L1424: ( dom D193 ) = ( Seg R1 ) by L1423 , L1414 , FINSEQ_1:17;
L1425: R3 in ( dom D193 ) by L1424 , L1418 , L1422 , FINSEQ_1:1;
L1426: ( D193 . R3 ) = ( R20 . R3 ) by L1425 , FUNCT_1:47;
L1427: 1 < R1 by L1418 , L1422 , XXREAL_0:2;
L1428: 1 in ( dom D193 ) by L1427 , L1424 , FINSEQ_1:1;
L1429: R23 in (the LTLnew of ( CastNode (( D193 . 1 ) , R30) )) by L1428 , L1417 , FUNCT_1:47;
L1430: (( len D193 ) = R1 & D193 is_Finseq_for R30) by L1414 , L1416 , L1423 , L1285 , FINSEQ_1:17;
consider R4 being Nat such that L1431: 1 <= R4 and L1432: R4 < R3 and L1433: (R23 in (the LTLnew of ( CastNode (( D193 . R4 ) , R30) )) & (not R23 in (the LTLnew of ( CastNode (( D193 . ( R4 + 1 ) ) , R30) )))) by L1430 , L1408 , L1418 , L1420 , L1422 , L1429 , L1426;
L1434: ( R4 + 1 ) <= R3 by L1432 , NAT_1:13;
L1435: ( R4 + 1 ) <= R1 by L1434 , L1422 , XXREAL_0:2;
L1436: 1 <= ( R4 + 1 ) by L1431 , NAT_1:13;
L1437: ( R4 + 1 ) in ( dom D193 ) by L1436 , L1424 , L1435 , FINSEQ_1:1;
L1438: ( D193 . ( R4 + 1 ) ) = ( R20 . ( R4 + 1 ) ) by L1437 , FUNCT_1:47;
L1439: R4 <= R1 by L1422 , L1432 , XXREAL_0:2;
L1440: R4 in ( dom D193 ) by L1439 , L1424 , L1431 , FINSEQ_1:1;
L1441: ( D193 . R4 ) = ( R20 . R4 ) by L1440 , FUNCT_1:47;
thus L1442: thesis by L1441 , L1431 , L1432 , L1433 , L1438;
end;
suppose L1443: R3 = ( R1 + 1 );

L1444: 1 <= R1 by L1443 , L1418 , NAT_1:13;
L1445: ( R1 + ( 0 ) ) < ( R1 + 1 ) by XREAL_1:8;
L1446:
now
per cases ;
suppose L1447: R23 in (the LTLnew of ( CastNode (( R20 . R1 ) , R30) ));

thus L1448: thesis by L1447 , L1420 , L1443 , L1445 , L1444;
end;
suppose L1449: (not R23 in (the LTLnew of ( CastNode (( R20 . R1 ) , R30) )));

L1450: 1 < R1
proof
set D194 = ( 1 - R1 );
set D195 = ( R1 - 1 );
L1451: (( D195 + D194 ) = ( 0 ) & ( 1 - 1 ) <= ( R1 - 1 )) by L1444 , XREAL_1:9;
L1452:
now
assume L1453: R1 <= 1;
L1454: ( 1 - 1 ) <= ( 1 - R1 ) by L1453 , XREAL_1:10;
L1455: D195 = ( 0 ) by L1454 , L1451;
thus L1456: contradiction by L1455 , L1417 , L1449;
end;
thus L1457: thesis by L1452;
end;
set D196 = ( R20 | ( Seg R1 ) );
reconsider D197 = D196 as FinSequence by FINSEQ_1:15;
L1458: ( R1 + ( 0 ) ) <= ( R1 + 1 ) by XREAL_1:7;
L1459: ( dom D197 ) = ( Seg R1 ) by L1458 , L1414 , FINSEQ_1:17;
L1460: R1 in ( dom D197 ) by L1459 , L1444 , FINSEQ_1:1;
L1461: (not R23 in (the LTLnew of ( CastNode (( D197 . R1 ) , R30) ))) by L1460 , L1449 , FUNCT_1:47;
L1462: 1 in ( dom D197 ) by L1444 , L1459 , FINSEQ_1:1;
L1463: R23 in (the LTLnew of ( CastNode (( D197 . 1 ) , R30) )) by L1462 , L1417 , FUNCT_1:47;
L1464: (( len D197 ) = R1 & D197 is_Finseq_for R30) by L1414 , L1416 , L1458 , L1285 , FINSEQ_1:17;
consider R4 being Nat such that L1465: 1 <= R4 and L1466: R4 < R1 and L1467: R23 in (the LTLnew of ( CastNode (( D197 . R4 ) , R30) )) and L1468: (not R23 in (the LTLnew of ( CastNode (( D197 . ( R4 + 1 ) ) , R30) ))) by L1464 , L1408 , L1463 , L1461 , L1450;
L1469: R4 in ( dom D197 ) by L1459 , L1465 , L1466 , FINSEQ_1:1;
L1470: R23 in (the LTLnew of ( CastNode (( R20 . R4 ) , R30) )) by L1469 , L1467 , FUNCT_1:47;
L1471: (1 <= ( R4 + 1 ) & ( R4 + 1 ) <= R1) by L1465 , L1466 , NAT_1:13;
L1472: ( R4 + 1 ) in ( dom D197 ) by L1471 , L1459 , FINSEQ_1:1;
L1473: ( D197 . ( R4 + 1 ) ) = ( R20 . ( R4 + 1 ) ) by L1472 , FUNCT_1:47;
L1474: R4 < R3 by L1443 , L1445 , L1466 , XXREAL_0:2;
thus L1475: thesis by L1474 , L1465 , L1468 , L1470 , L1473;
end;
end;
thus L1477: thesis by L1446;
end;
end;
thus L1479: thesis by L1421;
end;
thus L1480: thesis by L1415;
end;
end;
thus L1482: thesis by L1411;
end;
thus L1483: thesis by L1409;
end;
L1484: S9[ ( 0 ) ];
L1485: (for B24 being Nat holds S9[ B24 ]) from NAT_1:sch 2(L1484 , L1407);
thus L1486: thesis by L1485 , L1406;
end;
theorem
L1487: (for R22 being LTL-formula holds (for R30 being LTL-formula holds (for R32 being  strict LTLnode over R30 holds (for R33 being  strict LTLnode over R30 holds ((R33 is_succ_of R32 & R22 in (the LTLnew of R32) & (not R22 in (the LTLnew of R33))) implies R33 is_succ_of R32 , R22)))))
proof
let R22 being LTL-formula;
let R30 being LTL-formula;
let R32 being  strict LTLnode over R30;
let R33 being  strict LTLnode over R30;
assume that
L1488: R33 is_succ_of R32
and
L1489: R22 in (the LTLnew of R32)
and
L1490: (not R22 in (the LTLnew of R33));
L1491:
now
per cases  by L1488 , L96;
suppose L1492: R33 is_succ1_of R32;

consider R26 being LTL-formula such that L1493: (R26 in (the LTLnew of R32) & R33 = ( SuccNode1 (R26 , R32) )) by L1492 , L93;
L1494: (the LTLnew of R33) = ( ( (the LTLnew of R32) \ { R26 } ) \/ ( ( LTLNew1 R26 ) \ (the LTLold of R32) ) ) by L1493 , L75;
L1495: (not R22 in ( (the LTLnew of R32) \ { R26 } )) by L1494 , L1490 , XBOOLE_0:def 3;
L1496: ((not R22 in (the LTLnew of R32)) or R22 in { R26 }) by L1495 , XBOOLE_0:def 5;
L1497: R22 = R26 by L1496 , L1489 , TARSKI:def 1;
thus L1498: thesis by L1497 , L1493 , L91;
end;
suppose L1499: R33 is_succ2_of R32;

consider R26 being LTL-formula such that L1500: R26 in (the LTLnew of R32) and L1501: (R26 is  disjunctive or R26 is  Until or R26 is  Release) and L1502: R33 = ( SuccNode2 (R26 , R32) ) by L1499 , L94;
L1503: (the LTLnew of R33) = ( ( (the LTLnew of R32) \ { R26 } ) \/ ( ( LTLNew2 R26 ) \ (the LTLold of R32) ) ) by L1500 , L1502 , L84;
L1504: (not R22 in ( (the LTLnew of R32) \ { R26 } )) by L1503 , L1490 , XBOOLE_0:def 3;
L1505: ((not R22 in (the LTLnew of R32)) or R22 in { R26 }) by L1504 , XBOOLE_0:def 5;
L1506: R22 = R26 by L1505 , L1489 , TARSKI:def 1;
thus L1507: thesis by L1506 , L1500 , L1501 , L1502 , L91;
end;
end;
thus L1509: thesis by L1491;
end;
theorem
L1510: (for R2 being Nat holds (for R4 being Nat holds (for R19 being FinSequence holds (for R30 being LTL-formula holds ((R19 is_Finseq_for R30 & 1 <= R4 & R4 <= R2 & R2 <= ( len R19 )) implies ((the LTLold of ( CastNode (( R19 . R4 ) , R30) )) c= (the LTLold of ( CastNode (( R19 . R2 ) , R30) )) & (the LTLnext of ( CastNode (( R19 . R4 ) , R30) )) c= (the LTLnext of ( CastNode (( R19 . R2 ) , R30) ))))))))
proof
let R2 being Nat;
let R4 being Nat;
let R19 being FinSequence;
let R30 being LTL-formula;
assume L1511: (R19 is_Finseq_for R30 & 1 <= R4 & R4 <= R2 & R2 <= ( len R19 ));
defpred S10[ Nat ] means (for R3 being Nat holds (for R5 being Nat holds (for R20 being FinSequence holds (( len R20 ) <= $1 implies ((R20 is_Finseq_for R30 & 1 <= R5 & R5 <= R3 & R3 <= ( len R20 )) implies ((the LTLold of ( CastNode (( R20 . R5 ) , R30) )) c= (the LTLold of ( CastNode (( R20 . R3 ) , R30) )) & (the LTLnext of ( CastNode (( R20 . R5 ) , R30) )) c= (the LTLnext of ( CastNode (( R20 . R3 ) , R30) ))))))));
L1512: (for B25 being Nat holds (S10[ B25 ] implies S10[ ( B25 + 1 ) ]))
proof
let R1 being Nat;
assume that
L1513: S10[ R1 ];
L1514: S10[ ( R1 + 1 ) ]
proof
let R3 being Nat;
let R5 being Nat;
let R20 being FinSequence;
assume that
L1515: ( len R20 ) <= ( R1 + 1 );
L1516:
now
per cases  by L1515 , NAT_1:8;
suppose L1517: ( len R20 ) <= R1;

thus L1518: thesis by L1517 , L1513;
end;
suppose L1519: ( len R20 ) = ( R1 + 1 );

L1520: ((R20 is_Finseq_for R30 & 1 <= R5 & R5 <= R3 & R3 <= ( len R20 )) implies ((the LTLold of ( CastNode (( R20 . R5 ) , R30) )) c= (the LTLold of ( CastNode (( R20 . R3 ) , R30) )) & (the LTLnext of ( CastNode (( R20 . R5 ) , R30) )) c= (the LTLnext of ( CastNode (( R20 . R3 ) , R30) ))))
proof
assume that
L1521: R20 is_Finseq_for R30
and
L1522: 1 <= R5
and
L1523: R5 <= R3
and
L1524: R3 <= ( len R20 );
L1525: 1 <= R3 by L1522 , L1523 , XXREAL_0:2;
L1526:
now
per cases  by L1519 , L1524 , NAT_1:8;
suppose L1527: R3 <= R1;

set D198 = ( R20 | ( Seg R1 ) );
reconsider D199 = D198 as FinSequence by FINSEQ_1:15;
L1528: ( R1 + ( 0 ) ) <= ( R1 + 1 ) by XREAL_1:7;
L1529: ( dom D199 ) = ( Seg R1 ) by L1528 , L1519 , FINSEQ_1:17;
L1530: R3 in ( dom D199 ) by L1529 , L1525 , L1527 , FINSEQ_1:1;
L1531: ( D199 . R3 ) = ( R20 . R3 ) by L1530 , FUNCT_1:47;
L1532: R5 <= R1 by L1523 , L1527 , XXREAL_0:2;
L1533: R5 in ( dom D199 ) by L1532 , L1522 , L1529 , FINSEQ_1:1;
L1534: ( D199 . R5 ) = ( R20 . R5 ) by L1533 , FUNCT_1:47;
L1535: (( len D199 ) = R1 & D199 is_Finseq_for R30) by L1519 , L1521 , L1528 , L1285 , FINSEQ_1:17;
thus L1536: thesis by L1535 , L1513 , L1522 , L1523 , L1527 , L1534 , L1531;
end;
suppose L1537: R3 = ( R1 + 1 );

L1538:
now
per cases  by L1523 , XXREAL_0:1;
suppose L1539: R5 < R3;

set D200 = ( R20 | ( Seg R1 ) );
reconsider D201 = D200 as FinSequence by FINSEQ_1:15;
L1540: R5 <= R1 by L1537 , L1539 , NAT_1:13;
L1541: ( R1 + ( 0 ) ) <= ( R1 + 1 ) by XREAL_1:7;
L1542: ( dom D201 ) = ( Seg R1 ) by L1541 , L1519 , FINSEQ_1:17;
L1543: R5 in ( dom D201 ) by L1542 , L1522 , L1540 , FINSEQ_1:1;
L1544: ( D201 . R5 ) = ( R20 . R5 ) by L1543 , FUNCT_1:47;
L1545: 1 <= R1 by L1522 , L1540 , XXREAL_0:2;
L1546: R1 in ( dom D201 ) by L1545 , L1542 , FINSEQ_1:1;
L1547: ( D201 . R1 ) = ( R20 . R1 ) by L1546 , FUNCT_1:47;
L1548: (( len D201 ) = R1 & D201 is_Finseq_for R30) by L1519 , L1521 , L1541 , L1285 , FINSEQ_1:17;
L1549: ((the LTLold of ( CastNode (( R20 . R5 ) , R30) )) c= (the LTLold of ( CastNode (( R20 . R1 ) , R30) )) & (the LTLnext of ( CastNode (( R20 . R5 ) , R30) )) c= (the LTLnext of ( CastNode (( R20 . R1 ) , R30) ))) by L1548 , L1513 , L1522 , L1540 , L1544 , L1547;
L1550: R1 < ( len R20 ) by L1519 , NAT_1:13;
consider R32 being  strict LTLnode over R30, R33 being  strict LTLnode over R30 such that L1551: (R32 = ( R20 . R1 ) & R33 = ( R20 . ( R1 + 1 ) )) and L1552: R33 is_succ_of R32 by L1550 , L1521 , L1545 , L111;
L1553: (R32 = ( CastNode (R32 , R30) ) & R33 = ( CastNode (R33 , R30) )) by L107;
L1554: ((the LTLold of R32) c= (the LTLold of R33) & (the LTLnext of R32) c= (the LTLnext of R33)) by L1552 , L1270;
thus L1555: thesis by L1554 , L1537 , L1549 , L1551 , L1553 , XBOOLE_1:1;
end;
suppose L1556: R5 = R3;

thus L1557: thesis by L1556;
end;
end;
thus L1559: thesis by L1538;
end;
end;
thus L1561: thesis by L1526;
end;
thus L1562: thesis by L1520;
end;
end;
thus L1564: thesis by L1516;
end;
thus L1565: thesis by L1514;
end;
L1566: S10[ ( 0 ) ];
L1567: (for B26 being Nat holds S10[ B26 ]) from NAT_1:sch 2(L1566 , L1512);
thus L1568: thesis by L1567 , L1511;
end;
theorem
L1569: (for R22 being LTL-formula holds (for R30 being LTL-formula holds (for R32 being  strict LTLnode over R30 holds (for R33 being  strict LTLnode over R30 holds (R33 is_succ_of R32 , R22 implies R22 in (the LTLold of R33))))))
proof
let R22 being LTL-formula;
let R30 being LTL-formula;
let R32 being  strict LTLnode over R30;
let R33 being  strict LTLnode over R30;
assume L1570: R33 is_succ_of R32 , R22;
L1571:
now
per cases  by L1570 , L91;
suppose L1572: (R22 in (the LTLnew of R32) & R33 = ( SuccNode1 (R22 , R32) ));

L1573: (the LTLold of R33) = ( (the LTLold of R32) \/ { R22 } ) by L1572 , L75;
L1574: { R22 } c= (the LTLold of R33) by L1573 , XBOOLE_1:7;
L1575: R22 in { R22 } by TARSKI:def 1;
thus L1576: thesis by L1575 , L1574;
end;
suppose L1577: (R22 in (the LTLnew of R32) & (R22 is  disjunctive or R22 is  Until or R22 is  Release) & R33 = ( SuccNode2 (R22 , R32) ));

L1578: (the LTLold of R33) = ( (the LTLold of R32) \/ { R22 } ) by L1577 , L84;
L1579: { R22 } c= (the LTLold of R33) by L1578 , XBOOLE_1:7;
L1580: R22 in { R22 } by TARSKI:def 1;
thus L1581: thesis by L1580 , L1579;
end;
end;
thus L1583: thesis by L1571;
end;
theorem
L1584: (for R19 being FinSequence holds (for R30 being LTL-formula holds ((R19 is_Finseq_for R30 & 1 <= ( len R19 ) & (the LTLnew of ( CastNode (( R19 . ( len R19 ) ) , R30) )) = ( {} R30 )) implies (the LTLnew of ( CastNode (( R19 . 1 ) , R30) )) c= (the LTLold of ( CastNode (( R19 . ( len R19 ) ) , R30) )))))
proof
let R19 being FinSequence;
let R30 being LTL-formula;
assume that
L1585: R19 is_Finseq_for R30
and
L1586: 1 <= ( len R19 )
and
L1587: (the LTLnew of ( CastNode (( R19 . ( len R19 ) ) , R30) )) = ( {} R30 );
set D202 = ( len R19 );
L1588: (the LTLnew of ( CastNode (( R19 . 1 ) , R30) )) c= (the LTLold of ( CastNode (( R19 . D202 ) , R30) ))
proof
let R11 being set;
assume L1589: R11 in (the LTLnew of ( CastNode (( R19 . 1 ) , R30) ));
L1590: R11 in ( Subformulae R30 ) by L1589;
reconsider D203 = R11 as LTL-formula by L1590 , MODELC_2:1;
L1591: 1 < D202 by L1586 , L1587 , L1589 , XXREAL_0:1;
consider R4 being Nat such that L1592: (1 <= R4 & R4 < D202) and L1593: (D203 in (the LTLnew of ( CastNode (( R19 . R4 ) , R30) )) & (not D203 in (the LTLnew of ( CastNode (( R19 . ( R4 + 1 ) ) , R30) )))) by L1591 , L1585 , L1587 , L1589 , L1405;
set D204 = ( R4 + 1 );
L1594: (1 <= D204 & D204 <= D202) by L1592 , NAT_1:13;
L1595: (the LTLold of ( CastNode (( R19 . D204 ) , R30) )) c= (the LTLold of ( CastNode (( R19 . D202 ) , R30) )) by L1594 , L1585 , L1510;
consider R32 being  strict LTLnode over R30, R33 being  strict LTLnode over R30 such that L1596: R32 = ( R19 . R4 ) and L1597: R33 = ( R19 . ( R4 + 1 ) ) and L1598: R33 is_succ_of R32 by L1585 , L1592 , L111;
L1599: R33 = ( CastNode (( R19 . D204 ) , R30) ) by L1597 , L107;
L1600: R32 = ( CastNode (( R19 . R4 ) , R30) ) by L1596 , L107;
L1601: D203 in (the LTLold of R33) by L1600 , L1593 , L1598 , L1599 , L1487 , L1569;
thus L1602: thesis by L1601 , L1599 , L1595;
end;
thus L1603: thesis by L1588;
end;
theorem
L1604: (for R4 being Nat holds (for R19 being FinSequence holds (for R30 being LTL-formula holds ((R19 is_Finseq_for R30 & 1 <= R4 & R4 <= ( len R19 ) & (the LTLnew of ( CastNode (( R19 . ( len R19 ) ) , R30) )) = ( {} R30 )) implies (the LTLnew of ( CastNode (( R19 . R4 ) , R30) )) c= (the LTLold of ( CastNode (( R19 . ( len R19 ) ) , R30) ))))))
proof
let R4 being Nat;
let R19 being FinSequence;
let R30 being LTL-formula;
assume that
L1605: (R19 is_Finseq_for R30 & 1 <= R4 & R4 <= ( len R19 ))
and
L1606: (the LTLnew of ( CastNode (( R19 . ( len R19 ) ) , R30) )) = ( {} R30 );
L1607: (ex R20 being FinSequence st (ex R21 being FinSequence st (R21 is_Finseq_for R30 & R19 = ( R20 ^ R21 ) & ( R21 . 1 ) = ( R19 . R4 ) & 1 <= ( len R21 ) & ( len R21 ) = ( ( len R19 ) - ( R4 - 1 ) ) & ( R21 . ( len R21 ) ) = ( R19 . ( len R19 ) )))) by L1605 , L113;
thus L1608: thesis by L1607 , L1606 , L1584;
end;
theorem
L1609: (for R1 being Nat holds (for R19 being FinSequence holds (for R30 being LTL-formula holds ((R19 is_Finseq_for R30 & 1 <= R1 & R1 < ( len R19 )) implies ( CastNode (( R19 . ( R1 + 1 ) ) , R30) ) is_succ_of ( CastNode (( R19 . R1 ) , R30) )))))
proof
let R1 being Nat;
let R19 being FinSequence;
let R30 being LTL-formula;
assume L1610: (R19 is_Finseq_for R30 & 1 <= R1 & R1 < ( len R19 ));
consider R31 being  strict LTLnode over R30, R36 being  strict LTLnode over R30 such that L1611: R31 = ( R19 . R1 ) and L1612: (R36 = ( R19 . ( R1 + 1 ) ) & R36 is_succ_of R31) by L1610 , L111;
L1613: ( CastNode (( R19 . R1 ) , R30) ) = R31 by L1611 , L107;
thus L1614: thesis by L1613 , L1612 , L107;
end;
theorem
L1615: (for R1 being Nat holds (for R19 being FinSequence holds (for R30 being LTL-formula holds ((R19 is_Finseq_for R30 & 1 <= R1 & R1 <= ( len R19 )) implies ( len ( CastNode (( R19 . R1 ) , R30) ) ) <= ( ( ( len ( CastNode (( R19 . 1 ) , R30) ) ) - R1 ) + 1 )))))
proof
let R1 being Nat;
let R19 being FinSequence;
let R30 being LTL-formula;
defpred S11[ Nat ] means (for R19 being FinSequence holds (for R9 being Nat holds (( len R19 ) <= $1 implies ((R19 is_Finseq_for R30 & 1 <= R9 & R9 <= ( len R19 )) implies ( len ( CastNode (( R19 . R9 ) , R30) ) ) <= ( ( ( len ( CastNode (( R19 . 1 ) , R30) ) ) - R9 ) + 1 )))));
L1616: (for R2 being Nat holds (S11[ R2 ] implies S11[ ( R2 + 1 ) ]))
proof
let R2 being Nat;
assume L1617: S11[ R2 ];
L1618: (for R19 being FinSequence holds (for R1 being Nat holds (( len R19 ) = ( R2 + 1 ) implies ((R19 is_Finseq_for R30 & 1 <= R1 & R1 <= ( len R19 )) implies ( len ( CastNode (( R19 . R1 ) , R30) ) ) <= ( ( ( len ( CastNode (( R19 . 1 ) , R30) ) ) - R1 ) + 1 )))))
proof
let R19 being FinSequence;
let R1 being Nat;
assume that
L1619: ( len R19 ) = ( R2 + 1 );
L1620: ((R19 is_Finseq_for R30 & 1 <= R1 & R1 <= ( len R19 )) implies ( len ( CastNode (( R19 . R1 ) , R30) ) ) <= ( ( ( len ( CastNode (( R19 . 1 ) , R30) ) ) - R1 ) + 1 ))
proof
set D205 = ( R19 | ( Seg R2 ) );
assume that
L1621: R19 is_Finseq_for R30
and
L1622: 1 <= R1
and
L1623: R1 <= ( len R19 );
reconsider D206 = D205 as FinSequence by FINSEQ_1:15;
L1624: R2 < ( len R19 ) by L1619 , NAT_1:13;
L1625: ( len D206 ) = R2 by L1624 , FINSEQ_1:17;
L1626: ( dom D206 ) = ( Seg R2 ) by L1624 , FINSEQ_1:17;
L1627: (for R4 being Nat holds ((1 <= R4 & R4 <= R2) implies ( D206 . R4 ) = ( R19 . R4 )))
proof
let R4 being Nat;
assume L1628: (1 <= R4 & R4 <= R2);
L1629: R4 in ( dom D206 ) by L1628 , L1626 , FINSEQ_1:1;
thus L1630: thesis by L1629 , FUNCT_1:47;
end;
L1631: ((not R2 = ( 0 )) implies ( 0 ) < ( ( 0 ) + R2 ));
L1632:
now
per cases  by L1619 , L1623 , L1631 , NAT_1:8 , NAT_1:19;
suppose L1633: R1 <= R2;

L1634: 1 <= R2 by L1633 , L1622 , XXREAL_0:2;
L1635: ( D206 . 1 ) = ( R19 . 1 ) by L1634 , L1627;
L1636: ( D206 . R1 ) = ( R19 . R1 ) by L1622 , L1627 , L1633;
thus L1637: thesis by L1636 , L1617 , L1621 , L1622 , L1624 , L1625 , L1633 , L1635 , L1285;
end;
suppose L1638: (R1 = ( R2 + 1 ) & R2 >= 1);

L1639: ( len ( CastNode (( R19 . R1 ) , R30) ) ) <= ( ( len ( CastNode (( R19 . R2 ) , R30) ) ) - 1 ) by L1638 , L1621 , L1624 , L1185 , L1609;
L1640: ( ( len ( CastNode (( R19 . R1 ) , R30) ) ) + 1 ) <= ( ( ( len ( CastNode (( R19 . R2 ) , R30) ) ) - 1 ) + 1 ) by L1639 , XREAL_1:6;
L1641: (( D206 . R2 ) = ( R19 . R2 ) & ( D206 . 1 ) = ( R19 . 1 )) by L1627 , L1638;
L1642: ( len ( CastNode (( R19 . R2 ) , R30) ) ) <= ( ( ( len ( CastNode (( R19 . 1 ) , R30) ) ) - R2 ) + 1 ) by L1641 , L1617 , L1621 , L1624 , L1625 , L1638 , L1285;
L1643: ( ( len ( CastNode (( R19 . R1 ) , R30) ) ) + 1 ) <= ( ( ( len ( CastNode (( R19 . 1 ) , R30) ) ) - R2 ) + 1 ) by L1642 , L1640 , XXREAL_0:2;
thus L1644: thesis by L1643 , L1638 , XREAL_1:6;
end;
suppose L1645: (R1 = ( R2 + 1 ) & R2 = ( 0 ));

thus L1646: thesis by L1645;
end;
end;
thus L1648: thesis by L1632;
end;
thus L1649: thesis by L1620;
end;
L1650: S11[ ( R2 + 1 ) ]
proof
let R19 being FinSequence;
let R9 being Nat;
assume that
L1651: ( len R19 ) <= ( R2 + 1 );
L1652: ((R19 is_Finseq_for R30 & 1 <= R9 & R9 <= ( len R19 )) implies ( len ( CastNode (( R19 . R9 ) , R30) ) ) <= ( ( ( len ( CastNode (( R19 . 1 ) , R30) ) ) - R9 ) + 1 ))
proof
L1653:
now
per cases  by L1651 , NAT_1:8;
suppose L1654: ( len R19 ) <= R2;

thus L1655: thesis by L1654 , L1617;
end;
suppose L1656: ( len R19 ) = ( R2 + 1 );

thus L1657: thesis by L1656 , L1618;
end;
end;
thus L1659: thesis by L1653;
end;
thus L1660: thesis by L1652;
end;
thus L1661: thesis by L1650;
end;
L1662: S11[ ( 0 ) ];
L1663: (for R2 being Nat holds S11[ R2 ]) from NAT_1:sch 2(L1662 , L1616);
thus L1664: thesis by L1663;
end;
theorem
L1665: (for R30 being LTL-formula holds (for R42 being  elementary  strict LTLnode over R30 holds (for R43 being  elementary  strict LTLnode over R30 holds (R43 is_next_of R42 implies (the LTLnext of R42) c= (the LTLold of R43)))))
proof
let R30 being LTL-formula;
let R42 being  elementary  strict LTLnode over R30;
let R43 being  elementary  strict LTLnode over R30;
set D207 = ( 'X' R42 );
L1666: (the LTLnew of R43) = ( {} R30 ) by L99;
assume L1667: R43 is_next_of R42;
consider R19 being FinSequence such that L1668: 1 <= ( len R19 ) and L1669: R19 is_Finseq_for R30 and L1670: ( R19 . 1 ) = ( 'X' R42 ) and L1671: ( R19 . ( len R19 ) ) = R43 by L1667 , L142;
set D208 = ( len R19 );
L1672: ( CastNode (( R19 . D208 ) , R30) ) = R43 by L1671 , L107;
L1673: ( CastNode (( R19 . 1 ) , R30) ) = D207 by L1670 , L107;
L1674: (the LTLnext of R42) c= (the LTLold of R43)
proof
let R11 being set;
assume L1675: R11 in (the LTLnext of R42);
L1676: R11 in ( Subformulae R30 ) by L1675;
reconsider D209 = R11 as LTL-formula by L1676 , MODELC_2:1;
L1677: 1 < D208 by L1668 , L1670 , L1671 , L1666 , L1675 , XXREAL_0:1;
consider R4 being Nat such that L1678: (1 <= R4 & R4 < D208) and L1679: (D209 in (the LTLnew of ( CastNode (( R19 . R4 ) , R30) )) & (not D209 in (the LTLnew of ( CastNode (( R19 . ( R4 + 1 ) ) , R30) )))) by L1677 , L1669 , L1673 , L1672 , L1666 , L1675 , L1405;
set D210 = ( R4 + 1 );
consider R32 being  strict LTLnode over R30, R33 being  strict LTLnode over R30 such that L1680: R32 = ( R19 . R4 ) and L1681: R33 = ( R19 . ( R4 + 1 ) ) and L1682: R33 is_succ_of R32 by L1669 , L1678 , L111;
L1683: R33 = ( CastNode (( R19 . D210 ) , R30) ) by L1681 , L107;
L1684: (1 <= D210 & D210 <= D208) by L1678 , NAT_1:13;
L1685: (the LTLold of R33) c= (the LTLold of ( CastNode (( R19 . D208 ) , R30) )) by L1684 , L1669 , L1683 , L1510;
L1686: R32 = ( CastNode (( R19 . R4 ) , R30) ) by L1680 , L107;
L1687: D209 in (the LTLold of R33) by L1686 , L1679 , L1682 , L1683 , L1487 , L1569;
thus L1688: thesis by L1687 , L1672 , L1685;
end;
thus L1689: thesis by L1674;
end;
theorem
L1690: (for R22 being LTL-formula holds (for R30 being LTL-formula holds (for R42 being  elementary  strict LTLnode over R30 holds (for R43 being  elementary  strict LTLnode over R30 holds ((R43 is_next_of R42 & R22 in (the LTLold of R43)) implies (ex R19 being FinSequence st (ex R4 being Nat st (1 <= ( len R19 ) & R19 is_Finseq_for R30 & ( R19 . 1 ) = ( 'X' R42 ) & ( R19 . ( len R19 ) ) = R43 & 1 <= R4 & R4 < ( len R19 ) & ( CastNode (( R19 . ( R4 + 1 ) ) , R30) ) is_succ_of ( CastNode (( R19 . R4 ) , R30) ) , R22))))))))
proof
let R22 being LTL-formula;
let R30 being LTL-formula;
let R42 being  elementary  strict LTLnode over R30;
let R43 being  elementary  strict LTLnode over R30;
assume that
L1691: R43 is_next_of R42
and
L1692: R22 in (the LTLold of R43);
set D211 = ( 'X' R42 );
consider R19 being FinSequence such that L1693: 1 <= ( len R19 ) and L1694: R19 is_Finseq_for R30 and L1695: (( R19 . 1 ) = ( 'X' R42 ) & ( R19 . ( len R19 ) ) = R43) by L1691 , L142;
set D212 = ( len R19 );
L1696: (( CastNode (( R19 . 1 ) , R30) ) = D211 & ( CastNode (( R19 . D212 ) , R30) ) = R43) by L1695 , L107;
L1697: 1 < D212 by L1692 , L1693 , L1695 , XXREAL_0:1;
consider R4 being Nat such that L1698: (1 <= R4 & R4 < D212) and L1699: ((not R22 in (the LTLold of ( CastNode (( R19 . R4 ) , R30) ))) & R22 in (the LTLold of ( CastNode (( R19 . ( R4 + 1 ) ) , R30) ))) by L1697 , L1692 , L1694 , L1696 , L1302;
set D213 = ( R4 + 1 );
consider R32 being  strict LTLnode over R30, R33 being  strict LTLnode over R30 such that L1700: (R32 = ( R19 . R4 ) & R33 = ( R19 . ( R4 + 1 ) )) and L1701: R33 is_succ_of R32 by L1694 , L1698 , L111;
L1702: (R32 = ( CastNode (( R19 . R4 ) , R30) ) & R33 = ( CastNode (( R19 . D213 ) , R30) )) by L1700 , L107;
thus L1703: thesis by L1702 , L1693 , L1694 , L1695 , L1698 , L1699 , L1701 , L1384;
end;
theorem
L1704: (for R26 being LTL-formula holds (for R30 being LTL-formula holds (for R42 being  elementary  strict LTLnode over R30 holds (for R43 being  elementary  strict LTLnode over R30 holds ((R43 is_next_of R42 & R26 is  Release & R26 in (the LTLold of R43) & (not ( the_left_argument_of R26 ) in (the LTLold of R43))) implies (( the_right_argument_of R26 ) in (the LTLold of R43) & R26 in (the LTLnext of R43)))))))
proof
let R26 being LTL-formula;
let R30 being LTL-formula;
let R42 being  elementary  strict LTLnode over R30;
let R43 being  elementary  strict LTLnode over R30;
set D214 = ( the_left_argument_of R26 );
set D215 = ( the_right_argument_of R26 );
set D216 = ( 'X' R42 );
assume that
L1705: R43 is_next_of R42
and
L1706: R26 is  Release
and
L1707: R26 in (the LTLold of R43)
and
L1708: (not D214 in (the LTLold of R43));
consider R19 being FinSequence, R4 being Nat such that L1709: 1 <= ( len R19 ) and L1710: R19 is_Finseq_for R30 and L1711: ( R19 . 1 ) = D216 and L1712: ( R19 . ( len R19 ) ) = R43 and L1713: (1 <= R4 & R4 < ( len R19 )) and L1714: ( CastNode (( R19 . ( R4 + 1 ) ) , R30) ) is_succ_of ( CastNode (( R19 . R4 ) , R30) ) , R26 by L1705 , L1707 , L1690;
set D217 = ( R4 + 1 );
set D218 = ( CastNode (( R19 . D217 ) , R30) );
set D219 = ( len R19 );
L1715: ( CastNode (( R19 . D219 ) , R30) ) = R43 by L1712 , L107;
set D220 = ( CastNode (( R19 . R4 ) , R30) );
L1716: R26 in (the LTLnew of D220) by L1714 , L91;
L1717: (1 <= D217 & D217 <= D219) by L1713 , NAT_1:13;
L1718: (the LTLnext of D218) c= (the LTLnext of R43) by L1717 , L1710 , L1715 , L1510;
L1719: (the LTLnew of R43) = ( {} R30 ) by L99;
L1720: (the LTLnew of D218) c= (the LTLold of R43) by L1719 , L1710 , L1715 , L1717 , L1604;
L1721: ( LTLNew2 R26 ) = { D214 , D215 } by L1706 , L70;
L1722: D214 in ( LTLNew2 R26 ) by L1721 , TARSKI:def 2;
L1723:
now
L1724: (the LTLold of D220) c= (the LTLold of R43) by L1710 , L1713 , L1715 , L1510;
L1725: (not D214 in (the LTLold of D220)) by L1724 , L1708;
L1726: D214 in ( ( LTLNew2 R26 ) \ (the LTLold of D220) ) by L1725 , L1722 , XBOOLE_0:def 5;
L1727: D214 in ( ( (the LTLnew of D220) \ { R26 } ) \/ ( ( LTLNew2 R26 ) \ (the LTLold of D220) ) ) by L1726 , XBOOLE_0:def 3;
assume L1728: D218 = ( SuccNode2 (R26 , D220) );
L1729: (not D214 in (the LTLnew of D218)) by L1708 , L1720;
thus L1730: contradiction by L1729 , L1716 , L1728 , L1727 , L84;
end;
L1731: ( LTLNew1 R26 ) = { D215 } by L1706 , L69;
L1732: D215 in ( LTLNew1 R26 ) by L1731 , TARSKI:def 1;
L1733: (D218 = ( SuccNode1 (R26 , D220) ) or ((R26 is  disjunctive or R26 is  Until or R26 is  Release) & D218 = ( SuccNode2 (R26 , D220) ))) by L1714 , L91;
L1734: (the LTLold of D218) c= (the LTLold of R43) by L1710 , L1715 , L1717 , L1510;
L1735: D215 in (the LTLold of R43)
proof
L1736:
now
per cases ;
suppose L1737: (not D215 in (the LTLold of D220));

L1738: D215 in ( ( LTLNew1 R26 ) \ (the LTLold of D220) ) by L1737 , L1732 , XBOOLE_0:def 5;
L1739: D215 in ( ( (the LTLnew of D220) \ { R26 } ) \/ ( ( LTLNew1 R26 ) \ (the LTLold of D220) ) ) by L1738 , XBOOLE_0:def 3;
L1740: D215 in (the LTLnew of D218) by L1739 , L1716 , L1733 , L1723 , L75;
thus L1741: thesis by L1740 , L1720;
end;
suppose L1742: D215 in (the LTLold of D220);

L1743: D215 in ( (the LTLold of D220) \/ { R26 } ) by L1742 , XBOOLE_0:def 3;
L1744: D215 in (the LTLold of D218) by L1743 , L1716 , L1733 , L1723 , L75;
thus L1745: thesis by L1744 , L1734;
end;
end;
thus L1747: thesis by L1736;
end;
L1748: ( LTLNext R26 ) = { R26 } by L1706 , L71;
L1749: R26 in ( LTLNext R26 ) by L1748 , TARSKI:def 1;
L1750: R26 in ( (the LTLnext of D220) \/ ( LTLNext R26 ) ) by L1749 , XBOOLE_0:def 3;
L1751: R26 in (the LTLnext of D218) by L1750 , L1716 , L1733 , L1723 , L75;
thus L1752: thesis by L1751 , L1718 , L1735;
end;
theorem
L1753: (for R26 being LTL-formula holds (for R30 being LTL-formula holds (for R42 being  elementary  strict LTLnode over R30 holds (for R43 being  elementary  strict LTLnode over R30 holds ((R43 is_next_of R42 & R26 is  Release & R26 in (the LTLnext of R42)) implies (( the_right_argument_of R26 ) in (the LTLold of R43) & R26 in (the LTLold of R43)))))))
proof
let R26 being LTL-formula;
let R30 being LTL-formula;
let R42 being  elementary  strict LTLnode over R30;
let R43 being  elementary  strict LTLnode over R30;
set D221 = ( the_left_argument_of R26 );
set D222 = ( the_right_argument_of R26 );
set D223 = ( 'X' R42 );
assume that
L1754: R43 is_next_of R42
and
L1755: R26 is  Release
and
L1756: R26 in (the LTLnext of R42);
L1757: (the LTLnext of R42) c= (the LTLold of R43) by L1754 , L1665;
consider R19 being FinSequence, R4 being Nat such that L1758: 1 <= ( len R19 ) and L1759: R19 is_Finseq_for R30 and L1760: ( R19 . 1 ) = D223 and L1761: ( R19 . ( len R19 ) ) = R43 and L1762: (1 <= R4 & R4 < ( len R19 )) and L1763: ( CastNode (( R19 . ( R4 + 1 ) ) , R30) ) is_succ_of ( CastNode (( R19 . R4 ) , R30) ) , R26 by L1757 , L1754 , L1756 , L1690;
L1764: (the LTLnew of R43) = ( {} R30 ) by L99;
set D224 = ( CastNode (( R19 . R4 ) , R30) );
set D225 = ( R4 + 1 );
set D226 = ( CastNode (( R19 . D225 ) , R30) );
set D227 = ( len R19 );
L1765: ( CastNode (( R19 . D227 ) , R30) ) = R43 by L1761 , L107;
L1766: (1 <= D225 & D225 <= D227) by L1762 , NAT_1:13;
L1767: (the LTLnew of D226) c= (the LTLold of R43) by L1766 , L1759 , L1765 , L1764 , L1604;
L1768: ( LTLNew2 R26 ) = { D221 , D222 } by L1755 , L70;
L1769: D222 in ( LTLNew2 R26 ) by L1768 , TARSKI:def 2;
L1770: ( LTLNew1 R26 ) = { D222 } by L1755 , L69;
L1771: D222 in ( LTLNew1 R26 ) by L1770 , TARSKI:def 1;
L1772: (the LTLold of D224) c= (the LTLold of R43) by L1759 , L1762 , L1765 , L1510;
L1773: D222 in (the LTLold of R43)
proof
L1774:
now
per cases ;
suppose L1775: D222 in (the LTLold of D224);

thus L1776: thesis by L1775 , L1772;
end;
suppose L1777: (not D222 in (the LTLold of D224));

L1778:
now
per cases  by L1763 , L91;
suppose L1779: (R26 in (the LTLnew of D224) & D226 = ( SuccNode1 (R26 , D224) ));

L1780: D222 in ( ( LTLNew1 R26 ) \ (the LTLold of D224) ) by L1771 , L1777 , XBOOLE_0:def 5;
L1781: D222 in ( ( (the LTLnew of D224) \ { R26 } ) \/ ( ( LTLNew1 R26 ) \ (the LTLold of D224) ) ) by L1780 , XBOOLE_0:def 3;
L1782: D222 in (the LTLnew of D226) by L1781 , L1779 , L75;
thus L1783: thesis by L1782 , L1767;
end;
suppose L1784: (R26 in (the LTLnew of D224) & (R26 is  disjunctive or R26 is  Until or R26 is  Release) & D226 = ( SuccNode2 (R26 , D224) ));

L1785: D222 in ( ( LTLNew2 R26 ) \ (the LTLold of D224) ) by L1769 , L1777 , XBOOLE_0:def 5;
L1786: D222 in ( ( (the LTLnew of D224) \ { R26 } ) \/ ( ( LTLNew2 R26 ) \ (the LTLold of D224) ) ) by L1785 , XBOOLE_0:def 3;
L1787: D222 in (the LTLnew of D226) by L1786 , L1784 , L84;
thus L1788: thesis by L1787 , L1767;
end;
end;
thus L1790: thesis by L1778;
end;
end;
thus L1792: thesis by L1774;
end;
thus L1793: thesis by L1773 , L1756 , L1757;
end;
theorem
L1794: (for R26 being LTL-formula holds (for R30 being LTL-formula holds (for R41 being  elementary  strict LTLnode over R30 holds (for R42 being  elementary  strict LTLnode over R30 holds ((R42 is_next_of R41 & R26 in (the LTLold of R42)) implies ((R26 is  conjunctive implies (( the_left_argument_of R26 ) in (the LTLold of R42) & ( the_right_argument_of R26 ) in (the LTLold of R42))) & ((R26 is  disjunctive or R26 is  Until) implies (( the_left_argument_of R26 ) in (the LTLold of R42) or ( the_right_argument_of R26 ) in (the LTLold of R42))) & (R26 is  next implies ( the_argument_of R26 ) in (the LTLnext of R42)) & (R26 is  Release implies ( the_right_argument_of R26 ) in (the LTLold of R42))))))))
proof
let R26 being LTL-formula;
let R30 being LTL-formula;
let R41 being  elementary  strict LTLnode over R30;
let R42 being  elementary  strict LTLnode over R30;
assume that
L1795: R42 is_next_of R41
and
L1796: R26 in (the LTLold of R42);
consider R19 being FinSequence such that L1797: 1 <= ( len R19 ) and L1798: R19 is_Finseq_for R30 and L1799: ( R19 . 1 ) = ( 'X' R41 ) and L1800: ( R19 . ( len R19 ) ) = R42 by L1795 , L142;
L1801: ( CastNode (( R19 . 1 ) , R30) ) = ( 'X' R41 ) by L1799 , L107;
set D228 = ( len R19 );
L1802: ( CastNode (( R19 . D228 ) , R30) ) = R42 by L1800 , L107;
L1803: 1 < D228 by L1796 , L1797 , L1799 , L1800 , XXREAL_0:1;
consider R4 being Nat such that L1804: (1 <= R4 & R4 < D228) and L1805: ((not R26 in (the LTLold of ( CastNode (( R19 . R4 ) , R30) ))) & R26 in (the LTLold of ( CastNode (( R19 . ( R4 + 1 ) ) , R30) ))) by L1803 , L1796 , L1798 , L1802 , L1801 , L1302;
consider R32 being  strict LTLnode over R30, R33 being  strict LTLnode over R30 such that L1806: R32 = ( R19 . R4 ) and L1807: R33 = ( R19 . ( R4 + 1 ) ) and L1808: R33 is_succ_of R32 by L1798 , L1804 , L111;
L1809: ( CastNode (( R19 . R4 ) , R30) ) = R32 by L1806 , L107;
L1810: (the LTLold of R32) c= (the LTLold of R42) by L1809 , L1798 , L1802 , L1804 , L1510;
set D229 = ( R4 + 1 );
L1811: (D229 <= D228 & 1 <= D229) by L1804 , NAT_1:13;
L1812: ( CastNode (( R19 . ( R4 + 1 ) ) , R30) ) = R33 by L1807 , L107;
L1813: R33 is_succ_of R32 , R26 by L1812 , L1805 , L1808 , L1809 , L1384;
L1814: (the LTLnew of ( CastNode (( R19 . D228 ) , R30) )) = ( {} R30 ) by L1802 , L99;
L1815: (the LTLnew of R33) c= (the LTLold of R42) by L1814 , L1798 , L1802 , L1812 , L1811 , L1604;
L1816: (R26 is  conjunctive implies (( the_left_argument_of R26 ) in (the LTLold of R42) & ( the_right_argument_of R26 ) in (the LTLold of R42)))
proof
set D230 = ( the_right_argument_of R26 );
set D231 = ( the_left_argument_of R26 );
assume L1817: R26 is  conjunctive;
L1818: ( LTLNew1 R26 ) = { D231 , D230 } by L1817 , L69;
L1819:
now
per cases  by L1813 , L91;
suppose L1820: (R26 in (the LTLnew of R32) & R33 = ( SuccNode1 (R26 , R32) ));

L1821: (the LTLnew of R33) = ( ( (the LTLnew of R32) \ { R26 } ) \/ ( ( LTLNew1 R26 ) \ (the LTLold of R32) ) ) by L1820 , L75;
L1822: ( ( LTLNew1 R26 ) \ (the LTLold of R32) ) c= (the LTLnew of R33) by L1821 , XBOOLE_1:7;
L1823: D230 in (the LTLold of R42)
proof
L1824:
now
per cases ;
suppose L1825: D230 in (the LTLold of R32);

thus L1826: thesis by L1825 , L1810;
end;
suppose L1827: (not D230 in (the LTLold of R32));

L1828: D230 in ( LTLNew1 R26 ) by L1818 , TARSKI:def 2;
L1829: D230 in ( ( LTLNew1 R26 ) \ (the LTLold of R32) ) by L1828 , L1827 , XBOOLE_0:def 5;
L1830: D230 in (the LTLnew of R33) by L1829 , L1822;
thus L1831: thesis by L1830 , L1815;
end;
end;
thus L1833: thesis by L1824;
end;
L1834: D231 in (the LTLold of R42)
proof
L1835:
now
per cases ;
suppose L1836: D231 in (the LTLold of R32);

thus L1837: thesis by L1836 , L1810;
end;
suppose L1838: (not D231 in (the LTLold of R32));

L1839: D231 in ( LTLNew1 R26 ) by L1818 , TARSKI:def 2;
L1840: D231 in ( ( LTLNew1 R26 ) \ (the LTLold of R32) ) by L1839 , L1838 , XBOOLE_0:def 5;
L1841: D231 in (the LTLnew of R33) by L1840 , L1822;
thus L1842: thesis by L1841 , L1815;
end;
end;
thus L1844: thesis by L1835;
end;
thus L1845: thesis by L1834 , L1823;
end;
suppose L1846: (R26 in (the LTLnew of R32) & (R26 is  disjunctive or R26 is  Until or R26 is  Release) & R33 = ( SuccNode2 (R26 , R32) ));

thus L1847: thesis by L1846 , L1817 , MODELC_2:78;
end;
end;
thus L1849: thesis by L1819;
end;
L1850: (R26 is  Release implies ( the_right_argument_of R26 ) in (the LTLold of R42))
proof
set D232 = ( the_right_argument_of R26 );
set D233 = ( the_left_argument_of R26 );
assume L1851: R26 is  Release;
L1852: ( LTLNew2 R26 ) = { D233 , D232 } by L1851 , L70;
L1853: ( LTLNew1 R26 ) = { D232 } by L1851 , L69;
L1854:
now
per cases  by L1813 , L91;
suppose L1855: (R26 in (the LTLnew of R32) & R33 = ( SuccNode1 (R26 , R32) ));

L1856: (the LTLnew of R33) = ( ( (the LTLnew of R32) \ { R26 } ) \/ ( ( LTLNew1 R26 ) \ (the LTLold of R32) ) ) by L1855 , L75;
L1857: ( ( LTLNew1 R26 ) \ (the LTLold of R32) ) c= (the LTLnew of R33) by L1856 , XBOOLE_1:7;
L1858: D232 in (the LTLold of R42)
proof
L1859:
now
per cases ;
suppose L1860: D232 in (the LTLold of R32);

thus L1861: thesis by L1860 , L1810;
end;
suppose L1862: (not D232 in (the LTLold of R32));

L1863: D232 in ( LTLNew1 R26 ) by L1853 , TARSKI:def 1;
L1864: D232 in ( ( LTLNew1 R26 ) \ (the LTLold of R32) ) by L1863 , L1862 , XBOOLE_0:def 5;
L1865: D232 in (the LTLnew of R33) by L1864 , L1857;
thus L1866: thesis by L1865 , L1815;
end;
end;
thus L1868: thesis by L1859;
end;
thus L1869: thesis by L1858;
end;
suppose L1870: (R26 in (the LTLnew of R32) & (R26 is  disjunctive or R26 is  Until or R26 is  Release) & R33 = ( SuccNode2 (R26 , R32) ));

L1871: (the LTLnew of R33) = ( ( (the LTLnew of R32) \ { R26 } ) \/ ( ( LTLNew2 R26 ) \ (the LTLold of R32) ) ) by L1870 , L84;
L1872: ( ( LTLNew2 R26 ) \ (the LTLold of R32) ) c= (the LTLnew of R33) by L1871 , XBOOLE_1:7;
L1873: D232 in (the LTLold of R42)
proof
L1874:
now
per cases ;
suppose L1875: D232 in (the LTLold of R32);

thus L1876: thesis by L1875 , L1810;
end;
suppose L1877: (not D232 in (the LTLold of R32));

L1878: D232 in ( LTLNew2 R26 ) by L1852 , TARSKI:def 2;
L1879: D232 in ( ( LTLNew2 R26 ) \ (the LTLold of R32) ) by L1878 , L1877 , XBOOLE_0:def 5;
L1880: D232 in (the LTLnew of R33) by L1879 , L1872;
thus L1881: thesis by L1880 , L1815;
end;
end;
thus L1883: thesis by L1874;
end;
thus L1884: thesis by L1873;
end;
end;
thus L1886: thesis by L1854;
end;
L1887: ((R26 is  disjunctive or R26 is  Until) implies (( the_left_argument_of R26 ) in (the LTLold of R42) or ( the_right_argument_of R26 ) in (the LTLold of R42)))
proof
set D234 = ( the_right_argument_of R26 );
set D235 = ( the_left_argument_of R26 );
assume L1888: (R26 is  disjunctive or R26 is  Until);
L1889: ( LTLNew2 R26 ) = { D234 } by L1888 , L70;
L1890: ( LTLNew1 R26 ) = { D235 } by L1888 , L69;
L1891:
now
per cases  by L1813 , L91;
suppose L1892: (R26 in (the LTLnew of R32) & R33 = ( SuccNode1 (R26 , R32) ));

L1893: (the LTLnew of R33) = ( ( (the LTLnew of R32) \ { R26 } ) \/ ( ( LTLNew1 R26 ) \ (the LTLold of R32) ) ) by L1892 , L75;
L1894: ( ( LTLNew1 R26 ) \ (the LTLold of R32) ) c= (the LTLnew of R33) by L1893 , XBOOLE_1:7;
L1895: D235 in (the LTLold of R42)
proof
L1896:
now
per cases ;
suppose L1897: D235 in (the LTLold of R32);

thus L1898: thesis by L1897 , L1810;
end;
suppose L1899: (not D235 in (the LTLold of R32));

L1900: D235 in ( LTLNew1 R26 ) by L1890 , TARSKI:def 1;
L1901: D235 in ( ( LTLNew1 R26 ) \ (the LTLold of R32) ) by L1900 , L1899 , XBOOLE_0:def 5;
L1902: D235 in (the LTLnew of R33) by L1901 , L1894;
thus L1903: thesis by L1902 , L1815;
end;
end;
thus L1905: thesis by L1896;
end;
thus L1906: thesis by L1895;
end;
suppose L1907: (R26 in (the LTLnew of R32) & (R26 is  disjunctive or R26 is  Until or R26 is  Release) & R33 = ( SuccNode2 (R26 , R32) ));

L1908: (the LTLnew of R33) = ( ( (the LTLnew of R32) \ { R26 } ) \/ ( ( LTLNew2 R26 ) \ (the LTLold of R32) ) ) by L1907 , L84;
L1909: ( ( LTLNew2 R26 ) \ (the LTLold of R32) ) c= (the LTLnew of R33) by L1908 , XBOOLE_1:7;
L1910: D234 in (the LTLold of R42)
proof
L1911:
now
per cases ;
suppose L1912: D234 in (the LTLold of R32);

thus L1913: thesis by L1912 , L1810;
end;
suppose L1914: (not D234 in (the LTLold of R32));

L1915: D234 in ( LTLNew2 R26 ) by L1889 , TARSKI:def 1;
L1916: D234 in ( ( LTLNew2 R26 ) \ (the LTLold of R32) ) by L1915 , L1914 , XBOOLE_0:def 5;
L1917: D234 in (the LTLnew of R33) by L1916 , L1909;
thus L1918: thesis by L1917 , L1815;
end;
end;
thus L1920: thesis by L1911;
end;
thus L1921: thesis by L1910;
end;
end;
thus L1923: thesis by L1891;
end;
L1924: (the LTLnext of R33) c= (the LTLnext of R42) by L1798 , L1802 , L1812 , L1811 , L1510;
L1925: (R26 is  next implies ( the_argument_of R26 ) in (the LTLnext of R42))
proof
set D236 = ( the_argument_of R26 );
assume L1926: R26 is  next;
L1927: ( LTLNext R26 ) = { D236 } by L1926 , L71;
L1928:
now
per cases  by L1813 , L91;
suppose L1929: (R26 in (the LTLnew of R32) & R33 = ( SuccNode1 (R26 , R32) ));

L1930: (the LTLnext of R33) = ( (the LTLnext of R32) \/ ( LTLNext R26 ) ) by L1929 , L75;
L1931: ( LTLNext R26 ) c= (the LTLnext of R33) by L1930 , XBOOLE_1:7;
L1932: ( LTLNext R26 ) c= (the LTLnext of R42) by L1931 , L1924 , XBOOLE_1:1;
L1933: D236 in ( LTLNext R26 ) by L1927 , TARSKI:def 1;
thus L1934: thesis by L1933 , L1932;
end;
suppose L1935: (R26 in (the LTLnew of R32) & (R26 is  disjunctive or R26 is  Until or R26 is  Release) & R33 = ( SuccNode2 (R26 , R32) ));

thus L1936: thesis by L1935 , L1926 , MODELC_2:78;
end;
end;
thus L1938: thesis by L1928;
end;
thus L1939: thesis by L1925 , L1816 , L1887 , L1850;
end;
L1940: (for R22 being LTL-formula holds (for R24 being LTL-formula holds (for R30 being LTL-formula holds (for R41 being  elementary  strict LTLnode over R30 holds (for R42 being  elementary  strict LTLnode over R30 holds (for R43 being  elementary  strict LTLnode over R30 holds ((R42 is_next_of R41 & R43 is_next_of R42 & ( R22 'U' R24 ) in (the LTLold of R42)) implies (R24 in (the LTLold of R42) or (R22 in (the LTLold of R42) & ( R22 'U' R24 ) in (the LTLold of R43))))))))))
proof
let R22 being LTL-formula;
let R24 being LTL-formula;
let R30 being LTL-formula;
let R41 being  elementary  strict LTLnode over R30;
let R42 being  elementary  strict LTLnode over R30;
let R43 being  elementary  strict LTLnode over R30;
assume that
L1941: R42 is_next_of R41
and
L1942: R43 is_next_of R42
and
L1943: ( R22 'U' R24 ) in (the LTLold of R42);
set D237 = ( R22 'U' R24 );
consider R19 being FinSequence such that L1944: 1 <= ( len R19 ) and L1945: R19 is_Finseq_for R30 and L1946: ( R19 . 1 ) = ( 'X' R41 ) and L1947: ( R19 . ( len R19 ) ) = R42 by L1941 , L142;
L1948: ( CastNode (( R19 . 1 ) , R30) ) = ( 'X' R41 ) by L1946 , L107;
set D238 = ( len R19 );
L1949: ( CastNode (( R19 . D238 ) , R30) ) = R42 by L1947 , L107;
L1950: 1 < D238 by L1943 , L1944 , L1946 , L1947 , XXREAL_0:1;
consider R4 being Nat such that L1951: (1 <= R4 & R4 < D238) and L1952: ((not D237 in (the LTLold of ( CastNode (( R19 . R4 ) , R30) ))) & D237 in (the LTLold of ( CastNode (( R19 . ( R4 + 1 ) ) , R30) ))) by L1950 , L1943 , L1945 , L1949 , L1948 , L1302;
consider R32 being  strict LTLnode over R30, R33 being  strict LTLnode over R30 such that L1953: R32 = ( R19 . R4 ) and L1954: R33 = ( R19 . ( R4 + 1 ) ) and L1955: R33 is_succ_of R32 by L1945 , L1951 , L111;
set D239 = ( R4 + 1 );
L1956: ( CastNode (( R19 . ( R4 + 1 ) ) , R30) ) = R33 by L1954 , L107;
L1957: D237 is  Until by MODELC_2:def 16;
L1958: ( LTLNext D237 ) = { D237 } by L1957 , L71;
L1959: ( the_right_argument_of D237 ) = R24 by L1957 , MODELC_2:def 20;
L1960: ( LTLNew2 D237 ) = { R24 } by L1959 , L1957 , L70;
L1961: ( the_left_argument_of D237 ) = R22 by L1957 , MODELC_2:def 19;
L1962: ( LTLNew1 D237 ) = { R22 } by L1961 , L1957 , L69;
L1963: ( CastNode (( R19 . R4 ) , R30) ) = R32 by L1953 , L107;
L1964: (the LTLold of R32) c= (the LTLold of R42) by L1963 , L1945 , L1949 , L1951 , L1510;
L1965: (D239 <= D238 & 1 <= D239) by L1951 , NAT_1:13;
L1966: (the LTLnext of R33) c= (the LTLnext of R42) by L1965 , L1945 , L1949 , L1956 , L1510;
L1967: (the LTLnew of ( CastNode (( R19 . D238 ) , R30) )) = ( {} R30 ) by L1949 , L99;
L1968: (the LTLnew of R33) c= (the LTLold of R42) by L1967 , L1945 , L1949 , L1956 , L1965 , L1604;
L1969: R33 is_succ_of R32 , D237 by L1952 , L1955 , L1963 , L1956 , L1384;
L1970: ((not R24 in (the LTLold of R42)) implies (R22 in (the LTLold of R42) & ( R22 'U' R24 ) in (the LTLold of R43)))
proof
assume L1971: (not R24 in (the LTLold of R42));
L1972:
now
per cases  by L1969 , L91;
suppose L1973: (D237 in (the LTLnew of R32) & R33 = ( SuccNode1 (D237 , R32) ));

L1974: (the LTLnew of R33) = ( ( (the LTLnew of R32) \ { D237 } ) \/ ( ( LTLNew1 D237 ) \ (the LTLold of R32) ) ) by L1973 , L75;
L1975: ( ( LTLNew1 D237 ) \ (the LTLold of R32) ) c= (the LTLnew of R33) by L1974 , XBOOLE_1:7;
L1976: R22 in (the LTLold of R42)
proof
L1977:
now
per cases ;
suppose L1978: R22 in (the LTLold of R32);

thus L1979: thesis by L1978 , L1964;
end;
suppose L1980: (not R22 in (the LTLold of R32));

L1981: R22 in ( LTLNew1 D237 ) by L1962 , TARSKI:def 1;
L1982: R22 in ( ( LTLNew1 D237 ) \ (the LTLold of R32) ) by L1981 , L1980 , XBOOLE_0:def 5;
L1983: R22 in (the LTLnew of R33) by L1982 , L1975;
thus L1984: thesis by L1983 , L1968;
end;
end;
thus L1986: thesis by L1977;
end;
L1987: (the LTLnext of R33) = ( (the LTLnext of R32) \/ ( LTLNext D237 ) ) by L1973 , L75;
L1988: ( LTLNext D237 ) c= (the LTLnext of R33) by L1987 , XBOOLE_1:7;
L1989: D237 in ( LTLNext D237 ) by L1958 , TARSKI:def 1;
L1990: D237 in (the LTLnext of R33) by L1989 , L1988;
L1991: D237 in (the LTLnext of R42) by L1990 , L1966;
L1992: (the LTLnext of R42) c= (the LTLold of R43) by L1942 , L1665;
thus L1993: thesis by L1992 , L1976 , L1991;
end;
suppose L1994: (D237 in (the LTLnew of R32) & (D237 is  disjunctive or D237 is  Until or D237 is  Release) & R33 = ( SuccNode2 (D237 , R32) ));

L1995: (the LTLnew of R33) = ( ( (the LTLnew of R32) \ { D237 } ) \/ ( ( LTLNew2 D237 ) \ (the LTLold of R32) ) ) by L1994 , L84;
L1996: ( ( LTLNew2 D237 ) \ (the LTLold of R32) ) c= (the LTLnew of R33) by L1995 , XBOOLE_1:7;
L1997: R24 in (the LTLold of R42)
proof
L1998:
now
per cases ;
suppose L1999: R24 in (the LTLold of R32);

thus L2000: thesis by L1999 , L1964;
end;
suppose L2001: (not R24 in (the LTLold of R32));

L2002: R24 in ( LTLNew2 D237 ) by L1960 , TARSKI:def 1;
L2003: R24 in ( ( LTLNew2 D237 ) \ (the LTLold of R32) ) by L2002 , L2001 , XBOOLE_0:def 5;
L2004: R24 in (the LTLnew of R33) by L2003 , L1996;
thus L2005: thesis by L2004 , L1968;
end;
end;
thus L2007: thesis by L1998;
end;
thus L2008: thesis by L1997 , L1971;
end;
end;
thus L2010: thesis by L1972;
end;
thus L2011: thesis by L1970;
end;
theorem
L2012: (for R26 being LTL-formula holds (for R30 being LTL-formula holds (for R41 being  elementary  strict LTLnode over R30 holds (for R42 being  elementary  strict LTLnode over R30 holds (for R43 being  elementary  strict LTLnode over R30 holds ((R42 is_next_of R41 & R43 is_next_of R42 & R26 in (the LTLold of R42) & R26 is  Until) implies (( the_right_argument_of R26 ) in (the LTLold of R42) or (( the_left_argument_of R26 ) in (the LTLold of R42) & R26 in (the LTLold of R43)))))))))
proof
let R26 being LTL-formula;
let R30 being LTL-formula;
let R41 being  elementary  strict LTLnode over R30;
let R42 being  elementary  strict LTLnode over R30;
let R43 being  elementary  strict LTLnode over R30;
assume that
L2013: (R42 is_next_of R41 & R43 is_next_of R42 & R26 in (the LTLold of R42))
and
L2014: R26 is  Until;
set D240 = ( the_right_argument_of R26 );
set D241 = ( the_left_argument_of R26 );
L2015: R26 = ( D241 'U' D240 ) by L2014 , MODELC_2:8;
thus L2016: thesis by L2015 , L2013 , L1940;
end;
definition
let R30 being LTL-formula;
func LTLNodes R30 -> non  empty set means 
:L2017: (for R11 being set holds (R11 in it iff (ex B27 being  strict LTLnode over R30 st R11 = B27)));
existence
proof
set D242 = ( bool ( Subformulae R30 ) );
set D243 = [: D242 , D242 , D242 :];
defpred S12[ set , set ] means ($1 in D243 & (ex B28 , B29 , B30 being (Subset of ( Subformulae R30 )) st (ex B31 being  strict LTLnode over R30 st ($1 = [ [ B28 , B29 ] , B30 ] & $2 = B31 & (the LTLold of B31) = B28 & (the LTLnew of B31) = B29 & (the LTLnext of B31) = B30))));
L2018: (for B32 , B33 , B34 being set holds ((S12[ B32 , B33 ] & S12[ B32 , B34 ]) implies B33 = B34))
proof
let C32 , C33 , C34 being set;
assume that
L2019: S12[ C32 , C33 ]
and
L2020: S12[ C32 , C34 ];
consider C35 , C36 , C37 being (Subset of ( Subformulae R30 )), C38 being  strict LTLnode over R30 such that L2021: C32 = [ [ C35 , C36 ] , C37 ] and L2022: (C33 = C38 & (the LTLold of C38) = C35 & (the LTLnew of C38) = C36 & (the LTLnext of C38) = C37) by L2019;
consider C39 , C40 , C41 being (Subset of ( Subformulae R30 )), C42 being  strict LTLnode over R30 such that L2023: C32 = [ [ C39 , C40 ] , C41 ] and L2024: (C34 = C42 & (the LTLold of C42) = C39 & (the LTLnew of C42) = C40 & (the LTLnext of C42) = C41) by L2020;
L2025: C37 = C41 by L2021 , L2023 , XTUPLE_0:1;
L2026: [ C35 , C36 ] = [ C39 , C40 ] by L2021 , L2023 , XTUPLE_0:1;
L2027: C35 = C39 by L2026 , XTUPLE_0:1;
thus L2028: thesis by L2027 , L2022 , L2024 , L2026 , L2025 , XTUPLE_0:1;
end;
consider C43 being set such that L2029: (for R11 being set holds (R11 in C43 iff (ex R12 being set st (R12 in D243 & S12[ R12 , R11 ])))) from TARSKI:sch 1(L2018);
L2030: C43 is non  empty
proof
set D244 = ( {} R30 );
set D245 = LTLnode (# D244 , D244 , D244 #);
set D246 = [ [ D244 , D244 ] , D244 ];
L2031: [ D244 , D244 ] in [: D242 , D242 :] by ZFMISC_1:def 2;
L2032: [ [ D244 , D244 ] , D244 ] in [: [: D242 , D242 :] , D242 :] by L2031 , ZFMISC_1:def 2;
L2033: S12[ D246 , D245 ] by L2032 , ZFMISC_1:def 3;
thus L2034: thesis by L2033 , L2029;
end;
reconsider D247 = C43 as non  empty set by L2030;
L2035: (for R11 being set holds ((ex B35 being  strict LTLnode over R30 st R11 = B35) implies R11 in D247))
proof
let R11 being set;
assume L2036: (ex B36 being  strict LTLnode over R30 st R11 = B36);
consider C44 being  strict LTLnode over R30 such that L2037: R11 = C44 by L2036;
set D248 = (the LTLnext of C44);
set D249 = (the LTLnew of C44);
set D250 = (the LTLold of C44);
set D251 = [ [ D250 , D249 ] , D248 ];
L2038: [ D250 , D249 ] in [: D242 , D242 :] by ZFMISC_1:def 2;
L2039: [ [ D250 , D249 ] , D248 ] in [: [: D242 , D242 :] , D242 :] by L2038 , ZFMISC_1:def 2;
L2040: D251 in D243 by L2039 , ZFMISC_1:def 3;
thus L2041: thesis by L2040 , L2029 , L2037;
end;
take D247;
L2042: (for R11 being set holds (R11 in D247 implies (ex B37 being  strict LTLnode over R30 st R11 = B37)))
proof
let R11 being set;
assume L2043: R11 in D247;
L2044: (ex R12 being set st (R12 in D243 & S12[ R12 , R11 ])) by L2043 , L2029;
thus L2045: thesis by L2044;
end;
thus L2046: thesis by L2042 , L2035;
end;
uniqueness
proof
let C45 , C46 being non  empty set;
L2047: (((for R11 being set holds (R11 in C45 iff (ex B38 being  strict LTLnode over R30 st R11 = B38))) & (for R11 being set holds (R11 in C46 iff (ex B39 being  strict LTLnode over R30 st R11 = B39)))) implies C45 = C46)
proof
assume that
L2048: (for R11 being set holds (R11 in C45 iff (ex B40 being  strict LTLnode over R30 st R11 = B40)))
and
L2049: (for R11 being set holds (R11 in C46 iff (ex B41 being  strict LTLnode over R30 st R11 = B41)));
L2050: (for R11 being set holds (R11 in C45 iff R11 in C46))
proof
let R11 being set;
L2051: (R11 in C45 iff (ex B42 being  strict LTLnode over R30 st R11 = B42)) by L2048;
thus L2052: thesis by L2051 , L2049;
end;
thus L2053: thesis by L2050 , TARSKI:1;
end;
thus L2054: thesis by L2047;
end;
end;
registration
let R30 being LTL-formula;
cluster ( LTLNodes R30 ) ->  finite;
correctness
proof
deffunc H2(set) = [ [ (the LTLold of ( CastNode ($1 , R30) )) , (the LTLnew of ( CastNode ($1 , R30) )) ] , (the LTLnext of ( CastNode ($1 , R30) )) ];
set D252 = ( bool ( Subformulae R30 ) );
set D253 = ( LTLNodes R30 );
set D254 = [: D252 , D252 , D252 :];
L2056: (for R11 being set holds (R11 in D253 implies H2(R11) in D254))
proof
let R11 being set;
set D255 = (the LTLold of ( CastNode (R11 , R30) ));
set D256 = (the LTLnew of ( CastNode (R11 , R30) ));
assume L2057: R11 in D253;
set D257 = [ D255 , D256 ];
set D258 = [: D252 , D252 :];
L2058: (D254 = [: D258 , D252 :] & D257 in D258) by ZFMISC_1:87 , ZFMISC_1:def 3;
thus L2059: thesis by L2058 , ZFMISC_1:87;
end;
L2060: (ex B43 being (Function of D253 , D254) st (for R11 being set holds (R11 in D253 implies ( B43 . R11 ) = H2(R11)))) from FUNCT_2:sch 2(L2056);
consider C47 being (Function of D253 , D254) such that L2061: (for R11 being set holds (R11 in D253 implies ( C47 . R11 ) = H2(R11))) by L2060;
L2062: (for B44 , B45 being set holds ((B44 in D253 & B45 in D253 & ( C47 . B44 ) = ( C47 . B45 )) implies B44 = B45))
proof
let C48 , C49 being set;
assume that
L2063: C48 in D253
and
L2064: C49 in D253
and
L2065: ( C47 . C48 ) = ( C47 . C49 );
L2066: (ex B46 being  strict LTLnode over R30 st C49 = B46) by L2064 , L2017;
set D259 = (the LTLnext of ( CastNode (C49 , R30) ));
set D260 = (the LTLnew of ( CastNode (C49 , R30) ));
set D261 = (the LTLold of ( CastNode (C49 , R30) ));
L2067: (ex B47 being  strict LTLnode over R30 st C48 = B47) by L2063 , L2017;
reconsider D262 = C49 as  strict LTLnode over R30 by L2066;
set D263 = (the LTLold of ( CastNode (C48 , R30) ));
set D264 = (the LTLnew of ( CastNode (C48 , R30) ));
set D265 = (the LTLnext of ( CastNode (C48 , R30) ));
set D266 = [ D263 , D264 ];
set D267 = [ D261 , D260 ];
L2068: (D260 = (the LTLnew of D262) & D259 = (the LTLnext of D262)) by L107;
reconsider D268 = C48 as  strict LTLnode over R30 by L2067;
L2069: (( C47 . D268 ) = [ D266 , D265 ] & ( C47 . D262 ) = [ D267 , D259 ]) by L2061 , L2063 , L2064;
L2070: D265 = D259 by L2069 , L2065 , XTUPLE_0:1;
L2071: (D265 = (the LTLnext of D268) & D261 = (the LTLold of D262)) by L107;
L2072: (D263 = (the LTLold of D268) & D264 = (the LTLnew of D268)) by L107;
L2073: D266 = D267 by L2065 , L2069 , XTUPLE_0:1;
L2074: D263 = D261 by L2073 , XTUPLE_0:1;
thus L2075: thesis by L2074 , L2072 , L2071 , L2068 , L2073 , L2070 , XTUPLE_0:1;
end;
L2076: C47 is  one-to-one by L2062 , FUNCT_2:19;
L2077: ( rng C47 ) is  finite;
L2078: ( dom ( C47 " ) ) is  finite by L2077 , L2076 , FUNCT_1:33;
L2079: (( dom C47 ) = D253 & ( rng ( C47 " ) ) is  finite) by L2078 , FINSET_1:8 , FUNCT_2:def 1;
thus L2080: thesis by L2079 , L2076 , FUNCT_1:33;
end;
end;
definition
let R30 being LTL-formula;
func LTLStates R30 -> non  empty set equals 
{ B48 where B48 is (Element of ( LTLNodes R30 )) : B48 is  elementary  strict  elementary  strict  elementary  strict  elementary  strict LTLnode over R30 };
coherence
proof
set D269 = { B49 where B49 is (Element of ( LTLNodes R30 )) : B49 is  elementary  strict  elementary  strict  elementary  strict  elementary  strict LTLnode over R30 };
L2082: ( init R30 ) is (Element of ( LTLNodes R30 )) by L2017;
L2083: ( init R30 ) in D269 by L2082;
thus L2084: thesis by L2083;
end;
end;
registration
let R30 being LTL-formula;
cluster ( LTLStates R30 ) ->  finite;
correctness
proof
L2086: ( LTLStates R30 ) c= ( LTLNodes R30 )
proof
let R10 being set;
assume L2087: R10 in ( LTLStates R30 );
L2088: (ex B50 being (Element of ( LTLNodes R30 )) st (R10 = B50 & B50 is  elementary  strict  elementary  strict  elementary  strict  elementary  strict LTLnode over R30)) by L2087;
thus L2089: thesis by L2088;
end;
thus L2090: thesis by L2086;
end;
end;
theorem
L2092: (for R30 being LTL-formula holds ( init R30 ) is (Element of ( LTLStates R30 )))
proof
let R30 being LTL-formula;
L2093: ( init R30 ) is (Element of ( LTLNodes R30 )) by L2017;
L2094: ( init R30 ) in ( LTLStates R30 ) by L2093;
thus L2095: thesis by L2094;
end;
theorem
L2096: (for R30 being LTL-formula holds (for R40 being  elementary  strict LTLnode over R30 holds R40 is (Element of ( LTLStates R30 ))))
proof
let R30 being LTL-formula;
let R40 being  elementary  strict LTLnode over R30;
L2097: R40 is (Element of ( LTLNodes R30 )) by L2017;
L2098: R40 in ( LTLStates R30 ) by L2097;
thus L2099: thesis by L2098;
end;
theorem
L2100: (for R11 being set holds (for R30 being LTL-formula holds (R11 is (Element of ( LTLStates R30 )) iff (ex R40 being  elementary  strict LTLnode over R30 st R40 = R11))))
proof
let R11 being set;
let R30 being LTL-formula;
L2101: (R11 is (Element of ( LTLStates R30 )) implies (ex R40 being  elementary  strict LTLnode over R30 st R40 = R11))
proof
assume L2102: R11 is (Element of ( LTLStates R30 ));
L2103: R11 in ( LTLStates R30 ) by L2102;
consider C50 being (Element of ( LTLNodes R30 )) such that L2104: C50 = R11 and L2105: C50 is  elementary  strict  elementary  strict  elementary  strict  elementary  strict LTLnode over R30 by L2103;
reconsider D270 = C50 as  elementary  strict LTLnode over R30 by L2105;
take D270;
thus L2106: thesis by L2104;
end;
thus L2107: thesis by L2101 , L2096;
end;
L2108: (for R2 being Nat holds (for R13 being set holds ((R13 <> ( {} ) & R13 c= ( Seg R2 )) implies (ex R1 being Nat st (1 <= R1 & R1 <= R2 & R1 in R13 & (for R8 being Nat holds ((1 <= R8 & R8 < R1) implies (not R8 in R13))))))))
proof
let R2 being Nat;
let R13 being set;
defpred S13[ Nat ] means (for R13 being set holds ((R13 <> ( {} ) & R13 c= ( Seg $1 )) implies (ex R1 being Nat st (1 <= R1 & R1 <= $1 & R1 in R13 & (for R8 being Nat holds ((1 <= R8 & R8 < R1) implies (not R8 in R13)))))));
L2109: (for R4 being Nat holds (S13[ R4 ] implies S13[ ( R4 + 1 ) ]))
proof
let R4 being Nat;
assume that
L2110: S13[ R4 ];
set D271 = ( R4 + 1 );
L2111: (for R18 being set holds ((R18 <> ( {} ) & R18 c= ( Seg D271 ) & (not D271 in R18)) implies R18 c= ( Seg R4 )))
proof
let R18 being set;
assume that
L2112: R18 <> ( {} )
and
L2113: R18 c= ( Seg D271 )
and
L2114: (not D271 in R18);
L2115: R18 c= ( Seg R4 )
proof
let R11 being set;
assume L2116: R11 in R18;
L2117: R11 in ( Seg D271 ) by L2116 , L2113;
L2118: R11 in { B51 where B51 is (Element of ( NAT )) : (1 <= B51 & B51 <= D271) } by L2117 , FINSEQ_1:def 1;
consider C51 being (Element of ( NAT )) such that L2119: R11 = C51 and L2120: 1 <= C51 and L2121: C51 <= D271 by L2118;
L2122: C51 < D271 by L2114 , L2116 , L2119 , L2121 , XXREAL_0:1;
L2123: C51 <= R4 by L2122 , NAT_1:13;
thus L2124: thesis by L2123 , L2119 , L2120 , FINSEQ_1:1;
end;
thus L2125: thesis by L2115;
end;
L2126: (for R13 being set holds ((R13 <> ( {} ) & R13 c= ( Seg D271 )) implies (ex R1 being Nat st (1 <= R1 & R1 <= D271 & R1 in R13 & (for R8 being Nat holds ((1 <= R8 & R8 < R1) implies (not R8 in R13)))))))
proof
let R13 being set;
assume that
L2127: R13 <> ( {} )
and
L2128: R13 c= ( Seg D271 );
L2129:
now
per cases ;
suppose L2130: (not D271 in R13);

L2131: R13 c= ( Seg R4 ) by L2130 , L2111 , L2127 , L2128;
consider R1 being Nat such that L2132: 1 <= R1 and L2133: R1 <= R4 and L2134: (R1 in R13 & (for R8 being Nat holds ((1 <= R8 & R8 < R1) implies (not R8 in R13)))) by L2131 , L2110 , L2127;
L2135: R4 <= D271 by NAT_1:11;
L2136: R1 <= D271 by L2135 , L2133 , XXREAL_0:2;
thus L2137: thesis by L2136 , L2132 , L2134;
end;
suppose L2138: D271 in R13;

set D272 = ( R13 \ { D271 } );
L2139: D271 in { D271 } by TARSKI:def 1;
L2140: (not D271 in D272) by L2139 , XBOOLE_0:def 5;
L2141: D272 c= ( Seg D271 ) by L2128 , XBOOLE_1:1;
L2142:
now
per cases ;
suppose L2143: D272 <> ( {} );

L2144: D272 c= ( Seg R4 ) by L2143 , L2111 , L2140 , L2141;
consider R1 being Nat such that L2145: 1 <= R1 and L2146: R1 <= R4 and L2147: R1 in D272 and L2148: (for R8 being Nat holds ((1 <= R8 & R8 < R1) implies (not R8 in D272))) by L2144 , L2110 , L2143;
L2149: R4 <= D271 by NAT_1:11;
L2150: R1 <= D271 by L2149 , L2146 , XXREAL_0:2;
L2151: (for R8 being Nat holds ((1 <= R8 & R8 < R1) implies (not R8 in R13)))
proof
let R8 being Nat;
assume L2152: (1 <= R8 & R8 < R1);
L2153: ((not R8 in { D271 }) & (not R8 in D272)) by L2152 , L2148 , L2150 , TARSKI:def 1;
thus L2154: thesis by L2153 , XBOOLE_0:def 5;
end;
thus L2155: thesis by L2151 , L2145 , L2147 , L2150;
end;
suppose L2156: D272 = ( {} );

L2157: R13 c= { D271 } by L2156 , XBOOLE_1:37;
L2158: (1 <= D271 & (for R8 being Nat holds ((1 <= R8 & R8 < D271) implies (not R8 in R13)))) by L2157 , NAT_1:11 , TARSKI:def 1;
thus L2159: thesis by L2158 , L2138;
end;
end;
thus L2161: thesis by L2142;
end;
end;
thus L2163: thesis by L2129;
end;
thus L2164: thesis by L2126;
end;
L2165: S13[ ( 0 ) ];
L2166: (for R4 being Nat holds S13[ R4 ]) from NAT_1:sch 2(L2165 , L2109);
thus L2167: thesis by L2166;
end;
definition
let R30 being LTL-formula;
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
let C52 being Function;
pred C52 is_succ_homomorphism R30 , R37
means
:L2168: (for R11 being set holds ((R11 in ( LTLNodes R30 ) & ( CastNode (R11 , R30) ) is non  elementary & R37 |= ( * ( CastNode (R11 , R30) ) )) implies (( CastNode (( C52 . R11 ) , R30) ) is_succ_of ( CastNode (R11 , R30) ) & R37 |= ( * ( CastNode (( C52 . R11 ) , R30) ) ))))
;pred C52 is_homomorphism R30 , R37
means
:L2169: (for R11 being set holds ((R11 in ( LTLNodes R30 ) & ( CastNode (R11 , R30) ) is non  elementary & R37 |= ( * ( CastNode (R11 , R30) ) )) implies R37 |= ( * ( CastNode (( C52 . R11 ) , R30) ) )))
;end;
theorem
L2171: (for R30 being LTL-formula holds (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for B52 being (Function of ( LTLNodes R30 ) , ( LTLNodes R30 )) holds (B52 is_succ_homomorphism R30 , R37 implies B52 is_homomorphism R30 , R37))))
proof
let R30 being LTL-formula;
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
set D273 = ( LTLNodes R30 );
let C53 being (Function of D273 , D273);
assume L2172: C53 is_succ_homomorphism R30 , R37;
L2173: (for R12 being set holds ((R12 in D273 & ( CastNode (R12 , R30) ) is non  elementary & R37 |= ( * ( CastNode (R12 , R30) ) )) implies R37 |= ( * ( CastNode (( C53 . R12 ) , R30) ) ))) by L2172 , L2168;
thus L2174: thesis by L2173 , L2169;
end;
theorem
L2175: (for R30 being LTL-formula holds (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for B53 being (Function of ( LTLNodes R30 ) , ( LTLNodes R30 )) holds (B53 is_homomorphism R30 , R37 implies (for R11 being set holds ((R11 in ( LTLNodes R30 ) & ( CastNode (R11 , R30) ) is non  elementary & R37 |= ( * ( CastNode (R11 , R30) ) )) implies (for R1 being Nat holds ((for R8 being Nat holds (R8 <= R1 implies ( CastNode (( ( B53 |** R8 ) . R11 ) , R30) ) is non  elementary)) implies R37 |= ( * ( CastNode (( ( B53 |** R1 ) . R11 ) , R30) ) )))))))))
proof
let R30 being LTL-formula;
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
set D274 = ( LTLNodes R30 );
let C54 being (Function of D274 , D274);
assume L2176: C54 is_homomorphism R30 , R37;
L2177: (for R12 being set holds ((R12 in D274 & ( CastNode (R12 , R30) ) is non  elementary & R37 |= ( * ( CastNode (R12 , R30) ) )) implies R37 |= ( * ( CastNode (( C54 . R12 ) , R30) ) ))) by L2176 , L2169;
L2178: (for R11 being set holds ((R11 in D274 & ( CastNode (R11 , R30) ) is non  elementary & R37 |= ( * ( CastNode (R11 , R30) ) )) implies (for R1 being Nat holds ((for R8 being Nat holds (R8 <= R1 implies ( CastNode (( ( C54 |** R8 ) . R11 ) , R30) ) is non  elementary)) implies R37 |= ( * ( CastNode (( ( C54 |** R1 ) . R11 ) , R30) ) )))))
proof
let R11 being set;
assume that
L2179: R11 in D274
and
L2180: ( CastNode (R11 , R30) ) is non  elementary
and
L2181: R37 |= ( * ( CastNode (R11 , R30) ) );
L2182: (for R1 being Nat holds ((for R8 being Nat holds (R8 <= R1 implies ( CastNode (( ( C54 |** R8 ) . R11 ) , R30) ) is non  elementary)) implies R37 |= ( * ( CastNode (( ( C54 |** R1 ) . R11 ) , R30) ) )))
proof
defpred S14[ Nat ] means ((for R8 being Nat holds (R8 <= $1 implies ( CastNode (( ( C54 |** R8 ) . R11 ) , R30) ) is non  elementary)) implies R37 |= ( * ( CastNode (( ( C54 |** $1 ) . R11 ) , R30) ) ));
L2183: (for R4 being Nat holds (S14[ R4 ] implies S14[ ( R4 + 1 ) ]))
proof
let R4 being Nat;
assume L2184: S14[ R4 ];
L2185: S14[ ( R4 + 1 ) ]
proof
set D275 = ( ( C54 |** R4 ) . R11 );
L2186: R4 <= ( R4 + 1 ) by NAT_1:13;
L2187: ( ( C54 |** ( R4 + 1 ) ) . R11 ) = ( ( C54 * ( C54 |** R4 ) ) . R11 ) by FUNCT_7:71
.= ( C54 . D275 ) by L2179 , FUNCT_2:15;
assume L2188: (for R8 being Nat holds (R8 <= ( R4 + 1 ) implies ( CastNode (( ( C54 |** R8 ) . R11 ) , R30) ) is non  elementary));
L2189: (( CastNode (D275 , R30) ) is non  elementary & R37 |= ( * ( CastNode (D275 , R30) ) )) by L2188 , L2184 , L2186 , XXREAL_0:2;
thus L2190: thesis by L2189 , L2177 , L2179 , L2187 , FUNCT_2:5;
end;
thus L2191: thesis by L2185;
end;
L2192: S14[ ( 0 ) ]
proof
assume L2193: (for R8 being Nat holds (R8 <= ( 0 ) implies ( CastNode (( ( C54 |** R8 ) . R11 ) , R30) ) is non  elementary));
L2194: ( C54 |** ( 0 ) ) = ( id D274 ) by FUNCT_7:84;
thus L2195: thesis by L2194 , L2179 , L2181 , FUNCT_1:18;
end;
L2196: (for R4 being Nat holds S14[ R4 ]) from NAT_1:sch 2(L2192 , L2183);
let R1 being Nat;
assume L2197: (for R8 being Nat holds (R8 <= R1 implies ( CastNode (( ( C54 |** R8 ) . R11 ) , R30) ) is non  elementary));
thus L2198: thesis by L2197 , L2196;
end;
thus L2199: thesis by L2182;
end;
thus L2200: thesis by L2178;
end;
theorem
L2201: (for R30 being LTL-formula holds (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for B54 being (Function of ( LTLNodes R30 ) , ( LTLNodes R30 )) holds (B54 is_succ_homomorphism R30 , R37 implies (for R11 being set holds ((R11 in ( LTLNodes R30 ) & ( CastNode (R11 , R30) ) is non  elementary & R37 |= ( * ( CastNode (R11 , R30) ) )) implies (for R1 being Nat holds ((for R8 being Nat holds (R8 <= R1 implies ( CastNode (( ( B54 |** R8 ) . R11 ) , R30) ) is non  elementary)) implies (( CastNode (( ( B54 |** ( R1 + 1 ) ) . R11 ) , R30) ) is_succ_of ( CastNode (( ( B54 |** R1 ) . R11 ) , R30) ) & R37 |= ( * ( CastNode (( ( B54 |** R1 ) . R11 ) , R30) ) ))))))))))
proof
let R30 being LTL-formula;
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
set D276 = ( LTLNodes R30 );
let C55 being (Function of D276 , D276);
assume L2202: C55 is_succ_homomorphism R30 , R37;
L2203: C55 is_homomorphism R30 , R37 by L2202 , L2171;
L2204: (for R11 being set holds ((R11 in D276 & ( CastNode (R11 , R30) ) is non  elementary & R37 |= ( * ( CastNode (R11 , R30) ) )) implies (for R1 being Nat holds ((for R8 being Nat holds (R8 <= R1 implies ( CastNode (( ( C55 |** R8 ) . R11 ) , R30) ) is non  elementary)) implies (( CastNode (( ( C55 |** ( R1 + 1 ) ) . R11 ) , R30) ) is_succ_of ( CastNode (( ( C55 |** R1 ) . R11 ) , R30) ) & R37 |= ( * ( CastNode (( ( C55 |** R1 ) . R11 ) , R30) ) ))))))
proof
let R11 being set;
assume that
L2205: R11 in D276
and
L2206: (( CastNode (R11 , R30) ) is non  elementary & R37 |= ( * ( CastNode (R11 , R30) ) ));
L2207: (for R1 being Nat holds ((for R8 being Nat holds (R8 <= R1 implies ( CastNode (( ( C55 |** R8 ) . R11 ) , R30) ) is non  elementary)) implies (( CastNode (( ( C55 |** ( R1 + 1 ) ) . R11 ) , R30) ) is_succ_of ( CastNode (( ( C55 |** R1 ) . R11 ) , R30) ) & R37 |= ( * ( CastNode (( ( C55 |** R1 ) . R11 ) , R30) ) ))))
proof
let R1 being Nat;
assume that
L2208: (for R8 being Nat holds (R8 <= R1 implies ( CastNode (( ( C55 |** R8 ) . R11 ) , R30) ) is non  elementary));
set D277 = ( ( C55 |** R1 ) . R11 );
L2209: D277 in D276 by L2205 , FUNCT_2:5;
L2210: ( ( C55 |** ( R1 + 1 ) ) . R11 ) = ( ( C55 * ( C55 |** R1 ) ) . R11 ) by FUNCT_7:71
.= ( C55 . D277 ) by L2205 , FUNCT_2:15;
L2211: (( CastNode (D277 , R30) ) is non  elementary & R37 |= ( * ( CastNode (D277 , R30) ) )) by L2203 , L2205 , L2206 , L2208 , L2175;
thus L2212: thesis by L2211 , L2202 , L2209 , L2210 , L2168;
end;
thus L2213: thesis by L2207;
end;
thus L2214: thesis by L2204;
end;
theorem
L2215: (for R30 being LTL-formula holds (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for B55 being (Function of ( LTLNodes R30 ) , ( LTLNodes R30 )) holds (B55 is_succ_homomorphism R30 , R37 implies (for R11 being set holds ((R11 in ( LTLNodes R30 ) & ( CastNode (R11 , R30) ) is non  elementary & R37 |= ( * ( CastNode (R11 , R30) ) )) implies (ex R2 being Nat st ((for R8 being Nat holds (R8 < R2 implies ( CastNode (( ( B55 |** R8 ) . R11 ) , R30) ) is non  elementary)) & ( CastNode (( ( B55 |** R2 ) . R11 ) , R30) ) is  elementary))))))))
proof
let R30 being LTL-formula;
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
set D278 = ( LTLNodes R30 );
let C56 being (Function of D278 , D278);
assume L2216: C56 is_succ_homomorphism R30 , R37;
L2217: (for R11 being set holds ((R11 in D278 & ( CastNode (R11 , R30) ) is non  elementary & R37 |= ( * ( CastNode (R11 , R30) ) )) implies (ex R2 being Nat st ((for R8 being Nat holds (R8 < R2 implies ( CastNode (( ( C56 |** R8 ) . R11 ) , R30) ) is non  elementary)) & ( CastNode (( ( C56 |** R2 ) . R11 ) , R30) ) is  elementary))))
proof
let R11 being set;
assume that
L2218: R11 in D278
and
L2219: ( CastNode (R11 , R30) ) is non  elementary
and
L2220: R37 |= ( * ( CastNode (R11 , R30) ) );
deffunc H3(set) = ( ( C56 |** ( CastNat $1 ) ) . R11 );
set D279 = ( ( len ( CastNode (( C56 . R11 ) , R30) ) ) + 1 );
L2221: ( 0 ) < ( ( 0 ) + D279 );
L2222: 1 <= D279 by L2221 , NAT_1:19;
reconsider D280 = D279 as Nat;
consider R19 being FinSequence such that L2223: (( len R19 ) = D280 & (for B56 being Nat holds (B56 in ( dom R19 ) implies ( R19 . B56 ) = H3(B56)))) from FINSEQ_1:sch 2;
set D281 = { B57 where B57 is (Element of ( NAT )) : (1 <= B57 & B57 <= D280 & ( CastNode (( ( C56 |** B57 ) . R11 ) , R30) ) is  elementary) };
L2224: ( Seg D280 ) = ( dom R19 ) by L2223 , FINSEQ_1:def 3;
L2225: (for R1 being Nat holds ((1 <= R1 & R1 <= ( len R19 )) implies ( R19 . R1 ) = ( ( C56 |** R1 ) . R11 )))
proof
let R1 being Nat;
assume L2226: (1 <= R1 & R1 <= ( len R19 ));
L2227: R1 in ( Seg D280 ) by L2226 , L2223 , FINSEQ_1:1;
L2228: ( R19 . R1 ) = ( ( C56 |** ( CastNat R1 ) ) . R11 ) by L2227 , L2223 , L2224;
thus L2229: thesis by L2228 , MODELC_2:def 1;
end;
L2230:
now
assume L2231: D281 = ( {} );
L2232: (for R1 being Nat holds ((1 <= R1 & R1 <= ( len R19 )) implies ( CastNode (( ( C56 |** R1 ) . R11 ) , R30) ) is non  elementary))
proof
let R1 being Nat;
assume that
L2233: (1 <= R1 & R1 <= ( len R19 ));
reconsider D282 = R1 as (Element of ( NAT )) by ORDINAL1:def 12;
L2234: (not D282 in D281) by L2231;
thus L2235: thesis by L2234 , L2223 , L2233;
end;
L2236: (for R1 being Nat holds ((1 <= R1 & R1 < ( len R19 )) implies ( CastNode (( ( C56 |** ( R1 + 1 ) ) . R11 ) , R30) ) is_succ_of ( CastNode (( ( C56 |** R1 ) . R11 ) , R30) )))
proof
let R1 being Nat;
assume that
L2237: 1 <= R1
and
L2238: R1 < ( len R19 );
L2239: (for R8 being Nat holds (R8 <= R1 implies ( CastNode (( ( C56 |** R8 ) . R11 ) , R30) ) is non  elementary))
proof
let R8 being Nat;
assume L2240: R8 <= R1;
L2241: R8 < ( len R19 ) by L2240 , L2238 , XXREAL_0:2;
L2242:
now
per cases  by L30;
suppose L2243: 1 <= R8;

thus L2244: thesis by L2243 , L2232 , L2241;
end;
suppose L2245: R8 = ( 0 );

L2246: ( C56 |** R8 ) = ( id D278 ) by L2245 , FUNCT_7:84;
thus L2247: thesis by L2246 , L2218 , L2219 , FUNCT_1:18;
end;
end;
thus L2249: thesis by L2242;
end;
thus L2250: thesis by L2239 , L2216 , L2218 , L2219 , L2220 , L2201;
end;
L2251: (for R4 being Nat holds ((1 <= R4 & R4 < ( len R19 )) implies (ex R31 being  strict LTLnode over R30 st (ex R36 being  strict LTLnode over R30 st (R31 = ( R19 . R4 ) & R36 = ( R19 . ( R4 + 1 ) ) & R36 is_succ_of R31)))))
proof
let R4 being Nat;
assume that
L2252: (1 <= R4 & R4 < ( len R19 ));
set D283 = ( R19 . ( R4 + 1 ) );
L2253: (1 <= ( R4 + 1 ) & ( R4 + 1 ) <= ( len R19 )) by L2252 , NAT_1:13;
L2254: D283 = ( ( C56 |** ( R4 + 1 ) ) . R11 ) by L2253 , L2225;
L2255: D283 in D278 by L2254 , L2218 , FUNCT_2:5;
L2256: (ex B58 being  strict LTLnode over R30 st D283 = B58) by L2255 , L2017;
set D284 = ( R19 . R4 );
L2257: D284 = ( ( C56 |** R4 ) . R11 ) by L2225 , L2252;
L2258: D284 in D278 by L2257 , L2218 , FUNCT_2:5;
L2259: (ex B59 being  strict LTLnode over R30 st D284 = B59) by L2258 , L2017;
reconsider D285 = D283 as  strict LTLnode over R30 by L2256;
reconsider D286 = D284 as  strict LTLnode over R30 by L2259;
L2260: (( CastNode (D286 , R30) ) = D286 & ( CastNode (D285 , R30) ) = D285) by L107;
thus L2261: thesis by L2260 , L2236 , L2252 , L2257 , L2254;
end;
L2262: R19 is_Finseq_for R30 by L2251 , L111;
L2263: ( len ( CastNode (( R19 . D280 ) , R30) ) ) <= ( ( ( len ( CastNode (( R19 . 1 ) , R30) ) ) - D280 ) + 1 ) by L2262 , L2222 , L2223 , L1615;
L2264: ( len ( CastNode (( R19 . D280 ) , R30) ) ) <= ( ( ( len ( CastNode (( ( C56 |** 1 ) . R11 ) , R30) ) ) - D280 ) + 1 ) by L2263 , L2222 , L2223 , L2225;
L2265: ( len ( CastNode (( R19 . D280 ) , R30) ) ) <= ( ( ( len ( CastNode (( C56 . R11 ) , R30) ) ) - D280 ) + 1 ) by L2264 , FUNCT_7:70;
L2266: ( len ( CastNode (( ( C56 |** D280 ) . R11 ) , R30) ) ) <= ( 0 ) by L2265 , L2222 , L2223 , L2225;
L2267: (the LTLnew of ( CastNode (( ( C56 |** D280 ) . R11 ) , R30) )) = ( {} R30 ) by L2266 , L1190;
L2268: ( CastNode (( ( C56 |** D280 ) . R11 ) , R30) ) is  elementary by L2267 , L99;
L2269: D280 in D281 by L2268 , L2222;
thus L2270: contradiction by L2269 , L2231;
end;
L2271: D281 c= ( Seg D280 )
proof
let R12 being set;
assume L2272: R12 in D281;
L2273: (ex B60 being (Element of ( NAT )) st (R12 = B60 & 1 <= B60 & B60 <= D280 & ( CastNode (( ( C56 |** B60 ) . R11 ) , R30) ) is  elementary)) by L2272;
thus L2274: thesis by L2273 , FINSEQ_1:1;
end;
consider R2 being Nat such that L2275: 1 <= R2 and L2276: R2 <= D280 and L2277: R2 in D281 and L2278: (for R8 being Nat holds ((1 <= R8 & R8 < R2) implies (not R8 in D281))) by L2271 , L2230 , L2108;
L2279: (for R8 being Nat holds (R8 < R2 implies ( CastNode (( ( C56 |** R8 ) . R11 ) , R30) ) is non  elementary))
proof
let R8 being Nat;
assume that
L2280: R8 < R2;
L2281:
now
per cases  by L30;
suppose L2282: R8 = ( 0 );

L2283: ( C56 |** R8 ) = ( id D278 ) by L2282 , FUNCT_7:84;
thus L2284: thesis by L2283 , L2218 , L2219 , FUNCT_1:18;
end;
suppose L2285: 1 <= R8;

L2286: (not R8 in D281) by L2285 , L2278 , L2280;
L2287:
now
assume L2288: ( CastNode (( ( C56 |** R8 ) . R11 ) , R30) ) is  elementary;
reconsider D287 = R8 as (Element of ( NAT )) by ORDINAL1:def 12;
L2289: D287 < D280 by L2276 , L2280 , XXREAL_0:2;
thus L2290: contradiction by L2289 , L2285 , L2286 , L2288;
end;
thus L2291: thesis by L2287;
end;
end;
thus L2293: thesis by L2281;
end;
L2294: ( CastNode (( ( C56 |** R2 ) . R11 ) , R30) ) is  elementary
proof
L2295: (ex B61 being (Element of ( NAT )) st (R2 = B61 & 1 <= B61 & B61 <= D280 & ( CastNode (( ( C56 |** B61 ) . R11 ) , R30) ) is  elementary)) by L2277;
thus L2296: thesis by L2295;
end;
thus L2297: thesis by L2294 , L2279;
end;
thus L2298: thesis by L2217;
end;
theorem
L2299: (for R30 being LTL-formula holds (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for B62 being (Function of ( LTLNodes R30 ) , ( LTLNodes R30 )) holds (B62 is_homomorphism R30 , R37 implies (for R11 being set holds ((R11 in ( LTLNodes R30 ) & ( CastNode (R11 , R30) ) is non  elementary) implies (for R1 being Nat holds ((( CastNode (( ( B62 |** R1 ) . R11 ) , R30) ) is non  elementary & R37 |= ( * ( CastNode (( ( B62 |** R1 ) . R11 ) , R30) ) )) implies R37 |= ( * ( CastNode (( ( B62 |** ( R1 + 1 ) ) . R11 ) , R30) ) )))))))))
proof
let R30 being LTL-formula;
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
set D288 = ( LTLNodes R30 );
let C57 being (Function of D288 , D288);
assume L2300: C57 is_homomorphism R30 , R37;
L2301: (for R11 being set holds ((R11 in D288 & ( CastNode (R11 , R30) ) is non  elementary) implies (for R1 being Nat holds ((( CastNode (( ( C57 |** R1 ) . R11 ) , R30) ) is non  elementary & R37 |= ( * ( CastNode (( ( C57 |** R1 ) . R11 ) , R30) ) )) implies R37 |= ( * ( CastNode (( ( C57 |** ( R1 + 1 ) ) . R11 ) , R30) ) )))))
proof
let R11 being set;
assume that
L2302: R11 in D288
and
L2303: ( CastNode (R11 , R30) ) is non  elementary;
L2304: (for R1 being Nat holds ((( CastNode (( ( C57 |** R1 ) . R11 ) , R30) ) is non  elementary & R37 |= ( * ( CastNode (( ( C57 |** R1 ) . R11 ) , R30) ) )) implies R37 |= ( * ( CastNode (( ( C57 |** ( R1 + 1 ) ) . R11 ) , R30) ) )))
proof
let R1 being Nat;
assume that
L2305: (( CastNode (( ( C57 |** R1 ) . R11 ) , R30) ) is non  elementary & R37 |= ( * ( CastNode (( ( C57 |** R1 ) . R11 ) , R30) ) ));
set D289 = ( ( C57 |** R1 ) . R11 );
L2306: ( ( C57 |** ( R1 + 1 ) ) . R11 ) = ( ( C57 * ( C57 |** R1 ) ) . R11 ) by FUNCT_7:71
.= ( C57 . D289 ) by L2302 , FUNCT_2:15;
L2307: D289 in D288 by L2302 , FUNCT_2:5;
thus L2308: thesis by L2307 , L2300 , L2305 , L2306 , L2169;
end;
thus L2309: thesis by L2304;
end;
thus L2310: thesis by L2301;
end;
theorem
L2311: (for R30 being LTL-formula holds (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for B63 being (Function of ( LTLNodes R30 ) , ( LTLNodes R30 )) holds (B63 is_succ_homomorphism R30 , R37 implies (for R11 being set holds ((R11 in ( LTLNodes R30 ) & ( CastNode (R11 , R30) ) is non  elementary & R37 |= ( * ( CastNode (R11 , R30) ) )) implies (ex R2 being Nat st ((for R8 being Nat holds (R8 < R2 implies (( CastNode (( ( B63 |** R8 ) . R11 ) , R30) ) is non  elementary & ( CastNode (( ( B63 |** ( R8 + 1 ) ) . R11 ) , R30) ) is_succ_of ( CastNode (( ( B63 |** R8 ) . R11 ) , R30) )))) & ( CastNode (( ( B63 |** R2 ) . R11 ) , R30) ) is  elementary & (for R8 being Nat holds (R8 <= R2 implies R37 |= ( * ( CastNode (( ( B63 |** R8 ) . R11 ) , R30) ) )))))))))))
proof
let R30 being LTL-formula;
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
set D290 = ( LTLNodes R30 );
let C58 being (Function of D290 , D290);
assume L2312: C58 is_succ_homomorphism R30 , R37;
L2313: (for R12 being set holds ((R12 in D290 & ( CastNode (R12 , R30) ) is non  elementary & R37 |= ( * ( CastNode (R12 , R30) ) )) implies R37 |= ( * ( CastNode (( C58 . R12 ) , R30) ) ))) by L2312 , L2168;
L2314: C58 is_homomorphism R30 , R37 by L2313 , L2169;
L2315: (for R11 being set holds ((R11 in ( LTLNodes R30 ) & ( CastNode (R11 , R30) ) is non  elementary & R37 |= ( * ( CastNode (R11 , R30) ) )) implies (ex R2 being Nat st ((for R8 being Nat holds (R8 < R2 implies (( CastNode (( ( C58 |** R8 ) . R11 ) , R30) ) is non  elementary & ( CastNode (( ( C58 |** ( R8 + 1 ) ) . R11 ) , R30) ) is_succ_of ( CastNode (( ( C58 |** R8 ) . R11 ) , R30) )))) & ( CastNode (( ( C58 |** R2 ) . R11 ) , R30) ) is  elementary & (for R8 being Nat holds (R8 <= R2 implies R37 |= ( * ( CastNode (( ( C58 |** R8 ) . R11 ) , R30) ) )))))))
proof
let R11 being set;
assume that
L2316: R11 in D290
and
L2317: ( CastNode (R11 , R30) ) is non  elementary
and
L2318: R37 |= ( * ( CastNode (R11 , R30) ) );
consider R2 being Nat such that L2319: (for R8 being Nat holds (R8 < R2 implies ( CastNode (( ( C58 |** R8 ) . R11 ) , R30) ) is non  elementary)) and L2320: ( CastNode (( ( C58 |** R2 ) . R11 ) , R30) ) is  elementary by L2312 , L2316 , L2317 , L2318 , L2215;
L2321: (for R8 being Nat holds (R8 < R2 implies ( CastNode (( ( C58 |** ( R8 + 1 ) ) . R11 ) , R30) ) is_succ_of ( CastNode (( ( C58 |** R8 ) . R11 ) , R30) )))
proof
let R8 being Nat;
assume L2322: R8 < R2;
L2323: (for R9 being Nat holds (R9 <= R8 implies ( CastNode (( ( C58 |** R9 ) . R11 ) , R30) ) is non  elementary))
proof
let R9 being Nat;
assume L2324: R9 <= R8;
L2325: R9 < R2 by L2324 , L2322 , XXREAL_0:2;
thus L2326: thesis by L2325 , L2319;
end;
thus L2327: thesis by L2323 , L2312 , L2316 , L2317 , L2318 , L2201;
end;
L2328: (for R8 being Nat holds (R8 < R2 implies (( CastNode (( ( C58 |** R8 ) . R11 ) , R30) ) is non  elementary & ( CastNode (( ( C58 |** ( R8 + 1 ) ) . R11 ) , R30) ) is_succ_of ( CastNode (( ( C58 |** R8 ) . R11 ) , R30) )))) by L2321 , L2319;
defpred S15[ Nat ] means ($1 <= R2 implies (for R8 being Nat holds (R8 <= $1 implies R37 |= ( * ( CastNode (( ( C58 |** R8 ) . R11 ) , R30) ) ))));
L2329: (for R4 being Nat holds (S15[ R4 ] implies S15[ ( R4 + 1 ) ]))
proof
let R4 being Nat;
assume L2330: S15[ R4 ];
L2331: S15[ ( R4 + 1 ) ]
proof
assume L2332: ( R4 + 1 ) <= R2;
L2333: R4 < R2 by L2332 , NAT_1:13;
L2334: ( CastNode (( ( C58 |** R4 ) . R11 ) , R30) ) is non  elementary by L2333 , L2319;
L2335: (for R8 being Nat holds (R8 <= ( R4 + 1 ) implies R37 |= ( * ( CastNode (( ( C58 |** R8 ) . R11 ) , R30) ) )))
proof
let R8 being Nat;
L2336: R37 |= ( * ( CastNode (( ( C58 |** R4 ) . R11 ) , R30) ) ) by L2330 , L2332 , NAT_1:13;
L2337: R37 |= ( * ( CastNode (( ( C58 |** ( R4 + 1 ) ) . R11 ) , R30) ) ) by L2336 , L2314 , L2316 , L2317 , L2334 , L2299;
assume L2338: R8 <= ( R4 + 1 );
thus L2339: thesis by L2338 , L2330 , L2333 , L2337 , NAT_1:8;
end;
thus L2340: thesis by L2335;
end;
thus L2341: thesis by L2331;
end;
L2342: S15[ ( 0 ) ]
proof
assume L2343: ( 0 ) <= R2;
L2344: (for R8 being Nat holds (R8 <= ( 0 ) implies R37 |= ( * ( CastNode (( ( C58 |** R8 ) . R11 ) , R30) ) )))
proof
let R8 being Nat;
assume L2345: R8 <= ( 0 );
L2346: R8 = ( 0 ) by L2345;
L2347: ( C58 |** R8 ) = ( id D290 ) by L2346 , FUNCT_7:84;
thus L2348: thesis by L2347 , L2316 , L2318 , FUNCT_1:18;
end;
thus L2349: thesis by L2344;
end;
L2350: (for R4 being Nat holds S15[ R4 ]) from NAT_1:sch 2(L2342 , L2329);
L2351: (for R8 being Nat holds (R8 <= R2 implies R37 |= ( * ( CastNode (( ( C58 |** R8 ) . R11 ) , R30) ) ))) by L2350;
thus L2352: thesis by L2351 , L2320 , L2328;
end;
thus L2353: thesis by L2315;
end;
theorem
L2354: (for R2 being Nat holds (for R30 being LTL-formula holds (for R44 being (sequence of ( LTLStates R30 )) holds (ex R40 being  elementary  strict LTLnode over R30 st R40 = ( CastNode (( R44 . R2 ) , R30) )))))
proof
let R2 being Nat;
let R30 being LTL-formula;
let R44 being (sequence of ( LTLStates R30 ));
reconsider D291 = R2 as (Element of ( NAT )) by ORDINAL1:def 12;
consider R40 being  elementary  strict LTLnode over R30 such that L2355: R40 = ( R44 . D291 ) by L2100;
L2356: ( CastNode (( R44 . D291 ) , R30) ) = R40 by L2355 , L107;
thus L2357: thesis by L2356;
end;
L2358: (for R2 being Nat holds (for R22 being LTL-formula holds (for R24 being LTL-formula holds (for R30 being LTL-formula holds (for R44 being (sequence of ( LTLStates R30 )) holds ((( R22 'U' R24 ) in (the LTLold of ( CastNode (( R44 . 1 ) , R30) )) & (for R8 being Nat holds ( CastNode (( R44 . ( R8 + 1 ) ) , R30) ) is_next_of ( CastNode (( R44 . R8 ) , R30) ))) implies ((for R8 being Nat holds ((1 <= R8 & R8 < R2) implies (not R24 in (the LTLold of ( CastNode (( R44 . R8 ) , R30) ))))) implies (for R8 being Nat holds ((1 <= R8 & R8 < R2) implies (R22 in (the LTLold of ( CastNode (( R44 . R8 ) , R30) )) & ( R22 'U' R24 ) in (the LTLold of ( CastNode (( R44 . R8 ) , R30) ))))))))))))
proof
let R2 being Nat;
let R22 being LTL-formula;
let R24 being LTL-formula;
let R30 being LTL-formula;
let R44 being (sequence of ( LTLStates R30 ));
deffunc H4(Nat) = ( CastNode (( R44 . $1 ) , R30) );
assume that
L2359: ( R22 'U' R24 ) in (the LTLold of H4(1))
and
L2360: (for R8 being Nat holds H4(( R8 + 1 )) is_next_of H4(R8));
defpred S16[ Nat ] means ((for R8 being Nat holds ((1 <= R8 & R8 < $1) implies (not R24 in (the LTLold of H4(R8))))) implies (for R8 being Nat holds ((1 <= R8 & R8 < $1) implies (R22 in (the LTLold of H4(R8)) & ( R22 'U' R24 ) in (the LTLold of H4(R8))))));
L2361: (for R1 being Nat holds (S16[ R1 ] implies S16[ ( R1 + 1 ) ]))
proof
let R1 being Nat;
assume that
L2362: S16[ R1 ];
set D292 = ( R1 + 1 );
L2363: ((for R8 being Nat holds ((1 <= R8 & R8 < D292) implies (not R24 in (the LTLold of H4(R8))))) implies (for R8 being Nat holds ((1 <= R8 & R8 < D292) implies (R22 in (the LTLold of H4(R8)) & ( R22 'U' R24 ) in (the LTLold of H4(R8))))))
proof
assume L2364: (for R8 being Nat holds ((1 <= R8 & R8 < D292) implies (not R24 in (the LTLold of H4(R8)))));
L2365: R1 <= D292 by NAT_1:11;
L2366: (for R8 being Nat holds ((1 <= R8 & R8 < R1) implies (not R24 in (the LTLold of H4(R8)))))
proof
let R8 being Nat;
assume that
L2367: 1 <= R8
and
L2368: R8 < R1;
L2369: R8 < D292 by L2365 , L2368 , XXREAL_0:2;
thus L2370: thesis by L2369 , L2364 , L2367;
end;
L2371: (for R8 being Nat holds ((1 <= R8 & R8 < D292) implies (R22 in (the LTLold of H4(R8)) & ( R22 'U' R24 ) in (the LTLold of H4(R8)))))
proof
let R8 being Nat;
assume that
L2372: 1 <= R8
and
L2373: R8 < D292;
L2374: R8 <= R1 by L2373 , NAT_1:13;
L2375:
now
per cases  by L2374 , XXREAL_0:1;
suppose L2376: R8 < R1;

thus L2377: thesis by L2376 , L2362 , L2366 , L2372;
end;
suppose L2378: R8 = R1;

L2379:
now
per cases  by L2372 , L2378 , XXREAL_0:1;
suppose L2380: R1 = 1;

L2381: (H4(( ( 0 ) + 1 )) is_next_of H4(( 0 )) & H4(( 1 + 1 )) is_next_of H4(1)) by L2360;
L2382: ((ex R41 being  elementary  strict LTLnode over R30 st R41 = H4(( 0 ))) & (ex R43 being  elementary  strict LTLnode over R30 st R43 = H4(2))) by L2354;
consider R42 being  elementary  strict LTLnode over R30 such that L2383: R42 = H4(1) by L2354;
L2384: (not R24 in (the LTLold of R42)) by L2364 , L2380 , L2383;
thus L2385: thesis by L2384 , L2359 , L2378 , L2380 , L2383 , L2382 , L2381 , L1940;
end;
suppose L2386: 1 < R1;

set D293 = ( R1 - 1 );
reconsider D294 = D293 as Nat by L2386 , NAT_1:20;
set D295 = ( D294 - 1 );
L2387: 1 < ( D294 + 1 ) by L2386;
L2388: 1 <= D294 by L2387 , NAT_1:13;
reconsider D296 = D295 as Nat by L2388 , NAT_1:21;
consider C59 being  elementary  strict LTLnode over R30 such that L2389: C59 = H4(D294) by L2354;
L2390: D294 < ( D294 + 1 ) by NAT_1:19;
L2391: D294 < D292 by L2390 , L2365 , XXREAL_0:2;
L2392: (not R24 in (the LTLold of C59)) by L2391 , L2364 , L2388 , L2389;
L2393: ((ex B64 being  elementary  strict LTLnode over R30 st B64 = H4(D292)) & H4(( D294 + 1 )) is_next_of H4(D294)) by L2360 , L2354;
L2394: ((ex B65 being  elementary  strict LTLnode over R30 st B65 = H4(D296)) & H4(( D296 + 1 )) is_next_of H4(D296)) by L2360 , L2354;
L2395: H4(( D294 + 1 )) is_next_of H4(D294) by L2360;
L2396: H4(( R1 + 1 )) is_next_of H4(R1) by L2360;
consider C60 being  elementary  strict LTLnode over R30 such that L2397: C60 = H4(R1) by L2354;
L2398: (not R24 in (the LTLold of C60)) by L2364 , L2372 , L2373 , L2378 , L2397;
L2399: ( R22 'U' R24 ) in (the LTLold of C59) by L2362 , L2366 , L2388 , L2389 , L2390;
L2400: ( R22 'U' R24 ) in (the LTLold of C60) by L2399 , L2389 , L2397 , L2392 , L2394 , L2395 , L1940;
thus L2401: thesis by L2400 , L2378 , L2389 , L2397 , L2398 , L2393 , L2396 , L1940;
end;
end;
thus L2403: thesis by L2379;
end;
end;
thus L2405: thesis by L2375;
end;
thus L2406: thesis by L2371;
end;
thus L2407: thesis by L2363;
end;
L2408: S16[ ( 0 ) ];
L2409: (for R2 being Nat holds S16[ R2 ]) from NAT_1:sch 2(L2408 , L2361);
thus L2410: thesis by L2409;
end;
theorem
L2411: (for R2 being Nat holds (for R26 being LTL-formula holds (for R30 being LTL-formula holds (for R44 being (sequence of ( LTLStates R30 )) holds ((R26 is  Until & R26 in (the LTLold of ( CastNode (( R44 . 1 ) , R30) )) & (for R8 being Nat holds ( CastNode (( R44 . ( R8 + 1 ) ) , R30) ) is_next_of ( CastNode (( R44 . R8 ) , R30) ))) implies ((for R8 being Nat holds ((1 <= R8 & R8 < R2) implies (not ( the_right_argument_of R26 ) in (the LTLold of ( CastNode (( R44 . R8 ) , R30) ))))) implies (for R8 being Nat holds ((1 <= R8 & R8 < R2) implies (( the_left_argument_of R26 ) in (the LTLold of ( CastNode (( R44 . R8 ) , R30) )) & R26 in (the LTLold of ( CastNode (( R44 . R8 ) , R30) )))))))))))
proof
let R2 being Nat;
let R26 being LTL-formula;
let R30 being LTL-formula;
let R44 being (sequence of ( LTLStates R30 ));
deffunc H5(Nat) = ( CastNode (( R44 . $1 ) , R30) );
assume that
L2412: R26 is  Until
and
L2413: (R26 in (the LTLold of H5(1)) & (for R8 being Nat holds H5(( R8 + 1 )) is_next_of H5(R8)));
set D297 = ( the_right_argument_of R26 );
set D298 = ( the_left_argument_of R26 );
L2414: R26 = ( D298 'U' D297 ) by L2412 , MODELC_2:8;
thus L2415: thesis by L2414 , L2413 , L2358;
end;
L2416: (for R22 being LTL-formula holds (for R24 being LTL-formula holds (for R30 being LTL-formula holds (for R44 being (sequence of ( LTLStates R30 )) holds ((( R22 'U' R24 ) in (the LTLold of ( CastNode (( R44 . 1 ) , R30) )) & (for R8 being Nat holds ( CastNode (( R44 . ( R8 + 1 ) ) , R30) ) is_next_of ( CastNode (( R44 . R8 ) , R30) ))) implies ((for R8 being Nat holds (R8 >= 1 implies (( R22 'U' R24 ) in (the LTLold of ( CastNode (( R44 . R8 ) , R30) )) & R22 in (the LTLold of ( CastNode (( R44 . R8 ) , R30) )) & (not R24 in (the LTLold of ( CastNode (( R44 . R8 ) , R30) )))))) or (ex R9 being Nat st (R9 >= 1 & R24 in (the LTLold of ( CastNode (( R44 . R9 ) , R30) )) & (for R8 being Nat holds ((1 <= R8 & R8 < R9) implies (( R22 'U' R24 ) in (the LTLold of ( CastNode (( R44 . R8 ) , R30) )) & R22 in (the LTLold of ( CastNode (( R44 . R8 ) , R30) )))))))))))))
proof
let R22 being LTL-formula;
let R24 being LTL-formula;
let R30 being LTL-formula;
let R44 being (sequence of ( LTLStates R30 ));
deffunc H6(Nat) = ( CastNode (( R44 . $1 ) , R30) );
assume L2417: (( R22 'U' R24 ) in (the LTLold of H6(1)) & (for R8 being Nat holds H6(( R8 + 1 )) is_next_of H6(R8)));
L2418: ((not (for R8 being Nat holds (R8 >= 1 implies (( R22 'U' R24 ) in (the LTLold of H6(R8)) & R22 in (the LTLold of H6(R8)) & (not R24 in (the LTLold of H6(R8))))))) implies (ex R9 being Nat st (R9 >= 1 & R24 in (the LTLold of H6(R9)) & (for R8 being Nat holds ((1 <= R8 & R8 < R9) implies (( R22 'U' R24 ) in (the LTLold of H6(R8)) & R22 in (the LTLold of H6(R8))))))))
proof
assume L2419: (not (for R8 being Nat holds (R8 >= 1 implies (( R22 'U' R24 ) in (the LTLold of H6(R8)) & R22 in (the LTLold of H6(R8)) & (not R24 in (the LTLold of H6(R8)))))));
consider R1 being Nat such that L2420: R1 >= 1 and L2421: ((not (( R22 'U' R24 ) in (the LTLold of H6(R1)) & R22 in (the LTLold of H6(R1)))) or R24 in (the LTLold of H6(R1))) by L2419;
set D299 = ( R1 + 1 );
L2422: (ex R4 being Nat st (1 <= R4 & R4 <= R1 & R24 in (the LTLold of H6(R4))))
proof
L2423:
now
per cases  by L2421;
suppose L2424: (not (( R22 'U' R24 ) in (the LTLold of H6(R1)) & R22 in (the LTLold of H6(R1))));

L2425:
now
assume L2426: (not (ex R4 being Nat st (1 <= R4 & R4 <= R1 & R24 in (the LTLold of H6(R4)))));
L2427: (for R4 being Nat holds ((1 <= R4 & R4 < D299) implies (not R24 in (the LTLold of H6(R4)))))
proof
let R4 being Nat;
assume that
L2428: 1 <= R4
and
L2429: R4 < D299;
L2430: R4 <= R1 by L2429 , NAT_1:13;
thus L2431: thesis by L2430 , L2426 , L2428;
end;
L2432: R1 < D299 by NAT_1:13;
thus L2433: contradiction by L2432 , L2417 , L2420 , L2424 , L2427 , L2358;
end;
thus L2434: thesis by L2425;
end;
suppose L2435: R24 in (the LTLold of H6(R1));

thus L2436: thesis by L2435 , L2420;
end;
end;
thus L2438: thesis by L2423;
end;
consider R6 being Nat such that L2439: (1 <= R6 & R6 <= R1 & R24 in (the LTLold of H6(R6))) by L2422;
set D300 = { B66 where B66 is (Element of ( NAT )) : (1 <= B66 & B66 <= R1 & R24 in (the LTLold of H6(B66))) };
L2440: D300 c= ( Seg R1 )
proof
let R11 being set;
assume L2441: R11 in D300;
L2442: (ex B67 being (Element of ( NAT )) st (R11 = B67 & 1 <= B67 & B67 <= R1 & R24 in (the LTLold of H6(B67)))) by L2441;
thus L2443: thesis by L2442 , FINSEQ_1:1;
end;
reconsider D301 = R6 as (Element of ( NAT )) by ORDINAL1:def 12;
L2444: D301 in D300 by L2439;
consider R9 being Nat such that L2445: 1 <= R9 and L2446: R9 <= R1 and L2447: R9 in D300 and L2448: (for R8 being Nat holds ((1 <= R8 & R8 < R9) implies (not R8 in D300))) by L2444 , L2440 , L2108;
L2449: (for R8 being Nat holds ((1 <= R8 & R8 < R9) implies (not R24 in (the LTLold of H6(R8)))))
proof
let R8 being Nat;
assume that
L2450: 1 <= R8
and
L2451: R8 < R9;
L2452: R8 < R1 by L2446 , L2451 , XXREAL_0:2;
reconsider D302 = R8 as (Element of ( NAT )) by ORDINAL1:def 12;
L2453: (not D302 in D300) by L2448 , L2450 , L2451;
thus L2454: thesis by L2453 , L2450 , L2452;
end;
L2455: (for R8 being Nat holds ((1 <= R8 & R8 < R9) implies (( R22 'U' R24 ) in (the LTLold of H6(R8)) & R22 in (the LTLold of H6(R8))))) by L2449 , L2417 , L2358;
L2456: (R9 >= 1 & R24 in (the LTLold of H6(R9)))
proof
L2457: (ex B68 being (Element of ( NAT )) st (R9 = B68 & 1 <= B68 & B68 <= R1 & R24 in (the LTLold of H6(B68)))) by L2447;
thus L2458: thesis by L2457;
end;
thus L2459: thesis by L2456 , L2455;
end;
thus L2460: thesis by L2418;
end;
theorem
L2461: (for R26 being LTL-formula holds (for R30 being LTL-formula holds (for R44 being (sequence of ( LTLStates R30 )) holds ((R26 is  Until & R26 in (the LTLold of ( CastNode (( R44 . 1 ) , R30) )) & (for R8 being Nat holds ( CastNode (( R44 . ( R8 + 1 ) ) , R30) ) is_next_of ( CastNode (( R44 . R8 ) , R30) ))) implies ((for R8 being Nat holds (R8 >= 1 implies (R26 in (the LTLold of ( CastNode (( R44 . R8 ) , R30) )) & ( the_left_argument_of R26 ) in (the LTLold of ( CastNode (( R44 . R8 ) , R30) )) & (not ( the_right_argument_of R26 ) in (the LTLold of ( CastNode (( R44 . R8 ) , R30) )))))) or (ex R9 being Nat st (R9 >= 1 & ( the_right_argument_of R26 ) in (the LTLold of ( CastNode (( R44 . R9 ) , R30) )) & (for R8 being Nat holds ((1 <= R8 & R8 < R9) implies (R26 in (the LTLold of ( CastNode (( R44 . R8 ) , R30) )) & ( the_left_argument_of R26 ) in (the LTLold of ( CastNode (( R44 . R8 ) , R30) ))))))))))))
proof
let R26 being LTL-formula;
let R30 being LTL-formula;
let R44 being (sequence of ( LTLStates R30 ));
deffunc H7(Nat) = ( CastNode (( R44 . $1 ) , R30) );
assume that
L2462: R26 is  Until
and
L2463: (R26 in (the LTLold of H7(1)) & (for R8 being Nat holds H7(( R8 + 1 )) is_next_of H7(R8)));
set D303 = ( the_right_argument_of R26 );
set D304 = ( the_left_argument_of R26 );
L2464: R26 = ( D304 'U' D303 ) by L2462 , MODELC_2:8;
thus L2465: thesis by L2464 , L2463 , L2416;
end;
theorem
L2466: (for R13 being set holds ( union ( BOOL R13 ) ) = R13)
proof
let R13 being set;
L2467: ( {} ) c= R13 by XBOOLE_1:2;
L2468: (( BOOL R13 ) = ( ( bool R13 ) \ { ( {} ) } ) & { ( {} ) } c= ( bool R13 )) by L2467 , ORDERS_1:def 2 , ZFMISC_1:31;
L2469: ( ( BOOL R13 ) \/ { ( {} ) } ) c= ( bool R13 ) by L2468 , XBOOLE_1:8;
L2470: ( ( BOOL R13 ) \/ { ( {} ) } ) = ( ( ( bool R13 ) \ { ( {} ) } ) \/ { ( {} ) } ) by ORDERS_1:def 2
.= ( ( bool R13 ) \/ { ( {} ) } ) by XBOOLE_1:39;
L2471: ( bool R13 ) c= ( ( BOOL R13 ) \/ { ( {} ) } ) by L2470 , XBOOLE_1:7;
L2472: ( bool R13 ) = ( ( BOOL R13 ) \/ { ( {} ) } ) by L2471 , L2469 , XBOOLE_0:def 10;
L2473: R13 = ( union ( bool R13 ) ) by ZFMISC_1:81
.= ( ( union ( BOOL R13 ) ) \/ ( union { ( {} ) } ) ) by L2472 , ZFMISC_1:78
.= ( ( union ( BOOL R13 ) ) \/ ( {} ) ) by ZFMISC_1:25;
thus L2474: thesis by L2473;
end;
theorem
L2475: (for R30 being LTL-formula holds (for R31 being  strict LTLnode over R30 holds (R31 is non  elementary implies ((the LTLnew of R31) <> ( {} ) & (the LTLnew of R31) in ( BOOL ( Subformulae R30 ) )))))
proof
let R30 being LTL-formula;
let R31 being  strict LTLnode over R30;
set D305 = (the LTLnew of R31);
assume L2476: R31 is non  elementary;
L2477: D305 <> ( {} ) by L2476 , L99;
thus L2478: thesis by L2477 , ORDERS_1:2;
end;
registration
let R30 being LTL-formula;
cluster ( union ( BOOL ( Subformulae R30 ) ) ) -> non  empty;
correctness by L2466;
cluster ( BOOL ( Subformulae R30 ) ) -> non  empty;
correctness;
end;
theorem
L2480: (for R30 being LTL-formula holds (ex B69 being (Choice_Function of ( BOOL ( Subformulae R30 ) )) st B69 is (Function of ( BOOL ( Subformulae R30 ) ) , ( Subformulae R30 ))))
proof
let R30 being LTL-formula;
set D306 = ( Subformulae R30 );
set D307 = ( BOOL D306 );
L2481: (for R11 being set holds (R11 in D307 implies R11 <> ( {} ))) by ORDERS_1:1;
consider C61 being Function such that L2482: ( dom C61 ) = D307 and L2483: (for R11 being set holds (R11 in D307 implies ( C61 . R11 ) in R11)) by L2481 , FUNCT_1:111;
L2484: (for R11 being set holds (R11 in D307 implies ( C61 . R11 ) in D306))
proof
let R11 being set;
assume that
L2485: R11 in D307;
L2486: R11 is non  empty by L2485 , ORDERS_1:1;
L2487: R11 is (Subset of D306) by L2486 , L2485 , ORDERS_1:2;
L2488: ( C61 . R11 ) in R11 by L2483 , L2485;
thus L2489: thesis by L2488 , L2487;
end;
L2490: C61 is (Function of D307 , D306) by L2484 , L2482 , FUNCT_2:3;
L2491: ((not ( {} ) in D307) & ( union D307 ) = D306) by L2466 , ORDERS_1:1;
reconsider D308 = C61 as (Choice_Function of D307) by L2491 , L2483 , L2490 , ORDERS_1:def 1;
take D308;
thus L2492: thesis by L2482 , L2484 , FUNCT_2:3;
end;
definition
let R30 being LTL-formula;
let R45 being (Choice_Function of ( BOOL ( Subformulae R30 ) ));
let R31 being  strict LTLnode over R30;
assume L2493: R31 is non  elementary;
func chosen_formula (R45 , R31) -> LTL-formula equals 
:L2494: ( R45 . (the LTLnew of R31) );
correctness
proof
set D309 = (the LTLnew of R31);
set D310 = ( R45 . D309 );
L2495: D309 in ( BOOL ( Subformulae R30 ) ) by L2493 , L2475;
L2496: ( R45 . D309 ) in ( union ( BOOL ( Subformulae R30 ) ) ) by L2495 , FUNCT_2:5;
L2497: D310 in ( Subformulae R30 ) by L2496 , L2466;
L2498: (ex R22 being LTL-formula st (R22 = D310 & R22 is_subformula_of R30)) by L2497 , MODELC_2:def 24;
thus L2499: thesis by L2498;
end;
end;
theorem
L2501: (for R30 being LTL-formula holds (for R31 being  strict LTLnode over R30 holds (for R45 being (Choice_Function of ( BOOL ( Subformulae R30 ) )) holds (R31 is non  elementary implies ( chosen_formula (R45 , R31) ) in (the LTLnew of R31)))))
proof
let R30 being LTL-formula;
let R31 being  strict LTLnode over R30;
let R45 being (Choice_Function of ( BOOL ( Subformulae R30 ) ));
set D311 = (the LTLnew of R31);
set D312 = ( BOOL ( Subformulae R30 ) );
assume L2502: (not R31 is  elementary);
L2503: ((not ( {} ) in D312) & D311 in D312) by L2502 , L2475 , ORDERS_1:1;
L2504: ( R45 . D311 ) in D311 by L2503 , ORDERS_1:def 1;
thus L2505: thesis by L2504 , L2502 , L2494;
end;
definition
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
let R30 being LTL-formula;
let R45 being (Choice_Function of ( BOOL ( Subformulae R30 ) ));
let R31 being  strict LTLnode over R30;
func chosen_succ (R37 , R30 , R45 , R31) ->  strict LTLnode over R30 equals 
:L2506: ( SuccNode1 (( chosen_formula (R45 , R31) ) , R31) ) if (((not ( chosen_formula (R45 , R31) ) is  Until) & R37 |= ( * ( SuccNode1 (( chosen_formula (R45 , R31) ) , R31) ) )) or (( chosen_formula (R45 , R31) ) is  Until & R37 |/= ( the_right_argument_of ( chosen_formula (R45 , R31) ) ))) otherwise ( SuccNode2 (( chosen_formula (R45 , R31) ) , R31) );
correctness;
end;
theorem
L2508: (for R30 being LTL-formula holds (for R31 being  strict LTLnode over R30 holds (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for R45 being (Choice_Function of ( BOOL ( Subformulae R30 ) )) holds ((R37 |= ( * R31 ) & R31 is non  elementary) implies (R37 |= ( * ( chosen_succ (R37 , R30 , R45 , R31) ) ) & ( chosen_succ (R37 , R30 , R45 , R31) ) is_succ_of R31))))))
proof
let R30 being LTL-formula;
let R31 being  strict LTLnode over R30;
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
let R45 being (Choice_Function of ( BOOL ( Subformulae R30 ) ));
assume that
L2509: R37 |= ( * R31 )
and
L2510: R31 is non  elementary;
set D313 = ( chosen_formula (R45 , R31) );
set D314 = ( chosen_succ (R37 , R30 , R45 , R31) );
set D315 = ( the_right_argument_of D313 );
L2511: D313 in (the LTLnew of R31) by L2510 , L2501;
L2512:
now
per cases ;
suppose L2513: (((not D313 is  Until) & R37 |= ( * ( SuccNode1 (D313 , R31) ) )) or (D313 is  Until & R37 |/= D315));

L2514: D314 = ( SuccNode1 (D313 , R31) ) by L2513 , L2506;
L2515: R37 |= ( * D314 )
proof
L2516:
now
per cases  by L2513;
suppose L2517: ((not D313 is  Until) & R37 |= ( * ( SuccNode1 (D313 , R31) ) ));

thus L2518: thesis by L2517 , L2506;
end;
suppose L2519: (D313 is  Until & R37 |/= D315);

set D316 = ( SuccNode2 (D313 , R31) );
L2520: (R37 |= ( * D314 ) or R37 |= ( * D316 )) by L2509 , L2511 , L2514 , L2519 , L381;
L2521:
now
L2522: (the LTLold of D316) = ( (the LTLold of R31) \/ { D313 } ) by L2511 , L84;
L2523: (D315 in (the LTLold of R31) implies D315 in (the LTLold of D316)) by L2522 , XBOOLE_0:def 3;
L2524: ( LTLNew2 D313 ) = { D315 } by L2519 , L70;
L2525: D315 in ( LTLNew2 D313 ) by L2524 , TARSKI:def 1;
L2526: ((not D315 in (the LTLold of R31)) implies D315 in ( ( LTLNew2 D313 ) \ (the LTLold of R31) )) by L2525 , XBOOLE_0:def 5;
assume L2527: (not R37 |= ( * D314 ));
L2528: (the LTLnew of D316) = ( ( (the LTLnew of R31) \ { D313 } ) \/ ( ( LTLNew2 D313 ) \ (the LTLold of R31) ) ) by L2511 , L84;
L2529: ((not D315 in (the LTLold of R31)) implies D315 in (the LTLnew of D316)) by L2528 , L2526 , XBOOLE_0:def 3;
L2530: D315 in ( * D316 ) by L2529 , L2523 , L1;
thus L2531: contradiction by L2530 , L2519 , L2520 , L2527 , MODELC_2:def 64;
end;
thus L2532: thesis by L2521;
end;
end;
thus L2534: thesis by L2516;
end;
L2535: D314 is_succ1_of R31 by L2511 , L2514 , L93;
thus L2536: thesis by L2535 , L2515 , L96;
end;
suppose L2537: (not (((not D313 is  Until) & R37 |= ( * ( SuccNode1 (D313 , R31) ) )) or (D313 is  Until & R37 |/= D315)));

set D317 = ( SuccNode1 (D313 , R31) );
L2538: D314 = ( SuccNode2 (D313 , R31) ) by L2537 , L2506;
L2539: (R37 |= ( * D314 ) & D314 is_succ_of R31)
proof
L2540:
now
per cases  by L2537;
suppose L2541: (D313 is  Until & R37 |= D315);

set D318 = (the LTLnew of R31);
set D319 = (the LTLold of R31);
set D320 = (the LTLnew of D314);
L2542: ( LTLNew2 D313 ) = { D315 } by L2541 , L70;
L2543: D320 = ( ( D318 \ { D313 } ) \/ ( { D315 } \ D319 ) ) by L2542 , L2511 , L2538 , L84;
L2544: ( D318 \ { D313 } ) c= D318 by XBOOLE_1:36;
L2545: D320 c= ( D318 \/ { D315 } ) by L2544 , L2543 , XBOOLE_1:13;
set D321 = (the LTLnext of R31);
set D322 = (the LTLnext of D314);
set D323 = (the LTLold of D314);
L2546: (D323 = ( D319 \/ { D313 } ) & { D313 } c= D318) by L2511 , L2538 , L84 , ZFMISC_1:31;
L2547: D323 c= ( D319 \/ D318 ) by L2546 , XBOOLE_1:9;
L2548: D322 = D321 by L2511 , L2538 , L84;
L2549: (for R24 being LTL-formula holds (R24 in ( * D314 ) implies R37 |= R24))
proof
let R24 being LTL-formula;
assume L2550: R24 in ( * D314 );
L2551:
now
per cases  by L2550 , L1;
suppose L2552: R24 in D323;

L2553: R24 in ( * R31 ) by L2552 , L2547 , XBOOLE_0:def 3;
thus L2554: thesis by L2553 , L2509 , MODELC_2:def 64;
end;
suppose L2555: R24 in D320;

L2556: (R24 in D318 or R24 in { D315 }) by L2555 , L2545 , XBOOLE_0:def 3;
L2557: (R24 in ( * R31 ) or R24 = D315) by L2556 , L1 , TARSKI:def 1;
thus L2558: thesis by L2557 , L2509 , L2541 , MODELC_2:def 64;
end;
suppose L2559: R24 in ( 'X' ( CastLTL D322 ) );

L2560: R24 in ( * R31 ) by L2559 , L2548 , L1;
thus L2561: thesis by L2560 , L2509 , MODELC_2:def 64;
end;
end;
thus L2563: thesis by L2551;
end;
L2564: D314 is_succ2_of R31 by L2511 , L2538 , L2541 , L94;
thus L2565: thesis by L2564 , L2549 , L96 , MODELC_2:def 64;
end;
suppose L2566: (not R37 |= ( * D317 ));

L2567:
now
per cases  by MODELC_2:2;
suppose L2568: (D313 is  atomic or D313 is  negative or D313 is  conjunctive or D313 is  next);

thus L2569: thesis by L2568 , L2509 , L2511 , L2566 , L149 , L173;
end;
suppose L2570: (D313 is  disjunctive or D313 is  Until or D313 is  Release);

L2571: D314 is_succ2_of R31 by L2570 , L2511 , L2538 , L94;
thus L2572: thesis by L2571 , L2509 , L2511 , L2538 , L2566 , L2570 , L96 , L282 , L381 , L499;
end;
end;
thus L2574: thesis by L2567;
end;
end;
thus L2576: thesis by L2540;
end;
thus L2577: thesis by L2539;
end;
end;
thus L2579: thesis by L2512;
end;
theorem
L2580: (for R30 being LTL-formula holds (for R31 being  strict LTLnode over R30 holds (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for R45 being (Choice_Function of ( BOOL ( Subformulae R30 ) )) holds (R31 is non  elementary implies ((( chosen_formula (R45 , R31) ) is  Until & R37 |= ( the_right_argument_of ( chosen_formula (R45 , R31) ) )) implies ((( the_right_argument_of ( chosen_formula (R45 , R31) ) ) in (the LTLnew of ( chosen_succ (R37 , R30 , R45 , R31) )) or ( the_right_argument_of ( chosen_formula (R45 , R31) ) ) in (the LTLold of R31)) & ( chosen_formula (R45 , R31) ) in (the LTLold of ( chosen_succ (R37 , R30 , R45 , R31) )))))))))
proof
let R30 being LTL-formula;
let R31 being  strict LTLnode over R30;
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
let R45 being (Choice_Function of ( BOOL ( Subformulae R30 ) ));
set D324 = ( chosen_succ (R37 , R30 , R45 , R31) );
set D325 = ( chosen_formula (R45 , R31) );
set D326 = ( the_right_argument_of D325 );
set D327 = (the LTLold of D324);
set D328 = (the LTLnew of D324);
set D329 = (the LTLold of R31);
set D330 = (the LTLnew of R31);
assume L2581: R31 is non  elementary;
L2582: D325 in (the LTLnew of R31) by L2581 , L2501;
L2583: ((D325 is  Until & R37 |= D326) implies ((D326 in D328 or D326 in D329) & D325 in D327))
proof
assume that
L2584: D325 is  Until
and
L2585: R37 |= D326;
L2586: D324 = ( SuccNode2 (D325 , R31) ) by L2584 , L2585 , L2506;
L2587: ( LTLNew2 D325 ) = { D326 } by L2584 , L70;
L2588: D328 = ( ( D330 \ { D325 } ) \/ ( { D326 } \ D329 ) ) by L2587 , L2582 , L2586 , L84;
L2589:
now
per cases ;
suppose L2590: D326 in D329;

thus L2591: (D326 in D328 or D326 in D329) by L2590;
end;
suppose L2592: (not D326 in D329);

L2593: D326 in { D326 } by TARSKI:def 1;
L2594: D326 in ( { D326 } \ D329 ) by L2593 , L2592 , XBOOLE_0:def 5;
thus L2595: (D326 in D328 or D326 in D329) by L2594 , L2588 , XBOOLE_0:def 3;
end;
end;
L2597: D325 in { D325 } by TARSKI:def 1;
L2598: D327 = ( D329 \/ { D325 } ) by L2582 , L2586 , L84;
thus L2599: thesis by L2598 , L2597 , L2589 , XBOOLE_0:def 3;
end;
thus L2600: thesis by L2583;
end;
theorem
L2601: (for R30 being LTL-formula holds (for R31 being  strict LTLnode over R30 holds (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for R45 being (Choice_Function of ( BOOL ( Subformulae R30 ) )) holds ((R37 |= ( * R31 ) & R31 is non  elementary) implies ((the LTLold of R31) c= (the LTLold of ( chosen_succ (R37 , R30 , R45 , R31) )) & (the LTLnext of R31) c= (the LTLnext of ( chosen_succ (R37 , R30 , R45 , R31) ))))))))
proof
let R30 being LTL-formula;
let R31 being  strict LTLnode over R30;
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
let R45 being (Choice_Function of ( BOOL ( Subformulae R30 ) ));
assume L2602: (R37 |= ( * R31 ) & R31 is non  elementary);
L2603: ( chosen_succ (R37 , R30 , R45 , R31) ) is_succ_of R31 by L2602 , L2508;
thus L2604: thesis by L2603 , L1270;
end;
definition
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
let R30 being LTL-formula;
let R45 being (Choice_Function of ( BOOL ( Subformulae R30 ) ));
func choice_succ_func (R37 , R30 , R45) -> (Function of ( LTLNodes R30 ) , ( LTLNodes R30 )) means 
:L2605: (for R11 being set holds (R11 in ( LTLNodes R30 ) implies ( it . R11 ) = ( chosen_succ (R37 , R30 , R45 , ( CastNode (R11 , R30) )) )));
existence
proof
deffunc H8(set) = ( chosen_succ (R37 , R30 , R45 , ( CastNode ($1 , R30) )) );
L2606: (for R11 being set holds (R11 in ( LTLNodes R30 ) implies H8(R11) in ( LTLNodes R30 ))) by L2017;
consider C62 being (Function of ( LTLNodes R30 ) , ( LTLNodes R30 )) such that L2607: (for R11 being set holds (R11 in ( LTLNodes R30 ) implies ( C62 . R11 ) = H8(R11))) from FUNCT_2:sch 2(L2606);
take C62;
thus L2608: thesis by L2607;
end;
uniqueness
proof
let C63 , C64 being (Function of ( LTLNodes R30 ) , ( LTLNodes R30 ));
assume that
L2609: (for R11 being set holds (R11 in ( LTLNodes R30 ) implies ( C63 . R11 ) = ( chosen_succ (R37 , R30 , R45 , ( CastNode (R11 , R30) )) )))
and
L2610: (for R11 being set holds (R11 in ( LTLNodes R30 ) implies ( C64 . R11 ) = ( chosen_succ (R37 , R30 , R45 , ( CastNode (R11 , R30) )) )));
L2611: (for R11 being set holds (R11 in ( LTLNodes R30 ) implies ( C63 . R11 ) = ( C64 . R11 )))
proof
let R11 being set;
assume L2612: R11 in ( LTLNodes R30 );
L2613: ( C63 . R11 ) = ( chosen_succ (R37 , R30 , R45 , ( CastNode (R11 , R30) )) ) by L2612 , L2609
.= ( C64 . R11 ) by L2610 , L2612;
thus L2614: thesis by L2613;
end;
thus L2615: thesis by L2611 , FUNCT_2:12;
end;
end;
theorem
L2617: (for R30 being LTL-formula holds (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for R45 being (Choice_Function of ( BOOL ( Subformulae R30 ) )) holds ( choice_succ_func (R37 , R30 , R45) ) is_succ_homomorphism R30 , R37)))
proof
let R30 being LTL-formula;
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
let R45 being (Choice_Function of ( BOOL ( Subformulae R30 ) ));
set D331 = ( choice_succ_func (R37 , R30 , R45) );
L2618: (for R11 being set holds ((R11 in ( LTLNodes R30 ) & ( CastNode (R11 , R30) ) is non  elementary & R37 |= ( * ( CastNode (R11 , R30) ) )) implies (( CastNode (( D331 . R11 ) , R30) ) is_succ_of ( CastNode (R11 , R30) ) & R37 |= ( * ( CastNode (( D331 . R11 ) , R30) ) ))))
proof
let R11 being set;
assume that
L2619: R11 in ( LTLNodes R30 )
and
L2620: (( CastNode (R11 , R30) ) is non  elementary & R37 |= ( * ( CastNode (R11 , R30) ) ));
set D332 = ( CastNode (R11 , R30) );
set D333 = ( chosen_succ (R37 , R30 , R45 , D332) );
L2621: ( CastNode (( D331 . R11 ) , R30) ) = ( CastNode (D333 , R30) ) by L2619 , L2605
.= D333 by L107;
thus L2622: thesis by L2621 , L2620 , L2508;
end;
thus L2623: thesis by L2618 , L2168;
end;
begin
definition
let R26 being LTL-formula;
attr R26 is  neg-inner-most
means
:L2624: (for B70 being LTL-formula holds (B70 is_subformula_of R26 implies (B70 is  negative implies ( the_argument_of B70 ) is  atomic)));
end;
registration
cluster  neg-inner-most for LTL-formula;
existence
proof
set D334 = ( atom. ( 0 ) );
take D334;
L2626: D334 is  atomic by MODELC_2:def 11;
L2627: (for B71 being LTL-formula holds (B71 is_subformula_of D334 implies (B71 is  negative implies ( the_argument_of B71 ) is  atomic)))
proof
let C65 being LTL-formula;
assume L2628: C65 is_subformula_of D334;
consider R2 being Nat, R19 being FinSequence such that L2629: 1 <= R2 and L2630: ( len R19 ) = R2 and L2631: ( R19 . 1 ) = C65 and L2632: ( R19 . R2 ) = D334 and L2633: (for R1 being Nat holds ((1 <= R1 & R1 < R2) implies (ex B72 , B73 being LTL-formula st (( R19 . R1 ) = B72 & ( R19 . ( R1 + 1 ) ) = B73 & B72 is_immediate_constituent_of B73)))) by L2628 , MODELC_2:def 22;
L2634: R2 = 1
proof
set D335 = ( R2 - 1 );
reconsider D336 = D335 as Nat by L2629 , NAT_1:21;
L2635:
now
assume L2636: (not R2 = 1);
L2637: 1 < ( 1 + D336 ) by L2636 , L2629 , XXREAL_0:1;
L2638: 1 <= D336 by L2637 , NAT_1:19;
L2639: D336 < ( D336 + 1 ) by XREAL_1:29;
L2640: (ex B74 , B75 being LTL-formula st (( R19 . D336 ) = B74 & ( R19 . ( D336 + 1 ) ) = B75 & B74 is_immediate_constituent_of B75)) by L2639 , L2633 , L2638;
thus L2641: contradiction by L2640 , L2626 , L2632 , MODELC_2:19;
end;
thus L2642: thesis by L2635;
end;
thus L2643: thesis by L2634 , L2626 , L2631 , L2632 , MODELC_2:78;
end;
thus L2644: thesis by L2627 , L2624;
end;
end;
definition
let R26 being LTL-formula;
attr R26 is  Sub_atomic
means
:L2646: (R26 is  atomic or (ex B76 being LTL-formula st (B76 is  atomic & R26 = ( 'not' B76 ))));
end;
theorem
L2648: (for R22 being LTL-formula holds (for R26 being LTL-formula holds ((R26 is  neg-inner-most & R22 is_subformula_of R26) implies R22 is  neg-inner-most)))
proof
let R22 being LTL-formula;
let R26 being LTL-formula;
assume that
L2649: R26 is  neg-inner-most
and
L2650: R22 is_subformula_of R26;
L2651: (for B77 being LTL-formula holds (B77 is_subformula_of R22 implies (B77 is  negative implies ( the_argument_of B77 ) is  atomic)))
proof
let C66 being LTL-formula;
assume L2652: C66 is_subformula_of R22;
L2653: C66 is_subformula_of R26 by L2652 , L2650 , MODELC_2:35;
thus L2654: thesis by L2653 , L2649 , L2624;
end;
thus L2655: thesis by L2651 , L2624;
end;
theorem
L2656: (for R26 being LTL-formula holds (R26 is  Sub_atomic iff (R26 is  atomic or (R26 is  negative & ( the_argument_of R26 ) is  atomic))))
proof
let R26 being LTL-formula;
thus L2657: (R26 is  Sub_atomic implies (R26 is  atomic or (R26 is  negative & ( the_argument_of R26 ) is  atomic)))
proof
assume L2658: R26 is  Sub_atomic;
per cases  by L2658 , L2646;
suppose L2659: R26 is  atomic;

thus L2660: thesis by L2659;
end;
suppose L2661: (ex B78 being LTL-formula st (B78 is  atomic & R26 = ( 'not' B78 )));

L2662: R26 is  negative by L2661 , MODELC_2:def 12;
thus L2663: thesis by L2662 , L2661 , MODELC_2:def 18;
end;
end;

thus L2665: ((R26 is  atomic or (R26 is  negative & ( the_argument_of R26 ) is  atomic)) implies R26 is  Sub_atomic)
proof
assume L2666: (R26 is  atomic or (R26 is  negative & ( the_argument_of R26 ) is  atomic));
per cases  by L2666;
suppose L2667: R26 is  atomic;

thus L2668: thesis by L2667 , L2646;
end;
suppose L2669: (R26 is  negative & ( the_argument_of R26 ) is  atomic);

L2670: R26 = ( 'not' ( the_argument_of R26 ) ) by L2669 , MODELC_2:def 18;
thus L2671: thesis by L2670 , L2669 , L2646;
end;
end;

end;
theorem
L2666: (for R26 being LTL-formula holds (R26 is  neg-inner-most implies (R26 is  Sub_atomic or R26 is  conjunctive or R26 is  disjunctive or R26 is  next or R26 is  Until or R26 is  Release)))
proof
let R26 being LTL-formula;
assume L2667: R26 is  neg-inner-most;
per cases  by MODELC_2:2;
suppose L2668: R26 is  atomic;

thus L2669: thesis by L2668 , L2646;
end;
suppose L2670: R26 is  negative;

set D337 = ( the_argument_of R26 );
L2671: D337 is  atomic by L2667 , L2670 , L2624;
L2672: R26 = ( 'not' D337 ) by L2670 , MODELC_2:def 18;
thus L2673: thesis by L2672 , L2671 , L2646;
end;
suppose L2674: (R26 is  conjunctive or R26 is  disjunctive or R26 is  next or R26 is  Until or R26 is  Release);

thus L2675: thesis by L2674;
end;
end;
theorem
L2677: (for R26 being LTL-formula holds ((R26 is  next & R26 is  neg-inner-most) implies ( the_argument_of R26 ) is  neg-inner-most))
proof
let R26 being LTL-formula;
assume that
L2678: R26 is  next
and
L2679: R26 is  neg-inner-most;
set D338 = ( the_argument_of R26 );
L2680: D338 is_subformula_of R26 by L2678 , MODELC_2:30;
L2681: (for B79 being LTL-formula holds (B79 is_subformula_of D338 implies (B79 is  negative implies ( the_argument_of B79 ) is  atomic)))
proof
let C67 being LTL-formula;
assume L2682: C67 is_subformula_of D338;
L2683: C67 is_subformula_of R26 by L2682 , L2680 , MODELC_2:35;
thus L2684: thesis by L2683 , L2679 , L2624;
end;
thus L2685: thesis by L2681 , L2624;
end;
theorem
L2686: (for R26 being LTL-formula holds (((R26 is  conjunctive or R26 is  disjunctive or R26 is  Until or R26 is  Release) & R26 is  neg-inner-most) implies (( the_left_argument_of R26 ) is  neg-inner-most & ( the_right_argument_of R26 ) is  neg-inner-most)))
proof
let R26 being LTL-formula;
assume that
L2687: (R26 is  conjunctive or R26 is  disjunctive or R26 is  Until or R26 is  Release)
and
L2688: R26 is  neg-inner-most;
set D339 = ( the_right_argument_of R26 );
L2689: D339 is_subformula_of R26 by L2687 , MODELC_2:31;
L2690: (for B80 being LTL-formula holds (B80 is_subformula_of D339 implies (B80 is  negative implies ( the_argument_of B80 ) is  atomic)))
proof
let C68 being LTL-formula;
assume L2691: C68 is_subformula_of D339;
L2692: C68 is_subformula_of R26 by L2691 , L2689 , MODELC_2:35;
thus L2693: thesis by L2692 , L2688 , L2624;
end;
set D340 = ( the_left_argument_of R26 );
L2694: D340 is_subformula_of R26 by L2687 , MODELC_2:31;
L2695: (for B81 being LTL-formula holds (B81 is_subformula_of D340 implies (B81 is  negative implies ( the_argument_of B81 ) is  atomic)))
proof
let C69 being LTL-formula;
assume L2696: C69 is_subformula_of D340;
L2697: C69 is_subformula_of R26 by L2696 , L2694 , MODELC_2:35;
thus L2698: thesis by L2697 , L2688 , L2624;
end;
thus L2699: thesis by L2695 , L2690 , L2624;
end;
begin
definition
let C70 being non  empty set;
struct (1-sorted) BuchiAutomaton over C70(# carrier -> set , Tran -> (Relation of [: the carrier , C70 :] , the carrier) , InitS -> (Element of ( bool the carrier )) , FinalS -> (Subset of ( bool the carrier )) #);
end;
definition
let C71 being non  empty set;
let C72 being BuchiAutomaton over C71;
let C73 being (Element of ( Inf_seq C71 ));
pred C73 is-accepted-by C72
means
:L2701: (ex B82 being (sequence of (the carrier of C72)) st (( B82 . ( 0 ) ) in (the InitS of C72) & (for B83 being Nat holds ([ [ ( B82 . B83 ) , ( ( CastSeq (C73 , C71) ) . B83 ) ] , ( B82 . ( B83 + 1 ) ) ] in (the Tran of C72) & (for B84 being set holds (B84 in (the FinalS of C72) implies { B85 where B85 is (Element of ( NAT )) : ( B82 . B85 ) in B84 } is  infinite  infinite  infinite  infinite set))))))
;end;
definition
let R46 being  neg-inner-most LTL-formula;
let R48 being  strict LTLnode over R46;
func atomic_LTL R48 -> (Subset of ( LTL_WFF )) equals 
{ B86 where B86 is LTL-formula : (B86 is  atomic & B86 in (the LTLold of R48)) };
correctness
proof
set D341 = { B87 where B87 is LTL-formula : (B87 is  atomic & B87 in (the LTLold of R48)) };
L2703: D341 c= ( LTL_WFF )
proof
let R12 being set;
assume L2704: R12 in D341;
L2705: (ex B88 being LTL-formula st (R12 = B88 & B88 is  atomic & B88 in (the LTLold of R48))) by L2704;
thus L2706: thesis by L2705 , MODELC_2:1;
end;
thus L2707: thesis by L2703;
end;
func Neg_atomic_LTL R48 -> (Subset of ( LTL_WFF )) equals 
{ B89 where B89 is LTL-formula : (B89 is  atomic & ( 'not' B89 ) in (the LTLold of R48)) };
correctness
proof
set D342 = { B90 where B90 is LTL-formula : (B90 is  atomic & ( 'not' B90 ) in (the LTLold of R48)) };
L2708: D342 c= ( LTL_WFF )
proof
let R12 being set;
assume L2709: R12 in D342;
L2710: (ex B91 being LTL-formula st (R12 = B91 & B91 is  atomic & ( 'not' B91 ) in (the LTLold of R48))) by L2709;
thus L2711: thesis by L2710 , MODELC_2:1;
end;
thus L2712: thesis by L2708;
end;
end;
definition
let R46 being  neg-inner-most LTL-formula;
let R48 being  strict LTLnode over R46;
func Label_ R48 -> set equals 
{ B92 where B92 is (Subset of ( atomic_LTL )) : (( atomic_LTL R48 ) c= B92 & ( Neg_atomic_LTL R48 ) misses B92) };
correctness;
end;
definition
let R46 being  neg-inner-most LTL-formula;
func Tran_LTL R46 -> (Relation of [: ( LTLStates R46 ) , ( AtomicFamily ) :] , ( LTLStates R46 )) equals 
{ B93 where B93 is (Element of [: ( LTLStates R46 ) , ( AtomicFamily ) , ( LTLStates R46 ) :]) : (ex R52 being  elementary  strict LTLnode over R46 st (ex R53 being  elementary  strict LTLnode over R46 st (ex R11 being set st (B93 = [ [ R52 , R11 ] , R53 ] & R53 is_next_of R52 & R11 in ( Label_ R53 ))))) };
correctness
proof
set D343 = { B94 where B94 is (Element of [: ( LTLStates R46 ) , ( AtomicFamily ) , ( LTLStates R46 ) :]) : (ex R52 being  elementary  strict LTLnode over R46 st (ex R53 being  elementary  strict LTLnode over R46 st (ex R11 being set st (B94 = [ [ R52 , R11 ] , R53 ] & R53 is_next_of R52 & R11 in ( Label_ R53 ))))) };
L2715: D343 c= [: ( LTLStates R46 ) , ( AtomicFamily ) , ( LTLStates R46 ) :]
proof
let R10 being set;
assume L2716: R10 in D343;
L2717: (ex B95 being (Element of [: ( LTLStates R46 ) , ( AtomicFamily ) , ( LTLStates R46 ) :]) st (R10 = B95 & (ex R52 being  elementary  strict LTLnode over R46 st (ex R53 being  elementary  strict LTLnode over R46 st (ex R11 being set st (B95 = [ [ R52 , R11 ] , R53 ] & R53 is_next_of R52 & R11 in ( Label_ R53 ))))))) by L2716;
thus L2718: thesis by L2717;
end;
reconsider D344 = D343 as (Relation of [: ( LTLStates R46 ) , ( AtomicFamily ) :] , ( LTLStates R46 )) by L2715 , ZFMISC_1:def 3;
L2719: D344 is (Relation of [: ( LTLStates R46 ) , ( AtomicFamily ) :] , ( LTLStates R46 ));
thus L2720: thesis by L2719;
end;
func InitS_LTL R46 -> (Element of ( bool ( LTLStates R46 ) )) equals 
{ ( init R46 ) };
correctness
proof
set D345 = ( init R46 );
reconsider D346 = D345 as  elementary  strict LTLnode over R46;
L2721: D346 is (Element of ( LTLNodes R46 )) by L2017;
L2722: { D346 } c= ( LTLStates R46 )
proof
let R11 being set;
assume L2723: R11 in { D346 };
L2724: R11 = D346 by L2723 , TARSKI:def 1;
thus L2725: thesis by L2724 , L2721;
end;
thus L2726: thesis by L2722;
end;
end;
definition
let R46 being  neg-inner-most LTL-formula;
let R22 being LTL-formula;
func FinalS_LTL (R22 , R46) -> (Element of ( bool ( LTLStates R46 ) )) equals 
{ B96 where B96 is (Element of ( LTLStates R46 )) : ((not R22 in (the LTLold of ( CastNode (B96 , R46) ))) or ( the_right_argument_of R22 ) in (the LTLold of ( CastNode (B96 , R46) ))) };
correctness
proof
set D347 = { B97 where B97 is (Element of ( LTLStates R46 )) : ((not R22 in (the LTLold of ( CastNode (B97 , R46) ))) or ( the_right_argument_of R22 ) in (the LTLold of ( CastNode (B97 , R46) ))) };
L2728: D347 c= ( LTLStates R46 )
proof
let C74 being set;
assume L2729: C74 in D347;
L2730: (ex B98 being (Element of ( LTLStates R46 )) st (C74 = B98 & ((not R22 in (the LTLold of ( CastNode (B98 , R46) ))) or ( the_right_argument_of R22 ) in (the LTLold of ( CastNode (B98 , R46) ))))) by L2729;
thus L2731: thesis by L2730;
end;
thus L2732: thesis by L2728;
end;
end;
definition
let R46 being  neg-inner-most LTL-formula;
func FinalS_LTL R46 -> (Subset of ( bool ( LTLStates R46 ) )) equals 
{ B99 where B99 is (Element of ( bool ( LTLStates R46 ) )) : (ex R22 being LTL-formula st (R22 is_subformula_of R46 & R22 is  Until & B99 = ( FinalS_LTL (R22 , R46) ))) };
correctness
proof
set D348 = { B100 where B100 is (Element of ( bool ( LTLStates R46 ) )) : (ex R22 being LTL-formula st (R22 is_subformula_of R46 & R22 is  Until & B100 = ( FinalS_LTL (R22 , R46) ))) };
L2734: D348 c= ( bool ( LTLStates R46 ) )
proof
let R12 being set;
assume L2735: R12 in D348;
L2736: (ex B101 being (Element of ( bool ( LTLStates R46 ) )) st (R12 = B101 & (ex R22 being LTL-formula st (R22 is_subformula_of R46 & R22 is  Until & B101 = ( FinalS_LTL (R22 , R46) ))))) by L2735;
thus L2737: thesis by L2736;
end;
thus L2738: thesis by L2734;
end;
end;
definition
let R46 being  neg-inner-most LTL-formula;
func BAutomaton R46 -> BuchiAutomaton over ( AtomicFamily ) equals 
BuchiAutomaton (# ( LTLStates R46 ) , ( Tran_LTL R46 ) , ( InitS_LTL R46 ) , ( FinalS_LTL R46 ) #);
correctness;
end;
theorem
L2741: (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for R46 being  neg-inner-most LTL-formula holds (R37 is-accepted-by ( BAutomaton R46 ) implies R37 |= R46)))
proof
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
let R46 being  neg-inner-most LTL-formula;
deffunc H9(Nat) = ( ( CastSeq (R37 , ( AtomicFamily )) ) . $1 );
assume L2742: R37 is-accepted-by ( BAutomaton R46 );
consider C75 being (sequence of ( LTLStates R46 )) such that L2743: ( C75 . ( 0 ) ) in ( InitS_LTL R46 ) and L2744: (for R8 being Nat holds [ [ ( C75 . R8 ) , H9(R8) ] , ( C75 . ( R8 + 1 ) ) ] in ( Tran_LTL R46 )) and L2745: (for B102 being set holds (B102 in ( FinalS_LTL R46 ) implies { B103 where B103 is (Element of ( NAT )) : ( C75 . B103 ) in B102 } is  infinite  infinite  infinite  infinite set)) by L2742 , L2701;
deffunc H10(Nat) = ( CastNode (( C75 . $1 ) , R46) );
set D349 = H10(( ( 0 ) + 1 ));
set D350 = H10(( 0 ));
L2746: (for R8 being Nat holds (H10(( R8 + 1 )) is_next_of H10(R8) & H9(R8) in ( Label_ H10(( R8 + 1 )) )))
proof
let R8 being Nat;
set D351 = [ [ ( C75 . R8 ) , H9(R8) ] , ( C75 . ( R8 + 1 ) ) ];
L2747: D351 in ( Tran_LTL R46 ) by L2744;
consider C76 being (Element of [: ( LTLStates R46 ) , ( AtomicFamily ) , ( LTLStates R46 ) :]) such that L2748: D351 = C76 and L2749: (ex R52 being  elementary  strict LTLnode over R46 st (ex R53 being  elementary  strict LTLnode over R46 st (ex R11 being set st (C76 = [ [ R52 , R11 ] , R53 ] & R53 is_next_of R52 & R11 in ( Label_ R53 ))))) by L2747;
consider R52 being  elementary  strict LTLnode over R46, R53 being  elementary  strict LTLnode over R46, R11 being set such that L2750: C76 = [ [ R52 , R11 ] , R53 ] and L2751: (R53 is_next_of R52 & R11 in ( Label_ R53 )) by L2749;
L2752: H10(( R8 + 1 )) = ( CastNode (R53 , R46) ) by L2748 , L2750 , XTUPLE_0:1
.= R53 by L107;
L2753: [ R52 , R11 ] = [ ( C75 . R8 ) , H9(R8) ] by L2748 , L2750 , XTUPLE_0:1;
L2754: H10(R8) = ( CastNode (R52 , R46) ) by L2753 , XTUPLE_0:1
.= R52 by L107;
thus L2755: thesis by L2754 , L2751 , L2753 , L2752 , XTUPLE_0:1;
end;
L2756: D349 is_next_of D350 by L2746;
defpred S17[ Nat ] means (for R8 being Nat holds (for R22 being LTL-formula holds ((R22 is_subformula_of R46 & ( len R22 ) <= $1 & R22 in (the LTLold of H10(( R8 + 1 )))) implies ( Shift (R37 , R8) ) |= R22)));
L2757: (for R8 being Nat holds H10(R8) = ( C75 . R8 ))
proof
let R8 being Nat;
reconsider D352 = R8 as (Element of ( NAT )) by ORDINAL1:def 12;
L2758: ( C75 . D352 ) in ( LTLStates R46 );
L2759: (ex B104 being (Element of ( LTLNodes R46 )) st (( C75 . D352 ) = B104 & B104 is  elementary  strict  elementary  strict  elementary  strict  elementary  strict LTLnode over R46)) by L2758;
thus L2760: thesis by L2759 , L107;
end;
L2761: (for B105 being set holds (B105 in ( FinalS_LTL R46 ) implies { B106 where B106 is (Element of ( NAT )) : H10(B106) in B105 } is  infinite))
proof
let C77 being set;
set D353 = { B107 where B107 is (Element of ( NAT )) : ( C75 . B107 ) in C77 };
set D354 = { B108 where B108 is (Element of ( NAT )) : H10(B108) in C77 };
L2762: D353 c= D354
proof
let R11 being set;
assume L2763: R11 in D353;
consider C78 being (Element of ( NAT )) such that L2764: R11 = C78 and L2765: ( C75 . C78 ) in C77 by L2763;
L2766: H10(C78) in C77 by L2757 , L2765;
thus L2767: thesis by L2766 , L2764;
end;
assume L2768: C77 in ( FinalS_LTL R46 );
thus L2769: thesis by L2768 , L2745 , L2762;
end;
L2770: (for R2 being Nat holds (S17[ R2 ] implies S17[ ( R2 + 1 ) ]))
proof
let R2 being Nat;
assume L2771: S17[ R2 ];
L2772: (for R8 being Nat holds (for R22 being LTL-formula holds ((R22 is_subformula_of R46 & ( len R22 ) = ( R2 + 1 ) & R22 in (the LTLold of H10(( R8 + 1 )))) implies ( Shift (R37 , R8) ) |= R22)))
proof
let R8 being Nat;
let R22 being LTL-formula;
assume that
L2773: R22 is_subformula_of R46
and
L2774: ( len R22 ) = ( R2 + 1 )
and
L2775: R22 in (the LTLold of H10(( R8 + 1 )));
set D355 = ( Shift (R37 , R8) );
L2776:
now
per cases  by L2773 , L2648 , L2666;
suppose L2777: R22 is  Sub_atomic;

set D356 = ( ( CastSeq (R37 , ( AtomicFamily )) ) ^\ R8 );
set D357 = H9(R8);
L2778: ( CastSeq (D355 , ( AtomicFamily )) ) = D356 by MODELC_2:81;
L2779: ( ( CastSeq (D355 , ( AtomicFamily )) ) . ( 0 ) ) = ( ( CastSeq (R37 , ( AtomicFamily )) ) . ( ( 0 ) + R8 ) ) by L2778 , NAT_1:def 3
.= D357;
L2780: D357 in ( Label_ H10(( R8 + 1 )) ) by L2746;
consider C79 being (Subset of ( atomic_LTL )) such that L2781: D357 = C79 and L2782: ( atomic_LTL H10(( R8 + 1 )) ) c= C79 and L2783: ( Neg_atomic_LTL H10(( R8 + 1 )) ) misses C79 by L2780;
L2784: ( ( Neg_atomic_LTL H10(( R8 + 1 )) ) /\ C79 ) = ( {} ) by L2783 , XBOOLE_0:def 7;
L2785:
now
per cases  by L2777 , L2656;
suppose L2786: R22 is  atomic;

L2787: R22 in ( atomic_LTL H10(( R8 + 1 )) ) by L2786 , L2775;
thus L2788: thesis by L2787 , L2781 , L2782 , L2779 , L2786 , MODELC_2:63;
end;
suppose L2789: (R22 is  negative & ( the_argument_of R22 ) is  atomic);

set D358 = ( the_argument_of R22 );
L2790: R22 = ( 'not' D358 ) by L2789 , MODELC_2:4;
L2791: (D355 |= R22 iff D355 |/= D358) by L2790 , MODELC_2:64;
L2792: (D355 |= R22 iff (not D358 in D357)) by L2791 , L2779 , L2789 , MODELC_2:63;
L2793: D358 in ( Neg_atomic_LTL H10(( R8 + 1 )) ) by L2775 , L2789 , L2790;
thus L2794: thesis by L2793 , L2781 , L2784 , L2792 , XBOOLE_0:def 4;
end;
end;
thus L2796: thesis by L2785;
end;
suppose L2797: (R22 is  conjunctive or R22 is  disjunctive);

set D359 = ( the_left_argument_of R22 );
L2798: ( len D359 ) < ( R2 + 1 ) by L2774 , L2797 , MODELC_2:11;
L2799: ( len D359 ) <= R2 by L2798 , NAT_1:13;
set D360 = H10(( R8 + 1 ));
set D361 = H10(R8);
L2800: D360 is_next_of D361 by L2746;
set D362 = ( the_right_argument_of R22 );
L2801: ( len D362 ) < ( R2 + 1 ) by L2774 , L2797 , MODELC_2:11;
L2802: ( len D362 ) <= R2 by L2801 , NAT_1:13;
reconsider D363 = D360 as  elementary  strict LTLnode over R46 by L2800 , L142;
reconsider D364 = D361 as  elementary  strict LTLnode over R46 by L2800 , L142;
L2803: ((D363 is_next_of D364 & R22 in (the LTLold of D363)) implies ((R22 is  conjunctive implies (D359 in (the LTLold of D363) & D362 in (the LTLold of D363))) & (R22 is  disjunctive implies (D359 in (the LTLold of D363) or D362 in (the LTLold of D363))))) by L1794;
L2804: (D359 is_subformula_of R22 & D362 is_subformula_of R22) by L2797 , MODELC_2:31;
L2805: D355 |= R22
proof
L2806:
now
per cases  by L2797;
suppose L2807: R22 is  conjunctive;

L2808: (D355 |= D359 & D355 |= D362) by L2807 , L2746 , L2771 , L2773 , L2775 , L2804 , L2799 , L2802 , L2803 , MODELC_2:35;
L2809: D355 |= ( D359 '&' D362 ) by L2808 , MODELC_2:65;
thus L2810: thesis by L2809 , L2807 , MODELC_2:6;
end;
suppose L2811: R22 is  disjunctive;

L2812: (D355 |= D359 or D355 |= D362) by L2811 , L2746 , L2771 , L2773 , L2775 , L2804 , L2799 , L2802 , L2803 , MODELC_2:35;
L2813: D355 |= ( D359 'or' D362 ) by L2812 , MODELC_2:66;
thus L2814: thesis by L2813 , L2811 , MODELC_2:7;
end;
end;
thus L2816: thesis by L2806;
end;
thus L2817: thesis by L2805;
end;
suppose L2818: R22 is  next;

set D365 = ( R8 + 1 );
set D366 = H10(D365);
set D367 = H10(( D365 + 1 ));
L2819: D367 is_next_of D366 by L2746;
reconsider D368 = D367 as  elementary  strict LTLnode over R46 by L2819 , L142;
set D369 = H10(R8);
L2820: D366 is_next_of D369 by L2746;
set D370 = ( the_argument_of R22 );
L2821: D370 is_subformula_of R22 by L2818 , MODELC_2:30;
L2822: ( len D370 ) < ( R2 + 1 ) by L2774 , L2818 , MODELC_2:10;
L2823: ( len D370 ) <= R2 by L2822 , NAT_1:13;
reconsider D371 = D366 as  elementary  strict LTLnode over R46 by L2820 , L142;
reconsider D372 = D369 as  elementary  strict LTLnode over R46 by L2820 , L142;
L2824: ((D371 is_next_of D372 & R22 in (the LTLold of D371)) implies (R22 is  next implies D370 in (the LTLnext of D371))) by L1794;
L2825: (the LTLnext of D371) c= (the LTLold of D368) by L2746 , L1665;
L2826: ( Shift (R37 , D365) ) |= D370 by L2825 , L2746 , L2771 , L2773 , L2775 , L2818 , L2821 , L2823 , L2824 , MODELC_2:35;
L2827: ( Shift (D355 , 1) ) |= D370 by L2826 , MODELC_2:80;
L2828: D355 |= ( 'X' D370 ) by L2827 , MODELC_2:67;
thus L2829: thesis by L2828 , L2818 , MODELC_2:5;
end;
suppose L2830: R22 is  Until;

set D373 = ( FinalS_LTL (R22 , R46) );
deffunc H11(set) = ( C75 . ( ( CastNat $1 ) + R8 ) );
set D374 = { B109 where B109 is (Element of ( NAT )) : H10(B109) in D373 };
L2831: (for R11 being set holds (R11 in ( NAT ) implies H11(R11) in ( LTLStates R46 )))
proof
let R11 being set;
assume L2832: R11 in ( NAT );
set D375 = ( ( CastNat R11 ) + R8 );
reconsider D376 = D375 as (Element of ( NAT )) by ORDINAL1:def 12;
L2833: H11(R11) = ( C75 . D376 );
thus L2834: thesis by L2833;
end;
consider C80 being (Function of ( NAT ) , ( LTLStates R46 )) such that L2835: (for R11 being set holds (R11 in ( NAT ) implies ( C80 . R11 ) = H11(R11))) from FUNCT_2:sch 2(L2831);
reconsider D377 = C80 as (sequence of ( LTLStates R46 ));
deffunc H12(Nat) = ( CastNode (( D377 . $1 ) , R46) );
L2836: (for R4 being Nat holds H12(R4) = H10(( R4 + R8 )))
proof
let R4 being Nat;
reconsider D378 = R4 as (Element of ( NAT )) by ORDINAL1:def 12;
L2837: H12(D378) = ( CastNode (H11(D378) , R46) ) by L2835
.= H10(( D378 + R8 )) by MODELC_2:def 1;
thus L2838: thesis by L2837;
end;
L2839: (for R4 being Nat holds H12(( R4 + 1 )) is_next_of H12(R4))
proof
let R4 being Nat;
set D379 = ( R4 + R8 );
L2840: H12(( R4 + 1 )) = H10(( ( R4 + 1 ) + R8 )) by L2836
.= H10(( D379 + 1 ));
L2841: H12(R4) = H10(D379) by L2836;
thus L2842: thesis by L2841 , L2746 , L2840;
end;
set D380 = { B110 where B110 is (Element of ( NAT )) : H12(B110) in D373 };
L2843: D373 in ( FinalS_LTL R46 ) by L2773 , L2830;
L2844: D380 is  infinite
proof
set D381 = { B111 where B111 is (Element of ( NAT )) : (R8 < B111 & B111 in D374) };
set D382 = { B112 where B112 is (Element of ( NAT )) : (B112 <= R8 & B112 in D374) };
L2845: D382 c= ( ( Seg R8 ) \/ { ( 0 ) } )
proof
let R11 being set;
assume L2846: R11 in D382;
consider C81 being (Element of ( NAT )) such that L2847: R11 = C81 and L2848: C81 <= R8 and L2849: C81 in D374 by L2846;
L2850:
now
per cases ;
suppose L2851: C81 = ( 0 );

L2852: C81 in { ( 0 ) } by L2851 , TARSKI:def 1;
thus L2853: thesis by L2852 , L2847 , XBOOLE_0:def 3;
end;
suppose L2854: C81 <> ( 0 );

L2855: ( 0 ) < ( ( 0 ) + C81 ) by L2854;
L2856: 1 <= C81 by L2855 , NAT_1:19;
L2857: C81 in ( Seg R8 ) by L2856 , L2848 , FINSEQ_1:1;
thus L2858: thesis by L2857 , L2847 , XBOOLE_0:def 3;
end;
end;
thus L2860: thesis by L2850;
end;
L2861: (D380 is  finite implies D381 is  finite)
proof
deffunc H13(set) = ( ( CastNat $1 ) + R8 );
consider C82 being Function such that L2862: (( dom C82 ) = D380 & (for R11 being set holds (R11 in D380 implies ( C82 . R11 ) = H13(R11)))) from FUNCT_1:sch 3;
L2863: (for R11 being set holds (R11 in D381 implies ( ( CastNat R11 ) - R8 ) in D380))
proof
let R11 being set;
assume L2864: R11 in D381;
consider C83 being (Element of ( NAT )) such that L2865: R11 = C83 and L2866: R8 < C83 and L2867: C83 in D374 by L2864;
set D383 = ( C83 - R8 );
reconsider D384 = D383 as (Element of ( NAT )) by L2866 , NAT_1:21;
L2868: H12(D384) = H10(( D384 + R8 )) by L2836
.= H10(C83);
L2869: ((ex B113 being (Element of ( NAT )) st (C83 = B113 & H10(B113) in D373)) & ( ( CastNat R11 ) - R8 ) = D384) by L2865 , L2867 , MODELC_2:def 1;
thus L2870: thesis by L2869 , L2868;
end;
L2871: (for R12 being set holds (R12 in D381 implies (ex R11 being set st (R11 in ( dom C82 ) & R12 = ( C82 . R11 )))))
proof
let R12 being set;
assume that
L2872: R12 in D381;
consider C84 being (Element of ( NAT )) such that L2873: R12 = C84 and L2874: R8 < C84 and L2875: C84 in D374 by L2872;
set D385 = ( ( CastNat R12 ) - R8 );
L2876: D385 in ( dom C82 ) by L2863 , L2862 , L2872;
set D386 = ( C84 - R8 );
reconsider D387 = D386 as Nat by L2874 , NAT_1:21;
L2877: D385 = D387 by L2873 , MODELC_2:def 1;
L2878: ( C82 . D385 ) = H13(D385) by L2863 , L2862 , L2872
.= ( D387 + R8 ) by L2877 , MODELC_2:def 1
.= R12 by L2873;
thus L2879: thesis by L2878 , L2876;
end;
assume L2880: D380 is  finite;
L2881: ( rng C82 ) is  finite by L2880 , L2862 , FINSET_1:8;
thus L2882: thesis by L2881 , L2871 , FINSET_1:1 , FUNCT_1:9;
end;
L2883: D374 c= ( D382 \/ D381 )
proof
let R11 being set;
assume L2884: R11 in D374;
L2885: (ex B114 being (Element of ( NAT )) st (R11 = B114 & H10(B114) in D373)) by L2884;
reconsider D388 = R11 as (Element of ( NAT )) by L2885;
L2886:
now
per cases ;
suppose L2887: D388 <= R8;

L2888: D388 in D382 by L2887 , L2884;
thus L2889: D388 in ( D382 \/ D381 ) by L2888 , XBOOLE_0:def 3;
end;
suppose L2890: R8 < D388;

L2891: D388 in D381 by L2890 , L2884;
thus L2892: D388 in ( D382 \/ D381 ) by L2891 , XBOOLE_0:def 3;
end;
end;
thus L2894: thesis by L2886;
end;
thus L2895: thesis by L2883 , L2761 , L2843 , L2861 , L2845;
end;
set D389 = ( the_right_argument_of R22 );
set D390 = ( the_left_argument_of R22 );
L2896: ( len D390 ) < ( R2 + 1 ) by L2774 , L2830 , MODELC_2:11;
L2897: ( len D390 ) <= R2 by L2896 , NAT_1:13;
L2898: ((for R4 being Nat holds (R4 >= 1 implies (R22 in (the LTLold of H12(R4)) & D390 in (the LTLold of H12(R4)) & (not D389 in (the LTLold of H12(R4)))))) implies D380 is  finite)
proof
assume L2899: (for R4 being Nat holds (R4 >= 1 implies (R22 in (the LTLold of H12(R4)) & D390 in (the LTLold of H12(R4)) & (not D389 in (the LTLold of H12(R4))))));
L2900:
now
assume L2901: (not D380 c= { ( 0 ) });
consider R11 being set such that L2902: R11 in D380 and L2903: (not R11 in { ( 0 ) }) by L2901 , TARSKI:def 3;
consider C85 being (Element of ( NAT )) such that L2904: R11 = C85 and L2905: H12(C85) in D373 by L2902;
L2906: C85 <> ( 0 ) by L2903 , L2904 , TARSKI:def 1;
L2907: ( 0 ) < ( ( 0 ) + C85 ) by L2906;
L2908: 1 <= C85 by L2907 , NAT_1:19;
set D391 = H12(C85);
consider C86 being (Element of ( LTLStates R46 )) such that L2909: D391 = C86 and L2910: ((not R22 in (the LTLold of ( CastNode (C86 , R46) ))) or D389 in (the LTLold of ( CastNode (C86 , R46) ))) by L2905;
reconsider D392 = C86 as  strict LTLnode over R46 by L2909;
L2911: ( CastNode (D392 , R46) ) = H12(C85) by L2909 , L107;
thus L2912: contradiction by L2911 , L2899 , L2908 , L2910;
end;
thus L2913: thesis by L2900;
end;
L2914: R22 in (the LTLold of H12(1)) by L2775 , L2836;
consider R9 being Nat such that L2915: R9 >= 1 and L2916: D389 in (the LTLold of H12(R9)) and L2917: (for R4 being Nat holds ((1 <= R4 & R4 < R9) implies (R22 in (the LTLold of H12(R4)) & D390 in (the LTLold of H12(R4))))) by L2914 , L2830 , L2839 , L2844 , L2898 , L2461;
set D393 = ( R9 - 1 );
reconsider D394 = D393 as Nat by L2915 , NAT_1:21;
set D395 = ( D394 + R8 );
L2918: ( D395 + 1 ) = ( R9 + R8 );
L2919: D389 in (the LTLold of H10(( D395 + 1 ))) by L2918 , L2836 , L2916;
L2920: D390 is_subformula_of R22 by L2830 , MODELC_2:31;
L2921: (for R1 being Nat holds (R1 < D394 implies ( Shift (D355 , R1) ) |= D390))
proof
let R1 being Nat;
assume that
L2922: R1 < D394;
set D396 = ( R1 + 1 );
set D397 = ( R1 + R8 );
L2923: (1 <= D396 & ( R1 + 1 ) < ( D394 + 1 )) by L2922 , NAT_1:11 , XREAL_1:8;
L2924: D390 in (the LTLold of H12(D396)) by L2923 , L2917;
L2925: D390 in (the LTLold of H10(( D396 + R8 ))) by L2924 , L2836;
L2926: D390 in (the LTLold of H10(( D397 + 1 ))) by L2925;
L2927: ( Shift (R37 , D397) ) |= D390 by L2926 , L2771 , L2773 , L2920 , L2897 , MODELC_2:35;
thus L2928: thesis by L2927 , MODELC_2:80;
end;
L2929: ( len D389 ) < ( R2 + 1 ) by L2774 , L2830 , MODELC_2:11;
L2930: ( len D389 ) <= R2 by L2929 , NAT_1:13;
L2931: D389 is_subformula_of R22 by L2830 , MODELC_2:31;
L2932: ( Shift (R37 , D395) ) |= D389 by L2931 , L2771 , L2773 , L2930 , L2919 , MODELC_2:35;
L2933: ( Shift (D355 , D394) ) |= D389 by L2932 , MODELC_2:80;
L2934: R22 = ( D390 'U' D389 ) by L2830 , MODELC_2:8;
thus L2935: thesis by L2934 , L2933 , L2921 , MODELC_2:68;
end;
suppose L2936: R22 is  Release;

set D398 = ( the_right_argument_of R22 );
L2937: D398 is_subformula_of R22 by L2936 , MODELC_2:31;
set D399 = ( the_left_argument_of R22 );
defpred S18[ Nat ] means ((for R1 being Nat holds (R1 < $1 implies ( Shift (D355 , R1) ) |= ( 'not' D399 ))) implies (( Shift (D355 , $1) ) |= D398 & R22 in (the LTLold of H10(( ( R8 + 1 ) + $1 )))));
L2938: ( len D399 ) < ( R2 + 1 ) by L2774 , L2936 , MODELC_2:11;
L2939: ( len D399 ) <= R2 by L2938 , NAT_1:13;
L2940: ( len D398 ) < ( R2 + 1 ) by L2774 , L2936 , MODELC_2:11;
L2941: ( len D398 ) <= R2 by L2940 , NAT_1:13;
L2942: D399 is_subformula_of R22 by L2936 , MODELC_2:31;
L2943: (for R9 being Nat holds (S18[ R9 ] implies S18[ ( R9 + 1 ) ]))
proof
let R9 being Nat;
assume that
L2944: S18[ R9 ];
L2945: S18[ ( R9 + 1 ) ]
proof
set D400 = ( R8 + R9 );
set D401 = H10(( D400 + 1 ));
set D402 = H10(D400);
assume L2946: (for R1 being Nat holds (R1 < ( R9 + 1 ) implies ( Shift (D355 , R1) ) |= ( 'not' D399 )));
L2947: (for R1 being Nat holds (R1 < R9 implies ( Shift (D355 , R1) ) |= ( 'not' D399 )))
proof
L2948: R9 <= ( R9 + 1 ) by NAT_1:11;
let R1 being Nat;
assume L2949: R1 < R9;
L2950: R1 < ( R9 + 1 ) by L2949 , L2948 , XXREAL_0:2;
thus L2951: thesis by L2950 , L2946;
end;
L2952: D401 is_next_of D402 by L2746;
reconsider D403 = D402 as  elementary  strict LTLnode over R46 by L2952 , L142;
set D404 = ( D400 + 1 );
set D405 = H10(( D404 + 1 ));
L2953: D405 is_next_of D401 by L2746;
reconsider D406 = D405 as  elementary  strict LTLnode over R46 by L2953 , L142;
reconsider D407 = D401 as  elementary  strict LTLnode over R46 by L2952 , L142;
L2954: R9 < ( R9 + 1 ) by NAT_1:13;
L2955: ( Shift (D355 , R9) ) |= ( 'not' D399 ) by L2954 , L2946;
L2956:
now
assume L2957: D399 in (the LTLold of D407);
L2958: ( Shift (R37 , D400) ) |= D399 by L2957 , L2771 , L2773 , L2942 , L2939 , MODELC_2:35;
L2959: ( Shift (( Shift (R37 , R8) ) , R9) ) |= D399 by L2958 , MODELC_2:80;
thus L2960: contradiction by L2959 , L2955 , MODELC_2:64;
end;
L2961: ((D407 is_next_of D403 & R22 is  Release & R22 in (the LTLold of D407) & (not D399 in (the LTLold of D407))) implies (D398 in (the LTLold of D407) & R22 in (the LTLnext of D407))) by L1704;
L2962: D398 in (the LTLold of D406) by L2961 , L2746 , L2936 , L2944 , L2953 , L2947 , L2956 , L1753;
L2963: ( Shift (R37 , ( R8 + ( R9 + 1 ) )) ) |= D398 by L2962 , L2771 , L2773 , L2937 , L2941 , MODELC_2:35;
L2964: R22 in (the LTLold of D406) by L2746 , L2936 , L2944 , L2953 , L2947 , L2956 , L2961 , L1753;
thus L2965: thesis by L2964 , L2963 , MODELC_2:80;
end;
thus L2966: thesis by L2945;
end;
L2967: R22 = ( D399 'R' D398 ) by L2936 , MODELC_2:9;
L2968: ((for R9 being Nat holds S18[ R9 ]) implies D355 |= R22)
proof
assume L2969: (for R9 being Nat holds S18[ R9 ]);
L2970: (for R9 being Nat holds ((for R1 being Nat holds (R1 < R9 implies ( Shift (D355 , R1) ) |= ( 'not' D399 ))) implies ( Shift (D355 , R9) ) |= D398)) by L2969;
thus L2971: thesis by L2970 , L2967 , MODELC_2:69;
end;
L2972: S18[ ( 0 ) ]
proof
set D408 = H10(R8);
set D409 = H10(( R8 + 1 ));
L2973: D409 is_next_of D408 by L2746;
reconsider D410 = D409 as  elementary  strict LTLnode over R46 by L2973 , L142;
reconsider D411 = D408 as  elementary  strict LTLnode over R46 by L2973 , L142;
assume L2974: (for R1 being Nat holds (R1 < ( 0 ) implies ( Shift (D355 , R1) ) |= ( 'not' D399 )));
L2975: ( Shift (D355 , ( 0 )) ) = ( Shift (R37 , R8) ) by MODELC_2:79;
L2976: ((D410 is_next_of D411 & R22 in (the LTLold of D410)) implies (R22 is  Release implies D398 in (the LTLold of D410))) by L1794;
thus L2977: thesis by L2976 , L2746 , L2771 , L2773 , L2775 , L2936 , L2937 , L2941 , L2975 , MODELC_2:35;
end;
L2978: (for R9 being Nat holds S18[ R9 ]) from NAT_1:sch 2(L2972 , L2943);
thus L2979: thesis by L2978 , L2968;
end;
end;
thus L2981: thesis by L2776;
end;
L2982: S17[ ( R2 + 1 ) ]
proof
let R8 being Nat;
let R22 being LTL-formula;
assume that
L2983: R22 is_subformula_of R46
and
L2984: ( len R22 ) <= ( R2 + 1 )
and
L2985: R22 in (the LTLold of H10(( R8 + 1 )));
set D412 = ( len R22 );
reconsider D413 = D412 as Nat;
L2986:
now
per cases  by L2984 , NAT_1:8;
suppose L2987: D413 <= R2;

thus L2988: thesis by L2987 , L2771 , L2983 , L2985;
end;
suppose L2989: D413 = ( R2 + 1 );

thus L2990: thesis by L2989 , L2772 , L2983 , L2985;
end;
end;
thus L2992: thesis by L2986;
end;
thus L2993: thesis by L2982;
end;
L2994: S17[ ( 0 ) ] by MODELC_2:3;
L2995: (for R2 being Nat holds S17[ R2 ]) from NAT_1:sch 2(L2994 , L2770);
set D414 = ( len R46 );
L2996: (R46 in { R46 } & ( len R46 ) <= D414) by TARSKI:def 1;
reconsider D415 = D349 as  elementary  strict LTLnode over R46 by L2756 , L142;
reconsider D416 = D350 as  elementary  strict LTLnode over R46 by L2756 , L142;
L2997: (the LTLnext of D416) c= (the LTLold of D415) by L2746 , L1665;
L2998: H10(( 0 )) = ( CastNode (( init R46 ) , R46) ) by L2743 , TARSKI:def 1
.= ( init R46 ) by L107;
L2999: ( Shift (R37 , ( 0 )) ) |= R46 by L2998 , L2997 , L2995 , L2996;
thus L3000: thesis by L2999 , MODELC_2:79;
end;
definition
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
let R46 being  neg-inner-most LTL-formula;
let R47 being (Choice_Function of ( BOOL ( Subformulae R46 ) ));
let R48 being  strict LTLnode over R46;
assume that
L3001: R48 is non  elementary
and
L3002: R37 |= ( * R48 );
func chosen_succ_end_num (R37 , R46 , R47 , R48) -> Nat means 
:L3003: ((for R8 being Nat holds (R8 < it implies (( CastNode (( ( ( choice_succ_func (R37 , R46 , R47) ) |** R8 ) . R48 ) , R46) ) is non  elementary & ( CastNode (( ( ( choice_succ_func (R37 , R46 , R47) ) |** ( R8 + 1 ) ) . R48 ) , R46) ) is_succ_of ( CastNode (( ( ( choice_succ_func (R37 , R46 , R47) ) |** R8 ) . R48 ) , R46) )))) & ( CastNode (( ( ( choice_succ_func (R37 , R46 , R47) ) |** it ) . R48 ) , R46) ) is  elementary & (for R8 being Nat holds (R8 <= it implies R37 |= ( * ( CastNode (( ( ( choice_succ_func (R37 , R46 , R47) ) |** R8 ) . R48 ) , R46) ) ))));
existence
proof
L3004: R37 |= ( * ( CastNode (R48 , R46) ) ) by L3002 , L107;
L3005: (R48 in ( LTLNodes R46 ) & ( CastNode (R48 , R46) ) is non  elementary) by L3001 , L107 , L2017;
thus L3006: thesis by L3005 , L3004 , L2311 , L2617;
end;
uniqueness
proof
set D417 = ( choice_succ_func (R37 , R46 , R47) );
let C87 , C88 being Nat;
assume that
L3007: (for R8 being Nat holds (R8 < C87 implies (( CastNode (( ( D417 |** R8 ) . R48 ) , R46) ) is non  elementary & ( CastNode (( ( D417 |** ( R8 + 1 ) ) . R48 ) , R46) ) is_succ_of ( CastNode (( ( D417 |** R8 ) . R48 ) , R46) ))))
and
L3008: ( CastNode (( ( D417 |** C87 ) . R48 ) , R46) ) is  elementary
and
L3009: (for R8 being Nat holds (R8 <= C87 implies R37 |= ( * ( CastNode (( ( D417 |** R8 ) . R48 ) , R46) ) )))
and
L3010: (for R8 being Nat holds (R8 < C88 implies (( CastNode (( ( D417 |** R8 ) . R48 ) , R46) ) is non  elementary & ( CastNode (( ( D417 |** ( R8 + 1 ) ) . R48 ) , R46) ) is_succ_of ( CastNode (( ( D417 |** R8 ) . R48 ) , R46) ))))
and
L3011: ( CastNode (( ( D417 |** C88 ) . R48 ) , R46) ) is  elementary
and
L3012: (for R8 being Nat holds (R8 <= C88 implies R37 |= ( * ( CastNode (( ( D417 |** R8 ) . R48 ) , R46) ) )));
L3013:
now
assume L3014: C87 <> C88;
L3015:
now
per cases  by L3014 , XXREAL_0:1;
suppose L3016: C87 < C88;

thus L3017: contradiction by L3016 , L3008 , L3010;
end;
suppose L3018: C88 < C87;

thus L3019: contradiction by L3018 , L3007 , L3011;
end;
end;
thus L3021: contradiction by L3015;
end;
thus L3022: thesis by L3013;
end;
end;
definition
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
let R46 being  neg-inner-most LTL-formula;
let R47 being (Choice_Function of ( BOOL ( Subformulae R46 ) ));
let R48 being  strict LTLnode over R46;
assume L3024: R37 |= ( * ( 'X' R48 ) );
func chosen_next (R37 , R46 , R47 , R48) ->  elementary  strict LTLnode over R46 equals 
:L3025: ( CastNode (( ( ( choice_succ_func (R37 , R46 , R47) ) |** ( chosen_succ_end_num (R37 , R46 , R47 , ( 'X' R48 )) ) ) . ( 'X' R48 ) ) , R46) ) if ( 'X' R48 ) is non  elementary otherwise ( FinalNode R46 );
correctness by L3024 , L3003;
end;
theorem
L3027: (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for R46 being  neg-inner-most LTL-formula holds (for R47 being (Choice_Function of ( BOOL ( Subformulae R46 ) )) holds (for R52 being  elementary  strict LTLnode over R46 holds (R37 |= ( * ( 'X' R52 ) ) implies (( chosen_next (R37 , R46 , R47 , R52) ) is_next_of R52 & R37 |= ( * ( chosen_next (R37 , R46 , R47 , R52) ) )))))))
proof
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
let R46 being  neg-inner-most LTL-formula;
let R47 being (Choice_Function of ( BOOL ( Subformulae R46 ) ));
let R52 being  elementary  strict LTLnode over R46;
set D418 = ( LTLNodes R46 );
set D419 = ( 'X' R52 );
assume L3028: R37 |= ( * D419 );
set D420 = ( chosen_succ_end_num (R37 , R46 , R47 , D419) );
set D421 = ( choice_succ_func (R37 , R46 , R47) );
set D422 = ( CastNode (( ( D421 |** D420 ) . D419 ) , R46) );
L3029: D419 in D418 by L2017;
L3030:
now
per cases ;
suppose L3031: D419 is non  elementary;

deffunc H14(set) = ( CastNode (( ( D421 |** ( CastNat ( ( CastNat $1 ) - 1 ) ) ) . D419 ) , R46) );
set D423 = ( D420 + 1 );
L3032: (ex R19 being FinSequence st (( len R19 ) = D423 & (for B115 being Nat holds (B115 in ( dom R19 ) implies ( R19 . B115 ) = H14(B115))))) from FINSEQ_1:sch 2;
consider R19 being FinSequence such that L3033: ( len R19 ) = D423 and L3034: (for B116 being Nat holds (B116 in ( dom R19 ) implies ( R19 . B116 ) = H14(B116))) by L3032;
L3035: ( Seg D423 ) = ( dom R19 ) by L3033 , FINSEQ_1:def 3;
L3036: (for R1 being Nat holds ((1 <= R1 & R1 <= D423) implies ( R19 . R1 ) = ( CastNode (( ( D421 |** ( CastNat ( R1 - 1 ) ) ) . D419 ) , R46) )))
proof
let R1 being Nat;
assume L3037: (1 <= R1 & R1 <= D423);
L3038: R1 in ( Seg D423 ) by L3037 , FINSEQ_1:1;
L3039: ( R19 . R1 ) = ( CastNode (( ( D421 |** ( CastNat ( ( CastNat R1 ) - 1 ) ) ) . D419 ) , R46) ) by L3038 , L3034 , L3035;
thus L3040: thesis by L3039 , MODELC_2:def 1;
end;
L3041: (for R1 being Nat holds ((1 <= R1 & R1 < ( len R19 )) implies (ex R49 being  strict LTLnode over R46 st (ex R51 being  strict LTLnode over R46 st (R49 = ( R19 . R1 ) & R51 = ( R19 . ( R1 + 1 ) ) & R51 is_succ_of R49)))))
proof
let R1 being Nat;
assume that
L3042: 1 <= R1
and
L3043: R1 < ( len R19 );
set D424 = ( R1 - 1 );
reconsider D425 = D424 as Nat by L3042 , NAT_1:21;
set D426 = ( CastNode (( ( D421 |** ( D425 + 1 ) ) . D419 ) , R46) );
set D427 = ( R1 + 1 );
L3044: (1 <= D427 & D427 <= D423) by L3033 , L3042 , L3043 , NAT_1:13;
L3045: ( R19 . ( R1 + 1 ) ) = ( CastNode (( ( D421 |** ( CastNat ( D427 - 1 ) ) ) . D419 ) , R46) ) by L3044 , L3036
.= D426 by MODELC_2:def 1;
set D428 = ( CastNode (( ( D421 |** D425 ) . D419 ) , R46) );
L3046: ( R1 - 1 ) < ( D423 - 1 ) by L3033 , L3043 , XREAL_1:14;
L3047: D426 is_succ_of D428 by L3046 , L3028 , L3031 , L3003;
L3048: ( R19 . R1 ) = ( CastNode (( ( D421 |** ( CastNat D425 ) ) . D419 ) , R46) ) by L3033 , L3036 , L3042 , L3043
.= D428 by MODELC_2:def 1;
thus L3049: thesis by L3048 , L3047 , L3045;
end;
L3050: R19 is_Finseq_for R46 by L3041 , L111;
L3051: 1 <= D423 by NAT_1:11;
L3052: ( R19 . ( len R19 ) ) = ( CastNode (( ( D421 |** ( CastNat ( D423 - 1 ) ) ) . D419 ) , R46) ) by L3051 , L3033 , L3036
.= D422 by MODELC_2:def 1;
L3053: D422 = ( chosen_next (R37 , R46 , R47 , R52) ) by L3028 , L3031 , L3025;
L3054: ( R19 . 1 ) = ( CastNode (( ( D421 |** ( CastNat ( 1 - 1 ) ) ) . D419 ) , R46) ) by L3051 , L3036
.= ( CastNode (( ( D421 |** ( 0 ) ) . D419 ) , R46) ) by MODELC_2:def 1
.= ( CastNode (( ( id D418 ) . D419 ) , R46) ) by FUNCT_7:84
.= ( CastNode (D419 , R46) ) by L3029 , FUNCT_1:18
.= ( 'X' R52 ) by L107;
thus L3055: thesis by L3054 , L3028 , L3031 , L3053 , L3051 , L3033 , L3052 , L3050 , L142 , L3003;
end;
suppose L3056: D419 is  elementary;

L3057: (the LTLnew of D419) = (the LTLnew of ( FinalNode R46 )) by L3056 , L99;
L3058: ( chosen_next (R37 , R46 , R47 , R52) ) = D419 by L3057 , L3028 , L3025;
set D429 = <* D419 *>;
L3059: ( Seg 1 ) = ( dom D429 ) by FINSEQ_1:38;
L3060: (for B117 being Nat holds (B117 in ( dom D429 ) implies ( D429 . B117 ) = D419))
proof
let C89 being Nat;
assume L3061: C89 in ( dom D429 );
L3062: C89 = 1 by L3061 , L3059 , FINSEQ_1:2 , TARSKI:def 1;
thus L3063: thesis by L3062 , FINSEQ_1:40;
end;
L3064: (for R1 being Nat holds ((1 <= R1 & R1 < ( len D429 )) implies (ex R49 being  strict LTLnode over R46 st (ex R51 being  strict LTLnode over R46 st (R49 = ( D429 . R1 ) & R51 = ( D429 . ( R1 + 1 ) ) & R51 is_succ_of R49))))) by FINSEQ_1:39;
L3065: D429 is_Finseq_for R46 by L3064 , L111;
L3066: 1 in ( Seg 1 ) by FINSEQ_1:1;
L3067: (( len D429 ) = 1 & ( D429 . 1 ) = ( 'X' R52 )) by L3066 , L3059 , L3060 , FINSEQ_1:39;
thus L3068: thesis by L3067 , L3028 , L3058 , L3065 , L142;
end;
end;
thus L3070: thesis by L3030;
end;
definition
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
let R46 being  neg-inner-most LTL-formula;
let R47 being (Choice_Function of ( BOOL ( Subformulae R46 ) ));
func chosen_run (R37 , R46 , R47) -> (sequence of ( LTLStates R46 )) means 
:L3071: (( it . ( 0 ) ) = ( init R46 ) & (for R2 being Nat holds ( it . ( R2 + 1 ) ) = ( chosen_next (( Shift (R37 , R2) ) , R46 , R47 , ( CastNode (( it . R2 ) , R46) )) )));
existence
proof
deffunc H15(set , set) = ( chosen_next (( Shift (R37 , ( CastNat $1 )) ) , R46 , R47 , ( CastNode ($2 , R46) )) );
set D430 = ( LTLStates R46 );
L3072: ((ex B118 being set st (ex B119 being Function st (B118 = ( B119 . ( 0 ) ) & ( dom B119 ) = ( NAT ) & ( B119 . ( 0 ) ) = ( init R46 ) & (for B120 being (Element of ( NAT )) holds ( B119 . ( B120 + 1 ) ) = H15(B120 , ( B119 . B120 )))))) & (for B121 , B122 being set holds (((ex B123 being Function st (B121 = ( B123 . ( 0 ) ) & ( dom B123 ) = ( NAT ) & ( B123 . ( 0 ) ) = ( init R46 ) & (for B124 being (Element of ( NAT )) holds ( B123 . ( B124 + 1 ) ) = H15(B124 , ( B123 . B124 ))))) & (ex B125 being Function st (B122 = ( B125 . ( 0 ) ) & ( dom B125 ) = ( NAT ) & ( B125 . ( 0 ) ) = ( init R46 ) & (for B126 being (Element of ( NAT )) holds ( B125 . ( B126 + 1 ) ) = H15(B126 , ( B125 . B126 )))))) implies B121 = B122))) from RECDEF_1:sch 12;
consider C90 being Function such that L3073: ( dom C90 ) = ( NAT ) and L3074: ( C90 . ( 0 ) ) = ( init R46 ) and L3075: (for B127 being (Element of ( NAT )) holds ( C90 . ( B127 + 1 ) ) = H15(B127 , ( C90 . B127 ))) by L3072;
L3076: (for B128 being Nat holds ( C90 . ( B128 + 1 ) ) = H15(B128 , ( C90 . B128 )))
proof
let C91 being Nat;
reconsider D431 = C91 as (Element of ( NAT )) by ORDINAL1:def 12;
L3077: ( C90 . ( D431 + 1 ) ) = H15(D431 , ( C90 . D431 )) by L3075;
thus L3078: thesis by L3077;
end;
L3079: (for B129 being Nat holds ( C90 . ( B129 + 1 ) ) = ( chosen_next (( Shift (R37 , B129) ) , R46 , R47 , ( CastNode (( C90 . B129 ) , R46) )) ))
proof
let R2 being Nat;
L3080: ( C90 . ( R2 + 1 ) ) = ( chosen_next (( Shift (R37 , ( CastNat R2 )) ) , R46 , R47 , ( CastNode (( C90 . R2 ) , R46) )) ) by L3076;
thus L3081: thesis by L3080 , MODELC_2:def 1;
end;
L3082: (for R11 being set holds (R11 in ( NAT ) implies ( C90 . R11 ) in D430))
proof
let R11 being set;
assume L3083: R11 in ( NAT );
reconsider D432 = R11 as Nat by L3083;
L3084: (D432 = ( 0 ) or ( 0 ) < ( ( 0 ) + D432 ));
L3085:
now
per cases  by L3084 , NAT_1:19;
suppose L3086: D432 = ( 0 );

set D433 = ( C90 . D432 );
reconsider D434 = D433 as (Element of ( LTLNodes R46 )) by L3074 , L3086 , L2017;
L3087: ( C90 . D432 ) = D434;
thus L3088: thesis by L3087 , L3074 , L3086;
end;
suppose L3089: 1 <= D432;

set D435 = ( D432 - 1 );
reconsider D436 = D435 as Nat by L3089 , NAT_1:21;
set D437 = ( C90 . D432 );
L3090: D437 = ( C90 . ( D436 + 1 ) )
.= H15(D436 , ( C90 . D436 )) by L3076;
reconsider D438 = D437 as (Element of ( LTLNodes R46 )) by L3090 , L2017;
L3091: ( C90 . D432 ) = D438;
thus L3092: thesis by L3091 , L3090;
end;
end;
thus L3094: thesis by L3085;
end;
reconsider D439 = C90 as (sequence of D430) by L3082 , L3073 , FUNCT_2:3;
take D439;
thus L3095: thesis by L3074 , L3079;
end;
uniqueness
proof
deffunc H16(set , set) = ( chosen_next (( Shift (R37 , ( CastNat $1 )) ) , R46 , R47 , ( CastNode ($2 , R46) )) );
deffunc H17(Nat , set) = ( chosen_next (( Shift (R37 , $1) ) , R46 , R47 , ( CastNode ($2 , R46) )) );
set D440 = ( LTLStates R46 );
L3096: (for B130 , B131 being (Function of ( NAT ) , ( LTLStates R46 )) holds ((( B130 . ( 0 ) ) = ( init R46 ) & (for R2 being Nat holds ( B130 . ( R2 + 1 ) ) = H16(R2 , ( B130 . R2 ))) & ( B131 . ( 0 ) ) = ( init R46 ) & (for R2 being Nat holds ( B131 . ( R2 + 1 ) ) = H16(R2 , ( B131 . R2 )))) implies B130 = B131))
proof
let C92 , C93 being (Function of ( NAT ) , D440);
assume that
L3097: ( C92 . ( 0 ) ) = ( init R46 )
and
L3098: (for B132 being Nat holds ( C92 . ( B132 + 1 ) ) = H16(B132 , ( C92 . B132 )))
and
L3099: ( C93 . ( 0 ) ) = ( init R46 )
and
L3100: (for B133 being Nat holds ( C93 . ( B133 + 1 ) ) = H16(B133 , ( C93 . B133 )));
defpred S19[ Nat ] means ( C92 . $1 ) = ( C93 . $1 );
L3101: (for B134 being (Element of ( NAT )) holds (S19[ B134 ] implies S19[ ( B134 + 1 ) ]))
proof
let C94 being (Element of ( NAT ));
assume L3102: S19[ C94 ];
L3103: ( C92 . ( C94 + 1 ) ) = H16(C94 , ( C93 . C94 )) by L3102 , L3098
.= ( C93 . ( C94 + 1 ) ) by L3100;
thus L3104: thesis by L3103;
end;
L3105: S19[ ( 0 ) ] by L3097 , L3099;
L3106: (for B135 being (Element of ( NAT )) holds S19[ B135 ]) from NAT_1:sch 1(L3105 , L3101);
L3107: (for R11 being set holds (R11 in ( dom C92 ) implies ( C92 . R11 ) = ( C93 . R11 ))) by L3106;
L3108: (( dom C92 ) = ( NAT ) & ( dom C93 ) = ( NAT )) by FUNCT_2:def 1;
thus L3109: thesis by L3108 , L3107 , FUNCT_1:2;
end;
L3110: (for B136 , B137 being (Function of ( NAT ) , ( LTLStates R46 )) holds ((( B136 . ( 0 ) ) = ( init R46 ) & (for R2 being Nat holds ( B136 . ( R2 + 1 ) ) = H17(R2 , ( B136 . R2 ))) & ( B137 . ( 0 ) ) = ( init R46 ) & (for R2 being Nat holds ( B137 . ( R2 + 1 ) ) = H17(R2 , ( B137 . R2 )))) implies B136 = B137))
proof
let C95 , C96 being (Function of ( NAT ) , D440);
assume that
L3111: ( C95 . ( 0 ) ) = ( init R46 )
and
L3112: (for R2 being Nat holds ( C95 . ( R2 + 1 ) ) = H17(R2 , ( C95 . R2 )))
and
L3113: ( C96 . ( 0 ) ) = ( init R46 )
and
L3114: (for R2 being Nat holds ( C96 . ( R2 + 1 ) ) = H17(R2 , ( C96 . R2 )));
L3115: (for R2 being Nat holds ( C96 . ( R2 + 1 ) ) = H16(R2 , ( C96 . R2 )))
proof
let R2 being Nat;
L3116: ( C96 . ( R2 + 1 ) ) = ( chosen_next (( Shift (R37 , R2) ) , R46 , R47 , ( CastNode (( C96 . R2 ) , R46) )) ) by L3114;
thus L3117: thesis by L3116 , MODELC_2:def 1;
end;
L3118: (for R2 being Nat holds ( C95 . ( R2 + 1 ) ) = H16(R2 , ( C95 . R2 )))
proof
let R2 being Nat;
L3119: ( C95 . ( R2 + 1 ) ) = ( chosen_next (( Shift (R37 , R2) ) , R46 , R47 , ( CastNode (( C95 . R2 ) , R46) )) ) by L3112;
thus L3120: thesis by L3119 , MODELC_2:def 1;
end;
thus L3121: thesis by L3118 , L3096 , L3111 , L3113 , L3115;
end;
thus L3122: thesis by L3110;
end;
end;
L3124: (for R46 being  neg-inner-most LTL-formula holds ( 'X' ( CastLTL ( {} R46 ) ) ) = ( {} ))
proof
let R46 being  neg-inner-most LTL-formula;
L3125:
now
assume L3126: ( 'X' ( CastLTL ( {} R46 ) ) ) <> ( {} );
consider R12 being set such that L3127: R12 in ( 'X' ( CastLTL ( {} R46 ) ) ) by L3126 , XBOOLE_0:def 1;
L3128: (ex B138 being LTL-formula st (R12 = B138 & (ex B139 being LTL-formula st (B139 in ( CastLTL ( {} R46 ) ) & B138 = ( 'X' B139 ))))) by L3127;
thus L3129: contradiction by L3128;
end;
thus L3130: thesis by L3125;
end;
theorem
L3131: (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for R46 being  neg-inner-most LTL-formula holds (for R48 being  strict LTLnode over R46 holds (R37 |= ( * R48 ) implies ( Shift (R37 , 1) ) |= ( * ( 'X' R48 ) )))))
proof
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
let R46 being  neg-inner-most LTL-formula;
let R48 being  strict LTLnode over R46;
set D441 = ( 'X' R48 );
assume L3132: R37 |= ( * R48 );
L3133: (for B140 being LTL-formula holds (B140 in ( 'X' ( CastLTL (the LTLnext of R48) ) ) implies R37 |= B140))
proof
let C97 being LTL-formula;
assume L3134: C97 in ( 'X' ( CastLTL (the LTLnext of R48) ) );
L3135: C97 in ( * R48 ) by L3134 , L1;
thus L3136: thesis by L3135 , L3132 , MODELC_2:def 64;
end;
L3137: R37 |= ( 'X' ( CastLTL (the LTLnext of R48) ) ) by L3133 , MODELC_2:def 64;
L3138: ( * D441 ) = ( CastLTL (the LTLnext of R48) ) by L3124;
thus L3139: thesis by L3138 , L3137 , MODELC_2:77;
end;
theorem
L3140: (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for R46 being  neg-inner-most LTL-formula holds (R37 |= ( 'X' R46 ) implies R37 |= ( * ( init R46 ) ))))
proof
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
let R46 being  neg-inner-most LTL-formula;
assume L3141: R37 |= ( 'X' R46 );
L3142: (for B141 being LTL-formula holds (B141 in ( 'X' ( CastLTL ( Seed R46 ) ) ) implies R37 |= B141))
proof
let C98 being LTL-formula;
assume L3143: C98 in ( 'X' ( CastLTL ( Seed R46 ) ) );
L3144: (ex B142 being LTL-formula st (C98 = B142 & (ex B143 being LTL-formula st (B143 in ( CastLTL ( Seed R46 ) ) & B142 = ( 'X' B143 ))))) by L3143;
thus L3145: thesis by L3144 , L3141 , TARSKI:def 1;
end;
thus L3146: thesis by L3142 , MODELC_2:def 64;
end;
theorem
L3147: (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for R46 being  neg-inner-most LTL-formula holds (R37 |= R46 iff R37 |= ( * ( 'X' ( init R46 ) ) ))))
proof
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
let R46 being  neg-inner-most LTL-formula;
set D442 = ( init R46 );
set D443 = ( 'X' D442 );
L3148: ( * D443 ) = { R46 } by L3124;
L3149: (R37 |= ( * D443 ) implies R37 |= R46)
proof
assume L3150: R37 |= ( * D443 );
L3151: R46 in ( * D443 ) by L3148 , TARSKI:def 1;
thus L3152: thesis by L3151 , L3150 , MODELC_2:def 64;
end;
L3153: (R37 |= R46 implies R37 |= ( * D443 ))
proof
assume L3154: R37 |= R46;
L3155: (for B144 being LTL-formula holds (B144 in ( * D443 ) implies R37 |= B144)) by L3154 , L3148 , TARSKI:def 1;
thus L3156: thesis by L3155 , MODELC_2:def 64;
end;
thus L3157: thesis by L3153 , L3149;
end;
theorem
L3158: (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for R46 being  neg-inner-most LTL-formula holds (for R47 being (Choice_Function of ( BOOL ( Subformulae R46 ) )) holds (R37 |= R46 implies (for R2 being Nat holds (( CastNode (( ( chosen_run (R37 , R46 , R47) ) . ( R2 + 1 ) ) , R46) ) is_next_of ( CastNode (( ( chosen_run (R37 , R46 , R47) ) . R2 ) , R46) ) & ( Shift (R37 , R2) ) |= ( * ( 'X' ( CastNode (( ( chosen_run (R37 , R46 , R47) ) . R2 ) , R46) ) ) )))))))
proof
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
let R46 being  neg-inner-most LTL-formula;
let R47 being (Choice_Function of ( BOOL ( Subformulae R46 ) ));
set D444 = ( init R46 );
deffunc H18(Nat) = ( CastNode (( ( chosen_run (R37 , R46 , R47) ) . $1 ) , R46) );
defpred S20[ Nat ] means (H18(( $1 + 1 )) is_next_of H18($1) & ( Shift (R37 , $1) ) |= ( * ( 'X' H18($1) ) ));
assume L3159: R37 |= R46;
L3160: R37 |= ( * ( 'X' D444 ) ) by L3159 , L3147;
L3161: ( CastNode (( ( chosen_run (R37 , R46 , R47) ) . ( 0 ) ) , R46) ) = ( CastNode (D444 , R46) ) by L3071
.= D444 by L107;
L3162: (for R2 being Nat holds (S20[ R2 ] implies S20[ ( R2 + 1 ) ]))
proof
let R2 being Nat;
set D445 = H18(R2);
L3163: D445 is  elementary  strict  elementary  strict  elementary  strict  elementary  strict LTLnode over R46
proof
L3164:
now
per cases ;
suppose L3165: R2 = ( 0 );

L3166: D445 = ( CastNode (D444 , R46) ) by L3165 , L3071
.= D444 by L107;
thus L3167: thesis by L3166;
end;
suppose L3168: ( 0 ) < R2;

set D446 = ( R2 - 1 );
reconsider D447 = D446 as Nat by L3168 , NAT_1:20;
L3169: R2 = ( D447 + 1 );
L3170: D445 = ( CastNode (( chosen_next (( Shift (R37 , D447) ) , R46 , R47 , ( CastNode (( ( chosen_run (R37 , R46 , R47) ) . D447 ) , R46) )) ) , R46) ) by L3169 , L3071
.= ( chosen_next (( Shift (R37 , D447) ) , R46 , R47 , ( CastNode (( ( chosen_run (R37 , R46 , R47) ) . D447 ) , R46) )) ) by L107;
thus L3171: thesis by L3170;
end;
end;
thus L3173: thesis by L3164;
end;
reconsider D448 = D445 as  elementary  strict LTLnode over R46 by L3163;
set D449 = ( R2 + 1 );
set D450 = ( Shift (R37 , R2) );
set D451 = ( Shift (R37 , D449) );
set D452 = H18(D449);
set D453 = H18(( D449 + 1 ));
L3174: D452 = ( CastNode (( chosen_next (D450 , R46 , R47 , ( CastNode (( ( chosen_run (R37 , R46 , R47) ) . R2 ) , R46) )) ) , R46) ) by L3071
.= ( chosen_next (D450 , R46 , R47 , D448) ) by L107;
reconsider D454 = D452 as  elementary  strict LTLnode over R46 by L3174;
L3175: D453 = ( CastNode (( chosen_next (D451 , R46 , R47 , ( CastNode (( ( chosen_run (R37 , R46 , R47) ) . D449 ) , R46) )) ) , R46) ) by L3071
.= ( chosen_next (D451 , R46 , R47 , D454) ) by L107;
assume L3176: S20[ R2 ];
L3177: (D451 = ( Shift (D450 , 1) ) & D450 |= ( * ( chosen_next (D450 , R46 , R47 , D448) ) )) by L3176 , L3027 , MODELC_2:80;
L3178: D451 |= ( * ( 'X' D454 ) ) by L3177 , L3174 , L3131;
thus L3179: thesis by L3178 , L3175 , L3027;
end;
L3180: H18(( ( 0 ) + 1 )) = ( CastNode (( chosen_next (( Shift (R37 , ( 0 )) ) , R46 , R47 , ( CastNode (( ( chosen_run (R37 , R46 , R47) ) . ( 0 ) ) , R46) )) ) , R46) ) by L3071
.= ( CastNode (( chosen_next (R37 , R46 , R47 , D444) ) , R46) ) by L3161 , MODELC_2:79
.= ( chosen_next (R37 , R46 , R47 , D444) ) by L107;
L3181: S20[ ( 0 ) ] by L3180 , L3160 , L3161 , L3027 , MODELC_2:79;
L3182: (for R2 being Nat holds S20[ R2 ]) from NAT_1:sch 2(L3181 , L3162);
thus L3183: thesis by L3182;
end;
theorem
L3184: (for R26 being LTL-formula holds (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for R46 being  neg-inner-most LTL-formula holds (for R47 being (Choice_Function of ( BOOL ( Subformulae R46 ) )) holds (R37 |= R46 implies (for R8 being Nat holds ((R26 in (the LTLold of ( CastNode (( ( chosen_run (R37 , R46 , R47) ) . ( R8 + 1 ) ) , R46) )) & R26 is  Until & ( Shift (R37 , R8) ) |= ( the_right_argument_of R26 )) implies ( the_right_argument_of R26 ) in (the LTLold of ( CastNode (( ( chosen_run (R37 , R46 , R47) ) . ( R8 + 1 ) ) , R46) )))))))))
proof
let R26 being LTL-formula;
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
let R46 being  neg-inner-most LTL-formula;
let R47 being (Choice_Function of ( BOOL ( Subformulae R46 ) ));
assume L3185: R37 |= R46;
L3186: (for R9 being Nat holds ((R26 in (the LTLold of ( CastNode (( ( chosen_run (R37 , R46 , R47) ) . ( R9 + 1 ) ) , R46) )) & R26 is  Until & ( Shift (R37 , R9) ) |= ( the_right_argument_of R26 )) implies ( the_right_argument_of R26 ) in (the LTLold of ( CastNode (( ( chosen_run (R37 , R46 , R47) ) . ( R9 + 1 ) ) , R46) ))))
proof
set D455 = ( LTLNodes R46 );
let R9 being Nat;
set D456 = ( CastNode (( ( chosen_run (R37 , R46 , R47) ) . R9 ) , R46) );
set D457 = ( CastNode (( ( chosen_run (R37 , R46 , R47) ) . ( R9 + 1 ) ) , R46) );
set D458 = ( Shift (R37 , R9) );
set D459 = ( 'X' D456 );
set D460 = ( choice_succ_func (D458 , R46 , R47) );
set D461 = ( chosen_succ_end_num (D458 , R46 , R47 , D459) );
set D462 = ( CastNode (( ( D460 |** D461 ) . D459 ) , R46) );
L3187: D458 |= ( * D459 ) by L3185 , L3158;
L3188: D459 in D455 by L2017;
L3189:
now
per cases ;
suppose L3190: D459 is non  elementary;

deffunc H19(set) = ( CastNode (( ( D460 |** ( CastNat ( ( CastNat $1 ) - 1 ) ) ) . D459 ) , R46) );
set D463 = ( D461 + 1 );
L3191: (ex R19 being FinSequence st (( len R19 ) = D463 & (for B145 being Nat holds (B145 in ( dom R19 ) implies ( R19 . B145 ) = H19(B145))))) from FINSEQ_1:sch 2;
consider R19 being FinSequence such that L3192: ( len R19 ) = D463 and L3193: (for B146 being Nat holds (B146 in ( dom R19 ) implies ( R19 . B146 ) = H19(B146))) by L3191;
L3194: ( Seg D463 ) = ( dom R19 ) by L3192 , FINSEQ_1:def 3;
L3195: (for R1 being Nat holds ((1 <= R1 & R1 <= D463) implies ( R19 . R1 ) = ( CastNode (( ( D460 |** ( CastNat ( R1 - 1 ) ) ) . D459 ) , R46) )))
proof
let R1 being Nat;
assume L3196: (1 <= R1 & R1 <= D463);
L3197: R1 in ( Seg D463 ) by L3196 , FINSEQ_1:1;
L3198: ( R19 . R1 ) = ( CastNode (( ( D460 |** ( CastNat ( ( CastNat R1 ) - 1 ) ) ) . D459 ) , R46) ) by L3197 , L3193 , L3194;
thus L3199: thesis by L3198 , MODELC_2:def 1;
end;
L3200: (for R1 being Nat holds ((1 <= R1 & R1 < ( len R19 )) implies (ex R49 being  strict LTLnode over R46 st (ex R51 being  strict LTLnode over R46 st (R49 = ( R19 . R1 ) & R51 = ( R19 . ( R1 + 1 ) ) & R51 is_succ_of R49)))))
proof
let R1 being Nat;
assume that
L3201: 1 <= R1
and
L3202: R1 < ( len R19 );
set D464 = ( R1 - 1 );
reconsider D465 = D464 as Nat by L3201 , NAT_1:21;
set D466 = ( CastNode (( ( D460 |** ( D465 + 1 ) ) . D459 ) , R46) );
set D467 = ( R1 + 1 );
L3203: (1 <= D467 & D467 <= D463) by L3192 , L3201 , L3202 , NAT_1:13;
L3204: ( R19 . ( R1 + 1 ) ) = ( CastNode (( ( D460 |** ( CastNat ( D467 - 1 ) ) ) . D459 ) , R46) ) by L3203 , L3195
.= D466 by MODELC_2:def 1;
set D468 = ( CastNode (( ( D460 |** D465 ) . D459 ) , R46) );
L3205: ( R1 - 1 ) < ( D463 - 1 ) by L3192 , L3202 , XREAL_1:14;
L3206: D466 is_succ_of D468 by L3205 , L3187 , L3190 , L3003;
L3207: ( R19 . R1 ) = ( CastNode (( ( D460 |** ( CastNat D465 ) ) . D459 ) , R46) ) by L3192 , L3195 , L3201 , L3202
.= D468 by MODELC_2:def 1;
thus L3208: thesis by L3207 , L3206 , L3204;
end;
L3209: R19 is_Finseq_for R46 by L3200 , L111;
L3210: 1 <= D463 by NAT_1:11;
L3211: ( R19 . 1 ) = ( CastNode (( ( D460 |** ( CastNat ( 1 - 1 ) ) ) . D459 ) , R46) ) by L3210 , L3195
.= ( CastNode (( ( D460 |** ( 0 ) ) . D459 ) , R46) ) by MODELC_2:def 1
.= ( CastNode (( ( id D455 ) . D459 ) , R46) ) by FUNCT_7:84
.= ( CastNode (D459 , R46) ) by L3188 , FUNCT_1:18
.= D459 by L107;
L3212: 1 <= D463 by NAT_1:11;
L3213: ( R19 . ( len R19 ) ) = ( CastNode (( ( D460 |** ( CastNat ( D463 - 1 ) ) ) . D459 ) , R46) ) by L3212 , L3192 , L3195
.= D462 by MODELC_2:def 1;
L3214: D462 is  elementary by L3187 , L3190 , L3003;
L3215: 1 <= ( len R19 ) by L3192 , NAT_1:11;
L3216: ( len R19 ) > 1 by L3215 , L3190 , L3211 , L3213 , L3214 , XXREAL_0:1;
L3217: ((R26 in (the LTLold of D462) & R26 is  Until & D458 |= ( the_right_argument_of R26 )) implies ( the_right_argument_of R26 ) in (the LTLold of D462))
proof
set D469 = ( the_right_argument_of R26 );
assume that
L3218: R26 in (the LTLold of D462)
and
L3219: R26 is  Until
and
L3220: D458 |= D469;
L3221: ((the LTLold of ( CastNode (( R19 . 1 ) , R46) )) = ( {} R46 ) & (the LTLold of ( CastNode (( R19 . ( len R19 ) ) , R46) )) = (the LTLold of D462)) by L3211 , L3213 , L107;
consider R4 being Nat such that L3222: 1 <= R4 and L3223: R4 < D463 and L3224: ((not R26 in (the LTLold of ( CastNode (( R19 . R4 ) , R46) ))) & R26 in (the LTLold of ( CastNode (( R19 . ( R4 + 1 ) ) , R46) ))) by L3221 , L3192 , L3209 , L3216 , L3218 , L1302;
set D470 = ( R4 - 1 );
reconsider D471 = D470 as Nat by L3222 , NAT_1:21;
set D472 = ( ( D460 |** D471 ) . D459 );
set D473 = ( R4 + 1 );
L3225: D472 in D455 by L3188 , FUNCT_2:5;
consider R49 being  strict LTLnode over R46, R50 being  strict LTLnode over R46 such that L3226: R49 = ( R19 . R4 ) and L3227: R50 = ( R19 . ( R4 + 1 ) ) and L3228: R50 is_succ_of R49 by L3192 , L3200 , L3222 , L3223;
L3229: R49 = ( CastNode (( ( D460 |** ( CastNat D471 ) ) . D459 ) , R46) ) by L3195 , L3222 , L3223 , L3226
.= ( CastNode (D472 , R46) ) by MODELC_2:def 1;
L3230: (1 <= D473 & D473 <= D463) by L3222 , L3223 , NAT_1:13;
L3231: R50 = ( CastNode (( ( D460 |** ( CastNat ( D473 - 1 ) ) ) . D459 ) , R46) ) by L3230 , L3195 , L3227
.= ( CastNode (( ( D460 |** ( D471 + 1 ) ) . D459 ) , R46) ) by MODELC_2:def 1
.= ( CastNode (( ( D460 * ( D460 |** D471 ) ) . D459 ) , R46) ) by FUNCT_7:71
.= ( CastNode (( D460 . ( ( D460 |** D471 ) . D459 ) ) , R46) ) by L3188 , FUNCT_2:15
.= ( CastNode (( chosen_succ (D458 , R46 , R47 , ( CastNode (D472 , R46) )) ) , R46) ) by L3225 , L2605
.= ( chosen_succ (D458 , R46 , R47 , R49) ) by L3229 , L107;
L3232: ( R4 - 1 ) < ( D463 - 1 ) by L3223 , XREAL_1:14;
L3233: R49 is non  elementary by L3232 , L3187 , L3190 , L3229 , L3003;
L3234: ( chosen_formula (R47 , R49) ) = R26
proof
set D474 = ( chosen_formula (R47 , R49) );
set D475 = (the LTLold of R50);
set D476 = (the LTLold of R49);
set D477 = (the LTLnew of R49);
L3235: D474 in D477 by L3233 , L2501;
L3236: D475 = ( D476 \/ { D474 } )
proof
L3237:
now
per cases ;
suppose L3238: (((not D474 is  Until) & D458 |= ( * ( SuccNode1 (D474 , R49) ) )) or (D474 is  Until & D458 |/= ( the_right_argument_of D474 )));

L3239: ( chosen_succ (D458 , R46 , R47 , R49) ) = ( SuccNode1 (D474 , R49) ) by L3238 , L2506;
thus L3240: thesis by L3239 , L3231 , L3235 , L75;
end;
suppose L3241: (not (((not D474 is  Until) & D458 |= ( * ( SuccNode1 (D474 , R49) ) )) or (D474 is  Until & D458 |/= ( the_right_argument_of D474 ))));

L3242: R50 = ( SuccNode2 (D474 , R49) ) by L3231 , L3241 , L2506;
thus L3243: thesis by L3242 , L3235 , L84;
end;
end;
thus L3245: thesis by L3237;
end;
L3246: ((not R26 in D476) & R26 in D475) by L3224 , L3226 , L3227 , L107;
L3247:
now
assume L3248: R26 <> D474;
L3249: (not R26 in { D474 }) by L3248 , TARSKI:def 1;
thus L3250: contradiction by L3249 , L3246 , L3236 , XBOOLE_0:def 3;
end;
thus L3251: thesis by L3247;
end;
L3252: R50 = ( SuccNode2 (R26 , R49) ) by L3234 , L3219 , L3220 , L3231 , L2506;
L3253: ( CastNode (( R19 . ( len R19 ) ) , R46) ) = D462 by L3213 , L107;
L3254: (R49 = ( CastNode (( R19 . R4 ) , R46) ) & R50 = ( CastNode (( R19 . ( R4 + 1 ) ) , R46) )) by L3226 , L3227 , L107;
L3255: R50 is_succ_of R49 , R26 by L3254 , L3224 , L3228 , L1384;
L3256: R26 in (the LTLnew of R49) by L3255 , L91;
L3257: (the LTLnew of D462) = ( {} ) by L3214 , L99;
L3258: (the LTLnew of ( CastNode (( R19 . D473 ) , R46) )) c= (the LTLold of ( CastNode (( R19 . ( len R19 ) ) , R46) )) by L3257 , L3192 , L3209 , L3230 , L3253 , L1604;
L3259: (the LTLnew of R50) c= (the LTLold of D462) by L3258 , L3227 , L3253 , L107;
L3260: (the LTLold of ( CastNode (( R19 . R4 ) , R46) )) c= (the LTLold of ( CastNode (( R19 . ( len R19 ) ) , R46) )) by L3192 , L3209 , L3222 , L3223 , L1510;
L3261: (the LTLold of R49) c= (the LTLold of D462) by L3260 , L3226 , L3253 , L107;
L3262: ( LTLNew2 R26 ) = { D469 } by L3219 , L70;
L3263: (the LTLnew of R50) = ( ( (the LTLnew of R49) \ { R26 } ) \/ ( { D469 } \ (the LTLold of R49) ) ) by L3262 , L3252 , L3256 , L84;
L3264:
now
per cases ;
suppose L3265: D469 in (the LTLold of R49);

thus L3266: thesis by L3265 , L3261;
end;
suppose L3267: (not D469 in (the LTLold of R49));

L3268: D469 in { D469 } by TARSKI:def 1;
L3269: D469 in ( { D469 } \ (the LTLold of R49) ) by L3268 , L3267 , XBOOLE_0:def 5;
L3270: D469 in (the LTLnew of R50) by L3269 , L3263 , XBOOLE_0:def 3;
thus L3271: thesis by L3270 , L3259;
end;
end;
thus L3273: thesis by L3264;
end;
L3274: ( ( chosen_run (R37 , R46 , R47) ) . ( R9 + 1 ) ) = ( chosen_next (D458 , R46 , R47 , D456) ) by L3071
.= D462 by L3187 , L3190 , L3025;
thus L3275: thesis by L3274 , L3217 , L107;
end;
suppose L3276: D459 is  elementary;

L3277: (the LTLnew of D459) = (the LTLnew of ( FinalNode R46 )) by L3276 , L99;
L3278: ( chosen_next (D458 , R46 , R47 , D456) ) = D459 by L3277 , L3187 , L3025;
L3279: D457 = ( CastNode (D459 , R46) ) by L3278 , L3071
.= D459 by L107;
thus L3280: thesis by L3279;
end;
end;
thus L3282: thesis by L3189;
end;
thus L3283: thesis by L3186;
end;
theorem
L3284: (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for R46 being  neg-inner-most LTL-formula holds (R37 |= R46 implies R37 is-accepted-by ( BAutomaton R46 ))))
proof
let R37 being (Element of ( Inf_seq ( AtomicFamily ) ));
let R46 being  neg-inner-most LTL-formula;
set D478 = ( LTLStates R46 );
set D479 = ( Tran_LTL R46 );
set D480 = ( InitS_LTL R46 );
set D481 = ( FinalS_LTL R46 );
assume L3285: R37 |= R46;
L3286: (ex B147 being (sequence of D478) st (( B147 . ( 0 ) ) in D480 & (for R2 being Nat holds ([ [ ( B147 . R2 ) , ( ( CastSeq (R37 , ( AtomicFamily )) ) . R2 ) ] , ( B147 . ( R2 + 1 ) ) ] in D479 & (for B148 being set holds (B148 in D481 implies { B149 where B149 is (Element of ( NAT )) : ( B147 . B149 ) in B148 } is  infinite  infinite  infinite  infinite set))))))
proof
set D482 = the (Choice_Function of ( BOOL ( Subformulae R46 ) ));
deffunc H20(set) = ( ( chosen_run (R37 , R46 , D482) ) . ( k_nat $1 ) );
L3287: (for R11 being set holds (R11 in ( NAT ) implies H20(R11) in D478));
L3288: (ex B150 being (Function of ( NAT ) , D478) st (for R11 being set holds (R11 in ( NAT ) implies ( B150 . R11 ) = H20(R11)))) from FUNCT_2:sch 2(L3287);
consider C99 being (sequence of D478) such that L3289: (for R11 being set holds (R11 in ( NAT ) implies ( C99 . R11 ) = H20(R11))) by L3288;
deffunc H21(Nat) = ( CastNode (( C99 . $1 ) , R46) );
L3290: (for R2 being Nat holds (( C99 . R2 ) is  elementary  strict  elementary  strict  elementary  strict  elementary  strict LTLnode over R46 & H21(R2) is  elementary  strict  elementary  strict  elementary  strict  elementary  strict LTLnode over R46))
proof
let R2 being Nat;
reconsider D483 = R2 as (Element of ( NAT )) by ORDINAL1:def 12;
set D484 = H21(D483);
L3291: ( C99 . D483 ) in D478;
consider C100 being (Element of ( LTLNodes R46 )) such that L3292: C100 = ( C99 . D483 ) and L3293: C100 is  elementary  strict  elementary  strict  elementary  strict  elementary  strict LTLnode over R46 by L3291;
reconsider D485 = C100 as  elementary  strict LTLnode over R46 by L3293;
L3294: (the LTLnew of D484) = (the LTLnew of D485) by L3292 , L107
.= ( {} ) by L99;
thus L3295: thesis by L3294 , L3292 , L3293 , L99;
end;
L3296: (for R2 being Nat holds ( C99 . R2 ) = ( ( chosen_run (R37 , R46 , D482) ) . R2 ))
proof
let R2 being Nat;
reconsider D486 = R2 as (Element of ( NAT )) by ORDINAL1:def 12;
L3297: ( C99 . D486 ) = H20(D486) by L3289;
thus L3298: thesis by L3297 , MODELC_1:def 2;
end;
L3299: (for R2 being Nat holds (H21(( R2 + 1 )) is_next_of H21(R2) & ( Shift (R37 , R2) ) |= ( * H21(( R2 + 1 )) )))
proof
let R2 being Nat;
set D487 = H21(R2);
reconsider D488 = D487 as  elementary  strict LTLnode over R46 by L3290;
set D489 = ( R2 + 1 );
set D490 = ( Shift (R37 , R2) );
L3300: ( C99 . R2 ) = ( ( chosen_run (R37 , R46 , D482) ) . R2 ) by L3296;
L3301: H21(R2) = ( CastNode (( ( chosen_run (R37 , R46 , D482) ) . R2 ) , R46) ) by L3296;
L3302: D490 |= ( * ( 'X' D488 ) ) by L3301 , L3285 , L3158;
L3303: ( C99 . D489 ) = ( ( chosen_run (R37 , R46 , D482) ) . D489 ) by L3296
.= ( chosen_next (D490 , R46 , D482 , D488) ) by L3300 , L3071;
L3304: H21(D489) = ( chosen_next (D490 , R46 , D482 , D488) ) by L3303 , L107;
thus L3305: thesis by L3304 , L3302 , L3027;
end;
L3306: (for R2 being Nat holds ( ( CastSeq (R37 , ( AtomicFamily )) ) . R2 ) in ( Label_ H21(( R2 + 1 )) ))
proof
let R2 being Nat;
reconsider D491 = R2 as (Element of ( NAT )) by ORDINAL1:def 12;
set D492 = H21(( D491 + 1 ));
set D493 = ( Shift (R37 , D491) );
set D494 = ( ( CastSeq (R37 , ( AtomicFamily )) ) . D491 );
reconsider D495 = D494 as (Subset of ( atomic_LTL ));
L3307: ( CastSeq (D493 , ( AtomicFamily )) ) = ( ( CastSeq (R37 , ( AtomicFamily )) ) ^\ D491 ) by MODELC_2:81;
L3308: ( ( CastSeq (D493 , ( AtomicFamily )) ) . ( 0 ) ) = ( ( CastSeq (R37 , ( AtomicFamily )) ) . ( ( 0 ) + D491 ) ) by L3307 , NAT_1:def 3;
L3309: D493 |= ( * D492 ) by L3299;
L3310:
now
assume L3311: (not ( Neg_atomic_LTL D492 ) misses D495);
L3312: ( ( Neg_atomic_LTL D492 ) /\ D495 ) <> ( {} ) by L3311 , XBOOLE_0:def 7;
consider R10 being set such that L3313: R10 in ( ( Neg_atomic_LTL D492 ) /\ D495 ) by L3312 , XBOOLE_0:def 1;
L3314: R10 in ( Neg_atomic_LTL D492 ) by L3313 , XBOOLE_0:def 4;
consider C101 being LTL-formula such that L3315: (C101 = R10 & C101 is  atomic) and L3316: ( 'not' C101 ) in (the LTLold of D492) by L3314;
L3317: ( 'not' C101 ) in ( * D492 ) by L3316 , L1;
L3318: D493 |= ( 'not' C101 ) by L3317 , L3309 , MODELC_2:def 64;
L3319: D493 |/= C101 by L3318 , MODELC_2:64;
L3320: R10 in D495 by L3313 , XBOOLE_0:def 4;
thus L3321: contradiction by L3320 , L3308 , L3315 , L3319 , MODELC_2:63;
end;
L3322: ( atomic_LTL D492 ) c= D495
proof
let R10 being set;
assume L3323: R10 in ( atomic_LTL D492 );
consider C102 being LTL-formula such that L3324: (C102 = R10 & C102 is  atomic) and L3325: C102 in (the LTLold of D492) by L3323;
L3326: C102 in ( * D492 ) by L3325 , L1;
L3327: D493 |= C102 by L3326 , L3309 , MODELC_2:def 64;
thus L3328: thesis by L3327 , L3308 , L3324 , MODELC_2:63;
end;
thus L3329: thesis by L3322 , L3310;
end;
L3330: (for R2 being Nat holds [ [ ( C99 . R2 ) , ( ( CastSeq (R37 , ( AtomicFamily )) ) . R2 ) ] , ( C99 . ( R2 + 1 ) ) ] in D479)
proof
let R2 being Nat;
reconsider D496 = R2 as (Element of ( NAT )) by ORDINAL1:def 12;
set D497 = H21(D496);
reconsider D498 = D497 as  elementary  strict LTLnode over R46 by L3290;
set D499 = ( D496 + 1 );
set D500 = ( C99 . D496 );
set D501 = ( C99 . D499 );
set D502 = H21(D499);
set D503 = ( ( CastSeq (R37 , ( AtomicFamily )) ) . D496 );
set D504 = [ [ D500 , D503 ] , D501 ];
reconsider D505 = D502 as  elementary  strict LTLnode over R46 by L3290;
L3331: [ D500 , D503 ] in [: D478 , ( AtomicFamily ) :] by ZFMISC_1:87;
L3332: [ [ D500 , D503 ] , D501 ] in [: [: D478 , ( AtomicFamily ) :] , D478 :] by L3331 , ZFMISC_1:87;
L3333: D504 is (Element of [: D478 , ( AtomicFamily ) , D478 :]) by L3332 , ZFMISC_1:def 3;
reconsider D506 = D501 as  elementary  strict LTLnode over R46 by L3290;
reconsider D507 = D500 as  elementary  strict LTLnode over R46 by L3290;
L3334: (D505 is_next_of D498 & D503 in ( Label_ D505 )) by L3299 , L3306;
L3335: (D498 = D507 & D505 = D506) by L107;
thus L3336: thesis by L3335 , L3333 , L3334;
end;
L3337: (for R2 being Nat holds (for R26 being LTL-formula holds ((R26 in (the LTLold of H21(( R2 + 1 ))) & R26 is  Until & ( Shift (R37 , R2) ) |= ( the_right_argument_of R26 )) implies ( the_right_argument_of R26 ) in (the LTLold of H21(( R2 + 1 ))))))
proof
let R2 being Nat;
let R26 being LTL-formula;
set D508 = ( R2 + 1 );
L3338: H21(D508) = ( CastNode (( ( chosen_run (R37 , R46 , D482) ) . D508 ) , R46) ) by L3296;
thus L3339: thesis by L3338 , L3285 , L3184;
end;
L3340: (for B151 being set holds (B151 in D481 implies { B152 where B152 is (Element of ( NAT )) : ( C99 . B152 ) in B151 } is  infinite  infinite  infinite  infinite set))
proof
let C103 being set;
set D509 = { B153 where B153 is (Element of ( NAT )) : ( C99 . B153 ) in C103 };
assume L3341: C103 in D481;
consider C104 being (Element of ( bool D478 )) such that L3342: C103 = C104 and L3343: (ex R22 being LTL-formula st (R22 is_subformula_of R46 & R22 is  Until & C104 = ( FinalS_LTL (R22 , R46) ))) by L3341;
consider R22 being LTL-formula such that L3344: R22 is_subformula_of R46 and L3345: R22 is  Until and L3346: C104 = ( FinalS_LTL (R22 , R46) ) by L3343;
set D510 = ( the_right_argument_of R22 );
set D511 = ( the_left_argument_of R22 );
L3347: R22 = ( D511 'U' D510 ) by L3345 , MODELC_2:8;
L3348:
now
assume L3349: (not D509 is  infinite  infinite  infinite  infinite set);
consider R19 being FinSequence such that L3350: D509 = ( rng R19 ) by L3349 , FINSEQ_1:52;
L3351: (ex R4 being Nat st (for R1 being Nat holds (R4 <= R1 implies (not R1 in D509))))
proof
L3352: (( len R19 ) = ( 0 ) or ( 0 ) < ( ( 0 ) + ( len R19 ) ));
L3353:
now
per cases  by L3352 , NAT_1:19;
suppose L3354: 1 <= ( len R19 );

set D512 = ( len R19 );
L3355: D509 c= ( REAL )
proof
let R10 being set;
assume L3356: R10 in D509;
L3357: (ex B154 being (Element of ( NAT )) st (R10 = B154 & ( C99 . B154 ) in C103)) by L3356;
thus L3358: thesis by L3357;
end;
reconsider D513 = R19 as (FinSequence of ( REAL )) by L3355 , L3350 , FINSEQ_1:def 4;
set D514 = ( max D513 );
set D515 = [/ D514 \];
set D516 = ( D515 + 1 );
L3359: ( 0 ) <= D514
proof
set D517 = ( D513 . D512 );
L3360: D512 in ( Seg ( len D513 ) ) by L3354 , FINSEQ_1:1;
L3361: D512 in ( dom D513 ) by L3360 , FINSEQ_1:def 3;
L3362: D517 in ( rng D513 ) by L3361 , FUNCT_1:3;
L3363: (ex B155 being (Element of ( NAT )) st (B155 = D517 & ( C99 . B155 ) in C103)) by L3362 , L3350;
thus L3364: thesis by L3363 , L3354 , RFINSEQ2:1;
end;
reconsider D518 = D515 as Nat by L3359 , INT_1:53;
L3365: ( D518 + 1 ) is Nat;
reconsider D519 = D516 as Nat by L3365;
L3366: (for R1 being Nat holds (D519 <= R1 implies (not R1 in D509)))
proof
let R1 being Nat;
assume L3367: D519 <= R1;
L3368:
now
assume L3369: R1 in D509;
consider C105 being set such that L3370: C105 in ( dom D513 ) and L3371: R1 = ( D513 . C105 ) by L3369 , L3350 , FUNCT_1:def 3;
reconsider D520 = C105 as (Element of ( NAT )) by L3370;
L3372: D520 in ( Seg D512 ) by L3370 , FINSEQ_1:def 3;
L3373: (1 <= D520 & D520 <= D512) by L3372 , FINSEQ_1:1;
L3374: R1 <= D514 by L3373 , L3371 , RFINSEQ2:1;
thus L3375: contradiction by L3374 , L3367 , INT_1:32 , XXREAL_0:2;
end;
thus L3376: thesis by L3368;
end;
thus L3377: thesis by L3366;
end;
suppose L3378: ( len R19 ) = ( 0 );

L3379: R19 = ( {} ) by L3378;
L3380: (for R1 being Nat holds (( 0 ) <= R1 implies (not R1 in D509))) by L3379 , L3350;
thus L3381: thesis by L3380;
end;
end;
thus L3383: thesis by L3353;
end;
consider R4 being Nat such that L3384: (for R1 being Nat holds (R4 <= R1 implies (not R1 in D509))) by L3351;
L3385: (for R1 being Nat holds (R4 <= R1 implies (R22 in (the LTLold of H21(R1)) & (not D510 in (the LTLold of H21(R1))))))
proof
let R1 being Nat;
assume L3386: R4 <= R1;
L3387: (not R1 in D509) by L3386 , L3384;
reconsider D521 = R1 as (Element of ( NAT )) by ORDINAL1:def 12;
set D522 = ( C99 . D521 );
reconsider D523 = D522 as  elementary  strict LTLnode over R46 by L3290;
L3388:
now
assume L3389: (not (R22 in (the LTLold of ( CastNode (D523 , R46) )) & (not D510 in (the LTLold of ( CastNode (D523 , R46) )))));
L3390: D523 in C103 by L3389 , L3342 , L3346;
thus L3391: contradiction by L3390 , L3387;
end;
thus L3392: thesis by L3388;
end;
set D524 = ( Shift (R37 , R4) );
set D525 = ( R4 + 1 );
L3393: D524 |= ( * H21(D525) ) by L3299;
L3394: R4 <= D525 by NAT_1:11;
L3395: R22 in (the LTLold of H21(D525)) by L3394 , L3385;
L3396: R22 in ( * H21(D525) ) by L3395 , L1;
L3397: D524 |= R22 by L3396 , L3393 , MODELC_2:def 64;
consider R7 being Nat such that L3398: (for B156 being Nat holds (B156 < R7 implies ( Shift (D524 , B156) ) |= D511)) and L3399: ( Shift (D524 , R7) ) |= D510 by L3397 , L3347 , MODELC_2:68;
set D526 = ( R4 + R7 );
set D527 = ( D526 + 1 );
L3400: D527 = ( R4 + ( R7 + 1 ) );
L3401: R4 <= D527 by L3400 , NAT_1:11;
L3402: (R22 in (the LTLold of H21(D527)) & (not D510 in (the LTLold of H21(D527)))) by L3401 , L3385;
L3403: ( Shift (R37 , D526) ) |= D510 by L3399 , MODELC_2:80;
thus L3404: contradiction by L3403 , L3337 , L3345 , L3402;
end;
thus L3405: thesis by L3348;
end;
L3406: ( C99 . ( 0 ) ) = ( ( chosen_run (R37 , R46 , D482) ) . ( 0 ) ) by L3296
.= ( init R46 ) by L3071;
L3407: ( C99 . ( 0 ) ) in D480 by L3406 , TARSKI:def 1;
thus L3408: thesis by L3407 , L3330 , L3340;
end;
thus L3409: thesis by L3286 , L2701;
end;
theorem
L3410: (for R37 being (Element of ( Inf_seq ( AtomicFamily ) )) holds (for R46 being  neg-inner-most LTL-formula holds (R37 is-accepted-by ( BAutomaton R46 ) iff R37 |= R46))) by L2741 , L3284;
