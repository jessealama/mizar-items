:: Equivalence of Epsilon, Nondeterministic [Finite] Automata and Deterministic
:: [Finite] Automata
::  by Micha{\l} Trybulec
::
:: Received May 25, 2009
:: Copyright (c) 2009-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, XBOOLE_0, SUBSET_1, AFINSQ_1, NAT_1, REWRITE3, XXREAL_0,
      ARYTM_3, CARD_1, FINSEQ_1, ORDINAL4, RELAT_1, FUNCT_1, FLANG_1, FSM_1,
      STRUCT_0, ZFMISC_1, TARSKI, FINSET_1, REWRITE2, PRELAMB, FSM_2, LANG1,
      REWRITE1, MCART_1, FSM_3;
 notations CARD_1, TARSKI, XBOOLE_0, ZFMISC_1,
      XTUPLE_0, XCMPLX_0, ORDINAL1, DOMAIN_1,
      FUNCT_1, RELSET_1, XXREAL_0, FINSET_1, AFINSQ_1, SUBSET_1, REWRITE1,
      FLANG_1, STRUCT_0, NUMBERS, MCART_1, FINSEQ_1, REWRITE3;
 constructors NAT_1, MEMBERED, REWRITE1, FLANG_1, XREAL_0, REWRITE3, RELSET_1,
      XTUPLE_0;
 registrations CARD_1, NAT_1, XREAL_0, XBOOLE_0, MEMBERED, XXREAL_0, STRUCT_0,
      SUBSET_1, REWRITE1, AFINSQ_1, RELAT_1, FINSET_1, FINSEQ_1, REWRITE3,
      FUNCT_1, RELSET_1, XTUPLE_0;
 requirements NUMERALS, REAL, BOOLE, SUBSET, ARITHM;
 definitions STRUCT_0, XTUPLE_0;
 theorems AFINSQ_1, CARD_1, FLANG_1, FUNCT_1, NAT_1, ORDINAL1, RELAT_1,
      RELSET_1, REWRITE1, STRUCT_0, SUBSET_1, TARSKI, XBOOLE_0, XBOOLE_1,
      XREAL_1, XXREAL_0, ZFMISC_1, FINSEQ_1, FINSEQ_3, FINSEQ_5, MCART_1,
      REWRITE3, XTUPLE_0;
 schemes FINSEQ_1, FRAENKEL, NAT_1, RELSET_1;

begin
theorem
L1: (for R16 being Nat holds (for R17 being Nat holds (for R18 being Nat holds (R16 >= ( R17 + R18 ) implies R16 >= R17))))
proof
let R16 being Nat;
let R17 being Nat;
let R18 being Nat;
assume L2: R16 >= ( R17 + R18 );
L3: ( R16 + R18 ) >= ( ( R17 + R18 ) + ( 0 ) ) by L2 , XREAL_1:7;
thus L4: thesis by L3 , XREAL_1:6;
end;
theorem
L5: (for B1 , B2 being FinSequence holds ((( B1 ^ B2 ) = B1 or ( B2 ^ B1 ) = B1) implies B2 = ( {} )))
proof
let C1 , C2 being FinSequence;
assume that
L6: (( C1 ^ C2 ) = C1 or ( C2 ^ C1 ) = C1);
per cases  by L6;
suppose L7: ( C1 ^ C2 ) = C1;

L8: ( len ( C1 ^ C2 ) ) = ( ( len C1 ) + ( len C2 ) ) by FINSEQ_1:22;
thus L9: thesis by L8 , L7;
end;
suppose L10: ( C2 ^ C1 ) = C1;

L11: ( len ( C2 ^ C1 ) ) = ( ( len C2 ) + ( len C1 ) ) by FINSEQ_1:22;
thus L12: thesis by L11 , L10;
end;
end;
theorem
L14: (for R17 being Nat holds (for B3 , B4 being FinSequence holds ((R17 in ( dom B3 ) & ( ( len B3 ) + 1 ) = ( len B4 )) implies ( R17 + 1 ) in ( dom B4 ))))
proof
let R17 being Nat;
let C3 , C4 being FinSequence;
assume that
L15: R17 in ( dom C3 )
and
L16: ( ( len C3 ) + 1 ) = ( len C4 );
L17: R17 <= ( len C3 ) by L15 , FINSEQ_3:25;
L18: (( 1 + ( 0 ) ) <= ( R17 + 1 ) & ( R17 + 1 ) <= ( ( len C3 ) + 1 )) by L17 , XREAL_1:7;
thus L19: thesis by L18 , L16 , FINSEQ_3:25;
end;
theorem
L20: (for R4 being non  empty set holds (for R6 being (Element of ( R4 ^omega )) holds (( len R6 ) = 1 implies (ex R5 being (Element of R4) st (<% R5 %> = R6 & R5 = ( R6 . ( 0 ) ))))))
proof
let R4 being non  empty set;
let R6 being (Element of ( R4 ^omega ));
assume L21: ( len R6 ) = 1;
L22: ( len R6 ) = ( ( 0 ) + 1 ) by L21;
consider R8 being (Element of ( R4 ^omega )), R5 being (Element of R4) such that L23: ( len R8 ) = ( 0 ) and L24: R6 = ( R8 ^ <% R5 %> ) by L22 , FLANG_1:7;
take R5;
L25: R8 = ( <%> R4 ) by L23;
L26: R6 = ( ( {} ) ^ <% R5 %> ) by L25 , L24;
L27: R6 = <% R5 %> by L26;
thus L28: thesis by L27 , AFINSQ_1:34;
end;
theorem
L29: (for R4 being non  empty set holds (for R6 being (Element of ( R4 ^omega )) holds (for R17 being Nat holds ((R17 <> ( 0 ) & ( len R6 ) <= ( R17 + 1 )) implies (ex R9 being (Element of ( R4 ^omega )) st (ex R10 being (Element of ( R4 ^omega )) st (( len R9 ) <= R17 & ( len R10 ) <= R17 & R6 = ( R9 ^ R10 ))))))))
proof
let R4 being non  empty set;
let R6 being (Element of ( R4 ^omega ));
let R17 being Nat;
assume that
L30: R17 <> ( 0 )
and
L31: ( len R6 ) <= ( R17 + 1 );
per cases ;
suppose L32: ( len R6 ) = ( R17 + 1 );

consider R9 being (Element of ( R4 ^omega )), R5 being (Element of R4) such that L33: ( len R9 ) = R17 and L34: R6 = ( R9 ^ <% R5 %> ) by L32 , FLANG_1:7;
reconsider D1 = <% R5 %> as (Element of ( R4 ^omega ));
take R9;
take D1;
thus L35: ( len R9 ) <= R17 by L33;
L36: ( ( 0 ) + 1 ) <= R17 by L30 , NAT_1:13;
thus L37: ( len D1 ) <= R17 by L36 , AFINSQ_1:34;
thus L38: R6 = ( R9 ^ D1 ) by L34;
end;
suppose L39: ( len R6 ) <> ( R17 + 1 );

reconsider D2 = ( <%> R4 ) as (Element of ( R4 ^omega ));
take R6;
take D2;
thus L40: ( len R6 ) <= R17 by L31 , L39 , NAT_1:8;
thus L41: ( len D2 ) <= R17;
thus L42: R6 = ( R6 ^ ( {} ) )
.= ( R6 ^ D2 );
end;
end;
theorem
L44: (for R1 being set holds (for R2 being set holds (for B5 , B6 being XFinSequence holds (( <% R1 %> ^ B5 ) = ( <% R2 %> ^ B6 ) implies (R1 = R2 & B5 = B6)))))
proof
let R1 being set;
let R2 being set;
let C5 , C6 being XFinSequence;
assume that
L45: ( <% R1 %> ^ C5 ) = ( <% R2 %> ^ C6 );
L46: ( ( <% R1 %> ^ C5 ) . ( 0 ) ) = R1 by AFINSQ_1:35;
L47: R1 = R2 by L46 , L45 , AFINSQ_1:35;
thus L48: thesis by L47 , L45 , AFINSQ_1:28;
end;
theorem
L49: (for R4 being non  empty set holds (for R6 being (Element of ( R4 ^omega )) holds (( len R6 ) > ( 0 ) implies (ex R5 being (Element of R4) st (ex R7 being (Element of ( R4 ^omega )) st R6 = ( <% R5 %> ^ R7 ))))))
proof
let R4 being non  empty set;
let R6 being (Element of ( R4 ^omega ));
assume L50: ( len R6 ) > ( 0 );
consider R17 being Nat such that L51: ( len R6 ) = ( R17 + 1 ) by L50 , NAT_1:6;
L52: (ex R7 being (Element of ( R4 ^omega )) st (ex R5 being (Element of R4) st (( len R7 ) = R17 & R6 = ( <% R5 %> ^ R7 )))) by L51 , FLANG_1:9;
thus L53: thesis by L52;
end;
registration
let R4 being non  empty set;
cluster ( Lex R4 ) -> non  empty;
coherence
proof
L54: (for R5 being (Element of R4) holds <% R5 %> in ( Lex R4 )) by FLANG_1:def 4;
thus L55: thesis by L54;
end;
end;
theorem
L57: (for R4 being non  empty set holds (not ( <%> R4 ) in ( Lex R4 )))
proof
let R4 being non  empty set;
assume L58: ( <%> R4 ) in ( Lex R4 );
L59: (ex R5 being (Element of R4) st (R5 in R4 & ( <%> R4 ) = <% R5 %>)) by L58 , FLANG_1:def 4;
thus L60: contradiction by L59;
end;
theorem
L61: (for R4 being non  empty set holds (for R6 being (Element of ( R4 ^omega )) holds (R6 in ( Lex R4 ) iff ( len R6 ) = 1)))
proof
let R4 being non  empty set;
let R6 being (Element of ( R4 ^omega ));
thus L62: (R6 in ( Lex R4 ) implies ( len R6 ) = 1)
proof
assume L63: R6 in ( Lex R4 );
L64: (ex R5 being (Element of R4) st (R5 in R4 & R6 = <% R5 %>)) by L63 , FLANG_1:def 4;
thus L65: thesis by L64 , AFINSQ_1:def 4;
end;

assume L66: ( len R6 ) = 1;
L67: (ex R5 being (Element of R4) st (<% R5 %> = R6 & R5 = ( R6 . ( 0 ) ))) by L66 , L20;
thus L68: thesis by L67 , FLANG_1:def 4;
end;
theorem
L69: (for R4 being non  empty set holds (for R6 being (Element of ( R4 ^omega )) holds (for R8 being (Element of ( R4 ^omega )) holds ((R6 <> R8 & R6 in ( Lex R4 ) & R8 in ( Lex R4 )) implies (not (ex R11 being (Element of ( R4 ^omega )) st (( R6 ^ R11 ) = R8 or ( R11 ^ R6 ) = R8)))))))
proof
let R4 being non  empty set;
let R6 being (Element of ( R4 ^omega ));
let R8 being (Element of ( R4 ^omega ));
assume that
L70: R6 <> R8
and
L71: R6 in ( Lex R4 )
and
L72: R8 in ( Lex R4 );
L73: ( len R6 ) = 1 by L71 , L61;
given R11 being (Element of ( R4 ^omega )) such that
L74: (( R6 ^ R11 ) = R8 or ( R11 ^ R6 ) = R8);

L75: ( len R8 ) = 1 by L72 , L61;
L76: (( R6 ^ ( {} ) ) = R6 & ( ( {} ) ^ R6 ) = R6);
per cases  by L74;
suppose L77: ( R6 ^ R11 ) = R8;

L78: ( len ( R6 ^ R11 ) ) = ( 1 + ( len R11 ) ) by L73 , AFINSQ_1:17;
L79: R11 = ( <%> R4 ) by L78 , L75 , L77;
thus L80: contradiction by L79 , L70 , L77 , L76;
end;
suppose L81: ( R11 ^ R6 ) = R8;

L82: ( len ( R11 ^ R6 ) ) = ( 1 + ( len R11 ) ) by L73 , AFINSQ_1:17;
L83: R11 = ( <%> R4 ) by L82 , L75 , L81;
thus L84: contradiction by L83 , L70 , L81 , L76;
end;
end;
theorem
L86: (for R4 being non  empty set holds (for B7 being transition-system over ( Lex R4 ) holds ((the Tran of B7) is Function implies B7 is  deterministic)))
proof
let R4 being non  empty set;
let C7 being transition-system over ( Lex R4 );
assume that
L87: (the Tran of C7) is Function;
L88:
now
let C8 being (Element of C7);
let R6 being (Element of ( R4 ^omega ));
let R8 being (Element of ( R4 ^omega ));
assume that
L89: R6 <> R8
and
L90: ([ C8 , R6 ] in ( dom (the Tran of C7) ) & [ C8 , R8 ] in ( dom (the Tran of C7) ));
L91: (R6 in ( Lex R4 ) & R8 in ( Lex R4 )) by L90 , ZFMISC_1:87;
thus L92: (not (ex R11 being (Element of ( R4 ^omega )) st (( R6 ^ R11 ) = R8 or ( R8 ^ R11 ) = R6))) by L91 , L89 , L69;
end;
L93: (not ( <%> R4 ) in ( rng ( dom (the Tran of C7) ) )) by L57;
thus L94: thesis by L93 , L87 , L88 , REWRITE3:def 1;
end;
definition
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let R19 being non  empty transition-system over R15;
func _bool R19 ->  strict transition-system over ( Lex R4 ) means 
:L95: ((the carrier of it) = ( bool (the carrier of R19) ) & (for R20 being (Subset of R19) holds (for R11 being (Element of ( R4 ^omega )) holds (for R21 being (Subset of R19) holds ([ [ R20 , R11 ] , R21 ] in (the Tran of it) iff (( len R11 ) = 1 & R21 = ( R11 -succ_of (R20 , R19) )))))));
existence
proof
set D3 = ( bool (the carrier of R19) );
defpred S1[ set , set ] means (for B8 being (Element of D3) holds (for B9 being (Element of ( R4 ^omega )) holds ($1 = [ B8 , B9 ] implies (( len B9 ) = 1 & $2 = ( B9 -succ_of (B8 , R19) )))));
consider C9 being (Relation of [: D3 , ( Lex R4 ) :] , D3) such that L96: (for B10 being (Element of [: D3 , ( Lex R4 ) :]) holds (for B11 being (Element of D3) holds ([ B10 , B11 ] in C9 iff S1[ B10 , B11 ]))) from RELSET_1:sch 2;
set D4 = transition-system (# D3 , C9 #);
reconsider D5 = D4 as  strict transition-system over ( Lex R4 );
take D5;
thus L97: (the carrier of D5) = ( bool (the carrier of R19) );
let R20 being (Subset of R19);
let R11 being (Element of ( R4 ^omega ));
let R21 being (Subset of R19);
thus L98: ([ [ R20 , R11 ] , R21 ] in (the Tran of D5) implies (( len R11 ) = 1 & R21 = ( R11 -succ_of (R20 , R19) )))
proof
assume L99: [ [ R20 , R11 ] , R21 ] in (the Tran of D5);
reconsider D6 = [ R20 , R11 ] as (Element of [: D3 , ( Lex R4 ) :]) by L99 , ZFMISC_1:87;
L100: [ D6 , R21 ] in C9 by L99;
thus L101: thesis by L100 , L96;
end;

set D7 = [ R20 , R11 ];
assume that
L102: ( len R11 ) = 1
and
L103: R21 = ( R11 -succ_of (R20 , R19) );
L104:
now
let C10 being (Element of D3);
let C11 being (Element of ( R4 ^omega ));
assume that
L105: D7 = [ C10 , C11 ];
L106: C10 = R20 by L105 , XTUPLE_0:1;
thus L107: (( len C11 ) = 1 & R21 = ( C11 -succ_of (C10 , R19) )) by L106 , L102 , L103 , L105 , XTUPLE_0:1;
end;
L108: R11 in ( Lex R4 ) by L102 , L61;
reconsider D8 = D7 as (Element of [: D3 , ( Lex R4 ) :]) by L108 , ZFMISC_1:87;
L109: [ D8 , R21 ] in C9 by L96 , L104;
thus L110: thesis by L109;
end;
uniqueness
proof
set D9 = ( bool (the carrier of R19) );
let C12 , C13 being  strict transition-system over ( Lex R4 );
assume that
L111: (the carrier of C12) = D9
and
L112: (for R20 being (Subset of R19) holds (for R11 being (Element of ( R4 ^omega )) holds (for R21 being (Subset of R19) holds ([ [ R20 , R11 ] , R21 ] in (the Tran of C12) iff (( len R11 ) = 1 & R21 = ( R11 -succ_of (R20 , R19) ))))))
and
L113: (the carrier of C13) = D9
and
L114: (for R20 being (Subset of R19) holds (for R11 being (Element of ( R4 ^omega )) holds (for R21 being (Subset of R19) holds ([ [ R20 , R11 ] , R21 ] in (the Tran of C13) iff (( len R11 ) = 1 & R21 = ( R11 -succ_of (R20 , R19) ))))));
L115: (for R1 being set holds (R1 in (the Tran of C13) implies R1 in (the Tran of C12)))
proof
let R1 being set;
assume L116: R1 in (the Tran of C13);
consider C14 , C15 being set such that L117: R1 = [ C14 , C15 ] and L118: C14 in [: D9 , ( Lex R4 ) :] and L119: C15 in D9 by L116 , L113 , RELSET_1:2;
reconsider D10 = C15 as (Element of D9) by L119;
L120: [: D9 , ( Lex R4 ) :] c= [: D9 , ( Lex R4 ) :];
consider C16 , C17 being set such that L121: C14 = [ C16 , C17 ] and L122: C16 in D9 and L123: C17 in ( Lex R4 ) by L120 , L118 , RELSET_1:2;
reconsider D11 = C16 as (Element of D9) by L122;
reconsider D12 = C17 as (Element of ( Lex R4 )) by L123;
reconsider D13 = D12 as (Element of ( R4 ^omega ));
L124: ( len D13 ) = 1 by L61;
L125: D10 = ( D12 -succ_of (D11 , R19) ) by L114 , L116 , L117 , L121;
thus L126: thesis by L125 , L112 , L117 , L121 , L124;
end;
L127: (for R1 being set holds (R1 in (the Tran of C12) implies R1 in (the Tran of C13)))
proof
let R1 being set;
assume L128: R1 in (the Tran of C12);
consider C18 , C19 being set such that L129: R1 = [ C18 , C19 ] and L130: C18 in [: D9 , ( Lex R4 ) :] and L131: C19 in D9 by L128 , L111 , RELSET_1:2;
reconsider D14 = C19 as (Element of D9) by L131;
L132: [: D9 , ( Lex R4 ) :] c= [: D9 , ( Lex R4 ) :];
consider C20 , C21 being set such that L133: C18 = [ C20 , C21 ] and L134: C20 in D9 and L135: C21 in ( Lex R4 ) by L132 , L130 , RELSET_1:2;
reconsider D15 = C20 as (Element of D9) by L134;
reconsider D16 = C21 as (Element of ( Lex R4 )) by L135;
reconsider D17 = D16 as (Element of ( R4 ^omega ));
L136: ( len D17 ) = 1 by L61;
L137: D14 = ( D16 -succ_of (D15 , R19) ) by L112 , L128 , L129 , L133;
thus L138: thesis by L137 , L114 , L129 , L133 , L136;
end;
thus L139: thesis by L127 , L111 , L113 , L115 , TARSKI:1;
end;
end;
registration
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let R19 being non  empty transition-system over R15;
cluster ( _bool R19 ) -> non  empty  deterministic;
coherence
proof
set D18 = ( _bool R19 );
set D19 = (the carrier of D18);
set D20 = (the Tran of D18);
L141: (for B12 , B13 , B14 being set holds (([ B12 , B13 ] in D20 & [ B12 , B14 ] in D20) implies B13 = B14))
proof
let C22 , C23 , C24 being set;
assume that
L142: [ C22 , C23 ] in D20
and
L143: [ C22 , C24 ] in D20;
reconsider D21 = C22 as (Element of [: D19 , ( Lex R4 ) :]) by L142 , ZFMISC_1:87;
reconsider D22 = C23 , D23 = C24 as (Element of D19) by L142 , L143 , ZFMISC_1:87;
L144: (the carrier of D18) = ( bool (the carrier of R19) ) by L95;
consider C25 , C26 being set such that L145: C25 in D19 and L146: C26 in ( Lex R4 ) and L147: D21 = [ C25 , C26 ] by L144 , ZFMISC_1:def 2;
reconsider D24 = C25 as (Element of D19) by L145;
reconsider D25 = C26 as (Element of ( Lex R4 )) by L146;
reconsider D26 = D25 as (Element of ( R4 ^omega ));
reconsider D27 = D24 , D28 = D22 , D29 = D23 as (Subset of R19) by L95;
L148: (D28 = ( D26 -succ_of (D27 , R19) ) & D29 = ( D26 -succ_of (D27 , R19) )) by L142 , L143 , L147 , L95;
thus L149: thesis by L148;
end;
L150: (the Tran of D18) is Function by L141 , FUNCT_1:def 1;
L151: (the carrier of D18) = ( bool (the carrier of R19) ) by L95;
thus L152: thesis by L151 , L150 , L86;
end;
end;
registration
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let C27 being  finite non  empty transition-system over R15;
cluster ( _bool C27 ) ->  finite;
coherence
proof
L154: ( bool (the carrier of C27) ) is  finite;
thus L155: thesis by L154 , L95;
end;
end;
theorem
L157: (for R1 being set holds (for R2 being set holds (for R4 being non  empty set holds (for R5 being (Element of R4) holds (for R15 being (Subset of ( R4 ^omega )) holds (for R19 being non  empty transition-system over R15 holds (R1 , <% R5 %> ==>* R2 , ( <%> R4 ) , ( _bool R19 ) implies R1 , <% R5 %> ==>. R2 , ( <%> R4 ) , ( _bool R19 ))))))))
proof
let R1 being set;
let R2 being set;
let R4 being non  empty set;
let R5 being (Element of R4);
let R15 being (Subset of ( R4 ^omega ));
let R19 being non  empty transition-system over R15;
L158: (not ( <%> R4 ) in ( rng ( dom (the Tran of ( _bool R19 )) ) )) by REWRITE3:def 1;
thus L159: thesis by L158 , REWRITE3:92;
end;
theorem
L160: (for R3 being set holds (for R4 being non  empty set holds (for R11 being (Element of ( R4 ^omega )) holds (for R15 being (Subset of ( R4 ^omega )) holds (for R19 being non  empty transition-system over R15 holds (for R20 being (Subset of R19) holds (( len R11 ) = 1 implies (R3 = ( R11 -succ_of (R20 , R19) ) iff R20 , R11 ==>* R3 , ( _bool R19 )))))))))
proof
let R3 being set;
let R4 being non  empty set;
let R11 being (Element of ( R4 ^omega ));
let R15 being (Subset of ( R4 ^omega ));
let R19 being non  empty transition-system over R15;
let R20 being (Subset of R19);
assume L161: ( len R11 ) = 1;
thus L162: (R3 = ( R11 -succ_of (R20 , R19) ) implies R20 , R11 ==>* R3 , ( _bool R19 ))
proof
assume L163: R3 = ( R11 -succ_of (R20 , R19) );
L164: [ [ R20 , R11 ] , R3 ] in (the Tran of ( _bool R19 )) by L163 , L161 , L95;
L165: R20 , R11 -->. R3 , ( _bool R19 ) by L164 , REWRITE3:def 2;
L166: R20 , R11 ==>. R3 , ( <%> R4 ) , ( _bool R19 ) by L165 , REWRITE3:23;
L167: R20 , R11 ==>* R3 , ( <%> R4 ) , ( _bool R19 ) by L166 , REWRITE3:87;
thus L168: thesis by L167 , REWRITE3:def 7;
end;

assume L169: R20 , R11 ==>* R3 , ( _bool R19 );
L170: R20 , R11 ==>* R3 , ( <%> R4 ) , ( _bool R19 ) by L169 , REWRITE3:def 7;
L171: (ex R5 being (Element of R4) st (R11 = <% R5 %> & ( R11 . ( 0 ) ) = R5)) by L161 , L20;
L172: R20 , ( R11 ^ ( {} ) ) ==>. R3 , ( <%> R4 ) , ( _bool R19 ) by L171 , L170 , L157;
L173: R20 , R11 -->. R3 , ( _bool R19 ) by L172 , REWRITE3:24;
L174: R3 in ( _bool R19 ) by L173 , REWRITE3:15;
L175: R3 in (the carrier of ( _bool R19 )) by L174 , STRUCT_0:def 5;
reconsider D30 = R3 as (Subset of R19) by L175 , L95;
L176: [ [ R20 , R11 ] , D30 ] in (the Tran of ( _bool R19 )) by L173 , REWRITE3:def 2;
thus L177: thesis by L176 , L95;
end;
definition
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
struct (transition-system over R15) semiautomaton over R15(# carrier -> set , Tran -> (Relation of [: the carrier , R15 :] , the carrier) , InitS -> (Subset of the carrier) #);
end;
definition
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let C28 being semiautomaton over R15;
attr C28 is  deterministic
means
:L179: (( the transition-system of C28 ) is  deterministic & ( card (the InitS of C28) ) = 1);
end;
registration
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
cluster  strict non  empty  finite  deterministic for semiautomaton over R15;
existence
proof
set D31 = the non  empty  finite set;
reconsider D32 = ( {} ) as (Relation of [: D31 , R15 :] , D31) by RELSET_1:12;
set D33 = the (Element of D31);
reconsider D34 = { D33 } as (Subset of D31);
take D35 = semiautomaton (# D31 , D32 , D34 #);
thus L181: D35 is  strict;
thus L182: D35 is non  empty;
thus L183: (the carrier of D35) is  finite;
thus L184: ( the transition-system of D35 ) is  deterministic by RELAT_1:38 , REWRITE3:14;
thus L185: ( card (the InitS of D35) ) = 1 by CARD_1:30;
end;
end;
registration
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let R22 being non  empty semiautomaton over R15;
cluster ( the transition-system of R22 ) -> non  empty;
coherence;
end;
definition
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let R22 being non  empty semiautomaton over R15;
func _bool R22 ->  strict semiautomaton over ( Lex R4 ) means 
:L188: (( the transition-system of it ) = ( _bool ( the transition-system of R22 ) ) & (the InitS of it) = { ( ( <%> R4 ) -succ_of ((the InitS of R22) , R22) ) });
existence
proof
reconsider D36 = ( the transition-system of R22 ) as non  empty transition-system over R15;
set D37 = (the carrier of ( _bool D36 ));
reconsider D38 = { ( ( <%> R4 ) -succ_of ((the InitS of R22) , R22) ) } as (Subset of D37) by L95;
reconsider D39 = (the Tran of ( _bool D36 )) as (Relation of [: D37 , ( Lex R4 ) :] , D37);
set D40 = semiautomaton (# D37 , D39 , D38 #);
L189: ( card D38 ) = 1 by CARD_1:30;
reconsider D41 = D40 as  strict non  empty  deterministic semiautomaton over ( Lex R4 ) by L189 , L179;
take D41;
thus L190: thesis;
end;
uniqueness;
end;
registration
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let R22 being non  empty semiautomaton over R15;
cluster ( _bool R22 ) -> non  empty  deterministic;
coherence
proof
set D42 = ( _bool R22 );
L192: (the InitS of D42) = { ( ( <%> R4 ) -succ_of ((the InitS of R22) , R22) ) } by L188;
L193: ( card (the InitS of D42) ) = 1 by L192 , CARD_1:30;
L194: ( the transition-system of D42 ) = ( _bool ( the transition-system of R22 ) ) by L188;
thus L195: thesis by L194 , L193 , L179;
end;
end;
theorem
L197: (for R4 being non  empty set holds (for R15 being (Subset of ( R4 ^omega )) holds (for R22 being non  empty semiautomaton over R15 holds (the carrier of ( _bool R22 )) = ( bool (the carrier of R22) ))))
proof
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let R22 being non  empty semiautomaton over R15;
L198: ( the transition-system of ( _bool R22 ) ) = ( _bool ( the transition-system of R22 ) ) by L188;
thus L199: thesis by L198 , L95;
end;
registration
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let C29 being  finite non  empty semiautomaton over R15;
cluster ( _bool C29 ) ->  finite;
coherence
proof
L200: ( bool (the carrier of C29) ) is  finite;
thus L201: thesis by L200 , L197;
end;
end;
definition
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let R22 being non  empty semiautomaton over R15;
let C30 being (Subset of R22);
func left-Lang C30 -> (Subset of ( R4 ^omega )) equals 
{ R11 where R11 is (Element of ( R4 ^omega )) : C30 meets ( R11 -succ_of ((the InitS of R22) , R22) ) };
coherence
proof
defpred S2[ (Element of ( R4 ^omega )) ] means C30 meets ( $1 -succ_of ((the InitS of R22) , R22) );
L203: { R11 where R11 is (Element of ( R4 ^omega )) : S2[ R11 ] } c= ( R4 ^omega ) from FRAENKEL:sch 10;
thus L204: thesis by L203;
end;
end;
theorem
L206: (for R4 being non  empty set holds (for R11 being (Element of ( R4 ^omega )) holds (for R15 being (Subset of ( R4 ^omega )) holds (for R22 being non  empty semiautomaton over R15 holds (for B15 being (Subset of R22) holds (R11 in ( left-Lang B15 ) iff B15 meets ( R11 -succ_of ((the InitS of R22) , R22) )))))))
proof
let R4 being non  empty set;
let R11 being (Element of ( R4 ^omega ));
let R15 being (Subset of ( R4 ^omega ));
let R22 being non  empty semiautomaton over R15;
let C31 being (Subset of R22);
thus L207: (R11 in ( left-Lang C31 ) implies C31 meets ( R11 -succ_of ((the InitS of R22) , R22) ))
proof
assume L208: R11 in ( left-Lang C31 );
L209: (ex R12 being (Element of ( R4 ^omega )) st (R12 = R11 & C31 meets ( R12 -succ_of ((the InitS of R22) , R22) ))) by L208;
thus L210: thesis by L209;
end;

thus L211: thesis;
end;
definition
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
struct (semiautomaton over R15) automaton over R15(# carrier -> set , Tran -> (Relation of [: the carrier , R15 :] , the carrier) , InitS -> (Subset of the carrier) , FinalS -> (Subset of the carrier) #);
end;
definition
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let C32 being automaton over R15;
attr C32 is  deterministic
means
:L213: ( the semiautomaton of C32 ) is  deterministic;
end;
registration
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
cluster  strict non  empty  finite  deterministic for automaton over R15;
existence
proof
set D43 = the non  empty  finite set;
reconsider D44 = ( {} ) as (Relation of [: D43 , R15 :] , D43) by RELSET_1:12;
set D45 = the (Element of D43);
reconsider D46 = { D45 } as (Subset of D43);
take D47 = automaton (# D43 , D44 , D46 , D46 #);
thus L215: D47 is  strict;
thus L216: D47 is non  empty;
thus L217: (the carrier of D47) is  finite;
L218: (( the transition-system of D47 ) is  deterministic & ( card (the InitS of D47) ) = 1) by CARD_1:30 , RELAT_1:38 , REWRITE3:14;
L219: ( the semiautomaton of D47 ) is  deterministic by L218 , L179;
thus L220: D47 is  deterministic by L219 , L213;
end;
end;
registration
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let R23 being non  empty automaton over R15;
cluster ( the transition-system of R23 ) -> non  empty;
coherence;
cluster ( the semiautomaton of R23 ) -> non  empty;
coherence;
end;
definition
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let R23 being non  empty automaton over R15;
func _bool R23 ->  strict automaton over ( Lex R4 ) means 
:L223: (( the semiautomaton of it ) = ( _bool ( the semiautomaton of R23 ) ) & (the FinalS of it) = { B16 where B16 is (Element of it) : B16 meets (the FinalS of R23) });
existence
proof
reconsider D48 = ( the semiautomaton of R23 ) as non  empty semiautomaton over R15;
set D49 = (the carrier of ( _bool D48 ));
reconsider D50 = (the Tran of ( _bool D48 )) as (Relation of [: D49 , ( Lex R4 ) :] , D49);
set D51 = (the InitS of ( _bool D48 ));
L224: { B17 where B17 is (Element of ( _bool D48 )) : B17 meets (the FinalS of R23) } is (Subset of D49)
proof
defpred S3[ set ] means $1 meets (the FinalS of R23);
L225: { B18 where B18 is (Element of ( _bool D48 )) : S3[ B18 ] } c= (the carrier of ( _bool D48 )) from FRAENKEL:sch 10;
thus L226: thesis by L225;
end;
reconsider D52 = { B19 where B19 is (Element of ( _bool D48 )) : B19 meets (the FinalS of R23) } as (Subset of D49) by L224;
set D53 = automaton (# D49 , D50 , D51 , D52 #);
reconsider D54 = D53 as  strict non  empty  deterministic automaton over ( Lex R4 ) by L213;
take D54;
thus L227: thesis;
end;
uniqueness;
end;
registration
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let R23 being non  empty automaton over R15;
cluster ( _bool R23 ) -> non  empty  deterministic;
coherence
proof
set D55 = ( _bool R23 );
L229: ( the semiautomaton of D55 ) = ( _bool ( the semiautomaton of R23 ) ) by L223;
thus L230: thesis by L229 , L213;
end;
end;
theorem
L232: (for R4 being non  empty set holds (for R15 being (Subset of ( R4 ^omega )) holds (for R23 being non  empty automaton over R15 holds (the carrier of ( _bool R23 )) = ( bool (the carrier of R23) ))))
proof
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let R23 being non  empty automaton over R15;
L233: ( the semiautomaton of ( _bool R23 ) ) = ( _bool ( the semiautomaton of R23 ) ) by L223;
thus L234: thesis by L233 , L197;
end;
registration
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let C33 being  finite non  empty automaton over R15;
cluster ( _bool C33 ) ->  finite;
coherence
proof
L235: ( bool (the carrier of C33) ) is  finite;
thus L236: thesis by L235 , L232;
end;
end;
definition
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let R23 being non  empty automaton over R15;
let C34 being (Subset of R23);
func right-Lang C34 -> (Subset of ( R4 ^omega )) equals 
{ R11 where R11 is (Element of ( R4 ^omega )) : ( R11 -succ_of (C34 , R23) ) meets (the FinalS of R23) };
coherence
proof
defpred S4[ (Element of ( R4 ^omega )) ] means ( $1 -succ_of (C34 , R23) ) meets (the FinalS of R23);
L238: { R11 where R11 is (Element of ( R4 ^omega )) : S4[ R11 ] } c= ( R4 ^omega ) from FRAENKEL:sch 10;
thus L239: thesis by L238;
end;
end;
theorem
L241: (for R4 being non  empty set holds (for R11 being (Element of ( R4 ^omega )) holds (for R15 being (Subset of ( R4 ^omega )) holds (for R23 being non  empty automaton over R15 holds (for B20 being (Subset of R23) holds (R11 in ( right-Lang B20 ) iff ( R11 -succ_of (B20 , R23) ) meets (the FinalS of R23)))))))
proof
let R4 being non  empty set;
let R11 being (Element of ( R4 ^omega ));
let R15 being (Subset of ( R4 ^omega ));
let R23 being non  empty automaton over R15;
let C35 being (Subset of R23);
thus L242: (R11 in ( right-Lang C35 ) implies ( R11 -succ_of (C35 , R23) ) meets (the FinalS of R23))
proof
assume L243: R11 in ( right-Lang C35 );
L244: (ex R12 being (Element of ( R4 ^omega )) st (R11 = R12 & ( R12 -succ_of (C35 , R23) ) meets (the FinalS of R23))) by L243;
thus L245: thesis by L244;
end;

thus L246: thesis;
end;
definition
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let R23 being non  empty automaton over R15;
func Lang R23 -> (Subset of ( R4 ^omega )) equals 
{ R6 where R6 is (Element of ( R4 ^omega )) : (ex R24 being (Element of R23) st (ex R25 being (Element of R23) st (R24 in (the InitS of R23) & R25 in (the FinalS of R23) & R24 , R6 ==>* R25 , R23))) };
coherence
proof
defpred S5[ (Element of ( R4 ^omega )) ] means (ex R24 being (Element of R23) st (ex R25 being (Element of R23) st (R24 in (the InitS of R23) & R25 in (the FinalS of R23) & R24 , $1 ==>* R25 , R23)));
L247: { R11 where R11 is (Element of ( R4 ^omega )) : S5[ R11 ] } c= ( R4 ^omega ) from FRAENKEL:sch 10;
thus L248: thesis by L247;
end;
end;
theorem
L250: (for R4 being non  empty set holds (for R11 being (Element of ( R4 ^omega )) holds (for R15 being (Subset of ( R4 ^omega )) holds (for R23 being non  empty automaton over R15 holds (R11 in ( Lang R23 ) iff (ex R24 being (Element of R23) st (ex R25 being (Element of R23) st (R24 in (the InitS of R23) & R25 in (the FinalS of R23) & R24 , R11 ==>* R25 , R23))))))))
proof
let R4 being non  empty set;
let R11 being (Element of ( R4 ^omega ));
let R15 being (Subset of ( R4 ^omega ));
let R23 being non  empty automaton over R15;
thus L251: (R11 in ( Lang R23 ) implies (ex R24 being (Element of R23) st (ex R25 being (Element of R23) st (R24 in (the InitS of R23) & R25 in (the FinalS of R23) & R24 , R11 ==>* R25 , R23))))
proof
assume L252: R11 in ( Lang R23 );
L253: (ex R6 being (Element of ( R4 ^omega )) st (R11 = R6 & (ex R24 being (Element of R23) st (ex R25 being (Element of R23) st (R24 in (the InitS of R23) & R25 in (the FinalS of R23) & R24 , R6 ==>* R25 , R23))))) by L252;
thus L254: thesis by L253;
end;

thus L255: thesis;
end;
theorem
L256: (for R4 being non  empty set holds (for R11 being (Element of ( R4 ^omega )) holds (for R15 being (Subset of ( R4 ^omega )) holds (for R23 being non  empty automaton over R15 holds (R11 in ( Lang R23 ) iff ( R11 -succ_of ((the InitS of R23) , R23) ) meets (the FinalS of R23))))))
proof
let R4 being non  empty set;
let R11 being (Element of ( R4 ^omega ));
let R15 being (Subset of ( R4 ^omega ));
let R23 being non  empty automaton over R15;
thus L257: (R11 in ( Lang R23 ) implies ( R11 -succ_of ((the InitS of R23) , R23) ) meets (the FinalS of R23))
proof
assume L258: R11 in ( Lang R23 );
consider R24 being (Element of R23), R25 being (Element of R23) such that L259: R24 in (the InitS of R23) and L260: R25 in (the FinalS of R23) and L261: R24 , R11 ==>* R25 , R23 by L258 , L250;
L262: R25 in ( R11 -succ_of ((the InitS of R23) , R23) ) by L259 , L261 , REWRITE3:103;
thus L263: thesis by L262 , L260 , XBOOLE_0:3;
end;

assume L264: ( R11 -succ_of ((the InitS of R23) , R23) ) meets (the FinalS of R23);
consider R1 being set such that L265: R1 in ( R11 -succ_of ((the InitS of R23) , R23) ) and L266: R1 in (the FinalS of R23) by L264 , XBOOLE_0:3;
reconsider D56 = R1 as (Element of R23) by L265;
L267: (ex R24 being (Element of R23) st (R24 in (the InitS of R23) & R24 , R11 ==>* D56 , R23)) by L265 , REWRITE3:103;
thus L268: thesis by L267 , L266;
end;
theorem
L269: (for R4 being non  empty set holds (for R15 being (Subset of ( R4 ^omega )) holds (for R23 being non  empty automaton over R15 holds ( Lang R23 ) = ( left-Lang (the FinalS of R23) ))))
proof
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let R23 being non  empty automaton over R15;
L270: (for R11 being (Element of ( R4 ^omega )) holds (R11 in ( Lang R23 ) implies R11 in ( left-Lang (the FinalS of R23) )))
proof
let R11 being (Element of ( R4 ^omega ));
assume L271: R11 in ( Lang R23 );
L272: ( R11 -succ_of ((the InitS of R23) , R23) ) meets (the FinalS of R23) by L271 , L256;
thus L273: thesis by L272;
end;
L274: (for R11 being (Element of ( R4 ^omega )) holds (R11 in ( left-Lang (the FinalS of R23) ) implies R11 in ( Lang R23 )))
proof
let R11 being (Element of ( R4 ^omega ));
assume L275: R11 in ( left-Lang (the FinalS of R23) );
L276: (the FinalS of R23) meets ( R11 -succ_of ((the InitS of R23) , R23) ) by L275 , L206;
thus L277: thesis by L276 , L256;
end;
thus L278: thesis by L274 , L270 , SUBSET_1:3;
end;
theorem
L279: (for R4 being non  empty set holds (for R15 being (Subset of ( R4 ^omega )) holds (for R23 being non  empty automaton over R15 holds ( Lang R23 ) = ( right-Lang (the InitS of R23) ))))
proof
let R4 being non  empty set;
let R15 being (Subset of ( R4 ^omega ));
let R23 being non  empty automaton over R15;
L280: (for R11 being (Element of ( R4 ^omega )) holds (R11 in ( Lang R23 ) implies R11 in ( right-Lang (the InitS of R23) )))
proof
let R11 being (Element of ( R4 ^omega ));
assume L281: R11 in ( Lang R23 );
L282: ( R11 -succ_of ((the InitS of R23) , R23) ) meets (the FinalS of R23) by L281 , L256;
thus L283: thesis by L282;
end;
L284: (for R11 being (Element of ( R4 ^omega )) holds (R11 in ( right-Lang (the InitS of R23) ) implies R11 in ( Lang R23 )))
proof
let R11 being (Element of ( R4 ^omega ));
assume L285: R11 in ( right-Lang (the InitS of R23) );
L286: ( R11 -succ_of ((the InitS of R23) , R23) ) meets (the FinalS of R23) by L285 , L241;
thus L287: thesis by L286 , L256;
end;
thus L288: thesis by L284 , L280 , SUBSET_1:3;
end;
theorem
L289: (for R4 being non  empty set holds (for R5 being (Element of R4) holds (for R6 being (Element of ( R4 ^omega )) holds (for R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds (for B21 being (RedSequence of ( ==>.-relation R26 )) holds ((( ( B21 . 1 ) `2 ) = ( <% R5 %> ^ R6 ) & ( ( B21 . ( len B21 ) ) `2 ) = ( <%> R4 )) implies (( ( B21 . 2 ) `2 ) = ( <% R5 %> ^ R6 ) or ( ( B21 . 2 ) `2 ) = R6)))))))
proof
let R4 being non  empty set;
let R5 being (Element of R4);
let R6 being (Element of ( R4 ^omega ));
let R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
let C36 being (RedSequence of ( ==>.-relation R26 ));
assume that
L290: ( ( C36 . 1 ) `2 ) = ( <% R5 %> ^ R6 )
and
L291: ( ( C36 . ( len C36 ) ) `2 ) = ( <%> R4 );
L292: ( ( C36 . 1 ) `2 ) <> ( ( C36 . ( len C36 ) ) `2 ) by L290 , L291 , AFINSQ_1:30;
L293: ( len C36 ) >= ( 1 + 1 ) by L292 , NAT_1:8 , NAT_1:25;
L294: (( rng C36 ) <> ( {} ) & ( 1 + 1 ) in ( dom C36 )) by L293 , FINSEQ_3:25;
L295: [ ( C36 . 1 ) , ( C36 . 2 ) ] in ( ==>.-relation R26 ) by L294 , FINSEQ_3:32 , REWRITE1:def 2;
consider C37 being (Element of R26), C38 being (Element of ( R4 ^omega )), C39 being (Element of R26), R11 being (Element of ( R4 ^omega )) such that L296: ( C36 . 1 ) = [ C37 , C38 ] and L297: ( C36 . 2 ) = [ C39 , R11 ] by L295 , REWRITE3:31;
L298: C37 , C38 ==>. C39 , R11 , R26 by L295 , L296 , L297 , REWRITE3:def 4;
consider R7 being (Element of ( R4 ^omega )) such that L299: C37 , R7 -->. C39 , R26 and L300: C38 = ( R7 ^ R11 ) by L298 , REWRITE3:22;
L301: R7 in ( ( Lex R4 ) \/ { ( <%> R4 ) } ) by L299 , REWRITE3:15;
per cases  by L301 , XBOOLE_0:def 3;
suppose L302: R7 in ( Lex R4 );

L303: ( len R7 ) = 1 by L302 , L61;
consider C40 being (Element of R4) such that L304: R7 = <% C40 %> and L305: ( R7 . ( 0 ) ) = C40 by L303 , L20;
L306: ( ( C36 . 1 ) `2 ) = ( <% C40 %> ^ R11 ) by L296 , L300 , L304 , MCART_1:7;
L307: R6 = R11 by L306 , L290 , L44;
thus L308: thesis by L307 , L297 , MCART_1:7;
end;
suppose L309: R7 in { ( <%> R4 ) };

L310: R7 = ( <%> R4 ) by L309 , TARSKI:def 1;
L311: ( ( {} ) ^ R11 ) = R11;
L312: (C38 = ( ( C36 . 1 ) `2 ) & R11 = ( ( C36 . 2 ) `2 )) by L296 , L297 , MCART_1:7;
thus L313: thesis by L312 , L290 , L300 , L310 , L311;
end;
end;
theorem
L315: (for R4 being non  empty set holds (for R6 being (Element of ( R4 ^omega )) holds (for R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds (for B22 being (RedSequence of ( ==>.-relation R26 )) holds ((( ( B22 . 1 ) `2 ) = R6 & ( ( B22 . ( len B22 ) ) `2 ) = ( <%> R4 )) implies ( len B22 ) > ( len R6 ))))))
proof
let R4 being non  empty set;
let R6 being (Element of ( R4 ^omega ));
let R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
defpred S6[ Nat ] means (for B23 being (RedSequence of ( ==>.-relation R26 )) holds (for R6 being (Element of ( R4 ^omega )) holds ((( len B23 ) = $1 & ( ( B23 . 1 ) `2 ) = R6 & ( ( B23 . ( len B23 ) ) `2 ) = ( <%> R4 )) implies ( len B23 ) > ( len R6 ))));
L316:
now
let R17 being Nat;
assume L317: S6[ R17 ];
L318:
now
let C41 being (RedSequence of ( ==>.-relation R26 ));
let R6 being (Element of ( R4 ^omega ));
assume that
L319: ( len C41 ) = ( R17 + 1 )
and
L320: ( ( C41 . 1 ) `2 ) = R6
and
L321: ( ( C41 . ( len C41 ) ) `2 ) = ( <%> R4 );
per cases ;
suppose L322: ( len R6 ) = ( 0 );

thus L323: ( len C41 ) > ( len R6 ) by L322;
end;
suppose L324: ( len R6 ) > ( 0 );

consider R5 being (Element of R4), R7 being (Element of ( R4 ^omega )) such that L325: R6 = ( <% R5 %> ^ R7 ) by L324 , L49;
L326: ( len C41 ) <> 1 by L320 , L321 , L324;
consider C42 being (RedSequence of ( ==>.-relation R26 )) such that L327: ( <* ( C41 . 1 ) *> ^ C42 ) = C41 and L328: ( ( len C42 ) + 1 ) = ( len C41 ) by L326 , NAT_1:25 , REWRITE3:5;
L329: ( ( len C42 ) + ( 0 ) ) < ( R17 + 1 ) by L319 , L328 , XREAL_1:6;
L330: ( len C42 ) >= ( ( 0 ) + 1 ) by NAT_1:8;
L331: ( len C42 ) in ( dom C42 ) by L330 , FINSEQ_3:25;
L332: ( ( C42 . ( len C42 ) ) `2 ) = ( <%> R4 ) by L331 , L321 , L327 , L328 , REWRITE3:1;
L333: 1 in ( dom C42 ) by L330 , FINSEQ_3:25;
L334: ( ( <* ( C41 . 1 ) *> ^ C42 ) . ( 1 + 1 ) ) = ( C42 . 1 ) by L333 , REWRITE3:1;
per cases  by L320 , L321 , L325 , L289;
suppose L335: ( ( C41 . 2 ) `2 ) = ( <% R5 %> ^ R7 );

thus L336: ( len C41 ) > ( len R6 ) by L335 , L317 , L319 , L325 , L327 , L328 , L329 , L334 , L332 , XXREAL_0:2;
end;
suppose L337: ( ( C41 . 2 ) `2 ) = R7;

L338: ( len C42 ) > ( len R7 ) by L337 , L317 , L319 , L327 , L328 , L334 , L332;
L339: ( len C41 ) > ( 1 + ( len R7 ) ) by L338 , L328 , XREAL_1:6;
L340: ( len C41 ) > ( ( len <% R5 %> ) + ( len R7 ) ) by L339 , AFINSQ_1:def 4;
thus L341: ( len C41 ) > ( len R6 ) by L340 , L325 , AFINSQ_1:17;
end;
end;
end;
thus L344: S6[ ( R17 + 1 ) ] by L318;
end;
L345: S6[ ( 0 ) ];
L346: (for R17 being Nat holds S6[ R17 ]) from NAT_1:sch 2(L345 , L316);
thus L347: thesis by L346;
end;
theorem
L348: (for R4 being non  empty set holds (for R6 being (Element of ( R4 ^omega )) holds (for R8 being (Element of ( R4 ^omega )) holds (for R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds (for B24 being (RedSequence of ( ==>.-relation R26 )) holds ((( ( B24 . 1 ) `2 ) = ( R6 ^ R8 ) & ( ( B24 . ( len B24 ) ) `2 ) = ( <%> R4 )) implies (ex R18 being Nat st (R18 in ( dom B24 ) & ( ( B24 . R18 ) `2 ) = R8))))))))
proof
let R4 being non  empty set;
let R6 being (Element of ( R4 ^omega ));
let R8 being (Element of ( R4 ^omega ));
let R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
defpred S7[ Nat ] means (for B25 being (RedSequence of ( ==>.-relation R26 )) holds (for R6 being (Element of ( R4 ^omega )) holds ((( len B25 ) = $1 & ( ( B25 . 1 ) `2 ) = ( R6 ^ R8 ) & ( ( B25 . ( len B25 ) ) `2 ) = ( <%> R4 )) implies (ex R18 being Nat st (R18 in ( dom B25 ) & ( ( B25 . R18 ) `2 ) = R8)))));
L349:
now
let R16 being Nat;
assume L350: S7[ R16 ];
thus L351: S7[ ( R16 + 1 ) ]
proof
let C43 being (RedSequence of ( ==>.-relation R26 ));
let R6 being (Element of ( R4 ^omega ));
assume that
L352: ( len C43 ) = ( R16 + 1 )
and
L353: ( ( C43 . 1 ) `2 ) = ( R6 ^ R8 )
and
L354: ( ( C43 . ( len C43 ) ) `2 ) = ( <%> R4 );
per cases ;
suppose L355: ( len R6 ) = ( 0 );

set D57 = 1;
take D57;
L356: ( rng C43 ) <> ( {} );
thus L357: D57 in ( dom C43 ) by L356 , FINSEQ_3:32;
L358: ( ( {} ) ^ R8 ) = R8;
L359: R6 = ( {} ) by L355;
thus L360: ( ( C43 . D57 ) `2 ) = R8 by L359 , L353 , L358;
end;
suppose L361: ( len R6 ) > ( 0 );

consider R5 being (Element of R4), R7 being (Element of ( R4 ^omega )) such that L362: R6 = ( <% R5 %> ^ R7 ) by L361 , L49;
L363: ( len R6 ) >= ( ( 0 ) + 1 ) by L361 , NAT_1:13;
L364: ( ( len R6 ) + ( len R8 ) ) >= ( 1 + ( len R8 ) ) by L363 , XREAL_1:6;
L365: ( len ( R6 ^ R8 ) ) >= ( 1 + ( len R8 ) ) by L364 , AFINSQ_1:17;
L366: ( len ( R6 ^ R8 ) ) >= 1 by L365 , L1;
L367: ( ( len C43 ) + ( len ( R6 ^ R8 ) ) ) > ( ( len ( R6 ^ R8 ) ) + 1 ) by L366 , L353 , L354 , L315 , XREAL_1:8;
L368: ( len C43 ) > 1 by L367 , XREAL_1:6;
consider C44 being (RedSequence of ( ==>.-relation R26 )) such that L369: ( ( len C44 ) + 1 ) = ( len C43 ) and L370: (for R17 being Nat holds (R17 in ( dom C44 ) implies ( C44 . R17 ) = ( C43 . ( R17 + 1 ) ))) by L368 , REWRITE3:7;
L371: ( rng C44 ) <> ( {} );
L372: ( ( C44 . 1 ) `2 ) = ( ( C43 . ( 1 + 1 ) ) `2 ) by L371 , L370 , FINSEQ_3:32;
L373: 1 in ( dom C44 ) by L371 , FINSEQ_3:32;
L374: 1 <= ( len C44 ) by L373 , FINSEQ_3:25;
L375: ( len C44 ) in ( dom C44 ) by L374 , FINSEQ_3:25;
L376: ( ( C44 . ( len C44 ) ) `2 ) = ( <%> R4 ) by L375 , L354 , L369 , L370;
L377: ( ( C43 . 1 ) `2 ) = ( <% R5 %> ^ ( R7 ^ R8 ) ) by L353 , L362 , AFINSQ_1:27;
thus L378: (ex R17 being Nat st (R17 in ( dom C43 ) & ( ( C43 . R17 ) `2 ) = R8))
proof
per cases  by L353 , L354 , L377 , L289;
suppose L379: ( ( C43 . 2 ) `2 ) = ( R6 ^ R8 );

consider R18 being Nat such that L380: R18 in ( dom C44 ) and L381: ( ( C44 . R18 ) `2 ) = R8 by L379 , L350 , L352 , L369 , L372 , L376;
set D58 = ( R18 + 1 );
take D58;
thus L382: D58 in ( dom C43 ) by L369 , L380 , L14;
thus L383: ( ( C43 . D58 ) `2 ) = R8 by L370 , L380 , L381;
end;
suppose L384: ( ( C43 . 2 ) `2 ) = ( R7 ^ R8 );

consider R18 being Nat such that L385: R18 in ( dom C44 ) and L386: ( ( C44 . R18 ) `2 ) = R8 by L384 , L350 , L352 , L369 , L372 , L376;
set D59 = ( R18 + 1 );
take D59;
thus L387: D59 in ( dom C43 ) by L369 , L385 , L14;
thus L388: ( ( C43 . D59 ) `2 ) = R8 by L370 , L385 , L386;
end;
end;

end;
end;

end;
L352: S7[ ( 0 ) ];
L353: (for R17 being Nat holds S7[ R17 ]) from NAT_1:sch 2(L352 , L349);
thus L354: thesis by L353;
end;
definition
let R4 being non  empty set;
let R6 being (Element of ( R4 ^omega ));
let R8 being (Element of ( R4 ^omega ));
func chop (R6 , R8) -> (Element of ( R4 ^omega )) means 
:L355: (for R11 being (Element of ( R4 ^omega )) holds (( R11 ^ R8 ) = R6 implies it = R11)) if (ex R11 being (Element of ( R4 ^omega )) st ( R11 ^ R8 ) = R6) otherwise it = R6;
existence
proof
thus L356: ((ex R11 being (Element of ( R4 ^omega )) st ( R11 ^ R8 ) = R6) implies (ex R13 being (Element of ( R4 ^omega )) st (for R11 being (Element of ( R4 ^omega )) holds (( R11 ^ R8 ) = R6 implies R13 = R11))))
proof
given R13 being (Element of ( R4 ^omega )) such that
L357: ( R13 ^ R8 ) = R6;

take R13;
let R11 being (Element of ( R4 ^omega ));
assume L358: ( R11 ^ R8 ) = R6;
thus L359: R13 = R11 by L358 , L357 , AFINSQ_1:28;
end;

thus L360: thesis;
end;
uniqueness
proof
let R13 being (Element of ( R4 ^omega ));
let R14 being (Element of ( R4 ^omega ));
thus L361:now
given R11 being (Element of ( R4 ^omega )) such that
L362: ( R11 ^ R8 ) = R6;

assume that
L363: (for R11 being (Element of ( R4 ^omega )) holds (( R11 ^ R8 ) = R6 implies R13 = R11))
and
L364: (for R11 being (Element of ( R4 ^omega )) holds (( R11 ^ R8 ) = R6 implies R14 = R11));
L365: R13 = R11 by L362 , L363;
thus L366: R13 = R14 by L365 , L362 , L364;
end;
thus L367: thesis;
end;
consistency;
end;
theorem
L369: (for R1 being set holds (for R2 being set holds (for R4 being non  empty set holds (for R6 being (Element of ( R4 ^omega )) holds (for R8 being (Element of ( R4 ^omega )) holds (for R11 being (Element of ( R4 ^omega )) holds (for R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds (for B26 being (RedSequence of ( ==>.-relation R26 )) holds ((( B26 . 1 ) = [ R1 , ( R6 ^ R11 ) ] & ( B26 . ( len B26 ) ) = [ R2 , ( R8 ^ R11 ) ]) implies (ex B27 being (RedSequence of ( ==>.-relation R26 )) st (( B27 . 1 ) = [ R1 , R6 ] & ( B27 . ( len B27 ) ) = [ R2 , R8 ])))))))))))
proof
let R1 being set;
let R2 being set;
let R4 being non  empty set;
let R6 being (Element of ( R4 ^omega ));
let R8 being (Element of ( R4 ^omega ));
let R11 being (Element of ( R4 ^omega ));
let R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
let C45 being (RedSequence of ( ==>.-relation R26 ));
assume that
L370: ( C45 . 1 ) = [ R1 , ( R6 ^ R11 ) ]
and
L371: ( C45 . ( len C45 ) ) = [ R2 , ( R8 ^ R11 ) ];
L372: ( len C45 ) >= ( ( 0 ) + 1 ) by NAT_1:13;
L373: 1 in ( dom C45 ) by L372 , FINSEQ_3:25;
L374: ( dim2 (( C45 . 1 ) , R4) ) = ( ( C45 . 1 ) `2 ) by L373 , L370 , REWRITE3:51
.= ( R6 ^ R11 ) by L370 , MCART_1:7;
deffunc H1(set) = [ ( ( C45 . $1 ) `1 ) , ( chop (( dim2 (( C45 . $1 ) , R4) ) , R11) ) ];
consider C46 being FinSequence such that L375: ( len C46 ) = ( len C45 ) and L376: (for R17 being Nat holds (R17 in ( dom C46 ) implies ( C46 . R17 ) = H1(R17))) from FINSEQ_1:sch 2;
L377: (for B28 being (Element of ( NAT )) holds ((B28 in ( dom C46 ) & ( B28 + 1 ) in ( dom C46 )) implies [ ( C46 . B28 ) , ( C46 . ( B28 + 1 ) ) ] in ( ==>.-relation R26 )))
proof
let C47 being (Element of ( NAT ));
assume that
L378: C47 in ( dom C46 )
and
L379: ( C47 + 1 ) in ( dom C46 );
L380: (1 <= C47 & C47 <= ( len C46 )) by L378 , FINSEQ_3:25;
L381: C47 in ( dom C45 ) by L380 , L375 , FINSEQ_3:25;
consider R9 being (Element of ( R4 ^omega )) such that L382: ( ( C45 . C47 ) `2 ) = ( R9 ^ ( R8 ^ R11 ) ) by L381 , L371 , REWRITE3:52;
L383: (1 <= ( C47 + 1 ) & ( C47 + 1 ) <= ( len C46 )) by L379 , FINSEQ_3:25;
L384: ( C47 + 1 ) in ( dom C45 ) by L383 , L375 , FINSEQ_3:25;
consider R10 being (Element of ( R4 ^omega )) such that L385: ( ( C45 . ( C47 + 1 ) ) `2 ) = ( R10 ^ ( R8 ^ R11 ) ) by L384 , L371 , REWRITE3:52;
L386: [ ( C45 . C47 ) , ( C45 . ( C47 + 1 ) ) ] in ( ==>.-relation R26 ) by L381 , L384 , REWRITE1:def 2;
L387: [ ( C45 . C47 ) , [ ( ( C45 . ( C47 + 1 ) ) `1 ) , ( R10 ^ ( R8 ^ R11 ) ) ] ] in ( ==>.-relation R26 ) by L386 , L381 , L384 , L385 , REWRITE3:48;
L388: [ [ ( ( C45 . C47 ) `1 ) , ( R9 ^ ( R8 ^ R11 ) ) ] , [ ( ( C45 . ( C47 + 1 ) ) `1 ) , ( R10 ^ ( R8 ^ R11 ) ) ] ] in ( ==>.-relation R26 ) by L387 , L381 , L384 , L382 , REWRITE3:48;
L389: ( ( C45 . C47 ) `1 ) , ( R9 ^ ( R8 ^ R11 ) ) ==>. ( ( C45 . ( C47 + 1 ) ) `1 ) , ( R10 ^ ( R8 ^ R11 ) ) , R26 by L388 , REWRITE3:def 4;
consider R7 being (Element of ( R4 ^omega )) such that L390: ( ( C45 . C47 ) `1 ) , R7 -->. ( ( C45 . ( C47 + 1 ) ) `1 ) , R26 and L391: ( R9 ^ ( R8 ^ R11 ) ) = ( R7 ^ ( R10 ^ ( R8 ^ R11 ) ) ) by L389 , REWRITE3:22;
L392: (ex B29 being (Element of R26) st (ex B30 being (Element of ( R4 ^omega )) st (ex B31 being (Element of R26) st (ex R14 being (Element of ( R4 ^omega )) st (( C45 . C47 ) = [ B29 , B30 ] & ( C45 . ( C47 + 1 ) ) = [ B31 , R14 ]))))) by L386 , REWRITE3:31;
L393: ( dim2 (( C45 . ( C47 + 1 ) ) , R4) ) = ( R10 ^ ( R8 ^ R11 ) ) by L392 , L385 , REWRITE3:def 5;
L394: ( C46 . ( C47 + 1 ) ) = [ ( ( C45 . ( C47 + 1 ) ) `1 ) , ( chop (( R10 ^ ( R8 ^ R11 ) ) , R11) ) ] by L393 , L376 , L379
.= [ ( ( C45 . ( C47 + 1 ) ) `1 ) , ( chop (( ( R10 ^ R8 ) ^ R11 ) , R11) ) ] by AFINSQ_1:27
.= [ ( ( C45 . ( C47 + 1 ) ) `1 ) , ( R10 ^ R8 ) ] by L355;
L395: ( ( R9 ^ R8 ) ^ R11 ) = ( R7 ^ ( R10 ^ ( R8 ^ R11 ) ) ) by L391 , AFINSQ_1:27
.= ( ( R7 ^ R10 ) ^ ( R8 ^ R11 ) ) by AFINSQ_1:27
.= ( ( ( R7 ^ R10 ) ^ R8 ) ^ R11 ) by AFINSQ_1:27;
L396: ( R9 ^ R8 ) = ( ( R7 ^ R10 ) ^ R8 ) by L395 , AFINSQ_1:28
.= ( R7 ^ ( R10 ^ R8 ) ) by AFINSQ_1:27;
L397: ( ( C45 . C47 ) `1 ) , ( R9 ^ R8 ) ==>. ( ( C45 . ( C47 + 1 ) ) `1 ) , ( R10 ^ R8 ) , R26 by L396 , L390 , REWRITE3:def 3;
L398: ( dim2 (( C45 . C47 ) , R4) ) = ( R9 ^ ( R8 ^ R11 ) ) by L382 , L392 , REWRITE3:def 5;
L399: ( C46 . C47 ) = [ ( ( C45 . C47 ) `1 ) , ( chop (( R9 ^ ( R8 ^ R11 ) ) , R11) ) ] by L398 , L376 , L378
.= [ ( ( C45 . C47 ) `1 ) , ( chop (( ( R9 ^ R8 ) ^ R11 ) , R11) ) ] by AFINSQ_1:27
.= [ ( ( C45 . C47 ) `1 ) , ( R9 ^ R8 ) ] by L355;
thus L400: thesis by L399 , L397 , L394 , REWRITE3:def 4;
end;
L401: ( len C45 ) in ( dom C45 ) by L372 , FINSEQ_3:25;
L402: ( dim2 (( C45 . ( len C45 ) ) , R4) ) = ( ( C45 . ( len C45 ) ) `2 ) by L401 , L370 , REWRITE3:51
.= ( R8 ^ R11 ) by L371 , MCART_1:7;
reconsider D60 = C46 as (RedSequence of ( ==>.-relation R26 )) by L375 , L377 , REWRITE1:def 2;
L403: 1 in ( dom D60 ) by L375 , L372 , FINSEQ_3:25;
L404: ( D60 . 1 ) = [ ( ( C45 . 1 ) `1 ) , ( chop (( dim2 (( C45 . 1 ) , R4) ) , R11) ) ] by L403 , L376
.= [ R1 , ( chop (( R6 ^ R11 ) , R11) ) ] by L370 , L374 , MCART_1:7
.= [ R1 , R6 ] by L355;
L405: ( len C45 ) in ( dom D60 ) by L375 , L372 , FINSEQ_3:25;
L406: ( D60 . ( len D60 ) ) = [ ( ( C45 . ( len C45 ) ) `1 ) , ( chop (( dim2 (( C45 . ( len C45 ) ) , R4) ) , R11) ) ] by L405 , L375 , L376
.= [ R2 , ( chop (( R8 ^ R11 ) , R11) ) ] by L371 , L402 , MCART_1:7
.= [ R2 , R8 ] by L355;
thus L407: thesis by L406 , L404;
end;
theorem
L408: (for R1 being set holds (for R2 being set holds (for R4 being non  empty set holds (for R6 being (Element of ( R4 ^omega )) holds (for R8 being (Element of ( R4 ^omega )) holds (for R11 being (Element of ( R4 ^omega )) holds (for R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds (( ==>.-relation R26 ) reduces [ R1 , ( R6 ^ R11 ) ] , [ R2 , ( R8 ^ R11 ) ] implies ( ==>.-relation R26 ) reduces [ R1 , R6 ] , [ R2 , R8 ]))))))))
proof
let R1 being set;
let R2 being set;
let R4 being non  empty set;
let R6 being (Element of ( R4 ^omega ));
let R8 being (Element of ( R4 ^omega ));
let R11 being (Element of ( R4 ^omega ));
let R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
assume L409: ( ==>.-relation R26 ) reduces [ R1 , ( R6 ^ R11 ) ] , [ R2 , ( R8 ^ R11 ) ];
L410: (ex B32 being (RedSequence of ( ==>.-relation R26 )) st (( B32 . 1 ) = [ R1 , ( R6 ^ R11 ) ] & ( B32 . ( len B32 ) ) = [ R2 , ( R8 ^ R11 ) ])) by L409 , REWRITE1:def 3;
L411: (ex B33 being (RedSequence of ( ==>.-relation R26 )) st (( B33 . 1 ) = [ R1 , R6 ] & ( B33 . ( len B33 ) ) = [ R2 , R8 ])) by L410 , L369;
thus L412: thesis by L411 , REWRITE1:def 3;
end;
theorem
L413: (for R1 being set holds (for R2 being set holds (for R4 being non  empty set holds (for R6 being (Element of ( R4 ^omega )) holds (for R8 being (Element of ( R4 ^omega )) holds (for R11 being (Element of ( R4 ^omega )) holds (for R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds (R1 , ( R6 ^ R11 ) ==>* R2 , ( R8 ^ R11 ) , R26 implies R1 , R6 ==>* R2 , R8 , R26))))))))
proof
let R1 being set;
let R2 being set;
let R4 being non  empty set;
let R6 being (Element of ( R4 ^omega ));
let R8 being (Element of ( R4 ^omega ));
let R11 being (Element of ( R4 ^omega ));
let R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
assume L414: R1 , ( R6 ^ R11 ) ==>* R2 , ( R8 ^ R11 ) , R26;
L415: ( ==>.-relation R26 ) reduces [ R1 , ( R6 ^ R11 ) ] , [ R2 , ( R8 ^ R11 ) ] by L414 , REWRITE3:def 6;
L416: ( ==>.-relation R26 ) reduces [ R1 , R6 ] , [ R2 , R8 ] by L415 , L408;
thus L417: thesis by L416 , REWRITE3:def 6;
end;
theorem
L418: (for R4 being non  empty set holds (for R6 being (Element of ( R4 ^omega )) holds (for R8 being (Element of ( R4 ^omega )) holds (for R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds (for B34 , B35 being (Element of R26) holds (B34 , ( R6 ^ R8 ) ==>* B35 , R26 implies (ex B36 being (Element of R26) st (B34 , R6 ==>* B36 , R26 & B36 , R8 ==>* B35 , R26))))))))
proof
let R4 being non  empty set;
let R6 being (Element of ( R4 ^omega ));
let R8 being (Element of ( R4 ^omega ));
let R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
let C48 , C49 being (Element of R26);
assume L419: C48 , ( R6 ^ R8 ) ==>* C49 , R26;
L420: C48 , ( R6 ^ R8 ) ==>* C49 , ( <%> R4 ) , R26 by L419 , REWRITE3:def 7;
L421: ( ==>.-relation R26 ) reduces [ C48 , ( R6 ^ R8 ) ] , [ C49 , ( <%> R4 ) ] by L420 , REWRITE3:def 6;
consider C50 being (RedSequence of ( ==>.-relation R26 )) such that L422: ( C50 . 1 ) = [ C48 , ( R6 ^ R8 ) ] and L423: ( C50 . ( len C50 ) ) = [ C49 , ( <%> R4 ) ] by L421 , REWRITE1:def 3;
L424: ( ( C50 . ( len C50 ) ) `2 ) = ( <%> R4 ) by L423 , MCART_1:7;
L425: ( ( C50 . 1 ) `2 ) = ( R6 ^ R8 ) by L422 , MCART_1:7;
consider R18 being Nat such that L426: R18 in ( dom C50 ) and L427: ( ( C50 . R18 ) `2 ) = R8 by L425 , L424 , L348;
per cases ;
suppose L428: ( R18 + 1 ) in ( dom C50 );

L429: ( ( C50 . R18 ) `1 ) in R26 by L428 , L426 , REWRITE3:49;
reconsider D61 = ( ( C50 . R18 ) `1 ) as (Element of R26) by L429 , STRUCT_0:def 5;
L430: ( C50 . R18 ) = [ D61 , R8 ] by L426 , L427 , L428 , REWRITE3:48;
L431: R18 <= ( len C50 ) by L426 , FINSEQ_3:25;
take D61;
L432: (1 in ( dom C50 ) & 1 <= R18) by L426 , FINSEQ_3:25 , FINSEQ_5:6;
reconsider D62 = R18 as (Element of ( NAT )) by ORDINAL1:def 12;
L433: ( ==>.-relation R26 ) reduces ( C50 . 1 ) , ( C50 . D62 ) by L426 , L432 , REWRITE1:17;
L434: C48 , ( R6 ^ R8 ) ==>* D61 , ( ( {} ) ^ R8 ) , R26 by L433 , L422 , L430 , REWRITE3:def 6;
L435: C48 , R6 ==>* D61 , ( <%> R4 ) , R26 by L434 , L413;
thus L436: C48 , R6 ==>* D61 , R26 by L435 , REWRITE3:def 7;
L437: ( ( 0 ) + 1 ) <= ( len C50 ) by NAT_1:13;
L438: ( len C50 ) in ( dom C50 ) by L437 , FINSEQ_3:25;
L439: ( ==>.-relation R26 ) reduces ( C50 . D62 ) , ( C50 . ( len C50 ) ) by L438 , L426 , L431 , REWRITE1:17;
L440: D61 , R8 ==>* C49 , ( <%> R4 ) , R26 by L439 , L423 , L430 , REWRITE3:def 6;
thus L441: D61 , R8 ==>* C49 , R26 by L440 , REWRITE3:def 7;
end;
suppose L442: (not ( R18 + 1 ) in ( dom C50 ));

L443: R8 = ( <%> R4 ) by L442 , L424 , L426 , L427 , REWRITE3:3;
L444: ( R6 ^ ( {} ) ) = R6;
thus L445: thesis by L444 , L419 , L443 , REWRITE3:95;
end;
end;
theorem
L447: (for R3 being set holds (for R4 being non  empty set holds (for R8 being (Element of ( R4 ^omega )) holds (for R11 being (Element of ( R4 ^omega )) holds (for R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds ( ( R11 ^ R8 ) -succ_of (R3 , R26) ) = ( R8 -succ_of (( R11 -succ_of (R3 , R26) ) , R26) ))))))
proof
let R3 being set;
let R4 being non  empty set;
let R8 being (Element of ( R4 ^omega ));
let R11 being (Element of ( R4 ^omega ));
let R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
L448:
now
let R1 being set;
assume L449: R1 in ( R8 -succ_of (( R11 -succ_of (R3 , R26) ) , R26) );
reconsider D63 = R1 as (Element of R26) by L449;
consider C51 being (Element of R26) such that L450: C51 in ( R11 -succ_of (R3 , R26) ) and L451: C51 , R8 ==>* D63 , R26 by L449 , REWRITE3:103;
consider C52 being (Element of R26) such that L452: C52 in R3 and L453: C52 , R11 ==>* C51 , R26 by L450 , REWRITE3:103;
L454: C52 , ( R11 ^ R8 ) ==>* D63 , R26 by L451 , L453 , REWRITE3:99;
thus L455: R1 in ( ( R11 ^ R8 ) -succ_of (R3 , R26) ) by L454 , L452 , REWRITE3:103;
end;
L456:
now
let R1 being set;
assume L457: R1 in ( ( R11 ^ R8 ) -succ_of (R3 , R26) );
reconsider D64 = R1 as (Element of R26) by L457;
consider C53 being (Element of R26) such that L458: C53 in R3 and L459: C53 , ( R11 ^ R8 ) ==>* D64 , R26 by L457 , REWRITE3:103;
consider C54 being (Element of R26) such that L460: C53 , R11 ==>* C54 , R26 and L461: C54 , R8 ==>* D64 , R26 by L459 , L418;
L462: C54 in ( R11 -succ_of (R3 , R26) ) by L458 , L460 , REWRITE3:103;
thus L463: R1 in ( R8 -succ_of (( R11 -succ_of (R3 , R26) ) , R26) ) by L462 , L461 , REWRITE3:103;
end;
thus L464: thesis by L456 , L448 , TARSKI:1;
end;
theorem
L465: (for R4 being non  empty set holds (for R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds ( _bool R26 ) is non  empty non  empty non  empty non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } )))
proof
let R4 being non  empty set;
let R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
L466: ( Lex R4 ) c= ( ( Lex R4 ) \/ { ( <%> R4 ) } ) by XBOOLE_1:7;
L467: (( dom (the Tran of ( _bool R26 )) ) c= [: (the carrier of ( _bool R26 )) , ( Lex R4 ) :] & [: (the carrier of ( _bool R26 )) , ( Lex R4 ) :] c= [: (the carrier of ( _bool R26 )) , ( ( Lex R4 ) \/ { ( <%> R4 ) } ) :]) by L466 , ZFMISC_1:95;
thus L468: thesis by L467 , RELSET_1:5 , XBOOLE_1:1;
end;
theorem
L469: (for R3 being set holds (for R4 being non  empty set holds (for R8 being (Element of ( R4 ^omega )) holds (for R11 being (Element of ( R4 ^omega )) holds (for R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds ( R11 -succ_of ({ ( R8 -succ_of (R3 , R26) ) } , ( _bool R26 )) ) = { ( ( R8 ^ R11 ) -succ_of (R3 , R26) ) })))))
proof
let R3 being set;
let R4 being non  empty set;
let R8 being (Element of ( R4 ^omega ));
let R11 being (Element of ( R4 ^omega ));
let R26 being non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
defpred S8[ Nat ] means (for R6 being (Element of ( R4 ^omega )) holds (( len R6 ) <= $1 implies (for R8 being (Element of ( R4 ^omega )) holds ( R6 -succ_of ({ ( R8 -succ_of (R3 , R26) ) } , ( _bool R26 )) ) = { ( ( R8 ^ R6 ) -succ_of (R3 , R26) ) })));
L470: (not ( <%> R4 ) in ( rng ( dom (the Tran of ( _bool R26 )) ) )) by L57;
L471: S8[ ( 0 ) ]
proof
let R6 being (Element of ( R4 ^omega ));
assume L472: ( len R6 ) <= ( 0 );
L473: R6 = ( <%> R4 ) by L472;
let R8 being (Element of ( R4 ^omega ));
reconsider D65 = { ( R8 -succ_of (R3 , R26) ) } as (Subset of ( _bool R26 )) by L95;
L474: ( R6 -succ_of (D65 , ( _bool R26 )) ) = D65 by L470 , L473 , REWRITE3:104;
thus L475: ( R6 -succ_of ({ ( R8 -succ_of (R3 , R26) ) } , ( _bool R26 )) ) = { ( ( R8 ^ ( {} ) ) -succ_of (R3 , R26) ) } by L474
.= { ( ( R8 ^ ( {} ) ) -succ_of (R3 , R26) ) }
.= { ( ( R8 ^ R6 ) -succ_of (R3 , R26) ) } by L473;
end;
L476:
now
let R17 being Nat;
assume L477: S8[ R17 ];
L478:
now
let R6 being (Element of ( R4 ^omega ));
assume L479: ( len R6 ) <= ( R17 + 1 );
let R8 being (Element of ( R4 ^omega ));
per cases ;
suppose L480: R17 = ( 0 );

per cases  by L479 , L480 , NAT_1:25;
suppose L481: ( len R6 ) = ( 0 );

thus L482: ( R6 -succ_of ({ ( R8 -succ_of (R3 , R26) ) } , ( _bool R26 )) ) = { ( ( R8 ^ R6 ) -succ_of (R3 , R26) ) } by L481 , L471;
end;
suppose L483: ( len R6 ) = 1;

L484:
now
let R1 being set;
assume L485: R1 in { ( ( R8 ^ R6 ) -succ_of (R3 , R26) ) };
reconsider D66 = R1 as (Element of ( _bool R26 )) by L485 , L95;
L486: R1 = ( ( R8 ^ R6 ) -succ_of (R3 , R26) ) by L485 , TARSKI:def 1;
L487: R1 = ( R6 -succ_of (( R8 -succ_of (R3 , R26) ) , R26) ) by L486 , L447;
L488: ( R8 -succ_of (R3 , R26) ) , R6 ==>* R1 , ( _bool R26 ) by L487 , L483 , L160;
L489: (( R8 -succ_of (R3 , R26) ) is (Element of ( _bool R26 )) & ( R8 -succ_of (R3 , R26) ) in { ( R8 -succ_of (R3 , R26) ) }) by L95 , TARSKI:def 1;
L490: D66 in ( R6 -succ_of ({ ( R8 -succ_of (R3 , R26) ) } , ( _bool R26 )) ) by L489 , L488 , REWRITE3:103;
thus L491: R1 in ( R6 -succ_of ({ ( R8 -succ_of (R3 , R26) ) } , ( _bool R26 )) ) by L490;
end;
L492:
now
let R1 being set;
assume L493: R1 in ( R6 -succ_of ({ ( R8 -succ_of (R3 , R26) ) } , ( _bool R26 )) );
reconsider D67 = R1 as (Element of ( _bool R26 )) by L493;
consider C55 being (Element of ( _bool R26 )) such that L494: (C55 in { ( R8 -succ_of (R3 , R26) ) } & C55 , R6 ==>* D67 , ( _bool R26 )) by L493 , REWRITE3:103;
L495: (C55 = ( R8 -succ_of (R3 , R26) ) & D67 = ( R6 -succ_of (C55 , R26) )) by L483 , L494 , L160 , TARSKI:def 1;
L496: D67 = ( ( R8 ^ R6 ) -succ_of (R3 , R26) ) by L495 , L447;
thus L497: R1 in { ( ( R8 ^ R6 ) -succ_of (R3 , R26) ) } by L496 , TARSKI:def 1;
end;
thus L498: ( R6 -succ_of ({ ( R8 -succ_of (R3 , R26) ) } , ( _bool R26 )) ) = { ( ( R8 ^ R6 ) -succ_of (R3 , R26) ) } by L492 , L484 , TARSKI:1;
end;
end;
suppose L500: R17 <> ( 0 );

reconsider D68 = ( _bool R26 ) as non  empty transition-system over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) by L465;
consider R9 being (Element of ( R4 ^omega )), R10 being (Element of ( R4 ^omega )) such that L501: ( len R9 ) <= R17 and L502: ( len R10 ) <= R17 and L503: R6 = ( R9 ^ R10 ) by L479 , L500 , L29;
L504: ( R9 -succ_of ({ ( R8 -succ_of (R3 , R26) ) } , ( _bool R26 )) ) = { ( ( R8 ^ R9 ) -succ_of (R3 , R26) ) } by L477 , L501;
L505: (the Tran of D68) = (the Tran of ( _bool R26 ));
L506: ( ( R9 ^ R10 ) -succ_of ({ ( R8 -succ_of (R3 , R26) ) } , ( _bool R26 )) ) = ( ( R9 ^ R10 ) -succ_of ({ ( R8 -succ_of (R3 , R26) ) } , D68) ) by L505 , REWRITE3:105
.= ( R10 -succ_of (( R9 -succ_of ({ ( R8 -succ_of (R3 , R26) ) } , D68) ) , D68) ) by L447
.= ( R10 -succ_of (( R9 -succ_of ({ ( R8 -succ_of (R3 , R26) ) } , ( _bool R26 )) ) , D68) ) by L505 , REWRITE3:105
.= ( R10 -succ_of (( R9 -succ_of ({ ( R8 -succ_of (R3 , R26) ) } , ( _bool R26 )) ) , ( _bool R26 )) ) by L505 , REWRITE3:105
.= { ( ( ( R8 ^ R9 ) ^ R10 ) -succ_of (R3 , R26) ) } by L477 , L502 , L504
.= { ( ( R8 ^ ( R9 ^ R10 ) ) -succ_of (R3 , R26) ) } by AFINSQ_1:27;
thus L507: ( R6 -succ_of ({ ( R8 -succ_of (R3 , R26) ) } , ( _bool R26 )) ) = { ( ( R8 ^ R6 ) -succ_of (R3 , R26) ) } by L506 , L503;
end;
end;
thus L509: S8[ ( R17 + 1 ) ] by L478;
end;
L510: (for R17 being Nat holds S8[ R17 ]) from NAT_1:sch 2(L471 , L476);
L511: (( len R11 ) <= ( len R11 ) implies ( R11 -succ_of ({ ( R8 -succ_of (R3 , R26) ) } , ( _bool R26 )) ) = { ( ( R8 ^ R11 ) -succ_of (R3 , R26) ) }) by L510;
thus L512: thesis by L511;
end;
theorem
L513: (for R3 being set holds (for R4 being non  empty set holds (for R11 being (Element of ( R4 ^omega )) holds (for R27 being non  empty semiautomaton over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds ( R11 -succ_of ({ ( ( <%> R4 ) -succ_of (R3 , R27) ) } , ( _bool R27 )) ) = { ( R11 -succ_of (R3 , R27) ) }))))
proof
let R3 being set;
let R4 being non  empty set;
let R11 being (Element of ( R4 ^omega ));
let R27 being non  empty semiautomaton over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
set D69 = ( the transition-system of R27 );
set D70 = ( ( <%> R4 ) -succ_of (R3 , R27) );
L514: ( the transition-system of ( _bool R27 ) ) = ( _bool D69 ) by L188;
thus L515: ( R11 -succ_of ({ D70 } , ( _bool R27 )) ) = ( R11 -succ_of ({ D70 } , ( _bool D69 )) ) by L514 , REWRITE3:105
.= ( R11 -succ_of ({ ( ( <%> R4 ) -succ_of (R3 , D69) ) } , ( _bool D69 )) ) by REWRITE3:105
.= { ( ( ( {} ) ^ R11 ) -succ_of (R3 , D69) ) } by L469
.= { ( R11 -succ_of (R3 , D69) ) }
.= { ( R11 -succ_of (R3 , R27) ) } by REWRITE3:105;
end;
theorem
L516: (for R1 being set holds (for R4 being non  empty set holds (for R28 being non  empty automaton over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds (for R29 being (Subset of R28) holds ((R1 in (the FinalS of R28) & R1 in R29) implies R29 in (the FinalS of ( _bool R28 )))))))
proof
let R1 being set;
let R4 being non  empty set;
let R28 being non  empty automaton over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
let R29 being (Subset of R28);
assume L517: (R1 in (the FinalS of R28) & R1 in R29);
L518: R29 meets (the FinalS of R28) by L517 , XBOOLE_0:3;
L519: R29 is (Element of ( _bool R28 )) by L232;
L520: R29 in { B37 where B37 is (Element of ( _bool R28 )) : B37 meets (the FinalS of R28) } by L519 , L518;
thus L521: thesis by L520 , L223;
end;
theorem
L522: (for R3 being set holds (for R4 being non  empty set holds (for R28 being non  empty automaton over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds (R3 in (the FinalS of ( _bool R28 )) implies R3 meets (the FinalS of R28)))))
proof
let R3 being set;
let R4 being non  empty set;
let R28 being non  empty automaton over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
assume L523: R3 in (the FinalS of ( _bool R28 ));
L524: (the FinalS of ( _bool R28 )) = { B38 where B38 is (Element of ( _bool R28 )) : B38 meets (the FinalS of R28) } by L223;
L525: (ex B39 being (Element of ( _bool R28 )) st (R3 = B39 & B39 meets (the FinalS of R28))) by L524 , L523;
thus L526: thesis by L525;
end;
theorem
L527: (for R4 being non  empty set holds (for R28 being non  empty automaton over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds (the InitS of ( _bool R28 )) = { ( ( <%> R4 ) -succ_of ((the InitS of R28) , R28) ) }))
proof
let R4 being non  empty set;
let R28 being non  empty automaton over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
L528: (the InitS of ( _bool R28 )) = (the InitS of ( the semiautomaton of ( _bool R28 ) ))
.= (the InitS of ( _bool ( the semiautomaton of R28 ) )) by L223
.= { ( ( <%> R4 ) -succ_of ((the InitS of ( the semiautomaton of R28 )) , ( the semiautomaton of R28 )) ) } by L188;
thus L529: thesis by L528 , REWRITE3:105;
end;
theorem
L530: (for R3 being set holds (for R4 being non  empty set holds (for R11 being (Element of ( R4 ^omega )) holds (for R28 being non  empty automaton over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds ( R11 -succ_of ({ ( ( <%> R4 ) -succ_of (R3 , R28) ) } , ( _bool R28 )) ) = { ( R11 -succ_of (R3 , R28) ) }))))
proof
let R3 being set;
let R4 being non  empty set;
let R11 being (Element of ( R4 ^omega ));
let R28 being non  empty automaton over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
set D71 = ( the semiautomaton of R28 );
set D72 = ( ( <%> R4 ) -succ_of (R3 , R28) );
L531: ( the semiautomaton of ( _bool R28 ) ) = ( _bool D71 ) by L223;
thus L532: ( R11 -succ_of ({ D72 } , ( _bool R28 )) ) = ( R11 -succ_of ({ D72 } , ( _bool D71 )) ) by L531 , REWRITE3:105
.= ( R11 -succ_of ({ ( ( <%> R4 ) -succ_of (R3 , D71) ) } , ( _bool D71 )) ) by REWRITE3:105
.= { ( R11 -succ_of (R3 , D71) ) } by L513
.= { ( R11 -succ_of (R3 , R28) ) } by REWRITE3:105;
end;
theorem
L533: (for R4 being non  empty set holds (for R11 being (Element of ( R4 ^omega )) holds (for R28 being non  empty automaton over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds ( R11 -succ_of ((the InitS of ( _bool R28 )) , ( _bool R28 )) ) = { ( R11 -succ_of ((the InitS of R28) , R28) ) })))
proof
let R4 being non  empty set;
let R11 being (Element of ( R4 ^omega ));
let R28 being non  empty automaton over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
set D73 = ( ( <%> R4 ) -succ_of ((the InitS of R28) , R28) );
L534: (the InitS of ( _bool R28 )) = { D73 } by L527;
thus L535: thesis by L534 , L530;
end;
theorem
L536: (for R4 being non  empty set holds (for R28 being non  empty automaton over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds ( Lang R28 ) = ( Lang ( _bool R28 ) )))
proof
let R4 being non  empty set;
let R28 being non  empty automaton over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
set D74 = ( _bool R28 );
L537: (for R11 being (Element of ( R4 ^omega )) holds (R11 in ( Lang R28 ) implies R11 in ( Lang D74 )))
proof
let R11 being (Element of ( R4 ^omega ));
assume L538: R11 in ( Lang R28 );
L539: ( R11 -succ_of ((the InitS of R28) , R28) ) meets (the FinalS of R28) by L538 , L256;
L540: (ex R1 being set st (R1 in ( R11 -succ_of ((the InitS of R28) , R28) ) & R1 in (the FinalS of R28))) by L539 , XBOOLE_0:3;
L541: ( R11 -succ_of ((the InitS of R28) , R28) ) in (the FinalS of D74) by L540 , L516;
L542: ( R11 -succ_of ((the InitS of D74) , D74) ) = { ( R11 -succ_of ((the InitS of R28) , R28) ) } by L533;
L543: ( R11 -succ_of ((the InitS of R28) , R28) ) in ( R11 -succ_of ((the InitS of D74) , D74) ) by L542 , TARSKI:def 1;
L544: ( R11 -succ_of ((the InitS of D74) , D74) ) meets (the FinalS of D74) by L543 , L541 , XBOOLE_0:3;
thus L545: thesis by L544 , L256;
end;
L546: (for R11 being (Element of ( R4 ^omega )) holds (R11 in ( Lang D74 ) implies R11 in ( Lang R28 )))
proof
let R11 being (Element of ( R4 ^omega ));
assume L547: R11 in ( Lang D74 );
L548: ( R11 -succ_of ((the InitS of D74) , D74) ) meets (the FinalS of D74) by L547 , L256;
consider R1 being set such that L549: R1 in ( R11 -succ_of ((the InitS of D74) , D74) ) and L550: R1 in (the FinalS of D74) by L548 , XBOOLE_0:3;
L551: ( R11 -succ_of ((the InitS of ( _bool R28 )) , ( _bool R28 )) ) = { ( R11 -succ_of ((the InitS of R28) , R28) ) } by L533;
L552: R1 = ( R11 -succ_of ((the InitS of R28) , R28) ) by L551 , L549 , TARSKI:def 1;
L553: ( R11 -succ_of ((the InitS of R28) , R28) ) meets (the FinalS of R28) by L552 , L550 , L522;
thus L554: thesis by L553 , L256;
end;
thus L555: thesis by L546 , L537 , SUBSET_1:3;
end;
theorem
L556: (for R4 being non  empty set holds (for B40 being non  empty automaton over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds (ex B41 being non  empty  deterministic automaton over ( Lex R4 ) st ( Lang B40 ) = ( Lang B41 ))))
proof
let R4 being non  empty set;
let C56 being non  empty automaton over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
set D75 = ( _bool C56 );
take D75;
thus L557: thesis by L536;
end;
theorem
L558: (for R4 being non  empty set holds (for B42 being non  empty  finite automaton over ( ( Lex R4 ) \/ { ( <%> R4 ) } ) holds (ex B43 being non  empty  deterministic  finite automaton over ( Lex R4 ) st ( Lang B42 ) = ( Lang B43 ))))
proof
let R4 being non  empty set;
let C57 being non  empty  finite automaton over ( ( Lex R4 ) \/ { ( <%> R4 ) } );
set D76 = ( _bool C57 );
L559: ( Lang C57 ) = ( Lang D76 ) by L536;
thus L560: thesis by L559;
end;
