:: A Sequent Calculus for First-Order Logic
::  by Patrick Braselmann and Peter Koepke
::
:: Received September 25, 2004
:: Copyright (c) 2004-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, SUBSET_1, CQC_LANG, QC_LANG1, XBOOLE_0, VALUAT_1,
      SUBSTUT1, FINSEQ_1, RELAT_1, ARYTM_3, XXREAL_0, CARD_1, NAT_1, TARSKI,
      FUNCT_1, ORDINAL4, FINSEQ_2, ZFMISC_1, CQC_THE1, MCART_1, XBOOLEAN,
      BVFUNC_2, ZF_MODEL, SUBSTUT2, SUBLEMMA, FUNCOP_1, FUNCT_4, FINSET_1,
      ORDINAL1, CALCUL_1;
 notations TARSKI, XBOOLE_0, ZFMISC_1,
      XTUPLE_0, SUBSET_1, FINSEQ_1, RELAT_1, FUNCT_1,
      QC_LANG1, CARD_1, NUMBERS, ORDINAL1, FINSEQ_2, XXREAL_0, NAT_1, FUNCOP_1,
      CQC_LANG, FINSET_1, VALUAT_1, CQC_THE1, RELSET_1, PARTFUN1, FUNCT_2,
      DOMAIN_1, MCART_1, SUBSTUT1, SUBSTUT2, SUBLEMMA;
 constructors PARTFUN1, WELLORD2, DOMAIN_1, XXREAL_0, XREAL_0, NAT_1, FINSEQ_2,
      CQC_THE1, SUBSTUT2, RELSET_1, XTUPLE_0;
 registrations XBOOLE_0, SUBSET_1, FUNCT_1, ORDINAL1, RELSET_1, FUNCOP_1,
      FINSET_1, XXREAL_0, XREAL_0, NAT_1, FINSEQ_1, QC_LANG1, CQC_LANG, CARD_1,
      FINSEQ_2, RELAT_1, XTUPLE_0;
 requirements REAL, NUMERALS, SUBSET, BOOLE, ARITHM;
 definitions TARSKI, XBOOLE_0, FINSEQ_2, FUNCOP_1, XTUPLE_0;
 theorems TARSKI, FUNCT_1, MCART_1, XBOOLE_0, XBOOLE_1, QC_LANG1, ZFMISC_1,
      RELAT_1, QC_LANG3, QC_LANG2, SUBSTUT1, FUNCT_4, SUBLEMMA, NAT_1,
      FINSEQ_1, FINSEQ_3, VALUAT_1, FINSEQ_2, SUBSTUT2, FUNCOP_1, CQC_THE1,
      FINSET_1, CARD_2, CQC_SIM1, CARD_1, CARD_4, GRFUNC_1, XREAL_1, ORDINAL1,
      XXREAL_0;
 schemes XBOOLE_0, NAT_1, CLASSES1;

begin
definition
let C1 being non  empty set;
let C2 being (FinSequence of C1);
func Ant C2 -> (FinSequence of C1) means 
:L1: (for R6 being (Element of ( NAT )) holds (( len C2 ) = ( R6 + 1 ) implies it = ( C2 | ( Seg R6 ) ))) if ( len C2 ) > ( 0 ) otherwise it = ( {} );
existence
proof
L2: (( len C2 ) > ( 0 ) implies (ex B1 being (FinSequence of C1) st (for R6 being (Element of ( NAT )) holds (( len C2 ) = ( R6 + 1 ) implies B1 = ( C2 | ( Seg R6 ) )))))
proof
assume L3: ( len C2 ) > ( 0 );
consider C3 being Nat such that L4: ( len C2 ) = ( C3 + 1 ) by L3 , NAT_1:6;
reconsider D1 = C3 as (Element of ( NAT )) by ORDINAL1:def 12;
take D2 = ( C2 | ( Seg D1 ) );
reconsider D3 = D2 as FinSequence by FINSEQ_1:15;
L5:
now
L6: ( rng D3 ) c= ( rng C2 ) by RELAT_1:70;
let R2 being set;
assume L7: R2 in ( rng D3 );
L8: R2 in ( rng C2 ) by L7 , L6;
thus L9: R2 in C1 by L8;
end;
L10: ( rng D3 ) c= C1 by L5 , TARSKI:def 3;
reconsider D4 = D3 as (FinSequence of C1) by L10 , FINSEQ_1:def 4;
L11: (for R6 being (Element of ( NAT )) holds (( len C2 ) = ( R6 + 1 ) implies D4 = ( C2 | ( Seg R6 ) ))) by L4;
thus L12: thesis by L11;
end;
L13: ( <*> C1 ) = ( {} );
thus L14: thesis by L13 , L2;
end;
uniqueness
proof
let C4 , C5 being (FinSequence of C1);
L15: ((( len C2 ) > ( 0 ) & (for R6 being (Element of ( NAT )) holds (( len C2 ) = ( R6 + 1 ) implies C4 = ( C2 | ( Seg R6 ) ))) & (for R6 being (Element of ( NAT )) holds (( len C2 ) = ( R6 + 1 ) implies C5 = ( C2 | ( Seg R6 ) )))) implies C4 = C5)
proof
assume that
L16: ( len C2 ) > ( 0 )
and
L17: (for R6 being (Element of ( NAT )) holds (( len C2 ) = ( R6 + 1 ) implies C4 = ( C2 | ( Seg R6 ) )))
and
L18: (for R6 being (Element of ( NAT )) holds (( len C2 ) = ( R6 + 1 ) implies C5 = ( C2 | ( Seg R6 ) )));
consider C6 being Nat such that L19: ( len C2 ) = ( C6 + 1 ) by L16 , NAT_1:6;
reconsider D5 = C6 as (Element of ( NAT )) by ORDINAL1:def 12;
L20: C4 = ( C2 | ( Seg D5 ) ) by L17 , L19;
thus L21: thesis by L20 , L18 , L19;
end;
thus L22: thesis by L15;
end;
consistency;
end;
definition
let R1 being QC-alphabet;
let C7 being (FinSequence of ( CQC-WFF R1 ));
func Suc C7 -> (Element of ( CQC-WFF R1 )) equals 
:L24: ( C7 . ( len C7 ) ) if ( len C7 ) > ( 0 ) otherwise ( VERUM R1 );
coherence
proof
per cases ;
suppose L25: ( len C7 ) > ( 0 );

L26: ( ( 0 ) + 1 ) <= ( len C7 ) by L25 , NAT_1:13;
L27: ( len C7 ) in ( dom C7 ) by L26 , FINSEQ_3:25;
L28: ( C7 . ( len C7 ) ) in ( rng C7 ) by L27 , FUNCT_1:3;
thus L29: thesis by L28;
end;
suppose L30: (not ( len C7 ) > ( 0 ));

thus L31: thesis by L30;
end;
end;
consistency;
end;
definition
let C8 being Relation;
let C9 being set;
pred C9 is_tail_of C8
means
:L34: C9 in ( rng C8 )
;end;
L36:
now
let C10 being FinSequence;
let C11 being set;
assume L37: C11 is_tail_of C10;
L38: C11 in ( rng C10 ) by L37 , L34;
consider C12 being set such that L39: C12 in ( dom C10 ) and L40: ( C10 . C12 ) = C11 by L38 , FUNCT_1:def 3;
reconsider D6 = C12 as (Element of ( NAT )) by L39;
take D7 = D6;
thus L41: (D7 in ( dom C10 ) & ( C10 . D7 ) = C11) by L39 , L40;
end;
L42:
now
let C13 being FinSequence;
let C14 being set;
assume L43: (ex B2 being (Element of ( NAT )) st (B2 in ( dom C13 ) & ( C13 . B2 ) = C14));
L44: C14 in ( rng C13 ) by L43 , FUNCT_1:def 3;
thus L45: C14 is_tail_of C13 by L44 , L34;
end;
definition
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
let R25 being (FinSequence of ( CQC-WFF R1 ));
pred R23 is_Subsequence_of R25
means
:L46: (ex B3 being (Subset of ( NAT )) st R23 c= ( Seq ( R25 | B3 ) ))
;end;
theorem
L48: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (for R25 being (FinSequence of ( CQC-WFF R1 )) holds (R23 is_Subsequence_of R25 implies (( rng R23 ) c= ( rng R25 ) & (ex B4 being (Subset of ( NAT )) st ( rng R23 ) c= ( rng ( R25 | B4 ) )))))))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
let R25 being (FinSequence of ( CQC-WFF R1 ));
assume L49: R23 is_Subsequence_of R25;
consider C15 being (Subset of ( NAT )) such that L50: R23 c= ( Seq ( R25 | C15 ) ) by L49 , L46;
L51: ( rng ( R25 | C15 ) ) c= ( rng R25 ) by RELAT_1:70;
L52:
now
L53: ( rng ( Seq ( R25 | C15 ) ) ) = ( rng ( ( R25 | C15 ) * ( Sgm ( dom ( R25 | C15 ) ) ) ) ) by FINSEQ_1:def 14;
L54: ( rng ( Seq ( R25 | C15 ) ) ) c= ( rng ( R25 | C15 ) ) by L53 , RELAT_1:26;
let C16 being set;
assume L55: C16 in ( rng R23 );
consider C17 being Nat such that L56: C17 in ( dom R23 ) and L57: ( R23 . C17 ) = C16 by L55 , FINSEQ_2:10;
L58: [ C17 , ( R23 . C17 ) ] in R23 by L56 , FUNCT_1:1;
L59: ( ( Seq ( R25 | C15 ) ) . C17 ) = C16 by L58 , L50 , L57 , FUNCT_1:1;
L60: ( dom R23 ) c= ( dom ( Seq ( R25 | C15 ) ) ) by L50 , RELAT_1:11;
L61: C16 in ( rng ( Seq ( R25 | C15 ) ) ) by L60 , L56 , L59 , FUNCT_1:3;
thus L62: C16 in ( rng ( R25 | C15 ) ) by L61 , L54;
end;
L63: ( rng R23 ) c= ( rng ( R25 | C15 ) ) by L52 , TARSKI:def 3;
thus L64: ( rng R23 ) c= ( rng R25 ) by L63 , L51 , XBOOLE_1:1;
take C15;
thus L65: thesis by L52 , TARSKI:def 3;
end;
theorem
L66: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (( len R23 ) > ( 0 ) implies (( ( len ( Ant R23 ) ) + 1 ) = ( len R23 ) & ( len ( Ant R23 ) ) < ( len R23 )))))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume L67: ( len R23 ) > ( 0 );
consider C18 being Nat such that L68: ( len R23 ) = ( C18 + 1 ) by L67 , NAT_1:6;
reconsider D8 = C18 as (Element of ( NAT )) by ORDINAL1:def 12;
L69: ( Ant R23 ) = ( R23 | ( Seg D8 ) ) by L68 , L1;
L70: ( dom ( Ant R23 ) ) = ( ( dom R23 ) /\ ( Seg D8 ) ) by L69 , RELAT_1:61;
L71: ( Seg ( len ( Ant R23 ) ) ) = ( ( dom R23 ) /\ ( Seg D8 ) ) by L70 , FINSEQ_1:def 3;
L72: ( Seg ( len ( Ant R23 ) ) ) = ( ( Seg ( len R23 ) ) /\ ( Seg D8 ) ) by L71 , FINSEQ_1:def 3;
L73: D8 <= ( len R23 ) by L68 , NAT_1:11;
L74: ( Seg D8 ) c= ( Seg ( len R23 ) ) by L73 , FINSEQ_1:5;
thus L75: ( ( len ( Ant R23 ) ) + 1 ) = ( len R23 ) by L74 , L68 , L72 , FINSEQ_1:6 , XBOOLE_1:28;
L76: ( len ( Ant R23 ) ) = D8 by L72 , L74 , FINSEQ_1:6 , XBOOLE_1:28;
thus L77: thesis by L76 , L68 , NAT_1:13;
end;
theorem
L78: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (( len R23 ) > ( 0 ) implies (R23 = ( ( Ant R23 ) ^ <* ( Suc R23 ) *> ) & ( rng R23 ) = ( ( rng ( Ant R23 ) ) \/ { ( Suc R23 ) } )))))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume L79: ( len R23 ) > ( 0 );
L80: ( len R23 ) = ( ( len ( Ant R23 ) ) + 1 ) by L79 , L66;
L81: ( dom R23 ) = ( Seg ( len R23 ) ) by FINSEQ_1:def 3;
L82:
now
let C19 being Nat;
assume that
L83: C19 in ( dom R23 );
L84: 1 <= C19 by L81 , L83 , FINSEQ_1:1;
L85:
now
assume L86: C19 <= ( len ( Ant R23 ) );
L87: C19 in ( dom ( Ant R23 ) ) by L86 , L84 , FINSEQ_3:25;
L88: ( Ant R23 ) = ( R23 | ( Seg ( len ( Ant R23 ) ) ) ) by L80 , L1;
L89: ( Ant R23 ) = ( R23 | ( dom ( Ant R23 ) ) ) by L88 , FINSEQ_1:def 3;
L90: ( R23 . C19 ) = ( ( Ant R23 ) . C19 ) by L89 , L87 , FUNCT_1:49;
thus L91: ( R23 . C19 ) = ( ( ( Ant R23 ) ^ <* ( Suc R23 ) *> ) . C19 ) by L90 , L87 , FINSEQ_1:def 7;
end;
L92:
now
L93: 1 in ( Seg 1 ) by FINSEQ_1:1;
L94: 1 in ( dom <* ( Suc R23 ) *> ) by L93 , FINSEQ_1:38;
assume L95: C19 = ( ( len ( Ant R23 ) ) + 1 );
L96: C19 = ( len R23 ) by L95 , L79 , L66;
L97: ( R23 . C19 ) = ( Suc R23 ) by L96 , L79 , L24;
L98: ( R23 . C19 ) = ( <* ( Suc R23 ) *> . 1 ) by L97 , FINSEQ_1:40;
thus L99: ( R23 . C19 ) = ( ( ( Ant R23 ) ^ <* ( Suc R23 ) *> ) . C19 ) by L98 , L95 , L94 , FINSEQ_1:def 7;
end;
L100: C19 <= ( ( len ( Ant R23 ) ) + 1 ) by L80 , L81 , L83 , FINSEQ_1:1;
thus L101: ( R23 . C19 ) = ( ( ( Ant R23 ) ^ <* ( Suc R23 ) *> ) . C19 ) by L100 , L85 , L92 , NAT_1:8;
end;
L102: ( len R23 ) = ( ( len ( Ant R23 ) ) + ( len <* ( Suc R23 ) *> ) ) by L80 , FINSEQ_1:39;
L103: ( len R23 ) = ( len ( ( Ant R23 ) ^ <* ( Suc R23 ) *> ) ) by L102 , FINSEQ_1:22;
L104: R23 = ( ( Ant R23 ) ^ <* ( Suc R23 ) *> ) by L103 , L82 , FINSEQ_2:9;
L105: ( rng R23 ) = ( ( rng ( Ant R23 ) ) \/ ( rng <* ( Suc R23 ) *> ) ) by L104 , FINSEQ_1:31;
thus L106: thesis by L105 , L103 , L82 , FINSEQ_1:38 , FINSEQ_2:9;
end;
theorem
L107: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (( len R23 ) > 1 implies ( len ( Ant R23 ) ) > ( 0 ))))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume L108: ( len R23 ) > 1;
L109: ( ( len ( Ant R23 ) ) + 1 ) > 1 by L108 , L66;
thus L110: thesis by L109 , NAT_1:13;
end;
theorem
L111: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (( Suc ( R23 ^ <* R11 *> ) ) = R11 & ( Ant ( R23 ^ <* R11 *> ) ) = R23))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
set D9 = ( R23 ^ <* R11 *> );
L112: ( len D9 ) = ( ( len R23 ) + 1 ) by FINSEQ_2:16;
L113: ( D9 . ( len D9 ) ) = R11 by L112 , FINSEQ_1:42;
thus L114: ( Suc ( R23 ^ <* R11 *> ) ) = R11 by L113 , L24;
thus L115: ( Ant ( R23 ^ <* R11 *> ) ) = R23
proof
set D10 = ( R23 ^ <* R11 *> );
L116:
now
let C20 being set;
assume L117: C20 in R23;
consider C21 being Nat such that L118: C21 in ( dom R23 ) and L119: C20 = [ C21 , ( R23 . C21 ) ] by L117 , FINSEQ_1:12;
L120: (C21 in ( dom D10 ) & ( R23 . C21 ) = ( D10 . C21 )) by L118 , FINSEQ_1:def 7 , FINSEQ_2:15;
thus L121: C20 in D10 by L120 , L119 , FUNCT_1:1;
end;
L122: R23 c= D10 by L116 , TARSKI:def 3;
L123: R23 = ( D10 | ( dom R23 ) ) by L122 , GRFUNC_1:23;
L124: R23 = ( D10 | ( Seg ( len R23 ) ) ) by L123 , FINSEQ_1:def 3;
thus L125: thesis by L124 , L112 , L1;
end;

end;
theorem
L116: (for R28 being FinSequence holds (for R29 being FinSequence holds (( len R28 ) <= ( len ( R28 ^ R29 ) ) & ( len R29 ) <= ( len ( R28 ^ R29 ) ) & (R28 <> ( {} ) implies (1 <= ( len R28 ) & ( len R29 ) < ( len ( R29 ^ R28 ) ))))))
proof
let R28 being FinSequence;
let R29 being FinSequence;
L117: ( len ( R28 ^ R29 ) ) = ( ( len R28 ) + ( len R29 ) ) by FINSEQ_1:22;
thus L118: (( len R28 ) <= ( len ( R28 ^ R29 ) ) & ( len R29 ) <= ( len ( R28 ^ R29 ) )) by L117 , NAT_1:12;
assume L119: R28 <> ( {} );
L120: ( ( 0 ) + 1 ) <= ( len R28 ) by L119 , NAT_1:13;
L121: ( ( len R29 ) + 1 ) <= ( ( len R28 ) + ( len R29 ) ) by L120 , XREAL_1:6;
L122: ( ( len R29 ) + 1 ) <= ( len ( R29 ^ R28 ) ) by L121 , FINSEQ_1:22;
thus L123: thesis by L122 , L120 , NAT_1:13;
end;
theorem
L124: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (for R25 being (FinSequence of ( CQC-WFF R1 )) holds ( Seq ( ( R23 ^ R25 ) | ( dom R23 ) ) ) = ( ( R23 ^ R25 ) | ( dom R23 ) ))))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
let R25 being (FinSequence of ( CQC-WFF R1 ));
L125: ( ( R23 ^ R25 ) | ( dom R23 ) ) = R23 by FINSEQ_1:21;
thus L126: thesis by L125 , FINSEQ_3:116;
end;
theorem
L127: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (for R25 being (FinSequence of ( CQC-WFF R1 )) holds R23 is_Subsequence_of ( R23 ^ R25 ))))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
let R25 being (FinSequence of ( CQC-WFF R1 ));
set D11 = ( len R23 );
take D12 = ( Seg D11 );
reconsider D13 = ( ( R23 ^ R25 ) | D12 ) as FinSequence by FINSEQ_1:15;
L128: D12 = ( dom R23 ) by FINSEQ_1:def 3;
L129: R23 c= D13 by L128 , FINSEQ_1:21;
thus L130: thesis by L129 , L128 , L124;
end;
theorem
L131: (for R3 being set holds (for R4 being set holds (for R28 being FinSequence holds 1 < ( len ( ( R28 ^ <* R3 *> ) ^ <* R4 *> ) ))))
proof
let R3 being set;
let R4 being set;
let R28 being FinSequence;
L132: ( len ( ( R28 ^ <* R3 *> ) ^ <* R4 *> ) ) = ( ( len ( R28 ^ <* R3 *> ) ) + ( len <* R4 *> ) ) by FINSEQ_1:22;
L133: ( len ( ( R28 ^ <* R3 *> ) ^ <* R4 *> ) ) = ( ( len ( R28 ^ <* R3 *> ) ) + 1 ) by L132 , FINSEQ_1:39;
L134: ( len ( ( R28 ^ <* R3 *> ) ^ <* R4 *> ) ) = ( ( ( len R28 ) + ( len <* R3 *> ) ) + 1 ) by L133 , FINSEQ_1:22;
L135: ( len ( ( R28 ^ <* R3 *> ) ^ <* R4 *> ) ) = ( ( ( len R28 ) + 1 ) + 1 ) by L134 , FINSEQ_1:39;
L136: ( len ( ( R28 ^ <* R3 *> ) ^ <* R4 *> ) ) = ( ( len R28 ) + ( 1 + 1 ) ) by L135;
L137: ( 1 + 1 ) <= ( len ( ( R28 ^ <* R3 *> ) ^ <* R4 *> ) ) by L136 , NAT_1:11;
thus L138: thesis by L137 , NAT_1:13;
end;
theorem
L139: (for R3 being set holds (for R28 being FinSequence holds (1 <= ( len ( R28 ^ <* R3 *> ) ) & ( len ( R28 ^ <* R3 *> ) ) in ( dom ( R28 ^ <* R3 *> ) ))))
proof
let R3 being set;
let R28 being FinSequence;
L140: ( len ( R28 ^ <* R3 *> ) ) = ( ( len R28 ) + 1 ) by FINSEQ_2:16;
L141: 1 <= ( len ( R28 ^ <* R3 *> ) ) by L140 , NAT_1:11;
thus L142: thesis by L141 , FINSEQ_3:25;
end;
theorem
L143: (for R9 being (Element of ( NAT )) holds (for R10 being (Element of ( NAT )) holds (( 0 ) < R9 implies ( len ( Sgm ( ( Seg R10 ) \/ { ( R10 + R9 ) } ) ) ) = ( R10 + 1 ))))
proof
let R9 being (Element of ( NAT ));
let R10 being (Element of ( NAT ));
L144: R9 <= ( R10 + R9 ) by NAT_1:11;
assume L145: ( 0 ) < R9;
L146: ( card ( ( Seg R10 ) \/ { ( R10 + R9 ) } ) ) = ( ( card ( Seg R10 ) ) + 1 ) by L145 , CARD_2:41 , FINSEQ_3:10;
L147: ( card ( ( Seg R10 ) \/ { ( R10 + R9 ) } ) ) = ( R10 + 1 ) by L146 , FINSEQ_1:57;
L148: ( ( 0 ) + 1 ) <= R9 by L145 , NAT_1:13;
L149: 1 <= ( R9 + R10 ) by L148 , L144 , XXREAL_0:2;
L150: ( R10 + R9 ) in ( Seg ( R10 + R9 ) ) by L149 , FINSEQ_1:1;
L151: { ( R10 + R9 ) } c= ( Seg ( R10 + R9 ) ) by L150 , ZFMISC_1:31;
L152: ( Seg R10 ) c= ( Seg ( R10 + R9 ) ) by FINSEQ_3:18;
thus L153: thesis by L152 , L147 , L151 , FINSEQ_3:39 , XBOOLE_1:8;
end;
theorem
L154: (for R9 being (Element of ( NAT )) holds (for R10 being (Element of ( NAT )) holds (( 0 ) < R9 implies ( dom ( Sgm ( ( Seg R10 ) \/ { ( R10 + R9 ) } ) ) ) = ( Seg ( R10 + 1 ) ))))
proof
let R9 being (Element of ( NAT ));
let R10 being (Element of ( NAT ));
assume L155: ( 0 ) < R9;
L156: ( len ( Sgm ( ( Seg R10 ) \/ { ( R10 + R9 ) } ) ) ) = ( R10 + 1 ) by L155 , L143;
thus L157: thesis by L156 , FINSEQ_1:def 3;
end;
theorem
L158: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (for R25 being (FinSequence of ( CQC-WFF R1 )) holds (( 0 ) < ( len R23 ) implies R23 is_Subsequence_of ( ( ( Ant R23 ) ^ R25 ) ^ <* ( Suc R23 ) *> )))))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
let R25 being (FinSequence of ( CQC-WFF R1 ));
set D14 = ( len ( Ant R23 ) );
set D15 = ( len R25 );
set D16 = ( ( Seg D14 ) \/ { ( D14 + ( D15 + 1 ) ) } );
set D17 = ( ( ( Ant R23 ) ^ R25 ) ^ <* ( Suc R23 ) *> );
reconsider D18 = ( D17 | D16 ) as FinSubsequence;
assume L159: ( 0 ) < ( len R23 );
take D16;
L160:
now
L161:
now
let R3 being set;
assume that
L162: R3 in D16;
reconsider D19 = R3 as (Element of ( NAT )) by L162;
L163:
now
assume L164: D19 in { ( D14 + ( D15 + 1 ) ) };
L165: D19 = ( ( D14 + D15 ) + 1 ) by L164 , TARSKI:def 1;
L166: 1 <= D19 by L165 , NAT_1:11;
L167: ( len D17 ) = ( ( len ( ( Ant R23 ) ^ R25 ) ) + ( len <* ( Suc R23 ) *> ) ) by FINSEQ_1:22;
L168: ( len D17 ) = ( ( D14 + D15 ) + ( len <* ( Suc R23 ) *> ) ) by L167 , FINSEQ_1:22;
L169: D19 <= ( len D17 ) by L168 , L165 , FINSEQ_1:39;
thus L170: D19 in ( dom D17 ) by L169 , L166 , FINSEQ_3:25;
end;
L171:
now
L172: D17 = ( ( Ant R23 ) ^ ( R25 ^ <* ( Suc R23 ) *> ) ) by FINSEQ_1:32;
L173: D14 <= ( len D17 ) by L172 , L116;
assume L174: D19 in ( Seg D14 );
L175: 1 <= D19 by L174 , FINSEQ_1:1;
L176: D19 <= D14 by L174 , FINSEQ_1:1;
L177: D19 <= ( len D17 ) by L176 , L173 , XXREAL_0:2;
thus L178: D19 in ( dom D17 ) by L177 , L175 , FINSEQ_3:25;
end;
thus L179: R3 in ( dom D17 ) by L171 , L162 , L163 , XBOOLE_0:def 3;
end;
L180: D16 c= ( dom D17 ) by L161 , TARSKI:def 3;
L181: ( dom D18 ) = ( ( dom D17 ) /\ D16 ) by RELAT_1:61;
L182: ( dom D18 ) = D16 by L181 , L180 , XBOOLE_1:28;
L183: ( dom ( Sgm ( dom D18 ) ) ) = ( Seg ( D14 + 1 ) ) by L182 , L154;
L184:
now
let R6 being (Element of ( NAT ));
L185: (R6 in ( dom R23 ) iff (1 <= R6 & R6 <= ( len R23 ))) by FINSEQ_3:25;
L186: (R6 in ( dom R23 ) iff (1 <= R6 & R6 <= ( D14 + 1 ))) by L185 , L159 , L66;
thus L187: (R6 in ( dom R23 ) iff R6 in ( Seg ( D14 + 1 ) )) by L186 , FINSEQ_1:1;
end;
L188: (for R3 being set holds (R3 in ( dom R23 ) iff R3 in ( Seg ( D14 + 1 ) ))) by L184;
L189: ( dom ( Sgm ( dom D18 ) ) ) = ( dom R23 ) by L188 , L183 , TARSKI:1;
L190:
now
let R6 being (Element of ( NAT ));
let R7 being (Element of ( NAT ));
assume that
L191: R6 in ( Seg D14 )
and
L192: R7 in { ( D14 + ( D15 + 1 ) ) };
L193: R6 <= D14 by L191 , FINSEQ_1:1;
L194: ( D14 + 1 ) <= ( ( D14 + 1 ) + D15 ) by NAT_1:11;
L195: D14 < ( D14 + ( D15 + 1 ) ) by L194 , NAT_1:13;
L196: D14 < R7 by L195 , L192 , TARSKI:def 1;
thus L197: R6 < R7 by L196 , L193 , XXREAL_0:2;
end;
let R3 being set;
assume that
L198: R3 in R23;
consider R4 being set, R5 being set such that L199: R3 = [ R4 , R5 ] by L198 , RELAT_1:def 1;
L200: R4 in ( dom R23 ) by L198 , L199 , FUNCT_1:1;
reconsider D20 = R4 as (Element of ( NAT )) by L200;
L201: (( ( 0 ) + 1 ) <= ( D15 + 1 ) & ( D15 + 1 ) <= ( D14 + ( D15 + 1 ) )) by NAT_1:11;
L202: 1 <= ( D14 + ( D15 + 1 ) ) by L201 , XXREAL_0:2;
L203: ( D14 + ( D15 + 1 ) ) in ( Seg ( D14 + ( D15 + 1 ) ) ) by L202 , FINSEQ_1:1;
L204: { ( D14 + ( D15 + 1 ) ) } c= ( Seg ( D14 + ( D15 + 1 ) ) ) by L203 , ZFMISC_1:31;
L205: ( Sgm ( dom D18 ) ) = ( ( Sgm ( Seg D14 ) ) ^ ( Sgm { ( D14 + ( D15 + 1 ) ) } ) ) by L204 , L182 , L190 , FINSEQ_3:42;
L206: ( Sgm ( dom D18 ) ) = ( ( Sgm ( Seg D14 ) ) ^ <* ( D14 + ( D15 + 1 ) ) *> ) by L205 , FINSEQ_3:44;
L207: ( Sgm ( dom D18 ) ) = ( ( idseq D14 ) ^ <* ( D14 + ( D15 + 1 ) ) *> ) by L206 , FINSEQ_3:48;
L208:
now
assume L209: D20 in ( Seg D14 );
L210: D20 in ( dom ( Ant R23 ) ) by L209 , FINSEQ_1:def 3;
L211: D20 in ( dom ( idseq D14 ) ) by L209 , RELAT_1:45;
L212: ( ( Sgm ( dom D18 ) ) . D20 ) = ( ( idseq D14 ) . D20 ) by L211 , L207 , FINSEQ_1:def 7;
L213: ( ( Sgm ( dom D18 ) ) . D20 ) = D20 by L212 , L209 , FUNCT_1:18;
L214: (D20 in ( dom ( Sgm ( dom D18 ) ) ) & ( Seq D18 ) = ( D18 * ( Sgm ( dom D18 ) ) )) by L198 , L199 , L189 , FINSEQ_1:def 14 , FUNCT_1:1;
L215: ( ( Seq D18 ) . D20 ) = ( D18 . D20 ) by L214 , L213 , FUNCT_1:13;
L216: ( ( Seq D18 ) . D20 ) = ( ( D18 | ( Seg D14 ) ) . D20 ) by L215 , L209 , FUNCT_1:49;
L217: ( ( Seq D18 ) . D20 ) = ( ( D17 | ( Seg D14 ) ) . D20 ) by L216 , RELAT_1:74 , XBOOLE_1:7;
L218: (D17 = ( ( Ant R23 ) ^ ( R25 ^ <* ( Suc R23 ) *> ) ) & ( Seg ( len ( Ant R23 ) ) ) = ( dom ( Ant R23 ) )) by FINSEQ_1:32 , FINSEQ_1:def 3;
L219: ( ( Seq D18 ) . D20 ) = ( ( Ant R23 ) . D20 ) by L218 , L217 , FINSEQ_1:21;
L220: R23 = ( ( Ant R23 ) ^ <* ( Suc R23 ) *> ) by L159 , L78;
thus L221: ( ( Seq D18 ) . D20 ) = ( R23 . D20 ) by L220 , L219 , L210 , FINSEQ_1:def 7;
end;
L222: ( rng ( Sgm ( dom ( D17 | D16 ) ) ) ) = ( dom ( D17 | D16 ) ) by FINSEQ_1:50;
L223: ( dom R23 ) = ( dom ( ( D17 | D16 ) * ( Sgm ( dom ( D17 | D16 ) ) ) ) ) by L222 , L189 , RELAT_1:27;
L224: ( dom R23 ) = ( dom ( Seq D18 ) ) by L223 , FINSEQ_1:def 14;
L225:
now
L226: 1 in ( Seg 1 ) by FINSEQ_1:1;
L227: (( len ( ( Ant R23 ) ^ R25 ) ) = ( D14 + D15 ) & 1 in ( dom <* ( Suc R23 ) *> )) by L226 , FINSEQ_1:22 , FINSEQ_1:38;
L228: (D20 in ( dom ( Sgm ( dom D18 ) ) ) & ( Seq D18 ) = ( D18 * ( Sgm ( dom D18 ) ) )) by L198 , L199 , L189 , FINSEQ_1:def 14 , FUNCT_1:1;
assume L229: D20 = ( D14 + 1 );
L230: ( len ( idseq D14 ) ) = D14 by CARD_1:def 7;
L231: ( ( Sgm ( dom D18 ) ) . D20 ) = ( D14 + ( D15 + 1 ) ) by L230 , L207 , L229 , FINSEQ_1:42;
L232: ( ( Seq D18 ) . D20 ) = ( D18 . ( D14 + ( D15 + 1 ) ) ) by L231 , L228 , FUNCT_1:13;
L233: (( D14 + ( D15 + 1 ) ) in { ( D14 + ( D15 + 1 ) ) } & { ( D14 + ( D15 + 1 ) ) } c= D16) by TARSKI:def 1 , XBOOLE_1:7;
L234: ( ( Seq D18 ) . D20 ) = ( D17 . ( ( D14 + D15 ) + 1 ) ) by L233 , L232 , FUNCT_1:49;
L235: ( ( Seq D18 ) . D20 ) = ( <* ( Suc R23 ) *> . 1 ) by L234 , L227 , FINSEQ_1:def 7;
L236: ( R23 . D20 ) = ( R23 . ( len R23 ) ) by L159 , L229 , L66;
L237: ( R23 . D20 ) = ( Suc R23 ) by L236 , L159 , L24;
thus L238: ( ( Seq D18 ) . D20 ) = ( R23 . D20 ) by L237 , L235 , FINSEQ_1:40;
end;
L239: R5 = ( R23 . R4 ) by L198 , L199 , FUNCT_1:1;
thus L240: R3 in ( Seq D18 ) by L239 , L199 , L200 , L183 , L189 , L208 , L225 , L224 , FINSEQ_2:7 , FUNCT_1:1;
end;
thus L241: thesis by L160 , TARSKI:def 3;
end;
theorem
L242: (for R1 being QC-alphabet holds (for R4 being set holds (for R5 being set holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (1 in ( dom <* R4 , R5 *> ) & 2 in ( dom <* R4 , R5 *> ) & ( ( R23 ^ <* R4 , R5 *> ) . ( ( len R23 ) + 1 ) ) = R4 & ( ( R23 ^ <* R4 , R5 *> ) . ( ( len R23 ) + 2 ) ) = R5)))))
proof
let R1 being QC-alphabet;
let R4 being set;
let R5 being set;
let R23 being (FinSequence of ( CQC-WFF R1 ));
L243: 2 <= ( len <* R4 , R5 *> ) by FINSEQ_1:44;
L244: 2 in ( dom <* R4 , R5 *> ) by L243 , FINSEQ_3:25;
L245: ( ( R23 ^ <* R4 , R5 *> ) . ( ( len R23 ) + 2 ) ) = ( <* R4 , R5 *> . 2 ) by L244 , FINSEQ_1:def 7;
L246: 1 <= 2;
L247: 1 <= ( len <* R4 , R5 *> ) by L246 , FINSEQ_1:44;
L248: 1 in ( dom <* R4 , R5 *> ) by L247 , FINSEQ_3:25;
L249: ( ( R23 ^ <* R4 , R5 *> ) . ( ( len R23 ) + 1 ) ) = ( <* R4 , R5 *> . 1 ) by L248 , FINSEQ_1:def 7;
thus L250: thesis by L249 , L247 , L243 , L245 , FINSEQ_1:44 , FINSEQ_3:25;
end;
begin
definition
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
func still_not-bound_in R23 -> (Subset of ( bound_QC-variables R1 )) means 
:L251: (for R2 being set holds (R2 in it iff (ex R6 being (Element of ( NAT )) st (ex R11 being (Element of ( CQC-WFF R1 )) st (R6 in ( dom R23 ) & R11 = ( R23 . R6 ) & R2 in ( still_not-bound_in R11 ))))));
existence
proof
defpred S1[ set ] means (ex R6 being (Element of ( NAT )) st (ex R11 being (Element of ( CQC-WFF R1 )) st (R6 in ( dom R23 ) & R11 = ( R23 . R6 ) & $1 in ( still_not-bound_in R11 ))));
consider C22 being set such that L252: (for R2 being set holds (R2 in C22 iff (R2 in ( bound_QC-variables R1 ) & S1[ R2 ]))) from XBOOLE_0:sch 1;
take C22;
L253: (for R2 being set holds (R2 in C22 implies R2 in ( bound_QC-variables R1 ))) by L252;
thus L254: C22 is (Subset of ( bound_QC-variables R1 )) by L253 , TARSKI:def 3;
thus L255: thesis by L252;
end;
uniqueness
proof
let C23 , C24 being (Subset of ( bound_QC-variables R1 ));
assume that
L256: (for R2 being set holds (R2 in C23 iff (ex R6 being (Element of ( NAT )) st (ex R11 being (Element of ( CQC-WFF R1 )) st (R6 in ( dom R23 ) & R11 = ( R23 . R6 ) & R2 in ( still_not-bound_in R11 ))))))
and
L257: (for R2 being set holds (R2 in C24 iff (ex R6 being (Element of ( NAT )) st (ex R11 being (Element of ( CQC-WFF R1 )) st (R6 in ( dom R23 ) & R11 = ( R23 . R6 ) & R2 in ( still_not-bound_in R11 ))))));
L258:
now
let R2 being set;
L259: (R2 in C23 iff (ex R6 being (Element of ( NAT )) st (ex R11 being (Element of ( CQC-WFF R1 )) st (R6 in ( dom R23 ) & R11 = ( R23 . R6 ) & R2 in ( still_not-bound_in R11 ))))) by L256;
thus L260: (R2 in C23 iff R2 in C24) by L259 , L257;
end;
thus L261: thesis by L258 , TARSKI:1;
end;
end;
definition
let R1 being QC-alphabet;
func set_of_CQC-WFF-seq R1 means 
:L263: (for R2 being set holds (R2 in it iff R2 is (FinSequence of ( CQC-WFF R1 ))));
existence
proof
defpred S2[ set ] means $1 is (FinSequence of ( CQC-WFF R1 ));
consider C25 being set such that L264: (for R2 being set holds (R2 in C25 iff (R2 in ( bool [: ( NAT ) , ( CQC-WFF R1 ) :] ) & S2[ R2 ]))) from XBOOLE_0:sch 1;
take C25;
thus L265: thesis by L264;
end;
uniqueness
proof
let C26 , C27 being set;
assume that
L266: (for R2 being set holds (R2 in C26 iff R2 is (FinSequence of ( CQC-WFF R1 ))))
and
L267: (for R2 being set holds (R2 in C27 iff R2 is (FinSequence of ( CQC-WFF R1 ))));
L268:
now
let R2 being set;
L269: (R2 in C26 iff R2 is (FinSequence of ( CQC-WFF R1 ))) by L266;
thus L270: (R2 in C26 iff R2 in C27) by L269 , L267;
end;
thus L271: thesis by L268 , TARSKI:1;
end;
end;
definition
let R1 being QC-alphabet;
let R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]);
let C28 being Nat;
pred R30 , C28 is_a_correct_step 
means
:L273: (ex R23 being (FinSequence of ( CQC-WFF R1 )) st (( Suc R23 ) is_tail_of ( Ant R23 ) & ( ( R30 . C28 ) `1 ) = R23)) if ( ( R30 . C28 ) `2 ) = ( 0 ) , (ex R23 being (FinSequence of ( CQC-WFF R1 )) st ( ( R30 . C28 ) `1 ) = ( R23 ^ <* ( VERUM R1 ) *> )) if ( ( R30 . C28 ) `2 ) = 1 , (ex R6 being (Element of ( NAT )) st (ex R23 being (FinSequence of ( CQC-WFF R1 )) st (ex R25 being (FinSequence of ( CQC-WFF R1 )) st (1 <= R6 & R6 < C28 & ( Ant R23 ) is_Subsequence_of ( Ant R25 ) & ( Suc R23 ) = ( Suc R25 ) & ( ( R30 . R6 ) `1 ) = R23 & ( ( R30 . C28 ) `1 ) = R25)))) if ( ( R30 . C28 ) `2 ) = 2 , (ex R6 being (Element of ( NAT )) st (ex R7 being (Element of ( NAT )) st (ex R23 being (FinSequence of ( CQC-WFF R1 )) st (ex R25 being (FinSequence of ( CQC-WFF R1 )) st (1 <= R6 & R6 < C28 & 1 <= R7 & R7 < R6 & ( len R23 ) > 1 & ( len R25 ) > 1 & ( Ant ( Ant R23 ) ) = ( Ant ( Ant R25 ) ) & ( 'not' ( Suc ( Ant R23 ) ) ) = ( Suc ( Ant R25 ) ) & ( Suc R23 ) = ( Suc R25 ) & R23 = ( ( R30 . R7 ) `1 ) & R25 = ( ( R30 . R6 ) `1 ) & ( ( Ant ( Ant R23 ) ) ^ <* ( Suc R23 ) *> ) = ( ( R30 . C28 ) `1 )))))) if ( ( R30 . C28 ) `2 ) = 3 , (ex R6 being (Element of ( NAT )) st (ex R7 being (Element of ( NAT )) st (ex R23 being (FinSequence of ( CQC-WFF R1 )) st (ex R25 being (FinSequence of ( CQC-WFF R1 )) st (ex R11 being (Element of ( CQC-WFF R1 )) st (1 <= R6 & R6 < C28 & 1 <= R7 & R7 < R6 & ( len R23 ) > 1 & ( Ant R23 ) = ( Ant R25 ) & ( Suc ( Ant R23 ) ) = ( 'not' R11 ) & ( 'not' ( Suc R23 ) ) = ( Suc R25 ) & R23 = ( ( R30 . R7 ) `1 ) & R25 = ( ( R30 . R6 ) `1 ) & ( ( Ant ( Ant R23 ) ) ^ <* R11 *> ) = ( ( R30 . C28 ) `1 ))))))) if ( ( R30 . C28 ) `2 ) = 4 , (ex R6 being (Element of ( NAT )) st (ex R7 being (Element of ( NAT )) st (ex R23 being (FinSequence of ( CQC-WFF R1 )) st (ex R25 being (FinSequence of ( CQC-WFF R1 )) st (1 <= R6 & R6 < C28 & 1 <= R7 & R7 < R6 & ( Ant R23 ) = ( Ant R25 ) & R23 = ( ( R30 . R7 ) `1 ) & R25 = ( ( R30 . R6 ) `1 ) & ( ( Ant R23 ) ^ <* ( ( Suc R23 ) '&' ( Suc R25 ) ) *> ) = ( ( R30 . C28 ) `1 )))))) if ( ( R30 . C28 ) `2 ) = 5 , (ex R6 being (Element of ( NAT )) st (ex R23 being (FinSequence of ( CQC-WFF R1 )) st (ex R11 being (Element of ( CQC-WFF R1 )) st (ex R12 being (Element of ( CQC-WFF R1 )) st (1 <= R6 & R6 < C28 & ( R11 '&' R12 ) = ( Suc R23 ) & R23 = ( ( R30 . R6 ) `1 ) & ( ( Ant R23 ) ^ <* R11 *> ) = ( ( R30 . C28 ) `1 )))))) if ( ( R30 . C28 ) `2 ) = 6 , (ex R6 being (Element of ( NAT )) st (ex R23 being (FinSequence of ( CQC-WFF R1 )) st (ex R11 being (Element of ( CQC-WFF R1 )) st (ex R12 being (Element of ( CQC-WFF R1 )) st (1 <= R6 & R6 < C28 & ( R11 '&' R12 ) = ( Suc R23 ) & R23 = ( ( R30 . R6 ) `1 ) & ( ( Ant R23 ) ^ <* R12 *> ) = ( ( R30 . C28 ) `1 )))))) if ( ( R30 . C28 ) `2 ) = 7 , (ex R6 being (Element of ( NAT )) st (ex R23 being (FinSequence of ( CQC-WFF R1 )) st (ex R11 being (Element of ( CQC-WFF R1 )) st (ex R14 being (bound_QC-variable of R1) st (ex R15 being (bound_QC-variable of R1) st (1 <= R6 & R6 < C28 & ( Suc R23 ) = ( All (R14 , R11) ) & R23 = ( ( R30 . R6 ) `1 ) & ( ( Ant R23 ) ^ <* ( R11 . (R14 , R15) ) *> ) = ( ( R30 . C28 ) `1 ))))))) if ( ( R30 . C28 ) `2 ) = 8 , (ex R6 being (Element of ( NAT )) st (ex R23 being (FinSequence of ( CQC-WFF R1 )) st (ex R11 being (Element of ( CQC-WFF R1 )) st (ex R14 being (bound_QC-variable of R1) st (ex R15 being (bound_QC-variable of R1) st (1 <= R6 & R6 < C28 & ( Suc R23 ) = ( R11 . (R14 , R15) ) & (not R15 in ( still_not-bound_in ( Ant R23 ) )) & (not R15 in ( still_not-bound_in ( All (R14 , R11) ) )) & R23 = ( ( R30 . R6 ) `1 ) & ( ( Ant R23 ) ^ <* ( All (R14 , R11) ) *> ) = ( ( R30 . C28 ) `1 ))))))) if ( ( R30 . C28 ) `2 ) = 9
;consistency;
end;
definition
let R1 being QC-alphabet;
let R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]);
attr R30 is  a_proof
means
:L275: (R30 <> ( {} ) & (for B5 being Nat holds ((1 <= B5 & B5 <= ( len R30 )) implies R30 , B5 is_a_correct_step )));
end;
definition
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
pred  |- R23
means
:L277: (ex R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) st (R30 is  a_proof & R23 = ( ( R30 . ( len R30 ) ) `1 )))
;end;
definition
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R17 being (Subset of ( CQC-WFF R1 ));
pred R11 is_formal_provable_from R17
means
:L279: (ex R23 being (FinSequence of ( CQC-WFF R1 )) st (( rng ( Ant R23 ) ) c= R17 & ( Suc R23 ) = R11 &  |- R23))
;end;
definition
let R1 being QC-alphabet;
let R17 being (Subset of ( CQC-WFF R1 ));
let R18 being non  empty set;
let R19 being (interpretation of R1 , R18);
let R20 being (Element of ( Valuations_in (R1 , R18) ));
pred R19 , R20 |= R17
means
:L281: (for R11 being (Element of ( CQC-WFF R1 )) holds (R11 in R17 implies R19 , R20 |= R11))
;end;
definition
let R1 being QC-alphabet;
let R17 being (Subset of ( CQC-WFF R1 ));
let R11 being (Element of ( CQC-WFF R1 ));
pred R17 |= R11
means
(for R18 being non  empty set holds (for R19 being (interpretation of R1 , R18) holds (for R20 being (Element of ( Valuations_in (R1 , R18) )) holds (R19 , R20 |= R17 implies R19 , R20 |= R11))))
;end;
definition
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
pred  |= R11
means
( {} ( CQC-WFF R1 ) ) |= R11
;end;
definition
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
let R18 being non  empty set;
let R19 being (interpretation of R1 , R18);
let R20 being (Element of ( Valuations_in (R1 , R18) ));
pred R19 , R20 |= R23
means
:L285: R19 , R20 |= ( rng R23 )
;end;
definition
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
let R11 being (Element of ( CQC-WFF R1 ));
pred R23 |= R11
means
:L287: (for R18 being non  empty set holds (for R19 being (interpretation of R1 , R18) holds (for R20 being (Element of ( Valuations_in (R1 , R18) )) holds (R19 , R20 |= R23 implies R19 , R20 |= R11))))
;end;
theorem
L289: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (( Suc R23 ) is_tail_of ( Ant R23 ) implies ( Ant R23 ) |= ( Suc R23 ))))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume L290: ( Suc R23 ) is_tail_of ( Ant R23 );
L291: (ex R6 being (Element of ( NAT )) st (R6 in ( dom ( Ant R23 ) ) & ( ( Ant R23 ) . R6 ) = ( Suc R23 ))) by L290 , L36;
L292: ( Suc R23 ) in ( rng ( Ant R23 ) ) by L291 , FUNCT_1:3;
let R18 being non  empty set;
let R19 being (interpretation of R1 , R18);
let R20 being (Element of ( Valuations_in (R1 , R18) ));
assume L293: R19 , R20 |= ( rng ( Ant R23 ) );
thus L294: thesis by L293 , L292 , L281;
end;
theorem
L295: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (for R25 being (FinSequence of ( CQC-WFF R1 )) holds ((( Ant R23 ) is_Subsequence_of ( Ant R25 ) & ( Suc R23 ) = ( Suc R25 ) & ( Ant R23 ) |= ( Suc R23 )) implies ( Ant R25 ) |= ( Suc R25 )))))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
let R25 being (FinSequence of ( CQC-WFF R1 ));
assume that
L296: ( Ant R23 ) is_Subsequence_of ( Ant R25 )
and
L297: (( Suc R23 ) = ( Suc R25 ) & ( Ant R23 ) |= ( Suc R23 ));
let R18 being non  empty set;
let R19 being (interpretation of R1 , R18);
let R20 being (Element of ( Valuations_in (R1 , R18) ));
assume that
L298: R19 , R20 |= ( rng ( Ant R25 ) );
L299:
now
let R11 being (Element of ( CQC-WFF R1 ));
assume L300: R11 in ( rng ( Ant R23 ) );
L301: ( rng ( Ant R23 ) ) c= ( rng ( Ant R25 ) ) by L296 , L48;
thus L302: R19 , R20 |= R11 by L301 , L298 , L300 , L281;
end;
L303: R19 , R20 |= ( rng ( Ant R23 ) ) by L299 , L281;
L304: R19 , R20 |= ( Ant R23 ) by L303 , L285;
thus L305: thesis by L304 , L297 , L287;
end;
theorem
L306: (for R1 being QC-alphabet holds (for R18 being non  empty set holds (for R19 being (interpretation of R1 , R18) holds (for R20 being (Element of ( Valuations_in (R1 , R18) )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (( len R23 ) > ( 0 ) implies ((R19 , R20 |= ( Ant R23 ) & R19 , R20 |= ( Suc R23 )) iff R19 , R20 |= R23)))))))
proof
let R1 being QC-alphabet;
let R18 being non  empty set;
let R19 being (interpretation of R1 , R18);
let R20 being (Element of ( Valuations_in (R1 , R18) ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume L307: ( len R23 ) > ( 0 );
thus L308: ((R19 , R20 |= ( Ant R23 ) & R19 , R20 |= ( Suc R23 )) implies R19 , R20 |= R23)
proof
assume that
L309: R19 , R20 |= ( Ant R23 )
and
L310: R19 , R20 |= ( Suc R23 );
let R11 being (Element of ( CQC-WFF R1 ));
assume L311: R11 in ( rng R23 );
L312: R11 in ( ( rng ( Ant R23 ) ) \/ { ( Suc R23 ) } ) by L311 , L307 , L78;
L313: (R11 in ( rng ( Ant R23 ) ) or R11 in { ( Suc R23 ) }) by L312 , XBOOLE_0:def 3;
L314: R19 , R20 |= ( rng ( Ant R23 ) ) by L309 , L285;
thus L315: thesis by L314 , L310 , L313 , L281 , TARSKI:def 1;
end;

thus L316: (R19 , R20 |= R23 implies (R19 , R20 |= ( Ant R23 ) & R19 , R20 |= ( Suc R23 )))
proof
assume L317: R19 , R20 |= ( rng R23 );
thus L318: R19 , R20 |= ( rng ( Ant R23 ) )
proof
L319: ( rng ( Ant R23 ) ) c= ( ( rng ( Ant R23 ) ) \/ { ( Suc R23 ) } ) by XBOOLE_1:7;
let R11 being (Element of ( CQC-WFF R1 ));
assume L320: R11 in ( rng ( Ant R23 ) );
L321: R11 in ( ( rng ( Ant R23 ) ) \/ { ( Suc R23 ) } ) by L320 , L319;
L322: R11 in ( rng R23 ) by L321 , L307 , L78;
thus L323: thesis by L322 , L317 , L281;
end;

L324: ( ( 0 ) + 1 ) <= ( len R23 ) by L307 , NAT_1:13;
L325: ( len R23 ) in ( dom R23 ) by L324 , FINSEQ_3:25;
L326: ( Suc R23 ) = ( R23 . ( len R23 ) ) by L307 , L24;
L327: ( Suc R23 ) in ( rng R23 ) by L326 , L325 , FUNCT_1:3;
thus L328: R19 , R20 |= ( Suc R23 ) by L327 , L317 , L281;
end;

end;
theorem
L317: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (for R25 being (FinSequence of ( CQC-WFF R1 )) holds ((( len R23 ) > 1 & ( len R25 ) > 1 & ( Ant ( Ant R23 ) ) = ( Ant ( Ant R25 ) ) & ( 'not' ( Suc ( Ant R23 ) ) ) = ( Suc ( Ant R25 ) ) & ( Suc R23 ) = ( Suc R25 ) & ( Ant R23 ) |= ( Suc R23 ) & ( Ant R25 ) |= ( Suc R25 )) implies ( Ant ( Ant R23 ) ) |= ( Suc R23 )))))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
let R25 being (FinSequence of ( CQC-WFF R1 ));
assume that
L318: ( len R23 ) > 1
and
L319: ( len R25 ) > 1
and
L320: ( Ant ( Ant R23 ) ) = ( Ant ( Ant R25 ) )
and
L321: ( 'not' ( Suc ( Ant R23 ) ) ) = ( Suc ( Ant R25 ) )
and
L322: ( Suc R23 ) = ( Suc R25 )
and
L323: ( Ant R23 ) |= ( Suc R23 )
and
L324: ( Ant R25 ) |= ( Suc R25 );
let R18 being non  empty set;
let R19 being (interpretation of R1 , R18);
let R20 being (Element of ( Valuations_in (R1 , R18) ));
assume that
L325: R19 , R20 |= ( Ant ( Ant R23 ) );
L326: ( len ( Ant R25 ) ) > ( 0 ) by L319 , L107;
L327:
now
assume L328: (not R19 , R20 |= ( Suc ( Ant R23 ) ));
L329: R19 , R20 |= ( Suc ( Ant R25 ) ) by L328 , L321 , VALUAT_1:17;
L330: R19 , R20 |= ( Ant R25 ) by L329 , L320 , L326 , L325 , L306;
thus L331: thesis by L330 , L322 , L324 , L287;
end;
L332: ( len ( Ant R23 ) ) > ( 0 ) by L318 , L107;
L333:
now
assume L334: R19 , R20 |= ( Suc ( Ant R23 ) );
L335: R19 , R20 |= ( Ant R23 ) by L334 , L332 , L325 , L306;
thus L336: thesis by L335 , L323 , L287;
end;
thus L337: thesis by L333 , L327;
end;
theorem
L338: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (for R25 being (FinSequence of ( CQC-WFF R1 )) holds ((( len R23 ) > 1 & ( Ant R23 ) = ( Ant R25 ) & ( 'not' R11 ) = ( Suc ( Ant R23 ) ) & ( 'not' ( Suc R23 ) ) = ( Suc R25 ) & ( Ant R23 ) |= ( Suc R23 ) & ( Ant R25 ) |= ( Suc R25 )) implies ( Ant ( Ant R23 ) ) |= R11)))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
let R25 being (FinSequence of ( CQC-WFF R1 ));
assume that
L339: ( len R23 ) > 1
and
L340: ( Ant R23 ) = ( Ant R25 )
and
L341: ( 'not' R11 ) = ( Suc ( Ant R23 ) )
and
L342: (( 'not' ( Suc R23 ) ) = ( Suc R25 ) & ( Ant R23 ) |= ( Suc R23 ) & ( Ant R25 ) |= ( Suc R25 ));
L343: ( len ( Ant R23 ) ) > ( 0 ) by L339 , L107;
L344:
now
given R18 being non  empty set , R19 being (interpretation of R1 , R18) , R20 being (Element of ( Valuations_in (R1 , R18) )) such that
L345: R19 , R20 |= ( Ant R23 );

L346: (R19 , R20 |= ( Suc R23 ) & R19 , R20 |= ( 'not' ( Suc R23 ) )) by L340 , L342 , L345 , L287;
thus L347: contradiction by L346 , VALUAT_1:17;
end;
let R18 being non  empty set;
let R19 being (interpretation of R1 , R18);
let R20 being (Element of ( Valuations_in (R1 , R18) ));
assume that
L348: R19 , R20 |= ( Ant ( Ant R23 ) );
L349:
now
assume L350: R19 , R20 |= ( Suc ( Ant R23 ) );
L351: R19 , R20 |= ( Ant R23 ) by L350 , L343 , L348 , L306;
thus L352: contradiction by L351 , L344;
end;
thus L353: thesis by L349 , L341 , VALUAT_1:17;
end;
theorem
L354: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (for R25 being (FinSequence of ( CQC-WFF R1 )) holds ((( Ant R23 ) = ( Ant R25 ) & ( Ant R23 ) |= ( Suc R23 ) & ( Ant R25 ) |= ( Suc R25 )) implies ( Ant R23 ) |= ( ( Suc R23 ) '&' ( Suc R25 ) )))))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
let R25 being (FinSequence of ( CQC-WFF R1 ));
assume L355: (( Ant R23 ) = ( Ant R25 ) & ( Ant R23 ) |= ( Suc R23 ) & ( Ant R25 ) |= ( Suc R25 ));
let R18 being non  empty set;
let R19 being (interpretation of R1 , R18);
let R20 being (Element of ( Valuations_in (R1 , R18) ));
assume L356: R19 , R20 |= ( Ant R23 );
L357: (R19 , R20 |= ( Suc R23 ) & R19 , R20 |= ( Suc R25 )) by L356 , L355 , L287;
thus L358: thesis by L357 , VALUAT_1:18;
end;
theorem
L359: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (( Ant R23 ) |= ( R11 '&' R12 ) implies ( Ant R23 ) |= R11)))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume L360: ( Ant R23 ) |= ( R11 '&' R12 );
let R18 being non  empty set;
let R19 being (interpretation of R1 , R18);
let R20 being (Element of ( Valuations_in (R1 , R18) ));
assume L361: R19 , R20 |= ( Ant R23 );
L362: R19 , R20 |= ( R11 '&' R12 ) by L361 , L360 , L287;
thus L363: thesis by L362 , VALUAT_1:18;
end;
theorem
L364: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (( Ant R23 ) |= ( R11 '&' R12 ) implies ( Ant R23 ) |= R12)))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume L365: ( Ant R23 ) |= ( R11 '&' R12 );
let R18 being non  empty set;
let R19 being (interpretation of R1 , R18);
let R20 being (Element of ( Valuations_in (R1 , R18) ));
assume L366: R19 , R20 |= ( Ant R23 );
L367: R19 , R20 |= ( R11 '&' R12 ) by L366 , L365 , L287;
thus L368: thesis by L367 , VALUAT_1:18;
end;
theorem
L369: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R18 being non  empty set holds (for R19 being (interpretation of R1 , R18) holds (for R20 being (Element of ( Valuations_in (R1 , R18) )) holds (for R22 being (CQC_Substitution of R1) holds (R19 , R20 |= [ R11 , R22 ] iff R19 , R20 |= R11)))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R18 being non  empty set;
let R19 being (interpretation of R1 , R18);
let R20 being (Element of ( Valuations_in (R1 , R18) ));
let R22 being (CQC_Substitution of R1);
L370: (R19 , R20 |= [ R11 , R22 ] iff R19 , R20 |= ( [ R11 , R22 ] `1 )) by SUBLEMMA:def 2;
thus L371: thesis by L370;
end;
theorem
L372: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R14 being (bound_QC-variable of R1) holds (for R15 being (bound_QC-variable of R1) holds (for R18 being non  empty set holds (for R19 being (interpretation of R1 , R18) holds (for R20 being (Element of ( Valuations_in (R1 , R18) )) holds (R19 , R20 |= ( R11 . (R14 , R15) ) iff (ex R32 being (Element of R18) st (( R20 . R15 ) = R32 & R19 , ( R20 . ( R14 | R32 ) ) |= R11))))))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R14 being (bound_QC-variable of R1);
let R15 being (bound_QC-variable of R1);
let R18 being non  empty set;
let R19 being (interpretation of R1 , R18);
let R20 being (Element of ( Valuations_in (R1 , R18) ));
L373: (R19 , R20 |= ( CQC_Sub [ R11 , ( Sbst (R14 , R15) ) ] ) iff R19 , ( R20 . ( Val_S (R20 , [ R11 , ( Sbst (R14 , R15) ) ]) ) ) |= [ R11 , ( Sbst (R14 , R15) ) ]) by SUBLEMMA:89;
L374: (R19 , ( R20 . ( Val_S (R20 , [ R11 , ( Sbst (R14 , R15) ) ]) ) ) |= [ R11 , ( Sbst (R14 , R15) ) ] iff R19 , ( R20 . ( Val_S (R20 , [ R11 , ( Sbst (R14 , R15) ) ]) ) ) |= R11) by L369;
L375: ( Val_S (R20 , [ R11 , ( Sbst (R14 , R15) ) ]) ) = ( R20 * ( @ ( [ R11 , ( Sbst (R14 , R15) ) ] `2 ) ) ) by SUBLEMMA:def 1;
L376: ( Val_S (R20 , [ R11 , ( Sbst (R14 , R15) ) ]) ) = ( R20 * ( @ ( Sbst (R14 , R15) ) ) ) by L375;
L377: ( Val_S (R20 , [ R11 , ( Sbst (R14 , R15) ) ]) ) = ( R20 * ( R14 .--> R15 ) ) by L376 , SUBSTUT1:def 2;
L378: R15 in ( bound_QC-variables R1 );
L379: R15 in ( dom R20 ) by L378 , SUBLEMMA:58;
L380: ( Val_S (R20 , [ R11 , ( Sbst (R14 , R15) ) ]) ) = ( R14 .--> ( R20 . R15 ) ) by L379 , L377 , FUNCOP_1:17;
thus L381: thesis by L380 , L373 , L374 , SUBSTUT2:def 1;
end;
theorem
L382: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R14 being (bound_QC-variable of R1) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ((( Suc R23 ) = ( All (R14 , R11) ) & ( Ant R23 ) |= ( Suc R23 )) implies (for R15 being (bound_QC-variable of R1) holds ( Ant R23 ) |= ( R11 . (R14 , R15) )))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R14 being (bound_QC-variable of R1);
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume L383: (( Suc R23 ) = ( All (R14 , R11) ) & ( Ant R23 ) |= ( Suc R23 ));
let R15 being (bound_QC-variable of R1);
let R18 being non  empty set;
let R19 being (interpretation of R1 , R18);
let R20 being (Element of ( Valuations_in (R1 , R18) ));
assume L384: R19 , R20 |= ( Ant R23 );
L385: R19 , R20 |= ( All (R14 , R11) ) by L384 , L383 , L287;
L386: (ex R32 being (Element of R18) st (( R20 . R15 ) = R32 & R19 , ( R20 . ( R14 | R32 ) ) |= R11))
proof
take ( R20 . R15 );
thus L387: thesis by L385 , SUBLEMMA:50;
end;
thus L388: thesis by L386 , L372;
end;
theorem
L389: (for R1 being QC-alphabet holds (for R14 being (bound_QC-variable of R1) holds (for R18 being non  empty set holds (for R20 being (Element of ( Valuations_in (R1 , R18) )) holds (for R32 being (Element of R18) holds (for B6 being set holds (B6 c= ( bound_QC-variables R1 ) implies ((not R14 in B6) implies ( ( R20 . ( R14 | R32 ) ) | B6 ) = ( R20 | B6 )))))))))
proof
let R1 being QC-alphabet;
let R14 being (bound_QC-variable of R1);
let R18 being non  empty set;
let R20 being (Element of ( Valuations_in (R1 , R18) ));
let R32 being (Element of R18);
let C29 being set;
assume that
L390: C29 c= ( bound_QC-variables R1 )
and
L391: (not R14 in C29);
set D21 = ( R20 | C29 );
set D22 = ( ( R20 . ( R14 | R32 ) ) | C29 );
L392: ( dom D22 ) = ( dom D21 ) by L390 , SUBLEMMA:63;
L393:
now
let R3 being set;
assume that
L394: R3 in ( dom D22 );
L395: R14 <> R3 by L391 , L394;
L396: ( ( R20 . ( R14 | R32 ) ) . R3 ) = ( R20 . R3 ) by L395 , SUBLEMMA:48;
L397: ( ( R20 . ( R14 | R32 ) ) . R3 ) = ( D22 . R3 ) by L394 , FUNCT_1:47;
thus L398: ( D22 . R3 ) = ( D21 . R3 ) by L397 , L392 , L394 , L396 , FUNCT_1:47;
end;
thus L399: thesis by L393 , L392 , FUNCT_1:2;
end;
theorem
L400: (for R1 being QC-alphabet holds (for R18 being non  empty set holds (for R19 being (interpretation of R1 , R18) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (for R20 being (Element of ( Valuations_in (R1 , R18) )) holds (for R21 being (Element of ( Valuations_in (R1 , R18) )) holds (( R20 | ( still_not-bound_in R23 ) ) = ( R21 | ( still_not-bound_in R23 ) ) implies (R19 , R20 |= R23 implies R19 , R21 |= R23))))))))
proof
let R1 being QC-alphabet;
let R18 being non  empty set;
let R19 being (interpretation of R1 , R18);
let R23 being (FinSequence of ( CQC-WFF R1 ));
let R20 being (Element of ( Valuations_in (R1 , R18) ));
let R21 being (Element of ( Valuations_in (R1 , R18) ));
assume that
L401: ( R20 | ( still_not-bound_in R23 ) ) = ( R21 | ( still_not-bound_in R23 ) );
assume L402: R19 , R20 |= R23;
L403: R19 , R20 |= ( rng R23 ) by L402 , L285;
let R11 being (Element of ( CQC-WFF R1 ));
assume that
L404: R11 in ( rng R23 );
L405: (ex B7 being Nat st (B7 in ( dom R23 ) & R11 = ( R23 . B7 ))) by L404 , FINSEQ_2:10;
L406: (for R3 being set holds (R3 in ( still_not-bound_in R11 ) implies R3 in ( still_not-bound_in R23 ))) by L405 , L251;
L407: ( still_not-bound_in R11 ) c= ( still_not-bound_in R23 ) by L406 , TARSKI:def 3;
L408: ( R20 | ( still_not-bound_in R11 ) ) = ( R21 | ( still_not-bound_in R11 ) ) by L407 , L401 , RELAT_1:153;
L409: R19 , R20 |= R11 by L403 , L404 , L281;
thus L410: thesis by L409 , L408 , SUBLEMMA:68;
end;
theorem
L411: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R14 being (bound_QC-variable of R1) holds (for R15 being (bound_QC-variable of R1) holds (for R18 being non  empty set holds (for R20 being (Element of ( Valuations_in (R1 , R18) )) holds (for R32 being (Element of R18) holds ((not R15 in ( still_not-bound_in ( All (R14 , R11) ) )) implies ( ( ( R20 . ( R15 | R32 ) ) . ( R14 | R32 ) ) | ( still_not-bound_in R11 ) ) = ( ( R20 . ( R14 | R32 ) ) | ( still_not-bound_in R11 ) )))))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R14 being (bound_QC-variable of R1);
let R15 being (bound_QC-variable of R1);
let R18 being non  empty set;
let R20 being (Element of ( Valuations_in (R1 , R18) ));
let R32 being (Element of R18);
L412: ( ( R20 . ( R15 | R32 ) ) . ( R14 | R32 ) ) = ( R20 +* ( ( R15 | R32 ) +* ( R14 | R32 ) ) ) by FUNCT_4:14;
assume L413: (not R15 in ( still_not-bound_in ( All (R14 , R11) ) ));
L414:
now
assume L415: R14 <> R15;
L416: (( dom ( R14 | R32 ) ) = { R14 } & ( dom ( R15 | R32 ) ) = { R15 }) by SUBLEMMA:58;
L417: ( ( R20 . ( R15 | R32 ) ) . ( R14 | R32 ) ) = ( R20 +* ( ( R14 | R32 ) +* ( R15 | R32 ) ) ) by L416 , L412 , L415 , FUNCT_4:35 , ZFMISC_1:11;
L418: ( ( R20 . ( R15 | R32 ) ) . ( R14 | R32 ) ) = ( ( R20 +* ( R14 | R32 ) ) +* ( R15 | R32 ) ) by L417 , FUNCT_4:14;
L419: (not R15 in ( ( still_not-bound_in R11 ) \ { R14 } )) by L413 , QC_LANG3:12;
L420: (not R15 in ( still_not-bound_in R11 )) by L419 , L415 , ZFMISC_1:56;
thus L421: thesis by L420 , L418 , L389;
end;
thus L422: thesis by L414 , L412;
end;
theorem
L423: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R14 being (bound_QC-variable of R1) holds (for R15 being (bound_QC-variable of R1) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ((( Suc R23 ) = ( R11 . (R14 , R15) ) & ( Ant R23 ) |= ( Suc R23 ) & (not R15 in ( still_not-bound_in ( Ant R23 ) )) & (not R15 in ( still_not-bound_in ( All (R14 , R11) ) ))) implies ( Ant R23 ) |= ( All (R14 , R11) )))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R14 being (bound_QC-variable of R1);
let R15 being (bound_QC-variable of R1);
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume that
L424: (( Suc R23 ) = ( R11 . (R14 , R15) ) & ( Ant R23 ) |= ( Suc R23 ))
and
L425: (not R15 in ( still_not-bound_in ( Ant R23 ) ))
and
L426: (not R15 in ( still_not-bound_in ( All (R14 , R11) ) ));
let R18 being non  empty set;
let R19 being (interpretation of R1 , R18);
let R20 being (Element of ( Valuations_in (R1 , R18) ));
assume that
L427: R19 , R20 |= ( Ant R23 );
L428: (for R32 being (Element of R18) holds R19 , ( R20 . ( R14 | R32 ) ) |= R11)
proof
let R32 being (Element of R18);
L429: ( ( R20 . ( R15 | R32 ) ) | ( still_not-bound_in ( Ant R23 ) ) ) = ( R20 | ( still_not-bound_in ( Ant R23 ) ) ) by L425 , L389;
L430: R19 , ( R20 . ( R15 | R32 ) ) |= ( Ant R23 ) by L429 , L427 , L400;
L431: R19 , ( R20 . ( R15 | R32 ) ) |= ( R11 . (R14 , R15) ) by L430 , L424 , L287;
L432: (ex B8 being (Element of R18) st (( ( R20 . ( R15 | R32 ) ) . R15 ) = B8 & R19 , ( ( R20 . ( R15 | R32 ) ) . ( R14 | B8 ) ) |= R11)) by L431 , L372;
L433: R19 , ( ( R20 . ( R15 | R32 ) ) . ( R14 | R32 ) ) |= R11 by L432 , SUBLEMMA:49;
L434: ( ( ( R20 . ( R15 | R32 ) ) . ( R14 | R32 ) ) | ( still_not-bound_in R11 ) ) = ( ( R20 . ( R14 | R32 ) ) | ( still_not-bound_in R11 ) ) by L426 , L411;
thus L435: thesis by L434 , L433 , SUBLEMMA:68;
end;
thus L436: thesis by L428 , SUBLEMMA:50;
end;
theorem
L437: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ( Ant ( R23 ^ <* ( VERUM R1 ) *> ) ) |= ( Suc ( R23 ^ <* ( VERUM R1 ) *> ) )))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
let R18 being non  empty set;
let R19 being (interpretation of R1 , R18);
let R20 being (Element of ( Valuations_in (R1 , R18) ));
assume that
L438: R19 , R20 |= ( Ant ( R23 ^ <* ( VERUM R1 ) *> ) );
L439: ( Suc ( R23 ^ <* ( VERUM R1 ) *> ) ) = ( VERUM R1 ) by L111;
thus L440: thesis by L439 , VALUAT_1:32;
end;
theorem
L441: (for R1 being QC-alphabet holds (for R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) holds (for B9 being Nat holds ((1 <= B9 & B9 <= ( len R30 )) implies (( ( R30 . B9 ) `2 ) = ( 0 ) or ( ( R30 . B9 ) `2 ) = 1 or ( ( R30 . B9 ) `2 ) = 2 or ( ( R30 . B9 ) `2 ) = 3 or ( ( R30 . B9 ) `2 ) = 4 or ( ( R30 . B9 ) `2 ) = 5 or ( ( R30 . B9 ) `2 ) = 6 or ( ( R30 . B9 ) `2 ) = 7 or ( ( R30 . B9 ) `2 ) = 8 or ( ( R30 . B9 ) `2 ) = 9)))))
proof
let R1 being QC-alphabet;
let R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]);
let C30 being Nat;
assume L442: (1 <= C30 & C30 <= ( len R30 ));
L443: C30 in ( dom R30 ) by L442 , FINSEQ_3:25;
L444: ( R30 . C30 ) in ( rng R30 ) by L443 , FUNCT_1:def 3;
L445: ( ( R30 . C30 ) `2 ) in { R8 where R8 is (Element of ( NAT )) : R8 <= 9 } by L444 , CQC_THE1:def 3 , MCART_1:10;
L446: (ex R8 being (Element of ( NAT )) st (R8 = ( ( R30 . C30 ) `2 ) & R8 <= 9)) by L445;
thus L447: thesis by L446 , NAT_1:33;
end;
L448: (for R1 being QC-alphabet holds (for R10 being (Element of ( NAT )) holds (for R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) holds ((1 <= R10 & R10 <= ( len R30 )) implies ( ( R30 . R10 ) `1 ) is (FinSequence of ( CQC-WFF R1 ))))))
proof
let R1 being QC-alphabet;
let R10 being (Element of ( NAT ));
let R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]);
assume L449: (1 <= R10 & R10 <= ( len R30 ));
L450: R10 in ( dom R30 ) by L449 , FINSEQ_3:25;
L451: ( R30 . R10 ) in ( rng R30 ) by L450 , FUNCT_1:def 3;
L452: ( ( R30 . R10 ) `1 ) in ( set_of_CQC-WFF-seq R1 ) by L451 , MCART_1:10;
thus L453: thesis by L452 , L263;
end;
theorem
L454: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R17 being (Subset of ( CQC-WFF R1 )) holds (R11 is_formal_provable_from R17 implies R17 |= R11))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R17 being (Subset of ( CQC-WFF R1 ));
assume L455: R11 is_formal_provable_from R17;
consider R23 being (FinSequence of ( CQC-WFF R1 )) such that L456: ( rng ( Ant R23 ) ) c= R17 and L457: ( Suc R23 ) = R11 and L458:  |- R23 by L455 , L279;
consider R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) such that L459: R30 is  a_proof and L460: R23 = ( ( R30 . ( len R30 ) ) `1 ) by L458 , L277;
L461: R30 <> ( {} ) by L459 , L275;
L462: 1 <= ( len R30 ) by L461 , FINSEQ_1:20;
defpred S3[ (Element of ( NAT )) ] means ($1 <= ( len R30 ) implies (for R9 being (Element of ( NAT )) holds ((1 <= R9 & R9 <= $1) implies (ex R25 being (FinSequence of ( CQC-WFF R1 )) st (R25 = ( ( R30 . R9 ) `1 ) & ( Ant R25 ) |= ( Suc R25 ))))));
L463: (for R8 being (Element of ( NAT )) holds (S3[ R8 ] implies S3[ ( R8 + 1 ) ]))
proof
let R8 being (Element of ( NAT ));
assume that
L464: S3[ R8 ];
assume L465: ( R8 + 1 ) <= ( len R30 );
L466: R8 <= ( R8 + 1 ) by NAT_1:11;
let R9 being (Element of ( NAT ));
assume that
L467: 1 <= R9
and
L468: R9 <= ( R8 + 1 );
L469: R9 <= ( len R30 ) by L465 , L468 , XXREAL_0:2;
L470:
now
assume L471: R9 = ( R8 + 1 );
take D23 = ( ( R30 . R9 ) `1 );
thus L472: D23 = ( ( R30 . R9 ) `1 );
reconsider D24 = ( ( R30 . R9 ) `1 ) as (FinSequence of ( CQC-WFF R1 )) by L467 , L469 , L448;
L473: R30 , R9 is_a_correct_step  by L459 , L467 , L469 , L275;
L474:
now
per cases  by L467 , L469 , L441;
suppose L475: ( ( R30 . R9 ) `2 ) = ( 0 );

L476: (ex R23 being (FinSequence of ( CQC-WFF R1 )) st (( Suc R23 ) is_tail_of ( Ant R23 ) & ( ( R30 . R9 ) `1 ) = R23)) by L475 , L473 , L273;
thus L477: ( Ant D24 ) |= ( Suc D24 ) by L476 , L289;
end;
suppose L478: ( ( R30 . R9 ) `2 ) = 1;

L479: (ex R23 being (FinSequence of ( CQC-WFF R1 )) st D24 = ( R23 ^ <* ( VERUM R1 ) *> )) by L478 , L473 , L273;
thus L480: ( Ant D24 ) |= ( Suc D24 ) by L479 , L437;
end;
suppose L481: ( ( R30 . R9 ) `2 ) = 2;

consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R24 being (FinSequence of ( CQC-WFF R1 )) such that L482: 1 <= R6 and L483: R6 < R9 and L484: (( Ant R23 ) is_Subsequence_of ( Ant R24 ) & ( Suc R23 ) = ( Suc R24 ) & ( ( R30 . R6 ) `1 ) = R23 & ( ( R30 . R9 ) `1 ) = R24) by L481 , L473 , L273;
L485: R6 <= R8 by L471 , L483 , NAT_1:13;
L486: (ex R26 being (FinSequence of ( CQC-WFF R1 )) st (R26 = ( ( R30 . R6 ) `1 ) & ( Ant R26 ) |= ( Suc R26 ))) by L485 , L464 , L465 , L466 , L482 , XXREAL_0:2;
thus L487: ( Ant D24 ) |= ( Suc D24 ) by L486 , L484 , L295;
end;
suppose L488: ( ( R30 . R9 ) `2 ) = 3;

consider R6 being (Element of ( NAT )), R7 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R24 being (FinSequence of ( CQC-WFF R1 )) such that L489: 1 <= R6 and L490: R6 < R9 and L491: 1 <= R7 and L492: R7 < R6 and L493: (( len R23 ) > 1 & ( len R24 ) > 1 & ( Ant ( Ant R23 ) ) = ( Ant ( Ant R24 ) ) & ( 'not' ( Suc ( Ant R23 ) ) ) = ( Suc ( Ant R24 ) ) & ( Suc R23 ) = ( Suc R24 ) & R23 = ( ( R30 . R7 ) `1 ) & R24 = ( ( R30 . R6 ) `1 )) and L494: ( ( Ant ( Ant R23 ) ) ^ <* ( Suc R23 ) *> ) = ( ( R30 . R9 ) `1 ) by L488 , L473 , L273;
L495: (( Ant D24 ) = ( Ant ( Ant R23 ) ) & ( Suc D24 ) = ( Suc R23 )) by L494 , L111;
L496: R6 <= R8 by L471 , L490 , NAT_1:13;
L497: R7 <= R8 by L496 , L492 , XXREAL_0:2;
L498: (ex R27 being (FinSequence of ( CQC-WFF R1 )) st (R27 = ( ( R30 . R7 ) `1 ) & ( Ant R27 ) |= ( Suc R27 ))) by L497 , L464 , L465 , L466 , L491 , XXREAL_0:2;
L499: (ex R26 being (FinSequence of ( CQC-WFF R1 )) st (R26 = ( ( R30 . R6 ) `1 ) & ( Ant R26 ) |= ( Suc R26 ))) by L464 , L465 , L466 , L489 , L496 , XXREAL_0:2;
thus L500: ( Ant D24 ) |= ( Suc D24 ) by L499 , L493 , L498 , L495 , L317;
end;
suppose L501: ( ( R30 . R9 ) `2 ) = 4;

consider R6 being (Element of ( NAT )), R7 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R24 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )) such that L502: 1 <= R6 and L503: R6 < R9 and L504: 1 <= R7 and L505: R7 < R6 and L506: (( len R23 ) > 1 & ( Ant R23 ) = ( Ant R24 ) & ( Suc ( Ant R23 ) ) = ( 'not' R11 ) & ( 'not' ( Suc R23 ) ) = ( Suc R24 ) & R23 = ( ( R30 . R7 ) `1 ) & R24 = ( ( R30 . R6 ) `1 )) and L507: ( ( Ant ( Ant R23 ) ) ^ <* R11 *> ) = ( ( R30 . R9 ) `1 ) by L501 , L473 , L273;
L508: (( Ant D24 ) = ( Ant ( Ant R23 ) ) & ( Suc D24 ) = R11) by L507 , L111;
L509: R6 <= R8 by L471 , L503 , NAT_1:13;
L510: R7 <= R8 by L509 , L505 , XXREAL_0:2;
L511: (ex R27 being (FinSequence of ( CQC-WFF R1 )) st (R27 = ( ( R30 . R7 ) `1 ) & ( Ant R27 ) |= ( Suc R27 ))) by L510 , L464 , L465 , L466 , L504 , XXREAL_0:2;
L512: (ex R26 being (FinSequence of ( CQC-WFF R1 )) st (R26 = ( ( R30 . R6 ) `1 ) & ( Ant R26 ) |= ( Suc R26 ))) by L464 , L465 , L466 , L502 , L509 , XXREAL_0:2;
thus L513: ( Ant D24 ) |= ( Suc D24 ) by L512 , L506 , L511 , L508 , L338;
end;
suppose L514: ( ( R30 . R9 ) `2 ) = 5;

consider R6 being (Element of ( NAT )), R7 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R24 being (FinSequence of ( CQC-WFF R1 )) such that L515: 1 <= R6 and L516: R6 < R9 and L517: 1 <= R7 and L518: R7 < R6 and L519: (( Ant R23 ) = ( Ant R24 ) & R23 = ( ( R30 . R7 ) `1 ) & R24 = ( ( R30 . R6 ) `1 )) and L520: ( ( Ant R23 ) ^ <* ( ( Suc R23 ) '&' ( Suc R24 ) ) *> ) = ( ( R30 . R9 ) `1 ) by L514 , L473 , L273;
L521: (( Ant D24 ) = ( Ant R23 ) & ( Suc D24 ) = ( ( Suc R23 ) '&' ( Suc R24 ) )) by L520 , L111;
L522: R6 <= R8 by L471 , L516 , NAT_1:13;
L523: R7 <= R8 by L522 , L518 , XXREAL_0:2;
L524: (ex R27 being (FinSequence of ( CQC-WFF R1 )) st (R27 = ( ( R30 . R7 ) `1 ) & ( Ant R27 ) |= ( Suc R27 ))) by L523 , L464 , L465 , L466 , L517 , XXREAL_0:2;
L525: (ex R26 being (FinSequence of ( CQC-WFF R1 )) st (R26 = ( ( R30 . R6 ) `1 ) & ( Ant R26 ) |= ( Suc R26 ))) by L464 , L465 , L466 , L515 , L522 , XXREAL_0:2;
thus L526: ( Ant D24 ) |= ( Suc D24 ) by L525 , L519 , L524 , L521 , L354;
end;
suppose L527: ( ( R30 . R9 ) `2 ) = 6;

consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )), R12 being (Element of ( CQC-WFF R1 )) such that L528: 1 <= R6 and L529: R6 < R9 and L530: (( R11 '&' R12 ) = ( Suc R23 ) & R23 = ( ( R30 . R6 ) `1 )) and L531: ( ( Ant R23 ) ^ <* R11 *> ) = ( ( R30 . R9 ) `1 ) by L527 , L473 , L273;
L532: R6 <= R8 by L471 , L529 , NAT_1:13;
L533: (ex R26 being (FinSequence of ( CQC-WFF R1 )) st (R26 = ( ( R30 . R6 ) `1 ) & ( Ant R26 ) |= ( Suc R26 ))) by L532 , L464 , L465 , L466 , L528 , XXREAL_0:2;
L534: (( Ant D24 ) = ( Ant R23 ) & ( Suc D24 ) = R11) by L531 , L111;
thus L535: ( Ant D24 ) |= ( Suc D24 ) by L534 , L530 , L533 , L359;
end;
suppose L536: ( ( R30 . R9 ) `2 ) = 7;

consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )), R12 being (Element of ( CQC-WFF R1 )) such that L537: 1 <= R6 and L538: R6 < R9 and L539: (( R11 '&' R12 ) = ( Suc R23 ) & R23 = ( ( R30 . R6 ) `1 )) and L540: ( ( Ant R23 ) ^ <* R12 *> ) = ( ( R30 . R9 ) `1 ) by L536 , L473 , L273;
L541: R6 <= R8 by L471 , L538 , NAT_1:13;
L542: (ex R26 being (FinSequence of ( CQC-WFF R1 )) st (R26 = ( ( R30 . R6 ) `1 ) & ( Ant R26 ) |= ( Suc R26 ))) by L541 , L464 , L465 , L466 , L537 , XXREAL_0:2;
L543: (( Ant D24 ) = ( Ant R23 ) & ( Suc D24 ) = R12) by L540 , L111;
thus L544: ( Ant D24 ) |= ( Suc D24 ) by L543 , L539 , L542 , L364;
end;
suppose L545: ( ( R30 . R9 ) `2 ) = 8;

consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )), R14 being (bound_QC-variable of R1), R15 being (bound_QC-variable of R1) such that L546: 1 <= R6 and L547: R6 < R9 and L548: (( Suc R23 ) = ( All (R14 , R11) ) & R23 = ( ( R30 . R6 ) `1 )) and L549: ( ( Ant R23 ) ^ <* ( R11 . (R14 , R15) ) *> ) = ( ( R30 . R9 ) `1 ) by L545 , L473 , L273;
L550: R6 <= R8 by L471 , L547 , NAT_1:13;
L551: (ex R26 being (FinSequence of ( CQC-WFF R1 )) st (R26 = ( ( R30 . R6 ) `1 ) & ( Ant R26 ) |= ( Suc R26 ))) by L550 , L464 , L465 , L466 , L546 , XXREAL_0:2;
L552: (( Ant D24 ) = ( Ant R23 ) & ( Suc D24 ) = ( R11 . (R14 , R15) )) by L549 , L111;
thus L553: ( Ant D24 ) |= ( Suc D24 ) by L552 , L548 , L551 , L382;
end;
suppose L554: ( ( R30 . R9 ) `2 ) = 9;

consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )), R14 being (bound_QC-variable of R1), R15 being (bound_QC-variable of R1) such that L555: 1 <= R6 and L556: R6 < R9 and L557: (( Suc R23 ) = ( R11 . (R14 , R15) ) & (not R15 in ( still_not-bound_in ( Ant R23 ) )) & (not R15 in ( still_not-bound_in ( All (R14 , R11) ) )) & R23 = ( ( R30 . R6 ) `1 )) and L558: ( ( Ant R23 ) ^ <* ( All (R14 , R11) ) *> ) = ( ( R30 . R9 ) `1 ) by L554 , L473 , L273;
L559: R6 <= R8 by L471 , L556 , NAT_1:13;
L560: (ex R26 being (FinSequence of ( CQC-WFF R1 )) st (R26 = ( ( R30 . R6 ) `1 ) & ( Ant R26 ) |= ( Suc R26 ))) by L559 , L464 , L465 , L466 , L555 , XXREAL_0:2;
L561: (( Ant D24 ) = ( Ant R23 ) & ( Suc D24 ) = ( All (R14 , R11) )) by L558 , L111;
thus L562: ( Ant D24 ) |= ( Suc D24 ) by L561 , L557 , L560 , L423;
end;
end;
thus L564: thesis by L474;
end;
L565: (R9 <= R8 implies (ex R25 being (FinSequence of ( CQC-WFF R1 )) st (R25 = ( ( R30 . R9 ) `1 ) & ( Ant R25 ) |= ( Suc R25 )))) by L464 , L465 , L467 , L466 , XXREAL_0:2;
thus L566: thesis by L565 , L468 , L470 , NAT_1:8;
end;
L567: S3[ ( 0 ) ];
L568: (for R8 being (Element of ( NAT )) holds S3[ R8 ]) from NAT_1:sch 1(L567 , L463);
consider R25 being (FinSequence of ( CQC-WFF R1 )) such that L569: R25 = ( ( R30 . ( len R30 ) ) `1 ) and L570: ( Ant R25 ) |= ( Suc R25 ) by L568 , L462;
let R18 being non  empty set;
let R19 being (interpretation of R1 , R18);
let R20 being (Element of ( Valuations_in (R1 , R18) ));
assume L571: R19 , R20 |= R17;
L572: (for R11 being (Element of ( CQC-WFF R1 )) holds (R11 in ( rng ( Ant R23 ) ) implies R19 , R20 |= R11)) by L571 , L456 , L281;
L573: R19 , R20 |= ( rng ( Ant R23 ) ) by L572 , L281;
L574: R19 , R20 |= ( Ant R25 ) by L573 , L460 , L569 , L285;
thus L575: thesis by L574 , L457 , L460 , L569 , L570 , L287;
end;
begin
theorem
L576: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (( Suc R23 ) is_tail_of ( Ant R23 ) implies  |- R23)))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
set D25 = <* [ R23 , ( 0 ) ] *>;
L577: ( rng D25 ) = { [ R23 , ( 0 ) ] } by FINSEQ_1:38;
L578:
now
let C31 being set;
assume L579: C31 in ( rng D25 );
L580: C31 = [ R23 , ( 0 ) ] by L579 , L577 , TARSKI:def 1;
L581: R23 in ( set_of_CQC-WFF-seq R1 ) by L263;
thus L582: C31 in [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :] by L581 , L580 , CQC_THE1:21 , ZFMISC_1:87;
end;
L583: ( rng D25 ) c= [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :] by L578 , TARSKI:def 3;
reconsider D26 = D25 as (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) by L583 , FINSEQ_1:def 4;
assume L584: ( Suc R23 ) is_tail_of ( Ant R23 );
L585:
now
let C32 being Nat;
assume that
L586: 1 <= C32
and
L587: C32 <= ( len D26 );
L588: C32 <= 1 by L587 , FINSEQ_1:39;
L589: C32 = 1 by L588 , L586 , XXREAL_0:1;
L590: ( D26 . C32 ) = [ R23 , ( 0 ) ] by L589 , FINSEQ_1:40;
L591: (( ( D26 . C32 ) `1 ) = R23 & ( ( D26 . C32 ) `2 ) = ( 0 )) by L590 , MCART_1:7;
thus L592: D26 , C32 is_a_correct_step  by L591 , L584 , L273;
end;
L593: D26 is  a_proof by L585 , L275;
L594: ( D26 . 1 ) = [ R23 , ( 0 ) ] by FINSEQ_1:40;
L595: ( D26 . ( len D26 ) ) = [ R23 , ( 0 ) ] by L594 , FINSEQ_1:40;
L596: ( ( D26 . ( len D26 ) ) `1 ) = R23 by L595 , MCART_1:7;
thus L597: thesis by L596 , L593 , L277;
end;
theorem
L598: (for R1 being QC-alphabet holds (for R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) holds (for R31 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) holds (for B10 being Nat holds ((1 <= B10 & B10 <= ( len R30 )) implies (R30 , B10 is_a_correct_step  iff ( R30 ^ R31 ) , B10 is_a_correct_step ))))))
proof
let R1 being QC-alphabet;
let R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]);
let R31 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]);
let C33 being Nat;
assume that
L599: 1 <= C33
and
L600: C33 <= ( len R30 );
L601: C33 in ( dom R30 ) by L599 , L600 , FINSEQ_3:25;
L602: ( ( R30 ^ R31 ) . C33 ) = ( R30 . C33 ) by L601 , FINSEQ_1:def 7;
L603: ( len ( R30 ^ R31 ) ) = ( ( len R30 ) + ( len R31 ) ) by FINSEQ_1:22;
L604: ( len R30 ) <= ( len ( R30 ^ R31 ) ) by L603 , NAT_1:11;
L605: C33 <= ( len ( R30 ^ R31 ) ) by L604 , L600 , XXREAL_0:2;
thus L606: (R30 , C33 is_a_correct_step  implies ( R30 ^ R31 ) , C33 is_a_correct_step )
proof
assume L607: R30 , C33 is_a_correct_step ;
per cases  by L599 , L605 , L441;
case L608: ( ( ( R30 ^ R31 ) . C33 ) `2 ) = ( 0 );
thus L609: thesis by L608 , L602 , L607 , L273;
end;
case L610: ( ( ( R30 ^ R31 ) . C33 ) `2 ) = 1;
thus L611: thesis by L610 , L602 , L607 , L273;
end;
case L612: ( ( ( R30 ^ R31 ) . C33 ) `2 ) = 2;
consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R25 being (FinSequence of ( CQC-WFF R1 )) such that L613: 1 <= R6 and L614: R6 < C33 and L615: (( Ant R23 ) is_Subsequence_of ( Ant R25 ) & ( Suc R23 ) = ( Suc R25 ) & ( ( R30 . R6 ) `1 ) = R23 & ( ( R30 . C33 ) `1 ) = R25) by L612 , L602 , L607 , L273;
L616: R6 <= ( len R30 ) by L600 , L614 , XXREAL_0:2;
L617: R6 in ( dom R30 ) by L616 , L613 , FINSEQ_3:25;
L618: ( R30 . R6 ) = ( ( R30 ^ R31 ) . R6 ) by L617 , FINSEQ_1:def 7;
thus L619: thesis by L618 , L602 , L613 , L614 , L615;
end;
case L620: ( ( ( R30 ^ R31 ) . C33 ) `2 ) = 3;
consider R6 being (Element of ( NAT )), R7 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R25 being (FinSequence of ( CQC-WFF R1 )) such that L621: 1 <= R6 and L622: R6 < C33 and L623: 1 <= R7 and L624: R7 < R6 and L625: (( len R23 ) > 1 & ( len R25 ) > 1 & ( Ant ( Ant R23 ) ) = ( Ant ( Ant R25 ) ) & ( 'not' ( Suc ( Ant R23 ) ) ) = ( Suc ( Ant R25 ) ) & ( Suc R23 ) = ( Suc R25 ) & R23 = ( ( R30 . R7 ) `1 ) & R25 = ( ( R30 . R6 ) `1 ) & ( ( Ant ( Ant R23 ) ) ^ <* ( Suc R23 ) *> ) = ( ( R30 . C33 ) `1 )) by L620 , L602 , L607 , L273;
L626: R6 <= ( len R30 ) by L600 , L622 , XXREAL_0:2;
L627: R6 in ( Seg ( len R30 ) ) by L626 , L621 , FINSEQ_1:1;
L628: R6 in ( dom R30 ) by L627 , FINSEQ_1:def 3;
L629: ( R30 . R6 ) = ( ( R30 ^ R31 ) . R6 ) by L628 , FINSEQ_1:def 7;
L630: R7 <= ( len R30 ) by L624 , L626 , XXREAL_0:2;
L631: R7 in ( dom R30 ) by L630 , L623 , FINSEQ_3:25;
L632: ( R30 . R7 ) = ( ( R30 ^ R31 ) . R7 ) by L631 , FINSEQ_1:def 7;
thus L633: thesis by L632 , L602 , L621 , L622 , L623 , L624 , L625 , L629;
end;
case L634: ( ( ( R30 ^ R31 ) . C33 ) `2 ) = 4;
consider R6 being (Element of ( NAT )), R7 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R25 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )) such that L635: 1 <= R6 and L636: R6 < C33 and L637: 1 <= R7 and L638: R7 < R6 and L639: (( len R23 ) > 1 & ( Ant R23 ) = ( Ant R25 ) & ( Suc ( Ant R23 ) ) = ( 'not' R11 ) & ( 'not' ( Suc R23 ) ) = ( Suc R25 ) & R23 = ( ( R30 . R7 ) `1 ) & R25 = ( ( R30 . R6 ) `1 ) & ( ( Ant ( Ant R23 ) ) ^ <* R11 *> ) = ( ( R30 . C33 ) `1 )) by L634 , L602 , L607 , L273;
L640: R6 <= ( len R30 ) by L600 , L636 , XXREAL_0:2;
L641: R6 in ( Seg ( len R30 ) ) by L640 , L635 , FINSEQ_1:1;
L642: R6 in ( dom R30 ) by L641 , FINSEQ_1:def 3;
L643: ( R30 . R6 ) = ( ( R30 ^ R31 ) . R6 ) by L642 , FINSEQ_1:def 7;
L644: R7 <= ( len R30 ) by L638 , L640 , XXREAL_0:2;
L645: R7 in ( dom R30 ) by L644 , L637 , FINSEQ_3:25;
L646: ( R30 . R7 ) = ( ( R30 ^ R31 ) . R7 ) by L645 , FINSEQ_1:def 7;
thus L647: thesis by L646 , L602 , L635 , L636 , L637 , L638 , L639 , L643;
end;
case L648: ( ( ( R30 ^ R31 ) . C33 ) `2 ) = 5;
consider R6 being (Element of ( NAT )), R7 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R25 being (FinSequence of ( CQC-WFF R1 )) such that L649: 1 <= R6 and L650: R6 < C33 and L651: 1 <= R7 and L652: R7 < R6 and L653: (( Ant R23 ) = ( Ant R25 ) & R23 = ( ( R30 . R7 ) `1 ) & R25 = ( ( R30 . R6 ) `1 ) & ( ( Ant R23 ) ^ <* ( ( Suc R23 ) '&' ( Suc R25 ) ) *> ) = ( ( R30 . C33 ) `1 )) by L648 , L602 , L607 , L273;
L654: R6 <= ( len R30 ) by L600 , L650 , XXREAL_0:2;
L655: R6 in ( Seg ( len R30 ) ) by L654 , L649 , FINSEQ_1:1;
L656: R6 in ( dom R30 ) by L655 , FINSEQ_1:def 3;
L657: ( R30 . R6 ) = ( ( R30 ^ R31 ) . R6 ) by L656 , FINSEQ_1:def 7;
L658: R7 <= ( len R30 ) by L652 , L654 , XXREAL_0:2;
L659: R7 in ( dom R30 ) by L658 , L651 , FINSEQ_3:25;
L660: ( R30 . R7 ) = ( ( R30 ^ R31 ) . R7 ) by L659 , FINSEQ_1:def 7;
thus L661: thesis by L660 , L602 , L649 , L650 , L651 , L652 , L653 , L657;
end;
case L662: ( ( ( R30 ^ R31 ) . C33 ) `2 ) = 6;
consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )), R12 being (Element of ( CQC-WFF R1 )) such that L663: 1 <= R6 and L664: R6 < C33 and L665: (( R11 '&' R12 ) = ( Suc R23 ) & R23 = ( ( R30 . R6 ) `1 ) & ( ( Ant R23 ) ^ <* R11 *> ) = ( ( R30 . C33 ) `1 )) by L662 , L602 , L607 , L273;
L666: R6 <= ( len R30 ) by L600 , L664 , XXREAL_0:2;
L667: R6 in ( dom R30 ) by L666 , L663 , FINSEQ_3:25;
L668: ( R30 . R6 ) = ( ( R30 ^ R31 ) . R6 ) by L667 , FINSEQ_1:def 7;
thus L669: thesis by L668 , L602 , L663 , L664 , L665;
end;
case L670: ( ( ( R30 ^ R31 ) . C33 ) `2 ) = 7;
consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )), R12 being (Element of ( CQC-WFF R1 )) such that L671: 1 <= R6 and L672: R6 < C33 and L673: (( R11 '&' R12 ) = ( Suc R23 ) & R23 = ( ( R30 . R6 ) `1 ) & ( ( Ant R23 ) ^ <* R12 *> ) = ( ( R30 . C33 ) `1 )) by L670 , L602 , L607 , L273;
L674: R6 <= ( len R30 ) by L600 , L672 , XXREAL_0:2;
L675: R6 in ( dom R30 ) by L674 , L671 , FINSEQ_3:25;
L676: ( R30 . R6 ) = ( ( R30 ^ R31 ) . R6 ) by L675 , FINSEQ_1:def 7;
thus L677: thesis by L676 , L602 , L671 , L672 , L673;
end;
case L678: ( ( ( R30 ^ R31 ) . C33 ) `2 ) = 8;
consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )), R14 being (bound_QC-variable of R1), R15 being (bound_QC-variable of R1) such that L679: 1 <= R6 and L680: R6 < C33 and L681: (( Suc R23 ) = ( All (R14 , R11) ) & R23 = ( ( R30 . R6 ) `1 ) & ( ( Ant R23 ) ^ <* ( R11 . (R14 , R15) ) *> ) = ( ( R30 . C33 ) `1 )) by L678 , L602 , L607 , L273;
L682: R6 <= ( len R30 ) by L600 , L680 , XXREAL_0:2;
L683: R6 in ( dom R30 ) by L682 , L679 , FINSEQ_3:25;
L684: ( R30 . R6 ) = ( ( R30 ^ R31 ) . R6 ) by L683 , FINSEQ_1:def 7;
thus L685: thesis by L684 , L602 , L679 , L680 , L681;
end;
case L686: ( ( ( R30 ^ R31 ) . C33 ) `2 ) = 9;
consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )), R14 being (bound_QC-variable of R1), R15 being (bound_QC-variable of R1) such that L687: 1 <= R6 and L688: R6 < C33 and L689: (( Suc R23 ) = ( R11 . (R14 , R15) ) & (not R15 in ( still_not-bound_in ( Ant R23 ) )) & (not R15 in ( still_not-bound_in ( All (R14 , R11) ) )) & R23 = ( ( R30 . R6 ) `1 ) & ( ( Ant R23 ) ^ <* ( All (R14 , R11) ) *> ) = ( ( R30 . C33 ) `1 )) by L686 , L602 , L607 , L273;
L690: R6 <= ( len R30 ) by L600 , L688 , XXREAL_0:2;
L691: R6 in ( dom R30 ) by L690 , L687 , FINSEQ_3:25;
L692: ( R30 . R6 ) = ( ( R30 ^ R31 ) . R6 ) by L691 , FINSEQ_1:def 7;
thus L693: thesis by L692 , L602 , L687 , L688 , L689;
end;
end;

assume L695: ( R30 ^ R31 ) , C33 is_a_correct_step ;
per cases  by L599 , L600 , L441;
case L696: ( ( R30 . C33 ) `2 ) = ( 0 );
thus L697: thesis by L696 , L602 , L695 , L273;
end;
case L698: ( ( R30 . C33 ) `2 ) = 1;
thus L699: thesis by L698 , L602 , L695 , L273;
end;
case L700: ( ( R30 . C33 ) `2 ) = 2;
consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R25 being (FinSequence of ( CQC-WFF R1 )) such that L701: 1 <= R6 and L702: R6 < C33 and L703: (( Ant R23 ) is_Subsequence_of ( Ant R25 ) & ( Suc R23 ) = ( Suc R25 ) & ( ( ( R30 ^ R31 ) . R6 ) `1 ) = R23 & ( ( ( R30 ^ R31 ) . C33 ) `1 ) = R25) by L700 , L602 , L695 , L273;
L704: R6 <= ( len R30 ) by L600 , L702 , XXREAL_0:2;
L705: R6 in ( dom R30 ) by L704 , L701 , FINSEQ_3:25;
L706: ( R30 . R6 ) = ( ( R30 ^ R31 ) . R6 ) by L705 , FINSEQ_1:def 7;
thus L707: thesis by L706 , L602 , L701 , L702 , L703;
end;
case L708: ( ( R30 . C33 ) `2 ) = 3;
consider R6 being (Element of ( NAT )), R7 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R24 being (FinSequence of ( CQC-WFF R1 )) such that L709: 1 <= R6 and L710: R6 < C33 and L711: 1 <= R7 and L712: R7 < R6 and L713: (( len R23 ) > 1 & ( len R24 ) > 1 & ( Ant ( Ant R23 ) ) = ( Ant ( Ant R24 ) ) & ( 'not' ( Suc ( Ant R23 ) ) ) = ( Suc ( Ant R24 ) ) & ( Suc R23 ) = ( Suc R24 ) & R23 = ( ( ( R30 ^ R31 ) . R7 ) `1 ) & R24 = ( ( ( R30 ^ R31 ) . R6 ) `1 ) & ( ( Ant ( Ant R23 ) ) ^ <* ( Suc R23 ) *> ) = ( ( ( R30 ^ R31 ) . C33 ) `1 )) by L708 , L602 , L695 , L273;
L714: R6 <= ( len R30 ) by L600 , L710 , XXREAL_0:2;
L715: R6 in ( Seg ( len R30 ) ) by L714 , L709 , FINSEQ_1:1;
L716: R6 in ( dom R30 ) by L715 , FINSEQ_1:def 3;
L717: ( R30 . R6 ) = ( ( R30 ^ R31 ) . R6 ) by L716 , FINSEQ_1:def 7;
L718: R7 <= ( len R30 ) by L712 , L714 , XXREAL_0:2;
L719: R7 in ( dom R30 ) by L718 , L711 , FINSEQ_3:25;
L720: ( R30 . R7 ) = ( ( R30 ^ R31 ) . R7 ) by L719 , FINSEQ_1:def 7;
thus L721: thesis by L720 , L602 , L709 , L710 , L711 , L712 , L713 , L717;
end;
case L722: ( ( R30 . C33 ) `2 ) = 4;
consider R6 being (Element of ( NAT )), R7 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R25 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )) such that L723: 1 <= R6 and L724: R6 < C33 and L725: 1 <= R7 and L726: R7 < R6 and L727: (( len R23 ) > 1 & ( Ant R23 ) = ( Ant R25 ) & ( Suc ( Ant R23 ) ) = ( 'not' R11 ) & ( 'not' ( Suc R23 ) ) = ( Suc R25 ) & R23 = ( ( ( R30 ^ R31 ) . R7 ) `1 ) & R25 = ( ( ( R30 ^ R31 ) . R6 ) `1 ) & ( ( Ant ( Ant R23 ) ) ^ <* R11 *> ) = ( ( ( R30 ^ R31 ) . C33 ) `1 )) by L722 , L602 , L695 , L273;
L728: R6 <= ( len R30 ) by L600 , L724 , XXREAL_0:2;
L729: R6 in ( Seg ( len R30 ) ) by L728 , L723 , FINSEQ_1:1;
L730: R6 in ( dom R30 ) by L729 , FINSEQ_1:def 3;
L731: ( R30 . R6 ) = ( ( R30 ^ R31 ) . R6 ) by L730 , FINSEQ_1:def 7;
L732: R7 <= ( len R30 ) by L726 , L728 , XXREAL_0:2;
L733: R7 in ( dom R30 ) by L732 , L725 , FINSEQ_3:25;
L734: ( R30 . R7 ) = ( ( R30 ^ R31 ) . R7 ) by L733 , FINSEQ_1:def 7;
thus L735: thesis by L734 , L602 , L723 , L724 , L725 , L726 , L727 , L731;
end;
case L736: ( ( R30 . C33 ) `2 ) = 5;
consider R6 being (Element of ( NAT )), R7 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R25 being (FinSequence of ( CQC-WFF R1 )) such that L737: 1 <= R6 and L738: R6 < C33 and L739: 1 <= R7 and L740: R7 < R6 and L741: (( Ant R23 ) = ( Ant R25 ) & R23 = ( ( ( R30 ^ R31 ) . R7 ) `1 ) & R25 = ( ( ( R30 ^ R31 ) . R6 ) `1 ) & ( ( Ant R23 ) ^ <* ( ( Suc R23 ) '&' ( Suc R25 ) ) *> ) = ( ( ( R30 ^ R31 ) . C33 ) `1 )) by L736 , L602 , L695 , L273;
L742: R6 <= ( len R30 ) by L600 , L738 , XXREAL_0:2;
L743: R6 in ( Seg ( len R30 ) ) by L742 , L737 , FINSEQ_1:1;
L744: R6 in ( dom R30 ) by L743 , FINSEQ_1:def 3;
L745: ( R30 . R6 ) = ( ( R30 ^ R31 ) . R6 ) by L744 , FINSEQ_1:def 7;
L746: R7 <= ( len R30 ) by L740 , L742 , XXREAL_0:2;
L747: R7 in ( dom R30 ) by L746 , L739 , FINSEQ_3:25;
L748: ( R30 . R7 ) = ( ( R30 ^ R31 ) . R7 ) by L747 , FINSEQ_1:def 7;
thus L749: thesis by L748 , L602 , L737 , L738 , L739 , L740 , L741 , L745;
end;
case L750: ( ( R30 . C33 ) `2 ) = 6;
consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )), R12 being (Element of ( CQC-WFF R1 )) such that L751: 1 <= R6 and L752: R6 < C33 and L753: (( R11 '&' R12 ) = ( Suc R23 ) & R23 = ( ( ( R30 ^ R31 ) . R6 ) `1 ) & ( ( Ant R23 ) ^ <* R11 *> ) = ( ( ( R30 ^ R31 ) . C33 ) `1 )) by L750 , L602 , L695 , L273;
L754: R6 <= ( len R30 ) by L600 , L752 , XXREAL_0:2;
L755: R6 in ( dom R30 ) by L754 , L751 , FINSEQ_3:25;
L756: ( R30 . R6 ) = ( ( R30 ^ R31 ) . R6 ) by L755 , FINSEQ_1:def 7;
thus L757: thesis by L756 , L602 , L751 , L752 , L753;
end;
case L758: ( ( R30 . C33 ) `2 ) = 7;
consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )), R12 being (Element of ( CQC-WFF R1 )) such that L759: 1 <= R6 and L760: R6 < C33 and L761: (( R11 '&' R12 ) = ( Suc R23 ) & R23 = ( ( ( R30 ^ R31 ) . R6 ) `1 ) & ( ( Ant R23 ) ^ <* R12 *> ) = ( ( ( R30 ^ R31 ) . C33 ) `1 )) by L758 , L602 , L695 , L273;
L762: R6 <= ( len R30 ) by L600 , L760 , XXREAL_0:2;
L763: R6 in ( dom R30 ) by L762 , L759 , FINSEQ_3:25;
L764: ( R30 . R6 ) = ( ( R30 ^ R31 ) . R6 ) by L763 , FINSEQ_1:def 7;
thus L765: thesis by L764 , L602 , L759 , L760 , L761;
end;
case L766: ( ( R30 . C33 ) `2 ) = 8;
consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )), R14 being (bound_QC-variable of R1), R15 being (bound_QC-variable of R1) such that L767: 1 <= R6 and L768: R6 < C33 and L769: (( Suc R23 ) = ( All (R14 , R11) ) & R23 = ( ( ( R30 ^ R31 ) . R6 ) `1 ) & ( ( Ant R23 ) ^ <* ( R11 . (R14 , R15) ) *> ) = ( ( ( R30 ^ R31 ) . C33 ) `1 )) by L766 , L602 , L695 , L273;
L770: R6 <= ( len R30 ) by L600 , L768 , XXREAL_0:2;
L771: R6 in ( dom R30 ) by L770 , L767 , FINSEQ_3:25;
L772: ( R30 . R6 ) = ( ( R30 ^ R31 ) . R6 ) by L771 , FINSEQ_1:def 7;
thus L773: thesis by L772 , L602 , L767 , L768 , L769;
end;
case L774: ( ( R30 . C33 ) `2 ) = 9;
consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )), R14 being (bound_QC-variable of R1), R15 being (bound_QC-variable of R1) such that L775: 1 <= R6 and L776: R6 < C33 and L777: (( Suc R23 ) = ( R11 . (R14 , R15) ) & (not R15 in ( still_not-bound_in ( Ant R23 ) )) & (not R15 in ( still_not-bound_in ( All (R14 , R11) ) )) & R23 = ( ( ( R30 ^ R31 ) . R6 ) `1 ) & ( ( Ant R23 ) ^ <* ( All (R14 , R11) ) *> ) = ( ( ( R30 ^ R31 ) . C33 ) `1 )) by L774 , L602 , L695 , L273;
L778: R6 <= ( len R30 ) by L600 , L776 , XXREAL_0:2;
L779: R6 in ( dom R30 ) by L778 , L775 , FINSEQ_3:25;
L780: ( R30 . R6 ) = ( ( R30 ^ R31 ) . R6 ) by L779 , FINSEQ_1:def 7;
thus L781: thesis by L780 , L602 , L775 , L776 , L777;
end;
end;
theorem
L783: (for R1 being QC-alphabet holds (for R10 being (Element of ( NAT )) holds (for R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) holds (for R31 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) holds ((1 <= R10 & R10 <= ( len R31 ) & R31 , R10 is_a_correct_step ) implies ( R30 ^ R31 ) , ( R10 + ( len R30 ) ) is_a_correct_step )))))
proof
let R1 being QC-alphabet;
let R10 being (Element of ( NAT ));
let R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]);
let R31 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]);
assume that
L784: 1 <= R10
and
L785: R10 <= ( len R31 )
and
L786: R31 , R10 is_a_correct_step ;
L787: R10 in ( dom R31 ) by L784 , L785 , FINSEQ_3:25;
L788: ( R31 . R10 ) = ( ( R30 ^ R31 ) . ( R10 + ( len R30 ) ) ) by L787 , FINSEQ_1:def 7;
L789: ( R10 + ( len R30 ) ) <= ( ( len R30 ) + ( len R31 ) ) by L785 , XREAL_1:6;
L790: ( R10 + ( len R30 ) ) <= ( len ( R30 ^ R31 ) ) by L789 , FINSEQ_1:22;
per cases  by L784 , L790 , L441 , NAT_1:12;
case L791: ( ( ( R30 ^ R31 ) . ( R10 + ( len R30 ) ) ) `2 ) = ( 0 );
thus L792: thesis by L791 , L786 , L788 , L273;
end;
case L793: ( ( ( R30 ^ R31 ) . ( R10 + ( len R30 ) ) ) `2 ) = 1;
thus L794: thesis by L793 , L786 , L788 , L273;
end;
case L795: ( ( ( R30 ^ R31 ) . ( R10 + ( len R30 ) ) ) `2 ) = 2;
consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R25 being (FinSequence of ( CQC-WFF R1 )) such that L796: 1 <= R6 and L797: R6 < R10 and L798: (( Ant R23 ) is_Subsequence_of ( Ant R25 ) & ( Suc R23 ) = ( Suc R25 ) & ( ( R31 . R6 ) `1 ) = R23 & ( ( R31 . R10 ) `1 ) = R25) by L795 , L786 , L788 , L273;
L799: R6 <= ( len R31 ) by L785 , L797 , XXREAL_0:2;
L800: R6 in ( dom R31 ) by L799 , L796 , FINSEQ_3:25;
L801: ( R31 . R6 ) = ( ( R30 ^ R31 ) . ( ( len R30 ) + R6 ) ) by L800 , FINSEQ_1:def 7;
L802: (1 <= ( ( len R30 ) + R6 ) & ( ( len R30 ) + R6 ) < ( R10 + ( len R30 ) )) by L796 , L797 , NAT_1:12 , XREAL_1:6;
thus L803: thesis by L802 , L788 , L798 , L801;
end;
case L804: ( ( ( R30 ^ R31 ) . ( R10 + ( len R30 ) ) ) `2 ) = 3;
consider R6 being (Element of ( NAT )), R7 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R24 being (FinSequence of ( CQC-WFF R1 )) such that L805: 1 <= R6 and L806: R6 < R10 and L807: 1 <= R7 and L808: R7 < R6 and L809: (( len R23 ) > 1 & ( len R24 ) > 1 & ( Ant ( Ant R23 ) ) = ( Ant ( Ant R24 ) ) & ( 'not' ( Suc ( Ant R23 ) ) ) = ( Suc ( Ant R24 ) ) & ( Suc R23 ) = ( Suc R24 ) & R23 = ( ( R31 . R7 ) `1 ) & R24 = ( ( R31 . R6 ) `1 ) & ( ( Ant ( Ant R23 ) ) ^ <* ( Suc R23 ) *> ) = ( ( R31 . R10 ) `1 )) by L804 , L786 , L788 , L273;
L810: (1 <= ( ( len R30 ) + R7 ) & ( ( len R30 ) + R7 ) < ( R6 + ( len R30 ) )) by L807 , L808 , NAT_1:12 , XREAL_1:6;
L811: R6 <= ( len R31 ) by L785 , L806 , XXREAL_0:2;
L812: R6 in ( dom R31 ) by L811 , L805 , FINSEQ_3:25;
L813: ( R31 . R6 ) = ( ( R30 ^ R31 ) . ( ( len R30 ) + R6 ) ) by L812 , FINSEQ_1:def 7;
L814: R7 <= ( len R31 ) by L808 , L811 , XXREAL_0:2;
L815: R7 in ( dom R31 ) by L814 , L807 , FINSEQ_3:25;
L816: ( R31 . R7 ) = ( ( R30 ^ R31 ) . ( ( len R30 ) + R7 ) ) by L815 , FINSEQ_1:def 7;
L817: (1 <= ( ( len R30 ) + R6 ) & ( ( len R30 ) + R6 ) < ( R10 + ( len R30 ) )) by L805 , L806 , NAT_1:12 , XREAL_1:6;
thus L818: thesis by L817 , L788 , L809 , L810 , L813 , L816;
end;
case L819: ( ( ( R30 ^ R31 ) . ( R10 + ( len R30 ) ) ) `2 ) = 4;
consider R6 being (Element of ( NAT )), R7 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R25 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )) such that L820: 1 <= R6 and L821: R6 < R10 and L822: 1 <= R7 and L823: R7 < R6 and L824: (( len R23 ) > 1 & ( Ant R23 ) = ( Ant R25 ) & ( Suc ( Ant R23 ) ) = ( 'not' R11 ) & ( 'not' ( Suc R23 ) ) = ( Suc R25 ) & R23 = ( ( R31 . R7 ) `1 ) & R25 = ( ( R31 . R6 ) `1 ) & ( ( Ant ( Ant R23 ) ) ^ <* R11 *> ) = ( ( R31 . R10 ) `1 )) by L819 , L786 , L788 , L273;
L825: (1 <= ( ( len R30 ) + R7 ) & ( ( len R30 ) + R7 ) < ( R6 + ( len R30 ) )) by L822 , L823 , NAT_1:12 , XREAL_1:6;
L826: R6 <= ( len R31 ) by L785 , L821 , XXREAL_0:2;
L827: R6 in ( dom R31 ) by L826 , L820 , FINSEQ_3:25;
L828: ( R31 . R6 ) = ( ( R30 ^ R31 ) . ( ( len R30 ) + R6 ) ) by L827 , FINSEQ_1:def 7;
L829: R7 <= ( len R31 ) by L823 , L826 , XXREAL_0:2;
L830: R7 in ( dom R31 ) by L829 , L822 , FINSEQ_3:25;
L831: ( R31 . R7 ) = ( ( R30 ^ R31 ) . ( ( len R30 ) + R7 ) ) by L830 , FINSEQ_1:def 7;
L832: (1 <= ( ( len R30 ) + R6 ) & ( ( len R30 ) + R6 ) < ( R10 + ( len R30 ) )) by L820 , L821 , NAT_1:12 , XREAL_1:6;
thus L833: thesis by L832 , L788 , L824 , L825 , L828 , L831;
end;
case L834: ( ( ( R30 ^ R31 ) . ( R10 + ( len R30 ) ) ) `2 ) = 5;
consider R6 being (Element of ( NAT )), R7 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R25 being (FinSequence of ( CQC-WFF R1 )) such that L835: 1 <= R6 and L836: R6 < R10 and L837: 1 <= R7 and L838: R7 < R6 and L839: (( Ant R23 ) = ( Ant R25 ) & R23 = ( ( R31 . R7 ) `1 ) & R25 = ( ( R31 . R6 ) `1 ) & ( ( Ant R23 ) ^ <* ( ( Suc R23 ) '&' ( Suc R25 ) ) *> ) = ( ( R31 . R10 ) `1 )) by L834 , L786 , L788 , L273;
L840: (1 <= ( ( len R30 ) + R7 ) & ( ( len R30 ) + R7 ) < ( R6 + ( len R30 ) )) by L837 , L838 , NAT_1:12 , XREAL_1:6;
L841: R6 <= ( len R31 ) by L785 , L836 , XXREAL_0:2;
L842: R6 in ( dom R31 ) by L841 , L835 , FINSEQ_3:25;
L843: ( R31 . R6 ) = ( ( R30 ^ R31 ) . ( ( len R30 ) + R6 ) ) by L842 , FINSEQ_1:def 7;
L844: R7 <= ( len R31 ) by L838 , L841 , XXREAL_0:2;
L845: R7 in ( dom R31 ) by L844 , L837 , FINSEQ_3:25;
L846: ( R31 . R7 ) = ( ( R30 ^ R31 ) . ( ( len R30 ) + R7 ) ) by L845 , FINSEQ_1:def 7;
L847: (1 <= ( ( len R30 ) + R6 ) & ( ( len R30 ) + R6 ) < ( R10 + ( len R30 ) )) by L835 , L836 , NAT_1:12 , XREAL_1:6;
thus L848: thesis by L847 , L788 , L839 , L840 , L843 , L846;
end;
case L849: ( ( ( R30 ^ R31 ) . ( R10 + ( len R30 ) ) ) `2 ) = 6;
consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )), R12 being (Element of ( CQC-WFF R1 )) such that L850: 1 <= R6 and L851: R6 < R10 and L852: (( R11 '&' R12 ) = ( Suc R23 ) & R23 = ( ( R31 . R6 ) `1 ) & ( ( Ant R23 ) ^ <* R11 *> ) = ( ( R31 . R10 ) `1 )) by L849 , L786 , L788 , L273;
L853: R6 <= ( len R31 ) by L785 , L851 , XXREAL_0:2;
L854: R6 in ( dom R31 ) by L853 , L850 , FINSEQ_3:25;
L855: ( R31 . R6 ) = ( ( R30 ^ R31 ) . ( ( len R30 ) + R6 ) ) by L854 , FINSEQ_1:def 7;
L856: (1 <= ( ( len R30 ) + R6 ) & ( ( len R30 ) + R6 ) < ( R10 + ( len R30 ) )) by L850 , L851 , NAT_1:12 , XREAL_1:6;
thus L857: thesis by L856 , L788 , L852 , L855;
end;
case L858: ( ( ( R30 ^ R31 ) . ( R10 + ( len R30 ) ) ) `2 ) = 7;
consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )), R12 being (Element of ( CQC-WFF R1 )) such that L859: 1 <= R6 and L860: R6 < R10 and L861: (( R11 '&' R12 ) = ( Suc R23 ) & R23 = ( ( R31 . R6 ) `1 ) & ( ( Ant R23 ) ^ <* R12 *> ) = ( ( R31 . R10 ) `1 )) by L858 , L786 , L788 , L273;
L862: R6 <= ( len R31 ) by L785 , L860 , XXREAL_0:2;
L863: R6 in ( dom R31 ) by L862 , L859 , FINSEQ_3:25;
L864: ( R31 . R6 ) = ( ( R30 ^ R31 ) . ( ( len R30 ) + R6 ) ) by L863 , FINSEQ_1:def 7;
L865: (1 <= ( ( len R30 ) + R6 ) & ( ( len R30 ) + R6 ) < ( R10 + ( len R30 ) )) by L859 , L860 , NAT_1:12 , XREAL_1:6;
thus L866: thesis by L865 , L788 , L861 , L864;
end;
case L867: ( ( ( R30 ^ R31 ) . ( R10 + ( len R30 ) ) ) `2 ) = 8;
consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )), R14 being (bound_QC-variable of R1), R15 being (bound_QC-variable of R1) such that L868: 1 <= R6 and L869: R6 < R10 and L870: (( Suc R23 ) = ( All (R14 , R11) ) & R23 = ( ( R31 . R6 ) `1 ) & ( ( Ant R23 ) ^ <* ( R11 . (R14 , R15) ) *> ) = ( ( R31 . R10 ) `1 )) by L867 , L786 , L788 , L273;
L871: R6 <= ( len R31 ) by L785 , L869 , XXREAL_0:2;
L872: R6 in ( dom R31 ) by L871 , L868 , FINSEQ_3:25;
L873: ( R31 . R6 ) = ( ( R30 ^ R31 ) . ( ( len R30 ) + R6 ) ) by L872 , FINSEQ_1:def 7;
L874: (1 <= ( ( len R30 ) + R6 ) & ( ( len R30 ) + R6 ) < ( R10 + ( len R30 ) )) by L868 , L869 , NAT_1:12 , XREAL_1:6;
thus L875: thesis by L874 , L788 , L870 , L873;
end;
case L876: ( ( ( R30 ^ R31 ) . ( R10 + ( len R30 ) ) ) `2 ) = 9;
consider R6 being (Element of ( NAT )), R23 being (FinSequence of ( CQC-WFF R1 )), R11 being (Element of ( CQC-WFF R1 )), R14 being (bound_QC-variable of R1), R15 being (bound_QC-variable of R1) such that L877: 1 <= R6 and L878: R6 < R10 and L879: (( Suc R23 ) = ( R11 . (R14 , R15) ) & (not R15 in ( still_not-bound_in ( Ant R23 ) )) & (not R15 in ( still_not-bound_in ( All (R14 , R11) ) )) & R23 = ( ( R31 . R6 ) `1 ) & ( ( Ant R23 ) ^ <* ( All (R14 , R11) ) *> ) = ( ( R31 . R10 ) `1 )) by L876 , L786 , L788 , L273;
L880: R6 <= ( len R31 ) by L785 , L878 , XXREAL_0:2;
L881: R6 in ( dom R31 ) by L880 , L877 , FINSEQ_3:25;
L882: ( R31 . R6 ) = ( ( R30 ^ R31 ) . ( ( len R30 ) + R6 ) ) by L881 , FINSEQ_1:def 7;
L883: (1 <= ( ( len R30 ) + R6 ) & ( ( len R30 ) + R6 ) < ( R10 + ( len R30 ) )) by L877 , L878 , NAT_1:12 , XREAL_1:6;
thus L884: thesis by L883 , L788 , L879 , L882;
end;
end;
theorem
L886: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (for R25 being (FinSequence of ( CQC-WFF R1 )) holds ((( Ant R23 ) is_Subsequence_of ( Ant R25 ) & ( Suc R23 ) = ( Suc R25 ) &  |- R23) implies  |- R25))))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
let R25 being (FinSequence of ( CQC-WFF R1 ));
assume that
L887: (( Ant R23 ) is_Subsequence_of ( Ant R25 ) & ( Suc R23 ) = ( Suc R25 ))
and
L888:  |- R23;
consider R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) such that L889: R30 is  a_proof and L890: ( ( R30 . ( len R30 ) ) `1 ) = R23 by L888 , L277;
L891: R25 in ( set_of_CQC-WFF-seq R1 ) by L263;
L892:
now
let C34 being set;
assume L893: C34 in ( rng <* [ R25 , 2 ] *> );
L894: C34 in { [ R25 , 2 ] } by L893 , FINSEQ_1:38;
L895: C34 = [ R25 , 2 ] by L894 , TARSKI:def 1;
thus L896: C34 in [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :] by L895 , L891 , CQC_THE1:21 , ZFMISC_1:87;
end;
L897: ( rng <* [ R25 , 2 ] *> ) c= [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :] by L892 , TARSKI:def 3;
reconsider D27 = <* [ R25 , 2 ] *> as (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) by L897 , FINSEQ_1:def 4;
L898: 1 in ( Seg 1 ) by FINSEQ_1:2 , TARSKI:def 1;
L899: 1 in ( dom D27 ) by L898 , FINSEQ_1:38;
set D28 = ( R30 ^ D27 );
reconsider D29 = D28 as (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]);
L900: R30 <> ( {} ) by L889 , L275;
L901:
now
let C35 being Nat;
assume L902: (1 <= C35 & C35 <= ( len D29 ));
L903: C35 in ( dom D29 ) by L902 , FINSEQ_3:25;
L904:
now
L905: 1 <= ( len R30 ) by L900 , L116;
L906: ( len R30 ) in ( dom R30 ) by L905 , FINSEQ_3:25;
L907: R23 = ( ( D29 . ( len R30 ) ) `1 ) by L906 , L890 , FINSEQ_1:def 7;
given C36 being Nat such that
L908: C36 in ( dom D27 )
and
L909: C35 = ( ( len R30 ) + C36 );

L910: C36 in ( Seg 1 ) by L908 , FINSEQ_1:38;
L911: C36 = 1 by L910 , FINSEQ_1:2 , TARSKI:def 1;
L912: ( D27 . C36 ) = [ R25 , 2 ] by L911 , FINSEQ_1:40;
L913: ( ( D27 . C36 ) `1 ) = R25 by L912 , MCART_1:7;
L914: ( ( D29 . C35 ) `1 ) = R25 by L913 , L908 , L909 , FINSEQ_1:def 7;
L915: ( ( D27 . C36 ) `2 ) = 2 by L912 , MCART_1:7;
L916: ( ( D29 . C35 ) `2 ) = 2 by L915 , L908 , L909 , FINSEQ_1:def 7;
L917: ( len R30 ) < C35 by L909 , L911 , NAT_1:13;
thus L918: D29 , C35 is_a_correct_step  by L917 , L887 , L914 , L916 , L905 , L907 , L273;
end;
L919:
now
assume L920: C35 in ( dom R30 );
L921: (1 <= C35 & C35 <= ( len R30 )) by L920 , FINSEQ_3:25;
L922: R30 , C35 is_a_correct_step  by L921 , L889 , L275;
thus L923: D29 , C35 is_a_correct_step  by L922 , L921 , L598;
end;
thus L924: D29 , C35 is_a_correct_step  by L919 , L903 , L904 , FINSEQ_1:25;
end;
L925: D29 is  a_proof by L901 , L275;
L926: ( D29 . ( len D29 ) ) = ( D29 . ( ( len R30 ) + ( len D27 ) ) ) by FINSEQ_1:22;
L927: ( D29 . ( len D29 ) ) = ( D29 . ( ( len R30 ) + 1 ) ) by L926 , FINSEQ_1:39;
L928: ( D29 . ( len D29 ) ) = ( D27 . 1 ) by L927 , L899 , FINSEQ_1:def 7;
L929: ( D29 . ( len D29 ) ) = [ R25 , 2 ] by L928 , FINSEQ_1:40;
L930: ( ( D29 . ( len D29 ) ) `1 ) = R25 by L929 , MCART_1:7;
thus L931: thesis by L930 , L925 , L277;
end;
theorem
L932: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (for R25 being (FinSequence of ( CQC-WFF R1 )) holds ((1 < ( len R23 ) & 1 < ( len R25 ) & ( Ant ( Ant R23 ) ) = ( Ant ( Ant R25 ) ) & ( 'not' ( Suc ( Ant R23 ) ) ) = ( Suc ( Ant R25 ) ) & ( Suc R23 ) = ( Suc R25 ) &  |- R23 &  |- R25) implies  |- ( ( Ant ( Ant R23 ) ) ^ <* ( Suc R23 ) *> )))))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
let R25 being (FinSequence of ( CQC-WFF R1 ));
assume that
L933: (1 < ( len R23 ) & 1 < ( len R25 ) & ( Ant ( Ant R23 ) ) = ( Ant ( Ant R25 ) ) & ( 'not' ( Suc ( Ant R23 ) ) ) = ( Suc ( Ant R25 ) ) & ( Suc R23 ) = ( Suc R25 ))
and
L934:  |- R23
and
L935:  |- R25;
consider R31 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) such that L936: R31 is  a_proof and L937: R25 = ( ( R31 . ( len R31 ) ) `1 ) by L935 , L277;
consider R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) such that L938: R30 is  a_proof and L939: R23 = ( ( R30 . ( len R30 ) ) `1 ) by L934 , L277;
L940: ( ( Ant ( Ant R23 ) ) ^ <* ( Suc R23 ) *> ) in ( set_of_CQC-WFF-seq R1 ) by L263;
L941:
now
let C37 being set;
assume L942: C37 in ( rng <* [ ( ( Ant ( Ant R23 ) ) ^ <* ( Suc R23 ) *> ) , 3 ] *> );
L943: C37 in { [ ( ( Ant ( Ant R23 ) ) ^ <* ( Suc R23 ) *> ) , 3 ] } by L942 , FINSEQ_1:38;
L944: C37 = [ ( ( Ant ( Ant R23 ) ) ^ <* ( Suc R23 ) *> ) , 3 ] by L943 , TARSKI:def 1;
thus L945: C37 in [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :] by L944 , L940 , CQC_THE1:21 , ZFMISC_1:87;
end;
L946: ( rng <* [ ( ( Ant ( Ant R23 ) ) ^ <* ( Suc R23 ) *> ) , 3 ] *> ) c= [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :] by L941 , TARSKI:def 3;
reconsider D30 = <* [ ( ( Ant ( Ant R23 ) ) ^ <* ( Suc R23 ) *> ) , 3 ] *> as (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) by L946 , FINSEQ_1:def 4;
L947: 1 in ( Seg 1 ) by FINSEQ_1:2 , TARSKI:def 1;
L948: 1 in ( dom D30 ) by L947 , FINSEQ_1:38;
set D31 = ( ( R30 ^ R31 ) ^ D30 );
reconsider D32 = D31 as (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]);
L949: R30 <> ( {} ) by L938 , L275;
L950:
now
let C38 being Nat;
assume L951: (1 <= C38 & C38 <= ( len D32 ));
L952: C38 in ( dom D32 ) by L951 , FINSEQ_3:25;
L953:
now
given C39 being Nat such that
L954: C39 in ( dom D30 )
and
L955: C38 = ( ( len ( R30 ^ R31 ) ) + C39 );

L956: C39 in ( Seg 1 ) by L954 , FINSEQ_1:38;
L957: C39 = 1 by L956 , FINSEQ_1:2 , TARSKI:def 1;
L958: ( D30 . C39 ) = [ ( ( Ant ( Ant R23 ) ) ^ <* ( Suc R23 ) *> ) , 3 ] by L957 , FINSEQ_1:40;
L959: ( ( D30 . C39 ) `1 ) = ( ( Ant ( Ant R23 ) ) ^ <* ( Suc R23 ) *> ) by L958 , MCART_1:7;
L960: ( ( D32 . C38 ) `1 ) = ( ( Ant ( Ant R23 ) ) ^ <* ( Suc R23 ) *> ) by L959 , L954 , L955 , FINSEQ_1:def 7;
L961: ( ( D30 . C39 ) `2 ) = 3 by L958 , MCART_1:7;
L962: ( ( D32 . C38 ) `2 ) = 3 by L961 , L954 , L955 , FINSEQ_1:def 7;
L963: ( len ( R30 ^ R31 ) ) < C38 by L955 , L957 , NAT_1:13;
L964: 1 <= ( len R30 ) by L949 , L116;
L965: ( len R30 ) in ( dom R30 ) by L964 , FINSEQ_3:25;
L966: R23 = ( ( ( R30 ^ R31 ) . ( len R30 ) ) `1 ) by L965 , L939 , FINSEQ_1:def 7;
L967: R31 <> ( {} ) by L936 , L275;
L968: ( len R30 ) < ( len ( R30 ^ R31 ) ) by L967 , L116;
L969: ( len R30 ) in ( dom ( R30 ^ R31 ) ) by L968 , L964 , FINSEQ_3:25;
L970: R23 = ( ( D32 . ( len R30 ) ) `1 ) by L969 , L966 , FINSEQ_1:def 7;
L971: 1 <= ( len R31 ) by L967 , L116;
L972: ( len R31 ) in ( dom R31 ) by L971 , FINSEQ_3:25;
L973: R25 = ( ( ( R30 ^ R31 ) . ( ( len R30 ) + ( len R31 ) ) ) `1 ) by L972 , L937 , FINSEQ_1:def 7;
L974: R25 = ( ( ( R30 ^ R31 ) . ( len ( R30 ^ R31 ) ) ) `1 ) by L973 , FINSEQ_1:22;
L975: 1 <= ( len ( R30 ^ R31 ) ) by L949 , L116;
L976: ( len ( R30 ^ R31 ) ) in ( dom ( R30 ^ R31 ) ) by L975 , FINSEQ_3:25;
L977: R25 = ( ( D32 . ( len ( R30 ^ R31 ) ) ) `1 ) by L976 , L974 , FINSEQ_1:def 7;
L978: 1 <= ( len ( R30 ^ R31 ) ) by L949 , L116;
thus L979: D32 , C38 is_a_correct_step  by L978 , L933 , L960 , L962 , L964 , L968 , L970 , L963 , L977 , L273;
end;
L980:
now
L981:
now
given C40 being Nat such that
L982: C40 in ( dom R31 )
and
L983: C38 = ( ( len R30 ) + C40 );

L984: 1 <= C40 by L982 , FINSEQ_3:25;
L985: C40 <= ( len R31 ) by L982 , FINSEQ_3:25;
L986: C38 <= ( ( len R31 ) + ( len R30 ) ) by L985 , L983 , XREAL_1:6;
L987: C38 <= ( len ( R30 ^ R31 ) ) by L986 , FINSEQ_1:22;
L988: C40 <= C38 by L983 , NAT_1:11;
L989: 1 <= C38 by L988 , L984 , XXREAL_0:2;
L990: R31 , C40 is_a_correct_step  by L936 , L984 , L985 , L275;
L991: ( R30 ^ R31 ) , C38 is_a_correct_step  by L990 , L982 , L983 , L984 , L985 , L783;
thus L992: D32 , C38 is_a_correct_step  by L991 , L989 , L987 , L598;
end;
L993:
now
assume L994: C38 in ( dom R30 );
L995: 1 <= C38 by L994 , FINSEQ_3:25;
L996: C38 <= ( len R30 ) by L994 , FINSEQ_3:25;
L997: ( len R30 ) <= ( len ( R30 ^ R31 ) ) by L116;
L998: C38 <= ( len ( R30 ^ R31 ) ) by L997 , L996 , XXREAL_0:2;
L999: R30 , C38 is_a_correct_step  by L938 , L995 , L996 , L275;
L1000: ( R30 ^ R31 ) , C38 is_a_correct_step  by L999 , L995 , L996 , L598;
thus L1001: D32 , C38 is_a_correct_step  by L1000 , L995 , L998 , L598;
end;
assume L1002: C38 in ( dom ( R30 ^ R31 ) );
thus L1003: D32 , C38 is_a_correct_step  by L1002 , L993 , L981 , FINSEQ_1:25;
end;
thus L1004: D32 , C38 is_a_correct_step  by L980 , L952 , L953 , FINSEQ_1:25;
end;
L1005: D32 is  a_proof by L950 , L275;
L1006: ( D32 . ( len D32 ) ) = ( D32 . ( ( len ( R30 ^ R31 ) ) + ( len D30 ) ) ) by FINSEQ_1:22;
L1007: ( D32 . ( len D32 ) ) = ( D32 . ( ( len ( R30 ^ R31 ) ) + 1 ) ) by L1006 , FINSEQ_1:39;
L1008: ( D32 . ( len D32 ) ) = ( D30 . 1 ) by L1007 , L948 , FINSEQ_1:def 7;
L1009: ( D32 . ( len D32 ) ) = [ ( ( Ant ( Ant R23 ) ) ^ <* ( Suc R23 ) *> ) , 3 ] by L1008 , FINSEQ_1:40;
L1010: ( ( D32 . ( len D32 ) ) `1 ) = ( ( Ant ( Ant R23 ) ) ^ <* ( Suc R23 ) *> ) by L1009 , MCART_1:7;
thus L1011: thesis by L1010 , L1005 , L277;
end;
theorem
L1012: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (for R25 being (FinSequence of ( CQC-WFF R1 )) holds ((( len R23 ) > 1 & ( Ant R23 ) = ( Ant R25 ) & ( Suc ( Ant R23 ) ) = ( 'not' R11 ) & ( 'not' ( Suc R23 ) ) = ( Suc R25 ) &  |- R23 &  |- R25) implies  |- ( ( Ant ( Ant R23 ) ) ^ <* R11 *> ))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
let R25 being (FinSequence of ( CQC-WFF R1 ));
assume that
L1013: (( len R23 ) > 1 & ( Ant R23 ) = ( Ant R25 ) & ( Suc ( Ant R23 ) ) = ( 'not' R11 ) & ( 'not' ( Suc R23 ) ) = ( Suc R25 ))
and
L1014:  |- R23
and
L1015:  |- R25;
consider R31 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) such that L1016: R31 is  a_proof and L1017: R25 = ( ( R31 . ( len R31 ) ) `1 ) by L1015 , L277;
consider R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) such that L1018: R30 is  a_proof and L1019: R23 = ( ( R30 . ( len R30 ) ) `1 ) by L1014 , L277;
L1020: ( ( Ant ( Ant R23 ) ) ^ <* R11 *> ) in ( set_of_CQC-WFF-seq R1 ) by L263;
L1021:
now
let C41 being set;
assume L1022: C41 in ( rng <* [ ( ( Ant ( Ant R23 ) ) ^ <* R11 *> ) , 4 ] *> );
L1023: C41 in { [ ( ( Ant ( Ant R23 ) ) ^ <* R11 *> ) , 4 ] } by L1022 , FINSEQ_1:38;
L1024: C41 = [ ( ( Ant ( Ant R23 ) ) ^ <* R11 *> ) , 4 ] by L1023 , TARSKI:def 1;
thus L1025: C41 in [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :] by L1024 , L1020 , CQC_THE1:21 , ZFMISC_1:87;
end;
L1026: ( rng <* [ ( ( Ant ( Ant R23 ) ) ^ <* R11 *> ) , 4 ] *> ) c= [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :] by L1021 , TARSKI:def 3;
reconsider D33 = <* [ ( ( Ant ( Ant R23 ) ) ^ <* R11 *> ) , 4 ] *> as (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) by L1026 , FINSEQ_1:def 4;
L1027: 1 in ( Seg 1 ) by FINSEQ_1:2 , TARSKI:def 1;
L1028: 1 in ( dom D33 ) by L1027 , FINSEQ_1:38;
set D34 = ( ( R30 ^ R31 ) ^ D33 );
reconsider D35 = D34 as (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]);
L1029: R30 <> ( {} ) by L1018 , L275;
L1030:
now
let C42 being Nat;
assume L1031: (1 <= C42 & C42 <= ( len D35 ));
L1032: C42 in ( dom D35 ) by L1031 , FINSEQ_3:25;
L1033:
now
given C43 being Nat such that
L1034: C43 in ( dom D33 )
and
L1035: C42 = ( ( len ( R30 ^ R31 ) ) + C43 );

L1036: C43 in ( Seg 1 ) by L1034 , FINSEQ_1:38;
L1037: C43 = 1 by L1036 , FINSEQ_1:2 , TARSKI:def 1;
L1038: ( D33 . C43 ) = [ ( ( Ant ( Ant R23 ) ) ^ <* R11 *> ) , 4 ] by L1037 , FINSEQ_1:40;
L1039: ( ( D33 . C43 ) `1 ) = ( ( Ant ( Ant R23 ) ) ^ <* R11 *> ) by L1038 , MCART_1:7;
L1040: ( ( D35 . C42 ) `1 ) = ( ( Ant ( Ant R23 ) ) ^ <* R11 *> ) by L1039 , L1034 , L1035 , FINSEQ_1:def 7;
L1041: ( ( D33 . C43 ) `2 ) = 4 by L1038 , MCART_1:7;
L1042: ( ( D35 . C42 ) `2 ) = 4 by L1041 , L1034 , L1035 , FINSEQ_1:def 7;
L1043: ( len ( R30 ^ R31 ) ) < C42 by L1035 , L1037 , NAT_1:13;
L1044: 1 <= ( len R30 ) by L1029 , L116;
L1045: ( len R30 ) in ( dom R30 ) by L1044 , FINSEQ_3:25;
L1046: R23 = ( ( ( R30 ^ R31 ) . ( len R30 ) ) `1 ) by L1045 , L1019 , FINSEQ_1:def 7;
L1047: R31 <> ( {} ) by L1016 , L275;
L1048: ( len R30 ) < ( len ( R30 ^ R31 ) ) by L1047 , L116;
L1049: ( len R30 ) in ( dom ( R30 ^ R31 ) ) by L1048 , L1044 , FINSEQ_3:25;
L1050: R23 = ( ( D35 . ( len R30 ) ) `1 ) by L1049 , L1046 , FINSEQ_1:def 7;
L1051: 1 <= ( len R31 ) by L1047 , L116;
L1052: ( len R31 ) in ( dom R31 ) by L1051 , FINSEQ_3:25;
L1053: R25 = ( ( ( R30 ^ R31 ) . ( ( len R30 ) + ( len R31 ) ) ) `1 ) by L1052 , L1017 , FINSEQ_1:def 7;
L1054: R25 = ( ( ( R30 ^ R31 ) . ( len ( R30 ^ R31 ) ) ) `1 ) by L1053 , FINSEQ_1:22;
L1055: 1 <= ( len ( R30 ^ R31 ) ) by L1029 , L116;
L1056: ( len ( R30 ^ R31 ) ) in ( dom ( R30 ^ R31 ) ) by L1055 , FINSEQ_3:25;
L1057: R25 = ( ( D35 . ( len ( R30 ^ R31 ) ) ) `1 ) by L1056 , L1054 , FINSEQ_1:def 7;
L1058: 1 <= ( len ( R30 ^ R31 ) ) by L1029 , L116;
thus L1059: D35 , C42 is_a_correct_step  by L1058 , L1013 , L1040 , L1042 , L1044 , L1048 , L1050 , L1043 , L1057 , L273;
end;
L1060:
now
L1061:
now
given C44 being Nat such that
L1062: C44 in ( dom R31 )
and
L1063: C42 = ( ( len R30 ) + C44 );

L1064: 1 <= C44 by L1062 , FINSEQ_3:25;
L1065: C44 <= ( len R31 ) by L1062 , FINSEQ_3:25;
L1066: C42 <= ( ( len R31 ) + ( len R30 ) ) by L1065 , L1063 , XREAL_1:6;
L1067: C42 <= ( len ( R30 ^ R31 ) ) by L1066 , FINSEQ_1:22;
L1068: C44 <= C42 by L1063 , NAT_1:11;
L1069: 1 <= C42 by L1068 , L1064 , XXREAL_0:2;
L1070: R31 , C44 is_a_correct_step  by L1016 , L1064 , L1065 , L275;
L1071: ( R30 ^ R31 ) , C42 is_a_correct_step  by L1070 , L1062 , L1063 , L1064 , L1065 , L783;
thus L1072: D35 , C42 is_a_correct_step  by L1071 , L1069 , L1067 , L598;
end;
L1073:
now
assume L1074: C42 in ( dom R30 );
L1075: 1 <= C42 by L1074 , FINSEQ_3:25;
L1076: C42 <= ( len R30 ) by L1074 , FINSEQ_3:25;
L1077: ( len R30 ) <= ( len ( R30 ^ R31 ) ) by L116;
L1078: C42 <= ( len ( R30 ^ R31 ) ) by L1077 , L1076 , XXREAL_0:2;
L1079: R30 , C42 is_a_correct_step  by L1018 , L1075 , L1076 , L275;
L1080: ( R30 ^ R31 ) , C42 is_a_correct_step  by L1079 , L1075 , L1076 , L598;
thus L1081: D35 , C42 is_a_correct_step  by L1080 , L1075 , L1078 , L598;
end;
assume L1082: C42 in ( dom ( R30 ^ R31 ) );
thus L1083: D35 , C42 is_a_correct_step  by L1082 , L1073 , L1061 , FINSEQ_1:25;
end;
thus L1084: D35 , C42 is_a_correct_step  by L1060 , L1032 , L1033 , FINSEQ_1:25;
end;
L1085: D35 is  a_proof by L1030 , L275;
L1086: ( D35 . ( len D35 ) ) = ( D35 . ( ( len ( R30 ^ R31 ) ) + ( len D33 ) ) ) by FINSEQ_1:22;
L1087: ( D35 . ( len D35 ) ) = ( D35 . ( ( len ( R30 ^ R31 ) ) + 1 ) ) by L1086 , FINSEQ_1:39;
L1088: ( D35 . ( len D35 ) ) = ( D33 . 1 ) by L1087 , L1028 , FINSEQ_1:def 7;
L1089: ( D35 . ( len D35 ) ) = [ ( ( Ant ( Ant R23 ) ) ^ <* R11 *> ) , 4 ] by L1088 , FINSEQ_1:40;
L1090: ( ( D35 . ( len D35 ) ) `1 ) = ( ( Ant ( Ant R23 ) ) ^ <* R11 *> ) by L1089 , MCART_1:7;
thus L1091: thesis by L1090 , L1085 , L277;
end;
theorem
L1092: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (for R25 being (FinSequence of ( CQC-WFF R1 )) holds ((( Ant R23 ) = ( Ant R25 ) &  |- R23 &  |- R25) implies  |- ( ( Ant R23 ) ^ <* ( ( Suc R23 ) '&' ( Suc R25 ) ) *> )))))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
let R25 being (FinSequence of ( CQC-WFF R1 ));
assume that
L1093: ( Ant R23 ) = ( Ant R25 )
and
L1094:  |- R23
and
L1095:  |- R25;
consider R31 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) such that L1096: R31 is  a_proof and L1097: R25 = ( ( R31 . ( len R31 ) ) `1 ) by L1095 , L277;
consider R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) such that L1098: R30 is  a_proof and L1099: R23 = ( ( R30 . ( len R30 ) ) `1 ) by L1094 , L277;
L1100: ( ( Ant R23 ) ^ <* ( ( Suc R23 ) '&' ( Suc R25 ) ) *> ) in ( set_of_CQC-WFF-seq R1 ) by L263;
L1101:
now
let C45 being set;
assume L1102: C45 in ( rng <* [ ( ( Ant R23 ) ^ <* ( ( Suc R23 ) '&' ( Suc R25 ) ) *> ) , 5 ] *> );
L1103: C45 in { [ ( ( Ant R23 ) ^ <* ( ( Suc R23 ) '&' ( Suc R25 ) ) *> ) , 5 ] } by L1102 , FINSEQ_1:38;
L1104: C45 = [ ( ( Ant R23 ) ^ <* ( ( Suc R23 ) '&' ( Suc R25 ) ) *> ) , 5 ] by L1103 , TARSKI:def 1;
thus L1105: C45 in [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :] by L1104 , L1100 , CQC_THE1:21 , ZFMISC_1:87;
end;
L1106: ( rng <* [ ( ( Ant R23 ) ^ <* ( ( Suc R23 ) '&' ( Suc R25 ) ) *> ) , 5 ] *> ) c= [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :] by L1101 , TARSKI:def 3;
reconsider D36 = <* [ ( ( Ant R23 ) ^ <* ( ( Suc R23 ) '&' ( Suc R25 ) ) *> ) , 5 ] *> as (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) by L1106 , FINSEQ_1:def 4;
L1107: 1 in ( Seg 1 ) by FINSEQ_1:2 , TARSKI:def 1;
L1108: 1 in ( dom D36 ) by L1107 , FINSEQ_1:38;
set D37 = ( ( R30 ^ R31 ) ^ D36 );
reconsider D38 = D37 as (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]);
L1109: R30 <> ( {} ) by L1098 , L275;
L1110:
now
let C46 being Nat;
assume L1111: (1 <= C46 & C46 <= ( len D38 ));
L1112: C46 in ( dom D38 ) by L1111 , FINSEQ_3:25;
L1113:
now
given C47 being Nat such that
L1114: C47 in ( dom D36 )
and
L1115: C46 = ( ( len ( R30 ^ R31 ) ) + C47 );

L1116: C47 in ( Seg 1 ) by L1114 , FINSEQ_1:38;
L1117: C47 = 1 by L1116 , FINSEQ_1:2 , TARSKI:def 1;
L1118: ( D36 . C47 ) = [ ( ( Ant R23 ) ^ <* ( ( Suc R23 ) '&' ( Suc R25 ) ) *> ) , 5 ] by L1117 , FINSEQ_1:40;
L1119: ( ( D36 . C47 ) `1 ) = ( ( Ant R23 ) ^ <* ( ( Suc R23 ) '&' ( Suc R25 ) ) *> ) by L1118 , MCART_1:7;
L1120: ( ( D38 . C46 ) `1 ) = ( ( Ant R23 ) ^ <* ( ( Suc R23 ) '&' ( Suc R25 ) ) *> ) by L1119 , L1114 , L1115 , FINSEQ_1:def 7;
L1121: ( ( D36 . C47 ) `2 ) = 5 by L1118 , MCART_1:7;
L1122: ( ( D38 . C46 ) `2 ) = 5 by L1121 , L1114 , L1115 , FINSEQ_1:def 7;
L1123: ( len ( R30 ^ R31 ) ) < C46 by L1115 , L1117 , NAT_1:13;
L1124: 1 <= ( len R30 ) by L1109 , L116;
L1125: ( len R30 ) in ( dom R30 ) by L1124 , FINSEQ_3:25;
L1126: R23 = ( ( ( R30 ^ R31 ) . ( len R30 ) ) `1 ) by L1125 , L1099 , FINSEQ_1:def 7;
L1127: R31 <> ( {} ) by L1096 , L275;
L1128: ( len R30 ) < ( len ( R30 ^ R31 ) ) by L1127 , L116;
L1129: ( len R30 ) in ( dom ( R30 ^ R31 ) ) by L1128 , L1124 , FINSEQ_3:25;
L1130: R23 = ( ( D38 . ( len R30 ) ) `1 ) by L1129 , L1126 , FINSEQ_1:def 7;
L1131: 1 <= ( len R31 ) by L1127 , L116;
L1132: ( len R31 ) in ( dom R31 ) by L1131 , FINSEQ_3:25;
L1133: R25 = ( ( ( R30 ^ R31 ) . ( ( len R30 ) + ( len R31 ) ) ) `1 ) by L1132 , L1097 , FINSEQ_1:def 7;
L1134: R25 = ( ( ( R30 ^ R31 ) . ( len ( R30 ^ R31 ) ) ) `1 ) by L1133 , FINSEQ_1:22;
L1135: 1 <= ( len ( R30 ^ R31 ) ) by L1109 , L116;
L1136: ( len ( R30 ^ R31 ) ) in ( dom ( R30 ^ R31 ) ) by L1135 , FINSEQ_3:25;
L1137: R25 = ( ( D38 . ( len ( R30 ^ R31 ) ) ) `1 ) by L1136 , L1134 , FINSEQ_1:def 7;
L1138: 1 <= ( len ( R30 ^ R31 ) ) by L1109 , L116;
thus L1139: D38 , C46 is_a_correct_step  by L1138 , L1093 , L1120 , L1122 , L1124 , L1128 , L1130 , L1123 , L1137 , L273;
end;
L1140:
now
L1141:
now
given C48 being Nat such that
L1142: C48 in ( dom R31 )
and
L1143: C46 = ( ( len R30 ) + C48 );

L1144: 1 <= C48 by L1142 , FINSEQ_3:25;
L1145: C48 <= ( len R31 ) by L1142 , FINSEQ_3:25;
L1146: C46 <= ( ( len R31 ) + ( len R30 ) ) by L1145 , L1143 , XREAL_1:6;
L1147: C46 <= ( len ( R30 ^ R31 ) ) by L1146 , FINSEQ_1:22;
L1148: C48 <= C46 by L1143 , NAT_1:11;
L1149: 1 <= C46 by L1148 , L1144 , XXREAL_0:2;
L1150: R31 , C48 is_a_correct_step  by L1096 , L1144 , L1145 , L275;
L1151: ( R30 ^ R31 ) , C46 is_a_correct_step  by L1150 , L1142 , L1143 , L1144 , L1145 , L783;
thus L1152: D38 , C46 is_a_correct_step  by L1151 , L1149 , L1147 , L598;
end;
L1153:
now
assume L1154: C46 in ( dom R30 );
L1155: 1 <= C46 by L1154 , FINSEQ_3:25;
L1156: C46 <= ( len R30 ) by L1154 , FINSEQ_3:25;
L1157: ( len R30 ) <= ( len ( R30 ^ R31 ) ) by L116;
L1158: C46 <= ( len ( R30 ^ R31 ) ) by L1157 , L1156 , XXREAL_0:2;
L1159: R30 , C46 is_a_correct_step  by L1098 , L1155 , L1156 , L275;
L1160: ( R30 ^ R31 ) , C46 is_a_correct_step  by L1159 , L1155 , L1156 , L598;
thus L1161: D38 , C46 is_a_correct_step  by L1160 , L1155 , L1158 , L598;
end;
assume L1162: C46 in ( dom ( R30 ^ R31 ) );
thus L1163: D38 , C46 is_a_correct_step  by L1162 , L1153 , L1141 , FINSEQ_1:25;
end;
thus L1164: D38 , C46 is_a_correct_step  by L1140 , L1112 , L1113 , FINSEQ_1:25;
end;
L1165: D38 is  a_proof by L1110 , L275;
L1166: ( D38 . ( len D38 ) ) = ( D38 . ( ( len ( R30 ^ R31 ) ) + ( len D36 ) ) ) by FINSEQ_1:22;
L1167: ( D38 . ( len D38 ) ) = ( D38 . ( ( len ( R30 ^ R31 ) ) + 1 ) ) by L1166 , FINSEQ_1:39;
L1168: ( D38 . ( len D38 ) ) = ( D36 . 1 ) by L1167 , L1108 , FINSEQ_1:def 7;
L1169: ( D38 . ( len D38 ) ) = [ ( ( Ant R23 ) ^ <* ( ( Suc R23 ) '&' ( Suc R25 ) ) *> ) , 5 ] by L1168 , FINSEQ_1:40;
L1170: ( ( D38 . ( len D38 ) ) `1 ) = ( ( Ant R23 ) ^ <* ( ( Suc R23 ) '&' ( Suc R25 ) ) *> ) by L1169 , MCART_1:7;
thus L1171: thesis by L1170 , L1165 , L277;
end;
theorem
L1172: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ((( R11 '&' R12 ) = ( Suc R23 ) &  |- R23) implies  |- ( ( Ant R23 ) ^ <* R11 *> ))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume that
L1173: ( R11 '&' R12 ) = ( Suc R23 )
and
L1174:  |- R23;
consider R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) such that L1175: R30 is  a_proof and L1176: ( ( R30 . ( len R30 ) ) `1 ) = R23 by L1174 , L277;
L1177: ( ( Ant R23 ) ^ <* R11 *> ) in ( set_of_CQC-WFF-seq R1 ) by L263;
L1178:
now
let C49 being set;
assume L1179: C49 in ( rng <* [ ( ( Ant R23 ) ^ <* R11 *> ) , 6 ] *> );
L1180: C49 in { [ ( ( Ant R23 ) ^ <* R11 *> ) , 6 ] } by L1179 , FINSEQ_1:38;
L1181: C49 = [ ( ( Ant R23 ) ^ <* R11 *> ) , 6 ] by L1180 , TARSKI:def 1;
thus L1182: C49 in [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :] by L1181 , L1177 , CQC_THE1:21 , ZFMISC_1:87;
end;
L1183: ( rng <* [ ( ( Ant R23 ) ^ <* R11 *> ) , 6 ] *> ) c= [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :] by L1178 , TARSKI:def 3;
reconsider D39 = <* [ ( ( Ant R23 ) ^ <* R11 *> ) , 6 ] *> as (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) by L1183 , FINSEQ_1:def 4;
L1184: 1 in ( Seg 1 ) by FINSEQ_1:2 , TARSKI:def 1;
L1185: 1 in ( dom D39 ) by L1184 , FINSEQ_1:38;
set D40 = ( R30 ^ D39 );
reconsider D41 = D40 as (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]);
L1186: R30 <> ( {} ) by L1175 , L275;
L1187:
now
let C50 being Nat;
assume L1188: (1 <= C50 & C50 <= ( len D41 ));
L1189: C50 in ( dom D41 ) by L1188 , FINSEQ_3:25;
L1190:
now
L1191: 1 <= ( len R30 ) by L1186 , L116;
L1192: ( len R30 ) in ( dom R30 ) by L1191 , FINSEQ_3:25;
L1193: R23 = ( ( D41 . ( len R30 ) ) `1 ) by L1192 , L1176 , FINSEQ_1:def 7;
given C51 being Nat such that
L1194: C51 in ( dom D39 )
and
L1195: C50 = ( ( len R30 ) + C51 );

L1196: C51 in ( Seg 1 ) by L1194 , FINSEQ_1:38;
L1197: C51 = 1 by L1196 , FINSEQ_1:2 , TARSKI:def 1;
L1198: ( D39 . C51 ) = [ ( ( Ant R23 ) ^ <* R11 *> ) , 6 ] by L1197 , FINSEQ_1:40;
L1199: ( ( D39 . C51 ) `1 ) = ( ( Ant R23 ) ^ <* R11 *> ) by L1198 , MCART_1:7;
L1200: ( ( D41 . C50 ) `1 ) = ( ( Ant R23 ) ^ <* R11 *> ) by L1199 , L1194 , L1195 , FINSEQ_1:def 7;
L1201: ( ( D39 . C51 ) `2 ) = 6 by L1198 , MCART_1:7;
L1202: ( ( D41 . C50 ) `2 ) = 6 by L1201 , L1194 , L1195 , FINSEQ_1:def 7;
L1203: ( len R30 ) < C50 by L1195 , L1197 , NAT_1:13;
thus L1204: D41 , C50 is_a_correct_step  by L1203 , L1173 , L1200 , L1202 , L1191 , L1193 , L273;
end;
L1205:
now
assume L1206: C50 in ( dom R30 );
L1207: (1 <= C50 & C50 <= ( len R30 )) by L1206 , FINSEQ_3:25;
L1208: R30 , C50 is_a_correct_step  by L1207 , L1175 , L275;
thus L1209: D41 , C50 is_a_correct_step  by L1208 , L1207 , L598;
end;
thus L1210: D41 , C50 is_a_correct_step  by L1205 , L1189 , L1190 , FINSEQ_1:25;
end;
L1211: D41 is  a_proof by L1187 , L275;
L1212: ( D41 . ( len D41 ) ) = ( D41 . ( ( len R30 ) + ( len D39 ) ) ) by FINSEQ_1:22;
L1213: ( D41 . ( len D41 ) ) = ( D41 . ( ( len R30 ) + 1 ) ) by L1212 , FINSEQ_1:39;
L1214: ( D41 . ( len D41 ) ) = ( D39 . 1 ) by L1213 , L1185 , FINSEQ_1:def 7;
L1215: ( D41 . ( len D41 ) ) = [ ( ( Ant R23 ) ^ <* R11 *> ) , 6 ] by L1214 , FINSEQ_1:40;
L1216: ( ( D41 . ( len D41 ) ) `1 ) = ( ( Ant R23 ) ^ <* R11 *> ) by L1215 , MCART_1:7;
thus L1217: thesis by L1216 , L1211 , L277;
end;
theorem
L1218: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ((( R11 '&' R12 ) = ( Suc R23 ) &  |- R23) implies  |- ( ( Ant R23 ) ^ <* R12 *> ))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume that
L1219: ( R11 '&' R12 ) = ( Suc R23 )
and
L1220:  |- R23;
consider R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) such that L1221: R30 is  a_proof and L1222: ( ( R30 . ( len R30 ) ) `1 ) = R23 by L1220 , L277;
L1223: ( ( Ant R23 ) ^ <* R12 *> ) in ( set_of_CQC-WFF-seq R1 ) by L263;
L1224:
now
let C52 being set;
assume L1225: C52 in ( rng <* [ ( ( Ant R23 ) ^ <* R12 *> ) , 7 ] *> );
L1226: C52 in { [ ( ( Ant R23 ) ^ <* R12 *> ) , 7 ] } by L1225 , FINSEQ_1:38;
L1227: C52 = [ ( ( Ant R23 ) ^ <* R12 *> ) , 7 ] by L1226 , TARSKI:def 1;
thus L1228: C52 in [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :] by L1227 , L1223 , CQC_THE1:21 , ZFMISC_1:87;
end;
L1229: ( rng <* [ ( ( Ant R23 ) ^ <* R12 *> ) , 7 ] *> ) c= [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :] by L1224 , TARSKI:def 3;
reconsider D42 = <* [ ( ( Ant R23 ) ^ <* R12 *> ) , 7 ] *> as (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) by L1229 , FINSEQ_1:def 4;
L1230: 1 in ( Seg 1 ) by FINSEQ_1:2 , TARSKI:def 1;
L1231: 1 in ( dom D42 ) by L1230 , FINSEQ_1:38;
set D43 = ( R30 ^ D42 );
reconsider D44 = D43 as (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]);
L1232: R30 <> ( {} ) by L1221 , L275;
L1233:
now
let C53 being Nat;
assume L1234: (1 <= C53 & C53 <= ( len D44 ));
L1235: C53 in ( dom D44 ) by L1234 , FINSEQ_3:25;
L1236:
now
L1237: 1 <= ( len R30 ) by L1232 , L116;
L1238: ( len R30 ) in ( dom R30 ) by L1237 , FINSEQ_3:25;
L1239: R23 = ( ( D44 . ( len R30 ) ) `1 ) by L1238 , L1222 , FINSEQ_1:def 7;
given C54 being Nat such that
L1240: C54 in ( dom D42 )
and
L1241: C53 = ( ( len R30 ) + C54 );

L1242: C54 in ( Seg 1 ) by L1240 , FINSEQ_1:38;
L1243: C54 = 1 by L1242 , FINSEQ_1:2 , TARSKI:def 1;
L1244: ( D42 . C54 ) = [ ( ( Ant R23 ) ^ <* R12 *> ) , 7 ] by L1243 , FINSEQ_1:40;
L1245: ( ( D42 . C54 ) `1 ) = ( ( Ant R23 ) ^ <* R12 *> ) by L1244 , MCART_1:7;
L1246: ( ( D44 . C53 ) `1 ) = ( ( Ant R23 ) ^ <* R12 *> ) by L1245 , L1240 , L1241 , FINSEQ_1:def 7;
L1247: ( ( D42 . C54 ) `2 ) = 7 by L1244 , MCART_1:7;
L1248: ( ( D44 . C53 ) `2 ) = 7 by L1247 , L1240 , L1241 , FINSEQ_1:def 7;
L1249: ( len R30 ) < C53 by L1241 , L1243 , NAT_1:13;
thus L1250: D44 , C53 is_a_correct_step  by L1249 , L1219 , L1246 , L1248 , L1237 , L1239 , L273;
end;
L1251:
now
assume L1252: C53 in ( dom R30 );
L1253: (1 <= C53 & C53 <= ( len R30 )) by L1252 , FINSEQ_3:25;
L1254: R30 , C53 is_a_correct_step  by L1253 , L1221 , L275;
thus L1255: D44 , C53 is_a_correct_step  by L1254 , L1253 , L598;
end;
thus L1256: D44 , C53 is_a_correct_step  by L1251 , L1235 , L1236 , FINSEQ_1:25;
end;
L1257: D44 is  a_proof by L1233 , L275;
L1258: ( D44 . ( len D44 ) ) = ( D44 . ( ( len R30 ) + ( len D42 ) ) ) by FINSEQ_1:22;
L1259: ( D44 . ( len D44 ) ) = ( D44 . ( ( len R30 ) + 1 ) ) by L1258 , FINSEQ_1:39;
L1260: ( D44 . ( len D44 ) ) = ( D42 . 1 ) by L1259 , L1231 , FINSEQ_1:def 7;
L1261: ( D44 . ( len D44 ) ) = [ ( ( Ant R23 ) ^ <* R12 *> ) , 7 ] by L1260 , FINSEQ_1:40;
L1262: ( ( D44 . ( len D44 ) ) `1 ) = ( ( Ant R23 ) ^ <* R12 *> ) by L1261 , MCART_1:7;
thus L1263: thesis by L1262 , L1257 , L277;
end;
theorem
L1264: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R14 being (bound_QC-variable of R1) holds (for R15 being (bound_QC-variable of R1) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ((( Suc R23 ) = ( All (R14 , R11) ) &  |- R23) implies  |- ( ( Ant R23 ) ^ <* ( R11 . (R14 , R15) ) *> )))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R14 being (bound_QC-variable of R1);
let R15 being (bound_QC-variable of R1);
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume that
L1265: ( Suc R23 ) = ( All (R14 , R11) )
and
L1266:  |- R23;
consider R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) such that L1267: R30 is  a_proof and L1268: ( ( R30 . ( len R30 ) ) `1 ) = R23 by L1266 , L277;
L1269: ( ( Ant R23 ) ^ <* ( R11 . (R14 , R15) ) *> ) in ( set_of_CQC-WFF-seq R1 ) by L263;
L1270:
now
let C55 being set;
assume L1271: C55 in ( rng <* [ ( ( Ant R23 ) ^ <* ( R11 . (R14 , R15) ) *> ) , 8 ] *> );
L1272: C55 in { [ ( ( Ant R23 ) ^ <* ( R11 . (R14 , R15) ) *> ) , 8 ] } by L1271 , FINSEQ_1:38;
L1273: C55 = [ ( ( Ant R23 ) ^ <* ( R11 . (R14 , R15) ) *> ) , 8 ] by L1272 , TARSKI:def 1;
thus L1274: C55 in [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :] by L1273 , L1269 , CQC_THE1:21 , ZFMISC_1:87;
end;
L1275: ( rng <* [ ( ( Ant R23 ) ^ <* ( R11 . (R14 , R15) ) *> ) , 8 ] *> ) c= [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :] by L1270 , TARSKI:def 3;
reconsider D45 = <* [ ( ( Ant R23 ) ^ <* ( R11 . (R14 , R15) ) *> ) , 8 ] *> as (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) by L1275 , FINSEQ_1:def 4;
L1276: 1 in ( Seg 1 ) by FINSEQ_1:2 , TARSKI:def 1;
L1277: 1 in ( dom D45 ) by L1276 , FINSEQ_1:38;
set D46 = ( R30 ^ D45 );
reconsider D47 = D46 as (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]);
L1278: R30 <> ( {} ) by L1267 , L275;
L1279:
now
let C56 being Nat;
assume L1280: (1 <= C56 & C56 <= ( len D47 ));
L1281: C56 in ( dom D47 ) by L1280 , FINSEQ_3:25;
L1282:
now
L1283: 1 <= ( len R30 ) by L1278 , L116;
L1284: ( len R30 ) in ( dom R30 ) by L1283 , FINSEQ_3:25;
L1285: R23 = ( ( D47 . ( len R30 ) ) `1 ) by L1284 , L1268 , FINSEQ_1:def 7;
given C57 being Nat such that
L1286: C57 in ( dom D45 )
and
L1287: C56 = ( ( len R30 ) + C57 );

L1288: C57 in ( Seg 1 ) by L1286 , FINSEQ_1:38;
L1289: C57 = 1 by L1288 , FINSEQ_1:2 , TARSKI:def 1;
L1290: ( D45 . C57 ) = [ ( ( Ant R23 ) ^ <* ( R11 . (R14 , R15) ) *> ) , 8 ] by L1289 , FINSEQ_1:40;
L1291: ( ( D45 . C57 ) `1 ) = ( ( Ant R23 ) ^ <* ( R11 . (R14 , R15) ) *> ) by L1290 , MCART_1:7;
L1292: ( ( D47 . C56 ) `1 ) = ( ( Ant R23 ) ^ <* ( R11 . (R14 , R15) ) *> ) by L1291 , L1286 , L1287 , FINSEQ_1:def 7;
L1293: ( ( D45 . C57 ) `2 ) = 8 by L1290 , MCART_1:7;
L1294: ( ( D47 . C56 ) `2 ) = 8 by L1293 , L1286 , L1287 , FINSEQ_1:def 7;
L1295: ( len R30 ) < C56 by L1287 , L1289 , NAT_1:13;
thus L1296: D47 , C56 is_a_correct_step  by L1295 , L1265 , L1292 , L1294 , L1283 , L1285 , L273;
end;
L1297:
now
assume L1298: C56 in ( dom R30 );
L1299: (1 <= C56 & C56 <= ( len R30 )) by L1298 , FINSEQ_3:25;
L1300: R30 , C56 is_a_correct_step  by L1299 , L1267 , L275;
thus L1301: D47 , C56 is_a_correct_step  by L1300 , L1299 , L598;
end;
thus L1302: D47 , C56 is_a_correct_step  by L1297 , L1281 , L1282 , FINSEQ_1:25;
end;
L1303: D47 is  a_proof by L1279 , L275;
L1304: ( D47 . ( len D47 ) ) = ( D47 . ( ( len R30 ) + ( len D45 ) ) ) by FINSEQ_1:22;
L1305: ( D47 . ( len D47 ) ) = ( D47 . ( ( len R30 ) + 1 ) ) by L1304 , FINSEQ_1:39;
L1306: ( D47 . ( len D47 ) ) = ( D45 . 1 ) by L1305 , L1277 , FINSEQ_1:def 7;
L1307: ( D47 . ( len D47 ) ) = [ ( ( Ant R23 ) ^ <* ( R11 . (R14 , R15) ) *> ) , 8 ] by L1306 , FINSEQ_1:40;
L1308: ( ( D47 . ( len D47 ) ) `1 ) = ( ( Ant R23 ) ^ <* ( R11 . (R14 , R15) ) *> ) by L1307 , MCART_1:7;
thus L1309: thesis by L1308 , L1303 , L277;
end;
theorem
L1310: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R14 being (bound_QC-variable of R1) holds (for R15 being (bound_QC-variable of R1) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ((( Suc R23 ) = ( R11 . (R14 , R15) ) & (not R15 in ( still_not-bound_in ( Ant R23 ) )) & (not R15 in ( still_not-bound_in ( All (R14 , R11) ) )) &  |- R23) implies  |- ( ( Ant R23 ) ^ <* ( All (R14 , R11) ) *> )))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R14 being (bound_QC-variable of R1);
let R15 being (bound_QC-variable of R1);
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume that
L1311: (( Suc R23 ) = ( R11 . (R14 , R15) ) & (not R15 in ( still_not-bound_in ( Ant R23 ) )) & (not R15 in ( still_not-bound_in ( All (R14 , R11) ) )))
and
L1312:  |- R23;
consider R30 being (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) such that L1313: R30 is  a_proof and L1314: ( ( R30 . ( len R30 ) ) `1 ) = R23 by L1312 , L277;
L1315: ( ( Ant R23 ) ^ <* ( All (R14 , R11) ) *> ) in ( set_of_CQC-WFF-seq R1 ) by L263;
L1316:
now
let C58 being set;
assume L1317: C58 in ( rng <* [ ( ( Ant R23 ) ^ <* ( All (R14 , R11) ) *> ) , 9 ] *> );
L1318: C58 in { [ ( ( Ant R23 ) ^ <* ( All (R14 , R11) ) *> ) , 9 ] } by L1317 , FINSEQ_1:38;
L1319: C58 = [ ( ( Ant R23 ) ^ <* ( All (R14 , R11) ) *> ) , 9 ] by L1318 , TARSKI:def 1;
thus L1320: C58 in [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :] by L1319 , L1315 , CQC_THE1:21 , ZFMISC_1:87;
end;
L1321: ( rng <* [ ( ( Ant R23 ) ^ <* ( All (R14 , R11) ) *> ) , 9 ] *> ) c= [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :] by L1316 , TARSKI:def 3;
reconsider D48 = <* [ ( ( Ant R23 ) ^ <* ( All (R14 , R11) ) *> ) , 9 ] *> as (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]) by L1321 , FINSEQ_1:def 4;
L1322: 1 in ( Seg 1 ) by FINSEQ_1:2 , TARSKI:def 1;
L1323: 1 in ( dom D48 ) by L1322 , FINSEQ_1:38;
set D49 = ( R30 ^ D48 );
reconsider D50 = D49 as (FinSequence of [: ( set_of_CQC-WFF-seq R1 ) , ( Proof_Step_Kinds ) :]);
L1324: R30 <> ( {} ) by L1313 , L275;
L1325:
now
let C59 being Nat;
assume L1326: (1 <= C59 & C59 <= ( len D50 ));
L1327: C59 in ( dom D50 ) by L1326 , FINSEQ_3:25;
L1328:
now
L1329: 1 <= ( len R30 ) by L1324 , L116;
L1330: ( len R30 ) in ( dom R30 ) by L1329 , FINSEQ_3:25;
L1331: R23 = ( ( D50 . ( len R30 ) ) `1 ) by L1330 , L1314 , FINSEQ_1:def 7;
given C60 being Nat such that
L1332: C60 in ( dom D48 )
and
L1333: C59 = ( ( len R30 ) + C60 );

L1334: C60 in ( Seg 1 ) by L1332 , FINSEQ_1:38;
L1335: C60 = 1 by L1334 , FINSEQ_1:2 , TARSKI:def 1;
L1336: ( D48 . C60 ) = [ ( ( Ant R23 ) ^ <* ( All (R14 , R11) ) *> ) , 9 ] by L1335 , FINSEQ_1:40;
L1337: ( ( D48 . C60 ) `1 ) = ( ( Ant R23 ) ^ <* ( All (R14 , R11) ) *> ) by L1336 , MCART_1:7;
L1338: ( ( D50 . C59 ) `1 ) = ( ( Ant R23 ) ^ <* ( All (R14 , R11) ) *> ) by L1337 , L1332 , L1333 , FINSEQ_1:def 7;
L1339: ( ( D48 . C60 ) `2 ) = 9 by L1336 , MCART_1:7;
L1340: ( ( D50 . C59 ) `2 ) = 9 by L1339 , L1332 , L1333 , FINSEQ_1:def 7;
L1341: ( len R30 ) < C59 by L1333 , L1335 , NAT_1:13;
thus L1342: D50 , C59 is_a_correct_step  by L1341 , L1311 , L1338 , L1340 , L1329 , L1331 , L273;
end;
L1343:
now
assume L1344: C59 in ( dom R30 );
L1345: (1 <= C59 & C59 <= ( len R30 )) by L1344 , FINSEQ_3:25;
L1346: R30 , C59 is_a_correct_step  by L1345 , L1313 , L275;
thus L1347: D50 , C59 is_a_correct_step  by L1346 , L1345 , L598;
end;
thus L1348: D50 , C59 is_a_correct_step  by L1343 , L1327 , L1328 , FINSEQ_1:25;
end;
L1349: D50 is  a_proof by L1325 , L275;
L1350: ( D50 . ( len D50 ) ) = ( D50 . ( ( len R30 ) + ( len D48 ) ) ) by FINSEQ_1:22;
L1351: ( D50 . ( len D50 ) ) = ( D50 . ( ( len R30 ) + 1 ) ) by L1350 , FINSEQ_1:39;
L1352: ( D50 . ( len D50 ) ) = ( D48 . 1 ) by L1351 , L1323 , FINSEQ_1:def 7;
L1353: ( D50 . ( len D50 ) ) = [ ( ( Ant R23 ) ^ <* ( All (R14 , R11) ) *> ) , 9 ] by L1352 , FINSEQ_1:40;
L1354: ( ( D50 . ( len D50 ) ) `1 ) = ( ( Ant R23 ) ^ <* ( All (R14 , R11) ) *> ) by L1353 , MCART_1:7;
thus L1355: thesis by L1354 , L1349 , L277;
end;
theorem
L1356: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (( |- R23 &  |- ( ( Ant R23 ) ^ <* ( 'not' ( Suc R23 ) ) *> )) implies  |- ( ( Ant R23 ) ^ <* R11 *> )))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume that
L1357:  |- R23
and
L1358:  |- ( ( Ant R23 ) ^ <* ( 'not' ( Suc R23 ) ) *> );
set D51 = ( ( ( Ant R23 ) ^ <* ( 'not' R11 ) *> ) ^ <* ( Suc R23 ) *> );
L1359: (( Ant D51 ) = ( ( Ant R23 ) ^ <* ( 'not' R11 ) *> ) & ( Suc R23 ) = ( Suc D51 )) by L111;
L1360:  |- D51 by L1359 , L1357 , L127 , L886;
set D52 = ( ( ( Ant R23 ) ^ <* ( 'not' R11 ) *> ) ^ <* ( 'not' ( Suc R23 ) ) *> );
set D53 = ( ( Ant R23 ) ^ <* ( 'not' ( Suc R23 ) ) *> );
L1361: ( Suc D53 ) = ( 'not' ( Suc R23 ) ) by L111;
L1362: ( Suc D53 ) = ( Suc D52 ) by L1361 , L111;
L1363: (( Ant D52 ) = ( ( Ant R23 ) ^ <* ( 'not' R11 ) *> ) & ( Ant D53 ) = ( Ant R23 )) by L111;
L1364:  |- D52 by L1363 , L1358 , L1362 , L127 , L886;
L1365: ( Suc D51 ) = ( Suc R23 ) by L111;
L1366: ( 'not' ( Suc D51 ) ) = ( Suc D52 ) by L1365 , L111;
L1367: 1 < ( len D51 ) by L131;
L1368: ( Ant D51 ) = ( ( Ant R23 ) ^ <* ( 'not' R11 ) *> ) by L111;
L1369: (( Ant D51 ) = ( Ant D52 ) & ( Suc ( Ant D51 ) ) = ( 'not' R11 )) by L1368 , L111;
L1370:  |- ( ( Ant ( Ant D51 ) ) ^ <* R11 *> ) by L1369 , L1360 , L1364 , L1366 , L1367 , L1012;
thus L1371: thesis by L1370 , L1368 , L111;
end;
theorem
L1372: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ((1 <= ( len R23 ) &  |- R23 &  |- ( R23 ^ <* R11 *> )) implies  |- ( ( Ant R23 ) ^ <* R11 *> )))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume that
L1373: 1 <= ( len R23 )
and
L1374:  |- R23
and
L1375:  |- ( R23 ^ <* R11 *> );
set D54 = ( ( ( Ant R23 ) ^ <* ( 'not' ( Suc R23 ) ) *> ) ^ <* ( 'not' ( Suc R23 ) ) *> );
set D55 = ( ( ( Ant R23 ) ^ <* ( 'not' ( Suc R23 ) ) *> ) ^ <* ( Suc R23 ) *> );
L1376: ( Ant D54 ) = ( ( Ant R23 ) ^ <* ( 'not' ( Suc R23 ) ) *> ) by L111;
L1377: ( len ( Ant D54 ) ) in ( dom ( Ant D54 ) ) by L1376 , L139;
L1378: ( ( ( Ant R23 ) ^ <* ( 'not' ( Suc R23 ) ) *> ) . ( ( len ( Ant R23 ) ) + 1 ) ) = ( 'not' ( Suc R23 ) ) by FINSEQ_1:42;
L1379: ( ( Ant D54 ) . ( ( len ( Ant R23 ) ) + 1 ) ) = ( 'not' ( Suc R23 ) ) by L1378 , L111;
L1380: ( ( Ant D54 ) . ( ( len ( Ant R23 ) ) + 1 ) ) = ( Suc D54 ) by L1379 , L111;
L1381: ( ( Ant D54 ) . ( len ( Ant D54 ) ) ) = ( Suc D54 ) by L1380 , L1376 , FINSEQ_2:16;
L1382:  |- D54 by L1381 , L1377 , L42 , L576;
set D56 = ( ( Ant D55 ) ^ <* R11 *> );
L1383: D54 = ( ( Ant D55 ) ^ <* ( 'not' ( Suc R23 ) ) *> ) by L111;
L1384: D54 = ( ( Ant D55 ) ^ <* ( 'not' ( Suc D55 ) ) *> ) by L1383 , L111;
L1385: (( Ant D55 ) = ( ( Ant R23 ) ^ <* ( 'not' ( Suc R23 ) ) *> ) & ( Suc D55 ) = ( Suc R23 )) by L111;
L1386:  |- D55 by L1385 , L1374 , L127 , L886;
L1387:  |- ( ( Ant D55 ) ^ <* R11 *> ) by L1386 , L1382 , L1384 , L1356;
set D57 = ( R23 ^ <* R11 *> );
L1388: ( 1 + 1 ) <= ( ( len R23 ) + 1 ) by L1373 , XREAL_1:6;
L1389: ( 1 + 1 ) <= ( ( len R23 ) + ( len <* R11 *> ) ) by L1388 , FINSEQ_1:39;
L1390: ( 1 + 1 ) <= ( len D57 ) by L1389 , FINSEQ_1:22;
L1391: 1 < ( len D57 ) by L1390 , NAT_1:13;
L1392: ( Ant D55 ) = ( ( Ant R23 ) ^ <* ( 'not' ( Suc R23 ) ) *> ) by L111;
L1393: ( Suc ( Ant D55 ) ) = ( 'not' ( Suc R23 ) ) by L1392 , L111;
L1394: ( Suc ( Ant D55 ) ) = ( 'not' ( Suc ( Ant D57 ) ) ) by L1393 , L111;
L1395: ( Suc ( Ant D56 ) ) = ( 'not' ( Suc ( Ant D57 ) ) ) by L1394 , L111;
L1396: 1 <= ( len ( Ant D55 ) ) by L1392 , L139;
L1397: ( 1 + 1 ) <= ( ( len ( Ant D55 ) ) + 1 ) by L1396 , XREAL_1:6;
L1398: ( 1 + 1 ) <= ( ( len ( Ant D55 ) ) + ( len <* R11 *> ) ) by L1397 , FINSEQ_1:39;
L1399: ( 1 + 1 ) <= ( len D56 ) by L1398 , FINSEQ_1:22;
L1400: 1 < ( len D56 ) by L1399 , NAT_1:13;
L1401: ( Ant D56 ) = ( Ant D55 ) by L111;
L1402: ( Ant ( Ant D56 ) ) = ( Ant R23 ) by L1401 , L1392 , L111;
L1403: ( Ant ( Ant D56 ) ) = ( Ant ( Ant D57 ) ) by L1402 , L111;
L1404: ( Suc D56 ) = R11 by L111;
L1405:  |- ( ( Ant ( Ant D57 ) ) ^ <* ( Suc D57 ) *> ) by L1404 , L1375 , L1387 , L1391 , L1400 , L1403 , L1395 , L111 , L932;
L1406:  |- ( ( Ant R23 ) ^ <* ( Suc D57 ) *> ) by L1405 , L111;
thus L1407: thesis by L1406 , L111;
end;
theorem
L1408: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ( |- ( ( R23 ^ <* R11 *> ) ^ <* R12 *> ) implies  |- ( ( R23 ^ <* ( 'not' R12 ) *> ) ^ <* ( 'not' R11 ) *> ))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
set D58 = ( ( R23 ^ <* R11 *> ) ^ <* R12 *> );
set D59 = ( ( ( ( Ant ( Ant D58 ) ) ^ <* ( 'not' R12 ) *> ) ^ <* R11 *> ) ^ <* R12 *> );
assume L1409:  |- D58;
L1410: ( Ant D58 ) = ( R23 ^ <* R11 *> ) by L111;
L1411: ( Ant ( Ant D58 ) ) = R23 by L1410 , L111;
set D60 = ( ( ( ( Ant ( Ant D58 ) ) ^ <* ( 'not' R12 ) *> ) ^ <* ( 'not' R11 ) *> ) ^ <* ( 'not' R11 ) *> );
set D61 = ( ( ( ( Ant ( Ant D58 ) ) ^ <* ( 'not' R12 ) *> ) ^ <* R11 *> ) ^ <* ( 'not' R12 ) *> );
L1412: 1 < ( len D60 ) by L131;
L1413: ( Suc ( ( Ant D59 ) ^ <* ( 'not' R11 ) *> ) ) = ( 'not' R11 ) by L111;
L1414: ( Suc ( ( Ant D59 ) ^ <* ( 'not' R11 ) *> ) ) = ( Suc D60 ) by L1413 , L111;
L1415: ( Ant D61 ) = ( ( ( Ant ( Ant D58 ) ) ^ <* ( 'not' R12 ) *> ) ^ <* R11 *> ) by L111;
L1416: ( Ant D61 ) = ( ( Ant ( Ant D58 ) ) ^ ( <* ( 'not' R12 ) *> ^ <* R11 *> ) ) by L1415 , FINSEQ_1:32;
L1417: ( Ant D61 ) = ( ( Ant ( Ant D58 ) ) ^ <* ( 'not' R12 ) , R11 *> ) by L1416 , FINSEQ_1:def 9;
L1418: ( ( Ant D61 ) . ( ( len R23 ) + 1 ) ) = ( 'not' R12 ) by L1417 , L1411 , L242;
L1419: ( ( Ant D61 ) . ( ( len R23 ) + 1 ) ) = ( Suc D61 ) by L1418 , L111;
L1420: ( Suc D58 ) = R12 by L111;
L1421: ( Suc D58 ) = ( Suc D59 ) by L1420 , L111;
L1422: ( Ant D59 ) = ( ( ( Ant ( Ant D58 ) ) ^ <* ( 'not' R12 ) *> ) ^ <* R11 *> ) by L111;
L1423: 1 < ( len ( ( Ant D59 ) ^ <* ( 'not' R11 ) *> ) ) by L1422 , L131;
L1424: (( Suc ( Ant D58 ) ) = R11 & ( ( 0 ) + 1 ) <= ( len ( Ant D58 ) )) by L1410 , L111 , L139;
L1425:  |- D59 by L1424 , L1409 , L1422 , L1421 , L158 , L886;
L1426: 1 in ( dom <* ( 'not' R12 ) , R11 *> ) by L242;
L1427: ( ( len R23 ) + 1 ) in ( dom ( Ant D61 ) ) by L1426 , L1411 , L1417 , FINSEQ_1:28;
L1428: (( Suc D59 ) = R12 & ( Ant D59 ) = ( ( ( Ant ( Ant D58 ) ) ^ <* ( 'not' R12 ) *> ) ^ <* R11 *> )) by L111;
L1429:  |- ( ( Ant D59 ) ^ <* ( 'not' ( Suc D59 ) ) *> ) by L1428 , L1419 , L1427 , L42 , L576;
L1430:  |- ( ( Ant D59 ) ^ <* ( 'not' R11 ) *> ) by L1429 , L1425 , L1356;
L1431: ( Ant D60 ) = ( ( ( Ant ( Ant D58 ) ) ^ <* ( 'not' R12 ) *> ) ^ <* ( 'not' R11 ) *> ) by L111;
L1432: ( Ant D60 ) = ( ( Ant ( Ant D58 ) ) ^ ( <* ( 'not' R12 ) *> ^ <* ( 'not' R11 ) *> ) ) by L1431 , FINSEQ_1:32;
L1433: ( Ant D60 ) = ( ( Ant ( Ant D58 ) ) ^ <* ( 'not' R12 ) , ( 'not' R11 ) *> ) by L1432 , FINSEQ_1:def 9;
L1434: ( ( Ant D60 ) . ( ( len R23 ) + 2 ) ) = ( 'not' R11 ) by L1433 , L1411 , L242;
L1435: ( ( Ant D60 ) . ( ( len R23 ) + 2 ) ) = ( Suc D60 ) by L1434 , L111;
L1436: 2 in ( dom <* ( 'not' R12 ) , ( 'not' R11 ) *> ) by L242;
L1437: ( ( len R23 ) + 2 ) in ( dom ( Ant D60 ) ) by L1436 , L1411 , L1433 , FINSEQ_1:28;
L1438:  |- D60 by L1437 , L1435 , L42 , L576;
L1439: ( Ant ( ( Ant D59 ) ^ <* ( 'not' R11 ) *> ) ) = ( ( ( Ant ( Ant D58 ) ) ^ <* ( 'not' R12 ) *> ) ^ <* R11 *> ) by L1422 , L111;
L1440: ( Suc ( Ant ( ( Ant D59 ) ^ <* ( 'not' R11 ) *> ) ) ) = R11 by L1439 , L111;
L1441: ( 'not' ( Suc ( Ant ( ( Ant D59 ) ^ <* ( 'not' R11 ) *> ) ) ) ) = ( Suc ( Ant D60 ) ) by L1440 , L1431 , L111;
L1442: ( Ant ( Ant ( ( Ant D59 ) ^ <* ( 'not' R11 ) *> ) ) ) = ( ( Ant ( Ant D58 ) ) ^ <* ( 'not' R12 ) *> ) by L1439 , L111;
L1443: ( Ant ( Ant D60 ) ) = ( Ant ( Ant ( ( Ant D59 ) ^ <* ( 'not' R11 ) *> ) ) ) by L1442 , L1431 , L111;
thus L1444: thesis by L1443 , L1411 , L1430 , L1438 , L1423 , L1412 , L1442 , L1441 , L1413 , L1414 , L932;
end;
theorem
L1445: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ( |- ( ( R23 ^ <* ( 'not' R11 ) *> ) ^ <* ( 'not' R12 ) *> ) implies  |- ( ( R23 ^ <* R12 *> ) ^ <* R11 *> ))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
set D62 = ( ( R23 ^ <* ( 'not' R11 ) *> ) ^ <* ( 'not' R12 ) *> );
set D63 = ( ( ( ( Ant ( Ant D62 ) ) ^ <* R12 *> ) ^ <* ( 'not' R11 ) *> ) ^ <* ( 'not' R12 ) *> );
assume L1446:  |- D62;
L1447: ( Ant D63 ) = ( ( ( Ant ( Ant D62 ) ) ^ <* R12 *> ) ^ <* ( 'not' R11 ) *> ) by L111;
L1448: ( Suc D62 ) = ( 'not' R12 ) by L111;
L1449: ( Suc D62 ) = ( Suc D63 ) by L1448 , L111;
L1450: ( Ant D62 ) = ( R23 ^ <* ( 'not' R11 ) *> ) by L111;
L1451: ( Ant ( Ant D62 ) ) = R23 by L1450 , L111;
L1452: (( Suc ( Ant D62 ) ) = ( 'not' R11 ) & ( ( 0 ) + 1 ) <= ( len ( Ant D62 ) )) by L1450 , L111 , L139;
L1453:  |- D63 by L1452 , L1446 , L1447 , L1449 , L158 , L886;
set D64 = ( ( ( ( Ant ( Ant D62 ) ) ^ <* R12 *> ) ^ <* R11 *> ) ^ <* R11 *> );
set D65 = ( ( ( ( Ant ( Ant D62 ) ) ^ <* R12 *> ) ^ <* ( 'not' R11 ) *> ) ^ <* R12 *> );
L1454: 1 < ( len D64 ) by L131;
L1455: ( Ant D65 ) = ( ( ( Ant ( Ant D62 ) ) ^ <* R12 *> ) ^ <* ( 'not' R11 ) *> ) by L111;
L1456: 1 < ( len ( ( Ant D65 ) ^ <* R11 *> ) ) by L1455 , L131;
L1457: ( Ant D65 ) = ( ( Ant ( Ant D62 ) ) ^ ( <* R12 *> ^ <* ( 'not' R11 ) *> ) ) by L1455 , FINSEQ_1:32;
L1458: ( Ant D65 ) = ( ( Ant ( Ant D62 ) ) ^ <* R12 , ( 'not' R11 ) *> ) by L1457 , FINSEQ_1:def 9;
L1459: ( ( Ant D65 ) . ( ( len R23 ) + 1 ) ) = R12 by L1458 , L1451 , L242;
L1460: ( ( Ant D65 ) . ( ( len R23 ) + 1 ) ) = ( Suc D65 ) by L1459 , L111;
L1461: 1 in ( dom <* R12 , ( 'not' R11 ) *> ) by L242;
L1462: ( ( len R23 ) + 1 ) in ( dom ( Ant D65 ) ) by L1461 , L1451 , L1458 , FINSEQ_1:28;
L1463:  |- D65 by L1462 , L1460 , L42 , L576;
L1464: ( Suc ( ( Ant D65 ) ^ <* R11 *> ) ) = R11 by L111;
L1465: ( Suc ( ( Ant D65 ) ^ <* R11 *> ) ) = ( Suc D64 ) by L1464 , L111;
L1466: ( Ant D63 ) = ( ( ( Ant ( Ant D62 ) ) ^ <* R12 *> ) ^ <* ( 'not' R11 ) *> ) by L111;
L1467: ( Ant D63 ) = ( Ant D65 ) by L1466 , L111;
L1468: ( Suc D63 ) = ( 'not' R12 ) by L111;
L1469: ( Suc D63 ) = ( 'not' ( Suc D65 ) ) by L1468 , L111;
L1470: ( Ant D64 ) = ( ( ( Ant ( Ant D62 ) ) ^ <* R12 *> ) ^ <* R11 *> ) by L111;
L1471: ( Ant D64 ) = ( ( Ant ( Ant D62 ) ) ^ ( <* R12 *> ^ <* R11 *> ) ) by L1470 , FINSEQ_1:32;
L1472: ( Ant D64 ) = ( ( Ant ( Ant D62 ) ) ^ <* R12 , R11 *> ) by L1471 , FINSEQ_1:def 9;
L1473: ( ( Ant D64 ) . ( ( len R23 ) + 2 ) ) = R11 by L1472 , L1451 , L242;
L1474: ( ( Ant D64 ) . ( ( len R23 ) + 2 ) ) = ( Suc D64 ) by L1473 , L111;
L1475: 2 in ( dom <* R12 , R11 *> ) by L242;
L1476: ( ( len R23 ) + 2 ) in ( dom ( Ant D64 ) ) by L1475 , L1451 , L1472 , FINSEQ_1:28;
L1477:  |- D64 by L1476 , L1474 , L42 , L576;
L1478: ( Ant ( ( Ant D65 ) ^ <* R11 *> ) ) = ( ( ( Ant ( Ant D62 ) ) ^ <* R12 *> ) ^ <* ( 'not' R11 ) *> ) by L1455 , L111;
L1479: ( Suc ( Ant ( ( Ant D65 ) ^ <* R11 *> ) ) ) = ( 'not' R11 ) by L1478 , L111;
L1480: ( Suc ( Ant ( ( Ant D65 ) ^ <* R11 *> ) ) ) = ( 'not' ( Suc ( Ant D64 ) ) ) by L1479 , L1470 , L111;
L1481: ( ( 0 ) + 1 ) <= ( len D63 ) by L139;
L1482:  |- ( ( Ant D65 ) ^ <* ( 'not' ( Suc D65 ) ) *> ) by L1481 , L1453 , L1469 , L1467 , L78;
L1483:  |- ( ( Ant D65 ) ^ <* R11 *> ) by L1482 , L1463 , L1356;
L1484: ( Ant ( Ant ( ( Ant D65 ) ^ <* R11 *> ) ) ) = ( ( Ant ( Ant D62 ) ) ^ <* R12 *> ) by L1478 , L111;
L1485: ( Ant ( Ant D64 ) ) = ( Ant ( Ant ( ( Ant D65 ) ^ <* R11 *> ) ) ) by L1484 , L1470 , L111;
thus L1486: thesis by L1485 , L1451 , L1483 , L1477 , L1456 , L1454 , L1484 , L1480 , L1464 , L1465 , L932;
end;
theorem
L1487: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ( |- ( ( R23 ^ <* ( 'not' R11 ) *> ) ^ <* R12 *> ) implies  |- ( ( R23 ^ <* ( 'not' R12 ) *> ) ^ <* R11 *> ))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
set D66 = ( ( R23 ^ <* ( 'not' R11 ) *> ) ^ <* R12 *> );
set D67 = ( ( ( ( Ant ( Ant D66 ) ) ^ <* ( 'not' R12 ) *> ) ^ <* ( 'not' R11 ) *> ) ^ <* R12 *> );
assume L1488:  |- D66;
L1489: ( Ant D66 ) = ( R23 ^ <* ( 'not' R11 ) *> ) by L111;
L1490: ( Ant ( Ant D66 ) ) = R23 by L1489 , L111;
set D68 = ( ( ( ( Ant ( Ant D66 ) ) ^ <* ( 'not' R12 ) *> ) ^ <* R11 *> ) ^ <* R11 *> );
set D69 = ( ( ( ( Ant ( Ant D66 ) ) ^ <* ( 'not' R12 ) *> ) ^ <* ( 'not' R11 ) *> ) ^ <* ( 'not' R12 ) *> );
L1491: 1 < ( len D68 ) by L131;
L1492: ( Ant D69 ) = ( ( ( Ant ( Ant D66 ) ) ^ <* ( 'not' R12 ) *> ) ^ <* ( 'not' R11 ) *> ) by L111;
L1493: ( Ant D69 ) = ( ( Ant ( Ant D66 ) ) ^ ( <* ( 'not' R12 ) *> ^ <* ( 'not' R11 ) *> ) ) by L1492 , FINSEQ_1:32;
L1494: ( Ant D69 ) = ( ( Ant ( Ant D66 ) ) ^ <* ( 'not' R12 ) , ( 'not' R11 ) *> ) by L1493 , FINSEQ_1:def 9;
L1495: ( ( Ant D69 ) . ( ( len R23 ) + 1 ) ) = ( 'not' R12 ) by L1494 , L1490 , L242;
L1496: ( ( Ant D69 ) . ( ( len R23 ) + 1 ) ) = ( Suc D69 ) by L1495 , L111;
L1497: 1 in ( dom <* ( 'not' R12 ) , ( 'not' R11 ) *> ) by L242;
L1498: ( ( len R23 ) + 1 ) in ( dom ( Ant D69 ) ) by L1497 , L1490 , L1494 , FINSEQ_1:28;
L1499: ( Suc D66 ) = R12 by L111;
L1500: ( Suc D66 ) = ( Suc D67 ) by L1499 , L111;
L1501: ( Ant D67 ) = ( ( ( Ant ( Ant D66 ) ) ^ <* ( 'not' R12 ) *> ) ^ <* ( 'not' R11 ) *> ) by L111;
L1502: 1 < ( len ( ( Ant D67 ) ^ <* R11 *> ) ) by L1501 , L131;
L1503: (( Suc ( Ant D66 ) ) = ( 'not' R11 ) & ( ( 0 ) + 1 ) <= ( len ( Ant D66 ) )) by L1489 , L111 , L139;
L1504:  |- D67 by L1503 , L1488 , L1501 , L1500 , L158 , L886;
L1505: (( Suc D67 ) = R12 & ( Ant D67 ) = ( ( ( Ant ( Ant D66 ) ) ^ <* ( 'not' R12 ) *> ) ^ <* ( 'not' R11 ) *> )) by L111;
L1506:  |- ( ( Ant D67 ) ^ <* ( 'not' ( Suc D67 ) ) *> ) by L1505 , L1496 , L1498 , L42 , L576;
L1507:  |- ( ( Ant D67 ) ^ <* R11 *> ) by L1506 , L1504 , L1356;
L1508: ( Ant D68 ) = ( ( ( Ant ( Ant D66 ) ) ^ <* ( 'not' R12 ) *> ) ^ <* R11 *> ) by L111;
L1509: ( Ant D68 ) = ( ( Ant ( Ant D66 ) ) ^ ( <* ( 'not' R12 ) *> ^ <* R11 *> ) ) by L1508 , FINSEQ_1:32;
L1510: ( Ant D68 ) = ( ( Ant ( Ant D66 ) ) ^ <* ( 'not' R12 ) , R11 *> ) by L1509 , FINSEQ_1:def 9;
L1511: ( ( Ant D68 ) . ( ( len R23 ) + 2 ) ) = R11 by L1510 , L1490 , L242;
L1512: ( ( Ant D68 ) . ( ( len R23 ) + 2 ) ) = ( Suc D68 ) by L1511 , L111;
L1513: 2 in ( dom <* ( 'not' R12 ) , R11 *> ) by L242;
L1514: ( ( len R23 ) + 2 ) in ( dom ( Ant D68 ) ) by L1513 , L1490 , L1510 , FINSEQ_1:28;
L1515:  |- D68 by L1514 , L1512 , L42 , L576;
L1516: ( Ant ( ( Ant D67 ) ^ <* R11 *> ) ) = ( ( ( Ant ( Ant D66 ) ) ^ <* ( 'not' R12 ) *> ) ^ <* ( 'not' R11 ) *> ) by L1501 , L111;
L1517: ( Ant ( Ant ( ( Ant D67 ) ^ <* R11 *> ) ) ) = ( ( Ant ( Ant D66 ) ) ^ <* ( 'not' R12 ) *> ) by L1516 , L111;
L1518: ( Ant ( Ant D68 ) ) = ( Ant ( Ant ( ( Ant D67 ) ^ <* R11 *> ) ) ) by L1517 , L1508 , L111;
L1519: ( Suc ( Ant ( ( Ant D67 ) ^ <* R11 *> ) ) ) = ( 'not' R11 ) by L1516 , L111;
L1520: ( Suc ( Ant ( ( Ant D67 ) ^ <* R11 *> ) ) ) = ( 'not' ( Suc ( Ant D68 ) ) ) by L1519 , L1508 , L111;
L1521: ( Suc D68 ) = R11 by L111;
L1522: ( Suc ( ( Ant D67 ) ^ <* R11 *> ) ) = ( Suc D68 ) by L1521 , L111;
L1523:  |- ( ( Ant ( Ant D68 ) ) ^ <* R11 *> ) by L1522 , L1507 , L1515 , L1502 , L1491 , L1518 , L1520 , L1521 , L932;
thus L1524: thesis by L1523 , L1490 , L1508 , L111;
end;
theorem
L1525: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ( |- ( ( R23 ^ <* R11 *> ) ^ <* ( 'not' R12 ) *> ) implies  |- ( ( R23 ^ <* R12 *> ) ^ <* ( 'not' R11 ) *> ))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
set D70 = ( ( R23 ^ <* R11 *> ) ^ <* ( 'not' R12 ) *> );
set D71 = ( ( ( ( Ant ( Ant D70 ) ) ^ <* R12 *> ) ^ <* R11 *> ) ^ <* ( 'not' R12 ) *> );
assume L1526:  |- D70;
L1527: ( Ant D71 ) = ( ( ( Ant ( Ant D70 ) ) ^ <* R12 *> ) ^ <* R11 *> ) by L111;
L1528: ( Suc D70 ) = ( 'not' R12 ) by L111;
L1529: ( Suc D70 ) = ( Suc D71 ) by L1528 , L111;
L1530: ( Ant D70 ) = ( R23 ^ <* R11 *> ) by L111;
L1531: ( Ant ( Ant D70 ) ) = R23 by L1530 , L111;
L1532: (( Suc ( Ant D70 ) ) = R11 & ( ( 0 ) + 1 ) <= ( len ( Ant D70 ) )) by L1530 , L111 , L139;
L1533:  |- D71 by L1532 , L1526 , L1527 , L1529 , L158 , L886;
set D72 = ( ( ( ( Ant ( Ant D70 ) ) ^ <* R12 *> ) ^ <* ( 'not' R11 ) *> ) ^ <* ( 'not' R11 ) *> );
set D73 = ( ( ( ( Ant ( Ant D70 ) ) ^ <* R12 *> ) ^ <* R11 *> ) ^ <* R12 *> );
L1534: 1 < ( len D72 ) by L131;
L1535: ( Ant D73 ) = ( ( ( Ant ( Ant D70 ) ) ^ <* R12 *> ) ^ <* R11 *> ) by L111;
L1536: 1 < ( len ( ( Ant D73 ) ^ <* ( 'not' R11 ) *> ) ) by L1535 , L131;
L1537: ( Ant D73 ) = ( ( Ant ( Ant D70 ) ) ^ ( <* R12 *> ^ <* R11 *> ) ) by L1535 , FINSEQ_1:32;
L1538: ( Ant D73 ) = ( ( Ant ( Ant D70 ) ) ^ <* R12 , R11 *> ) by L1537 , FINSEQ_1:def 9;
L1539: ( ( Ant D73 ) . ( ( len R23 ) + 1 ) ) = R12 by L1538 , L1531 , L242;
L1540: ( ( Ant D73 ) . ( ( len R23 ) + 1 ) ) = ( Suc D73 ) by L1539 , L111;
L1541: 1 in ( dom <* R12 , R11 *> ) by L242;
L1542: ( ( len R23 ) + 1 ) in ( dom ( Ant D73 ) ) by L1541 , L1531 , L1538 , FINSEQ_1:28;
L1543:  |- D73 by L1542 , L1540 , L42 , L576;
L1544: ( Suc ( ( Ant D73 ) ^ <* ( 'not' R11 ) *> ) ) = ( 'not' R11 ) by L111;
L1545: ( Suc ( ( Ant D73 ) ^ <* ( 'not' R11 ) *> ) ) = ( Suc D72 ) by L1544 , L111;
L1546: ( Ant D71 ) = ( ( ( Ant ( Ant D70 ) ) ^ <* R12 *> ) ^ <* R11 *> ) by L111;
L1547: ( Ant D71 ) = ( Ant D73 ) by L1546 , L111;
L1548: ( Suc D71 ) = ( 'not' R12 ) by L111;
L1549: ( Suc D71 ) = ( 'not' ( Suc D73 ) ) by L1548 , L111;
L1550: ( Ant D72 ) = ( ( ( Ant ( Ant D70 ) ) ^ <* R12 *> ) ^ <* ( 'not' R11 ) *> ) by L111;
L1551: ( Ant D72 ) = ( ( Ant ( Ant D70 ) ) ^ ( <* R12 *> ^ <* ( 'not' R11 ) *> ) ) by L1550 , FINSEQ_1:32;
L1552: ( Ant D72 ) = ( ( Ant ( Ant D70 ) ) ^ <* R12 , ( 'not' R11 ) *> ) by L1551 , FINSEQ_1:def 9;
L1553: ( ( Ant D72 ) . ( ( len R23 ) + 2 ) ) = ( 'not' R11 ) by L1552 , L1531 , L242;
L1554: ( ( Ant D72 ) . ( ( len R23 ) + 2 ) ) = ( Suc D72 ) by L1553 , L111;
L1555: 2 in ( dom <* R12 , ( 'not' R11 ) *> ) by L242;
L1556: ( ( len R23 ) + 2 ) in ( dom ( Ant D72 ) ) by L1555 , L1531 , L1552 , FINSEQ_1:28;
L1557:  |- D72 by L1556 , L1554 , L42 , L576;
L1558: ( Ant ( ( Ant D73 ) ^ <* ( 'not' R11 ) *> ) ) = ( ( ( Ant ( Ant D70 ) ) ^ <* R12 *> ) ^ <* R11 *> ) by L1535 , L111;
L1559: ( Suc ( Ant ( ( Ant D73 ) ^ <* ( 'not' R11 ) *> ) ) ) = R11 by L1558 , L111;
L1560: ( 'not' ( Suc ( Ant ( ( Ant D73 ) ^ <* ( 'not' R11 ) *> ) ) ) ) = ( Suc ( Ant D72 ) ) by L1559 , L1550 , L111;
L1561: ( ( 0 ) + 1 ) <= ( len D71 ) by L139;
L1562:  |- ( ( Ant D73 ) ^ <* ( 'not' ( Suc D73 ) ) *> ) by L1561 , L1533 , L1549 , L1547 , L78;
L1563:  |- ( ( Ant D73 ) ^ <* ( 'not' R11 ) *> ) by L1562 , L1543 , L1356;
L1564: ( Ant ( Ant ( ( Ant D73 ) ^ <* ( 'not' R11 ) *> ) ) ) = ( ( Ant ( Ant D70 ) ) ^ <* R12 *> ) by L1558 , L111;
L1565: ( Ant ( Ant D72 ) ) = ( Ant ( Ant ( ( Ant D73 ) ^ <* ( 'not' R11 ) *> ) ) ) by L1564 , L1550 , L111;
thus L1566: thesis by L1565 , L1531 , L1563 , L1557 , L1536 , L1534 , L1564 , L1560 , L1544 , L1545 , L932;
end;
theorem
L1567: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R13 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (( |- ( ( R23 ^ <* R11 *> ) ^ <* R13 *> ) &  |- ( ( R23 ^ <* R12 *> ) ^ <* R13 *> )) implies  |- ( ( R23 ^ <* ( R11 'or' R12 ) *> ) ^ <* R13 *> )))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
let R13 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
set D74 = ( ( R23 ^ <* ( 'not' R13 ) *> ) ^ <* ( 'not' R11 ) *> );
set D75 = ( ( R23 ^ <* ( 'not' R13 ) *> ) ^ <* ( 'not' R12 ) *> );
L1568: (( Suc D74 ) = ( 'not' R11 ) & ( Suc D75 ) = ( 'not' R12 )) by L111;
assume L1569: ( |- ( ( R23 ^ <* R11 *> ) ^ <* R13 *> ) &  |- ( ( R23 ^ <* R12 *> ) ^ <* R13 *> ));
L1570: ( |- D74 &  |- D75) by L1569 , L1408;
L1571: ( Ant D74 ) = ( R23 ^ <* ( 'not' R13 ) *> ) by L111;
L1572: ( Ant D74 ) = ( Ant D75 ) by L1571 , L111;
L1573:  |- ( ( R23 ^ <* ( 'not' R13 ) *> ) ^ <* ( ( 'not' R11 ) '&' ( 'not' R12 ) ) *> ) by L1572 , L1570 , L1568 , L1571 , L1092;
L1574:  |- ( ( R23 ^ <* ( 'not' ( ( 'not' R11 ) '&' ( 'not' R12 ) ) ) *> ) ^ <* R13 *> ) by L1573 , L1487;
thus L1575: thesis by L1574 , QC_LANG2:def 3;
end;
theorem
L1576: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ( |- ( R23 ^ <* R11 *> ) implies  |- ( R23 ^ <* ( R11 'or' R12 ) *> ))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
set D76 = ( ( R23 ^ <* ( ( 'not' R11 ) '&' ( 'not' R12 ) ) *> ) ^ <* ( ( 'not' R11 ) '&' ( 'not' R12 ) ) *> );
assume L1577:  |- ( R23 ^ <* R11 *> );
L1578: ( Ant D76 ) = ( R23 ^ <* ( ( 'not' R11 ) '&' ( 'not' R12 ) ) *> ) by L111;
L1579: ( ( len R23 ) + 1 ) = ( ( len R23 ) + ( len <* ( ( 'not' R11 ) '&' ( 'not' R12 ) ) *> ) ) by FINSEQ_1:39;
L1580: ( ( len R23 ) + 1 ) = ( len ( Ant D76 ) ) by L1579 , L1578 , FINSEQ_1:22;
L1581: ( ( len R23 ) + 1 ) in ( dom ( Ant D76 ) ) by L1580 , L1578 , L139;
L1582: ( Suc D76 ) = ( ( 'not' R11 ) '&' ( 'not' R12 ) ) by L111;
L1583: ( ( Ant D76 ) . ( ( len R23 ) + 1 ) ) = ( ( 'not' R11 ) '&' ( 'not' R12 ) ) by L1578 , FINSEQ_1:42;
L1584: ( Suc D76 ) is_tail_of ( Ant D76 ) by L1583 , L1582 , L1581 , L42;
L1585:  |- ( ( R23 ^ <* ( ( 'not' R11 ) '&' ( 'not' R12 ) ) *> ) ^ <* ( 'not' R11 ) *> ) by L1584 , L1578 , L1582 , L576 , L1172;
L1586:  |- ( ( R23 ^ <* R11 *> ) ^ <* ( 'not' ( ( 'not' R11 ) '&' ( 'not' R12 ) ) ) *> ) by L1585 , L1525;
L1587:  |- ( ( R23 ^ <* R11 *> ) ^ <* ( R11 'or' R12 ) *> ) by L1586 , QC_LANG2:def 3;
L1588: 1 <= ( len ( R23 ^ <* R11 *> ) ) by L139;
L1589:  |- ( ( Ant ( R23 ^ <* R11 *> ) ) ^ <* ( R11 'or' R12 ) *> ) by L1588 , L1577 , L1587 , L1372;
thus L1590: thesis by L1589 , L111;
end;
theorem
L1591: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ( |- ( R23 ^ <* R12 *> ) implies  |- ( R23 ^ <* ( R11 'or' R12 ) *> ))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
set D77 = ( ( R23 ^ <* ( ( 'not' R11 ) '&' ( 'not' R12 ) ) *> ) ^ <* ( ( 'not' R11 ) '&' ( 'not' R12 ) ) *> );
assume L1592:  |- ( R23 ^ <* R12 *> );
L1593: ( Ant D77 ) = ( R23 ^ <* ( ( 'not' R11 ) '&' ( 'not' R12 ) ) *> ) by L111;
L1594: ( ( len R23 ) + 1 ) = ( ( len R23 ) + ( len <* ( ( 'not' R11 ) '&' ( 'not' R12 ) ) *> ) ) by FINSEQ_1:39;
L1595: ( ( len R23 ) + 1 ) = ( len ( Ant D77 ) ) by L1594 , L1593 , FINSEQ_1:22;
L1596: ( ( len R23 ) + 1 ) in ( dom ( Ant D77 ) ) by L1595 , L1593 , L139;
L1597: ( Suc D77 ) = ( ( 'not' R11 ) '&' ( 'not' R12 ) ) by L111;
L1598: ( ( Ant D77 ) . ( ( len R23 ) + 1 ) ) = ( ( 'not' R11 ) '&' ( 'not' R12 ) ) by L1593 , FINSEQ_1:42;
L1599: ( Suc D77 ) is_tail_of ( Ant D77 ) by L1598 , L1597 , L1596 , L42;
L1600:  |- ( ( R23 ^ <* ( ( 'not' R11 ) '&' ( 'not' R12 ) ) *> ) ^ <* ( 'not' R12 ) *> ) by L1599 , L1593 , L1597 , L576 , L1218;
L1601:  |- ( ( R23 ^ <* R12 *> ) ^ <* ( 'not' ( ( 'not' R11 ) '&' ( 'not' R12 ) ) ) *> ) by L1600 , L1525;
L1602:  |- ( ( R23 ^ <* R12 *> ) ^ <* ( R11 'or' R12 ) *> ) by L1601 , QC_LANG2:def 3;
L1603: 1 <= ( len ( R23 ^ <* R12 *> ) ) by L139;
L1604:  |- ( ( Ant ( R23 ^ <* R12 *> ) ) ^ <* ( R11 'or' R12 ) *> ) by L1603 , L1592 , L1602 , L1372;
thus L1605: thesis by L1604 , L111;
end;
theorem
L1606: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R13 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (( |- ( ( R23 ^ <* R11 *> ) ^ <* R13 *> ) &  |- ( ( R23 ^ <* R12 *> ) ^ <* R13 *> )) implies  |- ( ( R23 ^ <* ( R11 'or' R12 ) *> ) ^ <* R13 *> )))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
let R13 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
set D78 = ( ( R23 ^ <* ( 'not' R13 ) *> ) ^ <* ( 'not' R11 ) *> );
set D79 = ( ( R23 ^ <* ( 'not' R13 ) *> ) ^ <* ( 'not' R12 ) *> );
L1607: ( Ant D78 ) = ( R23 ^ <* ( 'not' R13 ) *> ) by L111;
L1608: ( Suc D79 ) = ( 'not' R12 ) by L111;
assume L1609: ( |- ( ( R23 ^ <* R11 *> ) ^ <* R13 *> ) &  |- ( ( R23 ^ <* R12 *> ) ^ <* R13 *> ));
L1610: ( |- ( ( R23 ^ <* ( 'not' R13 ) *> ) ^ <* ( 'not' R11 ) *> ) &  |- ( ( R23 ^ <* ( 'not' R13 ) *> ) ^ <* ( 'not' R12 ) *> )) by L1609 , L1408;
L1611: (( Suc D78 ) = ( 'not' R11 ) & ( Ant D79 ) = ( R23 ^ <* ( 'not' R13 ) *> )) by L111;
L1612:  |- ( ( Ant D78 ) ^ <* ( ( 'not' R11 ) '&' ( 'not' R12 ) ) *> ) by L1611 , L1610 , L1608 , L111 , L1092;
L1613:  |- ( ( R23 ^ <* ( 'not' ( ( 'not' R11 ) '&' ( 'not' R12 ) ) ) *> ) ^ <* R13 *> ) by L1612 , L1607 , L1487;
thus L1614: thesis by L1613 , QC_LANG2:def 3;
end;
theorem
L1615: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ( |- ( R23 ^ <* R11 *> ) implies  |- ( R23 ^ <* ( 'not' ( 'not' R11 ) ) *> )))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume L1616:  |- ( R23 ^ <* R11 *> );
set D80 = ( R23 ^ <* R11 *> );
set D81 = ( ( ( R23 ^ <* R11 *> ) ^ <* ( 'not' ( 'not' R11 ) ) *> ) ^ <* ( 'not' ( 'not' R11 ) ) *> );
set D82 = ( ( ( R23 ^ <* R11 *> ) ^ <* ( 'not' R11 ) *> ) ^ <* ( 'not' R11 ) *> );
set D83 = ( ( ( R23 ^ <* R11 *> ) ^ <* ( 'not' R11 ) *> ) ^ <* R11 *> );
set D84 = ( ( Ant D83 ) ^ <* ( 'not' ( 'not' R11 ) ) *> );
L1617: ( Suc D83 ) = R11 by L111;
L1618: ( Ant D83 ) = ( ( R23 ^ <* R11 *> ) ^ <* ( 'not' R11 ) *> ) by L111;
L1619: 1 < ( len D84 ) by L1618 , L131;
L1620: ( Ant D81 ) = ( ( R23 ^ <* R11 *> ) ^ <* ( 'not' ( 'not' R11 ) ) *> ) by L111;
L1621: ( Ant D81 ) = ( R23 ^ ( <* R11 *> ^ <* ( 'not' ( 'not' R11 ) ) *> ) ) by L1620 , FINSEQ_1:32;
L1622: ( Ant D81 ) = ( R23 ^ <* R11 , ( 'not' ( 'not' R11 ) ) *> ) by L1621 , FINSEQ_1:def 9;
L1623: ( Ant D84 ) = ( Ant D83 ) by L111;
L1624: ( Suc ( Ant D84 ) ) = ( 'not' R11 ) by L1623 , L1618 , L111;
L1625: ( 'not' ( Suc ( Ant D84 ) ) ) = ( Suc ( Ant D81 ) ) by L1624 , L1620 , L111;
L1626: ( Ant D83 ) = ( R23 ^ ( <* R11 *> ^ <* ( 'not' R11 ) *> ) ) by L1618 , FINSEQ_1:32;
L1627: ( Ant D83 ) = ( R23 ^ <* R11 , ( 'not' R11 ) *> ) by L1626 , FINSEQ_1:def 9;
L1628: ( ( len R23 ) + 2 ) = ( ( len R23 ) + ( len <* R11 , ( 'not' R11 ) *> ) ) by FINSEQ_1:44;
L1629: ( ( len R23 ) + 2 ) = ( len ( Ant D83 ) ) by L1628 , L1627 , FINSEQ_1:22;
L1630: (1 <= ( ( len R23 ) + 1 ) & ( ( len R23 ) + 1 ) <= ( len ( Ant D83 ) )) by L1629 , NAT_1:11 , XREAL_1:6;
L1631: ( ( len R23 ) + 1 ) in ( dom ( Ant D83 ) ) by L1630 , FINSEQ_3:25;
L1632: ( ( Ant D83 ) . ( ( len R23 ) + 1 ) ) = R11 by L1627 , L242;
L1633:  |- D83 by L1632 , L1617 , L1631 , L42 , L576;
L1634: 1 < ( len D81 ) by L131;
L1635: ( ( 0 ) + 1 ) <= ( len D82 ) by L139;
L1636: D82 = ( ( Ant D82 ) ^ <* ( Suc D82 ) *> ) by L1635 , L78;
L1637: 1 <= ( len D80 ) by L139;
L1638: ( ( len R23 ) + 2 ) = ( ( len R23 ) + ( len <* R11 , ( 'not' ( 'not' R11 ) ) *> ) ) by FINSEQ_1:44;
L1639: ( ( len R23 ) + 2 ) = ( len ( Ant D81 ) ) by L1638 , L1622 , FINSEQ_1:22;
L1640: ( ( len R23 ) + 2 ) in ( dom ( Ant D81 ) ) by L1639 , L1620 , L139;
L1641: ( Ant D82 ) = ( ( R23 ^ <* R11 *> ) ^ <* ( 'not' R11 ) *> ) by L111;
L1642: ( Ant D82 ) = ( R23 ^ ( <* R11 *> ^ <* ( 'not' R11 ) *> ) ) by L1641 , FINSEQ_1:32;
L1643: ( Ant D82 ) = ( R23 ^ <* R11 , ( 'not' R11 ) *> ) by L1642 , FINSEQ_1:def 9;
L1644: ( ( len R23 ) + 2 ) = ( ( len R23 ) + ( len <* R11 , ( 'not' R11 ) *> ) ) by FINSEQ_1:44;
L1645: ( ( len R23 ) + 2 ) = ( len ( Ant D82 ) ) by L1644 , L1643 , FINSEQ_1:22;
L1646: ( ( len R23 ) + 2 ) in ( dom ( Ant D82 ) ) by L1645 , L1641 , L139;
L1647: ( Suc D82 ) = ( 'not' R11 ) by L111;
L1648: ( 'not' ( Suc D83 ) ) = ( Suc D82 ) by L1647 , L111;
L1649: ( ( Ant D82 ) . ( ( len R23 ) + 2 ) ) = ( 'not' R11 ) by L1643 , L242;
L1650:  |- D82 by L1649 , L1646 , L1647 , L42 , L576;
L1651: ( Suc D81 ) = ( 'not' ( 'not' R11 ) ) by L111;
L1652: ( Suc D84 ) = ( Suc D81 ) by L1651 , L111;
L1653: ( ( Ant D81 ) . ( ( len R23 ) + 2 ) ) = ( 'not' ( 'not' R11 ) ) by L1622 , L242;
L1654:  |- D81 by L1653 , L1640 , L1651 , L42 , L576;
L1655: ( Ant D83 ) = ( Ant D82 ) by L1641 , L111;
L1656:  |- ( ( Ant D83 ) ^ <* ( 'not' ( 'not' R11 ) ) *> ) by L1655 , L1633 , L1650 , L1636 , L1648 , L1356;
L1657: ( Ant ( Ant D84 ) ) = ( R23 ^ <* R11 *> ) by L1618 , L1623 , L111;
L1658: ( Ant ( Ant D84 ) ) = ( Ant ( Ant D81 ) ) by L1657 , L1620 , L111;
L1659:  |- ( ( R23 ^ <* R11 *> ) ^ <* ( 'not' ( 'not' R11 ) ) *> ) by L1658 , L1656 , L1651 , L1654 , L1652 , L1657 , L1625 , L1619 , L1634 , L932;
L1660:  |- ( ( Ant D80 ) ^ <* ( 'not' ( 'not' R11 ) ) *> ) by L1659 , L1616 , L1637 , L1372;
thus L1661: thesis by L1660 , L111;
end;
theorem
L1662: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ( |- ( R23 ^ <* ( 'not' ( 'not' R11 ) ) *> ) implies  |- ( R23 ^ <* R11 *> )))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume L1663:  |- ( R23 ^ <* ( 'not' ( 'not' R11 ) ) *> );
set D85 = ( R23 ^ <* ( 'not' ( 'not' R11 ) ) *> );
set D86 = ( ( ( R23 ^ <* ( 'not' ( 'not' R11 ) ) *> ) ^ <* R11 *> ) ^ <* R11 *> );
set D87 = ( ( ( R23 ^ <* ( 'not' ( 'not' R11 ) ) *> ) ^ <* ( 'not' R11 ) *> ) ^ <* ( 'not' ( 'not' R11 ) ) *> );
set D88 = ( ( ( R23 ^ <* ( 'not' ( 'not' R11 ) ) *> ) ^ <* ( 'not' R11 ) *> ) ^ <* ( 'not' R11 ) *> );
set D89 = ( ( Ant D88 ) ^ <* R11 *> );
L1664: ( Suc D88 ) = ( 'not' R11 ) by L111;
L1665: ( Ant D88 ) = ( ( R23 ^ <* ( 'not' ( 'not' R11 ) ) *> ) ^ <* ( 'not' R11 ) *> ) by L111;
L1666: 1 < ( len D89 ) by L1665 , L131;
L1667: ( Ant D88 ) = ( R23 ^ ( <* ( 'not' ( 'not' R11 ) ) *> ^ <* ( 'not' R11 ) *> ) ) by L1665 , FINSEQ_1:32;
L1668: ( Ant D88 ) = ( R23 ^ <* ( 'not' ( 'not' R11 ) ) , ( 'not' R11 ) *> ) by L1667 , FINSEQ_1:def 9;
L1669: ( ( len R23 ) + 2 ) = ( ( len R23 ) + ( len <* ( 'not' ( 'not' R11 ) ) , ( 'not' R11 ) *> ) ) by FINSEQ_1:44;
L1670: ( ( len R23 ) + 2 ) = ( len ( Ant D88 ) ) by L1669 , L1668 , FINSEQ_1:22;
L1671: ( ( len R23 ) + 2 ) in ( dom ( Ant D88 ) ) by L1670 , L1665 , L139;
L1672: ( ( Ant D88 ) . ( ( len R23 ) + 2 ) ) = ( 'not' R11 ) by L1668 , L242;
L1673:  |- D88 by L1672 , L1664 , L1671 , L42 , L576;
L1674: 1 < ( len D86 ) by L131;
L1675: ( Ant D87 ) = ( ( R23 ^ <* ( 'not' ( 'not' R11 ) ) *> ) ^ <* ( 'not' R11 ) *> ) by L111;
L1676: ( Ant D87 ) = ( R23 ^ ( <* ( 'not' ( 'not' R11 ) ) *> ^ <* ( 'not' R11 ) *> ) ) by L1675 , FINSEQ_1:32;
L1677: ( Ant D87 ) = ( R23 ^ <* ( 'not' ( 'not' R11 ) ) , ( 'not' R11 ) *> ) by L1676 , FINSEQ_1:def 9;
L1678: ( ( len R23 ) + 2 ) = ( ( len R23 ) + ( len <* ( 'not' ( 'not' R11 ) ) , ( 'not' R11 ) *> ) ) by FINSEQ_1:44;
L1679: ( ( len R23 ) + 2 ) = ( len ( Ant D87 ) ) by L1678 , L1677 , FINSEQ_1:22;
L1680: (1 <= ( ( len R23 ) + 1 ) & ( ( len R23 ) + 1 ) <= ( len ( Ant D87 ) )) by L1679 , NAT_1:11 , XREAL_1:6;
L1681: ( ( len R23 ) + 1 ) in ( dom ( Ant D87 ) ) by L1680 , FINSEQ_3:25;
L1682: ( ( 0 ) + 1 ) <= ( len D87 ) by L139;
L1683: D87 = ( ( Ant D87 ) ^ <* ( Suc D87 ) *> ) by L1682 , L78;
L1684: 1 <= ( len D85 ) by L139;
L1685: ( Ant D86 ) = ( ( R23 ^ <* ( 'not' ( 'not' R11 ) ) *> ) ^ <* R11 *> ) by L111;
L1686: ( Ant D86 ) = ( R23 ^ ( <* ( 'not' ( 'not' R11 ) ) *> ^ <* R11 *> ) ) by L1685 , FINSEQ_1:32;
L1687: ( Ant D86 ) = ( R23 ^ <* ( 'not' ( 'not' R11 ) ) , R11 *> ) by L1686 , FINSEQ_1:def 9;
L1688: ( Ant D89 ) = ( Ant D88 ) by L111;
L1689: ( Suc ( Ant D89 ) ) = ( 'not' R11 ) by L1688 , L1665 , L111;
L1690: ( Suc ( Ant D89 ) ) = ( 'not' ( Suc ( Ant D86 ) ) ) by L1689 , L1685 , L111;
L1691: ( ( len R23 ) + 2 ) = ( ( len R23 ) + ( len <* ( 'not' ( 'not' R11 ) ) , R11 *> ) ) by FINSEQ_1:44;
L1692: ( ( len R23 ) + 2 ) = ( len ( Ant D86 ) ) by L1691 , L1687 , FINSEQ_1:22;
L1693: ( ( len R23 ) + 2 ) in ( dom ( Ant D86 ) ) by L1692 , L1685 , L139;
L1694: ( Suc D87 ) = ( 'not' ( 'not' R11 ) ) by L111;
L1695: ( 'not' ( Suc D88 ) ) = ( Suc D87 ) by L1694 , L111;
L1696: ( ( Ant D87 ) . ( ( len R23 ) + 1 ) ) = ( 'not' ( 'not' R11 ) ) by L1677 , L242;
L1697:  |- D87 by L1696 , L1681 , L1694 , L42 , L576;
L1698: ( Suc D86 ) = R11 by L111;
L1699: ( Suc D89 ) = ( Suc D86 ) by L1698 , L111;
L1700: ( ( Ant D86 ) . ( ( len R23 ) + 2 ) ) = R11 by L1687 , L242;
L1701:  |- D86 by L1700 , L1693 , L1698 , L42 , L576;
L1702: ( Ant D88 ) = ( Ant D87 ) by L1675 , L111;
L1703:  |- ( ( Ant D88 ) ^ <* R11 *> ) by L1702 , L1673 , L1697 , L1683 , L1695 , L1356;
L1704: ( Ant ( Ant D89 ) ) = ( R23 ^ <* ( 'not' ( 'not' R11 ) ) *> ) by L1665 , L1688 , L111;
L1705: ( Ant ( Ant D89 ) ) = ( Ant ( Ant D86 ) ) by L1704 , L1685 , L111;
L1706:  |- ( ( R23 ^ <* ( 'not' ( 'not' R11 ) ) *> ) ^ <* R11 *> ) by L1705 , L1703 , L1698 , L1701 , L1699 , L1704 , L1690 , L1666 , L1674 , L932;
L1707:  |- ( ( Ant D85 ) ^ <* R11 *> ) by L1706 , L1663 , L1684 , L1372;
thus L1708: thesis by L1707 , L111;
end;
theorem
L1709: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (( |- ( R23 ^ <* ( R11 => R12 ) *> ) &  |- ( R23 ^ <* R11 *> )) implies  |- ( R23 ^ <* R12 *> ))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume that
L1710:  |- ( R23 ^ <* ( R11 => R12 ) *> )
and
L1711:  |- ( R23 ^ <* R11 *> );
set D90 = ( ( R23 ^ <* R12 *> ) ^ <* R12 *> );
set D91 = ( ( R23 ^ <* ( 'not' R11 ) *> ) ^ <* ( 'not' R11 ) *> );
set D92 = ( ( R23 ^ <* ( 'not' R11 ) *> ) ^ <* R11 *> );
L1712: ( Ant D92 ) = ( R23 ^ <* ( 'not' R11 ) *> ) by L111;
L1713: ( Suc ( R23 ^ <* R11 *> ) ) = R11 by L111;
L1714: ( Suc ( R23 ^ <* R11 *> ) ) = ( Suc D92 ) by L1713 , L111;
L1715: ( ( 0 ) + 1 ) <= ( len D91 ) by L139;
L1716: ( Ant D90 ) = ( R23 ^ <* R12 *> ) by L111;
L1717: ( ( Ant D90 ) . ( ( len R23 ) + 1 ) ) = R12 by L1716 , FINSEQ_1:42;
L1718: ( ( len R23 ) + 1 ) = ( ( len R23 ) + ( len <* R12 *> ) ) by FINSEQ_1:39;
L1719: ( ( len R23 ) + 1 ) = ( len ( Ant D90 ) ) by L1718 , L1716 , FINSEQ_1:22;
L1720: ( ( len R23 ) + 1 ) in ( dom ( Ant D90 ) ) by L1719 , L1716 , L139;
L1721: ( Suc D90 ) = R12 by L111;
L1722:  |- D90 by L1721 , L1717 , L1720 , L42 , L576;
L1723: ( Ant D91 ) = ( R23 ^ <* ( 'not' R11 ) *> ) by L111;
L1724: ( ( len R23 ) + 1 ) = ( ( len R23 ) + ( len <* ( 'not' R11 ) *> ) ) by FINSEQ_1:39;
L1725: ( ( len R23 ) + 1 ) = ( len ( Ant D91 ) ) by L1724 , L1723 , FINSEQ_1:22;
L1726: ( ( len R23 ) + 1 ) in ( dom ( Ant D91 ) ) by L1725 , L1723 , L139;
L1727: ( Suc D91 ) = ( 'not' R11 ) by L111;
L1728: ( 'not' ( Suc D92 ) ) = ( Suc D91 ) by L1727 , L111;
L1729: ( ( Ant D91 ) . ( ( len R23 ) + 1 ) ) = ( 'not' R11 ) by L1723 , FINSEQ_1:42;
L1730:  |- D91 by L1729 , L1726 , L1727 , L42 , L576;
L1731: ( Ant D92 ) = ( Ant D91 ) by L1723 , L111;
L1732:  |- ( ( Ant D92 ) ^ <* ( 'not' ( Suc D92 ) ) *> ) by L1731 , L1730 , L1715 , L1728 , L78;
L1733: ( Ant ( R23 ^ <* R11 *> ) ) = R23 by L111;
L1734:  |- D92 by L1733 , L1711 , L1712 , L1714 , L127 , L886;
L1735:  |- ( ( Ant D92 ) ^ <* R12 *> ) by L1734 , L1732 , L1356;
L1736:  |- ( ( R23 ^ <* ( ( 'not' R11 ) 'or' R12 ) *> ) ^ <* R12 *> ) by L1735 , L1712 , L1722 , L1606;
L1737:  |- ( ( R23 ^ <* ( 'not' ( ( 'not' ( 'not' R11 ) ) '&' ( 'not' R12 ) ) ) *> ) ^ <* R12 *> ) by L1736 , QC_LANG2:def 3;
set D93 = ( ( R23 ^ <* ( 'not' R12 ) *> ) ^ <* ( ( 'not' ( 'not' R11 ) ) '&' ( 'not' R12 ) ) *> );
set D94 = ( ( Ant D93 ) ^ <* R11 *> );
set D95 = ( ( Ant D93 ) ^ <* ( 'not' R12 ) *> );
L1738: (( Ant D94 ) = ( Ant D93 ) & ( Suc D94 ) = R11) by L111;
L1739: (( Ant D95 ) = ( Ant D93 ) & ( Suc D95 ) = ( 'not' R12 )) by L111;
L1740: ( Suc D93 ) = ( ( 'not' ( 'not' R11 ) ) '&' ( 'not' R12 ) ) by L111;
L1741:  |- ( ( Ant D93 ) ^ <* ( 'not' ( 'not' R11 ) ) *> ) by L1740 , L1737 , L1172 , L1487;
L1742:  |- ( ( Ant D93 ) ^ <* R11 *> ) by L1741 , L1662;
L1743:  |- ( ( Ant D93 ) ^ <* ( 'not' R12 ) *> ) by L1737 , L1740 , L1218 , L1487;
L1744:  |- ( ( Ant D93 ) ^ <* ( R11 '&' ( 'not' R12 ) ) *> ) by L1743 , L1742 , L1738 , L1739 , L1092;
L1745:  |- ( ( R23 ^ <* ( 'not' R12 ) *> ) ^ <* ( R11 '&' ( 'not' R12 ) ) *> ) by L1744 , L111;
L1746:  |- ( ( R23 ^ <* ( 'not' ( R11 '&' ( 'not' R12 ) ) ) *> ) ^ <* R12 *> ) by L1745 , L1487;
L1747:  |- ( ( R23 ^ <* ( R11 => R12 ) *> ) ^ <* R12 *> ) by L1746 , QC_LANG2:def 2;
L1748: 1 <= ( len ( R23 ^ <* ( R11 => R12 ) *> ) ) by L139;
L1749:  |- ( ( Ant ( R23 ^ <* ( R11 => R12 ) *> ) ) ^ <* R12 *> ) by L1748 , L1710 , L1747 , L1372;
thus L1750: thesis by L1749 , L111;
end;
theorem
L1751: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R14 being (bound_QC-variable of R1) holds (for R15 being (bound_QC-variable of R1) holds ( ( 'not' R11 ) . (R14 , R15) ) = ( 'not' ( R11 . (R14 , R15) ) )))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R14 being (bound_QC-variable of R1);
let R15 being (bound_QC-variable of R1);
set D96 = [ R11 , ( Sbst (R14 , R15) ) ];
L1752: (( D96 `1 ) = R11 & ( D96 `2 ) = ( Sbst (R14 , R15) ));
L1753: (( ( 'not' R11 ) . (R14 , R15) ) = ( CQC_Sub [ ( 'not' R11 ) , ( Sbst (R14 , R15) ) ] ) & ( Sub_not D96 ) = [ ( 'not' R11 ) , ( Sbst (R14 , R15) ) ]) by L1752 , SUBSTUT1:def 20 , SUBSTUT2:def 1;
L1754: ( ( 'not' R11 ) . (R14 , R15) ) = ( 'not' ( CQC_Sub D96 ) ) by L1753 , SUBSTUT1:29;
thus L1755: thesis by L1754 , SUBSTUT2:def 1;
end;
theorem
L1756: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R14 being (bound_QC-variable of R1) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ((ex R15 being (bound_QC-variable of R1) st  |- ( R23 ^ <* ( R11 . (R14 , R15) ) *> )) implies  |- ( R23 ^ <* ( Ex (R14 , R11) ) *> ))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R14 being (bound_QC-variable of R1);
let R23 being (FinSequence of ( CQC-WFF R1 ));
given R15 being (bound_QC-variable of R1) such that
L1757:  |- ( R23 ^ <* ( R11 . (R14 , R15) ) *> );

set D97 = ( ( R23 ^ <* ( All (R14 , ( 'not' R11 )) ) *> ) ^ <* ( All (R14 , ( 'not' R11 )) ) *> );
L1758: ( Ant D97 ) = ( R23 ^ <* ( All (R14 , ( 'not' R11 )) ) *> ) by L111;
L1759: ( ( len R23 ) + 1 ) = ( ( len R23 ) + ( len <* ( All (R14 , ( 'not' R11 )) ) *> ) ) by FINSEQ_1:39;
L1760: ( ( len R23 ) + 1 ) = ( len ( Ant D97 ) ) by L1759 , L1758 , FINSEQ_1:22;
L1761: ( ( len R23 ) + 1 ) in ( dom ( Ant D97 ) ) by L1760 , L1758 , L139;
L1762: ( Suc D97 ) = ( All (R14 , ( 'not' R11 )) ) by L111;
L1763: ( ( Ant D97 ) . ( ( len R23 ) + 1 ) ) = ( All (R14 , ( 'not' R11 )) ) by L1758 , FINSEQ_1:42;
L1764: ( Suc D97 ) is_tail_of ( Ant D97 ) by L1763 , L1762 , L1761 , L42;
L1765:  |- ( ( R23 ^ <* ( All (R14 , ( 'not' R11 )) ) *> ) ^ <* ( ( 'not' R11 ) . (R14 , R15) ) *> ) by L1764 , L1758 , L1762 , L576 , L1264;
L1766:  |- ( ( R23 ^ <* ( All (R14 , ( 'not' R11 )) ) *> ) ^ <* ( 'not' ( R11 . (R14 , R15) ) ) *> ) by L1765 , L1751;
L1767:  |- ( ( R23 ^ <* ( R11 . (R14 , R15) ) *> ) ^ <* ( 'not' ( All (R14 , ( 'not' R11 )) ) ) *> ) by L1766 , L1525;
L1768:  |- ( ( R23 ^ <* ( R11 . (R14 , R15) ) *> ) ^ <* ( Ex (R14 , R11) ) *> ) by L1767 , QC_LANG2:def 5;
L1769: 1 <= ( len ( R23 ^ <* ( R11 . (R14 , R15) ) *> ) ) by L139;
L1770:  |- ( ( Ant ( R23 ^ <* ( R11 . (R14 , R15) ) *> ) ) ^ <* ( Ex (R14 , R11) ) *> ) by L1769 , L1757 , L1768 , L1372;
thus L1771: thesis by L1770 , L111;
end;
theorem
L1772: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (for R25 being (FinSequence of ( CQC-WFF R1 )) holds ( still_not-bound_in ( R23 ^ R25 ) ) = ( ( still_not-bound_in R23 ) \/ ( still_not-bound_in R25 ) ))))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
let R25 being (FinSequence of ( CQC-WFF R1 ));
thus L1773: ( still_not-bound_in ( R23 ^ R25 ) ) c= ( ( still_not-bound_in R23 ) \/ ( still_not-bound_in R25 ) )
proof
let R3 being set;
assume L1774: R3 in ( still_not-bound_in ( R23 ^ R25 ) );
consider R6 being (Element of ( NAT )), R11 being (Element of ( CQC-WFF R1 )) such that L1775: R6 in ( dom ( R23 ^ R25 ) ) and L1776: (R11 = ( ( R23 ^ R25 ) . R6 ) & R3 in ( still_not-bound_in R11 )) by L1774 , L251;
L1777:
now
given C61 being Nat such that
L1778: C61 in ( dom R25 )
and
L1779: R6 = ( ( len R23 ) + C61 );

L1780: ( ( R23 ^ R25 ) . R6 ) = ( R25 . C61 ) by L1778 , L1779 , FINSEQ_1:def 7;
L1781: R3 in ( still_not-bound_in R25 ) by L1780 , L1776 , L1778 , L251;
L1782: ( still_not-bound_in R25 ) c= ( ( still_not-bound_in R23 ) \/ ( still_not-bound_in R25 ) ) by XBOOLE_1:7;
thus L1783: thesis by L1782 , L1781;
end;
L1784:
now
assume L1785: R6 in ( dom R23 );
L1786: ( ( R23 ^ R25 ) . R6 ) = ( R23 . R6 ) by L1785 , FINSEQ_1:def 7;
L1787: R3 in ( still_not-bound_in R23 ) by L1786 , L1776 , L1785 , L251;
L1788: ( still_not-bound_in R23 ) c= ( ( still_not-bound_in R23 ) \/ ( still_not-bound_in R25 ) ) by XBOOLE_1:7;
thus L1789: thesis by L1788 , L1787;
end;
thus L1790: thesis by L1784 , L1775 , L1777 , FINSEQ_1:25;
end;

thus L1791: ( ( still_not-bound_in R23 ) \/ ( still_not-bound_in R25 ) ) c= ( still_not-bound_in ( R23 ^ R25 ) )
proof
let R3 being set;
assume that
L1792: R3 in ( ( still_not-bound_in R23 ) \/ ( still_not-bound_in R25 ) );
L1793:
now
assume L1794: R3 in ( still_not-bound_in R25 );
consider R6 being (Element of ( NAT )), R11 being (Element of ( CQC-WFF R1 )) such that L1795: (R6 in ( dom R25 ) & R11 = ( R25 . R6 )) and L1796: R3 in ( still_not-bound_in R11 ) by L1794 , L251;
L1797: (( ( len R23 ) + R6 ) in ( dom ( R23 ^ R25 ) ) & R11 = ( ( R23 ^ R25 ) . ( ( len R23 ) + R6 ) )) by L1795 , FINSEQ_1:28 , FINSEQ_1:def 7;
thus L1798: thesis by L1797 , L1796 , L251;
end;
L1799:
now
assume L1800: R3 in ( still_not-bound_in R23 );
consider R6 being (Element of ( NAT )), R11 being (Element of ( CQC-WFF R1 )) such that L1801: R6 in ( dom R23 ) and L1802: R11 = ( R23 . R6 ) and L1803: R3 in ( still_not-bound_in R11 ) by L1800 , L251;
L1804: (( dom R23 ) c= ( dom ( R23 ^ R25 ) ) & R11 = ( ( R23 ^ R25 ) . R6 )) by L1801 , L1802 , FINSEQ_1:26 , FINSEQ_1:def 7;
thus L1805: thesis by L1804 , L1801 , L1803 , L251;
end;
thus L1806: thesis by L1799 , L1792 , L1793 , XBOOLE_0:def 3;
end;

end;
theorem
L1792: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds ( still_not-bound_in <* R11 *> ) = ( still_not-bound_in R11 )))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
L1793:
now
L1794: 1 in ( Seg 1 ) by FINSEQ_1:2 , TARSKI:def 1;
L1795: 1 in ( dom <* R11 *> ) by L1794 , FINSEQ_1:38;
L1796: R11 = ( <* R11 *> . 1 ) by FINSEQ_1:40;
let R3 being set;
assume L1797: R3 in ( still_not-bound_in R11 );
thus L1798: R3 in ( still_not-bound_in <* R11 *> ) by L1797 , L1795 , L1796 , L251;
end;
L1799:
now
let R3 being set;
assume L1800: R3 in ( still_not-bound_in <* R11 *> );
consider R6 being (Element of ( NAT )), R12 being (Element of ( CQC-WFF R1 )) such that L1801: R6 in ( dom <* R11 *> ) and L1802: (R12 = ( <* R11 *> . R6 ) & R3 in ( still_not-bound_in R12 )) by L1800 , L251;
L1803: R6 in ( Seg 1 ) by L1801 , FINSEQ_1:38;
L1804: R6 = 1 by L1803 , FINSEQ_1:2 , TARSKI:def 1;
thus L1805: R3 in ( still_not-bound_in R11 ) by L1804 , L1802 , FINSEQ_1:40;
end;
thus L1806: thesis by L1799 , L1793 , TARSKI:1;
end;
theorem
L1807: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R12 being (Element of ( CQC-WFF R1 )) holds (for R14 being (bound_QC-variable of R1) holds (for R15 being (bound_QC-variable of R1) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (( |- ( ( R23 ^ <* ( R11 . (R14 , R15) ) *> ) ^ <* R12 *> ) & (not R15 in ( still_not-bound_in ( ( R23 ^ <* ( Ex (R14 , R11) ) *> ) ^ <* R12 *> ) ))) implies  |- ( ( R23 ^ <* ( Ex (R14 , R11) ) *> ) ^ <* R12 *> ))))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R12 being (Element of ( CQC-WFF R1 ));
let R14 being (bound_QC-variable of R1);
let R15 being (bound_QC-variable of R1);
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume that
L1808:  |- ( ( R23 ^ <* ( R11 . (R14 , R15) ) *> ) ^ <* R12 *> )
and
L1809: (not R15 in ( still_not-bound_in ( ( R23 ^ <* ( Ex (R14 , R11) ) *> ) ^ <* R12 *> ) ));
set D98 = ( ( R23 ^ <* ( 'not' R12 ) *> ) ^ <* ( ( 'not' R11 ) . (R14 , R15) ) *> );
L1810:  |- ( ( R23 ^ <* ( 'not' R12 ) *> ) ^ <* ( 'not' ( R11 . (R14 , R15) ) ) *> ) by L1808 , L1408;
L1811:  |- ( ( R23 ^ <* ( 'not' R12 ) *> ) ^ <* ( ( 'not' R11 ) . (R14 , R15) ) *> ) by L1810 , L1751;
L1812: (not R15 in ( ( still_not-bound_in ( R23 ^ <* ( Ex (R14 , R11) ) *> ) ) \/ ( still_not-bound_in <* R12 *> ) )) by L1809 , L1772;
L1813: (not R15 in ( still_not-bound_in ( R23 ^ <* ( Ex (R14 , R11) ) *> ) )) by L1812 , XBOOLE_0:def 3;
L1814: (not R15 in ( ( still_not-bound_in R23 ) \/ ( still_not-bound_in <* ( Ex (R14 , R11) ) *> ) )) by L1813 , L1772;
L1815: (not R15 in ( still_not-bound_in <* ( Ex (R14 , R11) ) *> )) by L1814 , XBOOLE_0:def 3;
L1816: (not R15 in ( still_not-bound_in ( Ex (R14 , R11) ) )) by L1815 , L1792;
L1817: (not R15 in ( ( still_not-bound_in R11 ) \ { R14 } )) by L1816 , QC_LANG3:19;
L1818: (not R15 in ( ( still_not-bound_in ( 'not' R11 ) ) \ { R14 } )) by L1817 , QC_LANG3:7;
L1819: (not R15 in ( still_not-bound_in ( All (R14 , ( 'not' R11 )) ) )) by L1818 , QC_LANG3:12;
L1820: (not R15 in ( still_not-bound_in <* R12 *> )) by L1812 , XBOOLE_0:def 3;
L1821: (not R15 in ( still_not-bound_in R12 )) by L1820 , L1792;
L1822: (not R15 in ( still_not-bound_in ( 'not' R12 ) )) by L1821 , QC_LANG3:7;
L1823: (not R15 in ( still_not-bound_in <* ( 'not' R12 ) *> )) by L1822 , L1792;
L1824: (not R15 in ( still_not-bound_in R23 )) by L1814 , XBOOLE_0:def 3;
L1825: (not R15 in ( ( still_not-bound_in R23 ) \/ ( still_not-bound_in <* ( 'not' R12 ) *> ) )) by L1824 , L1823 , XBOOLE_0:def 3;
L1826: (not R15 in ( still_not-bound_in ( R23 ^ <* ( 'not' R12 ) *> ) )) by L1825 , L1772;
L1827: (not R15 in ( still_not-bound_in ( Ant D98 ) )) by L1826 , L111;
L1828: ( Suc D98 ) = ( ( 'not' R11 ) . (R14 , R15) ) by L111;
L1829:  |- ( ( Ant D98 ) ^ <* ( All (R14 , ( 'not' R11 )) ) *> ) by L1828 , L1811 , L1827 , L1819 , L1310;
L1830:  |- ( ( R23 ^ <* ( 'not' R12 ) *> ) ^ <* ( All (R14 , ( 'not' R11 )) ) *> ) by L1829 , L111;
L1831:  |- ( ( R23 ^ <* ( 'not' ( All (R14 , ( 'not' R11 )) ) ) *> ) ^ <* R12 *> ) by L1830 , L1487;
thus L1832: thesis by L1831 , QC_LANG2:def 5;
end;
theorem
L1833: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ( still_not-bound_in R23 ) = ( union { ( still_not-bound_in R11 ) where R11 is (Element of ( CQC-WFF R1 )) : (ex R6 being (Element of ( NAT )) st (R6 in ( dom R23 ) & R11 = ( R23 . R6 ))) } )))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
defpred S4[ set ] means (ex R11 being (Element of ( CQC-WFF R1 )) st ($1 = ( still_not-bound_in R11 ) & (ex R6 being (Element of ( NAT )) st (R6 in ( dom R23 ) & R11 = ( R23 . R6 )))));
set D99 = { ( still_not-bound_in R11 ) where R11 is (Element of ( CQC-WFF R1 )) : (ex R6 being (Element of ( NAT )) st (R6 in ( dom R23 ) & R11 = ( R23 . R6 ))) };
L1834:
now
let R3 being set;
assume L1835: R3 in ( union D99 );
consider C62 being set such that L1836: R3 in C62 and L1837: C62 in D99 by L1835 , TARSKI:def 4;
L1838: S4[ C62 ] by L1837;
thus L1839: R3 in ( still_not-bound_in R23 ) by L1838 , L1836 , L251;
end;
L1840:
now
let R3 being set;
assume L1841: R3 in ( still_not-bound_in R23 );
consider R6 being (Element of ( NAT )), R11 being (Element of ( CQC-WFF R1 )) such that L1842: (R6 in ( dom R23 ) & R11 = ( R23 . R6 )) and L1843: R3 in ( still_not-bound_in R11 ) by L1841 , L251;
L1844: ( still_not-bound_in R11 ) in D99 by L1842;
thus L1845: R3 in ( union D99 ) by L1844 , L1843 , TARSKI:def 4;
end;
thus L1846: thesis by L1840 , L1834 , TARSKI:1;
end;
theorem
L1847: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ( still_not-bound_in R23 ) is  finite))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
defpred S5[ set , set ] means (ex R11 being (Element of ( CQC-WFF R1 )) st ($2 = ( still_not-bound_in R11 ) & R11 = ( R23 . $1 )));
consider C63 being Nat such that L1848: ( dom R23 ) = ( Seg C63 ) by FINSEQ_1:def 2;
set D100 = { ( still_not-bound_in R11 ) where R11 is (Element of ( CQC-WFF R1 )) : (ex R6 being (Element of ( NAT )) st (R6 in ( dom R23 ) & R11 = ( R23 . R6 ))) };
consider C64 being Function such that L1849: ( rng C64 ) = ( Seg C63 ) and L1850: ( dom C64 ) in ( omega ) by FINSET_1:def 1;
L1851:
now
let R3 being set;
assume L1852: R3 in D100;
L1853: (ex R11 being (Element of ( CQC-WFF R1 )) st (R3 = ( still_not-bound_in R11 ) & (ex R6 being (Element of ( NAT )) st (R6 in ( dom R23 ) & R11 = ( R23 . R6 ))))) by L1852;
thus L1854: R3 is  finite by L1853 , CQC_SIM1:19;
end;
L1855: (for B11 being set holds (B11 in ( dom R23 ) implies (ex R3 being set st S5[ B11 , R3 ])))
proof
let C65 being set;
assume L1856: C65 in ( dom R23 );
L1857: ( R23 . C65 ) in ( rng R23 ) by L1856 , FUNCT_1:3;
reconsider D101 = ( R23 . C65 ) as (Element of ( CQC-WFF R1 )) by L1857;
take ( still_not-bound_in D101 );
thus L1858: thesis;
end;
consider C66 being Function such that L1859: (( dom C66 ) = ( dom R23 ) & (for R3 being set holds (R3 in ( dom R23 ) implies S5[ R3 , ( C66 . R3 ) ]))) from CLASSES1:sch 1(L1855);
set D102 = ( C66 * C64 );
L1860:
now
let R3 being set;
assume L1861: R3 in D100;
consider R11 being (Element of ( CQC-WFF R1 )) such that L1862: R3 = ( still_not-bound_in R11 ) and L1863: (ex R6 being (Element of ( NAT )) st (R6 in ( dom R23 ) & R11 = ( R23 . R6 ))) by L1861;
consider R6 being (Element of ( NAT )) such that L1864: R6 in ( dom R23 ) and L1865: R11 = ( R23 . R6 ) by L1863;
L1866: S5[ R6 , ( C66 . R6 ) ] by L1859 , L1864;
L1867: R3 in ( rng C66 ) by L1866 , L1859 , L1862 , L1864 , L1865 , FUNCT_1:3;
thus L1868: R3 in ( rng D102 ) by L1867 , L1859 , L1848 , L1849 , RELAT_1:28;
end;
L1869:
now
let R3 being set;
assume L1870: R3 in ( rng D102 );
L1871: R3 in ( rng C66 ) by L1870 , L1859 , L1848 , L1849 , RELAT_1:28;
consider C67 being set such that L1872: C67 in ( dom C66 ) and L1873: R3 = ( C66 . C67 ) by L1871 , FUNCT_1:def 3;
reconsider D103 = C67 as (Element of ( NAT )) by L1859 , L1872;
L1874: S5[ D103 , ( C66 . D103 ) ] by L1859 , L1872;
thus L1875: R3 in D100 by L1874 , L1859 , L1872 , L1873;
end;
L1876: ( rng D102 ) = D100 by L1869 , L1860 , TARSKI:1;
L1877: ( dom D102 ) in ( omega ) by L1859 , L1848 , L1849 , L1850 , RELAT_1:27;
L1878: D100 is  finite by L1877 , L1876 , FINSET_1:def 1;
L1879: ( union D100 ) is  finite by L1878 , L1851 , FINSET_1:7;
thus L1880: thesis by L1879 , L1833;
end;
theorem
L1881: (for R1 being QC-alphabet holds (( card ( bound_QC-variables R1 ) ) = ( card ( QC-symbols R1 ) ) & (not ( bound_QC-variables R1 ) is  finite)))
proof
let R1 being QC-alphabet;
L1882: ( NAT ) c= ( QC-symbols R1 ) by QC_LANG1:3;
L1883: (not ( QC-symbols R1 ) is  finite) by L1882;
L1884: ( bound_QC-variables R1 ) = [: { 4 } , ( QC-symbols R1 ) :] by QC_LANG1:def 4;
L1885: ( card ( bound_QC-variables R1 ) ) = ( card [: ( QC-symbols R1 ) , { 4 } :] ) by L1884 , CARD_2:4;
thus L1886: thesis by L1885 , L1883 , CARD_4:19;
end;
theorem
L1887: (for R1 being QC-alphabet holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds (ex R14 being (bound_QC-variable of R1) st (not R14 in ( still_not-bound_in R23 )))))
proof
let R1 being QC-alphabet;
let R23 being (FinSequence of ( CQC-WFF R1 ));
L1888: ( still_not-bound_in R23 ) is  finite by L1847;
L1889: ( still_not-bound_in R23 ) <> ( bound_QC-variables R1 ) by L1888 , L1881;
L1890: (not (for R3 being set holds (R3 in ( still_not-bound_in R23 ) iff R3 in ( bound_QC-variables R1 )))) by L1889 , TARSKI:1;
consider R3 being set such that L1891: (not R3 in ( still_not-bound_in R23 )) and L1892: R3 in ( bound_QC-variables R1 ) by L1890;
reconsider D104 = R3 as (bound_QC-variable of R1) by L1892;
take D104;
thus L1893: thesis by L1891;
end;
theorem
L1894: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R14 being (bound_QC-variable of R1) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ( |- ( R23 ^ <* ( All (R14 , R11) ) *> ) implies  |- ( R23 ^ <* ( All (R14 , ( 'not' ( 'not' R11 ) )) ) *> ))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R14 being (bound_QC-variable of R1);
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume L1895:  |- ( R23 ^ <* ( All (R14 , R11) ) *> );
consider R16 being (bound_QC-variable of R1) such that L1896: (not R16 in ( still_not-bound_in ( R23 ^ <* ( All (R14 , R11) ) *> ) )) by L1887;
L1897: (( Ant ( R23 ^ <* ( All (R14 , R11) ) *> ) ) = R23 & ( Suc ( R23 ^ <* ( All (R14 , R11) ) *> ) ) = ( All (R14 , R11) )) by L111;
L1898:  |- ( R23 ^ <* ( R11 . (R14 , R16) ) *> ) by L1897 , L1895 , L1264;
L1899:  |- ( R23 ^ <* ( 'not' ( 'not' ( R11 . (R14 , R16) ) ) ) *> ) by L1898 , L1615;
L1900:  |- ( R23 ^ <* ( 'not' ( ( 'not' R11 ) . (R14 , R16) ) ) *> ) by L1899 , L1751;
L1901:  |- ( R23 ^ <* ( ( 'not' ( 'not' R11 ) ) . (R14 , R16) ) *> ) by L1900 , L1751;
set D105 = ( R23 ^ <* ( ( 'not' ( 'not' R11 ) ) . (R14 , R16) ) *> );
L1902: (not R16 in ( ( still_not-bound_in R23 ) \/ ( still_not-bound_in <* ( All (R14 , R11) ) *> ) )) by L1896 , L1772;
L1903: (not R16 in ( still_not-bound_in R23 )) by L1902 , XBOOLE_0:def 3;
L1904: (not R16 in ( still_not-bound_in ( Ant D105 ) )) by L1903 , L111;
L1905: (not R16 in ( still_not-bound_in <* ( All (R14 , R11) ) *> )) by L1902 , XBOOLE_0:def 3;
L1906: (not R16 in ( still_not-bound_in ( All (R14 , R11) ) )) by L1905 , L1792;
L1907: (not R16 in ( ( still_not-bound_in R11 ) \ { R14 } )) by L1906 , QC_LANG3:12;
L1908: (not R16 in ( ( still_not-bound_in ( 'not' R11 ) ) \ { R14 } )) by L1907 , QC_LANG3:7;
L1909: (not R16 in ( ( still_not-bound_in ( 'not' ( 'not' R11 ) ) ) \ { R14 } )) by L1908 , QC_LANG3:7;
L1910: (not R16 in ( still_not-bound_in ( All (R14 , ( 'not' ( 'not' R11 ) )) ) )) by L1909 , QC_LANG3:12;
L1911: ( Suc D105 ) = ( ( 'not' ( 'not' R11 ) ) . (R14 , R16) ) by L111;
L1912:  |- ( ( Ant D105 ) ^ <* ( All (R14 , ( 'not' ( 'not' R11 ) )) ) *> ) by L1911 , L1901 , L1904 , L1910 , L1310;
thus L1913: thesis by L1912 , L111;
end;
theorem
L1914: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R14 being (bound_QC-variable of R1) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ( |- ( R23 ^ <* ( All (R14 , ( 'not' ( 'not' R11 ) )) ) *> ) implies  |- ( R23 ^ <* ( All (R14 , R11) ) *> ))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R14 being (bound_QC-variable of R1);
let R23 being (FinSequence of ( CQC-WFF R1 ));
assume L1915:  |- ( R23 ^ <* ( All (R14 , ( 'not' ( 'not' R11 ) )) ) *> );
consider R16 being (bound_QC-variable of R1) such that L1916: (not R16 in ( still_not-bound_in ( R23 ^ <* ( All (R14 , R11) ) *> ) )) by L1887;
L1917: (( Ant ( R23 ^ <* ( All (R14 , ( 'not' ( 'not' R11 ) )) ) *> ) ) = R23 & ( Suc ( R23 ^ <* ( All (R14 , ( 'not' ( 'not' R11 ) )) ) *> ) ) = ( All (R14 , ( 'not' ( 'not' R11 ) )) )) by L111;
L1918:  |- ( R23 ^ <* ( ( 'not' ( 'not' R11 ) ) . (R14 , R16) ) *> ) by L1917 , L1915 , L1264;
L1919:  |- ( R23 ^ <* ( 'not' ( ( 'not' R11 ) . (R14 , R16) ) ) *> ) by L1918 , L1751;
L1920:  |- ( R23 ^ <* ( 'not' ( 'not' ( R11 . (R14 , R16) ) ) ) *> ) by L1919 , L1751;
set D106 = ( R23 ^ <* ( R11 . (R14 , R16) ) *> );
L1921: (not R16 in ( ( still_not-bound_in R23 ) \/ ( still_not-bound_in <* ( All (R14 , R11) ) *> ) )) by L1916 , L1772;
L1922: (not R16 in ( still_not-bound_in R23 )) by L1921 , XBOOLE_0:def 3;
L1923: (not R16 in ( still_not-bound_in ( Ant D106 ) )) by L1922 , L111;
L1924: (not R16 in ( still_not-bound_in <* ( All (R14 , R11) ) *> )) by L1921 , XBOOLE_0:def 3;
L1925: (not R16 in ( still_not-bound_in ( All (R14 , R11) ) )) by L1924 , L1792;
L1926: ( Suc D106 ) = ( R11 . (R14 , R16) ) by L111;
L1927:  |- ( ( Ant D106 ) ^ <* ( All (R14 , R11) ) *> ) by L1926 , L1920 , L1923 , L1925 , L1310 , L1662;
thus L1928: thesis by L1927 , L111;
end;
theorem
L1929: (for R1 being QC-alphabet holds (for R11 being (Element of ( CQC-WFF R1 )) holds (for R14 being (bound_QC-variable of R1) holds (for R23 being (FinSequence of ( CQC-WFF R1 )) holds ( |- ( R23 ^ <* ( All (R14 , R11) ) *> ) iff  |- ( R23 ^ <* ( 'not' ( Ex (R14 , ( 'not' R11 )) ) ) *> ))))))
proof
let R1 being QC-alphabet;
let R11 being (Element of ( CQC-WFF R1 ));
let R14 being (bound_QC-variable of R1);
let R23 being (FinSequence of ( CQC-WFF R1 ));
thus L1930: ( |- ( R23 ^ <* ( All (R14 , R11) ) *> ) implies  |- ( R23 ^ <* ( 'not' ( Ex (R14 , ( 'not' R11 )) ) ) *> ))
proof
assume L1931:  |- ( R23 ^ <* ( All (R14 , R11) ) *> );
L1932:  |- ( R23 ^ <* ( All (R14 , ( 'not' ( 'not' R11 ) )) ) *> ) by L1931 , L1894;
L1933:  |- ( R23 ^ <* ( 'not' ( 'not' ( All (R14 , ( 'not' ( 'not' R11 ) )) ) ) ) *> ) by L1932 , L1615;
thus L1934: thesis by L1933 , QC_LANG2:def 5;
end;

assume L1935:  |- ( R23 ^ <* ( 'not' ( Ex (R14 , ( 'not' R11 )) ) ) *> );
L1936:  |- ( R23 ^ <* ( 'not' ( 'not' ( All (R14 , ( 'not' ( 'not' R11 ) )) ) ) ) *> ) by L1935 , QC_LANG2:def 5;
L1937:  |- ( R23 ^ <* ( All (R14 , ( 'not' ( 'not' R11 ) )) ) *> ) by L1936 , L1662;
thus L1938: thesis by L1937 , L1914;
end;
definition
let C68 being FinSequence;
let C69 being set;
redefine pred C69 is_tail_of C68
means
(ex B12 being (Element of ( NAT )) st (B12 in ( dom C68 ) & ( C68 . B12 ) = C69))
;compatibility by L36 , L42;
end;
