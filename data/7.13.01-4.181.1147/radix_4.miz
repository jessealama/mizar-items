:: High Speed Adder Algorithm with Radix-$2^k$ SD_Sub Number
::  by Masaaki Niimura and Yasushi Fuwa
::
:: Received January 3, 2003
:: Copyright (c) 2003-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, NAT_1, INT_1, XXREAL_0, ARYTM_3, RADIX_1, POWER,
      RELAT_1, RADIX_3, ARYTM_1, SUBSET_1, FINSEQ_1, NEWTON, CARD_1, FINSEQ_2,
      TARSKI, FUNCT_1, ORDINAL4, PARTFUN1, CARD_3, RADIX_4;
 notations TARSKI, SUBSET_1, NUMBERS, XCMPLX_0, INT_1, ORDINAL1, NAT_D,
      FUNCT_1, PARTFUN1, NEWTON, POWER, XXREAL_0, FINSEQ_1, FINSEQ_2, GR_CY_1,
      RADIX_1, RADIX_3;
 constructors REAL_1, NAT_D, NEWTON, POWER, BINARITH, GR_CY_1, RADIX_3;
 registrations RELSET_1, NUMBERS, XREAL_0, NAT_1, INT_1, MEMBERED, NEWTON,
      XBOOLE_0, VALUED_0, FINSEQ_2;
 requirements REAL, SUBSET, BOOLE, NUMERALS, ARITHM;
 definitions RADIX_1;
 theorems RADIX_1, POWER, NAT_1, INT_1, FINSEQ_1, FINSEQ_2, NEWTON, RVSUM_1,
      PREPOWER, JORDAN12, EULER_2, RADIX_3, XREAL_1, XXREAL_0, NAT_D, ORDINAL1,
      PARTFUN1, XREAL_0, CARD_1;
 schemes FINSEQ_2, NAT_1;

begin
theorem
L1: (for R4 being Nat holds (2 <= R4 implies 2 < ( Radix R4 )))
proof
let R4 being Nat;
defpred S1[ Nat ] means 2 < ( Radix $1 );
L2: (for B1 being Nat holds ((B1 >= 2 & S1[ B1 ]) implies S1[ ( B1 + 1 ) ]))
proof
let C1 being Nat;
assume that
L3: 2 <= C1
and
L4: 2 < ( Radix C1 );
L5: ( Radix ( C1 + 1 ) ) = ( ( 2 to_power 1 ) * ( 2 to_power C1 ) ) by POWER:27
.= ( 2 * ( Radix C1 ) ) by POWER:25;
L6: ( Radix C1 ) > 1 by L4 , XXREAL_0:2;
thus L7: thesis by L6 , L5 , XREAL_1:155;
end;
L8: ( Radix 2 ) = ( 2 to_power ( 1 + 1 ) )
.= ( ( 2 to_power 1 ) * ( 2 to_power 1 ) ) by POWER:27
.= ( 2 * ( 2 to_power 1 ) ) by POWER:25
.= ( 2 * 2 ) by POWER:25
.= 4;
L9: S1[ 2 ] by L8;
L10: (for B2 being Nat holds (2 <= B2 implies S1[ B2 ])) from NAT_1:sch 8(L9 , L2);
thus L11: thesis by L10;
end;
L12: (for R4 being Nat holds (for R7 being Integer holds (R7 in ( R4 -SD_Sub_S ) implies (R7 >= ( - ( Radix ( R4 -' 1 ) ) ) & R7 <= ( ( Radix ( R4 -' 1 ) ) - 1 )))))
proof
let R4 being Nat;
let R7 being Integer;
L13: ( R4 -SD_Sub_S ) = { B3 where B3 is (Element of ( INT )) : (( - ( Radix ( R4 -' 1 ) ) ) <= B3 & B3 <= ( ( Radix ( R4 -' 1 ) ) - 1 )) } by RADIX_3:def 1;
assume L14: R7 in ( R4 -SD_Sub_S );
L15: (ex B4 being (Element of ( INT )) st (B4 = R7 & ( - ( Radix ( R4 -' 1 ) ) ) <= B4 & B4 <= ( ( Radix ( R4 -' 1 ) ) - 1 ))) by L14 , L13;
thus L16: thesis by L15;
end;
L17: (for R2 being Nat holds (for R3 being Nat holds (for R4 being Nat holds (for R1 being Nat holds (R1 in ( Seg R2 ) implies ( DigA (( DecSD (R3 , ( R2 + 1 ) , R4) ) , R1) ) = ( DigA (( DecSD (R3 , R2 , R4) ) , R1) ))))))
proof
let R2 being Nat;
let R3 being Nat;
let R4 being Nat;
let R1 being Nat;
assume L18: R1 in ( Seg R2 );
L19: R1 <= R2 by L18 , FINSEQ_1:1;
L20: R1 <= ( R2 + 1 ) by L19 , NAT_1:12;
L21: 1 <= R1 by L18 , FINSEQ_1:1;
L22: R1 in ( Seg ( R2 + 1 ) ) by L21 , L20 , FINSEQ_1:1;
L23: ( DigA (( DecSD (R3 , R2 , R4) ) , R1) ) = ( DigitDC (R3 , R1 , R4) ) by L18 , RADIX_1:def 9
.= ( DigA (( DecSD (R3 , ( R2 + 1 ) , R4) ) , R1) ) by L22 , RADIX_1:def 9;
thus L24: thesis by L23;
end;
L25: (for B5 , B6 , B7 being Nat holds (B7 >= 1 implies ( DigA (( DecSD (( B6 mod ( ( Radix B5 ) |^ B7 ) ) , B7 , B5) ) , B7) ) = ( DigA (( DecSD (B6 , B7 , B5) ) , B7) )))
proof
let C2 , C3 , C4 being Nat;
set D1 = ( C3 mod ( ( Radix C2 ) |^ C4 ) );
assume L26: C4 >= 1;
L27: C4 <> ( 0 ) by L26;
L28: C4 in ( Seg C4 ) by L27 , FINSEQ_1:3;
L29: ( DigA (( DecSD (D1 , C4 , C2) ) , C4) ) = ( DigitDC (D1 , C4 , C2) ) by L28 , RADIX_1:def 9
.= ( DigitDC (C3 , C4 , C2) ) by EULER_2:5
.= ( DigA (( DecSD (C3 , C4 , C2) ) , C4) ) by L28 , RADIX_1:def 9;
thus L30: thesis by L29;
end;
begin
theorem
L31: (for B8 , B9 being Integer holds (for B10 being Nat holds (3 <= B10 implies ( SDSub_Add_Carry (( ( SDSub_Add_Carry (B8 , B10) ) + ( SDSub_Add_Carry (B9 , B10) ) ) , B10) ) = ( 0 ))))
proof
let C5 , C6 being Integer;
let C7 being Nat;
set D2 = ( ( SDSub_Add_Carry (C5 , C7) ) + ( SDSub_Add_Carry (C6 , C7) ) );
L32: (( - 1 ) <= ( SDSub_Add_Carry (C5 , C7) ) & ( - 1 ) <= ( SDSub_Add_Carry (C6 , C7) )) by RADIX_3:12;
L33: ( ( - 1 ) + ( - 1 ) ) <= D2 by L32 , XREAL_1:7;
assume L34: C7 >= 3;
L35: ( C7 - 1 ) >= ( 3 - 1 ) by L34 , XREAL_1:13;
L36: ( C7 - 1 ) > ( 0 ) by L35 , XXREAL_0:2;
L37: ( C7 - 1 ) = ( C7 -' 1 ) by L36 , XREAL_0:def 2;
L38: ( Radix ( C7 -' 1 ) ) > 2 by L37 , L35 , L1;
L39: (( SDSub_Add_Carry (C5 , C7) ) <= 1 & ( SDSub_Add_Carry (C6 , C7) ) <= 1) by RADIX_3:12;
L40: D2 <= ( 1 + 1 ) by L39 , XREAL_1:7;
L41: D2 < ( Radix ( C7 -' 1 ) ) by L40 , L38 , XXREAL_0:2;
L42: ( - ( Radix ( C7 -' 1 ) ) ) <= ( - 2 ) by L38 , XREAL_1:24;
L43: ( - ( Radix ( C7 -' 1 ) ) ) <= D2 by L42 , L33 , XXREAL_0:2;
thus L44: thesis by L43 , L41 , RADIX_3:def 3;
end;
theorem
L45: (for R2 being Nat holds (for R3 being Nat holds (for R4 being Nat holds (2 <= R4 implies ( DigA_SDSub (( SD2SDSub ( DecSD (R3 , R2 , R4) ) ) , ( R2 + 1 )) ) = ( SDSub_Add_Carry (( DigA (( DecSD (R3 , R2 , R4) ) , R2) ) , R4) )))))
proof
let R2 being Nat;
let R3 being Nat;
let R4 being Nat;
assume L46: 2 <= R4;
L47: ( 0 ) <= R2 by NAT_1:2;
L48: ( ( 0 ) + 1 ) <= ( R2 + 1 ) by L47 , XREAL_1:7;
L49: ( R2 + 1 ) in ( Seg ( R2 + 1 ) ) by L48 , FINSEQ_1:1;
thus L50: ( DigA_SDSub (( SD2SDSub ( DecSD (R3 , R2 , R4) ) ) , ( R2 + 1 )) ) = ( SD2SDSubDigitS (( DecSD (R3 , R2 , R4) ) , ( R2 + 1 ) , R4) ) by L49 , RADIX_3:def 8
.= ( SD2SDSubDigit (( DecSD (R3 , R2 , R4) ) , ( R2 + 1 ) , R4) ) by L46 , L49 , RADIX_3:def 7
.= ( SDSub_Add_Carry (( DigA (( DecSD (R3 , R2 , R4) ) , ( ( R2 + 1 ) -' 1 )) ) , R4) ) by RADIX_3:def 6
.= ( SDSub_Add_Carry (( DigA (( DecSD (R3 , R2 , R4) ) , R2) ) , R4) ) by NAT_D:34;
end;
theorem
L51: (for R3 being Nat holds (for R4 being Nat holds ((2 <= R4 & R3 is_represented_by 1 , R4) implies ( DigA_SDSub (( SD2SDSub ( DecSD (R3 , 1 , R4) ) ) , ( 1 + 1 )) ) = ( SDSub_Add_Carry (R3 , R4) ))))
proof
let R3 being Nat;
let R4 being Nat;
assume that
L52: 2 <= R4
and
L53: R3 is_represented_by 1 , R4;
thus L54: ( DigA_SDSub (( SD2SDSub ( DecSD (R3 , 1 , R4) ) ) , ( 1 + 1 )) ) = ( SDSub_Add_Carry (( DigA (( DecSD (R3 , 1 , R4) ) , 1) ) , R4) ) by L52 , L45
.= ( SDSub_Add_Carry (R3 , R4) ) by L53 , RADIX_1:21;
end;
theorem
L55: (for B11 , B12 , B13 being Nat holds ((B13 >= 1 & B11 >= 3 & B12 is_represented_by ( B13 + 1 ) , B11) implies ( DigA_SDSub (( SD2SDSub ( DecSD (( B12 mod ( ( Radix B11 ) |^ B13 ) ) , B13 , B11) ) ) , ( B13 + 1 )) ) = ( SDSub_Add_Carry (( DigA (( DecSD (B12 , B13 , B11) ) , B13) ) , B11) )))
proof
let C8 , C9 , C10 being Nat;
assume that
L56: C10 >= 1
and
L57: C8 >= 3;
set D3 = ( C9 mod ( ( Radix C8 ) |^ C10 ) );
L58: ( C10 + 1 ) in ( Seg ( C10 + 1 ) ) by FINSEQ_1:3;
L59: ( DigA_SDSub (( SD2SDSub ( DecSD (D3 , C10 , C8) ) ) , ( C10 + 1 )) ) = ( SD2SDSubDigitS (( DecSD (D3 , C10 , C8) ) , ( C10 + 1 ) , C8) ) by L58 , RADIX_3:def 8
.= ( SD2SDSubDigit (( DecSD (D3 , C10 , C8) ) , ( C10 + 1 ) , C8) ) by L57 , L58 , RADIX_3:def 7 , XXREAL_0:2
.= ( SDSub_Add_Carry (( DigA (( DecSD (D3 , C10 , C8) ) , ( ( C10 + 1 ) -' 1 )) ) , C8) ) by RADIX_3:def 6
.= ( SDSub_Add_Carry (( DigA (( DecSD (D3 , C10 , C8) ) , ( C10 + ( 0 ) )) ) , C8) ) by NAT_D:34
.= ( SDSub_Add_Carry (( DigA (( DecSD (C9 , C10 , C8) ) , C10) ) , C8) ) by L56 , L25;
thus L60: thesis by L59;
end;
theorem
L61: (for R3 being Nat holds (for R4 being Nat holds ((2 <= R4 & R3 is_represented_by 1 , R4) implies ( DigA_SDSub (( SD2SDSub ( DecSD (R3 , 1 , R4) ) ) , 1) ) = ( R3 - ( ( SDSub_Add_Carry (R3 , R4) ) * ( Radix R4 ) ) ))))
proof
let R3 being Nat;
let R4 being Nat;
assume that
L62: 2 <= R4
and
L63: R3 is_represented_by 1 , R4;
L64: 1 in ( Seg 1 ) by FINSEQ_1:3;
L65: 1 in ( Seg ( 1 + 1 ) ) by FINSEQ_1:1;
L66: ( DigA_SDSub (( SD2SDSub ( DecSD (R3 , 1 , R4) ) ) , 1) ) = ( SD2SDSubDigitS (( DecSD (R3 , 1 , R4) ) , 1 , R4) ) by L65 , RADIX_3:def 8
.= ( SD2SDSubDigit (( DecSD (R3 , 1 , R4) ) , 1 , R4) ) by L62 , L65 , RADIX_3:def 7;
thus L67: ( DigA_SDSub (( SD2SDSub ( DecSD (R3 , 1 , R4) ) ) , 1) ) = ( ( SDSub_Add_Data (( DigA (( DecSD (R3 , 1 , R4) ) , 1) ) , R4) ) + ( SDSub_Add_Carry (( DigA (( DecSD (R3 , 1 , R4) ) , ( 1 -' 1 )) ) , R4) ) ) by L66 , L64 , RADIX_3:def 6
.= ( ( SDSub_Add_Data (( DigA (( DecSD (R3 , 1 , R4) ) , 1) ) , R4) ) + ( SDSub_Add_Carry (( DigA (( DecSD (R3 , 1 , R4) ) , ( 0 )) ) , R4) ) ) by XREAL_1:232
.= ( ( SDSub_Add_Data (( DigA (( DecSD (R3 , 1 , R4) ) , 1) ) , R4) ) + ( SDSub_Add_Carry (( 0 ) , R4) ) ) by RADIX_1:def 3
.= ( ( SDSub_Add_Data (R3 , R4) ) + ( SDSub_Add_Carry (( 0 ) , R4) ) ) by L63 , RADIX_1:21
.= ( ( SDSub_Add_Data (R3 , R4) ) + ( 0 ) ) by RADIX_3:16
.= ( R3 - ( ( SDSub_Add_Carry (R3 , R4) ) * ( Radix R4 ) ) ) by RADIX_3:def 4;
end;
theorem
L68: (for B14 , B15 , B16 being Nat holds (B14 >= 2 implies ( ( ( Radix B14 ) |^ B16 ) * ( DigA_SDSub (( SD2SDSub ( DecSD (B15 , ( B16 + 1 ) , B14) ) ) , ( B16 + 1 )) ) ) = ( ( ( ( ( Radix B14 ) |^ B16 ) * ( DigA (( DecSD (B15 , ( B16 + 1 ) , B14) ) , ( B16 + 1 )) ) ) - ( ( ( Radix B14 ) |^ ( B16 + 1 ) ) * ( SDSub_Add_Carry (( DigA (( DecSD (B15 , ( B16 + 1 ) , B14) ) , ( B16 + 1 )) ) , B14) ) ) ) + ( ( ( Radix B14 ) |^ B16 ) * ( SDSub_Add_Carry (( DigA (( DecSD (B15 , ( B16 + 1 ) , B14) ) , B16) ) , B14) ) ) )))
proof
let C11 , C12 , C13 being Nat;
assume L69: C11 >= 2;
L70: ( C13 + 1 ) in ( Seg ( C13 + 1 ) ) by FINSEQ_1:3;
L71: ( C13 + 1 ) in ( Seg ( ( C13 + 1 ) + 1 ) ) by L70 , FINSEQ_2:8;
L72: ( ( ( Radix C11 ) |^ C13 ) * ( DigA_SDSub (( SD2SDSub ( DecSD (C12 , ( C13 + 1 ) , C11) ) ) , ( C13 + 1 )) ) ) = ( ( ( Radix C11 ) |^ C13 ) * ( SD2SDSubDigitS (( DecSD (C12 , ( C13 + 1 ) , C11) ) , ( C13 + 1 ) , C11) ) ) by L71 , RADIX_3:def 8
.= ( ( ( Radix C11 ) |^ C13 ) * ( SD2SDSubDigit (( DecSD (C12 , ( C13 + 1 ) , C11) ) , ( C13 + 1 ) , C11) ) ) by L69 , L71 , RADIX_3:def 7
.= ( ( ( Radix C11 ) |^ C13 ) * ( ( SDSub_Add_Data (( DigA (( DecSD (C12 , ( C13 + 1 ) , C11) ) , ( C13 + 1 )) ) , C11) ) + ( SDSub_Add_Carry (( DigA (( DecSD (C12 , ( C13 + 1 ) , C11) ) , ( ( C13 + 1 ) -' 1 )) ) , C11) ) ) ) by L70 , RADIX_3:def 6
.= ( ( ( Radix C11 ) |^ C13 ) * ( ( SDSub_Add_Data (( DigA (( DecSD (C12 , ( C13 + 1 ) , C11) ) , ( C13 + 1 )) ) , C11) ) + ( SDSub_Add_Carry (( DigA (( DecSD (C12 , ( C13 + 1 ) , C11) ) , C13) ) , C11) ) ) ) by NAT_D:34
.= ( ( ( Radix C11 ) |^ C13 ) * ( ( ( DigA (( DecSD (C12 , ( C13 + 1 ) , C11) ) , ( C13 + 1 )) ) - ( ( Radix C11 ) * ( SDSub_Add_Carry (( DigA (( DecSD (C12 , ( C13 + 1 ) , C11) ) , ( C13 + 1 )) ) , C11) ) ) ) + ( SDSub_Add_Carry (( DigA (( DecSD (C12 , ( C13 + 1 ) , C11) ) , C13) ) , C11) ) ) ) by RADIX_3:def 4
.= ( ( ( ( ( Radix C11 ) |^ C13 ) * ( DigA (( DecSD (C12 , ( C13 + 1 ) , C11) ) , ( C13 + 1 )) ) ) - ( ( ( ( Radix C11 ) |^ C13 ) * ( Radix C11 ) ) * ( SDSub_Add_Carry (( DigA (( DecSD (C12 , ( C13 + 1 ) , C11) ) , ( C13 + 1 )) ) , C11) ) ) ) + ( ( ( Radix C11 ) |^ C13 ) * ( SDSub_Add_Carry (( DigA (( DecSD (C12 , ( C13 + 1 ) , C11) ) , C13) ) , C11) ) ) )
.= ( ( ( ( ( Radix C11 ) |^ C13 ) * ( DigA (( DecSD (C12 , ( C13 + 1 ) , C11) ) , ( C13 + 1 )) ) ) - ( ( ( Radix C11 ) |^ ( C13 + 1 ) ) * ( SDSub_Add_Carry (( DigA (( DecSD (C12 , ( C13 + 1 ) , C11) ) , ( C13 + 1 )) ) , C11) ) ) ) + ( ( ( Radix C11 ) |^ C13 ) * ( SDSub_Add_Carry (( DigA (( DecSD (C12 , ( C13 + 1 ) , C11) ) , C13) ) , C11) ) ) ) by NEWTON:6;
thus L73: thesis by L72;
end;
begin
definition
let C14 , C15 , C16 being Nat;
let C17 being (Tuple of C15 , ( C16 -SD_Sub ));
let C18 being (Tuple of C15 , ( C16 -SD_Sub ));
assume that
L74: C14 in ( Seg C15 )
and
L75: C16 >= 2;
func SDSubAddDigit (C17 , C18 , C14 , C16) -> (Element of ( C16 -SD_Sub )) equals 
:L76: ( ( SDSub_Add_Data (( ( DigA_SDSub (C17 , C14) ) + ( DigA_SDSub (C18 , C14) ) ) , C16) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (C17 , ( C14 -' 1 )) ) + ( DigA_SDSub (C18 , ( C14 -' 1 )) ) ) , C16) ) );
coherence
proof
L77: ( DigA_SDSub (C17 , C14) ) is (Element of ( C16 -SD_Sub )) by L74 , RADIX_3:18;
L78: ( DigA_SDSub (C17 , C14) ) in ( C16 -SD_Sub ) by L77;
set D4 = ( SDSub_Add_Carry (( ( DigA_SDSub (C17 , ( C14 -' 1 )) ) + ( DigA_SDSub (C18 , ( C14 -' 1 )) ) ) , C16) );
set D5 = ( SDSub_Add_Data (( ( DigA_SDSub (C17 , C14) ) + ( DigA_SDSub (C18 , C14) ) ) , C16) );
L79: ( - 1 ) <= D4 by RADIX_3:12;
L80: D4 <= 1 by RADIX_3:12;
L81: (( C16 -SD_Sub ) c= ( C16 -SD ) & ( DigA_SDSub (C18 , C14) ) is (Element of ( C16 -SD_Sub ))) by L74 , L75 , RADIX_3:4 , RADIX_3:18;
L82: D5 in ( C16 -SD_Sub_S ) by L81 , L75 , L78 , RADIX_3:19;
L83: D5 >= ( - ( Radix ( C16 -' 1 ) ) ) by L82 , L12;
L84: ( ( - ( Radix ( C16 -' 1 ) ) ) + ( - 1 ) ) <= ( D5 + D4 ) by L83 , L79 , XREAL_1:7;
L85: D5 <= ( ( Radix ( C16 -' 1 ) ) - 1 ) by L82 , L12;
L86: ( D5 + D4 ) <= ( ( ( Radix ( C16 -' 1 ) ) - 1 ) + 1 ) by L85 , L80 , XREAL_1:7;
L87: (( D5 + D4 ) is (Element of ( INT )) & ( C16 -SD_Sub ) = { B17 where B17 is (Element of ( INT )) : (B17 >= ( ( - ( Radix ( C16 -' 1 ) ) ) - 1 ) & B17 <= ( Radix ( C16 -' 1 ) )) }) by INT_1:def 2 , RADIX_3:def 2;
L88: ( D5 + D4 ) in ( C16 -SD_Sub ) by L87 , L84 , L86;
thus L89: thesis by L88;
end;
end;
definition
let C19 , C20 being Nat;
let C21 , C22 being (Tuple of C19 , ( C20 -SD_Sub ));
func C21 '+' C22 -> (Tuple of C19 , ( C20 -SD_Sub )) means 
:L91: (for R1 being Nat holds (R1 in ( Seg C19 ) implies ( DigA_SDSub (it , R1) ) = ( SDSubAddDigit (C21 , C22 , R1 , C20) )));
existence
proof
deffunc H1(Nat) = ( SDSubAddDigit (C21 , C22 , $1 , C20) );
consider C23 being (FinSequence of ( C20 -SD_Sub )) such that L92: ( len C23 ) = C19 and L93: (for B18 being Nat holds (B18 in ( dom C23 ) implies ( C23 . B18 ) = H1(B18))) from FINSEQ_2:sch 1;
L94: ( dom C23 ) = ( Seg C19 ) by L92 , FINSEQ_1:def 3;
L95: C23 is (Element of ( C19 -tuples_on ( C20 -SD_Sub ) )) by L92 , FINSEQ_2:92;
reconsider D6 = C23 as (Tuple of C19 , ( C20 -SD_Sub )) by L95;
take D6;
let R1 being Nat;
assume L96: R1 in ( Seg C19 );
thus L97: ( DigA_SDSub (D6 , R1) ) = ( D6 . R1 ) by L96 , RADIX_3:def 5
.= ( SDSubAddDigit (C21 , C22 , R1 , C20) ) by L93 , L94 , L96;
end;
uniqueness
proof
let C24 , C25 being (Tuple of C19 , ( C20 -SD_Sub ));
assume that
L98: (for B19 being Nat holds (B19 in ( Seg C19 ) implies ( DigA_SDSub (C24 , B19) ) = ( SDSubAddDigit (C21 , C22 , B19 , C20) )))
and
L99: (for B20 being Nat holds (B20 in ( Seg C19 ) implies ( DigA_SDSub (C25 , B20) ) = ( SDSubAddDigit (C21 , C22 , B20 , C20) )));
L100: ( len C24 ) = C19 by CARD_1:def 7;
L101: ( dom C24 ) = ( Seg C19 ) by L100 , FINSEQ_1:def 3;
L102:
now
let C26 being Nat;
assume L103: C26 in ( dom C24 );
L104: ( C24 . C26 ) = ( DigA_SDSub (C24 , C26) ) by L103 , L101 , RADIX_3:def 5
.= ( SDSubAddDigit (C21 , C22 , C26 , C20) ) by L98 , L101 , L103
.= ( DigA_SDSub (C25 , C26) ) by L99 , L101 , L103
.= ( C25 . C26 ) by L101 , L103 , RADIX_3:def 5;
thus L105: ( C24 . C26 ) = ( C25 . C26 ) by L104;
end;
L106: ( len C25 ) = C19 by CARD_1:def 7;
thus L107: thesis by L106 , L100 , L102 , FINSEQ_2:9;
end;
end;
theorem
L109: (for R2 being Nat holds (for R4 being Nat holds (for R5 being Nat holds (for R6 being Nat holds (for R1 being Nat holds (R1 in ( Seg R2 ) implies (2 <= R4 implies ( SDSubAddDigit (( SD2SDSub ( DecSD (R5 , ( R2 + 1 ) , R4) ) ) , ( SD2SDSub ( DecSD (R6 , ( R2 + 1 ) , R4) ) ) , R1 , R4) ) = ( SDSubAddDigit (( SD2SDSub ( DecSD (( R5 mod ( ( Radix R4 ) |^ R2 ) ) , R2 , R4) ) ) , ( SD2SDSub ( DecSD (( R6 mod ( ( Radix R4 ) |^ R2 ) ) , R2 , R4) ) ) , R1 , R4) ))))))))
proof
let R2 being Nat;
let R4 being Nat;
let R5 being Nat;
let R6 being Nat;
let R1 being Nat;
set D7 = ( R5 mod ( ( Radix R4 ) |^ R2 ) );
set D8 = ( R6 mod ( ( Radix R4 ) |^ R2 ) );
assume L110: R1 in ( Seg R2 );
L111: R1 <= R2 by L110 , FINSEQ_1:1;
L112: R1 <= ( R2 + 1 ) by L111 , NAT_1:12;
L113: 1 <= R1 by L110 , FINSEQ_1:1;
L114: R1 in ( Seg ( R2 + 1 ) ) by L113 , L112 , FINSEQ_1:1;
L115: R1 <= ( ( R2 + 1 ) + 1 ) by L112 , NAT_1:12;
L116: R1 in ( Seg ( ( R2 + 1 ) + 1 ) ) by L115 , L113 , FINSEQ_1:1;
reconsider D9 = R1 as (Element of ( NAT )) by ORDINAL1:def 12;
assume L117: 2 <= R4;
L118: ( SDSubAddDigit (( SD2SDSub ( DecSD (R5 , ( R2 + 1 ) , R4) ) ) , ( SD2SDSub ( DecSD (R6 , ( R2 + 1 ) , R4) ) ) , D9 , R4) ) = ( ( SDSub_Add_Data (( ( DigA_SDSub (( SD2SDSub ( DecSD (R5 , ( R2 + 1 ) , R4) ) ) , D9) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (R6 , ( R2 + 1 ) , R4) ) ) , D9) ) ) , R4) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (( SD2SDSub ( DecSD (R5 , ( R2 + 1 ) , R4) ) ) , ( D9 -' 1 )) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (R6 , ( R2 + 1 ) , R4) ) ) , ( D9 -' 1 )) ) ) , R4) ) ) by L117 , L116 , L76;
L119:
now
per cases ;
suppose L120: D9 = 1;

L121: ( DigA_SDSub (( SD2SDSub ( DecSD (D8 , R2 , R4) ) ) , ( D9 -' 1 )) ) = ( DigA_SDSub (( SD2SDSub ( DecSD (D8 , R2 , R4) ) ) , ( 0 )) ) by L120 , XREAL_1:232
.= ( 0 ) by RADIX_3:def 5;
L122: ( DigA_SDSub (( SD2SDSub ( DecSD (D7 , R2 , R4) ) ) , ( D9 -' 1 )) ) = ( DigA_SDSub (( SD2SDSub ( DecSD (D7 , R2 , R4) ) ) , ( 0 )) ) by L120 , XREAL_1:232
.= ( 0 ) by RADIX_3:def 5;
L123: ( DigA_SDSub (( SD2SDSub ( DecSD (R6 , ( R2 + 1 ) , R4) ) ) , ( D9 -' 1 )) ) = ( DigA_SDSub (( SD2SDSub ( DecSD (R6 , ( R2 + 1 ) , R4) ) ) , ( 0 )) ) by L120 , XREAL_1:232
.= ( 0 ) by RADIX_3:def 5;
L124: ( DigA_SDSub (( SD2SDSub ( DecSD (R5 , ( R2 + 1 ) , R4) ) ) , ( D9 -' 1 )) ) = ( DigA_SDSub (( SD2SDSub ( DecSD (R5 , ( R2 + 1 ) , R4) ) ) , ( 0 )) ) by L120 , XREAL_1:232
.= ( 0 ) by RADIX_3:def 5;
L125: (( DigA_SDSub (( SD2SDSub ( DecSD (R5 , ( R2 + 1 ) , R4) ) ) , D9) ) = ( DigA_SDSub (( SD2SDSub ( DecSD (D7 , R2 , R4) ) ) , D9) ) & ( DigA_SDSub (( SD2SDSub ( DecSD (R6 , ( R2 + 1 ) , R4) ) ) , D9) ) = ( DigA_SDSub (( SD2SDSub ( DecSD (D8 , R2 , R4) ) ) , D9) )) by L110 , L117 , RADIX_3:20;
thus L126: thesis by L125 , L114 , L117 , L118 , L124 , L123 , L122 , L121 , L76;
end;
suppose L127: D9 <> 1;

L128: D9 >= 1 by L110 , FINSEQ_1:1;
L129: 1 < D9 by L128 , L127 , XXREAL_0:1;
L130: ( ( 0 ) + 1 ) <= ( D9 -' 1 ) by L129 , INT_1:7 , JORDAN12:1;
L131: D9 <= R2 by L110 , FINSEQ_1:1;
L132: ( D9 -' 1 ) <= R2 by L131 , NAT_D:44;
L133: ( D9 -' 1 ) in ( Seg R2 ) by L132 , L130 , FINSEQ_1:1;
L134: ( SDSubAddDigit (( SD2SDSub ( DecSD (R5 , ( R2 + 1 ) , R4) ) ) , ( SD2SDSub ( DecSD (R6 , ( R2 + 1 ) , R4) ) ) , D9 , R4) ) = ( ( SDSub_Add_Data (( ( DigA_SDSub (( SD2SDSub ( DecSD (D7 , R2 , R4) ) ) , D9) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (R6 , ( R2 + 1 ) , R4) ) ) , D9) ) ) , R4) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (( SD2SDSub ( DecSD (R5 , ( R2 + 1 ) , R4) ) ) , ( D9 -' 1 )) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (R6 , ( R2 + 1 ) , R4) ) ) , ( D9 -' 1 )) ) ) , R4) ) ) by L110 , L117 , L118 , RADIX_3:20
.= ( ( SDSub_Add_Data (( ( DigA_SDSub (( SD2SDSub ( DecSD (D7 , R2 , R4) ) ) , D9) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D8 , R2 , R4) ) ) , D9) ) ) , R4) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (( SD2SDSub ( DecSD (R5 , ( R2 + 1 ) , R4) ) ) , ( D9 -' 1 )) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (R6 , ( R2 + 1 ) , R4) ) ) , ( D9 -' 1 )) ) ) , R4) ) ) by L110 , L117 , RADIX_3:20
.= ( ( SDSub_Add_Data (( ( DigA_SDSub (( SD2SDSub ( DecSD (D7 , R2 , R4) ) ) , D9) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D8 , R2 , R4) ) ) , D9) ) ) , R4) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (( SD2SDSub ( DecSD (D7 , R2 , R4) ) ) , ( D9 -' 1 )) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (R6 , ( R2 + 1 ) , R4) ) ) , ( D9 -' 1 )) ) ) , R4) ) ) by L117 , L133 , RADIX_3:20
.= ( ( SDSub_Add_Data (( ( DigA_SDSub (( SD2SDSub ( DecSD (D7 , R2 , R4) ) ) , D9) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D8 , R2 , R4) ) ) , D9) ) ) , R4) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (( SD2SDSub ( DecSD (D7 , R2 , R4) ) ) , ( D9 -' 1 )) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D8 , R2 , R4) ) ) , ( D9 -' 1 )) ) ) , R4) ) ) by L117 , L133 , RADIX_3:20
.= ( SDSubAddDigit (( SD2SDSub ( DecSD (D7 , R2 , R4) ) ) , ( SD2SDSub ( DecSD (D8 , R2 , R4) ) ) , D9 , R4) ) by L114 , L117 , L76;
thus L135: thesis by L134;
end;
end;
thus L137: thesis by L119;
end;
theorem
L138: (for R2 being Nat holds (R2 >= 1 implies (for R4 being Nat holds (for R5 being Nat holds (for R6 being Nat holds ((R4 >= 3 & R5 is_represented_by R2 , R4 & R6 is_represented_by R2 , R4) implies ( R5 + R6 ) = ( SDSub2IntOut ( ( SD2SDSub ( DecSD (R5 , R2 , R4) ) ) '+' ( SD2SDSub ( DecSD (R6 , R2 , R4) ) ) ) )))))))
proof
defpred S2[ Nat ] means (for B21 , B22 , B23 being Nat holds ((B21 >= 3 & B22 is_represented_by $1 , B21 & B23 is_represented_by $1 , B21) implies ( B22 + B23 ) = ( SDSub2IntOut ( ( SD2SDSub ( DecSD (B22 , $1 , B21) ) ) '+' ( SD2SDSub ( DecSD (B23 , $1 , B21) ) ) ) )));
let R2 being Nat;
assume L139: R2 >= 1;
L140: (for B24 being Nat holds ((B24 >= 1 & S2[ B24 ]) implies S2[ ( B24 + 1 ) ]))
proof
let C27 being Nat;
assume that
L141: C27 >= 1
and
L142: S2[ C27 ];
let C28 , C29 , C30 being Nat;
assume that
L143: C28 >= 3
and
L144: C29 is_represented_by ( C27 + 1 ) , C28
and
L145: C30 is_represented_by ( C27 + 1 ) , C28;
reconsider D10 = C28 , D11 = C29 , D12 = C30 as (Element of ( NAT )) by ORDINAL1:def 12;
L146: ( ( C27 + 1 ) + 1 ) in ( Seg ( ( C27 + 1 ) + 1 ) ) by FINSEQ_1:3;
L147: ( DigA_SDSub (( SD2SDSub ( DecSD (D11 , ( C27 + 1 ) , D10) ) ) , ( ( C27 + 1 ) + 1 )) ) = ( SD2SDSubDigitS (( DecSD (D11 , ( C27 + 1 ) , D10) ) , ( ( C27 + 1 ) + 1 ) , D10) ) by L146 , RADIX_3:def 8
.= ( SD2SDSubDigit (( DecSD (D11 , ( C27 + 1 ) , D10) ) , ( ( C27 + 1 ) + 1 ) , D10) ) by L143 , L146 , RADIX_3:def 7 , XXREAL_0:2
.= ( SDSub_Add_Carry (( DigA (( DecSD (D11 , ( C27 + 1 ) , D10) ) , ( ( ( C27 + 1 ) + 1 ) -' 1 )) ) , D10) ) by RADIX_3:def 6
.= ( SDSub_Add_Carry (( DigA (( DecSD (D11 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) , D10) ) by NAT_D:34;
L148: ( DigA_SDSub (( SD2SDSub ( DecSD (D12 , ( C27 + 1 ) , D10) ) ) , ( ( C27 + 1 ) + 1 )) ) = ( SD2SDSubDigitS (( DecSD (D12 , ( C27 + 1 ) , D10) ) , ( ( C27 + 1 ) + 1 ) , D10) ) by L146 , RADIX_3:def 8
.= ( SD2SDSubDigit (( DecSD (D12 , ( C27 + 1 ) , D10) ) , ( ( C27 + 1 ) + 1 ) , D10) ) by L143 , L146 , RADIX_3:def 7 , XXREAL_0:2
.= ( SDSub_Add_Carry (( DigA (( DecSD (D12 , ( C27 + 1 ) , D10) ) , ( ( ( C27 + 1 ) + 1 ) -' 1 )) ) , D10) ) by RADIX_3:def 6
.= ( SDSub_Add_Carry (( DigA (( DecSD (D12 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) , D10) ) by NAT_D:34;
set D13 = ( D12 mod ( ( Radix D10 ) |^ C27 ) );
set D14 = ( D11 mod ( ( Radix D10 ) |^ C27 ) );
set D15 = ( ( SD2SDSub ( DecSD (D14 , C27 , D10) ) ) '+' ( SD2SDSub ( DecSD (D13 , C27 , D10) ) ) );
deffunc H2(Nat) = ( SDSub2INTDigit (D15 , $1 , D10) );
consider C31 being (FinSequence of ( INT )) such that L149: ( len C31 ) = C27 and L150: (for B25 being Nat holds (B25 in ( dom C31 ) implies ( C31 . B25 ) = H2(B25))) from FINSEQ_2:sch 1;
L151: ( len ( SDSub2INT D15 ) ) = ( C27 + 1 ) by CARD_1:def 7;
L152: ( dom C31 ) = ( Seg C27 ) by L149 , FINSEQ_1:def 3;
L153: (for B26 being Nat holds ((1 <= B26 & B26 <= ( len ( SDSub2INT D15 ) )) implies ( ( SDSub2INT D15 ) . B26 ) = ( ( C31 ^ <* ( SDSub2INTDigit (D15 , ( C27 + 1 ) , D10) ) *> ) . B26 )))
proof
let C32 being Nat;
assume L154: (1 <= C32 & C32 <= ( len ( SDSub2INT D15 ) ));
L155: C32 in ( Seg ( C27 + 1 ) ) by L154 , L151 , FINSEQ_1:1;
L156: C32 in ( dom ( SDSub2INT D15 ) ) by L155 , L151 , FINSEQ_1:def 3;
L157:
now
per cases  by L155 , FINSEQ_2:7;
suppose L158: C32 in ( Seg C27 );

L159: C32 in ( dom C31 ) by L158 , L149 , FINSEQ_1:def 3;
L160: ( ( C31 ^ <* ( SDSub2INTDigit (D15 , ( C27 + 1 ) , D10) ) *> ) . C32 ) = ( C31 . C32 ) by L159 , FINSEQ_1:def 7
.= ( SDSub2INTDigit (D15 , C32 , D10) ) by L150 , L152 , L158
.= ( ( SDSub2INT D15 ) /. C32 ) by L155 , RADIX_3:def 11
.= ( ( SDSub2INT D15 ) . C32 ) by L156 , PARTFUN1:def 6;
thus L161: thesis by L160;
end;
suppose L162: C32 = ( C27 + 1 );

L163: C32 in ( dom ( SDSub2INT D15 ) ) by L151 , L155 , FINSEQ_1:def 3;
L164: ( ( C31 ^ <* ( SDSub2INTDigit (D15 , ( C27 + 1 ) , D10) ) *> ) . C32 ) = ( SDSub2INTDigit (D15 , ( C27 + 1 ) , D10) ) by L149 , L162 , FINSEQ_1:42
.= ( ( SDSub2INT D15 ) /. ( C27 + 1 ) ) by L155 , L162 , RADIX_3:def 11
.= ( ( SDSub2INT D15 ) . C32 ) by L162 , L163 , PARTFUN1:def 6;
thus L165: thesis by L164;
end;
end;
thus L167: thesis by L157;
end;
L168: ( len ( C31 ^ <* ( SDSub2INTDigit (D15 , ( C27 + 1 ) , D10) ) *> ) ) = ( C27 + 1 ) by L149 , FINSEQ_2:16;
L169: ( SDSub2INT D15 ) = ( C31 ^ <* ( SDSub2INTDigit (D15 , ( C27 + 1 ) , D10) ) *> ) by L168 , L151 , L153 , FINSEQ_1:14;
L170: ( Radix D10 ) > ( 0 ) by POWER:34;
L171: D13 < ( ( Radix D10 ) |^ C27 ) by L170 , NAT_D:1 , PREPOWER:6;
L172: D13 is_represented_by C27 , D10 by L171 , RADIX_1:def 12;
set D16 = ( ( DigA_SDSub (( SD2SDSub ( DecSD (D11 , ( C27 + 1 ) , D10) ) ) , ( C27 + 1 )) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D12 , ( C27 + 1 ) , D10) ) ) , ( C27 + 1 )) ) );
set D17 = ( ( SD2SDSub ( DecSD (D11 , ( C27 + 1 ) , D10) ) ) '+' ( SD2SDSub ( DecSD (D12 , ( C27 + 1 ) , D10) ) ) );
deffunc H3(Nat) = ( SDSub2INTDigit (D17 , $1 , D10) );
consider C33 being (FinSequence of ( INT )) such that L173: ( len C33 ) = C27 and L174: (for B27 being Nat holds (B27 in ( dom C33 ) implies ( C33 . B27 ) = H3(B27))) from FINSEQ_2:sch 1;
consider C34 being (FinSequence of ( INT )) such that L175: ( len C34 ) = ( C27 + 1 ) and L176: (for B28 being Nat holds (B28 in ( dom C34 ) implies ( C34 . B28 ) = H3(B28))) from FINSEQ_2:sch 1;
L177: ( dom C33 ) = ( Seg C27 ) by L173 , FINSEQ_1:def 3;
L178: (for B29 being Nat holds ((1 <= B29 & B29 <= ( len C31 )) implies ( C31 . B29 ) = ( C33 . B29 )))
proof
let C35 being Nat;
assume that
L179: 1 <= C35
and
L180: C35 <= ( len C31 );
L181: C35 <= ( C27 + 1 ) by L149 , L180 , NAT_1:12;
L182: C35 in ( Seg ( C27 + 1 ) ) by L181 , L179 , FINSEQ_1:1;
L183: C35 <= ( ( C27 + 1 ) + 1 ) by L181 , NAT_1:12;
L184: C35 in ( Seg ( ( C27 + 1 ) + 1 ) ) by L183 , L179 , FINSEQ_1:1;
L185: C35 in ( Seg C27 ) by L149 , L179 , L180 , FINSEQ_1:1;
L186: ( C33 . C35 ) = ( SDSub2INTDigit (D17 , C35 , D10) ) by L185 , L174 , L177
.= ( ( ( Radix D10 ) |^ ( C35 -' 1 ) ) * ( DigB_SDSub (D17 , C35) ) ) by RADIX_3:def 10
.= ( ( ( Radix D10 ) |^ ( C35 -' 1 ) ) * ( DigA_SDSub (D17 , C35) ) ) by RADIX_3:def 9
.= ( ( ( Radix D10 ) |^ ( C35 -' 1 ) ) * ( SDSubAddDigit (( SD2SDSub ( DecSD (D11 , ( C27 + 1 ) , D10) ) ) , ( SD2SDSub ( DecSD (D12 , ( C27 + 1 ) , D10) ) ) , C35 , D10) ) ) by L184 , L91
.= ( ( ( Radix D10 ) |^ ( C35 -' 1 ) ) * ( SDSubAddDigit (( SD2SDSub ( DecSD (D14 , C27 , D10) ) ) , ( SD2SDSub ( DecSD (D13 , C27 , D10) ) ) , C35 , D10) ) ) by L143 , L185 , L109 , XXREAL_0:2
.= ( ( ( Radix D10 ) |^ ( C35 -' 1 ) ) * ( DigA_SDSub (D15 , C35) ) ) by L182 , L91
.= ( ( ( Radix D10 ) |^ ( C35 -' 1 ) ) * ( DigB_SDSub (D15 , C35) ) ) by RADIX_3:def 9
.= ( SDSub2INTDigit (D15 , C35 , D10) ) by RADIX_3:def 10
.= ( C31 . C35 ) by L150 , L152 , L185;
thus L187: thesis by L186;
end;
L188: C33 = C31 by L178 , L173 , L149 , FINSEQ_1:14;
set D18 = ( ( Radix D10 ) |^ ( C27 + 1 ) );
set D19 = ( ( DigA_SDSub (( SD2SDSub ( DecSD (D11 , ( C27 + 1 ) , D10) ) ) , ( ( C27 + 1 ) + 1 )) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D12 , ( C27 + 1 ) , D10) ) ) , ( ( C27 + 1 ) + 1 )) ) );
set D20 = ( D18 * ( SDSub_Add_Data (D19 , D10) ) );
set D21 = ( ( Radix D10 ) |^ C27 );
reconsider D22 = ( D21 * ( DigA_SDSub (( SD2SDSub ( DecSD (D11 , ( C27 + 1 ) , D10) ) ) , ( C27 + 1 )) ) ) , D23 = ( D21 * ( DigA_SDSub (( SD2SDSub ( DecSD (D12 , ( C27 + 1 ) , D10) ) ) , ( C27 + 1 )) ) ) , D24 = ( D18 * ( SDSub_Add_Carry (( DigA (( DecSD (D11 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) , D10) ) ) , D25 = ( D18 * ( SDSub_Add_Carry (( DigA (( DecSD (D12 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) , D10) ) ) , D26 = ( D21 * ( SDSub_Add_Carry (( DigA (( DecSD (D11 , ( C27 + 1 ) , D10) ) , C27) ) , D10) ) ) , D27 = ( D21 * ( SDSub_Add_Carry (( DigA (( DecSD (D12 , ( C27 + 1 ) , D10) ) , C27) ) , D10) ) ) , D28 = ( D21 * ( SDSub_Add_Carry (( DigA (( DecSD (D11 , C27 , D10) ) , C27) ) , D10) ) ) , D29 = ( D21 * ( SDSub_Add_Carry (( DigA (( DecSD (D12 , C27 , D10) ) , C27) ) , D10) ) ) as Integer;
set D30 = ( ( DigA_SDSub (( SD2SDSub ( DecSD (D11 , ( C27 + 1 ) , D10) ) ) , C27) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D12 , ( C27 + 1 ) , D10) ) ) , C27) ) );
set D31 = ( D21 * ( SDSub_Add_Carry (D30 , D10) ) );
L189: ( SDSub2INTDigit (D17 , ( ( C27 + 1 ) + 1 ) , D10) ) = ( ( ( Radix D10 ) |^ ( ( ( C27 + 1 ) + 1 ) -' 1 ) ) * ( DigB_SDSub (D17 , ( ( C27 + 1 ) + 1 )) ) ) by RADIX_3:def 10
.= ( ( ( Radix D10 ) |^ ( ( ( C27 + 1 ) + 1 ) -' 1 ) ) * ( DigA_SDSub (D17 , ( ( C27 + 1 ) + 1 )) ) ) by RADIX_3:def 9
.= ( ( ( Radix D10 ) |^ ( C27 + 1 ) ) * ( DigA_SDSub (D17 , ( ( C27 + 1 ) + 1 )) ) ) by NAT_D:34
.= ( D18 * ( SDSubAddDigit (( SD2SDSub ( DecSD (D11 , ( C27 + 1 ) , D10) ) ) , ( SD2SDSub ( DecSD (D12 , ( C27 + 1 ) , D10) ) ) , ( ( C27 + 1 ) + 1 ) , D10) ) ) by L146 , L91
.= ( D18 * ( ( SDSub_Add_Data (D19 , D10) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (( SD2SDSub ( DecSD (D11 , ( C27 + 1 ) , D10) ) ) , ( ( ( C27 + 1 ) + 1 ) -' 1 )) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D12 , ( C27 + 1 ) , D10) ) ) , ( ( ( C27 + 1 ) + 1 ) -' 1 )) ) ) , D10) ) ) ) by L143 , L146 , L76 , XXREAL_0:2
.= ( D18 * ( ( SDSub_Add_Data (D19 , D10) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (( SD2SDSub ( DecSD (D11 , ( C27 + 1 ) , D10) ) ) , ( C27 + 1 )) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D12 , ( C27 + 1 ) , D10) ) ) , ( ( ( C27 + 1 ) + 1 ) -' 1 )) ) ) , D10) ) ) ) by NAT_D:34
.= ( D18 * ( ( ( SDSub_Add_Data (D19 , D10) ) + ( SDSub_Add_Carry (D16 , D10) ) ) + ( 0 ) ) ) by NAT_D:34
.= ( ( D18 * ( SDSub_Add_Data (D19 , D10) ) ) + ( D18 * ( SDSub_Add_Carry (D16 , D10) ) ) );
L190: D20 = ( D18 * ( ( ( DigA_SDSub (( SD2SDSub ( DecSD (D11 , ( C27 + 1 ) , D10) ) ) , ( ( C27 + 1 ) + 1 )) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D12 , ( C27 + 1 ) , D10) ) ) , ( ( C27 + 1 ) + 1 )) ) ) - ( ( Radix D10 ) * ( SDSub_Add_Carry (( ( DigA_SDSub (( SD2SDSub ( DecSD (D11 , ( C27 + 1 ) , D10) ) ) , ( ( C27 + 1 ) + 1 )) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D12 , ( C27 + 1 ) , D10) ) ) , ( ( C27 + 1 ) + 1 )) ) ) , D10) ) ) ) ) by RADIX_3:def 4;
L191: D20 = ( D18 * ( ( ( DigA_SDSub (( SD2SDSub ( DecSD (D11 , ( C27 + 1 ) , D10) ) ) , ( ( C27 + 1 ) + 1 )) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D12 , ( C27 + 1 ) , D10) ) ) , ( ( C27 + 1 ) + 1 )) ) ) - ( ( Radix D10 ) * ( 0 ) ) ) ) by L190 , L143 , L147 , L148 , L31
.= ( D18 * ( ( SDSub_Add_Carry (( DigA (( DecSD (D11 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) , D10) ) + ( SDSub_Add_Carry (( DigA (( DecSD (D12 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) , D10) ) ) ) by L147 , L148;
L192: ( D21 * ( DigA (( DecSD (D11 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) ) = ( D21 * ( D11 div ( ( Radix D10 ) |^ C27 ) ) ) by L144 , RADIX_1:24;
L193: D14 < ( ( Radix D10 ) |^ C27 ) by L170 , NAT_D:1 , PREPOWER:6;
L194: D14 is_represented_by C27 , D10 by L193 , RADIX_1:def 12;
L195: ( D14 + D13 ) = ( SDSub2IntOut D15 ) by L194 , L142 , L143 , L172
.= ( Sum ( SDSub2INT D15 ) ) by RADIX_3:def 12;
L196: ( ( D14 + D13 ) + ( 0 ) ) = ( ( Sum C31 ) + ( SDSub2INTDigit (D15 , ( C27 + 1 ) , D10) ) ) by L195 , L169 , RVSUM_1:74;
set D32 = ( SDSub_Add_Carry (( DigA (( DecSD (D12 , C27 , D10) ) , C27) ) , D10) );
set D33 = ( SDSub_Add_Carry (( DigA (( DecSD (D11 , C27 , D10) ) , C27) ) , D10) );
L197: ( SDSub_Add_Data (( D33 + D32 ) , D10) ) = ( ( D33 + D32 ) - ( ( Radix D10 ) * ( SDSub_Add_Carry (( D33 + D32 ) , D10) ) ) ) by RADIX_3:def 4
.= ( ( D33 + D32 ) - ( ( Radix D10 ) * ( 0 ) ) ) by L143 , L31;
L198: C27 <> ( 0 ) by L141;
L199: C27 in ( Seg C27 ) by L198 , FINSEQ_1:3;
L200: ( dom C34 ) = ( Seg ( C27 + 1 ) ) by L175 , FINSEQ_1:def 3;
L201: (for B30 being Nat holds ((1 <= B30 & B30 <= ( len C34 )) implies ( C34 . B30 ) = ( ( C33 ^ <* ( SDSub2INTDigit (D17 , ( C27 + 1 ) , D10) ) *> ) . B30 )))
proof
let C36 being Nat;
assume L202: (1 <= C36 & C36 <= ( len C34 ));
L203: C36 in ( Seg ( C27 + 1 ) ) by L202 , L175 , FINSEQ_1:1;
L204:
now
per cases  by L203 , FINSEQ_2:7;
suppose L205: C36 in ( Seg C27 );

L206: C36 in ( dom C33 ) by L205 , L173 , FINSEQ_1:def 3;
L207: ( ( C33 ^ <* ( SDSub2INTDigit (D17 , ( C27 + 1 ) , D10) ) *> ) . C36 ) = ( C33 . C36 ) by L206 , FINSEQ_1:def 7
.= ( SDSub2INTDigit (D17 , C36 , D10) ) by L174 , L177 , L205
.= ( C34 . C36 ) by L176 , L200 , L203;
thus L208: thesis by L207;
end;
suppose L209: C36 = ( C27 + 1 );

L210: ( ( C33 ^ <* ( SDSub2INTDigit (D17 , ( C27 + 1 ) , D10) ) *> ) . C36 ) = ( SDSub2INTDigit (D17 , ( C27 + 1 ) , D10) ) by L209 , L173 , FINSEQ_1:42
.= ( C34 . C36 ) by L176 , L200 , L203 , L209;
thus L211: thesis by L210;
end;
end;
thus L213: thesis by L204;
end;
L214: ( len ( SDSub2INT D17 ) ) = ( ( C27 + 1 ) + 1 ) by CARD_1:def 7;
L215: (for B31 being Nat holds ((1 <= B31 & B31 <= ( len ( SDSub2INT D17 ) )) implies ( ( SDSub2INT D17 ) . B31 ) = ( ( C34 ^ <* ( SDSub2INTDigit (D17 , ( ( C27 + 1 ) + 1 ) , D10) ) *> ) . B31 )))
proof
let C37 being Nat;
assume L216: (1 <= C37 & C37 <= ( len ( SDSub2INT D17 ) ));
L217: C37 in ( Seg ( ( C27 + 1 ) + 1 ) ) by L216 , L214 , FINSEQ_1:1;
L218: C37 in ( dom ( SDSub2INT D17 ) ) by L217 , L214 , FINSEQ_1:def 3;
L219:
now
per cases  by L217 , FINSEQ_2:7;
suppose L220: C37 in ( Seg ( C27 + 1 ) );

L221: C37 in ( dom C34 ) by L220 , L175 , FINSEQ_1:def 3;
L222: ( ( C34 ^ <* ( SDSub2INTDigit (D17 , ( ( C27 + 1 ) + 1 ) , D10) ) *> ) . C37 ) = ( C34 . C37 ) by L221 , FINSEQ_1:def 7
.= ( SDSub2INTDigit (D17 , C37 , D10) ) by L176 , L200 , L220
.= ( ( SDSub2INT D17 ) /. C37 ) by L217 , RADIX_3:def 11
.= ( ( SDSub2INT D17 ) . C37 ) by L218 , PARTFUN1:def 6;
thus L223: thesis by L222;
end;
suppose L224: C37 = ( ( C27 + 1 ) + 1 );

L225: C37 in ( dom ( SDSub2INT D17 ) ) by L214 , L217 , FINSEQ_1:def 3;
L226: ( ( C34 ^ <* ( SDSub2INTDigit (D17 , ( ( C27 + 1 ) + 1 ) , D10) ) *> ) . C37 ) = ( SDSub2INTDigit (D17 , ( ( C27 + 1 ) + 1 ) , D10) ) by L175 , L224 , FINSEQ_1:42
.= ( ( SDSub2INT D17 ) /. ( ( C27 + 1 ) + 1 ) ) by L217 , L224 , RADIX_3:def 11
.= ( ( SDSub2INT D17 ) . C37 ) by L224 , L225 , PARTFUN1:def 6;
thus L227: thesis by L226;
end;
end;
thus L229: thesis by L219;
end;
L230: ( len ( C33 ^ <* ( SDSub2INTDigit (D17 , ( C27 + 1 ) , D10) ) *> ) ) = ( C27 + 1 ) by L173 , FINSEQ_2:16;
L231: C34 = ( C33 ^ <* ( SDSub2INTDigit (D17 , ( C27 + 1 ) , D10) ) *> ) by L230 , L175 , L201 , FINSEQ_1:14;
L232: ( len ( C34 ^ <* ( SDSub2INTDigit (D17 , ( ( C27 + 1 ) + 1 ) , D10) ) *> ) ) = ( ( C27 + 1 ) + 1 ) by L175 , FINSEQ_2:16;
L233: ( SDSub2INT D17 ) = ( C34 ^ <* ( SDSub2INTDigit (D17 , ( ( C27 + 1 ) + 1 ) , D10) ) *> ) by L232 , L214 , L215 , FINSEQ_1:14;
L234: ( Sum ( SDSub2INT D17 ) ) = ( ( Sum C34 ) + ( SDSub2INTDigit (D17 , ( ( C27 + 1 ) + 1 ) , D10) ) ) by L233 , RVSUM_1:74
.= ( ( ( Sum C31 ) + ( SDSub2INTDigit (D17 , ( C27 + 1 ) , D10) ) ) + ( SDSub2INTDigit (D17 , ( ( C27 + 1 ) + 1 ) , D10) ) ) by L231 , L188 , RVSUM_1:74;
L235: ( C27 + 1 ) in ( Seg ( C27 + 1 ) ) by FINSEQ_1:3;
L236: ( C27 + 1 ) in ( Seg ( ( C27 + 1 ) + 1 ) ) by L235 , FINSEQ_2:8;
L237: ( SDSub2INTDigit (D17 , ( C27 + 1 ) , D10) ) = ( ( ( Radix D10 ) |^ ( ( C27 + 1 ) -' 1 ) ) * ( DigB_SDSub (D17 , ( C27 + 1 )) ) ) by RADIX_3:def 10
.= ( ( ( Radix D10 ) |^ ( ( C27 + 1 ) -' 1 ) ) * ( DigA_SDSub (D17 , ( C27 + 1 )) ) ) by RADIX_3:def 9
.= ( D21 * ( DigA_SDSub (D17 , ( C27 + 1 )) ) ) by NAT_D:34
.= ( D21 * ( SDSubAddDigit (( SD2SDSub ( DecSD (D11 , ( C27 + 1 ) , D10) ) ) , ( SD2SDSub ( DecSD (D12 , ( C27 + 1 ) , D10) ) ) , ( C27 + 1 ) , D10) ) ) by L236 , L91
.= ( D21 * ( ( SDSub_Add_Data (D16 , D10) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (( SD2SDSub ( DecSD (D11 , ( C27 + 1 ) , D10) ) ) , ( ( C27 + 1 ) -' 1 )) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D12 , ( C27 + 1 ) , D10) ) ) , ( ( C27 + 1 ) -' 1 )) ) ) , D10) ) ) ) by L143 , L236 , L76 , XXREAL_0:2
.= ( D21 * ( ( SDSub_Add_Data (D16 , D10) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (( SD2SDSub ( DecSD (D11 , ( C27 + 1 ) , D10) ) ) , C27) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D12 , ( C27 + 1 ) , D10) ) ) , ( ( C27 + 1 ) -' 1 )) ) ) , D10) ) ) ) by NAT_D:34
.= ( D21 * ( ( ( SDSub_Add_Data (D16 , D10) ) + ( SDSub_Add_Carry (D30 , D10) ) ) + ( 0 ) ) ) by NAT_D:34
.= ( ( D21 * ( SDSub_Add_Data (D16 , D10) ) ) + ( D21 * ( SDSub_Add_Carry (D30 , D10) ) ) )
.= ( ( D21 * ( D16 - ( ( Radix D10 ) * ( SDSub_Add_Carry (D16 , D10) ) ) ) ) + ( D21 * ( SDSub_Add_Carry (D30 , D10) ) ) ) by RADIX_3:def 4
.= ( ( ( D21 * D16 ) - ( ( D21 * ( Radix D10 ) ) * ( SDSub_Add_Carry (D16 , D10) ) ) ) + ( D21 * ( SDSub_Add_Carry (D30 , D10) ) ) )
.= ( ( ( D21 * D16 ) - ( ( ( Radix D10 ) |^ ( C27 + 1 ) ) * ( SDSub_Add_Carry (D16 , D10) ) ) ) + ( D21 * ( SDSub_Add_Carry (D30 , D10) ) ) ) by NEWTON:6
.= ( ( ( D21 * D16 ) + ( - ( ( ( Radix D10 ) |^ ( C27 + 1 ) ) * ( SDSub_Add_Carry (D16 , D10) ) ) ) ) + ( D21 * ( SDSub_Add_Carry (D30 , D10) ) ) );
L238: ( Sum ( SDSub2INT D17 ) ) = ( ( ( ( D14 + D13 ) + ( D21 * D16 ) ) + ( ( - ( SDSub2INTDigit (D15 , ( C27 + 1 ) , D10) ) ) + D31 ) ) + D20 ) by L237 , L234 , L196 , L189;
L239: ( SDSub2INTDigit (D15 , ( C27 + 1 ) , D10) ) = ( ( ( Radix D10 ) |^ ( ( C27 + 1 ) -' 1 ) ) * ( DigB_SDSub (D15 , ( C27 + 1 )) ) ) by RADIX_3:def 10
.= ( ( ( Radix D10 ) |^ ( ( C27 + 1 ) -' 1 ) ) * ( DigA_SDSub (D15 , ( C27 + 1 )) ) ) by RADIX_3:def 9
.= ( D21 * ( DigA_SDSub (D15 , ( C27 + 1 )) ) ) by NAT_D:34
.= ( D21 * ( SDSubAddDigit (( SD2SDSub ( DecSD (D14 , C27 , D10) ) ) , ( SD2SDSub ( DecSD (D13 , C27 , D10) ) ) , ( C27 + 1 ) , D10) ) ) by L235 , L91
.= ( D21 * ( ( SDSub_Add_Data (( ( DigA_SDSub (( SD2SDSub ( DecSD (D14 , C27 , D10) ) ) , ( C27 + 1 )) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D13 , C27 , D10) ) ) , ( C27 + 1 )) ) ) , D10) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (( SD2SDSub ( DecSD (D14 , C27 , D10) ) ) , ( ( C27 + 1 ) -' 1 )) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D13 , C27 , D10) ) ) , ( ( C27 + 1 ) -' 1 )) ) ) , D10) ) ) ) by L235 , L143 , L76 , XXREAL_0:2
.= ( D21 * ( ( SDSub_Add_Data (( ( DigA_SDSub (( SD2SDSub ( DecSD (D14 , C27 , D10) ) ) , ( C27 + 1 )) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D13 , C27 , D10) ) ) , ( C27 + 1 )) ) ) , D10) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (( SD2SDSub ( DecSD (D14 , C27 , D10) ) ) , C27) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D13 , C27 , D10) ) ) , ( ( C27 + 1 ) -' 1 )) ) ) , D10) ) ) ) by NAT_D:34
.= ( D21 * ( ( SDSub_Add_Data (( ( DigA_SDSub (( SD2SDSub ( DecSD (D14 , C27 , D10) ) ) , ( C27 + 1 )) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D13 , C27 , D10) ) ) , ( C27 + 1 )) ) ) , D10) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (( SD2SDSub ( DecSD (D14 , C27 , D10) ) ) , C27) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D13 , C27 , D10) ) ) , C27) ) ) , D10) ) ) ) by NAT_D:34
.= ( D21 * ( ( SDSub_Add_Data (( ( SDSub_Add_Carry (( DigA (( DecSD (D11 , C27 , D10) ) , C27) ) , D10) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D13 , C27 , D10) ) ) , ( C27 + 1 )) ) ) , D10) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (( SD2SDSub ( DecSD (D14 , C27 , D10) ) ) , C27) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D13 , C27 , D10) ) ) , C27) ) ) , D10) ) ) ) by L141 , L143 , L144 , L55
.= ( D21 * ( ( SDSub_Add_Data (( ( SDSub_Add_Carry (( DigA (( DecSD (D11 , C27 , D10) ) , C27) ) , D10) ) + ( SDSub_Add_Carry (( DigA (( DecSD (D12 , C27 , D10) ) , C27) ) , D10) ) ) , D10) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (( SD2SDSub ( DecSD (D14 , C27 , D10) ) ) , C27) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D13 , C27 , D10) ) ) , C27) ) ) , D10) ) ) ) by L141 , L143 , L145 , L55
.= ( D21 * ( ( SDSub_Add_Data (( ( SDSub_Add_Carry (( DigA (( DecSD (D11 , C27 , D10) ) , C27) ) , D10) ) + ( SDSub_Add_Carry (( DigA (( DecSD (D12 , C27 , D10) ) , C27) ) , D10) ) ) , D10) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (( SD2SDSub ( DecSD (D11 , ( C27 + 1 ) , D10) ) ) , C27) ) + ( DigA_SDSub (( SD2SDSub ( DecSD (D13 , C27 , D10) ) ) , C27) ) ) , D10) ) ) ) by L199 , L143 , RADIX_3:20 , XXREAL_0:2
.= ( D21 * ( ( SDSub_Add_Data (( ( SDSub_Add_Carry (( DigA (( DecSD (D11 , C27 , D10) ) , C27) ) , D10) ) + ( SDSub_Add_Carry (( DigA (( DecSD (D12 , C27 , D10) ) , C27) ) , D10) ) ) , D10) ) + ( SDSub_Add_Carry (D30 , D10) ) ) ) by L199 , L143 , RADIX_3:20 , XXREAL_0:2
.= ( ( D21 * ( SDSub_Add_Data (( ( SDSub_Add_Carry (( DigA (( DecSD (D11 , C27 , D10) ) , C27) ) , D10) ) + ( SDSub_Add_Carry (( DigA (( DecSD (D12 , C27 , D10) ) , C27) ) , D10) ) ) , D10) ) ) + ( D21 * ( SDSub_Add_Carry (D30 , D10) ) ) );
L240: ( Sum ( SDSub2INT D17 ) ) = ( ( ( ( ( D14 + D13 ) + D22 ) + D23 ) + ( - ( D28 + D29 ) ) ) + ( D24 + D25 ) ) by L239 , L197 , L238 , L191
.= ( ( ( ( ( D14 + D13 ) + ( ( ( D21 * ( DigA (( DecSD (D11 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) ) - D24 ) + D26 ) ) + D23 ) + ( - ( D28 + D29 ) ) ) + ( D24 + D25 ) ) by L143 , L68 , XXREAL_0:2
.= ( ( ( ( ( ( D14 + D13 ) + ( D21 * ( DigA (( DecSD (D11 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) ) ) + D26 ) + D23 ) + D25 ) - ( D28 + D29 ) )
.= ( ( ( ( ( ( D14 + D13 ) + ( D21 * ( DigA (( DecSD (D11 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) ) ) + D26 ) + ( ( ( D21 * ( DigA (( DecSD (D12 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) ) - D25 ) + D27 ) ) + D25 ) - ( D28 + D29 ) ) by L143 , L68 , XXREAL_0:2
.= ( ( ( ( ( ( ( ( D14 + D13 ) + ( D21 * ( DigA (( DecSD (D11 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) ) ) + D26 ) + ( D21 * ( DigA (( DecSD (D12 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) ) ) + ( - D25 ) ) + D27 ) + D25 ) + ( - ( D28 + D29 ) ) )
.= ( ( ( ( ( ( D14 + D13 ) + ( D21 * ( DigA (( DecSD (D11 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) ) ) + D26 ) + ( D21 * ( DigA (( DecSD (D12 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) ) ) + D27 ) + ( - ( D26 + D29 ) ) ) by L199 , L17
.= ( ( ( ( ( ( D14 + D13 ) + ( D21 * ( DigA (( DecSD (D11 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) ) ) + D26 ) + ( D21 * ( DigA (( DecSD (D12 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) ) ) + D27 ) + ( - ( D26 + D27 ) ) ) by L199 , L17
.= ( ( ( ( D14 + D13 ) + ( D21 * ( DigA (( DecSD (D11 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) ) ) + ( 0 ) ) + ( D21 * ( DigA (( DecSD (D12 , ( C27 + 1 ) , D10) ) , ( C27 + 1 )) ) ) );
L241: D12 = ( ( ( D12 div ( ( Radix D10 ) |^ C27 ) ) * ( ( Radix D10 ) |^ C27 ) ) + ( D12 mod ( ( Radix D10 ) |^ C27 ) ) ) by L170 , NAT_D:2 , PREPOWER:6;
L242: D11 = ( ( ( D11 div ( ( Radix D10 ) |^ C27 ) ) * ( ( Radix D10 ) |^ C27 ) ) + ( D11 mod ( ( Radix D10 ) |^ C27 ) ) ) by L170 , NAT_D:2 , PREPOWER:6;
L243: ( Sum ( SDSub2INT D17 ) ) = ( ( D13 + D11 ) + ( D21 * ( D12 div ( ( Radix D10 ) |^ C27 ) ) ) ) by L242 , L145 , L240 , L192 , RADIX_1:24;
thus L244: thesis by L243 , L241 , RADIX_3:def 12;
end;
L245: S2[ 1 ]
proof
let C38 , C39 , C40 being Nat;
assume that
L246: C38 >= 3
and
L247: C39 is_represented_by 1 , C38
and
L248: C40 is_represented_by 1 , C38;
reconsider D34 = C38 , D35 = C39 , D36 = C40 as (Element of ( NAT )) by ORDINAL1:def 12;
set D37 = ( SD2SDSub ( DecSD (D35 , 1 , D34) ) );
set D38 = ( SD2SDSub ( DecSD (D36 , 1 , D34) ) );
reconsider D39 = ( SDSub_Add_Carry (( ( DigA_SDSub (D37 , 1) ) + ( DigA_SDSub (D38 , 1) ) ) , D34) ) as Integer;
reconsider D40 = ( DigA_SDSub (( D37 '+' D38 ) , 1) ) as (Element of ( INT )) by INT_1:def 2;
reconsider D41 = ( ( Radix D34 ) * ( SDSub_Add_Carry (D35 , D34) ) ) , D42 = ( ( Radix D34 ) * ( SDSub_Add_Carry (D36 , D34) ) ) as Integer;
reconsider D43 = ( ( Radix D34 ) * ( SDSub_Add_Carry (( ( DigA_SDSub (D37 , 1) ) + ( DigA_SDSub (D38 , 1) ) ) , D34) ) ) as Integer;
L249: 1 in ( Seg ( 1 + 1 ) ) by FINSEQ_1:1;
L250: ( ( SDSub2INT ( D37 '+' D38 ) ) /. 1 ) = ( SDSub2INTDigit (( D37 '+' D38 ) , 1 , D34) ) by L249 , RADIX_3:def 11
.= ( ( ( Radix D34 ) |^ ( 1 -' 1 ) ) * ( DigB_SDSub (( D37 '+' D38 ) , 1) ) ) by RADIX_3:def 10
.= ( ( ( Radix D34 ) |^ ( 0 ) ) * ( DigB_SDSub (( D37 '+' D38 ) , 1) ) ) by XREAL_1:232
.= ( 1 * ( DigB_SDSub (( D37 '+' D38 ) , 1) ) ) by NEWTON:4
.= ( DigA_SDSub (( D37 '+' D38 ) , 1) ) by RADIX_3:def 9;
L251: ( len ( SDSub2INT ( D37 '+' D38 ) ) ) = ( 1 + 1 ) by CARD_1:def 7;
L252: 1 in ( dom ( SDSub2INT ( D37 '+' D38 ) ) ) by L251 , L249 , FINSEQ_1:def 3;
L253: ( ( SDSub2INT ( D37 '+' D38 ) ) . 1 ) = D40 by L252 , L250 , PARTFUN1:def 6;
L254: ( 2 - 1 ) = 1;
L255: ( 2 -' 1 ) = 1 by L254 , XREAL_0:def 2;
L256: ( DigA_SDSub (( D37 '+' D38 ) , 1) ) = ( SDSubAddDigit (D37 , D38 , 1 , D34) ) by L249 , L91
.= ( ( SDSub_Add_Data (( ( DigA_SDSub (D37 , 1) ) + ( DigA_SDSub (D38 , 1) ) ) , D34) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (D37 , ( 1 -' 1 )) ) + ( DigA_SDSub (D38 , ( 1 -' 1 )) ) ) , D34) ) ) by L246 , L249 , L76 , XXREAL_0:2
.= ( ( SDSub_Add_Data (( ( DigA_SDSub (D37 , 1) ) + ( DigA_SDSub (D38 , 1) ) ) , D34) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (D37 , ( 0 )) ) + ( DigA_SDSub (D38 , ( 1 -' 1 )) ) ) , D34) ) ) by XREAL_1:232
.= ( ( SDSub_Add_Data (( ( DigA_SDSub (D37 , 1) ) + ( DigA_SDSub (D38 , 1) ) ) , D34) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (D37 , ( 0 )) ) + ( DigA_SDSub (D38 , ( 0 )) ) ) , D34) ) ) by XREAL_1:232
.= ( ( SDSub_Add_Data (( ( DigA_SDSub (D37 , 1) ) + ( DigA_SDSub (D38 , 1) ) ) , D34) ) + ( SDSub_Add_Carry (( ( 0 ) + ( DigA_SDSub (D38 , ( 0 )) ) ) , D34) ) ) by RADIX_3:def 5
.= ( ( SDSub_Add_Data (( ( DigA_SDSub (D37 , 1) ) + ( DigA_SDSub (D38 , 1) ) ) , D34) ) + ( SDSub_Add_Carry (( ( 0 ) + ( 0 ) ) , D34) ) ) by RADIX_3:def 5
.= ( ( SDSub_Add_Data (( ( DigA_SDSub (D37 , 1) ) + ( DigA_SDSub (D38 , 1) ) ) , D34) ) + ( 0 ) ) by RADIX_3:16
.= ( ( ( DigA_SDSub (D37 , 1) ) + ( DigA_SDSub (D38 , 1) ) ) - ( ( Radix D34 ) * D39 ) ) by RADIX_3:def 4;
L257: D40 = ( ( ( D35 - D41 ) + ( DigA_SDSub (D38 , 1) ) ) - D43 ) by L256 , L246 , L247 , L61 , XXREAL_0:2
.= ( ( ( D35 - D41 ) + ( D36 - D42 ) ) - D43 ) by L246 , L248 , L61 , XXREAL_0:2
.= ( ( ( ( D35 + D36 ) - D41 ) - D42 ) - D43 );
reconsider D44 = ( ( Radix D34 ) * ( DigA_SDSub (( D37 '+' D38 ) , 2) ) ) as (Element of ( INT )) by INT_1:def 2;
L258: 2 in ( Seg ( 1 + 1 ) ) by FINSEQ_1:1;
L259: ( ( SDSub2INT ( D37 '+' D38 ) ) /. 2 ) = ( SDSub2INTDigit (( D37 '+' D38 ) , 2 , D34) ) by L258 , RADIX_3:def 11
.= ( ( ( Radix D34 ) |^ ( 2 -' 1 ) ) * ( DigB_SDSub (( D37 '+' D38 ) , 2) ) ) by RADIX_3:def 10
.= ( ( Radix D34 ) * ( DigB_SDSub (( D37 '+' D38 ) , 2) ) ) by L255 , NEWTON:5
.= ( ( Radix D34 ) * ( DigA_SDSub (( D37 '+' D38 ) , 2) ) ) by RADIX_3:def 9;
L260: 2 in ( dom ( SDSub2INT ( D37 '+' D38 ) ) ) by L258 , L251 , FINSEQ_1:def 3;
L261: ( ( SDSub2INT ( D37 '+' D38 ) ) . 2 ) = D44 by L260 , L259 , PARTFUN1:def 6;
L262: ( SDSub2INT ( D37 '+' D38 ) ) = <* D40 , D44 *> by L261 , L251 , L253 , FINSEQ_1:44;
L263: ( Sum ( SDSub2INT ( D37 '+' D38 ) ) ) = ( D40 + D44 ) by L262 , RVSUM_1:77;
L264: ( DigA_SDSub (( D37 '+' D38 ) , 2) ) = ( SDSubAddDigit (D37 , D38 , 2 , D34) ) by L258 , L91
.= ( ( SDSub_Add_Data (( ( DigA_SDSub (D37 , 2) ) + ( DigA_SDSub (D38 , 2) ) ) , D34) ) + ( SDSub_Add_Carry (( ( DigA_SDSub (D37 , ( 2 -' 1 )) ) + ( DigA_SDSub (D38 , ( 2 -' 1 )) ) ) , D34) ) ) by L246 , L258 , L76 , XXREAL_0:2
.= ( ( SDSub_Add_Data (( ( SDSub_Add_Carry (D35 , D34) ) + ( DigA_SDSub (D38 , 2) ) ) , D34) ) + D39 ) by L246 , L247 , L255 , L51 , XXREAL_0:2
.= ( ( SDSub_Add_Data (( ( SDSub_Add_Carry (D35 , D34) ) + ( SDSub_Add_Carry (D36 , D34) ) ) , D34) ) + D39 ) by L246 , L248 , L51 , XXREAL_0:2
.= ( ( ( ( SDSub_Add_Carry (D35 , D34) ) + ( SDSub_Add_Carry (D36 , D34) ) ) - ( ( Radix D34 ) * ( SDSub_Add_Carry (( ( SDSub_Add_Carry (D35 , D34) ) + ( SDSub_Add_Carry (D36 , D34) ) ) , D34) ) ) ) + D39 ) by RADIX_3:def 4
.= ( ( ( ( SDSub_Add_Carry (D35 , D34) ) + ( SDSub_Add_Carry (D36 , D34) ) ) - ( ( Radix D34 ) * ( 0 ) ) ) + D39 ) by L246 , L31
.= ( ( ( ( SDSub_Add_Carry (D35 , D34) ) + ( SDSub_Add_Carry (D36 , D34) ) ) - ( 0 ) ) + D39 );
thus L265: thesis by L264 , L263 , L257 , RADIX_3:def 12;
end;
L266: (for B32 being Nat holds (B32 >= 1 implies S2[ B32 ])) from NAT_1:sch 8(L245 , L140);
thus L267: thesis by L266 , L139;
end;
