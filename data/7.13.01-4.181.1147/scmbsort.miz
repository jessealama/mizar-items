:: Bubble Sort on SCM+FSA
::  by JingChao Chen and Yatsuka Nakamura
::
:: Received June 17, 1998
:: Copyright (c) 1998-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.
::SCMFSA6A,

environ

 vocabularies NUMBERS, EXTPRO_1, SCMFSA_2, AMI_1, SUBSET_1, SCMFSA7B, SCMFSA8C,
      SCMFSA8A, AMI_3, CARD_1, AMISTD_2, SCMFSA8B, TURING_1, FSM_1, GRAPHSP,
      FUNCT_1, PARTFUN1, COMPLEX1, FUNCT_4, ARYTM_3, SF_MASTR, SCMFSA6C,
      SCMFSA6B, FUNCOP_1, ORDINAL1, RELAT_1, TARSKI, XBOOLE_0, XXREAL_0,
      CIRCUIT2, NAT_1, STRUCT_0, ARYTM_1, INT_1, FINSEQ_1, FINSEQ_2, SCMFSA6A,
      FINSUB_1, CARD_3, CLASSES1, VALUED_0, MSUALG_1, SCM_HALT, SCMBSORT,
      PBOOLE, COMPOS_1, GOBRD13;
 notations TARSKI, XBOOLE_0, ENUMSET1, SUBSET_1, SETFAM_1, ORDINAL1, CARD_1,
      NUMBERS, XCMPLX_0, NAT_1, INT_1, RELAT_1, FINSEQ_1, FUNCT_1, COMPLEX1,
      FUNCT_2, PBOOLE, FUNCT_4, FINSEQ_2, FUNCT_7, STRUCT_0, MEMSTR_0,
      COMPOS_0,
      COMPOS_1, EXTPRO_1, AMISTD_2, SCMFSA_2, FUNCOP_1, FINSUB_1, CARD_3,
      PARTFUN1, SCMFSA6B, SCMFSA6C, SCMFSA6A, SF_MASTR, SCMFSA8A, SCMFSA8B,
      SCMFSA8C, CLASSES1, RFINSEQ, SCMFSA7B, NAT_D, SCM_HALT, XXREAL_0,
      SCMFSA_M;
 constructors SETWISEO, XXREAL_0, REAL_1, AMI_3, SCMFSA6A, SF_MASTR, SCMFSA6B,
      SCMFSA6C, SCMFSA8A, SCMFSA8B, SCMFSA8C, SCM_HALT, SEQ_1, SCMFSA7B,
      AMISTD_2, NAT_D, CLASSES1, RELSET_1, DOMAIN_1, SFMASTR1, AMISTD_1,
      PBOOLE, PRE_POLY, SCMFSA_3, SCMFSA_7, SCMFSA_9, SCMFSA_2, XXREAL_2,
      MEMSTR_0, SCMFSA_1, SCMFSA_M, FUNCT_7;
 registrations XBOOLE_0, SETFAM_1, FUNCT_1, RELSET_1, FUNCOP_1, FINSUB_1,
      NUMBERS, XXREAL_0, XREAL_0, NAT_1, INT_1, CARD_3, RFINSEQ, SCMFSA_2,
      SF_MASTR, SCMFSA6C, SCMFSA7B, FINSET_1, SCMFSA8A, SCMFSA8B, SCMFSA_9,
      SCM_HALT, STRUCT_0, VALUED_0, ORDINAL1, RELAT_1, FUNCT_2, PBOOLE,
      SCMFSA10, AMISTD_2, SCMFSA6A, COMPOS_1, SFMASTR1, FUNCT_4, EXTPRO_1,
      SCMFSA8C, MEMSTR_0, FINSEQ_1, AMI_3,
      COMPOS_0, SCMFSA_M;
 requirements REAL, NUMERALS, SUBSET, BOOLE, ARITHM;
 definitions TARSKI, FUNCOP_1, COMPOS_1, EXTPRO_1, XBOOLE_0, SCMFSA8C,
      SCM_HALT, MEMSTR_0, SCMFSA_2,
      COMPOS_0, SCMFSA_M;
 theorems SF_MASTR, FUNCT_1, FUNCT_7, FUNCOP_1, RELAT_1, FUNCT_2, ZFMISC_1,
      SCMFSA6A, FUNCT_4, FINSEQ_3, ENUMSET1, NAT_1, FINSEQ_1, RELSET_1, TARSKI,
      INT_1, PARTFUN1, GRFUNC_1, RFINSEQ, SCMFSA_2, SCMFSA7B, SCMFSA8B,
      SCMFSA8A, SCMFSA8C, SCMFSA6C, SCM_HALT, ABSVALUE, FINSEQ_4, XBOOLE_0,
      XBOOLE_1, SCMFSA9A, XREAL_1, ORDINAL1, XXREAL_0, NAT_D, CLASSES1, PBOOLE,
      AFINSQ_1, COMPOS_1, EXTPRO_1, MEMSTR_0, AMI_2,
      COMPOS_0, SCMFSA_M;
 schemes RELSET_1, FUNCT_1, NAT_1;

begin
set D1 = ( Start-At (( 0 ) , ( SCM+FSA )) );
theorem
L1: (for B1 being (Program of ( SCM+FSA )) holds (for B2 , B3 being Int-Location holds (((not B1 destroy B3) & B2 <> B3) implies (not ( Times (B2 , B1) ) destroy B3))))
proof
let C1 being (Program of ( SCM+FSA ));
let C2 , C3 being Int-Location;
assume that
L2: (not C1 destroy C3)
and
L3: C2 <> C3;
set D2 = ( Goto 2 );
set D3 = ( SubFrom (C2 , ( intloc ( 0 ) )) );
set D4 = ( Stop ( SCM+FSA ) );
set D5 = ( if=0 (C2 , D2 , ( C1 ";" D3 )) );
L4: (not D2 destroy C3) by SCMFSA8C:57;
L5: (not ( C1 ";" D3 ) destroy C3) by L2 , L3 , SCMFSA7B:8 , SCMFSA8C:54;
L6: (not D5 destroy C3) by L5 , L4 , SCMFSA8C:88;
L7: (not ( loop D5 ) destroy C3) by L6 , SCMFSA8C:74;
L8: (not D4 destroy C3) by SCMFSA8C:56;
thus L9: thesis by L8 , L7 , SCMFSA8C:88;
end;
theorem
L10: (for B4 being (State of ( SCM+FSA )) holds (for B5 being FinSeq-Location holds (for B6 , B7 being Int-Location holds ( ( Exec (( B7 := (B5 , B6) ) , B4) ) . B7 ) = ( ( B4 . B5 ) /. ( abs ( B4 . B6 ) ) ))))
proof
let C4 being (State of ( SCM+FSA ));
let C5 being FinSeq-Location;
let C6 , C7 being Int-Location;
L11: (ex B8 being (Element of ( NAT )) st (B8 = ( abs ( C4 . C6 ) ) & ( ( Exec (( C7 := (C5 , C6) ) , C4) ) . C7 ) = ( ( C4 . C5 ) /. B8 ))) by SCMFSA_2:72;
thus L12: thesis by L11;
end;
theorem
L13: (for B9 being (State of ( SCM+FSA )) holds (for B10 being FinSeq-Location holds (for B11 , B12 being Int-Location holds ( ( Exec (( (B10 , B11) := B12 ) , B9) ) . B10 ) = ( ( B9 . B10 ) +* (( abs ( B9 . B11 ) ) , ( B9 . B12 )) ))))
proof
let C8 being (State of ( SCM+FSA ));
let C9 being FinSeq-Location;
let C10 , C11 being Int-Location;
L14: (ex B13 being (Element of ( NAT )) st (B13 = ( abs ( C8 . C10 ) ) & ( ( Exec (( (C9 , C10) := C11 ) , C8) ) . C9 ) = ( ( C8 . C9 ) +* (B13 , ( C8 . C11 )) ))) by SCMFSA_2:73;
thus L15: thesis by L14;
end;
theorem
L16: (for B14 being (State of ( SCM+FSA )) holds (for B15 being FinSeq-Location holds (for B16 , B17 being (Element of ( NAT )) holds (for B18 being Int-Location holds (B16 <> ( B17 + 1 ) implies ( ( Exec (( ( intloc B16 ) := (B15 , B18) ) , ( Initialized B14 )) ) . ( intloc ( B17 + 1 ) ) ) = ( B14 . ( intloc ( B17 + 1 ) ) ))))))
proof
let C12 being (State of ( SCM+FSA ));
let C13 being FinSeq-Location;
let C14 , C15 being (Element of ( NAT ));
let C16 being Int-Location;
assume L17: C14 <> ( C15 + 1 );
L18: ( intloc C14 ) <> ( intloc ( C15 + 1 ) ) by L17 , SCMFSA_2:101;
thus L19: ( ( Exec (( ( intloc C14 ) := (C13 , C16) ) , ( Initialized C12 )) ) . ( intloc ( C15 + 1 ) ) ) = ( ( Initialized C12 ) . ( intloc ( C15 + 1 ) ) ) by L18 , SCMFSA_2:72
.= ( C12 . ( intloc ( C15 + 1 ) ) ) by SCMFSA_M:37;
end;
theorem
L20: (for B19 being (State of ( SCM+FSA )) holds (for B20 , B21 being (Element of ( NAT )) holds (for B22 being Int-Location holds (B20 <> ( B21 + 1 ) implies ( ( Exec (( ( intloc B20 ) := B22 ) , ( Initialized B19 )) ) . ( intloc ( B21 + 1 ) ) ) = ( B19 . ( intloc ( B21 + 1 ) ) )))))
proof
let C17 being (State of ( SCM+FSA ));
let C18 , C19 being (Element of ( NAT ));
let C20 being Int-Location;
assume L21: C18 <> ( C19 + 1 );
L22: ( intloc C18 ) <> ( intloc ( C19 + 1 ) ) by L21 , SCMFSA_2:101;
thus L23: ( ( Exec (( ( intloc C18 ) := C20 ) , ( Initialized C17 )) ) . ( intloc ( C19 + 1 ) ) ) = ( ( Initialized C17 ) . ( intloc ( C19 + 1 ) ) ) by L22 , SCMFSA_2:63
.= ( C17 . ( intloc ( C19 + 1 ) ) ) by SCMFSA_M:37;
end;
theorem
L24: (for B23 being (Instruction-Sequence of ( SCM+FSA )) holds (for B24 being (State of ( SCM+FSA )) holds (for B25 being FinSeq-Location holds (for B26 being  read-write Int-Location holds (( ( IExec (( Stop ( SCM+FSA ) ) , B23 , B24) ) . B26 ) = ( B24 . B26 ) & ( ( IExec (( Stop ( SCM+FSA ) ) , B23 , B24) ) . B25 ) = ( B24 . B25 ))))))
proof
let C21 being (Instruction-Sequence of ( SCM+FSA ));
let C22 being (State of ( SCM+FSA ));
let C23 being FinSeq-Location;
let C24 being  read-write Int-Location;
L25: ( Initialized C22 ) = ( C22 +* ( ( ( intloc ( 0 ) ) .--> 1 ) +* ( Start-At (( 0 ) , ( SCM+FSA )) ) ) )
.= ( Initialize ( C22 +* ( ( intloc ( 0 ) ) .--> 1 ) ) ) by FUNCT_4:14;
L26: ( IExec (( Stop ( SCM+FSA ) ) , C21 , C22) ) = ( Initialize ( C22 +* ( ( intloc ( 0 ) ) .--> 1 ) ) ) by L25 , SCMFSA8C:14
.= ( Initialized C22 ) by L25;
thus L27: ( ( IExec (( Stop ( SCM+FSA ) ) , C21 , C22) ) . C24 ) = ( C22 . C24 ) by L26 , SCMFSA_M:37;
thus L28: thesis by L26 , SCMFSA_M:37;
end;
theorem
L29: (for R1 being (preProgram of ( SCM+FSA )) holds (for R2 being (Instruction of ( SCM+FSA )) holds (for R8 being Int-Location holds (for R9 being Int-Location holds ((R2 in ( rng R1 ) & (R2 = ( R8 := R9 ) or R2 = ( AddTo (R8 , R9) ) or R2 = ( SubFrom (R8 , R9) ) or R2 = ( MultBy (R8 , R9) ) or R2 = ( Divide (R8 , R9) ))) implies (R8 in ( UsedIntLoc R1 ) & R9 in ( UsedIntLoc R1 )))))))
proof
let R1 being (preProgram of ( SCM+FSA ));
let R2 being (Instruction of ( SCM+FSA ));
let R8 being Int-Location;
let R9 being Int-Location;
assume that
L30: R2 in ( rng R1 )
and
L31: (R2 = ( R8 := R9 ) or R2 = ( AddTo (R8 , R9) ) or R2 = ( SubFrom (R8 , R9) ) or R2 = ( MultBy (R8 , R9) ) or R2 = ( Divide (R8 , R9) ));
L32: ( UsedIntLoc R2 ) = { R8 , R9 } by L31 , SF_MASTR:14;
L33: ( UsedIntLoc R2 ) c= ( UsedIntLoc R1 ) by L30 , SF_MASTR:19;
thus L34: thesis by L33 , L32 , ZFMISC_1:32;
end;
theorem
L35: (for R1 being (preProgram of ( SCM+FSA )) holds (for R2 being (Instruction of ( SCM+FSA )) holds (for R8 being Int-Location holds (for R12 being (Element of ( NAT )) holds ((R2 in ( rng R1 ) & (R2 = ( R8 =0_goto R12 ) or R2 = ( R8 >0_goto R12 ))) implies R8 in ( UsedIntLoc R1 ))))))
proof
let R1 being (preProgram of ( SCM+FSA ));
let R2 being (Instruction of ( SCM+FSA ));
let R8 being Int-Location;
let R12 being (Element of ( NAT ));
assume that
L36: R2 in ( rng R1 )
and
L37: (R2 = ( R8 =0_goto R12 ) or R2 = ( R8 >0_goto R12 ));
L38: ( UsedIntLoc R2 ) = { R8 } by L37 , SF_MASTR:16;
L39: ( UsedIntLoc R2 ) c= ( UsedIntLoc R1 ) by L36 , SF_MASTR:19;
thus L40: thesis by L39 , L38 , ZFMISC_1:31;
end;
theorem
L41: (for R1 being (preProgram of ( SCM+FSA )) holds (for R2 being (Instruction of ( SCM+FSA )) holds (for R6 being FinSeq-Location holds (for R8 being Int-Location holds (for R9 being Int-Location holds ((R2 in ( rng R1 ) & (R2 = ( R9 := (R6 , R8) ) or R2 = ( (R6 , R8) := R9 ))) implies (R8 in ( UsedIntLoc R1 ) & R9 in ( UsedIntLoc R1 ))))))))
proof
let R1 being (preProgram of ( SCM+FSA ));
let R2 being (Instruction of ( SCM+FSA ));
let R6 being FinSeq-Location;
let R8 being Int-Location;
let R9 being Int-Location;
assume that
L42: R2 in ( rng R1 )
and
L43: (R2 = ( R9 := (R6 , R8) ) or R2 = ( (R6 , R8) := R9 ));
L44: ( UsedIntLoc R2 ) = { R8 , R9 } by L43 , SF_MASTR:17;
L45: ( UsedIntLoc R2 ) c= ( UsedIntLoc R1 ) by L42 , SF_MASTR:19;
thus L46: thesis by L45 , L44 , ZFMISC_1:32;
end;
theorem
L47: (for R1 being (preProgram of ( SCM+FSA )) holds (for R2 being (Instruction of ( SCM+FSA )) holds (for R6 being FinSeq-Location holds (for R8 being Int-Location holds (for R9 being Int-Location holds ((R2 in ( rng R1 ) & (R2 = ( R9 := (R6 , R8) ) or R2 = ( (R6 , R8) := R9 ))) implies R6 in ( UsedInt*Loc R1 )))))))
proof
let R1 being (preProgram of ( SCM+FSA ));
let R2 being (Instruction of ( SCM+FSA ));
let R6 being FinSeq-Location;
let R8 being Int-Location;
let R9 being Int-Location;
assume that
L48: R2 in ( rng R1 )
and
L49: (R2 = ( R9 := (R6 , R8) ) or R2 = ( (R6 , R8) := R9 ));
L50: ( UsedInt*Loc R2 ) = { R6 } by L49 , SF_MASTR:33;
L51: ( UsedInt*Loc R2 ) c= ( UsedInt*Loc R1 ) by L48 , SF_MASTR:35;
thus L52: thesis by L51 , L50 , ZFMISC_1:31;
end;
theorem
L53: (for R1 being (preProgram of ( SCM+FSA )) holds (for R2 being (Instruction of ( SCM+FSA )) holds (for R6 being FinSeq-Location holds (for R8 being Int-Location holds ((R2 in ( rng R1 ) & (R2 = ( R8 :=len R6 ) or R2 = ( R6 :=<0,...,0> R8 ))) implies R8 in ( UsedIntLoc R1 ))))))
proof
let R1 being (preProgram of ( SCM+FSA ));
let R2 being (Instruction of ( SCM+FSA ));
let R6 being FinSeq-Location;
let R8 being Int-Location;
assume that
L54: R2 in ( rng R1 )
and
L55: (R2 = ( R8 :=len R6 ) or R2 = ( R6 :=<0,...,0> R8 ));
L56: ( UsedIntLoc R2 ) = { R8 } by L55 , SF_MASTR:18;
L57: ( UsedIntLoc R2 ) c= ( UsedIntLoc R1 ) by L54 , SF_MASTR:19;
thus L58: thesis by L57 , L56 , ZFMISC_1:31;
end;
theorem
L59: (for R1 being (preProgram of ( SCM+FSA )) holds (for R2 being (Instruction of ( SCM+FSA )) holds (for R6 being FinSeq-Location holds (for R8 being Int-Location holds ((R2 in ( rng R1 ) & (R2 = ( R8 :=len R6 ) or R2 = ( R6 :=<0,...,0> R8 ))) implies R6 in ( UsedInt*Loc R1 ))))))
proof
let R1 being (preProgram of ( SCM+FSA ));
let R2 being (Instruction of ( SCM+FSA ));
let R6 being FinSeq-Location;
let R8 being Int-Location;
assume that
L60: R2 in ( rng R1 )
and
L61: (R2 = ( R8 :=len R6 ) or R2 = ( R6 :=<0,...,0> R8 ));
L62: ( UsedInt*Loc R2 ) = { R6 } by L61 , SF_MASTR:34;
L63: ( UsedInt*Loc R2 ) c= ( UsedInt*Loc R1 ) by L60 , SF_MASTR:35;
thus L64: thesis by L63 , L62 , ZFMISC_1:31;
end;
theorem
L65: (for B27 being (FinPartState of ( SCM+FSA )) holds (for B28 being (Program of ( SCM+FSA )) holds (for B29 being set holds ((( dom B27 ) c= ( ( Int-Locations ) \/ ( FinSeq-Locations ) ) & B29 in ( ( ( dom B27 ) \/ ( UsedInt*Loc B28 ) ) \/ ( UsedIntLoc B28 ) )) implies (B29 is Int-Location or B29 is FinSeq-Location)))))
proof
let C25 being (FinPartState of ( SCM+FSA ));
let C26 being (Program of ( SCM+FSA ));
let C27 being set;
set D6 = ( UsedInt*Loc C26 );
set D7 = ( UsedIntLoc C26 );
assume that
L66: ( dom C25 ) c= ( ( Int-Locations ) \/ ( FinSeq-Locations ) )
and
L67: C27 in ( ( ( dom C25 ) \/ D6 ) \/ D7 );
L68: (C27 in ( ( dom C25 ) \/ D6 ) or C27 in D7) by L67 , XBOOLE_0:def 3;
L69: (C27 in ( dom C25 ) or C27 in D6 or C27 in D7) by L68 , XBOOLE_0:def 3;
per cases  by L66 , L69 , XBOOLE_0:def 3;
suppose L70: C27 in ( Int-Locations );

thus L71: thesis by L70 , AMI_2:def 16;
end;
suppose L72: C27 in ( FinSeq-Locations );

thus L73: thesis by L72 , SCMFSA_2:def 5;
end;
suppose L74: C27 in D6;

L75: C27 in ( FinSeq-Locations ) by L74;
thus L76: thesis by L75 , SCMFSA_2:def 5;
end;
suppose L77: C27 in D7;

L78: C27 in ( Int-Locations ) by L77;
thus L79: thesis by L78 , AMI_2:def 16;
end;
end;
theorem
L81: (for R14 being (Instruction-Sequence of ( SCM+FSA )) holds (for R15 being (Instruction-Sequence of ( SCM+FSA )) holds (for B30 , B31 being (Element of ( NAT )) holds (for B32 being (FinPartState of ( SCM+FSA )) holds (for B33 being (Program of ( SCM+FSA )) holds (for B34 , B35 being (State of ( SCM+FSA )) holds ((B31 <= B30 & B33 c= R14 & B33 c= R15 & ( dom B32 ) c= ( ( Int-Locations ) \/ ( FinSeq-Locations ) ) & (for R4 being (Element of ( NAT )) holds (( IC ( Comput (R14 , B34 , R4) ) ) in ( dom B33 ) & ( IC ( Comput (R15 , B35 , R4) ) ) in ( dom B33 ))) & ( ( Comput (R14 , B34 , B31) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (R15 , B35 , B31) ) . ( IC ( SCM+FSA ) ) ) & ( ( Comput (R14 , B34 , B31) ) | ( ( ( dom B32 ) \/ ( UsedInt*Loc B33 ) ) \/ ( UsedIntLoc B33 ) ) ) = ( ( Comput (R15 , B35 , B31) ) | ( ( ( dom B32 ) \/ ( UsedInt*Loc B33 ) ) \/ ( UsedIntLoc B33 ) ) )) implies (( ( Comput (R14 , B34 , B30) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (R15 , B35 , B30) ) . ( IC ( SCM+FSA ) ) ) & ( ( Comput (R14 , B34 , B30) ) | ( ( ( dom B32 ) \/ ( UsedInt*Loc B33 ) ) \/ ( UsedIntLoc B33 ) ) ) = ( ( Comput (R15 , B35 , B30) ) | ( ( ( dom B32 ) \/ ( UsedInt*Loc B33 ) ) \/ ( UsedIntLoc B33 ) ) )))))))))
proof
let R14 being (Instruction-Sequence of ( SCM+FSA ));
let R15 being (Instruction-Sequence of ( SCM+FSA ));
let R3 being (Element of ( NAT ));
let R5 being (Element of ( NAT ));
let C28 being (FinPartState of ( SCM+FSA ));
let C29 being (Program of ( SCM+FSA ));
let C30 , C31 being (State of ( SCM+FSA ));
set D8 = ( ( ( dom C28 ) \/ ( UsedInt*Loc C29 ) ) \/ ( UsedIntLoc C29 ) );
assume that
L82: R5 <= R3
and
L83: C29 c= R14
and
L84: C29 c= R15
and
L85: ( dom C28 ) c= ( ( Int-Locations ) \/ ( FinSeq-Locations ) )
and
L86: (for R4 being (Element of ( NAT )) holds (( IC ( Comput (R14 , C30 , R4) ) ) in ( dom C29 ) & ( IC ( Comput (R15 , C31 , R4) ) ) in ( dom C29 )))
and
L87: ( ( Comput (R14 , C30 , R5) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (R15 , C31 , R5) ) . ( IC ( SCM+FSA ) ) )
and
L88: ( ( Comput (R14 , C30 , R5) ) | D8 ) = ( ( Comput (R15 , C31 , R5) ) | D8 );
consider C32 being Nat such that L89: R3 = ( R5 + C32 ) by L82 , NAT_1:10;
reconsider D9 = C32 as (Element of ( NAT )) by ORDINAL1:def 12;
L90: R3 = ( R5 + D9 ) by L89;
L91: ( UsedIntLoc C29 ) c= D8 by XBOOLE_1:7;
L92: D8 = ( ( ( dom C28 ) \/ ( UsedIntLoc C29 ) ) \/ ( UsedInt*Loc C29 ) ) by XBOOLE_1:4;
L93: ( UsedInt*Loc C29 ) c= D8 by L92 , XBOOLE_1:7;
defpred S1[ Nat ] means (( ( Comput (R14 , C30 , ( R5 + $1 )) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (R15 , C31 , ( R5 + $1 )) ) . ( IC ( SCM+FSA ) ) ) & ( ( Comput (R14 , C30 , ( R5 + $1 )) ) | D8 ) = ( ( Comput (R15 , C31 , ( R5 + $1 )) ) | D8 ));
L94: S1[ ( 0 ) ] by L87 , L88;
L95:
now
let C33 being (Element of ( NAT ));
assume L96: S1[ C33 ];
set D10 = ( Comput (R14 , C30 , ( R5 + C33 )) );
set D11 = ( Comput (R14 , C30 , ( R5 + ( C33 + 1 ) )) );
set D12 = ( CurInstr (R14 , D10) );
set D13 = ( Comput (R15 , C31 , ( R5 + C33 )) );
set D14 = ( Comput (R15 , C31 , ( R5 + ( C33 + 1 ) )) );
set D15 = ( CurInstr (R15 , D13) );
L97: ( IC D10 ) in ( dom C29 ) by L86;
L98: ( R15 /. ( IC D13 ) ) = ( R15 . ( IC D13 ) ) by PBOOLE:143;
L99: ( R14 /. ( IC D10 ) ) = ( R14 . ( IC D10 ) ) by PBOOLE:143;
L100: D12 = ( C29 . ( IC D10 ) ) by L83 , L97 , L99 , GRFUNC_1:2;
L101: D12 in ( rng C29 ) by L100 , L97 , FUNCT_1:def 3;
L102: D15 = ( ( R15 | ( dom C29 ) ) . ( IC D13 ) ) by L98 , L86 , FUNCT_1:49
.= ( ( R14 | ( dom C29 ) ) . ( IC D10 ) ) by L83 , L84 , L96 , GRFUNC_1:33
.= D12 by L99 , L86 , FUNCT_1:49;
L103: D11 = ( Comput (R14 , C30 , ( ( R5 + C33 ) + 1 )) )
.= ( Following (R14 , D10) ) by EXTPRO_1:3
.= ( Exec (D12 , D10) );
L104: D14 = ( Comput (R15 , C31 , ( ( R5 + C33 ) + 1 )) )
.= ( Following (R15 , D13) ) by EXTPRO_1:3
.= ( Exec (D15 , D13) );
L105: ( dom D11 ) = (the carrier of ( SCM+FSA )) by PARTFUN1:def 2
.= ( dom D14 ) by PARTFUN1:def 2;
per cases  by NAT_1:36 , SCMFSA_2:16;
suppose L106: ( InsCode D12 ) = ( 0 );

L107: D12 = ( halt ( SCM+FSA ) ) by L106 , SCMFSA_2:95;
L108: D11 = D10 by L107 , L103 , EXTPRO_1:def 3;
thus L109: S1[ ( C33 + 1 ) ] by L108 , L96 , L102 , L104 , L107 , EXTPRO_1:def 3;
end;
suppose L110: ( InsCode D12 ) = 1;

consider R10 being Int-Location, R11 being Int-Location such that L111: D12 = ( R10 := R11 ) by L110 , SCMFSA_2:30;
L112: ( D11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC D10 ) ) by L103 , L111 , SCMFSA_2:63
.= ( D14 . ( IC ( SCM+FSA ) ) ) by L96 , L102 , L104 , L111 , SCMFSA_2:63;
L113:
now
let C34 being set;
assume L114: C34 in D8;
per cases  by L85 , L114 , L65;
suppose L115: C34 is Int-Location;

per cases ;
suppose L116: C34 = R10;

L117: ( D14 . C34 ) = ( D13 . R11 ) by L116 , L102 , L104 , L111 , SCMFSA_2:63;
L118: R11 in ( UsedIntLoc C29 ) by L101 , L111 , L29;
L119: ( D10 . R11 ) = ( ( D13 | D8 ) . R11 ) by L118 , L91 , L96 , FUNCT_1:49
.= ( D13 . R11 ) by L91 , L118 , FUNCT_1:49;
thus L120: ( D11 . C34 ) = ( D14 . C34 ) by L119 , L103 , L111 , L116 , L117 , SCMFSA_2:63;
end;
suppose L121: C34 <> R10;

L122: ( D14 . C34 ) = ( D13 . C34 ) by L121 , L102 , L104 , L111 , L115 , SCMFSA_2:63;
L123: ( D10 . C34 ) = ( ( D13 | D8 ) . C34 ) by L96 , L114 , FUNCT_1:49
.= ( D13 . C34 ) by L114 , FUNCT_1:49;
thus L124: ( D11 . C34 ) = ( D14 . C34 ) by L123 , L103 , L111 , L115 , L121 , L122 , SCMFSA_2:63;
end;
end;
suppose L126: C34 is FinSeq-Location;

L127: ( D14 . C34 ) = ( D13 . C34 ) by L126 , L102 , L104 , L111 , SCMFSA_2:63;
L128: ( D10 . C34 ) = ( ( D13 | D8 ) . C34 ) by L96 , L114 , FUNCT_1:49
.= ( D13 . C34 ) by L114 , FUNCT_1:49;
thus L129: ( D11 . C34 ) = ( D14 . C34 ) by L128 , L103 , L111 , L126 , L127 , SCMFSA_2:63;
end;
end;
thus L131: S1[ ( C33 + 1 ) ] by L113 , L105 , L112 , FUNCT_1:96;
end;
suppose L132: ( InsCode D12 ) = 2;

consider R10 being Int-Location, R11 being Int-Location such that L133: D12 = ( AddTo (R10 , R11) ) by L132 , SCMFSA_2:31;
L134: ( D11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC D10 ) ) by L103 , L133 , SCMFSA_2:64
.= ( D14 . ( IC ( SCM+FSA ) ) ) by L96 , L102 , L104 , L133 , SCMFSA_2:64;
L135:
now
let C35 being set;
assume L136: C35 in D8;
per cases  by L85 , L136 , L65;
suppose L137: C35 is Int-Location;

per cases ;
suppose L138: C35 = R10;

L139: ( D14 . C35 ) = ( ( D13 . R10 ) + ( D13 . R11 ) ) by L138 , L102 , L104 , L133 , SCMFSA_2:64;
L140: R10 in ( UsedIntLoc C29 ) by L101 , L133 , L29;
L141: ( D10 . R10 ) = ( ( D13 | D8 ) . R10 ) by L140 , L91 , L96 , FUNCT_1:49
.= ( D13 . R10 ) by L91 , L140 , FUNCT_1:49;
L142: R11 in ( UsedIntLoc C29 ) by L101 , L133 , L29;
L143: ( D10 . R11 ) = ( ( D13 | D8 ) . R11 ) by L142 , L91 , L96 , FUNCT_1:49
.= ( D13 . R11 ) by L91 , L142 , FUNCT_1:49;
thus L144: ( D11 . C35 ) = ( D14 . C35 ) by L143 , L103 , L133 , L138 , L139 , L141 , SCMFSA_2:64;
end;
suppose L145: C35 <> R10;

L146: ( D14 . C35 ) = ( D13 . C35 ) by L145 , L102 , L104 , L133 , L137 , SCMFSA_2:64;
L147: ( D10 . C35 ) = ( ( D13 | D8 ) . C35 ) by L96 , L136 , FUNCT_1:49
.= ( D13 . C35 ) by L136 , FUNCT_1:49;
thus L148: ( D11 . C35 ) = ( D14 . C35 ) by L147 , L103 , L133 , L137 , L145 , L146 , SCMFSA_2:64;
end;
end;
suppose L150: C35 is FinSeq-Location;

L151: ( D14 . C35 ) = ( D13 . C35 ) by L150 , L102 , L104 , L133 , SCMFSA_2:64;
L152: ( D10 . C35 ) = ( ( D13 | D8 ) . C35 ) by L96 , L136 , FUNCT_1:49
.= ( D13 . C35 ) by L136 , FUNCT_1:49;
thus L153: ( D11 . C35 ) = ( D14 . C35 ) by L152 , L103 , L133 , L150 , L151 , SCMFSA_2:64;
end;
end;
thus L155: S1[ ( C33 + 1 ) ] by L135 , L105 , L134 , FUNCT_1:96;
end;
suppose L156: ( InsCode D12 ) = 3;

consider R10 being Int-Location, R11 being Int-Location such that L157: D12 = ( SubFrom (R10 , R11) ) by L156 , SCMFSA_2:32;
L158: ( D11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC D10 ) ) by L103 , L157 , SCMFSA_2:65
.= ( D14 . ( IC ( SCM+FSA ) ) ) by L96 , L102 , L104 , L157 , SCMFSA_2:65;
L159:
now
let C36 being set;
assume L160: C36 in D8;
per cases  by L85 , L160 , L65;
suppose L161: C36 is Int-Location;

per cases ;
suppose L162: C36 = R10;

L163: ( D14 . C36 ) = ( ( D13 . R10 ) - ( D13 . R11 ) ) by L162 , L102 , L104 , L157 , SCMFSA_2:65;
L164: R10 in ( UsedIntLoc C29 ) by L101 , L157 , L29;
L165: ( D10 . R10 ) = ( ( D13 | D8 ) . R10 ) by L164 , L91 , L96 , FUNCT_1:49
.= ( D13 . R10 ) by L91 , L164 , FUNCT_1:49;
L166: R11 in ( UsedIntLoc C29 ) by L101 , L157 , L29;
L167: ( D10 . R11 ) = ( ( D13 | D8 ) . R11 ) by L166 , L91 , L96 , FUNCT_1:49
.= ( D13 . R11 ) by L91 , L166 , FUNCT_1:49;
thus L168: ( D11 . C36 ) = ( D14 . C36 ) by L167 , L103 , L157 , L162 , L163 , L165 , SCMFSA_2:65;
end;
suppose L169: C36 <> R10;

L170: ( D14 . C36 ) = ( D13 . C36 ) by L169 , L102 , L104 , L157 , L161 , SCMFSA_2:65;
L171: ( D10 . C36 ) = ( ( D13 | D8 ) . C36 ) by L96 , L160 , FUNCT_1:49
.= ( D13 . C36 ) by L160 , FUNCT_1:49;
thus L172: ( D11 . C36 ) = ( D14 . C36 ) by L171 , L103 , L157 , L161 , L169 , L170 , SCMFSA_2:65;
end;
end;
suppose L174: C36 is FinSeq-Location;

L175: ( D14 . C36 ) = ( D13 . C36 ) by L174 , L102 , L104 , L157 , SCMFSA_2:65;
L176: ( D10 . C36 ) = ( ( D13 | D8 ) . C36 ) by L96 , L160 , FUNCT_1:49
.= ( D13 . C36 ) by L160 , FUNCT_1:49;
thus L177: ( D11 . C36 ) = ( D14 . C36 ) by L176 , L103 , L157 , L174 , L175 , SCMFSA_2:65;
end;
end;
thus L179: S1[ ( C33 + 1 ) ] by L159 , L105 , L158 , FUNCT_1:96;
end;
suppose L180: ( InsCode D12 ) = 4;

consider R10 being Int-Location, R11 being Int-Location such that L181: D12 = ( MultBy (R10 , R11) ) by L180 , SCMFSA_2:33;
L182: ( D11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC D10 ) ) by L103 , L181 , SCMFSA_2:66
.= ( D14 . ( IC ( SCM+FSA ) ) ) by L96 , L102 , L104 , L181 , SCMFSA_2:66;
L183:
now
let C37 being set;
assume L184: C37 in D8;
per cases  by L85 , L184 , L65;
suppose L185: C37 is Int-Location;

per cases ;
suppose L186: C37 = R10;

L187: ( D14 . C37 ) = ( ( D13 . R10 ) * ( D13 . R11 ) ) by L186 , L102 , L104 , L181 , SCMFSA_2:66;
L188: R10 in ( UsedIntLoc C29 ) by L101 , L181 , L29;
L189: ( D10 . R10 ) = ( ( D13 | D8 ) . R10 ) by L188 , L91 , L96 , FUNCT_1:49
.= ( D13 . R10 ) by L91 , L188 , FUNCT_1:49;
L190: R11 in ( UsedIntLoc C29 ) by L101 , L181 , L29;
L191: ( D10 . R11 ) = ( ( D13 | D8 ) . R11 ) by L190 , L91 , L96 , FUNCT_1:49
.= ( D13 . R11 ) by L91 , L190 , FUNCT_1:49;
thus L192: ( D11 . C37 ) = ( D14 . C37 ) by L191 , L103 , L181 , L186 , L187 , L189 , SCMFSA_2:66;
end;
suppose L193: C37 <> R10;

L194: ( D14 . C37 ) = ( D13 . C37 ) by L193 , L102 , L104 , L181 , L185 , SCMFSA_2:66;
L195: ( D10 . C37 ) = ( ( D13 | D8 ) . C37 ) by L96 , L184 , FUNCT_1:49
.= ( D13 . C37 ) by L184 , FUNCT_1:49;
thus L196: ( D11 . C37 ) = ( D14 . C37 ) by L195 , L103 , L181 , L185 , L193 , L194 , SCMFSA_2:66;
end;
end;
suppose L198: C37 is FinSeq-Location;

L199: ( D14 . C37 ) = ( D13 . C37 ) by L198 , L102 , L104 , L181 , SCMFSA_2:66;
L200: ( D10 . C37 ) = ( ( D13 | D8 ) . C37 ) by L96 , L184 , FUNCT_1:49
.= ( D13 . C37 ) by L184 , FUNCT_1:49;
thus L201: ( D11 . C37 ) = ( D14 . C37 ) by L200 , L103 , L181 , L198 , L199 , SCMFSA_2:66;
end;
end;
thus L203: S1[ ( C33 + 1 ) ] by L183 , L105 , L182 , FUNCT_1:96;
end;
suppose L204: ( InsCode D12 ) = 5;

consider R10 being Int-Location, R11 being Int-Location such that L205: D12 = ( Divide (R10 , R11) ) by L204 , SCMFSA_2:34;
L206: ( D11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC D10 ) ) by L103 , L205 , SCMFSA_2:67
.= ( D14 . ( IC ( SCM+FSA ) ) ) by L96 , L102 , L104 , L205 , SCMFSA_2:67;
L207:
now
let C38 being set;
assume L208: C38 in D8;
per cases  by L85 , L208 , L65;
suppose L209: C38 is Int-Location;

L210: R10 in ( UsedIntLoc C29 ) by L101 , L205 , L29;
L211: ( D10 . R10 ) = ( ( D13 | D8 ) . R10 ) by L210 , L91 , L96 , FUNCT_1:49
.= ( D13 . R10 ) by L91 , L210 , FUNCT_1:49;
L212: R11 in ( UsedIntLoc C29 ) by L101 , L205 , L29;
L213: ( D10 . R11 ) = ( ( D13 | D8 ) . R11 ) by L212 , L91 , L96 , FUNCT_1:49
.= ( D13 . R11 ) by L91 , L212 , FUNCT_1:49;
L214: ( D10 . C38 ) = ( ( D13 | D8 ) . C38 ) by L96 , L208 , FUNCT_1:49
.= ( D13 . C38 ) by L208 , FUNCT_1:49;
L215:
now
per cases ;
suppose L216: R10 <> R11;

per cases ;
suppose L217: C38 = R10;

L218: ( D11 . C38 ) = ( ( D10 . R10 ) div ( D10 . R11 ) ) by L217 , L103 , L205 , L216 , SCMFSA_2:67;
thus L219: ( D11 . C38 ) = ( D14 . C38 ) by L218 , L102 , L104 , L205 , L211 , L213 , L216 , L217 , SCMFSA_2:67;
end;
suppose L220: C38 = R11;

L221: ( D11 . C38 ) = ( ( D10 . R10 ) mod ( D10 . R11 ) ) by L220 , L103 , L205 , SCMFSA_2:67;
thus L222: ( D11 . C38 ) = ( D14 . C38 ) by L221 , L102 , L104 , L205 , L211 , L213 , L220 , SCMFSA_2:67;
end;
suppose L223: (C38 <> R10 & C38 <> R11);

L224: ( D11 . C38 ) = ( D10 . C38 ) by L223 , L103 , L205 , L209 , SCMFSA_2:67;
thus L225: ( D11 . C38 ) = ( D14 . C38 ) by L224 , L102 , L104 , L205 , L209 , L214 , L223 , SCMFSA_2:67;
end;
end;
suppose L227: R10 = R11;

L228:
now
per cases ;
case L229: C38 = R10;
L230: ( D11 . C38 ) = ( ( D10 . R10 ) mod ( D10 . R10 ) ) by L229 , L103 , L205 , L227 , SCMFSA_2:68;
thus L231: ( D11 . C38 ) = ( D14 . C38 ) by L230 , L102 , L104 , L205 , L211 , L227 , L229 , SCMFSA_2:68;
end;
case L232: C38 <> R10;
L233: ( D11 . C38 ) = ( D10 . C38 ) by L232 , L103 , L205 , L209 , L227 , SCMFSA_2:68;
thus L234: ( D11 . C38 ) = ( D14 . C38 ) by L233 , L102 , L104 , L205 , L209 , L214 , L227 , L232 , SCMFSA_2:68;
end;
end;
thus L236: ( D11 . C38 ) = ( D14 . C38 ) by L228;
end;
end;
thus L238: ( D11 . C38 ) = ( D14 . C38 ) by L215;
end;
suppose L239: C38 is FinSeq-Location;

L240: ( D14 . C38 ) = ( D13 . C38 ) by L239 , L102 , L104 , L205 , SCMFSA_2:67;
L241: ( D10 . C38 ) = ( ( D13 | D8 ) . C38 ) by L96 , L208 , FUNCT_1:49
.= ( D13 . C38 ) by L208 , FUNCT_1:49;
thus L242: ( D11 . C38 ) = ( D14 . C38 ) by L241 , L103 , L205 , L239 , L240 , SCMFSA_2:67;
end;
end;
thus L244: S1[ ( C33 + 1 ) ] by L207 , L105 , L206 , FUNCT_1:96;
end;
suppose L245: ( InsCode D12 ) = 6;

consider R13 being (Element of ( NAT )) such that L246: D12 = ( goto R13 ) by L245 , SCMFSA_2:35;
L247: ( D11 . ( IC ( SCM+FSA ) ) ) = R13 by L103 , L246 , SCMFSA_2:69
.= ( D14 . ( IC ( SCM+FSA ) ) ) by L102 , L104 , L246 , SCMFSA_2:69;
L248:
now
let C39 being set;
assume L249: C39 in D8;
L250: ( D10 . C39 ) = ( ( D13 | D8 ) . C39 ) by L249 , L96 , FUNCT_1:49
.= ( D13 . C39 ) by L249 , FUNCT_1:49;
per cases  by L85 , L249 , L65;
suppose L251: C39 is Int-Location;

L252: ( D11 . C39 ) = ( D10 . C39 ) by L251 , L103 , L246 , SCMFSA_2:69;
thus L253: ( D11 . C39 ) = ( D14 . C39 ) by L252 , L102 , L104 , L246 , L250 , L251 , SCMFSA_2:69;
end;
suppose L254: C39 is FinSeq-Location;

L255: ( D11 . C39 ) = ( D10 . C39 ) by L254 , L103 , L246 , SCMFSA_2:69;
thus L256: ( D11 . C39 ) = ( D14 . C39 ) by L255 , L102 , L104 , L246 , L250 , L254 , SCMFSA_2:69;
end;
end;
thus L258: S1[ ( C33 + 1 ) ] by L248 , L105 , L247 , FUNCT_1:96;
end;
suppose L259: ( InsCode D12 ) = 7;

consider R13 being (Element of ( NAT )), R10 being Int-Location such that L260: D12 = ( R10 =0_goto R13 ) by L259 , SCMFSA_2:36;
L261: R10 in ( UsedIntLoc C29 ) by L101 , L260 , L35;
L262: ( D10 . R10 ) = ( ( D13 | D8 ) . R10 ) by L261 , L91 , L96 , FUNCT_1:49
.= ( D13 . R10 ) by L91 , L261 , FUNCT_1:49;
L263:
now
per cases ;
suppose L264: ( D10 . R10 ) = ( 0 );

thus L265: ( D11 . ( IC ( SCM+FSA ) ) ) = R13 by L264 , L103 , L260 , SCMFSA_2:70
.= ( D14 . ( IC ( SCM+FSA ) ) ) by L102 , L104 , L260 , L262 , L264 , SCMFSA_2:70;
end;
suppose L266: ( D10 . R10 ) <> ( 0 );

thus L267: ( D11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC D13 ) ) by L266 , L96 , L103 , L260 , SCMFSA_2:70
.= ( D14 . ( IC ( SCM+FSA ) ) ) by L102 , L104 , L260 , L262 , L266 , SCMFSA_2:70;
end;
end;
L269:
now
let C40 being set;
assume L270: C40 in D8;
L271: ( D10 . C40 ) = ( ( D13 | D8 ) . C40 ) by L270 , L96 , FUNCT_1:49
.= ( D13 . C40 ) by L270 , FUNCT_1:49;
per cases  by L85 , L270 , L65;
suppose L272: C40 is Int-Location;

L273: ( D11 . C40 ) = ( D10 . C40 ) by L272 , L103 , L260 , SCMFSA_2:70;
thus L274: ( D11 . C40 ) = ( D14 . C40 ) by L273 , L102 , L104 , L260 , L271 , L272 , SCMFSA_2:70;
end;
suppose L275: C40 is FinSeq-Location;

L276: ( D11 . C40 ) = ( D10 . C40 ) by L275 , L103 , L260 , SCMFSA_2:70;
thus L277: ( D11 . C40 ) = ( D14 . C40 ) by L276 , L102 , L104 , L260 , L271 , L275 , SCMFSA_2:70;
end;
end;
thus L279: S1[ ( C33 + 1 ) ] by L269 , L105 , L263 , FUNCT_1:96;
end;
suppose L280: ( InsCode D12 ) = 8;

consider R13 being (Element of ( NAT )), R10 being Int-Location such that L281: D12 = ( R10 >0_goto R13 ) by L280 , SCMFSA_2:37;
L282: R10 in ( UsedIntLoc C29 ) by L101 , L281 , L35;
L283: ( D10 . R10 ) = ( ( D13 | D8 ) . R10 ) by L282 , L91 , L96 , FUNCT_1:49
.= ( D13 . R10 ) by L91 , L282 , FUNCT_1:49;
L284:
now
per cases ;
suppose L285: ( D10 . R10 ) > ( 0 );

thus L286: ( D11 . ( IC ( SCM+FSA ) ) ) = R13 by L285 , L103 , L281 , SCMFSA_2:71
.= ( D14 . ( IC ( SCM+FSA ) ) ) by L102 , L104 , L281 , L283 , L285 , SCMFSA_2:71;
end;
suppose L287: ( D10 . R10 ) <= ( 0 );

thus L288: ( D11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC D13 ) ) by L287 , L96 , L103 , L281 , SCMFSA_2:71
.= ( D14 . ( IC ( SCM+FSA ) ) ) by L102 , L104 , L281 , L283 , L287 , SCMFSA_2:71;
end;
end;
L290:
now
let C41 being set;
assume L291: C41 in D8;
L292: ( D10 . C41 ) = ( ( D13 | D8 ) . C41 ) by L291 , L96 , FUNCT_1:49
.= ( D13 . C41 ) by L291 , FUNCT_1:49;
per cases  by L85 , L291 , L65;
suppose L293: C41 is Int-Location;

L294: ( D11 . C41 ) = ( D10 . C41 ) by L293 , L103 , L281 , SCMFSA_2:71;
thus L295: ( D11 . C41 ) = ( D14 . C41 ) by L294 , L102 , L104 , L281 , L292 , L293 , SCMFSA_2:71;
end;
suppose L296: C41 is FinSeq-Location;

L297: ( D11 . C41 ) = ( D10 . C41 ) by L296 , L103 , L281 , SCMFSA_2:71;
thus L298: ( D11 . C41 ) = ( D14 . C41 ) by L297 , L102 , L104 , L281 , L292 , L296 , SCMFSA_2:71;
end;
end;
thus L300: S1[ ( C33 + 1 ) ] by L290 , L105 , L284 , FUNCT_1:96;
end;
suppose L301: ( InsCode D12 ) = 9;

consider R8 being Int-Location, R9 being Int-Location, R6 being FinSeq-Location such that L302: D12 = ( R9 := (R6 , R8) ) by L301 , SCMFSA_2:38;
L303: ( D11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC D13 ) ) by L96 , L103 , L302 , SCMFSA_2:72
.= ( D14 . ( IC ( SCM+FSA ) ) ) by L102 , L104 , L302 , SCMFSA_2:72;
L304:
now
let C42 being set;
assume L305: C42 in D8;
per cases  by L85 , L305 , L65;
suppose L306: C42 is Int-Location;

per cases ;
suppose L307: C42 = R9;

L308: (ex B36 being (Element of ( NAT )) st (B36 = ( abs ( D10 . R8 ) ) & ( ( Exec (( R9 := (R6 , R8) ) , D10) ) . R9 ) = ( ( D10 . R6 ) /. B36 ))) by SCMFSA_2:72;
L309: (ex B37 being (Element of ( NAT )) st (B37 = ( abs ( D13 . R8 ) ) & ( ( Exec (( R9 := (R6 , R8) ) , D13) ) . R9 ) = ( ( D13 . R6 ) /. B37 ))) by SCMFSA_2:72;
L310: R8 in ( UsedIntLoc C29 ) by L101 , L302 , L41;
L311: ( D10 . R8 ) = ( ( D13 | D8 ) . R8 ) by L310 , L91 , L96 , FUNCT_1:49
.= ( D13 . R8 ) by L91 , L310 , FUNCT_1:49;
L312: R6 in ( UsedInt*Loc C29 ) by L101 , L302 , L47;
L313: ( D10 . R6 ) = ( ( D13 | D8 ) . R6 ) by L312 , L93 , L96 , FUNCT_1:49
.= ( D13 . R6 ) by L93 , L312 , FUNCT_1:49;
thus L314: ( D11 . C42 ) = ( D14 . C42 ) by L313 , L102 , L103 , L104 , L302 , L307 , L308 , L309 , L311;
end;
suppose L315: C42 <> R9;

L316: ( D14 . C42 ) = ( D13 . C42 ) by L315 , L102 , L104 , L302 , L306 , SCMFSA_2:72;
L317: ( D10 . C42 ) = ( ( D13 | D8 ) . C42 ) by L96 , L305 , FUNCT_1:49
.= ( D13 . C42 ) by L305 , FUNCT_1:49;
thus L318: ( D11 . C42 ) = ( D14 . C42 ) by L317 , L103 , L302 , L306 , L315 , L316 , SCMFSA_2:72;
end;
end;
suppose L320: C42 is FinSeq-Location;

L321: ( D14 . C42 ) = ( D13 . C42 ) by L320 , L102 , L104 , L302 , SCMFSA_2:72;
L322: ( D10 . C42 ) = ( ( D13 | D8 ) . C42 ) by L96 , L305 , FUNCT_1:49
.= ( D13 . C42 ) by L305 , FUNCT_1:49;
thus L323: ( D11 . C42 ) = ( D14 . C42 ) by L322 , L103 , L302 , L320 , L321 , SCMFSA_2:72;
end;
end;
thus L325: S1[ ( C33 + 1 ) ] by L304 , L105 , L303 , FUNCT_1:96;
end;
suppose L326: ( InsCode D12 ) = 10;

consider R8 being Int-Location, R9 being Int-Location, R6 being FinSeq-Location such that L327: D12 = ( (R6 , R8) := R9 ) by L326 , SCMFSA_2:39;
L328: ( D11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC D13 ) ) by L96 , L103 , L327 , SCMFSA_2:73
.= ( D14 . ( IC ( SCM+FSA ) ) ) by L102 , L104 , L327 , SCMFSA_2:73;
L329:
now
let C43 being set;
assume L330: C43 in D8;
per cases  by L85 , L330 , L65;
suppose L331: C43 is FinSeq-Location;

per cases ;
suppose L332: C43 = R6;

L333: (ex B38 being (Element of ( NAT )) st (B38 = ( abs ( D10 . R8 ) ) & ( ( Exec (( (R6 , R8) := R9 ) , D10) ) . R6 ) = ( ( D10 . R6 ) +* (B38 , ( D10 . R9 )) ))) by SCMFSA_2:73;
L334: (ex B39 being (Element of ( NAT )) st (B39 = ( abs ( D13 . R8 ) ) & ( ( Exec (( (R6 , R8) := R9 ) , D13) ) . R6 ) = ( ( D13 . R6 ) +* (B39 , ( D13 . R9 )) ))) by SCMFSA_2:73;
L335: R8 in ( UsedIntLoc C29 ) by L101 , L327 , L41;
L336: ( D10 . R8 ) = ( ( D13 | D8 ) . R8 ) by L335 , L91 , L96 , FUNCT_1:49
.= ( D13 . R8 ) by L91 , L335 , FUNCT_1:49;
L337: R9 in ( UsedIntLoc C29 ) by L101 , L327 , L41;
L338: ( D10 . R9 ) = ( ( D13 | D8 ) . R9 ) by L337 , L91 , L96 , FUNCT_1:49
.= ( D13 . R9 ) by L91 , L337 , FUNCT_1:49;
L339: R6 in ( UsedInt*Loc C29 ) by L101 , L327 , L47;
L340: ( D10 . R6 ) = ( ( D13 | D8 ) . R6 ) by L339 , L93 , L96 , FUNCT_1:49
.= ( D13 . R6 ) by L93 , L339 , FUNCT_1:49;
thus L341: ( D11 . C43 ) = ( D14 . C43 ) by L340 , L102 , L103 , L104 , L327 , L332 , L333 , L334 , L336 , L338;
end;
suppose L342: C43 <> R6;

L343: ( D14 . C43 ) = ( D13 . C43 ) by L342 , L102 , L104 , L327 , L331 , SCMFSA_2:73;
L344: ( D10 . C43 ) = ( ( D13 | D8 ) . C43 ) by L96 , L330 , FUNCT_1:49
.= ( D13 . C43 ) by L330 , FUNCT_1:49;
thus L345: ( D11 . C43 ) = ( D14 . C43 ) by L344 , L103 , L327 , L331 , L342 , L343 , SCMFSA_2:73;
end;
end;
suppose L347: C43 is Int-Location;

L348: ( D14 . C43 ) = ( D13 . C43 ) by L347 , L102 , L104 , L327 , SCMFSA_2:73;
L349: ( D10 . C43 ) = ( ( D13 | D8 ) . C43 ) by L96 , L330 , FUNCT_1:49
.= ( D13 . C43 ) by L330 , FUNCT_1:49;
thus L350: ( D11 . C43 ) = ( D14 . C43 ) by L349 , L103 , L327 , L347 , L348 , SCMFSA_2:73;
end;
end;
thus L352: S1[ ( C33 + 1 ) ] by L329 , L105 , L328 , FUNCT_1:96;
end;
suppose L353: ( InsCode D12 ) = 11;

consider R8 being Int-Location, R6 being FinSeq-Location such that L354: D12 = ( R8 :=len R6 ) by L353 , SCMFSA_2:40;
L355: ( D11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC D13 ) ) by L96 , L103 , L354 , SCMFSA_2:74
.= ( D14 . ( IC ( SCM+FSA ) ) ) by L102 , L104 , L354 , SCMFSA_2:74;
L356:
now
let C44 being set;
assume L357: C44 in D8;
per cases  by L85 , L357 , L65;
suppose L358: C44 is Int-Location;

per cases ;
suppose L359: C44 = R8;

L360: ( D14 . C44 ) = ( len ( D13 . R6 ) ) by L359 , L102 , L104 , L354 , SCMFSA_2:74;
L361: R6 in ( UsedInt*Loc C29 ) by L101 , L354 , L59;
L362: ( D10 . R6 ) = ( ( D13 | D8 ) . R6 ) by L361 , L93 , L96 , FUNCT_1:49
.= ( D13 . R6 ) by L93 , L361 , FUNCT_1:49;
thus L363: ( D11 . C44 ) = ( D14 . C44 ) by L362 , L103 , L354 , L359 , L360 , SCMFSA_2:74;
end;
suppose L364: C44 <> R8;

L365: ( D14 . C44 ) = ( D13 . C44 ) by L364 , L102 , L104 , L354 , L358 , SCMFSA_2:74;
L366: ( D10 . C44 ) = ( ( D13 | D8 ) . C44 ) by L96 , L357 , FUNCT_1:49
.= ( D13 . C44 ) by L357 , FUNCT_1:49;
thus L367: ( D11 . C44 ) = ( D14 . C44 ) by L366 , L103 , L354 , L358 , L364 , L365 , SCMFSA_2:74;
end;
end;
suppose L369: C44 is FinSeq-Location;

L370: ( D14 . C44 ) = ( D13 . C44 ) by L369 , L102 , L104 , L354 , SCMFSA_2:74;
L371: ( D10 . C44 ) = ( ( D13 | D8 ) . C44 ) by L96 , L357 , FUNCT_1:49
.= ( D13 . C44 ) by L357 , FUNCT_1:49;
thus L372: ( D11 . C44 ) = ( D14 . C44 ) by L371 , L103 , L354 , L369 , L370 , SCMFSA_2:74;
end;
end;
thus L374: S1[ ( C33 + 1 ) ] by L356 , L105 , L355 , FUNCT_1:96;
end;
suppose L375: ( InsCode D12 ) = 12;

consider R8 being Int-Location, R6 being FinSeq-Location such that L376: D12 = ( R6 :=<0,...,0> R8 ) by L375 , SCMFSA_2:41;
L377: ( D11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC D13 ) ) by L96 , L103 , L376 , SCMFSA_2:75
.= ( D14 . ( IC ( SCM+FSA ) ) ) by L102 , L104 , L376 , SCMFSA_2:75;
L378:
now
let C45 being set;
assume L379: C45 in D8;
per cases  by L85 , L379 , L65;
suppose L380: C45 is FinSeq-Location;

per cases ;
suppose L381: C45 = R6;

L382: (ex B40 being (Element of ( NAT )) st (B40 = ( abs ( D10 . R8 ) ) & ( ( Exec (( R6 :=<0,...,0> R8 ) , D10) ) . R6 ) = ( B40 |-> ( 0 ) ))) by SCMFSA_2:75;
L383: (ex B41 being (Element of ( NAT )) st (B41 = ( abs ( D13 . R8 ) ) & ( ( Exec (( R6 :=<0,...,0> R8 ) , D13) ) . R6 ) = ( B41 |-> ( 0 ) ))) by SCMFSA_2:75;
L384: R8 in ( UsedIntLoc C29 ) by L101 , L376 , L53;
L385: ( D10 . R8 ) = ( ( D13 | D8 ) . R8 ) by L384 , L91 , L96 , FUNCT_1:49
.= ( D13 . R8 ) by L91 , L384 , FUNCT_1:49;
thus L386: ( D11 . C45 ) = ( D14 . C45 ) by L385 , L102 , L103 , L104 , L376 , L381 , L382 , L383;
end;
suppose L387: C45 <> R6;

L388: ( D14 . C45 ) = ( D13 . C45 ) by L387 , L102 , L104 , L376 , L380 , SCMFSA_2:75;
L389: ( D10 . C45 ) = ( ( D13 | D8 ) . C45 ) by L96 , L379 , FUNCT_1:49
.= ( D13 . C45 ) by L379 , FUNCT_1:49;
thus L390: ( D11 . C45 ) = ( D14 . C45 ) by L389 , L103 , L376 , L380 , L387 , L388 , SCMFSA_2:75;
end;
end;
suppose L392: C45 is Int-Location;

L393: ( D14 . C45 ) = ( D13 . C45 ) by L392 , L102 , L104 , L376 , SCMFSA_2:75;
L394: ( D10 . C45 ) = ( ( D13 | D8 ) . C45 ) by L96 , L379 , FUNCT_1:49
.= ( D13 . C45 ) by L379 , FUNCT_1:49;
thus L395: ( D11 . C45 ) = ( D14 . C45 ) by L394 , L103 , L376 , L392 , L393 , SCMFSA_2:75;
end;
end;
thus L397: S1[ ( C33 + 1 ) ] by L378 , L105 , L377 , FUNCT_1:96;
end;
end;
L399: (for B42 being (Element of ( NAT )) holds S1[ B42 ]) from NAT_1:sch 1(L94 , L95);
thus L400: thesis by L399 , L90;
end;
theorem
L401: (for R14 being (Instruction-Sequence of ( SCM+FSA )) holds (for R15 being (Instruction-Sequence of ( SCM+FSA )) holds (for B43 , B44 being (Element of ( NAT )) holds (for B45 being (Program of ( SCM+FSA )) holds (for B46 , B47 being (State of ( SCM+FSA )) holds ((B44 <= B43 & B45 c= R14 & B45 c= R15 & (for R4 being (Element of ( NAT )) holds (( IC ( Comput (R14 , B46 , R4) ) ) in ( dom B45 ) & ( IC ( Comput (R15 , B47 , R4) ) ) in ( dom B45 ))) & ( ( Comput (R14 , B46 , B44) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (R15 , B47 , B44) ) . ( IC ( SCM+FSA ) ) ) & ( ( Comput (R14 , B46 , B44) ) | ( ( UsedInt*Loc B45 ) \/ ( UsedIntLoc B45 ) ) ) = ( ( Comput (R15 , B47 , B44) ) | ( ( UsedInt*Loc B45 ) \/ ( UsedIntLoc B45 ) ) )) implies (( ( Comput (R14 , B46 , B43) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (R15 , B47 , B43) ) . ( IC ( SCM+FSA ) ) ) & ( ( Comput (R14 , B46 , B43) ) | ( ( UsedInt*Loc B45 ) \/ ( UsedIntLoc B45 ) ) ) = ( ( Comput (R15 , B47 , B43) ) | ( ( UsedInt*Loc B45 ) \/ ( UsedIntLoc B45 ) ) ))))))))
proof
let R14 being (Instruction-Sequence of ( SCM+FSA ));
let R15 being (Instruction-Sequence of ( SCM+FSA ));
let C46 , C47 being (Element of ( NAT ));
let C48 being (Program of ( SCM+FSA ));
let C49 , C50 being (State of ( SCM+FSA ));
set D16 = ( ( UsedInt*Loc C48 ) \/ ( UsedIntLoc C48 ) );
assume that
L402: C47 <= C46
and
L403: C48 c= R14
and
L404: C48 c= R15
and
L405: (for R4 being (Element of ( NAT )) holds (( IC ( Comput (R14 , C49 , R4) ) ) in ( dom C48 ) & ( IC ( Comput (R15 , C50 , R4) ) ) in ( dom C48 )))
and
L406: ( ( Comput (R14 , C49 , C47) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (R15 , C50 , C47) ) . ( IC ( SCM+FSA ) ) )
and
L407: ( ( Comput (R14 , C49 , C47) ) | D16 ) = ( ( Comput (R15 , C50 , C47) ) | D16 );
reconsider D17 = ( {} ) as (PartState of ( SCM+FSA )) by FUNCT_1:104 , RELAT_1:171;
set D18 = ( ( ( dom D17 ) \/ ( UsedInt*Loc C48 ) ) \/ ( UsedIntLoc C48 ) );
L408: ( dom D17 ) c= ( ( Int-Locations ) \/ ( FinSeq-Locations ) ) by RELAT_1:38 , XBOOLE_1:2;
L409: D18 = D16 by RELAT_1:38;
thus L410: ( ( Comput (R14 , C49 , C46) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (R15 , C50 , C46) ) . ( IC ( SCM+FSA ) ) ) by L409 , L402 , L403 , L404 , L405 , L406 , L407 , L408 , L81;
thus L411: thesis by L402 , L403 , L404 , L405 , L406 , L407 , L408 , L409 , L81;
end;
theorem
L412: (for B48 , B49 being (Program of ( SCM+FSA )) holds (for B50 being Int-Location holds (( UsedIntLoc ( if=0 (B50 , B48 , B49) ) ) = ( ( { B50 } \/ ( UsedIntLoc B48 ) ) \/ ( UsedIntLoc B49 ) ) & ( UsedIntLoc ( if>0 (B50 , B48 , B49) ) ) = ( ( { B50 } \/ ( UsedIntLoc B48 ) ) \/ ( UsedIntLoc B49 ) ))))
proof
let C51 , C52 being (Program of ( SCM+FSA ));
let C53 being Int-Location;
set D19 = ( C53 =0_goto ( ( card C52 ) + 3 ) );
set D20 = ( Goto ( ( card C51 ) + 1 ) );
set D21 = ( C53 >0_goto ( ( card C52 ) + 3 ) );
set D22 = ( Stop ( SCM+FSA ) );
thus L413: ( UsedIntLoc ( if=0 (C53 , C51 , C52) ) ) = ( UsedIntLoc ( ( ( ( D19 ";" C52 ) ";" D20 ) ";" C51 ) ";" D22 ) ) by SCMFSA8B:def 1
.= ( ( UsedIntLoc ( ( ( D19 ";" C52 ) ";" D20 ) ";" C51 ) ) \/ ( {} ) ) by SCMFSA9A:3 , SF_MASTR:27
.= ( ( UsedIntLoc ( ( D19 ";" C52 ) ";" D20 ) ) \/ ( UsedIntLoc C51 ) ) by SF_MASTR:27
.= ( ( ( UsedIntLoc ( D19 ";" C52 ) ) \/ ( UsedIntLoc D20 ) ) \/ ( UsedIntLoc C51 ) ) by SF_MASTR:27
.= ( ( ( UsedIntLoc ( D19 ";" C52 ) ) \/ ( {} ) ) \/ ( UsedIntLoc C51 ) ) by SCMFSA9A:5
.= ( ( ( UsedIntLoc D19 ) \/ ( UsedIntLoc C52 ) ) \/ ( UsedIntLoc C51 ) ) by SF_MASTR:29
.= ( ( { C53 } \/ ( UsedIntLoc C52 ) ) \/ ( UsedIntLoc C51 ) ) by SF_MASTR:16
.= ( ( { C53 } \/ ( UsedIntLoc C51 ) ) \/ ( UsedIntLoc C52 ) ) by XBOOLE_1:4;
thus L414: ( UsedIntLoc ( if>0 (C53 , C51 , C52) ) ) = ( UsedIntLoc ( ( ( ( D21 ";" C52 ) ";" D20 ) ";" C51 ) ";" D22 ) ) by SCMFSA8B:def 2
.= ( ( UsedIntLoc ( ( ( D21 ";" C52 ) ";" D20 ) ";" C51 ) ) \/ ( {} ) ) by SCMFSA9A:3 , SF_MASTR:27
.= ( ( UsedIntLoc ( ( D21 ";" C52 ) ";" D20 ) ) \/ ( UsedIntLoc C51 ) ) by SF_MASTR:27
.= ( ( ( UsedIntLoc ( D21 ";" C52 ) ) \/ ( UsedIntLoc D20 ) ) \/ ( UsedIntLoc C51 ) ) by SF_MASTR:27
.= ( ( ( UsedIntLoc ( D21 ";" C52 ) ) \/ ( {} ) ) \/ ( UsedIntLoc C51 ) ) by SCMFSA9A:5
.= ( ( ( UsedIntLoc D21 ) \/ ( UsedIntLoc C52 ) ) \/ ( UsedIntLoc C51 ) ) by SF_MASTR:29
.= ( ( { C53 } \/ ( UsedIntLoc C52 ) ) \/ ( UsedIntLoc C51 ) ) by SF_MASTR:16
.= ( ( { C53 } \/ ( UsedIntLoc C51 ) ) \/ ( UsedIntLoc C52 ) ) by XBOOLE_1:4;
end;
theorem
L415: (for B51 being (Program of ( SCM+FSA )) holds (for B52 being (Element of ( NAT )) holds ( UsedIntLoc ( Directed (B51 , B52) ) ) = ( UsedIntLoc B51 )))
proof
let C54 being (Program of ( SCM+FSA ));
let C55 being (Element of ( NAT ));
consider C56 being (Function of (the InstructionsF of ( SCM+FSA )) , ( Fin ( Int-Locations ) )) such that L416: (for B53 being (Instruction of ( SCM+FSA )) holds ( C56 . B53 ) = ( UsedIntLoc B53 )) and L417: ( UsedIntLoc C54 ) = ( Union ( C56 * C54 ) ) by SF_MASTR:def 2;
consider C57 being (Function of (the InstructionsF of ( SCM+FSA )) , ( Fin ( Int-Locations ) )) such that L418: (for B54 being (Instruction of ( SCM+FSA )) holds ( C57 . B54 ) = ( UsedIntLoc B54 )) and L419: ( UsedIntLoc ( Directed (C54 , C55) ) ) = ( Union ( C57 * ( Directed (C54 , C55) ) ) ) by SF_MASTR:def 2;
L420: (for B55 being (Element of (the InstructionsF of ( SCM+FSA ))) holds ( C56 . B55 ) = ( C57 . B55 ))
proof
let C58 being (Element of (the InstructionsF of ( SCM+FSA )));
reconsider D23 = C58 as (Instruction of ( SCM+FSA ));
thus L421: ( C56 . C58 ) = ( UsedIntLoc D23 ) by L416
.= ( C57 . C58 ) by L418;
end;
L422: ( dom C56 ) = (the InstructionsF of ( SCM+FSA )) by FUNCT_2:def 1;
L423: ( C56 . ( halt ( SCM+FSA ) ) ) = ( {} ) by L416 , SF_MASTR:13;
L424: ( C56 . ( goto C55 ) ) = ( UsedIntLoc ( goto C55 ) ) by L416
.= ( {} ) by SF_MASTR:15;
L425: ( rng C54 ) c= (the InstructionsF of ( SCM+FSA )) by RELAT_1:def 19;
L426: ( C56 * ( Directed (C54 , C55) ) ) = ( C56 * ( C54 +~ (( halt ( SCM+FSA ) ) , ( goto C55 )) ) ) by SCMFSA6A:def 1
.= ( C56 * ( ( ( id (the InstructionsF of ( SCM+FSA )) ) +* (( halt ( SCM+FSA ) ) , ( goto C55 )) ) * C54 ) ) by L425 , FUNCT_7:116
.= ( ( C56 * ( ( id (the InstructionsF of ( SCM+FSA )) ) +* (( halt ( SCM+FSA ) ) , ( goto C55 )) ) ) * C54 ) by RELAT_1:36
.= ( C56 * C54 ) by L422 , L423 , L424 , FUNCT_7:108;
thus L427: thesis by L426 , L417 , L419 , L420 , FUNCT_2:63;
end;
theorem
L428: (for B56 being Int-Location holds (for B57 being (Program of ( SCM+FSA )) holds ( UsedIntLoc ( Times (B56 , B57) ) ) = ( ( UsedIntLoc B57 ) \/ { B56 , ( intloc ( 0 ) ) } )))
proof
let C59 being Int-Location;
let C60 being (Program of ( SCM+FSA ));
set D24 = ( Goto 2 );
set D25 = ( SubFrom (C59 , ( intloc ( 0 ) )) );
set D26 = ( if=0 (C59 , D24 , ( C60 ";" D25 )) );
thus L429: ( UsedIntLoc ( Times (C59 , C60) ) ) = ( ( { C59 } \/ ( UsedIntLoc ( loop D26 ) ) ) \/ ( {} ) ) by L412 , SCMFSA9A:3
.= ( { C59 } \/ ( UsedIntLoc D26 ) ) by L415
.= ( { C59 } \/ ( ( { C59 } \/ ( UsedIntLoc D24 ) ) \/ ( UsedIntLoc ( C60 ";" D25 ) ) ) ) by L412
.= ( { C59 } \/ ( ( { C59 } \/ ( {} ) ) \/ ( UsedIntLoc ( C60 ";" D25 ) ) ) ) by SCMFSA9A:5
.= ( ( { C59 } \/ { C59 } ) \/ ( UsedIntLoc ( C60 ";" D25 ) ) ) by XBOOLE_1:4
.= ( ( ( UsedIntLoc C60 ) \/ ( UsedIntLoc D25 ) ) \/ { C59 } ) by SF_MASTR:30
.= ( ( ( UsedIntLoc C60 ) \/ { C59 , ( intloc ( 0 ) ) } ) \/ { C59 } ) by SF_MASTR:14
.= ( ( UsedIntLoc C60 ) \/ ( { C59 } \/ { C59 , ( intloc ( 0 ) ) } ) ) by XBOOLE_1:4
.= ( ( UsedIntLoc C60 ) \/ { C59 , C59 , ( intloc ( 0 ) ) } ) by ENUMSET1:2
.= ( ( UsedIntLoc C60 ) \/ { C59 , ( intloc ( 0 ) ) } ) by ENUMSET1:30;
end;
theorem
L430: (for B58 being (Program of ( SCM+FSA )) holds (for B59 being (Element of ( NAT )) holds ( UsedInt*Loc ( Directed (B58 , B59) ) ) = ( UsedInt*Loc B58 )))
proof
let C61 being (Program of ( SCM+FSA ));
let C62 being (Element of ( NAT ));
consider C63 being (Function of (the InstructionsF of ( SCM+FSA )) , ( Fin ( FinSeq-Locations ) )) such that L431: (for B60 being (Instruction of ( SCM+FSA )) holds ( C63 . B60 ) = ( UsedInt*Loc B60 )) and L432: ( UsedInt*Loc C61 ) = ( Union ( C63 * C61 ) ) by SF_MASTR:def 4;
consider C64 being (Function of (the InstructionsF of ( SCM+FSA )) , ( Fin ( FinSeq-Locations ) )) such that L433: (for B61 being (Instruction of ( SCM+FSA )) holds ( C64 . B61 ) = ( UsedInt*Loc B61 )) and L434: ( UsedInt*Loc ( Directed (C61 , C62) ) ) = ( Union ( C64 * ( Directed (C61 , C62) ) ) ) by SF_MASTR:def 4;
L435: (for B62 being (Element of (the InstructionsF of ( SCM+FSA ))) holds ( C63 . B62 ) = ( C64 . B62 ))
proof
let C65 being (Element of (the InstructionsF of ( SCM+FSA )));
reconsider D27 = C65 as (Instruction of ( SCM+FSA ));
thus L436: ( C63 . C65 ) = ( UsedInt*Loc D27 ) by L431
.= ( C64 . C65 ) by L433;
end;
L437: ( dom C63 ) = (the InstructionsF of ( SCM+FSA )) by FUNCT_2:def 1;
L438: ( C63 . ( halt ( SCM+FSA ) ) ) = ( UsedInt*Loc ( halt ( SCM+FSA ) ) ) by L431
.= ( {} ) by SF_MASTR:32;
L439: ( C63 . ( goto C62 ) ) = ( UsedInt*Loc ( goto C62 ) ) by L431
.= ( {} ) by SF_MASTR:32;
L440: ( rng C61 ) c= (the InstructionsF of ( SCM+FSA )) by RELAT_1:def 19;
L441: ( C63 * ( Directed (C61 , C62) ) ) = ( C63 * ( C61 +~ (( halt ( SCM+FSA ) ) , ( goto C62 )) ) ) by SCMFSA6A:def 1
.= ( C63 * ( ( ( id (the InstructionsF of ( SCM+FSA )) ) +* (( halt ( SCM+FSA ) ) , ( goto C62 )) ) * C61 ) ) by L440 , FUNCT_7:116
.= ( ( C63 * ( ( id (the InstructionsF of ( SCM+FSA )) ) +* (( halt ( SCM+FSA ) ) , ( goto C62 )) ) ) * C61 ) by RELAT_1:36
.= ( C63 * C61 ) by L437 , L438 , L439 , FUNCT_7:108;
thus L442: thesis by L441 , L432 , L434 , L435 , FUNCT_2:63;
end;
theorem
L443: (for B63 being Int-Location holds (for B64 being (Program of ( SCM+FSA )) holds ( UsedInt*Loc ( Times (B63 , B64) ) ) = ( UsedInt*Loc B64 )))
proof
let C66 being Int-Location;
let C67 being (Program of ( SCM+FSA ));
set D28 = ( Goto 2 );
set D29 = ( SubFrom (C66 , ( intloc ( 0 ) )) );
set D30 = ( if=0 (C66 , D28 , ( C67 ";" D29 )) );
thus L444: ( UsedInt*Loc ( Times (C66 , C67) ) ) = ( ( UsedInt*Loc ( loop D30 ) ) \/ ( {} ) ) by SCMFSA9A:4 , SCMFSA9A:10
.= ( UsedInt*Loc D30 ) by L430
.= ( ( UsedInt*Loc D28 ) \/ ( UsedInt*Loc ( C67 ";" D29 ) ) ) by SCMFSA9A:8
.= ( ( {} ) \/ ( UsedInt*Loc ( C67 ";" D29 ) ) ) by SCMFSA9A:6
.= ( ( UsedInt*Loc C67 ) \/ ( UsedInt*Loc D29 ) ) by SF_MASTR:46
.= ( ( UsedInt*Loc C67 ) \/ ( {} ) ) by SF_MASTR:32
.= ( UsedInt*Loc C67 );
end;
canceled 1;
theorem
L445: (for B65 being Int-Location holds (for B66 being (Program of ( SCM+FSA )) holds ( card ( Times (B65 , B66) ) ) = ( ( card B66 ) + 12 )))
proof
let C68 being Int-Location;
let C69 being (Program of ( SCM+FSA ));
set D31 = ( Goto 2 );
set D32 = ( SubFrom (C68 , ( intloc ( 0 ) )) );
set D33 = ( if=0 (C68 , D31 , ( C69 ";" D32 )) );
L446: ( card ( Stop ( SCM+FSA ) ) ) = 1 by COMPOS_1:4;
thus L447: ( card ( Times (C68 , C69) ) ) = ( ( ( card ( loop D33 ) ) + 1 ) + 4 ) by L446 , SCMFSA8B:12
.= ( ( card ( loop D33 ) ) + ( 1 + 4 ) )
.= ( ( card D33 ) + 5 ) by SCMFSA8A:19
.= ( ( ( ( card ( C69 ";" D32 ) ) + ( card D31 ) ) + 4 ) + 5 ) by SCMFSA8B:11
.= ( ( ( ( card ( C69 ";" D32 ) ) + 1 ) + 4 ) + 5 ) by SCMFSA8A:15
.= ( ( ( ( ( card C69 ) + 2 ) + 1 ) + 4 ) + 5 ) by SCMFSA6A:34
.= ( ( card C69 ) + 12 );
end;
theorem
L448: (for B67 , B68 , B69 being (Instruction of ( SCM+FSA )) holds ( card ( ( B67 ";" B68 ) ";" B69 ) ) = 6)
proof
let C70 , C71 , C72 being (Instruction of ( SCM+FSA ));
thus L449: ( card ( ( C70 ";" C71 ) ";" C72 ) ) = ( ( card ( C70 ";" C71 ) ) + 2 ) by SCMFSA6A:34
.= ( 4 + 2 ) by SCMFSA6A:35
.= 6;
end;
canceled 2;
theorem
L450: (for B70 , B71 being (Program of ( SCM+FSA )) holds (for B72 being (Element of ( NAT )) holds (for B73 being (Instruction of ( SCM+FSA )) holds ((B72 < ( card B71 ) & B73 = ( B71 . B72 )) implies ( ( B70 ";" B71 ) . ( ( card B70 ) + B72 ) ) = ( IncAddr (B73 , ( card B70 )) )))))
proof
let C73 , C74 being (Program of ( SCM+FSA ));
let C75 being (Element of ( NAT ));
let C76 being (Instruction of ( SCM+FSA ));
assume that
L451: C75 < ( card C74 )
and
L452: C76 = ( C74 . C75 );
set D34 = ( ( card C73 ) + C75 );
L453: D34 < ( ( card C73 ) + ( card C74 ) ) by L451 , XREAL_1:6;
L454: ( D34 -' ( card C73 ) ) = C75 by NAT_D:34;
thus L455: thesis by L454 , L452 , L453 , NAT_1:11 , SCMFSA8C:2;
end;
theorem
L456: (for B74 , B75 being (Program of ( SCM+FSA )) holds (for B76 being  ins-loc-free (Instruction of ( SCM+FSA )) holds (B76 <> ( halt ( SCM+FSA ) ) implies ( ( ( B74 ";" B76 ) ";" B75 ) . ( card B74 ) ) = B76)))
proof
let C77 , C78 being (Program of ( SCM+FSA ));
let C79 being  ins-loc-free (Instruction of ( SCM+FSA ));
assume that
L457: C79 <> ( halt ( SCM+FSA ) );
set D35 = ( card C77 );
L458: ( card ( C77 ";" C79 ) ) = ( ( card C77 ) + 2 ) by SCMFSA6A:34;
L459: ( ( card C77 ) + ( 0 ) ) < ( ( card C77 ) + 2 ) by XREAL_1:6;
L460: D35 in ( dom ( C77 ";" C79 ) ) by L459 , L458 , AFINSQ_1:66;
L461: ( ( Macro C79 ) . ( 0 ) ) = C79 by COMPOS_1:58;
L462: ( card ( Macro C79 ) ) = 2 by COMPOS_1:56;
L463: ( ( C77 ";" C79 ) . D35 ) = ( ( C77 ";" ( Macro C79 ) ) . ( ( card C77 ) + ( 0 ) ) ) by SCMFSA6A:def 6
.= ( IncAddr (C79 , ( card C77 )) ) by L461 , L462 , L450
.= C79 by COMPOS_0:4;
thus L464: ( ( ( C77 ";" C79 ) ";" C78 ) . D35 ) = ( ( Directed ( C77 ";" C79 ) ) . D35 ) by L460 , SCMFSA8A:14
.= C79 by L457 , L460 , L463 , SCMFSA8A:16;
end;
theorem
L465: (for B77 , B78 being (Program of ( SCM+FSA )) holds (for B79 being (Instruction of ( SCM+FSA )) holds ( ( ( B77 ";" B79 ) ";" B78 ) . ( ( card B77 ) + 1 ) ) = ( goto ( ( card B77 ) + 2 ) )))
proof
let C80 , C81 being (Program of ( SCM+FSA ));
let C82 being (Instruction of ( SCM+FSA ));
set D36 = ( card C80 );
L466: ( card ( C80 ";" C82 ) ) = ( ( card C80 ) + 2 ) by SCMFSA6A:34;
L467: ( card ( Macro C82 ) ) = 2 by COMPOS_1:56;
set D37 = ( ( card C80 ) + 1 );
L468: ( ( card C80 ) + 1 ) < ( ( card C80 ) + 2 ) by XREAL_1:6;
L469: D37 in ( dom ( C80 ";" C82 ) ) by L468 , L466 , AFINSQ_1:66;
L470: ( ( Macro C82 ) . 1 ) = ( halt ( SCM+FSA ) ) by COMPOS_1:59;
L471: ( ( C80 ";" ( Macro C82 ) ) . D37 ) = ( IncAddr (( halt ( SCM+FSA ) ) , ( card C80 )) ) by L470 , L467 , L450;
L472: ( ( C80 ";" C82 ) . D37 ) = ( IncAddr (( halt ( SCM+FSA ) ) , ( card C80 )) ) by L471 , SCMFSA6A:def 6
.= ( halt ( SCM+FSA ) ) by COMPOS_0:4;
thus L473: ( ( ( C80 ";" C82 ) ";" C81 ) . D37 ) = ( ( Directed ( C80 ";" C82 ) ) . D37 ) by L469 , SCMFSA8A:14
.= ( goto ( ( card C80 ) + 2 ) ) by L466 , L469 , L472 , SCMFSA8A:16;
end;
canceled 3;
theorem
L474: (for B80 being (Program of ( SCM+FSA )) holds (for B81 being (State of ( SCM+FSA )) holds ( ( UsedInt*Loc B80 ) \/ ( UsedIntLoc B80 ) ) c= ( dom B81 )))
proof
let C83 being (Program of ( SCM+FSA ));
let C84 being (State of ( SCM+FSA ));
L475: ( Int-Locations ) c= ( dom C84 ) by SCMFSA_2:45;
L476: ( UsedIntLoc C83 ) c= ( dom C84 ) by L475 , XBOOLE_1:1;
L477: ( FinSeq-Locations ) c= ( dom C84 ) by SCMFSA_2:46;
L478: ( UsedInt*Loc C83 ) c= ( dom C84 ) by L477 , XBOOLE_1:1;
thus L479: thesis by L478 , L476 , XBOOLE_1:8;
end;
theorem
L480: (for B82 being (Instruction-Sequence of ( SCM+FSA )) holds (for B83 being (State of ( SCM+FSA )) holds (for B84 being (Program of ( SCM+FSA )) holds (for B85 being FinSeq-Location holds ( ( Result (( B82 +* B84 ) , ( Initialized B83 )) ) . B85 ) = ( ( IExec (B84 , B82 , B83) ) . B85 )))))
proof
let C85 being (Instruction-Sequence of ( SCM+FSA ));
let C86 being (State of ( SCM+FSA ));
let C87 being (Program of ( SCM+FSA ));
let C88 being FinSeq-Location;
set D38 = ( ( Int-Locations ) \/ ( FinSeq-Locations ) );
L481: C88 in ( FinSeq-Locations ) by SCMFSA_2:def 5;
L482: C88 in D38 by L481 , XBOOLE_0:def 3;
thus L483: ( ( Result (( C85 +* C87 ) , ( Initialized C86 )) ) . C88 ) = ( ( DataPart ( Result (( C85 +* C87 ) , ( Initialized C86 )) ) ) . C88 ) by L482 , FUNCT_1:49 , SCMFSA_2:100
.= ( ( DataPart ( IExec (C87 , C85 , C86) ) ) . C88 ) by SCMFSA8B:32
.= ( ( IExec (C87 , C85 , C86) ) . C88 ) by L482 , FUNCT_1:49 , SCMFSA_2:100;
end;
set D39 = ( intloc ( 0 ) );
set D40 = ( intloc 1 );
set D41 = ( intloc 2 );
set D42 = ( intloc 3 );
set D43 = ( intloc 4 );
set D44 = ( intloc 5 );
set D45 = ( intloc 6 );
L484: D39 <> D41 by SCMFSA_2:101;
L485: D39 <> D43 by SCMFSA_2:101;
L486: D39 <> D44 by SCMFSA_2:101;
L487: D39 <> D45 by SCMFSA_2:101;
L488: D40 <> D41 by SCMFSA_2:101;
L489: D40 <> D42 by SCMFSA_2:101;
L490: D40 <> D43 by SCMFSA_2:101;
L491: D40 <> D44 by SCMFSA_2:101;
L492: D40 <> D45 by SCMFSA_2:101;
L493: D41 <> D42 by SCMFSA_2:101;
L494: D41 <> D43 by SCMFSA_2:101;
L495: D41 <> D44 by SCMFSA_2:101;
L496: D41 <> D45 by SCMFSA_2:101;
L497: D42 <> D43 by SCMFSA_2:101;
L498: D42 <> D44 by SCMFSA_2:101;
L499: D42 <> D45 by SCMFSA_2:101;
L500: D43 <> D44 by SCMFSA_2:101;
L501: D43 <> D45 by SCMFSA_2:101;
L502: D44 <> D45 by SCMFSA_2:101;
set D46 = ( ( ( ( ( D41 := D39 ) ";" ( D42 := D39 ) ) ";" ( D43 := D39 ) ) ";" ( D44 := D39 ) ) ";" ( D45 := D39 ) );
definition
let C89 being FinSeq-Location;
func bubble-sort C89 -> (Program of ( SCM+FSA )) equals 
( ( ( ( ( ( ( ( intloc 2 ) := ( intloc ( 0 ) ) ) ";" ( ( intloc 3 ) := ( intloc ( 0 ) ) ) ) ";" ( ( intloc 4 ) := ( intloc ( 0 ) ) ) ) ";" ( ( intloc 5 ) := ( intloc ( 0 ) ) ) ) ";" ( ( intloc 6 ) := ( intloc ( 0 ) ) ) ) ";" ( ( intloc 1 ) :=len C89 ) ) ";" ( Times (( intloc 1 ) , ( ( ( ( ( intloc 2 ) := ( intloc 1 ) ) ";" ( SubFrom (( intloc 2 ) , ( intloc ( 0 ) )) ) ) ";" ( ( intloc 3 ) :=len C89 ) ) ";" ( Times (( intloc 2 ) , ( ( ( ( ( ( ( intloc 4 ) := ( intloc 3 ) ) ";" ( SubFrom (( intloc 3 ) , ( intloc ( 0 ) )) ) ) ";" ( ( intloc 5 ) := (C89 , ( intloc 3 )) ) ) ";" ( ( intloc 6 ) := (C89 , ( intloc 4 )) ) ) ";" ( SubFrom (( intloc 6 ) , ( intloc 5 )) ) ) ";" ( if>0 (( intloc 6 ) , ( ( ( ( intloc 6 ) := (C89 , ( intloc 4 )) ) ";" ( (C89 , ( intloc 3 )) := ( intloc 6 ) ) ) ";" ( (C89 , ( intloc 4 )) := ( intloc 5 ) ) ) , ( Stop ( SCM+FSA ) )) ) )) ) )) ) );
correctness;
end;
definition
func Bubble-Sort-Algorithm -> (Program of ( SCM+FSA )) equals 
( bubble-sort ( fsloc ( 0 ) ) );
coherence;
end;
set D47 = ( intloc ( ( 0 ) + 1 ) );
set D48 = ( intloc ( 1 + 1 ) );
set D49 = ( intloc ( 2 + 1 ) );
set D50 = ( intloc ( 3 + 1 ) );
set D51 = ( intloc ( 4 + 1 ) );
set D52 = ( intloc ( 5 + 1 ) );
set D53 = ( fsloc ( 0 ) );
set D54 = ( D50 := D49 );
set D55 = ( SubFrom (D49 , D39) );
set D56 = ( D51 := (D53 , D49) );
set D57 = ( D52 := (D53 , D50) );
set D58 = ( SubFrom (D52 , D51) );
set D59 = ( (D53 , D49) := D52 );
set D60 = ( (D53 , D50) := D51 );
set D61 = ( Stop ( SCM+FSA ) );
set D62 = ( if>0 (D52 , ( ( D57 ";" D59 ) ";" D60 ) , D61) );
set D63 = ( ( ( ( ( D54 ";" D55 ) ";" D56 ) ";" D57 ) ";" D58 ) ";" D62 );
set D64 = ( Times (D48 , D63) );
set D65 = ( D48 := D47 );
set D66 = ( SubFrom (D48 , D39) );
set D67 = ( D49 :=len D53 );
set D68 = ( ( D65 ";" D66 ) ";" D67 );
set D69 = ( D68 ";" D64 );
set D70 = ( Times (D47 , D69) );
set D71 = ( D48 := D39 );
set D72 = ( D49 := D39 );
set D73 = ( D50 := D39 );
set D74 = ( D51 := D39 );
set D75 = ( D52 := D39 );
set D76 = ( D47 :=len D53 );
theorem
L505: (for B86 being FinSeq-Location holds ( UsedIntLoc ( bubble-sort B86 ) ) = { ( intloc ( 0 ) ) , ( intloc 1 ) , ( intloc 2 ) , ( intloc 3 ) , ( intloc 4 ) , ( intloc 5 ) , ( intloc 6 ) })
proof
let C90 being FinSeq-Location;
set D77 = ( D43 := D42 );
set D78 = ( SubFrom (D42 , D39) );
set D79 = ( D44 := (C90 , D42) );
set D80 = ( D45 := (C90 , D43) );
set D81 = ( SubFrom (D45 , D44) );
set D82 = ( (C90 , D42) := D45 );
set D83 = ( (C90 , D43) := D44 );
set D84 = ( if>0 (D45 , ( ( D80 ";" D82 ) ";" D83 ) , ( Stop ( SCM+FSA ) )) );
set D85 = ( UsedIntLoc D84 );
set D86 = ( ( ( ( ( D77 ";" D78 ) ";" D79 ) ";" D80 ) ";" D81 ) ";" D84 );
L506: D85 = ( ( { D45 } \/ ( UsedIntLoc ( ( D80 ";" D82 ) ";" D83 ) ) ) \/ ( {} ) ) by L412 , SCMFSA9A:3
.= ( { D45 } \/ ( ( UsedIntLoc ( D80 ";" D82 ) ) \/ ( UsedIntLoc D83 ) ) ) by SF_MASTR:30
.= ( { D45 } \/ ( ( UsedIntLoc ( D80 ";" D82 ) ) \/ { D43 , D44 } ) ) by SF_MASTR:17
.= ( { D45 } \/ ( ( ( UsedIntLoc D80 ) \/ ( UsedIntLoc D82 ) ) \/ { D43 , D44 } ) ) by SF_MASTR:31
.= ( { D45 } \/ ( ( ( UsedIntLoc D80 ) \/ { D42 , D45 } ) \/ { D43 , D44 } ) ) by SF_MASTR:17
.= ( { D45 } \/ ( ( { D43 , D45 } \/ { D42 , D45 } ) \/ { D43 , D44 } ) ) by SF_MASTR:17
.= ( { D45 } \/ ( { D43 , D45 , D42 , D45 } \/ { D43 , D44 } ) ) by ENUMSET1:5
.= ( { D45 } \/ ( { D45 , D45 , D42 , D43 } \/ { D43 , D44 } ) ) by ENUMSET1:75
.= ( ( { D45 } \/ { D45 , D45 , D42 , D43 } ) \/ { D43 , D44 } ) by XBOOLE_1:4
.= ( { D45 , D45 , D45 , D42 , D43 } \/ { D43 , D44 } ) by ENUMSET1:7
.= ( { D45 , D42 , D43 } \/ { D43 , D44 } ) by ENUMSET1:38
.= ( ( { D45 , D42 } \/ { D43 } ) \/ { D43 , D44 } ) by ENUMSET1:3
.= ( { D45 , D42 } \/ ( { D43 } \/ { D43 , D44 } ) ) by XBOOLE_1:4
.= ( { D45 , D42 } \/ { D43 , D43 , D44 } ) by ENUMSET1:2
.= ( { D43 , D44 } \/ { D45 , D42 } ) by ENUMSET1:30
.= { D43 , D44 , D45 , D42 } by ENUMSET1:5
.= { D43 , D42 , D45 , D44 } by ENUMSET1:64;
set D87 = ( UsedIntLoc ( D77 ";" D78 ) );
L507: ( UsedIntLoc D86 ) = ( ( UsedIntLoc ( ( ( ( D77 ";" D78 ) ";" D79 ) ";" D80 ) ";" D81 ) ) \/ D85 ) by SF_MASTR:27
.= ( ( ( UsedIntLoc ( ( ( D77 ";" D78 ) ";" D79 ) ";" D80 ) ) \/ ( UsedIntLoc D81 ) ) \/ D85 ) by SF_MASTR:30
.= ( ( ( UsedIntLoc ( ( ( D77 ";" D78 ) ";" D79 ) ";" D80 ) ) \/ { D45 , D44 } ) \/ D85 ) by SF_MASTR:14
.= ( ( ( ( UsedIntLoc ( ( D77 ";" D78 ) ";" D79 ) ) \/ ( UsedIntLoc D80 ) ) \/ { D45 , D44 } ) \/ D85 ) by SF_MASTR:30
.= ( ( ( ( UsedIntLoc ( ( D77 ";" D78 ) ";" D79 ) ) \/ { D45 , D43 } ) \/ { D45 , D44 } ) \/ D85 ) by SF_MASTR:17
.= ( ( ( ( D87 \/ ( UsedIntLoc D79 ) ) \/ { D45 , D43 } ) \/ { D45 , D44 } ) \/ D85 ) by SF_MASTR:30
.= ( ( ( ( D87 \/ { D44 , D42 } ) \/ { D45 , D43 } ) \/ { D45 , D44 } ) \/ D85 ) by SF_MASTR:17
.= ( ( ( D87 \/ ( { D44 , D42 } \/ { D45 , D43 } ) ) \/ { D45 , D44 } ) \/ D85 ) by XBOOLE_1:4
.= ( ( ( D87 \/ { D44 , D42 , D45 , D43 } ) \/ { D45 , D44 } ) \/ D85 ) by ENUMSET1:5
.= ( ( ( D87 \/ { D43 , D42 , D45 , D44 } ) \/ { D45 , D44 } ) \/ D85 ) by ENUMSET1:75
.= ( ( ( D87 \/ ( { D43 , D42 } \/ { D45 , D44 } ) ) \/ { D45 , D44 } ) \/ D85 ) by ENUMSET1:5
.= ( ( ( ( D87 \/ { D43 , D42 } ) \/ { D45 , D44 } ) \/ { D45 , D44 } ) \/ D85 ) by XBOOLE_1:4
.= ( ( ( D87 \/ { D43 , D42 } ) \/ ( { D45 , D44 } \/ { D45 , D44 } ) ) \/ D85 ) by XBOOLE_1:4
.= ( ( D87 \/ ( { D43 , D42 } \/ { D45 , D44 } ) ) \/ D85 ) by XBOOLE_1:4
.= ( ( D87 \/ { D43 , D42 , D45 , D44 } ) \/ D85 ) by ENUMSET1:5
.= ( D87 \/ ( { D43 , D42 , D45 , D44 } \/ D85 ) ) by XBOOLE_1:4
.= ( ( ( UsedIntLoc D77 ) \/ ( UsedIntLoc D78 ) ) \/ { D43 , D42 , D45 , D44 } ) by L506 , SF_MASTR:31
.= ( ( ( UsedIntLoc D77 ) \/ { D42 , D39 } ) \/ { D43 , D42 , D45 , D44 } ) by SF_MASTR:14
.= ( ( { D42 , D43 } \/ { D42 , D39 } ) \/ { D43 , D42 , D45 , D44 } ) by SF_MASTR:14
.= ( { D42 , D43 , D42 , D39 } \/ { D43 , D42 , D45 , D44 } ) by ENUMSET1:5
.= ( { D42 , D42 , D43 , D39 } \/ { D43 , D42 , D45 , D44 } ) by ENUMSET1:62
.= ( { D42 , D43 , D39 } \/ { D43 , D42 , D45 , D44 } ) by ENUMSET1:31
.= ( { D39 , D43 , D42 } \/ { D43 , D42 , D45 , D44 } ) by ENUMSET1:60
.= ( ( { D39 } \/ { D43 , D42 } ) \/ { D43 , D42 , D45 , D44 } ) by ENUMSET1:2
.= ( ( { D39 } \/ { D43 , D42 } ) \/ ( { D43 , D42 } \/ { D45 , D44 } ) ) by ENUMSET1:5
.= ( ( ( { D39 } \/ { D43 , D42 } ) \/ { D43 , D42 } ) \/ { D45 , D44 } ) by XBOOLE_1:4
.= ( ( { D39 } \/ ( { D43 , D42 } \/ { D43 , D42 } ) ) \/ { D45 , D44 } ) by XBOOLE_1:4
.= ( { D39 } \/ ( { D43 , D42 } \/ { D45 , D44 } ) ) by XBOOLE_1:4
.= ( { D39 } \/ { D43 , D42 , D45 , D44 } ) by ENUMSET1:5;
set D88 = ( D41 := D40 );
set D89 = ( SubFrom (D41 , D39) );
set D90 = ( D42 :=len C90 );
set D91 = ( UsedIntLoc ( Times (D41 , D86) ) );
set D92 = ( ( ( D88 ";" D89 ) ";" D90 ) ";" ( Times (D41 , D86) ) );
L508: D91 = ( ( { D43 , D42 , D45 , D44 } \/ { D39 } ) \/ { D41 , D39 } ) by L507 , L428
.= ( { D43 , D42 , D45 , D44 } \/ ( { D39 } \/ { D41 , D39 } ) ) by XBOOLE_1:4
.= ( { D43 , D42 , D45 , D44 } \/ { D39 , D39 , D41 } ) by ENUMSET1:2
.= ( { D43 , D42 , D45 , D44 } \/ { D39 , D41 } ) by ENUMSET1:30
.= ( { D43 , D44 , D45 , D42 } \/ { D39 , D41 } ) by ENUMSET1:64
.= ( ( { D43 , D44 , D45 } \/ { D42 } ) \/ { D39 , D41 } ) by ENUMSET1:6
.= ( { D43 , D44 , D45 } \/ ( { D42 } \/ { D39 , D41 } ) ) by XBOOLE_1:4
.= ( { D43 , D44 , D45 } \/ { D39 , D41 , D42 } ) by ENUMSET1:3;
L509: ( UsedIntLoc D92 ) = ( ( UsedIntLoc ( ( D88 ";" D89 ) ";" D90 ) ) \/ D91 ) by SF_MASTR:27
.= ( ( ( UsedIntLoc ( D88 ";" D89 ) ) \/ ( UsedIntLoc D90 ) ) \/ D91 ) by SF_MASTR:30
.= ( ( ( UsedIntLoc ( D88 ";" D89 ) ) \/ { D42 } ) \/ D91 ) by SF_MASTR:18
.= ( ( ( ( UsedIntLoc D88 ) \/ ( UsedIntLoc D89 ) ) \/ { D42 } ) \/ D91 ) by SF_MASTR:31
.= ( ( ( ( UsedIntLoc D88 ) \/ { D41 , D39 } ) \/ { D42 } ) \/ D91 ) by SF_MASTR:14
.= ( ( ( { D41 , D40 } \/ { D41 , D39 } ) \/ { D42 } ) \/ D91 ) by SF_MASTR:14
.= ( ( { D41 , D40 } \/ ( { D39 , D41 } \/ { D42 } ) ) \/ D91 ) by XBOOLE_1:4
.= ( ( { D41 , D40 } \/ { D39 , D41 , D42 } ) \/ D91 ) by ENUMSET1:3
.= ( ( ( { D41 , D40 } \/ { D39 , D41 , D42 } ) \/ { D39 , D41 , D42 } ) \/ { D43 , D44 , D45 } ) by L508 , XBOOLE_1:4
.= ( ( { D41 , D40 } \/ ( { D39 , D41 , D42 } \/ { D39 , D41 , D42 } ) ) \/ { D43 , D44 , D45 } ) by XBOOLE_1:4
.= ( ( { D41 , D40 } \/ ( { D39 , D41 } \/ { D42 } ) ) \/ { D43 , D44 , D45 } ) by ENUMSET1:3
.= ( ( ( { D41 , D40 } \/ { D39 , D41 } ) \/ { D42 } ) \/ { D43 , D44 , D45 } ) by XBOOLE_1:4
.= ( ( { D41 , D40 , D39 , D41 } \/ { D42 } ) \/ { D43 , D44 , D45 } ) by ENUMSET1:5
.= ( ( { D41 , D41 , D39 , D40 } \/ { D42 } ) \/ { D43 , D44 , D45 } ) by ENUMSET1:64
.= ( ( { D41 , D39 , D40 } \/ { D42 } ) \/ { D43 , D44 , D45 } ) by ENUMSET1:31
.= ( ( { D39 , D40 , D41 } \/ { D42 } ) \/ { D43 , D44 , D45 } ) by ENUMSET1:59
.= ( { D39 , D40 , D41 , D42 } \/ { D43 , D44 , D45 } ) by ENUMSET1:6
.= { D39 , D40 , D41 , D42 , D43 , D44 , D45 } by ENUMSET1:19;
set D93 = ( D41 := D39 );
set D94 = ( D42 := D39 );
set D95 = ( D43 := D39 );
set D96 = ( D44 := D39 );
L510: ( UsedIntLoc D46 ) = ( ( UsedIntLoc ( ( ( D93 ";" D94 ) ";" D95 ) ";" D96 ) ) \/ ( UsedIntLoc ( D45 := D39 ) ) ) by SF_MASTR:30
.= ( ( UsedIntLoc ( ( ( D93 ";" D94 ) ";" D95 ) ";" D96 ) ) \/ { D45 , D39 } ) by SF_MASTR:14
.= ( ( ( UsedIntLoc ( ( D93 ";" D94 ) ";" D95 ) ) \/ ( UsedIntLoc D96 ) ) \/ { D45 , D39 } ) by SF_MASTR:30
.= ( ( ( UsedIntLoc ( ( D93 ";" D94 ) ";" D95 ) ) \/ { D44 , D39 } ) \/ { D45 , D39 } ) by SF_MASTR:14
.= ( ( ( ( UsedIntLoc ( D93 ";" D94 ) ) \/ ( UsedIntLoc D95 ) ) \/ { D44 , D39 } ) \/ { D45 , D39 } ) by SF_MASTR:30
.= ( ( ( ( UsedIntLoc ( D93 ";" D94 ) ) \/ { D43 , D39 } ) \/ { D44 , D39 } ) \/ { D45 , D39 } ) by SF_MASTR:14
.= ( ( ( ( ( UsedIntLoc D93 ) \/ ( UsedIntLoc D94 ) ) \/ { D43 , D39 } ) \/ { D44 , D39 } ) \/ { D45 , D39 } ) by SF_MASTR:31
.= ( ( ( ( ( UsedIntLoc D93 ) \/ { D42 , D39 } ) \/ { D43 , D39 } ) \/ { D44 , D39 } ) \/ { D45 , D39 } ) by SF_MASTR:14
.= ( ( ( ( { D41 , D39 } \/ { D42 , D39 } ) \/ { D43 , D39 } ) \/ { D44 , D39 } ) \/ { D45 , D39 } ) by SF_MASTR:14
.= ( ( ( { D41 , D39 } \/ { D42 , D39 } ) \/ { D43 , D39 } ) \/ ( { D44 , D39 } \/ { D45 , D39 } ) ) by XBOOLE_1:4
.= ( ( ( { D41 , D39 } \/ { D42 , D39 } ) \/ { D43 , D39 } ) \/ { D39 , D44 , D45 } ) by ENUMSET1:87
.= ( ( { D39 , D41 , D42 } \/ { D43 , D39 } ) \/ { D39 , D44 , D45 } ) by ENUMSET1:87
.= ( ( { D39 , D41 , D42 } \/ { D43 , D39 } ) \/ ( { D39 } \/ { D44 , D45 } ) ) by ENUMSET1:2
.= ( ( ( { D39 , D41 , D42 } \/ { D43 , D39 } ) \/ { D39 } ) \/ { D44 , D45 } ) by XBOOLE_1:4
.= ( ( { D39 , D41 , D42 } \/ ( { D43 , D39 } \/ { D39 } ) ) \/ { D44 , D45 } ) by XBOOLE_1:4
.= ( ( { D39 , D41 , D42 } \/ { D43 , D39 , D39 } ) \/ { D44 , D45 } ) by ENUMSET1:3
.= ( ( { D39 , D41 , D42 } \/ ( { D39 , D39 } \/ { D43 } ) ) \/ { D44 , D45 } ) by ENUMSET1:2
.= ( ( ( { D39 , D41 , D42 } \/ { D39 , D39 } ) \/ { D43 } ) \/ { D44 , D45 } ) by XBOOLE_1:4
.= ( ( { D39 , D39 , D39 , D41 , D42 } \/ { D43 } ) \/ { D44 , D45 } ) by ENUMSET1:8
.= ( ( { D39 , D41 , D42 } \/ { D43 } ) \/ { D44 , D45 } ) by ENUMSET1:38
.= ( { D39 , D41 , D42 , D43 } \/ { D44 , D45 } ) by ENUMSET1:6
.= { D39 , D41 , D42 , D43 , D44 , D45 } by ENUMSET1:14
.= ( { D39 } \/ { D41 , D42 , D43 , D44 , D45 } ) by ENUMSET1:11;
set D97 = ( D40 :=len C90 );
set D98 = ( UsedIntLoc ( Times (D40 , D92) ) );
thus L511: ( UsedIntLoc ( bubble-sort C90 ) ) = ( ( UsedIntLoc ( D46 ";" D97 ) ) \/ D98 ) by SF_MASTR:27
.= ( ( ( UsedIntLoc D46 ) \/ ( UsedIntLoc D97 ) ) \/ D98 ) by SF_MASTR:30
.= ( ( ( { D39 } \/ { D41 , D42 , D43 , D44 , D45 } ) \/ { D40 } ) \/ D98 ) by L510 , SF_MASTR:18
.= ( ( ( { D39 } \/ { D40 } ) \/ { D41 , D42 , D43 , D44 , D45 } ) \/ D98 ) by XBOOLE_1:4
.= ( ( { D39 , D40 } \/ { D41 , D42 , D43 , D44 , D45 } ) \/ D98 ) by ENUMSET1:1
.= ( { D39 , D40 , D41 , D42 , D43 , D44 , D45 } \/ D98 ) by ENUMSET1:17
.= ( { D39 , D40 , D41 , D42 , D43 , D44 , D45 } \/ ( { D40 , D39 } \/ { D39 , D40 , D41 , D42 , D43 , D44 , D45 } ) ) by L509 , L428
.= ( ( { D39 , D40 , D41 , D42 , D43 , D44 , D45 } \/ { D39 , D40 , D41 , D42 , D43 , D44 , D45 } ) \/ { D40 , D39 } ) by XBOOLE_1:4
.= ( ( { D41 , D42 , D43 , D44 , D45 } \/ { D39 , D40 } ) \/ { D39 , D40 } ) by ENUMSET1:17
.= ( { D41 , D42 , D43 , D44 , D45 } \/ ( { D39 , D40 } \/ { D39 , D40 } ) ) by XBOOLE_1:4
.= { D39 , D40 , D41 , D42 , D43 , D44 , D45 } by ENUMSET1:17;
end;
theorem
L512: (for B87 being FinSeq-Location holds ( UsedInt*Loc ( bubble-sort B87 ) ) = { B87 })
proof
let C91 being FinSeq-Location;
set D99 = ( D43 := D42 );
set D100 = ( SubFrom (D42 , D39) );
set D101 = ( D44 := (C91 , D42) );
set D102 = ( D45 := (C91 , D43) );
set D103 = ( SubFrom (D45 , D44) );
set D104 = ( (C91 , D42) := D45 );
set D105 = ( (C91 , D43) := D44 );
set D106 = ( if>0 (D45 , ( ( D102 ";" D104 ) ";" D105 ) , ( Stop ( SCM+FSA ) )) );
set D107 = ( UsedInt*Loc D106 );
set D108 = ( ( ( ( ( D99 ";" D100 ) ";" D101 ) ";" D102 ) ";" D103 ) ";" D106 );
L513: D107 = ( ( UsedInt*Loc ( ( D102 ";" D104 ) ";" D105 ) ) \/ ( {} ) ) by SCMFSA9A:4 , SCMFSA9A:10
.= ( ( UsedInt*Loc ( D102 ";" D104 ) ) \/ ( UsedInt*Loc D105 ) ) by SF_MASTR:46
.= ( ( UsedInt*Loc ( D102 ";" D104 ) ) \/ { C91 } ) by SF_MASTR:33
.= ( ( ( UsedInt*Loc D102 ) \/ ( UsedInt*Loc D104 ) ) \/ { C91 } ) by SF_MASTR:47
.= ( ( ( UsedInt*Loc D102 ) \/ { C91 } ) \/ { C91 } ) by SF_MASTR:33
.= ( ( { C91 } \/ { C91 } ) \/ { C91 } ) by SF_MASTR:33
.= { C91 };
L514: ( UsedInt*Loc D108 ) = ( ( UsedInt*Loc ( ( ( ( D99 ";" D100 ) ";" D101 ) ";" D102 ) ";" D103 ) ) \/ D107 ) by SF_MASTR:43
.= ( ( ( UsedInt*Loc ( ( ( D99 ";" D100 ) ";" D101 ) ";" D102 ) ) \/ ( UsedInt*Loc D103 ) ) \/ D107 ) by SF_MASTR:46
.= ( ( ( UsedInt*Loc ( ( ( D99 ";" D100 ) ";" D101 ) ";" D102 ) ) \/ ( {} ) ) \/ D107 ) by SF_MASTR:32
.= ( ( ( UsedInt*Loc ( ( D99 ";" D100 ) ";" D101 ) ) \/ ( UsedInt*Loc D102 ) ) \/ D107 ) by SF_MASTR:46
.= ( ( ( UsedInt*Loc ( ( D99 ";" D100 ) ";" D101 ) ) \/ { C91 } ) \/ D107 ) by SF_MASTR:33
.= ( ( UsedInt*Loc ( ( D99 ";" D100 ) ";" D101 ) ) \/ ( { C91 } \/ { C91 } ) ) by L513 , XBOOLE_1:4
.= ( ( ( UsedInt*Loc ( D99 ";" D100 ) ) \/ ( UsedInt*Loc D101 ) ) \/ { C91 } ) by SF_MASTR:46
.= ( ( ( UsedInt*Loc ( D99 ";" D100 ) ) \/ { C91 } ) \/ { C91 } ) by SF_MASTR:33
.= ( ( ( ( UsedInt*Loc D99 ) \/ ( UsedInt*Loc D100 ) ) \/ { C91 } ) \/ { C91 } ) by SF_MASTR:47
.= ( ( ( ( UsedInt*Loc D99 ) \/ ( {} ) ) \/ { C91 } ) \/ { C91 } ) by SF_MASTR:32
.= ( ( ( ( {} ) \/ ( {} ) ) \/ { C91 } ) \/ { C91 } ) by SF_MASTR:32
.= { C91 };
set D109 = ( D41 := D40 );
set D110 = ( SubFrom (D41 , D39) );
set D111 = ( D42 :=len C91 );
set D112 = ( UsedInt*Loc ( Times (D41 , D108) ) );
set D113 = ( ( ( D109 ";" D110 ) ";" D111 ) ";" ( Times (D41 , D108) ) );
L515: D112 = { C91 } by L514 , L443;
L516: ( UsedInt*Loc D113 ) = ( ( UsedInt*Loc ( ( D109 ";" D110 ) ";" D111 ) ) \/ D112 ) by SF_MASTR:43
.= ( ( ( UsedInt*Loc ( D109 ";" D110 ) ) \/ ( UsedInt*Loc D111 ) ) \/ D112 ) by SF_MASTR:46
.= ( ( ( UsedInt*Loc ( D109 ";" D110 ) ) \/ { C91 } ) \/ D112 ) by SF_MASTR:34
.= ( ( ( ( UsedInt*Loc D109 ) \/ ( UsedInt*Loc D110 ) ) \/ { C91 } ) \/ D112 ) by SF_MASTR:47
.= ( ( ( ( {} ) \/ ( UsedInt*Loc D110 ) ) \/ { C91 } ) \/ D112 ) by SF_MASTR:32
.= ( ( ( ( {} ) \/ ( {} ) ) \/ { C91 } ) \/ D112 ) by SF_MASTR:32
.= { C91 } by L515;
set D114 = ( D41 := D39 );
set D115 = ( D42 := D39 );
set D116 = ( D43 := D39 );
set D117 = ( D44 := D39 );
L517: ( UsedInt*Loc D46 ) = ( ( UsedInt*Loc ( ( ( D114 ";" D115 ) ";" D116 ) ";" D117 ) ) \/ ( UsedInt*Loc ( D45 := D39 ) ) ) by SF_MASTR:46
.= ( ( UsedInt*Loc ( ( ( D114 ";" D115 ) ";" D116 ) ";" D117 ) ) \/ ( {} ) ) by SF_MASTR:32
.= ( ( UsedInt*Loc ( ( D114 ";" D115 ) ";" D116 ) ) \/ ( UsedInt*Loc D117 ) ) by SF_MASTR:46
.= ( ( UsedInt*Loc ( ( D114 ";" D115 ) ";" D116 ) ) \/ ( {} ) ) by SF_MASTR:32
.= ( ( UsedInt*Loc ( D114 ";" D115 ) ) \/ ( UsedInt*Loc D116 ) ) by SF_MASTR:46
.= ( ( UsedInt*Loc ( D114 ";" D115 ) ) \/ ( {} ) ) by SF_MASTR:32
.= ( ( UsedInt*Loc D114 ) \/ ( UsedInt*Loc D115 ) ) by SF_MASTR:47
.= ( ( UsedInt*Loc D114 ) \/ ( {} ) ) by SF_MASTR:32
.= ( {} ) by SF_MASTR:32;
set D118 = ( D40 :=len C91 );
set D119 = ( UsedInt*Loc ( Times (D40 , D113) ) );
thus L518: ( UsedInt*Loc ( bubble-sort C91 ) ) = ( ( UsedInt*Loc ( D46 ";" D118 ) ) \/ D119 ) by SF_MASTR:43
.= ( ( ( UsedInt*Loc D46 ) \/ ( UsedInt*Loc D118 ) ) \/ D119 ) by SF_MASTR:46
.= ( { C91 } \/ D119 ) by L517 , SF_MASTR:34
.= ( { C91 } \/ { C91 } ) by L516 , L443
.= { C91 };
end;
canceled 2;
theorem
L519: (for B88 being FinSeq-Location holds ( card ( bubble-sort B88 ) ) = 63)
proof
let C92 being FinSeq-Location;
set D120 = ( D43 := D42 );
set D121 = ( SubFrom (D42 , D39) );
set D122 = ( D44 := (C92 , D42) );
set D123 = ( D45 := (C92 , D43) );
set D124 = ( SubFrom (D45 , D44) );
set D125 = ( (C92 , D42) := D45 );
set D126 = ( (C92 , D43) := D44 );
set D127 = ( if>0 (D45 , ( ( D123 ";" D125 ) ";" D126 ) , ( Stop ( SCM+FSA ) )) );
set D128 = ( card D127 );
set D129 = ( ( ( ( ( D120 ";" D121 ) ";" D122 ) ";" D123 ) ";" D124 ) ";" D127 );
L520: ( card ( Stop ( SCM+FSA ) ) ) = 1 by COMPOS_1:4;
L521: D128 = ( ( ( card ( ( D123 ";" D125 ) ";" D126 ) ) + 1 ) + 4 ) by L520 , SCMFSA8B:12
.= ( ( 6 + 1 ) + 4 ) by L448
.= 11;
L522: ( card D129 ) = ( ( card ( ( ( ( D120 ";" D121 ) ";" D122 ) ";" D123 ) ";" D124 ) ) + D128 ) by SCMFSA6A:21
.= ( ( card ( ( ( D120 ";" D121 ) ";" D122 ) ";" ( D123 ";" D124 ) ) ) + D128 ) by SCMFSA6A:28
.= ( ( ( card ( ( D120 ";" D121 ) ";" D122 ) ) + ( card ( D123 ";" D124 ) ) ) + D128 ) by SCMFSA6A:21
.= ( ( 6 + ( card ( D123 ";" D124 ) ) ) + D128 ) by L448
.= ( ( 6 + 4 ) + D128 ) by SCMFSA6A:35
.= 21 by L521;
set D130 = ( D41 := D40 );
set D131 = ( SubFrom (D41 , D39) );
set D132 = ( D42 :=len C92 );
set D133 = ( ( ( D130 ";" D131 ) ";" D132 ) ";" ( Times (D41 , D129) ) );
L523: ( card D133 ) = ( ( card ( ( D130 ";" D131 ) ";" D132 ) ) + ( card ( Times (D41 , D129) ) ) ) by SCMFSA6A:21
.= ( 6 + ( card ( Times (D41 , D129) ) ) ) by L448
.= ( 6 + ( 21 + 12 ) ) by L522 , L445
.= 39;
set D134 = ( D41 := D39 );
set D135 = ( D42 := D39 );
set D136 = ( D43 := D39 );
set D137 = ( D44 := D39 );
set D138 = ( D45 := D39 );
L524: ( card D46 ) = ( ( card ( ( ( D134 ";" D135 ) ";" D136 ) ";" D137 ) ) + 2 ) by SCMFSA6A:34
.= ( ( ( card ( ( D134 ";" D135 ) ";" D136 ) ) + 2 ) + 2 ) by SCMFSA6A:34
.= ( ( card ( ( D134 ";" D135 ) ";" D136 ) ) + 4 )
.= ( 6 + 4 ) by L448
.= 10;
set D139 = ( D40 :=len C92 );
set D140 = ( card ( Times (D40 , D133) ) );
L525: D140 = ( 39 + 12 ) by L523 , L445;
thus L526: ( card ( bubble-sort C92 ) ) = ( ( card ( D46 ";" D139 ) ) + D140 ) by SCMFSA6A:21
.= ( ( 10 + 2 ) + D140 ) by L524 , SCMFSA6A:34
.= 63 by L525;
end;
theorem
L527: (for B89 being (Instruction-Sequence of ( SCM+FSA )) holds (( Bubble-Sort-Algorithm ) c= B89 implies (for B90 being FinSeq-Location holds (for B91 being (Element of ( NAT )) holds (B91 < 63 implies ( ( Bubble-Sort-Algorithm ) . B91 ) = ( B89 . B91 ))))))
proof
let C93 being (Instruction-Sequence of ( SCM+FSA ));
assume that
L528: ( Bubble-Sort-Algorithm ) c= C93;
let C94 being FinSeq-Location;
let C95 being (Element of ( NAT ));
assume L529: C95 < 63;
L530: ( card ( bubble-sort D53 ) ) = 63 by L519;
L531: C95 in ( dom ( Bubble-Sort-Algorithm ) ) by L530 , L529 , AFINSQ_1:66;
thus L532: ( ( Bubble-Sort-Algorithm ) . C95 ) = ( C93 . C95 ) by L531 , L528 , GRFUNC_1:2;
end;
L533: (for B92 being (Instruction-Sequence of ( SCM+FSA )) holds (( Bubble-Sort-Algorithm ) c= B92 implies (( B92 . ( 0 ) ) = ( D41 := D39 ) & ( B92 . 1 ) = ( goto 2 ) & ( B92 . 2 ) = ( D42 := D39 ) & ( B92 . 3 ) = ( goto 4 ) & ( B92 . 4 ) = ( D43 := D39 ) & ( B92 . 5 ) = ( goto 6 ) & ( B92 . 6 ) = ( D44 := D39 ) & ( B92 . 7 ) = ( goto 8 ) & ( B92 . 8 ) = ( D45 := D39 ) & ( B92 . 9 ) = ( goto 10 ) & ( B92 . 10 ) = ( D40 :=len ( fsloc ( 0 ) ) ) & ( B92 . 11 ) = ( goto 12 ))))
proof
set D141 = ( fsloc ( 0 ) );
set D142 = ( Times (D40 , ( ( ( ( D41 := D40 ) ";" ( SubFrom (D41 , D39) ) ) ";" ( D42 :=len D141 ) ) ";" ( Times (D41 , ( ( ( ( ( ( D43 := D42 ) ";" ( SubFrom (D42 , D39) ) ) ";" ( D44 := (D141 , D42) ) ) ";" ( D45 := (D141 , D43) ) ) ";" ( SubFrom (D45 , D44) ) ) ";" ( if>0 (D45 , ( ( ( D45 := (D141 , D43) ) ";" ( (D141 , D42) := D45 ) ) ";" ( (D141 , D43) := D44 ) ) , ( Stop ( SCM+FSA ) )) ) )) ) )) );
set D143 = ( Bubble-Sort-Algorithm );
let C96 being (Instruction-Sequence of ( SCM+FSA ));
assume that
L534: D143 c= C96;
set D144 = ( D41 := D39 );
set D145 = ( D42 := D39 );
set D146 = ( D43 := D39 );
set D147 = ( D44 := D39 );
set D148 = ( D45 := D39 );
set D149 = ( D40 :=len D141 );
set D150 = ( D149 ";" D142 );
set D151 = ( D148 ";" D150 );
set D152 = ( D147 ";" D151 );
set D153 = ( D146 ";" D152 );
set D154 = ( D145 ";" D153 );
set D155 = ( D144 ";" D145 );
set D156 = ( D155 ";" D146 );
set D157 = ( D156 ";" D147 );
set D158 = ( D157 ";" D148 );
L535: D143 = ( ( D157 ";" D148 ) ";" D150 ) by SCMFSA6A:27;
L536: D143 = ( ( D156 ";" D147 ) ";" D151 ) by L535 , SCMFSA6A:27;
L537: D143 = ( ( D155 ";" D146 ) ";" D152 ) by L536 , SCMFSA6A:27;
L538: D143 = ( ( D144 ";" D145 ) ";" D153 ) by L537 , SCMFSA6A:27;
L539: D143 = ( D144 ";" D154 ) by L538 , SCMFSA6A:31;
L540: D143 = ( ( Macro D144 ) ";" D154 ) by L539 , SCMFSA6A:def 5;
L541: D143 = ( ( ( Macro D144 ) ";" D145 ) ";" D153 ) by L540 , SCMFSA6A:27;
L542: ( dom ( Macro D144 ) ) = { ( 0 ) , 1 } by COMPOS_1:61;
L543: ( 0 ) in ( dom ( Macro D144 ) ) by L542 , TARSKI:def 2;
L544: 1 in ( dom ( Macro D144 ) ) by L542 , TARSKI:def 2;
thus L545: ( C96 . ( 0 ) ) = ( D143 . ( 0 ) ) by L534 , L527
.= ( ( Directed ( Macro D144 ) ) . ( 0 ) ) by L543 , L540 , SCMFSA8A:14
.= D144 by SCMFSA7B:1;
thus L546: ( C96 . 1 ) = ( D143 . 1 ) by L534 , L527
.= ( ( Directed ( Macro D144 ) ) . 1 ) by L544 , L540 , SCMFSA8A:14
.= ( goto 2 ) by SCMFSA7B:2;
L547: ( card ( Macro D144 ) ) = 2 by COMPOS_1:56;
thus L548: ( C96 . 2 ) = ( D143 . 2 ) by L534 , L527
.= D145 by L541 , L547 , L456;
thus L549: ( C96 . 3 ) = ( D143 . ( 2 + 1 ) ) by L534 , L527
.= ( goto ( 2 + 2 ) ) by L541 , L547 , L465
.= ( goto 4 );
L550: ( card D155 ) = 4 by SCMFSA6A:35;
thus L551: ( C96 . 4 ) = ( D143 . 4 ) by L534 , L527
.= D146 by L537 , L550 , L456;
thus L552: ( C96 . 5 ) = ( D143 . ( 4 + 1 ) ) by L534 , L527
.= ( goto ( 4 + 2 ) ) by L537 , L550 , L465
.= ( goto 6 );
L553: ( card D156 ) = 6 by L448;
thus L554: ( C96 . 6 ) = ( D143 . 6 ) by L534 , L527
.= D147 by L536 , L553 , L456;
thus L555: ( C96 . 7 ) = ( D143 . ( 6 + 1 ) ) by L534 , L527
.= ( goto ( 6 + 2 ) ) by L536 , L553 , L465
.= ( goto 8 );
L556: ( card D157 ) = ( 6 + 2 ) by L553 , SCMFSA6A:34;
thus L557: ( C96 . 8 ) = ( D143 . 8 ) by L534 , L527
.= D148 by L535 , L556 , L456;
thus L558: ( C96 . 9 ) = ( D143 . ( 8 + 1 ) ) by L534 , L527
.= ( goto ( 8 + 2 ) ) by L535 , L556 , L465
.= ( goto 10 );
L559: ( card D158 ) = ( 8 + 2 ) by L556 , SCMFSA6A:34;
thus L560: ( C96 . 10 ) = ( D143 . 10 ) by L534 , L527
.= D149 by L559 , L456;
thus L561: ( C96 . 11 ) = ( D143 . ( 10 + 1 ) ) by L534 , L527
.= ( goto ( 10 + 2 ) ) by L559 , L465
.= ( goto 12 );
end;
L562: (for B93 being ( 0 ) -started (State of ( SCM+FSA )) holds (for B94 being (Instruction-Sequence of ( SCM+FSA )) holds (( Bubble-Sort-Algorithm ) c= B94 implies (( ( Comput (B94 , B93 , 1) ) . ( IC ( SCM+FSA ) ) ) = 1 & ( ( Comput (B94 , B93 , 1) ) . D39 ) = ( B93 . D39 ) & ( ( Comput (B94 , B93 , 1) ) . ( fsloc ( 0 ) ) ) = ( B93 . ( fsloc ( 0 ) ) ) & ( ( Comput (B94 , B93 , 2) ) . ( IC ( SCM+FSA ) ) ) = 2 & ( ( Comput (B94 , B93 , 2) ) . D39 ) = ( B93 . D39 ) & ( ( Comput (B94 , B93 , 2) ) . ( fsloc ( 0 ) ) ) = ( B93 . ( fsloc ( 0 ) ) ) & ( ( Comput (B94 , B93 , 3) ) . ( IC ( SCM+FSA ) ) ) = 3 & ( ( Comput (B94 , B93 , 3) ) . D39 ) = ( B93 . D39 ) & ( ( Comput (B94 , B93 , 3) ) . ( fsloc ( 0 ) ) ) = ( B93 . ( fsloc ( 0 ) ) ) & ( ( Comput (B94 , B93 , 4) ) . ( IC ( SCM+FSA ) ) ) = 4 & ( ( Comput (B94 , B93 , 4) ) . D39 ) = ( B93 . D39 ) & ( ( Comput (B94 , B93 , 4) ) . ( fsloc ( 0 ) ) ) = ( B93 . ( fsloc ( 0 ) ) ) & ( ( Comput (B94 , B93 , 5) ) . ( IC ( SCM+FSA ) ) ) = 5 & ( ( Comput (B94 , B93 , 5) ) . D39 ) = ( B93 . D39 ) & ( ( Comput (B94 , B93 , 5) ) . ( fsloc ( 0 ) ) ) = ( B93 . ( fsloc ( 0 ) ) ) & ( ( Comput (B94 , B93 , 6) ) . ( IC ( SCM+FSA ) ) ) = 6 & ( ( Comput (B94 , B93 , 6) ) . D39 ) = ( B93 . D39 ) & ( ( Comput (B94 , B93 , 6) ) . ( fsloc ( 0 ) ) ) = ( B93 . ( fsloc ( 0 ) ) ) & ( ( Comput (B94 , B93 , 7) ) . ( IC ( SCM+FSA ) ) ) = 7 & ( ( Comput (B94 , B93 , 7) ) . D39 ) = ( B93 . D39 ) & ( ( Comput (B94 , B93 , 7) ) . ( fsloc ( 0 ) ) ) = ( B93 . ( fsloc ( 0 ) ) ) & ( ( Comput (B94 , B93 , 8) ) . ( IC ( SCM+FSA ) ) ) = 8 & ( ( Comput (B94 , B93 , 8) ) . D39 ) = ( B93 . D39 ) & ( ( Comput (B94 , B93 , 8) ) . ( fsloc ( 0 ) ) ) = ( B93 . ( fsloc ( 0 ) ) ) & ( ( Comput (B94 , B93 , 9) ) . ( IC ( SCM+FSA ) ) ) = 9 & ( ( Comput (B94 , B93 , 9) ) . D39 ) = ( B93 . D39 ) & ( ( Comput (B94 , B93 , 9) ) . ( fsloc ( 0 ) ) ) = ( B93 . ( fsloc ( 0 ) ) ) & ( ( Comput (B94 , B93 , 10) ) . ( IC ( SCM+FSA ) ) ) = 10 & ( ( Comput (B94 , B93 , 10) ) . D39 ) = ( B93 . D39 ) & ( ( Comput (B94 , B93 , 10) ) . ( fsloc ( 0 ) ) ) = ( B93 . ( fsloc ( 0 ) ) ) & ( ( Comput (B94 , B93 , 11) ) . ( IC ( SCM+FSA ) ) ) = 11 & ( ( Comput (B94 , B93 , 11) ) . D39 ) = ( B93 . D39 ) & ( ( Comput (B94 , B93 , 11) ) . ( fsloc ( 0 ) ) ) = ( B93 . ( fsloc ( 0 ) ) ) & ( ( Comput (B94 , B93 , 11) ) . D40 ) = ( len ( B93 . ( fsloc ( 0 ) ) ) ) & ( ( Comput (B94 , B93 , 11) ) . D41 ) = ( B93 . D39 ) & ( ( Comput (B94 , B93 , 11) ) . D42 ) = ( B93 . D39 ) & ( ( Comput (B94 , B93 , 11) ) . D43 ) = ( B93 . D39 ) & ( ( Comput (B94 , B93 , 11) ) . D44 ) = ( B93 . D39 ) & ( ( Comput (B94 , B93 , 11) ) . D45 ) = ( B93 . D39 )))))
proof
let C97 being ( 0 ) -started (State of ( SCM+FSA ));
let C98 being (Instruction-Sequence of ( SCM+FSA ));
assume that
L563: ( Bubble-Sort-Algorithm ) c= C98;
L564: ( IC ( Comput (C98 , C97 , ( 0 )) ) ) = ( 0 ) by MEMSTR_0:def 11;
L565: ( Comput (C98 , C97 , ( ( 0 ) + 1 )) ) = ( Exec (( C98 . ( 0 ) ) , ( Comput (C98 , C97 , ( 0 )) )) ) by L564 , EXTPRO_1:6
.= ( Exec (( D41 := D39 ) , ( Comput (C98 , C97 , ( 0 )) )) ) by L563 , L533;
thus L566: ( ( Comput (C98 , C97 , 1) ) . ( IC ( SCM+FSA ) ) ) = ( succ ( IC ( Comput (C98 , C97 , ( 0 )) ) ) ) by L565 , SCMFSA_2:63
.= 1 by L564;
L567: ( IC ( Comput (C98 , C97 , 1) ) ) = 1 by L566;
L568: ( ( Comput (C98 , C97 , 1) ) . D41 ) = ( C97 . D39 ) by L565 , SCMFSA_2:63;
thus L569: ( ( Comput (C98 , C97 , 1) ) . D39 ) = ( C97 . D39 ) by L565 , L484 , SCMFSA_2:63;
thus L570: ( ( Comput (C98 , C97 , 1) ) . ( fsloc ( 0 ) ) ) = ( C97 . ( fsloc ( 0 ) ) ) by L565 , SCMFSA_2:63;
L571: ( Comput (C98 , C97 , ( 1 + 1 )) ) = ( Exec (( C98 . 1 ) , ( Comput (C98 , C97 , 1) )) ) by L567 , EXTPRO_1:6
.= ( Exec (( goto 2 ) , ( Comput (C98 , C97 , 1) )) ) by L563 , L533;
thus L572: ( ( Comput (C98 , C97 , 2) ) . ( IC ( SCM+FSA ) ) ) = 2 by L571 , SCMFSA_2:69;
L573: ( IC ( Comput (C98 , C97 , 2) ) ) = 2 by L571 , SCMFSA_2:69;
thus L574: ( ( Comput (C98 , C97 , 2) ) . D39 ) = ( C97 . D39 ) by L569 , L571 , SCMFSA_2:69;
thus L575: ( ( Comput (C98 , C97 , 2) ) . ( fsloc ( 0 ) ) ) = ( C97 . ( fsloc ( 0 ) ) ) by L570 , L571 , SCMFSA_2:69;
L576: ( ( Comput (C98 , C97 , 2) ) . D41 ) = ( C97 . D39 ) by L568 , L571 , SCMFSA_2:69;
L577: ( Comput (C98 , C97 , ( 2 + 1 )) ) = ( Exec (( C98 . 2 ) , ( Comput (C98 , C97 , 2) )) ) by L573 , EXTPRO_1:6
.= ( Exec (( D42 := D39 ) , ( Comput (C98 , C97 , 2) )) ) by L563 , L533;
thus L578: ( ( Comput (C98 , C97 , 3) ) . ( IC ( SCM+FSA ) ) ) = ( succ ( IC ( Comput (C98 , C97 , 2) ) ) ) by L577 , SCMFSA_2:63
.= 3 by L572;
L579: ( IC ( Comput (C98 , C97 , 3) ) ) = 3 by L578;
L580: ( ( Comput (C98 , C97 , 3) ) . D42 ) = ( C97 . D39 ) by L574 , L577 , SCMFSA_2:63;
thus L581: ( ( Comput (C98 , C97 , 3) ) . D39 ) = ( C97 . D39 ) by L574 , L577 , SCMFSA_2:63;
thus L582: ( ( Comput (C98 , C97 , 3) ) . ( fsloc ( 0 ) ) ) = ( C97 . ( fsloc ( 0 ) ) ) by L575 , L577 , SCMFSA_2:63;
L583: ( ( Comput (C98 , C97 , 3) ) . D41 ) = ( C97 . D39 ) by L576 , L577 , L493 , SCMFSA_2:63;
L584: ( Comput (C98 , C97 , ( 3 + 1 )) ) = ( Exec (( C98 . 3 ) , ( Comput (C98 , C97 , 3) )) ) by L579 , EXTPRO_1:6
.= ( Exec (( goto 4 ) , ( Comput (C98 , C97 , 3) )) ) by L563 , L533;
thus L585: ( ( Comput (C98 , C97 , 4) ) . ( IC ( SCM+FSA ) ) ) = 4 by L584 , SCMFSA_2:69;
L586: ( IC ( Comput (C98 , C97 , 4) ) ) = 4 by L584 , SCMFSA_2:69;
thus L587: ( ( Comput (C98 , C97 , 4) ) . D39 ) = ( C97 . D39 ) by L581 , L584 , SCMFSA_2:69;
thus L588: ( ( Comput (C98 , C97 , 4) ) . ( fsloc ( 0 ) ) ) = ( C97 . ( fsloc ( 0 ) ) ) by L582 , L584 , SCMFSA_2:69;
L589: ( ( Comput (C98 , C97 , 4) ) . D41 ) = ( C97 . D39 ) by L583 , L584 , SCMFSA_2:69;
L590: ( ( Comput (C98 , C97 , 4) ) . D42 ) = ( C97 . D39 ) by L580 , L584 , SCMFSA_2:69;
L591: ( Comput (C98 , C97 , ( 4 + 1 )) ) = ( Exec (( C98 . 4 ) , ( Comput (C98 , C97 , 4) )) ) by L586 , EXTPRO_1:6
.= ( Exec (( D43 := D39 ) , ( Comput (C98 , C97 , 4) )) ) by L563 , L533;
thus L592: ( ( Comput (C98 , C97 , 5) ) . ( IC ( SCM+FSA ) ) ) = ( succ ( IC ( Comput (C98 , C97 , 4) ) ) ) by L591 , SCMFSA_2:63
.= 5 by L585;
L593: ( IC ( Comput (C98 , C97 , 5) ) ) = 5 by L592;
L594: ( ( Comput (C98 , C97 , 5) ) . D43 ) = ( C97 . D39 ) by L587 , L591 , SCMFSA_2:63;
thus L595: ( ( Comput (C98 , C97 , 5) ) . D39 ) = ( C97 . D39 ) by L587 , L591 , L485 , SCMFSA_2:63;
thus L596: ( ( Comput (C98 , C97 , 5) ) . ( fsloc ( 0 ) ) ) = ( C97 . ( fsloc ( 0 ) ) ) by L588 , L591 , SCMFSA_2:63;
L597: ( ( Comput (C98 , C97 , 5) ) . D41 ) = ( C97 . D39 ) by L589 , L591 , L494 , SCMFSA_2:63;
L598: ( ( Comput (C98 , C97 , 5) ) . D42 ) = ( C97 . D39 ) by L590 , L591 , L497 , SCMFSA_2:63;
L599: ( Comput (C98 , C97 , ( 5 + 1 )) ) = ( Exec (( C98 . 5 ) , ( Comput (C98 , C97 , 5) )) ) by L593 , EXTPRO_1:6
.= ( Exec (( goto 6 ) , ( Comput (C98 , C97 , 5) )) ) by L563 , L533;
thus L600: ( ( Comput (C98 , C97 , 6) ) . ( IC ( SCM+FSA ) ) ) = 6 by L599 , SCMFSA_2:69;
L601: ( IC ( Comput (C98 , C97 , 6) ) ) = 6 by L599 , SCMFSA_2:69;
thus L602: ( ( Comput (C98 , C97 , 6) ) . D39 ) = ( C97 . D39 ) by L595 , L599 , SCMFSA_2:69;
thus L603: ( ( Comput (C98 , C97 , 6) ) . ( fsloc ( 0 ) ) ) = ( C97 . ( fsloc ( 0 ) ) ) by L596 , L599 , SCMFSA_2:69;
L604: ( ( Comput (C98 , C97 , 6) ) . D41 ) = ( C97 . D39 ) by L597 , L599 , SCMFSA_2:69;
L605: ( ( Comput (C98 , C97 , 6) ) . D42 ) = ( C97 . D39 ) by L598 , L599 , SCMFSA_2:69;
L606: ( ( Comput (C98 , C97 , 6) ) . D43 ) = ( C97 . D39 ) by L594 , L599 , SCMFSA_2:69;
L607: ( Comput (C98 , C97 , ( 6 + 1 )) ) = ( Exec (( C98 . 6 ) , ( Comput (C98 , C97 , 6) )) ) by L601 , EXTPRO_1:6
.= ( Exec (( D44 := D39 ) , ( Comput (C98 , C97 , 6) )) ) by L563 , L533;
thus L608: ( ( Comput (C98 , C97 , 7) ) . ( IC ( SCM+FSA ) ) ) = ( succ ( IC ( Comput (C98 , C97 , 6) ) ) ) by L607 , SCMFSA_2:63
.= 7 by L600;
L609: ( IC ( Comput (C98 , C97 , 7) ) ) = 7 by L608;
L610: ( ( Comput (C98 , C97 , 7) ) . D44 ) = ( C97 . D39 ) by L602 , L607 , SCMFSA_2:63;
thus L611: ( ( Comput (C98 , C97 , 7) ) . D39 ) = ( C97 . D39 ) by L602 , L607 , L486 , SCMFSA_2:63;
thus L612: ( ( Comput (C98 , C97 , 7) ) . ( fsloc ( 0 ) ) ) = ( C97 . ( fsloc ( 0 ) ) ) by L603 , L607 , SCMFSA_2:63;
L613: ( ( Comput (C98 , C97 , 7) ) . D41 ) = ( C97 . D39 ) by L604 , L607 , L495 , SCMFSA_2:63;
L614: ( ( Comput (C98 , C97 , 7) ) . D42 ) = ( C97 . D39 ) by L605 , L607 , L498 , SCMFSA_2:63;
L615: ( ( Comput (C98 , C97 , 7) ) . D43 ) = ( C97 . D39 ) by L606 , L607 , L500 , SCMFSA_2:63;
L616: ( Comput (C98 , C97 , ( 7 + 1 )) ) = ( Exec (( C98 . 7 ) , ( Comput (C98 , C97 , 7) )) ) by L609 , EXTPRO_1:6
.= ( Exec (( goto 8 ) , ( Comput (C98 , C97 , 7) )) ) by L563 , L533;
thus L617: ( ( Comput (C98 , C97 , 8) ) . ( IC ( SCM+FSA ) ) ) = 8 by L616 , SCMFSA_2:69;
L618: ( IC ( Comput (C98 , C97 , 8) ) ) = 8 by L616 , SCMFSA_2:69;
thus L619: ( ( Comput (C98 , C97 , 8) ) . D39 ) = ( C97 . D39 ) by L611 , L616 , SCMFSA_2:69;
thus L620: ( ( Comput (C98 , C97 , 8) ) . ( fsloc ( 0 ) ) ) = ( C97 . ( fsloc ( 0 ) ) ) by L612 , L616 , SCMFSA_2:69;
L621: ( ( Comput (C98 , C97 , 8) ) . D41 ) = ( C97 . D39 ) by L613 , L616 , SCMFSA_2:69;
L622: ( ( Comput (C98 , C97 , 8) ) . D42 ) = ( C97 . D39 ) by L614 , L616 , SCMFSA_2:69;
L623: ( ( Comput (C98 , C97 , 8) ) . D43 ) = ( C97 . D39 ) by L615 , L616 , SCMFSA_2:69;
L624: ( ( Comput (C98 , C97 , 8) ) . D44 ) = ( C97 . D39 ) by L610 , L616 , SCMFSA_2:69;
L625: ( Comput (C98 , C97 , ( 8 + 1 )) ) = ( Exec (( C98 . 8 ) , ( Comput (C98 , C97 , 8) )) ) by L618 , EXTPRO_1:6
.= ( Exec (( D45 := D39 ) , ( Comput (C98 , C97 , 8) )) ) by L563 , L533;
thus L626: ( ( Comput (C98 , C97 , 9) ) . ( IC ( SCM+FSA ) ) ) = ( succ ( IC ( Comput (C98 , C97 , 8) ) ) ) by L625 , SCMFSA_2:63
.= 9 by L617;
L627: ( IC ( Comput (C98 , C97 , 9) ) ) = 9 by L626;
L628: ( ( Comput (C98 , C97 , 9) ) . D45 ) = ( C97 . D39 ) by L619 , L625 , SCMFSA_2:63;
thus L629: ( ( Comput (C98 , C97 , 9) ) . D39 ) = ( C97 . D39 ) by L619 , L625 , L487 , SCMFSA_2:63;
thus L630: ( ( Comput (C98 , C97 , 9) ) . ( fsloc ( 0 ) ) ) = ( C97 . ( fsloc ( 0 ) ) ) by L620 , L625 , SCMFSA_2:63;
L631: ( ( Comput (C98 , C97 , 9) ) . D41 ) = ( C97 . D39 ) by L621 , L625 , L496 , SCMFSA_2:63;
L632: ( ( Comput (C98 , C97 , 9) ) . D42 ) = ( C97 . D39 ) by L622 , L625 , L499 , SCMFSA_2:63;
L633: ( ( Comput (C98 , C97 , 9) ) . D43 ) = ( C97 . D39 ) by L623 , L625 , L501 , SCMFSA_2:63;
L634: ( ( Comput (C98 , C97 , 9) ) . D44 ) = ( C97 . D39 ) by L624 , L625 , L502 , SCMFSA_2:63;
L635: ( Comput (C98 , C97 , ( 9 + 1 )) ) = ( Exec (( C98 . 9 ) , ( Comput (C98 , C97 , 9) )) ) by L627 , EXTPRO_1:6
.= ( Exec (( goto 10 ) , ( Comput (C98 , C97 , 9) )) ) by L563 , L533;
thus L636: ( ( Comput (C98 , C97 , 10) ) . ( IC ( SCM+FSA ) ) ) = 10 by L635 , SCMFSA_2:69;
L637: ( IC ( Comput (C98 , C97 , 10) ) ) = 10 by L635 , SCMFSA_2:69;
thus L638: ( ( Comput (C98 , C97 , 10) ) . D39 ) = ( C97 . D39 ) by L629 , L635 , SCMFSA_2:69;
thus L639: ( ( Comput (C98 , C97 , 10) ) . ( fsloc ( 0 ) ) ) = ( C97 . ( fsloc ( 0 ) ) ) by L630 , L635 , SCMFSA_2:69;
L640: ( ( Comput (C98 , C97 , 10) ) . D41 ) = ( C97 . D39 ) by L631 , L635 , SCMFSA_2:69;
L641: ( ( Comput (C98 , C97 , 10) ) . D42 ) = ( C97 . D39 ) by L632 , L635 , SCMFSA_2:69;
L642: ( ( Comput (C98 , C97 , 10) ) . D43 ) = ( C97 . D39 ) by L633 , L635 , SCMFSA_2:69;
L643: ( ( Comput (C98 , C97 , 10) ) . D44 ) = ( C97 . D39 ) by L634 , L635 , SCMFSA_2:69;
L644: ( ( Comput (C98 , C97 , 10) ) . D45 ) = ( C97 . D39 ) by L628 , L635 , SCMFSA_2:69;
L645: ( Comput (C98 , C97 , ( 10 + 1 )) ) = ( Exec (( C98 . 10 ) , ( Comput (C98 , C97 , 10) )) ) by L637 , EXTPRO_1:6
.= ( Exec (( D40 :=len ( fsloc ( 0 ) ) ) , ( Comput (C98 , C97 , 10) )) ) by L563 , L533;
thus L646: ( ( Comput (C98 , C97 , 11) ) . ( IC ( SCM+FSA ) ) ) = ( succ ( IC ( Comput (C98 , C97 , 10) ) ) ) by L645 , SCMFSA_2:74
.= 11 by L636;
thus L647: ( ( Comput (C98 , C97 , 11) ) . D39 ) = ( C97 . D39 ) by L638 , L645 , SCMFSA_2:74;
thus L648: ( ( Comput (C98 , C97 , 11) ) . ( fsloc ( 0 ) ) ) = ( C97 . ( fsloc ( 0 ) ) ) by L639 , L645 , SCMFSA_2:74;
thus L649: ( ( Comput (C98 , C97 , 11) ) . D40 ) = ( len ( C97 . ( fsloc ( 0 ) ) ) ) by L639 , L645 , SCMFSA_2:74;
thus L650: ( ( Comput (C98 , C97 , 11) ) . D41 ) = ( C97 . D39 ) by L640 , L645 , L488 , SCMFSA_2:74;
thus L651: ( ( Comput (C98 , C97 , 11) ) . D42 ) = ( C97 . D39 ) by L641 , L645 , L489 , SCMFSA_2:74;
thus L652: ( ( Comput (C98 , C97 , 11) ) . D43 ) = ( C97 . D39 ) by L642 , L645 , L490 , SCMFSA_2:74;
thus L653: ( ( Comput (C98 , C97 , 11) ) . D44 ) = ( C97 . D39 ) by L643 , L645 , L491 , SCMFSA_2:74;
thus L654: thesis by L644 , L645 , L492 , SCMFSA_2:74;
end;
L655: (not D63 destroy D48)
proof
L656: (not D54 destroy D48) by SCMFSA7B:6 , SCMFSA_2:101;
L657: (not D55 destroy D48) by SCMFSA7B:8 , SCMFSA_2:101;
L658: (not D56 destroy D48) by SCMFSA7B:14 , SCMFSA_2:101;
L659: (not D57 destroy D48) by SCMFSA7B:14 , SCMFSA_2:101;
L660: (not D59 destroy D48) by SCMFSA7B:15;
L661: (not D60 destroy D48) by SCMFSA7B:15;
L662: (not D61 destroy D48) by SCMFSA8C:56;
L663: (not ( ( D57 ";" D59 ) ";" D60 ) destroy D48) by L659 , L660 , L661 , SCMFSA8C:54 , SCMFSA8C:55;
L664: (not D62 destroy D48) by L663 , L662 , SCMFSA8C:88;
L665: (not ( ( D54 ";" D55 ) ";" D56 ) destroy D48) by L656 , L657 , L658 , SCMFSA8C:54 , SCMFSA8C:55;
L666: (not ( ( ( D54 ";" D55 ) ";" D56 ) ";" D57 ) destroy D48) by L665 , L496 , SCMFSA7B:14 , SCMFSA8C:54;
L667: (not ( ( ( ( D54 ";" D55 ) ";" D56 ) ";" D57 ) ";" D58 ) destroy D48) by L666 , L496 , SCMFSA7B:8 , SCMFSA8C:54;
thus L668: thesis by L667 , L664 , SCMFSA8C:52;
end;
L669: ( Times (D48 , D63) ) is  good  InitHalting
proof
thus L670: ( Times (D48 , D63) ) is  good;
let C99 being (State of ( SCM+FSA ));
assume that
L671: ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) c= C99;
let C100 being (Instruction-Sequence of ( SCM+FSA ));
assume that
L672: ( Times (D48 , D63) ) c= C100;
L673: ( C100 +* ( Times (D48 , D63) ) ) = C100 by L672 , FUNCT_4:98;
L674: ( dom ( ( intloc ( 0 ) ) .--> 1 ) ) = { ( intloc ( 0 ) ) } by FUNCOP_1:13;
L675: ( dom ( ( intloc ( 0 ) ) .--> 1 ) ) misses { ( IC ( SCM+FSA ) ) } by L674 , SCMFSA_2:56 , ZFMISC_1:11;
L676: ( Start-At (( 0 ) , ( SCM+FSA )) ) c= ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) by FUNCT_4:25;
L677: C99 = ( Initialize C99 ) by L676 , L671 , FUNCT_4:98 , XBOOLE_1:1;
L678: ( intloc ( 0 ) ) in ( dom ( ( intloc ( 0 ) ) .--> 1 ) ) by L674 , TARSKI:def 1;
L679: ( dom ( ( intloc ( 0 ) ) .--> 1 ) ) misses ( dom ( Start-At (( 0 ) , ( SCM+FSA )) ) ) by L675 , FUNCOP_1:13;
L680: ( ( intloc ( 0 ) ) .--> 1 ) c= ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) by L679 , FUNCT_4:32;
L681: ( ( intloc ( 0 ) ) .--> 1 ) c= C99 by L680 , L671 , XBOOLE_1:1;
L682: ( C99 . ( intloc ( 0 ) ) ) = ( ( ( intloc ( 0 ) ) .--> 1 ) . ( intloc ( 0 ) ) ) by L681 , L678 , GRFUNC_1:2
.= 1 by FUNCOP_1:72;
L683: ( Times (D48 , D63) ) is_halting_on C99 , C100 by L655 , L682 , SCM_HALT:62;
thus L684: C100 halts_on C99 by L683 , L677 , L673 , SCMFSA7B:def 7;
end;
L685: (not D63 destroy D47)
proof
L686: (not D54 destroy D47) by SCMFSA7B:6 , SCMFSA_2:101;
L687: (not D55 destroy D47) by SCMFSA7B:8 , SCMFSA_2:101;
L688: (not D56 destroy D47) by SCMFSA7B:14 , SCMFSA_2:101;
L689: (not D57 destroy D47) by SCMFSA7B:14 , SCMFSA_2:101;
L690: (not D59 destroy D47) by SCMFSA7B:15;
L691: (not D60 destroy D47) by SCMFSA7B:15;
L692: (not D61 destroy D47) by SCMFSA8C:56;
L693: (not ( ( D57 ";" D59 ) ";" D60 ) destroy D47) by L689 , L690 , L691 , SCMFSA8C:54 , SCMFSA8C:55;
L694: (not D62 destroy D47) by L693 , L692 , SCMFSA8C:88;
L695: (not ( ( D54 ";" D55 ) ";" D56 ) destroy D47) by L686 , L687 , L688 , SCMFSA8C:54 , SCMFSA8C:55;
L696: (not ( ( ( D54 ";" D55 ) ";" D56 ) ";" D57 ) destroy D47) by L695 , L492 , SCMFSA7B:14 , SCMFSA8C:54;
L697: (not ( ( ( ( D54 ";" D55 ) ";" D56 ) ";" D57 ) ";" D58 ) destroy D47) by L696 , L492 , SCMFSA7B:8 , SCMFSA8C:54;
thus L698: thesis by L697 , L694 , SCMFSA8C:52;
end;
L699: (not D69 destroy D47)
proof
L700: (not D65 destroy D47) by SCMFSA7B:6 , SCMFSA_2:101;
L701: (not D66 destroy D47) by SCMFSA7B:8 , SCMFSA_2:101;
L702: (not D67 destroy D47) by SCMFSA7B:16 , SCMFSA_2:101;
L703: (not D64 destroy D47) by L685 , L1 , SCMFSA_2:101;
L704: (not ( ( D65 ";" D66 ) ";" D67 ) destroy D47) by L700 , L701 , L702 , SCMFSA8C:54 , SCMFSA8C:55;
thus L705: thesis by L704 , L703 , SCMFSA8C:52;
end;
L706: ( Times (D47 , D69) ) is  good  InitHalting
proof
thus L707: ( Times (D47 , D69) ) is  good;
let C101 being (State of ( SCM+FSA ));
assume that
L708: ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) c= C101;
let C102 being (Instruction-Sequence of ( SCM+FSA ));
assume that
L709: ( Times (D47 , D69) ) c= C102;
L710: ( C102 +* ( Times (D47 , D69) ) ) = C102 by L709 , FUNCT_4:98;
L711: ( dom ( ( intloc ( 0 ) ) .--> 1 ) ) = { ( intloc ( 0 ) ) } by FUNCOP_1:13;
L712: ( dom ( ( intloc ( 0 ) ) .--> 1 ) ) misses { ( IC ( SCM+FSA ) ) } by L711 , SCMFSA_2:56 , ZFMISC_1:11;
L713: ( Start-At (( 0 ) , ( SCM+FSA )) ) c= ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) by FUNCT_4:25;
L714: C101 = ( Initialize C101 ) by L713 , L708 , FUNCT_4:98 , XBOOLE_1:1;
L715: ( intloc ( 0 ) ) in ( dom ( ( intloc ( 0 ) ) .--> 1 ) ) by L711 , TARSKI:def 1;
L716: ( dom ( ( intloc ( 0 ) ) .--> 1 ) ) misses ( dom ( Start-At (( 0 ) , ( SCM+FSA )) ) ) by L712 , FUNCOP_1:13;
L717: ( ( intloc ( 0 ) ) .--> 1 ) c= ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) by L716 , FUNCT_4:32;
L718: ( ( intloc ( 0 ) ) .--> 1 ) c= C101 by L717 , L708 , XBOOLE_1:1;
L719: ( C101 . ( intloc ( 0 ) ) ) = ( ( ( intloc ( 0 ) ) .--> 1 ) . ( intloc ( 0 ) ) ) by L718 , L715 , GRFUNC_1:2
.= 1 by FUNCOP_1:72;
reconsider D159 = D64 as  good  InitHalting (Program of ( SCM+FSA )) by L669;
L720: D69 = ( ( ( D65 ";" D66 ) ";" D67 ) ";" D159 );
L721: ( Times (D47 , D69) ) is_halting_on C101 , C102 by L720 , L699 , L719 , SCM_HALT:62;
thus L722: C102 halts_on C101 by L721 , L714 , L710 , SCMFSA7B:def 7;
end;
theorem
L723: ( bubble-sort ( fsloc ( 0 ) ) ) is  keepInt0_1  InitHalting by L706;
L724: (for B95 being (Instruction-Sequence of ( SCM+FSA )) holds (for B96 being (State of ( SCM+FSA )) holds ((( B96 . D52 ) > ( 0 ) implies ( ( IExec (D62 , B95 , B96) ) . D53 ) = ( ( ( B96 . D53 ) +* (( abs ( B96 . D49 ) ) , ( ( B96 . D53 ) /. ( abs ( B96 . D50 ) ) )) ) +* (( abs ( B96 . D50 ) ) , ( B96 . D51 )) )) & (( B96 . D52 ) <= ( 0 ) implies ( ( IExec (D62 , B95 , B96) ) . D53 ) = ( B96 . D53 )))))
proof
let C103 being (Instruction-Sequence of ( SCM+FSA ));
let C104 being (State of ( SCM+FSA ));
set D160 = ( Initialized C104 );
set D161 = ( Exec (D57 , D160) );
set D162 = ( IExec (( D57 ";" D59 ) , C103 , C104) );
L725: ( D160 . D53 ) = ( C104 . D53 ) by SCMFSA_M:37;
L726: ( D160 . D50 ) = ( C104 . D50 ) by SCMFSA_M:37;
L727: ( D161 . D52 ) = ( ( C104 . D53 ) /. ( abs ( C104 . D50 ) ) ) by L726 , L725 , L10;
L728: ( D161 . D53 ) = ( C104 . D53 ) by L725 , SCMFSA_2:72;
L729: ( D161 . D49 ) = ( C104 . D49 ) by L16;
L730: ( D161 . D50 ) = ( C104 . D50 ) by L16;
L731: ( D161 . D51 ) = ( C104 . D51 ) by L16;
L732: ( D162 . D53 ) = ( ( Exec (D59 , D161) ) . D53 ) by SCMFSA6C:9
.= ( ( C104 . D53 ) +* (( abs ( C104 . D49 ) ) , ( ( C104 . D53 ) /. ( abs ( C104 . D50 ) ) )) ) by L727 , L728 , L729 , L13;
L733: ( D162 . D50 ) = ( ( Exec (D59 , D161) ) . D50 ) by SCMFSA6C:8
.= ( C104 . D50 ) by L730 , SCMFSA_2:73;
L734: ( D162 . D51 ) = ( ( Exec (D59 , D161) ) . D51 ) by SCMFSA6C:8
.= ( C104 . D51 ) by L731 , SCMFSA_2:73;
set D163 = ( ( D57 ";" D59 ) ";" D60 );
set D164 = ( Stop ( SCM+FSA ) );
thus L735:now
assume L736: ( C104 . D52 ) > ( 0 );
thus L737: ( ( IExec (( if>0 (D52 , D163 , D164) ) , C103 , C104) ) . D53 ) = ( ( IExec (D163 , C103 , C104) ) . D53 ) by L736 , SCM_HALT:44
.= ( ( Exec (D60 , D162) ) . D53 ) by SCMFSA6C:7
.= ( ( ( C104 . D53 ) +* (( abs ( C104 . D49 ) ) , ( ( C104 . D53 ) /. ( abs ( C104 . D50 ) ) )) ) +* (( abs ( C104 . D50 ) ) , ( C104 . D51 )) ) by L732 , L733 , L734 , L13;
end;
assume L738: ( C104 . D52 ) <= ( 0 );
thus L739: ( ( IExec (( if>0 (D52 , D163 , D164) ) , C103 , C104) ) . D53 ) = ( ( IExec (D164 , C103 , C104) ) . D53 ) by L738 , SCM_HALT:44
.= ( C104 . D53 ) by L24;
end;
L740: (for B97 being (Instruction-Sequence of ( SCM+FSA )) holds (for B98 being (State of ( SCM+FSA )) holds ( ( IExec (D62 , B97 , B98) ) . D49 ) = ( B98 . D49 )))
proof
let C105 being (Instruction-Sequence of ( SCM+FSA ));
let C106 being (State of ( SCM+FSA ));
set D165 = ( Exec (D57 , ( Initialized C106 )) );
set D166 = ( IExec (( D57 ";" D59 ) , C105 , C106) );
L741: ( D165 . D49 ) = ( C106 . D49 ) by L16;
L742: ( D166 . D49 ) = ( ( Exec (D59 , D165) ) . D49 ) by SCMFSA6C:8
.= ( C106 . D49 ) by L741 , SCMFSA_2:73;
per cases ;
suppose L743: ( C106 . D52 ) > ( 0 );

thus L744: ( ( IExec (D62 , C105 , C106) ) . D49 ) = ( ( IExec (( ( D57 ";" D59 ) ";" D60 ) , C105 , C106) ) . D49 ) by L743 , SCM_HALT:44
.= ( ( Exec (D60 , D166) ) . D49 ) by SCMFSA6C:6
.= ( C106 . D49 ) by L742 , SCMFSA_2:73;
end;
suppose L745: ( C106 . D52 ) <= ( 0 );

thus L746: ( ( IExec (D62 , C105 , C106) ) . D49 ) = ( ( IExec (( Stop ( SCM+FSA ) ) , C105 , C106) ) . D49 ) by L745 , SCM_HALT:44
.= ( C106 . D49 ) by L24;
end;
end;
L748: (for B99 being (Instruction-Sequence of ( SCM+FSA )) holds (for B100 being (State of ( SCM+FSA )) holds ((( B100 . D49 ) <= ( len ( B100 . D53 ) ) & ( B100 . D49 ) >= 2) implies (( ( IExec (D63 , B99 , B100) ) . D49 ) = ( ( B100 . D49 ) - 1 ) & ( B100 . D53 ) , ( ( IExec (D63 , B99 , B100) ) . D53 ) are_fiberwise_equipotent  & (( ( B100 . D53 ) . ( B100 . D49 ) ) = ( ( ( IExec (D63 , B99 , B100) ) . D53 ) . ( B100 . D49 ) ) or ( ( B100 . D53 ) . ( B100 . D49 ) ) = ( ( ( IExec (D63 , B99 , B100) ) . D53 ) . ( ( B100 . D49 ) - 1 ) )) & (( ( B100 . D53 ) . ( B100 . D49 ) ) = ( ( ( IExec (D63 , B99 , B100) ) . D53 ) . ( B100 . D49 ) ) or ( ( B100 . D53 ) . ( ( B100 . D49 ) - 1 ) ) = ( ( ( IExec (D63 , B99 , B100) ) . D53 ) . ( B100 . D49 ) )) & (( ( B100 . D53 ) . ( B100 . D49 ) ) = ( ( ( IExec (D63 , B99 , B100) ) . D53 ) . ( ( B100 . D49 ) - 1 ) ) or ( ( B100 . D53 ) . ( ( B100 . D49 ) - 1 ) ) = ( ( ( IExec (D63 , B99 , B100) ) . D53 ) . ( ( B100 . D49 ) - 1 ) )) & (for B101 being set holds ((B101 <> ( ( B100 . D49 ) - 1 ) & B101 <> ( B100 . D49 ) & B101 in ( dom ( B100 . D53 ) )) implies ( ( B100 . D53 ) . B101 ) = ( ( ( IExec (D63 , B99 , B100) ) . D53 ) . B101 ))) & (ex B102 , B103 being Integer st (B102 = ( ( ( IExec (D63 , B99 , B100) ) . D53 ) . ( ( B100 . D49 ) - 1 ) ) & B103 = ( ( ( IExec (D63 , B99 , B100) ) . D53 ) . ( B100 . D49 ) ) & B102 >= B103))))))
proof
let C107 being (Instruction-Sequence of ( SCM+FSA ));
let C108 being (State of ( SCM+FSA ));
assume that
L749: ( C108 . D49 ) <= ( len ( C108 . D53 ) )
and
L750: ( C108 . D49 ) >= 2;
L751: ( ( C108 . D49 ) - 1 ) >= ( 2 - 1 ) by L750 , XREAL_1:9;
L752: ( abs ( ( C108 . D49 ) - 1 ) ) = ( ( C108 . D49 ) - 1 ) by L751 , ABSVALUE:def 1;
L753: ( ( C108 . D49 ) - 1 ) <= ( len ( C108 . D53 ) ) by L749 , XREAL_1:146 , XXREAL_0:2;
L754: ( C108 . D49 ) >= 1 by L750 , XXREAL_0:2;
L755: ( abs ( C108 . D49 ) ) = ( C108 . D49 ) by L750 , ABSVALUE:def 1;
reconsider D167 = ( ( C108 . D49 ) - 1 ) as (Element of ( NAT )) by L751 , INT_1:3;
reconsider D168 = ( C108 . D49 ) as (Element of ( NAT )) by L750 , INT_1:3;
L756: D167 in ( dom ( C108 . D53 ) ) by L751 , L753 , FINSEQ_3:25;
reconsider D169 = ( ( C108 . D53 ) . D167 ) as Integer;
L757: D168 in ( dom ( C108 . D53 ) ) by L749 , L754 , FINSEQ_3:25;
reconsider D170 = ( ( C108 . D53 ) . D168 ) as Integer;
set D171 = ( Initialized C108 );
set D172 = ( Exec (D54 , D171) );
set D173 = ( IExec (( D54 ";" D55 ) , C107 , C108) );
set D174 = ( IExec (( ( D54 ";" D55 ) ";" D56 ) , C107 , C108) );
set D175 = ( IExec (( ( ( D54 ";" D55 ) ";" D56 ) ";" D57 ) , C107 , C108) );
set D176 = ( IExec (( ( ( ( D54 ";" D55 ) ";" D56 ) ";" D57 ) ";" D58 ) , C107 , C108) );
set D177 = ( IExec (D63 , C107 , C108) );
L758: ( D172 . D50 ) = ( D171 . D49 ) by SCMFSA_2:63
.= ( C108 . D49 ) by SCMFSA_M:37;
L759: ( D172 . D53 ) = ( D171 . D53 ) by SCMFSA_2:63
.= ( C108 . D53 ) by SCMFSA_M:37;
L760: ( D172 . D49 ) = ( C108 . D49 ) by L20;
L761: ( D172 . D39 ) = ( D171 . D39 ) by SCMFSA_2:63
.= 1 by SCMFSA_M:9;
L762: ( D173 . D53 ) = ( ( Exec (D55 , D172) ) . D53 ) by SCMFSA6C:9
.= ( C108 . D53 ) by L759 , SCMFSA_2:65;
L763: ( D173 . D49 ) = ( ( Exec (D55 , D172) ) . D49 ) by SCMFSA6C:8
.= ( ( C108 . D49 ) - 1 ) by L760 , L761 , SCMFSA_2:65;
L764: ( D173 . D50 ) = ( ( Exec (D55 , D172) ) . D50 ) by SCMFSA6C:8
.= ( C108 . D49 ) by L758 , L497 , SCMFSA_2:65;
L765: ( D174 . D53 ) = ( ( Exec (D56 , D173) ) . D53 ) by SCMFSA6C:7
.= ( C108 . D53 ) by L762 , SCMFSA_2:72;
L766: ( ( C108 . D53 ) /. D167 ) = D169 by L751 , L753 , FINSEQ_4:15;
L767: ( D174 . D51 ) = ( ( Exec (D56 , D173) ) . D51 ) by SCMFSA6C:6
.= D169 by L752 , L762 , L763 , L766 , L10;
L768: ( D174 . D50 ) = ( ( Exec (D56 , D173) ) . D50 ) by SCMFSA6C:6
.= ( C108 . D49 ) by L764 , L500 , SCMFSA_2:72;
L769: ( D174 . D49 ) = ( ( Exec (D56 , D173) ) . D49 ) by SCMFSA6C:6
.= ( ( C108 . D49 ) - 1 ) by L763 , L498 , SCMFSA_2:72;
L770: ( D175 . D53 ) = ( ( Exec (D57 , D174) ) . D53 ) by SCMFSA6C:7
.= ( C108 . D53 ) by L765 , SCMFSA_2:72;
L771: ( ( C108 . D53 ) /. D168 ) = D170 by L749 , L754 , FINSEQ_4:15;
L772: ( D175 . D52 ) = ( ( Exec (D57 , D174) ) . D52 ) by SCMFSA6C:6
.= D170 by L755 , L765 , L768 , L771 , L10;
L773: ( D175 . D49 ) = ( ( Exec (D57 , D174) ) . D49 ) by SCMFSA6C:6
.= ( ( C108 . D49 ) - 1 ) by L769 , L499 , SCMFSA_2:72;
L774: ( D175 . D50 ) = ( ( Exec (D57 , D174) ) . D50 ) by SCMFSA6C:6
.= ( C108 . D49 ) by L768 , L501 , SCMFSA_2:72;
L775: ( D175 . D51 ) = ( ( Exec (D57 , D174) ) . D51 ) by SCMFSA6C:6
.= ( ( C108 . D53 ) . ( ( C108 . D49 ) - 1 ) ) by L767 , L502 , SCMFSA_2:72;
L776: ( D176 . D53 ) = ( ( Exec (D58 , D175) ) . D53 ) by SCMFSA6C:7
.= ( C108 . D53 ) by L770 , SCMFSA_2:65;
L777: ( D176 . D49 ) = ( ( Exec (D58 , D175) ) . D49 ) by SCMFSA6C:6
.= ( ( C108 . D49 ) - 1 ) by L773 , L499 , SCMFSA_2:65;
L778: ( D176 . D50 ) = ( ( Exec (D58 , D175) ) . D50 ) by SCMFSA6C:6
.= ( C108 . D49 ) by L774 , L501 , SCMFSA_2:65;
L779: ( D176 . D51 ) = ( ( Exec (D58 , D175) ) . D51 ) by SCMFSA6C:6
.= D169 by L775 , L502 , SCMFSA_2:65;
L780: ( D176 . D52 ) = ( ( Exec (D58 , D175) ) . D52 ) by SCMFSA6C:6
.= ( D170 - D169 ) by L772 , L775 , SCMFSA_2:65;
L781: ( D177 . D53 ) = ( ( IExec (D62 , C107 , D176) ) . D53 ) by SCMFSA6C:2;
thus L782: ( D177 . D49 ) = ( ( IExec (D62 , C107 , D176) ) . D49 ) by SCMFSA6C:1
.= ( ( C108 . D49 ) - 1 ) by L777 , L740;
per cases ;
suppose L783: ( D176 . D52 ) > ( 0 );

L784: ( D177 . D53 ) = ( ( ( C108 . D53 ) +* (D167 , D170) ) +* (D168 , D169) ) by L783 , L752 , L755 , L771 , L776 , L777 , L778 , L779 , L781 , L724;
L785: ( dom ( ( C108 . D53 ) +* (D167 , D170) ) ) = ( dom ( C108 . D53 ) ) by FUNCT_7:30;
L786: ( dom ( D177 . D53 ) ) = ( dom ( C108 . D53 ) ) by L785 , L784 , FUNCT_7:30;
L787: D168 in ( dom ( ( C108 . D53 ) +* (D167 , D170) ) ) by L749 , L754 , L785 , FINSEQ_3:25;
L788: ( ( D177 . D53 ) . D168 ) = ( ( C108 . D53 ) . D167 ) by L757 , L784 , L785 , FUNCT_7:31;
L789:
now
per cases ;
suppose L790: D167 = D168;

thus L791: ( ( D177 . D53 ) . D167 ) = ( ( C108 . D53 ) . D168 ) by L790;
end;
suppose L792: D167 <> D168;

thus L793: ( ( D177 . D53 ) . D167 ) = ( ( ( C108 . D53 ) +* (D167 , D170) ) . D167 ) by L792 , L784 , FUNCT_7:32
.= ( ( C108 . D53 ) . D168 ) by L756 , FUNCT_7:31;
end;
end;
L795:
now
let C109 being set;
assume that
L796: C109 <> D167
and
L797: C109 <> D168
and
L798: C109 in ( dom ( C108 . D53 ) );
thus L799: ( ( D177 . D53 ) . C109 ) = ( ( ( C108 . D53 ) +* (D167 , D170) ) . C109 ) by L784 , L797 , FUNCT_7:32
.= ( ( C108 . D53 ) . C109 ) by L796 , FUNCT_7:32;
end;
thus L800: ( C108 . D53 ) , ( D177 . D53 ) are_fiberwise_equipotent  by L795 , L756 , L757 , L786 , L788 , L789 , RFINSEQ:28;
thus L801: (( ( C108 . D53 ) . ( C108 . D49 ) ) = ( ( ( IExec (D63 , C107 , C108) ) . D53 ) . ( C108 . D49 ) ) or ( ( C108 . D53 ) . ( C108 . D49 ) ) = ( ( ( IExec (D63 , C107 , C108) ) . D53 ) . ( ( C108 . D49 ) - 1 ) )) by L789;
thus L802: (( ( C108 . D53 ) . ( C108 . D49 ) ) = ( ( ( IExec (D63 , C107 , C108) ) . D53 ) . ( C108 . D49 ) ) or ( ( C108 . D53 ) . ( ( C108 . D49 ) - 1 ) ) = ( ( ( IExec (D63 , C107 , C108) ) . D53 ) . ( C108 . D49 ) )) by L784 , L787 , FUNCT_7:31;
thus L803: (( ( C108 . D53 ) . ( C108 . D49 ) ) = ( ( ( IExec (D63 , C107 , C108) ) . D53 ) . ( ( C108 . D49 ) - 1 ) ) or ( ( C108 . D53 ) . ( ( C108 . D49 ) - 1 ) ) = ( ( ( IExec (D63 , C107 , C108) ) . D53 ) . ( ( C108 . D49 ) - 1 ) )) by L789;
thus L804: (for B104 being set holds ((B104 <> ( ( C108 . D49 ) - 1 ) & B104 <> ( C108 . D49 ) & B104 in ( dom ( C108 . D53 ) )) implies ( ( C108 . D53 ) . B104 ) = ( ( D177 . D53 ) . B104 ))) by L795;
L805: ( ( D170 - D169 ) + D169 ) > ( ( 0 ) + D169 ) by L780 , L783 , XREAL_1:6;
take D170;
take D169;
thus L806: thesis by L757 , L784 , L785 , L789 , L805 , FUNCT_7:31;
end;
suppose L807: ( D176 . D52 ) <= ( 0 );

thus L808: ( C108 . D53 ) , ( D177 . D53 ) are_fiberwise_equipotent  by L807 , L776 , L781 , L724;
thus L809: (( ( C108 . D53 ) . ( C108 . D49 ) ) = ( ( ( IExec (D63 , C107 , C108) ) . D53 ) . ( C108 . D49 ) ) or ( ( C108 . D53 ) . ( C108 . D49 ) ) = ( ( ( IExec (D63 , C107 , C108) ) . D53 ) . ( ( C108 . D49 ) - 1 ) )) by L776 , L781 , L807 , L724;
thus L810: (( ( C108 . D53 ) . ( C108 . D49 ) ) = ( ( ( IExec (D63 , C107 , C108) ) . D53 ) . ( C108 . D49 ) ) or ( ( C108 . D53 ) . ( ( C108 . D49 ) - 1 ) ) = ( ( ( IExec (D63 , C107 , C108) ) . D53 ) . ( C108 . D49 ) )) by L776 , L781 , L807 , L724;
thus L811: (( ( C108 . D53 ) . ( C108 . D49 ) ) = ( ( ( IExec (D63 , C107 , C108) ) . D53 ) . ( ( C108 . D49 ) - 1 ) ) or ( ( C108 . D53 ) . ( ( C108 . D49 ) - 1 ) ) = ( ( ( IExec (D63 , C107 , C108) ) . D53 ) . ( ( C108 . D49 ) - 1 ) )) by L776 , L781 , L807 , L724;
thus L812: (for B105 being set holds ((B105 <> ( ( C108 . D49 ) - 1 ) & B105 <> ( C108 . D49 ) & B105 in ( dom ( C108 . D53 ) )) implies ( ( C108 . D53 ) . B105 ) = ( ( D177 . D53 ) . B105 ))) by L776 , L781 , L807 , L724;
L813: ( ( D170 - D169 ) + D169 ) <= ( ( 0 ) + D169 ) by L780 , L807 , XREAL_1:6;
take D169;
take D170;
thus L814: thesis by L776 , L781 , L807 , L813 , L724;
end;
end;
L816: (for B106 being (Instruction-Sequence of ( SCM+FSA )) holds (for B107 being (State of ( SCM+FSA )) holds ((( B107 . D48 ) >= ( 0 ) & ( B107 . D48 ) < ( B107 . D49 ) & ( B107 . D49 ) <= ( len ( B107 . D53 ) )) implies (ex B108 being (Element of ( NAT )) st (B108 <= ( B107 . D49 ) & B108 >= ( ( B107 . D49 ) - ( B107 . D48 ) ) & ( ( ( IExec (D64 , B106 , B107) ) . D53 ) . B108 ) = ( ( B107 . D53 ) . ( B107 . D49 ) ))))))
proof
let C110 being (Instruction-Sequence of ( SCM+FSA ));
let C111 being (State of ( SCM+FSA ));
assume that
L817: ( C111 . D48 ) >= ( 0 )
and
L818: ( C111 . D48 ) < ( C111 . D49 )
and
L819: ( C111 . D49 ) <= ( len ( C111 . D53 ) );
defpred S2[ Nat ] means (for B109 being (State of ( SCM+FSA )) holds (for R16 being (Instruction-Sequence of ( SCM+FSA )) holds ((( B109 . D48 ) = $1 & ( B109 . D48 ) < ( B109 . D49 ) & ( B109 . D49 ) <= ( len ( B109 . D53 ) )) implies ((for B110 being (Element of ( NAT )) holds ((B110 > ( B109 . D49 ) & B110 <= ( len ( B109 . D53 ) )) implies ( ( B109 . D53 ) . B110 ) = ( ( ( IExec (D64 , R16 , B109) ) . D53 ) . B110 ))) & (ex B111 being (Element of ( NAT )) st (B111 <= ( B109 . D49 ) & B111 >= ( ( B109 . D49 ) - $1 ) & ( ( ( IExec (D64 , R16 , B109) ) . D53 ) . B111 ) = ( ( B109 . D53 ) . ( B109 . D49 ) )))))));
L820: S2[ ( 0 ) ]
proof
let C112 being (State of ( SCM+FSA ));
let R16 being (Instruction-Sequence of ( SCM+FSA ));
assume that
L821: ( C112 . D48 ) = ( 0 )
and
L822: ( C112 . D48 ) < ( C112 . D49 )
and
L823: ( C112 . D49 ) <= ( len ( C112 . D53 ) );
set D178 = ( ( IExec (D64 , R16 , C112) ) . D53 );
thus L824: (for B112 being (Element of ( NAT )) holds ((B112 > ( C112 . D49 ) & B112 <= ( len ( C112 . D53 ) )) implies ( ( C112 . D53 ) . B112 ) = ( D178 . B112 ))) by L821 , SCM_HALT:67;
reconsider D179 = ( C112 . D49 ) as (Element of ( NAT )) by L821 , L822 , INT_1:3;
take D179;
thus L825: D179 <= ( C112 . D49 );
thus L826: D179 >= ( ( C112 . D49 ) - ( 0 ) );
thus L827: thesis by L821 , SCM_HALT:67;
end;
set D180 = ( SubFrom (D48 , D39) );
L828:
now
let C113 being (Element of ( NAT ));
assume L829: S2[ C113 ];
L830:
now
let C114 being (State of ( SCM+FSA ));
let R16 being (Instruction-Sequence of ( SCM+FSA ));
assume that
L831: ( C114 . D48 ) = ( C113 + 1 )
and
L832: ( C114 . D48 ) < ( C114 . D49 )
and
L833: ( C114 . D49 ) <= ( len ( C114 . D53 ) );
set D181 = ( IExec (( D63 ";" D180 ) , R16 , C114) );
set D182 = ( IExec (D63 , R16 , C114) );
set D183 = ( IExec (D64 , R16 , D181) );
L834: ( D181 . D48 ) = ( ( Exec (D180 , D182) ) . D48 ) by SCM_HALT:23
.= ( ( D182 . D48 ) - ( D182 . D39 ) ) by SCMFSA_2:65
.= ( ( D182 . D48 ) - 1 ) by SCM_HALT:9
.= ( ( ( Initialized C114 ) . D48 ) - 1 ) by L655 , SCM_HALT:53
.= ( ( C114 . D48 ) - 1 ) by SCMFSA_M:37;
L835: 2 <= ( C113 + 2 ) by NAT_1:11;
L836: ( ( C113 + 1 ) + 1 ) <= ( C114 . D49 ) by L831 , L832 , INT_1:7;
L837: 2 <= ( C114 . D49 ) by L836 , L835 , XXREAL_0:2;
L838: ( D181 . D49 ) = ( ( Exec (D180 , D182) ) . D49 ) by SCM_HALT:23
.= ( D182 . D49 ) by L493 , SCMFSA_2:65
.= ( ( C114 . D49 ) - 1 ) by L833 , L837 , L748;
L839: ( ( C114 . D48 ) - 1 ) < ( ( C114 . D49 ) - 1 ) by L832 , XREAL_1:9;
L840: ( D181 . D48 ) < ( D181 . D49 ) by L832 , L834 , L838 , XREAL_1:9;
L841: ( D181 . D53 ) = ( ( Exec (D180 , D182) ) . D53 ) by SCM_HALT:24
.= ( D182 . D53 ) by SCMFSA_2:65;
L842: ( C114 . D53 ) , ( D182 . D53 ) are_fiberwise_equipotent  by L833 , L837 , L748;
L843: ( len ( C114 . D53 ) ) = ( len ( D181 . D53 ) ) by L842 , L841 , RFINSEQ:3;
L844: ( D181 . D49 ) <= ( len ( D181 . D53 ) ) by L843 , L833 , L838 , XREAL_1:146 , XXREAL_0:2;
L845: ( ( IExec (D64 , R16 , C114) ) . D53 ) = ( D183 . D53 ) by L831 , L655 , SCM_HALT:69;
L846: ( D182 . D53 ) = ( ( Exec (D180 , D182) ) . D53 ) by SCMFSA_2:65
.= ( D181 . D53 ) by SCM_HALT:24;
thus L847: (for B113 being (Element of ( NAT )) holds ((B113 > ( C114 . D49 ) & B113 <= ( len ( C114 . D53 ) )) implies ( ( C114 . D53 ) . B113 ) = ( ( ( IExec (D64 , R16 , C114) ) . D53 ) . B113 )))
proof
let C115 being (Element of ( NAT ));
assume that
L848: C115 > ( C114 . D49 )
and
L849: C115 <= ( len ( C114 . D53 ) );
L850: ( C114 . D49 ) > ( ( C114 . D49 ) - 1 ) by XREAL_1:146;
L851: C115 > ( D181 . D49 ) by L838 , L848 , XREAL_1:146 , XXREAL_0:2;
L852: C115 <= ( len ( D181 . D53 ) ) by L841 , L842 , L849 , RFINSEQ:3;
L853: C115 >= 2 by L837 , L848 , XXREAL_0:2;
L854: C115 >= 1 by L853 , XXREAL_0:2;
L855: C115 in ( dom ( C114 . D53 ) ) by L854 , L849 , FINSEQ_3:25;
thus L856: ( ( C114 . D53 ) . C115 ) = ( ( D181 . D53 ) . C115 ) by L855 , L833 , L837 , L846 , L848 , L850 , L748
.= ( ( ( IExec (D64 , R16 , C114) ) . D53 ) . C115 ) by L829 , L831 , L834 , L840 , L844 , L845 , L851 , L852;
end;

thus L857:now
reconsider D184 = ( C114 . D49 ) as (Element of ( NAT )) by L831 , L832 , INT_1:3;
per cases  by L833 , L837 , L748;
suppose L858: ( ( C114 . D53 ) . ( C114 . D49 ) ) = ( ( ( IExec (D63 , R16 , C114) ) . D53 ) . ( C114 . D49 ) );

take D185 = D184;
thus L859: D185 <= ( C114 . D49 );
L860: D185 <= ( D185 + ( C113 + 1 ) ) by NAT_1:11;
thus L861: D185 >= ( ( C114 . D49 ) - ( C113 + 1 ) ) by L860 , XREAL_1:20;
thus L862: ( ( ( IExec (D64 , R16 , C114) ) . D53 ) . D185 ) = ( ( C114 . D53 ) . ( C114 . D49 ) ) by L829 , L831 , L833 , L834 , L838 , L839 , L843 , L844 , L845 , L846 , L858 , XREAL_1:146;
end;
suppose L863: ( ( C114 . D53 ) . ( C114 . D49 ) ) = ( ( ( IExec (D63 , R16 , C114) ) . D53 ) . ( ( C114 . D49 ) - 1 ) );

consider C116 being (Element of ( NAT )) such that L864: C116 <= ( D181 . D49 ) and L865: C116 >= ( ( D181 . D49 ) - C113 ) and L866: ( ( ( IExec (D64 , R16 , D181) ) . D53 ) . C116 ) = ( ( D181 . D53 ) . ( D181 . D49 ) ) by L829 , L831 , L834 , L840 , L844;
take D186 = C116;
thus L867: D186 <= ( C114 . D49 ) by L838 , L864 , XREAL_1:146 , XXREAL_0:2;
thus L868: D186 >= ( ( C114 . D49 ) - ( C113 + 1 ) ) by L838 , L865;
thus L869: ( ( ( IExec (D64 , R16 , C114) ) . D53 ) . D186 ) = ( ( C114 . D53 ) . ( C114 . D49 ) ) by L831 , L838 , L846 , L863 , L866 , L655 , SCM_HALT:69;
end;
end;
end;
thus L858: S2[ ( C113 + 1 ) ] by L830;
end;
L859: (for B114 being (Element of ( NAT )) holds S2[ B114 ]) from NAT_1:sch 1(L820 , L828);
reconsider D187 = ( C111 . D48 ) as (Element of ( NAT )) by L817 , INT_1:3;
L860: S2[ D187 ] by L859;
thus L861: thesis by L860 , L818 , L819;
end;
L862: (for B115 being (Element of ( NAT )) holds (for B116 being (State of ( SCM+FSA )) holds (for R16 being (Instruction-Sequence of ( SCM+FSA )) holds ((B115 = ( B116 . D48 ) & B115 < ( B116 . D49 ) & ( B116 . D49 ) <= ( len ( B116 . D53 ) )) implies (( B116 . D53 ) , ( ( IExec (D64 , R16 , B116) ) . D53 ) are_fiberwise_equipotent  & (for B117 being (Element of ( NAT )) holds (((B117 < ( ( B116 . D49 ) - B115 ) & B117 >= 1) or (B117 > ( B116 . D49 ) & B117 in ( dom ( B116 . D53 ) ))) implies ( ( B116 . D53 ) . B117 ) = ( ( ( IExec (D64 , R16 , B116) ) . D53 ) . B117 ))) & (for B118 being (Element of ( NAT )) holds ((B118 >= ( ( B116 . D49 ) - B115 ) & B118 <= ( B116 . D49 )) implies (ex B119 , B120 being Integer st (B119 = ( ( ( IExec (D64 , R16 , B116) ) . D53 ) . ( ( B116 . D49 ) - B115 ) ) & B120 = ( ( ( IExec (D64 , R16 , B116) ) . D53 ) . B118 ) & B119 >= B120)))) & (for B121 being (Element of ( NAT )) holds ((B121 >= ( ( B116 . D49 ) - B115 ) & B121 <= ( B116 . D49 )) implies (ex B122 being (Element of ( NAT )) st (B122 >= ( ( B116 . D49 ) - B115 ) & B122 <= ( B116 . D49 ) & ( ( ( IExec (D64 , R16 , B116) ) . D53 ) . B121 ) = ( ( B116 . D53 ) . B122 ))))))))))
proof
defpred S3[ Nat ] means (for R16 being (Instruction-Sequence of ( SCM+FSA )) holds (for B123 being (State of ( SCM+FSA )) holds (($1 = ( B123 . D48 ) & $1 < ( B123 . D49 ) & ( B123 . D49 ) <= ( len ( B123 . D53 ) )) implies (( B123 . D53 ) , ( ( IExec (D64 , R16 , B123) ) . D53 ) are_fiberwise_equipotent  & (for B124 being (Element of ( NAT )) holds (((B124 < ( ( B123 . D49 ) - $1 ) & B124 >= 1) or (B124 > ( B123 . D49 ) & B124 in ( dom ( B123 . D53 ) ))) implies ( ( B123 . D53 ) . B124 ) = ( ( ( IExec (D64 , R16 , B123) ) . D53 ) . B124 ))) & (for B125 being (Element of ( NAT )) holds ((B125 >= ( ( B123 . D49 ) - $1 ) & B125 <= ( B123 . D49 )) implies (ex B126 , B127 being Integer st (B126 = ( ( ( IExec (D64 , R16 , B123) ) . D53 ) . ( ( B123 . D49 ) - $1 ) ) & B127 = ( ( ( IExec (D64 , R16 , B123) ) . D53 ) . B125 ) & B126 >= B127)))) & (for B128 being (Element of ( NAT )) holds ((B128 >= ( ( B123 . D49 ) - $1 ) & B128 <= ( B123 . D49 )) implies (ex B129 being (Element of ( NAT )) st (B129 >= ( ( B123 . D49 ) - $1 ) & B129 <= ( B123 . D49 ) & ( ( ( IExec (D64 , R16 , B123) ) . D53 ) . B128 ) = ( ( B123 . D53 ) . B129 )))))))));
L863:
now
let C117 being (State of ( SCM+FSA ));
let R16 being (Instruction-Sequence of ( SCM+FSA ));
assume that
L864: ( 0 ) = ( C117 . D48 )
and
L865: ( 0 ) < ( C117 . D49 )
and
L866: ( C117 . D49 ) <= ( len ( C117 . D53 ) );
set D188 = ( ( IExec (D64 , R16 , C117) ) . D53 );
thus L867: ( C117 . D53 ) , D188 are_fiberwise_equipotent  by L864 , SCM_HALT:67;
thus L868: (for B130 being (Element of ( NAT )) holds (((B130 < ( ( C117 . D49 ) - ( 0 ) ) & B130 >= 1) or (B130 > ( C117 . D49 ) & B130 in ( dom ( C117 . D53 ) ))) implies ( ( C117 . D53 ) . B130 ) = ( ( ( IExec (D64 , R16 , C117) ) . D53 ) . B130 ))) by L864 , SCM_HALT:67;
thus L869:now
let C118 being (Element of ( NAT ));
assume that
L870: C118 >= ( ( C117 . D49 ) - ( 0 ) )
and
L871: C118 <= ( C117 . D49 );
L872: C118 = ( C117 . D49 ) by L870 , L871 , XXREAL_0:1;
reconsider D189 = ( ( C117 . D53 ) . C118 ) as Integer;
take D190 = D189;
take D191 = D189;
thus L873: D190 = ( ( ( IExec (D64 , R16 , C117) ) . D53 ) . ( ( C117 . D49 ) - ( 0 ) ) ) by L864 , L872 , SCM_HALT:67;
thus L874: D191 = ( D188 . C118 ) by L864 , SCM_HALT:67;
thus L875: D190 >= D191;
end;
let C119 being (Element of ( NAT ));
assume that
L876: C119 >= ( ( C117 . D49 ) - ( 0 ) )
and
L877: C119 <= ( C117 . D49 );
take D192 = C119;
thus L878: (D192 >= ( ( C117 . D49 ) - ( 0 ) ) & D192 <= ( C117 . D49 )) by L876 , L877;
thus L879: ( ( ( IExec (D64 , R16 , C117) ) . D53 ) . C119 ) = ( ( C117 . D53 ) . D192 ) by L864 , SCM_HALT:67;
end;
L880: S3[ ( 0 ) ] by L863;
set D193 = ( SubFrom (D48 , D39) );
L881:
now
let C120 being (Element of ( NAT ));
assume L882: S3[ C120 ];
L883:
now
let C121 being (State of ( SCM+FSA ));
let R16 being (Instruction-Sequence of ( SCM+FSA ));
set D194 = ( IExec (( D63 ";" D193 ) , R16 , C121) );
set D195 = ( IExec (D63 , R16 , C121) );
set D196 = ( IExec (D64 , R16 , D194) );
assume that
L884: ( C120 + 1 ) = ( C121 . D48 )
and
L885: ( C120 + 1 ) < ( C121 . D49 )
and
L886: ( C121 . D49 ) <= ( len ( C121 . D53 ) );
L887: ( D194 . D48 ) = ( ( Exec (D193 , D195) ) . D48 ) by SCM_HALT:23
.= ( ( D195 . D48 ) - ( D195 . D39 ) ) by SCMFSA_2:65
.= ( ( D195 . D48 ) - 1 ) by SCM_HALT:9
.= ( ( ( Initialized C121 ) . D48 ) - 1 ) by L655 , SCM_HALT:53
.= ( ( C120 + 1 ) - 1 ) by L884 , SCMFSA_M:37
.= C120;
L888: 2 <= ( C120 + 2 ) by NAT_1:11;
L889: ( ( C120 + 1 ) + 1 ) <= ( C121 . D49 ) by L885 , INT_1:7;
L890: 2 <= ( C121 . D49 ) by L889 , L888 , XXREAL_0:2;
L891: ( D194 . D49 ) = ( ( Exec (D193 , D195) ) . D49 ) by SCM_HALT:23
.= ( D195 . D49 ) by L493 , SCMFSA_2:65
.= ( ( C121 . D49 ) - 1 ) by L886 , L890 , L748;
L892: ( ( C120 + 1 ) - 1 ) < ( ( C121 . D49 ) - 1 ) by L885 , XREAL_1:9;
L893: ( D194 . D53 ) = ( ( Exec (D193 , D195) ) . D53 ) by SCM_HALT:24
.= ( D195 . D53 ) by SCMFSA_2:65;
L894: ( C121 . D53 ) , ( D195 . D53 ) are_fiberwise_equipotent  by L886 , L890 , L748;
L895: ( len ( C121 . D53 ) ) = ( len ( D194 . D53 ) ) by L894 , L893 , RFINSEQ:3;
L896: ( C121 . D49 ) <= ( len ( D194 . D53 ) ) by L886 , L893 , L894 , RFINSEQ:3;
L897: ( D194 . D49 ) <= ( len ( D194 . D53 ) ) by L886 , L891 , L895 , XREAL_1:146 , XXREAL_0:2;
L898: ( C121 . D49 ) = ( ( D194 . D49 ) + 1 ) by L891;
L899: ( D194 . D53 ) , ( D196 . D53 ) are_fiberwise_equipotent  by L882 , L887 , L891 , L892 , L897;
L900: ( ( IExec (D64 , R16 , C121) ) . D53 ) = ( D196 . D53 ) by L884 , L655 , SCM_HALT:69;
L901: ( D194 . D53 ) , ( ( IExec (D64 , R16 , C121) ) . D53 ) are_fiberwise_equipotent  by L884 , L899 , L655 , SCM_HALT:69;
thus L902: ( C121 . D53 ) , ( ( IExec (D64 , R16 , C121) ) . D53 ) are_fiberwise_equipotent  by L901 , L893 , L894 , CLASSES1:76;
L903: ( ( C121 . D49 ) - ( C120 + 1 ) ) = ( ( D194 . D49 ) - C120 ) by L891;
consider C122 , C123 being Integer such that L904: C122 = ( ( D195 . D53 ) . ( ( C121 . D49 ) - 1 ) ) and L905: C123 = ( ( D195 . D53 ) . ( C121 . D49 ) ) and L906: C122 >= C123 by L886 , L890 , L748;
L907: ( D195 . D53 ) = ( ( Exec (D193 , D195) ) . D53 ) by SCMFSA_2:65
.= ( D194 . D53 ) by SCM_HALT:24;
L908: ( C121 . D49 ) is (Element of ( NAT )) by L885 , INT_1:3;
L909: ( C121 . D49 ) >= 1 by L890 , XXREAL_0:2;
L910: ( C121 . D49 ) in ( dom ( D194 . D53 ) ) by L909 , L886 , L895 , L908 , FINSEQ_3:25;
thus L911:now
let C124 being (Element of ( NAT ));
assume that
L912: ((C124 < ( ( C121 . D49 ) - ( C120 + 1 ) ) & C124 >= 1) or (C124 > ( C121 . D49 ) & C124 in ( dom ( C121 . D53 ) )));
per cases  by L912;
suppose L913: (C124 < ( ( C121 . D49 ) - ( C120 + 1 ) ) & C124 >= 1);

L914: ( ( ( C121 . D49 ) - ( C120 + 1 ) ) + ( C120 + 1 ) ) = ( C121 . D49 );
L915: ( C124 + ( C120 + 1 ) ) < ( ( ( C121 . D49 ) - ( C120 + 1 ) ) + ( C120 + 1 ) ) by L913 , XREAL_1:6;
L916: ( C124 + ( C120 + 1 ) ) < ( C121 . D49 ) by L913 , L914 , XREAL_1:6;
L917: C124 <= ( C124 + ( C120 + 1 ) ) by NAT_1:11;
L918: C124 <= ( C121 . D49 ) by L917 , L915 , XXREAL_0:2;
L919: C124 <= ( len ( D194 . D53 ) ) by L918 , L886 , L895 , XXREAL_0:2;
L920: C124 in ( dom ( C121 . D53 ) ) by L919 , L895 , L913 , FINSEQ_3:25;
L921: C124 <> ( C121 . D49 ) by L913 , L914 , XREAL_1:29;
L922: C124 <> ( ( C121 . D49 ) - 1 )
proof
assume L923: C124 = ( ( C121 . D49 ) - 1 );
L924: ( C124 + ( C120 + 1 ) ) = ( ( C124 + 1 ) + C120 );
thus L925: contradiction by L924 , L916 , L923 , NAT_1:11;
end;
thus L926: ( ( C121 . D53 ) . C124 ) = ( ( D194 . D53 ) . C124 ) by L922 , L886 , L890 , L907 , L920 , L921 , L748
.= ( ( ( IExec (D64 , R16 , C121) ) . D53 ) . C124 ) by L882 , L887 , L892 , L897 , L900 , L903 , L913;
end;
suppose L927: (C124 > ( C121 . D49 ) & C124 in ( dom ( C121 . D53 ) ));

L928: C124 in ( dom ( D194 . D53 ) ) by L927 , L893 , L894 , RFINSEQ:3;
L929: ( C121 . D49 ) > ( ( C121 . D49 ) - 1 ) by XREAL_1:146;
L930: C124 > ( D194 . D49 ) by L891 , L927 , XREAL_1:146 , XXREAL_0:2;
thus L931: ( ( C121 . D53 ) . C124 ) = ( ( D194 . D53 ) . C124 ) by L886 , L890 , L907 , L927 , L929 , L748
.= ( ( ( IExec (D64 , R16 , C121) ) . D53 ) . C124 ) by L882 , L887 , L891 , L892 , L897 , L900 , L928 , L930;
end;
end;
thus L933:now
let C125 being (Element of ( NAT ));
assume that
L934: C125 >= ( ( C121 . D49 ) - ( C120 + 1 ) )
and
L935: C125 <= ( C121 . D49 );
consider C126 being (Element of ( NAT )) such that L936: C126 <= ( D194 . D49 ) and L937: C126 >= ( ( D194 . D49 ) - ( D194 . D48 ) ) and L938: ( ( D196 . D53 ) . C126 ) = ( ( D194 . D53 ) . ( D194 . D49 ) ) by L887 , L891 , L892 , L897 , L816;
consider C127 , C128 being Integer such that L939: C127 = ( ( D196 . D53 ) . ( ( D194 . D49 ) - C120 ) ) and L940: C128 = ( ( D196 . D53 ) . C126 ) and L941: C127 >= C128 by L882 , L887 , L891 , L892 , L897 , L936 , L937;
per cases ;
suppose L942: C125 > ( D194 . D49 );

L943: C125 >= ( ( D194 . D49 ) + 1 ) by L942 , INT_1:7;
L944: C125 = ( C121 . D49 ) by L943 , L891 , L935 , XXREAL_0:1;
take D197 = C127;
take D198 = C123;
thus L945: D197 = ( ( ( IExec (D64 , R16 , C121) ) . D53 ) . ( ( C121 . D49 ) - ( C120 + 1 ) ) ) by L884 , L891 , L939 , L655 , SCM_HALT:69;
thus L946: D198 = ( ( ( IExec (D64 , R16 , C121) ) . D53 ) . C125 ) by L882 , L887 , L891 , L892 , L897 , L900 , L905 , L907 , L910 , L942 , L944;
thus L947: D197 >= D198 by L891 , L904 , L906 , L907 , L938 , L940 , L941 , XXREAL_0:2;
end;
suppose L948: C125 <= ( D194 . D49 );

consider C129 , C130 being Integer such that L949: C129 = ( ( D196 . D53 ) . ( ( D194 . D49 ) - C120 ) ) and L950: C130 = ( ( D196 . D53 ) . C125 ) and L951: C129 >= C130 by L948 , L882 , L887 , L891 , L892 , L897 , L934;
take D199 = C129;
take D200 = C130;
thus L952: D199 = ( ( ( IExec (D64 , R16 , C121) ) . D53 ) . ( ( C121 . D49 ) - ( C120 + 1 ) ) ) by L884 , L891 , L949 , L655 , SCM_HALT:69;
thus L953: D200 = ( ( ( IExec (D64 , R16 , C121) ) . D53 ) . C125 ) by L884 , L950 , L655 , SCM_HALT:69;
thus L954: D199 >= D200 by L951;
end;
end;
thus L956: (for B131 being (Element of ( NAT )) holds ((B131 >= ( ( C121 . D49 ) - ( C120 + 1 ) ) & B131 <= ( C121 . D49 )) implies (ex B132 being (Element of ( NAT )) st (B132 >= ( ( C121 . D49 ) - ( C120 + 1 ) ) & B132 <= ( C121 . D49 ) & ( ( ( IExec (D64 , R16 , C121) ) . D53 ) . B131 ) = ( ( C121 . D53 ) . B132 )))))
proof
let C131 being (Element of ( NAT ));
assume that
L957: C131 >= ( ( C121 . D49 ) - ( C120 + 1 ) )
and
L958: C131 <= ( C121 . D49 );
per cases ;
suppose L959: C131 = ( C121 . D49 );

L960: C131 > ( D194 . D49 ) by L959 , L898 , XREAL_1:29;
L961: C131 in ( dom ( D194 . D53 ) ) by L896 , L909 , L959 , FINSEQ_3:25;
per cases  by L886 , L890 , L748;
suppose L962: ( ( C121 . D53 ) . ( C121 . D49 ) ) = ( ( ( IExec (D63 , R16 , C121) ) . D53 ) . ( C121 . D49 ) );

reconsider D201 = ( C121 . D49 ) as (Element of ( NAT )) by L885 , INT_1:3;
take D201;
thus L963: (D201 >= ( ( C121 . D49 ) - ( C120 + 1 ) ) & D201 <= ( C121 . D49 )) by L957 , L959;
thus L964: ( ( ( IExec (D64 , R16 , C121) ) . D53 ) . C131 ) = ( ( C121 . D53 ) . D201 ) by L882 , L887 , L891 , L892 , L897 , L900 , L907 , L959 , L960 , L961 , L962;
end;
suppose L965: ( ( C121 . D53 ) . ( ( C121 . D49 ) - 1 ) ) = ( ( ( IExec (D63 , R16 , C121) ) . D53 ) . ( C121 . D49 ) );

L966: ( ( C121 . D49 ) - 1 ) >= ( 1 - 1 ) by L909 , XREAL_1:9;
reconsider D202 = ( ( C121 . D49 ) - 1 ) as (Element of ( NAT )) by L966 , INT_1:3;
take D202;
L967: D202 <= ( D202 + C120 ) by NAT_1:11;
thus L968: D202 >= ( ( C121 . D49 ) - ( C120 + 1 ) ) by L967 , L903 , XREAL_1:20;
thus L969: D202 <= ( C121 . D49 ) by XREAL_1:146;
thus L970: ( ( ( IExec (D64 , R16 , C121) ) . D53 ) . C131 ) = ( ( C121 . D53 ) . D202 ) by L882 , L887 , L891 , L892 , L897 , L900 , L907 , L959 , L960 , L961 , L965;
end;
end;
suppose L972: C131 <> ( C121 . D49 );

L973: C131 < ( C121 . D49 ) by L972 , L958 , XXREAL_0:1;
L974: ( C131 + 1 ) <= ( C121 . D49 ) by L973 , INT_1:7;
L975: C131 <= ( D194 . D49 ) by L974 , L891 , XREAL_1:19;
consider C132 being (Element of ( NAT )) such that L976: C132 >= ( ( D194 . D49 ) - C120 ) and L977: C132 <= ( D194 . D49 ) and L978: ( ( D196 . D53 ) . C131 ) = ( ( D194 . D53 ) . C132 ) by L975 , L882 , L887 , L891 , L892 , L897 , L957;
thus L979: (ex B133 being (Element of ( NAT )) st (B133 >= ( ( C121 . D49 ) - ( C120 + 1 ) ) & B133 <= ( C121 . D49 ) & ( ( ( IExec (D64 , R16 , C121) ) . D53 ) . C131 ) = ( ( C121 . D53 ) . B133 )))
proof
per cases ;
suppose L980: C132 = ( D194 . D49 );

per cases  by L886 , L890 , L748;
suppose L981: ( ( C121 . D53 ) . ( C121 . D49 ) ) = ( ( ( IExec (D63 , R16 , C121) ) . D53 ) . ( ( C121 . D49 ) - 1 ) );

reconsider D203 = ( C121 . D49 ) as (Element of ( NAT )) by L885 , INT_1:3;
take D203;
L982: D203 <= ( D203 + ( C120 + 1 ) ) by NAT_1:11;
thus L983: D203 >= ( ( C121 . D49 ) - ( C120 + 1 ) ) by L982 , XREAL_1:20;
thus L984: D203 <= ( C121 . D49 );
thus L985: ( ( ( IExec (D64 , R16 , C121) ) . D53 ) . C131 ) = ( ( C121 . D53 ) . D203 ) by L884 , L891 , L907 , L978 , L980 , L981 , L655 , SCM_HALT:69;
end;
suppose L986: ( ( C121 . D53 ) . ( ( C121 . D49 ) - 1 ) ) = ( ( ( IExec (D63 , R16 , C121) ) . D53 ) . ( ( C121 . D49 ) - 1 ) );

take C132;
thus L987: C132 >= ( ( C121 . D49 ) - ( C120 + 1 ) ) by L891 , L976;
thus L988: C132 <= ( C121 . D49 ) by L891 , L980 , XREAL_1:146;
thus L989: ( ( ( IExec (D64 , R16 , C121) ) . D53 ) . C131 ) = ( ( C121 . D53 ) . C132 ) by L884 , L891 , L907 , L978 , L980 , L986 , L655 , SCM_HALT:69;
end;
end;
suppose L991: C132 <> ( D194 . D49 );

L992: ( D194 . D49 ) < ( C121 . D49 ) by L891 , XREAL_1:146;
L993: C132 < ( C121 . D49 ) by L891 , L977 , XREAL_1:146 , XXREAL_0:2;
L994: ( C120 - C120 ) < ( ( D194 . D49 ) - C120 ) by L891 , L892 , XREAL_1:9;
L995: C132 >= ( ( 0 ) + 1 ) by L994 , L976 , INT_1:7;
L996: C132 <= ( len ( D194 . D53 ) ) by L886 , L895 , L993 , XXREAL_0:2;
L997: C132 in ( dom ( C121 . D53 ) ) by L996 , L895 , L995 , FINSEQ_3:25;
take C132;
thus L998: C132 >= ( ( C121 . D49 ) - ( C120 + 1 ) ) by L891 , L976;
thus L999: C132 <= ( C121 . D49 ) by L891 , L977 , XREAL_1:146 , XXREAL_0:2;
thus L1000: thesis by L886 , L890 , L891 , L900 , L907 , L977 , L978 , L991 , L992 , L997 , L748;
end;
end;

end;
end;

end;
thus L957: S3[ ( C120 + 1 ) ] by L883;
end;
L958: (for B134 being (Element of ( NAT )) holds S3[ B134 ]) from NAT_1:sch 1(L880 , L881);
thus L959: thesis by L958;
end;
L960: (for B135 being (Instruction-Sequence of ( SCM+FSA )) holds (for B136 being (State of ( SCM+FSA )) holds (( ( IExec (D68 , B135 , B136) ) . D48 ) = ( ( B136 . D47 ) - 1 ) & ( ( IExec (D68 , B135 , B136) ) . D49 ) = ( len ( B136 . D53 ) ) & ( ( IExec (D68 , B135 , B136) ) . D53 ) = ( B136 . D53 ))))
proof
let C133 being (Instruction-Sequence of ( SCM+FSA ));
let C134 being (State of ( SCM+FSA ));
set D204 = ( Initialized C134 );
set D205 = ( Exec (D65 , D204) );
set D206 = ( IExec (( D65 ";" D66 ) , C133 , C134) );
set D207 = ( IExec (( ( D65 ";" D66 ) ";" D67 ) , C133 , C134) );
L961: ( D205 . D48 ) = ( D204 . D47 ) by SCMFSA_2:63
.= ( C134 . D47 ) by SCMFSA_M:37;
L962: ( D205 . D53 ) = ( D204 . D53 ) by SCMFSA_2:63
.= ( C134 . D53 ) by SCMFSA_M:37;
L963: ( D205 . D39 ) = ( D204 . D39 ) by SCMFSA_2:63
.= 1 by SCMFSA_M:9;
L964: ( D206 . D53 ) = ( ( Exec (D66 , D205) ) . D53 ) by SCMFSA6C:9
.= ( C134 . D53 ) by L962 , SCMFSA_2:65;
L965: ( D206 . D48 ) = ( ( Exec (D66 , D205) ) . D48 ) by SCMFSA6C:8
.= ( ( C134 . D47 ) - 1 ) by L961 , L963 , SCMFSA_2:65;
thus L966: ( D207 . D48 ) = ( ( Exec (D67 , D206) ) . D48 ) by SCMFSA6C:6
.= ( ( C134 . D47 ) - 1 ) by L965 , L493 , SCMFSA_2:74;
thus L967: ( D207 . D49 ) = ( ( Exec (D67 , D206) ) . D49 ) by SCMFSA6C:6
.= ( len ( C134 . D53 ) ) by L964 , SCMFSA_2:74;
thus L968: ( D207 . D53 ) = ( ( Exec (D67 , D206) ) . D53 ) by SCMFSA6C:7
.= ( C134 . D53 ) by L964 , SCMFSA_2:74;
end;
L969: (for B137 being (Instruction-Sequence of ( SCM+FSA )) holds (for B138 being (State of ( SCM+FSA )) holds (( B138 . D47 ) = ( len ( B138 . D53 ) ) implies (( B138 . D53 ) , ( ( IExec (D70 , B137 , B138) ) . D53 ) are_fiberwise_equipotent  & (for B139 , B140 being (Element of ( NAT )) holds ((B139 >= 1 & B140 <= ( len ( B138 . D53 ) ) & B139 < B140) implies (for B141 , B142 being Integer holds ((B141 = ( ( ( IExec (D70 , B137 , B138) ) . D53 ) . B139 ) & B142 = ( ( ( IExec (D70 , B137 , B138) ) . D53 ) . B140 )) implies B141 >= B142))))))))
proof
let C135 being (Instruction-Sequence of ( SCM+FSA ));
let C136 being (State of ( SCM+FSA ));
assume L970: ( C136 . D47 ) = ( len ( C136 . D53 ) );
per cases ;
suppose L971: ( len ( C136 . D53 ) ) = ( 0 );

thus L972: ( C136 . D53 ) , ( ( IExec (D70 , C135 , C136) ) . D53 ) are_fiberwise_equipotent  by L971 , L970 , L669 , SCM_HALT:67;
thus L973: thesis by L971;
end;
suppose L974: ( len ( C136 . D53 ) ) <> ( 0 );

defpred S4[ Nat ] means (for B143 being (State of ( SCM+FSA )) holds (for R16 being (Instruction-Sequence of ( SCM+FSA )) holds ((( B143 . D47 ) = ( $1 + 1 ) & ( B143 . D47 ) <= ( len ( B143 . D53 ) )) implies (( B143 . D53 ) , ( ( IExec (D70 , R16 , B143) ) . D53 ) are_fiberwise_equipotent  & (for B144 , B145 being (Element of ( NAT )) holds ((B144 >= ( ( len ( B143 . D53 ) ) - $1 ) & B145 <= ( len ( B143 . D53 ) ) & B144 < B145) implies (for B146 , B147 being Integer holds ((B146 = ( ( ( IExec (D70 , R16 , B143) ) . D53 ) . B144 ) & B147 = ( ( ( IExec (D70 , R16 , B143) ) . D53 ) . B145 )) implies B146 >= B147)))) & (for B148 being (Element of ( NAT )) holds ((B148 < ( ( len ( B143 . D53 ) ) - $1 ) & B148 >= 1) implies ( ( ( IExec (D70 , R16 , B143) ) . D53 ) . B148 ) = ( ( B143 . D53 ) . B148 ))) & (for B149 being (Element of ( NAT )) holds ((B149 >= ( ( len ( B143 . D53 ) ) - $1 ) & B149 <= ( len ( B143 . D53 ) )) implies (ex B150 being (Element of ( NAT )) st (B150 >= ( ( len ( B143 . D53 ) ) - $1 ) & B150 <= ( len ( B143 . D53 ) ) & ( ( ( IExec (D70 , R16 , B143) ) . D53 ) . B149 ) = ( ( B143 . D53 ) . B150 )))))))));
set D208 = ( SubFrom (D47 , D39) );
L975: S4[ ( 0 ) ]
proof
let C137 being (State of ( SCM+FSA ));
let R16 being (Instruction-Sequence of ( SCM+FSA ));
assume that
L976: ( C137 . D47 ) = ( ( 0 ) + 1 )
and
L977: ( C137 . D47 ) <= ( len ( C137 . D53 ) );
set D209 = ( IExec (( D69 ";" D208 ) , R16 , C137) );
L978: ( D209 . D47 ) = ( 1 - 1 ) by L976 , L669 , L699 , SCM_HALT:66;
L979: ( ( IExec (D68 , R16 , C137) ) . D48 ) = ( 1 - 1 ) by L976 , L960;
L980: ( ( IExec (D70 , R16 , C137) ) . D53 ) = ( ( IExec (D70 , R16 , D209) ) . D53 ) by L976 , L669 , L699 , SCM_HALT:69
.= ( D209 . D53 ) by L978 , L669 , SCM_HALT:67
.= ( ( Exec (D208 , ( IExec (D69 , R16 , C137) )) ) . D53 ) by L669 , SCM_HALT:24
.= ( ( IExec (D69 , R16 , C137) ) . D53 ) by SCMFSA_2:65
.= ( ( IExec (D64 , R16 , ( IExec (D68 , R16 , C137) )) ) . D53 ) by L669 , SCM_HALT:21
.= ( ( IExec (D68 , R16 , C137) ) . D53 ) by L979 , SCM_HALT:67
.= ( C137 . D53 ) by L960;
thus L981: ( C137 . D53 ) , ( ( IExec (D70 , R16 , C137) ) . D53 ) are_fiberwise_equipotent  by L980;
thus L982: (for B151 , B152 being (Element of ( NAT )) holds ((B151 >= ( ( len ( C137 . D53 ) ) - ( 0 ) ) & B152 <= ( len ( C137 . D53 ) ) & B151 < B152) implies (for B153 , B154 being Integer holds ((B153 = ( ( ( IExec (D70 , R16 , C137) ) . D53 ) . B151 ) & B154 = ( ( ( IExec (D70 , R16 , C137) ) . D53 ) . B152 )) implies B153 >= B154)))) by XXREAL_0:2;
thus L983: (for B155 being (Element of ( NAT )) holds ((B155 < ( ( len ( C137 . D53 ) ) - ( 0 ) ) & B155 >= 1) implies ( ( ( IExec (D70 , R16 , C137) ) . D53 ) . B155 ) = ( ( C137 . D53 ) . B155 ))) by L980;
let C138 being (Element of ( NAT ));
assume that
L984: C138 >= ( ( len ( C137 . D53 ) ) - ( 0 ) )
and
L985: C138 <= ( len ( C137 . D53 ) );
take D210 = C138;
thus L986: (D210 >= ( ( len ( C137 . D53 ) ) - ( 0 ) ) & D210 <= ( len ( C137 . D53 ) )) by L984 , L985;
thus L987: thesis by L980;
end;
L988:
now
let C139 being (Element of ( NAT ));
assume L989: S4[ C139 ];
L990:
now
let C140 being (State of ( SCM+FSA ));
let R16 being (Instruction-Sequence of ( SCM+FSA ));
set D211 = ( IExec (( D69 ";" D208 ) , R16 , C140) );
set D212 = ( IExec (D69 , R16 , C140) );
set D213 = ( IExec (D70 , R16 , D211) );
assume that
L991: ( C140 . D47 ) = ( ( C139 + 1 ) + 1 )
and
L992: ( C140 . D47 ) <= ( len ( C140 . D53 ) );
L993: ( D211 . D47 ) = ( ( Exec (D208 , D212) ) . D47 ) by L669 , SCM_HALT:23
.= ( ( D212 . D47 ) - ( D212 . D39 ) ) by SCMFSA_2:65
.= ( ( D212 . D47 ) - 1 ) by L669 , SCM_HALT:9
.= ( ( ( Initialized C140 ) . D47 ) - 1 ) by L669 , L699 , SCM_HALT:53
.= ( ( ( C139 + 1 ) + 1 ) - 1 ) by L991 , SCMFSA_M:37
.= ( C139 + 1 );
L994: ( D211 . D47 ) < ( C140 . D47 ) by L993 , L991 , XREAL_1:29;
L995: ( D211 . D47 ) <= ( len ( C140 . D53 ) ) by L994 , L992 , XXREAL_0:2;
set D214 = ( IExec (D68 , R16 , C140) );
L996: ( D214 . D48 ) = ( ( ( C139 + 1 ) + 1 ) - 1 ) by L991 , L960
.= ( C139 + 1 );
L997: ( D214 . D49 ) = ( len ( C140 . D53 ) ) by L960;
L998: ( D214 . D49 ) = ( len ( D214 . D53 ) ) by L997 , L960;
L999: ( C139 + 1 ) < ( ( C139 + 1 ) + 1 ) by XREAL_1:29;
L1000: ( C139 + 1 ) < ( C140 . D47 ) by L991 , XREAL_1:29;
L1001: ( C139 + 1 ) < ( len ( C140 . D53 ) ) by L991 , L992 , L999 , XXREAL_0:2;
L1002: ( C139 + 1 ) < ( D214 . D49 ) by L992 , L997 , L1000 , XXREAL_0:2;
L1003: ( D214 . D53 ) , ( ( IExec (D64 , R16 , D214) ) . D53 ) are_fiberwise_equipotent  by L996 , L997 , L998 , L1001 , L862;
L1004: ( D214 . D53 ) = ( C140 . D53 ) by L960;
L1005: ( D211 . D53 ) = ( ( Exec (D208 , D212) ) . D53 ) by L669 , SCM_HALT:24
.= ( D212 . D53 ) by SCMFSA_2:65
.= ( ( IExec (D64 , R16 , D214) ) . D53 ) by L669 , SCM_HALT:21;
L1006: ( C140 . D53 ) , ( D211 . D53 ) are_fiberwise_equipotent  by L1005 , L996 , L997 , L1002 , L1004 , L862;
L1007: ( len ( C140 . D53 ) ) = ( len ( D211 . D53 ) ) by L1003 , L1004 , L1005 , RFINSEQ:3;
L1008: ( D211 . D47 ) <= ( len ( D211 . D53 ) ) by L995 , L1006 , RFINSEQ:3;
L1009: ( D211 . D53 ) , ( ( IExec (D70 , R16 , D211) ) . D53 ) are_fiberwise_equipotent  by L989 , L993 , L995 , L1007;
L1010: ( ( IExec (D70 , R16 , C140) ) . D53 ) = ( D213 . D53 ) by L991 , L669 , L699 , SCM_HALT:69;
thus L1011: ( C140 . D53 ) , ( ( IExec (D70 , R16 , C140) ) . D53 ) are_fiberwise_equipotent  by L1010 , L1006 , L1009 , CLASSES1:76;
set D215 = ( ( len ( C140 . D53 ) ) - ( C139 + 1 ) );
L1012: ( D215 + 1 ) = ( ( len ( D211 . D53 ) ) - C139 ) by L1007;
thus L1013: (for B156 , B157 being (Element of ( NAT )) holds ((B156 >= ( ( len ( C140 . D53 ) ) - ( C139 + 1 ) ) & B157 <= ( len ( C140 . D53 ) ) & B156 < B157) implies (for B158 , B159 being Integer holds ((B158 = ( ( ( IExec (D70 , R16 , C140) ) . D53 ) . B156 ) & B159 = ( ( ( IExec (D70 , R16 , C140) ) . D53 ) . B157 )) implies B158 >= B159))))
proof
let C141 , C142 being (Element of ( NAT ));
assume that
L1014: C141 >= D215
and
L1015: C142 <= ( len ( C140 . D53 ) )
and
L1016: C141 < C142;
L1017: C142 > D215 by L1014 , L1016 , XXREAL_0:2;
L1018: C142 >= ( ( len ( D211 . D53 ) ) - C139 ) by L1017 , L1012 , INT_1:7;
consider C143 being (Element of ( NAT )) such that L1019: C143 >= ( ( len ( D211 . D53 ) ) - C139 ) and L1020: C143 <= ( len ( D211 . D53 ) ) and L1021: ( ( ( IExec (D70 , R16 , D211) ) . D53 ) . C142 ) = ( ( D211 . D53 ) . C143 ) by L1018 , L989 , L993 , L995 , L1007 , L1015;
L1022: D215 < ( D215 + 1 ) by XREAL_1:29;
L1023: C143 >= ( ( D214 . D49 ) - ( C139 + 1 ) ) by L1022 , L997 , L1007 , L1019 , XXREAL_0:2;
L1024: C143 <= ( D214 . D49 ) by L1007 , L1020 , L960;
thus L1025:now
let C144 , C145 being Integer;
assume that
L1026: C144 = ( ( ( IExec (D70 , R16 , C140) ) . D53 ) . C141 )
and
L1027: C145 = ( ( ( IExec (D70 , R16 , C140) ) . D53 ) . C142 );
per cases ;
suppose L1028: C141 = D215;

L1029: (ex B160 , B161 being Integer st (B160 = ( ( ( IExec (D64 , R16 , D214) ) . D53 ) . ( ( D214 . D49 ) - ( C139 + 1 ) ) ) & B161 = ( ( ( IExec (D64 , R16 , D214) ) . D53 ) . C143 ) & B160 >= B161)) by L996 , L998 , L1002 , L1023 , L1024 , L862;
L1030: C141 < ( ( len ( D211 . D53 ) ) - C139 ) by L1012 , L1028 , XREAL_1:29;
L1031: 1 <= C141 by L991 , L992 , L1028 , XREAL_1:19;
L1032: C141 = ( ( D214 . D49 ) - ( C139 + 1 ) ) by L1028 , L960;
thus L1033: C144 >= C145 by L1032 , L989 , L993 , L995 , L1005 , L1007 , L1010 , L1021 , L1026 , L1027 , L1029 , L1030 , L1031;
end;
suppose L1034: C141 <> D215;

L1035: C141 > D215 by L1034 , L1014 , XXREAL_0:1;
L1036: C141 >= ( ( len ( D211 . D53 ) ) - C139 ) by L1035 , L1012 , INT_1:7;
thus L1037: C144 >= C145 by L1036 , L989 , L993 , L995 , L1007 , L1010 , L1015 , L1016 , L1026 , L1027;
end;
end;
end;

thus L1026: (for B162 being (Element of ( NAT )) holds ((B162 < ( ( len ( C140 . D53 ) ) - ( C139 + 1 ) ) & B162 >= 1) implies ( ( ( IExec (D70 , R16 , C140) ) . D53 ) . B162 ) = ( ( C140 . D53 ) . B162 )))
proof
let C146 being (Element of ( NAT ));
assume that
L1027: C146 < D215
and
L1028: C146 >= 1;
L1029: D215 < ( D215 + 1 ) by XREAL_1:29;
L1030: C146 < ( ( len ( D211 . D53 ) ) - C139 ) by L1029 , L1007 , L1027 , XXREAL_0:2;
thus L1031: ( ( ( IExec (D70 , R16 , C140) ) . D53 ) . C146 ) = ( ( D211 . D53 ) . C146 ) by L1030 , L989 , L993 , L1008 , L1010 , L1028
.= ( ( C140 . D53 ) . C146 ) by L996 , L997 , L1002 , L1004 , L1005 , L1027 , L1028 , L862;
end;

thus L1032: (for B163 being (Element of ( NAT )) holds ((B163 >= ( ( len ( C140 . D53 ) ) - ( C139 + 1 ) ) & B163 <= ( len ( C140 . D53 ) )) implies (ex B164 being (Element of ( NAT )) st (B164 >= ( ( len ( C140 . D53 ) ) - ( C139 + 1 ) ) & B164 <= ( len ( C140 . D53 ) ) & ( ( ( IExec (D70 , R16 , C140) ) . D53 ) . B163 ) = ( ( C140 . D53 ) . B164 )))))
proof
let C147 being (Element of ( NAT ));
assume that
L1033: C147 >= ( ( len ( C140 . D53 ) ) - ( C139 + 1 ) )
and
L1034: C147 <= ( len ( C140 . D53 ) );
per cases ;
suppose L1035: C147 = D215;

L1036: C147 < ( ( len ( D211 . D53 ) ) - C139 ) by L1035 , L1012 , XREAL_1:29;
L1037: C147 >= 1 by L991 , L992 , L1035 , XREAL_1:19;
consider C148 being (Element of ( NAT )) such that L1038: C148 >= ( ( D214 . D49 ) - ( C139 + 1 ) ) and L1039: C148 <= ( D214 . D49 ) and L1040: ( ( ( IExec (D64 , R16 , D214) ) . D53 ) . C147 ) = ( ( D214 . D53 ) . C148 ) by L996 , L997 , L998 , L1001 , L1033 , L1034 , L862;
take C148;
thus L1041: C148 >= ( ( len ( C140 . D53 ) ) - ( C139 + 1 ) ) by L1038 , L960;
thus L1042: C148 <= ( len ( C140 . D53 ) ) by L1039 , L960;
thus L1043: thesis by L989 , L993 , L1004 , L1005 , L1008 , L1010 , L1036 , L1037 , L1040;
end;
suppose L1044: C147 <> D215;

L1045: C147 > D215 by L1044 , L1033 , XXREAL_0:1;
L1046: C147 >= ( ( len ( D211 . D53 ) ) - C139 ) by L1045 , L1012 , INT_1:7;
consider C149 being (Element of ( NAT )) such that L1047: C149 >= ( ( len ( D211 . D53 ) ) - C139 ) and L1048: C149 <= ( len ( D211 . D53 ) ) and L1049: ( ( ( IExec (D70 , R16 , D211) ) . D53 ) . C147 ) = ( ( D211 . D53 ) . C149 ) by L1046 , L989 , L993 , L995 , L1007 , L1034;
L1050: ( D215 + 1 ) > D215 by XREAL_1:29;
L1051: C149 > ( ( D214 . D49 ) - ( C139 + 1 ) ) by L1050 , L997 , L1007 , L1047 , XXREAL_0:2;
consider C150 being (Element of ( NAT )) such that L1052: C150 >= ( ( D214 . D49 ) - ( C139 + 1 ) ) and L1053: C150 <= ( D214 . D49 ) and L1054: ( ( ( IExec (D64 , R16 , D214) ) . D53 ) . C149 ) = ( ( D214 . D53 ) . C150 ) by L1051 , L996 , L997 , L998 , L1001 , L1007 , L1048 , L862;
take C150;
thus L1055: C150 >= ( ( len ( C140 . D53 ) ) - ( C139 + 1 ) ) by L1052 , L960;
thus L1056: C150 <= ( len ( C140 . D53 ) ) by L1053 , L960;
thus L1057: thesis by L1005 , L1010 , L1049 , L1054 , L960;
end;
end;

end;
thus L1033: S4[ ( C139 + 1 ) ] by L990;
end;
L1034: (for B165 being (Element of ( NAT )) holds S4[ B165 ]) from NAT_1:sch 1(L975 , L988);
L1035: ( C136 . D47 ) >= ( 1 + ( 0 ) ) by L970 , L974 , INT_1:7;
reconsider D216 = ( ( C136 . D47 ) - 1 ) as (Element of ( NAT )) by L1035 , INT_1:5;
L1036: ( D216 + 1 ) = ( C136 . D47 );
thus L1037: ( C136 . D53 ) , ( ( IExec (D70 , C135 , C136) ) . D53 ) are_fiberwise_equipotent  by L1036 , L970 , L1034;
L1038: ( ( len ( C136 . D53 ) ) - D216 ) = 1 by L970;
thus L1039: thesis by L1038 , L1034 , L1036;
end;
end;
theorem
L1041: (for B166 being (Instruction-Sequence of ( SCM+FSA )) holds (for B167 being (State of ( SCM+FSA )) holds (( B167 . ( fsloc ( 0 ) ) ) , ( ( IExec (( bubble-sort ( fsloc ( 0 ) ) ) , B166 , B167) ) . ( fsloc ( 0 ) ) ) are_fiberwise_equipotent  & (for B168 , B169 being (Element of ( NAT )) holds ((B168 >= 1 & B169 <= ( len ( B167 . ( fsloc ( 0 ) ) ) ) & B168 < B169) implies (for B170 , B171 being Integer holds ((B170 = ( ( ( IExec (( bubble-sort ( fsloc ( 0 ) ) ) , B166 , B167) ) . ( fsloc ( 0 ) ) ) . B168 ) & B171 = ( ( ( IExec (( bubble-sort ( fsloc ( 0 ) ) ) , B166 , B167) ) . ( fsloc ( 0 ) ) ) . B169 )) implies B170 >= B171)))))))
proof
let C151 being (Instruction-Sequence of ( SCM+FSA ));
let C152 being (State of ( SCM+FSA ));
set D217 = ( ( ( ( ( D71 ";" D72 ) ";" D73 ) ";" D74 ) ";" D75 ) ";" D76 );
set D218 = ( Initialized C152 );
set D219 = ( Exec (D71 , D218) );
set D220 = ( IExec (( D71 ";" D72 ) , C151 , C152) );
set D221 = ( IExec (( ( D71 ";" D72 ) ";" D73 ) , C151 , C152) );
set D222 = ( IExec (( ( ( D71 ";" D72 ) ";" D73 ) ";" D74 ) , C151 , C152) );
set D223 = ( IExec (( ( ( ( D71 ";" D72 ) ";" D73 ) ";" D74 ) ";" D75 ) , C151 , C152) );
set D224 = ( IExec (D217 , C151 , C152) );
L1042: ( D223 . D53 ) = ( ( Exec (D75 , D222) ) . D53 ) by SCMFSA6C:7
.= ( D222 . D53 ) by SCMFSA_2:63
.= ( ( Exec (D74 , D221) ) . D53 ) by SCMFSA6C:7
.= ( D221 . D53 ) by SCMFSA_2:63
.= ( ( Exec (D73 , D220) ) . D53 ) by SCMFSA6C:7
.= ( D220 . D53 ) by SCMFSA_2:63
.= ( ( Exec (D72 , D219) ) . D53 ) by SCMFSA6C:9
.= ( D219 . D53 ) by SCMFSA_2:63
.= ( D218 . D53 ) by SCMFSA_2:63
.= ( C152 . D53 ) by SCMFSA_M:37;
L1043: ( D224 . D53 ) = ( ( Exec (D76 , D223) ) . D53 ) by SCMFSA6C:7
.= ( C152 . D53 ) by L1042 , SCMFSA_2:74;
L1044: ( D224 . D47 ) = ( ( Exec (D76 , D223) ) . D47 ) by SCMFSA6C:6
.= ( len ( D224 . D53 ) ) by L1042 , L1043 , SCMFSA_2:74;
L1045: ( ( IExec (( bubble-sort D53 ) , C151 , C152) ) . D53 ) = ( ( IExec (D70 , C151 , D224) ) . D53 ) by L706 , SCM_HALT:21;
thus L1046: ( C152 . D53 ) , ( ( IExec (( bubble-sort D53 ) , C151 , C152) ) . D53 ) are_fiberwise_equipotent  by L1045 , L1043 , L1044 , L969;
let C153 , C154 being (Element of ( NAT ));
assume that
L1047: C153 >= 1
and
L1048: C154 <= ( len ( C152 . D53 ) )
and
L1049: C153 < C154;
thus L1050: thesis by L1043 , L1044 , L1045 , L1047 , L1048 , L1049 , L969;
end;
theorem
L1051: (for B172 being (Element of ( NAT )) holds (for B173 being (State of ( SCM+FSA )) holds (for B174 being (Instruction-Sequence of ( SCM+FSA )) holds (( Bubble-Sort-Algorithm ) c= B174 implies (for B175 being (FinSequence of ( INT )) holds (( Initialized ( ( fsloc ( 0 ) ) .--> B175 ) ) c= B173 implies ( IC ( Comput (B174 , B173 , B172) ) ) in ( dom ( Bubble-Sort-Algorithm ) )))))))
proof
set D225 = ( Bubble-Sort-Algorithm );
set D226 = ( ( ( intloc ( 0 ) ) .--> 1 ) +* ( Start-At (( 0 ) , ( SCM+FSA )) ) );
let C155 being (Element of ( NAT ));
let C156 being (State of ( SCM+FSA ));
let C157 being (Instruction-Sequence of ( SCM+FSA ));
assume that
L1052: ( Bubble-Sort-Algorithm ) c= C157;
let C158 being (FinSequence of ( INT ));
set D227 = ( ( fsloc ( 0 ) ) .--> C158 );
assume L1053: ( Initialized D227 ) c= C156;
set D228 = ( Bubble-Sort-Algorithm );
L1054: ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) c= ( Initialized D227 ) by FUNCT_4:25;
L1055: ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) c= C156 by L1054 , L1053 , XBOOLE_1:1;
thus L1056: thesis by L1055 , L706 , L1052 , SCM_HALT:def 1;
end;
theorem
L1057: (for B176 being (Instruction-Sequence of ( SCM+FSA )) holds (for B177 being (State of ( SCM+FSA )) holds (for B178 being (FinSequence of ( INT )) holds ((( ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) +* ( ( fsloc ( 0 ) ) .--> B178 ) ) c= B177 & ( Bubble-Sort-Algorithm ) c= B176) implies (ex B179 being (FinSequence of ( REAL )) st (B178 , B179 are_fiberwise_equipotent  & B179 is  non-increasing & B179 is (FinSequence of ( INT )) & ( ( Result (B176 , B177) ) . ( fsloc ( 0 ) ) ) = B179))))))
proof
let C159 being (Instruction-Sequence of ( SCM+FSA ));
let C160 being (State of ( SCM+FSA ));
let C161 being (FinSequence of ( INT ));
set D229 = ( Bubble-Sort-Algorithm );
set D230 = ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) );
set D231 = ( ( fsloc ( 0 ) ) .--> C161 );
set D232 = ( ( IExec (( bubble-sort D53 ) , C159 , C160) ) . D53 );
assume that
L1058: ( D230 +* D231 ) c= C160
and
L1059: D229 c= C159;
L1060: ( C159 +* D229 ) = C159 by L1059 , FUNCT_4:98;
L1061: ( dom D231 ) = { D53 } by FUNCOP_1:13;
L1062: D53 in ( dom D231 ) by L1061 , TARSKI:def 1;
L1063: D53 in ( dom ( D230 +* D231 ) ) by L1062 , FUNCT_4:12;
L1064: ( C160 . D53 ) = ( ( D230 +* D231 ) . D53 ) by L1063 , L1058 , GRFUNC_1:2
.= ( D231 . D53 ) by L1062 , FUNCT_4:13
.= C161 by FUNCOP_1:72;
L1065: ( C160 . D53 ) , D232 are_fiberwise_equipotent  by L1041;
reconsider D233 = D232 as (FinSequence of ( REAL )) by FINSEQ_3:117;
take D233;
thus L1066: C161 , D233 are_fiberwise_equipotent  by L1064 , L1041;
L1067: ( dom ( C160 . D53 ) ) = ( dom D233 ) by L1065 , RFINSEQ:3;
L1068:
now
let C162 , C163 being (Element of ( NAT ));
assume that
L1069: C162 in ( dom D233 )
and
L1070: C163 in ( dom D233 )
and
L1071: C162 < C163;
L1072: C162 >= 1 by L1069 , FINSEQ_3:25;
L1073: C163 <= ( len ( C160 . D53 ) ) by L1067 , L1070 , FINSEQ_3:25;
reconsider D234 = ( D232 . C162 ) as Integer;
reconsider D235 = ( D232 . C163 ) as Integer;
thus L1074: ( D233 . C162 ) >= ( D233 . C163 ) by L1071 , L1072 , L1073 , L1041;
end;
thus L1075: D233 is  non-increasing by L1068 , RFINSEQ:19;
thus L1076: D233 is (FinSequence of ( INT ));
L1077: ( dom D230 ) misses ( dom D231 ) by SCMFSA_M:32;
L1078: D230 c= ( D230 +* D231 ) by L1077 , FUNCT_4:32;
L1079: C160 = ( C160 +* D230 ) by L1078 , L1058 , FUNCT_4:98 , XBOOLE_1:1;
L1080: C160 = ( Initialized C160 ) by L1079;
thus L1081: thesis by L1080 , L480 , L1060;
end;
theorem
L1082: (for B180 being (FinSequence of ( INT )) holds ( Initialized ( ( fsloc ( 0 ) ) .--> B180 ) ) is ( Bubble-Sort-Algorithm ) -autonomic)
proof
let C164 being (FinSequence of ( INT ));
set D236 = ( Initialized ( ( fsloc ( 0 ) ) .--> C164 ) );
set D237 = ( Bubble-Sort-Algorithm );
L1083: (for B181 , B182 being (Instruction-Sequence of ( SCM+FSA )) holds ((D237 c= B181 & D237 c= B182) implies (for B183 , B184 being (State of ( SCM+FSA )) holds (for R3 being (Element of ( NAT )) holds ((D236 c= B183 & D236 c= B184 & R3 <= 10) implies (( ( Comput (B181 , B183 , R3) ) . ( intloc ( 0 ) ) ) = ( ( Comput (B182 , B184 , R3) ) . ( intloc ( 0 ) ) ) & ( ( Comput (B181 , B183 , R3) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (B182 , B184 , R3) ) . ( IC ( SCM+FSA ) ) ) & ( ( Comput (B181 , B183 , R3) ) . ( fsloc ( 0 ) ) ) = ( ( Comput (B182 , B184 , R3) ) . ( fsloc ( 0 ) ) )))))))
proof
let C165 , C166 being (Instruction-Sequence of ( SCM+FSA ));
assume that
L1084: (D237 c= C165 & D237 c= C166);
let C167 , C168 being (State of ( SCM+FSA ));
let R3 being (Element of ( NAT ));
assume that
L1085: D236 c= C167
and
L1086: D236 c= C168
and
L1087: R3 <= 10;
L1088: D237 c= C165 by L1084;
L1089: D237 c= C166 by L1084;
L1090: ( Comput (C165 , C167 , ( 0 )) ) = C167;
L1091: C167 is ( 0 ) -started by L1085 , MEMSTR_0:17;
L1092: C168 is ( 0 ) -started by L1086 , MEMSTR_0:17;
L1093: ( C167 . ( intloc ( 0 ) ) ) = 1 by L1085 , SCMFSA_M:33
.= ( C168 . ( intloc ( 0 ) ) ) by L1086 , SCMFSA_M:33;
L1094: ( C167 . ( fsloc ( 0 ) ) ) = C164 by L1085 , SCMFSA_M:33
.= ( C168 . ( fsloc ( 0 ) ) ) by L1086 , SCMFSA_M:33;
L1095: ( IC C167 ) = ( 0 ) by L1091 , MEMSTR_0:def 11
.= ( IC C168 ) by L1092 , MEMSTR_0:def 11;
per cases  by L1087 , NAT_1:34;
suppose L1096: R3 = ( 0 );

thus L1097: ( ( Comput (C165 , C167 , R3) ) . ( intloc ( 0 ) ) ) = ( ( Comput (C166 , C168 , R3) ) . ( intloc ( 0 ) ) ) by L1096 , L1090 , L1093 , EXTPRO_1:2;
thus L1098: ( ( Comput (C165 , C167 , R3) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (C166 , C168 , R3) ) . ( IC ( SCM+FSA ) ) ) by L1090 , L1095 , L1096 , EXTPRO_1:2;
thus L1099: thesis by L1090 , L1094 , L1096 , EXTPRO_1:2;
end;
suppose L1100: R3 = 1;

thus L1101: ( ( Comput (C165 , C167 , R3) ) . ( intloc ( 0 ) ) ) = ( C167 . ( intloc ( 0 ) ) ) by L1100 , L1084 , L1091 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( intloc ( 0 ) ) ) by L1084 , L1092 , L1093 , L1100 , L562;
thus L1102: ( ( Comput (C165 , C167 , R3) ) . ( IC ( SCM+FSA ) ) ) = 1 by L1084 , L1091 , L1100 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( IC ( SCM+FSA ) ) ) by L1089 , L1092 , L1100 , L562;
thus L1103: ( ( Comput (C165 , C167 , R3) ) . ( fsloc ( 0 ) ) ) = ( C167 . ( fsloc ( 0 ) ) ) by L1088 , L1091 , L1100 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( fsloc ( 0 ) ) ) by L1084 , L1092 , L1094 , L1100 , L562;
end;
suppose L1104: R3 = 2;

thus L1105: ( ( Comput (C165 , C167 , R3) ) . ( intloc ( 0 ) ) ) = ( C167 . ( intloc ( 0 ) ) ) by L1104 , L1088 , L1091 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( intloc ( 0 ) ) ) by L1084 , L1092 , L1093 , L1104 , L562;
thus L1106: ( ( Comput (C165 , C167 , R3) ) . ( IC ( SCM+FSA ) ) ) = 2 by L1084 , L1091 , L1104 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( IC ( SCM+FSA ) ) ) by L1084 , L1092 , L1104 , L562;
thus L1107: ( ( Comput (C165 , C167 , R3) ) . ( fsloc ( 0 ) ) ) = ( C167 . ( fsloc ( 0 ) ) ) by L1084 , L1091 , L1104 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( fsloc ( 0 ) ) ) by L1084 , L1092 , L1094 , L1104 , L562;
end;
suppose L1108: R3 = 3;

thus L1109: ( ( Comput (C165 , C167 , R3) ) . ( intloc ( 0 ) ) ) = ( C167 . ( intloc ( 0 ) ) ) by L1108 , L1084 , L1091 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( intloc ( 0 ) ) ) by L1084 , L1092 , L1093 , L1108 , L562;
thus L1110: ( ( Comput (C165 , C167 , R3) ) . ( IC ( SCM+FSA ) ) ) = 3 by L1084 , L1091 , L1108 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( IC ( SCM+FSA ) ) ) by L1084 , L1092 , L1108 , L562;
thus L1111: ( ( Comput (C165 , C167 , R3) ) . ( fsloc ( 0 ) ) ) = ( C167 . ( fsloc ( 0 ) ) ) by L1088 , L1091 , L1108 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( fsloc ( 0 ) ) ) by L1084 , L1092 , L1094 , L1108 , L562;
end;
suppose L1112: R3 = 4;

thus L1113: ( ( Comput (C165 , C167 , R3) ) . ( intloc ( 0 ) ) ) = ( C167 . ( intloc ( 0 ) ) ) by L1112 , L1088 , L1091 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( intloc ( 0 ) ) ) by L1084 , L1092 , L1093 , L1112 , L562;
thus L1114: ( ( Comput (C165 , C167 , R3) ) . ( IC ( SCM+FSA ) ) ) = 4 by L1084 , L1091 , L1112 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( IC ( SCM+FSA ) ) ) by L1084 , L1092 , L1112 , L562;
thus L1115: ( ( Comput (C165 , C167 , R3) ) . ( fsloc ( 0 ) ) ) = ( C167 . ( fsloc ( 0 ) ) ) by L1084 , L1091 , L1112 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( fsloc ( 0 ) ) ) by L1084 , L1092 , L1094 , L1112 , L562;
end;
suppose L1116: R3 = 5;

thus L1117: ( ( Comput (C165 , C167 , R3) ) . ( intloc ( 0 ) ) ) = ( C167 . ( intloc ( 0 ) ) ) by L1116 , L1088 , L1091 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( intloc ( 0 ) ) ) by L1084 , L1092 , L1093 , L1116 , L562;
thus L1118: ( ( Comput (C165 , C167 , R3) ) . ( IC ( SCM+FSA ) ) ) = 5 by L1084 , L1091 , L1116 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( IC ( SCM+FSA ) ) ) by L1084 , L1092 , L1116 , L562;
thus L1119: ( ( Comput (C165 , C167 , R3) ) . ( fsloc ( 0 ) ) ) = ( C167 . ( fsloc ( 0 ) ) ) by L1084 , L1091 , L1116 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( fsloc ( 0 ) ) ) by L1084 , L1092 , L1094 , L1116 , L562;
end;
suppose L1120: R3 = 6;

thus L1121: ( ( Comput (C165 , C167 , R3) ) . ( intloc ( 0 ) ) ) = ( C167 . ( intloc ( 0 ) ) ) by L1120 , L1084 , L1091 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( intloc ( 0 ) ) ) by L1084 , L1092 , L1093 , L1120 , L562;
thus L1122: ( ( Comput (C165 , C167 , R3) ) . ( IC ( SCM+FSA ) ) ) = 6 by L1084 , L1091 , L1120 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( IC ( SCM+FSA ) ) ) by L1084 , L1092 , L1120 , L562;
thus L1123: ( ( Comput (C165 , C167 , R3) ) . ( fsloc ( 0 ) ) ) = ( C167 . ( fsloc ( 0 ) ) ) by L1084 , L1091 , L1120 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( fsloc ( 0 ) ) ) by L1084 , L1092 , L1094 , L1120 , L562;
end;
suppose L1124: R3 = 7;

thus L1125: ( ( Comput (C165 , C167 , R3) ) . ( intloc ( 0 ) ) ) = ( C167 . ( intloc ( 0 ) ) ) by L1124 , L1088 , L1091 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( intloc ( 0 ) ) ) by L1084 , L1092 , L1093 , L1124 , L562;
thus L1126: ( ( Comput (C165 , C167 , R3) ) . ( IC ( SCM+FSA ) ) ) = 7 by L1084 , L1091 , L1124 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( IC ( SCM+FSA ) ) ) by L1084 , L1092 , L1124 , L562;
thus L1127: ( ( Comput (C165 , C167 , R3) ) . ( fsloc ( 0 ) ) ) = ( C167 . ( fsloc ( 0 ) ) ) by L1084 , L1091 , L1124 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( fsloc ( 0 ) ) ) by L1084 , L1092 , L1094 , L1124 , L562;
end;
suppose L1128: R3 = 8;

thus L1129: ( ( Comput (C165 , C167 , R3) ) . ( intloc ( 0 ) ) ) = ( C167 . ( intloc ( 0 ) ) ) by L1128 , L1084 , L1091 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( intloc ( 0 ) ) ) by L1084 , L1092 , L1093 , L1128 , L562;
thus L1130: ( ( Comput (C165 , C167 , R3) ) . ( IC ( SCM+FSA ) ) ) = 8 by L1084 , L1091 , L1128 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( IC ( SCM+FSA ) ) ) by L1084 , L1092 , L1128 , L562;
thus L1131: ( ( Comput (C165 , C167 , R3) ) . ( fsloc ( 0 ) ) ) = ( C167 . ( fsloc ( 0 ) ) ) by L1084 , L1091 , L1128 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( fsloc ( 0 ) ) ) by L1084 , L1092 , L1094 , L1128 , L562;
end;
suppose L1132: R3 = 9;

thus L1133: ( ( Comput (C165 , C167 , R3) ) . ( intloc ( 0 ) ) ) = ( C167 . ( intloc ( 0 ) ) ) by L1132 , L1084 , L1091 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( intloc ( 0 ) ) ) by L1084 , L1092 , L1093 , L1132 , L562;
thus L1134: ( ( Comput (C165 , C167 , R3) ) . ( IC ( SCM+FSA ) ) ) = 9 by L1084 , L1091 , L1132 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( IC ( SCM+FSA ) ) ) by L1084 , L1092 , L1132 , L562;
thus L1135: ( ( Comput (C165 , C167 , R3) ) . ( fsloc ( 0 ) ) ) = ( C167 . ( fsloc ( 0 ) ) ) by L1084 , L1091 , L1132 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( fsloc ( 0 ) ) ) by L1084 , L1092 , L1094 , L1132 , L562;
end;
suppose L1136: R3 = 10;

thus L1137: ( ( Comput (C165 , C167 , R3) ) . ( intloc ( 0 ) ) ) = ( C167 . ( intloc ( 0 ) ) ) by L1136 , L1084 , L1091 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( intloc ( 0 ) ) ) by L1084 , L1092 , L1093 , L1136 , L562;
thus L1138: ( ( Comput (C165 , C167 , R3) ) . ( IC ( SCM+FSA ) ) ) = 10 by L1084 , L1091 , L1136 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( IC ( SCM+FSA ) ) ) by L1084 , L1092 , L1136 , L562;
thus L1139: ( ( Comput (C165 , C167 , R3) ) . ( fsloc ( 0 ) ) ) = ( C167 . ( fsloc ( 0 ) ) ) by L1084 , L1091 , L1136 , L562
.= ( ( Comput (C166 , C168 , R3) ) . ( fsloc ( 0 ) ) ) by L1084 , L1092 , L1094 , L1136 , L562;
end;
end;
set D238 = { ( fsloc ( 0 ) ) , D39 , D40 , D41 , D42 , D43 , D44 , D45 };
set D239 = ( ( UsedInt*Loc D237 ) \/ ( UsedIntLoc D237 ) );
L1141: ( UsedInt*Loc D237 ) = { ( fsloc ( 0 ) ) } by L512;
L1142: ( UsedIntLoc D237 ) = { D39 , D40 , D41 , D42 , D43 , D44 , D45 } by L505;
L1143: D239 = D238 by L1142 , L1141 , ENUMSET1:22;
L1144: (for B185 , B186 being (Instruction-Sequence of ( SCM+FSA )) holds ((D237 c= B185 & D237 c= B186) implies (for B187 being (Element of ( NAT )) holds (for B188 , B189 being (State of ( SCM+FSA )) holds ((11 <= B187 & D236 c= B188 & D236 c= B189) implies (( ( Comput (B185 , B188 , B187) ) | D239 ) = ( ( Comput (B186 , B189 , B187) ) | D239 ) & ( ( Comput (B185 , B188 , B187) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (B186 , B189 , B187) ) . ( IC ( SCM+FSA ) ) )))))))
proof
let C169 , C170 being (Instruction-Sequence of ( SCM+FSA ));
assume that
L1145: (D237 c= C169 & D237 c= C170);
let C171 being (Element of ( NAT ));
let C172 , C173 being (State of ( SCM+FSA ));
assume that
L1146: 11 <= C171
and
L1147: D236 c= C172
and
L1148: D236 c= C173;
set D240 = ( Comput (C169 , C172 , 11) );
set D241 = ( Comput (C170 , C173 , 11) );
L1149: C172 is ( 0 ) -started by L1147 , MEMSTR_0:17;
L1150: C173 is ( 0 ) -started by L1148 , MEMSTR_0:17;
L1151: ( C172 . ( intloc ( 0 ) ) ) = 1 by L1147 , SCMFSA_M:33
.= ( C173 . ( intloc ( 0 ) ) ) by L1148 , SCMFSA_M:33;
L1152: ( C172 . ( fsloc ( 0 ) ) ) = C164 by L1147 , SCMFSA_M:33
.= ( C173 . ( fsloc ( 0 ) ) ) by L1148 , SCMFSA_M:33;
L1153: D239 c= ( dom D240 ) by L474;
L1154: D239 c= ( dom D241 ) by L474;
L1155:
now
let C174 being set;
assume L1156: C174 in D239;
L1157: C174 in D238 by L1156 , L1141 , L1142 , ENUMSET1:22;
per cases  by L1157 , ENUMSET1:def 6;
suppose L1158: C174 = ( fsloc ( 0 ) );

thus L1159: ( D240 . C174 ) = ( C172 . ( fsloc ( 0 ) ) ) by L1158 , L1149 , L1145 , L562
.= ( D241 . C174 ) by L1150 , L1145 , L1152 , L1158 , L562;
end;
suppose L1160: C174 = D39;

thus L1161: ( D240 . C174 ) = ( C172 . D39 ) by L1160 , L1149 , L1145 , L562
.= ( D241 . C174 ) by L1150 , L1145 , L1151 , L1160 , L562;
end;
suppose L1162: C174 = D40;

thus L1163: ( D240 . C174 ) = ( len ( C172 . ( fsloc ( 0 ) ) ) ) by L1162 , L1149 , L1145 , L562
.= ( D241 . C174 ) by L1150 , L1145 , L1152 , L1162 , L562;
end;
suppose L1164: C174 = D41;

thus L1165: ( D240 . C174 ) = ( C172 . D39 ) by L1164 , L1149 , L1145 , L562
.= ( D241 . C174 ) by L1150 , L1145 , L1151 , L1164 , L562;
end;
suppose L1166: C174 = D42;

thus L1167: ( D240 . C174 ) = ( C172 . D39 ) by L1166 , L1149 , L1145 , L562
.= ( D241 . C174 ) by L1150 , L1145 , L1151 , L1166 , L562;
end;
suppose L1168: C174 = D43;

thus L1169: ( D240 . C174 ) = ( C172 . D39 ) by L1168 , L1149 , L1145 , L562
.= ( D241 . C174 ) by L1150 , L1145 , L1151 , L1168 , L562;
end;
suppose L1170: C174 = D44;

thus L1171: ( D240 . C174 ) = ( C172 . D39 ) by L1170 , L1149 , L1145 , L562
.= ( D241 . C174 ) by L1150 , L1145 , L1151 , L1170 , L562;
end;
suppose L1172: C174 = D45;

thus L1173: ( D240 . C174 ) = ( C172 . D39 ) by L1172 , L1149 , L1145 , L562
.= ( D241 . C174 ) by L1150 , L1145 , L1151 , L1172 , L562;
end;
end;
L1175: ( D240 | D239 ) = ( D241 | D239 ) by L1155 , L1153 , L1154 , FUNCT_1:95;
L1176: ( D240 . ( IC ( SCM+FSA ) ) ) = 11 by L1149 , L1145 , L562
.= ( D241 . ( IC ( SCM+FSA ) ) ) by L1150 , L1145 , L562;
L1177: (for R3 being (Element of ( NAT )) holds ( IC ( Comput (C169 , C172 , R3) ) ) in ( dom D237 )) by L1147 , L1051 , L1145;
L1178: (for R3 being (Element of ( NAT )) holds ( IC ( Comput (C170 , C173 , R3) ) ) in ( dom D237 )) by L1148 , L1051 , L1145;
thus L1179: thesis by L1178 , L1146 , L1175 , L1176 , L1177 , L401 , L1145;
end;
set D242 = { ( intloc ( 0 ) ) , ( IC ( SCM+FSA ) ) , ( fsloc ( 0 ) ) };
let C175 , C176 being (Instruction-Sequence of ( SCM+FSA ));
assume that
L1180: (D237 c= C175 & D237 c= C176);
let C177 , C178 being (State of ( SCM+FSA ));
assume that
L1181: D236 c= C177
and
L1182: D236 c= C178;
let R3 being (Element of ( NAT ));
set D243 = ( Comput (C175 , C177 , R3) );
set D244 = ( Comput (C176 , C178 , R3) );
L1183: ( dom D236 ) = D242 by SCMFSA_M:31;
L1184: D242 c= ( dom D243 ) by SCMFSA_M:34;
L1185: D242 c= ( dom D244 ) by SCMFSA_M:34;
L1186: ( intloc ( 0 ) ) in D239 by L1143 , ENUMSET1:def 6;
L1187: ( fsloc ( 0 ) ) in D239 by L1143 , ENUMSET1:def 6;
L1188: D239 c= ( dom D243 ) by L474;
L1189: D239 c= ( dom D244 ) by L474;
L1190: (R3 > 10 implies ( 10 + 1 ) < ( R3 + 1 )) by XREAL_1:6;
L1191:
now
let C179 being set;
assume L1192: C179 in D242;
per cases  by L1192 , ENUMSET1:def 1;
suppose L1193: C179 = ( intloc ( 0 ) );

per cases ;
suppose L1194: R3 <= 10;

thus L1195: ( D243 . C179 ) = ( D244 . C179 ) by L1194 , L1083 , L1181 , L1182 , L1193 , L1180;
end;
suppose L1196: R3 > 10;

L1197: 11 <= R3 by L1196 , L1190 , NAT_1:13;
L1198: ( D243 | D239 ) = ( D244 | D239 ) by L1197 , L1144 , L1181 , L1182 , L1180;
thus L1199: ( D243 . C179 ) = ( D244 . C179 ) by L1198 , L1186 , L1188 , L1189 , L1193 , FUNCT_1:95;
end;
end;
suppose L1201: C179 = ( IC ( SCM+FSA ) );

per cases ;
suppose L1202: R3 <= 10;

thus L1203: ( D243 . C179 ) = ( D244 . C179 ) by L1202 , L1083 , L1181 , L1182 , L1201 , L1180;
end;
suppose L1204: R3 > 10;

L1205: 11 <= R3 by L1204 , L1190 , NAT_1:13;
thus L1206: ( D243 . C179 ) = ( D244 . C179 ) by L1205 , L1144 , L1181 , L1182 , L1201 , L1180;
end;
end;
suppose L1208: C179 = ( fsloc ( 0 ) );

per cases ;
suppose L1209: R3 <= 10;

thus L1210: ( D243 . C179 ) = ( D244 . C179 ) by L1209 , L1083 , L1181 , L1182 , L1208 , L1180;
end;
suppose L1211: R3 > 10;

L1212: 11 <= R3 by L1211 , L1190 , NAT_1:13;
L1213: ( D243 | D239 ) = ( D244 | D239 ) by L1212 , L1144 , L1181 , L1182 , L1180;
thus L1214: ( D243 . C179 ) = ( D244 . C179 ) by L1213 , L1187 , L1188 , L1189 , L1208 , FUNCT_1:95;
end;
end;
end;
thus L1217: ( D243 | ( dom D236 ) ) = ( D244 | ( dom D236 ) ) by L1191 , L1183 , L1184 , L1185 , FUNCT_1:95;
end;
registration
cluster ( Bubble-Sort-Algorithm ) -> non  halt-free;
coherence;
end;
theorem
L1219: ( Bubble-Sort-Algorithm ) , ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) computes ( Sorting-Function )
proof
let C180 being set;
assume L1220: C180 in ( dom ( Sorting-Function ) );
consider C181 being (FinSequence of ( INT )) such that L1221: C180 = ( ( fsloc ( 0 ) ) .--> C181 ) by L1220 , SCMFSA_M:35;
reconsider D245 = C180 as (FinPartState of ( SCM+FSA )) by L1221;
set D246 = ( Bubble-Sort-Algorithm );
set D247 = ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) );
L1222: ( dom D245 ) = { ( fsloc ( 0 ) ) } by L1221 , FUNCOP_1:13;
take D245;
thus L1223: C180 = D245;
L1224: ( dom D245 ) misses { ( IC ( SCM+FSA ) ) } by L1222 , SCMFSA_2:57 , ZFMISC_1:11;
L1225: ( dom D245 ) misses { ( intloc ( 0 ) ) } by L1222 , SCMFSA_2:58 , ZFMISC_1:11;
L1226: ( dom D247 ) = ( ( dom ( ( intloc ( 0 ) ) .--> 1 ) ) \/ { ( IC ( SCM+FSA ) ) } ) by MEMSTR_0:42
.= ( { ( IC ( SCM+FSA ) ) } \/ { ( intloc ( 0 ) ) } ) by FUNCOP_1:13;
L1227: ( dom D245 ) misses ( dom D247 ) by L1226 , L1224 , L1225 , XBOOLE_1:70;
L1228: ( D245 +* D247 ) = ( D247 +* D245 ) by L1227 , FUNCT_4:35;
L1229: ( Initialized D245 ) = ( D245 +* D247 )
.= ( D247 +* D245 ) by L1227 , FUNCT_4:35
.= ( D247 +* D245 )
.= ( D247 +* D245 );
L1230: ( D247 +* D245 ) is D246 -autonomic by L1229 , L1221 , L1082;
L1231:
now
let C182 being (State of ( SCM+FSA ));
assume L1232: ( D247 +* D245 ) c= C182;
let C183 being (Instruction-Sequence of ( SCM+FSA ));
assume that
L1233: D246 c= C183;
set D248 = ( bubble-sort ( fsloc ( 0 ) ) );
L1234: ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) c= ( D247 +* D245 ) by L1228 , FUNCT_4:25;
L1235: ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) c= C182 by L1234 , L1232 , XBOOLE_1:1;
thus L1236: C183 halts_on C182 by L1235 , L706 , L1233 , SCM_HALT:def 2;
end;
L1237: ( D247 +* D245 ) is D246 -halted by L1231 , EXTPRO_1:def 11;
thus L1238: ( D247 +* D245 ) is (Autonomy of D246) by L1237 , L1230 , EXTPRO_1:def 12;
consider C184 being (FinSequence of ( REAL )) such that L1239: C181 , C184 are_fiberwise_equipotent  and L1240: C184 is  non-increasing and L1241: C184 is (FinSequence of ( INT )) and L1242: ( ( Sorting-Function ) . D245 ) = ( ( fsloc ( 0 ) ) .--> C184 ) by L1221 , SCMFSA_M:36;
consider C185 being (State of ( SCM+FSA )) such that L1243: ( D247 +* D245 ) c= C185 by PBOOLE:141;
consider C186 being (Instruction-Sequence of ( SCM+FSA )) such that L1244: D246 c= C186 by PBOOLE:145;
consider C187 being (FinSequence of ( REAL )) such that L1245: C181 , C187 are_fiberwise_equipotent  and L1246: C187 is  non-increasing and L1247: C187 is (FinSequence of ( INT )) and L1248: ( ( Result (C186 , C185) ) . ( fsloc ( 0 ) ) ) = C187 by L1057 , L1221 , L1243 , L1244;
L1249: C187 = C184 by L1239 , L1240 , L1245 , L1246 , CLASSES1:76 , RFINSEQ:23;
L1250: ( fsloc ( 0 ) ) in (the carrier of ( SCM+FSA ));
L1251: ( fsloc ( 0 ) ) in ( dom ( Result (C186 , C185) ) ) by L1250 , PARTFUN1:def 2;
L1252: D245 c= ( D247 +* D245 ) by FUNCT_4:25;
L1253: ( dom D245 ) c= ( dom ( D247 +* D245 ) ) by L1252 , RELAT_1:11;
L1254: ( dom ( ( fsloc ( 0 ) ) .--> C184 ) ) = { ( fsloc ( 0 ) ) } by FUNCOP_1:13;
L1255: ( Result (D246 , ( D247 +* D245 )) ) = ( ( Result (C186 , C185) ) | ( dom ( D247 +* D245 ) ) ) by L1238 , L1243 , L1244 , EXTPRO_1:def 13;
thus L1256: ( ( Sorting-Function ) . D245 ) c= ( Result (D246 , ( D247 +* D245 )) ) by L1255 , L1222 , L1242 , L1248 , L1249 , L1251 , L1254 , L1253 , FUNCT_4:85 , RELAT_1:151;
end;
