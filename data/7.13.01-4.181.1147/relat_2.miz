:: Properties of Binary Relations
::  by Edmund Woronowicz and Anna Zalewska
::
:: Received March 15, 1989
:: Copyright (c) 1990-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies RELAT_1, TARSKI, XBOOLE_0, ZFMISC_1, RELAT_2;
 notations TARSKI, XBOOLE_0, ZFMISC_1, RELAT_1;
 constructors TARSKI, SUBSET_1, RELAT_1, XTUPLE_0;
 registrations RELAT_1, XBOOLE_0;
 requirements BOOLE, SUBSET;
 theorems TARSKI, XBOOLE_0, ZFMISC_1, RELAT_1, XTUPLE_0;
 definitions RELAT_1;

begin
definition
let R9 being Relation;
let R1 being set;
pred R9 is_reflexive_in R1
means
:L1: (for R5 being set holds (R5 in R1 implies [ R5 , R5 ] in R9))
;pred R9 is_irreflexive_in R1
means
:L2: (for R5 being set holds (R5 in R1 implies (not [ R5 , R5 ] in R9)))
;pred R9 is_symmetric_in R1
means
:L3: (for R5 being set holds (for R6 being set holds ((R5 in R1 & R6 in R1 & [ R5 , R6 ] in R9) implies [ R6 , R5 ] in R9)))
;pred R9 is_antisymmetric_in R1
means
:L4: (for R5 being set holds (for R6 being set holds ((R5 in R1 & R6 in R1 & [ R5 , R6 ] in R9 & [ R6 , R5 ] in R9) implies R5 = R6)))
;pred R9 is_asymmetric_in R1
means
:L5: (for R5 being set holds (for R6 being set holds ((R5 in R1 & R6 in R1 & [ R5 , R6 ] in R9) implies (not [ R6 , R5 ] in R9))))
;pred R9 is_connected_in R1
means
:L6: (for R5 being set holds (for R6 being set holds ((R5 in R1 & R6 in R1 & R5 <> R6) implies ([ R5 , R6 ] in R9 or [ R6 , R5 ] in R9))))
;pred R9 is_strongly_connected_in R1
means
:L7: (for R5 being set holds (for R6 being set holds ((R5 in R1 & R6 in R1) implies ([ R5 , R6 ] in R9 or [ R6 , R5 ] in R9))))
;pred R9 is_transitive_in R1
means
:L8: (for R5 being set holds (for R6 being set holds (for R7 being set holds ((R5 in R1 & R6 in R1 & R7 in R1 & [ R5 , R6 ] in R9 & [ R6 , R7 ] in R9) implies [ R5 , R7 ] in R9))))
;end;
definition
let R9 being Relation;
attr R9 is  reflexive
means
:L10: R9 is_reflexive_in ( field R9 );
attr R9 is  irreflexive
means
:L11: R9 is_irreflexive_in ( field R9 );
attr R9 is  symmetric
means
:L12: R9 is_symmetric_in ( field R9 );
attr R9 is  antisymmetric
means
:L13: R9 is_antisymmetric_in ( field R9 );
attr R9 is  asymmetric
means
:L14: R9 is_asymmetric_in ( field R9 );
attr R9 is  connected
means
:L15: R9 is_connected_in ( field R9 );
attr R9 is  strongly_connected
means
:L16: R9 is_strongly_connected_in ( field R9 );
attr R9 is  transitive
means
:L17: R9 is_transitive_in ( field R9 );
end;
registration
cluster  empty ->  reflexive  irreflexive  symmetric  antisymmetric  asymmetric  connected  strongly_connected  transitive for Relation;
coherence
proof
let C1 being Relation;
assume L19: C1 is  empty;
thus L20: C1 is  reflexive
proof
let R5 being set;
thus L21: thesis by L19 , RELAT_1:40;
end;

thus L22: C1 is  irreflexive
proof
let R5 being set;
thus L23: thesis by L19;
end;

thus L24: C1 is  symmetric
proof
let R5 being set;
thus L25: thesis by L19;
end;

thus L26: C1 is  antisymmetric
proof
let R5 being set;
thus L27: thesis by L19;
end;

thus L28: C1 is  asymmetric
proof
let R5 being set;
thus L29: thesis by L19;
end;

thus L30: C1 is  connected
proof
let R5 being set;
thus L31: thesis by L19 , RELAT_1:40;
end;

thus L32: C1 is  strongly_connected
proof
let R5 being set;
thus L33: thesis by L19 , RELAT_1:40;
end;

let R5 being set;
thus L34: thesis by L19;
end;
end;
theorem
L36: (for R9 being Relation holds (R9 is  reflexive iff ( id ( field R9 ) ) c= R9))
proof
let R9 being Relation;
thus L37:now
assume L38: R9 is  reflexive;
thus L39: ( id ( field R9 ) ) c= R9
proof
let R2 being set;
let R3 being set;
assume L40: [ R2 , R3 ] in ( id ( field R9 ) );
L41: (R2 in ( field R9 ) & R2 = R3) by L40 , RELAT_1:def 10;
thus L42: [ R2 , R3 ] in R9 by L41 , L38 , L1 , L10;
end;

end;
assume L40: ( id ( field R9 ) ) c= R9;
let R2 being set;
assume L41: R2 in ( field R9 );
L42: [ R2 , R2 ] in ( id ( field R9 ) ) by L41 , RELAT_1:def 10;
thus L43: [ R2 , R2 ] in R9 by L42 , L40;
end;
theorem
L44: (for R9 being Relation holds (R9 is  irreflexive iff ( id ( field R9 ) ) misses R9))
proof
let R9 being Relation;
thus L45:now
assume L46: R9 is  irreflexive;
L47: R9 is_irreflexive_in ( field R9 ) by L46 , L11;
L48:
now
let R2 being set;
let R3 being set;
assume L49: [ R2 , R3 ] in ( ( id ( field R9 ) ) /\ R9 );
L50: [ R2 , R3 ] in ( id ( field R9 ) ) by L49 , XBOOLE_0:def 4;
L51: (R2 in ( field R9 ) & R2 = R3) by L50 , RELAT_1:def 10;
L52: [ R2 , R3 ] in R9 by L49 , XBOOLE_0:def 4;
thus L53: contradiction by L52 , L47 , L51 , L2;
end;
thus L54: ( id ( field R9 ) ) misses R9 by L48 , RELAT_1:37 , XBOOLE_0:def 7;
end;
assume L55: ( id ( field R9 ) ) misses R9;
let R2 being set;
assume L56: R2 in ( field R9 );
L57: [ R2 , R2 ] in ( id ( field R9 ) ) by L56 , RELAT_1:def 10;
thus L58: thesis by L57 , L55 , XBOOLE_0:3;
end;
theorem
L59: (for R1 being set holds (for R9 being Relation holds (R9 is_antisymmetric_in R1 iff ( R9 \ ( id R1 ) ) is_asymmetric_in R1)))
proof
let R1 being set;
let R9 being Relation;
thus L60:now
assume L61: R9 is_antisymmetric_in R1;
thus L62: ( R9 \ ( id R1 ) ) is_asymmetric_in R1
proof
let R5 being set;
let R6 being set;
assume that
L63: R5 in R1
and
L64: R6 in R1
and
L65: [ R5 , R6 ] in ( R9 \ ( id R1 ) );
L66: (not [ R5 , R6 ] in ( id R1 )) by L65 , XBOOLE_0:def 5;
L67: R5 <> R6 by L66 , L63 , RELAT_1:def 10;
L68: [ R5 , R6 ] in R9 by L65 , XBOOLE_0:def 5;
L69: (not [ R6 , R5 ] in R9) by L68 , L61 , L63 , L64 , L67 , L4;
thus L70: (not [ R6 , R5 ] in ( R9 \ ( id R1 ) )) by L69 , XBOOLE_0:def 5;
end;

end;
assume L63: ( R9 \ ( id R1 ) ) is_asymmetric_in R1;
let R5 being set;
let R6 being set;
assume that
L64: (R5 in R1 & R6 in R1)
and
L65: [ R5 , R6 ] in R9
and
L66: [ R6 , R5 ] in R9;
assume L67: R5 <> R6;
L68: (not [ R6 , R5 ] in ( id R1 )) by L67 , RELAT_1:def 10;
L69: [ R6 , R5 ] in ( R9 \ ( id R1 ) ) by L68 , L66 , XBOOLE_0:def 5;
L70: (not [ R5 , R6 ] in ( id R1 )) by L67 , RELAT_1:def 10;
L71: [ R5 , R6 ] in ( R9 \ ( id R1 ) ) by L70 , L65 , XBOOLE_0:def 5;
thus L72: contradiction by L71 , L63 , L64 , L69 , L5;
end;
theorem
L73: (for R1 being set holds (for R9 being Relation holds (R9 is_asymmetric_in R1 implies ( R9 \/ ( id R1 ) ) is_antisymmetric_in R1)))
proof
let R1 being set;
let R9 being Relation;
assume L74: R9 is_asymmetric_in R1;
let R5 being set;
let R6 being set;
assume that
L75: (R5 in R1 & R6 in R1)
and
L76: [ R5 , R6 ] in ( R9 \/ ( id R1 ) )
and
L77: [ R6 , R5 ] in ( R9 \/ ( id R1 ) );
assume L78: R5 <> R6;
L79: (not [ R6 , R5 ] in ( id R1 )) by L78 , RELAT_1:def 10;
L80: [ R6 , R5 ] in R9 by L79 , L77 , XBOOLE_0:def 3;
L81: (not [ R5 , R6 ] in ( id R1 )) by L78 , RELAT_1:def 10;
L82: [ R5 , R6 ] in R9 by L81 , L76 , XBOOLE_0:def 3;
thus L83: contradiction by L82 , L74 , L75 , L80 , L5;
end;
canceled 7;
registration
cluster  symmetric  transitive ->  reflexive for Relation;
coherence
proof
let C2 being Relation;
assume that
L84: C2 is  symmetric
and
L85: C2 is  transitive;
L86: C2 is_transitive_in ( field C2 ) by L85 , L17;
L87: C2 is_symmetric_in ( field C2 ) by L84 , L12;
let R2 being set;
L88:
now
assume L89: R2 in ( dom C2 );
consider R3 being set such that L90: [ R2 , R3 ] in C2 by L89 , XTUPLE_0:def 12;
L91: (R2 in ( field C2 ) & R3 in ( field C2 )) by L90 , RELAT_1:15;
L92: [ R3 , R2 ] in C2 by L91 , L87 , L90 , L3;
thus L93: [ R2 , R2 ] in C2 by L92 , L86 , L90 , L91 , L8;
end;
L94:
now
assume L95: R2 in ( rng C2 );
consider R3 being set such that L96: [ R3 , R2 ] in C2 by L95 , XTUPLE_0:def 13;
L97: (R2 in ( field C2 ) & R3 in ( field C2 )) by L96 , RELAT_1:15;
L98: [ R2 , R3 ] in C2 by L97 , L87 , L96 , L3;
thus L99: [ R2 , R2 ] in C2 by L98 , L86 , L96 , L97 , L8;
end;
thus L100: thesis by L94 , L88 , XBOOLE_0:def 3;
end;
end;
registration
let R1 being set;
cluster ( id R1 ) ->  symmetric  transitive  antisymmetric;
coherence
proof
thus L102: ( id R1 ) is  symmetric
proof
let R2 being set;
let R3 being set;
assume that
L103: R2 in ( field ( id R1 ) )
and
L104: R3 in ( field ( id R1 ) )
and
L105: [ R2 , R3 ] in ( id R1 );
L106: R2 = R3 by L105 , RELAT_1:def 10;
thus L107: thesis by L106 , L105;
end;

thus L108: ( id R1 ) is  transitive
proof
let R2 being set;
let R3 being set;
let R4 being set;
thus L109: thesis by RELAT_1:def 10;
end;

thus L110: ( id R1 ) is  antisymmetric
proof
let R2 being set;
let R3 being set;
thus L111: thesis by RELAT_1:def 10;
end;

end;
end;
registration
cluster  irreflexive  transitive ->  asymmetric for Relation;
coherence
proof
let C3 being Relation;
assume that
L112: C3 is_irreflexive_in ( field C3 )
and
L113: C3 is_transitive_in ( field C3 );
let R2 being set;
let R3 being set;
assume that
L114: R2 in ( field C3 )
and
L115: R3 in ( field C3 );
L116: (not [ R2 , R2 ] in C3) by L112 , L114 , L2;
thus L117: thesis by L116 , L113 , L114 , L115 , L8;
end;
cluster  asymmetric ->  irreflexive  antisymmetric for Relation;
coherence
proof
let C4 being Relation;
assume L118: C4 is_asymmetric_in ( field C4 );
L119: (for R5 being set holds (R5 in ( field C4 ) implies (not [ R5 , R5 ] in C4))) by L118 , L5;
thus L120: C4 is  irreflexive by L119 , L2 , L11;
L121: (for R5 being set holds (for R6 being set holds ((R5 in ( field C4 ) & R6 in ( field C4 ) & [ R5 , R6 ] in C4 & [ R6 , R5 ] in C4) implies R5 = R6))) by L118 , L5;
thus L122: thesis by L121 , L4 , L13;
end;
end;
registration
let C5 being  reflexive Relation;
cluster ( C5 ~ ) ->  reflexive;
coherence
proof
L124: C5 is_reflexive_in ( field C5 ) by L10;
let R5 being set;
assume L125: R5 in ( field ( C5 ~ ) );
L126: R5 in ( field C5 ) by L125 , RELAT_1:21;
L127: [ R5 , R5 ] in C5 by L126 , L124 , L1;
thus L128: [ R5 , R5 ] in ( C5 ~ ) by L127 , RELAT_1:def 7;
end;
end;
registration
let C6 being  irreflexive Relation;
cluster ( C6 ~ ) ->  irreflexive;
coherence
proof
L130: C6 is_irreflexive_in ( field C6 ) by L11;
let R5 being set;
assume L131: R5 in ( field ( C6 ~ ) );
L132: R5 in ( field C6 ) by L131 , RELAT_1:21;
L133: (not [ R5 , R5 ] in C6) by L132 , L130 , L2;
thus L134: thesis by L133 , RELAT_1:def 7;
end;
end;
theorem
L136: (for R9 being Relation holds (R9 is  reflexive implies (( dom R9 ) = ( dom ( R9 ~ ) ) & ( rng R9 ) = ( rng ( R9 ~ ) ))))
proof
let R9 being Relation;
assume L137: R9 is  reflexive;
L138: R9 is_reflexive_in ( field R9 ) by L137 , L10;
L139: ( R9 ~ ) is_reflexive_in ( field ( R9 ~ ) ) by L137 , L10;
L140:
now
let R5 being set;
L141:
now
assume L142: R5 in ( dom ( R9 ~ ) );
L143: R5 in ( field ( R9 ~ ) ) by L142 , XBOOLE_0:def 3;
L144: [ R5 , R5 ] in ( R9 ~ ) by L143 , L137 , L1 , L10;
L145: [ R5 , R5 ] in R9 by L144 , RELAT_1:def 7;
thus L146: R5 in ( dom R9 ) by L145 , XTUPLE_0:def 12;
end;
L147:
now
assume L148: R5 in ( dom R9 );
L149: R5 in ( field R9 ) by L148 , XBOOLE_0:def 3;
L150: [ R5 , R5 ] in R9 by L149 , L137 , L1 , L10;
L151: [ R5 , R5 ] in ( R9 ~ ) by L150 , RELAT_1:def 7;
thus L152: R5 in ( dom ( R9 ~ ) ) by L151 , XTUPLE_0:def 12;
end;
thus L153: (R5 in ( dom R9 ) iff R5 in ( dom ( R9 ~ ) )) by L147 , L141;
end;
thus L154: ( dom R9 ) = ( dom ( R9 ~ ) ) by L140 , TARSKI:1;
L155:
now
let R5 being set;
L156:
now
assume L157: R5 in ( rng ( R9 ~ ) );
L158: R5 in ( field ( R9 ~ ) ) by L157 , XBOOLE_0:def 3;
L159: [ R5 , R5 ] in ( R9 ~ ) by L158 , L139 , L1;
L160: [ R5 , R5 ] in R9 by L159 , RELAT_1:def 7;
thus L161: R5 in ( rng R9 ) by L160 , XTUPLE_0:def 13;
end;
L162:
now
assume L163: R5 in ( rng R9 );
L164: R5 in ( field R9 ) by L163 , XBOOLE_0:def 3;
L165: [ R5 , R5 ] in R9 by L164 , L138 , L1;
L166: [ R5 , R5 ] in ( R9 ~ ) by L165 , RELAT_1:def 7;
thus L167: R5 in ( rng ( R9 ~ ) ) by L166 , XTUPLE_0:def 13;
end;
thus L168: (R5 in ( rng R9 ) iff R5 in ( rng ( R9 ~ ) )) by L162 , L156;
end;
thus L169: thesis by L155 , TARSKI:1;
end;
theorem
L170: (for R9 being Relation holds (R9 is  symmetric iff R9 = ( R9 ~ )))
proof
let R9 being Relation;
thus L171:now
assume L172: R9 is  symmetric;
L173: R9 is_symmetric_in ( field R9 ) by L172 , L12;
L174:
now
let R2 being set;
let R3 being set;
L175:
now
assume L176: [ R2 , R3 ] in ( R9 ~ );
L177: [ R3 , R2 ] in R9 by L176 , RELAT_1:def 7;
L178: (R2 in ( field R9 ) & R3 in ( field R9 )) by L177 , RELAT_1:15;
thus L179: [ R2 , R3 ] in R9 by L178 , L173 , L177 , L3;
end;
L180:
now
assume L181: [ R2 , R3 ] in R9;
L182: (R2 in ( field R9 ) & R3 in ( field R9 )) by L181 , RELAT_1:15;
L183: [ R3 , R2 ] in R9 by L182 , L173 , L181 , L3;
thus L184: [ R2 , R3 ] in ( R9 ~ ) by L183 , RELAT_1:def 7;
end;
thus L185: ([ R2 , R3 ] in R9 iff [ R2 , R3 ] in ( R9 ~ )) by L180 , L175;
end;
thus L186: R9 = ( R9 ~ ) by L174 , RELAT_1:def 2;
end;
assume L187: R9 = ( R9 ~ );
L188: (for R2 being set holds (for R3 being set holds ((R2 in ( field R9 ) & R3 in ( field R9 ) & [ R2 , R3 ] in R9) implies [ R3 , R2 ] in R9))) by L187 , RELAT_1:def 7;
thus L189: thesis by L188 , L3 , L12;
end;
registration
let C7 , C8 being  reflexive Relation;
cluster ( C7 \/ C8 ) ->  reflexive;
coherence
proof
L190: C8 is_reflexive_in ( field C8 ) by L10;
L191: C7 is_reflexive_in ( field C7 ) by L10;
L192:
now
let R2 being set;
L193:
now
assume L194: R2 in ( field C7 );
L195: [ R2 , R2 ] in C7 by L194 , L191 , L1;
thus L196: [ R2 , R2 ] in ( C7 \/ C8 ) by L195 , XBOOLE_0:def 3;
end;
L197:
now
assume L198: R2 in ( field C8 );
L199: [ R2 , R2 ] in C8 by L198 , L190 , L1;
thus L200: [ R2 , R2 ] in ( C7 \/ C8 ) by L199 , XBOOLE_0:def 3;
end;
assume L201: R2 in ( field ( C7 \/ C8 ) );
L202: R2 in ( ( field C7 ) \/ ( field C8 ) ) by L201 , RELAT_1:18;
thus L203: [ R2 , R2 ] in ( C7 \/ C8 ) by L202 , L193 , L197 , XBOOLE_0:def 3;
end;
thus L204: ( C7 \/ C8 ) is  reflexive by L192 , L1 , L10;
end;
cluster ( C7 /\ C8 ) ->  reflexive;
coherence
proof
L205: C8 is_reflexive_in ( field C8 ) by L10;
L206: C7 is_reflexive_in ( field C7 ) by L10;
L207:
now
let R2 being set;
assume L208: R2 in ( field ( C7 /\ C8 ) );
L209: ( field ( C7 /\ C8 ) ) c= ( ( field C7 ) /\ ( field C8 ) ) by RELAT_1:19;
L210: R2 in ( field C8 ) by L209 , L208 , XBOOLE_0:def 4;
L211: [ R2 , R2 ] in C8 by L210 , L205 , L1;
L212: R2 in ( field C7 ) by L209 , L208 , XBOOLE_0:def 4;
L213: [ R2 , R2 ] in C7 by L212 , L206 , L1;
thus L214: [ R2 , R2 ] in ( C7 /\ C8 ) by L213 , L211 , XBOOLE_0:def 4;
end;
thus L215: thesis by L207 , L1 , L10;
end;
end;
registration
let C9 , C10 being  irreflexive Relation;
cluster ( C9 \/ C10 ) ->  irreflexive;
coherence
proof
L217: C9 is_irreflexive_in ( field C9 ) by L11;
L218: C10 is_irreflexive_in ( field C10 ) by L11;
let R2 being set;
L219:
now
assume L220: R2 in ( field C9 );
L221: (not [ R2 , R2 ] in C9) by L220 , L217 , L2;
L222: ((not R2 in ( field C10 )) implies (not [ R2 , R2 ] in C10)) by RELAT_1:15;
L223: (R2 in ( field C10 ) implies (not [ R2 , R2 ] in C10)) by L218 , L2;
thus L224: (not [ R2 , R2 ] in ( C9 \/ C10 )) by L223 , L221 , L222 , XBOOLE_0:def 3;
end;
L225:
now
assume L226: R2 in ( field C10 );
L227: (not [ R2 , R2 ] in C10) by L226 , L218 , L2;
L228: ((not R2 in ( field C9 )) implies (not [ R2 , R2 ] in C9)) by RELAT_1:15;
L229: (R2 in ( field C9 ) implies (not [ R2 , R2 ] in C9)) by L217 , L2;
thus L230: (not [ R2 , R2 ] in ( C9 \/ C10 )) by L229 , L227 , L228 , XBOOLE_0:def 3;
end;
assume L231: R2 in ( field ( C9 \/ C10 ) );
L232: R2 in ( ( field C9 ) \/ ( field C10 ) ) by L231 , RELAT_1:18;
thus L233: (not [ R2 , R2 ] in ( C9 \/ C10 )) by L232 , L219 , L225 , XBOOLE_0:def 3;
end;
cluster ( C9 /\ C10 ) ->  irreflexive;
coherence
proof
let R2 being set;
assume L234: R2 in ( field ( C9 /\ C10 ) );
L235: ( field ( C9 /\ C10 ) ) c= ( ( field C9 ) /\ ( field C10 ) ) by RELAT_1:19;
L236: R2 in ( field C9 ) by L235 , L234 , XBOOLE_0:def 4;
L237: (not [ R2 , R2 ] in C9) by L236 , L11 , L2;
thus L238: thesis by L237 , XBOOLE_0:def 4;
end;
end;
registration
let C11 being  irreflexive Relation;
let C12 being Relation;
cluster ( C11 \ C12 ) ->  irreflexive;
coherence
proof
L240: C11 is_irreflexive_in ( field C11 ) by L11;
let R2 being set;
L241:
now
assume L242: R2 in ( dom ( C11 \ C12 ) );
consider R3 being set such that L243: [ R2 , R3 ] in ( C11 \ C12 ) by L242 , XTUPLE_0:def 12;
L244: [ R2 , R3 ] in C11 by L243 , XBOOLE_0:def 5;
L245: R2 in ( field C11 ) by L244 , RELAT_1:15;
thus L246: (not [ R2 , R2 ] in C11) by L245 , L240 , L2;
end;
L247:
now
assume L248: R2 in ( rng ( C11 \ C12 ) );
consider R3 being set such that L249: [ R3 , R2 ] in ( C11 \ C12 ) by L248 , XTUPLE_0:def 13;
L250: [ R3 , R2 ] in C11 by L249 , XBOOLE_0:def 5;
L251: R2 in ( field C11 ) by L250 , RELAT_1:15;
thus L252: (not [ R2 , R2 ] in C11) by L251 , L240 , L2;
end;
thus L253: thesis by L247 , L241 , XBOOLE_0:def 3 , XBOOLE_0:def 5;
end;
end;
registration
let C13 being  symmetric Relation;
cluster ( C13 ~ ) ->  symmetric;
coherence by L170;
end;
registration
let C14 , C15 being  symmetric Relation;
cluster ( C14 \/ C15 ) ->  symmetric;
coherence
proof
L256: C15 is_symmetric_in ( field C15 ) by L12;
L257: C14 is_symmetric_in ( field C14 ) by L12;
L258:
now
let R2 being set;
let R3 being set;
assume that
L259: R2 in ( field ( C14 \/ C15 ) )
and
L260: R3 in ( field ( C14 \/ C15 ) )
and
L261: [ R2 , R3 ] in ( C14 \/ C15 );
L262:
now
assume L263: [ R2 , R3 ] in C15;
L264: (R2 in ( field C15 ) & R3 in ( field C15 )) by L263 , RELAT_1:15;
L265: [ R3 , R2 ] in C15 by L264 , L256 , L263 , L3;
thus L266: [ R3 , R2 ] in ( C14 \/ C15 ) by L265 , XBOOLE_0:def 3;
end;
L267:
now
assume L268: [ R2 , R3 ] in C14;
L269: (R2 in ( field C14 ) & R3 in ( field C14 )) by L268 , RELAT_1:15;
L270: [ R3 , R2 ] in C14 by L269 , L257 , L268 , L3;
thus L271: [ R3 , R2 ] in ( C14 \/ C15 ) by L270 , XBOOLE_0:def 3;
end;
thus L272: [ R3 , R2 ] in ( C14 \/ C15 ) by L267 , L261 , L262 , XBOOLE_0:def 3;
end;
thus L273: thesis by L258 , L3 , L12;
end;
cluster ( C14 /\ C15 ) ->  symmetric;
coherence
proof
L274: C15 is_symmetric_in ( field C15 ) by L12;
L275: C14 is_symmetric_in ( field C14 ) by L12;
L276:
now
let R2 being set;
let R3 being set;
assume that
L277: (R2 in ( field ( C14 /\ C15 ) ) & R3 in ( field ( C14 /\ C15 ) ))
and
L278: [ R2 , R3 ] in ( C14 /\ C15 );
L279: [ R2 , R3 ] in C15 by L278 , XBOOLE_0:def 4;
L280: ( field ( C14 /\ C15 ) ) c= ( ( field C14 ) /\ ( field C15 ) ) by RELAT_1:19;
L281: (R2 in ( field C15 ) & R3 in ( field C15 )) by L280 , L277 , XBOOLE_0:def 4;
L282: [ R3 , R2 ] in C15 by L281 , L274 , L279 , L3;
L283: [ R2 , R3 ] in C14 by L278 , XBOOLE_0:def 4;
L284: (R2 in ( field C14 ) & R3 in ( field C14 )) by L280 , L277 , XBOOLE_0:def 4;
L285: [ R3 , R2 ] in C14 by L284 , L275 , L283 , L3;
thus L286: [ R3 , R2 ] in ( C14 /\ C15 ) by L285 , L282 , XBOOLE_0:def 4;
end;
thus L287: thesis by L276 , L3 , L12;
end;
cluster ( C14 \ C15 ) ->  symmetric;
coherence
proof
L288: C15 is_symmetric_in ( field C15 ) by L12;
L289: C14 is_symmetric_in ( field C14 ) by L12;
L290:
now
let R2 being set;
let R3 being set;
assume that
L291: R2 in ( field ( C14 \ C15 ) )
and
L292: R3 in ( field ( C14 \ C15 ) )
and
L293: [ R2 , R3 ] in ( C14 \ C15 );
L294: (not [ R2 , R3 ] in C15) by L293 , XBOOLE_0:def 5;
L295: ((not R3 in ( field C15 )) or (not R2 in ( field C15 )) or (not [ R3 , R2 ] in C15)) by L294 , L288 , L3;
L296: [ R2 , R3 ] in C14 by L293 , XBOOLE_0:def 5;
L297: (R2 in ( field C14 ) & R3 in ( field C14 )) by L296 , RELAT_1:15;
L298: [ R3 , R2 ] in C14 by L297 , L289 , L296 , L3;
L299: (((not R3 in ( field C15 )) or (not R2 in ( field C15 ))) implies (not [ R3 , R2 ] in C15)) by RELAT_1:15;
thus L300: [ R3 , R2 ] in ( C14 \ C15 ) by L299 , L298 , L295 , XBOOLE_0:def 5;
end;
thus L301: thesis by L290 , L3 , L12;
end;
end;
registration
let C16 being  asymmetric Relation;
cluster ( C16 ~ ) ->  asymmetric;
coherence
proof
L303: C16 is_asymmetric_in ( field C16 ) by L14;
let R5 being set;
let R6 being set;
assume that
L304: (R5 in ( field ( C16 ~ ) ) & R6 in ( field ( C16 ~ ) ))
and
L305: [ R5 , R6 ] in ( C16 ~ );
L306: [ R6 , R5 ] in C16 by L305 , RELAT_1:def 7;
L307: (R5 in ( field C16 ) & R6 in ( field C16 )) by L304 , RELAT_1:21;
L308: (not [ R5 , R6 ] in C16) by L307 , L303 , L306 , L5;
thus L309: thesis by L308 , RELAT_1:def 7;
end;
end;
registration
let C17 being Relation;
let C18 being  asymmetric Relation;
cluster ( C17 /\ C18 ) ->  asymmetric;
coherence
proof
L311: C18 is_asymmetric_in ( field C18 ) by L14;
L312: ( field ( C17 /\ C18 ) ) c= ( ( field C17 ) /\ ( field C18 ) ) by RELAT_1:19;
let R2 being set;
let R3 being set;
assume that
L313: (R2 in ( field ( C17 /\ C18 ) ) & R3 in ( field ( C17 /\ C18 ) ))
and
L314: [ R2 , R3 ] in ( C17 /\ C18 );
L315: [ R2 , R3 ] in C18 by L314 , XBOOLE_0:def 4;
L316: (R2 in ( field C18 ) & R3 in ( field C18 )) by L312 , L313 , XBOOLE_0:def 4;
L317: (not [ R3 , R2 ] in C18) by L316 , L311 , L315 , L5;
thus L318: thesis by L317 , XBOOLE_0:def 4;
end;
cluster ( C18 /\ C17 ) ->  asymmetric;
coherence;
end;
registration
let C19 being  asymmetric Relation;
let C20 being Relation;
cluster ( C19 \ C20 ) ->  asymmetric;
coherence
proof
L320: C19 is_asymmetric_in ( field C19 ) by L14;
let R2 being set;
let R3 being set;
assume that
L321: R2 in ( field ( C19 \ C20 ) )
and
L322: R3 in ( field ( C19 \ C20 ) )
and
L323: [ R2 , R3 ] in ( C19 \ C20 );
L324: [ R2 , R3 ] in C19 by L323 , XBOOLE_0:def 5;
L325: (R2 in ( field C19 ) & R3 in ( field C19 )) by L324 , RELAT_1:15;
L326: (not [ R3 , R2 ] in C19) by L325 , L320 , L324 , L5;
thus L327: thesis by L326 , XBOOLE_0:def 5;
end;
end;
canceled 8;
theorem
L329: (for R9 being Relation holds (R9 is  antisymmetric iff ( R9 /\ ( R9 ~ ) ) c= ( id ( dom R9 ) )))
proof
let R9 being Relation;
L330:
now
assume L331: R9 is  antisymmetric;
L332: R9 is_antisymmetric_in ( field R9 ) by L331 , L13;
L333:
now
let R2 being set;
let R3 being set;
assume L334: [ R2 , R3 ] in ( R9 /\ ( R9 ~ ) );
L335: [ R2 , R3 ] in ( R9 ~ ) by L334 , XBOOLE_0:def 4;
L336: [ R3 , R2 ] in R9 by L335 , RELAT_1:def 7;
L337: R3 in ( dom R9 ) by L336 , XTUPLE_0:def 12;
L338: [ R2 , R3 ] in R9 by L334 , XBOOLE_0:def 4;
L339: (R2 in ( field R9 ) & R3 in ( field R9 )) by L338 , RELAT_1:15;
L340: R2 = R3 by L339 , L332 , L338 , L336 , L4;
thus L341: [ R2 , R3 ] in ( id ( dom R9 ) ) by L340 , L337 , RELAT_1:def 10;
end;
thus L342: ( R9 /\ ( R9 ~ ) ) c= ( id ( dom R9 ) ) by L333 , RELAT_1:def 3;
end;
L343:
now
assume L344: ( R9 /\ ( R9 ~ ) ) c= ( id ( dom R9 ) );
L345:
now
let R2 being set;
let R3 being set;
assume that
L346: R2 in ( field R9 )
and
L347: R3 in ( field R9 )
and
L348: [ R2 , R3 ] in R9
and
L349: [ R3 , R2 ] in R9;
L350: [ R2 , R3 ] in ( R9 ~ ) by L349 , RELAT_1:def 7;
L351: [ R2 , R3 ] in ( R9 /\ ( R9 ~ ) ) by L350 , L348 , XBOOLE_0:def 4;
thus L352: R2 = R3 by L351 , L344 , RELAT_1:def 10;
end;
thus L353: R9 is  antisymmetric by L345 , L4 , L13;
end;
thus L354: thesis by L343 , L330;
end;
registration
let C21 being  antisymmetric Relation;
cluster ( C21 ~ ) ->  antisymmetric;
coherence
proof
let R5 being set;
let R6 being set;
assume that
L355: (R5 in ( field ( C21 ~ ) ) & R6 in ( field ( C21 ~ ) ))
and
L356: ([ R5 , R6 ] in ( C21 ~ ) & [ R6 , R5 ] in ( C21 ~ ));
L357: ([ R6 , R5 ] in C21 & [ R5 , R6 ] in C21) by L356 , RELAT_1:def 7;
L358: (R5 in ( field C21 ) & R6 in ( field C21 )) by L355 , RELAT_1:21;
thus L359: R5 = R6 by L358 , L357 , L4 , L13;
end;
end;
registration
let C22 being  antisymmetric Relation;
let C23 being Relation;
cluster ( C22 /\ C23 ) ->  antisymmetric;
coherence
proof
L361: C22 is_antisymmetric_in ( field C22 ) by L13;
let R2 being set;
let R3 being set;
assume that
L362: (R2 in ( field ( C22 /\ C23 ) ) & R3 in ( field ( C22 /\ C23 ) ))
and
L363: [ R2 , R3 ] in ( C22 /\ C23 )
and
L364: [ R3 , R2 ] in ( C22 /\ C23 );
L365: [ R3 , R2 ] in C22 by L364 , XBOOLE_0:def 4;
L366: [ R2 , R3 ] in C22 by L363 , XBOOLE_0:def 4;
L367: (R2 in ( field C22 ) & R3 in ( field C22 )) by L366 , RELAT_1:15;
thus L368: R2 = R3 by L367 , L361 , L366 , L365 , L4;
end;
cluster ( C23 /\ C22 ) ->  antisymmetric;
coherence;
cluster ( C22 \ C23 ) ->  antisymmetric;
coherence
proof
L369: C22 is_antisymmetric_in ( field C22 ) by L13;
let R2 being set;
let R3 being set;
assume that
L370: (R2 in ( field ( C22 \ C23 ) ) & R3 in ( field ( C22 \ C23 ) ))
and
L371: [ R2 , R3 ] in ( C22 \ C23 )
and
L372: [ R3 , R2 ] in ( C22 \ C23 );
L373: [ R3 , R2 ] in C22 by L372 , XBOOLE_0:def 5;
L374: [ R2 , R3 ] in C22 by L371 , XBOOLE_0:def 5;
L375: (R2 in ( field C22 ) & R3 in ( field C22 )) by L374 , RELAT_1:15;
thus L376: thesis by L375 , L369 , L374 , L373 , L4;
end;
end;
registration
let C24 being  transitive Relation;
cluster ( C24 ~ ) ->  transitive;
coherence
proof
L378: C24 is_transitive_in ( field C24 ) by L17;
let R5 being set;
let R6 being set;
let R7 being set;
assume that
L379: (R5 in ( field ( C24 ~ ) ) & R6 in ( field ( C24 ~ ) ))
and
L380: R7 in ( field ( C24 ~ ) )
and
L381: [ R5 , R6 ] in ( C24 ~ )
and
L382: [ R6 , R7 ] in ( C24 ~ );
L383: (R5 in ( field C24 ) & R6 in ( field C24 )) by L379 , RELAT_1:21;
L384: [ R6 , R5 ] in C24 by L381 , RELAT_1:def 7;
L385: (R7 in ( field C24 ) & [ R7 , R6 ] in C24) by L380 , L382 , RELAT_1:21 , RELAT_1:def 7;
L386: [ R7 , R5 ] in C24 by L385 , L378 , L383 , L384 , L8;
thus L387: thesis by L386 , RELAT_1:def 7;
end;
end;
registration
let C25 , C26 being  transitive Relation;
cluster ( C25 /\ C26 ) ->  transitive;
coherence
proof
L389: C26 is_transitive_in ( field C26 ) by L17;
L390: C25 is_transitive_in ( field C25 ) by L17;
let R2 being set;
let R3 being set;
let R4 being set;
assume that
L391: (R2 in ( field ( C25 /\ C26 ) ) & R3 in ( field ( C25 /\ C26 ) ) & R4 in ( field ( C25 /\ C26 ) ))
and
L392: [ R2 , R3 ] in ( C25 /\ C26 )
and
L393: [ R3 , R4 ] in ( C25 /\ C26 );
L394: [ R3 , R4 ] in C26 by L393 , XBOOLE_0:def 4;
L395: R4 in ( field C26 ) by L394 , RELAT_1:15;
L396: [ R2 , R3 ] in C26 by L392 , XBOOLE_0:def 4;
L397: (R2 in ( field C26 ) & R3 in ( field C26 )) by L396 , RELAT_1:15;
L398: [ R2 , R4 ] in C26 by L397 , L389 , L396 , L394 , L395 , L8;
L399: [ R3 , R4 ] in C25 by L393 , XBOOLE_0:def 4;
L400: R4 in ( field C25 ) by L399 , RELAT_1:15;
L401: [ R2 , R3 ] in C25 by L392 , XBOOLE_0:def 4;
L402: (R2 in ( field C25 ) & R3 in ( field C25 )) by L401 , RELAT_1:15;
L403: [ R2 , R4 ] in C25 by L402 , L390 , L401 , L399 , L400 , L8;
thus L404: thesis by L403 , L398 , XBOOLE_0:def 4;
end;
end;
canceled 4;
theorem
L406: (for R9 being Relation holds (R9 is  transitive iff ( R9 * R9 ) c= R9))
proof
let R9 being Relation;
thus L407:now
assume L408: R9 is  transitive;
L409: R9 is_transitive_in ( field R9 ) by L408 , L17;
L410:
now
let R2 being set;
let R3 being set;
assume L411: [ R2 , R3 ] in ( R9 * R9 );
consider R4 being set such that L412: [ R2 , R4 ] in R9 and L413: [ R4 , R3 ] in R9 by L411 , RELAT_1:def 8;
L414: R4 in ( field R9 ) by L412 , RELAT_1:15;
L415: (R2 in ( field R9 ) & R3 in ( field R9 )) by L412 , L413 , RELAT_1:15;
thus L416: [ R2 , R3 ] in R9 by L415 , L409 , L412 , L413 , L414 , L8;
end;
thus L417: ( R9 * R9 ) c= R9 by L410 , RELAT_1:def 3;
end;
assume L418: ( R9 * R9 ) c= R9;
let R2 being set;
let R3 being set;
let R4 being set;
assume L419: (R2 in ( field R9 ) & R3 in ( field R9 ) & R4 in ( field R9 ));
assume L420: ([ R2 , R3 ] in R9 & [ R3 , R4 ] in R9);
L421: [ R2 , R4 ] in ( R9 * R9 ) by L420 , RELAT_1:def 8;
thus L422: thesis by L421 , L418;
end;
theorem
L423: (for R9 being Relation holds (R9 is  connected iff ( [: ( field R9 ) , ( field R9 ) :] \ ( id ( field R9 ) ) ) c= ( R9 \/ ( R9 ~ ) )))
proof
let R9 being Relation;
thus L424:now
assume L425: R9 is  connected;
L426: R9 is_connected_in ( field R9 ) by L425 , L15;
L427:
now
let R5 being set;
L428:
now
assume L429: R5 in ( [: ( field R9 ) , ( field R9 ) :] \ ( id ( field R9 ) ) );
L430: R5 in [: ( field R9 ) , ( field R9 ) :] by L429 , XBOOLE_0:def 5;
consider R6 being set, R7 being set such that L431: R6 in ( field R9 ) and L432: R7 in ( field R9 ) and L433: R5 = [ R6 , R7 ] by L430 , ZFMISC_1:def 2;
L434: (not R5 in ( id ( field R9 ) )) by L429 , XBOOLE_0:def 5;
L435: R6 <> R7 by L434 , L431 , L433 , RELAT_1:def 10;
L436: ([ R6 , R7 ] in R9 or [ R7 , R6 ] in R9) by L435 , L426 , L431 , L432 , L6;
L437: ([ R6 , R7 ] in R9 or [ R6 , R7 ] in ( R9 ~ )) by L436 , RELAT_1:def 7;
thus L438: R5 in ( R9 \/ ( R9 ~ ) ) by L437 , L433 , XBOOLE_0:def 3;
end;
thus L439: (R5 in ( [: ( field R9 ) , ( field R9 ) :] \ ( id ( field R9 ) ) ) implies R5 in ( R9 \/ ( R9 ~ ) )) by L428;
end;
thus L440: ( [: ( field R9 ) , ( field R9 ) :] \ ( id ( field R9 ) ) ) c= ( R9 \/ ( R9 ~ ) ) by L427 , TARSKI:def 3;
end;
assume L441: ( [: ( field R9 ) , ( field R9 ) :] \ ( id ( field R9 ) ) ) c= ( R9 \/ ( R9 ~ ) );
let R2 being set;
let R3 being set;
L442: ([ R2 , R3 ] in ( [: ( field R9 ) , ( field R9 ) :] \ ( id ( field R9 ) ) ) implies [ R2 , R3 ] in ( R9 \/ ( R9 ~ ) )) by L441;
L443: (([ R2 , R3 ] in [: ( field R9 ) , ( field R9 ) :] & (not [ R2 , R3 ] in ( id ( field R9 ) ))) implies [ R2 , R3 ] in ( R9 \/ ( R9 ~ ) )) by L442 , XBOOLE_0:def 5;
L444: ((R2 in ( field R9 ) & R3 in ( field R9 ) & R2 <> R3) implies ([ R2 , R3 ] in R9 or [ R2 , R3 ] in ( R9 ~ ))) by L443 , RELAT_1:def 10 , XBOOLE_0:def 3 , ZFMISC_1:87;
thus L445: thesis by L444 , RELAT_1:def 7;
end;
registration
cluster  strongly_connected ->  connected  reflexive for Relation;
coherence
proof
let C27 being Relation;
assume L446: C27 is_strongly_connected_in ( field C27 );
L447: (for R5 being set holds (for R6 being set holds ((R5 in ( field C27 ) & R6 in ( field C27 ) & R5 <> R6) implies ([ R5 , R6 ] in C27 or [ R6 , R5 ] in C27)))) by L446 , L7;
thus L448: C27 is  connected by L447 , L6 , L15;
let R5 being set;
thus L449: thesis by L446 , L7;
end;
end;
canceled 1;
theorem
L451: (for R9 being Relation holds (R9 is  strongly_connected iff [: ( field R9 ) , ( field R9 ) :] = ( R9 \/ ( R9 ~ ) )))
proof
let R9 being Relation;
thus L452:now
assume L453: R9 is  strongly_connected;
L454:
now
let R5 being set;
L455:
now
assume L456: R5 in ( R9 \/ ( R9 ~ ) );
consider R6 being set, R7 being set such that L457: R5 = [ R6 , R7 ] by L456 , RELAT_1:def 1;
L458: ([ R6 , R7 ] in R9 or [ R6 , R7 ] in ( R9 ~ )) by L456 , L457 , XBOOLE_0:def 3;
L459: ([ R6 , R7 ] in R9 or [ R7 , R6 ] in R9) by L458 , RELAT_1:def 7;
L460: (R6 in ( field R9 ) & R7 in ( field R9 )) by L459 , RELAT_1:15;
thus L461: R5 in [: ( field R9 ) , ( field R9 ) :] by L460 , L457 , ZFMISC_1:87;
end;
L462:
now
assume L463: R5 in [: ( field R9 ) , ( field R9 ) :];
consider R6 being set, R7 being set such that L464: (R6 in ( field R9 ) & R7 in ( field R9 )) and L465: R5 = [ R6 , R7 ] by L463 , ZFMISC_1:def 2;
L466: ([ R6 , R7 ] in R9 or [ R7 , R6 ] in R9) by L453 , L464 , L7 , L16;
L467: ([ R6 , R7 ] in R9 or [ R6 , R7 ] in ( R9 ~ )) by L466 , RELAT_1:def 7;
thus L468: R5 in ( R9 \/ ( R9 ~ ) ) by L467 , L465 , XBOOLE_0:def 3;
end;
thus L469: (R5 in [: ( field R9 ) , ( field R9 ) :] iff R5 in ( R9 \/ ( R9 ~ ) )) by L462 , L455;
end;
thus L470: [: ( field R9 ) , ( field R9 ) :] = ( R9 \/ ( R9 ~ ) ) by L454 , TARSKI:1;
end;
assume L471: [: ( field R9 ) , ( field R9 ) :] = ( R9 \/ ( R9 ~ ) );
let R2 being set;
let R3 being set;
L472: ((R2 in ( field R9 ) & R3 in ( field R9 )) implies [ R2 , R3 ] in ( R9 \/ ( R9 ~ ) )) by L471 , ZFMISC_1:87;
L473: ((R2 in ( field R9 ) & R3 in ( field R9 )) implies ([ R2 , R3 ] in R9 or [ R2 , R3 ] in ( R9 ~ ))) by L472 , XBOOLE_0:def 3;
thus L474: thesis by L473 , RELAT_1:def 7;
end;
theorem
L475: (for R9 being Relation holds (R9 is  transitive iff (for R5 being set holds (for R6 being set holds (for R7 being set holds (([ R5 , R6 ] in R9 & [ R6 , R7 ] in R9) implies [ R5 , R7 ] in R9))))))
proof
let R9 being Relation;
thus L476:now
assume L477: R9 is  transitive;
let R5 being set;
let R6 being set;
let R7 being set;
assume that
L478: [ R5 , R6 ] in R9
and
L479: [ R6 , R7 ] in R9;
L480: R7 in ( field R9 ) by L479 , RELAT_1:15;
L481: (R5 in ( field R9 ) & R6 in ( field R9 )) by L478 , RELAT_1:15;
thus L482: [ R5 , R7 ] in R9 by L481 , L477 , L478 , L479 , L480 , L8 , L17;
end;
assume L483: (for R5 being set holds (for R6 being set holds (for R7 being set holds (([ R5 , R6 ] in R9 & [ R6 , R7 ] in R9) implies [ R5 , R7 ] in R9))));
L484: (for R5 being set holds (for R6 being set holds (for R7 being set holds ((R5 in ( field R9 ) & R6 in ( field R9 ) & R7 in ( field R9 ) & [ R5 , R6 ] in R9 & [ R6 , R7 ] in R9) implies [ R5 , R7 ] in R9)))) by L483;
thus L485: R9 is_transitive_in ( field R9 ) by L484 , L8;
end;
