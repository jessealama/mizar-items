environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,ARYTM_1,XXREAL_0,NAT_1,CARD_1,ARYTM_3,ABIAN,SUBSET_1,RELAT_1,INT_1,FINSEQ_1,FUNCT_1,FINSEQ_4,XBOOLE_0,FINSET_1,GRAPH_2,ORDINAL4,GLIB_000,GLIB_001,TARSKI,ZFMISC_1,RCOMP_1,GRAPH_1,RELAT_2,REWRITE1,FUNCOP_1,GLIB_002,PARTFUN1,MEMBERED,TOPGEN_1,CHORD;
notations TARSKI,XBOOLE_0,SUBSET_1,XXREAL_2,ORDINAL1,INT_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,CARD_1,FINSET_1,NAT_1,ZFMISC_1,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,ABIAN,ENUMSET1,FINSEQ_4,NUMBERS,GRAPH_2,MEMBERED,CKB18;
definitions TARSKI,XBOOLE_0,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,CKB18;
theorems FINSEQ_1,FUNCT_1,GLIB_000,GLIB_001,GLIB_002,GRAPH_2,GRAPH_3,TREES_1,INT_1,JORDAN12,NAT_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,FUNCOP_1,FUNCT_2,FINSEQ_3,FINSEQ_4,ZFMISC_1,ABIAN,CARD_2,ENUMSET1,FINSEQ_2,XREAL_1,MEMBERED,FINSEQ_5,XXREAL_0,NAT_D,PARTFUN1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32;
schemes NAT_1,GRAPH_5,FUNCT_2,FRAENKEL;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GLIB_001,GLIB_002,FUNCT_2,XXREAL_2,CARD_1,RELSET_1;
constructors DOMAIN_1,REAL_1,NAT_D,FINSEQ_4,GRAPH_2,GLIB_001,GLIB_002,VALUED_1,XXREAL_2,RELSET_1,CKB18;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th30: (for G being _Graph holds (for A,B being non empty (Subset of ( the_Vertices_of G )) holds (B c= A implies (for H1 being (inducedSubgraph of G,A) holds (for H2 being (inducedSubgraph of G,B) holds H2 is (inducedSubgraph of H1,B))))))
proof
let G being _Graph;
let A being non empty (Subset of ( the_Vertices_of G )),B being non empty (Subset of ( the_Vertices_of G ));
assume that
A1: B c= A;
let H1 being (inducedSubgraph of G,A);
let H2 being (inducedSubgraph of G,B);
A2: ( the_Edges_of H2 ) = ( G .edgesBetween B ) by GLIB_000:def 37;
( the_Edges_of H1 ) = ( G .edgesBetween A ) by GLIB_000:def 37;
then A3: ( the_Edges_of H2 ) c= ( the_Edges_of H1 ) by A1,A2,GLIB_000:36;
A4:now
let e being set;
assume that
A5: e in ( the_Edges_of H2 );
A6: ( ( the_Target_of G ) . e ) = ( ( the_Target_of H1 ) . e ) by A3,A5,GLIB_000:def 32;
A7: ( ( the_Target_of G ) . e ) in B by A2,A5,GLIB_000:31;
A8: ( ( the_Source_of G ) . e ) in B by A2,A5,GLIB_000:31;
( ( the_Source_of G ) . e ) = ( ( the_Source_of H1 ) . e ) by A3,A5,GLIB_000:def 32;
hence e in ( H1 .edgesBetween B ) by A3,A5,A6,A8,A7,GLIB_000:31;
end;
( H1 .edgesBetween B ) c= ( the_Edges_of H2 ) by A2,GLIB_000:76;
then (for x being set holds (x in ( the_Edges_of H2 ) iff x in ( H1 .edgesBetween B ))) by A4;
then A9: ( the_Edges_of H2 ) = ( H1 .edgesBetween B ) by TARSKI:1;
A10: ( the_Vertices_of H1 ) = A by GLIB_000:def 37;
A11: ( the_Vertices_of H2 ) = B by GLIB_000:def 37;
now
let e being set;
assume that
A12: e in ( the_Edges_of H2 );
thus ( ( the_Source_of H2 ) . e ) = ( ( the_Source_of G ) . e ) by A12,GLIB_000:def 32
.= ( ( the_Source_of H1 ) . e ) by A3,A12,GLIB_000:def 32;
thus ( ( the_Target_of H2 ) . e ) = ( ( the_Target_of G ) . e ) by A12,GLIB_000:def 32
.= ( ( the_Target_of H1 ) . e ) by A3,A12,GLIB_000:def 32;
end;
then H2 is (Subgraph of H1) by A1,A10,A11,A3,GLIB_000:def 32;
hence thesis by A1,A10,A11,A9,GLIB_000:def 37;
end;
