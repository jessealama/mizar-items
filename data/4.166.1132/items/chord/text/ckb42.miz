environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,ARYTM_1,XXREAL_0,NAT_1,CARD_1,ARYTM_3,ABIAN,SUBSET_1,RELAT_1,INT_1,FINSEQ_1,FUNCT_1,FINSEQ_4,XBOOLE_0,FINSET_1,GRAPH_2,ORDINAL4,GLIB_000,GLIB_001,TARSKI,ZFMISC_1,RCOMP_1,GRAPH_1,RELAT_2,REWRITE1,FUNCOP_1,GLIB_002,PARTFUN1,MEMBERED,TOPGEN_1,CHORD;
notations TARSKI,XBOOLE_0,SUBSET_1,XXREAL_2,ORDINAL1,INT_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,CARD_1,FINSET_1,NAT_1,ZFMISC_1,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,ABIAN,ENUMSET1,FINSEQ_4,NUMBERS,GRAPH_2,MEMBERED,CKB18,CKB38;
definitions TARSKI,XBOOLE_0,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,CKB18,CKB38;
theorems FINSEQ_1,FUNCT_1,GLIB_000,GLIB_001,GLIB_002,GRAPH_2,GRAPH_3,TREES_1,INT_1,JORDAN12,NAT_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,FUNCOP_1,FUNCT_2,FINSEQ_3,FINSEQ_4,ZFMISC_1,ABIAN,CARD_2,ENUMSET1,FINSEQ_2,XREAL_1,MEMBERED,FINSEQ_5,XXREAL_0,NAT_D,PARTFUN1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41;
schemes NAT_1,GRAPH_5,FUNCT_2,FRAENKEL,CKB35;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GLIB_001,GLIB_002,FUNCT_2,XXREAL_2,CARD_1,RELSET_1;
constructors DOMAIN_1,REAL_1,NAT_D,FINSEQ_4,GRAPH_2,GLIB_001,GLIB_002,VALUED_1,XXREAL_2,RELSET_1,CKB18,CKB38;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
(for G being _Graph holds (for W being (Walk of G) holds (W is  minlength implies W is  Path-like)))
proof
let G being _Graph;
let W being (Walk of G);
assume that
A1: W is  minlength;
assume (not W is  Path-like);
then consider m being  odd (Element of ( NAT )),n being  odd (Element of ( NAT )) such that A2: m <= ( len W ) and A3: n <= ( len W ) and A4: ( W . m ) = ( W . n ) and A5: m <> n by GLIB_001:146;
per cases  by A5,XXREAL_0:1;
suppose A6: m < n;

set R = ( W .cut (1,m) );
set S = ( W .cut (n,( len W )) );
set P = ( R .append S );
A7: ( ( ( len S ) + n ) - n ) = ( ( ( len W ) + 1 ) - n ) by A3,GLIB_001:36;
A8: ( ( 2 * ( 0 ) ) + 1 ) <= m by ABIAN:12;
then A9: ( ( ( len R ) + 1 ) - 1 ) = ( ( m + 1 ) - 1 ) by A2,GLIB_001:36;
A10: ( S .first() ) = ( W . m ) by A3,A4,GLIB_001:37;
A11: ( R .last() ) = ( W . m ) by A2,A8,GLIB_001:37;
then ( ( len P ) + 1 ) = ( ( len R ) + ( len S ) ) by A10,GLIB_001:28;
then ( len P ) = ( ( ( len W ) - n ) + m ) by A9,A7;
then A12: ( len P ) < ( ( ( len W ) - n ) + n ) by A6,XREAL_1:8;
A13: ( S .last() ) = ( W . ( len W ) ) by A3,GLIB_001:37;
( R .first() ) = ( W . ( ( 2 * ( 0 ) ) + 1 ) ) by A2,A8,GLIB_001:37;
then P is_Walk_from ( W .first() ),( W .last() ) by A11,A10,A13,GLIB_001:30;
hence contradiction by A1,A12,CKB38:def 1;
end;
suppose A14: n < m;

set R = ( W .cut (1,n) );
set S = ( W .cut (m,( len W )) );
set P = ( R .append S );
A15: ( ( ( len S ) + m ) - m ) = ( ( ( len W ) + 1 ) - m ) by A2,GLIB_001:36;
A16: ( ( 2 * ( 0 ) ) + 1 ) <= n by ABIAN:12;
then A17: ( ( ( len R ) + 1 ) - 1 ) = ( ( n + 1 ) - 1 ) by A3,GLIB_001:36;
A18: ( S .first() ) = ( W . n ) by A2,A4,GLIB_001:37;
A19: ( R .last() ) = ( W . n ) by A3,A16,GLIB_001:37;
then ( ( len P ) + 1 ) = ( ( len R ) + ( len S ) ) by A18,GLIB_001:28;
then ( len P ) = ( ( ( len W ) - m ) + n ) by A17,A15;
then A20: ( len P ) < ( ( ( len W ) - m ) + m ) by A14,XREAL_1:8;
A21: ( S .last() ) = ( W . ( len W ) ) by A2,GLIB_001:37;
( R .first() ) = ( W . ( ( 2 * ( 0 ) ) + 1 ) ) by A3,A16,GLIB_001:37;
then P is_Walk_from ( W .first() ),( W .last() ) by A19,A18,A21,GLIB_001:30;
hence contradiction by A1,A20,CKB38:def 1;
end;
end;
