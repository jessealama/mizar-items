environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,ARYTM_1,XXREAL_0,NAT_1,CARD_1,ARYTM_3,ABIAN,SUBSET_1,RELAT_1,INT_1,FINSEQ_1,FUNCT_1,FINSEQ_4,XBOOLE_0,FINSET_1,GRAPH_2,ORDINAL4,GLIB_000,GLIB_001,TARSKI,ZFMISC_1,RCOMP_1,GRAPH_1,RELAT_2,REWRITE1,FUNCOP_1,GLIB_002,PARTFUN1,MEMBERED,TOPGEN_1,CHORD;
notations TARSKI,XBOOLE_0,SUBSET_1,XXREAL_2,ORDINAL1,INT_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,CARD_1,FINSET_1,NAT_1,ZFMISC_1,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,ABIAN,ENUMSET1,FINSEQ_4,NUMBERS,GRAPH_2,MEMBERED,CKB18;
definitions TARSKI,XBOOLE_0,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,CKB18;
theorems FINSEQ_1,FUNCT_1,GLIB_000,GLIB_001,GLIB_002,GRAPH_2,GRAPH_3,TREES_1,INT_1,JORDAN12,NAT_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,FUNCOP_1,FUNCT_2,FINSEQ_3,FINSEQ_4,ZFMISC_1,ABIAN,CARD_2,ENUMSET1,FINSEQ_2,XREAL_1,MEMBERED,FINSEQ_5,XXREAL_0,NAT_D,PARTFUN1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23;
schemes NAT_1,GRAPH_5,FUNCT_2,FRAENKEL;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GLIB_001,GLIB_002,FUNCT_2,XXREAL_2,CARD_1,RELSET_1;
constructors DOMAIN_1,REAL_1,NAT_D,FINSEQ_4,GRAPH_2,GLIB_001,GLIB_002,VALUED_1,XXREAL_2,RELSET_1,CKB18;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th21: (for G being _Graph holds (for S being (Subset of ( the_Vertices_of G )) holds (for H being (removeVertices of G,S) holds (for W being (Walk of G) holds ((for n being  odd  natural number holds (n <= ( len W ) implies (not ( W . n ) in S))) implies W is (Walk of H))))))
proof
let G being _Graph;
let S being (Subset of ( the_Vertices_of G ));
let H being (removeVertices of G,S);
let W being (Walk of G);
assume that
A1: (for n being  odd Nat holds (n <= ( len W ) implies (not ( W . n ) in S)));
A2:now
assume ( ( the_Vertices_of G ) \ S ) = ( {} );
then A3: ( the_Vertices_of G ) c= S by XBOOLE_1:37;
( W .last() ) in ( the_Vertices_of G );
hence contradiction by A1,A3;
end;
then A4: ( the_Edges_of H ) = ( G .edgesBetween ( ( the_Vertices_of G ) \ S ) ) by GLIB_000:def 37;
A5: ( W .edges() ) c= ( G .edgesBetween ( W .vertices() ) ) by GLIB_001:109;
A6: ( the_Vertices_of H ) = ( ( the_Vertices_of G ) \ S ) by A2,GLIB_000:def 37;
now
let x being set;
assume that
A7: x in ( W .vertices() );
(ex n being  odd (Element of ( NAT )) st (n <= ( len W ) & ( W . n ) = x)) by A7,GLIB_001:87;
then (not x in S) by A1;
hence x in ( the_Vertices_of H ) by A6,A7,XBOOLE_0:def 5;
end;
then A8: ( W .vertices() ) c= ( the_Vertices_of H ) by TARSKI:def 3;
then ( G .edgesBetween ( W .vertices() ) ) c= ( G .edgesBetween ( the_Vertices_of H ) ) by GLIB_000:36;
then ( W .edges() ) c= ( G .edgesBetween ( the_Vertices_of H ) ) by A5,XBOOLE_1:1;
hence thesis by A6,A4,A8,GLIB_001:170;
end;
