environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,ARYTM_1,XXREAL_0,NAT_1,CARD_1,ARYTM_3,ABIAN,SUBSET_1,RELAT_1,INT_1,FINSEQ_1,FUNCT_1,FINSEQ_4,XBOOLE_0,FINSET_1,GRAPH_2,ORDINAL4,GLIB_000,GLIB_001,TARSKI,ZFMISC_1,RCOMP_1,GRAPH_1,RELAT_2,REWRITE1,FUNCOP_1,GLIB_002,PARTFUN1,MEMBERED,TOPGEN_1,CHORD;
notations TARSKI,XBOOLE_0,SUBSET_1,XXREAL_2,ORDINAL1,INT_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,CARD_1,FINSET_1,NAT_1,ZFMISC_1,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,ABIAN,ENUMSET1,FINSEQ_4,NUMBERS,GRAPH_2,MEMBERED,CKB18,CKB38,CKB49,CKB55,CKB66;
definitions TARSKI,XBOOLE_0,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,CKB18,CKB38,CKB49,CKB55,CKB66;
theorems FINSEQ_1,FUNCT_1,GLIB_000,GLIB_001,GLIB_002,GRAPH_2,GRAPH_3,TREES_1,INT_1,JORDAN12,NAT_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,FUNCOP_1,FUNCT_2,FINSEQ_3,FINSEQ_4,ZFMISC_1,ABIAN,CARD_2,ENUMSET1,FINSEQ_2,XREAL_1,MEMBERED,FINSEQ_5,XXREAL_0,NAT_D,PARTFUN1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67;
schemes NAT_1,GRAPH_5,FUNCT_2,FRAENKEL,CKB35;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GLIB_001,GLIB_002,FUNCT_2,XXREAL_2,CARD_1,RELSET_1;
constructors DOMAIN_1,REAL_1,NAT_D,FINSEQ_4,GRAPH_2,GLIB_001,GLIB_002,VALUED_1,XXREAL_2,RELSET_1,CKB18,CKB38,CKB49,CKB55,CKB66;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th60: (for G being _Graph holds (for S being non empty (Subset of ( the_Vertices_of G )) holds (for H being (inducedSubgraph of G,S) holds (for u being (Vertex of G) holds (((u in S & ( G .AdjacentSet { u } ) c= S) & ( G .AdjacentSet { u } ) <> ( {} )) implies (for v being (Vertex of H) holds (u = v implies (for Ga being (AdjGraph of G,{ u }) holds (for Ha being (AdjGraph of H,{ v }) holds Ga == Ha)))))))))
proof
let G being _Graph;
let S being non empty (Subset of ( the_Vertices_of G ));
let H being (inducedSubgraph of G,S);
let u being (Vertex of G);
assume that
A1: u in S
and
A2: ( G .AdjacentSet { u } ) c= S
and
A3: ( G .AdjacentSet { u } ) <> ( {} );
let v being (Vertex of H);
assume u = v;
then A4: ( G .AdjacentSet { u } ) = ( H .AdjacentSet { v } ) by A1,A2,CKB65:1;
let Ga being (AdjGraph of G,{ u });
let Ha being (AdjGraph of H,{ v });
A5: Ha is (inducedSubgraph of H,( H .AdjacentSet { v } )) by CKB66:def 1;
A6: Ga is (inducedSubgraph of G,( G .AdjacentSet { u } )) by CKB66:def 1;
then A7: ( the_Edges_of Ga ) = ( G .edgesBetween ( G .AdjacentSet { u } ) ) by A3,GLIB_000:def 37;
( the_Vertices_of Ga ) = ( G .AdjacentSet { u } ) by A3,A6,GLIB_000:def 37;
hence ( the_Vertices_of Ga ) = ( the_Vertices_of Ha ) by A4,A5,GLIB_000:def 37;
( the_Edges_of Ha ) = ( H .edgesBetween ( H .AdjacentSet { v } ) ) by A3,A4,A5,GLIB_000:def 37;
hence A8: ( the_Edges_of Ga ) = ( the_Edges_of Ha ) by A2,A3,A4,A7,CKB34:1;
A9: ( the_Target_of Ga ) = ( ( the_Target_of G ) | ( the_Edges_of Ga ) ) by GLIB_000:45;
Ha is (inducedSubgraph of H,( G .AdjacentSet { u } )) by A4,CKB66:def 1;
then A10: Ha is (inducedSubgraph of G,( G .AdjacentSet { u } )) by A2,A3,CKB32:1;
( the_Source_of Ga ) = ( ( the_Source_of G ) | ( the_Edges_of Ga ) ) by GLIB_000:45;
hence (( the_Source_of Ha ) = ( the_Source_of Ga ) & ( the_Target_of Ha ) = ( the_Target_of Ga )) by A8,A9,A10,GLIB_000:45;
end;
