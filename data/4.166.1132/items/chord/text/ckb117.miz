environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,ARYTM_1,XXREAL_0,NAT_1,CARD_1,ARYTM_3,ABIAN,SUBSET_1,RELAT_1,INT_1,FINSEQ_1,FUNCT_1,FINSEQ_4,XBOOLE_0,FINSET_1,GRAPH_2,ORDINAL4,GLIB_000,GLIB_001,TARSKI,ZFMISC_1,RCOMP_1,GRAPH_1,RELAT_2,REWRITE1,FUNCOP_1,GLIB_002,PARTFUN1,MEMBERED,TOPGEN_1,CHORD;
notations TARSKI,XBOOLE_0,SUBSET_1,XXREAL_2,ORDINAL1,INT_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,CARD_1,FINSET_1,NAT_1,ZFMISC_1,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,ABIAN,ENUMSET1,FINSEQ_4,NUMBERS,GRAPH_2,MEMBERED,CKB18,CKB38,CKB49,CKB55,CKB66,CKB69,CKB76,CKB83,CKB92,CKB99,CKB100,CKB113;
definitions TARSKI,XBOOLE_0,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,CKB18,CKB38,CKB49,CKB55,CKB66,CKB69,CKB76,CKB83,CKB92,CKB99,CKB113;
theorems FINSEQ_1,FUNCT_1,GLIB_000,GLIB_001,GLIB_002,GRAPH_2,GRAPH_3,TREES_1,INT_1,JORDAN12,NAT_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,FUNCOP_1,FUNCT_2,FINSEQ_3,FINSEQ_4,ZFMISC_1,ABIAN,CARD_2,ENUMSET1,FINSEQ_2,XREAL_1,MEMBERED,FINSEQ_5,XXREAL_0,NAT_D,PARTFUN1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106,CKB107,CKB108,CKB109,CKB110,CKB111,CKB112,CKB113,CKB114,CKB115;
schemes NAT_1,GRAPH_5,FUNCT_2,FRAENKEL,CKB35;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GLIB_001,GLIB_002,FUNCT_2,XXREAL_2,CARD_1,RELSET_1,CKB71,CKB72,CKB73,CKB116;
constructors DOMAIN_1,REAL_1,NAT_D,FINSEQ_4,GRAPH_2,GLIB_001,GLIB_002,VALUED_1,XXREAL_2,RELSET_1,CKB18,CKB38,CKB49,CKB55,CKB66,CKB69,CKB76,CKB83,CKB92,CKB99,CKB113;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
registration
cluster non trivial  finite  simple  chordal for _Graph;
existence
proof
set V = { ( 0 ),1 };
set E = { ( 0 ) };
set S = ( ( 0 ) .--> ( 0 ) );
set T = ( ( 0 ) .--> 1 );
A7: ( dom T ) = E by FUNCOP_1:13;
A8:now
let x being set;
assume x in E;
then x = ( 0 ) by TARSKI:def 1;
then ( T . x ) = 1 by FUNCOP_1:72;
hence ( T . x ) in V by TARSKI:def 2;
end;
A9:now
let x being set;
assume x in E;
then x = ( 0 ) by TARSKI:def 1;
then ( S . x ) = ( 0 ) by FUNCOP_1:72;
hence ( S . x ) in V by TARSKI:def 2;
end;
reconsider T as (Function of E,V) by A7,A8,FUNCT_2:3;
( dom S ) = E by FUNCOP_1:13;
then reconsider S as (Function of E,V) by A9,FUNCT_2:3;
set G = ( createGraph (V,E,S,T) );
take G;
( the_Source_of G ) = S by GLIB_000:6;
then A10: ( ( the_Source_of G ) . ( 0 ) ) = ( 0 ) by FUNCOP_1:72;
A11: ( the_Vertices_of G ) = V by GLIB_000:6;
now
assume ( card ( the_Vertices_of G ) ) = 1;
then (ex x being set st ( the_Vertices_of G ) = { x }) by CARD_2:42;
hence contradiction by A11,ZFMISC_1:5;
end;
hence (G is non trivial & G is  finite) by GLIB_000:def 19;
( the_Target_of G ) = T by GLIB_000:6;
then A12: ( ( the_Target_of G ) . ( 0 ) ) = 1 by FUNCOP_1:72;
A13: ( the_Edges_of G ) = E by GLIB_000:6;
then ( 0 ) in ( the_Edges_of G ) by TARSKI:def 1;
then A14: ( 0 ) Joins ( 0 ),1,G by A10,A12,GLIB_000:def 13;
now
let v being set;
let e being set;
assume that
A15: e Joins v,v,G;
reconsider v as (Vertex of G) by A15,GLIB_000:13;
e in ( the_Edges_of G ) by A15,GLIB_000:def 13;
then e Joins ( 0 ),1,G by A13,A14,TARSKI:def 1;
then ((( 0 ) = v & 1 = v) or (( 0 ) = v & 1 = v)) by A15,GLIB_000:15;
hence contradiction;
end;
then A16: G is  loopless by GLIB_000:18;
now
let e1 being set,e2 being set,v1 being set,v2 being set;
assume that
A17: e1 Joins v1,v2,G
and
A18: e2 Joins v1,v2,G;
e1 in { ( 0 ) } by A13,A17,GLIB_000:def 13;
then A19: e1 = ( 0 ) by TARSKI:def 1;
assume A20: e1 <> e2;
e2 in { ( 0 ) } by A13,A18,GLIB_000:def 13;
hence contradiction by A20,A19,TARSKI:def 1;
end;
then G is  non-multi by GLIB_000:def 20;
hence G is  simple by A16;
( card ( the_Vertices_of G ) ) = 2 by A11,CARD_2:57;
hence thesis by CKB115:1;
end;
end;
