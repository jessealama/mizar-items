environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,ARYTM_1,XXREAL_0,NAT_1,CARD_1,ARYTM_3,ABIAN,SUBSET_1,RELAT_1,INT_1,FINSEQ_1,FUNCT_1,FINSEQ_4,XBOOLE_0,FINSET_1,GRAPH_2,ORDINAL4,GLIB_000,GLIB_001,TARSKI,ZFMISC_1,RCOMP_1,GRAPH_1,RELAT_2,REWRITE1,FUNCOP_1,GLIB_002,PARTFUN1,MEMBERED,TOPGEN_1,CHORD;
notations TARSKI,XBOOLE_0,SUBSET_1,XXREAL_2,ORDINAL1,INT_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,CARD_1,FINSET_1,NAT_1,ZFMISC_1,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,ABIAN,ENUMSET1,FINSEQ_4,NUMBERS,GRAPH_2,MEMBERED,CKB18,CKB38;
definitions TARSKI,XBOOLE_0,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,CKB18,CKB38;
theorems FINSEQ_1,FUNCT_1,GLIB_000,GLIB_001,GLIB_002,GRAPH_2,GRAPH_3,TREES_1,INT_1,JORDAN12,NAT_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,FUNCOP_1,FUNCT_2,FINSEQ_3,FINSEQ_4,ZFMISC_1,ABIAN,CARD_2,ENUMSET1,FINSEQ_2,XREAL_1,MEMBERED,FINSEQ_5,XXREAL_0,NAT_D,PARTFUN1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43;
schemes NAT_1,GRAPH_5,FUNCT_2,FRAENKEL,CKB35;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GLIB_001,GLIB_002,FUNCT_2,XXREAL_2,CARD_1,RELSET_1;
constructors DOMAIN_1,REAL_1,NAT_D,FINSEQ_4,GRAPH_2,GLIB_001,GLIB_002,VALUED_1,XXREAL_2,RELSET_1,CKB18,CKB38;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th39: (for G being _Graph holds (for W being (Walk of G) holds (ex P being (Path of G) st (P is_Walk_from ( W .first() ),( W .last() ) & P is  minlength))))
proof
let G being _Graph;
let W being (Walk of G);
set X = { ( len P ) where P is (Path of G): P is_Walk_from ( W .first() ),( W .last() ) };
set T = the  Path-like (Subwalk of W);
A1: ( T .last() ) = ( W .last() ) by GLIB_001:161;
( T .first() ) = ( W .first() ) by GLIB_001:161;
then T is_Walk_from ( W .first() ),( W .last() ) by A1,GLIB_001:def 23;
then A2: ( len T ) in X;
X c= ( NAT )
proof
let x being set;
assume x in X;
then (ex P being (Path of G) st (x = ( len P ) & P is_Walk_from ( W .first() ),( W .last() )));
hence thesis;
end;
then reconsider X as non empty (Subset of ( NAT )) by A2;
( min X ) in X by XXREAL_2:def 7;
then consider P being (Path of G) such that A3: ( len P ) = ( min X ) and A4: P is_Walk_from ( W .first() ),( W .last() );
A5: ( P .first() ) = ( W .first() ) by A4,GLIB_001:def 23;
take P;
thus P is_Walk_from ( W .first() ),( W .last() ) by A4;
let W2 being (Walk of G);
assume that
A6: W2 is_Walk_from ( P .first() ),( P .last() );
A7: ( P .last() ) = ( W2 .last() ) by A6,GLIB_001:def 23;
set T = the  Path-like (Subwalk of W2);
A8: ( T .first() ) = ( W2 .first() ) by GLIB_001:161;
A9: ( T .last() ) = ( W2 .last() ) by GLIB_001:161;
A10: ( P .last() ) = ( W .last() ) by A4,GLIB_001:def 23;
( P .first() ) = ( W2 .first() ) by A6,GLIB_001:def 23;
then T is_Walk_from ( W .first() ),( W .last() ) by A7,A5,A10,A8,A9,GLIB_001:def 23;
then ( len T ) in X;
then A11: ( len P ) <= ( len T ) by A3,XXREAL_2:def 7;
( len T ) <= ( len W2 ) by GLIB_001:162;
hence thesis by A11,XXREAL_0:2;
end;
