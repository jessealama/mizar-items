environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,ARYTM_1,XXREAL_0,NAT_1,CARD_1,ARYTM_3,ABIAN,SUBSET_1,RELAT_1,INT_1,FINSEQ_1,FUNCT_1,FINSEQ_4,XBOOLE_0,FINSET_1,GRAPH_2,ORDINAL4,GLIB_000,GLIB_001,TARSKI,ZFMISC_1,RCOMP_1,GRAPH_1,RELAT_2,REWRITE1,FUNCOP_1,GLIB_002,PARTFUN1,MEMBERED,TOPGEN_1,CHORD;
notations TARSKI,XBOOLE_0,SUBSET_1,XXREAL_2,ORDINAL1,INT_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,CARD_1,FINSET_1,NAT_1,ZFMISC_1,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,ABIAN,ENUMSET1,FINSEQ_4,NUMBERS,GRAPH_2,MEMBERED,CKB18,CKB38,CKB49,CKB55,CKB66,CKB69,CKB76,CKB83,CKB92,CKB99,CKB100;
definitions TARSKI,XBOOLE_0,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,CKB18,CKB38,CKB49,CKB55,CKB66,CKB69,CKB76,CKB83,CKB92,CKB99;
theorems FINSEQ_1,FUNCT_1,GLIB_000,GLIB_001,GLIB_002,GRAPH_2,GRAPH_3,TREES_1,INT_1,JORDAN12,NAT_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,FUNCOP_1,FUNCT_2,FINSEQ_3,FINSEQ_4,ZFMISC_1,ABIAN,CARD_2,ENUMSET1,FINSEQ_2,XREAL_1,MEMBERED,FINSEQ_5,XXREAL_0,NAT_D,PARTFUN1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB101,CKB102,CKB103;
schemes NAT_1,GRAPH_5,FUNCT_2,FRAENKEL,CKB35;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GLIB_001,GLIB_002,FUNCT_2,XXREAL_2,CARD_1,RELSET_1,CKB71,CKB72,CKB73;
constructors DOMAIN_1,REAL_1,NAT_D,FINSEQ_4,GRAPH_2,GLIB_001,GLIB_002,VALUED_1,XXREAL_2,RELSET_1,CKB18,CKB38,CKB49,CKB55,CKB66,CKB69,CKB76,CKB83,CKB92,CKB99;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th87: (for G being _Graph holds (for S being non empty (Subset of ( the_Vertices_of G )) holds (for H being (inducedSubgraph of G,S) holds (for W1 being (Walk of G) holds (for W2 being (Walk of H) holds (W1 = W2 implies (W2 is  chordal iff W1 is  chordal)))))))
proof
let G being _Graph;
let S being non empty (Subset of ( the_Vertices_of G ));
let H being (inducedSubgraph of G,S);
let W1 being (Walk of G);
let W2 being (Walk of H);
assume that
A1: W1 = W2;
thus (W2 is  chordal implies W1 is  chordal)
proof
given m being  odd Nat,n being  odd Nat such that
A2: ( m + 2 ) < n
and
A3: n <= ( len W2 )
and
A4: ( W2 . m ) <> ( W2 . n )
and
A5: (ex e being set st e Joins ( W2 . m ),( W2 . n ),H)
and
A6: (for f being set holds (f in ( W2 .edges() ) implies (not f Joins ( W2 . m ),( W2 . n ),H)));

take m;
take n;
thus ((( m + 2 ) < n & n <= ( len W1 )) & ( W1 . m ) <> ( W1 . n )) by A1,A2,A3,A4;
consider e being set such that A7: e Joins ( W2 . m ),( W2 . n ),H by A5;
e Joins ( W1 . m ),( W1 . n ),G by A1,A7,GLIB_000:72;
hence (ex e being set st e Joins ( W1 . m ),( W1 . n ),G);
let f being set;
assume f in ( W1 .edges() );
then A8: f in ( W2 .edges() ) by A1,GLIB_001:110;
then (not f Joins ( W1 . m ),( W1 . n ),H) by A1,A6;
hence thesis by A8,GLIB_000:73;
end;

A9: S = ( the_Vertices_of H ) by GLIB_000:def 37;
thus (W1 is  chordal implies W2 is  chordal)
proof
given m being  odd Nat,n being  odd Nat such that
A10: ( m + 2 ) < n
and
A11: n <= ( len W1 )
and
A12: ( W1 . m ) <> ( W1 . n )
and
A13: (ex e being set st e Joins ( W1 . m ),( W1 . n ),G)
and
A14: (for f being set holds (f in ( W1 .edges() ) implies (not f Joins ( W1 . m ),( W1 . n ),G)));

take m;
take n;
thus ((( m + 2 ) < n & n <= ( len W2 )) & ( W2 . m ) <> ( W2 . n )) by A1,A10,A11,A12;
A15: m in ( NAT ) by ORDINAL1:def 12;
n in ( NAT ) by ORDINAL1:def 12;
then A16: ( W1 . n ) in ( the_Vertices_of H ) by A1,A11,GLIB_001:7;
m < n by A10,NAT_1:12;
then ( W1 . m ) in ( the_Vertices_of H ) by A1,A11,A15,GLIB_001:7,XXREAL_0:2;
hence (ex e being set st e Joins ( W2 . m ),( W2 . n ),H) by A1,A9,A13,A16,CKB22:1;
let f being set;
assume f in ( W2 .edges() );
then f in ( W1 .edges() ) by A1,GLIB_001:110;
then (not f Joins ( W2 . m ),( W2 . n ),G) by A1,A14;
hence thesis by GLIB_000:72;
end;

end;
