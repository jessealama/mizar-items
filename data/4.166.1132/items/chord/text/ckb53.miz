environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,ARYTM_1,XXREAL_0,NAT_1,CARD_1,ARYTM_3,ABIAN,SUBSET_1,RELAT_1,INT_1,FINSEQ_1,FUNCT_1,FINSEQ_4,XBOOLE_0,FINSET_1,GRAPH_2,ORDINAL4,GLIB_000,GLIB_001,TARSKI,ZFMISC_1,RCOMP_1,GRAPH_1,RELAT_2,REWRITE1,FUNCOP_1,GLIB_002,PARTFUN1,MEMBERED,TOPGEN_1,CHORD;
notations TARSKI,XBOOLE_0,SUBSET_1,XXREAL_2,ORDINAL1,INT_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,CARD_1,FINSET_1,NAT_1,ZFMISC_1,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,ABIAN,ENUMSET1,FINSEQ_4,NUMBERS,GRAPH_2,MEMBERED,CKB18,CKB38,CKB49;
definitions TARSKI,XBOOLE_0,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,CKB18,CKB38,CKB49;
theorems FINSEQ_1,FUNCT_1,GLIB_000,GLIB_001,GLIB_002,GRAPH_2,GRAPH_3,TREES_1,INT_1,JORDAN12,NAT_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,FUNCOP_1,FUNCT_2,FINSEQ_3,FINSEQ_4,ZFMISC_1,ABIAN,CARD_2,ENUMSET1,FINSEQ_2,XREAL_1,MEMBERED,FINSEQ_5,XXREAL_0,NAT_D,PARTFUN1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52;
schemes NAT_1,GRAPH_5,FUNCT_2,FRAENKEL,CKB35;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GLIB_001,GLIB_002,FUNCT_2,XXREAL_2,CARD_1,RELSET_1;
constructors DOMAIN_1,REAL_1,NAT_D,FINSEQ_4,GRAPH_2,GLIB_001,GLIB_002,VALUED_1,XXREAL_2,RELSET_1,CKB18,CKB38,CKB49;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th47: (for G being _Graph holds (for v1,v2,v3 being (Vertex of G) holds (((((v1 <> v2 & v1 <> v3) & v2 <> v3) & v1,v2 are_adjacent ) & v2,v3 are_adjacent ) implies (ex P being (Path of G) st (ex e1,e2 being set st (((((((((P is  open & ( len P ) = 5) & ( P .length() ) = 2) & e1 Joins v1,v2,G) & e2 Joins v2,v3,G) & ( P .edges() ) = { e1,e2 }) & ( P .vertices() ) = { v1,v2,v3 }) & ( P . 1 ) = v1) & ( P . 3 ) = v2) & ( P . 5 ) = v3))))))
proof
let G being _Graph;
let v1 being (Vertex of G),v2 being (Vertex of G),v3 being (Vertex of G);
assume that
A1: v1 <> v2
and
A2: v1 <> v3
and
A3: v2 <> v3
and
A4: v1,v2 are_adjacent 
and
A5: v2,v3 are_adjacent ;
consider e1 being set such that A6: e1 Joins v1,v2,G by A4,CKB49:def 1;
set P1 = ( G .walkOf (v1,e1,v2) );
A7: ( P1 .vertices() ) = { v1,v2 } by A6,GLIB_001:91;
then A8: (not v3 in ( P1 .vertices() )) by A2,A3,TARSKI:def 2;
consider e2 being set such that A9: e2 Joins v2,v3,G by A5,CKB49:def 1;
set P = ( P1 .addEdge e2 );
A10: ( P1 .last() ) = v2 by A6,GLIB_001:15;
then A11: ( P .last() ) = v3 by A9,GLIB_001:63;
A12: ( P1 .first() ) = v1 by A6,GLIB_001:15;
then A13: ( P .first() ) = v1 by A9,A10,GLIB_001:63;
P1 is  open by A1,A12,A10,GLIB_001:def 24;
then reconsider P as (Path of G) by A9,A10,A8,GLIB_001:151;
take P;
take e1;
take e2;
thus P is  open by A2,A13,A11,GLIB_001:def 24;
A14: ( len P1 ) = 3 by A6,GLIB_001:14;
then A15: ( len P ) = ( 3 + 2 ) by A9,A10,GLIB_001:64;
hence ( len P ) = 5;
5 = ( ( 2 * ( P .length() ) ) + 1 ) by A15,GLIB_001:112;
hence ( P .length() ) = 2;
thus e1 Joins v1,v2,G by A6;
thus e2 Joins v2,v3,G by A9;
( P1 .edges() ) = { e1 } by A6,GLIB_001:108;
then ( P .edges() ) = ( { e1 } \/ { e2 } ) by A9,A10,GLIB_001:111;
hence ( P .edges() ) = { e1,e2 } by ENUMSET1:1;
( P .vertices() ) = ( { v1,v2 } \/ { v3 } ) by A9,A10,A7,GLIB_001:95;
hence ( P .vertices() ) = { v1,v2,v3 } by ENUMSET1:3;
thus ( P . 1 ) = v1 by A13;
3 in ( dom P1 ) by A14,FINSEQ_3:25;
hence ( P . 3 ) = ( P1 . 3 ) by A9,A10,GLIB_001:65
.= v2 by A6,A10,GLIB_001:14;
thus thesis by A11,A15;
end;
