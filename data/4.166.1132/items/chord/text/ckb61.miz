environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,ARYTM_1,XXREAL_0,NAT_1,CARD_1,ARYTM_3,ABIAN,SUBSET_1,RELAT_1,INT_1,FINSEQ_1,FUNCT_1,FINSEQ_4,XBOOLE_0,FINSET_1,GRAPH_2,ORDINAL4,GLIB_000,GLIB_001,TARSKI,ZFMISC_1,RCOMP_1,GRAPH_1,RELAT_2,REWRITE1,FUNCOP_1,GLIB_002,PARTFUN1,MEMBERED,TOPGEN_1,CHORD;
notations TARSKI,XBOOLE_0,SUBSET_1,XXREAL_2,ORDINAL1,INT_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,CARD_1,FINSET_1,NAT_1,ZFMISC_1,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,ABIAN,ENUMSET1,FINSEQ_4,NUMBERS,GRAPH_2,MEMBERED,CKB18,CKB38,CKB49,CKB55;
definitions TARSKI,XBOOLE_0,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,CKB18,CKB38,CKB49,CKB55;
theorems FINSEQ_1,FUNCT_1,GLIB_000,GLIB_001,GLIB_002,GRAPH_2,GRAPH_3,TREES_1,INT_1,JORDAN12,NAT_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,FUNCOP_1,FUNCT_2,FINSEQ_3,FINSEQ_4,ZFMISC_1,ABIAN,CARD_2,ENUMSET1,FINSEQ_2,XREAL_1,MEMBERED,FINSEQ_5,XXREAL_0,NAT_D,PARTFUN1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60;
schemes NAT_1,GRAPH_5,FUNCT_2,FRAENKEL,CKB35;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GLIB_001,GLIB_002,FUNCT_2,XXREAL_2,CARD_1,RELSET_1;
constructors DOMAIN_1,REAL_1,NAT_D,FINSEQ_4,GRAPH_2,GLIB_001,GLIB_002,VALUED_1,XXREAL_2,RELSET_1,CKB18,CKB38,CKB49,CKB55;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
(for G being _Graph holds (for C being (Path of G) holds ((C is  Cycle-like & ( C .length() ) > 3) implies (for x being (Vertex of G) holds (x in ( C .vertices() ) implies (ex m,n being  odd Nat st (((((((( m + 2 ) < n & n <= ( len C )) & (not (m = 1 & n = ( len C )))) & (not (m = 1 & n = ( ( len C ) - 2 )))) & (not (m = 3 & n = ( len C )))) & ( C . m ) <> ( C . n )) & ( C . m ) in ( G .AdjacentSet { x } )) & ( C . n ) in ( G .AdjacentSet { x } ))))))))
proof
let G being _Graph;
let C being (Path of G);
assume that
A1: C is  Cycle-like
and
A2: ( C .length() ) > 3;
( C .length() ) >= ( 3 + 1 ) by A2,NAT_1:13;
then ( 2 * ( C .length() ) ) >= ( 2 * 4 ) by XREAL_1:64;
then ( ( 2 * ( C .length() ) ) + 1 ) >= ( 8 + 1 ) by XREAL_1:7;
then A3: ( len C ) >= 9 by GLIB_001:112;
let x being (Vertex of G);
assume x in ( C .vertices() );
then consider n being  odd (Element of ( NAT )) such that A4: n <= ( len C ) and A5: ( C . n ) = x by GLIB_001:87;
A6: ( ( 0 ) + 1 ) <= n by ABIAN:12;
per cases ;
suppose A7: (n = 1 or n = ( len C ));

reconsider i = ( ( 2 * 1 ) + 1 ) as  odd Nat;
reconsider k = ( ( 2 * ( 0 ) ) + 1 ) as  odd Nat;
A8: ( ( len C ) + ( 0 ) ) > ( 9 + ( - 6 ) ) by A3,XREAL_1:8;
then reconsider Ci = ( C . i ) as (Vertex of G) by GLIB_001:7;
A9:now
per cases  by A7;
suppose n = 1;

hence x = ( C . k ) by A5;
end;
suppose n = ( len C );

then x = ( C .last() ) by A5;
then x = ( C .first() ) by A1,GLIB_001:def 24;
hence x = ( C . k );
end;
end;
then A10: x <> Ci by A8,GLIB_001:def 28;
( ( len C ) + ( - 2 ) ) >= ( 9 + ( - 2 ) ) by A3,XREAL_1:7;
then ( ( len C ) - ( 2 * 1 ) ) >= ( 0 ) by XXREAL_0:2;
then ( ( len C ) - 2 ) is  odd  odd (Element of ( NAT )) by INT_1:3;
then reconsider j = ( ( len C ) - 2 ) as  odd Nat;
take i;
take j;
A11: ( ( len C ) + ( - 2 ) ) >= ( 9 + ( - 2 ) ) by A3,XREAL_1:7;
hence ( i + 2 ) < j by XXREAL_0:2;
A12: ( ( len C ) + ( 0 ) ) > ( ( len C ) + ( - 2 ) ) by XREAL_1:8;
hence j <= ( len C );
thus (((not (i = 1 & j = ( len C ))) & (not (i = 1 & j = ( ( len C ) - 2 )))) & (not (i = 3 & j = ( len C ))));
hereby
assume A13: ( C . i ) = ( C . j );
( ( i + 2 ) + ( - 2 ) ) < ( j + ( 0 ) ) by A11,XXREAL_0:2;
hence contradiction by A12,A13,GLIB_001:def 28;
end;
( ( len C ) + ( 0 ) ) > ( 9 + ( - 8 ) ) by A3,XREAL_1:8;
then ( C . ( k + 1 ) ) Joins ( C . k ),( C . i ),G by GLIB_001:def 3;
then x,Ci are_adjacent  by A9,CKB49:def 1;
hence ( C . i ) in ( G .AdjacentSet { x } ) by A10,CKB59:1;
A14: j in ( NAT ) by ORDINAL1:def 12;
then reconsider Cj = ( C . j ) as (Vertex of G) by A12,GLIB_001:7;
A15:now
per cases  by A7;
suppose n = 1;

then x = ( C .first() ) by A5;
then x = ( C .last() ) by A1,GLIB_001:def 24;
hence x = ( C . ( j + 2 ) );
end;
suppose n = ( len C );

hence x = ( C . ( j + 2 ) ) by A5;
end;
end;
A16:now
assume x = Cj;
then A17: j = 1 by A14,A12,A15,GLIB_001:def 28;
( j + 2 ) = ( len C );
hence contradiction by A3,A17;
end;
( C . ( j + 1 ) ) Joins Cj,x,G by A14,A12,A15,GLIB_001:def 3;
then x,Cj are_adjacent  by CKB49:def 1;
hence thesis by A16,CKB59:1;
end;
suppose A18: (not (n = 1 or n = ( len C )));

then ( ( 2 * ( 0 ) ) + 1 ) < n by A6,XXREAL_0:1;
then ( 1 + 2 ) <= n by CKB5:1;
then ( 3 + ( - 2 ) ) <= ( n + ( - 2 ) ) by XREAL_1:7;
then ( 0 ) <= ( n - ( 2 * 1 ) );
then ( n - 2 ) is  odd  odd (Element of ( NAT )) by INT_1:3;
then reconsider i = ( n - 2 ) as  odd Nat;
A19: ( i + ( 0 ) ) < ( i + 2 ) by XREAL_1:8;
then reconsider Ci = ( C . i ) as (Vertex of G) by A4,GLIB_001:7,XXREAL_0:2;
reconsider j = ( n + 2 ) as  odd Nat;
A20: n < ( len C ) by A4,A18,XXREAL_0:1;
then A21: ( n + 2 ) <= ( ( ( len C ) - 2 ) + 2 ) by CKB5:1;
then reconsider Cj = ( C . j ) as (Vertex of G) by GLIB_001:7;
A22:now
A23: ( n + 2 ) > ( n + ( 0 ) ) by XREAL_1:8;
assume Cj = x;
hence contradiction by A5,A18,A21,A23,GLIB_001:def 28;
end;
take i;
take j;
( n + ( 0 ) ) < ( n + 2 ) by XREAL_1:8;
hence (( i + 2 ) < j & j <= ( len C )) by A20,CKB5:1;
A24:now
assume that
A25: i = 1
and
A26: j = ( len C );
j = ( i + 4 );
hence contradiction by A3,A25,A26;
end;
hence (not (i = 1 & j = ( len C )));
hereby
assume that
A27: i = 1
and
A28: j = ( ( len C ) - 2 );
( ( len C ) + ( - 2 ) ) >= ( 9 + ( - 3 ) ) by A3,XREAL_1:7;
hence contradiction by A27,A28;
end;
hereby
assume that
A29: i = 3
and
A30: j = ( len C );
j = ( i + 4 );
hence contradiction by A3,A29,A30;
end;
A31: i in ( NAT ) by ORDINAL1:def 12;
A32:now
A33: ( n + ( 0 ) ) > ( n + ( - 2 ) ) by XREAL_1:8;
assume Ci = x;
hence contradiction by A4,A5,A18,A31,A33,GLIB_001:def 28;
end;
A34: ( n + 2 ) <= ( ( ( len C ) - 2 ) + 2 ) by A20,CKB5:1;
hereby
A35: ( ( i + 2 ) + ( - 2 ) ) < ( j + ( 0 ) ) by XREAL_1:8;
assume ( C . i ) = ( C . j );
hence contradiction by A31,A34,A24,A35,GLIB_001:def 28;
end;
i < ( len C ) by A4,A19,XXREAL_0:2;
then ( C . ( i + 1 ) ) Joins ( C . i ),( C . ( i + 2 ) ),G by A31,GLIB_001:def 3;
then x,Ci are_adjacent  by A5,CKB49:def 1;
hence ( C . i ) in ( G .AdjacentSet { x } ) by A32,CKB59:1;
( C . ( n + 1 ) ) Joins ( C . n ),( C . j ),G by A20,GLIB_001:def 3;
then x,Cj are_adjacent  by A5,CKB49:def 1;
hence thesis by A22,CKB59:1;
end;
end;
