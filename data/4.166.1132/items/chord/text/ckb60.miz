environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,ARYTM_1,XXREAL_0,NAT_1,CARD_1,ARYTM_3,ABIAN,SUBSET_1,RELAT_1,INT_1,FINSEQ_1,FUNCT_1,FINSEQ_4,XBOOLE_0,FINSET_1,GRAPH_2,ORDINAL4,GLIB_000,GLIB_001,TARSKI,ZFMISC_1,RCOMP_1,GRAPH_1,RELAT_2,REWRITE1,FUNCOP_1,GLIB_002,PARTFUN1,MEMBERED,TOPGEN_1,CHORD;
notations TARSKI,XBOOLE_0,SUBSET_1,XXREAL_2,ORDINAL1,INT_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,CARD_1,FINSET_1,NAT_1,ZFMISC_1,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,ABIAN,ENUMSET1,FINSEQ_4,NUMBERS,GRAPH_2,MEMBERED,CKB18,CKB38,CKB49,CKB55;
definitions TARSKI,XBOOLE_0,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,CKB18,CKB38,CKB49,CKB55;
theorems FINSEQ_1,FUNCT_1,GLIB_000,GLIB_001,GLIB_002,GRAPH_2,GRAPH_3,TREES_1,INT_1,JORDAN12,NAT_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,FUNCOP_1,FUNCT_2,FINSEQ_3,FINSEQ_4,ZFMISC_1,ABIAN,CARD_2,ENUMSET1,FINSEQ_2,XREAL_1,MEMBERED,FINSEQ_5,XXREAL_0,NAT_D,PARTFUN1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59;
schemes NAT_1,GRAPH_5,FUNCT_2,FRAENKEL,CKB35;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GLIB_001,GLIB_002,FUNCT_2,XXREAL_2,CARD_1,RELSET_1;
constructors DOMAIN_1,REAL_1,NAT_D,FINSEQ_4,GRAPH_2,GLIB_001,GLIB_002,VALUED_1,XXREAL_2,RELSET_1,CKB18,CKB38,CKB49,CKB55;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
(for G being _Graph holds (for x,y being set holds (x in ( G .AdjacentSet { y } ) iff y in ( G .AdjacentSet { x } ))))
proof
let G being _Graph;
let x being set,y being set;
hereby
assume A1: x in ( G .AdjacentSet { y } );
then reconsider xg = x as (Vertex of G);
now
consider vy being (Vertex of G) such that A2: vy in { y } and vy,xg are_adjacent  by A1,CKB57:1;
assume A3: (not y in ( the_Vertices_of G ));
vy = y by A2,TARSKI:def 1;
hence contradiction by A3;
end;
then reconsider yg = y as (Vertex of G);
A4: xg,yg are_adjacent  by A1,CKB59:1;
xg <> yg by A1,CKB59:1;
hence y in ( G .AdjacentSet { x } ) by A4,CKB59:1;
end;
assume A5: y in ( G .AdjacentSet { x } );
then reconsider yg = y as (Vertex of G);
now
consider vx being (Vertex of G) such that A6: vx in { x } and vx,yg are_adjacent  by A5,CKB57:1;
assume A7: (not x in ( the_Vertices_of G ));
vx = x by A6,TARSKI:def 1;
hence contradiction by A7;
end;
then reconsider xg = x as (Vertex of G);
A8: xg,yg are_adjacent  by A5,CKB59:1;
xg <> yg by A5,CKB59:1;
hence thesis by A8,CKB59:1;
end;
