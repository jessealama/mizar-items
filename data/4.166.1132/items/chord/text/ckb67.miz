environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,ARYTM_1,XXREAL_0,NAT_1,CARD_1,ARYTM_3,ABIAN,SUBSET_1,RELAT_1,INT_1,FINSEQ_1,FUNCT_1,FINSEQ_4,XBOOLE_0,FINSET_1,GRAPH_2,ORDINAL4,GLIB_000,GLIB_001,TARSKI,ZFMISC_1,RCOMP_1,GRAPH_1,RELAT_2,REWRITE1,FUNCOP_1,GLIB_002,PARTFUN1,MEMBERED,TOPGEN_1,CHORD;
notations TARSKI,XBOOLE_0,SUBSET_1,XXREAL_2,ORDINAL1,INT_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,CARD_1,FINSET_1,NAT_1,ZFMISC_1,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,ABIAN,ENUMSET1,FINSEQ_4,NUMBERS,GRAPH_2,MEMBERED,CKB18,CKB38,CKB49,CKB55,CKB66;
definitions TARSKI,XBOOLE_0,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,CKB18,CKB38,CKB49,CKB55,CKB66;
theorems FINSEQ_1,FUNCT_1,GLIB_000,GLIB_001,GLIB_002,GRAPH_2,GRAPH_3,TREES_1,INT_1,JORDAN12,NAT_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,FUNCOP_1,FUNCT_2,FINSEQ_3,FINSEQ_4,ZFMISC_1,ABIAN,CARD_2,ENUMSET1,FINSEQ_2,XREAL_1,MEMBERED,FINSEQ_5,XXREAL_0,NAT_D,PARTFUN1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66;
schemes NAT_1,GRAPH_5,FUNCT_2,FRAENKEL,CKB35;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GLIB_001,GLIB_002,FUNCT_2,XXREAL_2,CARD_1,RELSET_1;
constructors DOMAIN_1,REAL_1,NAT_D,FINSEQ_4,GRAPH_2,GLIB_001,GLIB_002,VALUED_1,XXREAL_2,RELSET_1,CKB18,CKB38,CKB49,CKB55,CKB66;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th59: (for G1,G2 being _Graph holds (G1 == G2 implies (for u1 being (Vertex of G1) holds (for u2 being (Vertex of G2) holds (u1 = u2 implies (for H1 being (AdjGraph of G1,{ u1 }) holds (for H2 being (AdjGraph of G2,{ u2 }) holds H1 == H2)))))))
proof
let G1 being _Graph,G2 being _Graph;
assume that
A1: G1 == G2;
let u1 being (Vertex of G1);
let u2 being (Vertex of G2);
assume that
A2: u1 = u2;
set G2Adj = ( G2 .AdjacentSet { u2 } );
set G1Adj = ( G1 .AdjacentSet { u1 } );
A3: G1Adj = G2Adj by A1,A2,CKB58:1;
let H1 being (AdjGraph of G1,{ u1 });
let H2 being (AdjGraph of G2,{ u2 });
A4: H1 is (inducedSubgraph of G1,G1Adj) by CKB66:def 1;
A5: H2 is (inducedSubgraph of G2,G2Adj) by CKB66:def 1;
per cases ;
suppose A6: (not G1Adj is non empty non empty (Subset of ( the_Vertices_of G1 )));

then H1 == G1 by A4,GLIB_000:def 37;
then A7: H1 == G2 by A1,GLIB_000:85;
H2 == G2 by A5,A3,A6,GLIB_000:def 37;
hence thesis by A7,GLIB_000:85;
end;
suppose A8: G1Adj is non empty non empty (Subset of ( the_Vertices_of G1 ));

then ( the_Vertices_of H1 ) = G1Adj by A4,GLIB_000:def 37;
then A9: ( the_Vertices_of H1 ) = ( the_Vertices_of H2 ) by A5,A3,GLIB_000:def 37;
G1 is (Subgraph of G2) by A1,GLIB_000:87;
then A10: ( G1 .edgesBetween G1Adj ) c= ( G2 .edgesBetween G1Adj ) by GLIB_000:76;
A11: ( the_Edges_of H1 ) = ( G1 .edgesBetween G1Adj ) by A4,A8,GLIB_000:def 37;
G2 is (Subgraph of G1) by A1,GLIB_000:87;
then A12: ( G2 .edgesBetween G1Adj ) c= ( G1 .edgesBetween G1Adj ) by GLIB_000:76;
G2 is (Subgraph of G1) by A1,GLIB_000:87;
then A13: H2 is (Subgraph of G1) by GLIB_000:43;
( the_Edges_of H2 ) = ( G2 .edgesBetween G2Adj ) by A5,A3,A8,GLIB_000:def 37;
then ( the_Edges_of H1 ) = ( the_Edges_of H2 ) by A3,A11,A10,A12,XBOOLE_0:def 10;
hence thesis by A9,A13,GLIB_000:86;
end;
end;
