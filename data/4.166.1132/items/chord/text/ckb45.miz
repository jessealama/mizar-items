environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,ARYTM_1,XXREAL_0,NAT_1,CARD_1,ARYTM_3,ABIAN,SUBSET_1,RELAT_1,INT_1,FINSEQ_1,FUNCT_1,FINSEQ_4,XBOOLE_0,FINSET_1,GRAPH_2,ORDINAL4,GLIB_000,GLIB_001,TARSKI,ZFMISC_1,RCOMP_1,GRAPH_1,RELAT_2,REWRITE1,FUNCOP_1,GLIB_002,PARTFUN1,MEMBERED,TOPGEN_1,CHORD;
notations TARSKI,XBOOLE_0,SUBSET_1,XXREAL_2,ORDINAL1,INT_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,CARD_1,FINSET_1,NAT_1,ZFMISC_1,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,ABIAN,ENUMSET1,FINSEQ_4,NUMBERS,GRAPH_2,MEMBERED,CKB18,CKB38;
definitions TARSKI,XBOOLE_0,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,CKB18,CKB38;
theorems FINSEQ_1,FUNCT_1,GLIB_000,GLIB_001,GLIB_002,GRAPH_2,GRAPH_3,TREES_1,INT_1,JORDAN12,NAT_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,FUNCOP_1,FUNCT_2,FINSEQ_3,FINSEQ_4,ZFMISC_1,ABIAN,CARD_2,ENUMSET1,FINSEQ_2,XREAL_1,MEMBERED,FINSEQ_5,XXREAL_0,NAT_D,PARTFUN1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44;
schemes NAT_1,GRAPH_5,FUNCT_2,FRAENKEL,CKB35;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GLIB_001,GLIB_002,FUNCT_2,XXREAL_2,CARD_1,RELSET_1;
constructors DOMAIN_1,REAL_1,NAT_D,FINSEQ_4,GRAPH_2,GLIB_001,GLIB_002,VALUED_1,XXREAL_2,RELSET_1,CKB18,CKB38;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th40: (for G being _Graph holds (for W being (Walk of G) holds (W is  minlength implies (for m,n being  odd  natural number holds ((( m + 2 ) < n & n <= ( len W )) implies (not (ex e being set st e Joins ( W . m ),( W . n ),G)))))))
proof
let G being _Graph;
let P being (Walk of G);
assume that
A1: P is  minlength;
let m being  odd Nat,n being  odd Nat;
assume that
A2: ( m + 2 ) < n
and
A3: n <= ( len P );
A4: ( ( ( len P ) - n ) + ( m + 2 ) ) < ( ( ( len P ) - n ) + n ) by A2,XREAL_1:8;
( m + ( 0 ) ) <= ( m + 2 ) by XREAL_1:7;
then m <= n by A2,XXREAL_0:2;
then A5: m <= ( len P ) by A3,XXREAL_0:2;
set P3 = ( P .cut (n,( len P )) );
A6: n in ( NAT ) by ORDINAL1:def 12;
then A7: ( P3 .last() ) = ( P .last() ) by A3,GLIB_001:37;
set P1 = ( P .cut (1,m) );
let e being set;
assume that
A8: e Joins ( P . m ),( P . n ),G;
set P2 = ( P1 .addEdge e );
set P4 = ( P2 .append P3 );
A9: ( ( 2 * ( 0 ) ) + 1 ) <= m by ABIAN:12;
A10: m in ( NAT ) by ORDINAL1:def 12;
then A11: ( ( len P1 ) + 1 ) = ( m + 1 ) by A9,A5,GLIB_001:36;
A12: ( P1 .last() ) = ( P . m ) by A10,A9,A5,GLIB_001:37;
then A13: ( P2 .last() ) = ( P . n ) by A8,GLIB_001:63;
( P1 .first() ) = ( P .first() ) by A10,A9,A5,GLIB_001:37;
then A14: ( P2 .first() ) = ( P .first() ) by A8,A12,GLIB_001:63;
( P3 .first() ) = ( P . n ) by A3,A6,GLIB_001:37;
then A15: P4 is_Walk_from ( P .first() ),( P .last() ) by A14,A13,A7,GLIB_001:30;
( P3 .first() ) = ( P . n ) by A3,A6,GLIB_001:37;
then A16: ( ( len P4 ) + 1 ) = ( ( len P2 ) + ( len P3 ) ) by A13,GLIB_001:28;
( P1 .last() ) = ( P . m ) by A10,A9,A5,GLIB_001:37;
then A17: ( len P2 ) = ( m + 2 ) by A8,A11,GLIB_001:64;
( ( len P3 ) + n ) = ( ( len P ) + 1 ) by A3,A6,GLIB_001:36;
hence contradiction by A1,A17,A15,A16,A4,CKB38:def 1;
end;
