environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,ARYTM_1,XXREAL_0,NAT_1,CARD_1,ARYTM_3,ABIAN,SUBSET_1,RELAT_1,INT_1,FINSEQ_1,FUNCT_1,FINSEQ_4,XBOOLE_0,FINSET_1,GRAPH_2,ORDINAL4,GLIB_000,GLIB_001,TARSKI,ZFMISC_1,RCOMP_1,GRAPH_1,RELAT_2,REWRITE1,FUNCOP_1,GLIB_002,PARTFUN1,MEMBERED,TOPGEN_1,CHORD;
notations TARSKI,XBOOLE_0,SUBSET_1,XXREAL_2,ORDINAL1,INT_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,CARD_1,FINSET_1,NAT_1,ZFMISC_1,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,ABIAN,ENUMSET1,FINSEQ_4,NUMBERS,GRAPH_2,MEMBERED,CKB18,CKB38,CKB49,CKB55,CKB66,CKB69,CKB76,CKB83,CKB92,CKB99,CKB100,CKB113,CKB127,CKB132,CKB133,CKB135;
definitions TARSKI,XBOOLE_0,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,CKB18,CKB38,CKB49,CKB55,CKB66,CKB69,CKB76,CKB83,CKB92,CKB99,CKB113,CKB127,CKB135;
theorems FINSEQ_1,FUNCT_1,GLIB_000,GLIB_001,GLIB_002,GRAPH_2,GRAPH_3,TREES_1,INT_1,JORDAN12,NAT_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,FUNCOP_1,FUNCT_2,FINSEQ_3,FINSEQ_4,ZFMISC_1,ABIAN,CARD_2,ENUMSET1,FINSEQ_2,XREAL_1,MEMBERED,FINSEQ_5,XXREAL_0,NAT_D,PARTFUN1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106,CKB107,CKB108,CKB109,CKB110,CKB111,CKB112,CKB113,CKB114,CKB115,CKB120,CKB121,CKB122,CKB123,CKB124,CKB125,CKB126,CKB127,CKB129,CKB130,CKB131,CKB134,CKB135,CKB136,CKB137;
schemes NAT_1,GRAPH_5,FUNCT_2,FRAENKEL,CKB35;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GLIB_001,GLIB_002,FUNCT_2,XXREAL_2,CARD_1,RELSET_1,CKB71,CKB72,CKB73,CKB116,CKB117,CKB118,CKB119,CKB128;
constructors DOMAIN_1,REAL_1,NAT_D,FINSEQ_4,GRAPH_2,GLIB_001,GLIB_002,VALUED_1,XXREAL_2,RELSET_1,CKB18,CKB38,CKB49,CKB55,CKB66,CKB69,CKB76,CKB83,CKB92,CKB99,CKB113,CKB127,CKB132,CKB133,CKB135;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
registration
let G being  finite  chordal _Graph;
cluster  perfect for (VertexScheme of G);
existence
proof
defpred P[  finite _Graph ]
 means
($1 is  chordal implies (ex S being (VertexScheme of $1) st S is  perfect));
A1:now
let k being non zero Nat;
assume that
A2: (for Gk being  finite _Graph holds (( Gk .order() ) < k implies P[ Gk ]));
let Gk1 being  finite _Graph;
assume that
A3: ( Gk1 .order() ) = k;
thus P[ Gk1 ]
proof
assume A4: Gk1 is  chordal;
per cases ;
suppose A5: k = 1;

set v = the (Vertex of Gk1);
Gk1 is  trivial by A3,A5,GLIB_000:26;
then (ex S being (VertexScheme of Gk1) st (S = <* v *> & S is  perfect)) by CKB136:1;
hence thesis;
end;
suppose k <> 1;

then reconsider G = Gk1 as non trivial  finite  chordal _Graph by A3,A4,GLIB_000:26;
consider x being (Vertex of G) such that A6: x is  simplicial by CKB126:1;
set H = the (removeVertex of G,x);
A7: <* x *> is  one-to-one by FINSEQ_3:93;
A8: ( ( the_Vertices_of G ) \ { x } ) is non empty by GLIB_000:20;
then A9: ( the_Vertices_of H ) = ( ( the_Vertices_of G ) \ { x } ) by GLIB_000:def 37;
( H .order() ) = ( card ( ( the_Vertices_of G ) \ { x } ) ) by A8,GLIB_000:def 37
.= ( ( G .order() ) - ( card { x } ) ) by CARD_2:44
.= ( k - 1 ) by A3,CARD_2:42;
then consider T being (VertexScheme of H) such that A10: T is  perfect by A2,XREAL_1:146;
( { x } /\ ( rng T ) ) = ( { x } /\ ( ( the_Vertices_of G ) \ { x } ) ) by A9,CKB127:def 1
.= ( ( { x } /\ ( the_Vertices_of G ) ) \ { x } ) by XBOOLE_1:49
.= ( { x } \ { x } ) by XBOOLE_1:28
.= ( {} ) by XBOOLE_1:37;
then { x } misses ( rng T ) by XBOOLE_0:def 7;
then A11: ( rng <* x *> ) misses ( rng T ) by FINSEQ_1:38;
set S = ( <* x *> ^ T );
( rng T ) = ( ( the_Vertices_of G ) \ { x } ) by A9,CKB127:def 1;
then ( rng S ) = ( ( ( the_Vertices_of G ) \ { x } ) \/ ( rng <* x *> ) ) by FINSEQ_1:31;
then ( rng S ) = ( ( ( the_Vertices_of G ) \ { x } ) \/ { x } ) by FINSEQ_1:38;
then ( rng S ) = ( { x } \/ ( the_Vertices_of G ) ) by XBOOLE_1:39;
then A12: ( rng S ) = ( the_Vertices_of G ) by XBOOLE_1:12;
then reconsider S as (FinSequence of ( the_Vertices_of G )) by FINSEQ_1:def 4;
T is  one-to-one by CKB127:def 1;
then S is  one-to-one by A11,A7,FINSEQ_3:91;
then reconsider S as (VertexScheme of Gk1) by A12,CKB127:def 1;
take S;
let n being non zero Nat;
assume that
A13: n <= ( len S );
A14: 1 <= n by NAT_1:14;
let Gf being (inducedSubgraph of Gk1,( S .followSet n ));
let v being (Vertex of Gf);
assume that
A15: v = ( S . n );
per cases  by A14,XXREAL_0:1;
suppose A16: 1 = n;

then A17: ( S .followSet n ) = ( rng S ) by GRAPH_2:7
.= ( the_Vertices_of G ) by CKB127:def 1;
x = v by A15,A16,FINSEQ_1:41;
hence thesis by A6,A17,CKB79:1,GLIB_000:94;
end;
suppose A18: 1 < n;

then ( 1 + ( - 1 ) ) < ( n + ( - 1 ) ) by XREAL_1:8;
then reconsider n1 = ( n - 1 ) as non zero (Element of ( NAT )) by INT_1:3;
( len <* x *> ) = 1 by FINSEQ_1:39;
then A19: ( S . n ) = ( T . n1 ) by A13,A18,FINSEQ_1:24;
A20: ( T .followSet n1 ) = ( S .followSet ( n1 + 1 ) ) by CKB20:1;
( n + ( - 1 ) ) <= ( ( len S ) + ( - 1 ) ) by A13,XREAL_1:7;
then n1 <= ( ( ( len <* x *> ) + ( len T ) ) + ( - 1 ) ) by FINSEQ_1:22;
then A21: n1 <= ( ( 1 + ( len T ) ) + ( - 1 ) ) by FINSEQ_1:39;
then ( T .followSet n1 ) is non empty by CKB134:1;
then Gf is (inducedSubgraph of H,( T .followSet n1 )) by A9,A20,CKB33:1;
hence thesis by A10,A15,A19,A21,CKB135:def 1;
end;
end;
end;

end;
(for G being  finite _Graph holds P[ G ]) from CKB35:sch 1(A1);
then consider S being (VertexScheme of G) such that A22: S is  perfect;
take S;
thus thesis by A22;
end;
end;
