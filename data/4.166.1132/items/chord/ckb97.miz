environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,ARYTM_1,XXREAL_0,NAT_1,CARD_1,ARYTM_3,ABIAN,SUBSET_1,RELAT_1,INT_1,FINSEQ_1,FUNCT_1,FINSEQ_4,XBOOLE_0,FINSET_1,GRAPH_2,ORDINAL4,GLIB_000,GLIB_001,TARSKI,ZFMISC_1,RCOMP_1,GRAPH_1,RELAT_2,REWRITE1,FUNCOP_1,GLIB_002,PARTFUN1,MEMBERED,TOPGEN_1,CHORD;
notations TARSKI,XBOOLE_0,SUBSET_1,XXREAL_2,ORDINAL1,INT_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,CARD_1,FINSET_1,NAT_1,ZFMISC_1,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,ABIAN,ENUMSET1,FINSEQ_4,NUMBERS,GRAPH_2,MEMBERED,CKB18,CKB38,CKB49,CKB55,CKB66,CKB69,CKB76,CKB83,CKB92;
definitions TARSKI,XBOOLE_0,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,CKB18,CKB38,CKB49,CKB55,CKB66,CKB69,CKB76,CKB83,CKB92;
theorems FINSEQ_1,FUNCT_1,GLIB_000,GLIB_001,GLIB_002,GRAPH_2,GRAPH_3,TREES_1,INT_1,JORDAN12,NAT_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,FUNCOP_1,FUNCT_2,FINSEQ_3,FINSEQ_4,ZFMISC_1,ABIAN,CARD_2,ENUMSET1,FINSEQ_2,XREAL_1,MEMBERED,FINSEQ_5,XXREAL_0,NAT_D,PARTFUN1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96;
schemes NAT_1,GRAPH_5,FUNCT_2,FRAENKEL,CKB35;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GLIB_001,GLIB_002,FUNCT_2,XXREAL_2,CARD_1,RELSET_1,CKB71,CKB72,CKB73;
constructors DOMAIN_1,REAL_1,NAT_D,FINSEQ_4,GRAPH_2,GLIB_001,GLIB_002,VALUED_1,XXREAL_2,RELSET_1,CKB18,CKB38,CKB49,CKB55,CKB66,CKB69,CKB76,CKB83,CKB92;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th82: (for G being _Graph holds (for a,b being (Vertex of G) holds ((a <> b & (not a,b are_adjacent )) implies (for S being (VertexSeparator of a,b) holds (S is  minimal implies (for H being (removeVertices of G,S) holds (for aa being (Vertex of H) holds (aa = a implies (for x being (Vertex of G) holds (x in S implies (ex y being (Vertex of G) st (y in ( H .reachableFrom aa ) & x,y are_adjacent ))))))))))))
proof
let G being _Graph;
let a being (Vertex of G),b being (Vertex of G);
assume that
A1: a <> b
and
A2: (not a,b are_adjacent );
let S being (VertexSeparator of a,b);
assume that
A3: S is  minimal;
let H being (removeVertices of G,S);
let aa being (Vertex of H);
assume that
A4: aa = a;
set A = ( H .reachableFrom aa );
let x being (Vertex of G);
assume that
A5: x in S;
set T = ( S \ { x } );
A6: T c= S by XBOOLE_1:36;
then A7: (not b in T) by A1,A2,CKB83:def 1;
assume A8: (not (ex y being (Vertex of G) st (y in ( H .reachableFrom aa ) & x,y are_adjacent )));
A9: (for W being (Walk of G) holds ((W is_Walk_from a,b & x in ( W .vertices() )) implies (ex y being (Vertex of G) st (y in T & y in ( W .vertices() )))))
proof
let W being (Walk of G);
assume that
A10: W is_Walk_from a,b
and
A11: x in ( W .vertices() );
A12:now
assume ( W .find x ) = 1;
then ( W . ( W .find x ) ) = ( W .first() );
then ( W . ( W .find x ) ) = a by A10,GLIB_001:def 23;
then (not ( W . ( W .find x ) ) in S) by A1,A2,CKB83:def 1;
hence contradiction by A5,A11,GLIB_001:def 19;
end;
consider k being  odd (Element of ( NAT )) such that A13: k <= ( len W ) and A14: ( W . k ) = x by A11,GLIB_001:87;
( W .find ( W . k ) ) <= k by A13,GLIB_001:115;
then A15: ( W .find x ) <= ( len W ) by A13,A14,XXREAL_0:2;
then A16: ( ( W .find x ) + ( - 2 ) ) <= ( ( len W ) + ( 0 ) ) by XREAL_1:7;
( ( 0 ) + 1 ) <= ( W .find x ) by ABIAN:12;
then ( ( 2 * ( 0 ) ) + 1 ) < ( W .find x ) by A12,XXREAL_0:1;
then ( ( 2 * 1 ) + 1 ) <= ( W .find x ) by CKB5:1;
then A17: ( 3 + ( - 2 ) ) <= ( ( W .find x ) + ( - 2 ) ) by XREAL_1:7;
then A18: ( ( W .find x ) - 2 ) is (Element of ( NAT )) by INT_1:3;
then reconsider j = ( ( W .find x ) - ( 2 * 1 ) ) as  odd Nat;
set P = ( W .cut (1,j) );
A19: ( ( 2 * ( 0 ) ) + 1 ) <= j by A17;
then A20: ( ( ( len P ) + 1 ) + ( - 1 ) ) = ( ( j + 1 ) + ( - 1 ) ) by A18,A16,GLIB_001:36;
assume A21: (not (ex y being (Vertex of G) st (y in T & y in ( W .vertices() ))));
A22: (for n being  odd Nat holds (n <= j implies ((not ( P . n ) in S) & ( P . n ) = ( W . n ))))
proof
let n being  odd Nat;
assume that
A23: n <= j;
1 <= n by ABIAN:12;
then ( 1 + ( - 1 ) ) <= ( n + ( - 1 ) ) by XREAL_1:7;
then A24: ( n - 1 ) is (Element of ( NAT )) by INT_1:3;
then reconsider nu1 = ( n - 1 ) as Nat;
n < ( j + 1 ) by A23,NAT_1:13;
then ( n + ( - 1 ) ) < ( ( j + 1 ) + ( - 1 ) ) by XREAL_1:8;
then A25: ( P . ( nu1 + 1 ) ) = ( W . ( 1 + nu1 ) ) by A16,A19,A20,A24,GLIB_001:36;
now
A26: ( P .vertices() ) c= ( W .vertices() ) by A18,A16,A19,GLIB_001:94;
A27: n in ( NAT ) by ORDINAL1:def 12;
then ( P . n ) in ( P .vertices() ) by A20,A23,GLIB_001:87;
then A28: (not ( P . n ) in T) by A21,A26;
n < ( j + 1 ) by A23,NAT_1:13;
then A29: ( n + ( 0 ) ) < ( ( j + 1 ) + 1 ) by XREAL_1:8;
A30: ( S \/ { x } ) = ( { x } \/ T ) by XBOOLE_1:39;
{ x } c= S by A5,ZFMISC_1:31;
then A31: S = ( { x } \/ T ) by A30,XBOOLE_1:12;
A32: n <= ( len W ) by A16,A23,XXREAL_0:2;
assume ( P . n ) in S;
then ( P . n ) in { x } by A28,A31,XBOOLE_0:def 3;
then n < ( W .find ( W . n ) ) by A25,A29,TARSKI:def 1;
hence contradiction by A27,A32,GLIB_001:115;
end;
hence thesis by A25;
end;
then (for n being  odd Nat holds (n <= j implies (not ( P . n ) in S)));
then reconsider HP = P as (Walk of H) by A20,CKB24:1;
( W .first() ) = a by A10,GLIB_001:def 23;
then ( P . ( ( 2 * ( 0 ) ) + 1 ) ) = a by A17,A22;
then aa in ( HP .vertices() ) by A4,A17,A20,GLIB_001:87;
then A33: ( HP .vertices() ) c= A by GLIB_002:13;
( W .find x ) < ( ( len W ) + 1 ) by A15,NAT_1:13;
then A34: ( ( W .find x ) + ( - 2 ) ) < ( ( ( len W ) + 1 ) + ( - 2 ) ) by XREAL_1:8;
( P . j ) is (Vertex of G) by A20,GLIB_001:7;
then reconsider Wj = ( W . j ) as (Vertex of G) by A22;
( ( len W ) + ( - 1 ) ) < ( ( len W ) + ( 0 ) ) by XREAL_1:8;
then j < ( len W ) by A34,XXREAL_0:2;
then ( W . ( j + 1 ) ) Joins Wj,( W . ( j + 2 ) ),G by A18,GLIB_001:def 3;
then ( W . ( j + 1 ) ) Joins Wj,x,G by A11,GLIB_001:def 19;
then A35: Wj,x are_adjacent  by CKB49:def 1;
( P . j ) in ( HP .vertices() ) by A20,GLIB_001:87;
then ( W . j ) in ( HP .vertices() ) by A22;
hence contradiction by A8,A33,A35;
end;
A36:now
let W being (Walk of G);
assume that
A37: W is_Walk_from a,b;
consider y being (Vertex of G) such that A38: y in S and A39: y in ( W .vertices() ) by A1,A2,A37,CKB85:1;
per cases ;
suppose y = x;

hence (ex y being (Vertex of G) st (y in T & y in ( W .vertices() ))) by A9,A37,A39;
end;
suppose A40: y <> x;

take y;
(not y in { x }) by A40,TARSKI:def 1;
hence y in T by A38,XBOOLE_0:def 5;
thus y in ( W .vertices() ) by A39;
end;
end;
x in { x } by TARSKI:def 1;
then A41: T <> S by A5,XBOOLE_0:def 5;
(not a in T) by A1,A2,A6,CKB83:def 1;
then T is (VertexSeparator of a,b) by A1,A2,A7,A36,CKB85:1;
hence contradiction by A3,A41,A6,CKB92:def 1;
end;
