environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,ARYTM_1,XXREAL_0,NAT_1,CARD_1,ARYTM_3,ABIAN,SUBSET_1,RELAT_1,INT_1,FINSEQ_1,FUNCT_1,FINSEQ_4,XBOOLE_0,FINSET_1,GRAPH_2,ORDINAL4,GLIB_000,GLIB_001,TARSKI,ZFMISC_1,RCOMP_1,GRAPH_1,RELAT_2,REWRITE1,FUNCOP_1,GLIB_002,PARTFUN1,MEMBERED,TOPGEN_1,CHORD;
notations TARSKI,XBOOLE_0,SUBSET_1,XXREAL_2,ORDINAL1,INT_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,CARD_1,FINSET_1,NAT_1,ZFMISC_1,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,ABIAN,ENUMSET1,FINSEQ_4,NUMBERS,GRAPH_2,MEMBERED,CKB18,CKB38,CKB49,CKB55;
definitions TARSKI,XBOOLE_0,GLIB_000,GLIB_001,GLIB_002,FUNCOP_1,CKB18,CKB38,CKB49,CKB55;
theorems FINSEQ_1,FUNCT_1,GLIB_000,GLIB_001,GLIB_002,GRAPH_2,GRAPH_3,TREES_1,INT_1,JORDAN12,NAT_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,FUNCOP_1,FUNCT_2,FINSEQ_3,FINSEQ_4,ZFMISC_1,ABIAN,CARD_2,ENUMSET1,FINSEQ_2,XREAL_1,MEMBERED,FINSEQ_5,XXREAL_0,NAT_D,PARTFUN1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61;
schemes NAT_1,GRAPH_5,FUNCT_2,FRAENKEL,CKB35;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GLIB_001,GLIB_002,FUNCT_2,XXREAL_2,CARD_1,RELSET_1;
constructors DOMAIN_1,REAL_1,NAT_D,FINSEQ_4,GRAPH_2,GLIB_001,GLIB_002,VALUED_1,XXREAL_2,RELSET_1,CKB18,CKB38,CKB49,CKB55;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th55: (for G being _Graph holds (for C being (Path of G) holds ((C is  Cycle-like & ( C .length() ) > 3) implies (for x being (Vertex of G) holds (x in ( C .vertices() ) implies (ex m,n being  odd  natural number st (((((( m + 2 ) < n & n <= ( len C )) & ( C . m ) <> ( C . n )) & ( C . m ) in ( G .AdjacentSet { x } )) & ( C . n ) in ( G .AdjacentSet { x } )) & (for e being set holds (e in ( C .edges() ) implies (not e Joins ( C . m ),( C . n ),G))))))))))
proof
let G being _Graph;
let C being (Path of G);
assume that
A1: C is  Cycle-like
and
A2: ( C .length() ) > 3;
( C .length() ) >= ( 3 + 1 ) by A2,NAT_1:13;
then ( 2 * ( C .length() ) ) >= ( 2 * 4 ) by XREAL_1:64;
then ( ( 2 * ( C .length() ) ) + 1 ) >= ( 8 + 1 ) by XREAL_1:7;
then A3: ( len C ) >= 9 by GLIB_001:112;
let x being (Vertex of G);
assume x in ( C .vertices() );
then consider n being  odd (Element of ( NAT )) such that A4: n <= ( len C ) and A5: ( C . n ) = x by GLIB_001:87;
A6: ( ( 0 ) + 1 ) <= n by ABIAN:12;
per cases ;
suppose A7: (n = 1 or n = ( len C ));

reconsider k = ( ( 2 * ( 0 ) ) + 1 ) as  odd Nat;
A8:now
per cases  by A7;
suppose n = 1;

hence x = ( C . k ) by A5;
end;
suppose n = ( len C );

then x = ( C .last() ) by A5;
then x = ( C .first() ) by A1,GLIB_001:def 24;
hence x = ( C . k );
end;
end;
( ( len C ) + ( - 2 ) ) >= ( 9 + ( - 2 ) ) by A3,XREAL_1:7;
then ( ( len C ) - ( 2 * 1 ) ) >= ( 0 ) by XXREAL_0:2;
then ( ( len C ) - 2 ) is  odd  odd (Element of ( NAT )) by INT_1:3;
then reconsider j = ( ( len C ) - 2 ) as  odd Nat;
reconsider i = ( ( 2 * 1 ) + 1 ) as  odd Nat;
take i;
take j;
A9: ( ( len C ) + ( - 2 ) ) >= ( 9 + ( - 2 ) ) by A3,XREAL_1:7;
hence ( i + 2 ) < j by XXREAL_0:2;
A10: ( ( len C ) + ( 0 ) ) > ( ( len C ) + ( - 2 ) ) by XREAL_1:8;
hence j <= ( len C );
i < j by A9,XXREAL_0:2;
then A11: i < ( len C ) by A10,XXREAL_0:2;
hereby
assume A12: ( C . i ) = ( C . j );
( ( i + 2 ) + ( - 2 ) ) < ( j + ( 0 ) ) by A9,XXREAL_0:2;
hence contradiction by A10,A12,GLIB_001:def 28;
end;
A13: ( ( len C ) + ( 0 ) ) > ( 9 + ( - 6 ) ) by A3,XREAL_1:8;
then reconsider Ci = ( C . i ) as (Vertex of G) by GLIB_001:7;
( ( len C ) + ( 0 ) ) > ( 9 + ( - 8 ) ) by A3,XREAL_1:8;
then ( C . ( k + 1 ) ) Joins ( C . k ),( C . i ),G by GLIB_001:def 3;
then A14: x,Ci are_adjacent  by A8,CKB49:def 1;
x <> Ci by A13,A8,GLIB_001:def 28;
hence ( C . i ) in ( G .AdjacentSet { x } ) by A14,CKB59:1;
A15: j <> 1 by A9;
A16: j in ( NAT ) by ORDINAL1:def 12;
then reconsider Cj = ( C . j ) as (Vertex of G) by A10,GLIB_001:7;
A17:now
per cases  by A7;
suppose n = 1;

then x = ( C .first() ) by A5;
then x = ( C .last() ) by A1,GLIB_001:def 24;
hence x = ( C . ( j + 2 ) );
end;
suppose n = ( len C );

hence x = ( C . ( j + 2 ) ) by A5;
end;
end;
A18:now
assume x = Cj;
then A19: j = 1 by A16,A10,A17,GLIB_001:def 28;
( j + 2 ) = ( len C );
hence contradiction by A3,A19;
end;
( C . ( j + 1 ) ) Joins ( C . j ),( C . ( j + 2 ) ),G by A16,A10,GLIB_001:def 3;
then x,Cj are_adjacent  by A17,CKB49:def 1;
hence ( C . j ) in ( G .AdjacentSet { x } ) by A18,CKB59:1;
let e being set;
assume that
A20: e in ( C .edges() )
and
A21: e Joins ( C . i ),( C . j ),G;
consider k being  even (Element of ( NAT )) such that A22: 1 <= k and A23: k <= ( len C ) and A24: ( C . k ) = e by A20,GLIB_001:99;
A25: ((( ( the_Source_of G ) . e ) = ( C . i ) & ( ( the_Target_of G ) . e ) = ( C . j )) or (( ( the_Source_of G ) . e ) = ( C . j ) & ( ( the_Target_of G ) . e ) = ( C . i ))) by A21,GLIB_000:def 13;
k in ( dom C ) by A22,A23,FINSEQ_3:25;
then consider ku1 being  odd (Element of ( NAT )) such that A26: ku1 = ( k - 1 ) and A27: ( k - 1 ) in ( dom C ) and A28: ( k + 1 ) in ( dom C ) and A29: ( C . k ) Joins ( C . ku1 ),( C . ( k + 1 ) ),G by GLIB_001:9;
A30: ku1 <= ( len C ) by A26,A27,FINSEQ_3:25;
A31: ( k + 1 ) <= ( len C ) by A28,FINSEQ_3:25;
per cases  by A24,A29,A25,GLIB_000:def 13;
suppose A32: (( C . i ) = ( C . ku1 ) & ( C . j ) = ( C . ( k + 1 ) ));

then ( i + 2 ) = ( ( k - 1 ) + ( 1 + 1 ) ) by A26,A30,A11,CKB28:1
.= j by A10,A31,A15,A32,CKB28:1;
hence contradiction by A9;
end;
suppose A33: (( C . i ) = ( C . ( k + 1 ) ) & ( C . j ) = ( C . ku1 ));

then i = ( k + 1 ) by A31,A11,CKB28:1;
hence contradiction by A10,A26,A30,A15,A33,CKB28:1;
end;
end;
suppose A34: (not (n = 1 or n = ( len C )));

then ( ( 2 * ( 0 ) ) + 1 ) < n by A6,XXREAL_0:1;
then ( 1 + 2 ) <= n by CKB5:1;
then ( 3 + ( - 2 ) ) <= ( n + ( - 2 ) ) by XREAL_1:7;
then ( n - ( 2 * 1 ) ) is  odd  odd (Element of ( NAT )) by INT_1:3;
then reconsider i = ( n - ( 2 * 1 ) ) as  odd Nat;
A35: ( i + ( 0 ) ) < ( i + 2 ) by XREAL_1:8;
then reconsider Ci = ( C . i ) as (Vertex of G) by A4,GLIB_001:7,XXREAL_0:2;
reconsider j = ( n + 2 ) as  odd Nat;
take i;
take j;
( n + ( 0 ) ) < ( n + 2 ) by XREAL_1:8;
hence ( i + 2 ) < j;
A36: n < ( len C ) by A4,A34,XXREAL_0:1;
hence A37: j <= ( len C ) by CKB5:1;
then reconsider Cj = ( C . j ) as (Vertex of G) by GLIB_001:7;
A38: i in ( NAT ) by ORDINAL1:def 12;
A39:now
A40: ( n + ( 0 ) ) > ( n + ( - 2 ) ) by XREAL_1:8;
assume Ci = x;
hence contradiction by A4,A5,A34,A38,A40,GLIB_001:def 28;
end;
A41:now
assume that
A42: i = 1
and
A43: j = ( len C );
j = ( i + 4 );
hence contradiction by A3,A42,A43;
end;
hereby
A44: ( ( i + 2 ) + ( - 2 ) ) < ( j + ( 0 ) ) by XREAL_1:8;
assume ( C . i ) = ( C . j );
hence contradiction by A38,A37,A41,A44,GLIB_001:def 28;
end;
A45: i < ( len C ) by A4,A35,XXREAL_0:2;
then ( C . ( i + 1 ) ) Joins ( C . i ),( C . ( i + 2 ) ),G by A38,GLIB_001:def 3;
then x,Ci are_adjacent  by A5,CKB49:def 1;
hence ( C . i ) in ( G .AdjacentSet { x } ) by A39,CKB59:1;
( 1 + 2 ) <= j by A6,XREAL_1:7;
then A46: j <> 1;
A47: ( n + 2 ) <= ( ( ( len C ) - 2 ) + 2 ) by A36,CKB5:1;
A48:now
A49: ( n + 2 ) > ( n + ( 0 ) ) by XREAL_1:8;
assume Cj = x;
hence contradiction by A5,A34,A47,A49,GLIB_001:def 28;
end;
( C . ( n + 1 ) ) Joins ( C . n ),( C . j ),G by A36,GLIB_001:def 3;
then x,Cj are_adjacent  by A5,CKB49:def 1;
hence ( C . j ) in ( G .AdjacentSet { x } ) by A48,CKB59:1;
let e being set;
assume that
A50: e in ( C .edges() )
and
A51: e Joins ( C . i ),( C . j ),G;
consider k being  even (Element of ( NAT )) such that A52: 1 <= k and A53: k <= ( len C ) and A54: ( C . k ) = e by A50,GLIB_001:99;
A55: ((( ( the_Source_of G ) . e ) = ( C . i ) & ( ( the_Target_of G ) . e ) = ( C . j )) or (( ( the_Source_of G ) . e ) = ( C . j ) & ( ( the_Target_of G ) . e ) = ( C . i ))) by A51,GLIB_000:def 13;
( 1 + 1 ) <= ( k + 1 ) by A52,XREAL_1:7;
then A56: ( k + 1 ) <> 1;
A57: ( k - 1 ) < ( len C ) by A53,XREAL_1:146,XXREAL_0:2;
k in ( dom C ) by A52,A53,FINSEQ_3:25;
then consider ku1 being  odd (Element of ( NAT )) such that A58: ku1 = ( k - 1 ) and ( k - 1 ) in ( dom C ) and A59: ( k + 1 ) in ( dom C ) and A60: ( C . k ) Joins ( C . ku1 ),( C . ( k + 1 ) ),G by GLIB_001:9;
A61: ( k + 1 ) <= ( len C ) by A59,FINSEQ_3:25;
per cases  by A54,A60,A55,GLIB_000:def 13;
suppose A62: (( C . i ) = ( C . ku1 ) & ( C . j ) = ( C . ( k + 1 ) ));

then ( i + 2 ) = ( ( k - 1 ) + ( 1 + 1 ) ) by A45,A58,A57,CKB28:1
.= j by A37,A61,A46,A56,A62,CKB28:1;
hence contradiction;
end;
suppose A63: (( C . i ) = ( C . ( k + 1 ) ) & ( C . j ) = ( C . ku1 ));

per cases  by A37,A45,A58,A57,A61,A63,CKB28:1;
suppose (i = ( k + 1 ) & j = ( k - 1 ));

hence contradiction;
end;
suppose A64: ((i = ( k + 1 ) & ( k - 1 ) = 1) & j = ( len C ));

j = ( i + 4 );
hence contradiction by A3,A64;
end;
suppose A65: ((i = 1 & ( k + 1 ) = ( len C )) & j = ( k - 1 ));

then ( k + 1 ) = 7;
hence contradiction by A3,A65;
end;
suppose (((i = 1 & ( k + 1 ) = ( len C )) & ( k - 1 ) = 1) & j = ( len C ));

hence contradiction;
end;
end;
end;
end;
