environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,FUNCT_1,XBOOLEAN,RELAT_1,TARSKI,BVFUNC_1;
notations TARSKI,XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,FUNCT_2,BVFUNC_1,CKB1,CKB2,CKB5,CKB6,CKB7,CKB8;
definitions TARSKI,MARGREL1,CKB1,CKB2,CKB5,CKB6;
theorems FUNCT_1,FUNCT_2,MARGREL1,BVFUNC_1,BVFUNC_4,BVFUNC_8,BVFUNC25,XBOOLEAN,CKB1,CKB2,CKB5,CKB6,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30;
schemes FUNCT_1;
registrations FUNCT_1,FUNCT_2,XBOOLEAN,MARGREL1,XBOOLE_0,CKB3,CKB4;
constructors BVFUNC_1,RELSET_1,CKB1,CKB2,CKB5,CKB6,CKB7,CKB8;
requirements SUBSET,BOOLE;
begin
reserve Y for non empty set;
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve b for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve c for (Element of ( Funcs (Y,( BOOLEAN )) ));
theorem
( ( a 'nand' b ) 'nand' ( a 'nand' c ) ) = ( a '&' ( b 'or' c ) )
proof
thus ( ( a 'nand' b ) 'nand' ( a 'nand' c ) ) = ( 'not' ( ( a 'nand' b ) '&' ( a 'nand' c ) ) ) by CKB9:1
.= ( 'not' ( ( 'not' ( a '&' b ) ) '&' ( a 'nand' c ) ) ) by CKB9:1
.= ( 'not' ( ( 'not' ( a '&' b ) ) '&' ( 'not' ( a '&' c ) ) ) ) by CKB9:1
.= ( ( 'not' ( 'not' ( a '&' b ) ) ) 'or' ( 'not' ( 'not' ( a '&' c ) ) ) ) by BVFUNC_1:14
.= ( a '&' ( b 'or' c ) ) by BVFUNC_1:12;
end;
