environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,FUNCT_1,XBOOLEAN,RELAT_1,TARSKI,BVFUNC_1;
notations TARSKI,XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,FUNCT_2,BVFUNC_1,CKB1,CKB2,CKB5,CKB6,CKB7,CKB8;
definitions TARSKI,MARGREL1,CKB1,CKB2,CKB5,CKB6;
theorems FUNCT_1,FUNCT_2,MARGREL1,BVFUNC_1,BVFUNC_4,BVFUNC_8,BVFUNC25,XBOOLEAN,CKB1,CKB2,CKB5,CKB6,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52;
schemes FUNCT_1;
registrations FUNCT_1,FUNCT_2,XBOOLEAN,MARGREL1,XBOOLE_0,CKB3,CKB4;
constructors BVFUNC_1,RELSET_1,CKB1,CKB2,CKB5,CKB6,CKB7,CKB8;
requirements SUBSET,BOOLE;
begin
reserve Y for non  empty set;
theorem
( ( O_el Y ) 'eqv' ( O_el Y ) ) = ( I_el Y )
proof
thus ( ( O_el Y ) 'eqv' ( O_el Y ) ) = ( 'not' ( ( O_el Y ) 'xor' ( O_el Y ) ) ) by BVFUNC25:12
.= ( 'not' ( O_el Y ) ) by BVFUNC25:13
.= ( I_el Y ) by BVFUNC_1:2;
end;
