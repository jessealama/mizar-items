environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,FUNCT_1,XBOOLEAN,RELAT_1,TARSKI,BVFUNC_1;
notations TARSKI,XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,FUNCT_2,BVFUNC_1;
definitions TARSKI,MARGREL1;
theorems FUNCT_1,FUNCT_2,MARGREL1,BVFUNC_1,BVFUNC_4,BVFUNC_8,BVFUNC25,XBOOLEAN;
schemes FUNCT_1;
registrations FUNCT_1,FUNCT_2,XBOOLEAN,MARGREL1,XBOOLE_0;
constructors BVFUNC_1,RELSET_1;
requirements SUBSET,BOOLE;
begin
definition
let p being  boolean-valued Function;
let q being  boolean-valued Function;
func p 'nand' q -> Function means 
:Def1: (( dom it ) = ( ( dom p ) /\ ( dom q ) ) & (for x being set holds (x in ( dom it ) implies ( it . x ) = ( ( p . x ) 'nand' ( q . x ) ))));
existence
proof
deffunc F(set) = ( ( p . $1 ) 'nand' ( q . $1 ) );
consider s being Function such that A1: (( dom s ) = ( ( dom p ) /\ ( dom q ) ) & (for x being set holds (x in ( ( dom p ) /\ ( dom q ) ) implies ( s . x ) = F(x)))) from FUNCT_1:sch 3;
take s;
thus thesis by A1;
end;
uniqueness
proof
let s1 being Function;
let s2 being Function;
assume that
A2: ( dom s1 ) = ( ( dom p ) /\ ( dom q ) )
and
A3: (for x being set holds (x in ( dom s1 ) implies ( s1 . x ) = ( ( p . x ) 'nand' ( q . x ) )))
and
A4: ( dom s2 ) = ( ( dom p ) /\ ( dom q ) )
and
A5: (for x being set holds (x in ( dom s2 ) implies ( s2 . x ) = ( ( p . x ) 'nand' ( q . x ) )));
(for x being set holds (x in ( dom s1 ) implies ( s1 . x ) = ( s2 . x )))
proof
let x being set;
assume A6: x in ( dom s1 );
then ( s1 . x ) = ( ( p . x ) 'nand' ( q . x ) ) by A3;
hence thesis by A2,A4,A5,A6;
end;
hence thesis by A2,A4,FUNCT_1:2;
end;
commutativity;
end;
