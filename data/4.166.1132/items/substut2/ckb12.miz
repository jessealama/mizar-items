environ
vocabularies NUMBERS,SUBSET_1,CQC_LANG,QC_LANG1,SUBSTUT1,MCART_1,MARGREL1,REALSET1,FINSEQ_1,ORDINAL4,XBOOLEAN,CARD_1,ZFMISC_1,RELAT_1,BVFUNC_2,XBOOLE_0,FUNCT_1,TARSKI,ZF_LANG,FUNCT_4,FUNCOP_1,CLASSES2,SUBLEMMA,PARTFUN1,CQC_SIM1,ARYTM_3,XXREAL_0,ARYTM_1,SUBSTUT2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSEQ_1,FUNCT_1,QC_LANG1,QC_LANG2,QC_LANG3,PARTFUN1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,CQC_LANG,FUNCOP_1,RELAT_1,FUNCT_4,FUNCT_2,CQC_SIM1,DOMAIN_1,MCART_1,SUBSTUT1,SUBLEMMA,CKB7;
definitions TARSKI,FUNCOP_1;
theorems TARSKI,FUNCT_1,MCART_1,XBOOLE_0,XBOOLE_1,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,PARTFUN1,RELSET_1,QC_LANG2,SUBSTUT1,FUNCT_4,SUBLEMMA,CQC_SIM1,FUNCT_2,NAT_1,INT_1,XREAL_1,XXREAL_0,FUNCOP_1,FINSEQ_1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11;
schemes CQC_LANG,NAT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,XXREAL_0,XREAL_0,NAT_1,INT_1,QC_LANG1,CQC_LANG,SUBSTUT1,SUBLEMMA,CARD_1;
constructors PARTFUN1,DOMAIN_1,XXREAL_0,NAT_1,INT_1,QC_LANG3,CQC_SIM1,SUBLEMMA,RELSET_1,CKB7;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve a for set;
reserve p for (Element of ( CQC-WFF ));
reserve x for bound_QC-variable;
reserve Sub for CQC_Substitution;
reserve S for (Element of ( CQC-Sub-WFF ));
reserve S1 for (Element of ( CQC-Sub-WFF ));
theorem
Th10: ((( S `2 ) = ( ( @ ( RestrictSub (x,( All (x,p) ),Sub) ) ) +* ( x | ( S_Bound [ ( All (x,p) ),Sub ] ) ) ) & ( S `1 ) = p) implies ([ S,x ] is  quantifiable & (ex S1 st S1 = [ ( All (x,p) ),Sub ])))
proof
set Sub1 = ( ( @ ( RestrictSub (x,( All (x,p) ),Sub) ) ) +* ( x | ( S_Bound [ ( All (x,p) ),Sub ] ) ) );
reconsider Sub as CQC_Substitution;
assume that
A1: ( S `2 ) = Sub1
and
A2: ( S `1 ) = p;
A3: (( [ S,x ] `2 ) = x & ( ( [ S,x ] `1 ) `1 ) = p) by A2,MCART_1:7;
A4: (( the_scope_of ( All (x,p) ) ) = p & ( All (x,p) ) is  universal) by QC_LANG1:def 19,QC_LANG2:7;
(Sub1 = ( ExpandSub (x,p,( RestrictSub (x,( All (x,p) ),Sub) )) ) & ( bound_in ( All (x,p) ) ) = x) by CKB11:1,QC_LANG2:7;
then ( All (x,p) ),Sub PQSub Sub1 by A4,SUBSTUT1:def 14;
then consider a such that A5: a = [ [ ( All (x,p) ),Sub ],Sub1 ] and A6: ( All (x,p) ),Sub PQSub Sub1;
a in ( QSub ) by A5,A6,SUBSTUT1:def 15;
then A7: ( ( QSub ) . [ ( All (x,p) ),Sub ] ) = Sub1 by A5,FUNCT_1:1;
A8: ( ( [ S,x ] `1 ) `2 ) = Sub1 by A1,MCART_1:7;
hence [ S,x ] is  quantifiable by A7,A3,SUBSTUT1:def 22;
A9: [ S,x ] is  quantifiable by A7,A8,A3,SUBSTUT1:def 22;
then reconsider Sub as (second_Q_comp of [ S,x ]) by A7,A8,A3,SUBSTUT1:def 23;
take S1 = ( CQCSub_All ([ S,x ],Sub) );
S1 = ( Sub_All ([ S,x ],Sub) ) by A9,SUBLEMMA:def 5;
hence thesis by A3,A9,SUBSTUT1:def 24;
end;
