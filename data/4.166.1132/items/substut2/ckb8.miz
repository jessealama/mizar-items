environ
vocabularies NUMBERS,SUBSET_1,CQC_LANG,QC_LANG1,SUBSTUT1,MCART_1,MARGREL1,REALSET1,FINSEQ_1,ORDINAL4,XBOOLEAN,CARD_1,ZFMISC_1,RELAT_1,BVFUNC_2,XBOOLE_0,FUNCT_1,TARSKI,ZF_LANG,FUNCT_4,FUNCOP_1,CLASSES2,SUBLEMMA,PARTFUN1,CQC_SIM1,ARYTM_3,XXREAL_0,ARYTM_1,SUBSTUT2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSEQ_1,FUNCT_1,QC_LANG1,QC_LANG2,QC_LANG3,PARTFUN1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,CQC_LANG,FUNCOP_1,RELAT_1,FUNCT_4,FUNCT_2,CQC_SIM1,DOMAIN_1,MCART_1,SUBSTUT1,SUBLEMMA,CKB7;
definitions TARSKI,FUNCOP_1;
theorems TARSKI,FUNCT_1,MCART_1,XBOOLE_0,XBOOLE_1,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,PARTFUN1,RELSET_1,QC_LANG2,SUBSTUT1,FUNCT_4,SUBLEMMA,CQC_SIM1,FUNCT_2,NAT_1,INT_1,XREAL_1,XXREAL_0,FUNCOP_1,FINSEQ_1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
schemes CQC_LANG,NAT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,XXREAL_0,XREAL_0,NAT_1,INT_1,QC_LANG1,CQC_LANG,SUBSTUT1,SUBLEMMA,CARD_1;
constructors PARTFUN1,DOMAIN_1,XXREAL_0,NAT_1,INT_1,QC_LANG3,CQC_SIM1,SUBLEMMA,RELSET_1,CKB7;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve b for set;
reserve p for (Element of ( CQC-WFF ));
reserve x for bound_QC-variable;
reserve y for bound_QC-variable;
reserve y1 for bound_QC-variable;
reserve Sub for CQC_Substitution;
theorem
Th6: ( dom ( RestrictSub (x,( All (x,p) ),Sub) ) ) misses { x }
proof
set finSub = ( RestrictSub (x,( All (x,p) ),Sub) );
now
set q = ( All (x,p) );
set X = { y1: (((y1 in ( still_not-bound_in q ) & y1 is (Element of ( dom Sub ))) & y1 <> x) & y1 <> ( Sub . y1 )) };
assume ( dom finSub ) meets { x };
then consider b such that A1: b in ( dom finSub ) and A2: b in { x } by XBOOLE_0:3;
finSub = ( Sub | X ) by SUBSTUT1:def 6;
then finSub = ( ( @ Sub ) | X ) by SUBSTUT1:def 2;
then ( @ finSub ) = ( ( @ Sub ) | X ) by SUBSTUT1:def 2;
then ( dom ( @ finSub ) ) = ( ( dom ( @ Sub ) ) /\ X ) by RELAT_1:61;
then A3: ( dom ( @ finSub ) ) c= X by XBOOLE_1:17;
b in ( dom ( @ finSub ) ) by A1,SUBSTUT1:def 2;
then b in X by A3;
then (ex y st ((((y = b & y in ( still_not-bound_in q )) & y is (Element of ( dom Sub ))) & y <> x) & y <> ( Sub . y )));
hence contradiction by A2,TARSKI:def 1;
end;
hence thesis;
end;
