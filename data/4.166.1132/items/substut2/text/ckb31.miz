environ
vocabularies NUMBERS,SUBSET_1,CQC_LANG,QC_LANG1,SUBSTUT1,MCART_1,MARGREL1,REALSET1,FINSEQ_1,ORDINAL4,XBOOLEAN,CARD_1,ZFMISC_1,RELAT_1,BVFUNC_2,XBOOLE_0,FUNCT_1,TARSKI,ZF_LANG,FUNCT_4,FUNCOP_1,CLASSES2,SUBLEMMA,PARTFUN1,CQC_SIM1,ARYTM_3,XXREAL_0,ARYTM_1,SUBSTUT2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSEQ_1,FUNCT_1,QC_LANG1,QC_LANG2,QC_LANG3,PARTFUN1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,CQC_LANG,FUNCOP_1,RELAT_1,FUNCT_4,FUNCT_2,CQC_SIM1,DOMAIN_1,MCART_1,SUBSTUT1,SUBLEMMA,CKB7,CKB15,CKB16,CKB17,CKB18,CKB24;
definitions TARSKI,FUNCOP_1,CKB18;
theorems TARSKI,FUNCT_1,MCART_1,XBOOLE_0,XBOOLE_1,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,PARTFUN1,RELSET_1,QC_LANG2,SUBSTUT1,FUNCT_4,SUBLEMMA,CQC_SIM1,FUNCT_2,NAT_1,INT_1,XREAL_1,XXREAL_0,FUNCOP_1,FINSEQ_1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB18,CKB21,CKB22,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30;
schemes CQC_LANG,NAT_1,CKB19,CKB20;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,XXREAL_0,XREAL_0,NAT_1,INT_1,QC_LANG1,CQC_LANG,SUBSTUT1,SUBLEMMA,CARD_1;
constructors PARTFUN1,DOMAIN_1,XXREAL_0,NAT_1,INT_1,QC_LANG3,CQC_SIM1,SUBLEMMA,RELSET_1,CKB7,CKB15,CKB17,CKB18,CKB24;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve a for set;
reserve b for set;
reserve b1 for set;
reserve Sub for CQC_Substitution;
definition
func CFQ -> (Function of ( CQC-Sub-WFF ),( vSUB ))
equals
( ( QSub ) | ( CQC-Sub-WFF ) );
coherence
proof
now
let a;
assume a in ( CQC-Sub-WFF );
then consider p being (Element of ( QC-WFF )),Sub such that A1: a = [ p,Sub ] by SUBSTUT1:8;
A2:now
set b = ( {} );
assume (not p is  universal);
then p,Sub PQSub b by SUBSTUT1:def 14;
then [ [ p,Sub ],b ] in ( QSub ) by SUBSTUT1:def 15;
hence a in ( dom ( QSub ) ) by A1,FUNCT_1:1;
end;
now
set b = ( ExpandSub (( bound_in p ),( the_scope_of p ),( RestrictSub (( bound_in p ),p,Sub) )) );
assume p is  universal;
then p,Sub PQSub b by SUBSTUT1:def 14;
then [ [ p,Sub ],b ] in ( QSub ) by SUBSTUT1:def 15;
hence a in ( dom ( QSub ) ) by A1,FUNCT_1:1;
end;
hence a in ( dom ( QSub ) ) by A2;
end;
then ( CQC-Sub-WFF ) c= ( dom ( QSub ) ) by TARSKI:def 3;
then A3: ( dom ( ( QSub ) | ( CQC-Sub-WFF ) ) ) = ( CQC-Sub-WFF ) by RELAT_1:62;
( rng ( ( QSub ) | ( CQC-Sub-WFF ) ) ) c= ( vSUB )
proof
let b;
assume b in ( rng ( ( QSub ) | ( CQC-Sub-WFF ) ) );
then consider a such that A4: (a in ( dom ( ( QSub ) | ( CQC-Sub-WFF ) ) ) & ( ( ( QSub ) | ( CQC-Sub-WFF ) ) . a ) = b) by FUNCT_1:def 3;
A5: ( ( QSub ) | ( CQC-Sub-WFF ) ) c= ( QSub ) by RELAT_1:59;
[ a,b ] in ( ( QSub ) | ( CQC-Sub-WFF ) ) by A4,FUNCT_1:1;
then consider p being (Element of ( QC-WFF )),Sub,b1 such that A6: [ a,b ] = [ [ p,Sub ],b1 ] and A7: p,Sub PQSub b1 by A5,SUBSTUT1:def 15;
A8:now
assume (not p is  universal);
then b1 = ( {} ) by A7,SUBSTUT1:def 14;
then b1 is (PartFunc of ( bound_QC-variables ),( bound_QC-variables )) by RELSET_1:12;
then b1 is CQC_Substitution by PARTFUN1:45,SUBSTUT1:def 1;
hence b is CQC_Substitution by A6,ZFMISC_1:27;
end;
now
assume p is  universal;
then b1 = ( ExpandSub (( bound_in p ),( the_scope_of p ),( RestrictSub (( bound_in p ),p,Sub) )) ) by A7,SUBSTUT1:def 14;
hence b is CQC_Substitution by A6,ZFMISC_1:27;
end;
hence thesis by A8;
end;
hence thesis by A3,FUNCT_2:2;
end;
end;
