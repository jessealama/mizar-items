environ
vocabularies NUMBERS,SUBSET_1,CQC_LANG,QC_LANG1,SUBSTUT1,MCART_1,MARGREL1,REALSET1,FINSEQ_1,ORDINAL4,XBOOLEAN,CARD_1,ZFMISC_1,RELAT_1,BVFUNC_2,XBOOLE_0,FUNCT_1,TARSKI,ZF_LANG,FUNCT_4,FUNCOP_1,CLASSES2,SUBLEMMA,PARTFUN1,CQC_SIM1,ARYTM_3,XXREAL_0,ARYTM_1,SUBSTUT2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSEQ_1,FUNCT_1,QC_LANG1,QC_LANG2,QC_LANG3,PARTFUN1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,CQC_LANG,FUNCOP_1,RELAT_1,FUNCT_4,FUNCT_2,CQC_SIM1,DOMAIN_1,MCART_1,SUBSTUT1,SUBLEMMA,CKB7,CKB15,CKB16,CKB17,CKB18,CKB24;
definitions TARSKI,FUNCOP_1,CKB18;
theorems TARSKI,FUNCT_1,MCART_1,XBOOLE_0,XBOOLE_1,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,PARTFUN1,RELSET_1,QC_LANG2,SUBSTUT1,FUNCT_4,SUBLEMMA,CQC_SIM1,FUNCT_2,NAT_1,INT_1,XREAL_1,XXREAL_0,FUNCOP_1,FINSEQ_1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB18,CKB21,CKB22,CKB23,CKB25,CKB26,CKB27,CKB28;
schemes CQC_LANG,NAT_1,CKB19,CKB20;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,XXREAL_0,XREAL_0,NAT_1,INT_1,QC_LANG1,CQC_LANG,SUBSTUT1,SUBLEMMA,CARD_1;
constructors PARTFUN1,DOMAIN_1,XXREAL_0,NAT_1,INT_1,QC_LANG3,CQC_SIM1,SUBLEMMA,RELSET_1,CKB7,CKB15,CKB17,CKB18,CKB24;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve p for (Element of ( CQC-WFF ));
reserve q for (Element of ( CQC-WFF ));
reserve x for bound_QC-variable;
reserve y for bound_QC-variable;
theorem
(( ( p '&' q ) . (x,y) ) = ( ( p . (x,y) ) '&' ( q . (x,y) ) ) & ((( QuantNbr p ) = ( QuantNbr ( p . (x,y) ) ) & ( QuantNbr q ) = ( QuantNbr ( q . (x,y) ) )) implies ( QuantNbr ( p '&' q ) ) = ( QuantNbr ( ( p '&' q ) . (x,y) ) )))
proof
set S = [ ( p '&' q ),( Sbst (x,y) ) ];
set S1 = [ p,( Sbst (x,y) ) ];
set S2 = [ q,( Sbst (x,y) ) ];
A1: (( S1 `2 ) = ( Sbst (x,y) ) & ( S2 `2 ) = ( Sbst (x,y) )) by MCART_1:7;
S = ( CQCSub_& (S1,S2) ) by CKB28:1;
then A2: S = ( Sub_& (S1,S2) ) by A1,SUBLEMMA:def 3;
then A3: ( ( p '&' q ) . (x,y) ) = ( ( CQC_Sub S1 ) '&' ( CQC_Sub S2 ) ) by A1,SUBSTUT1:31;
((( QuantNbr p ) = ( QuantNbr ( p . (x,y) ) ) & ( QuantNbr q ) = ( QuantNbr ( q . (x,y) ) )) implies ( QuantNbr ( p '&' q ) ) = ( QuantNbr ( ( p '&' q ) . (x,y) ) ))
proof
assume A4: (( QuantNbr p ) = ( QuantNbr ( p . (x,y) ) ) & ( QuantNbr q ) = ( QuantNbr ( q . (x,y) ) ));
( QuantNbr ( ( p '&' q ) . (x,y) ) ) = ( ( QuantNbr ( p . (x,y) ) ) + ( QuantNbr ( q . (x,y) ) ) ) by A3,CQC_SIM1:17;
hence thesis by A4,CQC_SIM1:17;
end;
hence thesis by A1,A2,SUBSTUT1:31;
end;
