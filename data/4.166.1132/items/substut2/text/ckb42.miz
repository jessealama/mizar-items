environ
vocabularies NUMBERS,SUBSET_1,CQC_LANG,QC_LANG1,SUBSTUT1,MCART_1,MARGREL1,REALSET1,FINSEQ_1,ORDINAL4,XBOOLEAN,CARD_1,ZFMISC_1,RELAT_1,BVFUNC_2,XBOOLE_0,FUNCT_1,TARSKI,ZF_LANG,FUNCT_4,FUNCOP_1,CLASSES2,SUBLEMMA,PARTFUN1,CQC_SIM1,ARYTM_3,XXREAL_0,ARYTM_1,SUBSTUT2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSEQ_1,FUNCT_1,QC_LANG1,QC_LANG2,QC_LANG3,PARTFUN1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,CQC_LANG,FUNCOP_1,RELAT_1,FUNCT_4,FUNCT_2,CQC_SIM1,DOMAIN_1,MCART_1,SUBSTUT1,SUBLEMMA,CKB7,CKB15,CKB16,CKB17,CKB18,CKB24,CKB31,CKB32,CKB33,CKB40;
definitions TARSKI,FUNCOP_1,CKB18,CKB31,CKB32,CKB33,CKB40;
theorems TARSKI,FUNCT_1,MCART_1,XBOOLE_0,XBOOLE_1,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,PARTFUN1,RELSET_1,QC_LANG2,SUBSTUT1,FUNCT_4,SUBLEMMA,CQC_SIM1,FUNCT_2,NAT_1,INT_1,XREAL_1,XXREAL_0,FUNCOP_1,FINSEQ_1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB18,CKB21,CKB22,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB40,CKB41;
schemes CQC_LANG,NAT_1,CKB19,CKB20,CKB39;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,XXREAL_0,XREAL_0,NAT_1,INT_1,QC_LANG1,CQC_LANG,SUBSTUT1,SUBLEMMA,CARD_1;
constructors PARTFUN1,DOMAIN_1,XXREAL_0,NAT_1,INT_1,QC_LANG3,CQC_SIM1,SUBLEMMA,RELSET_1,CKB7,CKB15,CKB17,CKB18,CKB24,CKB31,CKB32,CKB33,CKB40;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve i for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve p for (Element of ( CQC-WFF ));
reserve x for bound_QC-variable;
reserve F1 for QC-formula;
reserve L for FinSequence;
theorem
Th28: (for L being (PATH of F1,p) holds (((F1 is_subformula_of p & 1 <= i) & i <= ( len L )) implies ( L . i ) is (Element of ( CQC-WFF ))))
proof
let L being (PATH of F1,p);
set n = ( len L );
assume that
A1: F1 is_subformula_of p
and
A2: 1 <= i
and
A3: i <= n;
( n + 1 ) <= ( n + i ) by A2,XREAL_1:6;
then ( ( n + 1 ) + ( - 1 ) ) <= ( ( n + i ) + ( - 1 ) ) by XREAL_1:6;
then A4: ( n + ( - i ) ) <= ( ( ( n - 1 ) + i ) + ( - i ) ) by XREAL_1:6;
( i + ( - i ) ) <= ( n + ( - i ) ) by A3,XREAL_1:6;
then reconsider l = ( n - i ) as (Element of ( NAT )) by INT_1:3;
defpred P[ (Element of ( NAT )) ]
 means
($1 <= ( n - 1 ) implies ( L . ( n - $1 ) ) is (Element of ( CQC-WFF )));
A5: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume that
A6: P[ k ];
assume A7: ( k + 1 ) <= ( n - 1 );
then ( ( k + 1 ) + 1 ) <= ( ( n - 1 ) + 1 ) by XREAL_1:6;
then A8: ( ( 2 + k ) + ( - k ) ) <= ( n + ( - k ) ) by XREAL_1:6;
then reconsider j = ( n - k ) as (Element of ( NAT )) by INT_1:3;
k < ( k + 1 ) by NAT_1:13;
then reconsider q = ( L . j ) as (Element of ( CQC-WFF )) by A6,A7,XXREAL_0:2;
n <= ( n + k ) by NAT_1:11;
then ( n + ( - k ) ) <= ( ( n + k ) + ( - k ) ) by XREAL_1:6;
then A9: ( j - 1 ) < n by XREAL_1:146,XXREAL_0:2;
A10: ( ( 1 + 1 ) + ( - 1 ) ) <= ( j + ( - 1 ) ) by A8,XREAL_1:6;
then reconsider j1 = ( j - 1 ) as (Element of ( NAT )) by INT_1:3;
( j1 + 1 ) = j;
then consider G1,H1 being (Element of ( QC-WFF )) such that A11: ( L . j1 ) = G1 and A12: (q = H1 & G1 is_immediate_constituent_of H1) by A1,A10,A9,CKB40:def 1;
A13: ((ex F being (Element of ( QC-WFF )) st q = ( G1 '&' F )) implies thesis) by A11,CQC_LANG:9;
A14: ((ex x st q = ( All (x,G1) )) implies thesis) by A11,CQC_LANG:13;
A15: ((ex F being (Element of ( QC-WFF )) st q = ( F '&' G1 )) implies thesis) by A11,CQC_LANG:9;
(q = ( 'not' G1 ) implies thesis) by A11,CQC_LANG:8;
hence thesis by A12,A13,A15,A14,QC_LANG2:def 19;
end;
A16: P[ ( 0 ) ] by A1,CKB40:def 1;
(for k holds P[ k ]) from NAT_1:sch 1(A16,A5);
then ( L . ( n - l ) ) is (Element of ( CQC-WFF )) by A4;
hence thesis;
end;
