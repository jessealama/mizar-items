environ
vocabularies WAYBEL_0,ORDINAL2,SUBSET_1,WAYBEL_3,CARD_FIL,XXREAL_0,TARSKI,XBOOLE_0,YELLOW_0,LATTICE3,LATTICES,YELLOW_2,WAYBEL_1,YELLOW_1,RELAT_1,FUNCT_1,STRUCT_0,REWRITE1,PBOOLE,FUNCOP_1,FUNCT_6,CARD_3,FINSEQ_4,ORDERS_2,YELLOW_6,CLASSES1,CLASSES2,ZFMISC_1,FUNCT_5,EQREL_1,FUNCT_2,FINSUB_1,FINSET_1,ORDERS_1,RELAT_2,LATTICE2,CAT_1,XBOOLEAN,PARTFUN1,MEMBER_1,SEQM_3,WAYBEL_5,CARD_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FINSET_1,FINSUB_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCT_4,FUNCT_5,FUNCT_6,FUNCOP_1,ORDERS_1,DOMAIN_1,STRUCT_0,ORDERS_2,LATTICE3,CARD_3,PBOOLE,PRALG_1,PRALG_2,MSUALG_3,CLASSES1,CLASSES2,YELLOW_0,YELLOW_1,YELLOW_2,WAYBEL_1,WAYBEL_0,WAYBEL_3,YELLOW_6,CKB10,CKB11,CKB13;
definitions TARSKI,LATTICE3,BINOP_1,STRUCT_0;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,FUNCT_5,CARD_3,ORDERS_2,LATTICE3,FUNCT_6,FUNCOP_1,PBOOLE,PRALG_1,PRALG_2,MSUALG_3,RELAT_1,FINSUB_1,YELLOW_0,YELLOW_1,YELLOW_2,WAYBEL_1,WAYBEL_0,WAYBEL_3,CLASSES2,YELLOW_6,CLASSES1,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCT_4,ORDERS_1,STRUCT_0,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12;
schemes FUNCT_1,FUNCT_2,MSSUBFAM,DOMAIN_1,BINOP_1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCOP_1,FUNCT_4,FINSET_1,CARD_3,CLASSES2,PBOOLE,STRUCT_0,ORDERS_2,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,WAYBEL_3,YELLOW_6,PRALG_1,CARD_1,ORDINAL1,CKB14;
constructors FINSUB_1,CLASSES1,CLASSES2,BORSUK_1,LATTICE3,PRALG_1,PRALG_2,MSUALG_3,ORDERS_3,WAYBEL_1,WAYBEL_3,YELLOW_6,CKB13;
requirements SUBSET,BOOLE,NUMERALS;
begin
registration
let J being set;
let D being non empty set;
let K being  non-empty (ManySortedSet of J);
cluster  ->  non-empty for (DoubleIndexedSet of K,D);
correctness
proof
let F being (DoubleIndexedSet of K,D);
(for j being set holds (j in ( dom F ) implies ( F . j ) is non empty))
proof
let j being set;
set k = the (Element of ( K . j ));
assume j in ( dom F );
then A1: j in J by PARTFUN1:def 2;
then ( F . j ) is (Function of ( K . j ),D) by CKB12:1;
then ( dom ( F . j ) ) = ( K . j ) by FUNCT_2:def 1;
then [ k,( ( F . j ) . k ) ] in ( F . j ) by A1,FUNCT_1:def 2;
hence thesis;
end;
hence thesis by FUNCT_1:def 9;
end;
end;
