environ
vocabularies WAYBEL_0,ORDINAL2,SUBSET_1,WAYBEL_3,CARD_FIL,XXREAL_0,TARSKI,XBOOLE_0,YELLOW_0,LATTICE3,LATTICES,YELLOW_2,WAYBEL_1,YELLOW_1,RELAT_1,FUNCT_1,STRUCT_0,REWRITE1,PBOOLE,FUNCOP_1,FUNCT_6,CARD_3,FINSEQ_4,ORDERS_2,YELLOW_6,CLASSES1,CLASSES2,ZFMISC_1,FUNCT_5,EQREL_1,FUNCT_2,FINSUB_1,FINSET_1,ORDERS_1,RELAT_2,LATTICE2,CAT_1,XBOOLEAN,PARTFUN1,MEMBER_1,SEQM_3,WAYBEL_5,CARD_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FINSET_1,FINSUB_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCT_4,FUNCT_5,FUNCT_6,FUNCOP_1,ORDERS_1,DOMAIN_1,STRUCT_0,ORDERS_2,LATTICE3,CARD_3,PBOOLE,PRALG_1,PRALG_2,MSUALG_3,CLASSES1,CLASSES2,YELLOW_0,YELLOW_1,YELLOW_2,WAYBEL_1,WAYBEL_0,WAYBEL_3,YELLOW_6,CKB10,CKB11,CKB13,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30;
definitions TARSKI,LATTICE3,BINOP_1,STRUCT_0,CKB25,CKB26;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,FUNCT_5,CARD_3,ORDERS_2,LATTICE3,FUNCT_6,FUNCOP_1,PBOOLE,PRALG_1,PRALG_2,MSUALG_3,RELAT_1,FINSUB_1,YELLOW_0,YELLOW_1,YELLOW_2,WAYBEL_1,WAYBEL_0,WAYBEL_3,CLASSES2,YELLOW_6,CLASSES1,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCT_4,ORDERS_1,STRUCT_0,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB25,CKB26;
schemes FUNCT_1,FUNCT_2,MSSUBFAM,DOMAIN_1,BINOP_1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCOP_1,FUNCT_4,FINSET_1,CARD_3,CLASSES2,PBOOLE,STRUCT_0,ORDERS_2,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,WAYBEL_3,YELLOW_6,PRALG_1,CARD_1,ORDINAL1,CKB14,CKB15,CKB22;
constructors FINSUB_1,CLASSES1,CLASSES2,BORSUK_1,LATTICE3,PRALG_1,PRALG_2,MSUALG_3,ORDERS_3,WAYBEL_1,WAYBEL_3,YELLOW_6,CKB13,CKB23,CKB24,CKB25,CKB26;
requirements SUBSET,BOOLE,NUMERALS;
begin
reserve x for set;
theorem
Th11: (for L being non empty RelStr holds (for F,G being  Function-yielding Function holds ((( dom F ) = ( dom G ) & (for x holds (x in ( dom F ) implies ( \\/ (( F . x ),L) ) = ( \\/ (( G . x ),L) )))) implies ( \// (F,L) ) = ( \// (G,L) ))))
proof
let L being non empty RelStr;
let F being  Function-yielding Function,G being  Function-yielding Function;
assume that
A1: ( dom F ) = ( dom G )
and
A2: (for x holds (x in ( dom F ) implies ( \\/ (( F . x ),L) ) = ( \\/ (( G . x ),L) )));
A3: (for x holds (x in ( dom F ) implies ( ( \// (F,L) ) . x ) = ( ( \// (G,L) ) . x )))
proof
let x;
assume A4: x in ( dom F );
hence ( ( \// (F,L) ) . x ) = ( \\/ (( F . x ),L) ) by CKB25:def 1
.= ( \\/ (( G . x ),L) ) by A2,A4
.= ( ( \// (G,L) ) . x ) by A1,A4,CKB25:def 1;
end;
(( dom ( \// (F,L) ) ) = ( dom F ) & ( dom ( \// (G,L) ) ) = ( dom G )) by FUNCT_2:def 1;
hence thesis by A1,A3,FUNCT_1:2;
end;
