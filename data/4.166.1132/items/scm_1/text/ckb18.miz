environ
vocabularies NUMBERS,INT_1,FINSEQ_1,SUBSET_1,FSM_1,AMI_3,PARTFUN1,AMI_1,SCMNORM,RELAT_1,FUNCT_1,CIRCUIT2,MSUALG_1,ARYTM_3,XXREAL_0,CARD_1,TARSKI,AFINSQ_1,AMI_2,ORDINAL4,GRAPHSP,ARYTM_1,SCM_1,STRUCT_0,ORDINAL1,RECDEF_2,FUNCT_4,CAT_1;
notations TARSKI,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,INT_1,VALUED_1,MCART_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,XXREAL_0,AFINSQ_1,FUNCT_4,RECDEF_2,AMI_2,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_3,CKB1,CKB2;
definitions TARSKI,AFINSQ_1,COMPOS_1,EXTPRO_1,NAT_1,AMI_3,FUNCOP_1,RELAT_1,FUNCT_1,MEMSTR_0,CKB2;
theorems NAT_1,INT_1,FUNCT_1,FUNCT_2,FINSEQ_1,AMI_2,AMI_3,FINSEQ_3,RELSET_1,RELAT_1,AFINSQ_1,PARTFUN1,RECDEF_2,COMPOS_1,FUNCT_4,FUNCOP_1,TARSKI,EXTPRO_1,GRFUNC_1,CARD_1,XCMPLX_1,MEMSTR_0,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes PARTFUN1;
registrations XBOOLE_0,SETFAM_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,AMI_3,AMI_2,AFINSQ_1,RELAT_1,COMPOS_1,PBOOLE,FINSEQ_1,STRUCT_0,VALUED_0,FUNCT_4,MEMSTR_0,CKB3;
constructors XXREAL_0,AMI_3,RELSET_1,AMI_2,AFINSQ_1,ORDINAL4,PRE_POLY,RECDEF_2,AMISTD_2,MEMSTR_0,CKB1,CKB2;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve F for  total ( NAT ) -defined (the Instructions of ( SCM )) -valued Function;
theorem
(for F being  total ( NAT ) -defined (the Instructions of ( SCM )) -valued Function holds (<% ( halt ( SCM ) ) %> c= F implies (for s being ( 0 ) -started (State-consisting of ( 0 ),( <*> ( INT ) )) holds ((F halts_on s & ( LifeSpan (F,s) ) = ( 0 )) & ( Result (F,s) ) = s))))
proof
let F being  total ( NAT ) -defined (the Instructions of ( SCM )) -valued Function;
assume that
A1: <% ( halt ( SCM ) ) %> c= F;
let s being ( 0 ) -started (State-consisting of ( 0 ),( <*> ( INT ) ));
1 = ( dom <% ( halt ( SCM ) ) %> ) by AFINSQ_1:33;
then ( 0 ) in ( dom <% ( halt ( SCM ) ) %> ) by CARD_1:49,TARSKI:def 1;
then A2: ( F . ( ( 0 ) + ( 0 ) ) ) = ( <% ( halt ( SCM ) ) %> . ( 0 ) ) by A1,GRFUNC_1:2
.= ( halt ( SCM ) ) by AFINSQ_1:34;
A3: s = ( Comput (F,s,( 0 )) ) by EXTPRO_1:2;
( F . ( IC s ) ) = ( halt ( SCM ) ) by A2,MEMSTR_0:def 8;
hence A4: F halts_on s by A3,EXTPRO_1:30;
( dom F ) = ( NAT ) by PARTFUN1:def 2;
then ( CurInstr (F,s) ) = ( F . ( IC s ) ) by PARTFUN1:def 6
.= ( halt ( SCM ) ) by A2,MEMSTR_0:def 8;
hence ( LifeSpan (F,s) ) = ( 0 ) by A4,A3,EXTPRO_1:def 15;
( IC s ) = ( 0 ) by MEMSTR_0:def 8;
hence thesis by A2,A3,EXTPRO_1:31;
end;
