environ
vocabularies NUMBERS,SUBSET_1,REAL_1,INTEGRA1,FINSEQ_1,ORDINAL4,CARD_3,ARYTM_1,ARYTM_3,BINOP_2,RELAT_1,FUNCT_1,PARTFUN1,XXREAL_0,FINSEQ_2,NAT_1,XBOOLE_0,REALSET1,VALUED_1,TARSKI,XXREAL_2,XREAL_0,ORDINAL1,ORDINAL2,FCONT_2,INTEGRA2,FUNCT_3,SEQ_2,CARD_1,SEQ_1,COMPLEX1,MEASURE7,FDIFF_1,SEQ_4,XXREAL_1,ZFMISC_1,VALUED_0,SEQM_3,RCOMP_1,INTEGRA5,MEASURE5;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,RELAT_1,COMPLEX1,XXREAL_2,ZFMISC_1,RELSET_1,FUNCT_2,RCOMP_1,PARTFUN1,MEASURE6,FINSEQ_1,FUNCOP_1,VALUED_1,SEQ_1,RFUNCT_1,FINSEQ_2,SEQ_2,SEQ_4,BINOP_2,REAL_1,NAT_1,FDIFF_1,RVSUM_1,MEASURE5,INTEGRA1,INTEGRA2,INTEGRA3,FCONT_1,FCONT_2,RFUNCT_2,XXREAL_0;
definitions VALUED_1,XXREAL_2;
theorems SEQ_4,SUBSET_1,PARTFUN1,INTEGRA1,RFUNCT_1,FUNCT_1,FINSEQ_1,RVSUM_1,SEQ_1,SEQ_2,FDIFF_1,ABSVALUE,NAT_1,TARSKI,INTEGRA2,NAT_2,FINSEQ_2,RCOMP_1,FCONT_2,INTEGRA4,FCONT_1,ROLLE,RFUNCT_2,FDIFF_2,RELAT_1,XREAL_0,FUNCT_2,XBOOLE_0,XBOOLE_1,XCMPLX_1,XREAL_1,XXREAL_0,ORDINAL1,VALUED_1,XXREAL_2,XXREAL_1,RELSET_1,INTEGRA3,MEASURE5;
schemes FINSEQ_2;
registrations XBOOLE_0,RELAT_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,FINSEQ_1,FINSEQ_2,RCOMP_1,INTEGRA1,VALUED_0,VALUED_1,FUNCT_2,FINSET_1,XXREAL_2,CARD_1,SEQ_2,RELSET_1,ZFMISC_1,MEASURE5;
constructors PARTFUN1,REAL_1,NAT_1,BINOP_2,COMPLEX1,RFUNCT_1,RFUNCT_2,FCONT_1,FCONT_2,FDIFF_1,ZFMISC_1,MEASURE6,INTEGRA2,SEQ_1,XXREAL_2,RVSUM_1,SEQ_4,RELSET_1,FUNCOP_1,SEQ_2,INTEGRA3;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
reserve k for (Element of ( NAT ));
reserve r1 for Real;
reserve r2 for Real;
theorem
Th1: (for F,F1,F2 being (FinSequence of ( REAL )) holds (for r1 holds (for r2 holds (((F1 = ( <* r1 *> ^ F ) or F1 = ( F ^ <* r1 *> )) & (F2 = ( <* r2 *> ^ F ) or F2 = ( F ^ <* r2 *> ))) implies ( Sum ( F1 - F2 ) ) = ( r1 - r2 )))))
proof
let F being (FinSequence of ( REAL )),F1 being (FinSequence of ( REAL )),F2 being (FinSequence of ( REAL ));
let r1;
let r2;
assume that
A1: (F1 = ( <* r1 *> ^ F ) or F1 = ( F ^ <* r1 *> ))
and
A2: (F2 = ( <* r2 *> ^ F ) or F2 = ( F ^ <* r2 *> ));
( len F1 ) = ( ( len F ) + ( len <* r1 *> ) ) by A1,FINSEQ_1:22;
then A3: ( len F1 ) = ( ( len F ) + 1 ) by FINSEQ_1:39;
( len F2 ) = ( ( len <* r2 *> ) + ( len F ) ) by A2,FINSEQ_1:22;
then A4: ( len F2 ) = ( 1 + ( len F ) ) by FINSEQ_1:39;
( F1 - F2 ) = ( ( diffreal ) .: (F1,F2) ) by RVSUM_1:def 6;
then A5: ( len F1 ) = ( len ( F1 - F2 ) ) by A3,A4,FINSEQ_2:72;
(for k holds (k in ( dom F1 ) implies ( ( F1 - F2 ) . k ) = ( ( F1 /. k ) - ( F2 /. k ) )))
proof
let k;
assume A6: k in ( dom F1 );
then A7: ( F1 . k ) = ( F1 /. k ) by PARTFUN1:def 6;
A8: k in ( Seg ( len F1 ) ) by A6,FINSEQ_1:def 3;
then k in ( dom F2 ) by A3,A4,FINSEQ_1:def 3;
then A9: ( F2 . k ) = ( F2 /. k ) by PARTFUN1:def 6;
k in ( dom ( F1 - F2 ) ) by A5,A8,FINSEQ_1:def 3;
hence thesis by A7,A9,VALUED_1:13;
end;
then A10: ( Sum ( F1 - F2 ) ) = ( ( Sum F1 ) - ( Sum F2 ) ) by A3,A4,A5,INTEGRA1:22;
(( Sum F1 ) = ( r1 + ( Sum F ) ) & ( Sum F2 ) = ( ( Sum F ) + r2 )) by A1,A2,RVSUM_1:74,RVSUM_1:76;
hence thesis by A10;
end;
