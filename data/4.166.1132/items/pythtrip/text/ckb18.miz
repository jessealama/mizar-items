environ
vocabularies NUMBERS,SUBSET_1,INT_1,NAT_1,ARYTM_3,INT_2,CARD_1,XXREAL_0,ORDINAL1,SQUARE_1,ABIAN,RELAT_1,ARYTM_1,FINSET_1,FUNCT_1,XBOOLE_0,COMPLEX1,TARSKI,PYTHTRIP;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,FINSET_1,NUMBERS,XCMPLX_0,XXREAL_0,INT_1,INT_2,NAT_1,NAT_D,SQUARE_1,ABIAN,PEPIN,DOMAIN_1,RELAT_1,FUNCT_1,LIMFUNC1,ORDINAL1,CKB1,CKB2,CKB3;
definitions INT_1,INT_2,SQUARE_1,RELAT_1,ABIAN,CKB1,CKB2,CKB3;
theorems SQUARE_1,NAT_1,INT_2,WSIERP_1,EULER_2,ABIAN,EULER_1,PEPIN,INT_1,ENUMSET1,FINSET_1,TARSKI,RELAT_1,FUNCT_1,ORDINAL1,ZFMISC_1,XBOOLE_0,XCMPLX_1,NEWTON,XREAL_1,COMPLEX1,XXREAL_0,PREPOWER,NAT_D,CKB1,CKB2,CKB3,CKB11,CKB15,CKB16,CKB17;
schemes NAT_1;
registrations ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,NEWTON,ABIAN,XBOOLE_0,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14;
constructors DOMAIN_1,REAL_1,NAT_1,NAT_D,LIMFUNC1,ABIAN,PEPIN,VALUED_1,CKB3;
requirements SUBSET,BOOLE,NUMERALS,REAL,ARITHM;
begin
reserve m for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve n9 for (Element of ( NAT ));
registration
let m being  odd  square Integer;
let n being  odd  square Integer;
cluster ( m + n ) -> non  square;
coherence
proof
reconsider n99 = n as (Element of ( NAT )) by ORDINAL1:def 12;
reconsider m99 = m as (Element of ( NAT )) by ORDINAL1:def 12;
consider m9 being Nat such that A1: m = ( m9 ^2 ) by CKB3:def 1;
A2: m9 is  odd by A1;
consider n9 being Nat such that A3: n = ( n9 ^2 ) by CKB3:def 1;
A4: n9 is  odd by A3;
A5: ( ( m99 + n99 ) mod 4 ) = ( ( ( m99 mod 4 ) + ( n99 mod 4 ) ) mod 4 ) by EULER_2:6
.= ( ( 1 + ( n99 mod 4 ) ) mod 4 ) by A1,A2,CKB17:1
.= ( ( 1 + 1 ) mod 4 ) by A3,A4,CKB17:1
.= 2 by NAT_D:24;
hereby
assume ( m + n ) is  square;
then consider mn9 being Nat such that A6: ( m + n ) = ( mn9 ^2 ) by CKB3:def 1;
mn9 is  even by A6;
hence contradiction by A5,A6,CKB16:1;
end;
end;
end;
