environ
vocabularies XBOOLE_0,ANALOAF,SUBSET_1,DIRAF,PARSP_2,FDIFF_1,SEMI_AF1;
notations STRUCT_0,ANALOAF,DIRAF;
theorems PARDEPAP,DIRAF;
registrations ANALOAF,STRUCT_0;
constructors DIRAF;
begin
definition
let IT being non  empty AffinStruct;
attr IT is  Semi_Affine_Space-like
means
:Def1: (((((((((((for a,b being (Element of IT) holds a,b // b,a) & (for a,b,c being (Element of IT) holds a,b // c,c)) & (for a,b,p,q,r,s being (Element of IT) holds (((a <> b & a,b // p,q) & a,b // r,s) implies p,q // r,s))) & (for a,b,c being (Element of IT) holds (a,b // a,c implies b,a // b,c))) & (ex a,b,c being (Element of IT) st (not a,b // a,c))) & (for a,b,p being (Element of IT) holds (ex q being (Element of IT) st (a,b // p,q & a,p // b,q)))) & (for o,a being (Element of IT) holds (ex p being (Element of IT) st (for b,c being (Element of IT) holds (o,a // o,p & (ex d being (Element of IT) st (o,p // o,b implies (o,c // o,d & p,c // b,d)))))))) & (for o,a,a9,b,b9,c,c9 being (Element of IT) holds ((((((((not o,a // o,b) & (not o,a // o,c)) & o,a // o,a9) & o,b // o,b9) & o,c // o,c9) & a,b // a9,b9) & a,c // a9,c9) implies b,c // b9,c9))) & (for a,a9,b,b9,c,c9 being (Element of IT) holds (((((((not a,a9 // a,b) & (not a,a9 // a,c)) & a,a9 // b,b9) & a,a9 // c,c9) & a,b // a9,b9) & a,c // a9,c9) implies b,c // b9,c9))) & (for a1,a2,a3,b1,b2,b3 being (Element of IT) holds ((((a1,a2 // a1,a3 & b1,b2 // b1,b3) & a1,b2 // a2,b1) & a2,b3 // a3,b2) implies a3,b1 // a1,b3))) & (for a,b,c,d being (Element of IT) holds ((((not a,b // a,c) & a,b // c,d) & a,c // b,d) implies (not a,d // b,c))));
end;
