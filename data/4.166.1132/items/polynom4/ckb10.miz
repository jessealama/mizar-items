environ
vocabularies NUMBERS,XBOOLE_0,FINSEQ_1,SUBSET_1,XXREAL_0,RELAT_1,ARYTM_1,ORDINAL4,FUNCT_1,RFINSEQ,ALGSTR_1,ALGSTR_0,VECTSP_1,SUPINF_2,ARYTM_3,VECTSP_2,BINOP_1,MESFUNC1,STRUCT_0,RLVECT_1,LATTICES,GROUP_1,ZFMISC_1,NAT_1,POLYNOM3,CARD_3,CARD_1,ALGSEQ_1,POLYNOM1,TARSKI,PARTFUN1,FUNCT_4,POLYNOM2,FINSEQ_2,MSSUBFAM,QUOFIELD,POLYNOM4;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,FINSEQ_1,NAT_1,STRUCT_0,ALGSTR_0,FINSEQ_2,FUNCT_7,RFINSEQ,NAT_D,RLVECT_1,VFUNCT_1,GROUP_1,VECTSP_1,VECTSP_2,NORMSP_1,FVSUM_1,ALGSTR_1,GRCAT_1,QUOFIELD,BHSP_1,ALGSEQ_1,POLYNOM3,GROUP_6,XXREAL_0;
definitions ALGSEQ_1,QUOFIELD,GROUP_1,GRCAT_1,GROUP_6,POLYNOM3,FINSEQ_2;
theorems NAT_1,FUNCT_2,FUNCT_7,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,RFINSEQ,RLVECT_1,VECTSP_1,VECTSP_2,FVSUM_1,NORMSP_1,ALGSEQ_1,GROUP_1,POLYNOM2,POLYNOM3,INT_1,NAT_2,MATRIX_3,ALGSTR_1,XREAL_1,XXREAL_0,BHSP_1,PARTFUN1,ORDINAL1,ALGSTR_0,XREAL_0,CARD_1,CKB1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9;
schemes NAT_1,FINSEQ_2,POLYNOM3,FUNCT_2;
registrations ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,FINSEQ_2,STRUCT_0,VECTSP_1,ALGSTR_1,POLYNOM3,XBOOLE_0,ALGSTR_0,CARD_1,VFUNCT_1,FUNCT_2,CKB3,CKB4;
constructors SQUARE_1,FINSEQOP,FINSOP_1,RFINSEQ,NAT_D,ALGSEQ_1,BHSP_1,GRCAT_1,GROUP_6,QUOFIELD,POLYNOM1,POLYNOM3,SEQ_1,REAL_1,ALGSTR_1,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1;
requirements NUMERALS,SUBSET,REAL,BOOLE,ARITHM;
begin
theorem
Th10: (for L being  add-associative  right_zeroed  right_complementable non empty addLoopStr holds (for p,q being (Polynomial of L) holds (( len p ) <> ( len q ) implies ( len ( p + q ) ) = ( max (( len p ),( len q )) ))))
proof
let L being  add-associative  right_zeroed  right_complementable non empty addLoopStr;
let p being (Polynomial of L),q being (Polynomial of L);
assume A1: ( len p ) <> ( len q );
per cases  by A1,XXREAL_0:1;
suppose A2: ( len p ) < ( len q );

then ( len q ) >= ( ( len p ) + 1 ) by NAT_1:13;
then ( ( len q ) - 1 ) >= ( len p ) by XREAL_1:19;
then A3: ( ( len q ) -' 1 ) >= ( len p ) by XREAL_0:def 2;
( len q ) >= ( ( 0 ) + 1 ) by A2,NAT_1:13;
then A4: ( len q ) = ( ( ( len q ) -' 1 ) + 1 ) by XREAL_1:235;
A5: ( ( p + q ) . ( ( len q ) -' 1 ) ) = ( ( p . ( ( len q ) -' 1 ) ) + ( q . ( ( len q ) -' 1 ) ) ) by NORMSP_1:def 2
.= ( ( 0. L ) + ( q . ( ( len q ) -' 1 ) ) ) by A3,ALGSEQ_1:8
.= ( q . ( ( len q ) -' 1 ) ) by RLVECT_1:4;
A6: ( len ( p + q ) ) >= ( len q )
proof
assume ( len ( p + q ) ) < ( len q );
then ( ( len ( p + q ) ) + 1 ) <= ( len q ) by NAT_1:13;
then ( len ( p + q ) ) <= ( ( len q ) - 1 ) by XREAL_1:19;
then ( len ( p + q ) ) <= ( ( len q ) -' 1 ) by XREAL_0:def 2;
then ( ( p + q ) . ( ( len q ) -' 1 ) ) = ( 0. L ) by ALGSEQ_1:8;
hence contradiction by A5,A4,ALGSEQ_1:10;
end;
(( max (( len p ),( len q )) ) = ( len q ) & ( len ( p + q ) ) <= ( len q )) by A2,CKB9:1,XXREAL_0:def 10;
hence thesis by A6,XXREAL_0:1;
end;
suppose A7: ( len p ) > ( len q );

then ( len p ) >= ( ( len q ) + 1 ) by NAT_1:13;
then ( ( len p ) - 1 ) >= ( len q ) by XREAL_1:19;
then A8: ( ( len p ) -' 1 ) >= ( len q ) by XREAL_0:def 2;
( len p ) >= ( ( 0 ) + 1 ) by A7,NAT_1:13;
then A9: ( len p ) = ( ( ( len p ) -' 1 ) + 1 ) by XREAL_1:235;
A10: ( ( p + q ) . ( ( len p ) -' 1 ) ) = ( ( p . ( ( len p ) -' 1 ) ) + ( q . ( ( len p ) -' 1 ) ) ) by NORMSP_1:def 2
.= ( ( p . ( ( len p ) -' 1 ) ) + ( 0. L ) ) by A8,ALGSEQ_1:8
.= ( p . ( ( len p ) -' 1 ) ) by RLVECT_1:4;
A11: ( len ( p + q ) ) >= ( len p )
proof
assume ( len ( p + q ) ) < ( len p );
then ( ( len ( p + q ) ) + 1 ) <= ( len p ) by NAT_1:13;
then ( len ( p + q ) ) <= ( ( len p ) - 1 ) by XREAL_1:19;
then ( len ( p + q ) ) <= ( ( len p ) -' 1 ) by XREAL_0:def 2;
then ( ( p + q ) . ( ( len p ) -' 1 ) ) = ( 0. L ) by ALGSEQ_1:8;
hence contradiction by A10,A9,ALGSEQ_1:10;
end;
(( max (( len p ),( len q )) ) = ( len p ) & ( len ( p + q ) ) <= ( len p )) by A7,CKB9:1,XXREAL_0:def 10;
hence thesis by A11,XXREAL_0:1;
end;
end;
