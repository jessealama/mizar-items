environ
vocabularies NUMBERS,XBOOLE_0,FINSEQ_1,SUBSET_1,XXREAL_0,RELAT_1,ARYTM_1,ORDINAL4,FUNCT_1,RFINSEQ,ALGSTR_1,ALGSTR_0,VECTSP_1,SUPINF_2,ARYTM_3,VECTSP_2,BINOP_1,MESFUNC1,STRUCT_0,RLVECT_1,LATTICES,GROUP_1,ZFMISC_1,NAT_1,POLYNOM3,CARD_3,CARD_1,ALGSEQ_1,POLYNOM1,TARSKI,PARTFUN1,FUNCT_4,POLYNOM2,FINSEQ_2,MSSUBFAM,QUOFIELD,POLYNOM4;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,FINSEQ_1,NAT_1,STRUCT_0,ALGSTR_0,FINSEQ_2,FUNCT_7,RFINSEQ,NAT_D,RLVECT_1,VFUNCT_1,GROUP_1,VECTSP_1,VECTSP_2,NORMSP_1,FVSUM_1,ALGSTR_1,GRCAT_1,QUOFIELD,BHSP_1,ALGSEQ_1,POLYNOM3,GROUP_6,XXREAL_0,CKB14;
definitions ALGSEQ_1,QUOFIELD,GROUP_1,GRCAT_1,GROUP_6,POLYNOM3,FINSEQ_2,CKB14;
theorems NAT_1,FUNCT_2,FUNCT_7,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,RFINSEQ,RLVECT_1,VECTSP_1,VECTSP_2,FVSUM_1,NORMSP_1,ALGSEQ_1,GROUP_1,POLYNOM2,POLYNOM3,INT_1,NAT_2,MATRIX_3,ALGSTR_1,XREAL_1,XXREAL_0,BHSP_1,PARTFUN1,ORDINAL1,ALGSTR_0,XREAL_0,CARD_1,CKB1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21;
schemes NAT_1,FINSEQ_2,POLYNOM3,FUNCT_2;
registrations ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,FINSEQ_2,STRUCT_0,VECTSP_1,ALGSTR_1,POLYNOM3,XBOOLE_0,ALGSTR_0,CARD_1,VFUNCT_1,FUNCT_2,CKB3,CKB4,CKB16;
constructors SQUARE_1,FINSEQOP,FINSOP_1,RFINSEQ,NAT_D,ALGSEQ_1,BHSP_1,GRCAT_1,GROUP_6,QUOFIELD,POLYNOM1,POLYNOM3,SEQ_1,REAL_1,ALGSTR_1,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1,CKB14;
requirements NUMERALS,SUBSET,REAL,BOOLE,ARITHM;
begin
definition
let L being  unital non  empty doubleLoopStr;
let p being (Polynomial of L);
let x being (Element of L);
func eval (p,x) -> (Element of L) means 
:Def2: (ex F being (FinSequence of (the carrier of L)) st ((it = ( Sum F ) & ( len F ) = ( len p )) & (for n being (Element of ( NAT )) holds (n in ( dom F ) implies ( F . n ) = ( ( p . ( n -' 1 ) ) * ( ( power L ) . (x,( n -' 1 )) ) )))));
existence
proof
deffunc G(Nat) = ( ( p . ( $1 -' 1 ) ) * ( ( power L ) . (x,( $1 -' 1 )) ) );
consider F being (FinSequence of (the carrier of L)) such that A1: ( len F ) = ( len p ) and A2: (for n being Nat holds (n in ( dom F ) implies ( F . n ) = G(n))) from FINSEQ_2:sch 1;
take y = ( Sum F );
take F;
thus (y = ( Sum F ) & ( len F ) = ( len p )) by A1;
let n being (Element of ( NAT ));
assume n in ( dom F );
hence thesis by A2;
end;
uniqueness
proof
let y1 being (Element of L);
let y2 being (Element of L);
given F1 being (FinSequence of (the carrier of L)) such that
A3: y1 = ( Sum F1 )
and
A4: ( len F1 ) = ( len p )
and
A5: (for n being (Element of ( NAT )) holds (n in ( dom F1 ) implies ( F1 . n ) = ( ( p . ( n -' 1 ) ) * ( ( power L ) . (x,( n -' 1 )) ) )));

given F2 being (FinSequence of (the carrier of L)) such that
A6: y2 = ( Sum F2 )
and
A7: ( len F2 ) = ( len p )
and
A8: (for n being (Element of ( NAT )) holds (n in ( dom F2 ) implies ( F2 . n ) = ( ( p . ( n -' 1 ) ) * ( ( power L ) . (x,( n -' 1 )) ) )));

A9: ( dom F1 ) = ( Seg ( len p ) ) by A4,FINSEQ_1:def 3;
now
let n being Nat;
assume A10: n in ( dom F1 );
then A11: n in ( dom F2 ) by A7,A9,FINSEQ_1:def 3;
thus ( F1 . n ) = ( ( p . ( n -' 1 ) ) * ( ( power L ) . (x,( n -' 1 )) ) ) by A5,A10
.= ( F2 . n ) by A8,A11;
end;
hence thesis by A3,A4,A6,A7,FINSEQ_2:9;
end;
end;
