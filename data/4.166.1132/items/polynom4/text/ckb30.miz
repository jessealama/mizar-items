environ
vocabularies NUMBERS,XBOOLE_0,FINSEQ_1,SUBSET_1,XXREAL_0,RELAT_1,ARYTM_1,ORDINAL4,FUNCT_1,RFINSEQ,ALGSTR_1,ALGSTR_0,VECTSP_1,SUPINF_2,ARYTM_3,VECTSP_2,BINOP_1,MESFUNC1,STRUCT_0,RLVECT_1,LATTICES,GROUP_1,ZFMISC_1,NAT_1,POLYNOM3,CARD_3,CARD_1,ALGSEQ_1,POLYNOM1,TARSKI,PARTFUN1,FUNCT_4,POLYNOM2,FINSEQ_2,MSSUBFAM,QUOFIELD,POLYNOM4;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,FINSEQ_1,NAT_1,STRUCT_0,ALGSTR_0,FINSEQ_2,FUNCT_7,RFINSEQ,NAT_D,RLVECT_1,VFUNCT_1,GROUP_1,VECTSP_1,VECTSP_2,NORMSP_1,FVSUM_1,ALGSTR_1,GRCAT_1,QUOFIELD,BHSP_1,ALGSEQ_1,POLYNOM3,GROUP_6,XXREAL_0,CKB14,CKB22;
definitions ALGSEQ_1,QUOFIELD,GROUP_1,GRCAT_1,GROUP_6,POLYNOM3,FINSEQ_2,CKB14,CKB22;
theorems NAT_1,FUNCT_2,FUNCT_7,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,RFINSEQ,RLVECT_1,VECTSP_1,VECTSP_2,FVSUM_1,NORMSP_1,ALGSEQ_1,GROUP_1,POLYNOM2,POLYNOM3,INT_1,NAT_2,MATRIX_3,ALGSTR_1,XREAL_1,XXREAL_0,BHSP_1,PARTFUN1,ORDINAL1,ALGSTR_0,XREAL_0,CARD_1,CKB1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
schemes NAT_1,FINSEQ_2,POLYNOM3,FUNCT_2;
registrations ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,FINSEQ_2,STRUCT_0,VECTSP_1,ALGSTR_1,POLYNOM3,XBOOLE_0,ALGSTR_0,CARD_1,VFUNCT_1,FUNCT_2,CKB3,CKB4,CKB16;
constructors SQUARE_1,FINSEQOP,FINSOP_1,RFINSEQ,NAT_D,ALGSEQ_1,BHSP_1,GRCAT_1,GROUP_6,QUOFIELD,POLYNOM1,POLYNOM3,SEQ_1,REAL_1,ALGSTR_1,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1,CKB14,CKB22;
requirements NUMERALS,SUBSET,REAL,BOOLE,ARITHM;
begin
theorem
Lm3: (for L being  add-associative  right_zeroed  right_complementable  unital  distributive  associative non  empty doubleLoopStr holds (for p,q being (Polynomial of L) holds ((( len p ) > ( 0 ) & ( len q ) > ( 0 )) implies (for x being (Element of L) holds ( eval (( ( Leading-Monomial p ) *' ( Leading-Monomial q ) ),x) ) = ( ( ( p . ( ( len p ) -' 1 ) ) * ( q . ( ( len q ) -' 1 ) ) ) * ( ( power L ) . (x,( ( ( len p ) + ( len q ) ) -' 2 )) ) )))))
proof
let L being  add-associative  right_zeroed  right_complementable  unital  distributive  associative non  empty doubleLoopStr;
let p being (Polynomial of L);
let q being (Polynomial of L);
assume that
A1: ( len p ) > ( 0 )
and
A2: ( len q ) > ( 0 );
A3: ( len q ) >= ( ( 0 ) + 1 ) by A2,NAT_1:13;
then A4: ( ( len q ) - 1 ) >= ( 0 ) by XREAL_1:19;
A5: ( len p ) >= ( ( 0 ) + 1 ) by A1,NAT_1:13;
then ( ( len p ) - 1 ) >= ( 0 ) by XREAL_1:19;
then A6: ( ( len p ) - 1 ) = ( ( len p ) -' 1 ) by XREAL_0:def 2;
A7: ( ( len p ) + ( len q ) ) >= ( ( 0 ) + ( 1 + 1 ) ) by A5,A3,XREAL_1:7;
then A8: ( ( ( len p ) + ( len q ) ) - 1 ) >= 1 by XREAL_1:19;
then reconsider i1 = ( ( ( len p ) + ( len q ) ) - 1 ) as (Element of ( NAT )) by INT_1:3;
A9: ( ( i1 -' 1 ) + 1 ) = i1 by A8,XREAL_1:235;
set LMp = ( Leading-Monomial p );
set LMq = ( Leading-Monomial q );
let x being (Element of L);
consider F being (FinSequence of (the carrier of L)) such that A10: ( eval (( LMp *' LMq ),x) ) = ( Sum F ) and A11: ( len F ) = ( len ( LMp *' LMq ) ) and A12: (for n being (Element of ( NAT )) holds (n in ( dom F ) implies ( F . n ) = ( ( ( LMp *' LMq ) . ( n -' 1 ) ) * ( ( power L ) . (x,( n -' 1 )) ) ))) by CKB22:def 1;
consider r being (FinSequence of (the carrier of L)) such that A13: ( len r ) = ( ( i1 -' 1 ) + 1 ) and A14: ( ( LMp *' LMq ) . ( i1 -' 1 ) ) = ( Sum r ) and A15: (for k being (Element of ( NAT )) holds (k in ( dom r ) implies ( r . k ) = ( ( LMp . ( k -' 1 ) ) * ( LMq . ( ( ( i1 -' 1 ) + 1 ) -' k ) ) ))) by POLYNOM3:def 9;
( ( len p ) + ( 0 ) ) <= ( ( len p ) + ( ( len q ) - 1 ) ) by A4,XREAL_1:7;
then ( len p ) in ( Seg ( len r ) ) by A5,A9,A13,FINSEQ_1:1;
then A16: ( len p ) in ( dom r ) by FINSEQ_1:def 3;
( ( ( len p ) + ( ( len q ) - 1 ) ) - ( len p ) ) >= ( 0 ) by A3,XREAL_1:19;
then ( i1 -' ( len p ) ) = ( ( ( len p ) + ( ( len q ) - 1 ) ) - ( len p ) ) by XREAL_0:def 2
.= ( ( len q ) -' 1 ) by A4,XREAL_0:def 2;
then A17: ( r . ( len p ) ) = ( ( LMp . ( ( len p ) -' 1 ) ) * ( LMq . ( ( len q ) -' 1 ) ) ) by A9,A15,A16;
now
let i being (Element of ( NAT ));
assume that
A18: i in ( dom r )
and
A19: i <> ( len p );
i in ( Seg ( len r ) ) by A18,FINSEQ_1:def 3;
then i >= ( ( 0 ) + 1 ) by FINSEQ_1:1;
then ( i - 1 ) >= ( 0 ) by XREAL_1:19;
then ( i -' 1 ) = ( i - 1 ) by XREAL_0:def 2;
then A20: ( i -' 1 ) <> ( ( len p ) -' 1 ) by A6,A19;
thus ( r /. i ) = ( r . i ) by A18,PARTFUN1:def 6
.= ( ( LMp . ( i -' 1 ) ) * ( LMq . ( ( ( i1 -' 1 ) + 1 ) -' i ) ) ) by A15,A18
.= ( ( 0. L ) * ( LMq . ( ( ( i1 -' 1 ) + 1 ) -' i ) ) ) by A20,CKB14:def 1
.= ( 0. L ) by VECTSP_1:7;
end;
then A21: ( Sum r ) = ( r /. ( len p ) ) by A16,POLYNOM2:3
.= ( ( LMp . ( ( len p ) -' 1 ) ) * ( LMq . ( ( len q ) -' 1 ) ) ) by A16,A17,PARTFUN1:def 6
.= ( ( p . ( ( len p ) -' 1 ) ) * ( LMq . ( ( len q ) -' 1 ) ) ) by CKB14:def 1
.= ( ( p . ( ( len p ) -' 1 ) ) * ( q . ( ( len q ) -' 1 ) ) ) by CKB14:def 1;
A22: ( ( len q ) - 1 ) = ( ( len q ) -' 1 ) by A4,XREAL_0:def 2;
A23:now
let i being (Element of ( NAT ));
assume that
A24: i in ( dom F )
and
A25: i <> i1;
consider r1 being (FinSequence of (the carrier of L)) such that A26: ( len r1 ) = ( ( i -' 1 ) + 1 ) and A27: ( ( LMp *' LMq ) . ( i -' 1 ) ) = ( Sum r1 ) and A28: (for k being (Element of ( NAT )) holds (k in ( dom r1 ) implies ( r1 . k ) = ( ( LMp . ( k -' 1 ) ) * ( LMq . ( ( ( i -' 1 ) + 1 ) -' k ) ) ))) by POLYNOM3:def 9;
i in ( Seg ( len F ) ) by A24,FINSEQ_1:def 3;
then i >= 1 by FINSEQ_1:1;
then A29: ( ( i -' 1 ) + 1 ) = i by XREAL_1:235;
A30:now
let j being (Element of ( NAT ));
assume A31: j in ( dom r1 );
then j in ( Seg ( len r1 ) ) by FINSEQ_1:def 3;
then j >= ( ( 0 ) + 1 ) by FINSEQ_1:1;
then ( j - 1 ) >= ( 0 ) by XREAL_1:19;
then A32: ( j -' 1 ) = ( j - 1 ) by XREAL_0:def 2;
per cases ;
suppose j <> ( len p );

then A33: ( j -' 1 ) <> ( ( len p ) -' 1 ) by A6,A32;
thus ( r1 . j ) = ( ( LMp . ( j -' 1 ) ) * ( LMq . ( ( ( i -' 1 ) + 1 ) -' j ) ) ) by A28,A31
.= ( ( 0. L ) * ( LMq . ( ( ( i -' 1 ) + 1 ) -' j ) ) ) by A33,CKB14:def 1
.= ( 0. L ) by VECTSP_1:7;
end;
suppose A34: j = ( len p );

j in ( Seg ( len r1 ) ) by A31,FINSEQ_1:def 3;
then i >= ( ( 0 ) + j ) by A26,A29,FINSEQ_1:1;
then ( i - j ) >= ( 0 ) by XREAL_1:19;
then ( i -' ( len p ) ) = ( i - ( len p ) ) by A34,XREAL_0:def 2;
then A35: ( i -' ( len p ) ) <> ( ( len q ) -' 1 ) by A22,A25;
thus ( r1 . j ) = ( ( LMp . ( j -' 1 ) ) * ( LMq . ( i -' ( len p ) ) ) ) by A28,A29,A31,A34
.= ( ( LMp . ( j -' 1 ) ) * ( 0. L ) ) by A35,CKB14:def 1
.= ( 0. L ) by VECTSP_1:6;
end;
end;
thus ( F /. i ) = ( F . i ) by A24,PARTFUN1:def 6
.= ( ( Sum r1 ) * ( ( power L ) . (x,( i -' 1 )) ) ) by A12,A24,A27
.= ( ( 0. L ) * ( ( power L ) . (x,( i -' 1 )) ) ) by A30,POLYNOM3:1
.= ( 0. L ) by VECTSP_1:7;
end;
A36: ( ( ( len p ) + ( len q ) ) - 2 ) >= ( 0 ) by A7,XREAL_1:19;
( ( ( len p ) + ( len q ) ) - ( 1 + 1 ) ) >= ( 0 ) by A7,XREAL_1:19;
then A37: ( i1 -' 1 ) = ( ( ( ( len p ) + ( len q ) ) - 1 ) - 1 ) by XREAL_0:def 2
.= ( ( ( len p ) + ( len q ) ) -' 2 ) by A36,XREAL_0:def 2;
per cases ;
suppose ( ( LMp *' LMq ) . ( i1 -' 1 ) ) <> ( 0. L );

then ( len F ) > ( i1 -' 1 ) by A11,ALGSEQ_1:8;
then ( len F ) >= i1 by A9,NAT_1:13;
then i1 in ( Seg ( len F ) ) by A8,FINSEQ_1:1;
then A38: i1 in ( dom F ) by FINSEQ_1:def 3;
hence ( eval (( ( Leading-Monomial p ) *' ( Leading-Monomial q ) ),x) ) = ( F /. i1 ) by A10,A23,POLYNOM2:3
.= ( F . i1 ) by A38,PARTFUN1:def 6
.= ( ( ( p . ( ( len p ) -' 1 ) ) * ( q . ( ( len q ) -' 1 ) ) ) * ( ( power L ) . (x,( ( ( len p ) + ( len q ) ) -' 2 )) ) ) by A12,A14,A37,A21,A38;
end;
suppose A39: ( ( LMp *' LMq ) . ( i1 -' 1 ) ) = ( 0. L );

now
let j being Nat;
assume j >= ( 0 );
j in ( NAT ) by ORDINAL1:def 12;
then consider r1 being (FinSequence of (the carrier of L)) such that A40: ( len r1 ) = ( j + 1 ) and A41: ( ( LMp *' LMq ) . j ) = ( Sum r1 ) and A42: (for k being (Element of ( NAT )) holds (k in ( dom r1 ) implies ( r1 . k ) = ( ( LMp . ( k -' 1 ) ) * ( LMq . ( ( j + 1 ) -' k ) ) ))) by POLYNOM3:def 9;
now
per cases ;
suppose j = ( i1 -' 1 );

hence ( ( LMp *' LMq ) . j ) = ( 0. L ) by A39;
end;
suppose A43: j <> ( i1 -' 1 );

now
let k being (Element of ( NAT ));
assume A44: k in ( dom r1 );
per cases ;
suppose A45: ( k -' 1 ) <> ( ( len p ) -' 1 );

thus ( r1 . k ) = ( ( LMp . ( k -' 1 ) ) * ( LMq . ( ( j + 1 ) -' k ) ) ) by A42,A44
.= ( ( 0. L ) * ( LMq . ( ( j + 1 ) -' k ) ) ) by A45,CKB14:def 1
.= ( 0. L ) by VECTSP_1:7;
end;
suppose A46: ( k -' 1 ) = ( ( len p ) -' 1 );

A47: k in ( Seg ( len r1 ) ) by A44,FINSEQ_1:def 3;
then ( ( 0 ) + 1 ) <= k by FINSEQ_1:1;
then ( k - 1 ) >= ( 0 ) by XREAL_1:19;
then A48: ( k -' 1 ) = ( k - 1 ) by XREAL_0:def 2;
( ( 0 ) + k ) <= ( j + 1 ) by A40,A47,FINSEQ_1:1;
then ( ( j + 1 ) - k ) >= ( 0 ) by XREAL_1:19;
then A49: ( ( j + 1 ) -' k ) = ( ( j - ( len p ) ) + 1 ) by A6,A46,A48,XREAL_0:def 2;
A50: ( ( j - ( len p ) ) + 1 ) <> ( ( ( i1 -' 1 ) - ( len p ) ) + 1 ) by A43;
thus ( r1 . k ) = ( ( LMp . ( k -' 1 ) ) * ( LMq . ( ( j + 1 ) -' k ) ) ) by A42,A44
.= ( ( LMp . ( k -' 1 ) ) * ( 0. L ) ) by A22,A9,A49,A50,CKB14:def 1
.= ( 0. L ) by VECTSP_1:6;
end;
end;
hence ( ( LMp *' LMq ) . j ) = ( 0. L ) by A41,POLYNOM3:1;
end;
end;
hence ( ( LMp *' LMq ) . j ) = ( 0. L );
end;
then ( 0 ) is_at_least_length_of ( LMp *' LMq ) by ALGSEQ_1:def 2;
then ( len ( LMp *' LMq ) ) = ( 0 ) by ALGSEQ_1:def 3;
then ( LMp *' LMq ) = ( 0_. L ) by CKB8:1;
then ( eval (( LMp *' LMq ),x) ) = ( 0. L ) by CKB23:1;
hence thesis by A14,A21,A39,VECTSP_1:7;
end;
end;
