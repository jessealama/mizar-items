environ
vocabularies NUMBERS,XBOOLE_0,FINSEQ_1,SUBSET_1,XXREAL_0,RELAT_1,ARYTM_1,ORDINAL4,FUNCT_1,RFINSEQ,ALGSTR_1,ALGSTR_0,VECTSP_1,SUPINF_2,ARYTM_3,VECTSP_2,BINOP_1,MESFUNC1,STRUCT_0,RLVECT_1,LATTICES,GROUP_1,ZFMISC_1,NAT_1,POLYNOM3,CARD_3,CARD_1,ALGSEQ_1,POLYNOM1,TARSKI,PARTFUN1,FUNCT_4,POLYNOM2,FINSEQ_2,MSSUBFAM,QUOFIELD,POLYNOM4;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,FINSEQ_1,NAT_1,STRUCT_0,ALGSTR_0,FINSEQ_2,FUNCT_7,RFINSEQ,NAT_D,RLVECT_1,VFUNCT_1,GROUP_1,VECTSP_1,VECTSP_2,NORMSP_1,FVSUM_1,ALGSTR_1,GRCAT_1,QUOFIELD,BHSP_1,ALGSEQ_1,POLYNOM3,GROUP_6,XXREAL_0,CKB14;
definitions ALGSEQ_1,QUOFIELD,GROUP_1,GRCAT_1,GROUP_6,POLYNOM3,FINSEQ_2,CKB14;
theorems NAT_1,FUNCT_2,FUNCT_7,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,RFINSEQ,RLVECT_1,VECTSP_1,VECTSP_2,FVSUM_1,NORMSP_1,ALGSEQ_1,GROUP_1,POLYNOM2,POLYNOM3,INT_1,NAT_2,MATRIX_3,ALGSTR_1,XREAL_1,XXREAL_0,BHSP_1,PARTFUN1,ORDINAL1,ALGSTR_0,XREAL_0,CARD_1,CKB1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB17,CKB18,CKB19;
schemes NAT_1,FINSEQ_2,POLYNOM3,FUNCT_2;
registrations ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,FINSEQ_2,STRUCT_0,VECTSP_1,ALGSTR_1,POLYNOM3,XBOOLE_0,ALGSTR_0,CARD_1,VFUNCT_1,FUNCT_2,CKB3,CKB4,CKB16;
constructors SQUARE_1,FINSEQOP,FINSOP_1,RFINSEQ,NAT_D,ALGSEQ_1,BHSP_1,GRCAT_1,GROUP_6,QUOFIELD,POLYNOM1,POLYNOM3,SEQ_1,REAL_1,ALGSTR_1,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1,CKB14;
requirements NUMERALS,SUBSET,REAL,BOOLE,ARITHM;
begin
theorem
Th18: (for L being non empty ZeroStr holds (for p being (Polynomial of L) holds ( len ( Leading-Monomial p ) ) = ( len p )))
proof
let L being non empty ZeroStr;
let p being (Polynomial of L);
set r = ( Leading-Monomial p );
A1: ( Leading-Monomial p ) = ( ( 0_. L ) +* (( ( len p ) -' 1 ),( p . ( ( len p ) -' 1 ) )) ) by CKB15:1;
per cases ;
suppose ( len p ) > ( 0 );

then A2: ( len p ) >= ( ( 0 ) + 1 ) by NAT_1:13;
( ( len p ) -' 1 ) in ( NAT );
then A3: ( ( len p ) -' 1 ) in ( dom ( 0_. L ) ) by NORMSP_1:12;
A4:now
let m being Nat;
assume A5: m is_at_least_length_of r;
assume ( len p ) > m;
then ( len p ) >= ( m + 1 ) by NAT_1:13;
then ( ( len p ) - 1 ) >= ( ( m + 1 ) - 1 ) by XREAL_1:9;
then ( ( len p ) -' 1 ) >= m by XREAL_0:def 2;
then ( r . ( ( len p ) -' 1 ) ) = ( 0. L ) by A5,ALGSEQ_1:def 2;
then A6: ( p . ( ( len p ) -' 1 ) ) = ( 0. L ) by A1,A3,FUNCT_7:31;
( len p ) = ( ( ( len p ) -' 1 ) + 1 ) by A2,XREAL_1:235;
hence contradiction by A6,ALGSEQ_1:10;
end;
A7: ( ( len p ) - 1 ) >= ( 0 ) by A2,XREAL_1:19;
( len p ) is_at_least_length_of r
proof
let i being Nat;
A8: i in ( NAT ) by ORDINAL1:def 12;
assume i >= ( len p );
then ( i + 1 ) > ( len p ) by NAT_1:13;
then ( ( i + 1 ) - 1 ) > ( ( len p ) - 1 ) by XREAL_1:9;
then i <> ( ( len p ) -' 1 ) by A7,XREAL_0:def 2;
hence ( r . i ) = ( ( 0_. L ) . i ) by A1,FUNCT_7:32
.= ( 0. L ) by A8,FUNCOP_1:7;
end;
hence thesis by A4,ALGSEQ_1:def 3;
end;
suppose A9: ( len p ) = ( 0 );

hence ( len ( Leading-Monomial p ) ) = ( len ( 0_. L ) ) by CKB17:1
.= ( len p ) by A9,CKB8:1;
end;
end;
