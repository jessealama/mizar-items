environ
vocabularies XBOOLE_0,SUBSET_1,NUMBERS,REAL_1,FUNCT_1,NAT_1,PARTFUN1,ORDINAL1,RELAT_1,TARSKI,XREAL_0,VALUED_1,ORDINAL4,ARYTM_1,COMPLEX1,ARYTM_3,CARD_1,SEQ_1,PBOOLE,XXREAL_0,SEQ_2,ORDINAL2,FCONT_1,SEQFUNC;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,RFUNCT_1,VALUED_1,SEQ_1,SEQ_2,FCONT_1,LIMFUNC1,CKB1,CKB2;
definitions TARSKI,XBOOLE_0,VALUED_1;
theorems FUNCT_1,PARTFUN1,TARSKI,RFUNCT_1,SEQ_1,SEQ_2,SEQ_4,ZFMISC_1,RFUNCT_2,FCONT_1,FUNCT_2,RELAT_1,XREAL_0,XBOOLE_0,XBOOLE_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,VALUED_1,RELSET_1,CKB3,CKB4;
schemes CLASSES1,SEQ_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XREAL_0,MEMBERED,VALUED_0,VALUED_1,FUNCT_2,PARTFUN1;
constructors PARTFUN1,FUNCOP_1,REAL_1,COMPLEX1,SEQ_2,RFUNCT_1,FCONT_1,LIMFUNC1,VALUED_1,SEQ_1,RELSET_1,CKB2;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve D1 for set;
reserve D2 for set;
reserve x for set;
reserve y for set;
reserve n for (Element of ( NAT ));
reserve f for Function;
reserve F for (Functional_Sequence of D1,D2);
scheme ExFuncSeq { D1() -> set,D2() -> set,F(set) -> (PartFunc of D1(),D2()) } : (ex G being (Functional_Sequence of D1(),D2()) st (for n being Nat holds ( G . n ) = F(n)))
proof
defpred P[ set,set ]
 means
$2 = F($1);
A1: (for x holds (x in ( NAT ) implies (ex y st P[ x,y ])));
consider f such that A2: ( dom f ) = ( NAT ) and A3: (for x holds (x in ( NAT ) implies P[ x,( f . x ) ])) from CLASSES1:sch 1(A1);
now
let x;
assume x in ( NAT );
then ( f . x ) = F(x) by A3;
hence ( f . x ) is (PartFunc of D1(),D2());
end;
then reconsider f as (Functional_Sequence of D1(),D2()) by A2,CKB3:1;
take f;
let n being Nat;
n in ( NAT ) by ORDINAL1:def 12;
hence thesis by A3;
end;
