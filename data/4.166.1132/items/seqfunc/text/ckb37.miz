environ
vocabularies XBOOLE_0,SUBSET_1,NUMBERS,REAL_1,FUNCT_1,NAT_1,PARTFUN1,ORDINAL1,RELAT_1,TARSKI,XREAL_0,VALUED_1,ORDINAL4,ARYTM_1,COMPLEX1,ARYTM_3,CARD_1,SEQ_1,PBOOLE,XXREAL_0,SEQ_2,ORDINAL2,FCONT_1,SEQFUNC;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,RFUNCT_1,VALUED_1,SEQ_1,SEQ_2,FCONT_1,LIMFUNC1,CKB1,CKB2,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB31,CKB32,CKB33,CKB36;
definitions TARSKI,XBOOLE_0,VALUED_1,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB31,CKB32,CKB33,CKB36;
theorems FUNCT_1,PARTFUN1,TARSKI,RFUNCT_1,SEQ_1,SEQ_2,SEQ_4,ZFMISC_1,RFUNCT_2,FCONT_1,FUNCT_2,RELAT_1,XREAL_0,XBOOLE_0,XBOOLE_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,VALUED_1,RELSET_1,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36;
schemes CLASSES1,SEQ_1,CKB5;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XREAL_0,MEMBERED,VALUED_0,VALUED_1,FUNCT_2,PARTFUN1;
constructors PARTFUN1,FUNCOP_1,REAL_1,COMPLEX1,SEQ_2,RFUNCT_1,FCONT_1,LIMFUNC1,VALUED_1,SEQ_1,RELSET_1,CKB2,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB31,CKB32,CKB33,CKB36;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve D for non empty set;
reserve H for (Functional_Sequence of D,( REAL ));
reserve x for (Element of D);
reserve X for set;
reserve f for (PartFunc of D,( REAL ));
definition
let D;
let H;
let X;
assume A1: H is_point_conv_on X;
func lim (H,X) -> (PartFunc of D,( REAL ))
means
:Def14: (( dom it ) = X & (for x holds (x in ( dom it ) implies ( it . x ) = ( lim ( H # x ) ))));
existence
proof
consider f such that A2: X = ( dom f ) and A3: (for x holds (x in X implies (( H # x ) is  convergent & ( lim ( H # x ) ) = ( f . x )))) by A1,CKB34:1;
take f;
thus ( dom f ) = X by A2;
let x;
assume x in ( dom f );
hence thesis by A2,A3;
end;
uniqueness
proof
deffunc U((Element of D)) = ( lim ( H # $1 ) );
thus (for f1,f2 being (PartFunc of D,( REAL )) holds ((((( dom f1 ) = X & (for x holds (x in ( dom f1 ) implies ( f1 . x ) = U(x)))) & ( dom f2 ) = X) & (for x holds (x in ( dom f2 ) implies ( f2 . x ) = U(x)))) implies f1 = f2)) from SEQ_1:sch 4;
end;
end;
