environ
vocabularies NUMBERS,FINSEQ_1,NAT_1,FINSEQ_3,RELAT_1,ARYTM_1,ORDINAL4,RFINSEQ,SUBSET_1,TARSKI,XBOOLE_0,XXREAL_0,ARYTM_3,CARD_1,FUNCT_1,PARTFUN1,PRALG_1,PBOOLE,RLVECT_2,FUNCT_4,STRUCT_0,PENCIL_1,CARD_3,INTEGRA1,ZFMISC_1,PRE_TOPC,FUNCT_2,CAT_1,RCOMP_1,RELAT_2,PENCIL_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,NAT_D,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,XXREAL_0,RFINSEQ,CARD_1,FINSEQ_1,CARD_3,PRE_TOPC,PBOOLE,PZFMISC1,TOPS_2,T_0TOPSP,PRALG_1,FUNCT_7,PENCIL_1,CKB1;
definitions TARSKI,PBOOLE,PENCIL_1,XBOOLE_0,STRUCT_0,CKB1;
theorems TARSKI,FUNCT_1,PBOOLE,CARD_3,CARD_1,FINSEQ_1,ZFMISC_1,NAT_1,FUNCT_7,YELLOW_6,PZFMISC1,PUA2MSS1,PRE_TOPC,FINSEQ_3,FUNCT_2,TOPGRP_1,TOPS_2,T_0TOPSP,RELAT_1,PENCIL_1,RFINSEQ,FINSEQ_4,FINSEQ_5,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,PARTFUN1,XREAL_0,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9;
schemes FINSEQ_1,NAT_1,INT_1,CKB8;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,PARTFUN1,FUNCT_2,XXREAL_0,XREAL_0,NAT_1,REALSET1,STRUCT_0,BORSUK_2,PENCIL_1,ORDINAL1,FINSEQ_1,RELSET_1,PRE_POLY,ZFMISC_1;
constructors XXREAL_0,RFINSEQ,NAT_D,PZFMISC1,TOPS_2,T_0TOPSP,POLYNOM1,PENCIL_1,REAL_1,RELSET_1,PBOOLE,FUNCT_7,CKB1;
requirements REAL,BOOLE,SUBSET,NUMERALS,ARITHM;
begin
definition
let I being non  empty set;
let A being  non-Trivial-yielding  TopStruct-yielding (ManySortedSet of I);
mode Segre-Coset of A
 -> (Subset of ( Segre_Product A ))
means :Def2: (ex L being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) st (it = ( product L ) & ( L . ( indx L ) ) = ( [#] ( A . ( indx L ) ) )));
existence
proof
set L = the  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A ));
reconsider C = ( L +* (( indx L ),( [#] ( A . ( indx L ) ) )) ) as (ManySortedSubset of ( Carrier A )) by CKB9:1;
A1: ( dom ( Carrier A ) ) = I by PARTFUN1:def 2;
( dom A ) = I by PARTFUN1:def 2;
then ( A . ( indx L ) ) in ( rng A ) by FUNCT_1:3;
then A2: ( A . ( indx L ) ) is non  trivial by PENCIL_1:def 17;
then reconsider C as  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) by PENCIL_1:27;
C c= ( Carrier A ) by PBOOLE:def 18;
then A3: (for a being set holds (a in I implies ( C . a ) c= ( ( Carrier A ) . a ))) by PBOOLE:def 2;
( dom C ) = I by PARTFUN1:def 2;
then reconsider P = ( product C ) as (Subset of ( Segre_Product A )) by A1,A3,CARD_3:27;
take P;
( dom L ) = I by PARTFUN1:def 2;
then A4: ( C . ( indx L ) ) = ( [#] ( A . ( indx L ) ) ) by FUNCT_7:31;
then ( indx C ) = ( indx L ) by A2,PENCIL_1:def 21;
hence thesis by A4;
end;
end;
