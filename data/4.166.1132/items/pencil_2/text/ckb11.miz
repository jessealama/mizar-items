environ
vocabularies NUMBERS,FINSEQ_1,NAT_1,FINSEQ_3,RELAT_1,ARYTM_1,ORDINAL4,RFINSEQ,SUBSET_1,TARSKI,XBOOLE_0,XXREAL_0,ARYTM_3,CARD_1,FUNCT_1,PARTFUN1,PRALG_1,PBOOLE,RLVECT_2,FUNCT_4,STRUCT_0,PENCIL_1,CARD_3,INTEGRA1,ZFMISC_1,PRE_TOPC,FUNCT_2,CAT_1,RCOMP_1,RELAT_2,PENCIL_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,NAT_D,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,XXREAL_0,RFINSEQ,CARD_1,FINSEQ_1,CARD_3,PRE_TOPC,PBOOLE,PZFMISC1,TOPS_2,T_0TOPSP,PRALG_1,FUNCT_7,PENCIL_1,CKB1,CKB10;
definitions TARSKI,PBOOLE,PENCIL_1,XBOOLE_0,STRUCT_0,CKB1,CKB10;
theorems TARSKI,FUNCT_1,PBOOLE,CARD_3,CARD_1,FINSEQ_1,ZFMISC_1,NAT_1,FUNCT_7,YELLOW_6,PZFMISC1,PUA2MSS1,PRE_TOPC,FINSEQ_3,FUNCT_2,TOPGRP_1,TOPS_2,T_0TOPSP,RELAT_1,PENCIL_1,RFINSEQ,FINSEQ_4,FINSEQ_5,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,PARTFUN1,XREAL_0,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB10;
schemes FINSEQ_1,NAT_1,INT_1,CKB8;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,PARTFUN1,FUNCT_2,XXREAL_0,XREAL_0,NAT_1,REALSET1,STRUCT_0,BORSUK_2,PENCIL_1,ORDINAL1,FINSEQ_1,RELSET_1,PRE_POLY,ZFMISC_1;
constructors XXREAL_0,RFINSEQ,NAT_D,PZFMISC1,TOPS_2,T_0TOPSP,POLYNOM1,PENCIL_1,REAL_1,RELSET_1,PBOOLE,FUNCT_7,CKB1,CKB10;
requirements REAL,BOOLE,SUBSET,NUMERALS,ARITHM;
begin
theorem
Th8: (for I being non  empty set holds (for A being  non-Trivial-yielding  TopStruct-yielding (ManySortedSet of I) holds (for B1,B2 being (Segre-Coset of A) holds (2 c= ( card ( B1 /\ B2 ) ) implies B1 = B2))))
proof
let I being non  empty set;
let A being  non-Trivial-yielding  TopStruct-yielding (ManySortedSet of I);
let B1 being (Segre-Coset of A);
let B2 being (Segre-Coset of A);
consider L1 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) such that A1: B1 = ( product L1 ) and A2: ( L1 . ( indx L1 ) ) = ( [#] ( A . ( indx L1 ) ) ) by CKB10:def 1;
consider L2 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) such that A3: B2 = ( product L2 ) and A4: ( L2 . ( indx L2 ) ) = ( [#] ( A . ( indx L2 ) ) ) by CKB10:def 1;
assume A5: 2 c= ( card ( B1 /\ B2 ) );
then A6: ( indx L1 ) = ( indx L2 ) by A1,A3,PENCIL_1:26;
A7:now
let i being set;
assume i in I;
per cases ;
suppose i <> ( indx L1 );

hence ( L1 . i ) = ( L2 . i ) by A5,A1,A3,PENCIL_1:26;
end;
suppose i = ( indx L1 );

hence ( L1 . i ) = ( L2 . i ) by A2,A4,A6;
end;
end;
A8: ( dom L2 ) = I by PARTFUN1:def 2;
( dom L1 ) = I by PARTFUN1:def 2;
hence thesis by A1,A3,A8,A7,FUNCT_1:2;
end;
