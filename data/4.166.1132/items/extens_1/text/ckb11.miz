environ
vocabularies STRUCT_0,XBOOLE_0,MSUALG_1,RELAT_1,PBOOLE,MEMBER_1,TARSKI,REALSET1,FUNCT_1,PZFMISC1,MSUALG_3,FUNCT_6,MSAFREE,LANG1,MCART_1,TREES_4,SUBSET_1,FUNCOP_1,PRELAMB,MSUALG_2,UNIALG_2,MARGREL1,CARD_3,NAT_1,PARTFUN1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,RELSET_1,FUNCT_1,MCART_1,PARTFUN1,FUNCOP_1,FUNCT_6,PZFMISC1,FINSEQ_2,STRUCT_0,LANG1,FUNCT_2,CARD_3,NAT_1,TREES_4,DTCONSTR,PBOOLE,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE;
definitions MSUALG_2,MSUALG_3,PBOOLE,FUNCOP_1,TARSKI,XBOOLE_0;
theorems FUNCOP_1,FUNCT_1,FUNCT_2,FUNCT_6,MCART_1,MSAFREE,MSAFREE2,MSUALG_1,MSUALG_2,MSUALG_3,MSUHOM_1,PBOOLE,RELAT_1,CARD_3,RELSET_1,PZFMISC1,ORDINAL1,PARTFUN1,FINSEQ_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
schemes MSAFREE1,PBOOLE;
registrations FUNCT_1,RELSET_1,FUNCOP_1,PBOOLE,STRUCT_0,MSUALG_1,MSUALG_3,MSAFREE,MSSUBFAM;
constructors PZFMISC1,MSSUBFAM,MSUALG_3,MSAFREE,RELSET_1,FINSEQ_2;
requirements SUBSET,BOOLE;
begin
reserve S for non  void non  empty ManySortedSign;
theorem
(for X being  non-empty (ManySortedSet of (the carrier of S)) holds ( rngs ( Reverse X ) ) = X)
proof
let X being  non-empty (ManySortedSet of (the carrier of S));
set I = (the carrier of S);
set R = ( Reverse X );
now
let i being set;
assume that
A1: i in I;
reconsider r = ( R . i ) as (Function of ( ( FreeGen X ) . i ),( X . i )) by A1,PBOOLE:def 15;
A2: ( dom R ) = I by PARTFUN1:def 2;
thus ( ( rngs R ) . i ) = ( X . i )
proof
reconsider s0 = i as (SortSymbol of S) by A1;
set D = ( DTConMSA X );
thus ( ( rngs R ) . i ) c= ( X . i )
proof
let x being set;
assume x in ( ( rngs R ) . i );
then A3: x in ( rng r ) by A1,A2,FUNCT_6:22;
( rng r ) c= ( X . i ) by RELAT_1:def 19;
hence thesis by A3;
end;

let x being set;
assume x in ( X . i );
then A4: [ x,s0 ] in ( Terminals D ) by MSAFREE:7;
then reconsider t = [ x,s0 ] as (Symbol of D);
( t `2 ) = s0 by MCART_1:7;
then ( root-tree t ) in { ( root-tree tt ) where tt is (Symbol of D): (tt in ( Terminals D ) & ( tt `2 ) = s0) } by A4;
then A5: ( root-tree t ) in ( FreeGen (s0,X) ) by MSAFREE:13;
A6: ( R . s0 ) = ( Reverse (s0,X) ) by MSAFREE:def 18;
then A7: ( ( R . s0 ) . ( root-tree t ) ) = ( t `1 ) by A5,MSAFREE:def 17
.= x by MCART_1:7;
( dom ( R . s0 ) ) = ( FreeGen (s0,X) ) by A6,FUNCT_2:def 1;
then ( ( R . s0 ) . ( root-tree t ) ) in ( rng ( R . s0 ) ) by A5,FUNCT_1:def 3;
hence thesis by A2,A7,FUNCT_6:22;
end;

end;
hence thesis by PBOOLE:3;
end;
