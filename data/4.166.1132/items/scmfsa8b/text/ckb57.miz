environ
vocabularies NUMBERS,SCMFSA_2,AMI_1,AMISTD_2,CARD_1,TARSKI,TURING_1,SCMFSA6A,FUNCT_4,FSM_1,RELAT_1,UNIALG_2,CIRCUIT2,FUNCT_1,SF_MASTR,SUBSET_1,ARYTM_3,SCMFSA7B,SCMFSA6B,SCMFSA6C,AMI_3,SCMFSA8A,NAT_1,GRAPHSP,XXREAL_0,MSUALG_1,STRUCT_0,ARYTM_1,INT_1,COMPLEX1,PARTFUN1,FINSEQ_1,FINSEQ_2,SCMFSA8B,ORDINAL1,SCMNORM,RELOC,PBOOLE,FUNCOP_1,XBOOLE_0,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,INT_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCOP_1,FUNCT_4,PBOOLE,FUNCT_7,FINSEQ_1,FINSEQ_2,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,SCMFSA_2,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,INT_2,XXREAL_0,CKB12,CKB13,CKB14,CKB40,CKB41,CKB47;
definitions FUNCOP_1,COMPOS_1,EXTPRO_1,STRUCT_0,SCMFSA6A,MEMSTR_0,CKB12,CKB13,CKB14,CKB40,CKB41;
theorems TARSKI,NAT_1,FUNCT_1,FUNCT_4,SCMFSA_2,MEMSTR_0,SCMFSA6A,GRFUNC_1,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,RELAT_1,XBOOLE_1,XREAL_1,ORDINAL1,FUNCOP_1,XXREAL_0,PARTFUN1,AFINSQ_1,SCMFSA10,COMPOS_1,EXTPRO_1,AMISTD_2,PBOOLE,AMISTD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB40,CKB41,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56;
schemes NAT_1;
registrations SETFAM_1,FUNCT_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMFSA_2,SF_MASTR,SCMFSA6A,SCMFSA6B,SCMFSA6C,ORDINAL1,MEMSTR_0,XBOOLE_0,FINSET_1,RELSET_1,SCMFSA10,AMISTD_2,COMPOS_1,EXTPRO_1,PBOOLE,FUNCT_4,FUNCOP_1,AMISTD_1,RELAT_1,STRUCT_0,CKB38,CKB39,CKB42,CKB43,CKB44,CKB45,CKB46,CKB48,CKB49;
constructors DOMAIN_1,XXREAL_0,NAT_1,INT_2,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,AMISTD_2,RELSET_1,SCMFSA7B,PRE_POLY,AMISTD_1,PBOOLE,FUNCOP_1,FUNCT_4,MEMSTR_0,CKB12,CKB13,CKB14,CKB40,CKB41;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve P for (Instruction-Sequence of ( SCM+FSA ));
theorem
(for s being (State of ( SCM+FSA )) holds (for I,J being  parahalting (Program of ( SCM+FSA )) holds (for a,b being  read-write Int-Location holds (((not I refer a) & (not J refer a)) implies ((( IC ( IExec (( if=0 (a,b,I,J) ),P,s) ) ) = ( ( ( card I ) + ( card J ) ) + 5 ) & (( s . a ) = ( s . b ) implies ((for d being Int-Location holds (a <> d implies ( ( IExec (( if=0 (a,b,I,J) ),P,s) ) . d ) = ( ( IExec (I,P,s) ) . d ))) & (for f being FinSeq-Location holds ( ( IExec (( if=0 (a,b,I,J) ),P,s) ) . f ) = ( ( IExec (I,P,s) ) . f ))))) & (( s . a ) <> ( s . b ) implies ((for d being Int-Location holds (a <> d implies ( ( IExec (( if=0 (a,b,I,J) ),P,s) ) . d ) = ( ( IExec (J,P,s) ) . d ))) & (for f being FinSeq-Location holds ( ( IExec (( if=0 (a,b,I,J) ),P,s) ) . f ) = ( ( IExec (J,P,s) ) . f )))))))))
proof
let s being (State of ( SCM+FSA ));
let I being  parahalting (Program of ( SCM+FSA ));
let J being  parahalting (Program of ( SCM+FSA ));
let a being  read-write Int-Location;
let b being  read-write Int-Location;
assume that
A1: (not I refer a)
and
A2: (not J refer a);
reconsider JJ = ( if=0 (a,I,J) ) as  parahalting (Program of ( SCM+FSA ));
reconsider II = ( Macro ( SubFrom (a,b) ) ) as  keeping_0  parahalting (Program of ( SCM+FSA ));
set i = ( SubFrom (a,b) );
set s1 = ( Exec (i,( Initialized s )) );
A3:now
let c being  read-write Int-Location;
assume a <> c;
hence ( s1 . c ) = ( ( Initialized s ) . c ) by SCMFSA_2:65
.= ( s . c ) by SCMFSA6C:3;
end;
( IExec (( if=0 (a,b,I,J) ),P,s) ) = ( IncIC (( IExec (JJ,P,( IExec (II,P,s) )) ),( card II )) ) by SCMFSA6B:20;
hence ( IC ( IExec (( if=0 (a,b,I,J) ),P,s) ) ) = ( ( IC ( IExec (JJ,P,( IExec (II,P,s) )) ) ) + ( card II ) ) by FUNCT_4:113
.= ( ( ( ( card I ) + ( card J ) ) + 3 ) + ( card II ) ) by CKB24:1
.= ( ( ( ( card I ) + ( card J ) ) + 3 ) + 2 ) by COMPOS_1:56
.= ( ( ( card I ) + ( card J ) ) + 5 );
A4:now
let f being FinSeq-Location;
thus ( s1 . f ) = ( ( Initialized s ) . f ) by SCMFSA_2:65
.= ( s . f ) by SCMFSA6C:3;
end;
hereby
assume A5: ( s . a ) = ( s . b );
A6: I is_closed_on ( Initialized s ),P by SCMFSA7B:18;
A7: I is_halting_on ( Initialized s ),P by SCMFSA7B:19;
A8: ( ( Exec (i,( Initialized s )) ) . a ) = ( ( ( Initialized s ) . a ) - ( ( Initialized s ) . b ) ) by SCMFSA_2:65
.= ( ( s . a ) - ( ( Initialized s ) . b ) ) by SCMFSA6C:3
.= ( ( s . a ) - ( s . b ) ) by SCMFSA6C:3
.= ( 0 ) by A5;
hereby
let d being Int-Location;
assume A9: a <> d;
thus ( ( IExec (( if=0 (a,b,I,J) ),P,s) ) . d ) = ( ( IExec (JJ,P,( Exec (i,( Initialized s )) )) ) . d ) by CKB10:1
.= ( ( IExec (I,P,( Exec (i,( Initialized s )) )) ) . d ) by A8,CKB24:1
.= ( ( IExec (I,P,s) ) . d ) by A1,A3,A4,A6,A7,A9,CKB56:1;
end;
let f being FinSeq-Location;
thus ( ( IExec (( if=0 (a,b,I,J) ),P,s) ) . f ) = ( ( IExec (JJ,P,( Exec (i,( Initialized s )) )) ) . f ) by CKB11:1
.= ( ( IExec (I,P,( Exec (i,( Initialized s )) )) ) . f ) by A8,CKB24:1
.= ( ( IExec (I,P,s) ) . f ) by A1,A3,A4,A6,A7,CKB56:1;
end;
A10: ( ( Exec (i,( Initialized s )) ) . a ) = ( ( ( Initialized s ) . a ) - ( ( Initialized s ) . b ) ) by SCMFSA_2:65
.= ( ( s . a ) - ( ( Initialized s ) . b ) ) by SCMFSA6C:3
.= ( ( s . a ) - ( s . b ) ) by SCMFSA6C:3;
A11: J is_halting_on ( Initialized s ),P by SCMFSA7B:19;
A12: J is_closed_on ( Initialized s ),P by SCMFSA7B:18;
assume ( s . a ) <> ( s . b );
then A13: ( ( s . a ) + ( - ( s . b ) ) ) <> ( ( s . b ) + ( - ( s . b ) ) );
hereby
let d being Int-Location;
assume A14: a <> d;
thus ( ( IExec (( if=0 (a,b,I,J) ),P,s) ) . d ) = ( ( IExec (JJ,P,( Exec (i,( Initialized s )) )) ) . d ) by CKB10:1
.= ( ( IExec (J,P,( Exec (i,( Initialized s )) )) ) . d ) by A10,A13,CKB24:1
.= ( ( IExec (J,P,s) ) . d ) by A2,A3,A4,A12,A11,A14,CKB56:1;
end;
let f being FinSeq-Location;
thus ( ( IExec (( if=0 (a,b,I,J) ),P,s) ) . f ) = ( ( IExec (JJ,P,( Exec (i,( Initialized s )) )) ) . f ) by CKB11:1
.= ( ( IExec (J,P,( Exec (i,( Initialized s )) )) ) . f ) by A10,A13,CKB24:1
.= ( ( IExec (J,P,s) ) . f ) by A2,A3,A4,A12,A11,CKB56:1;
end;
