environ
vocabularies NUMBERS,SCMFSA_2,AMI_1,AMISTD_2,CARD_1,TARSKI,TURING_1,SCMFSA6A,FUNCT_4,FSM_1,RELAT_1,UNIALG_2,CIRCUIT2,FUNCT_1,SF_MASTR,SUBSET_1,ARYTM_3,SCMFSA7B,SCMFSA6B,SCMFSA6C,AMI_3,SCMFSA8A,NAT_1,GRAPHSP,XXREAL_0,MSUALG_1,STRUCT_0,ARYTM_1,INT_1,COMPLEX1,PARTFUN1,FINSEQ_1,FINSEQ_2,SCMFSA8B,ORDINAL1,SCMNORM,RELOC,PBOOLE,FUNCOP_1,XBOOLE_0,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,INT_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCOP_1,FUNCT_4,PBOOLE,FUNCT_7,FINSEQ_1,FINSEQ_2,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,SCMFSA_2,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,INT_2,XXREAL_0,CKB12,CKB13,CKB14;
definitions FUNCOP_1,COMPOS_1,EXTPRO_1,STRUCT_0,SCMFSA6A,MEMSTR_0,CKB12,CKB13,CKB14;
theorems TARSKI,NAT_1,FUNCT_1,FUNCT_4,SCMFSA_2,MEMSTR_0,SCMFSA6A,GRFUNC_1,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,RELAT_1,XBOOLE_1,XREAL_1,ORDINAL1,FUNCOP_1,XXREAL_0,PARTFUN1,AFINSQ_1,SCMFSA10,COMPOS_1,EXTPRO_1,AMISTD_2,PBOOLE,AMISTD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
schemes NAT_1;
registrations SETFAM_1,FUNCT_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMFSA_2,SF_MASTR,SCMFSA6A,SCMFSA6B,SCMFSA6C,ORDINAL1,MEMSTR_0,XBOOLE_0,FINSET_1,RELSET_1,SCMFSA10,AMISTD_2,COMPOS_1,EXTPRO_1,PBOOLE,FUNCT_4,FUNCOP_1,AMISTD_1,RELAT_1,STRUCT_0;
constructors DOMAIN_1,XXREAL_0,NAT_1,INT_2,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,AMISTD_2,RELSET_1,SCMFSA7B,PRE_POLY,AMISTD_1,PBOOLE,FUNCOP_1,FUNCT_4,MEMSTR_0,CKB12,CKB13,CKB14;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve P for (Instruction-Sequence of ( SCM+FSA ));
theorem
Th25: (for I,J being (Program of ( SCM+FSA )) holds (for a being  read-write Int-Location holds (for s being (State of ( SCM+FSA )) holds (((( s . a ) <= ( 0 ) & J is_closed_on ( Initialized s ),P) & J is_halting_on ( Initialized s ),P) implies ( IExec (( if>0 (a,I,J) ),P,s) ) = ( ( IExec (J,P,s) ) +* ( Start-At (( ( ( card I ) + ( card J ) ) + 3 ),( SCM+FSA )) ) )))))
proof
let I being (Program of ( SCM+FSA ));
let J being (Program of ( SCM+FSA ));
let a being  read-write Int-Location;
let s being (State of ( SCM+FSA ));
set I1 = ( I ';' ( Stop ( SCM+FSA ) ) );
set JI2 = ( ( ( J ';' ( Goto ( ( card I ) + 1 ) ) ) ';' I ) ';' ( Stop ( SCM+FSA ) ) );
set s2 = ( Initialized s );
set P2 = ( P +* JI2 );
A1: JI2 c= P2 by FUNCT_4:25;
set P3 = ( P +* ( if>0 (a,I,J) ) );
set s4 = ( Comput (P3,s2,1) );
set s5 = ( Comput (P3,s2,2) );
set i = ( a >0_goto ( ( card J ) + 3 ) );
( 0 ) in ( dom ( if>0 (a,I,J) ) ) by CKB15:1;
then A3: ( P3 . ( 0 ) ) = ( ( if>0 (a,I,J) ) . ( 0 ) ) by FUNCT_4:13
.= i by CKB16:1;
A5: 1 in ( dom ( if>0 (a,I,J) ) ) by CKB15:1;
A6: ( P3 . 1 ) = ( ( if>0 (a,I,J) ) . 1 ) by A5,FUNCT_4:13
.= ( goto 2 ) by CKB16:1;
L1: ( dom ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) ) = { ( intloc ( 0 ) ),( IC ( SCM+FSA ) ) } by SCMFSA6A:42;
(a <> ( intloc ( 0 ) ) & a <> ( IC ( SCM+FSA ) )) by SCMFSA_2:56;
then B10: (not a in ( dom ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) )) by L1,TARSKI:def 2;
( IC ( SCM+FSA ) ) in ( dom ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) ) by MEMSTR_0:48;
then A7: ( IC s2 ) = ( IC ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) ) by FUNCT_4:13
.= ( 0 ) by MEMSTR_0:def 8;
( if>0 (a,I,J) ) = ( ( ( i ';' J ) ';' ( Goto ( ( card I ) + 1 ) ) ) ';' I1 ) by SCMFSA6A:25
.= ( ( i ';' J ) ';' ( ( Goto ( ( card I ) + 1 ) ) ';' I1 ) ) by SCMFSA6A:25
.= ( i ';' ( J ';' ( ( Goto ( ( card I ) + 1 ) ) ';' I1 ) ) ) by SCMFSA6A:29
.= ( i ';' ( ( J ';' ( Goto ( ( card I ) + 1 ) ) ) ';' I1 ) ) by SCMFSA6A:25
.= ( ( Macro i ) ';' JI2 ) by SCMFSA6A:25;
then ( Reloc (JI2,( card ( Macro i ) )) ) c= ( if>0 (a,I,J) ) by CKB1:1;
then A9: ( Reloc (JI2,2) ) c= ( if>0 (a,I,J) ) by COMPOS_1:56;
( if>0 (a,I,J) ) c= P3 by FUNCT_4:25;
then A13: ( Reloc (JI2,2) ) c= P3 by A9,XBOOLE_1:1;
A14: ( Comput (P3,s2,( ( 0 ) + 1 )) ) = ( Following (P3,( Comput (P3,s2,( 0 )) )) ) by EXTPRO_1:3
.= ( Following (P3,s2) ) by EXTPRO_1:2
.= ( Exec (i,s2) ) by A7,A3,PBOOLE:143;
assume ( s . a ) <= ( 0 );
then ( s2 . a ) <= ( 0 ) by B10,FUNCT_4:11;
then A15: ( IC ( Comput (P3,s2,1) ) ) = ( succ ( 0 ) ) by A7,A14,SCMFSA_2:71
.= ( ( 0 ) + 1 );
assume A16: J is_closed_on ( Initialized s ),P;
A17: ( Comput (P3,s2,( 1 + 1 )) ) = ( Following (P3,s4) ) by EXTPRO_1:3
.= ( Exec (( goto 2 ),s4) ) by A15,A6,PBOOLE:143;
then A18: ( IC s5 ) = 2 by SCMFSA_2:69;
A20:now
let f being FinSeq-Location;
thus ( s2 . f ) = ( ( Comput (P3,s2,1) ) . f ) by A14,SCMFSA_2:71
.= ( s5 . f ) by A17,SCMFSA_2:69;
end;
now
let a being Int-Location;
thus ( s2 . a ) = ( ( Comput (P3,s2,1) ) . a ) by A14,SCMFSA_2:71
.= ( s5 . a ) by A17,SCMFSA_2:69;
end;
then A21: ( DataPart s2 ) = ( DataPart s5 ) by A20,SCMFSA6A:7;
assume A22: J is_halting_on ( Initialized s ),P;
then A23: P2 halts_on s2 by A16,SCMFSA8A:39;
JI2 is_closed_on ( Initialized s ),P by A16,A22,SCMFSA8A:37;
then A24: JI2 is_closed_on s2,P2 by CKB7:1;
A25: ( CurInstr (P3,( Comput (P3,s2,( ( LifeSpan (P2,s2) ) + 2 )) )) ) = ( CurInstr (P3,( Comput (P3,s5,( LifeSpan (P2,s2) )) )) ) by EXTPRO_1:4
.= ( IncAddr (( CurInstr (P2,( Comput (P2,s2,( LifeSpan (P2,s2) )) )) ),2) ) by A24,A18,A21,CKB9:1,A13,A1
.= ( IncAddr (( halt ( SCM+FSA ) ),2) ) by A23,EXTPRO_1:def 15
.= ( halt ( SCM+FSA ) ) by COMPOS_1:11;
then A26: P3 halts_on s2 by EXTPRO_1:29;
now
let l being (Element of ( NAT ));
assume A27: l < ( ( LifeSpan (P2,s2) ) + 2 );
A28: ( Comput (P3,s2,( 0 )) ) = s2 by EXTPRO_1:2;
per cases ;
suppose l = ( 0 );

hence ( CurInstr (P3,( Comput (P3,s2,l) )) ) <> ( halt ( SCM+FSA ) ) by A7,A3,A28,PBOOLE:143;
end;
suppose l = 1;

hence ( CurInstr (P3,( Comput (P3,s2,l) )) ) <> ( halt ( SCM+FSA ) ) by A15,A6,PBOOLE:143;
end;
suppose A29: (l <> ( 0 ) & l <> 1);

assume A30: ( CurInstr (P3,( Comput (P3,s2,l) )) ) = ( halt ( SCM+FSA ) );
consider n being Nat such that A31: l = ( n + 1 ) by A29,NAT_1:6;
n <> ( 0 ) by A29,A31;
then consider l2 being Nat such that A32: n = ( l2 + 1 ) by NAT_1:6;
reconsider l2 as (Element of ( NAT )) by ORDINAL1:def 12;
( InsCode ( CurInstr (P2,( Comput (P2,s2,l2) )) ) ) = ( InsCode ( IncAddr (( CurInstr (P2,( Comput (P2,s2,l2) )) ),2) ) ) by COMPOS_1:def 17
.= ( InsCode ( CurInstr (P3,( Comput (P3,s5,l2) )) ) ) by A24,A18,A21,CKB9:1,A13,A1
.= ( InsCode ( CurInstr (P3,( Comput (P3,s2,( l2 + ( 1 + 1 ) )) )) ) ) by EXTPRO_1:4
.= ( 0 ) by A31,A32,A30,SCMFSA_2:97;
then A33: ( CurInstr (P2,( Comput (P2,s2,l2) )) ) = ( halt ( SCM+FSA ) ) by SCMFSA_2:95;
( n + 1 ) < ( ( ( LifeSpan (P2,s2) ) + 1 ) + 1 ) by A27,A31;
then n < ( ( LifeSpan (P2,s2) ) + 1 ) by XREAL_1:6;
then l2 < ( LifeSpan (P2,s2) ) by A32,XREAL_1:6;
hence contradiction by A23,A33,EXTPRO_1:def 15;
end;
end;
then (for l being (Element of ( NAT )) holds (( CurInstr (P3,( Comput (P3,s2,l) )) ) = ( halt ( SCM+FSA ) ) implies ( ( LifeSpan (P2,s2) ) + 2 ) <= l));
then A34: ( LifeSpan (P3,s2) ) = ( ( LifeSpan (P2,s2) ) + 2 ) by A25,A26,EXTPRO_1:def 15;
A35: ( DataPart ( Result (P2,s2) ) ) = ( DataPart ( Comput (P2,s2,( LifeSpan (P2,s2) )) ) ) by A22,A16,EXTPRO_1:23,SCMFSA8A:39
.= ( DataPart ( Comput (P3,s5,( LifeSpan (P2,s2) )) ) ) by A24,A18,A21,CKB9:1,A13,A1
.= ( DataPart ( Comput (P3,s2,( ( LifeSpan (P2,s2) ) + 2 )) ) ) by EXTPRO_1:4
.= ( DataPart ( Result (P3,s2) ) ) by A26,A34,EXTPRO_1:23;
A36:now
let x being set;
A37: ( dom ( Start-At (( ( ( card I ) + ( card J ) ) + 3 ),( SCM+FSA )) ) ) = { ( IC ( SCM+FSA ) ) } by FUNCOP_1:13;
A38: ( IExec (( if>0 (a,I,J) ),P,s) ) = ( Result (P3,s2) ) by SCMFSA6B:def 1;
A39: ( IExec (JI2,P,s) ) = ( Result (P2,s2) ) by SCMFSA6B:def 1;
assume A41: x in ( dom ( IExec (( if>0 (a,I,J) ),P,s) ) );
per cases  by A41,SCMFSA6A:5;
suppose A42: x is Int-Location;

then x <> ( IC ( SCM+FSA ) ) by SCMFSA_2:56;
then A43: (not x in ( dom ( Start-At (( ( ( card I ) + ( card J ) ) + 3 ),( SCM+FSA )) ) )) by A37,TARSKI:def 1;
thus ( ( IExec (( if>0 (a,I,J) ),P,s) ) . x ) = ( ( Result (P3,s2) ) . x ) by A38
.= ( ( Result (P2,s2) ) . x ) by A35,A42,SCMFSA6A:7
.= ( ( IExec (JI2,P,s) ) . x ) by A39
.= ( ( ( IExec (JI2,P,s) ) +* ( Start-At (( ( ( card I ) + ( card J ) ) + 3 ),( SCM+FSA )) ) ) . x ) by A43,FUNCT_4:11;
end;
suppose A44: x is FinSeq-Location;

then x <> ( IC ( SCM+FSA ) ) by SCMFSA_2:57;
then A45: (not x in ( dom ( Start-At (( ( ( card I ) + ( card J ) ) + 3 ),( SCM+FSA )) ) )) by A37,TARSKI:def 1;
thus ( ( IExec (( if>0 (a,I,J) ),P,s) ) . x ) = ( ( Result (P3,s2) ) . x ) by A38
.= ( ( Result (P2,s2) ) . x ) by A35,A44,SCMFSA6A:7
.= ( ( IExec (JI2,P,s) ) . x ) by A39
.= ( ( ( IExec (JI2,P,s) ) +* ( Start-At (( ( ( card I ) + ( card J ) ) + 3 ),( SCM+FSA )) ) ) . x ) by A45,FUNCT_4:11;
end;
suppose A46: x = ( IC ( SCM+FSA ) );

then A47: x in ( dom ( Start-At (( ( ( card I ) + ( card J ) ) + 3 ),( SCM+FSA )) ) ) by A37,TARSKI:def 1;
A49: ( IC ( Result (P2,s2) ) ) = ( IC ( IExec (JI2,P,s) ) ) by A39
.= ( ( ( card I ) + ( card J ) ) + 1 ) by A16,A22,SCMFSA8A:40;
thus ( ( IExec (( if>0 (a,I,J) ),P,s) ) . x ) = ( ( Result (P3,s2) ) . x ) by A38
.= ( ( Comput (P3,s2,( ( LifeSpan (P2,s2) ) + 2 )) ) . x ) by A26,A34,EXTPRO_1:23
.= ( IC ( Comput (P3,s5,( LifeSpan (P2,s2) )) ) ) by A46,EXTPRO_1:4
.= ( ( IC ( Comput (P2,s2,( LifeSpan (P2,s2) )) ) ) + 2 ) by A24,A18,A21,CKB9:1,A13,A1
.= ( ( IC ( Result (P2,s2) ) ) + 2 ) by A22,A16,EXTPRO_1:23,SCMFSA8A:39
.= ( ( Start-At (( ( ( ( card I ) + ( card J ) ) + 1 ) + 2 ),( SCM+FSA )) ) . ( IC ( SCM+FSA ) ) ) by A49,FUNCOP_1:72
.= ( ( ( IExec (JI2,P,s) ) +* ( Start-At (( ( ( card I ) + ( card J ) ) + 3 ),( SCM+FSA )) ) ) . x ) by A46,A47,FUNCT_4:13;
end;
end;
( dom ( IExec (( if>0 (a,I,J) ),P,s) ) ) = (the carrier of ( SCM+FSA )) by PARTFUN1:def 2
.= ( dom ( ( IExec (JI2,P,s) ) +* ( Start-At (( ( ( card I ) + ( card J ) ) + 3 ),( SCM+FSA )) ) ) ) by PARTFUN1:def 2;
hence ( IExec (( if>0 (a,I,J) ),P,s) ) = ( ( IExec (JI2,P,s) ) +* ( Start-At (( ( ( card I ) + ( card J ) ) + 3 ),( SCM+FSA )) ) ) by A36,FUNCT_1:2
.= ( ( ( IExec (J,P,s) ) +* ( Start-At (( ( ( card I ) + ( card J ) ) + 1 ),( SCM+FSA )) ) ) +* ( Start-At (( ( ( card I ) + ( card J ) ) + 3 ),( SCM+FSA )) ) ) by A16,A22,SCMFSA8A:41
.= ( ( IExec (J,P,s) ) +* ( Start-At (( ( ( card I ) + ( card J ) ) + 3 ),( SCM+FSA )) ) ) by FUNCT_4:114;
end;
