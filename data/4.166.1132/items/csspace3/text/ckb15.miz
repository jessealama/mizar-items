environ
vocabularies NUMBERS,SUBSET_1,CSSPACE,RSSPACE,SERIES_1,TARSKI,CFUNCT_1,COMSEQ_1,SEQ_1,SEQ_2,FUNCT_1,COMPLEX1,ARYTM_1,ORDINAL2,FUNCOP_1,ARYTM_3,XBOOLE_0,RLSUB_1,RLVECT_1,CARD_1,XXREAL_0,RELAT_1,VALUED_1,CLVECT_1,ALGSTR_0,CARD_3,BINOP_1,ZFMISC_1,XREAL_0,ORDINAL1,STRUCT_0,SUPINF_2,NORMSP_1,REALSET1,PRE_TOPC,METRIC_1,REAL_1,NAT_1,RSSPACE3,XXREAL_2,CSSPACE3,NORMSP_0,RELAT_2;
notations TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,ORDINAL1,NUMBERS,XREAL_0,COMPLEX1,REAL_1,NAT_1,STRUCT_0,ALGSTR_0,RELAT_1,BINOP_1,REALSET1,DOMAIN_1,PARTFUN1,FUNCT_1,XXREAL_0,FUNCT_2,FUNCOP_1,PRE_TOPC,RLVECT_1,VALUED_1,SEQ_1,SEQ_2,SERIES_1,COMSEQ_1,CFUNCT_1,COMSEQ_2,COMSEQ_3,NORMSP_0,CLVECT_1,CSSPACE,CKB1,CKB7,CKB13;
definitions REALSET1,RLVECT_1,BINOP_1,STRUCT_0,ALGSTR_0,VALUED_1,NORMSP_0,CKB1,CKB7,CKB13;
theorems RELAT_1,ABSVALUE,ZFMISC_1,SEQ_1,SEQ_2,SERIES_1,FUNCT_1,NAT_1,FUNCT_2,RLVECT_1,RSSPACE,CSSPACE,CLVECT_1,COMSEQ_1,COMSEQ_2,COMSEQ_3,COMPLEX1,TARSKI,XBOOLE_0,RSSPACE2,FUNCOP_1,XREAL_1,XXREAL_0,VALUED_1,NORMSP_0,CKB1,CKB2,CKB5,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
schemes NAT_1,SEQ_1,FUNCT_2,COMSEQ_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,NUMBERS,XREAL_0,MEMBERED,COMSEQ_2,REALSET1,STRUCT_0,CLVECT_1,CSSPACE,VALUED_1,VALUED_0,NORMSP_0,CKB3,CKB4,CKB6,CKB8;
constructors PARTFUN1,BINOP_1,FUNCOP_1,XXREAL_0,REAL_1,NAT_1,COMSEQ_2,COMSEQ_3,REALSET1,CSSPACE,SEQ_1,SEQ_2,SERIES_1,VALUED_1,RELSET_1,CKB1,CKB7,CKB13;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
theorem
Th8: ((((((((((the carrier of ( Complex_l1_Space )) = ( the_set_of_l1ComplexSequences ) & (for x being set holds (x is (VECTOR of ( Complex_l1_Space )) iff (x is Complex_Sequence & ( seq_id x ) is  absolutely_summable)))) & ( 0. ( Complex_l1_Space ) ) = ( CZeroseq )) & (for u being (VECTOR of ( Complex_l1_Space )) holds u = ( seq_id u ))) & (for u,v being (VECTOR of ( Complex_l1_Space )) holds ( u + v ) = ( ( seq_id u ) + ( seq_id v ) ))) & (for p being Complex holds (for u being (VECTOR of ( Complex_l1_Space )) holds ( p * u ) = ( p (#) ( seq_id u ) )))) & (for u being (VECTOR of ( Complex_l1_Space )) holds (( - u ) = ( - ( seq_id u ) ) & ( seq_id ( - u ) ) = ( - ( seq_id u ) )))) & (for u,v being (VECTOR of ( Complex_l1_Space )) holds ( u - v ) = ( ( seq_id u ) - ( seq_id v ) ))) & (for v being (VECTOR of ( Complex_l1_Space )) holds ( seq_id v ) is  absolutely_summable)) & (for v being (VECTOR of ( Complex_l1_Space )) holds ||. v .|| = ( Sum |. ( seq_id v ) .| )))
proof
set l1 = ( Complex_l1_Space );
A1: (for x being set holds (x is (Element of l1) iff (x is Complex_Sequence & ( seq_id x ) is  absolutely_summable)))
proof
let x being set;
(x in ( the_set_of_ComplexSequences ) iff x is Complex_Sequence) by CSSPACE:def 1;
hence thesis by CKB1:def 1;
end;
A2: (for u,v being (VECTOR of l1) holds ( u + v ) = ( ( seq_id u ) + ( seq_id v ) ))
proof
let u being (VECTOR of l1);
let v being (VECTOR of l1);
reconsider u1 = u,v1 = v as (VECTOR of ( Linear_Space_of_ComplexSequences )) by CKB5:1,CLVECT_1:29;
set L1 = ( Linear_Space_of_ComplexSequences );
set W = ( the_set_of_l1ComplexSequences );
( dom (the addF of L1) ) = [: (the carrier of L1),(the carrier of L1) :] by FUNCT_2:def 1;
then A3: ( dom ( (the addF of ( Linear_Space_of_ComplexSequences )) || W ) ) = [: W,W :] by RELAT_1:62,ZFMISC_1:96;
( u + v ) = ( ( (the addF of ( Linear_Space_of_ComplexSequences )) || W ) . [ u,v ] ) by CSSPACE:def 8
.= ( u1 + v1 ) by A3,FUNCT_1:47;
hence thesis by CSSPACE:2,CSSPACE:def 7;
end;
A4: (for p being Complex holds (for u being (VECTOR of l1) holds ( p * u ) = ( p (#) ( seq_id u ) )))
proof
let p being Complex;
let u being (VECTOR of l1);
reconsider u1 = u as (VECTOR of ( Linear_Space_of_ComplexSequences )) by CKB5:1,CLVECT_1:29;
set L1 = ( Linear_Space_of_ComplexSequences );
set W = ( the_set_of_l1ComplexSequences );
( dom (the Mult of L1) ) = [: ( COMPLEX ),(the carrier of L1) :] by FUNCT_2:def 1;
then A5: ( dom ( (the Mult of ( Linear_Space_of_ComplexSequences )) | [: ( COMPLEX ),W :] ) ) = [: ( COMPLEX ),W :] by RELAT_1:62,ZFMISC_1:96;
( p * u ) = ( (the Mult of l1) . [ p,u ] ) by CLVECT_1:def 1
.= ( ( (the Mult of ( Linear_Space_of_ComplexSequences )) | [: ( COMPLEX ),W :] ) . [ p,u ] ) by CSSPACE:def 9
.= ( (the Mult of ( Linear_Space_of_ComplexSequences )) . [ p,u ] ) by A5,FUNCT_1:47
.= ( p * u1 ) by CLVECT_1:def 1;
hence thesis by CSSPACE:3,CSSPACE:def 7;
end;
A6: (for u being (VECTOR of l1) holds u = ( seq_id u ))
proof
let u being (VECTOR of l1);
u is (VECTOR of ( Linear_Space_of_ComplexSequences )) by CKB5:1,CLVECT_1:29;
hence thesis by CSSPACE:def 2,CSSPACE:def 7;
end;
A7: (for u being (VECTOR of l1) holds (( - u ) = ( - ( seq_id u ) ) & ( seq_id ( - u ) ) = ( - ( seq_id u ) )))
proof
let u being (VECTOR of l1);
( - u ) = ( ( - ( 1r ) ) * u ) by CKB14:1,CLVECT_1:3
.= ( ( - ( 1r ) ) (#) ( seq_id u ) ) by A4
.= ( - ( seq_id u ) ) by COMSEQ_1:11;
hence thesis by A6;
end;
A8: (for u,v being (VECTOR of l1) holds ( u - v ) = ( ( seq_id u ) - ( seq_id v ) ))
proof
let u being (VECTOR of l1);
let v being (VECTOR of l1);
thus ( u - v ) = ( ( seq_id u ) + ( seq_id ( - v ) ) ) by A2
.= ( ( seq_id u ) - ( seq_id v ) ) by A7;
end;
A9: (for v being (VECTOR of l1) holds ||. v .|| = ( Sum |. ( seq_id v ) .| )) by CKB7:def 1;
( 0. l1 ) = ( 0. ( Linear_Space_of_ComplexSequences ) ) by CSSPACE:def 10
.= ( CZeroseq ) by CSSPACE:def 7;
hence thesis by A1,A6,A2,A4,A7,A8,A9;
end;
