environ
vocabularies NUMBERS,SUBSET_1,CSSPACE,RSSPACE,SERIES_1,TARSKI,CFUNCT_1,COMSEQ_1,SEQ_1,SEQ_2,FUNCT_1,COMPLEX1,ARYTM_1,ORDINAL2,FUNCOP_1,ARYTM_3,XBOOLE_0,RLSUB_1,RLVECT_1,CARD_1,XXREAL_0,RELAT_1,VALUED_1,CLVECT_1,ALGSTR_0,CARD_3,BINOP_1,ZFMISC_1,XREAL_0,ORDINAL1,STRUCT_0,SUPINF_2,NORMSP_1,REALSET1,PRE_TOPC,METRIC_1,REAL_1,NAT_1,RSSPACE3,XXREAL_2,CSSPACE3,NORMSP_0,RELAT_2;
notations TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,ORDINAL1,NUMBERS,XREAL_0,COMPLEX1,REAL_1,NAT_1,STRUCT_0,ALGSTR_0,RELAT_1,BINOP_1,REALSET1,DOMAIN_1,PARTFUN1,FUNCT_1,XXREAL_0,FUNCT_2,FUNCOP_1,PRE_TOPC,RLVECT_1,VALUED_1,SEQ_1,SEQ_2,SERIES_1,COMSEQ_1,CFUNCT_1,COMSEQ_2,COMSEQ_3,NORMSP_0,CLVECT_1,CSSPACE,CKB1,CKB7;
definitions REALSET1,RLVECT_1,BINOP_1,STRUCT_0,ALGSTR_0,VALUED_1,NORMSP_0,CKB1,CKB7;
theorems RELAT_1,ABSVALUE,ZFMISC_1,SEQ_1,SEQ_2,SERIES_1,FUNCT_1,NAT_1,FUNCT_2,RLVECT_1,RSSPACE,CSSPACE,CLVECT_1,COMSEQ_1,COMSEQ_2,COMSEQ_3,COMPLEX1,TARSKI,XBOOLE_0,RSSPACE2,FUNCOP_1,XREAL_1,XXREAL_0,VALUED_1,NORMSP_0,CKB1,CKB2,CKB5,CKB7,CKB9;
schemes NAT_1,SEQ_1,FUNCT_2,COMSEQ_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,NUMBERS,XREAL_0,MEMBERED,COMSEQ_2,REALSET1,STRUCT_0,CLVECT_1,CSSPACE,VALUED_1,VALUED_0,NORMSP_0,CKB3,CKB4,CKB6,CKB8;
constructors PARTFUN1,BINOP_1,FUNCOP_1,XXREAL_0,REAL_1,NAT_1,COMSEQ_2,COMSEQ_3,REALSET1,CSSPACE,SEQ_1,SEQ_2,SERIES_1,VALUED_1,RELSET_1,CKB1,CKB7;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
theorem
Th5: (for cseq being Complex_Sequence holds ((for n being (Element of ( NAT )) holds ( cseq . n ) = ( 0c )) implies (cseq is  absolutely_summable & ( Sum |. cseq .| ) = ( 0 ))))
proof
let cseq being Complex_Sequence;
assume that
A1: (for n being (Element of ( NAT )) holds ( cseq . n ) = ( 0c ));
A2: (for n being (Element of ( NAT )) holds ( |. cseq .| . n ) = ( 0 ))
proof
let n being (Element of ( NAT ));
( cseq . n ) = ( 0c ) by A1;
hence thesis by COMPLEX1:44,VALUED_1:18;
end;
A3: (for m being (Element of ( NAT )) holds ( ( Partial_Sums |. cseq .| ) . m ) = ( 0 ))
proof
defpred P[ (Element of ( NAT )) ]
 means
( |. cseq .| . $1 ) = ( ( Partial_Sums |. cseq .| ) . $1 );
let m being (Element of ( NAT ));
A4: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being (Element of ( NAT ));
assume that
A5: ( |. cseq .| . k ) = ( ( Partial_Sums |. cseq .| ) . k );
thus ( |. cseq .| . ( k + 1 ) ) = ( ( 0 ) + ( |. cseq .| . ( k + 1 ) ) )
.= ( ( |. cseq .| . k ) + ( |. cseq .| . ( k + 1 ) ) ) by A2
.= ( ( Partial_Sums |. cseq .| ) . ( k + 1 ) ) by A5,SERIES_1:def 1;
end;
A6: P[ ( 0 ) ] by SERIES_1:def 1;
(for n being (Element of ( NAT )) holds P[ n ]) from NAT_1:sch 1(A6,A4);
hence ( ( Partial_Sums |. cseq .| ) . m ) = ( |. cseq .| . m )
.= ( 0 ) by A2;
end;
A7: (for p being  real number holds (( 0 ) < p implies (ex n being (Element of ( NAT )) st (for m being (Element of ( NAT )) holds (n <= m implies ( abs ( ( ( Partial_Sums |. cseq .| ) . m ) - ( 0 ) ) ) < p)))))
proof
let p being  real number;
assume that
A8: ( 0 ) < p;
take ( 0 );
let m being (Element of ( NAT ));
assume that
( 0 ) <= m;
( abs ( ( ( Partial_Sums |. cseq .| ) . m ) - ( 0 ) ) ) = ( abs ( ( 0 ) - ( 0 ) ) ) by A3
.= ( 0 ) by ABSVALUE:def 1;
hence thesis by A8;
end;
then A9: ( Partial_Sums |. cseq .| ) is  convergent by SEQ_2:def 6;
then A10: |. cseq .| is  summable by SERIES_1:def 2;
( lim ( Partial_Sums |. cseq .| ) ) = ( 0 ) by A7,A9,SEQ_2:def 7;
hence thesis by A10,COMSEQ_3:def 9,SERIES_1:def 3;
end;
