environ
vocabularies SUBSET_1,NUMBERS,PRE_TOPC,SETFAM_1,STRUCT_0,TARSKI,FUNCT_2,ZFMISC_1,XBOOLE_0,FINSET_1,FUNCT_1,RELAT_1,RCOMP_1,FINSEQ_1,NAT_1,XXREAL_0,ARYTM_3,CARD_1,ORDINAL2,VALUED_1,RELAT_2,CONNSP_1,TOPS_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XXREAL_0,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_3,NAT_1,FINSEQ_1,FINSET_1,SETFAM_1,STRUCT_0,PRE_TOPC,CONNSP_1,CKB10,CKB11,CKB33;
definitions TARSKI,PRE_TOPC,SUBSET_1,STRUCT_0,RELAT_1,CKB10,CKB11,CKB33;
theorems TARSKI,FINSET_1,SETFAM_1,FUNCT_1,FUNCT_2,FUNCT_3,NAT_1,FINSEQ_1,ZFMISC_1,PRE_TOPC,TOPS_1,RELAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,CONNSP_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42;
schemes CLASSES1,NAT_1,SUBSET_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FUNCT_2,MEMBERED,STRUCT_0,PRE_TOPC,XREAL_0,FINSEQ_1,RELAT_1,FUNCT_1;
constructors SETFAM_1,PARTFUN1,FUNCT_3,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,CONNSP_1,RELSET_1,CKB10,CKB11,CKB33;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve T for TopStruct;
reserve A for (SubSpace of T);
theorem
(for F being (Subset-Family of A) holds (F is  open implies (ex G being (Subset-Family of T) st (G is  open & (for AA being (Subset of T) holds (AA = ( [#] A ) implies F = ( G | AA )))))))
proof
let F being (Subset-Family of A);
assume A1: F is  open;
( [#] A ) c= ( [#] T ) by PRE_TOPC:def 4;
then reconsider At = ( [#] A ) as (Subset of T);
defpred X[ (Subset of T) ]
 means
(ex X1 being (Subset of T) st ((X1 = $1 & X1 is  open) & ( $1 /\ At ) in F));
consider G being (Subset-Family of T) such that A2: (for X being (Subset of T) holds (X in G iff X[ X ])) from SUBSET_1:sch 3;
take G;
thus G is  open
proof
let H being (Subset of T);
assume H in G;
then (ex X1 being (Subset of T) st ((X1 = H & X1 is  open) & ( H /\ At ) in F)) by A2;
hence thesis;
end;

let AA being (Subset of T);
assume A3: AA = ( [#] A );
then F c= ( bool AA );
then F c= ( bool ( [#] ( T | AA ) ) ) by PRE_TOPC:def 5;
then reconsider FF = F as (Subset-Family of ( T | AA ));
(for X being (Subset of ( T | AA )) holds (X in FF iff (ex X9 being (Subset of T) st (X9 in G & ( X9 /\ AA ) = X))))
proof
let X being (Subset of ( T | AA ));
thus (X in FF implies (ex X9 being (Subset of T) st (X9 in G & ( X9 /\ AA ) = X)))
proof
assume A4: X in FF;
then reconsider XX = X as (Subset of A);
XX is  open by A1,A4,CKB10:def 1;
then consider Y being (Subset of T) such that A5: (Y is  open & ( Y /\ ( [#] A ) ) = XX) by CKB27:1;
take Y;
thus thesis by A2,A3,A4,A5;
end;

given X9 being (Subset of T) such that
A6: X9 in G
and
A7: ( X9 /\ AA ) = X;

(ex X1 being (Subset of T) st ((X1 = X9 & X1 is  open) & ( X9 /\ At ) in F)) by A2,A6;
hence thesis by A3,A7;
end;
hence thesis by CKB33:def 1;
end;
