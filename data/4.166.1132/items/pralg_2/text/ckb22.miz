environ
vocabularies XBOOLE_0,MSUALG_1,CARD_3,FUNCT_1,SUBSET_1,PBOOLE,RELAT_1,FUNCT_6,TARSKI,FUNCOP_1,FINSEQ_4,FUNCT_5,ZFMISC_1,PRALG_1,MCART_1,COMPLEX1,STRUCT_0,MARGREL1,RLVECT_2,FUNCT_2,PRALG_2,PARTFUN1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,MCART_1,STRUCT_0,FUNCOP_1,FINSEQ_2,FUNCT_5,FUNCT_6,CARD_3,PBOOLE,PRALG_1,MSUALG_1,CKB3,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14,CKB18,CKB20;
definitions TARSKI,PBOOLE,FUNCOP_1,XBOOLE_0,BINOP_1,FUNCT_6,FUNCT_2,CKB3,CKB5,CKB8,CKB9,CKB10,CKB12,CKB14,CKB18,CKB20;
theorems TARSKI,FUNCT_1,FINSEQ_1,PBOOLE,MSUALG_1,ZFMISC_1,CARD_3,FUNCT_2,MCART_1,FUNCOP_1,FUNCT_6,FUNCT_5,RELAT_1,PRALG_1,XBOOLE_0,XBOOLE_1,PARTFUN1,FINSEQ_2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB12,CKB14,CKB16,CKB17,CKB18,CKB20;
schemes FUNCT_1,FUNCT_2,CLASSES1,TARSKI,PBOOLE;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCOP_1,CARD_3,PBOOLE,STRUCT_0,MSUALG_1,RELSET_1,FINSEQ_2,CKB1,CKB2,CKB6,CKB13,CKB15,CKB19,CKB21;
constructors BINOP_1,FUNCT_6,PRALG_1,MSUALG_1,RELSET_1,FUNCT_5,CKB3,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14,CKB18,CKB20;
requirements BOOLE,SUBSET;
begin
reserve I for set;
reserve x for set;
reserve S for non  empty ManySortedSign;
definition
let I;
let S;
let A being (MSAlgebra-Family of I,S);
func SORTS A -> (ManySortedSet of (the carrier of S)) means 
:Def17: (for s being (SortSymbol of S) holds ( it . s ) = ( product ( Carrier (A,s) ) ));
existence
proof
deffunc F((SortSymbol of S)) = ( product ( Carrier (A,$1) ) );
consider f being Function such that A1: (( dom f ) = (the carrier of S) & (for s being (SortSymbol of S) holds ( f . s ) = F(s))) from FUNCT_1:sch 4;
reconsider f as (ManySortedSet of (the carrier of S)) by A1,PARTFUN1:def 2,RELAT_1:def 18;
take f;
thus thesis by A1;
end;
uniqueness
proof
let f being (ManySortedSet of (the carrier of S));
let g being (ManySortedSet of (the carrier of S));
assume that
A2: (for s being (SortSymbol of S) holds ( f . s ) = ( product ( Carrier (A,s) ) ))
and
A3: (for s being (SortSymbol of S) holds ( g . s ) = ( product ( Carrier (A,s) ) ));
(for x being set holds (x in (the carrier of S) implies ( f . x ) = ( g . x )))
proof
let x being set;
assume x in (the carrier of S);
then reconsider x1 = x as (SortSymbol of S);
( f . x1 ) = ( product ( Carrier (A,x1) ) ) by A2;
hence thesis by A3;
end;
hence thesis by PBOOLE:3;
end;
end;
