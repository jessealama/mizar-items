environ
vocabularies BCIALG_1,CARD_FIL,SUBSET_1,FUNCT_1,NUMBERS,STRUCT_0,POWER,CARD_1,ARYTM_3,XBOOLE_0,XXREAL_0,FUNCOP_1,NAT_1,SUPINF_2,RELAT_1,CHORD,WAYBEL15,GROUP_4,GROUP_1,ALG_1,EQREL_1,PARTFUN1,RELAT_2,ZFMISC_1,RCOMP_1,TARSKI,BINOP_1,GROUP_6,BCIALG_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,RELAT_1,FUNCT_1,NAT_1,FUNCT_2,XXREAL_0,FUNCOP_1,BINOP_1,STRUCT_0,BCIALG_1,RELAT_2,PARTFUN1,EQREL_1,ALG_1,CKB1,CKB24,CKB25,CKB26,CKB27,CKB28,CKB42,CKB43,CKB44;
definitions XBOOLE_0,TARSKI,STRUCT_0,BCIALG_1,RELAT_1,CKB1,CKB25,CKB26,CKB27,CKB28,CKB42,CKB43,CKB44;
theorems BCIALG_1,FUNCOP_1,NAT_1,XREAL_1,TARSKI,XBOOLE_0,RELAT_2,RELAT_1,XXREAL_0,ORDERS_1,XBOOLE_1,BINOP_1,EQREL_1,RELSET_1,ZFMISC_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB46,CKB47,CKB48;
schemes FUNCT_2,NAT_1,RELSET_1,XBOOLE_0,BINOP_1;
registrations BCIALG_1,SUBSET_1,NAT_1,RELSET_1,STRUCT_0,PARTFUN1,ORDINAL1,XREAL_0,CKB31,CKB33,CKB45;
constructors BCIALG_1,BINOP_1,XXREAL_0,NAT_1,BINARITH,EQREL_1,RELSET_1,CKB1,CKB25,CKB26,CKB27,CKB28,CKB42,CKB43,CKB44;
requirements NUMERALS,ARITHM,SUBSET,BOOLE;
begin
reserve X for BCI-algebra;
reserve x for (Element of X);
theorem
(x is  nilpotent implies ( ord x ) = ( ord ( x ` ) ))
proof
assume A1: x is  nilpotent;
then consider k being non empty (Element of ( NAT )) such that A2: ( (( 0. X ),x) to_power k ) = ( 0. X ) by CKB42:def 1;
A3: ( x ` ) is  nilpotent
proof
take k;
( (( 0. X ),( x ` )) to_power k ) = ( ( (( 0. X ),x) to_power k ) ` ) by CKB10:1
.= ( 0. X ) by A2,BCIALG_1:def 5;
hence thesis;
end;
set k = ( ord x );
A4:now
let m being (Element of ( NAT ));
assume that
A5: ( (( 0. X ),( x ` )) to_power m ) = ( 0. X )
and
A6: m <> ( 0 );
( ( (( 0. X ),x) to_power m ) ` ) = ( 0. X ) by A5,CKB10:1;
then ( ( ( (( 0. X ),x) to_power m ) ` ) ` ) = ( 0. X ) by BCIALG_1:def 5;
then ( (( 0. X ),x) to_power m ) = ( 0. X ) by CKB13:1;
hence k <= m by A1,A6,CKB44:def 1;
end;
( (( 0. X ),( x ` )) to_power k ) = ( ( (( 0. X ),x) to_power k ) ` ) by CKB10:1
.= ( ( 0. X ) ` ) by A1,CKB44:def 1
.= ( 0. X ) by BCIALG_1:def 5;
hence thesis by A3,A4,CKB44:def 1;
end;
