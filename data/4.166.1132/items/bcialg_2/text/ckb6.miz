environ
vocabularies BCIALG_1,CARD_FIL,SUBSET_1,FUNCT_1,NUMBERS,STRUCT_0,POWER,CARD_1,ARYTM_3,XBOOLE_0,XXREAL_0,FUNCOP_1,NAT_1,SUPINF_2,RELAT_1,CHORD,WAYBEL15,GROUP_4,GROUP_1,ALG_1,EQREL_1,PARTFUN1,RELAT_2,ZFMISC_1,RCOMP_1,TARSKI,BINOP_1,GROUP_6,BCIALG_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,RELAT_1,FUNCT_1,NAT_1,FUNCT_2,XXREAL_0,FUNCOP_1,BINOP_1,STRUCT_0,BCIALG_1,RELAT_2,PARTFUN1,EQREL_1,ALG_1,CKB1;
definitions XBOOLE_0,TARSKI,STRUCT_0,BCIALG_1,RELAT_1,CKB1;
theorems BCIALG_1,FUNCOP_1,NAT_1,XREAL_1,TARSKI,XBOOLE_0,RELAT_2,RELAT_1,XXREAL_0,ORDERS_1,XBOOLE_1,BINOP_1,EQREL_1,RELSET_1,ZFMISC_1,CKB1,CKB2,CKB3,CKB4,CKB5;
schemes FUNCT_2,NAT_1,RELSET_1,XBOOLE_0,BINOP_1;
registrations BCIALG_1,SUBSET_1,NAT_1,RELSET_1,STRUCT_0,PARTFUN1,ORDINAL1,XREAL_0;
constructors BCIALG_1,BINOP_1,XXREAL_0,NAT_1,BINARITH,EQREL_1,RELSET_1,CKB1;
requirements NUMERALS,ARITHM,SUBSET,BOOLE;
begin
reserve X for BCI-algebra;
reserve x for (Element of X);
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
theorem
Th5: ( (x,( 0. X )) to_power ( n + 1 ) ) = x
proof
defpred P[ set ]
 means
(for m holds ((m = $1 & m <= n) implies ( (x,( 0. X )) to_power ( m + 1 ) ) = x));
now
let k;
assume A1: (for m holds ((m = k & m <= n) implies ( (x,( 0. X )) to_power ( m + 1 ) ) = x));
let m;
assume that
A2: m = ( k + 1 )
and
A3: m <= n;
( (x,( 0. X )) to_power ( m + 1 ) ) = ( ( (x,( 0. X )) to_power ( k + 1 ) ) \ ( 0. X ) ) by A2,CKB5:1;
then A4: ( (x,( 0. X )) to_power ( m + 1 ) ) = ( (x,( 0. X )) to_power ( k + 1 ) ) by BCIALG_1:2;
k <= n by A2,A3,NAT_1:13;
hence ( (x,( 0. X )) to_power ( m + 1 ) ) = x by A1,A4;
end;
then A5: (for k holds (P[ k ] implies P[ ( k + 1 ) ]));
( (x,( 0. X )) to_power ( ( 0 ) + 1 ) ) = ( x \ ( 0. X ) ) by CKB3:1;
then A6: P[ ( 0 ) ] by BCIALG_1:2;
(for n holds P[ n ]) from NAT_1:sch 1(A6,A5);
hence thesis;
end;
