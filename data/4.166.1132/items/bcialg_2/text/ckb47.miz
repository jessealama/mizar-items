environ
vocabularies BCIALG_1,CARD_FIL,SUBSET_1,FUNCT_1,NUMBERS,STRUCT_0,POWER,CARD_1,ARYTM_3,XBOOLE_0,XXREAL_0,FUNCOP_1,NAT_1,SUPINF_2,RELAT_1,CHORD,WAYBEL15,GROUP_4,GROUP_1,ALG_1,EQREL_1,PARTFUN1,RELAT_2,ZFMISC_1,RCOMP_1,TARSKI,BINOP_1,GROUP_6,BCIALG_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,RELAT_1,FUNCT_1,NAT_1,FUNCT_2,XXREAL_0,FUNCOP_1,BINOP_1,STRUCT_0,BCIALG_1,RELAT_2,PARTFUN1,EQREL_1,ALG_1,CKB1,CKB24,CKB25,CKB26,CKB27,CKB28,CKB42,CKB43,CKB44;
definitions XBOOLE_0,TARSKI,STRUCT_0,BCIALG_1,RELAT_1,CKB1,CKB25,CKB26,CKB27,CKB28,CKB42,CKB43,CKB44;
theorems BCIALG_1,FUNCOP_1,NAT_1,XREAL_1,TARSKI,XBOOLE_0,RELAT_2,RELAT_1,XXREAL_0,ORDERS_1,XBOOLE_1,BINOP_1,EQREL_1,RELSET_1,ZFMISC_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB46;
schemes FUNCT_2,NAT_1,RELSET_1,XBOOLE_0,BINOP_1;
registrations BCIALG_1,SUBSET_1,NAT_1,RELSET_1,STRUCT_0,PARTFUN1,ORDINAL1,XREAL_0,CKB31,CKB33,CKB45;
constructors BCIALG_1,BINOP_1,XXREAL_0,NAT_1,BINARITH,EQREL_1,RELSET_1,CKB1,CKB25,CKB26,CKB27,CKB28,CKB42,CKB43,CKB44;
requirements NUMERALS,ARITHM,SUBSET,BOOLE;
begin
reserve X for BCI-algebra;
reserve x for (Element of X);
theorem
(X is BCK-algebra iff (for x holds (( ord x ) = 1 & x is  nilpotent)))
proof
thus (X is BCK-algebra implies (for x being (Element of X) holds (( ord x ) = 1 & x is  nilpotent)))
proof
set k = 1;
assume A1: X is BCK-algebra;
let x being (Element of X);
A2: ( x ` ) = ( 0. X ) by A1,BCIALG_1:def 8;
then ( (( 0. X ),x) to_power 1 ) = ( 0. X ) by CKB3:1;
then A3: x is  nilpotent by CKB42:def 1;
reconsider k as non  empty (Element of ( NAT ));
A4: (for m being (Element of ( NAT )) holds ((( (( 0. X ),x) to_power m ) = ( 0. X ) & m <> ( 0 )) implies k <= m)) by NAT_1:14;
( (( 0. X ),x) to_power k ) = ( 0. X ) by A2,CKB3:1;
hence thesis by A3,A4,CKB44:def 1;
end;

assume A5: (for x holds (( ord x ) = 1 & x is  nilpotent));
now
let x;
(( ord x ) = 1 & x is  nilpotent) by A5;
then ( (( 0. X ),x) to_power 1 ) = ( 0. X ) by CKB44:def 1;
hence ( x ` ) = ( 0. X ) by CKB3:1;
end;
hence thesis by BCIALG_1:def 8;
end;
