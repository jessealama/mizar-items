environ
vocabularies BCIALG_1,CARD_FIL,SUBSET_1,FUNCT_1,NUMBERS,STRUCT_0,POWER,CARD_1,ARYTM_3,XBOOLE_0,XXREAL_0,FUNCOP_1,NAT_1,SUPINF_2,RELAT_1,CHORD,WAYBEL15,GROUP_4,GROUP_1,ALG_1,EQREL_1,PARTFUN1,RELAT_2,ZFMISC_1,RCOMP_1,TARSKI,BINOP_1,GROUP_6,BCIALG_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,RELAT_1,FUNCT_1,NAT_1,FUNCT_2,XXREAL_0,FUNCOP_1,BINOP_1,STRUCT_0,BCIALG_1,RELAT_2,PARTFUN1,EQREL_1,ALG_1,CKB1;
definitions XBOOLE_0,TARSKI,STRUCT_0,BCIALG_1,RELAT_1,CKB1;
theorems BCIALG_1,FUNCOP_1,NAT_1,XREAL_1,TARSKI,XBOOLE_0,RELAT_2,RELAT_1,XXREAL_0,ORDERS_1,XBOOLE_1,BINOP_1,EQREL_1,RELSET_1,ZFMISC_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22;
schemes FUNCT_2,NAT_1,RELSET_1,XBOOLE_0,BINOP_1;
registrations BCIALG_1,SUBSET_1,NAT_1,RELSET_1,STRUCT_0,PARTFUN1,ORDINAL1,XREAL_0;
constructors BCIALG_1,BINOP_1,XXREAL_0,NAT_1,BINARITH,EQREL_1,RELSET_1,CKB1;
requirements NUMERALS,ARITHM,SUBSET,BOOLE;
begin
reserve X for BCI-algebra;
reserve x for (Element of X);
reserve y for (Element of X);
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
theorem
( (( (x,( x \ y )) to_power n ),( y \ x )) to_power n ) <= x
proof
defpred P[ set ]
 means
(for m being (Element of ( NAT )) holds ((m = $1 & m <= n) implies ( (( (x,( x \ y )) to_power m ),( y \ x )) to_power m ) <= x));
A1: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume A2: (for m being (Element of ( NAT )) holds ((m = k & m <= n) implies ( (( (x,( x \ y )) to_power m ),( y \ x )) to_power m ) <= x));
let m being (Element of ( NAT ));
assume that
A3: m = ( k + 1 )
and
A4: m <= n;
k <= n by A3,A4,NAT_1:13;
then ( (( (x,( x \ y )) to_power k ),( y \ x )) to_power k ) <= x by A2;
then ( ( (( (x,( x \ y )) to_power k ),( y \ x )) to_power k ) \ x ) = ( 0. X ) by BCIALG_1:def 11;
then ( ( (( ( (x,( x \ y )) to_power k ) \ x ),( y \ x )) to_power k ) \ ( y \ x ) ) = ( ( y \ x ) ` ) by CKB8:1;
then ( ( (( ( (x,( x \ y )) to_power k ) \ x ),( y \ x )) to_power ( k + 1 ) ) \ ( x \ y ) ) = ( ( ( y \ x ) ` ) \ ( x \ y ) ) by CKB5:1;
then ( (( ( ( (x,( x \ y )) to_power k ) \ x ) \ ( x \ y ) ),( y \ x )) to_power ( k + 1 ) ) = ( ( ( y \ x ) ` ) \ ( x \ y ) ) by CKB8:1;
then ( (( ( ( (x,( x \ y )) to_power k ) \ ( x \ y ) ) \ x ),( y \ x )) to_power ( k + 1 ) ) = ( ( ( y \ x ) ` ) \ ( x \ y ) ) by BCIALG_1:7;
then ( (( ( (x,( x \ y )) to_power ( k + 1 ) ) \ x ),( y \ x )) to_power ( k + 1 ) ) = ( ( ( y \ x ) ` ) \ ( x \ y ) ) by CKB5:1;
then ( (( ( (x,( x \ y )) to_power ( k + 1 ) ) \ x ),( y \ x )) to_power ( k + 1 ) ) = ( ( ( y \ y ) \ ( y \ x ) ) \ ( x \ y ) ) by BCIALG_1:def 5;
then ( (( ( (x,( x \ y )) to_power ( k + 1 ) ) \ x ),( y \ x )) to_power ( k + 1 ) ) = ( 0. X ) by BCIALG_1:1;
then ( ( (( (x,( x \ y )) to_power ( k + 1 ) ),( y \ x )) to_power ( k + 1 ) ) \ x ) = ( 0. X ) by CKB8:1;
hence thesis by A3,BCIALG_1:def 11;
end;
( x \ x ) = ( 0. X ) by BCIALG_1:def 5;
then x <= x by BCIALG_1:def 11;
then ( (x,( y \ x )) to_power ( 0 ) ) <= x by CKB2:1;
then A5: P[ ( 0 ) ] by CKB2:1;
(for n holds P[ n ]) from NAT_1:sch 1(A5,A1);
hence thesis;
end;
