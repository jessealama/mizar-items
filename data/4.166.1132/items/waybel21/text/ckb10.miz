environ
vocabularies WAYBEL_0,LATTICES,FUNCT_1,FINSET_1,SUBSET_1,STRUCT_0,FUNCOP_1,YELLOW_0,XBOOLE_0,RELAT_1,ORDINAL2,TARSKI,SEQM_3,XXREAL_0,LATTICE3,ORDERS_2,REWRITE1,CAT_1,FUNCT_3,EQREL_1,WELLORD1,WAYBEL_5,PRE_TOPC,ORDINAL1,CONNSP_2,TOPS_1,RCOMP_1,RELAT_2,WAYBEL_9,ARYTM_0,WAYBEL19,YELLOW_6,WAYBEL11,CANTOR_1,YELLOW_9,PROB_1,YELLOW_2,PRELAMB,WAYBEL21;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,FINSET_1,TOLER_1,DOMAIN_1,STRUCT_0,PRE_TOPC,TOPS_1,CONNSP_2,COMPTS_1,CANTOR_1,ORDERS_2,LATTICE3,ORDERS_3,YELLOW_0,YELLOW_2,WAYBEL_0,WAYBEL_3,WAYBEL_5,YELLOW_6,YELLOW_7,WAYBEL_9,YELLOW_9,WAYBEL11,WAYBEL17,WAYBEL19,CKB1;
definitions TARSKI,LATTICE3,YELLOW_0,WAYBEL_0,WAYBEL_1,YELLOW_6,XBOOLE_0,WELLORD1,RELAT_1,STRUCT_0,CKB1;
theorems YELLOW_0,WAYBEL_0,WAYBEL_6,PRE_TOPC,FUNCOP_1,RELAT_1,FUNCT_2,TOPS_1,TOPS_2,ZFMISC_1,CONNSP_2,WAYBEL_9,YELLOW_9,FUNCT_1,WAYBEL_1,YELLOW_6,WAYBEL19,SETWISEO,FUNCT_3,TARSKI,LATTICE3,WAYBEL11,WAYBEL17,ORDERS_2,YELLOW_2,WEIERSTR,COMPTS_1,WAYBEL10,YELLOW_7,YELLOW_4,WAYBEL20,RELSET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9;
schemes FRAENKEL,FINSET_1,LATTICE3,XBOOLE_0;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FINSET_1,STRUCT_0,PRE_TOPC,LATTICE3,YELLOW_0,WAYBEL_0,WAYBEL_2,YELLOW_6,WAYBEL_9,WAYBEL10,WAYBEL17,YELLOW_9,WAYBEL19,SUBSET_1,TOPS_1,RELSET_1,CKB2,CKB3;
constructors TOLER_1,TOPS_1,NATTRA_1,BORSUK_1,URYSOHN1,CANTOR_1,TOPS_2,ORDERS_3,YELLOW_2,WAYBEL_3,WAYBEL17,YELLOW_9,WAYBEL19,COMPTS_1,WAYBEL_2,CKB1;
requirements SUBSET,BOOLE;
begin
theorem
(for S1,T1,S2,T2 being non empty RelStr holds ((( the RelStr of S1 ) = ( the RelStr of S2 ) & ( the RelStr of T1 ) = ( the RelStr of T2 )) implies (for f1 being (Function of S1,T1) holds (for f2 being (Function of S2,T2) holds (f1 = f2 implies ((f1 is  sups-preserving implies f2 is  sups-preserving) & (f1 is  filtered-infs-preserving implies f2 is  filtered-infs-preserving)))))))
proof
let S1 being non empty RelStr,T1 being non empty RelStr,S2 being non empty RelStr,T2 being non empty RelStr;
assume that
A1: ( the RelStr of S1 ) = ( the RelStr of S2 )
and
A2: ( the RelStr of T1 ) = ( the RelStr of T2 );
let f1 being (Function of S1,T1);
let f2 being (Function of S2,T2);
assume that
A3: f1 = f2;
thus (f1 is  sups-preserving implies f2 is  sups-preserving)
proof
assume A4: (for X being (Subset of S1) holds f1 preserves_sup_of X);
let X being (Subset of S2);
thus thesis by A1,A2,A3,A4,WAYBEL_0:65;
end;

assume A5: (for X being (Subset of S1) holds (X is non empty  filtered implies f1 preserves_inf_of X));
let X being (Subset of S2);
reconsider Y = X as (Subset of S1) by A1;
assume X is non empty  filtered;
then f1 preserves_inf_of Y by A1,A5,WAYBEL_0:4;
hence thesis by A1,A2,A3,WAYBEL_0:65;
end;
