environ
vocabularies WAYBEL_0,LATTICES,FUNCT_1,FINSET_1,SUBSET_1,STRUCT_0,FUNCOP_1,YELLOW_0,XBOOLE_0,RELAT_1,ORDINAL2,TARSKI,SEQM_3,XXREAL_0,LATTICE3,ORDERS_2,REWRITE1,CAT_1,FUNCT_3,EQREL_1,WELLORD1,WAYBEL_5,PRE_TOPC,ORDINAL1,CONNSP_2,TOPS_1,RCOMP_1,RELAT_2,WAYBEL_9,ARYTM_0,WAYBEL19,YELLOW_6,WAYBEL11,CANTOR_1,YELLOW_9,PROB_1,YELLOW_2,PRELAMB,WAYBEL21;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,FINSET_1,TOLER_1,DOMAIN_1,STRUCT_0,PRE_TOPC,TOPS_1,CONNSP_2,COMPTS_1,CANTOR_1,ORDERS_2,LATTICE3,ORDERS_3,YELLOW_0,YELLOW_2,WAYBEL_0,WAYBEL_3,WAYBEL_5,YELLOW_6,YELLOW_7,WAYBEL_9,YELLOW_9,WAYBEL11,WAYBEL17,WAYBEL19,CKB1;
definitions TARSKI,LATTICE3,YELLOW_0,WAYBEL_0,WAYBEL_1,YELLOW_6,XBOOLE_0,WELLORD1,RELAT_1,STRUCT_0,CKB1;
theorems YELLOW_0,WAYBEL_0,WAYBEL_6,PRE_TOPC,FUNCOP_1,RELAT_1,FUNCT_2,TOPS_1,TOPS_2,ZFMISC_1,CONNSP_2,WAYBEL_9,YELLOW_9,FUNCT_1,WAYBEL_1,YELLOW_6,WAYBEL19,SETWISEO,FUNCT_3,TARSKI,LATTICE3,WAYBEL11,WAYBEL17,ORDERS_2,YELLOW_2,WEIERSTR,COMPTS_1,WAYBEL10,YELLOW_7,YELLOW_4,WAYBEL20,RELSET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes FRAENKEL,FINSET_1,LATTICE3,XBOOLE_0;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FINSET_1,STRUCT_0,PRE_TOPC,LATTICE3,YELLOW_0,WAYBEL_0,WAYBEL_2,YELLOW_6,WAYBEL_9,WAYBEL10,WAYBEL17,YELLOW_9,WAYBEL19,SUBSET_1,TOPS_1,RELSET_1,CKB2,CKB3,CKB17;
constructors TOLER_1,TOPS_1,NATTRA_1,BORSUK_1,URYSOHN1,CANTOR_1,TOPS_2,ORDERS_3,YELLOW_2,WAYBEL_3,WAYBEL17,YELLOW_9,WAYBEL19,COMPTS_1,WAYBEL_2,CKB1;
requirements SUBSET,BOOLE;
begin
theorem
(for T1,T2 being non  empty RelStr holds (for S1 being non  empty  full (SubRelStr of T1) holds (for S2 being non  empty  full (SubRelStr of T2) holds ((( the RelStr of T1 ) = ( the RelStr of T2 ) & (the carrier of S1) = (the carrier of S2)) implies (S1 is  sups-inheriting implies S2 is  sups-inheriting)))))
proof
let T1 being non  empty RelStr;
let T2 being non  empty RelStr;
let S1 being non  empty  full (SubRelStr of T1);
let S2 being non  empty  full (SubRelStr of T2);
assume A1: ( the RelStr of T1 ) = ( the RelStr of T2 );
assume A2: (the carrier of S1) = (the carrier of S2);
assume A3: (for X being (Subset of S1) holds ( ex_sup_of X,T1 implies ( "\/" (X,T1) ) in (the carrier of S1)));
let X being (Subset of S2);
reconsider Y = X as (Subset of S1) by A2;
assume A4:  ex_sup_of X,T2;
then ( "\/" (Y,T1) ) in (the carrier of S1) by A1,A3,YELLOW_0:14;
hence thesis by A1,A2,A4,YELLOW_0:26;
end;
