environ
vocabularies NUMBERS,REAL_3,FINSEQ_1,RELAT_1,TARSKI,VALUED_0,ORDINAL1,RFINSEQ,XXREAL_0,ARYTM_1,SUBSET_1,FUNCT_1,ARYTM_3,INT_1,ORDINAL4,XBOOLE_0,NAT_1,VALUED_1,CARD_3,BINOP_2,SETWISEO,BINOP_1,SETWOP_2,CARD_1,FINSOP_1,PARTFUN1,COMPLEX1,INT_2,PARTFUN3,XREAL_0,INT_6;
notations TARSKI,XBOOLE_0,SUBSET_1,INT_1,INT_2,ORDINAL1,NUMBERS,PARTFUN1,PARTFUN3,REAL_3,XXREAL_0,XREAL_0,FUNCT_1,VALUED_0,VALUED_1,BINOP_2,SETWISEO,RFINSEQ,BINOP_1,FINSEQ_1,SETWOP_2,RVSUM_1,XCMPLX_0,NAT_1,FINSOP_1,CKB36,CKB37,CKB42,CKB44;
definitions INT_2,XCMPLX_0,FINSEQ_1,FUNCT_1,CKB37,CKB42;
theorems INT_1,FUNCT_1,FINSEQ_1,RVSUM_1,NAT_1,SETWOP_2,FINSEQ_3,BINOP_2,SETWISEO,TARSKI,NAT_D,INT_2,XCMPLX_0,XCMPLX_1,XREAL_1,RFINSEQ,FINSEQ_5,FINSEQ_2,ABSVALUE,PARTFUN3,XBOOLE_0,XXREAL_0,ORDINAL1,XBOOLE_1,PARTFUN1,XREAL_0,WSIERP_1,VALUED_0,VALUED_1,COMPLEX1,CKB1,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB37,CKB41,CKB42,CKB47,CKB48,CKB50;
schemes FINSEQ_1,NAT_1,INT_1;
registrations NUMBERS,XREAL_0,NAT_1,INT_1,RELAT_1,FINSEQ_1,RVSUM_1,XBOOLE_0,MEMBERED,BINOP_2,ORDINAL1,XXREAL_0,VALUED_0,VALUED_1,FUNCT_1,CARD_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB14,CKB15,CKB38,CKB39,CKB40,CKB43,CKB45,CKB46,CKB49;
constructors FINSOP_1,RFINSEQ,INT_2,BINOP_2,REAL_1,SETWISEO,SETWOP_2,PARTFUN3,XXREAL_0,RVSUM_1,BINOP_1,RELSET_1,CKB42;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Lm8: (for u being  integer-yielding FinSequence holds (for m being CR_Sequence holds (for z1,z2 being Integer holds ((((((( 0 ) <= z1 & z1 < ( Product m )) & (for i being  natural number holds (i in ( dom m ) implies z1,( u . i ) are_congruent_mod ( m . i )))) & ( 0 ) <= z2) & z2 < ( Product m )) & (for i being  natural number holds (i in ( dom m ) implies z2,( u . i ) are_congruent_mod ( m . i )))) implies z1 = z2))))
proof
let u being  integer-yielding FinSequence;
let m being CR_Sequence;
let z1 being Integer;
let z2 being Integer;
assume that
A1: ( 0 ) <= z1
and
A2: z1 < ( Product m )
and
A3: (for i being  natural number holds (i in ( dom m ) implies z1,( u . i ) are_congruent_mod ( m . i )))
and
A4: ( 0 ) <= z2
and
A5: z2 < ( Product m )
and
A6: (for i being  natural number holds (i in ( dom m ) implies z2,( u . i ) are_congruent_mod ( m . i )));
defpred P[ Nat ]
 means
(for m1 being CR_Sequence holds (m1 = ( m | $1 ) implies z1,z2 are_congruent_mod ( Product m1 )));
A7:now
let i being (Element of ( NAT ));
assume A8: i in ( dom m );
then A9: ( u . i ),z2 are_congruent_mod ( m . i ) by A6,INT_1:14;
z1,( u . i ) are_congruent_mod ( m . i ) by A3,A8;
hence z1,z2 are_congruent_mod ( m . i ) by A9,INT_1:15;
end;
A10:now
let k being (Element of ( NAT ));
assume that
( 0 ) <= k
and
A11: k < ( len m );
assume A12: P[ k ];
now
set m2 = ( m | k );
let m1 being CR_Sequence;
A13: 1 <= ( k + 1 ) by NAT_1:11;
A14: ( k + 1 ) <= ( len m ) by A11,NAT_1:13;
then ( k + 1 ) in ( Seg ( len m ) ) by A13;
then A15: ( k + 1 ) in ( dom m ) by FINSEQ_1:def 3;
assume A16: m1 = ( m | ( k + 1 ) );
then A17: ( len m1 ) = ( k + 1 ) by A14,FINSEQ_1:59;
then ( k + 1 ) in ( Seg ( len m1 ) ) by A13;
then A18: ( k + 1 ) in ( dom m1 ) by FINSEQ_1:def 3;
per cases ;
suppose k > ( 0 );

then reconsider m2 as CR_Sequence by A11,CKB47:1;
set mm = ( ( Product m1 ) / ( m1 . ( k + 1 ) ) );
A19: z1,z2 are_congruent_mod ( Product m2 ) by A12;
reconsider m9 = m as (FinSequence of ( INT )) by CKB1:1;
A20: ( m . ( k + 1 ) ) = ( m1 . ( k + 1 ) ) by A16,A18,FUNCT_1:47;
( m . ( k + 1 ) ) in ( rng m ) by A15,FUNCT_1:3;
then A21: ( m1 . ( k + 1 ) ) > ( 0 ) by A20,PARTFUN3:def 1;
reconsider mm as Integer by A18,CKB21:1;
A22: ( mm * ( m1 . ( k + 1 ) ) ) = ( ( Product m1 ) * ( ( ( m1 . ( k + 1 ) ) " ) * ( m1 . ( k + 1 ) ) ) )
.= ( ( Product m1 ) * 1 ) by A21,XCMPLX_0:def 7
.= ( Product m1 );
( ( m9 | ( k + 1 ) ) | k ) = ( m9 | k ) by FINSEQ_1:82,NAT_1:11;
then m1 = ( m2 ^ <* ( m1 . ( k + 1 ) ) *> ) by A16,A17,FINSEQ_3:55;
then ( Product m1 ) = ( ( Product m2 ) * ( m1 . ( k + 1 ) ) ) by RVSUM_1:96;
then mm = ( ( Product m2 ) * ( ( m1 . ( k + 1 ) ) * ( ( m1 . ( k + 1 ) ) " ) ) );
then A23: mm = ( ( Product m2 ) * 1 ) by A21,XCMPLX_0:def 7;
z1,z2 are_congruent_mod ( m1 . ( k + 1 ) ) by A7,A15,A20;
hence z1,z2 are_congruent_mod ( Product m1 ) by A18,A19,A23,A22,CKB34:1,CKB50:1;
end;
suppose k = ( 0 );

then A24: m1 = <* ( m1 . 1 ) *> by A17,FINSEQ_1:40;
then ( dom m1 ) = ( Seg 1 ) by FINSEQ_1:38;
then A25: 1 in ( dom m1 );
1 <= ( len m ) by A14,A13,XXREAL_0:2;
then 1 in ( Seg ( len m ) );
then A26: 1 in ( dom m ) by FINSEQ_1:def 3;
( Product m1 ) = ( m1 . 1 ) by A24,RVSUM_1:95
.= ( m . 1 ) by A16,A25,FUNCT_1:47;
hence z1,z2 are_congruent_mod ( Product m1 ) by A7,A26;
end;
end;
hence P[ ( k + 1 ) ];
end;
A27: ( m | ( len m ) ) = m by FINSEQ_1:58;
A28: P[ ( 0 ) ];
(for k being (Element of ( NAT )) holds ((( 0 ) <= k & k <= ( len m )) implies P[ k ])) from INT_1:sch 7(A28,A10);
then A29: z1,z2 are_congruent_mod ( Product m ) by A27;
thus z1 = ( z1 mod ( Product m ) ) by A1,A2,NAT_D:63
.= ( z2 mod ( Product m ) ) by A29,NAT_D:64
.= z2 by A4,A5,NAT_D:63;
end;
