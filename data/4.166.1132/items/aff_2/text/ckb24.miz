environ
vocabularies DIRAF,SUBSET_1,AFF_1,ANALOAF,INCSP_1,AFF_2;
notations STRUCT_0,ANALOAF,DIRAF,AFF_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
definitions CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
theorems AFF_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23;
registrations STRUCT_0;
constructors AFF_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
begin
reserve AP for AffinPlane;
reserve a for (Element of AP);
reserve a9 for (Element of AP);
reserve b for (Element of AP);
reserve b9 for (Element of AP);
reserve c for (Element of AP);
reserve c9 for (Element of AP);
reserve o for (Element of AP);
reserve M for (Subset of AP);
reserve N for (Subset of AP);
theorem
Th24: (AP is  satisfying_PPAP iff (AP is  Pappian & AP is  satisfying_pap))
proof
A1: ((AP is  Pappian & AP is  satisfying_pap) implies AP is  satisfying_PPAP)
proof
assume that
A2: AP is  Pappian
and
A3: AP is  satisfying_pap;
thus AP is  satisfying_PPAP
proof
let M;
let N;
let a;
let b;
let c;
let a9;
let b9;
let c9;
assume that
A4: M is  being_line
and
A5: N is  being_line
and
A6: a in M
and
A7: b in M
and
A8: c in M
and
A9: a9 in N
and
A10: b9 in N
and
A11: c9 in N
and
A12: a,b9 // b,a9
and
A13: b,c9 // c,b9;
now
assume A14: M <> N;
assume A15: (not thesis);
now
assume (not M // N);
then consider o such that A16: o in M and A17: o in N by A4,A5,AFF_1:58;
A18: o <> a
proof
assume A19: o = a;
then o,b9 // a9,b by A12,AFF_1:4;
then (o = b9 or b in N) by A5,A9,A10,A17,AFF_1:48;
then (o = b9 or o = b) by A4,A5,A7,A14,A16,A17,AFF_1:18;
then (c,o // b,c9 or o,c9 // b9,c) by A13,AFF_1:4;
then (((c9 in M or c = o) or c in N) or o = c9) by A4,A5,A7,A8,A10,A11,A16,A17,AFF_1:48;
then (o = c or o = c9) by A4,A5,A8,A11,A14,A16,A17,AFF_1:18;
hence contradiction by A5,A9,A11,A15,A17,A19,AFF_1:3,AFF_1:51;
end;
A20: o <> b
proof
assume A21: o = b;
then o,c9 // b9,c by A13,AFF_1:4;
then (o = c9 or c in N) by A5,A10,A11,A17,AFF_1:48;
then A22: (o = c9 or o = c) by A4,A5,A8,A14,A16,A17,AFF_1:18;
o,a9 // b9,a by A12,A21,AFF_1:4;
then (o = a9 or a in N) by A5,A9,A10,A17,AFF_1:48;
hence contradiction by A4,A5,A6,A8,A14,A15,A16,A17,A18,A22,AFF_1:3,AFF_1:18,AFF_1:51;
end;
A23: o <> c9
proof
assume A24: o = c9;
then b9 in M by A4,A7,A8,A13,A16,A20,AFF_1:48;
then a,o // b,a9 by A4,A5,A10,A12,A14,A16,A17,AFF_1:18;
then a9 in M by A4,A6,A7,A16,A18,AFF_1:48;
hence contradiction by A4,A6,A8,A15,A16,A24,AFF_1:51;
end;
A25: o <> c
proof
assume A26: o = c;
then o,b9 // c9,b by A13,AFF_1:4;
then (o = b9 or b in N) by A5,A10,A11,A17,AFF_1:48;
then a9 in M by A4,A5,A6,A7,A9,A12,A16,A17,A18,A20,AFF_1:18,AFF_1:48;
then a9 = o by A4,A5,A9,A14,A16,A17,AFF_1:18;
hence contradiction by A15,A26,AFF_1:3;
end;
A27: o <> a9
proof
assume A28: o = a9;
then o,b // a,b9 by A12,AFF_1:4;
then b9 in M by A4,A6,A7,A16,A20,AFF_1:48;
then o = b9 by A4,A5,A10,A14,A16,A17,AFF_1:18;
then c,o // b,c9 by A13,AFF_1:4;
then c9 in M by A4,A7,A8,A16,A25,AFF_1:48;
hence contradiction by A4,A6,A8,A15,A16,A28,AFF_1:51;
end;
o <> b9
proof
assume A29: o = b9;
then o,c // b,c9 by A13,AFF_1:4;
then A30: c9 in M by A4,A7,A8,A16,A25,AFF_1:48;
a9 in M by A4,A6,A7,A12,A16,A18,A29,AFF_1:48;
hence contradiction by A4,A6,A8,A15,A30,AFF_1:51;
end;
hence thesis by A2,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A16,A17,A18,A20,A25,A27,A23,CKB2:def 1;
end;
hence thesis by A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,CKB13:def 1;
end;
hence thesis by A4,A6,A8,A9,A11,AFF_1:51;
end;

end;
(AP is  satisfying_PPAP implies (AP is  Pappian & AP is  satisfying_pap))
proof
assume A31: AP is  satisfying_PPAP;
thus AP is  Pappian
proof
let M;
let N;
let o;
let a;
let b;
let c;
let a9;
let b9;
let c9;
assume that
A32: (M is  being_line & N is  being_line)
and
((((((((M <> N & o in M) & o in N) & o <> a) & o <> a9) & o <> b) & o <> b9) & o <> c) & o <> c9)
and
A33: (((((((a in M & b in M) & c in M) & a9 in N) & b9 in N) & c9 in N) & a,b9 // b,a9) & b,c9 // c,b9);
thus thesis by A31,A32,A33,CKB1:def 1;
end;

thus AP is  satisfying_pap
proof
let M;
let N;
let a;
let b;
let c;
let a9;
let b9;
let c9;
assume that
A34: ((((M is  being_line & N is  being_line) & a in M) & b in M) & c in M)
and
(M // N & M <> N)
and
A35: ((((a9 in N & b9 in N) & c9 in N) & a,b9 // b,a9) & b,c9 // c,b9);
thus thesis by A31,A34,A35,CKB1:def 1;
end;

end;
hence thesis by A1;
end;
