environ
vocabularies NUMBERS,STRUCT_0,ZFMISC_1,RLVECT_1,ALGSTR_0,VECTSP_1,XBOOLE_0,SUPINF_2,MESFUNC1,SUBSET_1,RELAT_1,FINSEQ_1,ARYTM_3,PARTFUN1,TARSKI,CARD_3,NAT_1,ORDINAL4,FUNCT_1,FVSUM_1,ALGSTR_1,BINOP_1,LATTICES,PRE_POLY,ALGSEQ_1,FINSET_1,ARYTM_1,FUNCOP_1,GROUP_1,FUNCT_4,ORDINAL1,XXREAL_0,FINSEQ_2,MEMBER_1,FUNCT_2,CARD_1,POLYNOM1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,RELAT_1,FUNCT_1,PBOOLE,RELSET_1,FINSET_1,ORDINAL1,PARTFUN1,FUNCT_2,FINSEQ_1,STRUCT_0,ALGSTR_0,FUNCT_3,XXREAL_0,BINOP_1,NAT_1,ALGSTR_1,RLVECT_1,FINSEQ_2,GROUP_1,VECTSP_1,FUNCOP_1,FUNCT_7,MATRLIN,VFUNCT_1,FVSUM_1,PRE_POLY,RECDEF_1;
definitions TARSKI,XBOOLE_0,FUNCT_1,FUNCT_2,RLVECT_1,VECTSP_1,GROUP_1,FINSEQ_2,STRUCT_0,ALGSTR_0,FUNCOP_1;
theorems FUNCT_1,FINSET_1,FINSEQ_3,FINSEQ_4,ZFMISC_1,FINSEQ_1,FUNCT_2,RLVECT_1,VECTSP_1,FUNCOP_1,TARSKI,FUNCT_7,BINOP_1,RELAT_1,MATRLIN,FINSEQ_2,ORDINAL1,FINSEQ_5,NAT_1,PBOOLE,SUBSET_1,FVSUM_1,FUNCT_3,GROUP_1,XBOOLE_0,XBOOLE_1,RLVECT_2,PARTFUN1,XREAL_1,XXREAL_0,PRE_POLY,VFUNCT_1,CKB3,CKB4,CKB5,CKB6;
schemes FRAENKEL,FUNCT_2,FINSEQ_2,FINSEQ_1,FINSEQ_4,SUBSET_1,BINOP_1;
registrations SUBSET_1,RELAT_1,FUNCT_1,FUNCOP_1,FINSET_1,XREAL_0,CARD_1,MEMBERED,FINSEQ_1,FINSEQ_2,STRUCT_0,VECTSP_1,ALGSTR_1,VALUED_0,PRE_POLY,RELSET_1,VFUNCT_1,FUNCT_2,CKB1,CKB2;
constructors BINOP_1,FINSEQOP,SETWISEO,FINSEQ_4,RFUNCT_3,FUNCT_7,ALGSTR_1,FVSUM_1,MATRLIN,RECDEF_1,RELSET_1,PBOOLE,VFUNCT_1;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
Th18: (for L being non empty addLoopStr holds (for F,G being (FinSequence of ( (the carrier of L) * )) holds ( Sum ( F ^ G ) ) = ( ( Sum F ) ^ ( Sum G ) )))
proof
let L being non empty addLoopStr;
let F being (FinSequence of ( (the carrier of L) * )),G being (FinSequence of ( (the carrier of L) * ));
A1: ( dom ( Sum F ) ) = ( dom F ) by CKB4:1;
A2: ( dom ( Sum G ) ) = ( dom G ) by CKB4:1;
A3: ( len ( ( Sum F ) ^ ( Sum G ) ) ) = ( ( len ( Sum F ) ) + ( len ( Sum G ) ) ) by FINSEQ_1:22
.= ( ( len F ) + ( len ( Sum G ) ) ) by A1,FINSEQ_3:29
.= ( ( len F ) + ( len G ) ) by A2,FINSEQ_3:29
.= ( len ( F ^ G ) ) by FINSEQ_1:22;
then A4: ( dom ( ( Sum F ) ^ ( Sum G ) ) ) = ( dom ( F ^ G ) ) by FINSEQ_3:29;
A5: ( len ( Sum F ) ) = ( len F ) by A1,FINSEQ_3:29;
now
let i being Nat;
assume that
A6: i in ( dom ( F ^ G ) );
per cases  by A6,FINSEQ_1:25;
suppose A7: i in ( dom F );

thus ( ( ( Sum F ) ^ ( Sum G ) ) /. i ) = ( ( ( Sum F ) ^ ( Sum G ) ) . i ) by A4,A6,PARTFUN1:def 6
.= ( ( Sum F ) . i ) by A1,A7,FINSEQ_1:def 7
.= ( ( Sum F ) /. i ) by A1,A7,PARTFUN1:def 6
.= ( Sum ( F /. i ) ) by A1,A7,MATRLIN:def 6
.= ( Sum ( ( F ^ G ) /. i ) ) by A7,FINSEQ_4:68;
end;
suppose (ex n being Nat st (n in ( dom G ) & i = ( ( len F ) + n )));

then consider n being Nat such that A8: n in ( dom G ) and A9: i = ( ( len F ) + n );
thus ( ( ( Sum F ) ^ ( Sum G ) ) /. i ) = ( ( ( Sum F ) ^ ( Sum G ) ) . i ) by A4,A6,PARTFUN1:def 6
.= ( ( Sum G ) . n ) by A2,A5,A8,A9,FINSEQ_1:def 7
.= ( ( Sum G ) /. n ) by A2,A8,PARTFUN1:def 6
.= ( Sum ( G /. n ) ) by A2,A8,MATRLIN:def 6
.= ( Sum ( ( F ^ G ) /. i ) ) by A8,A9,FINSEQ_4:69;
end;
end;
hence thesis by A3,A4,MATRLIN:def 6;
end;
