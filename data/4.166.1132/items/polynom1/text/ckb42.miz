environ
vocabularies NUMBERS,STRUCT_0,ZFMISC_1,RLVECT_1,ALGSTR_0,VECTSP_1,XBOOLE_0,SUPINF_2,MESFUNC1,SUBSET_1,RELAT_1,FINSEQ_1,ARYTM_3,PARTFUN1,TARSKI,CARD_3,NAT_1,ORDINAL4,FUNCT_1,FVSUM_1,ALGSTR_1,BINOP_1,LATTICES,PRE_POLY,ALGSEQ_1,FINSET_1,ARYTM_1,FUNCOP_1,GROUP_1,FUNCT_4,ORDINAL1,XXREAL_0,FINSEQ_2,MEMBER_1,FUNCT_2,CARD_1,POLYNOM1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,RELAT_1,FUNCT_1,PBOOLE,RELSET_1,FINSET_1,ORDINAL1,PARTFUN1,FUNCT_2,FINSEQ_1,STRUCT_0,ALGSTR_0,FUNCT_3,XXREAL_0,BINOP_1,NAT_1,ALGSTR_1,RLVECT_1,FINSEQ_2,GROUP_1,VECTSP_1,FUNCOP_1,FUNCT_7,MATRLIN,VFUNCT_1,FVSUM_1,PRE_POLY,RECDEF_1,CKB8,CKB9,CKB21,CKB22,CKB23,CKB24,CKB25,CKB32,CKB34,CKB35,CKB38,CKB41;
definitions TARSKI,XBOOLE_0,FUNCT_1,FUNCT_2,RLVECT_1,VECTSP_1,GROUP_1,FINSEQ_2,STRUCT_0,ALGSTR_0,FUNCOP_1,CKB8,CKB9,CKB21,CKB22,CKB25,CKB34,CKB35,CKB38,CKB41;
theorems FUNCT_1,FINSET_1,FINSEQ_3,FINSEQ_4,ZFMISC_1,FINSEQ_1,FUNCT_2,RLVECT_1,VECTSP_1,FUNCOP_1,TARSKI,FUNCT_7,BINOP_1,RELAT_1,MATRLIN,FINSEQ_2,ORDINAL1,FINSEQ_5,NAT_1,PBOOLE,SUBSET_1,FVSUM_1,FUNCT_3,GROUP_1,XBOOLE_0,XBOOLE_1,RLVECT_2,PARTFUN1,XREAL_1,XXREAL_0,PRE_POLY,VFUNCT_1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB18,CKB19,CKB20,CKB21,CKB22,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41;
schemes FRAENKEL,FUNCT_2,FINSEQ_2,FINSEQ_1,FINSEQ_4,SUBSET_1,BINOP_1;
registrations SUBSET_1,RELAT_1,FUNCT_1,FUNCOP_1,FINSET_1,XREAL_0,CARD_1,MEMBERED,FINSEQ_1,FINSEQ_2,STRUCT_0,VECTSP_1,ALGSTR_1,VALUED_0,PRE_POLY,RELSET_1,VFUNCT_1,FUNCT_2,CKB1,CKB2,CKB16,CKB17;
constructors BINOP_1,FINSEQOP,SETWISEO,FINSEQ_4,RFUNCT_3,FUNCT_7,ALGSTR_1,FVSUM_1,MATRLIN,RECDEF_1,RELSET_1,PBOOLE,VFUNCT_1,CKB9,CKB21,CKB22,CKB23,CKB25,CKB32,CKB34,CKB35,CKB38,CKB41;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
Th85: (for n being Ordinal holds (for L being  Abelian  add-associative  right_zeroed  right_complementable  distributive  associative non empty doubleLoopStr holds (for p,q,r being (Series of n,L) holds ( p *' ( q + r ) ) = ( ( p *' q ) + ( p *' r ) ))))
proof
let n being Ordinal;
let L being  Abelian  add-associative  right_zeroed  right_complementable  distributive  associative non empty doubleLoopStr;
let p being (Series of n,L),q being (Series of n,L),r being (Series of n,L);
set cL = (the carrier of L);
now
let b being (Element of ( Bags n ));
consider s being (FinSequence of cL) such that A1: ( ( p *' ( q + r ) ) . b ) = ( Sum s ) and A2: ( len s ) = ( len ( decomp b ) ) and A3: (for k being (Element of ( NAT )) holds (k in ( dom s ) implies (ex b1,b2 being (bag of n) st (( ( decomp b ) /. k ) = <* b1,b2 *> & ( s /. k ) = ( ( p . b1 ) * ( ( q + r ) . b2 ) ))))) by CKB41:def 1;
consider u being (FinSequence of cL) such that A4: ( ( p *' r ) . b ) = ( Sum u ) and A5: ( len u ) = ( len ( decomp b ) ) and A6: (for k being (Element of ( NAT )) holds (k in ( dom u ) implies (ex b1,b2 being (bag of n) st (( ( decomp b ) /. k ) = <* b1,b2 *> & ( u /. k ) = ( ( p . b1 ) * ( r . b2 ) ))))) by CKB41:def 1;
consider t being (FinSequence of cL) such that A7: ( ( p *' q ) . b ) = ( Sum t ) and A8: ( len t ) = ( len ( decomp b ) ) and A9: (for k being (Element of ( NAT )) holds (k in ( dom t ) implies (ex b1,b2 being (bag of n) st (( ( decomp b ) /. k ) = <* b1,b2 *> & ( t /. k ) = ( ( p . b1 ) * ( q . b2 ) ))))) by CKB41:def 1;
reconsider t,u as (Element of ( ( len s ) -tuples_on cL )) by A2,A8,A5,FINSEQ_2:92;
A10: ( dom u ) = ( dom s ) by A2,A5,FINSEQ_3:29;
A11: ( dom t ) = ( dom s ) by A2,A8,FINSEQ_3:29;
then A12: ( dom ( t + u ) ) = ( dom s ) by A10,CKB3:1;
A13:now
let i being Nat;
assume A14: i in ( dom s );
then consider sb1 being (bag of n),sb2 being (bag of n) such that A15: ( ( decomp b ) /. i ) = <* sb1,sb2 *> and A16: ( s /. i ) = ( ( p . sb1 ) * ( ( q + r ) . sb2 ) ) by A3;
A17: (( t /. i ) = ( t . i ) & ( u /. i ) = ( u . i )) by A11,A10,A14,PARTFUN1:def 6;
consider ub1 being (bag of n),ub2 being (bag of n) such that A18: ( ( decomp b ) /. i ) = <* ub1,ub2 *> and A19: ( u /. i ) = ( ( p . ub1 ) * ( r . ub2 ) ) by A6,A10,A14;
A20: (sb1 = ub1 & sb2 = ub2) by A15,A18,FINSEQ_1:77;
consider tb1 being (bag of n),tb2 being (bag of n) such that A21: ( ( decomp b ) /. i ) = <* tb1,tb2 *> and A22: ( t /. i ) = ( ( p . tb1 ) * ( q . tb2 ) ) by A9,A11,A14;
A23: (sb1 = tb1 & sb2 = tb2) by A15,A21,FINSEQ_1:77;
( s /. i ) = ( s . i ) by A14,PARTFUN1:def 6;
hence ( s . i ) = ( ( p . sb1 ) * ( ( q . sb2 ) + ( r . sb2 ) ) ) by A16,CKB26:1
.= ( ( ( p . sb1 ) * ( q . sb2 ) ) + ( ( p . sb1 ) * ( r . sb2 ) ) ) by VECTSP_1:def 7
.= ( ( t + u ) . i ) by A12,A14,A22,A19,A23,A20,A17,FVSUM_1:17;
end;
( len ( t + u ) ) = ( len s ) by A12,FINSEQ_3:29;
then s = ( t + u ) by A13,FINSEQ_2:9;
hence ( ( p *' ( q + r ) ) . b ) = ( ( Sum t ) + ( Sum u ) ) by A1,FVSUM_1:76
.= ( ( ( p *' q ) + ( p *' r ) ) . b ) by A7,A4,CKB26:1;
end;
hence thesis by FUNCT_2:63;
end;
