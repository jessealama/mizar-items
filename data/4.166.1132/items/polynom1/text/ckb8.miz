environ
vocabularies NUMBERS,STRUCT_0,ZFMISC_1,RLVECT_1,ALGSTR_0,VECTSP_1,XBOOLE_0,SUPINF_2,MESFUNC1,SUBSET_1,RELAT_1,FINSEQ_1,ARYTM_3,PARTFUN1,TARSKI,CARD_3,NAT_1,ORDINAL4,FUNCT_1,FVSUM_1,ALGSTR_1,BINOP_1,LATTICES,PRE_POLY,ALGSEQ_1,FINSET_1,ARYTM_1,FUNCOP_1,GROUP_1,FUNCT_4,ORDINAL1,XXREAL_0,FINSEQ_2,MEMBER_1,FUNCT_2,CARD_1,POLYNOM1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,RELAT_1,FUNCT_1,PBOOLE,RELSET_1,FINSET_1,ORDINAL1,PARTFUN1,FUNCT_2,FINSEQ_1,STRUCT_0,ALGSTR_0,FUNCT_3,XXREAL_0,BINOP_1,NAT_1,ALGSTR_1,RLVECT_1,FINSEQ_2,GROUP_1,VECTSP_1,FUNCOP_1,FUNCT_7,MATRLIN,VFUNCT_1,FVSUM_1,PRE_POLY,RECDEF_1;
definitions TARSKI,XBOOLE_0,FUNCT_1,FUNCT_2,RLVECT_1,VECTSP_1,GROUP_1,FINSEQ_2,STRUCT_0,ALGSTR_0,FUNCOP_1;
theorems FUNCT_1,FINSET_1,FINSEQ_3,FINSEQ_4,ZFMISC_1,FINSEQ_1,FUNCT_2,RLVECT_1,VECTSP_1,FUNCOP_1,TARSKI,FUNCT_7,BINOP_1,RELAT_1,MATRLIN,FINSEQ_2,ORDINAL1,FINSEQ_5,NAT_1,PBOOLE,SUBSET_1,FVSUM_1,FUNCT_3,GROUP_1,XBOOLE_0,XBOOLE_1,RLVECT_2,PARTFUN1,XREAL_1,XXREAL_0,PRE_POLY,VFUNCT_1,CKB3,CKB4,CKB5,CKB6,CKB7;
schemes FRAENKEL,FUNCT_2,FINSEQ_2,FINSEQ_1,FINSEQ_4,SUBSET_1,BINOP_1;
registrations SUBSET_1,RELAT_1,FUNCT_1,FUNCOP_1,FINSET_1,XREAL_0,CARD_1,MEMBERED,FINSEQ_1,FINSEQ_2,STRUCT_0,VECTSP_1,ALGSTR_1,VALUED_0,PRE_POLY,RELSET_1,VFUNCT_1,FUNCT_2,CKB1,CKB2;
constructors BINOP_1,FINSEQOP,SETWISEO,FINSEQ_4,RFUNCT_3,FUNCT_7,ALGSTR_1,FVSUM_1,MATRLIN,RECDEF_1,RELSET_1,PBOOLE,VFUNCT_1;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
definition
let L being non empty multMagma;
let p being (FinSequence of (the carrier of L));
let a being (Element of L);
redefine func a * p
means
:Def2: (( dom it ) = ( dom p ) & (for i being set holds (i in ( dom p ) implies ( it /. i ) = ( a * ( p /. i ) ))));
compatibility
proof
A1:now
set R = ( ( a multfield ) * p );
let G being (FinSequence of (the carrier of L));
assume that
A2: ( dom G ) = ( dom p )
and
A3: (for i being set holds (i in ( dom p ) implies ( G /. i ) = ( a * ( p /. i ) )));
A4: (for k being set holds (k in ( dom G ) implies ( G . k ) = ( R . k )))
proof
let k being set;
assume A5: k in ( dom G );
then ( G . k ) = ( G /. k ) by PARTFUN1:def 6
.= ( a * ( p /. k ) ) by A2,A3,A5
.= ( ( a multfield ) . ( p /. k ) ) by FVSUM_1:49
.= ( ( a multfield ) . ( p . k ) ) by A2,A5,PARTFUN1:def 6
.= ( R . k ) by A2,A5,FUNCT_1:13;
hence thesis;
end;
(( rng p ) c= (the carrier of L) & ( dom ( a multfield ) ) = (the carrier of L)) by FUNCT_2:def 1;
then ( dom G ) = ( dom R ) by A2,RELAT_1:27;
then G = R by A4,FUNCT_1:2;
hence G = ( a * p ) by FVSUM_1:def 6;
end;
set F = ( a * p );
A6: ( rng p ) c= ( dom ( a multfield ) )
proof
let x being set;
( dom ( a multfield ) ) = (the carrier of L) by FUNCT_2:def 1;
hence thesis;
end;
A7: F = ( ( a multfield ) * p ) by FVSUM_1:def 6;
then A8: ( dom F ) = ( dom p ) by A6,RELAT_1:27;
(for i being set holds (i in ( dom p ) implies ( F /. i ) = ( a * ( p /. i ) )))
proof
let i being set;
assume A9: i in ( dom p );
( F . i ) = ( ( ( a multfield ) * p ) . i ) by FVSUM_1:def 6
.= ( ( a multfield ) . ( p . i ) ) by A9,FUNCT_1:13
.= ( ( a multfield ) . ( p /. i ) ) by A9,PARTFUN1:def 6
.= ( a * ( p /. i ) ) by FVSUM_1:49;
hence thesis by A8,A9,PARTFUN1:def 6;
end;
hence thesis by A7,A6,A1,RELAT_1:27;
end;
end;
