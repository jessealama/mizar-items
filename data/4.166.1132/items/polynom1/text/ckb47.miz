environ
vocabularies NUMBERS,STRUCT_0,ZFMISC_1,RLVECT_1,ALGSTR_0,VECTSP_1,XBOOLE_0,SUPINF_2,MESFUNC1,SUBSET_1,RELAT_1,FINSEQ_1,ARYTM_3,PARTFUN1,TARSKI,CARD_3,NAT_1,ORDINAL4,FUNCT_1,FVSUM_1,ALGSTR_1,BINOP_1,LATTICES,PRE_POLY,ALGSEQ_1,FINSET_1,ARYTM_1,FUNCOP_1,GROUP_1,FUNCT_4,ORDINAL1,XXREAL_0,FINSEQ_2,MEMBER_1,FUNCT_2,CARD_1,POLYNOM1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,RELAT_1,FUNCT_1,PBOOLE,RELSET_1,FINSET_1,ORDINAL1,PARTFUN1,FUNCT_2,FINSEQ_1,STRUCT_0,ALGSTR_0,FUNCT_3,XXREAL_0,BINOP_1,NAT_1,ALGSTR_1,RLVECT_1,FINSEQ_2,GROUP_1,VECTSP_1,FUNCOP_1,FUNCT_7,MATRLIN,VFUNCT_1,FVSUM_1,PRE_POLY,RECDEF_1,CKB8,CKB9,CKB21,CKB22,CKB23,CKB24,CKB25,CKB32,CKB34,CKB35,CKB38,CKB41,CKB44;
definitions TARSKI,XBOOLE_0,FUNCT_1,FUNCT_2,RLVECT_1,VECTSP_1,GROUP_1,FINSEQ_2,STRUCT_0,ALGSTR_0,FUNCOP_1,CKB8,CKB9,CKB21,CKB22,CKB25,CKB34,CKB35,CKB38,CKB41;
theorems FUNCT_1,FINSET_1,FINSEQ_3,FINSEQ_4,ZFMISC_1,FINSEQ_1,FUNCT_2,RLVECT_1,VECTSP_1,FUNCOP_1,TARSKI,FUNCT_7,BINOP_1,RELAT_1,MATRLIN,FINSEQ_2,ORDINAL1,FINSEQ_5,NAT_1,PBOOLE,SUBSET_1,FVSUM_1,FUNCT_3,GROUP_1,XBOOLE_0,XBOOLE_1,RLVECT_2,PARTFUN1,XREAL_1,XXREAL_0,PRE_POLY,VFUNCT_1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB18,CKB19,CKB20,CKB21,CKB22,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB45,CKB46;
schemes FRAENKEL,FUNCT_2,FINSEQ_2,FINSEQ_1,FINSEQ_4,SUBSET_1,BINOP_1;
registrations SUBSET_1,RELAT_1,FUNCT_1,FUNCOP_1,FINSET_1,XREAL_0,CARD_1,MEMBERED,FINSEQ_1,FINSEQ_2,STRUCT_0,VECTSP_1,ALGSTR_1,VALUED_0,PRE_POLY,RELSET_1,VFUNCT_1,FUNCT_2,CKB1,CKB2,CKB16,CKB17;
constructors BINOP_1,FINSEQOP,SETWISEO,FINSEQ_4,RFUNCT_3,FUNCT_7,ALGSTR_1,FVSUM_1,MATRLIN,RECDEF_1,RELSET_1,PBOOLE,VFUNCT_1,CKB9,CKB21,CKB22,CKB23,CKB25,CKB32,CKB34,CKB35,CKB38,CKB41,CKB44;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
Th89: (for n being Ordinal holds (for L being  add-associative  right_complementable  right_zeroed  distributive  well-unital non trivial non empty doubleLoopStr holds (for p being (Series of n,L) holds ( ( 1_ (n,L) ) *' p ) = p)))
proof
let n being Ordinal;
let L being  add-associative  right_complementable  right_zeroed  distributive  well-unital non trivial doubleLoopStr;
let p being (Series of n,L);
set O = ( 1_ (n,L) );
set cL = (the carrier of L);
now
let b being (Element of ( Bags n ));
consider s being (FinSequence of cL) such that A1: ( ( O *' p ) . b ) = ( Sum s ) and A2: ( len s ) = ( len ( decomp b ) ) and A3: (for k being (Element of ( NAT )) holds (k in ( dom s ) implies (ex b1,b2 being (bag of n) st (( ( decomp b ) /. k ) = <* b1,b2 *> & ( s /. k ) = ( ( O . b1 ) * ( p . b2 ) ))))) by CKB41:def 1;
s is non empty by A2;
then consider s1 being (Element of cL),t being (FinSequence of cL) such that A4: s1 = ( s . 1 ) and A5: s = ( <* s1 *> ^ t ) by FINSEQ_3:102;
A6: ( Sum s ) = ( ( Sum <* s1 *> ) + ( Sum t ) ) by A5,RLVECT_1:41;
A7:now
per cases ;
suppose t = ( <*> cL );

hence ( Sum t ) = ( 0. L ) by RLVECT_1:43;
end;
suppose A8: t <> ( <*> cL );

now
let k being Nat;
A9: ( len s ) = ( ( len t ) + ( len <* s1 *> ) ) by A5,FINSEQ_1:22
.= ( ( len t ) + 1 ) by FINSEQ_1:39;
assume A10: k in ( dom t );
then A11: ( t /. k ) = ( t . k ) by PARTFUN1:def 6
.= ( s . ( k + 1 ) ) by A5,A10,FINSEQ_3:103;
1 <= k by A10,FINSEQ_3:25;
then A12: 1 < ( k + 1 ) by NAT_1:13;
k <= ( len t ) by A10,FINSEQ_3:25;
then A13: ( k + 1 ) <= ( len s ) by A9,XREAL_1:6;
then A14: ( k + 1 ) in ( dom ( decomp b ) ) by A2,A12,FINSEQ_3:25;
A15: ( dom s ) = ( dom ( decomp b ) ) by A2,FINSEQ_3:29;
then A16: ( s /. ( k + 1 ) ) = ( s . ( k + 1 ) ) by A14,PARTFUN1:def 6;
per cases  by A13,XXREAL_0:1;
suppose A17: ( k + 1 ) < ( len s );

consider b1 being (bag of n),b2 being (bag of n) such that A18: ( ( decomp b ) /. ( k + 1 ) ) = <* b1,b2 *> and A19: ( s /. ( k + 1 ) ) = ( ( O . b1 ) * ( p . b2 ) ) by A3,A15,A14;
b1 <> ( EmptyBag n ) by A2,A12,A17,A18,PRE_POLY:72;
hence ( t /. k ) = ( ( 0. L ) * ( p . b2 ) ) by A11,A16,A19,CKB40:1
.= ( 0. L ) by VECTSP_1:7;
end;
suppose A20: ( k + 1 ) = ( len s );

A21:now
assume b = ( EmptyBag n );
then ( decomp b ) = <* <* ( EmptyBag n ),( EmptyBag n ) *> *> by PRE_POLY:73;
then ( ( len t ) + 1 ) = ( (( 0 ) qua Nat) + 1 ) by A2,A9,FINSEQ_1:39;
hence contradiction by A8;
end;
consider b1 being (bag of n),b2 being (bag of n) such that A22: ( ( decomp b ) /. ( k + 1 ) ) = <* b1,b2 *> and A23: ( s /. ( k + 1 ) ) = ( ( O . b1 ) * ( p . b2 ) ) by A3,A15,A14;
( ( decomp b ) /. ( len s ) ) = <* b,( EmptyBag n ) *> by A2,PRE_POLY:71;
then (b2 = ( EmptyBag n ) & b1 = b) by A20,A22,FINSEQ_1:77;
then ( s . ( k + 1 ) ) = ( ( 0. L ) * ( p . ( EmptyBag n ) ) ) by A16,A23,A21,CKB40:1
.= ( 0. L ) by VECTSP_1:7;
hence ( t /. k ) = ( 0. L ) by A11;
end;
end;
hence ( Sum t ) = ( 0. L ) by MATRLIN:11;
end;
end;
A24: s is non empty by A2;
then consider b1 being (bag of n),b2 being (bag of n) such that A25: ( ( decomp b ) /. 1 ) = <* b1,b2 *> and A26: ( s /. 1 ) = ( ( O . b1 ) * ( p . b2 ) ) by A3,FINSEQ_5:6;
1 in ( dom s ) by A24,FINSEQ_5:6;
then A27: ( s /. 1 ) = ( s . 1 ) by PARTFUN1:def 6;
( ( decomp b ) /. 1 ) = <* ( EmptyBag n ),b *> by PRE_POLY:71;
then A28: (b2 = b & b1 = ( EmptyBag n )) by A25,FINSEQ_1:77;
( Sum <* s1 *> ) = s1 by RLVECT_1:44
.= ( ( 1. L ) * ( p . b ) ) by A4,A26,A28,A27,CKB40:1
.= ( p . b ) by VECTSP_1:def 6;
hence ( ( O *' p ) . b ) = ( p . b ) by A1,A6,A7,RLVECT_1:4;
end;
hence thesis by FUNCT_2:63;
end;
