environ
vocabularies NUMBERS,SUBSET_1,RELAT_1,ORDINAL4,FINSEQ_1,XBOOLE_0,BINOP_1,FUNCT_1,FINSOP_1,SETWISEO,XXREAL_0,TARSKI,NAT_1,ARYTM_3,WELLORD1,FINSUB_1,SETFAM_1,ORDERS_1,FINSET_1,ZFMISC_1,CARD_1,FUNCT_3,PARTFUN1,ARROW,ORDINAL2,ORDINAL1,RELAT_2,ARYTM_1,FINSEQ_3,FUNCOP_1,PBOOLE,FUNCT_4,FINSEQ_2,CARD_3,MEMBER_1,VALUED_0,XREAL_0,FUNCT_2,BINOP_2,CLASSES1,PRE_POLY;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,ORDERS_1,RELAT_1,XXREAL_0,XCMPLX_0,RELAT_2,FUNCT_1,PBOOLE,RELSET_1,FINSET_1,FINSUB_1,SETWISEO,ORDINAL1,PARTFUN1,FUNCT_2,BINOP_2,FINSOP_1,FINSEQ_1,FINSEQ_4,FUNCT_3,BINOP_1,NAT_1,XREAL_0,FINSEQ_2,WELLORD1,CARD_3,WSIERP_1,FUNCOP_1,FUNCT_7,NAT_D,CLASSES1,VALUED_0,VALUED_1,ORDINAL2,SETFAM_1,DOMAIN_1,ARROW,FINSEQOP,CKB1,CKB3,CKB4,CKB5,CKB7;
definitions TARSKI,XBOOLE_0,FUNCT_1,CARD_3,RELAT_2,PBOOLE,RELSET_1,WELLORD2,RELAT_1,BINOP_1,FINSEQ_2,VALUED_0,FUNCOP_1,SETFAM_1,SEQM_3,WELLORD1,SUBSET_1,CKB7;
theorems FUNCT_1,FINSET_1,FINSEQ_3,FINSEQ_4,ZFMISC_1,FINSEQ_1,FUNCT_2,FUNCOP_1,TARSKI,FUNCT_7,BINOP_1,RELAT_1,FINSEQ_2,CARD_3,RFINSEQ,RELSET_1,CARD_1,ORDINAL1,RVSUM_1,FINSEQ_5,NAT_1,PBOOLE,NAT_2,SUBSET_1,ORDERS_1,WELLSET1,WELLORD1,RELAT_2,ORDINAL3,FINSEQ_6,SETWISEO,SETWOP_2,CARD_2,FUNCT_5,FINSUB_1,PARTFUN2,XBOOLE_0,XBOOLE_1,PARTFUN1,BINOP_2,XREAL_1,XXREAL_0,VALUED_0,VALUED_1,NAT_D,SETFAM_1,ARROW,WELLORD2,FINSOP_1,CKB7,CKB8,CKB9;
schemes SETWISEO,FUNCT_2,FINSEQ_2,FINSEQ_1,PBOOLE,RELSET_1,FINSEQ_4,ORDINAL1,FUNCT_7,SUBSET_1,XBOOLE_0,BINOP_1,NAT_1,PRE_CIRC,CLASSES1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,ORDINAL3,FINSET_1,XXREAL_0,XREAL_0,NAT_1,BINOP_2,CARD_1,FINSEQ_1,FINSEQ_2,CARD_3,PARTFUN1,VALUED_0,VALUED_1,RELSET_1,FUNCT_2,SETFAM_1,FINSUB_1,CKB2,CKB6;
constructors WELLORD2,BINOP_1,SETWISEO,CARD_3,FINSEQOP,FINSOP_1,FINSEQ_4,RFINSEQ,RFUNCT_3,NAT_D,WSIERP_1,FUNCT_7,RECDEF_1,BINOP_2,CLASSES1,BINARITH,ARROW,TOLER_1,ORDINAL2,RELSET_1,ORDERS_1,RELAT_2,WELLORD1,DOMAIN_1,SETFAM_1,ORDINAL3,PBOOLE,CKB1,CKB3,CKB4,CKB5,CKB7;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
Th3: (for D being set holds (for F,G being (FinSequence of ( D * )) holds ( FlattenSeq ( F ^ G ) ) = ( ( FlattenSeq F ) ^ ( FlattenSeq G ) )))
proof
let D being set;
let F being (FinSequence of ( D * )),G being (FinSequence of ( D * ));
consider g being (BinOp of ( D * )) such that A1: (for d1,d2 being (Element of ( D * )) holds ( g . (d1,d2) ) = ( d1 ^ d2 )) and A2: ( FlattenSeq ( F ^ G ) ) = ( g "**" ( F ^ G ) ) by CKB7:def 1;
now
let a being (Element of ( D * )),b being (Element of ( D * )),c being (Element of ( D * ));
thus ( g . (a,( g . (b,c) )) ) = ( a ^ ( g . (b,c) ) ) by A1
.= ( a ^ ( b ^ c ) ) by A1
.= ( ( a ^ b ) ^ c ) by FINSEQ_1:32
.= ( ( g . (a,b) ) ^ c ) by A1
.= ( g . (( g . (a,b) ),c) ) by A1;
end;
then A3: g is  associative by BINOP_1:def 3;
A4: ( {} ) is (Element of ( D * )) by FINSEQ_1:49;
reconsider p = ( {} ) as (Element of ( D * )) by FINSEQ_1:49;
now
let a being (Element of ( D * ));
thus ( g . (( {} ),a) ) = ( ( {} ) ^ a ) by A1,A4
.= a by FINSEQ_1:34;
thus ( g . (a,( {} )) ) = ( a ^ ( {} ) ) by A1,A4
.= a by FINSEQ_1:34;
end;
then p is_a_unity_wrt g by BINOP_1:3;
then (g is  having_a_unity or (( len F ) >= 1 & ( len G ) >= 1)) by SETWISEO:def 2;
hence ( FlattenSeq ( F ^ G ) ) = ( g . (( g "**" F ),( g "**" G )) ) by A2,A3,FINSOP_1:5
.= ( ( g "**" F ) ^ ( g "**" G ) ) by A1
.= ( ( FlattenSeq F ) ^ ( g "**" G ) ) by A1,CKB7:def 1
.= ( ( FlattenSeq F ) ^ ( FlattenSeq G ) ) by A1,CKB7:def 1;
end;
