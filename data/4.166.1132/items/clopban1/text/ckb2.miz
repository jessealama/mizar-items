environ
vocabularies NUMBERS,XBOOLE_0,FUNCT_1,ZFMISC_1,XCMPLX_0,ORDINAL1,FUNCOP_1,SUBSET_1,FUNCT_2,RELAT_1,PARTFUN1,CLVECT_1,STRUCT_0,CFUNCT_1,RLVECT_1,LOPBAN_1,SUPINF_2,ARYTM_3,ARYTM_1,COMPLEX1,ALGSTR_0,MONOID_0,TARSKI,MSSUBFAM,UNIALG_1,RLSUB_1,RSSPACE,NAT_1,PRE_TOPC,SEQ_2,ORDINAL2,NORMSP_1,XREAL_0,XXREAL_0,CARD_1,REAL_1,XXREAL_2,SEQ_4,REWRITE1,RSSPACE3,CSSPACE3,SEQ_1,VALUED_1,CLOPBAN1,METRIC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_3,PRE_TOPC,DOMAIN_1,FUNCOP_1,BINOP_1,XCMPLX_0,XXREAL_0,XXREAL_2,XREAL_0,COMPLEX1,REAL_1,NAT_1,STRUCT_0,ALGSTR_0,MONOID_0,ORDINAL1,NUMBERS,MEASURE6,RLVECT_1,NORMSP_0,NORMSP_1,VALUED_1,SEQ_1,SEQ_2,SEQ_4,FUNCSDOM,CFUNCT_1,CLVECT_1,CSSPACE,CSSPACE3,LOPBAN_1,GRCAT_1,CKB1;
definitions SEQ_4,RLVECT_1,FUNCT_1,BINOP_1,STRUCT_0,ALGSTR_0,GRCAT_1,NORMSP_0,XXREAL_2;
theorems ALGSTR_0,XBOOLE_0,TARSKI,ABSVALUE,RLVECT_1,BINOP_1,FUNCOP_1,XREAL_0,XCMPLX_0,SEQ_1,SEQ_2,FUNCT_1,NAT_1,FUNCT_2,SEQ_4,FUNCT_3,CLVECT_1,LOPBAN_1,CSSPACE,COMPLEX1,CSSPACE3,MONOID_0,XREAL_1,XXREAL_0,NORMSP_1,GRCAT_1,NORMSP_0;
schemes SEQ_1,FUNCT_2,XBOOLE_0,BINOP_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,MEMBERED,STRUCT_0,RLVECT_1,MONOID_0,CLVECT_1,CSSPACE3,VALUED_1,VALUED_0,FUNCOP_1,SEQ_4,FUNCT_1;
constructors DOMAIN_1,FUNCT_3,XXREAL_0,REAL_1,NAT_1,COMPLEX1,SEQM_3,FUNCSDOM,MONOID_0,MEASURE6,LOPBAN_1,CSSPACE3,SEQ_1,XXREAL_2,SEQ_4,RELSET_1,BINOP_2,RVSUM_1,SEQ_2,CKB1;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
definition
let X being non  empty set;
let Y being ComplexLinearSpace;
func FuncExtMult (X,Y) -> (Function of [: ( COMPLEX ),( Funcs (X,(the carrier of Y)) ) :],( Funcs (X,(the carrier of Y)) )) means 
:Def1: (for c being Complex holds (for f being (Element of ( Funcs (X,(the carrier of Y)) )) holds (for x being (Element of X) holds ( ( it . [ c,f ] ) . x ) = ( c * ( f . x ) ))));
existence
proof
deffunc F(Complex,(Element of ( Funcs (X,(the carrier of Y)) ))) = ( (the Mult of Y) [;] ($1,$2) );
consider F being (Function of [: ( COMPLEX ),( Funcs (X,(the carrier of Y)) ) :],( Funcs (X,(the carrier of Y)) )) such that A1: (for c being Complex holds (for f being (Element of ( Funcs (X,(the carrier of Y)) )) holds ( F . (c,f) ) = F(c,f))) from BINOP_1:sch 4;
take F;
let c being Complex;
let f being (Element of ( Funcs (X,(the carrier of Y)) ));
let x being (Element of X);
A2: ( dom ( F . [ c,f ] ) ) = X by FUNCT_2:92;
( F . (c,f) ) = ( (the Mult of Y) [;] (c,f) ) by A1;
hence ( ( F . [ c,f ] ) . x ) = ( (the Mult of Y) . (c,( f . x )) ) by A2,FUNCOP_1:32
.= ( c * ( f . x ) ) by CLVECT_1:def 1;
end;
uniqueness
proof
let it1 being (Function of [: ( COMPLEX ),( Funcs (X,(the carrier of Y)) ) :],( Funcs (X,(the carrier of Y)) ));
let it2 being (Function of [: ( COMPLEX ),( Funcs (X,(the carrier of Y)) ) :],( Funcs (X,(the carrier of Y)) ));
assume that
A1: (for c being Complex holds (for f being (Element of ( Funcs (X,(the carrier of Y)) )) holds (for x being (Element of X) holds ( ( it1 . [ c,f ] ) . x ) = ( c * ( f . x ) ))))
and
A2: (for c being Complex holds (for f being (Element of ( Funcs (X,(the carrier of Y)) )) holds (for x being (Element of X) holds ( ( it2 . [ c,f ] ) . x ) = ( c * ( f . x ) ))));
now
let c being (Element of ( COMPLEX ));
let f being (Element of ( Funcs (X,(the carrier of Y)) ));
now
let x being (Element of X);
thus ( ( it1 . [ c,f ] ) . x ) = ( c * ( f . x ) ) by A1
.= ( ( it2 . [ c,f ] ) . x ) by A2;
end;
hence ( it1 . (c,f) ) = ( it2 . (c,f) ) by FUNCT_2:63;
end;
hence thesis by BINOP_1:2;
end;
end;
