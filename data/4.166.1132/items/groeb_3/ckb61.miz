environ
vocabularies NUMBERS,PRE_POLY,ARYTM_3,ARYTM_1,ORDINAL1,BAGORDER,XXREAL_0,RLVECT_1,ALGSTR_0,VECTSP_1,LATTICES,VECTSP_2,ZFMISC_1,VALUED_0,POLYNOM7,CAT_3,RELAT_2,POLYNOM1,BROUWER,SUPINF_2,XCMPLX_0,SUBSET_1,RELAT_1,FUNCT_1,XBOOLE_0,TARSKI,ALGSTR_1,CARD_1,FUNCT_7,QC_LANG1,TERMORD,BINOP_1,POLYRED,REWRITE1,FINSEQ_1,STRUCT_0,MCART_1,FINSET_1,FUNCT_4,FUNCOP_1,ALGSEQ_1,ORDERS_2,WAYBEL_4,RUSUB_4,GROEB_2,MESFUNC1,GROEB_1,GROEB_3;
notations TARSKI,SUBSET_1,RELAT_1,XBOOLE_0,RELAT_2,CARD_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCT_4,FUNCOP_1,PRE_POLY,STRUCT_0,ALGSTR_0,GROUP_1,ALGSTR_1,RLVECT_1,VFUNCT_1,FINSET_1,MCART_1,FINSEQ_1,VECTSP_2,VECTSP_1,POLYNOM2,POLYNOM7,ORDERS_2,FUNCT_7,REWRITE1,BAGORDER,TERMORD,GROEB_1,POLYRED,GROEB_2,WAYBEL_4,POLYNOM1,CKB18,CKB19,CKB25,CKB26,CKB33,CKB34;
definitions TARSKI,STRUCT_0,CKB19,CKB25,CKB26,CKB33,CKB34;
theorems TARSKI,VECTSP_1,POLYNOM1,RLVECT_1,NAT_1,INT_1,POLYNOM7,REWRITE1,XBOOLE_0,TERMORD,CARD_1,FUNCT_1,XBOOLE_1,POLYRED,FUNCT_2,RELAT_1,BAGORDER,ALGSTR_1,CARD_2,GROEB_1,FUNCT_4,FUNCOP_1,FINSET_1,VECTSP_2,RELSET_1,WAYBEL_4,MCART_1,GROEB_2,GROUP_1,FUNCT_7,POLYNOM2,FINSEQ_3,XREAL_1,XXREAL_0,STRUCT_0,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60;
schemes FUNCT_2,NAT_1,INT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,POLYNOM1,POLYNOM2,POLYNOM4,POLYNOM7,TERMORD,POLYRED,ORDINAL1,VALUED_0,ALGSTR_0,PRE_POLY,VFUNCT_1,FUNCT_2,RELSET_1,CKB17,CKB21,CKB48,CKB49,CKB50;
constructors XXREAL_0,REWRITE1,VECTSP_2,WAYBEL_4,POLYNOM2,BAGORDER,TERMORD,POLYRED,GROEB_1,GROEB_2,RELSET_1,PBOOLE,FUNCT_7,VFUNCT_1,CKB18,CKB19,CKB25,CKB26,CKB33,CKB34;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
Lm5: (for n being Ordinal holds (for T being  connected  admissible (TermOrder of n) holds (for L being  add-associative  right_complementable  right_zeroed  commutative  associative  well-unital  distributive  almost_left_invertible non trivial doubleLoopStr holds (for p1,p2 being (Polynomial of n,L) holds (( HT (p1,T) ),( HT (p2,T) ) are_disjoint  implies (for b1,b2 being (bag of n) holds ((b1 in ( Support p1 ) & b2 in ( Support p2 )) implies ((not (b1 = ( HT (p1,T) ) & b2 = ( HT (p2,T) ))) implies (not ( ( HT (p1,T) ) + b2 ) = ( ( HT (p2,T) ) + b1 ))))))))))
proof
let n being Ordinal;
let T being  connected  admissible (TermOrder of n);
let L being  add-associative  right_complementable  right_zeroed  commutative  associative  well-unital  distributive  almost_left_invertible non trivial doubleLoopStr;
let p1 being (Polynomial of n,L),p2 being (Polynomial of n,L);
assume A1: ( HT (p1,T) ),( HT (p2,T) ) are_disjoint ;
let b1 being (bag of n),b2 being (bag of n);
assume that
A2: b1 in ( Support p1 )
and
A3: b2 in ( Support p2 );
assume A4: (not (b1 = ( HT (p1,T) ) & b2 = ( HT (p2,T) )));
b2 <= ( HT (p2,T) ),T by A3,TERMORD:def 6;
then A5: ( ( HT (p1,T) ) + b2 ) <= ( ( HT (p1,T) ) + ( HT (p2,T) ) ),T by CKB2:1;
b1 <= ( HT (p1,T) ),T by A2,TERMORD:def 6;
then A6: ( ( HT (p2,T) ) + b1 ) <= ( ( HT (p1,T) ) + ( HT (p2,T) ) ),T by CKB2:1;
assume A7: ( ( HT (p1,T) ) + b2 ) = ( ( HT (p2,T) ) + b1 );
then A8: ( HT (p1,T) ) divides ( ( HT (p2,T) ) + b1 ) by PRE_POLY:50;
A9: ( HT (p2,T) ) divides ( ( HT (p1,T) ) + b2 ) by A7,PRE_POLY:50;
now
per cases  by A4;
case A10: (not b1 = ( HT (p1,T) ));
( HT (p2,T) ) divides ( ( HT (p2,T) ) + b1 ) by PRE_POLY:50;
then ( lcm (( HT (p1,T) ),( HT (p2,T) )) ) divides ( ( HT (p2,T) ) + b1 ) by A8,GROEB_2:4;
then ( ( HT (p1,T) ) + ( HT (p2,T) ) ) divides ( ( HT (p2,T) ) + b1 ) by A1,GROEB_2:5;
then ( ( HT (p1,T) ) + ( HT (p2,T) ) ) <= ( ( HT (p2,T) ) + b1 ),T by TERMORD:10;
then A11: ( ( HT (p1,T) ) + ( HT (p2,T) ) ) = ( ( HT (p2,T) ) + b1 ) by A6,TERMORD:7;
( HT (p1,T) ) = ( ( ( HT (p1,T) ) + ( HT (p2,T) ) ) -' ( HT (p2,T) ) ) by PRE_POLY:48;
hence contradiction by A10,A11,PRE_POLY:48;
end;
case A12: (not b2 = ( HT (p2,T) ));
( HT (p1,T) ) divides ( ( HT (p1,T) ) + b2 ) by PRE_POLY:50;
then ( lcm (( HT (p1,T) ),( HT (p2,T) )) ) divides ( ( HT (p1,T) ) + b2 ) by A9,GROEB_2:4;
then ( ( HT (p1,T) ) + ( HT (p2,T) ) ) divides ( ( HT (p1,T) ) + b2 ) by A1,GROEB_2:5;
then ( ( HT (p1,T) ) + ( HT (p2,T) ) ) <= ( ( HT (p1,T) ) + b2 ),T by TERMORD:10;
then A13: ( ( HT (p1,T) ) + ( HT (p2,T) ) ) = ( ( HT (p1,T) ) + b2 ) by A5,TERMORD:7;
( HT (p2,T) ) = ( ( ( HT (p1,T) ) + ( HT (p2,T) ) ) -' ( HT (p1,T) ) ) by PRE_POLY:48;
hence contradiction by A12,A13,PRE_POLY:48;
end;
end;
hence thesis;
end;
