environ
vocabularies NUMBERS,PRE_POLY,ARYTM_3,ARYTM_1,ORDINAL1,BAGORDER,XXREAL_0,RLVECT_1,ALGSTR_0,VECTSP_1,LATTICES,VECTSP_2,ZFMISC_1,VALUED_0,POLYNOM7,CAT_3,RELAT_2,POLYNOM1,BROUWER,SUPINF_2,XCMPLX_0,SUBSET_1,RELAT_1,FUNCT_1,XBOOLE_0,TARSKI,ALGSTR_1,CARD_1,FUNCT_7,QC_LANG1,TERMORD,BINOP_1,POLYRED,REWRITE1,FINSEQ_1,STRUCT_0,MCART_1,FINSET_1,FUNCT_4,FUNCOP_1,ALGSEQ_1,ORDERS_2,WAYBEL_4,RUSUB_4,GROEB_2,MESFUNC1,GROEB_1,GROEB_3;
notations TARSKI,SUBSET_1,RELAT_1,XBOOLE_0,RELAT_2,CARD_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCT_4,FUNCOP_1,PRE_POLY,STRUCT_0,ALGSTR_0,GROUP_1,ALGSTR_1,RLVECT_1,VFUNCT_1,FINSET_1,MCART_1,FINSEQ_1,VECTSP_2,VECTSP_1,POLYNOM2,POLYNOM7,ORDERS_2,FUNCT_7,REWRITE1,BAGORDER,TERMORD,GROEB_1,POLYRED,GROEB_2,WAYBEL_4,POLYNOM1,CKB18,CKB19,CKB25,CKB26,CKB33,CKB34;
definitions TARSKI,STRUCT_0,CKB19,CKB25,CKB26,CKB33,CKB34;
theorems TARSKI,VECTSP_1,POLYNOM1,RLVECT_1,NAT_1,INT_1,POLYNOM7,REWRITE1,XBOOLE_0,TERMORD,CARD_1,FUNCT_1,XBOOLE_1,POLYRED,FUNCT_2,RELAT_1,BAGORDER,ALGSTR_1,CARD_2,GROEB_1,FUNCT_4,FUNCOP_1,FINSET_1,VECTSP_2,RELSET_1,WAYBEL_4,MCART_1,GROEB_2,GROUP_1,FUNCT_7,POLYNOM2,FINSEQ_3,XREAL_1,XXREAL_0,STRUCT_0,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63;
schemes FUNCT_2,NAT_1,INT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,POLYNOM1,POLYNOM2,POLYNOM4,POLYNOM7,TERMORD,POLYRED,ORDINAL1,VALUED_0,ALGSTR_0,PRE_POLY,VFUNCT_1,FUNCT_2,RELSET_1,CKB17,CKB21,CKB48,CKB49,CKB50;
constructors XXREAL_0,REWRITE1,VECTSP_2,WAYBEL_4,POLYNOM2,BAGORDER,TERMORD,POLYRED,GROEB_1,GROEB_2,RELSET_1,PBOOLE,FUNCT_7,VFUNCT_1,CKB18,CKB19,CKB25,CKB26,CKB33,CKB34;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
(for n being Ordinal holds (for T being  connected  admissible (TermOrder of n) holds (for L being  add-associative  right_complementable  right_zeroed  commutative  associative  well-unital  distributive  Abelian  almost_left_invertible non trivial doubleLoopStr holds (for f,g being  non-zero (Polynomial of n,L) holds (for p being (Polynomial of n,L) holds (( p . ( HT (( f *' g ),T) ) ) = ( 0. L ) implies ( ( f *' g ) + p ) reduces_to ( ( ( Red (f,T) ) *' g ) + p ),{ g },T))))))
proof
let n being Ordinal;
let T being  connected  admissible (TermOrder of n);
let L being  add-associative  right_complementable  right_zeroed  commutative  associative  well-unital  distributive  Abelian  almost_left_invertible non trivial doubleLoopStr;
let f being  non-zero (Polynomial of n,L),g being  non-zero (Polynomial of n,L);
let p being (Polynomial of n,L);
assume A1: ( p . ( HT (( f *' g ),T) ) ) = ( 0. L );
( f *' g ) <> ( 0_ (n,L) ) by POLYNOM7:def 1;
then ( Support ( f *' g ) ) <> ( {} ) by POLYNOM7:1;
then ( HT (( f *' g ),T) ) in ( Support ( f *' g ) ) by TERMORD:def 6;
then A2: ( ( f *' g ) . ( HT (( f *' g ),T) ) ) <> ( 0. L ) by POLYNOM1:def 3;
reconsider r = ( - ( HM (f,T) ) ) as (Polynomial of n,L);
set fg = ( ( f *' g ) + p );
set q = ( fg - ( ( ( fg . ( HT (( f *' g ),T) ) ) / ( HC (g,T) ) ) * ( ( HT (f,T) ) *' g ) ) );
A3: ( HT (( f *' g ),T) ) = ( ( HT (f,T) ) + ( HT (g,T) ) ) by TERMORD:31;
A4: g <> ( 0_ (n,L) ) by POLYNOM7:def 1;
A5: ( HC (g,T) ) <> ( 0. L );
( fg . ( HT (( f *' g ),T) ) ) = ( ( ( f *' g ) . ( HT (( f *' g ),T) ) ) + ( p . ( HT (( f *' g ),T) ) ) ) by POLYNOM1:15
.= ( ( f *' g ) . ( HT (( f *' g ),T) ) ) by A1,RLVECT_1:def 4;
then A6: ( HT (( f *' g ),T) ) in ( Support fg ) by A2,POLYNOM1:def 3;
then fg <> ( 0_ (n,L) ) by POLYNOM7:1;
then fg reduces_to q,g,( HT (( f *' g ),T) ),T by A6,A4,A3,POLYRED:def 5;
then A7: (g in { g } & fg reduces_to q,g,T) by POLYRED:def 6,TARSKI:def 1;
q = ( fg - ( ( ( ( ( f *' g ) . ( HT (( f *' g ),T) ) ) + ( 0. L ) ) / ( HC (g,T) ) ) * ( ( HT (f,T) ) *' g ) ) ) by A1,POLYNOM1:15
.= ( fg - ( ( ( ( f *' g ) . ( HT (( f *' g ),T) ) ) / ( HC (g,T) ) ) * ( ( HT (f,T) ) *' g ) ) ) by RLVECT_1:def 4
.= ( fg - ( ( ( HC (( f *' g ),T) ) / ( HC (g,T) ) ) * ( ( HT (f,T) ) *' g ) ) ) by TERMORD:def 7
.= ( fg - ( ( ( ( HC (f,T) ) * ( HC (g,T) ) ) / ( HC (g,T) ) ) * ( ( HT (f,T) ) *' g ) ) ) by TERMORD:32
.= ( fg - ( ( ( ( HC (f,T) ) * ( HC (g,T) ) ) * ( ( HC (g,T) ) " ) ) * ( ( HT (f,T) ) *' g ) ) ) by VECTSP_1:def 11
.= ( fg - ( ( ( HC (f,T) ) * ( ( HC (g,T) ) * ( ( HC (g,T) ) " ) ) ) * ( ( HT (f,T) ) *' g ) ) ) by GROUP_1:def 3
.= ( fg - ( ( ( HC (f,T) ) * ( 1. L ) ) * ( ( HT (f,T) ) *' g ) ) ) by A5,VECTSP_1:def 10
.= ( fg - ( ( HC (f,T) ) * ( ( HT (f,T) ) *' g ) ) ) by VECTSP_1:def 6
.= ( fg - ( ( Monom (( HC (f,T) ),( HT (f,T) )) ) *' g ) ) by POLYRED:22
.= ( fg - ( ( HM (f,T) ) *' g ) ) by TERMORD:def 8
.= ( fg + ( - ( ( HM (f,T) ) *' g ) ) ) by POLYNOM1:def 6
.= ( ( ( f *' g ) + p ) + ( r *' g ) ) by POLYRED:6
.= ( ( ( f *' g ) + ( r *' g ) ) + p ) by POLYNOM1:21
.= ( ( g *' ( f + ( - ( HM (f,T) ) ) ) ) + p ) by POLYNOM1:26
.= ( ( ( f - ( HM (f,T) ) ) *' g ) + p ) by POLYNOM1:def 6
.= ( ( ( Red (f,T) ) *' g ) + p ) by TERMORD:def 9;
hence thesis by A7,POLYRED:def 7;
end;
