environ
vocabularies NUMBERS,PRE_POLY,ARYTM_3,ARYTM_1,ORDINAL1,BAGORDER,XXREAL_0,RLVECT_1,ALGSTR_0,VECTSP_1,LATTICES,VECTSP_2,ZFMISC_1,VALUED_0,POLYNOM7,CAT_3,RELAT_2,POLYNOM1,BROUWER,SUPINF_2,XCMPLX_0,SUBSET_1,RELAT_1,FUNCT_1,XBOOLE_0,TARSKI,ALGSTR_1,CARD_1,FUNCT_7,QC_LANG1,TERMORD,BINOP_1,POLYRED,REWRITE1,FINSEQ_1,STRUCT_0,MCART_1,FINSET_1,FUNCT_4,FUNCOP_1,ALGSEQ_1,ORDERS_2,WAYBEL_4,RUSUB_4,GROEB_2,MESFUNC1,GROEB_1,GROEB_3;
notations TARSKI,SUBSET_1,RELAT_1,XBOOLE_0,RELAT_2,CARD_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCT_4,FUNCOP_1,PRE_POLY,STRUCT_0,ALGSTR_0,GROUP_1,ALGSTR_1,RLVECT_1,VFUNCT_1,FINSET_1,MCART_1,FINSEQ_1,VECTSP_2,VECTSP_1,POLYNOM2,POLYNOM7,ORDERS_2,FUNCT_7,REWRITE1,BAGORDER,TERMORD,GROEB_1,POLYRED,GROEB_2,WAYBEL_4,POLYNOM1,CKB18,CKB19,CKB25,CKB26,CKB33,CKB34;
definitions TARSKI,STRUCT_0,CKB19,CKB25,CKB26,CKB33,CKB34;
theorems TARSKI,VECTSP_1,POLYNOM1,RLVECT_1,NAT_1,INT_1,POLYNOM7,REWRITE1,XBOOLE_0,TERMORD,CARD_1,FUNCT_1,XBOOLE_1,POLYRED,FUNCT_2,RELAT_1,BAGORDER,ALGSTR_1,CARD_2,GROEB_1,FUNCT_4,FUNCOP_1,FINSET_1,VECTSP_2,RELSET_1,WAYBEL_4,MCART_1,GROEB_2,GROUP_1,FUNCT_7,POLYNOM2,FINSEQ_3,XREAL_1,XXREAL_0,STRUCT_0,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57;
schemes FUNCT_2,NAT_1,INT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,POLYNOM1,POLYNOM2,POLYNOM4,POLYNOM7,TERMORD,POLYRED,ORDINAL1,VALUED_0,ALGSTR_0,PRE_POLY,VFUNCT_1,FUNCT_2,RELSET_1,CKB17,CKB21,CKB48,CKB49,CKB50;
constructors XXREAL_0,REWRITE1,VECTSP_2,WAYBEL_4,POLYNOM2,BAGORDER,TERMORD,POLYRED,GROEB_1,GROEB_2,RELSET_1,PBOOLE,FUNCT_7,VFUNCT_1,CKB18,CKB19,CKB25,CKB26,CKB33,CKB34;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
Th44: (for n being Ordinal holds (for T being  connected  admissible (TermOrder of n) holds (for L being  add-associative  right_complementable  right_zeroed  well-unital  distributive  domRing-like non  trivial doubleLoopStr holds (for p being (Polynomial of n,L) holds (for m being  non-zero (Monomial of n,L) holds (for i being (Element of ( NAT )) holds (i <= ( card ( Support p ) ) implies ( Low (( m *' p ),T,i) ) = ( m *' ( Low (p,T,i) ) ))))))))
proof
let n being Ordinal;
let T being  connected  admissible (TermOrder of n);
let L being  add-associative  right_complementable  right_zeroed  well-unital  distributive  domRing-like non  trivial doubleLoopStr;
let p being (Polynomial of n,L);
let m being  non-zero (Monomial of n,L);
let i being (Element of ( NAT ));
set l = ( Low (p,T,i) );
set lm = ( Low (( m *' p ),T,i) );
assume A1: i <= ( card ( Support p ) );
then A2: i <= ( card ( Support ( m *' p ) ) ) by CKB10:1;
A3: ( Support ( m *' l ) ) c= { ( s + t ) where s is (Element of ( Bags n )),t is (Element of ( Bags n )): (s in ( Support m ) & t in ( Support l )) } by TERMORD:30;
A4:now
m <> ( 0_ (n,L) ) by POLYNOM7:def 1;
then ( Support m ) <> ( {} ) by POLYNOM7:1;
then A5: ( Support m ) = { ( term m ) } by POLYNOM7:7;
then ( term m ) in ( Support m ) by TARSKI:def 1;
then A6: ( m . ( term m ) ) <> ( 0. L ) by POLYNOM1:def 3;
let u being set;
assume A7: u in ( Support ( m *' l ) );
then reconsider u9 = u as (Element of ( Bags n ));
u in { ( s + t ) where s is (Element of ( Bags n )),t is (Element of ( Bags n )): (s in ( Support m ) & t in ( Support l )) } by A3,A7;
then consider s,t being (Element of ( Bags n )) such that A8: u9 = ( s + t ) and A9: s in ( Support m ) and A10: t in ( Support l );
A11: ( l . t ) <> ( 0. L ) by A10,POLYNOM1:def 3;
A12: ( term m ) = s by A9,A5,TARSKI:def 1;
then ( ( m *' p ) . u9 ) = ( ( m . ( term m ) ) * ( p . t ) ) by A8,POLYRED:7
.= ( ( m . ( term m ) ) * ( l . t ) ) by A1,A10,CKB42:1;
then ( ( m *' p ) . u9 ) <> ( 0. L ) by A11,A6,VECTSP_2:def 1;
then A13: u9 in ( Support ( m *' p ) ) by POLYNOM1:def 3;
now
assume (not ( s + t ) in ( Support ( Low (( m *' p ),T,i) ) ));
then A14: ( s + t ) in ( Support ( Up (( m *' p ),T,i) ) ) by A2,A8,A13,CKB39:1;
now
let t9 being (bag of n);
assume t9 in ( Support ( Low (p,T,i) ) );
then ( s + t9 ) in ( Support ( Low (( m *' p ),T,i) ) ) by A1,A12,CKB54:1;
then A15: ( s + t9 ) < ( s + t ),T by A2,A14,CKB40:1;
now
assume t <= t9,T;
then ( s + t ) <= ( s + t9 ),T by CKB2:1;
hence contradiction by A15,TERMORD:5;
end;
hence t9 < t,T by TERMORD:5;
end;
then t < t,T by A10;
hence contradiction by TERMORD:def 3;
end;
hence u in ( Support lm ) by A8;
end;
A16: ( Support ( m *' p ) ) c= { ( s + t ) where s is (Element of ( Bags n )),t is (Element of ( Bags n )): (s in ( Support m ) & t in ( Support p )) } by TERMORD:30;
now
let u being set;
assume A17: u in ( Support ( Low (( m *' p ),T,i) ) );
then reconsider u9 = u as (Element of ( Bags n ));
( Support ( Low (( m *' p ),T,i) ) ) c= ( Support ( m *' p ) ) by A2,CKB37:1;
then u9 in ( Support ( m *' p ) ) by A17;
then A18: u9 in { ( s + t ) where s is (Element of ( Bags n )),t is (Element of ( Bags n )): (s in ( Support m ) & t in ( Support p )) } by A16;
m <> ( 0_ (n,L) ) by POLYNOM7:def 1;
then ( Support m ) <> ( {} ) by POLYNOM7:1;
then A19: ( Support m ) = { ( term m ) } by POLYNOM7:7;
then ( term m ) in ( Support m ) by TARSKI:def 1;
then A20: ( m . ( term m ) ) <> ( 0. L ) by POLYNOM1:def 3;
consider s,t being (Element of ( Bags n )) such that A21: u = ( s + t ) and A22: s in ( Support m ) and A23: t in ( Support p ) by A18;
A24: ( p . t ) <> ( 0. L ) by A23,POLYNOM1:def 3;
A25: ( term m ) = s by A22,A19,TARSKI:def 1;
then A26: t in ( Support l ) by A1,A17,A21,CKB54:1;
( ( m *' l ) . ( ( term m ) + t ) ) = ( ( m . ( term m ) ) * ( l . t ) ) by POLYRED:7
.= ( ( m . ( term m ) ) * ( p . t ) ) by A1,A26,CKB42:1;
then ( ( m *' l ) . u9 ) <> ( 0. L ) by A21,A20,A25,A24,VECTSP_2:def 1;
hence u in ( Support ( m *' ( Low (p,T,i) ) ) ) by POLYNOM1:def 3;
end;
then A27: ( Support ( m *' l ) ) = ( Support lm ) by A4,TARSKI:1;
A28:now
let x being set;
assume x in ( dom ( m *' l ) );
then reconsider b = x as (Element of ( Bags n ));
now
per cases ;
case A29: b in ( Support ( m *' l ) );
then A30: b in { ( s + t ) where s is (Element of ( Bags n )),t is (Element of ( Bags n )): (s in ( Support m ) & t in ( Support l )) } by A3;
A31: b in ( Support lm ) by A4,A29;
consider s,t being (Element of ( Bags n )) such that A32: b = ( s + t ) and A33: s in ( Support m ) and A34: t in ( Support l ) by A30;
( Support m ) = { ( term m ) } by A33,POLYNOM7:7;
then A35: ( term m ) = s by A33,TARSKI:def 1;
hence ( ( m *' l ) . b ) = ( ( m . ( term m ) ) * ( l . t ) ) by A32,POLYRED:7
.= ( ( m . ( term m ) ) * ( p . t ) ) by A1,A34,CKB42:1
.= ( ( m *' p ) . b ) by A32,A35,POLYRED:7
.= ( lm . b ) by A2,A31,CKB42:1;
end;
case A36: (not b in ( Support ( m *' l ) ));
hence ( ( m *' l ) . b ) = ( 0. L ) by POLYNOM1:def 3
.= ( lm . b ) by A27,A36,POLYNOM1:def 3;
end;
end;
hence ( ( m *' l ) . x ) = ( lm . x );
end;
( dom ( m *' l ) ) = ( Bags n ) by FUNCT_2:def 1
.= ( dom lm ) by FUNCT_2:def 1;
hence thesis by A28,FUNCT_1:2;
end;
