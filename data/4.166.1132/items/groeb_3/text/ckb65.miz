environ
vocabularies NUMBERS,PRE_POLY,ARYTM_3,ARYTM_1,ORDINAL1,BAGORDER,XXREAL_0,RLVECT_1,ALGSTR_0,VECTSP_1,LATTICES,VECTSP_2,ZFMISC_1,VALUED_0,POLYNOM7,CAT_3,RELAT_2,POLYNOM1,BROUWER,SUPINF_2,XCMPLX_0,SUBSET_1,RELAT_1,FUNCT_1,XBOOLE_0,TARSKI,ALGSTR_1,CARD_1,FUNCT_7,QC_LANG1,TERMORD,BINOP_1,POLYRED,REWRITE1,FINSEQ_1,STRUCT_0,MCART_1,FINSET_1,FUNCT_4,FUNCOP_1,ALGSEQ_1,ORDERS_2,WAYBEL_4,RUSUB_4,GROEB_2,MESFUNC1,GROEB_1,GROEB_3;
notations TARSKI,SUBSET_1,RELAT_1,XBOOLE_0,RELAT_2,CARD_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCT_4,FUNCOP_1,PRE_POLY,STRUCT_0,ALGSTR_0,GROUP_1,ALGSTR_1,RLVECT_1,VFUNCT_1,FINSET_1,MCART_1,FINSEQ_1,VECTSP_2,VECTSP_1,POLYNOM2,POLYNOM7,ORDERS_2,FUNCT_7,REWRITE1,BAGORDER,TERMORD,GROEB_1,POLYRED,GROEB_2,WAYBEL_4,POLYNOM1,CKB18,CKB19,CKB25,CKB26,CKB33,CKB34;
definitions TARSKI,STRUCT_0,CKB19,CKB25,CKB26,CKB33,CKB34;
theorems TARSKI,VECTSP_1,POLYNOM1,RLVECT_1,NAT_1,INT_1,POLYNOM7,REWRITE1,XBOOLE_0,TERMORD,CARD_1,FUNCT_1,XBOOLE_1,POLYRED,FUNCT_2,RELAT_1,BAGORDER,ALGSTR_1,CARD_2,GROEB_1,FUNCT_4,FUNCOP_1,FINSET_1,VECTSP_2,RELSET_1,WAYBEL_4,MCART_1,GROEB_2,GROUP_1,FUNCT_7,POLYNOM2,FINSEQ_3,XREAL_1,XXREAL_0,STRUCT_0,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64;
schemes FUNCT_2,NAT_1,INT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,POLYNOM1,POLYNOM2,POLYNOM4,POLYNOM7,TERMORD,POLYRED,ORDINAL1,VALUED_0,ALGSTR_0,PRE_POLY,VFUNCT_1,FUNCT_2,RELSET_1,CKB17,CKB21,CKB48,CKB49,CKB50;
constructors XXREAL_0,REWRITE1,VECTSP_2,WAYBEL_4,POLYNOM2,BAGORDER,TERMORD,POLYRED,GROEB_1,GROEB_2,RELSET_1,PBOOLE,FUNCT_7,VFUNCT_1,CKB18,CKB19,CKB25,CKB26,CKB33,CKB34;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
Th49: (for n being Ordinal holds (for T being  connected  admissible (TermOrder of n) holds (for L being  add-associative  right_complementable  right_zeroed  commutative  associative  well-unital  distributive  Abelian  almost_left_invertible non trivial doubleLoopStr holds (for P being (Subset of ( Polynom-Ring (n,L) )) holds (for f,g being (Polynomial of n,L) holds (( PolyRedRel (P,T) ) reduces f,g implies ( PolyRedRel (P,T) ) reduces ( - f ),( - g )))))))
proof
let n being Ordinal;
let T being  connected  admissible (TermOrder of n);
let L being  add-associative  right_complementable  right_zeroed  commutative  associative  well-unital  distributive  Abelian  almost_left_invertible non trivial doubleLoopStr;
let P being (Subset of ( Polynom-Ring (n,L) ));
let f being (Polynomial of n,L),g being (Polynomial of n,L);
assume ( PolyRedRel (P,T) ) reduces f,g;
then consider R being (RedSequence of ( PolyRedRel (P,T) )) such that A1: ( R . 1 ) = f and A2: ( R . ( len R ) ) = g by REWRITE1:def 3;
defpred P[ (Element of ( NAT )) ]
 means
(for q being (Polynomial of n,L) holds (q = ( R . $1 ) implies ( PolyRedRel (P,T) ) reduces ( - f ),( - q )));
A3: 1 <= ( len R ) by NAT_1:14;
A4:now
let k being (Element of ( NAT ));
assume A5: (1 <= k & k < ( len R ));
then 1 < ( len R ) by XXREAL_0:2;
then reconsider p = ( R . k ) as (Polynomial of n,L) by A5,CKB59:1;
assume P[ k ];
then A6: ( PolyRedRel (P,T) ) reduces ( - f ),( - p );
now
let q being (Polynomial of n,L);
assume A7: q = ( R . ( k + 1 ) );
(1 <= ( k + 1 ) & ( k + 1 ) <= ( len R )) by A5,NAT_1:13;
then A8: ( k + 1 ) in ( dom R ) by FINSEQ_3:25;
k in ( dom R ) by A5,FINSEQ_3:25;
then [ ( R . k ),( R . ( k + 1 ) ) ] in ( PolyRedRel (P,T) ) by A8,REWRITE1:def 2;
then p reduces_to q,P,T by A7,POLYRED:def 13;
then consider l being (Polynomial of n,L) such that A9: l in P and A10: p reduces_to q,l,T by POLYRED:def 7;
( - p ) reduces_to ( - q ),l,T by A10,CKB60:1;
then ( - p ) reduces_to ( - q ),P,T by A9,POLYRED:def 7;
then [ ( - p ),( - q ) ] in ( PolyRedRel (P,T) ) by POLYRED:def 13;
then ( PolyRedRel (P,T) ) reduces ( - p ),( - q ) by REWRITE1:15;
hence ( PolyRedRel (P,T) ) reduces ( - f ),( - q ) by A6,REWRITE1:16;
end;
hence P[ ( k + 1 ) ];
end;
A11: P[ 1 ] by A1,REWRITE1:12;
(for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len R )) implies P[ i ])) from INT_1:sch 7(A11,A4);
hence thesis by A2,A3;
end;
