environ
vocabularies NUMBERS,PRE_POLY,ARYTM_3,ARYTM_1,ORDINAL1,BAGORDER,XXREAL_0,RLVECT_1,ALGSTR_0,VECTSP_1,LATTICES,VECTSP_2,ZFMISC_1,VALUED_0,POLYNOM7,CAT_3,RELAT_2,POLYNOM1,BROUWER,SUPINF_2,XCMPLX_0,SUBSET_1,RELAT_1,FUNCT_1,XBOOLE_0,TARSKI,ALGSTR_1,CARD_1,FUNCT_7,QC_LANG1,TERMORD,BINOP_1,POLYRED,REWRITE1,FINSEQ_1,STRUCT_0,MCART_1,FINSET_1,FUNCT_4,FUNCOP_1,ALGSEQ_1,ORDERS_2,WAYBEL_4,RUSUB_4,GROEB_2,MESFUNC1,GROEB_1,GROEB_3;
notations TARSKI,SUBSET_1,RELAT_1,XBOOLE_0,RELAT_2,CARD_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCT_4,FUNCOP_1,PRE_POLY,STRUCT_0,ALGSTR_0,GROUP_1,ALGSTR_1,RLVECT_1,VFUNCT_1,FINSET_1,MCART_1,FINSEQ_1,VECTSP_2,VECTSP_1,POLYNOM2,POLYNOM7,ORDERS_2,FUNCT_7,REWRITE1,BAGORDER,TERMORD,GROEB_1,POLYRED,GROEB_2,WAYBEL_4,POLYNOM1;
definitions TARSKI,STRUCT_0;
theorems TARSKI,VECTSP_1,POLYNOM1,RLVECT_1,NAT_1,INT_1,POLYNOM7,REWRITE1,XBOOLE_0,TERMORD,CARD_1,FUNCT_1,XBOOLE_1,POLYRED,FUNCT_2,RELAT_1,BAGORDER,ALGSTR_1,CARD_2,GROEB_1,FUNCT_4,FUNCOP_1,FINSET_1,VECTSP_2,RELSET_1,WAYBEL_4,MCART_1,GROEB_2,GROUP_1,FUNCT_7,POLYNOM2,FINSEQ_3,XREAL_1,XXREAL_0,STRUCT_0,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
schemes FUNCT_2,NAT_1,INT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,POLYNOM1,POLYNOM2,POLYNOM4,POLYNOM7,TERMORD,POLYRED,ORDINAL1,VALUED_0,ALGSTR_0,PRE_POLY,VFUNCT_1,FUNCT_2,RELSET_1;
constructors XXREAL_0,REWRITE1,VECTSP_2,WAYBEL_4,POLYNOM2,BAGORDER,TERMORD,POLYRED,GROEB_1,GROEB_2,RELSET_1,PBOOLE,FUNCT_7,VFUNCT_1;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
Th7: (for n being Ordinal holds (for L being  add-associative  right_complementable  right_zeroed  well-unital  distributive  domRing-like non  trivial doubleLoopStr holds (for m1,m2 being  non-zero (Monomial of n,L) holds ( term ( m1 *' m2 ) ) = ( ( term m1 ) + ( term m2 ) ))))
proof
let n being Ordinal;
let L being  add-associative  right_complementable  right_zeroed  well-unital  distributive  domRing-like non  trivial doubleLoopStr;
let m1 being  non-zero (Monomial of n,L);
let m2 being  non-zero (Monomial of n,L);
set T = the  connected (TermOrder of n);
A1: ( HC (m2,T) ) <> ( 0. L );
( HC (m1,T) ) <> ( 0. L );
then reconsider a = ( coefficient m1 ),b = ( coefficient m2 ) as non  zero (Element of L) by A1,TERMORD:23;
( a * b ) <> ( 0. L ) by VECTSP_2:def 1;
then reconsider c = ( a * b ) as non  zero (Element of L) by STRUCT_0:def 12;
(m1 = ( Monom (a,( term m1 )) ) & m2 = ( Monom (b,( term m2 )) )) by POLYNOM7:11;
then ( term ( m1 *' m2 ) ) = ( term ( Monom (c,( ( term m1 ) + ( term m2 ) )) ) ) by TERMORD:3;
hence thesis by POLYNOM7:10;
end;
