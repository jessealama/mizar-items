environ
vocabularies NUMBERS,PRE_POLY,ARYTM_3,ARYTM_1,ORDINAL1,BAGORDER,XXREAL_0,RLVECT_1,ALGSTR_0,VECTSP_1,LATTICES,VECTSP_2,ZFMISC_1,VALUED_0,POLYNOM7,CAT_3,RELAT_2,POLYNOM1,BROUWER,SUPINF_2,XCMPLX_0,SUBSET_1,RELAT_1,FUNCT_1,XBOOLE_0,TARSKI,ALGSTR_1,CARD_1,FUNCT_7,QC_LANG1,TERMORD,BINOP_1,POLYRED,REWRITE1,FINSEQ_1,STRUCT_0,MCART_1,FINSET_1,FUNCT_4,FUNCOP_1,ALGSEQ_1,ORDERS_2,WAYBEL_4,RUSUB_4,GROEB_2,MESFUNC1,GROEB_1,GROEB_3;
notations TARSKI,SUBSET_1,RELAT_1,XBOOLE_0,RELAT_2,CARD_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCT_4,FUNCOP_1,PRE_POLY,STRUCT_0,ALGSTR_0,GROUP_1,ALGSTR_1,RLVECT_1,VFUNCT_1,FINSET_1,MCART_1,FINSEQ_1,VECTSP_2,VECTSP_1,POLYNOM2,POLYNOM7,ORDERS_2,FUNCT_7,REWRITE1,BAGORDER,TERMORD,GROEB_1,POLYRED,GROEB_2,WAYBEL_4,POLYNOM1,CKB18,CKB19,CKB25,CKB26,CKB33,CKB34;
definitions TARSKI,STRUCT_0,CKB19,CKB25,CKB26,CKB33,CKB34;
theorems TARSKI,VECTSP_1,POLYNOM1,RLVECT_1,NAT_1,INT_1,POLYNOM7,REWRITE1,XBOOLE_0,TERMORD,CARD_1,FUNCT_1,XBOOLE_1,POLYRED,FUNCT_2,RELAT_1,BAGORDER,ALGSTR_1,CARD_2,GROEB_1,FUNCT_4,FUNCOP_1,FINSET_1,VECTSP_2,RELSET_1,WAYBEL_4,MCART_1,GROEB_2,GROUP_1,FUNCT_7,POLYNOM2,FINSEQ_3,XREAL_1,XXREAL_0,STRUCT_0,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66;
schemes FUNCT_2,NAT_1,INT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,POLYNOM1,POLYNOM2,POLYNOM4,POLYNOM7,TERMORD,POLYRED,ORDINAL1,VALUED_0,ALGSTR_0,PRE_POLY,VFUNCT_1,FUNCT_2,RELSET_1,CKB17,CKB21,CKB48,CKB49,CKB50;
constructors XXREAL_0,REWRITE1,VECTSP_2,WAYBEL_4,POLYNOM2,BAGORDER,TERMORD,POLYRED,GROEB_1,GROEB_2,RELSET_1,PBOOLE,FUNCT_7,VFUNCT_1,CKB18,CKB19,CKB25,CKB26,CKB33,CKB34;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
Th51: (for n being Ordinal holds (for T being  connected  admissible (TermOrder of n) holds (for L being  add-associative  right_complementable  right_zeroed  commutative  associative  well-unital  distributive  Abelian  almost_left_invertible non trivial doubleLoopStr holds (for f,g being  non-zero (Polynomial of n,L) holds ( PolyRedRel ({ g },T) ) reduces ( f *' g ),( 0_ (n,L) )))))
proof
let n being Ordinal;
let T being  connected  admissible (TermOrder of n);
let L being  add-associative  right_complementable  right_zeroed  commutative  associative  well-unital  distributive  Abelian  almost_left_invertible non trivial doubleLoopStr;
let f being  non-zero (Polynomial of n,L),g being  non-zero (Polynomial of n,L);
defpred P[ (Element of ( NAT )) ]
 means
(for f being (Polynomial of n,L) holds (( card ( Support f ) ) = $1 implies ( PolyRedRel ({ g },T) ) reduces ( f *' g ),( 0_ (n,L) )));
A1: (ex n being (Element of ( NAT )) st ( card ( Support f ) ) = n);
A2:now
let k being (Element of ( NAT ));
assume A3: P[ k ];
now
let f being (Polynomial of n,L);
set rf = ( Red (f,T) );
assume A4: ( card ( Support f ) ) = ( k + 1 );
now
assume f = ( 0_ (n,L) );
then ( Support f ) = ( {} ) by POLYNOM7:1;
hence contradiction by A4;
end;
then reconsider f1 = f as  non-zero (Polynomial of n,L) by POLYNOM7:def 1;
( f1 *' g ) reduces_to ( rf *' g ),{ g },T by CKB63:1;
then [ ( f1 *' g ),( rf *' g ) ] in ( PolyRedRel ({ g },T) ) by POLYRED:def 13;
then A5: ( PolyRedRel ({ g },T) ) reduces ( f *' g ),( rf *' g ) by REWRITE1:15;
f1 <> ( 0_ (n,L) ) by POLYNOM7:def 1;
then ( Support f ) <> ( {} ) by POLYNOM7:1;
then ( HT (f,T) ) in ( Support f ) by TERMORD:def 6;
then (for u being set holds (u in { ( HT (f,T) ) } implies u in ( Support f ))) by TARSKI:def 1;
then A6: { ( HT (f,T) ) } c= ( Support f ) by TARSKI:def 3;
( Support rf ) = ( ( Support f ) \ { ( HT (f,T) ) } ) by TERMORD:36;
then ( card ( Support rf ) ) = ( ( card ( Support f ) ) - ( card { ( HT (f,T) ) } ) ) by A6,CARD_2:44
.= ( ( k + 1 ) - 1 ) by A4,CARD_1:30
.= ( k + ( 0 ) );
then ( PolyRedRel ({ g },T) ) reduces ( rf *' g ),( 0_ (n,L) ) by A3;
hence ( PolyRedRel ({ g },T) ) reduces ( f *' g ),( 0_ (n,L) ) by A5,REWRITE1:16;
end;
hence P[ ( k + 1 ) ];
end;
now
let f being (Polynomial of n,L);
assume ( card ( Support f ) ) = ( 0 );
then ( Support f ) = ( {} );
then f = ( 0_ (n,L) ) by POLYNOM7:1;
then ( f *' g ) = ( 0_ (n,L) ) by POLYRED:5;
hence ( PolyRedRel ({ g },T) ) reduces ( f *' g ),( 0_ (n,L) ) by REWRITE1:12;
end;
then A7: P[ ( 0 ) ];
(for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A7,A2);
hence thesis by A1;
end;
