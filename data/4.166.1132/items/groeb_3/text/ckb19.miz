environ
vocabularies NUMBERS,PRE_POLY,ARYTM_3,ARYTM_1,ORDINAL1,BAGORDER,XXREAL_0,RLVECT_1,ALGSTR_0,VECTSP_1,LATTICES,VECTSP_2,ZFMISC_1,VALUED_0,POLYNOM7,CAT_3,RELAT_2,POLYNOM1,BROUWER,SUPINF_2,XCMPLX_0,SUBSET_1,RELAT_1,FUNCT_1,XBOOLE_0,TARSKI,ALGSTR_1,CARD_1,FUNCT_7,QC_LANG1,TERMORD,BINOP_1,POLYRED,REWRITE1,FINSEQ_1,STRUCT_0,MCART_1,FINSET_1,FUNCT_4,FUNCOP_1,ALGSEQ_1,ORDERS_2,WAYBEL_4,RUSUB_4,GROEB_2,MESFUNC1,GROEB_1,GROEB_3;
notations TARSKI,SUBSET_1,RELAT_1,XBOOLE_0,RELAT_2,CARD_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCT_4,FUNCOP_1,PRE_POLY,STRUCT_0,ALGSTR_0,GROUP_1,ALGSTR_1,RLVECT_1,VFUNCT_1,FINSET_1,MCART_1,FINSEQ_1,VECTSP_2,VECTSP_1,POLYNOM2,POLYNOM7,ORDERS_2,FUNCT_7,REWRITE1,BAGORDER,TERMORD,GROEB_1,POLYRED,GROEB_2,WAYBEL_4,POLYNOM1,CKB18;
definitions TARSKI,STRUCT_0;
theorems TARSKI,VECTSP_1,POLYNOM1,RLVECT_1,NAT_1,INT_1,POLYNOM7,REWRITE1,XBOOLE_0,TERMORD,CARD_1,FUNCT_1,XBOOLE_1,POLYRED,FUNCT_2,RELAT_1,BAGORDER,ALGSTR_1,CARD_2,GROEB_1,FUNCT_4,FUNCOP_1,FINSET_1,VECTSP_2,RELSET_1,WAYBEL_4,MCART_1,GROEB_2,GROUP_1,FUNCT_7,POLYNOM2,FINSEQ_3,XREAL_1,XXREAL_0,STRUCT_0,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
schemes FUNCT_2,NAT_1,INT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,POLYNOM1,POLYNOM2,POLYNOM4,POLYNOM7,TERMORD,POLYRED,ORDINAL1,VALUED_0,ALGSTR_0,PRE_POLY,VFUNCT_1,FUNCT_2,RELSET_1,CKB17;
constructors XXREAL_0,REWRITE1,VECTSP_2,WAYBEL_4,POLYNOM2,BAGORDER,TERMORD,POLYRED,GROEB_1,GROEB_2,RELSET_1,PBOOLE,FUNCT_7,VFUNCT_1,CKB18;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
definition
let X being set;
let L being non  empty ZeroStr;
let s being (Series of X,L);
let Y being (Subset of ( Bags X ));
func s | Y -> (Series of X,L) equals 
( s +* ( ( ( Support s ) \ Y ) --> ( 0. L ) ) );
coherence
proof
set m = ( ( ( Support s ) \ Y ) --> ( 0. L ) );
set r = ( s +* m );
A1:now
let x being set;
assume x in ( Bags X );
then reconsider x9 = x as (Element of ( Bags X ));
now
per cases ;
case A2: x9 in ( dom m );
then ( r . x9 ) = ( m . x9 ) by FUNCT_4:13
.= ( 0. L ) by A2,FUNCOP_1:7;
hence ( r . x ) in (the carrier of L);
end;
case (not x in ( dom m ));
then ( r . x9 ) = ( s . x9 ) by FUNCT_4:11;
hence ( r . x ) in (the carrier of L);
end;
end;
hence ( r . x ) in (the carrier of L);
end;
now
let u being set;
assume u in ( ( Support s ) \ Y );
then u in ( Support s ) by XBOOLE_0:def 5;
hence u in ( Bags X );
end;
then A3: ( ( Support s ) \ Y ) c= ( Bags X ) by TARSKI:def 3;
(( dom s ) = ( Bags X ) & ( dom m ) = ( ( Support s ) \ Y )) by FUNCT_2:def 1;
then ( dom r ) = ( ( Bags X ) \/ ( ( Support s ) \ Y ) ) by FUNCT_4:def 1;
hence thesis by A3,A1,FUNCT_2:3,XBOOLE_1:12;
end;
end;
