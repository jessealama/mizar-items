environ
vocabularies NUMBERS,PRE_POLY,ARYTM_3,ARYTM_1,ORDINAL1,BAGORDER,XXREAL_0,RLVECT_1,ALGSTR_0,VECTSP_1,LATTICES,VECTSP_2,ZFMISC_1,VALUED_0,POLYNOM7,CAT_3,RELAT_2,POLYNOM1,BROUWER,SUPINF_2,XCMPLX_0,SUBSET_1,RELAT_1,FUNCT_1,XBOOLE_0,TARSKI,ALGSTR_1,CARD_1,FUNCT_7,QC_LANG1,TERMORD,BINOP_1,POLYRED,REWRITE1,FINSEQ_1,STRUCT_0,MCART_1,FINSET_1,FUNCT_4,FUNCOP_1,ALGSEQ_1,ORDERS_2,WAYBEL_4,RUSUB_4,GROEB_2,MESFUNC1,GROEB_1,GROEB_3;
notations TARSKI,SUBSET_1,RELAT_1,XBOOLE_0,RELAT_2,CARD_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCT_4,FUNCOP_1,PRE_POLY,STRUCT_0,ALGSTR_0,GROUP_1,ALGSTR_1,RLVECT_1,VFUNCT_1,FINSET_1,MCART_1,FINSEQ_1,VECTSP_2,VECTSP_1,POLYNOM2,POLYNOM7,ORDERS_2,FUNCT_7,REWRITE1,BAGORDER,TERMORD,GROEB_1,POLYRED,GROEB_2,WAYBEL_4,POLYNOM1,CKB18,CKB19,CKB25,CKB26,CKB33,CKB34;
definitions TARSKI,STRUCT_0,CKB19,CKB25,CKB26,CKB33,CKB34;
theorems TARSKI,VECTSP_1,POLYNOM1,RLVECT_1,NAT_1,INT_1,POLYNOM7,REWRITE1,XBOOLE_0,TERMORD,CARD_1,FUNCT_1,XBOOLE_1,POLYRED,FUNCT_2,RELAT_1,BAGORDER,ALGSTR_1,CARD_2,GROEB_1,FUNCT_4,FUNCOP_1,FINSET_1,VECTSP_2,RELSET_1,WAYBEL_4,MCART_1,GROEB_2,GROUP_1,FUNCT_7,POLYNOM2,FINSEQ_3,XREAL_1,XXREAL_0,STRUCT_0,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45;
schemes FUNCT_2,NAT_1,INT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,POLYNOM1,POLYNOM2,POLYNOM4,POLYNOM7,TERMORD,POLYRED,ORDINAL1,VALUED_0,ALGSTR_0,PRE_POLY,VFUNCT_1,FUNCT_2,RELSET_1,CKB17,CKB21;
constructors XXREAL_0,REWRITE1,VECTSP_2,WAYBEL_4,POLYNOM2,BAGORDER,TERMORD,POLYRED,GROEB_1,GROEB_2,RELSET_1,PBOOLE,FUNCT_7,VFUNCT_1,CKB18,CKB19,CKB25,CKB26,CKB33,CKB34;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
Th35: (for n being Ordinal holds (for T being  connected (TermOrder of n) holds (for L being  add-associative  right_zeroed  right_complementable  Abelian non  empty doubleLoopStr holds (for p being (Polynomial of n,L) holds (( Up (p,T,( card ( Support p ) )) ) = p & ( Low (p,T,( card ( Support p ) )) ) = ( 0_ (n,L) ))))))
proof
let n being Ordinal;
let T being  connected (TermOrder of n);
let L being  add-associative  right_zeroed  right_complementable  Abelian non  empty doubleLoopStr;
let p being (Polynomial of n,L);
set u = ( Up (p,T,( card ( Support p ) )) );
set l = ( Low (p,T,( card ( Support p ) )) );
( Support u ) = ( ( Support p ) /\ ( Upper_Support (p,T,( card ( Support p ) )) ) ) by CKB22:1;
then A1: ( Support u ) c= ( Support p ) by XBOOLE_1:17;
A2: ( card ( Support u ) ) = ( card ( Upper_Support (p,T,( card ( Support p ) )) ) ) by CKB35:1
.= ( card ( Support p ) ) by CKB30:1;
A3:now
let x being set;
assume A4: x in ( Support p );
now
assume (not x in ( Support u ));
then ( Support u ) c< ( Support p ) by A1,A4,XBOOLE_0:def 8;
hence contradiction by A2,CARD_2:48;
end;
hence x in ( Support u );
end;
(for x being set holds (x in ( Support u ) implies x in ( Support p ))) by A1;
then A5: ( Support u ) = ( Support p ) by A3,TARSKI:1;
A6:now
let x being set;
assume x in ( dom p );
then reconsider x9 = x as (Element of ( Bags n ));
now
per cases ;
case x in ( Support p );
hence ( p . x9 ) = ( u . x9 ) by A5,CKB22:1;
end;
case A7: (not x in ( Support p ));
hence ( p . x9 ) = ( 0. L ) by POLYNOM1:def 3
.= ( u . x9 ) by A5,A7,POLYNOM1:def 3;
end;
end;
hence ( p . x ) = ( u . x );
end;
( dom p ) = ( Bags n ) by FUNCT_2:def 1
.= ( dom u ) by FUNCT_2:def 1;
hence A8: p = u by A6,FUNCT_1:2;
thus ( 0_ (n,L) ) = ( p + ( - p ) ) by POLYRED:3
.= ( ( l + p ) + ( - p ) ) by A8,CKB44:1
.= ( l + ( p + ( - p ) ) ) by POLYNOM1:21
.= ( l + ( 0_ (n,L) ) ) by POLYRED:3
.= l by POLYRED:2;
end;
