environ
vocabularies NUMBERS,ZF_LANG,XBOOLEAN,XXREAL_0,BVFUNC_2,CLASSES2,FUNCT_1,CARD_1,FINSEQ_1,ARYTM_3,TARSKI,XBOOLE_0,ZF_MODEL,SUBSET_1,REALSET1,RELAT_1,FUNCT_4,FINSET_1,NAT_1,ZFMISC_1,ORDINAL4,ZF_LANG1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSET_1,ZF_LANG,ZF_MODEL,XXREAL_0,FUNCT_7,CKB72,CKB73,CKB74,CKB140,CKB158;
definitions TARSKI,ZF_LANG,ZF_MODEL,XBOOLE_0,CKB72,CKB140;
theorems TARSKI,ZFMISC_1,ENUMSET1,NAT_1,FINSEQ_1,FINSEQ_3,FUNCT_1,FUNCT_2,ZF_LANG,ZF_MODEL,ZFMODEL1,RELSET_1,XBOOLE_0,XBOOLE_1,XXREAL_0,ORDINAL1,FUNCT_7,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB72,CKB75,CKB76,CKB77,CKB78,CKB79,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106,CKB107,CKB108,CKB109,CKB110,CKB111,CKB112,CKB113,CKB114,CKB115,CKB116,CKB117,CKB118,CKB119,CKB120,CKB121,CKB122,CKB123,CKB124,CKB125,CKB126,CKB127,CKB128,CKB129,CKB130,CKB131,CKB132,CKB133,CKB134,CKB135,CKB136,CKB137,CKB138,CKB139,CKB140,CKB141,CKB142,CKB143,CKB144,CKB145,CKB146,CKB147,CKB148,CKB149,CKB150,CKB151,CKB152,CKB153,CKB154,CKB155,CKB156,CKB157;
schemes PARTFUN1,ZF_LANG,CKB71;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FINSET_1,XXREAL_0,NAT_1,FINSEQ_1,ZF_LANG,CKB80;
constructors ENUMSET1,XXREAL_0,XREAL_0,NAT_1,ZF_MODEL,FUNCT_7,RELSET_1,CKB72,CKB74,CKB140,CKB158;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve H for ZF-formula;
reserve x for Variable;
reserve y for Variable;
reserve a for set;
definition
let H;
let x;
let y;
func H / (x,y) -> Function
means
:Def4: (( dom it ) = ( dom H ) & (for a holds (a in ( dom H ) implies ((( H . a ) = x implies ( it . a ) = y) & (( H . a ) <> x implies ( it . a ) = ( H . a ))))));
existence
proof
deffunc G(set) = ( H . $1 );
deffunc F(set) = y;
set A = ( dom H );
defpred C[ set ]
 means
( H . $1 ) = x;
thus (ex f being Function st (( dom f ) = A & (for a holds (a in A implies ((C[ a ] implies ( f . a ) = F(a)) & ((not C[ a ]) implies ( f . a ) = G(a))))))) from PARTFUN1:sch 1;
end;
uniqueness
proof
let f1 being Function,f2 being Function;
assume that
A1: ( dom f1 ) = ( dom H )
and
A2: (for a holds (a in ( dom H ) implies ((( H . a ) = x implies ( f1 . a ) = y) & (( H . a ) <> x implies ( f1 . a ) = ( H . a )))))
and
A3: ( dom f2 ) = ( dom H )
and
A4: (for a holds (a in ( dom H ) implies ((( H . a ) = x implies ( f2 . a ) = y) & (( H . a ) <> x implies ( f2 . a ) = ( H . a )))));
now
let a;
assume A5: a in ( dom H );
then A6: (( H . a ) <> x implies ( f1 . a ) = ( H . a )) by A2;
(( H . a ) = x implies ( f1 . a ) = y) by A2,A5;
hence ( f1 . a ) = ( f2 . a ) by A4,A5,A6;
end;
hence thesis by A1,A3,FUNCT_1:2;
end;
end;
