environ
vocabularies XBOOLE_0,FUNCT_1,SUBSET_1,RELAT_1,RELAT_2,LATTICE3,ORDERS_2,XXREAL_0,TREES_2,WAYBEL_0,YELLOW_0,LATTICES,EQREL_1,ORDINAL2,ZFMISC_1,TARSKI,STRUCT_0,MCART_1,SEQM_3,REWRITE1,FINSET_1,WELLORD1,CAT_1,YELLOW_2,FINSUB_1,WELLORD2,YELLOW_1,CARD_FIL,LATTICE2,WAYBEL_1,WAYBEL_2,CARD_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSUB_1,RELAT_1,FUNCT_1,RELSET_1,TOLER_1,FINSET_1,PARTFUN1,BINOP_1,FUNCT_2,DOMAIN_1,STRUCT_0,ORDERS_2,ORDERS_3,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,WAYBEL_1,YELLOW_3,YELLOW_4;
definitions WAYBEL_1,YELLOW_0,LATTICE3,ORDERS_3,TARSKI,WAYBEL_0,XBOOLE_0,WELLORD1,BINOP_1,RELAT_1,STRUCT_0;
theorems FINSUB_1,FUNCT_1,FUNCT_2,LATTICE3,MCART_1,ORDERS_2,ORDERS_3,RELAT_1,STRUCT_0,TARSKI,WAYBEL_0,YELLOW_0,ZFMISC_1,YELLOW_1,YELLOW_2,WAYBEL_1,YELLOW_3,YELLOW_4,FUNCT_5,TEX_1,XBOOLE_1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
schemes FINSET_1,YELLOW_3,FUNCT_2;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FINSET_1,FINSUB_1,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,WAYBEL_1,YELLOW_3,YELLOW_4,CARD_1,ORDINAL1,ORDERS_2,RELSET_1,CKB1,CKB2,CKB3;
constructors DOMAIN_1,FINSUB_1,TOLER_1,ORDERS_3,WAYBEL_1,YELLOW_3,YELLOW_4,RELSET_1;
requirements SUBSET,BOOLE,NUMERALS;
begin
registration
let S being  up-complete non empty  reflexive RelStr;
let T being  up-complete non empty  reflexive RelStr;
cluster [: S,T :] ->  up-complete;
coherence
proof
let X being non empty  directed (Subset of [: S,T :]);
reconsider X1 = ( proj1 X ) as non empty  directed (Subset of S) by YELLOW_3:21,YELLOW_3:22;
reconsider X2 = ( proj2 X ) as non empty  directed (Subset of T) by YELLOW_3:21,YELLOW_3:22;
consider x being (Element of S) such that A1: x is_>=_than X1 and A2: (for z being (Element of S) holds (z is_>=_than X1 implies x <= z)) by WAYBEL_0:def 39;
consider y being (Element of T) such that A3: y is_>=_than X2 and A4: (for z being (Element of T) holds (z is_>=_than X2 implies y <= z)) by WAYBEL_0:def 39;
take [ x,y ];
thus [ x,y ] is_>=_than X by A1,A3,YELLOW_3:31;
let z being (Element of [: S,T :]);
assume that
A5: z is_>=_than X;
(the carrier of [: S,T :]) = [: (the carrier of S),(the carrier of T) :] by YELLOW_3:def 2;
then A6: z = [ ( z `1 ),( z `2 ) ] by MCART_1:21;
then ( z `2 ) is_>=_than X2 by A5,YELLOW_3:31;
then A7: y <= ( z `2 ) by A4;
( z `1 ) is_>=_than X1 by A5,A6,YELLOW_3:31;
then x <= ( z `1 ) by A2;
hence thesis by A6,A7,YELLOW_3:11;
end;
end;
