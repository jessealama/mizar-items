environ
vocabularies XBOOLE_0,FUNCT_1,SUBSET_1,RELAT_1,RELAT_2,LATTICE3,ORDERS_2,XXREAL_0,TREES_2,WAYBEL_0,YELLOW_0,LATTICES,EQREL_1,ORDINAL2,ZFMISC_1,TARSKI,STRUCT_0,MCART_1,SEQM_3,REWRITE1,FINSET_1,WELLORD1,CAT_1,YELLOW_2,FINSUB_1,WELLORD2,YELLOW_1,CARD_FIL,LATTICE2,WAYBEL_1,WAYBEL_2,CARD_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSUB_1,RELAT_1,FUNCT_1,RELSET_1,TOLER_1,FINSET_1,PARTFUN1,BINOP_1,FUNCT_2,DOMAIN_1,STRUCT_0,ORDERS_2,ORDERS_3,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,WAYBEL_1,YELLOW_3,YELLOW_4,CKB28,CKB29;
definitions WAYBEL_1,YELLOW_0,LATTICE3,ORDERS_3,TARSKI,WAYBEL_0,XBOOLE_0,WELLORD1,BINOP_1,RELAT_1,STRUCT_0,CKB28,CKB29;
theorems FINSUB_1,FUNCT_1,FUNCT_2,LATTICE3,MCART_1,ORDERS_2,ORDERS_3,RELAT_1,STRUCT_0,TARSKI,WAYBEL_0,YELLOW_0,ZFMISC_1,YELLOW_1,YELLOW_2,WAYBEL_1,YELLOW_3,YELLOW_4,FUNCT_5,TEX_1,XBOOLE_1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30;
schemes FINSET_1,YELLOW_3,FUNCT_2,CKB24;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FINSET_1,FINSUB_1,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,WAYBEL_1,YELLOW_3,YELLOW_4,CARD_1,ORDINAL1,ORDERS_2,RELSET_1,CKB1,CKB2,CKB3,CKB14,CKB19,CKB20;
constructors DOMAIN_1,FINSUB_1,TOLER_1,ORDERS_3,WAYBEL_1,YELLOW_3,YELLOW_4,RELSET_1,CKB28,CKB29;
requirements SUBSET,BOOLE,NUMERALS;
begin
registration
let L being  complete  antisymmetric non  empty  reflexive RelStr;
let J being set;
let f being (Function of J,(the carrier of L));
cluster ( FinSups f ) ->  monotone;
coherence
proof
let x being (Element of ( FinSups f ));
let y being (Element of ( FinSups f ));
assume that
A1: x <= y;
consider g being (Function of ( Fin J ),(the carrier of L)) such that A2: (for x being (Element of ( Fin J )) holds (( g . x ) = ( sup ( f .: x ) ) & ( FinSups f ) = NetStr (# ( Fin J ),( RelIncl ( Fin J ) ),g #))) by CKB29:def 1;
( g . x ) = ( sup ( f .: x ) ) by A2;
then reconsider fx = ( g . x ) as (Element of L);
A3: ( InclPoset ( Fin J ) ) = RelStr (# ( Fin J ),( RelIncl ( Fin J ) ) #) by YELLOW_1:def 1;
then reconsider x1 = x,y1 = y as (Element of ( InclPoset ( Fin J ) )) by A2;
A4: ( ex_sup_of ( f .: x ),L &  ex_sup_of ( f .: y ),L) by YELLOW_0:17;
x1 <= y1 by A1,A2,A3,YELLOW_0:1;
then x c= y by YELLOW_1:3;
then ( sup ( f .: x ) ) <= ( sup ( f .: y ) ) by A4,RELAT_1:123,YELLOW_0:34;
then A5: fx <= ( sup ( f .: y ) ) by A2;
let a being (Element of L);
let b being (Element of L);
assume (a = ( ( netmap (( FinSups f ),L) ) . x ) & b = ( ( netmap (( FinSups f ),L) ) . y ));
hence a <= b by A2,A5;
end;
end;
