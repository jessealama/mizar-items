environ
vocabularies XBOOLE_0,RELAT_2,ALTCAT_1,ALTCAT_2,MSUALG_6,FUNCTOR0,RELAT_1,FUNCT_2,FUNCT_1,SUBSET_1,FUNCT_3,ZFMISC_1,STRUCT_0,TARSKI,MEMBER_1,MSUALG_3,ENS_1,CAT_1,PBOOLE,REALSET1,PZFMISC1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PBOOLE,PARTFUN1,FUNCT_2,BINOP_1,REALSET1,PZFMISC1,STRUCT_0,MSUALG_3,ALTCAT_1,ALTCAT_2,FUNCT_3,FUNCTOR0;
definitions TARSKI,PBOOLE,MSUALG_3,ALTCAT_2,FUNCTOR0,PZFMISC1,BINOP_1,REALSET1;
theorems ALTCAT_1,ALTCAT_2,FUNCTOR0,FUNCT_1,FUNCT_2,ZFMISC_1,PBOOLE,RELAT_1,MSUALG_3,XBOOLE_1,PZFMISC1,PARTFUN1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,PBOOLE,STRUCT_0,ALTCAT_2,FUNCTOR0,RELSET_1,CKB1,CKB2,CKB3,CKB4;
constructors REALSET1,PZFMISC1,MSUALG_3,FUNCTOR0,RELSET_1;
requirements SUBSET,BOOLE;
begin
theorem
(for C1,C2 being non empty AltCatStr holds (for F being  Covariant FunctorStr over C1,C2 holds (F is  full iff (for o1,o2 being (object of C1) holds ( Morph-Map (F,o1,o2) ) is  onto))))
proof
let C1 being non empty AltCatStr,C2 being non empty AltCatStr;
let F being  Covariant FunctorStr over C1,C2;
set I = [: (the carrier of C1),(the carrier of C1) :];
hereby
assume F is  full;
then consider f being (ManySortedFunction of (the Arrows of C1),( (the Arrows of C2) * (the ObjectMap of F) )) such that A1: f = (the MorphMap of F) and A2: f is  "onto" by FUNCTOR0:def 32;
let o1 being (object of C1),o2 being (object of C1);
A3: [ o1,o2 ] in I by ZFMISC_1:87;
then A4: [ o1,o2 ] in ( dom (the ObjectMap of F) ) by FUNCT_2:def 1;
( rng ( f . [ o1,o2 ] ) ) = ( ( (the Arrows of C2) * (the ObjectMap of F) ) . [ o1,o2 ] ) by A2,A3,MSUALG_3:def 3;
then ( rng ( Morph-Map (F,o1,o2) ) ) = ( (the Arrows of C2) . ( (the ObjectMap of F) . (o1,o2) ) ) by A1,A4,FUNCT_1:13
.= ( (the Arrows of C2) . (( F . o1 ),( F . o2 )) ) by FUNCTOR0:22
.= <^ ( F . o1 ),( F . o2 ) ^> by ALTCAT_1:def 1;
hence ( Morph-Map (F,o1,o2) ) is  onto by FUNCT_2:def 3;
end;
(ex I29 being non empty set st (ex B9 being (ManySortedSet of I29) st (ex f9 being (Function of I,I29) st (((the ObjectMap of F) = f9 & (the Arrows of C2) = B9) & (the MorphMap of F) is (ManySortedFunction of (the Arrows of C1),( B9 * f9 )))))) by FUNCTOR0:def 3;
then reconsider f = (the MorphMap of F) as (ManySortedFunction of (the Arrows of C1),( (the Arrows of C2) * (the ObjectMap of F) ));
assume A5: (for o1,o2 being (object of C1) holds ( Morph-Map (F,o1,o2) ) is  onto);
f is  "onto"
proof
let i being set;
assume i in I;
then consider o1 being set,o2 being set such that A6: (o1 in (the carrier of C1) & o2 in (the carrier of C1)) and A7: i = [ o1,o2 ] by ZFMISC_1:84;
reconsider o1,o2 as (object of C1) by A6;
[ o1,o2 ] in I by ZFMISC_1:87;
then A8: [ o1,o2 ] in ( dom (the ObjectMap of F) ) by FUNCT_2:def 1;
( Morph-Map (F,o1,o2) ) is  onto by A5;
then ( rng ( Morph-Map (F,o1,o2) ) ) = <^ ( F . o1 ),( F . o2 ) ^> by FUNCT_2:def 3
.= ( (the Arrows of C2) . (( F . o1 ),( F . o2 )) ) by ALTCAT_1:def 1
.= ( (the Arrows of C2) . ( (the ObjectMap of F) . (o1,o2) ) ) by FUNCTOR0:22
.= ( ( (the Arrows of C2) * (the ObjectMap of F) ) . (o1,o2) ) by A8,FUNCT_1:13;
hence thesis by A7;
end;
hence (ex f being (ManySortedFunction of (the Arrows of C1),( (the Arrows of C2) * (the ObjectMap of F) )) st (f = (the MorphMap of F) & f is  "onto"));
end;
