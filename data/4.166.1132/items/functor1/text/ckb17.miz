environ
vocabularies XBOOLE_0,RELAT_2,ALTCAT_1,ALTCAT_2,MSUALG_6,FUNCTOR0,RELAT_1,FUNCT_2,FUNCT_1,SUBSET_1,FUNCT_3,ZFMISC_1,STRUCT_0,TARSKI,MEMBER_1,MSUALG_3,ENS_1,CAT_1,PBOOLE,REALSET1,PZFMISC1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PBOOLE,PARTFUN1,FUNCT_2,BINOP_1,REALSET1,PZFMISC1,STRUCT_0,MSUALG_3,ALTCAT_1,ALTCAT_2,FUNCT_3,FUNCTOR0;
definitions TARSKI,PBOOLE,MSUALG_3,ALTCAT_2,FUNCTOR0,PZFMISC1,BINOP_1,REALSET1;
theorems ALTCAT_1,ALTCAT_2,FUNCTOR0,FUNCT_1,FUNCT_2,ZFMISC_1,PBOOLE,RELAT_1,MSUALG_3,XBOOLE_1,PZFMISC1,PARTFUN1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,PBOOLE,STRUCT_0,ALTCAT_2,FUNCTOR0,RELSET_1,CKB1,CKB2,CKB3,CKB4;
constructors REALSET1,PZFMISC1,MSUALG_3,FUNCTOR0,RELSET_1;
requirements SUBSET,BOOLE;
begin
theorem
(for A,I being non  empty  reflexive AltCatStr holds (for B being non  empty  reflexive (SubCatStr of A) holds (for C being non  empty (SubCatStr of A) holds (for D being non  empty (SubCatStr of B) holds (C = D implies (for F being FunctorStr over A,I holds ( F | C ) = ( ( F | B ) | D )))))))
proof
let A being non  empty  reflexive AltCatStr;
let I being non  empty  reflexive AltCatStr;
let B being non  empty  reflexive (SubCatStr of A);
let C being non  empty (SubCatStr of A);
let D being non  empty (SubCatStr of B);
assume that
A1: C = D;
let F being FunctorStr over A,I;
thus ( F | C ) = ( F * ( ( incl B ) * ( incl D ) ) ) by A1,CKB8:1
.= ( ( F | B ) | D ) by FUNCTOR0:32;
end;
