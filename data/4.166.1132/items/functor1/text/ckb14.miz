environ
vocabularies XBOOLE_0,RELAT_2,ALTCAT_1,ALTCAT_2,MSUALG_6,FUNCTOR0,RELAT_1,FUNCT_2,FUNCT_1,SUBSET_1,FUNCT_3,ZFMISC_1,STRUCT_0,TARSKI,MEMBER_1,MSUALG_3,ENS_1,CAT_1,PBOOLE,REALSET1,PZFMISC1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PBOOLE,PARTFUN1,FUNCT_2,BINOP_1,REALSET1,PZFMISC1,STRUCT_0,MSUALG_3,ALTCAT_1,ALTCAT_2,FUNCT_3,FUNCTOR0;
definitions TARSKI,PBOOLE,MSUALG_3,ALTCAT_2,FUNCTOR0,PZFMISC1,BINOP_1,REALSET1;
theorems ALTCAT_1,ALTCAT_2,FUNCTOR0,FUNCT_1,FUNCT_2,ZFMISC_1,PBOOLE,RELAT_1,MSUALG_3,XBOOLE_1,PZFMISC1,PARTFUN1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,PBOOLE,STRUCT_0,ALTCAT_2,FUNCTOR0,RELSET_1,CKB1,CKB2,CKB3,CKB4;
constructors REALSET1,PZFMISC1,MSUALG_3,FUNCTOR0,RELSET_1;
requirements SUBSET,BOOLE;
begin
theorem
Th11: (for C1 being non empty AltGraph holds (for C2,C3 being non empty  reflexive AltGraph holds (for F being  feasible FunctorStr over C1,C2 holds (for G being FunctorStr over C2,C3 holds ((F is  injective & G is  injective) implies ( G * F ) is  injective)))))
proof
let C1 being non empty AltGraph;
let C2 being non empty  reflexive AltGraph,C3 being non empty  reflexive AltGraph;
let F being  feasible FunctorStr over C1,C2;
let G being FunctorStr over C2,C3;
assume A1: (F is  injective & G is  injective);
then (F is  faithful & G is  faithful) by FUNCTOR0:def 33;
then A2: ( G * F ) is  faithful by CKB11:1;
(F is  one-to-one & G is  one-to-one) by A1,FUNCTOR0:def 33;
then ( G * F ) is  one-to-one by CKB10:1;
hence thesis by A2,FUNCTOR0:def 33;
end;
