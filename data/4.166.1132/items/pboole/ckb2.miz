environ
vocabularies FUNCT_1,RELAT_1,SETFAM_1,XBOOLE_0,SUBSET_1,PARTFUN1,FUNCOP_1,TARSKI,CARD_3,NUMBERS,FINSEQ_2,FINSEQ_1,FUNCT_2,ZFMISC_1,MEMBER_1,FUNCT_4,PBOOLE,VALUED_1,NAT_1,ARYTM_3,ORDINAL1;
notations TARSKI,ZFMISC_1,XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,FUNCT_2,FUNCT_4,FUNCOP_1;
definitions TARSKI,XBOOLE_0,RELAT_1,FUNCT_1,SETFAM_1,FUNCOP_1;
theorems TARSKI,FUNCOP_1,FUNCT_1,RELAT_1,XBOOLE_0,XBOOLE_1,FUNCT_2,PARTFUN1,FUNCT_4,ZFMISC_1,GRFUNC_1,CKB1;
schemes FUNCT_1,CLASSES1,XBOOLE_0,FUNCT_2;
registrations XBOOLE_0,FUNCT_1,ORDINAL1,RELSET_1,FUNCOP_1,FUNCT_4;
constructors SETFAM_1,FUNCOP_1,ORDINAL1,RELSET_1,PARTFUN1,FUNCT_4;
requirements BOOLE,SUBSET;
begin
reserve i for set;
reserve e for set;
theorem
(for f being Function holds (f is  empty-yielding iff (f = ( {} ) or ( rng f ) = { ( {} ) })))
proof
let f being Function;
hereby
assume that
A1: f is  empty-yielding
and
A2: f <> ( {} );
thus ( rng f ) = { ( {} ) }
proof
hereby
let i;
assume i in ( rng f );
then (ex e st (e in ( dom f ) & ( f . e ) = i)) by FUNCT_1:def 3;
then i = ( {} ) by A1,FUNCT_1:def 8;
hence i in { ( {} ) } by TARSKI:def 1;
end;
set e = the (Element of ( dom f ));
let i;
assume i in { ( {} ) };
then A3: i = ( {} ) by TARSKI:def 1;
A4: ( dom f ) <> ( {} ) by A2,RELAT_1:41;
then ( f . e ) is  empty by A1,FUNCT_1:def 8;
hence thesis by A4,A3,FUNCT_1:def 3;
end;

end;
assume A5: (f = ( {} ) or ( rng f ) = { ( {} ) });
per cases  by A5;
suppose f = ( {} );

hence (for i holds (i in ( dom f ) implies ( f . i ) is  empty)) by RELAT_1:38;
end;
suppose A6: ( rng f ) = { ( {} ) };

let i;
assume i in ( dom f );
then ( f . i ) in ( rng f ) by FUNCT_1:def 3;
hence thesis by A6,TARSKI:def 1;
end;
end;
