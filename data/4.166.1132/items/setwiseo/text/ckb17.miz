environ
vocabularies TARSKI,XBOOLE_0,FUNCT_1,RELAT_1,SUBSET_1,FINSUB_1,BINOP_1,FINSET_1,FUNCOP_1,SETWISEO;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,RELAT_1,FUNCT_1,FINSUB_1,RELSET_1,FINSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,CKB16;
definitions BINOP_1,TARSKI,RELAT_1,CKB16;
theorems FINSUB_1,ZFMISC_1,SUBSET_1,BINOP_1,TARSKI,FUNCT_1,FUNCT_2,FUNCOP_1,ENUMSET1,RELAT_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB16;
schemes FINSET_1,FUNCT_2,BINOP_1,SUBSET_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FUNCT_2,FINSET_1,FINSUB_1,CKB15;
constructors ENUMSET1,PARTFUN1,BINOP_1,FUNCOP_1,FINSET_1,FINSUB_1,RELSET_1,CKB16;
requirements BOOLE,SUBSET;
begin
scheme FinSubFuncEx { A() -> non empty set,B() -> (Element of ( Fin A() )),P[set,set] } : (ex f being (Function of A(),( Fin A() )) st (for b,a being (Element of A()) holds (a in ( f . b ) iff (a in B() & P[ a,b ]))))
proof
defpred X[ set,(Element of ( Fin A() )) ]
 means
(for a being (Element of A()) holds (a in $2 iff (a in B() & P[ a,$1 ])));
A1:now
reconsider B = B() as (Subset of A()) by FINSUB_1:def 5;
let x being (Element of A());
defpred X[ set ]
 means
($1 in B() & P[ $1,x ]);
consider y being (Subset of A()) such that A2: (for a being (Element of A()) holds (a in y iff X[ a ])) from SUBSET_1:sch 3;
(for x being (Element of A()) holds (x in y implies x in B)) by A2;
then y c= B() by SUBSET_1:2;
then reconsider y as (Element of ( Fin A() )) by FINSUB_1:def 5;
take y9 = y;
thus X[ x,y9 ] by A2;
end;
thus (ex f being (Function of A(),( Fin A() )) st (for x being (Element of A()) holds X[ x,( f . x ) ])) from FUNCT_2:sch 3(A1);
end;
