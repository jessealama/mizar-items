environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,VECTSP_1,SUBSET_1,MATRIX_2,FUNCT_2,FINSEQ_1,FUNCT_1,ARYTM_3,SGRAPH1,XXREAL_0,TARSKI,CARD_1,FINSET_1,ORDINAL1,RELAT_1,ALGSTR_0,SETWISEO,BINOP_1,STRUCT_0,GROUP_1,ARYTM_1,FINSUB_1,INT_1,SUPINF_2,ABSVALUE,FINSEQ_2,CARD_3,ORDINAL4,FINSOP_1,ABIAN,MATRIX_1,TREES_1,ZFMISC_1,INCSP_1,AFINSQ_1,PARTFUN1,MATRIX_3,RLVECT_1,RVSUM_1,FVSUM_1,FUNCT_5,FUNCT_4,MATRIX11;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,BINOP_1,STRUCT_0,ALGSTR_0,NAT_D,RLVECT_1,GROUP_1,VECTSP_1,SETWISEO,SETWOP_2,FINSEQ_2,FINSEQOP,MATRIX_1,FINSUB_1,MATRIX_2,NAT_1,FVSUM_1,CAT_2,FINSOP_1,GROUP_4,MATRIX_3,CARD_1,FINSEQ_7,FUNCT_4,ORDINAL1,SGRAPH1,MATRIX_6,CKB1,CKB9,CKB18;
definitions BINOP_1,FINSEQ_2,FINSEQ_1,TARSKI,XBOOLE_0,MATRIX_1,MATRIX_3,FVSUM_1,RELAT_1,ALGSTR_0,CKB9,CKB18;
theorems FINSEQ_1,FINSEQ_2,TARSKI,FUNCT_2,NAT_1,BINOP_1,FUNCT_1,SETWISEO,VECTSP_1,ZFMISC_1,FVSUM_1,SETWOP_2,MATRIX_1,MATRIX_2,FUNCOP_1,FINSUB_1,FINSEQ_3,RLVECT_1,RELAT_1,FINSOP_1,XBOOLE_0,XBOOLE_1,GROUP_1,MATRIX_3,FINSEQ_5,FINSET_1,GROUP_4,XREAL_1,MATRIX_7,ORDINAL1,MATRIX_4,CARD_1,CARD_2,MATRIX_9,STIRL2_1,RADIX_1,REWRITE1,FINSEQ_7,SGRAPH1,WELLORD2,FRAENKEL,FUNCT_5,FUNCT_4,NAT_D,XXREAL_0,PARTFUN1,CKB2,CKB3,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes FUNCT_2,NAT_1,FINSEQ_1,FINSEQ_2,MATRIX_1,BINOP_1,FUNCT_1,SETWISEO;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,FUNCT_2,FINSET_1,FINSUB_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,STRUCT_0,GROUP_1,VECTSP_1,MATRIX_2,FVSUM_1,CARD_1,RELSET_1,FINSEQ_2,CKB5,CKB6,CKB7,CKB8;
constructors RELAT_2,WELLORD2,SETWISEO,XXREAL_0,NAT_1,NAT_D,FINSOP_1,SETWOP_2,FINSEQ_7,CAT_2,ALGSTR_1,GROUP_4,FVSUM_1,SGRAPH1,MATRIX_6,MATRIX_7,RELSET_1,CKB9,CKB18;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve x for set;
reserve y for set;
reserve i for Nat;
reserve j for Nat;
reserve k for Nat;
reserve n for Nat;
theorem
Th16: (for i holds (for j holds (for n holds (((i < j & i in ( Seg n )) & j in ( Seg n )) implies (ex tr being (Element of ( Permutations n )) st (tr is  being_transposition & ( tr . i ) = j))))))
proof
let i;
let j;
let n;
assume that
A1: i < j
and
A2: i in ( Seg n )
and
A3: j in ( Seg n );
defpred P[ set,set ]
 means
(for k holds ((k in ( Seg n ) & k = $1) implies (((k = i implies $2 = j) & (k = j implies $2 = i)) & ((k <> i & k <> j) implies $2 = k))));
A4: (for x holds (x in ( Seg n ) implies (ex y being set st (y in ( Seg n ) & P[ x,y ]))))
proof
let x;
assume that
A5: x in ( Seg n );
reconsider m = x as Nat by A5;
now
per cases ;
suppose m = i;

then P[ x,j ];
hence thesis by A3;
end;
suppose m = j;

then P[ x,i ];
hence thesis by A2;
end;
suppose (m <> i & m <> j);

then P[ x,x ];
hence thesis by A5;
end;
end;
hence thesis;
end;
consider f being (Function of ( Seg n ),( Seg n )) such that A6: (for x holds (x in ( Seg n ) implies P[ x,( f . x ) ])) from FUNCT_2:sch 1(A4);
(for x1,x2 being set holds (((x1 in ( Seg n ) & x2 in ( Seg n )) & ( f . x1 ) = ( f . x2 )) implies x1 = x2))
proof
let x1 being set;
let x2 being set;
assume that
A7: x1 in ( Seg n )
and
A8: x2 in ( Seg n )
and
A9: ( f . x1 ) = ( f . x2 );
reconsider k1 = x1 as Nat by A7;
((x1 = i or x1 = j) or (x1 <> i & x1 <> j));
then A10: (((x1 = i & ( f . x1 ) = j) or (x1 = j & ( f . x1 ) = i)) or ((x1 <> i & x1 <> j) & ( f . x1 ) = k1)) by A6,A7;
((x2 = i or x2 = j) or (x2 <> i & x2 <> j));
hence thesis by A6,A8,A9,A10;
end;
then A11: f is  one-to-one by A2,FUNCT_2:19;
(for y holds (y in ( Seg n ) implies (ex x st (x in ( Seg n ) & y = ( f . x )))))
proof
let y;
assume that
A12: y in ( Seg n );
reconsider k = y as Nat by A12;
(((k = i & ( f . j ) = i) or (k = j & ( f . i ) = j)) or ((k <> i & k <> j) & ( f . k ) = k)) by A2,A3,A6,A12;
hence thesis by A2,A3,A12;
end;
then ( rng f ) = ( Seg n ) by FUNCT_2:10;
then f is  onto by FUNCT_2:def 3;
then reconsider P = f as (Element of ( Permutations n )) by A11,MATRIX_2:def 9;
A13: ( P . j ) = i by A3,A6;
( dom P ) = ( Seg n ) by A2,FUNCT_2:def 1;
then A14: (for k holds (((k <> i & k <> j) & k in ( dom P )) implies ( P . k ) = k)) by A6;
take P;
A15: i in ( dom P ) by A2,FUNCT_2:def 1;
A16: j in ( dom P ) by A3,FUNCT_2:def 1;
( P . i ) = j by A2,A6;
hence thesis by A1,A15,A16,A13,A14,MATRIX_2:def 11;
end;
