environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,VECTSP_1,SUBSET_1,MATRIX_2,FUNCT_2,FINSEQ_1,FUNCT_1,ARYTM_3,SGRAPH1,XXREAL_0,TARSKI,CARD_1,FINSET_1,ORDINAL1,RELAT_1,ALGSTR_0,SETWISEO,BINOP_1,STRUCT_0,GROUP_1,ARYTM_1,FINSUB_1,INT_1,SUPINF_2,ABSVALUE,FINSEQ_2,CARD_3,ORDINAL4,FINSOP_1,ABIAN,MATRIX_1,TREES_1,ZFMISC_1,INCSP_1,AFINSQ_1,PARTFUN1,MATRIX_3,RLVECT_1,RVSUM_1,FVSUM_1,FUNCT_5,FUNCT_4,MATRIX11;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,BINOP_1,STRUCT_0,ALGSTR_0,NAT_D,RLVECT_1,GROUP_1,VECTSP_1,SETWISEO,SETWOP_2,FINSEQ_2,FINSEQOP,MATRIX_1,FINSUB_1,MATRIX_2,NAT_1,FVSUM_1,CAT_2,FINSOP_1,GROUP_4,MATRIX_3,CARD_1,FINSEQ_7,FUNCT_4,ORDINAL1,SGRAPH1,MATRIX_6,CKB1,CKB9,CKB18,CKB39,CKB40;
definitions BINOP_1,FINSEQ_2,FINSEQ_1,TARSKI,XBOOLE_0,MATRIX_1,MATRIX_3,FVSUM_1,RELAT_1,ALGSTR_0,CKB9,CKB18,CKB39;
theorems FINSEQ_1,FINSEQ_2,TARSKI,FUNCT_2,NAT_1,BINOP_1,FUNCT_1,SETWISEO,VECTSP_1,ZFMISC_1,FVSUM_1,SETWOP_2,MATRIX_1,MATRIX_2,FUNCOP_1,FINSUB_1,FINSEQ_3,RLVECT_1,RELAT_1,FINSOP_1,XBOOLE_0,XBOOLE_1,GROUP_1,MATRIX_3,FINSEQ_5,FINSET_1,GROUP_4,XREAL_1,MATRIX_7,ORDINAL1,MATRIX_4,CARD_1,CARD_2,MATRIX_9,STIRL2_1,RADIX_1,REWRITE1,FINSEQ_7,SGRAPH1,WELLORD2,FRAENKEL,FUNCT_5,FUNCT_4,NAT_D,XXREAL_0,PARTFUN1,CKB2,CKB3,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53;
schemes FUNCT_2,NAT_1,FINSEQ_1,FINSEQ_2,MATRIX_1,BINOP_1,FUNCT_1,SETWISEO;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,FUNCT_2,FINSET_1,FINSUB_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,STRUCT_0,GROUP_1,VECTSP_1,MATRIX_2,FVSUM_1,CARD_1,RELSET_1,FINSEQ_2,CKB5,CKB6,CKB7,CKB8,CKB38;
constructors RELAT_2,WELLORD2,SETWISEO,XXREAL_0,NAT_1,NAT_D,FINSOP_1,SETWOP_2,FINSEQ_7,CAT_2,ALGSTR_1,GROUP_4,FVSUM_1,SGRAPH1,MATRIX_6,MATRIX_7,RELSET_1,CKB9,CKB18,CKB39;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve i for Nat;
reserve j for Nat;
reserve k for Nat;
reserve n for Nat;
reserve m for Nat;
reserve D for non  empty set;
reserve F for (Function of ( Seg n ),( Seg n ));
reserve M for (Matrix of n,m,D);
definition
let n;
let m;
let D;
let F being (Function of ( Seg n ),( Seg n ));
let M being (Matrix of n,m,D);
redefine func M * F -> (Matrix of n,m,D) means 
:Def4: ((( len it ) = ( len M ) & ( width it ) = ( width M )) & (for i holds (for j holds (for k holds (([ i,j ] in ( Indices M ) & ( F . i ) = k) implies ( it * (i,j) ) = ( M * (k,j) ))))));
compatibility
proof
reconsider Mf = ( M * F ) as (Matrix of n,m,D) by CKB53:1;
let Mp being (Matrix of n,m,D);
thus (Mp = ( M * F ) implies ((( len Mp ) = ( len M ) & ( width Mp ) = ( width M )) & (for i holds (for j holds (for k holds (([ i,j ] in ( Indices M ) & ( F . i ) = k) implies ( Mp * (i,j) ) = ( M * (k,j) )))))))
proof
A1: ( rng F ) c= ( Seg n ) by RELAT_1:def 19;
assume A2: Mp = ( M * F );
A3: ( len M ) = n by MATRIX_1:def 2;
A4: ( len Mp ) = n by MATRIX_1:def 2;
A5:now
per cases ;
case A6: n = ( 0 );
then ( width M ) = ( 0 ) by A3,MATRIX_1:def 3;
hence ( width M ) = ( width Mp ) by A4,A6,MATRIX_1:def 3;
end;
case A7: n > ( 0 );
then ( width M ) = m by A3,MATRIX_1:20;
hence ( width M ) = ( width Mp ) by A4,A7,MATRIX_1:20;
end;
end;
hence (( len Mp ) = ( len M ) & ( width Mp ) = ( width M )) by A3,MATRIX_1:def 2;
let i;
let j;
let k;
assume that
A8: [ i,j ] in ( Indices M )
and
A9: ( F . i ) = k;
( Indices M ) = [: ( Seg n ),( Seg ( width M ) ) :] by MATRIX_1:25;
then A10: i in ( Seg n ) by A8,ZFMISC_1:87;
then A11: ( Line (Mp,i) ) = ( Mp . i ) by MATRIX_2:8;
( dom F ) = ( Seg n ) by FUNCT_2:52;
then A12: ( F . i ) in ( rng F ) by A10,FUNCT_1:def 3;
( len Mp ) = n by MATRIX_1:25;
then ( dom Mp ) = ( Seg n ) by FINSEQ_1:def 3;
then ( Mp . i ) = ( M . k ) by A2,A9,A10,FUNCT_1:12;
then A13: ( Line (Mp,i) ) = ( Line (M,k) ) by A9,A12,A1,A11,MATRIX_2:8;
A14: j in ( Seg ( width M ) ) by A8,ZFMISC_1:87;
then ( ( Line (M,k) ) . j ) = ( M * (k,j) ) by MATRIX_1:def 7;
hence thesis by A5,A14,A13,MATRIX_1:def 7;
end;

assume that
A15: ( len Mp ) = ( len M )
and
A16: ( width Mp ) = ( width M );
assume A17: (for i holds (for j holds (for k holds (([ i,j ] in ( Indices M ) & ( F . i ) = k) implies ( Mp * (i,j) ) = ( M * (k,j) )))));
(for i holds (for j holds ([ i,j ] in ( Indices Mp ) implies ( Mp * (i,j) ) = ( Mf * (i,j) ))))
proof
A18: ( Indices Mp ) = ( Indices M ) by A15,A16,MATRIX_4:55;
let i;
let j;
assume that
A19: [ i,j ] in ( Indices Mp );
( Indices Mp ) = [: ( Seg n ),( Seg ( width M ) ) :] by A16,MATRIX_1:25;
then A20: i in ( Seg n ) by A19,ZFMISC_1:87;
then A21: ( Line (Mf,i) ) = ( Mf . i ) by MATRIX_2:8;
A22: ( rng F ) c= ( Seg n ) by RELAT_1:def 19;
( dom F ) = ( Seg n ) by FUNCT_2:52;
then A23: ( F . i ) in ( rng F ) by A20,FUNCT_1:def 3;
then ( F . i ) in ( Seg n ) by A22;
then reconsider k = ( F . i ) as (Element of ( NAT ));
( len Mf ) = n by MATRIX_1:25;
then ( dom Mf ) = ( Seg n ) by FINSEQ_1:def 3;
then ( Mf . i ) = ( M . k ) by A20,FUNCT_1:12;
then A24: ( Line (Mf,i) ) = ( Line (M,k) ) by A23,A22,A21,MATRIX_2:8;
A25: ( width M ) = ( len ( Line (M,k) ) ) by MATRIX_1:def 7;
A26: ( width Mf ) = ( len ( Line (Mf,i) ) ) by MATRIX_1:def 7;
A27: j in ( Seg ( width M ) ) by A16,A19,ZFMISC_1:87;
then ( ( Line (M,k) ) . j ) = ( M * (k,j) ) by MATRIX_1:def 7;
then ( Mf * (i,j) ) = ( M * (k,j) ) by A27,A24,A25,A26,MATRIX_1:def 7;
hence thesis by A17,A19,A18;
end;
hence thesis by MATRIX_1:27;
end;
correctness by CKB53:1;
end;
