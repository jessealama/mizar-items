environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,VECTSP_1,SUBSET_1,MATRIX_2,FUNCT_2,FINSEQ_1,FUNCT_1,ARYTM_3,SGRAPH1,XXREAL_0,TARSKI,CARD_1,FINSET_1,ORDINAL1,RELAT_1,ALGSTR_0,SETWISEO,BINOP_1,STRUCT_0,GROUP_1,ARYTM_1,FINSUB_1,INT_1,SUPINF_2,ABSVALUE,FINSEQ_2,CARD_3,ORDINAL4,FINSOP_1,ABIAN,MATRIX_1,TREES_1,ZFMISC_1,INCSP_1,AFINSQ_1,PARTFUN1,MATRIX_3,RLVECT_1,RVSUM_1,FVSUM_1,FUNCT_5,FUNCT_4,MATRIX11;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,BINOP_1,STRUCT_0,ALGSTR_0,NAT_D,RLVECT_1,GROUP_1,VECTSP_1,SETWISEO,SETWOP_2,FINSEQ_2,FINSEQOP,MATRIX_1,FINSUB_1,MATRIX_2,NAT_1,FVSUM_1,CAT_2,FINSOP_1,GROUP_4,MATRIX_3,CARD_1,FINSEQ_7,FUNCT_4,ORDINAL1,SGRAPH1,MATRIX_6,CKB1,CKB9,CKB18;
definitions BINOP_1,FINSEQ_2,FINSEQ_1,TARSKI,XBOOLE_0,MATRIX_1,MATRIX_3,FVSUM_1,RELAT_1,ALGSTR_0,CKB9,CKB18;
theorems FINSEQ_1,FINSEQ_2,TARSKI,FUNCT_2,NAT_1,BINOP_1,FUNCT_1,SETWISEO,VECTSP_1,ZFMISC_1,FVSUM_1,SETWOP_2,MATRIX_1,MATRIX_2,FUNCOP_1,FINSUB_1,FINSEQ_3,RLVECT_1,RELAT_1,FINSOP_1,XBOOLE_0,XBOOLE_1,GROUP_1,MATRIX_3,FINSEQ_5,FINSET_1,GROUP_4,XREAL_1,MATRIX_7,ORDINAL1,MATRIX_4,CARD_1,CARD_2,MATRIX_9,STIRL2_1,RADIX_1,REWRITE1,FINSEQ_7,SGRAPH1,WELLORD2,FRAENKEL,FUNCT_5,FUNCT_4,NAT_D,XXREAL_0,PARTFUN1,CKB2,CKB3,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes FUNCT_2,NAT_1,FINSEQ_1,FINSEQ_2,MATRIX_1,BINOP_1,FUNCT_1,SETWISEO;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,FUNCT_2,FINSET_1,FINSUB_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,STRUCT_0,GROUP_1,VECTSP_1,MATRIX_2,FVSUM_1,CARD_1,RELSET_1,FINSEQ_2,CKB5,CKB6,CKB7,CKB8;
constructors RELAT_2,WELLORD2,SETWISEO,XXREAL_0,NAT_1,NAT_D,FINSOP_1,SETWOP_2,FINSEQ_7,CAT_2,ALGSTR_1,GROUP_4,FVSUM_1,SGRAPH1,MATRIX_6,MATRIX_7,RELSET_1,CKB9,CKB18;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve x for set;
reserve i for Nat;
reserve j for Nat;
reserve k for Nat;
reserve m for Nat;
theorem
Th20: (for tr being (Element of ( Permutations k )) holds (tr is  being_transposition implies (( tr * tr ) = ( idseq k ) & tr = ( tr " ))))
proof
set I = ( idseq k );
let tr being (Element of ( Permutations k ));
assume tr is  being_transposition;
then consider i,j such that i in ( dom tr ) and j in ( dom tr ) and i <> j and A1: ( tr . i ) = j and A2: ( tr . j ) = i and A3: (for m holds (((m <> i & m <> j) & m in ( dom tr )) implies ( tr . m ) = m)) by MATRIX_2:def 11;
reconsider TR = tr as (Permutation of ( Seg k )) by MATRIX_2:def 9;
set TT = ( TR * TR );
A4: ( dom TT ) = ( Seg k ) by FUNCT_2:52;
A5: ( dom TR ) = ( Seg k ) by FUNCT_2:52;
A6: (for x holds (x in ( dom TT ) implies ( TT . x ) = ( I . x )))
proof
let x;
assume that
A7: x in ( dom TT );
reconsider m = x as Nat by A4,A7;
now
per cases ;
suppose (m = i or m = j);

hence ( TT . m ) = m by A1,A2,A7,FUNCT_1:12;
end;
suppose (m <> i & m <> j);

then ( tr . m ) = m by A3,A4,A5,A7;
hence ( TT . m ) = m by A7,FUNCT_1:12;
end;
end;
hence thesis by A4,A7,FUNCT_1:18;
end;
A8: ( dom I ) = ( Seg k ) by FUNCT_2:52;
hence ( tr * tr ) = ( idseq k ) by A6,FUNCT_1:2,FUNCT_2:52;
( rng TR ) = ( Seg k ) by FUNCT_2:def 3;
hence thesis by A4,A8,A5,A6,FUNCT_1:2,FUNCT_1:42;
end;
