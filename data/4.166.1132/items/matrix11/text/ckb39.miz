environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,VECTSP_1,SUBSET_1,MATRIX_2,FUNCT_2,FINSEQ_1,FUNCT_1,ARYTM_3,SGRAPH1,XXREAL_0,TARSKI,CARD_1,FINSET_1,ORDINAL1,RELAT_1,ALGSTR_0,SETWISEO,BINOP_1,STRUCT_0,GROUP_1,ARYTM_1,FINSUB_1,INT_1,SUPINF_2,ABSVALUE,FINSEQ_2,CARD_3,ORDINAL4,FINSOP_1,ABIAN,MATRIX_1,TREES_1,ZFMISC_1,INCSP_1,AFINSQ_1,PARTFUN1,MATRIX_3,RLVECT_1,RVSUM_1,FVSUM_1,FUNCT_5,FUNCT_4,MATRIX11;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,BINOP_1,STRUCT_0,ALGSTR_0,NAT_D,RLVECT_1,GROUP_1,VECTSP_1,SETWISEO,SETWOP_2,FINSEQ_2,FINSEQOP,MATRIX_1,FINSUB_1,MATRIX_2,NAT_1,FVSUM_1,CAT_2,FINSOP_1,GROUP_4,MATRIX_3,CARD_1,FINSEQ_7,FUNCT_4,ORDINAL1,SGRAPH1,MATRIX_6,CKB1,CKB9,CKB18;
definitions BINOP_1,FINSEQ_2,FINSEQ_1,TARSKI,XBOOLE_0,MATRIX_1,MATRIX_3,FVSUM_1,RELAT_1,ALGSTR_0,CKB9,CKB18;
theorems FINSEQ_1,FINSEQ_2,TARSKI,FUNCT_2,NAT_1,BINOP_1,FUNCT_1,SETWISEO,VECTSP_1,ZFMISC_1,FVSUM_1,SETWOP_2,MATRIX_1,MATRIX_2,FUNCOP_1,FINSUB_1,FINSEQ_3,RLVECT_1,RELAT_1,FINSOP_1,XBOOLE_0,XBOOLE_1,GROUP_1,MATRIX_3,FINSEQ_5,FINSET_1,GROUP_4,XREAL_1,MATRIX_7,ORDINAL1,MATRIX_4,CARD_1,CARD_2,MATRIX_9,STIRL2_1,RADIX_1,REWRITE1,FINSEQ_7,SGRAPH1,WELLORD2,FRAENKEL,FUNCT_5,FUNCT_4,NAT_D,XXREAL_0,PARTFUN1,CKB2,CKB3,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37;
schemes FUNCT_2,NAT_1,FINSEQ_1,FINSEQ_2,MATRIX_1,BINOP_1,FUNCT_1,SETWISEO;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,FUNCT_2,FINSET_1,FINSUB_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,STRUCT_0,GROUP_1,VECTSP_1,MATRIX_2,FVSUM_1,CARD_1,RELSET_1,FINSEQ_2,CKB5,CKB6,CKB7,CKB8,CKB38;
constructors RELAT_2,WELLORD2,SETWISEO,XXREAL_0,NAT_1,NAT_D,FINSOP_1,SETWOP_2,FINSEQ_7,CAT_2,ALGSTR_1,GROUP_4,FVSUM_1,SGRAPH1,MATRIX_6,MATRIX_7,RELSET_1,CKB9,CKB18;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve i for Nat;
reserve j for Nat;
reserve l for Nat;
reserve n for Nat;
reserve m for Nat;
reserve D for non empty set;
definition
let l;
let n;
let m;
let D;
let M being (Matrix of n,m,D);
let pD being (FinSequence of D);
func ReplaceLine (M,l,pD) -> (Matrix of n,m,D)
means
:Def3: ((( len it ) = ( len M ) & ( width it ) = ( width M )) & (for i holds (for j holds ([ i,j ] in ( Indices M ) implies ((i <> l implies ( it * (i,j) ) = ( M * (i,j) )) & (i = l implies ( it * (l,j) ) = ( pD . j ))))))) if ( len pD ) = ( width M ) otherwise it = M;
consistency;
existence
proof
thus (( len pD ) = ( width M ) implies (ex M1 being (Matrix of n,m,D) st ((( len M1 ) = ( len M ) & ( width M1 ) = ( width M )) & (for i holds (for j holds ([ i,j ] in ( Indices M ) implies ((i <> l implies ( M1 * (i,j) ) = ( M * (i,j) )) & (i = l implies ( M1 * (l,j) ) = ( pD . j )))))))))
proof
reconsider M9 = M as (Matrix of ( len M ),( width M ),D) by MATRIX_2:7;
reconsider n1 = n,m1 = m as (Element of ( NAT )) by ORDINAL1:def 12;
defpred P[ set,set,set ]
 means
(for i holds (for j holds ((i = $1 & j = $2) implies ((i <> l implies $3 = ( M * (i,j) )) & (i = l implies $3 = ( pD . j ))))));
assume A1: ( len pD ) = ( width M );
A2: (for i holds (for j holds ([ i,j ] in [: ( Seg n1 ),( Seg m1 ) :] implies (ex x being (Element of D) st P[ i,j,x ]))))
proof
let i;
let j;
assume that
A3: [ i,j ] in [: ( Seg n1 ),( Seg m1 ) :];
now
per cases ;
case A4: i = l;
A5: ( rng pD ) c= D by FINSEQ_1:def 4;
n1 <> ( 0 ) by A3,ZFMISC_1:87;
then ( len pD ) = m by A1,MATRIX_1:23;
then j in ( Seg ( len pD ) ) by A3,ZFMISC_1:87;
then j in ( dom pD ) by FINSEQ_1:def 3;
then A6: ( pD . j ) in ( rng pD ) by FUNCT_1:def 3;
P[ i,j,( pD . j ) ] by A4;
hence thesis by A6,A5;
end;
case i <> l;
then P[ i,j,( M * (i,j) ) ];
hence thesis;
end;
end;
hence thesis;
end;
consider M1 being (Matrix of n1,m1,D) such that A11: (for i holds (for j holds ([ i,j ] in ( Indices M1 ) implies P[ i,j,( M1 * (i,j) ) ]))) from MATRIX_1:sch 2(A2);
reconsider M1 as (Matrix of n,m,D);
take M1;
A12:now
per cases ;
suppose A13: n = ( 0 );

then ( len M1 ) = ( 0 ) by MATRIX_1:def 2;
then A14: ( width M1 ) = ( 0 ) by MATRIX_1:def 3;
( len M ) = ( 0 ) by A13,MATRIX_1:def 2;
hence (( len M ) = ( len M1 ) & ( width M1 ) = ( width M )) by A13,A14,MATRIX_1:def 2,MATRIX_1:def 3;
end;
suppose A15: n > ( 0 );

then A16: ( width M ) = m by MATRIX_1:23;
( len M ) = n by A15,MATRIX_1:23;
hence (( len M ) = ( len M1 ) & ( width M ) = ( width M1 )) by A15,A16,MATRIX_1:23;
end;
end;
( Indices M9 ) = ( Indices M1 ) by MATRIX_1:26;
hence thesis by A11,A12;
end;

thus thesis;
end;
uniqueness
proof
let M1 being (Matrix of n,m,D),M2 being (Matrix of n,m,D);
thus (((( len pD ) = ( width M ) & ((( len M1 ) = ( len M ) & ( width M1 ) = ( width M )) & (for i holds (for j holds ([ i,j ] in ( Indices M ) implies ((i <> l implies ( M1 * (i,j) ) = ( M * (i,j) )) & (i = l implies ( M1 * (l,j) ) = ( pD . j )))))))) & ((( len M2 ) = ( len M ) & ( width M2 ) = ( width M )) & (for i holds (for j holds ([ i,j ] in ( Indices M ) implies ((i <> l implies ( M2 * (i,j) ) = ( M * (i,j) )) & (i = l implies ( M2 * (l,j) ) = ( pD . j )))))))) implies M1 = M2)
proof
assume ( len pD ) = ( width M );
assume that
A17: ( len M1 ) = ( len M )
and
A18: ( width M1 ) = ( width M )
and
A19: (for i holds (for j holds ([ i,j ] in ( Indices M ) implies ((i <> l implies ( M1 * (i,j) ) = ( M * (i,j) )) & (i = l implies ( M1 * (l,j) ) = ( pD . j ))))));
assume that
( len M2 ) = ( len M )
and
( width M2 ) = ( width M )
and
A20: (for i holds (for j holds ([ i,j ] in ( Indices M ) implies ((i <> l implies ( M2 * (i,j) ) = ( M * (i,j) )) & (i = l implies ( M2 * (l,j) ) = ( pD . j ))))));
(for i holds (for j holds ([ i,j ] in ( Indices M1 ) implies ( M1 * (i,j) ) = ( M2 * (i,j) ))))
proof
let i;
let j;
assume [ i,j ] in ( Indices M1 );
then A21: [ i,j ] in ( Indices M ) by A17,A18,MATRIX_4:55;
then A22: (i = l implies ( M1 * (l,j) ) = ( pD . j )) by A19;
A23: (i <> l implies ( M2 * (i,j) ) = ( M * (i,j) )) by A20,A21;
(i <> l implies ( M1 * (i,j) ) = ( M * (i,j) )) by A19,A21;
hence thesis by A20,A21,A22,A23;
end;
hence thesis by MATRIX_1:27;
end;

thus thesis;
end;
end;
