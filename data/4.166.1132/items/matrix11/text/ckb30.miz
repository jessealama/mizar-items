environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,VECTSP_1,SUBSET_1,MATRIX_2,FUNCT_2,FINSEQ_1,FUNCT_1,ARYTM_3,SGRAPH1,XXREAL_0,TARSKI,CARD_1,FINSET_1,ORDINAL1,RELAT_1,ALGSTR_0,SETWISEO,BINOP_1,STRUCT_0,GROUP_1,ARYTM_1,FINSUB_1,INT_1,SUPINF_2,ABSVALUE,FINSEQ_2,CARD_3,ORDINAL4,FINSOP_1,ABIAN,MATRIX_1,TREES_1,ZFMISC_1,INCSP_1,AFINSQ_1,PARTFUN1,MATRIX_3,RLVECT_1,RVSUM_1,FVSUM_1,FUNCT_5,FUNCT_4,MATRIX11;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,BINOP_1,STRUCT_0,ALGSTR_0,NAT_D,RLVECT_1,GROUP_1,VECTSP_1,SETWISEO,SETWOP_2,FINSEQ_2,FINSEQOP,MATRIX_1,FINSUB_1,MATRIX_2,NAT_1,FVSUM_1,CAT_2,FINSOP_1,GROUP_4,MATRIX_3,CARD_1,FINSEQ_7,FUNCT_4,ORDINAL1,SGRAPH1,MATRIX_6,CKB1,CKB9,CKB18;
definitions BINOP_1,FINSEQ_2,FINSEQ_1,TARSKI,XBOOLE_0,MATRIX_1,MATRIX_3,FVSUM_1,RELAT_1,ALGSTR_0,CKB9,CKB18;
theorems FINSEQ_1,FINSEQ_2,TARSKI,FUNCT_2,NAT_1,BINOP_1,FUNCT_1,SETWISEO,VECTSP_1,ZFMISC_1,FVSUM_1,SETWOP_2,MATRIX_1,MATRIX_2,FUNCOP_1,FINSUB_1,FINSEQ_3,RLVECT_1,RELAT_1,FINSOP_1,XBOOLE_0,XBOOLE_1,GROUP_1,MATRIX_3,FINSEQ_5,FINSET_1,GROUP_4,XREAL_1,MATRIX_7,ORDINAL1,MATRIX_4,CARD_1,CARD_2,MATRIX_9,STIRL2_1,RADIX_1,REWRITE1,FINSEQ_7,SGRAPH1,WELLORD2,FRAENKEL,FUNCT_5,FUNCT_4,NAT_D,XXREAL_0,PARTFUN1,CKB2,CKB3,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
schemes FUNCT_2,NAT_1,FINSEQ_1,FINSEQ_2,MATRIX_1,BINOP_1,FUNCT_1,SETWISEO;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,FUNCT_2,FINSET_1,FINSUB_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,STRUCT_0,GROUP_1,VECTSP_1,MATRIX_2,FVSUM_1,CARD_1,RELSET_1,FINSEQ_2,CKB5,CKB6,CKB7,CKB8;
constructors RELAT_2,WELLORD2,SETWISEO,XXREAL_0,NAT_1,NAT_D,FINSOP_1,SETWOP_2,FINSEQ_7,CAT_2,ALGSTR_1,GROUP_4,FVSUM_1,SGRAPH1,MATRIX_6,MATRIX_7,RELSET_1,CKB9,CKB18;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve y for set;
reserve i for Nat;
reserve k for Nat;
reserve n for Nat;
reserve m for Nat;
reserve perm for (Element of ( Permutations n ));
reserve p for (Element of ( Permutations n ));
theorem
Th21: (for perm holds (ex P being (FinSequence of ( Group_of_Perm n )) st (perm = ( Product P ) & (for i holds (i in ( dom P ) implies (ex trans being (Element of ( Permutations n )) st (( P . i ) = trans & trans is  being_transposition)))))))
proof
defpred P[ Nat ]
 means
(for perm being (Element of ( Permutations $1 )) holds (ex P being (FinSequence of ( Group_of_Perm $1 )) st (perm = ( Product P ) & (for i holds (i in ( dom P ) implies (ex trans being (Element of ( Permutations $1 )) st (( P . i ) = trans & trans is  being_transposition)))))));
let perm being (Element of ( Permutations n ));
A1: n is (Element of ( NAT )) by ORDINAL1:def 12;
A2: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being (Element of ( NAT ));
assume that
A3: P[ k ];
set k1 = ( k + 1 );
let p being (Element of ( Permutations k1 ));
reconsider p9 = p as (Permutation of ( Seg k1 )) by MATRIX_2:def 9;
set Gk1 = ( Group_of_Perm k1 );
A4: (for p being (Element of ( Permutations k1 )) holds (( p . k1 ) = k1 implies (ex P being (FinSequence of ( Group_of_Perm k1 )) st (p = ( Product P ) & (for i holds (i in ( dom P ) implies (ex trans being (Element of ( Permutations k1 )) st (( P . i ) = trans & trans is  being_transposition))))))))
proof
set Ik = ( idseq k );
set Ik1 = ( idseq k1 );
set Gk1 = ( Group_of_Perm k1 );
set Gk = ( Group_of_Perm k );
let p being (Element of ( Permutations k1 ));
assume that
A5: ( p . k1 ) = k1;
set mG1 = (the multF of Gk1);
set mG = (the multF of Gk);
reconsider p9 = p as (Permutation of ( Seg k1 )) by MATRIX_2:def 9;
A6: ( Seg k1 ) = ( ( Seg k ) \/ { k1 } ) by FINSEQ_1:9;
then consider pk being (Permutation of ( Seg k )) such that A7: ( p9 | ( Seg k ) ) = pk by A5,CKB27:1,FINSEQ_3:8;
reconsider pk9 = pk as (Element of ( Permutations k )) by MATRIX_2:def 9;
consider P being (FinSequence of Gk) such that A8: pk9 = ( Product P ) and A9: (for i holds (i in ( dom P ) implies (ex trans being (Element of ( Permutations k )) st (( P . i ) = trans & trans is  being_transposition)))) by A3;
A10: pk9 = ( mG "**" P ) by A8,GROUP_4:def 2;
defpred PR[ set,set ]
 means
(for i being Nat holds (for tr being (Element of ( Permutations k )) holds (((i in ( dom P ) & ( P . i ) = tr) & i = $1) implies (ex newtr being (Element of ( Permutations k1 )) st (((newtr = $2 & newtr is  being_transposition) & ( newtr . k1 ) = k1) & tr = ( newtr | ( Seg k ) ))))));
A11: (not k1 in ( Seg k )) by FINSEQ_3:8;
A12: (for m being Nat holds (m in ( Seg ( len P ) ) implies (ex x being (Element of Gk1) st PR[ m,x ])))
proof
let m being Nat;
assume m in ( Seg ( len P ) );
then m in ( dom P ) by FINSEQ_1:def 3;
then consider tr being (Element of ( Permutations k )) such that A13: ( P . m ) = tr and A14: tr is  being_transposition by A9;
consider i9,j9 being Nat such that A15: i9 in ( dom tr ) and A16: j9 in ( dom tr ) and A17: i9 <> j9 and A18: ( tr . i9 ) = j9 and A19: ( tr . j9 ) = i9 and A20: (for k holds (((k <> i9 & k <> j9) & k in ( dom tr )) implies ( tr . k ) = k)) by A14,MATRIX_2:def 11;
reconsider tr9 = tr as (Permutation of ( Seg k )) by MATRIX_2:def 9;
consider newt being (Function of ( Seg k1 ),( Seg k1 )) such that A21: ( newt | ( Seg k ) ) = tr9 and A22: ( newt . k1 ) = k1 by A6,A11,STIRL2_1:57;
A23: ( newt . j9 ) = ( tr . j9 ) by A21,A16,FUNCT_1:47;
A24: (( Seg k ) is  empty implies ( Seg k ) is  empty);
then A25: newt is  onto by A6,A21,A22,STIRL2_1:58;
newt is  one-to-one by A6,A11,A24,A21,A22,STIRL2_1:58;
then reconsider NT = newt as (Element of ( Permutations k1 )) by A25,MATRIX_2:def 9;
reconsider NT9 = NT as (Element of Gk1) by MATRIX_2:def 10;
take NT9;
let I being Nat;
let TR being (Element of ( Permutations k ));
assume that
I in ( dom P )
and
A26: ( P . I ) = TR
and
A27: I = m;
take NT;
A28: ( dom tr ) c= ( dom newt ) by A21,RELAT_1:60;
A29: (for m holds (((m <> i9 & m <> j9) & m in ( dom newt )) implies ( newt . m ) = m))
proof
A30: ( dom tr9 ) = ( Seg k ) by FUNCT_2:52;
let m;
assume that
A31: m <> i9
and
A32: m <> j9
and
A33: m in ( dom newt );
( dom newt ) = ( Seg k1 ) by FUNCT_2:52;
then (m in ( Seg k ) or m in { k1 }) by A6,A33,XBOOLE_0:def 3;
then (m in ( dom tr ) or m = k1) by A30,TARSKI:def 1;
then ((( tr . m ) = ( newt . m ) & ( tr . m ) = m) or ( newt . m ) = m) by A21,A22,A20,A31,A32,FUNCT_1:47;
hence thesis;
end;
( newt . i9 ) = ( tr . i9 ) by A21,A15,FUNCT_1:47;
hence thesis by A13,A21,A22,A26,A27,A15,A16,A17,A18,A19,A28,A23,A29,MATRIX_2:def 11;
end;
consider Pr being (FinSequence of Gk1) such that A34: ( dom Pr ) = ( Seg ( len P ) ) and A35: (for m being Nat holds (m in ( Seg ( len P ) ) implies PR[ m,( Pr . m ) ])) from FINSEQ_1:sch 5(A12);
take Pr;
A36: ( Product Pr ) = ( mG1 "**" Pr ) by GROUP_4:def 2;
now
per cases ;
suppose A37: ( len Pr ) = ( 0 );

then A38: ( Seg ( len Pr ) ) = ( 0 );
A39: ( Product Pr ) = ( the_unity_wrt mG1 ) by A36,A37,FINSOP_1:def 1;
( the_unity_wrt mG1 ) = ( 1_ Gk1 ) by GROUP_1:22;
then A40: ( Product Pr ) = Ik1 by A39,MATRIX_2:24;
( len P ) = ( 0 ) by A34,A37,FINSEQ_1:def 3;
then A42: pk9 = ( the_unity_wrt mG ) by A10,FINSOP_1:def 1;
A43: ( dom p9 ) = ( Seg k1 ) by FUNCT_2:52;
A44: ( the_unity_wrt mG ) = ( 1_ Gk ) by GROUP_1:22;
A45: (for y holds (y in ( dom p ) implies ( p . y ) = ( Ik1 . y )))
proof
let y;
assume that
A46: y in ( dom p );
reconsider y9 = y as Nat by A43,A46;
A47: ( Ik1 . y9 ) = y9 by A43,A46,FUNCT_1:18;
A48: ( dom pk ) = ( Seg k ) by FUNCT_2:52;
(y in ( Seg k ) or y in { k1 }) by A6,A43,A46,XBOOLE_0:def 3;
then ((( pk . y ) = ( p . y ) & ( Ik . y9 ) = y9) or (( p . k1 ) = k1 & y = k1)) by A5,A7,A48,FUNCT_1:18,FUNCT_1:47,TARSKI:def 1;
hence thesis by A42,A44,A47,MATRIX_2:24;
end;
( dom Ik1 ) = ( Seg k1 ) by FUNCT_2:52;
hence thesis by A40,A43,A45,A38,FINSEQ_1:def 3,FUNCT_1:2;
end;
suppose A49: ( len Pr ) > ( 0 );

consider fPr being (Function of ( NAT ),Gk1) such that A50: ( fPr . 1 ) = ( Pr . 1 ) and A51: (for n being (Element of ( NAT )) holds ((( 0 ) <> n & n < ( len Pr )) implies ( fPr . ( n + 1 ) ) = ( mG1 . (( fPr . n ),( Pr . ( n + 1 ) )) ))) and A52: ( Product Pr ) = ( fPr . ( len Pr ) ) by A36,A49,FINSOP_1:def 1;
( len P ) > ( 0 ) by A34,A49,FINSEQ_1:def 3;
then consider fP being (Function of ( NAT ),Gk) such that A54: ( fP . 1 ) = ( P . 1 ) and A55: (for n being (Element of ( NAT )) holds ((( 0 ) <> n & n < ( len P )) implies ( fP . ( n + 1 ) ) = ( mG . (( fP . n ),( P . ( n + 1 ) )) ))) and A56: pk = ( fP . ( len P ) ) by A10,FINSOP_1:def 1;
A57: ( len P ) = ( len Pr ) by A34,FINSEQ_1:def 3;
defpred N[ Nat ]
 means
(($1 > ( 0 ) & $1 <= ( len P )) implies (ex Prod1 being (Element of ( Permutations k1 )) st (ex Prod being (Element of ( Permutations k )) st (((Prod1 = ( fPr . $1 ) & ( fP . $1 ) = Prod) & ( Prod1 | ( Seg k ) ) = Prod) & ( Prod1 . k1 ) = k1))));
A58: (for m being (Element of ( NAT )) holds (N[ m ] implies N[ ( m + 1 ) ]))
proof
let m being (Element of ( NAT ));
assume that
A59: N[ m ];
set m1 = ( m + 1 );
assume that
m1 > ( 0 )
and
A60: m1 <= ( len P );
( m1 + ( 0 ) ) > ( 0 );
then m1 >= 1 by NAT_1:19;
then A61: m1 in ( Seg ( len P ) ) by A60;
A62: ( dom P ) = ( Seg ( len P ) ) by FINSEQ_1:def 3;
then consider tr being (Element of ( Permutations k )) such that A63: ( P . m1 ) = tr and tr is  being_transposition by A9,A61;
consider tr1 being (Element of ( Permutations k1 )) such that A64: tr1 = ( Pr . m1 ) and tr1 is  being_transposition and A65: ( tr1 . k1 ) = k1 and A66: tr = ( tr1 | ( Seg k ) ) by A35,A61,A62,A63;
now
per cases ;
suppose m = ( 0 );

hence thesis by A54,A50,A63,A64,A65,A66;
end;
suppose A67: m > ( 0 );

A68: ( m + ( 0 ) ) < ( m + 1 ) by XREAL_1:6;
then consider Q1 being (Element of ( Permutations k1 )),Q being (Element of ( Permutations k )) such that A69: Q1 = ( fPr . m ) and A70: ( fP . m ) = Q and A71: ( Q1 | ( Seg k ) ) = Q and A72: ( Q1 . k1 ) = k1 by A59,A60,A67,XXREAL_0:2;
reconsider Q,tr as (Permutation of ( Seg k )) by MATRIX_2:def 9;
reconsider trQ = ( tr * Q ) as (Element of ( Permutations k )) by MATRIX_2:def 9;
A73: m < ( len P ) by A60,A68,XXREAL_0:2;
then A74: ( fP . m1 ) = ( mG . (Q,tr) ) by A55,A63,A67,A70;
then A75: ( fP . m1 ) = trQ by MATRIX_2:def 10;
reconsider Q1,tr1 as (Permutation of ( Seg k1 )) by MATRIX_2:def 9;
reconsider trQ1 = ( tr1 * Q1 ) as (Element of ( Permutations k1 )) by MATRIX_2:def 9;
A76: ( trQ1 | ( Seg k ) ) = trQ by A6,A65,A66,A71,A72,CKB28:1;
( len P ) = ( len Pr ) by A34,FINSEQ_1:def 3;
then ( fPr . m1 ) = ( mG1 . (Q1,tr1) ) by A51,A64,A67,A69,A73;
then A77: ( fPr . m1 ) = trQ1 by MATRIX_2:def 10;
( trQ1 . k1 ) = k1 by A6,A65,A66,A71,A72,A74,CKB28:1;
hence thesis by A75,A77,A76;
end;
end;
hence thesis;
end;
A78: N[ ( 0 ) ];
(for m being (Element of ( NAT )) holds N[ m ]) from NAT_1:sch 1(A78,A58);
then consider Prod1 being (Element of ( Permutations k1 )),Prod being (Element of ( Permutations k )) such that A79: Prod1 = ( fPr . ( len P ) ) and A80: ( fP . ( len P ) ) = Prod and A81: ( Prod1 | ( Seg k ) ) = Prod and A82: ( Prod1 . k1 ) = k1 by A49,A57;
reconsider Prod1 as (Permutation of ( Seg k1 )) by MATRIX_2:def 9;
A83: ( dom p9 ) = ( Seg k1 ) by FUNCT_2:52;
A84: (for y holds (y in ( dom p ) implies ( p . y ) = ( Prod1 . y )))
proof
let y;
assume y in ( dom p );
then A85: (y in ( Seg k ) or y in { k1 }) by A6,A83,XBOOLE_0:def 3;
( dom pk ) = ( Seg k ) by FUNCT_2:52;
then ((( Prod . y ) = ( p . y ) & ( Prod . y ) = ( Prod1 . y )) or (y = k1 & ( p . k1 ) = ( Prod1 . k1 ))) by A5,A7,A56,A80,A81,A82,A85,FUNCT_1:47,TARSKI:def 1;
hence thesis;
end;
( dom Prod1 ) = ( Seg k1 ) by FUNCT_2:52;
hence p = ( Product Pr ) by A52,A57,A79,A83,A84,FUNCT_1:2;
thus (for i holds (i in ( dom Pr ) implies (ex trans being (Element of ( Permutations k1 )) st (( Pr . i ) = trans & trans is  being_transposition))))
proof
A86: ( Seg ( len P ) ) = ( dom P ) by FINSEQ_1:def 3;
let m;
assume that
A87: m in ( dom Pr );
consider t being (Element of ( Permutations k )) such that A88: ( P . m ) = t and t is  being_transposition by A9,A34,A87,A86;
reconsider m9 = m as (Element of ( NAT )) by ORDINAL1:def 12;
(ex T being (Element of ( Permutations k1 )) st (((T = ( Pr . m9 ) & T is  being_transposition) & ( T . k1 ) = k1) & t = ( T | ( Seg k ) ))) by A34,A35,A87,A86,A88;
hence thesis;
end;

end;
end;
hence thesis;
end;
now
per cases ;
suppose ( p . k1 ) = k1;

hence thesis by A4;
end;
suppose A89: ( p . k1 ) <> k1;

A90: ( rng p9 ) = ( Seg k1 ) by FUNCT_2:def 3;
consider tr being (Element of ( Permutations k1 )) such that A91: tr is  being_transposition and ( tr . ( p . k1 ) ) = k1 and A92: ( ( tr * p ) . k1 ) = k1 by A89,CKB26:1;
reconsider tr9 = tr as (Permutation of ( Seg k1 )) by MATRIX_2:def 9;
reconsider trp = ( tr9 * p9 ) as (Element of ( Permutations k1 )) by MATRIX_2:def 9;
consider P being (FinSequence of Gk1) such that A93: trp = ( Product P ) and A94: (for i holds (i in ( dom P ) implies (ex trans being (Element of ( Permutations k1 )) st (( P . i ) = trans & trans is  being_transposition)))) by A4,A92;
reconsider TRP = trp as (Element of Gk1) by MATRIX_2:def 10;
reconsider T = tr as (Element of Gk1) by MATRIX_2:def 10;
take PT = ( P ^ <* T *> );
( Product PT ) = ( TRP * T ) by A93,GROUP_4:6;
hence ( Product PT ) = ( tr * ( tr * p ) ) by MATRIX_2:def 10
.= ( ( tr * tr ) * p ) by RELAT_1:36
.= ( ( idseq k1 ) * p ) by A91,CKB29:1
.= p by A90,RELAT_1:54;
thus (for m holds (m in ( dom PT ) implies (ex trans being (Element of ( Permutations k1 )) st (( PT . m ) = trans & trans is  being_transposition))))
proof
set L = ( len P );
set L1 = ( L + 1 );
A95: ( Seg L1 ) = ( ( Seg L ) \/ { L1 } ) by FINSEQ_1:9;
( len PT ) = ( ( len P ) + 1 ) by FINSEQ_2:16;
then A96: ( dom PT ) = ( Seg L1 ) by FINSEQ_1:def 3;
let m;
assume that
A97: m in ( dom PT );
now
per cases  by A97,A96,A95,XBOOLE_0:def 3;
suppose m in ( Seg L );

then A98: m in ( dom P ) by FINSEQ_1:def 3;
then ( PT . m ) = ( P . m ) by FINSEQ_1:def 7;
hence thesis by A94,A98;
end;
suppose m in { L1 };

then m = L1 by TARSKI:def 1;
hence thesis by A91,FINSEQ_1:42;
end;
end;
hence thesis;
end;

end;
end;
hence thesis;
end;
A99: P[ ( 0 ) ]
proof
let perm being (Element of ( Permutations ( 0 ) ));
take ( <*> (the carrier of ( Group_of_Perm ( 0 ) )) );
perm is (Permutation of ( Seg ( 0 ) )) by MATRIX_2:def 9;
then perm = ( idseq ( 0 ) );
then perm = ( 1_ ( Group_of_Perm ( 0 ) ) ) by MATRIX_2:24;
hence thesis by GROUP_4:8;
end;
(for n being (Element of ( NAT )) holds P[ n ]) from NAT_1:sch 1(A99,A2);
hence thesis by A1;
end;
