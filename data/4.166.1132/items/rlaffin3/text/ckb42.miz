environ
vocabularies ALGSTR_0,AOFA_I00,ARYTM_1,ARYTM_3,CARD_1,CARD_3,CLASSES1,COMPLEX1,CONVEX1,EUCLID,EUCLID_9,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSET_1,FUNCOP_1,FUNCSDOM,FUNCT_1,FUNCT_2,LMOD_7,MATRIX_1,MATRIX_3,MATRIX13,MATRLIN,MATRLIN2,MESFUNC1,METRIC_1,MONOID_0,NAT_1,NUMBERS,ORDINAL1,ORDINAL2,ORDINAL4,PARTFUN1,PCOMPS_1,PRE_TOPC,PROB_1,PRVECT_1,QC_LANG1,RCOMP_1,REAL_1,RELAT_1,RFINSEQ,RLAFFIN1,RLSUB_1,RLTOPSP1,RLVECT_1,RLVECT_2,RLVECT_3,RLVECT_5,RUSUB_4,SEMI_AF1,SETFAM_1,STRUCT_0,SUBSET_1,SUPINF_2,TARSKI,TOPMETR,TOPS_1,TOPS_2,VALUED_0,VALUED_1,VECTSP_1,XBOOLE_0,XCMPLX_0,XREAL_0,XXREAL_0,XXREAL_1,ZFMISC_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,ORDINAL1,NUMBERS,NAT_1,XXREAL_0,CARD_1,XREAL_0,REAL_1,FINSET_1,DOMAIN_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FINSEQ_1,FUNCOP_1,STRUCT_0,FINSEQ_2,FINSEQOP,RVSUM_1,RLVECT_1,RLVECT_2,RUSUB_4,CONVEX1,RLAFFIN1,COMPLEX1,VALUED_0,METRIC_1,BINOP_2,PRE_TOPC,PCOMPS_1,ALGSTR_0,FUNCSDOM,TOPS_2,RLTOPSP1,EUCLID,VFUNCT_1,FVSUM_1,RLSUB_1,RLVECT_3,RLVECT_5,CARD_3,RCOMP_1,EUCLID_9,VECTSP_1,MATRIX_1,NAT_D,MATRIX_3,MATRIX_6,VECTSP_6,VECTSP_7,MATRIX13,MATRLIN,RLSUB_2,RFINSEQ,TOPMETR,RLAFFIN2,SETFAM_1,PRVECT_1,TOPREAL9,MATRTOP1,CKB23,CKB24,CKB28;
definitions FINSEQ_1,MATRIX13,MATRTOP1,RLTOPSP1,STRUCT_0,SUBSET_1,TARSKI,XBOOLE_0,CKB23,CKB28;
theorems BORSUK_5,CARD_1,CARD_2,CARD_3,CARD_FIN,COMPLEX1,CONVEX1,EUCLID,EUCLID_7,EUCLID_9,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FUNCOP_1,FUNCT_1,FUNCT_2,FVSUM_1,GOBOARD6,JORDAN2B,JORDAN2C,JORDAN6,LAPLACE,MATRIX_6,MATRIX13,MATRLIN,MATRLIN2,MATRTOP1,MATRTOP2,METRIC_1,METRIZTS,NAT_1,ORDINAL1,PARTFUN1,PCOMPS_1,PRALG_3,PRE_TOPC,RELAT_1,RFINSEQ,RLAFFIN1,RLAFFIN2,RLSUB_1,RLSUB_2,RLTOPSP1,RLVECT_1,RLVECT_2,RLVECT_3,RLVECT_5,RUSUB_4,RVSUM_1,SETFAM_1,SPPOL_1,STIRL2_1,STRUCT_0,TARSKI,TOPGRP_1,TOPMETR,TOPREAL7,TOPREAL9,TOPS_1,TOPS_2,TREAL_1,TSEP_1,URYSOHN1,VECTSP_1,VECTSP_4,VECTSP_7,VECTSP_9,VFUNCT_1,XBOOLE_0,XBOOLE_1,XCMPLX_0,XCMPLX_1,XREAL_0,XREAL_1,XXREAL_0,XXREAL_1,ZFMISC_1,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB21,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41;
schemes FINSEQ_1,FUNCT_2,TREES_2;
registrations CARD_1,EUCLID,EUCLID_7,EUCLID_9,FINSEQ_1,FINSEQ_2,FINSET_1,FUNCT_1,JORDAN2B,MATRIX13,MATRTOP1,MEMBERED,MONOID_0,NAT_1,NUMBERS,PRE_TOPC,PRVECT_1,REAL_1,REALSET1,RELAT_1,RELSET_1,RLAFFIN1,RLTOPSP1,RLVECT_5,RVSUM_1,STRUCT_0,SUBSET_1,TEX_1,TOPGEN_1,TOPMETR,TOPREAL1,TOPREALC,TOPS_1,VALUED_0,VECTSP_1,VECTSP_9,XBOOLE_0,XREAL_0,XXREAL_0,ZFMISC_1,CKB6,CKB7,CKB8,CKB18,CKB20,CKB22;
constructors BINOP_2,CONVEX1,EUCLID_9,FUNCSDOM,FVSUM_1,MATRIX_6,MATRIX13,MATRTOP1,MONOID_0,NAT_D,RANKNULL,RCOMP_1,REAL_1,REALSET1,RFINSEQ,RLAFFIN1,RLAFFIN2,RLSUB_2,RLVECT_3,RLVECT_5,RUSUB_5,SEQ_1,TDLAT_3,TOPMETR,TOPREAL9,TOPS_2,VECTSP_7,VFUNCT_1,WELLORD2,SEQ_4,CKB23,CKB24,CKB28;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve n for Nat;
reserve k for Nat;
reserve pn for (Point of ( TOP-REAL n ));
reserve An for (Subset of ( TOP-REAL n ));
reserve Affn for  affinely-independent (Subset of ( TOP-REAL n ));
reserve Ak for (Subset of ( TOP-REAL k ));
reserve EN for (Enumeration of Affn);
theorem
Th25: (for EN holds (for An holds (((k <= n & ( card Affn ) = ( n + 1 )) & An = { pn: ( ( pn |-- EN ) | k ) in Ak }) implies (Ak is  open iff An is  open))))
proof
set A = Affn;
set AA = ( Affin A );
set TRn = ( TOP-REAL n );
let EN;
let An;
assume that
A1: k <= n
and
A2: ( card A ) = ( n + 1 )
and
A3: An = { v where v is (Element of TRn): ( ( v |-- EN ) | k ) in Ak };
set E = EN;
A4: ( rng E ) = A by CKB23:def 1;
then A5: ( len E ) = ( card A ) by FINSEQ_4:62;
then A6: ( len E ) >= 1 by A2,NAT_1:14;
then A7: ( len E ) in ( dom E ) by FINSEQ_3:25;
then ( E . ( len E ) ) in A by A4,FUNCT_1:def 3;
then reconsider EL = ( E . ( len E ) ) as (Element of TRn);
A8: ( card ( ( - EL ) + A ) ) = ( n + 1 ) by A2,RLAFFIN1:7;
set BB = { u where u is (Element of TRn): (u in AA & ( ( u |-- E ) | k ) in Ak) };
A9: BB c= An
proof
let x being set;
assume x in BB;
then (ex u being (Element of TRn) st ((x = u & u in AA) & ( ( u |-- E ) | k ) in Ak));
hence thesis by A3;
end;
reconsider Ev = ( E + ( ( card A ) |-> ( - EL ) ) ) as (Enumeration of ( ( - EL ) + A )) by CKB25:1;
set TB = { w where w is (Element of TRn): ( ( w |-- Ev ) | k ) in Ak };
set T = ( transl (( - EL ),TRn) );
A10: ( dim TRn ) = n by CKB9:1;
then A11: ( [#] TRn ) = AA by A2,CKB11:1;
An c= BB
proof
let x being set;
assume x in An;
then consider v being (Element of TRn) such that A12: (x = v & ( ( v |-- E ) | k ) in Ak) by A3;
thus thesis by A11,A12;
end;
then BB = An by A9,XBOOLE_0:def 10;
then A13: ( T .: An ) = { w where w is (Element of TRn): (w in ( Affin ( ( - EL ) + A ) ) & ( ( w |-- Ev ) | k ) in Ak) } by CKB39:1;
A14: ( T .: An ) c= TB
proof
let x being set;
assume x in ( T .: An );
then (ex w being (Element of TRn) st ((x = w & w in ( Affin ( ( - EL ) + A ) )) & ( ( w |-- Ev ) | k ) in Ak)) by A13;
hence thesis;
end;
A15: ( card ( ( - EL ) + A ) ) = ( card A ) by RLAFFIN1:7;
then A16: ( Affin ( ( - EL ) + A ) ) = ( [#] TRn ) by A2,A10,CKB11:1;
TB c= ( T .: An )
proof
let x being set;
assume x in TB;
then consider w being (Element of TRn) such that A17: (x = w & ( ( w |-- Ev ) | k ) in Ak);
thus thesis by A16,A13,A17;
end;
then A18: ( T .: An ) = TB by A14,XBOOLE_0:def 10;
( len E ) in ( Seg ( card A ) ) by A5,A6;
then A19: ( ( ( card A ) |-> ( - EL ) ) . ( len E ) ) = ( - EL ) by FINSEQ_2:57;
A20: ( rng Ev ) = ( ( - EL ) + A ) by CKB23:def 1;
then ( len Ev ) = ( card A ) by A15,FINSEQ_4:62;
then ( dom E ) = ( dom Ev ) by A5,FINSEQ_3:29;
then ( Ev . ( len E ) ) = ( EL + ( - EL ) ) by A7,A19,FVSUM_1:17
.= ( 0. TRn ) by RLVECT_1:5
.= ( 0* n ) by EUCLID:70;
then A21: ( Ev . ( len Ev ) ) = ( 0* n ) by A5,A15,A20,FINSEQ_4:62;
( ( - EL ) + A ) is non  empty by A2,A15;
then (( T .: An ) is  open iff Ak is  open) by A1,A21,A8,A18,CKB40:1;
hence thesis by TOPGRP_1:25;
set TAA = ( T .: AA );
A22: ( rng ( T | AA ) ) = ( T .: AA ) by RELAT_1:115;
( dom T ) = ( [#] TRn ) by FUNCT_2:52;
then A23: ( dom ( T | AA ) ) = AA by RELAT_1:62;
(( [#] ( TRn | AA ) ) = AA & ( [#] ( TRn | TAA ) ) = TAA) by PRE_TOPC:def 5;
then reconsider TA = ( T | AA ) as (Function of ( TRn | AA ),( TRn | TAA )) by A23,A22,FUNCT_2:1;
reconsider TAB = ( TA .: An ) as (Subset of ( TRn | TAA ));
reconsider TAB = ( TA .: An ) as (Subset of ( TRn | TAA ));
end;
