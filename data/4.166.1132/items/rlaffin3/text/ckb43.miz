environ
vocabularies ALGSTR_0,AOFA_I00,ARYTM_1,ARYTM_3,CARD_1,CARD_3,CLASSES1,COMPLEX1,CONVEX1,EUCLID,EUCLID_9,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSET_1,FUNCOP_1,FUNCSDOM,FUNCT_1,FUNCT_2,LMOD_7,MATRIX_1,MATRIX_3,MATRIX13,MATRLIN,MATRLIN2,MESFUNC1,METRIC_1,MONOID_0,NAT_1,NUMBERS,ORDINAL1,ORDINAL2,ORDINAL4,PARTFUN1,PCOMPS_1,PRE_TOPC,PROB_1,PRVECT_1,QC_LANG1,RCOMP_1,REAL_1,RELAT_1,RFINSEQ,RLAFFIN1,RLSUB_1,RLTOPSP1,RLVECT_1,RLVECT_2,RLVECT_3,RLVECT_5,RUSUB_4,SEMI_AF1,SETFAM_1,STRUCT_0,SUBSET_1,SUPINF_2,TARSKI,TOPMETR,TOPS_1,TOPS_2,VALUED_0,VALUED_1,VECTSP_1,XBOOLE_0,XCMPLX_0,XREAL_0,XXREAL_0,XXREAL_1,ZFMISC_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,ORDINAL1,NUMBERS,NAT_1,XXREAL_0,CARD_1,XREAL_0,REAL_1,FINSET_1,DOMAIN_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FINSEQ_1,FUNCOP_1,STRUCT_0,FINSEQ_2,FINSEQOP,RVSUM_1,RLVECT_1,RLVECT_2,RUSUB_4,CONVEX1,RLAFFIN1,COMPLEX1,VALUED_0,METRIC_1,BINOP_2,PRE_TOPC,PCOMPS_1,ALGSTR_0,FUNCSDOM,TOPS_2,RLTOPSP1,EUCLID,VFUNCT_1,FVSUM_1,RLSUB_1,RLVECT_3,RLVECT_5,CARD_3,RCOMP_1,EUCLID_9,VECTSP_1,MATRIX_1,NAT_D,MATRIX_3,MATRIX_6,VECTSP_6,VECTSP_7,MATRIX13,MATRLIN,RLSUB_2,RFINSEQ,TOPMETR,RLAFFIN2,SETFAM_1,PRVECT_1,TOPREAL9,MATRTOP1,CKB23,CKB24,CKB28;
definitions FINSEQ_1,MATRIX13,MATRTOP1,RLTOPSP1,STRUCT_0,SUBSET_1,TARSKI,XBOOLE_0,CKB23,CKB28;
theorems BORSUK_5,CARD_1,CARD_2,CARD_3,CARD_FIN,COMPLEX1,CONVEX1,EUCLID,EUCLID_7,EUCLID_9,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FUNCOP_1,FUNCT_1,FUNCT_2,FVSUM_1,GOBOARD6,JORDAN2B,JORDAN2C,JORDAN6,LAPLACE,MATRIX_6,MATRIX13,MATRLIN,MATRLIN2,MATRTOP1,MATRTOP2,METRIC_1,METRIZTS,NAT_1,ORDINAL1,PARTFUN1,PCOMPS_1,PRALG_3,PRE_TOPC,RELAT_1,RFINSEQ,RLAFFIN1,RLAFFIN2,RLSUB_1,RLSUB_2,RLTOPSP1,RLVECT_1,RLVECT_2,RLVECT_3,RLVECT_5,RUSUB_4,RVSUM_1,SETFAM_1,SPPOL_1,STIRL2_1,STRUCT_0,TARSKI,TOPGRP_1,TOPMETR,TOPREAL7,TOPREAL9,TOPS_1,TOPS_2,TREAL_1,TSEP_1,URYSOHN1,VECTSP_1,VECTSP_4,VECTSP_7,VECTSP_9,VFUNCT_1,XBOOLE_0,XBOOLE_1,XCMPLX_0,XCMPLX_1,XREAL_0,XREAL_1,XXREAL_0,XXREAL_1,ZFMISC_1,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB21,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42;
schemes FINSEQ_1,FUNCT_2,TREES_2;
registrations CARD_1,EUCLID,EUCLID_7,EUCLID_9,FINSEQ_1,FINSEQ_2,FINSET_1,FUNCT_1,JORDAN2B,MATRIX13,MATRTOP1,MEMBERED,MONOID_0,NAT_1,NUMBERS,PRE_TOPC,PRVECT_1,REAL_1,REALSET1,RELAT_1,RELSET_1,RLAFFIN1,RLTOPSP1,RLVECT_5,RVSUM_1,STRUCT_0,SUBSET_1,TEX_1,TOPGEN_1,TOPMETR,TOPREAL1,TOPREALC,TOPS_1,VALUED_0,VECTSP_1,VECTSP_9,XBOOLE_0,XREAL_0,XXREAL_0,ZFMISC_1,CKB6,CKB7,CKB8,CKB18,CKB20,CKB22;
constructors BINOP_2,CONVEX1,EUCLID_9,FUNCSDOM,FVSUM_1,MATRIX_6,MATRIX13,MATRTOP1,MONOID_0,NAT_D,RANKNULL,RCOMP_1,REAL_1,REALSET1,RFINSEQ,RLAFFIN1,RLAFFIN2,RLSUB_2,RLVECT_3,RLVECT_5,RUSUB_5,SEQ_1,TDLAT_3,TOPMETR,TOPREAL9,TOPS_2,VECTSP_7,VFUNCT_1,WELLORD2,SEQ_4,CKB23,CKB24,CKB28;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve n for Nat;
reserve k for Nat;
reserve V for RealLinearSpace;
reserve v for (VECTOR of V);
reserve pn for (Point of ( TOP-REAL n ));
reserve An for (Subset of ( TOP-REAL n ));
reserve Affn for  affinely-independent (Subset of ( TOP-REAL n ));
reserve Ak for (Subset of ( TOP-REAL k ));
reserve EN for (Enumeration of Affn);
theorem
Th26: (for EN holds (((k <= n & ( card Affn ) = ( n + 1 )) & An = { pn: ( ( pn |-- EN ) | k ) in Ak }) implies (Ak is  closed iff An is  closed)))
proof
set TRn = ( TOP-REAL n );
set TRk = ( TOP-REAL k );
set A = Affn;
let E being (Enumeration of A);
assume that
A1: (k <= n & ( card A ) = ( n + 1 ))
and
A2: An = { v where v is (Element of TRn): ( ( v |-- E ) | k ) in Ak };
set B1 = { v where v is (Element of TRn): ( ( v |-- E ) | k ) in ( Ak ` ) };
A3: k < ( card A ) by A1,NAT_1:13;
A4: ( An ` ) c= B1
proof
let x being set;
assume A5: x in ( An ` );
then reconsider f = x as (Element of TRn);
set fE = ( f |-- E );
( len fE ) = ( card A ) by CKB29:1;
then ( len ( fE | k ) ) = k by A3,FINSEQ_1:59;
then A6: ( fE | k ) is (Element of TRk) by TOPREAL7:17;
assume (not x in B1);
then (not ( fE | k ) in ( Ak ` ));
then ( fE | k ) in Ak by A6,XBOOLE_0:def 5;
then f in An by A2;
hence contradiction by A5,XBOOLE_0:def 5;
end;
B1 c= ( An ` )
proof
let x being set;
assume x in B1;
then consider v being (Element of TRn) such that A7: x = v and A8: ( ( v |-- E ) | k ) in ( Ak ` );
assume (not x in ( An ` ));
then v in An by A7,XBOOLE_0:def 5;
then (ex w being (Element of TRn) st (v = w & ( ( w |-- E ) | k ) in Ak)) by A2;
hence contradiction by A8,XBOOLE_0:def 5;
end;
then ( An ` ) = B1 by A4,XBOOLE_0:def 10;
then (( Ak ` ) is  open iff ( An ` ) is  open) by A1,CKB42:1;
hence thesis by TOPS_1:3;
end;
