environ
vocabularies ALGSTR_0,AOFA_I00,ARYTM_1,ARYTM_3,CARD_1,CARD_3,CLASSES1,COMPLEX1,CONVEX1,EUCLID,EUCLID_9,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSET_1,FUNCOP_1,FUNCSDOM,FUNCT_1,FUNCT_2,LMOD_7,MATRIX_1,MATRIX_3,MATRIX13,MATRLIN,MATRLIN2,MESFUNC1,METRIC_1,MONOID_0,NAT_1,NUMBERS,ORDINAL1,ORDINAL2,ORDINAL4,PARTFUN1,PCOMPS_1,PRE_TOPC,PROB_1,PRVECT_1,QC_LANG1,RCOMP_1,REAL_1,RELAT_1,RFINSEQ,RLAFFIN1,RLSUB_1,RLTOPSP1,RLVECT_1,RLVECT_2,RLVECT_3,RLVECT_5,RUSUB_4,SEMI_AF1,SETFAM_1,STRUCT_0,SUBSET_1,SUPINF_2,TARSKI,TOPMETR,TOPS_1,TOPS_2,VALUED_0,VALUED_1,VECTSP_1,XBOOLE_0,XCMPLX_0,XREAL_0,XXREAL_0,XXREAL_1,ZFMISC_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,ORDINAL1,NUMBERS,NAT_1,XXREAL_0,CARD_1,XREAL_0,REAL_1,FINSET_1,DOMAIN_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FINSEQ_1,FUNCOP_1,STRUCT_0,FINSEQ_2,FINSEQOP,RVSUM_1,RLVECT_1,RLVECT_2,RUSUB_4,CONVEX1,RLAFFIN1,COMPLEX1,VALUED_0,METRIC_1,BINOP_2,PRE_TOPC,PCOMPS_1,ALGSTR_0,FUNCSDOM,TOPS_2,RLTOPSP1,EUCLID,VFUNCT_1,FVSUM_1,RLSUB_1,RLVECT_3,RLVECT_5,CARD_3,RCOMP_1,EUCLID_9,VECTSP_1,MATRIX_1,NAT_D,MATRIX_3,MATRIX_6,VECTSP_6,VECTSP_7,MATRIX13,MATRLIN,RLSUB_2,RFINSEQ,TOPMETR,RLAFFIN2,SETFAM_1,PRVECT_1,TOPREAL9,MATRTOP1,CKB23,CKB24;
definitions FINSEQ_1,MATRIX13,MATRTOP1,RLTOPSP1,STRUCT_0,SUBSET_1,TARSKI,XBOOLE_0,CKB23;
theorems BORSUK_5,CARD_1,CARD_2,CARD_3,CARD_FIN,COMPLEX1,CONVEX1,EUCLID,EUCLID_7,EUCLID_9,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FUNCOP_1,FUNCT_1,FUNCT_2,FVSUM_1,GOBOARD6,JORDAN2B,JORDAN2C,JORDAN6,LAPLACE,MATRIX_6,MATRIX13,MATRLIN,MATRLIN2,MATRTOP1,MATRTOP2,METRIC_1,METRIZTS,NAT_1,ORDINAL1,PARTFUN1,PCOMPS_1,PRALG_3,PRE_TOPC,RELAT_1,RFINSEQ,RLAFFIN1,RLAFFIN2,RLSUB_1,RLSUB_2,RLTOPSP1,RLVECT_1,RLVECT_2,RLVECT_3,RLVECT_5,RUSUB_4,RVSUM_1,SETFAM_1,SPPOL_1,STIRL2_1,STRUCT_0,TARSKI,TOPGRP_1,TOPMETR,TOPREAL7,TOPREAL9,TOPS_1,TOPS_2,TREAL_1,TSEP_1,URYSOHN1,VECTSP_1,VECTSP_4,VECTSP_7,VECTSP_9,VFUNCT_1,XBOOLE_0,XBOOLE_1,XCMPLX_0,XCMPLX_1,XREAL_0,XREAL_1,XXREAL_0,XXREAL_1,ZFMISC_1,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB21,CKB23;
schemes FINSEQ_1,FUNCT_2,TREES_2;
registrations CARD_1,EUCLID,EUCLID_7,EUCLID_9,FINSEQ_1,FINSEQ_2,FINSET_1,FUNCT_1,JORDAN2B,MATRIX13,MATRTOP1,MEMBERED,MONOID_0,NAT_1,NUMBERS,PRE_TOPC,PRVECT_1,REAL_1,REALSET1,RELAT_1,RELSET_1,RLAFFIN1,RLTOPSP1,RLVECT_5,RVSUM_1,STRUCT_0,SUBSET_1,TEX_1,TOPGEN_1,TOPMETR,TOPREAL1,TOPREALC,TOPS_1,VALUED_0,VECTSP_1,VECTSP_9,XBOOLE_0,XREAL_0,XXREAL_0,ZFMISC_1,CKB6,CKB7,CKB8,CKB18,CKB20,CKB22;
constructors BINOP_2,CONVEX1,EUCLID_9,FUNCSDOM,FVSUM_1,MATRIX_6,MATRIX13,MATRTOP1,MONOID_0,NAT_D,RANKNULL,RCOMP_1,REAL_1,REALSET1,RFINSEQ,RLAFFIN1,RLAFFIN2,RLSUB_2,RLVECT_3,RLVECT_5,RUSUB_5,SEQ_1,TDLAT_3,TOPMETR,TOPREAL9,TOPS_2,VECTSP_7,VFUNCT_1,WELLORD2,SEQ_4,CKB23,CKB24;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Th13: (for V being  Abelian  add-associative  right_zeroed  right_complementable non empty addLoopStr holds (for A being  finite (Subset of V) holds (for E being (Enumeration of A) holds (for v being (Element of V) holds ( E + ( ( card A ) |-> v ) ) is (Enumeration of ( v + A ))))))
proof
let V being  Abelian  add-associative  right_zeroed  right_complementable non empty addLoopStr;
let A being  finite (Subset of V);
let E being (Enumeration of A);
let v being (Element of V);
A1: ( rng E ) = A by CKB23:def 1;
then A2: ( len E ) = ( card A ) by FINSEQ_4:62;
then reconsider e = E,cAv = ( ( card A ) |-> v ) as (Element of ( ( card A ) -tuples_on (the carrier of V) )) by FINSEQ_2:92;
A3: ( len ( e + cAv ) ) = ( card A ) by CARD_1:def 7;
then A4: ( dom ( e + cAv ) ) = ( Seg ( card A ) ) by FINSEQ_1:def 3;
A5: ( dom e ) = ( Seg ( card A ) ) by A2,FINSEQ_1:def 3;
A6: ( rng ( e + cAv ) ) c= ( v + A )
proof
let y being set;
assume y in ( rng ( e + cAv ) );
then consider x being set such that A7: x in ( dom ( e + cAv ) ) and A8: ( ( e + cAv ) . x ) = y by FUNCT_1:def 3;
reconsider x as (Element of ( NAT )) by A7;
A9: ( e . x ) in ( rng e ) by A5,A4,A7,FUNCT_1:def 3;
then reconsider Ex = ( e . x ) as (Element of V);
( cAv . x ) = v by A4,A7,FINSEQ_2:57;
then y = ( Ex + v ) by A7,A8,FVSUM_1:17;
then y = ( v + Ex ) by RLVECT_1:def 2;
then y in { ( v + w ) where w is (Element of V): w in A } by A1,A9;
hence thesis by RUSUB_4:def 8;
end;
( v + A ) c= ( rng ( e + cAv ) )
proof
let vA being set;
assume vA in ( v + A );
then vA in { ( v + a ) where a is (Element of V): a in A } by RUSUB_4:def 8;
then consider a being (Element of V) such that A10: vA = ( v + a ) and A11: a in A;
consider x being set such that A12: x in ( dom E ) and A13: ( E . x ) = a by A1,A11,FUNCT_1:def 3;
reconsider x as (Element of ( NAT )) by A12;
( cAv . x ) = v by A5,A12,FINSEQ_2:57;
then ( ( e + cAv ) . x ) = ( a + v ) by A5,A4,A12,A13,FVSUM_1:17
.= vA by A10,RLVECT_1:def 2;
hence thesis by A5,A4,A12,FUNCT_1:def 3;
end;
then A14: ( v + A ) = ( rng ( e + cAv ) ) by A6,XBOOLE_0:def 10;
( card A ) = ( card ( v + A ) ) by RLAFFIN1:7;
then ( e + cAv ) is  one-to-one by A3,A14,FINSEQ_4:62;
hence thesis by A14,CKB23:def 1;
end;
