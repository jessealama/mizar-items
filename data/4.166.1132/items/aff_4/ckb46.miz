environ
vocabularies DIRAF,SUBSET_1,ANALOAF,AFF_1,INCSP_1,STRUCT_0,XBOOLE_0,TARSKI,RELAT_1,PARSP_1,AFF_2,ARYTM_3,AFF_4;
notations TARSKI,XBOOLE_0,SUBSET_1,STRUCT_0,ANALOAF,DIRAF,AFF_1,AFF_2,CKB15,CKB16,CKB36,CKB44;
definitions CKB15,CKB16,CKB36,CKB44;
theorems AFF_1,DIRAF,TARSKI,AFF_2,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45;
registrations XBOOLE_0,STRUCT_0;
constructors AFF_1,AFF_2,CKB15,CKB16,CKB36,CKB44;
requirements SUBSET,BOOLE;
begin
reserve AS for AffinSpace;
reserve a for (Element of AS);
reserve b for (Element of AS);
reserve c for (Element of AS);
reserve K for (Subset of AS);
reserve P for (Subset of AS);
reserve X for (Subset of AS);
theorem
Th34: (X is  being_plane implies (ex a st (ex b st (ex c st (((a in X & b in X) & c in X) & (not  LIN a,b,c))))))
proof
assume X is  being_plane;
then consider K,P such that A1: K is  being_line and A2: P is  being_line and A3: (not K // P) and A4: X = ( Plane (K,P) ) by CKB16:def 1;
consider a,b such that A5: a in P and A6: b in P and A7: a <> b by A2,AFF_1:19;
set Q = ( a * K );
consider c such that A8: a <> c and A9: c in Q by A1,CKB37:1,AFF_1:20;
take a;
take b;
take c;
A10: P c= ( Plane (K,P) ) by A1,CKB19:1;
hence (a in X & b in X) by A4,A5,A6;
A11: (K // Q & a in Q) by A1,CKB36:def 1;
then Q c= ( Plane (K,P) ) by A5,A10,CKB24:1;
hence c in X by A4,A9;
A12: Q is  being_line by A1,CKB37:1;
thus (not  LIN a,b,c)
proof
assume  LIN a,b,c;
then c in P by A2,A5,A6,A7,AFF_1:25;
hence contradiction by A2,A3,A5,A11,A12,A8,A9,AFF_1:18;
end;

end;
