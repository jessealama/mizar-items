environ
vocabularies DIRAF,SUBSET_1,ANALOAF,AFF_1,INCSP_1,STRUCT_0,XBOOLE_0,TARSKI,RELAT_1,PARSP_1,AFF_2,ARYTM_3,AFF_4;
notations TARSKI,XBOOLE_0,SUBSET_1,STRUCT_0,ANALOAF,DIRAF,AFF_1,AFF_2;
theorems AFF_1,DIRAF,TARSKI,AFF_2,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11;
registrations XBOOLE_0,STRUCT_0;
constructors AFF_1,AFF_2;
requirements SUBSET,BOOLE;
begin
reserve AS for AffinSpace;
reserve a for (Element of AS);
reserve b for (Element of AS);
reserve a9 for (Element of AS);
reserve b9 for (Element of AS);
reserve M for (Subset of AS);
reserve N for (Subset of AS);
theorem
Th10: ((((((((M // N or N // M) & a in M) & b in N) & b9 in N) & M <> N) & (a,b // a9,b9 or b,a // b9,a9)) & a = a9) implies b = b9)
proof
assume that
A1: (M // N or N // M)
and
A2: a in M
and
A3: (b in N & b9 in N)
and
A4: M <> N
and
A5: ((a,b // a9,b9 or b,a // b9,a9) & a = a9);
a,b // a,b9 by A5,AFF_1:4;
then  LIN a,b,b9 by AFF_1:def 1;
then A6:  LIN b,b9,a by AFF_1:6;
assume A7: b <> b9;
N is  being_line by A1,AFF_1:36;
then a in N by A3,A6,A7,AFF_1:25;
hence contradiction by A1,A2,A4,AFF_1:45;
end;
