environ
vocabularies DIRAF,SUBSET_1,ANALOAF,AFF_1,INCSP_1,STRUCT_0,XBOOLE_0,TARSKI,RELAT_1,PARSP_1,AFF_2,ARYTM_3,AFF_4;
notations TARSKI,XBOOLE_0,SUBSET_1,STRUCT_0,ANALOAF,DIRAF,AFF_1,AFF_2,CKB15,CKB16,CKB36,CKB44;
definitions CKB15,CKB16,CKB36,CKB44;
theorems AFF_1,DIRAF,TARSKI,AFF_2,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44;
registrations XBOOLE_0,STRUCT_0;
constructors AFF_1,AFF_2,CKB15,CKB16,CKB36,CKB44;
requirements SUBSET,BOOLE;
begin
reserve AS for AffinSpace;
reserve a for (Element of AS);
reserve b for (Element of AS);
reserve K for (Subset of AS);
reserve P for (Subset of AS);
reserve X for (Subset of AS);
reserve Y for (Subset of AS);
theorem
Th33: ((X c= Y & ((X is  being_line & Y is  being_line) or (X is  being_plane & Y is  being_plane))) implies X = Y)
proof
assume that
A1: X c= Y
and
A2: ((X is  being_line & Y is  being_line) or (X is  being_plane & Y is  being_plane));
A3:now
assume that
A4: X is  being_plane
and
A5: Y is  being_plane;
consider K,P such that A6: K is  being_line and A7: P is  being_line and A8: (not K // P) and A9: X = ( Plane (K,P) ) by A4,CKB16:def 1;
consider a,b such that A10: a in P and b in P and a <> b by A7,AFF_1:19;
set M = ( a * K );
A11: K // M by A6,CKB36:def 1;
A12: P c= X by A6,A9,CKB19:1;
then A13: P c= Y by A1,XBOOLE_1:1;
A14: M is  being_line by A6,CKB37:1;
(a in M & P c= ( Plane (K,P) )) by A6,CKB36:def 1,CKB19:1;
then A15: M c= X by A9,A10,A11,CKB24:1;
then M c= Y by A1,XBOOLE_1:1;
hence thesis by A4,A5,A7,A8,A11,A14,A12,A13,A15,CKB35:1;
end;
now
assume that
A16: X is  being_line
and
A17: Y is  being_line;
consider a,b such that A18: a <> b and A19: X = ( Line (a,b) ) by A16,AFF_1:def 3;
(a in X & b in X) by A19,AFF_1:15;
hence thesis by A1,A17,A18,A19,AFF_1:57;
end;
hence thesis by A2,A3;
end;
