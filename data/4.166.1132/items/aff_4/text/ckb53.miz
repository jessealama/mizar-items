environ
vocabularies DIRAF,SUBSET_1,ANALOAF,AFF_1,INCSP_1,STRUCT_0,XBOOLE_0,TARSKI,RELAT_1,PARSP_1,AFF_2,ARYTM_3,AFF_4;
notations TARSKI,XBOOLE_0,SUBSET_1,STRUCT_0,ANALOAF,DIRAF,AFF_1,AFF_2,CKB15,CKB16,CKB36,CKB44;
definitions CKB15,CKB16,CKB36,CKB44;
theorems AFF_1,DIRAF,TARSKI,AFF_2,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52;
registrations XBOOLE_0,STRUCT_0;
constructors AFF_1,AFF_2,CKB15,CKB16,CKB36,CKB44;
requirements SUBSET,BOOLE;
begin
reserve AS for AffinSpace;
reserve a for (Element of AS);
reserve b for (Element of AS);
reserve A for (Subset of AS);
reserve M for (Subset of AS);
reserve N for (Subset of AS);
theorem
((M is  being_line & N is  being_line) implies (M // N iff M '||' N))
proof
assume that
A1: M is  being_line
and
A2: N is  being_line;
A3:now
assume A4: M // N;
now
let a;
let A;
assume that
A5: a in N
and
A6: (A is  being_line & A c= M);
N = ( a * M ) by A1,A4,A5,CKB36:def 1;
hence ( a * A ) c= N by A1,A6,CKB45:1;
end;
hence M '||' N by CKB44:def 1;
end;
now
consider a,b such that A7: a in N and b in N and a <> b by A2,AFF_1:19;
A8: ( a * M ) is  being_line by A1,CKB37:1;
assume M '||' N;
then ( a * M ) c= N by A1,A7,CKB44:def 1;
then ( a * M ) = N by A2,A8,CKB45:1;
hence M // N by A1,CKB36:def 1;
end;
hence thesis by A3;
end;
