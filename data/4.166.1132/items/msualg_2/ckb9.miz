environ
vocabularies PBOOLE,RELAT_1,XBOOLE_0,FUNCT_1,SUBSET_1,CARD_3,TARSKI,STRUCT_0,MSUALG_1,UNIALG_2,FINSEQ_1,MARGREL1,PARTFUN1,FUNCT_2,ZFMISC_1,QC_LANG1,SETFAM_1,EQREL_1,BINOP_1,LATTICES,XXREAL_2,MSUALG_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,STRUCT_0,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,SETFAM_1,FINSEQ_2,LATTICES,BINOP_1,CARD_3,PBOOLE,MSUALG_1,CKB4,CKB5,CKB6;
definitions TARSKI,PBOOLE,LATTICES,XBOOLE_0,CKB5,CKB6;
theorems TARSKI,FUNCT_1,FINSEQ_1,PBOOLE,CARD_3,MSUALG_1,FUNCT_2,ZFMISC_1,SETFAM_1,BINOP_1,LATTICES,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,PARTFUN1,FINSEQ_2,CKB3,CKB5,CKB6;
schemes CLASSES1,BINOP_1,FUNCT_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PBOOLE,STRUCT_0,LATTICES,MSUALG_1,FINSEQ_1,FUNCT_2,PARTFUN1,RELSET_1,CKB1,CKB2,CKB7,CKB8;
constructors SETFAM_1,BINOP_1,CARD_3,LATTICES,MSUALG_1,RELSET_1,CKB5,CKB6;
requirements BOOLE,SUBSET;
begin
reserve x for set;
definition
let S being non void non empty ManySortedSign;
let U0 being MSAlgebra over S;
let s being (SortSymbol of S);
func Constants (U0,s) -> (Subset of ( (the Sorts of U0) . s ))
means
:Def4: (ex A being non empty set st (A = ( (the Sorts of U0) . s ) & it = { a where a is (Element of A): (ex o being (OperSymbol of S) st ((( (the Arity of S) . o ) = ( {} ) & ( (the ResultSort of S) . o ) = s) & a in ( rng ( Den (o,U0) ) ))) })) if ( (the Sorts of U0) . s ) <> ( {} ) otherwise it = ( {} );
existence
proof
hereby
assume ( (the Sorts of U0) . s ) <> ( {} );
then reconsider A = ( (the Sorts of U0) . s ) as non empty set;
set E = { a where a is (Element of A): (ex o being (OperSymbol of S) st ((( (the Arity of S) . o ) = ( {} ) & ( (the ResultSort of S) . o ) = s) & a in ( rng ( Den (o,U0) ) ))) };
E c= A
proof
let x;
assume x in E;
then (ex w being (Element of ( (the Sorts of U0) . s )) st (w = x & (ex o being (OperSymbol of S) st ((( (the Arity of S) . o ) = ( {} ) & ( (the ResultSort of S) . o ) = s) & w in ( rng ( Den (o,U0) ) )))));
hence thesis;
end;
then reconsider E as (Subset of ( (the Sorts of U0) . s ));
take E;
take A;
thus (A = ( (the Sorts of U0) . s ) & E = { a where a is (Element of A): (ex o being (OperSymbol of S) st ((( (the Arity of S) . o ) = ( {} ) & ( (the ResultSort of S) . o ) = s) & a in ( rng ( Den (o,U0) ) ))) });
end;
assume ( (the Sorts of U0) . s ) = ( {} );
take ( {} ( (the Sorts of U0) . s ) );
thus thesis;
end;
correctness;
end;
