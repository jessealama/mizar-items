environ
vocabularies PBOOLE,RELAT_1,XBOOLE_0,FUNCT_1,SUBSET_1,CARD_3,TARSKI,STRUCT_0,MSUALG_1,UNIALG_2,FINSEQ_1,MARGREL1,PARTFUN1,FUNCT_2,ZFMISC_1,QC_LANG1,SETFAM_1,EQREL_1,BINOP_1,LATTICES,XXREAL_2,MSUALG_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,STRUCT_0,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,SETFAM_1,FINSEQ_2,LATTICES,BINOP_1,CARD_3,PBOOLE,MSUALG_1,CKB4,CKB5,CKB6,CKB9,CKB10,CKB13,CKB14,CKB16;
definitions TARSKI,PBOOLE,LATTICES,XBOOLE_0,CKB5,CKB6,CKB9,CKB10,CKB13,CKB14,CKB16;
theorems TARSKI,FUNCT_1,FINSEQ_1,PBOOLE,CARD_3,MSUALG_1,FUNCT_2,ZFMISC_1,SETFAM_1,BINOP_1,LATTICES,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,PARTFUN1,FINSEQ_2,CKB3,CKB5,CKB6,CKB9,CKB10,CKB13,CKB14,CKB15,CKB16;
schemes CLASSES1,BINOP_1,FUNCT_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PBOOLE,STRUCT_0,LATTICES,MSUALG_1,FINSEQ_1,FUNCT_2,PARTFUN1,RELSET_1,CKB1,CKB2,CKB7,CKB8,CKB11,CKB12;
constructors SETFAM_1,BINOP_1,CARD_3,LATTICES,MSUALG_1,RELSET_1,CKB5,CKB6,CKB9,CKB10,CKB13,CKB14,CKB16;
requirements BOOLE,SUBSET;
begin
reserve x for set;
reserve y for set;
definition
let S being non void non empty ManySortedSign;
let U0 being MSAlgebra over S;
let A being (MSSubset of U0);
func Opers (U0,A) -> (ManySortedFunction of ( ( A # ) * (the Arity of S) ),( A * (the ResultSort of S) ))
means
:Def9: (for o being (OperSymbol of S) holds ( it . o ) = ( o /. A ));
existence
proof
set B = ( ( A # ) * (the Arity of S) );
set C = ( A * (the ResultSort of S) );
defpred P[ set,set ]
 means
(for o being (OperSymbol of S) holds (o = $1 implies $2 = ( o /. A )));
A1: (for x holds (x in (the carrier' of S) implies (ex y st P[ x,y ])))
proof
let x;
assume x in (the carrier' of S);
then reconsider o = x as (OperSymbol of S);
take ( o /. A );
thus thesis;
end;
consider f being Function such that A2: (( dom f ) = (the carrier' of S) & (for x holds (x in (the carrier' of S) implies P[ x,( f . x ) ]))) from CLASSES1:sch 1(A1);
reconsider f as (ManySortedSet of (the carrier' of S)) by A2,PARTFUN1:def 2,RELAT_1:def 18;
(for x holds (x in ( dom f ) implies ( f . x ) is Function))
proof
let x;
assume x in ( dom f );
then reconsider o = x as (OperSymbol of S) by A2;
( f . o ) = ( o /. A ) by A2;
hence thesis;
end;
then reconsider f as (ManySortedFunction of (the carrier' of S)) by FUNCOP_1:def 6;
(for x holds (x in (the carrier' of S) implies ( f . x ) is (Function of ( B . x ),( C . x ))))
proof
let x;
assume x in (the carrier' of S);
then reconsider o = x as (OperSymbol of S);
( f . o ) = ( o /. A ) by A2;
hence thesis;
end;
then reconsider f as (ManySortedFunction of B,C) by PBOOLE:def 15;
take f;
let o being (OperSymbol of S);
thus thesis by A2;
end;
uniqueness
proof
let f1 being (ManySortedFunction of ( ( A # ) * (the Arity of S) ),( A * (the ResultSort of S) )),f2 being (ManySortedFunction of ( ( A # ) * (the Arity of S) ),( A * (the ResultSort of S) ));
assume that
A3: (for o being (OperSymbol of S) holds ( f1 . o ) = ( o /. A ))
and
A4: (for o being (OperSymbol of S) holds ( f2 . o ) = ( o /. A ));
(for x holds (x in (the carrier' of S) implies ( f1 . x ) = ( f2 . x )))
proof
let x;
assume x in (the carrier' of S);
then reconsider o1 = x as (OperSymbol of S);
( f1 . o1 ) = ( o1 /. A ) by A3;
hence thesis by A4;
end;
hence thesis by PBOOLE:3;
end;
end;
