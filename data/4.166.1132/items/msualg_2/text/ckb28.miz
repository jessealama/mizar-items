environ
vocabularies PBOOLE,RELAT_1,XBOOLE_0,FUNCT_1,SUBSET_1,CARD_3,TARSKI,STRUCT_0,MSUALG_1,UNIALG_2,FINSEQ_1,MARGREL1,PARTFUN1,FUNCT_2,ZFMISC_1,QC_LANG1,SETFAM_1,EQREL_1,BINOP_1,LATTICES,XXREAL_2,MSUALG_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,STRUCT_0,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,SETFAM_1,FINSEQ_2,LATTICES,BINOP_1,CARD_3,PBOOLE,MSUALG_1,CKB4,CKB5,CKB6,CKB9,CKB10,CKB13,CKB14,CKB16,CKB17,CKB20;
definitions TARSKI,PBOOLE,LATTICES,XBOOLE_0,CKB5,CKB6,CKB9,CKB10,CKB13,CKB14,CKB16,CKB17,CKB20;
theorems TARSKI,FUNCT_1,FINSEQ_1,PBOOLE,CARD_3,MSUALG_1,FUNCT_2,ZFMISC_1,SETFAM_1,BINOP_1,LATTICES,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,PARTFUN1,FINSEQ_2,CKB3,CKB5,CKB6,CKB9,CKB10,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB25,CKB26,CKB27;
schemes CLASSES1,BINOP_1,FUNCT_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PBOOLE,STRUCT_0,LATTICES,MSUALG_1,FINSEQ_1,FUNCT_2,PARTFUN1,RELSET_1,CKB1,CKB2,CKB7,CKB8,CKB11,CKB12,CKB22,CKB23,CKB24;
constructors SETFAM_1,BINOP_1,CARD_3,LATTICES,MSUALG_1,RELSET_1,CKB5,CKB6,CKB9,CKB10,CKB13,CKB14,CKB16,CKB17,CKB20;
requirements BOOLE,SUBSET;
begin
reserve x for set;
reserve S for non  void non  empty ManySortedSign;
reserve o for (OperSymbol of S);
reserve U0 for MSAlgebra over S;
reserve U1 for MSAlgebra over S;
reserve U2 for MSAlgebra over S;
theorem
Th9: (for U1,U2 being (MSSubAlgebra of U0) holds ((the Sorts of U1) c= (the Sorts of U2) implies U1 is (MSSubAlgebra of U2)))
proof
let U1 being (MSSubAlgebra of U0);
let U2 being (MSSubAlgebra of U0);
reconsider B1 = (the Sorts of U1),B2 = (the Sorts of U2) as (MSSubset of U0) by CKB20:def 1;
assume A1: (the Sorts of U1) c= (the Sorts of U2);
hence (the Sorts of U1) is (MSSubset of U2) by PBOOLE:def 18;
let B being (MSSubset of U2);
A2: B1 is  opers_closed by CKB20:def 1;
set O = (the Charact of U1);
set P = ( Opers (U2,B) );
A3: (the Charact of U1) = ( Opers (U0,B1) ) by CKB20:def 1;
A4: B2 is  opers_closed by CKB20:def 1;
A5: (the Charact of U2) = ( Opers (U0,B2) ) by CKB20:def 1;
assume A6: B = (the Sorts of U1);
A7: (for o being (OperSymbol of S) holds B is_closed_on o)
proof
let o being (OperSymbol of S);
A8: B1 is_closed_on o by A2,CKB14:def 1;
A9: B2 is_closed_on o by A4,CKB14:def 1;
A10: ( Den (o,U2) ) = ( ( Opers (U0,B2) ) . o ) by A5,MSUALG_1:def 6
.= ( o /. B2 ) by CKB17:def 1
.= ( ( Den (o,U0) ) | ( ( ( B2 # ) * (the Arity of S) ) . o ) ) by A9,CKB16:def 1;
( Den (o,U1) ) = ( ( Opers (U0,B1) ) . o ) by A3,MSUALG_1:def 6
.= ( o /. B1 ) by CKB17:def 1
.= ( ( Den (o,U0) ) | ( ( ( B1 # ) * (the Arity of S) ) . o ) ) by A8,CKB16:def 1
.= ( ( Den (o,U0) ) | ( ( ( ( B2 # ) * (the Arity of S) ) . o ) /\ ( ( ( B1 # ) * (the Arity of S) ) . o ) ) ) by A1,CKB15:1,XBOOLE_1:28
.= ( ( Den (o,U2) ) | ( ( ( B1 # ) * (the Arity of S) ) . o ) ) by A10,RELAT_1:71;
then ( rng ( ( Den (o,U2) ) | ( ( ( B1 # ) * (the Arity of S) ) . o ) ) ) c= ( Result (o,U1) ) by RELAT_1:def 19;
then ( rng ( ( Den (o,U2) ) | ( ( ( B1 # ) * (the Arity of S) ) . o ) ) ) c= ( ( (the Sorts of U1) * (the ResultSort of S) ) . o ) by MSUALG_1:def 5;
hence thesis by A6,CKB13:def 1;
end;
hence B is  opers_closed by CKB14:def 1;
(for x holds (x in (the carrier' of S) implies ( O . x ) = ( P . x )))
proof
let x;
assume x in (the carrier' of S);
then reconsider o = x as (OperSymbol of S);
A11: B1 is_closed_on o by A2,CKB14:def 1;
A12: B2 is_closed_on o by A4,CKB14:def 1;
A13: ( Den (o,U2) ) = ( ( Opers (U0,B2) ) . o ) by A5,MSUALG_1:def 6
.= ( o /. B2 ) by CKB17:def 1
.= ( ( Den (o,U0) ) | ( ( ( B2 # ) * (the Arity of S) ) . o ) ) by A12,CKB16:def 1;
thus ( O . x ) = ( o /. B1 ) by A3,CKB17:def 1
.= ( ( Den (o,U0) ) | ( ( ( B1 # ) * (the Arity of S) ) . o ) ) by A11,CKB16:def 1
.= ( ( Den (o,U0) ) | ( ( ( ( B2 # ) * (the Arity of S) ) . o ) /\ ( ( ( B1 # ) * (the Arity of S) ) . o ) ) ) by A1,CKB15:1,XBOOLE_1:28
.= ( ( Den (o,U2) ) | ( ( ( B1 # ) * (the Arity of S) ) . o ) ) by A13,RELAT_1:71
.= ( o /. B ) by A6,A7,CKB16:def 1
.= ( P . x ) by CKB17:def 1;
end;
hence thesis by PBOOLE:3;
end;
