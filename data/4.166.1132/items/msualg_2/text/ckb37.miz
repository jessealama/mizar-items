environ
vocabularies PBOOLE,RELAT_1,XBOOLE_0,FUNCT_1,SUBSET_1,CARD_3,TARSKI,STRUCT_0,MSUALG_1,UNIALG_2,FINSEQ_1,MARGREL1,PARTFUN1,FUNCT_2,ZFMISC_1,QC_LANG1,SETFAM_1,EQREL_1,BINOP_1,LATTICES,XXREAL_2,MSUALG_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,STRUCT_0,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,SETFAM_1,FINSEQ_2,LATTICES,BINOP_1,CARD_3,PBOOLE,MSUALG_1,CKB4,CKB5,CKB6,CKB9,CKB10,CKB13,CKB14,CKB16,CKB17,CKB20,CKB33,CKB36;
definitions TARSKI,PBOOLE,LATTICES,XBOOLE_0,CKB5,CKB6,CKB9,CKB10,CKB13,CKB14,CKB16,CKB17,CKB20,CKB33,CKB36;
theorems TARSKI,FUNCT_1,FINSEQ_1,PBOOLE,CARD_3,MSUALG_1,FUNCT_2,ZFMISC_1,SETFAM_1,BINOP_1,LATTICES,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,PARTFUN1,FINSEQ_2,CKB3,CKB5,CKB6,CKB9,CKB10,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36;
schemes CLASSES1,BINOP_1,FUNCT_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PBOOLE,STRUCT_0,LATTICES,MSUALG_1,FINSEQ_1,FUNCT_2,PARTFUN1,RELSET_1,CKB1,CKB2,CKB7,CKB8,CKB11,CKB12,CKB22,CKB23,CKB24,CKB35;
constructors SETFAM_1,BINOP_1,CARD_3,LATTICES,MSUALG_1,RELSET_1,CKB5,CKB6,CKB9,CKB10,CKB13,CKB14,CKB16,CKB17,CKB20,CKB33,CKB36;
requirements BOOLE,SUBSET;
begin
registration
let S being non void non empty ManySortedSign;
let U0 being MSAlgebra over S;
cluster ( SubSort U0 ) -> non empty;
coherence
proof
set f = ( Funcs ((the carrier of S),( bool ( Union (the Sorts of U0) ) )) );
defpred P[ set ]
 means
($1 is (MSSubset of U0) & (for B being (MSSubset of U0) holds (B = $1 implies B is  opers_closed)));
consider X being set such that A1: (for x being set holds (x in X iff (x in ( Funcs ((the carrier of S),( bool ( Union (the Sorts of U0) ) )) ) & P[ x ]))) from XBOOLE_0:sch 1;
( Union (the Sorts of U0) ) = ( union ( rng (the Sorts of U0) ) ) by CARD_3:def 4;
then (( dom (the Sorts of U0) ) = (the carrier of S) & ( rng (the Sorts of U0) ) c= ( bool ( Union (the Sorts of U0) ) )) by PARTFUN1:def 2,ZFMISC_1:82;
then A2: (the Sorts of U0) in f by FUNCT_2:def 2;
((the Sorts of U0) is (MSSubset of U0) & (for B being (MSSubset of U0) holds (B = (the Sorts of U0) implies B is  opers_closed))) by CKB18:1,PBOOLE:def 18;
then reconsider X as non empty set by A1,A2;
( SubSort U0 ) = X by A1,CKB36:def 1;
hence thesis;
end;
end;
