environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_1,PARTFUN1,RELAT_1,ZFMISC_1,FUNCOP_1,TARSKI,NAT_1,FINSEQ_1,FINSEQ_2,ORDINAL4,ARYTM_3,CARD_1,BINOP_1,SETWISEO,FINSEQOP;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,EQREL_1,FUNCT_1,FINSEQ_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCT_3,FUNCOP_1,FINSEQ_2,SETWISEO;
definitions BINOP_1,FUNCOP_1,FINSEQ_2;
theorems ZFMISC_1,FUNCT_1,FUNCT_2,FUNCOP_1,FINSEQ_1,BINOP_1,SETWISEO,FINSEQ_2,FUNCT_3,RELAT_1,XBOOLE_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5;
schemes NAT_1,FINSEQ_2;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,NAT_1,FINSEQ_2,ORDINAL1,XCMPLX_0,FINSEQ_1,CARD_1,RELSET_1;
constructors PARTFUN1,BINOP_1,FUNCT_3,FUNCOP_1,SETWISEO,NAT_1,FINSEQ_2,RELSET_1,EQREL_1;
requirements NUMERALS,BOOLE,SUBSET;
begin
theorem
Th7: (for X being set holds (for x1,x2 being set holds <: ( X --> x1 ),( X --> x2 ) :> = ( X --> [ x1,x2 ] )))
proof
let X being set;
let x1 being set,x2 being set;
set f = ( X --> x1 );
set g = ( X --> x2 );
set fg = <: f,g :>;
now
per cases ;
suppose A1: X = ( {} );

then f = ( ( {} ) --> x1 );
hence thesis by A1,CKB1:1;
end;
suppose A2: X <> ( {} );

( rng fg ) c= [: { x1 },{ x2 } :];
then A3: ( rng fg ) c= { [ x1,x2 ] } by ZFMISC_1:29;
set x = the (Element of X);
A4: (( dom f ) = X & ( dom g ) = X) by FUNCOP_1:13;
then A5: ( dom fg ) = X by FUNCT_3:50;
(( f . x ) = x1 & ( g . x ) = x2) by A2,FUNCOP_1:7;
then ( fg . x ) = [ x1,x2 ] by A2,A4,FUNCT_3:49;
then [ x1,x2 ] in ( rng fg ) by A2,A5,FUNCT_1:def 3;
then { [ x1,x2 ] } c= ( rng fg ) by ZFMISC_1:31;
then ( rng fg ) = { [ x1,x2 ] } by A3,XBOOLE_0:def 10;
hence thesis by A5,FUNCOP_1:9;
end;
end;
hence thesis;
end;
