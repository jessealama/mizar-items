environ
vocabularies NUMBERS,SUBSET_1,CQC_LANG,QC_LANG1,FINSEQ_1,XBOOLE_0,FINSET_1,FUNCT_1,ORDINAL1,RELAT_1,ARYTM_3,TARSKI,WELLORD2,WELLORD1,CARD_1,NAT_1,CQC_THE1,ORDINAL4,XBOOLEAN,CALCUL_1,CALCUL_2,ARYTM_1,INT_1,XXREAL_0,FUNCT_2,ZFMISC_1,VALUAT_1,ZF_MODEL,MARGREL1,REALSET1,MCART_1,HENMODEL;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,CALCUL_1,RELAT_1,FUNCT_1,ORDINAL1,XCMPLX_0,XXREAL_0,NAT_1,FINSEQ_1,QC_LANG1,CQC_LANG,CQC_THE1,VALUAT_1,FINSET_1,RELSET_1,FUNCT_2,CARD_1,MARGREL1,CQC_SIM1,DOMAIN_1,MCART_1,NUMBERS,FINSEQ_3,CALCUL_2,INT_1,WELLORD1,WELLORD2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB21,CKB22,CKB23,CKB24;
definitions TARSKI,XBOOLE_0,FUNCT_1,FINSEQ_2,CKB4,CKB5,CKB7,CKB21,CKB23,CKB24;
theorems TARSKI,FINSEQ_1,FINSEQ_3,FUNCT_1,VALUAT_1,XBOOLE_0,FINSEQ_2,ZFMISC_1,RELAT_1,QC_LANG3,XBOOLE_1,NAT_1,MARGREL1,FUNCT_2,RELSET_1,FINSET_1,CALCUL_1,CQC_THE1,ORDINAL2,AXIOMS,CALCUL_2,CARD_2,INT_1,ORDINAL1,WELLORD1,WELLORD2,CARD_3,MCART_1,SUBSTUT2,XREAL_1,XXREAL_0,FUNCOP_1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB21,CKB23,CKB24,CKB25;
schemes FUNCT_1,FINSEQ_1,CLASSES1;
registrations SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,FINSET_1,XXREAL_0,XREAL_0,INT_1,FINSEQ_1,QC_LANG1,CQC_LANG,FINSEQ_2,CARD_1,CKB20;
constructors SETFAM_1,WELLORD1,WELLORD2,DOMAIN_1,XXREAL_0,NAT_1,INT_1,FINSEQ_3,CQC_SIM1,SUBSTUT2,CALCUL_1,CALCUL_2,RELSET_1,CKB4,CKB5,CKB7,CKB21,CKB22,CKB23,CKB24;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve a for set;
reserve f for (FinSequence of ( CQC-WFF ));
theorem
Th15:  |- ( f ^ <* ( VERUM ) *> )
proof
set PR = <* [ ( f ^ <* ( VERUM ) *> ),1 ] *>;
A1: ( rng PR ) = { [ ( f ^ <* ( VERUM ) *> ),1 ] } by FINSEQ_1:38;
now
let a;
assume a in ( rng PR );
then A2: a = [ ( f ^ <* ( VERUM ) *> ),1 ] by A1,TARSKI:def 1;
( f ^ <* ( VERUM ) *> ) in ( set_of_CQC-WFF-seq ) by CALCUL_1:def 6;
hence a in [: ( set_of_CQC-WFF-seq ),( Proof_Step_Kinds ) :] by A2,CQC_THE1:21,ZFMISC_1:87;
end;
then ( rng PR ) c= [: ( set_of_CQC-WFF-seq ),( Proof_Step_Kinds ) :] by TARSKI:def 3;
then reconsider PR as (FinSequence of [: ( set_of_CQC-WFF-seq ),( Proof_Step_Kinds ) :]) by FINSEQ_1:def 4;
now
let n being Nat;
assume that
A3: 1 <= n
and
A4: n <= ( len PR );
n <= 1 by A4,FINSEQ_1:39;
then n = 1 by A3,XXREAL_0:1;
then ( PR . n ) = [ ( f ^ <* ( VERUM ) *> ),1 ] by FINSEQ_1:40;
then (( ( PR . n ) `1 ) = ( f ^ <* ( VERUM ) *> ) & ( ( PR . n ) `2 ) = 1) by MCART_1:7;
hence PR,n is_a_correct_step  by CALCUL_1:def 7;
end;
then A5: PR is  a_proof by CALCUL_1:def 8;
( PR . 1 ) = [ ( f ^ <* ( VERUM ) *> ),1 ] by FINSEQ_1:40;
then ( PR . ( len PR ) ) = [ ( f ^ <* ( VERUM ) *> ),1 ] by FINSEQ_1:40;
then ( ( PR . ( len PR ) ) `1 ) = ( f ^ <* ( VERUM ) *> ) by MCART_1:7;
hence thesis by A5,CALCUL_1:def 9;
end;
