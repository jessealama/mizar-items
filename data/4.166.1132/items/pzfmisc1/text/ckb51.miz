environ
vocabularies FUNCT_1,PBOOLE,RELAT_1,FUNCT_4,FUNCOP_1,XBOOLE_0,FINSET_1,TARSKI,ZFMISC_1,PZFMISC1;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,FUNCT_1,FUNCT_4,FINSET_1,FUNCOP_1,PBOOLE,MBOOLEAN,CKB4,CKB6;
definitions FINSET_1,PBOOLE,FUNCOP_1,CKB4,CKB6;
theorems FUNCOP_1,ENUMSET1,FUNCT_4,MBOOLEAN,PBOOLE,SETWISEO,TARSKI,ZFMISC_1,RELAT_1,XBOOLE_0,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50;
schemes PBOOLE;
registrations XBOOLE_0,FUNCOP_1,FINSET_1,CKB5,CKB7;
constructors FUNCT_4,MBOOLEAN,PBOOLE,FINSET_1,RELSET_1,CKB4,CKB6;
requirements BOOLE;
begin
reserve i for set;
reserve I for set;
reserve x for (ManySortedSet of I);
reserve y for (ManySortedSet of I);
reserve X for (ManySortedSet of I);
theorem
((I is non empty & ( { x,y } /\ X ) = ( [[0]] I )) implies ((not x in X) & (not y in X)))
proof
assume that
A1: I is non empty
and
A2: ( { x,y } /\ X ) = ( [[0]] I );
A3:now
let i;
assume A4: i in I;
hence ( { ( x . i ),( y . i ) } /\ ( X . i ) ) = ( ( { x,y } . i ) /\ ( X . i ) ) by CKB6:def 1
.= ( ( { x,y } /\ X ) . i ) by A4,PBOOLE:def 5
.= ( {} ) by A2,PBOOLE:5;
end;
thus (not x in X)
proof
assume A5: x in X;
now
consider i such that A6: i in I by A1,XBOOLE_0:def 1;
take i;
( { ( x . i ),( y . i ) } /\ ( X . i ) ) = ( {} ) by A3,A6;
then { ( x . i ),( y . i ) } misses ( X . i ) by XBOOLE_0:def 7;
hence (i in I & (not ( x . i ) in ( X . i ))) by A6,ZFMISC_1:49;
end;
hence contradiction by A5,PBOOLE:def 1;
end;

assume A7: y in X;
now
consider i such that A8: i in I by A1,XBOOLE_0:def 1;
take i;
( { ( x . i ),( y . i ) } /\ ( X . i ) ) = ( {} ) by A3,A8;
then { ( x . i ),( y . i ) } misses ( X . i ) by XBOOLE_0:def 7;
hence (i in I & (not ( y . i ) in ( X . i ))) by A8,ZFMISC_1:49;
end;
hence contradiction by A7,PBOOLE:def 1;
end;
