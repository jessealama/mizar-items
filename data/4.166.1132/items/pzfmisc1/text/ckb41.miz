environ
vocabularies FUNCT_1,PBOOLE,RELAT_1,FUNCT_4,FUNCOP_1,XBOOLE_0,FINSET_1,TARSKI,ZFMISC_1,PZFMISC1;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,FUNCT_1,FUNCT_4,FINSET_1,FUNCOP_1,PBOOLE,MBOOLEAN,CKB4,CKB6;
definitions FINSET_1,PBOOLE,FUNCOP_1,CKB4,CKB6;
theorems FUNCOP_1,ENUMSET1,FUNCT_4,MBOOLEAN,PBOOLE,SETWISEO,TARSKI,ZFMISC_1,RELAT_1,XBOOLE_0,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40;
schemes PBOOLE;
registrations XBOOLE_0,FUNCOP_1,FINSET_1,CKB5,CKB7;
constructors FUNCT_4,MBOOLEAN,PBOOLE,FINSET_1,RELSET_1,CKB4,CKB6;
requirements BOOLE;
begin
reserve i for set;
reserve I for set;
reserve x for (ManySortedSet of I);
reserve A for (ManySortedSet of I);
reserve B for (ManySortedSet of I);
theorem
(( A \/ { x } ) c= B iff (x in B & A c= B))
proof
thus (( A \/ { x } ) c= B implies (x in B & A c= B))
proof
assume A1: ( A \/ { x } ) c= B;
A2:now
let i;
assume A3: i in I;
then ( ( A \/ { x } ) . i ) c= ( B . i ) by A1,PBOOLE:def 2;
then ( ( A . i ) \/ ( { x } . i ) ) c= ( B . i ) by A3,PBOOLE:def 4;
hence ( ( A . i ) \/ { ( x . i ) } ) c= ( B . i ) by A3,CKB4:def 1;
end;
thus x in B
proof
let i;
assume i in I;
then ( ( A . i ) \/ { ( x . i ) } ) c= ( B . i ) by A2;
hence thesis by SETWISEO:5;
end;

let i;
assume i in I;
then ( ( A . i ) \/ { ( x . i ) } ) c= ( B . i ) by A2;
hence thesis by SETWISEO:5;
end;

assume that
A4: x in B
and
A5: A c= B;
let i;
assume A6: i in I;
then A7: ( x . i ) in ( B . i ) by A4,PBOOLE:def 1;
( A . i ) c= ( B . i ) by A5,A6,PBOOLE:def 2;
then ( ( A . i ) \/ { ( x . i ) } ) c= ( B . i ) by A7,SETWISEO:5;
then ( ( A . i ) \/ ( { x } . i ) ) c= ( B . i ) by A6,CKB4:def 1;
hence thesis by A6,PBOOLE:def 4;
end;
