environ
vocabularies ORDINAL2,ORDINAL1,FUNCT_1,XBOOLE_0,RELAT_1,TARSKI,ORDINAL3,SUBSET_1,CLASSES2,ZFMISC_1,CARD_1,ORDINAL4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,ORDINAL1,ORDINAL2,ORDINAL3,CARD_1,CLASSES2,CKB6;
definitions ORDINAL1,TARSKI,ORDINAL2,XBOOLE_0,RELAT_1,CKB6;
theorems ZFMISC_1,FUNCT_1,GRFUNC_1,ORDINAL1,ORDINAL2,ORDINAL3,CARD_2,CLASSES2,RELAT_1,CLASSES1,XBOOLE_0,XBOOLE_1,FUNCT_2,RELSET_1,CARD_1,CKB1,CKB2,CKB3,CKB5,CKB6,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37;
schemes ORDINAL1,ORDINAL2,FINSET_1;
registrations XBOOLE_0,FUNCT_1,ORDINAL1,ORDINAL2,ORDINAL3,CARD_1,CLASSES2,RELSET_1,CKB4,CKB8;
constructors WELLORD2,FUNCOP_1,ORDINAL3,CARD_1,CLASSES1,CLASSES2,RELSET_1,CKB6;
requirements SUBSET,BOOLE,NUMERALS;
begin
reserve A for Ordinal;
reserve B for Ordinal;
reserve C for Ordinal;
theorem
((C <> ( {} ) & A c= B) implies ( exp (C,A) ) c= ( exp (C,B) ))
proof
A1: (A c< B iff (A c= B & A <> B)) by XBOOLE_0:def 8;
assume C <> ( {} );
then ( {} ) in C by ORDINAL3:8;
then A2: 1 c= C by CKB3:1,ORDINAL1:21;
assume A c= B;
then A3: (A in B or A = B) by A1,ORDINAL1:11;
now
per cases ;
suppose A4: C = 1;

then ( exp (C,A) ) = 1 by ORDINAL2:46;
hence thesis by A4,ORDINAL2:46;
end;
suppose C <> 1;

then 1 c< C by A2,XBOOLE_0:def 8;
then 1 in C by ORDINAL1:11;
then (( exp (C,A) ) in ( exp (C,B) ) or ( exp (C,A) ) = ( exp (C,B) )) by A3,CKB35:1;
hence thesis by ORDINAL1:def 2;
end;
end;
hence thesis;
end;
