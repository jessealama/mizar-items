environ
vocabularies ORDINAL2,ORDINAL1,FUNCT_1,XBOOLE_0,RELAT_1,TARSKI,ORDINAL3,SUBSET_1,CLASSES2,ZFMISC_1,CARD_1,ORDINAL4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,ORDINAL1,ORDINAL2,ORDINAL3,CARD_1,CLASSES2;
definitions ORDINAL1,TARSKI,ORDINAL2,XBOOLE_0,RELAT_1;
theorems ZFMISC_1,FUNCT_1,GRFUNC_1,ORDINAL1,ORDINAL2,ORDINAL3,CARD_2,CLASSES2,RELAT_1,CLASSES1,XBOOLE_0,XBOOLE_1,FUNCT_2,RELSET_1,CARD_1,CKB1,CKB2,CKB3;
schemes ORDINAL1,ORDINAL2,FINSET_1;
registrations XBOOLE_0,FUNCT_1,ORDINAL1,ORDINAL2,ORDINAL3,CARD_1,CLASSES2,RELSET_1,CKB4;
constructors WELLORD2,FUNCOP_1,ORDINAL3,CARD_1,CLASSES1,CLASSES2,RELSET_1;
requirements SUBSET,BOOLE,NUMERALS;
begin
reserve fi for Ordinal-Sequence;
reserve A for Ordinal;
reserve B for Ordinal;
reserve C for Ordinal;
reserve D for Ordinal;
theorem
(( dom fi ) = ( succ A ) implies (( last fi ) is_limes_of fi & ( lim fi ) = ( last fi )))
proof
assume A1: ( dom fi ) = ( succ A );
then A2: ( last fi ) = ( fi . A ) by ORDINAL2:6;
thus ( last fi ) is_limes_of fi
proof
per cases ;
case A3: ( last fi ) = ( {} );
take A;
thus A in ( dom fi ) by A1,ORDINAL1:6;
let B;
assume that
A4: A c= B
and
A5: B in ( dom fi );
B c= A by A1,A5,ORDINAL1:22;
hence thesis by A2,A3,A4,XBOOLE_0:def 10;
end;
case ( last fi ) <> ( {} );
let B;
let C;
assume that
A6: B in ( last fi )
and
A7: ( last fi ) in C;
take A;
thus A in ( dom fi ) by A1,ORDINAL1:6;
let D;
assume that
A8: A c= D
and
A9: D in ( dom fi );
D c= A by A1,A9,ORDINAL1:22;
hence thesis by A2,A6,A7,A8,XBOOLE_0:def 10;
end;
end;

hence thesis by ORDINAL2:def 10;
end;
