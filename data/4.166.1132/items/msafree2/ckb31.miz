environ
vocabularies MSUALG_1,GLIB_000,SUBSET_1,XBOOLE_0,UNIALG_2,STRUCT_0,RELAT_1,TARSKI,FUNCT_1,FUNCOP_1,PBOOLE,CARD_3,FINSEQ_1,MARGREL1,NAT_1,PARTFUN1,PRELAMB,MSAFREE,MSUALG_3,TREES_4,REALSET1,MSUALG_2,FINSET_1,PRALG_1,CARD_1,TREES_2,DTCONSTR,TREES_3,ZFMISC_1,LANG1,TDGROUP,TREES_1,MSAFREE2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NAT_1,CARD_1,RELAT_1,FUNCT_1,PARTFUN1,FINSET_1,FINSEQ_1,FUNCT_2,CARD_3,TREES_1,TREES_2,TREES_3,TREES_4,PBOOLE,STRUCT_0,MSUALG_1,FINSEQ_2,MSAFREE,MSUALG_2,FUNCOP_1,DTCONSTR,LANG1,PRE_POLY,RELSET_1,MSUALG_3,CKB1,CKB2,CKB3,CKB4,CKB9,CKB13,CKB14,CKB17,CKB19,CKB20,CKB22,CKB23,CKB25,CKB27;
definitions TARSKI,MSUALG_1,FINSET_1,MSUALG_2,FUNCT_1,STRUCT_0,PBOOLE,FUNCOP_1,CKB2,CKB3,CKB4,CKB9,CKB13,CKB14,CKB17,CKB19,CKB20,CKB22,CKB23,CKB25,CKB27;
theorems TARSKI,ZFMISC_1,FINSEQ_1,FINSEQ_3,FUNCT_1,FUNCT_2,TREES_3,TREES_4,SUBSET_1,CARD_3,FUNCOP_1,PBOOLE,MSUALG_1,MSUALG_2,MSAFREE,CARD_2,CARD_1,DTCONSTR,LANG1,PRE_CIRC,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,FINSET_1,PARTFUN1,FINSEQ_2,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB13,CKB14,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB25,CKB27,CKB29,CKB30;
schemes DOMAIN_1,PBOOLE,MSAFREE1,FUNCT_1;
registrations XBOOLE_0,FUNCT_1,RELSET_1,FUNCOP_1,FINSET_1,TREES_1,CARD_3,TREES_2,TREES_3,PRE_CIRC,STRUCT_0,DTCONSTR,RELAT_1,MSUALG_1,MSUALG_2,MSAFREE,ORDINAL1,PBOOLE,FINSEQ_1,CKB10,CKB11,CKB12,CKB15,CKB16,CKB24,CKB26,CKB28;
constructors XXREAL_0,NAT_1,MSUALG_3,MSAFREE,SEQ_4,RELSET_1,PRE_POLY,FINSEQ_2,CKB2,CKB3,CKB4,CKB9,CKB13,CKB14,CKB17,CKB19,CKB20,CKB22,CKB23,CKB25,CKB27;
requirements BOOLE,SUBSET;
begin
theorem
(for S being non void non empty ManySortedSign holds (for A being  non-empty MSAlgebra over S holds (for v being (Vertex of S) holds (for e being (Element of ( (the Sorts of ( FreeEnv A )) . v )) holds (v in ( InputVertices S ) implies (ex x being (Element of ( (the Sorts of A) . v )) st e = ( root-tree [ x,v ] )))))))
proof
let S being non void non empty ManySortedSign;
let A being  non-empty MSAlgebra over S;
let v being (Vertex of S);
let e being (Element of ( (the Sorts of ( FreeEnv A )) . v ));
( FreeEnv A ) = MSAlgebra (# ( FreeSort (the Sorts of A) ),( FreeOper (the Sorts of A) ) #) by MSAFREE:def 14;
then e in ( ( FreeSort (the Sorts of A) ) . v );
then e in ( FreeSort ((the Sorts of A),v) ) by MSAFREE:def 11;
then e in { a where a is (Element of ( TS ( DTConMSA (the Sorts of A) ) )): ((ex x being set st (x in ( (the Sorts of A) . v ) & a = ( root-tree [ x,v ] ))) or (ex o being (OperSymbol of S) st ([ o,(the carrier of S) ] = ( a . ( {} ) ) & ( the_result_sort_of o ) = v))) } by MSAFREE:def 10;
then consider a being (Element of ( TS ( DTConMSA (the Sorts of A) ) )) such that A1: a = e and A2: ((ex x being set st (x in ( (the Sorts of A) . v ) & a = ( root-tree [ x,v ] ))) or (ex o being (OperSymbol of S) st ([ o,(the carrier of S) ] = ( a . ( {} ) ) & ( the_result_sort_of o ) = v)));
assume v in ( InputVertices S );
then consider x being set such that A3: x in ( (the Sorts of A) . v ) and A4: a = ( root-tree [ x,v ] ) by A2,CKB6:1;
reconsider x as (Element of ( (the Sorts of A) . v )) by A3;
take x;
thus thesis by A1,A4;
end;
