environ
vocabularies ORDINAL1,RELAT_1,FUNCT_1,XBOOLE_0,TARSKI,WELLORD1,WELLORD2,ZFMISC_1,ORDINAL2,FUNCOP_1,FINSET_1,SUBSET_1,MCART_1,CARD_1,BSPACE;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,ENUMSET1,MCART_1,FUNCT_1,FUNCOP_1,WELLORD1,ORDINAL1,ORDINAL2,WELLORD2,FINSET_1,CKB1,CKB2,CKB4,CKB10;
definitions ORDINAL1,TARSKI,FUNCT_1,FINSET_1,WELLORD2,XBOOLE_0,RELAT_1,CKB2,CKB10;
theorems TARSKI,FUNCT_1,ZFMISC_1,ORDINAL1,ORDINAL2,WELLORD1,WELLORD2,RELAT_1,FINSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,ENUMSET1,ORDINAL3,MCART_1,CKB2,CKB6,CKB7,CKB8,CKB9,CKB10,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
schemes ORDINAL1,ORDINAL2,FUNCT_1,FINSET_1,XBOOLE_0,PARTFUN1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,ZFMISC_1,CKB3,CKB5,CKB11,CKB12,CKB13;
constructors ENUMSET1,WELLORD1,WELLORD2,FUNCOP_1,ORDINAL2,FINSET_1,CKB2,CKB10;
requirements NUMERALS,SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve Z for set;
reserve a for set;
reserve f for Function;
theorem
Th29: (not X,( bool X ) are_equipotent )
proof
given f such that
f is  one-to-one
and
A1: (( dom f ) = X & ( rng f ) = ( bool X ));

defpred P[ set ]
 means
(for Y holds (Y = ( f . $1 ) implies (not $1 in Y)));
consider Z such that A2: (a in Z iff (a in X & P[ a ])) from XBOOLE_0:sch 1;
Z c= X
proof
let a;
thus thesis by A2;
end;
then consider a such that A3: a in X and A4: Z = ( f . a ) by A1,FUNCT_1:def 3;
(not a in Z) by A2,A4;
then (ex Y st (Y = ( f . a ) & a in Y)) by A2,A3;
hence contradiction by A2,A4;
end;
