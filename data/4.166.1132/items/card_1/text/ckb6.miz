environ
vocabularies ORDINAL1,RELAT_1,FUNCT_1,XBOOLE_0,TARSKI,WELLORD1,WELLORD2,ZFMISC_1,ORDINAL2,FUNCOP_1,FINSET_1,SUBSET_1,MCART_1,CARD_1,BSPACE;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,ENUMSET1,MCART_1,FUNCT_1,FUNCOP_1,WELLORD1,ORDINAL1,ORDINAL2,WELLORD2,FINSET_1,CKB1,CKB2,CKB4;
definitions ORDINAL1,TARSKI,FUNCT_1,FINSET_1,WELLORD2,XBOOLE_0,RELAT_1,CKB2;
theorems TARSKI,FUNCT_1,ZFMISC_1,ORDINAL1,ORDINAL2,WELLORD1,WELLORD2,RELAT_1,FINSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,ENUMSET1,ORDINAL3,MCART_1,CKB2;
schemes ORDINAL1,ORDINAL2,FUNCT_1,FINSET_1,XBOOLE_0,PARTFUN1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,ZFMISC_1,CKB3,CKB5;
constructors ENUMSET1,WELLORD1,WELLORD2,FUNCOP_1,ORDINAL2,FINSET_1,CKB2;
requirements NUMERALS,SUBSET,BOOLE;
begin
reserve A for Ordinal;
reserve X for set;
reserve R for Relation;
reserve f for Function;
theorem
Th4: (for X holds (ex A st X,A are_equipotent ))
proof
let X;
consider R such that A1: R well_orders X by WELLORD2:17;
set Q = ( R |_2 X );
take A = ( order_type_of Q );
Q is  well-ordering by A1,WELLORD2:16;
then Q,( RelIncl A ) are_isomorphic  by WELLORD2:def 2;
then consider f such that A2: f is_isomorphism_of Q,( RelIncl A ) by WELLORD1:def 8;
take f;
(( dom f ) = ( field Q ) & ( rng f ) = ( field ( RelIncl A ) )) by A2,WELLORD1:def 7;
hence thesis by A1,A2,WELLORD1:def 7,WELLORD2:16,WELLORD2:def 1;
end;
