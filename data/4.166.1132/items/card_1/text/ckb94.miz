environ
vocabularies ORDINAL1,RELAT_1,FUNCT_1,XBOOLE_0,TARSKI,WELLORD1,WELLORD2,ZFMISC_1,ORDINAL2,FUNCOP_1,FINSET_1,SUBSET_1,MCART_1,CARD_1,BSPACE;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,ENUMSET1,MCART_1,FUNCT_1,FUNCOP_1,WELLORD1,ORDINAL1,ORDINAL2,WELLORD2,FINSET_1,CKB1,CKB2,CKB4,CKB10,CKB24,CKB29,CKB30,CKB60,CKB61,CKB89,CKB90;
definitions ORDINAL1,TARSKI,FUNCT_1,FINSET_1,WELLORD2,XBOOLE_0,RELAT_1,CKB2,CKB10,CKB24,CKB29,CKB30,CKB89;
theorems TARSKI,FUNCT_1,ZFMISC_1,ORDINAL1,ORDINAL2,WELLORD1,WELLORD2,RELAT_1,FINSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,ENUMSET1,ORDINAL3,MCART_1,CKB2,CKB6,CKB7,CKB8,CKB9,CKB10,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB62,CKB65,CKB67,CKB71,CKB73,CKB74,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB91,CKB92;
schemes ORDINAL1,ORDINAL2,FUNCT_1,FINSET_1,XBOOLE_0,PARTFUN1,CKB63,CKB64;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,ZFMISC_1,CKB3,CKB5,CKB11,CKB12,CKB13,CKB31,CKB52,CKB66,CKB68,CKB69,CKB70,CKB72,CKB75,CKB76,CKB77,CKB93;
constructors ENUMSET1,WELLORD1,WELLORD2,FUNCOP_1,ORDINAL2,FINSET_1,CKB2,CKB10,CKB24,CKB29,CKB30,CKB60,CKB61,CKB89,CKB90;
requirements NUMERALS,SUBSET,BOOLE;
begin
reserve A for Ordinal;
reserve B for Ordinal;
reserve X for set;
reserve x for set;
reserve y for set;
registration
let A being  infinite set;
cluster ( bool A ) ->  infinite;
coherence
proof
defpred P[ set ]
 means
(ex y st $1 = { y });
consider X being set such that A1: (for x holds (x in X iff (x in ( bool A ) & P[ x ]))) from XBOOLE_0:sch 1;
(for x holds (x in ( union X ) iff x in A))
proof
let x;
thus (x in ( union X ) implies x in A)
proof
assume x in ( union X );
then consider B being set such that A2: x in B and A3: B in X by TARSKI:def 4;
B in ( bool A ) by A1,A3;
hence thesis by A2;
end;

assume x in A;
then { x } c= A by ZFMISC_1:31;
then A4: { x } in X by A1;
x in { x } by TARSKI:def 1;
hence thesis by A4,TARSKI:def 4;
end;
then A5: ( union X ) = A by TARSKI:1;
A6: (for B being set holds (B in X implies B is  finite))
proof
let B being set;
assume B in X;
then (ex y st B = { y }) by A1;
hence thesis;
end;
A7: X c= ( bool A )
proof
let x;
assume x in X;
hence thesis by A1;
end;
assume ( bool A ) is  finite;
hence thesis by A5,A6,A7,FINSET_1:7;
end;
end;
