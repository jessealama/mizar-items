environ
vocabularies FINSEQ_1,CARD_1,ORDINAL4,SUBSET_1,NUMBERS,ARYTM_3,TARSKI,RELAT_1,XBOOLE_0,FUNCT_1,QC_LANG1,XBOOLEAN,HILBERT1,MODELC_2,CQC_THE1,NAT_1,XXREAL_0,LTLAXIO1,ORDINAL1,ARYTM_1,ZF_LANG,PARTFUN1,MARGREL1,FUNCT_2,HILBERT2,ZFMISC_1,FUNCOP_1,ZF_MODEL,PBOOLE,GLIB_000;
notations TARSKI,XBOOLE_0,ZFMISC_1,DOMAIN_1,SUBSET_1,RELAT_1,PARTFUN1,NUMBERS,XCMPLX_0,NAT_1,XXREAL_0,NAT_D,FUNCT_1,FUNCT_2,BINOP_1,ORDINAL1,FINSEQ_1,HILBERT1,HILBERT2,PBOOLE,XBOOLEAN,MARGREL1,AOFA_I00,CKB5,CKB6,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
definitions XBOOLEAN,TARSKI,MARGREL1,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20;
theorems TARSKI,NAT_1,XBOOLE_0,XXREAL_0,FINSEQ_1,NAT_D,XBOOLEAN,FUNCT_2,PARTFUN1,XREAL_1,ZFMISC_1,ORDINAL1,FUNCOP_1,HILBERT2,BINOP_1,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
schemes NAT_1,XBOOLE_0,FUNCT_2,FINSEQ_1,BINOP_1,HILBERT2;
registrations SUBSET_1,ORDINAL1,FUNCT_1,XXREAL_0,NAT_1,XBOOLEAN,RELSET_1,MARGREL1,XBOOLE_0,XREAL_0,FUNCT_2,HILBERT1;
constructors XXREAL_0,NAT_D,RELSET_1,AOFA_I00,HILBERT2,DOMAIN_1,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20;
requirements NUMERALS,BOOLE,SUBSET,ARITHM,REAL;
begin
reserve p for (Element of ( LTLB_WFF ));
reserve q for (Element of ( LTLB_WFF ));
reserve i for (Element of ( NAT ));
reserve j for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve M for LTLModel;
theorem
Th13: (( ( SAT M ) . [ n,( p 'U' q ) ] ) = 1 iff (ex i st (( ( SAT M ) . [ ( n + i ),q ] ) = 1 & (for j holds (j < i implies ( ( SAT M ) . [ ( n + j ),p ] ) = 1)))))
proof
set sm = ( SAT M );
hereby
assume A1: ( sm . [ n,( p 'U' q ) ] ) = 1;
per cases  by A1,CKB24:1;
suppose A2: ( sm . [ n,q ] ) = 1;

A3: (for j holds (j < ( 0 ) implies ( sm . [ ( n + j ),p ] ) = 1));
( sm . [ ( n + ( 0 ) ),q ] ) = 1 by A2;
hence (ex i st (( sm . [ ( n + i ),q ] ) = 1 & (for j holds (j < i implies ( sm . [ ( n + j ),p ] ) = 1)))) by A3;
end;
suppose A4: ( sm . [ n,( p '&&' ( p 'Us' q ) ) ] ) = 1;

then ( sm . [ n,( p 'Us' q ) ] ) = 1 by CKB23:1;
then consider i such that ( 0 ) < i and A5: ( sm . [ ( n + i ),q ] ) = 1 and A6: (for j holds ((1 <= j & j < i) implies ( sm . [ ( n + j ),p ] ) = 1)) by CKB20:def 1;
now
let j;
assume A7: j < i;
per cases ;
suppose j = ( 0 );

hence ( sm . [ ( n + j ),p ] ) = 1 by A4,CKB23:1;
end;
suppose (not j = ( 0 ));

then 1 <= j by NAT_1:25;
hence ( sm . [ ( n + j ),p ] ) = 1 by A6,A7;
end;
end;
hence (ex i st (( sm . [ ( n + i ),q ] ) = 1 & (for j holds (j < i implies ( sm . [ ( n + j ),p ] ) = 1)))) by A5;
end;
end;
assume (ex i st (( sm . [ ( n + i ),q ] ) = 1 & (for j holds (j < i implies ( sm . [ ( n + j ),p ] ) = 1))));
then consider i such that A8: ( sm . [ ( n + i ),q ] ) = 1 and A9: (for j holds (j < i implies ( sm . [ ( n + j ),p ] ) = 1));
per cases ;
suppose i = ( 0 );

hence ( sm . [ n,( p 'U' q ) ] ) = 1 by A8,CKB24:1;
end;
suppose A10: (not i = ( 0 ));

(for j holds ((1 <= j & j < i) implies ( sm . [ ( n + j ),p ] ) = 1)) by A9;
then A12: ( sm . [ n,( p 'Us' q ) ] ) = 1 by A8,A10,CKB20:def 1;
( sm . [ ( n + ( 0 ) ),p ] ) = 1 by A9,A10;
then ( sm . [ n,( p '&&' ( p 'Us' q ) ) ] ) = 1 by A12,CKB23:1;
hence ( sm . [ n,( p 'U' q ) ] ) = 1 by CKB24:1;
end;
end;
