environ
vocabularies FINSEQ_1,CARD_1,ORDINAL4,SUBSET_1,NUMBERS,ARYTM_3,TARSKI,RELAT_1,XBOOLE_0,FUNCT_1,QC_LANG1,XBOOLEAN,HILBERT1,MODELC_2,CQC_THE1,NAT_1,XXREAL_0,LTLAXIO1,ORDINAL1,ARYTM_1,ZF_LANG,PARTFUN1,MARGREL1,FUNCT_2,HILBERT2,ZFMISC_1,FUNCOP_1,ZF_MODEL,PBOOLE,GLIB_000;
notations TARSKI,XBOOLE_0,ZFMISC_1,DOMAIN_1,SUBSET_1,RELAT_1,PARTFUN1,NUMBERS,XCMPLX_0,NAT_1,XXREAL_0,NAT_D,FUNCT_1,FUNCT_2,BINOP_1,ORDINAL1,FINSEQ_1,HILBERT1,HILBERT2,PBOOLE,XBOOLEAN,MARGREL1,AOFA_I00,CKB5,CKB6,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB38,CKB39,CKB40,CKB50,CKB53,CKB55;
definitions XBOOLEAN,TARSKI,MARGREL1,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB38,CKB39,CKB40,CKB50,CKB53,CKB55;
theorems TARSKI,NAT_1,XBOOLE_0,XXREAL_0,FINSEQ_1,NAT_D,XBOOLEAN,FUNCT_2,PARTFUN1,XREAL_1,ZFMISC_1,ORDINAL1,FUNCOP_1,HILBERT2,BINOP_1,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55;
schemes NAT_1,XBOOLE_0,FUNCT_2,FINSEQ_1,BINOP_1,HILBERT2;
registrations SUBSET_1,ORDINAL1,FUNCT_1,XXREAL_0,NAT_1,XBOOLEAN,RELSET_1,MARGREL1,XBOOLE_0,XREAL_0,FUNCT_2,HILBERT1;
constructors XXREAL_0,NAT_D,RELSET_1,AOFA_I00,HILBERT2,DOMAIN_1,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB38,CKB39,CKB40,CKB50,CKB53,CKB55;
requirements NUMERALS,BOOLE,SUBSET,ARITHM,REAL;
begin
definition
func LTL_axioms -> (Subset of ( LTLB_WFF ))
means
:Def19: (it is  with_LTL_axioms & (for D being (Subset of ( LTLB_WFF )) holds (D is  with_LTL_axioms implies it c= D)));
existence
proof
defpred S1[ set ]
 means
(for D being set holds (D is  with_LTL_axioms implies $1 in D));
consider D0 being set such that A1: (for x being set holds (x in D0 iff (x in ( LTLB_WFF ) & S1[ x ]))) from XBOOLE_0:sch 1;
D0 c= ( LTLB_WFF )
proof
let x being set;
assume x in D0;
hence thesis by A1;
end;
then reconsider D0 as (Subset of ( LTLB_WFF ));
take D0;
thus D0 is  with_LTL_axioms
proof
let p being (Element of ( LTLB_WFF )),q being (Element of ( LTLB_WFF ));
thus (p is  LTL_TAUT_OF_PL implies p in D0)
proof
assume p is  LTL_TAUT_OF_PL;
then (for D being set holds (D is  with_LTL_axioms implies p in D)) by CKB55:def 1;
hence thesis by A1;
end;

(for D being set holds (D is  with_LTL_axioms implies ( ( 'not' ( 'X' p ) ) => ( 'X' ( 'not' p ) ) ) in D)) by CKB55:def 1;
hence ( ( 'not' ( 'X' p ) ) => ( 'X' ( 'not' p ) ) ) in D0 by A1;
(for D being set holds (D is  with_LTL_axioms implies ( ( 'X' ( 'not' p ) ) => ( 'not' ( 'X' p ) ) ) in D)) by CKB55:def 1;
hence ( ( 'X' ( 'not' p ) ) => ( 'not' ( 'X' p ) ) ) in D0 by A1;
(for D being set holds (D is  with_LTL_axioms implies ( ( 'X' ( p => q ) ) => ( ( 'X' p ) => ( 'X' q ) ) ) in D)) by CKB55:def 1;
hence ( ( 'X' ( p => q ) ) => ( ( 'X' p ) => ( 'X' q ) ) ) in D0 by A1;
(for D being set holds (D is  with_LTL_axioms implies ( ( 'G' p ) => ( p '&&' ( 'X' ( 'G' p ) ) ) ) in D)) by CKB55:def 1;
hence ( ( 'G' p ) => ( p '&&' ( 'X' ( 'G' p ) ) ) ) in D0 by A1;
(for D being set holds (D is  with_LTL_axioms implies ( ( p 'Us' q ) => ( ( 'X' q ) 'or' ( 'X' ( p '&&' ( p 'Us' q ) ) ) ) ) in D)) by CKB55:def 1;
hence ( ( p 'Us' q ) => ( ( 'X' q ) 'or' ( 'X' ( p '&&' ( p 'Us' q ) ) ) ) ) in D0 by A1;
(for D being set holds (D is  with_LTL_axioms implies ( ( ( 'X' q ) 'or' ( 'X' ( p '&&' ( p 'Us' q ) ) ) ) => ( p 'Us' q ) ) in D)) by CKB55:def 1;
hence ( ( ( 'X' q ) 'or' ( 'X' ( p '&&' ( p 'Us' q ) ) ) ) => ( p 'Us' q ) ) in D0 by A1;
(for D being set holds (D is  with_LTL_axioms implies ( ( p 'Us' q ) => ( 'X' ( 'F' q ) ) ) in D)) by CKB55:def 1;
hence ( ( p 'Us' q ) => ( 'X' ( 'F' q ) ) ) in D0 by A1;
end;

let D being (Subset of ( LTLB_WFF ));
assume A2: D is  with_LTL_axioms;
let x being set;
assume x in D0;
hence x in D by A1,A2;
end;
uniqueness
proof
let D1 being (Subset of ( LTLB_WFF )),D2 being (Subset of ( LTLB_WFF ));
assume (((D1 is  with_LTL_axioms & (for D being (Subset of ( LTLB_WFF )) holds (D is  with_LTL_axioms implies D1 c= D))) & D2 is  with_LTL_axioms) & (for D being (Subset of ( LTLB_WFF )) holds (D is  with_LTL_axioms implies D2 c= D)));
then (D1 c= D2 & D2 c= D1);
hence D1 = D2 by XBOOLE_0:def 10;
end;
end;
