environ
vocabularies FINSEQ_1,CARD_1,ORDINAL4,SUBSET_1,NUMBERS,ARYTM_3,TARSKI,RELAT_1,XBOOLE_0,FUNCT_1,QC_LANG1,XBOOLEAN,HILBERT1,MODELC_2,CQC_THE1,NAT_1,XXREAL_0,LTLAXIO1,ORDINAL1,ARYTM_1,ZF_LANG,PARTFUN1,MARGREL1,FUNCT_2,HILBERT2,ZFMISC_1,FUNCOP_1,ZF_MODEL,PBOOLE,GLIB_000;
notations TARSKI,XBOOLE_0,ZFMISC_1,DOMAIN_1,SUBSET_1,RELAT_1,PARTFUN1,NUMBERS,XCMPLX_0,NAT_1,XXREAL_0,NAT_D,FUNCT_1,FUNCT_2,BINOP_1,ORDINAL1,FINSEQ_1,HILBERT1,HILBERT2,PBOOLE,XBOOLEAN,MARGREL1,AOFA_I00,CKB5,CKB6,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB38,CKB39,CKB40,CKB50,CKB53,CKB55,CKB56,CKB60,CKB61,CKB62,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70;
definitions XBOOLEAN,TARSKI,MARGREL1,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB38,CKB39,CKB40,CKB50,CKB53,CKB55,CKB56,CKB60,CKB61,CKB62,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70;
theorems TARSKI,NAT_1,XBOOLE_0,XXREAL_0,FINSEQ_1,NAT_D,XBOOLEAN,FUNCT_2,PARTFUN1,XREAL_1,ZFMISC_1,ORDINAL1,FUNCOP_1,HILBERT2,BINOP_1,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB58,CKB59,CKB60,CKB61,CKB62,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70;
schemes NAT_1,XBOOLE_0,FUNCT_2,FINSEQ_1,BINOP_1,HILBERT2;
registrations SUBSET_1,ORDINAL1,FUNCT_1,XXREAL_0,NAT_1,XBOOLEAN,RELSET_1,MARGREL1,XBOOLE_0,XREAL_0,FUNCT_2,HILBERT1,CKB57,CKB63;
constructors XXREAL_0,NAT_D,RELSET_1,AOFA_I00,HILBERT2,DOMAIN_1,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB38,CKB39,CKB40,CKB50,CKB53,CKB55,CKB56,CKB60,CKB61,CKB62,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70;
requirements NUMERALS,BOOLE,SUBSET,ARITHM,REAL;
begin
reserve p for (Element of ( LTLB_WFF ));
reserve q for (Element of ( LTLB_WFF ));
reserve A for (Element of ( LTLB_WFF ));
theorem
Th38: (for A being (Element of ( LTL_axioms )) holds (((((((A is  LTL_TAUT_OF_PL or A is  axltl1) or A is  axltl1a) or A is  axltl2) or A is  axltl3) or A is  axltl4) or A is  axltl5) or A is  axltl6))
proof
defpred P1[ (Element of ( LTL_axioms )) ]
 means
((((((($1 is  LTL_TAUT_OF_PL or $1 is  axltl1) or $1 is  axltl1a) or $1 is  axltl2) or $1 is  axltl3) or $1 is  axltl4) or $1 is  axltl5) or $1 is  axltl6);
set X = { p where p is (Element of ( LTL_axioms )): P1[ p ] };
X c= ( LTLB_WFF )
proof
let x being set;
assume x in X;
then (ex p being (Element of ( LTL_axioms )) st (x = p & P1[ p ]));
hence x in ( LTLB_WFF );
end;
then reconsider X as (Subset of ( LTLB_WFF ));
let A being (Element of ( LTL_axioms ));
X is  with_LTL_axioms
proof
let p;
let q;
thus (p is  LTL_TAUT_OF_PL implies p in X)
proof
assume A1: p is  LTL_TAUT_OF_PL;
then reconsider p1 = p as (Element of ( LTL_axioms )) by CKB55:def 1;
P1[ p1 ] by A1;
hence thesis;
end;

thus ( ( 'not' ( 'X' p ) ) => ( 'X' ( 'not' p ) ) ) in X
proof
reconsider pp = ( ( 'not' ( 'X' p ) ) => ( 'X' ( 'not' p ) ) ) as (Element of ( LTL_axioms )) by CKB55:def 1;
P1[ pp ] by CKB64:def 1;
hence thesis;
end;

thus ( ( 'X' ( 'not' p ) ) => ( 'not' ( 'X' p ) ) ) in X
proof
reconsider pp = ( ( 'X' ( 'not' p ) ) => ( 'not' ( 'X' p ) ) ) as (Element of ( LTL_axioms )) by CKB55:def 1;
P1[ pp ] by CKB65:def 1;
hence thesis;
end;

thus ( ( 'X' ( p => q ) ) => ( ( 'X' p ) => ( 'X' q ) ) ) in X
proof
reconsider pp = ( ( 'X' ( p => q ) ) => ( ( 'X' p ) => ( 'X' q ) ) ) as (Element of ( LTL_axioms )) by CKB55:def 1;
P1[ pp ] by CKB66:def 1;
hence thesis;
end;

thus ( ( 'G' p ) => ( p '&&' ( 'X' ( 'G' p ) ) ) ) in X
proof
reconsider pp = ( ( 'G' p ) => ( p '&&' ( 'X' ( 'G' p ) ) ) ) as (Element of ( LTL_axioms )) by CKB55:def 1;
P1[ pp ] by CKB67:def 1;
hence thesis;
end;

thus ( ( p 'Us' q ) => ( ( 'X' q ) 'or' ( 'X' ( p '&&' ( p 'Us' q ) ) ) ) ) in X
proof
reconsider pp = ( ( p 'Us' q ) => ( ( 'X' q ) 'or' ( 'X' ( p '&&' ( p 'Us' q ) ) ) ) ) as (Element of ( LTL_axioms )) by CKB55:def 1;
P1[ pp ] by CKB68:def 1;
hence thesis;
end;

thus ( ( ( 'X' q ) 'or' ( 'X' ( p '&&' ( p 'Us' q ) ) ) ) => ( p 'Us' q ) ) in X
proof
reconsider pp = ( ( ( 'X' q ) 'or' ( 'X' ( p '&&' ( p 'Us' q ) ) ) ) => ( p 'Us' q ) ) as (Element of ( LTL_axioms )) by CKB55:def 1;
P1[ pp ] by CKB69:def 1;
hence thesis;
end;

thus ( ( p 'Us' q ) => ( 'X' ( 'F' q ) ) ) in X
proof
reconsider pp = ( ( p 'Us' q ) => ( 'X' ( 'F' q ) ) ) as (Element of ( LTL_axioms )) by CKB55:def 1;
P1[ pp ] by CKB70:def 1;
hence thesis;
end;

end;
then (A in ( LTL_axioms ) & ( LTL_axioms ) c= X) by CKB56:def 1;
then A in X;
then (ex p being (Element of ( LTL_axioms )) st (A = p & P1[ p ]));
hence P1[ A ];
end;
