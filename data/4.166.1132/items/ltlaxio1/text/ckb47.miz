environ
vocabularies FINSEQ_1,CARD_1,ORDINAL4,SUBSET_1,NUMBERS,ARYTM_3,TARSKI,RELAT_1,XBOOLE_0,FUNCT_1,QC_LANG1,XBOOLEAN,HILBERT1,MODELC_2,CQC_THE1,NAT_1,XXREAL_0,LTLAXIO1,ORDINAL1,ARYTM_1,ZF_LANG,PARTFUN1,MARGREL1,FUNCT_2,HILBERT2,ZFMISC_1,FUNCOP_1,ZF_MODEL,PBOOLE,GLIB_000;
notations TARSKI,XBOOLE_0,ZFMISC_1,DOMAIN_1,SUBSET_1,RELAT_1,PARTFUN1,NUMBERS,XCMPLX_0,NAT_1,XXREAL_0,NAT_D,FUNCT_1,FUNCT_2,BINOP_1,ORDINAL1,FINSEQ_1,HILBERT1,HILBERT2,PBOOLE,XBOOLEAN,MARGREL1,AOFA_I00,CKB5,CKB6,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB38,CKB39,CKB40;
definitions XBOOLEAN,TARSKI,MARGREL1,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB38,CKB39,CKB40;
theorems TARSKI,NAT_1,XBOOLE_0,XXREAL_0,FINSEQ_1,NAT_D,XBOOLEAN,FUNCT_2,PARTFUN1,XREAL_1,ZFMISC_1,ORDINAL1,FUNCOP_1,HILBERT2,BINOP_1,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46;
schemes NAT_1,XBOOLE_0,FUNCT_2,FINSEQ_1,BINOP_1,HILBERT2;
registrations SUBSET_1,ORDINAL1,FUNCT_1,XXREAL_0,NAT_1,XBOOLEAN,RELSET_1,MARGREL1,XBOOLE_0,XREAL_0,FUNCT_2,HILBERT1;
constructors XXREAL_0,NAT_D,RELSET_1,AOFA_I00,HILBERT2,DOMAIN_1,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB38,CKB39,CKB40;
requirements NUMERALS,BOOLE,SUBSET,ARITHM,REAL;
begin
reserve r for (Element of ( LTLB_WFF ));
reserve s for (Element of ( LTLB_WFF ));
reserve A for (Element of ( LTLB_WFF ));
reserve i for (Element of ( NAT ));
reserve j for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve M for LTLModel;
theorem
Th29: ( ( SAT ( M ^\ i ) ) . [ j,A ] ) = ( ( SAT M ) . [ ( i + j ),A ] )
proof
defpred P1[ (Element of ( LTLB_WFF )) ]
 means
(for k holds ( ( SAT ( M ^\ i ) ) . [ k,$1 ] ) = ( ( SAT M ) . [ ( i + k ),$1 ] ));
A1: (for n being (Element of ( NAT )) holds P1[ ( prop n ) ])
proof
let n;
let k;
per cases ;
suppose A2: ( prop n ) in ( ( M ^\ i ) . k );

then A3: ( prop n ) in ( M . ( i + k ) ) by NAT_1:def 3;
thus ( ( SAT ( M ^\ i ) ) . [ k,( prop n ) ] ) = 1 by A2,CKB20:def 1
.= ( ( SAT M ) . [ ( i + k ),( prop n ) ] ) by A3,CKB20:def 1;
end;
suppose A4: (not ( prop n ) in ( ( M ^\ i ) . k ));

then (not ( prop n ) in ( M . ( i + k ) )) by NAT_1:def 3;
then A5: (not ( ( SAT M ) . [ ( i + k ),( prop n ) ] ) = 1) by CKB20:def 1;
(not ( ( SAT ( M ^\ i ) ) . [ k,( prop n ) ] ) = 1) by A4,CKB20:def 1;
hence ( ( SAT ( M ^\ i ) ) . [ k,( prop n ) ] ) = ( 0 ) by XBOOLEAN:def 3
.= ( ( SAT M ) . [ ( i + k ),( prop n ) ] ) by A5,XBOOLEAN:def 3;
end;
end;
A6: (for r holds (for s holds ((P1[ r ] & P1[ s ]) implies (P1[ ( r 'Us' s ) ] & P1[ ( r => s ) ]))))
proof
let r being (Element of ( LTLB_WFF ));
let s being (Element of ( LTLB_WFF ));
assume that
A7: P1[ r ]
and
A8: P1[ s ];
thus P1[ ( r 'Us' s ) ]
proof
let k;
A9: (( ( SAT ( M ^\ i ) ) . [ k,( r 'Us' s ) ] ) = 1 iff ( ( SAT M ) . [ ( i + k ),( r 'Us' s ) ] ) = 1)
proof
hereby
assume ( ( SAT ( M ^\ i ) ) . [ k,( r 'Us' s ) ] ) = 1;
then consider m being (Element of ( NAT )) such that A10: ( 0 ) < m and A11: ( ( SAT ( M ^\ i ) ) . [ ( k + m ),s ] ) = 1 and A12: (for j holds ((1 <= j & j < m) implies ( ( SAT ( M ^\ i ) ) . [ ( k + j ),r ] ) = 1)) by CKB20:def 1;
A13:now
let j;
assume (1 <= j & j < m);
then ( ( SAT ( M ^\ i ) ) . [ ( k + j ),r ] ) = 1 by A12;
then ( ( SAT M ) . [ ( i + ( k + j ) ),r ] ) = 1 by A7;
hence ( ( SAT M ) . [ ( ( i + k ) + j ),r ] ) = 1;
end;
( ( SAT M ) . [ ( i + ( k + m ) ),s ] ) = 1 by A8,A11;
then ( ( SAT M ) . [ ( ( i + k ) + m ),s ] ) = 1;
hence ( ( SAT M ) . [ ( i + k ),( r 'Us' s ) ] ) = 1 by A10,A13,CKB20:def 1;
end;
assume ( ( SAT M ) . [ ( i + k ),( r 'Us' s ) ] ) = 1;
then consider m being (Element of ( NAT )) such that A14: ( 0 ) < m and A15: ( ( SAT M ) . [ ( ( i + k ) + m ),s ] ) = 1 and A16: (for j holds ((1 <= j & j < m) implies ( ( SAT M ) . [ ( ( i + k ) + j ),r ] ) = 1)) by CKB20:def 1;
A17:now
let j;
assume (1 <= j & j < m);
then ( ( SAT M ) . [ ( ( i + k ) + j ),r ] ) = 1 by A16;
then ( ( SAT M ) . [ ( i + ( k + j ) ),r ] ) = 1;
hence ( ( SAT ( M ^\ i ) ) . [ ( k + j ),r ] ) = 1 by A7;
end;
( ( SAT M ) . [ ( i + ( k + m ) ),s ] ) = 1 by A15;
then ( ( SAT ( M ^\ i ) ) . [ ( k + m ),s ] ) = 1 by A8;
hence ( ( SAT ( M ^\ i ) ) . [ k,( r 'Us' s ) ] ) = 1 by A14,A17,CKB20:def 1;
end;
per cases ;
suppose ( ( SAT ( M ^\ i ) ) . [ k,( r 'Us' s ) ] ) = 1;

hence thesis by A9;
end;
suppose (not ( ( SAT ( M ^\ i ) ) . [ k,( r 'Us' s ) ] ) = 1);

then ( ( SAT ( M ^\ i ) ) . [ k,( r 'Us' s ) ] ) = ( 0 ) by XBOOLEAN:def 3;
hence thesis by A9,XBOOLEAN:def 3;
end;
end;

thus P1[ ( r => s ) ]
proof
let k being (Element of ( NAT ));
thus ( ( SAT ( M ^\ i ) ) . [ k,( r => s ) ] ) = ( ( ( SAT ( M ^\ i ) ) . [ k,r ] ) => ( ( SAT ( M ^\ i ) ) . [ k,s ] ) ) by CKB20:def 1
.= ( ( ( SAT M ) . [ ( i + k ),r ] ) => ( ( SAT ( M ^\ i ) ) . [ k,s ] ) ) by A7
.= ( ( ( SAT M ) . [ ( i + k ),r ] ) => ( ( SAT M ) . [ ( i + k ),s ] ) ) by A8
.= ( ( SAT M ) . [ ( i + k ),( r => s ) ] ) by CKB20:def 1;
end;

end;
now
let k;
thus ( ( SAT ( M ^\ i ) ) . [ k,( TFALSUM ) ] ) = ( 0 ) by CKB20:def 1
.= ( ( SAT M ) . [ ( i + k ),( TFALSUM ) ] ) by CKB20:def 1;
end;
then A18: P1[ ( TFALSUM ) ];
(for r being (Element of ( LTLB_WFF )) holds P1[ r ]) from HILBERT2:sch 2(A18,A1,A6);
hence ( ( SAT ( M ^\ i ) ) . [ j,A ] ) = ( ( SAT M ) . [ ( i + j ),A ] );
end;
