environ
vocabularies FINSEQ_1,CARD_1,ORDINAL4,SUBSET_1,NUMBERS,ARYTM_3,TARSKI,RELAT_1,XBOOLE_0,FUNCT_1,QC_LANG1,XBOOLEAN,HILBERT1,MODELC_2,CQC_THE1,NAT_1,XXREAL_0,LTLAXIO1,ORDINAL1,ARYTM_1,ZF_LANG,PARTFUN1,MARGREL1,FUNCT_2,HILBERT2,ZFMISC_1,FUNCOP_1,ZF_MODEL,PBOOLE,GLIB_000;
notations TARSKI,XBOOLE_0,ZFMISC_1,DOMAIN_1,SUBSET_1,RELAT_1,PARTFUN1,NUMBERS,XCMPLX_0,NAT_1,XXREAL_0,NAT_D,FUNCT_1,FUNCT_2,BINOP_1,ORDINAL1,FINSEQ_1,HILBERT1,HILBERT2,PBOOLE,XBOOLEAN,MARGREL1,AOFA_I00,CKB5,CKB6,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
definitions XBOOLEAN,TARSKI,MARGREL1,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20;
theorems TARSKI,NAT_1,XBOOLE_0,XXREAL_0,FINSEQ_1,NAT_D,XBOOLEAN,FUNCT_2,PARTFUN1,XREAL_1,ZFMISC_1,ORDINAL1,FUNCOP_1,HILBERT2,BINOP_1,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35;
schemes NAT_1,XBOOLE_0,FUNCT_2,FINSEQ_1,BINOP_1,HILBERT2;
registrations SUBSET_1,ORDINAL1,FUNCT_1,XXREAL_0,NAT_1,XBOOLEAN,RELSET_1,MARGREL1,XBOOLE_0,XREAL_0,FUNCT_2,HILBERT1;
constructors XXREAL_0,NAT_D,RELSET_1,AOFA_I00,HILBERT2,DOMAIN_1,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20;
requirements NUMERALS,BOOLE,SUBSET,ARITHM,REAL;
begin
reserve B for (Element of ( LTLB_WFF ));
reserve C for (Element of ( LTLB_WFF ));
reserve i for (Element of ( NAT ));
reserve j for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve M for LTLModel;
theorem
Th21: ( ( SAT M ) . [ n,( ( ( 'X' C ) 'or' ( 'X' ( B '&&' ( B 'Us' C ) ) ) ) => ( B 'Us' C ) ) ] ) = 1
proof
set sm = ( SAT M );
A1:now
assume that
A2: ( sm . [ n,( ( 'X' C ) 'or' ( 'X' ( B '&&' ( B 'Us' C ) ) ) ) ] ) = 1
and
A3: ( sm . [ n,( B 'Us' C ) ] ) = ( 0 );
per cases  by A2,CKB24:1;
suppose A4: ( sm . [ n,( 'X' C ) ] ) = 1;

A5: (for j holds ((1 <= j & j < 1) implies ( sm . [ ( n + j ),B ] ) = 1));
( sm . [ ( n + 1 ),C ] ) = 1 by A4,CKB25:1;
hence contradiction by A3,A5,CKB20:def 1;
end;
suppose ( sm . [ n,( 'X' ( B '&&' ( B 'Us' C ) ) ) ] ) = 1;

then A6: ( sm . [ ( n + 1 ),( B '&&' ( B 'Us' C ) ) ] ) = 1 by CKB25:1;
then ( sm . [ ( n + 1 ),( B 'Us' C ) ] ) = 1 by CKB23:1;
then consider i such that i > ( 0 ) and A7: ( sm . [ ( ( n + 1 ) + i ),C ] ) = 1 and A8: (for j holds ((1 <= j & j < i) implies ( sm . [ ( ( n + 1 ) + j ),B ] ) = 1)) by CKB20:def 1;
A9:now
let j;
assume A10: (1 <= j & j < ( 1 + i ));
per cases  by A10,NAT_1:25;
suppose 1 = j;

hence ( sm . [ ( n + j ),B ] ) = 1 by A6,CKB23:1;
end;
suppose A11: (1 < j & j < ( i + 1 ));

then A12: ( 1 + ( - 1 ) ) < ( j + ( - 1 ) ) by XREAL_1:8;
then ( j - 1 ) > ( 0 );
then ( j -' 1 ) > ( 0 ) by XREAL_0:def 2;
then A13: 1 <= ( j -' 1 ) by NAT_1:25;
A14: ( ( ( n + j ) + 1 ) - 1 ) = ( ( n + 1 ) + ( j - 1 ) )
.= ( ( n + 1 ) + ( j -' 1 ) ) by A12,XREAL_0:def 2;
( j + ( - 1 ) ) < ( ( i + 1 ) + ( - 1 ) ) by A11,XREAL_1:8;
hence ( sm . [ ( n + j ),B ] ) = 1 by A8,A14,A13;
end;
end;
( sm . [ ( n + ( 1 + i ) ),C ] ) = 1 by A7;
hence contradiction by A3,A9,CKB20:def 1;
end;
end;
(( sm . [ n,( ( 'X' C ) 'or' ( 'X' ( B '&&' ( B 'Us' C ) ) ) ) ] ) = ( 0 ) or ( sm . [ n,( ( 'X' C ) 'or' ( 'X' ( B '&&' ( B 'Us' C ) ) ) ) ] ) = 1) by XBOOLEAN:def 3;
then ( ( sm . [ n,( ( 'X' C ) 'or' ( 'X' ( B '&&' ( B 'Us' C ) ) ) ) ] ) => ( sm . [ n,( B 'Us' C ) ] ) ) = 1 by A1,XBOOLEAN:def 3;
hence thesis by CKB20:def 1;
end;
