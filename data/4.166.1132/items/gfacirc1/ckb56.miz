environ
vocabularies NUMBERS,SUBSET_1,MARGREL1,FUNCT_1,FINSEQ_2,FINSEQ_1,XBOOLEAN,TWOSCOMP,CARD_1,RELAT_1,ORDINAL4,TARSKI,XBOOLE_0,CLASSES1,FSM_1,FACIRC_1,CIRCUIT2,MSAFREE2,CIRCCOMB,STRUCT_0,GLIB_000,MSUALG_1,FUNCT_4,LATTICES,CIRCUIT1,PARTFUN1,ARYTM_3,GFACIRC1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,NAT_1,RELAT_1,NUMBERS,STRUCT_0,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,MARGREL1,CLASSES1,BINARITH,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,CKB4,CKB6,CKB8,CKB10,CKB20,CKB21,CKB22,CKB23,CKB24,CKB39,CKB40,CKB41,CKB49,CKB50;
definitions TARSKI,XBOOLE_0,CIRCUIT2,FACIRC_1,MSAFREE2,XBOOLEAN,CKB4,CKB6,CKB8,CKB10,CKB20,CKB21,CKB22,CKB23,CKB24,CKB39,CKB40,CKB41,CKB49,CKB50;
theorems TARSKI,XBOOLE_0,XBOOLE_1,ZFMISC_1,ENUMSET1,RELAT_1,ORDINAL1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_6,BINARITH,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,CIRCCMB2,FACIRC_2,XBOOLEAN,CLASSES1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55;
schemes FUNCT_2,FACIRC_1,CKB1,CKB2,CKB3;
registrations RELAT_1,MARGREL1,FINSEQ_2,CARD_3,STRUCT_0,CIRCCOMB,FACIRC_1,ORDINAL1,FINSEQ_1,FUNCT_1,MSAFREE2;
constructors ENUMSET1,XXREAL_0,CLASSES1,BINARITH,CIRCUIT1,CIRCUIT2,FACIRC_1,TWOSCOMP,NAT_1,RELSET_1,CKB4,CKB6,CKB8,CKB10,CKB20,CKB21,CKB22,CKB23,CKB24,CKB39,CKB40,CKB41,CKB49,CKB50;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
(for x,y,z being set holds ((((((((x in (the carrier of ( BitGFA0Str (x,y,z) )) & y in (the carrier of ( BitGFA0Str (x,y,z) ))) & z in (the carrier of ( BitGFA0Str (x,y,z) ))) & [ <* x,y *>,( xor2 ) ] in (the carrier of ( BitGFA0Str (x,y,z) ))) & [ <* [ <* x,y *>,( xor2 ) ],z *>,( xor2 ) ] in (the carrier of ( BitGFA0Str (x,y,z) ))) & [ <* x,y *>,( and2 ) ] in (the carrier of ( BitGFA0Str (x,y,z) ))) & [ <* y,z *>,( and2 ) ] in (the carrier of ( BitGFA0Str (x,y,z) ))) & [ <* z,x *>,( and2 ) ] in (the carrier of ( BitGFA0Str (x,y,z) ))) & [ <* [ <* x,y *>,( and2 ) ],[ <* y,z *>,( and2 ) ],[ <* z,x *>,( and2 ) ] *>,( or3 ) ] in (the carrier of ( BitGFA0Str (x,y,z) ))))
proof
let x being set,y being set,z being set;
set f1 = ( and2 );
set f2 = ( and2 );
set f3 = ( and2 );
set f4 = ( or3 );
set f0 = ( xor2 );
set xy = [ <* x,y *>,f1 ];
set yz = [ <* y,z *>,f2 ];
set zx = [ <* z,x *>,f3 ];
set xyz = [ <* xy,yz,zx *>,f4 ];
set S1 = ( GFA0AdderStr (x,y,z) );
set S2 = ( GFA0CarryStr (x,y,z) );
A1: (x in (the carrier of S1) & y in (the carrier of S1)) by FACIRC_1:60;
A2: (z in (the carrier of S1) & [ <* x,y *>,f0 ] in (the carrier of S1)) by FACIRC_1:60,FACIRC_1:61;
A3: xyz in (the carrier of S2) by CKB31:1;
A4: (yz in (the carrier of S2) & zx in (the carrier of S2)) by CKB31:1;
([ <* [ <* x,y *>,f0 ],z *>,f0 ] in (the carrier of S1) & xy in (the carrier of S2)) by CKB31:1,FACIRC_1:61;
hence thesis by A1,A2,A4,A3,FACIRC_1:20;
end;
