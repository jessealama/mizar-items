environ
vocabularies NUMBERS,SUBSET_1,MARGREL1,FUNCT_1,FINSEQ_2,FINSEQ_1,XBOOLEAN,TWOSCOMP,CARD_1,RELAT_1,ORDINAL4,TARSKI,XBOOLE_0,CLASSES1,FSM_1,FACIRC_1,CIRCUIT2,MSAFREE2,CIRCCOMB,STRUCT_0,GLIB_000,MSUALG_1,FUNCT_4,LATTICES,CIRCUIT1,PARTFUN1,ARYTM_3,GFACIRC1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,NAT_1,RELAT_1,NUMBERS,STRUCT_0,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,MARGREL1,CLASSES1,BINARITH,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,CKB4,CKB6,CKB8,CKB10,CKB20,CKB21,CKB22,CKB23,CKB24,CKB39,CKB40,CKB41,CKB49,CKB50,CKB59,CKB60,CKB63,CKB64,CKB65,CKB66,CKB67,CKB82,CKB83,CKB84,CKB93,CKB94,CKB103,CKB104,CKB107,CKB108,CKB109,CKB110,CKB111;
definitions TARSKI,XBOOLE_0,CIRCUIT2,FACIRC_1,MSAFREE2,XBOOLEAN,CKB4,CKB6,CKB8,CKB10,CKB20,CKB21,CKB22,CKB23,CKB24,CKB39,CKB40,CKB41,CKB49,CKB50,CKB59,CKB60,CKB63,CKB64,CKB65,CKB66,CKB67,CKB82,CKB83,CKB84,CKB93,CKB94,CKB103,CKB104,CKB107,CKB108,CKB109,CKB110,CKB111;
theorems TARSKI,XBOOLE_0,XBOOLE_1,ZFMISC_1,ENUMSET1,RELAT_1,ORDINAL1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_6,BINARITH,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,CIRCCMB2,FACIRC_2,XBOOLEAN,CLASSES1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106,CKB107,CKB108,CKB109,CKB110,CKB111,CKB112,CKB113,CKB114,CKB115,CKB116,CKB117,CKB118,CKB119,CKB120,CKB121,CKB122,CKB123,CKB124;
schemes FUNCT_2,FACIRC_1,CKB1,CKB2,CKB3;
registrations RELAT_1,MARGREL1,FINSEQ_2,CARD_3,STRUCT_0,CIRCCOMB,FACIRC_1,ORDINAL1,FINSEQ_1,FUNCT_1,MSAFREE2;
constructors ENUMSET1,XXREAL_0,CLASSES1,BINARITH,CIRCUIT1,CIRCUIT2,FACIRC_1,TWOSCOMP,NAT_1,RELSET_1,CKB4,CKB6,CKB8,CKB10,CKB20,CKB21,CKB22,CKB23,CKB24,CKB39,CKB40,CKB41,CKB49,CKB50,CKB59,CKB60,CKB63,CKB64,CKB65,CKB66,CKB67,CKB82,CKB83,CKB84,CKB93,CKB94,CKB103,CKB104,CKB107,CKB108,CKB109,CKB110,CKB111;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
Th99: (for x,y,z being set holds (((x <> [ <* y,z *>,( and2c ) ] & y <> [ <* z,x *>,( and2b ) ]) & z <> [ <* x,y *>,( and2a ) ]) implies (for s being (State of ( GFA2CarryCirc (x,y,z) )) holds ( Following (s,2) ) is  stable)))
proof
set f1 = ( and2a );
set f2 = ( and2c );
set f3 = ( and2b );
let x being set;
let y being set;
let z being set;
assume that
A1: ((x <> [ <* y,z *>,f2 ] & y <> [ <* z,x *>,f3 ]) & z <> [ <* x,y *>,f1 ]);
set S = ( GFA2CarryStr (x,y,z) );
reconsider xx = x,yy = y,zz = z as (Vertex of S) by CKB118:1;
let s being (State of ( GFA2CarryCirc (x,y,z) ));
set a1 = ( s . xx );
set a2 = ( s . yy );
set a3 = ( s . zz );
set ffs = ( Following (s,2) );
set fffs = ( Following ffs );
set xy = [ <* x,y *>,f1 ];
set yz = [ <* y,z *>,f2 ];
set zx = [ <* z,x *>,f3 ];
A2: ffs = ( Following ( Following s ) ) by FACIRC_1:15;
A3: z in ( InputVertices S ) by A1,CKB120:1;
then ( ( Following s ) . z ) = a3 by CIRCUIT2:def 5;
then A4: ( ffs . z ) = a3 by A2,A3,CIRCUIT2:def 5;
A5: y in ( InputVertices S ) by A1,CKB120:1;
then ( ( Following s ) . y ) = a2 by CIRCUIT2:def 5;
then A6: ( ffs . y ) = a2 by A2,A5,CIRCUIT2:def 5;
A7: x in ( InputVertices S ) by A1,CKB120:1;
then ( ( Following s ) . x ) = a1 by CIRCUIT2:def 5;
then A8: ( ffs . x ) = a1 by A2,A7,CIRCUIT2:def 5;
a3 = ( s . z );
then A9: ( ffs . xy ) = ( ( 'not' a1 ) '&' a2 ) by A1,CKB124:1;
a2 = ( s . y );
then A10: ( ffs . zx ) = ( ( 'not' a1 ) '&' ( 'not' a3 ) ) by A1,CKB124:1;
a1 = ( s . x );
then A11: ( ffs . yz ) = ( a2 '&' ( 'not' a3 ) ) by A1,CKB124:1;
A12: ( ffs . ( GFA2CarryOutput (x,y,z) ) ) = ( 'not' ( ( ( ( 'not' a1 ) '&' a2 ) 'or' ( a2 '&' ( 'not' a3 ) ) ) 'or' ( ( 'not' a3 ) '&' ( 'not' a1 ) ) ) ) by A1,CKB124:1;
A13:now
let a being set;
assume A14: a in (the carrier of S);
then reconsider v = a as (Vertex of S);
A15: v in ( ( InputVertices S ) \/ ( InnerVertices S ) ) by A14,XBOOLE_1:45;
thus ( ffs . a ) = ( fffs . a )
proof
per cases  by A15,XBOOLE_0:def 3;
suppose v in ( InputVertices S );

hence thesis by CIRCUIT2:def 5;
end;
suppose v in ( InnerVertices S );

then v in ( { xy,yz,zx } \/ { ( GFA2CarryOutput (x,y,z) ) } ) by CKB113:1;
then (v in { xy,yz,zx } or v in { ( GFA2CarryOutput (x,y,z) ) }) by XBOOLE_0:def 3;
then (((v = xy or v = yz) or v = zx) or v = ( GFA2CarryOutput (x,y,z) )) by ENUMSET1:def 1,TARSKI:def 1;
hence thesis by A12,A9,A11,A10,A8,A6,A4,CKB122:1,CKB123:1;
end;
end;

end;
(( dom ( Following ( Following (s,2) ) ) ) = (the carrier of S) & ( dom ( Following (s,2) ) ) = (the carrier of S)) by CIRCUIT1:3;
hence ffs = fffs by A13,FUNCT_1:2;
end;
