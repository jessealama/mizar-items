environ
vocabularies NUMBERS,SUBSET_1,MARGREL1,FUNCT_1,FINSEQ_2,FINSEQ_1,XBOOLEAN,TWOSCOMP,CARD_1,RELAT_1,ORDINAL4,TARSKI,XBOOLE_0,CLASSES1,FSM_1,FACIRC_1,CIRCUIT2,MSAFREE2,CIRCCOMB,STRUCT_0,GLIB_000,MSUALG_1,FUNCT_4,LATTICES,CIRCUIT1,PARTFUN1,ARYTM_3,GFACIRC1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,NAT_1,RELAT_1,NUMBERS,STRUCT_0,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,MARGREL1,CLASSES1,BINARITH,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,CKB4,CKB6,CKB8,CKB10;
definitions TARSKI,XBOOLE_0,CIRCUIT2,FACIRC_1,MSAFREE2,XBOOLEAN,CKB4,CKB6,CKB8,CKB10;
theorems TARSKI,XBOOLE_0,XBOOLE_1,ZFMISC_1,ENUMSET1,RELAT_1,ORDINAL1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_6,BINARITH,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,CIRCCMB2,FACIRC_2,XBOOLEAN,CLASSES1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
schemes FUNCT_2,FACIRC_1,CKB1,CKB2,CKB3;
registrations RELAT_1,MARGREL1,FINSEQ_2,CARD_3,STRUCT_0,CIRCCOMB,FACIRC_1,ORDINAL1,FINSEQ_1,FUNCT_1,MSAFREE2;
constructors ENUMSET1,XXREAL_0,CLASSES1,BINARITH,CIRCUIT1,CIRCUIT2,FACIRC_1,TWOSCOMP,NAT_1,RELSET_1,CKB4,CKB6,CKB8,CKB10;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
Th4: (for x,y being (Element of ( BOOLEAN )) holds ((((((( ( xor2c ) . <* x,y *> ) = ( x 'xor' ( 'not' y ) ) & ( ( xor2c ) . <* x,y *> ) = ( ( xor2a ) . <* x,y *> )) & ( ( xor2c ) . <* x,y *> ) = ( ( or2 ) . <* ( ( and2b ) . <* x,y *> ),( ( and2 ) . <* x,y *> ) *> )) & ( ( xor2c ) . <* ( 0 ),( 0 ) *> ) = 1) & ( ( xor2c ) . <* ( 0 ),1 *> ) = ( 0 )) & ( ( xor2c ) . <* 1,( 0 ) *> ) = ( 0 )) & ( ( xor2c ) . <* 1,1 *> ) = 1))
proof
let x being (Element of ( BOOLEAN )),y being (Element of ( BOOLEAN ));
thus ( ( xor2c ) . <* x,y *> ) = ( x 'xor' ( 'not' y ) ) by CKB10:def 1;
thus ( ( xor2c ) . <* x,y *> ) = ( x 'xor' ( 'not' y ) ) by CKB10:def 1
.= ( ( 'not' x ) 'xor' y )
.= ( ( xor2a ) . <* x,y *> ) by TWOSCOMP:def 14;
thus ( ( xor2c ) . <* x,y *> ) = ( x 'xor' ( 'not' y ) ) by CKB10:def 1
.= ( ( ( 'not' x ) '&' ( 'not' y ) ) 'or' ( x '&' ( 'not' ( 'not' y ) ) ) )
.= ( ( or2 ) . <* ( ( 'not' x ) '&' ( 'not' y ) ),( x '&' y ) *> ) by TWOSCOMP:def 7
.= ( ( or2 ) . <* ( ( and2b ) . <* x,y *> ),( x '&' y ) *> ) by TWOSCOMP:def 3
.= ( ( or2 ) . <* ( ( and2b ) . <* x,y *> ),( ( and2 ) . <* x,y *> ) *> ) by TWOSCOMP:def 1;
thus ( ( xor2c ) . <* ( 0 ),( 0 ) *> ) = ( ( FALSE ) 'xor' ( 'not' ( FALSE ) ) ) by CKB10:def 1
.= 1 by XBOOLEAN:102;
thus ( ( xor2c ) . <* ( 0 ),1 *> ) = ( ( FALSE ) 'xor' ( 'not' ( TRUE ) ) ) by CKB10:def 1
.= ( 0 );
thus ( ( xor2c ) . <* 1,( 0 ) *> ) = ( ( TRUE ) 'xor' ( 'not' ( FALSE ) ) ) by CKB10:def 1
.= ( 0 );
thus ( ( xor2c ) . <* 1,1 *> ) = ( ( TRUE ) 'xor' ( 'not' ( TRUE ) ) ) by CKB10:def 1
.= 1 by BINARITH:7;
end;
