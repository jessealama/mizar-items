environ
vocabularies NUMBERS,SUBSET_1,MARGREL1,FUNCT_1,FINSEQ_2,FINSEQ_1,XBOOLEAN,TWOSCOMP,CARD_1,RELAT_1,ORDINAL4,TARSKI,XBOOLE_0,CLASSES1,FSM_1,FACIRC_1,CIRCUIT2,MSAFREE2,CIRCCOMB,STRUCT_0,GLIB_000,MSUALG_1,FUNCT_4,LATTICES,CIRCUIT1,PARTFUN1,ARYTM_3,GFACIRC1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,NAT_1,RELAT_1,NUMBERS,STRUCT_0,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,MARGREL1,CLASSES1,BINARITH,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,CKB4,CKB6,CKB8,CKB10,CKB20,CKB21,CKB22,CKB23,CKB24,CKB39,CKB40,CKB41,CKB49,CKB50,CKB59,CKB60,CKB63,CKB64,CKB65,CKB66,CKB67,CKB82,CKB83,CKB84,CKB93,CKB94,CKB103,CKB104;
definitions TARSKI,XBOOLE_0,CIRCUIT2,FACIRC_1,MSAFREE2,XBOOLEAN,CKB4,CKB6,CKB8,CKB10,CKB20,CKB21,CKB22,CKB23,CKB24,CKB39,CKB40,CKB41,CKB49,CKB50,CKB59,CKB60,CKB63,CKB64,CKB65,CKB66,CKB67,CKB82,CKB83,CKB84,CKB93,CKB94,CKB103,CKB104;
theorems TARSKI,XBOOLE_0,XBOOLE_1,ZFMISC_1,ENUMSET1,RELAT_1,ORDINAL1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_6,BINARITH,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,CIRCCMB2,FACIRC_2,XBOOLEAN,CLASSES1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB103,CKB104;
schemes FUNCT_2,FACIRC_1,CKB1,CKB2,CKB3;
registrations RELAT_1,MARGREL1,FINSEQ_2,CARD_3,STRUCT_0,CIRCCOMB,FACIRC_1,ORDINAL1,FINSEQ_1,FUNCT_1,MSAFREE2;
constructors ENUMSET1,XXREAL_0,CLASSES1,BINARITH,CIRCUIT1,CIRCUIT2,FACIRC_1,TWOSCOMP,NAT_1,RELSET_1,CKB4,CKB6,CKB8,CKB10,CKB20,CKB21,CKB22,CKB23,CKB24,CKB39,CKB40,CKB41,CKB49,CKB50,CKB59,CKB60,CKB63,CKB64,CKB65,CKB66,CKB67,CKB82,CKB83,CKB84,CKB93,CKB94,CKB103,CKB104;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
(for x,y,z being set holds ((((z <> [ <* x,y *>,( xor2c ) ] & x <> [ <* y,z *>,( and2a ) ]) & y <> [ <* z,x *>,( and2 ) ]) & z <> [ <* x,y *>,( and2c ) ]) implies (for s being (State of ( BitGFA1Circ (x,y,z) )) holds (for a1,a2,a3 being (Element of ( BOOLEAN )) holds (((a1 = ( s . x ) & a2 = ( s . y )) & a3 = ( s . z )) implies (( ( Following (s,2) ) . ( GFA1AdderOutput (x,y,z) ) ) = ( 'not' ( ( a1 'xor' ( 'not' a2 ) ) 'xor' a3 ) ) & ( ( Following (s,2) ) . ( GFA1CarryOutput (x,y,z) ) ) = ( ( ( a1 '&' ( 'not' a2 ) ) 'or' ( ( 'not' a2 ) '&' a3 ) ) 'or' ( a3 '&' a1 ) )))))))
proof
set f1 = ( and2c );
set f2 = ( and2a );
set f3 = ( and2 );
set f0 = ( xor2c );
let x being set;
let y being set;
let z being set;
assume that
A1: z <> [ <* x,y *>,f0 ]
and
A2: ((x <> [ <* y,z *>,f2 ] & y <> [ <* z,x *>,f3 ]) & z <> [ <* x,y *>,f1 ]);
set S2 = ( GFA1CarryStr (x,y,z) );
set S1 = ( GFA1AdderStr (x,y,z) );
( InputVertices S1 ) = { x,y,z } by A1,FACIRC_1:57;
then A3: ( InputVertices S1 ) = ( InputVertices S2 ) by A2,CKB72:1;
set A2 = ( GFA1CarryCirc (x,y,z) );
set A1 = ( GFA1AdderCirc (x,y,z) );
set A = ( BitGFA1Circ (x,y,z) );
let s being (State of A);
let a1 being (Element of ( BOOLEAN ));
let a2 being (Element of ( BOOLEAN ));
let a3 being (Element of ( BOOLEAN ));
assume that
A4: a1 = ( s . x )
and
A5: a2 = ( s . y )
and
A6: a3 = ( s . z );
reconsider s1 = ( s | (the carrier of S1) ) as (State of A1) by FACIRC_1:26;
A7: ( dom s1 ) = (the carrier of S1) by CIRCUIT1:3;
z in (the carrier of S1) by FACIRC_1:60;
then A8: a3 = ( s1 . z ) by A6,A7,FUNCT_1:47;
y in (the carrier of S1) by FACIRC_1:60;
then A9: a2 = ( s1 . y ) by A5,A7,FUNCT_1:47;
reconsider t = s as (State of ( A1 +* A2 ));
( InnerVertices S2 ) misses ( InputVertices S2 ) by XBOOLE_1:79;
then A10: ( ( Following (t,2) ) . ( GFA1AdderOutput (x,y,z) ) ) = ( ( Following (s1,2) ) . ( GFA1AdderOutput (x,y,z) ) ) by A3,FACIRC_1:32;
reconsider s2 = ( s | (the carrier of S2) ) as (State of A2) by FACIRC_1:26;
A11: ( dom s2 ) = (the carrier of S2) by CIRCUIT1:3;
x in (the carrier of S1) by FACIRC_1:60;
then a1 = ( s1 . x ) by A4,A7,FUNCT_1:47;
hence ( ( Following (s,2) ) . ( GFA1AdderOutput (x,y,z) ) ) = ( 'not' ( ( a1 'xor' ( 'not' a2 ) ) 'xor' a3 ) ) by A1,A9,A8,A10,CKB92:1;
( InnerVertices S1 ) misses ( InputVertices S1 ) by XBOOLE_1:79;
then A12: ( ( Following (t,2) ) . ( GFA1CarryOutput (x,y,z) ) ) = ( ( Following (s2,2) ) . ( GFA1CarryOutput (x,y,z) ) ) by A3,FACIRC_1:33;
z in (the carrier of S2) by CKB74:1;
then A13: a3 = ( s2 . z ) by A6,A11,FUNCT_1:47;
y in (the carrier of S2) by CKB74:1;
then A14: a2 = ( s2 . y ) by A5,A11,FUNCT_1:47;
x in (the carrier of S2) by CKB74:1;
then a1 = ( s2 . x ) by A4,A11,FUNCT_1:47;
hence thesis by A2,A14,A13,A12,CKB80:1;
end;
