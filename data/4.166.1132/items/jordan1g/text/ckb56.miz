environ
vocabularies NUMBERS,SUBSET_1,ZFMISC_1,FINSEQ_1,XBOOLE_0,RELAT_1,FINSEQ_5,MATRIX_1,GOBOARD1,FINSEQ_4,ARYTM_3,RFINSEQ,RCOMP_1,RELAT_2,SPPOL_1,EUCLID,JORDAN1E,JORDAN8,JORDAN9,FINSEQ_6,PSCOMP_1,TOPREAL1,GOBOARD5,MCART_1,XXREAL_0,TREES_1,PARTFUN1,FUNCT_1,ARYTM_1,RLTOPSP1,TARSKI,CARD_1,PRE_TOPC,ORDINAL4,NEWTON,NAT_1,JORDAN1A,SPPOL_2,JORDAN3,SPRECT_2,GROUP_2,JORDAN5C,JORDAN6;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_D,FUNCT_1,PARTFUN1,FINSEQ_1,FINSEQ_4,FINSEQ_5,RFINSEQ,MATRIX_1,FINSEQ_6,STRUCT_0,PRE_TOPC,NEWTON,CONNSP_1,COMPTS_1,RLTOPSP1,EUCLID,PSCOMP_1,SPRECT_2,GOBOARD1,TOPREAL1,GOBOARD5,SPPOL_1,SPPOL_2,JORDAN3,JORDAN8,JORDAN5C,JORDAN6,JORDAN9,JORDAN1A,JORDAN1E,NAT_1;
definitions TARSKI,XBOOLE_0,PSCOMP_1;
theorems EUCLID,JORDAN8,PSCOMP_1,JORDAN1A,NAT_1,GOBOARD5,FINSEQ_1,FINSEQ_2,JORDAN4,JORDAN6,SPRECT_2,FINSEQ_4,FINSEQ_5,FINSEQ_6,GOBOARD7,SPPOL_1,SPPOL_2,REVROT_1,TOPREAL1,SPRECT_3,BOOLMARK,JORDAN5B,JORDAN3,JORDAN9,ZFMISC_1,GOBOARD1,SPRECT_1,TARSKI,TOPREAL3,FINSEQ_3,RELAT_1,FUNCT_1,TOPREAL5,JORDAN10,GOBOARD2,CARD_1,CARD_2,ENUMSET1,SPRECT_4,JORDAN1B,SPRECT_5,JORDAN5D,JORDAN1E,PARTFUN2,JORDAN1F,JORDAN5C,XBOOLE_0,XBOOLE_1,REALSET1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,MATRIX_1,XREAL_0,NAT_D,RLTOPSP1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55;
schemes NAT_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,FINSEQ_5,FINSEQ_6,STRUCT_0,PRE_TOPC,GOBOARD1,SPPOL_2,SPRECT_1,SPRECT_2,SPRECT_3,REVROT_1,TOPREAL6,JORDAN8,JORDAN1A,JORDAN1E,CARD_1,EUCLID,SPPOL_1,ZFMISC_1,FINSET_1,CKB1,CKB3,CKB8,CKB9;
constructors XXREAL_0,REAL_1,NAT_1,FINSEQ_4,NEWTON,RFINSEQ,BINARITH,FINSEQ_5,CONNSP_1,TOPS_2,REALSET2,MATRIX_2,TOPMETR,PSCOMP_1,JORDAN3,JORDAN5C,JORDAN6,JORDAN8,GOBRD13,JORDAN9,JORDAN1A,JORDAN1E,BINOP_2,NAT_D;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
reserve n for (Element of ( NAT ));
theorem
Th60: (for C being  compact  connected non  vertical non  horizontal (Subset of ( TOP-REAL 2 )) holds (for n being (Element of ( NAT )) holds (n > ( 0 ) implies (for k being Nat holds ((1 <= k & k < ( ( First_Point (( L~ ( Rev ( Lower_Seq (C,n) ) ) ),( W-min ( L~ ( Cage (C,n) ) ) ),( E-max ( L~ ( Cage (C,n) ) ) ),( Vertical_Line ( ( ( W-bound ( L~ ( Cage (C,n) ) ) ) + ( E-bound ( L~ ( Cage (C,n) ) ) ) ) / 2 ) )) ) .. ( Rev ( Lower_Seq (C,n) ) ) )) implies ( ( ( Rev ( Lower_Seq (C,n) ) ) /. k ) `1 ) < ( ( ( W-bound ( L~ ( Cage (C,n) ) ) ) + ( E-bound ( L~ ( Cage (C,n) ) ) ) ) / 2 ))))))
proof
let C being  compact  connected non  vertical non  horizontal (Subset of ( TOP-REAL 2 ));
let n being (Element of ( NAT ));
assume A1: n > ( 0 );
set LS = ( Lower_Seq (C,n) );
set sr = ( ( ( W-bound ( L~ ( Cage (C,n) ) ) ) + ( E-bound ( L~ ( Cage (C,n) ) ) ) ) / 2 );
set Ebo = ( E-bound ( L~ ( Cage (C,n) ) ) );
set Wbo = ( W-bound ( L~ ( Cage (C,n) ) ) );
set Emax = ( E-max ( L~ ( Cage (C,n) ) ) );
set Wmin = ( W-min ( L~ ( Cage (C,n) ) ) );
set RLS = ( Rev LS );
set FiP = ( First_Point (( L~ RLS ),Wmin,Emax,( Vertical_Line sr )) );
set LaP = ( Last_Point (( L~ LS ),Emax,Wmin,( Vertical_Line sr )) );
A2: ( L~ RLS ) = ( L~ LS ) by SPPOL_2:22;
A3: ( len RLS ) = ( len LS ) by FINSEQ_5:def 3;
defpred P[ Nat ]
 means
((1 <= $1 & $1 < ( FiP .. RLS )) implies ( ( RLS /. $1 ) `1 ) < sr);
A4: ( rng RLS ) = ( rng LS ) by FINSEQ_5:57;
A5: Wbo < Ebo by SPRECT_1:31;
then A6: Wbo < sr by XREAL_1:226;
A7: sr < Ebo by A5,XREAL_1:226;
A8: (for k being non  empty Nat holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
A9: Wbo <= Ebo by SPRECT_1:21;
then Wbo <= sr by JORDAN6:1;
then A10: ( Wmin `1 ) <= sr by EUCLID:52;
sr <= Ebo by A9,JORDAN6:1;
then A11: sr <= ( Emax `1 ) by EUCLID:52;
A12: ( RLS /. ( len RLS ) ) = ( LS /. 1 ) by A3,FINSEQ_5:65
.= Emax by JORDAN1F:6;
set GC1 = ( ( Gauge (C,n) ) * (( Center ( Gauge (C,n) ) ),1) );
let k being non  empty Nat;
assume A13: ((1 <= k & k < ( FiP .. RLS )) implies ( ( RLS /. k ) `1 ) < sr);
4 <= ( len ( Gauge (C,n) ) ) by JORDAN8:10;
then 1 <= ( len ( Gauge (C,n) ) ) by XXREAL_0:2;
then A14: 1 <= ( width ( Gauge (C,n) ) ) by JORDAN8:def 1;
then A15: ( GC1 `1 ) = ( ( ( W-bound C ) + ( E-bound C ) ) / 2 ) by A1,CKB39:1
.= sr by CKB37:1;
A16: (( LS /. 1 ) = Emax & ( LS /. ( len LS ) ) = Wmin) by JORDAN1F:6,JORDAN1F:8;
then A17: ( L~ LS ) is_an_arc_of Emax,Wmin by TOPREAL1:25;
A18: 1 <= ( Center ( Gauge (C,n) ) ) by JORDAN1B:11;
A19: ( RLS /. 1 ) = ( LS /. ( len LS ) ) by FINSEQ_5:65
.= Wmin by JORDAN1F:8;
( L~ LS ) is_an_arc_of Wmin,Emax by A16,JORDAN5B:14,TOPREAL1:25;
then (( L~ LS ) meets ( Vertical_Line sr ) & ( ( L~ LS ) /\ ( Vertical_Line sr ) ) is  closed) by A10,A11,JORDAN6:49;
then A20: FiP = LaP by A2,A17,JORDAN5C:18;
then A21: ( FiP .. RLS ) in ( dom RLS ) by A1,A4,CKB52:1,FINSEQ_4:20;
then A22: 1 <= ( FiP .. RLS ) by FINSEQ_3:25;
A23: k >= 1 by NAT_1:14;
reconsider kk = k as (Element of ( NAT )) by ORDINAL1:def 12;
assume that
A24: 1 <= ( k + 1 )
and
A25: ( k + 1 ) < ( FiP .. RLS );
A26: ( FiP .. RLS ) <= ( len RLS ) by A21,FINSEQ_3:25;
then A27: ( k + 1 ) <= ( len RLS ) by A25,XXREAL_0:2;
LS is_sequence_on ( Gauge (C,n) ) by CKB7:1;
then RLS is_sequence_on ( Gauge (C,n) ) by JORDAN9:5;
then consider i1,j1,i2,j2 being (Element of ( NAT )) such that A28: [ i1,j1 ] in ( Indices ( Gauge (C,n) ) ) and A29: ( RLS /. kk ) = ( ( Gauge (C,n) ) * (i1,j1) ) and A30: [ i2,j2 ] in ( Indices ( Gauge (C,n) ) ) and A31: ( RLS /. ( kk + 1 ) ) = ( ( Gauge (C,n) ) * (i2,j2) ) and A32: ((((i1 = i2 & ( j1 + 1 ) = j2) or (( i1 + 1 ) = i2 & j1 = j2)) or (i1 = ( i2 + 1 ) & j1 = j2)) or (i1 = i2 & j1 = ( j2 + 1 ))) by A23,A27,JORDAN8:3;
A33: 1 <= i1 by A28,MATRIX_1:38;
A34: (1 <= j1 & j1 <= ( width ( Gauge (C,n) ) )) by A28,MATRIX_1:38;
A35: i2 <= ( len ( Gauge (C,n) ) ) by A30,MATRIX_1:38;
A36: i1 <= ( len ( Gauge (C,n) ) ) by A28,MATRIX_1:38;
A37: j2 <= ( width ( Gauge (C,n) ) ) by A30,MATRIX_1:38;
A38: (1 <= i2 & 1 <= j2) by A30,MATRIX_1:38;
A39: (( Center ( Gauge (C,n) ) ) <= ( len ( Gauge (C,n) ) ) & ( i1 + 1 ) >= 1) by JORDAN1B:13,NAT_1:11;
now
per cases  by A32;
suppose (i1 = i2 & ( j1 + 1 ) = j2);

then ( ( RLS /. k ) `1 ) = ( ( ( Gauge (C,n) ) * (i2,1) ) `1 ) by A29,A33,A36,A34,GOBOARD5:2
.= ( ( RLS /. ( k + 1 ) ) `1 ) by A31,A35,A38,A37,GOBOARD5:2;
hence thesis by A13,A25,NAT_1:13,NAT_1:14;
end;
suppose A40: (( i1 + 1 ) = i2 & j1 = j2);

A41:now
A42:now
assume ( RLS /. 1 ) in ( Vertical_Line sr );
then ( Wmin `1 ) = sr by A19,JORDAN6:31;
hence contradiction by A6,EUCLID:52;
end;
assume ( ( RLS /. ( k + 1 ) ) `1 ) = sr;
then ( RLS /. ( k + 1 ) ) in { p where p is (Point of ( TOP-REAL 2 )): ( p `1 ) = sr };
then A43: ( RLS /. ( k + 1 ) ) in ( Vertical_Line sr ) by JORDAN6:def 6;
A44: sr <= ( Emax `1 ) by A7,EUCLID:52;
(( L~ RLS ) is_an_arc_of Wmin,Emax & ( Wmin `1 ) <= sr) by A6,A19,A12,EUCLID:52,TOPREAL1:25;
then A45: ( L~ RLS ) meets ( Vertical_Line sr ) by A44,JORDAN6:49;
A46: ( RLS /. ( FiP .. RLS ) ) = FiP by A1,A4,A20,CKB52:1,FINSEQ_5:38;
A47: ( k + 1 ) >= ( 1 + 1 ) by A23,XREAL_1:7;
( len ( mid (RLS,1,( FiP .. RLS )) ) ) = ( ( ( FiP .. RLS ) -' 1 ) + 1 ) by A22,A26,JORDAN4:8
.= ( FiP .. RLS ) by A22,XREAL_1:235;
then A48: ( rng ( mid (RLS,1,( FiP .. RLS )) ) ) c= ( L~ ( mid (RLS,1,( FiP .. RLS )) ) ) by A25,A47,SPPOL_2:18,XXREAL_0:2;
A49: ( k + 1 ) in ( dom RLS ) by A24,A27,FINSEQ_3:25;
(( Vertical_Line sr ) is  closed & RLS is  being_S-Seq) by JORDAN6:30;
then A50: ( ( L~ ( mid (RLS,1,( FiP .. RLS )) ) ) /\ ( Vertical_Line sr ) ) = { FiP } by A1,A4,A20,A19,A12,A45,A42,CKB52:1,CKB54:1;
A51: (( mid (RLS,1,( FiP .. RLS )) ) = ( RLS | ( FiP .. RLS ) ) & ( RLS | ( Seg ( FiP .. RLS ) ) ) = ( RLS | ( FiP .. RLS ) )) by A22,FINSEQ_1:def 15,FINSEQ_6:116;
( k + 1 ) in ( Seg ( FiP .. RLS ) ) by A24,A25,FINSEQ_1:1;
then ( RLS /. ( k + 1 ) ) in ( rng ( mid (RLS,1,( FiP .. RLS )) ) ) by A51,A49,PARTFUN2:18;
then ( RLS /. ( k + 1 ) ) in { FiP } by A43,A48,A50,XBOOLE_0:def 4;
then ( RLS /. ( k + 1 ) ) = FiP by TARSKI:def 1;
hence contradiction by A25,A21,A49,A46,PARTFUN2:10;
end;
i1 < ( Center ( Gauge (C,n) ) ) by A13,A25,A29,A36,A34,A18,A14,A15,JORDAN1A:18,NAT_1:13,NAT_1:14;
then ( i1 + 1 ) <= ( Center ( Gauge (C,n) ) ) by NAT_1:13;
then ( ( RLS /. ( k + 1 ) ) `1 ) <= sr by A31,A34,A14,A15,A39,A40,JORDAN1A:18;
hence thesis by A41,XXREAL_0:1;
end;
suppose (i1 = ( i2 + 1 ) & j1 = j2);

then i2 < i1 by NAT_1:13;
then ( ( RLS /. ( k + 1 ) ) `1 ) <= ( ( RLS /. k ) `1 ) by A29,A31,A36,A34,A38,A37,JORDAN1A:18;
hence thesis by A13,A25,NAT_1:13,NAT_1:14,XXREAL_0:2;
end;
suppose (i1 = i2 & j1 = ( j2 + 1 ));

then ( ( RLS /. k ) `1 ) = ( ( ( Gauge (C,n) ) * (i2,1) ) `1 ) by A29,A33,A36,A34,GOBOARD5:2
.= ( ( RLS /. ( k + 1 ) ) `1 ) by A31,A35,A38,A37,GOBOARD5:2;
hence thesis by A13,A25,NAT_1:13,NAT_1:14;
end;
end;
hence thesis;
end;
A52: P[ 1 ]
proof
assume that
1 <= 1
and
1 < ( FiP .. RLS );
( RLS /. 1 ) = ( LS /. ( len LS ) ) by FINSEQ_5:65
.= Wmin by JORDAN1F:8;
hence thesis by A6,EUCLID:52;
end;
A53: (for k being non  empty Nat holds P[ k ]) from NAT_1:sch 10(A52,A8);
let k being Nat;
assume (1 <= k & k < ( ( First_Point (( L~ ( Rev ( Lower_Seq (C,n) ) ) ),( W-min ( L~ ( Cage (C,n) ) ) ),( E-max ( L~ ( Cage (C,n) ) ) ),( Vertical_Line ( ( ( W-bound ( L~ ( Cage (C,n) ) ) ) + ( E-bound ( L~ ( Cage (C,n) ) ) ) ) / 2 ) )) ) .. ( Rev ( Lower_Seq (C,n) ) ) ));
hence thesis by A53;
end;
