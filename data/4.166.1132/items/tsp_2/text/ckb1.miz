environ
vocabularies XBOOLE_0,PRE_TOPC,SUBSET_1,TEX_4,RCOMP_1,TARSKI,STRUCT_0,TOPS_1,ZFMISC_1,SETFAM_1,FUNCT_1,RELAT_1,NATTRA_1,ORDINAL2,BORSUK_1,TSP_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCT_1,RELAT_1,RELSET_1,FUNCT_2,DOMAIN_1,STRUCT_0,PRE_TOPC,TOPS_1,BORSUK_1,TSEP_1,TEX_2,TEX_3,TEX_4,TSP_1;
definitions SUBSET_1,STRUCT_0,RELAT_1;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,PRE_TOPC,TOPS_1,BORSUK_1,TSEP_1,TOPS_3,TEX_2,TEX_3,TEX_4,TSP_1,RELAT_1,XBOOLE_0,XBOOLE_1,SUBSET_1;
schemes TEX_2,FUNCT_2;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,PRE_TOPC,TOPS_1,TSP_1;
constructors TOPS_1,BORSUK_1,TSEP_1,TEX_2,TEX_4,TSP_1,TEX_3;
requirements BOOLE,SUBSET;
begin
definition
let X being non  empty TopSpace;
let A being (Subset of X);
redefine attr A is  T_0
means
:Def1: (for a,b being (Point of X) holds ((a in A & b in A) implies (a <> b implies ( MaxADSet a ) misses ( MaxADSet b ))));
compatibility
proof
thus (A is  T_0 implies (for a,b being (Point of X) holds ((a in A & b in A) implies (a <> b implies ( MaxADSet a ) misses ( MaxADSet b )))))
proof
assume A1: A is  T_0;
let a being (Point of X);
let b being (Point of X);
assume that
A2: a in A
and
A3: b in A;
assume A4: a <> b;
now
per cases  by A1,A2,A3,A4,TSP_1:def 8;
suppose (ex V being (Subset of X) st ((V is  open & a in V) & (not b in V)));

then consider V being (Subset of X) such that A5: V is  open and A6: a in V and A7: (not b in V);
now
take V;
thus V is  open by A5;
thus ( MaxADSet a ) c= V by A5,A6,TEX_4:24;
b in ( ( [#] X ) \ V ) by A7,XBOOLE_0:def 5;
then ( MaxADSet b ) c= ( V ` ) by A5,TEX_4:23;
hence V misses ( MaxADSet b ) by SUBSET_1:23;
end;
hence ((ex V being (Subset of X) st ((V is  open & ( MaxADSet a ) c= V) & V misses ( MaxADSet b ))) or (ex W being (Subset of X) st ((W is  open & W misses ( MaxADSet a )) & ( MaxADSet b ) c= W)));
end;
suppose (ex W being (Subset of X) st ((W is  open & (not a in W)) & b in W));

then consider W being (Subset of X) such that A8: W is  open and A9: (not a in W) and A10: b in W;
now
take W;
thus W is  open by A8;
a in ( ( [#] X ) \ W ) by A9,XBOOLE_0:def 5;
then ( MaxADSet a ) c= ( W ` ) by A8,TEX_4:23;
hence W misses ( MaxADSet a ) by SUBSET_1:23;
thus ( MaxADSet b ) c= W by A8,A10,TEX_4:24;
end;
hence ((ex V being (Subset of X) st ((V is  open & ( MaxADSet a ) c= V) & V misses ( MaxADSet b ))) or (ex W being (Subset of X) st ((W is  open & W misses ( MaxADSet a )) & ( MaxADSet b ) c= W)));
end;
end;
hence thesis by TEX_4:53;
end;

assume A11: (for a,b being (Point of X) holds ((a in A & b in A) implies (a <> b implies ( MaxADSet a ) misses ( MaxADSet b ))));
now
let a being (Point of X);
let b being (Point of X);
assume that
A12: a in A
and
A13: b in A;
assume a <> b;
then A14: ( MaxADSet a ) misses ( MaxADSet b ) by A11,A12,A13;
now
per cases  by A14,TEX_4:53;
suppose (ex V being (Subset of X) st ((V is  open & ( MaxADSet a ) c= V) & V misses ( MaxADSet b )));

then consider V being (Subset of X) such that A15: V is  open and A16: ( MaxADSet a ) c= V and A17: V misses ( MaxADSet b );
now
take V;
thus V is  open by A15;
{ a } c= ( MaxADSet a ) by TEX_4:18;
then a in ( MaxADSet a ) by ZFMISC_1:31;
hence a in V by A16;
now
{ b } c= ( MaxADSet b ) by TEX_4:18;
then A18: b in ( MaxADSet b ) by ZFMISC_1:31;
assume b in V;
hence contradiction by A17,A18,XBOOLE_0:3;
end;
hence (not b in V);
end;
hence ((ex V being (Subset of X) st ((V is  open & a in V) & (not b in V))) or (ex W being (Subset of X) st ((W is  open & (not a in W)) & b in W)));
end;
suppose (ex W being (Subset of X) st ((W is  open & W misses ( MaxADSet a )) & ( MaxADSet b ) c= W));

then consider W being (Subset of X) such that A19: W is  open and A20: W misses ( MaxADSet a ) and A21: ( MaxADSet b ) c= W;
now
take W;
thus W is  open by A19;
now
{ a } c= ( MaxADSet a ) by TEX_4:18;
then A22: a in ( MaxADSet a ) by ZFMISC_1:31;
assume a in W;
hence contradiction by A20,A22,XBOOLE_0:3;
end;
hence (not a in W);
{ b } c= ( MaxADSet b ) by TEX_4:18;
then b in ( MaxADSet b ) by ZFMISC_1:31;
hence b in W by A21;
end;
hence ((ex V being (Subset of X) st ((V is  open & a in V) & (not b in V))) or (ex W being (Subset of X) st ((W is  open & (not a in W)) & b in W)));
end;
end;
hence ((ex V being (Subset of X) st ((V is  open & a in V) & (not b in V))) or (ex W being (Subset of X) st ((W is  open & (not a in W)) & b in W)));
end;
hence thesis by TSP_1:def 8;
end;
end;
