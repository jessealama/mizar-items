environ
vocabularies NUMBERS,FUNCT_1,FINSEQ_1,NAT_1,RELAT_1,FINSET_1,CARD_1,XBOOLE_0,TARSKI,XXREAL_0,SUBSET_1,PARTFUN1,ARYTM_1,ARYTM_3,ORDINAL4,FINSEQ_4,FUNCT_2,EQREL_1,CARD_3,SETFAM_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,RELAT_1,CARD_1,SETFAM_1,EQREL_1,NUMBERS,XCMPLX_0,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,NAT_1,FINSEQ_1,FINSEQ_3,XXREAL_0,CKB1,CKB6,CKB12,CKB18,CKB19,CKB24,CKB39,CKB49;
definitions FUNCT_1,TARSKI,XBOOLE_0,FINSEQ_1,CKB1,CKB6,CKB12,CKB24,CKB39,CKB49;
theorems CARD_1,CARD_2,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FUNCT_1,FUNCT_2,INT_1,NAT_1,PARTFUN1,TARSKI,WELLORD2,ZFMISC_1,RELAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,GRFUNC_1,EQREL_1,RELSET_1,SETFAM_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66;
schemes FINSEQ_1,FINSET_1,NAT_1,FUNCT_1,FINSEQ_2,FUNCT_2;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FINSET_1,XREAL_0,INT_1,FINSEQ_1,ORDINAL1,CARD_1,RELSET_1,SUBSET_1,EQREL_1,NAT_1,PARTFUN1,FUNCT_2,XXREAL_0,MEMBERED;
constructors ENUMSET1,WELLORD2,FUNCT_2,XXREAL_0,REAL_1,PARTFUN1,NAT_1,INT_1,FINSEQ_3,RELSET_1,EQREL_1,SETFAM_1,CKB1,CKB6,CKB12,CKB18,CKB19,CKB24,CKB39,CKB49;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve p for FinSequence;
reserve q for FinSequence;
reserve x for set;
reserve k for Nat;
theorem
Th74: ((( rng p ) c= ( dom p ) & p is  one-to-one) implies ( rng p ) = ( dom p ))
proof
defpred P[ Nat ]
 means
(for q holds (((( len q ) = $1 & ( rng q ) c= ( dom q )) & q is  one-to-one) implies ( rng q ) = ( dom q )));
A1: ( len p ) = ( len p );
now
let k;
assume A2: (for q holds (((( len q ) = k & ( rng q ) c= ( dom q )) & q is  one-to-one) implies ( rng q ) = ( dom q )));
let q;
assume that
A3: ( len q ) = ( k + 1 )
and
A4: ( rng q ) c= ( dom q )
and
A5: q is  one-to-one;
A6: ( dom q ) = ( Seg ( k + 1 ) ) by A3,FINSEQ_1:def 3;
( dom q ) c= ( rng q )
proof
let x;
assume A7: x in ( dom q );
then reconsider n = x as (Element of ( NAT ));
per cases ;
suppose A8: ( k + 1 ) in ( rng q );

now
per cases ;
suppose n = ( k + 1 );

hence thesis by A8;
end;
suppose n <> ( k + 1 );

then (not x in { ( k + 1 ) }) by TARSKI:def 1;
then x in ( ( Seg ( k + 1 ) ) \ { ( k + 1 ) } ) by A6,A7,XBOOLE_0:def 5;
then A9: x in ( Seg k ) by FINSEQ_1:10;
set r = ( q - { ( k + 1 ) } );
A10: ( len r ) = ( ( k + 1 ) - 1 ) by A3,A5,A8,FINSEQ_3:90;
then A11: ( dom r ) = ( Seg k ) by FINSEQ_1:def 3;
A12: ( rng r ) = ( ( rng q ) \ { ( k + 1 ) } ) by FINSEQ_3:65;
then ( rng r ) c= ( ( Seg ( k + 1 ) ) \ { ( k + 1 ) } ) by A4,A6,XBOOLE_1:33;
then ( rng r ) c= ( dom r ) by A11,FINSEQ_1:10;
then ( rng r ) = ( dom r ) by A2,A5,A10,FINSEQ_3:87;
hence thesis by A12,A11,A9;
end;
end;
hence thesis;
end;
suppose A13: (not ( k + 1 ) in ( rng q ));

A14: ( rng q ) c= ( Seg k )
proof
let x;
assume A15: x in ( rng q );
then (not x in { ( k + 1 ) }) by A13,TARSKI:def 1;
then x in ( ( Seg ( k + 1 ) ) \ { ( k + 1 ) } ) by A4,A6,A15,XBOOLE_0:def 5;
hence thesis by FINSEQ_1:10;
end;
A16: ( k + 1 ) in ( Seg ( k + 1 ) ) by FINSEQ_1:4;
then A17: ( q . ( k + 1 ) ) in ( rng q ) by A6,FUNCT_1:def 3;
reconsider r = ( q | ( Seg k ) ) as FinSequence by FINSEQ_1:15;
A18: (( dom r ) c= ( dom q ) & k < ( k + 1 )) by RELAT_1:60,XREAL_1:29;
A19: ( len r ) = k by A3,FINSEQ_3:53;
then A20: ( dom r ) = ( Seg k ) by FINSEQ_1:def 3;
(( rng r ) c= ( rng q ) & r is  one-to-one) by A5,FUNCT_1:52,RELAT_1:70;
then ( rng r ) = ( dom r ) by A2,A19,A20,A14,XBOOLE_1:1;
then consider x such that A21: x in ( dom r ) and A22: ( r . x ) = ( q . ( k + 1 ) ) by A20,A14,A17,FUNCT_1:def 3;
reconsider n = x as (Element of ( NAT )) by A21;
(( r . x ) = ( q . x ) & n <= k) by A20,A21,FINSEQ_1:1,FUNCT_1:49;
hence thesis by A5,A6,A16,A21,A22,A18,FUNCT_1:def 4;
end;
end;
hence ( rng q ) = ( dom q ) by A4,XBOOLE_0:def 10;
end;
then A23: (for k holds (P[ k ] implies P[ ( k + 1 ) ]));
now
let q;
assume A24: ( len q ) = ( 0 );
assume that
( rng q ) c= ( dom q )
and
q is  one-to-one;
q = ( {} ) by A24;
hence ( rng q ) = ( dom q ) by RELAT_1:38;
end;
then A25: P[ ( 0 ) ];
(for k holds P[ k ]) from NAT_1:sch 2(A25,A23);
hence thesis by A1;
end;
