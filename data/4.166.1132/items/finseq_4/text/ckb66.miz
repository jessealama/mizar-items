environ
vocabularies NUMBERS,FUNCT_1,FINSEQ_1,NAT_1,RELAT_1,FINSET_1,CARD_1,XBOOLE_0,TARSKI,XXREAL_0,SUBSET_1,PARTFUN1,ARYTM_1,ARYTM_3,ORDINAL4,FINSEQ_4,FUNCT_2,EQREL_1,CARD_3,SETFAM_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,RELAT_1,CARD_1,SETFAM_1,EQREL_1,NUMBERS,XCMPLX_0,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,NAT_1,FINSEQ_1,FINSEQ_3,XXREAL_0,CKB1,CKB6,CKB12,CKB18,CKB19,CKB24,CKB39,CKB49;
definitions FUNCT_1,TARSKI,XBOOLE_0,FINSEQ_1,CKB1,CKB6,CKB12,CKB24,CKB39,CKB49;
theorems CARD_1,CARD_2,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FUNCT_1,FUNCT_2,INT_1,NAT_1,PARTFUN1,TARSKI,WELLORD2,ZFMISC_1,RELAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,GRFUNC_1,EQREL_1,RELSET_1,SETFAM_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
schemes FINSEQ_1,FINSET_1,NAT_1,FUNCT_1,FINSEQ_2,FUNCT_2;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FINSET_1,XREAL_0,INT_1,FINSEQ_1,ORDINAL1,CARD_1,RELSET_1,SUBSET_1,EQREL_1,NAT_1,PARTFUN1,FUNCT_2,XXREAL_0,MEMBERED;
constructors ENUMSET1,WELLORD2,FUNCT_2,XXREAL_0,REAL_1,PARTFUN1,NAT_1,INT_1,FINSEQ_3,RELSET_1,EQREL_1,SETFAM_1,CKB1,CKB6,CKB12,CKB18,CKB19,CKB24,CKB39,CKB49;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve p for FinSequence;
reserve A for set;
reserve B for set;
reserve C for set;
reserve x for set;
reserve y for set;
reserve n for Nat;
theorem
Th73: (A is  finite implies (ex p st (( rng p ) = A & p is  one-to-one)))
proof
defpred P[ set ]
 means
(ex p st (( rng p ) = $1 & p is  one-to-one));
( rng ( {} ) ) = ( {} );
then A1: P[ ( {} ) ];
now
let B;
let C;
assume that
B in A
and
C c= A;
given p such that
A2: ( rng p ) = C
and
A3: p is  one-to-one;

A4:now
assume A5: (not B in C);
take q = ( p ^ <* B *> );
thus ( rng q ) = ( ( rng p ) \/ ( rng <* B *> ) ) by FINSEQ_1:31
.= ( C \/ { B } ) by A2,FINSEQ_1:38;
thus q is  one-to-one
proof
let x;
let y;
assume that
A6: (x in ( dom q ) & y in ( dom q ))
and
A7: ( q . x ) = ( q . y );
reconsider k = x,l = y as (Element of ( NAT )) by A6;
A8:now
assume A9: k in ( dom p );
given n being Nat such that
A10: n in ( dom <* B *> )
and
A11: l = ( ( len p ) + n );

n in { 1 } by A10,FINSEQ_1:2,FINSEQ_1:38;
then A12: n = 1 by TARSKI:def 1;
( <* B *> . n ) = ( q . k ) by A7,A10,A11,FINSEQ_1:def 7
.= ( p . k ) by A9,FINSEQ_1:def 7;
then B = ( p . k ) by A12,FINSEQ_1:def 8;
hence thesis by A2,A5,A9,FUNCT_1:def 3;
end;
A13:now
assume A14: l in ( dom p );
given n being Nat such that
A15: n in ( dom <* B *> )
and
A16: k = ( ( len p ) + n );

n in { 1 } by A15,FINSEQ_1:2,FINSEQ_1:38;
then A17: n = 1 by TARSKI:def 1;
( <* B *> . n ) = ( q . l ) by A7,A15,A16,FINSEQ_1:def 7
.= ( p . l ) by A14,FINSEQ_1:def 7;
then B = ( p . l ) by A17,FINSEQ_1:def 8;
hence thesis by A2,A5,A14,FUNCT_1:def 3;
end;
A18:now
given m1 being Nat such that
A19: m1 in ( dom <* B *> )
and
A20: k = ( ( len p ) + m1 );

m1 in { 1 } by A19,FINSEQ_1:2,FINSEQ_1:def 8;
then A21: m1 = 1 by TARSKI:def 1;
given m2 being Nat such that
A22: m2 in ( dom <* B *> )
and
A23: l = ( ( len p ) + m2 );

m2 in { 1 } by A22,FINSEQ_1:2,FINSEQ_1:def 8;
hence thesis by A20,A23,A21,TARSKI:def 1;
end;
now
assume A24: (k in ( dom p ) & l in ( dom p ));
then (( q . k ) = ( p . k ) & ( q . l ) = ( p . l )) by FINSEQ_1:def 7;
hence thesis by A3,A7,A24,FUNCT_1:def 4;
end;
hence thesis by A6,A8,A13,A18,FINSEQ_1:25;
end;

end;
now
assume A25: B in C;
take q = p;
thus (( rng q ) = ( C \/ { B } ) & q is  one-to-one) by A2,A3,A25,ZFMISC_1:40;
end;
hence (ex p st (( rng p ) = ( C \/ { B } ) & p is  one-to-one)) by A4;
end;
then A26: (for B,C being set holds (((B in A & C c= A) & P[ C ]) implies P[ ( C \/ { B } ) ]));
assume A27: A is  finite;
thus P[ A ] from FINSET_1:sch 2(A27,A1,A26);
end;
