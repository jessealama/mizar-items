environ
vocabularies NUMBERS,FUNCT_1,FINSEQ_1,NAT_1,RELAT_1,FINSET_1,CARD_1,XBOOLE_0,TARSKI,XXREAL_0,SUBSET_1,PARTFUN1,ARYTM_1,ARYTM_3,ORDINAL4,FINSEQ_4,FUNCT_2,EQREL_1,CARD_3,SETFAM_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,RELAT_1,CARD_1,SETFAM_1,EQREL_1,NUMBERS,XCMPLX_0,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,NAT_1,FINSEQ_1,FINSEQ_3,XXREAL_0,CKB1,CKB6,CKB12,CKB18,CKB19,CKB24;
definitions FUNCT_1,TARSKI,XBOOLE_0,FINSEQ_1,CKB1,CKB6,CKB12,CKB24;
theorems CARD_1,CARD_2,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FUNCT_1,FUNCT_2,INT_1,NAT_1,PARTFUN1,TARSKI,WELLORD2,ZFMISC_1,RELAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,GRFUNC_1,EQREL_1,RELSET_1,SETFAM_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37;
schemes FINSEQ_1,FINSET_1,NAT_1,FUNCT_1,FINSEQ_2,FUNCT_2;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FINSET_1,XREAL_0,INT_1,FINSEQ_1,ORDINAL1,CARD_1,RELSET_1,SUBSET_1,EQREL_1,NAT_1,PARTFUN1,FUNCT_2,XXREAL_0,MEMBERED;
constructors ENUMSET1,WELLORD2,FUNCT_2,XXREAL_0,REAL_1,PARTFUN1,NAT_1,INT_1,FINSEQ_3,RELSET_1,EQREL_1,SETFAM_1,CKB1,CKB6,CKB12,CKB18,CKB19,CKB24;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve p for FinSequence;
reserve x for set;
reserve k for Nat;
theorem
((p is  one-to-one & x in ( rng p )) implies (for k holds (k in ( dom ( p - { x } ) ) implies ((( ( p - { x } ) . k ) = ( p . k ) iff k < ( x .. p )) & (( ( p - { x } ) . k ) = ( p . ( k + 1 ) ) iff ( x .. p ) <= k)))))
proof
assume that
A1: p is  one-to-one
and
A2: x in ( rng p );
set q = ( p - { x } );
let k;
assume A3: k in ( dom ( p - { x } ) );
A4: p just_once_values x by A1,A2,CKB10:1;
then (( dom q ) = ( Seg ( len q ) ) & ( len ( p - { x } ) ) = ( ( len p ) - 1 )) by CKB36:1,FINSEQ_1:def 3;
then k <= ( ( len p ) - 1 ) by A3,FINSEQ_1:1;
then (1 <= ( k + 1 ) & ( k + 1 ) <= ( len p )) by NAT_1:12,XREAL_1:19;
then ( k + 1 ) in ( Seg ( len p ) );
then A5: (( dom ( p - { x } ) ) c= ( dom p ) & ( k + 1 ) in ( dom p )) by FINSEQ_1:def 3,FINSEQ_3:63;
thus (( ( p - { x } ) . k ) = ( p . k ) implies k < ( x .. p ))
proof
assume that
A6: ( ( p - { x } ) . k ) = ( p . k )
and
A7: (not k < ( x .. p ));
( q . k ) = ( p . ( k + 1 ) ) by A4,A3,A7,CKB37:1;
then ( k + ( 0 ) ) = ( k + 1 ) by A1,A3,A5,A6,FUNCT_1:def 4;
hence thesis;
end;

thus (k < ( x .. p ) implies ( ( p - { x } ) . k ) = ( p . k )) by A4,A3,CKB37:1;
thus (( ( p - { x } ) . k ) = ( p . ( k + 1 ) ) implies ( x .. p ) <= k)
proof
assume A8: ( ( p - { x } ) . k ) = ( p . ( k + 1 ) );
assume (not ( x .. p ) <= k);
then ( p . ( k + 1 ) ) = ( p . k ) by A4,A3,A8,CKB37:1;
then ( k + ( 0 ) ) = ( k + 1 ) by A1,A3,A5,FUNCT_1:def 4;
hence thesis;
end;

thus thesis by A4,A3,CKB37:1;
end;
