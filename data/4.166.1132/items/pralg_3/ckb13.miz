environ
vocabularies XBOOLE_0,PBOOLE,STRUCT_0,MSUALG_1,SUBSET_1,PRALG_2,EQREL_1,FUNCT_1,CARD_3,RELAT_1,SETFAM_1,RLVECT_2,FUNCT_6,TARSKI,FUNCT_2,MARGREL1,UNIALG_2,FUNCT_5,FUNCOP_1,FINSEQ_4,FINSEQ_1,CARD_1,PARTFUN1,MSUALG_3,MEMBER_1,ARYTM_3,WELLORD1,PRALG_3;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,STRUCT_0,FUNCT_2,FUNCOP_1,EQREL_1,FINSEQ_1,FUNCT_5,FUNCT_6,CARD_3,NUMBERS,PBOOLE,MSUALG_1,MSUALG_3,PRALG_2,PRALG_1,MSUALG_2,CKB8;
definitions XBOOLE_0,FUNCT_1,MSUALG_3,PRALG_2,PBOOLE,TARSKI,CKB8;
theorems PBOOLE,FUNCT_1,EQREL_1,PRALG_2,MSUALG_1,MSUALG_3,FUNCT_2,CARD_3,TARSKI,FUNCOP_1,MSUALG_2,PRALG_1,FINSEQ_1,FUNCT_6,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
schemes PBOOLE,MSSUBFAM;
registrations XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCOP_1,EQREL_1,PBOOLE,STRUCT_0,MSUALG_1,PRALG_2,MSUALG_3,ORDINAL1,CARD_3,RELSET_1,FINSEQ_1,CKB1,CKB2;
constructors SETFAM_1,EQREL_1,PRALG_1,PRALG_2,MSUALG_3,RELSET_1,FUNCT_5,CKB8;
requirements BOOLE,SUBSET;
begin
reserve I for non empty set;
reserve S for non void non empty ManySortedSign;
reserve A for (MSAlgebra-Family of I,S);
reserve o for (OperSymbol of S);
registration
let S;
let I;
let o;
let A;
cluster ( const (o,( product A )) ) ->  Relation-like  Function-like;
coherence
proof
( const (o,( product A )) ) is Function
proof
per cases ;
suppose ( the_arity_of o ) = ( {} );

then ( const (o,( product A )) ) in ( Funcs (I,( union { ( Result (o,( A . i9 )) ) where i9 is (Element of I): (not contradiction) } )) ) by CKB12:1;
then (ex g being Function st ((g = ( const (o,( product A )) ) & ( dom g ) = I) & ( rng g ) c= ( union { ( Result (o,( A . i9 )) ) where i9 is (Element of I): (not contradiction) } ))) by FUNCT_2:def 2;
hence thesis;
end;
suppose A1: ( the_arity_of o ) <> ( {} );

( dom ( (the Sorts of ( product A )) * ( the_arity_of o ) ) ) = ( dom ( the_arity_of o ) ) by PRALG_2:3;
then A2: ( dom ( (the Sorts of ( product A )) * ( the_arity_of o ) ) ) <> ( dom ( {} ) ) by A1;
( dom ( Den (o,( product A )) ) ) = ( Args (o,( product A )) ) by FUNCT_2:def 1
.= ( product ( (the Sorts of ( product A )) * ( the_arity_of o ) ) ) by PRALG_2:3;
then (not ( {} ) in ( dom ( Den (o,( product A )) ) )) by A2,CARD_3:9;
hence thesis by FUNCT_1:def 2;
end;
end;
hence thesis;
end;
end;
