environ
vocabularies XBOOLE_0,PBOOLE,STRUCT_0,MSUALG_1,SUBSET_1,PRALG_2,EQREL_1,FUNCT_1,CARD_3,RELAT_1,SETFAM_1,RLVECT_2,FUNCT_6,TARSKI,FUNCT_2,MARGREL1,UNIALG_2,FUNCT_5,FUNCOP_1,FINSEQ_4,FINSEQ_1,CARD_1,PARTFUN1,MSUALG_3,MEMBER_1,ARYTM_3,WELLORD1,PRALG_3;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,STRUCT_0,FUNCT_2,FUNCOP_1,EQREL_1,FINSEQ_1,FUNCT_5,FUNCT_6,CARD_3,NUMBERS,PBOOLE,MSUALG_1,MSUALG_3,PRALG_2,PRALG_1,MSUALG_2,CKB8;
definitions XBOOLE_0,FUNCT_1,MSUALG_3,PRALG_2,PBOOLE,TARSKI,CKB8;
theorems PBOOLE,FUNCT_1,EQREL_1,PRALG_2,MSUALG_1,MSUALG_3,FUNCT_2,CARD_3,TARSKI,FUNCOP_1,MSUALG_2,PRALG_1,FINSEQ_1,FUNCT_6,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11;
schemes PBOOLE,MSSUBFAM;
registrations XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCOP_1,EQREL_1,PBOOLE,STRUCT_0,MSUALG_1,PRALG_2,MSUALG_3,ORDINAL1,CARD_3,RELSET_1,FINSEQ_1,CKB1,CKB2;
constructors SETFAM_1,EQREL_1,PRALG_1,PRALG_2,MSUALG_3,RELSET_1,FUNCT_5,CKB8;
requirements BOOLE,SUBSET;
begin
reserve I for non empty set;
reserve S for non void non empty ManySortedSign;
reserve A for (MSAlgebra-Family of I,S);
reserve o for (OperSymbol of S);
theorem
Th9: (( the_arity_of o ) = ( {} ) implies ( const (o,( product A )) ) in ( Funcs (I,( union { ( Result (o,( A . i9 )) ) where i9 is (Element of I): (not contradiction) } )) ))
proof
set g = ( ( commute ( OPER A ) ) . o );
set C = ( union { ( Result (o,( A . i9 )) ) where i9 is (Element of I): (not contradiction) } );
assume A1: ( the_arity_of o ) = ( {} );
then A2: g in ( Funcs (I,( Funcs ({ ( {} ) },C) )) ) by CKB11:1;
reconsider g as Function;
( ( OPS A ) . o ) = ( IFEQ (( the_arity_of o ),( {} ),( commute ( A ?. o ) ),( Commute ( Frege ( A ?. o ) ) )) ) by PRALG_2:def 13
.= ( commute ( A ?. o ) ) by A1,FUNCOP_1:def 8;
then A3: ( const (o,( product A )) ) = ( ( commute g ) . ( {} ) ) by MSUALG_1:def 6;
( commute g ) in ( Funcs ({ ( {} ) },( Funcs (I,C) )) ) by A2,FUNCT_6:55;
then consider g1 being Function such that A4: g1 = ( commute g ) and A5: ( dom g1 ) = { ( {} ) } and A6: ( rng g1 ) c= ( Funcs (I,C) ) by FUNCT_2:def 2;
( {} ) in { ( {} ) } by TARSKI:def 1;
then ( g1 . ( {} ) ) in ( rng g1 ) by A5,FUNCT_1:def 3;
hence thesis by A3,A4,A6;
end;
