environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,FINSEQ_1,MODELC_2,SUBSET_1,ZF_LANG,XREAL_0,ORDINAL1,FUNCT_1,RELAT_1,XXREAL_0,INT_1,ARYTM_3,ARYTM_1,CARD_1,STRUCT_0,TARSKI,XBOOLEAN,LATTICES,CAT_3,ORDINAL4,ZF_MODEL,MODELC_1,FINSET_1,SEQ_1,REAL_1,CARD_3,SERIES_1,ZFMISC_1,MSUALG_3,ORDERS_1,SUBSTUT1,FSM_1,FSM_2,VALUED_1,MODELC_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,FINSET_1,CARD_1,NUMBERS,XCMPLX_0,XREAL_0,REAL_1,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,RELSET_1,FINSEQ_1,ORDERS_1,FUNCT_2,INT_1,SEQ_1,SERIES_1,PARTFUN1,STRUCT_0,MODELC_1,MODELC_2,RFINSEQ2,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40;
definitions TARSKI,MODELC_2,SERIES_1,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40;
theorems XBOOLE_0,ZFMISC_1,XBOOLE_1,TARSKI,FUNCT_1,FUNCT_2,FUNCT_7,WELLORD2,NAT_1,INT_1,ENUMSET1,XREAL_1,FINSEQ_1,ORDERS_1,XXREAL_0,MODELC_1,MODELC_2,ORDINAL1,SUBSET_1,FINSEQ_4,SERIES_1,CARD_1,CARD_2,SERIES_2,FINSET_1,RFINSEQ2,FINSEQ_3,SUBSET,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44;
schemes NAT_1,FUNCT_2,MODELC_2,TARSKI,FUNCT_1,FINSEQ_1,RECDEF_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,XXREAL_0,XREAL_0,NAT_1,INT_1,ORDERS_1,FINSET_1,MODELC_2,FINSEQ_1,NUMBERS,VALUED_0,MEMBERED,STRUCT_0,MODELC_1,CARD_1,RELSET_1,FUNCT_2,CKB19,CKB31;
constructors KNASTER,MODELC_2,SERIES_1,REAL_1,NEWTON,RFINSEQ2,SEQ_1,RELSET_1,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40;
requirements REAL,NUMERALS,ARITHM,SUBSET,BOOLE;
begin
reserve F for LTL-formula;
reserve G for LTL-formula;
reserve G1 for LTL-formula;
reserve H for LTL-formula;
reserve v for LTL-formula;
reserve N for  strict LTLnode over v;
reserve w for (Element of ( Inf_seq ( AtomicFamily ) ));
theorem
Lm19: ((H in (the LTLnew of N) & H is  Until) implies (w |= ( * N ) iff (w |= ( * ( SuccNode1 (H,N) ) ) or w |= ( * ( SuccNode2 (H,N) ) ))))
proof
assume that
A1: H in (the LTLnew of N)
and
A2: H is  Until;
set NX = (the LTLnext of N);
set SN1 = ( SuccNode1 (H,N) );
A3: H in ( * N ) by A1,CKB1:1;
set SN1X = (the LTLnext of SN1);
( LTLNext H ) = { H } by A2,CKB18:def 1;
then A4: SN1X = ( NX \/ { H } ) by A1,CKB20:def 1;
set NN = (the LTLnew of N);
set NO = (the LTLold of N);
set SN2 = ( SuccNode2 (H,N) );
set H2 = ( the_right_argument_of H );
set SN2N = (the LTLnew of SN2);
( LTLNew2 H ) = { H2 } by A2,CKB17:def 1;
then A5: SN2N = ( ( NN \ { H } ) \/ ( { H2 } \ NO ) ) by A1,CKB21:def 1;
set H1 = ( the_left_argument_of H );
set XNX = ( 'X' ( CastLTL NX ) );
set XSN1X = ( 'X' ( CastLTL SN1X ) );
set SN1N = (the LTLnew of SN1);
set SN1O = (the LTLold of SN1);
A6: SN1O = ( NO \/ { H } ) by A1,CKB20:def 1;
( LTLNew1 H ) = { H1 } by A2,CKB16:def 1;
then A7: SN1N = ( ( NN \ { H } ) \/ ( { H1 } \ NO ) ) by A1,CKB20:def 1;
A8: (F in ( * SN1 ) implies ((F in ( * N ) or F = H1) or F = ( 'X' H )))
proof
assume A9: F in ( * SN1 );
now
per cases  by A9,CKB1:1;
suppose F in SN1O;

then (F in NO or F in { H }) by A6,XBOOLE_0:def 3;
hence thesis by A3,CKB1:1,TARSKI:def 1;
end;
suppose F in SN1N;

then (F in ( NN \ { H } ) or F in ( { H1 } \ NO )) by A7,XBOOLE_0:def 3;
then (F in NN or F in { H1 }) by XBOOLE_0:def 5;
hence thesis by CKB1:1,TARSKI:def 1;
end;
suppose F in XSN1X;

then consider G such that A10: F = G and A11: (ex G1 st (G1 in ( CastLTL SN1X ) & G = ( 'X' G1 )));
consider G1 such that A12: G1 in SN1X and A13: G = ( 'X' G1 ) by A11;
A14: (G1 in NX or G1 in { H }) by A4,A12,XBOOLE_0:def 3;
now
per cases  by A14,TARSKI:def 1;
suppose G1 in NX;

then F in XNX by A10,A13;
hence thesis by CKB1:1;
end;
suppose G1 = H;

hence thesis by A10,A13;
end;
end;
hence thesis;
end;
end;
hence thesis;
end;
set SN2X = (the LTLnext of SN2);
set XSN2X = ( 'X' ( CastLTL SN2X ) );
set SN2O = (the LTLold of SN2);
A15: SN2O = ( NO \/ { H } ) by A1,CKB21:def 1;
A16: SN2X = NX by A1,CKB21:def 1;
A17: (F in ( * SN2 ) implies (F in ( * N ) or F = H2))
proof
assume A18: F in ( * SN2 );
now
per cases  by A18,CKB1:1;
suppose F in SN2O;

then (F in NO or F in { H }) by A15,XBOOLE_0:def 3;
hence thesis by A3,CKB1:1,TARSKI:def 1;
end;
suppose F in SN2N;

then (F in ( NN \ { H } ) or F in ( { H2 } \ NO )) by A5,XBOOLE_0:def 3;
then (F in NN or F in { H2 }) by XBOOLE_0:def 5;
hence thesis by CKB1:1,TARSKI:def 1;
end;
suppose F in XSN2X;

hence thesis by A16,CKB1:1;
end;
end;
hence thesis;
end;
H = ( H1 'U' H2 ) by A2,MODELC_2:8;
then (w |= H iff w |= ( H2 'or' ( H1 '&' ( 'X' H ) ) )) by MODELC_2:75;
then A19: (w |= H iff (w |= H2 or w |= ( H1 '&' ( 'X' H ) ))) by MODELC_2:66;
A20: (w |= ( * N ) implies (w |= ( * SN1 ) or w |= ( * SN2 )))
proof
assume A21: w |= ( * N );
now
per cases  by A3,A19,A21,MODELC_2:65,MODELC_2:def 64;
suppose A22: (w |= H1 & w |= ( 'X' H ));

(F in ( * SN1 ) implies w |= F)
proof
assume F in ( * SN1 );
then ((F in ( * N ) or F = H1) or F = ( 'X' H )) by A8;
hence thesis by A21,A22,MODELC_2:def 64;
end;
hence thesis by MODELC_2:def 64;
end;
suppose A23: w |= H2;

(F in ( * SN2 ) implies w |= F)
proof
assume F in ( * SN2 );
then (F in ( * N ) or F = H2) by A17;
hence thesis by A21,A23,MODELC_2:def 64;
end;
hence thesis by MODELC_2:def 64;
end;
end;
hence thesis;
end;
A24: (F in ( * N ) implies (F in ( * SN1 ) & F in ( * SN2 )))
proof
assume A25: F in ( * N );
now
per cases  by A25,CKB1:1;
suppose F in NO;

then (F in SN1O & F in SN2O) by A6,A15,XBOOLE_0:def 3;
hence thesis by CKB1:1;
end;
suppose A26: F in NN;

now
per cases ;
suppose F = H;

then F in { H } by TARSKI:def 1;
then (F in SN1O & F in SN2O) by A6,A15,XBOOLE_0:def 3;
hence thesis by CKB1:1;
end;
suppose F <> H;

then (not F in { H }) by TARSKI:def 1;
then F in ( NN \ { H } ) by A26,XBOOLE_0:def 5;
then (F in SN1N & F in SN2N) by A7,A5,XBOOLE_0:def 3;
hence thesis by CKB1:1;
end;
end;
hence thesis;
end;
suppose F in XNX;

then consider G such that A27: F = G and A28: (ex G1 st (G1 in ( CastLTL NX ) & G = ( 'X' G1 )));
consider G1 such that A29: G1 in NX and A30: G = ( 'X' G1 ) by A28;
G1 in SN1X by A4,A29,XBOOLE_0:def 3;
then A31: F in XSN1X by A27,A30;
F in XSN2X by A16,A27,A29,A30;
hence thesis by A31,CKB1:1;
end;
end;
hence thesis;
end;
((w |= ( * SN1 ) or w |= ( * SN2 )) implies w |= ( * N ))
proof
assume A32: (w |= ( * SN1 ) or w |= ( * SN2 ));
(F in ( * N ) implies w |= F)
proof
assume A33: F in ( * N );
then A34: F in ( * SN2 ) by A24;
A35: F in ( * SN1 ) by A24,A33;
now
per cases  by A32;
suppose w |= ( * SN1 );

hence thesis by A35,MODELC_2:def 64;
end;
suppose w |= ( * SN2 );

hence thesis by A34,MODELC_2:def 64;
end;
end;
hence thesis;
end;
hence thesis by MODELC_2:def 64;
end;
hence thesis by A20;
end;
