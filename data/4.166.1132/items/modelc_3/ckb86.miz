environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,FINSEQ_1,MODELC_2,SUBSET_1,ZF_LANG,XREAL_0,ORDINAL1,FUNCT_1,RELAT_1,XXREAL_0,INT_1,ARYTM_3,ARYTM_1,CARD_1,STRUCT_0,TARSKI,XBOOLEAN,LATTICES,CAT_3,ORDINAL4,ZF_MODEL,MODELC_1,FINSET_1,SEQ_1,REAL_1,CARD_3,SERIES_1,ZFMISC_1,MSUALG_3,ORDERS_1,SUBSTUT1,FSM_1,FSM_2,VALUED_1,MODELC_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,FINSET_1,CARD_1,NUMBERS,XCMPLX_0,XREAL_0,REAL_1,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,RELSET_1,FINSEQ_1,ORDERS_1,FUNCT_2,INT_1,SEQ_1,SERIES_1,PARTFUN1,STRUCT_0,MODELC_1,MODELC_2,RFINSEQ2,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB54,CKB55,CKB56,CKB64,CKB76,CKB77,CKB82;
definitions TARSKI,MODELC_2,SERIES_1,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB54,CKB55,CKB56,CKB64,CKB76,CKB77,CKB82;
theorems XBOOLE_0,ZFMISC_1,XBOOLE_1,TARSKI,FUNCT_1,FUNCT_2,FUNCT_7,WELLORD2,NAT_1,INT_1,ENUMSET1,XREAL_1,FINSEQ_1,ORDERS_1,XXREAL_0,MODELC_1,MODELC_2,ORDINAL1,SUBSET_1,FINSEQ_4,SERIES_1,CARD_1,CARD_2,SERIES_2,FINSET_1,RFINSEQ2,FINSEQ_3,SUBSET,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85;
schemes NAT_1,FUNCT_2,MODELC_2,TARSKI,FUNCT_1,FINSEQ_1,RECDEF_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,XXREAL_0,XREAL_0,NAT_1,INT_1,ORDERS_1,FINSET_1,MODELC_2,FINSEQ_1,NUMBERS,VALUED_0,MEMBERED,STRUCT_0,MODELC_1,CARD_1,RELSET_1,FUNCT_2,CKB19,CKB31,CKB53;
constructors KNASTER,MODELC_2,SERIES_1,REAL_1,NEWTON,RFINSEQ2,SEQ_1,RELSET_1,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB54,CKB55,CKB56,CKB64,CKB76,CKB77,CKB82;
requirements REAL,NUMERALS,ARITHM,SUBSET,BOOLE;
begin
reserve k for Nat;
reserve n for Nat;
reserve x for set;
reserve L for FinSequence;
reserve v for LTL-formula;
reserve N for  strict LTLnode over v;
reserve N1 for  strict LTLnode over v;
reserve N2 for  strict LTLnode over v;
reserve N10 for  strict LTLnode over v;
reserve N20 for  strict LTLnode over v;
reserve M for  strict LTLnode over v;
theorem
(ex n st (ex L st (ex M st (((((1 <= n & ( len L ) = n) & ( L . 1 ) = N) & ( L . n ) = M) & (the LTLnew of M) = ( {} v )) & L is_Finseq_for v))))
proof
defpred P[ Nat ]
 means
(for N holds (( len N ) <= $1 implies (ex n st (ex L st (ex M st (((((1 <= n & ( len L ) = n) & ( L . 1 ) = N) & ( L . n ) = M) & (the LTLnew of M) = ( {} v )) & L is_Finseq_for v))))));
A1: (for l being Nat holds (P[ l ] implies P[ ( l + 1 ) ]))
proof
let l being Nat;
assume that
A2: P[ l ];
P[ ( l + 1 ) ]
proof
let N;
(( len N ) <= ( l + 1 ) implies (ex n st (ex L st (ex M st (((((1 <= n & ( len L ) = n) & ( L . 1 ) = N) & ( L . n ) = M) & (the LTLnew of M) = ( {} v )) & L is_Finseq_for v)))))
proof
assume A3: ( len N ) <= ( l + 1 );
(ex n st (ex L st (ex M st (((((1 <= n & ( len L ) = n) & ( L . 1 ) = N) & ( L . n ) = M) & (the LTLnew of M) = ( {} v )) & L is_Finseq_for v))))
proof
set NewN = (the LTLnew of N);
now
per cases  by A3,NAT_1:8;
suppose ( len N ) <= l;

hence thesis by A2;
end;
suppose A4: ( len N ) = ( l + 1 );

then NewN <> ( {} v ) by CKB85:1;
then consider x such that A5: x in NewN by XBOOLE_0:def 1;
x in ( Subformulae v ) by A5;
then reconsider x as LTL-formula by MODELC_2:1;
set M1 = ( SuccNode1 (x,N) );
M1 is_succ1_of N by A5,CKB23:def 1;
then A6: M1 is_succ_of N by CKB25:def 1;
then ( len M1 ) <= ( ( len N ) - 1 ) by CKB83:1;
then consider n,L,M such that A7: 1 <= n and A8: ( len L ) = n and A9: ( L . 1 ) = M1 and A10: ( L . n ) = M and A11: (the LTLnew of M) = ( {} v ) and A12: L is_Finseq_for v by A2,A4;
set L1 = ( <* N *> ^ L );
set n1 = ( n + 1 );
A13: ( len L1 ) = ( ( len <* N *> ) + ( len L ) ) by FINSEQ_1:22
.= n1 by A8,FINSEQ_1:39;
A14: L1 is_Finseq_for v
proof
let k;
assume that
A15: 1 <= k
and
A16: k < ( len L1 );
A17: ( k + 1 ) <= ( len L1 ) by A16,NAT_1:13;
(ex N1 st (ex N2 st ((( L1 . k ) = N1 & ( L1 . ( k + 1 ) ) = N2) & N2 is_succ_of N1)))
proof
set N2 = ( L1 . ( k + 1 ) );
set N1 = ( L1 . k );
now
per cases ;
suppose k <= 1;

then A18: k = 1 by A15,XXREAL_0:1;
then reconsider N1 as  strict LTLnode over v by FINSEQ_1:41;
( len <* N *> ) = 1 by FINSEQ_1:39;
then A19: N2 = ( L . ( 2 - 1 ) ) by A17,A18,FINSEQ_1:24
.= M1 by A9;
then reconsider N2 as  strict LTLnode over v;
take N1;
take N2;
thus thesis by A6,A18,A19,FINSEQ_1:41;
end;
suppose A20: 1 < k;

set km1 = ( k - 1 );
reconsider km1 as Nat by A20,NAT_1:20;
1 < ( km1 + 1 ) by A20;
then A21: 1 <= km1 by NAT_1:13;
A22: ( len <* N *> ) < k by A20,FINSEQ_1:39;
then A23: N1 = ( L . ( k - ( len <* N *> ) ) ) by A16,FINSEQ_1:24
.= ( L . km1 ) by FINSEQ_1:39;
k <= ( k + 1 ) by NAT_1:11;
then ( len <* N *> ) < ( k + 1 ) by A22,XXREAL_0:2;
then A24: N2 = ( L . ( ( k + 1 ) - ( len <* N *> ) ) ) by A17,FINSEQ_1:24
.= ( L . ( ( k + 1 ) - 1 ) ) by FINSEQ_1:39
.= ( L . ( km1 + 1 ) );
A25: km1 < ( n1 - 1 ) by A13,A16,XREAL_1:14;
then A26: (ex N10 st (ex N20 st ((( L . km1 ) = N10 & ( L . ( km1 + 1 ) ) = N20) & N20 is_succ_of N10))) by A8,A12,A21,CKB36:def 1;
then reconsider N1 as  strict LTLnode over v by A23;
reconsider N2 as  strict LTLnode over v by A24,A26;
take N1;
take N2;
thus thesis by A8,A12,A21,A25,A23,A24,CKB36:def 1;
end;
end;
hence thesis;
end;
hence thesis;
end;
A27: ( len <* N *> ) = 1 by FINSEQ_1:39;
A28: ( L1 . 1 ) = N by FINSEQ_1:41;
1 < n1 by A7,NAT_1:13;
then ( L1 . n1 ) = ( L . ( n1 - 1 ) ) by A13,A27,FINSEQ_1:24
.= M by A10;
hence thesis by A11,A13,A28,A14,NAT_1:11;
end;
end;
hence thesis;
end;
hence thesis;
end;
hence thesis;
end;
hence thesis;
end;
set k = ( len N );
reconsider k as Nat;
A29: P[ ( 0 ) ]
proof
let N;
(( len N ) <= ( 0 ) implies (ex n st (ex L st (ex M st (((((1 <= n & ( len L ) = n) & ( L . 1 ) = N) & ( L . n ) = M) & (the LTLnew of M) = ( {} v )) & L is_Finseq_for v)))))
proof
set n = 1;
set M = N;
assume A30: ( len N ) <= ( 0 );
take n;
set L = <* M *>;
take L;
take M;
(for k holds ((1 <= k & k < ( len L )) implies (ex N1 st (ex N2 st ((( L . k ) = N1 & ( L . ( k + 1 ) ) = N2) & N2 is_succ_of N1))))) by FINSEQ_1:39;
hence thesis by A30,CKB36:def 1,CKB84:1,FINSEQ_1:40;
end;
hence thesis;
end;
(for k being Nat holds P[ k ]) from NAT_1:sch 2(A29,A1);
then P[ k ];
hence thesis;
end;
