environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,FINSEQ_1,MODELC_2,SUBSET_1,ZF_LANG,XREAL_0,ORDINAL1,FUNCT_1,RELAT_1,XXREAL_0,INT_1,ARYTM_3,ARYTM_1,CARD_1,STRUCT_0,TARSKI,XBOOLEAN,LATTICES,CAT_3,ORDINAL4,ZF_MODEL,MODELC_1,FINSET_1,SEQ_1,REAL_1,CARD_3,SERIES_1,ZFMISC_1,MSUALG_3,ORDERS_1,SUBSTUT1,FSM_1,FSM_2,VALUED_1,MODELC_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,FINSET_1,CARD_1,NUMBERS,XCMPLX_0,XREAL_0,REAL_1,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,RELSET_1,FINSEQ_1,ORDERS_1,FUNCT_2,INT_1,SEQ_1,SERIES_1,PARTFUN1,STRUCT_0,MODELC_1,MODELC_2,RFINSEQ2,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB54,CKB55,CKB56,CKB64,CKB76,CKB77,CKB82,CKB106,CKB108,CKB114,CKB115;
definitions TARSKI,MODELC_2,SERIES_1,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB54,CKB55,CKB56,CKB64,CKB76,CKB77,CKB82,CKB106,CKB108,CKB114,CKB115;
theorems XBOOLE_0,ZFMISC_1,XBOOLE_1,TARSKI,FUNCT_1,FUNCT_2,FUNCT_7,WELLORD2,NAT_1,INT_1,ENUMSET1,XREAL_1,FINSEQ_1,ORDERS_1,XXREAL_0,MODELC_1,MODELC_2,ORDINAL1,SUBSET_1,FINSEQ_4,SERIES_1,CARD_1,CARD_2,SERIES_2,FINSET_1,RFINSEQ2,FINSEQ_3,SUBSET,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106,CKB108,CKB110,CKB111,CKB112,CKB113,CKB114,CKB115,CKB116,CKB117,CKB118,CKB119,CKB120;
schemes NAT_1,FUNCT_2,MODELC_2,TARSKI,FUNCT_1,FINSEQ_1,RECDEF_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,XXREAL_0,XREAL_0,NAT_1,INT_1,ORDERS_1,FINSET_1,MODELC_2,FINSEQ_1,NUMBERS,VALUED_0,MEMBERED,STRUCT_0,MODELC_1,CARD_1,RELSET_1,FUNCT_2,CKB19,CKB31,CKB53,CKB107,CKB109;
constructors KNASTER,MODELC_2,SERIES_1,REAL_1,NEWTON,RFINSEQ2,SEQ_1,RELSET_1,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB54,CKB55,CKB56,CKB64,CKB76,CKB77,CKB82,CKB106,CKB108,CKB114,CKB115;
requirements REAL,NUMERALS,ARITHM,SUBSET,BOOLE;
begin
reserve n for Nat;
reserve m for Nat;
reserve i for Nat;
reserve j for Nat;
reserve x for set;
reserve y for set;
reserve v for LTL-formula;
reserve w for (Element of ( Inf_seq ( AtomicFamily ) ));
theorem
Th51: (for f being (Function of ( LTLNodes v ),( LTLNodes v )) holds (f is_succ_homomorphism v,w implies (for x holds (((x in ( LTLNodes v ) & ( CastNode (x,v) ) is non elementary) & w |= ( * ( CastNode (x,v) ) )) implies (ex n st (((for i holds (i < n implies (( CastNode (( ( f |** i ) . x ),v) ) is non elementary & ( CastNode (( ( f |** ( i + 1 ) ) . x ),v) ) is_succ_of ( CastNode (( ( f |** i ) . x ),v) )))) & ( CastNode (( ( f |** n ) . x ),v) ) is  elementary) & (for i holds (i <= n implies w |= ( * ( CastNode (( ( f |** i ) . x ),v) ) )))))))))
proof
set LN = ( LTLNodes v );
let f being (Function of LN,LN);
assume A1: f is_succ_homomorphism v,w;
then (for y holds (((y in LN & ( CastNode (y,v) ) is non elementary) & w |= ( * ( CastNode (y,v) ) )) implies w |= ( * ( CastNode (( f . y ),v) ) ))) by CKB114:def 1;
then A2: f is_homomorphism v,w by CKB115:def 1;
(for x holds (((x in ( LTLNodes v ) & ( CastNode (x,v) ) is non elementary) & w |= ( * ( CastNode (x,v) ) )) implies (ex n st (((for i holds (i < n implies (( CastNode (( ( f |** i ) . x ),v) ) is non elementary & ( CastNode (( ( f |** ( i + 1 ) ) . x ),v) ) is_succ_of ( CastNode (( ( f |** i ) . x ),v) )))) & ( CastNode (( ( f |** n ) . x ),v) ) is  elementary) & (for i holds (i <= n implies w |= ( * ( CastNode (( ( f |** i ) . x ),v) ) )))))))
proof
let x;
assume that
A3: x in LN
and
A4: ( CastNode (x,v) ) is non elementary
and
A5: w |= ( * ( CastNode (x,v) ) );
consider n such that A6: (for i holds (i < n implies ( CastNode (( ( f |** i ) . x ),v) ) is non elementary)) and A7: ( CastNode (( ( f |** n ) . x ),v) ) is  elementary by A1,A3,A4,A5,CKB119:1;
(for i holds (i < n implies ( CastNode (( ( f |** ( i + 1 ) ) . x ),v) ) is_succ_of ( CastNode (( ( f |** i ) . x ),v) )))
proof
let i;
assume A8: i < n;
(for j holds (j <= i implies ( CastNode (( ( f |** j ) . x ),v) ) is non elementary))
proof
let j;
assume j <= i;
then j < n by A8,XXREAL_0:2;
hence thesis by A6;
end;
hence thesis by A1,A3,A4,A5,CKB118:1;
end;
then A9: (for i holds (i < n implies (( CastNode (( ( f |** i ) . x ),v) ) is non elementary & ( CastNode (( ( f |** ( i + 1 ) ) . x ),v) ) is_succ_of ( CastNode (( ( f |** i ) . x ),v) )))) by A6;
defpred P[ Nat ]
 means
($1 <= n implies (for i holds (i <= $1 implies w |= ( * ( CastNode (( ( f |** i ) . x ),v) ) ))));
A10: (for m holds (P[ m ] implies P[ ( m + 1 ) ]))
proof
let m;
assume A11: P[ m ];
P[ ( m + 1 ) ]
proof
assume A12: ( m + 1 ) <= n;
then A13: m < n by NAT_1:13;
then A14: ( CastNode (( ( f |** m ) . x ),v) ) is non elementary by A6;
(for i holds (i <= ( m + 1 ) implies w |= ( * ( CastNode (( ( f |** i ) . x ),v) ) )))
proof
let i;
w |= ( * ( CastNode (( ( f |** m ) . x ),v) ) ) by A11,A12,NAT_1:13;
then A15: w |= ( * ( CastNode (( ( f |** ( m + 1 ) ) . x ),v) ) ) by A2,A3,A4,A14,CKB120:1;
assume i <= ( m + 1 );
hence thesis by A11,A13,A15,NAT_1:8;
end;
hence thesis;
end;
hence thesis;
end;
A16: P[ ( 0 ) ]
proof
assume ( 0 ) <= n;
(for i holds (i <= ( 0 ) implies w |= ( * ( CastNode (( ( f |** i ) . x ),v) ) )))
proof
let i;
assume i <= ( 0 );
then i = ( 0 );
then ( f |** i ) = ( id LN ) by FUNCT_7:84;
hence thesis by A3,A5,FUNCT_1:18;
end;
hence thesis;
end;
(for m holds P[ m ]) from NAT_1:sch 2(A16,A10);
then (for i holds (i <= n implies w |= ( * ( CastNode (( ( f |** i ) . x ),v) ) )));
hence thesis by A7,A9;
end;
hence thesis;
end;
