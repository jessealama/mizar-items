environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,FINSEQ_1,MODELC_2,SUBSET_1,ZF_LANG,XREAL_0,ORDINAL1,FUNCT_1,RELAT_1,XXREAL_0,INT_1,ARYTM_3,ARYTM_1,CARD_1,STRUCT_0,TARSKI,XBOOLEAN,LATTICES,CAT_3,ORDINAL4,ZF_MODEL,MODELC_1,FINSET_1,SEQ_1,REAL_1,CARD_3,SERIES_1,ZFMISC_1,MSUALG_3,ORDERS_1,SUBSTUT1,FSM_1,FSM_2,VALUED_1,MODELC_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,FINSET_1,CARD_1,NUMBERS,XCMPLX_0,XREAL_0,REAL_1,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,RELSET_1,FINSEQ_1,ORDERS_1,FUNCT_2,INT_1,SEQ_1,SERIES_1,PARTFUN1,STRUCT_0,MODELC_1,MODELC_2,RFINSEQ2,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB54;
definitions TARSKI,MODELC_2,SERIES_1,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB54;
theorems XBOOLE_0,ZFMISC_1,XBOOLE_1,TARSKI,FUNCT_1,FUNCT_2,FUNCT_7,WELLORD2,NAT_1,INT_1,ENUMSET1,XREAL_1,FINSEQ_1,ORDERS_1,XXREAL_0,MODELC_1,MODELC_2,ORDINAL1,SUBSET_1,FINSEQ_4,SERIES_1,CARD_1,CARD_2,SERIES_2,FINSET_1,RFINSEQ2,FINSEQ_3,SUBSET,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB54;
schemes NAT_1,FUNCT_2,MODELC_2,TARSKI,FUNCT_1,FINSEQ_1,RECDEF_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,XXREAL_0,XREAL_0,NAT_1,INT_1,ORDERS_1,FINSET_1,MODELC_2,FINSEQ_1,NUMBERS,VALUED_0,MEMBERED,STRUCT_0,MODELC_1,CARD_1,RELSET_1,FUNCT_2,CKB19,CKB31,CKB53;
constructors KNASTER,MODELC_2,SERIES_1,REAL_1,NEWTON,RFINSEQ2,SEQ_1,RELSET_1,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB54;
requirements REAL,NUMERALS,ARITHM,SUBSET,BOOLE;
begin
reserve k for Nat;
reserve x for set;
reserve L for FinSequence;
reserve H for LTL-formula;
reserve W for (Subset of ( Subformulae H ));
definition
let H;
let W;
let L;
func Partial_seq (L,W) -> Real_Sequence
means
:Def24: (for k holds ((( L . k ) in W implies ( it . k ) = ( len ( CastLTL ( L . k ) ) )) & ((not ( L . k ) in W) implies ( it . k ) = ( 0 ))));
existence
proof
deffunc F(set) = ( Length_fun (L,W,$1) );
A1: (for x holds (x in ( NAT ) implies F(x) in ( REAL )))
proof
let x;
assume that
x in ( NAT );
F(x) in ( NAT ) by ORDINAL1:def 12;
hence thesis;
end;
consider IT being (Function of ( NAT ),( REAL )) such that A2: (for x holds (x in ( NAT ) implies ( IT . x ) = F(x))) from FUNCT_2:sch 2(A1);
take IT;
(for k holds ((( L . k ) in W implies ( IT . k ) = ( len ( CastLTL ( L . k ) ) )) & ((not ( L . k ) in W) implies ( IT . k ) = ( 0 ))))
proof
let k;
A3: k in ( NAT ) by ORDINAL1:def 12;
A4: ((not ( L . k ) in W) implies ( IT . k ) = ( 0 ))
proof
assume A5: (not ( L . k ) in W);
( IT . k ) = ( Length_fun (L,W,k) ) by A2,A3;
hence thesis by A5,CKB54:def 1;
end;
(( L . k ) in W implies ( IT . k ) = ( len ( CastLTL ( L . k ) ) ))
proof
assume A6: ( L . k ) in W;
( IT . k ) = ( Length_fun (L,W,k) ) by A2,A3;
hence thesis by A6,CKB54:def 1;
end;
hence thesis by A4;
end;
hence thesis;
end;
uniqueness
proof
let R1 being Real_Sequence,R2 being Real_Sequence;
(((for k holds ((( L . k ) in W implies ( R1 . k ) = ( len ( CastLTL ( L . k ) ) )) & ((not ( L . k ) in W) implies ( R1 . k ) = ( 0 )))) & (for k holds ((( L . k ) in W implies ( R2 . k ) = ( len ( CastLTL ( L . k ) ) )) & ((not ( L . k ) in W) implies ( R2 . k ) = ( 0 ))))) implies R1 = R2)
proof
assume that
A7: (for k holds ((( L . k ) in W implies ( R1 . k ) = ( len ( CastLTL ( L . k ) ) )) & ((not ( L . k ) in W) implies ( R1 . k ) = ( 0 ))))
and
A8: (for k holds ((( L . k ) in W implies ( R2 . k ) = ( len ( CastLTL ( L . k ) ) )) & ((not ( L . k ) in W) implies ( R2 . k ) = ( 0 ))));
(for x holds (x in ( NAT ) implies ( R1 . x ) = ( R2 . x )))
proof
let x;
assume x in ( NAT );
then reconsider x as Nat;
now
per cases ;
suppose A9: ( L . x ) in W;

then ( R1 . x ) = ( len ( CastLTL ( L . x ) ) ) by A7;
hence thesis by A8,A9;
end;
suppose A10: (not ( L . x ) in W);

then ( R1 . x ) = ( 0 ) by A7;
hence thesis by A8,A10;
end;
end;
hence thesis;
end;
hence thesis by FUNCT_2:12;
end;
hence thesis;
end;
end;
