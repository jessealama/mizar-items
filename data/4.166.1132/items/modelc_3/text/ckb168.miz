environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,FINSEQ_1,MODELC_2,SUBSET_1,ZF_LANG,XREAL_0,ORDINAL1,FUNCT_1,RELAT_1,XXREAL_0,INT_1,ARYTM_3,ARYTM_1,CARD_1,STRUCT_0,TARSKI,XBOOLEAN,LATTICES,CAT_3,ORDINAL4,ZF_MODEL,MODELC_1,FINSET_1,SEQ_1,REAL_1,CARD_3,SERIES_1,ZFMISC_1,MSUALG_3,ORDERS_1,SUBSTUT1,FSM_1,FSM_2,VALUED_1,MODELC_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,FINSET_1,CARD_1,NUMBERS,XCMPLX_0,XREAL_0,REAL_1,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,RELSET_1,FINSEQ_1,ORDERS_1,FUNCT_2,INT_1,SEQ_1,SERIES_1,PARTFUN1,STRUCT_0,MODELC_1,MODELC_2,RFINSEQ2,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB54,CKB55,CKB56,CKB64,CKB76,CKB77,CKB82,CKB106,CKB108,CKB114,CKB115,CKB132,CKB134,CKB138,CKB140,CKB142,CKB148,CKB149,CKB150,CKB151,CKB152,CKB153,CKB154,CKB155,CKB156,CKB157,CKB159,CKB160,CKB162;
definitions TARSKI,MODELC_2,SERIES_1,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB54,CKB55,CKB56,CKB64,CKB76,CKB77,CKB82,CKB106,CKB108,CKB114,CKB115,CKB132,CKB134,CKB138,CKB140,CKB142,CKB149,CKB150,CKB151,CKB152,CKB153,CKB154,CKB155,CKB156,CKB157,CKB159,CKB160,CKB162;
theorems XBOOLE_0,ZFMISC_1,XBOOLE_1,TARSKI,FUNCT_1,FUNCT_2,FUNCT_7,WELLORD2,NAT_1,INT_1,ENUMSET1,XREAL_1,FINSEQ_1,ORDERS_1,XXREAL_0,MODELC_1,MODELC_2,ORDINAL1,SUBSET_1,FINSEQ_4,SERIES_1,CARD_1,CARD_2,SERIES_2,FINSET_1,RFINSEQ2,FINSEQ_3,SUBSET,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106,CKB108,CKB110,CKB111,CKB112,CKB113,CKB114,CKB115,CKB116,CKB117,CKB118,CKB119,CKB120,CKB121,CKB122,CKB123,CKB124,CKB125,CKB126,CKB127,CKB128,CKB131,CKB132,CKB133,CKB134,CKB135,CKB136,CKB137,CKB138,CKB139,CKB140,CKB142,CKB143,CKB144,CKB145,CKB146,CKB147,CKB149,CKB150,CKB151,CKB152,CKB153,CKB154,CKB155,CKB156,CKB157,CKB158,CKB159,CKB160,CKB161,CKB162,CKB163,CKB164,CKB165,CKB166,CKB167;
schemes NAT_1,FUNCT_2,MODELC_2,TARSKI,FUNCT_1,FINSEQ_1,RECDEF_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,XXREAL_0,XREAL_0,NAT_1,INT_1,ORDERS_1,FINSET_1,MODELC_2,FINSEQ_1,NUMBERS,VALUED_0,MEMBERED,STRUCT_0,MODELC_1,CARD_1,RELSET_1,FUNCT_2,CKB19,CKB31,CKB53,CKB107,CKB109,CKB129,CKB130,CKB141,CKB148;
constructors KNASTER,MODELC_2,SERIES_1,REAL_1,NEWTON,RFINSEQ2,SEQ_1,RELSET_1,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB54,CKB55,CKB56,CKB64,CKB76,CKB77,CKB82,CKB106,CKB108,CKB114,CKB115,CKB132,CKB134,CKB138,CKB140,CKB142,CKB148,CKB149,CKB150,CKB151,CKB152,CKB153,CKB154,CKB155,CKB156,CKB157,CKB159,CKB160,CKB162;
requirements REAL,NUMERALS,ARITHM,SUBSET,BOOLE;
begin
reserve k for Nat;
reserve m for Nat;
reserve i for Nat;
reserve j for Nat;
reserve L for FinSequence;
reserve H for LTL-formula;
reserve w for (Element of ( Inf_seq ( AtomicFamily ) ));
reserve v for  neg-inner-most LTL-formula;
reserve U for (Choice_Function of ( BOOL ( Subformulae v ) ));
reserve N1 for  strict LTLnode over v;
reserve N2 for  strict LTLnode over v;
reserve M1 for  strict LTLnode over v;
theorem
Th74: (w |= v implies (for i holds (((H in (the LTLold of ( CastNode (( ( chosen_run (w,v,U) ) . ( i + 1 ) ),v) )) & H is  Until) & ( Shift (w,i) ) |= ( the_right_argument_of H )) implies ( the_right_argument_of H ) in (the LTLold of ( CastNode (( ( chosen_run (w,v,U) ) . ( i + 1 ) ),v) )))))
proof
assume A1: w |= v;
(for j holds (((H in (the LTLold of ( CastNode (( ( chosen_run (w,v,U) ) . ( j + 1 ) ),v) )) & H is  Until) & ( Shift (w,j) ) |= ( the_right_argument_of H )) implies ( the_right_argument_of H ) in (the LTLold of ( CastNode (( ( chosen_run (w,v,U) ) . ( j + 1 ) ),v) ))))
proof
set LN = ( LTLNodes v );
let j;
set s = ( CastNode (( ( chosen_run (w,v,U) ) . j ),v) );
set s1 = ( CastNode (( ( chosen_run (w,v,U) ) . ( j + 1 ) ),v) );
set w0 = ( Shift (w,j) );
set N = ( 'X' s );
set f = ( choice_succ_func (w0,v,U) );
set n = ( chosen_succ_end_num (w0,v,U,N) );
set nextnode = ( CastNode (( ( f |** n ) . N ),v) );
A2: w0 |= ( * N ) by A1,CKB167:1;
A3: N in LN by CKB106:def 1;
now
per cases ;
suppose A4: N is non  elementary;

deffunc F(set) = ( CastNode (( ( f |** ( CastNat ( ( CastNat $1 ) - 1 ) ) ) . N ),v) );
set n1 = ( n + 1 );
(ex L st (( len L ) = n1 & (for k being Nat holds (k in ( dom L ) implies ( L . k ) = F(k))))) from FINSEQ_1:sch 2;
then consider L such that A5: ( len L ) = n1 and A6: (for k being Nat holds (k in ( dom L ) implies ( L . k ) = F(k)));
A7: ( Seg n1 ) = ( dom L ) by A5,FINSEQ_1:def 3;
A8: (for k holds ((1 <= k & k <= n1) implies ( L . k ) = ( CastNode (( ( f |** ( CastNat ( k - 1 ) ) ) . N ),v) )))
proof
let k;
assume (1 <= k & k <= n1);
then k in ( Seg n1 ) by FINSEQ_1:1;
then ( L . k ) = ( CastNode (( ( f |** ( CastNat ( ( CastNat k ) - 1 ) ) ) . N ),v) ) by A6,A7;
hence thesis by MODELC_2:def 1;
end;
A9: (for k holds ((1 <= k & k < ( len L )) implies (ex N1 st (ex M1 st ((N1 = ( L . k ) & M1 = ( L . ( k + 1 ) )) & M1 is_succ_of N1)))))
proof
let k;
assume that
A10: 1 <= k
and
A11: k < ( len L );
set k1 = ( k - 1 );
reconsider k1 as Nat by A10,NAT_1:21;
set M1 = ( CastNode (( ( f |** ( k1 + 1 ) ) . N ),v) );
set kp = ( k + 1 );
(1 <= kp & kp <= n1) by A5,A10,A11,NAT_1:13;
then A12: ( L . ( k + 1 ) ) = ( CastNode (( ( f |** ( CastNat ( kp - 1 ) ) ) . N ),v) ) by A8
.= M1 by MODELC_2:def 1;
set N1 = ( CastNode (( ( f |** k1 ) . N ),v) );
( k - 1 ) < ( n1 - 1 ) by A5,A11,XREAL_1:14;
then A13: M1 is_succ_of N1 by A2,A4,CKB159:def 1;
( L . k ) = ( CastNode (( ( f |** ( CastNat k1 ) ) . N ),v) ) by A5,A8,A10,A11
.= N1 by MODELC_2:def 1;
hence thesis by A13,A12;
end;
then A14: L is_Finseq_for v by CKB36:def 1;
1 <= n1 by NAT_1:11;
then A15: ( L . 1 ) = ( CastNode (( ( f |** ( CastNat ( 1 - 1 ) ) ) . N ),v) ) by A8
.= ( CastNode (( ( f |** ( 0 ) ) . N ),v) ) by MODELC_2:def 1
.= ( CastNode (( ( id LN ) . N ),v) ) by FUNCT_7:84
.= ( CastNode (N,v) ) by A3,FUNCT_1:18
.= N by CKB33:def 1;
1 <= n1 by NAT_1:11;
then A16: ( L . ( len L ) ) = ( CastNode (( ( f |** ( CastNat ( n1 - 1 ) ) ) . N ),v) ) by A5,A8
.= nextnode by MODELC_2:def 1;
A17: nextnode is  elementary by A2,A4,CKB159:def 1;
1 <= ( len L ) by A5,NAT_1:11;
then A18: ( len L ) > 1 by A4,A15,A16,A17,XXREAL_0:1;
A19: (((H in (the LTLold of nextnode) & H is  Until) & w0 |= ( the_right_argument_of H )) implies ( the_right_argument_of H ) in (the LTLold of nextnode))
proof
set H2 = ( the_right_argument_of H );
assume that
A20: H in (the LTLold of nextnode)
and
A21: H is  Until
and
A22: w0 |= H2;
((the LTLold of ( CastNode (( L . 1 ),v) )) = ( {} v ) & (the LTLold of ( CastNode (( L . ( len L ) ),v) )) = (the LTLold of nextnode)) by A15,A16,CKB33:def 1;
then consider m such that A23: 1 <= m and A24: m < n1 and A25: ((not H in (the LTLold of ( CastNode (( L . m ),v) ))) & H in (the LTLold of ( CastNode (( L . ( m + 1 ) ),v) ))) by A5,A14,A18,A20,CKB89:1;
set mm1 = ( m - 1 );
reconsider mm1 as Nat by A23,NAT_1:21;
set Nm1 = ( ( f |** mm1 ) . N );
set m1 = ( m + 1 );
A26: Nm1 in LN by A3,FUNCT_2:5;
consider N1,N2 such that A27: N1 = ( L . m ) and A28: N2 = ( L . ( m + 1 ) ) and A29: N2 is_succ_of N1 by A5,A9,A23,A24;
A30: N1 = ( CastNode (( ( f |** ( CastNat mm1 ) ) . N ),v) ) by A8,A23,A24,A27
.= ( CastNode (Nm1,v) ) by MODELC_2:def 1;
A31: (1 <= m1 & m1 <= n1) by A23,A24,NAT_1:13;
then A32: N2 = ( CastNode (( ( f |** ( CastNat ( m1 - 1 ) ) ) . N ),v) ) by A8,A28
.= ( CastNode (( ( f |** ( mm1 + 1 ) ) . N ),v) ) by MODELC_2:def 1
.= ( CastNode (( ( f * ( f |** mm1 ) ) . N ),v) ) by FUNCT_7:71
.= ( CastNode (( f . ( ( f |** mm1 ) . N ) ),v) ) by A3,FUNCT_2:15
.= ( CastNode (( chosen_succ (w0,v,U,( CastNode (Nm1,v) )) ),v) ) by A26,CKB138:def 1
.= ( chosen_succ (w0,v,U,N1) ) by A30,CKB33:def 1;
( m - 1 ) < ( n1 - 1 ) by A24,XREAL_1:14;
then A33: N1 is non  elementary by A2,A4,A30,CKB159:def 1;
( chosen_formula (U,N1) ) = H
proof
set G = ( chosen_formula (U,N1) );
set M2 = (the LTLold of N2);
set M1 = (the LTLold of N1);
set M0 = (the LTLnew of N1);
A34: G in M0 by A33,CKB133:1;
A35: M2 = ( M1 \/ { G } )
proof
now
per cases ;
suppose (((not G is  Until) & w0 |= ( * ( SuccNode1 (G,N1) ) )) or (G is  Until & w0 |/= ( the_right_argument_of G )));

then ( chosen_succ (w0,v,U,N1) ) = ( SuccNode1 (G,N1) ) by CKB134:def 1;
hence thesis by A32,A34,CKB20:def 1;
end;
suppose A36: (not (((not G is  Until) & w0 |= ( * ( SuccNode1 (G,N1) ) )) or (G is  Until & w0 |/= ( the_right_argument_of G ))));

N2 = ( SuccNode2 (G,N1) ) by A32,A36,CKB134:def 1;
hence thesis by A34,CKB21:def 1;
end;
end;
hence thesis;
end;
A37: ((not H in M1) & H in M2) by A25,A27,A28,CKB33:def 1;
now
assume H <> G;
then (not H in { G }) by TARSKI:def 1;
hence contradiction by A37,A35,XBOOLE_0:def 3;
end;
hence thesis;
end;
then A38: N2 = ( SuccNode2 (H,N1) ) by A21,A22,A32,CKB134:def 1;
A39: ( CastNode (( L . ( len L ) ),v) ) = nextnode by A16,CKB33:def 1;
(N1 = ( CastNode (( L . m ),v) ) & N2 = ( CastNode (( L . ( m + 1 ) ),v) )) by A27,A28,CKB33:def 1;
then N2 is_succ_of N1,H by A25,A29,CKB90:1;
then A40: H in (the LTLnew of N1) by CKB22:def 1;
(the LTLnew of nextnode) = ( {} ) by A17,CKB27:def 1;
then (the LTLnew of ( CastNode (( L . m1 ),v) )) c= (the LTLold of ( CastNode (( L . ( len L ) ),v) )) by A5,A14,A31,A39,CKB96:1;
then A41: (the LTLnew of N2) c= (the LTLold of nextnode) by A28,A39,CKB33:def 1;
(the LTLold of ( CastNode (( L . m ),v) )) c= (the LTLold of ( CastNode (( L . ( len L ) ),v) )) by A5,A14,A23,A24,CKB93:1;
then A42: (the LTLold of N1) c= (the LTLold of nextnode) by A27,A39,CKB33:def 1;
( LTLNew2 H ) = { H2 } by A21,CKB17:def 1;
then A43: (the LTLnew of N2) = ( ( (the LTLnew of N1) \ { H } ) \/ ( { H2 } \ (the LTLold of N1) ) ) by A38,A40,CKB21:def 1;
now
per cases ;
suppose H2 in (the LTLold of N1);

hence thesis by A42;
end;
suppose A44: (not H2 in (the LTLold of N1));

H2 in { H2 } by TARSKI:def 1;
then H2 in ( { H2 } \ (the LTLold of N1) ) by A44,XBOOLE_0:def 5;
then H2 in (the LTLnew of N2) by A43,XBOOLE_0:def 3;
hence thesis by A41;
end;
end;
hence thesis;
end;
( ( chosen_run (w,v,U) ) . ( j + 1 ) ) = ( chosen_next (w0,v,U,s) ) by CKB162:def 1
.= nextnode by A2,A4,CKB160:def 1;
hence thesis by A19,CKB33:def 1;
end;
suppose N is  elementary;

then (the LTLnew of N) = (the LTLnew of ( FinalNode v )) by CKB27:def 1;
then ( chosen_next (w0,v,U,s) ) = N by A2,CKB160:def 1;
then s1 = ( CastNode (N,v) ) by CKB162:def 1
.= N by CKB33:def 1;
hence thesis;
end;
end;
hence thesis;
end;
hence thesis;
end;
