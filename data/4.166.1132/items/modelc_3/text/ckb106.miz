environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,FINSEQ_1,MODELC_2,SUBSET_1,ZF_LANG,XREAL_0,ORDINAL1,FUNCT_1,RELAT_1,XXREAL_0,INT_1,ARYTM_3,ARYTM_1,CARD_1,STRUCT_0,TARSKI,XBOOLEAN,LATTICES,CAT_3,ORDINAL4,ZF_MODEL,MODELC_1,FINSET_1,SEQ_1,REAL_1,CARD_3,SERIES_1,ZFMISC_1,MSUALG_3,ORDERS_1,SUBSTUT1,FSM_1,FSM_2,VALUED_1,MODELC_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,FINSET_1,CARD_1,NUMBERS,XCMPLX_0,XREAL_0,REAL_1,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,RELSET_1,FINSEQ_1,ORDERS_1,FUNCT_2,INT_1,SEQ_1,SERIES_1,PARTFUN1,STRUCT_0,MODELC_1,MODELC_2,RFINSEQ2,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB54,CKB55,CKB56,CKB64,CKB76,CKB77,CKB82;
definitions TARSKI,MODELC_2,SERIES_1,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB54,CKB55,CKB56,CKB64,CKB76,CKB77,CKB82;
theorems XBOOLE_0,ZFMISC_1,XBOOLE_1,TARSKI,FUNCT_1,FUNCT_2,FUNCT_7,WELLORD2,NAT_1,INT_1,ENUMSET1,XREAL_1,FINSEQ_1,ORDERS_1,XXREAL_0,MODELC_1,MODELC_2,ORDINAL1,SUBSET_1,FINSEQ_4,SERIES_1,CARD_1,CARD_2,SERIES_2,FINSET_1,RFINSEQ2,FINSEQ_3,SUBSET,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB103,CKB104,CKB105;
schemes NAT_1,FUNCT_2,MODELC_2,TARSKI,FUNCT_1,FINSEQ_1,RECDEF_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,XXREAL_0,XREAL_0,NAT_1,INT_1,ORDERS_1,FINSET_1,MODELC_2,FINSEQ_1,NUMBERS,VALUED_0,MEMBERED,STRUCT_0,MODELC_1,CARD_1,RELSET_1,FUNCT_2,CKB19,CKB31,CKB53;
constructors KNASTER,MODELC_2,SERIES_1,REAL_1,NEWTON,RFINSEQ2,SEQ_1,RELSET_1,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB54,CKB55,CKB56,CKB64,CKB76,CKB77,CKB82;
requirements REAL,NUMERALS,ARITHM,SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve v for LTL-formula;
definition
let v;
func LTLNodes v -> non empty set
means
:Def30: (x in it iff (ex N being  strict LTLnode over v st x = N));
existence
proof
set T = ( bool ( Subformulae v ) );
set Y = [: T,T,T :];
defpred P[ set,set ]
 means
($1 in Y & (ex y1,y2,y3 being (Subset of ( Subformulae v )) st (ex N being  strict LTLnode over v st (((($1 = [ [ y1,y2 ],y3 ] & $2 = N) & (the LTLold of N) = y1) & (the LTLnew of N) = y2) & (the LTLnext of N) = y3))));
A1: (for x,y,z being set holds ((P[ x,y ] & P[ x,z ]) implies y = z))
proof
let x being set,y being set,z being set;
assume that
A2: P[ x,y ]
and
A3: P[ x,z ];
consider y1 being (Subset of ( Subformulae v )),y2 being (Subset of ( Subformulae v )),y3 being (Subset of ( Subformulae v )),N1 being  strict LTLnode over v such that A4: x = [ [ y1,y2 ],y3 ] and A5: (((y = N1 & (the LTLold of N1) = y1) & (the LTLnew of N1) = y2) & (the LTLnext of N1) = y3) by A2;
consider z1 being (Subset of ( Subformulae v )),z2 being (Subset of ( Subformulae v )),z3 being (Subset of ( Subformulae v )),N2 being  strict LTLnode over v such that A6: x = [ [ z1,z2 ],z3 ] and A7: (((z = N2 & (the LTLold of N2) = z1) & (the LTLnew of N2) = z2) & (the LTLnext of N2) = z3) by A3;
A8: y3 = z3 by A4,A6,ZFMISC_1:27;
A9: [ y1,y2 ] = [ z1,z2 ] by A4,A6,ZFMISC_1:27;
then y1 = z1 by ZFMISC_1:27;
hence thesis by A5,A7,A9,A8,ZFMISC_1:27;
end;
consider IT being set such that A10: (for x holds (x in IT iff (ex y st (y in Y & P[ y,x ])))) from TARSKI:sch 1(A1);
IT is non empty
proof
set e = ( {} v );
set x = LTLnode (# e,e,e #);
set y = [ [ e,e ],e ];
[ e,e ] in [: T,T :] by ZFMISC_1:def 2;
then [ [ e,e ],e ] in [: [: T,T :],T :] by ZFMISC_1:def 2;
then P[ y,x ] by ZFMISC_1:def 3;
hence thesis by A10;
end;
then reconsider IT as non empty set;
A11: ((ex N being  strict LTLnode over v st x = N) implies x in IT)
proof
assume (ex N being  strict LTLnode over v st x = N);
then consider N being  strict LTLnode over v such that A12: x = N;
set y3 = (the LTLnext of N);
set y2 = (the LTLnew of N);
set y1 = (the LTLold of N);
set y = [ [ y1,y2 ],y3 ];
[ y1,y2 ] in [: T,T :] by ZFMISC_1:def 2;
then [ [ y1,y2 ],y3 ] in [: [: T,T :],T :] by ZFMISC_1:def 2;
then y in Y by ZFMISC_1:def 3;
hence thesis by A10,A12;
end;
take IT;
(x in IT implies (ex N being  strict LTLnode over v st x = N))
proof
assume x in IT;
then (ex y st (y in Y & P[ y,x ])) by A10;
hence thesis;
end;
hence thesis by A11;
end;
uniqueness
proof
let X being non empty set,Y being non empty set;
(((for x holds (x in X iff (ex N being  strict LTLnode over v st x = N))) & (for x holds (x in Y iff (ex N being  strict LTLnode over v st x = N)))) implies X = Y)
proof
assume that
A13: (for x holds (x in X iff (ex N being  strict LTLnode over v st x = N)))
and
A14: (for x holds (x in Y iff (ex N being  strict LTLnode over v st x = N)));
(for x holds (x in X iff x in Y))
proof
let x;
(x in X iff (ex N being  strict LTLnode over v st x = N)) by A13;
hence thesis by A14;
end;
hence thesis by TARSKI:1;
end;
hence thesis;
end;
end;
