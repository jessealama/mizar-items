environ
vocabularies NUMBERS,AMI_3,AMI_1,FSM_1,ORDINAL1,CAT_1,XBOOLE_0,FUNCT_1,RELAT_1,FINSEQ_1,CARD_1,AMISTD_2,GRAPHSP,CARD_3,AMISTD_1,SUBSET_1,CIRCUIT2,FUNCT_4,FUNCOP_1,SETFAM_1,ZFMISC_1,XXREAL_0,TARSKI,ARYTM_3,GOBOARD5,FRECHET,ARYTM_1,INT_1,UNIALG_1,CARD_5,PARTFUN1,NAT_1,COMPOS_1,PBOOLE;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,FUNCT_2,ZFMISC_1,CARD_1,ORDINAL1,NAT_1,NUMBERS,XCMPLX_0,INT_1,FUNCOP_1,PARTFUN1,PBOOLE,FINSEQ_1,FUNCT_4,XXREAL_0,MCART_1,VALUED_1,STRUCT_0,CARD_3,FUNCT_7,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,AMI_3,AMISTD_1,AMISTD_2;
definitions TARSKI,FUNCT_1,FUNCT_7,AMISTD_1,AMISTD_2,XBOOLE_0,AMI_3,FUNCOP_1,AMI_2,COMPOS_1,EXTPRO_1,CARD_3,NAT_1,MCART_1,MEMSTR_0;
theorems TARSKI,NAT_1,AMI_3,FUNCT_4,AMI_5,FUNCT_1,FUNCOP_1,SETFAM_1,AMISTD_1,MCART_1,FINSEQ_1,MEMSTR_0,FUNCT_7,CARD_3,XBOOLE_0,XBOOLE_1,NAT_D,RELAT_1,ORDINAL1,PARTFUN1,PBOOLE,RECDEF_2,VALUED_1,COMPOS_1,EXTPRO_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,NUMBERS,XREAL_0,NAT_1,INT_1,FINSEQ_1,CARD_3,AMI_3,AMISTD_2,RELSET_1,ZFMISC_1,FUNCT_2,FUNCT_4,VALUED_0,COMPOS_1,EXTPRO_1,PBOOLE,FUNCT_7,PRE_POLY,MEMSTR_0,CARD_1,CKB1,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
constructors XXREAL_0,NAT_1,NAT_D,ZFMISC_1,AMI_3,AMISTD_2,RELSET_1,RECDEF_2,MCART_1,VALUED_1,AMI_2,EXTPRO_1,AMISTD_1,PRE_POLY,DOMAIN_1,FUNCT_7,MEMSTR_0;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
reserve il for (Element of ( NAT ));
reserve k for  natural number;
theorem
Th48: ( NIC (( SCM-goto k ),il) ) = { k }
proof
now
let x being set;
A1:now
reconsider il1 = il as (Element of ( ObjectKind ( IC ( SCM ) ) )) by MEMSTR_0:def 3;
set I = ( SCM-goto k );
set t = the (State of ( SCM ));
set Q = the (Instruction-Sequence of ( SCM ));
assume A2: x = k;
reconsider n = il as (Element of ( NAT ));
reconsider u = ( t +* (( IC ( SCM ) ),il1) ) as (Element of ( product (the Object-Kind of ( SCM )) )) by CARD_3:107;
reconsider P = ( Q +* (il,I) ) as (Instruction-Sequence of ( SCM ));
A3: ( P /. il ) = ( P . il ) by PBOOLE:143;
( IC ( SCM ) ) in ( dom t ) by MEMSTR_0:2;
then A4: ( IC u ) = n by FUNCT_7:31;
il in ( NAT );
then il in ( dom Q ) by PARTFUN1:def 2;
then B4: ( P . n ) = I by FUNCT_7:31;
then ( IC ( Following (P,u) ) ) = k by A3,A4,AMI_3:7;
hence x in { ( IC ( Exec (( SCM-goto k ),s) ) ) where s is (Element of ( product (the Object-Kind of ( SCM )) )): ( IC s ) = il } by A2,A4,A3,B4;
end;
now
assume x in { ( IC ( Exec (( SCM-goto k ),s) ) ) where s is (Element of ( product (the Object-Kind of ( SCM )) )): ( IC s ) = il };
then (ex s being (Element of ( product (the Object-Kind of ( SCM )) )) st (x = ( IC ( Exec (( SCM-goto k ),s) ) ) & ( IC s ) = il));
hence x = k by AMI_3:7;
end;
hence (x in { k } iff x in { ( IC ( Exec (( SCM-goto k ),s) ) ) where s is (Element of ( product (the Object-Kind of ( SCM )) )): ( IC s ) = il }) by A1,TARSKI:def 1;
end;
hence thesis by TARSKI:1;
end;
