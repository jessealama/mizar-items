environ
vocabularies NUMBERS,AMI_3,AMI_1,FSM_1,ORDINAL1,CAT_1,XBOOLE_0,FUNCT_1,RELAT_1,FINSEQ_1,CARD_1,AMISTD_2,GRAPHSP,CARD_3,AMISTD_1,SUBSET_1,CIRCUIT2,FUNCT_4,FUNCOP_1,SETFAM_1,ZFMISC_1,XXREAL_0,TARSKI,ARYTM_3,GOBOARD5,FRECHET,ARYTM_1,INT_1,UNIALG_1,CARD_5,PARTFUN1,NAT_1,COMPOS_1,PBOOLE;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,FUNCT_2,ZFMISC_1,CARD_1,ORDINAL1,NAT_1,NUMBERS,XCMPLX_0,INT_1,FUNCOP_1,PARTFUN1,PBOOLE,FINSEQ_1,FUNCT_4,XXREAL_0,MCART_1,VALUED_1,STRUCT_0,CARD_3,FUNCT_7,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,AMI_3,AMISTD_1,AMISTD_2;
definitions TARSKI,FUNCT_1,FUNCT_7,AMISTD_1,AMISTD_2,XBOOLE_0,AMI_3,FUNCOP_1,AMI_2,COMPOS_1,EXTPRO_1,CARD_3,NAT_1,MCART_1,MEMSTR_0;
theorems TARSKI,NAT_1,AMI_3,FUNCT_4,AMI_5,FUNCT_1,FUNCOP_1,SETFAM_1,AMISTD_1,MCART_1,FINSEQ_1,MEMSTR_0,FUNCT_7,CARD_3,XBOOLE_0,XBOOLE_1,NAT_D,RELAT_1,ORDINAL1,PARTFUN1,PBOOLE,RECDEF_2,VALUED_1,COMPOS_1,EXTPRO_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB28,CKB29,CKB31,CKB32,CKB34,CKB35;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,NUMBERS,XREAL_0,NAT_1,INT_1,FINSEQ_1,CARD_3,AMI_3,AMISTD_2,RELSET_1,ZFMISC_1,FUNCT_2,FUNCT_4,VALUED_0,COMPOS_1,EXTPRO_1,PBOOLE,FUNCT_7,PRE_POLY,MEMSTR_0,CARD_1,CKB1,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB30,CKB33,CKB36;
constructors XXREAL_0,NAT_1,NAT_D,ZFMISC_1,AMI_3,AMISTD_2,RELSET_1,RECDEF_2,MCART_1,VALUED_1,AMI_2,EXTPRO_1,AMISTD_1,PRE_POLY,DOMAIN_1,FUNCT_7,MEMSTR_0;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
reserve a for Data-Location;
reserve b for Data-Location;
reserve il for (Element of ( NAT ));
reserve k for  natural number;
theorem
Th54: ( SUCC (il,( SCM )) ) = { il,( succ il ) }
proof
set X = { ( ( NIC (I,il) ) \ ( JUMP I ) ) where I is (Element of (the Instructions of ( SCM ))): (not contradiction) };
set N = { il,( succ il ) };
now
let x being set;
hereby
assume x in ( union X );
then consider Y being set such that A1: x in Y and A2: Y in X by TARSKI:def 4;
consider i being (Element of (the Instructions of ( SCM ))) such that A3: Y = ( ( NIC (i,il) ) \ ( JUMP i ) ) by A2;
per cases  by AMI_3:24;
suppose i = [ ( 0 ),( {} ),( {} ) ];

then x in ( { il } \ ( JUMP ( halt ( SCM ) ) ) ) by A1,A3,AMISTD_1:2,AMI_3:26;
then x = il by TARSKI:def 1;
hence x in N by TARSKI:def 2;
end;
suppose (ex a st (ex b st i = ( a := b )));

then consider a,b such that A4: i = ( a := b );
x in ( { ( succ il ) } \ ( JUMP ( a := b ) ) ) by A1,A3,A4,AMISTD_1:12;
then x = ( succ il ) by TARSKI:def 1;
hence x in N by TARSKI:def 2;
end;
suppose (ex a st (ex b st i = ( AddTo (a,b) )));

then consider a,b such that A5: i = ( AddTo (a,b) );
x in ( { ( succ il ) } \ ( JUMP ( AddTo (a,b) ) ) ) by A1,A3,A5,AMISTD_1:12;
then x = ( succ il ) by TARSKI:def 1;
hence x in N by TARSKI:def 2;
end;
suppose (ex a st (ex b st i = ( SubFrom (a,b) )));

then consider a,b such that A6: i = ( SubFrom (a,b) );
x in ( { ( succ il ) } \ ( JUMP ( SubFrom (a,b) ) ) ) by A1,A3,A6,AMISTD_1:12;
then x = ( succ il ) by TARSKI:def 1;
hence x in N by TARSKI:def 2;
end;
suppose (ex a st (ex b st i = ( MultBy (a,b) )));

then consider a,b such that A7: i = ( MultBy (a,b) );
x in ( { ( succ il ) } \ ( JUMP ( MultBy (a,b) ) ) ) by A1,A3,A7,AMISTD_1:12;
then x = ( succ il ) by TARSKI:def 1;
hence x in N by TARSKI:def 2;
end;
suppose (ex a st (ex b st i = ( Divide (a,b) )));

then consider a,b such that A8: i = ( Divide (a,b) );
x in ( { ( succ il ) } \ ( JUMP ( Divide (a,b) ) ) ) by A1,A3,A8,AMISTD_1:12;
then x = ( succ il ) by TARSKI:def 1;
hence x in N by TARSKI:def 2;
end;
suppose (ex k st i = ( SCM-goto k ));

then consider k such that A9: i = ( SCM-goto k );
x in ( { k } \ ( JUMP i ) ) by A1,A3,A9,CKB28:1;
then x in ( { k } \ { k } ) by A9,CKB29:1;
hence x in N by XBOOLE_1:37;
end;
suppose (ex a st (ex k st i = ( a =0_goto k )));

then consider a,k such that A10: i = ( a =0_goto k );
A11: ( NIC (i,il) ) = { k,( succ il ) } by A10,CKB31:1;
x in ( NIC (i,il) ) by A1,A3,XBOOLE_0:def 5;
then A12: (x = k or x = ( succ il )) by A11,TARSKI:def 2;
x in ( ( NIC (i,il) ) \ { k } ) by A1,A3,A10,CKB32:1;
then (not x in { k }) by XBOOLE_0:def 5;
hence x in N by A12,TARSKI:def 1,TARSKI:def 2;
end;
suppose (ex a st (ex k st i = ( a >0_goto k )));

then consider a,k such that A13: i = ( a >0_goto k );
A14: ( NIC (i,il) ) = { k,( succ il ) } by A13,CKB34:1;
x in ( NIC (i,il) ) by A1,A3,XBOOLE_0:def 5;
then A15: (x = k or x = ( succ il )) by A14,TARSKI:def 2;
x in ( ( NIC (i,il) ) \ { k } ) by A1,A3,A13,CKB35:1;
then (not x in { k }) by XBOOLE_0:def 5;
hence x in N by A15,TARSKI:def 1,TARSKI:def 2;
end;
end;
assume A16: x in { il,( succ il ) };
per cases  by A16,TARSKI:def 2;
suppose A17: x = il;

set i = ( halt ( SCM ) );
( ( NIC (i,il) ) \ ( JUMP i ) ) = { il } by AMISTD_1:2;
then A18: { il } in X;
x in { il } by A17,TARSKI:def 1;
hence x in ( union X ) by A18,TARSKI:def 4;
end;
suppose A19: x = ( succ il );

set a = the Data-Location;
set i = ( AddTo (a,a) );
( ( NIC (i,il) ) \ ( JUMP i ) ) = { ( succ il ) } by AMISTD_1:12;
then A20: { ( succ il ) } in X;
x in { ( succ il ) } by A19,TARSKI:def 1;
hence x in ( union X ) by A20,TARSKI:def 4;
end;
end;
hence thesis by TARSKI:1;
end;
