environ
vocabularies NUMBERS,AMI_3,AMI_1,FSM_1,ORDINAL1,CAT_1,XBOOLE_0,FUNCT_1,RELAT_1,FINSEQ_1,CARD_1,AMISTD_2,GRAPHSP,CARD_3,AMISTD_1,SUBSET_1,CIRCUIT2,FUNCT_4,FUNCOP_1,SETFAM_1,ZFMISC_1,XXREAL_0,TARSKI,ARYTM_3,GOBOARD5,FRECHET,ARYTM_1,INT_1,UNIALG_1,CARD_5,PARTFUN1,NAT_1,COMPOS_1,PBOOLE;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,FUNCT_2,ZFMISC_1,CARD_1,ORDINAL1,NAT_1,NUMBERS,XCMPLX_0,INT_1,FUNCOP_1,PARTFUN1,PBOOLE,FINSEQ_1,FUNCT_4,XXREAL_0,MCART_1,VALUED_1,STRUCT_0,CARD_3,FUNCT_7,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,AMI_3,AMISTD_1,AMISTD_2;
definitions TARSKI,FUNCT_1,FUNCT_7,AMISTD_1,AMISTD_2,XBOOLE_0,AMI_3,FUNCOP_1,AMI_2,COMPOS_1,EXTPRO_1,CARD_3,NAT_1,MCART_1,MEMSTR_0;
theorems TARSKI,NAT_1,AMI_3,FUNCT_4,AMI_5,FUNCT_1,FUNCOP_1,SETFAM_1,AMISTD_1,MCART_1,FINSEQ_1,MEMSTR_0,FUNCT_7,CARD_3,XBOOLE_0,XBOOLE_1,NAT_D,RELAT_1,ORDINAL1,PARTFUN1,PBOOLE,RECDEF_2,VALUED_1,COMPOS_1,EXTPRO_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB28,CKB29,CKB31,CKB32,CKB34,CKB35,CKB37,CKB38,CKB48;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,NUMBERS,XREAL_0,NAT_1,INT_1,FINSEQ_1,CARD_3,AMI_3,AMISTD_2,RELSET_1,ZFMISC_1,FUNCT_2,FUNCT_4,VALUED_0,COMPOS_1,EXTPRO_1,PBOOLE,FUNCT_7,PRE_POLY,MEMSTR_0,CARD_1,CKB1,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB30,CKB33,CKB36,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB49;
constructors XXREAL_0,NAT_1,NAT_D,ZFMISC_1,AMI_3,AMISTD_2,RELSET_1,RECDEF_2,MCART_1,VALUED_1,AMI_2,EXTPRO_1,AMISTD_1,PRE_POLY,DOMAIN_1,FUNCT_7,MEMSTR_0;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
reserve a for Data-Location;
reserve b for Data-Location;
registration
let a;
let b;
cluster ( InsCode ( AddTo (a,b) ) ) -> non  jump-only for (InsType of ( SCM ));
coherence
proof
set w = the (State of ( SCM ));
set t = ( w +* ( (( dl. ( 0 ) ),( dl. 1 )) --> (( 0 ),1) ) );
A6: ( InsCode ( AddTo (a,b) ) ) = 2 by RECDEF_2:def 1
.= ( InsCode ( AddTo (( dl. ( 0 ) ),( dl. 1 )) ) ) by RECDEF_2:def 1;
A7: ( dom ( (( dl. ( 0 ) ),( dl. 1 )) --> (( 0 ),1) ) ) = { ( dl. ( 0 ) ),( dl. 1 ) } by FUNCT_4:62;
then ( dl. ( 0 ) ) in ( dom ( (( dl. ( 0 ) ),( dl. 1 )) --> (( 0 ),1) ) ) by TARSKI:def 2;
then A8: ( t . ( dl. ( 0 ) ) ) = ( ( (( dl. ( 0 ) ),( dl. 1 )) --> (( 0 ),1) ) . ( dl. ( 0 ) ) ) by FUNCT_4:13
.= ( 0 ) by AMI_3:10,FUNCT_4:63;
A9: ( dl. ( 0 ) ) in ( Data-Locations ( SCM ) ) by AMI_3:28;
( dl. 1 ) in ( dom ( (( dl. ( 0 ) ),( dl. 1 )) --> (( 0 ),1) ) ) by A7,TARSKI:def 2;
then ( t . ( dl. 1 ) ) = ( ( (( dl. ( 0 ) ),( dl. 1 )) --> (( 0 ),1) ) . ( dl. 1 ) ) by FUNCT_4:13
.= 1 by FUNCT_4:63;
then (( dl. ( 0 ) ) <> ( IC ( SCM ) ) & ( ( Exec (( AddTo (( dl. ( 0 ) ),( dl. 1 )) ),t) ) . ( dl. ( 0 ) ) ) = ( (( 0 ) qua Nat) + 1 )) by A8,AMI_3:3,AMI_3:13;
hence thesis by A6,A8,A9,AMISTD_1:def 1;
end;
end;
