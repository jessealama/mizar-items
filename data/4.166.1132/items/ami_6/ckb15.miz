environ
vocabularies NUMBERS,AMI_3,AMI_1,FSM_1,ORDINAL1,CAT_1,XBOOLE_0,FUNCT_1,RELAT_1,FINSEQ_1,CARD_1,AMISTD_2,GRAPHSP,CARD_3,AMISTD_1,SUBSET_1,CIRCUIT2,FUNCT_4,FUNCOP_1,SETFAM_1,ZFMISC_1,XXREAL_0,TARSKI,ARYTM_3,GOBOARD5,FRECHET,ARYTM_1,INT_1,UNIALG_1,CARD_5,PARTFUN1,NAT_1,COMPOS_1,PBOOLE;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,FUNCT_2,ZFMISC_1,CARD_1,ORDINAL1,NAT_1,NUMBERS,XCMPLX_0,INT_1,FUNCOP_1,PARTFUN1,PBOOLE,FINSEQ_1,FUNCT_4,XXREAL_0,MCART_1,VALUED_1,STRUCT_0,CARD_3,FUNCT_7,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,AMI_3,AMISTD_1,AMISTD_2;
definitions TARSKI,FUNCT_1,FUNCT_7,AMISTD_1,AMISTD_2,XBOOLE_0,AMI_3,FUNCOP_1,AMI_2,COMPOS_1,EXTPRO_1,CARD_3,NAT_1,MCART_1,MEMSTR_0;
theorems TARSKI,NAT_1,AMI_3,FUNCT_4,AMI_5,FUNCT_1,FUNCOP_1,SETFAM_1,AMISTD_1,MCART_1,FINSEQ_1,MEMSTR_0,FUNCT_7,CARD_3,XBOOLE_0,XBOOLE_1,NAT_D,RELAT_1,ORDINAL1,PARTFUN1,PBOOLE,RECDEF_2,VALUED_1,COMPOS_1,EXTPRO_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,NUMBERS,XREAL_0,NAT_1,INT_1,FINSEQ_1,CARD_3,AMI_3,AMISTD_2,RELSET_1,ZFMISC_1,FUNCT_2,FUNCT_4,VALUED_0,COMPOS_1,EXTPRO_1,PBOOLE,FUNCT_7,PRE_POLY,MEMSTR_0,CARD_1,CKB1;
constructors XXREAL_0,NAT_1,NAT_D,ZFMISC_1,AMI_3,AMISTD_2,RELSET_1,RECDEF_2,MCART_1,VALUED_1,AMI_2,EXTPRO_1,AMISTD_1,PRE_POLY,DOMAIN_1,FUNCT_7,MEMSTR_0;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
reserve a for Data-Location;
reserve b for Data-Location;
reserve i2 for (Element of ( NAT ));
reserve k1 for  natural number;
theorem
Th40: ( ( product" ( JumpParts ( InsCode ( a >0_goto k1 ) ) ) ) . 1 ) = ( NAT )
proof
( InsCode ( a >0_goto k1 ) ) = 8 by RECDEF_2:def 1;
then ( dom ( product" ( JumpParts ( InsCode ( a >0_goto k1 ) ) ) ) ) = { 1 } by CKB12:1;
then A1: 1 in ( dom ( product" ( JumpParts ( InsCode ( a >0_goto k1 ) ) ) ) ) by TARSKI:def 1;
hereby
let x being set;
assume x in ( ( product" ( JumpParts ( InsCode ( a >0_goto k1 ) ) ) ) . 1 );
then x in ( pi (( JumpParts ( InsCode ( a >0_goto k1 ) ) ),1) ) by A1,CARD_3:76;
then consider g being Function such that A2: g in ( JumpParts ( InsCode ( a >0_goto k1 ) ) ) and A3: x = ( g . 1 ) by CARD_3:def 6;
consider I being (Instruction of ( SCM )) such that A4: g = ( JumpPart I ) and A5: ( InsCode I ) = ( InsCode ( a >0_goto k1 ) ) by A2;
( InsCode I ) = 8 by A5,RECDEF_2:def 1;
then consider i2,b such that A6: I = ( b >0_goto i2 ) by AMI_5:15;
g = <* i2 *> by A4,A6,RECDEF_2:def 2;
then x = i2 by A3,FINSEQ_1:40;
hence x in ( NAT );
end;
let x being set;
assume x in ( NAT );
then reconsider x as (Element of ( NAT ));
( InsCode ( a >0_goto k1 ) ) = 8 by RECDEF_2:def 1;
then (( JumpPart ( a >0_goto x ) ) = <* x *> & ( InsCode ( a >0_goto k1 ) ) = ( InsCode ( a >0_goto x ) )) by RECDEF_2:def 1,RECDEF_2:def 2;
then A7: <* x *> in ( JumpParts ( InsCode ( a >0_goto k1 ) ) );
( <* x *> . 1 ) = x by FINSEQ_1:40;
then x in ( pi (( JumpParts ( InsCode ( a >0_goto k1 ) ) ),1) ) by A7,CARD_3:def 6;
hence thesis by A1,CARD_3:76;
end;
