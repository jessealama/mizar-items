environ
vocabularies NUMBERS,AMI_3,AMI_1,FSM_1,ORDINAL1,CAT_1,XBOOLE_0,FUNCT_1,RELAT_1,FINSEQ_1,CARD_1,AMISTD_2,GRAPHSP,CARD_3,AMISTD_1,SUBSET_1,CIRCUIT2,FUNCT_4,FUNCOP_1,SETFAM_1,ZFMISC_1,XXREAL_0,TARSKI,ARYTM_3,GOBOARD5,FRECHET,ARYTM_1,INT_1,UNIALG_1,CARD_5,PARTFUN1,NAT_1,COMPOS_1,PBOOLE;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,FUNCT_2,ZFMISC_1,CARD_1,ORDINAL1,NAT_1,NUMBERS,XCMPLX_0,INT_1,FUNCOP_1,PARTFUN1,PBOOLE,FINSEQ_1,FUNCT_4,XXREAL_0,MCART_1,VALUED_1,STRUCT_0,CARD_3,FUNCT_7,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,AMI_3,AMISTD_1,AMISTD_2;
definitions TARSKI,FUNCT_1,FUNCT_7,AMISTD_1,AMISTD_2,XBOOLE_0,AMI_3,FUNCOP_1,AMI_2,COMPOS_1,EXTPRO_1,CARD_3,NAT_1,MCART_1,MEMSTR_0;
theorems TARSKI,NAT_1,AMI_3,FUNCT_4,AMI_5,FUNCT_1,FUNCOP_1,SETFAM_1,AMISTD_1,MCART_1,FINSEQ_1,MEMSTR_0,FUNCT_7,CARD_3,XBOOLE_0,XBOOLE_1,NAT_D,RELAT_1,ORDINAL1,PARTFUN1,PBOOLE,RECDEF_2,VALUED_1,COMPOS_1,EXTPRO_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,NUMBERS,XREAL_0,NAT_1,INT_1,FINSEQ_1,CARD_3,AMI_3,AMISTD_2,RELSET_1,ZFMISC_1,FUNCT_2,FUNCT_4,VALUED_0,COMPOS_1,EXTPRO_1,PBOOLE,FUNCT_7,PRE_POLY,MEMSTR_0,CARD_1,CKB1;
constructors XXREAL_0,NAT_1,NAT_D,ZFMISC_1,AMI_3,AMISTD_2,RELSET_1,RECDEF_2,MCART_1,VALUED_1,AMI_2,EXTPRO_1,AMISTD_1,PRE_POLY,DOMAIN_1,FUNCT_7,MEMSTR_0;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
reserve a for Data-Location;
reserve i1 for (Element of ( NAT ));
reserve T for (InsType of ( SCM ));
theorem
Th25: (T = 7 implies ( dom ( product" ( JumpParts T ) ) ) = { 1 })
proof
set i1 = the (Element of ( NAT ));
set a = the Data-Location;
assume A1: T = 7;
A2: ( JumpPart ( a =0_goto i1 ) ) = <* i1 *> by RECDEF_2:def 2;
hereby
let x being set;
( InsCode ( a =0_goto i1 ) ) = 7 by RECDEF_2:def 1;
then A3: ( JumpPart ( a =0_goto i1 ) ) in ( JumpParts T ) by A1;
assume x in ( dom ( product" ( JumpParts T ) ) );
then x in ( dom ( JumpPart ( a =0_goto i1 ) ) ) by A3,CARD_3:def 12;
hence x in { 1 } by A2,FINSEQ_1:2,FINSEQ_1:38;
end;
let x being set;
assume A4: x in { 1 };
(for f being Function holds (f in ( JumpParts T ) implies x in ( dom f )))
proof
let f being Function;
assume f in ( JumpParts T );
then consider I being (Instruction of ( SCM )) such that A5: f = ( JumpPart I ) and A6: ( InsCode I ) = T;
consider i1,a such that A7: I = ( a =0_goto i1 ) by A1,A6,AMI_5:14;
f = <* i1 *> by A5,A7,RECDEF_2:def 2;
hence thesis by A4,FINSEQ_1:2,FINSEQ_1:38;
end;
hence thesis by CARD_3:def 12;
end;
