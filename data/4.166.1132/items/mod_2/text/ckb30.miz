environ
vocabularies XBOOLE_0,FUNCSDOM,VECTSP_1,CLASSES2,FUNCT_5,MCART_1,STRUCT_0,VECTSP_2,SUPINF_2,ALGSTR_0,SUBSET_1,ARYTM_3,RLVECT_1,RELAT_1,MESFUNC1,FUNCT_1,MSSUBFAM,GRCAT_1,GRAPH_1,CAT_1,MIDSP_1,ORDINAL1,CARD_1,ARYTM_1,BINOP_1,LATTICES,FUNCT_2,ZFMISC_1,MOD_2,UNIALG_1;
notations XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,BINOP_1,PARTFUN1,NUMBERS,FUNCT_2,FUNCT_5,STRUCT_0,ALGSTR_0,ORDINAL1,RLVECT_1,GROUP_1,VECTSP_1,FUNCSDOM,VECTSP_2,CLASSES2,GRCAT_1,FUNCT_3,CKB2,CKB4,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB15,CKB18,CKB23,CKB24;
definitions RLVECT_1,STRUCT_0,GRCAT_1,VECTSP_1,ALGSTR_0,CKB2,CKB4,CKB8,CKB9,CKB10,CKB12,CKB13,CKB18,CKB23;
theorems BINOP_1,CLASSES2,ENUMSET1,GRCAT_1,FUNCT_2,ORDINAL1,VECTSP_1,RLVECT_1,RELAT_1,GROUP_1,FUNCOP_1,FUNCT_1,STRUCT_0,ALGSTR_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB16,CKB18,CKB20,CKB21,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29;
schemes FUNCT_2,BINOP_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FUNCT_2,STRUCT_0,VECTSP_1,ALGSTR_1,ALGSTR_0,CLASSES2,GRCAT_1,CKB6,CKB7,CKB14,CKB17,CKB19,CKB22;
constructors ENUMSET1,PARTFUN1,VECTSP_2,GRCAT_1,FUNCOP_1,ALGSTR_1,RELSET_1,CLASSES1,CKB2,CKB4,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB18,CKB23,CKB24;
requirements SUBSET,BOOLE,NUMERALS;
begin
reserve R for Ring;
reserve G for (LeftMod of R);
reserve G2 for (LeftMod of R);
definition
let R;
let G being (LModMorphism of R);
let F being (LModMorphism of R);
assume A1: ( dom G ) = ( cod F );
func G * F ->  strict (LModMorphism of R) means 
:Def13: (for G1,G2,G3 being (LeftMod of R) holds (for g being (Function of G2,G3) holds (for f being (Function of G1,G2) holds ((( the LModMorphismStr of G ) = LModMorphismStr (# G2,G3,g #) & ( the LModMorphismStr of F ) = LModMorphismStr (# G1,G2,f #)) implies it = LModMorphismStr (# G1,G3,( g * f ) #)))));
existence
proof
consider G19,G2,G39 being (LeftMod of R) such that A2: G is (Morphism of G2,G39) and A3: F is (Morphism of G19,G2) by A1,CKB29:1;
consider f9 being (Function of G19,G2) such that A4: ( the LModMorphismStr of F ) = LModMorphismStr (# G19,G2,f9 #) and A5: f9 is  additive  homogeneous by A3,CKB25:1;
consider g9 being (Function of G2,G39) such that A6: ( the LModMorphismStr of G ) = LModMorphismStr (# G2,G39,g9 #) and A7: g9 is  additive  homogeneous by A2,CKB25:1;
( g9 * f9 ) is  additive  homogeneous by A7,A5,CKB5:1;
then reconsider T9 = LModMorphismStr (# G19,G39,( g9 * f9 ) #) as  strict (LModMorphism of R) by CKB21:1;
take T9;
thus thesis by A6,A4;
end;
uniqueness
proof
consider G19,G29 being (LeftMod of R) such that A8: F is (Morphism of G19,G29) by CKB27:1;
reconsider F9 = F as (Morphism of G19,G29) by A8;
consider G2,G39 being (LeftMod of R) such that A9: G is (Morphism of G2,G39) by CKB27:1;
G2 = ( dom G ) by A9,CKB18:def 1;
then reconsider F9 as (Morphism of G19,G2) by A1,CKB18:def 1;
consider f9 being (Function of G19,G2) such that A10: ( the LModMorphismStr of F9 ) = LModMorphismStr (# G19,G2,f9 #) and f9 is  additive  homogeneous by CKB25:1;
reconsider G9 = G as (Morphism of G2,G39) by A9;
let S1 being  strict (LModMorphism of R);
let S2 being  strict (LModMorphism of R);
assume that
A11: (for G1,G2,G3 being (LeftMod of R) holds (for g being (Function of G2,G3) holds (for f being (Function of G1,G2) holds ((( the LModMorphismStr of G ) = LModMorphismStr (# G2,G3,g #) & ( the LModMorphismStr of F ) = LModMorphismStr (# G1,G2,f #)) implies S1 = LModMorphismStr (# G1,G3,( g * f ) #)))))
and
A12: (for G1,G2,G3 being (LeftMod of R) holds (for g being (Function of G2,G3) holds (for f being (Function of G1,G2) holds ((( the LModMorphismStr of G ) = LModMorphismStr (# G2,G3,g #) & ( the LModMorphismStr of F ) = LModMorphismStr (# G1,G2,f #)) implies S2 = LModMorphismStr (# G1,G3,( g * f ) #)))));
consider g9 being (Function of G2,G39) such that A13: ( the LModMorphismStr of G9 ) = LModMorphismStr (# G2,G39,g9 #) and g9 is  additive  homogeneous by CKB25:1;
thus S1 = LModMorphismStr (# G19,G39,( g9 * f9 ) #) by A11,A13,A10
.= S2 by A12,A13,A10;
end;
end;
