environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,ORDINAL1,SETFAM_1,AMI_1,FSM_1,FUNCT_4,FUNCOP_1,RELAT_1,TARSKI,FUNCT_1,CARD_3,ZFMISC_1,CIRCUIT2,NAT_1,GLIB_000,XXREAL_0,PARTFUN1,FINSEQ_1,ARYTM_3,GRAPH_2,CARD_1,FUNCT_2,FINSEQ_4,ARYTM_1,FINSET_1,FRECHET,RCOMP_1,WAYBEL_0,MEMBERED,AMISTD_1,SCMNORM,AMI_WSTD,STRUCT_0,PBOOLE,COMPOS_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,SETFAM_1,ORDINAL1,CARD_1,XXREAL_0,NUMBERS,XCMPLX_0,NAT_1,MEMBERED,FUNCT_1,RELSET_1,PARTFUN1,MCART_1,DOMAIN_1,CARD_3,FINSEQ_1,FINSEQ_4,FUNCOP_1,FINSET_1,FUNCT_4,FUNCT_7,PBOOLE,AFINSQ_1,STRUCT_0,GRAPH_2,NAT_D,XXREAL_2,MEMSTR_0,COMPOS_1,EXTPRO_1,FUNCT_2,AMISTD_1,CKB1;
definitions TARSKI,STRUCT_0,COMPOS_1,EXTPRO_1,XBOOLE_0,FUNCOP_1,NAT_1,RELAT_1,FUNCT_4,NAT_D,AFINSQ_1,AMISTD_1,MEMSTR_0,CKB1;
theorems TARSKI,FINSEQ_4,FINSEQ_1,GRAPH_2,NAT_1,FUNCT_4,FUNCT_1,FUNCT_2,RELAT_1,ZFMISC_1,CARD_1,FUNCOP_1,ORDINAL1,GRFUNC_1,FINSEQ_3,INT_1,REVROT_1,FUNCT_7,XBOOLE_0,MEMBERED,XREAL_1,XXREAL_0,FINSEQ_6,PARTFUN1,XXREAL_2,XREAL_0,NAT_D,PBOOLE,RECDEF_2,AMISTD_1,COMPOS_1,MEMSTR_0,CARD_3,CKB1;
schemes NAT_1,FUNCT_7,FINSEQ_2,FRAENKEL,DOMAIN_1,FINSEQ_4;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCOP_1,FINSET_1,NUMBERS,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,CARD_3,REALSET1,FUNCT_7,STRUCT_0,JORDAN1J,CARD_1,XXREAL_2,RELSET_1,FUNCT_4,AFINSQ_1,ORDINAL1,ZFMISC_1,SUBSET_1,AMISTD_1,COMPOS_1,EXTPRO_1,PBOOLE,VALUED_1,PRE_POLY,MEMSTR_0;
constructors WELLORD2,REAL_1,FINSEQ_4,REALSET1,NAT_D,XXREAL_2,RELSET_1,PRE_POLY,GRAPH_2,AFINSQ_1,MCART_1,AMISTD_1,PBOOLE,FUNCT_7,FUNCT_4,MEMSTR_0,CKB1;
requirements NUMERALS,BOOLE,REAL,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve N for  with_non-empty_elements non  empty set;
reserve S for  IC-Ins-separated non  empty AMI-Struct over N;
reserve l1 for (Element of ( NAT ));
reserve l2 for (Element of ( NAT ));
reserve l3 for (Element of ( NAT ));
theorem
(for N holds (for S holds (for l1,l2 being Nat holds ((l1 <= l2,S & l2 <= l3,S) implies l1 <= l3,S))))
proof
let N;
let S;
let l1 being Nat;
let l2 being Nat;
given f1 being non  empty (FinSequence of ( NAT )) such that
A1: ( f1 /. 1 ) = l1
and
A2: ( f1 /. ( len f1 ) ) = l2
and
A3: (for n holds ((1 <= n & n < ( len f1 )) implies ( f1 /. ( n + 1 ) ) in ( SUCC (( f1 /. n ),S) )));

given f2 being non  empty (FinSequence of ( NAT )) such that
A4: ( f2 /. 1 ) = l2
and
A5: ( f2 /. ( len f2 ) ) = l3
and
A6: (for n holds ((1 <= n & n < ( len f2 )) implies ( f2 /. ( n + 1 ) ) in ( SUCC (( f2 /. n ),S) )));

take ( f1 ^' f2 );
thus ( ( f1 ^' f2 ) /. 1 ) = l1 by A1,GRAPH_2:53;
now
per cases ;
suppose f2 is  trivial;

then A7: (ex x being (Element of ( NAT )) st f2 = <* x *>) by FINSEQ_6:107;
then ( f1 ^' f2 ) = f1 by GRAPH_2:56;
hence ( ( f1 ^' f2 ) /. ( len ( f1 ^' f2 ) ) ) = l3 by A2,A4,A5,A7,FINSEQ_1:39;
end;
suppose (not f2 is  trivial);

hence ( ( f1 ^' f2 ) /. ( len ( f1 ^' f2 ) ) ) = l3 by A5,GRAPH_2:54;
end;
end;
hence ( ( f1 ^' f2 ) /. ( len ( f1 ^' f2 ) ) ) = l3;
let n;
assume that
A8: 1 <= n
and
A9: n < ( len ( f1 ^' f2 ) );
A10: ( ( len ( f1 ^' f2 ) ) + 1 ) = ( ( len f1 ) + ( len f2 ) ) by GRAPH_2:13;
per cases  by XXREAL_0:1;
suppose A11: n < ( len f1 );

then ( n + 1 ) <= ( len f1 ) by NAT_1:13;
then A12: ( ( f1 ^' f2 ) /. ( n + 1 ) ) = ( f1 /. ( n + 1 ) ) by GRAPH_2:57,NAT_1:11;
( ( f1 ^' f2 ) /. n ) = ( f1 /. n ) by A8,A11,GRAPH_2:57;
hence thesis by A3,A8,A11,A12;
end;
suppose A13: n = ( len f1 );

then A14: ( ( f1 ^' f2 ) /. n ) = ( f2 /. 1 ) by A2,A4,A8,GRAPH_2:57;
( n + 1 ) < ( ( len ( f1 ^' f2 ) ) + 1 ) by A9,XREAL_1:6;
then A15: 1 < ( len f2 ) by A10,A13,XREAL_1:6;
then ( ( f1 ^' f2 ) /. ( n + 1 ) ) = ( f2 /. ( 1 + 1 ) ) by A13,GRAPH_2:58;
hence thesis by A6,A14,A15;
end;
suppose A16: n > ( len f1 );

then consider m being Nat such that A17: ( ( len f1 ) + m ) = n by NAT_1:10;
reconsider m as (Element of ( NAT )) by ORDINAL1:def 12;
A18: ( ( len f1 ) + m ) > ( ( len f1 ) + ( 0 ) ) by A16,A17;
( ( ( len f1 ) + m ) + 1 ) < ( ( len f1 ) + ( len f2 ) ) by A9,A10,A17,XREAL_1:6;
then ( ( len f1 ) + ( m + 1 ) ) < ( ( len f1 ) + ( len f2 ) );
then A19: ( m + 1 ) < ( len f2 ) by XREAL_1:6;
A20: ( ( f1 ^' f2 ) /. ( n + 1 ) ) = ( ( f1 ^' f2 ) /. ( ( len f1 ) + ( m + 1 ) ) ) by A17
.= ( f2 /. ( ( m + 1 ) + 1 ) ) by A19,GRAPH_2:58,NAT_1:11;
m <= ( m + 1 ) by NAT_1:11;
then m < ( len f2 ) by A19,XXREAL_0:2;
then ( ( f1 ^' f2 ) /. n ) = ( f2 /. ( m + 1 ) ) by A17,A18,GRAPH_2:58,NAT_1:14;
hence thesis by A6,A19,A20,NAT_1:11;
end;
end;
