environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,ORDINAL1,SETFAM_1,AMI_1,FSM_1,FUNCT_4,FUNCOP_1,RELAT_1,TARSKI,FUNCT_1,CARD_3,ZFMISC_1,CIRCUIT2,NAT_1,GLIB_000,XXREAL_0,PARTFUN1,FINSEQ_1,ARYTM_3,GRAPH_2,CARD_1,FUNCT_2,FINSEQ_4,ARYTM_1,FINSET_1,FRECHET,RCOMP_1,WAYBEL_0,MEMBERED,AMISTD_1,SCMNORM,AMI_WSTD,STRUCT_0,PBOOLE,COMPOS_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,SETFAM_1,ORDINAL1,CARD_1,XXREAL_0,NUMBERS,XCMPLX_0,NAT_1,MEMBERED,FUNCT_1,RELSET_1,PARTFUN1,MCART_1,DOMAIN_1,CARD_3,FINSEQ_1,FINSEQ_4,FUNCOP_1,FINSET_1,FUNCT_4,FUNCT_7,PBOOLE,AFINSQ_1,STRUCT_0,GRAPH_2,NAT_D,XXREAL_2,MEMSTR_0,COMPOS_1,EXTPRO_1,FUNCT_2,AMISTD_1,CKB1,CKB3,CKB4;
definitions TARSKI,STRUCT_0,COMPOS_1,EXTPRO_1,XBOOLE_0,FUNCOP_1,NAT_1,RELAT_1,FUNCT_4,NAT_D,AFINSQ_1,AMISTD_1,MEMSTR_0,CKB1,CKB3,CKB4;
theorems TARSKI,FINSEQ_4,FINSEQ_1,GRAPH_2,NAT_1,FUNCT_4,FUNCT_1,FUNCT_2,RELAT_1,ZFMISC_1,CARD_1,FUNCOP_1,ORDINAL1,GRFUNC_1,FINSEQ_3,INT_1,REVROT_1,FUNCT_7,XBOOLE_0,MEMBERED,XREAL_1,XXREAL_0,FINSEQ_6,PARTFUN1,XXREAL_2,XREAL_0,NAT_D,PBOOLE,RECDEF_2,AMISTD_1,COMPOS_1,MEMSTR_0,CARD_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8;
schemes NAT_1,FUNCT_7,FINSEQ_2,FRAENKEL,DOMAIN_1,FINSEQ_4;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCOP_1,FINSET_1,NUMBERS,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,CARD_3,REALSET1,FUNCT_7,STRUCT_0,JORDAN1J,CARD_1,XXREAL_2,RELSET_1,FUNCT_4,AFINSQ_1,ORDINAL1,ZFMISC_1,SUBSET_1,AMISTD_1,COMPOS_1,EXTPRO_1,PBOOLE,VALUED_1,PRE_POLY,MEMSTR_0;
constructors WELLORD2,REAL_1,FINSEQ_4,REALSET1,NAT_D,XXREAL_2,RELSET_1,PRE_POLY,GRAPH_2,AFINSQ_1,MCART_1,AMISTD_1,PBOOLE,FUNCT_7,FUNCT_4,MEMSTR_0,CKB1,CKB3,CKB4;
requirements NUMERALS,BOOLE,REAL,SUBSET,ARITHM;
begin
reserve N for  with_non-empty_elements non  empty set;
reserve S for  IC-Ins-separated non  empty AMI-Struct over N;
reserve i for (Element of (the Instructions of S));
reserve s for (State of S);
set III = { [ 1,( 0 ),( 0 ) ],[ ( 0 ),( 0 ),( 0 ) ] };
theorem
Lm2: (for i being (Instruction of ( STC N )) holds (for s being (State of ( STC N )) holds (( InsCode i ) = 1 implies ( IC ( Exec (i,s) ) ) = ( succ ( IC s ) ))))
proof
let i being (Instruction of ( STC N ));
let s being (State of ( STC N ));
set M = ( STC N );
assume A1: ( InsCode i ) = 1;
A2:now
assume i in { [ ( 0 ),( 0 ),( 0 ) ] };
then i = [ ( 0 ),( 0 ),( 0 ) ] by TARSKI:def 1;
hence contradiction by A1,RECDEF_2:def 1;
end;
(the Instructions of M) = III by AMISTD_1:def 7;
then (i = [ 1,( 0 ),( 0 ) ] or i = [ ( 0 ),( 0 ),( 0 ) ]) by TARSKI:def 2;
then A3: i in { [ 1,( 0 ),( 0 ) ] } by A1,RECDEF_2:def 1,TARSKI:def 1;
A4: ( 0 ) in { ( 0 ) } by TARSKI:def 1;
then A5: ( 0 ) in ( dom ( ( 0 ) .--> ( succ ( s . ( 0 ) ) ) ) ) by FUNCOP_1:13;
consider f being (Function of ( product (the Object-Kind of M) ),( product (the Object-Kind of M) )) such that A6: (for s being (Element of ( product (the Object-Kind of M) )) holds ( f . s ) = ( s +* ( ( 0 ) .--> ( succ ( s . ( 0 ) ) ) ) )) and A7: (the Execution of M) = ( ( [ 1,( 0 ),( 0 ) ] .--> f ) +* ( [ ( 0 ),( 0 ),( 0 ) ] .--> ( id ( product (the Object-Kind of M) ) ) ) ) by AMISTD_1:def 7;
A8: (for s being (State of M) holds ( f . s ) = ( s +* ( ( 0 ) .--> ( succ ( s . ( 0 ) ) ) ) ))
proof
let s being (State of M);
reconsider s as (Element of ( product (the Object-Kind of M) )) by CARD_3:107;
( f . s ) = ( s +* ( ( 0 ) .--> ( succ ( s . ( 0 ) ) ) ) ) by A6;
hence thesis;
end;
A9: (the ZeroF of M) = ( 0 ) by AMISTD_1:def 7;
( dom ( [ ( 0 ),( 0 ),( 0 ) ] .--> ( id ( product (the Object-Kind of M) ) ) ) ) = { [ ( 0 ),( 0 ),( 0 ) ] } by FUNCOP_1:13;
then ( (the Execution of M) . i ) = ( ( [ 1,( 0 ),( 0 ) ] .--> f ) . i ) by A7,A2,FUNCT_4:11
.= f by A3,FUNCOP_1:7;
hence ( IC ( Exec (i,s) ) ) = ( ( s +* ( ( 0 ) .--> ( succ ( s . ( 0 ) ) ) ) ) . ( 0 ) ) by A9,A8
.= ( ( ( 0 ) .--> ( succ ( s . ( 0 ) ) ) ) . ( 0 ) ) by A5,FUNCT_4:13
.= ( succ ( IC s ) ) by A9,A4,FUNCOP_1:7;
end;
