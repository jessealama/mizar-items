environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,ORDINAL1,SETFAM_1,AMI_1,FSM_1,FUNCT_4,FUNCOP_1,RELAT_1,TARSKI,FUNCT_1,CARD_3,ZFMISC_1,CIRCUIT2,NAT_1,GLIB_000,XXREAL_0,PARTFUN1,FINSEQ_1,ARYTM_3,GRAPH_2,CARD_1,FUNCT_2,FINSEQ_4,ARYTM_1,FINSET_1,FRECHET,RCOMP_1,WAYBEL_0,MEMBERED,AMISTD_1,SCMNORM,AMI_WSTD,STRUCT_0,PBOOLE,COMPOS_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,SETFAM_1,ORDINAL1,CARD_1,XXREAL_0,NUMBERS,XCMPLX_0,NAT_1,MEMBERED,FUNCT_1,RELSET_1,PARTFUN1,MCART_1,DOMAIN_1,CARD_3,FINSEQ_1,FINSEQ_4,FUNCOP_1,FINSET_1,FUNCT_4,FUNCT_7,PBOOLE,AFINSQ_1,STRUCT_0,GRAPH_2,NAT_D,XXREAL_2,MEMSTR_0,COMPOS_1,EXTPRO_1,FUNCT_2,AMISTD_1,CKB1,CKB3,CKB4;
definitions TARSKI,STRUCT_0,COMPOS_1,EXTPRO_1,XBOOLE_0,FUNCOP_1,NAT_1,RELAT_1,FUNCT_4,NAT_D,AFINSQ_1,AMISTD_1,MEMSTR_0,CKB1,CKB3,CKB4;
theorems TARSKI,FINSEQ_4,FINSEQ_1,GRAPH_2,NAT_1,FUNCT_4,FUNCT_1,FUNCT_2,RELAT_1,ZFMISC_1,CARD_1,FUNCOP_1,ORDINAL1,GRFUNC_1,FINSEQ_3,INT_1,REVROT_1,FUNCT_7,XBOOLE_0,MEMBERED,XREAL_1,XXREAL_0,FINSEQ_6,PARTFUN1,XXREAL_2,XREAL_0,NAT_D,PBOOLE,RECDEF_2,AMISTD_1,COMPOS_1,MEMSTR_0,CARD_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
schemes NAT_1,FUNCT_7,FINSEQ_2,FRAENKEL,DOMAIN_1,FINSEQ_4;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCOP_1,FINSET_1,NUMBERS,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,CARD_3,REALSET1,FUNCT_7,STRUCT_0,JORDAN1J,CARD_1,XXREAL_2,RELSET_1,FUNCT_4,AFINSQ_1,ORDINAL1,ZFMISC_1,SUBSET_1,AMISTD_1,COMPOS_1,EXTPRO_1,PBOOLE,VALUED_1,PRE_POLY,MEMSTR_0;
constructors WELLORD2,REAL_1,FINSEQ_4,REALSET1,NAT_D,XXREAL_2,RELSET_1,PRE_POLY,GRAPH_2,AFINSQ_1,MCART_1,AMISTD_1,PBOOLE,FUNCT_7,FUNCT_4,MEMSTR_0,CKB1,CKB3,CKB4;
requirements NUMERALS,BOOLE,REAL,SUBSET,ARITHM;
begin
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve N for  with_non-empty_elements non  empty set;
reserve S for  IC-Ins-separated non  empty AMI-Struct over N;
reserve l for (Element of ( NAT ));
reserve l1 for (Element of ( NAT ));
theorem
Th18: (for f being (Function of ( NAT ),( NAT )) holds (f is  bijective implies ((for m,n being (Element of ( NAT )) holds (m <= n iff ( f . m ) <= ( f . n ),S)) iff (for k being (Element of ( NAT )) holds (( f . ( k + 1 ) ) in ( SUCC (( f . k ),S) ) & (for j being (Element of ( NAT )) holds (( f . j ) in ( SUCC (( f . k ),S) ) implies k <= j)))))))
proof
let f being (Function of ( NAT ),( NAT ));
assume A1: f is  bijective;
hereby
assume A2: (for m,n being (Element of ( NAT )) holds (m <= n iff ( f . m ) <= ( f . n ),S));
let k being (Element of ( NAT ));
k <= ( k + 1 ) by NAT_1:11;
then ( f . k ) <= ( f . ( k + 1 ) ),S by A2;
then consider F being non  empty (FinSequence of ( NAT )) such that A3: ( F /. 1 ) = ( f . k ) and A4: ( F /. ( len F ) ) = ( f . ( k + 1 ) ) and A5: (for n holds ((1 <= n & n < ( len F )) implies ( F /. ( n + 1 ) ) in ( SUCC (( F /. n ),S) ))) by CKB1:def 1;
set F1 = ( F -| ( f . ( k + 1 ) ) );
set x = ( ( f . ( k + 1 ) ) .. F );
A6: ( f . ( k + 1 ) ) in ( rng F ) by A4,REVROT_1:3;
then A7: ( len F1 ) = ( x - 1 ) by FINSEQ_4:34;
then A8: ( ( len F1 ) + 1 ) = x;
A9: x in ( dom F ) by A6,FINSEQ_4:20;
then A10: ( F /. ( ( len F1 ) + 1 ) ) = ( F . x ) by A7,PARTFUN1:def 6
.= ( f . ( k + 1 ) ) by A6,FINSEQ_4:19;
x <= ( len F ) by A9,FINSEQ_3:25;
then A11: ( len F1 ) < ( len F ) by A8,NAT_1:13;
1 <= ( len F ) by NAT_1:14;
then A12: 1 in ( dom F ) by FINSEQ_3:25;
then A13: ( F /. 1 ) = ( F . 1 ) by PARTFUN1:def 6;
A14: ( F . x ) = ( f . ( k + 1 ) ) by A6,FINSEQ_4:19;
A15: ( dom f ) = ( NAT ) by FUNCT_2:def 1;
A16: ( f . k ) <> ( f . ( k + 1 ) )
proof
assume (not thesis);
then ( ( 0 ) + k ) = ( k + 1 ) by A1,A15,FUNCT_1:def 4;
hence contradiction;
end;
then B17: ( len F1 ) <> ( 0 ) by A3,A14,A12,A7,PARTFUN1:def 6;
1 <= x by A9,FINSEQ_3:25;
then 1 < x by A3,A16,A14,A13,XXREAL_0:1;
then A18: 1 <= ( len F1 ) by A8,NAT_1:13;
reconsider F1 as non  empty (FinSequence of ( NAT )) by B17,A6,FINSEQ_4:41;
( rng f ) = ( NAT ) by A1,FUNCT_2:def 3;
then consider m being set such that A19: m in ( dom f ) and A20: ( f . m ) = ( F /. ( len F1 ) ) by FUNCT_1:def 3;
reconsider m as (Element of ( NAT )) by A19;
A21: ( len F1 ) in ( dom F ) by A18,A11,FINSEQ_3:25;
A22: ( len F1 ) in ( dom F1 ) by A18,FINSEQ_3:25;
then A23: ( F1 /. ( len F1 ) ) = ( F1 . ( len F1 ) ) by PARTFUN1:def 6
.= ( F . ( len F1 ) ) by A6,A22,FINSEQ_4:36
.= ( F /. ( len F1 ) ) by A21,PARTFUN1:def 6;
A24:now
( rng F1 ) misses { ( f . ( k + 1 ) ) } by A6,FINSEQ_4:38;
then ( ( rng F1 ) /\ { ( f . ( k + 1 ) ) } ) = ( {} ) by XBOOLE_0:def 7;
then A25: ((not ( f . ( k + 1 ) ) in ( rng F1 )) or (not ( f . ( k + 1 ) ) in { ( f . ( k + 1 ) ) })) by XBOOLE_0:def 4;
assume A26: m = ( k + 1 );
A27: ( len F1 ) in ( dom F1 ) by A18,FINSEQ_3:25;
then ( F1 /. ( len F1 ) ) = ( F1 . ( len F1 ) ) by PARTFUN1:def 6;
hence contradiction by A20,A23,A26,A25,A27,FUNCT_1:def 3,TARSKI:def 1;
end;
reconsider F2 = <* ( F /. ( len F1 ) ),( F /. x ) *> as non  empty (FinSequence of ( NAT ));
A28: ( len F2 ) = 2 by FINSEQ_1:44;
then A29: 2 in ( dom F2 ) by FINSEQ_3:25;
then A30: ( F2 /. ( len F2 ) ) = ( F2 . 2 ) by A28,PARTFUN1:def 6
.= ( F /. x ) by FINSEQ_1:44
.= ( f . ( k + 1 ) ) by A14,A9,PARTFUN1:def 6;
A31: 1 in ( dom F2 ) by A28,FINSEQ_3:25;
A32:now
let n;
assume (1 <= n & n < ( len F2 ));
then (n <> ( 0 ) & n < 2) by FINSEQ_1:44;
then A33: n = 1 by NAT_1:26;
then A34: ( F2 /. n ) = ( F2 . 1 ) by A31,PARTFUN1:def 6
.= ( F /. ( len F1 ) ) by FINSEQ_1:44;
( F2 /. ( n + 1 ) ) = ( F2 . 2 ) by A29,A33,PARTFUN1:def 6
.= ( F /. ( ( len F1 ) + 1 ) ) by A7,FINSEQ_1:44;
hence ( F2 /. ( n + 1 ) ) in ( SUCC (( F2 /. n ),S) ) by A5,A18,A11,A34;
end;
A35:now
let n;
assume that
A36: 1 <= n
and
A37: n < ( len F1 );
A38: 1 <= ( n + 1 ) by A36,NAT_1:13;
A39: ( n + 1 ) <= ( len F1 ) by A37,NAT_1:13;
then ( n + 1 ) <= ( len F ) by A11,XXREAL_0:2;
then A40: ( n + 1 ) in ( dom F ) by A38,FINSEQ_3:25;
n <= ( len F ) by A11,A37,XXREAL_0:2;
then A41: n in ( dom F ) by A36,FINSEQ_3:25;
A42: n in ( dom F1 ) by A36,A37,FINSEQ_3:25;
then A43: ( F1 /. n ) = ( F1 . n ) by PARTFUN1:def 6
.= ( F . n ) by A6,A42,FINSEQ_4:36
.= ( F /. n ) by A41,PARTFUN1:def 6;
A44: n < ( len F ) by A11,A37,XXREAL_0:2;
A45: ( n + 1 ) in ( dom F1 ) by A38,A39,FINSEQ_3:25;
then ( F1 /. ( n + 1 ) ) = ( F1 . ( n + 1 ) ) by PARTFUN1:def 6
.= ( F . ( n + 1 ) ) by A6,A45,FINSEQ_4:36
.= ( F /. ( n + 1 ) ) by A40,PARTFUN1:def 6;
hence ( F1 /. ( n + 1 ) ) in ( SUCC (( F1 /. n ),S) ) by A5,A36,A43,A44;
end;
( F2 /. 1 ) = ( F2 . 1 ) by A31,PARTFUN1:def 6
.= ( f . m ) by A20,FINSEQ_1:44;
then ( f . m ) <= ( f . ( k + 1 ) ),S by A30,A32,CKB1:def 1;
then A46: m <= ( k + 1 ) by A2;
A47: 1 in ( dom F1 ) by A18,FINSEQ_3:25;
then ( F1 /. 1 ) = ( F1 . 1 ) by PARTFUN1:def 6
.= ( F . 1 ) by A6,A47,FINSEQ_4:36
.= ( f . k ) by A3,A12,PARTFUN1:def 6;
then ( f . k ) <= ( f . m ),S by A20,A23,A35,CKB1:def 1;
then k <= m by A2;
then (m = k or m = ( k + 1 )) by A46,NAT_1:9;
hence ( f . ( k + 1 ) ) in ( SUCC (( f . k ),S) ) by A5,A18,A11,A10,A20,A24;
let j being (Element of ( NAT ));
reconsider fk = ( f . k ),fj = ( f . j ) as (Element of ( NAT ));
reconsider F = <* fk,fj *> as non  empty (FinSequence of ( NAT ));
A48: ( len F ) = 2 by FINSEQ_1:44;
then A49: 2 in ( dom F ) by FINSEQ_3:25;
A50: 1 in ( dom F ) by A48,FINSEQ_3:25;
then A51: ( F /. 1 ) = ( F . 1 ) by PARTFUN1:def 6
.= ( f . k ) by FINSEQ_1:44;
assume A52: ( f . j ) in ( SUCC (( f . k ),S) );
A53:now
let n being (Element of ( NAT ));
assume (1 <= n & n < ( len F ));
then (n <> ( 0 ) & n < 2) by FINSEQ_1:44;
then A54: n = 1 by NAT_1:26;
then A55: ( F /. n ) = ( F . 1 ) by A50,PARTFUN1:def 6
.= ( f . k ) by FINSEQ_1:44;
( F /. ( n + 1 ) ) = ( F . 2 ) by A49,A54,PARTFUN1:def 6
.= ( f . j ) by FINSEQ_1:44;
hence ( F /. ( n + 1 ) ) in ( SUCC (( F /. n ),S) ) by A52,A55;
end;
( F /. ( len F ) ) = ( F . 2 ) by A48,A49,PARTFUN1:def 6
.= ( f . j ) by FINSEQ_1:44;
then ( f . k ) <= ( f . j ),S by A51,A53,CKB1:def 1;
hence k <= j by A2;
end;
assume A56: (for k being (Element of ( NAT )) holds (( f . ( k + 1 ) ) in ( SUCC (( f . k ),S) ) & (for j being (Element of ( NAT )) holds (( f . j ) in ( SUCC (( f . k ),S) ) implies k <= j))));
let m being (Element of ( NAT ));
let n being (Element of ( NAT ));
hereby
assume A57: m <= n;
per cases  by A57,XXREAL_0:1;
suppose m = n;

hence ( f . m ) <= ( f . n ),S by CKB6:1;
end;
suppose A58: m < n;

thus ( f . m ) <= ( f . n ),S
proof
reconsider f9 = f as (Function of ( NAT ),( NAT ));
set mn = ( n -' m );
deffunc F(Nat) = ( f9 . ( ( m + $1 ) -' 1 ) );
consider F being (FinSequence of ( NAT )) such that A59: ( len F ) = ( mn + 1 ) and A60: (for j being Nat holds (j in ( dom F ) implies ( F . j ) = F(j))) from FINSEQ_2:sch 1;
reconsider F as non  empty (FinSequence of ( NAT )) by A59;
take F;
A61: 1 <= ( mn + 1 ) by NAT_1:11;
then A62: 1 in ( dom F ) by A59,FINSEQ_3:25;
hence ( F /. 1 ) = ( F . 1 ) by PARTFUN1:def 6
.= ( f . ( ( m + 1 ) -' 1 ) ) by A60,A62
.= ( f . m ) by NAT_D:34;
( m + 1 ) <= n by A58,INT_1:7;
then 1 <= ( n - m ) by XREAL_1:19;
then ( 0 ) <= ( n - m ) by XXREAL_0:2;
then A63: mn = ( n - m ) by XREAL_0:def 2;
A64: ( len F ) in ( dom F ) by A59,A61,FINSEQ_3:25;
hence ( F /. ( len F ) ) = ( F . ( len F ) ) by PARTFUN1:def 6
.= ( f . ( ( m + ( mn + 1 ) ) -' 1 ) ) by A59,A60,A64
.= ( f . ( ( ( m + mn ) + 1 ) -' 1 ) )
.= ( f . n ) by A63,NAT_D:34;
let p being (Element of ( NAT ));
assume that
A65: 1 <= p
and
A66: p < ( len F );
A67: p in ( dom F ) by A65,A66,FINSEQ_3:25;
then A68: ( F /. p ) = ( F . p ) by PARTFUN1:def 6
.= ( f . ( ( m + p ) -' 1 ) ) by A60,A67;
A69: p <= ( m + p ) by NAT_1:11;
(1 <= ( p + 1 ) & ( p + 1 ) <= ( len F )) by A65,A66,NAT_1:13;
then A70: ( p + 1 ) in ( dom F ) by FINSEQ_3:25;
then ( F /. ( p + 1 ) ) = ( F . ( p + 1 ) ) by PARTFUN1:def 6
.= ( f . ( ( m + ( p + 1 ) ) -' 1 ) ) by A60,A70
.= ( f . ( ( ( m + p ) + 1 ) -' 1 ) )
.= ( f . ( ( ( m + p ) -' 1 ) + 1 ) ) by A65,A69,NAT_D:38,XXREAL_0:2;
hence thesis by A56,A68;
end;

end;
end;
assume ( f . m ) <= ( f . n ),S;
then consider F being non  empty (FinSequence of ( NAT )) such that A71: ( F /. 1 ) = ( f . m ) and A72: ( F /. ( len F ) ) = ( f . n ) and A73: (for n being (Element of ( NAT )) holds ((1 <= n & n < ( len F )) implies ( F /. ( n + 1 ) ) in ( SUCC (( F /. n ),S) ))) by CKB1:def 1;
defpred P[ (Element of ( NAT )) ]
 means
((1 <= $1 & $1 <= ( len F )) implies (ex l being (Element of ( NAT )) st (( F /. $1 ) = ( f . l ) & m <= l)));
A74:now
let k being (Element of ( NAT ));
assume that
A75: P[ k ];
now
assume that
1 <= ( k + 1 )
and
A76: ( k + 1 ) <= ( len F );
per cases  by NAT_1:3;
suppose k = ( 0 );

hence (ex l being (Element of ( NAT )) st (( F /. ( k + 1 ) ) = ( f . l ) & m <= l)) by A71;
end;
suppose A77: k > ( 0 );

( rng f ) = ( NAT ) by A1,FUNCT_2:def 3;
then consider l1 being set such that A78: l1 in ( dom f ) and A79: ( f . l1 ) = ( F /. ( k + 1 ) ) by FUNCT_1:def 3;
consider l being (Element of ( NAT )) such that A80: ( F /. k ) = ( f . l ) and A81: m <= l by A75,A76,A77,NAT_1:13,NAT_1:14;
reconsider l1 as (Element of ( NAT )) by A78;
k < ( len F ) by A76,NAT_1:13;
then ( F /. ( k + 1 ) ) in ( SUCC (( F /. k ),S) ) by A73,A77,NAT_1:14;
then l <= l1 by A56,A80,A79;
hence (ex l being (Element of ( NAT )) st (( F /. ( k + 1 ) ) = ( f . l ) & m <= l)) by A81,A79,XXREAL_0:2;
end;
end;
hence P[ ( k + 1 ) ];
end;
A82: 1 <= ( len F ) by NAT_1:14;
A83: P[ ( 0 ) ];
(for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A83,A74);
then (( dom f ) = ( NAT ) & (ex l being (Element of ( NAT )) st (( F /. ( len F ) ) = ( f . l ) & m <= l))) by A82,FUNCT_2:def 1;
hence thesis by A1,A72,FUNCT_1:def 4;
end;
