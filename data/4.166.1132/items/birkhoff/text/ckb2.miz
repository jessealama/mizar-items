environ
vocabularies XBOOLE_0,STRUCT_0,MSUALG_1,RELAT_1,PBOOLE,MSAFREE,MSUALG_3,REALSET1,MEMBER_1,FUNCT_6,TARSKI,FUNCT_1,WELLORD1,MSUALG_2,PRALG_2,CARD_3,SUBSET_1,MSUALG_5,MSUALG_4,FUNCOP_1,RLVECT_2,PRALG_1,EQREL_1,CLOSURE2,SETFAM_1,FUNCT_4,ZFMISC_1,GROUP_6,NUMBERS,EQUATION,ZF_MODEL,ZF_LANG,MCART_1,PZFMISC1,MSAFREE2,FINSET_1,BIRKHOFF;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,SETFAM_1,RELAT_1,MCART_1,STRUCT_0,FUNCT_1,PBOOLE,RELSET_1,PARTFUN1,FUNCT_2,FINSET_1,CARD_3,FUNCT_6,FUNCOP_1,MSUALG_1,MSUALG_2,PRALG_3,MSUALG_3,MSAFREE,MSAFREE2,PRALG_2,MSUALG_4,PZFMISC1,MSSUBFAM,CLOSURE2,MSUALG_5,EQUATION,CKB1;
definitions FUNCT_1,RELAT_1,TARSKI,PBOOLE,MSUALG_3,PRALG_2,MSUALG_4,EQUATION,FUNCOP_1,PZFMISC1,CKB1;
theorems AUTALG_1,CARD_3,CLOSURE2,EXTENS_1,FUNCOP_1,FUNCT_1,FUNCT_2,MCART_1,MSAFREE,MSAFREE2,MSSCYC_1,MSSUBFAM,MSUALG_2,MSUALG_3,MSUALG_4,MSUALG_5,MSUALG_7,MSUALG_9,PBOOLE,PRALG_2,PRALG_3,EQUATION,RELAT_1,ZFMISC_1,SETFAM_1,PARTFUN1,CKB1;
schemes DOMAIN_1,PBOOLE;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCT_2,FUNCOP_1,PBOOLE,STRUCT_0,MSUALG_1,MSUALG_2,MSUALG_4,MSAFREE1,MSAFREE2,EXTENS_1,MSUALG_5,CLOSURE2,PRALG_3,MSUALG_9,EQUATION,MSSUBFAM,AUTALG_1;
constructors SETFAM_1,BINOP_1,PZFMISC1,MSSUBFAM,MSUALG_3,MSAFREE2,MSUALG_5,CLOSURE2,PRALG_3,EQUATION,RELSET_1,CKB1;
requirements SUBSET,BOOLE;
begin
theorem
Th1: (for S being non empty non void ManySortedSign holds (for A being  non-empty MSAlgebra over S holds (for X being  non-empty (ManySortedSet of (the carrier of S)) holds (for F being (ManySortedFunction of X,(the Sorts of A)) holds ( rngs F ) c= ( rngs ( F -hash ) )))))
proof
let S being non empty non void ManySortedSign;
let A being  non-empty MSAlgebra over S;
let X being  non-empty (ManySortedSet of (the carrier of S));
let F being (ManySortedFunction of X,(the Sorts of A));
set R = ( Reverse X );
let i being set;
assume i in (the carrier of S);
then reconsider s = i as (SortSymbol of S);
let y being set;
A1: ( dom ( R . s ) ) = ( ( FreeGen X ) . s ) by FUNCT_2:def 1;
( FreeGen X ) c= (the Sorts of ( FreeMSA X )) by PBOOLE:def 18;
then A2: ( ( FreeGen X ) . s ) c= ( (the Sorts of ( FreeMSA X )) . s ) by PBOOLE:def 2;
assume y in ( ( rngs F ) . i );
then y in ( rng ( F . s ) ) by MSSUBFAM:13;
then consider x being set such that A3: x in ( dom ( F . s ) ) and A4: y = ( ( F . s ) . x ) by FUNCT_1:def 3;
( rngs R ) = X by EXTENS_1:10;
then R is  "onto" by EXTENS_1:9;
then ( rng ( R . s ) ) = ( X . s ) by MSUALG_3:def 3;
then consider a being set such that A5: a in ( dom ( R . s ) ) and A6: x = ( ( R . s ) . a ) by A3,FUNCT_1:def 3;
A7: ( dom ( ( F -hash ) . s ) ) = ( (the Sorts of ( FreeMSA X )) . s ) by FUNCT_2:def 1;
y = ( ( ( F . s ) * ( R . s ) ) . a ) by A4,A5,A6,FUNCT_1:13
.= ( ( ( F ** R ) . s ) . a ) by MSUALG_3:2
.= ( ( ( ( F -hash ) || ( FreeGen X ) ) . s ) . a ) by CKB1:def 1
.= ( ( ( ( F -hash ) . s ) | ( ( FreeGen X ) . s ) ) . a ) by MSAFREE:def 1
.= ( ( ( F -hash ) . s ) . a ) by A5,FUNCT_1:49;
then y in ( rng ( ( F -hash ) . s ) ) by A5,A1,A7,A2,FUNCT_1:def 3;
hence thesis by MSSUBFAM:13;
end;
