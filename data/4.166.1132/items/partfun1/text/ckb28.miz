environ
vocabularies FUNCT_1,RELAT_1,XBOOLE_0,TARSKI,SUBSET_1,ZFMISC_1,RELAT_2,PARTFUN1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,RELSET_1,FUNCT_1,CKB5,CKB11,CKB18;
definitions TARSKI,FUNCT_1,XBOOLE_0,RELAT_1,RELAT_2;
theorems TARSKI,FUNCT_1,GRFUNC_1,ZFMISC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,RELAT_2,CKB1,CKB2,CKB6,CKB7,CKB8,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
schemes FUNCT_1,XBOOLE_0,CKB3,CKB9,CKB10;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,CKB4;
constructors FUNCT_1,RELAT_2,RELSET_1,CKB11,CKB18;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve X for set;
theorem
(for f1,f2 being (PartFunc of X,{ y }) holds (( dom f1 ) = ( dom f2 ) implies f1 = f2))
proof
let f1 being (PartFunc of X,{ y });
let f2 being (PartFunc of X,{ y });
assume that
A1: ( dom f1 ) = ( dom f2 );
(x in ( dom f1 ) implies ( f1 . x ) = ( f2 . x ))
proof
assume A2: x in ( dom f1 );
then ( f1 . x ) = y by CKB27:1;
hence thesis by A1,A2,CKB27:1;
end;
hence thesis by A1,FUNCT_1:2;
end;
