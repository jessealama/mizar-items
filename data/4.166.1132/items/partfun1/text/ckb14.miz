environ
vocabularies FUNCT_1,RELAT_1,XBOOLE_0,TARSKI,SUBSET_1,ZFMISC_1,RELAT_2,PARTFUN1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,RELSET_1,FUNCT_1,CKB5,CKB11;
definitions TARSKI,FUNCT_1,XBOOLE_0,RELAT_1,RELAT_2;
theorems TARSKI,FUNCT_1,GRFUNC_1,ZFMISC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,RELAT_2,CKB1,CKB2,CKB6,CKB7,CKB8,CKB12,CKB13;
schemes FUNCT_1,XBOOLE_0,CKB3,CKB9,CKB10;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,CKB4;
constructors FUNCT_1,RELAT_2,RELSET_1,CKB11;
requirements SUBSET,BOOLE;
begin
reserve x1 for set;
reserve x2 for set;
reserve X for set;
reserve Y for set;
theorem
(for f being (PartFunc of X,Y) holds ((for x1,x2 being (Element of X) holds (((x1 in ( dom f ) & x2 in ( dom f )) & ( f . x1 ) = ( f . x2 )) implies x1 = x2)) implies f is  one-to-one))
proof
let f being (PartFunc of X,Y);
assume (for x1,x2 being (Element of X) holds (((x1 in ( dom f ) & x2 in ( dom f )) & ( f . x1 ) = ( f . x2 )) implies x1 = x2));
then (for x1 holds (for x2 holds (((x1 in ( dom f ) & x2 in ( dom f )) & ( f . x1 ) = ( f . x2 )) implies x1 = x2)));
hence thesis by FUNCT_1:def 4;
end;
