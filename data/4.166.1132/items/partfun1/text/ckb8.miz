environ
vocabularies FUNCT_1,RELAT_1,XBOOLE_0,TARSKI,SUBSET_1,ZFMISC_1,RELAT_2,PARTFUN1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,RELSET_1,FUNCT_1,CKB5;
definitions TARSKI,FUNCT_1,XBOOLE_0,RELAT_1,RELAT_2;
theorems TARSKI,FUNCT_1,GRFUNC_1,ZFMISC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,RELAT_2,CKB1,CKB2,CKB6,CKB7;
schemes FUNCT_1,XBOOLE_0,CKB3;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,CKB4;
constructors FUNCT_1,RELAT_2,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve X for set;
reserve Y for set;
theorem
(for f1,f2 being (PartFunc of X,Y) holds ((( dom f1 ) = ( dom f2 ) & (for x being (Element of X) holds (x in ( dom f1 ) implies ( f1 . x ) = ( f2 . x )))) implies f1 = f2))
proof
let f1 being (PartFunc of X,Y);
let f2 being (PartFunc of X,Y);
assume that
A1: ( dom f1 ) = ( dom f2 )
and
A2: (for x being (Element of X) holds (x in ( dom f1 ) implies ( f1 . x ) = ( f2 . x )));
(for x holds (x in ( dom f1 ) implies ( f1 . x ) = ( f2 . x ))) by A2;
hence thesis by A1,FUNCT_1:2;
end;
