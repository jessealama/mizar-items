environ
vocabularies FUNCT_1,RELAT_1,XBOOLE_0,TARSKI,SUBSET_1,ZFMISC_1,RELAT_2,PARTFUN1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,RELSET_1,FUNCT_1,CKB5;
definitions TARSKI,FUNCT_1,XBOOLE_0,RELAT_1,RELAT_2;
theorems TARSKI,FUNCT_1,GRFUNC_1,ZFMISC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,RELAT_2,CKB1,CKB2,CKB6,CKB7,CKB8;
schemes FUNCT_1,XBOOLE_0,CKB3;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,CKB4;
constructors FUNCT_1,RELAT_2,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve y1 for set;
reserve y2 for set;
reserve z for set;
reserve z1 for set;
reserve z2 for set;
reserve P for set;
reserve X for set;
reserve Y for set;
Lm2:now
let X;
let Y;
take E = ( {} );
thus (( dom E ) c= X & ( rng E ) c= Y) by XBOOLE_1:2;
end;
scheme PartFuncEx { X,Y() -> set,P[set,set] } : (ex f being (PartFunc of X(),Y()) st ((for x holds (x in ( dom f ) iff (x in X() & (ex y st P[ x,y ])))) & (for x holds (x in ( dom f ) implies P[ x,( f . x ) ]))))
provided
A1: (for x holds (for y holds ((x in X() & P[ x,y ]) implies y in Y())))
and
A2: (for x holds (for y1 holds (for y2 holds (((x in X() & P[ x,y1 ]) & P[ x,y2 ]) implies y1 = y2))))
proof
A3:now
defpred R[ set ]
 means
(ex y st P[ $1,y ]);
set y1 = the set;
assume Y() <> ( {} );
defpred Q[ set,set ]
 means
(((ex y st P[ $1,y ]) implies P[ $1,$2 ]) & ((for y holds (not P[ $1,y ])) implies $2 = y1));
A4: (for x holds (x in X() implies (ex z st Q[ x,z ])))
proof
let x;
assume that
x in X();
((for y holds (not P[ x,y ])) implies (((ex y st P[ x,y ]) implies P[ x,y1 ]) & ((for y holds (not P[ x,y ])) implies y1 = y1)));
hence thesis;
end;
A5: (for x holds (for z1 holds (for z2 holds (((x in X() & Q[ x,z1 ]) & Q[ x,z2 ]) implies z1 = z2)))) by A2;
consider g being Function such that A6: ( dom g ) = X() and A7: (for x holds (x in X() implies Q[ x,( g . x ) ])) from FUNCT_1:sch 2(A5,A4);
consider X being set such that A8: (for x holds (x in X iff (x in X() & R[ x ]))) from XBOOLE_0:sch 1;
set f = ( g | X );
A9: ( dom f ) c= X() by A6,RELAT_1:60;
( rng f ) c= Y()
proof
let y;
assume y in ( rng f );
then consider x such that A10: x in ( dom f ) and A11: y = ( f . x ) by FUNCT_1:def 3;
A12: ( dom f ) c= X by RELAT_1:58;
then (x in X() & (ex y st P[ x,y ])) by A8,A10;
then P[ x,( g . x ) ] by A7;
then A13: P[ x,y ] by A10,A11,FUNCT_1:47;
x in X() by A8,A10,A12;
hence thesis by A1,A13;
end;
then reconsider f as (PartFunc of X(),Y()) by A9,RELSET_1:4;
take f;
thus (for x holds (x in ( dom f ) iff (x in X() & (ex y st P[ x,y ]))))
proof
let x;
( dom f ) c= X by RELAT_1:58;
hence (x in ( dom f ) implies (x in X() & (ex y st P[ x,y ]))) by A8;
assume that
A14: x in X()
and
A15: (ex y st P[ x,y ]);
x in X by A8,A14,A15;
then x in ( ( dom g ) /\ X ) by A6,A14,XBOOLE_0:def 4;
hence thesis by RELAT_1:61;
end;

let x;
assume A16: x in ( dom f );
( dom f ) c= X by RELAT_1:58;
then (ex y st P[ x,y ]) by A8,A16;
then P[ x,( g . x ) ] by A7,A16;
hence P[ x,( f . x ) ] by A16,FUNCT_1:47;
end;
now
consider f being Function such that A17: (( dom f ) c= X() & ( rng f ) c= Y()) by Lm2;
reconsider f as (PartFunc of X(),Y()) by A17,RELSET_1:4;
assume A18: Y() = ( {} );
take f;
thus (for x holds (x in ( dom f ) iff (x in X() & (ex y st P[ x,y ])))) by A1,A18;
thus (for x holds (x in ( dom f ) implies P[ x,( f . x ) ])) by A18;
end;
hence thesis by A3;
end;
