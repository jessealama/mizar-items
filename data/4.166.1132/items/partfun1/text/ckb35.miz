environ
vocabularies FUNCT_1,RELAT_1,XBOOLE_0,TARSKI,SUBSET_1,ZFMISC_1,RELAT_2,PARTFUN1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,RELSET_1,FUNCT_1,CKB5,CKB11,CKB18,CKB29;
definitions TARSKI,FUNCT_1,XBOOLE_0,RELAT_1,RELAT_2,CKB29;
theorems TARSKI,FUNCT_1,GRFUNC_1,ZFMISC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,RELAT_2,CKB1,CKB2,CKB6,CKB7,CKB8,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34;
schemes FUNCT_1,XBOOLE_0,CKB3,CKB9,CKB10;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,CKB4;
constructors FUNCT_1,RELAT_2,RELSET_1,CKB11,CKB18,CKB29;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve X for set;
reserve Y for set;
theorem
(for f,g being Function holds (f c= g implies <: f,X,Y :> c= <: g,X,Y :>))
proof
let f being Function,g being Function;
assume that
A1: f c= g;
A2: ( dom <: f,X,Y :> ) c= ( dom f ) by CKB31:1;
now
thus A3: ( dom <: f,X,Y :> ) c= ( dom <: g,X,Y :> )
proof
let x;
A4: ( dom f ) c= ( dom g ) by A1,RELAT_1:11;
assume A5: x in ( dom <: f,X,Y :> );
then A6: ( f . x ) = ( g . x ) by A1,A2,GRFUNC_1:2;
(x in ( dom f ) & ( f . x ) in Y) by A5,CKB32:1;
hence thesis by A5,A4,A6,CKB32:1;
end;

let x;
assume A7: x in ( dom <: f,X,Y :> );
then A8: ( <: f,X,Y :> . x ) = ( f . x ) by CKB34:1;
( <: g,X,Y :> . x ) = ( g . x ) by A3,A7,CKB34:1;
hence ( <: f,X,Y :> . x ) = ( <: g,X,Y :> . x ) by A1,A2,A7,A8,GRFUNC_1:2;
end;
hence thesis by GRFUNC_1:2;
end;
