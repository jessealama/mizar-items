environ
vocabularies NUMBERS,XBOOLE_0,FUNCT_1,ZFMISC_1,XREAL_0,ORDINAL1,FUNCOP_1,SUBSET_1,FUNCT_2,RELAT_1,PARTFUN1,ALGSTR_0,BINOP_1,STRUCT_0,RLVECT_1,REAL_1,SUPINF_2,ARYTM_3,ARYTM_1,FUNCSDOM,MONOID_0,TARSKI,MSSUBFAM,UNIALG_1,RLSUB_1,RSSPACE,NORMSP_1,NAT_1,PRE_TOPC,SEQ_2,ORDINAL2,XXREAL_0,CARD_1,COMPLEX1,XXREAL_2,SEQ_4,REWRITE1,RSSPACE3,SEQ_1,VALUED_1,LOPBAN_1,METRIC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_3,PRE_TOPC,DOMAIN_1,FUNCOP_1,BINOP_1,XXREAL_0,XXREAL_2,XCMPLX_0,COMPLEX1,REAL_1,NAT_1,STRUCT_0,ALGSTR_0,XREAL_0,ORDINAL1,NUMBERS,MONOID_0,RLVECT_1,RLSUB_1,NORMSP_0,NORMSP_1,RSSPACE,RSSPACE3,VALUED_1,SEQ_1,SEQ_2,SEQ_4,FUNCSDOM,GRCAT_1,CKB1;
definitions RLVECT_1,SEQ_4,FUNCT_1,BINOP_1,STRUCT_0,ALGSTR_0,GRCAT_1,NORMSP_0,XXREAL_2;
theorems XBOOLE_0,TARSKI,ABSVALUE,RLVECT_1,BINOP_1,FUNCOP_1,XREAL_0,XCMPLX_0,SEQ_1,SEQ_2,FUNCT_1,NAT_1,FUNCT_2,RLSUB_1,NORMSP_1,SEQ_4,FUNCT_3,RSSPACE,RSSPACE3,MONOID_0,XREAL_1,COMPLEX1,XXREAL_0,GRCAT_1,NORMSP_0;
schemes BINOP_1,SEQ_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,STRUCT_0,RLVECT_1,NORMSP_1,MONOID_0,RSSPACE3,VALUED_1,VALUED_0,FUNCOP_1,SEQ_4,FUNCT_1,NORMSP_0;
constructors DOMAIN_1,FUNCT_3,XXREAL_0,REAL_1,NAT_1,COMPLEX1,SEQM_3,RLSUB_1,FUNCSDOM,MONOID_0,MEASURE6,RSSPACE3,SEQ_1,XXREAL_2,NORMSP_1,SEQ_4,RELSET_1,GRCAT_1,BINOP_2,RVSUM_1,SEQ_2,CKB1;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
definition
let X being non empty set;
let Y being non empty addLoopStr;
func FuncAdd (X,Y) -> (BinOp of ( Funcs (X,(the carrier of Y)) ))
means
:Def1: (for f,g being (Element of ( Funcs (X,(the carrier of Y)) )) holds ( it . (f,g) ) = ( (the addF of Y) .: (f,g) ));
existence
proof
deffunc F((Element of ( Funcs (X,(the carrier of Y)) )),(Element of ( Funcs (X,(the carrier of Y)) ))) = ( (the addF of Y) .: ($1,$2) );
thus (ex ADD being (BinOp of ( Funcs (X,(the carrier of Y)) )) st (for f,g being (Element of ( Funcs (X,(the carrier of Y)) )) holds ( ADD . (f,g) ) = F(f,g))) from BINOP_1:sch 4;
end;
uniqueness
proof
let it1 being (BinOp of ( Funcs (X,(the carrier of Y)) )),it2 being (BinOp of ( Funcs (X,(the carrier of Y)) ));
assume that
A1: (for f,g being (Element of ( Funcs (X,(the carrier of Y)) )) holds ( it1 . (f,g) ) = ( (the addF of Y) .: (f,g) ))
and
A2: (for f,g being (Element of ( Funcs (X,(the carrier of Y)) )) holds ( it2 . (f,g) ) = ( (the addF of Y) .: (f,g) ));
now
let f being (Element of ( Funcs (X,(the carrier of Y)) )),g being (Element of ( Funcs (X,(the carrier of Y)) ));
thus ( it1 . (f,g) ) = ( (the addF of Y) .: (f,g) ) by A1
.= ( it2 . (f,g) ) by A2;
end;
hence thesis by BINOP_1:2;
end;
end;
