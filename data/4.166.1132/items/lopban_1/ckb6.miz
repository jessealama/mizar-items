environ
vocabularies NUMBERS,XBOOLE_0,FUNCT_1,ZFMISC_1,XREAL_0,ORDINAL1,FUNCOP_1,SUBSET_1,FUNCT_2,RELAT_1,PARTFUN1,ALGSTR_0,BINOP_1,STRUCT_0,RLVECT_1,REAL_1,SUPINF_2,ARYTM_3,ARYTM_1,FUNCSDOM,MONOID_0,TARSKI,MSSUBFAM,UNIALG_1,RLSUB_1,RSSPACE,NORMSP_1,NAT_1,PRE_TOPC,SEQ_2,ORDINAL2,XXREAL_0,CARD_1,COMPLEX1,XXREAL_2,SEQ_4,REWRITE1,RSSPACE3,SEQ_1,VALUED_1,LOPBAN_1,METRIC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_3,PRE_TOPC,DOMAIN_1,FUNCOP_1,BINOP_1,XXREAL_0,XXREAL_2,XCMPLX_0,COMPLEX1,REAL_1,NAT_1,STRUCT_0,ALGSTR_0,XREAL_0,ORDINAL1,NUMBERS,MONOID_0,RLVECT_1,RLSUB_1,NORMSP_0,NORMSP_1,RSSPACE,RSSPACE3,VALUED_1,SEQ_1,SEQ_2,SEQ_4,FUNCSDOM,GRCAT_1,CKB1,CKB2,CKB3,CKB4;
definitions RLVECT_1,SEQ_4,FUNCT_1,BINOP_1,STRUCT_0,ALGSTR_0,GRCAT_1,NORMSP_0,XXREAL_2,CKB2,CKB3,CKB4;
theorems XBOOLE_0,TARSKI,ABSVALUE,RLVECT_1,BINOP_1,FUNCOP_1,XREAL_0,XCMPLX_0,SEQ_1,SEQ_2,FUNCT_1,NAT_1,FUNCT_2,RLSUB_1,NORMSP_1,SEQ_4,FUNCT_3,RSSPACE,RSSPACE3,MONOID_0,XREAL_1,COMPLEX1,XXREAL_0,GRCAT_1,NORMSP_0,CKB2,CKB3,CKB4,CKB5;
schemes BINOP_1,SEQ_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,STRUCT_0,RLVECT_1,NORMSP_1,MONOID_0,RSSPACE3,VALUED_1,VALUED_0,FUNCOP_1,SEQ_4,FUNCT_1,NORMSP_0;
constructors DOMAIN_1,FUNCT_3,XXREAL_0,REAL_1,NAT_1,COMPLEX1,SEQM_3,RLSUB_1,FUNCSDOM,MONOID_0,MEASURE6,RSSPACE3,SEQ_1,XXREAL_2,NORMSP_1,SEQ_4,RELSET_1,GRCAT_1,BINOP_2,RVSUM_1,SEQ_2,CKB1,CKB2,CKB3,CKB4;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve X for non empty set;
theorem
Th3: (for Y being non empty addLoopStr holds (for f,g,h being (Element of ( Funcs (X,(the carrier of Y)) )) holds (h = ( ( FuncAdd (X,Y) ) . (f,g) ) iff (for x being (Element of X) holds ( h . x ) = ( ( f . x ) + ( g . x ) )))))
proof
let Y being non empty addLoopStr;
let f being (Element of ( Funcs (X,(the carrier of Y)) )),g being (Element of ( Funcs (X,(the carrier of Y)) )),h being (Element of ( Funcs (X,(the carrier of Y)) ));
hereby
assume A4: h = ( ( FuncAdd (X,Y) ) . (f,g) );
let x being (Element of X);
A5: x in ( dom ( (the addF of Y) .: (f,g) ) ) by CKB5:1;
thus ( h . x ) = ( ( (the addF of Y) .: (f,g) ) . x ) by A4,CKB2:def 1
.= ( ( f . x ) + ( g . x ) ) by A5,FUNCOP_1:22;
end;
assume A2: (for x being (Element of X) holds ( h . x ) = ( ( f . x ) + ( g . x ) ));
now
let x being (Element of X);
A3: x in ( dom ( (the addF of Y) .: (f,g) ) ) by CKB5:1;
thus ( ( ( FuncAdd (X,Y) ) . (f,g) ) . x ) = ( ( (the addF of Y) .: (f,g) ) . x ) by CKB2:def 1
.= ( ( f . x ) + ( g . x ) ) by A3,FUNCOP_1:22
.= ( h . x ) by A2;
end;
hence h = ( ( FuncAdd (X,Y) ) . (f,g) ) by FUNCT_2:63;
end;
