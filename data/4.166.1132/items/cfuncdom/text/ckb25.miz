environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,NUMBERS,BINOP_1,FUNCT_1,BINOP_2,RELAT_1,ZFMISC_1,CFUNCT_1,FUNCOP_1,CARD_1,COMPLEX1,ARYTM_3,RLVECT_1,CLVECT_1,ARYTM_1,ALGSTR_0,SUPINF_2,CLOPBAN1,STRUCT_0,GROUP_1,MESFUNC1,FUNCSDOM,VECTSP_1,CFUNCDOM;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,DOMAIN_1,FUNCOP_1,BINOP_2,STRUCT_0,ALGSTR_0,RLVECT_1,COMPLEX1,CFUNCT_1,GROUP_1,VECTSP_1,FUNCSDOM,CLVECT_1,CKB1,CKB2,CKB3,CKB4,CKB5;
definitions RLVECT_1,STRUCT_0,GROUP_1,CLVECT_1,BINOP_1,ALGSTR_0,VECTSP_1,CKB1,CKB2,CKB3,CKB4,CKB5;
theorems CLVECT_1,FUNCT_2,BINOP_1,FUNCOP_1,RLVECT_1,VECTSP_1,TARSKI,COMPLEX1,BINOP_2,GROUP_1,ALGSTR_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes BINOP_1,FUNCT_2;
registrations XBOOLE_0,RELSET_1,NUMBERS,VECTSP_1,CLVECT_1,ALGSTR_0;
constructors DOMAIN_1,BINOP_2,COMPLEX1,FUNCSDOM,CLVECT_1,VECTSP_1,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB5;
requirements SUBSET,BOOLE,ARITHM;
begin
reserve x1 for set;
reserve x2 for set;
reserve z for set;
reserve A for non  empty set;
reserve f for (Element of ( Funcs (A,( COMPLEX )) ));
reserve g for (Element of ( Funcs (A,( COMPLEX )) ));
reserve a for Complex;
reserve b for Complex;
theorem
Th20: (((((x1 in A & x2 in A) & x1 <> x2) & (for z holds (z in A implies ((z = x1 implies ( f . z ) = ( 1r )) & (z <> x1 implies ( f . z ) = ( 0 )))))) & (for z holds (z in A implies ((z = x1 implies ( g . z ) = ( 0 )) & (z <> x1 implies ( g . z ) = ( 1r )))))) implies (for a holds (for b holds (( ( ComplexFuncAdd A ) . (( ( ComplexFuncExtMult A ) . [ a,f ] ),( ( ComplexFuncExtMult A ) . [ b,g ] )) ) = ( ComplexFuncZero A ) implies (a = ( 0c ) & b = ( 0c ))))))
proof
assume that
A1: x1 in A
and
A2: x2 in A
and
A3: x1 <> x2
and
A4: ((for z holds (z in A implies ((z = x1 implies ( f . z ) = ( 1r )) & (z <> x1 implies ( f . z ) = ( 0 ))))) & (for z holds (z in A implies ((z = x1 implies ( g . z ) = ( 0 )) & (z <> x1 implies ( g . z ) = ( 1r ))))));
A5: (( f . x2 ) = ( 0c ) & ( g . x2 ) = ( 1r )) by A2,A3,A4;
A6: (( f . x1 ) = ( 1r ) & ( g . x1 ) = ( 0c )) by A1,A4;
let a;
let b;
reconsider x1,x2 as (Element of A) by A1,A2;
assume A7: ( ( ComplexFuncAdd A ) . (( ( ComplexFuncExtMult A ) . [ a,f ] ),( ( ComplexFuncExtMult A ) . [ b,g ] )) ) = ( ComplexFuncZero A );
then A8: ( 0c ) = ( ( ( ComplexFuncAdd A ) . (( ( ComplexFuncExtMult A ) . [ a,f ] ),( ( ComplexFuncExtMult A ) . [ b,g ] )) ) . x2 ) by FUNCOP_1:7
.= ( ( ( ( ComplexFuncExtMult A ) . [ a,f ] ) . x2 ) + ( ( ( ComplexFuncExtMult A ) . [ b,g ] ) . x2 ) ) by CKB7:1
.= ( ( a * ( f . x2 ) ) + ( ( ( ComplexFuncExtMult A ) . [ b,g ] ) . x2 ) ) by CKB10:1
.= ( ( 0c ) + ( b * ( 1r ) ) ) by A5,CKB10:1
.= b by COMPLEX1:def 4;
( 0c ) = ( ( ( ComplexFuncAdd A ) . (( ( ComplexFuncExtMult A ) . [ a,f ] ),( ( ComplexFuncExtMult A ) . [ b,g ] )) ) . x1 ) by A7,FUNCOP_1:7
.= ( ( ( ( ComplexFuncExtMult A ) . [ a,f ] ) . x1 ) + ( ( ( ComplexFuncExtMult A ) . [ b,g ] ) . x1 ) ) by CKB7:1
.= ( ( a * ( f . x1 ) ) + ( ( ( ComplexFuncExtMult A ) . [ b,g ] ) . x1 ) ) by CKB10:1
.= ( a + ( b * ( 0c ) ) ) by A6,CKB10:1,COMPLEX1:def 4
.= a;
hence thesis by A8;
end;
