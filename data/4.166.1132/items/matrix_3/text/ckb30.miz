environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,VECTSP_1,SUPINF_2,MATRIX_1,FINSEQ_2,ARYTM_1,FINSEQ_1,TREES_1,RELAT_1,ZFMISC_1,XXREAL_0,CARD_1,ARYTM_3,SUBSET_1,FUNCT_1,INCSP_1,FVSUM_1,RVSUM_1,ALGSTR_0,MESFUNC1,RLVECT_1,CARD_3,ORDINAL4,TARSKI,STRUCT_0,MATRIX_2,QC_LANG1,FINSUB_1,BINOP_1,SETWISEO,FUNCOP_1,PARTFUN1,FINSEQOP,FUNCT_5,FINSOP_1,ABIAN,MATRIX_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XXREAL_0,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,BINOP_1,FINSEQ_4,STRUCT_0,ALGSTR_0,FUNCT_3,FUNCOP_1,RLVECT_1,GROUP_1,VECTSP_1,SETWISEO,FINSOP_1,SETWOP_2,FINSEQ_2,FINSEQOP,MATRIX_1,FINSUB_1,MATRIX_2,NAT_1,FVSUM_1,TREES_1,CAT_2,CKB1,CKB2,CKB3,CKB9,CKB10,CKB11,CKB12;
definitions BINOP_1,FINSEQ_2,ALGSTR_0,MATRIX_1,CKB1,CKB2,CKB3,CKB9,CKB11,CKB12;
theorems FINSEQ_1,FINSEQ_2,TARSKI,FUNCT_2,NAT_1,BINOP_1,TREES_1,FUNCT_1,SETWISEO,VECTSP_1,ZFMISC_1,FVSUM_1,SETWOP_2,MATRIX_1,MATRIX_2,FUNCT_3,FINSEQOP,FUNCOP_1,FINSUB_1,FUNCT_5,FINSEQ_3,RLVECT_1,RELAT_1,FINSOP_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,GROUP_1,ORDINAL1,XXREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
schemes FUNCT_2,FINSEQ_2,MATRIX_1,FINSEQ_1,FUNCT_3,SETWISEO,FUNCT_1,BINOP_1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,PARTFUN1,FUNCT_2,FINSET_1,FINSUB_1,XXREAL_0,XREAL_0,NAT_1,STRUCT_0,VECTSP_1,MATRIX_2,FVSUM_1,RELAT_1,CARD_1,FINSEQ_1,FINSEQ_2;
constructors RELAT_2,PARTFUN1,SETWISEO,SQUARE_1,NAT_1,FINSEQOP,FINSOP_1,SETWOP_2,CAT_2,ALGSTR_1,MATRIX_2,FVSUM_1,RELSET_1,FINSEQ_4,CKB1,CKB2,CKB3,CKB9,CKB10,CKB11,CKB12;
requirements NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve i for Nat;
reserve j for Nat;
reserve K for Field;
theorem
(for A,B being (Matrix of K) holds ((( width A ) = ( len B ) & ( width B ) <> ( 0 )) implies ( ( A * B ) @ ) = ( ( B @ ) * ( A @ ) )))
proof
let A being (Matrix of K);
let B being (Matrix of K);
assume that
A1: ( width A ) = ( len B )
and
A2: ( width B ) <> ( 0 );
A3: ( len ( B @ ) ) = ( width B ) by MATRIX_1:def 6;
( len ( A @ ) ) = ( width A ) by MATRIX_1:def 6;
then A4: ( width ( B @ ) ) = ( len ( A @ ) ) by A1,A2,MATRIX_2:10;
then A5: ( width ( ( B @ ) * ( A @ ) ) ) = ( width ( A @ ) ) by CKB9:def 1;
( width ( A * B ) ) > ( 0 ) by A1,A2,CKB9:def 1;
then A6: ( width ( ( A * B ) @ ) ) = ( len ( A * B ) ) by MATRIX_2:10
.= ( len A ) by A1,CKB9:def 1;
A7: ( width ( ( B @ ) * ( A @ ) ) ) = ( width ( A @ ) ) by A4,CKB9:def 1;
A8: ( len ( ( B @ ) * ( A @ ) ) ) = ( len ( B @ ) ) by A4,CKB9:def 1
.= ( width B ) by MATRIX_1:def 6;
A9: ( len ( ( B @ ) * ( A @ ) ) ) = ( len ( B @ ) ) by A4,CKB9:def 1;
A10:now
let i;
let j;
assume A11: [ i,j ] in ( Indices ( ( B @ ) * ( A @ ) ) );
( dom ( ( B @ ) * ( A @ ) ) ) = ( dom ( B @ ) ) by A9,FINSEQ_3:29;
then A12: [ i,j ] in [: ( dom ( B @ ) ),( Seg ( width ( A @ ) ) ) :] by A5,A11;
per cases ;
suppose ( width A ) = ( 0 );

hence ( ( ( B @ ) * ( A @ ) ) * (i,j) ) = ( ( ( A * B ) @ ) * (i,j) ) by A1,A2,MATRIX_1:def 3;
end;
suppose ( width A ) > ( 0 );

then ( width ( A @ ) ) = ( len A ) by MATRIX_2:10;
then ( Seg ( width ( A @ ) ) ) = ( dom A ) by FINSEQ_1:def 3;
then A13: j in ( dom A ) by A12,ZFMISC_1:87;
then A14: ( Col (( A @ ),j) ) = ( Line (A,j) ) by MATRIX_2:14;
j in ( Seg ( len A ) ) by A13,FINSEQ_1:def 3;
then j in ( Seg ( len ( A * B ) ) ) by A1,CKB9:def 1;
then A15: j in ( dom ( A * B ) ) by FINSEQ_1:def 3;
( Seg ( width B ) ) = ( dom ( B @ ) ) by A3,FINSEQ_1:def 3;
then A16: i in ( Seg ( width B ) ) by A12,ZFMISC_1:87;
then i in ( Seg ( width ( A * B ) ) ) by A1,CKB9:def 1;
then [ j,i ] in [: ( dom ( A * B ) ),( Seg ( width ( A * B ) ) ) :] by A15,ZFMISC_1:87;
then A17: [ j,i ] in ( Indices ( A * B ) );
( Line (( B @ ),i) ) = ( Col (B,i) ) by A16,MATRIX_2:15;
hence ( ( ( B @ ) * ( A @ ) ) * (i,j) ) = ( ( Col (B,i) ) "*" ( Line (A,j) ) ) by A4,A11,A14,CKB9:def 1
.= ( ( Line (A,j) ) "*" ( Col (B,i) ) ) by FVSUM_1:90
.= ( ( A * B ) * (j,i) ) by A1,A17,CKB9:def 1
.= ( ( ( A * B ) @ ) * (i,j) ) by A17,MATRIX_1:def 6;
end;
end;
A18: ( width ( A @ ) ) = ( len A )
proof
per cases ;
suppose ( width A ) = ( 0 );

hence thesis by A1,A2,MATRIX_1:def 3;
end;
suppose ( width A ) > ( 0 );

hence thesis by MATRIX_2:10;
end;
end;
( len ( ( A * B ) @ ) ) = ( width ( A * B ) ) by MATRIX_1:def 6
.= ( width B ) by A1,CKB9:def 1;
hence thesis by A6,A8,A7,A10,A18,MATRIX_1:21;
end;
