environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,VECTSP_1,SUPINF_2,MATRIX_1,FINSEQ_2,ARYTM_1,FINSEQ_1,TREES_1,RELAT_1,ZFMISC_1,XXREAL_0,CARD_1,ARYTM_3,SUBSET_1,FUNCT_1,INCSP_1,FVSUM_1,RVSUM_1,ALGSTR_0,MESFUNC1,RLVECT_1,CARD_3,ORDINAL4,TARSKI,STRUCT_0,MATRIX_2,QC_LANG1,FINSUB_1,BINOP_1,SETWISEO,FUNCOP_1,PARTFUN1,FINSEQOP,FUNCT_5,FINSOP_1,ABIAN,MATRIX_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XXREAL_0,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,BINOP_1,FINSEQ_4,STRUCT_0,ALGSTR_0,FUNCT_3,FUNCOP_1,RLVECT_1,GROUP_1,VECTSP_1,SETWISEO,FINSOP_1,SETWOP_2,FINSEQ_2,FINSEQOP,MATRIX_1,FINSUB_1,MATRIX_2,NAT_1,FVSUM_1,TREES_1,CAT_2,CKB1,CKB2,CKB3,CKB9,CKB10,CKB11,CKB12,CKB31,CKB32;
definitions BINOP_1,FINSEQ_2,ALGSTR_0,MATRIX_1,CKB1,CKB2,CKB3,CKB9,CKB11,CKB12;
theorems FINSEQ_1,FINSEQ_2,TARSKI,FUNCT_2,NAT_1,BINOP_1,TREES_1,FUNCT_1,SETWISEO,VECTSP_1,ZFMISC_1,FVSUM_1,SETWOP_2,MATRIX_1,MATRIX_2,FUNCT_3,FINSEQOP,FUNCOP_1,FINSUB_1,FUNCT_5,FINSEQ_3,RLVECT_1,RELAT_1,FINSOP_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,GROUP_1,ORDINAL1,XXREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB33,CKB34,CKB35;
schemes FUNCT_2,FINSEQ_2,MATRIX_1,FINSEQ_1,FUNCT_3,SETWISEO,FUNCT_1,BINOP_1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,PARTFUN1,FUNCT_2,FINSET_1,FINSUB_1,XXREAL_0,XREAL_0,NAT_1,STRUCT_0,VECTSP_1,MATRIX_2,FVSUM_1,RELAT_1,CARD_1,FINSEQ_1,FINSEQ_2;
constructors RELAT_2,PARTFUN1,SETWISEO,SQUARE_1,NAT_1,FINSEQOP,FINSOP_1,SETWOP_2,CAT_2,ALGSTR_1,MATRIX_2,FVSUM_1,RELSET_1,FINSEQ_4,CKB1,CKB2,CKB3,CKB9,CKB10,CKB11,CKB12,CKB31,CKB32;
requirements NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve x for set;
reserve D for non  empty set;
theorem
Th28: (for I,J being non  empty set holds (for F,G being (BinOp of D) holds (for f being (Function of I,D) holds (for g being (Function of J,D) holds (for X being (Element of ( Fin I )) holds (for Y being (Element of ( Fin J )) holds (((((F is  having_a_unity & F is  commutative) & F is  associative) & F is  having_an_inverseOp) & G is_distributive_wrt F) implies ( F $$ ([: X,Y :],( G * (f,g) )) ) = ( F $$ (X,( G [:] (f,( F $$ (Y,g) )) )) ))))))))
proof
let I being non  empty set;
let J being non  empty set;
let F being (BinOp of D);
let G being (BinOp of D);
let f being (Function of I,D);
let g being (Function of J,D);
let X being (Element of ( Fin I ));
let Y being (Element of ( Fin J ));
assume that
A1: ((F is  having_a_unity & F is  commutative) & F is  associative)
and
A2: (F is  having_an_inverseOp & G is_distributive_wrt F);
defpred P[ (Element of ( Fin I )) ]
 means
( F $$ ([: $1,Y :],( G * (f,g) )) ) = ( F $$ ($1,( G [:] (f,( F $$ (Y,g) )) )) );
A3: (for X1 being (Element of ( Fin I )) holds (for x being (Element of I) holds (P[ X1 ] implies P[ ( X1 \/ {. x .} ) ])))
proof
let X1 being (Element of ( Fin I ));
let x being (Element of I);
reconsider s = {. x .} as (Element of ( Fin I ));
assume A4: ( F $$ ([: X1,Y :],( G * (f,g) )) ) = ( F $$ (X1,( G [:] (f,( F $$ (Y,g) )) )) );
now
per cases ;
case x in X1;
then ( X1 \/ { x } ) = X1 by ZFMISC_1:40;
hence thesis by A4;
end;
case (not x in X1);
then A5: X1 misses { x } by ZFMISC_1:50;
then A6: [: X1,Y :] misses [: s,Y :] by ZFMISC_1:104;
thus ( F $$ ([: ( X1 \/ {. x .} ),Y :],( G * (f,g) )) ) = ( F $$ (( [: X1,Y :] \/ [: s,Y :] ),( G * (f,g) )) ) by ZFMISC_1:97
.= ( F . (( F $$ ([: X1,Y :],( G * (f,g) )) ),( F $$ ([: s,Y :],( G * (f,g) )) )) ) by A1,A6,SETWOP_2:4
.= ( F . (( F $$ (X1,( G [:] (f,( F $$ (Y,g) )) )) ),( F $$ (s,( G [:] (f,( F $$ (Y,g) )) )) )) ) by A1,A2,A4,CKB35:1
.= ( F $$ (( X1 \/ {. x .} ),( G [:] (f,( F $$ (Y,g) )) )) ) by A1,A5,SETWOP_2:4;
end;
end;
hence thesis;
end;
A7: P[ ( {}. I ) ]
proof
reconsider T = ( {}. [: I,J :] ) as (Element of ( Fin [: I,J :] ));
T = [: ( {}. I ),Y :] by ZFMISC_1:90;
then ( F $$ ([: ( {}. I ),Y :],( G * (f,g) )) ) = ( the_unity_wrt F ) by A1,SETWISEO:31;
hence thesis by A1,SETWISEO:31;
end;
(for X1 being (Element of ( Fin I )) holds P[ X1 ]) from SETWISEO:sch 4(A7,A3);
hence thesis;
end;
