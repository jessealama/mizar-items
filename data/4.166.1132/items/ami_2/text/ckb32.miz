environ
vocabularies NUMBERS,SUBSET_1,XBOOLE_0,CARD_1,ZFMISC_1,FINSEQ_1,FUNCT_1,CARD_3,RELAT_1,AMI_1,NAT_1,FUNCT_4,FUNCOP_1,INT_1,MCART_1,PARTFUN1,ORDINAL1,ARYTM_3,ARYTM_1,XXREAL_0,FUNCT_2,FUNCT_5,TARSKI,AMI_2,GROUP_9,FINSET_1,RECDEF_2;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,ORDINAL1,CARD_1,NUMBERS,XCMPLX_0,FINSET_1,CARD_3,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,XXREAL_0,BINOP_1,MCART_1,DOMAIN_1,INT_1,NAT_1,FUNCOP_1,FUNCT_4,CAT_2,FINSEQ_1,FINSEQ_4,RECDEF_2,CKB1,CKB2,CKB3,CKB4,CKB6,CKB8,CKB16,CKB22,CKB27,CKB28;
definitions TARSKI,FUNCOP_1,CARD_1,FINSEQ_1,MCART_1,CKB3,CKB4,CKB8,CKB16,CKB27,CKB28;
theorems ZFMISC_1,FUNCT_2,TARSKI,CAT_2,FUNCOP_1,ENUMSET1,INT_1,CARD_3,FINSEQ_4,MCART_1,FUNCT_4,XBOOLE_0,XBOOLE_1,ORDINAL1,RELAT_1,NUMBERS,NAT_1,DOMAIN_1,FINSEQ_1,FUNCT_7,RECDEF_2,CKB3,CKB4,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31;
schemes FUNCT_2,BINOP_1;
registrations XBOOLE_0,SETFAM_1,ORDINAL1,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,INT_1,FINSEQ_1,CARD_3,RELAT_1,FINSET_1,ORDINAL2,CARD_1,FUNCT_1,CARD_2,RELSET_1,FUNCT_2,CKB5,CKB7,CKB10,CKB17,CKB18;
constructors DOMAIN_1,XXREAL_0,NAT_D,FINSEQ_4,CAT_2,CARD_3,ABIAN,SETFAM_1,RELSET_1,FINSEQ_2,RECDEF_2,CKB2,CKB3,CKB4,CKB6,CKB8,CKB16,CKB27,CKB28;
requirements NUMERALS,REAL,SUBSET,BOOLE;
begin
reserve x for set;
definition
let s being SCM-State;
let t being (Element of ( SCM-Data-Loc ));
let u being Integer;
func SCM-Chg (s,t,u) -> SCM-State equals 
( s +* ( t .--> u ) );
coherence
proof
A1:now
let x being set;
assume A2: x in ( dom ( SCM-OK ) );
now
per cases ;
suppose A3: x = t;

{ t } = ( dom ( t .--> u ) ) by FUNCOP_1:13;
then t in ( dom ( t .--> u ) ) by TARSKI:def 1;
then ( ( s +* ( t .--> u ) ) . t ) = ( ( t .--> u ) . t ) by FUNCT_4:13
.= u by FUNCOP_1:72;
then ( ( s +* ( t .--> u ) ) . t ) in ( INT ) by INT_1:def 2;
hence ( ( s +* ( t .--> u ) ) . x ) in ( ( SCM-OK ) . x ) by A3,CKB21:1;
end;
suppose A4: x <> t;

{ t } = ( dom ( t .--> u ) ) by FUNCOP_1:13;
then (not x in ( dom ( t .--> u ) )) by A4,TARSKI:def 1;
then ( ( s +* ( t .--> u ) ) . x ) = ( s . x ) by FUNCT_4:11;
hence ( ( s +* ( t .--> u ) ) . x ) in ( ( SCM-OK ) . x ) by A2,CARD_3:9;
end;
end;
hence ( ( s +* ( t .--> u ) ) . x ) in ( ( SCM-OK ) . x );
end;
A5: ( dom ( SCM-OK ) ) = ( SCM-Memory ) by FUNCT_2:def 1;
then ( dom s ) = ( SCM-Memory ) by CARD_3:9;
then ( dom ( s +* ( t .--> u ) ) ) = ( ( SCM-Memory ) \/ ( dom ( t .--> u ) ) ) by FUNCT_4:def 1
.= ( ( SCM-Memory ) \/ { t } ) by FUNCOP_1:13
.= ( dom ( SCM-OK ) ) by A5,ZFMISC_1:40;
hence thesis by A1,CARD_3:9;
end;
end;
