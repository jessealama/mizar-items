environ
vocabularies NUMBERS,SUBSET_1,XBOOLE_0,CARD_1,ZFMISC_1,FINSEQ_1,FUNCT_1,CARD_3,RELAT_1,AMI_1,NAT_1,FUNCT_4,FUNCOP_1,INT_1,MCART_1,PARTFUN1,ORDINAL1,ARYTM_3,ARYTM_1,XXREAL_0,FUNCT_2,FUNCT_5,TARSKI,AMI_2,GROUP_9,FINSET_1,RECDEF_2;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,ORDINAL1,CARD_1,NUMBERS,XCMPLX_0,FINSET_1,CARD_3,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,XXREAL_0,BINOP_1,MCART_1,DOMAIN_1,INT_1,NAT_1,FUNCOP_1,FUNCT_4,CAT_2,FINSEQ_1,FINSEQ_4,RECDEF_2,CKB1,CKB2,CKB3,CKB4,CKB6,CKB8,CKB16,CKB22,CKB27,CKB28,CKB32,CKB36,CKB37,CKB39,CKB41,CKB42,CKB45;
definitions TARSKI,FUNCOP_1,CARD_1,FINSEQ_1,MCART_1,CKB3,CKB4,CKB8,CKB16,CKB27,CKB28,CKB32,CKB36,CKB37,CKB39,CKB41,CKB42,CKB45;
theorems ZFMISC_1,FUNCT_2,TARSKI,CAT_2,FUNCOP_1,ENUMSET1,INT_1,CARD_3,FINSEQ_4,MCART_1,FUNCT_4,XBOOLE_0,XBOOLE_1,ORDINAL1,RELAT_1,NUMBERS,NAT_1,DOMAIN_1,FINSEQ_1,FUNCT_7,RECDEF_2,CKB3,CKB4,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB45;
schemes FUNCT_2,BINOP_1;
registrations XBOOLE_0,SETFAM_1,ORDINAL1,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,INT_1,FINSEQ_1,CARD_3,RELAT_1,FINSET_1,ORDINAL2,CARD_1,FUNCT_1,CARD_2,RELSET_1,FUNCT_2,CKB5,CKB7,CKB10,CKB17,CKB18,CKB44;
constructors DOMAIN_1,XXREAL_0,NAT_D,FINSEQ_4,CAT_2,CARD_3,ABIAN,SETFAM_1,RELSET_1,FINSEQ_2,RECDEF_2,CKB2,CKB3,CKB4,CKB6,CKB8,CKB16,CKB27,CKB28,CKB32,CKB36,CKB37,CKB39,CKB41,CKB42,CKB45;
requirements NUMERALS,REAL,SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
definition
func SCM-Exec -> (Action of ( SCM-Instr ),( product ( SCM-OK ) )) means 
(for x being (Element of ( SCM-Instr )) holds (for y being SCM-State holds ( ( it . x ) . y ) = ( SCM-Exec-Res (x,y) )));
existence
proof
consider f being (Function of [: ( SCM-Instr ),( product ( SCM-OK ) ) :],( product ( SCM-OK ) )) such that A1: (for x being (Element of ( SCM-Instr )) holds (for y being SCM-State holds ( f . (x,y) ) = ( SCM-Exec-Res (x,y) ))) from BINOP_1:sch 4;
take ( curry f );
let x being (Element of ( SCM-Instr ));
let y being SCM-State;
thus ( ( ( curry f ) . x ) . y ) = ( f . (x,y) ) by CAT_2:3
.= ( SCM-Exec-Res (x,y) ) by A1;
end;
uniqueness
proof
let f being (Action of ( SCM-Instr ),( product ( SCM-OK ) ));
let g being (Action of ( SCM-Instr ),( product ( SCM-OK ) ));
assume that
A2: (for x being (Element of ( SCM-Instr )) holds (for y being SCM-State holds ( ( f . x ) . y ) = ( SCM-Exec-Res (x,y) )))
and
A3: (for x being (Element of ( SCM-Instr )) holds (for y being SCM-State holds ( ( g . x ) . y ) = ( SCM-Exec-Res (x,y) )));
now
let x being (Element of ( SCM-Instr ));
reconsider gx = ( g . x ),fx = ( f . x ) as (Function of ( product ( SCM-OK ) ),( product ( SCM-OK ) )) by FUNCT_2:66;
now
let y being SCM-State;
thus ( fx . y ) = ( SCM-Exec-Res (x,y) ) by A2
.= ( gx . y ) by A3;
end;
hence ( f . x ) = ( g . x ) by FUNCT_2:63;
end;
hence f = g by FUNCT_2:63;
end;
end;
