environ
vocabularies NUMBERS,SUBSET_1,INT_1,AMI_1,SCMFSA_2,SF_MASTR,FUNCOP_1,FUNCT_1,FINSUB_1,CARD_3,RELAT_1,TARSKI,AMISTD_2,XBOOLE_0,CARD_1,SCMFSA8A,AMI_3,FSM_1,SCMFSA7B,SCMFSA8B,ARYTM_3,TURING_1,SCMFSA6A,ARYTM_1,VALUED_1,FUNCT_4,SCMFSA_9,UNIALG_2,SCMFSA6B,XXREAL_0,CIRCUIT2,GRAPHSP,NAT_1,SCMFSA6C,MSUALG_1,SFMASTR1,PRE_FF,COMPLEX1,ABIAN,SCMFSA9A,ORDINAL1,PARTFUN1,SCMNORM,RELOC,PBOOLE,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,FINSUB_1,FUNCOP_1,INT_1,ABIAN,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,PRE_FF,CARD_3,FUNCT_4,PBOOLE,VALUED_1,INT_2,XXREAL_0,NAT_1,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,SCMFSA_2,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA_7,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1;
definitions FUNCOP_1,SCMFSA6A,AFINSQ_1,COMPOS_1,EXTPRO_1,AMISTD_2,MEMSTR_0;
theorems TARSKI,ZFMISC_1,ABSVALUE,NAT_1,INT_1,NAT_2,FUNCT_1,FUNCT_2,GRFUNC_1,FUNCOP_1,FUNCT_4,PRE_FF,ABIAN,SCMFSA_2,MEMSTR_0,SCMFSA_4,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA8C,SCMFSA_9,SFMASTR1,RELAT_1,XBOOLE_0,XBOOLE_1,CARD_3,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,VALUED_1,PBOOLE,PARTFUN1,FINSEQ_4,COMPOS_1,EXTPRO_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9;
schemes FUNCT_2,NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,FINSET_1,FINSUB_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_3,ABIAN,SCMFSA_2,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,VALUED_1,FUNCT_2,RELAT_1,AFINSQ_1,FUNCT_4,FUNCOP_1,SCMFSA10,AMISTD_2,SCMFSA6A,COMPOS_1,EXTPRO_1,PBOOLE,STRUCT_0,MEMSTR_0;
constructors NAT_D,PRE_FF,ABIAN,SCMFSA_7,SCMFSA6A,SCMFSA6B,MEMSTR_0,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,AMISTD_2,RELSET_1,PRE_POLY,XXREAL_2,PBOOLE,SCMFSA7B,SCMFSA8C,FUNCT_4,AMISTD_1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve b for Int-Location;
reserve I for (Program of ( SCM+FSA ));
reserve J for (Program of ( SCM+FSA ));
theorem
Th16: ( UsedInt*Loc ( if>0 (b,I,J) ) ) = ( ( UsedInt*Loc I ) \/ ( UsedInt*Loc J ) )
proof
set I5 = ( Stop ( SCM+FSA ) );
set a = b;
set I1 = ( a >0_goto ( ( card J ) + 3 ) );
set I3 = ( Goto ( ( card I ) + 1 ) );
thus ( UsedInt*Loc ( if>0 (a,I,J) ) ) = ( UsedInt*Loc ( ( ( ( I1 ';' J ) ';' I3 ) ';' I ) ';' I5 ) ) by SCMFSA8B:def 2
.= ( ( UsedInt*Loc ( ( ( I1 ';' J ) ';' I3 ) ';' I ) ) \/ ( {} ) ) by CKB4:1,SF_MASTR:43
.= ( ( UsedInt*Loc ( ( I1 ';' J ) ';' I3 ) ) \/ ( UsedInt*Loc I ) ) by SF_MASTR:43
.= ( ( ( UsedInt*Loc ( I1 ';' J ) ) \/ ( UsedInt*Loc I3 ) ) \/ ( UsedInt*Loc I ) ) by SF_MASTR:43
.= ( ( ( UsedInt*Loc ( I1 ';' J ) ) \/ ( {} ) ) \/ ( UsedInt*Loc I ) ) by CKB6:1
.= ( ( ( UsedInt*Loc I1 ) \/ ( UsedInt*Loc J ) ) \/ ( UsedInt*Loc I ) ) by SF_MASTR:45
.= ( ( ( {} ) \/ ( UsedInt*Loc J ) ) \/ ( UsedInt*Loc I ) ) by SF_MASTR:32
.= ( ( UsedInt*Loc I ) \/ ( UsedInt*Loc J ) );
end;
