environ
vocabularies NUMBERS,SUBSET_1,INT_1,AMI_1,SCMFSA_2,SF_MASTR,FUNCOP_1,FUNCT_1,FINSUB_1,CARD_3,RELAT_1,TARSKI,AMISTD_2,XBOOLE_0,CARD_1,SCMFSA8A,AMI_3,FSM_1,SCMFSA7B,SCMFSA8B,ARYTM_3,TURING_1,SCMFSA6A,ARYTM_1,VALUED_1,FUNCT_4,SCMFSA_9,UNIALG_2,SCMFSA6B,XXREAL_0,CIRCUIT2,GRAPHSP,NAT_1,SCMFSA6C,MSUALG_1,SFMASTR1,PRE_FF,COMPLEX1,ABIAN,SCMFSA9A,ORDINAL1,PARTFUN1,SCMNORM,RELOC,PBOOLE,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,FINSUB_1,FUNCOP_1,INT_1,ABIAN,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,PRE_FF,CARD_3,FUNCT_4,PBOOLE,VALUED_1,INT_2,XXREAL_0,NAT_1,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,SCMFSA_2,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA_7,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,CKB16,CKB17,CKB27,CKB35,CKB36;
definitions FUNCOP_1,SCMFSA6A,AFINSQ_1,COMPOS_1,EXTPRO_1,AMISTD_2,MEMSTR_0,CKB16,CKB17,CKB27,CKB35,CKB36;
theorems TARSKI,ZFMISC_1,ABSVALUE,NAT_1,INT_1,NAT_2,FUNCT_1,FUNCT_2,GRFUNC_1,FUNCOP_1,FUNCT_4,PRE_FF,ABIAN,SCMFSA_2,MEMSTR_0,SCMFSA_4,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA8C,SCMFSA_9,SFMASTR1,RELAT_1,XBOOLE_0,XBOOLE_1,CARD_3,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,VALUED_1,PBOOLE,PARTFUN1,FINSEQ_4,COMPOS_1,EXTPRO_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42;
schemes FUNCT_2,NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,FINSET_1,FINSUB_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_3,ABIAN,SCMFSA_2,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,VALUED_1,FUNCT_2,RELAT_1,AFINSQ_1,FUNCT_4,FUNCOP_1,SCMFSA10,AMISTD_2,SCMFSA6A,COMPOS_1,EXTPRO_1,PBOOLE,STRUCT_0,MEMSTR_0;
constructors NAT_D,PRE_FF,ABIAN,SCMFSA_7,SCMFSA6A,SCMFSA6B,MEMSTR_0,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,AMISTD_2,RELSET_1,PRE_POLY,XXREAL_2,PBOOLE,SCMFSA7B,SCMFSA8C,FUNCT_4,AMISTD_1,CKB16,CKB17,CKB27,CKB35,CKB36;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve p for (Instruction-Sequence of ( SCM+FSA ));
reserve s for (State of ( SCM+FSA ));
reserve a for  read-write Int-Location;
reserve I for (Program of ( SCM+FSA ));
reserve k for (Element of ( NAT ));
theorem
Th38: (((((I is_halting_on ( Initialized ( ( StepWhile>0 (a,I,p,s) ) . k ) ),( p +* ( while>0 (a,I) ) ) & I is_closed_on ( Initialized ( ( StepWhile>0 (a,I,p,s) ) . k ) ),( p +* ( while>0 (a,I) ) )) or I is  parahalting) & ( ( ( StepWhile>0 (a,I,p,s) ) . k ) . a ) > ( 0 )) & ( ( ( StepWhile>0 (a,I,p,s) ) . k ) . ( intloc ( 0 ) ) ) = 1) implies ( DataPart ( ( StepWhile>0 (a,I,p,s) ) . ( k + 1 ) ) ) = ( DataPart ( IExec (I,( p +* ( while>0 (a,I) ) ),( ( StepWhile>0 (a,I,p,s) ) . k )) ) ))
proof
set Ins = ( NAT );
assume that
A1: ((I is_halting_on ( Initialized ( ( StepWhile>0 (a,I,p,s) ) . k ) ),( p +* ( while>0 (a,I) ) ) & I is_closed_on ( Initialized ( ( StepWhile>0 (a,I,p,s) ) . k ) ),( p +* ( while>0 (a,I) ) )) or I is  parahalting)
and
A2: ( ( ( StepWhile>0 (a,I,p,s) ) . k ) . a ) > ( 0 )
and
A3: ( ( ( StepWhile>0 (a,I,p,s) ) . k ) . ( intloc ( 0 ) ) ) = 1;
set SW = ( StepWhile>0 (a,I,p,s) );
set PW = ( p +* ( while>0 (a,I) ) );
set ISWk = ( Initialized ( SW . k ) );
set SWkI = ( Initialized ( SW . k ) );
set PWI = ( ( p +* ( while>0 (a,I) ) ) +* I );
A5: ( PW +* ( while>0 (a,I) ) ) = PW by FUNCT_4:93;
( DataPart ISWk ) = ( DataPart ( SW . k ) ) by A3,SCMFSA8C:7;
then A6: (I is_closed_on ( SW . k ),PW & I is_halting_on ( SW . k ),PW) by A1,SCMFSA7B:18,SCMFSA7B:19,SCMFSA8B:5;
I is_halting_on ISWk,PW by A1,SCMFSA7B:19;
then A7: I is_halting_on ( Initialized ( SW . k ) ),PW;
( Initialized ( SW . k ) ) = ( Initialize ( Initialized ( SW . k ) ) ) by MEMSTR_0:44;
then A9: ( PW +* I ) halts_on ( Initialized ( SW . k ) ) by A7,SCMFSA7B:def 7;
A10: PWI halts_on SWkI by A9;
set SWkIS = ( Initialize ( SW . k ) );
set PWIS = ( PW +* I );
A13: SWkI = SWkIS by A3,SCMFSA8C:4;
A14: ( SW . ( k + 1 ) ) = ( Comput (( PW +* ( while>0 (a,I) ) ),( Initialize ( SW . k ) ),( ( LifeSpan (PWIS,SWkIS) ) + 3 )) ) by A5,SCMFSA_9:def 5;
A15: ( DataPart ( IExec (I,PW,( SW . k )) ) ) = ( DataPart ( Result (PWI,SWkI) ) ) by SCMFSA6B:def 1
.= ( DataPart ( Result (PWI,SWkI) ) )
.= ( DataPart ( Comput (PWIS,SWkIS,( LifeSpan (PWIS,SWkIS) )) ) ) by A13,A10,EXTPRO_1:23;
thus ( DataPart ( ( StepWhile>0 (a,I,p,s) ) . ( k + 1 ) ) ) = ( DataPart ( Comput (PWIS,SWkIS,( LifeSpan (PWIS,SWkIS) )) ) ) by A2,A6,CKB41:1,A14
.= ( DataPart ( IExec (I,PW,( ( StepWhile>0 (a,I,p,s) ) . k )) ) ) by A15;
end;
