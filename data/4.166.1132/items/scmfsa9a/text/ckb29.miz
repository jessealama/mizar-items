environ
vocabularies NUMBERS,SUBSET_1,INT_1,AMI_1,SCMFSA_2,SF_MASTR,FUNCOP_1,FUNCT_1,FINSUB_1,CARD_3,RELAT_1,TARSKI,AMISTD_2,XBOOLE_0,CARD_1,SCMFSA8A,AMI_3,FSM_1,SCMFSA7B,SCMFSA8B,ARYTM_3,TURING_1,SCMFSA6A,ARYTM_1,VALUED_1,FUNCT_4,SCMFSA_9,UNIALG_2,SCMFSA6B,XXREAL_0,CIRCUIT2,GRAPHSP,NAT_1,SCMFSA6C,MSUALG_1,SFMASTR1,PRE_FF,COMPLEX1,ABIAN,SCMFSA9A,ORDINAL1,PARTFUN1,SCMNORM,RELOC,PBOOLE,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,FINSUB_1,FUNCOP_1,INT_1,ABIAN,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,PRE_FF,CARD_3,FUNCT_4,PBOOLE,VALUED_1,INT_2,XXREAL_0,NAT_1,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,SCMFSA_2,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA_7,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,CKB16,CKB17,CKB27;
definitions FUNCOP_1,SCMFSA6A,AFINSQ_1,COMPOS_1,EXTPRO_1,AMISTD_2,MEMSTR_0,CKB16,CKB17,CKB27;
theorems TARSKI,ZFMISC_1,ABSVALUE,NAT_1,INT_1,NAT_2,FUNCT_1,FUNCT_2,GRFUNC_1,FUNCOP_1,FUNCT_4,PRE_FF,ABIAN,SCMFSA_2,MEMSTR_0,SCMFSA_4,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA8C,SCMFSA_9,SFMASTR1,RELAT_1,XBOOLE_0,XBOOLE_1,CARD_3,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,VALUED_1,PBOOLE,PARTFUN1,FINSEQ_4,COMPOS_1,EXTPRO_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes FUNCT_2,NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,FINSET_1,FINSUB_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_3,ABIAN,SCMFSA_2,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,VALUED_1,FUNCT_2,RELAT_1,AFINSQ_1,FUNCT_4,FUNCOP_1,SCMFSA10,AMISTD_2,SCMFSA6A,COMPOS_1,EXTPRO_1,PBOOLE,STRUCT_0,MEMSTR_0;
constructors NAT_D,PRE_FF,ABIAN,SCMFSA_7,SCMFSA6A,SCMFSA6B,MEMSTR_0,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,AMISTD_2,RELSET_1,PRE_POLY,XXREAL_2,PBOOLE,SCMFSA7B,SCMFSA8C,FUNCT_4,AMISTD_1,CKB16,CKB17,CKB27;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve p for (Instruction-Sequence of ( SCM+FSA ));
reserve s for (State of ( SCM+FSA ));
reserve a for  read-write Int-Location;
reserve I for (Program of ( SCM+FSA ));
theorem
((( ProperBodyWhile=0 a,I,( Initialized s ),p or I is  parahalting) &  WithVariantWhile=0 a,I,( Initialized s ),p) implies ( DataPart ( IExec (( while=0 (a,I) ),p,s) ) ) = ( DataPart ( ( StepWhile=0 (a,I,p,( Initialized s )) ) . ( ExitsAtWhile=0 (a,I,p,( Initialized s )) ) ) ))
proof
set Ins = ( NAT );
set WH = ( while=0 (a,I) );
set Is = ( Initialized s );
set pds = ( p +* WH );
A2: Is = ( Initialize Is ) by MEMSTR_0:44;
assume A5: (( ProperBodyWhile=0 a,I,( Initialized s ),p or I is  parahalting) &  WithVariantWhile=0 a,I,( Initialized s ),p);
then A6: (ex k being (Element of ( NAT )) st (((( ExitsAtWhile=0 (a,I,p,Is) ) = k & ( ( ( StepWhile=0 (a,I,p,Is) ) . k ) . a ) <> ( 0 )) & (for i being (Element of ( NAT )) holds (( ( ( StepWhile=0 (a,I,p,Is) ) . i ) . a ) <> ( 0 ) implies k <= i))) & ( DataPart ( Comput (( p +* ( while=0 (a,I) ) ),( Initialize Is ),( LifeSpan (( p +* ( while=0 (a,I) ) ),( Initialize Is )) )) ) ) = ( DataPart ( ( StepWhile=0 (a,I,p,Is) ) . k ) ))) by CKB27:def 1;
WH is_halting_on Is,p by A5,CKB19:1,CKB20:1;
then A7: pds halts_on Is by A2,SCMFSA7B:def 7;
thus ( DataPart ( IExec (( while=0 (a,I) ),p,s) ) ) = ( DataPart ( Result (( p +* WH ),( Initialized s )) ) ) by SCMFSA6B:def 1
.= ( DataPart ( Result (( p +* WH ),( s +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) )) ) )
.= ( DataPart ( ( StepWhile=0 (a,I,p,Is) ) . ( ExitsAtWhile=0 (a,I,p,Is) ) ) ) by A2,A7,A6,EXTPRO_1:23;
end;
