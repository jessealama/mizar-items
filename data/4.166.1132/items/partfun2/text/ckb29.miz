environ
vocabularies XBOOLE_0,SUBSET_1,PARTFUN1,RELAT_1,FUNCT_1,TARSKI,FUNCOP_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,CKB6,CKB12,CKB21;
definitions TARSKI,XBOOLE_0,FUNCT_1;
theorems TARSKI,FUNCT_1,FUNCT_2,GRFUNC_1,FUNCOP_1,PARTFUN1,RELAT_1,RELSET_1,XBOOLE_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes FUNCT_2,XBOOLE_0;
registrations FUNCT_1,RELSET_1;
constructors PARTFUN1,FUNCOP_1,RELSET_1,CKB6,CKB12,CKB21;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve X for set;
reserve C for non  empty set;
reserve D for non  empty set;
reserve SC for (Subset of C);
reserve c for (Element of C);
reserve f for (PartFunc of C,D);
theorem
Th44: (SC = ( f " X ) iff (for c holds (c in SC iff (c in ( dom f ) & ( f /. c ) in X))))
proof
thus (SC = ( f " X ) implies (for c holds (c in SC iff (c in ( dom f ) & ( f /. c ) in X))))
proof
assume A1: SC = ( f " X );
let c;
thus (c in SC implies (c in ( dom f ) & ( f /. c ) in X))
proof
assume c in SC;
then (c in ( dom f ) & ( (f qua Function) . c ) in X) by A1,FUNCT_1:def 7;
hence thesis by PARTFUN1:def 6;
end;

assume that
A2: c in ( dom f )
and
A3: ( f /. c ) in X;
( (f qua Function) . c ) in X by A2,A3,PARTFUN1:def 6;
hence thesis by A1,A2,FUNCT_1:def 7;
end;

assume A4: (for c holds (c in SC iff (c in ( dom f ) & ( f /. c ) in X)));
now
let x;
thus (x in SC implies (x in ( dom f ) & ( (f qua Function) . x ) in X))
proof
assume A5: x in SC;
then reconsider x1 = x as (Element of C);
(x1 in ( dom f ) & ( f /. x1 ) in X) by A4,A5;
hence thesis by PARTFUN1:def 6;
end;

assume that
A6: x in ( dom f )
and
A7: ( (f qua Function) . x ) in X;
reconsider x1 = x as (Element of C) by A6;
( f /. x1 ) in X by A6,A7,PARTFUN1:def 6;
hence x in SC by A4,A6;
end;
hence thesis by FUNCT_1:def 7;
end;
