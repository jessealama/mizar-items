environ
vocabularies XBOOLE_0,SUBSET_1,PARTFUN1,RELAT_1,FUNCT_1,TARSKI,FUNCOP_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,CKB6;
definitions TARSKI,XBOOLE_0,FUNCT_1;
theorems TARSKI,FUNCT_1,FUNCT_2,GRFUNC_1,FUNCOP_1,PARTFUN1,RELAT_1,RELSET_1,XBOOLE_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10;
schemes FUNCT_2,XBOOLE_0;
registrations FUNCT_1,RELSET_1;
constructors PARTFUN1,FUNCOP_1,RELSET_1,CKB6;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve C for non  empty set;
reserve D for non  empty set;
reserve f for (PartFunc of C,D);
theorem
((((f is  one-to-one & x in ( dom f )) & y in ( dom f )) & ( f /. x ) = ( f /. y )) implies x = y)
proof
assume that
A1: f is  one-to-one
and
A2: x in ( dom f )
and
A3: y in ( dom f );
assume ( f /. x ) = ( f /. y );
then ( f . x ) = ( f /. y ) by A2,PARTFUN1:def 6
.= ( f . y ) by A3,PARTFUN1:def 6;
hence thesis by A1,A2,A3,FUNCT_1:def 4;
end;
