environ
vocabularies XBOOLE_0,SUBSET_1,PARTFUN1,RELAT_1,FUNCT_1,TARSKI,FUNCOP_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,CKB6,CKB12,CKB21,CKB35,CKB42;
definitions TARSKI,XBOOLE_0,FUNCT_1,CKB42;
theorems TARSKI,FUNCT_1,FUNCT_2,GRFUNC_1,FUNCOP_1,PARTFUN1,RELAT_1,RELSET_1,XBOOLE_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52;
schemes FUNCT_2,XBOOLE_0,CKB32,CKB33,CKB34;
registrations FUNCT_1,RELSET_1;
constructors PARTFUN1,FUNCOP_1,RELSET_1,CKB6,CKB12,CKB21,CKB35,CKB42;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve C for non  empty set;
reserve D for non  empty set;
reserve c for (Element of C);
reserve f for (PartFunc of C,D);
reserve g for (PartFunc of C,D);
theorem
((( dom f ) c= ( dom g ) & (for c holds (c in ( dom f ) implies ( f /. c ) = ( g /. c )))) implies f c= g)
proof
assume that
A1: ( dom f ) c= ( dom g )
and
A2: (for c holds (c in ( dom f ) implies ( f /. c ) = ( g /. c )));
now
let x;
assume A3: x in ( dom f );
then reconsider x1 = x as (Element of C);
( f /. x1 ) = ( g /. x1 ) by A2,A3;
then ( (f qua Function) . x ) = ( g /. x1 ) by A3,PARTFUN1:def 6;
hence ( (f qua Function) . x ) = ( (g qua Function) . x ) by A1,A3,PARTFUN1:def 6;
end;
hence thesis by A1,GRFUNC_1:2;
end;
