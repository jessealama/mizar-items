environ
vocabularies XBOOLE_0,SUBSET_1,PARTFUN1,RELAT_1,FUNCT_1,TARSKI,FUNCOP_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1;
definitions TARSKI,XBOOLE_0,FUNCT_1;
theorems TARSKI,FUNCT_1,FUNCT_2,GRFUNC_1,FUNCOP_1,PARTFUN1,RELAT_1,RELSET_1,XBOOLE_0,CKB1;
schemes FUNCT_2,XBOOLE_0;
registrations FUNCT_1,RELSET_1;
constructors PARTFUN1,FUNCOP_1,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve C for non empty set;
reserve D for non empty set;
reserve c for (Element of C);
reserve f for (PartFunc of C,D);
theorem
Th4: (y in ( rng f ) iff (ex c st (c in ( dom f ) & y = ( f /. c ))))
proof
thus (y in ( rng f ) implies (ex c st (c in ( dom f ) & y = ( f /. c ))))
proof
assume y in ( rng f );
then consider x such that A1: x in ( dom f ) and A2: y = ( (f qua Function) . x ) by FUNCT_1:def 3;
reconsider x as (Element of C) by A1;
take x;
thus thesis by A1,A2,PARTFUN1:def 6;
end;

given c such that
A3: c in ( dom f )
and
A4: y = ( f /. c );

( (f qua Function) . c ) in ( rng f ) by A3,FUNCT_1:def 3;
hence thesis by A3,A4,PARTFUN1:def 6;
end;
