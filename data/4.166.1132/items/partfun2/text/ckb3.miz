environ
vocabularies XBOOLE_0,SUBSET_1,PARTFUN1,RELAT_1,FUNCT_1,TARSKI,FUNCOP_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1;
definitions TARSKI,XBOOLE_0,FUNCT_1;
theorems TARSKI,FUNCT_1,FUNCT_2,GRFUNC_1,FUNCOP_1,PARTFUN1,RELAT_1,RELSET_1,XBOOLE_0,CKB1,CKB2;
schemes FUNCT_2,XBOOLE_0;
registrations FUNCT_1,RELSET_1;
constructors PARTFUN1,FUNCOP_1,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve C for non empty set;
reserve D for non empty set;
reserve E for non empty set;
reserve c for (Element of C);
reserve f for (PartFunc of C,D);
reserve s for (PartFunc of D,E);
reserve h for (PartFunc of C,E);
theorem
Th6: (h = ( s * f ) iff ((for c holds (c in ( dom h ) iff (c in ( dom f ) & ( f /. c ) in ( dom s )))) & (for c holds (c in ( dom h ) implies ( h /. c ) = ( s /. ( f /. c ) )))))
proof
thus (h = ( s * f ) implies ((for c holds (c in ( dom h ) iff (c in ( dom f ) & ( f /. c ) in ( dom s )))) & (for c holds (c in ( dom h ) implies ( h /. c ) = ( s /. ( f /. c ) )))))
proof
assume A1: h = ( s * f );
A2:now
let c;
thus (c in ( dom h ) implies (c in ( dom f ) & ( f /. c ) in ( dom s )))
proof
assume c in ( dom h );
then (c in ( dom f ) & ( (f qua Function) . c ) in ( dom s )) by A1,FUNCT_1:11;
hence thesis by PARTFUN1:def 6;
end;

assume that
A3: c in ( dom f )
and
A4: ( f /. c ) in ( dom s );
( (f qua Function) . c ) in ( dom s ) by A3,A4,PARTFUN1:def 6;
hence c in ( dom h ) by A1,A3,FUNCT_1:11;
end;
hence (for c holds (c in ( dom h ) iff (c in ( dom f ) & ( f /. c ) in ( dom s ))));
let c;
assume A5: c in ( dom h );
then ( (h qua Function) . c ) = ( (s qua Function) . ( (f qua Function) . c ) ) by A1,FUNCT_1:12;
then A6: ( h /. c ) = ( (s qua Function) . ( (f qua Function) . c ) ) by A5,PARTFUN1:def 6;
c in ( dom f ) by A2,A5;
then A7: ( h /. c ) = ( (s qua Function) . ( f /. c ) ) by A6,PARTFUN1:def 6;
( f /. c ) in ( dom s ) by A2,A5;
hence thesis by A7,PARTFUN1:def 6;
end;

assume that
A8: (for c holds (c in ( dom h ) iff (c in ( dom f ) & ( f /. c ) in ( dom s ))))
and
A9: (for c holds (c in ( dom h ) implies ( h /. c ) = ( s /. ( f /. c ) )));
A10:now
let x;
thus (x in ( dom h ) implies (x in ( dom f ) & ( (f qua Function) . x ) in ( dom s )))
proof
assume A11: x in ( dom h );
then reconsider y = x as (Element of C);
(y in ( dom f ) & ( f /. y ) in ( dom s )) by A8,A11;
hence thesis by PARTFUN1:def 6;
end;

thus ((x in ( dom f ) & ( (f qua Function) . x ) in ( dom s )) implies x in ( dom h ))
proof
assume that
A12: x in ( dom f )
and
A13: ( (f qua Function) . x ) in ( dom s );
reconsider y = x as (Element of C) by A12;
( f /. y ) in ( dom s ) by A12,A13,PARTFUN1:def 6;
hence thesis by A8,A12;
end;

end;
now
let x;
assume A14: x in ( dom h );
then reconsider y = x as (Element of C);
( h /. y ) = ( s /. ( f /. y ) ) by A9,A14;
then A15: ( (h qua Function) . y ) = ( s /. ( f /. y ) ) by A14,PARTFUN1:def 6;
( f /. y ) in ( dom s ) by A8,A14;
then A16: ( (h qua Function) . x ) = ( (s qua Function) . ( f /. y ) ) by A15,PARTFUN1:def 6;
y in ( dom f ) by A8,A14;
hence ( (h qua Function) . x ) = ( (s qua Function) . ( (f qua Function) . x ) ) by A16,PARTFUN1:def 6;
end;
hence thesis by A10,FUNCT_1:10;
end;
