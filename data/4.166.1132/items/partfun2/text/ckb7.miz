environ
vocabularies XBOOLE_0,SUBSET_1,PARTFUN1,RELAT_1,FUNCT_1,TARSKI,FUNCOP_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,CKB6;
definitions TARSKI,XBOOLE_0,FUNCT_1;
theorems TARSKI,FUNCT_1,FUNCT_2,GRFUNC_1,FUNCOP_1,PARTFUN1,RELAT_1,RELSET_1,XBOOLE_0,CKB1,CKB2,CKB3,CKB4,CKB5;
schemes FUNCT_2,XBOOLE_0;
registrations FUNCT_1,RELSET_1;
constructors PARTFUN1,FUNCOP_1,RELSET_1,CKB6;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve D for non empty set;
reserve SD for (Subset of D);
reserve d for (Element of D);
reserve F for (PartFunc of D,D);
theorem
Th12: (F = ( id SD ) iff (( dom F ) = SD & (for d holds (d in SD implies ( F /. d ) = d))))
proof
thus (F = ( id SD ) implies (( dom F ) = SD & (for d holds (d in SD implies ( F /. d ) = d))))
proof
assume A1: F = ( id SD );
hence A2: ( dom F ) = SD by RELAT_1:45;
let d;
assume A3: d in SD;
then ( (F qua Function) . d ) = d by A1,FUNCT_1:18;
hence thesis by A2,A3,PARTFUN1:def 6;
end;

assume that
A4: ( dom F ) = SD
and
A5: (for d holds (d in SD implies ( F /. d ) = d));
now
let x;
assume A6: x in SD;
then reconsider x1 = x as (Element of D);
( F /. x1 ) = x1 by A5,A6;
hence ( (F qua Function) . x ) = x by A4,A6,PARTFUN1:def 6;
end;
hence thesis by A4,FUNCT_1:17;
end;
