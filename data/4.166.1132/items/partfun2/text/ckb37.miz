environ
vocabularies XBOOLE_0,SUBSET_1,PARTFUN1,RELAT_1,FUNCT_1,TARSKI,FUNCOP_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,CKB6,CKB12,CKB21,CKB35;
definitions TARSKI,XBOOLE_0,FUNCT_1;
theorems TARSKI,FUNCT_1,FUNCT_2,GRFUNC_1,FUNCOP_1,PARTFUN1,RELAT_1,RELSET_1,XBOOLE_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB36;
schemes FUNCT_2,XBOOLE_0,CKB32,CKB33,CKB34;
registrations FUNCT_1,RELSET_1;
constructors PARTFUN1,FUNCOP_1,RELSET_1,CKB6,CKB12,CKB21,CKB35;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve C for non empty set;
reserve D for non empty set;
reserve c for (Element of C);
reserve d for (Element of D);
reserve f for (PartFunc of C,D);
theorem
((for c holds (c in ( dom f ) implies ( f /. c ) = d)) implies f = ( ( dom f ) --> d ))
proof
assume A1: (for c holds (c in ( dom f ) implies ( f /. c ) = d));
now
let x;
assume A2: x in ( dom f );
then reconsider x1 = x as (Element of C);
( f /. x1 ) = d by A1,A2;
hence ( (f qua Function) . x ) = d by A2,PARTFUN1:def 6;
end;
hence thesis by FUNCOP_1:11;
end;
