environ
vocabularies XBOOLE_0,SUBSET_1,PARTFUN1,RELAT_1,FUNCT_1,TARSKI,FUNCOP_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,CKB6,CKB12;
definitions TARSKI,XBOOLE_0,FUNCT_1;
theorems TARSKI,FUNCT_1,FUNCT_2,GRFUNC_1,FUNCOP_1,PARTFUN1,RELAT_1,RELSET_1,XBOOLE_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11;
schemes FUNCT_2,XBOOLE_0;
registrations FUNCT_1,RELSET_1;
constructors PARTFUN1,FUNCOP_1,RELSET_1,CKB6,CKB12;
requirements SUBSET,BOOLE;
begin
reserve C for non empty set;
reserve D for non empty set;
reserve c for (Element of C);
reserve d for (Element of D);
theorem
Th18: (for f being  one-to-one (PartFunc of C,D) holds (for g being (PartFunc of D,C) holds (g = ( f " ) iff (( dom g ) = ( rng f ) & (for d holds (for c holds ((d in ( rng f ) & c = ( g /. d )) iff (c in ( dom f ) & d = ( f /. c )))))))))
proof
let f being  one-to-one (PartFunc of C,D);
let g being (PartFunc of D,C);
thus (g = ( f " ) implies (( dom g ) = ( rng f ) & (for d holds (for c holds ((d in ( rng f ) & c = ( g /. d )) iff (c in ( dom f ) & d = ( f /. c )))))))
proof
assume A1: g = ( f " );
hence ( dom g ) = ( rng f ) by FUNCT_1:32;
let d;
let c;
A2: ( dom g ) = ( rng f ) by A1,FUNCT_1:32;
thus ((d in ( rng f ) & c = ( g /. d )) implies (c in ( dom f ) & d = ( f /. c )))
proof
assume that
A3: d in ( rng f )
and
A4: c = ( g /. d );
c = ( (g qua Function) . d ) by A2,A3,A4,PARTFUN1:def 6;
then (c in ( dom f ) & d = ( (f qua Function) . c )) by A1,A3,FUNCT_1:32;
hence thesis by PARTFUN1:def 6;
end;

assume that
A5: c in ( dom f )
and
A6: d = ( f /. c );
d = ( (f qua Function) . c ) by A5,A6,PARTFUN1:def 6;
then (d in ( rng f ) & c = ( (g qua Function) . d )) by A1,A5,FUNCT_1:32;
hence thesis by A2,PARTFUN1:def 6;
end;

assume that
A7: ( dom g ) = ( rng f )
and
A8: (for d holds (for c holds ((d in ( rng f ) & c = ( g /. d )) iff (c in ( dom f ) & d = ( f /. c )))))
and
A9: g <> ( f " );
now
per cases  by A9,CKB1:1;
suppose ( dom ( f " ) ) <> ( dom g );

hence contradiction by A7,FUNCT_1:33;
end;
suppose (ex d st (d in ( dom ( f " ) ) & ( ( f " ) /. d ) <> ( g /. d )));

then consider d such that A10: d in ( dom ( f " ) ) and A11: ( ( f " ) /. d ) <> ( g /. d );
( ( f " ) /. d ) in ( rng ( f " ) ) by A10,CKB2:1;
then A12: ( ( f " ) /. d ) in ( dom f ) by FUNCT_1:33;
d in ( rng f ) by A10,FUNCT_1:33;
then d = ( (f qua Function) . ( (( f " ) qua Function) . d ) ) by FUNCT_1:35;
then d = ( (f qua Function) . ( ( f " ) /. d ) ) by A10,PARTFUN1:def 6;
then d = ( f /. ( ( f " ) /. d ) ) by A12,PARTFUN1:def 6;
hence contradiction by A8,A11,A12;
end;
end;
hence contradiction;
end;
