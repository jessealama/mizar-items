environ
vocabularies XBOOLE_0,SUBSET_1,PARTFUN1,RELAT_1,FUNCT_1,TARSKI,FUNCOP_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,CKB6,CKB12,CKB21;
definitions TARSKI,XBOOLE_0,FUNCT_1;
theorems TARSKI,FUNCT_1,FUNCT_2,GRFUNC_1,FUNCOP_1,PARTFUN1,RELAT_1,RELSET_1,XBOOLE_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31;
schemes FUNCT_2,XBOOLE_0,CKB32;
registrations FUNCT_1,RELSET_1;
constructors PARTFUN1,FUNCOP_1,RELSET_1,CKB6,CKB12,CKB21;
requirements SUBSET,BOOLE;
begin
scheme LambdaPFD { D,C() -> non empty set,F(set) -> (Element of C()),P[set] } : (ex f being (PartFunc of D(),C()) st ((for d being (Element of D()) holds (d in ( dom f ) iff P[ d ])) & (for d being (Element of D()) holds (d in ( dom f ) implies ( f /. d ) = F(d)))))
proof
defpred Q[ set,set ]
 means
(P[ $1 ] & $2 = F($1));
consider f being (PartFunc of D(),C()) such that A1: (for d being (Element of D()) holds (d in ( dom f ) iff (ex c being (Element of C()) st Q[ d,c ]))) and A2: (for d being (Element of D()) holds (d in ( dom f ) implies Q[ d,( f /. d ) ])) from CKB32:sch 1;
take f;
thus (for d being (Element of D()) holds (d in ( dom f ) iff P[ d ]))
proof
let d being (Element of D());
thus (d in ( dom f ) implies P[ d ])
proof
assume d in ( dom f );
then (ex c being (Element of C()) st (P[ d ] & c = F(d))) by A1;
hence thesis;
end;

assume P[ d ];
then (ex c being (Element of C()) st (P[ d ] & c = F(d)));
hence thesis by A1;
end;

thus thesis by A2;
end;
