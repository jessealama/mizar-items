environ
vocabularies XBOOLE_0,SUBSET_1,PARTFUN1,RELAT_1,FUNCT_1,TARSKI,FUNCOP_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,CKB6,CKB12,CKB21;
definitions TARSKI,XBOOLE_0,FUNCT_1;
theorems TARSKI,FUNCT_1,FUNCT_2,GRFUNC_1,FUNCOP_1,PARTFUN1,RELAT_1,RELSET_1,XBOOLE_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24;
schemes FUNCT_2,XBOOLE_0;
registrations FUNCT_1,RELSET_1;
constructors PARTFUN1,FUNCOP_1,RELSET_1,CKB6,CKB12,CKB21;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve X for set;
reserve C for non empty set;
reserve D for non empty set;
reserve SD for (Subset of D);
reserve c for (Element of C);
reserve d for (Element of D);
reserve f for (PartFunc of C,D);
theorem
Th40: (SD = ( f .: X ) iff (for d holds (d in SD iff (ex c st ((c in ( dom f ) & c in X) & d = ( f /. c ))))))
proof
thus (SD = ( f .: X ) implies (for d holds (d in SD iff (ex c st ((c in ( dom f ) & c in X) & d = ( f /. c ))))))
proof
assume A1: SD = ( f .: X );
let d;
thus (d in SD implies (ex c st ((c in ( dom f ) & c in X) & d = ( f /. c ))))
proof
assume d in SD;
then consider x such that A2: x in ( dom f ) and A3: x in X and A4: d = ( (f qua Function) . x ) by A1,FUNCT_1:def 6;
reconsider x as (Element of C) by A2;
take x;
thus (x in ( dom f ) & x in X) by A2,A3;
thus thesis by A2,A4,PARTFUN1:def 6;
end;

given c such that
A5: c in ( dom f )
and
A6: (c in X & d = ( f /. c ));

( f /. c ) = ( (f qua Function) . c ) by A5,PARTFUN1:def 6;
hence thesis by A1,A5,A6,FUNCT_1:def 6;
end;

assume that
A7: (for d holds (d in SD iff (ex c st ((c in ( dom f ) & c in X) & d = ( f /. c )))))
and
A8: SD <> ( f .: X );
consider x such that A9: (not (x in SD iff x in ( f .: X ))) by A8,TARSKI:1;
now
per cases  by A9;
suppose A10: (x in SD & (not x in ( f .: X )));

then reconsider x as (Element of D);
consider c such that A11: c in ( dom f ) and A12: c in X and A13: x = ( f /. c ) by A7,A10;
x = ( (f qua Function) . c ) by A11,A13,PARTFUN1:def 6;
hence contradiction by A10,A11,A12,FUNCT_1:def 6;
end;
suppose A14: (x in ( f .: X ) & (not x in SD));

then consider y such that A15: y in ( dom f ) and A16: y in X and A17: x = ( (f qua Function) . y ) by FUNCT_1:def 6;
reconsider y as (Element of C) by A15;
x = ( f /. y ) by A15,A17,PARTFUN1:def 6;
hence contradiction by A7,A14,A15,A16;
end;
end;
hence contradiction;
end;
