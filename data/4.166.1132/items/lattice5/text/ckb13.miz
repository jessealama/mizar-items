environ
vocabularies NUMBERS,FUNCT_1,FUNCOP_1,TARSKI,RELAT_1,FUNCT_6,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,ORDERS_2,LATTICE3,MSUALG_5,STRUCT_0,EQREL_1,PBOOLE,LATTICES,XXREAL_0,REWRITE1,SETFAM_1,RELAT_2,WAYBEL_0,GROUP_6,YELLOW_0,ORDINAL2,CAT_1,FINSEQ_1,ARYTM_3,ABIAN,FINSEQ_2,ARYTM_1,CARD_1,ORDINAL4,NAT_1,VALUED_0,FUNCT_2,MCART_1,PARTFUN1,LATTICE5;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,FUNCT_2,FUNCT_6,CARD_1,NUMBERS,XCMPLX_0,NAT_1,NAT_D,SETFAM_1,ORDINAL1,ORDINAL2,MCART_1,DOMAIN_1,PARTFUN1,FUNCOP_1,STRUCT_0,ORDERS_2,EQREL_1,MSUALG_5,FINSEQ_1,FINSEQ_2,SEQ_4,LATTICES,LATTICE3,BINOP_1,YELLOW_0,WAYBEL_0,YELLOW_2,ABIAN,XXREAL_0,CKB4;
definitions TARSKI,LATTICE3,FUNCOP_1,WAYBEL_0,XBOOLE_0,BINOP_1,FINSEQ_1,FINSEQ_2,CKB4;
theorems EQREL_1,RELAT_1,RELAT_2,FINSEQ_1,FINSEQ_2,MSUALG_5,ORDERS_2,TARSKI,ENUMSET1,ORDINAL1,ORDINAL3,WELLORD2,TREES_2,PARTFUN1,GRFUNC_1,FUNCT_6,MCART_1,FINSEQ_5,NAT_1,INT_1,BINOP_1,ZFMISC_1,FUNCT_1,FUNCT_2,FILTER_0,LATTICES,LATTICE3,YELLOW_0,YELLOW_2,YELLOW_3,YELLOW_5,WAYBEL_0,WAYBEL_1,WAYBEL_6,RELSET_1,CARD_1,FINSEQ_3,SETFAM_1,XBOOLE_0,XBOOLE_1,ORDERS_1,FUNCOP_1,XREAL_1,XXREAL_0,XXREAL_2,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
schemes DOMAIN_1,FUNCT_2,RELSET_1,RECDEF_1,ORDINAL2,NAT_1,FINSEQ_1,CLASSES1,BINOP_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,PARTFUN1,FUNCOP_1,XREAL_0,CARD_1,MEMBERED,FINSEQ_1,ABIAN,STRUCT_0,LATTICES,LATTICE3,YELLOW_0,YELLOW_1,RELAT_1,XXREAL_2,RELSET_1,FINSEQ_2,FUNCT_1,CKB5;
constructors SETFAM_1,BINOP_1,DOMAIN_1,ORDINAL2,NAT_1,CLASSES1,SEQ_4,FINSOP_1,FUNCT_6,RFUNCT_3,BINARITH,ABIAN,LATTICE3,MSUALG_5,YELLOW_2,NAT_D,RELSET_1,CKB4;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve X for non  empty set;
definition
let L being non  empty RelStr;
redefine attr L is  complete
means
(for X being (Subset of L) holds (ex a being (Element of L) st (a is_<=_than X & (for b being (Element of L) holds (b is_<=_than X implies b <= a)))));
compatibility
proof
hereby
assume A1: L is  complete;
let X being (Subset of L);
set Y = { c where c is (Element of L): c is_<=_than X };
consider p being (Element of L) such that A2: Y is_<=_than p and A3: (for r being (Element of L) holds (Y is_<=_than r implies p <= r)) by A1,LATTICE3:def 12;
take p;
thus p is_<=_than X
proof
let q being (Element of L);
assume A4: q in X;
Y is_<=_than q
proof
let s being (Element of L);
assume s in Y;
then (ex t being (Element of L) st (s = t & t is_<=_than X));
hence thesis by A4,LATTICE3:def 8;
end;
hence thesis by A3;
end;

let b being (Element of L);
assume b is_<=_than X;
then b in Y;
hence b <= p by A2,LATTICE3:def 9;
end;
assume A5: (for X being (Subset of L) holds (ex a being (Element of L) st (a is_<=_than X & (for b being (Element of L) holds (b is_<=_than X implies b <= a)))));
let X being set;
set Y = { c where c is (Element of L): X is_<=_than c };
Y c= (the carrier of L)
proof
let x being set;
assume x in Y;
then (ex c being (Element of L) st (x = c & X is_<=_than c));
hence thesis;
end;
then consider p being (Element of L) such that A6: p is_<=_than Y and A7: (for r being (Element of L) holds (r is_<=_than Y implies r <= p)) by A5;
take p;
thus X is_<=_than p
proof
let q being (Element of L);
assume A8: q in X;
q is_<=_than Y
proof
let s being (Element of L);
assume s in Y;
then (ex t being (Element of L) st (s = t & X is_<=_than t));
hence thesis by A8,LATTICE3:def 9;
end;
hence thesis by A7;
end;

let r being (Element of L);
assume X is_<=_than r;
then r in Y;
hence thesis by A6,LATTICE3:def 8;
end;
end;
