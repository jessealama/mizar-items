environ
vocabularies NUMBERS,FUNCT_1,FUNCOP_1,TARSKI,RELAT_1,FUNCT_6,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,ORDERS_2,LATTICE3,MSUALG_5,STRUCT_0,EQREL_1,PBOOLE,LATTICES,XXREAL_0,REWRITE1,SETFAM_1,RELAT_2,WAYBEL_0,GROUP_6,YELLOW_0,ORDINAL2,CAT_1,FINSEQ_1,ARYTM_3,ABIAN,FINSEQ_2,ARYTM_1,CARD_1,ORDINAL4,NAT_1,VALUED_0,FUNCT_2,MCART_1,PARTFUN1,LATTICE5;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,FUNCT_2,FUNCT_6,CARD_1,NUMBERS,XCMPLX_0,NAT_1,NAT_D,SETFAM_1,ORDINAL1,ORDINAL2,MCART_1,DOMAIN_1,PARTFUN1,FUNCOP_1,STRUCT_0,ORDERS_2,EQREL_1,MSUALG_5,FINSEQ_1,FINSEQ_2,SEQ_4,LATTICES,LATTICE3,BINOP_1,YELLOW_0,WAYBEL_0,YELLOW_2,ABIAN,XXREAL_0,CKB4,CKB13,CKB16,CKB18,CKB20;
definitions TARSKI,LATTICE3,FUNCOP_1,WAYBEL_0,XBOOLE_0,BINOP_1,FINSEQ_1,FINSEQ_2,CKB4,CKB13,CKB20;
theorems EQREL_1,RELAT_1,RELAT_2,FINSEQ_1,FINSEQ_2,MSUALG_5,ORDERS_2,TARSKI,ENUMSET1,ORDINAL1,ORDINAL3,WELLORD2,TREES_2,PARTFUN1,GRFUNC_1,FUNCT_6,MCART_1,FINSEQ_5,NAT_1,INT_1,BINOP_1,ZFMISC_1,FUNCT_1,FUNCT_2,FILTER_0,LATTICES,LATTICE3,YELLOW_0,YELLOW_2,YELLOW_3,YELLOW_5,WAYBEL_0,WAYBEL_1,WAYBEL_6,RELSET_1,CARD_1,FINSEQ_3,SETFAM_1,XBOOLE_0,XBOOLE_1,ORDERS_1,FUNCOP_1,XREAL_1,XXREAL_0,XXREAL_2,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB20;
schemes DOMAIN_1,FUNCT_2,RELSET_1,RECDEF_1,ORDINAL2,NAT_1,FINSEQ_1,CLASSES1,BINOP_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,PARTFUN1,FUNCOP_1,XREAL_0,CARD_1,MEMBERED,FINSEQ_1,ABIAN,STRUCT_0,LATTICES,LATTICE3,YELLOW_0,YELLOW_1,RELAT_1,XXREAL_2,RELSET_1,FINSEQ_2,FUNCT_1,CKB5,CKB14,CKB15,CKB17,CKB19;
constructors SETFAM_1,BINOP_1,DOMAIN_1,ORDINAL2,NAT_1,CLASSES1,SEQ_4,FINSOP_1,FUNCT_6,RFUNCT_3,BINARITH,ABIAN,LATTICE3,MSUALG_5,YELLOW_2,NAT_D,RELSET_1,CKB4,CKB20;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve X for non  empty set;
reserve x for set;
theorem
Th12: (for x being set holds (for o being (Element of ( NAT )) holds (for R1,R2 being Relation holds (for f being non  empty (FinSequence of X) holds (((R1 is_reflexive_in X & R2 is_reflexive_in X) & f = ( o |-> x )) implies x,x are_joint_by f,R1,R2)))))
proof
let x being set;
let o being (Element of ( NAT ));
let R1 being Relation;
let R2 being Relation;
let f being non  empty (FinSequence of X);
assume that
A1: R1 is_reflexive_in X
and
A2: R2 is_reflexive_in X
and
A3: f = ( o |-> x );
A4: ( dom f ) = ( Seg o ) by A3,FUNCOP_1:13;
then A5: ( f . 1 ) = x by A3,FINSEQ_5:6,FUNCOP_1:7;
A6: (for i being (Element of ( NAT )) holds ((1 <= i & i < ( len f )) implies ((i is  odd implies [ ( f . i ),( f . ( i + 1 ) ) ] in R1) & (i is  even implies [ ( f . i ),( f . ( i + 1 ) ) ] in R2))))
proof
let i being (Element of ( NAT ));
assume that
A7: 1 <= i
and
A8: i < ( len f );
A9: (i is  even implies [ ( f . i ),( f . ( i + 1 ) ) ] in R2)
proof
(1 <= ( i + 1 ) & ( i + 1 ) <= ( len f )) by A7,A8,NAT_1:13;
then ( i + 1 ) in ( Seg ( len f ) );
then ( i + 1 ) in ( Seg o ) by A3,CARD_1:def 7;
then A10: ( f . ( i + 1 ) ) = x by A3,FUNCOP_1:7;
assume i is  even;
i <= o by A3,A8,CARD_1:def 7;
then i in ( Seg o ) by A7;
then A11: ( f . i ) = x by A3,FUNCOP_1:7;
x in X by A4,A5,FINSEQ_2:11,FINSEQ_5:6;
hence thesis by A2,A10,A11,RELAT_2:def 1;
end;
(i is  odd implies [ ( f . i ),( f . ( i + 1 ) ) ] in R1)
proof
(1 <= ( i + 1 ) & ( i + 1 ) <= ( len f )) by A7,A8,NAT_1:13;
then ( i + 1 ) in ( Seg ( len f ) );
then ( i + 1 ) in ( Seg o ) by A3,CARD_1:def 7;
then A12: ( f . ( i + 1 ) ) = x by A3,FUNCOP_1:7;
assume i is  odd;
i <= o by A3,A8,CARD_1:def 7;
then i in ( Seg o ) by A7;
then A13: ( f . i ) = x by A3,FUNCOP_1:7;
x in X by A4,A5,FINSEQ_2:11,FINSEQ_5:6;
hence thesis by A1,A12,A13,RELAT_2:def 1;
end;
hence thesis by A9;
end;
( len f ) in ( Seg o ) by A4,FINSEQ_5:6;
then ( f . ( len f ) ) = x by A3,FUNCOP_1:7;
hence thesis by A5,A6,CKB20:def 1;
end;
