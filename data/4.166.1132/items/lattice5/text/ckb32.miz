environ
vocabularies NUMBERS,FUNCT_1,FUNCOP_1,TARSKI,RELAT_1,FUNCT_6,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,ORDERS_2,LATTICE3,MSUALG_5,STRUCT_0,EQREL_1,PBOOLE,LATTICES,XXREAL_0,REWRITE1,SETFAM_1,RELAT_2,WAYBEL_0,GROUP_6,YELLOW_0,ORDINAL2,CAT_1,FINSEQ_1,ARYTM_3,ABIAN,FINSEQ_2,ARYTM_1,CARD_1,ORDINAL4,NAT_1,VALUED_0,FUNCT_2,MCART_1,PARTFUN1,LATTICE5;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,FUNCT_2,FUNCT_6,CARD_1,NUMBERS,XCMPLX_0,NAT_1,NAT_D,SETFAM_1,ORDINAL1,ORDINAL2,MCART_1,DOMAIN_1,PARTFUN1,FUNCOP_1,STRUCT_0,ORDERS_2,EQREL_1,MSUALG_5,FINSEQ_1,FINSEQ_2,SEQ_4,LATTICES,LATTICE3,BINOP_1,YELLOW_0,WAYBEL_0,YELLOW_2,ABIAN,XXREAL_0,CKB4,CKB13,CKB16,CKB18,CKB20,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB31;
definitions TARSKI,LATTICE3,FUNCOP_1,WAYBEL_0,XBOOLE_0,BINOP_1,FINSEQ_1,FINSEQ_2,CKB4,CKB13,CKB20,CKB23,CKB27,CKB28,CKB29;
theorems EQREL_1,RELAT_1,RELAT_2,FINSEQ_1,FINSEQ_2,MSUALG_5,ORDERS_2,TARSKI,ENUMSET1,ORDINAL1,ORDINAL3,WELLORD2,TREES_2,PARTFUN1,GRFUNC_1,FUNCT_6,MCART_1,FINSEQ_5,NAT_1,INT_1,BINOP_1,ZFMISC_1,FUNCT_1,FUNCT_2,FILTER_0,LATTICES,LATTICE3,YELLOW_0,YELLOW_2,YELLOW_3,YELLOW_5,WAYBEL_0,WAYBEL_1,WAYBEL_6,RELSET_1,CARD_1,FINSEQ_3,SETFAM_1,XBOOLE_0,XBOOLE_1,ORDERS_1,FUNCOP_1,XREAL_1,XXREAL_0,XXREAL_2,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB20,CKB21,CKB22,CKB23,CKB24,CKB27,CKB28,CKB29;
schemes DOMAIN_1,FUNCT_2,RELSET_1,RECDEF_1,ORDINAL2,NAT_1,FINSEQ_1,CLASSES1,BINOP_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,PARTFUN1,FUNCOP_1,XREAL_0,CARD_1,MEMBERED,FINSEQ_1,ABIAN,STRUCT_0,LATTICES,LATTICE3,YELLOW_0,YELLOW_1,RELAT_1,XXREAL_2,RELSET_1,FINSEQ_2,FUNCT_1,CKB5,CKB14,CKB15,CKB17,CKB19,CKB30;
constructors SETFAM_1,BINOP_1,DOMAIN_1,ORDINAL2,NAT_1,CLASSES1,SEQ_4,FINSOP_1,FUNCT_6,RFUNCT_3,BINARITH,ABIAN,LATTICE3,MSUALG_5,YELLOW_2,NAT_D,RELSET_1,CKB4,CKB20,CKB23,CKB26,CKB27,CKB28,CKB29;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve X for non  empty set;
reserve e for (Equivalence_Relation of X);
reserve x for set;
reserve y for set;
reserve A for non  empty set;
reserve L for  lower-bounded LATTICE;
definition
let A;
let L;
let d being (distance_function of A,L);
func alpha d -> (Function of L,( EqRelLATT A )) means 
:Def9: (for e being (Element of L) holds (ex E being (Equivalence_Relation of A) st (E = ( it . e ) & (for x,y being (Element of A) holds ([ x,y ] in E iff ( d . (x,y) ) <= e)))));
existence
proof
defpred X[ (Element of L),(Element of ( EqRelLATT A )) ]
 means
(ex E being (Equivalence_Relation of A) st (E = $2 & (for x,y being (Element of A) holds ([ x,y ] in E iff ( d . (x,y) ) <= $1))));
A1: (for e being (Element of L) holds (ex r being (Element of ( EqRelLATT A )) st X[ e,r ]))
proof
let e being (Element of L);
defpred X[ (Element of A),(Element of A) ]
 means
( d . ($1,$2) ) <= e;
consider E being (Relation of A,A) such that A2: (for x,y being (Element of A) holds ([ x,y ] in E iff X[ x,y ])) from RELSET_1:sch 2;
(for x,y being set holds (((x in A & y in A) & [ x,y ] in E) implies [ y,x ] in E))
proof
let x being set;
let y being set;
assume that
A3: x in A
and
A4: y in A
and
A5: [ x,y ] in E;
reconsider y9 = y as (Element of A) by A4;
reconsider x9 = x as (Element of A) by A3;
( d . (x9,y9) ) <= e by A2,A5;
then ( d . (y9,x9) ) <= e by CKB27:def 1;
hence thesis by A2;
end;
then A6: E is_symmetric_in A by RELAT_2:def 3;
(for x being set holds (x in A implies [ x,x ] in E))
proof
let x being set;
assume x in A;
then reconsider x9 = x as (Element of A);
( Bottom L ) <= e by YELLOW_0:44;
then ( d . (x9,x9) ) <= e by CKB28:def 1;
hence thesis by A2;
end;
then E is_reflexive_in A by RELAT_2:def 1;
then A7: (( dom E ) = A & ( field E ) = A) by ORDERS_1:13;
(for x,y,z being set holds (((((x in A & y in A) & z in A) & [ x,y ] in E) & [ y,z ] in E) implies [ x,z ] in E))
proof
let x being set;
let y being set;
let z being set;
assume that
A8: ((x in A & y in A) & z in A)
and
A9: ([ x,y ] in E & [ y,z ] in E);
reconsider x9 = x,y9 = y,z9 = z as (Element of A) by A8;
(( d . (x9,y9) ) <= e & ( d . (y9,z9) ) <= e) by A2,A9;
then A10: ( ( d . (x9,y9) ) "\/" ( d . (y9,z9) ) ) <= e by YELLOW_0:22;
( d . (x9,z9) ) <= ( ( d . (x9,y9) ) "\/" ( d . (y9,z9) ) ) by CKB29:def 1;
then ( d . (x9,z9) ) <= e by A10,ORDERS_2:3;
hence thesis by A2;
end;
then E is_transitive_in A by RELAT_2:def 8;
then reconsider E as (Equivalence_Relation of A) by A7,A6,PARTFUN1:def 2,RELAT_2:def 11,RELAT_2:def 16;
reconsider E as (Element of ( EqRelLATT A )) by CKB6:1;
(ex r being (Element of ( EqRelLATT A )) st r = E);
hence thesis by A2;
end;
(ex f being (Function of L,( EqRelLATT A )) st (for e being (Element of L) holds X[ e,( f . e ) ])) from FUNCT_2:sch 10(A1);
hence thesis;
end;
uniqueness
proof
let f1 being (Function of L,( EqRelLATT A ));
let f2 being (Function of L,( EqRelLATT A ));
assume that
A11: (for e being (Element of L) holds (ex E being (Equivalence_Relation of A) st (E = ( f1 . e ) & (for x,y being (Element of A) holds ([ x,y ] in E iff ( d . (x,y) ) <= e)))))
and
A12: (for e being (Element of L) holds (ex E being (Equivalence_Relation of A) st (E = ( f2 . e ) & (for x,y being (Element of A) holds ([ x,y ] in E iff ( d . (x,y) ) <= e)))));
reconsider f19 = f1,f29 = f2 as (Function of (the carrier of L),(the carrier of ( EqRelLATT A )));
(for e being (Element of L) holds ( f1 . e ) = ( f2 . e ))
proof
let e being (Element of L);
consider E1 being (Equivalence_Relation of A) such that A13: E1 = ( f1 . e ) and A14: (for x,y being (Element of A) holds ([ x,y ] in E1 iff ( d . (x,y) ) <= e)) by A11;
consider E2 being (Equivalence_Relation of A) such that A15: E2 = ( f2 . e ) and A16: (for x,y being (Element of A) holds ([ x,y ] in E2 iff ( d . (x,y) ) <= e)) by A12;
A17: (for x,y being (Element of A) holds ([ x,y ] in E1 iff [ x,y ] in E2))
proof
let x being (Element of A);
let y being (Element of A);
([ x,y ] in E1 iff ( d . (x,y) ) <= e) by A14;
hence thesis by A16;
end;
(for x,y being set holds ([ x,y ] in E1 iff [ x,y ] in E2))
proof
let x being set;
let y being set;
A18: ( field E1 ) = A by EQREL_1:9;
hereby
assume A19: [ x,y ] in E1;
then reconsider x9 = x,y9 = y as (Element of A) by A18,RELAT_1:15;
[ x9,y9 ] in E2 by A17,A19;
hence [ x,y ] in E2;
end;
assume A20: [ x,y ] in E2;
( field E2 ) = A by EQREL_1:9;
then reconsider x9 = x,y9 = y as (Element of A) by A20,RELAT_1:15;
[ x9,y9 ] in E1 by A17,A20;
hence thesis;
end;
hence thesis by A13,A15,RELAT_1:def 2;
end;
then (for e being set holds (e in (the carrier of L) implies ( f19 . e ) = ( f29 . e )));
hence f1 = f2 by FUNCT_2:12;
end;
end;
