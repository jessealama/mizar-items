environ
vocabularies NUMBERS,FUNCT_1,FUNCOP_1,TARSKI,RELAT_1,FUNCT_6,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,ORDERS_2,LATTICE3,MSUALG_5,STRUCT_0,EQREL_1,PBOOLE,LATTICES,XXREAL_0,REWRITE1,SETFAM_1,RELAT_2,WAYBEL_0,GROUP_6,YELLOW_0,ORDINAL2,CAT_1,FINSEQ_1,ARYTM_3,ABIAN,FINSEQ_2,ARYTM_1,CARD_1,ORDINAL4,NAT_1,VALUED_0,FUNCT_2,MCART_1,PARTFUN1,LATTICE5;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,FUNCT_2,FUNCT_6,CARD_1,NUMBERS,XCMPLX_0,NAT_1,NAT_D,SETFAM_1,ORDINAL1,ORDINAL2,MCART_1,DOMAIN_1,PARTFUN1,FUNCOP_1,STRUCT_0,ORDERS_2,EQREL_1,MSUALG_5,FINSEQ_1,FINSEQ_2,SEQ_4,LATTICES,LATTICE3,BINOP_1,YELLOW_0,WAYBEL_0,YELLOW_2,ABIAN,XXREAL_0,CKB4,CKB13,CKB16,CKB18,CKB20;
definitions TARSKI,LATTICE3,FUNCOP_1,WAYBEL_0,XBOOLE_0,BINOP_1,FINSEQ_1,FINSEQ_2,CKB4,CKB13,CKB20;
theorems EQREL_1,RELAT_1,RELAT_2,FINSEQ_1,FINSEQ_2,MSUALG_5,ORDERS_2,TARSKI,ENUMSET1,ORDINAL1,ORDINAL3,WELLORD2,TREES_2,PARTFUN1,GRFUNC_1,FUNCT_6,MCART_1,FINSEQ_5,NAT_1,INT_1,BINOP_1,ZFMISC_1,FUNCT_1,FUNCT_2,FILTER_0,LATTICES,LATTICE3,YELLOW_0,YELLOW_2,YELLOW_3,YELLOW_5,WAYBEL_0,WAYBEL_1,WAYBEL_6,RELSET_1,CARD_1,FINSEQ_3,SETFAM_1,XBOOLE_0,XBOOLE_1,ORDERS_1,FUNCOP_1,XREAL_1,XXREAL_0,XXREAL_2,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB20,CKB21,CKB22;
schemes DOMAIN_1,FUNCT_2,RELSET_1,RECDEF_1,ORDINAL2,NAT_1,FINSEQ_1,CLASSES1,BINOP_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,PARTFUN1,FUNCOP_1,XREAL_0,CARD_1,MEMBERED,FINSEQ_1,ABIAN,STRUCT_0,LATTICES,LATTICE3,YELLOW_0,YELLOW_1,RELAT_1,XXREAL_2,RELSET_1,FINSEQ_2,FUNCT_1,CKB5,CKB14,CKB15,CKB17,CKB19;
constructors SETFAM_1,BINOP_1,DOMAIN_1,ORDINAL2,NAT_1,CLASSES1,SEQ_4,FINSOP_1,FUNCT_6,RFUNCT_3,BINARITH,ABIAN,LATTICE3,MSUALG_5,YELLOW_2,NAT_D,RELSET_1,CKB4,CKB20;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve X for non  empty set;
reserve e for (Equivalence_Relation of X);
reserve e1 for (Equivalence_Relation of X);
reserve e2 for (Equivalence_Relation of X);
reserve e19 for (Equivalence_Relation of X);
reserve e29 for (Equivalence_Relation of X);
reserve x for set;
reserve y for set;
reserve x9 for set;
reserve y9 for set;
definition
let X;
let Y being (Sublattice of ( EqRelLATT X ));
given e such that
A1: e in (the carrier of Y)
and
A2: e <> ( id X );

given o being (Element of ( NAT )) such that
A3: (for e1 holds (for e2 holds (for x holds (for y holds (((e1 in (the carrier of Y) & e2 in (the carrier of Y)) & [ x,y ] in ( e1 "\/" e2 )) implies (ex F being non  empty (FinSequence of X) st (( len F ) = o & x,y are_joint_by F,e1,e2)))))));

func type_of Y -> (Element of ( NAT )) means 
:Def4: ((for e1 holds (for e2 holds (for x holds (for y holds (((e1 in (the carrier of Y) & e2 in (the carrier of Y)) & [ x,y ] in ( e1 "\/" e2 )) implies (ex F being non  empty (FinSequence of X) st (( len F ) = ( it + 2 ) & x,y are_joint_by F,e1,e2))))))) & (ex e1 st (ex e2 st (ex x st (ex y st (((e1 in (the carrier of Y) & e2 in (the carrier of Y)) & [ x,y ] in ( e1 "\/" e2 )) & (not (ex F being non  empty (FinSequence of X) st (( len F ) = ( it + 1 ) & x,y are_joint_by F,e1,e2)))))))));
existence
proof
defpred X[ (Element of ( NAT )) ]
 means
(for e1 holds (for e2 holds (for x holds (for y holds (((e1 in (the carrier of Y) & e2 in (the carrier of Y)) & [ x,y ] in ( e1 "\/" e2 )) implies (ex F being non  empty (FinSequence of X) st (( len F ) = ( $1 + 2 ) & x,y are_joint_by F,e1,e2)))))));
set A = { n where n is (Element of ( NAT )): X[ n ] };
consider e1,e2 such that A4: (e1 = e & e2 = e);
A5: ( field e ) = X by EQREL_1:9;
then ( id X ) c= e by RELAT_2:1;
then (not e c= ( id X )) by A2,XBOOLE_0:def 10;
then consider x,y such that A6: [ x,y ] in e and A7: (not [ x,y ] in ( id X )) by RELAT_1:def 3;
A8: ((not x in X) or x <> y) by A7,RELAT_1:def 10;
A9: [ x,y ] in ( e1 "\/" e2 ) by A6,A4;
then consider F being non  empty (FinSequence of X) such that A10: ( len F ) = o and A11: x,y are_joint_by F,e1,e2 by A1,A3,A4;
A12: (( F . 1 ) = x & ( F . ( len F ) ) = y) by A11,CKB20:def 1;
o >= 2
proof
assume (not thesis);
then ( len F ) < ( 1 + 1 ) by A10;
then (( 0 ) <= ( len F ) & ( len F ) <= ( ( 0 ) + 1 )) by NAT_1:2,NAT_1:13;
hence contradiction by A5,A6,A8,A12,NAT_1:9,RELAT_1:15;
end;
then consider o9 being Nat such that A13: o = ( 2 + o9 ) by NAT_1:10;
A14: A is (Subset of ( NAT )) from DOMAIN_1:sch 7;
o9 in ( NAT ) by ORDINAL1:def 12;
then consider k being (Element of ( NAT )) such that k = o9 and A15: (for e1 holds (for e2 holds (for x holds (for y holds (((e1 in (the carrier of Y) & e2 in (the carrier of Y)) & [ x,y ] in ( e1 "\/" e2 )) implies (ex F being non  empty (FinSequence of X) st (( len F ) = ( k + 2 ) & x,y are_joint_by F,e1,e2))))))) by A3,A13;
k in A by A15;
then reconsider A as non  empty (Subset of ( NAT )) by A14;
set m = ( min A );
A16: (ex e1 st (ex e2 st (ex x st (ex y st (((e1 in (the carrier of Y) & e2 in (the carrier of Y)) & [ x,y ] in ( e1 "\/" e2 )) & (not (ex F being non  empty (FinSequence of X) st (( len F ) = ( m + 1 ) & x,y are_joint_by F,e1,e2))))))))
proof
assume A17: (not thesis);
then consider F being non  empty (FinSequence of X) such that A18: ( len F ) = ( m + 1 ) and A19: x,y are_joint_by F,e1,e2 by A1,A4,A9;
A20: (( F . 1 ) = x & ( F . ( len F ) ) = y) by A19,CKB20:def 1;
( len F ) >= 2
proof
assume (not thesis);
then ( len F ) < ( 1 + 1 );
then (( 0 ) <= ( len F ) & ( len F ) <= ( ( 0 ) + 1 )) by NAT_1:2,NAT_1:13;
hence contradiction by A5,A6,A8,A20,NAT_1:9,RELAT_1:15;
end;
then ( m + 1 ) >= ( 1 + 1 ) by A18;
then A21: m >= 1 by XREAL_1:6;
then (( m + 1 ) = ( ( m - 1 ) + 2 ) & ( m - 1 ) = ( m -' 1 )) by XREAL_1:233;
then A22: ( m -' 1 ) in A by A17;
m < ( m + 1 ) by XREAL_1:29;
then A23: ( m - 1 ) < ( ( m + 1 ) - 1 ) by XREAL_1:9;
( m - 1 ) >= ( 0 ) by A21,XREAL_1:48;
then ( m -' 1 ) < m by A23,XREAL_0:def 2;
hence contradiction by A22,XXREAL_2:def 7;
end;
m in A by XXREAL_2:def 7;
then (ex m9 being (Element of ( NAT )) st (m9 = m & (for e1 holds (for e2 holds (for x holds (for y holds (((e1 in (the carrier of Y) & e2 in (the carrier of Y)) & [ x,y ] in ( e1 "\/" e2 )) implies (ex F being non  empty (FinSequence of X) st (( len F ) = ( m9 + 2 ) & x,y are_joint_by F,e1,e2)))))))));
hence thesis by A16;
end;
uniqueness
proof
let n1 being (Element of ( NAT ));
let n2 being (Element of ( NAT ));
assume A24: (for e1 holds (for e2 holds (for x holds (for y holds (((e1 in (the carrier of Y) & e2 in (the carrier of Y)) & [ x,y ] in ( e1 "\/" e2 )) implies (ex F being non  empty (FinSequence of X) st (( len F ) = ( n1 + 2 ) & x,y are_joint_by F,e1,e2)))))));
given e19,e29,x9,y9 such that
A25: ((e19 in (the carrier of Y) & e29 in (the carrier of Y)) & [ x9,y9 ] in ( e19 "\/" e29 ))
and
A26: (not (ex F being non  empty (FinSequence of X) st (( len F ) = ( n1 + 1 ) & x9,y9 are_joint_by F,e19,e29)));

assume (for e1 holds (for e2 holds (for x holds (for y holds (((e1 in (the carrier of Y) & e2 in (the carrier of Y)) & [ x,y ] in ( e1 "\/" e2 )) implies (ex F being non  empty (FinSequence of X) st (( len F ) = ( n2 + 2 ) & x,y are_joint_by F,e1,e2)))))));
then A27: (ex F2 being non  empty (FinSequence of X) st (( len F2 ) = ( n2 + 2 ) & x9,y9 are_joint_by F2,e19,e29)) by A25;
( field e29 ) = X by EQREL_1:9;
then A28: e29 is_reflexive_in X by RELAT_2:def 9;
( field e19 ) = X by EQREL_1:9;
then A29: e19 is_reflexive_in X by RELAT_2:def 9;
given e1,e2,x,y such that
A30: ((e1 in (the carrier of Y) & e2 in (the carrier of Y)) & [ x,y ] in ( e1 "\/" e2 ))
and
A31: (not (ex F being non  empty (FinSequence of X) st (( len F ) = ( n2 + 1 ) & x,y are_joint_by F,e1,e2)));

A32: (ex F1 being non  empty (FinSequence of X) st (( len F1 ) = ( n1 + 2 ) & x,y are_joint_by F1,e1,e2)) by A24,A30;
( field e2 ) = X by EQREL_1:9;
then A33: e2 is_reflexive_in X by RELAT_2:def 9;
( field e1 ) = X by EQREL_1:9;
then A34: e1 is_reflexive_in X by RELAT_2:def 9;
assume A35: (not thesis);
per cases  by A35,XXREAL_0:1;
suppose n1 < n2;

then ( n1 + 2 ) < ( n2 + ( 1 + 1 ) ) by XREAL_1:6;
then ( n1 + 2 ) < ( ( n2 + 1 ) + 1 );
then ( n1 + 2 ) <= ( n2 + 1 ) by NAT_1:13;
hence contradiction by A31,A32,A34,A33,CKB22:1;
end;
suppose n2 < n1;

then ( n2 + 2 ) < ( n1 + ( 1 + 1 ) ) by XREAL_1:6;
then ( n2 + 2 ) < ( ( n1 + 1 ) + 1 );
then ( n2 + 2 ) <= ( n1 + 1 ) by NAT_1:13;
hence contradiction by A26,A27,A29,A28,CKB22:1;
end;
end;
end;
