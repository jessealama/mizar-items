environ
vocabularies NUMBERS,NAT_1,INT_1,RELAT_1,ARYTM_3,CARD_1,XXREAL_0,SUBSET_1,ARYTM_1,INT_2,COMPLEX1,ORDINAL1,ZFMISC_1,XBOOLE_0,FINSET_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,CARD_1,FINSET_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,INT_1,INT_2,CKB1,CKB2,CKB3,CKB4,CKB7,CKB17,CKB18,CKB19,CKB20,CKB45;
definitions CKB1,CKB2,CKB7,CKB17,CKB19;
theorems ORDINAL1,XCMPLX_1,XREAL_1,XXREAL_0,NAT_1,INT_1,INT_2,ABSVALUE,XREAL_0,CARD_1,ZFMISC_1,COMPLEX1,XCMPLX_0,TARSKI,CKB1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB40,CKB41,CKB42,CKB43,CKB44,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78;
schemes NAT_1,CKB21,CKB39;
registrations XXREAL_0,XREAL_0,NAT_1,INT_1,ORDINAL1,XBOOLE_0,CARD_1,ZFMISC_1;
constructors XXREAL_0,NAT_1,INT_2,REAL_1,FINSET_1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB7,CKB18,CKB20,CKB45;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve a for  natural number;
reserve b for  natural number;
reserve n for  natural number;
theorem
(for n,a,b being Integer holds ( ( a * b ) mod n ) = ( ( ( a mod n ) * ( b mod n ) ) mod n ))
proof
let n being Integer;
let a being Integer;
let b being Integer;
per cases ;
suppose A1: n = ( 0 );

hence ( ( a * b ) mod n ) = ( 0 ) by INT_1:def 10
.= ( ( ( a mod n ) * ( b mod n ) ) mod n ) by A1,INT_1:def 10;
end;
suppose n <> ( 0 );

then (( ( a mod n ) + ( ( a div n ) * n ) ) = ( ( a - ( ( a div n ) * n ) ) + ( ( a div n ) * n ) ) & ( ( b mod n ) + ( ( b div n ) * n ) ) = ( ( b - ( ( b div n ) * n ) ) + ( ( b div n ) * n ) )) by INT_1:def 10;
then ( ( a * b ) - ( ( a mod n ) * ( b mod n ) ) ) = ( ( ( ( a mod n ) * ( b div n ) ) + ( ( ( a div n ) * ( b mod n ) ) + ( ( ( a div n ) * n ) * ( b div n ) ) ) ) * n );
then n divides ( ( a * b ) - ( ( a mod n ) * ( b mod n ) ) ) by INT_1:def 3;
then ( a * b ),( ( a mod n ) * ( b mod n ) ) are_congruent_mod n by INT_2:15;
hence thesis by CKB76:1;
end;
end;
