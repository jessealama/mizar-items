environ
vocabularies NUMBERS,NAT_1,INT_1,RELAT_1,ARYTM_3,CARD_1,XXREAL_0,SUBSET_1,ARYTM_1,INT_2,COMPLEX1,ORDINAL1,ZFMISC_1,XBOOLE_0,FINSET_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,CARD_1,FINSET_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,INT_1,INT_2,CKB1,CKB2,CKB3,CKB4,CKB7,CKB17,CKB18;
definitions CKB1,CKB2,CKB7,CKB17;
theorems ORDINAL1,XCMPLX_1,XREAL_1,XXREAL_0,NAT_1,INT_1,INT_2,ABSVALUE,XREAL_0,CARD_1,ZFMISC_1,COMPLEX1,XCMPLX_0,TARSKI,CKB1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes NAT_1;
registrations XXREAL_0,XREAL_0,NAT_1,INT_1,ORDINAL1,XBOOLE_0,CARD_1,ZFMISC_1;
constructors XXREAL_0,NAT_1,INT_2,REAL_1,FINSET_1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB7,CKB18;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for Nat;
reserve m for Nat;
reserve n for Nat;
reserve i for Nat;
definition
let k being Nat;
let n being Nat;
redefine func k gcd n means 
:Def5: ((it divides k & it divides n) & (for m being Nat holds ((m divides k & m divides n) implies m divides it)));
compatibility
proof
let IT being Nat;
thus (IT = ( k gcd n ) implies ((IT divides k & IT divides n) & (for m being Nat holds ((m divides k & m divides n) implies m divides IT)))) by INT_2:def 2;
assume that
A1: IT divides k
and
A2: IT divides n
and
A3: (for m being Nat holds ((m divides k & m divides n) implies m divides IT));
(for m being Integer holds ((m divides k & m divides n) implies m divides IT))
proof
let m being Integer;
m in ( INT ) by INT_1:def 2;
then consider i being (Element of ( NAT )) such that A4: (m = i or m = ( - i )) by INT_1:def 1;
assume that
A5: m divides k
and
A6: m divides n;
A7: i divides k by A4,A5,INT_2:10;
i divides n by A4,A6,INT_2:10;
then i divides IT by A3,A7;
hence thesis by A4,INT_2:10;
end;
hence thesis by A1,A2,INT_2:def 2;
end;
end;
