environ
vocabularies MYCIELSK,FINSET_1,DILWORTH,CARD_1,ARYTM_3,ARYTM_1,FUNCT_1,RELAT_1,RELAT_2,YELLOW_0,TARSKI,EQREL_1,CIRCUIT2,SUBSET_1,COMBGRAS,NECKLACE,NEWTON,XREAL_0,XXREAL_0,ORDINAL1,NAT_1,XBOOLE_0,ORDERS_2,STRUCT_0,ZFMISC_1,FUNCT_2,NUMBERS;
notations TARSKI,XBOOLE_0,ZFMISC_1,FINSET_1,CARD_1,SUBSET_1,STRUCT_0,ORDINAL1,ORDERS_2,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,NAT_D,RELAT_1,RELSET_1,RELAT_2,PARTFUN1,EQREL_1,FUNCT_1,FUNCT_2,NEWTON,YELLOW_0,NECKLACE,DILWORTH,NUMBERS,CKB8,CKB14,CKB19,CKB22,CKB27;
definitions STRUCT_0,XREAL_0,TARSKI,XBOOLE_0,RELAT_2,FUNCT_1,DILWORTH,NECKLACE,SUBSET_1,EQREL_1,ORDERS_2,CKB8,CKB14,CKB19,CKB22,CKB27;
theorems NEWTON,NAT_1,NAT_D,XREAL_0,XREAL_1,XXREAL_0,ORDINAL1,FUNCT_1,DILWORTH,XBOOLE_0,XBOOLE_1,TARSKI,NECKLACE,PENCIL_1,ZFMISC_1,ORDERS_2,EULER_1,CARD_2,CARD_1,YELLOW_0,RELSET_1,EQREL_1,FUNCT_2,RELAT_1,FINSET_1,FINSEQ_4,RELAT_2,SUBSET_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14,CKB19,CKB22,CKB27,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36;
schemes RECDEF_1,NAT_1,CLASSES1,PRE_CIRC,FUNCT_1,FUNCT_2,DILWORTH;
registrations SUBSET_1,XBOOLE_0,STRUCT_0,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,CARD_1,RELSET_1,PARTFUN1,ZFMISC_1,ORDINAL1,EQREL_1,NECKLA_3,RELAT_1,FUNCT_1,FUNCT_2,FINSET_1,DILWORTH,NUMBERS,NEWTON,NECKLACE,YELLOW_0,YELLOW14,ORDERS_2,CKB9,CKB10,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29;
constructors STRUCT_0,NECKLACE,NECKLA_3,RELSET_1,SETFAM_1,XXREAL_0,NAT_1,NAT_D,FUNCT_2,NEWTON,YELLOW_0,DILWORTH,DOMAIN_1,CKB8,CKB14,CKB19,CKB22,CKB27;
requirements SUBSET,BOOLE,NUMERALS,ARITHM,REAL;
begin
theorem
Th18: (for R being RelStr holds (for x,y being (Element of R) holds (for a,b being (Element of ( ComplRelStr R )) holds (((((x = a & y = b) & x <> y) & x in (the carrier of R)) & (not a <= b)) implies x <= y))))
proof
let R being RelStr;
let x being (Element of R);
let y being (Element of R);
let a being (Element of ( ComplRelStr R ));
let b being (Element of ( ComplRelStr R ));
assume that
A1: x = a
and
A2: y = b
and
A3: x <> y
and
A4: x in (the carrier of R);
set cR = (the carrier of R);
set iR = (the InternalRel of R);
set CR = ( ComplRelStr R );
set iCR = (the InternalRel of CR);
A5: iCR = ( ( iR ` ) \ ( id cR ) ) by NECKLACE:def 8;
A6: [ x,y ] in [: cR,cR :] by A4,ZFMISC_1:def 2;
assume (not a <= b);
then A7: (not [ x,y ] in iCR) by A1,A2,ORDERS_2:def 5;
(not [ x,y ] in ( id cR )) by A3,RELAT_1:def 10;
then (not [ x,y ] in ( iR ` )) by A5,A7,XBOOLE_0:def 5;
then [ x,y ] in iR by A6,XBOOLE_0:def 5;
hence x <= y by ORDERS_2:def 5;
end;
