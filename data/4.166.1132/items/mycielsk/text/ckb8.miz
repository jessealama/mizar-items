environ
vocabularies MYCIELSK,FINSET_1,DILWORTH,CARD_1,ARYTM_3,ARYTM_1,FUNCT_1,RELAT_1,RELAT_2,YELLOW_0,TARSKI,EQREL_1,CIRCUIT2,SUBSET_1,COMBGRAS,NECKLACE,NEWTON,XREAL_0,XXREAL_0,ORDINAL1,NAT_1,XBOOLE_0,ORDERS_2,STRUCT_0,ZFMISC_1,FUNCT_2,NUMBERS;
notations TARSKI,XBOOLE_0,ZFMISC_1,FINSET_1,CARD_1,SUBSET_1,STRUCT_0,ORDINAL1,ORDERS_2,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,NAT_D,RELAT_1,RELSET_1,RELAT_2,PARTFUN1,EQREL_1,FUNCT_1,FUNCT_2,NEWTON,YELLOW_0,NECKLACE,DILWORTH,NUMBERS;
definitions STRUCT_0,XREAL_0,TARSKI,XBOOLE_0,RELAT_2,FUNCT_1,DILWORTH,NECKLACE,SUBSET_1,EQREL_1,ORDERS_2;
theorems NEWTON,NAT_1,NAT_D,XREAL_0,XREAL_1,XXREAL_0,ORDINAL1,FUNCT_1,DILWORTH,XBOOLE_0,XBOOLE_1,TARSKI,NECKLACE,PENCIL_1,ZFMISC_1,ORDERS_2,EULER_1,CARD_2,CARD_1,YELLOW_0,RELSET_1,EQREL_1,FUNCT_2,RELAT_1,FINSET_1,FINSEQ_4,RELAT_2,SUBSET_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7;
schemes RECDEF_1,NAT_1,CLASSES1,PRE_CIRC,FUNCT_1,FUNCT_2,DILWORTH;
registrations SUBSET_1,XBOOLE_0,STRUCT_0,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,CARD_1,RELSET_1,PARTFUN1,ZFMISC_1,ORDINAL1,EQREL_1,NECKLA_3,RELAT_1,FUNCT_1,FUNCT_2,FINSET_1,DILWORTH,NUMBERS,NEWTON,NECKLACE,YELLOW_0,YELLOW14,ORDERS_2;
constructors STRUCT_0,NECKLACE,NECKLA_3,RELSET_1,SETFAM_1,XXREAL_0,NAT_1,NAT_D,FUNCT_2,NEWTON,YELLOW_0,DILWORTH,DOMAIN_1;
requirements SUBSET,BOOLE,NUMERALS,ARITHM,REAL;
begin
definition
let X being set;
let P being (a_partition of X);
let S being (Subset of X);
func P | S -> (a_partition of S) equals 
{ ( x /\ S ) where x is (Element of P): x meets S };
coherence
proof
set D = { ( x /\ S ) where x is (Element of P): x meets S };
A1: D c= ( bool S )
proof
let a being set;
assume a in D;
then consider x being (Element of P) such that A2: a = ( x /\ S ) and x meets S;
a c= S by A2,XBOOLE_1:17;
hence thesis;
end;
A3: ( union D ) = S
proof
thus ( union D ) c= S
proof
let x being set;
assume x in ( union D );
then consider Y being set such that A4: x in Y and A5: Y in D by TARSKI:def 4;
thus x in S by A4,A1,A5;
end;

thus S c= ( union D )
proof
let s being set;
assume A6: s in S;
then s in X;
then s in ( union P ) by EQREL_1:def 4;
then consider p being set such that A7: s in p and A8: p in P by TARSKI:def 4;
p meets S by A7,A6,XBOOLE_0:3;
then A9: ( p /\ S ) in D by A8;
s in ( p /\ S ) by A7,A6,XBOOLE_0:def 4;
hence s in ( union D ) by A9,TARSKI:def 4;
end;

end;
now
let A being (Subset of S);
assume A in D;
then consider x being (Element of P) such that A10: A = ( x /\ S ) and A11: x meets S;
consider z being set such that A12: z in x and A13: z in S by A11,XBOOLE_0:3;
reconsider Xp1 = X as non  empty set by A13;
reconsider Pp1 = P as (a_partition of Xp1);
thus A <> ( {} ) by A12,A13,A10,XBOOLE_0:def 4;
let B being (Subset of S);
assume B in D;
then consider y being (Element of P) such that A14: B = ( y /\ S ) and y meets S;
A15: (x in Pp1 & y in Pp1);
per cases  by A15,EQREL_1:def 4;
suppose x = y;

hence (A = B or A misses B) by A10,A14;
end;
suppose x misses y;

hence (A = B or A misses B) by A10,A14,XBOOLE_1:76;
end;
end;
hence thesis by A1,A3,EQREL_1:def 4;
end;
end;
