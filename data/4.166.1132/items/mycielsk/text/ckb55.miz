environ
vocabularies MYCIELSK,FINSET_1,DILWORTH,CARD_1,ARYTM_3,ARYTM_1,FUNCT_1,RELAT_1,RELAT_2,YELLOW_0,TARSKI,EQREL_1,CIRCUIT2,SUBSET_1,COMBGRAS,NECKLACE,NEWTON,XREAL_0,XXREAL_0,ORDINAL1,NAT_1,XBOOLE_0,ORDERS_2,STRUCT_0,ZFMISC_1,FUNCT_2,NUMBERS;
notations TARSKI,XBOOLE_0,ZFMISC_1,FINSET_1,CARD_1,SUBSET_1,STRUCT_0,ORDINAL1,ORDERS_2,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,NAT_D,RELAT_1,RELSET_1,RELAT_2,PARTFUN1,EQREL_1,FUNCT_1,FUNCT_2,NEWTON,YELLOW_0,NECKLACE,DILWORTH,NUMBERS,CKB8,CKB14,CKB19,CKB22,CKB27;
definitions STRUCT_0,XREAL_0,TARSKI,XBOOLE_0,RELAT_2,FUNCT_1,DILWORTH,NECKLACE,SUBSET_1,EQREL_1,ORDERS_2,CKB8,CKB14,CKB19,CKB22,CKB27;
theorems NEWTON,NAT_1,NAT_D,XREAL_0,XREAL_1,XXREAL_0,ORDINAL1,FUNCT_1,DILWORTH,XBOOLE_0,XBOOLE_1,TARSKI,NECKLACE,PENCIL_1,ZFMISC_1,ORDERS_2,EULER_1,CARD_2,CARD_1,YELLOW_0,RELSET_1,EQREL_1,FUNCT_2,RELAT_1,FINSET_1,FINSEQ_4,RELAT_2,SUBSET_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14,CKB19,CKB22,CKB27,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB39,CKB40,CKB41,CKB42,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB53,CKB54;
schemes RECDEF_1,NAT_1,CLASSES1,PRE_CIRC,FUNCT_1,FUNCT_2,DILWORTH;
registrations SUBSET_1,XBOOLE_0,STRUCT_0,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,CARD_1,RELSET_1,PARTFUN1,ZFMISC_1,ORDINAL1,EQREL_1,NECKLA_3,RELAT_1,FUNCT_1,FUNCT_2,FINSET_1,DILWORTH,NUMBERS,NEWTON,NECKLACE,YELLOW_0,YELLOW14,ORDERS_2,CKB9,CKB10,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29,CKB38,CKB43,CKB44,CKB51,CKB52;
constructors STRUCT_0,NECKLACE,NECKLA_3,RELSET_1,SETFAM_1,XXREAL_0,NAT_1,NAT_D,FUNCT_2,NEWTON,YELLOW_0,DILWORTH,DOMAIN_1,CKB8,CKB14,CKB19,CKB22,CKB27;
requirements SUBSET,BOOLE,NUMERALS,ARITHM,REAL;
begin
definition
let R being RelStr;
let v being (Element of R);
func Adjacent v -> (Subset of R) means 
:Def6: (for x being (Element of R) holds (x in it iff (x < v or v < x)));
existence
proof
set D = { x where x is (Element of R): (x < v or v < x) };
set cR = (the carrier of R);
set iR = (the InternalRel of R);
D c= (the carrier of R)
proof
let x being set;
assume x in D;
then consider a being (Element of R) such that A1: x = a and A2: (a < v or v < a);
per cases  by A2;
suppose a < v;

then a <= v by ORDERS_2:def 6;
then [ a,v ] in iR by ORDERS_2:def 5;
then [ a,v ] in [: cR,cR :];
hence x in (the carrier of R) by A1,ZFMISC_1:87;
end;
suppose v < a;

then v <= a by ORDERS_2:def 6;
then [ v,a ] in iR by ORDERS_2:def 5;
then [ v,a ] in [: cR,cR :];
hence x in (the carrier of R) by A1,ZFMISC_1:87;
end;
end;
then reconsider D as (Subset of R);
take D;
let x being (Element of R);
hereby
assume x in D;
then consider a being (Element of R) such that A3: x = a and A4: (a < v or v < a);
thus (x < v or v < x) by A3,A4;
end;
assume (x < v or v < x);
hence x in D;
end;
uniqueness
proof
let it1 being (Subset of R);
let it2 being (Subset of R);
assume that
A5: (for x being (Element of R) holds (x in it1 iff (x < v or v < x)))
and
A6: (for x being (Element of R) holds (x in it2 iff (x < v or v < x)));
hereby
let x being set;
assume A7: x in it1;
then reconsider xp1 = x as (Element of R);
(xp1 < v or v < xp1) by A5,A7;
hence x in it2 by A6;
end;
let x being set;
assume A8: x in it2;
then reconsider xp1 = x as (Element of R);
(xp1 < v or v < xp1) by A6,A8;
hence x in it1 by A5;
end;
end;
