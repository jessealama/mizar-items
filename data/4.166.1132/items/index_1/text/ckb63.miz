environ
vocabularies XBOOLE_0,RELAT_1,PBOOLE,SUBSET_1,CAT_5,CAT_1,MCART_1,GRCAT_1,GRAPH_1,STRUCT_0,FUNCT_1,FUNCOP_1,PARTFUN1,ZFMISC_1,ARYTM_0,TARSKI,GROUP_6,CAT_2,FUNCT_3,INDEX_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,PARTFUN1,PBOOLE,FUNCOP_1,STRUCT_0,GRAPH_1,CAT_1,CAT_2,OPPCAT_1,CAT_5,CKB2,CKB5,CKB8,CKB9,CKB13,CKB15,CKB16,CKB22,CKB23,CKB30,CKB31,CKB36,CKB37,CKB39,CKB40,CKB43,CKB44,CKB46,CKB47,CKB48,CKB54,CKB59,CKB61,CKB62;
definitions TARSKI,FUNCT_1,PBOOLE,CAT_5,FUNCOP_1,CAT_1,BINOP_1,GRAPH_1,CKB5,CKB15,CKB16,CKB22,CKB30,CKB31,CKB37,CKB40,CKB44,CKB46,CKB54,CKB59,CKB61,CKB62;
theorems MCART_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,PARTFUN1,FUNCT_4,CAT_1,CAT_2,OPPCAT_1,CAT_5,RELSET_1,CKB3,CKB4,CKB5,CKB15,CKB16,CKB21,CKB22,CKB30,CKB31,CKB37,CKB40,CKB41,CKB42,CKB44,CKB46,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62;
schemes CLASSES1,PBOOLE,CAT_5,CKB38;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCOP_1,PBOOLE,CAT_2,CAT_5,STRUCT_0,RELSET_1,PRE_CIRC,CKB1,CKB6,CKB7,CKB10,CKB11,CKB12,CKB14,CKB17,CKB18,CKB19,CKB20,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB32,CKB33,CKB34,CKB35,CKB45;
constructors PARTFUN1,DOMAIN_1,OPPCAT_1,CAT_5,RELSET_1,PBOOLE,CKB2,CKB5,CKB13,CKB15,CKB16,CKB22,CKB23,CKB30,CKB31,CKB36,CKB37,CKB39,CKB40,CKB43,CKB44,CKB46,CKB54,CKB59,CKB61,CKB62;
requirements SUBSET,BOOLE;
begin
Lm3:now
let C being Category;
let D being Category;
set F = ( (the carrier of C) --> D );
set G = ( (the carrier' of C) --> ( id D ) );
set H = [ F,G ];
let m being (Morphism of C);
( dom ( ( H `1 ) * (the Source of C) ) ) = (the carrier' of C) by PARTFUN1:def 2;
then A1: ( ( ( H `1 ) * (the Source of C) ) . m ) = ( ( H `1 ) . ( (the Source of C) . m ) ) by FUNCT_1:12
.= ( F . ( (the Source of C) . m ) ) by MCART_1:7
.= D by FUNCOP_1:7;
( dom ( ( H `1 ) * (the Target of C) ) ) = (the carrier' of C) by PARTFUN1:def 2;
then A2: ( ( ( H `1 ) * (the Target of C) ) . m ) = ( ( H `1 ) . ( (the Target of C) . m ) ) by FUNCT_1:12
.= ( F . ( (the Target of C) . m ) ) by MCART_1:7
.= D by FUNCOP_1:7;
( ( H `2 ) . m ) = ( G . m ) by MCART_1:7
.= ( id D ) by FUNCOP_1:7;
hence ( ( H `2 ) . m ) is (Functor of ( ( ( H `1 ) * (the Source of C) ) . m ),( ( ( H `1 ) * (the Target of C) ) . m )) by A1,A2;
end;
Lm4:now
let C being Category;
let D being Category;
set F = ( (the carrier of C) --> D );
set G = ( (the carrier' of C) --> ( id D ) );
set H = [ F,G ];
let m being (Morphism of C);
( dom ( ( H `1 ) * (the Source of C) ) ) = (the carrier' of C) by PARTFUN1:def 2;
then A1: ( ( ( H `1 ) * (the Source of C) ) . m ) = ( ( H `1 ) . ( (the Source of C) . m ) ) by FUNCT_1:12
.= ( F . ( (the Source of C) . m ) ) by MCART_1:7
.= D by FUNCOP_1:7;
( dom ( ( H `1 ) * (the Target of C) ) ) = (the carrier' of C) by PARTFUN1:def 2;
then A2: ( ( ( H `1 ) * (the Target of C) ) . m ) = ( ( H `1 ) . ( (the Target of C) . m ) ) by FUNCT_1:12
.= ( F . ( (the Target of C) . m ) ) by MCART_1:7
.= D by FUNCOP_1:7;
( ( H `2 ) . m ) = ( G . m ) by MCART_1:7
.= ( id D ) by FUNCOP_1:7;
hence ( ( H `2 ) . m ) is (Functor of ( ( ( H `1 ) * (the Target of C) ) . m ),( ( ( H `1 ) * (the Source of C) ) . m )) by A1,A2;
end;
theorem
(for C,D being Category holds ([ ( (the carrier of C) --> D ),( (the carrier' of C) --> ( id D ) ) ] is (Indexing of C) & [ ( (the carrier of C) --> D ),( (the carrier' of C) --> ( id D ) ) ] is (coIndexing of C)))
proof
let C being Category;
let D being Category;
set H = [ ( (the carrier of C) --> D ),( (the carrier' of C) --> ( id D ) ) ];
set I = H;
A1: ( H `2 ) = ( (the carrier' of C) --> ( id D ) ) by MCART_1:7;
A2: ( H `1 ) = ( (the carrier of C) --> D ) by MCART_1:7;
A3:now
let a being (Object of C);
thus ( ( H `2 ) . ( id a ) ) = ( id D ) by A1,FUNCOP_1:7
.= ( id ( ( H `1 ) . a ) ) by A2,FUNCOP_1:7;
end;
(for m being (Morphism of C) holds ( ( H `2 ) . m ) is (Functor of ( ( ( H `1 ) * (the Source of C) ) . m ),( ( ( H `1 ) * (the Target of C) ) . m ))) by Lm3;
then ( H `2 ) is (ManySortedFunctor of ( ( H `1 ) * (the Source of C) ),( ( H `1 ) * (the Target of C) )) by CKB37:def 1;
then reconsider H as (Indexing of (the Source of C),(the Target of C)) by CKB40:def 1;
now
let m1 being (Morphism of C);
let m2 being (Morphism of C);
assume ( dom m2 ) = ( cod m1 );
A4: ( ( H `2 ) . m1 ) = ( id D ) by A1,FUNCOP_1:7;
(( ( H `2 ) . ( m2 * m1 ) ) = ( id D ) & ( ( H `2 ) . m2 ) = ( id D )) by A1,FUNCOP_1:7;
hence ( ( H `2 ) . ( m2 * m1 ) ) = ( ( ( H `2 ) . m2 ) * ( ( H `2 ) . m1 ) ) by A4,FUNCT_2:17;
end;
hence I is (Indexing of C) by A3,CKB49:1;
(for m being (Morphism of C) holds ( ( H `2 ) . m ) is (Functor of ( ( ( H `1 ) * (the Target of C) ) . m ),( ( ( H `1 ) * (the Source of C) ) . m ))) by Lm4;
then ( H `2 ) is (ManySortedFunctor of ( ( H `1 ) * (the Target of C) ),( ( H `1 ) * (the Source of C) )) by CKB37:def 1;
then reconsider H as (Indexing of (the Target of C),(the Source of C)) by CKB40:def 1;
now
let m1 being (Morphism of C);
let m2 being (Morphism of C);
assume ( dom m2 ) = ( cod m1 );
A5: ( ( H `2 ) . m1 ) = ( id D ) by A1,FUNCOP_1:7;
(( ( H `2 ) . ( m2 * m1 ) ) = ( id D ) & ( ( H `2 ) . m2 ) = ( id D )) by A1,FUNCOP_1:7;
hence ( ( H `2 ) . ( m2 * m1 ) ) = ( ( ( H `2 ) . m1 ) * ( ( H `2 ) . m2 ) ) by A5,FUNCT_2:17;
end;
hence thesis by A3,CKB50:1;
end;
