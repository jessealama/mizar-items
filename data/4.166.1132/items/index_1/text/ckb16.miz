environ
vocabularies XBOOLE_0,RELAT_1,PBOOLE,SUBSET_1,CAT_5,CAT_1,MCART_1,GRCAT_1,GRAPH_1,STRUCT_0,FUNCT_1,FUNCOP_1,PARTFUN1,ZFMISC_1,ARYTM_0,TARSKI,GROUP_6,CAT_2,FUNCT_3,INDEX_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,PARTFUN1,PBOOLE,FUNCOP_1,STRUCT_0,GRAPH_1,CAT_1,CAT_2,OPPCAT_1,CAT_5,CKB2,CKB5,CKB8,CKB9,CKB13,CKB15;
definitions TARSKI,FUNCT_1,PBOOLE,CAT_5,FUNCOP_1,CAT_1,BINOP_1,GRAPH_1,CKB5,CKB15;
theorems MCART_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,PARTFUN1,FUNCT_4,CAT_1,CAT_2,OPPCAT_1,CAT_5,RELSET_1,CKB3,CKB4,CKB5,CKB15;
schemes CLASSES1,PBOOLE,CAT_5;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCOP_1,PBOOLE,CAT_2,CAT_5,STRUCT_0,RELSET_1,PRE_CIRC,CKB1,CKB6,CKB7,CKB10,CKB11,CKB12,CKB14;
constructors PARTFUN1,DOMAIN_1,OPPCAT_1,CAT_5,RELSET_1,PBOOLE,CKB2,CKB5,CKB13,CKB15;
requirements SUBSET,BOOLE;
begin
definition
let F being  Category-yielding Function;
func Mphs F ->  non-empty Function means 
:Def3: (( dom it ) = ( dom F ) & (for x being set holds (x in ( dom F ) implies (for C being Category holds (C = ( F . x ) implies ( it . x ) = (the carrier' of C))))));
existence
proof
defpred P[ set,set ]
 means
(for C being Category holds (C = ( F . $1 ) implies $2 = (the carrier' of C)));
A9:now
let x being set;
assume x in ( dom F );
then reconsider C = ( F . x ) as Category by CKB5:def 1;
reconsider y = (the carrier' of C) as set;
take y;
thus P[ x,y ];
end;
consider f being Function such that A10: (( dom f ) = ( dom F ) & (for x being set holds (x in ( dom F ) implies P[ x,( f . x ) ]))) from CLASSES1:sch 1(A9);
f is  non-empty
proof
let x being set;
assume A11: x in ( dom f );
then reconsider C = ( F . x ) as Category by A10,CKB5:def 1;
( f . x ) = (the carrier' of C) by A10,A11;
hence thesis;
end;
hence thesis by A10;
end;
uniqueness
proof
let f1 being  non-empty Function;
let f2 being  non-empty Function;
assume that
A12: ( dom f1 ) = ( dom F )
and
A13: (for x being set holds (x in ( dom F ) implies (for C being Category holds (C = ( F . x ) implies ( f1 . x ) = (the carrier' of C)))))
and
A14: ( dom f2 ) = ( dom F )
and
A15: (for x being set holds (x in ( dom F ) implies (for C being Category holds (C = ( F . x ) implies ( f2 . x ) = (the carrier' of C)))));
now
let x being set;
assume A16: x in ( dom F );
then reconsider C = ( F . x ) as Category by CKB5:def 1;
thus ( f1 . x ) = (the carrier' of C) by A13,A16
.= ( f2 . x ) by A15,A16;
end;
hence thesis by A12,A14,FUNCT_1:2;
end;
end;
