environ
vocabularies XBOOLE_0,RELAT_1,PBOOLE,SUBSET_1,CAT_5,CAT_1,MCART_1,GRCAT_1,GRAPH_1,STRUCT_0,FUNCT_1,FUNCOP_1,PARTFUN1,ZFMISC_1,ARYTM_0,TARSKI,GROUP_6,CAT_2,FUNCT_3,INDEX_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,PARTFUN1,PBOOLE,FUNCOP_1,STRUCT_0,GRAPH_1,CAT_1,CAT_2,OPPCAT_1,CAT_5,CKB2,CKB5,CKB8,CKB9,CKB13,CKB15,CKB16,CKB22,CKB23,CKB30,CKB31,CKB36,CKB37,CKB39,CKB40,CKB43,CKB44,CKB46,CKB47,CKB48;
definitions TARSKI,FUNCT_1,PBOOLE,CAT_5,FUNCOP_1,CAT_1,BINOP_1,GRAPH_1,CKB5,CKB15,CKB16,CKB22,CKB30,CKB31,CKB37,CKB40,CKB44,CKB46;
theorems MCART_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,PARTFUN1,FUNCT_4,CAT_1,CAT_2,OPPCAT_1,CAT_5,RELSET_1,CKB3,CKB4,CKB5,CKB15,CKB16,CKB21,CKB22,CKB30,CKB31,CKB37,CKB40,CKB41,CKB42,CKB44,CKB46,CKB49;
schemes CLASSES1,PBOOLE,CAT_5,CKB38;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCOP_1,PBOOLE,CAT_2,CAT_5,STRUCT_0,RELSET_1,PRE_CIRC,CKB1,CKB6,CKB7,CKB10,CKB11,CKB12,CKB14,CKB17,CKB18,CKB19,CKB20,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB32,CKB33,CKB34,CKB35,CKB45;
constructors PARTFUN1,DOMAIN_1,OPPCAT_1,CAT_5,RELSET_1,PBOOLE,CKB2,CKB5,CKB13,CKB15,CKB16,CKB22,CKB23,CKB30,CKB31,CKB36,CKB37,CKB39,CKB40,CKB43,CKB44,CKB46;
requirements SUBSET,BOOLE;
begin
theorem
Th7: (for C being Category holds (for I being (Indexing of (the Target of C),(the Source of C)) holds (I is (coIndexing of C) iff ((for a being (Object of C) holds ( ( I `2 ) . ( id a ) ) = ( id ( ( I `1 ) . a ) )) & (for m1,m2 being (Morphism of C) holds (( dom m2 ) = ( cod m1 ) implies ( ( I `2 ) . ( m2 * m1 ) ) = ( ( ( I `2 ) . m1 ) * ( ( I `2 ) . m2 ) )))))))
proof
let C being Category;
let I being (Indexing of (the Target of C),(the Source of C));
A1: ( C opp ) = CatStr (# (the carrier of C),(the carrier' of C),(the Target of C),(the Source of C),( ~ (the Comp of C) ),(the Id of C) #) by OPPCAT_1:def 1;
hereby
assume A2: I is (coIndexing of C);
hence (for a being (Object of C) holds ( ( I `2 ) . ( id a ) ) = ( id ( ( I `1 ) . a ) )) by A1,CKB46:def 1;
let m1 being (Morphism of C);
let m2 being (Morphism of C);
assume A3: ( dom m2 ) = ( cod m1 );
then A4: [ m2,m1 ] in ( dom (the Comp of C) ) by CAT_1:15;
( ( I `2 ) . ( ( ~ (the Comp of C) ) . (m1,m2) ) ) = ( ( ( I `2 ) . m1 ) * ( ( I `2 ) . m2 ) ) by A1,A2,A3,CKB46:def 1;
then ( ( I `2 ) . ( (the Comp of C) . (m2,m1) ) ) = ( ( ( I `2 ) . m1 ) * ( ( I `2 ) . m2 ) ) by A4,FUNCT_4:def 2;
hence ( ( I `2 ) . ( m2 * m1 ) ) = ( ( ( I `2 ) . m1 ) * ( ( I `2 ) . m2 ) ) by A3,CAT_1:16;
end;
assume that
A5: (for a being (Object of C) holds ( ( I `2 ) . ( id a ) ) = ( id ( ( I `1 ) . a ) ))
and
A6: (for m1,m2 being (Morphism of C) holds (( dom m2 ) = ( cod m1 ) implies ( ( I `2 ) . ( m2 * m1 ) ) = ( ( ( I `2 ) . m1 ) * ( ( I `2 ) . m2 ) )));
thus (ex D being Category st D = CatStr (# (the carrier of C),(the carrier' of C),(the Target of C),(the Source of C),( ~ (the Comp of C) ),(the Id of C) #)) by A1;
hereby
let a being (Object of C);
thus ( ( I `2 ) . ( (the Id of C) . a ) ) = ( ( I `2 ) . ( id a ) )
.= ( id ( ( I `1 ) . a ) ) by A5;
end;
let m1 being (Morphism of C);
let m2 being (Morphism of C);
assume ( (the Target of C) . m2 ) = ( (the Source of C) . m1 );
then A7: ( dom m1 ) = ( cod m2 );
then ( ( I `2 ) . ( m1 * m2 ) ) = ( ( ( I `2 ) . m2 ) * ( ( I `2 ) . m1 ) ) by A6;
then A8: ( ( I `2 ) . ( (the Comp of C) . (m1,m2) ) ) = ( ( ( I `2 ) . m2 ) * ( ( I `2 ) . m1 ) ) by A7,CAT_1:16;
A9: [ m1,m2 ] in ( dom (the Comp of C) ) by A7,CAT_1:15;
thus ( ( I `2 ) . ( ( ~ (the Comp of C) ) . [ m2,m1 ] ) ) = ( ( I `2 ) . ( ( ~ (the Comp of C) ) . (m2,m1) ) )
.= ( ( ( I `2 ) . m2 ) * ( ( I `2 ) . m1 ) ) by A8,A9,FUNCT_4:def 2;
end;
