environ
vocabularies XBOOLE_0,RELAT_1,PBOOLE,SUBSET_1,CAT_5,CAT_1,MCART_1,GRCAT_1,GRAPH_1,STRUCT_0,FUNCT_1,FUNCOP_1,PARTFUN1,ZFMISC_1,ARYTM_0,TARSKI,GROUP_6,CAT_2,FUNCT_3,INDEX_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,PARTFUN1,PBOOLE,FUNCOP_1,STRUCT_0,GRAPH_1,CAT_1,CAT_2,OPPCAT_1,CAT_5,CKB2,CKB5,CKB8,CKB9,CKB13,CKB15,CKB16,CKB22,CKB23,CKB30,CKB31,CKB36,CKB37,CKB39,CKB40,CKB43,CKB44,CKB46,CKB47,CKB48,CKB54;
definitions TARSKI,FUNCT_1,PBOOLE,CAT_5,FUNCOP_1,CAT_1,BINOP_1,GRAPH_1,CKB5,CKB15,CKB16,CKB22,CKB30,CKB31,CKB37,CKB40,CKB44,CKB46,CKB54;
theorems MCART_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,PARTFUN1,FUNCT_4,CAT_1,CAT_2,OPPCAT_1,CAT_5,RELSET_1,CKB3,CKB4,CKB5,CKB15,CKB16,CKB21,CKB22,CKB30,CKB31,CKB37,CKB40,CKB41,CKB42,CKB44,CKB46,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54;
schemes CLASSES1,PBOOLE,CAT_5,CKB38;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCOP_1,PBOOLE,CAT_2,CAT_5,STRUCT_0,RELSET_1,PRE_CIRC,CKB1,CKB6,CKB7,CKB10,CKB11,CKB12,CKB14,CKB17,CKB18,CKB19,CKB20,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB32,CKB33,CKB34,CKB35,CKB45;
constructors PARTFUN1,DOMAIN_1,OPPCAT_1,CAT_5,RELSET_1,PBOOLE,CKB2,CKB5,CKB13,CKB15,CKB16,CKB22,CKB23,CKB30,CKB31,CKB36,CKB37,CKB39,CKB40,CKB43,CKB44,CKB46,CKB54;
requirements SUBSET,BOOLE;
begin
theorem
Lm2: (for C being Category holds (for I being (Indexing of C) holds (for T being (TargetCat of I) holds ( Obj ( I -functor (C,T) ) ) = ( I `1 ))))
proof
let C being Category;
let I being (Indexing of C);
let T being (TargetCat of I);
A1:now
let x being set;
assume x in (the carrier of C);
then reconsider a = x as (Object of C);
A2: (( dom ( id a ) ) = a & ( cod ( id a ) ) = a) by CAT_1:19;
( ( Obj ( I -functor (C,T) ) ) . a ) = ( dom ( id ( ( Obj ( I -functor (C,T) ) ) . a ) ) ) by CAT_1:19
.= ( dom ( ( I -functor (C,T) ) . (( id a ) qua (Morphism of C)) ) ) by CAT_1:68
.= ( ( (( I -functor (C,T) ) qua Function) . ( id a ) ) `11 ) by CAT_5:2
.= ( [ [ ( ( I `1 ) . a ),( ( I `1 ) . a ) ],( ( I `2 ) . ( id a ) ) ] `11 ) by A2,CKB54:def 1;
hence ( ( Obj ( I -functor (C,T) ) ) . x ) = ( ( I `1 ) . x ) by MCART_1:85;
end;
(( dom ( Obj ( I -functor (C,T) ) ) ) = (the carrier of C) & ( dom ( I `1 ) ) = (the carrier of C)) by FUNCT_2:def 1,PARTFUN1:def 2;
hence thesis by A1,FUNCT_1:2;
end;
