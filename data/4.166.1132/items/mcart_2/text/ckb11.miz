environ
vocabularies SUBSET_1,XBOOLE_0,ZFMISC_1,MCART_1,TARSKI,MCART_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,CKB6;
definitions CKB6;
theorems TARSKI,ZFMISC_1,MCART_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
schemes XBOOLE_0;
registrations XBOOLE_0;
constructors TARSKI,MCART_1,CKB6;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve x1 for set;
reserve x2 for set;
reserve x3 for set;
reserve x4 for set;
reserve x5 for set;
reserve X for set;
reserve Y for set;
reserve Y1 for set;
reserve Y2 for set;
reserve Y3 for set;
reserve Y4 for set;
reserve Y5 for set;
reserve Y6 for set;
reserve Y7 for set;
theorem
Th8: (X <> ( {} ) implies (ex x st (x in X & (not (ex x1 st (ex x2 st (ex x3 st (ex x4 st (ex x5 st ((x1 in X or x2 in X) & x = [ x1,x2,x3,x4,x5 ]))))))))))
proof
assume X <> ( {} );
then consider Y such that A1: Y in X and A2: (for Y1 holds (for Y2 holds (for Y3 holds (for Y4 holds (for Y5 holds (for Y6 holds (for Y7 holds (((((((Y1 in Y2 & Y2 in Y3) & Y3 in Y4) & Y4 in Y5) & Y5 in Y6) & Y6 in Y7) & Y7 in Y) implies Y1 misses X)))))))) by CKB5:1;
take x = Y;
thus x in X by A1;
given x1,x2,x3,x4,x5 such that
A3: (x1 in X or x2 in X)
and
A4: x = [ x1,x2,x3,x4,x5 ];

set Y1 = { x1,x2 };
set Y2 = { Y1,{ x1 } };
set Y3 = { Y2,x3 };
set Y4 = { Y3,{ Y2 } };
set Y5 = { Y4,x4 };
set Y6 = { Y5,{ Y4 } };
set Y7 = { Y6,x5 };
A5: (Y3 in Y4 & Y4 in Y5) by TARSKI:def 2;
Y = [ [ [ [ x1,x2 ],x3 ],x4 ],x5 ] by A4,CKB7:1
.= [ [ [ Y2,x3 ],x4 ],x5 ] by TARSKI:def 5
.= [ [ Y4,x4 ],x5 ] by TARSKI:def 5
.= [ Y6,x5 ] by TARSKI:def 5
.= { Y7,{ Y6 } } by TARSKI:def 5;
then A6: Y7 in Y by TARSKI:def 2;
A7: (Y5 in Y6 & Y6 in Y7) by TARSKI:def 2;
(x1 in Y1 & x2 in Y1) by TARSKI:def 2;
then A8: (not Y1 misses X) by A3,XBOOLE_0:3;
(Y1 in Y2 & Y2 in Y3) by TARSKI:def 2;
hence contradiction by A2,A8,A5,A7,A6;
end;
