environ
vocabularies SUBSET_1,XBOOLE_0,ZFMISC_1,MCART_1,TARSKI,MCART_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,CKB6,CKB12,CKB21,CKB22,CKB23,CKB24,CKB25;
definitions CKB6,CKB12,CKB21,CKB22,CKB23,CKB24,CKB25;
theorems TARSKI,ZFMISC_1,MCART_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
schemes XBOOLE_0;
registrations XBOOLE_0;
constructors TARSKI,MCART_1,CKB6,CKB12,CKB21,CKB22,CKB23,CKB24,CKB25;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve X1 for set;
reserve X2 for set;
reserve X3 for set;
reserve X4 for set;
reserve X5 for set;
theorem
Th20: (((((X1 <> ( {} ) & X2 <> ( {} )) & X3 <> ( {} )) & X4 <> ( {} )) & X5 <> ( {} )) implies (for x being (Element of [: X1,X2,X3,X4,X5 :]) holds ((((( x `1 ) = ( ( ( ( (x qua set) `1 ) `1 ) `1 ) `1 ) & ( x `2 ) = ( ( ( ( (x qua set) `1 ) `1 ) `1 ) `2 )) & ( x `3 ) = ( ( ( (x qua set) `1 ) `1 ) `2 )) & ( x `4 ) = ( ( (x qua set) `1 ) `2 )) & ( x `5 ) = ( (x qua set) `2 ))))
proof
assume A1: ((((X1 <> ( {} ) & X2 <> ( {} )) & X3 <> ( {} )) & X4 <> ( {} )) & X5 <> ( {} ));
let x being (Element of [: X1,X2,X3,X4,X5 :]);
thus ( x `1 ) = ( [ ( x `1 ),( x `2 ) ] `1 ) by MCART_1:7
.= ( ( [ [ ( x `1 ),( x `2 ) ],( x `3 ) ] `1 ) `1 ) by MCART_1:7
.= ( ( [ ( x `1 ),( x `2 ),( x `3 ) ] `1 ) `1 ) by MCART_1:def 3
.= ( ( ( [ [ ( x `1 ),( x `2 ),( x `3 ) ],( x `4 ) ] `1 ) `1 ) `1 ) by MCART_1:7
.= ( ( ( [ ( x `1 ),( x `2 ),( x `3 ),( x `4 ) ] `1 ) `1 ) `1 ) by MCART_1:def 4
.= ( ( ( ( [ ( x `1 ),( x `2 ),( x `3 ),( x `4 ),( x `5 ) ] `1 ) `1 ) `1 ) `1 ) by MCART_1:7
.= ( ( ( ( (x qua set) `1 ) `1 ) `1 ) `1 ) by A1,CKB27:1;
thus ( x `2 ) = ( [ ( x `1 ),( x `2 ) ] `2 ) by MCART_1:7
.= ( ( [ [ ( x `1 ),( x `2 ) ],( x `3 ) ] `1 ) `2 ) by MCART_1:7
.= ( ( [ ( x `1 ),( x `2 ),( x `3 ) ] `1 ) `2 ) by MCART_1:def 3
.= ( ( ( [ [ ( x `1 ),( x `2 ),( x `3 ) ],( x `4 ) ] `1 ) `1 ) `2 ) by MCART_1:7
.= ( ( ( [ ( x `1 ),( x `2 ),( x `3 ),( x `4 ) ] `1 ) `1 ) `2 ) by MCART_1:def 4
.= ( ( ( ( [ ( x `1 ),( x `2 ),( x `3 ),( x `4 ),( x `5 ) ] `1 ) `1 ) `1 ) `2 ) by MCART_1:7
.= ( ( ( ( (x qua set) `1 ) `1 ) `1 ) `2 ) by A1,CKB27:1;
thus ( x `3 ) = ( [ [ ( x `1 ),( x `2 ) ],( x `3 ) ] `2 ) by MCART_1:7
.= ( [ ( x `1 ),( x `2 ),( x `3 ) ] `2 ) by MCART_1:def 3
.= ( ( [ [ ( x `1 ),( x `2 ),( x `3 ) ],( x `4 ) ] `1 ) `2 ) by MCART_1:7
.= ( ( [ ( x `1 ),( x `2 ),( x `3 ),( x `4 ) ] `1 ) `2 ) by MCART_1:def 4
.= ( ( ( [ ( x `1 ),( x `2 ),( x `3 ),( x `4 ),( x `5 ) ] `1 ) `1 ) `2 ) by MCART_1:7
.= ( ( ( (x qua set) `1 ) `1 ) `2 ) by A1,CKB27:1;
thus ( x `4 ) = ( [ [ ( x `1 ),( x `2 ),( x `3 ) ],( x `4 ) ] `2 ) by MCART_1:7
.= ( [ ( x `1 ),( x `2 ),( x `3 ),( x `4 ) ] `2 ) by MCART_1:def 4
.= ( ( [ ( x `1 ),( x `2 ),( x `3 ),( x `4 ),( x `5 ) ] `1 ) `2 ) by MCART_1:7
.= ( ( (x qua set) `1 ) `2 ) by A1,CKB27:1;
thus ( x `5 ) = ( [ ( x `1 ),( x `2 ),( x `3 ),( x `4 ),( x `5 ) ] `2 ) by MCART_1:7
.= ( (x qua set) `2 ) by A1,CKB27:1;
end;
