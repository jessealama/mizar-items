environ
vocabularies SUBSET_1,XBOOLE_0,ZFMISC_1,MCART_1,TARSKI,MCART_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,CKB6,CKB12,CKB21,CKB22,CKB23,CKB24;
definitions CKB6,CKB12,CKB21,CKB22,CKB23,CKB24;
theorems TARSKI,ZFMISC_1,MCART_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes XBOOLE_0;
registrations XBOOLE_0;
constructors TARSKI,MCART_1,CKB6,CKB12,CKB21,CKB22,CKB23,CKB24;
requirements SUBSET,BOOLE;
begin
reserve z for set;
reserve x for set;
reserve x1 for set;
reserve x2 for set;
reserve x3 for set;
reserve x4 for set;
reserve x5 for set;
reserve y for set;
reserve X1 for set;
reserve X2 for set;
reserve X3 for set;
reserve X4 for set;
reserve X5 for set;
reserve xx1 for (Element of X1);
reserve xx2 for (Element of X2);
reserve xx3 for (Element of X3);
reserve xx4 for (Element of X4);
reserve xx5 for (Element of X5);
definition
let X1;
let X2;
let X3;
let X4;
let X5;
let x being (Element of [: X1,X2,X3,X4,X5 :]);
assume A1: ((((X1 <> ( {} ) & X2 <> ( {} )) & X3 <> ( {} )) & X4 <> ( {} )) & X5 <> ( {} ));
func x `5 -> (Element of X5) means 
:Def7: (x = [ x1,x2,x3,x4,x5 ] implies it = x5);
existence
proof
consider xx1,xx2,xx3,xx4,xx5 such that A18: x = [ xx1,xx2,xx3,xx4,xx5 ] by A1,CKB20:1;
take xx5;
thus thesis by A18,CKB10:1;
end;
uniqueness
proof
let y being (Element of X5);
let z being (Element of X5);
assume A19: (x = [ x1,x2,x3,x4,x5 ] implies y = x5);
assume A20: (x = [ x1,x2,x3,x4,x5 ] implies z = x5);
consider xx1,xx2,xx3,xx4,xx5 such that A21: x = [ xx1,xx2,xx3,xx4,xx5 ] by A1,CKB20:1;
y = xx5 by A21,A19;
hence thesis by A21,A20;
end;
end;
