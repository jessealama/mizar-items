environ
vocabularies NUMBERS,XXREAL_0,XREAL_0,ORDINAL1,SUBSET_1,SEQ_1,NEWTON,ARYTM_1,RELAT_1,SQUARE_1,ARYTM_3,POWER,COMPLEX1,CARD_1,FUNCT_1,SERIES_1,SERIES_3,NAT_1;
notations SUBSET_1,NUMBERS,ORDINAL1,XCMPLX_0,XXREAL_0,XREAL_0,COMPLEX1,NAT_1,SQUARE_1,NEWTON,SEQ_1,POWER,SERIES_1,SERIES_3;
definitions SQUARE_1;
theorems XCMPLX_1,SQUARE_1,SIN_COS2,NEWTON,POWER,XREAL_1,PREPOWER,SERIES_1,SERIES_3,COMPLEX1,ABSVALUE,XXREAL_0,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64;
schemes NAT_1;
registrations XCMPLX_0,XXREAL_0,XREAL_0,SQUARE_1,NAT_1,MEMBERED,NEWTON,SERIES_3,XBOOLE_0,NUMBERS;
constructors REAL_1,SQUARE_1,NAT_1,BINOP_2,SEQ_1,NEWTON,SERIES_1,SERIES_3,VALUED_1,ABIAN;
requirements REAL,SUBSET,BOOLE,NUMERALS,ARITHM;
begin
reserve a for  positive  real number;
reserve b for  positive  real number;
reserve c for  positive  real number;
theorem
((a > b & b > c) implies ( ( ( a to_power ( 2 * a ) ) * ( b to_power ( 2 * b ) ) ) * ( c to_power ( 2 * c ) ) ) > ( ( ( a to_power ( b + c ) ) * ( b to_power ( a + c ) ) ) * ( c to_power ( a + b ) ) ))
proof
assume that
A1: a > b
and
A2: b > c;
A3: ( b / c ) > 1 by A2,XREAL_1:187;
set e = ( ( ( a to_power ( b + c ) ) * ( b to_power ( a + c ) ) ) * ( c to_power ( a + b ) ) );
A4: ( b to_power ( c + a ) ) > ( 0 ) by POWER:34;
( b - c ) > ( 0 ) by A2,XREAL_1:50;
then A5: ( ( b / c ) to_power ( b - c ) ) > 1 by A3,POWER:35;
A6: ( a / b ) > 1 by A1,XREAL_1:187;
( a - b ) > ( 0 ) by A1,XREAL_1:50;
then ( ( a / b ) to_power ( a - b ) ) > 1 by A6,POWER:35;
then A7: ( ( ( a / b ) to_power ( a - b ) ) * ( ( b / c ) to_power ( b - c ) ) ) > 1 by A5,XREAL_1:161;
A8: ( c to_power ( a + b ) ) > ( 0 ) by POWER:34;
A9: a > c by A1,A2,XXREAL_0:2;
then A10: ( a / c ) > 1 by XREAL_1:187;
set d = ( ( ( a to_power ( 2 * a ) ) * ( b to_power ( 2 * b ) ) ) * ( c to_power ( 2 * c ) ) );
A11: ( a to_power ( b + c ) ) > ( 0 ) by POWER:34;
( a - c ) > ( 0 ) by A9,XREAL_1:50;
then ( ( a / c ) to_power ( a - c ) ) > 1 by A10,POWER:35;
then ( ( ( ( a / b ) to_power ( a - b ) ) * ( ( b / c ) to_power ( b - c ) ) ) * ( ( a / c ) to_power ( - ( c - a ) ) ) ) > 1 by A7,XREAL_1:161;
then ( ( ( ( a / b ) to_power ( a - b ) ) * ( ( b / c ) to_power ( b - c ) ) ) * ( ( c / a ) to_power ( c - a ) ) ) > 1 by CKB4:1;
then ( ( ( ( a to_power ( a - b ) ) / ( b to_power ( a - b ) ) ) * ( ( b / c ) to_power ( b - c ) ) ) * ( ( c / a ) to_power ( c - a ) ) ) > 1 by POWER:31;
then ( ( ( ( a to_power ( a - b ) ) / ( b to_power ( a - b ) ) ) * ( ( b to_power ( b - c ) ) / ( c to_power ( b - c ) ) ) ) * ( ( c / a ) to_power ( c - a ) ) ) > 1 by POWER:31;
then ( ( ( ( a to_power ( a - b ) ) / ( b to_power ( a - b ) ) ) * ( ( b to_power ( b - c ) ) / ( c to_power ( b - c ) ) ) ) * ( ( c to_power ( c - a ) ) / ( a to_power ( c - a ) ) ) ) > 1 by POWER:31;
then ( ( ( ( a to_power ( a - b ) ) * ( b to_power ( b - c ) ) ) / ( ( c to_power ( b - c ) ) * ( b to_power ( a - b ) ) ) ) * ( ( c to_power ( c - a ) ) / ( a to_power ( c - a ) ) ) ) > 1 by XCMPLX_1:76;
then ( ( ( ( a to_power ( a - b ) ) / ( c to_power ( b - c ) ) ) * ( ( b to_power ( b - c ) ) / ( b to_power ( a - b ) ) ) ) * ( ( c to_power ( c - a ) ) / ( a to_power ( c - a ) ) ) ) > 1 by XCMPLX_1:76;
then ( ( ( ( a to_power ( a - b ) ) / ( c to_power ( b - c ) ) ) * ( b to_power ( ( b - c ) - ( a - b ) ) ) ) * ( ( c to_power ( c - a ) ) / ( a to_power ( c - a ) ) ) ) > 1 by POWER:29;
then ( ( ( ( a to_power ( a - b ) ) / ( c to_power ( b - c ) ) ) * ( ( c to_power ( c - a ) ) / ( a to_power ( c - a ) ) ) ) * ( b to_power ( ( ( 2 * b ) - a ) - c ) ) ) > 1;
then ( ( ( ( a to_power ( a - b ) ) / ( a to_power ( c - a ) ) ) * ( ( c to_power ( c - a ) ) / ( c to_power ( b - c ) ) ) ) * ( b to_power ( ( ( 2 * b ) - a ) - c ) ) ) > 1 by XCMPLX_1:85;
then ( ( ( a to_power ( ( a - b ) - ( c - a ) ) ) * ( ( c to_power ( c - a ) ) / ( c to_power ( b - c ) ) ) ) * ( b to_power ( ( ( 2 * b ) - a ) - c ) ) ) > 1 by POWER:29;
then ( ( ( a to_power ( ( ( 2 * a ) - b ) - c ) ) * ( c to_power ( ( c - a ) - ( b - c ) ) ) ) * ( b to_power ( ( ( 2 * b ) - a ) - c ) ) ) > 1 by POWER:29;
then ( ( ( a to_power ( ( 2 * a ) - ( b + c ) ) ) * ( c to_power ( ( 2 * c ) - ( a + b ) ) ) ) * ( b to_power ( ( 2 * b ) - ( a + c ) ) ) ) > 1;
then ( ( ( ( a to_power ( 2 * a ) ) / ( a to_power ( b + c ) ) ) * ( c to_power ( ( 2 * c ) - ( a + b ) ) ) ) * ( b to_power ( ( 2 * b ) - ( a + c ) ) ) ) > 1 by POWER:29;
then ( ( ( ( a to_power ( 2 * a ) ) / ( a to_power ( b + c ) ) ) * ( ( c to_power ( 2 * c ) ) / ( c to_power ( a + b ) ) ) ) * ( b to_power ( ( 2 * b ) - ( a + c ) ) ) ) > 1 by POWER:29;
then ( ( ( ( a to_power ( 2 * a ) ) * ( c to_power ( 2 * c ) ) ) / ( ( a to_power ( b + c ) ) * ( c to_power ( a + b ) ) ) ) * ( b to_power ( ( 2 * b ) - ( a + c ) ) ) ) > 1 by XCMPLX_1:76;
then ( ( ( ( a to_power ( 2 * a ) ) * ( c to_power ( 2 * c ) ) ) / ( ( a to_power ( b + c ) ) * ( c to_power ( a + b ) ) ) ) * ( ( b to_power ( 2 * b ) ) / ( b to_power ( a + c ) ) ) ) > 1 by POWER:29;
then ( ( ( ( a to_power ( 2 * a ) ) * ( c to_power ( 2 * c ) ) ) * ( b to_power ( 2 * b ) ) ) / ( ( ( a to_power ( b + c ) ) * ( c to_power ( a + b ) ) ) * ( b to_power ( a + c ) ) ) ) > 1 by XCMPLX_1:76;
then ( ( d / e ) * e ) > ( 1 * e ) by A11,A4,A8,XREAL_1:68;
hence thesis by A11,A4,A8,XCMPLX_1:87;
end;
