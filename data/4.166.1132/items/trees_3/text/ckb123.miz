environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_1,FUNCT_1,XXREAL_0,ORDINAL4,RELAT_1,TREES_1,XBOOLE_0,FINSET_1,TARSKI,TREES_2,FUNCT_2,CARD_1,FINSEQ_2,FUNCOP_1,FUNCT_6,ZFMISC_1,PARTFUN1,MCART_1,NAT_1,ARYTM_3,TREES_A,ARYTM_1,TREES_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,FUNCT_1,FINSEQ_1,FINSET_1,DOMAIN_1,FUNCOP_1,RELSET_1,PARTFUN1,BINOP_1,FUNCT_2,FUNCT_3,FINSEQ_2,TREES_1,TREES_2,FUNCT_6,XXREAL_0,CKB2,CKB4,CKB6,CKB7,CKB8,CKB43,CKB47,CKB49,CKB51,CKB53,CKB54,CKB55,CKB96,CKB97,CKB101,CKB102,CKB103,CKB104,CKB108,CKB109,CKB110,CKB111,CKB113;
definitions TARSKI,XBOOLE_0,FUNCT_1,TREES_1,TREES_2,BINOP_1,CKB2,CKB4,CKB6,CKB7,CKB8,CKB43,CKB49,CKB51,CKB53,CKB54,CKB55,CKB103,CKB104,CKB110;
theorems TARSKI,ZFMISC_1,FINSEQ_1,MCART_1,NAT_1,FUNCT_1,FUNCT_2,FUNCT_3,FUNCOP_1,FUNCT_6,FINSEQ_2,FINSEQ_3,ENUMSET1,TREES_1,TREES_2,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,CARD_1,CKB1,CKB2,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB43,CKB49,CKB51,CKB52,CKB53,CKB54,CKB55,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB92,CKB94,CKB95,CKB103,CKB104,CKB105,CKB106,CKB110,CKB114,CKB115,CKB116,CKB117,CKB118,CKB119,CKB120,CKB122;
schemes NAT_1,CARD_2,XBOOLE_0,FINSEQ_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FINSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,TREES_1,TREES_2,CARD_1,RELSET_1,FINSEQ_2,CKB3,CKB5,CKB20,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB44,CKB45,CKB46,CKB48,CKB50,CKB56,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB93,CKB98,CKB99,CKB100,CKB107,CKB112,CKB121;
constructors PARTFUN1,BINOP_1,DOMAIN_1,FUNCT_3,SQUARE_1,NAT_1,FINSEQ_2,FUNCT_6,TREES_2,RELSET_1,CKB2,CKB4,CKB6,CKB7,CKB8,CKB43,CKB47,CKB49,CKB51,CKB53,CKB54,CKB55,CKB101,CKB102,CKB103,CKB104,CKB108,CKB109,CKB110,CKB111;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve i for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve p for FinSequence;
reserve q for FinSequence;
reserve r for FinSequence;
reserve w for (FinSequence of ( NAT ));
definition
let p;
assume that
A1: p is  Tree-yielding;
func tree p -> Tree means 
:Def15: (x in it iff (x = ( {} ) or (ex n st (ex q st ((n < ( len p ) & q in ( p . ( n + 1 ) )) & x = ( <* n *> ^ q ))))));
existence
proof
defpred X[ set ]
 means
($1 = ( {} ) or (ex n st (ex q st ((n < ( len p ) & q in ( p . ( n + 1 ) )) & $1 = ( <* n *> ^ q )))));
consider T being set such that A2: (y in T iff (y in ( ( NAT ) * ) & X[ y ])) from XBOOLE_0:sch 1;
( <*> ( NAT ) ) in ( ( NAT ) * ) by FINSEQ_1:def 11;
then reconsider T as non  empty set by A2;
A3: ( rng p ) is  constituted-Trees by A1,CKB53:def 1;
A4:now
let n;
assume n < ( len p );
then ( p . ( n + 1 ) ) in ( rng p ) by CKB116:1;
hence ( p . ( n + 1 ) ) is Tree by A3;
end;
T is  Tree-like
proof
thus T c= ( ( NAT ) * )
proof
let y;
thus thesis by A2;
end;

thus (w in T implies ( ProperPrefixes w ) c= T)
proof
assume A5: w in T;
now
assume w <> ( {} );
then consider n,q such that A6: n < ( len p ) and A7: q in ( p . ( n + 1 ) ) and A8: w = ( <* n *> ^ q ) by A2,A5;
reconsider q as (FinSequence of ( NAT )) by A8,FINSEQ_1:36;
thus thesis
proof
let x;
assume x in ( ProperPrefixes w );
then consider r such that A9: x = r and A10: r is_a_proper_prefix_of w by TREES_1:def 2;
r is_a_prefix_of w by A10,XBOOLE_0:def 8;
then consider k such that A11: r = ( w | ( Seg k ) ) by TREES_1:def 1;
( rng r ) = ( w .: ( Seg k ) ) by A11,RELAT_1:115;
then reconsider r as (FinSequence of ( NAT )) by FINSEQ_1:def 4;
A12: r in ( ( NAT ) * ) by FINSEQ_1:def 11;
now
assume r <> ( {} );
then consider r1 being (FinSequence of ( NAT )),i being (Element of ( NAT )) such that A13: r = ( <* i *> ^ r1 ) by FINSEQ_2:130;
A14: ( dom <* i *> ) = ( Seg 1 ) by FINSEQ_1:38;
A15: 1 in ( Seg 1 ) by FINSEQ_1:2,TARSKI:def 1;
A16: ( Seg 1 ) c= ( dom r ) by A13,A14,FINSEQ_1:26;
A17: ( r . 1 ) = i by A13,FINSEQ_1:41;
A18: ( w . 1 ) = n by A8,FINSEQ_1:41;
A19: ( r . 1 ) = ( w . 1 ) by A11,A15,A16,FUNCT_1:47;
then A20: r1 is_a_proper_prefix_of q by A8,A10,A13,A17,A18,TREES_1:49;
A21: ( p . ( n + 1 ) ) is Tree by A4,A6;
r1 is_a_prefix_of q by A20,XBOOLE_0:def 8;
then r1 in ( p . ( n + 1 ) ) by A7,A21,TREES_1:20;
hence thesis by A2,A6,A9,A12,A13,A17,A18,A19;
end;
hence thesis by A2,A9,A12;
end;

end;
hence thesis by TREES_1:15,XBOOLE_1:2;
end;

let w;
let k;
let n;
assume that
A22: ( w ^ <* k *> ) in T
and
A23: n <= k;
A24:now
assume A25: w = ( {} );
then <* k *> in T by A22,FINSEQ_1:34;
then consider m being (Element of ( NAT )),q such that A26: m < ( len p ) and q in ( p . ( m + 1 ) ) and A27: <* k *> = ( <* m *> ^ q ) by A2;
A28: ( <* k *> . 1 ) = k by FINSEQ_1:def 8;
( ( <* m *> ^ q ) . 1 ) = m by FINSEQ_1:41;
then A29: n < ( len p ) by A23,A26,A27,A28,XXREAL_0:2;
then ( p . ( n + 1 ) ) in ( rng p ) by CKB116:1;
then A30: ( {} ) in ( p . ( n + 1 ) ) by A3,TREES_1:22;
A31: ( <* n *> ^ ( {} ) ) = <* n *> by FINSEQ_1:34;
A32: ( ( {} ) ^ <* n *> ) = <* n *> by FINSEQ_1:34;
<* n *> in ( ( NAT ) * ) by FINSEQ_1:def 11;
hence thesis by A2,A25,A29,A30,A31,A32;
end;
now
assume w <> ( {} );
then consider q being (FinSequence of ( NAT )),m being (Element of ( NAT )) such that A33: w = ( <* m *> ^ q ) by FINSEQ_2:130;
consider m9 being (Element of ( NAT )),r such that A34: m9 < ( len p ) and A35: r in ( p . ( m9 + 1 ) ) and A36: ( w ^ <* k *> ) = ( <* m9 *> ^ r ) by A2,A22;
A37: ( w ^ <* k *> ) = ( <* m *> ^ ( q ^ <* k *> ) ) by A33,FINSEQ_1:32;
A38: ( w ^ <* n *> ) = ( <* m *> ^ ( q ^ <* n *> ) ) by A33,FINSEQ_1:32;
A39: ( ( w ^ <* k *> ) . 1 ) = m by A37,FINSEQ_1:41;
A40: ( ( w ^ <* k *> ) . 1 ) = m9 by A36,FINSEQ_1:41;
A41: ( <* m *> ^ ( q ^ <* n *> ) ) in ( ( NAT ) * ) by FINSEQ_1:def 11;
A42: r = ( q ^ <* k *> ) by A36,A37,A39,A40,FINSEQ_1:33;
( p . ( m + 1 ) ) in ( rng p ) by A34,A39,A40,CKB116:1;
then ( q ^ <* n *> ) in ( p . ( m + 1 ) ) by A3,A23,A35,A39,A40,A42,TREES_1:def 3;
hence thesis by A2,A34,A38,A39,A40,A41;
end;
hence thesis by A24;
end;
then reconsider T as Tree;
take T;
let x;
thus (x in T implies (x = ( {} ) or (ex n st (ex q st ((n < ( len p ) & q in ( p . ( n + 1 ) )) & x = ( <* n *> ^ q )))))) by A2;
assume A43: (x = ( {} ) or (ex n st (ex q st ((n < ( len p ) & q in ( p . ( n + 1 ) )) & x = ( <* n *> ^ q )))));
A44:now
given n,q such that
A45: n < ( len p )
and
A46: q in ( p . ( n + 1 ) )
and
A47: x = ( <* n *> ^ q );

reconsider T1 = ( p . ( n + 1 ) ) as Tree by A4,A45;
reconsider q as (Element of T1) by A46;
( <* n *> ^ q ) in ( ( NAT ) * ) by FINSEQ_1:def 11;
hence x in ( ( NAT ) * ) by A47;
end;
( {} ) in ( ( NAT ) * ) by FINSEQ_1:49;
hence thesis by A2,A43,A44;
end;
uniqueness
proof
defpred X[ set ]
 means
($1 = ( {} ) or (ex n st (ex q st ((n < ( len p ) & q in ( p . ( n + 1 ) )) & $1 = ( <* n *> ^ q )))));
let T1 being Tree;
let T2 being Tree;
assume that
A48: (x in T1 iff X[ x ])
and
A49: (x in T2 iff X[ x ]);
thus thesis from XBOOLE_0:sch 2(A48,A49);
end;
end;
