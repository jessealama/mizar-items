environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_1,FUNCT_1,XXREAL_0,ORDINAL4,RELAT_1,TREES_1,XBOOLE_0,FINSET_1,TARSKI,TREES_2,FUNCT_2,CARD_1,FINSEQ_2,FUNCOP_1,FUNCT_6,ZFMISC_1,PARTFUN1,MCART_1,NAT_1,ARYTM_3,TREES_A,ARYTM_1,TREES_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,FUNCT_1,FINSEQ_1,FINSET_1,DOMAIN_1,FUNCOP_1,RELSET_1,PARTFUN1,BINOP_1,FUNCT_2,FUNCT_3,FINSEQ_2,TREES_1,TREES_2,FUNCT_6,XXREAL_0,CKB2,CKB4,CKB6,CKB7,CKB8,CKB43,CKB47,CKB49;
definitions TARSKI,XBOOLE_0,FUNCT_1,TREES_1,TREES_2,BINOP_1,CKB2,CKB4,CKB6,CKB7,CKB8,CKB43,CKB49;
theorems TARSKI,ZFMISC_1,FINSEQ_1,MCART_1,NAT_1,FUNCT_1,FUNCT_2,FUNCT_3,FUNCOP_1,FUNCT_6,FINSEQ_2,FINSEQ_3,ENUMSET1,TREES_1,TREES_2,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,CARD_1,CKB1,CKB2,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB43,CKB49;
schemes NAT_1,CARD_2,XBOOLE_0,FINSEQ_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FINSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,TREES_1,TREES_2,CARD_1,RELSET_1,FINSEQ_2,CKB3,CKB5,CKB20,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB44,CKB45,CKB46,CKB48,CKB50;
constructors PARTFUN1,BINOP_1,DOMAIN_1,FUNCT_3,SQUARE_1,NAT_1,FINSEQ_2,FUNCT_6,TREES_2,RELSET_1,CKB2,CKB4,CKB6,CKB7,CKB8,CKB43,CKB47,CKB49;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve X for set;
definition
let D being non empty set;
func FinTrees D -> (DTree-set of D)
means
:Def8: (for T being (DecoratedTree of D) holds (( dom T ) is  finite iff T in it));
existence
proof
defpred X[ set ]
 means
(ex T being (DecoratedTree of D) st ($1 = T & ( dom T ) is  finite));
consider X such that A1: (x in X iff (x in ( Trees D ) & X[ x ])) from XBOOLE_0:sch 1;
set T = the  finite (DecoratedTree of D);
AA: ( dom T ) is  finite;
T in ( Trees D ) by CKB49:def 1;
then A0: X is non empty by A1,AA;
now
let x;
assume x in X;
then x in ( Trees D ) by A1;
hence x is (DecoratedTree of D);
end;
then reconsider X as (DTree-set of D) by A0,CKB43:def 1;
take X;
let T being (DecoratedTree of D);
T in ( Trees D ) by CKB49:def 1;
hence (( dom T ) is  finite implies T in X) by A1;
assume T in X;
then (ex t being (DecoratedTree of D) st (T = t & ( dom t ) is  finite)) by A1;
hence thesis;
end;
uniqueness
proof
let T1 being (DTree-set of D),T2 being (DTree-set of D);
assume that
A2: (for T being (DecoratedTree of D) holds (( dom T ) is  finite iff T in T1))
and
A3: (for T being (DecoratedTree of D) holds (( dom T ) is  finite iff T in T2));
thus T1 c= T2
proof
let x;
assume A4: x in T1;
then reconsider T = x as (DecoratedTree of D);
( dom T ) is  finite by A2,A4;
hence thesis by A3;
end;

let x;
assume A5: x in T2;
then reconsider T = x as (DecoratedTree of D);
( dom T ) is  finite by A3,A5;
hence thesis by A2;
end;
end;
