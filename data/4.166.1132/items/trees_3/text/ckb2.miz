environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_1,FUNCT_1,XXREAL_0,ORDINAL4,RELAT_1,TREES_1,XBOOLE_0,FINSET_1,TARSKI,TREES_2,FUNCT_2,CARD_1,FINSEQ_2,FUNCOP_1,FUNCT_6,ZFMISC_1,PARTFUN1,MCART_1,NAT_1,ARYTM_3,TREES_A,ARYTM_1,TREES_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,FUNCT_1,FINSEQ_1,FINSET_1,DOMAIN_1,FUNCOP_1,RELSET_1,PARTFUN1,BINOP_1,FUNCT_2,FUNCT_3,FINSEQ_2,TREES_1,TREES_2,FUNCT_6,XXREAL_0;
definitions TARSKI,XBOOLE_0,FUNCT_1,TREES_1,TREES_2,BINOP_1;
theorems TARSKI,ZFMISC_1,FINSEQ_1,MCART_1,NAT_1,FUNCT_1,FUNCT_2,FUNCT_3,FUNCOP_1,FUNCT_6,FINSEQ_2,FINSEQ_3,ENUMSET1,TREES_1,TREES_2,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,CARD_1,CKB1;
schemes NAT_1,CARD_2,XBOOLE_0,FINSEQ_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FINSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,TREES_1,TREES_2,CARD_1,RELSET_1,FINSEQ_2;
constructors PARTFUN1,BINOP_1,DOMAIN_1,FUNCT_3,SQUARE_1,NAT_1,FINSEQ_2,FUNCT_6,TREES_2,RELSET_1;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
definition
func Trees -> set
means
:Def1: (x in it iff x is Tree);
existence
proof
set X = { T where T is (Subset of ( ( NAT ) * )): T is Tree };
take X;
let x;
thus (x in X implies x is Tree)
proof
assume x in X;
then (ex T being (Subset of ( ( NAT ) * )) st (x = T & T is Tree));
hence thesis;
end;

assume x is Tree;
then reconsider T = x as Tree;
T is (Subset of ( ( NAT ) * )) by TREES_1:def 3;
hence thesis;
end;
uniqueness
proof
defpred X[ set ]
 means
$1 is Tree;
let T1 being set,T2 being set;
assume that
A1: (x in T1 iff X[ x ])
and
A2: (x in T2 iff X[ x ]);
thus thesis from XBOOLE_0:sch 2(A1,A2);
end;
end;
