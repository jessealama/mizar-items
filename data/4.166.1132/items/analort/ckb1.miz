environ
vocabularies NUMBERS,RLVECT_1,XBOOLE_0,SUBSET_1,ARYTM_3,REAL_1,RELAT_1,ARYTM_1,ANALMETR,SUPINF_2,CARD_1,MCART_1,ANALOAF,SYMSP_1,ZFMISC_1,STRUCT_0,ANALORT;
notations TARSKI,ZFMISC_1,XXREAL_0,REAL_1,RELSET_1,NUMBERS,STRUCT_0,ALGSTR_0,RLVECT_1,ANALOAF,ANALMETR,GEOMTRAP;
definitions STRUCT_0,RLVECT_1;
theorems GEOMTRAP,RELAT_1,RLVECT_1,ANALOAF,ANALMETR,ZFMISC_1,XCMPLX_0,XCMPLX_1,XREAL_1;
schemes RELSET_1;
registrations RELSET_1,MEMBERED,STRUCT_0,TDGROUP;
constructors DOMAIN_1,XXREAL_0,REAL_1,MEMBERED,TDGROUP,ANALMETR,GEOMTRAP;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve V for RealLinearSpace;
reserve v1 for (VECTOR of V);
reserve v2 for (VECTOR of V);
reserve x for (VECTOR of V);
reserve y for (VECTOR of V);
reserve b1 for Real;
reserve b2 for Real;
reserve c1 for Real;
reserve c2 for Real;
theorem
Lm1: ((v1 = ( ( b1 * x ) + ( b2 * y ) ) & v2 = ( ( c1 * x ) + ( c2 * y ) )) implies (( v1 + v2 ) = ( ( ( b1 + c1 ) * x ) + ( ( b2 + c2 ) * y ) ) & ( v1 - v2 ) = ( ( ( b1 - c1 ) * x ) + ( ( b2 - c2 ) * y ) )))
proof
assume that
A1: v1 = ( ( b1 * x ) + ( b2 * y ) )
and
A2: v2 = ( ( c1 * x ) + ( c2 * y ) );
thus ( v1 + v2 ) = ( ( ( ( b1 * x ) + ( b2 * y ) ) + ( c1 * x ) ) + ( c2 * y ) ) by A1,A2,RLVECT_1:def 3
.= ( ( ( ( b1 * x ) + ( c1 * x ) ) + ( b2 * y ) ) + ( c2 * y ) ) by RLVECT_1:def 3
.= ( ( ( ( b1 + c1 ) * x ) + ( b2 * y ) ) + ( c2 * y ) ) by RLVECT_1:def 6
.= ( ( ( b1 + c1 ) * x ) + ( ( b2 * y ) + ( c2 * y ) ) ) by RLVECT_1:def 3
.= ( ( ( b1 + c1 ) * x ) + ( ( b2 + c2 ) * y ) ) by RLVECT_1:def 6;
thus ( v1 - v2 ) = ( ( ( b1 * x ) + ( b2 * y ) ) + ( ( - ( c1 * x ) ) + ( - ( c2 * y ) ) ) ) by A1,A2,RLVECT_1:31
.= ( ( ( b1 * x ) + ( b2 * y ) ) + ( ( c1 * ( - x ) ) + ( - ( c2 * y ) ) ) ) by RLVECT_1:25
.= ( ( ( b1 * x ) + ( b2 * y ) ) + ( ( c1 * ( - x ) ) + ( c2 * ( - y ) ) ) ) by RLVECT_1:25
.= ( ( ( b1 * x ) + ( b2 * y ) ) + ( ( ( - c1 ) * x ) + ( c2 * ( - y ) ) ) ) by RLVECT_1:24
.= ( ( ( b1 * x ) + ( b2 * y ) ) + ( ( ( - c1 ) * x ) + ( ( - c2 ) * y ) ) ) by RLVECT_1:24
.= ( ( ( ( b1 * x ) + ( b2 * y ) ) + ( ( - c1 ) * x ) ) + ( ( - c2 ) * y ) ) by RLVECT_1:def 3
.= ( ( ( ( b1 * x ) + ( ( - c1 ) * x ) ) + ( b2 * y ) ) + ( ( - c2 ) * y ) ) by RLVECT_1:def 3
.= ( ( ( ( b1 + ( - c1 ) ) * x ) + ( b2 * y ) ) + ( ( - c2 ) * y ) ) by RLVECT_1:def 6
.= ( ( ( b1 + ( - c1 ) ) * x ) + ( ( b2 * y ) + ( ( - c2 ) * y ) ) ) by RLVECT_1:def 3
.= ( ( ( b1 - c1 ) * x ) + ( ( b2 + ( - c2 ) ) * y ) ) by RLVECT_1:def 6
.= ( ( ( b1 - c1 ) * x ) + ( ( b2 - c2 ) * y ) );
end;
