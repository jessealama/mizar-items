environ
vocabularies NUMBERS,INT_1,NAT_1,SUBSET_1,MEMBERED,XREAL_0,ORDINAL1,MEMBER_1,TARSKI,REAL_1,ARYTM_3,FUNCT_1,RELAT_1,FINSET_1,CARD_1,XBOOLE_0,ARYTM_1,INT_2,XXREAL_0,COMPLEX1,NEWTON,SQUARE_1,PARTFUN1,EQREL_1,RELAT_2,EULER_1,FINSEQ_1,FINSEQ_3,ORDINAL4,CARD_3,XCMPLX_0,PRE_POLY,NAT_3,UPROOTS,INT_4;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,MEMBERED,ORDINAL1,XXREAL_0,XCMPLX_0,XREAL_0,INT_1,NAT_1,REAL_1,INT_2,NAT_D,NEWTON,SQUARE_1,RELAT_1,FUNCT_1,FINSEQ_1,RELSET_1,RVSUM_1,EULER_1,EQREL_1,RELAT_2,PARTFUN1,FINSET_1,POLYNOM2,NAT_3,UPROOTS,TREES_4,WSIERP_1,MEASURE6,INTEGRA2,RECDEF_1,CKB36;
definitions FUNCT_1,INT_1,FINSEQ_1,XCMPLX_0,EULER_1,SQUARE_1,RELAT_2,PARTFUN1,CARD_1,TARSKI,XBOOLE_0,WELLORD2,CKB36;
theorems RELAT_1,FINSEQ_3,FINSEQ_2,ABSVALUE,FINSEQ_5,EULER_2,INT_3,CARD_2,SEQ_2,RELAT_2,RELSET_1,EQREL_1,CARD_FIN,ORDERS_1,FINSEQ_4,AXIOMS,MOEBIUS1,XBOOLE_0,NAT_3,NEWTON,INT_2,WSIERP_1,CARD_1,PEPIN,NAT_1,XCMPLX_1,XREAL_1,ORDINAL1,EULER_1,FINSEQ_1,XBOOLE_1,TARSKI,ZFMISC_1,RVSUM_1,INT_1,FUNCT_1,RADIX_1,XXREAL_0,NAT_D,XREAL_0,INTEGRA2,VALUED_0,FUNCT_2,MEMBER_1,MEMBERED,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62;
schemes NAT_1,FINSEQ_1,FINSEQ_2,RELSET_1,GRAPH_5;
registrations RELAT_1,FINSEQ_1,CARD_1,PARTFUN1,NAT_1,INT_1,MEMBERED,FINSET_1,SEQM_3,NEWTON,NAT_3,XXREAL_0,NUMBERS,XBOOLE_0,XREAL_0,ORDINAL1,FUNCT_1,VALUED_0,UPROOTS,FUNCT_2,RELSET_1,CKB2,CKB9,CKB28,CKB37,CKB39;
constructors EULER_1,REAL_1,EQREL_1,WELLORD2,BINARITH,WSIERP_1,PEPIN,POLYNOM2,UPROOTS,NAT_3,NAT_D,MEASURE6,INTEGRA2,SEQ_1,RECDEF_1,RELSET_1,PBOOLE,CKB36;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve m1 for Integer;
reserve m2 for Integer;
reserve m3 for Integer;
reserve r for Integer;
reserve s for Integer;
reserve a for Integer;
reserve b for Integer;
reserve c for Integer;
reserve x for Integer;
theorem
((((((m1 <> ( 0 ) & m2 <> ( 0 )) & m3 <> ( 0 )) & m1,m2 are_relative_prime ) & m1,m3 are_relative_prime ) & m2,m3 are_relative_prime ) implies (ex r st (ex s st (for x holds (((( ( x - a ) mod m1 ) = ( 0 ) & ( ( x - b ) mod m2 ) = ( 0 )) & ( ( x - c ) mod m3 ) = ( 0 )) implies ((x,( ( a + ( m1 * r ) ) + ( ( m1 * m2 ) * s ) ) are_congruent_mod ( ( m1 * m2 ) * m3 ) & ( ( ( m1 * r ) - ( b - a ) ) mod m2 ) = ( 0 )) & ( ( ( ( m1 * m2 ) * s ) - ( ( c - a ) - ( m1 * r ) ) ) mod m3 ) = ( 0 )))))))
proof
assume that
A1: (m1 <> ( 0 ) & m2 <> ( 0 ))
and
A2: m3 <> ( 0 )
and
A3: m1,m2 are_relative_prime 
and
A4: (m1,m3 are_relative_prime  & m2,m3 are_relative_prime );
consider r such that A5: (for x holds ((( ( x - a ) mod m1 ) = ( 0 ) & ( ( x - b ) mod m2 ) = ( 0 )) implies x,( a + ( m1 * r ) ) are_congruent_mod ( m1 * m2 ))) and A6: ( ( ( m1 * r ) - ( b - a ) ) mod m2 ) = ( 0 ) by A1,A3,CKB59:1;
( m1 * m2 ) <> ( 0 ) by A1,XCMPLX_1:6;
then consider s such that A7: ((for x holds ((( ( x - ( a + ( m1 * r ) ) ) mod ( m1 * m2 ) ) = ( 0 ) & ( ( x - c ) mod m3 ) = ( 0 )) implies x,( ( a + ( m1 * r ) ) + ( ( m1 * m2 ) * s ) ) are_congruent_mod ( ( m1 * m2 ) * m3 ))) & ( ( ( ( m1 * m2 ) * s ) - ( c - ( a + ( m1 * r ) ) ) ) mod m3 ) = ( 0 )) by A2,A4,CKB59:1,INT_2:26;
take r;
take s;
(for x holds (((( ( x - a ) mod m1 ) = ( 0 ) & ( ( x - b ) mod m2 ) = ( 0 )) & ( ( x - c ) mod m3 ) = ( 0 )) implies ((x,( ( a + ( m1 * r ) ) + ( ( m1 * m2 ) * s ) ) are_congruent_mod ( ( m1 * m2 ) * m3 ) & ( ( ( m1 * r ) - ( b - a ) ) mod m2 ) = ( 0 )) & ( ( ( ( m1 * m2 ) * s ) - ( ( c - a ) - ( m1 * r ) ) ) mod m3 ) = ( 0 ))))
proof
let x;
assume that
A8: (( ( x - a ) mod m1 ) = ( 0 ) & ( ( x - b ) mod m2 ) = ( 0 ))
and
A9: ( ( x - c ) mod m3 ) = ( 0 );
x,( a + ( m1 * r ) ) are_congruent_mod ( m1 * m2 ) by A5,A8;
then ( m1 * m2 ) divides ( x - ( a + ( m1 * r ) ) ) by INT_2:15;
then ( ( x - ( a + ( m1 * r ) ) ) mod ( m1 * m2 ) ) = ( 0 ) by CKB55:1;
hence thesis by A6,A7,A9;
end;
hence thesis;
end;
