environ
vocabularies NUMBERS,INT_1,NAT_1,SUBSET_1,MEMBERED,XREAL_0,ORDINAL1,MEMBER_1,TARSKI,REAL_1,ARYTM_3,FUNCT_1,RELAT_1,FINSET_1,CARD_1,XBOOLE_0,ARYTM_1,INT_2,XXREAL_0,COMPLEX1,NEWTON,SQUARE_1,PARTFUN1,EQREL_1,RELAT_2,EULER_1,FINSEQ_1,FINSEQ_3,ORDINAL4,CARD_3,XCMPLX_0,PRE_POLY,NAT_3,UPROOTS,INT_4;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,MEMBERED,ORDINAL1,XXREAL_0,XCMPLX_0,XREAL_0,INT_1,NAT_1,REAL_1,INT_2,NAT_D,NEWTON,SQUARE_1,RELAT_1,FUNCT_1,FINSEQ_1,RELSET_1,RVSUM_1,EULER_1,EQREL_1,RELAT_2,PARTFUN1,FINSET_1,POLYNOM2,NAT_3,UPROOTS,TREES_4,WSIERP_1,MEASURE6,INTEGRA2,RECDEF_1,CKB36;
definitions FUNCT_1,INT_1,FINSEQ_1,XCMPLX_0,EULER_1,SQUARE_1,RELAT_2,PARTFUN1,CARD_1,TARSKI,XBOOLE_0,WELLORD2,CKB36;
theorems RELAT_1,FINSEQ_3,FINSEQ_2,ABSVALUE,FINSEQ_5,EULER_2,INT_3,CARD_2,SEQ_2,RELAT_2,RELSET_1,EQREL_1,CARD_FIN,ORDERS_1,FINSEQ_4,AXIOMS,MOEBIUS1,XBOOLE_0,NAT_3,NEWTON,INT_2,WSIERP_1,CARD_1,PEPIN,NAT_1,XCMPLX_1,XREAL_1,ORDINAL1,EULER_1,FINSEQ_1,XBOOLE_1,TARSKI,ZFMISC_1,RVSUM_1,INT_1,FUNCT_1,RADIX_1,XXREAL_0,NAT_D,XREAL_0,INTEGRA2,VALUED_0,FUNCT_2,MEMBER_1,MEMBERED,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64;
schemes NAT_1,FINSEQ_1,FINSEQ_2,RELSET_1,GRAPH_5;
registrations RELAT_1,FINSEQ_1,CARD_1,PARTFUN1,NAT_1,INT_1,MEMBERED,FINSET_1,SEQM_3,NEWTON,NAT_3,XXREAL_0,NUMBERS,XBOOLE_0,XREAL_0,ORDINAL1,FUNCT_1,VALUED_0,UPROOTS,FUNCT_2,RELSET_1,CKB2,CKB9,CKB28,CKB37,CKB39;
constructors EULER_1,REAL_1,EQREL_1,WELLORD2,BINARITH,WSIERP_1,PEPIN,POLYNOM2,UPROOTS,NAT_3,NAT_D,MEASURE6,INTEGRA2,SEQ_1,RECDEF_1,RELSET_1,PBOOLE,CKB36;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve p for Nat;
reserve n for (Element of ( NAT ));
reserve m for Integer;
theorem
Th46: (for n1,n2,n3 being non  zero  natural number holds ( ( n1 gcd n3 ) lcm ( n2 gcd n3 ) ) = ( ( n1 lcm n2 ) gcd n3 ))
proof
let n1 being non  zero  natural number;
let n2 being non  zero  natural number;
let n3 being non  zero  natural number;
set d1 = ( n1 gcd n3 );
set d2 = ( n2 gcd n3 );
set M = ( n1 lcm n2 );
reconsider d = ( M gcd n3 ) as non  empty  natural number by INT_2:5;
reconsider M as non  empty  natural number by INT_2:4;
(d1 divides n3 & d2 divides n3) by NAT_D:def 5;
then A1: ( d1 lcm d2 ) divides n3 by NAT_D:def 4;
(d2 divides n2 & n2 divides M) by NAT_D:def 4,NAT_D:def 5;
then A2: d2 divides M by NAT_D:4;
A3: (for p being  natural number holds (p in ( support ( pfexp d ) ) implies (( ( ppf d ) . p ) divides n1 or ( ( ppf d ) . p ) divides n2)))
proof
let p being  natural number;
assume that
A4: p in ( support ( pfexp d ) )
and
A5: (not ( ( ppf d ) . p ) divides n1)
and
A6: (not ( ( ppf d ) . p ) divides n2);
A7: (not ( p |^ ( p |-count d ) ) divides n2) by A4,A6,NAT_3:def 9;
A8: p is Prime by A4,NAT_3:34;
A9: (not ( p |^ ( p |-count d ) ) divides n1) by A4,A5,NAT_3:def 9;
A10: ( p |-count d ) > ( p |-count M )
proof
A11: ( p |-count M ) = ( ( pfexp M ) . p ) by A8,NAT_3:def 8
.= ( ( max (( pfexp n1 ),( pfexp n2 )) ) . p ) by NAT_3:54;
per cases ;
suppose ( ( pfexp n1 ) . p ) <= ( ( pfexp n2 ) . p );

then ( p |-count M ) = ( ( pfexp n2 ) . p ) by A11,NAT_3:def 4
.= ( p |-count n2 ) by A8,NAT_3:def 8;
hence thesis by A7,A8,MOEBIUS1:9;
end;
suppose ( ( pfexp n1 ) . p ) > ( ( pfexp n2 ) . p );

then ( p |-count M ) = ( ( pfexp n1 ) . p ) by A11,NAT_3:def 4
.= ( p |-count n1 ) by A8,NAT_3:def 8;
hence thesis by A9,A8,MOEBIUS1:9;
end;
end;
d divides M by NAT_D:def 5;
hence contradiction by A8,A10,NAT_3:30;
end;
A12: (for p being  natural number holds (p in ( support ( pfexp d ) ) implies ( ( ppf d ) . p ) divides ( d1 lcm d2 )))
proof
A13: d2 divides ( d1 lcm d2 ) by NAT_D:def 4;
let p being  natural number;
A14: d1 divides ( d1 lcm d2 ) by NAT_D:def 4;
assume A15: p in ( support ( pfexp d ) );
then A16: p is Prime by NAT_3:34;
d divides n3 by NAT_D:def 5;
then ( p |-count d ) <= ( p |-count n3 ) by A16,NAT_3:30;
then ( p |^ ( p |-count d ) ) divides ( p |^ ( p |-count n3 ) ) by RADIX_1:6;
then A17: ( ( ppf d ) . p ) divides ( p |^ ( p |-count n3 ) ) by A15,NAT_3:def 9;
p <> 1 by A16,INT_2:def 4;
then ( p |^ ( p |-count n3 ) ) divides n3 by NAT_3:def 7;
then A18: ( ( ppf d ) . p ) divides n3 by A17,NAT_D:4;
per cases  by A3,A15;
suppose ( ( ppf d ) . p ) divides n1;

then ( ( ppf d ) . p ) divides d1 by A18,NAT_D:def 5;
hence thesis by A14,NAT_D:4;
end;
suppose ( ( ppf d ) . p ) divides n2;

then ( ( ppf d ) . p ) divides d2 by A18,NAT_D:def 5;
hence thesis by A13,NAT_D:4;
end;
end;
( Product ( ppf d ) ) divides ( d1 lcm d2 )
proof
set g = ( ppf d );
set K = ( canFS ( support g ) );
consider f being (FinSequence of ( COMPLEX )) such that A19: ( Product g ) = ( Product f ) and A20: f = ( g * K ) by NAT_3:def 5;
( rng f ) c= ( NAT ) by A20,VALUED_0:def 6;
then reconsider f as (FinSequence of ( NAT )) by FINSEQ_1:def 4;
A21: ( rng K ) = ( support g ) by FUNCT_2:def 3;
then ( rng K ) c= ( NAT ) by XBOOLE_1:1;
then reconsider K as (FinSequence of ( NAT )) by FINSEQ_1:def 4;
A22: (for m,n being (Element of ( NAT )) holds (((m in ( dom f ) & n in ( dom f )) & m <> n) implies ( ( f . m ) gcd ( f . n ) ) = 1))
proof
let m being (Element of ( NAT ));
let n being (Element of ( NAT ));
assume that
A23: m in ( dom f )
and
A24: n in ( dom f )
and
A25: m <> n;
A26: m in ( dom K ) by A20,A23,FUNCT_1:11;
then ( K . m ) in ( support g ) by A21,FUNCT_1:3;
then A27: ( K . m ) in ( support ( pfexp d ) ) by NAT_3:def 9;
then A28: ( K . m ) is  prime by NAT_3:34;
A29: n in ( dom K ) by A20,A24,FUNCT_1:11;
then ( K . n ) in ( support g ) by A21,FUNCT_1:3;
then A30: ( K . n ) in ( support ( pfexp d ) ) by NAT_3:def 9;
then A31: ( K . n ) is  prime by NAT_3:34;
( f . n ) = ( g . ( K . n ) ) by A20,A24,FUNCT_1:12;
then A32: ( f . n ) = ( ( K . n ) |^ ( ( K . n ) |-count d ) ) by A30,NAT_3:def 9;
( f . m ) = ( g . ( K . m ) ) by A20,A23,FUNCT_1:12;
then A33: ( f . m ) = ( ( K . m ) |^ ( ( K . m ) |-count d ) ) by A27,NAT_3:def 9;
( K . m ) <> ( K . n ) by A25,A26,A29,FUNCT_1:def 4;
then A34: ( K . n ),( ( K . m ) |^ ( ( K . m ) |-count d ) ) are_relative_prime  by A28,A31,EULER_2:17,INT_2:30;
A35: ( K . n ) > ( 0 ) by A30,NAT_3:34;
( K . m ) > ( 0 ) by A27,NAT_3:34;
then ( ( K . n ) |^ ( ( K . n ) |-count d ) ),( ( K . m ) |^ ( ( K . m ) |-count d ) ) are_relative_prime  by A35,A34,EULER_2:17;
hence thesis by A33,A32,INT_2:def 3;
end;
(for m being (Element of ( NAT )) holds (m in ( dom f ) implies ( f . m ) divides ( d1 lcm d2 )))
proof
let m being (Element of ( NAT ));
assume A36: m in ( dom f );
then m in ( dom K ) by A20,FUNCT_1:11;
then ( K . m ) in ( support g ) by A21,FUNCT_1:3;
then ( K . m ) in ( support ( pfexp d ) ) by NAT_3:def 9;
then ( g . ( K . m ) ) divides ( d1 lcm d2 ) by A12;
hence thesis by A20,A36,FUNCT_1:12;
end;
hence thesis by A19,A22,CKB53:1;
end;
then A37: d divides ( d1 lcm d2 ) by NAT_3:61;
(d1 divides n1 & n1 divides M) by NAT_D:def 4,NAT_D:def 5;
then d1 divides M by NAT_D:4;
then ( d1 lcm d2 ) divides M by A2,NAT_D:def 4;
then ( d1 lcm d2 ) divides d by A1,NAT_D:def 5;
hence thesis by A37,NAT_D:5;
end;
