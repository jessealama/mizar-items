environ
vocabularies NUMBERS,INT_1,NAT_1,SUBSET_1,MEMBERED,XREAL_0,ORDINAL1,MEMBER_1,TARSKI,REAL_1,ARYTM_3,FUNCT_1,RELAT_1,FINSET_1,CARD_1,XBOOLE_0,ARYTM_1,INT_2,XXREAL_0,COMPLEX1,NEWTON,SQUARE_1,PARTFUN1,EQREL_1,RELAT_2,EULER_1,FINSEQ_1,FINSEQ_3,ORDINAL4,CARD_3,XCMPLX_0,PRE_POLY,NAT_3,UPROOTS,INT_4;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,MEMBERED,ORDINAL1,XXREAL_0,XCMPLX_0,XREAL_0,INT_1,NAT_1,REAL_1,INT_2,NAT_D,NEWTON,SQUARE_1,RELAT_1,FUNCT_1,FINSEQ_1,RELSET_1,RVSUM_1,EULER_1,EQREL_1,RELAT_2,PARTFUN1,FINSET_1,POLYNOM2,NAT_3,UPROOTS,TREES_4,WSIERP_1,MEASURE6,INTEGRA2,RECDEF_1,CKB36;
definitions FUNCT_1,INT_1,FINSEQ_1,XCMPLX_0,EULER_1,SQUARE_1,RELAT_2,PARTFUN1,CARD_1,TARSKI,XBOOLE_0,WELLORD2,CKB36;
theorems RELAT_1,FINSEQ_3,FINSEQ_2,ABSVALUE,FINSEQ_5,EULER_2,INT_3,CARD_2,SEQ_2,RELAT_2,RELSET_1,EQREL_1,CARD_FIN,ORDERS_1,FINSEQ_4,AXIOMS,MOEBIUS1,XBOOLE_0,NAT_3,NEWTON,INT_2,WSIERP_1,CARD_1,PEPIN,NAT_1,XCMPLX_1,XREAL_1,ORDINAL1,EULER_1,FINSEQ_1,XBOOLE_1,TARSKI,ZFMISC_1,RVSUM_1,INT_1,FUNCT_1,RADIX_1,XXREAL_0,NAT_D,XREAL_0,INTEGRA2,VALUED_0,FUNCT_2,MEMBER_1,MEMBERED,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB40;
schemes NAT_1,FINSEQ_1,FINSEQ_2,RELSET_1,GRAPH_5;
registrations RELAT_1,FINSEQ_1,CARD_1,PARTFUN1,NAT_1,INT_1,MEMBERED,FINSET_1,SEQM_3,NEWTON,NAT_3,XXREAL_0,NUMBERS,XBOOLE_0,XREAL_0,ORDINAL1,FUNCT_1,VALUED_0,UPROOTS,FUNCT_2,RELSET_1,CKB2,CKB9,CKB28,CKB37,CKB39;
constructors EULER_1,REAL_1,EQREL_1,WELLORD2,BINARITH,WSIERP_1,PEPIN,POLYNOM2,UPROOTS,NAT_3,NAT_D,MEASURE6,INTEGRA2,SEQ_1,RECDEF_1,RELSET_1,PBOOLE,CKB36;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve a for Integer;
reserve b for Integer;
reserve m for Integer;
reserve x for Integer;
theorem
(for a,b,m,x being Integer holds (((m <> ( 0 ) & a,m are_relative_prime ) & ( ( ( a * x ) - b ) mod m ) = ( 0 )) implies (ex s being Integer st [ x,( b * s ) ] in ( Cong m ))))
proof
let a;
let b;
let m;
let x;
assume that
A1: m <> ( 0 )
and
A2: a,m are_relative_prime 
and
A3: ( ( ( a * x ) - b ) mod m ) = ( 0 );
( a gcd m ) = 1 by A2,INT_2:def 3;
then consider r,t being Integer such that A4: 1 = ( ( r * a ) + ( t * m ) ) by NAT_D:68;
( ( ( a * x ) - b ) mod m ) = ( ( 0 ) mod m ) by A3,CKB21:1;
then ( ( a * x ) - b ),( 0 ) are_congruent_mod m by A1,NAT_D:64;
then ( ( ( a * x ) - b ) * r ),( ( 0 ) * r ) are_congruent_mod m by CKB20:1;
then ( ( x * ( a * r ) ) - ( b * r ) ),( 0 ) are_congruent_mod m;
then A5: ( ( x * ( 1 - ( t * m ) ) ) - ( b * r ) ),( 0 ) are_congruent_mod m by A4;
take s = r;
( ( ( x - ( ( x * t ) * m ) ) - ( b * r ) ) mod m ) = ( ( ( x - ( b * r ) ) + ( ( ( - x ) * t ) * m ) ) mod m )
.= ( ( x - ( b * r ) ) mod m ) by NAT_D:61;
then ( ( x - ( b * r ) ) mod m ) = ( ( 0 ) mod m ) by A5,NAT_D:64;
then ( 0 ),( x - ( b * r ) ) are_congruent_mod m by A1,NAT_D:64;
then ( ( 0 ) + ( b * r ) ),x are_congruent_mod m by INT_1:19;
then x,( b * s ) are_congruent_mod m by INT_1:14;
hence thesis by CKB36:def 1;
end;
