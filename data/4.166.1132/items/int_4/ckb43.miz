environ
vocabularies NUMBERS,INT_1,NAT_1,SUBSET_1,MEMBERED,XREAL_0,ORDINAL1,MEMBER_1,TARSKI,REAL_1,ARYTM_3,FUNCT_1,RELAT_1,FINSET_1,CARD_1,XBOOLE_0,ARYTM_1,INT_2,XXREAL_0,COMPLEX1,NEWTON,SQUARE_1,PARTFUN1,EQREL_1,RELAT_2,EULER_1,FINSEQ_1,FINSEQ_3,ORDINAL4,CARD_3,XCMPLX_0,PRE_POLY,NAT_3,UPROOTS,INT_4;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,MEMBERED,ORDINAL1,XXREAL_0,XCMPLX_0,XREAL_0,INT_1,NAT_1,REAL_1,INT_2,NAT_D,NEWTON,SQUARE_1,RELAT_1,FUNCT_1,FINSEQ_1,RELSET_1,RVSUM_1,EULER_1,EQREL_1,RELAT_2,PARTFUN1,FINSET_1,POLYNOM2,NAT_3,UPROOTS,TREES_4,WSIERP_1,MEASURE6,INTEGRA2,RECDEF_1,CKB36;
definitions FUNCT_1,INT_1,FINSEQ_1,XCMPLX_0,EULER_1,SQUARE_1,RELAT_2,PARTFUN1,CARD_1,TARSKI,XBOOLE_0,WELLORD2,CKB36;
theorems RELAT_1,FINSEQ_3,FINSEQ_2,ABSVALUE,FINSEQ_5,EULER_2,INT_3,CARD_2,SEQ_2,RELAT_2,RELSET_1,EQREL_1,CARD_FIN,ORDERS_1,FINSEQ_4,AXIOMS,MOEBIUS1,XBOOLE_0,NAT_3,NEWTON,INT_2,WSIERP_1,CARD_1,PEPIN,NAT_1,XCMPLX_1,XREAL_1,ORDINAL1,EULER_1,FINSEQ_1,XBOOLE_1,TARSKI,ZFMISC_1,RVSUM_1,INT_1,FUNCT_1,RADIX_1,XXREAL_0,NAT_D,XREAL_0,INTEGRA2,VALUED_0,FUNCT_2,MEMBER_1,MEMBERED,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB40,CKB41,CKB42;
schemes NAT_1,FINSEQ_1,FINSEQ_2,RELSET_1,GRAPH_5;
registrations RELAT_1,FINSEQ_1,CARD_1,PARTFUN1,NAT_1,INT_1,MEMBERED,FINSET_1,SEQM_3,NEWTON,NAT_3,XXREAL_0,NUMBERS,XBOOLE_0,XREAL_0,ORDINAL1,FUNCT_1,VALUED_0,UPROOTS,FUNCT_2,RELSET_1,CKB2,CKB9,CKB28,CKB37,CKB39;
constructors EULER_1,REAL_1,EQREL_1,WELLORD2,BINARITH,WSIERP_1,PEPIN,POLYNOM2,UPROOTS,NAT_3,NAT_D,MEASURE6,INTEGRA2,SEQ_1,RECDEF_1,RELSET_1,PBOOLE,CKB36;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve a for Integer;
reserve b for Integer;
reserve m for Integer;
reserve c for (Element of ( NAT ));
reserve c1 for (Element of ( NAT ));
reserve c2 for (Element of ( NAT ));
theorem
((m <> ( 0 ) & ( a gcd m ) divides b) implies (ex fp being (FinSequence of ( INT )) st ((( len fp ) = ( a gcd m ) & (for c holds (c in ( dom fp ) implies ( ( ( a * ( fp . c ) ) - b ) mod m ) = ( 0 )))) & (for c1 holds (for c2 holds (((c1 in ( dom fp ) & c2 in ( dom fp )) & c1 <> c2) implies (not ( fp . c1 ),( fp . c2 ) are_congruent_mod m)))))))
proof
assume that
A1: m <> ( 0 )
and
A2: ( a gcd m ) divides b;
set l = ( a gcd m );
reconsider l as (Element of ( NAT )) by ORDINAL1:def 12;
consider a1 being Integer,m1 being Integer such that A3: a = ( l * a1 ) and A4: m = ( l * m1 ) and A5: a1,m1 are_relative_prime  by A1,INT_2:23;
consider b1 being Integer such that A6: b = ( l * b1 ) by A2,INT_1:def 3;
consider x1 being Integer such that A7: ( ( ( a1 * x1 ) - b1 ) mod m1 ) = ( 0 ) by A5,CKB24:1;
deffunc P(Nat) = ( x1 + ( ( $1 - 1 ) * m1 ) );
consider fp being FinSequence such that A8: (( len fp ) = l & (for c being Nat holds (c in ( dom fp ) implies ( fp . c ) = P(c)))) from FINSEQ_1:sch 2;
(for c being Nat holds (c in ( dom fp ) implies ( fp . c ) in ( INT )))
proof
let c being Nat;
assume c in ( dom fp );
then ( fp . c ) = ( x1 + ( ( c - 1 ) * m1 ) ) by A8;
hence thesis by INT_1:def 2;
end;
then reconsider fp as (FinSequence of ( INT )) by FINSEQ_2:12;
A9: m1 <> ( 0 ) by A1,A4;
A10: (for c1 holds (for c2 holds (((c1 in ( dom fp ) & c2 in ( dom fp )) & c1 <> c2) implies (not ( fp . c1 ),( fp . c2 ) are_congruent_mod m))))
proof
let c1;
let c2;
assume that
A11: c1 in ( dom fp )
and
A12: c2 in ( dom fp )
and
A13: c1 <> c2;
assume A14: ( fp . c1 ),( fp . c2 ) are_congruent_mod m;
(( fp . c1 ) = ( x1 + ( ( c1 - 1 ) * m1 ) ) & ( fp . c2 ) = ( x1 + ( ( c2 - 1 ) * m1 ) )) by A8,A11,A12;
then m divides ( ( ( ( c1 - 1 ) * m1 ) + x1 ) - ( ( ( c2 - 1 ) * m1 ) + x1 ) ) by A14,INT_2:15;
then consider w being Integer such that A15: ( ( c1 - c2 ) * m1 ) = ( ( l * m1 ) * w ) by A4,INT_1:def 3;
( ( c1 - c2 ) * m1 ) = ( ( l * w ) * m1 ) by A15;
then ( c1 - c2 ) = ( l * w ) by A9,XCMPLX_1:5;
then A16: l divides ( c1 - c2 ) by INT_1:def 3;
A17: c2 in ( Seg l ) by A8,A12,FINSEQ_1:def 3;
then A18: c2 >= 1 by FINSEQ_1:1;
A19: c1 in ( Seg l ) by A8,A11,FINSEQ_1:def 3;
then c1 <= l by FINSEQ_1:1;
then ( c1 - c2 ) <= ( l - 1 ) by A18,XREAL_1:13;
then A20: ( c1 - c2 ) < l by XREAL_1:147;
A21: c2 <= l by A17,FINSEQ_1:1;
c1 >= 1 by A19,FINSEQ_1:1;
then ( c1 - c2 ) >= ( 1 - l ) by A21,XREAL_1:13;
then ( c1 - c2 ) > ( - l ) by XREAL_1:145;
then A22: ( abs ( c1 - c2 ) ) < l by A20,SEQ_2:1;
( c1 - c2 ) <> ( 0 ) by A13;
then ( abs l ) <= ( abs ( c1 - c2 ) ) by A16,CKB15:1;
hence contradiction by A22,ABSVALUE:def 1;
end;
take fp;
( ( ( a1 * x1 ) - b1 ) mod m1 ) = ( ( 0 ) mod m1 ) by A7,CKB21:1;
then ( ( a1 * x1 ) - b1 ),( 0 ) are_congruent_mod m1 by A9,NAT_D:64;
then ( ( ( a1 * x1 ) - b1 ) * l ),( ( 0 ) * l ) are_congruent_mod ( m1 * l ) by CKB19:1;
then A23: ( ( ( a * x1 ) - b ) mod m ) = ( ( 0 ) mod m ) by A3,A4,A6,NAT_D:64;
(for c holds (c in ( dom fp ) implies ( ( ( a * ( fp . c ) ) - b ) mod m ) = ( 0 )))
proof
let c;
assume c in ( dom fp );
hence ( ( ( a * ( fp . c ) ) - b ) mod m ) = ( ( ( a * ( x1 + ( ( c - 1 ) * m1 ) ) ) - b ) mod m ) by A8
.= ( ( ( ( a * x1 ) - b ) + ( ( a1 * ( c - 1 ) ) * m ) ) mod m ) by A3,A4
.= ( ( ( a * x1 ) - b ) mod m ) by NAT_D:61
.= ( 0 ) by A23,CKB21:1;
end;
hence thesis by A8,A10;
end;
