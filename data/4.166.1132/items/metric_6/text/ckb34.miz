environ
vocabularies NUMBERS,METRIC_1,SUBSET_1,XBOOLE_0,FUNCT_1,ZFMISC_1,REAL_1,COMPLEX1,ARYTM_1,XXREAL_0,ARYTM_3,PCOMPS_1,CARD_1,RELAT_1,RELAT_2,STRUCT_0,NAT_1,ORDINAL2,XXREAL_2,TARSKI,SEQ_2,SEQ_1,XREAL_0,ORDINAL1,VALUED_0,BHSP_3,METRIC_6;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,XREAL_0,COMPLEX1,RELAT_1,FUNCT_1,FUNCT_2,DOMAIN_1,REAL_1,NAT_1,STRUCT_0,METRIC_1,SEQ_1,SEQ_2,VALUED_0,PCOMPS_1,TBSP_1,XXREAL_0,RECDEF_1,CKB6,CKB9,CKB10,CKB11,CKB12,CKB16,CKB17;
definitions TBSP_1,TARSKI,CKB6,CKB9,CKB10,CKB11,CKB12,CKB16,CKB17;
theorems ABSVALUE,TARSKI,BINOP_1,METRIC_1,FUNCT_1,FUNCT_2,SEQ_2,NAT_1,PCOMPS_1,SEQM_3,SEQ_4,TBSP_1,SUBSET_1,XREAL_0,XBOOLE_1,XCMPLX_1,XREAL_1,COMPLEX1,XXREAL_0,VALUED_0,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33;
schemes SEQ_1,BINOP_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,STRUCT_0,METRIC_1,VALUED_0,FUNCT_2;
constructors DOMAIN_1,XXREAL_0,REAL_1,NAT_1,COMPLEX1,SEQ_2,PCOMPS_1,BHSP_3,TBSP_1,SEQ_1,VALUED_1,PARTFUN1,RECDEF_1,SETFAM_1,RELSET_1,BINOP_2,RVSUM_1,CKB6,CKB9,CKB11,CKB12,CKB16,CKB17;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve X for non empty MetrSpace;
reserve x for (Element of X);
reserve S for (sequence of X);
theorem
(S is  convergent implies S is  bounded)
proof
assume S is  convergent;
then consider x such that A1: S is_convergent_in_metrspace_to x and ( lim S ) = x by CKB20:1;
( dist_to_point (S,x) ) is  convergent by A1,CKB21:1;
then ( dist_to_point (S,x) ) is  bounded by SEQ_2:13;
then consider r being  real number such that A2: ( 0 ) < r and A3: (for n holds ( abs ( ( dist_to_point (S,x) ) . n ) ) < r) by SEQ_2:3;
reconsider r as Real by XREAL_0:def 1;
(for n holds ( S . n ) in ( Ball (x,r) ))
proof
let n;
A4: ( ( dist_to_point (S,x) ) . n ) = ( dist (( S . n ),x) ) by CKB16:def 1;
then ( 0 ) <= ( ( dist_to_point (S,x) ) . n ) by METRIC_1:5;
then ( abs ( ( dist_to_point (S,x) ) . n ) ) = ( ( dist_to_point (S,x) ) . n ) by ABSVALUE:def 1;
then ( dist (( S . n ),x) ) < r by A3,A4;
hence thesis by METRIC_1:11;
end;
hence thesis by A2,CKB13:1;
end;
