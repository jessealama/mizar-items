environ
vocabularies ORDERS_2,NATTRA_1,RELAT_1,STRUCT_0,XBOOLE_0,ORDERS_1,SUBSET_1,WELLORD1,RELAT_2,XXREAL_0,TARSKI,ZFMISC_1,FUNCT_1,SEQM_3,FUNCT_2,CAT_5,CAT_1,ALTCAT_1,PBOOLE,FUNCOP_1,BINOP_1,ORDERS_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,ORDERS_1,CAT_5,MCART_1,WELLORD1,MULTOP_1,PBOOLE,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,DOMAIN_1,STRUCT_0,ORDERS_2,CAT_1,ENS_1,ALTCAT_1,CKB1,CKB7,CKB8,CKB9,CKB10,CKB18,CKB20,CKB21,CKB22,CKB25,CKB29;
definitions TARSKI,ALTCAT_1,FUNCOP_1,XBOOLE_0,STRUCT_0,CKB1,CKB7,CKB9,CKB18,CKB22,CKB25,CKB29;
theorems RELAT_1,RELSET_1,ORDERS_2,TARSKI,ZFMISC_1,WELLORD1,SYSREL,FUNCT_1,FUNCT_2,MCART_1,ENS_1,PBOOLE,MULTOP_1,ALTCAT_1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB1,CKB5,CKB7,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB18,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35;
schemes TARSKI,CAT_5,ALTCAT_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,ORDERS_2,ENS_1,CAT_5,ALTCAT_1,CKB2,CKB3,CKB4,CKB6,CKB16,CKB17,CKB19,CKB28,CKB31,CKB36;
constructors RELAT_2,WELLORD1,PARTFUN1,DOMAIN_1,ORDERS_2,ENS_1,CAT_5,ALTCAT_1,MULTOP_1,PBOOLE,RELSET_1,CKB1,CKB7,CKB9,CKB18,CKB21,CKB22,CKB25,CKB29;
requirements BOOLE,SUBSET;
begin
reserve a for set;
reserve P for non  empty POSet_set;
definition
let P being non  empty POSet_set;
func POSCat P ->  strict  with_triple-like_morphisms Category means 
((((the carrier of it) = P & (for a,b being (Element of P) holds (for f being (Element of ( Funcs ( Carr P ) )) holds (f in ( MonFuncs (a,b) ) implies [ [ a,b ],f ] is (Morphism of it))))) & (for m being (Morphism of it) holds (ex a,b being (Element of P) st (ex f being (Element of ( Funcs ( Carr P ) )) st (m = [ [ a,b ],f ] & f in ( MonFuncs (a,b) )))))) & (for m1,m2 being (Morphism of it) holds (for a1,a2,a3 being (Element of P) holds (for f1,f2 being (Element of ( Funcs ( Carr P ) )) holds ((m1 = [ [ a1,a2 ],f1 ] & m2 = [ [ a2,a3 ],f2 ]) implies ( m2 * m1 ) = [ [ a1,a3 ],( f2 * f1 ) ])))));
existence
proof
deffunc F(Function,Function) = ( $1 * $2 );
defpred P[ (Element of P),(Element of P),set ]
 means
$3 in ( MonFuncs ($1,$2) );
A1: (for a,b,c being (Element of P) holds (for f,g being (Element of ( Funcs ( Carr P ) )) holds ((P[ a,b,f ] & P[ b,c,g ]) implies (F(g,f) in ( Funcs ( Carr P ) ) & P[ a,c,F(g,f) ]))))
proof
let a being (Element of P);
let b being (Element of P);
let c being (Element of P);
let f being (Element of ( Funcs ( Carr P ) ));
let g being (Element of ( Funcs ( Carr P ) ));
assume (f in ( MonFuncs (a,b) ) & g in ( MonFuncs (b,c) ));
then A2: ( g * f ) in ( MonFuncs (a,c) ) by CKB26:1;
( MonFuncs (a,c) ) c= ( Funcs ( Carr P ) ) by CKB34:1;
hence thesis by A2;
end;
A3: (for a being (Element of P) holds (ex f being (Element of ( Funcs ( Carr P ) )) st (P[ a,a,f ] & (for b being (Element of P) holds (for g being (Element of ( Funcs ( Carr P ) )) holds ((P[ a,b,g ] implies F(g,f) = g) & (P[ b,a,g ] implies F(f,g) = g)))))))
proof
let a being (Element of P);
set f = ( id (the carrier of a) );
(( MonFuncs (a,a) ) c= ( Funcs ( Carr P ) ) & f in ( MonFuncs (a,a) )) by CKB27:1,CKB34:1;
then reconsider f as (Element of ( Funcs ( Carr P ) ));
take f;
now
let b being (Element of P);
let g being (Element of ( Funcs ( Carr P ) ));
A4: (g in ( MonFuncs (b,a) ) implies ( f * g ) = g)
proof
assume g in ( MonFuncs (b,a) );
then (ex g9 being (Function of b,a) st ((g9 = g & g9 in ( Funcs ((the carrier of b),(the carrier of a)) )) & g9 is  monotone)) by CKB25:def 1;
then reconsider g as (Function of (the carrier of b),(the carrier of a));
( rng g ) c= (the carrier of a);
hence thesis by RELAT_1:53;
end;
(g in ( MonFuncs (a,b) ) implies ( g * f ) = g)
proof
assume g in ( MonFuncs (a,b) );
then (ex g9 being (Function of a,b) st ((g9 = g & g9 in ( Funcs ((the carrier of a),(the carrier of b)) )) & g9 is  monotone)) by CKB25:def 1;
then reconsider g as (Function of (the carrier of a),(the carrier of b));
( dom g ) = (the carrier of a) by FUNCT_2:def 1;
hence thesis by RELAT_1:51;
end;
hence ((g in ( MonFuncs (a,b) ) implies ( g * f ) = g) & (g in ( MonFuncs (b,a) ) implies ( f * g ) = g)) by A4;
end;
hence thesis by CKB27:1;
end;
A5: (for a,b,c,d being (Element of P) holds (for f,g,h being (Element of ( Funcs ( Carr P ) )) holds (((P[ a,b,f ] & P[ b,c,g ]) & P[ c,d,h ]) implies F(h,F(g,f)) = F(F(h,g),f)))) by RELAT_1:36;
(ex C being  with_triple-like_morphisms  strict Category st ((((the carrier of C) = P & (for a,b being (Element of P) holds (for f being (Element of ( Funcs ( Carr P ) )) holds (P[ a,b,f ] implies [ [ a,b ],f ] is (Morphism of C))))) & (for m being (Morphism of C) holds (ex a,b being (Element of P) st (ex f being (Element of ( Funcs ( Carr P ) )) st (m = [ [ a,b ],f ] & P[ a,b,f ]))))) & (for m1,m2 being (Morphism of C) holds (for a1,a2,a3 being (Element of P) holds (for f1,f2 being (Element of ( Funcs ( Carr P ) )) holds ((m1 = [ [ a1,a2 ],f1 ] & m2 = [ [ a2,a3 ],f2 ]) implies ( m2 * m1 ) = [ [ a1,a3 ],F(f2,f1) ])))))) from CAT_5:sch 1(A1,A3,A5);
hence thesis;
end;
uniqueness
proof
deffunc F((Element of ( Funcs ( Carr P ) )),(Element of ( Funcs ( Carr P ) ))) = ( $1 * $2 );
defpred P[ (Element of P),(Element of P),(Element of ( Funcs ( Carr P ) )) ]
 means
$3 in ( MonFuncs ($1,$2) );
A6:now
let a being (Element of P);
thus (ex f being (Element of ( Funcs ( Carr P ) )) st (P[ a,a,f ] & (for b being (Element of P) holds (for g being (Element of ( Funcs ( Carr P ) )) holds ((P[ a,b,g ] implies F(g,f) = g) & (P[ b,a,g ] implies F(f,g) = g))))))
proof
set f = ( id (the carrier of a) );
A7: f in ( MonFuncs (a,a) ) by CKB27:1;
( MonFuncs (a,a) ) c= ( Funcs ( Carr P ) ) by CKB34:1;
then reconsider f as (Element of ( Funcs ( Carr P ) )) by A7;
now
let b being (Element of P);
let g being (Element of ( Funcs ( Carr P ) ));
A8: (g in ( MonFuncs (b,a) ) implies ( f * g ) = g)
proof
assume g in ( MonFuncs (b,a) );
then (ex g9 being (Function of b,a) st ((g9 = g & g9 in ( Funcs ((the carrier of b),(the carrier of a)) )) & g9 is  monotone)) by CKB25:def 1;
then reconsider g as (Function of (the carrier of b),(the carrier of a));
( rng g ) c= (the carrier of a);
hence thesis by RELAT_1:53;
end;
(g in ( MonFuncs (a,b) ) implies ( g * f ) = g)
proof
assume g in ( MonFuncs (a,b) );
then (ex g9 being (Function of a,b) st ((g9 = g & g9 in ( Funcs ((the carrier of a),(the carrier of b)) )) & g9 is  monotone)) by CKB25:def 1;
then reconsider g as (Function of (the carrier of a),(the carrier of b));
( dom g ) = (the carrier of a) by FUNCT_2:def 1;
hence thesis by RELAT_1:51;
end;
hence ((g in ( MonFuncs (a,b) ) implies ( g * f ) = g) & (g in ( MonFuncs (b,a) ) implies ( f * g ) = g)) by A8;
end;
hence thesis by A7;
end;

end;
thus (for C1,C2 being  strict  with_triple-like_morphisms Category holds (((((((((the carrier of C1) = P & (for a,b being (Element of P) holds (for f being (Element of ( Funcs ( Carr P ) )) holds (P[ a,b,f ] implies [ [ a,b ],f ] is (Morphism of C1))))) & (for m being (Morphism of C1) holds (ex a,b being (Element of P) st (ex f being (Element of ( Funcs ( Carr P ) )) st (m = [ [ a,b ],f ] & P[ a,b,f ]))))) & (for m1,m2 being (Morphism of C1) holds (for a1,a2,a3 being (Element of P) holds (for f1,f2 being (Element of ( Funcs ( Carr P ) )) holds ((m1 = [ [ a1,a2 ],f1 ] & m2 = [ [ a2,a3 ],f2 ]) implies ( m2 * m1 ) = [ [ a1,a3 ],F(f2,f1) ]))))) & (the carrier of C2) = P) & (for a,b being (Element of P) holds (for f being (Element of ( Funcs ( Carr P ) )) holds (P[ a,b,f ] implies [ [ a,b ],f ] is (Morphism of C2))))) & (for m being (Morphism of C2) holds (ex a,b being (Element of P) st (ex f being (Element of ( Funcs ( Carr P ) )) st (m = [ [ a,b ],f ] & P[ a,b,f ]))))) & (for m1,m2 being (Morphism of C2) holds (for a1,a2,a3 being (Element of P) holds (for f1,f2 being (Element of ( Funcs ( Carr P ) )) holds ((m1 = [ [ a1,a2 ],f1 ] & m2 = [ [ a2,a3 ],f2 ]) implies ( m2 * m1 ) = [ [ a1,a3 ],F(f2,f1) ]))))) implies C1 = C2)) from CAT_5:sch 2(A6);
end;
end;
