environ
vocabularies ORDERS_2,NATTRA_1,RELAT_1,STRUCT_0,XBOOLE_0,ORDERS_1,SUBSET_1,WELLORD1,RELAT_2,XXREAL_0,TARSKI,ZFMISC_1,FUNCT_1,SEQM_3,FUNCT_2,CAT_5,CAT_1,ALTCAT_1,PBOOLE,FUNCOP_1,BINOP_1,ORDERS_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,ORDERS_1,CAT_5,MCART_1,WELLORD1,MULTOP_1,PBOOLE,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,DOMAIN_1,STRUCT_0,ORDERS_2,CAT_1,ENS_1,ALTCAT_1,CKB1,CKB7,CKB8,CKB9,CKB10;
definitions TARSKI,ALTCAT_1,FUNCOP_1,XBOOLE_0,STRUCT_0,CKB1,CKB7,CKB9;
theorems RELAT_1,RELSET_1,ORDERS_2,TARSKI,ZFMISC_1,WELLORD1,SYSREL,FUNCT_1,FUNCT_2,MCART_1,ENS_1,PBOOLE,MULTOP_1,ALTCAT_1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB1,CKB5,CKB7,CKB9;
schemes TARSKI,CAT_5,ALTCAT_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,ORDERS_2,ENS_1,CAT_5,ALTCAT_1,CKB2,CKB3,CKB4,CKB6;
constructors RELAT_2,WELLORD1,PARTFUN1,DOMAIN_1,ORDERS_2,ENS_1,CAT_5,ALTCAT_1,MULTOP_1,PBOOLE,RELSET_1,CKB1,CKB7,CKB9;
requirements BOOLE,SUBSET;
begin
theorem
(for DP being  discrete non empty RelStr holds (for x,y being (Element of DP) holds (x <= y iff x = y)))
proof
let DP being  discrete non empty RelStr;
let x being (Element of DP),y being (Element of DP);
hereby
assume x <= y;
then [ x,y ] in (the InternalRel of DP) by ORDERS_2:def 5;
then [ x,y ] in ( id (the carrier of DP) ) by CKB1:def 1;
hence x = y by RELAT_1:def 10;
end;
assume x = y;
then [ x,y ] in ( id (the carrier of DP) ) by RELAT_1:def 10;
then [ x,y ] in (the InternalRel of DP) by CKB1:def 1;
hence thesis by ORDERS_2:def 5;
end;
