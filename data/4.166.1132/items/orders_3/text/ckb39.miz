environ
vocabularies ORDERS_2,NATTRA_1,RELAT_1,STRUCT_0,XBOOLE_0,ORDERS_1,SUBSET_1,WELLORD1,RELAT_2,XXREAL_0,TARSKI,ZFMISC_1,FUNCT_1,SEQM_3,FUNCT_2,CAT_5,CAT_1,ALTCAT_1,PBOOLE,FUNCOP_1,BINOP_1,ORDERS_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,ORDERS_1,CAT_5,MCART_1,WELLORD1,MULTOP_1,PBOOLE,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,DOMAIN_1,STRUCT_0,ORDERS_2,CAT_1,ENS_1,ALTCAT_1,CKB1,CKB7,CKB8,CKB9,CKB10,CKB18,CKB20,CKB21,CKB22,CKB25,CKB29,CKB37;
definitions TARSKI,ALTCAT_1,FUNCOP_1,XBOOLE_0,STRUCT_0,CKB1,CKB7,CKB9,CKB18,CKB22,CKB25,CKB29,CKB37;
theorems RELAT_1,RELSET_1,ORDERS_2,TARSKI,ZFMISC_1,WELLORD1,SYSREL,FUNCT_1,FUNCT_2,MCART_1,ENS_1,PBOOLE,MULTOP_1,ALTCAT_1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB1,CKB5,CKB7,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB18,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB37;
schemes TARSKI,CAT_5,ALTCAT_1,XBOOLE_0,CKB38;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,ORDERS_2,ENS_1,CAT_5,ALTCAT_1,CKB2,CKB3,CKB4,CKB6,CKB16,CKB17,CKB19,CKB28,CKB31,CKB36;
constructors RELAT_2,WELLORD1,PARTFUN1,DOMAIN_1,ORDERS_2,ENS_1,CAT_5,ALTCAT_1,MULTOP_1,PBOOLE,RELSET_1,CKB1,CKB7,CKB9,CKB18,CKB21,CKB22,CKB25,CKB29,CKB37;
requirements BOOLE,SUBSET;
begin
reserve P for non  empty POSet_set;
reserve A for (Element of P);
scheme AltCatUniq { A() -> non  empty set,F(set,set) ->  functional set } : (for C1,C2 being  strict AltCatStr holds ((((the carrier of C1) = A() & (for i,j being (Element of A()) holds (( (the Arrows of C1) . (i,j) ) = F(i,j) & (for i,j,k being (Element of A()) holds ( (the Comp of C1) . (i,j,k) ) = ( FuncComp (F(i,j),F(j,k)) ))))) & ((the carrier of C2) = A() & (for i,j being (Element of A()) holds (( (the Arrows of C2) . (i,j) ) = F(i,j) & (for i,j,k being (Element of A()) holds ( (the Comp of C2) . (i,j,k) ) = ( FuncComp (F(i,j),F(j,k)) )))))) implies C1 = C2))
proof
let C1 being  strict AltCatStr;
let C2 being  strict AltCatStr;
assume that
A1: (the carrier of C1) = A()
and
A2: (for i,j being (Element of A()) holds (( (the Arrows of C1) . (i,j) ) = F(i,j) & (for i,j,k being (Element of A()) holds ( (the Comp of C1) . (i,j,k) ) = ( FuncComp (F(i,j),F(j,k)) ))))
and
A3: (the carrier of C2) = A()
and
A4: (for i,j being (Element of A()) holds (( (the Arrows of C2) . (i,j) ) = F(i,j) & (for i,j,k being (Element of A()) holds ( (the Comp of C2) . (i,j,k) ) = ( FuncComp (F(i,j),F(j,k)) ))));
A5:now
let i being set;
let j being set;
let k being set;
assume A6: ((i in A() & j in A()) & k in A());
hence ( (the Comp of C1) . (i,j,k) ) = ( FuncComp (F(i,j),F(j,k)) ) by A2
.= ( (the Comp of C2) . (i,j,k) ) by A4,A6;
end;
now
let i being (Element of A());
let j being (Element of A());
thus ( (the Arrows of C1) . (i,j) ) = F(i,j) by A2
.= ( (the Arrows of C2) . (i,j) ) by A4;
end;
then (the Arrows of C1) = (the Arrows of C2) by A1,A3,ALTCAT_1:7;
hence thesis by A1,A3,A5,ALTCAT_1:8;
end;
