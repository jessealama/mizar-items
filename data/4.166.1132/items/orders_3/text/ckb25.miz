environ
vocabularies ORDERS_2,NATTRA_1,RELAT_1,STRUCT_0,XBOOLE_0,ORDERS_1,SUBSET_1,WELLORD1,RELAT_2,XXREAL_0,TARSKI,ZFMISC_1,FUNCT_1,SEQM_3,FUNCT_2,CAT_5,CAT_1,ALTCAT_1,PBOOLE,FUNCOP_1,BINOP_1,ORDERS_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,ORDERS_1,CAT_5,MCART_1,WELLORD1,MULTOP_1,PBOOLE,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,DOMAIN_1,STRUCT_0,ORDERS_2,CAT_1,ENS_1,ALTCAT_1,CKB1,CKB7,CKB8,CKB9,CKB10,CKB18,CKB20,CKB21,CKB22;
definitions TARSKI,ALTCAT_1,FUNCOP_1,XBOOLE_0,STRUCT_0,CKB1,CKB7,CKB9,CKB18,CKB22;
theorems RELAT_1,RELSET_1,ORDERS_2,TARSKI,ZFMISC_1,WELLORD1,SYSREL,FUNCT_1,FUNCT_2,MCART_1,ENS_1,PBOOLE,MULTOP_1,ALTCAT_1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB1,CKB5,CKB7,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB18,CKB22,CKB23,CKB24;
schemes TARSKI,CAT_5,ALTCAT_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,ORDERS_2,ENS_1,CAT_5,ALTCAT_1,CKB2,CKB3,CKB4,CKB6,CKB16,CKB17,CKB19;
constructors RELAT_2,WELLORD1,PARTFUN1,DOMAIN_1,ORDERS_2,ENS_1,CAT_5,ALTCAT_1,MULTOP_1,PBOOLE,RELSET_1,CKB1,CKB7,CKB9,CKB18,CKB21,CKB22;
requirements BOOLE,SUBSET;
begin
reserve a for set;
reserve P for non  empty POSet_set;
reserve A for (Element of P);
reserve B for (Element of P);
definition
let A being RelStr;
let B being RelStr;
func MonFuncs (A,B) means 
:Def6: (a in it iff (ex f being (Function of A,B) st ((a = f & f in ( Funcs ((the carrier of A),(the carrier of B)) )) & f is  monotone)));
existence
proof
defpred P[ set ]
 means
(ex f being (Function of A,B) st (f = $1 & f is  monotone));
consider AB being set such that A1: (for a being set holds (a in AB iff (a in ( Funcs ((the carrier of A),(the carrier of B)) ) & P[ a ]))) from XBOOLE_0:sch 1;
take AB;
thus (a in AB iff (ex f being (Function of A,B) st ((a = f & f in ( Funcs ((the carrier of A),(the carrier of B)) )) & f is  monotone)))
proof
hereby
assume A2: a in AB;
then consider f being (Function of A,B) such that A3: (f = a & f is  monotone) by A1;
take f;
thus ((a = f & f in ( Funcs ((the carrier of A),(the carrier of B)) )) & f is  monotone) by A1,A2,A3;
end;
given f being (Function of A,B) such that
A4: ((a = f & f in ( Funcs ((the carrier of A),(the carrier of B)) )) & f is  monotone);

thus thesis by A1,A4;
end;

end;
uniqueness
proof
let A1 being set;
let A2 being set;
assume that
A5: (a in A1 iff (ex f being (Function of A,B) st ((a = f & f in ( Funcs ((the carrier of A),(the carrier of B)) )) & f is  monotone)))
and
A6: (a in A2 iff (ex f being (Function of A,B) st ((a = f & f in ( Funcs ((the carrier of A),(the carrier of B)) )) & f is  monotone)));
(a in A2 implies a in A1)
proof
assume a in A2;
then (ex f being (Function of A,B) st ((a = f & f in ( Funcs ((the carrier of A),(the carrier of B)) )) & f is  monotone)) by A6;
hence thesis by A5;
end;
then A7: A2 c= A1 by TARSKI:def 3;
(a in A1 implies a in A2)
proof
assume a in A1;
then (ex f being (Function of A,B) st ((a = f & f in ( Funcs ((the carrier of A),(the carrier of B)) )) & f is  monotone)) by A5;
hence thesis by A6;
end;
then A1 c= A2 by TARSKI:def 3;
hence A1 = A2 by A7,XBOOLE_0:def 10;
end;
end;
