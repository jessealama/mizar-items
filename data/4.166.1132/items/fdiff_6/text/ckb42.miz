environ
vocabularies NUMBERS,REAL_1,SUBSET_1,RCOMP_1,PARTFUN1,ARYTM_1,SIN_COS,RELAT_1,SQUARE_1,ARYTM_3,FUNCT_1,XXREAL_0,CARD_1,PREPOWER,POWER,TARSKI,FDIFF_1,VALUED_1,NEWTON,XBOOLE_0,TAYLOR_1,ORDINAL4,COMPLEX1,LIMFUNC1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,LIMFUNC1,RCOMP_1,NUMBERS,REAL_1,NAT_1,VALUED_1,SEQ_1,FDIFF_1,NEWTON,INT_2,PREPOWER,POWER,TAYLOR_1,SIN_COS,RFUNCT_1,SQUARE_1,XXREAL_0;
definitions SQUARE_1,TAYLOR_1,VALUED_1;
theorems FDIFF_2,TAYLOR_1,XBOOLE_1,XCMPLX_1,FDIFF_1,FUNCT_1,TARSKI,PREPOWER,RFUNCT_1,SQUARE_1,XREAL_1,XCMPLX_0,NEWTON,SIN_COS,SIN_COS2,WSIERP_1,FDIFF_4,POWER,ABSVALUE,VALUED_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,INT_1,MEMBERED,RCOMP_1,XBOOLE_0,VALUED_0;
constructors PARTFUN1,REAL_1,SQUARE_1,NAT_1,RCOMP_1,PARTFUN2,RFUNCT_1,LIMFUNC1,FDIFF_1,PREPOWER,POWER,SIN_COS,TAYLOR_1,SEQ_1,VALUED_1,RELSET_1,NEWTON;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve y for set;
reserve x for Real;
reserve a for Real;
reserve Z for  open (Subset of ( REAL ));
reserve f for (PartFunc of ( REAL ),( REAL ));
reserve f1 for (PartFunc of ( REAL ),( REAL ));
theorem
((((Z c= ( dom ( ( 2 / ( 3 * ( log (( number_e ),a) ) ) ) (#) ( ( #R ( 3 / 2 ) ) * ( f + ( ( exp_R ) * f1 ) ) ) ) ) & (for x holds (x in Z implies (( f . x ) = 1 & ( f1 . x ) = ( x * ( log (( number_e ),a) ) ))))) & a > ( 0 )) & a <> 1) implies (( ( 2 / ( 3 * ( log (( number_e ),a) ) ) ) (#) ( ( #R ( 3 / 2 ) ) * ( f + ( ( exp_R ) * f1 ) ) ) ) is_differentiable_on Z & (for x holds (x in Z implies ( ( ( ( 2 / ( 3 * ( log (( number_e ),a) ) ) ) (#) ( ( #R ( 3 / 2 ) ) * ( f + ( ( exp_R ) * f1 ) ) ) ) `| Z ) . x ) = ( ( a #R x ) * ( ( 1 + ( a #R x ) ) #R ( 1 / 2 ) ) )))))
proof
assume that
A1: Z c= ( dom ( ( 2 / ( 3 * ( log (( number_e ),a) ) ) ) (#) ( ( #R ( 3 / 2 ) ) * ( f + ( ( exp_R ) * f1 ) ) ) ) )
and
A2: (for x holds (x in Z implies (( f . x ) = 1 & ( f1 . x ) = ( x * ( log (( number_e ),a) ) ))))
and
A3: a > ( 0 )
and
A4: a <> 1;
A5: (for x holds (x in Z implies ( f . x ) = ( ( ( 0 ) * x ) + 1 ))) by A2;
A6: Z c= ( dom ( ( #R ( 3 / 2 ) ) * ( f + ( ( exp_R ) * f1 ) ) ) ) by A1,VALUED_1:def 5;
then (for y holds (y in Z implies y in ( dom ( f + ( ( exp_R ) * f1 ) ) ))) by FUNCT_1:11;
then A7: Z c= ( dom ( f + ( ( exp_R ) * f1 ) ) ) by TARSKI:def 3;
then A8: Z c= ( ( dom ( ( exp_R ) * f1 ) ) /\ ( dom f ) ) by VALUED_1:def 1;
then A9: Z c= ( dom ( ( exp_R ) * f1 ) ) by XBOOLE_1:18;
A10: (for x holds (x in Z implies ( f1 . x ) = ( x * ( log (( number_e ),a) ) ))) by A2;
then A11: ( ( exp_R ) * f1 ) is_differentiable_on Z by A3,A9,CKB16:1;
A12: Z c= ( dom f ) by A8,XBOOLE_1:18;
then A13: f is_differentiable_on Z by A5,FDIFF_1:23;
then A14: ( f + ( ( exp_R ) * f1 ) ) is_differentiable_on Z by A7,A11,FDIFF_1:18;
A15: (for x holds (x in Z implies ( ( f + ( ( exp_R ) * f1 ) ) . x ) > ( 0 )))
proof
let x;
assume A16: x in Z;
then ( ( f + ( ( exp_R ) * f1 ) ) . x ) = ( ( f . x ) + ( ( ( exp_R ) * f1 ) . x ) ) by A7,VALUED_1:def 1
.= ( ( f . x ) + ( ( exp_R ) . ( f1 . x ) ) ) by A9,A16,FUNCT_1:12
.= ( 1 + ( ( exp_R ) . ( f1 . x ) ) ) by A2,A16
.= ( 1 + ( ( exp_R ) . ( x * ( log (( number_e ),a) ) ) ) ) by A2,A16;
hence thesis by SIN_COS:54,XREAL_1:34;
end;
now
let x;
assume x in Z;
then (( f + ( ( exp_R ) * f1 ) ) is_differentiable_in x & ( ( f + ( ( exp_R ) * f1 ) ) . x ) > ( 0 )) by A14,A15,FDIFF_1:9;
hence ( ( #R ( 3 / 2 ) ) * ( f + ( ( exp_R ) * f1 ) ) ) is_differentiable_in x by TAYLOR_1:22;
end;
then A17: ( ( #R ( 3 / 2 ) ) * ( f + ( ( exp_R ) * f1 ) ) ) is_differentiable_on Z by A6,FDIFF_1:9;
A18: ( log (( number_e ),a) ) <> ( 0 )
proof
A19: ( number_e ) <> 1 by TAYLOR_1:11;
assume ( log (( number_e ),a) ) = ( 0 );
then ( log (( number_e ),a) ) = ( log (( number_e ),1) ) by SIN_COS2:13,TAYLOR_1:13;
then a = ( ( number_e ) to_power ( log (( number_e ),1) ) ) by A3,A19,POWER:def 3,TAYLOR_1:11
.= 1 by A19,POWER:def 3,TAYLOR_1:11;
hence contradiction by A4;
end;
(for x holds (x in Z implies ( ( ( ( 2 / ( 3 * ( log (( number_e ),a) ) ) ) (#) ( ( #R ( 3 / 2 ) ) * ( f + ( ( exp_R ) * f1 ) ) ) ) `| Z ) . x ) = ( ( a #R x ) * ( ( 1 + ( a #R x ) ) #R ( 1 / 2 ) ) )))
proof
let x;
A20: ( 3 * ( log (( number_e ),a) ) ) <> ( 0 ) by A18;
assume A21: x in Z;
then A22: ( ( ( f + ( ( exp_R ) * f1 ) ) `| Z ) . x ) = ( ( diff (f,x) ) + ( diff (( ( exp_R ) * f1 ),x) ) ) by A7,A13,A11,FDIFF_1:18
.= ( ( diff (f,x) ) + ( ( ( ( exp_R ) * f1 ) `| Z ) . x ) ) by A11,A21,FDIFF_1:def 7
.= ( ( ( f `| Z ) . x ) + ( ( ( ( exp_R ) * f1 ) `| Z ) . x ) ) by A13,A21,FDIFF_1:def 7
.= ( ( 0 ) + ( ( ( ( exp_R ) * f1 ) `| Z ) . x ) ) by A12,A5,A21,FDIFF_1:23
.= ( ( a #R x ) * ( log (( number_e ),a) ) ) by A3,A10,A9,A21,CKB16:1;
A23: ( ( f + ( ( exp_R ) * f1 ) ) . x ) = ( ( f . x ) + ( ( ( exp_R ) * f1 ) . x ) ) by A7,A21,VALUED_1:def 1
.= ( ( f . x ) + ( ( exp_R ) . ( f1 . x ) ) ) by A9,A21,FUNCT_1:12
.= ( 1 + ( ( exp_R ) . ( f1 . x ) ) ) by A2,A21
.= ( 1 + ( ( exp_R ) . ( x * ( log (( number_e ),a) ) ) ) ) by A2,A21
.= ( 1 + ( a #R x ) ) by A3,CKB5:1;
(( f + ( ( exp_R ) * f1 ) ) is_differentiable_in x & ( ( f + ( ( exp_R ) * f1 ) ) . x ) > ( 0 )) by A14,A15,A21,FDIFF_1:9;
then ( diff (( ( #R ( 3 / 2 ) ) * ( f + ( ( exp_R ) * f1 ) ) ),x) ) = ( ( ( 3 / 2 ) * ( ( ( f + ( ( exp_R ) * f1 ) ) . x ) #R ( ( 3 / 2 ) - 1 ) ) ) * ( diff (( f + ( ( exp_R ) * f1 ) ),x) ) ) by TAYLOR_1:22
.= ( ( ( 3 / 2 ) * ( ( 1 + ( a #R x ) ) #R ( 1 / 2 ) ) ) * ( ( a #R x ) * ( log (( number_e ),a) ) ) ) by A14,A21,A23,A22,FDIFF_1:def 7
.= ( ( ( ( 3 * ( log (( number_e ),a) ) ) / 2 ) * ( a #R x ) ) * ( ( 1 + ( a #R x ) ) #R ( 1 / 2 ) ) );
then ( ( ( ( 2 / ( 3 * ( log (( number_e ),a) ) ) ) (#) ( ( #R ( 3 / 2 ) ) * ( f + ( ( exp_R ) * f1 ) ) ) ) `| Z ) . x ) = ( ( 2 / ( 3 * ( log (( number_e ),a) ) ) ) * ( ( ( ( 3 * ( log (( number_e ),a) ) ) / 2 ) * ( a #R x ) ) * ( ( 1 + ( a #R x ) ) #R ( 1 / 2 ) ) ) ) by A1,A17,A21,FDIFF_1:20
.= ( ( ( ( 2 / ( 3 * ( log (( number_e ),a) ) ) ) * ( ( 3 * ( log (( number_e ),a) ) ) / 2 ) ) * ( a #R x ) ) * ( ( 1 + ( a #R x ) ) #R ( 1 / 2 ) ) )
.= ( ( 1 * ( a #R x ) ) * ( ( 1 + ( a #R x ) ) #R ( 1 / 2 ) ) ) by A20,XCMPLX_1:112
.= ( ( a #R x ) * ( ( 1 + ( a #R x ) ) #R ( 1 / 2 ) ) );
hence thesis;
end;
hence thesis by A1,A17,FDIFF_1:20;
end;
