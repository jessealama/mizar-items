environ
vocabularies INT_1,ABIAN,ARYTM_1,ZFMISC_1,FUNCT_1,RELAT_1,TARSKI,FUNCOP_1,FUNCT_2,FUNCT_6,XBOOLE_0,PBOOLE,SUBSET_1,NUMBERS,NAT_1,HILBERT1,CARD_1,FUNCT_3,CARD_3,MCART_1,PARTFUN1,FINSEQ_4,XBOOLEAN,QC_LANG1,HILBERT2,FUNCT_5,ARYTM_3,FUNCT_4,XXREAL_0,HILBERT3,XCMPLX_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,RELAT_1,FUNCT_1,PBOOLE,CARD_3,ABIAN,PARTFUN1,FUNCT_2,BINOP_1,NAT_1,XXREAL_0,FUNCT_3,FUNCOP_1,FUNCT_4,FUNCT_5,FUNCT_6,PRALG_1,PRALG_2,MSUALG_3,HILBERT1,HILBERT2,CKB29,CKB34;
definitions PBOOLE,FUNCT_1,FUNCT_2,TARSKI,HILBERT1,ABIAN,FUNCOP_1,RELAT_1,XBOOLE_0,BINOP_1,SUBSET_1,CKB29;
theorems PBOOLE,ZFMISC_1,MSUALG_3,FUNCT_2,RELAT_1,RELSET_1,FUNCT_1,FUNCT_3,TARSKI,FUNCOP_1,PARTFUN2,PRALG_2,CARD_3,FUNCT_6,MSSUBFAM,FUNCT_5,FUNCTOR0,CAT_2,HILBERT1,FUNCT_4,INT_1,TOPREAL6,PRALG_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,ABIAN,XREAL_1,XXREAL_0,CARD_1,PARTFUN1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB31,CKB32,CKB33;
schemes HILBERT2,FUNCT_2;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,FUNCT_2,FUNCOP_1,FUNCT_4,NUMBERS,XREAL_0,INT_1,PBOOLE,ABIAN,HILBERT1,FUNCT_7,RELSET_1,ZFMISC_1,MSSUBFAM,CKB1,CKB2,CKB18,CKB30;
constructors XXREAL_0,NAT_D,REALSET1,MSSUBFAM,ABIAN,CAT_2,PRALG_1,PRALG_2,MSUALG_3,HILBERT2,RELSET_1,CKB29;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve n for (Element of ( NAT ));
reserve p for (Element of ( HP-WFF ));
reserve q for (Element of ( HP-WFF ));
reserve r for (Element of ( HP-WFF ));
reserve s for (Element of ( HP-WFF ));
reserve V for SetValuation;
definition
let V;
func SetVal V -> (ManySortedSet of ( HP-WFF ))
means
:Def2: ((( it . ( VERUM ) ) = 1 & (for n holds ( it . ( prop n ) ) = ( V . n ))) & (for p holds (for q holds (( it . ( p '&' q ) ) = [: ( it . p ),( it . q ) :] & ( it . ( p => q ) ) = ( Funcs (( it . p ),( it . q )) )))));
existence
proof
deffunc F((Element of ( NAT ))) = ( V . $1 );
consider M being (ManySortedSet of ( HP-WFF )) such that A1: ((( M . ( VERUM ) ) = 1 & (for n holds ( M . ( prop n ) ) = F(n))) & (for p holds (for q holds (( M . ( p '&' q ) ) = [: ( M . p ),( M . q ) :] & ( M . ( p => q ) ) = ( Funcs (( M . p ),( M . q )) ))))) from HILBERT2:sch 4;
take M;
thus thesis by A1;
end;
uniqueness
proof
let M1 being (ManySortedSet of ( HP-WFF )),M2 being (ManySortedSet of ( HP-WFF ));
assume that
A2: ( M1 . ( VERUM ) ) = 1
and
A3: (for n holds ( M1 . ( prop n ) ) = ( V . n ))
and
A4: (for p holds (for q holds (( M1 . ( p '&' q ) ) = [: ( M1 . p ),( M1 . q ) :] & ( M1 . ( p => q ) ) = ( Funcs (( M1 . p ),( M1 . q )) ))))
and
A5: ( M2 . ( VERUM ) ) = 1
and
A6: (for n holds ( M2 . ( prop n ) ) = ( V . n ))
and
A7: (for p holds (for q holds (( M2 . ( p '&' q ) ) = [: ( M2 . p ),( M2 . q ) :] & ( M2 . ( p => q ) ) = ( Funcs (( M2 . p ),( M2 . q )) ))));
defpred P[ (Element of ( HP-WFF )) ]
 means
( M1 . $1 ) = ( M2 . $1 );
A8: (for r holds (for s holds ((P[ r ] & P[ s ]) implies (P[ ( r '&' s ) ] & P[ ( r => s ) ]))))
proof
let r;
let s;
assume that
A9: (( M1 . r ) = ( M2 . r ) & ( M1 . s ) = ( M2 . s ));
thus ( M1 . ( r '&' s ) ) = [: ( M2 . r ),( M2 . s ) :] by A4,A9
.= ( M2 . ( r '&' s ) ) by A7;
thus ( M1 . ( r => s ) ) = ( Funcs (( M2 . r ),( M2 . s )) ) by A4,A9
.= ( M2 . ( r => s ) ) by A7;
end;
A10: (for n holds P[ ( prop n ) ])
proof
let n;
thus ( M1 . ( prop n ) ) = ( V . n ) by A3
.= ( M2 . ( prop n ) ) by A6;
end;
A11: P[ ( VERUM ) ] by A2,A5;
(for r holds P[ r ]) from HILBERT2:sch 2(A11,A10,A8);
then (for r being set holds (r in ( HP-WFF ) implies ( M1 . r ) = ( M2 . r )));
hence M1 = M2 by PBOOLE:3;
end;
end;
