environ
vocabularies XBOOLE_0,SUBSET_1,TARSKI,ZFMISC_1,RELAT_1,FUNCT_1,MCART_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,CKB7,CKB8,CKB28,CKB31;
definitions TARSKI,XBOOLE_0,RELAT_1,CKB7,CKB8,CKB28,CKB31;
theorems TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,ORDINAL1,XBOOLE_1,FUNCT_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48;
schemes XBOOLE_0,FUNCT_1;
registrations XBOOLE_0,RELAT_1;
constructors TARSKI,ENUMSET1,SUBSET_1,FUNCT_1,CKB7,CKB8,CKB28,CKB31;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve x1 for set;
reserve x2 for set;
reserve x3 for set;
reserve y for set;
reserve z for set;
reserve X1 for set;
reserve X2 for set;
reserve X3 for set;
reserve xx1 for (Element of X1);
reserve xx2 for (Element of X2);
reserve xx3 for (Element of X3);
definition
let X1;
let X2;
let X3;
let x being (Element of [: X1,X2,X3 :]);
assume A1: ((X1 <> ( {} ) & X2 <> ( {} )) & X3 <> ( {} ));
func x `1 -> (Element of X1) means 
:Def5: (x = [ x1,x2,x3 ] implies it = x1);
existence
proof
consider xx1,xx2,xx3 such that A2: x = [ xx1,xx2,xx3 ] by A1,CKB40:1;
take xx1;
thus thesis by A2,CKB29:1;
end;
uniqueness
proof
let y being (Element of X1);
let z being (Element of X1);
assume A3: (x = [ x1,x2,x3 ] implies y = x1);
assume A4: (x = [ x1,x2,x3 ] implies z = x1);
consider xx1,xx2,xx3 such that A5: x = [ xx1,xx2,xx3 ] by A1,CKB40:1;
y = xx1 by A5,A3;
hence thesis by A5,A4;
end;
end;
