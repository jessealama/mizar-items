environ
vocabularies XBOOLE_0,SUBSET_1,TARSKI,ZFMISC_1,RELAT_1,FUNCT_1,MCART_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,CKB7,CKB8,CKB28;
definitions TARSKI,XBOOLE_0,RELAT_1,CKB7,CKB8,CKB28;
theorems TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,ORDINAL1,XBOOLE_1,FUNCT_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
schemes XBOOLE_0,FUNCT_1;
registrations XBOOLE_0,RELAT_1;
constructors TARSKI,ENUMSET1,SUBSET_1,FUNCT_1,CKB7,CKB8,CKB28;
requirements SUBSET,BOOLE;
begin
reserve v for set;
reserve x for set;
reserve y for set;
reserve z for set;
reserve X for set;
reserve Y for set;
reserve Y1 for set;
reserve Y2 for set;
reserve Y3 for set;
theorem
Th29: (X <> ( {} ) implies (ex v st (v in X & (not (ex x st (ex y st (ex z st ((x in X or y in X) & v = [ x,y,z ]))))))))
proof
assume X <> ( {} );
then consider Y such that A1: Y in X and A2: (not (ex Y1 st (ex Y2 st (ex Y3 st (((Y1 in Y2 & Y2 in Y3) & Y3 in Y) & (not Y1 misses X)))))) by CKB4:1;
take v = Y;
thus v in X by A1;
given x,y,z such that
A3: (x in X or y in X)
and
A4: v = [ x,y,z ];

set Y1 = { x,y };
set Y2 = { Y1,{ x } };
set Y3 = { Y2,z };
(x in Y1 & y in Y1) by TARSKI:def 2;
then A5: (not Y1 misses X) by A3,XBOOLE_0:3;
A6: Y3 in Y by A4,TARSKI:def 2;
(Y1 in Y2 & Y2 in Y3) by TARSKI:def 2;
hence contradiction by A2,A5,A6;
end;
