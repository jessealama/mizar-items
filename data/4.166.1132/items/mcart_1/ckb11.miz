environ
vocabularies XBOOLE_0,SUBSET_1,TARSKI,ZFMISC_1,RELAT_1,FUNCT_1,MCART_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,CKB7,CKB8;
definitions TARSKI,XBOOLE_0,RELAT_1,CKB7,CKB8;
theorems TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,ORDINAL1,XBOOLE_1,FUNCT_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
schemes XBOOLE_0,FUNCT_1;
registrations XBOOLE_0,RELAT_1;
constructors TARSKI,ENUMSET1,SUBSET_1,FUNCT_1,CKB7,CKB8;
requirements SUBSET,BOOLE;
begin
reserve v for set;
reserve x for set;
reserve y for set;
reserve X for set;
reserve Y for set;
reserve Y1 for set;
theorem
(X <> ( {} ) implies (ex v st (v in X & (not (ex x st (ex y st ((x in X or y in X) & v = [ x,y ])))))))
proof
assume X <> ( {} );
then consider Y such that A1: Y in X and A2: (not (ex Y1 st (Y1 in Y & (not Y1 misses X)))) by CKB2:1;
take v = Y;
thus v in X by A1;
given x,y such that
A3: (x in X or y in X)
and
A4: v = [ x,y ];

A5: { x,y } in Y by A4,TARSKI:def 2;
(x in { x,y } & y in { x,y }) by TARSKI:def 2;
then (not { x,y } misses X) by A3,XBOOLE_0:3;
hence contradiction by A2,A5;
end;
