environ
vocabularies ORDINAL6,CARD_1,RELAT_1,FUNCT_1,CLASSES2,NUMBERS,TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,ORDINAL2,WELLORD1,WELLORD2,ABIAN,CARD_3,MATROID0,ORDINAL4,NAT_1,ARYTM_3,CLASSES1,VALUED_0,AFINSQ_1,ORDINAL5,ZFMISC_1,FINSET_1,MESFUNC8,NAGATA_1,ORDINAL3,PRE_TOPC,AOFA_000;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,ORDINAL1,ORDINAL2,NAT_1,ORDINAL3,ABIAN,WELLORD1,WELLORD2,CARD_1,ORDINAL4,CARD_3,NAGATA_1,AFINSQ_1,CLASSES1,CLASSES2,NUMBERS,MATROID0,ORDINAL5,AOFA_000,CKB1,CKB25,CKB26,CKB32,CKB33,CKB41;
definitions TARSKI,XBOOLE_0,FUNCT_1,WELLORD1,ABIAN,ORDINAL1,ORDINAL2,ORDINAL4,CARD_3,ORDINAL5,CKB1,CKB25,CKB26,CKB32,CKB33,CKB41;
theorems XBOOLE_1,ZFMISC_1,RELAT_1,FUNCT_1,ORDINAL1,ORDINAL2,ORDINAL3,FUNCT_3,WELLORD1,WELLORD2,ORDERS_1,CARD_2,CARD_5,FUNCT_2,ORDINAL4,XBOOLE_0,TARSKI,ORDINAL5,NAT_1,CLASSES1,CLASSES2,CARD_1,AFINSQ_1,NAT_2,GRFUNC_1,ABIAN,CKB1,CKB4,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB25,CKB26,CKB31,CKB32,CKB33,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB51;
schemes NAT_1,ORDINAL1,ORDINAL2,ORDINAL4,TREES_2;
registrations XBOOLE_0,RELAT_1,RELSET_1,FUNCT_1,FINSET_1,FUNCT_2,ORDINAL1,ORDINAL2,CARD_1,WELLORD2,ORDINAL3,CLASSES2,CARD_5,ORDINAL4,CARD_LAR,ORDINAL5,CLASSES1,AFINSQ_1,SUBSET_1,CKB2,CKB3,CKB5,CKB6,CKB11,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB27,CKB28,CKB29,CKB30,CKB34,CKB35,CKB36,CKB48,CKB49,CKB50;
constructors WELLORD1,WELLORD2,CLASSES1,ABIAN,CARD_3,AFINSQ_1,ORDINAL3,ORDINAL5,NAT_1,RELSET_1,CKB1,CKB25,CKB32,CKB41;
requirements SUBSET,BOOLE,NUMERALS;
begin
reserve x for set;
reserve y for set;
theorem
ThN7: (for X,Y being  ordinal-membered set holds ((for x holds (for y holds ((x in X & y in Y) implies x in y))) implies ( numbering ( X \/ Y ) ) = ( ( numbering X ) ^ ( numbering Y ) )))
proof
let X being  ordinal-membered set,Y being  ordinal-membered set;
assume Z0: (for x holds (for y holds ((x in X & y in Y) implies x in y)));
set f = ( numbering X );
set g = ( numbering Y );
set h = ( numbering ( X \/ Y ) );
set a = ( ord-type X );
set b = ( ord-type Y );
set P = ( RelIncl ( a +^ b ) );
set Q = ( RelIncl ( X \/ Y ) );
set R = ( RelIncl ( ord-type ( X \/ Y ) ) );
A0: ((( On ( X \/ Y ) ) = ( X \/ Y ) & ( On X ) = X) & ( On Y ) = Y) by CKB7:1;
then I1: h is_isomorphism_of R,Q by CKB45:1;
II: ( f ^ g ) is_isomorphism_of P,Q by Z0,CKB51:1;
then I2: (P,Q are_isomorphic  & R,Q are_isomorphic ) by I1,WELLORD1:def 8;
then Q,R are_isomorphic  by WELLORD1:40;
then ( a +^ b ) = ( ord-type ( X \/ Y ) ) by I2,WELLORD1:42,WELLORD2:10;
hence ( numbering ( X \/ Y ) ) = ( ( numbering X ) ^ ( numbering Y ) ) by A0,II,I2,WELLORD1:def 9;
end;
