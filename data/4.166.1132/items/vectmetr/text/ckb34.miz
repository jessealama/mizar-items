environ
vocabularies NUMBERS,XBOOLE_0,METRIC_1,CONVEX1,SUBSET_1,REAL_1,CARD_1,XXREAL_0,RELAT_1,ARYTM_1,FINSEQ_1,STRUCT_0,PARTFUN1,ARYTM_3,COMPLEX1,CARD_3,ZFMISC_1,BINTREE1,TREES_2,FUNCT_1,TREES_4,ORDINAL4,CAT_1,TREES_1,POWER,INT_1,NAT_1,FINSEQ_2,MARGREL1,EUCLID,XBOOLEAN,MCART_1,BINTREE2,ABIAN,TARSKI,RELAT_2,FUNCT_2,RLVECT_1,ALGSTR_0,BINOP_1,UNIALG_1,SUPINF_2,XREAL_0,ORDINAL1,PRE_TOPC,GROUP_1,GROUP_2,VECTMETR;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,MCART_1,ORDINAL1,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,RELAT_2,XXREAL_0,INT_1,NAT_1,NAT_D,POWER,ABIAN,SERIES_1,RELAT_1,RELSET_1,MARGREL1,BINOP_1,DOMAIN_1,FUNCT_1,PARTFUN1,FUNCT_2,STRUCT_0,ALGSTR_0,PRE_TOPC,FINSEQ_1,FINSEQ_2,FINSEQ_4,BINARITH,TREES_1,TREES_2,TREES_4,BINTREE1,BINTREE2,RVSUM_1,RLVECT_1,GROUP_1,GROUP_2,TOPS_2,METRIC_1,EUCLID,CKB1,CKB2,CKB6,CKB10,CKB11,CKB19,CKB22,CKB23,CKB24,CKB26,CKB30,CKB32;
definitions FUNCT_2,STRUCT_0,TARSKI,XBOOLE_0,MARGREL1,XBOOLEAN,RLVECT_1,RVSUM_1,EUCLID,FINSEQ_2,ALGSTR_0,VALUED_1,CKB1,CKB2,CKB6,CKB10,CKB22,CKB23,CKB24,CKB30,CKB32;
theorems STRUCT_0,TARSKI,MCART_1,NAT_1,NAT_2,ZFMISC_1,BINOP_1,RELAT_1,FUNCT_1,FUNCT_2,POWER,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSEQ_5,BINARI_2,BINARI_3,ABSVALUE,TOPS_2,FUNCOP_1,BINTREE2,PRE_FF,RLVECT_1,METRIC_1,RVSUM_1,EUCLID,GROUP_1,GROUP_2,RELAT_2,XCMPLX_1,PARTFUN1,INT_1,ORDERS_1,XREAL_1,FINSEQOP,XXREAL_0,FINSOP_1,NAT_D,ORDINAL1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB6,CKB8,CKB10,CKB13,CKB15,CKB17,CKB22,CKB23,CKB24,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32;
schemes BINOP_1,NAT_1,FINSEQ_2,BINTREE2,RELSET_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,FUNCT_2,NUMBERS,XXREAL_0,NAT_1,FINSEQ_1,BINOP_2,MEMBERED,MARGREL1,FINSEQ_2,TREES_2,STRUCT_0,METRIC_1,GROUP_2,BINTREE1,BINTREE2,VALUED_0,XREAL_0,RELAT_1,INT_1,CARD_1,CKB4,CKB5,CKB7,CKB9,CKB12,CKB14,CKB16,CKB18,CKB19,CKB20,CKB21,CKB25,CKB33;
constructors XXREAL_0,REAL_1,NAT_1,NAT_D,FINSEQOP,FINSEQ_4,FINSOP_1,SERIES_1,REALSET1,BINARITH,ABIAN,TOPS_2,GROUP_2,GRCAT_1,EUCLID,BINTREE2,BINOP_2,RVSUM_1,RELSET_1,CKB1,CKB2,CKB6,CKB10,CKB11,CKB19,CKB22,CKB23,CKB24,CKB30,CKB32;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
registration
let n being (Element of ( NAT ));
cluster ( IsomGroup n ) ->  associative  Group-like;
coherence
proof
now
let x being (Element of ( IsomGroup n ));
let y being (Element of ( IsomGroup n ));
let z being (Element of ( IsomGroup n ));
x in (the carrier of ( IsomGroup n ));
then A1: x in ( ISOM ( RLMSpace n ) ) by CKB32:def 1;
then reconsider x1 = x as  onto  isometric (Function of ( RLMSpace n ),( RLMSpace n )) by CKB10:def 1;
y in (the carrier of ( IsomGroup n ));
then A2: y in ( ISOM ( RLMSpace n ) ) by CKB32:def 1;
then reconsider y1 = y as  onto  isometric (Function of ( RLMSpace n ),( RLMSpace n )) by CKB10:def 1;
A3: ( x1 * y1 ) in ( ISOM ( RLMSpace n ) ) by CKB10:def 1;
z in (the carrier of ( IsomGroup n ));
then A4: z in ( ISOM ( RLMSpace n ) ) by CKB32:def 1;
then reconsider z1 = z as  onto  isometric (Function of ( RLMSpace n ),( RLMSpace n )) by CKB10:def 1;
A5: ( y1 * z1 ) in ( ISOM ( RLMSpace n ) ) by CKB10:def 1;
thus ( ( x * y ) * z ) = ( (the multF of ( IsomGroup n )) . (( x1 * y1 ),z) ) by A1,A2,CKB32:def 1
.= ( ( x1 * y1 ) * z1 ) by A4,A3,CKB32:def 1
.= ( x1 * ( y1 * z1 ) ) by RELAT_1:36
.= ( (the multF of ( IsomGroup n )) . (x,( y1 * z1 )) ) by A1,A5,CKB32:def 1
.= ( x * ( y * z ) ) by A2,A4,CKB32:def 1;
end;
hence ( IsomGroup n ) is  associative by GROUP_1:def 3;
(ex e being (Element of ( IsomGroup n )) st (for h being (Element of ( IsomGroup n )) holds ((( h * e ) = h & ( e * h ) = h) & (ex g being (Element of ( IsomGroup n )) st (( h * g ) = e & ( g * h ) = e)))))
proof
A6: ( id ( RLMSpace n ) ) in ( ISOM ( RLMSpace n ) ) by CKB10:def 1;
then reconsider e = ( id ( RLMSpace n ) ) as (Element of ( IsomGroup n )) by CKB32:def 1;
take e;
let h being (Element of ( IsomGroup n ));
h in (the carrier of ( IsomGroup n ));
then A7: h in ( ISOM ( RLMSpace n ) ) by CKB32:def 1;
then reconsider h1 = h as  onto  isometric (Function of ( RLMSpace n ),( RLMSpace n )) by CKB10:def 1;
thus ( h * e ) = ( h1 * ( id (the carrier of ( RLMSpace n )) ) ) by A6,A7,CKB32:def 1
.= h by FUNCT_2:17;
thus ( e * h ) = ( ( id (the carrier of ( RLMSpace n )) ) * h1 ) by A6,A7,CKB32:def 1
.= h by FUNCT_2:17;
A8: ( rng h1 ) = ( [#] ( RLMSpace n ) ) by FUNCT_2:def 3;
A9: ( h1 " ) in ( ISOM ( RLMSpace n ) ) by CKB10:def 1;
then reconsider g = ( h1 " ) as (Element of ( IsomGroup n )) by CKB32:def 1;
take g;
thus ( h * g ) = ( h1 * ( h1 " ) ) by A7,A9,CKB32:def 1
.= e by A8,TOPS_2:52;
thus ( g * h ) = ( ( h1 " ) * h1 ) by A7,A9,CKB32:def 1
.= ( id ( dom h1 ) ) by A8,TOPS_2:52
.= e by FUNCT_2:def 1;
end;
hence thesis by GROUP_1:def 2;
end;
end;
