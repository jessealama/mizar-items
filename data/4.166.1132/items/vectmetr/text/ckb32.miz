environ
vocabularies NUMBERS,XBOOLE_0,METRIC_1,CONVEX1,SUBSET_1,REAL_1,CARD_1,XXREAL_0,RELAT_1,ARYTM_1,FINSEQ_1,STRUCT_0,PARTFUN1,ARYTM_3,COMPLEX1,CARD_3,ZFMISC_1,BINTREE1,TREES_2,FUNCT_1,TREES_4,ORDINAL4,CAT_1,TREES_1,POWER,INT_1,NAT_1,FINSEQ_2,MARGREL1,EUCLID,XBOOLEAN,MCART_1,BINTREE2,ABIAN,TARSKI,RELAT_2,FUNCT_2,RLVECT_1,ALGSTR_0,BINOP_1,UNIALG_1,SUPINF_2,XREAL_0,ORDINAL1,PRE_TOPC,GROUP_1,GROUP_2,VECTMETR;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,MCART_1,ORDINAL1,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,RELAT_2,XXREAL_0,INT_1,NAT_1,NAT_D,POWER,ABIAN,SERIES_1,RELAT_1,RELSET_1,MARGREL1,BINOP_1,DOMAIN_1,FUNCT_1,PARTFUN1,FUNCT_2,STRUCT_0,ALGSTR_0,PRE_TOPC,FINSEQ_1,FINSEQ_2,FINSEQ_4,BINARITH,TREES_1,TREES_2,TREES_4,BINTREE1,BINTREE2,RVSUM_1,RLVECT_1,GROUP_1,GROUP_2,TOPS_2,METRIC_1,EUCLID,CKB1,CKB2,CKB6,CKB10,CKB11,CKB19,CKB22,CKB23,CKB24,CKB26,CKB30;
definitions FUNCT_2,STRUCT_0,TARSKI,XBOOLE_0,MARGREL1,XBOOLEAN,RLVECT_1,RVSUM_1,EUCLID,FINSEQ_2,ALGSTR_0,VALUED_1,CKB1,CKB2,CKB6,CKB10,CKB22,CKB23,CKB24,CKB30;
theorems STRUCT_0,TARSKI,MCART_1,NAT_1,NAT_2,ZFMISC_1,BINOP_1,RELAT_1,FUNCT_1,FUNCT_2,POWER,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSEQ_5,BINARI_2,BINARI_3,ABSVALUE,TOPS_2,FUNCOP_1,BINTREE2,PRE_FF,RLVECT_1,METRIC_1,RVSUM_1,EUCLID,GROUP_1,GROUP_2,RELAT_2,XCMPLX_1,PARTFUN1,INT_1,ORDERS_1,XREAL_1,FINSEQOP,XXREAL_0,FINSOP_1,NAT_D,ORDINAL1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB6,CKB8,CKB10,CKB13,CKB15,CKB17,CKB22,CKB23,CKB24,CKB27,CKB28,CKB29,CKB30,CKB31;
schemes BINOP_1,NAT_1,FINSEQ_2,BINTREE2,RELSET_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,FUNCT_2,NUMBERS,XXREAL_0,NAT_1,FINSEQ_1,BINOP_2,MEMBERED,MARGREL1,FINSEQ_2,TREES_2,STRUCT_0,METRIC_1,GROUP_2,BINTREE1,BINTREE2,VALUED_0,XREAL_0,RELAT_1,INT_1,CARD_1,CKB4,CKB5,CKB7,CKB9,CKB12,CKB14,CKB16,CKB18,CKB19,CKB20,CKB21,CKB25;
constructors XXREAL_0,REAL_1,NAT_1,NAT_D,FINSEQOP,FINSEQ_4,FINSOP_1,SERIES_1,REALSET1,BINARITH,ABIAN,TOPS_2,GROUP_2,GRCAT_1,EUCLID,BINTREE2,BINOP_2,RVSUM_1,RELSET_1,CKB1,CKB2,CKB6,CKB10,CKB11,CKB19,CKB22,CKB23,CKB24,CKB30;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
definition
let n being (Element of ( NAT ));
func IsomGroup n ->  strict multMagma means 
:Def9: ((the carrier of it) = ( ISOM ( RLMSpace n ) ) & (for f,g being Function holds ((f in ( ISOM ( RLMSpace n ) ) & g in ( ISOM ( RLMSpace n ) )) implies ( (the multF of it) . (f,g) ) = ( f * g ))));
existence
proof
defpred P[ set,set,set ]
 means
(ex f,g being Function st ((f = $1 & g = $2) & $3 = ( f * g )));
A1: (for x,y being (Element of ( ISOM ( RLMSpace n ) )) holds (ex z being (Element of ( ISOM ( RLMSpace n ) )) st P[ x,y,z ]))
proof
let x being (Element of ( ISOM ( RLMSpace n ) ));
let y being (Element of ( ISOM ( RLMSpace n ) ));
reconsider x1 = x as  onto  isometric (Function of ( RLMSpace n ),( RLMSpace n )) by CKB10:def 1;
reconsider y1 = y as  onto  isometric (Function of ( RLMSpace n ),( RLMSpace n )) by CKB10:def 1;
reconsider z = ( x1 * y1 ) as (Element of ( ISOM ( RLMSpace n ) )) by CKB10:def 1;
take z;
take x1;
take y1;
thus thesis;
end;
consider o being (BinOp of ( ISOM ( RLMSpace n ) )) such that A2: (for a,b being (Element of ( ISOM ( RLMSpace n ) )) holds P[ a,b,( o . (a,b) ) ]) from BINOP_1:sch 3(A1);
take G = multMagma (# ( ISOM ( RLMSpace n ) ),o #);
(for f,g being Function holds ((f in ( ISOM ( RLMSpace n ) ) & g in ( ISOM ( RLMSpace n ) )) implies ( (the multF of G) . (f,g) ) = ( f * g )))
proof
let f being Function;
let g being Function;
assume (f in ( ISOM ( RLMSpace n ) ) & g in ( ISOM ( RLMSpace n ) ));
then (ex f1,g1 being Function st ((f1 = f & g1 = g) & ( o . (f,g) ) = ( f1 * g1 ))) by A2;
hence thesis;
end;
hence thesis;
end;
uniqueness
proof
set V = ( RLMSpace n );
let G1 being  strict multMagma;
let G2 being  strict multMagma;
assume that
A3: (the carrier of G1) = ( ISOM V )
and
A4: (for f,g being Function holds ((f in ( ISOM V ) & g in ( ISOM V )) implies ( (the multF of G1) . (f,g) ) = ( f * g )))
and
A5: (the carrier of G2) = ( ISOM V )
and
A6: (for f,g being Function holds ((f in ( ISOM V ) & g in ( ISOM V )) implies ( (the multF of G2) . (f,g) ) = ( f * g )));
now
let f being (Element of G1);
let g being (Element of G1);
reconsider f1 = f as (Function of ( RLMSpace n ),( RLMSpace n )) by A3,CKB10:def 1;
reconsider g1 = g as (Function of ( RLMSpace n ),( RLMSpace n )) by A3,CKB10:def 1;
thus ( (the multF of G1) . (f,g) ) = ( f1 * g1 ) by A3,A4
.= ( (the multF of G2) . (f,g) ) by A3,A6;
end;
hence thesis by A3,A5,BINOP_1:2;
end;
end;
