environ
vocabularies ORDERS_2,ARYTM_0,RELAT_1,SUBSET_1,XXREAL_0,XBOOLE_0,RELAT_2,STRUCT_0,LATTICE3,YELLOW_0,EQREL_1,LATTICES,REWRITE1,WAYBEL_0,TARSKI,FINSET_1,XXREAL_2,XBOOLEAN,FUNCT_1,CAT_1,WELLORD1,SEQM_3,WAYBEL_1,PBOOLE,WAYBEL_5,FUNCT_6,FUNCOP_1,FINSEQ_4,YELLOW_2,ORDINAL2,CARD_3,ZFMISC_1,YELLOW_7,CARD_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,FUNCT_2,FINSET_1,CARD_3,FUNCT_6,PRALG_1,PBOOLE,FUNCOP_1,STRUCT_0,ORDERS_2,LATTICE3,YELLOW_0,YELLOW_2,WAYBEL_1,WAYBEL_0,WAYBEL_5,CKB1;
definitions TARSKI,RELAT_2,ORDERS_2,LATTICE3,YELLOW_0,WAYBEL_0,WAYBEL_1,WAYBEL_5,XBOOLE_0,FUNCT_6;
theorems RELAT_1,RELAT_2,FUNCT_1,FUNCT_2,CARD_3,ORDERS_2,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_2,WAYBEL_1,WAYBEL_5,PBOOLE,FUNCT_6,FUNCOP_1,PRALG_2,YELLOW_5,PRALG_1,XBOOLE_0,FUNCT_5,PARTFUN1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8;
schemes CLASSES1,FUNCT_2;
registrations RELSET_1,FUNCOP_1,FINSET_1,CARD_3,PBOOLE,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,WAYBEL_1,WAYBEL_5,SUBSET_1,FUNCT_1,CARD_1,ORDINAL1,CKB9,CKB10,CKB11,CKB12;
constructors DOMAIN_1,LATTICE3,PRALG_1,PRALG_2,ORDERS_3,WAYBEL_1,WAYBEL_5,RELSET_1;
requirements SUBSET,BOOLE,NUMERALS;
begin
theorem
Th8: (for L being RelStr holds (for x being (Element of L) holds (for X being set holds ((x is_<=_than X iff ( x ~ ) is_>=_than X) & (x is_>=_than X iff ( x ~ ) is_<=_than X)))))
proof
let L being RelStr;
let x being (Element of L);
let X being set;
A1:now
let L being RelStr;
let x being (Element of L);
let X being set;
assume A2: x is_<=_than X;
thus ( x ~ ) is_>=_than X
proof
let a being (Element of ( L opp ));
assume a in X;
then (( ( ~ a ) ~ ) = ( ~ a ) & x <= ( ~ a )) by A2,LATTICE3:def 8;
hence thesis by LATTICE3:9;
end;

end;
A3:now
let L being RelStr;
let x being (Element of L);
let X being set;
assume A4: x is_>=_than X;
thus ( x ~ ) is_<=_than X
proof
let a being (Element of ( L opp ));
assume a in X;
then (( ( ~ a ) ~ ) = ( ~ a ) & x >= ( ~ a )) by A4,LATTICE3:def 9;
hence thesis by LATTICE3:9;
end;

end;
(( ( x ~ ) ~ ) is_<=_than X implies x is_<=_than X) by YELLOW_0:2;
hence (x is_<=_than X iff ( x ~ ) is_>=_than X) by A1,A3;
(( ( x ~ ) ~ ) is_>=_than X implies x is_>=_than X) by YELLOW_0:2;
hence thesis by A1,A3;
end;
