environ
vocabularies NUMBERS,REAL_1,SUBSET_1,NAT_1,XXREAL_0,POWER,ARYTM_3,RELAT_1,CARD_1,SQUARE_1,SEQ_1,FUNCT_1,ARYTM_1,ASYMPT_0,FUNCT_2,INT_1,VALUED_1,TARSKI,XREAL_0,ORDINAL1,SEQ_2,ORDINAL2,COMPLEX1,CARD_3,SERIES_1,FUNCOP_1,REALSET1,VALUED_0,NEWTON,FINSEQ_1,FINSEQ_2,ORDINAL4,XBOOLE_0,ASYMPT_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,COMPLEX1,REAL_1,FUNCT_1,FUNCT_2,INT_1,NAT_1,VALUED_1,SEQ_1,SEQ_2,NEWTON,POWER,SERIES_1,FUNCOP_1,SQUARE_1,FINSEQ_1,FINSEQ_2,RVSUM_1,ASYMPT_0,CKB5,CKB9,CKB10,CKB33,CKB41;
definitions ASYMPT_0,SQUARE_1,VALUED_1,XCMPLX_0,CKB5,CKB9,CKB10,CKB33,CKB41;
theorems TARSKI,FUNCT_2,INT_1,NAT_1,SEQ_1,SQUARE_1,SEQ_2,ABSVALUE,FUNCOP_1,POWER,NEWTON,EULER_2,SERIES_1,SEQM_3,FINSEQ_1,PRE_FF,RVSUM_1,FINSEQ_2,ASYMPT_0,XREAL_0,XBOOLE_0,XCMPLX_0,XCMPLX_1,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,VALUED_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77;
schemes FUNCT_2,SEQ_1,NAT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_2,ASYMPT_0,SQUARE_1,VALUED_0,VALUED_1,FUNCT_2,POWER,CKB6,CKB11,CKB12,CKB34,CKB42;
constructors PARTFUN1,DOMAIN_1,REAL_1,SQUARE_1,NAT_1,NAT_D,SEQ_2,SEQM_3,RVSUM_1,NEWTON,PREPOWER,SERIES_1,SEQ_1,ASYMPT_0,RELSET_1,FUNCOP_1,BINOP_2,CKB5,CKB9,CKB10,CKB33,CKB41;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve N for (Element of ( NAT ));
theorem
(for f being Real_Sequence holds ((for n holds (n > ( 0 ) implies ( f . n ) = ( n to_power ( sqrt n ) ))) implies (ex s,s1 being  eventually-positive Real_Sequence st (((s = f & s1 = ( seq_a^ (2,1,( 0 )) )) & ( Big_Oh s ) c= ( Big_Oh s1 )) & (not ( Big_Oh s ) = ( Big_Oh s1 ))))))
proof
set g = ( seq_a^ (2,1,( 0 )) );
let f being Real_Sequence;
assume that
A1: (for n holds (n > ( 0 ) implies ( f . n ) = ( n to_power ( sqrt n ) )));
A2: f is  eventually-positive
proof
take 1;
let n;
assume A3: n >= 1;
then ( f . n ) = ( n to_power ( sqrt n ) ) by A1;
hence thesis by A3,POWER:34;
end;
set h = ( f /" g );
reconsider f as  eventually-positive Real_Sequence by A2;
reconsider g as  eventually-positive Real_Sequence;
take f;
take g;
consider N such that A4: (for n holds (n >= N implies ( n - ( ( sqrt n ) * ( log (2,n) ) ) ) > ( n / 2 ))) by CKB74:1;
A5:now
let p being  real number;
assume A6: p > ( 0 );
set N1 = ( max (N,( max (( 2 * [/ ( log (2,( 1 / p )) ) \] ),2) )) );
A7: N1 >= N by XXREAL_0:25;
A8: N1 is Integer
proof
per cases  by XXREAL_0:16;
suppose N1 = N;

hence thesis;
end;
suppose N1 = ( max (( 2 * [/ ( log (2,( 1 / p )) ) \] ),2) );

hence thesis by XXREAL_0:16;
end;
end;
A9: N1 >= ( max (( 2 * [/ ( log (2,( 1 / p )) ) \] ),2) ) by XXREAL_0:25;
( max (( 2 * [/ ( log (2,( 1 / p )) ) \] ),2) ) >= ( 2 * [/ ( log (2,( 1 / p )) ) \] ) by XXREAL_0:25;
then A10: N1 >= ( 2 * [/ ( log (2,( 1 / p )) ) \] ) by A9,XXREAL_0:2;
reconsider N1 as (Element of ( NAT )) by A7,A8,INT_1:3;
take N1;
let n;
A11: ( h . n ) = ( ( f . n ) / ( g . n ) ) by CKB13:1;
A12: [/ ( log (2,( 1 / p )) ) \] >= ( log (2,( 1 / p )) ) by INT_1:def 7;
assume A13: n >= N1;
then n >= ( 2 * [/ ( log (2,( 1 / p )) ) \] ) by A10,XXREAL_0:2;
then ( n / 2 ) >= [/ ( log (2,( 1 / p )) ) \] by XREAL_1:77;
then ( n / 2 ) >= ( log (2,( 1 / p )) ) by A12,XXREAL_0:2;
then ( - ( n / 2 ) ) <= ( - ( log (2,( 1 / p )) ) ) by XREAL_1:24;
then ( 2 to_power ( - ( n / 2 ) ) ) <= ( 2 to_power ( - ( log (2,( 1 / p )) ) ) ) by PRE_FF:8;
then ( 2 to_power ( - ( n / 2 ) ) ) <= ( 1 / ( 2 to_power ( log (2,( 1 / p )) ) ) ) by POWER:28;
then A14: ( 2 to_power ( - ( n / 2 ) ) ) <= ( 1 / ( 1 / p ) ) by A6,POWER:def 3;
A15: ( g . n ) = ( 2 to_power ( ( 1 * n ) + ( 0 ) ) ) by CKB5:def 1
.= ( 2 to_power n );
A16: ( max (( 2 * [/ ( log (2,( 1 / p )) ) \] ),2) ) >= 2 by XXREAL_0:25;
then ( f . n ) = ( n to_power ( sqrt n ) ) by A1,A9,A13
.= ( 2 to_power ( ( sqrt n ) * ( log (2,n) ) ) ) by A9,A16,A13,CKB7:1;
then A17: ( h . n ) = ( 2 to_power ( ( ( sqrt n ) * ( log (2,n) ) ) - n ) ) by A11,A15,POWER:29
.= ( 2 to_power ( - ( n - ( ( sqrt n ) * ( log (2,n) ) ) ) ) );
then A18: ( h . n ) > ( 0 ) by POWER:34;
n >= N by A7,A13,XXREAL_0:2;
then ( n - ( ( sqrt n ) * ( log (2,n) ) ) ) > ( n / 2 ) by A4;
then ( - ( n - ( ( sqrt n ) * ( log (2,n) ) ) ) ) < ( - ( n / 2 ) ) by XREAL_1:24;
then ( 2 to_power ( - ( n - ( ( sqrt n ) * ( log (2,n) ) ) ) ) ) < ( 2 to_power ( - ( n / 2 ) ) ) by POWER:39;
then ( h . n ) < p by A17,A14,XXREAL_0:2;
hence ( abs ( ( h . n ) - ( 0 ) ) ) < p by A18,ABSVALUE:def 1;
end;
then A19: h is  convergent by SEQ_2:def 6;
then A20: ( lim h ) = ( 0 ) by A5,SEQ_2:def 7;
then (not g in ( Big_Oh f )) by A19,ASYMPT_0:16;
then A21: (not f in ( Big_Omega g )) by ASYMPT_0:19;
f in ( Big_Oh g ) by A19,A20,ASYMPT_0:16;
hence thesis by A21,CKB15:1;
end;
