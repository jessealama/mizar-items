environ
vocabularies NUMBERS,REAL_1,SUBSET_1,NAT_1,XXREAL_0,POWER,ARYTM_3,RELAT_1,CARD_1,SQUARE_1,SEQ_1,FUNCT_1,ARYTM_1,ASYMPT_0,FUNCT_2,INT_1,VALUED_1,TARSKI,XREAL_0,ORDINAL1,SEQ_2,ORDINAL2,COMPLEX1,CARD_3,SERIES_1,FUNCOP_1,REALSET1,VALUED_0,NEWTON,FINSEQ_1,FINSEQ_2,ORDINAL4,XBOOLE_0,ASYMPT_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,COMPLEX1,REAL_1,FUNCT_1,FUNCT_2,INT_1,NAT_1,VALUED_1,SEQ_1,SEQ_2,NEWTON,POWER,SERIES_1,FUNCOP_1,SQUARE_1,FINSEQ_1,FINSEQ_2,RVSUM_1,ASYMPT_0,CKB5,CKB9,CKB10,CKB33,CKB41;
definitions ASYMPT_0,SQUARE_1,VALUED_1,XCMPLX_0,CKB5,CKB9,CKB10,CKB33,CKB41;
theorems TARSKI,FUNCT_2,INT_1,NAT_1,SEQ_1,SQUARE_1,SEQ_2,ABSVALUE,FUNCOP_1,POWER,NEWTON,EULER_2,SERIES_1,SEQM_3,FINSEQ_1,PRE_FF,RVSUM_1,FINSEQ_2,ASYMPT_0,XREAL_0,XBOOLE_0,XCMPLX_0,XCMPLX_1,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,VALUED_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55;
schemes FUNCT_2,SEQ_1,NAT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_2,ASYMPT_0,SQUARE_1,VALUED_0,VALUED_1,FUNCT_2,POWER,CKB6,CKB11,CKB12,CKB34,CKB42;
constructors PARTFUN1,DOMAIN_1,REAL_1,SQUARE_1,NAT_1,NAT_D,SEQ_2,SEQM_3,RVSUM_1,NEWTON,PREPOWER,SERIES_1,SEQ_1,ASYMPT_0,RELSET_1,FUNCOP_1,BINOP_2,CKB5,CKB9,CKB10,CKB33,CKB41;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve e for Real;
reserve n for (Element of ( NAT ));
theorem
(for e being Real holds (for g being Real_Sequence holds ((e < 1 & (for n holds (n > 1 implies ( g . n ) = ( ( n to_power 2 ) / ( log (2,n) ) )))) implies (ex s being  eventually-positive Real_Sequence st ((s = g & ( Big_Oh ( seq_n^ ( 1 + e ) ) ) c= ( Big_Oh s )) & (not ( Big_Oh ( seq_n^ ( 1 + e ) ) ) = ( Big_Oh s )))))))
proof
set seq = ( seq_logn );
let e being Real;
let g being Real_Sequence;
assume that
A1: e < 1
and
A2: (for n holds (n > 1 implies ( g . n ) = ( ( n to_power 2 ) / ( log (2,n) ) )));
set seq1 = ( seq_n^ ( 1 - e ) );
set p = ( seq /" seq1 );
set f = ( seq_n^ ( 1 + e ) );
set h = ( f /" g );
g is  eventually-positive
proof
take 2;
let n;
assume A3: n >= 2;
then ( log (2,n) ) >= ( log (2,2) ) by PRE_FF:10;
then A4: ( log (2,n) ) >= 1 by POWER:52;
n > 1 by A3,XXREAL_0:2;
then A5: ( g . n ) = ( ( n to_power 2 ) / ( log (2,n) ) ) by A2
.= ( ( n to_power 2 ) * ( ( log (2,n) ) " ) );
( n to_power 2 ) > ( 0 ) by A3,POWER:34;
then ( ( n to_power 2 ) * ( ( log (2,n) ) " ) ) > ( ( n to_power 2 ) * ( 0 ) ) by A4,XREAL_1:68;
hence thesis by A5;
end;
then reconsider g as  eventually-positive Real_Sequence;
A6: ( ( 1 + e ) - 2 ) = ( e - 1 );
A7: (for n holds (n >= 2 implies ( h . n ) = ( p . n )))
proof
let n;
assume A8: n >= 2;
then A9: n > 1 by XXREAL_0:2;
( h . n ) = ( ( f . n ) / ( g . n ) ) by CKB13:1
.= ( ( n to_power ( 1 + e ) ) / ( g . n ) ) by A8,CKB10:def 1
.= ( ( n to_power ( 1 + e ) ) / ( ( n to_power 2 ) / ( log (2,n) ) ) ) by A2,A9
.= ( ( n to_power ( 1 + e ) ) * ( ( ( n to_power 2 ) / ( log (2,n) ) ) " ) )
.= ( ( n to_power ( 1 + e ) ) * ( ( log (2,n) ) / ( n to_power 2 ) ) ) by XCMPLX_1:213
.= ( ( n to_power ( 1 + e ) ) * ( ( log (2,n) ) * ( ( n to_power 2 ) " ) ) )
.= ( ( ( n to_power ( 1 + e ) ) * ( ( n to_power 2 ) " ) ) * ( log (2,n) ) )
.= ( ( ( n to_power ( 1 + e ) ) / ( n to_power 2 ) ) * ( log (2,n) ) )
.= ( ( n to_power ( - ( 1 - e ) ) ) * ( log (2,n) ) ) by A6,A8,POWER:29
.= ( ( log (2,n) ) * ( 1 / ( n to_power ( 1 - e ) ) ) ) by A8,POWER:28
.= ( ( log (2,n) ) / ( n to_power ( 1 - e ) ) )
.= ( ( seq . n ) / ( n to_power ( 1 - e ) ) ) by A8,CKB9:def 1
.= ( ( seq . n ) / ( seq1 . n ) ) by A8,CKB10:def 1
.= ( p . n ) by CKB13:1;
hence thesis;
end;
take g;
( ( 0 ) + e ) < 1 by A1;
then A10: ( 0 ) < ( 1 - e ) by XREAL_1:20;
then A11: p is  convergent by CKB21:1;
A12: ( lim p ) = ( 0 ) by A10,CKB21:1;
then A13: ( lim h ) = ( 0 ) by A11,A7,CKB51:1;
A14: h is  convergent by A11,A12,A7,CKB51:1;
then (not g in ( Big_Oh f )) by A13,ASYMPT_0:16;
then A15: (not f in ( Big_Omega g )) by ASYMPT_0:19;
f in ( Big_Oh g ) by A14,A13,ASYMPT_0:16;
hence thesis by A15,CKB15:1;
end;
