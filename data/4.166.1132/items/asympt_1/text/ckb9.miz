environ
vocabularies NUMBERS,REAL_1,SUBSET_1,NAT_1,XXREAL_0,POWER,ARYTM_3,RELAT_1,CARD_1,SQUARE_1,SEQ_1,FUNCT_1,ARYTM_1,ASYMPT_0,FUNCT_2,INT_1,VALUED_1,TARSKI,XREAL_0,ORDINAL1,SEQ_2,ORDINAL2,COMPLEX1,CARD_3,SERIES_1,FUNCOP_1,REALSET1,VALUED_0,NEWTON,FINSEQ_1,FINSEQ_2,ORDINAL4,XBOOLE_0,ASYMPT_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,COMPLEX1,REAL_1,FUNCT_1,FUNCT_2,INT_1,NAT_1,VALUED_1,SEQ_1,SEQ_2,NEWTON,POWER,SERIES_1,FUNCOP_1,SQUARE_1,FINSEQ_1,FINSEQ_2,RVSUM_1,ASYMPT_0,CKB5;
definitions ASYMPT_0,SQUARE_1,VALUED_1,XCMPLX_0,CKB5;
theorems TARSKI,FUNCT_2,INT_1,NAT_1,SEQ_1,SQUARE_1,SEQ_2,ABSVALUE,FUNCOP_1,POWER,NEWTON,EULER_2,SERIES_1,SEQM_3,FINSEQ_1,PRE_FF,RVSUM_1,FINSEQ_2,ASYMPT_0,XREAL_0,XBOOLE_0,XCMPLX_0,XCMPLX_1,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,VALUED_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8;
schemes FUNCT_2,SEQ_1,NAT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_2,ASYMPT_0,SQUARE_1,VALUED_0,VALUED_1,FUNCT_2,POWER,CKB6;
constructors PARTFUN1,DOMAIN_1,REAL_1,SQUARE_1,NAT_1,NAT_D,SEQ_2,SEQM_3,RVSUM_1,NEWTON,PREPOWER,SERIES_1,SEQ_1,ASYMPT_0,RELSET_1,FUNCOP_1,BINOP_2,CKB5;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
definition
func seq_logn -> Real_Sequence means 
:Def2: (( it . ( 0 ) ) = ( 0 ) & (for n holds (n > ( 0 ) implies ( it . n ) = ( log (2,n) ))));
existence
proof
defpred P[ (Element of ( NAT )),Real ]
 means
(($1 = ( 0 ) implies $2 = ( 0 )) & ($1 > ( 0 ) implies $2 = ( log (2,$1) )));
A1: (for x being (Element of ( NAT )) holds (ex y being (Element of ( REAL )) st P[ x,y ]))
proof
let n;
per cases ;
suppose n = ( 0 );

hence thesis;
end;
suppose n > ( 0 );

hence thesis;
end;
end;
consider h being (Function of ( NAT ),( REAL )) such that A2: (for x being (Element of ( NAT )) holds P[ x,( h . x ) ]) from FUNCT_2:sch 3(A1);
take h;
thus ( h . ( 0 ) ) = ( 0 ) by A2;
let n;
thus thesis by A2;
end;
uniqueness
proof
let j being Real_Sequence;
let k being Real_Sequence;
assume that
A3: ( j . ( 0 ) ) = ( 0 )
and
A4: (for n holds (n > ( 0 ) implies ( j . n ) = ( log (2,n) )))
and
A5: ( k . ( 0 ) ) = ( 0 )
and
A6: (for n holds (n > ( 0 ) implies ( k . n ) = ( log (2,n) )));
now
let n;
per cases ;
suppose n = ( 0 );

hence ( j . n ) = ( k . n ) by A3,A5;
end;
suppose A7: n > ( 0 );

then ( j . n ) = ( log (2,n) ) by A4;
hence ( j . n ) = ( k . n ) by A6,A7;
end;
end;
hence thesis by FUNCT_2:63;
end;
end;
