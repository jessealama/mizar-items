environ
vocabularies NUMBERS,REAL_1,SUBSET_1,NAT_1,XXREAL_0,POWER,ARYTM_3,RELAT_1,CARD_1,SQUARE_1,SEQ_1,FUNCT_1,ARYTM_1,ASYMPT_0,FUNCT_2,INT_1,VALUED_1,TARSKI,XREAL_0,ORDINAL1,SEQ_2,ORDINAL2,COMPLEX1,CARD_3,SERIES_1,FUNCOP_1,REALSET1,VALUED_0,NEWTON,FINSEQ_1,FINSEQ_2,ORDINAL4,XBOOLE_0,ASYMPT_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,COMPLEX1,REAL_1,FUNCT_1,FUNCT_2,INT_1,NAT_1,VALUED_1,SEQ_1,SEQ_2,NEWTON,POWER,SERIES_1,FUNCOP_1,SQUARE_1,FINSEQ_1,FINSEQ_2,RVSUM_1,ASYMPT_0,CKB5,CKB9,CKB10,CKB33;
definitions ASYMPT_0,SQUARE_1,VALUED_1,XCMPLX_0,CKB5,CKB9,CKB10,CKB33;
theorems TARSKI,FUNCT_2,INT_1,NAT_1,SEQ_1,SQUARE_1,SEQ_2,ABSVALUE,FUNCOP_1,POWER,NEWTON,EULER_2,SERIES_1,SEQM_3,FINSEQ_1,PRE_FF,RVSUM_1,FINSEQ_2,ASYMPT_0,XREAL_0,XBOOLE_0,XCMPLX_0,XCMPLX_1,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,VALUED_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39;
schemes FUNCT_2,SEQ_1,NAT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_2,ASYMPT_0,SQUARE_1,VALUED_0,VALUED_1,FUNCT_2,POWER,CKB6,CKB11,CKB12,CKB34;
constructors PARTFUN1,DOMAIN_1,REAL_1,SQUARE_1,NAT_1,NAT_D,SEQ_2,SEQM_3,RVSUM_1,NEWTON,PREPOWER,SERIES_1,SEQ_1,ASYMPT_0,RELSET_1,FUNCOP_1,BINOP_2,CKB5,CKB9,CKB10,CKB33;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve c for Real;
reserve d for Real;
reserve n for (Element of ( NAT ));
reserve N for (Element of ( NAT ));
theorem
(ex s being  eventually-positive Real_Sequence st (s = ( seq_a^ (2,1,1) ) & ( seq_a^ (2,1,( 0 )) ) in ( Big_Theta s )))
proof
reconsider g = ( seq_a^ (2,1,1) ) as  eventually-positive Real_Sequence;
set f = ( seq_a^ (2,1,( 0 )) );
take g;
thus g = ( seq_a^ (2,1,1) );
A1: f is (Element of ( Funcs (( NAT ),( REAL )) )) by FUNCT_2:8;
A2:now
let n;
assume n >= 2;
A3: ( f . n ) = ( 2 to_power ( ( 1 * n ) + ( 0 ) ) ) by CKB5:def 1;
A4: ( g . n ) = ( 2 to_power ( ( 1 * n ) + 1 ) ) by CKB5:def 1;
then ( ( 2 to_power ( - 1 ) ) * ( g . n ) ) = ( 2 to_power ( ( - 1 ) + ( n + 1 ) ) ) by POWER:27
.= ( f . n ) by A3;
hence ( ( 2 to_power ( - 1 ) ) * ( g . n ) ) <= ( f . n );
( n + ( 0 ) ) <= ( n + 1 ) by XREAL_1:7;
hence ( f . n ) <= ( 1 * ( g . n ) ) by A3,A4,PRE_FF:8;
end;
A5: ( 2 to_power ( - 1 ) ) > ( 0 ) by POWER:34;
( Big_Theta g ) = { s where s is (Element of ( Funcs (( NAT ),( REAL )) )): (ex c st (ex d st (ex N st ((c > ( 0 ) & d > ( 0 )) & (for n holds (n >= N implies (( d * ( g . n ) ) <= ( s . n ) & ( s . n ) <= ( c * ( g . n ) )))))))) } by ASYMPT_0:27;
hence thesis by A1,A5,A2;
end;
