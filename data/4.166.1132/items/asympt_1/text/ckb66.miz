environ
vocabularies NUMBERS,REAL_1,SUBSET_1,NAT_1,XXREAL_0,POWER,ARYTM_3,RELAT_1,CARD_1,SQUARE_1,SEQ_1,FUNCT_1,ARYTM_1,ASYMPT_0,FUNCT_2,INT_1,VALUED_1,TARSKI,XREAL_0,ORDINAL1,SEQ_2,ORDINAL2,COMPLEX1,CARD_3,SERIES_1,FUNCOP_1,REALSET1,VALUED_0,NEWTON,FINSEQ_1,FINSEQ_2,ORDINAL4,XBOOLE_0,ASYMPT_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,COMPLEX1,REAL_1,FUNCT_1,FUNCT_2,INT_1,NAT_1,VALUED_1,SEQ_1,SEQ_2,NEWTON,POWER,SERIES_1,FUNCOP_1,SQUARE_1,FINSEQ_1,FINSEQ_2,RVSUM_1,ASYMPT_0,CKB5,CKB9,CKB10,CKB33,CKB41;
definitions ASYMPT_0,SQUARE_1,VALUED_1,XCMPLX_0,CKB5,CKB9,CKB10,CKB33,CKB41;
theorems TARSKI,FUNCT_2,INT_1,NAT_1,SEQ_1,SQUARE_1,SEQ_2,ABSVALUE,FUNCOP_1,POWER,NEWTON,EULER_2,SERIES_1,SEQM_3,FINSEQ_1,PRE_FF,RVSUM_1,FINSEQ_2,ASYMPT_0,XREAL_0,XBOOLE_0,XCMPLX_0,XCMPLX_1,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,VALUED_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
schemes FUNCT_2,SEQ_1,NAT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_2,ASYMPT_0,SQUARE_1,VALUED_0,VALUED_1,FUNCT_2,POWER,CKB6,CKB11,CKB12,CKB34,CKB42;
constructors PARTFUN1,DOMAIN_1,REAL_1,SQUARE_1,NAT_1,NAT_D,SEQ_2,SEQM_3,RVSUM_1,NEWTON,PREPOWER,SERIES_1,SEQ_1,ASYMPT_0,RELSET_1,FUNCOP_1,BINOP_2,CKB5,CKB9,CKB10,CKB33,CKB41;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve N for (Element of ( NAT ));
reserve N1 for (Element of ( NAT ));
reserve N2 for (Element of ( NAT ));
reserve N3 for (Element of ( NAT ));
theorem
Lm32: (ex N st (for n holds (n >= N implies ( ( sqrt n ) - ( log (2,n) ) ) > 1)))
proof
(ex N st (for n holds (n >= N implies ( n / 2 ) > ( ( log (2,n) ) * ( log (2,n) ) ))))
proof
reconsider N = ( 2 to_power 10 ) as (Element of ( NAT ));
now
take N;
let n;
set x = ( log (2,n) );
A1: ( 2 to_power 9 ) > ( 0 ) by POWER:34;
assume A2: n >= N;
then A3: n > ( 0 ) by POWER:34;
( 2 to_power 10 ) > ( 2 to_power ( 0 ) ) by POWER:39;
then n > ( 2 to_power ( 0 ) ) by A2,XXREAL_0:2;
then n > 1 by POWER:24;
then ( log (2,n) ) > ( log (2,1) ) by POWER:57;
then ( log (2,n) ) > ( 0 ) by POWER:51;
then ( ( log (2,n) ) * ( log (2,n) ) ) > ( ( 0 ) * ( log (2,n) ) ) by XREAL_1:68;
then A4: ( 4 * ( ( log (2,n) ) * ( log (2,n) ) ) ) > ( 2 * ( ( log (2,n) ) * ( log (2,n) ) ) ) by XREAL_1:68;
( 2 to_power 10 ) > ( 2 to_power 1 ) by POWER:39;
then n > ( 2 to_power 1 ) by A2,XXREAL_0:2;
then A5: n > 2 by POWER:25;
then A6: ( 2 * n ) > ( 2 * 2 ) by XREAL_1:68;
( n * n ) > ( 2 * n ) by A5,XREAL_1:68;
then ( n ^2 ) > ( 2 * 2 ) by A6,XXREAL_0:2;
then ( log (2,( n ^2 )) ) > ( log (2,( 2 ^2 )) ) by POWER:57;
then ( log (2,( n ^2 )) ) > ( log (2,( 2 to_power 2 )) ) by POWER:46;
then ( log (2,( n ^2 )) ) > ( 2 * ( log (2,2) ) ) by POWER:55;
then A7: ( log (2,( n ^2 )) ) > ( 2 * 1 ) by POWER:52;
then A8: ( ( log (2,( n ^2 )) ) ^2 ) > ( 0 ) by SQUARE_1:12;
( 2 to_power 10 ) > ( 2 to_power 9 ) by POWER:39;
then n > ( 2 to_power 9 ) by A2,XXREAL_0:2;
then ( log (2,n) ) > ( log (2,( 2 to_power 9 )) ) by A1,POWER:57;
then x > ( 9 * ( log (2,2) ) ) by POWER:55;
then A9: x > ( 9 * 1 ) by POWER:52;
then A10: ( 2 * x ) > ( ( 0 ) * x ) by XREAL_1:68;
then ( ( 2 * x ) * ( 2 * x ) ) > ( ( 0 ) * ( 2 * x ) ) by XREAL_1:68;
then ( log (2,( 2 to_power x )) ) > ( log (2,( ( 2 * x ) ^2 )) ) by A9,CKB65:1,POWER:57;
then ( x * ( log (2,2) ) ) > ( log (2,( ( 2 * x ) ^2 )) ) by POWER:55;
then ( x * 1 ) > ( log (2,( ( 2 * x ) ^2 )) ) by POWER:52;
then x > ( log (2,( ( 2 * x ) to_power 2 )) ) by POWER:46;
then x > ( 2 * ( log (2,( 2 * x )) ) ) by A10,POWER:55;
then ( log (2,n) ) > ( 2 * ( log (2,( log (2,( n to_power 2 )) )) ) ) by A3,POWER:55;
then ( log (2,n) ) > ( 2 * ( log (2,( log (2,( n ^2 )) )) ) ) by POWER:46;
then ( 2 to_power ( log (2,n) ) ) > ( 2 to_power ( 2 * ( log (2,( log (2,( n ^2 )) )) ) ) ) by POWER:39;
then n > ( 2 to_power ( 2 * ( log (2,( log (2,( n ^2 )) )) ) ) ) by A3,POWER:def 3;
then n > ( 2 to_power ( log (2,( ( log (2,( n ^2 )) ) to_power 2 )) ) ) by A7,POWER:55;
then n > ( 2 to_power ( log (2,( ( log (2,( n ^2 )) ) ^2 )) ) ) by POWER:46;
then n > ( ( log (2,( n ^2 )) ) ^2 ) by A8,POWER:def 3;
then n > ( ( log (2,( n to_power 2 )) ) ^2 ) by POWER:46;
then n > ( ( 2 * ( log (2,n) ) ) ^2 ) by A3,POWER:55;
then n > ( 2 * ( ( log (2,n) ) * ( log (2,n) ) ) ) by A4,XXREAL_0:2;
hence ( n / 2 ) > ( ( log (2,n) ) * ( log (2,n) ) ) by XREAL_1:81;
end;
hence thesis;
end;
then consider N3 such that A11: (for n holds (n >= N3 implies ( n / 2 ) > ( ( log (2,n) ) * ( log (2,n) ) )));
now
take N = 30;
let n;
assume A12: n >= N;
then A13: ( n to_power 6 ) > ( 0 ) by POWER:34;
( 2 to_power n ) > ( n to_power 6 ) by A12,CKB64:1;
then ( log (2,( 2 to_power n )) ) > ( log (2,( n to_power 6 )) ) by A13,POWER:57;
then ( n * ( log (2,2) ) ) > ( log (2,( n to_power 6 )) ) by POWER:55;
then ( n * 1 ) > ( log (2,( n to_power 6 )) ) by POWER:52;
then n > ( ( 3 * 2 ) * ( log (2,n) ) ) by A12,POWER:55;
then n > ( 3 * ( 2 * ( log (2,n) ) ) );
hence ( n / 3 ) > ( 2 * ( log (2,n) ) ) by XREAL_1:81;
end;
then consider N2 such that A14: (for n holds (n >= N2 implies ( n / 3 ) > ( 2 * ( log (2,n) ) )));
now
take N = 7;
let n;
assume n >= N;
then n > 6 by XXREAL_0:2;
then ( n / 6 ) > ( 6 / 6 ) by XREAL_1:74;
hence ( n / 6 ) > 1;
end;
then consider N1 such that A15: (for n holds (n >= N1 implies ( n / 6 ) > 1));
set N = ( max (( max (N1,2) ),( max (N2,N3) )) );
A16: N >= ( max (N1,2) ) by XXREAL_0:25;
( max (N1,2) ) >= 2 by XXREAL_0:25;
then A17: N >= 2 by A16,XXREAL_0:2;
A18: N >= ( max (N2,N3) ) by XXREAL_0:25;
( max (N2,N3) ) >= N3 by XXREAL_0:25;
then A19: N >= N3 by A18,XXREAL_0:2;
( max (N2,N3) ) >= N2 by XXREAL_0:25;
then A20: N >= N2 by A18,XXREAL_0:2;
( max (N1,2) ) >= N1 by XXREAL_0:25;
then A21: N >= N1 by A16,XXREAL_0:2;
now
let n;
A22: ( ( 1 + ( 2 * ( log (2,n) ) ) ) + ( ( log (2,n) ) * ( log (2,n) ) ) ) = ( ( 1 + ( log (2,n) ) ) ^2 );
assume A23: n >= N;
then n >= N2 by A20,XXREAL_0:2;
then A24: ( n / 3 ) > ( 2 * ( log (2,n) ) ) by A14;
n >= 2 by A17,A23,XXREAL_0:2;
then ( log (2,n) ) >= ( log (2,2) ) by PRE_FF:10;
then A25: ( log (2,n) ) >= 1 by POWER:52;
n >= N1 by A21,A23,XXREAL_0:2;
then ( n / 6 ) > 1 by A15;
then A26: ( ( n / 6 ) + ( n / 3 ) ) > ( 1 + ( 2 * ( log (2,n) ) ) ) by A24,XREAL_1:8;
n >= N3 by A19,A23,XXREAL_0:2;
then A27: ( n / 2 ) > ( ( log (2,n) ) * ( log (2,n) ) ) by A11;
( ( ( n / 6 ) + ( n / 3 ) ) + ( n / 2 ) ) = n;
then n > ( ( 1 + ( log (2,n) ) ) ^2 ) by A26,A27,A22,XREAL_1:8;
then ( sqrt n ) > ( sqrt ( ( 1 + ( log (2,n) ) ) ^2 ) ) by SQUARE_1:27,XREAL_1:63;
then ( sqrt n ) > ( 1 + ( log (2,n) ) ) by A25,SQUARE_1:22;
hence ( ( sqrt n ) - ( log (2,n) ) ) > 1 by XREAL_1:20;
end;
hence thesis;
end;
