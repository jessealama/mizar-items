environ
vocabularies NUMBERS,ALGSTR_0,STRUCT_0,SUBSET_1,BINOP_1,FUNCT_1,ZFMISC_1,XBOOLE_0,XREAL_0,ORDINAL1,RELAT_1,REAL_1,ARYTM_3,SUPINF_2,FUNCT_5,MCART_1,ARYTM_1,CARD_1,FINSEQ_1,ORDINAL4,CARD_3,TARSKI,XXREAL_0,FUNCOP_1,NAT_1,VALUED_0,RLVECT_1,PARTFUN1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,FUNCOP_1,REAL_1,FINSEQ_1,NAT_1,FUNCT_3,FUNCT_5,FINSEQ_4,STRUCT_0,ALGSTR_0,CKB1,CKB3,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB20,CKB21,CKB25,CKB27,CKB62;
definitions FUNCT_1,TARSKI,STRUCT_0,RELAT_1,ALGSTR_0,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB25,CKB27,CKB62;
theorems FUNCT_1,NAT_1,TARSKI,RELAT_1,STRUCT_0,XBOOLE_0,XBOOLE_1,FINSEQ_1,XCMPLX_0,FUNCOP_1,XREAL_1,XXREAL_0,ORDINAL1,ALGSTR_0,CARD_1,FINSEQ_3,XREAL_0,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
schemes FINSEQ_1,FUNCT_2,NAT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,STRUCT_0,REAL_1,ALGSTR_0,FINSEQ_1,CARD_1,ZFMISC_1,FUNCT_1,RELAT_1,CKB1,CKB2,CKB7,CKB16,CKB17,CKB18,CKB19;
constructors BINOP_1,FUNCOP_1,XXREAL_0,REAL_1,NAT_1,FINSEQ_1,FUNCT_3,FUNCT_5,ALGSTR_0,REALSET1,RELSET_1,FINSEQ_4,VALUED_0,CKB1,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB21,CKB62;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve a for  real number;
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve V for RealLinearSpace;
reserve v for (VECTOR of V);
reserve F for (FinSequence of V);
reserve G for (FinSequence of V);
reserve H for (FinSequence of V);
reserve I for (FinSequence of V);
theorem
((( len F ) = ( len G ) & (for k holds (for v holds ((k in ( dom F ) & v = ( G . k )) implies ( F . k ) = ( a * v ))))) implies ( Sum F ) = ( a * ( Sum G ) ))
proof
defpred P[ set ]
 means
(for H holds (for I holds (((( len H ) = ( len I ) & ( len H ) = $1) & (for k holds (for v holds ((k in ( Seg ( len H ) ) & v = ( I . k )) implies ( H . k ) = ( a * v ))))) implies ( Sum H ) = ( a * ( Sum I ) ))));
A1: ( dom F ) = ( Seg ( len F ) ) by FINSEQ_1:def 3;
now
let n;
assume A2: (for H holds (for I holds (((( len H ) = ( len I ) & ( len H ) = n) & (for k holds (for v holds ((k in ( Seg ( len H ) ) & v = ( I . k )) implies ( H . k ) = ( a * v ))))) implies ( Sum H ) = ( a * ( Sum I ) ))));
let H;
let I;
assume that
A3: ( len H ) = ( len I )
and
A4: ( len H ) = ( n + 1 )
and
A5: (for k holds (for v holds ((k in ( Seg ( len H ) ) & v = ( I . k )) implies ( H . k ) = ( a * v ))));
reconsider p = ( H | ( Seg n ) ),q = ( I | ( Seg n ) ) as (FinSequence of (the carrier of V)) by FINSEQ_1:18;
A6: n <= ( n + 1 ) by NAT_1:12;
then A7: ( len q ) = n by A3,A4,FINSEQ_1:17;
A8: ( len p ) = n by A4,A6,FINSEQ_1:17;
A9:now
( len p ) <= ( len H ) by A4,A6,FINSEQ_1:17;
then A10: ( Seg ( len p ) ) c= ( Seg ( len H ) ) by FINSEQ_1:5;
A11: ( dom p ) = ( Seg n ) by A4,A6,FINSEQ_1:17;
let k;
let v;
assume that
A12: k in ( Seg ( len p ) )
and
A13: v = ( q . k );
( dom q ) = ( Seg n ) by A3,A4,A6,FINSEQ_1:17;
then ( I . k ) = ( q . k ) by A8,A12,FUNCT_1:47;
then ( H . k ) = ( a * v ) by A5,A12,A13,A10;
hence ( p . k ) = ( a * v ) by A8,A12,A11,FUNCT_1:47;
end;
1 <= ( n + 1 ) by NAT_1:11;
then (( n + 1 ) in ( dom H ) & ( n + 1 ) in ( dom I )) by A3,A4,FINSEQ_3:25;
then reconsider v1 = ( H . ( n + 1 ) ),v2 = ( I . ( n + 1 ) ) as (VECTOR of V) by FUNCT_1:102;
A14: v1 = ( a * v2 ) by A4,A5,FINSEQ_1:4;
A15: ( dom q ) = ( Seg ( len q ) ) by FINSEQ_1:def 3;
( dom p ) = ( Seg ( len p ) ) by FINSEQ_1:def 3;
hence ( Sum H ) = ( ( Sum p ) + v1 ) by A4,A8,CKB65:1
.= ( ( a * ( Sum q ) ) + ( a * v2 ) ) by A2,A8,A7,A9,A14
.= ( a * ( ( Sum q ) + v2 ) ) by CKB11:def 1
.= ( a * ( Sum I ) ) by A3,A4,A7,A15,CKB65:1;
end;
then A16: (for n holds (P[ n ] implies P[ ( n + 1 ) ]));
now
let H;
let I;
assume that
A17: ( len H ) = ( len I )
and
A18: ( len H ) = ( 0 )
and
(for k holds (for v holds ((k in ( Seg ( len H ) ) & v = ( I . k )) implies ( H . k ) = ( a * v ))));
( Sum H ) = ( 0. V ) by A18,CKB64:1;
hence ( Sum H ) = ( a * ( Sum I ) ) by A17,A18,CKB64:1,CKB33:1;
end;
then A19: P[ ( 0 ) ];
(for n holds P[ n ]) from NAT_1:sch 1(A19,A16);
hence thesis by A1;
end;
