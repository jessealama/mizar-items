environ
vocabularies NUMBERS,ALGSTR_0,STRUCT_0,SUBSET_1,BINOP_1,FUNCT_1,ZFMISC_1,XBOOLE_0,XREAL_0,ORDINAL1,RELAT_1,REAL_1,ARYTM_3,SUPINF_2,FUNCT_5,MCART_1,ARYTM_1,CARD_1,FINSEQ_1,ORDINAL4,CARD_3,TARSKI,XXREAL_0,FUNCOP_1,NAT_1,VALUED_0,RLVECT_1,PARTFUN1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,FUNCOP_1,REAL_1,FINSEQ_1,NAT_1,FUNCT_3,FUNCT_5,FINSEQ_4,STRUCT_0,ALGSTR_0,CKB1,CKB3,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB20,CKB21;
definitions FUNCT_1,TARSKI,STRUCT_0,RELAT_1,ALGSTR_0,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15;
theorems FUNCT_1,NAT_1,TARSKI,RELAT_1,STRUCT_0,XBOOLE_0,XBOOLE_1,FINSEQ_1,XCMPLX_0,FUNCOP_1,XREAL_1,XXREAL_0,ORDINAL1,ALGSTR_0,CARD_1,FINSEQ_3,XREAL_0,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB22,CKB23,CKB24;
schemes FINSEQ_1,FUNCT_2,NAT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,STRUCT_0,REAL_1,ALGSTR_0,FINSEQ_1,CARD_1,ZFMISC_1,FUNCT_1,RELAT_1,CKB1,CKB2,CKB7,CKB16,CKB17,CKB18,CKB19;
constructors BINOP_1,FUNCOP_1,XXREAL_0,REAL_1,NAT_1,FINSEQ_1,FUNCT_3,FUNCT_5,ALGSTR_0,REALSET1,RELSET_1,FINSEQ_4,VALUED_0,CKB1,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB21;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
definition
let V being non empty addLoopStr;
let v being (Element of V);
assume A1: V is  add-associative  right_zeroed  right_complementable;
redefine func - v
means
:Def13: ( v + it ) = ( 0. V );
compatibility
proof
let IT being (Element of V);
consider v1 being (Element of V) such that A2: ( v + v1 ) = ( 0. V ) by A1,ALGSTR_0:def 11;
A3: V is  right_add-cancelable by A1,CKB23:1;
A4: v is  left_complementable
proof
take v1;
( ( v1 + v ) + v1 ) = ( v1 + ( 0. V ) ) by A1,A2,CKB9:def 1
.= v1 by A1,CKB24:1
.= ( ( 0. V ) + v1 ) by A1,CKB24:1;
hence thesis by A3,ALGSTR_0:def 4;
end;
( ( v + ( - v ) ) + v ) = ( v + ( ( - v ) + v ) ) by A1,CKB9:def 1
.= ( v + ( 0. V ) ) by A3,A4,ALGSTR_0:def 13
.= v by A1,CKB24:1
.= ( ( 0. V ) + v ) by A1,CKB24:1;
hence (IT = ( - v ) implies ( v + IT ) = ( 0. V )) by A3,ALGSTR_0:def 4;
assume A5: ( v + IT ) = ( 0. V );
thus IT = ( ( 0. V ) + IT ) by A1,CKB24:1
.= ( ( ( - v ) + v ) + IT ) by A3,A4,ALGSTR_0:def 13
.= ( ( - v ) + ( 0. V ) ) by A1,A5,CKB9:def 1
.= ( - v ) by A1,CKB24:1;
end;
end;
