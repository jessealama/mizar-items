environ
vocabularies NUMBERS,ALGSTR_0,STRUCT_0,SUBSET_1,BINOP_1,FUNCT_1,ZFMISC_1,XBOOLE_0,XREAL_0,ORDINAL1,RELAT_1,REAL_1,ARYTM_3,SUPINF_2,FUNCT_5,MCART_1,ARYTM_1,CARD_1,FINSEQ_1,ORDINAL4,CARD_3,TARSKI,XXREAL_0,FUNCOP_1,NAT_1,VALUED_0,RLVECT_1,PARTFUN1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,FUNCOP_1,REAL_1,FINSEQ_1,NAT_1,FUNCT_3,FUNCT_5,FINSEQ_4,STRUCT_0,ALGSTR_0,CKB1,CKB3,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB20,CKB21,CKB25,CKB27,CKB62;
definitions FUNCT_1,TARSKI,STRUCT_0,RELAT_1,ALGSTR_0,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB25,CKB27,CKB62;
theorems FUNCT_1,NAT_1,TARSKI,RELAT_1,STRUCT_0,XBOOLE_0,XBOOLE_1,FINSEQ_1,XCMPLX_0,FUNCOP_1,XREAL_1,XXREAL_0,ORDINAL1,ALGSTR_0,CARD_1,FINSEQ_3,XREAL_0,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67;
schemes FINSEQ_1,FUNCT_2,NAT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,STRUCT_0,REAL_1,ALGSTR_0,FINSEQ_1,CARD_1,ZFMISC_1,FUNCT_1,RELAT_1,CKB1,CKB2,CKB7,CKB16,CKB17,CKB18,CKB19;
constructors BINOP_1,FUNCOP_1,XXREAL_0,REAL_1,NAT_1,FINSEQ_1,FUNCT_3,FUNCT_5,ALGSTR_0,REALSET1,RELSET_1,FINSEQ_4,VALUED_0,CKB1,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB21,CKB62;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve k for (Element of ( NAT ));
theorem
Th58: (for V being  add-associative  right_zeroed non empty addLoopStr holds (for F,G being (FinSequence of V) holds ( Sum ( F ^ G ) ) = ( ( Sum F ) + ( Sum G ) )))
proof
let V being  add-associative  right_zeroed non empty addLoopStr;
let F being (FinSequence of V),G being (FinSequence of V);
defpred P[ set ]
 means
(for G being (FinSequence of V) holds (( len G ) = $1 implies ( Sum ( F ^ G ) ) = ( ( Sum F ) + ( Sum G ) )));
A1: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume A2: (for G being (FinSequence of V) holds (( len G ) = k implies ( Sum ( F ^ G ) ) = ( ( Sum F ) + ( Sum G ) )));
let H being (FinSequence of V);
reconsider p = ( H | ( Seg k ) ) as (FinSequence of V) by FINSEQ_1:18;
A3: ( rng H ) c= (the carrier of V) by FINSEQ_1:def 4;
assume A4: ( len H ) = ( k + 1 );
then A5: ( dom H ) = ( Seg ( k + 1 ) ) by FINSEQ_1:def 3;
then A6: ( k + 1 ) in ( dom H ) by FINSEQ_1:4;
then ( H . ( k + 1 ) ) in ( rng H ) by FUNCT_1:def 3;
then reconsider v = ( H . ( k + 1 ) ) as (Element of V) by A3;
A7: k <= ( k + 1 ) by NAT_1:12;
A8:now
let n being Nat;
assume n in ( dom p );
then n in ( Seg k ) by A4,A7,FINSEQ_1:17;
hence ( p . n ) = ( H . n ) by FUNCT_1:49;
end;
A9: ( dom p ) = ( Seg ( len p ) ) by FINSEQ_1:def 3;
A10: ( Seg ( len ( F ^ p ) ) ) = ( Seg ( ( len F ) + ( len p ) ) ) by FINSEQ_1:22;
A11: ( dom ( F ^ H ) ) = ( Seg ( len ( F ^ H ) ) ) by FINSEQ_1:def 3
.= ( Seg ( ( len F ) + ( len H ) ) ) by FINSEQ_1:22;
A12: ( dom ( F ^ p ) ) = ( Seg ( len ( F ^ p ) ) ) by FINSEQ_1:def 3;
( dom p ) = ( Seg k ) by A4,A7,FINSEQ_1:17;
then A13: ( dom p ) c= ( dom H ) by A5,A7,FINSEQ_1:5;
A14:now
let x being set;
assume A15: x in ( dom ( F ^ p ) );
then reconsider n = x as (Element of ( NAT ));
A16:now
assume (not n in ( dom F ));
then A17: (not n in ( Seg ( len F ) )) by FINSEQ_1:def 3;
A18: 1 <= n by A12,A15,FINSEQ_1:1;
then ( len F ) <= n by A17,FINSEQ_1:1;
then consider j being Nat such that A19: n = ( ( len F ) + j ) by NAT_1:10;
A20:now
assume (not j <= k);
then A21: ( ( len F ) + k ) < n by A19,XREAL_1:6;
n <= ( ( len F ) + ( len p ) ) by A12,A10,A15,FINSEQ_1:1;
hence contradiction by A4,A7,A21,FINSEQ_1:17;
end;
now
assume (not 1 <= j);
then j = ( 0 ) by NAT_1:14;
hence contradiction by A17,A18,A19,FINSEQ_1:1;
end;
then j in ( Seg k ) by A20,FINSEQ_1:1;
then A22: j in ( dom p ) by A4,A7,FINSEQ_1:17;
then (( ( F ^ p ) . n ) = ( p . j ) & ( ( F ^ H ) . n ) = ( H . j )) by A13,A19,FINSEQ_1:def 7;
hence ( ( F ^ p ) . x ) = ( ( F ^ H ) . x ) by A8,A22;
end;
now
assume A23: n in ( dom F );
then ( ( F ^ p ) . n ) = ( F . n ) by FINSEQ_1:def 7;
hence ( ( F ^ p ) . x ) = ( ( F ^ H ) . x ) by A23,FINSEQ_1:def 7;
end;
hence ( ( F ^ p ) . x ) = ( ( F ^ H ) . x ) by A16;
end;
A24: ( len p ) = k by A4,A7,FINSEQ_1:17;
then ( ( len F ) + ( len p ) ) <= ( ( len F ) + ( len H ) ) by A4,A7,XREAL_1:7;
then ( Seg ( len ( F ^ p ) ) ) c= ( dom ( F ^ H ) ) by A11,A10,FINSEQ_1:5;
then ( dom ( F ^ p ) ) = ( ( dom ( F ^ H ) ) /\ ( Seg ( len ( F ^ p ) ) ) ) by A12,XBOOLE_1:28;
then A25: ( F ^ p ) = ( ( F ^ H ) | ( Seg ( len ( F ^ p ) ) ) ) by A14,FUNCT_1:46
.= ( ( F ^ H ) | ( dom ( F ^ p ) ) ) by FINSEQ_1:def 3;
A26:now
let n being Nat;
assume n in ( dom <* v *> );
then n in { 1 } by FINSEQ_1:2,FINSEQ_1:38;
then n = 1 by TARSKI:def 1;
hence ( H . ( ( len p ) + n ) ) = ( <* v *> . n ) by A24,FINSEQ_1:def 8;
end;
( dom H ) = ( Seg ( ( len p ) + ( len <* v *> ) ) ) by A5,A24,FINSEQ_1:39;
then H = ( p ^ <* v *> ) by A8,A26,FINSEQ_1:def 7;
then ( F ^ H ) = ( ( F ^ p ) ^ <* v *> ) by FINSEQ_1:32;
then ( len ( F ^ H ) ) = ( ( len ( F ^ p ) ) + ( len <* v *> ) ) by FINSEQ_1:22;
then A27: ( len ( F ^ H ) ) = ( ( len ( F ^ p ) ) + 1 ) by FINSEQ_1:39;
v = ( ( F ^ H ) . ( ( len F ) + ( len H ) ) ) by A4,A6,FINSEQ_1:def 7
.= ( ( F ^ H ) . ( len ( F ^ H ) ) ) by FINSEQ_1:22;
hence ( Sum ( F ^ H ) ) = ( ( Sum ( F ^ p ) ) + v ) by A27,A25,CKB65:1
.= ( ( ( Sum F ) + ( Sum p ) ) + v ) by A2,A24
.= ( ( Sum F ) + ( ( Sum p ) + v ) ) by CKB9:def 1
.= ( ( Sum F ) + ( Sum H ) ) by A4,A24,A9,CKB65:1;
end;
A28: P[ ( 0 ) ]
proof
let G being (FinSequence of V);
assume ( len G ) = ( 0 );
then G = ( <*> (the carrier of V) );
then (( F ^ G ) = F & ( Sum G ) = ( 0. V )) by CKB63:1,FINSEQ_1:34;
hence thesis by CKB10:def 1;
end;
(for k holds P[ k ]) from NAT_1:sch 1(A28,A1);
then (( len G ) = ( len G ) implies thesis);
hence thesis;
end;
