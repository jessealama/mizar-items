environ
vocabularies AMI_1,SCMFSA_2,SCMFSA7B,SCMFSA6A,SF_MASTR,GRAPHSP,AMI_3,SCMFSA6B,TURING_1,AOFA_I00,SCMFSA8C,SCMFSA8B,SCMFSA8A,CARD_1,AMISTD_2,RELAT_1,TARSKI,XXREAL_0,ARYTM_3,FSM_1,XBOOLE_0,FUNCT_4,NUMBERS,SCMFSA6C,UNIALG_2,CIRCUIT2,FUNCT_1,MSUALG_1,SUBSET_1,NAT_1,STRUCT_0,FINSET_1,SCMFSA_1,ZFMISC_1,SCMNORM,PRE_FF,ARYTM_1,SFMASTR1,PARTFUN1,RELOC,PBOOLE,FUNCOP_1,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,FINSET_1,NAT_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_4,FUNCOP_1,PBOOLE,FUNCT_7,PRE_FF,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,SCMFSA_1,SCMFSA_2,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA8C,XXREAL_0,SEQ_4,CKB1;
definitions EXTPRO_1,COMPOS_1,SCMFSA_2,SCMFSA7B,FUNCOP_1,SCMFSA6A,MEMSTR_0,CKB1;
theorems TARSKI,ZFMISC_1,ENUMSET1,NAT_1,RELAT_1,FUNCT_1,FUNCT_2,LATTICE2,GRFUNC_1,SUBSET_1,FUNCT_4,PRE_FF,SCMFSA_2,MEMSTR_0,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA8C,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,FUNCOP_1,XXREAL_0,AMI_3,XXREAL_2,PBOOLE,PARTFUN1,COMPOS_1,EXTPRO_1,AMISTD_2,CKB1,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
schemes NAT_1,DOMAIN_1,FRAENKEL,RECDEF_1;
registrations XBOOLE_0,SUBSET_1,SETFAM_1,FUNCT_1,ORDINAL1,FINSET_1,NUMBERS,XREAL_0,NAT_1,INT_1,MEMBERED,AMI_5,SCMFSA_2,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8C,SCMFSA_9,XXREAL_2,RELAT_1,SCMFSA10,AMISTD_2,COMPOS_1,EXTPRO_1,PBOOLE,FUNCT_4,FUNCOP_1,SCMFSA6A,STRUCT_0,MEMSTR_0,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
constructors DOMAIN_1,SETWISEO,SEQ_4,PRE_FF,SCM_1,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA8C,RELSET_1,PRE_POLY,AMISTD_2,SCMFSA7B,SCMFSA_1,PBOOLE,AMISTD_1,COMPLEX1,INT_2,NAT_D,XXREAL_1,MEMSTR_0,CKB1;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve p for (Instruction-Sequence of ( SCM+FSA ));
reserve s for (State of ( SCM+FSA ));
reserve J for (Program of ( SCM+FSA ));
reserve Ig for  good (Program of ( SCM+FSA ));
theorem
Th7: ((((Ig is_halting_on ( Initialized s ),p & J is_halting_on ( IExec (Ig,p,s) ),p) & Ig is_closed_on ( Initialized s ),p) & J is_closed_on ( IExec (Ig,p,s) ),p) implies ( IExec (( Ig ';' J ),p,s) ) = ( ( IExec (J,p,( IExec (Ig,p,s) )) ) +* ( Start-At (( ( IC ( IExec (J,p,( IExec (Ig,p,s) )) ) ) + ( card Ig ) ),( SCM+FSA )) ) ))
proof
set I = Ig;
assume that
A1: I is_halting_on ( Initialized s ),p
and
A2: J is_halting_on ( IExec (I,p,s) ),p
and
A3: I is_closed_on ( Initialized s ),p
and
A4: J is_closed_on ( IExec (I,p,s) ),p;
set Is = ( Initialized s );
set Ip = p;
A5: ( ( Initialized s ) . ( intloc ( 0 ) ) ) = 1 by SCMFSA6A:38;
set s1 = ( Initialized s );
set p1 = ( p +* I );
A6: I c= p1 by FUNCT_4:25;
set m1 = ( LifeSpan (p1,s1) );
s1 = ( Initialized Is );
then A10: s1 = ( Initialize Is ) by A5,SCMFSA8C:4;
( DataPart Is ) = ( DataPart s1 );
then A11: I is_closed_on s1,p1 by A3,SCMFSA8B:3;
set s3 = ( Initialized ( Comput (p1,s1,m1) ) );
set p3 = ( p1 +* J );
A12: J c= p3 by FUNCT_4:25;
A13: p1 halts_on s1 by A1,A10,SCMFSA7B:def 7;
then A14: s3 = ( Initialized ( Result (p1,s1) ) ) by EXTPRO_1:23;
set s2 = ( Initialized s );
set p2 = ( p +* ( I ';' J ) );
A15: ( I ';' J ) c= p2 by FUNCT_4:25;
s2 = ( Initialized Is );
then A16: s2 = ( Initialize Is ) by A5,SCMFSA8C:4;
A17: ( DataPart Is ) = ( DataPart s2 );
A18: ( s2 . ( intloc ( 0 ) ) ) = 1 by A5;
A19: ( DataPart ( IExec (I,p,s) ) ) = ( DataPart ( IExec (I,p,Is) ) ) by SCMFSA8C:3
.= ( DataPart ( IExec (I,p2,s2) ) ) by A1,A3,A5,A17,SCMFSA8C:20;
then A20: J is_closed_on ( IExec (I,p2,s2) ),p2 by A2,A4,SCMFSA8B:5;
s2 = ( Initialize s2 ) by MEMSTR_0:44;
then A22: ( LifeSpan (( p2 +* I ),s2) ) = m1 by A1,A3,A17,SCMFSA8C:72;
set JAt = ( Start-At (( 0 ),( SCM+FSA )) );
( ( Comput (p1,s1,m1) ) . ( intloc ( 0 ) ) ) = 1 by A3,A5,A10,SCMFSA8C:68;
then A23: s3 = ( Initialize ( Comput (p1,s1,m1) ) ) by SCMFSA8C:4;
set m3 = ( LifeSpan (p3,s3) );
( I ';' J ) is_halting_on Is,Ip by A1,A2,A3,A4,CKB23:1;
then A25: p2 halts_on s2 by A16,SCMFSA7B:def 7;
A26: ( IExec (( I ';' J ),p,s) ) = ( Result (( p +* ( I ';' J ) ),( Initialized s )) ) by SCMFSA6B:def 1
.= ( Comput (p2,s2,( LifeSpan (p2,s2) )) ) by A25,EXTPRO_1:23
.= ( Comput (p2,s2,( ( m1 + 1 ) + m3 )) ) by A1,A2,A3,A4,A14,CKB26:1;
A27: ( DataPart ( IExec (I,p,s) ) ) = ( DataPart ( Result (( p +* I ),( Initialized s )) ) ) by SCMFSA6B:def 1
.= ( DataPart ( Result (( p +* I ),( s +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) )) ) )
.= ( DataPart ( Comput (p1,s1,( LifeSpan (p1,s1) )) ) ) by A13,EXTPRO_1:23;
then J is_halting_on ( Comput (p1,s1,( LifeSpan (p1,s1) )) ),p1 by A2,A4,SCMFSA8B:5;
then A28: p3 halts_on s3 by A23,SCMFSA7B:def 7;
set IEJIs = ( IExec (J,p,( IExec (I,p,s) )) );
set IAt = ( Start-At (( 0 ),( SCM+FSA )) );
( DataPart ( IExec (I,p,s) ) ) = ( DataPart s3 ) by A23,A27,MEMSTR_0:79;
then A31: J is_closed_on s3,p3 by A4,SCMFSA8B:3;
A32: ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) c= s2 by FUNCT_4:25;
( ( IExec (I,p,s) ) . ( intloc ( 0 ) ) ) = 1 by A1,A3,SCMFSA8C:67;
then A33: ( Initialized ( IExec (I,p,s) ) ) = ( Initialize ( IExec (I,p,s) ) ) by SCMFSA8C:4;
then ( Result (( p1 +* J ),( ( Result (p1,s1) ) +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) )) ) = ( Result (( p +* J ),( ( IExec (I,p,s) ) +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) )) ) by A2,A4,A23,A27,A14,SCMFSA8C:72;
then A34: ( IC ( Result (( p1 +* J ),( Initialized ( Result (p1,s1) ) )) ) ) = ( IC ( Result (( p +* J ),( Initialized ( IExec (I,p,s) ) )) ) );
A35: ( Result (( p +* J ),( Initialized ( IExec (I,p,s) ) )) ) = ( Result (p3,s3) ) by A2,A4,A23,A27,A33,SCMFSA8C:72;
A36: IEJIs = ( Result (( p +* J ),( Initialized ( IExec (I,p,s) ) )) ) by SCMFSA6B:def 1
.= ( Comput (p3,s3,m3) ) by A28,A35,EXTPRO_1:23;
A37: I is_halting_on s2,p2 by A1,A3,A17,SCMFSA8B:5;
reconsider l = ( ( IC IEJIs ) + ( card I ) ) as (Element of ( NAT ));
reconsider s2t = ( s +* ( ( intloc ( 0 ) ) .--> 1 ) ) as (State of ( SCM+FSA ));
( DataPart s2 ) = ( DataPart s2 );
then A40: I is_closed_on s2,( p2 +* I ) by A3,SCMFSA8B:3;
A41: ( dom ( Start-At (l,( SCM+FSA )) ) ) = { ( IC ( SCM+FSA ) ) } by FUNCOP_1:13;
A42: ( I +* ( I ';' J ) ) = ( I ';' J ) by SCMFSA6A:18;
A44: ( ( p2 +* I ) +* ( I ';' J ) ) = ( p2 +* ( I +* ( I ';' J ) ) ) by FUNCT_4:14;
A48: I c= ( p2 +* I ) by FUNCT_4:25;
A49: ( p1 +* ( I ';' J ) ) = p2 by A42,FUNCT_4:14;
EO: ( Comput (p1,s1,m1) ) = ( Comput (p2,s2,m1) ) by A13,A11,CKB24:1,A6,A49;
s2 = ( Initialize s2 ) by MEMSTR_0:44;
then ( p2 +* I ) halts_on s2 by A37,SCMFSA7B:def 7;
then ( Comput (( p2 +* I ),s2,m1) ) = ( Comput (( ( p2 +* I ) +* ( I ';' J ) ),s2,m1) ) by A40,A22,CKB24:1,A48;
then ( DataPart ( Comput (( p2 +* I ),s2,m1) ) ) = ( DataPart ( Comput (( ( p2 +* I ) +* ( I ';' J ) ),s2,m1) ) )
.= ( DataPart ( Comput (( ( p2 +* I ) +* ( I ';' J ) ),s2,m1) ) )
.= ( DataPart ( Comput (( p2 +* ( I ';' J ) ),s2,m1) ) ) by A42,A44
.= ( DataPart ( Comput (p2,s2,m1) ) ) by FUNCT_4:93
.= ( DataPart ( Comput (p1,s1,m1) ) ) by EO;
then A50: ( DataPart ( ( Comput (( p2 +* I ),s2,m1) ) +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) ) ) = ( ( DataPart ( Comput (p1,s1,m1) ) ) +* ( DataPart ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) ) ) by FUNCT_4:71
.= ( DataPart ( ( Comput (p1,s1,m1) ) +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) ) ) by FUNCT_4:71;
A51: I is_closed_on s2,p2 by A3,A17,SCMFSA8B:3;
A52: J is_halting_on ( IExec (I,p2,s2) ),p2 by A2,A4,A19,SCMFSA8B:5;
then A53: ( DataPart ( Comput (p2,s2,( m1 + 1 )) ) ) = ( DataPart ( Initialized ( Comput (( p2 +* I ),s2,m1) ) ) ) by A32,A51,A37,A22,A18,A20,CKB25:1,A15;
( Reloc (J,( card I )) ) c= ( I ';' J ) by FUNCT_4:25;
then A54: ( Reloc (J,( card I )) ) c= p2 by A15,XBOOLE_1:1;
A55: ( IC ( Comput (p2,s2,( m1 + 1 )) ) ) = ( card I ) by A32,A51,A37,A22,A18,A20,A52,CKB25:1,A15;
then A56: ( DataPart ( Comput (p2,( Comput (p2,s2,( m1 + 1 )) ),m3) ) ) = ( DataPart ( Comput (p3,s3,m3) ) ) by A31,A50,A53,A12,A54,SCMFSA8C:16;
A58: ( DataPart ( IExec (( I ';' J ),p,s) ) ) = ( DataPart ( Comput (p2,s2,( ( m1 + 1 ) + m3 )) ) ) by A26
.= ( DataPart ( Comput (p3,s3,m3) ) ) by A56,EXTPRO_1:4
.= ( DataPart IEJIs ) by A36;
A59: ( IC ( Comput (p2,( Comput (p2,s2,( m1 + 1 )) ),m3) ) ) = ( ( IC ( Comput (p3,s3,m3) ) ) + ( card I ) ) by A31,A50,A55,A53,A12,A54,SCMFSA8C:16;
A60: s3 = ( Initialized ( Result (p1,s1) ) ) by A13,EXTPRO_1:23;
A61: ( IC ( IExec (( I ';' J ),p,s) ) ) = ( IC ( Result (( p +* ( I ';' J ) ),( Initialized s )) ) ) by SCMFSA6B:def 1
.= ( IC ( Comput (p2,s2,( LifeSpan (p2,s2) )) ) ) by A25,EXTPRO_1:23
.= ( IC ( Comput (p2,s2,( ( m1 + 1 ) + m3 )) ) ) by A1,A2,A3,A4,A14,CKB26:1
.= ( ( IC ( Comput (p3,s3,m3) ) ) + ( card I ) ) by A59,EXTPRO_1:4
.= ( ( IC ( Result (p3,s3) ) ) + ( card I ) ) by A28,EXTPRO_1:23
.= ( ( IC IEJIs ) + ( card I ) ) by A34,A60,SCMFSA6B:def 1;
A62:now
let x being set;
assume A63: x in ( dom ( IExec (( I ';' J ),p,s) ) );
per cases  by A63,SCMFSA6A:5;
suppose A64: x is Int-Location;

then x <> ( IC ( SCM+FSA ) ) by SCMFSA_2:56;
then A65: (not x in ( dom ( Start-At (l,( SCM+FSA )) ) )) by A41,TARSKI:def 1;
( ( IExec (( I ';' J ),p,s) ) . x ) = ( IEJIs . x ) by A58,A64,SCMFSA6A:7;
hence ( ( IExec (( I ';' J ),p,s) ) . x ) = ( ( IEJIs +* ( Start-At (( ( IC IEJIs ) + ( card I ) ),( SCM+FSA )) ) ) . x ) by A65,FUNCT_4:11;
end;
suppose A66: x is FinSeq-Location;

then x <> ( IC ( SCM+FSA ) ) by SCMFSA_2:57;
then A67: (not x in ( dom ( Start-At (l,( SCM+FSA )) ) )) by A41,TARSKI:def 1;
( ( IExec (( I ';' J ),p,s) ) . x ) = ( IEJIs . x ) by A58,A66,SCMFSA6A:7;
hence ( ( IExec (( I ';' J ),p,s) ) . x ) = ( ( IEJIs +* ( Start-At (( ( IC IEJIs ) + ( card I ) ),( SCM+FSA )) ) ) . x ) by A67,FUNCT_4:11;
end;
suppose A68: x = ( IC ( SCM+FSA ) );

then x in { ( IC ( SCM+FSA ) ) } by TARSKI:def 1;
then A69: x in ( dom ( Start-At (l,( SCM+FSA )) ) ) by FUNCOP_1:13;
thus ( ( IExec (( I ';' J ),p,s) ) . x ) = ( ( Start-At (l,( SCM+FSA )) ) . ( IC ( SCM+FSA ) ) ) by A61,A68,FUNCOP_1:72
.= ( ( IEJIs +* ( Start-At (( ( IC IEJIs ) + ( card I ) ),( SCM+FSA )) ) ) . x ) by A68,A69,FUNCT_4:13;
end;
end;
( dom ( IExec (( I ';' J ),p,s) ) ) = (the carrier of ( SCM+FSA )) by PARTFUN1:def 2
.= ( dom ( IEJIs +* ( Start-At (( ( IC IEJIs ) + ( card I ) ),( SCM+FSA )) ) ) ) by PARTFUN1:def 2;
hence thesis by A62,FUNCT_1:2;
end;
