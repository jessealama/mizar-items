environ
vocabularies AMI_1,SCMFSA_2,SCMFSA7B,SCMFSA6A,SF_MASTR,GRAPHSP,AMI_3,SCMFSA6B,TURING_1,AOFA_I00,SCMFSA8C,SCMFSA8B,SCMFSA8A,CARD_1,AMISTD_2,RELAT_1,TARSKI,XXREAL_0,ARYTM_3,FSM_1,XBOOLE_0,FUNCT_4,NUMBERS,SCMFSA6C,UNIALG_2,CIRCUIT2,FUNCT_1,MSUALG_1,SUBSET_1,NAT_1,STRUCT_0,FINSET_1,SCMFSA_1,ZFMISC_1,SCMNORM,PRE_FF,ARYTM_1,SFMASTR1,PARTFUN1,RELOC,PBOOLE,FUNCOP_1,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,FINSET_1,NAT_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_4,FUNCOP_1,PBOOLE,FUNCT_7,PRE_FF,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,SCMFSA_1,SCMFSA_2,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA8C,XXREAL_0,SEQ_4,CKB1;
definitions EXTPRO_1,COMPOS_1,SCMFSA_2,SCMFSA7B,FUNCOP_1,SCMFSA6A,MEMSTR_0,CKB1;
theorems TARSKI,ZFMISC_1,ENUMSET1,NAT_1,RELAT_1,FUNCT_1,FUNCT_2,LATTICE2,GRFUNC_1,SUBSET_1,FUNCT_4,PRE_FF,SCMFSA_2,MEMSTR_0,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA8C,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,FUNCOP_1,XXREAL_0,AMI_3,XXREAL_2,PBOOLE,PARTFUN1,COMPOS_1,EXTPRO_1,AMISTD_2,CKB1,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
schemes NAT_1,DOMAIN_1,FRAENKEL,RECDEF_1;
registrations XBOOLE_0,SUBSET_1,SETFAM_1,FUNCT_1,ORDINAL1,FINSET_1,NUMBERS,XREAL_0,NAT_1,INT_1,MEMBERED,AMI_5,SCMFSA_2,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8C,SCMFSA_9,XXREAL_2,RELAT_1,SCMFSA10,AMISTD_2,COMPOS_1,EXTPRO_1,PBOOLE,FUNCT_4,FUNCOP_1,SCMFSA6A,STRUCT_0,MEMSTR_0,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
constructors DOMAIN_1,SETWISEO,SEQ_4,PRE_FF,SCM_1,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA8C,RELSET_1,PRE_POLY,AMISTD_2,SCMFSA7B,SCMFSA_1,PBOOLE,AMISTD_1,COMPLEX1,INT_2,NAT_D,XXREAL_1,MEMSTR_0,CKB1;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve p for (Instruction-Sequence of ( SCM+FSA ));
reserve s for (State of ( SCM+FSA ));
reserve J for (Program of ( SCM+FSA ));
reserve Ig for  good (Program of ( SCM+FSA ));
reserve a for Int-Location;
theorem
Th8: (((Ig is  parahalting or (Ig is_halting_on ( Initialized s ),p & Ig is_closed_on ( Initialized s ),p)) & (J is  parahalting or (J is_halting_on ( IExec (Ig,p,s) ),p & J is_closed_on ( IExec (Ig,p,s) ),p))) implies ( ( IExec (( Ig ';' J ),p,s) ) . a ) = ( ( IExec (J,p,( IExec (Ig,p,s) )) ) . a ))
proof
set I = Ig;
assume that
A1: (I is  parahalting or (I is_halting_on ( Initialized s ),p & I is_closed_on ( Initialized s ),p))
and
A2: (J is  parahalting or (J is_halting_on ( IExec (I,p,s) ),p & J is_closed_on ( IExec (I,p,s) ),p));
A3: J is_halting_on ( IExec (I,p,s) ),p by A2,SCMFSA7B:19;
A4: I is_closed_on ( Initialized s ),p by A1,SCMFSA7B:18;
A5: (not a in ( dom ( Start-At (( ( IC ( IExec (J,p,( IExec (I,p,s) )) ) ) + ( card I ) ),( SCM+FSA )) ) )) by SCMFSA_2:102;
A6: J is_closed_on ( IExec (I,p,s) ),p by A2,SCMFSA7B:18;
I is_halting_on ( Initialized s ),p by A1,SCMFSA7B:19;
then ( IExec (( I ';' J ),p,s) ) = ( ( IExec (J,p,( IExec (I,p,s) )) ) +* ( Start-At (( ( IC ( IExec (J,p,( IExec (I,p,s) )) ) ) + ( card I ) ),( SCM+FSA )) ) ) by A3,A4,A6,CKB27:1;
hence thesis by A5,FUNCT_4:11;
end;
