environ
vocabularies NUMBERS,SUBSET_1,INT_1,NAT_1,FINSEQ_1,NEWTON,ARYTM_3,ARYTM_1,RELAT_1,CARD_1,FUNCT_1,CARD_3,FUNCOP_1,ORDINAL4,XBOOLE_0,TARSKI,XXREAL_0,FINSEQ_5,SQUARE_1,INT_2,COMPLEX1,ORDINAL1,ABIAN,FINSEQ_2,FUNCT_7,PARTFUN1,FINSET_1,RFINSEQ,CALCUL_2,REAL_1,ZFMISC_1,INT_5;
notations GROUP_4,INT_1,RVSUM_1,FINSET_1,ORDINAL1,CARD_1,NAT_D,INT_2,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,NAT_3,ABIAN,GR_CY_1,FINSEQ_5,FINSEQ_2,EULER_2,NEWTON,GOBRD10,FINSEQ_7,REAL_1,PEPIN,TARSKI,XBOOLE_0,SUBSET_1,XCMPLX_0,NUMBERS,XXREAL_0,NAT_1,DOMAIN_1,FINSEQ_1,RFINSEQ,FUNCOP_1,CALCUL_2,ZFMISC_1,CARD_3,WSIERP_1,BINOP_1,PROB_3,RECDEF_1,CKB4,CKB11,CKB29,CKB54;
definitions INT_1,FUNCT_1,XCMPLX_0,SQUARE_1,FINSEQ_2,TARSKI,CALCUL_2,CARD_3,CKB4,CKB11,CKB29;
theorems FINSEQ_1,FINSEQ_7,RELAT_1,FINSEQ_3,FINSEQ_2,ABSVALUE,FINSEQ_5,EULER_2,INT_3,SEQ_2,FINSEQ_4,FUNCT_2,XBOOLE_0,NAT_3,NEWTON,INT_2,NAT_2,WSIERP_1,CARD_1,PEPIN,NAT_1,XCMPLX_1,XREAL_1,HEYTING3,ORDINAL1,EULER_1,XBOOLE_1,TARSKI,RVSUM_1,NUMBERS,INT_1,FUNCT_1,FUNCOP_1,XXREAL_0,NAT_D,HILBERT3,GOBRD10,SERIES_2,GRAPH_5,HILBERT2,RFINSEQ,ZFMISC_1,CARD_2,XREAL_0,FINSEQ_6,CALCUL_2,NAT_4,PROB_3,TOPREAL7,CARD_3,REAL_3,PRE_FF,INT_4,VALUED_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB55,CKB56,CKB57,CKB58;
schemes NAT_1,FUNCT_2,RECDEF_1,FINSEQ_2,FUNCT_7,FINSEQ_1;
registrations XXREAL_0,MEMBERED,RELAT_1,FINSEQ_1,ORDINAL1,WSIERP_1,NUMBERS,XBOOLE_0,XREAL_0,NAT_1,INT_1,FINSET_1,NAT_3,RVSUM_1,FUNCT_1,CARD_1,NEWTON,SUBSET_1,VALUED_0,VALUED_1,FINSEQ_2,PRE_POLY,CARD_3,RELSET_1;
constructors BINARITH,ABIAN,WSIERP_1,PEPIN,UPROOTS,NAT_3,NAT_D,REALSET1,GR_CY_1,FINSEQ_5,GOBRD10,EULER_2,RFINSEQ,GROUP_4,FINSEQ_7,REAL_1,WELLORD2,CALCUL_2,SETFAM_1,PROB_3,SEQ_1,RECDEF_1,BINOP_1,BINOP_2,CLASSES1,RELSET_1,CKB4,CKB11,CKB29,CKB54;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve p for Prime;
reserve q for Prime;
theorem
((((p > 2 & q > 2) & p <> q) & (( p mod 4 ) = 1 or ( q mod 4 ) = 1)) implies ( Lege (p,q) ) = ( Lege (q,p) ))
proof
assume that
A1: p > 2
and
A2: q > 2
and
A3: p <> q
and
A4: (( p mod 4 ) = 1 or ( q mod 4 ) = 1);
p > 1 by INT_2:def 4;
then A5: ( p -' 1 ) = ( p - 1 ) by XREAL_1:233;
q > 1 by INT_2:def 4;
then A6: ( q -' 1 ) = ( q - 1 ) by XREAL_1:233;
per cases  by A4;
suppose ( p mod 4 ) = 1;

then p = ( ( 4 * ( p div 4 ) ) + 1 ) by NAT_D:2;
then ( p -' 1 ) = ( 2 * ( 2 * ( p div 4 ) ) ) by A5;
then ( ( p -' 1 ) div 2 ) = ( 2 * ( p div 4 ) ) by NAT_D:18;
then A7: ( ( Lege (p,q) ) * ( Lege (q,p) ) ) = ( ( - 1 ) |^ ( ( 2 * ( p div 4 ) ) * ( ( q -' 1 ) div 2 ) ) ) by A1,A2,A3,CKB57:1
.= ( ( ( - 1 ) |^ ( 2 * ( p div 4 ) ) ) |^ ( ( q -' 1 ) div 2 ) ) by NEWTON:9
.= ( ( ( ( - 1 ) |^ 2 ) |^ ( p div 4 ) ) |^ ( ( q -' 1 ) div 2 ) ) by NEWTON:9
.= ( ( ( 1 |^ 2 ) |^ ( p div 4 ) ) |^ ( ( q -' 1 ) div 2 ) ) by WSIERP_1:1
.= ( ( ( 1 ^2 ) |^ ( p div 4 ) ) |^ ( ( q -' 1 ) div 2 ) ) by NEWTON:81
.= ( 1 |^ ( ( q -' 1 ) div 2 ) ) by NEWTON:10
.= 1 by NEWTON:10;
per cases  by CKB30:1;
suppose ( Lege (p,q) ) = 1;

hence thesis by A7;
end;
suppose ( Lege (p,q) ) = ( 0 );

hence thesis by A7;
end;
suppose ( Lege (p,q) ) = ( - 1 );

hence thesis by A7;
end;
end;
suppose ( q mod 4 ) = 1;

then q = ( ( 4 * ( q div 4 ) ) + 1 ) by NAT_D:2;
then ( q -' 1 ) = ( 2 * ( 2 * ( q div 4 ) ) ) by A6;
then ( ( q -' 1 ) div 2 ) = ( 2 * ( q div 4 ) ) by NAT_D:18;
then A8: ( ( Lege (p,q) ) * ( Lege (q,p) ) ) = ( ( - 1 ) |^ ( ( 2 * ( q div 4 ) ) * ( ( p -' 1 ) div 2 ) ) ) by A1,A2,A3,CKB57:1
.= ( ( ( - 1 ) |^ ( 2 * ( q div 4 ) ) ) |^ ( ( p -' 1 ) div 2 ) ) by NEWTON:9
.= ( ( ( ( - 1 ) |^ 2 ) |^ ( q div 4 ) ) |^ ( ( p -' 1 ) div 2 ) ) by NEWTON:9
.= ( ( ( 1 |^ 2 ) |^ ( q div 4 ) ) |^ ( ( p -' 1 ) div 2 ) ) by WSIERP_1:1
.= ( ( ( 1 ^2 ) |^ ( q div 4 ) ) |^ ( ( p -' 1 ) div 2 ) ) by NEWTON:81
.= ( 1 |^ ( ( p -' 1 ) div 2 ) ) by NEWTON:10
.= 1 by NEWTON:10;
per cases  by CKB30:1;
suppose ( Lege (p,q) ) = 1;

hence thesis by A8;
end;
suppose ( Lege (p,q) ) = ( 0 );

hence thesis by A8;
end;
suppose ( Lege (p,q) ) = ( - 1 );

hence thesis by A8;
end;
end;
end;
