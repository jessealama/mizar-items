environ
vocabularies NUMBERS,SUBSET_1,INT_1,NAT_1,FINSEQ_1,NEWTON,ARYTM_3,ARYTM_1,RELAT_1,CARD_1,FUNCT_1,CARD_3,FUNCOP_1,ORDINAL4,XBOOLE_0,TARSKI,XXREAL_0,FINSEQ_5,SQUARE_1,INT_2,COMPLEX1,ORDINAL1,ABIAN,FINSEQ_2,FUNCT_7,PARTFUN1,FINSET_1,RFINSEQ,CALCUL_2,REAL_1,ZFMISC_1,INT_5;
notations GROUP_4,INT_1,RVSUM_1,FINSET_1,ORDINAL1,CARD_1,NAT_D,INT_2,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,NAT_3,ABIAN,GR_CY_1,FINSEQ_5,FINSEQ_2,EULER_2,NEWTON,GOBRD10,FINSEQ_7,REAL_1,PEPIN,TARSKI,XBOOLE_0,SUBSET_1,XCMPLX_0,NUMBERS,XXREAL_0,NAT_1,DOMAIN_1,FINSEQ_1,RFINSEQ,FUNCOP_1,CALCUL_2,ZFMISC_1,CARD_3,WSIERP_1,BINOP_1,PROB_3,RECDEF_1,CKB4,CKB11,CKB29;
definitions INT_1,FUNCT_1,XCMPLX_0,SQUARE_1,FINSEQ_2,TARSKI,CALCUL_2,CARD_3,CKB4,CKB11,CKB29;
theorems FINSEQ_1,FINSEQ_7,RELAT_1,FINSEQ_3,FINSEQ_2,ABSVALUE,FINSEQ_5,EULER_2,INT_3,SEQ_2,FINSEQ_4,FUNCT_2,XBOOLE_0,NAT_3,NEWTON,INT_2,NAT_2,WSIERP_1,CARD_1,PEPIN,NAT_1,XCMPLX_1,XREAL_1,HEYTING3,ORDINAL1,EULER_1,XBOOLE_1,TARSKI,RVSUM_1,NUMBERS,INT_1,FUNCT_1,FUNCOP_1,XXREAL_0,NAT_D,HILBERT3,GOBRD10,SERIES_2,GRAPH_5,HILBERT2,RFINSEQ,ZFMISC_1,CARD_2,XREAL_0,FINSEQ_6,CALCUL_2,NAT_4,PROB_3,TOPREAL7,CARD_3,REAL_3,PRE_FF,INT_4,VALUED_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
schemes NAT_1,FUNCT_2,RECDEF_1,FINSEQ_2,FUNCT_7,FINSEQ_1;
registrations XXREAL_0,MEMBERED,RELAT_1,FINSEQ_1,ORDINAL1,WSIERP_1,NUMBERS,XBOOLE_0,XREAL_0,NAT_1,INT_1,FINSET_1,NAT_3,RVSUM_1,FUNCT_1,CARD_1,NEWTON,SUBSET_1,VALUED_0,VALUED_1,FINSEQ_2,PRE_POLY,CARD_3,RELSET_1;
constructors BINARITH,ABIAN,WSIERP_1,PEPIN,UPROOTS,NAT_3,NAT_D,REALSET1,GR_CY_1,FINSEQ_5,GOBRD10,EULER_2,RFINSEQ,GROUP_4,FINSEQ_7,REAL_1,WELLORD2,CALCUL_2,SETFAM_1,PROB_3,SEQ_1,RECDEF_1,BINOP_1,BINOP_2,CLASSES1,RELSET_1,CKB4,CKB11,CKB29;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve d for Nat;
reserve p for Prime;
reserve fr for (FinSequence of ( INT ));
reserve fp for (FinSequence of ( NAT ));
theorem
Th34: ((p > 2 & (for d holds (d in ( dom fp ) implies ( ( fp . d ) gcd p ) = 1))) implies (ex fr being (FinSequence of ( INT )) st ((( len fr ) = ( len fp ) & (for d holds (d in ( dom fr ) implies ( fr . d ) = ( Lege (( fp . d ),p) )))) & ( Lege (( Product fp ),p) ) = ( Product fr ))))
proof
assume A1: p > 2;
deffunc F(Nat) = ( Lege (( fp . $1 ),p) );
set k = ( ( p -' 1 ) div 2 );
assume A2: (for d holds (d in ( dom fp ) implies ( ( fp . d ) gcd p ) = 1));
set f = ( fp |^ k );
reconsider f as (FinSequence of ( INT )) by FINSEQ_2:24,NUMBERS:17;
consider fr being FinSequence such that A3: (( len fr ) = ( len fp ) & (for d being Nat holds (d in ( dom fr ) implies ( fr . d ) = F(d)))) from FINSEQ_1:sch 2;
(for d being Nat holds (d in ( dom fr ) implies ( fr . d ) in ( INT )))
proof
let d being Nat;
assume d in ( dom fr );
then ( fr . d ) = ( Lege (( fp . d ),p) ) by A3;
hence thesis by INT_1:def 2;
end;
then reconsider fr as (FinSequence of ( INT )) by FINSEQ_2:12;
A4: fp is (FinSequence of ( REAL )) by FINSEQ_2:24;
A5: ( len f ) = ( len fp ) by NAT_3:def 1;
(for d holds (d in ( dom fr ) implies ( fr . d ),( f . d ) are_congruent_mod p))
proof
let d;
assume A6: d in ( dom fr );
then d in ( dom fp ) by A3,FINSEQ_3:29;
then ( ( fp . d ) gcd p ) = 1 by A2;
then ( Lege (( fp . d ),p) ),( ( fp . d ) |^ k ) are_congruent_mod p by A1,CKB34:1;
then A7: ( fr . d ),( ( fp . d ) |^ k ) are_congruent_mod p by A3,A6;
d in ( dom f ) by A3,A5,A6,FINSEQ_3:29;
hence thesis by A7,NAT_3:def 1;
end;
then A8: ( Product f ),( Product fr ) are_congruent_mod p by A3,A5,CKB38:1,INT_1:14;
( ( Product fp ) gcd p ) = 1 by A2,WSIERP_1:36;
then ( Lege (( Product fp ),p) ),( ( Product fp ) |^ ( ( p -' 1 ) div 2 ) ) are_congruent_mod p by A1,CKB34:1;
then ( Lege (( Product fp ),p) ),( Product f ) are_congruent_mod p by A4,NAT_3:15;
then ( Lege (( Product fp ),p) ),( Product fr ) are_congruent_mod p by A8,INT_1:15;
then A9: p divides ( ( Lege (( Product fp ),p) ) - ( Product fr ) ) by INT_2:15;
take fr;
A10: (for d holds (d in ( dom fr ) implies ((( fr . d ) = 1 or ( fr . d ) = ( 0 )) or ( fr . d ) = ( - 1 ))))
proof
let d;
assume d in ( dom fr );
then ( fr . d ) = ( Lege (( fp . d ),p) ) by A3;
hence thesis by CKB30:1;
end;
per cases  by CKB30:1;
suppose A11: ( Lege (( Product fp ),p) ) = 1;

then A12: ( Product fr ) <> ( - 1 ) by A1,A9,NAT_D:7;
now
assume ( Product fr ) = ( 0 );
then p = 1 by A9,A11,WSIERP_1:15;
hence contradiction by A1;
end;
hence thesis by A3,A10,A11,CKB37:1,A12;
end;
suppose A13: ( Lege (( Product fp ),p) ) = ( 0 );

A14:now
assume ( Product fr ) = ( - 1 );
then p = 1 by A9,A13,WSIERP_1:15;
hence contradiction by A1;
end;
now
assume ( Product fr ) = 1;
then p divides 1 by A9,A13,INT_2:10;
then p = 1 by WSIERP_1:15;
hence contradiction by A1;
end;
hence thesis by A3,A10,A13,CKB37:1,A14;
end;
suppose A15: ( Lege (( Product fp ),p) ) = ( - 1 );

A16:now
assume ( Product fr ) = 1;
then p divides ( - 2 ) by A9,A15;
then p divides 2 by INT_2:10;
hence contradiction by A1,NAT_D:7;
end;
now
assume ( Product fr ) = ( 0 );
then p divides 1 by A9,A15,INT_2:10;
then p = 1 by WSIERP_1:15;
hence contradiction by A1;
end;
hence thesis by A3,A10,A15,CKB37:1,A16;
end;
end;
