environ
vocabularies NUMBERS,SUBSET_1,INT_1,NAT_1,FINSEQ_1,NEWTON,ARYTM_3,ARYTM_1,RELAT_1,CARD_1,FUNCT_1,CARD_3,FUNCOP_1,ORDINAL4,XBOOLE_0,TARSKI,XXREAL_0,FINSEQ_5,SQUARE_1,INT_2,COMPLEX1,ORDINAL1,ABIAN,FINSEQ_2,FUNCT_7,PARTFUN1,FINSET_1,RFINSEQ,CALCUL_2,REAL_1,ZFMISC_1,INT_5;
notations GROUP_4,INT_1,RVSUM_1,FINSET_1,ORDINAL1,CARD_1,NAT_D,INT_2,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,NAT_3,ABIAN,GR_CY_1,FINSEQ_5,FINSEQ_2,EULER_2,NEWTON,GOBRD10,FINSEQ_7,REAL_1,PEPIN,TARSKI,XBOOLE_0,SUBSET_1,XCMPLX_0,NUMBERS,XXREAL_0,NAT_1,DOMAIN_1,FINSEQ_1,RFINSEQ,FUNCOP_1,CALCUL_2,ZFMISC_1,CARD_3,WSIERP_1,BINOP_1,PROB_3,RECDEF_1;
definitions INT_1,FUNCT_1,XCMPLX_0,SQUARE_1,FINSEQ_2,TARSKI,CALCUL_2,CARD_3;
theorems FINSEQ_1,FINSEQ_7,RELAT_1,FINSEQ_3,FINSEQ_2,ABSVALUE,FINSEQ_5,EULER_2,INT_3,SEQ_2,FINSEQ_4,FUNCT_2,XBOOLE_0,NAT_3,NEWTON,INT_2,NAT_2,WSIERP_1,CARD_1,PEPIN,NAT_1,XCMPLX_1,XREAL_1,HEYTING3,ORDINAL1,EULER_1,XBOOLE_1,TARSKI,RVSUM_1,NUMBERS,INT_1,FUNCT_1,FUNCOP_1,XXREAL_0,NAT_D,HILBERT3,GOBRD10,SERIES_2,GRAPH_5,HILBERT2,RFINSEQ,ZFMISC_1,CARD_2,XREAL_0,FINSEQ_6,CALCUL_2,NAT_4,PROB_3,TOPREAL7,CARD_3,REAL_3,PRE_FF,INT_4,VALUED_1,PRE_POLY,CKB1,CKB2,CKB3;
schemes NAT_1,FUNCT_2,RECDEF_1,FINSEQ_2,FUNCT_7,FINSEQ_1;
registrations XXREAL_0,MEMBERED,RELAT_1,FINSEQ_1,ORDINAL1,WSIERP_1,NUMBERS,XBOOLE_0,XREAL_0,NAT_1,INT_1,FINSET_1,NAT_3,RVSUM_1,FUNCT_1,CARD_1,NEWTON,SUBSET_1,VALUED_0,VALUED_1,FINSEQ_2,PRE_POLY,CARD_3,RELSET_1;
constructors BINARITH,ABIAN,WSIERP_1,PEPIN,UPROOTS,NAT_3,NAT_D,REALSET1,GR_CY_1,FINSEQ_5,GOBRD10,EULER_2,RFINSEQ,GROUP_4,FINSEQ_7,REAL_1,WELLORD2,CALCUL_2,SETFAM_1,PROB_3,SEQ_1,RECDEF_1,BINOP_1,BINOP_2,CLASSES1,RELSET_1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve d for Nat;
reserve fp for (FinSequence of ( INT ));
definition
let fp;
func Poly-INT fp -> (Function of ( INT ),( INT ))
means
:Def1: (for x being (Element of ( INT )) holds (ex fr being (FinSequence of ( INT )) st ((( len fr ) = ( len fp ) & (for d holds (d in ( dom fr ) implies ( fr . d ) = ( ( fp . d ) * ( x |^ ( d -' 1 ) ) )))) & ( it . x ) = ( Sum fr ))));
existence
proof
defpred F[ (Element of ( INT )),set ]
 means
(ex fr being (FinSequence of ( INT )) st ((( len fr ) = ( len fp ) & (for d holds (d in ( dom fr ) implies ( fr . d ) = ( ( fp . d ) * ( $1 |^ ( d -' 1 ) ) )))) & $2 = ( Sum fr )));
A1: (for x being (Element of ( INT )) holds (ex y being (Element of ( INT )) st F[ x,y ]))
proof
let x being (Element of ( INT ));
deffunc G(Nat) = ( ( fp . $1 ) * ( x |^ ( $1 -' 1 ) ) );
consider fr being FinSequence such that A2: (( len fr ) = ( len fp ) & (for d being Nat holds (d in ( dom fr ) implies ( fr . d ) = G(d)))) from FINSEQ_1:sch 2;
(for d being Nat holds (d in ( dom fr ) implies ( fr . d ) in ( INT )))
proof
let d being Nat;
assume d in ( dom fr );
then ( fr . d ) = ( ( fp . d ) * ( x |^ ( d -' 1 ) ) ) by A2;
hence thesis by INT_1:def 2;
end;
then reconsider fr as (FinSequence of ( INT )) by FINSEQ_2:12;
take ( Sum fr );
take fr;
thus thesis by A2;
end;
consider f being (Function of ( INT ),( INT )) such that A3: (for x being (Element of ( INT )) holds F[ x,( f . x ) ]) from FUNCT_2:sch 3(A1);
take f;
thus thesis by A3;
end;
uniqueness
proof
let f1 being (Function of ( INT ),( INT ));
let f2 being (Function of ( INT ),( INT ));
assume that
A4: (for x being (Element of ( INT )) holds (ex fr1 being (FinSequence of ( INT )) st ((( len fr1 ) = ( len fp ) & (for d holds (d in ( dom fr1 ) implies ( fr1 . d ) = ( ( fp . d ) * ( x |^ ( d -' 1 ) ) )))) & ( f1 . x ) = ( Sum fr1 ))))
and
A5: (for x being (Element of ( INT )) holds (ex fr2 being (FinSequence of ( INT )) st ((( len fr2 ) = ( len fp ) & (for d holds (d in ( dom fr2 ) implies ( fr2 . d ) = ( ( fp . d ) * ( x |^ ( d -' 1 ) ) )))) & ( f2 . x ) = ( Sum fr2 ))));
(for x being (Element of ( INT )) holds ( f1 . x ) = ( f2 . x ))
proof
let x being (Element of ( INT ));
consider fr1 being (FinSequence of ( INT )) such that A6: ( len fr1 ) = ( len fp ) and A7: (for d holds (d in ( dom fr1 ) implies ( fr1 . d ) = ( ( fp . d ) * ( x |^ ( d -' 1 ) ) ))) and A8: ( f1 . x ) = ( Sum fr1 ) by A4;
consider fr2 being (FinSequence of ( INT )) such that A9: ( len fr2 ) = ( len fp ) and A10: (for d holds (d in ( dom fr2 ) implies ( fr2 . d ) = ( ( fp . d ) * ( x |^ ( d -' 1 ) ) ))) and A11: ( f2 . x ) = ( Sum fr2 ) by A5;
A12: ( dom fr1 ) = ( dom fr2 ) by A6,A9,FINSEQ_3:29;
(for d being Nat holds (d in ( dom fr1 ) implies ( fr1 . d ) = ( fr2 . d )))
proof
let d being Nat;
assume A13: d in ( dom fr1 );
hence ( fr2 . d ) = ( ( fp . d ) * ( x |^ ( d -' 1 ) ) ) by A10,A12
.= ( fr1 . d ) by A7,A13;
end;
hence thesis by A8,A11,A12,FINSEQ_1:13;
end;
hence thesis by FUNCT_2:63;
end;
end;
