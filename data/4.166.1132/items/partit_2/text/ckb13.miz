environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,PARTIT1,EQREL_1,FUNCT_1,SETFAM_1,RELAT_1,ZFMISC_1,TARSKI,RELAT_2,XBOOLEAN,BVFUNC_2,BVFUNC_1,FUNCT_4,FUNCT_5,OPOSET_1,BINOP_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,MARGREL1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,FUNCT_2,BINOP_1,FUNCT_4,FUNCT_5,EQREL_1,PARTIT1,BVFUNC_1,BVFUNC_2,CKB1;
definitions BVFUNC_1,TARSKI,RELAT_2,XBOOLE_0,XBOOLEAN,RELSET_1,EQREL_1;
theorems TARSKI,FUNCT_1,FUNCT_2,BVFUNC_1,BVFUNC_2,RELSET_1,PARTIT1,SETFAM_1,SUBSET_1,FUNCT_4,RELAT_1,EQREL_1,RELAT_2,XBOOLE_0,XBOOLE_1,PARTFUN1,ORDERS_1,XBOOLEAN,MARGREL1,CARD_1,ZFMISC_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
schemes FUNCT_2;
registrations SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,EQREL_1,MARGREL1,PARTIT1,RELSET_1,XBOOLE_0,FUNCT_2;
constructors SETFAM_1,FUNCT_4,XCMPLX_0,BVFUNC_1,BVFUNC_2,RELSET_1,FUNCT_5,RELAT_2,DOMAIN_1,BINOP_1,CKB1;
requirements SUBSET,BOOLE,ARITHM;
begin
reserve Y for non  empty set;
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve G for (Subset of ( PARTITIONS Y ));
reserve P for (a_partition of Y);
theorem
Th13: (for a,b being (Element of ( Funcs (Y,( BOOLEAN )) )) holds (for G being (Subset of ( PARTITIONS Y )) holds (for P being (a_partition of Y) holds (a '<' b implies ( All (a,P,G) ) '<' ( All (b,P,G) )))))
proof
let a being (Element of ( Funcs (Y,( BOOLEAN )) ));
let b being (Element of ( Funcs (Y,( BOOLEAN )) ));
let G being (Subset of ( PARTITIONS Y ));
let P being (a_partition of Y);
assume that
A1: a '<' b;
let x being (Element of Y);
assume A2: ( ( All (a,P,G) ) . x ) = ( TRUE );
A3: ( All (a,P,G) ) = ( B_INF (a,( CompF (P,G) )) ) by BVFUNC_2:def 9;
A4: (for y being (Element of Y) holds (y in ( EqClass (x,( CompF (P,G) )) ) implies ( b . y ) = ( TRUE )))
proof
let y being (Element of Y);
assume y in ( EqClass (x,( CompF (P,G) )) );
then ( a . y ) = ( TRUE ) by A3,A2,BVFUNC_1:def 16;
hence thesis by A1,BVFUNC_1:def 12;
end;
( All (b,P,G) ) = ( B_INF (b,( CompF (P,G) )) ) by BVFUNC_2:def 9;
hence thesis by A4,BVFUNC_1:def 16;
end;
