environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,PARTIT1,EQREL_1,FUNCT_1,SETFAM_1,RELAT_1,ZFMISC_1,TARSKI,RELAT_2,XBOOLEAN,BVFUNC_2,BVFUNC_1,FUNCT_4,FUNCT_5,OPOSET_1,BINOP_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,MARGREL1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,FUNCT_2,BINOP_1,FUNCT_4,FUNCT_5,EQREL_1,PARTIT1,BVFUNC_1,BVFUNC_2,CKB1;
definitions BVFUNC_1,TARSKI,RELAT_2,XBOOLE_0,XBOOLEAN,RELSET_1,EQREL_1;
theorems TARSKI,FUNCT_1,FUNCT_2,BVFUNC_1,BVFUNC_2,RELSET_1,PARTIT1,SETFAM_1,SUBSET_1,FUNCT_4,RELAT_1,EQREL_1,RELAT_2,XBOOLE_0,XBOOLE_1,PARTFUN1,ORDERS_1,XBOOLEAN,MARGREL1,CARD_1,ZFMISC_1,CKB2,CKB3,CKB4,CKB5,CKB6;
schemes FUNCT_2;
registrations SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,EQREL_1,MARGREL1,PARTIT1,RELSET_1,XBOOLE_0,FUNCT_2;
constructors SETFAM_1,FUNCT_4,XCMPLX_0,BVFUNC_1,BVFUNC_2,RELSET_1,FUNCT_5,RELAT_2,DOMAIN_1,BINOP_1,CKB1;
requirements SUBSET,BOOLE,ARITHM;
begin
reserve Y for non  empty set;
reserve P for (a_partition of Y);
reserve Q for (a_partition of Y);
theorem
(for P,Q,R being (a_partition of Y) holds (( ERl R ) = ( ( ERl P ) * ( ERl Q ) ) implies (for x,y being (Element of Y) holds (x in ( EqClass (y,R) ) iff (ex z being (Element of Y) st (x in ( EqClass (z,P) ) & z in ( EqClass (y,Q) )))))))
proof
let P being (a_partition of Y);
let Q being (a_partition of Y);
let R being (a_partition of Y);
assume that
A1: ( ERl R ) = ( ( ERl P ) * ( ERl Q ) );
let x being (Element of Y);
let y being (Element of Y);
hereby
assume x in ( EqClass (y,R) );
then [ x,y ] in ( ERl R ) by CKB6:1;
then consider z being (Element of Y) such that A2: [ x,z ] in ( ERl P ) and A3: [ z,y ] in ( ERl Q ) by A1,RELSET_1:28;
take z;
thus x in ( EqClass (z,P) ) by A2,CKB6:1;
thus z in ( EqClass (y,Q) ) by A3,CKB6:1;
end;
given z being (Element of Y) such that
A4: (x in ( EqClass (z,P) ) & z in ( EqClass (y,Q) ));

([ x,z ] in ( ERl P ) & [ z,y ] in ( ERl Q )) by A4,CKB6:1;
then [ x,y ] in ( ERl R ) by A1,RELAT_1:def 8;
hence thesis by CKB6:1;
end;
