environ
vocabularies REWRITE1,WAYBEL_0,ORDINAL2,XXREAL_0,LATTICES,FUNCT_1,SUBSET_1,TARSKI,STRUCT_0,RELAT_1,YELLOW_0,YELLOW_2,LATTICE3,EQREL_1,YELLOW_6,XBOOLE_0,ORDERS_2,RELAT_2,ZFMISC_1,SETFAM_1,PRE_TOPC,WAYBEL11,CLASSES1,CAT_1,PROB_1,YELLOW_9,RCOMP_1,WAYBEL28;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,CLASSES1,PRE_TOPC,ORDERS_2,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_2,WAYBEL_3,YELLOW_6,YELLOW_9,WAYBEL_9,WAYBEL11,WAYBEL17,CKB4;
definitions TARSKI,XBOOLE_0,RELAT_1,YELLOW_6,WAYBEL11,STRUCT_0,CKB4;
theorems ZFMISC_1,RELAT_1,FUNCT_1,FUNCT_2,PRE_TOPC,TOPS_1,ORDERS_2,CLASSES1,WAYBEL_0,YELLOW_0,LATTICE3,YELLOW_2,YELLOW_4,YELLOW_6,WAYBEL_8,YELLOW_9,WAYBEL_9,WAYBEL11,YELLOW12,WAYBEL17,WAYBEL21,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
schemes RELSET_1,FUNCT_1;
registrations RELAT_1,FUNCT_1,FUNCT_2,CLASSES2,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,WAYBEL_3,YELLOW_6,WAYBEL_9,WAYBEL11,WAYBEL17,YELLOW_9,RELSET_1;
constructors CLASSES1,YELLOW_2,WAYBEL_3,WAYBEL17,YELLOW_9,RELSET_1,CKB4;
requirements SUBSET,BOOLE;
begin
registration
let N being  directed non empty RelStr;
cluster  greater_or_equal_to_id for (Function of N,N);
existence
proof
defpred P[ set,set ]
 means
(for n,m being (Element of N) holds (($1 = n & $2 = m) implies n <= m));
A1: (for e being set holds (e in (the carrier of N) implies (ex u being set st (u in (the carrier of N) & P[ e,u ]))))
proof
let e being set;
assume e in (the carrier of N);
then reconsider e9 = e as (Element of N);
consider u9 being (Element of N) such that A2: e9 <= u9 and e9 <= u9 by CKB6:1;
take u9;
thus u9 in (the carrier of N);
let n being (Element of N),m being (Element of N);
assume (e = n & u9 = m);
hence thesis by A2;
end;
consider p being Function such that A3: (( dom p ) = (the carrier of N) & ( rng p ) c= (the carrier of N)) and A4: (for e being set holds (e in (the carrier of N) implies P[ e,( p . e ) ])) from FUNCT_1:sch 5(A1);
reconsider p as (Function of N,N) by A3,FUNCT_2:2;
take p;
let j being (Element of N);
thus thesis by A4;
end;
end;
