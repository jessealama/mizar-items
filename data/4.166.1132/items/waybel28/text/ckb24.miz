environ
vocabularies REWRITE1,WAYBEL_0,ORDINAL2,XXREAL_0,LATTICES,FUNCT_1,SUBSET_1,TARSKI,STRUCT_0,RELAT_1,YELLOW_0,YELLOW_2,LATTICE3,EQREL_1,YELLOW_6,XBOOLE_0,ORDERS_2,RELAT_2,ZFMISC_1,SETFAM_1,PRE_TOPC,WAYBEL11,CLASSES1,CAT_1,PROB_1,YELLOW_9,RCOMP_1,WAYBEL28;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,CLASSES1,PRE_TOPC,ORDERS_2,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_2,WAYBEL_3,YELLOW_6,YELLOW_9,WAYBEL_9,WAYBEL11,WAYBEL17,CKB4,CKB9,CKB19,CKB22;
definitions TARSKI,XBOOLE_0,RELAT_1,YELLOW_6,WAYBEL11,STRUCT_0,CKB4,CKB9,CKB22;
theorems ZFMISC_1,RELAT_1,FUNCT_1,FUNCT_2,PRE_TOPC,TOPS_1,ORDERS_2,CLASSES1,WAYBEL_0,YELLOW_0,LATTICE3,YELLOW_2,YELLOW_4,YELLOW_6,WAYBEL_8,YELLOW_9,WAYBEL_9,WAYBEL11,YELLOW12,WAYBEL17,WAYBEL21,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB9,CKB10,CKB11,CKB12,CKB14,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23;
schemes RELSET_1,FUNCT_1;
registrations RELAT_1,FUNCT_1,FUNCT_2,CLASSES2,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,WAYBEL_3,YELLOW_6,WAYBEL_9,WAYBEL11,WAYBEL17,YELLOW_9,RELSET_1,CKB7,CKB8,CKB13,CKB15;
constructors CLASSES1,YELLOW_2,WAYBEL_3,WAYBEL17,YELLOW_9,RELSET_1,CKB4,CKB9,CKB19,CKB22;
requirements SUBSET,BOOLE;
begin
theorem
Th17: (for L being non empty RelStr holds (for N being  constant (net of L) holds (for M being (subnet of N) holds (M is  constant & ( the_value_of N ) = ( the_value_of M )))))
proof
let L being non empty RelStr;
let N being  constant (net of L);
let M being (subnet of N);
consider f being (Function of M,N) such that A1: (the mapping of M) = ( (the mapping of N) * f ) and (for m being (Element of N) holds (ex n being (Element of M) st (for p being (Element of M) holds (n <= p implies m <= ( f . p ))))) by YELLOW_6:def 9;
set y = the (Element of ( dom (the mapping of M) ));
A2: ( dom (the mapping of N) ) = (the carrier of N) by FUNCT_2:def 1;
then A3: ( the_value_of (the mapping of N) ) = ( (the mapping of N) . ( f . y ) ) by FUNCT_1:def 12
.= ( (the mapping of M) . y ) by A1,FUNCT_1:12;
A4: ( dom f ) = (the carrier of M) by FUNCT_2:def 1;
(for n1,n2 being set holds ((n1 in ( dom (the mapping of M) ) & n2 in ( dom (the mapping of M) )) implies ( (the mapping of M) . n1 ) = ( (the mapping of M) . n2 )))
proof
let n1 being set,n2 being set;
assume that
A5: n1 in ( dom (the mapping of M) )
and
A6: n2 in ( dom (the mapping of M) );
A7: (( f . n1 ) in ( rng f ) & ( f . n2 ) in ( rng f )) by A4,A5,A6,FUNCT_1:def 3;
thus ( (the mapping of M) . n1 ) = ( (the mapping of N) . ( f . n1 ) ) by A1,A4,A5,FUNCT_1:13
.= ( (the mapping of N) . ( f . n2 ) ) by A2,A7,FUNCT_1:def 10
.= ( (the mapping of M) . n2 ) by A1,A4,A6,FUNCT_1:13;
end;
then A8: (the mapping of M) is  constant by FUNCT_1:def 10;
hence A9: M is  constant by YELLOW_6:def 4;
thus ( the_value_of N ) = ( the_value_of (the mapping of N) ) by YELLOW_6:def 8
.= ( the_value_of (the mapping of M) ) by A8,A3,FUNCT_1:def 12
.= ( the_value_of M ) by A9,YELLOW_6:def 8;
end;
