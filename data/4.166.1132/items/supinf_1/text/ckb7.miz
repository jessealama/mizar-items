environ
vocabularies SUBSET_1,NUMBERS,XXREAL_0,MEMBERED,XXREAL_2,ORDINAL1,XBOOLE_0,TARSKI,ORDINAL2,SETFAM_1,SUPINF_1;
notations XBOOLE_0,SUBSET_1,SETFAM_1,DOMAIN_1,ORDINAL1,NUMBERS,MEMBERED,XXREAL_0,XXREAL_2,CKB1,CKB2,CKB3,CKB4;
definitions TARSKI,XXREAL_0,MEMBERED,SUBSET_1,SETFAM_1,XXREAL_2,CKB4;
theorems TARSKI,XXREAL_0,SETFAM_1,XXREAL_2,CKB4,CKB6;
schemes MEMBERED;
registrations XBOOLE_0,SUBSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,CKB5;
constructors NUMBERS,XXREAL_0,XREAL_0,MEMBERED,SETFAM_1,DOMAIN_1,XXREAL_2,CKB2,CKB3,CKB4;
requirements SUBSET,BOOLE;
begin
definition
let X being  ext-real-membered set;
func SetMinorant X ->  ext-real-membered set means 
:Def15: (for x being  ext-real number holds (x in it iff x is (LowerBound of X)));
existence
proof
defpred P[  ext-real number ]
 means
$1 is (LowerBound of X);
consider Y being  ext-real-membered set such that A1: (for x being  ext-real number holds (x in Y iff P[ x ])) from MEMBERED:sch 2;
take Y;
thus thesis by A1;
end;
uniqueness
proof
let Y1 being  ext-real-membered set;
let Y2 being  ext-real-membered set;
assume that
A2: (for x being  ext-real number holds (x in Y1 iff x is (LowerBound of X)))
and
A3: (for x being  ext-real number holds (x in Y2 iff x is (LowerBound of X)));
let x being  ext-real number;
(x in Y1 iff x is (LowerBound of X)) by A2;
hence thesis by A3;
end;
end;
