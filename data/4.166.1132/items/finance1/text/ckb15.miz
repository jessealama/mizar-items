environ
vocabularies FINANCE1,NUMBERS,XBOOLE_0,PROB_1,SUBSET_1,FUNCT_1,TARSKI,RELAT_1,CARD_1,ARYTM_1,CARD_3,PROB_3,NAT_1,ARYTM_3,XREAL_0,ORDINAL1,XXREAL_0,SERIES_1,EQREL_1,MEASURE6,SEQ_1,XXREAL_1,MESFUNC1,RANDOM_1,RANDOM_2,FUNCOP_1,VALUED_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,XXREAL_0,NAT_1,XREAL_0,NUMBERS,FUNCT_1,RELSET_1,FUNCT_2,PROB_3,SERIES_1,PROB_1,MEASURE6,SEQ_1,BINOP_2,MESFUNC1,MESFUNC6,RANDOM_1,INT_1,KOLMOG01,XXREAL_1,RCOMP_1,FUNCOP_1,VALUED_1,RANDOM_2,CKB1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14;
definitions XXREAL_0,PROB_1,SUBSET_1,TARSKI,FUNCT_2,CKB5,CKB6,CKB9,CKB10,CKB11,CKB12,CKB14;
theorems SERIES_1,PROB_1,PROB_3,XBOOLE_0,NAT_1,FUNCT_2,XXREAL_0,ORDINAL1,TARSKI,XREAL_1,XXREAL_1,MESFUNC1,MEASURE6,FINSUB_1,MESFUNC6,XREAL_0,RANDOM_1,RANDOM_2,FUNCOP_1,VALUED_1,FRECHET,XBOOLE_1,CKB3,CKB4,CKB5,CKB6,CKB9,CKB10,CKB11,CKB12,CKB14;
schemes NAT_1,FUNCT_2,RECDEF_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,NUMBERS,XREAL_0,MEMBERED,PROB_1,VALUED_0,XXREAL_0,NAT_1,XCMPLX_0,VALUED_1,FUNCT_2,CKB13;
constructors REAL_1,SEQ_1,PROB_3,SERIES_1,BINOP_2,RELSET_1,MEASURE6,RCOMP_1,MESFUNC1,MESFUNC6,KOLMOG01,RANDOM_2,FUNCOP_1,CKB2,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14;
requirements SUBSET,NUMERALS,BOOLE,ARITHM,REAL;
begin
definition
let Omega being non empty set;
let F being (SigmaField of Omega);
let X being non empty set;
let k being (Element of X);
func ElementsOfPortfolioValueProb_fut (F,k) -> (Function of Omega,( REAL ))
means
:Def11: (for w being (Element of Omega) holds ( it . w ) = ( ( Change_Element_to_Func (F,( Borel_Sets ),k) ) . w ));
existence
proof
deffunc U((Element of Omega)) = ( ( Change_Element_to_Func (F,( Borel_Sets ),k) ) . $1 );
(ex f being (Function of Omega,( REAL )) st (for d being (Element of Omega) holds ( f . d ) = U(d))) from FUNCT_2:sch 4;
hence thesis;
end;
uniqueness
proof
let f1 being (Function of Omega,( REAL )),f2 being (Function of Omega,( REAL ));
assume that
A0: (for w being (Element of Omega) holds ( f1 . w ) = ( ( Change_Element_to_Func (F,( Borel_Sets ),k) ) . w ))
and
A1: (for w being (Element of Omega) holds ( f2 . w ) = ( ( Change_Element_to_Func (F,( Borel_Sets ),k) ) . w ));
let w being (Element of Omega);
(( f1 . w ) = ( ( Change_Element_to_Func (F,( Borel_Sets ),k) ) . w ) & ( f2 . w ) = ( ( Change_Element_to_Func (F,( Borel_Sets ),k) ) . w )) by A0,A1;
hence thesis;
end;
end;
