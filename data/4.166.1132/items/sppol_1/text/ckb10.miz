environ
vocabularies NUMBERS,SUBSET_1,XREAL_0,ORDINAL1,NAT_1,ARYTM_3,XXREAL_0,ARYTM_1,FINSEQ_1,XBOOLE_0,RELAT_1,FINSET_1,TARSKI,COMPLEX1,REAL_1,PRE_TOPC,EUCLID,METRIC_1,FUNCT_1,RCOMP_1,RLTOPSP1,CARD_1,SEQ_4,XXREAL_2,PCOMPS_1,STRUCT_0,SUPINF_2,TEX_2,COMPTS_1,TOPREAL1,BORSUK_1,TOPS_2,ORDINAL2,MCART_1,ZFMISC_1,PARTFUN1,SETFAM_1,SPPOL_1;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,ORDINAL1,NUMBERS,XXREAL_0,XXREAL_2,XREAL_0,COMPLEX1,REAL_1,NAT_1,SQUARE_1,SEQ_4,FUNCT_1,PARTFUN1,PRE_TOPC,BORSUK_1,FINSET_1,FINSEQ_1,FINSEQ_4,DOMAIN_1,STRUCT_0,METRIC_1,PCOMPS_1,TOPS_2,ZFMISC_1,COMPTS_1,RLVECT_1,RLTOPSP1,EUCLID,TEX_2,TOPREAL1;
definitions TARSKI,TOPREAL1,SEQ_4,EUCLID,COMPTS_1,SUBSET_1,VALUED_1,STRUCT_0,ALGSTR_0,RLTOPSP1,XXREAL_2;
theorems TARSKI,NAT_1,INT_1,ABSVALUE,SUBSET_1,FINSET_1,FINSEQ_1,PRE_TOPC,METRIC_1,TOPS_1,TOPS_2,SEQ_4,EUCLID,TOPMETR,TOPREAL1,TOPREAL3,PCOMPS_1,COMPTS_1,TEX_2,FINSEQ_3,ZFMISC_1,HEINE,TDLAT_3,PARTFUN2,XREAL_0,XBOOLE_0,XBOOLE_1,XCMPLX_1,XREAL_1,COMPLEX1,XXREAL_0,RLTOPSP1,CKB1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9;
schemes FRAENKEL,CKB3,CKB4;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,INT_1,MEMBERED,FINSEQ_1,STRUCT_0,PRE_TOPC,TEX_2,EUCLID,TOPREAL1,FINSET_1,VALUED_0,RLTOPSP1,FUNCT_1;
constructors SETFAM_1,REAL_1,SQUARE_1,NAT_1,COMPLEX1,SEQ_4,FINSEQ_4,TOPS_2,COMPTS_1,REALSET2,TDLAT_3,TEX_2,MONOID_0,TOPMETR,TOPREAL1,PCOMPS_1,XXREAL_2,FUNCSDOM,CONVEX1,BINOP_2;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve p1 for (Point of ( TOP-REAL n ));
reserve p2 for (Point of ( TOP-REAL n ));
reserve q1 for (Point of ( TOP-REAL n ));
reserve q2 for (Point of ( TOP-REAL n ));
theorem
(for p1 holds (for p2 holds (for q1 holds (for q2 holds (( LSeg (p1,p2) ) = ( LSeg (q1,q2) ) implies ((p1 = q1 & p2 = q2) or (p1 = q2 & p2 = q1)))))))
proof
let p1;
let p2;
let q1;
let q2;
A1: q1 in ( LSeg (q1,q2) ) by RLTOPSP1:68;
A2: q2 in ( LSeg (q1,q2) ) by RLTOPSP1:68;
assume A3: ( LSeg (p1,p2) ) = ( LSeg (q1,q2) );
per cases  by A3,CKB9:1,RLTOPSP1:68;
suppose A4: (p1 = q1 & p2 = q1);

then ( LSeg (p1,p2) ) = { q1 } by RLTOPSP1:70;
hence thesis by A3,A2,A4,TARSKI:def 1;
end;
suppose A5: (p1 = q2 & p2 = q2);

then ( LSeg (p1,p2) ) = { q2 } by RLTOPSP1:70;
hence thesis by A3,A1,A5,TARSKI:def 1;
end;
suppose ((p1 = q1 & p2 = q2) or (p1 = q2 & p2 = q1));

hence thesis;
end;
end;
