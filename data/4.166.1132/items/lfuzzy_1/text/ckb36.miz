environ
vocabularies NUMBERS,XBOOLE_0,VALUED_0,FUZZY_1,FUZZY_2,LATTICE3,SUBSET_1,FUNCT_1,XXREAL_0,RELAT_1,ZFMISC_1,TARSKI,VALUED_1,RELAT_2,FUZZY_4,CARD_1,LATTICES,PARTFUN1,LFUZZY_0,EQREL_1,XXREAL_1,XREAL_0,ORDINAL1,SEQ_4,FUNCT_3,FUNCT_7,FUNCT_2,ARYTM_3,STRUCT_0,QC_LANG1,CARD_3,FUNCOP_1,REWRITE1,WAYBEL_0,NEWTON,ORDINAL2,LATTICE2,WAYBEL_1,NAT_1,LFUZZY_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,FUNCT_1,FUNCT_2,ORDINAL1,NUMBERS,XCMPLX_0,DOMAIN_1,PARTFUN1,CARD_3,RELAT_2,FUNCT_3,RFUNCT_1,SUBSET_1,XREAL_0,NAT_1,SEQ_1,SEQ_4,VALUED_0,RCOMP_1,RELSET_1,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,WAYBEL_1,WAYBEL_3,FUZZY_1,FUZZY_2,FUZZY_4,FUNCOP_1,LFUZZY_0,XXREAL_0,CKB2,CKB9,CKB10,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB29;
definitions TARSKI,XBOOLE_0,FUZZY_1,BINOP_1,CKB2,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20;
theorems XBOOLE_0,ZFMISC_1,WAYBEL_1,RELAT_1,LATTICE3,YELLOW_0,TARSKI,SEQ_4,YELLOW_2,WAYBEL_3,CARD_3,YELLOW_1,FUNCOP_1,FUZZY_2,FUZZY_4,FUNCT_3,FUZZY_1,PARTFUN1,LFUZZY_0,RELAT_2,ORDINAL1,XXREAL_0,BINOP_1,RELSET_1,FUNCT_2,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB23,CKB24,CKB27,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35;
schemes FRAENKEL,RECDEF_1,NAT_1,LFUZZY_0;
registrations XBOOLE_0,SUBSET_1,XXREAL_0,XREAL_0,NAT_1,MEMBERED,STRUCT_0,LATTICE3,MONOID_0,YELLOW_1,WAYBEL10,WAYBEL17,LFUZZY_0,RELAT_1,FUNCT_2,NUMBERS,FUZZY_1,RELSET_1,CKB1,CKB21,CKB22,CKB25,CKB26,CKB28;
constructors DOMAIN_1,SQUARE_1,NAT_1,BINOP_2,RFUNCT_1,MONOID_0,PSCOMP_1,WAYBEL_3,FUZZY_2,FUZZY_4,LFUZZY_0,SEQ_1,XXREAL_2,SEQ_4,RELSET_1,FUNCOP_1,FUZZY_1,CKB2,CKB9,CKB10,CKB13,CKB15,CKB17,CKB20,CKB29;
requirements BOOLE,SUBSET,NUMERALS,REAL,ARITHM;
begin
reserve X for non empty set;
theorem
(for R being (RMembership_Func of X,X) holds ( max (R,( converse R )) ) is  symmetric)
proof
let R being (RMembership_Func of X,X);
set S = ( max (R,( converse R )) );
let x being (Element of X),y being (Element of X);
thus ( S . (x,y) ) = ( S . [ x,y ] )
.= ( max (( R . (x,y) ),( ( converse R ) . (x,y) )) ) by FUZZY_1:def 4
.= ( max (( R . (x,y) ),( R . (y,x) )) ) by FUZZY_4:26
.= ( max (( ( converse R ) . (y,x) ),( R . (y,x) )) ) by FUZZY_4:26
.= ( S . [ y,x ] ) by FUZZY_1:def 4
.= ( S . (y,x) );
end;
