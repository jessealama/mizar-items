environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,FUNCT_1,ZFMISC_1,FUNCT_5,RELAT_1,TARSKI,CAT_1,FUNCOP_1,STRUCT_0,GRAPH_1,FUNCT_3,REALSET1,PARTFUN1,FUNCT_4,MCART_1,CAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,PARTFUN1,FUNCT_3,FUNCT_4,FUNCT_5,REALSET1,FUNCOP_1,STRUCT_0,GRAPH_1,CAT_1,CKB1,CKB4,CKB5,CKB8,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16;
definitions TARSKI,CAT_1,REALSET1,FUNCOP_1,BINOP_1,GRAPH_1,CKB8,CKB10,CKB12,CKB16;
theorems TARSKI,ZFMISC_1,MCART_1,DOMAIN_1,FUNCT_1,FUNCT_2,FUNCT_3,FUNCT_4,FUNCT_5,PARTFUN1,FUNCOP_1,CAT_1,GRFUNC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,CKB2,CKB3,CKB6,CKB7,CKB8,CKB9,CKB10,CKB12,CKB16;
schemes XBOOLE_0,BINOP_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,REALSET1,CAT_1,STRUCT_0,RELAT_1,CKB11;
constructors PARTFUN1,BINOP_1,FUNCT_3,FUNCT_4,FUNCT_5,REALSET1,CAT_1,FUNCOP_1,RELSET_1,CKB1,CKB4,CKB5,CKB8,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16;
requirements SUBSET,BOOLE;
begin
reserve C for Category;
registration
let C;
cluster  strict for (Subcategory of C);
existence
proof
set c = the (Object of C);
set E = ( 1Cat (c,( id c )) );
now
thus (the carrier of E) c= (the carrier of C)
proof
let a being set;
assume a in (the carrier of E);
then a = c by TARSKI:def 1;
hence thesis;
end;

thus (for a,b being (Object of E) holds (for a9,b9 being (Object of C) holds ((a = a9 & b = b9) implies ( Hom (a,b) ) c= ( Hom (a9,b9) ))))
proof
let a being (Object of E),b being (Object of E);
let a9 being (Object of C),b9 being (Object of C);
assume (a = a9 & b = b9);
then A1: (a9 = c & b9 = c) by TARSKI:def 1;
let x being set;
assume x in ( Hom (a,b) );
then x = ( id c ) by TARSKI:def 1;
hence thesis by A1,CAT_1:26;
end;

thus (the Comp of E) c= (the Comp of C)
proof
reconsider i = ( id c ) as (Morphism of C);
A2: ( Hom (c,c) ) <> ( {} ) by CAT_1:27;
A3: (( dom ( id c ) ) = c & ( cod ( id c ) ) = c) by CAT_1:19;
then A4: [ ( id c ),( id c ) ] in ( dom (the Comp of C) ) by CAT_1:15;
(the Comp of E) = ( (( id c ),( id c )) .--> ( ( id c ) * ( id c ) ) ) by CAT_1:30
.= ( (( id c ),( id c )) .--> ( ( id c ) * i ) ) by A2,CAT_1:def 10
.= ( [ ( id c ),( id c ) ] .--> ( (the Comp of C) . (( id c ),( id c )) ) ) by A3,CAT_1:16;
hence thesis by A4,FUNCT_4:7;
end;

let a being (Object of E);
let a9 being (Object of C);
assume a = a9;
then a9 = c by TARSKI:def 1;
hence ( id a ) = ( id a9 ) by TARSKI:def 1;
end;
then E is (Subcategory of C) by CKB16:def 1;
hence thesis;
end;
end;
