environ
vocabularies ZFMISC_1,XBOOLE_0,TARSKI,SUBSET_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,CKB10,CKB11,CKB16,CKB19,CKB20,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32;
definitions TARSKI,XBOOLE_0,ZFMISC_1,CKB10,CKB19,CKB20,CKB26;
theorems XBOOLE_0,TARSKI,ENUMSET1,ZFMISC_1,XBOOLE_1,CKB10,CKB17,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57;
schemes XBOOLE_0;
registrations XBOOLE_0,ZFMISC_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB14,CKB15,CKB18,CKB21;
constructors TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,CKB10,CKB16,CKB19,CKB20,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32;
requirements BOOLE;
begin
reserve E for set;
reserve A for (Subset of E);
reserve B for (Subset of E);
theorem
Th51: (for A holds (for B holds ((for x being (Element of E) holds (x in A iff (not x in B))) implies A = ( B ` ))))
proof
let A being (Subset of E),B being (Subset of E);
assume A1: (for x being (Element of E) holds (x in A iff (not x in B)));
thus A c= ( B ` )
proof
let x being set;
assume A2: x in A;
A in ( bool E ) by CKB10:def 1;
then A c= E by ZFMISC_1:def 1;
then x in E by A2,TARSKI:def 3;
then x is (Element of E) by CKB10:def 1;
then A3: (not x in B) by A1,A2;
x in E by A2,CKB17:1;
hence thesis by A3,XBOOLE_0:def 5;
end;

let x being set;
assume A4: x in ( B ` );
( B ` ) in ( bool E ) by CKB10:def 1;
then ( B ` ) c= E by ZFMISC_1:def 1;
then x in E by A4,TARSKI:def 3;
then reconsider x as (Element of E) by CKB10:def 1;
(not x in B) by A4,XBOOLE_0:def 5;
hence thesis by A1;
end;
