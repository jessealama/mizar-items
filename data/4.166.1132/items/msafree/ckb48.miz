environ
vocabularies XBOOLE_0,FUNCT_1,RELAT_1,PBOOLE,SUBSET_1,CARD_3,REALSET1,TARSKI,ZFMISC_1,PARTFUN1,STRUCT_0,MSUALG_1,MSUALG_2,PRELAMB,MSUALG_3,FINSEQ_1,MARGREL1,LANG1,TDGROUP,DTCONSTR,TREES_3,TREES_4,NAT_1,TREES_2,MCART_1,UNIALG_2,QC_LANG1,GROUP_6,MSAFREE;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NAT_1,RELAT_1,RELSET_1,STRUCT_0,FUNCT_1,PARTFUN1,MCART_1,FUNCT_2,FINSEQ_1,PBOOLE,TREES_2,FINSEQ_2,CARD_3,LANG1,TREES_4,DTCONSTR,MSUALG_1,MSUALG_2,MSUALG_3,CKB2,CKB3,CKB4,CKB7,CKB11,CKB13,CKB14,CKB16,CKB18,CKB23,CKB24,CKB26,CKB33,CKB34,CKB35,CKB37,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47;
definitions TARSKI,XBOOLE_0,PBOOLE,MSUALG_3,CKB2,CKB3,CKB7,CKB11,CKB13,CKB14,CKB16,CKB18,CKB23,CKB24,CKB26,CKB33,CKB34,CKB35,CKB37,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47;
theorems TARSKI,FUNCT_1,FUNCT_2,MCART_1,ZFMISC_1,PBOOLE,CARD_3,MSUALG_1,MSUALG_2,MSUALG_3,RELAT_1,LANG1,DTCONSTR,FINSEQ_1,TREES_4,TREES_1,DOMAIN_1,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,TREES_3,PARTFUN1,FINSEQ_3,FINSEQ_2,CKB1,CKB2,CKB3,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB22,CKB23,CKB24,CKB26,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB37,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47;
schemes CLASSES1,FUNCT_1,RELSET_1,DTCONSTR,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSEQ_1,PBOOLE,TREES_2,TREES_3,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_3,FUNCT_2,PARTFUN1,RELSET_1,PRE_POLY,CKB5,CKB6,CKB8,CKB9,CKB19,CKB21,CKB25,CKB27,CKB36,CKB38;
constructors XXREAL_0,NAT_1,NAT_D,CARD_3,FINSEQOP,DTCONSTR,MSUALG_3,RELSET_1,PBOOLE,CKB2,CKB3,CKB7,CKB11,CKB13,CKB14,CKB16,CKB18,CKB23,CKB24,CKB26,CKB33,CKB34,CKB35,CKB37,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve x for set;
theorem
Th17: (for S being non void non empty ManySortedSign holds (for X being  non-empty (ManySortedSet of (the carrier of S)) holds ( FreeGen X ) is  free))
proof
let S being non void non empty ManySortedSign;
let X being  non-empty (ManySortedSet of (the carrier of S));
set D = ( DTConMSA X );
set FA = ( FreeMSA X );
set FG = ( FreeGen X );
let U1 being  non-empty MSAlgebra over S;
let F being (ManySortedFunction of FG,(the Sorts of U1));
set SA = (the Sorts of FA);
set AR = (the Arity of S);
set S1 = (the Sorts of U1);
set O = (the carrier' of S);
set RS = (the ResultSort of S);
set DU = ( Union (the Sorts of U1) );
deffunc TermVal((Symbol of D)) = ( pi (F,(the Sorts of U1),$1) );
deffunc NTermVal((Symbol of D),FinSequence,FinSequence) = ( pi (( @ (X,$1) ),U1,$3) );
consider G being (Function of ( TS D ),DU) such that A1: (for t being (Symbol of D) holds (t in ( Terminals D ) implies ( G . ( root-tree t ) ) = TermVal(t))) and A2: (for nt being (Symbol of D) holds (for ts being (FinSequence of ( TS D )) holds (nt ==> ( roots ts ) implies ( G . ( nt -tree ts ) ) = NTermVal(nt,( roots ts ),( G * ts ))))) from DTCONSTR:sch 8;
deffunc F(set) = ( G | ( (the Sorts of FA) . $1 ) );
consider h being Function such that A3: (( dom h ) = (the carrier of S) & (for s being set holds (s in (the carrier of S) implies ( h . s ) = F(s)))) from FUNCT_1:sch 3;
reconsider h as (ManySortedSet of (the carrier of S)) by A3,PARTFUN1:def 2,RELAT_1:def 18;
(for s being set holds (s in ( dom h ) implies ( h . s ) is Function))
proof
let s being set;
assume s in ( dom h );
then ( h . s ) = ( G | ( (the Sorts of FA) . s ) ) by A3;
hence thesis;
end;
then reconsider h as (ManySortedFunction of (the carrier of S)) by FUNCOP_1:def 6;
defpred P[ set ]
 means
(for s being (SortSymbol of S) holds ($1 in ( (the Sorts of FA) . s ) implies ( ( h . s ) . $1 ) in ( (the Sorts of U1) . s )));
A4: (for nt being (Symbol of D) holds (for ts being (FinSequence of ( TS D )) holds ((nt ==> ( roots ts ) & (for t being (DecoratedTree of (the carrier of D)) holds (t in ( rng ts ) implies P[ t ]))) implies P[ ( nt -tree ts ) ])))
proof
let nt being (Symbol of D);
let ts being (FinSequence of ( TS D ));
assume that
A5: nt ==> ( roots ts )
and
A6: (for t being (DecoratedTree of (the carrier of D)) holds (t in ( rng ts ) implies P[ t ]));
set p = ( G * ts );
set o = ( @ (X,nt) );
set ar = ( the_arity_of o );
set rs = ( the_result_sort_of o );
set OU = ( [: (the carrier' of S),{ (the carrier of S) } :] \/ ( Union ( coprod (X qua (ManySortedSet of (the carrier of S))) ) ) );
set rt = ( roots ts );
A7: [ o,(the carrier of S) ] = nt by A5,CKB46:def 1;
then A8: [ [ o,(the carrier of S) ],rt ] in (the Rules of D) by A5,LANG1:def 1;
A9: [ o,(the carrier of S) ] = ( Sym (o,X) );
then A10: ( ( DenOp (o,X) ) . ts ) = ( nt -tree ts ) by A5,A7,CKB33:def 1;
( dom ( DenOp (o,X) ) ) = ( ( ( ( FreeSort X ) # ) * AR ) . o ) by FUNCT_2:def 1;
then ts in ( dom ( DenOp (o,X) ) ) by A5,A7,A9,CKB30:1;
then (( rng ( DenOp (o,X) ) ) c= ( ( ( FreeSort X ) * RS ) . o ) & ( nt -tree ts ) in ( rng ( DenOp (o,X) ) )) by A10,FUNCT_1:def 3,RELAT_1:def 19;
then A11: ( nt -tree ts ) in ( ( SA * RS ) . o );
set ppi = ( pi (o,U1,p) );
A12: ( rng RS ) c= (the carrier of S) by RELAT_1:def 19;
A13: ( rng ar ) c= (the carrier of S) by FINSEQ_1:def 4;
reconsider rt as (Element of ( OU * )) by A8,ZFMISC_1:87;
A14: ( len rt ) = ( len ar ) by A8,CKB17:1;
A15: ( dom rt ) = ( Seg ( len rt ) ) by FINSEQ_1:def 3;
( dom SA ) = (the carrier of S) by PARTFUN1:def 2;
then A16: ( dom ( SA * ar ) ) = ( dom ar ) by A13,RELAT_1:27;
A17: ar = ( AR . o ) by MSUALG_1:def 1;
( dom S1 ) = (the carrier of S) by PARTFUN1:def 2;
then A18: ( dom ( S1 * ar ) ) = ( dom ar ) by A13,RELAT_1:27;
A19: (( dom rt ) = ( dom ts ) & ( Seg ( len ar ) ) = ( dom ar )) by FINSEQ_1:def 3,TREES_3:def 18;
A20: ( dom p ) = ( dom ts ) by FINSEQ_3:120;
then A21: ( dom p ) = ( dom ( S1 * ar ) ) by A18,A8,A15,A19,CKB17:1;
A22: (for x holds (x in ( dom ( S1 * ar ) ) implies ( p . x ) in ( ( S1 * ar ) . x )))
proof
let x;
assume A23: x in ( dom ( S1 * ar ) );
then reconsider n = x as Nat by A18;
A24: ( ts . n ) in ( rng ts ) by A18,A14,A15,A19,A23,FUNCT_1:def 3;
( rng ts ) c= ( TS D ) by FINSEQ_1:def 4;
then reconsider t = ( ts . n ) as (Element of ( TS D )) by A24;
A25: ( p . n ) = ( G . ( ts . n ) ) by A21,A23,FINSEQ_3:120;
( ar . x ) in ( rng ar ) by A18,A23,FUNCT_1:def 3;
then reconsider s = ( ar . x ) as (SortSymbol of S) by A13;
A26: ( h . s ) = ( G | ( SA . s ) ) by A3;
( dom SA ) = (the carrier of S) by PARTFUN1:def 2;
then A27: ( SA . s ) in ( rng SA ) by FUNCT_1:def 3;
( dom G ) = ( TS D ) by FUNCT_2:def 1
.= ( union ( rng SA ) ) by CKB31:1;
then A28: ( dom ( h . s ) ) = ( SA . s ) by A26,A27,RELAT_1:62,ZFMISC_1:74;
ts in ( ( ( ( FreeSort X ) # ) * AR ) . o ) by A5,A7,A9,CKB30:1;
then ts in ( product ( ( FreeSort X ) * ar ) ) by A17,CKB1:1;
then ( ts . x ) in ( ( ( FreeSort X ) * ar ) . x ) by A18,A16,A23,CARD_3:9;
then A29: ( ts . x ) in ( ( FreeSort X ) . ( ar . x ) ) by A18,A16,A23,FUNCT_1:12;
then ( ( h . s ) . t ) in ( S1 . s ) by A6,A24;
then ( G . t ) in ( S1 . s ) by A29,A26,A28,FUNCT_1:47;
hence thesis by A23,A25,FUNCT_1:12;
end;
( dom S1 ) = (the carrier of S) by PARTFUN1:def 2;
then A30: ( dom ( S1 * RS ) ) = ( dom RS ) by A12,RELAT_1:27;
let s being (SortSymbol of S);
A31: ( dom ( Den (o,U1) ) ) = ( Args (o,U1) ) by FUNCT_2:def 1;
A32: ( dom RS ) = O by FUNCT_2:def 1;
( dom SA ) = (the carrier of S) by PARTFUN1:def 2;
then ( dom ( SA * RS ) ) = ( dom RS ) by A12,RELAT_1:27;
then ( nt -tree ts ) in ( SA . ( RS . o ) ) by A32,A11,FUNCT_1:12;
then A33: ( nt -tree ts ) in ( SA . rs ) by MSUALG_1:def 2;
( Args (o,U1) ) = ( ( ( S1 # ) * AR ) . o ) by MSUALG_1:def 4
.= ( product ( S1 * ar ) ) by A17,CKB1:1;
then A34: p in ( Args (o,U1) ) by A20,A18,A14,A15,A19,A22,CARD_3:9;
then ( pi (o,U1,p) ) = ( ( Den (o,U1) ) . p ) by CKB47:def 1;
then (( rng ( Den (o,U1) ) ) c= ( Result (o,U1) ) & ppi in ( rng ( Den (o,U1) ) )) by A34,A31,FUNCT_1:def 3,RELAT_1:def 19;
then A35: ppi in ( Result (o,U1) );
assume A36: ( nt -tree ts ) in ( SA . s );
A37:now
assume A38: rs <> s;
( ( FreeSort X ) . rs ) meets ( ( FreeSort X ) . s ) by A33,A36,XBOOLE_0:3;
hence contradiction by A38,CKB32:1;
end;
( G . ( nt -tree ts ) ) = ppi by A2,A5;
then A39: ppi = ( ( G | ( SA . rs ) ) . ( nt -tree ts ) ) by A33,FUNCT_1:49;
( Result (o,U1) ) = ( ( S1 * RS ) . o ) by MSUALG_1:def 5
.= ( S1 . ( RS . o ) ) by A30,A32,FUNCT_1:12
.= ( S1 . rs ) by MSUALG_1:def 2;
hence thesis by A3,A35,A39,A37;
end;
A40: (for t being (Symbol of D) holds (t in ( Terminals D ) implies P[ ( root-tree t ) ]))
proof
let t being (Symbol of D);
assume A41: t in ( Terminals D );
then consider s being (SortSymbol of S),x being set such that x in ( X . s ) and A42: t = [ x,s ] by CKB22:1;
set E = { ( root-tree tt ) where tt is (Symbol of D): (tt in ( Terminals D ) & ( tt `2 ) = s) };
set a = ( root-tree t );
A43: ( t `2 ) = s by A42,MCART_1:7;
then A44: a in E by A41;
let s1 being (SortSymbol of S);
reconsider f = ( F . s ) as (Function of ( FG . s ),( S1 . s ));
A45: ( dom f ) = ( FG . s ) by FUNCT_2:def 1;
A46: E = ( FreeGen (s,X) ) by CKB39:1;
then ( FG . s ) = E by CKB40:def 1;
then A47: (( rng f ) c= ( S1 . s ) & ( f . a ) in ( rng f )) by A44,A45,FUNCT_1:def 3,RELAT_1:def 19;
assume A48: a in ( SA . s1 );
A49:now
a in ( ( ( FreeSort X ) . s ) /\ ( ( FreeSort X ) . s1 ) ) by A44,A46,A48,XBOOLE_0:def 4;
then A50: ( ( FreeSort X ) . s ) meets ( ( FreeSort X ) . s1 ) by XBOOLE_0:4;
assume s <> s1;
hence contradiction by A50,CKB32:1;
end;
( h . s ) = ( G | ( SA . s ) ) by A3;
then ( ( h . s ) . a ) = ( G . a ) by A44,A46,FUNCT_1:49
.= ( pi (F,S1,t) ) by A1,A41
.= ( f . a ) by A41,A43,CKB45:def 1;
hence thesis by A47,A49;
end;
A51: (for t being (DecoratedTree of (the carrier of D)) holds (t in ( TS D ) implies P[ t ])) from DTCONSTR:sch 7(A40,A4);
(for s being set holds (s in (the carrier of S) implies ( h . s ) is (Function of ( (the Sorts of FA) . s ),( (the Sorts of U1) . s ))))
proof
let x being set;
assume x in (the carrier of S);
then reconsider s = x as (SortSymbol of S);
A52: ( dom G ) = ( TS D ) by FUNCT_2:def 1
.= ( union ( rng SA ) ) by CKB31:1;
( dom SA ) = (the carrier of S) by PARTFUN1:def 2;
then A53: ( SA . s ) in ( rng SA ) by FUNCT_1:def 3;
A54: ( h . s ) = ( G | ( SA . s ) ) by A3;
then A55: ( dom ( h . s ) ) = ( SA . s ) by A52,A53,RELAT_1:62,ZFMISC_1:74;
A56: ( SA . s ) c= ( dom G ) by A52,A53,ZFMISC_1:74;
( rng ( h . s ) ) c= ( S1 . s )
proof
let a being set;
assume a in ( rng ( h . s ) );
then consider T being set such that A57: T in ( dom ( h . s ) ) and A58: ( ( h . s ) . T ) = a by FUNCT_1:def 3;
reconsider T as (Element of ( TS D )) by A56,A55,A57,FUNCT_2:def 1;
T in ( SA . s ) by A54,A52,A53,A57,RELAT_1:62,ZFMISC_1:74;
hence thesis by A51,A58;
end;
hence thesis by A55,FUNCT_2:def 1,RELSET_1:4;
end;
then reconsider h as (ManySortedFunction of FA,U1) by PBOOLE:def 15;
take h;
thus h is_homomorphism FA,U1
proof
(( rng RS ) c= (the carrier of S) & ( dom SA ) = (the carrier of S)) by PARTFUN1:def 2,RELAT_1:def 19;
then A59: (( dom RS ) = O & ( dom ( SA * RS ) ) = ( dom RS )) by FUNCT_2:def 1,RELAT_1:27;
let o being (OperSymbol of S);
assume that
( Args (o,FA) ) <> ( {} );
let x being (Element of ( Args (o,FA) ));
set rs = ( the_result_sort_of o );
set DA = ( Den (o,FA) );
set D1 = ( Den (o,U1) );
set OU = ( [: (the carrier' of S),{ (the carrier of S) } :] \/ ( Union ( coprod (X qua (ManySortedSet of (the carrier of S))) ) ) );
set ar = ( the_arity_of o );
A60: ar = ( AR . o ) by MSUALG_1:def 1;
A61: ( Args (o,FA) ) = ( ( ( ( FreeSort X ) # ) * AR ) . o ) by MSUALG_1:def 4;
then reconsider p = x as (FinSequence of ( TS D )) by CKB28:1;
A62: ( Sym (o,X) ) ==> ( roots p ) by A61,CKB30:1;
then A63: ( @ (X,( Sym (o,X) )) ) = o by CKB46:def 1;
A64: ( dom ( G * p ) ) = ( dom p ) by FINSEQ_3:120;
A65: x in ( ( ( ( FreeSort X ) # ) * AR ) . o ) by A61;
A66: (for a being set holds (a in ( dom p ) implies ( ( G * p ) . a ) = ( ( h # x ) . a )))
proof
(( rng ar ) c= (the carrier of S) & ( dom SA ) = (the carrier of S)) by FINSEQ_1:def 4,PARTFUN1:def 2;
then A67: ( dom ( SA * ar ) ) = ( dom ar ) by RELAT_1:27;
set rt = ( roots p );
let a being set;
assume A68: a in ( dom p );
then reconsider n = a as Nat;
A69: [ [ o,(the carrier of S) ],rt ] in (the Rules of D) by A62,LANG1:def 1;
then reconsider rt as (Element of ( OU * )) by ZFMISC_1:87;
A70: ( len rt ) = ( len ar ) by A69,CKB17:1;
A71: (( ( G * p ) . n ) = ( G . ( x . n ) ) & ( ( h # x ) . n ) = ( ( h . ( ar /. n ) ) . ( x . n ) )) by A64,A68,FINSEQ_3:120,MSUALG_3:def 6;
A72: ( h . ( ar /. n ) ) = ( G | ( SA . ( ar /. n ) ) ) by A3;
A73: ( Seg ( len rt ) ) = ( dom rt ) by FINSEQ_1:def 3;
A74: (( dom rt ) = ( dom p ) & ( Seg ( len ar ) ) = ( dom ar )) by FINSEQ_1:def 3,TREES_3:def 18;
p in ( product ( ( FreeSort X ) * ar ) ) by A65,A60,CKB1:1;
then A75: ( p . n ) in ( ( ( FreeSort X ) * ar ) . n ) by A68,A67,A70,A73,A74,CARD_3:9;
( ( ( FreeSort X ) * ar ) . n ) = ( SA . ( ar . n ) ) by A68,A67,A70,A73,A74,FUNCT_1:12
.= ( SA . ( ar /. n ) ) by A68,A70,A73,A74,PARTFUN1:def 6;
hence thesis by A71,A72,A75,FUNCT_1:49;
end;
( dom ( h # x ) ) = ( dom ar ) by MSUALG_3:6;
then A76: ( G * p ) = ( h # x ) by A64,A66,FUNCT_1:2,MSUALG_3:6;
A77: ( h . rs ) = ( G | ( SA . rs ) ) by A3;
A78: ( dom ( DenOp (o,X) ) ) = ( ( ( ( FreeSort X ) # ) * AR ) . o ) by FUNCT_2:def 1;
( ( DenOp (o,X) ) . p ) = ( ( Sym (o,X) ) -tree p ) by A62,CKB33:def 1;
then (( rng ( DenOp (o,X) ) ) c= ( ( ( FreeSort X ) * RS ) . o ) & ( ( Sym (o,X) ) -tree p ) in ( rng ( DenOp (o,X) ) )) by A61,A78,FUNCT_1:def 3,RELAT_1:def 19;
then ( ( Sym (o,X) ) -tree p ) in ( ( SA * RS ) . o );
then ( ( Sym (o,X) ) -tree p ) in ( SA . ( RS . o ) ) by A59,FUNCT_1:12;
then A79: ( ( Sym (o,X) ) -tree p ) in ( SA . rs ) by MSUALG_1:def 2;
( dom SA ) = (the carrier of S) by PARTFUN1:def 2;
then A80: ( SA . rs ) in ( rng SA ) by FUNCT_1:def 3;
( dom G ) = ( TS D ) by FUNCT_2:def 1
.= ( union ( rng SA ) ) by CKB31:1;
then A81: ( dom ( h . rs ) ) = ( SA . rs ) by A77,A80,RELAT_1:62,ZFMISC_1:74;
DA = ( ( FreeOper X ) . o ) by MSUALG_1:def 6
.= ( DenOp (o,X) ) by CKB34:def 1;
then ( DA . x ) = ( ( Sym (o,X) ) -tree p ) by A62,CKB33:def 1;
hence ( ( h . rs ) . ( DA . x ) ) = ( G . ( ( Sym (o,X) ) -tree p ) ) by A79,A77,A81,FUNCT_1:47
.= ( pi (( @ (X,( Sym (o,X) )) ),U1,( G * p )) ) by A2,A62
.= ( D1 . ( h # x ) ) by A63,A76,CKB47:def 1;
end;

(for x holds (x in (the carrier of S) implies ( ( h || FG ) . x ) = ( F . x )))
proof
set hf = ( h || FG );
let x;
assume x in (the carrier of S);
then reconsider s = x as (SortSymbol of S);
A82: ( dom ( h . s ) ) = ( SA . s ) by FUNCT_2:def 1;
A83: ( dom ( hf . s ) ) = ( FG . s ) by FUNCT_2:def 1;
A84: ( FG . s ) = ( FreeGen (s,X) ) by CKB40:def 1;
A85: ( hf . s ) = ( ( h . s ) | ( FG . s ) ) by CKB2:def 1;
A86: (for a being set holds (a in ( FG . s ) implies ( ( hf . s ) . a ) = ( ( F . s ) . a )))
proof
let a being set;
A87: ( h . s ) = ( G | ( SA . s ) ) by A3;
assume A88: a in ( FG . s );
then a in { ( root-tree t ) where t is (Symbol of D): (t in ( Terminals D ) & ( t `2 ) = s) } by A84,CKB39:1;
then consider t being (Symbol of D) such that A89: (a = ( root-tree t ) & t in ( Terminals D )) and A90: ( t `2 ) = s;
thus ( ( hf . s ) . a ) = ( ( h . s ) . a ) by A85,A83,A88,FUNCT_1:47
.= ( G . a ) by A82,A84,A88,A87,FUNCT_1:47
.= ( pi (F,S1,t) ) by A1,A89
.= ( ( F . s ) . a ) by A89,A90,CKB45:def 1;
end;
( dom ( F . s ) ) = ( FG . s ) by FUNCT_2:def 1;
hence thesis by A83,A86,FUNCT_1:2;
end;
hence thesis by PBOOLE:3;
end;
