environ
vocabularies XBOOLE_0,FUNCT_1,RELAT_1,PBOOLE,SUBSET_1,CARD_3,REALSET1,TARSKI,ZFMISC_1,PARTFUN1,STRUCT_0,MSUALG_1,MSUALG_2,PRELAMB,MSUALG_3,FINSEQ_1,MARGREL1,LANG1,TDGROUP,DTCONSTR,TREES_3,TREES_4,NAT_1,TREES_2,MCART_1,UNIALG_2,QC_LANG1,GROUP_6,MSAFREE;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NAT_1,RELAT_1,RELSET_1,STRUCT_0,FUNCT_1,PARTFUN1,MCART_1,FUNCT_2,FINSEQ_1,PBOOLE,TREES_2,FINSEQ_2,CARD_3,LANG1,TREES_4,DTCONSTR,MSUALG_1,MSUALG_2,MSUALG_3,CKB2,CKB3,CKB4,CKB7,CKB11,CKB13,CKB14,CKB16,CKB18,CKB23;
definitions TARSKI,XBOOLE_0,PBOOLE,MSUALG_3,CKB2,CKB3,CKB7,CKB11,CKB13,CKB14,CKB16,CKB18,CKB23;
theorems TARSKI,FUNCT_1,FUNCT_2,MCART_1,ZFMISC_1,PBOOLE,CARD_3,MSUALG_1,MSUALG_2,MSUALG_3,RELAT_1,LANG1,DTCONSTR,FINSEQ_1,TREES_4,TREES_1,DOMAIN_1,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,TREES_3,PARTFUN1,FINSEQ_3,FINSEQ_2,CKB1,CKB2,CKB3,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB22,CKB23;
schemes CLASSES1,FUNCT_1,RELSET_1,DTCONSTR,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSEQ_1,PBOOLE,TREES_2,TREES_3,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_3,FUNCT_2,PARTFUN1,RELSET_1,PRE_POLY,CKB5,CKB6,CKB8,CKB9,CKB19,CKB21;
constructors XXREAL_0,NAT_1,NAT_D,CARD_3,FINSEQOP,DTCONSTR,MSUALG_3,RELSET_1,PBOOLE,CKB2,CKB3,CKB7,CKB11,CKB13,CKB14,CKB16,CKB18,CKB23;
requirements NUMERALS,BOOLE,SUBSET;
begin
definition
let S being non void non empty ManySortedSign;
let X being  non-empty (ManySortedSet of (the carrier of S));
let s being (SortSymbol of S);
func FreeSort (X,s) -> (Subset of ( TS ( DTConMSA X ) ))
equals
{ a where a is (Element of ( TS ( DTConMSA X ) )): ((ex x being set st (x in ( X . s ) & a = ( root-tree [ x,s ] ))) or (ex o being (OperSymbol of S) st ([ o,(the carrier of S) ] = ( a . ( {} ) ) & ( the_result_sort_of o ) = s))) };
coherence
proof
set A = { a where a is (Element of ( TS ( DTConMSA X ) )): ((ex x being set st (x in ( X . s ) & a = ( root-tree [ x,s ] ))) or (ex o being (OperSymbol of S) st ([ o,(the carrier of S) ] = ( a . ( {} ) ) & ( the_result_sort_of o ) = s))) };
A c= ( TS ( DTConMSA X ) )
proof
let x being set;
assume x in A;
then (ex a being (Element of ( TS ( DTConMSA X ) )) st (x = a & ((ex x being set st (x in ( X . s ) & a = ( root-tree [ x,s ] ))) or (ex o being (OperSymbol of S) st ([ o,(the carrier of S) ] = ( a . ( {} ) ) & ( the_result_sort_of o ) = s)))));
hence thesis;
end;
hence thesis;
end;
end;
