environ
vocabularies XBOOLE_0,FUNCT_1,RELAT_1,PBOOLE,SUBSET_1,CARD_3,REALSET1,TARSKI,ZFMISC_1,PARTFUN1,STRUCT_0,MSUALG_1,MSUALG_2,PRELAMB,MSUALG_3,FINSEQ_1,MARGREL1,LANG1,TDGROUP,DTCONSTR,TREES_3,TREES_4,NAT_1,TREES_2,MCART_1,UNIALG_2,QC_LANG1,GROUP_6,MSAFREE;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NAT_1,RELAT_1,RELSET_1,STRUCT_0,FUNCT_1,PARTFUN1,MCART_1,FUNCT_2,FINSEQ_1,PBOOLE,TREES_2,FINSEQ_2,CARD_3,LANG1,TREES_4,DTCONSTR,MSUALG_1,MSUALG_2,MSUALG_3,CKB2,CKB3,CKB4,CKB7,CKB11,CKB13,CKB14;
definitions TARSKI,XBOOLE_0,PBOOLE,MSUALG_3,CKB2,CKB3,CKB7,CKB11,CKB13,CKB14;
theorems TARSKI,FUNCT_1,FUNCT_2,MCART_1,ZFMISC_1,PBOOLE,CARD_3,MSUALG_1,MSUALG_2,MSUALG_3,RELAT_1,LANG1,DTCONSTR,FINSEQ_1,TREES_4,TREES_1,DOMAIN_1,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,TREES_3,PARTFUN1,FINSEQ_3,FINSEQ_2,CKB1,CKB2,CKB3,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14;
schemes CLASSES1,FUNCT_1,RELSET_1,DTCONSTR,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSEQ_1,PBOOLE,TREES_2,TREES_3,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_3,FUNCT_2,PARTFUN1,RELSET_1,PRE_POLY,CKB5,CKB6,CKB8,CKB9;
constructors XXREAL_0,NAT_1,NAT_D,CARD_3,FINSEQOP,DTCONSTR,MSUALG_3,RELSET_1,PBOOLE,CKB2,CKB3,CKB7,CKB11,CKB13,CKB14;
requirements NUMERALS,BOOLE,SUBSET;
begin
theorem
Th4: (for S being non void non empty ManySortedSign holds (for X being (ManySortedSet of (the carrier of S)) holds ( Union ( coprod X ) ) misses [: (the carrier' of S),{ (the carrier of S) } :]))
proof
let S being non void non empty ManySortedSign;
let X being (ManySortedSet of (the carrier of S));
assume ( ( Union ( coprod X ) ) /\ [: (the carrier' of S),{ (the carrier of S) } :] ) <> ( {} );
then consider x being set such that A1: x in ( ( Union ( coprod X ) ) /\ [: (the carrier' of S),{ (the carrier of S) } :] ) by XBOOLE_0:def 1;
x in ( Union ( coprod X ) ) by A1,XBOOLE_0:def 4;
then x in ( union ( rng ( coprod X ) ) ) by CARD_3:def 4;
then consider A being set such that A2: x in A and A3: A in ( rng ( coprod X ) ) by TARSKI:def 4;
consider s being set such that A4: s in ( dom ( coprod X ) ) and A5: ( ( coprod X ) . s ) = A by A3,FUNCT_1:def 3;
reconsider s as (SortSymbol of S) by A4,PARTFUN1:def 2;
A = ( coprod (s,X) ) by A5,CKB7:def 1;
then A6: (ex a being set st (a in ( X . s ) & x = [ a,s ])) by A2,CKB3:def 1;
x in [: (the carrier' of S),{ (the carrier of S) } :] by A1,XBOOLE_0:def 4;
then s in { (the carrier of S) } by A6,ZFMISC_1:87;
then (s in (the carrier of S) & s = (the carrier of S)) by TARSKI:def 1;
hence contradiction;
end;
