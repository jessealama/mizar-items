environ
vocabularies XBOOLE_0,FUNCT_1,RELAT_1,PBOOLE,SUBSET_1,CARD_3,REALSET1,TARSKI,ZFMISC_1,PARTFUN1,STRUCT_0,MSUALG_1,MSUALG_2,PRELAMB,MSUALG_3,FINSEQ_1,MARGREL1,LANG1,TDGROUP,DTCONSTR,TREES_3,TREES_4,NAT_1,TREES_2,MCART_1,UNIALG_2,QC_LANG1,GROUP_6,MSAFREE;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NAT_1,RELAT_1,RELSET_1,STRUCT_0,FUNCT_1,PARTFUN1,MCART_1,FUNCT_2,FINSEQ_1,PBOOLE,TREES_2,FINSEQ_2,CARD_3,LANG1,TREES_4,DTCONSTR,MSUALG_1,MSUALG_2,MSUALG_3,CKB2,CKB3,CKB4,CKB7,CKB11,CKB13,CKB14,CKB16,CKB18,CKB23,CKB24,CKB26;
definitions TARSKI,XBOOLE_0,PBOOLE,MSUALG_3,CKB2,CKB3,CKB7,CKB11,CKB13,CKB14,CKB16,CKB18,CKB23,CKB24,CKB26;
theorems TARSKI,FUNCT_1,FUNCT_2,MCART_1,ZFMISC_1,PBOOLE,CARD_3,MSUALG_1,MSUALG_2,MSUALG_3,RELAT_1,LANG1,DTCONSTR,FINSEQ_1,TREES_4,TREES_1,DOMAIN_1,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,TREES_3,PARTFUN1,FINSEQ_3,FINSEQ_2,CKB1,CKB2,CKB3,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB22,CKB23,CKB24,CKB26,CKB28,CKB29,CKB30;
schemes CLASSES1,FUNCT_1,RELSET_1,DTCONSTR,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSEQ_1,PBOOLE,TREES_2,TREES_3,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_3,FUNCT_2,PARTFUN1,RELSET_1,PRE_POLY,CKB5,CKB6,CKB8,CKB9,CKB19,CKB21,CKB25,CKB27;
constructors XXREAL_0,NAT_1,NAT_D,CARD_3,FINSEQOP,DTCONSTR,MSUALG_3,RELSET_1,PBOOLE,CKB2,CKB3,CKB7,CKB11,CKB13,CKB14,CKB16,CKB18,CKB23,CKB24,CKB26;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve x for set;
theorem
Th12: (for S being non void non empty ManySortedSign holds (for X being  non-empty (ManySortedSet of (the carrier of S)) holds ( union ( rng ( FreeSort X ) ) ) = ( TS ( DTConMSA X ) )))
proof
let S being non void non empty ManySortedSign;
let X being  non-empty (ManySortedSet of (the carrier of S));
set D = ( DTConMSA X );
A1: ( dom ( FreeSort X ) ) = (the carrier of S) by PARTFUN1:def 2;
thus ( union ( rng ( FreeSort X ) ) ) c= ( TS D )
proof
let x;
assume x in ( union ( rng ( FreeSort X ) ) );
then consider A being set such that A2: x in A and A3: A in ( rng ( FreeSort X ) ) by TARSKI:def 4;
consider s being set such that A4: s in ( dom ( FreeSort X ) ) and A5: ( ( FreeSort X ) . s ) = A by A3,FUNCT_1:def 3;
reconsider s as (SortSymbol of S) by A4,PARTFUN1:def 2;
A = ( FreeSort (X,s) ) by A5,CKB26:def 1
.= { a where a is (Element of ( TS D )): ((ex x being set st (x in ( X . s ) & a = ( root-tree [ x,s ] ))) or (ex o1 being (OperSymbol of S) st ([ o1,(the carrier of S) ] = ( a . ( {} ) ) & ( the_result_sort_of o1 ) = s))) };
then (ex a being (Element of ( TS D )) st (a = x & ((ex x being set st (x in ( X . s ) & a = ( root-tree [ x,s ] ))) or (ex o1 being (OperSymbol of S) st ([ o1,(the carrier of S) ] = ( a . ( {} ) ) & ( the_result_sort_of o1 ) = s))))) by A2;
hence thesis;
end;

let x;
assume x in ( TS D );
then reconsider t = x as (Element of ( TS D ));
A6: (( rng t ) c= (the carrier of D) & (the carrier of D) = ( ( Terminals D ) \/ ( NonTerminals D ) )) by LANG1:1,RELAT_1:def 19;
( {} ) in ( dom t ) by TREES_1:22;
then A7: ( t . ( {} ) ) in ( rng t ) by FUNCT_1:def 3;
A8: ( NonTerminals D ) = [: (the carrier' of S),{ (the carrier of S) } :] by CKB20:1;
A9: ( Terminals D ) = ( Union ( coprod X ) ) by CKB20:1;
per cases  by A7,A6,XBOOLE_0:def 3;
suppose A10: ( t . ( {} ) ) in ( Terminals D );

then reconsider a = ( t . ( {} ) ) as (Terminal of D);
a in ( union ( rng ( coprod X ) ) ) by A9,A10,CARD_3:def 4;
then consider A being set such that A11: a in A and A12: A in ( rng ( coprod X ) ) by TARSKI:def 4;
consider s being set such that A13: s in ( dom ( coprod X ) ) and A14: ( ( coprod X ) . s ) = A by A12,FUNCT_1:def 3;
reconsider s as (SortSymbol of S) by A13,PARTFUN1:def 2;
A = ( coprod (s,X) ) by A14,CKB7:def 1;
then (t = ( root-tree a ) & (ex b being set st (b in ( X . s ) & a = [ b,s ]))) by A11,CKB3:def 1,DTCONSTR:9;
then t in ( FreeSort (X,s) );
then A15: t in ( ( FreeSort X ) . s ) by CKB26:def 1;
( ( FreeSort X ) . s ) in ( rng ( FreeSort X ) ) by A1,FUNCT_1:def 3;
hence thesis by A15,TARSKI:def 4;
end;
suppose ( t . ( {} ) ) in ( NonTerminals D );

then reconsider a = ( t . ( {} ) ) as (NonTerminal of D);
consider o being (OperSymbol of S),x2 being (Element of { (the carrier of S) }) such that A16: a = [ o,x2 ] by A8,DOMAIN_1:1;
set rs = ( the_result_sort_of o );
x2 = (the carrier of S) by TARSKI:def 1;
then t in ( FreeSort (X,rs) ) by A16;
then A17: t in ( ( FreeSort X ) . rs ) by CKB26:def 1;
( ( FreeSort X ) . rs ) in ( rng ( FreeSort X ) ) by A1,FUNCT_1:def 3;
hence thesis by A17,TARSKI:def 4;
end;
end;
