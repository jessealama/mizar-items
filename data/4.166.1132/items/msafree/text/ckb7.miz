environ
vocabularies XBOOLE_0,FUNCT_1,RELAT_1,PBOOLE,SUBSET_1,CARD_3,REALSET1,TARSKI,ZFMISC_1,PARTFUN1,STRUCT_0,MSUALG_1,MSUALG_2,PRELAMB,MSUALG_3,FINSEQ_1,MARGREL1,LANG1,TDGROUP,DTCONSTR,TREES_3,TREES_4,NAT_1,TREES_2,MCART_1,UNIALG_2,QC_LANG1,GROUP_6,MSAFREE;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NAT_1,RELAT_1,RELSET_1,STRUCT_0,FUNCT_1,PARTFUN1,MCART_1,FUNCT_2,FINSEQ_1,PBOOLE,TREES_2,FINSEQ_2,CARD_3,LANG1,TREES_4,DTCONSTR,MSUALG_1,MSUALG_2,MSUALG_3,CKB2,CKB3,CKB4;
definitions TARSKI,XBOOLE_0,PBOOLE,MSUALG_3,CKB2,CKB3;
theorems TARSKI,FUNCT_1,FUNCT_2,MCART_1,ZFMISC_1,PBOOLE,CARD_3,MSUALG_1,MSUALG_2,MSUALG_3,RELAT_1,LANG1,DTCONSTR,FINSEQ_1,TREES_4,TREES_1,DOMAIN_1,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,TREES_3,PARTFUN1,FINSEQ_3,FINSEQ_2,CKB1,CKB2,CKB3;
schemes CLASSES1,FUNCT_1,RELSET_1,DTCONSTR,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSEQ_1,PBOOLE,TREES_2,TREES_3,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_3,FUNCT_2,PARTFUN1,RELSET_1,PRE_POLY,CKB5,CKB6;
constructors XXREAL_0,NAT_1,NAT_D,CARD_3,FINSEQOP,DTCONSTR,MSUALG_3,RELSET_1,PBOOLE,CKB2,CKB3;
requirements NUMERALS,BOOLE,SUBSET;
begin
definition
let I being set;
let X being (ManySortedSet of I);
redefine func coprod X
means
:Def3: (( dom it ) = I & (for i being set holds (i in I implies ( it . i ) = ( coprod (i,X) ))));
compatibility
proof
let IT being Function;
hereby
assume A1: IT = ( disjoin X );
hence ( dom IT ) = I by PARTFUN1:def 2;
let i being set;
assume A2: i in I;
then i in ( dom X ) by PARTFUN1:def 2;
then A3: ( IT . i ) = [: ( X . i ),{ i } :] by A1,CARD_3:def 3;
now
let x being set;
hereby
assume x in ( IT . i );
then consider a being set,b being set such that A4: a in ( X . i ) and A5: (b in { i } & x = [ a,b ]) by A3,ZFMISC_1:def 2;
take a;
thus a in ( X . i ) by A4;
thus x = [ a,i ] by A5,TARSKI:def 1;
end;
given a being set such that
A6: (a in ( X . i ) & x = [ a,i ]);

i in { i } by TARSKI:def 1;
hence x in ( IT . i ) by A3,A6,ZFMISC_1:def 2;
end;
hence ( IT . i ) = ( coprod (i,X) ) by A2,CKB3:def 1;
end;
assume that
A7: ( dom IT ) = I
and
A8: (for i being set holds (i in I implies ( IT . i ) = ( coprod (i,X) )));
A9: ( dom IT ) = ( dom X ) by A7,PARTFUN1:def 2;
now
let x being set;
assume A10: x in ( dom X );
then A11: x in I by PARTFUN1:def 2;
A12:now
let a being set;
hereby
assume a in ( coprod (x,X) );
then A13: (ex b being set st (b in ( X . x ) & a = [ b,x ])) by A11,CKB3:def 1;
x in { x } by TARSKI:def 1;
hence a in [: ( X . x ),{ x } :] by A13,ZFMISC_1:def 2;
end;
assume a in [: ( X . x ),{ x } :];
then consider a1 being set,a2 being set such that A14: a1 in ( X . x ) and A15: a2 in { x } and A16: a = [ a1,a2 ] by ZFMISC_1:def 2;
a2 = x by A15,TARSKI:def 1;
hence a in ( coprod (x,X) ) by A11,A14,A16,CKB3:def 1;
end;
thus ( IT . x ) = ( coprod (x,X) ) by A7,A8,A9,A10
.= [: ( X . x ),{ x } :] by A12,TARSKI:1;
end;
hence thesis by A9,CARD_3:def 3;
end;
end;
