environ
vocabularies XBOOLE_0,FUNCT_1,RELAT_1,PBOOLE,SUBSET_1,CARD_3,REALSET1,TARSKI,ZFMISC_1,PARTFUN1,STRUCT_0,MSUALG_1,MSUALG_2,PRELAMB,MSUALG_3,FINSEQ_1,MARGREL1,LANG1,TDGROUP,DTCONSTR,TREES_3,TREES_4,NAT_1,TREES_2,MCART_1,UNIALG_2,QC_LANG1,GROUP_6,MSAFREE;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NAT_1,RELAT_1,RELSET_1,STRUCT_0,FUNCT_1,PARTFUN1,MCART_1,FUNCT_2,FINSEQ_1,PBOOLE,TREES_2,FINSEQ_2,CARD_3,LANG1,TREES_4,DTCONSTR,MSUALG_1,MSUALG_2,MSUALG_3,CKB2,CKB3,CKB4,CKB7,CKB11,CKB13,CKB14,CKB16,CKB18,CKB23,CKB24,CKB26;
definitions TARSKI,XBOOLE_0,PBOOLE,MSUALG_3,CKB2,CKB3,CKB7,CKB11,CKB13,CKB14,CKB16,CKB18,CKB23,CKB24,CKB26;
theorems TARSKI,FUNCT_1,FUNCT_2,MCART_1,ZFMISC_1,PBOOLE,CARD_3,MSUALG_1,MSUALG_2,MSUALG_3,RELAT_1,LANG1,DTCONSTR,FINSEQ_1,TREES_4,TREES_1,DOMAIN_1,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,TREES_3,PARTFUN1,FINSEQ_3,FINSEQ_2,CKB1,CKB2,CKB3,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB22,CKB23,CKB24,CKB26,CKB28,CKB29,CKB30,CKB31,CKB32;
schemes CLASSES1,FUNCT_1,RELSET_1,DTCONSTR,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSEQ_1,PBOOLE,TREES_2,TREES_3,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_3,FUNCT_2,PARTFUN1,RELSET_1,PRE_POLY,CKB5,CKB6,CKB8,CKB9,CKB19,CKB21,CKB25,CKB27;
constructors XXREAL_0,NAT_1,NAT_D,CARD_3,FINSEQOP,DTCONSTR,MSUALG_3,RELSET_1,PBOOLE,CKB2,CKB3,CKB7,CKB11,CKB13,CKB14,CKB16,CKB18,CKB23,CKB24,CKB26;
requirements NUMERALS,BOOLE,SUBSET;
begin
definition
let S being non void non empty ManySortedSign;
let X being  non-empty (ManySortedSet of (the carrier of S));
let o being (OperSymbol of S);
func DenOp (o,X) -> (Function of ( ( ( ( FreeSort X ) # ) * (the Arity of S) ) . o ),( ( ( FreeSort X ) * (the ResultSort of S) ) . o ))
means
:Def14: (for p being (FinSequence of ( TS ( DTConMSA X ) )) holds (( Sym (o,X) ) ==> ( roots p ) implies ( it . p ) = ( ( Sym (o,X) ) -tree p )));
existence
proof
set AL = ( ( ( ( FreeSort X ) # ) * (the Arity of S) ) . o );
set AX = ( ( ( FreeSort X ) * (the ResultSort of S) ) . o );
set D = ( DTConMSA X );
set O = (the carrier' of S);
set rs = ( the_result_sort_of o );
set RS = (the ResultSort of S);
defpred P[ set,set ]
 means
(for p being (FinSequence of ( TS D )) holds (p = $1 implies $2 = ( ( Sym (o,X) ) -tree p )));
A1: (for x being set holds (x in AL implies (ex y being set st (y in AX & P[ x,y ]))))
proof
let x being set;
assume A2: x in AL;
then reconsider p = x as (FinSequence of ( TS D )) by CKB28:1;
( Sym (o,X) ) ==> ( roots p ) by A2,CKB30:1;
then reconsider a = ( ( Sym (o,X) ) -tree p ) as (Element of ( TS D )) by DTCONSTR:def 1;
take y = ( ( Sym (o,X) ) -tree p );
o in O;
then o in ( dom ( ( FreeSort X ) * RS ) ) by PARTFUN1:def 2;
then A3: AX = ( ( FreeSort X ) . ( RS . o ) ) by FUNCT_1:12
.= ( ( FreeSort X ) . rs ) by MSUALG_1:def 2
.= ( FreeSort (X,rs) ) by CKB26:def 1;
( a . ( {} ) ) = ( Sym (o,X) ) by TREES_4:def 4;
hence y in AX by A3;
thus thesis;
end;
consider f being Function such that A4: ((( dom f ) = AL & ( rng f ) c= AX) & (for x being set holds (x in AL implies P[ x,( f . x ) ]))) from FUNCT_1:sch 5(A1);
reconsider g = f as (Function of AL,( rng f )) by A4,FUNCT_2:1;
reconsider g as (Function of AL,AX) by A4,FUNCT_2:2;
take g;
let p being (FinSequence of ( TS D ));
assume ( Sym (o,X) ) ==> ( roots p );
then p in AL by CKB30:1;
hence thesis by A4;
end;
uniqueness
proof
set AL = ( ( ( ( FreeSort X ) # ) * (the Arity of S) ) . o );
set AX = ( ( ( FreeSort X ) * (the ResultSort of S) ) . o );
set D = ( DTConMSA X );
let f being (Function of AL,AX),g being (Function of AL,AX);
assume that
A5: (for p being (FinSequence of ( TS D )) holds (( Sym (o,X) ) ==> ( roots p ) implies ( f . p ) = ( ( Sym (o,X) ) -tree p )))
and
A6: (for p being (FinSequence of ( TS D )) holds (( Sym (o,X) ) ==> ( roots p ) implies ( g . p ) = ( ( Sym (o,X) ) -tree p )));
A7: (for x being set holds (x in AL implies ( f . x ) = ( g . x )))
proof
let x being set;
assume A8: x in AL;
then reconsider p = x as (FinSequence of ( TS D )) by CKB28:1;
A9: ( Sym (o,X) ) ==> ( roots p ) by A8,CKB30:1;
then ( f . p ) = ( ( Sym (o,X) ) -tree p ) by A5;
hence thesis by A6,A9;
end;
(( dom f ) = AL & ( dom g ) = AL) by FUNCT_2:def 1;
hence thesis by A7,FUNCT_1:2;
end;
end;
