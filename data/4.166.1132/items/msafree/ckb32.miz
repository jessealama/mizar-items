environ
vocabularies XBOOLE_0,FUNCT_1,RELAT_1,PBOOLE,SUBSET_1,CARD_3,REALSET1,TARSKI,ZFMISC_1,PARTFUN1,STRUCT_0,MSUALG_1,MSUALG_2,PRELAMB,MSUALG_3,FINSEQ_1,MARGREL1,LANG1,TDGROUP,DTCONSTR,TREES_3,TREES_4,NAT_1,TREES_2,MCART_1,UNIALG_2,QC_LANG1,GROUP_6,MSAFREE;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NAT_1,RELAT_1,RELSET_1,STRUCT_0,FUNCT_1,PARTFUN1,MCART_1,FUNCT_2,FINSEQ_1,PBOOLE,TREES_2,FINSEQ_2,CARD_3,LANG1,TREES_4,DTCONSTR,MSUALG_1,MSUALG_2,MSUALG_3,CKB2,CKB3,CKB4,CKB7,CKB11,CKB13,CKB14,CKB16,CKB18,CKB23,CKB24,CKB26;
definitions TARSKI,XBOOLE_0,PBOOLE,MSUALG_3,CKB2,CKB3,CKB7,CKB11,CKB13,CKB14,CKB16,CKB18,CKB23,CKB24,CKB26;
theorems TARSKI,FUNCT_1,FUNCT_2,MCART_1,ZFMISC_1,PBOOLE,CARD_3,MSUALG_1,MSUALG_2,MSUALG_3,RELAT_1,LANG1,DTCONSTR,FINSEQ_1,TREES_4,TREES_1,DOMAIN_1,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,TREES_3,PARTFUN1,FINSEQ_3,FINSEQ_2,CKB1,CKB2,CKB3,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB22,CKB23,CKB24,CKB26,CKB28,CKB29,CKB30,CKB31;
schemes CLASSES1,FUNCT_1,RELSET_1,DTCONSTR,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSEQ_1,PBOOLE,TREES_2,TREES_3,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_3,FUNCT_2,PARTFUN1,RELSET_1,PRE_POLY,CKB5,CKB6,CKB8,CKB9,CKB19,CKB21,CKB25,CKB27;
constructors XXREAL_0,NAT_1,NAT_D,CARD_3,FINSEQOP,DTCONSTR,MSUALG_3,RELSET_1,PBOOLE,CKB2,CKB3,CKB7,CKB11,CKB13,CKB14,CKB16,CKB18,CKB23,CKB24,CKB26;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve x for set;
theorem
Th13: (for S being non void non empty ManySortedSign holds (for X being  non-empty (ManySortedSet of (the carrier of S)) holds (for s1,s2 being (SortSymbol of S) holds (s1 <> s2 implies ( ( FreeSort X ) . s1 ) misses ( ( FreeSort X ) . s2 )))))
proof
let S being non void non empty ManySortedSign;
let X being  non-empty (ManySortedSet of (the carrier of S));
let s1 being (SortSymbol of S),s2 being (SortSymbol of S);
assume that
A1: s1 <> s2
and
A2: ( ( ( FreeSort X ) . s1 ) /\ ( ( FreeSort X ) . s2 ) ) <> ( {} );
consider x such that A3: x in ( ( ( FreeSort X ) . s1 ) /\ ( ( FreeSort X ) . s2 ) ) by A2,XBOOLE_0:def 1;
set D = ( DTConMSA X );
A4: ( ( FreeSort X ) . s1 ) = ( FreeSort (X,s1) ) by CKB26:def 1;
A5: ( ( FreeSort X ) . s2 ) = ( FreeSort (X,s2) ) by CKB26:def 1;
x in ( ( FreeSort X ) . s2 ) by A3,XBOOLE_0:def 4;
then consider b being (Element of ( TS D )) such that A6: b = x and A7: ((ex x2 being set st (x2 in ( X . s2 ) & b = ( root-tree [ x2,s2 ] ))) or (ex o2 being (OperSymbol of S) st ([ o2,(the carrier of S) ] = ( b . ( {} ) ) & ( the_result_sort_of o2 ) = s2))) by A5;
x in ( ( FreeSort X ) . s1 ) by A3,XBOOLE_0:def 4;
then consider a being (Element of ( TS D )) such that A8: a = x and A9: ((ex x1 being set st (x1 in ( X . s1 ) & a = ( root-tree [ x1,s1 ] ))) or (ex o1 being (OperSymbol of S) st ([ o1,(the carrier of S) ] = ( a . ( {} ) ) & ( the_result_sort_of o1 ) = s1))) by A4;
per cases  by A9;
suppose (ex x1 being set st (x1 in ( X . s1 ) & a = ( root-tree [ x1,s1 ] )));

then consider x1 being set such that x1 in ( X . s1 ) and A10: a = ( root-tree [ x1,s1 ] );
now
per cases  by A7;
case (ex x2 being set st (x2 in ( X . s2 ) & b = ( root-tree [ x2,s2 ] )));
then consider x2 being set such that x2 in ( X . s2 ) and A11: b = ( root-tree [ x2,s2 ] );
[ x1,s1 ] = [ x2,s2 ] by A8,A6,A10,A11,TREES_4:4;
hence contradiction by A1,ZFMISC_1:27;
end;
case (ex o2 being (OperSymbol of S) st ([ o2,(the carrier of S) ] = ( b . ( {} ) ) & ( the_result_sort_of o2 ) = s2));
then consider o2 being (OperSymbol of S) such that A12: [ o2,(the carrier of S) ] = ( b . ( {} ) ) and ( the_result_sort_of o2 ) = s2;
[ o2,(the carrier of S) ] = [ x1,s1 ] by A8,A6,A10,A12,TREES_4:3;
then A13: (the carrier of S) = s1 by ZFMISC_1:27;
(for X being set holds (not X in X));
hence contradiction by A13;
end;
end;
hence contradiction;
end;
suppose (ex o1 being (OperSymbol of S) st ([ o1,(the carrier of S) ] = ( a . ( {} ) ) & ( the_result_sort_of o1 ) = s1));

then consider o1 being (OperSymbol of S) such that A14: [ o1,(the carrier of S) ] = ( a . ( {} ) ) and A15: ( the_result_sort_of o1 ) = s1;
now
per cases  by A7;
case (ex x2 being set st (x2 in ( X . s2 ) & b = ( root-tree [ x2,s2 ] )));
then consider x2 being set such that x2 in ( X . s2 ) and A16: b = ( root-tree [ x2,s2 ] );
[ o1,(the carrier of S) ] = [ x2,s2 ] by A8,A6,A14,A16,TREES_4:3;
then A17: (the carrier of S) = s2 by ZFMISC_1:27;
(for X being set holds (not X in X));
hence contradiction by A17;
end;
case (ex o2 being (OperSymbol of S) st ([ o2,(the carrier of S) ] = ( b . ( {} ) ) & ( the_result_sort_of o2 ) = s2));
hence contradiction by A1,A8,A6,A14,A15,ZFMISC_1:27;
end;
end;
hence contradiction;
end;
end;
