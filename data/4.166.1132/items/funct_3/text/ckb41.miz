environ
vocabularies XBOOLE_0,TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,SUBSET_1,MCART_1,PARTFUN1,FUNCT_2,FUNCT_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,FUNCT_1,FUNCT_2,BINOP_1,CKB9,CKB24,CKB25;
definitions TARSKI,BINOP_1,CKB9,CKB25;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40;
schemes FUNCT_1,CKB6,CKB7;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1;
constructors BINOP_1,RELSET_1,CKB9,CKB24,CKB25;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve y1 for set;
reserve y2 for set;
reserve A for set;
reserve X for set;
definition
let A;
let X;
func chi (A,X) -> Function means 
:Def3: (( dom it ) = X & (for x holds (x in X implies ((x in A implies ( it . x ) = 1) & ((not x in A) implies ( it . x ) = ( {} ))))));
existence
proof
defpred P[ set,set ]
 means
(($1 in A implies $2 = 1) & ((not $1 in A) implies $2 = ( {} )));
A1: (for x holds (x in X implies (ex y st P[ x,y ])))
proof
let x;
assume x in X;
((not x in A) implies (ex y st ((y = ( {} ) & (x in A implies y = 1)) & ((not x in A) implies y = ( {} )))));
hence thesis;
end;
A2: (for x holds (for y1 holds (for y2 holds (((x in X & P[ x,y1 ]) & P[ x,y2 ]) implies y1 = y2))));
(ex f being Function st (( dom f ) = X & (for x holds (x in X implies P[ x,( f . x ) ])))) from FUNCT_1:sch 2(A2,A1);
hence thesis;
end;
uniqueness
proof
let f1 being Function;
let f2 being Function;
assume that
A3: ( dom f1 ) = X
and
A4: (for x holds (x in X implies ((x in A implies ( f1 . x ) = 1) & ((not x in A) implies ( f1 . x ) = ( {} )))))
and
A5: ( dom f2 ) = X
and
A6: (for x holds (x in X implies ((x in A implies ( f2 . x ) = 1) & ((not x in A) implies ( f2 . x ) = ( {} )))));
(for x holds (x in X implies ( f1 . x ) = ( f2 . x )))
proof
let x;
assume A7: x in X;
then A8: ((not x in A) implies (( f1 . x ) = ( {} ) & ( f2 . x ) = ( {} ))) by A4,A6;
(x in A implies (( f1 . x ) = 1 & ( f2 . x ) = 1)) by A4,A6,A7;
hence thesis by A8;
end;
hence thesis by A3,A5,FUNCT_1:2;
end;
end;
