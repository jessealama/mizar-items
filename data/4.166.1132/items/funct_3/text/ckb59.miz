environ
vocabularies XBOOLE_0,TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,SUBSET_1,MCART_1,PARTFUN1,FUNCT_2,FUNCT_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,FUNCT_1,FUNCT_2,BINOP_1,CKB9,CKB24,CKB25,CKB41,CKB47,CKB48,CKB49,CKB52,CKB53,CKB58;
definitions TARSKI,BINOP_1,CKB9,CKB25,CKB41,CKB52,CKB53;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57;
schemes FUNCT_1,CKB6,CKB7;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1;
constructors BINOP_1,RELSET_1,CKB9,CKB24,CKB25,CKB41,CKB47,CKB49,CKB52,CKB53,CKB58;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
definition
let X;
let Y;
redefine func pr2 (X,Y) -> (Function of [: X,Y :],Y);

coherence
proof
per cases ;
suppose A2: (Y = ( {} ) implies [: X,Y :] = ( {} ));

(( dom ( pr2 (X,Y) ) ) = [: X,Y :] & ( rng ( pr2 (X,Y) ) ) c= Y) by CKB53:def 1,CKB56:1;
hence thesis by A2,FUNCT_2:def 1,RELSET_1:4;
end;
suppose (Y = ( {} ) & [: X,Y :] <> ( {} ));

hence thesis by ZFMISC_1:90;
end;
end;
end;
