environ
vocabularies XBOOLE_0,TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,SUBSET_1,MCART_1,PARTFUN1,FUNCT_2,FUNCT_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,FUNCT_1,FUNCT_2,BINOP_1,CKB9,CKB24,CKB25;
definitions TARSKI,BINOP_1,CKB9,CKB25;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34;
schemes FUNCT_1,CKB6,CKB7;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1;
constructors BINOP_1,RELSET_1,CKB9,CKB24,CKB25;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve B for set;
theorem
(for f being Function holds (f is  one-to-one implies ( ( " f ) .: B ) = ( ( .: f ) " B )))
proof
let f being Function;
assume that
A1: f is  one-to-one;
A2: ( ( .: f ) " B ) c= ( ( " f ) .: B )
proof
let x;
A3: ( f .: x ) c= ( rng f ) by RELAT_1:111;
then ( f .: x ) in ( bool ( rng f ) );
then A4: ( f .: x ) in ( dom ( " f ) ) by CKB25:def 1;
assume A5: x in ( ( .: f ) " B );
then A6: x in ( dom ( .: f ) ) by FUNCT_1:def 7;
then x in ( bool ( dom f ) ) by CKB9:def 1;
then A7: x c= ( f " ( f .: x ) ) by FUNCT_1:76;
( f " ( f .: x ) ) c= x by A1,FUNCT_1:82;
then x = ( f " ( f .: x ) ) by A7,XBOOLE_0:def 10;
then A8: x = ( ( " f ) . ( f .: x ) ) by A3,CKB25:def 1;
( ( .: f ) . x ) in B by A5,FUNCT_1:def 7;
then ( f .: x ) in B by A6,CKB10:1;
hence thesis by A8,A4,FUNCT_1:def 6;
end;
( ( " f ) .: B ) c= ( ( .: f ) " B ) by CKB34:1;
hence thesis by A2,XBOOLE_0:def 10;
end;
