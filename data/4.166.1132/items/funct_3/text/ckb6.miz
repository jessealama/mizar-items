environ
vocabularies XBOOLE_0,TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,SUBSET_1,MCART_1,PARTFUN1,FUNCT_2,FUNCT_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,FUNCT_1,FUNCT_2,BINOP_1;
definitions TARSKI,BINOP_1;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5;
schemes FUNCT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1;
constructors BINOP_1,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve p for set;
reserve x for set;
reserve x1 for set;
reserve x2 for set;
reserve y for set;
reserve y1 for set;
reserve y2 for set;
reserve z for set;
reserve z1 for set;
reserve z2 for set;
reserve A for set;
reserve B for set;
scheme FuncEx3 { A() -> set,B() -> set,P[set,set,set] } : (ex f being Function st (( dom f ) = [: A(),B() :] & (for x holds (for y holds ((x in A() & y in B()) implies P[ x,y,( f . (x,y) ) ])))))
provided
A1: (for x holds (for y holds (for z1 holds (for z2 holds ((((x in A() & y in B()) & P[ x,y,z1 ]) & P[ x,y,z2 ]) implies z1 = z2)))))
and
A2: (for x holds (for y holds ((x in A() & y in B()) implies (ex z st P[ x,y,z ]))))
proof
defpred R[ set,set ]
 means
(for x holds (for y holds ($1 = [ x,y ] implies P[ x,y,$2 ])));
set D = [: A(),B() :];
A3: (for p holds (p in D implies (ex z st R[ p,z ])))
proof
let p;
assume p in D;
then consider x1,y1 such that A4: (x1 in A() & y1 in B()) and A5: p = [ x1,y1 ] by ZFMISC_1:def 2;
consider z such that A6: P[ x1,y1,z ] by A2,A4;
take z;
let x;
let y;
assume A7: p = [ x,y ];
then x = x1 by A5,ZFMISC_1:27;
hence thesis by A5,A6,A7,ZFMISC_1:27;
end;
A8: (for p holds (for y1 holds (for y2 holds (((p in D & R[ p,y1 ]) & R[ p,y2 ]) implies y1 = y2))))
proof
let p;
let y1;
let y2;
assume p in D;
then consider x1,x2 such that A9: (x1 in A() & x2 in B()) and A10: p = [ x1,x2 ] by ZFMISC_1:def 2;
assume ((for x holds (for y holds (p = [ x,y ] implies P[ x,y,y1 ]))) & (for x holds (for y holds (p = [ x,y ] implies P[ x,y,y2 ]))));
then (P[ x1,x2,y1 ] & P[ x1,x2,y2 ]) by A10;
hence thesis by A1,A9;
end;
consider f being Function such that A11: ( dom f ) = D and A12: (for p holds (p in D implies R[ p,( f . p ) ])) from FUNCT_1:sch 2(A8,A3);
take f;
thus ( dom f ) = [: A(),B() :] by A11;
let x;
let y;
assume (x in A() & y in B());
then [ x,y ] in [: A(),B() :] by ZFMISC_1:def 2;
hence thesis by A12;
end;
