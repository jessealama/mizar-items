environ
vocabularies XBOOLE_0,TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,SUBSET_1,MCART_1,PARTFUN1,FUNCT_2,FUNCT_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,FUNCT_1,FUNCT_2,BINOP_1;
definitions TARSKI,BINOP_1;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB8;
schemes FUNCT_1,CKB6,CKB7;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1;
constructors BINOP_1,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve y1 for set;
reserve y2 for set;
reserve X for set;
definition
let f being Function;
func .: f -> Function
means
:Def1: (( dom it ) = ( bool ( dom f ) ) & (for X holds (X c= ( dom f ) implies ( it . X ) = ( f .: X ))));
existence
proof
defpred P[ set,set ]
 means
(for X holds ($1 = X implies $2 = ( f .: X )));
A1: (for x holds (x in ( bool ( dom f ) ) implies (ex y st P[ x,y ])))
proof
let x;
assume that
x in ( bool ( dom f ) );
take ( f .: x );
thus thesis;
end;
A2: (for x holds (for y1 holds (for y2 holds (((x in ( bool ( dom f ) ) & P[ x,y1 ]) & P[ x,y2 ]) implies y1 = y2))))
proof
let x;
let y1;
let y2;
assume that
x in ( bool ( dom f ) )
and
A3: (for X holds (x = X implies y1 = ( f .: X )))
and
A4: (for X holds (x = X implies y2 = ( f .: X )));
thus y1 = ( f .: x ) by A3
.= y2 by A4;
end;
consider g being Function such that A5: (( dom g ) = ( bool ( dom f ) ) & (for x holds (x in ( bool ( dom f ) ) implies P[ x,( g . x ) ]))) from FUNCT_1:sch 2(A2,A1);
take g;
thus thesis by A5;
end;
uniqueness
proof
let f1 being Function,f2 being Function;
assume that
A6: ( dom f1 ) = ( bool ( dom f ) )
and
A7: (for X holds (X c= ( dom f ) implies ( f1 . X ) = ( f .: X )))
and
A8: ( dom f2 ) = ( bool ( dom f ) )
and
A9: (for X holds (X c= ( dom f ) implies ( f2 . X ) = ( f .: X )));
(for x holds (x in ( bool ( dom f ) ) implies ( f1 . x ) = ( f2 . x )))
proof
let x;
assume A10: x in ( bool ( dom f ) );
then ( f1 . x ) = ( f .: x ) by A7;
hence thesis by A9,A10;
end;
hence thesis by A6,A8,FUNCT_1:2;
end;
end;
