environ
vocabularies XBOOLE_0,TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,SUBSET_1,MCART_1,PARTFUN1,FUNCT_2,FUNCT_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,FUNCT_1,FUNCT_2,BINOP_1,CKB9,CKB24,CKB25;
definitions TARSKI,BINOP_1,CKB9,CKB25;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36;
schemes FUNCT_1,CKB6,CKB7;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1;
constructors BINOP_1,RELSET_1,CKB9,CKB24,CKB25;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
theorem
Th36: (for f being Function holds (for A being set holds (f is  one-to-one implies ( ( .: f ) .: A ) c= ( ( " f ) " A ))))
proof
let f being Function;
let A being set;
assume that
A1: f is  one-to-one;
let y;
assume y in ( ( .: f ) .: A );
then consider x such that A2: x in ( dom ( .: f ) ) and A3: x in A and A4: y = ( ( .: f ) . x ) by FUNCT_1:def 6;
A5: x in ( bool ( dom f ) ) by A2,CKB9:def 1;
then A6: y = ( f .: x ) by A4,CKB9:def 1;
then A7: x c= ( f " y ) by A5,FUNCT_1:76;
A8: y c= ( rng f ) by A6,RELAT_1:111;
then y in ( bool ( rng f ) );
then A9: y in ( dom ( " f ) ) by CKB25:def 1;
( f " y ) c= x by A1,A6,FUNCT_1:82;
then ( f " y ) in A by A3,A7,XBOOLE_0:def 10;
then ( ( " f ) . y ) in A by A8,CKB25:def 1;
hence thesis by A9,FUNCT_1:def 7;
end;
