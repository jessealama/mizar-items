environ
vocabularies XBOOLE_0,TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,SUBSET_1,MCART_1,PARTFUN1,FUNCT_2,FUNCT_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,FUNCT_1,FUNCT_2,BINOP_1,CKB9,CKB24,CKB25,CKB41,CKB47,CKB48,CKB49,CKB52,CKB53,CKB58,CKB59,CKB60,CKB62,CKB63,CKB77;
definitions TARSKI,BINOP_1,CKB9,CKB25,CKB41,CKB52,CKB53,CKB60,CKB63;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB60,CKB61,CKB63,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83;
schemes FUNCT_1,CKB6,CKB7;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,CKB64,CKB65;
constructors BINOP_1,RELSET_1,CKB9,CKB24,CKB25,CKB41,CKB47,CKB49,CKB52,CKB53,CKB58,CKB59,CKB60,CKB62,CKB63,CKB77;
requirements SUBSET,BOOLE;
begin
reserve p for set;
reserve x for set;
reserve y for set;
definition
let f being Function;
let g being Function;
func [:f,g :] -> Function means 
:Def9: (( dom it ) = [: ( dom f ),( dom g ) :] & (for x holds (for y holds ((x in ( dom f ) & y in ( dom g )) implies ( it . (x,y) ) = [ ( f . x ),( g . y ) ]))));
existence
proof
deffunc F(set,set) = [ ( f . $1 ),( g . $2 ) ];
(ex F being Function st (( dom F ) = [: ( dom f ),( dom g ) :] & (for x holds (for y holds ((x in ( dom f ) & y in ( dom g )) implies ( F . (x,y) ) = F(x,y)))))) from CKB7:sch 1;
hence thesis;
end;
uniqueness
proof
let fg1 being Function;
let fg2 being Function;
assume that
A1: ( dom fg1 ) = [: ( dom f ),( dom g ) :]
and
A2: (for x holds (for y holds ((x in ( dom f ) & y in ( dom g )) implies ( fg1 . (x,y) ) = [ ( f . x ),( g . y ) ])))
and
A3: ( dom fg2 ) = [: ( dom f ),( dom g ) :]
and
A4: (for x holds (for y holds ((x in ( dom f ) & y in ( dom g )) implies ( fg2 . (x,y) ) = [ ( f . x ),( g . y ) ])));
(for p holds (p in [: ( dom f ),( dom g ) :] implies ( fg1 . p ) = ( fg2 . p )))
proof
let p;
assume p in [: ( dom f ),( dom g ) :];
then consider x,y such that A5: (x in ( dom f ) & y in ( dom g )) and A6: p = [ x,y ] by ZFMISC_1:def 2;
(( fg1 . (x,y) ) = [ ( f . x ),( g . y ) ] & ( fg2 . (x,y) ) = [ ( f . x ),( g . y ) ]) by A2,A4,A5;
hence thesis by A6;
end;
hence thesis by A1,A3,FUNCT_1:2;
end;
end;
