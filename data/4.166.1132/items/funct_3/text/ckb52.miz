environ
vocabularies XBOOLE_0,TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,SUBSET_1,MCART_1,PARTFUN1,FUNCT_2,FUNCT_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,FUNCT_1,FUNCT_2,BINOP_1,CKB9,CKB24,CKB25,CKB41,CKB47,CKB48,CKB49;
definitions TARSKI,BINOP_1,CKB9,CKB25,CKB41;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB50,CKB51;
schemes FUNCT_1,CKB6,CKB7;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1;
constructors BINOP_1,RELSET_1,CKB9,CKB24,CKB25,CKB41,CKB47,CKB49;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve X for set;
reserve Y for set;
definition
let X;
let Y;
func pr1 (X,Y) -> Function means 
:Def5: (( dom it ) = [: X,Y :] & (for x holds (for y holds ((x in X & y in Y) implies ( it . (x,y) ) = x))));
existence
proof
deffunc F(set,set) = $1;
(ex f being Function st (( dom f ) = [: X,Y :] & (for x holds (for y holds ((x in X & y in Y) implies ( f . (x,y) ) = F(x,y)))))) from CKB7:sch 1;
hence thesis;
end;
uniqueness
proof
let f1 being Function;
let f2 being Function;
assume that
A1: ( dom f1 ) = [: X,Y :]
and
A2: (for x holds (for y holds ((x in X & y in Y) implies ( f1 . (x,y) ) = x)))
and
A3: ( dom f2 ) = [: X,Y :]
and
A4: (for x holds (for y holds ((x in X & y in Y) implies ( f2 . (x,y) ) = x)));
(for x holds (for y holds ((x in X & y in Y) implies ( f1 . (x,y) ) = ( f2 . (x,y) ))))
proof
let x;
let y;
assume A5: (x in X & y in Y);
then ( f1 . (x,y) ) = x by A2;
hence thesis by A4,A5;
end;
hence thesis by A1,A3,CKB8:1;
end;
end;
