environ
vocabularies NUMBERS,SUBSET_1,XREAL_0,ORDINAL1,SEQ_1,ORDINAL2,NAT_1,XXREAL_1,REAL_1,XXREAL_0,TARSKI,ARYTM_3,ARYTM_1,COMPLEX1,RELAT_1,VALUED_0,SEQ_2,XXREAL_2,FUNCT_1,FUNCOP_1,CARD_1,XBOOLE_0,SEQ_4,RCOMP_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,RELAT_1,FUNCT_2,FUNCOP_1,SEQ_1,SEQ_2,VALUED_0,SEQ_4,XXREAL_0,XXREAL_1,XXREAL_2,RECDEF_1,CKB1,CKB2,CKB6,CKB7,CKB8,CKB25;
definitions TARSKI,SEQ_2,XBOOLE_0,SUBSET_1,XXREAL_1,CKB1,CKB2,CKB6,CKB7,CKB8,CKB25;
theorems TARSKI,SUBSET_1,NAT_1,FUNCT_1,FUNCT_2,SEQ_2,SEQM_3,SEQ_4,ABSVALUE,RELAT_1,XREAL_0,XBOOLE_0,XBOOLE_1,XCMPLX_0,XCMPLX_1,FUNCOP_1,XREAL_1,COMPLEX1,XXREAL_0,NUMBERS,XXREAL_1,MEMBERED,VALUED_0,XXREAL_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB25,CKB27,CKB28,CKB29,CKB30;
schemes SUBSET_1,FUNCT_2,SEQ_1;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,VALUED_0,XXREAL_2,FUNCOP_1,SEQ_4,FUNCT_2,CKB13,CKB14,CKB16,CKB24,CKB26;
constructors FUNCOP_1,REAL_1,NAT_1,XXREAL_1,COMPLEX1,PARTFUN1,SEQ_1,SEQ_2,SEQM_3,SEQ_4,RECDEF_1,XXREAL_2,MEMBERED,RELSET_1,RVSUM_1,BINOP_2,CKB1,CKB2,CKB6,CKB7,CKB8,CKB25;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve g for  real number;
reserve r for  real number;
reserve s1 for Real_Sequence;
reserve X for (Subset of ( REAL ));
theorem
((for r holds (r in X implies (ex N being (Neighbourhood of r) st N c= X))) implies X is  open)
proof
assume that
A1: (for r holds (r in X implies (ex N being (Neighbourhood of r) st N c= X)))
and
A2: (not X is  open);
(not ( X ` ) is  closed) by A2,CKB8:def 1;
then consider s1 such that A3: ( rng s1 ) c= ( X ` ) and A4: s1 is  convergent and A5: (not ( lim s1 ) in ( X ` )) by CKB7:def 1;
consider N being (Neighbourhood of ( lim s1 )) such that A6: N c= X by A1,A5,SUBSET_1:29;
consider g such that A7: ( 0 ) < g and A8: ]. ( ( lim s1 ) - g ),( ( lim s1 ) + g ) .[ = N by CKB25:def 1;
consider n such that A9: (for m holds (n <= m implies ( abs ( ( s1 . m ) - ( lim s1 ) ) ) < g)) by A4,A7,SEQ_2:def 7;
n in ( NAT );
then n in ( dom s1 ) by FUNCT_2:def 1;
then A10: ( s1 . n ) in ( rng s1 ) by FUNCT_1:def 3;
A11: ( abs ( ( s1 . n ) - ( lim s1 ) ) ) < g by A9;
then ( ( s1 . n ) - ( lim s1 ) ) < g by SEQ_2:1;
then A12: ( s1 . n ) < ( ( lim s1 ) + g ) by XREAL_1:19;
( - g ) < ( ( s1 . n ) - ( lim s1 ) ) by A11,SEQ_2:1;
then ( ( lim s1 ) + ( - g ) ) < ( ( lim s1 ) + ( ( s1 . n ) - ( lim s1 ) ) ) by XREAL_1:6;
then ( s1 . n ) in { s where s is Real: (( ( lim s1 ) - g ) < s & s < ( ( lim s1 ) + g )) } by A12;
hence contradiction by A3,A6,A8,A10,XBOOLE_0:def 5;
end;
