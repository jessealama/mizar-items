environ
vocabularies NUMBERS,SUBSET_1,XREAL_0,ORDINAL1,SEQ_1,ORDINAL2,NAT_1,XXREAL_1,REAL_1,XXREAL_0,TARSKI,ARYTM_3,ARYTM_1,COMPLEX1,RELAT_1,VALUED_0,SEQ_2,XXREAL_2,FUNCT_1,FUNCOP_1,CARD_1,XBOOLE_0,SEQ_4,RCOMP_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,RELAT_1,FUNCT_2,FUNCOP_1,SEQ_1,SEQ_2,VALUED_0,SEQ_4,XXREAL_0,XXREAL_1,XXREAL_2,RECDEF_1,CKB1,CKB2,CKB6,CKB7,CKB8,CKB25;
definitions TARSKI,SEQ_2,XBOOLE_0,SUBSET_1,XXREAL_1,CKB1,CKB2,CKB6,CKB7,CKB8,CKB25;
theorems TARSKI,SUBSET_1,NAT_1,FUNCT_1,FUNCT_2,SEQ_2,SEQM_3,SEQ_4,ABSVALUE,RELAT_1,XREAL_0,XBOOLE_0,XBOOLE_1,XCMPLX_0,XCMPLX_1,FUNCOP_1,XREAL_1,COMPLEX1,XXREAL_0,NUMBERS,XXREAL_1,MEMBERED,VALUED_0,XXREAL_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB25,CKB27,CKB28;
schemes SUBSET_1,FUNCT_2,SEQ_1;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,VALUED_0,XXREAL_2,FUNCOP_1,SEQ_4,FUNCT_2,CKB13,CKB14,CKB16,CKB24,CKB26;
constructors FUNCOP_1,REAL_1,NAT_1,XXREAL_1,COMPLEX1,PARTFUN1,SEQ_1,SEQ_2,SEQM_3,SEQ_4,RECDEF_1,XXREAL_2,MEMBERED,RELSET_1,RVSUM_1,BINOP_2,CKB1,CKB2,CKB6,CKB7,CKB8,CKB25;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve x for set;
reserve y for set;
reserve s for  real number;
reserve g for  real number;
reserve r for  real number;
reserve s3 for Real_Sequence;
theorem
Th39: (for X being  open (Subset of ( REAL )) holds (for r holds (r in X implies (ex N being (Neighbourhood of r) st N c= X))))
proof
let X being  open (Subset of ( REAL ));
let r;
assume that
A1: r in X
and
A2: (for N being (Neighbourhood of r) holds (not N c= X));
defpred P[ (Element of ( NAT )), real number ]
 means
($2 in ]. ( r - ( 1 / ( $1 + 1 ) ) ),( r + ( 1 / ( $1 + 1 ) ) ) .[ & $2 in ( X ` ));
A3:now
let N being (Neighbourhood of r);
consider g such that ( 0 ) < g and A4: N = ]. ( r - g ),( r + g ) .[ by CKB25:def 1;
(not N c= X) by A2;
then consider x such that A5: x in N and A6: (not x in X) by TARSKI:def 3;
consider s being Real such that A7: x = s and ( r - g ) < s and s < ( r + g ) by A5,A4;
take s;
thus s in N by A5,A7;
thus s in ( X ` ) by A6,A7,XBOOLE_0:def 5;
end;
A8: (for n holds (ex s being Real st P[ n,s ]))
proof
let n;
( 0 ) < ( 1 * ( ( n + 1 ) " ) );
then ( 0 ) < ( 1 / ( n + 1 ) ) by XCMPLX_0:def 9;
then reconsider N = ]. ( r - ( 1 / ( n + 1 ) ) ),( r + ( 1 / ( n + 1 ) ) ) .[ as (Neighbourhood of r) by CKB25:def 1;
(ex s being Real st (s in N & s in ( X ` ))) by A3;
hence thesis;
end;
consider s3 such that A9: (for n holds P[ n,( s3 . n ) ]) from FUNCT_2:sch 3(A8);
deffunc G((Element of ( NAT ))) = ( r + ( 1 / ( $1 + 1 ) ) );
deffunc F((Element of ( NAT ))) = ( r - ( 1 / ( $1 + 1 ) ) );
consider s1 being Real_Sequence such that A10: (for n holds ( s1 . n ) = F(n)) from SEQ_1:sch 1;
consider s2 being Real_Sequence such that A11: (for n holds ( s2 . n ) = G(n)) from SEQ_1:sch 1;
A12: (for n holds (( s1 . n ) <= ( s3 . n ) & ( s3 . n ) <= ( s2 . n )))
proof
let n;
( s3 . n ) in ]. ( r - ( 1 / ( n + 1 ) ) ),( r + ( 1 / ( n + 1 ) ) ) .[ by A9;
then A13: (ex s being Real st ((s = ( s3 . n ) & ( r - ( 1 / ( n + 1 ) ) ) < s) & s < ( r + ( 1 / ( n + 1 ) ) )));
hence ( s1 . n ) <= ( s3 . n ) by A10;
thus thesis by A11,A13;
end;
A14: ( rng s3 ) c= ( X ` )
proof
let x;
assume x in ( rng s3 );
then consider y such that A15: y in ( dom s3 ) and A16: ( s3 . y ) = x by FUNCT_1:def 3;
reconsider y as (Element of ( NAT )) by A15,FUNCT_2:def 1;
( s3 . y ) in ( X ` ) by A9;
hence thesis by A16;
end;
A17: ( X ` ) is  closed by CKB8:def 1;
A18:now
let s;
assume A19: ( 0 ) < s;
consider n such that A20: ( s " ) < n by SEQ_4:3;
take n;
let m;
assume n <= m;
then ( n + 1 ) <= ( m + 1 ) by XREAL_1:6;
then A21: ( 1 / ( m + 1 ) ) <= ( 1 / ( n + 1 ) ) by XREAL_1:118;
( ( s " ) + ( 0 ) ) < ( n + 1 ) by A20,XREAL_1:8;
then ( 1 / ( n + 1 ) ) < ( 1 / ( s " ) ) by A19,XREAL_1:76;
then A22: ( 1 / ( n + 1 ) ) < s by XCMPLX_1:216;
( abs ( ( s2 . m ) - r ) ) = ( abs ( ( r + ( 1 / ( m + 1 ) ) ) - r ) ) by A11
.= ( 1 / ( m + 1 ) ) by ABSVALUE:def 1;
hence ( abs ( ( s2 . m ) - r ) ) < s by A22,A21,XXREAL_0:2;
end;
then A23: s2 is  convergent by SEQ_2:def 6;
then A24: ( lim s2 ) = r by A18,SEQ_2:def 7;
A25:now
let s;
assume A26: ( 0 ) < s;
consider n such that A27: ( s " ) < n by SEQ_4:3;
take n;
let m;
assume n <= m;
then ( n + 1 ) <= ( m + 1 ) by XREAL_1:6;
then A28: ( 1 / ( m + 1 ) ) <= ( 1 / ( n + 1 ) ) by XREAL_1:118;
( ( s " ) + ( 0 ) ) < ( n + 1 ) by A27,XREAL_1:8;
then ( 1 / ( n + 1 ) ) < ( 1 / ( s " ) ) by A26,XREAL_1:76;
then A29: ( 1 / ( n + 1 ) ) < s by XCMPLX_1:216;
( abs ( ( s1 . m ) - r ) ) = ( abs ( ( r - ( 1 / ( m + 1 ) ) ) - r ) ) by A10
.= ( abs ( - ( 1 / ( m + 1 ) ) ) )
.= ( abs ( 1 / ( m + 1 ) ) ) by COMPLEX1:52
.= ( 1 / ( m + 1 ) ) by ABSVALUE:def 1;
hence ( abs ( ( s1 . m ) - r ) ) < s by A29,A28,XXREAL_0:2;
end;
then A30: s1 is  convergent by SEQ_2:def 6;
then ( lim s1 ) = r by A25,SEQ_2:def 7;
then (s3 is  convergent & ( lim s3 ) = r) by A30,A23,A24,A12,SEQ_2:19,SEQ_2:20;
then r in ( X ` ) by A14,A17,CKB7:def 1;
hence contradiction by A1,XBOOLE_0:def 5;
end;
