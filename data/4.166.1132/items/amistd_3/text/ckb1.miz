environ
vocabularies NUMBERS,ORDINAL1,RELAT_1,FUNCOP_1,FINSET_1,FUNCT_1,CARD_1,WELLORD2,XBOOLE_0,TARSKI,SUBSET_1,ZFMISC_1,WELLORD1,ORDINAL2,FINSEQ_2,FINSEQ_1,TREES_1,TREES_2,NAT_1,XXREAL_0,ARYTM_3,ORDINAL4,SETFAM_1,GOBOARD5,AMI_1,AMISTD_1,GLIB_000,AMISTD_2,AMISTD_3,PARTFUN1,CAT_1,AFINSQ_1,SCMNORM;
notations TARSKI,XBOOLE_0,SETFAM_1,ZFMISC_1,SUBSET_1,FINSET_1,CARD_1,NUMBERS,ORDINAL1,ORDINAL2,SEQ_4,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,WELLORD1,WELLORD2,FUNCOP_1,FINSEQ_1,FINSEQ_2,TREES_1,TREES_2,VALUED_1,AFINSQ_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2;
definitions RELAT_1,TARSKI,XBOOLE_0,WELLORD2,FUNCT_1,FINSEQ_2,FUNCOP_1,AFINSQ_1,VALUED_1,MEMSTR_0;
theorems AMISTD_1,GRFUNC_1,NAT_1,ORDINAL1,CARD_1,TREES_2,TREES_1,FINSEQ_1,FUNCT_1,RELAT_1,FINSEQ_3,FINSEQ_5,TARSKI,CARD_5,FINSEQ_2,AMISTD_2,FUNCOP_1,XXREAL_0,XXREAL_2,PARTFUN1,TREES_9,AFINSQ_1,VALUED_1,COMPOS_1,MEMSTR_0;
schemes TREES_2,NAT_1,HILBERT2,ORDINAL2,BINOP_1,FRAENKEL;
registrations XBOOLE_0,RELAT_1,ORDINAL1,FUNCOP_1,FINSET_1,XXREAL_0,NAT_1,CARD_1,MEMBERED,FINSEQ_1,TREES_2,FINSEQ_6,AMISTD_1,SETFAM_1,VALUED_0,XXREAL_2,RELSET_1,FINSEQ_2,SUBSET_1,CARD_5,TREES_1,VALUED_1,AMISTD_2,COMPOS_1,EXTPRO_1,MEMSTR_0;
constructors WELLORD1,WELLORD2,BINOP_1,ORDINAL2,FINSEQ_2,SEQ_4,REALSET1,AMISTD_2,SEQ_2,RELSET_1,TREES_2,VALUED_1,PRE_POLY,AMISTD_1,FUNCOP_1,MEMSTR_0;
requirements BOOLE,SUBSET,NUMERALS,REAL;
begin
definition
let N being  with_non-empty_elements non empty set;
let S being  standard  IC-Ins-separated non empty AMI-Struct over N;
let M being (Subset of ( NAT ));
func LocSeq (M,S) -> (T-Sequence of ( NAT ))
means
:Def3: (( dom it ) = ( card M ) & (for m being set holds (m in ( card M ) implies ( it . m ) = ( ( canonical_isomorphism_of (( RelIncl ( order_type_of ( RelIncl M ) ) ),( RelIncl M )) ) . m ))));
existence
proof
deffunc F(set) = ( ( canonical_isomorphism_of (( RelIncl ( order_type_of ( RelIncl M ) ) ),( RelIncl M )) ) . $1 );
consider f being T-Sequence such that A1: ( dom f ) = ( card M ) and A2: (for A being Ordinal holds (A in ( card M ) implies ( f . A ) = F(A))) from ORDINAL2:sch 2;
f is ( NAT ) -valued
proof
let y being set;
assume y in ( rng f );
then consider x being set such that A3: (x in ( dom f ) & y = ( f . x )) by FUNCT_1:def 3;
F(x) in ( NAT ) by ORDINAL1:def 12;
hence thesis by A1,A2,A3;
end;
then reconsider f as (T-Sequence of ( NAT ));
take f;
thus ( dom f ) = ( card M ) by A1;
let m being set;
assume m in ( card M );
hence thesis by A2;
end;
uniqueness
proof
deffunc F(set) = ( ( canonical_isomorphism_of (( RelIncl ( order_type_of ( RelIncl M ) ) ),( RelIncl M )) ) . $1 );
let f being (T-Sequence of ( NAT )),g being (T-Sequence of ( NAT ));
assume that
A4: ( dom f ) = ( card M )
and
A5: (for m being set holds (m in ( card M ) implies ( f . m ) = F(m)))
and
A6: ( dom g ) = ( card M )
and
A7: (for m being set holds (m in ( card M ) implies ( g . m ) = F(m)));
(for x being set holds (x in ( dom f ) implies ( f . x ) = ( g . x )))
proof
let x being set;
assume that
A8: x in ( dom f );
thus ( f . x ) = F(x) by A4,A5,A8
.= ( g . x ) by A4,A7,A8;
end;
hence thesis by A4,A6,FUNCT_1:2;
end;
end;
