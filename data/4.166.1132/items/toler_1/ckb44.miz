environ
vocabularies XBOOLE_0,RELAT_2,RELAT_1,EQREL_1,WELLORD1,ZFMISC_1,PARTFUN1,SUBSET_1,TARSKI,ORDINAL1,TOLER_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,RELAT_2,PARTFUN1,ORDINAL1,WELLORD1,EQREL_1,CKB2,CKB3,CKB14,CKB16,CKB18,CKB20,CKB36,CKB40,CKB41;
definitions TARSKI,RELAT_1,RELAT_2,WELLORD1,CKB16,CKB18,CKB40,CKB41;
theorems TARSKI,RELAT_1,RELSET_1,RELAT_2,ZFMISC_1,WELLORD1,ENUMSET1,ORDERS_1,EQREL_1,ORDINAL1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB34,CKB35,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43;
schemes XBOOLE_0,CKB32;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,EQREL_1,RELSET_1,CKB1,CKB19;
constructors ORDINAL1,WELLORD1,EQREL_1,RELSET_1,CKB3,CKB14,CKB16,CKB18,CKB40,CKB41;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Z for set;
reserve x for set;
reserve T for (Tolerance of X);
theorem
( union ( TolClasses T ) ) = X
proof
(for x holds (x in ( union ( TolClasses T ) ) iff x in X))
proof
let x;
thus (x in ( union ( TolClasses T ) ) implies x in X)
proof
assume x in ( union ( TolClasses T ) );
then consider Z such that A1: x in Z and A2: Z in ( TolClasses T ) by TARSKI:def 4;
Z is (TolSet of T) by A2,CKB41:def 1;
then Z c= X by CKB26:1;
hence thesis by A1;
end;

assume x in X;
then consider Z being (TolClass of T) such that A3: x in Z by CKB29:1;
Z in ( TolClasses T ) by CKB41:def 1;
hence thesis by A3,TARSKI:def 4;
end;
hence thesis by TARSKI:1;
end;
