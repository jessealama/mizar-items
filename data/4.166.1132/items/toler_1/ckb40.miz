environ
vocabularies XBOOLE_0,RELAT_2,RELAT_1,EQREL_1,WELLORD1,ZFMISC_1,PARTFUN1,SUBSET_1,TARSKI,ORDINAL1,TOLER_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,RELAT_2,PARTFUN1,ORDINAL1,WELLORD1,EQREL_1,CKB2,CKB3,CKB14,CKB16,CKB18,CKB20,CKB36;
definitions TARSKI,RELAT_1,RELAT_2,WELLORD1,CKB16,CKB18;
theorems TARSKI,RELAT_1,RELSET_1,RELAT_2,ZFMISC_1,WELLORD1,ENUMSET1,ORDERS_1,EQREL_1,ORDINAL1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB34,CKB35,CKB37,CKB38,CKB39;
schemes XBOOLE_0,CKB32;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,EQREL_1,RELSET_1,CKB1,CKB19;
constructors ORDINAL1,WELLORD1,EQREL_1,RELSET_1,CKB3,CKB14,CKB16,CKB18;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve x for set;
definition
let X;
let T being (Tolerance of X);
func TolSets T -> set
means
:Def6: (for Y holds (Y in it iff Y is (TolSet of T)));
existence
proof
defpred X[ set ]
 means
$1 is (TolSet of T);
consider Z being set such that A1: (x in Z iff (x in ( bool X ) & X[ x ])) from XBOOLE_0:sch 1;
take Z;
let Y;
thus (Y in Z implies Y is (TolSet of T)) by A1;
assume A2: Y is (TolSet of T);
(for x holds (x in Y implies x in X))
proof
let x;
assume x in Y;
then [ x,x ] in T by A2,CKB16:def 1;
hence thesis by ZFMISC_1:87;
end;
then Y c= X by TARSKI:def 3;
hence thesis by A1,A2;
end;
uniqueness
proof
defpred P[ set ]
 means
$1 is (TolSet of T);
let Z1 being set,Z2 being set;
assume that
A3: (for Y holds (Y in Z1 iff P[ Y ]))
and
A4: (for Y holds (Y in Z2 iff P[ Y ]));
Z1 = Z2 from XBOOLE_0:sch 2(A3,A4);
hence thesis;
end;
end;
