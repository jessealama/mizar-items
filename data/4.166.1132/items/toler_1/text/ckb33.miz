environ
vocabularies XBOOLE_0,RELAT_2,RELAT_1,EQREL_1,WELLORD1,ZFMISC_1,PARTFUN1,SUBSET_1,TARSKI,ORDINAL1,TOLER_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,RELAT_2,PARTFUN1,ORDINAL1,WELLORD1,EQREL_1,CKB2,CKB3,CKB14,CKB16,CKB18,CKB20;
definitions TARSKI,RELAT_1,RELAT_2,WELLORD1,CKB16,CKB18;
theorems TARSKI,RELAT_1,RELSET_1,RELAT_2,ZFMISC_1,WELLORD1,ENUMSET1,ORDERS_1,EQREL_1,ORDINAL1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31;
schemes XBOOLE_0,CKB32;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,EQREL_1,RELSET_1,CKB1,CKB19;
constructors ORDINAL1,WELLORD1,EQREL_1,RELSET_1,CKB3,CKB14,CKB16,CKB18;
requirements SUBSET,BOOLE;
begin
reserve Y for set;
reserve Z for set;
reserve x for set;
reserve y for set;
theorem
(for Y holds (ex T being (Tolerance of ( union Y )) st (for Z holds (Z in Y implies Z is (TolSet of T)))))
proof
let Y;
defpred X[ set,set ]
 means
(ex Z st ((Z in Y & $1 in Z) & $2 in Z));
A1: (for x holds (x in ( union Y ) implies X[ x,x ]))
proof
let x;
assume x in ( union Y );
then (ex Z st (x in Z & Z in Y)) by TARSKI:def 4;
hence thesis;
end;
A2: (for x holds (for y holds (((x in ( union Y ) & y in ( union Y )) & X[ x,y ]) implies X[ y,x ])));
consider T being (Tolerance of ( union Y )) such that A3: (for x holds (for y holds ((x in ( union Y ) & y in ( union Y )) implies ([ x,y ] in T iff X[ x,y ])))) from CKB32:sch 1(A1,A2);
take T;
let Z;
assume that
A4: Z in Y;
(for x holds (for y holds ((x in Z & y in Z) implies [ x,y ] in T)))
proof
let x;
let y;
assume A5: (x in Z & y in Z);
then (x in ( union Y ) & y in ( union Y )) by A4,TARSKI:def 4;
hence thesis by A3,A4,A5;
end;
hence thesis by CKB16:def 1;
end;
