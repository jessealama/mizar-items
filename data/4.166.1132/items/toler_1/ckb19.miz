environ
vocabularies XBOOLE_0,RELAT_2,RELAT_1,EQREL_1,WELLORD1,ZFMISC_1,PARTFUN1,SUBSET_1,TARSKI,ORDINAL1,TOLER_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,RELAT_2,PARTFUN1,ORDINAL1,WELLORD1,EQREL_1,CKB2,CKB3,CKB14,CKB16,CKB18;
definitions TARSKI,RELAT_1,RELAT_2,WELLORD1,CKB16,CKB18;
theorems TARSKI,RELAT_1,RELSET_1,RELAT_2,ZFMISC_1,WELLORD1,ENUMSET1,ORDERS_1,EQREL_1,ORDINAL1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB18;
schemes XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,EQREL_1,RELSET_1,CKB1;
constructors ORDINAL1,WELLORD1,EQREL_1,RELSET_1,CKB3,CKB14,CKB16,CKB18;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve Z for set;
reserve x for set;
reserve y for set;
reserve z for set;
registration
let X;
let T being (Tolerance of X);
cluster  TolClass-like for (TolSet of T);
existence
proof
defpred X[ set ]
 means
$1 is (TolSet of T);
consider TS being set such that A1: (for x holds (x in TS iff (x in ( bool X ) & X[ x ]))) from XBOOLE_0:sch 1;
A2: TS c= ( bool X )
proof
let x;
assume x in TS;
hence thesis by A1;
end;
A3: (for Z holds ((Z c= TS & Z is  c=-linear) implies (ex Y st (Y in TS & (for X1 being set holds (X1 in Z implies X1 c= Y))))))
proof
let Z;
assume that
A4: Z c= TS
and
A5: Z is  c=-linear;
(for x holds (for y holds ((x in ( union Z ) & y in ( union Z )) implies [ x,y ] in T)))
proof
let x;
let y;
assume that
A6: x in ( union Z )
and
A7: y in ( union Z );
consider Zy being set such that A8: y in Zy and A9: Zy in Z by A7,TARSKI:def 4;
reconsider Zy as (TolSet of T) by A1,A4,A9;
consider Zx being set such that A10: x in Zx and A11: Zx in Z by A6,TARSKI:def 4;
reconsider Zx as (TolSet of T) by A1,A4,A11;
Zx,Zy are_c=-comparable  by A5,A11,A9,ORDINAL1:def 8;
then (Zx c= Zy or Zy c= Zx) by XBOOLE_0:def 9;
hence thesis by A10,A8,CKB16:def 1;
end;
then A12: ( union Z ) is (TolSet of T) by CKB16:def 1;
take ( union Z );
Z c= ( bool X ) by A2,A4,XBOOLE_1:1;
then ( union Z ) c= ( union ( bool X ) ) by ZFMISC_1:77;
then ( union Z ) c= X by ZFMISC_1:81;
hence ( union Z ) in TS by A1,A12;
let X1 being set;
assume X1 in Z;
hence thesis by ZFMISC_1:74;
end;
(( {} ) c= X & ( {} ) is (TolSet of T)) by CKB17:1,XBOOLE_1:2;
then TS <> ( {} ) by A1;
then consider Y such that A13: Y in TS and A14: (for Z holds ((Z in TS & Z <> Y) implies (not Y c= Z))) by A3,ORDERS_1:65;
reconsider Y as (TolSet of T) by A1,A13;
take Y;
let x;
assume that
A15: (not x in Y)
and
A16: x in X;
set Y1 = ( Y \/ { x } );
A17: { x } c= X by A16,ZFMISC_1:31;
assume A18: (for y holds (y in Y implies [ x,y ] in T));
(for y holds (for z holds ((y in Y1 & z in Y1) implies [ y,z ] in T)))
proof
let y;
let z;
assume that
A19: y in Y1
and
A20: z in Y1;
(y in Y or y in { x }) by A19,XBOOLE_0:def 3;
then A21: (y in Y or y = x) by TARSKI:def 1;
(z in Y or z in { x }) by A20,XBOOLE_0:def 3;
then A22: (z in Y or z = x) by TARSKI:def 1;
assume A23: (not [ y,z ] in T);
then (not [ z,y ] in T) by EQREL_1:6;
hence contradiction by A16,A18,A21,A22,A23,CKB16:def 1,CKB10:1;
end;
then A24: Y1 is (TolSet of T) by CKB16:def 1;
A25: Y1 <> Y
proof
A26: x in { x } by TARSKI:def 1;
assume Y1 = Y;
hence contradiction by A15,A26,XBOOLE_0:def 3;
end;
Y in ( bool X ) by A1,A13;
then Y1 c= X by A17,XBOOLE_1:8;
then Y1 in TS by A1,A24;
hence contradiction by A14,A25,XBOOLE_1:7;
end;
end;
