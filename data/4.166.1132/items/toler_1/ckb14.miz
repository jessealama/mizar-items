environ
vocabularies XBOOLE_0,RELAT_2,RELAT_1,EQREL_1,WELLORD1,ZFMISC_1,PARTFUN1,SUBSET_1,TARSKI,ORDINAL1,TOLER_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,RELAT_2,PARTFUN1,ORDINAL1,WELLORD1,EQREL_1,CKB2,CKB3;
definitions TARSKI,RELAT_1,RELAT_2,WELLORD1;
theorems TARSKI,RELAT_1,RELSET_1,RELAT_2,ZFMISC_1,WELLORD1,ENUMSET1,ORDERS_1,EQREL_1,ORDINAL1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
schemes XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,EQREL_1,RELSET_1,CKB1;
constructors ORDINAL1,WELLORD1,EQREL_1,RELSET_1,CKB3;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve x for set;
reserve T for (Tolerance of X);
definition
let X;
let T;
let Y being (Subset of X);
redefine func T |_2 Y -> (Tolerance of Y);

coherence
proof
now
let x;
assume x in Y;
then ([ x,x ] in [: Y,Y :] & [ x,x ] in T) by CKB10:1,ZFMISC_1:87;
then [ x,x ] in ( T |_2 Y ) by XBOOLE_0:def 4;
hence x in ( dom ( T |_2 Y ) ) by RELAT_1:def 4;
end;
then Y c= ( dom ( T |_2 Y ) ) by TARSKI:def 3;
then ( dom ( T |_2 Y ) ) = Y by XBOOLE_0:def 10;
hence ( T |_2 Y ) is (Tolerance of Y) by CKB13:1,PARTFUN1:def 2,WELLORD1:15;
end;
end;
