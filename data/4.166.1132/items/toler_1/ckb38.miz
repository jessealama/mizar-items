environ
vocabularies XBOOLE_0,RELAT_2,RELAT_1,EQREL_1,WELLORD1,ZFMISC_1,PARTFUN1,SUBSET_1,TARSKI,ORDINAL1,TOLER_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,RELAT_2,PARTFUN1,ORDINAL1,WELLORD1,EQREL_1,CKB2,CKB3,CKB14,CKB16,CKB18,CKB20,CKB36;
definitions TARSKI,RELAT_1,RELAT_2,WELLORD1,CKB16,CKB18;
theorems TARSKI,RELAT_1,RELSET_1,RELAT_2,ZFMISC_1,WELLORD1,ENUMSET1,ORDERS_1,EQREL_1,ORDINAL1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB34,CKB35,CKB37;
schemes XBOOLE_0,CKB32;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,EQREL_1,RELSET_1,CKB1,CKB19;
constructors ORDINAL1,WELLORD1,EQREL_1,RELSET_1,CKB3,CKB14,CKB16,CKB18;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve Z for set;
reserve x for set;
reserve y for set;
reserve T for (Tolerance of X);
theorem
(for Y holds ((for Z being set holds (Z in Y iff (x in Z & Z is (TolClass of T)))) implies ( neighbourhood (x,T) ) = ( union Y )))
proof
let Y;
assume that
A1: (for Z being set holds (Z in Y iff (x in Z & Z is (TolClass of T))));
(for y holds (y in ( neighbourhood (x,T) ) iff y in ( union Y )))
proof
let y;
thus (y in ( neighbourhood (x,T) ) implies y in ( union Y ))
proof
assume y in ( neighbourhood (x,T) );
then [ x,y ] in T by CKB37:1;
then consider Z being (TolClass of T) such that A2: x in Z and A3: y in Z by CKB28:1;
Z in Y by A1,A2;
hence thesis by A3,TARSKI:def 4;
end;

assume y in ( union Y );
then consider Z such that A4: y in Z and A5: Z in Y by TARSKI:def 4;
reconsider Z as (TolClass of T) by A1,A5;
x in Z by A1,A5;
then [ x,y ] in T by A4,CKB16:def 1;
hence thesis by CKB37:1;
end;
hence thesis by TARSKI:1;
end;
