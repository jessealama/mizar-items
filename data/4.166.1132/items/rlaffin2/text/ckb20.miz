environ
vocabularies ARYTM_1,ARYTM_3,XBOOLE_0,CARD_1,CONVEX1,CONVEX2,CONVEX3,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSET_1,FUNCOP_1,FUNCT_1,FUNCT_2,FUNCT_4,MEMBERED,ORDERS_1,RELAT_1,RLVECT_1,RLVECT_2,RUSUB_4,SEMI_AF1,SETFAM_1,TARSKI,TOPS_1,RLAFFIN1,RLAFFIN2,ZFMISC_1,REAL_1,CARD_3,XXREAL_0,NAT_1,SUBSET_1,NUMBERS,ORDINAL1,STRUCT_0,SUPINF_2,ORDINAL4,VALUED_1,XREAL_0,PARTFUN1;
notations TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,ORDINAL1,NUMBERS,NAT_1,XCMPLX_0,XXREAL_0,ORDERS_1,CARD_1,XREAL_0,REAL_1,FINSET_1,SETFAM_1,DOMAIN_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,RELSET_1,FINSEQ_1,STRUCT_0,FINSEQ_2,SEQ_1,FINSEQOP,RVSUM_1,RLVECT_1,RLVECT_2,RUSUB_4,CONVEX1,CONVEX2,CONVEX3,RLAFFIN1,FUNCT_4,FUNCOP_1,MEMBERED,XXREAL_2,CKB6,CKB19;
definitions ORDERS_1,RLVECT_2,TARSKI,XBOOLE_0,CKB6,CKB19;
theorems BORSUK_4,CARD_1,CARD_2,CARD_FIN,CONVEX1,CONVEX3,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FUNCOP_1,FUNCT_1,FUNCT_2,FUNCT_4,NAT_1,MEMBERED,PARTFUN1,RELAT_1,RLAFFIN1,RLTOPSP1,RUSUB_4,RLVECT_2,RLVECT_3,RLVECT_4,RVSUM_1,STIRL2_1,SIMPLEX0,TARSKI,WELLORD2,XBOOLE_0,XBOOLE_1,XCMPLX_1,XREAL_0,XREAL_1,XXREAL_0,XXREAL_2,ZFMISC_1,RLVECT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes FRAENKEL,FUNCT_2,NAT_1,RLVECT_4;
registrations CARD_1,FINSET_1,FINSEQ_2,FUNCT_2,MEMBERED,NAT_1,NUMBERS,RELAT_1,RLVECT_1,RLVECT_3,STRUCT_0,SUBSET_1,VALUED_0,XCMPLX_0,XREAL_0,XXREAL_0,XBOOLE_0,RLAFFIN1,SIMPLEX0,FUNCOP_1,XXREAL_3,REALSET1,SETFAM_1,XXREAL_2,ABIAN,PARTFUN1,RVSUM_1,FINSEQ_1,RELSET_1,DILWORTH,RLVECT_2,CKB8;
constructors BINOP_2,CONVEX1,CONVEX3,DOMAIN_1,FINSEQOP,REAL_1,RLVECT_3,RVSUM_1,RUSUB_5,SEQ_1,SETFAM_1,RLAFFIN1,SIMPLEX0,XXREAL_2,FUNCT_4,RELSET_1,PARTFUN1,CKB6,CKB19;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve r for Real;
reserve V for RealLinearSpace;
reserve v for (VECTOR of V);
reserve Af for  finite (Subset of V);
theorem
Th15: (ex L being (Linear_Combination of Af) st ((( Sum L ) = ( r * ( Sum Af ) ) & ( sum L ) = ( r * ( card Af ) )) & L = ( ( ZeroLC V ) +* ( Af --> r ) )))
proof
set cV = (the carrier of V);
set Ar = ( ( ZeroLC V ) +* ( Af --> r ) );
A1: ( dom ( Af --> r ) ) = Af by FUNCOP_1:13;
( dom ( ZeroLC V ) ) = cV by FUNCT_2:def 1;
then ( dom Ar ) = ( cV \/ Af ) by A1,FUNCT_4:def 1;
then (( rng Ar ) c= ( ( rng ( Af --> r ) ) \/ ( rng ( ZeroLC V ) ) ) & ( dom Ar ) = cV) by FUNCT_4:17,XBOOLE_1:12;
then Ar is (Function of (the carrier of V),( REAL )) by FUNCT_2:2;
then reconsider Ar as (Element of ( Funcs ((the carrier of V),( REAL )) )) by FUNCT_2:8;
now
take Af;
let v;
assume (not v in Af);
hence ( Ar . v ) = ( ( ZeroLC V ) . v ) by A1,FUNCT_4:11
.= ( 0 ) by RLVECT_2:20;
end;
then reconsider Ar as (Linear_Combination of V) by RLVECT_2:def 3;
( Carrier Ar ) c= Af
proof
let x being set;
assume A2: x in ( Carrier Ar );
then reconsider v = x as (Element of V);
assume (not x in Af);
then ( Ar . x ) = ( ( ZeroLC V ) . v ) by A1,FUNCT_4:11
.= ( 0 ) by RLVECT_2:20;
hence thesis by A2,RLVECT_2:19;
end;
then reconsider Ar = ( ( ZeroLC V ) +* ( Af --> r ) ) as (Linear_Combination of Af) by RLVECT_2:def 6;
A3: ( Carrier Ar ) c= Af by RLVECT_2:def 6;
per cases ;
suppose A4: r = ( 0 );

( Carrier Ar ) = ( {} )
proof
assume ( Carrier Ar ) <> ( {} );
then consider x such that A5: x in ( Carrier Ar ) by XBOOLE_0:def 1;
(( Ar . x ) = ( ( Af --> r ) . x ) & ( ( Af --> r ) . x ) = ( 0 )) by A1,A3,A4,A5,FUNCOP_1:7,FUNCT_4:13;
hence contradiction by A5,RLVECT_2:19;
end;
then Ar = ( ZeroLC V ) by RLVECT_2:def 5;
then A6: (( Sum Ar ) = ( 0. V ) & ( sum Ar ) = ( 0 )) by RLAFFIN1:31,RLVECT_2:30;
( r * ( Sum Af ) ) = ( 0. V ) by A4,RLVECT_1:10;
hence thesis by A4,A6;
end;
suppose A7: r <> ( 0 );

consider F being (FinSequence of V) such that A8: F is  one-to-one and A9: ( rng F ) = ( Carrier Ar ) and A10: ( Sum Ar ) = ( Sum ( Ar (#) F ) ) by RLVECT_2:def 8;
Af c= ( Carrier Ar )
proof
let x;
assume A11: x in Af;
then ( Ar . x ) = ( ( Af --> r ) . x ) by A1,FUNCT_4:13;
hence thesis by A7,A11;
end;
then A12: Af = ( Carrier Ar ) by A3,XBOOLE_0:def 10;
then ( dom F ),Af are_equipotent  by A8,A9,WELLORD2:def 4;
then A13: ( card Af ) = ( card ( dom F ) ) by CARD_1:5
.= ( card ( Seg ( len F ) ) ) by FINSEQ_1:def 3
.= ( len F ) by FINSEQ_1:57;
set L = ( ( len F ) |-> r );
A14: ( len ( Ar * F ) ) = ( len F ) by FINSEQ_2:33;
then reconsider ArF = ( Ar * F ) as (Element of ( ( len F ) -tuples_on ( REAL ) )) by FINSEQ_2:92;
now
let i being Nat;
assume A15: i in ( Seg ( len F ) );
then i in ( dom F ) by FINSEQ_1:def 3;
then A16: ( F . i ) in ( rng F ) by FUNCT_1:def 3;
then A17: ( ( Af --> r ) . ( F . i ) ) = r by A3,A9,FUNCOP_1:7;
i in ( dom ArF ) by A14,A15,FINSEQ_1:def 3;
then ( ArF . i ) = ( Ar . ( F . i ) ) by FUNCT_1:12;
then ( ArF . i ) = ( ( Af --> r ) . ( F . i ) ) by A1,A3,A9,A16,FUNCT_4:13;
hence ( ArF . i ) = ( L . i ) by A15,A17,FINSEQ_2:57;
end;
then ArF = L by FINSEQ_2:119;
then A18: ( sum Ar ) = ( Sum L ) by A8,A9,RLAFFIN1:def 3
.= ( ( len F ) * r ) by RVSUM_1:80;
set AF = ( Ar (#) F );
A19: ( len AF ) = ( len F ) by RLVECT_2:def 7;
then A20: ( dom AF ) = ( dom F ) by FINSEQ_3:29;
now
let i being (Element of ( NAT ));
assume A21: i in ( dom F );
then (( F /. i ) = ( F . i ) & ( F . i ) in ( rng F )) by FUNCT_1:def 3,PARTFUN1:def 6;
then (( Ar . ( F /. i ) ) = ( ( Af --> r ) . ( F /. i ) ) & ( ( Af --> r ) . ( F /. i ) ) = r) by A1,A3,A9,FUNCOP_1:7,FUNCT_4:13;
hence ( AF . i ) = ( r * ( F /. i ) ) by A20,A21,RLVECT_2:def 7;
end;
then ( Sum Ar ) = ( r * ( Sum F ) ) by A10,A19,RLVECT_2:3
.= ( r * ( Sum Af ) ) by A8,A9,A12,RLVECT_2:def 2;
hence thesis by A13,A18;
end;
end;
