environ
vocabularies ARYTM_1,ARYTM_3,XBOOLE_0,CARD_1,CONVEX1,CONVEX2,CONVEX3,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSET_1,FUNCOP_1,FUNCT_1,FUNCT_2,FUNCT_4,MEMBERED,ORDERS_1,RELAT_1,RLVECT_1,RLVECT_2,RUSUB_4,SEMI_AF1,SETFAM_1,TARSKI,TOPS_1,RLAFFIN1,RLAFFIN2,ZFMISC_1,REAL_1,CARD_3,XXREAL_0,NAT_1,SUBSET_1,NUMBERS,ORDINAL1,STRUCT_0,SUPINF_2,ORDINAL4,VALUED_1,XREAL_0,PARTFUN1;
notations TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,ORDINAL1,NUMBERS,NAT_1,XCMPLX_0,XXREAL_0,ORDERS_1,CARD_1,XREAL_0,REAL_1,FINSET_1,SETFAM_1,DOMAIN_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,RELSET_1,FINSEQ_1,STRUCT_0,FINSEQ_2,SEQ_1,FINSEQOP,RVSUM_1,RLVECT_1,RLVECT_2,RUSUB_4,CONVEX1,CONVEX2,CONVEX3,RLAFFIN1,FUNCT_4,FUNCOP_1,MEMBERED,XXREAL_2,CKB6,CKB19;
definitions ORDERS_1,RLVECT_2,TARSKI,XBOOLE_0,CKB6,CKB19;
theorems BORSUK_4,CARD_1,CARD_2,CARD_FIN,CONVEX1,CONVEX3,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FUNCOP_1,FUNCT_1,FUNCT_2,FUNCT_4,NAT_1,MEMBERED,PARTFUN1,RELAT_1,RLAFFIN1,RLTOPSP1,RUSUB_4,RLVECT_2,RLVECT_3,RLVECT_4,RVSUM_1,STIRL2_1,SIMPLEX0,TARSKI,WELLORD2,XBOOLE_0,XBOOLE_1,XCMPLX_1,XREAL_0,XREAL_1,XXREAL_0,XXREAL_2,ZFMISC_1,RLVECT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30;
schemes FRAENKEL,FUNCT_2,NAT_1,RLVECT_4;
registrations CARD_1,FINSET_1,FINSEQ_2,FUNCT_2,MEMBERED,NAT_1,NUMBERS,RELAT_1,RLVECT_1,RLVECT_3,STRUCT_0,SUBSET_1,VALUED_0,XCMPLX_0,XREAL_0,XXREAL_0,XBOOLE_0,RLAFFIN1,SIMPLEX0,FUNCOP_1,XXREAL_3,REALSET1,SETFAM_1,XXREAL_2,ABIAN,PARTFUN1,RVSUM_1,FINSEQ_1,RELSET_1,DILWORTH,RLVECT_2,CKB8;
constructors BINOP_2,CONVEX1,CONVEX3,DOMAIN_1,FINSEQOP,REAL_1,RLVECT_3,RVSUM_1,RUSUB_5,SEQ_1,SETFAM_1,RLAFFIN1,SIMPLEX0,XXREAL_2,FUNCT_4,RELSET_1,PARTFUN1,CKB6,CKB19;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve r for Real;
reserve s for Real;
reserve V for RealLinearSpace;
reserve v for (VECTOR of V);
reserve p for (VECTOR of V);
reserve L1 for (Linear_Combination of V);
reserve L2 for (Linear_Combination of V);
theorem
Th25: (for p being Real holds ((( ( ( r * L1 ) + ( ( 1 - r ) * L2 ) ) . v ) <= p & p <= ( ( ( s * L1 ) + ( ( 1 - s ) * L2 ) ) . v )) implies (ex rs being Real st ((( ( ( rs * L1 ) + ( ( 1 - rs ) * L2 ) ) . v ) = p & (r <= s implies (r <= rs & rs <= s))) & (s <= r implies (s <= rs & rs <= r))))))
proof
let p being Real;
set rv = ( ( ( r * L1 ) + ( ( 1 - r ) * L2 ) ) . v );
set sv = ( ( ( s * L1 ) + ( ( 1 - s ) * L2 ) ) . v );
set v1 = ( L1 . v );
set v2 = ( L2 . v );
A1: rv = ( ( ( r * L1 ) . v ) + ( ( ( 1 - r ) * L2 ) . v ) ) by RLVECT_2:def 10
.= ( ( r * v1 ) + ( ( ( 1 - r ) * L2 ) . v ) ) by RLVECT_2:def 11
.= ( ( r * v1 ) + ( ( 1 - r ) * v2 ) ) by RLVECT_2:def 11;
A2: sv = ( ( ( s * L1 ) . v ) + ( ( ( 1 - s ) * L2 ) . v ) ) by RLVECT_2:def 10
.= ( ( s * v1 ) + ( ( ( 1 - s ) * L2 ) . v ) ) by RLVECT_2:def 11
.= ( ( s * v1 ) + ( ( 1 - s ) * v2 ) ) by RLVECT_2:def 11;
assume that
A3: rv <= p
and
A4: p <= sv;
per cases ;
suppose A5: rv = sv;

take r;
thus thesis by A3,A4,A5,XXREAL_0:1;
end;
suppose rv <> sv;

then A6: ( sv - rv ) <> ( 0 );
set y = ( ( p - rv ) / ( sv - rv ) );
set x = ( ( sv - p ) / ( sv - rv ) );
take rs = ( ( r * x ) + ( s * y ) );
A7: (( ( r * x ) + ( r * y ) ) = ( r * ( x + y ) ) & ( ( s * x ) + ( s * y ) ) = ( s * ( x + y ) ));
A8: ( x + y ) = ( ( ( sv - p ) + ( p - rv ) ) / ( sv - rv ) ) by XCMPLX_1:62
.= 1 by A6,XCMPLX_1:60;
A9: ( p - rv ) >= ( rv - rv ) by A3,XREAL_1:9;
thus p = ( ( p * ( sv - rv ) ) / ( sv - rv ) ) by A6,XCMPLX_1:89
.= ( ( ( rv * ( sv - p ) ) + ( sv * ( p - rv ) ) ) / ( sv - rv ) )
.= ( ( ( rv * ( sv - p ) ) / ( sv - rv ) ) + ( ( sv * ( p - rv ) ) / ( sv - rv ) ) ) by XCMPLX_1:62
.= ( ( ( rv * ( sv - p ) ) / ( sv - rv ) ) + ( ( ( p - rv ) / ( sv - rv ) ) * sv ) ) by XCMPLX_1:74
.= ( ( x * ( ( r * v1 ) + ( ( 1 - r ) * v2 ) ) ) + ( y * ( ( s * v1 ) + ( ( 1 - s ) * v2 ) ) ) ) by A1,A2,XCMPLX_1:74
.= ( ( ( rs * v1 ) + ( ( x + y ) * v2 ) ) - ( rs * v2 ) )
.= ( ( ( rs * v1 ) + ( 1 * v2 ) ) - ( rs * v2 ) ) by A8
.= ( ( rs * v1 ) + ( ( 1 - rs ) * v2 ) )
.= ( ( rs * v1 ) + ( ( ( 1 - rs ) * L2 ) . v ) ) by RLVECT_2:def 11
.= ( ( ( rs * L1 ) . v ) + ( ( ( 1 - rs ) * L2 ) . v ) ) by RLVECT_2:def 11
.= ( ( ( rs * L1 ) + ( ( 1 - rs ) * L2 ) ) . v ) by RLVECT_2:def 10;
A10: (( sv - rv ) >= ( sv - p ) & ( sv - p ) >= ( p - p )) by A3,A4,XREAL_1:9,XREAL_1:10;
hereby
assume r <= s;
then (( r * x ) <= ( s * x ) & ( r * y ) <= ( s * y )) by A9,A10,XREAL_1:64;
hence (r <= rs & rs <= s) by A7,A8,XREAL_1:6;
end;
assume A11: s <= r;
then A12: ( r * x ) >= ( s * x ) by A10,XREAL_1:64;
( sv - rv ) >= ( p - rv ) by A4,XREAL_1:9;
then ( r * y ) >= ( s * y ) by A9,A11,XREAL_1:64;
hence thesis by A7,A8,A12,XREAL_1:6;
end;
end;
