environ
vocabularies ARYTM_1,ARYTM_3,XBOOLE_0,CARD_1,CONVEX1,CONVEX2,CONVEX3,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSET_1,FUNCOP_1,FUNCT_1,FUNCT_2,FUNCT_4,MEMBERED,ORDERS_1,RELAT_1,RLVECT_1,RLVECT_2,RUSUB_4,SEMI_AF1,SETFAM_1,TARSKI,TOPS_1,RLAFFIN1,RLAFFIN2,ZFMISC_1,REAL_1,CARD_3,XXREAL_0,NAT_1,SUBSET_1,NUMBERS,ORDINAL1,STRUCT_0,SUPINF_2,ORDINAL4,VALUED_1,XREAL_0,PARTFUN1;
notations TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,ORDINAL1,NUMBERS,NAT_1,XCMPLX_0,XXREAL_0,ORDERS_1,CARD_1,XREAL_0,REAL_1,FINSET_1,SETFAM_1,DOMAIN_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,RELSET_1,FINSEQ_1,STRUCT_0,FINSEQ_2,SEQ_1,FINSEQOP,RVSUM_1,RLVECT_1,RLVECT_2,RUSUB_4,CONVEX1,CONVEX2,CONVEX3,RLAFFIN1,FUNCT_4,FUNCOP_1,MEMBERED,XXREAL_2,CKB6,CKB19;
definitions ORDERS_1,RLVECT_2,TARSKI,XBOOLE_0,CKB6,CKB19;
theorems BORSUK_4,CARD_1,CARD_2,CARD_FIN,CONVEX1,CONVEX3,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FUNCOP_1,FUNCT_1,FUNCT_2,FUNCT_4,NAT_1,MEMBERED,PARTFUN1,RELAT_1,RLAFFIN1,RLTOPSP1,RUSUB_4,RLVECT_2,RLVECT_3,RLVECT_4,RVSUM_1,STIRL2_1,SIMPLEX0,TARSKI,WELLORD2,XBOOLE_0,XBOOLE_1,XCMPLX_1,XREAL_0,XREAL_1,XXREAL_0,XXREAL_2,ZFMISC_1,RLVECT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
schemes FRAENKEL,FUNCT_2,NAT_1,RLVECT_4;
registrations CARD_1,FINSET_1,FINSEQ_2,FUNCT_2,MEMBERED,NAT_1,NUMBERS,RELAT_1,RLVECT_1,RLVECT_3,STRUCT_0,SUBSET_1,VALUED_0,XCMPLX_0,XREAL_0,XXREAL_0,XBOOLE_0,RLAFFIN1,SIMPLEX0,FUNCOP_1,XXREAL_3,REALSET1,SETFAM_1,XXREAL_2,ABIAN,PARTFUN1,RVSUM_1,FINSEQ_1,RELSET_1,DILWORTH,RLVECT_2,CKB8;
constructors BINOP_2,CONVEX1,CONVEX3,DOMAIN_1,FINSEQOP,REAL_1,RLVECT_3,RVSUM_1,RUSUB_5,SEQ_1,SETFAM_1,RLAFFIN1,SIMPLEX0,XXREAL_2,FUNCT_4,RELSET_1,PARTFUN1,CKB6,CKB19;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve r for Real;
reserve s for Real;
reserve V for RealLinearSpace;
reserve v for (VECTOR of V);
reserve L1 for (Linear_Combination of V);
reserve L2 for (Linear_Combination of V);
theorem
Lm3: (( L1 . v ) <> ( L2 . v ) implies (( ( ( r * L1 ) + ( ( 1 - r ) * L2 ) ) . v ) = s iff r = ( ( ( L2 . v ) - s ) / ( ( L2 . v ) - ( L1 . v ) ) )))
proof
set u1 = ( L1 . v );
set u2 = ( L2 . v );
A1: ( ( ( r * L1 ) + ( ( 1 - r ) * L2 ) ) . v ) = ( ( ( r * L1 ) . v ) + ( ( ( 1 - r ) * L2 ) . v ) ) by RLVECT_2:def 10
.= ( ( r * u1 ) + ( ( ( 1 - r ) * L2 ) . v ) ) by RLVECT_2:def 11
.= ( ( r * u1 ) + ( ( ( - r ) + 1 ) * u2 ) ) by RLVECT_2:def 11
.= ( ( r * ( u1 - u2 ) ) + u2 );
assume A2: u1 <> u2;
then A3: ( u1 - u2 ) <> ( 0 );
A4: ( u2 - u1 ) <> ( 0 ) by A2;
hereby
assume ( ( ( r * L1 ) + ( ( 1 - r ) * L2 ) ) . v ) = s;
then ( r * ( u2 - u1 ) ) = ( ( u2 - s ) * 1 ) by A1;
then ( r / 1 ) = ( ( u2 - s ) / ( u2 - u1 ) ) by A4,XCMPLX_1:94;
hence r = ( ( u2 - s ) / ( u2 - u1 ) );
end;
assume r = ( ( u2 - s ) / ( u2 - u1 ) );
hence ( ( ( r * L1 ) + ( ( 1 - r ) * L2 ) ) . v ) = ( ( ( ( u2 - s ) / ( - ( u1 - u2 ) ) ) * ( u1 - u2 ) ) + u2 ) by A1
.= ( ( ( ( - ( u2 - s ) ) / ( u1 - u2 ) ) * ( u1 - u2 ) ) + u2 ) by XCMPLX_1:192
.= ( ( - ( u2 - s ) ) + u2 ) by A3,XCMPLX_1:87
.= s;
end;
