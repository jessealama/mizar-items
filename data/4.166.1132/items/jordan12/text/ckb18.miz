environ
vocabularies NUMBERS,SUBSET_1,REAL_1,FINSEQ_1,RELAT_1,ZFMISC_1,XBOOLE_0,ARYTM_3,CARD_1,ARYTM_1,ABIAN,EUCLID,XXREAL_0,PARTFUN1,FUNCT_1,TOPREAL1,GOBOARD5,NAT_1,RLTOPSP1,GRAPH_2,TARSKI,STRUCT_0,PRE_TOPC,SETFAM_1,FINSET_1,CONNSP_1,GOBOARD9,RELAT_2,GOBOARD1,MCART_1,CONVEX1,TREES_1,GOBOARD2,FINSEQ_5,SPPOL_1,MATRIX_1,TOPS_1,INT_1,JORDAN12;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,CARD_1,NUMBERS,XCMPLX_0,REAL_1,NAT_1,NAT_D,ABIAN,INT_1,GRAPH_2,FINSET_1,FUNCT_1,PARTFUN1,FINSEQ_1,MATRIX_1,STRUCT_0,PRE_TOPC,TOPS_1,CONNSP_1,RLTOPSP1,EUCLID,TOPREAL1,SPPOL_1,GOBOARD1,GOBOARD2,GOBOARD5,GOBOARD9,GOBRD13,XXREAL_0,CKB9,CKB10;
definitions XBOOLE_0,TARSKI,GOBOARD5,TOPREAL1,JORDAN1,SUBSET_1,CKB9,CKB10;
theorems SPPOL_1,XBOOLE_0,TOPREAL1,JORDAN4,TARSKI,SPPOL_2,FUNCT_1,FINSEQ_4,FINSEQ_1,NAT_1,SETFAM_1,FINSET_1,CARD_2,RELAT_1,TOPREAL3,GOBOARD9,CARD_1,SUBSET_1,GOBRD14,JORDAN1H,GOBRD12,JORDAN9,XBOOLE_1,JORDAN1,GOBOARD5,JORDAN8,GOBRD13,GOBOARD6,EUCLID,GOBOARD7,TOPS_1,NAT_2,JORDAN1G,SPRECT_3,JORDAN1J,FINSEQ_5,GOBRD11,TOPREAL6,GOBOARD2,REALSET1,TOPREAL8,GRAPH_2,FINSEQ_3,JORDAN5B,XREAL_1,XXREAL_0,PARTFUN1,ORDINAL1,MATRIX_1,XREAL_0,NAT_D,ZFMISC_1,RLTOPSP1,SEQ_4,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes FRAENKEL,NAT_1;
registrations SUBSET_1,RELSET_1,XREAL_0,INT_1,MEMBERED,ABIAN,GOBOARD2,SPPOL_2,GOBOARD5,GOBOARD9,JORDAN10,FUNCT_1,RELAT_1,ZFMISC_1,EUCLID,FINSET_1,FINSEQ_1,CKB6;
constructors SETFAM_1,XXREAL_0,NAT_1,NAT_D,ABIAN,TOPS_1,CONNSP_1,COMPTS_1,GOBOARD2,SPPOL_1,JORDAN1,GRAPH_2,GOBOARD9,GOBRD13,XXREAL_2,RELSET_1,CONVEX1,CKB9,CKB10;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve f for non  constant  standard special_circular_sequence;
reserve p1 for (Point of ( TOP-REAL 2 ));
reserve p2 for (Point of ( TOP-REAL 2 ));
theorem
Th14: (for f holds (for p1 holds (for p2 holds (( LSeg (p1,p2) ) misses ( L~ f ) implies (ex C being (Subset of ( TOP-REAL 2 )) st ((C is_a_component_of ( ( L~ f ) ` ) & p1 in C) & p2 in C))))))
proof
let f;
let p1;
let p2;
assume A1: ( LSeg (p1,p2) ) misses ( L~ f );
A2: ( RightComp f ) is_a_component_of ( ( L~ f ) ` ) by GOBOARD9:def 2;
A3: p1 in ( LSeg (p1,p2) ) by RLTOPSP1:68;
then A4: (not p1 in ( L~ f )) by A1,XBOOLE_0:3;
A5: p2 in ( LSeg (p1,p2) ) by RLTOPSP1:68;
then A6: (not p2 in ( L~ f )) by A1,XBOOLE_0:3;
A7: ( LSeg (p1,p2) ) is  connected by GOBOARD9:5;
then A8: (not (p2 in ( RightComp f ) & p1 in ( LeftComp f ))) by A1,A3,A5,JORDAN1J:36;
A9: ( LeftComp f ) is_a_component_of ( ( L~ f ) ` ) by GOBOARD9:def 1;
now
per cases  by A1,A7,A3,A5,JORDAN1J:36;
suppose (not p1 in ( RightComp f ));

then (p1 in ( LeftComp f ) & p2 in ( LeftComp f )) by A8,A4,A6,GOBRD14:17;
hence thesis by A9;
end;
suppose (not p2 in ( LeftComp f ));

then (p2 in ( RightComp f ) & p1 in ( RightComp f )) by A8,A4,A6,GOBRD14:18;
hence thesis by A2;
end;
end;
hence thesis;
end;
