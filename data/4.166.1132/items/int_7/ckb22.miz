environ
vocabularies NUMBERS,FUNCOP_1,CARD_1,FUNCT_4,FUNCT_1,RELAT_1,PBOOLE,PRE_POLY,VALUED_0,XBOOLE_0,ARYTM_3,NEWTON,TARSKI,FINSET_1,ORDINAL1,NAT_3,CARD_3,UPROOTS,FINSEQ_1,SUBSET_1,ORDINAL4,ARYTM_1,XXREAL_0,FUNCT_2,CLASSES1,PARTFUN1,INT_2,NAT_1,POWER,RVSUM_1,BINOP_1,BINOP_2,REALSET1,ZFMISC_1,INT_3,SUPINF_2,FUNCT_7,ALGSTR_0,GROUP_1,MESFUNC1,INT_1,COMPLEX1,VECTSP_1,POLYNOM1,HURWITZ,POLYNOM5,POLYNOM3,POLYNOM2,AFINSQ_1,STRUCT_0,GROUP_4,GROUP_2,GRAPH_1,INT_7;
notations TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,ORDINAL1,FINSET_1,RVSUM_1,CARD_1,CLASSES1,DOMAIN_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,POWER,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,FINSEQ_1,FUNCT_4,STRUCT_0,ALGSTR_0,VFUNCT_1,GROUP_1,VECTSP_1,BINOP_1,PBOOLE,GROUP_2,BHSP_1,ALGSEQ_1,WSIERP_1,POLYNOM3,POLYNOM4,UPROOTS,NAT_3,POLYNOM5,GROUP_4,GR_CY_1,INT_1,FUNCT_7,NEWTON,INT_2,INT_3,HURWITZ,VALUED_0,REALSET1,RECDEF_1,PRE_POLY,POLYNOM2,CKB8;
definitions STRUCT_0,GROUP_1,INT_3,CARD_1,ALGSTR_0,BINOP_1,FINSEQ_1,POLYNOM3,HURWITZ,REALSET1,TARSKI,CKB8;
theorems TARSKI,XBOOLE_0,ZFMISC_1,ORDINAL1,FUNCT_1,FUNCT_2,VECTSP_1,INT_1,RELAT_1,RLVECT_1,ABSVALUE,GR_CY_1,FUNCT_7,NAT_1,INT_2,INT_3,PEPIN,NAT_D,XCMPLX_1,NUMBERS,PYTHTRIP,WSIERP_1,CARD_1,GROUP_1,GROUP_2,STRUCT_0,WELLORD2,XREAL_1,NEWTON,XXREAL_0,GR_CY_2,POWER,VALUED_0,ALGSEQ_1,NAT_3,UPROOTS,RVSUM_1,FINSEQ_4,FINSEQ_5,POLYNOM3,POLYNOM4,POLYNOM5,CARD_2,EULER_1,EULER_2,XBOOLE_1,FINSEQ_1,HURWITZ,GROUP_8,REALSET1,RELSET_1,FUNCT_4,FUNCOP_1,CLASSES1,PARTFUN1,PRE_POLY,FINSEQ_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
schemes NAT_1,PRE_CIRC,FUNCT_2,RECDEF_1;
registrations XBOOLE_0,STRUCT_0,FUNCT_1,XREAL_0,ORDINAL1,NAT_1,INT_1,GROUP_1,GROUP_2,FINSET_1,FINSEQ_1,FUNCT_2,GR_CY_1,ALGSTR_0,MEMBERED,VECTSP_1,INT_3,XXREAL_0,NEWTON,SUBSET_1,RELAT_1,CARD_1,ALGSTR_1,NAT_3,VALUED_0,POLYNOM3,POLYNOM4,POLYNOM5,UPROOTS,RELSET_1,PRE_POLY,VFUNCT_1,CKB9;
constructors REAL_1,NAT_D,NAT_3,SEQ_1,PEPIN,EUCLID,REALSET1,GROUP_4,GR_CY_1,INT_3,WSIERP_1,BHSP_1,POLYNOM2,POLYNOM4,POLYNOM5,WELLORD2,POWER,ALGSTR_1,HURWITZ,UPROOTS,FUNCT_4,RECDEF_1,BINOP_2,CLASSES1,RELSET_1,PBOOLE,FUNCT_7,VFUNCT_1,CKB8;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
theorem
Lm8: (for q being Prime holds (for g being (Element of ( NAT )) holds (g <> ( 0 ) implies (ex p1 being (bag of ( SetPrimes )) st ((p1 = ( ( ( SetPrimes ) --> ( 0 ) ) +* (q,g) ) & ( support p1 ) = { q }) & ( Product p1 ) = g)))))
proof
let q being Prime;
let g being (Element of ( NAT ));
set p = ( ( ( SetPrimes ) --> ( 0 ) ) +* (q,g) );
reconsider p as (ManySortedSet of ( SetPrimes ));
A1: ( dom ( ( SetPrimes ) --> ( 0 ) ) ) = ( SetPrimes ) by FUNCOP_1:13;
then q in ( dom ( ( SetPrimes ) --> ( 0 ) ) ) by NEWTON:def 6;
then A2: ( p . q ) = g by FUNCT_7:31;
A3: (for x holds ((not x in { q }) implies ( p . x ) = ( 0 )))
proof
let x being set;
assume (not x in { q });
then x <> q by TARSKI:def 1;
hence thesis by CKB1:1;
end;
now
let z being set;
assume A4: z in ( support p );
z in ( dom p )
proof
assume (not z in ( dom p ));
then ( p . z ) = ( {} ) by FUNCT_1:def 2;
hence contradiction by A4,PRE_POLY:def 7;
end;
then reconsider y = z as (Element of ( SetPrimes )) by A1,FUNCT_7:30;
assume (not z in { q });
( p . y ) <> ( 0 ) by A4,PRE_POLY:def 7;
hence z in { q } by A3;
end;
then (for z being set holds (z in ( support p ) implies z in { q }));
then A5: ( support p ) c= { q } by TARSKI:def 3;
assume A6: g <> ( 0 );
now
let z being set;
assume z in { q };
then A7: z = q by TARSKI:def 1;
thus z in ( support p ) by A6,A2,A7,PRE_POLY:def 7;
end;
then A8: { q } c= ( support p ) by TARSKI:def 3;
then A9: ( support p ) = { q } by A5,XBOOLE_0:def 10;
reconsider p as (bag of ( SetPrimes )) by A5,PRE_POLY:def 8;
A10: q in ( support p ) by A9,TARSKI:def 1;
A11: q in ( dom p )
proof
assume (not q in ( dom p ));
then ( p . q ) = ( {} ) by FUNCT_1:def 2;
hence contradiction by A10,PRE_POLY:def 7;
end;
take p;
consider f being (FinSequence of ( COMPLEX )) such that A12: ( Product p ) = ( Product f ) and A13: f = ( p * ( canFS ( support p ) ) ) by NAT_3:def 5;
f = ( p * <* q *> ) by A9,A13,UPROOTS:4;
then f = <* ( p . q ) *> by A11,FINSEQ_2:34;
hence thesis by A2,A5,A8,A12,RVSUM_1:95,XBOOLE_0:def 10;
end;
