environ
vocabularies PRE_TOPC,STRUCT_0,TARSKI,SUBSET_1,RCOMP_1,XBOOLE_0,ZFMISC_1,TDLAT_3,NATTRA_1,SETFAM_1,TSP_1;
notations TARSKI,XBOOLE_0,SUBSET_1,DOMAIN_1,STRUCT_0,PRE_TOPC,BORSUK_1,TSEP_1,TDLAT_3,TEX_2,TEX_4,CKB1,CKB3,CKB5,CKB6,CKB17,CKB18,CKB19,CKB23,CKB24,CKB27,CKB28,CKB37,CKB38;
definitions T_0TOPSP,SUBSET_1,STRUCT_0,CKB1,CKB3,CKB5,CKB6,CKB17,CKB18,CKB19,CKB27,CKB28,CKB37,CKB38;
theorems ZFMISC_1,SUBSET_1,PRE_TOPC,TOPS_1,TSEP_1,TDLAT_3,TEX_1,TEX_2,TEX_4,TARSKI,T_0TOPSP,STRUCT_0,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB16,CKB17,CKB18,CKB19,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38;
registrations XBOOLE_0,STRUCT_0,TOPS_1,TDLAT_3,TEX_1,TEX_2,SUBSET_1,ZFMISC_1,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB20,CKB21,CKB22,CKB25,CKB26;
constructors REALSET2,BORSUK_1,TSEP_1,TDLAT_3,TEX_2,TEX_4,T_0TOPSP,CKB27;
requirements SUBSET,BOOLE;
begin
definition
let X being non  empty TopSpace;
let A being (Subset of X);
redefine attr A is  T_0
means
(for x,y being (Point of X) holds (((x in A & y in A) & x <> y) implies (x in ( Cl { y } ) implies (not ( Cl { y } ) c= ( Cl { x } )))));
compatibility
proof
thus (A is  T_0 implies (for x,y being (Point of X) holds (((x in A & y in A) & x <> y) implies (x in ( Cl { y } ) implies (not ( Cl { y } ) c= ( Cl { x } ))))))
proof
assume A1: A is  T_0;
hereby
let x being (Point of X);
let y being (Point of X);
assume A2: ((x in A & y in A) & x <> y);
assume x in ( Cl { y } );
then { x } c= ( Cl { y } ) by ZFMISC_1:31;
then A3: ( Cl { x } ) c= ( Cl { y } ) by TOPS_1:5;
assume ( Cl { y } ) c= ( Cl { x } );
then ( Cl { x } ) = ( Cl { y } ) by A3,XBOOLE_0:def 10;
hence contradiction by A1,A2,CKB37:def 1;
end;
end;

assume A4: (for x,y being (Point of X) holds (((x in A & y in A) & x <> y) implies (x in ( Cl { y } ) implies (not ( Cl { y } ) c= ( Cl { x } )))));
(for x,y being (Point of X) holds (((x in A & y in A) & x <> y) implies ((not x in ( Cl { y } )) or (not y in ( Cl { x } )))))
proof
let x being (Point of X);
let y being (Point of X);
assume A5: ((x in A & y in A) & x <> y);
assume A6: x in ( Cl { y } );
assume y in ( Cl { x } );
then { y } c= ( Cl { x } ) by ZFMISC_1:31;
hence contradiction by A4,A5,A6,TOPS_1:5;
end;
hence thesis by CKB38:def 1;
end;
end;
