environ
vocabularies PRE_TOPC,STRUCT_0,TARSKI,SUBSET_1,RCOMP_1,XBOOLE_0,ZFMISC_1,TDLAT_3,NATTRA_1,SETFAM_1,TSP_1;
notations TARSKI,XBOOLE_0,SUBSET_1,DOMAIN_1,STRUCT_0,PRE_TOPC,BORSUK_1,TSEP_1,TDLAT_3,TEX_2,TEX_4,CKB1,CKB3;
definitions T_0TOPSP,SUBSET_1,STRUCT_0,CKB1,CKB3;
theorems ZFMISC_1,SUBSET_1,PRE_TOPC,TOPS_1,TSEP_1,TDLAT_3,TEX_1,TEX_2,TEX_4,TARSKI,T_0TOPSP,STRUCT_0,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4;
registrations XBOOLE_0,STRUCT_0,TOPS_1,TDLAT_3,TEX_1,TEX_2,SUBSET_1,ZFMISC_1;
constructors REALSET2,BORSUK_1,TSEP_1,TDLAT_3,TEX_2,TEX_4,T_0TOPSP;
requirements SUBSET,BOOLE;
begin
definition
let T being TopStruct;
redefine attr T is  T_0
means
:Def3: (T is  empty or (for x,y being (Point of T) holds (x <> y implies ((ex V being (Subset of T) st ((V is  open & x in V) & (not y in V))) or (ex W being (Subset of T) st ((W is  open & (not x in W)) & y in W))))));
compatibility
proof
hereby
assume A1: T is  T_0;
assume A2: (not T is  empty);
let x being (Point of T);
let y being (Point of T);
assume x <> y;
then (ex V being (Subset of T) st (V is  open & ((x in V & (not y in V)) or (y in V & (not x in V))))) by A1,A2,T_0TOPSP:def 7;
hence ((ex V being (Subset of T) st ((V is  open & x in V) & (not y in V))) or (ex W being (Subset of T) st ((W is  open & (not x in W)) & y in W)));
end;
assume A3: (T is  empty or (for x,y being (Point of T) holds (x <> y implies ((ex V being (Subset of T) st ((V is  open & x in V) & (not y in V))) or (ex W being (Subset of T) st ((W is  open & (not x in W)) & y in W))))));
assume A4: (not T is  empty);
let x being (Point of T);
let y being (Point of T);
assume x <> y;
then ((ex V being (Subset of T) st ((V is  open & x in V) & (not y in V))) or (ex W being (Subset of T) st ((W is  open & (not x in W)) & y in W))) by A3,A4;
hence thesis;
end;
end;
