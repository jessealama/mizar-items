environ
vocabularies NUMBERS,XBOOLE_0,RLVECT_1,BINOP_1,ZFMISC_1,STRUCT_0,SUBSET_1,FUNCT_1,ALGSTR_0,REAL_1,SUPINF_2,RELAT_1,ARYTM_3,XREAL_0,ORDINAL1,FINSEQ_1,CARD_3,CARD_1,XXREAL_0,TARSKI,PARTFUN1,ORDINAL4,BINOP_2,ARYTM_1,SUPINF_1,NAT_1,FUNCT_2,RFINSEQ,MEASURE6,CONVEX1,RFUNCT_3,FINSET_1,CLASSES1,CONVFUN1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,REAL_1,FUNCT_1,RELSET_1,PARTFUN1,SUPINF_1,ZFMISC_1,MEASURE6,BINOP_1,FUNCT_2,SUPINF_2,SEQ_1,DOMAIN_1,BINOP_2,FINSET_1,CLASSES1,RFINSEQ,RFUNCT_3,NAT_1,RVSUM_1,EXTREAL1,FINSEQ_1,FINSEQ_4,STRUCT_0,ALGSTR_0,RLVECT_1,CONVEX1,CKB1,CKB2,CKB3,CKB13;
definitions BINOP_1,RLVECT_1,RVSUM_1,STRUCT_0,ALGSTR_0,MEASURE6,CKB1,CKB2,CKB3,CKB13;
theorems ZFMISC_1,BINOP_1,FUNCT_2,CONVEX1,SUPINF_2,EXTREAL1,RLVECT_1,RFUNCT_3,RVSUM_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,NAT_1,TARSKI,FUNCT_1,CARD_2,INT_1,XCMPLX_1,XBOOLE_0,RFINSEQ,RLVECT_2,RELAT_1,XBOOLE_1,BINOP_2,XREAL_1,XXREAL_0,XREAL_0,FINSOP_1,PARTFUN1,ALGSTR_0,VALUED_1,XXREAL_3,CKB1,CKB2,CKB3,CKB5,CKB6,CKB12,CKB13,CKB15;
schemes BINOP_1,DOMAIN_1,FINSEQ_2,FRAENKEL,NAT_1,RECDEF_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,STRUCT_0,RLVECT_1,VALUED_0,ALGSTR_0,CARD_1,XXREAL_3,CKB4,CKB7,CKB8,CKB9,CKB10,CKB11,CKB14;
constructors BINOP_1,DOMAIN_1,REAL_1,FINSEQ_4,FINSOP_1,RVSUM_1,SUPINF_2,RFINSEQ,RFUNCT_3,MEASURE6,EXTREAL1,CONVEX1,SEQ_1,BINOP_2,SUPINF_1,CLASSES1,RELSET_1,CKB1,CKB2,CKB3,CKB13;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Lm2: (for X being non  empty RLSStruct holds (for x1,x2 being (VECTOR of X) holds (for w1,w2 being Real holds (for u1,u2 being (VECTOR of ( Prod_of_RLS (X,( RLS_Real )) )) holds ((u1 = [ x1,w1 ] & u2 = [ x2,w2 ]) implies ( u1 + u2 ) = [ ( x1 + x2 ),( w1 + w2 ) ])))))
proof
let X being non  empty RLSStruct;
let x1 being (VECTOR of X);
let x2 being (VECTOR of X);
let w1 being Real;
let w2 being Real;
let u1 being (VECTOR of ( Prod_of_RLS (X,( RLS_Real )) ));
let u2 being (VECTOR of ( Prod_of_RLS (X,( RLS_Real )) ));
reconsider y1 = w1 as (VECTOR of ( RLS_Real ));
reconsider y2 = w2 as (VECTOR of ( RLS_Real ));
assume that
A1: u1 = [ x1,w1 ]
and
A2: u2 = [ x2,w2 ];
( y1 + y2 ) = ( w1 + w2 ) by BINOP_2:def 9;
hence thesis by A1,A2,CKB1:def 1;
end;
