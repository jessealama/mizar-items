environ
vocabularies NUMBERS,XBOOLE_0,RLVECT_1,BINOP_1,ZFMISC_1,STRUCT_0,SUBSET_1,FUNCT_1,ALGSTR_0,REAL_1,SUPINF_2,RELAT_1,ARYTM_3,XREAL_0,ORDINAL1,FINSEQ_1,CARD_3,CARD_1,XXREAL_0,TARSKI,PARTFUN1,ORDINAL4,BINOP_2,ARYTM_1,SUPINF_1,NAT_1,FUNCT_2,RFINSEQ,MEASURE6,CONVEX1,RFUNCT_3,FINSET_1,CLASSES1,CONVFUN1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,REAL_1,FUNCT_1,RELSET_1,PARTFUN1,SUPINF_1,ZFMISC_1,MEASURE6,BINOP_1,FUNCT_2,SUPINF_2,SEQ_1,DOMAIN_1,BINOP_2,FINSET_1,CLASSES1,RFINSEQ,RFUNCT_3,NAT_1,RVSUM_1,EXTREAL1,FINSEQ_1,FINSEQ_4,STRUCT_0,ALGSTR_0,RLVECT_1,CONVEX1,CKB1,CKB2,CKB3,CKB13,CKB26,CKB27;
definitions BINOP_1,RLVECT_1,RVSUM_1,STRUCT_0,ALGSTR_0,MEASURE6,CKB1,CKB2,CKB3,CKB13,CKB26,CKB27;
theorems ZFMISC_1,BINOP_1,FUNCT_2,CONVEX1,SUPINF_2,EXTREAL1,RLVECT_1,RFUNCT_3,RVSUM_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,NAT_1,TARSKI,FUNCT_1,CARD_2,INT_1,XCMPLX_1,XBOOLE_0,RFINSEQ,RLVECT_2,RELAT_1,XBOOLE_1,BINOP_2,XREAL_1,XXREAL_0,XREAL_0,FINSOP_1,PARTFUN1,ALGSTR_0,VALUED_1,XXREAL_3,CKB1,CKB2,CKB3,CKB5,CKB6,CKB12,CKB13,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34;
schemes BINOP_1,DOMAIN_1,FINSEQ_2,FRAENKEL,NAT_1,RECDEF_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,STRUCT_0,RLVECT_1,VALUED_0,ALGSTR_0,CARD_1,XXREAL_3,CKB4,CKB7,CKB8,CKB9,CKB10,CKB11,CKB14;
constructors BINOP_1,DOMAIN_1,REAL_1,FINSEQ_4,FINSOP_1,RVSUM_1,SUPINF_2,RFINSEQ,RFUNCT_3,MEASURE6,EXTREAL1,CONVEX1,SEQ_1,BINOP_2,SUPINF_1,CLASSES1,RELSET_1,CKB1,CKB2,CKB3,CKB13,CKB26,CKB27;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Lm14: (for F being (FinSequence of ( REAL )) holds (ex s being (Permutation of ( dom F )) st (ex n being (Element of ( NAT )) st (for i being (Element of ( NAT )) holds (i in ( dom F ) implies (i in ( Seg n ) iff ( F . ( s . i ) ) <> ( 0 )))))))
proof
deffunc f(Nat) = $1;
let F being (FinSequence of ( REAL ));
defpred P[ Nat ]
 means
( F . $1 ) <> ( 0 );
defpred R[ Nat ]
 means
( F . $1 ) = ( 0 );
set A = { f(i) where i is (Element of ( NAT )): (f(i) in ( dom F ) & P[ i ]) };
set B = { f(i) where i is (Element of ( NAT )): (f(i) in ( dom F ) & R[ i ]) };
set N = ( len F );
A1: A c= ( dom F ) from FRAENKEL:sch 17;
then A2: A c= ( Seg N ) by FINSEQ_1:def 3;
reconsider A as  finite set by A1;
A3: ( rng ( Sgm A ) ) = A by A2,FINSEQ_1:def 13;
A4: B c= ( dom F ) from FRAENKEL:sch 17;
then A5: B c= ( Seg N ) by FINSEQ_1:def 3;
reconsider B as  finite set by A4;
A6: ( rng ( Sgm B ) ) = B by A5,FINSEQ_1:def 13;
(for x being set holds (not x in ( A /\ B )))
proof
let x being set;
assume A7: x in ( A /\ B );
then x in B by XBOOLE_0:def 4;
then A8: (ex i2 being (Element of ( NAT )) st ((x = i2 & i2 in ( dom F )) & ( F . i2 ) = ( 0 )));
x in A by A7,XBOOLE_0:def 4;
then (ex i1 being (Element of ( NAT )) st ((x = i1 & i1 in ( dom F )) & ( F . i1 ) <> ( 0 )));
hence contradiction by A8;
end;
then ( A /\ B ) = ( {} ) by XBOOLE_0:def 1;
then A9: A misses B by XBOOLE_0:def 7;
set s = ( ( Sgm A ) ^ ( Sgm B ) );
A10: ( Sgm B ) is  one-to-one by A5,FINSEQ_3:92;
( Sgm A ) is  one-to-one by A2,FINSEQ_3:92;
then A11: s is  one-to-one by A3,A6,A9,A10,FINSEQ_3:91;
set n = ( len ( Sgm A ) );
A12: ( len ( Sgm A ) ) = ( card A ) by A2,FINSEQ_3:39;
(for x being set holds (x in ( dom F ) iff (x in A or x in B)))
proof
let x being set;
thus (x in ( dom F ) implies (x in A or x in B))
proof
assume A13: x in ( dom F );
then reconsider x as (Element of ( NAT ));
per cases ;
suppose ( F . x ) <> ( 0 );

hence thesis by A13;
end;
suppose ( F . x ) = ( 0 );

hence thesis by A13;
end;
end;

thus thesis by A1,A4;
end;
then A14: ( A \/ B ) = ( dom F ) by XBOOLE_0:def 3;
then A15: ( rng s ) = ( dom F ) by A3,A6,FINSEQ_1:31;
( len ( Sgm B ) ) = ( card B ) by A5,FINSEQ_3:39;
then ( len s ) = ( ( card A ) + ( card B ) ) by A12,FINSEQ_1:22
.= ( card ( A \/ B ) ) by A9,CARD_2:40
.= ( card ( Seg N ) ) by A14,FINSEQ_1:def 3;
then A16: ( len s ) = N by FINSEQ_1:57;
then A17: ( dom s ) = ( Seg N ) by FINSEQ_1:def 3;
A18: (for x being (Element of ( NAT )) holds ((x in ( dom F ) & (not x in ( Seg n ))) implies (ex k being (Element of ( NAT )) st ((x = ( k + n ) & k in ( dom ( Sgm B ) )) & ( s . x ) = ( ( Sgm B ) . k )))))
proof
let x being (Element of ( NAT ));
assume that
A19: x in ( dom F )
and
A20: (not x in ( Seg n ));
A21: x in ( Seg N ) by A19,FINSEQ_1:def 3;
(not (1 <= x & x <= n)) by A20,FINSEQ_1:1;
then ( n + 1 ) <= x by A21,FINSEQ_1:1,INT_1:7;
then A22: ( ( n + 1 ) - n ) <= ( x - n ) by XREAL_1:9;
then reconsider k = ( x - n ) as (Element of ( NAT )) by INT_1:3;
take k;
( len s ) = ( n + ( len ( Sgm B ) ) ) by FINSEQ_1:22;
then A23: ( N - n ) = ( len ( Sgm B ) ) by A16;
x <= N by A21,FINSEQ_1:1;
then k <= ( len ( Sgm B ) ) by A23,XREAL_1:9;
then k in ( Seg ( len ( Sgm B ) ) ) by A22,FINSEQ_1:1;
then k in ( Seg ( card B ) ) by A5,FINSEQ_3:39;
then A24: k in ( dom ( Sgm B ) ) by A5,FINSEQ_3:40;
x = ( k + n );
hence thesis by A24,FINSEQ_1:def 7;
end;
( dom F ) = ( Seg N ) by FINSEQ_1:def 3;
then reconsider s as (Function of ( dom F ),( dom F )) by A15,A17,FUNCT_2:1;
s is  onto by A15,FUNCT_2:def 3;
then reconsider s as (Permutation of ( dom F )) by A11;
take s;
take n;
let i being (Element of ( NAT ));
assume A25: i in ( dom F );
thus (i in ( Seg n ) implies ( F . ( s . i ) ) <> ( 0 ))
proof
assume i in ( Seg n );
then A26: i in ( dom ( Sgm A ) ) by FINSEQ_1:def 3;
then ( s . i ) = ( ( Sgm A ) . i ) by FINSEQ_1:def 7;
then ( s . i ) in A by A3,A26,FUNCT_1:3;
then (ex j being (Element of ( NAT )) st ((( s . i ) = j & j in ( dom F )) & ( F . j ) <> ( 0 )));
hence thesis;
end;

thus (( F . ( s . i ) ) <> ( 0 ) implies i in ( Seg n ))
proof
assume A27: ( F . ( s . i ) ) <> ( 0 );
assume (not i in ( Seg n ));
then (ex k being (Element of ( NAT )) st ((i = ( k + n ) & k in ( dom ( Sgm B ) )) & ( s . i ) = ( ( Sgm B ) . k ))) by A18,A25;
then ( s . i ) in ( rng ( Sgm B ) ) by FUNCT_1:3;
then (ex j being (Element of ( NAT )) st ((( s . i ) = j & j in ( dom F )) & ( F . j ) = ( 0 ))) by A6;
hence thesis by A27;
end;

end;
