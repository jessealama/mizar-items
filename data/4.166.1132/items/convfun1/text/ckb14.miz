environ
vocabularies NUMBERS,XBOOLE_0,RLVECT_1,BINOP_1,ZFMISC_1,STRUCT_0,SUBSET_1,FUNCT_1,ALGSTR_0,REAL_1,SUPINF_2,RELAT_1,ARYTM_3,XREAL_0,ORDINAL1,FINSEQ_1,CARD_3,CARD_1,XXREAL_0,TARSKI,PARTFUN1,ORDINAL4,BINOP_2,ARYTM_1,SUPINF_1,NAT_1,FUNCT_2,RFINSEQ,MEASURE6,CONVEX1,RFUNCT_3,FINSET_1,CLASSES1,CONVFUN1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,REAL_1,FUNCT_1,RELSET_1,PARTFUN1,SUPINF_1,ZFMISC_1,MEASURE6,BINOP_1,FUNCT_2,SUPINF_2,SEQ_1,DOMAIN_1,BINOP_2,FINSET_1,CLASSES1,RFINSEQ,RFUNCT_3,NAT_1,RVSUM_1,EXTREAL1,FINSEQ_1,FINSEQ_4,STRUCT_0,ALGSTR_0,RLVECT_1,CONVEX1,CKB1,CKB2,CKB3,CKB13;
definitions BINOP_1,RLVECT_1,RVSUM_1,STRUCT_0,ALGSTR_0,MEASURE6,CKB1,CKB2,CKB3,CKB13;
theorems ZFMISC_1,BINOP_1,FUNCT_2,CONVEX1,SUPINF_2,EXTREAL1,RLVECT_1,RFUNCT_3,RVSUM_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,NAT_1,TARSKI,FUNCT_1,CARD_2,INT_1,XCMPLX_1,XBOOLE_0,RFINSEQ,RLVECT_2,RELAT_1,XBOOLE_1,BINOP_2,XREAL_1,XXREAL_0,XREAL_0,FINSOP_1,PARTFUN1,ALGSTR_0,VALUED_1,XXREAL_3,CKB1,CKB2,CKB3,CKB5,CKB6,CKB12,CKB13;
schemes BINOP_1,DOMAIN_1,FINSEQ_2,FRAENKEL,NAT_1,RECDEF_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,STRUCT_0,RLVECT_1,VALUED_0,ALGSTR_0,CARD_1,XXREAL_3,CKB4,CKB7,CKB8,CKB9,CKB10,CKB11;
constructors BINOP_1,DOMAIN_1,REAL_1,FINSEQ_4,FINSOP_1,RVSUM_1,SUPINF_2,RFINSEQ,RFUNCT_3,MEASURE6,EXTREAL1,CONVEX1,SEQ_1,BINOP_2,SUPINF_1,CLASSES1,RELSET_1,CKB1,CKB2,CKB3,CKB13;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
registration
cluster ( RLS_Real ) ->  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital;
coherence
proof
thus ( RLS_Real ) is  Abelian
proof
let v being (VECTOR of ( RLS_Real )),w being (VECTOR of ( RLS_Real ));
reconsider vr = v as Real;
reconsider wr = w as Real;
thus ( v + w ) = ( vr + wr ) by BINOP_2:def 9
.= ( w + v ) by BINOP_2:def 9;
end;

thus ( RLS_Real ) is  add-associative
proof
let u being (VECTOR of ( RLS_Real )),v being (VECTOR of ( RLS_Real )),w being (VECTOR of ( RLS_Real ));
reconsider ur = u as Real;
reconsider vr = v as Real;
reconsider wr = w as Real;
( v + w ) = ( vr + wr ) by BINOP_2:def 9;
then A1: ( u + ( v + w ) ) = ( ur + ( vr + wr ) ) by BINOP_2:def 9;
( u + v ) = ( ur + vr ) by BINOP_2:def 9;
then ( ( u + v ) + w ) = ( ( ur + vr ) + wr ) by BINOP_2:def 9;
hence thesis by A1;
end;

thus ( RLS_Real ) is  right_zeroed
proof
let v being (VECTOR of ( RLS_Real ));
reconsider vr = v as Real;
thus ( v + ( 0. ( RLS_Real ) ) ) = ( vr + ( 0 ) ) by BINOP_2:def 9
.= v;
end;

thus ( RLS_Real ) is  right_complementable
proof
let v being (VECTOR of ( RLS_Real ));
reconsider vr = v as Real;
reconsider w = ( - vr ) as (VECTOR of ( RLS_Real ));
take w;
thus ( v + w ) = ( vr + ( - vr ) ) by BINOP_2:def 9
.= ( 0. ( RLS_Real ) );
end;

thus (for a being  real number holds (for v,w being (VECTOR of ( RLS_Real )) holds ( a * ( v + w ) ) = ( ( a * v ) + ( a * w ) )))
proof
let a being  real number;
reconsider a as Real by XREAL_0:def 1;
let v being (VECTOR of ( RLS_Real )),w being (VECTOR of ( RLS_Real ));
reconsider vr = v as Real;
reconsider wr = w as Real;
A2: ( a * v ) = ( a * vr ) by BINOP_2:def 11;
A3: ( a * w ) = ( a * wr ) by BINOP_2:def 11;
( v + w ) = ( vr + wr ) by BINOP_2:def 9;
then ( a * ( v + w ) ) = ( a * ( vr + wr ) ) by BINOP_2:def 11
.= ( ( a * vr ) + ( a * wr ) )
.= ( ( a * v ) + ( a * w ) ) by A2,A3,BINOP_2:def 9;
hence thesis;
end;

thus (for a,b being  real number holds (for v being (VECTOR of ( RLS_Real )) holds ( ( a + b ) * v ) = ( ( a * v ) + ( b * v ) )))
proof
let a being  real number,b being  real number;
reconsider a,b as Real by XREAL_0:def 1;
let v being (VECTOR of ( RLS_Real ));
reconsider vr = v as Real;
A4: ( b * v ) = ( b * vr ) by BINOP_2:def 11;
( a * v ) = ( a * vr ) by BINOP_2:def 11;
then ( ( a * v ) + ( b * v ) ) = ( ( a * vr ) + ( b * vr ) ) by A4,BINOP_2:def 9
.= ( ( a + b ) * vr )
.= ( ( a + b ) * v ) by BINOP_2:def 11;
hence thesis;
end;

thus (for a,b being  real number holds (for v being (VECTOR of ( RLS_Real )) holds ( ( a * b ) * v ) = ( a * ( b * v ) )))
proof
let a being  real number,b being  real number;
reconsider a,b as Real by XREAL_0:def 1;
let v being (VECTOR of ( RLS_Real ));
reconsider vr = v as Real;
( b * v ) = ( b * vr ) by BINOP_2:def 11;
then ( a * ( b * v ) ) = ( a * ( b * vr ) ) by BINOP_2:def 11
.= ( ( a * b ) * vr )
.= ( ( a * b ) * v ) by BINOP_2:def 11;
hence thesis;
end;

let v being (VECTOR of ( RLS_Real ));
reconsider vr = v as Real;
thus ( 1 * v ) = ( 1 * vr ) by BINOP_2:def 11
.= v;
end;
end;
