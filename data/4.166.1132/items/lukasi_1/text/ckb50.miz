environ
vocabularies SUBSET_1,CQC_LANG,XBOOLEAN,CQC_THE1,QC_LANG1;
notations SUBSET_1,CQC_LANG,CQC_THE1;
definitions CQC_THE1;
theorems CQC_THE1,QC_LANG2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49;
registrations CQC_LANG;
constructors CQC_THE1;
begin
reserve p for (Element of ( CQC-WFF ));
reserve q for (Element of ( CQC-WFF ));
reserve r for (Element of ( CQC-WFF ));
reserve s for (Element of ( CQC-WFF ));
Lm25:now
let p;
( ( 'not' ( 'not' p ) ) => p ) in ( TAUT ) by CKB49:1;
then A1: ( ( p => ( 'not' ( VERUM ) ) ) => ( ( 'not' ( 'not' p ) ) => ( 'not' ( VERUM ) ) ) ) in ( TAUT ) by CKB2:1;
( ( ( 'not' ( 'not' p ) ) => ( 'not' ( VERUM ) ) ) => ( 'not' p ) ) in ( TAUT ) by CKB47:1;
hence ( ( p => ( 'not' ( VERUM ) ) ) => ( 'not' p ) ) in ( TAUT ) by A1,CKB3:1;
end;
theorem
Th26: ( ( p => q ) => ( ( 'not' q ) => ( 'not' p ) ) ) in ( TAUT )
proof
(( ( 'not' q ) => ( q => ( 'not' ( VERUM ) ) ) ) in ( TAUT ) & ( ( q => ( 'not' ( VERUM ) ) ) => ( ( p => q ) => ( p => ( 'not' ( VERUM ) ) ) ) ) in ( TAUT )) by CKB46:1,CKB21:1;
then A1: ( ( 'not' q ) => ( ( p => q ) => ( p => ( 'not' ( VERUM ) ) ) ) ) in ( TAUT ) by CKB3:1;
( ( 'not' q ) => ( ( p => ( 'not' ( VERUM ) ) ) => ( 'not' p ) ) ) in ( TAUT ) by Lm25,CKB35:1;
then ( ( 'not' q ) => ( ( p => q ) => ( 'not' p ) ) ) in ( TAUT ) by A1,CKB44:1;
hence thesis by CKB37:1;
end;
