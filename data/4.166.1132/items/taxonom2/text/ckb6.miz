environ
vocabularies ORDERS_2,XBOOLE_0,SUBSET_1,ORDERS_1,XXREAL_0,YELLOW_1,RELAT_2,WELLORD2,RELAT_1,TARSKI,TREES_1,EQREL_1,TAXONOM1,SETFAM_1,ZFMISC_1,ABIAN,PRE_TOPC,LATTICES,ORDINAL1,PARTIT1,TAXONOM2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,ORDINAL1,RELSET_1,STRUCT_0,ORDERS_2,EQREL_1,ABIAN,PARTIT1,ORDERS_1,YELLOW_1,TAXONOM1,CKB1,CKB2,CKB5;
definitions TARSKI,EQREL_1,TAXONOM1,SETFAM_1,XBOOLE_0,CKB1,CKB2;
theorems TARSKI,TAXONOM1,PARTIT1,EQREL_1,ZFMISC_1,ORDERS_2,ORDERS_1,RELAT_1,RELSET_1,SETFAM_1,REALSET1,ABIAN,YELLOW_1,WELLORD2,ORDINAL1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3;
schemes XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,EQREL_1,YELLOW_1,CKB4;
constructors SETFAM_1,REALSET1,ABIAN,YELLOW_1,TAXONOM1,RELSET_1,CKB1,CKB2;
requirements BOOLE,SUBSET;
begin
reserve X for non  empty set;
reserve x for set;
reserve y for set;
theorem
Th2: (for EqR being (Equivalence_Relation of X) holds (for x,y,z being set holds ((z in ( Class (EqR,x) ) & z in ( Class (EqR,y) )) implies ( Class (EqR,x) ) = ( Class (EqR,y) ))))
proof
let EqR being (Equivalence_Relation of X);
let x being set;
let y being set;
let z being set;
assume that
A1: z in ( Class (EqR,x) )
and
A2: z in ( Class (EqR,y) );
A3: [ z,y ] in EqR by A2,EQREL_1:19;
[ z,x ] in EqR by A1,EQREL_1:19;
hence ( Class (EqR,x) ) = ( Class (EqR,z) ) by A1,EQREL_1:35
.= ( Class (EqR,y) ) by A1,A3,EQREL_1:35;
end;
