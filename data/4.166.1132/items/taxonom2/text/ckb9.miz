environ
vocabularies ORDERS_2,XBOOLE_0,SUBSET_1,ORDERS_1,XXREAL_0,YELLOW_1,RELAT_2,WELLORD2,RELAT_1,TARSKI,TREES_1,EQREL_1,TAXONOM1,SETFAM_1,ZFMISC_1,ABIAN,PRE_TOPC,LATTICES,ORDINAL1,PARTIT1,TAXONOM2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,ORDINAL1,RELSET_1,STRUCT_0,ORDERS_2,EQREL_1,ABIAN,PARTIT1,ORDERS_1,YELLOW_1,TAXONOM1,CKB1,CKB2,CKB5;
definitions TARSKI,EQREL_1,TAXONOM1,SETFAM_1,XBOOLE_0,CKB1,CKB2;
theorems TARSKI,TAXONOM1,PARTIT1,EQREL_1,ZFMISC_1,ORDERS_2,ORDERS_1,RELAT_1,RELSET_1,SETFAM_1,REALSET1,ABIAN,YELLOW_1,WELLORD2,ORDINAL1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB6,CKB7,CKB8;
schemes XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,EQREL_1,YELLOW_1,CKB4;
constructors SETFAM_1,REALSET1,ABIAN,YELLOW_1,TAXONOM1,RELSET_1,CKB1,CKB2;
requirements BOOLE,SUBSET;
begin
reserve X for non  empty set;
reserve a for set;
reserve x for set;
reserve y for set;
theorem
(for C being set holds (C is (Strong_Classification of X) implies ( InclPoset ( union C ) ) is Tree))
proof
A1: X in { X } by TARSKI:def 1;
A2: X in { X } by TARSKI:def 1;
let C being set;
assume that
A3: C is (Strong_Classification of X);
A4: C is (Classification of X) by A3,TAXONOM1:def 2;
set B = ( union C );
A5: { X } in C by A3,TAXONOM1:def 2;
then reconsider B9 = B as non  empty set by A2,TARSKI:def 4;
set R9 = ( RelIncl B );
reconsider R = R9 as (Relation of B);
set D = RelStr (# B,R #);
{ X } in C by A3,TAXONOM1:def 2;
then A6: B <> ( {} ) by A1,TARSKI:def 4;
A7:now
let x being (Element of D);
let y being (Element of D);
given z being (Element of D) such that
A8: z <= x
and
A9: z <= y;

reconsider z9 = z as (Element of B9);
reconsider z99 = z9 as (Subset of X) by A4,CKB8:1;
consider Z being set such that A10: z9 in Z and A11: Z in C by TARSKI:def 4;
reconsider Z9 = Z as (a_partition of X) by A3,A11,PARTIT1:def 3;
z99 in Z9 by A10;
then z99 <> ( {} ) by EQREL_1:def 4;
then consider a being set such that A12: a in z by XBOOLE_0:def 1;
[ z,y ] in R by A9,ORDERS_2:def 5;
then A13: z c= y by A6,WELLORD2:def 1;
then A14: a in y by A12;
A15: C is (Classification of X) by A3,TAXONOM1:def 2;
reconsider x9 = x,y9 = y as (Element of B9);
consider S being set such that A16: x9 in S and A17: S in C by TARSKI:def 4;
reconsider S9 = S as (a_partition of X) by A3,A17,PARTIT1:def 3;
consider T being set such that A18: y9 in T and A19: T in C by TARSKI:def 4;
reconsider T9 = T as (a_partition of X) by A3,A19,PARTIT1:def 3;
[ z,x ] in R by A8,ORDERS_2:def 5;
then A20: z c= x by A6,WELLORD2:def 1;
then A21: a in x by A12;
now
per cases  by A17,A19,A15,TAXONOM1:def 1;
suppose S9 is_finer_than T9;

then (ex Y being set st (Y in T9 & x9 c= Y)) by A16,SETFAM_1:def 2;
hence (x9 c= y9 or y9 c= x9) by A12,A21,A13,A18,CKB7:1;
end;
suppose T9 is_finer_than S9;

then (ex Y being set st (Y in S9 & y9 c= Y)) by A18,SETFAM_1:def 2;
hence (x9 c= y9 or y9 c= x9) by A12,A20,A14,A16,CKB7:1;
end;
end;
then ([ x9,y9 ] in R or [ y9,x9 ] in R) by WELLORD2:def 1;
hence (x <= y or y <= x) by ORDERS_2:def 5;
end;
A22: D is  with_superior
proof
reconsider C9 = C as (Strong_Classification of X) by A3;
reconsider s = X as (Element of D) by A5,A2,TARSKI:def 4;
consider x being set such that A23: x in ( SmallestPartition X ) by XBOOLE_0:def 1;
( SmallestPartition X ) in C9 by TAXONOM1:def 2;
then reconsider x9 = x as (Element of D) by A23,TARSKI:def 4;
take s;
A24:now
let y being set;
assume that
A25: y in ( field R )
and
y <> s;
A26: y in ( ( dom R ) \/ ( rng R ) ) by A25,RELAT_1:def 6;
per cases  by A26,XBOOLE_0:def 3;
suppose y in ( dom R );

then reconsider y9 = y as (Element of B9);
y9 c= s by A4,CKB8:1;
hence [ y,s ] in R by WELLORD2:def 1;
end;
suppose y in ( rng R );

then reconsider y9 = y as (Element of B9);
y9 c= s by A4,CKB8:1;
hence [ y,s ] in R by WELLORD2:def 1;
end;
end;
[ x9,s ] in R by A6,A23,WELLORD2:def 1;
then s in ( field R ) by RELAT_1:15;
hence thesis by A24,ORDERS_1:def 13;
end;
RelStr (# B,R #) = ( InclPoset B ) by YELLOW_1:def 1;
hence thesis by A22,A7,CKB2:def 1;
end;
