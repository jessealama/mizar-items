environ
vocabularies ORDERS_2,XBOOLE_0,SUBSET_1,ORDERS_1,XXREAL_0,YELLOW_1,RELAT_2,WELLORD2,RELAT_1,TARSKI,TREES_1,EQREL_1,TAXONOM1,SETFAM_1,ZFMISC_1,ABIAN,PRE_TOPC,LATTICES,ORDINAL1,PARTIT1,TAXONOM2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,ORDINAL1,RELSET_1,STRUCT_0,ORDERS_2,EQREL_1,ABIAN,PARTIT1,ORDERS_1,YELLOW_1,TAXONOM1,CKB1,CKB2,CKB5,CKB10,CKB15,CKB16,CKB21,CKB24;
definitions TARSKI,EQREL_1,TAXONOM1,SETFAM_1,XBOOLE_0,CKB1,CKB2,CKB10,CKB15,CKB16,CKB21,CKB24;
theorems TARSKI,TAXONOM1,PARTIT1,EQREL_1,ZFMISC_1,ORDERS_2,ORDERS_1,RELAT_1,RELSET_1,SETFAM_1,REALSET1,ABIAN,YELLOW_1,WELLORD2,ORDINAL1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB6,CKB7,CKB8,CKB9,CKB10,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20,CKB21,CKB22,CKB24;
schemes XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,EQREL_1,YELLOW_1,CKB4,CKB11,CKB12,CKB17,CKB23;
constructors SETFAM_1,REALSET1,ABIAN,YELLOW_1,TAXONOM1,RELSET_1,CKB1,CKB2,CKB10,CKB15,CKB16,CKB21,CKB24;
requirements BOOLE,SUBSET;
begin
reserve Y for set;
reserve S1 for (Subset of Y);
reserve S2 for (Subset of Y);
theorem
Th12: (for B being  mutually-disjoint (Subset-Family of Y) holds ((for b being set holds (b in B implies (S1 misses b & Y <> ( {} )))) implies (( B \/ { S1 } ) is  mutually-disjoint  mutually-disjoint (Subset-Family of Y) & (S1 <> ( {} ) implies ( union ( B \/ { S1 } ) ) <> ( union B )))))
proof
let B being  mutually-disjoint (Subset-Family of Y);
assume that
A1: (for b being set holds (b in B implies (S1 misses b & Y <> ( {} ))));
set C = ( B \/ { S1 } );
A2:now
let c1 being set;
let c2 being set;
assume that
A3: c1 in C
and
A4: c2 in C
and
A5: c1 <> c2;
per cases  by A3,XBOOLE_0:def 3;
suppose A6: c1 in B;

per cases  by A4,XBOOLE_0:def 3;
suppose c2 in B;

hence c1 misses c2 by A5,A6,CKB16:def 1;
end;
suppose c2 in { S1 };

then c2 = S1 by TARSKI:def 1;
hence c1 misses c2 by A1,A6;
end;
end;
suppose c1 in { S1 };

then A7: c1 = S1 by TARSKI:def 1;
then (not c2 in { S1 }) by A5,TARSKI:def 1;
then c2 in B by A4,XBOOLE_0:def 3;
hence c1 misses c2 by A1,A7;
end;
end;
{ S1 } c= ( bool Y )
proof
let p being set;
assume p in { S1 };
then p = S1 by TARSKI:def 1;
hence thesis;
end;
hence C is  mutually-disjoint  mutually-disjoint (Subset-Family of Y) by A2,CKB16:def 1,XBOOLE_1:8;
thus (S1 <> ( {} ) implies ( union C ) <> ( union B ))
proof
assume A8: S1 <> ( {} );
(not ( union C ) c= ( union B ))
proof
A9: { S1 } c= C by XBOOLE_1:7;
assume A10: ( union C ) c= ( union B );
consider p being set such that A11: p in S1 by A8,XBOOLE_0:def 1;
S1 in { S1 } by TARSKI:def 1;
then p in ( union C ) by A11,A9,TARSKI:def 4;
then consider S2 being set such that A12: p in S2 and A13: S2 in B by A10,TARSKI:def 4;
S1 misses S2 by A1,A13;
hence contradiction by A11,A12,XBOOLE_0:3;
end;
hence thesis;
end;

end;
