environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,RELAT_1,FUNCT_1,TARSKI,ZFMISC_1,RELAT_2,ANALOAF,STRUCT_0,DIRAF,PARSP_1,INCSP_1,AFF_1,TRANSGEO;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_2,FUNCT_1,RELSET_1,STRUCT_0,ANALOAF,DIRAF,PARTFUN1,FUNCT_2,AFF_1,CKB1,CKB4,CKB17,CKB22,CKB29,CKB31,CKB33,CKB40,CKB42,CKB49,CKB65,CKB86,CKB100,CKB107;
definitions RELAT_2,CKB4,CKB17,CKB22,CKB29,CKB31,CKB40,CKB42,CKB49,CKB65,CKB86,CKB100,CKB107;
theorems DOMAIN_1,FUNCT_1,FUNCT_2,ANALOAF,DIRAF,AFF_1,PASCH,TARSKI,ZFMISC_1,RELAT_1,XBOOLE_0,STRUCT_0,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106,CKB107,CKB108,CKB109,CKB110,CKB111,CKB112,CKB113,CKB114,CKB115,CKB116,CKB117;
schemes FUNCT_2,CKB5;
registrations XBOOLE_0,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,ANALOAF,DIRAF,CKB32;
constructors RELAT_2,PARTFUN1,DOMAIN_1,AFF_1,RELSET_1,CKB1,CKB4,CKB17,CKB22,CKB29,CKB31,CKB40,CKB42,CKB49,CKB65,CKB86,CKB100,CKB107;
requirements SUBSET,BOOLE;
begin
reserve AFP for AffinPlane;
reserve C for (Subset of AFP);
reserve D for (Subset of AFP);
reserve K for (Subset of AFP);
reserve a for (Element of AFP);
reserve b for (Element of AFP);
reserve c for (Element of AFP);
reserve d for (Element of AFP);
reserve p for (Element of AFP);
reserve x for (Element of AFP);
reserve f for (Permutation of (the carrier of AFP));
theorem
(((((f is  collineation & K is  being_line) & (for x holds (x in K implies ( f . x ) = x))) & (not p in K)) & ( f . p ) = p) implies f = ( id (the carrier of AFP) ))
proof
assume that
A1: f is  collineation
and
A2: K is  being_line
and
A3: (for x holds (x in K implies ( f . x ) = x))
and
A4: (not p in K)
and
A5: ( f . p ) = p;
A6: (for x holds ( f . x ) = x)
proof
let x;
now
assume (not x in K);
consider a,b such that A7: a in K and A8: b in K and A9: a <> b by A2,AFF_1:19;
set A = ( Line (p,a) );
A10: p in A by AFF_1:15;
( f .: A ) = ( Line (( f . p ),( f . a )) ) by A1,CKB114:1;
then A11: ( f .: A ) = A by A3,A5,A7;
A is  being_line by A4,A7,AFF_1:def 3;
then consider C such that A12: x in C and A13: A // C by AFF_1:49;
A14: C is  being_line by A13,AFF_1:36;
( f .: A ) // ( f .: C ) by A1,A13,CKB116:1;
then A15: ( f .: C ) // C by A13,A11,AFF_1:44;
A16: a in A by AFF_1:15;
(not C // K)
proof
assume C // K;
then A // K by A13,AFF_1:44;
hence contradiction by A4,A7,A10,A16,AFF_1:45;
end;
then consider c such that A17: c in C and A18: c in K by A2,A14,AFF_1:58;
( f . c ) = c by A3,A18;
then c in ( f .: C ) by A17,CKB111:1;
then A19: ( f .: C ) = C by A17,A15,AFF_1:45;
set M = ( Line (p,b) );
A20: b in M by AFF_1:15;
( f .: M ) = ( Line (( f . p ),( f . b )) ) by A1,CKB114:1;
then A21: ( f .: M ) = M by A3,A5,A8;
M is  being_line by A4,A8,AFF_1:def 3;
then consider D such that A22: x in D and A23: M // D by AFF_1:49;
A24: D is  being_line by A23,AFF_1:36;
( f .: M ) // ( f .: D ) by A1,A23,CKB116:1;
then A25: ( f .: D ) // D by A23,A21,AFF_1:44;
A26: p in M by AFF_1:15;
(not D // K)
proof
assume D // K;
then M // K by A23,AFF_1:44;
hence contradiction by A4,A8,A26,A20,AFF_1:45;
end;
then consider d such that A27: d in D and A28: d in K by A2,A24,AFF_1:58;
( f . d ) = d by A3,A28;
then d in ( f .: D ) by A27,CKB111:1;
then A29: ( f .: D ) = D by A27,A25,AFF_1:45;
A30: A is  being_line by A13,AFF_1:36;
x = ( f . x )
proof
assume A31: x <> ( f . x );
(( f . x ) in C & ( f . x ) in D) by A12,A22,A19,A29,CKB111:1;
then C = D by A12,A22,A14,A24,A31,AFF_1:18;
then A // M by A13,A23,AFF_1:44;
then A = M by A10,A26,AFF_1:45;
hence contradiction by A2,A4,A7,A8,A9,A30,A10,A16,A20,AFF_1:18;
end;
hence thesis;
end;
hence thesis by A3;
end;
(for x holds ( f . x ) = ( ( id (the carrier of AFP) ) . x ))
proof
let x;
( f . x ) = x by A6;
hence thesis by FUNCT_1:18;
end;
hence thesis by FUNCT_2:63;
end;
