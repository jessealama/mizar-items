environ
vocabularies PETRI,FUNCT_1,XBOOLE_0,TARSKI,SUBSET_1,FUNCT_2,RELAT_1,FUNCOP_1,FUNCT_4,FINSET_1,SETFAM_1,ZFMISC_1,PARTFUN1,ARYTM_3,CARD_1,PETRI_2,STRUCT_0;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,ZFMISC_1,SETFAM_1,RELAT_1,RELSET_1,DOMAIN_1,PETRI,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_4,RELSET_2,FINSET_1,FUNCOP_1,CARD_1,PARTIT_2,STRUCT_0,CKB1,CKB2,CKB5,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24;
definitions TARSKI,PETRI,STRUCT_0,PARTIT_2,CKB1,CKB2,CKB5,CKB13,CKB14,CKB15,CKB16,CKB18,CKB22,CKB23,CKB24;
theorems RELSET_1,PARTFUN1,TARSKI,ZFMISC_1,RELAT_1,XBOOLE_0,PETRI,FUNCT_1,FUNCT_2,XBOOLE_1,FUNCT_4,FUNCOP_1,RELSET_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes FUNCT_2;
registrations SUBSET_1,RELAT_1,PARTFUN1,RELSET_1,XBOOLE_0,FUNCT_2,FINSET_1,REALSET1,STRUCT_0,PARTIT_2,FUNCT_1,PETRI,ZFMISC_1,CKB17,CKB19,CKB20;
constructors RELSET_1,DOMAIN_1,PETRI,RELSET_2,FUNCOP_1,FUNCT_4,CARD_1,STRUCT_0,PARTIT_2,CKB1,CKB2,CKB5,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB22,CKB23,CKB24;
requirements SUBSET,BOOLE;
begin
registration
cluster  strict  Colored-PT-net-like for Colored_Petri_net;
existence
proof
set PLA = { ( 0 ) };
set a = the set;
set TRA = { a };
set TSA = [: TRA,PLA :];
TSA c= TSA;
then reconsider TSA as non  empty (Relation of TRA,PLA);
set STA = [: PLA,TRA :];
STA c= STA;
then reconsider STA as non  empty (Relation of PLA,TRA);
set CS = { a,a,a };
set fa = the (Function of ( thin_cylinders (CS,{ ( 0 ) }) ),( thin_cylinders (CS,{ ( 0 ) }) ));
set f = ( { a } --> fa );
set CPNT = Colored_PT_net_Str (# PLA,TRA,STA,TSA,CS,f #);
A1: CPNT is  with_S-T_arc by PETRI:def 1;
CPNT is  with_T-S_arc by PETRI:def 2;
then reconsider CPNT as Colored_Petri_net by A1;
take CPNT;
A2:now
CS c= CS;
then reconsider CS1 = CS as non  empty (Subset of (the ColoredSet of CPNT));
let t being (transition of CPNT);
assume t in ( dom (the firing-rule of CPNT) );
A3: t = a by TARSKI:def 1;
A4: a in TRA by TARSKI:def 1;
A5: ( 0 ) in PLA by TARSKI:def 1;
then [ a,( 0 ) ] in TSA by A4,ZFMISC_1:87;
then ( 0 ) in ( { t } *' ) by A3,PETRI:8;
then reconsider O = { ( 0 ) } as (Subset of ( { t } *' )) by ZFMISC_1:31;
[ ( 0 ),a ] in STA by A5,A4,ZFMISC_1:87;
then ( 0 ) in ( *' { t } ) by A3,PETRI:6;
then reconsider I = { ( 0 ) } as (Subset of ( *' { t } )) by ZFMISC_1:31;
A6: fa is (Function of ( thin_cylinders (CS1,I) ),( thin_cylinders (CS1,O) ));
( f . t ) = fa by FUNCOP_1:7;
hence (ex CS1 being non  empty (Subset of (the ColoredSet of CPNT)) st (ex I being (Subset of ( *' { t } )) st (ex O being (Subset of ( { t } *' )) st ( (the firing-rule of CPNT) . t ) is (Function of ( thin_cylinders (CS1,I) ),( thin_cylinders (CS1,O) ))))) by A6;
end;
A7: ( dom f ) = { a } by FUNCOP_1:13;
now
reconsider a1 = a as (transition of CPNT) by TARSKI:def 1;
let x being set;
( 0 ) in PLA by TARSKI:def 1;
then [ a1,( 0 ) ] in TSA by ZFMISC_1:87;
then A8: (not ( { a1 } *' ) = ( {} )) by PETRI:8;
A9: (not a1 in ( Outbds CPNT ))
proof
assume a1 in ( Outbds CPNT );
then (ex x being (transition of CPNT) st (a1 = x & x is  outbound));
hence contradiction by A8,CKB22:def 1;
end;
assume x in ( dom (the firing-rule of CPNT) );
then x = a by A7,TARSKI:def 1;
hence x in ( (the carrier' of CPNT) \ ( Outbds CPNT ) ) by A9,XBOOLE_0:def 5;
end;
then ( dom (the firing-rule of CPNT) ) c= ( (the carrier' of CPNT) \ ( Outbds CPNT ) ) by TARSKI:def 3;
hence thesis by A2,CKB24:def 1;
end;
end;
