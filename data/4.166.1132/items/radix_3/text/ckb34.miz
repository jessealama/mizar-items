environ
vocabularies NUMBERS,NAT_1,INT_1,XXREAL_0,RADIX_1,ARYTM_1,ARYTM_3,POWER,RELAT_1,CARD_1,FINSEQ_1,NEWTON,SUBSET_1,TARSKI,XBOOLE_0,FINSEQ_2,FUNCT_1,PARTFUN1,CARD_3,ORDINAL4,RADIX_3;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,INT_1,NAT_1,NAT_D,FUNCT_1,PARTFUN1,NEWTON,POWER,FINSEQ_1,FINSEQ_2,GR_CY_1,RADIX_1,CKB6,CKB7,CKB20,CKB21,CKB23,CKB24,CKB30,CKB31,CKB33;
definitions TARSKI,RADIX_1,CKB6,CKB7,CKB23,CKB24,CKB30,CKB31,CKB33;
theorems RADIX_1,POWER,NAT_1,INT_1,FUNCT_1,FINSEQ_1,FINSEQ_2,PRE_FF,NEWTON,RVSUM_1,PREPOWER,JORDAN12,FINSEQ_3,RADIX_2,XREAL_1,XXREAL_0,NAT_D,ORDINAL1,PARTFUN1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33;
schemes NAT_1,FINSEQ_2;
registrations RELSET_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,FINSEQ_2,CARD_1,FINSEQ_1,CKB18,CKB19;
constructors REAL_1,NAT_D,NEWTON,POWER,BINARITH,GR_CY_1,RADIX_1,RELSET_1,CKB6,CKB7,CKB20,CKB21,CKB23,CKB24,CKB30,CKB31,CKB33;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve i for Nat;
reserve n for Nat;
reserve k for Nat;
reserve x for Nat;
definition
let n being Nat;
let k being Nat;
let x being (Tuple of n,( k -SD ));
func SD2SDSub x -> (Tuple of ( n + 1 ),( k -SD_Sub )) means 
:Def8: (for i being Nat holds (i in ( Seg ( n + 1 ) ) implies ( DigA_SDSub (it,i) ) = ( SD2SDSubDigitS (x,i,k) )));
existence
proof
deffunc F(Nat) = ( SD2SDSubDigitS (x,$1,k) );
consider z being (FinSequence of ( k -SD_Sub )) such that A1: ( len z ) = ( n + 1 ) and A2: (for j being Nat holds (j in ( dom z ) implies ( z . j ) = F(j))) from FINSEQ_2:sch 1;
A3: ( dom z ) = ( Seg ( n + 1 ) ) by A1,FINSEQ_1:def 3;
z is (Element of ( ( n + 1 ) -tuples_on ( k -SD_Sub ) )) by A1,FINSEQ_2:92;
then reconsider z as (Tuple of ( n + 1 ),( k -SD_Sub ));
take z;
let i;
assume A4: i in ( Seg ( n + 1 ) );
hence ( DigA_SDSub (z,i) ) = ( z . i ) by CKB30:def 1
.= ( SD2SDSubDigitS (x,i,k) ) by A2,A3,A4;
end;
uniqueness
proof
let k1 being (Tuple of ( n + 1 ),( k -SD_Sub ));
let k2 being (Tuple of ( n + 1 ),( k -SD_Sub ));
assume that
A5: (for i being Nat holds (i in ( Seg ( n + 1 ) ) implies ( DigA_SDSub (k1,i) ) = ( SD2SDSubDigitS (x,i,k) )))
and
A6: (for i being Nat holds (i in ( Seg ( n + 1 ) ) implies ( DigA_SDSub (k2,i) ) = ( SD2SDSubDigitS (x,i,k) )));
A7: ( len k1 ) = ( n + 1 ) by CARD_1:def 7;
then A8: ( dom k1 ) = ( Seg ( n + 1 ) ) by FINSEQ_1:def 3;
A9:now
let j being Nat;
assume A10: j in ( dom k1 );
then ( k1 . j ) = ( DigA_SDSub (k1,j) ) by A8,CKB30:def 1
.= ( SD2SDSubDigitS (x,j,k) ) by A5,A8,A10
.= ( DigA_SDSub (k2,j) ) by A6,A8,A10
.= ( k2 . j ) by A8,A10,CKB30:def 1;
hence ( k1 . j ) = ( k2 . j );
end;
( len k2 ) = ( n + 1 ) by CARD_1:def 7;
hence thesis by A7,A9,FINSEQ_2:9;
end;
end;
