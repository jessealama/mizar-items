environ
vocabularies NUMBERS,NAT_1,INT_1,XXREAL_0,RADIX_1,ARYTM_1,ARYTM_3,POWER,RELAT_1,CARD_1,FINSEQ_1,NEWTON,SUBSET_1,TARSKI,XBOOLE_0,FINSEQ_2,FUNCT_1,PARTFUN1,CARD_3,ORDINAL4,RADIX_3;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,INT_1,NAT_1,NAT_D,FUNCT_1,PARTFUN1,NEWTON,POWER,FINSEQ_1,FINSEQ_2,GR_CY_1,RADIX_1,CKB6,CKB7,CKB20,CKB21,CKB23,CKB24;
definitions TARSKI,RADIX_1,CKB6,CKB7,CKB23,CKB24;
theorems RADIX_1,POWER,NAT_1,INT_1,FUNCT_1,FINSEQ_1,FINSEQ_2,PRE_FF,NEWTON,RVSUM_1,PREPOWER,JORDAN12,FINSEQ_3,RADIX_2,XREAL_1,XXREAL_0,NAT_D,ORDINAL1,PARTFUN1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB22,CKB23,CKB24,CKB25,CKB26;
schemes NAT_1,FINSEQ_2;
registrations RELSET_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,FINSEQ_2,CARD_1,FINSEQ_1,CKB18,CKB19;
constructors REAL_1,NAT_D,NEWTON,POWER,BINARITH,GR_CY_1,RADIX_1,RELSET_1,CKB6,CKB7,CKB20,CKB21,CKB23,CKB24;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for Nat;
reserve x for Nat;
theorem
Th15: (for x being Integer holds (for k being Nat holds (2 <= k implies ( SDSub_Add_Carry (x,k) ) in ( k -SD_Sub_S ))))
proof
let x being Integer;
let k being Nat;
A1: ( SDSub_Add_Carry (x,k) ) <= 1 by CKB25:1;
assume k >= 2;
then k > 1 by XXREAL_0:2;
then ( k - 1 ) > ( 1 - 1 ) by XREAL_1:14;
then A2: ( k -' 1 ) > ( 0 ) by XREAL_0:def 2;
then ( 2 to_power ( k -' 1 ) ) > 1 by POWER:35;
then A3: ( - ( Radix ( k -' 1 ) ) ) <= ( - 1 ) by XREAL_1:24;
( - 1 ) <= ( SDSub_Add_Carry (x,k) ) by CKB25:1;
then A4: ( SDSub_Add_Carry (x,k) ) >= ( - ( Radix ( k -' 1 ) ) ) by A3,XXREAL_0:2;
( ( Radix ( k -' 1 ) ) - 1 ) >= 1 by A2,INT_1:52,POWER:35;
then A5: ( SDSub_Add_Carry (x,k) ) <= ( ( Radix ( k -' 1 ) ) - 1 ) by A1,XXREAL_0:2;
( SDSub_Add_Carry (x,k) ) is (Element of ( INT )) by INT_1:def 2;
hence thesis by A5,A4;
end;
