environ
vocabularies NUMBERS,NAT_1,INT_1,XXREAL_0,RADIX_1,ARYTM_1,ARYTM_3,POWER,RELAT_1,CARD_1,FINSEQ_1,NEWTON,SUBSET_1,TARSKI,XBOOLE_0,FINSEQ_2,FUNCT_1,PARTFUN1,CARD_3,ORDINAL4,RADIX_3;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,INT_1,NAT_1,NAT_D,FUNCT_1,PARTFUN1,NEWTON,POWER,FINSEQ_1,FINSEQ_2,GR_CY_1,RADIX_1,CKB6,CKB7,CKB20,CKB21,CKB23,CKB24,CKB30,CKB31,CKB33,CKB34,CKB37,CKB38,CKB39,CKB40;
definitions TARSKI,RADIX_1,CKB6,CKB7,CKB23,CKB24,CKB30,CKB31,CKB33,CKB34,CKB37,CKB38,CKB39,CKB40;
theorems RADIX_1,POWER,NAT_1,INT_1,FUNCT_1,FINSEQ_1,FINSEQ_2,PRE_FF,NEWTON,RVSUM_1,PREPOWER,JORDAN12,FINSEQ_3,RADIX_2,XREAL_1,XXREAL_0,NAT_D,ORDINAL1,PARTFUN1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41;
schemes NAT_1,FINSEQ_2;
registrations RELSET_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,FINSEQ_2,CARD_1,FINSEQ_1,CKB18,CKB19;
constructors REAL_1,NAT_D,NEWTON,POWER,BINARITH,GR_CY_1,RADIX_1,RELSET_1,CKB6,CKB7,CKB20,CKB21,CKB23,CKB24,CKB30,CKB31,CKB33,CKB34,CKB37,CKB38,CKB39,CKB40;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for Nat;
reserve k for Nat;
reserve x for Nat;
theorem
(for n holds (n >= 1 implies (for k holds (for x holds ((k >= 2 & x is_represented_by n,k) implies x = ( SDSub2IntOut ( SD2SDSub ( DecSD (x,n,k) ) ) ))))))
proof
defpred P[ Nat ]
 means
(for k,x being Nat holds ((k >= 2 & x is_represented_by $1,k) implies x = ( SDSub2IntOut ( SD2SDSub ( DecSD (x,$1,k) ) ) )));
let n;
assume A1: n >= 1;
A2: (for n being Nat holds ((n >= 1 & P[ n ]) implies P[ ( n + 1 ) ]))
proof
let n being Nat;
assume that
A3: n >= 1
and
A4: P[ n ];
A5: n in ( Seg n ) by A3,FINSEQ_1:3;
let k being Nat,x being Nat;
assume that
A6: k >= 2
and
A7: x is_represented_by ( n + 1 ),k;
reconsider k as (Element of ( NAT )) by ORDINAL1:def 12;
set xn = ( x mod ( ( Radix k ) |^ n ) );
set RN1 = ( ( Radix k ) |^ ( n + 1 ) );
set RN = ( ( Radix k ) |^ n );
A8: ( ( n + 1 ) + 1 ) in ( Seg ( ( n + 1 ) + 1 ) ) by FINSEQ_1:3;
A9: ( SDSub2INTDigit (( SD2SDSub ( DecSD (x,( n + 1 ),k) ) ),( ( n + 1 ) + 1 ),k) ) = ( RN1 * ( DigB_SDSub (( SD2SDSub ( DecSD (x,( n + 1 ),k) ) ),( ( n + 1 ) + 1 )) ) ) by NAT_D:34
.= ( RN1 * ( SD2SDSubDigitS (( DecSD (x,( n + 1 ),k) ),( ( n + 1 ) + 1 ),k) ) ) by A8,CKB34:def 1
.= ( RN1 * ( SD2SDSubDigit (( DecSD (x,( n + 1 ),k) ),( ( n + 1 ) + 1 ),k) ) ) by A6,A8,CKB33:def 1
.= ( RN1 * ( SDSub_Add_Carry (( DigA (( DecSD (x,( n + 1 ),k) ),( ( ( n + 1 ) + 1 ) -' 1 )) ),k) ) ) by CKB31:def 1
.= ( RN1 * ( SDSub_Add_Carry (( DigA (( DecSD (x,( n + 1 ),k) ),( n + 1 )) ),k) ) ) by NAT_D:34;
set XN = ( SD2SDSub ( DecSD (xn,n,k) ) );
set X = ( SD2SDSub ( DecSD (x,( n + 1 ),k) ) );
deffunc Q(Nat) = ( SDSub2INTDigit (X,$1,k) );
consider xp being (FinSequence of ( INT )) such that A10: ( len xp ) = ( n + 1 ) and A11: (for i being Nat holds (i in ( dom xp ) implies ( xp . i ) = Q(i))) from FINSEQ_2:sch 1;
A12: ( dom xp ) = ( Seg ( n + 1 ) ) by A10,FINSEQ_1:def 3;
A13: ( len ( SDSub2INT X ) ) = ( ( n + 1 ) + 1 ) by CARD_1:def 7;
A14: (for j being Nat holds ((1 <= j & j <= ( len ( SDSub2INT X ) )) implies ( ( SDSub2INT X ) . j ) = ( ( xp ^ <* ( SDSub2INTDigit (X,( ( n + 1 ) + 1 ),k) ) *> ) . j )))
proof
let j being Nat;
assume that
A15: 1 <= j
and
A16: j <= ( len ( SDSub2INT X ) );
j <= ( ( n + 1 ) + 1 ) by A16,CARD_1:def 7;
then A17: j in ( Seg ( ( n + 1 ) + 1 ) ) by A15,FINSEQ_1:1;
A18: j in ( dom ( SDSub2INT X ) ) by A15,A16,FINSEQ_3:25;
now
per cases  by A17,FINSEQ_2:7;
suppose A19: j in ( Seg ( n + 1 ) );

then j in ( dom xp ) by A10,FINSEQ_1:def 3;
then ( ( xp ^ <* ( SDSub2INTDigit (X,( ( n + 1 ) + 1 ),k) ) *> ) . j ) = ( xp . j ) by FINSEQ_1:def 7
.= ( SDSub2INTDigit (X,j,k) ) by A11,A12,A19
.= ( ( SDSub2INT X ) /. j ) by A17,CKB39:def 1
.= ( ( SDSub2INT X ) . j ) by A18,PARTFUN1:def 6;
hence thesis;
end;
suppose A20: j = ( ( n + 1 ) + 1 );

A21: j in ( dom ( SDSub2INT X ) ) by A13,A17,FINSEQ_1:def 3;
( ( xp ^ <* ( SDSub2INTDigit (X,( ( n + 1 ) + 1 ),k) ) *> ) . j ) = ( SDSub2INTDigit (X,( ( n + 1 ) + 1 ),k) ) by A10,A20,FINSEQ_1:42
.= ( ( SDSub2INT X ) /. ( ( n + 1 ) + 1 ) ) by A17,A20,CKB39:def 1
.= ( ( SDSub2INT X ) . j ) by A20,A21,PARTFUN1:def 6;
hence thesis;
end;
end;
hence thesis;
end;
( Radix k ) > ( 0 ) by RADIX_2:6;
then xn < ( ( Radix k ) |^ n ) by NAT_D:1,PREPOWER:6;
then xn is_represented_by n,k by RADIX_1:def 12;
then A22: xn = ( SDSub2IntOut ( SD2SDSub ( DecSD (xn,n,k) ) ) ) by A4,A6
.= ( Sum ( SDSub2INT ( SD2SDSub ( DecSD (xn,n,k) ) ) ) );
A23: ( n + 1 ) in ( Seg ( n + 1 ) ) by FINSEQ_1:3;
then A24: ( n + 1 ) in ( Seg ( ( n + 1 ) + 1 ) ) by FINSEQ_2:8;
consider xpp being (FinSequence of ( INT )) such that A25: ( len xpp ) = n and A26: (for i being Nat holds (i in ( dom xpp ) implies ( xpp . i ) = Q(i))) from FINSEQ_2:sch 1;
A27: ( dom xpp ) = ( Seg n ) by A25,FINSEQ_1:def 3;
A28: (for j being Nat holds ((1 <= j & j <= ( len xp )) implies ( xp . j ) = ( ( xpp ^ <* ( SDSub2INTDigit (X,( n + 1 ),k) ) *> ) . j )))
proof
let j being Nat;
assume (1 <= j & j <= ( len xp ));
then A29: j in ( Seg ( n + 1 ) ) by A10,FINSEQ_1:1;
now
per cases  by A29,FINSEQ_2:7;
suppose A30: j in ( Seg n );

then j in ( dom xpp ) by A25,FINSEQ_1:def 3;
then ( ( xpp ^ <* ( SDSub2INTDigit (X,( n + 1 ),k) ) *> ) . j ) = ( xpp . j ) by FINSEQ_1:def 7
.= ( SDSub2INTDigit (X,j,k) ) by A26,A27,A30
.= ( xp . j ) by A11,A12,A29;
hence thesis;
end;
suppose A31: j = ( n + 1 );

then ( ( xpp ^ <* ( SDSub2INTDigit (X,( n + 1 ),k) ) *> ) . j ) = ( SDSub2INTDigit (X,( n + 1 ),k) ) by A25,FINSEQ_1:42
.= ( xp . j ) by A11,A12,A29,A31;
hence thesis;
end;
end;
hence thesis;
end;
deffunc G(Nat) = ( SDSub2INTDigit (XN,$1,k) );
consider xnpp being (FinSequence of ( INT )) such that A32: ( len xnpp ) = n and A33: (for i being Nat holds (i in ( dom xnpp ) implies ( xnpp . i ) = G(i))) from FINSEQ_2:sch 1;
A34: ( dom xnpp ) = ( Seg n ) by A32,FINSEQ_1:def 3;
(for j being Nat holds ((1 <= j & j <= ( len xnpp )) implies ( xnpp . j ) = ( xpp . j )))
proof
let j being Nat;
assume (1 <= j & j <= ( len xnpp ));
then A35: j in ( Seg n ) by A32,FINSEQ_1:1;
then ( xpp . j ) = ( SDSub2INTDigit (X,j,k) ) by A26,A27
.= ( SDSub2INTDigit (XN,j,k) ) by A6,A35,CKB41:1
.= ( xnpp . j ) by A33,A34,A35;
hence thesis;
end;
then A36: xpp = xnpp by A25,A32,FINSEQ_1:14;
A37: ( len ( SDSub2INT XN ) ) = ( n + 1 ) by CARD_1:def 7;
A38: (for j being Nat holds ((1 <= j & j <= ( len ( SDSub2INT XN ) )) implies ( ( SDSub2INT XN ) . j ) = ( ( xnpp ^ <* ( SDSub2INTDigit (XN,( n + 1 ),k) ) *> ) . j )))
proof
let j being Nat;
assume A39: (1 <= j & j <= ( len ( SDSub2INT XN ) ));
then A40: j in ( Seg ( n + 1 ) ) by A37,FINSEQ_1:1;
A41: j in ( dom ( SDSub2INT XN ) ) by A39,FINSEQ_3:25;
now
per cases  by A40,FINSEQ_2:7;
suppose A42: j in ( Seg n );

then j in ( dom xnpp ) by A32,FINSEQ_1:def 3;
then ( ( xnpp ^ <* ( SDSub2INTDigit (XN,( n + 1 ),k) ) *> ) . j ) = ( xnpp . j ) by FINSEQ_1:def 7
.= ( SDSub2INTDigit (XN,j,k) ) by A33,A34,A42
.= ( ( SDSub2INT XN ) /. j ) by A40,CKB39:def 1
.= ( ( SDSub2INT XN ) . j ) by A41,PARTFUN1:def 6;
hence thesis;
end;
suppose A43: j = ( n + 1 );

A44: j in ( dom ( SDSub2INT XN ) ) by A37,A40,FINSEQ_1:def 3;
( ( xnpp ^ <* ( SDSub2INTDigit (XN,( n + 1 ),k) ) *> ) . j ) = ( SDSub2INTDigit (XN,( n + 1 ),k) ) by A32,A43,FINSEQ_1:42
.= ( ( SDSub2INT XN ) /. ( n + 1 ) ) by A40,A43,CKB39:def 1
.= ( ( SDSub2INT XN ) . j ) by A43,A44,PARTFUN1:def 6;
hence thesis;
end;
end;
hence thesis;
end;
( len xp ) = ( len ( xpp ^ <* ( SDSub2INTDigit (X,( n + 1 ),k) ) *> ) ) by A10,A25,FINSEQ_2:16;
then A45: xp = ( xpp ^ <* ( SDSub2INTDigit (X,( n + 1 ),k) ) *> ) by A28,FINSEQ_1:14;
( len ( xp ^ <* ( SDSub2INTDigit (X,( ( n + 1 ) + 1 ),k) ) *> ) ) = ( ( n + 1 ) + 1 ) by A10,FINSEQ_2:16;
then ( len ( SDSub2INT X ) ) = ( len ( xp ^ <* ( SDSub2INTDigit (X,( ( n + 1 ) + 1 ),k) ) *> ) ) by CARD_1:def 7;
then ( SDSub2INT X ) = ( xp ^ <* ( SDSub2INTDigit (X,( ( n + 1 ) + 1 ),k) ) *> ) by A14,FINSEQ_1:14;
then A46: ( Sum ( SDSub2INT X ) ) = ( ( Sum xp ) + ( SDSub2INTDigit (X,( ( n + 1 ) + 1 ),k) ) ) by RVSUM_1:74
.= ( ( ( Sum xnpp ) + ( SDSub2INTDigit (X,( n + 1 ),k) ) ) + ( SDSub2INTDigit (X,( ( n + 1 ) + 1 ),k) ) ) by A45,A36,RVSUM_1:74;
set RNDIG = ( RN * ( DigA (( DecSD (x,( n + 1 ),k) ),( n + 1 )) ) );
set RNSDC = ( RN * ( SDSub_Add_Carry (( DigA (( DecSD (x,( n + 1 ),k) ),n) ),k) ) );
A47: ( Radix k ) > ( 0 ) by RADIX_2:6;
( len ( xnpp ^ <* ( SDSub2INTDigit (XN,( n + 1 ),k) ) *> ) ) = ( n + 1 ) by A32,FINSEQ_2:16;
then ( SDSub2INT XN ) = ( xnpp ^ <* ( SDSub2INTDigit (XN,( n + 1 ),k) ) *> ) by A37,A38,FINSEQ_1:14;
then A48: ( xn + ( 0 ) ) = ( ( Sum xnpp ) + ( SDSub2INTDigit (XN,( n + 1 ),k) ) ) by A22,RVSUM_1:74;
A49: ( SDSub2INTDigit (( SD2SDSub ( DecSD (x,( n + 1 ),k) ) ),( n + 1 ),k) ) = ( ( ( Radix k ) |^ n ) * ( DigB_SDSub (( SD2SDSub ( DecSD (x,( n + 1 ),k) ) ),( n + 1 )) ) ) by NAT_D:34
.= ( RN * ( SD2SDSubDigitS (( DecSD (x,( n + 1 ),k) ),( n + 1 ),k) ) ) by A24,CKB34:def 1
.= ( RN * ( SD2SDSubDigit (( DecSD (x,( n + 1 ),k) ),( n + 1 ),k) ) ) by A6,A24,CKB33:def 1
.= ( RN * ( ( SDSub_Add_Data (( DigA (( DecSD (x,( n + 1 ),k) ),( n + 1 )) ),k) ) + ( SDSub_Add_Carry (( DigA (( DecSD (x,( n + 1 ),k) ),( ( n + 1 ) -' 1 )) ),k) ) ) ) by A23,CKB31:def 1
.= ( RN * ( ( SDSub_Add_Data (( DigA (( DecSD (x,( n + 1 ),k) ),( n + 1 )) ),k) ) + ( SDSub_Add_Carry (( DigA (( DecSD (x,( n + 1 ),k) ),n) ),k) ) ) ) by NAT_D:34
.= ( ( ( RN * ( DigA (( DecSD (x,( n + 1 ),k) ),( n + 1 )) ) ) - ( ( RN * ( Radix k ) ) * ( SDSub_Add_Carry (( DigA (( DecSD (x,( n + 1 ),k) ),( n + 1 )) ),k) ) ) ) + ( RN * ( SDSub_Add_Carry (( DigA (( DecSD (x,( n + 1 ),k) ),n) ),k) ) ) )
.= ( ( ( RN * ( DigA (( DecSD (x,( n + 1 ),k) ),( n + 1 )) ) ) - ( RN1 * ( SDSub_Add_Carry (( DigA (( DecSD (x,( n + 1 ),k) ),( n + 1 )) ),k) ) ) ) + ( RN * ( SDSub_Add_Carry (( DigA (( DecSD (x,( n + 1 ),k) ),n) ),k) ) ) ) by NEWTON:6;
( SDSub2INTDigit (( SD2SDSub ( DecSD (xn,n,k) ) ),( n + 1 ),k) ) = ( ( ( Radix k ) |^ n ) * ( DigB_SDSub (( SD2SDSub ( DecSD (xn,n,k) ) ),( n + 1 )) ) ) by NAT_D:34
.= ( RN * ( SD2SDSubDigitS (( DecSD (xn,n,k) ),( n + 1 ),k) ) ) by A23,CKB34:def 1
.= ( RN * ( SD2SDSubDigit (( DecSD (xn,n,k) ),( n + 1 ),k) ) ) by A23,A6,CKB33:def 1
.= ( RN * ( SDSub_Add_Carry (( DigA (( DecSD (xn,n,k) ),( ( n + 1 ) -' 1 )) ),k) ) ) by CKB31:def 1
.= ( RN * ( SDSub_Add_Carry (( DigA (( DecSD (xn,n,k) ),n) ),k) ) ) by NAT_D:34
.= ( RN * ( SDSub_Add_Carry (( DigA (( DecSD (x,( n + 1 ),k) ),n) ),k) ) ) by A5,CKB5:1;
then ( Sum ( SDSub2INT X ) ) = ( ( ( xn + RNDIG ) - RNSDC ) + RNSDC ) by A46,A48,A49,A9
.= ( xn + ( RN * ( x div RN ) ) ) by A7,RADIX_1:24;
hence thesis by A47,NAT_D:2,PREPOWER:6;
end;
A50: P[ 1 ]
proof
A51: 1 in ( Seg 1 ) by FINSEQ_1:1;
( 2 - 1 ) = 1;
then A52: ( 2 -' 1 ) = 1 by XREAL_0:def 2;
let k being Nat,x being Nat;
assume that
A53: k >= 2
and
A54: x is_represented_by 1,k;
set X = ( DecSD (x,1,k) );
reconsider CRY = ( ( Radix k ) * ( SDSub_Add_Carry (( DigA (X,1) ),k) ) ) as Integer;
reconsider DIG2 = CRY as (Element of ( INT )) by INT_1:def 2;
reconsider DIG1 = ( ( DigA (X,1) ) - CRY ) as (Element of ( INT )) by INT_1:def 2;
A55: 1 in ( Seg ( 1 + 1 ) ) by FINSEQ_1:1;
A56: ( len ( SDSub2INT ( SD2SDSub X ) ) ) = ( 1 + 1 ) by CARD_1:def 7;
then A57: 1 in ( dom ( SDSub2INT ( SD2SDSub X ) ) ) by A55,FINSEQ_1:def 3;
A58: 2 in ( Seg ( 1 + 1 ) ) by FINSEQ_1:1;
then A59: 2 in ( dom ( SDSub2INT ( SD2SDSub X ) ) ) by A56,FINSEQ_1:def 3;
( ( SDSub2INT ( SD2SDSub X ) ) /. 2 ) = ( SDSub2INTDigit (( SD2SDSub X ),2,k) ) by A58,CKB39:def 1
.= ( ( Radix k ) * ( DigB_SDSub (( SD2SDSub X ),2) ) ) by A52,NEWTON:5
.= ( ( Radix k ) * ( SD2SDSubDigitS (X,2,k) ) ) by A58,CKB34:def 1
.= ( ( Radix k ) * ( SD2SDSubDigit (X,2,k) ) ) by A53,A58,CKB33:def 1
.= ( ( Radix k ) * ( SDSub_Add_Carry (( DigA (X,1) ),k) ) ) by A52,A58,CKB31:def 1;
then A60: ( ( SDSub2INT ( SD2SDSub X ) ) . 2 ) = CRY by A59,PARTFUN1:def 6;
( ( SDSub2INT ( SD2SDSub X ) ) /. 1 ) = ( SDSub2INTDigit (( SD2SDSub X ),1,k) ) by A55,CKB39:def 1
.= ( ( ( Radix k ) |^ ( 0 ) ) * ( DigB_SDSub (( SD2SDSub X ),1) ) ) by XREAL_1:232
.= ( 1 * ( DigB_SDSub (( SD2SDSub X ),1) ) ) by NEWTON:4
.= ( SD2SDSubDigitS (X,1,k) ) by A55,CKB34:def 1
.= ( SD2SDSubDigit (X,1,k) ) by A53,A55,CKB33:def 1
.= ( ( SDSub_Add_Data (( DigA (X,1) ),k) ) + ( SDSub_Add_Carry (( DigA (X,( 1 -' 1 )) ),k) ) ) by A51,CKB31:def 1
.= ( ( SDSub_Add_Data (( DigA (X,1) ),k) ) + ( SDSub_Add_Carry (( DigA (X,( 0 )) ),k) ) ) by XREAL_1:232
.= ( ( SDSub_Add_Data (( DigA (X,1) ),k) ) + ( SDSub_Add_Carry (( 0 ),k) ) ) by RADIX_1:def 3
.= ( ( SDSub_Add_Data (( DigA (X,1) ),k) ) + ( 0 ) ) by CKB29:1
.= ( ( DigA (X,1) ) - ( ( Radix k ) * ( SDSub_Add_Carry (( DigA (X,1) ),k) ) ) );
then ( ( SDSub2INT ( SD2SDSub X ) ) . 1 ) = ( ( DigA (X,1) ) - CRY ) by A57,PARTFUN1:def 6;
then ( SDSub2INT ( SD2SDSub X ) ) = <* DIG1,DIG2 *> by A56,A60,FINSEQ_1:44;
then ( Sum ( SDSub2INT ( SD2SDSub X ) ) ) = ( DIG1 + DIG2 ) by RVSUM_1:77
.= x by A54,RADIX_1:21;
hence thesis;
end;
(for n being Nat holds (n >= 1 implies P[ n ])) from NAT_1:sch 8(A50,A2);
hence thesis by A1;
end;
