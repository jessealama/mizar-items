environ
vocabularies NUMBERS,NAT_1,INT_1,XXREAL_0,RADIX_1,ARYTM_1,ARYTM_3,POWER,RELAT_1,CARD_1,FINSEQ_1,NEWTON,SUBSET_1,TARSKI,XBOOLE_0,FINSEQ_2,FUNCT_1,PARTFUN1,CARD_3,ORDINAL4,RADIX_3;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,INT_1,NAT_1,NAT_D,FUNCT_1,PARTFUN1,NEWTON,POWER,FINSEQ_1,FINSEQ_2,GR_CY_1,RADIX_1;
definitions TARSKI,RADIX_1;
theorems RADIX_1,POWER,NAT_1,INT_1,FUNCT_1,FINSEQ_1,FINSEQ_2,PRE_FF,NEWTON,RVSUM_1,PREPOWER,JORDAN12,FINSEQ_3,RADIX_2,XREAL_1,XXREAL_0,NAT_D,ORDINAL1,PARTFUN1,XREAL_0,CARD_1,CKB1,CKB2,CKB3;
schemes NAT_1,FINSEQ_2;
registrations RELSET_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,FINSEQ_2,CARD_1,FINSEQ_1;
constructors REAL_1,NAT_D,NEWTON,POWER,BINARITH,GR_CY_1,RADIX_1,RELSET_1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for Nat;
theorem
Lm4: (for k being Nat holds (1 <= k implies 2 <= ( Radix k )))
proof
defpred P[ Nat ]
 means
2 <= ( Radix $1 );
let k;
assume A1: 1 <= k;
A2: (for kk being Nat holds ((kk >= 1 & P[ kk ]) implies P[ ( kk + 1 ) ]))
proof
let kk being Nat;
assume that
1 <= kk
and
A3: 2 <= ( Radix kk );
A4: ( Radix ( kk + 1 ) ) = ( ( 2 to_power 1 ) * ( 2 to_power kk ) ) by POWER:27
.= ( 2 * ( Radix kk ) ) by POWER:25;
( Radix kk ) > 1 by A3,XXREAL_0:2;
hence thesis by A4,XREAL_1:155;
end;
A5: P[ 1 ] by POWER:25;
(for k being Nat holds (1 <= k implies P[ k ])) from NAT_1:sch 8(A5,A2);
hence thesis by A1;
end;
