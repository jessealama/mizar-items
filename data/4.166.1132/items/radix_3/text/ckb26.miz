environ
vocabularies NUMBERS,NAT_1,INT_1,XXREAL_0,RADIX_1,ARYTM_1,ARYTM_3,POWER,RELAT_1,CARD_1,FINSEQ_1,NEWTON,SUBSET_1,TARSKI,XBOOLE_0,FINSEQ_2,FUNCT_1,PARTFUN1,CARD_3,ORDINAL4,RADIX_3;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,INT_1,NAT_1,NAT_D,FUNCT_1,PARTFUN1,NEWTON,POWER,FINSEQ_1,FINSEQ_2,GR_CY_1,RADIX_1,CKB6,CKB7,CKB20,CKB21,CKB23,CKB24;
definitions TARSKI,RADIX_1,CKB6,CKB7,CKB23,CKB24;
theorems RADIX_1,POWER,NAT_1,INT_1,FUNCT_1,FINSEQ_1,FINSEQ_2,PRE_FF,NEWTON,RVSUM_1,PREPOWER,JORDAN12,FINSEQ_3,RADIX_2,XREAL_1,XXREAL_0,NAT_D,ORDINAL1,PARTFUN1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB22,CKB23,CKB24,CKB25;
schemes NAT_1,FINSEQ_2;
registrations RELSET_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,FINSEQ_2,CARD_1,FINSEQ_1,CKB18,CKB19;
constructors REAL_1,NAT_D,NEWTON,POWER,BINARITH,GR_CY_1,RADIX_1,RELSET_1,CKB6,CKB7,CKB20,CKB21,CKB23,CKB24;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for Nat;
reserve i1 for Integer;
theorem
Th14: ((2 <= k & i1 in ( k -SD )) implies (( SDSub_Add_Data (i1,k) ) >= ( - ( Radix ( k -' 1 ) ) ) & ( SDSub_Add_Data (i1,k) ) <= ( ( Radix ( k -' 1 ) ) - 1 )))
proof
assume that
A1: 2 <= k
and
A2: i1 in ( k -SD );
A3: (( ( - ( Radix k ) ) + 1 ) <= i1 & 1 <= k) by A1,A2,RADIX_1:13,XXREAL_0:2;
now
per cases ;
case A4: i1 < ( - ( Radix ( k -' 1 ) ) );
then ( i1 + 1 ) <= ( - ( Radix ( k -' 1 ) ) ) by INT_1:7;
then i1 <= ( ( - ( Radix ( k -' 1 ) ) ) - 1 ) by XREAL_1:19;
then ( i1 + ( Radix k ) ) <= ( ( Radix k ) + ( ( - ( Radix ( k -' 1 ) ) ) - 1 ) ) by XREAL_1:7;
then A5: ( i1 + ( Radix k ) ) <= ( ( ( Radix k ) - ( Radix ( k -' 1 ) ) ) - 1 );
( SDSub_Add_Carry (i1,k) ) = ( - 1 ) by A4,CKB23:def 1;
hence thesis by A3,A5,CKB2:1,XREAL_1:19;
end;
case A6: (( - ( Radix ( k -' 1 ) ) ) <= i1 & i1 < ( Radix ( k -' 1 ) ));
then (( SDSub_Add_Carry (i1,k) ) = ( 0 ) & ( i1 + 1 ) <= ( Radix ( k -' 1 ) )) by CKB23:def 1,INT_1:7;
hence thesis by A6,XREAL_1:19;
end;
case A7: ( Radix ( k -' 1 ) ) <= i1;
i1 <= ( ( Radix k ) + ( - 1 ) ) by A2,RADIX_1:13;
then A8: (( ( 0 ) - 1 ) <= ( ( Radix ( k -' 1 ) ) - 1 ) & ( i1 - ( Radix k ) ) <= ( - 1 )) by XREAL_1:9,XREAL_1:20;
(( SDSub_Add_Carry (i1,k) ) = 1 & ( ( Radix ( k -' 1 ) ) + ( - ( Radix k ) ) ) <= ( i1 + ( - ( Radix k ) ) )) by A7,CKB23:def 1,XREAL_1:6;
hence thesis by A1,A8,CKB3:1,XXREAL_0:2;
end;
end;
hence thesis;
end;
