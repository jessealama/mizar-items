environ
vocabularies NUMBERS,SUBSET_1,CQC_LANG,QC_LANG1,XBOOLE_0,VALUAT_1,SUBSTUT1,FINSEQ_1,RELAT_1,ARYTM_3,XXREAL_0,CARD_1,NAT_1,TARSKI,FUNCT_1,ORDINAL4,FINSEQ_2,ZFMISC_1,CQC_THE1,MCART_1,XBOOLEAN,BVFUNC_2,ZF_MODEL,SUBSTUT2,SUBLEMMA,FUNCOP_1,FUNCT_4,FINSET_1,ORDINAL1,CALCUL_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSEQ_1,RELAT_1,FUNCT_1,QC_LANG1,CARD_1,NUMBERS,ORDINAL1,FINSEQ_2,XXREAL_0,NAT_1,FUNCOP_1,CQC_LANG,FINSET_1,VALUAT_1,CQC_THE1,RELSET_1,PARTFUN1,FUNCT_2,DOMAIN_1,MCART_1,SUBSTUT1,SUBSTUT2,SUBLEMMA,CKB1,CKB2,CKB3,CKB4,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
definitions TARSKI,XBOOLE_0,FINSEQ_2,FUNCOP_1,CKB1,CKB2,CKB3,CKB4,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
theorems TARSKI,FUNCT_1,MCART_1,XBOOLE_0,XBOOLE_1,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,QC_LANG2,SUBSTUT1,FUNCT_4,SUBLEMMA,NAT_1,FINSEQ_1,FINSEQ_3,VALUAT_1,FINSEQ_2,SUBSTUT2,FUNCOP_1,CQC_THE1,FINSET_1,CARD_2,CQC_SIM1,CARD_1,CARD_4,GRFUNC_1,XREAL_1,ORDINAL1,XXREAL_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71;
schemes XBOOLE_0,NAT_1,CLASSES1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,QC_LANG1,CQC_LANG,CARD_1,FINSEQ_2,RELAT_1;
constructors PARTFUN1,WELLORD2,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,CQC_THE1,SUBSTUT2,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve p for (Element of ( CQC-WFF ));
reserve q for (Element of ( CQC-WFF ));
reserve f for (FinSequence of ( CQC-WFF ));
Lm2:now
let f being FinSequence;
let p being set;
assume (ex i being (Element of ( NAT )) st (i in ( dom f ) & ( f . i ) = p));
then p in ( rng f ) by FUNCT_1:def 3;
hence p is_tail_of f by CKB3:def 1;
end;
theorem
(( |- ( f ^ <* ( p => q ) *> ) &  |- ( f ^ <* p *> )) implies  |- ( f ^ <* q *> ))
proof
assume that
A1:  |- ( f ^ <* ( p => q ) *> )
and
A2:  |- ( f ^ <* p *> );
set f3 = ( ( f ^ <* q *> ) ^ <* q *> );
set f2 = ( ( f ^ <* ( 'not' p ) *> ) ^ <* ( 'not' p ) *> );
set f1 = ( ( f ^ <* ( 'not' p ) *> ) ^ <* p *> );
A3: ( Ant f1 ) = ( f ^ <* ( 'not' p ) *> ) by CKB9:1;
( Suc ( f ^ <* p *> ) ) = p by CKB9:1;
then A4: ( Suc ( f ^ <* p *> ) ) = ( Suc f1 ) by CKB9:1;
A5: ( ( 0 ) + 1 ) <= ( len f2 ) by CKB14:1;
A6: ( Ant f3 ) = ( f ^ <* q *> ) by CKB9:1;
then A7: ( ( Ant f3 ) . ( ( len f ) + 1 ) ) = q by FINSEQ_1:42;
( ( len f ) + 1 ) = ( ( len f ) + ( len <* q *> ) ) by FINSEQ_1:39;
then ( ( len f ) + 1 ) = ( len ( Ant f3 ) ) by A6,FINSEQ_1:22;
then A8: ( ( len f ) + 1 ) in ( dom ( Ant f3 ) ) by A6,CKB14:1;
( Suc f3 ) = q by CKB9:1;
then ( Suc f3 ) is_tail_of ( Ant f3 ) by A7,A8,Lm2;
then A9:  |- f3 by CKB49:1;
A10: ( Ant f2 ) = ( f ^ <* ( 'not' p ) *> ) by CKB9:1;
( ( len f ) + 1 ) = ( ( len f ) + ( len <* ( 'not' p ) *> ) ) by FINSEQ_1:39;
then ( ( len f ) + 1 ) = ( len ( Ant f2 ) ) by A10,FINSEQ_1:22;
then A11: ( ( len f ) + 1 ) in ( dom ( Ant f2 ) ) by A10,CKB14:1;
A12: ( Suc f2 ) = ( 'not' p ) by CKB9:1;
then A13: ( 'not' ( Suc f1 ) ) = ( Suc f2 ) by CKB9:1;
( ( Ant f2 ) . ( ( len f ) + 1 ) ) = ( 'not' p ) by A10,FINSEQ_1:42;
then ( Suc f2 ) is_tail_of ( Ant f2 ) by A12,A11,Lm2;
then A14:  |- f2 by CKB49:1;
( Ant f1 ) = ( Ant f2 ) by A10,CKB9:1;
then A15:  |- ( ( Ant f1 ) ^ <* ( 'not' ( Suc f1 ) ) *> ) by A14,A5,A13,CKB7:1;
( Ant ( f ^ <* p *> ) ) = f by CKB9:1;
then  |- f1 by A2,A3,A4,CKB12:1,CKB52:1;
then  |- ( ( Ant f1 ) ^ <* q *> ) by A15,CKB60:1;
then  |- ( ( f ^ <* ( ( 'not' p ) 'or' q ) *> ) ^ <* q *> ) by A3,A9,CKB69:1;
then A16:  |- ( ( f ^ <* ( 'not' ( ( 'not' ( 'not' p ) ) '&' ( 'not' q ) ) ) *> ) ^ <* q *> ) by QC_LANG2:def 3;
set f4 = ( ( f ^ <* ( 'not' q ) *> ) ^ <* ( ( 'not' ( 'not' p ) ) '&' ( 'not' q ) ) *> );
set f5 = ( ( Ant f4 ) ^ <* p *> );
set f6 = ( ( Ant f4 ) ^ <* ( 'not' q ) *> );
A17: (( Ant f5 ) = ( Ant f4 ) & ( Suc f5 ) = p) by CKB9:1;
A18: (( Ant f6 ) = ( Ant f4 ) & ( Suc f6 ) = ( 'not' q )) by CKB9:1;
A19: ( Suc f4 ) = ( ( 'not' ( 'not' p ) ) '&' ( 'not' q ) ) by CKB9:1;
then  |- ( ( Ant f4 ) ^ <* ( 'not' ( 'not' p ) ) *> ) by A16,CKB56:1,CKB64:1;
then A20:  |- ( ( Ant f4 ) ^ <* p *> ) by CKB71:1;
 |- ( ( Ant f4 ) ^ <* ( 'not' q ) *> ) by A16,A19,CKB57:1,CKB64:1;
then  |- ( ( Ant f4 ) ^ <* ( p '&' ( 'not' q ) ) *> ) by A20,A17,A18,CKB55:1;
then  |- ( ( f ^ <* ( 'not' q ) *> ) ^ <* ( p '&' ( 'not' q ) ) *> ) by CKB9:1;
then  |- ( ( f ^ <* ( 'not' ( p '&' ( 'not' q ) ) ) *> ) ^ <* q *> ) by CKB64:1;
then A21:  |- ( ( f ^ <* ( p => q ) *> ) ^ <* q *> ) by QC_LANG2:def 2;
1 <= ( len ( f ^ <* ( p => q ) *> ) ) by CKB14:1;
then  |- ( ( Ant ( f ^ <* ( p => q ) *> ) ) ^ <* q *> ) by A1,A21,CKB61:1;
hence thesis by CKB9:1;
end;
