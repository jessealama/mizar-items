environ
vocabularies NUMBERS,SUBSET_1,CQC_LANG,QC_LANG1,XBOOLE_0,VALUAT_1,SUBSTUT1,FINSEQ_1,RELAT_1,ARYTM_3,XXREAL_0,CARD_1,NAT_1,TARSKI,FUNCT_1,ORDINAL4,FINSEQ_2,ZFMISC_1,CQC_THE1,MCART_1,XBOOLEAN,BVFUNC_2,ZF_MODEL,SUBSTUT2,SUBLEMMA,FUNCOP_1,FUNCT_4,FINSET_1,ORDINAL1,CALCUL_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSEQ_1,RELAT_1,FUNCT_1,QC_LANG1,CARD_1,NUMBERS,ORDINAL1,FINSEQ_2,XXREAL_0,NAT_1,FUNCOP_1,CQC_LANG,FINSET_1,VALUAT_1,CQC_THE1,RELSET_1,PARTFUN1,FUNCT_2,DOMAIN_1,MCART_1,SUBSTUT1,SUBSTUT2,SUBLEMMA,CKB1,CKB2,CKB3,CKB4,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
definitions TARSKI,XBOOLE_0,FINSEQ_2,FUNCOP_1,CKB1,CKB2,CKB3,CKB4,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
theorems TARSKI,FUNCT_1,MCART_1,XBOOLE_0,XBOOLE_1,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,QC_LANG2,SUBSTUT1,FUNCT_4,SUBLEMMA,NAT_1,FINSEQ_1,FINSEQ_3,VALUAT_1,FINSEQ_2,SUBSTUT2,FUNCOP_1,CQC_THE1,FINSET_1,CARD_2,CQC_SIM1,CARD_1,CARD_4,GRFUNC_1,XREAL_1,ORDINAL1,XXREAL_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48;
schemes XBOOLE_0,NAT_1,CLASSES1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,QC_LANG1,CQC_LANG,CARD_1,FINSEQ_2,RELAT_1;
constructors PARTFUN1,WELLORD2,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,CQC_THE1,SUBSTUT2,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve A for non  empty set;
reserve f for (FinSequence of ( CQC-WFF ));
reserve a for (Element of A);
theorem
Th33: (( Suc f ) is_tail_of ( Ant f ) implies  |- f)
proof
set PR = <* [ f,( 0 ) ] *>;
A1: ( rng PR ) = { [ f,( 0 ) ] } by FINSEQ_1:38;
now
let a being set;
assume a in ( rng PR );
then A2: a = [ f,( 0 ) ] by A1,TARSKI:def 1;
f in ( set_of_CQC-WFF-seq ) by CKB20:def 1;
hence a in [: ( set_of_CQC-WFF-seq ),( Proof_Step_Kinds ) :] by A2,CQC_THE1:21,ZFMISC_1:87;
end;
then ( rng PR ) c= [: ( set_of_CQC-WFF-seq ),( Proof_Step_Kinds ) :] by TARSKI:def 3;
then reconsider PR as (FinSequence of [: ( set_of_CQC-WFF-seq ),( Proof_Step_Kinds ) :]) by FINSEQ_1:def 4;
assume A3: ( Suc f ) is_tail_of ( Ant f );
now
let n being Nat;
assume that
A4: 1 <= n
and
A5: n <= ( len PR );
n <= 1 by A5,FINSEQ_1:39;
then n = 1 by A4,XXREAL_0:1;
then ( PR . n ) = [ f,( 0 ) ] by FINSEQ_1:40;
then (( ( PR . n ) `1 ) = f & ( ( PR . n ) `2 ) = ( 0 )) by MCART_1:7;
hence PR,n is_a_correct_step  by A3,CKB21:def 1;
end;
then A6: PR is  a_proof by CKB22:def 1;
( PR . 1 ) = [ f,( 0 ) ] by FINSEQ_1:40;
then ( PR . ( len PR ) ) = [ f,( 0 ) ] by FINSEQ_1:40;
then ( ( PR . ( len PR ) ) `1 ) = f by MCART_1:7;
hence thesis by A6,CKB23:def 1;
end;
