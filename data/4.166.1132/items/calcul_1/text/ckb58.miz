environ
vocabularies NUMBERS,SUBSET_1,CQC_LANG,QC_LANG1,XBOOLE_0,VALUAT_1,SUBSTUT1,FINSEQ_1,RELAT_1,ARYTM_3,XXREAL_0,CARD_1,NAT_1,TARSKI,FUNCT_1,ORDINAL4,FINSEQ_2,ZFMISC_1,CQC_THE1,MCART_1,XBOOLEAN,BVFUNC_2,ZF_MODEL,SUBSTUT2,SUBLEMMA,FUNCOP_1,FUNCT_4,FINSET_1,ORDINAL1,CALCUL_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSEQ_1,RELAT_1,FUNCT_1,QC_LANG1,CARD_1,NUMBERS,ORDINAL1,FINSEQ_2,XXREAL_0,NAT_1,FUNCOP_1,CQC_LANG,FINSET_1,VALUAT_1,CQC_THE1,RELSET_1,PARTFUN1,FUNCT_2,DOMAIN_1,MCART_1,SUBSTUT1,SUBSTUT2,SUBLEMMA,CKB1,CKB2,CKB3,CKB4,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
definitions TARSKI,XBOOLE_0,FINSEQ_2,FUNCOP_1,CKB1,CKB2,CKB3,CKB4,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
theorems TARSKI,FUNCT_1,MCART_1,XBOOLE_0,XBOOLE_1,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,QC_LANG2,SUBSTUT1,FUNCT_4,SUBLEMMA,NAT_1,FINSEQ_1,FINSEQ_3,VALUAT_1,FINSEQ_2,SUBSTUT2,FUNCOP_1,CQC_THE1,FINSET_1,CARD_2,CQC_SIM1,CARD_1,CARD_4,GRFUNC_1,XREAL_1,ORDINAL1,XXREAL_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57;
schemes XBOOLE_0,NAT_1,CLASSES1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,QC_LANG1,CQC_LANG,CARD_1,FINSEQ_2,RELAT_1;
constructors PARTFUN1,WELLORD2,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,CQC_THE1,SUBSTUT2,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve p for (Element of ( CQC-WFF ));
reserve x for bound_QC-variable;
reserve y for bound_QC-variable;
reserve A for non  empty set;
reserve f for (FinSequence of ( CQC-WFF ));
reserve PR for (FinSequence of [: ( set_of_CQC-WFF-seq ),( Proof_Step_Kinds ) :]);
reserve a for (Element of A);
theorem
Th42: ((( Suc f ) = ( All (x,p) ) &  |- f) implies  |- ( ( Ant f ) ^ <* ( p . (x,y) ) *> ))
proof
assume that
A1: ( Suc f ) = ( All (x,p) )
and
A2:  |- f;
consider PR such that A3: PR is  a_proof and A4: ( ( PR . ( len PR ) ) `1 ) = f by A2,CKB23:def 1;
A5: ( ( Ant f ) ^ <* ( p . (x,y) ) *> ) in ( set_of_CQC-WFF-seq ) by CKB20:def 1;
now
let a being set;
assume a in ( rng <* [ ( ( Ant f ) ^ <* ( p . (x,y) ) *> ),8 ] *> );
then a in { [ ( ( Ant f ) ^ <* ( p . (x,y) ) *> ),8 ] } by FINSEQ_1:38;
then a = [ ( ( Ant f ) ^ <* ( p . (x,y) ) *> ),8 ] by TARSKI:def 1;
hence a in [: ( set_of_CQC-WFF-seq ),( Proof_Step_Kinds ) :] by A5,CQC_THE1:21,ZFMISC_1:87;
end;
then ( rng <* [ ( ( Ant f ) ^ <* ( p . (x,y) ) *> ),8 ] *> ) c= [: ( set_of_CQC-WFF-seq ),( Proof_Step_Kinds ) :] by TARSKI:def 3;
then reconsider PR1 = <* [ ( ( Ant f ) ^ <* ( p . (x,y) ) *> ),8 ] *> as (FinSequence of [: ( set_of_CQC-WFF-seq ),( Proof_Step_Kinds ) :]) by FINSEQ_1:def 4;
1 in ( Seg 1 ) by FINSEQ_1:2,TARSKI:def 1;
then A6: 1 in ( dom PR1 ) by FINSEQ_1:38;
set PR2 = ( PR ^ PR1 );
reconsider PR2 as (FinSequence of [: ( set_of_CQC-WFF-seq ),( Proof_Step_Kinds ) :]);
A7: PR <> ( {} ) by A3,CKB22:def 1;
now
let n being Nat;
assume (1 <= n & n <= ( len PR2 ));
then A8: n in ( dom PR2 ) by FINSEQ_3:25;
A9:now
A10: 1 <= ( len PR ) by A7,CKB10:1;
then ( len PR ) in ( dom PR ) by FINSEQ_3:25;
then A11: f = ( ( PR2 . ( len PR ) ) `1 ) by A4,FINSEQ_1:def 7;
given k being Nat such that
A12: k in ( dom PR1 )
and
A13: n = ( ( len PR ) + k );

k in ( Seg 1 ) by A12,FINSEQ_1:38;
then A14: k = 1 by FINSEQ_1:2,TARSKI:def 1;
then A15: ( PR1 . k ) = [ ( ( Ant f ) ^ <* ( p . (x,y) ) *> ),8 ] by FINSEQ_1:40;
then ( ( PR1 . k ) `1 ) = ( ( Ant f ) ^ <* ( p . (x,y) ) *> ) by MCART_1:7;
then A16: ( ( PR2 . n ) `1 ) = ( ( Ant f ) ^ <* ( p . (x,y) ) *> ) by A12,A13,FINSEQ_1:def 7;
( ( PR1 . k ) `2 ) = 8 by A15,MCART_1:7;
then A17: ( ( PR2 . n ) `2 ) = 8 by A12,A13,FINSEQ_1:def 7;
( len PR ) < n by A13,A14,NAT_1:13;
hence PR2,n is_a_correct_step  by A1,A16,A17,A10,A11,CKB21:def 1;
end;
now
assume n in ( dom PR );
then A18: (1 <= n & n <= ( len PR )) by FINSEQ_3:25;
then PR,n is_a_correct_step  by A3,CKB22:def 1;
hence PR2,n is_a_correct_step  by A18,CKB50:1;
end;
hence PR2,n is_a_correct_step  by A8,A9,FINSEQ_1:25;
end;
then A19: PR2 is  a_proof by CKB22:def 1;
( PR2 . ( len PR2 ) ) = ( PR2 . ( ( len PR ) + ( len PR1 ) ) ) by FINSEQ_1:22;
then ( PR2 . ( len PR2 ) ) = ( PR2 . ( ( len PR ) + 1 ) ) by FINSEQ_1:39;
then ( PR2 . ( len PR2 ) ) = ( PR1 . 1 ) by A6,FINSEQ_1:def 7;
then ( PR2 . ( len PR2 ) ) = [ ( ( Ant f ) ^ <* ( p . (x,y) ) *> ),8 ] by FINSEQ_1:40;
then ( ( PR2 . ( len PR2 ) ) `1 ) = ( ( Ant f ) ^ <* ( p . (x,y) ) *> ) by MCART_1:7;
hence thesis by A19,CKB23:def 1;
end;
