environ
vocabularies NUMBERS,SUBSET_1,CQC_LANG,QC_LANG1,XBOOLE_0,VALUAT_1,SUBSTUT1,FINSEQ_1,RELAT_1,ARYTM_3,XXREAL_0,CARD_1,NAT_1,TARSKI,FUNCT_1,ORDINAL4,FINSEQ_2,ZFMISC_1,CQC_THE1,MCART_1,XBOOLEAN,BVFUNC_2,ZF_MODEL,SUBSTUT2,SUBLEMMA,FUNCOP_1,FUNCT_4,FINSET_1,ORDINAL1,CALCUL_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSEQ_1,RELAT_1,FUNCT_1,QC_LANG1,CARD_1,NUMBERS,ORDINAL1,FINSEQ_2,XXREAL_0,NAT_1,FUNCOP_1,CQC_LANG,FINSET_1,VALUAT_1,CQC_THE1,RELSET_1,PARTFUN1,FUNCT_2,DOMAIN_1,MCART_1,SUBSTUT1,SUBSTUT2,SUBLEMMA,CKB1,CKB2,CKB3,CKB4,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
definitions TARSKI,XBOOLE_0,FINSEQ_2,FUNCOP_1,CKB1,CKB2,CKB3,CKB4,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
theorems TARSKI,FUNCT_1,MCART_1,XBOOLE_0,XBOOLE_1,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,QC_LANG2,SUBSTUT1,FUNCT_4,SUBLEMMA,NAT_1,FINSEQ_1,FINSEQ_3,VALUAT_1,FINSEQ_2,SUBSTUT2,FUNCOP_1,CQC_THE1,FINSET_1,CARD_2,CQC_SIM1,CARD_1,CARD_4,GRFUNC_1,XREAL_1,ORDINAL1,XXREAL_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54;
schemes XBOOLE_0,NAT_1,CLASSES1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,QC_LANG1,CQC_LANG,CARD_1,FINSEQ_2,RELAT_1;
constructors PARTFUN1,WELLORD2,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,CQC_THE1,SUBSTUT2,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve A for non  empty set;
reserve f for (FinSequence of ( CQC-WFF ));
reserve g for (FinSequence of ( CQC-WFF ));
reserve PR for (FinSequence of [: ( set_of_CQC-WFF-seq ),( Proof_Step_Kinds ) :]);
reserve PR1 for (FinSequence of [: ( set_of_CQC-WFF-seq ),( Proof_Step_Kinds ) :]);
reserve a for (Element of A);
theorem
Th39: (((( Ant f ) = ( Ant g ) &  |- f) &  |- g) implies  |- ( ( Ant f ) ^ <* ( ( Suc f ) '&' ( Suc g ) ) *> ))
proof
assume that
A1: ( Ant f ) = ( Ant g )
and
A2:  |- f
and
A3:  |- g;
consider PR1 such that A4: PR1 is  a_proof and A5: g = ( ( PR1 . ( len PR1 ) ) `1 ) by A3,CKB23:def 1;
consider PR such that A6: PR is  a_proof and A7: f = ( ( PR . ( len PR ) ) `1 ) by A2,CKB23:def 1;
A8: ( ( Ant f ) ^ <* ( ( Suc f ) '&' ( Suc g ) ) *> ) in ( set_of_CQC-WFF-seq ) by CKB20:def 1;
now
let a being set;
assume a in ( rng <* [ ( ( Ant f ) ^ <* ( ( Suc f ) '&' ( Suc g ) ) *> ),5 ] *> );
then a in { [ ( ( Ant f ) ^ <* ( ( Suc f ) '&' ( Suc g ) ) *> ),5 ] } by FINSEQ_1:38;
then a = [ ( ( Ant f ) ^ <* ( ( Suc f ) '&' ( Suc g ) ) *> ),5 ] by TARSKI:def 1;
hence a in [: ( set_of_CQC-WFF-seq ),( Proof_Step_Kinds ) :] by A8,CQC_THE1:21,ZFMISC_1:87;
end;
then ( rng <* [ ( ( Ant f ) ^ <* ( ( Suc f ) '&' ( Suc g ) ) *> ),5 ] *> ) c= [: ( set_of_CQC-WFF-seq ),( Proof_Step_Kinds ) :] by TARSKI:def 3;
then reconsider PR2 = <* [ ( ( Ant f ) ^ <* ( ( Suc f ) '&' ( Suc g ) ) *> ),5 ] *> as (FinSequence of [: ( set_of_CQC-WFF-seq ),( Proof_Step_Kinds ) :]) by FINSEQ_1:def 4;
1 in ( Seg 1 ) by FINSEQ_1:2,TARSKI:def 1;
then A9: 1 in ( dom PR2 ) by FINSEQ_1:38;
set PR3 = ( ( PR ^ PR1 ) ^ PR2 );
reconsider PR3 as (FinSequence of [: ( set_of_CQC-WFF-seq ),( Proof_Step_Kinds ) :]);
A10: PR <> ( {} ) by A6,CKB22:def 1;
now
let n being Nat;
assume (1 <= n & n <= ( len PR3 ));
then A11: n in ( dom PR3 ) by FINSEQ_3:25;
A12:now
given k being Nat such that
A13: k in ( dom PR2 )
and
A14: n = ( ( len ( PR ^ PR1 ) ) + k );

k in ( Seg 1 ) by A13,FINSEQ_1:38;
then A15: k = 1 by FINSEQ_1:2,TARSKI:def 1;
then A16: ( PR2 . k ) = [ ( ( Ant f ) ^ <* ( ( Suc f ) '&' ( Suc g ) ) *> ),5 ] by FINSEQ_1:40;
then ( ( PR2 . k ) `1 ) = ( ( Ant f ) ^ <* ( ( Suc f ) '&' ( Suc g ) ) *> ) by MCART_1:7;
then A17: ( ( PR3 . n ) `1 ) = ( ( Ant f ) ^ <* ( ( Suc f ) '&' ( Suc g ) ) *> ) by A13,A14,FINSEQ_1:def 7;
( ( PR2 . k ) `2 ) = 5 by A16,MCART_1:7;
then A18: ( ( PR3 . n ) `2 ) = 5 by A13,A14,FINSEQ_1:def 7;
A19: ( len ( PR ^ PR1 ) ) < n by A14,A15,NAT_1:13;
A20: 1 <= ( len PR ) by A10,CKB10:1;
then ( len PR ) in ( dom PR ) by FINSEQ_3:25;
then A21: f = ( ( ( PR ^ PR1 ) . ( len PR ) ) `1 ) by A7,FINSEQ_1:def 7;
A22: PR1 <> ( {} ) by A4,CKB22:def 1;
then A23: ( len PR ) < ( len ( PR ^ PR1 ) ) by CKB10:1;
then ( len PR ) in ( dom ( PR ^ PR1 ) ) by A20,FINSEQ_3:25;
then A24: f = ( ( PR3 . ( len PR ) ) `1 ) by A21,FINSEQ_1:def 7;
1 <= ( len PR1 ) by A22,CKB10:1;
then ( len PR1 ) in ( dom PR1 ) by FINSEQ_3:25;
then g = ( ( ( PR ^ PR1 ) . ( ( len PR ) + ( len PR1 ) ) ) `1 ) by A5,FINSEQ_1:def 7;
then A25: g = ( ( ( PR ^ PR1 ) . ( len ( PR ^ PR1 ) ) ) `1 ) by FINSEQ_1:22;
1 <= ( len ( PR ^ PR1 ) ) by A10,CKB10:1;
then ( len ( PR ^ PR1 ) ) in ( dom ( PR ^ PR1 ) ) by FINSEQ_3:25;
then A26: g = ( ( PR3 . ( len ( PR ^ PR1 ) ) ) `1 ) by A25,FINSEQ_1:def 7;
1 <= ( len ( PR ^ PR1 ) ) by A10,CKB10:1;
hence PR3,n is_a_correct_step  by A1,A17,A18,A20,A23,A24,A19,A26,CKB21:def 1;
end;
now
A27:now
given k being Nat such that
A28: k in ( dom PR1 )
and
A29: n = ( ( len PR ) + k );

A30: 1 <= k by A28,FINSEQ_3:25;
A31: k <= ( len PR1 ) by A28,FINSEQ_3:25;
then n <= ( ( len PR1 ) + ( len PR ) ) by A29,XREAL_1:6;
then A32: n <= ( len ( PR ^ PR1 ) ) by FINSEQ_1:22;
k <= n by A29,NAT_1:11;
then A33: 1 <= n by A30,XXREAL_0:2;
PR1,k is_a_correct_step  by A4,A30,A31,CKB22:def 1;
then ( PR ^ PR1 ),n is_a_correct_step  by A28,A29,A30,A31,CKB51:1;
hence PR3,n is_a_correct_step  by A33,A32,CKB50:1;
end;
A34:now
assume A35: n in ( dom PR );
then A36: 1 <= n by FINSEQ_3:25;
A37: n <= ( len PR ) by A35,FINSEQ_3:25;
( len PR ) <= ( len ( PR ^ PR1 ) ) by CKB10:1;
then A38: n <= ( len ( PR ^ PR1 ) ) by A37,XXREAL_0:2;
PR,n is_a_correct_step  by A6,A36,A37,CKB22:def 1;
then ( PR ^ PR1 ),n is_a_correct_step  by A36,A37,CKB50:1;
hence PR3,n is_a_correct_step  by A36,A38,CKB50:1;
end;
assume n in ( dom ( PR ^ PR1 ) );
hence PR3,n is_a_correct_step  by A34,A27,FINSEQ_1:25;
end;
hence PR3,n is_a_correct_step  by A11,A12,FINSEQ_1:25;
end;
then A39: PR3 is  a_proof by CKB22:def 1;
( PR3 . ( len PR3 ) ) = ( PR3 . ( ( len ( PR ^ PR1 ) ) + ( len PR2 ) ) ) by FINSEQ_1:22;
then ( PR3 . ( len PR3 ) ) = ( PR3 . ( ( len ( PR ^ PR1 ) ) + 1 ) ) by FINSEQ_1:39;
then ( PR3 . ( len PR3 ) ) = ( PR2 . 1 ) by A9,FINSEQ_1:def 7;
then ( PR3 . ( len PR3 ) ) = [ ( ( Ant f ) ^ <* ( ( Suc f ) '&' ( Suc g ) ) *> ),5 ] by FINSEQ_1:40;
then ( ( PR3 . ( len PR3 ) ) `1 ) = ( ( Ant f ) ^ <* ( ( Suc f ) '&' ( Suc g ) ) *> ) by MCART_1:7;
hence thesis by A39,CKB23:def 1;
end;
