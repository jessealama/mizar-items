environ
vocabularies SETFAM_1,SUBSET_1,TARSKI,PRE_TOPC,RCOMP_1,RLVECT_3,FINSET_1,XBOOLE_0,FINSUB_1,SETWISEO,ZFMISC_1,STRUCT_0,FUNCT_1,RELAT_1,CARD_3,NUMBERS,FUNCOP_1,CARD_1,NAT_1,CANTOR_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,SETFAM_1,RELAT_1,FUNCT_1,FUNCT_2,FINSET_1,FINSUB_1,SETWISEO,PROB_1,STRUCT_0,PRE_TOPC,TOPS_2,CARD_3,FUNCOP_1,CKB1,CKB2,CKB5;
definitions PRE_TOPC,TARSKI,TOPS_2,XBOOLE_0,STRUCT_0,CKB1,CKB2;
theorems ZFMISC_1,PRE_TOPC,SUBSET_1,SETFAM_1,FINSET_1,FUNCT_2,FUNCT_1,TARSKI,FINSUB_1,RELAT_1,XBOOLE_0,XBOOLE_1,TOPS_2,EQREL_1,CKB1,CKB2,CKB6,CKB7,CKB8;
schemes SUBSET_1,FUNCT_2,SETWISEO;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FUNCOP_1,FINSET_1,CARD_3,PRE_TOPC,FUNCT_1,TOPS_2,CKB3,CKB4;
constructors SETFAM_1,FUNCOP_1,SETWISEO,CARD_3,TOPS_2,RELSET_1,PROB_1,CKB1,CKB2;
requirements BOOLE,SUBSET;
begin
definition
let X being set;
let A being (Subset-Family of X);
func FinMeetCl A -> (Subset-Family of X)
means
:Def4: (for x being (Subset of X) holds (x in it iff (ex Y being (Subset-Family of X) st ((Y c= A & Y is  finite) & x = ( Intersect Y )))));
existence
proof
defpred P[ set ]
 means
(ex Y being (Subset-Family of X) st ((Y c= A & Y is  finite) & $1 = ( Intersect Y )));
(ex Z being (Subset-Family of X) st (for x being (Subset of X) holds (x in Z iff P[ x ]))) from SUBSET_1:sch 3;
hence thesis;
end;
uniqueness
proof
let B1 being (Subset-Family of X),B2 being (Subset-Family of X);
assume that
A1: (for x being (Subset of X) holds (x in B1 iff (ex Y being (Subset-Family of X) st ((Y c= A & Y is  finite) & x = ( Intersect Y )))))
and
A2: (for x being (Subset of X) holds (x in B2 iff (ex Y being (Subset-Family of X) st ((Y c= A & Y is  finite) & x = ( Intersect Y )))));
now
let x being (Subset of X);
(x in B2 iff (ex Y being (Subset-Family of X) st ((Y c= A & Y is  finite) & x = ( Intersect Y )))) by A2;
hence (x in B2 iff x in B1) by A1;
end;
hence thesis by SUBSET_1:3;
end;
end;
