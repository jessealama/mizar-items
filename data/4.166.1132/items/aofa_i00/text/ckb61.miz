environ
vocabularies NUMBERS,FUNCT_1,FUNCOP_1,RELAT_1,AOFA_000,FUNCT_4,XBOOLE_0,SUBSET_1,TARSKI,ZFMISC_1,FUNCT_2,ZF_LANG,VALUED_0,XREAL_0,ORDINAL1,VALUED_1,REAL_3,INT_1,XXREAL_0,CARD_1,ARYTM_3,ARYTM_1,FINSET_1,ORDINAL2,MEMBER_1,CARD_3,NAT_1,POWER,ORDINAL4,EUCLMETR,FREEALG,TREES_4,LANG1,MCART_1,STRUCT_0,GRAPHSP,ABIAN,FUNCT_7,REALSET1,NEWTON,PRE_FF,INT_2,COMPLEX1,AOFA_I00;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,ORDINAL1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FINSET_1,LANG1,REAL_3,BINOP_1,CARD_1,CARD_2,CARD_3,VALUED_0,PRE_FF,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,POWER,INT_1,INT_2,NAT_1,NAT_D,NEWTON,ABIAN,FUNCOP_1,FUNCT_4,FUNCT_7,STRUCT_0,FREEALG,TREES_4,AOFA_000,VALUED_1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB29,CKB30,CKB37,CKB38,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB53,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60;
definitions VALUED_0,XCMPLX_0,CARD_2,TARSKI,XBOOLE_0,FUNCT_1,FUNCT_2,FREEALG,BINOP_1,AOFA_000,FUNCOP_1,VALUED_1,CKB2,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB19,CKB20,CKB22,CKB44,CKB45,CKB46,CKB47,CKB49,CKB50,CKB51,CKB53,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60;
theorems XBOOLE_1,ZFMISC_1,RELAT_1,FUNCT_2,FUNCOP_1,TARSKI,NEWTON,XREAL_1,INT_1,FUNCT_7,NAT_1,ORDINAL1,FUNCT_4,FREEALG,PRE_FF,INT_2,ABSVALUE,WSIERP_1,TREES_4,NUMBERS,FUNCT_1,CARD_2,CARD_1,WELLORD2,FUNCT_5,AOFA_000,MCART_1,XXREAL_0,POWER,FIB_NUM2,ORDINAL3,NAT_D,PREPOWER,VALUED_1,CARD_3,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB19,CKB20,CKB22,CKB24,CKB25,CKB26,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB39,CKB40,CKB44,CKB45,CKB46,CKB47,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60;
schemes FUNCT_1,FUNCT_2,XBOOLE_0,AOFA_000,TARSKI,CLASSES1;
registrations RELSET_1,FUNCT_1,FUNCOP_1,FUNCT_2,NUMBERS,NAT_1,STRUCT_0,FREEALG,INT_1,CARD_5,CARD_1,CARD_3,VALUED_0,VALUED_1,MEMBERED,XREAL_0,XCMPLX_0,XXREAL_0,XBOOLE_0,FINSET_1,POWER,AOFA_000,ABIAN,CKB21,CKB27,CKB28;
constructors REAL_1,BORSUK_1,PREPOWER,POWER,NAT_D,NEWTON,ABIAN,SQUARE_1,PRE_FF,WSIERP_1,WELLORD2,CARD_2,CAT_2,PRALG_3,AOFA_000,CKB2,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB37,CKB38,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB53,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60;
requirements BOOLE,SUBSET,NUMERALS,ARITHM,REAL;
begin
definition
let X being non  empty set;
let T being (Subset of ( Funcs (X,( INT )) ));
let c being (Enumeration of X);
assume that
A1: ( rng c ) c= ( NAT );
mode INT-Exec of c,T
 -> (ExecutionFunction of ( FreeUnivAlgNSG (( ECIW-signature ),( INT-ElemIns )) ),( Funcs (X,( INT )) ),T)
means :Def28: (for s being (Element of ( Funcs (X,( INT )) )) holds (for v being (Element of ( Funcs (( Funcs (X,( INT )) ),X) )) holds (for e being (Element of ( Funcs (( Funcs (X,( INT )) ),( INT )) )) holds ( it . (s,( root-tree [ ( ( c * v ) ** (c,( NAT )) ),( e ** (c,( NAT )) ) ] )) ) = ( s +* (( v . s ),( e . s )) ))));
existence
proof
( dom c ) = X by CKB31:1;
then reconsider c9 = c as (Function of X,( NAT )) by A1,FUNCT_2:2;
reconsider i0 = ( 0 ) as (Element of ( INT )) by INT_1:def 1;
set Q = ( Funcs (X,( INT )) );
set S = ( ECIW-signature );
set G = ( INT-ElemIns );
set A = ( FreeUnivAlgNSG (S,G) );
reconsider q0 = ( X --> i0 ) as (Element of Q) by FUNCT_2:8;
A2: ( Terminals ( DTConUA (S,G) ) ) = G by FREEALG:3;
defpred P[ set,set ]
 means
(ex s being (Element of Q) st (( $1 `1 ) = s & (($2 = s & (not (ex v being (Element of ( Funcs (Q,X) )) st (ex e being (Element of ( Funcs (Q,( INT )) )) st ( $1 `2 ) = ( root-tree [ ( ( c * v ) ** (c9,( NAT )) ),( e ** (c9,( NAT )) ) ] ))))) or (ex v being (Element of ( Funcs (Q,X) )) st (ex e being (Element of ( Funcs (Q,( INT )) )) st (( $1 `2 ) = ( root-tree [ ( ( c * v ) ** (c9,( NAT )) ),( e ** (c9,( NAT )) ) ] ) & $2 = ( s +* (( v . s ),( e . s )) )))))));
A3: ( ElementaryInstructions A ) = ( FreeGenSetNSG (S,G) ) by AOFA_000:70;
A4: (for x being set holds (x in [: Q,( ElementaryInstructions A ) :] implies (ex y being set st (y in Q & P[ x,y ]))))
proof
let x being set;
assume x in [: Q,( ElementaryInstructions A ) :];
then consider s,I being set such that A5: s in Q and A6: I in ( ElementaryInstructions A ) and A7: x = [ s,I ] by ZFMISC_1:def 2;
A8: ( x `1 ) = s by A7,MCART_1:7;
reconsider s as (Element of Q) by A5;
A9: ( x `2 ) = I by A7,MCART_1:7;
consider a being (Symbol of ( DTConUA (S,G) )) such that A10: I = ( root-tree a ) and a in ( Terminals ( DTConUA (S,G) ) ) by A3,A6;
per cases ;
suppose (ex v being (Element of ( Funcs (Q,X) )) st (ex e being (Element of ( Funcs (Q,( INT )) )) st a = [ ( ( c * v ) ** (c9,( NAT )) ),( e ** (c9,( NAT )) ) ]));

then consider v being (Element of ( Funcs (Q,X) )),e being (Element of ( Funcs (Q,( INT )) )) such that A11: a = [ ( ( c * v ) ** (c9,( NAT )) ),( e ** (c9,( NAT )) ) ];
take y = ( s +* (( v . s ),( e . s )) );
thus y in Q by FUNCT_2:8;
thus thesis by A8,A9,A10,A11;
end;
suppose A12: (not (ex v being (Element of ( Funcs (Q,X) )) st (ex e being (Element of ( Funcs (Q,( INT )) )) st a = [ ( ( c * v ) ** (c9,( NAT )) ),( e ** (c9,( NAT )) ) ])));

take y = s;
thus y in Q;
(not (ex v being (Element of ( Funcs (Q,X) )) st (ex e being (Element of ( Funcs (Q,( INT )) )) st ( x `2 ) = ( root-tree [ ( ( c * v ) ** (c9,( NAT )) ),( e ** (c9,( NAT )) ) ] )))) by A9,A10,A12,TREES_4:4;
hence thesis by A8;
end;
end;
consider g being Function such that A13: (( dom g ) = [: Q,( ElementaryInstructions A ) :] & ( rng g ) c= Q) and A14: (for x being set holds (x in [: Q,( ElementaryInstructions A ) :] implies P[ x,( g . x ) ])) from FUNCT_1:sch 5(A4);
reconsider g as (Function of [: Q,( ElementaryInstructions A ) :],Q) by A13,FUNCT_2:2;
consider f being (ExecutionFunction of A,Q,T) such that A15: ( f | [: Q,( ElementaryInstructions A ) :] ) = g and (for s being (Element of Q) holds (for C,I being (Element of A) holds ((not f iteration_terminates_for ( I \; C ),( f . (s,C) )) implies ( f . (s,( while (C,I) )) ) = q0))) by AOFA_000:91;
take f;
let s being (Element of ( Funcs (X,( INT )) ));
let v being (Element of ( Funcs (( Funcs (X,( INT )) ),X) ));
let e being (Element of ( Funcs (( Funcs (X,( INT )) ),( INT )) ));
reconsider vv = v as (Function of ( Funcs (X,( INT )) ),X);
reconsider cv = ( c9 * vv ) as (Element of ( Funcs (( Funcs (X,( INT )) ),( NAT )) )) by FUNCT_2:8;
set v0 = ( cv ** (c9,( NAT )) );
set e0 = ( e ** (c9,( NAT )) );
set I = ( root-tree [ v0,e0 ] );
A16: ( [ s,I ] `2 ) = I by MCART_1:7;
A17: ( [ s,I ] `1 ) = s by MCART_1:7;
[ v0,e0 ] in G by ZFMISC_1:87;
then I in ( ElementaryInstructions A ) by A3,A2;
then A18: [ s,I ] in [: Q,( ElementaryInstructions A ) :] by ZFMISC_1:87;
then P[ [ s,I ],( g . [ s,I ] ) ] by A14;
then consider v9 being (Element of ( Funcs (Q,X) )),e9 being (Element of ( Funcs (Q,( INT )) )) such that A19: ( [ s,I ] `2 ) = ( root-tree [ ( ( c * v9 ) ** (c9,( NAT )) ),( e9 ** (c9,( NAT )) ) ] ) and A20: ( g . [ s,I ] ) = ( s +* (( v9 . s ),( e9 . s )) ) by A16,A17;
A21: ( dom ( c9 * v9 ) ) = Q by FUNCT_2:def 1;
A22: ( dom e ) = Q by FUNCT_2:def 1;
A23: ( dom v ) = Q by FUNCT_2:def 1;
A24: ( dom cv ) = Q by FUNCT_2:def 1;
A25: ( dom c9 ) = X by FUNCT_2:def 1;
A26: ( rng v ) c= X;
A27: ( dom e9 ) = Q by FUNCT_2:def 1;
A28: ( dom v9 ) = Q by FUNCT_2:def 1;
A29: [ v0,e0 ] = [ ( ( c * v9 ) ** (c9,( NAT )) ),( e9 ** (c9,( NAT )) ) ] by A19,MCART_1:7,TREES_4:4;
then v0 = ( ( c * v9 ) ** (c9,( NAT )) ) by ZFMISC_1:27;
then A30: cv = ( c * v9 ) by A24,A21,CKB26:1;
e0 = ( e9 ** (c9,( NAT )) ) by A29,ZFMISC_1:27;
then A31: e = e9 by A22,A27,CKB26:1;
( rng v9 ) c= X;
then v = v9 by A26,A25,A28,A23,A30,FUNCT_1:27;
hence thesis by A15,A18,A20,A31,FUNCT_1:49;
end;
end;
