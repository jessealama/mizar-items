environ
vocabularies NUMBERS,FUNCT_1,FUNCOP_1,RELAT_1,AOFA_000,FUNCT_4,XBOOLE_0,SUBSET_1,TARSKI,ZFMISC_1,FUNCT_2,ZF_LANG,VALUED_0,XREAL_0,ORDINAL1,VALUED_1,REAL_3,INT_1,XXREAL_0,CARD_1,ARYTM_3,ARYTM_1,FINSET_1,ORDINAL2,MEMBER_1,CARD_3,NAT_1,POWER,ORDINAL4,EUCLMETR,FREEALG,TREES_4,LANG1,MCART_1,STRUCT_0,GRAPHSP,ABIAN,FUNCT_7,REALSET1,NEWTON,PRE_FF,INT_2,COMPLEX1,AOFA_I00;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,ORDINAL1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FINSET_1,LANG1,REAL_3,BINOP_1,CARD_1,CARD_2,CARD_3,VALUED_0,PRE_FF,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,POWER,INT_1,INT_2,NAT_1,NAT_D,NEWTON,ABIAN,FUNCOP_1,FUNCT_4,FUNCT_7,STRUCT_0,FREEALG,TREES_4,AOFA_000,VALUED_1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
definitions VALUED_0,XCMPLX_0,CARD_2,TARSKI,XBOOLE_0,FUNCT_1,FUNCT_2,FREEALG,BINOP_1,AOFA_000,FUNCOP_1,VALUED_1,CKB2,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB19;
theorems XBOOLE_1,ZFMISC_1,RELAT_1,FUNCT_2,FUNCOP_1,TARSKI,NEWTON,XREAL_1,INT_1,FUNCT_7,NAT_1,ORDINAL1,FUNCT_4,FREEALG,PRE_FF,INT_2,ABSVALUE,WSIERP_1,TREES_4,NUMBERS,FUNCT_1,CARD_2,CARD_1,WELLORD2,FUNCT_5,AOFA_000,MCART_1,XXREAL_0,POWER,FIB_NUM2,ORDINAL3,NAT_D,PREPOWER,VALUED_1,CARD_3,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB19;
schemes FUNCT_1,FUNCT_2,XBOOLE_0,AOFA_000,TARSKI,CLASSES1;
registrations RELSET_1,FUNCT_1,FUNCOP_1,FUNCT_2,NUMBERS,NAT_1,STRUCT_0,FREEALG,INT_1,CARD_5,CARD_1,CARD_3,VALUED_0,VALUED_1,MEMBERED,XREAL_0,XCMPLX_0,XXREAL_0,XBOOLE_0,FINSET_1,POWER,AOFA_000,ABIAN;
constructors REAL_1,BORSUK_1,PREPOWER,POWER,NAT_D,NEWTON,ABIAN,SQUARE_1,PRE_FF,WSIERP_1,WELLORD2,CARD_2,CAT_2,PRALG_3,AOFA_000,CKB2,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
requirements BOOLE,SUBSET,NUMERALS,ARITHM,REAL;
begin
definition
let X being non  empty set;
let t1 being (Function of X,( INT ));
let t2 being (Function of X,( INT ));
redefine func t1 + t2 -> (Function of X,( INT )) means 
(for s being (Element of X) holds ( it . s ) = ( ( t1 . s ) + ( t2 . s ) ));
compatibility
proof
let ti being (Function of X,( INT ));
A7: ( dom t1 ) = X by FUNCT_2:def 1;
A8: ( dom t2 ) = X by FUNCT_2:def 1;
A9: ( dom ( t1 + t2 ) ) = ( ( dom t1 ) /\ ( dom t2 ) ) by VALUED_1:def 1;
hence (ti = ( t1 + t2 ) implies (for s being (Element of X) holds ( ti . s ) = ( ( t1 . s ) + ( t2 . s ) ))) by A7,A8,VALUED_1:def 1;
A10: ( dom ti ) = X by FUNCT_2:def 1;
assume (for s being (Element of X) holds ( ti . s ) = ( ( t1 . s ) + ( t2 . s ) ));
then (for s being set holds (s in X implies ( ti . s ) = ( ( t1 . s ) + ( t2 . s ) )));
hence ti = ( t1 + t2 ) by A9,A7,A8,A10,VALUED_1:def 1;
end;
coherence
proof
thus ( t1 + t2 ) is (Function of X,( INT ));
end;
end;
