environ
vocabularies WAYBEL_0,SUBSET_1,LATTICES,XBOOLE_0,EQREL_1,ORDERS_2,ORDERS_1,STRUCT_0,XXREAL_0,TARSKI,ARYTM_3,LATTICE3,ARYTM_0,RELAT_1,RELAT_2,CARD_FIL,REWRITE1,FUNCT_1,FUNCOP_1,YELLOW_0,SEQM_3,FINSET_1,ORDINAL2,YELLOW_1,SETFAM_1,WELLORD2,ZFMISC_1,WAYBEL_1,WAYBEL_6,YELLOW_8,WAYBEL_2,INT_2,WAYBEL_3,WAYBEL_8,RCOMP_1,WAYBEL16;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,FINSET_1,RELSET_1,FUNCT_2,FUNCOP_1,DOMAIN_1,STRUCT_0,ORDERS_2,LATTICE3,YELLOW_0,YELLOW_1,YELLOW_4,YELLOW_7,WAYBEL_0,WAYBEL_1,WAYBEL_2,WAYBEL_3,WAYBEL_4,WAYBEL_6,WAYBEL_8,CKB9,CKB10;
definitions TARSKI,XBOOLE_0,CKB9,CKB10;
theorems TARSKI,SUBSET_1,SETFAM_1,RELAT_1,ZFMISC_1,FUNCOP_1,ORDERS_2,LATTICE3,YELLOW_0,YELLOW_1,YELLOW_2,YELLOW_4,YELLOW_7,WAYBEL_0,WAYBEL_1,WAYBEL_2,WAYBEL_3,WAYBEL_4,WAYBEL_6,WAYBEL_7,WAYBEL_8,WAYBEL13,WAYBEL14,WAYBEL15,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
schemes DOMAIN_1,SUBSET_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FINSET_1,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,WAYBEL_2,WAYBEL_3,YELLOW_7,WAYBEL_6,WAYBEL_8,CKB11;
constructors SETFAM_1,DOMAIN_1,ORDERS_3,WAYBEL_1,YELLOW_4,WAYBEL_2,WAYBEL_3,WAYBEL_4,WAYBEL_6,WAYBEL_8,RELSET_1,CKB9,CKB10;
requirements BOOLE,SUBSET;
begin
theorem
Th9: (for X being set holds (for Y being non  empty (Subset of ( InclPoset ( Filt ( BoolePoset X ) ) )) holds ( meet Y ) is (Filter of ( BoolePoset X ))))
proof
let X being set;
set L = ( BoolePoset X );
let Y being non  empty (Subset of ( InclPoset ( Filt L ) ));
A1:now
let Z being set;
assume Z in Y;
then Z in (the carrier of ( InclPoset ( Filt L ) ));
then Z in (the carrier of RelStr (# ( Filt L ),( RelIncl ( Filt L ) ) #)) by YELLOW_1:def 1;
then Z in { V where V is (Filter of L): (not contradiction) } by WAYBEL_0:def 24;
then (ex Z1 being (Filter of L) st Z1 = Z);
hence ( Top L ) in Z by WAYBEL_4:22;
end;
Y c= (the carrier of ( InclPoset ( Filt L ) ));
then A2: Y c= (the carrier of RelStr (# ( Filt L ),( RelIncl ( Filt L ) ) #)) by YELLOW_1:def 1;
A3: (for Z being (Subset of L) holds (Z in Y implies Z is  upper))
proof
let Z being (Subset of L);
assume Z in Y;
then Z in ( Filt L ) by A2;
then Z in { V where V is (Filter of L): (not contradiction) } by WAYBEL_0:def 24;
then (ex Z1 being (Filter of L) st Z1 = Z);
hence thesis;
end;
A4:now
let V being (Subset of L);
assume V in Y;
then V in ( Filt L ) by A2;
then V in { Z where Z is (Filter of L): (not contradiction) } by WAYBEL_0:def 24;
then A5: (ex V1 being (Filter of L) st V1 = V);
hence V is  upper;
thus V is  filtered by A5;
end;
Y c= ( bool (the carrier of L) )
proof
let v being set;
assume v in Y;
then v in ( Filt L ) by A2;
then v in { V where V is (Filter of L): (not contradiction) } by WAYBEL_0:def 24;
then (ex v1 being (Filter of L) st v1 = v);
hence thesis;
end;
hence thesis by A1,A3,A4,SETFAM_1:def 1,YELLOW_2:37,YELLOW_2:39;
end;
