environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMFSA_2,FSM_1,SCMFSA6A,TARSKI,CIRCUIT2,RELAT_1,FUNCT_1,CARD_1,FUNCOP_1,FUNCT_4,XBOOLE_0,SCMFSA6B,NAT_1,XXREAL_0,ARYTM_3,AMI_3,SF_MASTR,GRAPHSP,MSUALG_1,AMISTD_2,TURING_1,STRUCT_0,VALUED_1,SCMFSA6C,SCMFSA7B,UNIALG_2,SCMFSA8B,ARYTM_1,SCMFSA8C,SCMFSA8A,SCM_HALT,PARTFUN1,SCMNORM,RELOC,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,FINSEQ_1,FUNCT_1,PARTFUN1,FUNCT_4,FUNCT_7,PBOOLE,VALUED_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,SCMFSA_2,FUNCOP_1,SCMFSA6B,SCMFSA6A,SF_MASTR,SCMFSA8A,SCMFSA8B,SFMASTR1,SCMFSA8C,SCMFSA7B,NAT_D,SCMFSA_3,SCMFSA6C,XXREAL_0,CKB1,CKB2,CKB3;
definitions FUNCOP_1,COMPOS_1,EXTPRO_1,XBOOLE_0,SCMFSA_2,SCMFSA8C,SCMFSA6A,AMISTD_2,SCMFSA7B,MEMSTR_0,CKB1,CKB2,CKB3;
theorems SF_MASTR,FUNCT_1,FUNCT_7,FUNCOP_1,RELAT_1,SCMFSA6A,FUNCT_4,ENUMSET1,AMI_3,NAT_1,TARSKI,INT_1,GRFUNC_1,SCMFSA_2,SCMFSA6B,SCMFSA7B,SCMFSA8B,SCMFSA8A,SCMFSA8C,SCMFSA_3,SCMFSA6C,CARD_1,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,VALUED_1,XREAL_0,PBOOLE,PARTFUN1,AFINSQ_1,FINSEQ_4,COMPOS_1,SFMASTR1,EXTPRO_1,AMISTD_2,AMISTD_5,ZFMISC_1,MEMSTR_0,AMISTD_1,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB13,CKB14,CKB16,CKB17,CKB18,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMFSA_2,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8C,SCMFSA_9,ORDINAL1,RELAT_1,SCMFSA10,AMISTD_2,COMPOS_1,SFMASTR1,EXTPRO_1,SCMFSA_4,PBOOLE,FUNCT_4,FUNCT_7,PRE_POLY,STRUCT_0,FUNCOP_1,MEMSTR_0,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB19,CKB20,CKB22;
constructors SFMASTR1,DOMAIN_1,XXREAL_0,REAL_1,SCM_1,SCMFSA_3,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA8C,AMISTD_1,AMISTD_2,NAT_D,RELSET_1,VALUED_1,SCMFSA7B,SCMFSA_9,AMISTD_5,PBOOLE,PRE_POLY,MEMSTR_0,CKB1,CKB2,CKB3;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve I for (Program of ( SCM+FSA ));
reserve s for (State of ( SCM+FSA ));
reserve p for (Instruction-Sequence of ( SCM+FSA ));
set iS = ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) );
diS: ( dom iS ) = ( ( dom ( ( intloc ( 0 ) ) .--> 1 ) ) \/ ( dom ( Start-At (( 0 ),( SCM+FSA )) ) ) ) by FUNCT_4:def 1
.= ( { ( intloc ( 0 ) ) } \/ ( dom ( Start-At (( 0 ),( SCM+FSA )) ) ) ) by FUNCOP_1:13
.= ( { ( intloc ( 0 ) ) } \/ { ( IC ( SCM+FSA ) ) } ) by FUNCOP_1:13;
registration
let I being  keepInt0_1  InitHalting (Program of ( SCM+FSA ));
let J being  InitHalting (Program of ( SCM+FSA ));
cluster ( I ';' J ) ->  InitHalting;
coherence
proof
set D = ( Data-Locations ( SCM+FSA ) );
let s being (State of ( SCM+FSA ));
assume A1: iS c= s;
then A2: s = ( Initialized s ) by FUNCT_4:98;
let p;
assume A3: ( I ';' J ) c= p;
A4: p = ( p +* ( I ';' J ) ) by A3,FUNCT_4:98;
set p1 = ( p +* I );
set s3 = ( ( Comput (p1,s,( LifeSpan (p1,s) )) ) +* iS );
set p3 = ( p1 +* J );
A7: J c= p3 by FUNCT_4:25;
set m1 = ( LifeSpan (p1,s) );
set s4 = ( Comput (p,s,( m1 + 1 )) );
A8: I c= p1 by FUNCT_4:25;
A9: ( Reloc (J,( card I )) ) c= ( I ';' J ) by FUNCT_4:25;
set m3 = ( LifeSpan (p3,s3) );
A11: ( dom ( DataPart iS ) ) = ( ( dom iS ) /\ D ) by RELAT_1:61;
reconsider m = ( ( m1 + 1 ) + m3 ) as (Element of ( NAT ));
A17: iS c= ( Initialized s ) by FUNCT_4:25;
I c= ( p +* I ) by FUNCT_4:25;
then A18: ( p +* I ) halts_on ( Initialized s ) by CKB2:def 1,A17;
A19:now
let x being set;
( DataPart iS ) c= iS by RELAT_1:59;
then AA: ( dom ( DataPart iS ) ) c= ( dom iS ) by RELAT_1:11;
assume ZZ: x in ( dom ( DataPart iS ) );
then x in ( dom iS ) by AA;
then pc: x in { ( intloc ( 0 ) ),( IC ( SCM+FSA ) ) } by diS,ENUMSET1:1;
per cases  by pc,TARSKI:def 2;
suppose A24: x = ( intloc ( 0 ) );

then x in ( Int-Locations ) by SCMFSA_2:2;
then A25: x in D by SCMFSA_2:100,XBOOLE_0:def 3;
hence ( ( DataPart ( Comput (p1,s,m1) ) ) . x ) = ( ( Comput (p1,s,m1) ) . x ) by FUNCT_1:49
.= 1 by A1,A24,CKB3:def 1,A8
.= ( ( DataPart iS ) . x ) by A25,A24,FUNCT_1:49,SCMFSA6A:43;
end;
suppose S: x = ( IC ( SCM+FSA ) );

( dom ( DataPart iS ) ) c= ( Data-Locations ( SCM+FSA ) ) by RELAT_1:58;
hence ( ( DataPart iS ) . x ) = ( ( DataPart ( Comput (p1,s,m1) ) ) . x ) by S,ZZ,STRUCT_0:3;
end;
end;
take m;
( IC ( Comput (p,s,m) ) ) in ( NAT );
hence ( IC ( Comput (p,s,m) ) ) in ( dom p ) by PARTFUN1:def 2;
( Directed I ) c= ( I ';' J ) by SCMFSA6A:16;
then A27: ( Directed I ) c= p by A3,XBOOLE_1:1;
iS c= s3 by FUNCT_4:25;
then ( dom iS ) c= ( dom s3 ) by GRFUNC_1:2;
then ( dom iS ) c= (the carrier of ( SCM+FSA )) by PARTFUN1:def 2;
then ( dom ( DataPart iS ) ) c= ( (the carrier of ( SCM+FSA )) /\ D ) by A11,XBOOLE_1:26;
then ( dom ( DataPart iS ) ) c= ( ( dom ( Comput (p1,s,m1) ) ) /\ D ) by PARTFUN1:def 2;
then ( dom ( DataPart iS ) ) c= ( dom ( DataPart ( Comput (p1,s,m1) ) ) ) by RELAT_1:61;
then ( DataPart iS ) c= ( DataPart ( Comput (p1,s,m1) ) ) by A19,GRFUNC_1:2;
then A30: ( DataPart ( Comput (p1,s,m1) ) ) = ( ( DataPart ( Comput (p1,s,( LifeSpan (p1,s) )) ) ) +* ( DataPart iS ) ) by FUNCT_4:98
.= ( DataPart s3 ) by FUNCT_4:71;
A31: ( DataPart ( Comput (p,s,m1) ) ) = ( DataPart s3 ) by A30,A2,A4,A18,CKB27:1;
I c= ( p +* I ) by FUNCT_4:25;
then YY: ( p +* I ) halts_on s by A1,CKB2:def 1;
then A33: ( DataPart ( Comput (p,s,( m1 + 1 )) ) ) = ( DataPart s3 ) by A1,CKB25:1,A31,A27;
A35: ( Comput (p,s,( ( m1 + 1 ) + m3 )) ) = ( Comput (p,( Comput (p,s,( m1 + 1 )) ),m3) ) by EXTPRO_1:4;
A36: ( Reloc (J,( card I )) ) c= p by A9,A3,XBOOLE_1:1;
X: iS c= s3 by FUNCT_4:25;
x: ( IC ( Comput (p,s,( ( LifeSpan (( p +* I ),s) ) + 1 )) ) ) = ( card I ) by YY,A27,CKB24:1,A1;
A37: ( IncAddr (( CurInstr (p3,( Comput (p3,s3,m3) )) ),( card I )) ) = ( CurInstr (p,( Comput (p,s,( ( m1 + 1 ) + m3 )) )) ) by A35,X,A7,A36,CKB16:1,x,A33;
p3 halts_on s3 by A7,CKB2:def 1,X;
then ( CurInstr (p,( Comput (p,s,m) )) ) = ( IncAddr (( halt ( SCM+FSA ) ),( card I )) ) by A37,EXTPRO_1:def 15
.= ( halt ( SCM+FSA ) ) by COMPOS_1:11;
hence thesis;
end;
end;
