environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMFSA_2,FSM_1,SCMFSA6A,TARSKI,CIRCUIT2,RELAT_1,FUNCT_1,CARD_1,FUNCOP_1,FUNCT_4,XBOOLE_0,SCMFSA6B,NAT_1,XXREAL_0,ARYTM_3,AMI_3,SF_MASTR,GRAPHSP,MSUALG_1,AMISTD_2,TURING_1,STRUCT_0,VALUED_1,SCMFSA6C,SCMFSA7B,UNIALG_2,SCMFSA8B,ARYTM_1,SCMFSA8C,SCMFSA8A,SCM_HALT,PARTFUN1,SCMNORM,RELOC,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,FINSEQ_1,FUNCT_1,PARTFUN1,FUNCT_4,FUNCT_7,PBOOLE,VALUED_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,SCMFSA_2,FUNCOP_1,SCMFSA6B,SCMFSA6A,SF_MASTR,SCMFSA8A,SCMFSA8B,SFMASTR1,SCMFSA8C,SCMFSA7B,NAT_D,SCMFSA_3,SCMFSA6C,XXREAL_0,CKB1,CKB2,CKB3,CKB47,CKB48;
definitions FUNCOP_1,COMPOS_1,EXTPRO_1,XBOOLE_0,SCMFSA_2,SCMFSA8C,SCMFSA6A,AMISTD_2,SCMFSA7B,MEMSTR_0,CKB1,CKB2,CKB3,CKB47,CKB48;
theorems SF_MASTR,FUNCT_1,FUNCT_7,FUNCOP_1,RELAT_1,SCMFSA6A,FUNCT_4,ENUMSET1,AMI_3,NAT_1,TARSKI,INT_1,GRFUNC_1,SCMFSA_2,SCMFSA6B,SCMFSA7B,SCMFSA8B,SCMFSA8A,SCMFSA8C,SCMFSA_3,SCMFSA6C,CARD_1,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,VALUED_1,XREAL_0,PBOOLE,PARTFUN1,AFINSQ_1,FINSEQ_4,COMPOS_1,SFMASTR1,EXTPRO_1,AMISTD_2,AMISTD_5,ZFMISC_1,MEMSTR_0,AMISTD_1,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB13,CKB14,CKB16,CKB17,CKB18,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB31,CKB32,CKB33,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93;
schemes NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMFSA_2,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8C,SCMFSA_9,ORDINAL1,RELAT_1,SCMFSA10,AMISTD_2,COMPOS_1,SFMASTR1,EXTPRO_1,SCMFSA_4,PBOOLE,FUNCT_4,FUNCT_7,PRE_POLY,STRUCT_0,FUNCOP_1,MEMSTR_0,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB19,CKB20,CKB22,CKB29,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB52,CKB53,CKB54,CKB76,CKB77,CKB78,CKB94;
constructors SFMASTR1,DOMAIN_1,XXREAL_0,REAL_1,SCM_1,SCMFSA_3,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA8C,AMISTD_1,AMISTD_2,NAT_D,RELSET_1,VALUED_1,SCMFSA7B,SCMFSA_9,AMISTD_5,PBOOLE,PRE_POLY,MEMSTR_0,CKB1,CKB2,CKB3,CKB47,CKB48;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve I for (Program of ( SCM+FSA ));
reserve s for (State of ( SCM+FSA ));
reserve s2 for (State of ( SCM+FSA ));
reserve a for Int-Location;
reserve f for FinSeq-Location;
reserve p for (Instruction-Sequence of ( SCM+FSA ));
reserve p2 for (Instruction-Sequence of ( SCM+FSA ));
set SA0 = ( Start-At (( 0 ),( SCM+FSA )) );
theorem
Th77: (for s being (State of ( SCM+FSA )) holds (for I being  good  InitHalting (Program of ( SCM+FSA )) holds (for a being  read-write Int-Location holds (((not I destroy a) & ( s . a ) > ( 0 )) implies (ex s2 being (State of ( SCM+FSA )) st (ex p2 being (Instruction-Sequence of ( SCM+FSA )) st (ex k being (Element of ( NAT )) st ((((((((s2 = ( Initialized s ) & p2 = ( p +* ( loop ( if=0 (a,( Goto 2 ),( I ';' ( SubFrom (a,( intloc ( 0 ) )) ) )) ) ) )) & k = ( ( LifeSpan (( p +* ( if=0 (a,( Goto 2 ),( I ';' ( SubFrom (a,( intloc ( 0 ) )) ) )) ) ),( Initialized s )) ) + 1 )) & ( ( Comput (p2,s2,k) ) . a ) = ( ( s . a ) - 1 )) & ( ( Comput (p2,s2,k) ) . ( intloc ( 0 ) ) ) = 1) & (for b being  read-write Int-Location holds (b <> a implies ( ( Comput (p2,s2,k) ) . b ) = ( ( IExec (I,p,s) ) . b )))) & (for f being FinSeq-Location holds ( ( Comput (p2,s2,k) ) . f ) = ( ( IExec (I,p,s) ) . f ))) & ( IC ( Comput (p2,s2,k) ) ) = ( 0 )) & (for n being (Element of ( NAT )) holds (n <= k implies ( IC ( Comput (p2,s2,n) ) ) in ( dom ( loop ( if=0 (a,( Goto 2 ),( I ';' ( SubFrom (a,( intloc ( 0 ) )) ) )) ) ) )))))))))))
proof
let s being (State of ( SCM+FSA ));
let I being  good  InitHalting (Program of ( SCM+FSA ));
let a being  read-write Int-Location;
assume A1: (not I destroy a);
reconsider I1 = ( I ';' ( SubFrom (a,( intloc ( 0 ) )) ) ) as  InitHalting (Program of ( SCM+FSA ));
set P = ( if=0 (a,( Goto 2 ),( I ';' ( SubFrom (a,( intloc ( 0 ) )) ) )) );
assume A2: ( s . a ) > ( 0 );
set Is = ( Initialized ( Initialized s ) );
take s2 = ( Initialized s );
take p2 = ( p +* ( loop P ) );
set s1 = ( Initialized s );
set p1 = ( p +* P );
take k = ( ( LifeSpan (p1,s1) ) + 1 );
thus ((s2 = ( Initialized s ) & p2 = ( p +* ( loop P ) )) & k = ( ( LifeSpan (( p +* ( if=0 (a,( Goto 2 ),( I ';' ( SubFrom (a,( intloc ( 0 ) )) ) )) ) ),( Initialized s )) ) + 1 ));
A3: Is = ( s +* ( ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) +* SA0 ) ) by FUNCT_4:93
.= ( Initialize ( Initialized s ) ) by FUNCT_4:14;
A4: I1 is_halting_onInit s,p by CKB50:1;
then A5: I1 is_halting_on ( Initialized s ),p by CKB58:1;
I1 is_closed_onInit s,p by CKB49:1;
then A6: ( IExec (P,p,s) ) = ( ( IExec (I1,p,s) ) +* ( Start-At (( ( ( card ( Goto 2 ) ) + ( card I1 ) ) + 3 ),( SCM+FSA )) ) ) by A2,A4,CKB63:1;
then A7: ( ( IExec (P,p,s) ) . a ) = ( ( IExec (I1,p,s) ) . a ) by SCMFSA_3:3;
(I1 is_closed_onInit s,p & I1 is_halting_onInit s,p) by CKB49:1,CKB50:1;
then A8: (P is_closed_onInit s,p & P is_halting_onInit s,p) by A2,CKB62:1;
( Comput (p2,s2,( ( LifeSpan (p1,s1) ) + 1 )) ) = ( Following (p2,( Comput (p2,s2,( LifeSpan (p1,s1) )) )) ) by EXTPRO_1:3
.= ( Exec (( CurInstr (p2,( Comput (p2,s2,( LifeSpan (p1,s1) )) )) ),( Comput (p2,s2,( LifeSpan (p1,s1) )) )) );
then A9: ( Comput (p2,s2,( ( LifeSpan (p1,s1) ) + 1 )) ) = ( Exec (( goto ( 0 ) ),( Comput (p2,s2,( LifeSpan (p1,s1) )) )) ) by A8,CKB89:1;
A10: (I1 is_closed_onInit s,p & I1 is_halting_onInit s,p) by CKB49:1,CKB50:1;
then P is_closed_onInit s,p by A2,CKB62:1;
then A11: P is_closed_on ( Initialized s ),p by CKB57:1;
P is_halting_onInit s,p by A2,A10,CKB62:1;
then A12: P is_halting_on ( Initialized s ),p by CKB58:1;
XX: ( Comput (( p +* P ),Is,( LifeSpan (( p +* P ),Is) )) ) = ( Comput (( p +* ( loop P ) ),Is,( LifeSpan (( p +* P ),Is) )) ) by A8,CKB87:1;
( ( Comput (p2,s2,( ( LifeSpan (p1,s1) ) + 1 )) ) . a ) = ( ( Comput (( p +* P ),Is,( LifeSpan (( p +* P ),Is) )) ) . a ) by XX,A9,SCMFSA_2:69
.= ( ( IExec (P,p,s) ) . a ) by A3,A12,SCMFSA8C:58;
hence ( ( Comput (p2,s2,k) ) . a ) = ( ( Comput (( p +* I1 ),( Initialize ( Initialized s ) ),( LifeSpan (( p +* I1 ),( Initialize ( Initialized s ) )) )) ) . a ) by A5,A7,SCMFSA8C:58
.= ( ( s . a ) - 1 ) by A1,CKB84:1;
( ( Comput (p2,s2,( ( LifeSpan (p1,s1) ) + 1 )) ) . ( intloc ( 0 ) ) ) = ( ( Comput (( p +* P ),Is,( LifeSpan (( p +* P ),Is) )) ) . ( intloc ( 0 ) ) ) by XX,A9,SCMFSA_2:69
.= 1 by A12,A11,A3,SCMFSA8C:67;
hence ( ( Comput (p2,s2,k) ) . ( intloc ( 0 ) ) ) = 1;
hereby
let b being  read-write Int-Location;
assume A15: b <> a;
thus ( ( Comput (p2,s2,k) ) . b ) = ( ( Comput (( p +* P ),Is,( LifeSpan (( p +* P ),Is) )) ) . b ) by XX,A9,SCMFSA_2:69
.= ( ( IExec (P,p,s) ) . b ) by A3,A12,SCMFSA8C:58
.= ( ( IExec (I1,p,s) ) . b ) by A6,SCMFSA_3:3
.= ( ( Exec (( SubFrom (a,( intloc ( 0 ) )) ),( IExec (I,p,s) )) ) . b ) by CKB45:1
.= ( ( IExec (I,p,s) ) . b ) by A15,SCMFSA_2:65;
end;
hereby
let f being FinSeq-Location;
thus ( ( Comput (p2,s2,k) ) . f ) = ( ( Comput (( p +* P ),Is,( LifeSpan (( p +* P ),Is) )) ) . f ) by XX,A9,SCMFSA_2:69
.= ( ( IExec (P,p,s) ) . f ) by A3,A12,SCMFSA8C:58
.= ( ( IExec (I1,p,s) ) . f ) by A6,SCMFSA_3:4
.= ( ( Exec (( SubFrom (a,( intloc ( 0 ) )) ),( IExec (I,p,s) )) ) . f ) by CKB46:1
.= ( ( IExec (I,p,s) ) . f ) by SCMFSA_2:65;
end;
thus ( IC ( Comput (p2,s2,k) ) ) = ( 0 ) by A9,SCMFSA_2:69;
A16: ( IC ( Comput (p2,s2,( ( LifeSpan (p1,s1) ) + 1 )) ) ) = ( 0 ) by A9,SCMFSA_2:69;
hereby
let n being (Element of ( NAT ));
assume A17: n <= k;
per cases  by A17,NAT_1:8;
suppose A18: n <= ( LifeSpan (p1,s1) );

A19: (I1 is_closed_onInit s,p & I1 is_halting_onInit s,p) by CKB49:1,CKB50:1;
then A20: P is_closed_onInit s,p by A2,CKB62:1;
P is_halting_onInit s,p by A2,A19,CKB62:1;
then A21: ( IC ( Comput (p2,s2,n) ) ) = ( IC ( Comput (p1,s1,n) ) ) by A18,A20,CKB87:1;
( IC ( Comput (p1,s1,n) ) ) in ( dom P ) by A20,CKB47:def 1;
hence ( IC ( Comput (p2,s2,n) ) ) in ( dom ( loop P ) ) by A21,FUNCT_4:99;
end;
suppose A22: n = ( ( LifeSpan (p1,s1) ) + 1 );

A23: ( card P ) = ( ( ( card ( Goto 2 ) ) + ( card I1 ) ) + 4 ) by SCMFSA8B:11
.= ( ( ( card I1 ) + 1 ) + 4 ) by SCMFSA8A:15
.= ( ( ( card I1 ) + 3 ) + 2 );
( card ( loop P ) ) = ( card ( dom ( loop P ) ) ) by CARD_1:62
.= ( card ( dom P ) ) by FUNCT_4:99
.= ( card P ) by CARD_1:62;
hence ( IC ( Comput (p2,s2,n) ) ) in ( dom ( loop P ) ) by A16,A22,A23,AFINSQ_1:66;
end;
end;
end;
