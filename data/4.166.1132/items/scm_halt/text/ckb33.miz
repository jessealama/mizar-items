environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMFSA_2,FSM_1,SCMFSA6A,TARSKI,CIRCUIT2,RELAT_1,FUNCT_1,CARD_1,FUNCOP_1,FUNCT_4,XBOOLE_0,SCMFSA6B,NAT_1,XXREAL_0,ARYTM_3,AMI_3,SF_MASTR,GRAPHSP,MSUALG_1,AMISTD_2,TURING_1,STRUCT_0,VALUED_1,SCMFSA6C,SCMFSA7B,UNIALG_2,SCMFSA8B,ARYTM_1,SCMFSA8C,SCMFSA8A,SCM_HALT,PARTFUN1,SCMNORM,RELOC,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,FINSEQ_1,FUNCT_1,PARTFUN1,FUNCT_4,FUNCT_7,PBOOLE,VALUED_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,SCMFSA_2,FUNCOP_1,SCMFSA6B,SCMFSA6A,SF_MASTR,SCMFSA8A,SCMFSA8B,SFMASTR1,SCMFSA8C,SCMFSA7B,NAT_D,SCMFSA_3,SCMFSA6C,XXREAL_0,CKB1,CKB2,CKB3;
definitions FUNCOP_1,COMPOS_1,EXTPRO_1,XBOOLE_0,SCMFSA_2,SCMFSA8C,SCMFSA6A,AMISTD_2,SCMFSA7B,MEMSTR_0,CKB1,CKB2,CKB3;
theorems SF_MASTR,FUNCT_1,FUNCT_7,FUNCOP_1,RELAT_1,SCMFSA6A,FUNCT_4,ENUMSET1,AMI_3,NAT_1,TARSKI,INT_1,GRFUNC_1,SCMFSA_2,SCMFSA6B,SCMFSA7B,SCMFSA8B,SCMFSA8A,SCMFSA8C,SCMFSA_3,SCMFSA6C,CARD_1,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,VALUED_1,XREAL_0,PBOOLE,PARTFUN1,AFINSQ_1,FINSEQ_4,COMPOS_1,SFMASTR1,EXTPRO_1,AMISTD_2,AMISTD_5,ZFMISC_1,MEMSTR_0,AMISTD_1,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB13,CKB14,CKB16,CKB17,CKB18,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB31,CKB32;
schemes NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMFSA_2,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8C,SCMFSA_9,ORDINAL1,RELAT_1,SCMFSA10,AMISTD_2,COMPOS_1,SFMASTR1,EXTPRO_1,SCMFSA_4,PBOOLE,FUNCT_4,FUNCT_7,PRE_POLY,STRUCT_0,FUNCOP_1,MEMSTR_0,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB19,CKB20,CKB22,CKB29;
constructors SFMASTR1,DOMAIN_1,XXREAL_0,REAL_1,SCM_1,SCMFSA_3,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA8C,AMISTD_1,AMISTD_2,NAT_D,RELSET_1,VALUED_1,SCMFSA7B,SCMFSA_9,AMISTD_5,PBOOLE,PRE_POLY,MEMSTR_0,CKB1,CKB2,CKB3;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve I for (Program of ( SCM+FSA ));
reserve s for (State of ( SCM+FSA ));
reserve p for (Instruction-Sequence of ( SCM+FSA ));
set iS = ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) );
theorem
Th29: (for I being  keepInt0_1  InitHalting (Program of ( SCM+FSA )) holds (for J being  InitHalting (Program of ( SCM+FSA )) holds ( IExec (( I ';' J ),p,s) ) = ( IncIC (( IExec (J,p,( IExec (I,p,s) )) ),( card I )) )))
proof
set D = ( Data-Locations ( SCM+FSA ) );
set A = ( NAT );
let I being  keepInt0_1  InitHalting (Program of ( SCM+FSA ));
let J being  InitHalting (Program of ( SCM+FSA ));
set s1 = ( Initialized s );
set p1 = ( p +* I );
A1: I c= p1 by FUNCT_4:25;
set p2 = ( p +* ( I ';' J ) );
A2: ( I ';' J ) c= p2 by FUNCT_4:25;
set s3 = ( Initialized ( Comput (p1,s1,( LifeSpan (p1,s1) )) ) );
set p3 = ( p1 +* J );
A3: iS c= s3 by FUNCT_4:25;
A4: J c= p3 by FUNCT_4:25;
set m1 = ( LifeSpan (p1,s1) );
set m3 = ( LifeSpan (p3,s3) );
A5: iS c= s1 by FUNCT_4:25;
A6: ( I ';' J ) c= p2 by FUNCT_4:25;
A9: iS c= ( Initialized s ) by FUNCT_4:25;
I c= ( p +* I ) by FUNCT_4:25;
then A10: p1 halts_on s1 by CKB2:def 1,A9;
A11: iS c= s3 by FUNCT_4:25;
A14: (( IExec (I,p,s) ) = ( Result (p1,s1) ) & iS c= ( ( Result (p1,s1) ) +* iS )) by FUNCT_4:25,SCMFSA6B:def 1;
A17: J c= ( p +* J ) by FUNCT_4:25;
A18: (iS c= ( Initialized ( IExec (I,p,s) ) ) & iS c= s3) by FUNCT_4:25;
A19: (J c= ( p +* J ) & J c= p3) by FUNCT_4:25;
A20: iS c= s3 by FUNCT_4:25;
A21: iS c= s1 by FUNCT_4:25;
A22: I c= p1 by FUNCT_4:25;
p1 halts_on s1 by A21,CKB2:def 1,A22;
then A23: s3 = ( Initialized ( Result (p1,s1) ) ) by EXTPRO_1:23;
A24: ( IC ( Result (( p1 +* J ),( Initialized ( Result (p1,s1) ) )) ) ) = ( IC ( Result (( p +* J ),( Initialized ( IExec (I,p,s) ) )) ) ) by A14,CKB18:1,A17,A4;
A25: iS c= s1 by FUNCT_4:25;
A26: I c= ( p2 +* I ) by FUNCT_4:25;
A27: ( LifeSpan (( p2 +* I ),s1) ) = m1 by A25,CKB18:1,A22,A26;
( Reloc (J,( card I )) ) c= ( I ';' J ) by FUNCT_4:25;
then A29: ( Reloc (J,( card I )) ) c= p2 by A2,XBOOLE_1:1;
A34: iS c= s1 by FUNCT_4:25;
A35: ( ( p2 +* I ) +* ( I ';' J ) ) = ( p2 +* ( I +* ( I ';' J ) ) ) by FUNCT_4:14
.= ( p2 +* ( I ';' J ) ) by SCMFSA6A:18
.= p2 by FUNCT_4:93
.= ( p +* ( I +* ( I ';' J ) ) ) by SCMFSA6A:18
.= ( p1 +* ( I ';' J ) ) by FUNCT_4:14;
I c= ( p2 +* I ) by FUNCT_4:25;
then ( p2 +* I ) halts_on s1 by CKB2:def 1,A34;
then ( DataPart ( Comput (( p2 +* I ),s1,m1) ) ) = ( DataPart ( Comput (( ( p2 +* I ) +* ( I ';' J ) ),s1,m1) ) ) by A25,A27,CKB23:1,A26
.= ( DataPart ( Comput (p1,s1,m1) ) ) by A21,A10,CKB23:1,A1,A35;
then A37: ( DataPart ( ( Comput (( p2 +* I ),s1,m1) ) +* iS ) ) = ( ( DataPart ( Comput (p1,s1,m1) ) ) +* ( DataPart iS ) ) by FUNCT_4:71
.= ( DataPart ( ( Comput (p1,s1,m1) ) +* iS ) ) by FUNCT_4:71;
A38: (( IC ( Comput (p2,s1,( m1 + 1 )) ) ) = ( card I ) & ( DataPart ( Comput (p2,s1,( m1 + 1 )) ) ) = ( DataPart ( ( Comput (( p2 +* I ),s1,m1) ) +* iS ) )) by A5,A27,CKB28:1,A6;
then A39: ( DataPart ( Comput (p2,( Comput (p2,s1,( m1 + 1 )) ),m3) ) ) = ( DataPart ( Comput (p3,s3,m3) ) ) by A11,A37,CKB16:1,A4,A29;
A40: ( IC ( Comput (p2,( Comput (p2,s1,( m1 + 1 )) ),m3) ) ) = ( ( IC ( Comput (p3,s3,m3) ) ) + ( card I ) ) by A38,A11,A37,CKB16:1,A4,A29;
A41: iS c= s1 by FUNCT_4:25;
( I ';' J ) c= ( p +* ( I ';' J ) ) by FUNCT_4:25;
then A42: p2 halts_on s1 by CKB2:def 1,A41;
A43: ( IExec (( I ';' J ),p,s) ) = ( Result (( p +* ( I ';' J ) ),( Initialized s )) ) by SCMFSA6B:def 1
.= ( Comput (p2,s1,( LifeSpan (p2,s1) )) ) by A42,EXTPRO_1:23
.= ( Comput (p2,s1,( ( m1 + 1 ) + m3 )) ) by A23,CKB32:1;
B43: p1 halts_on s1 by A21,CKB2:def 1,A1;
( IExec (I,p,s) ) = ( Result (( p +* I ),( Initialized s )) ) by SCMFSA6B:def 1
.= ( Comput (p1,s1,m1) ) by B43,EXTPRO_1:23;
then A44: ( Result (( p +* J ),( ( IExec (I,p,s) ) +* iS )) ) = ( Result (p3,s3) ) by A18,CKB18:1,A19;
A45: p3 halts_on s3 by CKB2:def 1,A3,A4;
A46: ( IExec (J,p,( IExec (I,p,s) )) ) = ( Result (( p +* J ),( Initialized ( IExec (I,p,s) ) )) ) by SCMFSA6B:def 1
.= ( Comput (p3,s3,m3) ) by A44,A45,EXTPRO_1:23;
A48: ( DataPart ( IExec (( I ';' J ),p,s) ) ) = ( DataPart ( IExec (J,p,( IExec (I,p,s) )) ) ) by A46,A39,A43,EXTPRO_1:4;
F2: p3 halts_on s3 by A20,CKB2:def 1,A4;
F1: p2 halts_on s1 by A5,CKB2:def 1,A2;
p1 halts_on s1 by A21,CKB2:def 1,A1;
then A49: s3 = ( Initialized ( Result (p1,s1) ) ) by EXTPRO_1:23;
A50: ( IC ( IExec (( I ';' J ),p,s) ) ) = ( IC ( Result (( p +* ( I ';' J ) ),( Initialized s )) ) ) by SCMFSA6B:def 1
.= ( IC ( Comput (p2,s1,( LifeSpan (p2,s1) )) ) ) by F1,EXTPRO_1:23
.= ( IC ( Comput (p2,s1,( ( m1 + 1 ) + m3 )) ) ) by A23,CKB32:1
.= ( ( IC ( Comput (p3,s3,m3) ) ) + ( card I ) ) by A40,EXTPRO_1:4
.= ( ( IC ( Result (p3,s3) ) ) + ( card I ) ) by F2,EXTPRO_1:23
.= ( ( IC ( IExec (J,p,( IExec (I,p,s) )) ) ) + ( card I ) ) by A24,A49,SCMFSA6B:def 1;
hereby
reconsider l = ( ( IC ( IExec (J,p,( IExec (I,p,s) )) ) ) + ( card I ) ) as (Element of ( NAT ));
A51: ( dom ( Start-At (l,( SCM+FSA )) ) ) = { ( IC ( SCM+FSA ) ) } by FUNCOP_1:13;
A52:now
let x being set;
assume A53: x in ( dom ( IExec (( I ';' J ),p,s) ) );
per cases  by A53,SCMFSA6A:5;
suppose A54: x is Int-Location;

then x <> ( IC ( SCM+FSA ) ) by SCMFSA_2:56;
then A55: (not x in ( dom ( Start-At (l,( SCM+FSA )) ) )) by A51,TARSKI:def 1;
( ( IExec (( I ';' J ),p,s) ) . x ) = ( ( IExec (J,p,( IExec (I,p,s) )) ) . x ) by A48,A54,SCMFSA6A:7;
hence ( ( IExec (( I ';' J ),p,s) ) . x ) = ( ( IncIC (( IExec (J,p,( IExec (I,p,s) )) ),( card I )) ) . x ) by A55,FUNCT_4:11;
end;
suppose A56: x is FinSeq-Location;

then x <> ( IC ( SCM+FSA ) ) by SCMFSA_2:57;
then A57: (not x in ( dom ( Start-At (l,( SCM+FSA )) ) )) by A51,TARSKI:def 1;
( ( IExec (( I ';' J ),p,s) ) . x ) = ( ( IExec (J,p,( IExec (I,p,s) )) ) . x ) by A48,A56,SCMFSA6A:7;
hence ( ( IExec (( I ';' J ),p,s) ) . x ) = ( ( IncIC (( IExec (J,p,( IExec (I,p,s) )) ),( card I )) ) . x ) by A57,FUNCT_4:11;
end;
suppose A58: x = ( IC ( SCM+FSA ) );

then x in { ( IC ( SCM+FSA ) ) } by TARSKI:def 1;
then A59: x in ( dom ( Start-At (l,( SCM+FSA )) ) ) by FUNCOP_1:13;
thus ( ( IExec (( I ';' J ),p,s) ) . x ) = ( ( Start-At (l,( SCM+FSA )) ) . ( IC ( SCM+FSA ) ) ) by A50,A58,FUNCOP_1:72
.= ( ( IncIC (( IExec (J,p,( IExec (I,p,s) )) ),( card I )) ) . x ) by A58,A59,FUNCT_4:13;
end;
end;
( dom ( IExec (( I ';' J ),p,s) ) ) = (the carrier of ( SCM+FSA )) by PARTFUN1:def 2
.= ( dom ( IncIC (( IExec (J,p,( IExec (I,p,s) )) ),( card I )) ) ) by PARTFUN1:def 2;
hence thesis by A52,FUNCT_1:2;
end;
end;
