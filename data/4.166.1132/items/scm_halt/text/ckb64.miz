environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMFSA_2,FSM_1,SCMFSA6A,TARSKI,CIRCUIT2,RELAT_1,FUNCT_1,CARD_1,FUNCOP_1,FUNCT_4,XBOOLE_0,SCMFSA6B,NAT_1,XXREAL_0,ARYTM_3,AMI_3,SF_MASTR,GRAPHSP,MSUALG_1,AMISTD_2,TURING_1,STRUCT_0,VALUED_1,SCMFSA6C,SCMFSA7B,UNIALG_2,SCMFSA8B,ARYTM_1,SCMFSA8C,SCMFSA8A,SCM_HALT,PARTFUN1,SCMNORM,RELOC,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,FINSEQ_1,FUNCT_1,PARTFUN1,FUNCT_4,FUNCT_7,PBOOLE,VALUED_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,SCMFSA_2,FUNCOP_1,SCMFSA6B,SCMFSA6A,SF_MASTR,SCMFSA8A,SCMFSA8B,SFMASTR1,SCMFSA8C,SCMFSA7B,NAT_D,SCMFSA_3,SCMFSA6C,XXREAL_0,CKB1,CKB2,CKB3,CKB47,CKB48;
definitions FUNCOP_1,COMPOS_1,EXTPRO_1,XBOOLE_0,SCMFSA_2,SCMFSA8C,SCMFSA6A,AMISTD_2,SCMFSA7B,MEMSTR_0,CKB1,CKB2,CKB3,CKB47,CKB48;
theorems SF_MASTR,FUNCT_1,FUNCT_7,FUNCOP_1,RELAT_1,SCMFSA6A,FUNCT_4,ENUMSET1,AMI_3,NAT_1,TARSKI,INT_1,GRFUNC_1,SCMFSA_2,SCMFSA6B,SCMFSA7B,SCMFSA8B,SCMFSA8A,SCMFSA8C,SCMFSA_3,SCMFSA6C,CARD_1,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,VALUED_1,XREAL_0,PBOOLE,PARTFUN1,AFINSQ_1,FINSEQ_4,COMPOS_1,SFMASTR1,EXTPRO_1,AMISTD_2,AMISTD_5,ZFMISC_1,MEMSTR_0,AMISTD_1,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB13,CKB14,CKB16,CKB17,CKB18,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB31,CKB32,CKB33,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63;
schemes NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMFSA_2,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8C,SCMFSA_9,ORDINAL1,RELAT_1,SCMFSA10,AMISTD_2,COMPOS_1,SFMASTR1,EXTPRO_1,SCMFSA_4,PBOOLE,FUNCT_4,FUNCT_7,PRE_POLY,STRUCT_0,FUNCOP_1,MEMSTR_0,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB19,CKB20,CKB22,CKB29,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB52,CKB53,CKB54;
constructors SFMASTR1,DOMAIN_1,XXREAL_0,REAL_1,SCM_1,SCMFSA_3,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA8C,AMISTD_1,AMISTD_2,NAT_D,RELSET_1,VALUED_1,SCMFSA7B,SCMFSA_9,AMISTD_5,PBOOLE,PRE_POLY,MEMSTR_0,CKB1,CKB2,CKB3,CKB47,CKB48;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve I for (Program of ( SCM+FSA ));
reserve s for (State of ( SCM+FSA ));
reserve a for Int-Location;
reserve p for (Instruction-Sequence of ( SCM+FSA ));
set iS = ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) );
theorem
Th47: (for s being (State of ( SCM+FSA )) holds (for I,J being  InitHalting (Program of ( SCM+FSA )) holds (for a being  read-write Int-Location holds ((( if=0 (a,I,J) ) is  InitHalting & (( s . a ) = ( 0 ) implies ( IExec (( if=0 (a,I,J) ),p,s) ) = ( ( IExec (I,p,s) ) +* ( Start-At (( ( ( card I ) + ( card J ) ) + 3 ),( SCM+FSA )) ) ))) & (( s . a ) <> ( 0 ) implies ( IExec (( if=0 (a,I,J) ),p,s) ) = ( ( IExec (J,p,s) ) +* ( Start-At (( ( ( card I ) + ( card J ) ) + 3 ),( SCM+FSA )) ) ))))))
proof
let s being (State of ( SCM+FSA ));
let I being  InitHalting (Program of ( SCM+FSA ));
let J being  InitHalting (Program of ( SCM+FSA ));
let a being  read-write Int-Location;
now
let s being (State of ( SCM+FSA ));
assume iS c= s;
then A2: s = ( Initialized s ) by FUNCT_4:98;
let p;
assume ( if=0 (a,I,J) ) c= p;
then A3: p = ( p +* ( if=0 (a,I,J) ) ) by FUNCT_4:98;
A4: (J is_closed_onInit s,p & J is_halting_onInit s,p) by CKB49:1,CKB50:1;
A5: (I is_closed_onInit s,p & I is_halting_onInit s,p) by CKB49:1,CKB50:1;
per cases ;
suppose ( s . a ) = ( 0 );

then ( if=0 (a,I,J) ) is_halting_onInit s,p by A5,CKB60:1;
hence p halts_on s by A2,CKB48:def 1,A3;
end;
suppose ( s . a ) <> ( 0 );

then ( if=0 (a,I,J) ) is_halting_onInit s,p by A4,CKB62:1;
hence p halts_on s by A2,CKB48:def 1,A3;
end;
end;
hence ( if=0 (a,I,J) ) is  InitHalting by CKB2:def 1;
(I is_closed_onInit s,p & I is_halting_onInit s,p) by CKB49:1,CKB50:1;
hence (( s . a ) = ( 0 ) implies ( IExec (( if=0 (a,I,J) ),p,s) ) = ( ( IExec (I,p,s) ) +* ( Start-At (( ( ( card I ) + ( card J ) ) + 3 ),( SCM+FSA )) ) )) by CKB61:1;
(J is_closed_onInit s,p & J is_halting_onInit s,p) by CKB49:1,CKB50:1;
hence thesis by CKB63:1;
end;
