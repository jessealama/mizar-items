environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMFSA_2,FSM_1,SCMFSA6A,TARSKI,CIRCUIT2,RELAT_1,FUNCT_1,CARD_1,FUNCOP_1,FUNCT_4,XBOOLE_0,SCMFSA6B,NAT_1,XXREAL_0,ARYTM_3,AMI_3,SF_MASTR,GRAPHSP,MSUALG_1,AMISTD_2,TURING_1,STRUCT_0,VALUED_1,SCMFSA6C,SCMFSA7B,UNIALG_2,SCMFSA8B,ARYTM_1,SCMFSA8C,SCMFSA8A,SCM_HALT,PARTFUN1,SCMNORM,RELOC,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,FINSEQ_1,FUNCT_1,PARTFUN1,FUNCT_4,FUNCT_7,PBOOLE,VALUED_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,SCMFSA_2,FUNCOP_1,SCMFSA6B,SCMFSA6A,SF_MASTR,SCMFSA8A,SCMFSA8B,SFMASTR1,SCMFSA8C,SCMFSA7B,NAT_D,SCMFSA_3,SCMFSA6C,XXREAL_0,CKB1,CKB2,CKB3;
definitions FUNCOP_1,COMPOS_1,EXTPRO_1,XBOOLE_0,SCMFSA_2,SCMFSA8C,SCMFSA6A,AMISTD_2,SCMFSA7B,MEMSTR_0,CKB1,CKB2,CKB3;
theorems SF_MASTR,FUNCT_1,FUNCT_7,FUNCOP_1,RELAT_1,SCMFSA6A,FUNCT_4,ENUMSET1,AMI_3,NAT_1,TARSKI,INT_1,GRFUNC_1,SCMFSA_2,SCMFSA6B,SCMFSA7B,SCMFSA8B,SCMFSA8A,SCMFSA8C,SCMFSA_3,SCMFSA6C,CARD_1,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,VALUED_1,XREAL_0,PBOOLE,PARTFUN1,AFINSQ_1,FINSEQ_4,COMPOS_1,SFMASTR1,EXTPRO_1,AMISTD_2,AMISTD_5,ZFMISC_1,MEMSTR_0,AMISTD_1,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB13,CKB14,CKB16,CKB17;
schemes NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMFSA_2,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8C,SCMFSA_9,ORDINAL1,RELAT_1,SCMFSA10,AMISTD_2,COMPOS_1,SFMASTR1,EXTPRO_1,SCMFSA_4,PBOOLE,FUNCT_4,FUNCT_7,PRE_POLY,STRUCT_0,FUNCOP_1,MEMSTR_0,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15;
constructors SFMASTR1,DOMAIN_1,XXREAL_0,REAL_1,SCM_1,SCMFSA_3,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA8C,AMISTD_1,AMISTD_2,NAT_D,RELSET_1,VALUED_1,SCMFSA7B,SCMFSA_9,AMISTD_5,PBOOLE,PRE_POLY,MEMSTR_0,CKB1,CKB2,CKB3;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve I for (Program of ( SCM+FSA ));
reserve s1 for (State of ( SCM+FSA ));
reserve s2 for (State of ( SCM+FSA ));
reserve p1 for (Instruction-Sequence of ( SCM+FSA ));
reserve p2 for (Instruction-Sequence of ( SCM+FSA ));
set iS = ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) );
theorem
Th15: (for I being  InitHalting (Program of ( SCM+FSA )) holds (((((( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) c= s1 & ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) c= s2) & I c= p1) & I c= p2) & s1 = s2) implies (( LifeSpan (p1,s1) ) = ( LifeSpan (p2,s2) ) & ( Result (p1,s1) ) = ( Result (p2,s2) ))))
proof
let I being  InitHalting (Program of ( SCM+FSA ));
assume that
A1: iS c= s1
and
A2: iS c= s2
and
A3: I c= p1
and
A4: I c= p2
and
A5: s1 = s2;
A6: p2 halts_on s2 by A2,CKB2:def 1,A4;
A7: p1 halts_on s1 by A1,CKB2:def 1,A3;
A8:now
let l being (Element of ( NAT ));
assume A9: ( CurInstr (p2,( Comput (p2,s2,l) )) ) = ( halt ( SCM+FSA ) );
( CurInstr (p1,( Comput (p1,s1,l) )) ) = ( CurInstr (p2,( Comput (p2,s2,l) )) ) by A1,A5,CKB17:1,A3,A4;
hence ( LifeSpan (p1,s1) ) <= l by A7,A9,EXTPRO_1:def 15;
end;
( CurInstr (p2,( Comput (p2,s2,( LifeSpan (p1,s1) )) )) ) = ( CurInstr (p1,( Comput (p1,s1,( LifeSpan (p1,s1) )) )) ) by A1,A5,CKB17:1,A3,A4
.= ( halt ( SCM+FSA ) ) by A7,EXTPRO_1:def 15;
hence A10: ( LifeSpan (p1,s1) ) = ( LifeSpan (p2,s2) ) by A8,A6,EXTPRO_1:def 15;
p2 halts_on s2 by A2,CKB2:def 1,A4;
then A11: ( Result (p2,s2) ) = ( Comput (p2,s2,( LifeSpan (p1,s1) )) ) by A10,EXTPRO_1:23;
p1 halts_on s1 by A1,CKB2:def 1,A3;
then ( Result (p1,s1) ) = ( Comput (p1,s1,( LifeSpan (p1,s1) )) ) by EXTPRO_1:23;
hence thesis by A1,A5,A11,CKB17:1,A3,A4;
end;
