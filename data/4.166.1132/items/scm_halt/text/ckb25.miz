environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMFSA_2,FSM_1,SCMFSA6A,TARSKI,CIRCUIT2,RELAT_1,FUNCT_1,CARD_1,FUNCOP_1,FUNCT_4,XBOOLE_0,SCMFSA6B,NAT_1,XXREAL_0,ARYTM_3,AMI_3,SF_MASTR,GRAPHSP,MSUALG_1,AMISTD_2,TURING_1,STRUCT_0,VALUED_1,SCMFSA6C,SCMFSA7B,UNIALG_2,SCMFSA8B,ARYTM_1,SCMFSA8C,SCMFSA8A,SCM_HALT,PARTFUN1,SCMNORM,RELOC,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,FINSEQ_1,FUNCT_1,PARTFUN1,FUNCT_4,FUNCT_7,PBOOLE,VALUED_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,SCMFSA_2,FUNCOP_1,SCMFSA6B,SCMFSA6A,SF_MASTR,SCMFSA8A,SCMFSA8B,SFMASTR1,SCMFSA8C,SCMFSA7B,NAT_D,SCMFSA_3,SCMFSA6C,XXREAL_0,CKB1,CKB2,CKB3;
definitions FUNCOP_1,COMPOS_1,EXTPRO_1,XBOOLE_0,SCMFSA_2,SCMFSA8C,SCMFSA6A,AMISTD_2,SCMFSA7B,MEMSTR_0,CKB1,CKB2,CKB3;
theorems SF_MASTR,FUNCT_1,FUNCT_7,FUNCOP_1,RELAT_1,SCMFSA6A,FUNCT_4,ENUMSET1,AMI_3,NAT_1,TARSKI,INT_1,GRFUNC_1,SCMFSA_2,SCMFSA6B,SCMFSA7B,SCMFSA8B,SCMFSA8A,SCMFSA8C,SCMFSA_3,SCMFSA6C,CARD_1,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,VALUED_1,XREAL_0,PBOOLE,PARTFUN1,AFINSQ_1,FINSEQ_4,COMPOS_1,SFMASTR1,EXTPRO_1,AMISTD_2,AMISTD_5,ZFMISC_1,MEMSTR_0,AMISTD_1,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB13,CKB14,CKB16,CKB17,CKB18,CKB21,CKB23,CKB24;
schemes NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMFSA_2,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8C,SCMFSA_9,ORDINAL1,RELAT_1,SCMFSA10,AMISTD_2,COMPOS_1,SFMASTR1,EXTPRO_1,SCMFSA_4,PBOOLE,FUNCT_4,FUNCT_7,PRE_POLY,STRUCT_0,FUNCOP_1,MEMSTR_0,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB19,CKB20,CKB22;
constructors SFMASTR1,DOMAIN_1,XXREAL_0,REAL_1,SCM_1,SCMFSA_3,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA8C,AMISTD_1,AMISTD_2,NAT_D,RELSET_1,VALUED_1,SCMFSA7B,SCMFSA_9,AMISTD_5,PBOOLE,PRE_POLY,MEMSTR_0,CKB1,CKB2,CKB3;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve I for (Program of ( SCM+FSA ));
reserve s for (State of ( SCM+FSA ));
reserve p for (Instruction-Sequence of ( SCM+FSA ));
set iS = ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) );
reconsider EP = ( {} ) as (PartState of ( SCM+FSA )) by FUNCT_1:104,RELAT_1:171;
theorem
Th22: (for I being  InitClosed (Program of ( SCM+FSA )) holds (((( p +* I ) halts_on s & ( Directed I ) c= p) & ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) c= s) implies ( DataPart ( Comput (p,s,( LifeSpan (( p +* I ),s) )) ) ) = ( DataPart ( Comput (p,s,( ( LifeSpan (( p +* I ),s) ) + 1 )) ) )))
proof
set A = ( NAT );
let I being  InitClosed (Program of ( SCM+FSA ));
assume that
A1: ( p +* I ) halts_on s
and
A3: ( Directed I ) c= p
and
A4: iS c= s;
P1: s = ( s +* ( {} ) ) by FUNCT_4:21;
set sISA0 = ( s +* iS );
set pISA0 = ( p +* I );
set s2 = ( sISA0 +* EP );
set p2 = ( pISA0 +* ( Directed I ) );
A5: iS c= sISA0 by FUNCT_4:25;
A6: I c= ( p +* I ) by FUNCT_4:25;
A7: sISA0 = s by A4,FUNCT_4:98;
reconsider sISA0 as (State of ( SCM+FSA ));
set m = ( LifeSpan (pISA0,sISA0) );
set l1 = ( IC ( Comput (pISA0,sISA0,m) ) );
A8: l1 in ( dom I ) by A5,CKB1:def 1,A6;
set s2 = ( sISA0 +* EP );
set p2 = ( pISA0 +* ( Directed I ) );
now
set s1 = ( sISA0 +* EP );
set p1 = ( pISA0 +* ( I ';' I ) );
let k being (Element of ( NAT ));
defpred X[ Nat ]
 means
($1 <= k implies ( Comput (p1,s1,$1) ) = ( Comput (p2,s2,$1) ));
assume A10: k <= m;
A11: (for n being (Element of ( NAT )) holds (X[ n ] implies X[ ( n + 1 ) ]))
proof
A12: ( Directed I ) c= ( I ';' I ) by SCMFSA6A:16;
let n being (Element of ( NAT ));
A13: ( dom I ) c= ( dom ( I ';' I ) ) by SCMFSA6A:17;
assume A14: (n <= k implies ( Comput (p1,s1,n) ) = ( Comput (p2,s2,n) ));
A15: ( Comput (p2,s2,( n + 1 )) ) = ( Following (p2,( Comput (p2,s2,n) )) ) by EXTPRO_1:3
.= ( Exec (( CurInstr (p2,( Comput (p2,s2,n) )) ),( Comput (p2,s2,n) )) );
A16: ( Comput (p1,s1,( n + 1 )) ) = ( Following (p1,( Comput (p1,s1,n) )) ) by EXTPRO_1:3
.= ( Exec (( CurInstr (p1,( Comput (p1,s1,n) )) ),( Comput (p1,s1,n) )) );
A17: n <= ( n + 1 ) by NAT_1:12;
assume A18: ( n + 1 ) <= k;
n <= k by A18,A17,XXREAL_0:2;
then ( Comput (pISA0,sISA0,n) ) = ( Comput (p1,s1,n) ) by A1,A5,CKB23:1,A6,P1,A7,A10,XXREAL_0:2;
then A20: ( IC ( Comput (p1,s1,n) ) ) in ( dom I ) by A5,CKB1:def 1,A6;
then A21: ( IC ( Comput (p2,s2,n) ) ) in ( dom ( Directed I ) ) by A18,A14,A17,FUNCT_4:99,XXREAL_0:2;
A22: ( CurInstr (p2,( Comput (p2,s2,n) )) ) = ( p2 . ( IC ( Comput (p2,s2,n) ) ) ) by PBOOLE:143
.= ( ( Directed I ) . ( IC ( Comput (p2,s2,n) ) ) ) by A21,FUNCT_4:13;
( CurInstr (p1,( Comput (p1,s1,n) )) ) = ( p1 . ( IC ( Comput (p1,s1,n) ) ) ) by PBOOLE:143
.= ( ( I ';' I ) . ( IC ( Comput (p1,s1,n) ) ) ) by A13,A20,FUNCT_4:13
.= ( ( Directed I ) . ( IC ( Comput (p1,s1,n) ) ) ) by A12,A18,A21,A14,A17,GRFUNC_1:2,XXREAL_0:2;
hence thesis by A14,A18,A17,A22,A16,A15,XXREAL_0:2;
end;
(( Comput (p1,s1,( 0 )) ) = s1 & ( Comput (p2,s2,( 0 )) ) = s2) by EXTPRO_1:2;
then A23: X[ ( 0 ) ];
(for n being (Element of ( NAT )) holds X[ n ]) from NAT_1:sch 1(A23,A11);
then ( Comput (p1,s1,k) ) = ( Comput (p2,s2,k) );
hence ( Comput (pISA0,sISA0,k) ) = ( Comput (p2,s2,k) ) by A1,A5,A7,A10,CKB23:1,A6,P1;
end;
then B25: ( Comput (pISA0,sISA0,m) ) = ( Comput (p2,s2,m) );
A26: ( I . l1 ) = ( pISA0 . l1 ) by A8,A6,GRFUNC_1:2
.= ( CurInstr (pISA0,( Comput (pISA0,sISA0,m) )) ) by PBOOLE:143
.= ( halt ( SCM+FSA ) ) by A1,A7,EXTPRO_1:def 15;
( IC ( Comput (p2,s2,m) ) ) in ( dom ( Directed I ) ) by A8,B25,FUNCT_4:99;
then A27: ( p2 . l1 ) = ( ( Directed I ) . l1 ) by B25,FUNCT_4:13
.= ( goto ( card I ) ) by A8,A26,FUNCT_4:106;
( Comput (p2,s2,( m + 1 )) ) = ( Following (p2,( Comput (p2,s2,m) )) ) by EXTPRO_1:3
.= ( Exec (( goto ( card I ) ),( Comput (p2,s2,m) )) ) by B25,A27,PBOOLE:143;
then A28: ((for a being Int-Location holds ( ( Comput (p2,s2,( m + 1 )) ) . a ) = ( ( Comput (p2,s2,m) ) . a )) & (for f being FinSeq-Location holds ( ( Comput (p2,s2,( m + 1 )) ) . f ) = ( ( Comput (p2,s2,m) ) . f ))) by SCMFSA_2:69;
( dom ( Directed I ) ) = ( dom I ) by FUNCT_4:99;
then ( ( p +* I ) +* ( Directed I ) ) = ( p +* ( Directed I ) ) by FUNCT_4:74
.= p by A3,FUNCT_4:98;
hence thesis by A7,A28,P1,SCMFSA6A:7;
end;
