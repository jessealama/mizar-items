environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMFSA_2,FSM_1,SCMFSA6A,TARSKI,CIRCUIT2,RELAT_1,FUNCT_1,CARD_1,FUNCOP_1,FUNCT_4,XBOOLE_0,SCMFSA6B,NAT_1,XXREAL_0,ARYTM_3,AMI_3,SF_MASTR,GRAPHSP,MSUALG_1,AMISTD_2,TURING_1,STRUCT_0,VALUED_1,SCMFSA6C,SCMFSA7B,UNIALG_2,SCMFSA8B,ARYTM_1,SCMFSA8C,SCMFSA8A,SCM_HALT,PARTFUN1,SCMNORM,RELOC,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,FINSEQ_1,FUNCT_1,PARTFUN1,FUNCT_4,FUNCT_7,PBOOLE,VALUED_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,SCMFSA_2,FUNCOP_1,SCMFSA6B,SCMFSA6A,SF_MASTR,SCMFSA8A,SCMFSA8B,SFMASTR1,SCMFSA8C,SCMFSA7B,NAT_D,SCMFSA_3,SCMFSA6C,XXREAL_0,CKB1,CKB2,CKB3;
definitions FUNCOP_1,COMPOS_1,EXTPRO_1,XBOOLE_0,SCMFSA_2,SCMFSA8C,SCMFSA6A,AMISTD_2,SCMFSA7B,MEMSTR_0,CKB1,CKB2,CKB3;
theorems SF_MASTR,FUNCT_1,FUNCT_7,FUNCOP_1,RELAT_1,SCMFSA6A,FUNCT_4,ENUMSET1,AMI_3,NAT_1,TARSKI,INT_1,GRFUNC_1,SCMFSA_2,SCMFSA6B,SCMFSA7B,SCMFSA8B,SCMFSA8A,SCMFSA8C,SCMFSA_3,SCMFSA6C,CARD_1,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,VALUED_1,XREAL_0,PBOOLE,PARTFUN1,AFINSQ_1,FINSEQ_4,COMPOS_1,SFMASTR1,EXTPRO_1,AMISTD_2,AMISTD_5,ZFMISC_1,MEMSTR_0,AMISTD_1,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB13,CKB14;
schemes NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMFSA_2,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8C,SCMFSA_9,ORDINAL1,RELAT_1,SCMFSA10,AMISTD_2,COMPOS_1,SFMASTR1,EXTPRO_1,SCMFSA_4,PBOOLE,FUNCT_4,FUNCT_7,PRE_POLY,STRUCT_0,FUNCOP_1,MEMSTR_0,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15;
constructors SFMASTR1,DOMAIN_1,XXREAL_0,REAL_1,SCM_1,SCMFSA_3,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA8C,AMISTD_1,AMISTD_2,NAT_D,RELSET_1,VALUED_1,SCMFSA7B,SCMFSA_9,AMISTD_5,PBOOLE,PRE_POLY,MEMSTR_0,CKB1,CKB2,CKB3;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve s1 for (State of ( SCM+FSA ));
reserve s2 for (State of ( SCM+FSA ));
reserve p1 for (Instruction-Sequence of ( SCM+FSA ));
reserve p2 for (Instruction-Sequence of ( SCM+FSA ));
set iS = ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) );
ICiS: ( IC iS ) = ( 0 ) by MEMSTR_0:def 8;
theorem
Th12: (for J being  InitHalting (Program of ( SCM+FSA )) holds ((( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) c= s1 & J c= p1) implies (for n being (Element of ( NAT )) holds (((( Reloc (J,n) ) c= p2 & ( IC s2 ) = n) & ( DataPart s1 ) = ( DataPart s2 )) implies (for i being (Element of ( NAT )) holds ((( ( IC ( Comput (p1,s1,i) ) ) + n ) = ( IC ( Comput (p2,s2,i) ) ) & ( IncAddr (( CurInstr (p1,( Comput (p1,s1,i) )) ),n) ) = ( CurInstr (p2,( Comput (p2,s2,i) )) )) & ( DataPart ( Comput (p1,s1,i) ) ) = ( DataPart ( Comput (p2,s2,i) ) )))))))
proof
let J being  InitHalting (Program of ( SCM+FSA ));
assume that
A1: iS c= s1
and
A2: J c= p1;
let n being (Element of ( NAT ));
assume that
A3: ( Reloc (J,n) ) c= p2
and
A4: ( IC s2 ) = n
and
A5: ( DataPart s1 ) = ( DataPart s2 );
A6: ( DataPart ( Comput (p1,s1,( 0 )) ) ) = ( DataPart s2 ) by A5,EXTPRO_1:2
.= ( DataPart ( Comput (p2,s2,( 0 )) ) ) by EXTPRO_1:2;
defpred P[ Nat ]
 means
((( ( IC ( Comput (p1,s1,$1) ) ) + n ) = ( IC ( Comput (p2,s2,$1) ) ) & ( IncAddr (( CurInstr (p1,( Comput (p1,s1,$1) )) ),n) ) = ( CurInstr (p2,( Comput (p2,s2,$1) )) )) & ( DataPart ( Comput (p1,s1,$1) ) ) = ( DataPart ( Comput (p2,s2,$1) ) ));
A7: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being (Element of ( NAT ));
A8: ( Comput (p1,s1,( k + 1 )) ) = ( Following (p1,( Comput (p1,s1,k) )) ) by EXTPRO_1:3
.= ( Exec (( CurInstr (p1,( Comput (p1,s1,k) )) ),( Comput (p1,s1,k) )) );
reconsider l = ( IC ( Comput (p1,s1,( k + 1 )) ) ) as (Element of ( NAT ));
reconsider j = ( CurInstr (p1,( Comput (p1,s1,( k + 1 )) )) ) as (Instruction of ( SCM+FSA ));
A9: ( Comput (p2,s2,( k + 1 )) ) = ( Following (p2,( Comput (p2,s2,k) )) ) by EXTPRO_1:3
.= ( Exec (( CurInstr (p2,( Comput (p2,s2,k) )) ),( Comput (p2,s2,k) )) );
A10: ( IC ( Comput (p1,s1,( k + 1 )) ) ) in ( dom J ) by A1,CKB1:def 1,A2;
assume A11: P[ k ];
hence ( ( IC ( Comput (p1,s1,( k + 1 )) ) ) + n ) = ( IC ( Comput (p2,s2,( k + 1 )) ) ) by A8,A9,SCMFSA6A:8;
then A12: ( IC ( Comput (p2,s2,( k + 1 )) ) ) in ( dom ( Reloc (J,n) ) ) by A10,COMPOS_1:46;
A13: l in ( dom J ) by A1,CKB1:def 1,A2;
j = ( p1 . ( IC ( Comput (p1,s1,( k + 1 )) ) ) ) by PBOOLE:143
.= ( J . l ) by A10,A2,GRFUNC_1:2;
hence ( IncAddr (( CurInstr (p1,( Comput (p1,s1,( k + 1 )) )) ),n) ) = ( ( Reloc (J,n) ) . ( l + n ) ) by A13,COMPOS_1:35
.= ( ( Reloc (J,n) ) . ( IC ( Comput (p2,s2,( k + 1 )) ) ) ) by A11,A8,A9,SCMFSA6A:8
.= ( p2 . ( IC ( Comput (p2,s2,( k + 1 )) ) ) ) by A12,A3,GRFUNC_1:2
.= ( CurInstr (p2,( Comput (p2,s2,( k + 1 )) )) ) by PBOOLE:143;
thus thesis by A11,A8,A9,SCMFSA6A:8;
end;
A14: ( 0 ) in ( dom J ) by AFINSQ_1:65;
A15: ( 0 ) in ( dom J ) by AFINSQ_1:65;
B16: ( IC ( SCM+FSA ) ) in ( dom iS ) by MEMSTR_0:48;
then A17: ( p1 . ( IC s1 ) ) = ( p1 . ( IC iS ) ) by A1,GRFUNC_1:2
.= ( J . ( 0 ) ) by A15,A2,ICiS,GRFUNC_1:2;
let i being (Element of ( NAT ));
( 0 ) in ( dom J ) by AFINSQ_1:65;
then A18: ( ( 0 ) + n ) in ( dom ( Reloc (J,n) ) ) by COMPOS_1:46;
A19: ( IC ( Comput (p1,s1,( 0 )) ) ) = ( s1 . ( IC ( SCM+FSA ) ) ) by EXTPRO_1:2
.= ( 0 ) by ICiS,A1,B16,GRFUNC_1:2;
A20: ( p2 /. ( IC s2 ) ) = ( p2 . ( IC s2 ) ) by PBOOLE:143;
A21: ( p1 /. ( IC s1 ) ) = ( p1 . ( IC s1 ) ) by PBOOLE:143;
( IncAddr (( CurInstr (p1,( Comput (p1,s1,( 0 )) )) ),n) ) = ( IncAddr (( CurInstr (p1,s1) ),n) ) by EXTPRO_1:2
.= ( ( Reloc (J,n) ) . ( ( 0 ) + n ) ) by A17,A14,A21,COMPOS_1:35
.= ( CurInstr (p2,s2) ) by A4,A18,A20,A3,GRFUNC_1:2
.= ( CurInstr (p2,( Comput (p2,s2,( 0 )) )) ) by EXTPRO_1:2;
then A22: P[ ( 0 ) ] by A4,A19,A6,EXTPRO_1:2;
(for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A22,A7);
hence thesis;
end;
