environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMFSA_2,FSM_1,SCMFSA6A,TARSKI,CIRCUIT2,RELAT_1,FUNCT_1,CARD_1,FUNCOP_1,FUNCT_4,XBOOLE_0,SCMFSA6B,NAT_1,XXREAL_0,ARYTM_3,AMI_3,SF_MASTR,GRAPHSP,MSUALG_1,AMISTD_2,TURING_1,STRUCT_0,VALUED_1,SCMFSA6C,SCMFSA7B,UNIALG_2,SCMFSA8B,ARYTM_1,SCMFSA8C,SCMFSA8A,SCM_HALT,PARTFUN1,SCMNORM,RELOC,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,FINSEQ_1,FUNCT_1,PARTFUN1,FUNCT_4,FUNCT_7,PBOOLE,VALUED_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,SCMFSA_2,FUNCOP_1,SCMFSA6B,SCMFSA6A,SF_MASTR,SCMFSA8A,SCMFSA8B,SFMASTR1,SCMFSA8C,SCMFSA7B,NAT_D,SCMFSA_3,SCMFSA6C,XXREAL_0,CKB1,CKB2,CKB3;
definitions FUNCOP_1,COMPOS_1,EXTPRO_1,XBOOLE_0,SCMFSA_2,SCMFSA8C,SCMFSA6A,AMISTD_2,SCMFSA7B,MEMSTR_0,CKB1,CKB2,CKB3;
theorems SF_MASTR,FUNCT_1,FUNCT_7,FUNCOP_1,RELAT_1,SCMFSA6A,FUNCT_4,ENUMSET1,AMI_3,NAT_1,TARSKI,INT_1,GRFUNC_1,SCMFSA_2,SCMFSA6B,SCMFSA7B,SCMFSA8B,SCMFSA8A,SCMFSA8C,SCMFSA_3,SCMFSA6C,CARD_1,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,VALUED_1,XREAL_0,PBOOLE,PARTFUN1,AFINSQ_1,FINSEQ_4,COMPOS_1,SFMASTR1,EXTPRO_1,AMISTD_2,AMISTD_5,ZFMISC_1,MEMSTR_0,AMISTD_1,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB13,CKB14,CKB16,CKB17,CKB18,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB31;
schemes NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMFSA_2,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8C,SCMFSA_9,ORDINAL1,RELAT_1,SCMFSA10,AMISTD_2,COMPOS_1,SFMASTR1,EXTPRO_1,SCMFSA_4,PBOOLE,FUNCT_4,FUNCT_7,PRE_POLY,STRUCT_0,FUNCOP_1,MEMSTR_0,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB19,CKB20,CKB22,CKB29;
constructors SFMASTR1,DOMAIN_1,XXREAL_0,REAL_1,SCM_1,SCMFSA_3,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA8C,AMISTD_1,AMISTD_2,NAT_D,RELSET_1,VALUED_1,SCMFSA7B,SCMFSA_9,AMISTD_5,PBOOLE,PRE_POLY,MEMSTR_0,CKB1,CKB2,CKB3;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve I for (Program of ( SCM+FSA ));
reserve s for (State of ( SCM+FSA ));
reserve p for (Instruction-Sequence of ( SCM+FSA ));
set iS = ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) );
theorem
Th28: (for I being  keepInt0_1  InitHalting (Program of ( SCM+FSA )) holds (for J being  InitHalting (Program of ( SCM+FSA )) holds ( LifeSpan (( p +* ( I ';' J ) ),( Initialized s )) ) = ( ( ( LifeSpan (( p +* I ),( Initialized s )) ) + 1 ) + ( LifeSpan (( ( p +* I ) +* J ),( ( Result (( p +* I ),( Initialized s )) ) +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) )) ) )))
proof
let I being  keepInt0_1  InitHalting (Program of ( SCM+FSA ));
let J being  InitHalting (Program of ( SCM+FSA ));
set inI = iS;
set inIJ = iS;
set inJ = iS;
A1: (inJ c= ( ( Result (( ( p +* ( I ';' J ) ) +* I ),( s +* inIJ )) ) +* inJ ) & inJ c= ( ( Result (( p +* I ),( s +* inI )) ) +* inJ )) by FUNCT_4:25;
A2: (J c= ( ( ( p +* ( I ';' J ) ) +* I ) +* J ) & J c= ( ( p +* I ) +* J )) by FUNCT_4:25;
A4: (inI c= ( s +* inI ) & inI c= ( s +* inIJ )) by FUNCT_4:25;
A5: (I c= ( p +* I ) & I c= ( ( p +* ( I ';' J ) ) +* I )) by FUNCT_4:25;
then A6: ( ( Result (( ( p +* ( I ';' J ) ) +* I ),( s +* inIJ )) ) +* inJ ) = ( ( Result (( p +* I ),( s +* inI )) ) +* inJ ) by CKB18:1,A4;
A7: ( I ';' J ) c= ( p +* ( I ';' J ) ) by FUNCT_4:25;
inIJ c= ( s +* inIJ ) by FUNCT_4:25;
then A8: ( LifeSpan (( p +* ( I ';' J ) ),( s +* inIJ )) ) = ( ( ( LifeSpan (( ( p +* ( I ';' J ) ) +* I ),( s +* inIJ )) ) + 1 ) + ( LifeSpan (( ( ( p +* ( I ';' J ) ) +* I ) +* J ),( ( Result (( ( p +* ( I ';' J ) ) +* I ),( s +* inIJ )) ) +* inJ )) ) ) by CKB28:1,A7;
( LifeSpan (( p +* I ),( s +* inI )) ) = ( LifeSpan (( ( p +* ( I ';' J ) ) +* I ),( s +* inIJ )) ) by A4,CKB18:1,A5;
hence thesis by A8,A1,A6,CKB18:1,A2;
end;
