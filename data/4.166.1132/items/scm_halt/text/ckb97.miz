environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMFSA_2,FSM_1,SCMFSA6A,TARSKI,CIRCUIT2,RELAT_1,FUNCT_1,CARD_1,FUNCOP_1,FUNCT_4,XBOOLE_0,SCMFSA6B,NAT_1,XXREAL_0,ARYTM_3,AMI_3,SF_MASTR,GRAPHSP,MSUALG_1,AMISTD_2,TURING_1,STRUCT_0,VALUED_1,SCMFSA6C,SCMFSA7B,UNIALG_2,SCMFSA8B,ARYTM_1,SCMFSA8C,SCMFSA8A,SCM_HALT,PARTFUN1,SCMNORM,RELOC,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,FINSEQ_1,FUNCT_1,PARTFUN1,FUNCT_4,FUNCT_7,PBOOLE,VALUED_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,SCMFSA_2,FUNCOP_1,SCMFSA6B,SCMFSA6A,SF_MASTR,SCMFSA8A,SCMFSA8B,SFMASTR1,SCMFSA8C,SCMFSA7B,NAT_D,SCMFSA_3,SCMFSA6C,XXREAL_0,CKB1,CKB2,CKB3,CKB47,CKB48;
definitions FUNCOP_1,COMPOS_1,EXTPRO_1,XBOOLE_0,SCMFSA_2,SCMFSA8C,SCMFSA6A,AMISTD_2,SCMFSA7B,MEMSTR_0,CKB1,CKB2,CKB3,CKB47,CKB48;
theorems SF_MASTR,FUNCT_1,FUNCT_7,FUNCOP_1,RELAT_1,SCMFSA6A,FUNCT_4,ENUMSET1,AMI_3,NAT_1,TARSKI,INT_1,GRFUNC_1,SCMFSA_2,SCMFSA6B,SCMFSA7B,SCMFSA8B,SCMFSA8A,SCMFSA8C,SCMFSA_3,SCMFSA6C,CARD_1,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,VALUED_1,XREAL_0,PBOOLE,PARTFUN1,AFINSQ_1,FINSEQ_4,COMPOS_1,SFMASTR1,EXTPRO_1,AMISTD_2,AMISTD_5,ZFMISC_1,MEMSTR_0,AMISTD_1,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB13,CKB14,CKB16,CKB17,CKB18,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB31,CKB32,CKB33,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB95,CKB96;
schemes NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMFSA_2,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8C,SCMFSA_9,ORDINAL1,RELAT_1,SCMFSA10,AMISTD_2,COMPOS_1,SFMASTR1,EXTPRO_1,SCMFSA_4,PBOOLE,FUNCT_4,FUNCT_7,PRE_POLY,STRUCT_0,FUNCOP_1,MEMSTR_0,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB19,CKB20,CKB22,CKB29,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB52,CKB53,CKB54,CKB76,CKB77,CKB78,CKB94;
constructors SFMASTR1,DOMAIN_1,XXREAL_0,REAL_1,SCM_1,SCMFSA_3,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA8C,AMISTD_1,AMISTD_2,NAT_D,RELSET_1,VALUED_1,SCMFSA7B,SCMFSA_9,AMISTD_5,PBOOLE,PRE_POLY,MEMSTR_0,CKB1,CKB2,CKB3,CKB47,CKB48;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve I for (Program of ( SCM+FSA ));
reserve s for (State of ( SCM+FSA ));
reserve s2 for (State of ( SCM+FSA ));
reserve a for Int-Location;
reserve f for FinSeq-Location;
reserve p for (Instruction-Sequence of ( SCM+FSA ));
reserve p2 for (Instruction-Sequence of ( SCM+FSA ));
set SA0 = ( Start-At (( 0 ),( SCM+FSA )) );
set iS = ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) );
theorem
Th79: (for s being (State of ( SCM+FSA )) holds (for I being  good  InitHalting (Program of ( SCM+FSA )) holds (for a being  read-write Int-Location holds (((not I destroy a) & ( s . a ) > ( 0 )) implies (( ( IExec (( I ';' ( SubFrom (a,( intloc ( 0 ) )) ) ),p,s) ) . a ) = ( ( s . a ) - 1 ) & ( DataPart ( IExec (( Times (a,I) ),p,s) ) ) = ( DataPart ( IExec (( Times (a,I) ),p,( IExec (( I ';' ( SubFrom (a,( intloc ( 0 ) )) ) ),p,s) )) ) ))))))
proof
let s being (State of ( SCM+FSA ));
let I being  good  InitHalting (Program of ( SCM+FSA ));
let a being  read-write Int-Location;
assume A1: (not I destroy a);
reconsider J3 = ( Macro ( SubFrom (a,( intloc ( 0 ) )) ) ) as  good (Program of ( SCM+FSA ));
set I1 = ( I ';' ( SubFrom (a,( intloc ( 0 ) )) ) );
set ss = ( IExec (I1,p,s) );
set pp = p;
I1 is_closed_onInit s,p by CKB49:1;
then A2: I1 is_closed_on ( Initialized s ),p by CKB57:1;
I1 is_halting_onInit s,p by CKB50:1;
then A3: (I1 = ( I ';' J3 ) & I1 is_halting_on ( Initialized s ),p) by CKB58:1;
then A4: ( ss . ( intloc ( 0 ) ) ) = 1 by A2,SCMFSA8C:67;
set P = ( if=0 (a,( Goto 2 ),( I ';' ( SubFrom (a,( intloc ( 0 ) )) ) )) );
set s0 = ( Initialized s );
set p0 = p;
assume A6: ( s . a ) > ( 0 );
then A7: ( s0 . a ) > ( 0 ) by SCMFSA6C:3;
then consider s2 being (State of ( SCM+FSA )),p2 being (Instruction-Sequence of ( SCM+FSA )),k being (Element of ( NAT )) such that A8: s2 = ( Initialized s0 ) and A9: p2 = ( p0 +* ( loop P ) ) and k = ( ( LifeSpan (( p0 +* P ),( s0 +* iS )) ) + 1 ) and A10: ( ( Comput (p2,s2,k) ) . a ) = ( ( s0 . a ) - 1 ) and A11: ( ( Comput (p2,s2,k) ) . ( intloc ( 0 ) ) ) = 1 and A12: (for b being  read-write Int-Location holds (b <> a implies ( ( Comput (p2,s2,k) ) . b ) = ( ( IExec (I,p0,s0) ) . b ))) and A13: (for f being FinSeq-Location holds ( ( Comput (p2,s2,k) ) . f ) = ( ( IExec (I,p0,s0) ) . f )) and A14: ( IC ( Comput (p2,s2,k) ) ) = ( 0 ) and A15: (for n being (Element of ( NAT )) holds (n <= k implies ( IC ( Comput (p2,s2,n) ) ) in ( dom ( loop P ) ))) by A1,CKB95:1;
A16: ( loop P ) c= p2 by A9,FUNCT_4:25;
A18:now
let f being FinSeq-Location;
thus ( ( Comput (p2,s2,k) ) . f ) = ( ( IExec (I,p0,s0) ) . f ) by A13
.= ( ( Exec (( SubFrom (a,( intloc ( 0 ) )) ),( IExec (I,p0,s0) )) ) . f ) by SCMFSA_2:65
.= ( ( IExec (I1,p0,s0) ) . f ) by CKB46:1
.= ( ( IExec (I1,p,s) ) . f ) by SCMFSA8C:3;
end;
XX2: ( Initialize s0 ) = ( ( s0 +* iS ) +* SA0 ) by FUNCT_4:93
.= ( s0 +* ( iS +* SA0 ) ) by FUNCT_4:14
.= s2 by A8,FUNCT_4:93;
thus A19: ( ss . a ) = ( ( Exec (( SubFrom (a,( intloc ( 0 ) )) ),( IExec (I,p,s) )) ) . a ) by CKB45:1
.= ( ( ( IExec (I,p,s) ) . a ) - ( ( IExec (I,p,s) ) . ( intloc ( 0 ) ) ) ) by SCMFSA_2:65
.= ( ( ( IExec (I,p,s) ) . a ) - 1 ) by CKB21:1
.= ( ( s0 . a ) - 1 ) by A1,CKB83:1
.= ( ( s . a ) - 1 ) by SCMFSA6C:3;
now
let b being Int-Location;
per cases ;
suppose b = ( intloc ( 0 ) );

hence ( ( Comput (p2,s2,k) ) . b ) = ( ( IExec (I1,p,s) ) . b ) by A11,A3,A2,SCMFSA8C:67;
end;
suppose b = a;

hence ( ( Comput (p2,s2,k) ) . b ) = ( ( IExec (I1,p,s) ) . b ) by A10,A19,SCMFSA6C:3;
end;
suppose A20: (b <> a & b <> ( intloc ( 0 ) ));

then reconsider bb = b as  read-write Int-Location by SF_MASTR:def 5;
thus ( ( Comput (p2,s2,k) ) . b ) = ( ( IExec (I,p0,s0) ) . bb ) by A12,A20
.= ( ( Exec (( SubFrom (a,( intloc ( 0 ) )) ),( IExec (I,p0,s0) )) ) . b ) by A20,SCMFSA_2:65
.= ( ( IExec (I1,p0,s0) ) . b ) by CKB45:1
.= ( ( IExec (I1,p,s) ) . b ) by SCMFSA8C:3;
end;
end;
then A21: ( DataPart ( Comput (p2,s2,k) ) ) = ( DataPart ss ) by A18,SCMFSA6A:7;
set s21 = ( Initialize s0 );
set p21 = ( p0 +* ( ( loop P ) ';' ( Stop ( SCM+FSA ) ) ) );
set ss0 = ( Initialized ss );
set s31 = ( Initialize ss0 );
set p31 = ( pp +* ( ( loop P ) ';' ( Stop ( SCM+FSA ) ) ) );
( 0 ) in ( dom P ) by SCMFSA8C:25;
then A22: ( 0 ) in ( dom ( loop P ) ) by FUNCT_4:99;
A23: ( s0 . ( intloc ( 0 ) ) ) = 1 by SCMFSA6A:38;
then A24: ( loop P ) is_pseudo-closed_on s0,p0 by A1,A7,CKB90:1;
A25: ( Directed ( loop P ) ) = ( loop P ) by SCMFSA6A:22;
then A26: ( Directed ( loop P ) ) is_pseudo-closed_on s0,p0 by A1,A23,A7,CKB90:1;
A27: ( DataPart ( IExec (( Times (a,I) ),p0,s0) ) ) = ( DataPart ( IExec (( ( loop P ) ';' ( Stop ( SCM+FSA ) ) ),p0,s0) ) ) by A1,A23,A7,A25,CKB90:1,SCMFSA8C:40;
per cases ;
suppose A28: ( ss . a ) = ( 0 );

A29: ( P . ( ( card I1 ) + 3 ) ) = ( goto ( ( card I1 ) + 5 ) ) by SCMFSA8C:36;
A30: ( ( card I1 ) + ( 3 + 2 ) ) = ( ( ( card I1 ) + 1 ) + 4 )
.= ( ( ( card ( Goto 2 ) ) + ( card I1 ) ) + 4 ) by SCMFSA8A:15
.= ( card P ) by SCMFSA8B:11
.= ( card ( dom P ) ) by CARD_1:62
.= ( card ( dom ( loop P ) ) ) by FUNCT_4:99
.= ( card ( loop P ) ) by CARD_1:62;
then ( ( ( card I1 ) + 3 ) + ( 0 ) ) < ( card ( loop P ) ) by XREAL_1:6;
then A31: ( ( card I1 ) + 3 ) in ( dom ( loop P ) ) by AFINSQ_1:66;
( p2 . ( ( card I1 ) + 3 ) ) = ( ( loop P ) . ( ( card I1 ) + 3 ) ) by A31,A16,GRFUNC_1:2;
then A32: ( p2 . ( ( card I1 ) + 3 ) ) = ( goto ( ( card I1 ) + 5 ) ) by A29,FUNCT_4:105;
A33: ( p2 . ( 0 ) ) = ( ( loop P ) . ( 0 ) ) by A22,A16,GRFUNC_1:2;
A34: ( Comput (p2,s2,( k + 1 )) ) = ( Following (p2,( Comput (p2,s2,k) )) ) by EXTPRO_1:3
.= ( Exec (( p2 . ( 0 ) ),( Comput (p2,s2,k) )) ) by A14,PBOOLE:143;
A35: ( P . ( 0 ) ) = ( a =0_goto ( ( card I1 ) + 3 ) ) by SCMFSA8C:26;
A36: ( p2 . ( 0 ) ) = ( a =0_goto ( ( card I1 ) + 3 ) ) by A33,A35,FUNCT_4:105;
then ( InsCode ( p2 . ( 0 ) ) ) = 7 by SCMFSA_2:24;
then ( InsCode ( p2 . ( 0 ) ) ) in { ( 0 ),6,7,8 } by ENUMSET1:def 2;
then A37: ( DataPart ( Comput (p2,s2,k) ) ) = ( DataPart ( Comput (p2,s2,( k + 1 )) ) ) by A34,SCMFSA8C:12;
A38: ( ( Comput (p2,s2,k) ) . a ) = ( 0 ) by A10,A19,A28,SCMFSA6C:3;
then A39: ( IC ( Comput (p2,s2,( k + 1 )) ) ) = ( ( card I1 ) + 3 ) by A34,A36,SCMFSA_2:70;
D44:now
let n being (Element of ( NAT ));
assume A41: (not ( IC ( Comput (p2,s2,n) ) ) in ( dom ( loop P ) ));
then k < n by A15;
then ( k + 1 ) <= n by INT_1:7;
then ( k + 1 ) < n by A39,A31,A41,XXREAL_0:1;
then ( ( k + 1 ) + 1 ) <= n by INT_1:7;
hence ( k + ( 1 + 1 ) ) <= n;
end;
A42: ( p2 /. ( IC ( Comput (p2,s2,( k + 1 )) ) ) ) = ( p2 . ( IC ( Comput (p2,s2,( k + 1 )) ) ) ) by PBOOLE:143;
A43: ( Comput (p2,s2,( k + ( 1 + 1 ) )) ) = ( Comput (p2,s2,( ( k + 1 ) + 1 )) )
.= ( Following (p2,( Comput (p2,s2,( k + 1 )) )) ) by EXTPRO_1:3
.= ( Exec (( p2 . ( ( card I1 ) + 3 ) ),( Comput (p2,s2,( k + 1 )) )) ) by A38,A34,A36,A42,SCMFSA_2:70;
then B44: ( IC ( Comput (( p0 +* ( loop P ) ),( Initialize s0 ),( k + 2 )) ) ) = ( card ( loop P ) ) by A9,XX2,A30,A32,SCMFSA_2:69;
A44: ( k + 2 ) = ( pseudo-LifeSpan (s0,p0,( loop P )) ) by B44,A9,XX2,A24,D44,SCMFSA8A:def 4;
( InsCode ( p2 . ( ( card I1 ) + 3 ) ) ) = 6 by A32,SCMFSA_2:23;
then ( InsCode ( p2 . ( ( card I1 ) + 3 ) ) ) in { ( 0 ),6,7,8 } by ENUMSET1:def 2;
then A45: ( DataPart ( Comput (p2,s2,k) ) ) = ( DataPart ( Comput (p2,s2,( k + 2 )) ) ) by A37,A43,SCMFSA8C:12;
A46: s21 = ( s +* ( iS +* SA0 ) ) by FUNCT_4:14
.= ( Initialized s ) by FUNCT_4:93;
uu: s2 = ( s0 +* ( iS +* SA0 ) ) by A8,FUNCT_4:93
.= ( ( s0 +* iS ) +* SA0 ) by FUNCT_4:14
.= ( s0 +* SA0 ) by FUNCT_4:93;
thus ( DataPart ( IExec (( Times (a,I) ),p,s) ) ) = ( DataPart ( IExec (( Times (a,I) ),p0,s0) ) ) by SCMFSA8C:3
.= ( DataPart ( IExec (( ( loop P ) ';' ( Stop ( SCM+FSA ) ) ),p,s) ) ) by A27,SCMFSA8C:3
.= ( DataPart ( Result (p21,s21) ) ) by A46,SCMFSA6B:def 1
.= ( DataPart ( IExec (I1,p,s) ) ) by A21,A45,uu,A25,A1,A23,A7,CKB90:1,A9,A44,SCMFSA8C:30
.= ( DataPart ( IExec (( Times (a,I) ),p,( IExec (I1,p,s) )) ) ) by A4,A28,CKB96:1;
end;
suppose A47: ( ss . a ) <> ( 0 );

( s . a ) >= ( ( 0 ) + 1 ) by A6,INT_1:7;
then A48: ( ss . a ) > ( 0 ) by A19,A47,XREAL_1:19;
A50: k < ( pseudo-LifeSpan (s0,p0,( loop P )) ) by A15,A9,A23,XX2,A1,A7,CKB90:1,SCMFSA8C:1;
then A51: ( DataPart ( Comput (p21,s21,k) ) ) = ( DataPart ss ) by A25,A26,A21,XX2,A9,SCMFSA8C:29;
A52:now
A53: ( DataPart ss0 ) = ( ( DataPart ss0 ) +* ( {} ) ) by FUNCT_4:21
.= ( ( DataPart ss0 ) +* ( DataPart SA0 ) ) by MEMSTR_0:20
.= ( DataPart s31 ) by FUNCT_4:71;
hereby
let a being Int-Location;
per cases ;
suppose A54: a = ( intloc ( 0 ) );

thus ( ( Comput (p21,s21,k) ) . a ) = ( ss . a ) by A51,SCMFSA6A:7
.= 1 by A54,CKB21:1
.= ( ss0 . a ) by A54,SCMFSA6A:38
.= ( s31 . a ) by A53,SCMFSA6A:7;
end;
suppose a <> ( intloc ( 0 ) );

then A55: a is  read-write  read-write Int-Location by SF_MASTR:def 5;
thus ( ( Comput (p21,s21,k) ) . a ) = ( ss . a ) by A51,SCMFSA6A:7
.= ( ss0 . a ) by A55,SCMFSA6C:3
.= ( s31 . a ) by A53,SCMFSA6A:7;
end;
end;
let f being FinSeq-Location;
thus ( ( Comput (p21,s21,k) ) . f ) = ( ss . f ) by A51,SCMFSA6A:7
.= ( ss0 . f ) by SCMFSA6C:3
.= ( s31 . f ) by A53,SCMFSA6A:7;
end;
B56: ( IC ( Comput (p21,s21,k) ) ) = ( IC ( Comput (p2,s2,k) ) ) by A25,A26,A50,A9,XX2,SCMFSA8C:29
.= ( IC s31 ) by A14,FUNCT_4:113;
A57: ( ss . ( intloc ( 0 ) ) ) = 1 by A3,A2,SCMFSA8C:67;
KK: ( DataPart s0 ) = ( ( DataPart s0 ) +* ( {} ) ) by FUNCT_4:21
.= ( ( DataPart s0 ) +* ( DataPart SA0 ) ) by MEMSTR_0:20
.= ( DataPart s21 ) by FUNCT_4:71;
( Directed ( loop P ) ) = ( loop P ) by SCMFSA6A:22;
then ( Directed ( loop P ) ) is_pseudo-closed_on s21,p21 by A1,A23,A7,CKB90:1,KK,SCMFSA8C:23;
then A58: (( ( loop P ) ';' ( Stop ( SCM+FSA ) ) ) is_closed_on s21,p21 & ( ( loop P ) ';' ( Stop ( SCM+FSA ) ) ) is_halting_on s21,p21) by SCMFSA8C:29;
A59: s21 = ( s +* ( iS +* SA0 ) ) by FUNCT_4:14
.= ( Initialized s ) by FUNCT_4:93;
A60: s31 = ( ss +* ( iS +* SA0 ) ) by FUNCT_4:14
.= ( Initialized ss ) by FUNCT_4:93;
A61: (( ( loop P ) ';' ( Stop ( SCM+FSA ) ) ) c= p21 & ( ( loop P ) ';' ( Stop ( SCM+FSA ) ) ) c= p31) by FUNCT_4:25;
A62: ( Result (p21,s21) ) = ( Result (p31,s31) ) by A58,B56,A61,A52,SCMFSA8C:73,SCMFSA_2:61;
( DataPart ( IExec (( ( loop P ) ';' ( Stop ( SCM+FSA ) ) ),p0,s0) ) ) = ( DataPart ( IExec (( ( loop P ) ';' ( Stop ( SCM+FSA ) ) ),p,s) ) ) by SCMFSA8C:3
.= ( DataPart ( Result (p21,s21) ) ) by A59,SCMFSA6B:def 1
.= ( DataPart ( Result (p31,s31) ) ) by A62
.= ( DataPart ( IExec (( ( loop P ) ';' ( Stop ( SCM+FSA ) ) ),p,( IExec (I1,p,s) )) ) ) by A60,SCMFSA6B:def 1
.= ( DataPart ( IExec (( Times (a,I) ),p,( IExec (I1,p,s) )) ) ) by A1,A25,A57,A48,CKB90:1,SCMFSA8C:40;
hence thesis by A27,SCMFSA8C:3;
end;
end;
