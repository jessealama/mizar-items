environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMFSA_2,FSM_1,SCMFSA6A,TARSKI,CIRCUIT2,RELAT_1,FUNCT_1,CARD_1,FUNCOP_1,FUNCT_4,XBOOLE_0,SCMFSA6B,NAT_1,XXREAL_0,ARYTM_3,AMI_3,SF_MASTR,GRAPHSP,MSUALG_1,AMISTD_2,TURING_1,STRUCT_0,VALUED_1,SCMFSA6C,SCMFSA7B,UNIALG_2,SCMFSA8B,ARYTM_1,SCMFSA8C,SCMFSA8A,SCM_HALT,PARTFUN1,SCMNORM,RELOC,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,FINSEQ_1,FUNCT_1,PARTFUN1,FUNCT_4,FUNCT_7,PBOOLE,VALUED_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,SCMFSA_2,FUNCOP_1,SCMFSA6B,SCMFSA6A,SF_MASTR,SCMFSA8A,SCMFSA8B,SFMASTR1,SCMFSA8C,SCMFSA7B,NAT_D,SCMFSA_3,SCMFSA6C,XXREAL_0,CKB1,CKB2,CKB3;
definitions FUNCOP_1,COMPOS_1,EXTPRO_1,XBOOLE_0,SCMFSA_2,SCMFSA8C,SCMFSA6A,AMISTD_2,SCMFSA7B,MEMSTR_0,CKB1,CKB2,CKB3;
theorems SF_MASTR,FUNCT_1,FUNCT_7,FUNCOP_1,RELAT_1,SCMFSA6A,FUNCT_4,ENUMSET1,AMI_3,NAT_1,TARSKI,INT_1,GRFUNC_1,SCMFSA_2,SCMFSA6B,SCMFSA7B,SCMFSA8B,SCMFSA8A,SCMFSA8C,SCMFSA_3,SCMFSA6C,CARD_1,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,VALUED_1,XREAL_0,PBOOLE,PARTFUN1,AFINSQ_1,FINSEQ_4,COMPOS_1,SFMASTR1,EXTPRO_1,AMISTD_2,AMISTD_5,ZFMISC_1,MEMSTR_0,AMISTD_1,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7;
schemes NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMFSA_2,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8C,SCMFSA_9,ORDINAL1,RELAT_1,SCMFSA10,AMISTD_2,COMPOS_1,SFMASTR1,EXTPRO_1,SCMFSA_4,PBOOLE,FUNCT_4,FUNCT_7,PRE_POLY,STRUCT_0,FUNCOP_1,MEMSTR_0,CKB6,CKB8,CKB9,CKB10;
constructors SFMASTR1,DOMAIN_1,XXREAL_0,REAL_1,SCM_1,SCMFSA_3,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA8C,AMISTD_1,AMISTD_2,NAT_D,RELSET_1,VALUED_1,SCMFSA7B,SCMFSA_9,AMISTD_5,PBOOLE,PRE_POLY,MEMSTR_0,CKB1,CKB2,CKB3;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve m for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve I for (Program of ( SCM+FSA ));
reserve s for (State of ( SCM+FSA ));
reserve p for (Instruction-Sequence of ( SCM+FSA ));
set SA0 = ( Start-At (( 0 ),( SCM+FSA )) );
set iS = ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) );
zSA0: SA0 c= iS by FUNCT_4:25;
diS: ( dom iS ) = ( ( dom ( ( intloc ( 0 ) ) .--> 1 ) ) \/ ( dom ( Start-At (( 0 ),( SCM+FSA )) ) ) ) by FUNCT_4:def 1
.= ( { ( intloc ( 0 ) ) } \/ ( dom ( Start-At (( 0 ),( SCM+FSA )) ) ) ) by FUNCOP_1:13
.= ( { ( intloc ( 0 ) ) } \/ { ( IC ( SCM+FSA ) ) } ) by FUNCOP_1:13;
registration
cluster  keepInt0_1 ->  InitClosed for (Program of ( SCM+FSA ));
coherence
proof
let I being (Program of ( SCM+FSA ));
assume A17: I is  keepInt0_1;
set FI = ( FirstNotUsed I );
let s being (State of ( SCM+FSA ));
let p being (Instruction-Sequence of ( SCM+FSA ));
assume that
A18: I c= p;
let n being (Element of ( NAT ));
assume A19: iS c= s;
then B19: SA0 c= s by zSA0,XBOOLE_1:1;
defpred X[ Nat ]
 means
(not ( IC ( Comput (p,s,$1) ) ) in ( dom I ));
assume (not ( IC ( Comput (p,s,n) ) ) in ( dom I ));
then A20: (ex n being Nat st X[ n ]);
consider n being Nat such that A21: X[ n ] and A22: (for m being Nat holds (X[ m ] implies n <= m)) from NAT_1:sch 5(A20);
reconsider n as (Element of ( NAT )) by ORDINAL1:def 12;
set s2 = ( Comput (p,s,n) );
set p0 = ( p +* (( IC s2 ),( ( intloc ( 0 ) ) := FI )) );
set s0 = ( s +* (FI,( ( s . ( intloc ( 0 ) ) ) + 1 )) );
reconsider s as (State of ( SCM+FSA ));
reconsider s0 as (State of ( SCM+FSA ));
(not I is  keepInt0_1)
proof
FI <> ( IC ( SCM+FSA ) ) by SCMFSA_2:56;
then A25: (not FI in { ( IC ( SCM+FSA ) ) }) by TARSKI:def 1;
set s02 = ( Comput (p0,s0,n) );
set iIC = ( { ( intloc ( 0 ) ) } \/ { ( IC ( SCM+FSA ) ) } );
take s0;
FI in ( dom s ) by SCMFSA_2:42;
then A27: ( s0 . FI ) = ( ( s . ( intloc ( 0 ) ) ) + 1 ) by FUNCT_7:31;
B29: ( s . ( intloc ( 0 ) ) ) = 1 by A19,CKB7:1;
A29: (not FI in ( UsedIntLoc I )) by SF_MASTR:50;
(not FI in { ( intloc ( 0 ) ) }) by TARSKI:def 1;
then (not FI in ( dom iS )) by diS,A25,XBOOLE_0:def 3;
hence iS c= s0 by A19,FUNCT_7:89;
then B31: SA0 c= s0 by zSA0,XBOOLE_1:1;
take p0;
thus A32: I c= p0 by A18,A21,FUNCT_7:89;
(not FI in ( UsedInt*Loc I ))
proof
assume (not thesis);
then FI is FinSeq-Location by SCMFSA_2:5;
hence contradiction by SCMFSA_2:58;
end;
then A34: ( s0 | ( UsedInt*Loc I ) ) = ( s | ( UsedInt*Loc I ) ) by FUNCT_7:92;
A36: ( s0 | ( UsedIntLoc I ) ) = ( s | ( UsedIntLoc I ) ) by FUNCT_7:92,SF_MASTR:50;
A37: (for m holds (m < n implies ( IC ( Comput (p,s,m) ) ) in ( dom I ))) by A22;
A38: ( IC s02 ) = ( IC s2 ) by A36,A34,A18,A32,B31,A37,B19,SF_MASTR:65;
take k = ( n + 1 );
( IC s2 ) in ( NAT );
then A39: ( IC s2 ) in ( dom p ) by PARTFUN1:def 2;
A40: ( p0 . ( IC s2 ) ) = ( ( intloc ( 0 ) ) := FI ) by A39,FUNCT_7:31;
A42: ( Comput (p0,s0,k) ) = ( Following (p0,s02) ) by EXTPRO_1:3
.= ( Exec (( ( intloc ( 0 ) ) := FI ),s02) ) by A38,A40,PBOOLE:143;
(for m holds (m < n implies ( IC ( Comput (p0,s0,m) ) ) in ( dom I ))) by A37,A36,A34,A18,A32,B31,B19,SF_MASTR:65;
then ( s02 . FI ) = ( 1 + 1 ) by A29,A27,A18,A21,B29,FUNCT_7:89,SF_MASTR:61;
hence thesis by A42,SCMFSA_2:63;
end;
hence contradiction by A17;
end;
end;
