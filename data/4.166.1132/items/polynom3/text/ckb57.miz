environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_0,XBOOLE_0,FINSEQ_1,STRUCT_0,SUBSET_1,RELAT_1,FUNCT_1,SUPINF_2,CARD_3,NAT_1,PARTFUN1,FINSEQ_5,ORDINAL4,ARYTM_3,XXREAL_0,FINSEQ_3,FINSEQ_2,PRE_POLY,TARSKI,CARD_1,ORDERS_1,RELAT_2,FINSET_1,ARYTM_1,FUNCT_2,POLYNOM1,ALGSEQ_1,FUNCOP_1,FUNCT_4,MESFUNC1,LATTICES,VECTSP_1,BINOP_1,CLASSES1,GROUP_1,ZFMISC_1,POLYNOM3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,RELAT_1,RELAT_2,FUNCT_1,ORDERS_1,XXREAL_0,NAT_1,NAT_D,CLASSES1,RELSET_1,PARTFUN1,FINSET_1,FUNCT_2,FUNCOP_1,FINSEQ_1,PRE_POLY,FINSEQ_2,FINSEQ_5,FINSEQOP,BINOP_1,RVSUM_1,FUNCT_7,TREES_4,WSIERP_1,STRUCT_0,ALGSTR_0,MATRLIN,BINARITH,GROUP_1,RLVECT_1,VFUNCT_1,FVSUM_1,VECTSP_1,NORMSP_1,POLYNOM1,ALGSEQ_1,BHSP_1,RECDEF_1,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB17,CKB19,CKB28,CKB37,CKB43,CKB47,CKB50,CKB54;
definitions TARSKI,XBOOLE_0,RELAT_1,RELAT_2,PRE_POLY,RLVECT_1,GROUP_1,VECTSP_1,ALGSEQ_1,FINSEQ_2,FUNCT_2,STRUCT_0,CARD_1,ALGSTR_0,CKB10,CKB12,CKB17,CKB19,CKB28,CKB47,CKB50,CKB54;
theorems AXIOMS,TARSKI,ENUMSET1,RELSET_1,INT_1,NAT_1,CARD_1,RLVECT_1,VECTSP_1,ALGSEQ_1,RELAT_2,ORDERS_1,FUNCT_1,FUNCT_2,FUNCT_7,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,RFINSEQ,BINOP_1,CARD_3,RVSUM_1,FVSUM_1,MATRLIN,YELLOW15,POLYNOM1,RELAT_1,XBOOLE_0,RLVECT_2,XCMPLX_1,PARTFUN1,GROUP_1,XREAL_1,XXREAL_0,ORDINAL1,BHSP_1,NORMSP_1,XREAL_0,NAT_D,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB10,CKB12,CKB14,CKB15,CKB16,CKB17,CKB19,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB41,CKB42,CKB44,CKB46,CKB47,CKB49,CKB50,CKB52,CKB53,CKB54,CKB56;
schemes FUNCT_2,FINSEQ_1,FINSEQ_2,NAT_1,RELSET_1,SUBSET_1,BINOP_1,RECDEF_1,CKB9,CKB39;
registrations RELAT_1,ORDINAL1,FUNCT_2,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,FINSEQ_2,REALSET1,FINSEQ_5,STRUCT_0,VECTSP_1,VALUED_0,FINSET_1,RELSET_1,PRE_POLY,VFUNCT_1,CARD_1,FUNCT_1,CKB18,CKB20,CKB40,CKB45,CKB48,CKB51,CKB55;
constructors BINOP_1,SQUARE_1,FINSEQOP,REALSET1,RFINSEQ,NAT_D,FINSEQ_5,WSIERP_1,ALGSEQ_1,BHSP_1,DTCONSTR,TRIANG_1,POLYNOM1,SEQ_1,RECDEF_1,SEQ_2,SEQM_3,REAL_1,BINARITH,CLASSES1,RELSET_1,RELAT_1,FUNCT_7,MATRLIN,PRE_POLY,FVSUM_1,VFUNCT_1,CKB5,CKB6,CKB7,CKB8,CKB10,CKB12,CKB17,CKB19,CKB28,CKB43,CKB50,CKB54;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
definition
let L being non empty doubleLoopStr;
let p being (sequence of L);
let q being (sequence of L);
func p *' q -> (sequence of L)
means
:Def11: (for i being (Element of ( NAT )) holds (ex r being (FinSequence of (the carrier of L)) st ((( len r ) = ( i + 1 ) & ( it . i ) = ( Sum r )) & (for k being (Element of ( NAT )) holds (k in ( dom r ) implies ( r . k ) = ( ( p . ( k -' 1 ) ) * ( q . ( ( i + 1 ) -' k ) ) ))))));
existence
proof
defpred P[ (Element of ( NAT )),(Element of L) ]
 means
(ex r being (FinSequence of (the carrier of L)) st ((( len r ) = ( $1 + 1 ) & $2 = ( Sum r )) & (for k being (Element of ( NAT )) holds (k in ( dom r ) implies ( r . k ) = ( ( p . ( k -' 1 ) ) * ( q . ( ( $1 + 1 ) -' k ) ) )))));
A1: (for i being (Element of ( NAT )) holds (ex v being (Element of L) st P[ i,v ]))
proof
let i being (Element of ( NAT ));
deffunc F(Nat) = ( ( p . ( $1 -' 1 ) ) * ( q . ( ( i + 1 ) -' $1 ) ) );
consider r being (FinSequence of (the carrier of L)) such that A2: ( len r ) = ( i + 1 ) and A3: (for k being Nat holds (k in ( dom r ) implies ( r . k ) = F(k))) from FINSEQ_2:sch 1;
take v = ( Sum r );
take r;
thus ( len r ) = ( i + 1 ) by A2;
thus v = ( Sum r );
let k being (Element of ( NAT ));
assume k in ( dom r );
hence thesis by A3;
end;
consider f being (Function of ( NAT ),(the carrier of L)) such that A4: (for i being (Element of ( NAT )) holds P[ i,( f . i ) ]) from FUNCT_2:sch 3(A1);
take f;
thus thesis by A4;
end;
uniqueness
proof
let p1 being (sequence of L),p2 being (sequence of L);
assume that
A5: (for i being (Element of ( NAT )) holds (ex r being (FinSequence of (the carrier of L)) st ((( len r ) = ( i + 1 ) & ( p1 . i ) = ( Sum r )) & (for k being (Element of ( NAT )) holds (k in ( dom r ) implies ( r . k ) = ( ( p . ( k -' 1 ) ) * ( q . ( ( i + 1 ) -' k ) ) ))))))
and
A6: (for i being (Element of ( NAT )) holds (ex r being (FinSequence of (the carrier of L)) st ((( len r ) = ( i + 1 ) & ( p2 . i ) = ( Sum r )) & (for k being (Element of ( NAT )) holds (k in ( dom r ) implies ( r . k ) = ( ( p . ( k -' 1 ) ) * ( q . ( ( i + 1 ) -' k ) ) ))))));
now
let i being (Element of ( NAT ));
consider r1 being (FinSequence of (the carrier of L)) such that A7: ( len r1 ) = ( i + 1 ) and A8: ( p1 . i ) = ( Sum r1 ) and A9: (for k being (Element of ( NAT )) holds (k in ( dom r1 ) implies ( r1 . k ) = ( ( p . ( k -' 1 ) ) * ( q . ( ( i + 1 ) -' k ) ) ))) by A5;
consider r2 being (FinSequence of (the carrier of L)) such that A10: ( len r2 ) = ( i + 1 ) and A11: ( p2 . i ) = ( Sum r2 ) and A12: (for k being (Element of ( NAT )) holds (k in ( dom r2 ) implies ( r2 . k ) = ( ( p . ( k -' 1 ) ) * ( q . ( ( i + 1 ) -' k ) ) ))) by A6;
A13: ( dom r1 ) = ( Seg ( len r2 ) ) by A7,A10,FINSEQ_1:def 3
.= ( dom r2 ) by FINSEQ_1:def 3;
now
let k being Nat;
assume A14: k in ( dom r1 );
hence ( r1 . k ) = ( ( p . ( k -' 1 ) ) * ( q . ( ( i + 1 ) -' k ) ) ) by A9
.= ( r2 . k ) by A12,A13,A14;
end;
hence ( p1 . i ) = ( p2 . i ) by A8,A11,A13,FINSEQ_1:13;
end;
hence p1 = p2 by FUNCT_2:63;
end;
end;
