environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_0,XBOOLE_0,FINSEQ_1,STRUCT_0,SUBSET_1,RELAT_1,FUNCT_1,SUPINF_2,CARD_3,NAT_1,PARTFUN1,FINSEQ_5,ORDINAL4,ARYTM_3,XXREAL_0,FINSEQ_3,FINSEQ_2,PRE_POLY,TARSKI,CARD_1,ORDERS_1,RELAT_2,FINSET_1,ARYTM_1,FUNCT_2,POLYNOM1,ALGSEQ_1,FUNCOP_1,FUNCT_4,MESFUNC1,LATTICES,VECTSP_1,BINOP_1,CLASSES1,GROUP_1,ZFMISC_1,POLYNOM3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,RELAT_1,RELAT_2,FUNCT_1,ORDERS_1,XXREAL_0,NAT_1,NAT_D,CLASSES1,RELSET_1,PARTFUN1,FINSET_1,FUNCT_2,FUNCOP_1,FINSEQ_1,PRE_POLY,FINSEQ_2,FINSEQ_5,FINSEQOP,BINOP_1,RVSUM_1,FUNCT_7,TREES_4,WSIERP_1,STRUCT_0,ALGSTR_0,MATRLIN,BINARITH,GROUP_1,RLVECT_1,VFUNCT_1,FVSUM_1,VECTSP_1,NORMSP_1,POLYNOM1,ALGSEQ_1,BHSP_1,RECDEF_1,CKB5,CKB6,CKB7,CKB8;
definitions TARSKI,XBOOLE_0,RELAT_1,RELAT_2,PRE_POLY,RLVECT_1,GROUP_1,VECTSP_1,ALGSEQ_1,FINSEQ_2,FUNCT_2,STRUCT_0,CARD_1,ALGSTR_0;
theorems AXIOMS,TARSKI,ENUMSET1,RELSET_1,INT_1,NAT_1,CARD_1,RLVECT_1,VECTSP_1,ALGSEQ_1,RELAT_2,ORDERS_1,FUNCT_1,FUNCT_2,FUNCT_7,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,RFINSEQ,BINOP_1,CARD_3,RVSUM_1,FVSUM_1,MATRLIN,YELLOW15,POLYNOM1,RELAT_1,XBOOLE_0,RLVECT_2,XCMPLX_1,PARTFUN1,GROUP_1,XREAL_1,XXREAL_0,ORDINAL1,BHSP_1,NORMSP_1,XREAL_0,NAT_D,PRE_POLY,CKB1,CKB2,CKB3,CKB4;
schemes FUNCT_2,FINSEQ_1,FINSEQ_2,NAT_1,RELSET_1,SUBSET_1,BINOP_1,RECDEF_1;
registrations RELAT_1,ORDINAL1,FUNCT_2,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,FINSEQ_2,REALSET1,FINSEQ_5,STRUCT_0,VECTSP_1,VALUED_0,FINSET_1,RELSET_1,PRE_POLY,VFUNCT_1,CARD_1,FUNCT_1;
constructors BINOP_1,SQUARE_1,FINSEQOP,REALSET1,RFINSEQ,NAT_D,FINSEQ_5,WSIERP_1,ALGSEQ_1,BHSP_1,DTCONSTR,TRIANG_1,POLYNOM1,SEQ_1,RECDEF_1,SEQ_2,SEQM_3,REAL_1,BINARITH,CLASSES1,RELSET_1,RELAT_1,FUNCT_7,MATRLIN,PRE_POLY,FVSUM_1,VFUNCT_1,CKB5,CKB6,CKB7,CKB8;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
scheme SeqOfSeqLambdaD { D() -> non  empty set,A() -> (Element of ( NAT )),T((Element of ( NAT ))) -> (Element of ( NAT )),F(set,set) -> (Element of D()) } : (ex p being (FinSequence of ( D() * )) st (( len p ) = A() & (for k being (Element of ( NAT )) holds (k in ( Seg A() ) implies (( len ( p /. k ) ) = T(k) & (for n being (Element of ( NAT )) holds (n in ( dom ( p /. k ) ) implies ( ( p /. k ) . n ) = F(k,n))))))))
proof
defpred P[ (Element of ( NAT )),FinSequence ]
 means
(( len $2 ) = T($1) & (for n being (Element of ( NAT )) holds (n in ( dom $2 ) implies ( $2 . n ) = F($1,n))));
A1: (for k being (Element of ( NAT )) holds (k in ( Seg A() ) implies (ex d being (Element of ( D() * )) st P[ k,d ])))
proof
let k being (Element of ( NAT ));
assume k in ( Seg A() );
deffunc G(Nat) = F(k,$1);
consider d being (FinSequence of D()) such that A2: ( len d ) = T(k) and A3: (for n being Nat holds (n in ( dom d ) implies ( d . n ) = G(n))) from FINSEQ_2:sch 1;
reconsider d as (Element of ( D() * )) by FINSEQ_1:def 11;
take d;
thus ( len d ) = T(k) by A2;
let n being (Element of ( NAT ));
assume n in ( dom d );
hence thesis by A3;
end;
consider p being (FinSequence of ( D() * )) such that A4: ( dom p ) = ( Seg A() ) and A5: (for k being (Element of ( NAT )) holds (k in ( Seg A() ) implies P[ k,( p /. k ) ])) from RECDEF_1:sch 17(A1);
take p;
thus ( len p ) = A() by A4,FINSEQ_1:def 3;
let k being (Element of ( NAT ));
assume k in ( Seg A() );
hence thesis by A5;
end;
