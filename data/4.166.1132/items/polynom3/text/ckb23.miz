environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_0,XBOOLE_0,FINSEQ_1,STRUCT_0,SUBSET_1,RELAT_1,FUNCT_1,SUPINF_2,CARD_3,NAT_1,PARTFUN1,FINSEQ_5,ORDINAL4,ARYTM_3,XXREAL_0,FINSEQ_3,FINSEQ_2,PRE_POLY,TARSKI,CARD_1,ORDERS_1,RELAT_2,FINSET_1,ARYTM_1,FUNCT_2,POLYNOM1,ALGSEQ_1,FUNCOP_1,FUNCT_4,MESFUNC1,LATTICES,VECTSP_1,BINOP_1,CLASSES1,GROUP_1,ZFMISC_1,POLYNOM3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,RELAT_1,RELAT_2,FUNCT_1,ORDERS_1,XXREAL_0,NAT_1,NAT_D,CLASSES1,RELSET_1,PARTFUN1,FINSET_1,FUNCT_2,FUNCOP_1,FINSEQ_1,PRE_POLY,FINSEQ_2,FINSEQ_5,FINSEQOP,BINOP_1,RVSUM_1,FUNCT_7,TREES_4,WSIERP_1,STRUCT_0,ALGSTR_0,MATRLIN,BINARITH,GROUP_1,RLVECT_1,VFUNCT_1,FVSUM_1,VECTSP_1,NORMSP_1,POLYNOM1,ALGSEQ_1,BHSP_1,RECDEF_1,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB17,CKB19;
definitions TARSKI,XBOOLE_0,RELAT_1,RELAT_2,PRE_POLY,RLVECT_1,GROUP_1,VECTSP_1,ALGSEQ_1,FINSEQ_2,FUNCT_2,STRUCT_0,CARD_1,ALGSTR_0,CKB10,CKB12,CKB17,CKB19;
theorems AXIOMS,TARSKI,ENUMSET1,RELSET_1,INT_1,NAT_1,CARD_1,RLVECT_1,VECTSP_1,ALGSEQ_1,RELAT_2,ORDERS_1,FUNCT_1,FUNCT_2,FUNCT_7,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,RFINSEQ,BINOP_1,CARD_3,RVSUM_1,FVSUM_1,MATRLIN,YELLOW15,POLYNOM1,RELAT_1,XBOOLE_0,RLVECT_2,XCMPLX_1,PARTFUN1,GROUP_1,XREAL_1,XXREAL_0,ORDINAL1,BHSP_1,NORMSP_1,XREAL_0,NAT_D,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB10,CKB12,CKB14,CKB15,CKB16,CKB17,CKB19,CKB21,CKB22;
schemes FUNCT_2,FINSEQ_1,FINSEQ_2,NAT_1,RELSET_1,SUBSET_1,BINOP_1,RECDEF_1,CKB9;
registrations RELAT_1,ORDINAL1,FUNCT_2,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,FINSEQ_2,REALSET1,FINSEQ_5,STRUCT_0,VECTSP_1,VALUED_0,FINSET_1,RELSET_1,PRE_POLY,VFUNCT_1,CARD_1,FUNCT_1,CKB18,CKB20;
constructors BINOP_1,SQUARE_1,FINSEQOP,REALSET1,RFINSEQ,NAT_D,FINSEQ_5,WSIERP_1,ALGSEQ_1,BHSP_1,DTCONSTR,TRIANG_1,POLYNOM1,SEQ_1,RECDEF_1,SEQ_2,SEQM_3,REAL_1,BINARITH,CLASSES1,RELSET_1,RELAT_1,FUNCT_7,MATRLIN,PRE_POLY,FVSUM_1,VFUNCT_1,CKB5,CKB6,CKB7,CKB8,CKB10,CKB12,CKB17,CKB19;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
theorem
(for n being (Element of ( NAT )) holds ( Decomp (n,1) ) = <* <* n *> *>)
proof
let n being (Element of ( NAT ));
consider A being  finite (Subset of ( 1 -tuples_on ( NAT ) )) such that A1: ( Decomp (n,1) ) = ( SgmX (( TuplesOrder 1 ),A) ) and A2: (for p being (Element of ( 1 -tuples_on ( NAT ) )) holds (p in A iff ( Sum p ) = n)) by CKB19:def 1;
A3: A = { <* n *> }
proof
thus A c= { <* n *> }
proof
let y being set;
assume A4: y in A;
then reconsider p = y as (Element of ( 1 -tuples_on ( NAT ) ));
A5: ( Sum p ) = n by A2,A4;
consider k being (Element of ( NAT )) such that A6: p = <* k *> by FINSEQ_2:97;
( Sum p ) = k by A6,RVSUM_1:73;
hence thesis by A5,A6,TARSKI:def 1;
end;

let y being set;
assume y in { <* n *> };
then A7: y = <* n *> by TARSKI:def 1;
A8: <* n *> is (Element of ( 1 -tuples_on ( NAT ) )) by FINSEQ_2:131;
( Sum <* n *> ) = n by RVSUM_1:73;
hence thesis by A2,A7,A8;
end;
( len ( Decomp (n,1) ) ) = 1 by CKB21:1;
then A9: ( dom ( Decomp (n,1) ) ) = ( Seg 1 ) by FINSEQ_1:def 3
.= ( dom <* <* n *> *> ) by FINSEQ_1:38;
( field ( TuplesOrder 1 ) ) = ( 1 -tuples_on ( NAT ) ) by ORDERS_1:15;
then ( TuplesOrder 1 ) linearly_orders A by ORDERS_1:37,ORDERS_1:38;
then (( rng <* <* n *> *> ) = { <* n *> } & ( rng ( Decomp (n,1) ) ) = { <* n *> }) by A1,A3,FINSEQ_1:39,PRE_POLY:def 2;
hence thesis by A9,FUNCT_1:7;
end;
