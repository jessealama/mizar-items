environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_0,XBOOLE_0,FINSEQ_1,STRUCT_0,SUBSET_1,RELAT_1,FUNCT_1,SUPINF_2,CARD_3,NAT_1,PARTFUN1,FINSEQ_5,ORDINAL4,ARYTM_3,XXREAL_0,FINSEQ_3,FINSEQ_2,PRE_POLY,TARSKI,CARD_1,ORDERS_1,RELAT_2,FINSET_1,ARYTM_1,FUNCT_2,POLYNOM1,ALGSEQ_1,FUNCOP_1,FUNCT_4,MESFUNC1,LATTICES,VECTSP_1,BINOP_1,CLASSES1,GROUP_1,ZFMISC_1,POLYNOM3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,RELAT_1,RELAT_2,FUNCT_1,ORDERS_1,XXREAL_0,NAT_1,NAT_D,CLASSES1,RELSET_1,PARTFUN1,FINSET_1,FUNCT_2,FUNCOP_1,FINSEQ_1,PRE_POLY,FINSEQ_2,FINSEQ_5,FINSEQOP,BINOP_1,RVSUM_1,FUNCT_7,TREES_4,WSIERP_1,STRUCT_0,ALGSTR_0,MATRLIN,BINARITH,GROUP_1,RLVECT_1,VFUNCT_1,FVSUM_1,VECTSP_1,NORMSP_1,POLYNOM1,ALGSEQ_1,BHSP_1,RECDEF_1,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB17,CKB19;
definitions TARSKI,XBOOLE_0,RELAT_1,RELAT_2,PRE_POLY,RLVECT_1,GROUP_1,VECTSP_1,ALGSEQ_1,FINSEQ_2,FUNCT_2,STRUCT_0,CARD_1,ALGSTR_0,CKB10,CKB12,CKB17,CKB19;
theorems AXIOMS,TARSKI,ENUMSET1,RELSET_1,INT_1,NAT_1,CARD_1,RLVECT_1,VECTSP_1,ALGSEQ_1,RELAT_2,ORDERS_1,FUNCT_1,FUNCT_2,FUNCT_7,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,RFINSEQ,BINOP_1,CARD_3,RVSUM_1,FVSUM_1,MATRLIN,YELLOW15,POLYNOM1,RELAT_1,XBOOLE_0,RLVECT_2,XCMPLX_1,PARTFUN1,GROUP_1,XREAL_1,XXREAL_0,ORDINAL1,BHSP_1,NORMSP_1,XREAL_0,NAT_D,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB10,CKB12,CKB14,CKB15,CKB16,CKB17,CKB19,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
schemes FUNCT_2,FINSEQ_1,FINSEQ_2,NAT_1,RELSET_1,SUBSET_1,BINOP_1,RECDEF_1,CKB9;
registrations RELAT_1,ORDINAL1,FUNCT_2,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,FINSEQ_2,REALSET1,FINSEQ_5,STRUCT_0,VECTSP_1,VALUED_0,FINSET_1,RELSET_1,PRE_POLY,VFUNCT_1,CARD_1,FUNCT_1,CKB18,CKB20;
constructors BINOP_1,SQUARE_1,FINSEQOP,REALSET1,RFINSEQ,NAT_D,FINSEQ_5,WSIERP_1,ALGSEQ_1,BHSP_1,DTCONSTR,TRIANG_1,POLYNOM1,SEQ_1,RECDEF_1,SEQ_2,SEQM_3,REAL_1,BINARITH,CLASSES1,RELSET_1,RELAT_1,FUNCT_7,MATRLIN,PRE_POLY,FVSUM_1,VFUNCT_1,CKB5,CKB6,CKB7,CKB8,CKB10,CKB12,CKB17,CKB19;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
theorem
Th14: (for n,i being (Element of ( NAT )) holds (i in ( Seg ( n + 1 ) ) implies ( ( Decomp (n,2) ) . i ) = <* ( i -' 1 ),( ( n + 1 ) -' i ) *>))
proof
let n being (Element of ( NAT ));
let i being (Element of ( NAT ));
defpred P[ Nat ]
 means
($1 <= ( n + 1 ) implies ( ( Decomp (n,2) ) . $1 ) = <* ( $1 -' 1 ),( ( n + 1 ) -' $1 ) *>);
assume i in ( Seg ( n + 1 ) );
then A1: (1 <= i & i <= ( n + 1 )) by FINSEQ_1:1;
consider A being  finite (Subset of ( 2 -tuples_on ( NAT ) )) such that A2: ( Decomp (n,2) ) = ( SgmX (( TuplesOrder 2 ),A) ) and A3: (for p being (Element of ( 2 -tuples_on ( NAT ) )) holds (p in A iff ( Sum p ) = n)) by CKB19:def 1;
A4: (for j being non  empty Nat holds (P[ j ] implies P[ ( j + 1 ) ]))
proof
( field ( TuplesOrder 2 ) ) = ( 2 -tuples_on ( NAT ) ) by ORDERS_1:15;
then A5: ( TuplesOrder 2 ) linearly_orders A by ORDERS_1:37,ORDERS_1:38;
let j being non  empty Nat;
assume that
A6: (j <= ( n + 1 ) implies ( ( Decomp (n,2) ) . j ) = <* ( j -' 1 ),( ( n + 1 ) -' j ) *>)
and
A7: ( j + 1 ) <= ( n + 1 );
n >= j by A7,XREAL_1:6;
then A8: ( n - j ) >= ( 0 ) by XREAL_1:48;
( ( n + 1 ) - ( j + 1 ) ) >= ( 0 ) by A7,XREAL_1:48;
then A9: ( ( n + 1 ) -' ( j + 1 ) ) = ( n - j ) by XREAL_0:def 2
.= ( n -' j ) by A8,XREAL_0:def 2;
reconsider jj = j as non  empty (Element of ( NAT )) by ORDINAL1:def 12;
j >= 1 by NAT_1:14;
then A10: ( j - 1 ) >= ( 1 - 1 ) by XREAL_1:9;
( j + 1 ) >= 1 by NAT_1:11;
then ( j + 1 ) in ( Seg ( n + 1 ) ) by A7,FINSEQ_1:1;
then ( j + 1 ) in ( Seg ( len ( Decomp (n,2) ) ) ) by CKB22:1;
then A11: ( j + 1 ) in ( dom ( Decomp (n,2) ) ) by FINSEQ_1:def 3;
then ( ( Decomp (n,2) ) . ( j + 1 ) ) = ( ( Decomp (n,2) ) /. ( j + 1 ) ) by PARTFUN1:def 6;
then consider d1,d2 being (Element of ( NAT )) such that A12: ( ( Decomp (n,2) ) . ( j + 1 ) ) = <* d1,d2 *> by FINSEQ_2:100;
( ( Decomp (n,2) ) . ( j + 1 ) ) in ( rng ( Decomp (n,2) ) ) by A11,FUNCT_1:def 3;
then ( ( Decomp (n,2) ) . ( j + 1 ) ) in A by A2,A5,PRE_POLY:def 2;
then ( Sum <* d1,d2 *> ) = n by A3,A12;
then A13: ( d1 + d2 ) = n by RVSUM_1:77;
then ( n - d1 ) >= ( 0 );
then A14: d2 = ( n -' d1 ) by A13,XREAL_0:def 2;
j < ( n + 1 ) by A7,NAT_1:13;
then A15: ( ( n + 1 ) - j ) >= ( 0 ) by XREAL_1:48;
then ( n - ( j - 1 ) ) >= ( 0 );
then A16: ( n - ( j -' 1 ) ) >= ( 0 ) by A10,XREAL_0:def 2;
( ( n + 1 ) -' j ) = ( n - ( j - 1 ) ) by A15,XREAL_0:def 2
.= ( n - ( j -' 1 ) ) by A10,XREAL_0:def 2
.= ( n -' ( j -' 1 ) ) by A16,XREAL_0:def 2;
then d1 = ( ( jj -' 1 ) + 1 ) by A6,A7,A12,A14,CKB25:1,NAT_1:13
.= j by NAT_1:14,XREAL_1:235;
hence thesis by A12,A14,A9,NAT_D:34;
end;
A17: P[ 1 ]
proof
assume 1 <= ( n + 1 );
thus ( ( Decomp (n,2) ) . 1 ) = <* ( 0 ),n *> by CKB26:1
.= <* ( 1 -' 1 ),n *> by XREAL_1:232
.= <* ( 1 -' 1 ),( ( n + 1 ) -' 1 ) *> by NAT_D:34;
end;
(for j being non  empty Nat holds P[ j ]) from NAT_1:sch 10(A17,A4);
hence thesis by A1;
end;
