environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_1,RELAT_1,TREES_1,XBOOLE_0,ARYTM_3,XXREAL_0,ORDINAL4,CARD_1,FUNCT_1,TARSKI,TREES_2,TREES_9,ORDINAL1,NAT_1,FINSET_1,QC_LANG1,ZF_LANG,CLASSES2,TREES_4,QC_LANG4;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,FINSET_1,FINSEQ_1,FINSEQ_4,TREES_1,TREES_2,TREES_4,TREES_9,QC_LANG1,QC_LANG2,MCART_1,XXREAL_0,CKB3,CKB6,CKB21;
definitions TARSKI,XBOOLE_0,TREES_2,TREES_4,BINOP_1,CKB3,CKB6,CKB21;
theorems TARSKI,NAT_1,RELAT_1,FUNCT_1,FINSEQ_1,TREES_1,TREES_2,TREES_9,GRFUNC_1,QC_LANG1,QC_LANG2,XBOOLE_0,XBOOLE_1,FINSEQ_6,XREAL_1,XXREAL_0,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31;
schemes NAT_1,TREES_2,FINSEQ_1,TREES_9;
registrations SUBSET_1,ORDINAL1,RELSET_1,FINSET_1,XREAL_0,NAT_1,FINSEQ_1,TREES_1,TREES_2,TREES_A,TREES_9,CARD_1,RELAT_1;
constructors BINOP_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_4,TREES_4,TREES_9,QC_LANG2,RELSET_1,CKB3,CKB6,CKB21;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve k for (Element of ( NAT ));
reserve F for (Element of ( QC-WFF ));
reserve G for (Element of ( QC-WFF ));
reserve H for (Element of ( QC-WFF ));
reserve H9 for (Element of ( QC-WFF ));
reserve t9 for (Element of ( dom ( tree_of_subformulae F ) ));
reserve t99 for (Element of ( dom ( tree_of_subformulae F ) ));
reserve x for set;
reserve t for (Element of ( dom ( tree_of_subformulae F ) ));
reserve s for FinSequence;
theorem
Th58: ((t in ( F -entry_points_in_subformula_tree_of G ) & ( t ^ s ) in ( F -entry_points_in_subformula_tree_of H )) implies s in ( G -entry_points_in_subformula_tree_of H ))
proof
defpred P[ (Element of ( NAT )) ]
 means
(for F holds (for G holds (for H holds (for t holds (for s holds (((G = ( ( tree_of_subformulae F ) . t ) & ( t ^ s ) in ( F -entry_points_in_subformula_tree_of H )) & ( len s ) = $1) implies s in ( G -entry_points_in_subformula_tree_of H )))))));
A1: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume that
A2: P[ k ];
thus P[ ( k + 1 ) ]
proof
let F;
let G;
let H;
let t;
let s;
assume that
A3: G = ( ( tree_of_subformulae F ) . t )
and
A4: ( t ^ s ) in ( F -entry_points_in_subformula_tree_of H )
and
A5: ( len s ) = ( k + 1 );
consider v being FinSequence,x being set such that A6: s = ( v ^ <* x *> ) and A7: ( len v ) = k by A5,TREES_2:3;
( F -entry_points_in_subformula_tree_of H ) = { t1 where t1 is (Element of ( dom ( tree_of_subformulae F ) )): ( ( tree_of_subformulae F ) . t1 ) = H } by CKB22:1;
then consider t99 such that A8: t99 = ( t ^ s ) and A9: ( ( tree_of_subformulae F ) . t99 ) = H by A4;
reconsider s1 = s as (FinSequence of ( NAT )) by A8,FINSEQ_1:36;
A10: s1 = ( v ^ <* x *> ) by A6;
then reconsider u = <* x *> as (FinSequence of ( NAT )) by FINSEQ_1:36;
reconsider v as (FinSequence of ( NAT )) by A10,FINSEQ_1:36;
A11: ( rng u ) c= ( NAT ) by FINSEQ_1:def 4;
A12: 1 in { 1 } by TARSKI:def 1;
(( dom u ) = ( Seg 1 ) & ( u . 1 ) = x) by FINSEQ_1:def 8;
then x in ( rng u ) by A12,FINSEQ_1:2,FUNCT_1:def 3;
then reconsider m = x as (Element of ( NAT )) by A11;
consider t9 being (FinSequence of ( NAT )) such that A13: t9 = ( t ^ v );
A14: t99 = ( t9 ^ <* m *> ) by A6,A8,A13,FINSEQ_1:32;
then t9 is_a_prefix_of t99 by TREES_1:1;
then reconsider t9 as (Element of ( dom ( tree_of_subformulae F ) )) by TREES_1:20;
consider H9 such that A15: H9 = ( ( tree_of_subformulae F ) . t9 );
( t ^ v ) in ( F -entry_points_in_subformula_tree_of H9 ) by A13,A15,CKB21:def 1;
then A16: v in ( G -entry_points_in_subformula_tree_of H9 ) by A2,A3,A7;
( G -entry_points_in_subformula_tree_of H9 ) = { v1 where v1 is (Element of ( dom ( tree_of_subformulae G ) )): ( ( tree_of_subformulae G ) . v1 ) = H9 } by CKB22:1;
then A17: (ex v1 being (Element of ( dom ( tree_of_subformulae G ) )) st (v = v1 & ( ( tree_of_subformulae G ) . v1 ) = H9)) by A16;
then reconsider v as (Element of ( dom ( tree_of_subformulae G ) ));
A18: H is_immediate_constituent_of H9 by A9,A14,A15,CKB9:1;
(H = ( ( tree_of_subformulae G ) . ( v ^ <* m *> ) ) & ( v ^ <* m *> ) in ( dom ( tree_of_subformulae G ) ))
proof
A19: H9 <> ( VERUM ) by A18,QC_LANG2:41;
now
per cases  by A18,A19,QC_LANG1:7,QC_LANG2:47;
suppose A20: H9 is  negative;

then (H = ( the_argument_of H9 ) & m = ( 0 )) by A9,A14,A15,CKB24:1;
hence thesis by A17,A20,CKB27:1;
end;
suppose A21: H9 is  conjunctive;

then ((H = ( the_left_argument_of H9 ) & m = ( 0 )) or (H = ( the_right_argument_of H9 ) & m = 1)) by A9,A14,A15,CKB25:1;
hence thesis by A17,A21,CKB29:1;
end;
suppose A22: H9 is  universal;

then (H = ( the_scope_of H9 ) & m = ( 0 )) by A9,A14,A15,CKB26:1;
hence thesis by A17,A22,CKB30:1;
end;
end;
hence thesis;
end;
hence thesis by A6,CKB21:def 1;
end;

end;
A23: P[ ( 0 ) ]
proof
let F;
let G;
let H;
let t;
let s;
assume that
A24: G = ( ( tree_of_subformulae F ) . t )
and
A25: ( t ^ s ) in ( F -entry_points_in_subformula_tree_of H )
and
A26: ( len s ) = ( 0 );
A27: s = ( {} ) by A26;
then reconsider s9 = s as (Element of ( dom ( tree_of_subformulae G ) )) by TREES_1:22;
A28: G = ( ( tree_of_subformulae G ) . s9 ) by A27,CKB6:def 1;
( F -entry_points_in_subformula_tree_of H ) = { t1 where t1 is (Element of ( dom ( tree_of_subformulae F ) )): ( ( tree_of_subformulae F ) . t1 ) = H } by CKB22:1;
then (ex t9 st (t9 = ( t ^ s ) & ( ( tree_of_subformulae F ) . t9 ) = H)) by A25;
then H = G by A24,A27,FINSEQ_1:34;
hence thesis by A28,CKB21:def 1;
end;
(for k holds P[ k ]) from NAT_1:sch 1(A23,A1);
then A29: (((G = ( ( tree_of_subformulae F ) . t ) & ( t ^ s ) in ( F -entry_points_in_subformula_tree_of H )) & ( len s ) = ( len s )) implies s in ( G -entry_points_in_subformula_tree_of H ));
assume (t in ( F -entry_points_in_subformula_tree_of G ) & ( t ^ s ) in ( F -entry_points_in_subformula_tree_of H ));
hence thesis by A29,CKB21:def 1;
end;
