environ
vocabularies NUMBERS,INT_1,XXREAL_0,CARD_1,ARYTM_1,ARYTM_3,SUBSET_1,VECTSP_1,VECTSP_2,STRUCT_0,XBOOLE_0,ALGSTR_0,SUPINF_2,NEWTON,RELAT_1,GROUP_1,BINOP_1,RLVECT_1,MESFUNC1,LATTICES,ALGSTR_1,FINSEQ_1,PARTFUN1,CARD_3,NAT_1,FUNCT_1,ORDINAL4,FINSEQ_2,TARSKI,MATRIX_1,TREES_1,INCSP_1,FVSUM_1,RVSUM_1,ZFMISC_1,ALGSEQ_1,POLYNOM1,COMPLEX1,MCART_1,POLYNOM2,POLYNOM3,POLYNOM8;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,NUMBERS,XCMPLX_0,XXREAL_0,VECTSP_2,BINOP_1,BINOM,ALGSTR_1,PARTFUN1,FINSEQ_1,FINSEQ_2,INT_1,NAT_1,NAT_D,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,FVSUM_1,ALGSEQ_1,POLYNOM5,POLYNOM3,MATRIX_1,MATRIX_3,POLYNOM4,MCART_1,INT_2;
definitions VECTSP_1,RLVECT_1,BINOM,FINSEQ_1,MATRIX_1,POLYNOM3;
theorems FVSUM_1,GROUP_1,BINOM,VECTSP_1,ALGSEQ_1,NAT_1,FINSEQ_4,INT_1,FUNCT_2,XREAL_1,VECTSP_2,ALGSTR_1,MATRIX_1,FUNCT_1,MATRIX_3,FINSEQ_1,ZFMISC_1,COMPLEX1,RLVECT_1,POLYNOM4,TARSKI,MCART_1,FINSEQ_2,POLYNOM1,ABSVALUE,POLYNOM3,POLYNOM5,FINSEQ_3,ORDINAL1,XXREAL_0,FUNCOP_1,PARTFUN1,XREAL_0,CKB1,CKB2,CKB3,CKB5,CKB6;
schemes NAT_1,FUNCT_2,MATRIX_1,FINSEQ_1,INT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,STRUCT_0,VECTSP_1,ALGSTR_1,GCD_1,POLYNOM3,CARD_1,FINSEQ_1,CKB4;
constructors REAL_1,SQUARE_1,NAT_D,VECTSP_2,ALGSTR_2,TOPREAL1,MATRIX_3,POLYNOM1,POLYNOM4,POLYNOM5,BINOM,RELSET_1,FVSUM_1;
requirements NUMERALS,SUBSET,REAL,BOOLE,ARITHM;
begin
theorem
Th4: (for L being  left_zeroed  right_zeroed  add-associative  right_complementable non empty doubleLoopStr holds (for m being (Element of ( NAT )) holds (for s being (FinSequence of L) holds ((( len s ) = m & (for k being (Element of ( NAT )) holds ((1 <= k & k <= m) implies ( s /. k ) = ( 1. L )))) implies ( Sum s ) = ( m * ( 1. L ) )))))
proof
let L being  left_zeroed  right_zeroed  add-associative  right_complementable non empty doubleLoopStr;
let m being (Element of ( NAT ));
let s being (FinSequence of L);
assume A1: (( len s ) = m & (for k being (Element of ( NAT )) holds ((1 <= k & k <= m) implies ( s /. k ) = ( 1. L ))));
defpred P[ (Element of ( NAT )) ]
 means
(for s being (FinSequence of L) holds ((( len s ) = $1 & (for k being (Element of ( NAT )) holds ((1 <= k & k <= $1) implies ( s /. k ) = ( 1. L )))) implies ( Sum s ) = ( $1 * ( 1. L ) )));
A2: (for l being (Element of ( NAT )) holds (P[ l ] implies P[ ( l + 1 ) ]))
proof
let l being (Element of ( NAT ));
assume A3: (for g being (FinSequence of L) holds ((( len g ) = l & (for k being (Element of ( NAT )) holds ((1 <= k & k <= l) implies ( g /. k ) = ( 1. L )))) implies ( Sum g ) = ( l * ( 1. L ) )));
(for s being (FinSequence of L) holds ((( len s ) = ( l + 1 ) & (for k being (Element of ( NAT )) holds ((1 <= k & k <= ( l + 1 )) implies ( s /. k ) = ( 1. L )))) implies ( Sum s ) = ( ( l + 1 ) * ( 1. L ) )))
proof
(ex G being (FinSequence of L) st (( dom G ) = ( Seg l ) & (for k being Nat holds (k in ( Seg l ) implies ( G . k ) = ( 1. L )))))
proof
defpred P[ Nat,set ]
 means
$2 = ( 1. L );
A4: (for n being Nat holds (n in ( Seg l ) implies (ex x being (Element of L) st P[ n,x ])));
(ex G being (FinSequence of L) st (( dom G ) = ( Seg l ) & (for nn being Nat holds (nn in ( Seg l ) implies P[ nn,( G . nn ) ])))) from FINSEQ_1:sch 5(A4);
hence thesis;
end;
then consider g being (FinSequence of L) such that A5: ( dom g ) = ( Seg l ) and A6: (for k being Nat holds (k in ( Seg l ) implies ( g . k ) = ( 1. L )));
A7: ( len g ) = l by A5,FINSEQ_1:def 3;
A8: (for k being Nat holds ((1 <= k & k <= l) implies ( g /. k ) = ( 1. L )))
proof
let k being Nat;
assume A9: (1 <= k & k <= l);
then A10: k in ( dom g ) by A5,FINSEQ_1:1;
k in ( Seg l ) by A9,FINSEQ_1:1;
then ( 1. L ) = ( g . k ) by A6
.= ( g /. k ) by A10,PARTFUN1:def 6;
hence thesis;
end;
then A11: (for k being (Element of ( NAT )) holds ((1 <= k & k <= l) implies ( g /. k ) = ( 1. L )));
( dom <* ( 1. L ) *> ) = ( Seg 1 ) by FINSEQ_1:def 8;
then A12: ( len <* ( 1. L ) *> ) = 1 by FINSEQ_1:def 3;
let s being (FinSequence of L);
assume that
A13: ( len s ) = ( l + 1 )
and
A14: (for k being (Element of ( NAT )) holds ((1 <= k & k <= ( l + 1 )) implies ( s /. k ) = ( 1. L )));
A15: ( dom s ) = ( Seg ( l + 1 ) ) by A13,FINSEQ_1:def 3;
A16: (for k being Nat holds (k in ( dom s ) implies ( s . k ) = ( ( g ^ <* ( 1. L ) *> ) . k )))
proof
A17: ( dom s ) = ( Seg ( l + 1 ) ) by A13,FINSEQ_1:def 3;
let k being Nat;
A18: k in ( NAT ) by ORDINAL1:def 12;
assume A19: k in ( dom s );
per cases  by A19,A17,FINSEQ_1:1;
suppose A20: (1 <= k & k <= l);

then A21: k <= ( l + 1 ) by NAT_1:12;
A22: k in ( dom g ) by A5,A18,A20;
then ( ( g ^ <* ( 1. L ) *> ) . k ) = ( g . k ) by FINSEQ_1:def 7
.= ( g /. k ) by A22,PARTFUN1:def 6
.= ( 1. L ) by A8,A20
.= ( s /. k ) by A14,A18,A20,A21
.= ( s . k ) by A19,PARTFUN1:def 6;
hence thesis;
end;
suppose A23: (l < k & k <= ( l + 1 ));

then ( k - k ) <= ( ( l + 1 ) - k ) by XREAL_1:9;
then reconsider ii = ( ( ( l + 1 ) - k ) + 1 ) as (Element of ( NAT )) by INT_1:3;
( l + 1 ) <= k by A23,NAT_1:13;
then (( dom <* ( 1. L ) *> ) = ( Seg 1 ) & ii = ( ( k - k ) + 1 )) by A23,FINSEQ_1:def 8,XXREAL_0:1;
then A24: ii in ( dom <* ( 1. L ) *> );
( l + ( 0 ) ) < ( k + l ) by A23,XREAL_1:8;
then ( l + 1 ) <= ( k + l ) by NAT_1:13;
then A25: ( ( l + 1 ) - l ) <= ( ( k + l ) - l ) by XREAL_1:9;
( l + 1 ) <= k by A23,NAT_1:13;
then A26: ii = ( ( k - k ) + 1 ) by A23,XXREAL_0:1;
then ( ( g ^ <* ( 1. L ) *> ) . k ) = ( ( g ^ <* ( 1. L ) *> ) . ( ( len g ) + ii ) ) by A5,FINSEQ_1:def 3
.= ( <* ( 1. L ) *> . 1 ) by A24,A26,FINSEQ_1:def 7
.= ( 1. L ) by FINSEQ_1:def 8
.= ( s /. k ) by A14,A18,A23,A25
.= ( s . k ) by A19,PARTFUN1:def 6;
hence thesis;
end;
end;
( dom ( g ^ <* ( 1. L ) *> ) ) = ( Seg ( ( len g ) + ( len <* ( 1. L ) *> ) ) ) by FINSEQ_1:def 7
.= ( dom s ) by A5,A12,A15,FINSEQ_1:def 3;
then s = ( g ^ <* ( 1. L ) *> ) by A16,FINSEQ_1:13;
then ( Sum s ) = ( ( Sum g ) + ( 1. L ) ) by FVSUM_1:71
.= ( ( l * ( 1. L ) ) + ( 1. L ) ) by A3,A7,A11
.= ( ( l * ( 1. L ) ) + ( 1 * ( 1. L ) ) ) by BINOM:13
.= ( ( l + 1 ) * ( 1. L ) ) by BINOM:15;
hence thesis;
end;
hence thesis;
end;
(for s being (FinSequence of L) holds ((( len s ) = ( 0 ) & (for k being (Element of ( NAT )) holds ((1 <= k & k <= ( 0 )) implies ( s /. k ) = ( 1. L )))) implies ( Sum s ) = ( ( 0 ) * ( 1. L ) )))
proof
let s being (FinSequence of L);
assume that
A27: ( len s ) = ( 0 )
and
(for k being (Element of ( NAT )) holds ((1 <= k & k <= ( 0 )) implies ( s /. k ) = ( 1. L )));
A28: ( <*> (the carrier of L) ) is (Element of ( ( 0 ) -tuples_on (the carrier of L) )) by FINSEQ_2:131;
s = ( {} ) by A27;
then ( Sum s ) = ( Sum ( <*> (the carrier of L) ) )
.= ( 0. L ) by A28,FVSUM_1:74
.= ( ( 0 ) * ( 1. L ) ) by BINOM:12;
hence thesis;
end;
then A29: P[ ( 0 ) ];
(for l being (Element of ( NAT )) holds P[ l ]) from NAT_1:sch 1(A29,A2);
hence thesis by A1;
end;
