environ
vocabularies NUMBERS,INT_1,XXREAL_0,CARD_1,ARYTM_1,ARYTM_3,SUBSET_1,VECTSP_1,VECTSP_2,STRUCT_0,XBOOLE_0,ALGSTR_0,SUPINF_2,NEWTON,RELAT_1,GROUP_1,BINOP_1,RLVECT_1,MESFUNC1,LATTICES,ALGSTR_1,FINSEQ_1,PARTFUN1,CARD_3,NAT_1,FUNCT_1,ORDINAL4,FINSEQ_2,TARSKI,MATRIX_1,TREES_1,INCSP_1,FVSUM_1,RVSUM_1,ZFMISC_1,ALGSEQ_1,POLYNOM1,COMPLEX1,MCART_1,POLYNOM2,POLYNOM3,POLYNOM8;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,NUMBERS,XCMPLX_0,XXREAL_0,VECTSP_2,BINOP_1,BINOM,ALGSTR_1,PARTFUN1,FINSEQ_1,FINSEQ_2,INT_1,NAT_1,NAT_D,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,FVSUM_1,ALGSEQ_1,POLYNOM5,POLYNOM3,MATRIX_1,MATRIX_3,POLYNOM4,MCART_1,INT_2;
definitions VECTSP_1,RLVECT_1,BINOM,FINSEQ_1,MATRIX_1,POLYNOM3;
theorems FVSUM_1,GROUP_1,BINOM,VECTSP_1,ALGSEQ_1,NAT_1,FINSEQ_4,INT_1,FUNCT_2,XREAL_1,VECTSP_2,ALGSTR_1,MATRIX_1,FUNCT_1,MATRIX_3,FINSEQ_1,ZFMISC_1,COMPLEX1,RLVECT_1,POLYNOM4,TARSKI,MCART_1,FINSEQ_2,POLYNOM1,ABSVALUE,POLYNOM3,POLYNOM5,FINSEQ_3,ORDINAL1,XXREAL_0,FUNCOP_1,PARTFUN1,XREAL_0,CKB1,CKB2,CKB3;
schemes NAT_1,FUNCT_2,MATRIX_1,FINSEQ_1,INT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,STRUCT_0,VECTSP_1,ALGSTR_1,GCD_1,POLYNOM3,CARD_1,FINSEQ_1,CKB4;
constructors REAL_1,SQUARE_1,NAT_D,VECTSP_2,ALGSTR_2,TOPREAL1,MATRIX_3,POLYNOM1,POLYNOM4,POLYNOM5,BINOM,RELSET_1,FVSUM_1;
requirements NUMERALS,SUBSET,REAL,BOOLE,ARITHM;
begin
theorem
Th2: (for L being  add-associative  right_zeroed  right_complementable  associative  commutative  well-unital  almost_left_invertible  distributive non  empty doubleLoopStr holds (for x,y being (Element of L) holds ((x <> ( 0. L ) & y <> ( 0. L )) implies ( ( x * y ) " ) = ( ( x " ) * ( y " ) ))))
proof
let L being  add-associative  right_zeroed  right_complementable  associative  commutative  well-unital  almost_left_invertible  distributive non  empty doubleLoopStr;
let x being (Element of L);
let y being (Element of L);
assume that
A1: x <> ( 0. L )
and
A2: y <> ( 0. L );
A3: ( ( ( x " ) * ( y " ) ) * ( x * y ) ) = ( ( ( ( x " ) * ( y " ) ) * y ) * x ) by GROUP_1:def 3
.= ( ( ( x " ) * ( ( y " ) * y ) ) * x ) by GROUP_1:def 3
.= ( ( ( x " ) * ( 1. L ) ) * x ) by A2,VECTSP_1:def 10
.= ( ( x " ) * x ) by VECTSP_1:def 4
.= ( 1. L ) by A1,VECTSP_1:def 10;
( x * y ) <> ( 0. L ) by A1,A2,VECTSP_1:12;
hence thesis by A3,VECTSP_1:def 10;
end;
