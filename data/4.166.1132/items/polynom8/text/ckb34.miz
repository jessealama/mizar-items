environ
vocabularies NUMBERS,INT_1,XXREAL_0,CARD_1,ARYTM_1,ARYTM_3,SUBSET_1,VECTSP_1,VECTSP_2,STRUCT_0,XBOOLE_0,ALGSTR_0,SUPINF_2,NEWTON,RELAT_1,GROUP_1,BINOP_1,RLVECT_1,MESFUNC1,LATTICES,ALGSTR_1,FINSEQ_1,PARTFUN1,CARD_3,NAT_1,FUNCT_1,ORDINAL4,FINSEQ_2,TARSKI,MATRIX_1,TREES_1,INCSP_1,FVSUM_1,RVSUM_1,ZFMISC_1,ALGSEQ_1,POLYNOM1,COMPLEX1,MCART_1,POLYNOM2,POLYNOM3,POLYNOM8;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,NUMBERS,XCMPLX_0,XXREAL_0,VECTSP_2,BINOP_1,BINOM,ALGSTR_1,PARTFUN1,FINSEQ_1,FINSEQ_2,INT_1,NAT_1,NAT_D,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,FVSUM_1,ALGSEQ_1,POLYNOM5,POLYNOM3,MATRIX_1,MATRIX_3,POLYNOM4,MCART_1,INT_2,CKB9,CKB15,CKB19;
definitions VECTSP_1,RLVECT_1,BINOM,FINSEQ_1,MATRIX_1,POLYNOM3,CKB9,CKB15,CKB19;
theorems FVSUM_1,GROUP_1,BINOM,VECTSP_1,ALGSEQ_1,NAT_1,FINSEQ_4,INT_1,FUNCT_2,XREAL_1,VECTSP_2,ALGSTR_1,MATRIX_1,FUNCT_1,MATRIX_3,FINSEQ_1,ZFMISC_1,COMPLEX1,RLVECT_1,POLYNOM4,TARSKI,MCART_1,FINSEQ_2,POLYNOM1,ABSVALUE,POLYNOM3,POLYNOM5,FINSEQ_3,ORDINAL1,XXREAL_0,FUNCOP_1,PARTFUN1,XREAL_0,CKB1,CKB2,CKB3,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33;
schemes NAT_1,FUNCT_2,MATRIX_1,FINSEQ_1,INT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,STRUCT_0,VECTSP_1,ALGSTR_1,GCD_1,POLYNOM3,CARD_1,FINSEQ_1,CKB4,CKB16;
constructors REAL_1,SQUARE_1,NAT_D,VECTSP_2,ALGSTR_2,TOPREAL1,MATRIX_3,POLYNOM1,POLYNOM4,POLYNOM5,BINOM,RELSET_1,FVSUM_1,CKB9,CKB15,CKB19;
requirements NUMERALS,SUBSET,REAL,BOOLE,ARITHM;
begin
theorem
Lm8: (for L being  almost_left_invertible  associative  well-unital  add-associative  right_zeroed  right_complementable  left-distributive  commutative non  degenerated non  empty doubleLoopStr holds (for k being (Element of ( NAT )) holds (for x being (Element of L) holds (x <> ( 0. L ) implies ( ( x " ) |^ k ) = ( ( x |^ k ) " )))))
proof
let L being  almost_left_invertible  associative  well-unital  add-associative  right_zeroed  right_complementable  left-distributive  commutative non  degenerated non  empty doubleLoopStr;
let k being (Element of ( NAT ));
let x being (Element of L);
A1: ( 1. L ) <> ( 0. L );
defpred P[ (Element of ( NAT )) ]
 means
( ( x " ) |^ $1 ) = ( ( x |^ $1 ) " );
assume A2: x <> ( 0. L );
A3:now
let n being (Element of ( NAT ));
assume A4: P[ n ];
A5: ( x |^ n ) <> ( 0. L ) by A2,CKB3:1;
( ( x " ) |^ ( n + 1 ) ) = ( ( ( x " ) |^ n ) * ( x " ) ) by GROUP_1:def 7
.= ( ( x * ( x |^ n ) ) " ) by A2,A4,A5,CKB5:1
.= ( ( ( x |^ 1 ) * ( x |^ n ) ) " ) by BINOM:8
.= ( ( x |^ ( n + 1 ) ) " ) by BINOM:10;
hence P[ ( n + 1 ) ];
end;
( ( x " ) |^ ( 0 ) ) = ( 1_ L ) by BINOM:8
.= ( ( 1. L ) * ( ( 1. L ) " ) ) by A1,VECTSP_1:def 10
.= ( ( 1_ L ) " ) by VECTSP_1:def 8
.= ( ( x |^ ( 0 ) ) " ) by BINOM:8;
then A6: P[ ( 0 ) ];
(for n being (Element of ( NAT )) holds P[ n ]) from NAT_1:sch 1(A6,A3);
hence thesis;
end;
