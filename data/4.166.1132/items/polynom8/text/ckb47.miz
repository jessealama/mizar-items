environ
vocabularies NUMBERS,INT_1,XXREAL_0,CARD_1,ARYTM_1,ARYTM_3,SUBSET_1,VECTSP_1,VECTSP_2,STRUCT_0,XBOOLE_0,ALGSTR_0,SUPINF_2,NEWTON,RELAT_1,GROUP_1,BINOP_1,RLVECT_1,MESFUNC1,LATTICES,ALGSTR_1,FINSEQ_1,PARTFUN1,CARD_3,NAT_1,FUNCT_1,ORDINAL4,FINSEQ_2,TARSKI,MATRIX_1,TREES_1,INCSP_1,FVSUM_1,RVSUM_1,ZFMISC_1,ALGSEQ_1,POLYNOM1,COMPLEX1,MCART_1,POLYNOM2,POLYNOM3,POLYNOM8;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,NUMBERS,XCMPLX_0,XXREAL_0,VECTSP_2,BINOP_1,BINOM,ALGSTR_1,PARTFUN1,FINSEQ_1,FINSEQ_2,INT_1,NAT_1,NAT_D,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,FVSUM_1,ALGSEQ_1,POLYNOM5,POLYNOM3,MATRIX_1,MATRIX_3,POLYNOM4,MCART_1,INT_2,CKB9,CKB15,CKB19,CKB44;
definitions VECTSP_1,RLVECT_1,BINOM,FINSEQ_1,MATRIX_1,POLYNOM3,CKB9,CKB15,CKB19,CKB44;
theorems FVSUM_1,GROUP_1,BINOM,VECTSP_1,ALGSEQ_1,NAT_1,FINSEQ_4,INT_1,FUNCT_2,XREAL_1,VECTSP_2,ALGSTR_1,MATRIX_1,FUNCT_1,MATRIX_3,FINSEQ_1,ZFMISC_1,COMPLEX1,RLVECT_1,POLYNOM4,TARSKI,MCART_1,FINSEQ_2,POLYNOM1,ABSVALUE,POLYNOM3,POLYNOM5,FINSEQ_3,ORDINAL1,XXREAL_0,FUNCOP_1,PARTFUN1,XREAL_0,CKB1,CKB2,CKB3,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46;
schemes NAT_1,FUNCT_2,MATRIX_1,FINSEQ_1,INT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,STRUCT_0,VECTSP_1,ALGSTR_1,GCD_1,POLYNOM3,CARD_1,FINSEQ_1,CKB4,CKB16;
constructors REAL_1,SQUARE_1,NAT_D,VECTSP_2,ALGSTR_2,TOPREAL1,MATRIX_3,POLYNOM1,POLYNOM4,POLYNOM5,BINOM,RELSET_1,FVSUM_1,CKB9,CKB15,CKB19,CKB44;
requirements NUMERALS,SUBSET,REAL,BOOLE,ARITHM;
begin
definition
let L being non  empty ZeroStr;
let M being (Matrix of L);
func aConv M -> (AlgSequence of L) means 
:Def5: ((for i being Nat holds (i < ( len M ) implies ( it . i ) = ( M * (( i + 1 ),1) ))) & (for i being Nat holds (i >= ( len M ) implies ( it . i ) = ( 0. L ))));
existence
proof
defpred P[ set,set ]
 means
(ex k being (Element of ( NAT )) st (k = $1 & ((k < ( len M ) & $2 = ( M * (( k + 1 ),1) )) or (( len M ) <= k & $2 = ( 0. L )))));
A1: (for x being set holds (x in ( NAT ) implies (ex y being set st (y in (the carrier of L) & P[ x,y ]))))
proof
let u being set;
assume u in ( NAT );
then reconsider u9 = u as (Element of ( NAT ));
thus (ex y being set st (y in (the carrier of L) & P[ u,y ]))
proof
per cases ;
suppose A2: u9 < ( len M );

take ( M * (( u9 + 1 ),1) );
thus thesis by A2;
end;
suppose A3: u9 >= ( len M );

take ( 0. L );
thus thesis by A3;
end;
end;

end;
consider f being (Function of ( NAT ),(the carrier of L)) such that A4: (for x being set holds (x in ( NAT ) implies P[ x,( f . x ) ])) from FUNCT_2:sch 1(A1);
reconsider f as (sequence of L);
(ex n being Nat st (for i being Nat holds (i >= n implies ( f . i ) = ( 0. L ))))
proof
take ( len M );
now
let i being Nat;
i in ( NAT ) by ORDINAL1:def 12;
then A5: (ex k being (Element of ( NAT )) st (k = i & ((k < ( len M ) & ( f . i ) = ( M * (( k + 1 ),1) )) or (( len M ) <= k & ( f . i ) = ( 0. L ))))) by A4;
assume i >= ( len M );
hence ( f . i ) = ( 0. L ) by A5;
end;
hence thesis;
end;
then reconsider q = f as (AlgSequence of L) by ALGSEQ_1:def 1;
A6:now
let i being Nat;
i in ( NAT ) by ORDINAL1:def 12;
then A7: (ex k being (Element of ( NAT )) st (k = i & ((k < ( len M ) & ( q . i ) = ( M * (( k + 1 ),1) )) or (( len M ) <= k & ( q . i ) = ( 0. L ))))) by A4;
assume i >= ( len M );
hence ( q . i ) = ( 0. L ) by A7;
end;
take q;
now
let i being Nat;
i in ( NAT ) by ORDINAL1:def 12;
then A8: (ex k being (Element of ( NAT )) st (k = i & ((k < ( len M ) & ( q . i ) = ( M * (( k + 1 ),1) )) or (( len M ) <= k & ( q . i ) = ( 0. L ))))) by A4;
assume i < ( len M );
hence ( q . i ) = ( M * (( i + 1 ),1) ) by A8;
end;
hence thesis by A6;
end;
uniqueness
proof
let z1 being (AlgSequence of L);
let z2 being (AlgSequence of L);
assume that
A9: (for i being Nat holds (i < ( len M ) implies ( z1 . i ) = ( M * (( i + 1 ),1) )))
and
A10: (for i being Nat holds (i >= ( len M ) implies ( z1 . i ) = ( 0. L )));
assume that
A11: (for i being Nat holds (i < ( len M ) implies ( z2 . i ) = ( M * (( i + 1 ),1) )))
and
A12: (for i being Nat holds (i >= ( len M ) implies ( z2 . i ) = ( 0. L )));
A13:now
let u being set;
assume u in ( dom z1 );
then reconsider u9 = u as (Element of ( NAT )) by FUNCT_2:def 1;
per cases ;
suppose A14: u9 < ( len M );

hence ( z1 . u ) = ( M * (( u9 + 1 ),1) ) by A9
.= ( z2 . u ) by A11,A14;
end;
suppose A15: ( len M ) <= u9;

hence ( z1 . u ) = ( 0. L ) by A10
.= ( z2 . u ) by A12,A15;
end;
end;
( dom z1 ) = ( NAT ) by FUNCT_2:def 1
.= ( dom z2 ) by FUNCT_2:def 1;
hence z1 = z2 by A13,FUNCT_1:2;
end;
end;
