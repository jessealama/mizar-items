environ
vocabularies XBOOLE_0,STRUCT_0,BINOP_1,SUBSET_1,FINSEQ_1,FUNCT_1,VALUED_1,RELAT_1,FINSET_1,TREES_2,ZFMISC_1,NUMBERS,CARD_1,MCART_1,ORDINAL4,FUNCOP_1,TARSKI,ORDINAL1,XXREAL_0,ARYTM_3,CARD_3,NAT_1,REAL_1,FUNCT_5,PRELAMB;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,REAL_1,BINOP_1,RELSET_1,FINSEQ_1,FINSEQ_2,FINSET_1,MCART_1,STRUCT_0,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,FUNCT_5,RVSUM_1,XCMPLX_0,NAT_1,TREES_1,TREES_2,XXREAL_0,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
definitions TARSKI,STRUCT_0,XBOOLE_0,BINOP_1,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14,CKB16,CKB17;
theorems FINSEQ_1,ZFMISC_1,TREES_2,FUNCOP_1,FUNCT_2,TARSKI,MCART_1,CARD_1,TREES_1,NAT_1,CARD_2,RVSUM_1,RELAT_1,XBOOLE_1,FINSEQ_2,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14,CKB16,CKB17;
schemes FUNCT_2,FINSEQ_2;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,NUMBERS,MEMBERED,FINSEQ_1,TREES_2,STRUCT_0,VALUED_0,RELSET_1,CARD_1,CKB1,CKB2;
constructors BINOP_1,FUNCT_3,XXREAL_0,NAT_1,RVSUM_1,TREES_2,MIDSP_1,FUNCT_5,RELSET_1,BINOP_2,FUNCOP_1,REAL_1,CKB1,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB16,CKB17,CKB18;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve s for non empty typealg;
definition
let s;
mode Proof of s
 -> (PreProof of s)
means :Def13: (( dom it ) is  finite & (for v being (Element of ( dom it )) holds v is  correct));
existence
proof
deffunc PAIRSOF(typealg) = [: ( (the carrier of $1) * ),(the carrier of $1) :];
set x = the (type of s);
set Tr = ( { ( {} ) } --> [ [ <* x *>,x ],( 0 ) ] );
A1: ( dom Tr ) = { ( {} ) } by FUNCOP_1:13;
reconsider Tr as  finite DecoratedTree by TREES_1:23;
A2: [ [ <* x *>,x ],( 0 ) ] in [: PAIRSOF(s),( NAT ) :] by ZFMISC_1:87;
{ [ [ <* x *>,x ],( 0 ) ] } = ( rng Tr ) by FUNCOP_1:8;
then ( rng Tr ) c= [: PAIRSOF(s),( NAT ) :] by A2,ZFMISC_1:31;
then reconsider Tr as (PreProof of s) by RELAT_1:def 19;
take Tr;
thus ( dom Tr ) is  finite;
let v being (Element of ( dom Tr ));
A3: v = ( {} ) by A1,TARSKI:def 1;
A4:now
set x = the (Element of ( ( dom Tr ) -level 1 ));
assume ( ( dom Tr ) -level 1 ) <> ( {} );
then x in ( ( dom Tr ) -level 1 );
then x in { w where w is (Element of ( dom Tr )): ( len w ) = 1 } by TREES_2:def 6;
then (ex w being (Element of ( dom Tr )) st (x = w & ( len w ) = 1));
hence contradiction by A1,CARD_1:27,TARSKI:def 1;
end;
A5: ( branchdeg v ) = ( card ( succ v ) ) by TREES_2:def 12
.= ( 0 ) by A3,A4,CARD_1:27,TREES_2:13;
A6: ( Tr . v ) = [ [ <* x *>,x ],( 0 ) ] by A1,FUNCOP_1:7;
then A7: ( ( Tr . v ) `1 ) = [ <* x *>,x ] by MCART_1:7;
( ( Tr . v ) `2 ) = ( 0 ) by A6,MCART_1:7;
hence thesis by A5,A7,CKB8:def 1;
end;
end;
