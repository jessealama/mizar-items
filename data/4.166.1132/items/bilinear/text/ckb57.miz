environ
vocabularies STRUCT_0,VECTSP_1,FUNCT_1,ZFMISC_1,XBOOLE_0,FUNCOP_1,SUPINF_2,ALGSTR_0,ARYTM_3,SUBSET_1,RELAT_1,ARYTM_1,RLVECT_1,MESFUNC1,BINOP_1,FUNCT_5,TARSKI,HAHNBAN,HAHNBAN1,MSSUBFAM,UNIALG_1,LATTICES,RLSUB_1,VECTSP10,GROUP_6,RELAT_2,SPPOL_1,BILINEAR;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,FUNCT_1,RELAT_1,STRUCT_0,ALGSTR_0,RLVECT_1,BINOP_1,GROUP_1,VECTSP_1,RELSET_1,FUNCT_2,FUNCOP_1,FUNCT_5,VECTSP_4,HAHNBAN1,VECTSP10,GRCAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB17,CKB18,CKB31,CKB38,CKB39,CKB40,CKB41,CKB48;
definitions HAHNBAN1,TARSKI,XBOOLE_0,VECTSP_4,BINOP_1,STRUCT_0,GRCAT_1,FUNCT_2,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB17,CKB18,CKB31,CKB38,CKB39,CKB40,CKB41;
theorems FUNCT_5,XBOOLE_1,FUNCT_2,HAHNBAN1,VECTSP_1,FUNCOP_1,RLVECT_1,VECTSP_4,TARSKI,FUNCT_1,REALSET1,ZFMISC_1,DOMAIN_1,VECTSP10,GROUP_1,BINOP_1,STRUCT_0,VECTSP_2,GRCAT_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41;
schemes BINOP_1;
registrations SUBSET_1,RELSET_1,STRUCT_0,VECTSP_1,VECTSP_4,HAHNBAN1,VECTSP10,FUNCT_2,ZFMISC_1,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56;
constructors BORSUK_1,VECTSP10,FUNCOP_1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB9,CKB17,CKB18,CKB31,CKB38,CKB39,CKB40,CKB41;
requirements SUBSET,BOOLE;
begin
registration
let K being non  degenerated non  empty doubleLoopStr;
let V being non  trivial VectSpStr over K;
let W being non  empty VectSpStr over K;
let f being (Functional of V);
let g being (Functional of W);
cluster ( FormFunctional (f,g) ) -> non  trivial;
coherence
proof
set fg = ( FormFunctional (f,g) );
set w = the (Vector of W);
consider v being (Vector of V) such that A1: v <> ( 0. V ) by STRUCT_0:def 18;
A2: [ ( 0. V ),( 0. W ) ] <> [ v,w ] by A1,ZFMISC_1:27;
( dom fg ) = [: (the carrier of V),(the carrier of W) :] by FUNCT_2:def 1;
then A3: ([ [ ( 0. V ),( 0. W ) ],( fg . (( 0. V ),( 0. W )) ) ] in fg & [ [ v,w ],( fg . (v,w) ) ] in fg) by FUNCT_1:1;
assume A4: fg is  trivial;
per cases  by A4,ZFMISC_1:131;
suppose fg = ( {} );

hence contradiction;
end;
suppose (ex x being set st fg = { x });

then consider x being set such that A5: fg = { x };
([ [ ( 0. V ),( 0. W ) ],( fg . (( 0. V ),( 0. W )) ) ] = x & x = [ [ v,w ],( fg . (v,w) ) ]) by A3,A5,TARSKI:def 1;
hence contradiction by A2,ZFMISC_1:27;
end;
end;
end;
