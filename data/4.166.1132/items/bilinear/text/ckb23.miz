environ
vocabularies STRUCT_0,VECTSP_1,FUNCT_1,ZFMISC_1,XBOOLE_0,FUNCOP_1,SUPINF_2,ALGSTR_0,ARYTM_3,SUBSET_1,RELAT_1,ARYTM_1,RLVECT_1,MESFUNC1,BINOP_1,FUNCT_5,TARSKI,HAHNBAN,HAHNBAN1,MSSUBFAM,UNIALG_1,LATTICES,RLSUB_1,VECTSP10,GROUP_6,RELAT_2,SPPOL_1,BILINEAR;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,FUNCT_1,RELAT_1,STRUCT_0,ALGSTR_0,RLVECT_1,BINOP_1,GROUP_1,VECTSP_1,RELSET_1,FUNCT_2,FUNCOP_1,FUNCT_5,VECTSP_4,HAHNBAN1,VECTSP10,GRCAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB17,CKB18;
definitions HAHNBAN1,TARSKI,XBOOLE_0,VECTSP_4,BINOP_1,STRUCT_0,GRCAT_1,FUNCT_2,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB17,CKB18;
theorems FUNCT_5,XBOOLE_1,FUNCT_2,HAHNBAN1,VECTSP_1,FUNCOP_1,RLVECT_1,VECTSP_4,TARSKI,FUNCT_1,REALSET1,ZFMISC_1,DOMAIN_1,VECTSP10,GROUP_1,BINOP_1,STRUCT_0,VECTSP_2,GRCAT_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22;
schemes BINOP_1;
registrations SUBSET_1,RELSET_1,STRUCT_0,VECTSP_1,VECTSP_4,HAHNBAN1,VECTSP10,FUNCT_2,ZFMISC_1;
constructors BORSUK_1,VECTSP10,FUNCOP_1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB9,CKB17,CKB18;
requirements SUBSET,BOOLE;
begin
theorem
Th13: (for K being non  empty addLoopStr holds (for V,W being non  empty VectSpStr over K holds (for f,g being (Form of V,W) holds (for w being (Vector of W) holds ( FunctionalSAF (( f + g ),w) ) = ( ( FunctionalSAF (f,w) ) + ( FunctionalSAF (g,w) ) )))))
proof
let K being non  empty addLoopStr;
let V being non  empty VectSpStr over K;
let W being non  empty VectSpStr over K;
let f being (Form of V,W);
let g being (Form of V,W);
let w being (Vector of W);
now
let v being (Vector of V);
thus ( ( FunctionalSAF (( f + g ),w) ) . v ) = ( ( f + g ) . (v,w) ) by CKB20:1
.= ( ( f . (v,w) ) + ( g . (v,w) ) ) by CKB3:def 1
.= ( ( ( FunctionalSAF (f,w) ) . v ) + ( g . (v,w) ) ) by CKB20:1
.= ( ( ( FunctionalSAF (f,w) ) . v ) + ( ( FunctionalSAF (g,w) ) . v ) ) by CKB20:1
.= ( ( ( FunctionalSAF (f,w) ) + ( FunctionalSAF (g,w) ) ) . v ) by HAHNBAN1:def 3;
end;
hence thesis by FUNCT_2:63;
end;
