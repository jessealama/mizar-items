environ
vocabularies STRUCT_0,VECTSP_1,FUNCT_1,ZFMISC_1,XBOOLE_0,FUNCOP_1,SUPINF_2,ALGSTR_0,ARYTM_3,SUBSET_1,RELAT_1,ARYTM_1,RLVECT_1,MESFUNC1,BINOP_1,FUNCT_5,TARSKI,HAHNBAN,HAHNBAN1,MSSUBFAM,UNIALG_1,LATTICES,RLSUB_1,VECTSP10,GROUP_6,RELAT_2,SPPOL_1,BILINEAR;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,FUNCT_1,RELAT_1,STRUCT_0,ALGSTR_0,RLVECT_1,BINOP_1,GROUP_1,VECTSP_1,RELSET_1,FUNCT_2,FUNCOP_1,FUNCT_5,VECTSP_4,HAHNBAN1,VECTSP10,GRCAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB17,CKB18,CKB31,CKB38,CKB39,CKB40,CKB41,CKB48;
definitions HAHNBAN1,TARSKI,XBOOLE_0,VECTSP_4,BINOP_1,STRUCT_0,GRCAT_1,FUNCT_2,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB17,CKB18,CKB31,CKB38,CKB39,CKB40,CKB41;
theorems FUNCT_5,XBOOLE_1,FUNCT_2,HAHNBAN1,VECTSP_1,FUNCOP_1,RLVECT_1,VECTSP_4,TARSKI,FUNCT_1,REALSET1,ZFMISC_1,DOMAIN_1,VECTSP10,GROUP_1,BINOP_1,STRUCT_0,VECTSP_2,GRCAT_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90;
schemes BINOP_1;
registrations SUBSET_1,RELSET_1,STRUCT_0,VECTSP_1,VECTSP_4,HAHNBAN1,VECTSP10,FUNCT_2,ZFMISC_1,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76;
constructors BORSUK_1,VECTSP10,FUNCOP_1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB9,CKB17,CKB18,CKB31,CKB38,CKB39,CKB40,CKB41;
requirements SUBSET,BOOLE;
begin
theorem
Th41: (for K being  add-associative  right_zeroed  right_complementable non  empty doubleLoopStr holds (for V,W being  right_zeroed non  empty VectSpStr over K holds (for f being (Form of V,W) holds ((f is  additiveFAF or f is  additiveSAF) implies (f is  constant iff (for v being (Vector of V) holds (for w being (Vector of W) holds ( f . (v,w) ) = ( 0. K ))))))))
proof
let K being  add-associative  right_zeroed  right_complementable non  empty doubleLoopStr;
let V being  right_zeroed non  empty VectSpStr over K;
let W being  right_zeroed non  empty VectSpStr over K;
let f being (Form of V,W);
A1: ( dom f ) = [: (the carrier of V),(the carrier of W) :] by FUNCT_2:def 1;
assume A2: (f is  additiveFAF or f is  additiveSAF);
hereby
assume A3: f is  constant;
let v being (Vector of V);
let w being (Vector of W);
per cases  by A2;
suppose A4: f is  additiveFAF;

thus ( f . (v,w) ) = ( f . (v,( 0. W )) ) by A1,A3,BINOP_1:19
.= ( 0. K ) by A4,CKB80:1;
end;
suppose A5: f is  additiveSAF;

thus ( f . (v,w) ) = ( f . (( 0. V ),w) ) by A1,A3,BINOP_1:19
.= ( 0. K ) by A5,CKB81:1;
end;
end;
hereby
assume A6: (for v being (Vector of V) holds (for w being (Vector of W) holds ( f . (v,w) ) = ( 0. K )));
now
let x being set;
let y being set;
assume that
A7: x in ( dom f )
and
A8: y in ( dom f );
consider v being (Vector of V),w being (Vector of W) such that A9: x = [ v,w ] by A7,DOMAIN_1:1;
consider s being (Vector of V),t being (Vector of W) such that A10: y = [ s,t ] by A8,DOMAIN_1:1;
thus ( f . x ) = ( f . (v,w) ) by A9
.= ( 0. K ) by A6
.= ( f . (s,t) ) by A6
.= ( f . y ) by A10;
end;
hence f is  constant by FUNCT_1:def 10;
end;
end;
