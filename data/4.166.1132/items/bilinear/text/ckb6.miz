environ
vocabularies STRUCT_0,VECTSP_1,FUNCT_1,ZFMISC_1,XBOOLE_0,FUNCOP_1,SUPINF_2,ALGSTR_0,ARYTM_3,SUBSET_1,RELAT_1,ARYTM_1,RLVECT_1,MESFUNC1,BINOP_1,FUNCT_5,TARSKI,HAHNBAN,HAHNBAN1,MSSUBFAM,UNIALG_1,LATTICES,RLSUB_1,VECTSP10,GROUP_6,RELAT_2,SPPOL_1,BILINEAR;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,FUNCT_1,RELAT_1,STRUCT_0,ALGSTR_0,RLVECT_1,BINOP_1,GROUP_1,VECTSP_1,RELSET_1,FUNCT_2,FUNCOP_1,FUNCT_5,VECTSP_4,HAHNBAN1,VECTSP10,GRCAT_1,CKB1,CKB2,CKB3,CKB4,CKB5;
definitions HAHNBAN1,TARSKI,XBOOLE_0,VECTSP_4,BINOP_1,STRUCT_0,GRCAT_1,FUNCT_2,CKB2,CKB3,CKB4,CKB5;
theorems FUNCT_5,XBOOLE_1,FUNCT_2,HAHNBAN1,VECTSP_1,FUNCOP_1,RLVECT_1,VECTSP_4,TARSKI,FUNCT_1,REALSET1,ZFMISC_1,DOMAIN_1,VECTSP10,GROUP_1,BINOP_1,STRUCT_0,VECTSP_2,GRCAT_1,CKB2,CKB3,CKB4,CKB5;
schemes BINOP_1;
registrations SUBSET_1,RELSET_1,STRUCT_0,VECTSP_1,VECTSP_4,HAHNBAN1,VECTSP10,FUNCT_2,ZFMISC_1;
constructors BORSUK_1,VECTSP10,FUNCOP_1,CKB2,CKB3,CKB4,CKB5;
requirements SUBSET,BOOLE;
begin
definition
let K being  add-associative  right_zeroed  right_complementable  left-distributive  left_unital non  empty doubleLoopStr;
let V being non  empty VectSpStr over K;
let W being non  empty VectSpStr over K;
let f being (Form of V,W);
redefine func - f equals 
( ( - ( 1. K ) ) * f );
compatibility
proof
let g being (Form of V,W);
thus (g = ( - f ) implies g = ( ( - ( 1. K ) ) * f ))
proof
assume A1: g = ( - f );
now
let v being (Vector of V);
let w being (Vector of W);
thus ( g . (v,w) ) = ( - ( f . (v,w) ) ) by A1,CKB5:def 1
.= ( ( - ( 1. K ) ) * ( f . (v,w) ) ) by VECTSP_2:29
.= ( ( ( - ( 1. K ) ) * f ) . (v,w) ) by CKB4:def 1;
end;
hence thesis by BINOP_1:2;
end;

assume A2: g = ( ( - ( 1. K ) ) * f );
now
let v being (Vector of V);
let w being (Vector of W);
thus ( g . (v,w) ) = ( ( - ( 1. K ) ) * ( f . (v,w) ) ) by A2,CKB4:def 1
.= ( - ( f . (v,w) ) ) by VECTSP_2:29
.= ( ( - f ) . (v,w) ) by CKB5:def 1;
end;
hence thesis by BINOP_1:2;
end;
end;
