environ
vocabularies STRUCT_0,VECTSP_1,FUNCT_1,ZFMISC_1,XBOOLE_0,FUNCOP_1,SUPINF_2,ALGSTR_0,ARYTM_3,SUBSET_1,RELAT_1,ARYTM_1,RLVECT_1,MESFUNC1,BINOP_1,FUNCT_5,TARSKI,HAHNBAN,HAHNBAN1,MSSUBFAM,UNIALG_1,LATTICES,RLSUB_1,VECTSP10,GROUP_6,RELAT_2,SPPOL_1,BILINEAR;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,FUNCT_1,RELAT_1,STRUCT_0,ALGSTR_0,RLVECT_1,BINOP_1,GROUP_1,VECTSP_1,RELSET_1,FUNCT_2,FUNCOP_1,FUNCT_5,VECTSP_4,HAHNBAN1,VECTSP10,GRCAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB17,CKB18,CKB31,CKB38,CKB39,CKB40,CKB41,CKB48,CKB92,CKB93,CKB94,CKB106,CKB107,CKB108,CKB109,CKB112;
definitions HAHNBAN1,TARSKI,XBOOLE_0,VECTSP_4,BINOP_1,STRUCT_0,GRCAT_1,FUNCT_2,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB17,CKB18,CKB31,CKB38,CKB39,CKB40,CKB41,CKB92,CKB93,CKB94,CKB106,CKB107,CKB108,CKB109,CKB112;
theorems FUNCT_5,XBOOLE_1,FUNCT_2,HAHNBAN1,VECTSP_1,FUNCOP_1,RLVECT_1,VECTSP_4,TARSKI,FUNCT_1,REALSET1,ZFMISC_1,DOMAIN_1,VECTSP10,GROUP_1,BINOP_1,STRUCT_0,VECTSP_2,GRCAT_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB103,CKB104,CKB105,CKB106,CKB107,CKB108,CKB109,CKB112,CKB113,CKB114,CKB115,CKB116;
schemes BINOP_1;
registrations SUBSET_1,RELSET_1,STRUCT_0,VECTSP_1,VECTSP_4,HAHNBAN1,VECTSP10,FUNCT_2,ZFMISC_1,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB110,CKB111;
constructors BORSUK_1,VECTSP10,FUNCOP_1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB9,CKB17,CKB18,CKB31,CKB38,CKB39,CKB40,CKB41,CKB92,CKB93,CKB94,CKB106,CKB107,CKB108,CKB109,CKB112;
requirements SUBSET,BOOLE;
begin
theorem
Th49: (for K being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for V,W being (VectSp of K) holds (for f being (bilinear-Form of V,W) holds (( QForm f ) = ( RQForm ( LQForm f ) ) & ( QForm f ) = ( LQForm ( RQForm f ) )))))
proof
let K being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let V being (VectSp of K);
let W being (VectSp of K);
let f being (bilinear-Form of V,W);
set L = ( LKer f );
set vq = ( VectQuot (V,L) );
set R = ( RKer f );
set wq = ( VectQuot (W,R) );
set RL = ( RKer ( LQForm f ) );
set wqr = ( VectQuot (W,RL) );
set LR = ( LKer ( RQForm f ) );
set vql = ( VectQuot (V,LR) );
A1: ( dom ( QForm f ) ) = [: (the carrier of vq),(the carrier of wq) :] by FUNCT_2:def 1;
A2:now
let x being set;
assume x in ( dom ( QForm f ) );
then consider A being (Vector of vq),B being (Vector of wq) such that A3: x = [ A,B ] by DOMAIN_1:1;
consider w being (Vector of W) such that A4: B = ( w + R ) by VECTSP10:22;
A5: R = RL by CKB115:1;
consider v being (Vector of V) such that A6: A = ( v + L ) by VECTSP10:22;
thus ( ( QForm f ) . x ) = ( ( QForm f ) . (A,B) ) by A3
.= ( f . (v,w) ) by A6,A4,CKB112:def 1
.= ( ( LQForm f ) . (A,w) ) by A6,CKB108:def 1
.= ( ( RQForm ( LQForm f ) ) . (A,B) ) by A4,A5,CKB109:def 1
.= ( ( RQForm ( LQForm f ) ) . x ) by A3;
end;
(( dom ( RQForm ( LQForm f ) ) ) = [: (the carrier of vq),(the carrier of wqr) :] & (the carrier of wqr) = (the carrier of wq)) by CKB115:1,FUNCT_2:def 1;
hence ( QForm f ) = ( RQForm ( LQForm f ) ) by A1,A2,FUNCT_1:2;
A7:now
let x being set;
assume x in ( dom ( QForm f ) );
then consider A being (Vector of vq),B being (Vector of wq) such that A8: x = [ A,B ] by DOMAIN_1:1;
consider w being (Vector of W) such that A9: B = ( w + R ) by VECTSP10:22;
A10: L = LR by CKB116:1;
consider v being (Vector of V) such that A11: A = ( v + L ) by VECTSP10:22;
thus ( ( QForm f ) . x ) = ( ( QForm f ) . (A,B) ) by A8
.= ( f . (v,w) ) by A11,A9,CKB112:def 1
.= ( ( RQForm f ) . (v,B) ) by A9,CKB109:def 1
.= ( ( LQForm ( RQForm f ) ) . (A,B) ) by A11,A10,CKB108:def 1
.= ( ( LQForm ( RQForm f ) ) . x ) by A8;
end;
(( dom ( LQForm ( RQForm f ) ) ) = [: (the carrier of vql),(the carrier of wq) :] & (the carrier of vql) = (the carrier of vq)) by CKB116:1,FUNCT_2:def 1;
hence thesis by A1,A7,FUNCT_1:2;
end;
