environ
vocabularies NUMBERS,ORDINAL1,ZFMISC_1,STRUCT_0,VALUED_0,POLYNOM7,SUBSET_1,RELAT_1,SUPINF_2,POLYNOM1,VECTSP_1,ORDERS_1,TARSKI,PRE_POLY,ARYTM_3,FUNCT_1,ALGSEQ_1,NAT_1,FINSET_1,CARD_1,XXREAL_0,XBOOLE_0,RLVECT_1,ALGSTR_0,FINSEQ_1,CARD_3,PARTFUN1,ORDINAL4,ARYTM_1,ALGSTR_1,LATTICES,VECTSP_2,BINOP_1,CAT_3,MCART_1,RELAT_2,BAGORDER,TERMORD,XCMPLX_0,BROUWER,ORDERS_2,WELLORD1,FINSUB_1,WAYBEL_4,MESFUNC1,REWRITE1,INT_1,IDEAL_1,POLYRED;
notations CARD_1,NUMBERS,XCMPLX_0,TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,RELAT_1,RELAT_2,RELSET_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,XXREAL_0,STRUCT_0,ALGSTR_0,ORDINAL1,NAT_1,ALGSTR_1,WAYBEL_0,FINSUB_1,WAYBEL_4,REWRITE1,RLVECT_1,FINSEQ_1,MCART_1,ORDERS_1,VFUNCT_1,GROUP_1,VECTSP_2,VECTSP_1,POLYNOM7,WELLORD1,WELLFND1,IDEAL_1,ORDERS_2,POLYNOM1,BAGORDER,TERMORD,PRE_POLY;
definitions STRUCT_0,POLYNOM7;
theorems TARSKI,RELSET_1,FINSEQ_1,FUNCT_1,FUNCT_2,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,BINOM,RLVECT_1,VECTSP_2,FINSET_1,NAT_1,POLYNOM2,ALGSTR_1,RELAT_2,CARD_1,CARD_2,WAYBEL_0,ORDERS_2,ORDERS_1,MCART_1,POLYNOM7,FINSUB_1,WELLORD1,WELLFND1,REWRITE1,WAYBEL_4,XBOOLE_0,XBOOLE_1,MATRLIN,IDEAL_1,BAGORDER,TERMORD,XCMPLX_1,GROUP_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,STRUCT_0,PRE_POLY,CKB3,CKB4,CKB5,CKB6;
schemes NAT_1,RELSET_1;
registrations XBOOLE_0,RELAT_1,ORDINAL1,FINSET_1,FINSUB_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,FINSEQ_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,GCD_1,POLYNOM1,POLYNOM2,POLYNOM4,IDEAL_1,POLYNOM7,BAGORDER,TERMORD,VALUED_0,ALGSTR_0,PRE_POLY,VFUNCT_1,FUNCT_2,FUNCT_1,RELSET_1,CKB1,CKB2;
constructors REWRITE1,VECTSP_2,TRIANG_1,WAYBEL_4,WELLFND1,IDEAL_1,BAGORDER,TERMORD,DOMAIN_1,RELSET_1,BINOP_2,FVSUM_1,VFUNCT_1;
requirements NUMERALS,REAL,SUBSET,BOOLE;
begin
theorem
Lm5: (for n being Ordinal holds (for L being non  trivial ZeroStr holds (for p being  non-zero  finite-Support (Series of n,L) holds (ex b being (bag of n) st (( p . b ) <> ( 0. L ) & (for b9 being (bag of n) holds (b < b9 implies ( p . b9 ) = ( 0. L ))))))))
proof
let n being Ordinal;
let L being non  trivial ZeroStr;
let p being  non-zero  finite-Support (Series of n,L);
defpred P[ Nat ]
 means
(for B being  finite (Subset of ( Bags n )) holds (( card B ) = $1 implies (ex b being (bag of n) st (b in B & (for b9 being (bag of n) holds (b9 in B implies b9 <=' b))))));
A1: (for k being Nat holds (1 <= k implies (P[ k ] implies P[ ( k + 1 ) ])))
proof
let k being Nat;
assume A2: 1 <= k;
thus (P[ k ] implies P[ ( k + 1 ) ])
proof
assume A3: P[ k ];
thus P[ ( k + 1 ) ]
proof
let B being  finite (Subset of ( Bags n ));
assume A4: ( card B ) = ( k + 1 );
then reconsider B as non  empty  finite (Subset of ( Bags n ));
set x = the (Element of B);
reconsider x as (Element of ( Bags n ));
reconsider x as (bag of n);
set X = ( B \ { x } );
now
let u being set;
assume u in { x };
then u = x by TARSKI:def 1;
hence u in B;
end;
then { x } c= B by TARSKI:def 3;
then A5: B = ( { x } \/ B ) by XBOOLE_1:12
.= ( { x } \/ X ) by XBOOLE_1:39;
(x in X iff (x in B & (not x in { x }))) by XBOOLE_0:def 5;
then A6: ( ( card X ) + 1 ) = ( k + 1 ) by A4,A5,CARD_2:41,TARSKI:def 1;
then reconsider X as non  empty set by A2,XCMPLX_1:2;
reconsider X as non  empty  finite (Subset of ( Bags n ));
consider b being (bag of n) such that A7: b in X and A8: (for b9 being (bag of n) holds (b9 in X implies b9 <=' b)) by A3,A6,XCMPLX_1:2;
A9:now
per cases  by PRE_POLY:45;
case A10: x <=' b;
now
let b9 being (bag of n);
assume A11: b9 in B;
now
per cases ;
case b9 in X;
hence b9 <=' b by A8;
end;
case (not b9 in X);
then b9 in { x } by A5,A11,XBOOLE_0:def 3;
hence b9 <=' b by A10,TARSKI:def 1;
end;
end;
hence b9 <=' b;
end;
hence (for b9 being (bag of n) holds (b9 in B implies b9 <=' b));
end;
case A12: b <=' x;
now
let b9 being (bag of n);
assume A13: b9 in B;
now
per cases ;
case b9 in X;
then b9 <=' b by A8;
hence b9 <=' x by A12,PRE_POLY:42;
end;
case (not b9 in X);
then b9 in { x } by A5,A13,XBOOLE_0:def 3;
hence b9 <=' x by TARSKI:def 1;
end;
end;
hence b9 <=' x;
end;
hence (for b9 being (bag of n) holds (b9 in B implies b9 <=' x));
end;
end;
b in B by A5,A7,XBOOLE_0:def 3;
hence thesis by A9;
end;

end;

end;
reconsider sp = ( Support p ) as  finite set by POLYNOM1:def 4;
A14: ( Support p ) is  finite  finite (Subset of ( Bags n )) by POLYNOM1:def 4;
( card sp ) is  finite;
then consider m being Nat such that A15: ( card ( Support p ) ) = ( card m ) by CARD_1:48;
p <> ( 0_ (n,L) ) by POLYNOM7:def 1;
then ( Support p ) <> ( {} ) by POLYNOM7:1;
then m <> ( 0 ) by A15;
then A16: 1 <= m by NAT_1:14;
A17: ( card ( Support p ) ) = m by A15,CARD_1:def 2;
A18: P[ 1 ]
proof
let B being  finite (Subset of ( Bags n ));
assume ( card B ) = 1;
then ( card { ( {} ) } ) = ( card B ) by CARD_1:30;
then consider b being set such that A19: B = { b } by CARD_1:29;
A20: b in B by A19,TARSKI:def 1;
then reconsider b as (Element of ( Bags n ));
reconsider b as (bag of n);
(for b9 being (bag of n) holds (b9 in B implies b9 <=' b)) by A19,TARSKI:def 1;
hence thesis by A20;
end;
(for k being Nat holds (1 <= k implies P[ k ])) from NAT_1:sch 8(A18,A1);
then consider b being (bag of n) such that A21: b in ( Support p ) and A22: (for b9 being (bag of n) holds (b9 in ( Support p ) implies b9 <=' b)) by A17,A16,A14;
A23:now
let b9 being (bag of n);
assume b < b9;
then (not b9 <=' b) by CKB6:1;
then A24: (not b9 in ( Support p )) by A22;
b9 is (Element of ( Bags n )) by PRE_POLY:def 12;
hence ( p . b9 ) = ( 0. L ) by A24,POLYNOM1:def 3;
end;
( p . b ) <> ( 0. L ) by A21,POLYNOM1:def 3;
hence thesis by A23;
end;
