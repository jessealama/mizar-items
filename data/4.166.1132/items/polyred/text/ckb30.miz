environ
vocabularies NUMBERS,ORDINAL1,ZFMISC_1,STRUCT_0,VALUED_0,POLYNOM7,SUBSET_1,RELAT_1,SUPINF_2,POLYNOM1,VECTSP_1,ORDERS_1,TARSKI,PRE_POLY,ARYTM_3,FUNCT_1,ALGSEQ_1,NAT_1,FINSET_1,CARD_1,XXREAL_0,XBOOLE_0,RLVECT_1,ALGSTR_0,FINSEQ_1,CARD_3,PARTFUN1,ORDINAL4,ARYTM_1,ALGSTR_1,LATTICES,VECTSP_2,BINOP_1,CAT_3,MCART_1,RELAT_2,BAGORDER,TERMORD,XCMPLX_0,BROUWER,ORDERS_2,WELLORD1,FINSUB_1,WAYBEL_4,MESFUNC1,REWRITE1,INT_1,IDEAL_1,POLYRED;
notations CARD_1,NUMBERS,XCMPLX_0,TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,RELAT_1,RELAT_2,RELSET_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,XXREAL_0,STRUCT_0,ALGSTR_0,ORDINAL1,NAT_1,ALGSTR_1,WAYBEL_0,FINSUB_1,WAYBEL_4,REWRITE1,RLVECT_1,FINSEQ_1,MCART_1,ORDERS_1,VFUNCT_1,GROUP_1,VECTSP_2,VECTSP_1,POLYNOM7,WELLORD1,WELLFND1,IDEAL_1,ORDERS_2,POLYNOM1,BAGORDER,TERMORD,PRE_POLY,CKB24;
definitions STRUCT_0,POLYNOM7,CKB24;
theorems TARSKI,RELSET_1,FINSEQ_1,FUNCT_1,FUNCT_2,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,BINOM,RLVECT_1,VECTSP_2,FINSET_1,NAT_1,POLYNOM2,ALGSTR_1,RELAT_2,CARD_1,CARD_2,WAYBEL_0,ORDERS_2,ORDERS_1,MCART_1,POLYNOM7,FINSUB_1,WELLORD1,WELLFND1,REWRITE1,WAYBEL_4,XBOOLE_0,XBOOLE_1,MATRLIN,IDEAL_1,BAGORDER,TERMORD,XCMPLX_1,GROUP_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,STRUCT_0,PRE_POLY,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29;
schemes NAT_1,RELSET_1;
registrations XBOOLE_0,RELAT_1,ORDINAL1,FINSET_1,FINSUB_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,FINSEQ_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,GCD_1,POLYNOM1,POLYNOM2,POLYNOM4,IDEAL_1,POLYNOM7,BAGORDER,TERMORD,VALUED_0,ALGSTR_0,PRE_POLY,VFUNCT_1,FUNCT_2,FUNCT_1,RELSET_1,CKB1,CKB2,CKB9,CKB27;
constructors REWRITE1,VECTSP_2,TRIANG_1,WAYBEL_4,WELLFND1,IDEAL_1,BAGORDER,TERMORD,DOMAIN_1,RELSET_1,BINOP_2,FVSUM_1,VFUNCT_1,CKB24;
requirements NUMERALS,REAL,SUBSET,BOOLE;
begin
theorem
Th15: (for n being Ordinal holds (for T being  connected  admissible (TermOrder of n) holds (for L being non trivial ZeroStr holds (for p being  non-zero (Polynomial of n,L) holds (for b being (bag of n) holds ( HT (( b *' p ),T) ) = ( b + ( HT (p,T) ) ))))))
proof
let n being Ordinal;
let T being  connected  admissible (TermOrder of n);
let L being non trivial ZeroStr;
let p being  non-zero (Polynomial of n,L);
let b being (bag of n);
set htp = ( HT (p,T) );
per cases ;
suppose A1: ( Support ( b *' p ) ) = ( {} );

now
assume ( Support p ) <> ( {} );
then reconsider sp = ( Support p ) as non empty set;
set u = the (Element of sp);
u in ( Support p );
then reconsider u9 = u as (Element of ( Bags n ));
b divides ( b + u9 ) by PRE_POLY:50;
then ( ( b *' p ) . ( b + u9 ) ) = ( p . ( ( b + u9 ) -' b ) ) by CKB24:def 1
.= ( p . u9 ) by PRE_POLY:48;
then A2: ( ( b *' p ) . ( b + u9 ) ) <> ( 0. L ) by POLYNOM1:def 3;
( b + u9 ) is (Element of ( Bags n )) by PRE_POLY:def 12;
hence contradiction by A1,A2,POLYNOM1:def 3;
end;
then p = ( 0_ (n,L) ) by POLYNOM7:1;
hence thesis by POLYNOM7:def 1;
end;
suppose A3: ( Support ( b *' p ) ) <> ( {} );

now
reconsider sp = ( Support ( b *' p ) ) as non empty set by A3;
set u = the (Element of sp);
u in ( Support ( b *' p ) );
then reconsider u9 = u as (Element of ( Bags n ));
A4: ( u9 -' b ) is (Element of ( Bags n )) by PRE_POLY:def 12;
A5: ( ( b *' p ) . u9 ) <> ( 0. L ) by POLYNOM1:def 3;
then b divides u9 by CKB24:def 1;
then A6: ( p . ( u9 -' b ) ) <> ( 0. L ) by A5,CKB24:def 1;
assume ( Support p ) = ( {} );
hence contradiction by A6,A4,POLYNOM1:def 3;
end;
then htp in ( Support p ) by TERMORD:def 6;
then A7: ( p . htp ) <> ( 0. L ) by POLYNOM1:def 3;
A8:now
let b9 being (bag of n);
assume b9 in ( Support ( b *' p ) );
then A9: ( ( b *' p ) . b9 ) <> ( 0. L ) by POLYNOM1:def 3;
then b divides b9 by CKB24:def 1;
then consider b3 being (bag of n) such that A10: ( b + b3 ) = b9 by TERMORD:1;
A11: b3 is (Element of ( Bags n )) by PRE_POLY:def 12;
( ( b *' p ) . b9 ) = ( p . b3 ) by A10,CKB25:1;
then b3 in ( Support p ) by A9,A11,POLYNOM1:def 3;
then b3 <= htp,T by TERMORD:def 6;
then [ b3,htp ] in T by TERMORD:def 2;
then [ b9,( b + htp ) ] in T by A10,BAGORDER:def 5;
hence b9 <= ( b + htp ),T by TERMORD:def 2;
end;
(( ( b *' p ) . ( b + htp ) ) = ( p . htp ) & ( b + htp ) is (Element of ( Bags n ))) by CKB25:1,PRE_POLY:def 12;
then ( b + htp ) in ( Support ( b *' p ) ) by A7,POLYNOM1:def 3;
hence thesis by A8,TERMORD:def 6;
end;
end;
