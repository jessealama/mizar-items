environ
vocabularies NUMBERS,ORDINAL1,ZFMISC_1,STRUCT_0,VALUED_0,POLYNOM7,SUBSET_1,RELAT_1,SUPINF_2,POLYNOM1,VECTSP_1,ORDERS_1,TARSKI,PRE_POLY,ARYTM_3,FUNCT_1,ALGSEQ_1,NAT_1,FINSET_1,CARD_1,XXREAL_0,XBOOLE_0,RLVECT_1,ALGSTR_0,FINSEQ_1,CARD_3,PARTFUN1,ORDINAL4,ARYTM_1,ALGSTR_1,LATTICES,VECTSP_2,BINOP_1,CAT_3,MCART_1,RELAT_2,BAGORDER,TERMORD,XCMPLX_0,BROUWER,ORDERS_2,WELLORD1,FINSUB_1,WAYBEL_4,MESFUNC1,REWRITE1,INT_1,IDEAL_1,POLYRED;
notations CARD_1,NUMBERS,XCMPLX_0,TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,RELAT_1,RELAT_2,RELSET_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,XXREAL_0,STRUCT_0,ALGSTR_0,ORDINAL1,NAT_1,ALGSTR_1,WAYBEL_0,FINSUB_1,WAYBEL_4,REWRITE1,RLVECT_1,FINSEQ_1,MCART_1,ORDERS_1,VFUNCT_1,GROUP_1,VECTSP_2,VECTSP_1,POLYNOM7,WELLORD1,WELLFND1,IDEAL_1,ORDERS_2,POLYNOM1,BAGORDER,TERMORD,PRE_POLY,CKB24,CKB42,CKB43,CKB44;
definitions STRUCT_0,POLYNOM7,CKB24,CKB42,CKB43,CKB44;
theorems TARSKI,RELSET_1,FINSEQ_1,FUNCT_1,FUNCT_2,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,BINOM,RLVECT_1,VECTSP_2,FINSET_1,NAT_1,POLYNOM2,ALGSTR_1,RELAT_2,CARD_1,CARD_2,WAYBEL_0,ORDERS_2,ORDERS_1,MCART_1,POLYNOM7,FINSUB_1,WELLORD1,WELLFND1,REWRITE1,WAYBEL_4,XBOOLE_0,XBOOLE_1,MATRLIN,IDEAL_1,BAGORDER,TERMORD,XCMPLX_1,GROUP_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,STRUCT_0,PRE_POLY,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53;
schemes NAT_1,RELSET_1;
registrations XBOOLE_0,RELAT_1,ORDINAL1,FINSET_1,FINSUB_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,FINSEQ_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,GCD_1,POLYNOM1,POLYNOM2,POLYNOM4,IDEAL_1,POLYNOM7,BAGORDER,TERMORD,VALUED_0,ALGSTR_0,PRE_POLY,VFUNCT_1,FUNCT_2,FUNCT_1,RELSET_1,CKB1,CKB2,CKB9,CKB27,CKB39,CKB40;
constructors REWRITE1,VECTSP_2,TRIANG_1,WAYBEL_4,WELLFND1,IDEAL_1,BAGORDER,TERMORD,DOMAIN_1,RELSET_1,BINOP_2,FVSUM_1,VFUNCT_1,CKB24,CKB42,CKB43,CKB44;
requirements NUMERALS,REAL,SUBSET,BOOLE;
begin
theorem
Lm15: (for n being Ordinal holds (for T being  connected  admissible (TermOrder of n) holds (for L being  add-associative  right_complementable  right_zeroed non  trivial addLoopStr holds (for p,q being (Polynomial of n,L) holds (p < q,T iff (((p = ( 0_ (n,L) ) & q <> ( 0_ (n,L) )) or ( HT (p,T) ) < ( HT (q,T) ),T) or (( HT (p,T) ) = ( HT (q,T) ) & ( Red (p,T) ) < ( Red (q,T) ),T)))))))
proof
let n being Ordinal;
let T being  connected  admissible (TermOrder of n);
let L being  add-associative  right_complementable  right_zeroed non  trivial addLoopStr;
let p being (Polynomial of n,L);
let q being (Polynomial of n,L);
set R = RelStr (# ( Bags n ),T #);
set sp = ( Support p );
set sq = ( Support q );
set x = ( Support (p,T) );
set y = ( Support (q,T) );
A1:now
assume A2: (((p = ( 0_ (n,L) ) & q <> ( 0_ (n,L) )) or ( HT (p,T) ) < ( HT (q,T) ),T) or (( HT (p,T) ) = ( HT (q,T) ) & ( Red (p,T) ) < ( Red (q,T) ),T));
now
per cases  by A2;
case A3: (p = ( 0_ (n,L) ) & q <> ( 0_ (n,L) ));
then ( Support p ) = ( {} ) by POLYNOM7:1;
then A4: ( Support p ) <> ( Support q ) by A3,POLYNOM7:1;
p <= q,T by A3,CKB47:1;
hence p < q,T by A4,CKB43:def 1;
end;
case A5: ( HT (p,T) ) < ( HT (q,T) ),T;
then A6: ( HT (p,T) ) <> ( HT (q,T) ) by TERMORD:def 3;
A7: ( HT (p,T) ) <= ( HT (q,T) ),T by A5,TERMORD:def 3;
then A8: [ ( HT (p,T) ),( HT (q,T) ) ] in T by TERMORD:def 2;
now
per cases ;
case A9: sp = ( {} );
then A10: p = ( 0_ (n,L) ) by POLYNOM7:1;
A11:now
assume sp = sq;
then ( HT (p,T) ) = ( HT (q,T) ) by A9,A10,POLYNOM7:1;
hence contradiction by A5,TERMORD:def 3;
end;
p <= q,T by A10,CKB47:1;
hence p < q,T by A11,CKB43:def 1;
end;
case A12: sp <> ( {} );
A13:now
assume sq = ( {} );
then ( HT (q,T) ) = ( EmptyBag n ) by TERMORD:def 6;
then [ ( HT (q,T) ),( HT (p,T) ) ] in T by BAGORDER:def 5;
then ( HT (q,T) ) <= ( HT (p,T) ),T by TERMORD:def 2;
hence contradiction by A7,A6,TERMORD:7;
end;
A14:now
assume A15: sp = sq;
( HT (q,T) ) in sq by A13,TERMORD:def 6;
then A16: ( HT (q,T) ) <= ( HT (p,T) ),T by A15,TERMORD:def 6;
( HT (p,T) ) in sp by A12,TERMORD:def 6;
then ( HT (p,T) ) <= ( HT (q,T) ),T by A15,TERMORD:def 6;
hence contradiction by A6,A16,TERMORD:7;
end;
p <> ( 0_ (n,L) ) by A12,POLYNOM7:1;
then p is  non-zero by POLYNOM7:def 1;
then A17: ( PosetMax ( Support (p,T) ) ) = ( HT (p,T) ) by CKB45:1;
q <> ( 0_ (n,L) ) by A13,POLYNOM7:1;
then q is  non-zero by POLYNOM7:def 1;
then ( PosetMax ( Support (q,T) ) ) = ( HT (q,T) ) by CKB45:1;
then [ x,y ] in ( union ( rng ( FinOrd-Approx R ) ) ) by A6,A8,A12,A13,A17,BAGORDER:35;
then [ sp,sq ] in ( FinOrd R ) by BAGORDER:def 15;
then p <= q,T by CKB42:def 1;
hence p < q,T by A14,CKB43:def 1;
end;
end;
hence p < q,T;
end;
case A18: (( HT (p,T) ) = ( HT (q,T) ) & ( Red (p,T) ) < ( Red (q,T) ),T);
then ( Red (p,T) ) <= ( Red (q,T) ),T by CKB43:def 1;
then A19: [ ( Support ( Red (p,T) ) ),( Support ( Red (q,T) ) ) ] in ( FinOrd R ) by CKB42:def 1;
now
per cases ;
case sp = ( {} );
then A20: ( HT (p,T) ) = ( EmptyBag n ) by TERMORD:def 6;
then ( Red (p,T) ) = ( 0_ (n,L) ) by CKB53:1;
then ( Support ( Red (q,T) ) ) = ( Support ( Red (p,T) ) ) by A18,A20,CKB53:1;
hence contradiction by A18,CKB43:def 1;
end;
case A21: sp <> ( {} );
now
per cases ;
case sq = ( {} );
then A22: ( HT (q,T) ) = ( EmptyBag n ) by TERMORD:def 6;
then ( Red (q,T) ) = ( 0_ (n,L) ) by CKB53:1;
then ( Support ( Red (p,T) ) ) = ( Support ( Red (q,T) ) ) by A18,A22,CKB53:1;
hence contradiction by A18,CKB43:def 1;
end;
case A23: sq <> ( {} );
A24:now
assume sp = sq;
then ( Support ( Red (p,T) ) ) = ( sq \ { ( HT (q,T) ) } ) by A18,TERMORD:36
.= ( Support ( Red (q,T) ) ) by TERMORD:36;
hence contradiction by A18,CKB43:def 1;
end;
set rp = ( Red (p,T) );
set rq = ( Red (q,T) );
p <> ( 0_ (n,L) ) by A21,POLYNOM7:1;
then A25: p is  non-zero by POLYNOM7:def 1;
q <> ( 0_ (n,L) ) by A23,POLYNOM7:1;
then A26: q is  non-zero by POLYNOM7:def 1;
then A27: ( PosetMax ( Support (q,T) ) ) = ( HT (q,T) ) by CKB45:1;
A28: ( Support rq ) = ( ( Support q ) \ { ( HT (q,T) ) } ) by TERMORD:36
.= ( y \ { ( PosetMax y ) } ) by A26,CKB45:1;
( Support rp ) = ( ( Support p ) \ { ( HT (p,T) ) } ) by TERMORD:36
.= ( x \ { ( PosetMax x ) } ) by A25,CKB45:1;
then A29: [ ( x \ { ( PosetMax x ) } ),( y \ { ( PosetMax y ) } ) ] in ( union ( rng ( FinOrd-Approx R ) ) ) by A19,A28,BAGORDER:def 15;
( PosetMax ( Support (p,T) ) ) = ( HT (p,T) ) by A25,CKB45:1;
then [ x,y ] in ( union ( rng ( FinOrd-Approx R ) ) ) by A18,A21,A23,A27,A29,BAGORDER:35;
then [ sp,sq ] in ( FinOrd R ) by BAGORDER:def 15;
then p <= q,T by CKB42:def 1;
hence p < q,T by A24,CKB43:def 1;
end;
end;
hence p < q,T;
end;
end;
hence p < q,T;
end;
end;
hence p < q,T;
end;
now
assume A30: p < q,T;
then p <= q,T by CKB43:def 1;
then [ sp,sq ] in ( FinOrd R ) by CKB42:def 1;
then A31: [ sp,sq ] in ( union ( rng ( FinOrd-Approx R ) ) ) by BAGORDER:def 15;
A32: ( Support p ) <> ( Support q ) by A30,CKB43:def 1;
now
per cases  by A31,BAGORDER:35;
case x = ( {} );
hence (p = ( 0_ (n,L) ) & q <> ( 0_ (n,L) )) by A32,POLYNOM7:1;
end;
case A33: (((x <> ( {} ) & y <> ( {} )) & ( PosetMax x ) <> ( PosetMax y )) & [ ( PosetMax x ),( PosetMax y ) ] in (the InternalRel of R));
then q <> ( 0_ (n,L) ) by POLYNOM7:1;
then q is  non-zero by POLYNOM7:def 1;
then A34: ( PosetMax ( Support (q,T) ) ) = ( HT (q,T) ) by CKB45:1;
p <> ( 0_ (n,L) ) by A33,POLYNOM7:1;
then p is  non-zero by POLYNOM7:def 1;
then A35: ( PosetMax ( Support (p,T) ) ) = ( HT (p,T) ) by CKB45:1;
then ( HT (p,T) ) <= ( HT (q,T) ),T by A33,A34,TERMORD:def 2;
hence ( HT (p,T) ) < ( HT (q,T) ),T by A33,A35,A34,TERMORD:def 3;
end;
case A36: (((x <> ( {} ) & y <> ( {} )) & ( PosetMax x ) = ( PosetMax y )) & [ ( x \ { ( PosetMax x ) } ),( y \ { ( PosetMax y ) } ) ] in ( union ( rng ( FinOrd-Approx R ) ) ));
set rp = ( Red (p,T) );
set rq = ( Red (q,T) );
p <> ( 0_ (n,L) ) by A36,POLYNOM7:1;
then A37: p is  non-zero by POLYNOM7:def 1;
then A38: ( PosetMax ( Support (p,T) ) ) = ( HT (p,T) ) by CKB45:1;
q <> ( 0_ (n,L) ) by A36,POLYNOM7:1;
then A39: q is  non-zero by POLYNOM7:def 1;
then A40: ( PosetMax ( Support (q,T) ) ) = ( HT (q,T) ) by CKB45:1;
A41:now
( HT (q,T) ) in sq by A36,TERMORD:def 6;
then (for u being set holds (u in { ( HT (q,T) ) } implies u in sq)) by TARSKI:def 1;
then A42: { ( HT (q,T) ) } c= sq by TARSKI:def 3;
( Support rq ) = ( sq \ { ( HT (q,T) ) } ) by TERMORD:36;
then A43: ( ( Support rq ) \/ { ( HT (q,T) ) } ) = ( sq \/ { ( HT (q,T) ) } ) by XBOOLE_1:39
.= sq by A42,XBOOLE_1:12;
( HT (p,T) ) in sp by A36,TERMORD:def 6;
then (for u being set holds (u in { ( HT (p,T) ) } implies u in sp)) by TARSKI:def 1;
then A44: { ( HT (p,T) ) } c= sp by TARSKI:def 3;
( Support rp ) = ( sp \ { ( HT (p,T) ) } ) by TERMORD:36;
then A45: ( ( Support rp ) \/ { ( HT (p,T) ) } ) = ( sp \/ { ( HT (p,T) ) } ) by XBOOLE_1:39
.= sp by A44,XBOOLE_1:12;
assume ( Support ( Red (p,T) ) ) = ( Support ( Red (q,T) ) );
hence contradiction by A30,A36,A38,A40,A45,A43,CKB43:def 1;
end;
A46: ( Support (rp,T) ) = ( ( Support p ) \ { ( HT (p,T) ) } ) by TERMORD:36
.= ( x \ { ( PosetMax x ) } ) by A37,CKB45:1;
( Support (rq,T) ) = ( ( Support q ) \ { ( HT (q,T) ) } ) by TERMORD:36
.= ( y \ { ( PosetMax y ) } ) by A39,CKB45:1;
then [ ( Support (rp,T) ),( Support (rq,T) ) ] in ( FinOrd R ) by A36,A46,BAGORDER:def 15;
then ( Red (p,T) ) <= ( Red (q,T) ),T by CKB42:def 1;
hence (( HT (p,T) ) = ( HT (q,T) ) & ( Red (p,T) ) < ( Red (q,T) ),T) by A36,A39,A38,A41,CKB43:def 1,CKB45:1;
end;
end;
hence (((p = ( 0_ (n,L) ) & q <> ( 0_ (n,L) )) or ( HT (p,T) ) < ( HT (q,T) ),T) or (( HT (p,T) ) = ( HT (q,T) ) & ( Red (p,T) ) < ( Red (q,T) ),T));
end;
hence thesis by A1;
end;
