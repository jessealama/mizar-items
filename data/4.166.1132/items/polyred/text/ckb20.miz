environ
vocabularies NUMBERS,ORDINAL1,ZFMISC_1,STRUCT_0,VALUED_0,POLYNOM7,SUBSET_1,RELAT_1,SUPINF_2,POLYNOM1,VECTSP_1,ORDERS_1,TARSKI,PRE_POLY,ARYTM_3,FUNCT_1,ALGSEQ_1,NAT_1,FINSET_1,CARD_1,XXREAL_0,XBOOLE_0,RLVECT_1,ALGSTR_0,FINSEQ_1,CARD_3,PARTFUN1,ORDINAL4,ARYTM_1,ALGSTR_1,LATTICES,VECTSP_2,BINOP_1,CAT_3,MCART_1,RELAT_2,BAGORDER,TERMORD,XCMPLX_0,BROUWER,ORDERS_2,WELLORD1,FINSUB_1,WAYBEL_4,MESFUNC1,REWRITE1,INT_1,IDEAL_1,POLYRED;
notations CARD_1,NUMBERS,XCMPLX_0,TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,RELAT_1,RELAT_2,RELSET_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,XXREAL_0,STRUCT_0,ALGSTR_0,ORDINAL1,NAT_1,ALGSTR_1,WAYBEL_0,FINSUB_1,WAYBEL_4,REWRITE1,RLVECT_1,FINSEQ_1,MCART_1,ORDERS_1,VFUNCT_1,GROUP_1,VECTSP_2,VECTSP_1,POLYNOM7,WELLORD1,WELLFND1,IDEAL_1,ORDERS_2,POLYNOM1,BAGORDER,TERMORD,PRE_POLY;
definitions STRUCT_0,POLYNOM7;
theorems TARSKI,RELSET_1,FINSEQ_1,FUNCT_1,FUNCT_2,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,BINOM,RLVECT_1,VECTSP_2,FINSET_1,NAT_1,POLYNOM2,ALGSTR_1,RELAT_2,CARD_1,CARD_2,WAYBEL_0,ORDERS_2,ORDERS_1,MCART_1,POLYNOM7,FINSUB_1,WELLORD1,WELLFND1,REWRITE1,WAYBEL_4,XBOOLE_0,XBOOLE_1,MATRLIN,IDEAL_1,BAGORDER,TERMORD,XCMPLX_1,GROUP_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,STRUCT_0,PRE_POLY,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes NAT_1,RELSET_1;
registrations XBOOLE_0,RELAT_1,ORDINAL1,FINSET_1,FINSUB_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,FINSEQ_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,GCD_1,POLYNOM1,POLYNOM2,POLYNOM4,IDEAL_1,POLYNOM7,BAGORDER,TERMORD,VALUED_0,ALGSTR_0,PRE_POLY,VFUNCT_1,FUNCT_2,FUNCT_1,RELSET_1,CKB1,CKB2,CKB9;
constructors REWRITE1,VECTSP_2,TRIANG_1,WAYBEL_4,WELLFND1,IDEAL_1,BAGORDER,TERMORD,DOMAIN_1,RELSET_1,BINOP_2,FVSUM_1,VFUNCT_1;
requirements NUMERALS,REAL,SUBSET,BOOLE;
begin
theorem
Th9: (for X being set holds (for L being  add-associative  right_zeroed  right_complementable  distributive non  empty doubleLoopStr holds (for p being (Series of X,L) holds (for a being (Element of L) holds (( - ( a * p ) ) = ( ( - a ) * p ) & ( - ( a * p ) ) = ( a * ( - p ) ))))))
proof
let n being set;
let L being  add-associative  right_zeroed  right_complementable  distributive non  empty doubleLoopStr;
let p being (Series of n,L);
let a being (Element of L);
set ap = ( a * p );
A1:now
let u being set;
assume u in ( dom ( - ap ) );
then reconsider u9 = u as (bag of n);
( ( - ap ) . u9 ) = ( - ( ap . u9 ) ) by POLYNOM1:17
.= ( - ( a * ( p . u9 ) ) ) by POLYNOM7:def 9
.= ( ( - a ) * ( p . u9 ) ) by VECTSP_1:9
.= ( ( ( - a ) * p ) . u9 ) by POLYNOM7:def 9;
hence ( ( - ap ) . u ) = ( ( ( - a ) * p ) . u );
end;
( dom ( - ap ) ) = ( Bags n ) by FUNCT_2:def 1
.= ( dom ( ( - a ) * p ) ) by FUNCT_2:def 1;
hence ( - ( a * p ) ) = ( ( - a ) * p ) by A1,FUNCT_1:2;
A2:now
let u being set;
assume u in ( dom ( - ap ) );
then reconsider u9 = u as (bag of n);
( ( - ap ) . u9 ) = ( - ( ap . u9 ) ) by POLYNOM1:17
.= ( - ( a * ( p . u9 ) ) ) by POLYNOM7:def 9
.= ( a * ( - ( p . u9 ) ) ) by VECTSP_1:8
.= ( a * ( ( - p ) . u9 ) ) by POLYNOM1:17
.= ( ( a * ( - p ) ) . u9 ) by POLYNOM7:def 9;
hence ( ( - ap ) . u ) = ( ( a * ( - p ) ) . u );
end;
( dom ( - ap ) ) = ( Bags n ) by FUNCT_2:def 1
.= ( dom ( a * ( - p ) ) ) by FUNCT_2:def 1;
hence thesis by A2,FUNCT_1:2;
end;
