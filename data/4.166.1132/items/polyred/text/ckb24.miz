environ
vocabularies NUMBERS,ORDINAL1,ZFMISC_1,STRUCT_0,VALUED_0,POLYNOM7,SUBSET_1,RELAT_1,SUPINF_2,POLYNOM1,VECTSP_1,ORDERS_1,TARSKI,PRE_POLY,ARYTM_3,FUNCT_1,ALGSEQ_1,NAT_1,FINSET_1,CARD_1,XXREAL_0,XBOOLE_0,RLVECT_1,ALGSTR_0,FINSEQ_1,CARD_3,PARTFUN1,ORDINAL4,ARYTM_1,ALGSTR_1,LATTICES,VECTSP_2,BINOP_1,CAT_3,MCART_1,RELAT_2,BAGORDER,TERMORD,XCMPLX_0,BROUWER,ORDERS_2,WELLORD1,FINSUB_1,WAYBEL_4,MESFUNC1,REWRITE1,INT_1,IDEAL_1,POLYRED;
notations CARD_1,NUMBERS,XCMPLX_0,TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,RELAT_1,RELAT_2,RELSET_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,XXREAL_0,STRUCT_0,ALGSTR_0,ORDINAL1,NAT_1,ALGSTR_1,WAYBEL_0,FINSUB_1,WAYBEL_4,REWRITE1,RLVECT_1,FINSEQ_1,MCART_1,ORDERS_1,VFUNCT_1,GROUP_1,VECTSP_2,VECTSP_1,POLYNOM7,WELLORD1,WELLFND1,IDEAL_1,ORDERS_2,POLYNOM1,BAGORDER,TERMORD,PRE_POLY;
definitions STRUCT_0,POLYNOM7;
theorems TARSKI,RELSET_1,FINSEQ_1,FUNCT_1,FUNCT_2,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,BINOM,RLVECT_1,VECTSP_2,FINSET_1,NAT_1,POLYNOM2,ALGSTR_1,RELAT_2,CARD_1,CARD_2,WAYBEL_0,ORDERS_2,ORDERS_1,MCART_1,POLYNOM7,FINSUB_1,WELLORD1,WELLFND1,REWRITE1,WAYBEL_4,XBOOLE_0,XBOOLE_1,MATRLIN,IDEAL_1,BAGORDER,TERMORD,XCMPLX_1,GROUP_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,STRUCT_0,PRE_POLY,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23;
schemes NAT_1,RELSET_1;
registrations XBOOLE_0,RELAT_1,ORDINAL1,FINSET_1,FINSUB_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,FINSEQ_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,GCD_1,POLYNOM1,POLYNOM2,POLYNOM4,IDEAL_1,POLYNOM7,BAGORDER,TERMORD,VALUED_0,ALGSTR_0,PRE_POLY,VFUNCT_1,FUNCT_2,FUNCT_1,RELSET_1,CKB1,CKB2,CKB9;
constructors REWRITE1,VECTSP_2,TRIANG_1,WAYBEL_4,WELLFND1,IDEAL_1,BAGORDER,TERMORD,DOMAIN_1,RELSET_1,BINOP_2,FVSUM_1,VFUNCT_1;
requirements NUMERALS,REAL,SUBSET,BOOLE;
begin
definition
let n being Ordinal;
let b being (bag of n);
let L being non empty ZeroStr;
let p being (Series of n,L);
func b *' p -> (Series of n,L)
means
:Def1: (for b9 being (bag of n) holds (b divides b9 implies (( it . b9 ) = ( p . ( b9 -' b ) ) & (for b9 being (bag of n) holds ((not b divides b9) implies ( it . b9 ) = ( 0. L ))))));
existence
proof
set M1 = { [ b9,( p . ( b9 -' b ) ) ] where b9 is (Element of ( Bags n )): b divides b9 };
set M2 = { [ b9,( 0. L ) ] where b9 is (Element of ( Bags n )): (not b divides b9) };
set M = ( M1 \/ M2 );
now
let u being set;
assume A1: u in M;
now
per cases  by A1,XBOOLE_0:def 3;
case u in M1;
then (ex b9 being (Element of ( Bags n )) st (u = [ b9,( p . ( b9 -' b ) ) ] & b divides b9));
hence u in [: ( Bags n ),(the carrier of L) :] by ZFMISC_1:def 2;
end;
case u in M2;
then (ex b9 being (Element of ( Bags n )) st (u = [ b9,( 0. L ) ] & (not b divides b9)));
hence u in [: ( Bags n ),(the carrier of L) :] by ZFMISC_1:def 2;
end;
end;
hence u in [: ( Bags n ),(the carrier of L) :];
end;
then reconsider M as (Relation of ( Bags n ),(the carrier of L)) by TARSKI:def 3;
A2:now
let u being set;
assume u in ( Bags n );
then reconsider u9 = u as (bag of n);
A3: u9 is (Element of ( Bags n )) by PRE_POLY:def 12;
now
per cases ;
case (not b divides u9);
then [ u9,( 0. L ) ] in { [ b9,( 0. L ) ] where b9 is (Element of ( Bags n )): (not b divides b9) } by A3;
then [ u9,( 0. L ) ] in M by XBOOLE_0:def 3;
hence u in ( dom M ) by RELAT_1:def 4;
end;
case b divides u9;
then [ u9,( p . ( u9 -' b ) ) ] in { [ b9,( p . ( b9 -' b ) ) ] where b9 is (Element of ( Bags n )): b divides b9 } by A3;
then [ u9,( p . ( u9 -' b ) ) ] in M by XBOOLE_0:def 3;
hence u in ( dom M ) by RELAT_1:def 4;
end;
end;
hence u in ( dom M );
end;
(for u being set holds (u in ( dom M ) implies u in ( Bags n )));
then A4: ( dom M ) = ( Bags n ) by A2,TARSKI:1;
A5:now
let x being set,y1 being set,y2 being set;
assume A6: ([ x,y1 ] in M & [ x,y2 ] in M);
A7:now
assume that
A8: [ x,y1 ] in M2
and
A9: [ x,y2 ] in M1;
consider v being (Element of ( Bags n )) such that A10: [ v,( 0. L ) ] = [ x,y1 ] and A11: (not b divides v) by A8;
consider u being (Element of ( Bags n )) such that A12: [ u,( p . ( u -' b ) ) ] = [ x,y2 ] and A13: b divides u by A9;
u = ( [ x,y2 ] `1 ) by A12,MCART_1:def 1
.= x by MCART_1:def 1
.= ( [ v,( 0. L ) ] `1 ) by A10,MCART_1:def 1
.= v by MCART_1:def 1;
hence contradiction by A13,A11;
end;
A14:now
assume that
A15: [ x,y1 ] in M1
and
A16: [ x,y2 ] in M2;
consider v being (Element of ( Bags n )) such that A17: [ v,( 0. L ) ] = [ x,y2 ] and A18: (not b divides v) by A16;
consider u being (Element of ( Bags n )) such that A19: [ u,( p . ( u -' b ) ) ] = [ x,y1 ] and A20: b divides u by A15;
u = ( [ x,y1 ] `1 ) by A19,MCART_1:def 1
.= x by MCART_1:def 1
.= ( [ v,( 0. L ) ] `1 ) by A17,MCART_1:def 1
.= v by MCART_1:def 1;
hence contradiction by A20,A18;
end;
thus (([ x,y1 ] in M1 & [ x,y2 ] in M1) or ([ x,y1 ] in M2 & [ x,y2 ] in M2))
proof
assume A21: (not ([ x,y1 ] in M1 & [ x,y2 ] in M1));
now
per cases  by A21;
case (not [ x,y1 ] in M1);
hence thesis by A6,A7,XBOOLE_0:def 3;
end;
case (not [ x,y2 ] in M1);
hence thesis by A6,A14,XBOOLE_0:def 3;
end;
end;
hence thesis;
end;

end;
now
let x being set,y1 being set,y2 being set;
assume A22: ([ x,y1 ] in M & [ x,y2 ] in M);
now
per cases  by A5,A22;
case A23: ([ x,y1 ] in M1 & [ x,y2 ] in M1);
then consider v being (Element of ( Bags n )) such that A24: [ v,( p . ( v -' b ) ) ] = [ x,y2 ] and b divides v;
consider u being (Element of ( Bags n )) such that A25: [ u,( p . ( u -' b ) ) ] = [ x,y1 ] and b divides u by A23;
u = ( [ x,y1 ] `1 ) by A25,MCART_1:def 1
.= x by MCART_1:def 1
.= ( [ v,( p . ( v -' b ) ) ] `1 ) by A24,MCART_1:def 1
.= v by MCART_1:def 1;
hence y1 = ( [ x,y2 ] `2 ) by A25,A24,MCART_1:def 2
.= y2 by MCART_1:def 2;
end;
case A26: ([ x,y1 ] in M2 & [ x,y2 ] in M2);
then A27: (ex v being (Element of ( Bags n )) st ([ v,( 0. L ) ] = [ x,y2 ] & (not b divides v)));
A28: (ex u being (Element of ( Bags n )) st ([ u,( 0. L ) ] = [ x,y1 ] & (not b divides u))) by A26;
thus y1 = ( [ x,y1 ] `2 ) by MCART_1:def 2
.= ( 0. L ) by A28,MCART_1:def 2
.= ( [ x,y2 ] `2 ) by A27,MCART_1:def 2
.= y2 by MCART_1:def 2;
end;
end;
hence y1 = y2;
end;
then reconsider M as (Function of ( Bags n ),(the carrier of L)) by A4,FUNCT_1:def 1,FUNCT_2:def 1;
reconsider M as (Function of ( Bags n ),L);
take M;
A29:now
let b9 being (bag of n);
A30: b9 is (Element of ( Bags n )) by PRE_POLY:def 12;
assume (not b divides b9);
then [ b9,( 0. L ) ] in { [ u,( 0. L ) ] where u is (Element of ( Bags n )): (not b divides u) } by A30;
then [ b9,( 0. L ) ] in M by XBOOLE_0:def 3;
hence ( M . b9 ) = ( 0. L ) by FUNCT_1:1;
end;
now
let b9 being (bag of n);
A31: b9 is (Element of ( Bags n )) by PRE_POLY:def 12;
assume b divides b9;
then [ b9,( p . ( b9 -' b ) ) ] in { [ u,( p . ( u -' b ) ) ] where u is (Element of ( Bags n )): b divides u } by A31;
then [ b9,( p . ( b9 -' b ) ) ] in M by XBOOLE_0:def 3;
hence ( M . b9 ) = ( p . ( b9 -' b ) ) by FUNCT_1:1;
end;
hence thesis by A29;
end;
uniqueness
proof
let p1 being (Series of n,L),p2 being (Series of n,L);
assume that
A32: (for b9 being (bag of n) holds (b divides b9 implies (( p1 . b9 ) = ( p . ( b9 -' b ) ) & (for b9 being (bag of n) holds ((not b divides b9) implies ( p1 . b9 ) = ( 0. L ))))))
and
A33: (for b9 being (bag of n) holds (b divides b9 implies (( p2 . b9 ) = ( p . ( b9 -' b ) ) & (for b9 being (bag of n) holds ((not b divides b9) implies ( p2 . b9 ) = ( 0. L ))))));
now
let x being (Element of ( Bags n ));
now
per cases ;
case A34: b divides x;
hence ( p1 . x ) = ( p . ( x -' b ) ) by A32
.= ( p2 . x ) by A33,A34;
end;
case A35: (not b divides x);
hence ( p1 . x ) = ( 0. L ) by A32
.= ( p2 . x ) by A33,A35;
end;
end;
hence ( p1 . x ) = ( p2 . x );
end;
hence p1 = p2 by FUNCT_2:63;
end;
end;
