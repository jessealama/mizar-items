environ
vocabularies NUMBERS,ORDINAL1,ZFMISC_1,STRUCT_0,VALUED_0,POLYNOM7,SUBSET_1,RELAT_1,SUPINF_2,POLYNOM1,VECTSP_1,ORDERS_1,TARSKI,PRE_POLY,ARYTM_3,FUNCT_1,ALGSEQ_1,NAT_1,FINSET_1,CARD_1,XXREAL_0,XBOOLE_0,RLVECT_1,ALGSTR_0,FINSEQ_1,CARD_3,PARTFUN1,ORDINAL4,ARYTM_1,ALGSTR_1,LATTICES,VECTSP_2,BINOP_1,CAT_3,MCART_1,RELAT_2,BAGORDER,TERMORD,XCMPLX_0,BROUWER,ORDERS_2,WELLORD1,FINSUB_1,WAYBEL_4,MESFUNC1,REWRITE1,INT_1,IDEAL_1,POLYRED;
notations CARD_1,NUMBERS,XCMPLX_0,TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,RELAT_1,RELAT_2,RELSET_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,XXREAL_0,STRUCT_0,ALGSTR_0,ORDINAL1,NAT_1,ALGSTR_1,WAYBEL_0,FINSUB_1,WAYBEL_4,REWRITE1,RLVECT_1,FINSEQ_1,MCART_1,ORDERS_1,VFUNCT_1,GROUP_1,VECTSP_2,VECTSP_1,POLYNOM7,WELLORD1,WELLFND1,IDEAL_1,ORDERS_2,POLYNOM1,BAGORDER,TERMORD,PRE_POLY,CKB24,CKB42,CKB43,CKB44,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB83,CKB94;
definitions STRUCT_0,POLYNOM7,CKB24,CKB42,CKB43,CKB44,CKB62,CKB63,CKB64,CKB65,CKB68,CKB71,CKB72,CKB73,CKB83,CKB94;
theorems TARSKI,RELSET_1,FINSEQ_1,FUNCT_1,FUNCT_2,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,BINOM,RLVECT_1,VECTSP_2,FINSET_1,NAT_1,POLYNOM2,ALGSTR_1,RELAT_2,CARD_1,CARD_2,WAYBEL_0,ORDERS_2,ORDERS_1,MCART_1,POLYNOM7,FINSUB_1,WELLORD1,WELLFND1,REWRITE1,WAYBEL_4,XBOOLE_0,XBOOLE_1,MATRLIN,IDEAL_1,BAGORDER,TERMORD,XCMPLX_1,GROUP_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,STRUCT_0,PRE_POLY,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB68,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101;
schemes NAT_1,RELSET_1;
registrations XBOOLE_0,RELAT_1,ORDINAL1,FINSET_1,FINSUB_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,FINSEQ_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,GCD_1,POLYNOM1,POLYNOM2,POLYNOM4,IDEAL_1,POLYNOM7,BAGORDER,TERMORD,VALUED_0,ALGSTR_0,PRE_POLY,VFUNCT_1,FUNCT_2,FUNCT_1,RELSET_1,CKB1,CKB2,CKB9,CKB27,CKB39,CKB40,CKB86;
constructors REWRITE1,VECTSP_2,TRIANG_1,WAYBEL_4,WELLFND1,IDEAL_1,BAGORDER,TERMORD,DOMAIN_1,RELSET_1,BINOP_2,FVSUM_1,VFUNCT_1,CKB24,CKB42,CKB43,CKB44,CKB62,CKB63,CKB64,CKB65,CKB68,CKB71,CKB72,CKB73,CKB83,CKB94;
requirements NUMERALS,REAL,SUBSET,BOOLE;
begin
theorem
Lm20: (for n being Nat holds (for T being  admissible  connected (TermOrder of n) holds (for L being  Abelian  add-associative  right_complementable  right_zeroed  commutative  associative  well-unital  distributive  almost_left_invertible non  degenerated non  empty doubleLoopStr holds (for P being non  empty (Subset of ( Polynom-Ring (n,L) )) holds (for f,p,h being (Element of ( Polynom-Ring (n,L) )) holds (((p in P & p <> ( 0_ (n,L) )) & h <> ( 0_ (n,L) )) implies f,( f + ( h * p ) ) are_convertible_wrt ( PolyRedRel (P,T) )))))))
proof
let n being Nat;
let T being  admissible  connected (TermOrder of n);
let L being  Abelian  add-associative  right_complementable  right_zeroed  commutative  associative  well-unital  distributive  almost_left_invertible non  degenerated non  empty doubleLoopStr;
let P being non  empty (Subset of ( Polynom-Ring (n,L) ));
let f being (Element of ( Polynom-Ring (n,L) ));
let p being (Element of ( Polynom-Ring (n,L) ));
let h being (Element of ( Polynom-Ring (n,L) ));
assume that
A1: p in P
and
A2: p <> ( 0_ (n,L) )
and
A3: h <> ( 0_ (n,L) );
set PR = ( Polynom-Ring (n,L) );
reconsider f9 = f,h9 = h,p9 = p as (Element of PR);
reconsider f9,p9,h9 as (Polynomial of n,L) by POLYNOM1:def 10;
reconsider h9,p9 as  non-zero (Polynomial of n,L) by A2,A3,POLYNOM7:def 1;
A4: ( PolyRedRel (P,T) ) reduces ( h9 *' p9 ),( 0_ (n,L) ) by A1,CKB87:1;
now
per cases ;
case f9 = ( 0_ (n,L) );
then ( PolyRedRel (P,T) ) reduces ( f9 + ( h9 *' p9 ) ),f9 by A4,CKB11:1;
then A5: f9,( f9 + ( h9 *' p9 ) ) are_convertible_wrt ( PolyRedRel (P,T) ) by REWRITE1:25;
( h9 *' p9 ) = ( h * p ) by POLYNOM1:def 10;
hence thesis by A5,POLYNOM1:def 10;
end;
case f9 <> ( 0_ (n,L) );
then reconsider f9 as  non-zero (Polynomial of n,L) by POLYNOM7:def 1;
( ( f9 + ( h9 *' p9 ) ) - f9 ) = ( ( f9 + ( h9 *' p9 ) ) + ( - f9 ) ) by POLYNOM1:def 6
.= ( ( h9 *' p9 ) + ( f9 + ( - f9 ) ) ) by POLYNOM1:21
.= ( ( 0_ (n,L) ) + ( h9 *' p9 ) ) by CKB12:1
.= ( h9 *' p9 ) by CKB11:1;
then A6: ( PolyRedRel (P,T) ) reduces ( ( f9 + ( h9 *' p9 ) ) - f9 ),( 0_ (n,L) ) by A1,CKB87:1;
now
per cases ;
case ( f9 + ( h9 *' p9 ) ) <> ( 0_ (n,L) );
then reconsider g9 = ( f9 + ( h9 *' p9 ) ) as  non-zero (Polynomial of n,L) by POLYNOM7:def 1;
( h9 *' p9 ) = ( h * p ) by POLYNOM1:def 10;
then g9 = ( f + ( h * p ) ) by POLYNOM1:def 10;
hence thesis by A6,CKB93:1,REWRITE1:31;
end;
case A7: ( f9 + ( h9 *' p9 ) ) = ( 0_ (n,L) );
now
assume A8: ( - h9 ) = ( 0_ (n,L) );
A9:now
let u being set;
assume u in ( dom h9 );
then reconsider u9 = u as (bag of n);
( - ( h9 . u9 ) ) = ( ( - h9 ) . u9 ) by POLYNOM1:17
.= ( 0. L ) by A8,POLYNOM1:22;
then ( h9 . u9 ) = ( - ( 0. L ) ) by RLVECT_1:17
.= ( 0. L ) by RLVECT_1:12
.= ( ( 0_ (n,L) ) . u9 ) by POLYNOM1:22;
hence ( h9 . u ) = ( ( 0_ (n,L) ) . u );
end;
( dom h9 ) = ( Bags n ) by FUNCT_2:def 1
.= ( dom ( 0_ (n,L) ) ) by FUNCT_2:def 1;
hence contradiction by A3,A9,FUNCT_1:2;
end;
then reconsider mh9 = ( - h9 ) as  non-zero (Polynomial of n,L) by POLYNOM7:def 1;
reconsider x = mh9 as (Element of PR) by POLYNOM1:def 10;
reconsider x as (Element of PR);
( h + x ) = ( mh9 + h9 ) by POLYNOM1:def 10
.= ( 0_ (n,L) ) by CKB12:1
.= ( 0. PR ) by POLYNOM1:def 10;
then ( - h ) = mh9 by RLVECT_1:6;
then A10: ( ( - h ) * p ) = ( mh9 *' p9 ) by POLYNOM1:def 10;
( PolyRedRel (P,T) ) reduces ( mh9 *' p9 ),( 0_ (n,L) ) by A1,CKB87:1;
then A11: ( mh9 *' p9 ),( 0_ (n,L) ) are_convertible_wrt ( PolyRedRel (P,T) ) by REWRITE1:25;
( h9 *' p9 ) = ( h * p ) by POLYNOM1:def 10;
then A12: ( f + ( h * p ) ) = ( 0_ (n,L) ) by A7,POLYNOM1:def 10
.= ( 0. PR ) by POLYNOM1:def 10;
then f = ( - ( h * p ) ) by RLVECT_1:6
.= ( ( - h ) * p ) by VECTSP_1:9;
hence thesis by A12,A11,A10,POLYNOM1:def 10;
end;
end;
hence thesis;
end;
end;
hence thesis;
end;
