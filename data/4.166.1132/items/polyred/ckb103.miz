environ
vocabularies NUMBERS,ORDINAL1,ZFMISC_1,STRUCT_0,VALUED_0,POLYNOM7,SUBSET_1,RELAT_1,SUPINF_2,POLYNOM1,VECTSP_1,ORDERS_1,TARSKI,PRE_POLY,ARYTM_3,FUNCT_1,ALGSEQ_1,NAT_1,FINSET_1,CARD_1,XXREAL_0,XBOOLE_0,RLVECT_1,ALGSTR_0,FINSEQ_1,CARD_3,PARTFUN1,ORDINAL4,ARYTM_1,ALGSTR_1,LATTICES,VECTSP_2,BINOP_1,CAT_3,MCART_1,RELAT_2,BAGORDER,TERMORD,XCMPLX_0,BROUWER,ORDERS_2,WELLORD1,FINSUB_1,WAYBEL_4,MESFUNC1,REWRITE1,INT_1,IDEAL_1,POLYRED;
notations CARD_1,NUMBERS,XCMPLX_0,TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,RELAT_1,RELAT_2,RELSET_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,XXREAL_0,STRUCT_0,ALGSTR_0,ORDINAL1,NAT_1,ALGSTR_1,WAYBEL_0,FINSUB_1,WAYBEL_4,REWRITE1,RLVECT_1,FINSEQ_1,MCART_1,ORDERS_1,VFUNCT_1,GROUP_1,VECTSP_2,VECTSP_1,POLYNOM7,WELLORD1,WELLFND1,IDEAL_1,ORDERS_2,POLYNOM1,BAGORDER,TERMORD,PRE_POLY,CKB24,CKB42,CKB43,CKB44,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB83,CKB94;
definitions STRUCT_0,POLYNOM7,CKB24,CKB42,CKB43,CKB44,CKB62,CKB63,CKB64,CKB65,CKB68,CKB71,CKB72,CKB73,CKB83,CKB94;
theorems TARSKI,RELSET_1,FINSEQ_1,FUNCT_1,FUNCT_2,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,BINOM,RLVECT_1,VECTSP_2,FINSET_1,NAT_1,POLYNOM2,ALGSTR_1,RELAT_2,CARD_1,CARD_2,WAYBEL_0,ORDERS_2,ORDERS_1,MCART_1,POLYNOM7,FINSUB_1,WELLORD1,WELLFND1,REWRITE1,WAYBEL_4,XBOOLE_0,XBOOLE_1,MATRLIN,IDEAL_1,BAGORDER,TERMORD,XCMPLX_1,GROUP_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,STRUCT_0,PRE_POLY,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB68,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102;
schemes NAT_1,RELSET_1;
registrations XBOOLE_0,RELAT_1,ORDINAL1,FINSET_1,FINSUB_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,FINSEQ_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,GCD_1,POLYNOM1,POLYNOM2,POLYNOM4,IDEAL_1,POLYNOM7,BAGORDER,TERMORD,VALUED_0,ALGSTR_0,PRE_POLY,VFUNCT_1,FUNCT_2,FUNCT_1,RELSET_1,CKB1,CKB2,CKB9,CKB27,CKB39,CKB40,CKB86;
constructors REWRITE1,VECTSP_2,TRIANG_1,WAYBEL_4,WELLFND1,IDEAL_1,BAGORDER,TERMORD,DOMAIN_1,RELSET_1,BINOP_2,FVSUM_1,VFUNCT_1,CKB24,CKB42,CKB43,CKB44,CKB62,CKB63,CKB64,CKB65,CKB68,CKB71,CKB72,CKB73,CKB83,CKB94;
requirements NUMERALS,REAL,SUBSET,BOOLE;
begin
theorem
(for n being Nat holds (for T being  admissible  connected (TermOrder of n) holds (for L being  Abelian  add-associative  right_complementable  right_zeroed  commutative  associative  well-unital  distributive  almost_left_invertible non degenerated non empty doubleLoopStr holds (for P being non empty (Subset of ( Polynom-Ring (n,L) )) holds (for f,g being (Element of ( Polynom-Ring (n,L) )) holds (f,g are_congruent_mod ( P -Ideal ) implies f,g are_convertible_wrt ( PolyRedRel (P,T) )))))))
proof
let n being Nat;
let T being  admissible  connected (TermOrder of n);
let L being  Abelian  add-associative  right_complementable  right_zeroed  commutative  associative  well-unital  distributive  almost_left_invertible non degenerated non empty doubleLoopStr;
let P being non empty (Subset of ( Polynom-Ring (n,L) ));
let f being (Element of ( Polynom-Ring (n,L) )),g being (Element of ( Polynom-Ring (n,L) ));
set PR = ( Polynom-Ring (n,L) );
defpred P[ Nat ]
 means
(for f,g being (Element of ( Polynom-Ring (n,L) )) holds (for p being (LeftLinearCombination of P) holds ((( Sum p ) = ( g - f ) & ( len p ) = $1) implies f,g are_convertible_wrt ( PolyRedRel (P,T) ))));
now
let k being Nat;
assume A1: P[ k ];
now
let f being (Element of ( Polynom-Ring (n,L) )),g being (Element of ( Polynom-Ring (n,L) ));
let p being (LeftLinearCombination of P);
assume that
A2: ( Sum p ) = ( g - f )
and
A3: ( len p ) = ( k + 1 );
now
set h = ( f + ( p /. ( k + 1 ) ) );
set q = ( p | ( Seg k ) );
reconsider q as FinSequence by FINSEQ_1:15;
( dom p ) = ( Seg ( k + 1 ) ) by A3,FINSEQ_1:def 3;
then consider u being (Element of PR),a being (Element of P) such that A4: ( p /. ( k + 1 ) ) = ( u * a ) by FINSEQ_1:4,IDEAL_1:def 9;
reconsider u9 = u,a9 = a as (Element of PR);
reconsider u9,a9 as (Polynomial of n,L) by POLYNOM1:def 10;
A5: ( p /. ( k + 1 ) ) = ( u9 *' a9 ) by A4,POLYNOM1:def 10;
k <= ( k + 1 ) by NAT_1:11;
then A6: ( len q ) = k by A3,FINSEQ_1:17;
k in ( NAT ) by ORDINAL1:def 12;
then reconsider q as (LeftLinearCombination of P) by IDEAL_1:42;
A7: ( Sum p ) = ( ( Sum q ) + ( p /. ( k + 1 ) ) ) by A3,CKB8:1;
then ( ( Sum p ) - ( p /. ( k + 1 ) ) ) = ( ( ( Sum q ) + ( p /. ( k + 1 ) ) ) + ( - ( p /. ( k + 1 ) ) ) ) by RLVECT_1:def 11
.= ( ( Sum q ) + ( ( p /. ( k + 1 ) ) + ( - ( p /. ( k + 1 ) ) ) ) ) by RLVECT_1:def 3
.= ( ( Sum q ) + ( 0. PR ) ) by RLVECT_1:5
.= ( Sum q ) by RLVECT_1:4;
then ( Sum q ) = ( ( g - f ) + ( - ( p /. ( k + 1 ) ) ) ) by A2,RLVECT_1:def 11
.= ( ( g + ( - f ) ) + ( - ( p /. ( k + 1 ) ) ) ) by RLVECT_1:def 11
.= ( g + ( ( - f ) + ( - ( p /. ( k + 1 ) ) ) ) ) by RLVECT_1:def 3
.= ( g + ( - h ) ) by RLVECT_1:31
.= ( g - h ) by RLVECT_1:def 11;
then A8: h,g are_convertible_wrt ( PolyRedRel (P,T) ) by A1,A6;
now
per cases ;
case (a <> ( 0_ (n,L) ) & u <> ( 0_ (n,L) ));
then f,h are_convertible_wrt ( PolyRedRel (P,T) ) by A4,CKB102:1;
hence f,g are_convertible_wrt ( PolyRedRel (P,T) ) by A8,REWRITE1:30;
end;
case A9: (a = ( 0_ (n,L) ) or u = ( 0_ (n,L) ));
reconsider sumq = ( Sum q ) as (Polynomial of n,L) by POLYNOM1:def 10;
now
per cases  by A9;
case a = ( 0_ (n,L) );
hence ( p /. ( k + 1 ) ) = ( 0_ (n,L) ) by A5,POLYNOM1:28;
end;
case u = ( 0_ (n,L) );
hence ( p /. ( k + 1 ) ) = ( 0_ (n,L) ) by A5,CKB14:1;
end;
end;
then ( Sum p ) = ( sumq + ( 0_ (n,L) ) ) by A7,POLYNOM1:def 10
.= ( Sum q ) by POLYNOM1:23;
hence f,g are_convertible_wrt ( PolyRedRel (P,T) ) by A1,A2,A6;
end;
end;
hence f,g are_convertible_wrt ( PolyRedRel (P,T) );
end;
hence f,g are_convertible_wrt ( PolyRedRel (P,T) );
end;
hence P[ ( k + 1 ) ];
end;
then A10: (for k being Nat holds (P[ k ] implies P[ ( k + 1 ) ]));
A11: P[ ( 0 ) ]
proof
let f being (Element of ( Polynom-Ring (n,L) )),g being (Element of ( Polynom-Ring (n,L) ));
let p being (LeftLinearCombination of P);
assume that
A12: ( Sum p ) = ( g - f )
and
A13: ( len p ) = ( 0 );
p = ( <*> (the carrier of PR) ) by A13;
then ( Sum p ) = ( 0. PR ) by RLVECT_1:43;
then f = g by A12,RLVECT_1:21;
hence thesis by REWRITE1:26;
end;
A14: (for k being Nat holds P[ k ]) from NAT_1:sch 2(A11,A10);
assume f,g are_congruent_mod ( P -Ideal );
then g,f are_congruent_mod ( P -Ideal ) by CKB96:1;
then ( g - f ) in ( P -Ideal ) by CKB94:def 1;
then ( g - f ) in ( P -LeftIdeal ) by IDEAL_1:63;
then consider p being (LeftLinearCombination of P) such that A15: ( Sum p ) = ( g - f ) by IDEAL_1:61;
(ex k being Nat st ( len p ) = k);
hence thesis by A14,A15;
end;
