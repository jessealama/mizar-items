environ
vocabularies NUMBERS,AMI_3,SUBSET_1,AMI_2,AMI_1,STRUCT_0,XBOOLE_0,FSM_1,RELAT_1,FUNCT_1,TARSKI,FINSET_1,CARD_1,XXREAL_0,PBOOLE,FINSEQ_1,GRAPHSP,ARYTM_3,ARYTM_1,INT_1,FUNCT_4,FUNCOP_1,CIRCUIT2,ORDINAL1,PARTFUN1,SCMNORM,RECDEF_2,CAT_1,AMISTD_5,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,XCMPLX_0,MCART_1,DOMAIN_1,PBOOLE,RELAT_1,FUNCT_1,FUNCOP_1,PARTFUN1,FUNCT_4,NUMBERS,INT_1,NAT_1,RECDEF_2,STRUCT_0,FINSET_1,FINSEQ_1,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,AMI_3,XXREAL_0,AMISTD_5;
definitions TARSKI,EXTPRO_1,AMI_3,FUNCOP_1,CARD_1,AMI_2,RELAT_1,FUNCT_1,COMPOS_1,AMISTD_5,MEMSTR_0;
theorems AMI_3,GRFUNC_1,TARSKI,FUNCOP_1,FUNCT_4,MEMSTR_0,FUNCT_1,ZFMISC_1,ENUMSET1,RELAT_1,XBOOLE_0,XBOOLE_1,PBOOLE,PARTFUN1,RECDEF_2,COMPOS_1,EXTPRO_1,AMISTD_5,NAT_1,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,NUMBERS,XREAL_0,INT_1,CARD_3,AMI_2,AMI_3,FINSET_1,CARD_1,RELSET_1,FUNCT_2,COMPOS_1,EXTPRO_1,AMISTD_5,PBOOLE,FUNCT_4,FUNCOP_1,MEMSTR_0,CKB5,CKB19,CKB20;
constructors DOMAIN_1,XXREAL_0,FINSEQ_4,AMI_3,AMI_2,NUMBERS,PRE_POLY,RECDEF_2,AMISTD_2,AMISTD_5,AMISTD_1,PBOOLE,FUNCT_7,FUNCOP_1,MEMSTR_0,RELSET_1;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
(for s1,s2 being (State of ( SCM )) holds ((( IC s1 ) = ( IC s2 ) & (for a being Data-Location holds ( s1 . a ) = ( s2 . a ))) implies s1 = s2))
proof
let s1 being (State of ( SCM )),s2 being (State of ( SCM ));
assume that
A1: ( IC s1 ) = ( IC s2 );
(( IC ( SCM ) ) in ( dom s1 ) & ( IC ( SCM ) ) in ( dom s2 )) by MEMSTR_0:2;
then X1: (s1 = ( ( DataPart s1 ) +* ( Start-At (( IC s1 ),( SCM )) ) ) & s2 = ( ( DataPart s2 ) +* ( Start-At (( IC s2 ),( SCM )) ) )) by MEMSTR_0:26;
assume B2: (for a being Data-Location holds ( s1 . a ) = ( s2 . a ));
( DataPart s1 ) = ( DataPart s2 )
proof
B1: ( dom ( DataPart s1 ) ) = ( Data-Locations ( SCM ) ) by MEMSTR_0:9;
hence ( dom ( DataPart s1 ) ) = ( dom ( DataPart s2 ) ) by MEMSTR_0:9;
let x being set;
assume Z: x in ( dom ( DataPart s1 ) );
then A2: x is Data-Location by B1,AMI_3:27,AMI_3:def 2;
thus ( ( DataPart s1 ) . x ) = ( s1 . x ) by Z,B1,FUNCT_1:49
.= ( s2 . x ) by A2,B2
.= ( ( DataPart s2 ) . x ) by Z,B1,FUNCT_1:49;
end;
hence thesis by A1,X1;
end;
