environ
vocabularies NUMBERS,NAT_1,VECTSP_1,SUBSET_1,MATRIX_1,FINSEQ_2,ZFMISC_1,RELAT_1,TARSKI,CARD_1,ARYTM_3,FUNCT_1,FREEALG,FINSET_1,FINSEQ_1,MESFUNC1,GROUP_1,SUPINF_2,LAPLACE,XBOOLE_0,MATRIX_2,ARYTM_1,XXREAL_0,POLYNOM1,POLYNOM2,MATRIX_3,CARD_3,AFINSQ_1,ORDINAL4,POLYNOM3,STRUCT_0,PARTFUN1,RANKNULL,RLSUB_1,RLVECT_5,PRVECT_1,RLVECT_3,ALGSTR_0,VECTSP10,MATRLIN,MATRLIN2,POLYNOM5,NEWTON,MONOID_0,BINOP_1,RLVECT_1,LATTICES,RLSUB_2,FINSEQ_4,MCART_1,RLVECT_2,VALUED_1,FUNCT_2,VECTSP11,MSSUBFAM,UNIALG_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,CARD_1,XCMPLX_0,ALGSTR_0,XXREAL_0,NAT_1,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,BINOP_1,STRUCT_0,RLVECT_1,GROUP_1,VECTSP_1,FINSEQ_2,MATRIX_1,MATRIX_2,NAT_D,GROUP_4,MATRIX_3,DOMAIN_1,MEASURE6,PRVECT_1,VECTSP_4,VECTSP_5,VECTSP_6,VECTSP_7,VECTSP_9,FINSEQOP,MATRIX13,MATRLIN,LAPLACE,MOD_2,RANKNULL,POLYNOM3,MONOID_0,ALGSEQ_1,POLYNOM4,POLYNOM5,MATRLIN2,GRCAT_1;
definitions STRUCT_0,TARSKI,XBOOLE_0,RLVECT_1,FINSEQ_1,VECTSP_4,FVSUM_1,LAPLACE,MATRIX13,RANKNULL,VECTSP_6,MATRLIN2;
theorems ZFMISC_1,RLVECT_1,MATRIX_1,MATRIX_3,VECTSP_1,NAT_1,FINSEQ_1,FINSEQ_3,FINSEQ_2,CARD_1,CARD_2,FINSEQOP,FINSOP_1,FUNCT_1,FUNCT_2,FVSUM_1,GROUP_1,LAPLACE,MATRIX13,MATRIXR2,MATRLIN,ORDINAL1,PARTFUN1,RELAT_1,STIRL2_1,STRUCT_0,TARSKI,VECTSP_4,VECTSP_5,VECTSP_6,VECTSP_7,VECTSP_9,VECTSP10,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,MOD_2,RANKNULL,MONOID_0,GROUP_4,SYSREL,SUBSET_1,FINSEQ_5,ALGSEQ_1,POLYNOM4,POLYNOM5,HILBASIS,MATRIXJ1,MATRLIN2,VALUED_0,NAT_D,GRCAT_1,RLVECT_2,CKB1;
schemes NAT_1,FUNCT_2;
registrations XBOOLE_0,FUNCT_1,FINSET_1,STRUCT_0,VECTSP_1,FUNCT_2,ORDINAL1,XXREAL_0,NAT_1,FINSEQ_1,RELAT_1,FINSEQ_2,SEQM_3,MATRIX13,XREAL_0,VECTSP_9,RANKNULL,POLYNOM3,POLYNOM5,MONOID_0,CARD_1,RELSET_1,MOD_2,GRCAT_1,PRVECT_1,MATRLIN2;
constructors FINSOP_1,XXREAL_0,GROUP_4,VECTSP_7,VECTSP_9,MATRIX13,REALSET1,LAPLACE,VECTSP_5,RANKNULL,MONOID_0,POLYNOM1,POLYNOM4,POLYNOM5,SEQ_1,MATRLIN2,BINOP_2,NAT_D,RELSET_1,GRCAT_1,MEASURE6;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve i for Nat;
reserve j for Nat;
reserve n for Nat;
reserve K for Field;
theorem
Th2: (for P being  without_zero  finite (Subset of ( NAT )) holds (P c= ( Seg n ) implies ( Segm (( 1. (K,n) ),P,P) ) = ( 1. (K,( card P )) )))
proof
let P being  without_zero  finite (Subset of ( NAT ));
assume that
A1: P c= ( Seg n );
set S = ( Segm (( 1. (K,n) ),P,P) );
now
set SP = ( Sgm P );
let i;
let j;
assume that
A2: [ i,j ] in ( Indices ( 1. (K,( card P )) ) );
A3: SP is  one-to-one by A1,FINSEQ_3:92;
A4: ( rng SP ) = P by A1,FINSEQ_1:def 13;
reconsider Spi = ( SP . i ),Spj = ( SP . j ) as Nat by VALUED_0:12;
A5: ( Indices ( 1. (K,( card P )) ) ) = ( Indices S ) by MATRIX_1:26;
then A6: ( S * (i,j) ) = ( ( 1. (K,n) ) * (Spi,Spj) ) by A2,MATRIX13:def 1;
(( Indices ( 1. (K,n) ) ) = [: ( Seg n ),( Seg n ) :] & [: P,P :] c= [: ( Seg n ),( Seg n ) :]) by A1,MATRIX_1:24,ZFMISC_1:96;
then A7: [ ( SP . i ),( SP . j ) ] in ( Indices ( 1. (K,n) ) ) by A2,A5,A4,MATRIX13:17;
(( Indices S ) = [: ( Seg ( card P ) ),( Seg ( card P ) ) :] & ( dom SP ) = ( Seg ( card P ) )) by A1,FINSEQ_3:40,MATRIX_1:24;
then A8: (i in ( dom SP ) & j in ( dom SP )) by A2,A5,ZFMISC_1:87;
(i = j or i <> j);
then ((( S * (i,j) ) = ( 1_ K ) & ( ( 1. (K,( card P )) ) * (i,j) ) = ( 1_ K )) or (( ( 1. (K,( card P )) ) * (i,j) ) = ( 0. K ) & ( SP . i ) <> ( SP . j ))) by A2,A3,A7,A8,A6,FUNCT_1:def 4,MATRIX_1:def 11;
hence ( ( 1. (K,( card P )) ) * (i,j) ) = ( S * (i,j) ) by A7,A6,MATRIX_1:def 11;
end;
hence thesis by MATRIX_1:27;
end;
