environ
vocabularies NUMBERS,NAT_1,VECTSP_1,SUBSET_1,MATRIX_1,FINSEQ_2,ZFMISC_1,RELAT_1,TARSKI,CARD_1,ARYTM_3,FUNCT_1,FREEALG,FINSET_1,FINSEQ_1,MESFUNC1,GROUP_1,SUPINF_2,LAPLACE,XBOOLE_0,MATRIX_2,ARYTM_1,XXREAL_0,POLYNOM1,POLYNOM2,MATRIX_3,CARD_3,AFINSQ_1,ORDINAL4,POLYNOM3,STRUCT_0,PARTFUN1,RANKNULL,RLSUB_1,RLVECT_5,PRVECT_1,RLVECT_3,ALGSTR_0,VECTSP10,MATRLIN,MATRLIN2,POLYNOM5,NEWTON,MONOID_0,BINOP_1,RLVECT_1,LATTICES,RLSUB_2,FINSEQ_4,MCART_1,RLVECT_2,VALUED_1,FUNCT_2,VECTSP11,MSSUBFAM,UNIALG_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,CARD_1,XCMPLX_0,ALGSTR_0,XXREAL_0,NAT_1,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,BINOP_1,STRUCT_0,RLVECT_1,GROUP_1,VECTSP_1,FINSEQ_2,MATRIX_1,MATRIX_2,NAT_D,GROUP_4,MATRIX_3,DOMAIN_1,MEASURE6,PRVECT_1,VECTSP_4,VECTSP_5,VECTSP_6,VECTSP_7,VECTSP_9,FINSEQOP,MATRIX13,MATRLIN,LAPLACE,MOD_2,RANKNULL,POLYNOM3,MONOID_0,ALGSEQ_1,POLYNOM4,POLYNOM5,MATRLIN2,GRCAT_1,CKB11,CKB14,CKB15,CKB25,CKB33;
definitions STRUCT_0,TARSKI,XBOOLE_0,RLVECT_1,FINSEQ_1,VECTSP_4,FVSUM_1,LAPLACE,MATRIX13,RANKNULL,VECTSP_6,MATRLIN2,CKB11,CKB14,CKB15,CKB25,CKB33;
theorems ZFMISC_1,RLVECT_1,MATRIX_1,MATRIX_3,VECTSP_1,NAT_1,FINSEQ_1,FINSEQ_3,FINSEQ_2,CARD_1,CARD_2,FINSEQOP,FINSOP_1,FUNCT_1,FUNCT_2,FVSUM_1,GROUP_1,LAPLACE,MATRIX13,MATRIXR2,MATRLIN,ORDINAL1,PARTFUN1,RELAT_1,STIRL2_1,STRUCT_0,TARSKI,VECTSP_4,VECTSP_5,VECTSP_6,VECTSP_7,VECTSP_9,VECTSP10,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,MOD_2,RANKNULL,MONOID_0,GROUP_4,SYSREL,SUBSET_1,FINSEQ_5,ALGSEQ_1,POLYNOM4,POLYNOM5,HILBASIS,MATRIXJ1,MATRLIN2,VALUED_0,NAT_D,GRCAT_1,RLVECT_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57;
schemes NAT_1,FUNCT_2;
registrations XBOOLE_0,FUNCT_1,FINSET_1,STRUCT_0,VECTSP_1,FUNCT_2,ORDINAL1,XXREAL_0,NAT_1,FINSEQ_1,RELAT_1,FINSEQ_2,SEQM_3,MATRIX13,XREAL_0,VECTSP_9,RANKNULL,POLYNOM3,POLYNOM5,MONOID_0,CARD_1,RELSET_1,MOD_2,GRCAT_1,PRVECT_1,MATRLIN2,CKB10,CKB13,CKB31;
constructors FINSOP_1,XXREAL_0,GROUP_4,VECTSP_7,VECTSP_9,MATRIX13,REALSET1,LAPLACE,VECTSP_5,RANKNULL,MONOID_0,POLYNOM1,POLYNOM4,POLYNOM5,SEQ_1,MATRLIN2,BINOP_2,NAT_D,RELSET_1,GRCAT_1,MEASURE6,CKB11,CKB14,CKB15,CKB25,CKB33;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve n for Nat;
reserve x for set;
reserve y for set;
reserve K for Field;
reserve V1 for (VectSp of K);
theorem
(for U being  finite (Subset of V1) holds (U is  linearly-independent implies (for u being (Vector of V1) holds (u in U implies (for L being (Linear_Combination of ( U \ { u } )) holds (( card U ) = ( card ( ( U \ { u } ) \/ { ( u + ( Sum L ) ) } ) ) & ( ( U \ { u } ) \/ { ( u + ( Sum L ) ) } ) is  linearly-independent))))))
proof
set V = V1;
let U being  finite (Subset of V1);
assume that
A1: U is  linearly-independent;
let u being (Vector of V);
assume that
A2: u in U;
defpred P[ Nat ]
 means
(for L being (Linear_Combination of ( U \ { u } )) holds (( card ( Carrier L ) ) = $1 implies (( card U ) = ( card ( ( U \ { u } ) \/ { ( u + ( Sum L ) ) } ) ) & ( ( U \ { u } ) \/ { ( u + ( Sum L ) ) } ) is  linearly-independent)));
A3: (for n holds (P[ n ] implies P[ ( n + 1 ) ]))
proof
( card U ) <> ( 0 ) by A2;
then reconsider C = ( ( card U ) - 1 ) as (Element of ( NAT )) by NAT_1:20;
let n;
assume that
A4: P[ n ];
set n1 = ( n + 1 );
let L being (Linear_Combination of ( U \ { u } ));
assume that
A5: ( card ( Carrier L ) ) = n1;
consider x such that A6: x in ( Carrier L ) by A5,CARD_1:27,XBOOLE_0:def 1;
A7: ( Carrier L ) c= ( U \ { u } ) by VECTSP_6:def 4;
then x in U by A6,XBOOLE_0:def 5;
then A8: x <> ( 0. V ) by A1,VECTSP_7:2;
reconsider x as (Vector of V) by A6;
x in { x } by TARSKI:def 1;
then x in ( Lin { x } ) by VECTSP_7:8;
then consider X being (Linear_Combination of { x }) such that A9: x = ( Sum X ) by VECTSP_7:7;
set Lx = ( L . x );
set LxX = ( Lx * X );
(( Carrier LxX ) c= ( Carrier X ) & ( Carrier X ) c= { x }) by VECTSP_6:28,VECTSP_6:def 4;
then A10: ( Carrier LxX ) c= { x } by XBOOLE_1:1;
then (( Carrier ( L - LxX ) ) c= ( ( Carrier L ) \/ ( Carrier LxX ) ) & ( ( Carrier L ) \/ ( Carrier LxX ) ) c= ( ( Carrier L ) \/ { x } )) by VECTSP_6:41,XBOOLE_1:9;
then ( Carrier ( L - LxX ) ) c= ( ( Carrier L ) \/ { x } ) by XBOOLE_1:1;
then A11: ( Carrier ( L - LxX ) ) c= ( Carrier L ) by A6,ZFMISC_1:40;
then ( Carrier ( L - LxX ) ) c= ( U \ { u } ) by A7,XBOOLE_1:1;
then reconsider LLxX = ( L - LxX ) as (Linear_Combination of ( U \ { u } )) by VECTSP_6:def 4;
A12: x in ( ( U \ { u } ) \/ { ( u + ( Sum LLxX ) ) } ) by A6,A7,XBOOLE_0:def 3;
A13: ( ( Carrier L ) \ { x } ) c= ( Carrier ( L - LxX ) )
proof
let y;
assume that
A14: y in ( ( Carrier L ) \ { x } );
y in ( Carrier L ) by A14,XBOOLE_0:def 5;
then consider Y being (Vector of V) such that A15: y = Y and A16: ( L . Y ) <> ( 0. K );
(not Y in ( Carrier LxX )) by A10,A14,A15,XBOOLE_0:def 5;
then ( LxX . Y ) = ( 0. K );
then ( ( L - LxX ) . Y ) = ( ( L . Y ) - ( 0. K ) ) by VECTSP_6:40
.= ( L . Y ) by RLVECT_1:13;
hence thesis by A15,A16;
end;
( ( X . x ) * x ) = x by A9,VECTSP_6:17
.= ( ( 1_ K ) * x ) by VECTSP_1:def 17;
then A17: ( X . x ) = ( 1_ K ) by A8,VECTSP10:4;
( ( L - LxX ) . x ) = ( Lx - ( LxX . x ) ) by VECTSP_6:40
.= ( Lx - ( Lx * ( 1_ K ) ) ) by A17,VECTSP_6:def 9
.= ( Lx - Lx ) by VECTSP_1:def 4
.= ( 0. K ) by RLVECT_1:5;
then (not x in ( Carrier ( L - LxX ) )) by VECTSP_6:2;
then ( Carrier ( L - LxX ) ) c= ( ( Carrier L ) \ { x } ) by A11,ZFMISC_1:34;
then A18: ( Carrier ( L - LxX ) ) = ( ( Carrier L ) \ { x } ) by A13,XBOOLE_0:def 10;
{ x } c= ( Carrier L ) by A6,ZFMISC_1:31;
then ( card ( Carrier ( L - LxX ) ) ) = ( n1 - ( card { x } ) ) by A5,A18,CARD_2:44
.= ( n1 - 1 ) by CARD_1:30
.= n;
then A19: ( ( U \ { u } ) \/ { ( u + ( Sum LLxX ) ) } ) is  linearly-independent by A4;
( u + ( Sum LLxX ) ) in { ( u + ( Sum LLxX ) ) } by TARSKI:def 1;
then A20: ( u + ( Sum LLxX ) ) in ( ( U \ { u } ) \/ { ( u + ( Sum LLxX ) ) } ) by XBOOLE_0:def 3;
A21: (not ( u + ( Sum L ) ) in ( U \ { u } ))
proof
assume ( u + ( Sum L ) ) in ( U \ { u } );
then A22: ( u + ( Sum L ) ) in ( Lin ( U \ { u } ) ) by VECTSP_7:8;
A23: ( ( u + ( Sum L ) ) - ( Sum L ) ) = ( u + ( ( Sum L ) - ( Sum L ) ) ) by RLVECT_1:def 3
.= ( u + ( 0. V ) ) by RLVECT_1:5
.= u by RLVECT_1:def 4;
( Sum L ) in ( Lin ( U \ { u } ) ) by VECTSP_7:7;
hence thesis by A1,A2,A22,A23,VECTSP_4:23,VECTSP_9:14;
end;
( card U ) = ( C + 1 );
then ( card ( U \ { u } ) ) = C by A2,STIRL2_1:55;
then A24: ( card ( ( U \ { u } ) \/ { ( u + ( Sum L ) ) } ) ) = ( C + 1 ) by A21,CARD_2:41;
( Sum L ) = ( ( 0. V ) + ( Sum L ) ) by RLVECT_1:def 4
.= ( ( ( Sum LxX ) + ( - ( Sum LxX ) ) ) + ( Sum L ) ) by RLVECT_1:5
.= ( ( Sum LxX ) + ( ( Sum L ) - ( Sum LxX ) ) ) by RLVECT_1:def 3
.= ( ( Sum LxX ) + ( Sum LLxX ) ) by VECTSP_6:47
.= ( ( Lx * x ) + ( Sum LLxX ) ) by A9,VECTSP_6:45;
then A25: ( ( u + ( Sum LLxX ) ) + ( Lx * x ) ) = ( u + ( Sum L ) ) by RLVECT_1:def 3;
A26: (not ( u + ( Sum LLxX ) ) in ( U \ { u } ))
proof
assume ( u + ( Sum LLxX ) ) in ( U \ { u } );
then A27: ( u + ( Sum LLxX ) ) in ( Lin ( U \ { u } ) ) by VECTSP_7:8;
A28: ( ( u + ( Sum LLxX ) ) - ( Sum LLxX ) ) = ( u + ( ( Sum LLxX ) - ( Sum LLxX ) ) ) by RLVECT_1:def 3
.= ( u + ( 0. V ) ) by RLVECT_1:5
.= u by RLVECT_1:def 4;
( Sum LLxX ) in ( Lin ( U \ { u } ) ) by VECTSP_7:7;
hence thesis by A1,A2,A27,A28,VECTSP_4:23,VECTSP_9:14;
end;
then A29: ( ( ( U \ { u } ) \/ { ( u + ( Sum LLxX ) ) } ) \ { ( u + ( Sum LLxX ) ) } ) = ( U \ { u } ) by ZFMISC_1:117;
( u + ( Sum LLxX ) ) <> x by A6,A7,A26;
hence thesis by A19,A25,A29,A20,A12,A24,MATRIX13:115;
end;
let L being (Linear_Combination of ( U \ { u } ));
A30: P[ ( 0 ) ]
proof
let L being (Linear_Combination of ( U \ { u } ));
assume ( card ( Carrier L ) ) = ( 0 );
then ( Carrier L ) = ( {} );
then ( u + ( Sum L ) ) = ( u + ( 0. V ) ) by VECTSP_6:19
.= u by RLVECT_1:def 4;
hence thesis by A1,A2,ZFMISC_1:116;
end;
(for n holds P[ n ]) from NAT_1:sch 2(A30,A3);
then P[ ( card ( Carrier L ) ) ];
hence thesis;
end;
