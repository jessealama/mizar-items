environ
vocabularies TARSKI,XBOOLE_0;
notations TARSKI,CKB2,CKB4;
definitions CKB2,CKB4;
theorems TARSKI,CKB2,CKB4;
schemes TARSKI,CKB1;
registrations CKB3;
constructors TARSKI,CKB2,CKB4;
begin
reserve x for set;
definition
let X being set;
let Y being set;
func X \/ Y -> set
means
:Def3: (x in it iff (x in X or x in Y));
existence
proof
take ( union { X,Y } );
let x;
thus (x in ( union { X,Y } ) implies (x in X or x in Y))
proof
assume x in ( union { X,Y } );
then (ex X0 being set st (x in X0 & X0 in { X,Y })) by TARSKI:def 4;
hence thesis by TARSKI:def 2;
end;

assume (x in X or x in Y);
then consider X0 being set such that A1: (X0 = X or X0 = Y) and A2: x in X0;
X0 in { X,Y } by A1,TARSKI:def 2;
hence thesis by A2,TARSKI:def 4;
end;
uniqueness
proof
let A1 being set,A2 being set;
assume that
A3: (x in A1 iff (x in X or x in Y))
and
A4: (x in A2 iff (x in X or x in Y));
now
let x;
(x in A1 iff (x in X or x in Y)) by A3;
hence (x in A1 iff x in A2) by A4;
end;
hence thesis by TARSKI:1;
end;
commutativity;
idempotence;
end;
