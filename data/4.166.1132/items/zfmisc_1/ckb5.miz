environ
vocabularies XBOOLE_0,TARSKI,ZFMISC_1;
notations TARSKI,XBOOLE_0,ENUMSET1;
definitions TARSKI,XBOOLE_0;
theorems TARSKI,XBOOLE_0,ENUMSET1,XBOOLE_1,CKB2,CKB3,CKB4;
schemes XBOOLE_0;
registrations XBOOLE_0,CKB1;
constructors TARSKI,XBOOLE_0,ENUMSET1;
requirements BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve Z for set;
reserve M for set;
definition
let X;
func bool X
means
:Def1: (Z in it iff Z c= X);
existence
proof
defpred IT[ set ]
 means
$1 c= X;
consider M such that A1: (X in M & (for X holds (for Y holds ((X in M & Y c= X) implies Y in M)))) and (for X holds (X in M implies (ex Z st (Z in M & (for Y holds (Y c= X implies Y in Z)))))) and (for X holds (X c= M implies (X,M are_equipotent  or X in M))) by TARSKI:3;
consider IT being set such that A2: (Y in IT iff (Y in M & IT[ Y ])) from XBOOLE_0:sch 1;
take IT;
let Y;
thus (Y in IT implies Y c= X) by A2;
assume A3: Y c= X;
then Y in M by A1;
hence thesis by A2,A3;
end;
uniqueness
proof
defpred IT[ set ]
 means
$1 c= X;
thus (for X1,X2 being set holds (((for x being set holds (x in X1 iff IT[ x ])) & (for x being set holds (x in X2 iff IT[ x ]))) implies X1 = X2)) from XBOOLE_0:sch 3;
end;
end;
