environ
vocabularies XBOOLE_0,TARSKI,ZFMISC_1;
notations TARSKI,XBOOLE_0,ENUMSET1,CKB5;
definitions TARSKI,XBOOLE_0,CKB5;
theorems TARSKI,XBOOLE_0,ENUMSET1,XBOOLE_1,CKB2,CKB3,CKB4,CKB5;
schemes XBOOLE_0;
registrations XBOOLE_0,CKB1;
constructors TARSKI,XBOOLE_0,ENUMSET1,CKB5;
requirements BOOLE;
begin
reserve x for set;
reserve y for set;
reserve z for set;
reserve X for set;
reserve X1 for set;
reserve X2 for set;
definition
let X1;
let X2;
func [:X1,X2 :] means 
:Def2: (z in it iff (ex x st (ex y st ((x in X1 & y in X2) & z = [ x,y ]))));
existence
proof
defpred X[ set ]
 means
(ex x st (ex y st ((x in X1 & y in X2) & $1 = [ x,y ])));
A1: X1 c= ( X1 \/ X2 ) by XBOOLE_1:7;
consider X such that A2: (for z holds (z in X iff (z in ( bool ( bool ( X1 \/ X2 ) ) ) & X[ z ]))) from XBOOLE_0:sch 1;
take X;
let z;
thus (z in X implies (ex x st (ex y st ((x in X1 & y in X2) & z = [ x,y ])))) by A2;
given x,y such that
A3: x in X1
and
A4: y in X2
and
A5: z = [ x,y ];

{ x,y } c= ( X1 \/ X2 )
proof
let z;
assume z in { x,y };
then (z = x or z = y) by TARSKI:def 2;
hence thesis by A3,A4,XBOOLE_0:def 3;
end;
then A6: { x,y } in ( bool ( X1 \/ X2 ) ) by CKB5:def 1;
{ x } c= X1 by A3,CKB2:1;
then { x } c= ( X1 \/ X2 ) by A1,XBOOLE_1:1;
then A7: { x } in ( bool ( X1 \/ X2 ) ) by CKB5:def 1;
{ { x,y },{ x } } c= ( bool ( X1 \/ X2 ) )
proof
let z;
assume z in { { x,y },{ x } };
hence thesis by A7,A6,TARSKI:def 2;
end;
then { { x,y },{ x } } in ( bool ( bool ( X1 \/ X2 ) ) ) by CKB5:def 1;
hence thesis by A2,A3,A4,A5;
end;
uniqueness
proof
defpred X[ set ]
 means
(ex x st (ex y st ((x in X1 & y in X2) & $1 = [ x,y ])));
thus (for X1,X2 being set holds (((for x being set holds (x in X1 iff X[ x ])) & (for x being set holds (x in X2 iff X[ x ]))) implies X1 = X2)) from XBOOLE_0:sch 3;
end;
end;
