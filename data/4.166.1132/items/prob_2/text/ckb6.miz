environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,REAL_1,SEQ_1,PROB_1,RPR_1,CARD_1,ARYTM_3,RELAT_1,SEQ_2,FUNCT_1,ARYTM_1,ORDINAL2,XREAL_0,ORDINAL1,XXREAL_0,COMPLEX1,EQREL_1,TARSKI,ZFMISC_1,NAT_1,CARD_3,VALUED_1,PROB_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,XREAL_0,COMPLEX1,RELAT_1,REAL_1,FUNCT_1,FUNCT_2,VALUED_1,SEQ_1,SEQ_2,PROB_1,NAT_1,XXREAL_0,CKB3,CKB4;
definitions PROB_1,SUBSET_1,CKB4;
theorems FUNCT_1,FUNCT_2,SEQ_2,SUBSET_1,PROB_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_0,XCMPLX_1,COMPLEX1,XREAL_1,ORDINAL1,VALUED_1,VALUED_0,RELAT_1,CKB1,CKB2,CKB4,CKB5;
schemes FUNCT_1,FUNCT_2,NAT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,VALUED_0,PROB_1;
constructors XXREAL_0,REAL_1,NAT_1,COMPLEX1,VALUED_1,SEQ_1,SEQ_2,PROB_1,XXREAL_1,RELSET_1,CKB3,CKB4;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve Omega for set;
reserve m for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve Sigma for (SigmaField of Omega);
reserve ASeq for (SetSequence of Sigma);
reserve BSeq for (SetSequence of Sigma);
reserve B for (Event of Sigma);
theorem
Th10: ((ASeq is  non-ascending & (for n holds ( BSeq . n ) = ( ( ASeq . n ) /\ B ))) implies BSeq is  non-ascending)
proof
assume that
A1: ASeq is  non-ascending
and
A2: (for n holds ( BSeq . n ) = ( ( ASeq . n ) /\ B ));
thus (BSeq qua Function) is  non-ascending
proof
let m;
let n;
assume m <= n;
then ( ASeq . n ) c= ( ASeq . m ) by A1,PROB_1:def 4;
then ( ( ASeq . n ) /\ B ) c= ( ( ASeq . m ) /\ B ) by XBOOLE_1:26;
then ( BSeq . n ) c= ( ( ASeq . m ) /\ B ) by A2;
hence ( BSeq . n ) c= ( BSeq . m ) by A2;
end;

end;
