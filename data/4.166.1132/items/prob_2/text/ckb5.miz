environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,REAL_1,SEQ_1,PROB_1,RPR_1,CARD_1,ARYTM_3,RELAT_1,SEQ_2,FUNCT_1,ARYTM_1,ORDINAL2,XREAL_0,ORDINAL1,XXREAL_0,COMPLEX1,EQREL_1,TARSKI,ZFMISC_1,NAT_1,CARD_3,VALUED_1,PROB_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,XREAL_0,COMPLEX1,RELAT_1,REAL_1,FUNCT_1,FUNCT_2,VALUED_1,SEQ_1,SEQ_2,PROB_1,NAT_1,XXREAL_0,CKB3,CKB4;
definitions PROB_1,SUBSET_1,CKB4;
theorems FUNCT_1,FUNCT_2,SEQ_2,SUBSET_1,PROB_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_0,XCMPLX_1,COMPLEX1,XREAL_1,ORDINAL1,VALUED_1,VALUED_0,RELAT_1,CKB1,CKB2,CKB4;
schemes FUNCT_1,FUNCT_2,NAT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,VALUED_0,PROB_1;
constructors XXREAL_0,REAL_1,NAT_1,COMPLEX1,VALUED_1,SEQ_1,SEQ_2,PROB_1,XXREAL_1,RELSET_1,CKB3,CKB4;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve Omega for set;
reserve m for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve Sigma for (SigmaField of Omega);
reserve ASeq for (SetSequence of Sigma);
reserve BSeq for (SetSequence of Sigma);
reserve B for (Event of Sigma);
theorem
Th9: (ex BSeq st (for n holds ( BSeq . n ) = ( ( ASeq . n ) /\ B )))
proof
deffunc F((Element of ( NAT ))) = ( ( ASeq . $1 ) /\ B );
consider f being Function such that A1: (( dom f ) = ( NAT ) & (for n holds ( f . n ) = F(n))) from FUNCT_1:sch 4;
now
let m;
( ( ASeq . m ) /\ B ) in ( bool Omega );
hence ( f . m ) in ( bool Omega ) by A1;
end;
then (for x being set holds (x in ( NAT ) implies ( f . x ) in ( bool Omega )));
then reconsider f as (SetSequence of Omega) by A1,FUNCT_2:3;
now
let m being Nat;
reconsider m1 = m as (Element of ( NAT )) by ORDINAL1:def 12;
( ( ASeq . m1 ) /\ B ) in Sigma;
hence ( f . m ) in Sigma by A1;
end;
then ( rng f ) c= Sigma by NAT_1:52;
then reconsider f as (SetSequence of Sigma) by RELAT_1:def 19;
take f;
thus thesis by A1;
end;
