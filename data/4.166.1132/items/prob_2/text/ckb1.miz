environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,REAL_1,SEQ_1,PROB_1,RPR_1,CARD_1,ARYTM_3,RELAT_1,SEQ_2,FUNCT_1,ARYTM_1,ORDINAL2,XREAL_0,ORDINAL1,XXREAL_0,COMPLEX1,EQREL_1,TARSKI,ZFMISC_1,NAT_1,CARD_3,VALUED_1,PROB_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,XREAL_0,COMPLEX1,RELAT_1,REAL_1,FUNCT_1,FUNCT_2,VALUED_1,SEQ_1,SEQ_2,PROB_1,NAT_1,XXREAL_0;
definitions PROB_1,SUBSET_1;
theorems FUNCT_1,FUNCT_2,SEQ_2,SUBSET_1,PROB_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_0,XCMPLX_1,COMPLEX1,XREAL_1,ORDINAL1,VALUED_1,VALUED_0,RELAT_1;
schemes FUNCT_1,FUNCT_2,NAT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,VALUED_0,PROB_1;
constructors XXREAL_0,REAL_1,NAT_1,COMPLEX1,VALUED_1,SEQ_1,SEQ_2,PROB_1,XXREAL_1,RELSET_1;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve r for Real;
reserve r1 for Real;
reserve r2 for Real;
reserve r3 for Real;
theorem
Th4: (for r holds (for r1 holds (for r2 holds (for r3 holds ((r <> ( 0 ) & r1 <> ( 0 )) implies (( r3 / r1 ) = ( r2 / r ) iff ( r3 * r ) = ( r2 * r1 )))))))
proof
let r;
let r1;
let r2;
let r3;
assume that
A1: r <> ( 0 )
and
A2: r1 <> ( 0 );
thus (( r3 / r1 ) = ( r2 / r ) implies ( r3 * r ) = ( r2 * r1 ))
proof
assume A3: ( r3 / r1 ) = ( r2 / r );
( r3 * r ) = ( ( ( r3 / r1 ) * r1 ) * r ) by A2,XCMPLX_1:87
.= ( ( ( r2 / r ) * r ) * r1 ) by A3
.= ( r2 * r1 ) by A1,XCMPLX_1:87;
hence thesis;
end;

assume A4: ( r3 * r ) = ( r2 * r1 );
( r3 / r1 ) = ( ( r3 * 1 ) / r1 )
.= ( ( r3 * ( r * ( r " ) ) ) / r1 ) by A1,XCMPLX_0:def 7
.= ( ( ( r2 * r1 ) * ( r " ) ) / r1 ) by A4,XCMPLX_1:4
.= ( ( ( r2 * ( r " ) ) * r1 ) / r1 )
.= ( ( ( r2 / r ) * r1 ) / r1 ) by XCMPLX_0:def 9
.= ( ( ( r2 / r ) * r1 ) * ( r1 " ) ) by XCMPLX_0:def 9
.= ( ( r2 / r ) * ( r1 * ( r1 " ) ) )
.= ( ( r2 / r ) * 1 ) by A2,XCMPLX_0:def 7
.= ( r2 / r );
hence thesis;
end;
