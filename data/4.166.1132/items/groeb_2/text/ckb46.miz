environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_0,XBOOLE_0,FINSEQ_1,SUBSET_1,RELAT_1,XXREAL_0,FUNCT_1,SUPINF_2,CARD_3,ARYTM_3,TARSKI,ORDINAL4,PARTFUN1,CARD_1,FUNCT_7,ARYTM_1,RFINSEQ,PRE_POLY,PBOOLE,RELAT_2,BAGORDER,ORDERS_2,WAYBEL_4,ZFMISC_1,XCMPLX_0,ALGSTR_1,LATTICES,POLYNOM7,POLYNOM1,ORDINAL1,VECTSP_2,VALUED_0,VECTSP_1,BINOP_1,POLYRED,REWRITE1,STRUCT_0,MCART_1,TERMORD,GROEB_1,BROUWER,MESFUNC1,CAT_3,GROUP_1,IDEAL_1,FINSET_1,NAT_1,GROEB_2;
notations TARSKI,RELAT_1,XBOOLE_0,SUBSET_1,RELAT_2,RELSET_1,FUNCT_1,ORDINAL1,XCMPLX_0,PARTFUN1,FINSET_1,MCART_1,XXREAL_0,FINSEQ_1,PRE_POLY,STRUCT_0,ALGSTR_1,VECTSP_2,POLYNOM7,PBOOLE,ORDERS_2,REWRITE1,BAGORDER,ALGSTR_0,RLVECT_1,VFUNCT_1,VECTSP_1,POLYNOM1,TERMORD,IDEAL_1,POLYRED,GROUP_1,NAT_D,NUMBERS,NAT_1,GROEB_1,RFINSEQ,FINSEQ_7,WAYBEL_4,RECDEF_1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB27,CKB38,CKB44,CKB45;
definitions STRUCT_0,CKB3,CKB4,CKB6,CKB27,CKB38,CKB45;
theorems TARSKI,RELSET_1,FINSEQ_1,ZFMISC_1,VECTSP_1,POLYNOM1,FINSEQ_4,RLVECT_1,NAT_1,MCART_1,POLYNOM7,REWRITE1,XBOOLE_0,IDEAL_1,TERMORD,INT_1,FUNCT_1,FINSET_1,XBOOLE_1,VECTSP_2,POLYRED,FUNCT_2,BINOM,FINSEQ_3,RELAT_1,RELAT_2,WAYBEL_4,BAGORDER,RFINSEQ,FINSEQ_5,ALGSTR_1,FINSEQ_7,GROEB_1,GROUP_1,XREAL_1,XXREAL_0,PARTFUN1,VALUED_0,STRUCT_0,NAT_D,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB40,CKB41,CKB42,CKB43,CKB45;
schemes NAT_1,CLASSES1;
registrations XBOOLE_0,RELAT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,GCD_1,POLYNOM1,POLYNOM2,POLYNOM4,IDEAL_1,POLYNOM7,TERMORD,POLYRED,VALUED_0,ALGSTR_0,PRE_POLY,CARD_1,VFUNCT_1,FUNCT_1,FUNCT_2,RELSET_1,CKB17,CKB18,CKB19,CKB39;
constructors RFINSEQ,REWRITE1,FINSEQ_7,VECTSP_2,WAYBEL_4,WELLFND1,IDEAL_1,BAGORDER,TERMORD,POLYRED,GROEB_1,RECDEF_1,REAL_1,RELSET_1,PBOOLE,BINOP_2,VFUNCT_1,CKB3,CKB4,CKB6,CKB27,CKB38,CKB44,CKB45;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
(for n being Ordinal holds (for L being  right_zeroed  add-associative  right_complementable  well-unital  distributive non trivial doubleLoopStr holds (for f being (Polynomial of n,L) holds (for P being non empty (Subset of ( Polynom-Ring (n,L) )) holds (for A being (LeftLinearCombination of P) holds (A is_MonomialRepresentation_of f implies ( Support f ) c= ( union { ( Support ( m *' p ) ) where m is (Monomial of n,L),p is (Polynomial of n,L): (ex i being (Element of ( NAT )) st (i in ( dom A ) & ( A /. i ) = ( m *' p ))) } )))))))
proof
let n being Ordinal;
let L being  right_zeroed  add-associative  right_complementable  well-unital  distributive non trivial doubleLoopStr;
let f being (Polynomial of n,L);
let P being non empty (Subset of ( Polynom-Ring (n,L) ));
let A being (LeftLinearCombination of P);
assume A1: A is_MonomialRepresentation_of f;
defpred P[ (Element of ( NAT )) ]
 means
(for f being (Polynomial of n,L) holds (for A being (LeftLinearCombination of P) holds ((A is_MonomialRepresentation_of f & ( len A ) = $1) implies ( Support f ) c= ( union { ( Support ( m *' p ) ) where m is (Monomial of n,L),p is (Polynomial of n,L): (ex i being (Element of ( NAT )) st (i in ( dom A ) & ( A /. i ) = ( m *' p ))) } ))));
A2: (ex n being (Element of ( NAT )) st ( len A ) = n);
A3:now
let k being (Element of ( NAT ));
assume A4: P[ k ];
(for f being (Polynomial of n,L) holds (for A being (LeftLinearCombination of P) holds ((A is_MonomialRepresentation_of f & ( len A ) = ( k + 1 )) implies ( Support f ) c= ( union { ( Support ( m *' p ) ) where m is (Monomial of n,L),p is (Polynomial of n,L): (ex i being (Element of ( NAT )) st (i in ( dom A ) & ( A /. i ) = ( m *' p ))) } ))))
proof
A5: k <= ( k + 1 ) by NAT_1:11;
let f being (Polynomial of n,L);
let A being (LeftLinearCombination of P);
assume that
A6: A is_MonomialRepresentation_of f
and
A7: ( len A ) = ( k + 1 );
A8: A <> ( <*> (the carrier of ( Polynom-Ring (n,L) )) ) by A7;
A9: ( Sum A ) = f by A6,CKB45:def 1;
reconsider A as non empty (LeftLinearCombination of P) by A8;
consider A9 being (LeftLinearCombination of P),e being (Element of ( Polynom-Ring (n,L) )) such that A10: A = ( A9 ^ <* e *> ) and <* e *> is (LeftLinearCombination of P) by IDEAL_1:33;
A11: ( dom A ) = ( Seg ( k + 1 ) ) by A7,FINSEQ_1:def 3;
reconsider ep = ( Sum <* e *> ) as (Polynomial of n,L) by POLYNOM1:def 10;
reconsider g = ( Sum A9 ) as (Polynomial of n,L) by POLYNOM1:def 10;
f = ( ( Sum A9 ) + ( Sum <* e *> ) ) by A9,A10,RLVECT_1:41
.= ( g + ep ) by POLYNOM1:def 10;
then A12: ( Support f ) c= ( ( Support g ) \/ ( Support ep ) ) by POLYNOM1:20;
A13: ( len A ) = ( ( len A9 ) + ( len <* e *> ) ) by A10,FINSEQ_1:22
.= ( ( len A9 ) + 1 ) by FINSEQ_1:39;
then ( dom A9 ) = ( Seg k ) by A7,FINSEQ_1:def 3;
then A14: ( dom A9 ) c= ( dom A ) by A11,A5,FINSEQ_1:5;
now
let i being (Element of ( NAT ));
assume A15: i in ( dom A9 );
then ( A /. i ) = ( A . i ) by A14,PARTFUN1:def 6
.= ( A9 . i ) by A10,A15,FINSEQ_1:def 7
.= ( A9 /. i ) by A15,PARTFUN1:def 6;
hence (ex m being (Monomial of n,L) st (ex p being (Polynomial of n,L) st (p in P & ( A9 /. i ) = ( m *' p )))) by A6,A14,A15,CKB45:def 1;
end;
then A9 is_MonomialRepresentation_of g by CKB45:def 1;
then A16: ( Support g ) c= ( union { ( Support ( m *' p ) ) where m is (Monomial of n,L),p is (Polynomial of n,L): (ex i being (Element of ( NAT )) st (i in ( dom A9 ) & ( A9 /. i ) = ( m *' p ))) } ) by A4,A7,A13;
now
let x being set;
assume A17: x in ( Support f );
then reconsider u = x as (Element of ( Bags n ));
now
per cases  by A12,A17,XBOOLE_0:def 3;
case u in ( Support g );
then consider Y being set such that A18: u in Y and A19: Y in { ( Support ( m *' p ) ) where m is (Monomial of n,L),p is (Polynomial of n,L): (ex i being (Element of ( NAT )) st (i in ( dom A9 ) & ( A9 /. i ) = ( m *' p ))) } by A16,TARSKI:def 4;
consider m9 being (Monomial of n,L),p9 being (Polynomial of n,L) such that A20: Y = ( Support ( m9 *' p9 ) ) and A21: (ex i being (Element of ( NAT )) st (i in ( dom A9 ) & ( A9 /. i ) = ( m9 *' p9 ))) by A19;
consider i being (Element of ( NAT )) such that A22: i in ( dom A9 ) and A23: ( A9 /. i ) = ( m9 *' p9 ) by A21;
( A /. i ) = ( A . i ) by A14,A22,PARTFUN1:def 6
.= ( A9 . i ) by A10,A22,FINSEQ_1:def 7
.= ( A9 /. i ) by A22,PARTFUN1:def 6;
then Y in { ( Support ( m *' p ) ) where m is (Monomial of n,L),p is (Polynomial of n,L): (ex i being (Element of ( NAT )) st (i in ( dom A ) & ( A /. i ) = ( m *' p ))) } by A14,A20,A22,A23;
hence u in ( union { ( Support ( m *' p ) ) where m is (Monomial of n,L),p is (Polynomial of n,L): (ex i being (Element of ( NAT )) st (i in ( dom A ) & ( A /. i ) = ( m *' p ))) } ) by A18,TARSKI:def 4;
end;
case A24: u in ( Support ep );
1 <= ( len A ) by A7,NAT_1:11;
then A25: ( len A ) in ( Seg ( len A ) ) by FINSEQ_1:1;
( dom A ) = ( Seg ( len A ) ) by FINSEQ_1:def 3;
then A26: (ex m9 being (Monomial of n,L) st (ex p9 being (Polynomial of n,L) st (p9 in P & ( A /. ( len A ) ) = ( m9 *' p9 )))) by A6,A25,CKB45:def 1;
A27: (( A . ( len A ) ) = e & e = ( Sum <* e *> )) by A10,A13,FINSEQ_1:42,RLVECT_1:44;
A28: ( len A ) in ( dom A ) by A25,FINSEQ_1:def 3;
then ( A /. ( len A ) ) = ( A . ( len A ) ) by PARTFUN1:def 6;
then ( Support ep ) in { ( Support ( m *' p ) ) where m is (Monomial of n,L),p is (Polynomial of n,L): (ex i being (Element of ( NAT )) st (i in ( dom A ) & ( A /. i ) = ( m *' p ))) } by A28,A26,A27;
hence u in ( union { ( Support ( m *' p ) ) where m is (Monomial of n,L),p is (Polynomial of n,L): (ex i being (Element of ( NAT )) st (i in ( dom A ) & ( A /. i ) = ( m *' p ))) } ) by A24,TARSKI:def 4;
end;
end;
hence x in ( union { ( Support ( m *' p ) ) where m is (Monomial of n,L),p is (Polynomial of n,L): (ex i being (Element of ( NAT )) st (i in ( dom A ) & ( A /. i ) = ( m *' p ))) } );
end;
hence thesis by TARSKI:def 3;
end;
hence P[ ( k + 1 ) ];
end;
A29: P[ ( 0 ) ]
proof
let f being (Polynomial of n,L);
let A being (LeftLinearCombination of P);
assume that
A30: A is_MonomialRepresentation_of f
and
A31: ( len A ) = ( 0 );
A = ( <*> (the carrier of ( Polynom-Ring (n,L) )) ) by A31;
then ( Sum A ) = ( 0. ( Polynom-Ring (n,L) ) ) by RLVECT_1:43;
then f = ( 0. ( Polynom-Ring (n,L) ) ) by A30,CKB45:def 1;
then f = ( 0_ (n,L) ) by POLYNOM1:def 10;
then ( Support f ) = ( {} ) by POLYNOM7:1;
hence thesis by XBOOLE_1:2;
end;
(for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A29,A3);
hence thesis by A1,A2;
end;
