environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_0,XBOOLE_0,FINSEQ_1,SUBSET_1,RELAT_1,XXREAL_0,FUNCT_1,SUPINF_2,CARD_3,ARYTM_3,TARSKI,ORDINAL4,PARTFUN1,CARD_1,FUNCT_7,ARYTM_1,RFINSEQ,PRE_POLY,PBOOLE,RELAT_2,BAGORDER,ORDERS_2,WAYBEL_4,ZFMISC_1,XCMPLX_0,ALGSTR_1,LATTICES,POLYNOM7,POLYNOM1,ORDINAL1,VECTSP_2,VALUED_0,VECTSP_1,BINOP_1,POLYRED,REWRITE1,STRUCT_0,MCART_1,TERMORD,GROEB_1,BROUWER,MESFUNC1,CAT_3,GROUP_1,IDEAL_1,FINSET_1,NAT_1,GROEB_2;
notations TARSKI,RELAT_1,XBOOLE_0,SUBSET_1,RELAT_2,RELSET_1,FUNCT_1,ORDINAL1,XCMPLX_0,PARTFUN1,FINSET_1,MCART_1,XXREAL_0,FINSEQ_1,PRE_POLY,STRUCT_0,ALGSTR_1,VECTSP_2,POLYNOM7,PBOOLE,ORDERS_2,REWRITE1,BAGORDER,ALGSTR_0,RLVECT_1,VFUNCT_1,VECTSP_1,POLYNOM1,TERMORD,IDEAL_1,POLYRED,GROUP_1,NAT_D,NUMBERS,NAT_1,GROEB_1,RFINSEQ,FINSEQ_7,WAYBEL_4,RECDEF_1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB27,CKB38,CKB44,CKB45;
definitions STRUCT_0,CKB3,CKB4,CKB6,CKB27,CKB38,CKB45;
theorems TARSKI,RELSET_1,FINSEQ_1,ZFMISC_1,VECTSP_1,POLYNOM1,FINSEQ_4,RLVECT_1,NAT_1,MCART_1,POLYNOM7,REWRITE1,XBOOLE_0,IDEAL_1,TERMORD,INT_1,FUNCT_1,FINSET_1,XBOOLE_1,VECTSP_2,POLYRED,FUNCT_2,BINOM,FINSEQ_3,RELAT_1,RELAT_2,WAYBEL_4,BAGORDER,RFINSEQ,FINSEQ_5,ALGSTR_1,FINSEQ_7,GROEB_1,GROUP_1,XREAL_1,XXREAL_0,PARTFUN1,VALUED_0,STRUCT_0,NAT_D,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB40,CKB41,CKB42,CKB43,CKB45,CKB46,CKB47;
schemes NAT_1,CLASSES1;
registrations XBOOLE_0,RELAT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,GCD_1,POLYNOM1,POLYNOM2,POLYNOM4,IDEAL_1,POLYNOM7,TERMORD,POLYRED,VALUED_0,ALGSTR_0,PRE_POLY,CARD_1,VFUNCT_1,FUNCT_1,FUNCT_2,RELSET_1,CKB17,CKB18,CKB19,CKB39;
constructors RFINSEQ,REWRITE1,FINSEQ_7,VECTSP_2,WAYBEL_4,WELLFND1,IDEAL_1,BAGORDER,TERMORD,POLYRED,GROEB_1,RECDEF_1,REAL_1,RELSET_1,PBOOLE,BINOP_2,VFUNCT_1,CKB3,CKB4,CKB6,CKB27,CKB38,CKB44,CKB45;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
Lm4: (for n being Ordinal holds (for T being  connected (TermOrder of n) holds (for L being  right_zeroed  add-associative  right_complementable  well-unital  distributive non  trivial non  empty doubleLoopStr holds (for f being (Polynomial of n,L) holds (for P being non  empty (Subset of ( Polynom-Ring (n,L) )) holds (for A being (LeftLinearCombination of P) holds (A is_MonomialRepresentation_of f implies (for b being (bag of n) holds ((for i being (Element of ( NAT )) holds (i in ( dom A ) implies (for m being (Monomial of n,L) holds (for p being (Polynomial of n,L) holds ((( A . i ) = ( m *' p ) & p in P) implies ( ( m *' p ) . b ) = ( 0. L )))))) implies ( f . b ) = ( 0. L ))))))))))
proof
let n being Ordinal;
let T being  connected (TermOrder of n);
let L being  right_zeroed  add-associative  right_complementable  well-unital  distributive non  trivial non  empty doubleLoopStr;
let f being (Polynomial of n,L);
let P being non  empty (Subset of ( Polynom-Ring (n,L) ));
let A being (LeftLinearCombination of P);
assume A1: A is_MonomialRepresentation_of f;
let b being (bag of n);
assume A2: (for i being (Element of ( NAT )) holds (i in ( dom A ) implies (for m being (Monomial of n,L) holds (for p being (Polynomial of n,L) holds ((( A . i ) = ( m *' p ) & p in P) implies ( ( m *' p ) . b ) = ( 0. L ))))));
defpred P[ (Element of ( NAT )) ]
 means
(for f being (Polynomial of n,L) holds (for A being (LeftLinearCombination of P) holds (((A is_MonomialRepresentation_of f & f = ( Sum A )) & ( len A ) = $1) implies ((for i being (Element of ( NAT )) holds (i in ( dom A ) implies (for m being (Monomial of n,L) holds (for p being (Polynomial of n,L) holds ((( A . i ) = ( m *' p ) & p in P) implies ( ( m *' p ) . b ) = ( 0. L )))))) implies ( f . b ) = ( 0. L )))));
A3:now
let k being (Element of ( NAT ));
assume A4: P[ k ];
(for f being (Polynomial of n,L) holds (for A being (LeftLinearCombination of P) holds (((A is_MonomialRepresentation_of f & f = ( Sum A )) & ( len A ) = ( k + 1 )) implies ((for i being (Element of ( NAT )) holds (i in ( dom A ) implies (for m being (Monomial of n,L) holds (for p being (Polynomial of n,L) holds ((( A . i ) = ( m *' p ) & p in P) implies ( ( m *' p ) . b ) = ( 0. L )))))) implies ( f . b ) = ( 0. L )))))
proof
let f being (Polynomial of n,L);
let A being (LeftLinearCombination of P);
assume that
A5: A is_MonomialRepresentation_of f
and
A6: f = ( Sum A )
and
A7: ( len A ) = ( k + 1 );
set B = ( A | ( Seg k ) );
reconsider B as (FinSequence of ( Polynom-Ring (n,L) )) by FINSEQ_1:18;
reconsider B as (LeftLinearCombination of P) by IDEAL_1:42;
set g = ( Sum B );
reconsider g as (Polynomial of n,L) by POLYNOM1:def 10;
A8: ( dom A ) = ( Seg ( k + 1 ) ) by A7,FINSEQ_1:def 3;
then ( k + 1 ) in ( dom A ) by FINSEQ_1:4;
then A9: (ex m being (Monomial of n,L) st (ex p being (Polynomial of n,L) st (p in P & ( A /. ( k + 1 ) ) = ( m *' p )))) by A5,CKB45:def 1;
A10: k <= ( len A ) by A7,NAT_1:11;
then (k <= ( k + 1 ) & ( dom B ) = ( Seg k )) by FINSEQ_1:17,NAT_1:11;
then A11: ( dom B ) c= ( dom A ) by A8,FINSEQ_1:5;
now
let i being (Element of ( NAT ));
assume A12: i in ( dom B );
then ( B /. i ) = ( B . i ) by PARTFUN1:def 6
.= ( A . i ) by A12,FUNCT_1:47
.= ( A /. i ) by A11,A12,PARTFUN1:def 6;
hence (ex m being (Monomial of n,L) st (ex p being (Polynomial of n,L) st (p in P & ( B /. i ) = ( m *' p )))) by A5,A11,A12,CKB45:def 1;
end;
then A13: B is_MonomialRepresentation_of g by CKB45:def 1;
assume A14: (for i being (Element of ( NAT )) holds (i in ( dom A ) implies (for m being (Monomial of n,L) holds (for p being (Polynomial of n,L) holds ((( A . i ) = ( m *' p ) & p in P) implies ( ( m *' p ) . b ) = ( 0. L ))))));
A15:now
let i being (Element of ( NAT ));
assume A16: i in ( dom B );
now
let m being (Monomial of n,L);
let p being (Polynomial of n,L);
assume that
A17: ( B . i ) = ( m *' p )
and
A18: p in P;
( A . i ) = ( m *' p ) by A16,A17,FUNCT_1:47;
hence ( ( m *' p ) . b ) = ( 0. L ) by A14,A11,A16,A18;
end;
hence (for m being (Monomial of n,L) holds (for p being (Polynomial of n,L) holds ((( B . i ) = ( m *' p ) & p in P) implies ( ( m *' p ) . b ) = ( 0. L ))));
end;
reconsider h = ( A /. ( k + 1 ) ) as (Polynomial of n,L) by POLYNOM1:def 10;
( B ^ <* ( A /. ( k + 1 ) ) *> ) = ( B ^ <* ( A . ( k + 1 ) ) *> ) by A8,FINSEQ_1:4,PARTFUN1:def 6
.= A by A7,FINSEQ_3:55;
then f = ( ( Sum B ) + ( Sum <* ( A /. ( k + 1 ) ) *> ) ) by A6,RLVECT_1:41
.= ( ( Sum B ) + ( A /. ( k + 1 ) ) ) by RLVECT_1:44
.= ( g + h ) by POLYNOM1:def 10;
then A19: ( f . b ) = ( ( g . b ) + ( h . b ) ) by POLYNOM1:15;
( A /. ( k + 1 ) ) = ( A . ( k + 1 ) ) by A8,FINSEQ_1:4,PARTFUN1:def 6;
then A20: ( 0. L ) = ( h . b ) by A14,A8,A9,FINSEQ_1:4;
( len B ) = k by A10,FINSEQ_1:17;
then ( g . b ) = ( 0. L ) by A4,A13,A15;
hence thesis by A19,A20,RLVECT_1:def 4;
end;
hence P[ ( k + 1 ) ];
end;
A21: P[ ( 0 ) ]
proof
let f being (Polynomial of n,L);
let A being (LeftLinearCombination of P);
assume that
A is_MonomialRepresentation_of f
and
A22: (f = ( Sum A ) & ( len A ) = ( 0 ));
assume (for i being (Element of ( NAT )) holds (i in ( dom A ) implies (for m being (Monomial of n,L) holds (for p being (Polynomial of n,L) holds ((( A . i ) = ( m *' p ) & p in P) implies ( ( m *' p ) . b ) = ( 0. L ))))));
A = ( <*> (the carrier of ( Polynom-Ring (n,L) )) ) by A22;
then f = ( Sum ( <*> (the carrier of ( Polynom-Ring (n,L) )) ) ) by A22
.= ( 0. ( Polynom-Ring (n,L) ) ) by RLVECT_1:43
.= ( 0_ (n,L) ) by POLYNOM1:def 10;
hence thesis by POLYNOM1:22;
end;
A23: (for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A21,A3);
A24: (ex n being (Element of ( NAT )) st n = ( len A ));
( Sum A ) = f by A1,CKB45:def 1;
hence thesis by A1,A2,A23,A24;
end;
