environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_0,XBOOLE_0,FINSEQ_1,SUBSET_1,RELAT_1,XXREAL_0,FUNCT_1,SUPINF_2,CARD_3,ARYTM_3,TARSKI,ORDINAL4,PARTFUN1,CARD_1,FUNCT_7,ARYTM_1,RFINSEQ,PRE_POLY,PBOOLE,RELAT_2,BAGORDER,ORDERS_2,WAYBEL_4,ZFMISC_1,XCMPLX_0,ALGSTR_1,LATTICES,POLYNOM7,POLYNOM1,ORDINAL1,VECTSP_2,VALUED_0,VECTSP_1,BINOP_1,POLYRED,REWRITE1,STRUCT_0,MCART_1,TERMORD,GROEB_1,BROUWER,MESFUNC1,CAT_3,GROUP_1,IDEAL_1,FINSET_1,NAT_1,GROEB_2;
notations TARSKI,RELAT_1,XBOOLE_0,SUBSET_1,RELAT_2,RELSET_1,FUNCT_1,ORDINAL1,XCMPLX_0,PARTFUN1,FINSET_1,MCART_1,XXREAL_0,FINSEQ_1,PRE_POLY,STRUCT_0,ALGSTR_1,VECTSP_2,POLYNOM7,PBOOLE,ORDERS_2,REWRITE1,BAGORDER,ALGSTR_0,RLVECT_1,VFUNCT_1,VECTSP_1,POLYNOM1,TERMORD,IDEAL_1,POLYRED,GROUP_1,NAT_D,NUMBERS,NAT_1,GROEB_1,RFINSEQ,FINSEQ_7,WAYBEL_4,RECDEF_1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB27;
definitions STRUCT_0,CKB3,CKB4,CKB6,CKB27;
theorems TARSKI,RELSET_1,FINSEQ_1,ZFMISC_1,VECTSP_1,POLYNOM1,FINSEQ_4,RLVECT_1,NAT_1,MCART_1,POLYNOM7,REWRITE1,XBOOLE_0,IDEAL_1,TERMORD,INT_1,FUNCT_1,FINSET_1,XBOOLE_1,VECTSP_2,POLYRED,FUNCT_2,BINOM,FINSEQ_3,RELAT_1,RELAT_2,WAYBEL_4,BAGORDER,RFINSEQ,FINSEQ_5,ALGSTR_1,FINSEQ_7,GROEB_1,GROUP_1,XREAL_1,XXREAL_0,PARTFUN1,VALUED_0,STRUCT_0,NAT_D,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
schemes NAT_1,CLASSES1;
registrations XBOOLE_0,RELAT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,GCD_1,POLYNOM1,POLYNOM2,POLYNOM4,IDEAL_1,POLYNOM7,TERMORD,POLYRED,VALUED_0,ALGSTR_0,PRE_POLY,CARD_1,VFUNCT_1,FUNCT_1,FUNCT_2,RELSET_1,CKB17,CKB18,CKB19;
constructors RFINSEQ,REWRITE1,FINSEQ_7,VECTSP_2,WAYBEL_4,WELLFND1,IDEAL_1,BAGORDER,TERMORD,POLYRED,GROEB_1,RECDEF_1,REAL_1,RELSET_1,PBOOLE,BINOP_2,VFUNCT_1,CKB3,CKB4,CKB6,CKB27;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
Lm2: (for L being  add-associative  left_zeroed  right_zeroed  add-cancelable  right_complementable  associative  distributive  well-unital non empty doubleLoopStr holds (for P being (Subset of L) holds (for p being (Element of L) holds (p in P implies p in ( P -Ideal )))))
proof
let L being  add-associative  left_zeroed  right_zeroed  add-cancelable  associative  distributive  well-unital  right_complementable non empty doubleLoopStr;
let P being (Subset of L);
let p being (Element of L);
set f = <* p *>;
assume A1: p in P;
then reconsider P9 = P as non empty (Subset of L);
now
let i being set;
assume A2: i in ( dom f );
( dom f ) = { 1 } by FINSEQ_1:2,FINSEQ_1:38;
then i = 1 by A2,TARSKI:def 1;
then ( f /. i ) = ( f . 1 ) by A2,PARTFUN1:def 6
.= p by FINSEQ_1:40
.= ( ( 1. L ) * p ) by VECTSP_1:def 8
.= ( ( ( 1. L ) * p ) * ( 1. L ) ) by VECTSP_1:def 4;
hence (ex u,v being (Element of L) st (ex a being (Element of P9) st ( f /. i ) = ( ( u * a ) * v ))) by A1;
end;
then reconsider f as (LinearCombination of P9) by IDEAL_1:def 8;
( Sum f ) = p by RLVECT_1:44;
hence thesis by IDEAL_1:60;
end;
