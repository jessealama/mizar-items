environ
vocabularies NUMBERS,SUBSET_1,STRUCT_0,FUNCT_1,GLIB_000,XBOOLE_0,FUNCT_5,RELAT_1,PARTFUN1,RELAT_2,FINSET_1,TREES_2,FINSEQ_1,XXREAL_0,ARYTM_3,TARSKI,CARD_1,FUNCT_2,ZFMISC_1,MCART_1,GRAPH_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCT_5,FINSEQ_1,FINSET_1,PARTFUN1,CARD_1,NUMBERS,NAT_1,MCART_1,XXREAL_0,STRUCT_0,CKB1,CKB2,CKB3,CKB5,CKB6,CKB7;
definitions FUNCT_1,TARSKI,CKB6,CKB7;
theorems FUNCT_2,FUNCT_1,PARTFUN1,FINSEQ_1,NAT_1,ZFMISC_1,MCART_1,TARSKI,RELAT_1,FINSEQ_3,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,CARD_1,CKB6,CKB7;
schemes FUNCT_2,TARSKI,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FINSET_1,XREAL_0,FINSEQ_1,ORDINAL1,STRUCT_0,CARD_1,FUNCT_2,RELSET_1,CKB1,CKB4;
constructors PARTFUN1,FUNCT_2,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,STRUCT_0,FUNCT_5,RELSET_1,CKB1,CKB6,CKB7;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve v for set;
reserve G for Graph;
reserve G1 for Graph;
reserve G2 for Graph;
definition
let G1;
let G2;
assume that
A1: (the Source of G1) tolerates (the Source of G2)
and
A2: (the Target of G1) tolerates (the Target of G2);
func G1 \/ G2 ->  strict Graph means 
:Def3: ((((the carrier of it) = ( (the carrier of G1) \/ (the carrier of G2) ) & (the carrier' of it) = ( (the carrier' of G1) \/ (the carrier' of G2) )) & (for v holds (v in (the carrier' of G1) implies (( (the Source of it) . v ) = ( (the Source of G1) . v ) & ( (the Target of it) . v ) = ( (the Target of G1) . v ))))) & (for v holds (v in (the carrier' of G2) implies (( (the Source of it) . v ) = ( (the Source of G2) . v ) & ( (the Target of it) . v ) = ( (the Target of G2) . v )))));
existence
proof
set V = ( (the carrier of G1) \/ (the carrier of G2) );
set E = ( (the carrier' of G1) \/ (the carrier' of G2) );
(ex S being (Function of E,V) st ((for v holds (v in (the carrier' of G1) implies ( S . v ) = ( (the Source of G1) . v ))) & (for v holds (v in (the carrier' of G2) implies ( S . v ) = ( (the Source of G2) . v )))))
proof
defpred P[ set,set ]
 means
(($1 in (the carrier' of G1) implies $2 = ( (the Source of G1) . $1 )) & ($1 in (the carrier' of G2) implies $2 = ( (the Source of G2) . $1 )));
A3: (for x being set holds (x in E implies (ex y being set st (y in V & P[ x,y ]))))
proof
let x being set;
assume A4: x in E;
A5: (x in (the carrier' of G1) implies thesis)
proof
assume A6: x in (the carrier' of G1);
take y = (( (the Source of G1) . x ) qua set);
y in (the carrier of G1) by A6,FUNCT_2:5;
hence y in V by XBOOLE_0:def 3;
thus (x in (the carrier' of G1) implies y = ( (the Source of G1) . x ));
assume x in (the carrier' of G2);
then A7: x in ( (the carrier' of G1) /\ (the carrier' of G2) ) by A6,XBOOLE_0:def 4;
( dom (the Source of G1) ) = (the carrier' of G1) by FUNCT_2:def 1;
then x in ( ( dom (the Source of G1) ) /\ ( dom (the Source of G2) ) ) by A7,FUNCT_2:def 1;
hence y = ( (the Source of G2) . x ) by A1,PARTFUN1:def 4;
end;
((not x in (the carrier' of G1)) implies thesis)
proof
assume A8: (not x in (the carrier' of G1));
then A9: x in (the carrier' of G2) by A4,XBOOLE_0:def 3;
take y = (( (the Source of G2) . x ) qua set);
y in (the carrier of G2) by A9,FUNCT_2:5;
hence y in V by XBOOLE_0:def 3;
thus thesis by A8;
end;
hence thesis by A5;
end;
consider S being (Function of E,V) such that A10: (for x being set holds (x in E implies P[ x,( S . x ) ])) from FUNCT_2:sch 1(A3);
take S;
thus (for v holds (v in (the carrier' of G1) implies ( S . v ) = ( (the Source of G1) . v )))
proof
let v;
assume A11: v in (the carrier' of G1);
then v in E by XBOOLE_0:def 3;
hence thesis by A10,A11;
end;

let v;
assume A12: v in (the carrier' of G2);
then v in E by XBOOLE_0:def 3;
hence thesis by A10,A12;
end;
then consider S being (Function of E,V) such that A13: (for v holds (v in (the carrier' of G1) implies ( S . v ) = ( (the Source of G1) . v ))) and A14: (for v holds (v in (the carrier' of G2) implies ( S . v ) = ( (the Source of G2) . v )));
(ex T being (Function of E,V) st ((for v holds (v in (the carrier' of G1) implies ( T . v ) = ( (the Target of G1) . v ))) & (for v holds (v in (the carrier' of G2) implies ( T . v ) = ( (the Target of G2) . v )))))
proof
defpred P[ set,set ]
 means
(($1 in (the carrier' of G1) implies $2 = ( (the Target of G1) . $1 )) & ($1 in (the carrier' of G2) implies $2 = ( (the Target of G2) . $1 )));
A15: (for x being set holds (x in E implies (ex y being set st (y in V & P[ x,y ]))))
proof
let x being set;
assume A16: x in E;
A17: (x in (the carrier' of G1) implies thesis)
proof
assume A18: x in (the carrier' of G1);
take y = (( (the Target of G1) . x ) qua set);
y in (the carrier of G1) by A18,FUNCT_2:5;
hence y in V by XBOOLE_0:def 3;
thus (x in (the carrier' of G1) implies y = ( (the Target of G1) . x ));
assume x in (the carrier' of G2);
then A19: x in ( (the carrier' of G1) /\ (the carrier' of G2) ) by A18,XBOOLE_0:def 4;
( dom (the Target of G1) ) = (the carrier' of G1) by FUNCT_2:def 1;
then x in ( ( dom (the Target of G1) ) /\ ( dom (the Target of G2) ) ) by A19,FUNCT_2:def 1;
hence y = ( (the Target of G2) . x ) by A2,PARTFUN1:def 4;
end;
((not x in (the carrier' of G1)) implies thesis)
proof
assume A20: (not x in (the carrier' of G1));
then A21: x in (the carrier' of G2) by A16,XBOOLE_0:def 3;
take y = (( (the Target of G2) . x ) qua set);
y in (the carrier of G2) by A21,FUNCT_2:5;
hence y in V by XBOOLE_0:def 3;
thus thesis by A20;
end;
hence thesis by A17;
end;
consider S being (Function of E,V) such that A22: (for x being set holds (x in E implies P[ x,( S . x ) ])) from FUNCT_2:sch 1(A15);
take S;
thus (for v holds (v in (the carrier' of G1) implies ( S . v ) = ( (the Target of G1) . v )))
proof
let v;
assume A23: v in (the carrier' of G1);
then v in E by XBOOLE_0:def 3;
hence thesis by A22,A23;
end;

let v;
assume A24: v in (the carrier' of G2);
then v in E by XBOOLE_0:def 3;
hence thesis by A22,A24;
end;
then consider T being (Function of E,V) such that A25: (for v holds (v in (the carrier' of G1) implies ( T . v ) = ( (the Target of G1) . v ))) and A26: (for v holds (v in (the carrier' of G2) implies ( T . v ) = ( (the Target of G2) . v )));
reconsider G = MultiGraphStruct (# V,E,S,T #) as  strict Graph;
take G;
thus (the carrier of G) = V;
thus (the carrier' of G) = E;
thus (for v holds (v in (the carrier' of G1) implies (( (the Source of G) . v ) = ( (the Source of G1) . v ) & ( (the Target of G) . v ) = ( (the Target of G1) . v )))) by A13,A25;
let v;
assume A27: v in (the carrier' of G2);
hence ( (the Source of G) . v ) = ( (the Source of G2) . v ) by A14;
thus thesis by A26,A27;
end;
uniqueness
proof
let G being  strict Graph;
let G9 being  strict Graph;
assume that
A28: (the carrier of G) = ( (the carrier of G1) \/ (the carrier of G2) )
and
A29: (the carrier' of G) = ( (the carrier' of G1) \/ (the carrier' of G2) )
and
A30: (for v holds (v in (the carrier' of G1) implies (( (the Source of G) . v ) = ( (the Source of G1) . v ) & ( (the Target of G) . v ) = ( (the Target of G1) . v ))))
and
A31: (for v holds (v in (the carrier' of G2) implies (( (the Source of G) . v ) = ( (the Source of G2) . v ) & ( (the Target of G) . v ) = ( (the Target of G2) . v ))))
and
A32: (the carrier of G9) = ( (the carrier of G1) \/ (the carrier of G2) )
and
A33: (the carrier' of G9) = ( (the carrier' of G1) \/ (the carrier' of G2) )
and
A34: (for v holds (v in (the carrier' of G1) implies (( (the Source of G9) . v ) = ( (the Source of G1) . v ) & ( (the Target of G9) . v ) = ( (the Target of G1) . v ))))
and
A35: (for v holds (v in (the carrier' of G2) implies (( (the Source of G9) . v ) = ( (the Source of G2) . v ) & ( (the Target of G9) . v ) = ( (the Target of G2) . v ))));
A36: (( dom (the Source of G) ) = (the carrier' of G) & ( dom (the Source of G9) ) = (the carrier' of G)) by A29,A33,FUNCT_2:def 1;
A37: (( dom (the Target of G) ) = (the carrier' of G) & ( dom (the Target of G9) ) = (the carrier' of G)) by A29,A33,FUNCT_2:def 1;
(for x being set holds (x in (the carrier' of G) implies ( (the Source of G) . x ) = ( (the Source of G9) . x )))
proof
let x being set;
assume that
A38: x in (the carrier' of G);
A39:now
assume A40: x in (the carrier' of G1);
hence ( (the Source of G) . x ) = ( (the Source of G1) . x ) by A30
.= ( (the Source of G9) . x ) by A34,A40;
end;
now
assume A41: x in (the carrier' of G2);
hence ( (the Source of G) . x ) = ( (the Source of G2) . x ) by A31
.= ( (the Source of G9) . x ) by A35,A41;
end;
hence thesis by A29,A38,A39,XBOOLE_0:def 3;
end;
then A42: (the Source of G) = (the Source of G9) by A36,FUNCT_1:2;
(for x being set holds (x in (the carrier' of G) implies ( (the Target of G) . x ) = ( (the Target of G9) . x )))
proof
let x being set;
assume that
A43: x in (the carrier' of G);
A44:now
assume A45: x in (the carrier' of G1);
hence ( (the Target of G) . x ) = ( (the Target of G1) . x ) by A30
.= ( (the Target of G9) . x ) by A34,A45;
end;
now
assume A46: x in (the carrier' of G2);
hence ( (the Target of G) . x ) = ( (the Target of G2) . x ) by A31
.= ( (the Target of G9) . x ) by A35,A46;
end;
hence thesis by A29,A43,A44,XBOOLE_0:def 3;
end;
hence thesis by A28,A29,A32,A33,A37,A42,FUNCT_1:2;
end;
end;
