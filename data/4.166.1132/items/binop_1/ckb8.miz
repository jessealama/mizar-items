environ
vocabularies FUNCT_1,XBOOLE_0,ZFMISC_1,SUBSET_1,TARSKI,RELAT_1,PARTFUN1,BINOP_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,CKB1,CKB2,CKB5,CKB6;
definitions FUNCT_1,CKB1;
theorems RELAT_1,FUNCT_1,FUNCT_2,ZFMISC_1,SUBSET_1,CKB1,CKB3,CKB4;
schemes FUNCT_2,PARTFUN1,CKB7;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1;
constructors FUNCT_2,RELSET_1,CKB1,CKB2;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve z for set;
scheme Lambda2 { X,Y,Z() -> set,F(set,set) -> set } : (ex f being (Function of [: X(),Y() :],Z()) st (for x holds (for y holds ((x in X() & y in Y()) implies ( f . (x,y) ) = F(x,y)))))
provided
A1: (for x holds (for y holds ((x in X() & y in Y()) implies F(x,y) in Z())))
proof
defpred P[ set,set,set ]
 means
$3 = F($1,$2);
A2: (for x holds (for y holds ((x in X() & y in Y()) implies (ex z st (z in Z() & P[ x,y,z ]))))) by A1;
thus (ex f being (Function of [: X(),Y() :],Z()) st (for x holds (for y holds ((x in X() & y in Y()) implies P[ x,y,( f . (x,y) ) ])))) from CKB7:sch 1(A2);
end;
