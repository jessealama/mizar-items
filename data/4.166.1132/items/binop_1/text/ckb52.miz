environ
vocabularies FUNCT_1,XBOOLE_0,ZFMISC_1,SUBSET_1,TARSKI,RELAT_1,PARTFUN1,BINOP_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,CKB1,CKB2,CKB5,CKB6,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB26,CKB27,CKB28,CKB29,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44;
definitions FUNCT_1,CKB1,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB26,CKB27,CKB28,CKB29,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44;
theorems RELAT_1,FUNCT_1,FUNCT_2,ZFMISC_1,SUBSET_1,CKB1,CKB3,CKB4,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48;
schemes FUNCT_2,PARTFUN1,CKB7,CKB8,CKB9,CKB10,CKB49,CKB50,CKB51;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,CKB14;
constructors FUNCT_2,RELSET_1,CKB1,CKB2,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB26,CKB27,CKB28,CKB29,CKB36;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
scheme  { X,Y() -> non empty set,Z() -> set,F(set,set) -> set,P[set,set] } : (ex f being (PartFunc of [: X(),Y() :],Z()) st ((for x being (Element of X()) holds (for y being (Element of Y()) holds ([ x,y ] in ( dom f ) iff P[ x,y ]))) & (for x being (Element of X()) holds (for y being (Element of Y()) holds ([ x,y ] in ( dom f ) implies ( f . (x,y) ) = F(x,y))))))
provided
A1: (for x being (Element of X()) holds (for y being (Element of Y()) holds (P[ x,y ] implies F(x,y) in Z())))
proof
A2: (for x holds (for y holds (((x in X() & y in Y()) & P[ x,y ]) implies F(x,y) in Z()))) by A1;
consider f being (PartFunc of [: X(),Y() :],Z()) such that A3: ((for x holds (for y holds ([ x,y ] in ( dom f ) iff ((x in X() & y in Y()) & P[ x,y ])))) & (for x holds (for y holds ([ x,y ] in ( dom f ) implies ( f . (x,y) ) = F(x,y))))) from CKB51:sch 1(A2);
take f;
thus thesis by A3;
end;
