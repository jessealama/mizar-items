environ
vocabularies FUNCT_1,XBOOLE_0,ZFMISC_1,SUBSET_1,TARSKI,RELAT_1,PARTFUN1,BINOP_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,CKB1,CKB2;
definitions FUNCT_1,CKB1;
theorems RELAT_1,FUNCT_1,FUNCT_2,ZFMISC_1,SUBSET_1,CKB1;
schemes FUNCT_2,PARTFUN1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1;
constructors FUNCT_2,RELSET_1,CKB1,CKB2;
requirements SUBSET,BOOLE;
begin
theorem
Th1: (for X,Y,Z being set holds (for f1,f2 being (Function of [: X,Y :],Z) holds ((for x,y being set holds ((x in X & y in Y) implies ( f1 . (x,y) ) = ( f2 . (x,y) ))) implies f1 = f2)))
proof
let X being set,Y being set,Z being set;
let f1 being (Function of [: X,Y :],Z),f2 being (Function of [: X,Y :],Z);
assume that
A1: (for x,y being set holds ((x in X & y in Y) implies ( f1 . (x,y) ) = ( f2 . (x,y) )));
(for z being set holds (z in [: X,Y :] implies ( f1 . z ) = ( f2 . z )))
proof
let z being set;
assume z in [: X,Y :];
then consider x being set,y being set such that A2: (x in X & y in Y) and A3: z = [ x,y ] by ZFMISC_1:def 2;
(( f1 . (x,y) ) = ( f1 . z ) & ( f2 . (x,y) ) = ( f2 . z )) by A3;
hence thesis by A1,A2;
end;
hence thesis by FUNCT_2:12;
end;
