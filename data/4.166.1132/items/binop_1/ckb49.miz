environ
vocabularies FUNCT_1,XBOOLE_0,ZFMISC_1,SUBSET_1,TARSKI,RELAT_1,PARTFUN1,BINOP_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,CKB1,CKB2,CKB5,CKB6,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB26,CKB27,CKB28,CKB29,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44;
definitions FUNCT_1,CKB1,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB26,CKB27,CKB28,CKB29,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44;
theorems RELAT_1,FUNCT_1,FUNCT_2,ZFMISC_1,SUBSET_1,CKB1,CKB3,CKB4,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48;
schemes FUNCT_2,PARTFUN1,CKB7,CKB8,CKB9,CKB10;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,CKB14;
constructors FUNCT_2,RELSET_1,CKB1,CKB2,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB26,CKB27,CKB28,CKB29,CKB36;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve x1 for set;
reserve y for set;
reserve y1 for set;
reserve z for set;
reserve z1 for set;
reserve z2 for set;
scheme PartFuncEx2 { X,Y,Z() -> set,P[set,set,set] } : (ex f being (PartFunc of [: X(),Y() :],Z()) st ((for x holds (for y holds ([ x,y ] in ( dom f ) iff ((x in X() & y in Y()) & (ex z st P[ x,y,z ]))))) & (for x holds (for y holds ([ x,y ] in ( dom f ) implies P[ x,y,( f . (x,y) ) ])))))
provided
A1: (for x holds (for y holds (for z holds (((x in X() & y in Y()) & P[ x,y,z ]) implies z in Z()))))
and
A2: (for x holds (for y holds (for z1 holds (for z2 holds ((((x in X() & y in Y()) & P[ x,y,z1 ]) & P[ x,y,z2 ]) implies z1 = z2)))))
proof
defpred Q[ set,set ]
 means
(for x1 holds (for y1 holds ($1 = [ x1,y1 ] implies P[ x1,y1,$2 ])));
A3: (for x holds (for z holds ((x in [: X(),Y() :] & Q[ x,z ]) implies z in Z())))
proof
let x;
let z;
assume x in [: X(),Y() :];
then A4: (ex x1 st (ex y1 st ((x1 in X() & y1 in Y()) & x = [ x1,y1 ]))) by ZFMISC_1:def 2;
assume (for x1 holds (for y1 holds (x = [ x1,y1 ] implies P[ x1,y1,z ])));
hence thesis by A1,A4;
end;
A5: (for x holds (for z1 holds (for z2 holds (((x in [: X(),Y() :] & Q[ x,z1 ]) & Q[ x,z2 ]) implies z1 = z2))))
proof
let x;
let z1;
let z2;
assume that
A6: x in [: X(),Y() :]
and
A7: ((for x1 holds (for y1 holds (x = [ x1,y1 ] implies P[ x1,y1,z1 ]))) & (for x1 holds (for y1 holds (x = [ x1,y1 ] implies P[ x1,y1,z2 ]))));
consider x1,y1 such that A8: (x1 in X() & y1 in Y()) and A9: x = [ x1,y1 ] by A6,ZFMISC_1:def 2;
(P[ x1,y1,z1 ] & P[ x1,y1,z2 ]) by A7,A9;
hence thesis by A2,A8;
end;
consider f being (PartFunc of [: X(),Y() :],Z()) such that A10: (for x holds (x in ( dom f ) iff (x in [: X(),Y() :] & (ex z st Q[ x,z ])))) and A11: (for x holds (x in ( dom f ) implies Q[ x,( f . x ) ])) from PARTFUN1:sch 2(A3,A5);
take f;
thus (for x holds (for y holds ([ x,y ] in ( dom f ) iff ((x in X() & y in Y()) & (ex z st P[ x,y,z ])))))
proof
let x;
let y;
thus ([ x,y ] in ( dom f ) implies ((x in X() & y in Y()) & (ex z st P[ x,y,z ])))
proof
assume A12: [ x,y ] in ( dom f );
hence (x in X() & y in Y()) by ZFMISC_1:87;
consider z such that A13: (for x1 holds (for y1 holds ([ x,y ] = [ x1,y1 ] implies P[ x1,y1,z ]))) by A10,A12;
take z;
thus thesis by A13;
end;

assume (x in X() & y in Y());
then A14: [ x,y ] in [: X(),Y() :] by ZFMISC_1:def 2;
given z such that
A15: P[ x,y,z ];

now
take z;
let x1;
let y1;
assume A16: [ x,y ] = [ x1,y1 ];
then x = x1 by ZFMISC_1:27;
hence P[ x1,y1,z ] by A15,A16,ZFMISC_1:27;
end;
hence thesis by A10,A14;
end;

thus thesis by A11;
end;
