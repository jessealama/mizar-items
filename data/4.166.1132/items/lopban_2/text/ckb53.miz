environ
vocabularies NUMBERS,RLVECT_1,LOPBAN_1,RELAT_1,REAL_1,FUNCT_1,ARYTM_3,NORMSP_1,XXREAL_2,XXREAL_0,PRE_TOPC,CARD_1,XREAL_0,ORDINAL1,ORDINAL2,SUBSET_1,RSSPACE,BINOP_1,STRUCT_0,ALGSTR_0,XBOOLE_0,GROUP_1,SUPINF_2,MESFUNC1,FUNCSDOM,VECTSP_1,LATTICES,RSSPACE3,REWRITE1,NAT_1,SEQ_2,ZFMISC_1,PREPOWER,SEQ_1,COMPLEX1,SERIES_1,ARYTM_1,LOPBAN_2,NORMSP_0,METRIC_1,RELAT_2,SEQ_4;
notations XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,XXREAL_0,XXREAL_2,XCMPLX_0,XREAL_0,ORDINAL1,REAL_1,NAT_1,NUMBERS,COMPLEX1,SEQ_1,SEQ_4,SERIES_1,PREPOWER,STRUCT_0,ALGSTR_0,PRE_TOPC,PSCOMP_1,RLVECT_1,GROUP_1,VECTSP_1,NORMSP_0,NORMSP_1,FUNCSDOM,RSSPACE,RSSPACE3,LOPBAN_1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB19,CKB25,CKB29,CKB37,CKB39,CKB45,CKB47,CKB48,CKB49,CKB50;
definitions STRUCT_0,GROUP_1,VECTSP_1,LOPBAN_1,RLVECT_1,ALGSTR_0,FUNCSDOM,NORMSP_0,CKB4,CKB5,CKB6,CKB7,CKB9,CKB19,CKB25,CKB39,CKB47,CKB48,CKB49,CKB50;
theorems ABSVALUE,RLVECT_1,VECTSP_1,BINOP_1,FUNCSDOM,XCMPLX_0,SERIES_1,FUNCT_1,FUNCT_2,NORMSP_1,SEQ_4,RSSPACE,RSSPACE3,LOPBAN_1,PREPOWER,STRUCT_0,GROUP_1,XREAL_1,XXREAL_0,ALGSTR_0,XREAL_0,GRCAT_1,NORMSP_0,CKB1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB22,CKB23,CKB25,CKB28,CKB31,CKB35,CKB36,CKB39,CKB42,CKB43,CKB47,CKB48,CKB49,CKB50;
schemes BINOP_1,NAT_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCT_2,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,STRUCT_0,RLVECT_1,VECTSP_1,FUNCSDOM,RSSPACE3,LOPBAN_1,ALGSTR_0,VALUED_0,NORMSP_0,CKB20,CKB21,CKB24,CKB26,CKB27,CKB30,CKB32,CKB33,CKB34,CKB37,CKB38,CKB40,CKB41,CKB44,CKB46,CKB51,CKB52;
constructors PARTFUN1,XXREAL_0,REAL_1,NAT_1,INT_2,BINOP_2,PREPOWER,SERIES_1,FUNCSDOM,PSCOMP_1,RSSPACE3,LOPBAN_1,VECTSP_1,SEQ_1,XXREAL_2,SEQ_4,RELSET_1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB19,CKB25,CKB37,CKB39,CKB47,CKB48,CKB49,CKB50;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
registration
let X being non  trivial RealBanachSpace;
cluster ( R_Normed_Algebra_of_BoundedLinearOperators X ) ->  Banach_Algebra-like;
coherence
proof
set NRM = ( BoundedLinearOperatorsNorm (X,X) );
set UNIT = ( FuncUnit X );
set MULT = ( FuncMult X );
set ADD = ( Add_ (( BoundedLinearOperators (X,X) ),( R_VectorSpace_of_LinearOperators (X,X) )) );
set BS = ( R_NormSpace_of_BoundedLinearOperators (X,X) );
set BLOP = ( BoundedLinearOperators (X,X) );
set RBLOP = ( R_Normed_Algebra_of_BoundedLinearOperators X );
thus RBLOP is  Banach_Algebra-like_1
proof
let x being (Point of RBLOP);
let y being (Point of RBLOP);
reconsider x1 = x,y1 = y as (Element of BLOP);
A1: ( ( NRM . ( modetrans (x1,X,X) ) ) * ( NRM . ( modetrans (y1,X,X) ) ) ) = ( ( NRM . x1 ) * ( NRM . ( modetrans (y1,X,X) ) ) ) by LOPBAN_1:def 11
.= ( ( NRM . x1 ) * ( NRM . y1 ) ) by LOPBAN_1:def 11
.= ( ||. x .|| * ( NRM . y ) )
.= ( ||. x .|| * ||. y .|| );
||. ( x * y ) .|| = ( NRM . ( MULT . (x,y) ) )
.= ( NRM . ( x1 * y1 ) ) by CKB7:def 1
.= ( NRM . ( ( modetrans (x1,X,X) ) * ( modetrans (y1,X,X) ) ) );
hence thesis by A1,CKB2:1;
end;

||. ( 1. RBLOP ) .|| = ( NRM . ( id (the carrier of X) ) )
.= 1 by CKB36:1;
hence RBLOP is  Banach_Algebra-like_2 by CKB48:def 1;
thus RBLOP is  Banach_Algebra-like_3
proof
let a being Real;
let x being (Element of RBLOP);
let y being (Element of RBLOP);
thus ( a * ( x * y ) ) = ( ( 1 * a ) * ( x * y ) )
.= ( ( 1 * x ) * ( a * y ) ) by CKB42:1
.= ( x * ( a * y ) ) by CKB42:1;
end;

thus RBLOP is  left_unital
proof
let x being (Element of RBLOP);
reconsider xx = x as (Element of BLOP);
( UNIT * xx ) = xx by CKB14:1;
hence thesis by CKB7:def 1;
end;

thus RBLOP is  left-distributive
proof
let x being (Element of RBLOP);
let y being (Element of RBLOP);
let z being (Element of RBLOP);
reconsider xx = x,yy = y,zz = z as (Element of BLOP);
thus ( ( y + z ) * x ) = ( ( yy + zz ) * xx ) by CKB7:def 1
.= ( ( yy * xx ) + ( zz * xx ) ) by CKB16:1
.= ( ADD . (( yy * xx ),( MULT . (zz,xx) )) ) by CKB7:def 1
.= ( ( y * x ) + ( z * x ) ) by CKB7:def 1;
end;

now
let seq being (sequence of RBLOP);
assume that
A2: seq is  Cauchy_sequence_by_Norm;
reconsider seq1 = seq as (sequence of BS);
now
let r being Real;
assume r > ( 0 );
then consider k being (Element of ( NAT )) such that A3: (for n,m being (Element of ( NAT )) holds ((n >= k & m >= k) implies ||. ( ( seq . n ) - ( seq . m ) ) .|| < r)) by A2,RSSPACE3:8;
now
let n being (Element of ( NAT ));
let m being (Element of ( NAT ));
assume that
A4: (n >= k & m >= k);
||. ( ( seq1 . n ) - ( seq1 . m ) ) .|| = ( NRM . ( ( seq1 . n ) + ( - ( seq1 . m ) ) ) )
.= ( NRM . ( ADD . (( seq1 . n ),( ( - 1 ) * ( seq1 . m ) )) ) ) by RLVECT_1:16
.= ( NRM . ( ADD . (( seq . n ),( ( - 1 ) * ( seq . m ) )) ) )
.= ( NRM . ( ( seq . n ) + ( - ( seq . m ) ) ) ) by RLVECT_1:16
.= ||. ( ( seq . n ) - ( seq . m ) ) .||;
hence ||. ( ( seq1 . n ) - ( seq1 . m ) ) .|| < r by A3,A4;
end;
hence (ex k being (Element of ( NAT )) st (for n,m being (Element of ( NAT )) holds ((n >= k & m >= k) implies ||. ( ( seq1 . n ) - ( seq1 . m ) ) .|| < r)));
end;
then seq1 is  Cauchy_sequence_by_Norm by RSSPACE3:8;
then seq1 is  convergent by LOPBAN_1:def 15;
then consider g1 being (Point of BS) such that A5: (for r being Real holds (( 0 ) < r implies (ex m being (Element of ( NAT )) st (for n being (Element of ( NAT )) holds (m <= n implies ||. ( ( seq1 . n ) - g1 ) .|| < r))))) by NORMSP_1:def 6;
reconsider g = g1 as (Point of RBLOP);
now
let r being Real;
assume ( 0 ) < r;
then consider m being (Element of ( NAT )) such that A6: (for n being (Element of ( NAT )) holds (m <= n implies ||. ( ( seq1 . n ) - g1 ) .|| < r)) by A5;
now
let n being (Element of ( NAT ));
assume that
A7: m <= n;
||. ( ( seq1 . n ) - g1 ) .|| = ( NRM . ( ( seq1 . n ) + ( - g1 ) ) )
.= ( NRM . ( ADD . (( seq1 . n ),( ( - 1 ) * g1 )) ) ) by RLVECT_1:16
.= ( NRM . ( ADD . (( seq . n ),( ( - 1 ) * g )) ) )
.= ( NRM . ( ( seq . n ) + ( - g ) ) ) by RLVECT_1:16
.= ||. ( ( seq . n ) - g ) .||;
hence ||. ( ( seq . n ) - g ) .|| < r by A6,A7;
end;
hence (ex m being (Element of ( NAT )) st (for n being (Element of ( NAT )) holds (m <= n implies ||. ( ( seq . n ) - g ) .|| < r)));
end;
hence seq is  convergent by NORMSP_1:def 6;
end;
hence thesis by LOPBAN_1:def 15;
end;
end;
