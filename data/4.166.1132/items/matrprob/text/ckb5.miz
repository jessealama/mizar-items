environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,NAT_1,REAL_1,FINSEQ_1,RELAT_1,FUNCT_1,TARSKI,XREAL_0,ORDINAL1,FINSEQ_2,CARD_1,XXREAL_0,SEQ_1,ARYTM_3,CARD_3,FUNCOP_1,MATRIX_1,TREES_1,ZFMISC_1,INCSP_1,MATRIXC1,QC_LANG1,ORDINAL4,PRE_POLY,BINOP_2,FINSEQ_3,RVSUM_1,STRUCT_0,VECTSP_1,SUPINF_2,FVSUM_1,MATRIXR1,MATRPROB;
notations TARSKI,SUBSET_1,XBOOLE_0,XXREAL_0,XREAL_0,REAL_1,NAT_1,ORDINAL1,NUMBERS,RELAT_1,FUNCT_1,SEQ_1,ZFMISC_1,FUNCOP_1,BINOP_1,BINOP_2,FUNCT_2,RVSUM_1,FINSEQ_1,FINSEQ_2,FINSEQOP,NEWTON,STRUCT_0,MATRLIN,MATRIXR1,MATRIX_3,MATRIX_1,GROUP_1,FVSUM_1,RLVECT_1,VECTSP_1,CKB1,CKB2;
definitions TARSKI,FINSEQ_2,RVSUM_1;
theorems FUNCT_1,SEQ_1,NAT_1,TARSKI,ZFMISC_1,MATRIX_3,MATRIX_2,XREAL_1,GOBOARD1,BINOP_2,FVSUM_1,VECTSP_1,RLVECT_1,MATRLIN,XBOOLE_0,FINSEQ_1,PROB_3,MATRIX_1,GOBRD13,FINSEQ_2,FUNCOP_1,RFINSEQ,FINSEQ_3,RVSUM_1,MATRIXR1,ORDINAL1,XREAL_0,MATRIXC1,XXREAL_0,STRUCT_0,RELAT_1,PRE_POLY,CARD_1,CKB3,CKB4;
schemes CLASSES1,FINSEQ_2,PARTFUN1,NAT_1,MATRIX_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,NAT_1,MEMBERED,FINSEQ_1,FINSEQ_2,STRUCT_0,VECTSP_1,MATRIX_1,MATRLIN,VALUED_0,CARD_1;
constructors XXREAL_0,REAL_1,NAT_1,BINOP_2,NEWTON,FVSUM_1,MATRIX_3,MATRLIN,MATRIXR1,SEQ_1,BINOP_1,RVSUM_1,RELSET_1,CKB1,CKB2;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve k for (Element of ( NAT ));
reserve n for Nat;
reserve m for Nat;
reserve e for (FinSequence of ( REAL ));
theorem
Th3: ((for i being Nat holds (i in ( dom e ) implies ( 0 ) <= ( e . i ))) implies (for f being Real_Sequence holds ((for n being Nat holds ((( 0 ) <> n & n < ( len e )) implies ( f . ( n + 1 ) ) = ( ( f . n ) + ( e . ( n + 1 ) ) ))) implies (for n,m being Nat holds (((n in ( dom e ) & m in ( dom e )) & n <= m) implies ( f . n ) <= ( f . m ))))))
proof
assume A1: (for i being Nat holds (i in ( dom e ) implies ( 0 ) <= ( e . i )));
let f being Real_Sequence;
assume that
A2: (for n being Nat holds ((( 0 ) <> n & n < ( len e )) implies ( f . ( n + 1 ) ) = ( ( f . n ) + ( e . ( n + 1 ) ) )));
A3: (for n holds ((n <> ( 0 ) & n < ( len e )) implies ( f . n ) <= ( f . ( n + 1 ) )))
proof
let n;
assume that
A4: n <> ( 0 )
and
A5: n < ( len e );
(( n + 1 ) >= 1 & ( n + 1 ) <= ( len e )) by A5,NAT_1:13,NAT_1:14;
then ( n + 1 ) in ( dom e ) by FINSEQ_3:25;
then ( ( f . n ) + ( e . ( n + 1 ) ) ) >= ( f . n ) by A1,XREAL_1:31;
hence thesis by A2,A4,A5;
end;
(for n being Nat holds (n in ( dom e ) implies (for m holds ((m in ( dom e ) & n <= m) implies ( f . n ) <= ( f . m )))))
proof
let n being Nat;
assume n in ( dom e );
then A6: n >= 1 by FINSEQ_3:25;
defpred p[ Nat ]
 means
(($1 in ( dom e ) & n <= $1) implies ( f . $1 ) >= ( f . n ));
A7:now
let k;
assume that
A8: p[ k ];
now
assume that
A9: ( k + 1 ) in ( dom e )
and
A10: n <= ( k + 1 );
A11: ( k + 1 ) <= ( len e ) by A9,FINSEQ_3:25;
per cases  by A10,A11,NAT_1:8,NAT_1:13;
suppose (( k + 1 ) = n & k < ( len e ));

hence ( f . ( k + 1 ) ) >= ( f . n );
end;
suppose A12: (k >= n & k < ( len e ));

then (k >= 1 & ( f . ( k + 1 ) ) >= ( f . k )) by A3,A6,NAT_1:14;
hence ( f . ( k + 1 ) ) >= ( f . n ) by A8,A12,FINSEQ_3:25,XXREAL_0:2;
end;
end;
hence p[ ( k + 1 ) ];
end;
A13: p[ ( 0 ) ];
(for n being (Element of ( NAT )) holds p[ n ]) from NAT_1:sch 1(A13,A7);
hence thesis;
end;
hence thesis;
end;
