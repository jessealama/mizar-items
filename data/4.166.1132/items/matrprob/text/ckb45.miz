environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,NAT_1,REAL_1,FINSEQ_1,RELAT_1,FUNCT_1,TARSKI,XREAL_0,ORDINAL1,FINSEQ_2,CARD_1,XXREAL_0,SEQ_1,ARYTM_3,CARD_3,FUNCOP_1,MATRIX_1,TREES_1,ZFMISC_1,INCSP_1,MATRIXC1,QC_LANG1,ORDINAL4,PRE_POLY,BINOP_2,FINSEQ_3,RVSUM_1,STRUCT_0,VECTSP_1,SUPINF_2,FVSUM_1,MATRIXR1,MATRPROB;
notations TARSKI,SUBSET_1,XBOOLE_0,XXREAL_0,XREAL_0,REAL_1,NAT_1,ORDINAL1,NUMBERS,RELAT_1,FUNCT_1,SEQ_1,ZFMISC_1,FUNCOP_1,BINOP_1,BINOP_2,FUNCT_2,RVSUM_1,FINSEQ_1,FINSEQ_2,FINSEQOP,NEWTON,STRUCT_0,MATRLIN,MATRIXR1,MATRIX_3,MATRIX_1,GROUP_1,FVSUM_1,RLVECT_1,VECTSP_1,CKB1,CKB2,CKB25,CKB26,CKB28,CKB31;
definitions TARSKI,FINSEQ_2,RVSUM_1,CKB25,CKB28,CKB31;
theorems FUNCT_1,SEQ_1,NAT_1,TARSKI,ZFMISC_1,MATRIX_3,MATRIX_2,XREAL_1,GOBOARD1,BINOP_2,FVSUM_1,VECTSP_1,RLVECT_1,MATRLIN,XBOOLE_0,FINSEQ_1,PROB_3,MATRIX_1,GOBRD13,FINSEQ_2,FUNCOP_1,RFINSEQ,FINSEQ_3,RVSUM_1,MATRIXR1,ORDINAL1,XREAL_0,MATRIXC1,XXREAL_0,STRUCT_0,RELAT_1,PRE_POLY,CARD_1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44;
schemes CLASSES1,FINSEQ_2,PARTFUN1,NAT_1,MATRIX_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,NAT_1,MEMBERED,FINSEQ_1,FINSEQ_2,STRUCT_0,VECTSP_1,MATRIX_1,MATRLIN,VALUED_0,CARD_1;
constructors XXREAL_0,REAL_1,NAT_1,BINOP_2,NEWTON,FVSUM_1,MATRIX_3,MATRLIN,MATRIXR1,SEQ_1,BINOP_1,RVSUM_1,RELSET_1,CKB1,CKB2,CKB25,CKB28,CKB31;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve j for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve n for Nat;
reserve e for (FinSequence of ( REAL ));
theorem
Th36: (for e being (FinSequence of ( REAL )) holds (for f being (FinSequence of ( F_Real )) holds (e = f implies ( Sum e ) = ( Sum f ))))
proof
let e being (FinSequence of ( REAL ));
let f being (FinSequence of ( F_Real ));
assume that
A1: e = f;
consider e1 being (Function of ( NAT ),( REAL )) such that A2: ( e1 . ( 0 ) ) = ( 0 ) and A3: (for i being Nat holds (i < ( len e ) implies ( e1 . ( i + 1 ) ) = ( ( e1 . i ) + ( e . ( i + 1 ) ) ))) and A4: ( Sum e ) = ( e1 . ( len e ) ) by CKB9:1;
consider f1 being (Function of ( NAT ),(the carrier of ( F_Real ))) such that A5: ( Sum f ) = ( f1 . ( len f ) ) and A6: ( f1 . ( 0 ) ) = ( 0. ( F_Real ) ) and A7: (for j holds (for v being (Element of ( F_Real )) holds ((j < ( len f ) & v = ( f . ( j + 1 ) )) implies ( f1 . ( j + 1 ) ) = ( ( f1 . j ) + v )))) by RLVECT_1:def 12;
(for n holds (n <= ( len e ) implies ( e1 . n ) = ( f1 . n )))
proof
defpred p[ Nat ]
 means
($1 <= ( len e ) implies ( e1 . $1 ) = ( f1 . $1 ));
let n;
A8:now
let k being Nat;
assume that
A9: p[ k ];
now
reconsider k9 = k as (Element of ( NAT )) by ORDINAL1:def 12;
reconsider a = ( e . ( k + 1 ) ) as (Element of ( F_Real )) by VECTSP_1:def 5;
assume ( k + 1 ) <= ( len e );
then A10: k < ( len e ) by NAT_1:13;
then ( e1 . ( k + 1 ) ) = ( ( f1 . k9 ) + a ) by A3,A9
.= ( f1 . ( k + 1 ) ) by A1,A7,A10;
hence ( e1 . ( k + 1 ) ) = ( f1 . ( k + 1 ) );
end;
hence p[ ( k + 1 ) ];
end;
A11: p[ ( 0 ) ] by A2,A6,STRUCT_0:def 6,VECTSP_1:def 5;
(for n being Nat holds p[ n ]) from NAT_1:sch 2(A11,A8);
hence thesis;
end;
hence thesis by A1,A4,A5;
end;
