environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,NAT_1,REAL_1,FINSEQ_1,RELAT_1,FUNCT_1,TARSKI,XREAL_0,ORDINAL1,FINSEQ_2,CARD_1,XXREAL_0,SEQ_1,ARYTM_3,CARD_3,FUNCOP_1,MATRIX_1,TREES_1,ZFMISC_1,INCSP_1,MATRIXC1,QC_LANG1,ORDINAL4,PRE_POLY,BINOP_2,FINSEQ_3,RVSUM_1,STRUCT_0,VECTSP_1,SUPINF_2,FVSUM_1,MATRIXR1,MATRPROB;
notations TARSKI,SUBSET_1,XBOOLE_0,XXREAL_0,XREAL_0,REAL_1,NAT_1,ORDINAL1,NUMBERS,RELAT_1,FUNCT_1,SEQ_1,ZFMISC_1,FUNCOP_1,BINOP_1,BINOP_2,FUNCT_2,RVSUM_1,FINSEQ_1,FINSEQ_2,FINSEQOP,NEWTON,STRUCT_0,MATRLIN,MATRIXR1,MATRIX_3,MATRIX_1,GROUP_1,FVSUM_1,RLVECT_1,VECTSP_1,CKB1,CKB2;
definitions TARSKI,FINSEQ_2,RVSUM_1;
theorems FUNCT_1,SEQ_1,NAT_1,TARSKI,ZFMISC_1,MATRIX_3,MATRIX_2,XREAL_1,GOBOARD1,BINOP_2,FVSUM_1,VECTSP_1,RLVECT_1,MATRLIN,XBOOLE_0,FINSEQ_1,PROB_3,MATRIX_1,GOBRD13,FINSEQ_2,FUNCOP_1,RFINSEQ,FINSEQ_3,RVSUM_1,MATRIXR1,ORDINAL1,XREAL_0,MATRIXC1,XXREAL_0,STRUCT_0,RELAT_1,PRE_POLY,CARD_1,CKB3,CKB4,CKB5,CKB6,CKB7;
schemes CLASSES1,FINSEQ_2,PARTFUN1,NAT_1,MATRIX_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,NAT_1,MEMBERED,FINSEQ_1,FINSEQ_2,STRUCT_0,VECTSP_1,MATRIX_1,MATRLIN,VALUED_0,CARD_1;
constructors XXREAL_0,REAL_1,NAT_1,BINOP_2,NEWTON,FVSUM_1,MATRIX_3,MATRLIN,MATRIXR1,SEQ_1,BINOP_1,RVSUM_1,RELSET_1,CKB1,CKB2;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for Nat;
theorem
Th6: (for r1,r2 being Real holds (for k being Nat holds (for seq1 being Real_Sequence holds (ex seq being Real_Sequence st (( seq . ( 0 ) ) = r1 & (for n holds (((n <> ( 0 ) & n <= k) implies ( seq . n ) = ( seq1 . n )) & (n > k implies ( seq . n ) = r2))))))))
proof
let r1 being Real,r2 being Real;
let k being Nat;
let seq1 being Real_Sequence;
(ex seq being Real_Sequence st (for n holds (((n = ( 0 ) implies ( seq . n ) = r1) & ((n <> ( 0 ) & n <= k) implies ( seq . n ) = ( seq1 . n ))) & ((n <> ( 0 ) & n > k) implies ( seq . n ) = r2))))
proof
defpred P[ set,set ]
 means
(ex n being (Element of ( NAT )) st (((n = $1 & (n = ( 0 ) implies $2 = r1)) & ((n <> ( 0 ) & n <= k) implies $2 = ( seq1 . n ))) & ((n <> ( 0 ) & n > k) implies $2 = r2)));
A1: (for x being set holds (x in ( NAT ) implies (ex y being set st P[ x,y ])))
proof
let x being set;
assume x in ( NAT );
then reconsider n = x as (Element of ( NAT ));
now
per cases ;
case n = ( 0 );
hence P[ x,r1 ];
end;
case (n <> ( 0 ) & n <= k);
hence P[ x,( seq1 . n ) ];
end;
case (n <> ( 0 ) & (not n <= k));
hence P[ x,r2 ];
end;
end;
hence thesis;
end;
consider f1 being Function such that A2: (( dom f1 ) = ( NAT ) & (for x being set holds (x in ( NAT ) implies P[ x,( f1 . x ) ]))) from CLASSES1:sch 1(A1);
now
let x being set;
assume x in ( NAT );
then (ex n being (Element of ( NAT )) st (((n = x & (n = ( 0 ) implies ( f1 . x ) = r1)) & ((n <> ( 0 ) & n <= k) implies ( f1 . x ) = ( seq1 . n ))) & ((n <> ( 0 ) & n > k) implies ( f1 . x ) = r2))) by A2;
hence ( f1 . x ) is  real;
end;
then reconsider f1 as Real_Sequence by A2,SEQ_1:1;
take seq = f1;
let n being Nat;
reconsider n as (Element of ( NAT )) by ORDINAL1:def 12;
(ex k1 being (Element of ( NAT )) st (((k1 = n & (k1 = ( 0 ) implies ( seq . n ) = r1)) & ((k1 <> ( 0 ) & k1 <= k) implies ( seq . n ) = ( seq1 . k1 ))) & ((k1 <> ( 0 ) & k1 > k) implies ( seq . n ) = r2))) by A2;
hence thesis;
end;
then consider seq being Real_Sequence such that A3: (for n holds (((n = ( 0 ) implies ( seq . n ) = r1) & ((n <> ( 0 ) & n <= k) implies ( seq . n ) = ( seq1 . n ))) & ((n <> ( 0 ) & n > k) implies ( seq . n ) = r2)));
take seq;
thus thesis by A3;
end;
