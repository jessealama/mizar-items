environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,NAT_1,REAL_1,FINSEQ_1,RELAT_1,FUNCT_1,TARSKI,XREAL_0,ORDINAL1,FINSEQ_2,CARD_1,XXREAL_0,SEQ_1,ARYTM_3,CARD_3,FUNCOP_1,MATRIX_1,TREES_1,ZFMISC_1,INCSP_1,MATRIXC1,QC_LANG1,ORDINAL4,PRE_POLY,BINOP_2,FINSEQ_3,RVSUM_1,STRUCT_0,VECTSP_1,SUPINF_2,FVSUM_1,MATRIXR1,MATRPROB;
notations TARSKI,SUBSET_1,XBOOLE_0,XXREAL_0,XREAL_0,REAL_1,NAT_1,ORDINAL1,NUMBERS,RELAT_1,FUNCT_1,SEQ_1,ZFMISC_1,FUNCOP_1,BINOP_1,BINOP_2,FUNCT_2,RVSUM_1,FINSEQ_1,FINSEQ_2,FINSEQOP,NEWTON,STRUCT_0,MATRLIN,MATRIXR1,MATRIX_3,MATRIX_1,GROUP_1,FVSUM_1,RLVECT_1,VECTSP_1,CKB1,CKB2;
definitions TARSKI,FINSEQ_2,RVSUM_1;
theorems FUNCT_1,SEQ_1,NAT_1,TARSKI,ZFMISC_1,MATRIX_3,MATRIX_2,XREAL_1,GOBOARD1,BINOP_2,FVSUM_1,VECTSP_1,RLVECT_1,MATRLIN,XBOOLE_0,FINSEQ_1,PROB_3,MATRIX_1,GOBRD13,FINSEQ_2,FUNCOP_1,RFINSEQ,FINSEQ_3,RVSUM_1,MATRIXR1,ORDINAL1,XREAL_0,MATRIXC1,XXREAL_0,STRUCT_0,RELAT_1,PRE_POLY,CARD_1,CKB3;
schemes CLASSES1,FINSEQ_2,PARTFUN1,NAT_1,MATRIX_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,NAT_1,MEMBERED,FINSEQ_1,FINSEQ_2,STRUCT_0,VECTSP_1,MATRIX_1,MATRLIN,VALUED_0,CARD_1;
constructors XXREAL_0,REAL_1,NAT_1,BINOP_2,NEWTON,FVSUM_1,MATRIX_3,MATRLIN,MATRIXR1,SEQ_1,BINOP_1,RVSUM_1,RELSET_1,CKB1,CKB2;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve D for non empty set;
reserve k for (Element of ( NAT ));
reserve n for Nat;
theorem
Th2: (for a,b being (Element of D) holds (ex g being (FinSequence of D) st (( len g ) = n & (for i being Nat holds (i in ( Seg n ) implies ((i in ( Seg k ) implies ( g . i ) = a) & ((not i in ( Seg k )) implies ( g . i ) = b)))))))
proof
let a being (Element of D),b being (Element of D);
defpred c[ set ]
 means
$1 in ( Seg k );
deffunc f(set) = a;
deffunc g(set) = b;
(ex f being Function st (( dom f ) = ( Seg n ) & (for x being set holds (x in ( Seg n ) implies ((c[ x ] implies ( f . x ) = f(x)) & ((not c[ x ]) implies ( f . x ) = g(x))))))) from PARTFUN1:sch 1;
then consider f being Function such that A1: ( dom f ) = ( Seg n ) and A2: (for x being set holds (x in ( Seg n ) implies ((x in ( Seg k ) implies ( f . x ) = a) & ((not x in ( Seg k )) implies ( f . x ) = b))));
reconsider p = f as FinSequence by A1,FINSEQ_1:def 2;
( rng p ) c= D
proof
let y being set;
assume y in ( rng p );
then consider j being set such that A3: j in ( dom p ) and A4: y = ( p . j ) by FUNCT_1:def 3;
A5: ((not j in ( Seg k )) implies ( p . j ) = b) by A1,A2,A3;
(j in ( Seg k ) implies ( p . j ) = a) by A1,A2,A3;
hence thesis by A4,A5;
end;
then reconsider p as (FinSequence of D) by FINSEQ_1:def 4;
take p;
n in ( NAT ) by ORDINAL1:def 12;
hence thesis by A1,A2,FINSEQ_1:def 3;
end;
