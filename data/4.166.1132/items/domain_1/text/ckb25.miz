environ
vocabularies XBOOLE_0,SUBSET_1,ZFMISC_1,MCART_1,TARSKI,ORDINAL1,FUNCT_1,PARTFUN1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,ORDINAL1,FUNCT_1,PARTFUN1,MCART_1,CKB3,CKB4,CKB5,CKB9,CKB17;
definitions TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1;
theorems TARSKI,SUBSET_1,MCART_1,ZFMISC_1,XBOOLE_0,CKB1,CKB2,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20,CKB21,CKB22;
schemes CKB23,CKB24;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1;
constructors TARSKI,ENUMSET1,MCART_1,ORDINAL1,PARTFUN1,CKB3,CKB4,CKB5,CKB9,CKB17;
requirements SUBSET,BOOLE;
begin
reserve a for set;
reserve X1 for non empty set;
reserve X2 for non empty set;
reserve X3 for non empty set;
reserve x1 for (Element of X1);
reserve x2 for (Element of X2);
reserve x3 for (Element of X3);
scheme Fraenkel3 { P[set,set,set] } : (for X1 holds (for X2 holds (for X3 holds { [ x1,x2,x3 ]: P[ x1,x2,x3 ] } is (Subset of [: X1,X2,X3 :]))))
proof
let X1;
let X2;
let X3;
{ [ x1,x2,x3 ]: P[ x1,x2,x3 ] } c= [: X1,X2,X3 :]
proof
let a;
assume a in { [ x1,x2,x3 ]: P[ x1,x2,x3 ] };
then (ex x1 st (ex x2 st (ex x3 st (a = [ x1,x2,x3 ] & P[ x1,x2,x3 ]))));
hence thesis;
end;
hence thesis;
end;
