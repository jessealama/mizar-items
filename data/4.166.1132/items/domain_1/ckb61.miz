environ
vocabularies XBOOLE_0,SUBSET_1,ZFMISC_1,MCART_1,TARSKI,ORDINAL1,FUNCT_1,PARTFUN1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,ORDINAL1,FUNCT_1,PARTFUN1,MCART_1,CKB3,CKB4,CKB5,CKB9,CKB17,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB57,CKB58,CKB59,CKB60;
definitions TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1;
theorems TARSKI,SUBSET_1,MCART_1,ZFMISC_1,XBOOLE_0,CKB1,CKB2,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20,CKB21,CKB22,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46;
schemes CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB55,CKB56;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1;
constructors TARSKI,ENUMSET1,MCART_1,ORDINAL1,PARTFUN1,CKB3,CKB4,CKB5,CKB9,CKB17,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB57,CKB58,CKB59,CKB60;
requirements SUBSET,BOOLE;
begin
scheme AndScheme { A() -> non empty set,P,Q[set] } : { a where a is (Element of A()): (P[ a ] & Q[ a ]) } = ( { a1 where a1 is (Element of A()): P[ a1 ] } /\ { a2 where a2 is (Element of A()): Q[ a2 ] } )
proof
set A = { a where a is (Element of A()): (P[ a ] & Q[ a ]) };
set A1 = { a1 where a1 is (Element of A()): P[ a1 ] };
set A2 = { a2 where a2 is (Element of A()): Q[ a2 ] };
thus A c= ( A1 /\ A2 )
proof
let x being set;
assume x in A;
then consider a being (Element of A()) such that A1: x = a and A2: (P[ a ] & Q[ a ]);
(a in A1 & a in A2) by A2;
hence thesis by A1,XBOOLE_0:def 4;
end;

let x being set;
assume A3: x in ( A1 /\ A2 );
then x in A2 by XBOOLE_0:def 4;
then A4: (ex a being (Element of A()) st (x = a & Q[ a ]));
x in A1 by A3,XBOOLE_0:def 4;
then (ex a being (Element of A()) st (x = a & P[ a ]));
hence thesis by A4;
end;
