environ
vocabularies INT_1,VECTSP_1,FUNCT_1,ARYTM_3,ZFMISC_1,RELAT_1,RLVECT_1,FUNCOP_1,ARYTM_1,BINOP_1,FUNCSDOM,REALSET1,LATTICES,GROUP_1,ORDINAL2,IDEAL_1,FINSEQ_1,SUBSET_1,VECTSP_2,FUNCT_3,NUMBERS,GROUP_4,STRUCT_0,RLSUB_1,XXREAL_2,ALGSTR_0,XCMPLX_0,ORDINAL1,REALSET2,NAT_1,REAL_1,INT_2,XXREAL_0,TARSKI,XREAL_0,XBOOLE_0,NEWTON,CARD_FIL,RMOD_2,CARD_1,SUPINF_2,MESFUNC1,PARTFUN1,COMPLEX1,MEMBERED,MSSUBFAM,FVALUAT1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,ORDINAL1,DOMAIN_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,XXREAL_0,XREAL_0,XXREAL_2,XXREAL_3,XCMPLX_0,REAL_1,INT_1,MEMBERED,SUPINF_2,EXTREAL1,INT_2,NAT_1,MESFUNC1,FINSEQ_1,FINSEQ_4,REALSET1,BINOP_1,STRUCT_0,ALGSTR_0,RLVECT_1,GRCAT_1,GROUP_1,YELLOW_9,VECTSP_1,VECTSP_2,FUNCSDOM,REALSET2,RMOD_2,IDEAL_1,RING_1,CKB10,CKB19,CKB22,CKB23,CKB28,CKB32,CKB33,CKB38,CKB39,CKB63,CKB64,CKB75;
definitions TARSKI,XBOOLE_0,SUBSET_1,FUNCT_2,BINOP_1,XXREAL_0,XREAL_0,XCMPLX_0,XXREAL_2,XXREAL_3,REALSET1,RING_1,MESFUNC1,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,GRCAT_1,VECTSP_1,VECTSP_2,IDEAL_1,RMOD_2,CKB10,CKB22,CKB23,CKB28,CKB32,CKB33,CKB38,CKB39,CKB63,CKB64,CKB75;
theorems VECTSP_1,FUNCOP_1,TARSKI,FUNCT_1,INT_1,RLVECT_1,XREAL_0,VECTSP_2,XBOOLE_0,FUNCT_2,ABSVALUE,NAT_1,ZFMISC_1,REALSET1,FINSEQ_1,FINSEQ_3,XBOOLE_1,TOPREALA,FINSEQ_5,GROUP_1,IDEAL_1,RMOD_2,YELLOW_9,RELAT_1,RING_1,XXREAL_0,ORDINAL1,XXREAL_3,PARTFUN1,ALGSTR_0,XXREAL_2,SUBSET_1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB20,CKB21,CKB22,CKB23,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79;
schemes NAT_1,INT_1,RECDEF_1,FUNCT_2;
registrations RELSET_1,VECTSP_1,INT_1,XREAL_0,ALGSTR_1,VECTSP_2,STRUCT_0,NAT_1,SUBSET_1,WAYBEL_2,XBOOLE_0,RMOD_2,XCMPLX_0,IDEAL_1,RING_1,XXREAL_0,NUMBERS,MEMBERED,ORDINAL1,ALGSTR_0,XXREAL_3,REALSET2,FINSEQ_1,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB24,CKB25,CKB26,CKB31;
constructors REAL_1,FINSEQ_4,SUPINF_2,EXTREAL1,MESFUNC1,RMOD_2,YELLOW_9,RING_1,BINOM,FUNCOP_1,REALSET2,RELSET_1,GRCAT_1,CKB10,CKB22,CKB23,CKB28,CKB32,CKB38,CKB39,CKB63,CKB64,CKB75;
requirements NUMERALS,ARITHM,REAL,BOOLE,SUBSET;
begin
reserve x for ExtInt;
reserve y for ExtInt;
reserve K for  Field-like non  degenerated  associative  add-associative  right_zeroed  right_complementable  distributive  Abelian non  empty doubleLoopStr;
reserve v for (Valuation of K);
definition
let K;
let v;
assume that
A1: K is  having_valuation;
func ValuatRing v ->  strict  commutative non  degenerated Ring means 
:Def14: (((((the carrier of it) = ( NonNegElements v ) & (the addF of it) = ( (the addF of K) | [: ( NonNegElements v ),( NonNegElements v ) :] )) & (the multF of it) = ( (the multF of K) | [: ( NonNegElements v ),( NonNegElements v ) :] )) & (the ZeroF of it) = ( 0. K )) & (the OneF of it) = ( 1. K ));
existence
proof
set c = ( NonNegElements v );
set a = ( (the addF of K) | [: c,c :] );
set m = ( (the multF of K) | [: c,c :] );
set j = ( 1. K );
set z = ( 0. K );
A2: c c= (the carrier of K) by CKB77:1;
now
let x being set;
assume that
A3: x in [: c,c :];
set q = ( (the addF of K) . x );
consider x1,x2 being set such that A4: x1 in c and A5: x2 in c and A6: x = [ x1,x2 ] by A3,ZFMISC_1:def 2;
consider y1 being (Element of K) such that A7: y1 = x1 and A8: ( 0 ) <= ( v . y1 ) by A4;
consider y2 being (Element of K) such that A9: y2 = x2 and A10: ( 0 ) <= ( v . y2 ) by A5;
A11: ( min (( v . y1 ),( v . y2 )) ) <= ( v . ( y1 + y2 ) ) by A1,CKB50:1;
( 0 ) <= ( min (( v . y1 ),( v . y2 )) ) by A8,A10,XXREAL_0:20;
hence q in c by A6,A7,A11,A9;
end;
then reconsider ca = c as (Preserv of (the addF of K)) by A2,REALSET1:def 1;
( (the addF of K) || ca ) is (BinOp of c);
then reconsider a as (BinOp of c);
now
let x being set;
assume that
A12: x in [: c,c :];
set q = ( (the multF of K) . x );
consider x1,x2 being set such that A13: x1 in c and A14: x2 in c and A15: x = [ x1,x2 ] by A12,ZFMISC_1:def 2;
consider y1 being (Element of K) such that A16: y1 = x1 and A17: ( 0 ) <= ( v . y1 ) by A13;
consider y2 being (Element of K) such that A18: y2 = x2 and A19: ( 0 ) <= ( v . y2 ) by A14;
( ( 0 ) + ( 0 ) ) <= ( ( v . y1 ) + ( v . y2 ) ) by A17,A19;
then ( 0 ) <= ( v . ( y1 * y2 ) ) by A1,CKB39:def 1;
hence q in c by A15,A16,A18;
end;
then reconsider cm = c as (Preserv of (the multF of K)) by A2,REALSET1:def 1;
( (the multF of K) || cm ) is (BinOp of c);
then reconsider m as (BinOp of c);
A20: ( v . z ) = ( +infty ) by A1,CKB39:def 1;
reconsider j,z as (Element of c) by A1,CKB78:1,CKB79:1;
set R = doubleLoopStr (# c,a,m,j,z #);
z in c by A20;
then reconsider R as non  empty doubleLoopStr;
A21:now
let x being (Element of R);
let y being (Element of R);
let x1 being (Element of K);
let y1 being (Element of K);
assume that
A22: (x = x1 & y = y1);
[ x,y ] in [: c,c :];
hence ( x + y ) = ( x1 + y1 ) by A22,FUNCT_1:49;
end;
A23:now
let x being (Element of R);
let y being (Element of R);
let x1 being (Element of K);
let y1 being (Element of K);
assume that
A24: (x = x1 & y = y1);
[ x,y ] in [: c,c :];
hence ( x * y ) = ( x1 * y1 ) by A24,FUNCT_1:49;
end;
A25:now
let x being (Element of R);
let e being (Element of R);
assume A26: e = j;
(x in c & e in c);
then reconsider x1 = x,e1 = e as (Element of K) by A2;
thus ( x * e ) = ( x1 * e1 ) by A23
.= x by A26,VECTSP_1:def 4;
thus ( e * x ) = ( e1 * x1 ) by A23
.= x by A26,VECTSP_1:def 4;
end;
R is  well-unital
proof
let x being (Element of R);
thus (( x * ( 1. R ) ) = x & ( ( 1. R ) * x ) = x) by A25;
end;
then reconsider R as  well-unital non  empty doubleLoopStr;
R is  Abelian  add-associative  right_zeroed  right_complementable  commutative  associative  distributive non  degenerated
proof
hereby
let x being (Element of R);
let y being (Element of R);
(x in c & y in c);
then reconsider x1 = x,y1 = y as (Element of K) by A2;
thus ( x + y ) = ( x1 + y1 ) by A21
.= ( y + x ) by A21;
end;
hereby
let x being (Element of R);
let y being (Element of R);
let z being (Element of R);
((x in c & y in c) & z in c);
then reconsider x1 = x,y1 = y,z1 = z as (Element of K) by A2;
A27: ( y + z ) = ( y1 + z1 ) by A21;
( x + y ) = ( x1 + y1 ) by A21;
hence ( ( x + y ) + z ) = ( ( x1 + y1 ) + z1 ) by A21
.= ( x1 + ( y1 + z1 ) ) by RLVECT_1:def 3
.= ( x + ( y + z ) ) by A27,A21;
end;
hereby
let x being (Element of R);
x in c;
then reconsider x1 = x as (Element of K) by A2;
thus ( x + ( 0. R ) ) = ( x1 + ( 0. K ) ) by A21
.= x by RLVECT_1:def 4;
end;
thus R is  right_complementable
proof
let x being (Element of R);
x in c;
then reconsider x1 = x as (Element of K) by A2;
consider w1 being (Element of K) such that A28: ( x1 + w1 ) = ( 0. K ) by ALGSTR_0:def 11;
A29: ( v . ( x1 + w1 ) ) = ( +infty ) by A1,A28,CKB39:def 1;
per cases ;
suppose ( v . w1 ) < ( v . x1 );

then ( v . w1 ) = ( v . ( w1 + x1 ) ) by A1,CKB51:1;
then reconsider w = w1 as (Element of R) by A29,CKB76:1;
take w;
thus ( x + w ) = ( 0. R ) by A28,A21;
end;
suppose A30: ( v . x1 ) <= ( v . w1 );

( 0 ) <= ( v . x1 ) by CKB76:1;
then reconsider w = w1 as (Element of R) by A30,CKB76:1;
take w;
thus ( x + w ) = ( 0. R ) by A28,A21;
end;
end;

hereby
let x being (Element of R);
let y being (Element of R);
(x in c & y in c);
then reconsider x1 = x,y1 = y as (Element of K) by A2;
thus ( x * y ) = ( x1 * y1 ) by A23
.= ( y * x ) by A23;
end;
hereby
let x being (Element of R);
let y being (Element of R);
let z being (Element of R);
((x in c & y in c) & z in c);
then reconsider x1 = x,y1 = y,z1 = z as (Element of K) by A2;
A31: ( y * z ) = ( y1 * z1 ) by A23;
( x * y ) = ( x1 * y1 ) by A23;
hence ( ( x * y ) * z ) = ( ( x1 * y1 ) * z1 ) by A23
.= ( x1 * ( y1 * z1 ) ) by GROUP_1:def 3
.= ( x * ( y * z ) ) by A31,A23;
end;
hereby
let x being (Element of R);
let y being (Element of R);
let z being (Element of R);
((x in c & y in c) & z in c);
then reconsider x1 = x,y1 = y,z1 = z as (Element of K) by A2;
A32: ( y + z ) = ( y1 + z1 ) by A21;
A33: ( x * y ) = ( x1 * y1 ) by A23;
A34: ( x * z ) = ( x1 * z1 ) by A23;
A35: ( y * x ) = ( y1 * x1 ) by A23;
A36: ( z * x ) = ( z1 * x1 ) by A23;
thus ( x * ( y + z ) ) = ( x1 * ( y1 + z1 ) ) by A32,A23
.= ( ( x1 * y1 ) + ( x1 * z1 ) ) by VECTSP_1:def 2
.= ( ( x * y ) + ( x * z ) ) by A21,A33,A34;
thus ( ( y + z ) * x ) = ( ( y1 + z1 ) * x1 ) by A32,A23
.= ( ( y1 * x1 ) + ( z1 * x1 ) ) by VECTSP_1:def 2
.= ( ( y * x ) + ( z * x ) ) by A21,A35,A36;
end;
thus ( 0. R ) <> ( 1. R );
end;
hence thesis;
end;
uniqueness;
end;
