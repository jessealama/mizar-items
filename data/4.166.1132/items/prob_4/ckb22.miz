environ
vocabularies NUMBERS,SUBSET_1,PROB_1,XBOOLE_0,TARSKI,FUNCT_1,RELAT_1,NAT_1,PROB_2,FUNCOP_1,FUNCT_7,CARD_1,XXREAL_0,ARYTM_3,ZFMISC_1,CARD_3,EQREL_1,RPR_1,ARYTM_1,SERIES_1,SEQ_2,ORDINAL2,PROB_3,SUPINF_2,REAL_1,XXREAL_2,SUPINF_1,ORDINAL1,MEASURE1,MEASURE6,VALUED_0,SETFAM_1,MEASURE3,PROB_4,SEQ_4;
notations TARSKI,XBOOLE_0,REAL_1,CARD_3,ORDINAL1,MEASURE3,SUPINF_2,XXREAL_0,XXREAL_2,NAT_1,SEQ_2,SETFAM_1,FUNCT_1,RELSET_1,SUBSET_1,NUMBERS,SUPINF_1,PARTFUN1,FUNCT_2,FUNCT_7,PROB_1,PROB_3,MEASURE1,FUNCOP_1,SEQM_3,SERIES_1,RINFSUP1,ZFMISC_1,MEASURE6,PROB_2,CKB2,CKB19,CKB21;
definitions TARSKI,XBOOLE_0,SERIES_1,SUBSET_1,PROB_3,CKB19,CKB21;
theorems FUNCT_1,FUNCT_2,SEQ_1,SEQ_2,XREAL_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,PROB_2,RINFSUP1,SUPINF_2,SEQM_3,CARD_3,SETLIM_1,PROB_1,SERIES_1,PROB_3,MEASURE1,MEASURE3,MEASURE6,ZFMISC_1,XXREAL_0,ORDINAL1,NUMBERS,XXREAL_2,FUNCT_7,DYNKIN,VALUED_0,FUNCOP_1,RELAT_1,CKB1,CKB3,CKB4,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
schemes FUNCT_2,NAT_1,XBOOLE_0,CKB5;
registrations SUBSET_1,RELAT_1,ORDINAL1,FUNCT_2,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,MEASURE1,MEASURE3,VALUED_0,SEQ_2,SEQ_4,FUNCT_7,PROB_1,RELSET_1,PROB_3,CKB6,CKB7;
constructors REAL_1,SERIES_1,MEASURE3,MEASURE6,PARTFUN3,KURATO_0,RINFSUP1,PROB_3,SEQ_1,SUPINF_1,FUNCT_7,RELSET_1,CKB2,CKB19,CKB21;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve X for set;
reserve A1 for (SetSequence of X);
theorem
Lm2: (A1 is  non-descending implies (for n holds ( ( Partial_Union A1 ) . n ) = ( A1 . n )))
proof
defpred P[ (Element of ( NAT )) ]
 means
( ( Partial_Union A1 ) . $1 ) = ( A1 . $1 );
assume A1: A1 is  non-descending;
A2: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume that
A3: P[ k ];
A4: ( A1 . k ) c= ( A1 . ( k + 1 ) ) by A1,PROB_2:7;
thus ( ( Partial_Union A1 ) . ( k + 1 ) ) = ( ( A1 . k ) \/ ( A1 . ( k + 1 ) ) ) by A3,PROB_3:def 2
.= ( A1 . ( k + 1 ) ) by A4,XBOOLE_1:12;
end;
A5: P[ ( 0 ) ] by PROB_3:def 2;
thus (for k holds P[ k ]) from NAT_1:sch 1(A5,A2);
end;
