environ
vocabularies NUMBERS,SUBSET_1,PROB_1,XBOOLE_0,TARSKI,FUNCT_1,RELAT_1,NAT_1,PROB_2,FUNCOP_1,FUNCT_7,CARD_1,XXREAL_0,ARYTM_3,ZFMISC_1,CARD_3,EQREL_1,RPR_1,ARYTM_1,SERIES_1,SEQ_2,ORDINAL2,PROB_3,SUPINF_2,REAL_1,XXREAL_2,SUPINF_1,ORDINAL1,MEASURE1,MEASURE6,VALUED_0,SETFAM_1,MEASURE3,PROB_4,SEQ_4;
notations TARSKI,XBOOLE_0,REAL_1,CARD_3,ORDINAL1,MEASURE3,SUPINF_2,XXREAL_0,XXREAL_2,NAT_1,SEQ_2,SETFAM_1,FUNCT_1,RELSET_1,SUBSET_1,NUMBERS,SUPINF_1,PARTFUN1,FUNCT_2,FUNCT_7,PROB_1,PROB_3,MEASURE1,FUNCOP_1,SEQM_3,SERIES_1,RINFSUP1,ZFMISC_1,MEASURE6,PROB_2,CKB2,CKB19,CKB21,CKB30,CKB32,CKB36,CKB39,CKB41,CKB49;
definitions TARSKI,XBOOLE_0,SERIES_1,SUBSET_1,PROB_3,CKB19,CKB21,CKB30,CKB32,CKB36,CKB39,CKB41;
theorems FUNCT_1,FUNCT_2,SEQ_1,SEQ_2,XREAL_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,PROB_2,RINFSUP1,SUPINF_2,SEQM_3,CARD_3,SETLIM_1,PROB_1,SERIES_1,PROB_3,MEASURE1,MEASURE3,MEASURE6,ZFMISC_1,XXREAL_0,ORDINAL1,NUMBERS,XXREAL_2,FUNCT_7,DYNKIN,VALUED_0,FUNCOP_1,RELAT_1,CKB1,CKB3,CKB4,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB50,CKB51;
schemes FUNCT_2,NAT_1,XBOOLE_0,CKB5;
registrations SUBSET_1,RELAT_1,ORDINAL1,FUNCT_2,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,MEASURE1,MEASURE3,VALUED_0,SEQ_2,SEQ_4,FUNCT_7,PROB_1,RELSET_1,PROB_3,CKB6,CKB7,CKB48;
constructors REAL_1,SERIES_1,MEASURE3,MEASURE6,PARTFUN3,KURATO_0,RINFSUP1,PROB_3,SEQ_1,SUPINF_1,FUNCT_7,RELSET_1,CKB2,CKB19,CKB21,CKB30,CKB32,CKB36,CKB39,CKB41,CKB49;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve Omega for non empty set;
reserve Sigma for (SigmaField of Omega);
reserve P for (Probability of Sigma);
definition
let Omega;
let Sigma;
let P;
func COM P -> (Probability of ( COM (Sigma,P) ))
means
:Def8: (for B being set holds (B in Sigma implies (for C being (thin of P) holds ( it . ( B \/ C ) ) = ( P . B ))));
existence
proof
reconsider C = ( {} ) as (thin of P) by CKB34:1;
defpred P[ set,set ]
 means
(for x,y being set holds (x in ( COM (Sigma,P) ) implies ((x = $1 & y = $2) implies (for B being set holds (B in Sigma implies (for C being (thin of P) holds (x = ( B \/ C ) implies y = ( P . B ))))))));
set B = ( {} );
A1: ( {} ) is (thin of P) by CKB34:1;
A2: (for x being set holds (x in ( COM (Sigma,P) ) implies (ex y being set st (y in ( REAL ) & P[ x,y ]))))
proof
let x being set;
assume x in ( COM (Sigma,P) );
then consider B being set such that A3: (B in Sigma & (ex C being (thin of P) st x = ( B \/ C ))) by CKB36:def 1;
take ( P . B );
thus thesis by A3,CKB35:1,FUNCT_2:5;
end;
consider comP being (Function of ( COM (Sigma,P) ),( REAL )) such that A4: (for x being set holds (x in ( COM (Sigma,P) ) implies P[ x,( comP . x ) ])) from FUNCT_2:sch 1(A2);
A5: (for B being set holds (B in Sigma implies (for C being (thin of P) holds ( comP . ( B \/ C ) ) = ( P . B ))))
proof
let B being set;
assume A6: B in Sigma;
let C being (thin of P);
( B \/ C ) in ( COM (Sigma,P) ) by A6,CKB36:def 1;
hence thesis by A4,A6;
end;
A7: (for BSeq being (SetSequence of ( COM (Sigma,P) )) holds (BSeq is  disjoint_valued implies ( Sum ( comP * BSeq ) ) = ( comP . ( Union BSeq ) )))
proof
let BSeq being (SetSequence of ( COM (Sigma,P) ));
assume that
A8: BSeq is  disjoint_valued;
reconsider F = BSeq as (Function of ( NAT ),( bool Omega ));
( rng F ) c= ( COM (Sigma,P) ) by RELAT_1:def 19;
then reconsider F as (Function of ( NAT ),( COM (Sigma,P) )) by FUNCT_2:6;
consider CSeq being (SetSequence of Sigma) such that A9: (for n holds ( CSeq . n ) in ( ProbPart ( F . n ) )) by CKB44:1;
consider B being set such that A10: B = ( union ( rng CSeq ) );
( Union CSeq ) in Sigma by PROB_1:17;
then reconsider B as (Element of Sigma) by A10,CARD_3:def 4;
consider DSeq being (SetSequence of Omega) such that A11: (for n holds ( DSeq . n ) = ( ( F . n ) \ ( CSeq . n ) )) by CKB45:1;
A12: (for n being (Element of ( NAT )) holds ((( CSeq . n ) in Sigma & ( CSeq . n ) c= ( F . n )) & ( ( F . n ) \ ( CSeq . n ) ) is (thin of P)))
proof
let n being (Element of ( NAT ));
( CSeq . n ) in ( ProbPart ( F . n ) ) by A9;
hence thesis by CKB41:def 1;
end;
(for n being (Element of ( NAT )) holds ( DSeq . n ) is (thin of P))
proof
let n being (Element of ( NAT ));
( ( F . n ) \ ( CSeq . n ) ) is (thin of P) by A12;
hence thesis by A11;
end;
then consider ESeq being (SetSequence of Sigma) such that A13: (for n holds (( DSeq . n ) c= ( ESeq . n ) & ( P . ( ESeq . n ) ) = ( 0 ))) by CKB46:1;
A14: ( dom BSeq ) = ( NAT ) by FUNCT_2:def 1;
A15: B c= ( union ( rng F ) )
proof
let x being set;
assume x in B;
then consider Z being set such that A16: x in Z and A17: Z in ( rng CSeq ) by A10,TARSKI:def 4;
( dom CSeq ) = ( NAT ) by FUNCT_2:def 1;
then consider n being set such that A18: n in ( NAT ) and A19: Z = ( CSeq . n ) by A17,FUNCT_1:def 3;
reconsider n as (Element of ( NAT )) by A18;
set P = ( F . n );
A20: ( CSeq . n ) c= P by A12;
(ex P being set st (P in ( rng F ) & x in P))
proof
take P;
thus thesis by A14,A16,A19,A20,FUNCT_1:def 3;
end;
hence thesis by TARSKI:def 4;
end;
A21: (ex C being (thin of P) st ( union ( rng F ) ) = ( B \/ C ))
proof
set C = ( ( union ( rng F ) ) \ B );
A22: ( union ( rng F ) ) = ( C \/ ( ( union ( rng F ) ) /\ B ) ) by XBOOLE_1:51
.= ( B \/ C ) by A15,XBOOLE_1:28;
reconsider C as (Subset of Omega);
A23: C c= ( union ( rng DSeq ) )
proof
let x being set;
assume A24: x in C;
then x in ( union ( rng F ) ) by XBOOLE_0:def 5;
then consider Z being set such that A25: x in Z and A26: Z in ( rng F ) by TARSKI:def 4;
consider n being set such that A27: n in ( NAT ) and A28: Z = ( F . n ) by A14,A26,FUNCT_1:def 3;
reconsider n as (Element of ( NAT )) by A27;
A29: (not x in ( union ( rng CSeq ) )) by A10,A24,XBOOLE_0:def 5;
(not x in ( CSeq . n ))
proof
( dom CSeq ) = ( NAT ) by FUNCT_2:def 1;
then A30: ( CSeq . n ) in ( rng CSeq ) by FUNCT_1:def 3;
assume x in ( CSeq . n );
hence thesis by A29,A30,TARSKI:def 4;
end;
then A31: x in ( ( F . n ) \ ( CSeq . n ) ) by A25,A28,XBOOLE_0:def 5;
(ex Z being set st (x in Z & Z in ( rng DSeq )))
proof
take ( DSeq . n );
( dom DSeq ) = ( NAT ) by FUNCT_2:def 1;
hence thesis by A11,A31,FUNCT_1:def 3;
end;
hence thesis by TARSKI:def 4;
end;
(for A being set holds (A in ( rng ESeq ) implies ( P . A ) = ( 0 )))
proof
let A being set;
A32: ( dom ESeq ) = ( NAT ) by FUNCT_2:def 1;
assume A in ( rng ESeq );
then (ex n being set st (n in ( NAT ) & A = ( ESeq . n ))) by A32,FUNCT_1:def 3;
hence thesis by A13;
end;
then A33: ( P . ( union ( rng ESeq ) ) ) = ( 0 ) by CKB13:1;
( Union ESeq ) in Sigma by PROB_1:17;
then A34: ( union ( rng ESeq ) ) in Sigma by CARD_3:def 4;
( union ( rng DSeq ) ) c= ( union ( rng ESeq ) )
proof
let x being set;
assume x in ( union ( rng DSeq ) );
then consider Z being set such that A35: x in Z and A36: Z in ( rng DSeq ) by TARSKI:def 4;
( dom DSeq ) = ( NAT ) by FUNCT_2:def 1;
then consider n being set such that A37: n in ( NAT ) and A38: Z = ( DSeq . n ) by A36,FUNCT_1:def 3;
reconsider n as (Element of ( NAT )) by A37;
n in ( dom ESeq ) by A37,FUNCT_2:def 1;
then A39: ( ESeq . n ) in ( rng ESeq ) by FUNCT_1:def 3;
( DSeq . n ) c= ( ESeq . n ) by A13;
hence thesis by A35,A38,A39,TARSKI:def 4;
end;
then C c= ( union ( rng ESeq ) ) by A23,XBOOLE_1:1;
then C is (thin of P) by A34,A33,CKB32:def 1;
then consider C being (thin of P) such that A40: ( union ( rng F ) ) = ( B \/ C ) by A22;
take C;
thus thesis by A40;
end;
(for n,m being set holds (n <> m implies ( CSeq . n ) misses ( CSeq . m )))
proof
let n being set,m being set;
A41: ( dom F ) = ( NAT ) by FUNCT_2:def 1
.= ( dom CSeq ) by FUNCT_2:def 1;
(for n being set holds ( CSeq . n ) c= ( F . n ))
proof
let n being set;
per cases ;
suppose n in ( dom F );

hence thesis by A12;
end;
suppose A42: (not n in ( dom F ));

then ( F . n ) = ( {} ) by FUNCT_1:def 2
.= ( CSeq . n ) by A41,A42,FUNCT_1:def 2;
hence thesis;
end;
end;
then A43: (( CSeq . n ) c= ( F . n ) & ( CSeq . m ) c= ( F . m ));
assume n <> m;
then ( F . n ) misses ( F . m ) by A8,PROB_2:def 2;
then ( ( F . n ) /\ ( F . m ) ) = ( {} ) by XBOOLE_0:def 7;
then ( ( CSeq . n ) /\ ( CSeq . m ) ) = ( {} ) by A43,XBOOLE_1:3,XBOOLE_1:27;
hence thesis by XBOOLE_0:def 7;
end;
then A44: CSeq is  disjoint_valued by PROB_2:def 2;
( Sum ( comP * F ) ) = ( comP . ( Union F ) )
proof
A45: (for n holds ( comP . ( F . n ) ) = ( P . ( CSeq . n ) ))
proof
let n;
( ( F . n ) \ ( CSeq . n ) ) is (thin of P) by A12;
then consider C being (thin of P) such that A46: C = ( ( F . n ) \ ( CSeq . n ) );
( F . n ) = ( ( ( F . n ) /\ ( CSeq . n ) ) \/ ( ( F . n ) \ ( CSeq . n ) ) ) by XBOOLE_1:51
.= ( ( CSeq . n ) \/ C ) by A12,A46,XBOOLE_1:28;
hence thesis by A5;
end;
(for x being (Element of ( NAT )) holds ( ( comP * F ) . x ) = ( ( P * CSeq ) . x ))
proof
let x being (Element of ( NAT ));
( ( comP * F ) . x ) = ( comP . ( F . x ) ) by FUNCT_2:15
.= ( P . ( CSeq . x ) ) by A45
.= ( ( P * CSeq ) . x ) by FUNCT_2:15;
hence thesis;
end;
then A47: ( Sum ( comP * F ) ) = ( Sum ( P * CSeq ) ) by FUNCT_2:63;
( comP . ( union ( rng F ) ) ) = ( P . ( union ( rng CSeq ) ) ) by A5,A10,A21;
then ( comP . ( Union F ) ) = ( P . ( union ( rng CSeq ) ) ) by CARD_3:def 4
.= ( P . ( Union CSeq ) ) by CARD_3:def 4;
hence thesis by A44,A47,PROB_3:46;
end;
hence thesis;
end;
A48: (for x being (Element of ( COM (Sigma,P) )) holds ( comP . x ) >= ( 0 ))
proof
let x being (Element of ( COM (Sigma,P) ));
consider B being set such that A49: B in Sigma and A50: (ex C being (thin of P) st x = ( B \/ C )) by CKB36:def 1;
reconsider B as (Element of Sigma) by A49;
( comP . x ) = ( P . B ) by A4,A50;
hence thesis by PROB_1:def 8;
end;
( {} ) = ( B \/ C );
then A51: ( comP . ( {} ) ) = ( P . ( {} ) ) by A5,PROB_1:4
.= ( 0 ) by VALUED_0:def 19;
A52: (for A,B being (Event of ( COM (Sigma,P) )) holds (A misses B implies ( comP . ( A \/ B ) ) = ( ( comP . A ) + ( comP . B ) )))
proof
let A being (Event of ( COM (Sigma,P) )),B being (Event of ( COM (Sigma,P) ));
assume that
A53: A misses B;
reconsider A1 = A,B1 = B as (Subset of Omega);
reconsider BSeq = ( (A1,B1) followed_by ( {} Omega ) ) as (SetSequence of Omega);
A54: ( BSeq . 1 ) = B by FUNCT_7:123;
A55: ( BSeq . ( 0 ) ) = A by FUNCT_7:122;
(for n being Nat holds ( BSeq . n ) in ( COM (Sigma,P) ))
proof
let n being Nat;
per cases ;
suppose n = ( 0 );

hence thesis by A55;
end;
suppose n <> ( 0 );

then n >= 1 by NAT_1:14;
then A56: ( n + 1 ) > 1 by NAT_1:13;
per cases  by A56,NAT_1:22;
suppose n > 1;

then ( BSeq . n ) = ( {} ) by FUNCT_7:124;
hence thesis by PROB_1:4;
end;
suppose n = 1;

hence thesis by A54;
end;
end;
end;
then ( rng BSeq ) c= ( COM (Sigma,P) ) by NAT_1:52;
then reconsider BSeq as (SetSequence of ( COM (Sigma,P) )) by RELAT_1:def 19;
(for m holds (2 <= m implies ( ( Partial_Sums ( comP * BSeq ) ) . m ) = ( ( comP . A ) + ( comP . B ) )))
proof
A57: ( ( Partial_Sums ( comP * BSeq ) ) . ( 0 ) ) = ( ( comP * BSeq ) . ( 0 ) ) by SERIES_1:def 1
.= ( comP . A ) by A55,FUNCT_2:15;
( ( 0 ) + 1 ) = 1;
then A58: ( ( Partial_Sums ( comP * BSeq ) ) . 1 ) = ( ( ( Partial_Sums ( comP * BSeq ) ) . ( 0 ) ) + ( ( comP * BSeq ) . 1 ) ) by SERIES_1:def 1
.= ( ( comP . A ) + ( comP . B ) ) by A54,A57,FUNCT_2:15;
A59: (for n holds ( ( Partial_Sums ( comP * BSeq ) ) . ( 2 + n ) ) = ( ( comP . A ) + ( comP . B ) ))
proof
defpred P[ (Element of ( NAT )) ]
 means
( ( Partial_Sums ( comP * BSeq ) ) . ( 2 + $1 ) ) = ( ( comP . A ) + ( comP . B ) );
A60: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume that
A61: P[ k ];
A62: ( ( 2 + k ) + 1 ) > ( ( 0 ) + 1 ) by XREAL_1:8;
thus ( ( Partial_Sums ( comP * BSeq ) ) . ( 2 + ( k + 1 ) ) ) = ( ( ( Partial_Sums ( comP * BSeq ) ) . ( 2 + k ) ) + ( ( comP * BSeq ) . ( ( 2 + k ) + 1 ) ) ) by SERIES_1:def 1
.= ( ( ( comP . A ) + ( comP . B ) ) + ( comP . ( BSeq . ( ( 2 + k ) + 1 ) ) ) ) by A61,FUNCT_2:15
.= ( ( ( comP . A ) + ( comP . B ) ) + ( comP . ( {} ) ) ) by A62,FUNCT_7:124
.= ( ( comP . A ) + ( comP . B ) ) by A51;
end;
2 = ( 1 + 1 );
then ( ( Partial_Sums ( comP * BSeq ) ) . ( 2 + ( 0 ) ) ) = ( ( ( Partial_Sums ( comP * BSeq ) ) . 1 ) + ( ( comP * BSeq ) . 2 ) ) by SERIES_1:def 1
.= ( ( ( comP . A ) + ( comP . B ) ) + ( comP . ( BSeq . 2 ) ) ) by A58,FUNCT_2:15
.= ( ( ( comP . A ) + ( comP . B ) ) + ( comP . ( {} ) ) ) by FUNCT_7:124
.= ( ( comP . A ) + ( comP . B ) ) by A51;
then A63: P[ ( 0 ) ];
thus (for k holds P[ k ]) from NAT_1:sch 1(A63,A60);
end;
let m;
assume 2 <= m;
then consider k being Nat such that A64: m = ( 2 + k ) by NAT_1:10;
k in ( NAT ) by ORDINAL1:def 12;
hence thesis by A59,A64;
end;
then A65: (( Union BSeq ) = ( A \/ B ) & ( Sum ( comP * BSeq ) ) = ( ( comP . A ) + ( comP . B ) )) by DYNKIN:3,PROB_1:1;
BSeq is  disjoint_valued by A53,CKB8:1;
hence thesis by A7,A65;
end;
A66: (for A,B being (Event of ( COM (Sigma,P) )) holds (A c= B implies ( comP . ( B \ A ) ) = ( ( comP . B ) - ( comP . A ) )))
proof
let A being (Event of ( COM (Sigma,P) )),B being (Event of ( COM (Sigma,P) ));
assume A67: A c= B;
( ( comP . A ) + ( comP . ( B \ A ) ) ) = ( comP . ( A \/ ( B \ A ) ) ) by A52,XBOOLE_1:79
.= ( comP . B ) by A67,XBOOLE_1:45;
hence thesis;
end;
A68: (for A,B being (Event of ( COM (Sigma,P) )) holds (A c= B implies ( comP . A ) <= ( comP . B )))
proof
let A being (Event of ( COM (Sigma,P) )),B being (Event of ( COM (Sigma,P) ));
assume A c= B;
then ( comP . ( B \ A ) ) = ( ( comP . B ) - ( comP . A ) ) by A66;
then ( 0 ) <= ( ( comP . B ) - ( comP . A ) ) by A48;
then ( ( 0 ) + ( comP . A ) ) <= ( comP . B ) by XREAL_1:19;
hence thesis;
end;
A69: (for BSeq being (SetSequence of ( COM (Sigma,P) )) holds (BSeq is  non-descending implies ( comP * BSeq ) is  non-decreasing))
proof
let BSeq being (SetSequence of ( COM (Sigma,P) ));
assume that
A70: BSeq is  non-descending;
(for n holds (for m holds (n <= m implies ( ( comP * BSeq ) . n ) <= ( ( comP * BSeq ) . m ))))
proof
let n;
let m;
assume n <= m;
then ( BSeq . n ) c= ( BSeq . m ) by A70,PROB_1:def 5;
then ( comP . ( BSeq . n ) ) <= ( comP . ( BSeq . m ) ) by A68;
then ( ( comP * BSeq ) . n ) <= ( comP . ( BSeq . m ) ) by FUNCT_2:15;
hence thesis by FUNCT_2:15;
end;
hence thesis by SEQM_3:6;
end;
A71: ( comP . Omega ) = ( comP . ( B \/ Omega ) )
.= ( P . Omega ) by A5,A1,PROB_1:5
.= 1 by PROB_1:def 8;
A72: (for A being (Event of ( COM (Sigma,P) )) holds ( comP . A ) <= 1)
proof
reconsider B = Omega as (Event of ( COM (Sigma,P) )) by PROB_1:23;
let A being (Event of ( COM (Sigma,P) ));
( comP . A ) <= ( comP . B ) by A68;
hence thesis by A71;
end;
A73: (for BSeq being (SetSequence of ( COM (Sigma,P) )) holds (for n holds ( ( comP * BSeq ) . n ) <= 1))
proof
let BSeq being (SetSequence of ( COM (Sigma,P) ));
let n;
( ( comP * BSeq ) . n ) = ( comP . ( BSeq . n ) ) by FUNCT_2:15;
hence thesis by A72;
end;
A74: (for BSeq being (SetSequence of ( COM (Sigma,P) )) holds (BSeq is  non-descending implies (( comP * BSeq ) is  bounded_above & ( comP * BSeq ) is  convergent)))
proof
let BSeq being (SetSequence of ( COM (Sigma,P) ));
assume BSeq is  non-descending;
then A75: ( comP * BSeq ) is  non-decreasing by A69;
(for n holds ( ( comP * BSeq ) . n ) < 2)
proof
let n;
( ( ( comP * BSeq ) . n ) + ( 0 ) ) < ( 1 + 1 ) by A73,XREAL_1:8;
hence thesis;
end;
hence ( comP * BSeq ) is  bounded_above by SEQ_2:def 3;
hence thesis by A75;
end;
(for BSeq being (SetSequence of ( COM (Sigma,P) )) holds (BSeq is  non-descending implies (( comP * BSeq ) is  convergent & ( lim ( comP * BSeq ) ) = ( comP . ( Union BSeq ) ))))
proof
let BSeq being (SetSequence of ( COM (Sigma,P) ));
assume that
A76: BSeq is  non-descending;
reconsider CSeq = ( Partial_Diff_Union BSeq ) as (SetSequence of ( COM (Sigma,P) ));
A77: (for n holds ( ( Partial_Sums ( comP * CSeq ) ) . n ) = ( ( comP * BSeq ) . n ))
proof
defpred P[ (Element of ( NAT )) ]
 means
( ( Partial_Sums ( comP * CSeq ) ) . $1 ) = ( ( comP * BSeq ) . $1 );
A78: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume that
A79: P[ k ];
A80: ( BSeq . k ) c= ( BSeq . ( k + 1 ) ) by A76,PROB_2:7;
thus ( ( Partial_Sums ( comP * CSeq ) ) . ( k + 1 ) ) = ( ( ( comP * BSeq ) . k ) + ( ( comP * CSeq ) . ( k + 1 ) ) ) by A79,SERIES_1:def 1
.= ( ( comP . ( BSeq . k ) ) + ( ( comP * CSeq ) . ( k + 1 ) ) ) by FUNCT_2:15
.= ( ( comP . ( BSeq . k ) ) + ( comP . ( CSeq . ( k + 1 ) ) ) ) by FUNCT_2:15
.= ( comP . ( ( BSeq . k ) \/ ( CSeq . ( k + 1 ) ) ) ) by A52,A76,CKB26:1
.= ( comP . ( ( BSeq . k ) \/ ( ( BSeq . ( k + 1 ) ) \ ( BSeq . k ) ) ) ) by A76,CKB24:1
.= ( comP . ( ( BSeq . k ) \/ ( BSeq . ( k + 1 ) ) ) ) by XBOOLE_1:39
.= ( comP . ( BSeq . ( k + 1 ) ) ) by A80,XBOOLE_1:12
.= ( ( comP * BSeq ) . ( k + 1 ) ) by FUNCT_2:15;
end;
( ( Partial_Sums ( comP * CSeq ) ) . ( 0 ) ) = ( ( comP * CSeq ) . ( 0 ) ) by SERIES_1:def 1
.= ( comP . ( CSeq . ( 0 ) ) ) by FUNCT_2:15
.= ( comP . ( BSeq . ( 0 ) ) ) by A76,CKB24:1
.= ( ( comP * BSeq ) . ( 0 ) ) by FUNCT_2:15;
then A81: P[ ( 0 ) ];
thus (for k holds P[ k ]) from NAT_1:sch 1(A81,A78);
end;
( comP . ( Union BSeq ) ) = ( comP . ( Union CSeq ) ) by PROB_3:36
.= ( Sum ( comP * CSeq ) ) by A7
.= ( lim ( Partial_Sums ( comP * CSeq ) ) );
hence thesis by A74,A76,A77,FUNCT_2:63;
end;
then reconsider comP as (Probability of ( COM (Sigma,P) )) by A48,A71,A52,PROB_2:10;
take comP;
thus thesis by A5;
end;
uniqueness
proof
let P1 being (Probability of ( COM (Sigma,P) )),P2 being (Probability of ( COM (Sigma,P) ));
assume that
A82: (for B being set holds (B in Sigma implies (for C being (thin of P) holds ( P1 . ( B \/ C ) ) = ( P . B ))))
and
A83: (for B being set holds (B in Sigma implies (for C being (thin of P) holds ( P2 . ( B \/ C ) ) = ( P . B ))));
(for x being set holds (x in ( COM (Sigma,P) ) implies ( P1 . x ) = ( P2 . x )))
proof
let x being set;
assume x in ( COM (Sigma,P) );
then consider B being set such that A84: (B in Sigma & (ex C being (thin of P) st x = ( B \/ C ))) by CKB36:def 1;
( P1 . x ) = ( P . B ) by A82,A84
.= ( P2 . x ) by A83,A84;
hence thesis;
end;
hence thesis by FUNCT_2:12;
end;
end;
