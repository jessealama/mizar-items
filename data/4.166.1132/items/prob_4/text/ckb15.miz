environ
vocabularies NUMBERS,SUBSET_1,PROB_1,XBOOLE_0,TARSKI,FUNCT_1,RELAT_1,NAT_1,PROB_2,FUNCOP_1,FUNCT_7,CARD_1,XXREAL_0,ARYTM_3,ZFMISC_1,CARD_3,EQREL_1,RPR_1,ARYTM_1,SERIES_1,SEQ_2,ORDINAL2,PROB_3,SUPINF_2,REAL_1,XXREAL_2,SUPINF_1,ORDINAL1,MEASURE1,MEASURE6,VALUED_0,SETFAM_1,MEASURE3,PROB_4,SEQ_4;
notations TARSKI,XBOOLE_0,REAL_1,CARD_3,ORDINAL1,MEASURE3,SUPINF_2,XXREAL_0,XXREAL_2,NAT_1,SEQ_2,SETFAM_1,FUNCT_1,RELSET_1,SUBSET_1,NUMBERS,SUPINF_1,PARTFUN1,FUNCT_2,FUNCT_7,PROB_1,PROB_3,MEASURE1,FUNCOP_1,SEQM_3,SERIES_1,RINFSUP1,ZFMISC_1,MEASURE6,PROB_2,CKB2;
definitions TARSKI,XBOOLE_0,SERIES_1,SUBSET_1,PROB_3;
theorems FUNCT_1,FUNCT_2,SEQ_1,SEQ_2,XREAL_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,PROB_2,RINFSUP1,SUPINF_2,SEQM_3,CARD_3,SETLIM_1,PROB_1,SERIES_1,PROB_3,MEASURE1,MEASURE3,MEASURE6,ZFMISC_1,XXREAL_0,ORDINAL1,NUMBERS,XXREAL_2,FUNCT_7,DYNKIN,VALUED_0,FUNCOP_1,RELAT_1,CKB1,CKB3,CKB4,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
schemes FUNCT_2,NAT_1,XBOOLE_0,CKB5;
registrations SUBSET_1,RELAT_1,ORDINAL1,FUNCT_2,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,MEASURE1,MEASURE3,VALUED_0,SEQ_2,SEQ_4,FUNCT_7,PROB_1,RELSET_1,PROB_3,CKB6,CKB7;
constructors REAL_1,SERIES_1,MEASURE3,MEASURE6,PARTFUN3,KURATO_0,RINFSUP1,PROB_3,SEQ_1,SUPINF_1,FUNCT_7,RELSET_1,CKB2;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve x for set;
theorem
Th11: (for seq being (Function of ( NAT ),( REAL )) holds (for Eseq being (Function of ( NAT ),( ExtREAL )) holds ((seq = Eseq & seq is  bounded_above) implies ( upper_bound seq ) = ( sup ( rng Eseq ) ))))
proof
let seq being (Function of ( NAT ),( REAL ));
let Eseq being (Function of ( NAT ),( ExtREAL ));
assume that
A1: seq = Eseq
and
A2: seq is  bounded_above;
reconsider s = ( upper_bound seq ) as R_eal by XXREAL_0:def 1;
A3: ( dom Eseq ) = ( NAT ) by FUNCT_2:def 1;
A4: ( rng Eseq ) <> { ( -infty ) }
proof
assume ( rng Eseq ) = { ( -infty ) };
then reconsider k1 = ( -infty ) as (Element of ( rng Eseq )) by TARSKI:def 1;
consider n1 being set such that A5: n1 in ( NAT ) and ( Eseq . n1 ) = k1 by A3,FUNCT_1:def 3;
reconsider n1 as (Element of ( NAT )) by A5;
( seq . n1 ) = k1 by A1;
hence contradiction;
end;
(for x being  ext-real number holds (x in ( rng Eseq ) implies x <= s))
proof
let x being  ext-real number;
assume x in ( rng Eseq );
then (ex n1 being set st (n1 in ( NAT ) & ( Eseq . n1 ) = x)) by A3,FUNCT_1:def 3;
hence thesis by A1,A2,RINFSUP1:7;
end;
then A6: s is (UpperBound of ( rng Eseq )) by XXREAL_2:def 1;
then A7: ( rng Eseq ) is  bounded_above by XXREAL_2:def 10;
A8: s <= ( sup ( rng Eseq ) )
proof
reconsider r1 = ( sup ( rng Eseq ) ) as Real by A7,A4,XXREAL_2:57;
( sup ( rng Eseq ) ) is (UpperBound of ( rng Eseq )) by XXREAL_2:def 3;
then (for n holds ( seq . n ) <= r1) by A1,A3,FUNCT_1:3,XXREAL_2:def 1;
hence thesis by RINFSUP1:9;
end;
( sup ( rng Eseq ) ) <= s by A6,XXREAL_2:def 3;
hence thesis by A8,XXREAL_0:1;
end;
