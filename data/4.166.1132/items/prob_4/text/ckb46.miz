environ
vocabularies NUMBERS,SUBSET_1,PROB_1,XBOOLE_0,TARSKI,FUNCT_1,RELAT_1,NAT_1,PROB_2,FUNCOP_1,FUNCT_7,CARD_1,XXREAL_0,ARYTM_3,ZFMISC_1,CARD_3,EQREL_1,RPR_1,ARYTM_1,SERIES_1,SEQ_2,ORDINAL2,PROB_3,SUPINF_2,REAL_1,XXREAL_2,SUPINF_1,ORDINAL1,MEASURE1,MEASURE6,VALUED_0,SETFAM_1,MEASURE3,PROB_4,SEQ_4;
notations TARSKI,XBOOLE_0,REAL_1,CARD_3,ORDINAL1,MEASURE3,SUPINF_2,XXREAL_0,XXREAL_2,NAT_1,SEQ_2,SETFAM_1,FUNCT_1,RELSET_1,SUBSET_1,NUMBERS,SUPINF_1,PARTFUN1,FUNCT_2,FUNCT_7,PROB_1,PROB_3,MEASURE1,FUNCOP_1,SEQM_3,SERIES_1,RINFSUP1,ZFMISC_1,MEASURE6,PROB_2,CKB2,CKB19,CKB21,CKB30,CKB32,CKB36,CKB39,CKB41;
definitions TARSKI,XBOOLE_0,SERIES_1,SUBSET_1,PROB_3,CKB19,CKB21,CKB30,CKB32,CKB36,CKB39,CKB41;
theorems FUNCT_1,FUNCT_2,SEQ_1,SEQ_2,XREAL_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,PROB_2,RINFSUP1,SUPINF_2,SEQM_3,CARD_3,SETLIM_1,PROB_1,SERIES_1,PROB_3,MEASURE1,MEASURE3,MEASURE6,ZFMISC_1,XXREAL_0,ORDINAL1,NUMBERS,XXREAL_2,FUNCT_7,DYNKIN,VALUED_0,FUNCOP_1,RELAT_1,CKB1,CKB3,CKB4,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45;
schemes FUNCT_2,NAT_1,XBOOLE_0,CKB5;
registrations SUBSET_1,RELAT_1,ORDINAL1,FUNCT_2,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,MEASURE1,MEASURE3,VALUED_0,SEQ_2,SEQ_4,FUNCT_7,PROB_1,RELSET_1,PROB_3,CKB6,CKB7;
constructors REAL_1,SERIES_1,MEASURE3,MEASURE6,PARTFUN3,KURATO_0,RINFSUP1,PROB_3,SEQ_1,SUPINF_1,FUNCT_7,RELSET_1,CKB2,CKB19,CKB21,CKB30,CKB32,CKB36,CKB39,CKB41;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve Omega for non empty set;
reserve Sigma for (SigmaField of Omega);
reserve P for (Probability of Sigma);
theorem
Th34: (for BSeq being (SetSequence of Omega) holds ((for n holds ( BSeq . n ) is (thin of P)) implies (ex CSeq being (SetSequence of Sigma) st (for n holds (( BSeq . n ) c= ( CSeq . n ) & ( P . ( CSeq . n ) ) = ( 0 ))))))
proof
let BSeq being (SetSequence of Omega);
defpred P[ (Element of ( NAT )),set ]
 means
(for n being (Element of ( NAT )) holds (for y being set holds ((n = $1 & y = $2) implies ((y in Sigma & ( BSeq . n ) c= y) & ( P . y ) = ( 0 )))));
assume A1: (for n holds ( BSeq . n ) is (thin of P));
A2: (for t being (Element of ( NAT )) holds (ex A being (Element of Sigma) st P[ t,A ]))
proof
let t being (Element of ( NAT ));
( BSeq . t ) is (thin of P) by A1;
then consider A being set such that A3: A in Sigma and A4: (( BSeq . t ) c= A & ( P . A ) = ( 0 )) by CKB32:def 1;
reconsider A as (Element of Sigma) by A3;
take A;
thus thesis by A4;
end;
(ex G being (Function of ( NAT ),Sigma) st (for t being (Element of ( NAT )) holds P[ t,( G . t ) ])) from FUNCT_2:sch 3(A2);
then consider G being (Function of ( NAT ),Sigma) such that A5: (for t being (Element of ( NAT )) holds (for n being (Element of ( NAT )) holds (for y being set holds ((n = t & y = ( G . t )) implies ((y in Sigma & ( BSeq . n ) c= y) & ( P . y ) = ( 0 ))))));
reconsider CSeq = G as (SetSequence of Omega) by FUNCT_2:7;
reconsider CSeq as (SetSequence of Sigma);
take CSeq;
thus thesis by A5;
end;
