environ
vocabularies NUMBERS,SUBSET_1,PROB_1,XBOOLE_0,TARSKI,FUNCT_1,RELAT_1,NAT_1,PROB_2,FUNCOP_1,FUNCT_7,CARD_1,XXREAL_0,ARYTM_3,ZFMISC_1,CARD_3,EQREL_1,RPR_1,ARYTM_1,SERIES_1,SEQ_2,ORDINAL2,PROB_3,SUPINF_2,REAL_1,XXREAL_2,SUPINF_1,ORDINAL1,MEASURE1,MEASURE6,VALUED_0,SETFAM_1,MEASURE3,PROB_4,SEQ_4;
notations TARSKI,XBOOLE_0,REAL_1,CARD_3,ORDINAL1,MEASURE3,SUPINF_2,XXREAL_0,XXREAL_2,NAT_1,SEQ_2,SETFAM_1,FUNCT_1,RELSET_1,SUBSET_1,NUMBERS,SUPINF_1,PARTFUN1,FUNCT_2,FUNCT_7,PROB_1,PROB_3,MEASURE1,FUNCOP_1,SEQM_3,SERIES_1,RINFSUP1,ZFMISC_1,MEASURE6,PROB_2,CKB2;
definitions TARSKI,XBOOLE_0,SERIES_1,SUBSET_1,PROB_3;
theorems FUNCT_1,FUNCT_2,SEQ_1,SEQ_2,XREAL_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,PROB_2,RINFSUP1,SUPINF_2,SEQM_3,CARD_3,SETLIM_1,PROB_1,SERIES_1,PROB_3,MEASURE1,MEASURE3,MEASURE6,ZFMISC_1,XXREAL_0,ORDINAL1,NUMBERS,XXREAL_2,FUNCT_7,DYNKIN,VALUED_0,FUNCOP_1,RELAT_1,CKB1,CKB3,CKB4,CKB8;
schemes FUNCT_2,NAT_1,XBOOLE_0,CKB5;
registrations SUBSET_1,RELAT_1,ORDINAL1,FUNCT_2,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,MEASURE1,MEASURE3,VALUED_0,SEQ_2,SEQ_4,FUNCT_7,PROB_1,RELSET_1,PROB_3,CKB6,CKB7;
constructors REAL_1,SERIES_1,MEASURE3,MEASURE6,PARTFUN3,KURATO_0,RINFSUP1,PROB_3,SEQ_1,SUPINF_1,FUNCT_7,RELSET_1,CKB2;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve X for set;
reserve A1 for (SetSequence of X);
theorem
Th5: (for S being non  empty set holds (S is (SigmaField of X) iff ((S c= ( bool X ) & (for A1 being (SetSequence of X) holds (( rng A1 ) c= S implies ( Union A1 ) in S))) & (for A being (Subset of X) holds (A in S implies ( A ` ) in S)))))
proof
let S being non  empty set;
thus (S is (SigmaField of X) implies ((S c= ( bool X ) & (for A1 being (SetSequence of X) holds (( rng A1 ) c= S implies ( Union A1 ) in S))) & (for A being (Subset of X) holds (A in S implies ( A ` ) in S))))
proof
assume S is (SigmaField of X);
then reconsider S as (SigmaField of X);
(for A1 being (SetSequence of X) holds (( rng A1 ) c= S implies ( Union A1 ) in S))
proof
let A1 being (SetSequence of X);
assume ( rng A1 ) c= S;
then reconsider A1 as (SetSequence of S) by RELAT_1:def 19;
( Union A1 ) in S by PROB_1:17;
hence thesis;
end;
hence thesis by PROB_1:15;
end;

assume that
A1: S c= ( bool X )
and
A2: (for A1 being (SetSequence of X) holds (( rng A1 ) c= S implies ( Union A1 ) in S))
and
A3: (for A being (Subset of X) holds (A in S implies ( A ` ) in S));
(for A1 being (SetSequence of X) holds (( rng A1 ) c= S implies ( Intersection A1 ) in S))
proof
let A1 being (SetSequence of X);
assume that
A4: ( rng A1 ) c= S;
(for n being Nat holds ( ( Complement A1 ) . n ) in S)
proof
let n being Nat;
reconsider n1 = n as (Element of ( NAT )) by ORDINAL1:def 12;
( A1 . n ) in ( rng A1 ) by NAT_1:51;
then ( ( A1 . n1 ) ` ) in S by A3,A4;
hence thesis by PROB_1:def 2;
end;
then ( rng ( Complement A1 ) ) c= S by NAT_1:52;
then ( ( Union ( Complement A1 ) ) ` ) in S by A2,A3;
hence thesis by PROB_1:def 3;
end;
hence thesis by A1,A3,PROB_1:15;
end;
