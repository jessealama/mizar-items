environ
vocabularies NUMBERS,SUBSET_1,PROB_1,XBOOLE_0,TARSKI,FUNCT_1,RELAT_1,NAT_1,PROB_2,FUNCOP_1,FUNCT_7,CARD_1,XXREAL_0,ARYTM_3,ZFMISC_1,CARD_3,EQREL_1,RPR_1,ARYTM_1,SERIES_1,SEQ_2,ORDINAL2,PROB_3,SUPINF_2,REAL_1,XXREAL_2,SUPINF_1,ORDINAL1,MEASURE1,MEASURE6,VALUED_0,SETFAM_1,MEASURE3,PROB_4,SEQ_4;
notations TARSKI,XBOOLE_0,REAL_1,CARD_3,ORDINAL1,MEASURE3,SUPINF_2,XXREAL_0,XXREAL_2,NAT_1,SEQ_2,SETFAM_1,FUNCT_1,RELSET_1,SUBSET_1,NUMBERS,SUPINF_1,PARTFUN1,FUNCT_2,FUNCT_7,PROB_1,PROB_3,MEASURE1,FUNCOP_1,SEQM_3,SERIES_1,RINFSUP1,ZFMISC_1,MEASURE6,PROB_2,CKB2;
definitions TARSKI,XBOOLE_0,SERIES_1,SUBSET_1,PROB_3;
theorems FUNCT_1,FUNCT_2,SEQ_1,SEQ_2,XREAL_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,PROB_2,RINFSUP1,SUPINF_2,SEQM_3,CARD_3,SETLIM_1,PROB_1,SERIES_1,PROB_3,MEASURE1,MEASURE3,MEASURE6,ZFMISC_1,XXREAL_0,ORDINAL1,NUMBERS,XXREAL_2,FUNCT_7,DYNKIN,VALUED_0,FUNCOP_1,RELAT_1,CKB1,CKB3,CKB4,CKB8,CKB9,CKB10,CKB11;
schemes FUNCT_2,NAT_1,XBOOLE_0,CKB5;
registrations SUBSET_1,RELAT_1,ORDINAL1,FUNCT_2,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,MEASURE1,MEASURE3,VALUED_0,SEQ_2,SEQ_4,FUNCT_7,PROB_1,RELSET_1,PROB_3,CKB6,CKB7;
constructors REAL_1,SERIES_1,MEASURE3,MEASURE6,PARTFUN3,KURATO_0,RINFSUP1,PROB_3,SEQ_1,SUPINF_1,FUNCT_7,RELSET_1,CKB2;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve Omega for non empty set;
reserve Sigma for (SigmaField of Omega);
reserve ASeq for (SetSequence of Sigma);
reserve P for (Probability of Sigma);
theorem
Th8: ((for n holds ( P . ( ASeq . n ) ) = ( 0 )) iff ( P . ( Union ASeq ) ) = ( 0 ))
proof
hereby
assume A1: (for n holds ( P . ( ASeq . n ) ) = ( 0 ));
(for n holds ( ( Partial_Sums ( P * ASeq ) ) . n ) = ( 0 ))
proof
defpred P[ (Element of ( NAT )) ]
 means
( ( Partial_Sums ( P * ASeq ) ) . $1 ) = ( 0 );
A2: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume that
A3: P[ k ];
thus ( ( Partial_Sums ( P * ASeq ) ) . ( k + 1 ) ) = ( ( ( Partial_Sums ( P * ASeq ) ) . k ) + ( ( P * ASeq ) . ( k + 1 ) ) ) by SERIES_1:def 1
.= ( ( 0 ) + ( P . ( ASeq . ( k + 1 ) ) ) ) by A3,FUNCT_2:15
.= ( 0 ) by A1;
end;
( ( Partial_Sums ( P * ASeq ) ) . ( 0 ) ) = ( ( P * ASeq ) . ( 0 ) ) by SERIES_1:def 1
.= ( P . ( ASeq . ( 0 ) ) ) by FUNCT_2:15
.= ( 0 ) by A1;
then A4: P[ ( 0 ) ];
thus (for k holds P[ k ]) from NAT_1:sch 1(A4,A2);
end;
then (for n holds (( 0 ) <= n implies ( ( Partial_Sums ( P * ASeq ) ) . n ) = ( 0 )));
then A5: (( Partial_Sums ( P * ASeq ) ) is  convergent & ( lim ( Partial_Sums ( P * ASeq ) ) ) = ( 0 )) by PROB_1:1;
now
let n;
( ( Partial_Diff_Union ASeq ) . n ) c= ( ASeq . n ) by PROB_3:33;
hence ( ( P * ( Partial_Diff_Union ASeq ) ) . n ) <= ( ( P * ASeq ) . n ) by PROB_3:5;
end;
then A6: (for n holds ( ( Partial_Sums ( P * ( Partial_Diff_Union ASeq ) ) ) . n ) <= ( ( Partial_Sums ( P * ASeq ) ) . n )) by SERIES_1:14;
( Partial_Sums ( P * ( Partial_Diff_Union ASeq ) ) ) is  convergent by PROB_3:45;
then ( Sum ( P * ( Partial_Diff_Union ASeq ) ) ) <= ( 0 ) by A5,A6,SEQ_2:18;
then ( P . ( Union ( Partial_Diff_Union ASeq ) ) ) <= ( 0 ) by PROB_3:46;
then A7: ( P . ( Union ASeq ) ) <= ( 0 ) by PROB_3:36;
( Union ASeq ) is (Event of Sigma) by PROB_1:26;
hence ( P . ( Union ASeq ) ) = ( 0 ) by A7,PROB_1:def 8;
end;
assume A8: ( P . ( Union ASeq ) ) = ( 0 );
hereby
reconsider Y2 = ( Union ASeq ) as (Event of Sigma) by PROB_1:26;
let n;
reconsider Y1 = ( ASeq . n ) as (Event of Sigma);
( ASeq . n ) in ( rng ASeq ) by SETLIM_1:4;
then ( ASeq . n ) c= ( union ( rng ASeq ) ) by ZFMISC_1:74;
then Y1 c= Y2 by CARD_3:def 4;
hence ( P . ( ASeq . n ) ) = ( 0 ) by A8,CKB11:1;
end;
end;
