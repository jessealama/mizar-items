environ
vocabularies RELAT_1,FUNCT_1,XBOOLE_0,ZFMISC_1,SUBSET_1,WELLORD1,RELAT_2,TARSKI;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,WELLORD1;
definitions TARSKI,WELLORD1;
theorems TARSKI,FUNCT_1,RELAT_1,RELAT_2,ZFMISC_1,WELLORD1,ENUMSET1,XBOOLE_0,XBOOLE_1,CKB1,CKB2;
schemes TARSKI,FUNCT_1,RELAT_1,XBOOLE_0,CKB3;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1;
constructors TARSKI,SUBSET_1,RELAT_2,WELLORD1;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve W for Relation;
theorem
Th6: (for x holds (for y holds (for W holds (((x in ( field W ) & y in ( field W )) & W is  well-ordering) implies ((not x in ( W -Seg y )) implies [ y,x ] in W)))))
proof
let x;
let y;
let W;
assume that
A1: x in ( field W )
and
A2: y in ( field W )
and
A3: W is  well-ordering;
W is  connected by A3,WELLORD1:def 4;
then W is_connected_in ( field W ) by RELAT_2:def 14;
then A4: (x <> y implies ([ x,y ] in W or [ y,x ] in W)) by A1,A2,RELAT_2:def 6;
W is  reflexive by A3,WELLORD1:def 4;
then A5: W is_reflexive_in ( field W ) by RELAT_2:def 9;
assume (not x in ( W -Seg y ));
hence thesis by A1,A5,A4,RELAT_2:def 1,WELLORD1:1;
end;
