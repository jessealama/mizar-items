environ
vocabularies RELAT_1,FUNCT_1,XBOOLE_0,ZFMISC_1,SUBSET_1,WELLORD1,RELAT_2,TARSKI;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,WELLORD1;
definitions TARSKI,WELLORD1;
theorems TARSKI,FUNCT_1,RELAT_1,RELAT_2,ZFMISC_1,WELLORD1,ENUMSET1,XBOOLE_0,XBOOLE_1,CKB1;
schemes TARSKI,FUNCT_1,RELAT_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1;
constructors TARSKI,SUBSET_1,RELAT_2,WELLORD1;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve X for set;
reserve Y for set;
reserve W for Relation;
theorem
Th3: (((X <> ( {} ) & Y <> ( {} )) & W = [: X,Y :]) implies ( field W ) = ( X \/ Y ))
proof
set a = the (Element of X);
set b = the (Element of Y);
assume that
A1: X <> ( {} )
and
A2: Y <> ( {} )
and
A3: W = [: X,Y :];
A4: (x in ( field W ) implies x in ( X \/ Y ))
proof
assume x in ( field W );
then consider y such that A5: ([ x,y ] in W or [ y,x ] in W) by CKB1:1;
A6: ([ y,x ] in W implies x in ( X \/ Y ))
proof
assume [ y,x ] in W;
then x in Y by A3,ZFMISC_1:87;
hence thesis by XBOOLE_0:def 3;
end;
([ x,y ] in W implies x in ( X \/ Y ))
proof
assume [ x,y ] in W;
then x in X by A3,ZFMISC_1:87;
hence thesis by XBOOLE_0:def 3;
end;
hence thesis by A5,A6;
end;
(x in ( X \/ Y ) implies x in ( field W ))
proof
A7: (x in X implies x in ( field W ))
proof
assume x in X;
then [ x,b ] in W by A2,A3,ZFMISC_1:87;
hence thesis by CKB1:1;
end;
A8: (x in Y implies x in ( field W ))
proof
assume x in Y;
then [ a,x ] in W by A1,A3,ZFMISC_1:87;
hence thesis by CKB1:1;
end;
assume x in ( X \/ Y );
hence thesis by A7,A8,XBOOLE_0:def 3;
end;
hence thesis by A4,TARSKI:1;
end;
