environ
vocabularies RELAT_1,FUNCT_1,XBOOLE_0,ZFMISC_1,SUBSET_1,WELLORD1,RELAT_2,TARSKI;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,WELLORD1;
definitions TARSKI,WELLORD1;
theorems TARSKI,FUNCT_1,RELAT_1,RELAT_2,ZFMISC_1,WELLORD1,ENUMSET1,XBOOLE_0,XBOOLE_1,CKB1,CKB2;
schemes TARSKI,FUNCT_1,RELAT_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1;
constructors TARSKI,SUBSET_1,RELAT_2,WELLORD1;
requirements SUBSET,BOOLE;
begin
reserve y for set;
reserve A for set;
reserve B for set;
reserve R for Relation;
reserve S for Relation;
reserve T for Relation;
scheme RSeparation { A() -> set,P[Relation] } : (ex B st (for R being Relation holds (R in B iff (R in A() & P[ R ]))))
proof
defpred p[ set,set ]
 means
($1 = $2 & (ex S st (S = $2 & P[ S ])));
A1: (for y,t,v being set holds ((p[ y,t ] & p[ y,v ]) implies t = v));
consider B such that A2: (for t being set holds (t in B iff (ex y being set st (y in A() & p[ y,t ])))) from TARSKI:sch 1(A1);
take B;
let R;
(R in B implies (ex T st ((T in A() & T = R) & P[ R ])))
proof
assume R in B;
then consider y being set such that A3: y in A() and A4: y = R and A5: (ex S st (S = R & P[ S ])) by A2;
reconsider y as Relation by A4;
take y;
thus thesis by A3,A4,A5;
end;
hence (R in B implies (R in A() & P[ R ]));
thus thesis by A2;
end;
