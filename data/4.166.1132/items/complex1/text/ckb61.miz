environ
vocabularies NUMBERS,SUBSET_1,XREAL_0,ORDINAL1,SQUARE_1,ARYTM_3,CARD_1,XXREAL_0,XCMPLX_0,FUNCT_1,FUNCT_2,XBOOLE_0,RELAT_1,REAL_1,FUNCOP_1,ARYTM_0,ARYTM_1,COMPLEX1;
notations TARSKI,SUBSET_1,ORDINAL1,ARYTM_0,NUMBERS,XCMPLX_0,XREAL_0,REAL_1,SQUARE_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCT_4,XXREAL_0,CKB3,CKB4,CKB7,CKB8,CKB13,CKB14,CKB15,CKB16,CKB17,CKB40,CKB42,CKB51,CKB54,CKB56;
definitions SQUARE_1,CKB3,CKB4,CKB13,CKB16,CKB40,CKB42,CKB51,CKB54,CKB56;
theorems SQUARE_1,XREAL_0,FUNCT_2,XBOOLE_0,TARSKI,NUMBERS,FUNCT_4,XCMPLX_0,XCMPLX_1,ARYTM_0,XREAL_1,XXREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13,CKB16,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60;
registrations XBOOLE_0,RELSET_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,SQUARE_1,MEMBERED,CKB5,CKB6;
constructors FUNCT_4,ARYTM_0,REAL_1,SQUARE_1,MEMBERED,RELSET_1,CKB3,CKB4,CKB7,CKB8,CKB15,CKB16,CKB17,CKB40,CKB42,CKB51,CKB54,CKB56;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve z1 for  complex number;
reserve z2 for  complex number;
definition
let z1 being  complex number;
let z2 being  complex number;
redefine func z1 / z2 -> (Element of ( COMPLEX )) equals 
:Def14: ( ( ( ( ( Re z1 ) * ( Re z2 ) ) + ( ( Im z1 ) * ( Im z2 ) ) ) / ( ( ( Re z2 ) ^2 ) + ( ( Im z2 ) ^2 ) ) ) + ( ( ( ( ( Re z2 ) * ( Im z1 ) ) - ( ( Re z1 ) * ( Im z2 ) ) ) / ( ( ( Re z2 ) ^2 ) + ( ( Im z2 ) ^2 ) ) ) * ( <i> ) ) );
coherence by XCMPLX_0:def 2;
compatibility
proof
reconsider z1,z2 as (Element of ( COMPLEX )) by XCMPLX_0:def 2;
set k = ( ( ( Re z2 ) ^2 ) + ( ( Im z2 ) ^2 ) );
A1: ( Re [* ( ( Re z2 ) / k ),( ( - ( Im z2 ) ) / k ) *] ) = ( Re ( ( ( Re z2 ) / k ) + ( ( ( - ( Im z2 ) ) / k ) * ( <i> ) ) ) ) by CKB39:1
.= ( ( Re z2 ) / k ) by CKB46:1;
A2: ( Im [* ( ( Re z2 ) / k ),( ( - ( Im z2 ) ) / k ) *] ) = ( Im ( ( ( Re z2 ) / k ) + ( ( ( - ( Im z2 ) ) / k ) * ( <i> ) ) ) ) by CKB39:1
.= ( ( - ( Im z2 ) ) / k ) by CKB46:1;
( z1 / z2 ) = ( z1 * ( z2 " ) ) by XCMPLX_0:def 9
.= ( z1 * [* ( ( Re z2 ) / k ),( ( - ( Im z2 ) ) / k ) *] ) by CKB39:1
.= [* ( ( ( ( Re z1 ) / 1 ) * ( ( Re z2 ) / k ) ) - ( ( Im z1 ) * ( ( - ( Im z2 ) ) / k ) ) ),( ( ( Re z1 ) * ( ( - ( Im z2 ) ) / k ) ) + ( ( ( Re z2 ) / k ) * ( Im z1 ) ) ) *] by A1,A2,CKB34:1
.= ( ( ( ( ( Re z1 ) / 1 ) * ( ( Re z2 ) / k ) ) - ( ( Im z1 ) * ( ( - ( Im z2 ) ) / k ) ) ) + ( ( ( ( Re z1 ) * ( ( - ( Im z2 ) ) / k ) ) + ( ( ( Re z2 ) / k ) * ( Im z1 ) ) ) * ( <i> ) ) ) by CKB39:1
.= ( ( ( ( ( Re z1 ) * ( Re z2 ) ) / ( 1 * k ) ) - ( ( ( Im z1 ) / 1 ) * ( ( - ( Im z2 ) ) / k ) ) ) + ( ( ( ( Re z1 ) * ( ( - ( Im z2 ) ) / k ) ) + ( ( ( Re z2 ) / k ) * ( Im z1 ) ) ) * ( <i> ) ) ) by XCMPLX_1:76
.= ( ( ( ( ( Re z1 ) * ( Re z2 ) ) / k ) - ( ( ( Im z1 ) * ( - ( Im z2 ) ) ) / ( 1 * k ) ) ) + ( ( ( ( ( Re z1 ) / 1 ) * ( ( - ( Im z2 ) ) / k ) ) + ( ( ( Re z2 ) / k ) * ( Im z1 ) ) ) * ( <i> ) ) ) by XCMPLX_1:76
.= ( ( ( ( ( Re z1 ) * ( Re z2 ) ) / k ) - ( ( ( Im z1 ) * ( - ( Im z2 ) ) ) / k ) ) + ( ( ( ( ( Re z1 ) * ( - ( Im z2 ) ) ) / ( 1 * k ) ) + ( ( ( Re z2 ) / k ) * ( ( Im z1 ) / 1 ) ) ) * ( <i> ) ) ) by XCMPLX_1:76
.= ( ( ( ( ( Re z1 ) * ( Re z2 ) ) / k ) - ( ( ( Im z1 ) * ( - ( Im z2 ) ) ) / k ) ) + ( ( ( ( ( Re z1 ) * ( - ( Im z2 ) ) ) / k ) + ( ( ( Im z1 ) * ( Re z2 ) ) / ( 1 * k ) ) ) * ( <i> ) ) ) by XCMPLX_1:76
.= ( ( ( ( ( Re z1 ) * ( Re z2 ) ) - ( ( Im z1 ) * ( - ( Im z2 ) ) ) ) / k ) + ( ( ( ( ( Re z1 ) * ( - ( Im z2 ) ) ) / k ) + ( ( ( Im z1 ) * ( Re z2 ) ) / ( 1 * k ) ) ) * ( <i> ) ) ) by XCMPLX_1:120
.= ( ( ( ( ( Re z1 ) * ( Re z2 ) ) + ( ( Im z1 ) * ( Im z2 ) ) ) / k ) + ( ( ( ( - ( ( Re z1 ) * ( Im z2 ) ) ) + ( ( Im z1 ) * ( Re z2 ) ) ) / k ) * ( <i> ) ) ) by XCMPLX_1:62
.= ( ( ( ( ( Re z1 ) * ( Re z2 ) ) + ( ( Im z1 ) * ( Im z2 ) ) ) / ( ( ( Re z2 ) ^2 ) + ( ( Im z2 ) ^2 ) ) ) + ( ( ( ( ( Re z2 ) * ( Im z1 ) ) - ( ( Re z1 ) * ( Im z2 ) ) ) / ( ( ( Re z2 ) ^2 ) + ( ( Im z2 ) ^2 ) ) ) * ( <i> ) ) );
hence thesis;
end;
end;
