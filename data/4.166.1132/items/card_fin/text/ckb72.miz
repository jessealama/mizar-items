environ
vocabularies NUMBERS,SUBSET_1,FUNCT_1,NAT_1,TARSKI,FINSET_1,RELAT_1,AFINSQ_1,ARYTM_1,ARYTM_3,FINSEQ_1,XXREAL_0,CARD_1,XBOOLE_0,ORDINAL4,CARD_3,BINOP_1,FINSOP_1,FUNCOP_1,BINOP_2,FUNCT_2,INT_1,VALUED_1,NEWTON,REALSET1,ZFMISC_1,FUNCT_4,EQREL_1,SETFAM_1,STIRL2_1,CARD_FIN;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FUNCT_1,NAT_1,FINSET_1,ORDINAL1,XXREAL_0,NAT_D,AFINSQ_1,VALUED_1,RELSET_1,PARTFUN1,DOMAIN_1,FUNCT_2,FUNCT_4,FUNCOP_1,INT_1,ENUMSET1,BINOP_1,BINOP_2,RECDEF_1,AFINSQ_2,ZFMISC_1,NEWTON,STIRL2_1,YELLOW20,CKB9,CKB21,CKB41,CKB52;
definitions TARSKI,XBOOLE_0,FUNCT_1,FUNCOP_1,FINSET_1,RELAT_1,CKB9,CKB21,CKB41,CKB52;
theorems AFINSQ_1,TARSKI,FUNCT_1,XBOOLE_0,ZFMISC_1,RELAT_1,XBOOLE_1,NAT_1,FUNCT_2,FINSET_1,XCMPLX_1,CARD_2,INT_1,WELLORD2,SUBSET_1,ENUMSET1,CARD_1,BINOP_2,NEWTON,XREAL_1,FUNCOP_1,STIRL2_1,ALTCAT_1,FUNCT_5,IRRAT_1,FUNCT_4,YELLOW20,XXREAL_0,NAT_D,XREAL_0,PRE_POLY,AFINSQ_2,ORDINAL1,VALUED_1,VALUED_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71;
schemes FUNCT_2,NAT_1,XBOOLE_0,STIRL2_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FUNCOP_1,FUNCT_4,FINSET_1,FRAENKEL,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,BINOP_2,CARD_1,WSIERP_1,AFINSQ_1,RELSET_1,VALUED_1,VALUED_0,AFINSQ_2,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47;
constructors PARTFUN3,BINOM,WELLORD2,DOMAIN_1,SETWISEO,REAL_1,NAT_D,YELLOW20,RECDEF_1,BINOP_2,RELSET_1,ORDINAL4,SEQ_1,AFINSQ_1,SEQ_4,AFINSQ_2,STIRL2_1,CKB9,CKB21,CKB52;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for Nat;
theorem
Th70: (for X,Y being  finite set holds ((X is non empty & Y is non empty) implies (ex F being (XFinSequence of ( INT )) st ((( dom F ) = ( ( card Y ) + 1 ) & ( Sum F ) = ( card { f where f is (Function of X,Y): f is  onto } )) & (for n holds (n in ( dom F ) implies ( F . n ) = ( ( ( ( - 1 ) |^ n ) * ( ( card Y ) choose n ) ) * ( ( ( card Y ) - n ) |^ ( card X ) ) )))))))
proof
let X being  finite set,Y being  finite set;
assume that
A1: (X is non empty & Y is non empty);
reconsider c = ( ( card Y ) |^ ( card X ) ) as (Element of ( INT )) by INT_1:def 2;
A2: ( len <% c %> ) = 1 by AFINSQ_1:33;
set Onto = { f where f is (Function of X,Y): f is  onto };
consider F being (XFinSequence of ( INT )) such that A3: ( dom F ) = ( card Y ) and A4: ( ( ( card Y ) |^ ( card X ) ) - ( Sum F ) ) = ( card Onto ) and A5: (for n holds (n in ( dom F ) implies ( F . n ) = ( ( ( ( - 1 ) |^ n ) * ( ( card Y ) choose ( n + 1 ) ) ) * ( ( ( ( card Y ) - n ) - 1 ) |^ ( card X ) ) ))) by A1,CKB71:1;
set F1 = ( ( - 1 ) (#) F );
( rng F1 ) c= ( INT ) by VALUED_0:def 5;
then reconsider F1 as (XFinSequence of ( INT )) by RELAT_1:def 19;
A6: (( dom F1 ) = ( dom F ) & ( dom F ) = ( card Y )) by A3,VALUED_1:def 5;
reconsider GF1 = ( <% c %> ^ F1 ) as (XFinSequence of ( INT ));
take GF1;
( len F1 ) = ( card Y ) by A3,VALUED_1:def 5;
hence A7: ( dom GF1 ) = ( ( card Y ) + 1 ) by A2,AFINSQ_1:def 3;
( ( - 1 ) * ( Sum F ) ) = ( Sum F1 ) by AFINSQ_2:64;
then ( c - ( Sum F ) ) = ( c + ( Sum F1 ) )
.= ( ( addint ) . (c,( Sum F1 )) ) by BINOP_2:def 20
.= ( ( addint ) . (( ( addint ) "**" <% c %> ),( Sum F1 )) ) by AFINSQ_2:37
.= ( ( addint ) . (( ( addint ) "**" <% c %> ),( ( addint ) "**" F1 )) ) by AFINSQ_2:50
.= ( ( addint ) "**" GF1 ) by AFINSQ_2:42
.= ( Sum GF1 ) by AFINSQ_2:50;
hence ( Sum GF1 ) = ( card Onto ) by A4;
let n;
assume that
A8: n in ( dom GF1 );
now
per cases ;
suppose A9: n = ( 0 );

then (( ( - 1 ) |^ n ) = 1 & ( ( card Y ) choose n ) = 1) by NEWTON:4,NEWTON:19;
hence thesis by A9,AFINSQ_1:35;
end;
suppose n > ( 0 );

then reconsider n1 = ( n - 1 ) as (Element of ( NAT )) by NAT_1:20;
n < ( ( card Y ) + 1 ) by A7,A8,NAT_1:44;
then ( n1 + 1 ) <= ( card Y ) by NAT_1:13;
then n1 < ( card Y ) by NAT_1:13;
then A10: n1 in ( dom F1 ) by A6,NAT_1:44;
then A11: ( F . n1 ) = ( ( ( ( - 1 ) |^ n1 ) * ( ( card Y ) choose ( n1 + 1 ) ) ) * ( ( ( ( card Y ) - n1 ) - 1 ) |^ ( card X ) ) ) by A5,A6;
( len <% c %> ) = 1 by AFINSQ_1:33;
then A12: ( GF1 . ( n1 + 1 ) ) = ( F1 . n1 ) by A10,AFINSQ_1:def 3;
then A13: ( ( - 1 ) * ( ( - 1 ) |^ n1 ) ) = ( ( - 1 ) |^ n ) by NEWTON:6;
( GF1 . ( n1 + 1 ) ) = ( ( - 1 ) * ( F . n1 ) ) by A12,VALUED_1:6;
hence thesis by A11,A13;
end;
end;
hence thesis;
end;
