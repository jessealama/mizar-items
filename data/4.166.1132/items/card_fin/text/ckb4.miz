environ
vocabularies NUMBERS,SUBSET_1,FUNCT_1,NAT_1,TARSKI,FINSET_1,RELAT_1,AFINSQ_1,ARYTM_1,ARYTM_3,FINSEQ_1,XXREAL_0,CARD_1,XBOOLE_0,ORDINAL4,CARD_3,BINOP_1,FINSOP_1,FUNCOP_1,BINOP_2,FUNCT_2,INT_1,VALUED_1,NEWTON,REALSET1,ZFMISC_1,FUNCT_4,EQREL_1,SETFAM_1,STIRL2_1,CARD_FIN;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FUNCT_1,NAT_1,FINSET_1,ORDINAL1,XXREAL_0,NAT_D,AFINSQ_1,VALUED_1,RELSET_1,PARTFUN1,DOMAIN_1,FUNCT_2,FUNCT_4,FUNCOP_1,INT_1,ENUMSET1,BINOP_1,BINOP_2,RECDEF_1,AFINSQ_2,ZFMISC_1,NEWTON,STIRL2_1,YELLOW20;
definitions TARSKI,XBOOLE_0,FUNCT_1,FUNCOP_1,FINSET_1,RELAT_1;
theorems AFINSQ_1,TARSKI,FUNCT_1,XBOOLE_0,ZFMISC_1,RELAT_1,XBOOLE_1,NAT_1,FUNCT_2,FINSET_1,XCMPLX_1,CARD_2,INT_1,WELLORD2,SUBSET_1,ENUMSET1,CARD_1,BINOP_2,NEWTON,XREAL_1,FUNCOP_1,STIRL2_1,ALTCAT_1,FUNCT_5,IRRAT_1,FUNCT_4,YELLOW20,XXREAL_0,NAT_D,XREAL_0,PRE_POLY,AFINSQ_2,ORDINAL1,VALUED_1,VALUED_0,CKB1,CKB2,CKB3;
schemes FUNCT_2,NAT_1,XBOOLE_0,STIRL2_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FUNCOP_1,FUNCT_4,FINSET_1,FRAENKEL,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,BINOP_2,CARD_1,WSIERP_1,AFINSQ_1,RELSET_1,VALUED_1,VALUED_0,AFINSQ_2;
constructors PARTFUN3,BINOM,WELLORD2,DOMAIN_1,SETWISEO,REAL_1,NAT_D,YELLOW20,RECDEF_1,BINOP_2,RELSET_1,ORDINAL4,SEQ_1,AFINSQ_1,SEQ_4,AFINSQ_2,STIRL2_1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve X for  finite set;
reserve Y for  finite set;
reserve n for Nat;
reserve k for Nat;
reserve f for Function;
theorem
Th4: ((Y = ( {} ) implies X = ( {} )) implies ( card ( Funcs (X,Y) ) ) = ( ( card Y ) |^ ( card X ) ))
proof
assume A1: (Y = ( {} ) implies X = ( {} ));
per cases ;
suppose A2: Y is  empty;

then ( card ( Funcs (X,Y) ) ) = 1 by A1,ALTCAT_1:2,CARD_1:30;
hence thesis by A1,A2,CARD_1:27,NEWTON:4;
end;
suppose A3: Y is non  empty;

defpred P[ Nat ]
 means
(for X holds (for Y holds ((Y is non  empty & ( card X ) = $1) implies ( card ( Funcs (X,Y) ) ) = ( ( card Y ) |^ ( card X ) ))));
A4: (for n holds (P[ n ] implies P[ ( n + 1 ) ]))
proof
defpred Q[ set ]
 means
1 = 1;
let n;
assume that
A5: P[ n ];
let X;
let Y;
assume that
A6: Y is non  empty
and
A7: ( card X ) = ( n + 1 );
reconsider nn = n as (Element of ( NAT )) by ORDINAL1:def 12;
reconsider cY = ( ( card Y ) |^ nn ) as (Element of ( NAT ));
( card Y ),Y are_equipotent  by CARD_1:def 2;
then consider f being Function such that A8: f is  one-to-one and A9: ( dom f ) = ( card Y ) and A10: ( rng f ) = Y by WELLORD2:def 4;
reconsider f as (Function of ( card Y ),Y) by A9,A10,FUNCT_2:1;
consider x such that A11: x in X by A7,CARD_1:27,XBOOLE_0:def 1;
A12: f is  onto  one-to-one by A8,A10,FUNCT_2:def 3;
consider F being (XFinSequence of ( NAT )) such that A13: ( dom F ) = ( card Y ) and A14: ( card { g where g is (Function of X,Y): Q[ g ] } ) = ( Sum F ) and A15: (for k holds (k in ( dom F ) implies ( F . k ) = ( card { g where g is (Function of X,Y): (Q[ g ] & ( g . x ) = ( f . k )) } ))) from STIRL2_1:sch 6(A12,A6,A11);
A16: (for k being Nat holds (k in ( dom F ) implies ( F . k ) = cY))
proof
set Xx = ( X \ { x } );
let k being Nat;
assume that
A17: k in ( dom F );
A18: ( f . k ) in ( rng f ) by A9,A13,A17,FUNCT_1:def 3;
set F3 = { g where g is (Function of X,Y): (Q[ g ] & ( g . x ) = ( f . k )) };
set F2 = { g where g is (Function of ( Xx \/ { x } ),Y): ( g . x ) = ( f . k ) };
A19: F3 c= F2
proof
let G being set;
assume G in F3;
then A20: (ex g being (Function of X,Y) st ((g = G & Q[ g ]) & ( g . x ) = ( f . k )));
( Xx \/ { x } ) = X by A11,ZFMISC_1:116;
hence thesis by A20;
end;
F2 c= F3
proof
let G being set;
assume G in F2;
then A21: (ex g being (Function of ( Xx \/ { x } ),Y) st (g = G & ( g . x ) = ( f . k )));
( Xx \/ { x } ) = X by A11,ZFMISC_1:116;
hence thesis by A21;
end;
then A22: F2 = F3 by A19,XBOOLE_0:def 10;
( card Xx ) = n by A7,A11,STIRL2_1:55;
then A23: ( card ( Funcs (Xx,Y) ) ) = cY by A5,A18;
x in { x } by TARSKI:def 1;
then (not x in Xx) by XBOOLE_0:def 5;
then ( card ( Funcs (Xx,Y) ) ) = ( card F2 ) by A18,CKB3:1;
hence thesis by A15,A17,A22,A23;
end;
then (for k being Nat holds (k in ( dom F ) implies ( F . k ) >= cY));
then A24: ( Sum F ) >= ( ( len F ) * ( ( card Y ) |^ n ) ) by AFINSQ_2:60;
set F1 = { g where g is (Function of X,Y): Q[ g ] };
A25: ( Funcs (X,Y) ) c= F1
proof
let G being set;
assume G in ( Funcs (X,Y) );
then G is (Function of X,Y) by FUNCT_2:66;
hence thesis;
end;
F1 c= ( Funcs (X,Y) )
proof
let G being set;
assume G in F1;
then (ex g being (Function of X,Y) st (g = G & Q[ g ]));
hence thesis by A6,FUNCT_2:8;
end;
then A26: ( Funcs (X,Y) ) = F1 by A25,XBOOLE_0:def 10;
(for k being Nat holds (k in ( dom F ) implies ( F . k ) <= cY)) by A16;
then ( Sum F ) <= ( ( len F ) * ( ( card Y ) |^ n ) ) by AFINSQ_2:59;
then ( Sum F ) = ( ( card Y ) * ( ( card Y ) |^ n ) ) by A13,A24,XXREAL_0:1;
hence thesis by A7,A14,A26,NEWTON:6;
end;
A27: P[ ( 0 ) ]
proof
let X;
let Y;
assume that
Y is non  empty
and
A28: ( card X ) = ( 0 );
X is  empty by A28;
then ( Funcs (X,Y) ) = { ( {} ) } by FUNCT_5:57;
then ( card ( Funcs (X,Y) ) ) = 1 by CARD_1:30;
hence thesis by A28,NEWTON:4;
end;
(for n holds P[ n ]) from NAT_1:sch 2(A27,A4);
hence thesis by A3;
end;
end;
