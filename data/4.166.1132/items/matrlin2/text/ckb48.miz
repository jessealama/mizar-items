environ
vocabularies NUMBERS,NAT_1,VECTSP_1,SUBSET_1,RLSUB_1,XBOOLE_0,ARYTM_3,STRUCT_0,TARSKI,RLVECT_3,RLVECT_2,CARD_3,SUPINF_2,FINSET_1,FUNCT_1,RLSUB_2,FUNCT_2,RLVECT_5,MATRLIN,RELAT_1,CARD_1,XXREAL_0,FINSEQ_1,ZFMISC_1,ALGSTR_0,PARTFUN1,ORDINAL4,FINSEQ_2,INCSP_1,MESFUNC1,TREES_1,MATRIX_1,GROUP_1,ARYTM_1,FINSEQ_4,RFINSEQ,RANKNULL,MATRIXJ1,MATRIX_3,MATRIX_6,FVSUM_1,RVSUM_1,MATRIXR1,VECTSP10,MATRIX15,QC_LANG1,CLASSES1,PRVECT_1,MATRIX13,LMOD_7,VALUED_1,RLVECT_1,BINOP_1,LATTICES,MATRLIN2,UNIALG_1,MSSUBFAM;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,CARD_1,XCMPLX_0,ALGSTR_0,XXREAL_0,NAT_1,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,BINOP_1,STRUCT_0,RLVECT_1,GROUP_1,VECTSP_1,FINSEQ_2,MATRIX_1,FVSUM_1,MATRIX_3,MATRIX_6,DOMAIN_1,VECTSP_4,VECTSP_6,VECTSP_7,VECTSP_9,FINSEQOP,PRVECT_1,MATRIX13,MATRLIN,MATRIX15,RFINSEQ,WSIERP_1,GRCAT_1,MOD_2,VECTSP_5,RANKNULL,MATRIXJ1,CKB31,CKB32,CKB34,CKB39,CKB47;
definitions STRUCT_0,TARSKI,RLVECT_1,FINSEQ_1,VECTSP_4,FVSUM_1,VECTSP_1,MATRIX_1,MATRIX13,MATRLIN,MATRIX15,FUNCT_1,VECTSP_7,RANKNULL,VECTSP_6,CKB32,CKB34,CKB39;
theorems ZFMISC_1,RLVECT_1,MATRIX_1,MATRIX_2,MATRIX_4,MATRIX_3,VECTSP_1,NAT_1,FINSEQ_2,CARD_1,CARD_FIN,FINSEQ_1,FINSEQ_3,FINSEQOP,FUNCT_1,FUNCT_2,FUNCOP_1,FVSUM_1,LAPLACE,MATRIX_6,MATRIX_7,MATRIX11,MATRIX13,MATRIXR1,MATRIXR2,MATRLIN,ORDINAL1,PARTFUN1,RELAT_1,STRUCT_0,TARSKI,VECTSP_4,VECTSP_6,VECTSP_7,VECTSP_9,XBOOLE_0,XBOOLE_1,XXREAL_0,MATRIX15,MOD_2,RLVECT_2,POLYFORM,VECTSP10,MATRIX_8,RANKNULL,VECTSP_5,FINSEQ_5,RFINSEQ,MATRIXJ1,GRCAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB44,CKB45,CKB46;
schemes NAT_1,MATRIX_1,FUNCT_2,FINSEQ_2;
registrations XBOOLE_0,FUNCT_1,FINSET_1,STRUCT_0,VECTSP_1,FUNCT_2,ORDINAL1,XXREAL_0,NAT_1,FINSEQ_1,RELAT_1,FINSEQ_2,MATRLIN,MATRIX13,XREAL_0,VECTSP_9,CARD_1,MOD_2,GRCAT_1,PRVECT_1,CKB43;
constructors FVSUM_1,VECTSP_9,MATRIX_6,LAPLACE,MATRIX15,RANKNULL,VECTSP10,MATRIXJ1,XXREAL_0,REALSET1,BINARITH,RELSET_1,FINSOP_1,MATRIX13,CKB31,CKB32,CKB34,CKB39,CKB47;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve k for Nat;
reserve x for set;
reserve K for Field;
reserve V1 for  finite-dimensional (VectSp of K);
reserve V2 for  finite-dimensional (VectSp of K);
reserve b1 for (OrdBasis of V1);
reserve B2 for (FinSequence of V2);
theorem
(for A,B being (Matrix of ( len b1 ),( len B2 ),K) holds ( Mx2Tran (( A + B ),b1,B2) ) = ( ( Mx2Tran (A,b1,B2) ) + ( Mx2Tran (B,b1,B2) ) ))
proof
let A being (Matrix of ( len b1 ),( len B2 ),K);
let B being (Matrix of ( len b1 ),( len B2 ),K);
set AB = ( A + B );
set M = ( Mx2Tran (( A + B ),b1,B2) );
set MA = ( Mx2Tran (A,b1,B2) );
set MB = ( Mx2Tran (B,b1,B2) );
now
let x;
assume that
A1: x in (the carrier of V1);
reconsider v = x as (Element of V1) by A1;
now
per cases ;
suppose A2: ( len b1 ) = ( 0 );

hence ( M . x ) = ( 0. V2 ) by A1,CKB41:1
.= ( ( 0. V2 ) + ( 0. V2 ) ) by RLVECT_1:def 4
.= ( ( MA . v ) + ( 0. V2 ) ) by A2,CKB41:1
.= ( ( MA . v ) + ( MB . v ) ) by A2,CKB41:1
.= ( ( MA + MB ) . x ) by MATRLIN:def 3;
end;
suppose A3: ( len b1 ) > ( 0 );

set L = ( LineVec2Mx ( v |-- b1 ) );
A4: (( width L ) = ( len ( v |-- b1 ) ) & ( len ( v |-- b1 ) ) = ( len b1 )) by MATRIX_1:23,MATRLIN:def 7;
set mB = ( lmlt (( Line (( L * B ),1) ),B2) );
A5: (( len B ) = ( len b1 ) & ( width B ) = ( len B2 )) by A3,MATRIX_1:23;
then A6: ( width ( L * B ) ) = ( len B2 ) by A4,MATRIX_3:def 4;
then ( len ( Line (( L * B ),1) ) ) = ( len B2 ) by CARD_1:def 7;
then ( dom ( Line (( L * B ),1) ) ) = ( dom B2 ) by FINSEQ_3:29;
then A7: ( dom mB ) = ( dom B2 ) by MATRLIN:12;
then A8: ( len mB ) = ( len B2 ) by FINSEQ_3:29;
A9: ( len A ) = ( len b1 ) by A3,MATRIX_1:23;
A10: ( len L ) = 1 by MATRIX_1:23;
then A11: ( len ( L * A ) ) = 1 by A9,A4,MATRIX_3:def 4;
set mA = ( lmlt (( Line (( L * A ),1) ),B2) );
A12: ( width A ) = ( len B2 ) by A3,MATRIX_1:23;
then A13: ( width ( L * A ) ) = ( len B2 ) by A9,A4,MATRIX_3:def 4;
then ( len ( Line (( L * A ),1) ) ) = ( len B2 ) by CARD_1:def 7;
then ( dom ( Line (( L * A ),1) ) ) = ( dom B2 ) by FINSEQ_3:29;
then A14: ( dom mA ) = ( dom B2 ) by MATRLIN:12;
then A15: ( len mA ) = ( len B2 ) by FINSEQ_3:29;
A16: ( dom ( mA + mB ) ) = ( ( dom B2 ) /\ ( dom B2 ) ) by A14,A7,CKB9:1
.= ( dom B2 );
then A17: ( len ( mA + mB ) ) = ( len B2 ) by FINSEQ_3:29;
A18:now
let k being (Element of ( NAT ));
assume that
A19: k in ( dom mA );
(( mA /. k ) = ( mA . k ) & ( mB /. k ) = ( mB . k )) by A14,A7,A19,PARTFUN1:def 6;
hence ( ( mA + mB ) . k ) = ( ( mA /. k ) + ( mB /. k ) ) by A14,A16,A19,FVSUM_1:17;
end;
thus ( M . x ) = ( Sum ( lmlt (( Line (( L * AB ),1) ),B2) ) ) by CKB39:def 1
.= ( Sum ( lmlt (( Line (( ( L * A ) + ( L * B ) ),1) ),B2) ) ) by A3,A10,A9,A12,A5,A4,MATRIX_4:62
.= ( Sum ( lmlt (( ( Line (( L * A ),1) ) + ( Line (( L * B ),1) ) ),B2) ) ) by A11,A13,A6,CKB42:1
.= ( Sum ( mA + mB ) ) by CKB10:1
.= ( ( Sum mA ) + ( Sum mB ) ) by A15,A8,A17,A18,RLVECT_2:2
.= ( ( MA . v ) + ( Sum mB ) ) by CKB39:def 1
.= ( ( MA . v ) + ( MB . v ) ) by CKB39:def 1
.= ( ( MA + MB ) . x ) by MATRLIN:def 3;
end;
end;
hence ( M . x ) = ( ( MA + MB ) . x );
end;
hence thesis by FUNCT_2:12;
end;
