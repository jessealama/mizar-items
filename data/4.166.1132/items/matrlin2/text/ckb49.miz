environ
vocabularies NUMBERS,NAT_1,VECTSP_1,SUBSET_1,RLSUB_1,XBOOLE_0,ARYTM_3,STRUCT_0,TARSKI,RLVECT_3,RLVECT_2,CARD_3,SUPINF_2,FINSET_1,FUNCT_1,RLSUB_2,FUNCT_2,RLVECT_5,MATRLIN,RELAT_1,CARD_1,XXREAL_0,FINSEQ_1,ZFMISC_1,ALGSTR_0,PARTFUN1,ORDINAL4,FINSEQ_2,INCSP_1,MESFUNC1,TREES_1,MATRIX_1,GROUP_1,ARYTM_1,FINSEQ_4,RFINSEQ,RANKNULL,MATRIXJ1,MATRIX_3,MATRIX_6,FVSUM_1,RVSUM_1,MATRIXR1,VECTSP10,MATRIX15,QC_LANG1,CLASSES1,PRVECT_1,MATRIX13,LMOD_7,VALUED_1,RLVECT_1,BINOP_1,LATTICES,MATRLIN2,UNIALG_1,MSSUBFAM;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,CARD_1,XCMPLX_0,ALGSTR_0,XXREAL_0,NAT_1,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,BINOP_1,STRUCT_0,RLVECT_1,GROUP_1,VECTSP_1,FINSEQ_2,MATRIX_1,FVSUM_1,MATRIX_3,MATRIX_6,DOMAIN_1,VECTSP_4,VECTSP_6,VECTSP_7,VECTSP_9,FINSEQOP,PRVECT_1,MATRIX13,MATRLIN,MATRIX15,RFINSEQ,WSIERP_1,GRCAT_1,MOD_2,VECTSP_5,RANKNULL,MATRIXJ1,CKB31,CKB32,CKB34,CKB39,CKB47;
definitions STRUCT_0,TARSKI,RLVECT_1,FINSEQ_1,VECTSP_4,FVSUM_1,VECTSP_1,MATRIX_1,MATRIX13,MATRLIN,MATRIX15,FUNCT_1,VECTSP_7,RANKNULL,VECTSP_6,CKB32,CKB34,CKB39;
theorems ZFMISC_1,RLVECT_1,MATRIX_1,MATRIX_2,MATRIX_4,MATRIX_3,VECTSP_1,NAT_1,FINSEQ_2,CARD_1,CARD_FIN,FINSEQ_1,FINSEQ_3,FINSEQOP,FUNCT_1,FUNCT_2,FUNCOP_1,FVSUM_1,LAPLACE,MATRIX_6,MATRIX_7,MATRIX11,MATRIX13,MATRIXR1,MATRIXR2,MATRLIN,ORDINAL1,PARTFUN1,RELAT_1,STRUCT_0,TARSKI,VECTSP_4,VECTSP_6,VECTSP_7,VECTSP_9,XBOOLE_0,XBOOLE_1,XXREAL_0,MATRIX15,MOD_2,RLVECT_2,POLYFORM,VECTSP10,MATRIX_8,RANKNULL,VECTSP_5,FINSEQ_5,RFINSEQ,MATRIXJ1,GRCAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB44,CKB45,CKB46,CKB48;
schemes NAT_1,MATRIX_1,FUNCT_2,FINSEQ_2;
registrations XBOOLE_0,FUNCT_1,FINSET_1,STRUCT_0,VECTSP_1,FUNCT_2,ORDINAL1,XXREAL_0,NAT_1,FINSEQ_1,RELAT_1,FINSEQ_2,MATRLIN,MATRIX13,XREAL_0,VECTSP_9,CARD_1,MOD_2,GRCAT_1,PRVECT_1,CKB43;
constructors FVSUM_1,VECTSP_9,MATRIX_6,LAPLACE,MATRIX15,RANKNULL,VECTSP10,MATRIXJ1,XXREAL_0,REALSET1,BINARITH,RELSET_1,FINSOP_1,MATRIX13,CKB31,CKB32,CKB34,CKB39,CKB47;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve k for Nat;
reserve x for set;
reserve K for Field;
reserve a for (Element of K);
reserve V1 for  finite-dimensional (VectSp of K);
reserve V2 for  finite-dimensional (VectSp of K);
reserve b1 for (OrdBasis of V1);
reserve B2 for (FinSequence of V2);
theorem
(for A being (Matrix of ( len b1 ),( len B2 ),K) holds ( a * ( Mx2Tran (A,b1,B2) ) ) = ( Mx2Tran (( a * A ),b1,B2) ))
proof
let A being (Matrix of ( len b1 ),( len B2 ),K);
set aA = ( a * A );
set aM = ( Mx2Tran (aA,b1,B2) );
set M = ( Mx2Tran (A,b1,B2) );
now
let x;
assume x in (the carrier of V1);
then reconsider v = x as (Element of V1);
set L = ( LineVec2Mx ( v |-- b1 ) );
set amA = ( lmlt (( a * ( Line (( L * A ),1) ) ),B2) );
set mA = ( lmlt (( Line (( L * A ),1) ),B2) );
A1: (( width L ) = ( len ( v |-- b1 ) ) & ( len ( v |-- b1 ) ) = ( len b1 )) by MATRIX_1:23,MATRLIN:def 7;
A2: ( len A ) = ( len b1 ) by MATRIX_1:def 2;
( len L ) = 1 by MATRIX_1:23;
then A3: ( len ( L * A ) ) = 1 by A1,A2,MATRIX_3:def 4;
A4: ( dom mA ) = ( ( dom ( Line (( L * A ),1) ) ) /\ ( dom B2 ) ) by CKB7:1;
( len ( a * ( Line (( L * A ),1) ) ) ) = ( len ( Line (( L * A ),1) ) ) by MATRIXR1:16;
then A5: ( dom ( a * ( Line (( L * A ),1) ) ) ) = ( dom ( Line (( L * A ),1) ) ) by FINSEQ_3:29;
A6: ( dom amA ) = ( ( dom ( a * ( Line (( L * A ),1) ) ) ) /\ ( dom B2 ) ) by CKB7:1;
then A7: ( len mA ) = ( len amA ) by A5,A4,FINSEQ_3:29;
A8:now
let k being (Element of ( NAT ));
assume that
A9: k in ( dom mA );
A10: ( mA . k ) = ( mA /. k ) by A9,PARTFUN1:def 6;
k in ( dom ( Line (( L * A ),1) ) ) by A4,A9,XBOOLE_0:def 4;
then A11: ( ( Line (( L * A ),1) ) . k ) = ( ( Line (( L * A ),1) ) /. k ) by PARTFUN1:def 6;
k in ( dom B2 ) by A4,A9,XBOOLE_0:def 4;
then A12: ( B2 . k ) = ( B2 /. k ) by PARTFUN1:def 6;
k in ( dom ( a * ( Line (( L * A ),1) ) ) ) by A5,A4,A9,XBOOLE_0:def 4;
then ( ( a * ( Line (( L * A ),1) ) ) . k ) = ( a * ( ( Line (( L * A ),1) ) /. k ) ) by A11,FVSUM_1:50;
hence ( amA . k ) = ( ( a * ( ( Line (( L * A ),1) ) /. k ) ) * ( B2 /. k ) ) by A6,A5,A4,A9,A12,FUNCOP_1:22
.= ( a * ( ( ( Line (( L * A ),1) ) /. k ) * ( B2 /. k ) ) ) by VECTSP_1:def 16
.= ( a * ( mA /. k ) ) by A9,A11,A12,A10,FUNCOP_1:22;
end;
thus ( aM . x ) = ( Sum ( lmlt (( Line (( L * aA ),1) ),B2) ) ) by CKB39:def 1
.= ( Sum ( lmlt (( Line (( a * ( L * A ) ),1) ),B2) ) ) by A1,A2,MATRIXR1:22
.= ( Sum amA ) by A3,MATRIXR1:20
.= ( a * ( Sum mA ) ) by A7,A8,RLVECT_2:67
.= ( a * ( M . v ) ) by CKB39:def 1
.= ( ( a * M ) . x ) by MATRLIN:def 4;
end;
hence thesis by FUNCT_2:12;
end;
