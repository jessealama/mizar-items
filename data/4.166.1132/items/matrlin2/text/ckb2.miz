environ
vocabularies NUMBERS,NAT_1,VECTSP_1,SUBSET_1,RLSUB_1,XBOOLE_0,ARYTM_3,STRUCT_0,TARSKI,RLVECT_3,RLVECT_2,CARD_3,SUPINF_2,FINSET_1,FUNCT_1,RLSUB_2,FUNCT_2,RLVECT_5,MATRLIN,RELAT_1,CARD_1,XXREAL_0,FINSEQ_1,ZFMISC_1,ALGSTR_0,PARTFUN1,ORDINAL4,FINSEQ_2,INCSP_1,MESFUNC1,TREES_1,MATRIX_1,GROUP_1,ARYTM_1,FINSEQ_4,RFINSEQ,RANKNULL,MATRIXJ1,MATRIX_3,MATRIX_6,FVSUM_1,RVSUM_1,MATRIXR1,VECTSP10,MATRIX15,QC_LANG1,CLASSES1,PRVECT_1,MATRIX13,LMOD_7,VALUED_1,RLVECT_1,BINOP_1,LATTICES,MATRLIN2,UNIALG_1,MSSUBFAM;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,CARD_1,XCMPLX_0,ALGSTR_0,XXREAL_0,NAT_1,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,BINOP_1,STRUCT_0,RLVECT_1,GROUP_1,VECTSP_1,FINSEQ_2,MATRIX_1,FVSUM_1,MATRIX_3,MATRIX_6,DOMAIN_1,VECTSP_4,VECTSP_6,VECTSP_7,VECTSP_9,FINSEQOP,PRVECT_1,MATRIX13,MATRLIN,MATRIX15,RFINSEQ,WSIERP_1,GRCAT_1,MOD_2,VECTSP_5,RANKNULL,MATRIXJ1;
definitions STRUCT_0,TARSKI,RLVECT_1,FINSEQ_1,VECTSP_4,FVSUM_1,VECTSP_1,MATRIX_1,MATRIX13,MATRLIN,MATRIX15,FUNCT_1,VECTSP_7,RANKNULL,VECTSP_6;
theorems ZFMISC_1,RLVECT_1,MATRIX_1,MATRIX_2,MATRIX_4,MATRIX_3,VECTSP_1,NAT_1,FINSEQ_2,CARD_1,CARD_FIN,FINSEQ_1,FINSEQ_3,FINSEQOP,FUNCT_1,FUNCT_2,FUNCOP_1,FVSUM_1,LAPLACE,MATRIX_6,MATRIX_7,MATRIX11,MATRIX13,MATRIXR1,MATRIXR2,MATRLIN,ORDINAL1,PARTFUN1,RELAT_1,STRUCT_0,TARSKI,VECTSP_4,VECTSP_6,VECTSP_7,VECTSP_9,XBOOLE_0,XBOOLE_1,XXREAL_0,MATRIX15,MOD_2,RLVECT_2,POLYFORM,VECTSP10,MATRIX_8,RANKNULL,VECTSP_5,FINSEQ_5,RFINSEQ,MATRIXJ1,GRCAT_1,CKB1;
schemes NAT_1,MATRIX_1,FUNCT_2,FINSEQ_2;
registrations XBOOLE_0,FUNCT_1,FINSET_1,STRUCT_0,VECTSP_1,FUNCT_2,ORDINAL1,XXREAL_0,NAT_1,FINSEQ_1,RELAT_1,FINSEQ_2,MATRLIN,MATRIX13,XREAL_0,VECTSP_9,CARD_1,MOD_2,GRCAT_1,PRVECT_1;
constructors FVSUM_1,VECTSP_9,MATRIX_6,LAPLACE,MATRIX15,RANKNULL,VECTSP10,MATRIXJ1,XXREAL_0,REALSET1,BINARITH,RELSET_1,FINSOP_1,MATRIX13;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve x for set;
reserve K for Field;
theorem
Th2: (for V being (VectSp of K) holds (for W1,W2 being (Subspace of V) holds (( W1 /\ W2 ) = ( (0). V ) implies (for B1 being  linearly-independent (Subset of W1) holds (for B2 being  linearly-independent (Subset of W2) holds ( B1 \/ B2 ) is  linearly-independent  linearly-independent (Subset of ( W1 + W2 )))))))
proof
let V being (VectSp of K);
let W1 being (Subspace of V);
let W2 being (Subspace of V);
assume that
A1: ( W1 /\ W2 ) = ( (0). V );
reconsider W19 = W1,W29 = W2 as (Subspace of ( W1 + W2 )) by VECTSP_5:7;
let B1 being  linearly-independent (Subset of W1);
let B2 being  linearly-independent (Subset of W2);
A2: W2 is (Subspace of ( W1 + W2 )) by VECTSP_5:7;
then (the carrier of W2) c= (the carrier of ( W1 + W2 )) by VECTSP_4:def 2;
then A3: B2 c= (the carrier of ( W1 + W2 )) by XBOOLE_1:1;
A4: W1 is (Subspace of ( W1 + W2 )) by VECTSP_5:7;
then (the carrier of W1) c= (the carrier of ( W1 + W2 )) by VECTSP_4:def 2;
then B1 c= (the carrier of ( W1 + W2 )) by XBOOLE_1:1;
then reconsider B12 = ( B1 \/ B2 ),B19 = B1,B29 = B2 as (Subset of ( W1 + W2 )) by A3,XBOOLE_1:8;
B12 is  linearly-independent
proof
let L being (Linear_Combination of B12);
assume ( Sum L ) = ( 0. ( W1 + W2 ) );
then A5: ( Sum L ) = ( ( 0. ( W1 + W2 ) ) + ( 0. ( W1 + W2 ) ) ) by RLVECT_1:def 4;
set C = ( ( Carrier L ) /\ B1 );
defpred P[ set ]
 means
$1 in C;
C c= ( Carrier L ) by XBOOLE_1:17;
then reconsider C as  finite (Subset of ( W1 + W2 )) by XBOOLE_1:1;
set D = ( ( Carrier L ) \ B1 );
deffunc G(set) = ( L . $1 );
defpred C[ set ]
 means
$1 in D;
reconsider D as  finite (Subset of ( W1 + W2 ));
A6: D c= B29
proof
let x;
assume x in D;
then A7: (x in ( Carrier L ) & (not x in B19)) by XBOOLE_0:def 5;
( Carrier L ) c= B12 by VECTSP_6:def 4;
hence thesis by A7,XBOOLE_0:def 3;
end;
( (0). V ) = ( (0). ( W1 + W2 ) ) by VECTSP_4:36;
then A8: ( W19 /\ W29 ) = ( (0). ( W1 + W2 ) ) by A1,CKB1:1;
( W19 + W29 ) = ( W1 + W2 ) by CKB1:1;
then A9: ( W1 + W2 ) is_the_direct_sum_of W19,W29 by A8,VECTSP_5:def 4;
A10: B29 is  linearly-independent by A2,VECTSP_9:11;
A11: B19 is  linearly-independent by A4,VECTSP_9:11;
deffunc F(set) = ( 0. K );
A12: (( 0. W1 ) in W19 & ( 0. W2 ) in W29) by STRUCT_0:def 5;
A13:now
let x;
assume x in (the carrier of ( W1 + W2 ));
then reconsider v = x as (Vector of ( W1 + W2 ));
( L . v ) in (the carrier of K);
hence (P[ x ] implies G(x) in (the carrier of K));
assume (not P[ x ]);
thus F(x) in (the carrier of K);
end;
consider f being (Function of (the carrier of ( W1 + W2 )),(the carrier of K)) such that A14: (for x holds (x in (the carrier of ( W1 + W2 )) implies ((P[ x ] implies ( f . x ) = G(x)) & ((not P[ x ]) implies ( f . x ) = F(x))))) from FUNCT_2:sch 5(A13);
deffunc G(set) = ( L . $1 );
A15:now
let x;
assume x in (the carrier of ( W1 + W2 ));
then reconsider v = x as (Vector of ( W1 + W2 ));
( L . v ) in (the carrier of K);
hence (C[ x ] implies G(x) in (the carrier of K));
assume (not C[ x ]);
thus F(x) in (the carrier of K);
end;
consider g being (Function of (the carrier of ( W1 + W2 )),(the carrier of K)) such that A16: (for x holds (x in (the carrier of ( W1 + W2 )) implies ((C[ x ] implies ( g . x ) = G(x)) & ((not C[ x ]) implies ( g . x ) = F(x))))) from FUNCT_2:sch 5(A15);
reconsider g as (Element of ( Funcs ((the carrier of ( W1 + W2 )),(the carrier of K)) )) by FUNCT_2:8;
(for u being (Vector of ( W1 + W2 )) holds ((not u in D) implies ( g . u ) = ( 0. K ))) by A16;
then reconsider g as (Linear_Combination of ( W1 + W2 )) by VECTSP_6:def 1;
A17: ( Carrier g ) c= D
proof
let x;
assume x in ( Carrier g );
then A18: (ex u being (Vector of ( W1 + W2 )) st (x = u & ( g . u ) <> ( 0. K )));
assume (not x in D);
hence thesis by A16,A18;
end;
then ( Carrier g ) c= B29 by A6,XBOOLE_1:1;
then reconsider g as (Linear_Combination of B29) by VECTSP_6:def 4;
reconsider f as (Element of ( Funcs ((the carrier of ( W1 + W2 )),(the carrier of K)) )) by FUNCT_2:8;
(for u being (Vector of ( W1 + W2 )) holds ((not u in C) implies ( f . u ) = ( 0. K ))) by A14;
then reconsider f as (Linear_Combination of ( W1 + W2 )) by VECTSP_6:def 1;
A19: ( Carrier f ) c= B19
proof
let x;
assume x in ( Carrier f );
then A20: (ex u being (Vector of ( W1 + W2 )) st (x = u & ( f . u ) <> ( 0. K )));
assume (not x in B19);
then (not x in C) by XBOOLE_0:def 4;
hence thesis by A14,A20;
end;
then reconsider f as (Linear_Combination of B19) by VECTSP_6:def 4;
(ex f1 being (Linear_Combination of W19) st (( Carrier f1 ) = ( Carrier f ) & ( Sum f ) = ( Sum f1 ))) by A19,VECTSP_9:9,XBOOLE_1:1;
then A21: ( Sum f ) in W19 by STRUCT_0:def 5;
A22: L = ( f + g )
proof
let v being (Vector of ( W1 + W2 ));
now
per cases ;
suppose A23: v in C;

A24:now
assume v in D;
then (not v in B19) by XBOOLE_0:def 5;
hence contradiction by A23,XBOOLE_0:def 4;
end;
thus ( ( f + g ) . v ) = ( ( f . v ) + ( g . v ) ) by VECTSP_6:22
.= ( ( L . v ) + ( g . v ) ) by A14,A23
.= ( ( L . v ) + ( 0. K ) ) by A16,A24
.= ( L . v ) by RLVECT_1:4;
end;
suppose A25: (not v in C);

now
per cases ;
suppose A26: v in ( Carrier L );

A27:now
assume (not v in D);
then ((not v in ( Carrier L )) or v in B19) by XBOOLE_0:def 5;
hence contradiction by A25,A26,XBOOLE_0:def 4;
end;
thus ( ( f + g ) . v ) = ( ( f . v ) + ( g . v ) ) by VECTSP_6:22
.= ( ( g . v ) + ( 0. K ) ) by A14,A25
.= ( g . v ) by RLVECT_1:4
.= ( L . v ) by A16,A27;
end;
suppose A28: (not v in ( Carrier L ));

then A29: (not v in D) by XBOOLE_0:def 5;
A30: (not v in C) by A28,XBOOLE_0:def 4;
thus ( ( f + g ) . v ) = ( ( f . v ) + ( g . v ) ) by VECTSP_6:22
.= ( ( 0. K ) + ( g . v ) ) by A14,A30
.= ( ( 0. K ) + ( 0. K ) ) by A16,A29
.= ( 0. K ) by RLVECT_1:4
.= ( L . v ) by A28;
end;
end;
hence thesis;
end;
end;
hence thesis;
end;
then A31: ( Sum L ) = ( ( Sum f ) + ( Sum g ) ) by VECTSP_6:44;
( Carrier g ) c= B2 by A17,A6,XBOOLE_1:1;
then (ex g1 being (Linear_Combination of W29) st (( Carrier g1 ) = ( Carrier g ) & ( Sum g ) = ( Sum g1 ))) by VECTSP_9:9,XBOOLE_1:1;
then A32: ( Sum g ) in W29 by STRUCT_0:def 5;
A33: (( 0. ( W1 + W2 ) ) = ( 0. W19 ) & ( 0. ( W1 + W2 ) ) = ( 0. W29 )) by VECTSP_4:11;
then ( Sum f ) = ( 0. ( W1 + W2 ) ) by A31,A21,A32,A9,A12,A5,VECTSP_5:48;
then A34: ( Carrier f ) = ( {} ) by A11,VECTSP_7:def 1;
( Sum g ) = ( 0. ( W1 + W2 ) ) by A31,A21,A32,A9,A33,A12,A5,VECTSP_5:48;
then A35: ( Carrier g ) = ( {} ) by A10,VECTSP_7:def 1;
( ( {} ) \/ ( {} ) ) = ( {} );
hence thesis by A22,A34,A35,VECTSP_6:23,XBOOLE_1:3;
end;
hence thesis;
end;
