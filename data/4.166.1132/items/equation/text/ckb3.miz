environ
vocabularies XBOOLE_0,FUNCT_1,RELAT_1,TARSKI,PBOOLE,MEMBER_1,MSUALG_3,FUNCT_2,FUNCT_6,PZFMISC1,SUBSET_1,REALSET1,STRUCT_0,MSUALG_1,MSUALG_2,UNIALG_2,PARTFUN1,PRALG_2,CARD_3,RLVECT_2,PRELAMB,MSAFREE,FINSET_1,MSAFREE2,MSUALG_6,MARGREL1,NAT_1,GROUP_6,CLOSURE2,ZFMISC_1,FINSEQ_1,CARD_1,PRALG_3,FUNCT_4,FUNCOP_1,NUMBERS,ZF_LANG,MCART_1,ZF_MODEL,WELLORD1,MSUALG_4,EQUATION;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,RELAT_1,FUNCT_1,PBOOLE,RELSET_1,PARTFUN1,STRUCT_0,FUNCT_2,MCART_1,FINSET_1,NAT_1,FINSEQ_1,FINSEQ_2,FUNCT_4,FUNCT_6,PZFMISC1,CARD_3,MSUALG_1,PRALG_2,FUNCOP_1,MSUALG_2,PRALG_3,MSUALG_3,MSUALG_4,MSAFREE,MSAFREE2,CLOSURE2,MSUALG_6;
definitions TARSKI,PBOOLE,PRALG_2,MSUALG_2,MSUALG_3,FINSET_1,MSAFREE,MSAFREE2,MSUALG_1,XBOOLE_0,PZFMISC1;
theorems MSUALG_1,EXTENS_1,MSAFREE2,MSSCYC_1,CARD_3,FUNCT_4,FUNCOP_1,FUNCT_1,FUNCT_2,MCART_1,MSAFREE,FINSEQ_1,CLOSURE2,FINSET_1,MSUALG_2,MSUALG_3,MSUALG_4,MSUALG_9,PBOOLE,PARTFUN1,MSUALG_6,AUTALG_1,MSSUBFAM,INSTALG1,PRALG_2,PRALG_3,RELAT_1,TARSKI,ZFMISC_1,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCT_6,PZFMISC1,FINSEQ_2,CKB1,CKB2;
schemes MSSUBFAM,PBOOLE,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,FUNCOP_1,FINSET_1,FINSEQ_1,STRUCT_0,MSUALG_1,MSUALG_2,RELAT_1,FUNCT_1,PRALG_2,MSUALG_3,MSAFREE,MSUALG_4,EXTENS_1,CLOSURE2,MSUALG_6,PRALG_3,MSUALG_9,MSSUBFAM,PBOOLE,AUTALG_1;
constructors FUNCT_4,PZFMISC1,MSSUBFAM,MSUALG_3,MSAFREE2,CLOSURE2,MSUALG_6,PRALG_3,RELSET_1,FINSEQ_2;
requirements SUBSET,BOOLE;
begin
theorem
Th3: (for A,B being non  empty set holds (for C,y being set holds (for f being Function holds ((f in ( Funcs (A,( Funcs (B,C) )) ) & y in B) implies (( dom ( ( commute f ) . y ) ) = A & ( rng ( ( commute f ) . y ) ) c= C)))))
proof
let A being non  empty set;
let B being non  empty set;
let C being set;
let y being set;
let f being Function;
assume that
A1: f in ( Funcs (A,( Funcs (B,C) )) )
and
A2: y in B;
set cf = ( commute f );
cf in ( Funcs (B,( Funcs (A,C) )) ) by A1,FUNCT_6:55;
then A3: (ex g being Function st ((g = cf & ( dom g ) = B) & ( rng g ) c= ( Funcs (A,C) ))) by FUNCT_2:def 2;
then ( cf . y ) in ( rng cf ) by A2,FUNCT_1:def 3;
then (ex t being Function st ((t = ( ( commute f ) . y ) & ( dom t ) = A) & ( rng t ) c= C)) by A3,FUNCT_2:def 2;
hence thesis;
end;
