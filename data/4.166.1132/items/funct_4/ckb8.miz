environ
vocabularies XBOOLE_0,FUNCT_1,TARSKI,ZFMISC_1,RELAT_1,FUNCOP_1,SUBSET_1,PARTFUN1,FUNCT_2,ORDINAL1,FUNCT_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,BINOP_1,PARTFUN1,FUNCOP_1;
definitions TARSKI,FUNCT_2,PARTFUN1,XBOOLE_0,BINOP_1,FUNCOP_1,FUNCT_1;
theorems TARSKI,FUNCT_1,FUNCT_2,GRFUNC_1,PARTFUN1,FUNCOP_1,ZFMISC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,ENUMSET1,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7;
schemes FUNCT_1,PARTFUN1,XBOOLE_0;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCOP_1,RELSET_1,ZFMISC_1;
constructors PARTFUN1,BINOP_1,FUNCOP_1,RELSET_1,ORDINAL1;
requirements BOOLE,SUBSET;
begin
reserve x for set;
reserve y for set;
reserve f for Function;
theorem
(x in ( dom f ) implies ( x .--> ( f . x ) ) c= f)
proof
A1:now
let y;
assume y in ( dom ( x .--> ( f . x ) ) );
then x = y by FUNCOP_1:75;
hence ( ( x .--> ( f . x ) ) . y ) = ( f . y ) by FUNCOP_1:72;
end;
assume A2: x in ( dom f );
( dom ( x .--> ( f . x ) ) ) c= ( dom f )
proof
let y;
thus thesis by A2,FUNCOP_1:75;
end;
hence thesis by A1,GRFUNC_1:2;
end;
