environ
vocabularies XBOOLE_0,FUNCT_1,TARSKI,ZFMISC_1,RELAT_1,FUNCOP_1,SUBSET_1,PARTFUN1,FUNCT_2,ORDINAL1,FUNCT_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,BINOP_1,PARTFUN1,FUNCOP_1;
definitions TARSKI,FUNCT_2,PARTFUN1,XBOOLE_0,BINOP_1,FUNCOP_1,FUNCT_1;
theorems TARSKI,FUNCT_1,FUNCT_2,GRFUNC_1,PARTFUN1,FUNCOP_1,ZFMISC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,ENUMSET1,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
schemes FUNCT_1,PARTFUN1,XBOOLE_0;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCOP_1,RELSET_1,ZFMISC_1;
constructors PARTFUN1,BINOP_1,FUNCOP_1,RELSET_1,ORDINAL1;
requirements BOOLE,SUBSET;
begin
reserve x for set;
reserve f for Function;
reserve g for Function;
definition
let f;
let g;
func f +* g -> Function
means
:Def1: (( dom it ) = ( ( dom f ) \/ ( dom g ) ) & (for x holds (x in ( ( dom f ) \/ ( dom g ) ) implies ((x in ( dom g ) implies ( it . x ) = ( g . x )) & ((not x in ( dom g )) implies ( it . x ) = ( f . x ))))));
existence
proof
deffunc G(set) = ( f . $1 );
deffunc F(set) = ( g . $1 );
defpred P[ set ]
 means
$1 in ( dom g );
thus (ex F being Function st (( dom F ) = ( ( dom f ) \/ ( dom g ) ) & (for x holds (x in ( ( dom f ) \/ ( dom g ) ) implies ((P[ x ] implies ( F . x ) = F(x)) & ((not P[ x ]) implies ( F . x ) = G(x))))))) from PARTFUN1:sch 1;
end;
uniqueness
proof
let h1 being Function,h2 being Function;
assume that
A1: ( dom h1 ) = ( ( dom f ) \/ ( dom g ) )
and
A2: (for x holds (x in ( ( dom f ) \/ ( dom g ) ) implies ((x in ( dom g ) implies ( h1 . x ) = ( g . x )) & ((not x in ( dom g )) implies ( h1 . x ) = ( f . x )))))
and
A3: ( dom h2 ) = ( ( dom f ) \/ ( dom g ) )
and
A4: (for x holds (x in ( ( dom f ) \/ ( dom g ) ) implies ((x in ( dom g ) implies ( h2 . x ) = ( g . x )) & ((not x in ( dom g )) implies ( h2 . x ) = ( f . x )))));
(for x holds (x in ( ( dom f ) \/ ( dom g ) ) implies ( h1 . x ) = ( h2 . x )))
proof
let x;
assume A5: x in ( ( dom f ) \/ ( dom g ) );
then A6: ((not x in ( dom g )) implies (( h1 . x ) = ( f . x ) & ( h2 . x ) = ( f . x ))) by A2,A4;
(x in ( dom g ) implies (( h1 . x ) = ( g . x ) & ( h2 . x ) = ( g . x ))) by A2,A4,A5;
hence thesis by A6;
end;
hence thesis by A1,A3,FUNCT_1:2;
end;
idempotence;
end;
