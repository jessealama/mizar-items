environ
vocabularies DIRAF,SUBSET_1,FUNCT_2,STRUCT_0,AFF_2,ANALOAF,INCSP_1,AFF_1,TRANSGEO,FUNCT_1,RELAT_1,TARSKI,HOMOTHET;
notations TARSKI,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,ANALOAF,DIRAF,AFF_1,AFF_2,TRANSGEO;
theorems TRANSGEO,AFF_1,AFF_2,TRANSLAC,SUBSET_1,DIRAF,FUNCT_1,XBOOLE_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8;
schemes TRANSGEO;
registrations STRUCT_0;
constructors PARTFUN1,AFF_1,AFF_2,TRANSGEO,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve AFP for AffinPlane;
reserve a for (Element of AFP);
reserve b for (Element of AFP);
reserve o for (Element of AFP);
reserve p for (Element of AFP);
reserve p9 for (Element of AFP);
reserve x for (Element of AFP);
reserve y for (Element of AFP);
theorem
Lm7: (((o <> a & x = o) & ((((not  LIN o,a,x) &  LIN o,x,y) & a,x // b,y) or ( LIN o,a,x & (ex p st (ex p9 st (((((not  LIN o,a,p) &  LIN o,p,p9) & a,p // b,p9) & p,x // p9,y) &  LIN o,a,y)))))) implies y = o)
proof
assume that
A1: o <> a
and
A2: x = o
and
A3: ((((not  LIN o,a,x) &  LIN o,x,y) & a,x // b,y) or ( LIN o,a,x & (ex p st (ex p9 st (((((not  LIN o,a,p) &  LIN o,p,p9) & a,p // b,p9) & p,x // p9,y) &  LIN o,a,y)))));
consider p,p9 such that A4: (not  LIN o,a,p) and A5:  LIN o,p,p9 and a,p // b,p9 and A6: p,x // p9,y and A7:  LIN o,a,y by A2,A3,AFF_1:7;
set K = ( Line (o,p) );
A8: o <> p by A4,AFF_1:7;
p9 in K by A5,AFF_1:def 2;
then A9: y in K by A2,A6,A8,AFF_1:22;
assume A10: y <> o;
A11: o in K by AFF_1:15;
A12: p in K by AFF_1:15;
set A = ( Line (o,a) );
A13: A is  being_line by A1,AFF_1:def 3;
A14: a in A by AFF_1:15;
A15: y in A by A7,AFF_1:def 2;
A16: o in A by AFF_1:15;
K is  being_line by A8,AFF_1:def 3;
then p in A by A10,A13,A16,A12,A9,A11,A15,AFF_1:18;
hence contradiction by A4,A13,A16,A14,AFF_1:21;
end;
