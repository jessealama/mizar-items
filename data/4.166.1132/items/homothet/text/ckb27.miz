environ
vocabularies DIRAF,SUBSET_1,FUNCT_2,STRUCT_0,AFF_2,ANALOAF,INCSP_1,AFF_1,TRANSGEO,FUNCT_1,RELAT_1,TARSKI,HOMOTHET;
notations TARSKI,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,ANALOAF,DIRAF,AFF_1,AFF_2,TRANSGEO,CKB22;
definitions CKB22;
theorems TRANSGEO,AFF_1,AFF_2,TRANSLAC,SUBSET_1,DIRAF,FUNCT_1,XBOOLE_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
schemes TRANSGEO;
registrations STRUCT_0;
constructors PARTFUN1,AFF_1,AFF_2,TRANSGEO,RELSET_1,CKB22;
requirements SUBSET,BOOLE;
begin
reserve AFP for AffinPlane;
reserve a for (Element of AFP);
reserve b for (Element of AFP);
reserve p for (Element of AFP);
reserve p9 for (Element of AFP);
reserve x for (Element of AFP);
reserve y for (Element of AFP);
reserve K for (Subset of AFP);
theorem
Lm20: ((a,b // K & (not a in K)) implies (for y holds (ex x st ((x in K & x = y) or ((not x in K) & (ex p st (ex p9 st ((((p in K & p9 in K) & p,a // p9,x) & p,b // p9,y) & x,y // K))))))))
proof
assume that
A1: a,b // K
and
A2: (not a in K);
let y;
A3: b,a // K by A1,AFF_1:34;
A4: (not b in K) by A1,A2,AFF_1:35;
then consider x such that A5: ((y in K & y = x) or ((not y in K) & (ex p st (ex p9 st ((((p in K & p9 in K) & p,b // p9,y) & p,a // p9,x) & y,x // K))))) by A3,CKB26:1;
((x in K & x = y) or ((not x in K) & (ex p st (ex p9 st ((((p in K & p9 in K) & p,a // p9,x) & p,b // p9,y) & x,y // K))))) by A3,A4,A5,CKB25:1;
hence thesis;
end;
