environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMFSA_2,FSM_1,CARD_1,TARSKI,SCMFSA6A,FUNCT_4,RELAT_1,XBOOLE_0,FUNCT_1,INT_1,MSUALG_1,CIRCUIT2,AMI_3,ARYTM_3,XXREAL_0,NAT_1,SF_MASTR,GRAPHSP,AMISTD_2,TURING_1,STRUCT_0,VALUED_1,FUNCOP_1,SCMFSA6B,PARTFUN1,SCMNORM,RELOC,SCMFSA6C,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_7,INT_1,RELAT_1,FUNCT_1,PARTFUN1,PBOOLE,FINSEQ_1,FUNCOP_1,FUNCT_4,VALUED_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,SCMFSA_2,AMISTD_1,AMISTD_2,SCMFSA6A,SF_MASTR,CKB1,CKB2,CKB3;
definitions AMISTD_2,FUNCOP_1,SCMFSA6A,COMPOS_1,EXTPRO_1,MEMSTR_0,AMISTD_1,CKB2,CKB3;
theorems RELAT_1,FUNCT_7,FUNCT_4,FUNCT_1,SCMFSA_3,INT_1,FUNCOP_1,TARSKI,NAT_1,SCMFSA_2,MEMSTR_0,GRFUNC_1,SCMFSA6A,SF_MASTR,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,VALUED_1,PBOOLE,PARTFUN1,AFINSQ_1,FINSEQ_4,COMPOS_1,EXTPRO_1,AMISTD_2,AMISTD_5,AMISTD_1,STRUCT_0,CKB2,CKB3,CKB5,CKB6,CKB7,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29;
schemes NAT_1;
registrations SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMFSA_2,SCMFSA6A,SF_MASTR,XBOOLE_0,FINSET_1,AMISTD_2,SCMFSA10,COMPOS_1,EXTPRO_1,SCMFSA_4,PBOOLE,PRE_POLY,FUNCT_7,FUNCT_4,STRUCT_0,MEMSTR_0,CKB4,CKB8,CKB9,CKB13,CKB20,CKB27,CKB30;
constructors XXREAL_0,SCMFSA6A,SF_MASTR,AMISTD_1,AMISTD_2,MEMSTR_0,RELSET_1,PRE_POLY,AMISTD_5,DOMAIN_1,PBOOLE,AMI_3,FUNCT_7,CKB1,CKB2,CKB3;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve I for (Program of ( SCM+FSA ));
reserve s for (State of ( SCM+FSA ));
reserve P for (Instruction-Sequence of ( SCM+FSA ));
theorem
Th43: (for I being  keeping_0  parahalting (Program of ( SCM+FSA )) holds (for J being  parahalting (Program of ( SCM+FSA )) holds ( LifeSpan (( P +* ( I ';' J ) ),( s +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) )) ) = ( ( ( LifeSpan (( P +* I ),( s +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) )) ) + 1 ) + ( LifeSpan (( ( P +* I ) +* J ),( ( Result (( P +* I ),( s +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) )) ) +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) )) ) )))
proof
let I being  keeping_0  parahalting (Program of ( SCM+FSA ));
let J being  parahalting (Program of ( SCM+FSA ));
A2: ( I ';' J ) c= ( P +* ( I ';' J ) ) by FUNCT_4:25;
( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) c= ( s +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) ) by FUNCT_4:25;
then A3: ( LifeSpan (( P +* ( I ';' J ) ),( s +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) )) ) = ( ( ( LifeSpan (( ( P +* ( I ';' J ) ) +* I ),( s +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) )) ) + 1 ) + ( LifeSpan (( ( ( P +* ( I ';' J ) ) +* I ) +* J ),( ( Result (( ( P +* ( I ';' J ) ) +* I ),( s +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) )) ) +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) )) ) ) by CKB26:1,A2;
A5: J c= ( ( ( P +* ( I ';' J ) ) +* I ) +* J ) by FUNCT_4:25;
A6: J c= ( ( P +* I ) +* J ) by FUNCT_4:25;
A8: I c= ( ( P +* ( I ';' J ) ) +* I ) by FUNCT_4:25;
A9: I c= ( P +* I ) by FUNCT_4:25;
A11: ( ( Result (( ( P +* ( I ';' J ) ) +* I ),( s +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) )) ) +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) ) = ( ( Result (( P +* I ),( s +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) )) ) +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) ) by CKB16:1,A8,A9;
XX: ( LifeSpan (( P +* I ),( s +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) )) ) = ( LifeSpan (( ( P +* ( I ';' J ) ) +* I ),( s +* ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) )) ) by CKB16:1,A8,A9;
thus thesis by A11,CKB16:1,A5,A6,A3,XX;
end;
