environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMFSA_2,FSM_1,CARD_1,TARSKI,SCMFSA6A,FUNCT_4,RELAT_1,XBOOLE_0,FUNCT_1,INT_1,MSUALG_1,CIRCUIT2,AMI_3,ARYTM_3,XXREAL_0,NAT_1,SF_MASTR,GRAPHSP,AMISTD_2,TURING_1,STRUCT_0,VALUED_1,FUNCOP_1,SCMFSA6B,PARTFUN1,SCMNORM,RELOC,SCMFSA6C,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_7,INT_1,RELAT_1,FUNCT_1,PARTFUN1,PBOOLE,FINSEQ_1,FUNCOP_1,FUNCT_4,VALUED_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,SCMFSA_2,AMISTD_1,AMISTD_2,SCMFSA6A,SF_MASTR,CKB1,CKB2,CKB3;
definitions AMISTD_2,FUNCOP_1,SCMFSA6A,COMPOS_1,EXTPRO_1,MEMSTR_0,AMISTD_1,CKB2,CKB3;
theorems RELAT_1,FUNCT_7,FUNCT_4,FUNCT_1,SCMFSA_3,INT_1,FUNCOP_1,TARSKI,NAT_1,SCMFSA_2,MEMSTR_0,GRFUNC_1,SCMFSA6A,SF_MASTR,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,VALUED_1,PBOOLE,PARTFUN1,AFINSQ_1,FINSEQ_4,COMPOS_1,EXTPRO_1,AMISTD_2,AMISTD_5,AMISTD_1,STRUCT_0,CKB2,CKB3,CKB5,CKB6,CKB7,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
schemes NAT_1;
registrations SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMFSA_2,SCMFSA6A,SF_MASTR,XBOOLE_0,FINSET_1,AMISTD_2,SCMFSA10,COMPOS_1,EXTPRO_1,SCMFSA_4,PBOOLE,PRE_POLY,FUNCT_7,FUNCT_4,STRUCT_0,MEMSTR_0,CKB4,CKB8,CKB9,CKB13,CKB20;
constructors XXREAL_0,SCMFSA6A,SF_MASTR,AMISTD_1,AMISTD_2,MEMSTR_0,RELSET_1,PRE_POLY,AMISTD_5,DOMAIN_1,PBOOLE,AMI_3,FUNCT_7,CKB1,CKB2,CKB3;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve I for (Program of ( SCM+FSA ));
reserve s for (State of ( SCM+FSA ));
reserve P for (Instruction-Sequence of ( SCM+FSA ));
registration
let I being  parahalting (Program of ( SCM+FSA ));
let J being  parahalting (Program of ( SCM+FSA ));
cluster ( I ';' J ) ->  parahalting;
coherence
proof
set D = ( Data-Locations ( SCM+FSA ) );
let s being ( 0 ) -started (State of ( SCM+FSA ));
let P being (Instruction-Sequence of ( SCM+FSA ));
assume that
A3: ( I ';' J ) c= P;
set JAt = ( Start-At (( 0 ),( SCM+FSA )) );
set s3 = ( Initialize ( Comput (( P +* I ),s,( LifeSpan (( P +* I ),s) )) ) );
set m1 = ( LifeSpan (( P +* I ),s) );
set m3 = ( LifeSpan (( ( P +* I ) +* J ),s3) );
reconsider kk = ( DataPart JAt ) as Function;
A5:now
let x being set;
assume x in ( dom ( DataPart JAt ) );
then A6: x in ( ( dom JAt ) /\ D ) by RELAT_1:61;
x in ( dom JAt ) by A6,XBOOLE_0:def 4;
then x in { ( IC ( SCM+FSA ) ) } by FUNCOP_1:13;
then x = ( IC ( SCM+FSA ) ) by TARSKI:def 1;
then (not x in ( Data-Locations ( SCM+FSA ) )) by STRUCT_0:3;
hence ( kk . x ) = ( ( DataPart ( Comput (( P +* I ),s,m1) ) ) . x ) by A6,XBOOLE_0:def 4;
end;
JAt c= s3 by FUNCT_4:25;
then ( dom JAt ) c= ( dom s3 ) by GRFUNC_1:2;
then A10: ( dom JAt ) c= (the carrier of ( SCM+FSA )) by PARTFUN1:def 2;
( dom ( DataPart JAt ) ) = ( ( dom JAt ) /\ D ) by RELAT_1:61;
then ( dom ( DataPart JAt ) ) c= ( (the carrier of ( SCM+FSA )) /\ D ) by A10,XBOOLE_1:26;
then ( dom ( DataPart JAt ) ) c= ( ( dom ( Comput (( P +* I ),s,m1) ) ) /\ D ) by PARTFUN1:def 2;
then ( dom ( DataPart JAt ) ) c= ( dom ( DataPart ( Comput (( P +* I ),s,m1) ) ) ) by RELAT_1:61;
then (( s3 | D ) = ( ( DataPart ( Comput (( P +* I ),s,m1) ) ) +* kk ) & ( DataPart JAt ) c= ( DataPart ( Comput (( P +* I ),s,m1) ) )) by A5,FUNCT_4:71,GRFUNC_1:2;
then A11: ( DataPart ( Comput (( P +* I ),s,m1) ) ) = ( DataPart s3 ) by FUNCT_4:98;
reconsider m = ( ( m1 + 1 ) + m3 ) as (Element of ( NAT ));
A13: ( Reloc (J,( card I )) ) c= ( I ';' J ) by FUNCT_4:25;
take m;
set s4 = ( Comput (P,s,( m1 + 1 )) );
B19: ( Directed I ) c= ( I ';' J ) by SCMFSA6A:16;
A21: ( P +* I ) halts_on s by CKB5:1,FUNCT_4:25;
then A22: ( IC ( Comput (P,s,( ( LifeSpan (( P +* I ),s) ) + 1 )) ) ) = ( card I ) by CKB22:1,B19,A3,XBOOLE_1:1;
A24: ( P +* ( I ';' J ) ) = P by A3,FUNCT_4:98;
A25: ( DataPart ( Comput (P,s,m1) ) ) = ( DataPart s3 ) by A11,A24,CKB25:1,A21;
A26: ( Comput (P,s,( ( m1 + 1 ) + m3 )) ) = ( Comput (P,( Comput (P,s,( m1 + 1 )) ),m3) ) by EXTPRO_1:4;
A27: ( DataPart ( Comput (P,s,( m1 + 1 )) ) ) = ( DataPart s3 ) by A25,CKB23:1,B19,A21,A3,XBOOLE_1:1;
A28: J c= ( ( P +* I ) +* J ) by FUNCT_4:25;
WW1: ( Reloc (J,( card I )) ) c= P by A13,A3,XBOOLE_1:1;
A29: ( IncAddr (( CurInstr (( ( P +* I ) +* J ),( Comput (( ( P +* I ) +* J ),s3,m3) )) ),( card I )) ) = ( CurInstr (P,( Comput (P,s4,m3) )) ) by CKB14:1,A28,A27,A22,WW1;
( dom P ) = ( NAT ) by PARTFUN1:def 2;
hence ( IC ( Comput (P,s,m) ) ) in ( dom P );
A30: J c= ( ( P +* I ) +* J ) by FUNCT_4:25;
( ( P +* I ) +* J ) halts_on s3 by A30,AMISTD_1:def 11;
then ( CurInstr (P,( Comput (P,s,m) )) ) = ( IncAddr (( halt ( SCM+FSA ) ),( card I )) ) by A29,A26,EXTPRO_1:def 15
.= ( halt ( SCM+FSA ) ) by COMPOS_1:11;
hence ( CurInstr (P,( Comput (P,s,m) )) ) = ( halt ( SCM+FSA ) );
end;
end;
