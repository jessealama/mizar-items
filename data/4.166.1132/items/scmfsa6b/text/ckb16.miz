environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMFSA_2,FSM_1,CARD_1,TARSKI,SCMFSA6A,FUNCT_4,RELAT_1,XBOOLE_0,FUNCT_1,INT_1,MSUALG_1,CIRCUIT2,AMI_3,ARYTM_3,XXREAL_0,NAT_1,SF_MASTR,GRAPHSP,AMISTD_2,TURING_1,STRUCT_0,VALUED_1,FUNCOP_1,SCMFSA6B,PARTFUN1,SCMNORM,RELOC,SCMFSA6C,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_7,INT_1,RELAT_1,FUNCT_1,PARTFUN1,PBOOLE,FINSEQ_1,FUNCOP_1,FUNCT_4,VALUED_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,SCMFSA_2,AMISTD_1,AMISTD_2,SCMFSA6A,SF_MASTR,CKB1,CKB2,CKB3;
definitions AMISTD_2,FUNCOP_1,SCMFSA6A,COMPOS_1,EXTPRO_1,MEMSTR_0,AMISTD_1,CKB2,CKB3;
theorems RELAT_1,FUNCT_7,FUNCT_4,FUNCT_1,SCMFSA_3,INT_1,FUNCOP_1,TARSKI,NAT_1,SCMFSA_2,MEMSTR_0,GRFUNC_1,SCMFSA6A,SF_MASTR,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,VALUED_1,PBOOLE,PARTFUN1,AFINSQ_1,FINSEQ_4,COMPOS_1,EXTPRO_1,AMISTD_2,AMISTD_5,AMISTD_1,STRUCT_0,CKB2,CKB3,CKB5,CKB6,CKB7,CKB10,CKB11,CKB12,CKB14,CKB15;
schemes NAT_1;
registrations SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMFSA_2,SCMFSA6A,SF_MASTR,XBOOLE_0,FINSET_1,AMISTD_2,SCMFSA10,COMPOS_1,EXTPRO_1,SCMFSA_4,PBOOLE,PRE_POLY,FUNCT_7,FUNCT_4,STRUCT_0,MEMSTR_0,CKB4,CKB8,CKB9,CKB13;
constructors XXREAL_0,SCMFSA6A,SF_MASTR,AMISTD_1,AMISTD_2,MEMSTR_0,RELSET_1,PRE_POLY,AMISTD_5,DOMAIN_1,PBOOLE,AMI_3,FUNCT_7,CKB1,CKB2,CKB3;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve I for (Program of ( SCM+FSA ));
reserve l for (Element of ( NAT ));
reserve s for (State of ( SCM+FSA ));
reserve P1 for (Instruction-Sequence of ( SCM+FSA ));
reserve P2 for (Instruction-Sequence of ( SCM+FSA ));
theorem
Th29: (for s being ( 0 ) -started (State of ( SCM+FSA )) holds (for I being  parahalting (Program of ( SCM+FSA )) holds ((I c= P1 & I c= P2) implies (( LifeSpan (P1,s) ) = ( LifeSpan (P2,s) ) & ( Result (P1,s) ) = ( Result (P2,s) )))))
proof
let s being ( 0 ) -started (State of ( SCM+FSA ));
let I being  parahalting (Program of ( SCM+FSA ));
assume that
A1: I c= P1
and
A2: I c= P2;
A6: P2 halts_on s by A2,AMISTD_1:def 11;
A7: P1 halts_on s by A1,AMISTD_1:def 11;
A8:now
let l being (Element of ( NAT ));
assume A9: ( CurInstr (P2,( Comput (P2,s,l) )) ) = ( halt ( SCM+FSA ) );
( CurInstr (P1,( Comput (P1,s,l) )) ) = ( CurInstr (P2,( Comput (P2,s,l) )) ) by CKB15:1,A1,A2;
hence ( LifeSpan (P1,s) ) <= l by A7,A9,EXTPRO_1:def 15;
end;
( CurInstr (P2,( Comput (P2,s,( LifeSpan (P1,s) )) )) ) = ( CurInstr (P1,( Comput (P1,s,( LifeSpan (P1,s) )) )) ) by CKB15:1,A1,A2
.= ( halt ( SCM+FSA ) ) by A7,EXTPRO_1:def 15;
hence A10: ( LifeSpan (P1,s) ) = ( LifeSpan (P2,s) ) by A8,A6,EXTPRO_1:def 15;
A11: ( Result (P2,s) ) = ( Comput (P2,s,( LifeSpan (P1,s) )) ) by A10,CKB5:1,A2,EXTPRO_1:23;
( Result (P1,s) ) = ( Comput (P1,s,( LifeSpan (P1,s) )) ) by CKB5:1,A1,EXTPRO_1:23;
hence thesis by A11,CKB15:1,A1,A2;
end;
