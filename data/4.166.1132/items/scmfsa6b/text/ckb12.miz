environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMFSA_2,FSM_1,CARD_1,TARSKI,SCMFSA6A,FUNCT_4,RELAT_1,XBOOLE_0,FUNCT_1,INT_1,MSUALG_1,CIRCUIT2,AMI_3,ARYTM_3,XXREAL_0,NAT_1,SF_MASTR,GRAPHSP,AMISTD_2,TURING_1,STRUCT_0,VALUED_1,FUNCOP_1,SCMFSA6B,PARTFUN1,SCMNORM,RELOC,SCMFSA6C,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_7,INT_1,RELAT_1,FUNCT_1,PARTFUN1,PBOOLE,FINSEQ_1,FUNCOP_1,FUNCT_4,VALUED_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,SCMFSA_2,AMISTD_1,AMISTD_2,SCMFSA6A,SF_MASTR,CKB1,CKB2,CKB3;
definitions AMISTD_2,FUNCOP_1,SCMFSA6A,COMPOS_1,EXTPRO_1,MEMSTR_0,AMISTD_1,CKB2,CKB3;
theorems RELAT_1,FUNCT_7,FUNCT_4,FUNCT_1,SCMFSA_3,INT_1,FUNCOP_1,TARSKI,NAT_1,SCMFSA_2,MEMSTR_0,GRFUNC_1,SCMFSA6A,SF_MASTR,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,VALUED_1,PBOOLE,PARTFUN1,AFINSQ_1,FINSEQ_4,COMPOS_1,EXTPRO_1,AMISTD_2,AMISTD_5,AMISTD_1,STRUCT_0,CKB2,CKB3,CKB5,CKB6,CKB7,CKB10,CKB11;
schemes NAT_1;
registrations SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMFSA_2,SCMFSA6A,SF_MASTR,XBOOLE_0,FINSET_1,AMISTD_2,SCMFSA10,COMPOS_1,EXTPRO_1,SCMFSA_4,PBOOLE,PRE_POLY,FUNCT_7,FUNCT_4,STRUCT_0,MEMSTR_0,CKB4,CKB8,CKB9;
constructors XXREAL_0,SCMFSA6A,SF_MASTR,AMISTD_1,AMISTD_2,MEMSTR_0,RELSET_1,PRE_POLY,AMISTD_5,DOMAIN_1,PBOOLE,AMI_3,FUNCT_7,CKB1,CKB2,CKB3;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve m for (Element of ( NAT ));
reserve l for (Element of ( NAT ));
reserve s for (State of ( SCM+FSA ));
reserve P for (Instruction-Sequence of ( SCM+FSA ));
theorem
((( IC s ) = l & ( P . l ) = ( goto l )) implies (not P halts_on s))
proof
assume that
A1: ( IC s ) = l
and
A2: ( P . l ) = ( goto l );
A6: ( P /. ( IC s ) ) = ( P . ( IC s ) ) by PBOOLE:143;
defpred X[ Nat ]
 means
( Comput (P,s,$1) ) = s;
A3: (for m holds (X[ m ] implies X[ ( m + 1 ) ]))
proof
let m;
A4: (for f being FinSeq-Location holds ( ( Exec (( goto l ),s) ) . f ) = ( s . f )) by SCMFSA_2:69;
A5: (( IC ( Exec (( goto l ),s) ) ) = ( IC s ) & (for a being Int-Location holds ( ( Exec (( goto l ),s) ) . a ) = ( s . a ))) by A1,SCMFSA_2:69;
assume Z: ( Comput (P,s,m) ) = s;
thus ( Comput (P,s,( m + 1 )) ) = ( Following (P,s) ) by Z,EXTPRO_1:3
.= s by A1,A2,A5,A4,A6,SCMFSA_2:104;
end;
let mm being Nat;
reconsider m = mm as (Element of ( NAT )) by ORDINAL1:def 12;
A7: X[ ( 0 ) ] by EXTPRO_1:2;
(for m holds X[ m ]) from NAT_1:sch 1(A7,A3);
then A8: X[ m ];
assume ( IC ( Comput (P,s,mm) ) ) in ( dom P );
thus ( CurInstr (P,( Comput (P,s,mm) )) ) <> ( halt ( SCM+FSA ) ) by A1,A2,A8,PBOOLE:143;
end;
