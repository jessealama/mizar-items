environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMFSA_2,FSM_1,CARD_1,TARSKI,SCMFSA6A,FUNCT_4,RELAT_1,XBOOLE_0,FUNCT_1,INT_1,MSUALG_1,CIRCUIT2,AMI_3,ARYTM_3,XXREAL_0,NAT_1,SF_MASTR,GRAPHSP,AMISTD_2,TURING_1,STRUCT_0,VALUED_1,FUNCOP_1,SCMFSA6B,PARTFUN1,SCMNORM,RELOC,SCMFSA6C,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_7,INT_1,RELAT_1,FUNCT_1,PARTFUN1,PBOOLE,FINSEQ_1,FUNCOP_1,FUNCT_4,VALUED_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,SCMFSA_2,AMISTD_1,AMISTD_2,SCMFSA6A,SF_MASTR,CKB1,CKB2,CKB3;
definitions AMISTD_2,FUNCOP_1,SCMFSA6A,COMPOS_1,EXTPRO_1,MEMSTR_0,AMISTD_1,CKB2,CKB3;
theorems RELAT_1,FUNCT_7,FUNCT_4,FUNCT_1,SCMFSA_3,INT_1,FUNCOP_1,TARSKI,NAT_1,SCMFSA_2,MEMSTR_0,GRFUNC_1,SCMFSA6A,SF_MASTR,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,VALUED_1,PBOOLE,PARTFUN1,AFINSQ_1,FINSEQ_4,COMPOS_1,EXTPRO_1,AMISTD_2,AMISTD_5,AMISTD_1,STRUCT_0,CKB2,CKB3,CKB5,CKB6,CKB7,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB21;
schemes NAT_1;
registrations SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMFSA_2,SCMFSA6A,SF_MASTR,XBOOLE_0,FINSET_1,AMISTD_2,SCMFSA10,COMPOS_1,EXTPRO_1,SCMFSA_4,PBOOLE,PRE_POLY,FUNCT_7,FUNCT_4,STRUCT_0,MEMSTR_0,CKB4,CKB8,CKB9,CKB13,CKB20;
constructors XXREAL_0,SCMFSA6A,SF_MASTR,AMISTD_1,AMISTD_2,MEMSTR_0,RELSET_1,PRE_POLY,AMISTD_5,DOMAIN_1,PBOOLE,AMI_3,FUNCT_7,CKB1,CKB2,CKB3;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve I for (Program of ( SCM+FSA ));
reserve s for (State of ( SCM+FSA ));
reserve P for (Instruction-Sequence of ( SCM+FSA ));
theorem
Th37: (for s being ( 0 ) -started (State of ( SCM+FSA )) holds (for P being (Instruction-Sequence of ( SCM+FSA )) holds (for I being  paraclosed (Program of ( SCM+FSA )) holds ((( P +* I ) halts_on s & ( Directed I ) c= P) implies ( IC ( Comput (P,s,( ( LifeSpan (( P +* I ),s) ) + 1 )) ) ) = ( card I )))))
proof
let s being ( 0 ) -started (State of ( SCM+FSA ));
let P being (Instruction-Sequence of ( SCM+FSA ));
let I being  paraclosed (Program of ( SCM+FSA ));
assume that
A1: ( P +* I ) halts_on s
and
A3: ( Directed I ) c= P;
A5: I c= ( P +* I ) by FUNCT_4:25;
set s2 = s;
set m = ( LifeSpan (( P +* I ),s) );
set l1 = ( IC ( Comput (( P +* I ),s,m) ) );
A9: I c= ( P +* I ) by FUNCT_4:25;
A10: l1 in ( dom I ) by A9,AMISTD_1:def 10;
set s1 = s;
A11: ( P +* ( I ';' I ) ) = ( P +* ( I +* ( I ';' I ) ) ) by SCMFSA6A:18
.= ( ( P +* I ) +* ( I ';' I ) ) by FUNCT_4:14;
now
let k being (Element of ( NAT ));
defpred X[ Nat ]
 means
($1 <= k implies ( Comput (( P +* ( I ';' I ) ),s1,$1) ) = ( Comput (( P +* ( Directed I ) ),s2,$1) ));
assume A13: k <= m;
A14: (for n being (Element of ( NAT )) holds (X[ n ] implies X[ ( n + 1 ) ]))
proof
let n being (Element of ( NAT ));
assume A15: (n <= k implies ( Comput (( P +* ( I ';' I ) ),s1,n) ) = ( Comput (( P +* ( Directed I ) ),s2,n) ));
A16: ( Comput (( P +* ( Directed I ) ),s2,( n + 1 )) ) = ( Following (( P +* ( Directed I ) ),( Comput (( P +* ( Directed I ) ),s2,n) )) ) by EXTPRO_1:3
.= ( Exec (( CurInstr (( P +* ( Directed I ) ),( Comput (( P +* ( Directed I ) ),s2,n) )) ),( Comput (( P +* ( Directed I ) ),s2,n) )) );
A17: ( Comput (( P +* ( I ';' I ) ),s1,( n + 1 )) ) = ( Following (( P +* ( I ';' I ) ),( Comput (( P +* ( I ';' I ) ),s1,n) )) ) by EXTPRO_1:3
.= ( Exec (( CurInstr (( P +* ( I ';' I ) ),( Comput (( P +* ( I ';' I ) ),s1,n) )) ),( Comput (( P +* ( I ';' I ) ),s1,n) )) );
A18: n <= ( n + 1 ) by NAT_1:12;
assume A19: ( n + 1 ) <= k;
n <= k by A19,A18,XXREAL_0:2;
then ( Comput (( P +* I ),s,n) ) = ( Comput (( P +* ( I ';' I ) ),s,n) ) by A5,CKB21:1,A11,A1,A13,XXREAL_0:2;
then ( IC ( Comput (( P +* ( I ';' I ) ),s1,n) ) ) in ( dom I ) by A5,AMISTD_1:def 10;
then A21: ( IC ( Comput (( P +* ( Directed I ) ),s2,n) ) ) in ( dom ( Directed I ) ) by A19,A15,A18,FUNCT_4:99,XXREAL_0:2;
( dom ( P +* ( Directed I ) ) ) = ( NAT ) by PARTFUN1:def 2;
then A22: ( ( P +* ( Directed I ) ) /. ( IC ( Comput (( P +* ( Directed I ) ),s2,n) ) ) ) = ( ( P +* ( Directed I ) ) . ( IC ( Comput (( P +* ( Directed I ) ),s2,n) ) ) ) by PARTFUN1:def 6;
A23: ( dom ( P +* ( I ';' I ) ) ) = ( NAT ) by PARTFUN1:def 2;
( Directed I ) c= ( P +* ( Directed I ) ) by FUNCT_4:25;
then A24: ( CurInstr (( P +* ( Directed I ) ),( Comput (( P +* ( Directed I ) ),s2,n) )) ) = ( ( Directed I ) . ( IC ( Comput (( P +* ( Directed I ) ),s2,n) ) ) ) by A21,A22,GRFUNC_1:2;
A25: (( dom I ) c= ( dom ( I ';' I ) ) & ( CurInstr (( P +* ( I ';' I ) ),( Comput (( P +* ( I ';' I ) ),s1,n) )) ) = ( ( P +* ( I ';' I ) ) . ( IC ( Comput (( P +* ( I ';' I ) ),s1,n) ) ) )) by A23,PARTFUN1:def 6,SCMFSA6A:17;
A26: ( Directed I ) c= ( I ';' I ) by SCMFSA6A:16;
( I ';' I ) c= ( P +* ( I ';' I ) ) by FUNCT_4:25;
then ( Directed I ) c= ( P +* ( I ';' I ) ) by A26,XBOOLE_1:1;
hence thesis by A15,A19,A18,A24,A17,A16,A21,A25,GRFUNC_1:2,XXREAL_0:2;
end;
(( Comput (( P +* ( I ';' I ) ),s1,( 0 )) ) = s1 & ( Comput (( P +* ( Directed I ) ),s2,( 0 )) ) = s2) by EXTPRO_1:2;
then A28: X[ ( 0 ) ];
(for n being (Element of ( NAT )) holds X[ n ]) from NAT_1:sch 1(A28,A14);
then ( Comput (( P +* ( I ';' I ) ),s1,k) ) = ( Comput (( P +* ( Directed I ) ),s2,k) );
hence ( Comput (( P +* I ),s,k) ) = ( Comput (( P +* ( Directed I ) ),s2,k) ) by A13,CKB21:1,A11,A1,FUNCT_4:25;
end;
then B30: ( Comput (( P +* I ),s,m) ) = ( Comput (( P +* ( Directed I ) ),s2,m) );
A31: ( dom ( P +* I ) ) = ( NAT ) by PARTFUN1:def 2;
I c= ( P +* I ) by FUNCT_4:25;
then A32: ( I . l1 ) = ( ( P +* I ) . ( IC ( Comput (( P +* I ),s,m) ) ) ) by A10,GRFUNC_1:2
.= ( CurInstr (( P +* I ),( Comput (( P +* I ),s,m) )) ) by A31,PARTFUN1:def 6
.= ( halt ( SCM+FSA ) ) by A1,EXTPRO_1:def 15;
( IC ( Comput (( P +* ( Directed I ) ),s2,m) ) ) in ( dom ( Directed I ) ) by A10,B30,FUNCT_4:99;
then A33: ( ( P +* ( Directed I ) ) . l1 ) = ( ( Directed I ) . l1 ) by B30,FUNCT_4:13
.= ( goto ( card I ) ) by A10,A32,FUNCT_4:106;
A35: ( P +* ( Directed I ) ) = P by A3,FUNCT_4:98;
B36: ( dom ( P +* ( Directed I ) ) ) = ( NAT ) by PARTFUN1:def 2;
( Comput (( P +* ( Directed I ) ),s2,( m + 1 )) ) = ( Following (( P +* ( Directed I ) ),( Comput (( P +* ( Directed I ) ),s2,m) )) ) by EXTPRO_1:3
.= ( Exec (( goto ( card I ) ),( Comput (( P +* ( Directed I ) ),s2,m) )) ) by B36,B30,A33,PARTFUN1:def 6;
hence ( IC ( Comput (P,s,( ( LifeSpan (( P +* I ),s) ) + 1 )) ) ) = ( card I ) by A35,SCMFSA_2:69;
end;
