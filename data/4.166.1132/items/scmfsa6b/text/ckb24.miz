environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMFSA_2,FSM_1,CARD_1,TARSKI,SCMFSA6A,FUNCT_4,RELAT_1,XBOOLE_0,FUNCT_1,INT_1,MSUALG_1,CIRCUIT2,AMI_3,ARYTM_3,XXREAL_0,NAT_1,SF_MASTR,GRAPHSP,AMISTD_2,TURING_1,STRUCT_0,VALUED_1,FUNCOP_1,SCMFSA6B,PARTFUN1,SCMNORM,RELOC,SCMFSA6C,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_7,INT_1,RELAT_1,FUNCT_1,PARTFUN1,PBOOLE,FINSEQ_1,FUNCOP_1,FUNCT_4,VALUED_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,SCMFSA_2,AMISTD_1,AMISTD_2,SCMFSA6A,SF_MASTR,CKB1,CKB2,CKB3;
definitions AMISTD_2,FUNCOP_1,SCMFSA6A,COMPOS_1,EXTPRO_1,MEMSTR_0,AMISTD_1,CKB2,CKB3;
theorems RELAT_1,FUNCT_7,FUNCT_4,FUNCT_1,SCMFSA_3,INT_1,FUNCOP_1,TARSKI,NAT_1,SCMFSA_2,MEMSTR_0,GRFUNC_1,SCMFSA6A,SF_MASTR,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,VALUED_1,PBOOLE,PARTFUN1,AFINSQ_1,FINSEQ_4,COMPOS_1,EXTPRO_1,AMISTD_2,AMISTD_5,AMISTD_1,STRUCT_0,CKB2,CKB3,CKB5,CKB6,CKB7,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB21,CKB22,CKB23;
schemes NAT_1;
registrations SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMFSA_2,SCMFSA6A,SF_MASTR,XBOOLE_0,FINSET_1,AMISTD_2,SCMFSA10,COMPOS_1,EXTPRO_1,SCMFSA_4,PBOOLE,PRE_POLY,FUNCT_7,FUNCT_4,STRUCT_0,MEMSTR_0,CKB4,CKB8,CKB9,CKB13,CKB20;
constructors XXREAL_0,SCMFSA6A,SF_MASTR,AMISTD_1,AMISTD_2,MEMSTR_0,RELSET_1,PRE_POLY,AMISTD_5,DOMAIN_1,PBOOLE,AMI_3,FUNCT_7,CKB1,CKB2,CKB3;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve I for (Program of ( SCM+FSA ));
reserve s for (State of ( SCM+FSA ));
reserve P for (Instruction-Sequence of ( SCM+FSA ));
theorem
Th39: (for I being  parahalting (Program of ( SCM+FSA )) holds ((I c= P & ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) c= s) implies (for k being (Element of ( NAT )) holds (k <= ( LifeSpan (P,s) ) implies ( CurInstr (( P +* ( Directed I ) ),( Comput (( P +* ( Directed I ) ),s,k) )) ) <> ( halt ( SCM+FSA ) )))))
proof
let I being  parahalting (Program of ( SCM+FSA ));
set m = ( LifeSpan (P,s) );
assume that
A1: I c= P
and
A2: ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) c= s;
A3: ( Start-At (( 0 ),( SCM+FSA )) ) c= s by A2,MEMSTR_0:50;
then s is ( 0 ) -started by MEMSTR_0:29;
then A5: P halts_on s by A1,AMISTD_1:def 11;
reconsider s1 = s as ( 0 ) -started (State of ( SCM+FSA )) by A3,MEMSTR_0:29;
A6:now
let k being (Element of ( NAT ));
defpred X[ Nat ]
 means
($1 <= k implies ( Comput (( P +* ( I ';' I ) ),s1,$1) ) = ( Comput (( P +* ( Directed I ) ),s,$1) ));
assume A7: k <= m;
A8: (for n being (Element of ( NAT )) holds (X[ n ] implies X[ ( n + 1 ) ]))
proof
A9: ( Directed I ) c= ( I ';' I ) by SCMFSA6A:16;
let n being (Element of ( NAT ));
A10: ( dom I ) c= ( dom ( I ';' I ) ) by SCMFSA6A:17;
assume A11: (n <= k implies ( Comput (( P +* ( I ';' I ) ),s1,n) ) = ( Comput (( P +* ( Directed I ) ),s,n) ));
A12: ( Comput (( P +* ( Directed I ) ),s,( n + 1 )) ) = ( Following (( P +* ( Directed I ) ),( Comput (( P +* ( Directed I ) ),s,n) )) ) by EXTPRO_1:3
.= ( Exec (( CurInstr (( P +* ( Directed I ) ),( Comput (( P +* ( Directed I ) ),s,n) )) ),( Comput (( P +* ( Directed I ) ),s,n) )) );
A13: ( Comput (( P +* ( I ';' I ) ),s1,( n + 1 )) ) = ( Following (( P +* ( I ';' I ) ),( Comput (( P +* ( I ';' I ) ),s1,n) )) ) by EXTPRO_1:3
.= ( Exec (( CurInstr (( P +* ( I ';' I ) ),( Comput (( P +* ( I ';' I ) ),s1,n) )) ),( Comput (( P +* ( I ';' I ) ),s1,n) )) );
A14: n <= ( n + 1 ) by NAT_1:12;
assume A15: ( n + 1 ) <= k;
n <= k by A15,A14,XXREAL_0:2;
then ( Comput (P,s,n) ) = ( Comput (( P +* ( I ';' I ) ),s1,n) ) by A5,A1,CKB21:1,A7,XXREAL_0:2;
then A17: ( IC ( Comput (( P +* ( I ';' I ) ),s1,n) ) ) in ( dom I ) by A1,AMISTD_1:def 10;
then A18: ( IC ( Comput (( P +* ( Directed I ) ),s,n) ) ) in ( dom ( Directed I ) ) by A15,A11,A14,FUNCT_4:99,XXREAL_0:2;
( dom ( P +* ( Directed I ) ) ) = ( NAT ) by PARTFUN1:def 2;
then A19: ( CurInstr (( P +* ( Directed I ) ),( Comput (( P +* ( Directed I ) ),s,n) )) ) = ( ( P +* ( Directed I ) ) . ( IC ( Comput (( P +* ( Directed I ) ),s,n) ) ) ) by PARTFUN1:def 6
.= ( ( Directed I ) . ( IC ( Comput (( P +* ( Directed I ) ),s,n) ) ) ) by A18,FUNCT_4:13;
( dom ( P +* ( I ';' I ) ) ) = ( NAT ) by PARTFUN1:def 2;
then ( CurInstr (( P +* ( I ';' I ) ),( Comput (( P +* ( I ';' I ) ),s1,n) )) ) = ( ( P +* ( I ';' I ) ) . ( IC ( Comput (( P +* ( I ';' I ) ),s1,n) ) ) ) by PARTFUN1:def 6
.= ( ( I ';' I ) . ( IC ( Comput (( P +* ( I ';' I ) ),s1,n) ) ) ) by A10,A17,FUNCT_4:13
.= ( ( Directed I ) . ( IC ( Comput (( P +* ( I ';' I ) ),s1,n) ) ) ) by A9,A15,A11,A14,A18,GRFUNC_1:2,XXREAL_0:2;
hence thesis by A11,A15,A14,A19,A13,A12,XXREAL_0:2;
end;
(( Comput (( P +* ( I ';' I ) ),s1,( 0 )) ) = s1 & ( Comput (( P +* ( Directed I ) ),s,( 0 )) ) = s) by EXTPRO_1:2;
then A20: X[ ( 0 ) ];
(for n being (Element of ( NAT )) holds X[ n ]) from NAT_1:sch 1(A20,A8);
then ( Comput (( P +* ( I ';' I ) ),s1,k) ) = ( Comput (( P +* ( Directed I ) ),s,k) );
hence ( Comput (P,s,k) ) = ( Comput (( P +* ( Directed I ) ),s,k) ) by A5,A7,CKB21:1,A1;
end;
hereby
let k being (Element of ( NAT ));
set lk = ( IC ( Comput (P,s,k) ) );
A22: ( dom I ) = ( dom ( Directed I ) ) by FUNCT_4:99;
B22: ( IC ( Comput (P,s1,k) ) ) in ( dom I ) by A1,AMISTD_1:def 10;
then A23: ( ( Directed I ) . lk ) in ( rng ( Directed I ) ) by A22,FUNCT_1:def 3;
A24: ( dom ( P +* ( Directed I ) ) ) = ( NAT ) by PARTFUN1:def 2;
assume k <= ( LifeSpan (P,s) );
then lk = ( IC ( Comput (( P +* ( Directed I ) ),s,k) ) ) by A6;
then A25: ( CurInstr (( P +* ( Directed I ) ),( Comput (( P +* ( Directed I ) ),s,k) )) ) = ( ( P +* ( Directed I ) ) . lk ) by A24,PARTFUN1:def 6
.= ( ( Directed I ) . lk ) by A22,B22,FUNCT_4:13;
thus ( CurInstr (( P +* ( Directed I ) ),( Comput (( P +* ( Directed I ) ),s,k) )) ) <> ( halt ( SCM+FSA ) ) by A25,A23,SCMFSA6A:1;
end;
end;
