environ
vocabularies FUNCT_1,COMPLEX1,RELAT_1,ZFMISC_1,XXREAL_0,PARTFUN1,ARYTM_1,XBOOLE_0,ORDINAL4,INT_1,SQUARE_1,ARYTM_3,RLVECT_1,SUPINF_2,RSSPACE,FUNCOP_1,FINSOP_1,NAT_1,FUNCT_4,BINOP_2,PROB_1,MEASURE6,MESFUNC1,TARSKI,MESFUNC5,IDEAL_1,SUBSET_1,RANDOM_1,RANDOM_2,C0SP1,FINSET_1,FINSEQ_1,ORDINAL2,RPR_1,CARD_1,SEQ_2,POWER,FUNCT_3,PROB_4,UPROOTS,FINSEQ_2,CARD_3,FUNCT_2,RFINSEQ,XREAL_0,FUNCSDOM,POLYALG1,BHSP_5,NUMBERS,REAL_1,INTEGRA5,VALUED_1,ORDINAL1,EQREL_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_4,FUNCOP_1,FINSEQ_1,ORDINAL1,REAL_1,NAT_1,CARD_1,FINSET_1,NUMBERS,XREAL_0,XXREAL_0,NAT_D,COMPLEX1,VALUED_1,RFINSEQ,FINSOP_1,STRUCT_0,ALGSTR_0,IDEAL_1,VECTSP_1,BINOP_1,BINOP_2,RLVECT_1,FUNCSDOM,SUPINF_2,SEQ_1,SEQ_2,SQUARE_1,GROUP_1,POWER,PROB_1,PROB_4,EXTREAL1,MESFUNC1,MEASURE6,MESFUNC5,MESFUNC6,MESFUNC2,RVSUM_1,UPROOTS,MESFUN6C,C0SP1,RANDOM_1,BHSP_5,CKB9;
definitions TARSKI,BINOP_1,STRUCT_0,ALGSTR_0,RLVECT_1,MEASURE6,MESFUNC5,FINSEQ_2,FINSEQ_1,PROB_4,FUNCSDOM,VALUED_1,BHSP_5,RVSUM_1,SQUARE_1,CKB9;
theorems FUNCT_1,FUNCT_2,PARTFUN1,COMPLEX1,XBOOLE_0,TARSKI,RELAT_1,VALUED_1,IDEAL_1,ZFMISC_1,RLVECT_1,FUNCOP_1,XBOOLE_1,MESFUNC2,EXTREAL1,MEASURE1,MESFUNC6,PROB_1,XXREAL_0,ABSVALUE,MESFUNC7,RELSET_1,XXREAL_3,XREAL_0,RANDOM_1,C0SP1,FINSEQ_4,POWER,BINOP_2,RFINSEQ,CARD_2,FINSEQ_1,FUNCT_4,FINSOP_1,NAT_1,NAT_2,NAT_D,INT_3,XREAL_1,SQUARE_1,FINSEQ_2,INT_1,FUNCT_3,CARD_1,FINSEQ_3,FINSEQ_5,UPROOTS,MESFUN6C,FUNCSDOM,BHSP_5,RVSUM_1,FIB_NUM3,SUBSET,CKB1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
schemes FINSEQ_1,FUNCT_2,NAT_1,FUNCT_3;
registrations XBOOLE_0,ORDINAL1,NUMBERS,XREAL_0,MEMBERED,VALUED_0,NAT_1,SUBSET_1,XCMPLX_0,RLVECT_1,XXREAL_0,MEASURE1,FINSEQ_1,RELAT_1,XXREAL_3,C0SP1,FUNCT_2,CARD_1,FINSET_1,BINOP_2,FUNCT_1,UPROOTS,MESFUN6C,FUNCSDOM,BHSP_5,RELSET_1,CKB3,CKB4;
constructors EXTREAL1,REAL_1,IDEAL_1,MEASURE6,MESFUNC2,MESFUNC5,SEQ_2,MESFUNC6,SEQ_1,SUPINF_1,REALSET1,RVSUM_1,MESFUNC1,RELSET_1,RANDOM_1,C0SP1,RFINSEQ,POWER,FINSOP_1,BINARITH,FINSEQOP,SEQ_4,CONVFUN1,SEQFUNC,SETWISEO,FINSEQ_4,PARTFUN3,PROB_4,WELLORD2,SQUARE_1,NAT_D,UPROOTS,MESFUN6C,BHSP_5,CKB9;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
reserve Omega for non  empty set;
reserve Sigma for (SigmaField of Omega);
reserve P for (Probability of Sigma);
theorem
Th8: (for Omega being non  empty  finite set holds (for f being (Function of Omega,( REAL )) holds (for P being (Function of ( bool Omega ),( REAL )) holds ((((for x being set holds (x c= Omega implies (( 0 ) <= ( P . x ) & ( P . x ) <= 1))) & ( P . Omega ) = 1) & (for z being  finite (Subset of Omega) holds ( P . z ) = ( setopfunc (z,Omega,( REAL ),f,( addreal )) ))) implies P is (Probability of ( Trivial-SigmaField Omega ))))))
proof
let Omega being non  empty  finite set;
let f being (Function of Omega,( REAL ));
let P being (Function of ( bool Omega ),( REAL ));
assume that
A1: (for x being set holds (x c= Omega implies (( 0 ) <= ( P . x ) & ( P . x ) <= 1)))
and
A2: ( P . Omega ) = 1
and
A3: (for z being  finite (Subset of Omega) holds ( P . z ) = ( setopfunc (z,Omega,( REAL ),f,( addreal )) ));
A4: (for A,B being (Event of ( Trivial-SigmaField Omega )) holds (A misses B implies ( P . ( A \/ B ) ) = ( ( P . A ) + ( P . B ) )))
proof
let A being (Event of ( Trivial-SigmaField Omega ));
let B being (Event of ( Trivial-SigmaField Omega ));
assume A5: A misses B;
reconsider A0 = A,B0 = B as  finite (Subset of Omega);
A6: Omega = ( dom f ) by FUNCT_2:def 1;
thus ( P . ( A \/ B ) ) = ( setopfunc (( A0 \/ B0 ),Omega,( REAL ),f,( addreal )) ) by A3
.= ( ( addreal ) . (( setopfunc (A0,Omega,( REAL ),f,( addreal )) ),( setopfunc (B0,Omega,( REAL ),f,( addreal )) )) ) by A5,A6,BHSP_5:14
.= ( ( addreal ) . (( setopfunc (A0,Omega,( REAL ),f,( addreal )) ),( P . B )) ) by A3
.= ( ( addreal ) . (( P . A ),( P . B )) ) by A3
.= ( ( P . A ) + ( P . B ) ) by BINOP_2:def 9;
end;
A7: (for A being (Event of ( Trivial-SigmaField Omega )) holds ( 0 ) <= ( P . A )) by A1;
(for ASeq being (SetSequence of ( Trivial-SigmaField Omega )) holds (ASeq is  non-ascending implies (( P * ASeq ) is  convergent & ( lim ( P * ASeq ) ) = ( P . ( Intersection ASeq ) ))))
proof
let ASeq being (SetSequence of ( Trivial-SigmaField Omega ));
assume ASeq is  non-ascending;
then consider N being (Element of ( NAT )) such that A8: (for m being (Element of ( NAT )) holds (N <= m implies ( Intersection ASeq ) = ( ASeq . m ))) by RANDOM_1:15;
now
let m being (Element of ( NAT ));
assume A9: N <= m;
m in ( NAT );
then m in ( dom ASeq ) by FUNCT_2:def 1;
hence ( ( P * ASeq ) . m ) = ( P . ( ASeq . m ) ) by FUNCT_1:13
.= ( P . ( Intersection ASeq ) ) by A8,A9;
end;
hence thesis by PROB_1:1;
end;
hence thesis by A7,A4,A2,PROB_1:def 8;
end;
