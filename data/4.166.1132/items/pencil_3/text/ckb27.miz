environ
vocabularies NUMBERS,XBOOLE_0,STRUCT_0,PRE_TOPC,PENCIL_2,PENCIL_1,FUNCT_1,RELAT_1,TARSKI,SUBSET_1,PRALG_1,PBOOLE,ZFMISC_1,RELAT_2,FINSEQ_1,NAT_1,XXREAL_0,ARYTM_3,CARD_1,ARYTM_1,WAYBEL_3,RLVECT_2,CARD_3,INTEGRA1,FUNCT_4,FINSET_1,FDIFF_1,PARSP_1,GRAPH_2,FUNCT_2,CAT_1,RCOMP_1,FUNCOP_1,PENCIL_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,XCMPLX_0,XXREAL_0,NUMBERS,NAT_1,RELAT_1,SUBSET_1,FUNCT_1,FUNCT_2,FUNCOP_1,RELSET_1,CARD_1,FINSET_1,FINSEQ_1,CARD_3,DOMAIN_1,STRUCT_0,PRE_TOPC,PBOOLE,PZFMISC1,T_0TOPSP,PRALG_1,WAYBEL_3,PENCIL_1,FUNCT_7,PENCIL_2,TOPS_2,GRAPH_2,CKB19,CKB21;
definitions TARSKI,XBOOLE_0,PBOOLE,FUNCT_1,T_0TOPSP,STRUCT_0,RELAT_1,CKB19,CKB21;
theorems XBOOLE_0,ZFMISC_1,FUNCT_1,FINSEQ_1,FINSEQ_3,NAT_1,CARD_3,PBOOLE,PRE_TOPC,FUNCT_7,PRALG_1,PZFMISC1,TARSKI,FUNCT_2,REALSET1,TOPS_2,PENCIL_1,PENCIL_2,CARD_1,XBOOLE_1,PUA2MSS1,FINSET_1,CARD_2,GRAPH_2,FUNCOP_1,RELAT_1,RELSET_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
schemes TRANSGEO,NAT_1,FINSEQ_2,PENCIL_2,FINSEQ_1,PBOOLE,CLASSES1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FUNCT_2,XXREAL_0,XREAL_0,NAT_1,CARD_1,PBOOLE,REALSET1,STRUCT_0,PENCIL_1,ORDINAL1,FUNCT_1,RELAT_1,FINSEQ_1,ZFMISC_1,PRE_POLY;
constructors XXREAL_0,PZFMISC1,TOPS_2,REALSET2,T_0TOPSP,GRAPH_2,PENCIL_2,RELSET_1,PBOOLE,FUNCT_7,PRE_POLY,CKB19,CKB21;
requirements REAL,BOOLE,SUBSET,NUMERALS,ARITHM;
begin
theorem
Th25: (for I being  finite non  empty set holds (for A being  PLS-yielding (ManySortedSet of I) holds ((for i being (Element of I) holds ( A . i ) is  strongly_connected) implies (for f being (Collineation of ( Segre_Product A )) holds (ex s being (Permutation of I) st (for i,j being (Element of I) holds (( s . i ) = j iff (for B1 being (Segre-Coset of A) holds (for b1,b2 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) holds ((B1 = ( product b1 ) & ( f .: B1 ) = ( product b2 )) implies (( indx b1 ) = i implies ( indx b2 ) = j)))))))))))
proof
let I being  finite non  empty set;
let A being  PLS-yielding (ManySortedSet of I);
assume A1: (for i being (Element of I) holds ( A . i ) is  strongly_connected);
let f being (Collineation of ( Segre_Product A ));
defpred P[ set,set ]
 means
(for B1 being (Segre-Coset of A) holds (for b1,b2 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) holds ((B1 = ( product b1 ) & ( f .: B1 ) = ( product b2 )) implies (( indx b1 ) = $1 implies ( indx b2 ) = $2))));
A2: (for x,y,x9 being (Element of I) holds ((P[ x,y ] & P[ x9,y ]) implies x = x9))
proof
reconsider ff = ( f " ) as (Collineation of ( Segre_Product A )) by PENCIL_2:13;
let x being (Element of I);
let y being (Element of I);
let x9 being (Element of I);
assume that
A3: (for B1 being (Segre-Coset of A) holds (for b1,b2 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) holds ((B1 = ( product b1 ) & ( f .: B1 ) = ( product b2 )) implies (( indx b1 ) = x implies ( indx b2 ) = y))))
and
A4: (for B1 being (Segre-Coset of A) holds (for b1,b2 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) holds ((B1 = ( product b1 ) & ( f .: B1 ) = ( product b2 )) implies (( indx b1 ) = x9 implies ( indx b2 ) = y))));
consider b1 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) such that A5: ( indx b1 ) = x and A6: ( product b1 ) is (Segre-Coset of A) by CKB8:1;
reconsider B1 = ( product b1 ) as (Segre-Coset of A) by A6;
reconsider fB1 = ( f .: B1 ) as (Segre-Coset of A) by A1,PENCIL_2:24;
consider L1 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) such that A7: fB1 = ( product L1 ) and ( L1 . ( indx L1 ) ) = ( [#] ( A . ( indx L1 ) ) ) by PENCIL_2:def 2;
consider b2 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) such that A8: ( indx b2 ) = x9 and A9: ( product b2 ) is (Segre-Coset of A) by CKB8:1;
reconsider B2 = ( product b2 ) as (Segre-Coset of A) by A9;
reconsider fB2 = ( f .: B2 ) as (Segre-Coset of A) by A1,PENCIL_2:24;
consider L2 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) such that A10: fB2 = ( product L2 ) and ( L2 . ( indx L2 ) ) = ( [#] ( A . ( indx L2 ) ) ) by PENCIL_2:def 2;
A11: ( indx L2 ) = y by A4,A8,A10;
A12: f is  bijective by PENCIL_2:def 4;
A13: ff = ( (f qua Function) " ) by A12,TOPS_2:def 4;
then A14: ( ff .: fB2 ) = ( f " fB2 ) by A12,FUNCT_1:85;
A15: ( ff .: fB1 ) = ( f " fB1 ) by A12,A13,FUNCT_1:85;
( dom f ) = (the carrier of ( Segre_Product A )) by FUNCT_2:def 1;
then A16: B2 c= ( ff .: fB2 ) by A14,FUNCT_1:76;
( ff .: fB2 ) c= B2 by A12,A14,FUNCT_1:82;
then A17: B2 = ( ff .: fB2 ) by A16,XBOOLE_0:def 10;
( dom f ) = (the carrier of ( Segre_Product A )) by FUNCT_2:def 1;
then A18: B1 c= ( ff .: fB1 ) by A15,FUNCT_1:76;
( ff .: fB1 ) c= B1 by A12,A15,FUNCT_1:82;
then A19: B1 = ( ff .: fB1 ) by A18,XBOOLE_0:def 10;
( indx L1 ) = y by A3,A5,A7;
hence thesis by A1,A5,A7,A8,A10,A11,A19,A17,CKB26:1;
end;
A20: (for y being (Element of I) holds (ex x being (Element of I) st P[ x,y ]))
proof
set p0 = the (Point of ( Segre_Product A ));
reconsider p0 as (Element of ( Carrier A )) by CKB6:1;
let x being (Element of I);
reconsider p = { p0 } as (ManySortedSubset of ( Carrier A )) by PENCIL_1:11;
( dom A ) = I by PARTFUN1:def 2;
then ( A . x ) in ( rng A ) by FUNCT_1:3;
then ( A . x ) is non  trivial by PENCIL_1:def 18;
then reconsider C = ( [#] ( A . x ) ) as non  trivial set;
reconsider b = ( p +* (x,C) ) as  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) by PENCIL_1:9,PENCIL_1:10,PENCIL_2:7;
( dom p ) = I by PARTFUN1:def 2;
then A21: ( b . x ) = C by FUNCT_7:31;
then A22: ( indx b ) = x by PENCIL_1:def 21;
( product b ) c= (the carrier of ( Segre_Product A ))
proof
let a being set;
assume a in ( product b );
then consider f being Function such that A23: a = f and A24: ( dom f ) = ( dom b ) and A25: (for x being set holds (x in ( dom b ) implies ( f . x ) in ( b . x ))) by CARD_3:def 5;
( dom ( Carrier A ) ) = I by PARTFUN1:def 2;
then A26: ( dom f ) = ( dom ( Carrier A ) ) by A24,PARTFUN1:def 2;
A27:now
let i being set;
assume A28: i in ( dom ( Carrier A ) );
then reconsider i1 = i as (Element of I) by PARTFUN1:def 2;
A29: ( f . i ) in ( b . i ) by A24,A25,A26,A28;
per cases ;
suppose i1 = x;

hence ( f . i ) in ( ( Carrier A ) . i ) by A21,A29,CKB7:1;
end;
suppose i1 <> x;

then ( f . i1 ) in ( p . i1 ) by A29,FUNCT_7:32;
then ( f . i1 ) in { ( p0 . i1 ) } by PZFMISC1:def 1;
then ( f . i1 ) = ( p0 . i1 ) by TARSKI:def 1;
then A30: ( f . i1 ) is (Element of ( ( Carrier A ) . i1 )) by PBOOLE:def 14;
( [#] ( A . i1 ) ) is non  empty;
then ( ( Carrier A ) . i1 ) is non  empty by CKB7:1;
hence ( f . i ) in ( ( Carrier A ) . i ) by A30;
end;
end;
( Segre_Product A ) = TopStruct (# ( product ( Carrier A ) ),( Segre_Blocks A ) #) by PENCIL_1:def 23;
hence thesis by A23,A26,A27,CARD_3:def 5;
end;
then reconsider B = ( product b ) as (Segre-Coset of A) by A21,A22,PENCIL_2:def 2;
reconsider fB = ( f " B ) as (Segre-Coset of A) by A1,PENCIL_2:25;
consider b0 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) such that A31: fB = ( product b0 ) and ( b0 . ( indx b0 ) ) = ( [#] ( A . ( indx b0 ) ) ) by PENCIL_2:def 2;
take y = ( indx b0 );
let B1 being (Segre-Coset of A);
let b1 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A ));
let b2 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A ));
f is  bijective by PENCIL_2:def 4;
then ( rng f ) = (the carrier of ( Segre_Product A )) by FUNCT_2:def 3;
then A32: ( f .: fB ) = ( product b ) by FUNCT_1:77;
assume ((B1 = ( product b1 ) & ( f .: B1 ) = ( product b2 )) & ( indx b1 ) = y);
hence thesis by A1,A22,A31,A32,CKB26:1;
end;
A33: (for x being (Element of I) holds (ex y being (Element of I) st P[ x,y ]))
proof
set p0 = the (Point of ( Segre_Product A ));
reconsider p0 as (Element of ( Carrier A )) by CKB6:1;
let x being (Element of I);
reconsider p = { p0 } as (ManySortedSubset of ( Carrier A )) by PENCIL_1:11;
( dom A ) = I by PARTFUN1:def 2;
then ( A . x ) in ( rng A ) by FUNCT_1:3;
then ( A . x ) is non  trivial by PENCIL_1:def 18;
then reconsider C = ( [#] ( A . x ) ) as non  trivial set;
reconsider b = ( p +* (x,C) ) as  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) by PENCIL_1:9,PENCIL_1:10,PENCIL_2:7;
( dom p ) = I by PARTFUN1:def 2;
then A34: ( b . x ) = C by FUNCT_7:31;
then A35: ( indx b ) = x by PENCIL_1:def 21;
( product b ) c= (the carrier of ( Segre_Product A ))
proof
let a being set;
assume a in ( product b );
then consider f being Function such that A36: a = f and A37: ( dom f ) = ( dom b ) and A38: (for x being set holds (x in ( dom b ) implies ( f . x ) in ( b . x ))) by CARD_3:def 5;
( dom ( Carrier A ) ) = I by PARTFUN1:def 2;
then A39: ( dom f ) = ( dom ( Carrier A ) ) by A37,PARTFUN1:def 2;
A40:now
let i being set;
assume A41: i in ( dom ( Carrier A ) );
then reconsider i1 = i as (Element of I) by PARTFUN1:def 2;
A42: ( f . i ) in ( b . i ) by A37,A38,A39,A41;
per cases ;
suppose i1 = x;

hence ( f . i ) in ( ( Carrier A ) . i ) by A34,A42,CKB7:1;
end;
suppose i1 <> x;

then ( f . i1 ) in ( p . i1 ) by A42,FUNCT_7:32;
then ( f . i1 ) in { ( p0 . i1 ) } by PZFMISC1:def 1;
then ( f . i1 ) = ( p0 . i1 ) by TARSKI:def 1;
then A43: ( f . i1 ) is (Element of ( ( Carrier A ) . i1 )) by PBOOLE:def 14;
( [#] ( A . i1 ) ) is non  empty;
then ( ( Carrier A ) . i1 ) is non  empty by CKB7:1;
hence ( f . i ) in ( ( Carrier A ) . i ) by A43;
end;
end;
( Segre_Product A ) = TopStruct (# ( product ( Carrier A ) ),( Segre_Blocks A ) #) by PENCIL_1:def 23;
hence thesis by A36,A39,A40,CARD_3:def 5;
end;
then reconsider B = ( product b ) as (Segre-Coset of A) by A34,A35,PENCIL_2:def 2;
reconsider fB = ( f .: B ) as (Segre-Coset of A) by A1,PENCIL_2:24;
consider b0 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) such that A44: fB = ( product b0 ) and ( b0 . ( indx b0 ) ) = ( [#] ( A . ( indx b0 ) ) ) by PENCIL_2:def 2;
take ( indx b0 );
let B1 being (Segre-Coset of A);
let b1 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A ));
let b2 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A ));
assume ((B1 = ( product b1 ) & ( f .: B1 ) = ( product b2 )) & ( indx b1 ) = x);
hence thesis by A1,A35,A44,CKB26:1;
end;
A45: (for x,y,y9 being (Element of I) holds ((P[ x,y ] & P[ x,y9 ]) implies y = y9))
proof
let x being (Element of I);
let y being (Element of I);
let y9 being (Element of I);
assume that
A46: (for B1 being (Segre-Coset of A) holds (for b1,b2 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) holds ((B1 = ( product b1 ) & ( f .: B1 ) = ( product b2 )) implies (( indx b1 ) = x implies ( indx b2 ) = y))))
and
A47: (for B1 being (Segre-Coset of A) holds (for b1,b2 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) holds ((B1 = ( product b1 ) & ( f .: B1 ) = ( product b2 )) implies (( indx b1 ) = x implies ( indx b2 ) = y9))));
consider b1 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) such that A48: ( indx b1 ) = x and A49: ( product b1 ) is (Segre-Coset of A) by CKB8:1;
reconsider B1 = ( product b1 ) as (Segre-Coset of A) by A49;
reconsider fB1 = ( f .: B1 ) as (Segre-Coset of A) by A1,PENCIL_2:24;
consider L1 being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) such that A50: fB1 = ( product L1 ) and ( L1 . ( indx L1 ) ) = ( [#] ( A . ( indx L1 ) ) ) by PENCIL_2:def 2;
( indx L1 ) = y by A46,A48,A50;
hence thesis by A47,A48,A50;
end;
thus (ex f being (Permutation of I) st (for x,y being (Element of I) holds (( f . x ) = y iff P[ x,y ]))) from TRANSGEO:sch 1(A33,A20,A2,A45);
end;
