environ
vocabularies NUMBERS,XBOOLE_0,STRUCT_0,PRE_TOPC,PENCIL_2,PENCIL_1,FUNCT_1,RELAT_1,TARSKI,SUBSET_1,PRALG_1,PBOOLE,ZFMISC_1,RELAT_2,FINSEQ_1,NAT_1,XXREAL_0,ARYTM_3,CARD_1,ARYTM_1,WAYBEL_3,RLVECT_2,CARD_3,INTEGRA1,FUNCT_4,FINSET_1,FDIFF_1,PARSP_1,GRAPH_2,FUNCT_2,CAT_1,RCOMP_1,FUNCOP_1,PENCIL_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,XCMPLX_0,XXREAL_0,NUMBERS,NAT_1,RELAT_1,SUBSET_1,FUNCT_1,FUNCT_2,FUNCOP_1,RELSET_1,CARD_1,FINSET_1,FINSEQ_1,CARD_3,DOMAIN_1,STRUCT_0,PRE_TOPC,PBOOLE,PZFMISC1,T_0TOPSP,PRALG_1,WAYBEL_3,PENCIL_1,FUNCT_7,PENCIL_2,TOPS_2,GRAPH_2;
definitions TARSKI,XBOOLE_0,PBOOLE,FUNCT_1,T_0TOPSP,STRUCT_0,RELAT_1;
theorems XBOOLE_0,ZFMISC_1,FUNCT_1,FINSEQ_1,FINSEQ_3,NAT_1,CARD_3,PBOOLE,PRE_TOPC,FUNCT_7,PRALG_1,PZFMISC1,TARSKI,FUNCT_2,REALSET1,TOPS_2,PENCIL_1,PENCIL_2,CARD_1,XBOOLE_1,PUA2MSS1,FINSET_1,CARD_2,GRAPH_2,FUNCOP_1,RELAT_1,RELSET_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
schemes TRANSGEO,NAT_1,FINSEQ_2,PENCIL_2,FINSEQ_1,PBOOLE,CLASSES1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FUNCT_2,XXREAL_0,XREAL_0,NAT_1,CARD_1,PBOOLE,REALSET1,STRUCT_0,PENCIL_1,ORDINAL1,FUNCT_1,RELAT_1,FINSEQ_1,ZFMISC_1,PRE_POLY;
constructors XXREAL_0,PZFMISC1,TOPS_2,REALSET2,T_0TOPSP,GRAPH_2,PENCIL_2,RELSET_1,PBOOLE,FUNCT_7,PRE_POLY;
requirements REAL,BOOLE,SUBSET,NUMERALS,ARITHM;
begin
theorem
Th14: (for I being non  empty set holds (for A being  PLS-yielding (ManySortedSet of I) holds (for i being (Element of I) holds (for S being (Subset of ( A . i )) holds (for L being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A )) holds ( product ( L +* (i,S) ) ) is (Subset of ( Segre_Product A )))))))
proof
let I being non  empty set;
let A being  PLS-yielding (ManySortedSet of I);
let i being (Element of I);
let S being (Subset of ( A . i ));
let L being  Segre-like non  trivial-yielding (ManySortedSubset of ( Carrier A ));
A1: ( dom ( L +* (i,S) ) ) = I by PARTFUN1:def 2
.= ( dom ( Carrier A ) ) by PARTFUN1:def 2;
A2:now
let a being set;
assume a in ( dom ( L +* (i,S) ) );
then A3: a in I by PARTFUN1:def 2;
then A4: a in ( dom L ) by PARTFUN1:def 2;
per cases ;
suppose A5: a = i;

then ( ( L +* (i,S) ) . a ) = S by A4,FUNCT_7:31;
then ( ( L +* (i,S) ) . a ) c= ( [#] ( A . i ) );
hence ( ( L +* (i,S) ) . a ) c= ( ( Carrier A ) . a ) by A5,CKB7:1;
end;
suppose A6: a <> i;

A7: L c= ( Carrier A ) by PBOOLE:def 18;
( ( L +* (i,S) ) . a ) = ( L . a ) by A6,FUNCT_7:32;
hence ( ( L +* (i,S) ) . a ) c= ( ( Carrier A ) . a ) by A3,A7,PBOOLE:def 2;
end;
end;
( Segre_Product A ) = TopStruct (# ( product ( Carrier A ) ),( Segre_Blocks A ) #) by PENCIL_1:def 23;
hence thesis by A1,A2,CARD_3:27;
end;
