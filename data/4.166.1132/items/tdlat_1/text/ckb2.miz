environ
vocabularies PRE_TOPC,SUBSET_1,XBOOLE_0,TARSKI,TOPS_1,RCOMP_1,SETFAM_1,ZFMISC_1,STRUCT_0,BINOP_1,FUNCT_1,MCART_1,LATTICES,EQREL_1,REALSET1,NAT_LAT,TDLAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,REALSET1,STRUCT_0,PRE_TOPC,LATTICES,BINOP_1,TOPS_1,FUNCT_1,DOMAIN_1,FUNCT_2,NAT_LAT;
definitions TARSKI,LATTICES,NAT_LAT,XBOOLE_0,BINOP_1,REALSET1,SUBSET_1,STRUCT_0;
theorems TOPS_1,PRE_TOPC,LATTICE2,BINOP_1,ZFMISC_1,FUNCT_2,SUBSET_1,MCART_1,FUNCT_1,XBOOLE_0,XBOOLE_1,CKB1;
schemes FUNCT_2,BINOP_2;
registrations SUBSET_1,RELSET_1,REALSET1,LATTICES,TOPS_1,RELAT_1,PRE_TOPC;
constructors PARTFUN1,BINOP_1,REALSET1,TOPS_1,NAT_LAT;
requirements BOOLE,SUBSET;
begin
reserve T for TopSpace;
theorem
Th2: (for A,B being (Subset of T) holds (A misses B iff B c= ( A ` )))
proof
let A being (Subset of T),B being (Subset of T);
thus (A misses B implies B c= ( A ` ))
proof
assume A misses B;
then ( A /\ B ) = ( {} T ) by XBOOLE_0:def 7;
then ( ( A /\ B ) ` ) = ( [#] T );
then ( ( B ` ) \/ ( A ` ) ) = ( [#] T ) by XBOOLE_1:54;
then ( ( B ` ) ` ) c= ( A ` ) by CKB1:1;
hence thesis;
end;

assume B c= ( A ` );
then ( ( B ` ) ` ) c= ( A ` );
then ( ( B ` ) \/ ( A ` ) ) = ( [#] T ) by CKB1:1;
then ( ( A /\ B ) ` ) = ( [#] T ) by XBOOLE_1:54;
then ( A /\ B ) = ( ( [#] T ) ` );
then ( A /\ B ) = ( {} T ) by XBOOLE_1:37;
hence thesis by XBOOLE_0:def 7;
end;
