environ
vocabularies FUNCT_1,NUMBERS,SUBSET_1,SUPINF_2,XXREAL_0,ORDINAL1,RELAT_1,SUPINF_1,ORDINAL2,PROB_1,MEASURE2,MEASURE1,TARSKI,SETFAM_1,CARD_1,XBOOLE_0,ARYTM_3,NAT_1,ARYTM_1,REAL_1,XXREAL_2,ZFMISC_1,MEASURE3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,XXREAL_0,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,REAL_1,NAT_1,SETFAM_1,PROB_1,XXREAL_2,SUPINF_1,SUPINF_2,MEASURE1,MEASURE2,CKB3,CKB4;
definitions TARSKI,XBOOLE_0,XXREAL_3;
theorems TARSKI,FUNCT_1,FUNCT_2,ZFMISC_1,NAT_1,SETFAM_1,SUPINF_2,MEASURE1,MEASURE2,PROB_2,XBOOLE_0,XBOOLE_1,XXREAL_0,PROB_1,FINSUB_1,ORDINAL1,XXREAL_2,VALUED_0,XXREAL_3,RELAT_1,CKB1,CKB2;
schemes NAT_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,FUNCT_2,NUMBERS,XREAL_0,MEMBERED,MEASURE1,VALUED_0,XXREAL_3,RELSET_1;
constructors PARTFUN1,REAL_1,NAT_1,PROB_2,MEASURE1,MEASURE2,SUPINF_1,RELSET_1,CKB4;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve X for set;
theorem
(for S being (SigmaField of X) holds (for M being (sigma_Measure of S) holds (for F being (Function of ( NAT ),S) holds (for A being (Element of S) holds ((( meet ( rng F ) ) c= A & (for n being (Element of ( NAT )) holds A c= ( F . n ))) implies ( M . A ) = ( M . ( meet ( rng F ) ) ))))))
proof
let S being (SigmaField of X);
let M being (sigma_Measure of S);
let F being (Function of ( NAT ),S);
let A being (Element of S);
assume that
A1: ( meet ( rng F ) ) c= A
and
A2: (for n being (Element of ( NAT )) holds A c= ( F . n ));
A c= ( meet ( rng F ) )
proof
let x being set;
assume A3: x in A;
(for Y being set holds (Y in ( rng F ) implies x in Y))
proof
let Y being set;
A4: ( dom F ) = ( NAT ) by FUNCT_2:def 1;
assume Y in ( rng F );
then (ex n being set st (n in ( NAT ) & Y = ( F . n ))) by A4,FUNCT_1:def 3;
then A c= Y by A2;
hence thesis by A3;
end;
hence thesis by SETFAM_1:def 1;
end;
then A5: ( M . A ) <= ( M . ( meet ( rng F ) ) ) by MEASURE1:31;
( M . ( meet ( rng F ) ) ) <= ( M . A ) by A1,MEASURE1:31;
hence thesis by A5,XXREAL_0:1;
end;
