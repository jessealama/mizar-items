environ
vocabularies TARSKI,XBOOLE_0,SUBSET_1,FUNCT_1,RELAT_1,ZFMISC_1,ORDINAL1;
notations TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,SUBSET_1,RELAT_1,FUNCT_1,CKB6,CKB12,CKB13,CKB15,CKB18,CKB20,CKB26;
definitions TARSKI,XBOOLE_0,RELAT_1,FUNCT_1,CKB6,CKB12,CKB13,CKB15,CKB26;
theorems TARSKI,XBOOLE_0,FUNCT_1,ZFMISC_1,ENUMSET1,RELAT_1,XBOOLE_1,SUBSET_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB31,CKB35,CKB36,CKB37,CKB38,CKB41,CKB42,CKB43,CKB44;
schemes XBOOLE_0,FUNCT_1,CKB39,CKB40;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,CKB7,CKB16,CKB17,CKB19,CKB29,CKB32,CKB33,CKB34;
constructors TARSKI,ENUMSET1,SUBSET_1,FUNCT_1,CKB6,CKB12,CKB13,CKB15,CKB26;
requirements SUBSET,BOOLE;
begin
reserve a for set;
reserve X for set;
reserve Y for set;
reserve A for Ordinal;
reserve B for Ordinal;
reserve C for Ordinal;
theorem
(for X holds (ex A st ((not A in X) & (for B holds ((not B in X) implies A c= B)))))
proof
let X;
defpred P[ set ]
 means
(not $1 in X);
consider B such that A1: (not B in X) by CKB44:1;
consider Y such that A2: (a in Y iff (a in ( succ B ) & P[ a ])) from XBOOLE_0:sch 1;
(for a holds (a in Y implies a in ( succ B ))) by A2;
then A3: Y c= ( succ B ) by TARSKI:def 3;
B in ( succ B ) by CKB8:1;
then Y <> ( {} ) by A1,A2;
then consider A such that A4: A in Y and A5: (for B holds (B in Y implies A c= B)) by A3,CKB36:1;
A in ( succ B ) by A2,A4;
then A6: A c= ( succ B ) by CKB12:def 1;
take A;
thus (not A in X) by A2,A4;
let C;
assume A7: (not C in X);
assume A8: (not A c= C);
then (not A in C) by CKB12:def 1;
then C in A by A8,CKB25:1;
then C in Y by A2,A7,A6;
hence contradiction by A5,A8;
end;
