environ
vocabularies TARSKI,XBOOLE_0,SUBSET_1,FUNCT_1,RELAT_1,ZFMISC_1,ORDINAL1;
notations TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,SUBSET_1,RELAT_1,FUNCT_1,CKB6,CKB12,CKB13,CKB15,CKB18,CKB20;
definitions TARSKI,XBOOLE_0,RELAT_1,FUNCT_1,CKB6,CKB12,CKB13,CKB15;
theorems TARSKI,XBOOLE_0,FUNCT_1,ZFMISC_1,ENUMSET1,RELAT_1,XBOOLE_1,SUBSET_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB21;
schemes XBOOLE_0,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,CKB7,CKB16,CKB17,CKB19;
constructors TARSKI,ENUMSET1,SUBSET_1,FUNCT_1,CKB6,CKB12,CKB13,CKB15;
requirements SUBSET,BOOLE;
begin
reserve a for set;
reserve x for set;
reserve y for set;
reserve z for set;
reserve A for Ordinal;
theorem
Th21: (for x being  epsilon-transitive set holds (for A being Ordinal holds (x c< A implies x in A)))
proof
let x being  epsilon-transitive set;
let A being Ordinal;
set a = the (Element of ( A \ x ));
assume A1: x c< A;
then A2: x c= A by XBOOLE_0:def 8;
( A \ x ) <> ( {} )
proof
assume ( A \ x ) = ( {} );
then A c= x by XBOOLE_1:37;
hence contradiction by A1,XBOOLE_1:60;
end;
then a in ( A \ x );
then consider y such that A3: y in ( A \ x ) and A4: (not (ex a st (a in ( A \ x ) & a in y))) by TARSKI:2;
A5: (not y in x) by A3,XBOOLE_0:def 5;
now
let a;
assume a in x;
then consider z such that A6: z = a and A7: z in x;
z c= x by A7,CKB12:def 1;
then (not y in z) by A3,XBOOLE_0:def 5;
hence a in y by A2,A3,A5,A6,A7,CKB13:def 1;
end;
then A8: x c= y by TARSKI:def 3;
A9: y c= A by A3,CKB12:def 1;
now
let a;
assume A10: a in y;
then (not a in ( A \ x )) by A4;
hence a in x by A9,A10,XBOOLE_0:def 5;
end;
then A11: y c= x by TARSKI:def 3;
y in A by A3;
hence thesis by A11,A8,XBOOLE_0:def 10;
end;
