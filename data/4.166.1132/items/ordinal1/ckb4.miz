environ
vocabularies TARSKI,XBOOLE_0,SUBSET_1,FUNCT_1,RELAT_1,ZFMISC_1,ORDINAL1;
notations TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,SUBSET_1,RELAT_1,FUNCT_1;
definitions TARSKI,XBOOLE_0,RELAT_1,FUNCT_1;
theorems TARSKI,XBOOLE_0,FUNCT_1,ZFMISC_1,ENUMSET1,RELAT_1,XBOOLE_1,SUBSET_1,CKB1,CKB2,CKB3;
schemes XBOOLE_0,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1;
constructors TARSKI,ENUMSET1,SUBSET_1,FUNCT_1;
requirements SUBSET,BOOLE;
begin
reserve Y for set;
reserve X1 for set;
reserve X2 for set;
reserve X3 for set;
reserve X4 for set;
reserve X5 for set;
reserve X6 for set;
reserve y for set;
theorem
(not (((((X1 in X2 & X2 in X3) & X3 in X4) & X4 in X5) & X5 in X6) & X6 in X1))
proof
assume that
A1: X1 in X2
and
A2: X2 in X3
and
A3: X3 in X4
and
A4: X4 in X5
and
A5: X5 in X6
and
A6: X6 in X1;
set Z = { X1,X2,X3,X4,X5,X6 };
A7: (for Y holds (Y in Z implies (ex y st (y in Z & y in Y))))
proof
let Y;
assume that
A8: Y in Z;
now
per cases  by A8,ENUMSET1:def 4;
suppose A9: Y = X1;

take y = X6;
thus (y in Z & y in Y) by A6,A9,ENUMSET1:def 4;
end;
suppose A10: Y = X2;

take y = X1;
thus (y in Z & y in Y) by A1,A10,ENUMSET1:def 4;
end;
suppose A11: Y = X3;

take y = X2;
thus (y in Z & y in Y) by A2,A11,ENUMSET1:def 4;
end;
suppose A12: Y = X4;

take y = X3;
thus (y in Z & y in Y) by A3,A12,ENUMSET1:def 4;
end;
suppose A13: Y = X5;

take y = X4;
thus (y in Z & y in Y) by A4,A13,ENUMSET1:def 4;
end;
suppose A14: Y = X6;

take y = X5;
thus (y in Z & y in Y) by A5,A14,ENUMSET1:def 4;
end;
end;
hence thesis;
end;
X1 in { X1,X2,X3,X4,X5,X6 } by ENUMSET1:def 4;
hence contradiction by A7,TARSKI:2;
end;
