environ
vocabularies NUMBERS,FSM_1,SCMFSA_2,SF_MASTR,AMI_1,SCMFSA7B,SUBSET_1,UNIALG_2,SCMFSA6C,SCMFSA6B,FUNCT_1,XBOOLE_0,FUNCT_4,CARD_1,AMISTD_2,RELAT_1,GRAPHSP,AMI_3,PARTFUN1,COMPLEX1,SCMFSA8B,TURING_1,SCMFSA_9,ARYTM_3,FUNCOP_1,SCMFSA8A,CARD_3,SFMASTR1,ARYTM_1,XXREAL_0,SCMFSA6A,TARSKI,SCMFSA9A,FINSEQ_1,GRAPH_2,AOFA_I00,FUNCT_2,FINSEQ_2,SFMASTR3,NAT_1,SCMNORM,PBOOLE,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,CARD_3,INT_2,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_4,FUNCT_7,PBOOLE,FUNCOP_1,GRAPH_2,FINSEQ_1,FINSEQ_2,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,SCMFSA_2,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,SCMFSA9A,XXREAL_0,NAT_1,CKB11,CKB19,CKB25;
definitions TARSKI,SCMFSA7B,SCMFSA9A,GRAPH_2,SCMFSA6A,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB11,CKB19,CKB25;
theorems TARSKI,ZFMISC_1,ENUMSET1,ABSVALUE,NAT_1,INT_1,RELAT_1,FUNCT_7,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,GRAPH_2,SCMFSA_2,MEMSTR_0,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA8C,SCMFSA_9,SFMASTR1,SCMFSA9A,SFMASTR2,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,PARTFUN1,AFINSQ_1,PBOOLE,EXTPRO_1,CARD_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
schemes FUNCT_2,NAT_1;
registrations SUBSET_1,SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_3,SCMFSA_2,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,XBOOLE_0,VALUED_0,AFINSQ_1,FUNCOP_1,COMPOS_1,EXTPRO_1,PBOOLE,FUNCT_4,MEMSTR_0,SCMFSA6A,CKB7,CKB27;
constructors SETWISEO,REAL_1,INT_2,MESFUNC1,SCMFSA6A,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,SCMFSA9A,RELSET_1,FUNCT_4,PBOOLE,GRAPH_2,SCMFSA7B,MEMSTR_0,AMISTD_1,CKB11,CKB19,CKB25;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve a for  read-write Int-Location;
reserve aa for Int-Location;
reserve bb for Int-Location;
reserve cc for Int-Location;
reserve I for (Program of ( SCM+FSA ));
theorem
Th29: (((a <> aa & aa <> ( 1 -stRWNotIn ( { a,bb,cc } \/ ( UsedIntLoc I ) ) )) & (not I destroy aa)) implies (not ( for-up (a,bb,cc,I) ) destroy aa))
proof
assume that
A1: a <> aa
and
A2: aa <> ( 1 -stRWNotIn ( { a,bb,cc } \/ ( UsedIntLoc I ) ) )
and
A3: (not I destroy aa);
set aux = ( 1 -stRWNotIn ( { a,bb,cc } \/ ( UsedIntLoc I ) ) );
set i2 = ( AddTo (aux,( intloc ( 0 ) )) );
A4: (not i2 destroy aa) by A2,SCMFSA7B:7;
set i3 = ( a := bb );
set i1 = ( SubFrom (aux,bb) );
set i0 = ( aux := cc );
set I03 = ( ( ( i0 ';' i1 ) ';' i2 ) ';' i3 );
((not i0 destroy aa) & (not i1 destroy aa)) by A2,SCMFSA7B:6,SCMFSA7B:8;
then (not ( ( i0 ';' i1 ) ';' i2 ) destroy aa) by A4,SCMFSA8C:54,SCMFSA8C:55;
then A5: (not I03 destroy aa) by A1,SCMFSA7B:6,SCMFSA8C:54;
set IB = ( ( I ';' ( AddTo (a,( intloc ( 0 ) )) ) ) ';' ( SubFrom (aux,( intloc ( 0 ) )) ) );
set I4 = ( while>0 (aux,IB) );
(not ( I ';' ( AddTo (a,( intloc ( 0 ) )) ) ) destroy aa) by A1,A3,SCMFSA7B:7,SCMFSA8C:54;
then (not IB destroy aa) by A2,SCMFSA7B:8,SCMFSA8C:54;
then (not I4 destroy aa) by CKB9:1;
hence thesis by A5,SCMFSA8C:52;
end;
