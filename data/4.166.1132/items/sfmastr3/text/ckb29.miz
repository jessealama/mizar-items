environ
vocabularies NUMBERS,FSM_1,SCMFSA_2,SF_MASTR,AMI_1,SCMFSA7B,SUBSET_1,UNIALG_2,SCMFSA6C,SCMFSA6B,FUNCT_1,XBOOLE_0,FUNCT_4,CARD_1,AMISTD_2,RELAT_1,GRAPHSP,AMI_3,PARTFUN1,COMPLEX1,SCMFSA8B,TURING_1,SCMFSA_9,ARYTM_3,FUNCOP_1,SCMFSA8A,CARD_3,SFMASTR1,ARYTM_1,XXREAL_0,SCMFSA6A,TARSKI,SCMFSA9A,FINSEQ_1,GRAPH_2,AOFA_I00,FUNCT_2,FINSEQ_2,SFMASTR3,NAT_1,SCMNORM,PBOOLE,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,CARD_3,INT_2,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_4,FUNCT_7,PBOOLE,FUNCOP_1,GRAPH_2,FINSEQ_1,FINSEQ_2,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,SCMFSA_2,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,SCMFSA9A,XXREAL_0,NAT_1,CKB11,CKB19,CKB25;
definitions TARSKI,SCMFSA7B,SCMFSA9A,GRAPH_2,SCMFSA6A,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB11,CKB19,CKB25;
theorems TARSKI,ZFMISC_1,ENUMSET1,ABSVALUE,NAT_1,INT_1,RELAT_1,FUNCT_7,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,GRAPH_2,SCMFSA_2,MEMSTR_0,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA8C,SCMFSA_9,SFMASTR1,SCMFSA9A,SFMASTR2,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,PARTFUN1,AFINSQ_1,PBOOLE,EXTPRO_1,CARD_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB28;
schemes FUNCT_2,NAT_1;
registrations SUBSET_1,SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_3,SCMFSA_2,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,XBOOLE_0,VALUED_0,AFINSQ_1,FUNCOP_1,COMPOS_1,EXTPRO_1,PBOOLE,FUNCT_4,MEMSTR_0,SCMFSA6A,CKB7,CKB27;
constructors SETWISEO,REAL_1,INT_2,MESFUNC1,SCMFSA6A,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,SCMFSA9A,RELSET_1,FUNCT_4,PBOOLE,GRAPH_2,SCMFSA7B,MEMSTR_0,AMISTD_1,CKB11,CKB19,CKB25;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve s for (State of ( SCM+FSA ));
reserve a for  read-write Int-Location;
reserve bb for Int-Location;
reserve cc for Int-Location;
reserve x for Int-Location;
reserve f for FinSeq-Location;
reserve I for (Program of ( SCM+FSA ));
reserve p for (Instruction-Sequence of ( SCM+FSA ));
theorem
Th30: ((( s . ( intloc ( 0 ) ) ) = 1 & ( s . bb ) > ( s . cc )) implies ((for x holds ((x <> a & x in ( { bb,cc } \/ ( UsedIntLoc I ) )) implies ( ( IExec (( for-up (a,bb,cc,I) ),p,s) ) . x ) = ( s . x ))) & (for f holds ( ( IExec (( for-up (a,bb,cc,I) ),p,s) ) . f ) = ( s . f ))))
proof
assume that
A1: ( s . ( intloc ( 0 ) ) ) = 1
and
A2: ( s . bb ) > ( s . cc );
(cc = ( intloc ( 0 ) ) or cc is  read-write) by SF_MASTR:def 5;
then A3: ( ( Initialized s ) . cc ) = ( s . cc ) by A1,SCMFSA6A:38,SCMFSA6C:3;
set MI = ( for-up (a,bb,cc,I) );
set i3 = ( a := bb );
set aux = ( 1 -stRWNotIn ( { a,bb,cc } \/ ( UsedIntLoc I ) ) );
set i0 = ( aux := cc );
set i1 = ( SubFrom (aux,bb) );
set i2 = ( AddTo (aux,( intloc ( 0 ) )) );
set IB = ( ( I ';' ( AddTo (a,( intloc ( 0 ) )) ) ) ';' ( SubFrom (aux,( intloc ( 0 ) )) ) );
set I4 = ( while>0 (aux,IB) );
set I03 = ( ( ( i0 ';' i1 ) ';' i2 ) ';' i3 );
set s1 = ( IExec (I03,p,s) );
set p1 = p;
set s2 = ( ( s +* (aux,( ( ( s . cc ) - ( s . bb ) ) + 1 )) ) +* (a,( s . bb )) );
A4: ( ( IExec (( i0 ';' i1 ),p,s) ) . ( intloc ( 0 ) ) ) = ( ( Exec (i1,( Exec (i0,( Initialized s )) )) ) . ( intloc ( 0 ) ) ) by SCMFSA6C:8
.= ( ( Exec (i0,( Initialized s )) ) . ( intloc ( 0 ) ) ) by SCMFSA_2:65
.= ( ( Initialized s ) . ( intloc ( 0 ) ) ) by SCMFSA_2:63
.= 1 by SCMFSA6A:38;
(bb = ( intloc ( 0 ) ) or bb is  read-write) by SF_MASTR:def 5;
then A5: ( ( Initialized s ) . bb ) = ( s . bb ) by A1,SCMFSA6A:38,SCMFSA6C:3;
A6: ( s1 . ( intloc ( 0 ) ) ) = ( ( Exec (i3,( IExec (( ( i0 ';' i1 ) ';' i2 ),p,s) )) ) . ( intloc ( 0 ) ) ) by SCMFSA6C:6
.= ( ( IExec (( ( i0 ';' i1 ) ';' i2 ),p,s) ) . ( intloc ( 0 ) ) ) by SCMFSA_2:63
.= ( ( Exec (i2,( IExec (( i0 ';' i1 ),p,s) )) ) . ( intloc ( 0 ) ) ) by SCMFSA6C:6
.= 1 by A4,SCMFSA_2:64;
( ( s . bb ) - ( s . bb ) ) > ( ( s . cc ) - ( s . bb ) ) by A2,XREAL_1:9;
then ( ( s . cc ) - ( s . bb ) ) <= ( - 1 ) by INT_1:8;
then A7: ( ( ( s . cc ) - ( s . bb ) ) + 1 ) <= ( ( - 1 ) + 1 ) by XREAL_1:6;
set s3 = ( IExec (MI,p,s) );
a in { a,bb,cc } by ENUMSET1:def 1;
then a in ( { a,bb,cc } \/ ( UsedIntLoc I ) ) by XBOOLE_0:def 3;
then A8: a <> aux by SFMASTR1:20;
bb in { a,bb,cc } by ENUMSET1:def 1;
then bb in ( { a,bb,cc } \/ ( UsedIntLoc I ) ) by XBOOLE_0:def 3;
then A9: bb <> aux by SFMASTR1:20;
A10: ( s1 . aux ) = ( ( Exec (i3,( IExec (( ( i0 ';' i1 ) ';' i2 ),p,s) )) ) . aux ) by SCMFSA6C:6
.= ( ( IExec (( ( i0 ';' i1 ) ';' i2 ),p,s) ) . aux ) by A8,SCMFSA_2:63
.= ( ( Exec (i2,( IExec (( i0 ';' i1 ),p,s) )) ) . aux ) by SCMFSA6C:6
.= ( ( ( IExec (( i0 ';' i1 ),p,s) ) . aux ) + 1 ) by A4,SCMFSA_2:64
.= ( ( ( Exec (i1,( Exec (i0,( Initialized s )) )) ) . aux ) + 1 ) by SCMFSA6C:8
.= ( ( ( ( Exec (i0,( Initialized s )) ) . aux ) - ( ( Exec (i0,( Initialized s )) ) . bb ) ) + 1 ) by SCMFSA_2:65
.= ( ( ( ( Initialized s ) . cc ) - ( ( Exec (i0,( Initialized s )) ) . bb ) ) + 1 ) by SCMFSA_2:63
.= ( ( ( s . cc ) - ( s . bb ) ) + 1 ) by A9,A3,A5,SCMFSA_2:63;
then (I4 is_halting_on s1,p1 & I4 is_closed_on s1,p1) by A7,SCMFSA_9:38;
then A11: ( DataPart ( IExec (MI,p,s) ) ) = ( DataPart ( IExec (I4,p1,s1) ) ) by SFMASTR1:9
.= ( DataPart s1 ) by A10,A7,A6,SCMFSA9A:35
.= ( DataPart s2 ) by A1,CKB18:1;
hereby
let x being Int-Location;
assume that
A12: x <> a
and
A13: x in ( { bb,cc } \/ ( UsedIntLoc I ) );
x in ( { a,bb,cc } \/ ( UsedIntLoc I ) )
proof
per cases  by A13,XBOOLE_0:def 3;
suppose x in { bb,cc };

then (x = bb or x = cc) by TARSKI:def 2;
then x in { a,bb,cc } by ENUMSET1:def 1;
hence thesis by XBOOLE_0:def 3;
end;
suppose x in ( UsedIntLoc I );

hence thesis by XBOOLE_0:def 3;
end;
end;
then A14: x <> aux by SFMASTR1:20;
thus ( s3 . x ) = ( s2 . x ) by A11,SCMFSA6A:7
.= ( ( s +* (aux,( ( ( s . cc ) - ( s . bb ) ) + 1 )) ) . x ) by A12,FUNCT_7:32
.= ( s . x ) by A14,FUNCT_7:32;
end;
let x being FinSeq-Location;
thus ( s3 . x ) = ( s2 . x ) by A11,SCMFSA6A:7
.= ( ( s +* (aux,( ( ( s . cc ) - ( s . bb ) ) + 1 )) ) . x ) by FUNCT_7:32,SCMFSA_2:58
.= ( s . x ) by FUNCT_7:32,SCMFSA_2:58;
end;
