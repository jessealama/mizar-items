environ
vocabularies NUMBERS,FSM_1,SCMFSA_2,SF_MASTR,AMI_1,SCMFSA7B,SUBSET_1,UNIALG_2,SCMFSA6C,SCMFSA6B,FUNCT_1,XBOOLE_0,FUNCT_4,CARD_1,AMISTD_2,RELAT_1,GRAPHSP,AMI_3,PARTFUN1,COMPLEX1,SCMFSA8B,TURING_1,SCMFSA_9,ARYTM_3,FUNCOP_1,SCMFSA8A,CARD_3,SFMASTR1,ARYTM_1,XXREAL_0,SCMFSA6A,TARSKI,SCMFSA9A,FINSEQ_1,GRAPH_2,AOFA_I00,FUNCT_2,FINSEQ_2,SFMASTR3,NAT_1,SCMNORM,PBOOLE,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,CARD_3,INT_2,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_4,FUNCT_7,PBOOLE,FUNCOP_1,GRAPH_2,FINSEQ_1,FINSEQ_2,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,SCMFSA_2,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,SCMFSA9A,XXREAL_0,NAT_1;
definitions TARSKI,SCMFSA7B,SCMFSA9A,GRAPH_2,SCMFSA6A,COMPOS_1,EXTPRO_1,MEMSTR_0;
theorems TARSKI,ZFMISC_1,ENUMSET1,ABSVALUE,NAT_1,INT_1,RELAT_1,FUNCT_7,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,GRAPH_2,SCMFSA_2,MEMSTR_0,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA8C,SCMFSA_9,SFMASTR1,SCMFSA9A,SFMASTR2,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,PARTFUN1,AFINSQ_1,PBOOLE,EXTPRO_1,CARD_3,CKB1,CKB2,CKB3;
schemes FUNCT_2,NAT_1;
registrations SUBSET_1,SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_3,SCMFSA_2,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,XBOOLE_0,VALUED_0,AFINSQ_1,FUNCOP_1,COMPOS_1,EXTPRO_1,PBOOLE,FUNCT_4,MEMSTR_0,SCMFSA6A;
constructors SETWISEO,REAL_1,INT_2,MESFUNC1,SCMFSA6A,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,SCMFSA9A,RELSET_1,FUNCT_4,PBOOLE,GRAPH_2,SCMFSA7B,MEMSTR_0,AMISTD_1;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve aa for Int-Location;
reserve bb for Int-Location;
reserve cc for Int-Location;
reserve f for FinSeq-Location;
theorem
Th10: (aa <> bb implies (not ( cc := bb ) refer aa))
proof
assume A1: aa <> bb;
now
let e being Int-Location;
let l being (Element of ( NAT ));
let f being FinSeq-Location;
thus ( e := aa ) <> ( cc := bb ) by A1,SF_MASTR:1;
A2: ( InsCode ( cc := bb ) ) = 1 by SCMFSA_2:18;
hence ( AddTo (e,aa) ) <> ( cc := bb ) by SCMFSA_2:19;
thus ( SubFrom (e,aa) ) <> ( cc := bb ) by A2,SCMFSA_2:20;
thus ( MultBy (e,aa) ) <> ( cc := bb ) by A2,SCMFSA_2:21;
thus (( Divide (aa,e) ) <> ( cc := bb ) & ( Divide (e,aa) ) <> ( cc := bb )) by A2,SCMFSA_2:22;
thus ( aa =0_goto l ) <> ( cc := bb ) by A2,SCMFSA_2:24;
thus ( aa >0_goto l ) <> ( cc := bb ) by A2,SCMFSA_2:25;
thus ( e := (f,aa) ) <> ( cc := bb ) by A2,SCMFSA_2:26;
thus (( (f,e) := aa ) <> ( cc := bb ) & ( (f,aa) := e ) <> ( cc := bb )) by A2,SCMFSA_2:27;
thus ( f :=<0,...,0> aa ) <> ( cc := bb ) by A2,SCMFSA_2:29;
end;
hence thesis by SCMFSA7B:def 1;
end;
