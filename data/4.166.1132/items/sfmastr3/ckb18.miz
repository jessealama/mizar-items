environ
vocabularies NUMBERS,FSM_1,SCMFSA_2,SF_MASTR,AMI_1,SCMFSA7B,SUBSET_1,UNIALG_2,SCMFSA6C,SCMFSA6B,FUNCT_1,XBOOLE_0,FUNCT_4,CARD_1,AMISTD_2,RELAT_1,GRAPHSP,AMI_3,PARTFUN1,COMPLEX1,SCMFSA8B,TURING_1,SCMFSA_9,ARYTM_3,FUNCOP_1,SCMFSA8A,CARD_3,SFMASTR1,ARYTM_1,XXREAL_0,SCMFSA6A,TARSKI,SCMFSA9A,FINSEQ_1,GRAPH_2,AOFA_I00,FUNCT_2,FINSEQ_2,SFMASTR3,NAT_1,SCMNORM,PBOOLE,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,CARD_3,INT_2,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_4,FUNCT_7,PBOOLE,FUNCOP_1,GRAPH_2,FINSEQ_1,FINSEQ_2,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,SCMFSA_2,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,SCMFSA9A,XXREAL_0,NAT_1,CKB11;
definitions TARSKI,SCMFSA7B,SCMFSA9A,GRAPH_2,SCMFSA6A,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB11;
theorems TARSKI,ZFMISC_1,ENUMSET1,ABSVALUE,NAT_1,INT_1,RELAT_1,FUNCT_7,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,GRAPH_2,SCMFSA_2,MEMSTR_0,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA8C,SCMFSA_9,SFMASTR1,SCMFSA9A,SFMASTR2,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,PARTFUN1,AFINSQ_1,PBOOLE,EXTPRO_1,CARD_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes FUNCT_2,NAT_1;
registrations SUBSET_1,SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_3,SCMFSA_2,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,XBOOLE_0,VALUED_0,AFINSQ_1,FUNCOP_1,COMPOS_1,EXTPRO_1,PBOOLE,FUNCT_4,MEMSTR_0,SCMFSA6A,CKB7;
constructors SETWISEO,REAL_1,INT_2,MESFUNC1,SCMFSA6A,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA_9,SFMASTR1,SCMFSA9A,RELSET_1,FUNCT_4,PBOOLE,GRAPH_2,SCMFSA7B,MEMSTR_0,AMISTD_1,CKB11;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve s for (State of ( SCM+FSA ));
reserve a for  read-write Int-Location;
reserve bb for Int-Location;
reserve cc for Int-Location;
reserve I for (Program of ( SCM+FSA ));
reserve p for (Instruction-Sequence of ( SCM+FSA ));
theorem
Th22: (( s . ( intloc ( 0 ) ) ) = 1 implies (for aux being  read-write Int-Location holds (aux = ( 1 -stRWNotIn ( { a,bb,cc } \/ ( UsedIntLoc I ) ) ) implies ( DataPart ( IExec (( ( ( ( aux := cc ) ';' ( SubFrom (aux,bb) ) ) ';' ( AddTo (aux,( intloc ( 0 ) )) ) ) ';' ( a := bb ) ),p,s) ) ) = ( DataPart ( ( s +* (aux,( ( ( s . cc ) - ( s . bb ) ) + 1 )) ) +* (a,( s . bb )) ) ))))
proof
assume A1: ( s . ( intloc ( 0 ) ) ) = 1;
(cc = ( intloc ( 0 ) ) or cc is  read-write) by SF_MASTR:def 5;
then A2: ( ( Initialized s ) . cc ) = ( s . cc ) by A1,SCMFSA6A:38,SCMFSA6C:3;
set i3 = ( a := bb );
let aux being  read-write Int-Location;
assume that
A3: aux = ( 1 -stRWNotIn ( { a,bb,cc } \/ ( UsedIntLoc I ) ) );
bb in { a,bb,cc } by ENUMSET1:def 1;
then bb in ( { a,bb,cc } \/ ( UsedIntLoc I ) ) by XBOOLE_0:def 3;
then A4: bb <> aux by A3,SFMASTR1:20;
set s2 = ( ( s +* (aux,( ( ( s . cc ) - ( s . bb ) ) + 1 )) ) +* (a,( s . bb )) );
A5: aux in ( dom s ) by SCMFSA_2:42;
a in { a,bb,cc } by ENUMSET1:def 1;
then a in ( { a,bb,cc } \/ ( UsedIntLoc I ) ) by XBOOLE_0:def 3;
then A6: a <> aux by A3,SFMASTR1:20;
then A7: ( s2 . aux ) = ( ( s +* (aux,( ( ( s . cc ) - ( s . bb ) ) + 1 )) ) . aux ) by FUNCT_7:32
.= ( ( ( s . cc ) - ( s . bb ) ) + 1 ) by A5,FUNCT_7:31;
set i2 = ( AddTo (aux,( intloc ( 0 ) )) );
set i1 = ( SubFrom (aux,bb) );
set i0 = ( aux := cc );
set s1 = ( IExec (( ( ( i0 ';' i1 ) ';' i2 ) ';' i3 ),p,s) );
A8: ( ( IExec (( i0 ';' i1 ),p,s) ) . ( intloc ( 0 ) ) ) = ( ( Exec (i1,( Exec (i0,( Initialized s )) )) ) . ( intloc ( 0 ) ) ) by SCMFSA6C:8
.= ( ( Exec (i0,( Initialized s )) ) . ( intloc ( 0 ) ) ) by SCMFSA_2:65
.= ( ( Initialized s ) . ( intloc ( 0 ) ) ) by SCMFSA_2:63
.= 1 by SCMFSA6A:38;
A9: a in ( dom ( s +* (aux,( ( ( s . cc ) - ( s . bb ) ) + 1 )) ) ) by SCMFSA_2:42;
(bb = ( intloc ( 0 ) ) or bb is  read-write) by SF_MASTR:def 5;
then A10: ( ( Initialized s ) . bb ) = ( s . bb ) by A1,SCMFSA6A:38,SCMFSA6C:3;
A11: ( s1 . a ) = ( ( Exec (i3,( IExec (( ( i0 ';' i1 ) ';' i2 ),p,s) )) ) . a ) by SCMFSA6C:6
.= ( ( IExec (( ( i0 ';' i1 ) ';' i2 ),p,s) ) . bb ) by SCMFSA_2:63
.= ( ( Exec (i2,( IExec (( i0 ';' i1 ),p,s) )) ) . bb ) by SCMFSA6C:6
.= ( ( IExec (( i0 ';' i1 ),p,s) ) . bb ) by A4,SCMFSA_2:64
.= ( ( Exec (i1,( Exec (i0,( Initialized s )) )) ) . bb ) by SCMFSA6C:8
.= ( ( Exec (i0,( Initialized s )) ) . bb ) by A4,SCMFSA_2:65
.= ( s . bb ) by A4,A10,SCMFSA_2:63;
A12: ( s1 . aux ) = ( ( Exec (i3,( IExec (( ( i0 ';' i1 ) ';' i2 ),p,s) )) ) . aux ) by SCMFSA6C:6
.= ( ( IExec (( ( i0 ';' i1 ) ';' i2 ),p,s) ) . aux ) by A6,SCMFSA_2:63
.= ( ( Exec (i2,( IExec (( i0 ';' i1 ),p,s) )) ) . aux ) by SCMFSA6C:6
.= ( ( ( IExec (( i0 ';' i1 ),p,s) ) . aux ) + 1 ) by A8,SCMFSA_2:64
.= ( ( ( Exec (i1,( Exec (i0,( Initialized s )) )) ) . aux ) + 1 ) by SCMFSA6C:8
.= ( ( ( ( Exec (i0,( Initialized s )) ) . aux ) - ( ( Exec (i0,( Initialized s )) ) . bb ) ) + 1 ) by SCMFSA_2:65
.= ( ( ( ( Initialized s ) . cc ) - ( ( Exec (i0,( Initialized s )) ) . bb ) ) + 1 ) by SCMFSA_2:63
.= ( ( ( s . cc ) - ( s . bb ) ) + 1 ) by A4,A2,A10,SCMFSA_2:63;
now
hereby
let x being Int-Location;
per cases ;
suppose x = a;

hence ( s1 . x ) = ( s2 . x ) by A11,A9,FUNCT_7:31;
end;
suppose x = aux;

hence ( s1 . x ) = ( s2 . x ) by A12,A7;
end;
suppose A13: (x <> aux & x <> a);

then A14: ( s2 . x ) = ( ( s +* (aux,( ( ( s . cc ) - ( s . bb ) ) + 1 )) ) . x ) by FUNCT_7:32
.= ( s . x ) by A13,FUNCT_7:32;
A15: (x = ( intloc ( 0 ) ) or x is  read-write) by SF_MASTR:def 5;
( s1 . x ) = ( ( Exec (i3,( IExec (( ( i0 ';' i1 ) ';' i2 ),p,s) )) ) . x ) by SCMFSA6C:6
.= ( ( IExec (( ( i0 ';' i1 ) ';' i2 ),p,s) ) . x ) by A13,SCMFSA_2:63
.= ( ( Exec (i2,( IExec (( i0 ';' i1 ),p,s) )) ) . x ) by SCMFSA6C:6
.= ( ( IExec (( i0 ';' i1 ),p,s) ) . x ) by A13,SCMFSA_2:64
.= ( ( Exec (i1,( Exec (i0,( Initialized s )) )) ) . x ) by SCMFSA6C:8
.= ( ( Exec (i0,( Initialized s )) ) . x ) by A13,SCMFSA_2:65
.= ( ( Initialized s ) . x ) by A13,SCMFSA_2:63
.= ( s . x ) by A1,A15,SCMFSA6A:38,SCMFSA6C:3;
hence ( s1 . x ) = ( s2 . x ) by A14;
end;
end;
let x being FinSeq-Location;
thus ( s1 . x ) = ( ( Exec (i3,( IExec (( ( i0 ';' i1 ) ';' i2 ),p,s) )) ) . x ) by SCMFSA6C:7
.= ( ( IExec (( ( i0 ';' i1 ) ';' i2 ),p,s) ) . x ) by SCMFSA_2:63
.= ( ( Exec (i2,( IExec (( i0 ';' i1 ),p,s) )) ) . x ) by SCMFSA6C:7
.= ( ( IExec (( i0 ';' i1 ),p,s) ) . x ) by SCMFSA_2:64
.= ( ( Exec (i1,( Exec (i0,( Initialized s )) )) ) . x ) by SCMFSA6C:9
.= ( ( Exec (i0,( Initialized s )) ) . x ) by SCMFSA_2:65
.= ( ( Initialized s ) . x ) by SCMFSA_2:63
.= ( s . x ) by SCMFSA6C:3
.= ( ( s +* (aux,( ( ( s . cc ) - ( s . bb ) ) + 1 )) ) . x ) by FUNCT_7:32,SCMFSA_2:58
.= ( s2 . x ) by FUNCT_7:32,SCMFSA_2:58;
end;
hence thesis by SCMFSA6A:7;
end;
