environ
vocabularies NUMBERS,FUNCT_1,RELAT_1,FUNCT_4,FUNCOP_1,XBOOLE_0,TARSKI,GLIB_003,VALUED_0,SUBSET_1,REAL_1,GRAPH_5,FINSET_1,ZFMISC_1,TREES_1,GLIB_000,PBOOLE,CARD_1,XXREAL_0,CARD_3,XREAL_0,ORDINAL1,ARYTM_1,PARTFUN1,ARYTM_3,GLIB_001,ABIAN,NAT_1,FINSEQ_1,GRAPH_1,RCOMP_1,INT_1,PRE_POLY,UPROOTS,SGRAPH1,GLIB_005;
notations TARSKI,XBOOLE_0,CARD_1,NUMBERS,SUBSET_1,XCMPLX_0,XXREAL_0,XREAL_0,DOMAIN_1,REAL_1,RELAT_1,VALUED_0,PARTFUN1,FUNCT_1,PBOOLE,FINSEQ_1,FUNCT_2,GRAPH_5,ORDINAL1,UPROOTS,RELSET_1,FINSET_1,INT_1,NAT_1,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,ABIAN,GLIB_002,GLIB_003,PRE_POLY,CKB5,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
definitions TARSKI,GLIB_000,GLIB_003,FUNCOP_1,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
theorems CARD_1,CARD_2,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,GLIB_003,GLIB_004,GRAPH_5,ABIAN,INT_1,NAT_1,PBOOLE,PEPIN,TARSKI,UPROOTS,XBOOLE_0,XBOOLE_1,ZFMISC_1,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,VALUED_0,RELSET_1,PARTFUN1,RELAT_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
schemes NAT_1,SUBSET_1,FINSEQ_1,CLASSES1,RECDEF_1,GRAPH_5;
registrations XBOOLE_0,RELAT_1,PARTFUN1,INT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GLIB_001,GLIB_002,GLIB_003,VALUED_0,FUNCT_2,CARD_1,PRE_CIRC,PRE_POLY,RELSET_1,CKB6,CKB7,CKB8;
constructors DOMAIN_1,FUNCT_4,NAT_D,GRAPH_2,GRAPH_5,UPROOTS,GLIB_004,SEQ_1,XXREAL_2,RELSET_1,PBOOLE,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th3: (for G being  real-weighted WGraph holds (for EL being (FF:ELabeling of G) holds (for W being (Walk of G) holds (for e,v being set holds (((W is_augmenting_wrt EL & (not v in ( W .vertices() ))) & ((e DJoins ( W .last() ),v,G & ( EL . e ) < ( ( the_Weight_of G ) . e )) or (e DJoins v,( W .last() ),G & ( 0 ) < ( EL . e )))) implies ( W .addEdge e ) is_augmenting_wrt EL)))))
proof
let G being  real-weighted WGraph;
let EL being (FF:ELabeling of G);
let W being (Walk of G);
let e being set;
let v being set;
assume A1: W is_augmenting_wrt EL;
set W2 = ( W .addEdge e );
assume that
A2: (not v in ( W .vertices() ))
and
A3: ((e DJoins ( W .last() ),v,G & ( EL . e ) < ( ( the_Weight_of G ) . e )) or (e DJoins v,( W .last() ),G & ( 0 ) < ( EL . e )));
let n being  odd Nat;
A4: e Joins ( W .last() ),v,G by A3,GLIB_000:16;
assume A5: n < ( len W2 );
now
per cases ;
suppose A6: n < ( len W );

reconsider n9 = n as (Element of ( NAT )) by ORDINAL1:def 12;
( n9 + 1 ) in ( dom W ) by A6,GLIB_001:12;
then A7: ( W . ( n + 1 ) ) = ( W2 . ( n + 1 ) ) by A4,GLIB_001:65;
( n9 + 2 ) in ( dom W ) by A6,GLIB_001:12;
then A8: ( W . ( n + 2 ) ) = ( W2 . ( n + 2 ) ) by A4,GLIB_001:65;
n9 in ( dom W ) by A6,GLIB_001:12;
then ( W . n ) = ( W2 . n ) by A4,GLIB_001:65;
hence thesis by A1,A6,A7,A8,CKB16:def 1;
end;
suppose A9: n >= ( len W );

( n + 1 ) <= ( len W2 ) by A5,NAT_1:13;
then ( n + 1 ) <= ( ( len W ) + ( 2 * 1 ) ) by A4,GLIB_001:64;
then ( n + 1 ) < ( ( ( len W ) + 1 ) + 1 ) by XXREAL_0:1;
then ( n + 1 ) <= ( ( len W ) + 1 ) by NAT_1:13;
then A10: n <= ( len W ) by XREAL_1:6;
then A11: n = ( len W ) by A9,XXREAL_0:1;
then A12: ( W2 . ( n + 1 ) ) = e by A4,GLIB_001:65;
1 <= n by ABIAN:12;
then n in ( dom W ) by A10,FINSEQ_3:25;
then A13: ( W2 . n ) = ( W . n ) by A4,GLIB_001:65
.= ( W .last() ) by A11,GLIB_001:def 7;
now
assume that
A14: e DJoins ( W .last() ),v,G
and
A15: e DJoins v,( W .last() ),G;
A16: ( ( the_Source_of G ) . e ) = v by A15,GLIB_000:def 14;
( ( the_Source_of G ) . e ) = ( W .last() ) by A14,GLIB_000:def 14;
hence contradiction by A2,A16,GLIB_001:88;
end;
hence (( W2 . ( n + 1 ) ) DJoins ( W2 . n ),( W2 . ( n + 2 ) ),G implies ( EL . ( W2 . ( n + 1 ) ) ) < ( ( the_Weight_of G ) . ( W2 . ( n + 1 ) ) )) by A3,A4,A11,A13,A12,GLIB_001:65;
assume (not ( W2 . ( n + 1 ) ) DJoins ( W2 . n ),( W2 . ( n + 2 ) ),G);
hence ( 0 ) < ( EL . ( W2 . ( n + 1 ) ) ) by A3,A4,A11,A13,A12,GLIB_001:65;
end;
end;
hence thesis;
end;
