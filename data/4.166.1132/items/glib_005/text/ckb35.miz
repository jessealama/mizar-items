environ
vocabularies NUMBERS,FUNCT_1,RELAT_1,FUNCT_4,FUNCOP_1,XBOOLE_0,TARSKI,GLIB_003,VALUED_0,SUBSET_1,REAL_1,GRAPH_5,FINSET_1,ZFMISC_1,TREES_1,GLIB_000,PBOOLE,CARD_1,XXREAL_0,CARD_3,XREAL_0,ORDINAL1,ARYTM_1,PARTFUN1,ARYTM_3,GLIB_001,ABIAN,NAT_1,FINSEQ_1,GRAPH_1,RCOMP_1,INT_1,PRE_POLY,UPROOTS,SGRAPH1,GLIB_005;
notations TARSKI,XBOOLE_0,CARD_1,NUMBERS,SUBSET_1,XCMPLX_0,XXREAL_0,XREAL_0,DOMAIN_1,REAL_1,RELAT_1,VALUED_0,PARTFUN1,FUNCT_1,PBOOLE,FINSEQ_1,FUNCT_2,GRAPH_5,ORDINAL1,UPROOTS,RELSET_1,FINSET_1,INT_1,NAT_1,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,ABIAN,GLIB_002,GLIB_003,PRE_POLY,CKB5,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22,CKB23,CKB24,CKB27,CKB30,CKB34;
definitions TARSKI,GLIB_000,GLIB_003,FUNCOP_1,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22,CKB24,CKB27,CKB30,CKB34;
theorems CARD_1,CARD_2,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,GLIB_003,GLIB_004,GRAPH_5,ABIAN,INT_1,NAT_1,PBOOLE,PEPIN,TARSKI,UPROOTS,XBOOLE_0,XBOOLE_1,ZFMISC_1,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,VALUED_0,RELSET_1,PARTFUN1,RELAT_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34;
schemes NAT_1,SUBSET_1,FINSEQ_1,CLASSES1,RECDEF_1,GRAPH_5;
registrations XBOOLE_0,RELAT_1,PARTFUN1,INT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GLIB_001,GLIB_002,GLIB_003,VALUED_0,FUNCT_2,CARD_1,PRE_CIRC,PRE_POLY,RELSET_1,CKB6,CKB7,CKB8;
constructors DOMAIN_1,FUNCT_4,NAT_D,GRAPH_2,GRAPH_5,UPROOTS,GLIB_004,SEQ_1,XXREAL_2,RELSET_1,PBOOLE,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22,CKB23,CKB24,CKB27,CKB30,CKB34;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
definition
let G being  natural-weighted WGraph;
let EL being (FF:ELabeling of G);
let W being (Walk of G);
assume A1: W is_augmenting_wrt EL;
func W .tolerance EL -> Nat
means
:Def16: (it in ( rng ( W .flowSeq EL ) ) & (for k being  real number holds (k in ( rng ( W .flowSeq EL ) ) implies it <= k))) if W is non trivial otherwise it = ( 0 );
existence
proof
set D = ( rng ( W .flowSeq EL ) );
now
assume W is non trivial;
then ( W .edges() ) <> ( {} ) by GLIB_001:136;
then ( rng ( W .edgeSeq() ) ) <> ( {} ) by GLIB_001:def 17;
then consider y being set such that A2: y in ( rng ( W .edgeSeq() ) ) by XBOOLE_0:def 1;
consider x being set such that A3: x in ( dom ( W .edgeSeq() ) ) and y = ( ( W .edgeSeq() ) . x ) by A2,FUNCT_1:def 3;
x in ( dom ( W .flowSeq EL ) ) by A1,A3,CKB34:def 1;
then ( ( W .flowSeq EL ) . x ) in D by FUNCT_1:def 3;
then reconsider D as non empty  finite (Subset of ( NAT ));
deffunc F(Nat) = $1;
consider IT being (Element of D) such that A4: (for k being (Element of D) holds F(IT) <= F(k)) from GRAPH_5:sch 2;
reconsider IT as Nat;
take IT;
thus IT in ( rng ( W .flowSeq EL ) );
let k being  real number;
assume k in ( rng ( W .flowSeq EL ) );
hence IT <= k by A4;
end;
hence thesis;
end;
uniqueness
proof
let IT1 being Nat,IT2 being Nat;
hereby
assume W is non trivial;
assume that
A5: IT1 in ( rng ( W .flowSeq EL ) )
and
A6: (for k being  real number holds (k in ( rng ( W .flowSeq EL ) ) implies IT1 <= k));
assume that
A7: IT2 in ( rng ( W .flowSeq EL ) )
and
A8: (for k being  real number holds (k in ( rng ( W .flowSeq EL ) ) implies IT2 <= k));
A9: IT2 <= IT1 by A5,A8;
IT1 <= IT2 by A6,A7;
hence IT1 = IT2 by A9,XXREAL_0:1;
end;
thus thesis;
end;
consistency;
end;
