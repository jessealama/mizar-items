environ
vocabularies NUMBERS,FUNCT_1,RELAT_1,FUNCT_4,FUNCOP_1,XBOOLE_0,TARSKI,GLIB_003,VALUED_0,SUBSET_1,REAL_1,GRAPH_5,FINSET_1,ZFMISC_1,TREES_1,GLIB_000,PBOOLE,CARD_1,XXREAL_0,CARD_3,XREAL_0,ORDINAL1,ARYTM_1,PARTFUN1,ARYTM_3,GLIB_001,ABIAN,NAT_1,FINSEQ_1,GRAPH_1,RCOMP_1,INT_1,PRE_POLY,UPROOTS,SGRAPH1,GLIB_005;
notations TARSKI,XBOOLE_0,CARD_1,NUMBERS,SUBSET_1,XCMPLX_0,XXREAL_0,XREAL_0,DOMAIN_1,REAL_1,RELAT_1,VALUED_0,PARTFUN1,FUNCT_1,PBOOLE,FINSEQ_1,FUNCT_2,GRAPH_5,ORDINAL1,UPROOTS,RELSET_1,FINSET_1,INT_1,NAT_1,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,ABIAN,GLIB_002,GLIB_003,PRE_POLY,CKB5,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22,CKB23;
definitions TARSKI,GLIB_000,GLIB_003,FUNCOP_1,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22;
theorems CARD_1,CARD_2,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,GLIB_003,GLIB_004,GRAPH_5,ABIAN,INT_1,NAT_1,PBOOLE,PEPIN,TARSKI,UPROOTS,XBOOLE_0,XBOOLE_1,ZFMISC_1,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,VALUED_0,RELSET_1,PARTFUN1,RELAT_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22;
schemes NAT_1,SUBSET_1,FINSEQ_1,CLASSES1,RECDEF_1,GRAPH_5;
registrations XBOOLE_0,RELAT_1,PARTFUN1,INT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GLIB_001,GLIB_002,GLIB_003,VALUED_0,FUNCT_2,CARD_1,PRE_CIRC,PRE_POLY,RELSET_1,CKB6,CKB7,CKB8;
constructors DOMAIN_1,FUNCT_4,NAT_D,GRAPH_2,GRAPH_5,UPROOTS,GLIB_004,SEQ_1,XXREAL_2,RELSET_1,PBOOLE,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22,CKB23;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
definition
let G being  real-weighted WGraph;
let EL being (FF:ELabeling of G);
let source being (Vertex of G);
func AP:CompSeq (EL,source) -> (AP:VLabelingSeq of EL) means 
:Def12: (( it . ( 0 ) ) = ( source .--> 1 ) & (for n being Nat holds ( it . ( n + 1 ) ) = ( AP:Step ( it . n ) )));
existence
proof
defpred P[ set,set,set ]
 means
(($2 is (AP:VLabeling of EL) & (ex Gn,Gn1 being (AP:VLabeling of EL) st (($2 = Gn & $3 = Gn1) & Gn1 = ( AP:Step Gn )))) or ((not $2 is (AP:VLabeling of EL)) & $2 = $3));
A1: ( rng ( source .--> 1 ) ) = { 1 } by FUNCOP_1:8;
now
let n being set;
let x being set;
now
per cases ;
suppose x is (AP:VLabeling of EL);

then reconsider Gn = x as (AP:VLabeling of EL);
P[ n,x,( AP:Step Gn ) ];
hence (ex y being set st P[ n,x,y ]);
end;
suppose (not x is (AP:VLabeling of EL));

hence (ex y being set st P[ n,x,y ]);
end;
end;
hence (ex y being set st P[ n,x,y ]);
end;
then A2: (for n being (Element of ( NAT )) holds (for x being set holds (ex y being set st P[ n,x,y ])));
consider IT being Function such that A3: ((( dom IT ) = ( NAT ) & ( IT . ( 0 ) ) = ( source .--> 1 )) & (for n being (Element of ( NAT )) holds P[ n,( IT . n ),( IT . ( n + 1 ) ) ])) from RECDEF_1:sch 1(A2);
reconsider IT as (ManySortedSet of ( NAT )) by A3,PARTFUN1:def 2,RELAT_1:def 18;
defpred P2[ Nat ]
 means
( IT . $1 ) is (AP:VLabeling of EL);
A4:now
let n being Nat;
assume A5: P2[ n ];
n in ( NAT ) by ORDINAL1:def 12;
then (ex Gn,Gn1 being (AP:VLabeling of EL) st ((( IT . n ) = Gn & ( IT . ( n + 1 ) ) = Gn1) & Gn1 = ( AP:Step Gn ))) by A3,A5;
hence P2[ ( n + 1 ) ];
end;
( dom ( source .--> 1 ) ) = { source } by FUNCOP_1:13;
then ( source .--> 1 ) is (Relation of ( the_Vertices_of G ),( { 1 } \/ ( the_Edges_of G ) )) by A1,RELSET_1:4,XBOOLE_1:7;
then A6: P2[ ( 0 ) ] by A3,CKB13:def 1;
(for n being Nat holds P2[ n ]) from NAT_1:sch 2(A6,A4);
then reconsider IT as (AP:VLabelingSeq of EL) by CKB22:def 1;
take IT;
thus ( IT . ( 0 ) ) = ( source .--> 1 ) by A3;
let n being Nat;
n is (Element of ( NAT )) by ORDINAL1:def 12;
then (ex Gn,Gn1 being (AP:VLabeling of EL) st ((( IT . n ) = Gn & ( IT . ( n + 1 ) ) = Gn1) & Gn1 = ( AP:Step Gn ))) by A3;
hence thesis;
end;
uniqueness
proof
let IT1 being (AP:VLabelingSeq of EL);
let IT2 being (AP:VLabelingSeq of EL);
assume that
A7: ( IT1 . ( 0 ) ) = ( source .--> 1 )
and
A8: (for n being Nat holds ( IT1 . ( n + 1 ) ) = ( AP:Step ( IT1 . n ) ))
and
A9: ( IT2 . ( 0 ) ) = ( source .--> 1 )
and
A10: (for n being Nat holds ( IT2 . ( n + 1 ) ) = ( AP:Step ( IT2 . n ) ));
defpred P[ Nat ]
 means
( IT1 . $1 ) = ( IT2 . $1 );
now
let n being Nat;
assume P[ n ];
then ( IT1 . ( n + 1 ) ) = ( AP:Step ( IT2 . n ) ) by A8
.= ( IT2 . ( n + 1 ) ) by A10;
hence P[ ( n + 1 ) ];
end;
then A11: (for n being Nat holds (P[ n ] implies P[ ( n + 1 ) ]));
A12: P[ ( 0 ) ] by A7,A9;
(for n being Nat holds P[ n ]) from NAT_1:sch 2(A12,A11);
then (for n being set holds (n in ( NAT ) implies ( IT1 . n ) = ( IT2 . n )));
hence IT1 = IT2 by PBOOLE:3;
end;
end;
