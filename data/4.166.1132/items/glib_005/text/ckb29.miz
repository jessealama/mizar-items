environ
vocabularies NUMBERS,FUNCT_1,RELAT_1,FUNCT_4,FUNCOP_1,XBOOLE_0,TARSKI,GLIB_003,VALUED_0,SUBSET_1,REAL_1,GRAPH_5,FINSET_1,ZFMISC_1,TREES_1,GLIB_000,PBOOLE,CARD_1,XXREAL_0,CARD_3,XREAL_0,ORDINAL1,ARYTM_1,PARTFUN1,ARYTM_3,GLIB_001,ABIAN,NAT_1,FINSEQ_1,GRAPH_1,RCOMP_1,INT_1,PRE_POLY,UPROOTS,SGRAPH1,GLIB_005;
notations TARSKI,XBOOLE_0,CARD_1,NUMBERS,SUBSET_1,XCMPLX_0,XXREAL_0,XREAL_0,DOMAIN_1,REAL_1,RELAT_1,VALUED_0,PARTFUN1,FUNCT_1,PBOOLE,FINSEQ_1,FUNCT_2,GRAPH_5,ORDINAL1,UPROOTS,RELSET_1,FINSET_1,INT_1,NAT_1,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,ABIAN,GLIB_002,GLIB_003,PRE_POLY,CKB5,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22,CKB23,CKB24,CKB27;
definitions TARSKI,GLIB_000,GLIB_003,FUNCOP_1,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22,CKB24,CKB27;
theorems CARD_1,CARD_2,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,GLIB_003,GLIB_004,GRAPH_5,ABIAN,INT_1,NAT_1,PBOOLE,PEPIN,TARSKI,UPROOTS,XBOOLE_0,XBOOLE_1,ZFMISC_1,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,VALUED_0,RELSET_1,PARTFUN1,RELAT_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes NAT_1,SUBSET_1,FINSEQ_1,CLASSES1,RECDEF_1,GRAPH_5;
registrations XBOOLE_0,RELAT_1,PARTFUN1,INT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GLIB_001,GLIB_002,GLIB_003,VALUED_0,FUNCT_2,CARD_1,PRE_CIRC,PRE_POLY,RELSET_1,CKB6,CKB7,CKB8;
constructors DOMAIN_1,FUNCT_4,NAT_D,GRAPH_2,GRAPH_5,UPROOTS,GLIB_004,SEQ_1,XXREAL_2,RELSET_1,PBOOLE,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22,CKB23,CKB24,CKB27;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th7: (for G being  finite  real-weighted WGraph holds (for EL being (FF:ELabeling of G) holds (for source being (Vertex of G) holds (for n being Nat holds (for v being set holds (v in ( dom ( ( AP:CompSeq (EL,source) ) . n ) ) implies ( ( ( AP:CompSeq (EL,source) ) . n ) . v ) = ( ( AP:FindAugPath (EL,source) ) . v )))))))
proof
let G being  finite  real-weighted WGraph;
let EL being (FF:ELabeling of G);
let source being (Vertex of G);
let n being Nat;
let v being set;
set SG = ( the_Source_of G );
set TG = ( the_Target_of G );
set CS = ( AP:CompSeq (EL,source) );
set L = ( CS .Lifespan() );
set GL = ( CS . L );
set GL1 = ( CS . ( L + 1 ) );
defpred P[ (Element of ( NAT )) ]
 means
(for v being set holds (v in ( dom ( CS . n ) ) implies ( ( CS . n ) . v ) = ( ( CS . ( n + $1 ) ) . v )));
defpred P2[ (Element of ( NAT )) ]
 means
GL = ( CS . ( L + $1 ) );
A1: CS is  halting by CKB28:1;
A2:now
let k being (Element of ( NAT ));
set Gn1 = ( CS . ( ( L + k ) + 1 ) );
assume P2[ k ];
then Gn1 = ( AP:Step GL ) by CKB24:def 1
.= GL1 by CKB24:def 1;
hence P2[ ( k + 1 ) ] by A1,GLIB_000:def 55;
end;
A3: P2[ ( 0 ) ];
A4: (for k being (Element of ( NAT )) holds P2[ k ]) from NAT_1:sch 1(A3,A2);
now
let k being (Element of ( NAT ));
assume A5: P[ k ];
set Gn = ( CS . ( n + k ) );
set Gn1 = ( CS . ( ( n + k ) + 1 ) );
set Next = ( AP:NextBestEdges Gn );
set e = ( choose Next );
A6: Gn1 = ( AP:Step Gn ) by CKB24:def 1;
now
per cases ;
suppose Next = ( {} );

then Gn1 = Gn by A6,CKB21:def 1;
hence P[ ( k + 1 ) ] by A5;
end;
suppose A7: (Next <> ( {} ) & (not ( SG . e ) in ( dom Gn )));

then A8: Gn1 = ( Gn +* ( ( SG . e ) .--> e ) ) by A6,CKB21:def 1;
now
let v being set;
assume A9: v in ( dom ( CS . n ) );
then A10: ( ( CS . n ) . v ) = ( Gn . v ) by A5;
( dom ( CS . n ) ) c= ( dom Gn ) by CKB26:1,NAT_1:11;
then v <> ( SG . e ) by A7,A9;
hence ( ( CS . n ) . v ) = ( Gn1 . v ) by A8,A10,CKB4:1;
end;
hence P[ ( k + 1 ) ];
end;
suppose A11: (Next <> ( {} ) & ( SG . e ) in ( dom Gn ));

then A12: (e is_forward_edge_wrt Gn or e is_backward_edge_wrt Gn) by CKB20:def 1;
A13: Gn1 = ( Gn +* ( ( TG . e ) .--> e ) ) by A6,A11,CKB21:def 1;
now
let v being set;
assume A14: v in ( dom ( CS . n ) );
then A15: ( ( CS . n ) . v ) = ( Gn . v ) by A5;
( dom ( CS . n ) ) c= ( dom Gn ) by CKB26:1,NAT_1:11;
then v <> ( TG . e ) by A11,A12,A14,CKB14:def 1,CKB15:def 1;
hence ( ( CS . n ) . v ) = ( Gn1 . v ) by A13,A15,CKB4:1;
end;
hence P[ ( k + 1 ) ];
end;
end;
hence P[ ( k + 1 ) ];
end;
then A16: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]));
A17: P[ ( 0 ) ];
A18: (for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A17,A16);
assume A19: v in ( dom ( CS . n ) );
now
per cases ;
suppose n <= ( CS .Lifespan() );

then consider k being Nat such that A20: ( n + k ) = ( CS .Lifespan() ) by NAT_1:10;
reconsider k as (Element of ( NAT )) by ORDINAL1:def 12;
( n + k ) = ( CS .Lifespan() ) by A20;
hence thesis by A19,A18;
end;
suppose ( CS .Lifespan() ) < n;

then consider k being Nat such that A21: ( ( CS .Lifespan() ) + k ) = n by NAT_1:10;
reconsider k as (Element of ( NAT )) by ORDINAL1:def 12;
( ( CS .Lifespan() ) + k ) = n by A21;
hence thesis by A4;
end;
end;
hence thesis;
end;
