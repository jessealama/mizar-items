environ
vocabularies NUMBERS,FUNCT_1,RELAT_1,FUNCT_4,FUNCOP_1,XBOOLE_0,TARSKI,GLIB_003,VALUED_0,SUBSET_1,REAL_1,GRAPH_5,FINSET_1,ZFMISC_1,TREES_1,GLIB_000,PBOOLE,CARD_1,XXREAL_0,CARD_3,XREAL_0,ORDINAL1,ARYTM_1,PARTFUN1,ARYTM_3,GLIB_001,ABIAN,NAT_1,FINSEQ_1,GRAPH_1,RCOMP_1,INT_1,PRE_POLY,UPROOTS,SGRAPH1,GLIB_005;
notations TARSKI,XBOOLE_0,CARD_1,NUMBERS,SUBSET_1,XCMPLX_0,XXREAL_0,XREAL_0,DOMAIN_1,REAL_1,RELAT_1,VALUED_0,PARTFUN1,FUNCT_1,PBOOLE,FINSEQ_1,FUNCT_2,GRAPH_5,ORDINAL1,UPROOTS,RELSET_1,FINSET_1,INT_1,NAT_1,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,ABIAN,GLIB_002,GLIB_003,PRE_POLY,CKB5,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
definitions TARSKI,GLIB_000,GLIB_003,FUNCOP_1,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
theorems CARD_1,CARD_2,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,GLIB_003,GLIB_004,GRAPH_5,ABIAN,INT_1,NAT_1,PBOOLE,PEPIN,TARSKI,UPROOTS,XBOOLE_0,XBOOLE_1,ZFMISC_1,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,VALUED_0,RELSET_1,PARTFUN1,RELAT_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes NAT_1,SUBSET_1,FINSEQ_1,CLASSES1,RECDEF_1,GRAPH_5;
registrations XBOOLE_0,RELAT_1,PARTFUN1,INT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GLIB_001,GLIB_002,GLIB_003,VALUED_0,FUNCT_2,CARD_1,PRE_CIRC,PRE_POLY,RELSET_1,CKB6,CKB7,CKB8;
constructors DOMAIN_1,FUNCT_4,NAT_D,GRAPH_2,GRAPH_5,UPROOTS,GLIB_004,SEQ_1,XXREAL_2,RELSET_1,PBOOLE,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th2: (for G being  real-weighted WGraph holds (for EL being (FF:ELabeling of G) holds (for W being (Walk of G) holds (for m,n being Nat holds (W is_augmenting_wrt EL implies ( W .cut (m,n) ) is_augmenting_wrt EL)))))
proof
let G being  real-weighted WGraph;
let EL being (FF:ELabeling of G);
let W being (Walk of G);
let m being Nat;
let n being Nat;
set W2 = ( W .cut (m,n) );
assume A1: W is_augmenting_wrt EL;
now
per cases ;
suppose A2: (((m is  odd & n is  odd) & m <= n) & n <= ( len W ));

then reconsider m9 = m,n9 = n as  odd (Element of ( NAT )) by ORDINAL1:def 12;
now
let x being  odd Nat;
reconsider x9 = x as (Element of ( NAT )) by ORDINAL1:def 12;
set v1b = ( W2 . x );
set eb = ( W2 . ( x + 1 ) );
set v2b = ( W2 . ( x + 2 ) );
assume A3: x < ( len W2 );
then A4: x9 in ( dom W2 ) by GLIB_001:12;
A5: m9 <= n9 by A2;
A6: ( x9 + 2 ) in ( dom W2 ) by A3,GLIB_001:12;
then A7: ( W2 . ( x9 + 2 ) ) = ( W . ( ( m9 + ( x9 + 2 ) ) - 1 ) ) by A2,A5,GLIB_001:47;
( x9 + 1 ) in ( dom W2 ) by A3,GLIB_001:12;
then A8: ( W2 . ( x9 + 1 ) ) = ( W . ( ( m9 + ( x9 + 1 ) ) - 1 ) ) by A2,A5,GLIB_001:47;
( ( m9 + x9 ) - 1 ) in ( dom W ) by A2,A4,A5,GLIB_001:47;
then reconsider a = ( ( m9 + x ) - 1 ),a2 = ( ( m + ( x + 2 ) ) - 1 ) as (Element of ( NAT )) by A8;
reconsider a as  odd (Element of ( NAT ));
set v1a = ( W . a );
set ea = ( W . ( a + 1 ) );
set v2a = ( W . ( a + 2 ) );
( ( m9 + ( x9 + 2 ) ) - 1 ) in ( dom W ) by A2,A6,A5,GLIB_001:47;
then a2 <= ( len W ) by FINSEQ_3:25;
then A9: ( ( ( m + ( x + 2 ) ) - 1 ) - 2 ) < ( ( len W ) - ( 0 ) ) by XREAL_1:15;
hereby
assume eb DJoins v1b,v2b,G;
then ea DJoins v1a,v2a,G by A2,A4,A5,A8,A7,GLIB_001:47;
hence ( EL . eb ) < ( ( the_Weight_of G ) . eb ) by A1,A8,A9,CKB16:def 1;
end;
assume (not eb DJoins v1b,v2b,G);
then (not ea DJoins v1a,v2a,G) by A2,A4,A5,A8,A7,GLIB_001:47;
hence ( 0 ) < ( EL . eb ) by A1,A8,A9,CKB16:def 1;
end;
hence thesis by CKB16:def 1;
end;
suppose (not (((m is  odd & n is  odd) & m <= n) & n <= ( len W )));

hence thesis by A1,GLIB_001:def 11;
end;
end;
hence thesis;
end;
