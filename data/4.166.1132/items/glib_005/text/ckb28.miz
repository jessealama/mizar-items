environ
vocabularies NUMBERS,FUNCT_1,RELAT_1,FUNCT_4,FUNCOP_1,XBOOLE_0,TARSKI,GLIB_003,VALUED_0,SUBSET_1,REAL_1,GRAPH_5,FINSET_1,ZFMISC_1,TREES_1,GLIB_000,PBOOLE,CARD_1,XXREAL_0,CARD_3,XREAL_0,ORDINAL1,ARYTM_1,PARTFUN1,ARYTM_3,GLIB_001,ABIAN,NAT_1,FINSEQ_1,GRAPH_1,RCOMP_1,INT_1,PRE_POLY,UPROOTS,SGRAPH1,GLIB_005;
notations TARSKI,XBOOLE_0,CARD_1,NUMBERS,SUBSET_1,XCMPLX_0,XXREAL_0,XREAL_0,DOMAIN_1,REAL_1,RELAT_1,VALUED_0,PARTFUN1,FUNCT_1,PBOOLE,FINSEQ_1,FUNCT_2,GRAPH_5,ORDINAL1,UPROOTS,RELSET_1,FINSET_1,INT_1,NAT_1,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,ABIAN,GLIB_002,GLIB_003,PRE_POLY,CKB5,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22,CKB23,CKB24,CKB27;
definitions TARSKI,GLIB_000,GLIB_003,FUNCOP_1,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22,CKB24,CKB27;
theorems CARD_1,CARD_2,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,GLIB_003,GLIB_004,GRAPH_5,ABIAN,INT_1,NAT_1,PBOOLE,PEPIN,TARSKI,UPROOTS,XBOOLE_0,XBOOLE_1,ZFMISC_1,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,VALUED_0,RELSET_1,PARTFUN1,RELAT_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB24,CKB25,CKB26,CKB27;
schemes NAT_1,SUBSET_1,FINSEQ_1,CLASSES1,RECDEF_1,GRAPH_5;
registrations XBOOLE_0,RELAT_1,PARTFUN1,INT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,GLIB_000,ABIAN,GLIB_001,GLIB_002,GLIB_003,VALUED_0,FUNCT_2,CARD_1,PRE_CIRC,PRE_POLY,RELSET_1,CKB6,CKB7,CKB8;
constructors DOMAIN_1,FUNCT_4,NAT_D,GRAPH_2,GRAPH_5,UPROOTS,GLIB_004,SEQ_1,XXREAL_2,RELSET_1,PBOOLE,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22,CKB23,CKB24,CKB27;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th6: (for G being  finite  real-weighted WGraph holds (for EL being (FF:ELabeling of G) holds (for source being (Vertex of G) holds ( AP:CompSeq (EL,source) ) is  halting)))
proof
let G being  finite  real-weighted WGraph;
let EL being (FF:ELabeling of G);
let source being (Vertex of G);
set CS = ( AP:CompSeq (EL,source) );
now
set x = ( card ( the_Vertices_of G ) );
defpred P[ (Element of ( NAT )) ]
 means
( card ( dom ( CS . $1 ) ) ) = ( $1 + 1 );
assume A1: (for n being (Element of ( NAT )) holds ( CS . n ) <> ( CS . ( n + 1 ) ));
A2:now
let n being (Element of ( NAT ));
set Gn = ( CS . n );
set Gn1 = ( CS . ( n + 1 ) );
set Next = ( AP:NextBestEdges Gn );
set e = ( choose Next );
A3: Gn1 = ( AP:Step Gn ) by CKB24:def 1;
assume A4: P[ n ];
now
per cases ;
suppose Next = ( {} );

then Gn = ( CS . ( n + 1 ) ) by A3,CKB21:def 1;
hence P[ ( n + 1 ) ] by A1;
end;
suppose A5: (Next <> ( {} ) & (not ( ( the_Source_of G ) . e ) in ( dom Gn )));

then Gn1 = ( Gn +* ( ( ( the_Source_of G ) . e ) .--> e ) ) by A3,CKB21:def 1;
then ( dom Gn1 ) = ( ( dom Gn ) \/ { ( ( the_Source_of G ) . e ) } ) by CKB1:1;
hence P[ ( n + 1 ) ] by A4,A5,CARD_2:41;
end;
suppose A6: (Next <> ( {} ) & ( ( the_Source_of G ) . e ) in ( dom Gn ));

then Gn1 = ( Gn +* ( ( ( the_Target_of G ) . e ) .--> e ) ) by A3,CKB21:def 1;
then A7: ( dom Gn1 ) = ( ( dom Gn ) \/ { ( ( the_Target_of G ) . e ) } ) by CKB1:1;
(e is_forward_edge_wrt Gn or e is_backward_edge_wrt Gn) by A6,CKB20:def 1;
then (not ( ( the_Target_of G ) . e ) in ( dom Gn )) by A6,CKB14:def 1,CKB15:def 1;
hence P[ ( n + 1 ) ] by A4,A7,CARD_2:41;
end;
end;
hence P[ ( n + 1 ) ];
end;
( dom ( CS . ( 0 ) ) ) = { source } by CKB25:1;
then A8: P[ ( 0 ) ] by CARD_1:30;
(for n being (Element of ( NAT )) holds P[ n ]) from NAT_1:sch 1(A8,A2);
then ( card ( dom ( CS . x ) ) ) = ( ( card ( the_Vertices_of G ) ) + 1 );
then ( 1 + ( card ( the_Vertices_of G ) ) ) <= ( ( card ( the_Vertices_of G ) ) + ( 0 ) ) by NAT_1:43;
hence contradiction by XREAL_1:6;
end;
hence thesis by GLIB_000:def 54;
end;
