environ
vocabularies BCIALG_1,STRUCT_0,BINOP_1,SUBSET_1,XBOOLE_0,RELAT_1,FUNCT_1,FUNCT_5,ZFMISC_1,NUMBERS,FINSEQ_1,XXREAL_0,SUPINF_2,VECTSP_1,ALGSTR_0,RLVECT_1,ARYTM_3,SETWISEO,GROUP_1,CARD_1,NAT_1,NEWTON,POWER,FINSOP_1,ORDINAL4,BCIALG_2,TARSKI,FILTER_0,BCIALG_4;
notations TARSKI,ZFMISC_1,XBOOLE_0,SUBSET_1,BINOP_1,FUNCT_5,CARD_1,STRUCT_0,ALGSTR_0,BCIALG_1,RELAT_1,NUMBERS,XXREAL_0,FINSEQ_1,FINSOP_1,SETWISEO,FUNCT_1,FUNCT_2,FINSEQ_4,RLVECT_1,NAT_1,BCIALG_2,VECTSP_1,CKB1,CKB3,CKB4,CKB5,CKB10,CKB11,CKB18,CKB37,CKB38,CKB50,CKB61,CKB66,CKB70,CKB72,CKB79,CKB80,CKB81,CKB85;
definitions STRUCT_0,BINOP_1,BCIALG_1,FINSEQ_1,RLVECT_1,ALGSTR_0,CKB3,CKB4,CKB5,CKB11,CKB18,CKB37,CKB38,CKB50,CKB66,CKB70,CKB72,CKB79,CKB80,CKB81;
theorems TARSKI,STRUCT_0,BCIALG_1,FINSEQ_1,FINSOP_1,SETWISEO,NAT_1,BINOP_1,BCIALG_2,CARD_1,CKB3,CKB4,CKB5,CKB7,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB62,CKB63,CKB64,CKB65,CKB66,CKB68,CKB69,CKB70,CKB71,CKB72,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82;
schemes BINOP_1,NAT_1,CLASSES1;
registrations BCIALG_1,RELAT_1,STRUCT_0,ORDINAL1,XXREAL_0,VECTSP_1,BCIALG_2,ZFMISC_1,CARD_1,CKB1,CKB2,CKB6,CKB8,CKB9,CKB33,CKB60,CKB67,CKB73,CKB83,CKB84;
constructors BINOP_1,VECTSP_2,FINSOP_1,SETWISEO,XXREAL_0,FINSEQ_4,BCIALG_2,FUNCT_5,SEQ_1,CKB1,CKB3,CKB4,CKB5,CKB11,CKB18,CKB37,CKB38,CKB50,CKB66,CKB70,CKB72,CKB79,CKB80,CKB81;
requirements SUBSET,BOOLE,NUMERALS,ARITHM;
begin
reserve X for non  empty BCIStr_1;
theorem
(for X being non  empty BCIStr_1 holds (X is  positive-implicative  positive-implicative BCK-Algebra_with_Condition(S) iff X is semi-Brouwerian-algebra))
proof
let X being non  empty BCIStr_1;
A1: (X is semi-Brouwerian-algebra implies X is  positive-implicative  positive-implicative BCK-Algebra_with_Condition(S))
proof
assume A2: X is semi-Brouwerian-algebra;
A3: (for x,y being (Element of X) holds ((( x \ y ) = ( 0. X ) & ( y \ x ) = ( 0. X )) implies x = y))
proof
let x being (Element of X);
let y being (Element of X);
assume that
A4: ( x \ y ) = ( 0. X )
and
A5: ( y \ x ) = ( 0. X );
A6: x = ( x * x ) by A2,CKB79:def 1
.= ( ( x \ x ) * x ) by A2,CKB81:def 1
.= ( ( 0. X ) * x ) by A2,BCIALG_1:def 5
.= ( y * x ) by A2,A5,CKB81:def 1;
y = ( y * y ) by A2,CKB79:def 1
.= ( ( y \ y ) * y ) by A2,CKB81:def 1
.= ( y * ( y \ y ) ) by A2,CKB80:def 1
.= ( y * ( 0. X ) ) by A2,BCIALG_1:def 5
.= ( ( x \ y ) * y ) by A2,A4,CKB80:def 1
.= ( x * y ) by A2,CKB81:def 1;
hence thesis by A2,A6,CKB80:def 1;
end;
A7: (for x,y,z being (Element of X) holds ( ( x \ y ) \ z ) = ( ( x \ z ) \ y ))
proof
let x being (Element of X);
let y being (Element of X);
let z being (Element of X);
( ( x \ y ) \ z ) = ( x \ ( y * z ) ) by A2,CKB4:def 1
.= ( x \ ( z * y ) ) by A2,CKB80:def 1;
hence thesis by A2,CKB4:def 1;
end;
A8: (for x,y,z being (Element of X) holds ( ( ( x \ y ) \ z ) \ ( ( x \ z ) \ y ) ) = ( 0. X ))
proof
let x being (Element of X);
let y being (Element of X);
let z being (Element of X);
( ( ( x \ y ) \ z ) \ ( ( x \ z ) \ y ) ) = ( ( ( x \ y ) \ z ) \ ( ( x \ y ) \ z ) ) by A7;
hence thesis by A2,BCIALG_1:def 5;
end;
A9: (for x,y being (Element of X) holds ( x * y ) = ( x * ( y \ x ) ))
proof
let x being (Element of X);
let y being (Element of X);
( x * ( y \ x ) ) = ( ( y \ x ) * x ) by A2,CKB80:def 1
.= ( y * x ) by A2,CKB81:def 1;
hence thesis by A2,CKB80:def 1;
end;
A10: (for x being (Element of X) holds ( x ` ) = ( 0. X ))
proof
let x being (Element of X);
( ( 0. X ) \ x ) = ( ( x \ x ) \ x ) by A2,BCIALG_1:def 5
.= ( x \ ( x * x ) ) by A2,CKB4:def 1
.= ( x \ x ) by A2,CKB79:def 1
.= ( 0. X ) by A2,BCIALG_1:def 5;
hence thesis;
end;
(for x,y,z being (Element of X) holds ( ( ( x \ y ) \ ( z \ y ) ) \ ( x \ z ) ) = ( 0. X ))
proof
let x being (Element of X);
let y being (Element of X);
let z being (Element of X);
( ( ( x \ y ) \ ( z \ y ) ) \ ( x \ z ) ) = ( ( x \ ( y * ( z \ y ) ) ) \ ( x \ z ) ) by A2,CKB4:def 1
.= ( ( x \ ( ( z \ y ) * y ) ) \ ( x \ z ) ) by A2,CKB80:def 1
.= ( ( x \ ( z * y ) ) \ ( x \ z ) ) by A2,CKB81:def 1
.= ( ( ( x \ z ) \ y ) \ ( x \ z ) ) by A2,CKB4:def 1
.= ( ( ( x \ z ) \ ( x \ z ) ) \ y ) by A7
.= ( y ` ) by A2,BCIALG_1:def 5;
hence thesis by A10;
end;
hence thesis by A2,A10,A3,A8,A9,CKB77:1,BCIALG_1:def 3,BCIALG_1:def 4,BCIALG_1:def 7,BCIALG_1:def 8;
end;
(X is  positive-implicative  positive-implicative BCK-Algebra_with_Condition(S) implies X is semi-Brouwerian-algebra)
proof
assume A11: X is  positive-implicative  positive-implicative BCK-Algebra_with_Condition(S);
A12: (for x,y being (Element of X) holds ( ( x \ y ) * y ) = ( x * y ))
proof
let x being (Element of X);
let y being (Element of X);
( y * x ) = ( y * ( x \ y ) ) by A11,CKB77:1;
then ( x * y ) = ( y * ( x \ y ) ) by A11,CKB21:1;
hence thesis by A11,CKB21:1;
end;
((for x being (Element of X) holds ( x * x ) = x) & (for x,y being (Element of X) holds ( x * y ) = ( y * x ))) by A11,CKB21:1,CKB74:1;
hence thesis by A11,A12,CKB79:def 1,CKB80:def 1,CKB81:def 1;
end;
hence thesis by A1;
end;
