environ
vocabularies FUNCT_1,RELAT_1,XBOOLE_0,TARSKI,FUNCT_4,PARTFUN1,SUBSET_1,PBOOLE,STRUCT_0,MSUALG_1,MARGREL1,CATALG_1,PUA2MSS1,TREES_1,FINSEQ_1,INSTALG1,FUNCSDOM,MSUALG_6,PROB_2,CARD_3,ALGSPEC1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,MSAFREE1,FINSEQ_1,PBOOLE,RELSET_1,PARTFUN1,FINSEQ_2,FUNCT_4,LANG1,FUNCT_2,STRUCT_0,CARD_3,MSUALG_1,PROB_2,PUA2MSS1,CIRCCOMB,MSUALG_6,INSTALG1,CATALG_1,CKB7,CKB24,CKB31;
definitions TARSKI,FUNCT_1,PARTFUN1,STRUCT_0,MSUALG_1,CIRCCOMB,PUA2MSS1,INSTALG1,XBOOLE_0,FUNCT_2,CKB7,CKB24,CKB31;
theorems RELAT_1,FUNCT_1,FUNCT_2,FUNCT_3,FUNCT_4,PARTFUN1,GRFUNC_1,FINSEQ_1,PBOOLE,LANG1,PUA2MSS1,FRECHET,INSTALG1,FUNCT_7,CIRCCOMB,RELSET_1,PROB_2,MSAFREE1,XBOOLE_0,XBOOLE_1,FINSEQ_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37;
schemes FUNCT_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCT_2,PBOOLE,STRUCT_0,MSUALG_1,MSUALG_2,CIRCCOMB,MSUALG_6,INSTALG1,CATALG_1,RELSET_1,CKB38;
constructors MSAFREE1,CIRCCOMB,PUA2MSS1,MSUALG_6,CATALG_1,RELSET_1,CKB7,CKB24,CKB31;
requirements SUBSET,BOOLE;
begin
definition
let S being non empty non void ManySortedSign;
let f being Function;
let g being Function;
assume that
A1: f,g form_a_replacement_in S;
func S with-replacement (f,g) ->  strict non empty non void ManySortedSign
means
:Def4: ((( (the carrier of S) -indexing f ),( (the carrier' of S) -indexing g ) form_morphism_between S,it & (the carrier of it) = ( rng ( (the carrier of S) -indexing f ) )) & (the carrier' of it) = ( rng ( (the carrier' of S) -indexing g ) ));
uniqueness
proof
set g1 = ( (the carrier' of S) -indexing g );
set g2 = g1;
set f1 = ( (the carrier of S) -indexing f );
set f2 = f1;
let S1 being  strict non empty non void ManySortedSign,S2 being  strict non empty non void ManySortedSign;
assume that
A2: f1,g1 form_morphism_between S,S1
and
A3: (the carrier of S1) = ( rng f1 )
and
A4: (the carrier' of S1) = ( rng g1 )
and
A5: f2,g2 form_morphism_between S,S2
and
A6: (the carrier of S2) = ( rng f2 )
and
A7: (the carrier' of S2) = ( rng g2 );
A8: (the ResultSort of S1) = (the ResultSort of S2)
proof
thus (the carrier' of S1) = (the carrier' of S2) by A4,A7;
let o being (OperSymbol of S1);
consider o1 being set such that A9: o1 in ( dom g1 ) and A10: o = ( g1 . o1 ) by A4,FUNCT_1:def 3;
consider o2 being set such that A11: o2 in ( dom g2 ) and A12: o = ( g2 . o2 ) by A4,FUNCT_1:def 3;
reconsider o1,o2 as (OperSymbol of S) by A2,A9,A11,PUA2MSS1:def 12;
thus ( (the ResultSort of S1) . o ) = ( ( (the ResultSort of S1) * g1 ) . o1 ) by A9,A10,FUNCT_1:13
.= ( ( f1 * (the ResultSort of S) ) . o1 ) by A2,PUA2MSS1:def 12
.= ( f1 . ( the_result_sort_of o1 ) ) by FUNCT_2:15
.= ( f2 . ( the_result_sort_of o2 ) ) by A1,A10,A12,CKB32:1
.= ( ( f2 * (the ResultSort of S) ) . o2 ) by FUNCT_2:15
.= ( ( (the ResultSort of S2) * g2 ) . o2 ) by A5,PUA2MSS1:def 12
.= ( (the ResultSort of S2) . o ) by A11,A12,FUNCT_1:13;
end;
(the Arity of S1) = (the Arity of S2)
proof
thus (the carrier' of S1) = (the carrier' of S2) by A4,A7;
let o being (OperSymbol of S1);
consider o2 being set such that A13: o2 in ( dom g2 ) and A14: o = ( g2 . o2 ) by A4,FUNCT_1:def 3;
reconsider o2 as (OperSymbol of S) by A2,A13,PUA2MSS1:def 12;
thus ( (the Arity of S1) . o ) = ( f2 * ( the_arity_of o2 ) ) by A2,A14,PUA2MSS1:def 12
.= ( (the Arity of S2) . o ) by A5,A14,PUA2MSS1:def 12;
end;
hence thesis by A3,A4,A6,A7,A8;
end;
existence
proof
set g9 = ( (the carrier' of S) -indexing g );
set gg = g9;
set f9 = ( (the carrier of S) -indexing f );
set ff = f9;
A15: ( dom g9 ) = (the carrier' of S) by PARTFUN1:def 2;
reconsider X = ( rng f9 ),Y = ( rng g9 ) as non empty set;
reconsider g9 as (Function of (the carrier' of S),Y) by A15,FUNCT_2:1;
set G = the (rng-retract of g9);
A16: ( rng G ) c= (the carrier' of S) by A15,CKB25:1;
( dom G ) = ( rng g9 ) by CKB24:def 1;
then reconsider G as (Function of Y,(the carrier' of S)) by A16,FUNCT_2:def 1,RELSET_1:4;
( dom f9 ) = (the carrier of S) by PARTFUN1:def 2;
then reconsider f9 as (Function of (the carrier of S),X) by FUNCT_2:1;
set r = ( ( f9 * (the ResultSort of S) ) * G );
take R = ManySortedSign (# X,Y,( ( ( f9 * ) * (the Arity of S) ) * G ),r #);
thus ff,gg form_morphism_between S,R
proof
thus (( dom ff ) = (the carrier of S) & ( dom gg ) = (the carrier' of S)) by PARTFUN1:def 2;
thus (( rng ff ) c= (the carrier of R) & ( rng gg ) c= (the carrier' of R));
now
let x being (OperSymbol of S);
A17: ( g9 . ( G . ( g9 . x ) ) ) = ( g9 . x ) by CKB26:1;
thus ( ( r * g9 ) . x ) = ( (the ResultSort of R) . ( g9 . x ) ) by FUNCT_2:15
.= ( ( f9 * (the ResultSort of S) ) . ( G . ( g9 . x ) ) ) by FUNCT_2:15
.= ( f9 . ( the_result_sort_of ( G . ( g9 . x ) ) ) ) by FUNCT_2:15
.= ( f9 . ( the_result_sort_of x ) ) by A1,A17,CKB32:1
.= ( ( f9 * (the ResultSort of S) ) . x ) by FUNCT_2:15;
end;
hence ( ff * (the ResultSort of S) ) = ( (the ResultSort of R) * gg ) by FUNCT_2:63;
let o being set;
let p being Function;
assume that
A18: o in (the carrier' of S)
and
A19: p = ( (the Arity of S) . o );
reconsider x = o as (OperSymbol of S) by A18;
( g9 . ( G . ( g9 . x ) ) ) = ( g9 . x ) by CKB26:1;
then ( f9 * ( the_arity_of x ) ) = ( f9 * ( the_arity_of ( G . ( g9 . x ) ) ) ) by A1,CKB32:1;
hence ( ff * p ) = ( ( f9 * ) . ( the_arity_of ( G . ( g9 . x ) ) ) ) by A19,LANG1:def 13
.= ( ( ( f9 * ) * (the Arity of S) ) . ( G . ( g9 . x ) ) ) by FUNCT_2:15
.= ( (the Arity of R) . ( gg . o ) ) by FUNCT_2:15;
end;

thus thesis;
end;
end;
