environ
vocabularies FUNCT_1,RELAT_1,XBOOLE_0,TARSKI,FUNCT_4,PARTFUN1,SUBSET_1,PBOOLE,STRUCT_0,MSUALG_1,MARGREL1,CATALG_1,PUA2MSS1,TREES_1,FINSEQ_1,INSTALG1,FUNCSDOM,MSUALG_6,PROB_2,CARD_3,ALGSPEC1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,MSAFREE1,FINSEQ_1,PBOOLE,RELSET_1,PARTFUN1,FINSEQ_2,FUNCT_4,LANG1,FUNCT_2,STRUCT_0,CARD_3,MSUALG_1,PROB_2,PUA2MSS1,CIRCCOMB,MSUALG_6,INSTALG1,CATALG_1,CKB7,CKB24,CKB31,CKB39,CKB50,CKB64,CKB65;
definitions TARSKI,FUNCT_1,PARTFUN1,STRUCT_0,MSUALG_1,CIRCCOMB,PUA2MSS1,INSTALG1,XBOOLE_0,FUNCT_2,CKB7,CKB24,CKB31,CKB39,CKB50,CKB64,CKB65;
theorems RELAT_1,FUNCT_1,FUNCT_2,FUNCT_3,FUNCT_4,PARTFUN1,GRFUNC_1,FINSEQ_1,PBOOLE,LANG1,PUA2MSS1,FRECHET,INSTALG1,FUNCT_7,CIRCCOMB,RELSET_1,PROB_2,MSAFREE1,XBOOLE_0,XBOOLE_1,FINSEQ_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB59,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69;
schemes FUNCT_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCT_2,PBOOLE,STRUCT_0,MSUALG_1,MSUALG_2,CIRCCOMB,MSUALG_6,INSTALG1,CATALG_1,RELSET_1,CKB38,CKB57,CKB58,CKB60;
constructors MSAFREE1,CIRCCOMB,PUA2MSS1,MSUALG_6,CATALG_1,RELSET_1,CKB7,CKB24,CKB31,CKB39,CKB50,CKB64,CKB65;
requirements SUBSET,BOOLE;
begin
theorem
(for S being non empty Signature holds (for A being (Algebra of S) holds (for E being non empty ManySortedSign holds (A is MSAlgebra over E implies A is MSAlgebra over ( E +* S )))))
proof
let S being non empty Signature;
let A being (Algebra of S);
let E being non empty ManySortedSign;
set T = ( E +* S );
A1: ( dom (the ResultSort of S) ) = (the carrier' of S) by FUNCT_2:def 1;
A2: (the ResultSort of T) = ( (the ResultSort of E) +* (the ResultSort of S) ) by CIRCCOMB:def 2;
assume A is MSAlgebra over E;
then reconsider B = A as MSAlgebra over E;
A3: (the Arity of T) = ( (the Arity of E) +* (the Arity of S) ) by CIRCCOMB:def 2;
B is (Algebra of S);
then A4: (the carrier of S) c= (the carrier of E) by CKB68:1;
(the carrier of T) = ( (the carrier of E) \/ (the carrier of S) ) by CIRCCOMB:def 2;
then A5: (the carrier of T) = (the carrier of E) by A4,XBOOLE_1:12;
then reconsider Ss = (the Sorts of B) as (ManySortedSet of (the carrier of T));
B is (Algebra of S);
then A6: (the carrier' of S) c= (the carrier' of E) by CKB68:1;
(the carrier' of T) = ( (the carrier' of E) \/ (the carrier' of S) ) by CIRCCOMB:def 2;
then A7: (the carrier' of T) = (the carrier' of E) by A6,XBOOLE_1:12;
A8: ( dom (the Arity of S) ) = (the carrier' of S) by FUNCT_2:def 1;
now
let i being set;
assume A9: i in (the carrier' of T);
then A10: ( ( Ss * (the ResultSort of T) ) . i ) = ( Ss . ( (the ResultSort of T) . i ) ) by FUNCT_2:15;
A11:now
assume A12: i in (the carrier' of S);
then reconsider S9 = S as non void Signature;
reconsider o = i as (OperSymbol of S9) by A12;
A13: ( (the Arity of T) . o ) = ( the_arity_of o ) by A8,A3,FUNCT_4:13;
( (the ResultSort of T) . o ) = ( the_result_sort_of o ) by A1,A2,FUNCT_4:13;
hence ( (the Charact of B) . i ) is (Function of ( ( (the Sorts of B) # ) . ( (the Arity of T) . i ) ),( (the Sorts of B) . ( (the ResultSort of T) . i ) )) by A13,CKB69:1;
end;
A14: ((not i in (the carrier' of S)) implies (( (the Arity of T) . i ) = ( (the Arity of E) . i ) & ( (the ResultSort of T) . i ) = ( (the ResultSort of E) . i ))) by A8,A1,A3,A2,FUNCT_4:11;
A15: ( ( ( Ss # ) * (the Arity of E) ) . i ) = ( ( Ss # ) . ( (the Arity of E) . i ) ) by A7,A9,FUNCT_2:15;
A16: ( ( ( Ss # ) * (the Arity of T) ) . i ) = ( ( Ss # ) . ( (the Arity of T) . i ) ) by A9,FUNCT_2:15;
( ( Ss * (the ResultSort of E) ) . i ) = ( Ss . ( (the ResultSort of E) . i ) ) by A7,A9,FUNCT_2:15;
hence ( (the Charact of B) . i ) is (Function of ( ( ( Ss # ) * (the Arity of T) ) . i ),( ( Ss * (the ResultSort of T) ) . i )) by A5,A7,A9,A15,A10,A16,A11,A14,PBOOLE:def 15;
end;
then reconsider C = (the Charact of B) as (ManySortedFunction of ( ( Ss # ) * (the Arity of T) ),( Ss * (the ResultSort of T) )) by A7,PBOOLE:def 15;
set B9 = MSAlgebra (# Ss,C #);
(the Sorts of B9) = (the Sorts of B);
then B is MSAlgebra over T;
hence thesis;
end;
