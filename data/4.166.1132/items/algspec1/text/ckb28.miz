environ
vocabularies FUNCT_1,RELAT_1,XBOOLE_0,TARSKI,FUNCT_4,PARTFUN1,SUBSET_1,PBOOLE,STRUCT_0,MSUALG_1,MARGREL1,CATALG_1,PUA2MSS1,TREES_1,FINSEQ_1,INSTALG1,FUNCSDOM,MSUALG_6,PROB_2,CARD_3,ALGSPEC1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,MSAFREE1,FINSEQ_1,PBOOLE,RELSET_1,PARTFUN1,FINSEQ_2,FUNCT_4,LANG1,FUNCT_2,STRUCT_0,CARD_3,MSUALG_1,PROB_2,PUA2MSS1,CIRCCOMB,MSUALG_6,INSTALG1,CATALG_1,CKB7,CKB24;
definitions TARSKI,FUNCT_1,PARTFUN1,STRUCT_0,MSUALG_1,CIRCCOMB,PUA2MSS1,INSTALG1,XBOOLE_0,FUNCT_2,CKB7,CKB24;
theorems RELAT_1,FUNCT_1,FUNCT_2,FUNCT_3,FUNCT_4,PARTFUN1,GRFUNC_1,FINSEQ_1,PBOOLE,LANG1,PUA2MSS1,FRECHET,INSTALG1,FUNCT_7,CIRCCOMB,RELSET_1,PROB_2,MSAFREE1,XBOOLE_0,XBOOLE_1,FINSEQ_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
schemes FUNCT_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCT_2,PBOOLE,STRUCT_0,MSUALG_1,MSUALG_2,CIRCCOMB,MSUALG_6,INSTALG1,CATALG_1,RELSET_1;
constructors MSAFREE1,CIRCCOMB,PUA2MSS1,MSUALG_6,CATALG_1,RELSET_1,CKB7,CKB24;
requirements SUBSET,BOOLE;
begin
theorem
(for f being Function holds (f is  one-to-one implies (for g being (rng-retract of f) holds g = ( f " ))))
proof
let f being Function;
assume that
A1: f is  one-to-one;
let g being (rng-retract of f);
A2: ( rng f ) = ( dom g ) by CKB24:def 1;
A3: ( rng g ) = ( dom f )
proof
thus ( rng g ) c= ( dom f ) by CKB25:1;
let x being set;
assume A4: x in ( dom f );
then A5: ( f . x ) in ( rng f ) by FUNCT_1:def 3;
then A6: ( g . ( f . x ) ) in ( dom f ) by CKB26:1;
( f . ( g . ( f . x ) ) ) = ( f . x ) by A5,CKB26:1;
then x = ( g . ( f . x ) ) by A1,A4,A6,FUNCT_1:def 4;
hence thesis by A2,A5,FUNCT_1:def 3;
end;
now
let x being set;
let y being set;
assume that
A7: x in ( dom f )
and
A8: y in ( dom g );
A9: ( g . y ) in ( rng g ) by A8,FUNCT_1:def 3;
( f . ( g . y ) ) = y by A2,A8,CKB26:1;
hence (( f . x ) = y iff ( g . y ) = x) by A1,A3,A7,A9,FUNCT_1:def 4;
end;
hence thesis by A1,A2,A3,FUNCT_1:38;
end;
