environ
vocabularies STRUCT_0,XBOOLE_0,RELAT_1,CAT_1,SUBSET_1,TARSKI,FUNCT_1,ZFMISC_1,MCART_1,YELLOW_1,LATTICE3,ORDERS_2,FILTER_1,WAYBEL_1,WAYBEL_0,XXREAL_0,PBOOLE,EQREL_1,CLASSES2,BINOP_1,LATTICES,QC_LANG1,REWRITE1,SETFAM_1,CONLAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,STRUCT_0,LATTICES,ORDERS_2,YELLOW_1,WAYBEL_1,LATTICE3,SETFAM_1,WAYBEL_0,CKB1,CKB5,CKB8,CKB9,CKB10,CKB15,CKB16,CKB17,CKB18,CKB30,CKB31,CKB32,CKB40,CKB41,CKB42,CKB48,CKB50;
definitions TARSKI,BINOP_1,CKB1,CKB15,CKB17,CKB18,CKB30,CKB31,CKB32,CKB41,CKB42,CKB48;
theorems TARSKI,RELAT_1,FUNCT_1,FUNCT_2,ZFMISC_1,LATTICES,MCART_1,LATTICE3,YELLOW_1,ORDERS_2,FILTER_1,VECTSP_8,SETFAM_1,WAYBEL_0,RELSET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB47,CKB48;
schemes BINOP_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FUNCT_2,STRUCT_0,LATTICES,LATTICE3,YELLOW_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB11,CKB12,CKB13,CKB14,CKB40,CKB43,CKB44,CKB45,CKB46,CKB49,CKB51;
constructors SETFAM_1,BINOP_1,DOMAIN_1,LATTICE3,WAYBEL_1,STRUCT_0,RELSET_1,CKB1,CKB5,CKB15,CKB17,CKB18,CKB30,CKB31,CKB32,CKB40,CKB41,CKB42,CKB48;
requirements SUBSET,BOOLE;
begin
theorem
Th20: (for C being FormalContext holds (for O being (Subset of (the carrier of C)) holds (ConceptStr (# ( ( AttributeDerivation C ) . ( ( ObjectDerivation C ) . O ) ),( ( ObjectDerivation C ) . O ) #) is (FormalConcept of C) & (for O9 being (Subset of (the carrier of C)) holds (for A9 being (Subset of (the carrier' of C)) holds ((ConceptStr (# O9,A9 #) is (FormalConcept of C) & O c= O9) implies ( ( AttributeDerivation C ) . ( ( ObjectDerivation C ) . O ) ) c= O9))))))
proof
let C being FormalContext;
let O being (Subset of (the carrier of C));
A1: (for O9 being (Subset of (the carrier of C)) holds (for A9 being (Subset of (the carrier' of C)) holds ((ConceptStr (# O9,A9 #) is (FormalConcept of C) & O c= O9) implies ( ( AttributeDerivation C ) . ( ( ObjectDerivation C ) . O ) ) c= O9)))
proof
let O9 being (Subset of (the carrier of C));
let A9 being (Subset of (the carrier' of C));
assume that
A2: ConceptStr (# O9,A9 #) is (FormalConcept of C)
and
A3: O c= O9;
reconsider M9 = ConceptStr (# O9,A9 #) as (FormalConcept of C) by A2;
A4: ( ( AttributeDerivation C ) . A9 ) = (the Extent of M9) by CKB48:def 1
.= O9;
A5: ( ( ObjectDerivation C ) . O9 ) = (the Intent of M9) by CKB48:def 1
.= A9;
( ( ObjectDerivation C ) . O9 ) c= ( ( ObjectDerivation C ) . O ) by A3,CKB21:1;
hence thesis by A4,A5,CKB22:1;
end;
ConceptStr (# ( ( AttributeDerivation C ) . ( ( ObjectDerivation C ) . O ) ),( ( ObjectDerivation C ) . O ) #) is (FormalConcept of C)
proof
set M9 = ConceptStr (# ( ( AttributeDerivation C ) . ( ( ObjectDerivation C ) . O ) ),( ( ObjectDerivation C ) . O ) #);
( ( ObjectDerivation C ) . (the Extent of M9) ) = (the Intent of M9) by CKB25:1;
hence thesis by CKB48:def 1,CKB47:1;
end;
hence thesis by A1;
end;
