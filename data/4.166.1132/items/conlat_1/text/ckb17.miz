environ
vocabularies STRUCT_0,XBOOLE_0,RELAT_1,CAT_1,SUBSET_1,TARSKI,FUNCT_1,ZFMISC_1,MCART_1,YELLOW_1,LATTICE3,ORDERS_2,FILTER_1,WAYBEL_1,WAYBEL_0,XXREAL_0,PBOOLE,EQREL_1,CLASSES2,BINOP_1,LATTICES,QC_LANG1,REWRITE1,SETFAM_1,CONLAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,STRUCT_0,LATTICES,ORDERS_2,YELLOW_1,WAYBEL_1,LATTICE3,SETFAM_1,WAYBEL_0,CKB1,CKB5,CKB8,CKB9,CKB10,CKB15,CKB16;
definitions TARSKI,BINOP_1,CKB1,CKB15;
theorems TARSKI,RELAT_1,FUNCT_1,FUNCT_2,ZFMISC_1,LATTICES,MCART_1,LATTICE3,YELLOW_1,ORDERS_2,FILTER_1,VECTSP_8,SETFAM_1,WAYBEL_0,RELSET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB15;
schemes BINOP_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FUNCT_2,STRUCT_0,LATTICES,LATTICE3,YELLOW_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB11,CKB12,CKB13,CKB14;
constructors SETFAM_1,BINOP_1,DOMAIN_1,LATTICE3,WAYBEL_1,STRUCT_0,RELSET_1,CKB1,CKB5,CKB15;
requirements SUBSET,BOOLE;
begin
definition
let C being FormalContext;
func ObjectDerivation C -> (Function of ( bool (the carrier of C) ),( bool (the carrier' of C) )) means 
:Def6: (for O being (Subset of (the carrier of C)) holds ( it . O ) = { a where a is (Attribute of C): (for o being (Object of C) holds (o in O implies o is-connected-with a)) });
existence
proof
set f = { [ O,{ a where a is (Attribute of C): (for o being (Object of C) holds (o in O implies o is-connected-with a)) } ] where O is (Subset of (the carrier of C)): (not contradiction) };
(for u being set holds (u in f implies (ex v,w being set st u = [ v,w ])))
proof
let u being set;
assume u in f;
then (ex O being (Subset of (the carrier of C)) st u = [ O,{ a where a is (Attribute of C): (for o being (Object of C) holds (o in O implies o is-connected-with a)) } ]);
hence thesis;
end;
then reconsider f as Relation by RELAT_1:def 1;
(for u,v1,v2 being set holds (([ u,v1 ] in f & [ u,v2 ] in f) implies v1 = v2))
proof
let u being set;
let v1 being set;
let v2 being set;
assume that
A1: [ u,v1 ] in f
and
A2: [ u,v2 ] in f;
consider O being (Subset of (the carrier of C)) such that A3: [ u,v1 ] = [ O,{ a where a is (Attribute of C): (for o being (Object of C) holds (o in O implies o is-connected-with a)) } ] by A1;
A4: v1 = ( [ O,{ a where a is (Attribute of C): (for o being (Object of C) holds (o in O implies o is-connected-with a)) } ] `2 ) by A3,MCART_1:def 2
.= { a where a is (Attribute of C): (for o being (Object of C) holds (o in O implies o is-connected-with a)) } by MCART_1:def 2;
consider O9 being (Subset of (the carrier of C)) such that A5: [ u,v2 ] = [ O9,{ a where a is (Attribute of C): (for o being (Object of C) holds (o in O9 implies o is-connected-with a)) } ] by A2;
A6: v2 = ( [ O9,{ a where a is (Attribute of C): (for o being (Object of C) holds (o in O9 implies o is-connected-with a)) } ] `2 ) by A5,MCART_1:def 2
.= { a where a is (Attribute of C): (for o being (Object of C) holds (o in O9 implies o is-connected-with a)) } by MCART_1:def 2;
O = ( [ O,{ a where a is (Attribute of C): (for o being (Object of C) holds (o in O implies o is-connected-with a)) } ] `1 ) by MCART_1:def 1
.= u by A3,MCART_1:def 1
.= ( [ O9,{ a where a is (Attribute of C): (for o being (Object of C) holds (o in O9 implies o is-connected-with a)) } ] `1 ) by A5,MCART_1:def 1
.= O9 by MCART_1:def 1;
hence thesis by A4,A6;
end;
then reconsider f as Function by FUNCT_1:def 1;
A7: (for x being set holds (x in ( dom f ) implies x in ( bool (the carrier of C) )))
proof
let x being set;
assume x in ( dom f );
then consider y being set such that A8: [ x,y ] in f by RELAT_1:def 4;
consider O being (Subset of (the carrier of C)) such that A9: [ x,y ] = [ O,{ a where a is (Attribute of C): (for o being (Object of C) holds (o in O implies o is-connected-with a)) } ] by A8;
x = ( [ x,y ] `1 ) by MCART_1:def 1
.= O by A9,MCART_1:def 1;
hence thesis;
end;
(for x being set holds (x in ( bool (the carrier of C) ) implies x in ( dom f )))
proof
let x being set;
assume x in ( bool (the carrier of C) );
then reconsider x as (Subset of (the carrier of C));
[ x,{ a where a is (Attribute of C): (for o being (Object of C) holds (o in x implies o is-connected-with a)) } ] in f;
hence thesis by RELAT_1:def 4;
end;
then A10: ( dom f ) = ( bool (the carrier of C) ) by A7,TARSKI:1;
( rng f ) c= ( bool (the carrier' of C) )
proof
let y being set;
assume y in ( rng f );
then consider x being set such that A11: [ x,y ] in f by RELAT_1:def 5;
consider O being (Subset of (the carrier of C)) such that A12: [ x,y ] = [ O,{ a where a is (Attribute of C): (for o being (Object of C) holds (o in O implies o is-connected-with a)) } ] by A11;
A13: { a where a is (Attribute of C): (for o being (Object of C) holds (o in O implies o is-connected-with a)) } c= (the carrier' of C)
proof
let u being set;
assume u in { a where a is (Attribute of C): (for o being (Object of C) holds (o in O implies o is-connected-with a)) };
then (ex u9 being (Attribute of C) st (u9 = u & (for o being (Object of C) holds (o in O implies o is-connected-with u9))));
hence thesis;
end;
y = ( [ x,y ] `2 ) by MCART_1:def 2
.= { a where a is (Attribute of C): (for o being (Object of C) holds (o in O implies o is-connected-with a)) } by A12,MCART_1:def 2;
hence thesis by A13;
end;
then reconsider f as (Function of ( bool (the carrier of C) ),( bool (the carrier' of C) )) by A10,FUNCT_2:def 1,RELSET_1:4;
take f;
(for O being (Subset of (the carrier of C)) holds ( f . O ) = { a where a is (Attribute of C): (for o being (Object of C) holds (o in O implies o is-connected-with a)) })
proof
let O being (Subset of (the carrier of C));
consider y being set such that A14: [ O,y ] in f by A10,RELAT_1:def 4;
consider O9 being (Subset of (the carrier of C)) such that A15: [ O,y ] = [ O9,{ a where a is (Attribute of C): (for o being (Object of C) holds (o in O9 implies o is-connected-with a)) } ] by A14;
A16: y = ( [ O,y ] `2 ) by MCART_1:def 2
.= { a where a is (Attribute of C): (for o being (Object of C) holds (o in O9 implies o is-connected-with a)) } by A15,MCART_1:def 2;
O = ( [ O,y ] `1 ) by MCART_1:def 1
.= O9 by A15,MCART_1:def 1;
hence thesis by A10,A14,A16,FUNCT_1:def 2;
end;
hence thesis;
end;
uniqueness
proof
let F1 being (Function of ( bool (the carrier of C) ),( bool (the carrier' of C) ));
let F2 being (Function of ( bool (the carrier of C) ),( bool (the carrier' of C) ));
assume A17: (for O being (Subset of (the carrier of C)) holds ( F1 . O ) = { a where a is (Attribute of C): (for o being (Object of C) holds (o in O implies o is-connected-with a)) });
assume A18: (for O being (Subset of (the carrier of C)) holds ( F2 . O ) = { a where a is (Attribute of C): (for o being (Object of C) holds (o in O implies o is-connected-with a)) });
A19: (for O being set holds (O in ( bool (the carrier of C) ) implies ( F1 . O ) = ( F2 . O )))
proof
let O being set;
assume O in ( bool (the carrier of C) );
then reconsider O as (Subset of (the carrier of C));
( F1 . O ) = { a where a is (Attribute of C): (for o being (Object of C) holds (o in O implies o is-connected-with a)) } by A17
.= ( F2 . O ) by A18;
hence thesis;
end;
(( dom F1 ) = ( bool (the carrier of C) ) & ( dom F2 ) = ( bool (the carrier of C) )) by FUNCT_2:def 1;
hence thesis by A19,FUNCT_1:2;
end;
end;
