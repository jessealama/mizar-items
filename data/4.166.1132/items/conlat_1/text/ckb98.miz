environ
vocabularies STRUCT_0,XBOOLE_0,RELAT_1,CAT_1,SUBSET_1,TARSKI,FUNCT_1,ZFMISC_1,MCART_1,YELLOW_1,LATTICE3,ORDERS_2,FILTER_1,WAYBEL_1,WAYBEL_0,XXREAL_0,PBOOLE,EQREL_1,CLASSES2,BINOP_1,LATTICES,QC_LANG1,REWRITE1,SETFAM_1,CONLAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,STRUCT_0,LATTICES,ORDERS_2,YELLOW_1,WAYBEL_1,LATTICE3,SETFAM_1,WAYBEL_0,CKB1,CKB5,CKB8,CKB9,CKB10,CKB15,CKB16,CKB17,CKB18,CKB30,CKB31,CKB32,CKB40,CKB41,CKB42,CKB48,CKB50,CKB56,CKB57,CKB60,CKB61,CKB67,CKB68,CKB69,CKB70,CKB74,CKB75,CKB78,CKB79,CKB92,CKB95,CKB96;
definitions TARSKI,BINOP_1,CKB1,CKB15,CKB17,CKB18,CKB30,CKB31,CKB32,CKB41,CKB42,CKB48,CKB56,CKB57,CKB60,CKB61,CKB67,CKB69,CKB74,CKB78,CKB79,CKB92,CKB96;
theorems TARSKI,RELAT_1,FUNCT_1,FUNCT_2,ZFMISC_1,LATTICES,MCART_1,LATTICE3,YELLOW_1,ORDERS_2,FILTER_1,VECTSP_8,SETFAM_1,WAYBEL_0,RELSET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB47,CKB48,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB69,CKB71,CKB72,CKB73,CKB74,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB96,CKB97;
schemes BINOP_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FUNCT_2,STRUCT_0,LATTICES,LATTICE3,YELLOW_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB11,CKB12,CKB13,CKB14,CKB40,CKB43,CKB44,CKB45,CKB46,CKB49,CKB51,CKB58,CKB59,CKB76,CKB94;
constructors SETFAM_1,BINOP_1,DOMAIN_1,LATTICE3,WAYBEL_1,STRUCT_0,RELSET_1,CKB1,CKB5,CKB15,CKB17,CKB18,CKB30,CKB31,CKB32,CKB40,CKB41,CKB42,CKB48,CKB56,CKB57,CKB60,CKB61,CKB67,CKB68,CKB69,CKB74,CKB75,CKB78,CKB79,CKB92,CKB95,CKB96;
requirements SUBSET,BOOLE;
begin
theorem
Th48: (for C being FormalContext holds ( ConceptLattice C ) is  complete  complete Lattice)
proof
let C being FormalContext;
(for X being (Subset of ( ConceptLattice C )) holds (ex a being (Element of ( ConceptLattice C )) st (a is_less_than X & (for b being (Element of ( ConceptLattice C )) holds (b is_less_than X implies b [= a)))))
proof
let X being (Subset of ( ConceptLattice C ));
per cases ;
suppose A1: X = ( {} );

A2: (for b being (Element of ( ConceptLattice C )) holds (b is_less_than X implies b [= ( Top ( ConceptLattice C ) )))
proof
let b being (Element of ( ConceptLattice C ));
assume b is_less_than X;
(ex c being (Element of ( ConceptLattice C )) st (for a being (Element of ( ConceptLattice C )) holds (( c "\/" a ) = c & ( a "\/" c ) = c)))
proof
reconsider CO = ( Concept-with-all-Objects C ) as (Element of ( ConceptLattice C )) by CKB77:1;
(for CP being (Element of ( ConceptLattice C )) holds (( CO "\/" CP ) = CO & ( CP "\/" CO ) = CO))
proof
let CP being (Element of ( ConceptLattice C ));
reconsider CP as  strict (FormalConcept of C) by CKB77:1;
reconsider CO as  strict (FormalConcept of C);
( ( B-join C ) . (CO,CP) ) = ( ( B-join C ) . (CP,CO) ) by CKB83:1
.= CO by CKB89:1;
hence thesis by LATTICES:def 1;
end;
hence thesis;
end;
then ( ConceptLattice C ) is  upper-bounded by LATTICES:def 14;
then ( ( Top ( ConceptLattice C ) ) "\/" b ) = ( Top ( ConceptLattice C ) ) by LATTICES:def 17;
hence thesis by LATTICES:def 3;
end;
(for q being (Element of ( ConceptLattice C )) holds (q in X implies ( Top ( ConceptLattice C ) ) [= q)) by A1;
then ( Top ( ConceptLattice C ) ) is_less_than X by LATTICE3:def 16;
hence thesis by A2;
end;
suppose X <> ( {} );

then reconsider X as non empty (Subset of ( ConceptLattice C ));
set ExX = { (the Extent of x) where x is (Element of ( B-carrier C )): x in X };
A3: (for x being (Element of X) holds (the Extent of x) in ExX)
proof
let x being (Element of X);
x in X;
then reconsider x as (Element of ( B-carrier C ));
(the Extent of x) in ExX;
hence thesis;
end;
then reconsider ExX as non empty set;
set E1 = ( meet ExX );
A4: (for o being (Object of C) holds (o in E1 iff (for x being (Element of X) holds o in (the Extent of x))))
proof
let o being (Object of C);
A5: ((for x being (Element of X) holds o in (the Extent of x)) implies o in E1)
proof
assume A6: (for x being (Element of X) holds o in (the Extent of x));
(for Y being set holds (Y in ExX implies o in Y))
proof
let Y being set;
assume Y in ExX;
then (ex Y9 being (Element of ( B-carrier C )) st (Y = (the Extent of Y9) & Y9 in X));
hence thesis by A6;
end;
hence thesis by SETFAM_1:def 1;
end;
(o in E1 implies (for x being (Element of X) holds o in (the Extent of x)))
proof
assume A7: o in E1;
let x being (Element of X);
(the Extent of x) in ExX by A3;
hence thesis by A7,SETFAM_1:def 1;
end;
hence thesis by A5;
end;
E1 c= (the carrier of C)
proof
set Y = the (Element of ExX);
let x being set;
Y in ExX;
then consider Y9 being (Element of ( B-carrier C )) such that A8: Y = (the Extent of Y9) and Y9 in X;
assume x in E1;
then x in (the Extent of Y9) by A8,SETFAM_1:def 1;
hence thesis;
end;
then consider O being (Subset of (the carrier of C)) such that A9: (for o being (Object of C) holds (o in O iff (for x being (Element of X) holds o in (the Extent of x)))) by A4;
set InX = { (the Intent of x) where x is (Element of ( B-carrier C )): x in X };
set In = ( union InX );
A10: (for a being (Attribute of C) holds (a in In iff (ex x being (Element of X) st a in (the Intent of x))))
proof
let a being (Attribute of C);
A11: ((ex x being (Element of X) st a in (the Intent of x)) implies a in In)
proof
assume A12: (ex x being (Element of X) st a in (the Intent of x));
(ex Y being set st (a in Y & Y in InX))
proof
consider x being (Element of X) such that A13: a in (the Intent of x) by A12;
x in X;
then (the Intent of x) in InX;
hence thesis by A13;
end;
hence thesis by TARSKI:def 4;
end;
(a in In implies (ex x being (Element of X) st a in (the Intent of x)))
proof
assume a in In;
then consider Y being set such that A14: a in Y and A15: Y in InX by TARSKI:def 4;
(ex Y9 being (Element of ( B-carrier C )) st (Y = (the Intent of Y9) & Y9 in X)) by A15;
hence thesis by A14;
end;
hence thesis by A11;
end;
In c= (the carrier' of C)
proof
let x being set;
assume x in In;
then consider Y being set such that A16: x in Y and A17: Y in InX by TARSKI:def 4;
(ex Y9 being (Element of ( B-carrier C )) st (Y = (the Intent of Y9) & Y9 in X)) by A17;
hence thesis by A16;
end;
then consider A9 being (Subset of (the carrier' of C)) such that A18: (for a being (Attribute of C) holds (a in A9 iff (ex x being (Element of X) st a in (the Intent of x)))) by A10;
A19: (for o being (Object of C) holds (o in O iff (for x being (Element of X) holds o in ( ( AttributeDerivation C ) . (the Intent of x) ))))
proof
let o being (Object of C);
A20: ((for x being (Element of X) holds o in ( ( AttributeDerivation C ) . (the Intent of x) )) implies o in O)
proof
assume A21: (for x being (Element of X) holds o in ( ( AttributeDerivation C ) . (the Intent of x) ));
(for x being (Element of X) holds o in (the Extent of x))
proof
let x being (Element of X);
o in ( ( AttributeDerivation C ) . (the Intent of x) ) by A21;
hence thesis by CKB48:def 1;
end;
hence thesis by A9;
end;
(o in O implies (for x being (Element of X) holds o in ( ( AttributeDerivation C ) . (the Intent of x) )))
proof
assume A22: o in O;
(for x being (Element of X) holds o in ( ( AttributeDerivation C ) . (the Intent of x) ))
proof
let x being (Element of X);
o in (the Extent of x) by A9,A22;
hence thesis by CKB48:def 1;
end;
hence thesis;
end;
hence thesis by A20;
end;
A23: (for x being set holds (x in ( ( AttributeDerivation C ) . A9 ) implies x in O))
proof
let x being set;
assume x in ( ( AttributeDerivation C ) . A9 );
then x in { o where o is (Object of C): (for a being (Attribute of C) holds (a in A9 implies o is-connected-with a)) } by CKB18:def 1;
then consider x9 being (Object of C) such that A24: x9 = x and A25: (for a being (Attribute of C) holds (a in A9 implies x9 is-connected-with a));
(for x being (Element of X) holds x9 in ( ( AttributeDerivation C ) . (the Intent of x) ))
proof
let x being (Element of X);
(for a being (Attribute of C) holds (a in (the Intent of x) implies x9 is-connected-with a))
proof
let a being (Attribute of C);
assume a in (the Intent of x);
then a in A9 by A18;
hence thesis by A25;
end;
then x9 in { o where o is (Object of C): (for a being (Attribute of C) holds (a in (the Intent of x) implies o is-connected-with a)) };
hence thesis by CKB18:def 1;
end;
hence thesis by A19,A24;
end;
consider A being (Subset of (the carrier' of C)) such that A26: A = ( ( ObjectDerivation C ) . ( ( AttributeDerivation C ) . A9 ) );
set p = ConceptStr (# O,A #);
(for x being set holds (x in O implies x in ( ( AttributeDerivation C ) . A9 )))
proof
let x9 being set;
assume A27: x9 in O;
then reconsider x9 as (Object of C);
(for a being (Attribute of C) holds (a in A9 implies x9 is-connected-with a))
proof
let a being (Attribute of C);
assume a in A9;
then consider x being (Element of X) such that A28: a in (the Intent of x) by A18;
x9 in ( ( AttributeDerivation C ) . (the Intent of x) ) by A19,A27;
then x9 in { o where o is (Object of C): (for a being (Attribute of C) holds (a in (the Intent of x) implies o is-connected-with a)) } by CKB18:def 1;
then (ex y being (Object of C) st (y = x9 & (for a being (Attribute of C) holds (a in (the Intent of x) implies y is-connected-with a))));
hence thesis by A28;
end;
then x9 in { o where o is (Object of C): (for a being (Attribute of C) holds (a in A9 implies o is-connected-with a)) };
hence thesis by CKB18:def 1;
end;
then O = ( ( AttributeDerivation C ) . A9 ) by A23,TARSKI:1;
then p is (FormalConcept of C) by A26,CKB54:1;
then reconsider p as (Element of ( ConceptLattice C )) by CKB77:1;
A29: (for b being (Element of ( ConceptLattice C )) holds (b is_less_than X implies b [= p))
proof
let b being (Element of ( ConceptLattice C ));
assume A30: b is_less_than X;
(the Extent of ( b @ )) c= (the Extent of ( p @ ))
proof
let x9 being set;
assume A31: x9 in (the Extent of ( b @ ));
then reconsider x9 as (Object of C);
(for x being (Element of X) holds x9 in (the Extent of x))
proof
let x being (Element of X);
x in X;
then reconsider x as (Element of ( ConceptLattice C ));
b [= x by A30,LATTICE3:def 16;
then ( b @ ) is-SubConcept-of ( x @ ) by CKB97:1;
then (the Extent of ( b @ )) c= (the Extent of ( x @ )) by CKB69:def 1;
hence thesis by A31;
end;
hence thesis by A9;
end;
then ( b @ ) is-SubConcept-of ( p @ ) by CKB69:def 1;
hence thesis by CKB97:1;
end;
(for q being (Element of ( ConceptLattice C )) holds (q in X implies p [= q))
proof
let q being (Element of ( ConceptLattice C ));
assume A32: q in X;
(the Extent of ( p @ )) c= (the Extent of ( q @ ))
proof
let x being set;
assume x in (the Extent of ( p @ ));
hence thesis by A9,A32;
end;
then ( p @ ) is-SubConcept-of ( q @ ) by CKB69:def 1;
hence thesis by CKB97:1;
end;
then p is_less_than X by LATTICE3:def 16;
hence thesis by A29;
end;
end;
hence thesis by VECTSP_8:def 6;
end;
