environ
vocabularies STRUCT_0,XBOOLE_0,RELAT_1,CAT_1,SUBSET_1,TARSKI,FUNCT_1,ZFMISC_1,MCART_1,YELLOW_1,LATTICE3,ORDERS_2,FILTER_1,WAYBEL_1,WAYBEL_0,XXREAL_0,PBOOLE,EQREL_1,CLASSES2,BINOP_1,LATTICES,QC_LANG1,REWRITE1,SETFAM_1,CONLAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,STRUCT_0,LATTICES,ORDERS_2,YELLOW_1,WAYBEL_1,LATTICE3,SETFAM_1,WAYBEL_0,CKB1,CKB5,CKB8,CKB9,CKB10,CKB15,CKB16,CKB17,CKB18,CKB30,CKB31,CKB32,CKB40,CKB41,CKB42,CKB48,CKB50,CKB56,CKB57,CKB60,CKB61,CKB67,CKB68,CKB69,CKB70,CKB74,CKB75;
definitions TARSKI,BINOP_1,CKB1,CKB15,CKB17,CKB18,CKB30,CKB31,CKB32,CKB41,CKB42,CKB48,CKB56,CKB57,CKB60,CKB61,CKB67,CKB69,CKB74;
theorems TARSKI,RELAT_1,FUNCT_1,FUNCT_2,ZFMISC_1,LATTICES,MCART_1,LATTICE3,YELLOW_1,ORDERS_2,FILTER_1,VECTSP_8,SETFAM_1,WAYBEL_0,RELSET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB47,CKB48,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB69,CKB71,CKB72,CKB73,CKB74;
schemes BINOP_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FUNCT_2,STRUCT_0,LATTICES,LATTICE3,YELLOW_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB11,CKB12,CKB13,CKB14,CKB40,CKB43,CKB44,CKB45,CKB46,CKB49,CKB51,CKB58,CKB59,CKB76;
constructors SETFAM_1,BINOP_1,DOMAIN_1,LATTICE3,WAYBEL_1,STRUCT_0,RELSET_1,CKB1,CKB5,CKB15,CKB17,CKB18,CKB30,CKB31,CKB32,CKB40,CKB41,CKB42,CKB48,CKB56,CKB57,CKB60,CKB61,CKB67,CKB68,CKB69,CKB74,CKB75;
requirements SUBSET,BOOLE;
begin
theorem
Th35: (for C being FormalContext holds (for CP being set holds (CP in ( B-carrier C ) iff CP is  strict  strict (FormalConcept of C))))
proof
let C being FormalContext;
let CP being set;
A1: (CP is  strict  strict (FormalConcept of C) implies CP in ( B-carrier C ))
proof
assume A2: CP is  strict  strict (FormalConcept of C);
then reconsider CP as (FormalConcept of C);
set I9 = (the Intent of CP);
set E9 = (the Extent of CP);
(( ( ObjectDerivation C ) . E9 ) = I9 & ( ( AttributeDerivation C ) . I9 ) = E9) by CKB48:def 1;
hence thesis by A2;
end;
(CP in ( B-carrier C ) implies CP is  strict  strict (FormalConcept of C))
proof
assume CP in ( B-carrier C );
then (ex E being (Subset of (the carrier of C)) st (ex I being (Subset of (the carrier' of C)) st (((CP = ConceptStr (# E,I #) & ConceptStr (# E,I #) is non  empty) & ( ( ObjectDerivation C ) . E ) = I) & ( ( AttributeDerivation C ) . I ) = E)));
hence thesis by CKB48:def 1;
end;
hence thesis by A1;
end;
