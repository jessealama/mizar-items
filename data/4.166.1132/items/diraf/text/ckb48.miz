environ
vocabularies XBOOLE_0,SUBSET_1,RELAT_1,ZFMISC_1,ANALOAF,STRUCT_0,PARSP_1,PARSP_2,DIRAF;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,RELSET_1,STRUCT_0,ANALOAF,CKB1,CKB2,CKB11,CKB23,CKB35,CKB36;
definitions ANALOAF,STRUCT_0,CKB1,CKB2,CKB11,CKB23,CKB35;
theorems ANALOAF,RELAT_1,ZFMISC_1,DOMAIN_1,STRUCT_0,CKB1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47;
schemes RELSET_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,ANALOAF,CKB3;
constructors DOMAIN_1,ANALOAF,CKB1,CKB2,CKB11,CKB23,CKB35;
requirements SUBSET,BOOLE;
begin
reserve S for OAffinSpace;
reserve a for (Element of S);
reserve b for (Element of S);
reserve c for (Element of S);
reserve d for (Element of S);
reserve AS for non  empty AffinStruct;
theorem
Th45: (AS = ( Lambda S ) implies (for a,b,c,d being (Element of S) holds (for a9,b9,c9,d9 being (Element of AS) holds ((((a = a9 & b = b9) & c = c9) & d = d9) implies (a9,b9 // c9,d9 iff a,b '||' c,d)))))
proof
assume A1: AS = ( Lambda S );
let a being (Element of S);
let b being (Element of S);
let c being (Element of S);
let d being (Element of S);
let a9 being (Element of AS);
let b9 being (Element of AS);
let c9 being (Element of AS);
let d9 being (Element of AS);
assume A2: (((a = a9 & b = b9) & c = c9) & d = d9);
thus (a9,b9 // c9,d9 implies a,b '||' c,d)
proof
assume A3: [ [ a9,b9 ],[ c9,d9 ] ] in (the CONGR of AS);
assume (not [ [ a,b ],[ c,d ] ] in (the CONGR of S));
hence [ [ a,b ],[ d,c ] ] in (the CONGR of S) by A1,A2,A3,CKB1:def 1;
end;

assume a,b '||' c,d;
then (a,b // c,d or a,b // d,c) by CKB23:def 1;
then ([ [ a,b ],[ c,d ] ] in (the CONGR of S) or [ [ a,b ],[ d,c ] ] in (the CONGR of S)) by ANALOAF:def 2;
hence [ [ a9,b9 ],[ c9,d9 ] ] in (the CONGR of AS) by A1,A2,CKB1:def 1;
end;
