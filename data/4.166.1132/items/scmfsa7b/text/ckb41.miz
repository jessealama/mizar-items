environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_1,AMI_1,SCMFSA_2,RELAT_1,SCMFSA_7,ARYTM_3,ARYTM_1,TARSKI,FUNCT_1,XXREAL_0,PARTFUN1,CAT_1,NAT_1,CARD_1,FUNCOP_1,SCMFSA6A,ORDINAL4,AMI_3,FUNCT_4,INT_1,GRAPHSP,FSM_1,CIRCUIT2,SCMNORM,SCMFSA6B,GLIB_000,SF_MASTR,MSUALG_1,XBOOLE_0,PRE_POLY,UNIALG_2,AMISTD_2,SCMFSA7B,ORDINAL1,AFINSQ_1,PBOOLE,SCMFSA6C,STRUCT_0,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,COMPLEX1,NAT_1,INT_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,FINSEQ_2,FUNCT_4,DOMAIN_1,VALUED_1,AFINSQ_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,FUNCT_7,SCMFSA_2,AMISTD_1,AMISTD_2,FUNCOP_1,XXREAL_0,ENUMSET1,NAT_D,PBOOLE,AFINSQ_2,SCMFSA_7,SCMFSA6A,SF_MASTR,SCMFSA6B,INT_2,PRE_POLY,CKB14,CKB15,CKB16,CKB17,CKB18,CKB32,CKB33;
definitions TARSKI,AFINSQ_1,RELAT_1,FINSEQ_1,FINSEQ_2,SCMFSA_2,FUNCOP_1,SCMFSA6A,SCMFSA6B,COMPOS_1,AMISTD_1,SCMFSA_7,EXTPRO_1,MEMSTR_0,AFINSQ_2,CKB14,CKB15,CKB16,CKB17,CKB18,CKB32,CKB33;
theorems SCMFSA_7,NAT_1,GRFUNC_1,FUNCT_1,FUNCT_4,FUNCT_7,ENUMSET1,SCMFSA_2,FUNCOP_1,INT_1,RELAT_1,TARSKI,SCMFSA6A,SF_MASTR,SCMFSA6B,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,AFINSQ_1,COMPOS_1,AFINSQ_2,CARD_1,EXTPRO_1,PARTFUN1,AMISTD_1,MEMSTR_0,CKB1,CKB2,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37;
schemes NAT_1,AFINSQ_1;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,FUNCT_7,SCMFSA_2,SF_MASTR,SCMFSA6B,ORDINAL1,FINSET_1,FINSEQ_2,CARD_1,AFINSQ_1,COMPOS_1,AFINSQ_2,ORDINAL5,EXTPRO_1,PBOOLE,FUNCT_4,STRUCT_0,SCMFSA6A,SCMFSA_4,MEMSTR_0,VALUED_1,SCMFSA10,AMISTD_2,CKB3,CKB5,CKB11,CKB12,CKB38,CKB39,CKB40;
constructors ENUMSET1,XXREAL_0,REAL_1,SCMFSA_7,SCMFSA6A,SF_MASTR,SCMFSA6B,NAT_D,RELSET_1,PRE_POLY,DOMAIN_1,AFINSQ_2,PARTFUN3,PBOOLE,AMISTD_1,AMISTD_2,AMI_3,MEMSTR_0,CKB14,CKB15,CKB16,CKB17,CKB18,CKB32,CKB33;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th29: (for a being Int-Location holds (for k being Integer holds ( rng ( aSeq (a,k) ) ) c= { ( a := ( intloc ( 0 ) ) ),( AddTo (a,( intloc ( 0 ) )) ),( SubFrom (a,( intloc ( 0 ) )) ) }))
proof
let a being Int-Location;
let k being Integer;
now
let x being set;
assume A1: x in ( rng ( aSeq (a,k) ) );
per cases ;
suppose A2: (k > ( 0 ) & k = ( ( 0 ) + 1 ));

then (ex k1 being (Element of ( NAT )) st (( k1 + 1 ) = k & ( aSeq (a,k) ) = ( <% ( a := ( intloc ( 0 ) ) ) %> ^ ( k1 --> ( AddTo (a,( intloc ( 0 ) )) ) ) ))) by SCMFSA_7:def 2;
then ( aSeq (a,k) ) = ( <% ( a := ( intloc ( 0 ) ) ) %> ^ ( {} ) ) by A2
.= <% ( a := ( intloc ( 0 ) ) ) %> by AFINSQ_1:29;
then ( rng ( aSeq (a,k) ) ) = { ( a := ( intloc ( 0 ) ) ) } by AFINSQ_1:33;
then x = ( a := ( intloc ( 0 ) ) ) by A1,TARSKI:def 1;
hence x in { ( a := ( intloc ( 0 ) ) ),( AddTo (a,( intloc ( 0 ) )) ),( SubFrom (a,( intloc ( 0 ) )) ) } by ENUMSET1:def 1;
end;
suppose A3: (k > ( 0 ) & k <> 1);

then consider k1 being (Element of ( NAT )) such that A4: ( k1 + 1 ) = k and A5: ( aSeq (a,k) ) = ( <% ( a := ( intloc ( 0 ) ) ) %> ^ ( k1 --> ( AddTo (a,( intloc ( 0 ) )) ) ) ) by SCMFSA_7:def 2;
A6: k1 <> ( 0 ) by A3,A4;
( rng ( aSeq (a,k) ) ) = ( ( rng <% ( a := ( intloc ( 0 ) ) ) %> ) \/ ( rng ( k1 --> ( AddTo (a,( intloc ( 0 ) )) ) ) ) ) by A5,AFINSQ_1:26
.= ( { ( a := ( intloc ( 0 ) ) ) } \/ ( rng ( k1 --> ( AddTo (a,( intloc ( 0 ) )) ) ) ) ) by AFINSQ_1:33
.= ( { ( a := ( intloc ( 0 ) ) ) } \/ { ( AddTo (a,( intloc ( 0 ) )) ) } ) by A6,FUNCOP_1:8;
then (x in { ( a := ( intloc ( 0 ) ) ) } or x in { ( AddTo (a,( intloc ( 0 ) )) ) }) by A1,XBOOLE_0:def 3;
then (x = ( a := ( intloc ( 0 ) ) ) or x = ( AddTo (a,( intloc ( 0 ) )) )) by TARSKI:def 1;
hence x in { ( a := ( intloc ( 0 ) ) ),( AddTo (a,( intloc ( 0 ) )) ),( SubFrom (a,( intloc ( 0 ) )) ) } by ENUMSET1:def 1;
end;
suppose A7: (not k > ( 0 ));

then consider k1 being (Element of ( NAT )) such that A8: ( k1 + k ) = 1 and A9: ( aSeq (a,k) ) = ( <% ( a := ( intloc ( 0 ) ) ) %> ^ ( k1 --> ( SubFrom (a,( intloc ( 0 ) )) ) ) ) by SCMFSA_7:def 2;
A10: k1 <> ( 0 ) by A7,A8;
( rng ( aSeq (a,k) ) ) = ( ( rng <% ( a := ( intloc ( 0 ) ) ) %> ) \/ ( rng ( k1 --> ( SubFrom (a,( intloc ( 0 ) )) ) ) ) ) by A9,AFINSQ_1:26
.= ( { ( a := ( intloc ( 0 ) ) ) } \/ ( rng ( k1 --> ( SubFrom (a,( intloc ( 0 ) )) ) ) ) ) by AFINSQ_1:33
.= ( { ( a := ( intloc ( 0 ) ) ) } \/ { ( SubFrom (a,( intloc ( 0 ) )) ) } ) by A10,FUNCOP_1:8;
then (x in { ( a := ( intloc ( 0 ) ) ) } or x in { ( SubFrom (a,( intloc ( 0 ) )) ) }) by A1,XBOOLE_0:def 3;
then (x = ( a := ( intloc ( 0 ) ) ) or x = ( SubFrom (a,( intloc ( 0 ) )) )) by TARSKI:def 1;
hence x in { ( a := ( intloc ( 0 ) ) ),( AddTo (a,( intloc ( 0 ) )) ),( SubFrom (a,( intloc ( 0 ) )) ) } by ENUMSET1:def 1;
end;
end;
hence thesis by TARSKI:def 3;
end;
