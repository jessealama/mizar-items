environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_1,AMI_1,SCMFSA_2,RELAT_1,SCMFSA_7,ARYTM_3,ARYTM_1,TARSKI,FUNCT_1,XXREAL_0,PARTFUN1,CAT_1,NAT_1,CARD_1,FUNCOP_1,SCMFSA6A,ORDINAL4,AMI_3,FUNCT_4,INT_1,GRAPHSP,FSM_1,CIRCUIT2,SCMNORM,SCMFSA6B,GLIB_000,SF_MASTR,MSUALG_1,XBOOLE_0,PRE_POLY,UNIALG_2,AMISTD_2,SCMFSA7B,ORDINAL1,AFINSQ_1,PBOOLE,SCMFSA6C,STRUCT_0,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,COMPLEX1,NAT_1,INT_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,FINSEQ_2,FUNCT_4,DOMAIN_1,VALUED_1,AFINSQ_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,FUNCT_7,SCMFSA_2,AMISTD_1,AMISTD_2,FUNCOP_1,XXREAL_0,ENUMSET1,NAT_D,PBOOLE,AFINSQ_2,SCMFSA_7,SCMFSA6A,SF_MASTR,SCMFSA6B,INT_2,PRE_POLY;
definitions TARSKI,AFINSQ_1,RELAT_1,FINSEQ_1,FINSEQ_2,SCMFSA_2,FUNCOP_1,SCMFSA6A,SCMFSA6B,COMPOS_1,AMISTD_1,SCMFSA_7,EXTPRO_1,MEMSTR_0,AFINSQ_2;
theorems SCMFSA_7,NAT_1,GRFUNC_1,FUNCT_1,FUNCT_4,FUNCT_7,ENUMSET1,SCMFSA_2,FUNCOP_1,INT_1,RELAT_1,TARSKI,SCMFSA6A,SF_MASTR,SCMFSA6B,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,AFINSQ_1,COMPOS_1,AFINSQ_2,CARD_1,EXTPRO_1,PARTFUN1,AMISTD_1,MEMSTR_0,CKB1,CKB2,CKB4,CKB6,CKB7,CKB8,CKB9;
schemes NAT_1,AFINSQ_1;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,FUNCT_7,SCMFSA_2,SF_MASTR,SCMFSA6B,ORDINAL1,FINSET_1,FINSEQ_2,CARD_1,AFINSQ_1,COMPOS_1,AFINSQ_2,ORDINAL5,EXTPRO_1,PBOOLE,FUNCT_4,STRUCT_0,SCMFSA6A,SCMFSA_4,MEMSTR_0,VALUED_1,SCMFSA10,AMISTD_2,CKB3,CKB5;
constructors ENUMSET1,XXREAL_0,REAL_1,SCMFSA_7,SCMFSA6A,SF_MASTR,SCMFSA6B,NAT_D,RELSET_1,PRE_POLY,DOMAIN_1,AFINSQ_2,PARTFUN3,PBOOLE,AMISTD_1,AMISTD_2,AMI_3,MEMSTR_0;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve P for (Instruction-Sequence of ( SCM+FSA ));
theorem
Lm5: (for s being ( 0 ) -started (State of ( SCM+FSA )) holds (for P being (Instruction-Sequence of ( SCM+FSA )) holds (for f being FinSeq-Location holds (for p being (FinSequence of ( INT )) holds (( f := p ) c= P implies P halts_on s)))))
proof
set a2 = ( intloc 2 );
set a1 = ( intloc 1 );
let s being ( 0 ) -started (State of ( SCM+FSA ));
let P being (Instruction-Sequence of ( SCM+FSA ));
A1: ( dom P ) = ( NAT ) by PARTFUN1:def 2;
set D = (the Instructions of ( SCM+FSA ));
let f being FinSeq-Location;
let p being (FinSequence of ( INT ));
set q = ( ( ( ( aSeq (a1,( len p )) ) ^ <% ( f :=<0,...,0> a1 ) %> ) ^ ( aSeq (f,p) ) ) ^ <% ( halt ( SCM+FSA ) ) %> );
set q0 = ( ( aSeq (a1,( len p )) ) ^ <% ( f :=<0,...,0> a1 ) %> );
assume A2: ( f := p ) c= P;
set q = ( ( ( ( aSeq (a1,( len p )) ) ^ <% ( f :=<0,...,0> a1 ) %> ) ^ ( aSeq (f,p) ) ) ^ <% ( halt ( SCM+FSA ) ) %> );
A3:now
let i being (Element of ( NAT ));
let k being (Element of ( NAT ));
assume i < ( len q );
then A4: i in ( dom q ) by NAT_1:44;
thus ( P . i ) = ( q . i ) by A2,A4,GRFUNC_1:2;
end;
consider pp being (XFinSequence of ( D ^omega )) such that A5: (( len pp ) = ( len p ) & (for k being (Element of ( NAT )) holds (k < ( len pp ) implies (ex i being Integer st (i = ( p . ( k + 1 ) ) & ( pp . k ) = ( ( ( aSeq (a1,( k + 1 )) ) ^ ( aSeq (a2,i) ) ) ^ <% ( (f,a1) := a2 ) %> )))))) and A6: ( aSeq (f,p) ) = ( FlattenSeq pp ) by SCMFSA_7:def 3;
( len q ) = ( ( len ( q0 ^ ( FlattenSeq pp ) ) ) + 1 ) by A6,AFINSQ_1:75;
then A7: ( len ( q0 ^ ( FlattenSeq pp ) ) ) < ( len q ) by NAT_1:13;
defpred P[ XFinSequence ]
 means
($1 c= pp implies (ex pp0 being (XFinSequence of ( D ^omega )) st (pp0 = $1 & (for i being (Element of ( NAT )) holds (i <= ( len ( q0 ^ ( FlattenSeq pp0 ) ) ) implies ( IC ( Comput (P,s,i) ) ) = i)))));
A8: (for r being XFinSequence holds (for x being set holds (P[ r ] implies P[ ( r ^ <% x %> ) ])))
proof
let r being XFinSequence;
let x being set;
assume A9: P[ r ];
set r1 = ( len r );
( len <% x %> ) = 1 by AFINSQ_1:34;
then ( len ( r ^ <% x %> ) ) = ( r1 + 1 ) by AFINSQ_1:17;
then r1 < ( len ( r ^ <% x %> ) ) by XREAL_1:29;
then A10: r1 in ( dom ( r ^ <% x %> ) ) by NAT_1:44;
assume A11: ( r ^ <% x %> ) c= pp;
then A12: ( dom ( r ^ <% x %> ) ) c= ( dom pp ) by GRFUNC_1:2;
then r1 < ( len pp ) by A10,NAT_1:44;
then consider pr1 being Integer such that pr1 = ( p . ( r1 + 1 ) ) and A13: ( pp . r1 ) = ( ( ( aSeq (a1,( r1 + 1 )) ) ^ ( aSeq (a2,pr1) ) ) ^ <% ( (f,a1) := a2 ) %> ) by A5;
r c= ( r ^ <% x %> ) by AFINSQ_1:74;
then consider pp0 being (XFinSequence of ( D ^omega )) such that A14: pp0 = r and A15: (for i being (Element of ( NAT )) holds (i <= ( len ( q0 ^ ( FlattenSeq pp0 ) ) ) implies ( IC ( Comput (P,s,i) ) ) = i)) by A9,A11,XBOOLE_1:1;
set c2 = ( len ( ( q0 ^ ( FlattenSeq pp0 ) ) ^ ( aSeq (a1,( r1 + 1 )) ) ) );
set c1 = ( len ( q0 ^ ( FlattenSeq pp0 ) ) );
( IC ( Comput (P,s,c1) ) ) = c1 by A15;
then reconsider s1 = ( Comput (P,s,c1) ) as c1 -started (State of ( SCM+FSA )) by MEMSTR_0:def 9;
A16: x = ( ( r ^ <% x %> ) . r1 ) by AFINSQ_1:36
.= ( pp . r1 ) by A11,A10,GRFUNC_1:2;
then x in ( D ^omega ) by A10,A12,FUNCT_1:102;
then reconsider pp1 = ( pp0 ^ <% x %> ) as (XFinSequence of ( D ^omega ));
take pp1;
thus pp1 = ( r ^ <% x %> ) by A14;
reconsider x as (Element of ( D ^omega )) by A10,A12,A16,FUNCT_1:102;
A17: ( FlattenSeq pp1 ) = ( ( FlattenSeq pp0 ) ^ ( FlattenSeq <% x %> ) ) by AFINSQ_2:75
.= ( ( FlattenSeq pp0 ) ^ x ) by AFINSQ_2:73;
set s2 = ( Comput (P,s,c2) );
A18: x = ( ( aSeq (a1,( r1 + 1 )) ) ^ ( ( aSeq (a2,pr1) ) ^ <% ( (f,a1) := a2 ) %> ) ) by A13,A16,AFINSQ_1:27;
then A19: ( ( len q0 ) + ( len ( FlattenSeq pp1 ) ) ) = ( ( len q0 ) + ( len ( ( ( FlattenSeq pp0 ) ^ ( aSeq (a1,( r1 + 1 )) ) ) ^ ( ( aSeq (a2,pr1) ) ^ <% ( (f,a1) := a2 ) %> ) ) ) ) by A17,AFINSQ_1:27
.= ( len ( q0 ^ ( ( ( FlattenSeq pp0 ) ^ ( aSeq (a1,( r1 + 1 )) ) ) ^ ( ( aSeq (a2,pr1) ) ^ <% ( (f,a1) := a2 ) %> ) ) ) ) by AFINSQ_1:17
.= ( len ( ( ( q0 ^ ( FlattenSeq pp0 ) ) ^ ( aSeq (a1,( r1 + 1 )) ) ) ^ ( ( aSeq (a2,pr1) ) ^ <% ( (f,a1) := a2 ) %> ) ) ) by CKB7:1
.= ( c2 + ( len ( ( aSeq (a2,pr1) ) ^ <% ( (f,a1) := a2 ) %> ) ) ) by AFINSQ_1:17
.= ( c2 + ( ( len ( aSeq (a2,pr1) ) ) + ( len <% ( (f,a1) := a2 ) %> ) ) ) by AFINSQ_1:17
.= ( c2 + ( ( len ( aSeq (a2,pr1) ) ) + 1 ) ) by AFINSQ_1:34
.= ( ( c2 + ( len ( aSeq (a2,pr1) ) ) ) + 1 );
then A20: ( len ( q0 ^ ( FlattenSeq pp1 ) ) ) = ( ( c2 + ( len ( aSeq (a2,pr1) ) ) ) + 1 ) by AFINSQ_1:17;
then A21: ( len ( q0 ^ ( FlattenSeq pp1 ) ) ) > ( c2 + ( len ( aSeq (a2,pr1) ) ) ) by NAT_1:13;
A22: ( FlattenSeq pp1 ) c= ( FlattenSeq pp ) by A11,A14,AFINSQ_2:82;
A23:now
let p being XFinSequence;
assume p c= x;
then ( ( FlattenSeq pp0 ) ^ p ) c= ( ( FlattenSeq pp0 ) ^ x ) by AFINSQ_2:81;
then ( ( FlattenSeq pp0 ) ^ p ) c= ( FlattenSeq pp ) by A22,A17,XBOOLE_1:1;
then ( q0 ^ ( ( FlattenSeq pp0 ) ^ p ) ) c= ( q0 ^ ( FlattenSeq pp ) ) by AFINSQ_2:81;
then A24: ( ( q0 ^ ( FlattenSeq pp0 ) ) ^ p ) c= ( q0 ^ ( FlattenSeq pp ) ) by AFINSQ_1:27;
( q0 ^ ( FlattenSeq pp ) ) c= q by A6,AFINSQ_1:74;
hence ( ( q0 ^ ( FlattenSeq pp0 ) ) ^ p ) c= q by A24,XBOOLE_1:1;
end;
A25: (for c being (Element of ( NAT )) holds (c < ( len ( aSeq (a1,( r1 + 1 )) ) ) implies ( ( aSeq (a1,( r1 + 1 )) ) . c ) = ( P . ( c1 + c ) )))
proof
let c being (Element of ( NAT ));
assume c < ( len ( aSeq (a1,( r1 + 1 )) ) );
then A26: c in ( dom ( aSeq (a1,( r1 + 1 )) ) ) by AFINSQ_1:66;
then A27: ( c1 + c ) in ( dom ( ( q0 ^ ( FlattenSeq pp0 ) ) ^ ( aSeq (a1,( r1 + 1 )) ) ) ) by AFINSQ_1:23;
A28: ( ( q0 ^ ( FlattenSeq pp0 ) ) ^ ( aSeq (a1,( r1 + 1 )) ) ) c= q by A18,A23,AFINSQ_1:74;
then A29: ( dom ( ( q0 ^ ( FlattenSeq pp0 ) ) ^ ( aSeq (a1,( r1 + 1 )) ) ) ) c= ( dom q ) by GRFUNC_1:2;
thus ( ( aSeq (a1,( r1 + 1 )) ) . c ) = ( ( ( q0 ^ ( FlattenSeq pp0 ) ) ^ ( aSeq (a1,( r1 + 1 )) ) ) . ( c1 + c ) ) by A26,AFINSQ_1:def 3
.= ( q . ( c1 + c ) ) by A28,A27,GRFUNC_1:2
.= ( P . ( c1 + c ) ) by A2,A29,A27,GRFUNC_1:2;
end;
set c3 = ( len ( ( ( q0 ^ ( FlattenSeq pp0 ) ) ^ ( aSeq (a1,( r1 + 1 )) ) ) ^ ( aSeq (a2,pr1) ) ) );
A30: c2 = ( c1 + ( len ( aSeq (a1,( r1 + 1 )) ) ) ) by AFINSQ_1:17;
A31: ( q0 ^ ( FlattenSeq pp1 ) ) = ( ( q0 ^ ( FlattenSeq pp0 ) ) ^ x ) by A17,AFINSQ_1:27;
then ( len ( q0 ^ ( FlattenSeq pp1 ) ) ) <= ( len q ) by A23,NAT_1:43;
then A32: ( c2 + ( len ( aSeq (a2,pr1) ) ) ) < ( len q ) by A20,NAT_1:13;
A33: c3 = ( c2 + ( len ( aSeq (a2,pr1) ) ) ) by AFINSQ_1:17;
A34: ( Comput (P,s,c2) ) = ( Comput (P,s1,( len ( aSeq (a1,( r1 + 1 )) ) )) ) by A30,EXTPRO_1:4;
( IC ( Comput (P,s,c2) ) ) = c2 by A30,A34,A25,CKB8:1;
then reconsider s2 as c2 -started (State of ( SCM+FSA )) by MEMSTR_0:def 9;
A35: (for c being (Element of ( NAT )) holds (c < ( len ( aSeq (a2,pr1) ) ) implies ( ( aSeq (a2,pr1) ) . c ) = ( P . ( c2 + c ) )))
proof
let c being (Element of ( NAT ));
assume c < ( len ( aSeq (a2,pr1) ) );
then A36: c in ( dom ( aSeq (a2,pr1) ) ) by AFINSQ_1:66;
then A37: ( c2 + c ) in ( dom ( ( ( q0 ^ ( FlattenSeq pp0 ) ) ^ ( aSeq (a1,( r1 + 1 )) ) ) ^ ( aSeq (a2,pr1) ) ) ) by AFINSQ_1:23;
( ( q0 ^ ( FlattenSeq pp0 ) ) ^ ( ( aSeq (a1,( r1 + 1 )) ) ^ ( aSeq (a2,pr1) ) ) ) c= q by A13,A16,A23,AFINSQ_1:74;
then A38: ( ( ( q0 ^ ( FlattenSeq pp0 ) ) ^ ( aSeq (a1,( r1 + 1 )) ) ) ^ ( aSeq (a2,pr1) ) ) c= q by AFINSQ_1:27;
then A39: ( dom ( ( ( q0 ^ ( FlattenSeq pp0 ) ) ^ ( aSeq (a1,( r1 + 1 )) ) ) ^ ( aSeq (a2,pr1) ) ) ) c= ( dom q ) by GRFUNC_1:2;
thus ( ( aSeq (a2,pr1) ) . c ) = ( ( ( ( q0 ^ ( FlattenSeq pp0 ) ) ^ ( aSeq (a1,( r1 + 1 )) ) ) ^ ( aSeq (a2,pr1) ) ) . ( c2 + c ) ) by A36,AFINSQ_1:def 3
.= ( q . ( c2 + c ) ) by A37,A38,GRFUNC_1:2
.= ( P . ( c2 + c ) ) by A2,A39,A37,GRFUNC_1:2;
end;
A40:now
let i being (Element of ( NAT ));
assume i <= ( len ( aSeq (a2,pr1) ) );
hence ( c2 + i ) = ( IC ( Comput (P,s2,i) ) ) by A35,CKB8:1
.= ( IC ( Comput (P,s,( c2 + i )) ) ) by EXTPRO_1:4;
end;
A41:now
let i being (Element of ( NAT ));
assume i <= ( len ( aSeq (a1,( r1 + 1 )) ) );
hence ( c1 + i ) = ( IC ( Comput (P,s1,i) ) ) by A25,CKB8:1
.= ( IC ( Comput (P,s,( c1 + i )) ) ) by EXTPRO_1:4;
end;
A42: (for i being (Element of ( NAT )) holds (i < ( len ( q0 ^ ( FlattenSeq pp1 ) ) ) implies ( IC ( Comput (P,s,i) ) ) = i))
proof
let i being (Element of ( NAT ));
assume A43: i < ( len ( q0 ^ ( FlattenSeq pp1 ) ) );
A44:now
A45: i < ( ( len q0 ) + ( len ( FlattenSeq pp1 ) ) ) by A43,AFINSQ_1:17;
assume A46: (not i <= c1);
assume (not (( c1 + 1 ) <= i & i <= c2));
hence (( c2 + 1 ) <= i & i <= ( c2 + ( len ( aSeq (a2,pr1) ) ) )) by A19,A46,A45,NAT_1:13;
end;
per cases  by A44;
suppose i <= ( len ( q0 ^ ( FlattenSeq pp0 ) ) );

hence thesis by A15;
end;
suppose A47: (( c1 + 1 ) <= i & i <= c2);

then ( ( c1 + 1 ) - c1 ) <= ( i - c1 ) by XREAL_1:9;
then reconsider ii = ( i - c1 ) as (Element of ( NAT )) by INT_1:3;
( i - c1 ) <= ( c2 - c1 ) by A47,XREAL_1:9;
hence i = ( IC ( Comput (P,s,( c1 + ii )) ) ) by A30,A41
.= ( IC ( Comput (P,s,i) ) );
thus thesis;
end;
suppose A48: (( c2 + 1 ) <= i & i <= ( c2 + ( len ( aSeq (a2,pr1) ) ) ));

then ( ( c2 + 1 ) - c2 ) <= ( i - c2 ) by XREAL_1:9;
then reconsider ii = ( i - c2 ) as (Element of ( NAT )) by INT_1:3;
( i - c2 ) <= ( ( c2 + ( len ( aSeq (a2,pr1) ) ) ) - c2 ) by A48,XREAL_1:9;
hence i = ( IC ( Comput (P,s,( c2 + ii )) ) ) by A40
.= ( IC ( Comput (P,s,i) ) );
end;
end;
( ( q0 ^ ( FlattenSeq pp0 ) ) ^ x ) c= q by A23;
then consider rq being (XFinSequence of D) such that A49: ( ( ( q0 ^ ( FlattenSeq pp0 ) ) ^ x ) ^ rq ) = q by AFINSQ_2:80;
( len ( q0 ^ ( FlattenSeq pp1 ) ) ) = ( ( c2 + ( len ( aSeq (a2,pr1) ) ) ) + 1 ) by A19,AFINSQ_1:17;
then A50: ( len ( q0 ^ ( FlattenSeq pp1 ) ) ) > ( c2 + ( len ( aSeq (a2,pr1) ) ) ) by NAT_1:13;
then A51: c3 in ( dom ( ( q0 ^ ( FlattenSeq pp0 ) ) ^ x ) ) by A31,A33,AFINSQ_1:66;
( dom <% ( (f,a1) := a2 ) %> ) = 1 by AFINSQ_1:33;
then A52: ( 0 ) in ( dom <% ( (f,a1) := a2 ) %> ) by CARD_1:49,TARSKI:def 1;
( len <% ( (f,a1) := a2 ) %> ) = 1 by AFINSQ_1:34;
then ( len ( ( ( aSeq (a1,( r1 + 1 )) ) ^ ( aSeq (a2,pr1) ) ) ^ <% ( (f,a1) := a2 ) %> ) ) = ( ( len ( ( aSeq (a1,( r1 + 1 )) ) ^ ( aSeq (a2,pr1) ) ) ) + 1 ) by AFINSQ_1:17;
then ( len ( ( aSeq (a1,( r1 + 1 )) ) ^ ( aSeq (a2,pr1) ) ) ) < ( len ( ( ( aSeq (a1,( r1 + 1 )) ) ^ ( aSeq (a2,pr1) ) ) ^ <% ( (f,a1) := a2 ) %> ) ) by XREAL_1:29;
then A53: ( len ( ( aSeq (a1,( r1 + 1 )) ) ^ ( aSeq (a2,pr1) ) ) ) in ( dom ( ( ( aSeq (a1,( r1 + 1 )) ) ^ ( aSeq (a2,pr1) ) ) ^ <% ( (f,a1) := a2 ) %> ) ) by AFINSQ_1:66;
A54: c3 = ( ( c1 + ( len ( aSeq (a1,( r1 + 1 )) ) ) ) + ( len ( aSeq (a2,pr1) ) ) ) by A30,AFINSQ_1:17;
A55: ( P /. ( IC ( Comput (P,s,c3) ) ) ) = ( P . ( IC ( Comput (P,s,c3) ) ) ) by A1,PARTFUN1:def 6;
( CurInstr (P,( Comput (P,s,c3) )) ) = ( P . c3 ) by A33,A42,A55,A50
.= ( q . c3 ) by A3,A33,A32
.= ( ( ( q0 ^ ( FlattenSeq pp0 ) ) ^ x ) . ( c1 + ( ( len ( aSeq (a1,( r1 + 1 )) ) ) + ( len ( aSeq (a2,pr1) ) ) ) ) ) by A54,A51,A49,AFINSQ_1:def 3
.= ( ( ( q0 ^ ( FlattenSeq pp0 ) ) ^ x ) . ( c1 + ( len ( ( aSeq (a1,( r1 + 1 )) ) ^ ( aSeq (a2,pr1) ) ) ) ) ) by AFINSQ_1:17;
then A56: ( CurInstr (P,( Comput (P,s,c3) )) ) = ( ( ( ( aSeq (a1,( r1 + 1 )) ) ^ ( aSeq (a2,pr1) ) ) ^ <% ( (f,a1) := a2 ) %> ) . ( ( len ( ( aSeq (a1,( r1 + 1 )) ) ^ ( aSeq (a2,pr1) ) ) ) + ( 0 ) ) ) by A53,A13,A16,AFINSQ_1:def 3
.= ( <% ( (f,a1) := a2 ) %> . ( 0 ) ) by A52,AFINSQ_1:def 3
.= ( (f,a1) := a2 ) by AFINSQ_1:34;
( Comput (P,s,( c3 + 1 )) ) = ( Following (P,( Comput (P,s,c3) )) ) by EXTPRO_1:3
.= ( Exec (( (f,a1) := a2 ),( Comput (P,s,c3) )) ) by A56;
then A57: ( IC ( Comput (P,s,( len ( q0 ^ ( FlattenSeq pp1 ) ) )) ) ) = ( ( Exec (( (f,a1) := a2 ),( Comput (P,s,c3) )) ) . ( IC ( SCM+FSA ) ) ) by A20,AFINSQ_1:17
.= ( succ ( IC ( Comput (P,s,c3) ) ) ) by SCMFSA_2:73
.= ( succ c3 ) by A33,A42,A21;
thus (for i being (Element of ( NAT )) holds (i <= ( len ( q0 ^ ( FlattenSeq pp1 ) ) ) implies ( IC ( Comput (P,s,i) ) ) = i))
proof
let i being (Element of ( NAT ));
assume A58: i <= ( len ( q0 ^ ( FlattenSeq pp1 ) ) );
per cases  by A58,XXREAL_0:1;
suppose i < ( len ( q0 ^ ( FlattenSeq pp1 ) ) );

hence thesis by A42;
end;
suppose i = ( len ( q0 ^ ( FlattenSeq pp1 ) ) );

hence thesis by A33,A20,A57,NAT_1:38;
end;
end;

end;
set k = ( len ( aSeq (a1,( len p )) ) );
A59: ( len q0 ) = ( k + 1 ) by AFINSQ_1:75;
q = ( ( ( aSeq (a1,( len p )) ) ^ <% ( f :=<0,...,0> a1 ) %> ) ^ ( ( aSeq (f,p) ) ^ <% ( halt ( SCM+FSA ) ) %> ) ) by AFINSQ_1:27
.= ( ( aSeq (a1,( len p )) ) ^ ( <% ( f :=<0,...,0> a1 ) %> ^ ( ( aSeq (f,p) ) ^ <% ( halt ( SCM+FSA ) ) %> ) ) ) by AFINSQ_1:27;
then A60: ( aSeq (a1,( len p )) ) c= ( f := p ) by AFINSQ_1:74;
A61: P[ ( {} ) ]
proof
assume ( {} ) c= pp;
take ( <%> ( D ^omega ) );
thus ( <%> ( D ^omega ) ) = ( {} );
A62: q = ( ( ( aSeq (a1,( len p )) ) ^ <% ( f :=<0,...,0> a1 ) %> ) ^ ( ( aSeq (f,p) ) ^ <% ( halt ( SCM+FSA ) ) %> ) ) by AFINSQ_1:27;
then ( len q ) = ( ( len q0 ) + ( len ( ( aSeq (f,p) ) ^ <% ( halt ( SCM+FSA ) ) %> ) ) ) by AFINSQ_1:17;
then ( len q0 ) <= ( len q ) by NAT_1:11;
then A63: k < ( len q ) by A59,NAT_1:13;
A64:now
let i being (Element of ( NAT ));
assume i < ( len q0 );
then i <= ( len ( aSeq (a1,( len p )) ) ) by A59,NAT_1:13;
hence ( IC ( Comput (P,s,i) ) ) = i by A2,A60,CKB9:1,XBOOLE_1:1;
end;
A65: k < ( len q0 ) by A59,NAT_1:13;
then A66: k in ( dom q0 ) by AFINSQ_1:66;
A67: ( IC ( Comput (P,s,k) ) ) = k by A64,A65;
then A68: ( CurInstr (P,( Comput (P,s,k) )) ) = ( P . k ) by A1,PARTFUN1:def 6
.= ( q . k ) by A3,A63
.= ( q0 . k ) by A62,A66,AFINSQ_1:def 3
.= ( f :=<0,...,0> a1 ) by AFINSQ_1:36;
A69: ( Comput (P,s,( len q0 )) ) = ( Following (P,( Comput (P,s,k) )) ) by A59,EXTPRO_1:3
.= ( Exec (( f :=<0,...,0> a1 ),( Comput (P,s,k) )) ) by A68;
A70: ( IC ( Comput (P,s,( len q0 )) ) ) = ( succ ( IC ( Comput (P,s,k) ) ) ) by A69,SCMFSA_2:75
.= ( len q0 ) by A59,A67,NAT_1:38;
A71:now
let i being (Element of ( NAT ));
assume i <= ( len q0 );
then (i < ( len q0 ) or i = ( len q0 )) by XXREAL_0:1;
hence ( IC ( Comput (P,s,i) ) ) = i by A64,A70;
end;
( q0 ^ ( FlattenSeq ( <%> ( D ^omega ) ) ) ) = ( q0 ^ ( <%> D ) ) by AFINSQ_2:74
.= q0 by AFINSQ_1:29;
hence thesis by A71;
end;
(for r being XFinSequence holds P[ r ]) from AFINSQ_1:sch 3(A61,A8);
then (ex pp0 being (XFinSequence of ( D ^omega )) st (pp0 = pp & (for i being (Element of ( NAT )) holds (i <= ( len ( q0 ^ ( FlattenSeq pp0 ) ) ) implies ( IC ( Comput (P,s,i) ) ) = i))));
then ( IC ( Comput (P,s,( len ( q0 ^ ( FlattenSeq pp ) ) )) ) ) = ( len ( q0 ^ ( FlattenSeq pp ) ) );
then ( CurInstr (P,( Comput (P,s,( len ( q0 ^ ( FlattenSeq pp ) ) )) )) ) = ( P . ( len ( q0 ^ ( FlattenSeq pp ) ) ) ) by A1,PARTFUN1:def 6
.= ( q . ( len ( q0 ^ ( FlattenSeq pp ) ) ) ) by A3,A7
.= ( halt ( SCM+FSA ) ) by A6,AFINSQ_1:36;
hence thesis by EXTPRO_1:29;
end;
