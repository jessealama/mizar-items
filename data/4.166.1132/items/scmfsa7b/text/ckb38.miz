environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_1,AMI_1,SCMFSA_2,RELAT_1,SCMFSA_7,ARYTM_3,ARYTM_1,TARSKI,FUNCT_1,XXREAL_0,PARTFUN1,CAT_1,NAT_1,CARD_1,FUNCOP_1,SCMFSA6A,ORDINAL4,AMI_3,FUNCT_4,INT_1,GRAPHSP,FSM_1,CIRCUIT2,SCMNORM,SCMFSA6B,GLIB_000,SF_MASTR,MSUALG_1,XBOOLE_0,PRE_POLY,UNIALG_2,AMISTD_2,SCMFSA7B,ORDINAL1,AFINSQ_1,PBOOLE,SCMFSA6C,STRUCT_0,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,COMPLEX1,NAT_1,INT_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,FINSEQ_2,FUNCT_4,DOMAIN_1,VALUED_1,AFINSQ_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,FUNCT_7,SCMFSA_2,AMISTD_1,AMISTD_2,FUNCOP_1,XXREAL_0,ENUMSET1,NAT_D,PBOOLE,AFINSQ_2,SCMFSA_7,SCMFSA6A,SF_MASTR,SCMFSA6B,INT_2,PRE_POLY,CKB14,CKB15,CKB16,CKB17,CKB18,CKB32,CKB33;
definitions TARSKI,AFINSQ_1,RELAT_1,FINSEQ_1,FINSEQ_2,SCMFSA_2,FUNCOP_1,SCMFSA6A,SCMFSA6B,COMPOS_1,AMISTD_1,SCMFSA_7,EXTPRO_1,MEMSTR_0,AFINSQ_2,CKB14,CKB15,CKB16,CKB17,CKB18,CKB32,CKB33;
theorems SCMFSA_7,NAT_1,GRFUNC_1,FUNCT_1,FUNCT_4,FUNCT_7,ENUMSET1,SCMFSA_2,FUNCOP_1,INT_1,RELAT_1,TARSKI,SCMFSA6A,SF_MASTR,SCMFSA6B,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,AFINSQ_1,COMPOS_1,AFINSQ_2,CARD_1,EXTPRO_1,PARTFUN1,AMISTD_1,MEMSTR_0,CKB1,CKB2,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37;
schemes NAT_1,AFINSQ_1;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,FUNCT_7,SCMFSA_2,SF_MASTR,SCMFSA6B,ORDINAL1,FINSET_1,FINSEQ_2,CARD_1,AFINSQ_1,COMPOS_1,AFINSQ_2,ORDINAL5,EXTPRO_1,PBOOLE,FUNCT_4,STRUCT_0,SCMFSA6A,SCMFSA_4,MEMSTR_0,VALUED_1,SCMFSA10,AMISTD_2,CKB3,CKB5,CKB11,CKB12;
constructors ENUMSET1,XXREAL_0,REAL_1,SCMFSA_7,SCMFSA6A,SF_MASTR,SCMFSA6B,NAT_D,RELSET_1,PRE_POLY,DOMAIN_1,AFINSQ_2,PARTFUN3,PBOOLE,AMISTD_1,AMISTD_2,AMI_3,MEMSTR_0,CKB14,CKB15,CKB16,CKB17,CKB18,CKB32,CKB33;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve P for (Instruction-Sequence of ( SCM+FSA ));
registration
cluster ( Stop ( SCM+FSA ) ) ->  parahalting  good;
coherence
proof
thus ( Stop ( SCM+FSA ) ) is  parahalting
proof
A1: ( 0 ) in ( dom ( Stop ( SCM+FSA ) ) ) by AFINSQ_1:65;
B2: ( IC ( SCM+FSA ) ) in ( dom ( Start-At (( 0 ),( SCM+FSA )) ) ) by MEMSTR_0:15;
let s being ( 0 ) -started (State of ( SCM+FSA ));
A3: ( Start-At (( 0 ),( SCM+FSA )) ) c= s by MEMSTR_0:29;
let P being (Instruction-Sequence of ( SCM+FSA ));
assume that
A4: ( Stop ( SCM+FSA ) ) c= P;
A6: ( dom P ) = ( NAT ) by PARTFUN1:def 2;
( CurInstr (P,( Comput (P,s,( 0 )) )) ) = ( CurInstr (P,s) ) by EXTPRO_1:2
.= ( P . ( IC s ) ) by A6,PARTFUN1:def 6
.= ( P . ( IC ( Start-At (( 0 ),( SCM+FSA )) ) ) ) by A3,B2,GRFUNC_1:2
.= ( P . ( 0 ) ) by FUNCOP_1:72
.= ( ( Stop ( SCM+FSA ) ) . ( 0 ) ) by A1,A4,GRFUNC_1:2
.= ( halt ( SCM+FSA ) ) by AFINSQ_1:34;
hence thesis by EXTPRO_1:29;
end;

thus (not ( Stop ( SCM+FSA ) ) destroy ( intloc ( 0 ) ))
proof
now
let i being (Instruction of ( SCM+FSA ));
A7: ( rng ( Stop ( SCM+FSA ) ) ) = { ( halt ( SCM+FSA ) ) } by AFINSQ_1:33;
assume i in ( rng ( Stop ( SCM+FSA ) ) );
then i = ( halt ( SCM+FSA ) ) by A7,TARSKI:def 1;
hence (not i destroy ( intloc ( 0 ) )) by CKB19:1;
end;
hence thesis by CKB17:def 1;
end;

end;
end;
