environ
vocabularies RLVECT_1,XBOOLE_0,ANALOAF,SUBSET_1,ANALMETR,ANALORT,STRUCT_0,SYMSP_1,DIRORT;
notations STRUCT_0,RLVECT_1,ANALOAF,ANALMETR,ANALORT,CKB1,CKB4,CKB6,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
definitions CKB4,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
theorems ANALMETR,ANALORT,CKB2,CKB3,CKB4,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23;
registrations ANALOAF,ANALORT,CKB5;
constructors ANALMETR,ANALORT,CKB4,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
begin
reserve V for RealLinearSpace;
reserve x for (VECTOR of V);
reserve y for (VECTOR of V);
reserve AS for Oriented_Orthogonality_Space;
reserve u for (Element of AS);
reserve u1 for (Element of AS);
reserve u2 for (Element of AS);
reserve v for (Element of AS);
reserve v1 for (Element of AS);
reserve v2 for (Element of AS);
reserve w for (Element of AS);
reserve w1 for (Element of AS);
theorem
Th15: (( Gen x,y & AS = ( CESpace (V,x,y) )) implies AS is  Euclidean_like  left_transitive  right_transitive  bach_transitive)
proof
assume that
A1:  Gen x,y
and
A2: AS = ( CESpace (V,x,y) );
A3: ( CESpace (V,x,y) ) = AffinStruct (# (the carrier of V),( CORTE (V,x,y) ) #) by ANALORT:def 7;
A4:now
let u being (Element of AS);
let u1 being (Element of AS);
let u2 being (Element of AS);
let v being (Element of AS);
let v1 being (Element of AS);
let v2 being (Element of AS);
let w being (Element of AS);
let w1 being (Element of AS);
thus (((u,u1 '//' v,v1 & v,v1 '//' w,w1) & u2,v2 '//' w,w1) implies ((w = w1 or v = v1) or u,u1 '//' u2,v2))
proof
reconsider u9 = u,v9 = v,w9 = w,u19 = u1,v19 = v1,w19 = w1,u29 = u2,v29 = v2 as (Element of V) by A2,A3;
(((u9,u19,v9,v19 are_COrte_wrt x,y & v9,v19,w9,w19 are_COrte_wrt x,y) & u29,v29,w9,w19 are_COrte_wrt x,y) implies ((w9 = w19 or v9 = v19) or u9,u19,u29,v29 are_COrte_wrt x,y)) by A1,ANALORT:44;
hence thesis by A2,ANALORT:54;
end;

end;
A5:now
let u being (Element of AS);
let u1 being (Element of AS);
let v being (Element of AS);
let v1 being (Element of AS);
thus (u,u1 '//' v,v1 implies v,v1 '//' u1,u)
proof
reconsider u9 = u,v9 = v,u19 = u1,v19 = v1 as (Element of V) by A2,A3;
(u9,u19,v9,v19 are_COrte_wrt x,y implies v9,v19,u19,u9 are_COrte_wrt x,y) by A1,ANALORT:18;
hence thesis by A2,ANALORT:54;
end;

end;
A6:now
let u being (Element of AS);
let u1 being (Element of AS);
let u2 being (Element of AS);
let v being (Element of AS);
let v1 being (Element of AS);
let v2 being (Element of AS);
let w being (Element of AS);
let w1 being (Element of AS);
thus (((u,u1 '//' v,v1 & v,v1 '//' w,w1) & u,u1 '//' u2,v2) implies ((u = u1 or v = v1) or u2,v2 '//' w,w1))
proof
reconsider u9 = u,v9 = v,w9 = w,u19 = u1,v19 = v1,w19 = w1,u29 = u2,v29 = v2 as (Element of V) by A2,A3;
(((u9,u19,v9,v19 are_COrte_wrt x,y & v9,v19,w9,w19 are_COrte_wrt x,y) & u9,u19,u29,v29 are_COrte_wrt x,y) implies ((u9 = u19 or v9 = v19) or u29,v29,w9,w19 are_COrte_wrt x,y)) by A1,ANALORT:46;
hence thesis by A2,ANALORT:54;
end;

end;
now
let u being (Element of AS);
let u1 being (Element of AS);
let u2 being (Element of AS);
let v being (Element of AS);
let v1 being (Element of AS);
let v2 being (Element of AS);
let w being (Element of AS);
let w1 being (Element of AS);
thus (((u,u1 '//' v,v1 & w,w1 '//' v,v1) & w,w1 '//' u2,v2) implies ((w = w1 or v = v1) or u,u1 '//' u2,v2))
proof
reconsider u9 = u,v9 = v,w9 = w,u19 = u1,v19 = v1,w19 = w1,u29 = u2,v29 = v2 as (Element of V) by A2,A3;
(((u9,u19,v9,v19 are_COrte_wrt x,y & w9,w19,v9,v19 are_COrte_wrt x,y) & w9,w19,u29,v29 are_COrte_wrt x,y) implies ((w9 = w19 or v9 = v19) or u9,u19,u29,v29 are_COrte_wrt x,y)) by A1,ANALORT:42;
hence thesis by A2,ANALORT:54;
end;

end;
hence thesis by A4,A6,A5,CKB13:def 1,CKB14:def 1,CKB15:def 1,CKB16:def 1;
end;
