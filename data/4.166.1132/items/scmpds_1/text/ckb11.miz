environ
vocabularies NUMBERS,SUBSET_1,CARD_1,AMI_2,INT_1,XBOOLE_0,FINSEQ_1,TARSKI,RELAT_1,ARYTM_3,FUNCT_1,CARD_3,AMI_1,NAT_1,FUNCT_4,FUNCOP_1,COMPLEX1,MCART_1,PARTFUN1,ORDINAL1,XXREAL_0,ARYTM_1,FUNCT_2,ZFMISC_1,FUNCT_5,SCMPDS_1,GROUP_9,RECDEF_2;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,CARD_1,PARTFUN1,FUNCT_2,BINOP_1,MCART_1,NUMBERS,XCMPLX_0,CARD_3,INT_1,NAT_1,FINSEQ_1,FINSEQ_4,FUNCOP_1,FUNCT_4,XXREAL_0,CAT_2,AMI_2,INT_2,RECDEF_2,CKB4,CKB9,CKB10;
definitions TARSKI,FINSEQ_1,FUNCOP_1,AMI_2,CKB4,CKB9;
theorems AMI_2,CAT_2,CARD_3,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_3,FINSEQ_4,FUNCT_1,FUNCT_2,FUNCT_4,MCART_1,TARSKI,ZFMISC_1,INT_1,XBOOLE_0,XBOOLE_1,NAT_D,NUMBERS,ORDINAL1,RECDEF_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9;
schemes FUNCT_2,BINOP_1;
registrations XBOOLE_0,SETFAM_1,ORDINAL1,RELSET_1,FUNCOP_1,NUMBERS,XREAL_0,NAT_1,INT_1,FINSEQ_1,CARD_3,AMI_2,ORDINAL2,XXREAL_0,FUNCT_1,CARD_2,FUNCT_2,CKB6;
constructors XXREAL_0,NAT_1,NAT_D,FINSEQ_4,CAT_2,AMI_2,SETFAM_1,DOMAIN_1,RELSET_1,FUNCOP_1,RECDEF_2,CKB4,CKB9;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve I2 for (Element of ( Segm 14 ));
reserve I3 for (Element of ( Segm 14 ));
reserve I4 for (Element of ( Segm 14 ));
reserve d1 for (Element of ( SCM-Data-Loc ));
reserve d3 for (Element of ( SCM-Data-Loc ));
reserve d4 for (Element of ( SCM-Data-Loc ));
reserve d5 for (Element of ( SCM-Data-Loc ));
theorem
Th17: (( NAT ) <> ( SCMPDS-Instr ) & ( SCMPDS-Instr ) <> ( INT ))
proof
set S1 = { [ ( 0 ),( {} ),<* k1 *> ] where k1 is (Element of ( INT )): (not contradiction) };
set S2 = { [ 1,( {} ),<* d1 *> ]: (not contradiction) };
set S3 = { [ I2,( {} ),<* d1,k2 *> ] where I2 is (Element of ( Segm 14 )),d1 is (Element of ( SCM-Data-Loc )),k2 is (Element of ( INT )): I2 in { 2,3 } };
set S4 = { [ I3,( {} ),<* d3,k3,k4 *> ] where I3 is (Element of ( Segm 14 )),d3 is (Element of ( SCM-Data-Loc )),k3 is (Element of ( INT )),k4 is (Element of ( INT )): I3 in { 4,5,6,7,8 } };
set S5 = { [ I4,( {} ),<* d4,d5,k5,k6 *> ] where I4 is (Element of ( Segm 14 )),d4 is (Element of ( SCM-Data-Loc )),d5 is (Element of ( SCM-Data-Loc )),k5 is (Element of ( INT )),k6 is (Element of ( INT )): I4 in { 9,10,11,12,13 } };
now
assume 2 in ( SCMPDS-Instr );
then 2 in ( ( ( ( S1 \/ S2 ) \/ S3 ) \/ S4 ) \/ S5 );
then (2 in ( ( ( S1 \/ S2 ) \/ S3 ) \/ S4 ) or 2 in S5) by XBOOLE_0:def 3;
then ((2 in ( ( S1 \/ S2 ) \/ S3 ) or 2 in S4) or 2 in S5) by XBOOLE_0:def 3;
then (((2 in ( S1 \/ S2 ) or 2 in S3) or 2 in S4) or 2 in S5) by XBOOLE_0:def 3;
then ((((2 in S1 or 2 in S2) or 2 in S3) or 2 in S4) or 2 in S5) by XBOOLE_0:def 3;
then (((((ex k1 being (Element of ( INT )) st (2 = [ ( 0 ),( {} ),<* k1 *> ] & (not contradiction))) or (ex d1 st (2 = [ 1,( {} ),<* d1 *> ] & (not contradiction)))) or (ex I2 st (ex d1 st (ex k2 being (Element of ( INT )) st (2 = [ I2,( {} ),<* d1,k2 *> ] & I2 in { 2,3 }))))) or (ex I3 st (ex d3 st (ex k1,k2 being (Element of ( INT )) st (2 = [ I3,( {} ),<* d3,k1,k2 *> ] & I3 in { 4,5,6,7,8 }))))) or (ex I4 st (ex d4 st (ex d5 st (ex k5,k6 being (Element of ( INT )) st (2 = [ I4,( {} ),<* d4,d5,k5,k6 *> ] & I4 in { 9,10,11,12,13 }))))));
hence contradiction;
end;
hence thesis by INT_1:def 2;
end;
