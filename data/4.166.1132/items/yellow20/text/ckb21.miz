environ
vocabularies RELAT_2,ALTCAT_1,XBOOLE_0,MSUALG_6,FUNCTOR0,FUNCT_2,FUNCT_1,RELAT_1,CAT_1,ENS_1,PARTFUN1,ZFMISC_1,STRUCT_0,YELLOW18,SETFAM_1,PBOOLE,ALTCAT_2,TARSKI,SUBSET_1,REALSET1,FUNCOP_1,FUNCT_3,MCART_1,MSUALG_3,WELLORD1,ARYTM_0,YELLOW20;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,RELSET_1,FUNCT_1,FUNCT_2,MCART_1,BINOP_1,REALSET1,MULTOP_1,PBOOLE,STRUCT_0,FUNCT_4,PARTFUN1,FUNCOP_1,MSUALG_3,FUNCT_3,ALTCAT_1,ALTCAT_2,FUNCTOR0,FUNCTOR3,YELLOW18,CKB10,CKB14;
definitions TARSKI,RELAT_1,PARTFUN1,PBOOLE,MSUALG_3,ALTCAT_1,ALTCAT_2,FUNCTOR0,FUNCT_2,XBOOLE_0,BINOP_1,REALSET1,CKB10,CKB14;
theorems ZFMISC_1,RELAT_1,FUNCT_1,PBOOLE,MCART_1,FUNCT_2,FUNCT_3,FUNCT_4,ALTCAT_1,ALTCAT_2,FUNCTOR3,ALTCAT_4,FUNCTOR0,FUNCTOR1,FUNCTOR2,PARTFUN1,MULTOP_1,MSUALG_3,YELLOW18,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
schemes FUNCT_1,YELLOW18;
registrations SUBSET_1,RELAT_1,FUNCT_1,FUNCOP_1,PBOOLE,STRUCT_0,ALTCAT_2,FUNCTOR0,FUNCTOR2,ALTCAT_4,YELLOW18,RELSET_1;
constructors REALSET1,MSUALG_3,FUNCTOR3,YELLOW18,RELSET_1,CKB10,CKB14;
requirements SUBSET,BOOLE;
begin
reserve x for set;
definition
let A being AltCatStr;
let B being AltCatStr;
assume that
A1: A,B have_the_same_composition ;
func Intersect (A,B) ->  strict AltCatStr means 
:Def3: (((the carrier of it) = ( (the carrier of A) /\ (the carrier of B) ) & (the Arrows of it) = ( Intersect ((the Arrows of A),(the Arrows of B)) )) & (the Comp of it) = ( Intersect ((the Comp of A),(the Comp of B)) ));
existence
proof
A2: ( dom (the Comp of A) ) = [: (the carrier of A),(the carrier of A),(the carrier of A) :] by PARTFUN1:def 2;
A3:now
let x being set;
assume A4: x in ( dom (the Comp of A) );
assume x in ( dom (the Comp of B) );
(ex a1,a2,a3 being set st (((a1 in (the carrier of A) & a2 in (the carrier of A)) & a3 in (the carrier of A)) & x = [ a1,a2,a3 ])) by A2,A4,MCART_1:68;
hence ( (the Comp of A) . x ) tolerates ( (the Comp of B) . x ) by A1,CKB10:def 1;
end;
set Cr = ( (the carrier of A) /\ (the carrier of B) );
A5: [: (the carrier of B),(the carrier of B),(the carrier of B) :] = [: [: (the carrier of B),(the carrier of B) :],(the carrier of B) :] by ZFMISC_1:def 3;
([: Cr,Cr :] = ( [: (the carrier of A),(the carrier of A) :] /\ [: (the carrier of B),(the carrier of B) :] ) & [: (the carrier of A),(the carrier of A),(the carrier of A) :] = [: [: (the carrier of A),(the carrier of A) :],(the carrier of A) :]) by ZFMISC_1:100,ZFMISC_1:def 3;
then A6: ( [: (the carrier of A),(the carrier of A),(the carrier of A) :] /\ [: (the carrier of B),(the carrier of B),(the carrier of B) :] ) = [: [: Cr,Cr :],Cr :] by A5,ZFMISC_1:100
.= [: Cr,Cr,Cr :] by ZFMISC_1:def 3;
consider Ar being (ManySortedSet of [: Cr,Cr :]) such that A7: Ar = ( Intersect ((the Arrows of A),(the Arrows of B)) ) and A8: ( Intersect ({| (the Arrows of A) |},{| (the Arrows of B) |}) ) = {| Ar |} by CKB19:1;
(ex Ar1,Ar2 being (ManySortedSet of [: Cr,Cr :]) st ((Ar1 = ( Intersect ((the Arrows of A),(the Arrows of B)) ) & Ar2 = ( Intersect ((the Arrows of A),(the Arrows of B)) )) & ( Intersect ({| (the Arrows of A),(the Arrows of A) |},{| (the Arrows of B),(the Arrows of B) |}) ) = {| Ar1,Ar2 |})) by CKB20:1;
then reconsider Cm = ( Intersect ((the Comp of A),(the Comp of B)) ) as (ManySortedFunction of {| Ar,Ar |},{| Ar |}) by A7,A8,A6,A3,CKB18:1;
take AltCatStr (# Cr,Ar,Cm #);
thus thesis by A7;
end;
uniqueness;
end;
