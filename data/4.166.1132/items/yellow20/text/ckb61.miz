environ
vocabularies RELAT_2,ALTCAT_1,XBOOLE_0,MSUALG_6,FUNCTOR0,FUNCT_2,FUNCT_1,RELAT_1,CAT_1,ENS_1,PARTFUN1,ZFMISC_1,STRUCT_0,YELLOW18,SETFAM_1,PBOOLE,ALTCAT_2,TARSKI,SUBSET_1,REALSET1,FUNCOP_1,FUNCT_3,MCART_1,MSUALG_3,WELLORD1,ARYTM_0,YELLOW20;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,RELSET_1,FUNCT_1,FUNCT_2,MCART_1,BINOP_1,REALSET1,MULTOP_1,PBOOLE,STRUCT_0,FUNCT_4,PARTFUN1,FUNCOP_1,MSUALG_3,FUNCT_3,ALTCAT_1,ALTCAT_2,FUNCTOR0,FUNCTOR3,YELLOW18,CKB10,CKB14,CKB21,CKB37,CKB38,CKB39,CKB49,CKB50;
definitions TARSKI,RELAT_1,PARTFUN1,PBOOLE,MSUALG_3,ALTCAT_1,ALTCAT_2,FUNCTOR0,FUNCT_2,XBOOLE_0,BINOP_1,REALSET1,CKB10,CKB14,CKB21,CKB49,CKB50;
theorems ZFMISC_1,RELAT_1,FUNCT_1,PBOOLE,MCART_1,FUNCT_2,FUNCT_3,FUNCT_4,ALTCAT_1,ALTCAT_2,FUNCTOR3,ALTCAT_4,FUNCTOR0,FUNCTOR1,FUNCTOR2,PARTFUN1,MULTOP_1,MSUALG_3,YELLOW18,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB34,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60;
schemes FUNCT_1,YELLOW18,CKB29,CKB31,CKB32;
registrations SUBSET_1,RELAT_1,FUNCT_1,FUNCOP_1,PBOOLE,STRUCT_0,ALTCAT_2,FUNCTOR0,FUNCTOR2,ALTCAT_4,YELLOW18,RELSET_1,CKB33,CKB35,CKB36;
constructors REALSET1,MSUALG_3,FUNCTOR3,YELLOW18,RELSET_1,CKB10,CKB14,CKB21,CKB37,CKB38,CKB39,CKB49,CKB50;
requirements SUBSET,BOOLE;
begin
reserve x for set;
theorem
Th48: (for A being  transitive non  empty AltCatStr holds (for B being  transitive non  empty (SubCatStr of A) holds ( B opp ) is (SubCatStr of ( A opp ))))
proof
let A being  transitive non  empty AltCatStr;
let B being  transitive non  empty (SubCatStr of A);
A1: B,( B opp ) are_opposite  by YELLOW18:def 4;
then A2: (the carrier of ( B opp )) = (the carrier of B) by YELLOW18:def 3;
A3: (the Arrows of ( B opp )) = ( ~ (the Arrows of B) ) by A1,YELLOW18:def 3;
A4: A,( A opp ) are_opposite  by YELLOW18:def 4;
then A5: (the carrier of ( A opp )) = (the carrier of A) by YELLOW18:def 3;
hence (the carrier of ( B opp )) c= (the carrier of ( A opp )) by A2,ALTCAT_2:def 11;
((the Arrows of B) cc= (the Arrows of A) & (the Arrows of ( A opp )) = ( ~ (the Arrows of A) )) by A4,ALTCAT_2:def 11,YELLOW18:def 3;
hence (the Arrows of ( B opp )) cc= (the Arrows of ( A opp )) by A3,CKB60:1;
A6: (the carrier of B) c= (the carrier of A) by ALTCAT_2:def 11;
hence [: (the carrier of ( B opp )),(the carrier of ( B opp )),(the carrier of ( B opp )) :] c= [: (the carrier of ( A opp )),(the carrier of ( A opp )),(the carrier of ( A opp )) :] by A5,A2,MCART_1:73;
let x;
assume x in [: (the carrier of ( B opp )),(the carrier of ( B opp )),(the carrier of ( B opp )) :];
then consider x1,x2,x3 being set such that A7: ((x1 in (the carrier of B) & x2 in (the carrier of B)) & x3 in (the carrier of B)) and A8: x = [ x1,x2,x3 ] by A2,MCART_1:68;
reconsider a = x1,b = x2,c = x3 as (object of B) by A7;
reconsider a1 = a,b1 = b,c1 = c as (object of A) by A6,A7;
reconsider a19 = a1,b19 = b1,c19 = c1 as (object of ( A opp )) by A4,YELLOW18:def 3;
A9: ((the Comp of B) cc= (the Comp of A) & ( (the Comp of B) . (c,b,a) ) = ( (the Comp of B) . [ c,b,a ] )) by ALTCAT_2:def 11,MULTOP_1:def 1;
A10: ( (the Comp of A) . (c1,b1,a1) ) = ( (the Comp of A) . [ c1,b1,a1 ] ) by MULTOP_1:def 1;
[ x3,x2,x1 ] in [: (the carrier of B),(the carrier of B),(the carrier of B) :] by A7,MCART_1:69;
then A11: ( (the Comp of B) . (c,b,a) ) c= ( (the Comp of A) . (c1,b1,a1) ) by A9,A10,ALTCAT_2:def 2;
reconsider a9 = a,b9 = b,c9 = c as (object of ( B opp )) by A1,YELLOW18:def 3;
A12: (( (the Comp of ( B opp )) . (a9,b9,c9) ) = ( (the Comp of ( B opp )) . x ) & ( (the Comp of ( A opp )) . (a19,b19,c19) ) = ( (the Comp of ( A opp )) . x )) by A8,MULTOP_1:def 1;
A13: ( (the Comp of ( A opp )) . (a19,b19,c19) ) = ( ~ ( (the Comp of A) . (c1,b1,a1) ) ) by A4,YELLOW18:def 3;
( (the Comp of ( B opp )) . (a9,b9,c9) ) = ( ~ ( (the Comp of B) . (c,b,a) ) ) by A1,YELLOW18:def 3;
hence thesis by A13,A12,A11,CKB58:1;
end;
