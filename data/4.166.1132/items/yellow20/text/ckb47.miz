environ
vocabularies RELAT_2,ALTCAT_1,XBOOLE_0,MSUALG_6,FUNCTOR0,FUNCT_2,FUNCT_1,RELAT_1,CAT_1,ENS_1,PARTFUN1,ZFMISC_1,STRUCT_0,YELLOW18,SETFAM_1,PBOOLE,ALTCAT_2,TARSKI,SUBSET_1,REALSET1,FUNCOP_1,FUNCT_3,MCART_1,MSUALG_3,WELLORD1,ARYTM_0,YELLOW20;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,RELSET_1,FUNCT_1,FUNCT_2,MCART_1,BINOP_1,REALSET1,MULTOP_1,PBOOLE,STRUCT_0,FUNCT_4,PARTFUN1,FUNCOP_1,MSUALG_3,FUNCT_3,ALTCAT_1,ALTCAT_2,FUNCTOR0,FUNCTOR3,YELLOW18,CKB10,CKB14,CKB21,CKB37,CKB38,CKB39;
definitions TARSKI,RELAT_1,PARTFUN1,PBOOLE,MSUALG_3,ALTCAT_1,ALTCAT_2,FUNCTOR0,FUNCT_2,XBOOLE_0,BINOP_1,REALSET1,CKB10,CKB14,CKB21;
theorems ZFMISC_1,RELAT_1,FUNCT_1,PBOOLE,MCART_1,FUNCT_2,FUNCT_3,FUNCT_4,ALTCAT_1,ALTCAT_2,FUNCTOR3,ALTCAT_4,FUNCTOR0,FUNCTOR1,FUNCTOR2,PARTFUN1,MULTOP_1,MSUALG_3,YELLOW18,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB34,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46;
schemes FUNCT_1,YELLOW18,CKB29,CKB31,CKB32;
registrations SUBSET_1,RELAT_1,FUNCT_1,FUNCOP_1,PBOOLE,STRUCT_0,ALTCAT_2,FUNCTOR0,FUNCTOR2,ALTCAT_4,YELLOW18,RELSET_1,CKB33,CKB35,CKB36;
constructors REALSET1,MSUALG_3,FUNCTOR3,YELLOW18,RELSET_1,CKB10,CKB14,CKB21,CKB37,CKB38,CKB39;
requirements SUBSET,BOOLE;
begin
theorem
Th36: (for A,B being non  empty  reflexive AltGraph holds (for F being  feasible  Contravariant FunctorStr over A,B holds (F is  faithful implies (for a,b being (object of A) holds (<^ a,b ^> <> ( {} ) implies (for f,g being (Morphism of a,b) holds (( F . f ) = ( F . g ) implies f = g)))))))
proof
let A being non  empty  reflexive AltGraph;
let B being non  empty  reflexive AltGraph;
let F being  feasible  Contravariant FunctorStr over A,B;
assume that
A1: (for i being set holds (for f being Function holds ((i in ( dom (the MorphMap of F) ) & ( (the MorphMap of F) . i ) = f) implies f is  one-to-one)));
let a being (object of A);
let b being (object of A);
assume that
A2: <^ a,b ^> <> ( {} );
let f being (Morphism of a,b);
let g being (Morphism of a,b);
(( dom (the MorphMap of F) ) = [: (the carrier of A),(the carrier of A) :] & [ a,b ] in [: (the carrier of A),(the carrier of A) :]) by PARTFUN1:def 2,ZFMISC_1:def 2;
then A3: ( Morph-Map (F,a,b) ) is  one-to-one by A1;
A4: <^ ( F . b ),( F . a ) ^> <> ( {} ) by A2,FUNCTOR0:def 19;
then (( F . f ) = ( ( Morph-Map (F,a,b) ) . f ) & ( F . g ) = ( ( Morph-Map (F,a,b) ) . g )) by A2,FUNCTOR0:def 16;
hence thesis by A2,A4,A3,FUNCT_2:19;
end;
