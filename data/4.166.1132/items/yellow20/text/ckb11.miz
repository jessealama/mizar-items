environ
vocabularies RELAT_2,ALTCAT_1,XBOOLE_0,MSUALG_6,FUNCTOR0,FUNCT_2,FUNCT_1,RELAT_1,CAT_1,ENS_1,PARTFUN1,ZFMISC_1,STRUCT_0,YELLOW18,SETFAM_1,PBOOLE,ALTCAT_2,TARSKI,SUBSET_1,REALSET1,FUNCOP_1,FUNCT_3,MCART_1,MSUALG_3,WELLORD1,ARYTM_0,YELLOW20;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,RELSET_1,FUNCT_1,FUNCT_2,MCART_1,BINOP_1,REALSET1,MULTOP_1,PBOOLE,STRUCT_0,FUNCT_4,PARTFUN1,FUNCOP_1,MSUALG_3,FUNCT_3,ALTCAT_1,ALTCAT_2,FUNCTOR0,FUNCTOR3,YELLOW18,CKB10;
definitions TARSKI,RELAT_1,PARTFUN1,PBOOLE,MSUALG_3,ALTCAT_1,ALTCAT_2,FUNCTOR0,FUNCT_2,XBOOLE_0,BINOP_1,REALSET1,CKB10;
theorems ZFMISC_1,RELAT_1,FUNCT_1,PBOOLE,MCART_1,FUNCT_2,FUNCT_3,FUNCT_4,ALTCAT_1,ALTCAT_2,FUNCTOR3,ALTCAT_4,FUNCTOR0,FUNCTOR1,FUNCTOR2,PARTFUN1,MULTOP_1,MSUALG_3,YELLOW18,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
schemes FUNCT_1,YELLOW18;
registrations SUBSET_1,RELAT_1,FUNCT_1,FUNCOP_1,PBOOLE,STRUCT_0,ALTCAT_2,FUNCTOR0,FUNCTOR2,ALTCAT_4,YELLOW18,RELSET_1;
constructors REALSET1,MSUALG_3,FUNCTOR3,YELLOW18,RELSET_1,CKB10;
requirements SUBSET,BOOLE;
begin
reserve x for set;
theorem
Th10: (for A,B being AltCatStr holds (A,B have_the_same_composition  iff (for a1,a2,a3,x being set holds ((x in ( dom ( (the Comp of A) . [ a1,a2,a3 ] ) ) & x in ( dom ( (the Comp of B) . [ a1,a2,a3 ] ) )) implies ( ( (the Comp of A) . [ a1,a2,a3 ] ) . x ) = ( ( (the Comp of B) . [ a1,a2,a3 ] ) . x )))))
proof
let A being AltCatStr;
let B being AltCatStr;
hereby
assume A1: A,B have_the_same_composition ;
let a1 being set;
let a2 being set;
let a3 being set;
let x being set;
assume (x in ( dom ( (the Comp of A) . [ a1,a2,a3 ] ) ) & x in ( dom ( (the Comp of B) . [ a1,a2,a3 ] ) ));
then A2: x in ( ( dom ( (the Comp of A) . [ a1,a2,a3 ] ) ) /\ ( dom ( (the Comp of B) . [ a1,a2,a3 ] ) ) ) by XBOOLE_0:def 4;
( (the Comp of A) . [ a1,a2,a3 ] ) tolerates ( (the Comp of B) . [ a1,a2,a3 ] ) by A1,CKB10:def 1;
hence ( ( (the Comp of A) . [ a1,a2,a3 ] ) . x ) = ( ( (the Comp of B) . [ a1,a2,a3 ] ) . x ) by A2,PARTFUN1:def 4;
end;
assume A3: (for a1,a2,a3,x being set holds ((x in ( dom ( (the Comp of A) . [ a1,a2,a3 ] ) ) & x in ( dom ( (the Comp of B) . [ a1,a2,a3 ] ) )) implies ( ( (the Comp of A) . [ a1,a2,a3 ] ) . x ) = ( ( (the Comp of B) . [ a1,a2,a3 ] ) . x )));
let a1 being set;
let a2 being set;
let a3 being set;
let x being set;
assume x in ( ( dom ( (the Comp of A) . [ a1,a2,a3 ] ) ) /\ ( dom ( (the Comp of B) . [ a1,a2,a3 ] ) ) );
then (x in ( dom ( (the Comp of A) . [ a1,a2,a3 ] ) ) & x in ( dom ( (the Comp of B) . [ a1,a2,a3 ] ) )) by XBOOLE_0:def 4;
hence thesis by A3;
end;
