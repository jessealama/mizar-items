environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_0,XBOOLE_0,SUBSET_1,ARYTM_3,ALGSTR_1,BINOP_1,LATTICES,GROUP_1,VECTSP_2,VECTSP_1,SUPINF_2,RELAT_1,FUNCT_1,ZFMISC_1,CARD_1,FUNCT_2,MCART_1,CARD_3,FINSEQ_1,STRUCT_0,XXREAL_0,PARTFUN1,NAT_1,NEWTON,ARYTM_1,ORDINAL4,FINSEQ_2,BINOM;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,STRUCT_0,ALGSTR_0,PARTFUN1,FUNCT_1,FUNCT_2,NAT_1,FINSEQ_1,RELSET_1,BINOP_1,ALGSTR_1,FINSEQ_2,VECTSP_1,VECTSP_2,GROUP_1,NEWTON,RLVECT_1,MCART_1,POLYNOM1,XXREAL_0,CKB11;
definitions BINOP_1,ALGSTR_0,CKB11;
theorems TARSKI,FUNCT_2,VECTSP_1,RLVECT_1,ALGSTR_1,NAT_1,MCART_1,FINSEQ_1,GROUP_1,NEWTON,FINSEQ_2,FUNCT_1,ZFMISC_1,INT_1,RELAT_1,POLYNOM1,XBOOLE_0,XREAL_1,PARTFUN1,ORDINAL1,ALGSTR_0,CARD_1,FINSEQ_5,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11;
schemes NAT_1,RECDEF_1,INT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,STRUCT_0,VECTSP_1,ALGSTR_1,MONOID_0,INT_1,ALGSTR_0,CARD_1,FINSEQ_1,CKB1,CKB2,CKB3,CKB4;
constructors BINOP_1,XXREAL_0,REAL_1,NEWTON,ALGSTR_1,MONOID_0,POLYNOM1,RELSET_1,FVSUM_1,CKB11;
requirements NUMERALS,SUBSET,REAL,BOOLE,ARITHM;
begin
theorem
Th7: (for R being  Abelian  right_zeroed  add-associative non  empty addLoopStr holds (for p,q being (FinSequence of (the carrier of R)) holds (( dom p ) = ( dom q ) implies ( Sum ( p + q ) ) = ( ( Sum p ) + ( Sum q ) ))))
proof
let R being  Abelian  right_zeroed  add-associative non  empty addLoopStr;
let p being (FinSequence of (the carrier of R));
let q being (FinSequence of (the carrier of R));
consider fp being (Function of ( NAT ),(the carrier of R)) such that A1: ( Sum p ) = ( fp . ( len p ) ) and A2: ( fp . ( 0 ) ) = ( 0. R ) and A3: (for j being (Element of ( NAT )) holds (for v being (Element of R) holds ((j < ( len p ) & v = ( p . ( j + 1 ) )) implies ( fp . ( j + 1 ) ) = ( ( fp . j ) + v )))) by RLVECT_1:def 12;
consider fq being (Function of ( NAT ),(the carrier of R)) such that A4: ( Sum q ) = ( fq . ( len q ) ) and A5: ( fq . ( 0 ) ) = ( 0. R ) and A6: (for j being (Element of ( NAT )) holds (for v being (Element of R) holds ((j < ( len q ) & v = ( q . ( j + 1 ) )) implies ( fq . ( j + 1 ) ) = ( ( fq . j ) + v )))) by RLVECT_1:def 12;
assume ( dom p ) = ( dom q );
then A7: ( Seg ( len p ) ) = ( dom q ) by FINSEQ_1:def 3
.= ( Seg ( len q ) ) by FINSEQ_1:def 3;
then A8: ( len q ) = ( len p ) by FINSEQ_1:6;
consider fa being (Function of ( NAT ),(the carrier of R)) such that A9: ( Sum ( p + q ) ) = ( fa . ( len ( p + q ) ) ) and A10: ( fa . ( 0 ) ) = ( 0. R ) and A11: (for j being (Element of ( NAT )) holds (for v being (Element of R) holds ((j < ( len ( p + q ) ) & v = ( ( p + q ) . ( j + 1 ) )) implies ( fa . ( j + 1 ) ) = ( ( fa . j ) + v )))) by RLVECT_1:def 12;
defpred P[ (Element of ( NAT )) ]
 means
( ( fp . $1 ) + ( fq . $1 ) ) = ( fa . $1 );
A12: ( Seg ( len p ) ) = ( dom p ) by FINSEQ_1:def 3
.= ( dom ( p + q ) ) by CKB11:def 1
.= ( Seg ( len ( p + q ) ) ) by FINSEQ_1:def 3;
then A13: ( len ( p + q ) ) = ( len p ) by FINSEQ_1:6;
A14:now
let j being (Element of ( NAT ));
assume that
( 0 ) <= j
and
A15: j < ( len p );
thus (P[ j ] implies P[ ( j + 1 ) ])
proof
assume A16: P[ j ];
A17: ( ( 0 ) + 1 ) <= ( j + 1 ) by XREAL_1:6;
A18: ( j + 1 ) <= ( len p ) by A15,NAT_1:13;
then ( j + 1 ) in ( Seg ( len p ) ) by A17,FINSEQ_1:1;
then ( j + 1 ) in ( dom p ) by FINSEQ_1:def 3;
then A19: ( p /. ( j + 1 ) ) = ( p . ( j + 1 ) ) by PARTFUN1:def 6;
( j + 1 ) in ( Seg ( len q ) ) by A7,A18,A17,FINSEQ_1:1;
then ( j + 1 ) in ( dom q ) by FINSEQ_1:def 3;
then A20: ( q /. ( j + 1 ) ) = ( q . ( j + 1 ) ) by PARTFUN1:def 6;
A21: ( j + 1 ) <= ( len ( p + q ) ) by A13,A15,NAT_1:13;
then ( j + 1 ) in ( Seg ( len ( p + q ) ) ) by A17,FINSEQ_1:1;
then ( j + 1 ) in ( dom ( p + q ) ) by FINSEQ_1:def 3;
then ( ( p + q ) /. ( j + 1 ) ) = ( ( p + q ) . ( j + 1 ) ) by PARTFUN1:def 6;
then ( fa . ( j + 1 ) ) = ( ( fa . j ) + ( ( p + q ) /. ( j + 1 ) ) ) by A13,A11,A15
.= ( ( ( fp . j ) + ( fq . j ) ) + ( ( p /. ( j + 1 ) ) + ( q /. ( j + 1 ) ) ) ) by A16,A21,A17,CKB11:def 1
.= ( ( fp . j ) + ( ( fq . j ) + ( ( p /. ( j + 1 ) ) + ( q /. ( j + 1 ) ) ) ) ) by RLVECT_1:def 3
.= ( ( fp . j ) + ( ( p /. ( j + 1 ) ) + ( ( fq . j ) + ( q /. ( j + 1 ) ) ) ) ) by RLVECT_1:def 3
.= ( ( ( fp . j ) + ( p /. ( j + 1 ) ) ) + ( ( fq . j ) + ( q /. ( j + 1 ) ) ) ) by RLVECT_1:def 3
.= ( ( fp . ( j + 1 ) ) + ( ( fq . j ) + ( q /. ( j + 1 ) ) ) ) by A3,A15,A19
.= ( ( fp . ( j + 1 ) ) + ( fq . ( j + 1 ) ) ) by A8,A6,A15,A20;
hence thesis;
end;

end;
A22: P[ ( 0 ) ] by A2,A5,A10,RLVECT_1:def 4;
A23: (for i being (Element of ( NAT )) holds ((( 0 ) <= i & i <= ( len p )) implies P[ i ])) from INT_1:sch 7(A22,A14);
thus ( Sum ( p + q ) ) = ( fa . ( len p ) ) by A12,A9,FINSEQ_1:6
.= ( ( Sum p ) + ( Sum q ) ) by A8,A1,A4,A23;
end;
