environ
vocabularies CAT_1,XBOOLE_0,PARTFUN1,ZFMISC_1,RELAT_1,STRUCT_0,GRAPH_1,SUBSET_1,FUNCT_1,ARYTM_0,ALGSTR_0,FUNCT_2,ARYTM_3,OPPCAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,PARTFUN1,FUNCT_4,STRUCT_0,GRAPH_1,CAT_1,CKB1,CKB3,CKB4,CKB5,CKB9,CKB10;
definitions CAT_1,BINOP_1,GRAPH_1,CKB3,CKB4,CKB5,CKB9,CKB10;
theorems FUNCT_2,FUNCT_4,PARTFUN1,CAT_1,SUBSET_1,FUNCT_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes FUNCT_2;
registrations XBOOLE_0,RELSET_1,FUNCT_2,CAT_1,STRUCT_0;
constructors PARTFUN1,BINOP_1,FUNCT_4,CAT_1,RELSET_1,CKB1,CKB3,CKB4,CKB5,CKB9,CKB10;
requirements SUBSET,BOOLE;
begin
reserve C for Category;
theorem
(for a,b,c being (Object of C) holds (for f being (Morphism of a,b) holds (for g being (Morphism of b,c) holds ((( Hom (a,b) ) <> ( {} ) & ( Hom (b,c) ) <> ( {} )) implies ( ( g * f ) opp ) = ( ( f opp ) * ( g opp ) )))))
proof
let a being (Object of C);
let b being (Object of C);
let c being (Object of C);
let f being (Morphism of a,b);
let g being (Morphism of b,c);
assume A1: (( Hom (a,b) ) <> ( {} ) & ( Hom (b,c) ) <> ( {} ));
then A2: ( g * f ) = ( g * (f qua (Morphism of C)) ) by CAT_1:def 10;
(( cod f ) = b & ( dom g ) = b) by A1,CAT_1:5;
hence thesis by A2,CKB22:1;
end;
