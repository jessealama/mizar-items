environ
vocabularies NUMBERS,SUBSET_1,XREAL_0,ORDINAL1,SEQ_1,ARYTM_3,CARD_1,FUNCT_1,POWER,SEQ_2,ORDINAL2,ARYTM_1,XXREAL_0,COMPLEX1,RELAT_1,INT_1,NAT_1,REAL_1,CARD_3,VALUED_1,FUNCOP_1,VALUED_0,XXREAL_2,PREPOWER,NEWTON,SERIES_1,ABIAN,MEMBERED,XBOOLE_0,IDEAL_1,XCMPLX_0;
notations XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,MEMBERED,RELAT_1,FUNCT_1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,FUNCT_2,INT_1,NEWTON,ABIAN,PREPOWER,POWER,FUNCOP_1,XXREAL_0;
definitions VALUED_1,XCMPLX_0;
theorems SEQ_1,SEQ_2,SEQM_3,SEQ_4,NAT_1,RFUNCT_2,ABSVALUE,INT_1,PREPOWER,POWER,FUNCT_2,NEWTON,XCMPLX_1,FUNCOP_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,VALUED_0,VALUED_1,MEMBERED,CKB1,CKB2;
schemes NAT_1,SEQ_1,FUNCT_2,RECDEF_1;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,VALUED_1,FUNCT_2,POWER,FUNCOP_1,SEQ_2,SEQ_4,XCMPLX_0;
constructors FUNCOP_1,XXREAL_0,REAL_1,NAT_1,SEQ_2,SEQM_3,NEWTON,PREPOWER,POWER,PARTFUN1,SEQ_1,VALUED_1,SEQ_4,RELSET_1,ABIAN,BINOP_2;
requirements REAL,NUMERALS,SUBSET,ARITHM,BOOLE;
begin
reserve a for  real number;
theorem
Th2: (for n being  natural number holds ( ( abs a ) to_power n ) = ( abs ( a to_power n ) ))
proof
let n being  natural number;
per cases ;
suppose A1: a <> ( 0 );

then A2: ( abs a ) > ( 0 ) by COMPLEX1:47;
now
per cases  by A1;
suppose a > ( 0 );

then (( a to_power n ) = ( ( abs a ) to_power n ) & ( a to_power n ) > ( 0 )) by ABSVALUE:def 1,POWER:34;
hence thesis by ABSVALUE:def 1;
end;
suppose A3: a < ( 0 );

reconsider m = n as Integer;
now
per cases ;
suppose A4: m is  even;

A5: ( ( abs a ) to_power n ) > ( 0 ) by A2,POWER:34;
( ( abs a ) to_power n ) = ( ( - a ) to_power m ) by A3,ABSVALUE:def 1
.= ( a to_power m ) by A4,POWER:47;
hence thesis by A5,ABSVALUE:def 1;
end;
suppose A6: m is  odd;

A7: ( ( abs a ) to_power n ) > ( 0 ) by A2,POWER:34;
( ( abs a ) to_power n ) = ( ( - a ) to_power m ) by A3,ABSVALUE:def 1
.= ( - ( a to_power m ) ) by A6,POWER:48;
hence ( ( abs a ) to_power n ) = ( abs ( - ( a to_power n ) ) ) by A7,ABSVALUE:def 1
.= ( abs ( a to_power n ) ) by COMPLEX1:52;
end;
end;
hence thesis;
end;
end;
hence thesis;
end;
suppose A8: a = ( 0 );

per cases ;
suppose n = ( 0 );

then ( a to_power n ) = 1 by NEWTON:4;
hence thesis by A8,COMPLEX1:44,COMPLEX1:48;
end;
suppose n > ( 0 );

then ( ( abs a ) to_power n ) = ( 0 ) by A8,COMPLEX1:44,POWER:def 2;
hence thesis by A8,COMPLEX1:44;
end;
end;
end;
