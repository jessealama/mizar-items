environ
vocabularies NUMBERS,SUBSET_1,XREAL_0,ORDINAL1,SEQ_1,ARYTM_3,CARD_1,FUNCT_1,POWER,SEQ_2,ORDINAL2,ARYTM_1,XXREAL_0,COMPLEX1,RELAT_1,INT_1,NAT_1,REAL_1,CARD_3,VALUED_1,FUNCOP_1,VALUED_0,XXREAL_2,PREPOWER,NEWTON,SERIES_1,ABIAN,MEMBERED,XBOOLE_0,IDEAL_1,XCMPLX_0;
notations XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,MEMBERED,RELAT_1,FUNCT_1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,FUNCT_2,INT_1,NEWTON,ABIAN,PREPOWER,POWER,FUNCOP_1,XXREAL_0,CKB5,CKB6,CKB7,CKB8;
definitions VALUED_1,XCMPLX_0,CKB6,CKB7,CKB8;
theorems SEQ_1,SEQ_2,SEQM_3,SEQ_4,NAT_1,RFUNCT_2,ABSVALUE,INT_1,PREPOWER,POWER,FUNCT_2,NEWTON,XCMPLX_1,FUNCOP_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,VALUED_0,VALUED_1,MEMBERED,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes NAT_1,SEQ_1,FUNCT_2,RECDEF_1;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,VALUED_1,FUNCT_2,POWER,FUNCOP_1,SEQ_2,SEQ_4,XCMPLX_0;
constructors FUNCOP_1,XXREAL_0,REAL_1,NAT_1,SEQ_2,SEQM_3,NEWTON,PREPOWER,POWER,PARTFUN1,SEQ_1,VALUED_1,SEQ_4,RELSET_1,ABIAN,BINOP_2,CKB5,CKB6,CKB7,CKB8;
requirements REAL,NUMERALS,SUBSET,ARITHM,BOOLE;
begin
reserve n for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve r for  real number;
reserve s1 for Real_Sequence;
reserve s2 for Real_Sequence;
theorem
Th22: ((((for n holds ( 0 ) <= ( s2 . n )) & s1 is  summable) & (ex m st (for n holds (m <= n implies ( s2 . n ) <= ( s1 . n ))))) implies s2 is  summable)
proof
assume that
A1: (for n holds ( 0 ) <= ( s2 . n ))
and
A2: s1 is  summable;
given m such that
A3: (for n holds (m <= n implies ( s2 . n ) <= ( s1 . n )));

A4:now
let n;
(( ( s1 ^\ m ) . n ) = ( s1 . ( n + m ) ) & ( 0 ) <= ( s2 . ( n + m ) )) by A1,NAT_1:def 3;
hence ( 0 ) <= ( ( s1 ^\ m ) . n ) by A3,NAT_1:11;
end;
( s1 ^\ m ) is  summable by A2,CKB18:1;
then ( Partial_Sums ( s1 ^\ m ) ) is  bounded_above by A4,CKB23:1;
then consider r being  real number such that A5: (for n holds ( ( Partial_Sums ( s1 ^\ m ) ) . n ) < r) by SEQ_2:def 3;
A6:now
let n;
( s2 . ( n + m ) ) <= ( s1 . ( n + m ) ) by A3,NAT_1:12;
then ( ( s2 ^\ m ) . n ) <= ( s1 . ( n + m ) ) by NAT_1:def 3;
hence ( ( s2 ^\ m ) . n ) <= ( ( s1 ^\ m ) . n ) by NAT_1:def 3;
end;
now
let n;
( ( Partial_Sums ( s2 ^\ m ) ) . n ) <= ( ( Partial_Sums ( s1 ^\ m ) ) . n ) by A6,CKB20:1;
hence ( ( Partial_Sums ( s2 ^\ m ) ) . n ) < r by A5,XXREAL_0:2;
end;
then A7: ( Partial_Sums ( s2 ^\ m ) ) is  bounded_above by SEQ_2:def 3;
now
let n;
( ( s2 ^\ m ) . n ) = ( s2 . ( n + m ) ) by NAT_1:def 3;
hence ( 0 ) <= ( ( s2 ^\ m ) . n ) by A1;
end;
then ( s2 ^\ m ) is  summable by A7,CKB23:1;
hence thesis by CKB19:1;
end;
