environ
vocabularies NUMBERS,SUBSET_1,XREAL_0,ORDINAL1,SEQ_1,ARYTM_3,CARD_1,FUNCT_1,POWER,SEQ_2,ORDINAL2,ARYTM_1,XXREAL_0,COMPLEX1,RELAT_1,INT_1,NAT_1,REAL_1,CARD_3,VALUED_1,FUNCOP_1,VALUED_0,XXREAL_2,PREPOWER,NEWTON,SERIES_1,ABIAN,MEMBERED,XBOOLE_0,IDEAL_1,XCMPLX_0;
notations XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,MEMBERED,RELAT_1,FUNCT_1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,FUNCT_2,INT_1,NEWTON,ABIAN,PREPOWER,POWER,FUNCOP_1,XXREAL_0,CKB5,CKB6,CKB7,CKB8;
definitions VALUED_1,XCMPLX_0,CKB6,CKB7,CKB8;
theorems SEQ_1,SEQ_2,SEQM_3,SEQ_4,NAT_1,RFUNCT_2,ABSVALUE,INT_1,PREPOWER,POWER,FUNCT_2,NEWTON,XCMPLX_1,FUNCOP_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,VALUED_0,VALUED_1,MEMBERED,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes NAT_1,SEQ_1,FUNCT_2,RECDEF_1;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,VALUED_1,FUNCT_2,POWER,FUNCOP_1,SEQ_2,SEQ_4,XCMPLX_0;
constructors FUNCOP_1,XXREAL_0,REAL_1,NAT_1,SEQ_2,SEQM_3,NEWTON,PREPOWER,POWER,PARTFUN1,SEQ_1,VALUED_1,SEQ_4,RELSET_1,ABIAN,BINOP_2,CKB5,CKB6,CKB7,CKB8;
requirements REAL,NUMERALS,SUBSET,ARITHM,BOOLE;
begin
reserve n for (Element of ( NAT ));
reserve a for  real number;
reserve s for Real_Sequence;
theorem
((a <> 1 & (for n holds ( s . ( n + 1 ) ) = ( a * ( s . n ) ))) implies (for n holds ( ( Partial_Sums s ) . n ) = ( ( ( s . ( 0 ) ) * ( 1 - ( a to_power ( n + 1 ) ) ) ) / ( 1 - a ) )))
proof
assume that
A1: a <> 1
and
A2: (for n holds ( s . ( n + 1 ) ) = ( a * ( s . n ) ));
defpred X[ (Element of ( NAT )) ]
 means
( s . $1 ) = ( ( s . ( 0 ) ) * ( ( a GeoSeq ) . $1 ) );
A3: (for n holds (X[ n ] implies X[ ( n + 1 ) ]))
proof
let n;
assume ( s . n ) = ( ( s . ( 0 ) ) * ( ( a GeoSeq ) . n ) );
then ( s . ( n + 1 ) ) = ( a * ( ( s . ( 0 ) ) * ( ( a GeoSeq ) . n ) ) ) by A2
.= ( ( s . ( 0 ) ) * ( ( ( a GeoSeq ) . n ) * a ) )
.= ( ( s . ( 0 ) ) * ( ( a GeoSeq ) . ( n + 1 ) ) ) by PREPOWER:3;
hence thesis;
end;
( ( a GeoSeq ) . ( 0 ) ) = 1 by PREPOWER:3;
then A4: X[ ( 0 ) ];
(for n holds X[ n ]) from NAT_1:sch 1(A4,A3);
then s = ( ( s . ( 0 ) ) (#) ( a GeoSeq ) ) by SEQ_1:9;
then A5: ( Partial_Sums s ) = ( ( s . ( 0 ) ) (#) ( Partial_Sums ( a GeoSeq ) ) ) by CKB15:1;
now
let n;
thus ( ( Partial_Sums s ) . n ) = ( ( s . ( 0 ) ) * ( ( Partial_Sums ( a GeoSeq ) ) . n ) ) by A5,SEQ_1:9
.= ( ( s . ( 0 ) ) * ( ( 1 - ( a to_power ( n + 1 ) ) ) / ( 1 - a ) ) ) by A1,CKB28:1
.= ( ( ( s . ( 0 ) ) * ( 1 - ( a to_power ( n + 1 ) ) ) ) / ( 1 - a ) );
end;
hence thesis;
end;
