environ
vocabularies NUMBERS,SUBSET_1,XREAL_0,ORDINAL1,SEQ_1,ARYTM_3,CARD_1,FUNCT_1,POWER,SEQ_2,ORDINAL2,ARYTM_1,XXREAL_0,COMPLEX1,RELAT_1,INT_1,NAT_1,REAL_1,CARD_3,VALUED_1,FUNCOP_1,VALUED_0,XXREAL_2,PREPOWER,NEWTON,SERIES_1,ABIAN,MEMBERED,XBOOLE_0,IDEAL_1,XCMPLX_0;
notations XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,MEMBERED,RELAT_1,FUNCT_1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,FUNCT_2,INT_1,NEWTON,ABIAN,PREPOWER,POWER,FUNCOP_1,XXREAL_0,CKB5,CKB6,CKB7,CKB8;
definitions VALUED_1,XCMPLX_0,CKB6,CKB7,CKB8;
theorems SEQ_1,SEQ_2,SEQM_3,SEQ_4,NAT_1,RFUNCT_2,ABSVALUE,INT_1,PREPOWER,POWER,FUNCT_2,NEWTON,XCMPLX_1,FUNCOP_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,VALUED_0,VALUED_1,MEMBERED,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10;
schemes NAT_1,SEQ_1,FUNCT_2,RECDEF_1;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,VALUED_1,FUNCT_2,POWER,FUNCOP_1,SEQ_2,SEQ_4,XCMPLX_0;
constructors FUNCOP_1,XXREAL_0,REAL_1,NAT_1,SEQ_2,SEQM_3,NEWTON,PREPOWER,POWER,PARTFUN1,SEQ_1,VALUED_1,SEQ_4,RELSET_1,ABIAN,BINOP_2,CKB5,CKB6,CKB7,CKB8;
requirements REAL,NUMERALS,SUBSET,ARITHM,BOOLE;
begin
reserve n for (Element of ( NAT ));
reserve s1 for Real_Sequence;
reserve s2 for Real_Sequence;
theorem
Th8: (for X being non  empty  add-closed  complex-membered set holds (for s1,s2 being (sequence of X) holds ( ( Partial_Sums s1 ) + ( Partial_Sums s2 ) ) = ( Partial_Sums ( s1 + s2 ) )))
proof
let X being non  empty  add-closed  complex-membered set;
let s1 being (sequence of X);
let s2 being (sequence of X);
A1:now
let n;
thus ( ( ( Partial_Sums s1 ) + ( Partial_Sums s2 ) ) . ( n + 1 ) ) = ( ( ( Partial_Sums s1 ) . ( n + 1 ) ) + ( ( Partial_Sums s2 ) . ( n + 1 ) ) ) by CKB10:1
.= ( ( ( ( Partial_Sums s1 ) . n ) + ( s1 . ( n + 1 ) ) ) + ( ( Partial_Sums s2 ) . ( n + 1 ) ) ) by CKB6:def 1
.= ( ( ( ( Partial_Sums s1 ) . n ) + ( s1 . ( n + 1 ) ) ) + ( ( s2 . ( n + 1 ) ) + ( ( Partial_Sums s2 ) . n ) ) ) by CKB6:def 1
.= ( ( ( ( Partial_Sums s1 ) . n ) + ( ( s1 . ( n + 1 ) ) + ( s2 . ( n + 1 ) ) ) ) + ( ( Partial_Sums s2 ) . n ) )
.= ( ( ( ( Partial_Sums s1 ) . n ) + ( ( s1 + s2 ) . ( n + 1 ) ) ) + ( ( Partial_Sums s2 ) . n ) ) by CKB10:1
.= ( ( ( ( Partial_Sums s1 ) . n ) + ( ( Partial_Sums s2 ) . n ) ) + ( ( s1 + s2 ) . ( n + 1 ) ) )
.= ( ( ( ( Partial_Sums s1 ) + ( Partial_Sums s2 ) ) . n ) + ( ( s1 + s2 ) . ( n + 1 ) ) ) by CKB10:1;
end;
( ( ( Partial_Sums s1 ) + ( Partial_Sums s2 ) ) . ( 0 ) ) = ( ( ( Partial_Sums s1 ) . ( 0 ) ) + ( ( Partial_Sums s2 ) . ( 0 ) ) ) by CKB10:1
.= ( ( s1 . ( 0 ) ) + ( ( Partial_Sums s2 ) . ( 0 ) ) ) by CKB6:def 1
.= ( ( s1 . ( 0 ) ) + ( s2 . ( 0 ) ) ) by CKB6:def 1
.= ( ( s1 + s2 ) . ( 0 ) ) by CKB10:1;
hence thesis by A1,CKB6:def 1;
end;
