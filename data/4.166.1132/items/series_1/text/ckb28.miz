environ
vocabularies NUMBERS,SUBSET_1,XREAL_0,ORDINAL1,SEQ_1,ARYTM_3,CARD_1,FUNCT_1,POWER,SEQ_2,ORDINAL2,ARYTM_1,XXREAL_0,COMPLEX1,RELAT_1,INT_1,NAT_1,REAL_1,CARD_3,VALUED_1,FUNCOP_1,VALUED_0,XXREAL_2,PREPOWER,NEWTON,SERIES_1,ABIAN,MEMBERED,XBOOLE_0,IDEAL_1,XCMPLX_0;
notations XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,MEMBERED,RELAT_1,FUNCT_1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,FUNCT_2,INT_1,NEWTON,ABIAN,PREPOWER,POWER,FUNCOP_1,XXREAL_0,CKB5,CKB6,CKB7,CKB8;
definitions VALUED_1,XCMPLX_0,CKB6,CKB7,CKB8;
theorems SEQ_1,SEQ_2,SEQM_3,SEQ_4,NAT_1,RFUNCT_2,ABSVALUE,INT_1,PREPOWER,POWER,FUNCT_2,NEWTON,XCMPLX_1,FUNCOP_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,VALUED_0,VALUED_1,MEMBERED,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
schemes NAT_1,SEQ_1,FUNCT_2,RECDEF_1;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,VALUED_1,FUNCT_2,POWER,FUNCOP_1,SEQ_2,SEQ_4,XCMPLX_0;
constructors FUNCOP_1,XXREAL_0,REAL_1,NAT_1,SEQ_2,SEQM_3,NEWTON,PREPOWER,POWER,PARTFUN1,SEQ_1,VALUED_1,SEQ_4,RELSET_1,ABIAN,BINOP_2,CKB5,CKB6,CKB7,CKB8;
requirements REAL,NUMERALS,SUBSET,ARITHM,BOOLE;
begin
reserve n for (Element of ( NAT ));
reserve a for  real number;
theorem
Th26: (a <> 1 implies ( ( Partial_Sums ( a GeoSeq ) ) . n ) = ( ( 1 - ( a to_power ( n + 1 ) ) ) / ( 1 - a ) ))
proof
defpred X[ (Element of ( NAT )) ]
 means
( ( Partial_Sums ( a GeoSeq ) ) . $1 ) = ( ( 1 - ( a to_power ( $1 + 1 ) ) ) / ( 1 - a ) );
assume a <> 1;
then A1: ( 1 - a ) <> ( 0 );
A2: (for n holds (X[ n ] implies X[ ( n + 1 ) ]))
proof
let n;
assume ( ( Partial_Sums ( a GeoSeq ) ) . n ) = ( ( 1 - ( a to_power ( n + 1 ) ) ) / ( 1 - a ) );
hence ( ( Partial_Sums ( a GeoSeq ) ) . ( n + 1 ) ) = ( ( ( 1 - ( a to_power ( n + 1 ) ) ) / ( 1 - a ) ) + ( ( a GeoSeq ) . ( n + 1 ) ) ) by CKB6:def 1
.= ( ( ( 1 - ( a to_power ( n + 1 ) ) ) / ( 1 - a ) ) + ( ( a to_power ( n + 1 ) ) * 1 ) ) by PREPOWER:def 1
.= ( ( ( 1 - ( a to_power ( n + 1 ) ) ) / ( 1 - a ) ) + ( ( a to_power ( n + 1 ) ) * ( ( 1 - a ) / ( 1 - a ) ) ) ) by A1,XCMPLX_1:60
.= ( ( ( 1 - ( a to_power ( n + 1 ) ) ) / ( 1 - a ) ) + ( ( ( a to_power ( n + 1 ) ) * ( 1 - a ) ) / ( 1 - a ) ) )
.= ( ( ( 1 - ( a to_power ( n + 1 ) ) ) + ( ( a to_power ( n + 1 ) ) - ( ( a |^ ( n + 1 ) ) * a ) ) ) / ( 1 - a ) )
.= ( ( ( 1 - ( a to_power ( n + 1 ) ) ) + ( ( a to_power ( n + 1 ) ) - ( a |^ ( ( n + 1 ) + 1 ) ) ) ) / ( 1 - a ) ) by NEWTON:6
.= ( ( 1 - ( a to_power ( ( n + 1 ) + 1 ) ) ) / ( 1 - a ) );
end;
( ( Partial_Sums ( a GeoSeq ) ) . ( 0 ) ) = ( ( a GeoSeq ) . ( 0 ) ) by CKB6:def 1
.= 1 by PREPOWER:3
.= ( ( 1 - a ) / ( 1 - a ) ) by A1,XCMPLX_1:60
.= ( ( 1 - ( a to_power ( ( 0 ) + 1 ) ) ) / ( 1 - a ) ) by POWER:25;
then A3: X[ ( 0 ) ];
(for n holds X[ n ]) from NAT_1:sch 1(A3,A2);
hence thesis;
end;
