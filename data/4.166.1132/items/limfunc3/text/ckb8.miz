environ
vocabularies NUMBERS,REAL_1,SUBSET_1,SEQ_1,PARTFUN1,XREAL_0,ORDINAL1,CARD_1,ARYTM_3,XXREAL_0,ARYTM_1,RELAT_1,TARSKI,VALUED_1,XBOOLE_0,LIMFUNC1,FUNCT_1,COMPLEX1,SEQ_2,ORDINAL2,XXREAL_1,FUNCT_2,LIMFUNC2,NAT_1,VALUED_0,XXREAL_2,ORDINAL4,LIMFUNC3;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,RELAT_1,FUNCT_2,VALUED_0,VALUED_1,SEQ_1,PARTFUN1,SEQ_2,RCOMP_1,RFUNCT_1,LIMFUNC1,LIMFUNC2,RECDEF_1;
definitions TARSKI,XBOOLE_0,VALUED_1,PROB_1,LIMFUNC1;
theorems TARSKI,NAT_1,FUNCT_1,FUNCT_2,ABSVALUE,SEQ_1,SEQ_2,SEQM_3,SEQ_4,RFUNCT_1,RCOMP_1,RFUNCT_2,LIMFUNC1,LIMFUNC2,RELSET_1,XREAL_0,XBOOLE_0,XBOOLE_1,XCMPLX_0,XCMPLX_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,VALUED_1,XXREAL_1,VALUED_0,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7;
schemes NAT_1,RECDEF_1,FUNCT_2;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,VALUED_0,VALUED_1,FUNCT_2,SEQ_4;
constructors REAL_1,NAT_1,COMPLEX1,SEQ_2,SEQM_3,PROB_1,RCOMP_1,PARTFUN1,RFUNCT_1,RFUNCT_2,LIMFUNC1,LIMFUNC2,VALUED_1,SEQ_1,RECDEF_1,RELSET_1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve r for Real;
reserve r1 for Real;
reserve g1 for Real;
reserve g2 for Real;
reserve x0 for Real;
theorem
Th4: (( 0 ) < r implies ( ]. ( x0 - r ),( x0 + r ) .[ \ { x0 } ) = ( ]. ( x0 - r ),x0 .[ \/ ]. x0,( x0 + r ) .[ ))
proof
assume A1: ( 0 ) < r;
thus ( ]. ( x0 - r ),( x0 + r ) .[ \ { x0 } ) c= ( ]. ( x0 - r ),x0 .[ \/ ]. x0,( x0 + r ) .[ )
proof
let x being set;
assume A2: x in ( ]. ( x0 - r ),( x0 + r ) .[ \ { x0 } );
then consider r1 such that A3: r1 = x;
x in ]. ( x0 - r ),( x0 + r ) .[ by A2,XBOOLE_0:def 5;
then x in { g2: (( x0 - r ) < g2 & g2 < ( x0 + r )) } by RCOMP_1:def 2;
then A4: (ex g2 st ((g2 = x & ( x0 - r ) < g2) & g2 < ( x0 + r )));
(not x in { x0 }) by A2,XBOOLE_0:def 5;
then A5: r1 <> x0 by A3,TARSKI:def 1;
now
per cases  by A5,XXREAL_0:1;
suppose r1 < x0;

then r1 in { g1: (( x0 - r ) < g1 & g1 < x0) } by A3,A4;
then x in ]. ( x0 - r ),x0 .[ by A3,RCOMP_1:def 2;
hence thesis by XBOOLE_0:def 3;
end;
suppose x0 < r1;

then r1 in { g1: (x0 < g1 & g1 < ( x0 + r )) } by A3,A4;
then x in ]. x0,( x0 + r ) .[ by A3,RCOMP_1:def 2;
hence thesis by XBOOLE_0:def 3;
end;
end;
hence thesis;
end;

let x being set;
assume that
A6: x in ( ]. ( x0 - r ),x0 .[ \/ ]. x0,( x0 + r ) .[ );
now
per cases  by A6,XBOOLE_0:def 3;
suppose x in ]. ( x0 - r ),x0 .[;

then x in { g1: (( x0 - r ) < g1 & g1 < x0) } by RCOMP_1:def 2;
then consider g1 such that A7: g1 = x and A8: ( x0 - r ) < g1 and A9: g1 < x0;
g1 < ( x0 + r ) by A1,A9,CKB1:1;
then x in { g2: (( x0 - r ) < g2 & g2 < ( x0 + r )) } by A7,A8;
then A10: x in ]. ( x0 - r ),( x0 + r ) .[ by RCOMP_1:def 2;
(not x in { x0 }) by A7,A9,TARSKI:def 1;
hence thesis by A10,XBOOLE_0:def 5;
end;
suppose x in ]. x0,( x0 + r ) .[;

then x in { g1: (x0 < g1 & g1 < ( x0 + r )) } by RCOMP_1:def 2;
then consider g1 such that A11: g1 = x and A12: x0 < g1 and A13: g1 < ( x0 + r );
( x0 - r ) < g1 by A1,A12,CKB1:1;
then x in { g2: (( x0 - r ) < g2 & g2 < ( x0 + r )) } by A11,A13;
then A14: x in ]. ( x0 - r ),( x0 + r ) .[ by RCOMP_1:def 2;
(not x in { x0 }) by A11,A12,TARSKI:def 1;
hence thesis by A14,XBOOLE_0:def 5;
end;
end;
hence thesis;
end;
