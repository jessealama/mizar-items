environ
vocabularies NUMBERS,SUBSET_1,RELAT_1,ZFMISC_1,SETFAM_1,TARSKI,PARTFUN1,RELAT_2,XBOOLE_0,FINSEQ_1,XXREAL_0,FUNCT_1,ARYTM_3,ORDINAL4,ARYTM_1,NAT_1,CARD_1,EQREL_1,MCART_1,CARD_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,DOMAIN_1,SUBSET_1,XCMPLX_0,XXREAL_0,RELAT_1,RELAT_2,SETFAM_1,FINSEQ_1,FUNCT_1,NUMBERS,NAT_1,FUNCT_3,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,CKB1,CKB3,CKB4,CKB7,CKB8,CKB18;
definitions TARSKI,RELAT_1,RELAT_2,XBOOLE_0,PARTFUN1,SETFAM_1,SUBSET_1,BINOP_1,CKB1;
theorems RELAT_1,RELAT_2,RELSET_1,SETFAM_1,ZFMISC_1,TARSKI,FINSEQ_1,NAT_1,XBOOLE_0,XBOOLE_1,ORDERS_1,PARTFUN1,XREAL_1,XXREAL_0,FUNCT_1,FUNCT_3,FUNCT_2,MCART_1,SUBSET_1,SETWISEO,CKB1,CKB5,CKB6,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19;
schemes SUBSET_1,RELSET_1,FINSEQ_1,NAT_1,FUNCT_2;
registrations XBOOLE_0,SUBSET_1,PARTFUN1,XXREAL_0,XREAL_0,FINSEQ_1,RELAT_1,ORDINAL1,RELSET_1,FUNCT_2,FUNCT_3,ZFMISC_1,FUNCT_1,CKB2,CKB11;
constructors SETFAM_1,RELAT_2,PARTFUN1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,RELSET_1,FUNCT_3,BINOP_1,DOMAIN_1,CKB1,CKB3,CKB4,CKB18;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve X for set;
reserve Y for set;
reserve x for set;
reserve y for set;
reserve z for set;
reserve SFXX for (Subset-Family of [: X,X :]);
theorem
Th19: (for SFXX holds ((SFXX <> ( {} ) & (for Y holds (Y in SFXX implies Y is (Equivalence_Relation of X)))) implies ( meet SFXX ) is (Equivalence_Relation of X)))
proof
let SFXX;
assume that
A1: SFXX <> ( {} )
and
A2: (for Y holds (Y in SFXX implies Y is (Equivalence_Relation of X)));
reconsider XX = ( meet SFXX ) as (Relation of X);
A3: XX is_symmetric_in X
proof
let x;
let y;
assume that
x in X
and
y in X
and
A4: [ x,y ] in XX;
now
let Y;
assume Y in SFXX;
then (Y is (Equivalence_Relation of X) & [ x,y ] in Y) by A2,A4,SETFAM_1:def 1;
hence [ y,x ] in Y by CKB14:1;
end;
hence thesis by A1,SETFAM_1:def 1;
end;
A5: XX is_transitive_in X
proof
let x;
let y;
let z;
assume that
x in X
and
y in X
and
z in X
and
A6: [ x,y ] in XX
and
A7: [ y,z ] in XX;
now
let Y;
assume A8: Y in SFXX;
then A9: [ y,z ] in Y by A7,SETFAM_1:def 1;
(Y is (Equivalence_Relation of X) & [ x,y ] in Y) by A2,A6,A8,SETFAM_1:def 1;
hence [ x,z ] in Y by A9,CKB15:1;
end;
hence thesis by A1,SETFAM_1:def 1;
end;
XX is_reflexive_in X
proof
let x;
assume that
A10: x in X;
(for Y holds (Y in SFXX implies [ x,x ] in Y))
proof
let Y;
assume Y in SFXX;
then Y is (Equivalence_Relation of X) by A2;
hence thesis by A10,CKB13:1;
end;
hence thesis by A1,SETFAM_1:def 1;
end;
then (( field XX ) = X & ( dom XX ) = X) by ORDERS_1:13;
hence thesis by A3,A5,PARTFUN1:def 2,RELAT_2:def 11,RELAT_2:def 16;
end;
