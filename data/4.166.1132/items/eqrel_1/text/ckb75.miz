environ
vocabularies NUMBERS,SUBSET_1,RELAT_1,ZFMISC_1,SETFAM_1,TARSKI,PARTFUN1,RELAT_2,XBOOLE_0,FINSEQ_1,XXREAL_0,FUNCT_1,ARYTM_3,ORDINAL4,ARYTM_1,NAT_1,CARD_1,EQREL_1,MCART_1,CARD_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,DOMAIN_1,SUBSET_1,XCMPLX_0,XXREAL_0,RELAT_1,RELAT_2,SETFAM_1,FINSEQ_1,FUNCT_1,NUMBERS,NAT_1,FUNCT_3,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,CKB1,CKB3,CKB4,CKB7,CKB8,CKB18,CKB22,CKB29,CKB30,CKB45,CKB47,CKB55,CKB58,CKB59,CKB60,CKB62,CKB65,CKB66,CKB68;
definitions TARSKI,RELAT_1,RELAT_2,XBOOLE_0,PARTFUN1,SETFAM_1,SUBSET_1,BINOP_1,CKB1,CKB22,CKB45,CKB47,CKB60,CKB62,CKB66;
theorems RELAT_1,RELAT_2,RELSET_1,SETFAM_1,ZFMISC_1,TARSKI,FINSEQ_1,NAT_1,XBOOLE_0,XBOOLE_1,ORDERS_1,PARTFUN1,XREAL_1,XXREAL_0,FUNCT_1,FUNCT_3,FUNCT_2,MCART_1,SUBSET_1,SETWISEO,CKB1,CKB5,CKB6,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB60,CKB61,CKB62,CKB63,CKB64,CKB66,CKB70,CKB72,CKB73,CKB74;
schemes SUBSET_1,RELSET_1,FINSEQ_1,NAT_1,FUNCT_2,CKB28;
registrations XBOOLE_0,SUBSET_1,PARTFUN1,XXREAL_0,XREAL_0,FINSEQ_1,RELAT_1,ORDINAL1,RELSET_1,FUNCT_2,FUNCT_3,ZFMISC_1,FUNCT_1,CKB2,CKB11,CKB53,CKB54,CKB56,CKB57,CKB67,CKB69,CKB71;
constructors SETFAM_1,RELAT_2,PARTFUN1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,RELSET_1,FUNCT_3,BINOP_1,DOMAIN_1,CKB1,CKB3,CKB4,CKB18,CKB22,CKB30,CKB45,CKB47,CKB55,CKB59,CKB60,CKB62,CKB66;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
definition
let X being non empty set;
let F being non empty (Part-Family of X);
func Intersection F -> non empty (a_partition of X)
means
(for x being (Element of X) holds ( EqClass (x,it) ) = ( meet { ( EqClass (x,S) ) where S is (a_partition of X): S in F } ));
uniqueness
proof
given S1 being (a_partition of X),S2 being (a_partition of X) such that
A1: (for x being (Element of X) holds ( EqClass (x,S1) ) = ( meet { ( EqClass (x,S) ) where S is (a_partition of X): S in F } ))
and
A2: (for x being (Element of X) holds ( EqClass (x,S2) ) = ( meet { ( EqClass (x,S) ) where S is (a_partition of X): S in F } ))
and
A3: (not S1 = S2);

now
let x being (Element of X);
( EqClass (x,S1) ) = ( meet { ( EqClass (x,S) ) where S is (a_partition of X): S in F } ) by A1;
hence ( EqClass (x,S1) ) = ( EqClass (x,S2) ) by A2;
end;
hence contradiction by A3,CKB63:1;
end;
existence
proof
thus (ex G being non empty (a_partition of X) st (for x being (Element of X) holds ( EqClass (x,G) ) = ( meet { ( EqClass (x,S) ) where S is (a_partition of X): S in F } )))
proof
set G = { ( meet { ( EqClass (x,S) ) where S is (a_partition of X): S in F } ) where x is (Element of X): (not contradiction) };
G c= ( bool X )
proof
let y being set;
assume y in G;
then consider x being (Element of X) such that A4: y = ( meet { ( EqClass (x,S) ) where S is (a_partition of X): S in F } );
y c= X
proof
let e being set;
consider T being set such that A5: T in F by XBOOLE_0:def 1;
reconsider T as (a_partition of X) by A5,CKB66:def 1;
( EqClass (x,T) ) in { ( EqClass (x,S) ) where S is (a_partition of X): S in F } by A5;
then consider f being set such that A6: f in { ( EqClass (x,S) ) where S is (a_partition of X): S in F };
consider S being (a_partition of X) such that A7: f = ( EqClass (x,S) ) and S in F by A6;
assume e in y;
then e in ( EqClass (x,S) ) by A4,A6,A7,SETFAM_1:def 1;
hence thesis;
end;
hence thesis;
end;
then reconsider G as (Subset-Family of X);
G is (a_partition of X)
proof
X c= ( union G )
proof
let a being set;
consider T being set such that A8: T in F by XBOOLE_0:def 1;
assume a in X;
then reconsider a1 = a as (Element of X);
reconsider T as (a_partition of X) by A8,CKB66:def 1;
A9: ( meet { ( EqClass (a1,S) ) where S is (a_partition of X): S in F } ) in G;
A10: (for T being set holds (T in { ( EqClass (a1,S) ) where S is (a_partition of X): S in F } implies a1 in T))
proof
let T being set;
assume T in { ( EqClass (a1,S) ) where S is (a_partition of X): S in F };
then (ex A being (a_partition of X) st (T = ( EqClass (a1,A) ) & A in F));
hence thesis by CKB62:def 1;
end;
( EqClass (a1,T) ) in { ( EqClass (a1,S) ) where S is (a_partition of X): S in F } by A8;
then a in ( meet { ( EqClass (a1,S) ) where S is (a_partition of X): S in F } ) by A10,SETFAM_1:def 1;
hence thesis by A9,TARSKI:def 4;
end;
hence ( union G ) = X by XBOOLE_0:def 10;
let A being (Subset of X);
consider T being set such that A11: T in F by XBOOLE_0:def 1;
reconsider T as (a_partition of X) by A11,CKB66:def 1;
assume A12: A in G;
then consider x being (Element of X) such that A13: A = ( meet { ( EqClass (x,S) ) where S is (a_partition of X): S in F } );
A14: (for Y being set holds (Y in { ( EqClass (x,S) ) where S is (a_partition of X): S in F } implies x in Y))
proof
let Y being set;
assume Y in { ( EqClass (x,S) ) where S is (a_partition of X): S in F };
then (ex T being (a_partition of X) st (Y = ( EqClass (x,T) ) & T in F));
hence thesis by CKB62:def 1;
end;
( EqClass (x,T) ) in { ( EqClass (x,S) ) where S is (a_partition of X): S in F } by A11;
hence A <> ( {} ) by A13,A14,SETFAM_1:def 1;
consider x being (Element of X) such that A15: A = ( meet { ( EqClass (x,S) ) where S is (a_partition of X): S in F } ) by A12;
let B being (Subset of X);
assume B in G;
then consider y being (Element of X) such that A16: B = ( meet { ( EqClass (y,S) ) where S is (a_partition of X): S in F } );
thus (A = B or A misses B)
proof
A17: { ( EqClass (y,S) ) where S is (a_partition of X): S in F } is non empty
proof
consider T being set such that A18: T in F by XBOOLE_0:def 1;
reconsider T as (a_partition of X) by A18,CKB66:def 1;
( EqClass (y,T) ) in { ( EqClass (y,S) ) where S is (a_partition of X): S in F } by A18;
hence thesis;
end;
A19: { ( EqClass (x,S) ) where S is (a_partition of X): S in F } is non empty
proof
consider T being set such that A20: T in F by XBOOLE_0:def 1;
reconsider T as (a_partition of X) by A20,CKB66:def 1;
( EqClass (x,T) ) in { ( EqClass (x,S) ) where S is (a_partition of X): S in F } by A20;
hence thesis;
end;
now
assume A meets B;
then consider c being set such that A21: (c in A & c in B) by XBOOLE_0:3;
c in ( ( meet { ( EqClass (x,S) ) where S is (a_partition of X): S in F } ) /\ ( meet { ( EqClass (y,S) ) where S is (a_partition of X): S in F } ) ) by A15,A16,A21,XBOOLE_0:def 4;
then A22: c in ( meet ( { ( EqClass (x,S) ) where S is (a_partition of X): S in F } \/ { ( EqClass (y,S) ) where S is (a_partition of X): S in F } ) ) by A19,A17,SETFAM_1:9;
A23:now
let T being (a_partition of X);
assume T in F;
then ( EqClass (y,T) ) in { ( EqClass (y,S) ) where S is (a_partition of X): S in F };
then ( EqClass (y,T) ) in ( { ( EqClass (x,S) ) where S is (a_partition of X): S in F } \/ { ( EqClass (y,S) ) where S is (a_partition of X): S in F } ) by XBOOLE_0:def 3;
hence c in ( EqClass (y,T) ) by A22,SETFAM_1:def 1;
end;
A24:now
let T being (a_partition of X);
assume T in F;
then ( EqClass (x,T) ) in { ( EqClass (x,S) ) where S is (a_partition of X): S in F };
then ( EqClass (x,T) ) in ( { ( EqClass (x,S) ) where S is (a_partition of X): S in F } \/ { ( EqClass (y,S) ) where S is (a_partition of X): S in F } ) by XBOOLE_0:def 3;
hence c in ( EqClass (x,T) ) by A22,SETFAM_1:def 1;
end;
A25: (for T being (a_partition of X) holds (T in F implies (ex A being set st (A in ( EqClass (x,T) ) & A in ( EqClass (y,T) )))))
proof
let T being (a_partition of X);
assume A26: T in F;
take c;
thus thesis by A24,A23,A26;
end;
A27: (for T being (a_partition of X) holds (T in F implies ( EqClass (x,T) ) meets ( EqClass (y,T) )))
proof
let T being (a_partition of X);
assume T in F;
then (ex A being set st (A in ( EqClass (x,T) ) & A in ( EqClass (y,T) ))) by A25;
hence thesis by XBOOLE_0:3;
end;
A28: { ( EqClass (y,S) ) where S is (a_partition of X): S in F } c= { ( EqClass (x,S) ) where S is (a_partition of X): S in F }
proof
let A being set;
assume A in { ( EqClass (y,S) ) where S is (a_partition of X): S in F };
then consider T being (a_partition of X) such that A29: T in F and A30: A = ( EqClass (y,T) ) by CKB73:1;
A = ( EqClass (x,T) ) by A27,A29,A30,CKB72:1;
hence thesis by A29;
end;
{ ( EqClass (x,S) ) where S is (a_partition of X): S in F } c= { ( EqClass (y,S) ) where S is (a_partition of X): S in F }
proof
let A being set;
assume A in { ( EqClass (x,S) ) where S is (a_partition of X): S in F };
then consider T being (a_partition of X) such that A31: T in F and A32: A = ( EqClass (x,T) ) by CKB73:1;
A = ( EqClass (y,T) ) by A27,A31,A32,CKB72:1;
hence thesis by A31;
end;
hence thesis by A15,A16,A28,XBOOLE_0:def 10;
end;
hence thesis;
end;

end;
then reconsider G as non empty (a_partition of X);
take G;
(for x being (Element of X) holds ( EqClass (x,G) ) = ( meet { ( EqClass (x,S) ) where S is (a_partition of X): S in F } ))
proof
let x being (Element of X);
A33:now
let Y being set;
assume Y in { ( EqClass (x,S) ) where S is (a_partition of X): S in F };
then (ex T being (a_partition of X) st (Y = ( EqClass (x,T) ) & T in F));
hence x in Y by CKB62:def 1;
end;
{ ( EqClass (x,S) ) where S is (a_partition of X): S in F } is non empty
proof
consider T being set such that A34: T in F by XBOOLE_0:def 1;
reconsider T as (a_partition of X) by A34,CKB66:def 1;
( EqClass (x,T) ) in { ( EqClass (x,S) ) where S is (a_partition of X): S in F } by A34;
hence thesis;
end;
then (( meet { ( EqClass (x,S) ) where S is (a_partition of X): S in F } ) in G & x in ( meet { ( EqClass (x,S) ) where S is (a_partition of X): S in F } )) by A33,SETFAM_1:def 1;
hence thesis by CKB62:def 1;
end;
hence thesis;
end;

end;
end;
