environ
vocabularies NUMBERS,FINSEQ_1,SUBSET_1,RLVECT_1,REAL_1,STRUCT_0,FUNCT_1,XBOOLE_0,ALGSTR_0,RELAT_1,PARTFUN1,ARYTM_3,CARD_3,ORDINAL4,XXREAL_0,TARSKI,CARD_1,SUPINF_2,ARYTM_1,NAT_1,FUNCT_2,FINSET_1,FUNCOP_1,VALUED_1,RLSUB_1,QC_LANG1,BINOP_1,ZFMISC_1,XREAL_0,ORDINAL1,RLVECT_2,LATTICES,VECTSP_1,PRE_POLY;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,FINSET_1,FINSEQ_1,RELAT_1,FUNCT_1,RELSET_1,PRE_POLY,PARTFUN1,FUNCT_2,FUNCOP_1,DOMAIN_1,VALUED_1,FINSEQ_4,STRUCT_0,ALGSTR_0,GROUP_1,RLVECT_1,VECTSP_1,REAL_1,RLSUB_1,NAT_1,BINOP_1,XXREAL_0,CKB1;
definitions FUNCT_1,RLSUB_1,TARSKI,XBOOLE_0,BINOP_1,RLVECT_1,RELAT_1,FUNCT_2,STRUCT_0,ALGSTR_0,CKB1;
theorems BINOP_1,CARD_1,CARD_2,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FUNCT_1,FUNCT_2,NAT_1,RLSUB_1,RLSUB_2,RLVECT_1,TARSKI,ZFMISC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,FUNCOP_1,XREAL_1,XXREAL_0,ORDINAL1,STRUCT_0,PARTFUN1,VALUED_1,XREAL_0,VECTSP_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5;
schemes BINOP_1,FINSEQ_1,FUNCT_2,NAT_1,XBOOLE_0;
registrations SUBSET_1,FUNCT_1,RELSET_1,FUNCT_2,FINSET_1,NUMBERS,XREAL_0,STRUCT_0,RLVECT_1,RLSUB_1,VALUED_1,VALUED_0,MEMBERED,FINSEQ_1,CARD_1,VECTSP_1,VECTSP_2;
constructors PARTFUN1,BINOP_1,DOMAIN_1,FUNCOP_1,XXREAL_0,REAL_1,NAT_1,FINSEQ_4,RLSUB_1,VALUED_1,RELSET_1,VECTSP_1,PRE_POLY,RLVECT_1,CKB1;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve k for (Element of ( NAT ));
reserve V for RealLinearSpace;
reserve F for (FinSequence of V);
reserve G for (FinSequence of V);
theorem
(for V being  Abelian  add-associative  right_zeroed  right_complementable non  empty addLoopStr holds (for F,G,H being (FinSequence of (the carrier of V)) holds (((( len F ) = ( len G ) & ( len F ) = ( len H )) & (for k holds (k in ( dom F ) implies ( H . k ) = ( ( F /. k ) - ( G /. k ) )))) implies ( Sum H ) = ( ( Sum F ) - ( Sum G ) ))))
proof
let V being  Abelian  add-associative  right_zeroed  right_complementable non  empty addLoopStr;
let F being (FinSequence of (the carrier of V));
let G being (FinSequence of (the carrier of V));
let H being (FinSequence of (the carrier of V));
assume that
A1: ( len F ) = ( len G )
and
A2: ( len F ) = ( len H )
and
A3: (for k holds (k in ( dom F ) implies ( H . k ) = ( ( F /. k ) - ( G /. k ) )));
deffunc Q(set) = ( - ( G /. $1 ) );
consider I being FinSequence such that A4: ( len I ) = ( len G ) and A5: (for k being Nat holds (k in ( dom I ) implies ( I . k ) = Q(k))) from FINSEQ_1:sch 2;
( dom I ) = ( Seg ( len G ) ) by A4,FINSEQ_1:def 3;
then A6: (( dom G ) = ( Seg ( len G ) ) & (for k holds (k in ( Seg ( len G ) ) implies ( I . k ) = Q(k)))) by A5,FINSEQ_1:def 3;
( rng I ) c= (the carrier of V)
proof
let x;
assume x in ( rng I );
then consider y such that A7: y in ( dom I ) and A8: ( I . y ) = x by FUNCT_1:def 3;
reconsider y as (Element of ( NAT )) by A7,FINSEQ_3:23;
x = ( - ( G /. y ) ) by A5,A7,A8;
then reconsider v = x as (Element of V);
v in V by RLVECT_1:1;
hence thesis;
end;
then reconsider I as (FinSequence of (the carrier of V)) by FINSEQ_1:def 4;
A9:now
let k;
assume A10: k in ( dom F );
A11: (( dom F ) = ( Seg ( len F ) ) & ( dom I ) = ( Seg ( len I ) )) by FINSEQ_1:def 3;
then A12: ( I . k ) = ( I /. k ) by A1,A4,A10,PARTFUN1:def 6;
thus ( H . k ) = ( ( F /. k ) - ( G /. k ) ) by A3,A10
.= ( ( F /. k ) + ( I /. k ) ) by A1,A4,A5,A11,A10,A12;
end;
( Sum I ) = ( - ( Sum G ) ) by A4,A6,CKB5:1;
hence thesis by A1,A2,A4,A9,CKB3:1;
end;
