environ
vocabularies NUMBERS,FINSEQ_1,SUBSET_1,RLVECT_1,REAL_1,STRUCT_0,FUNCT_1,XBOOLE_0,ALGSTR_0,RELAT_1,PARTFUN1,ARYTM_3,CARD_3,ORDINAL4,XXREAL_0,TARSKI,CARD_1,SUPINF_2,ARYTM_1,NAT_1,FUNCT_2,FINSET_1,FUNCOP_1,VALUED_1,RLSUB_1,QC_LANG1,BINOP_1,ZFMISC_1,XREAL_0,ORDINAL1,RLVECT_2,LATTICES,VECTSP_1,PRE_POLY;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,FINSET_1,FINSEQ_1,RELAT_1,FUNCT_1,RELSET_1,PRE_POLY,PARTFUN1,FUNCT_2,FUNCOP_1,DOMAIN_1,VALUED_1,FINSEQ_4,STRUCT_0,ALGSTR_0,GROUP_1,RLVECT_1,VECTSP_1,REAL_1,RLSUB_1,NAT_1,BINOP_1,XXREAL_0,CKB1,CKB9,CKB21,CKB22,CKB23,CKB26,CKB28,CKB32,CKB38,CKB48,CKB49,CKB55,CKB63,CKB69,CKB74,CKB76,CKB77,CKB78,CKB79,CKB80,CKB91;
definitions FUNCT_1,RLSUB_1,TARSKI,XBOOLE_0,BINOP_1,RLVECT_1,RELAT_1,FUNCT_2,STRUCT_0,ALGSTR_0,CKB1,CKB9,CKB21,CKB23,CKB26,CKB28,CKB32,CKB38,CKB48,CKB49,CKB55,CKB63,CKB69,CKB74,CKB76,CKB77,CKB78,CKB79,CKB80,CKB91;
theorems BINOP_1,CARD_1,CARD_2,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FUNCT_1,FUNCT_2,NAT_1,RLSUB_1,RLSUB_2,RLVECT_1,TARSKI,ZFMISC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,FUNCOP_1,XREAL_1,XXREAL_0,ORDINAL1,STRUCT_0,PARTFUN1,VALUED_1,XREAL_0,VECTSP_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB76,CKB77,CKB78,CKB79,CKB80,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91;
schemes BINOP_1,FINSEQ_1,FUNCT_2,NAT_1,XBOOLE_0;
registrations SUBSET_1,FUNCT_1,RELSET_1,FUNCT_2,FINSET_1,NUMBERS,XREAL_0,STRUCT_0,RLVECT_1,RLSUB_1,VALUED_1,VALUED_0,MEMBERED,FINSEQ_1,CARD_1,VECTSP_1,VECTSP_2,CKB24,CKB75,CKB81,CKB82;
constructors PARTFUN1,BINOP_1,DOMAIN_1,FUNCOP_1,XXREAL_0,REAL_1,NAT_1,FINSEQ_4,RLSUB_1,VALUED_1,RELSET_1,VECTSP_1,PRE_POLY,RLVECT_1,CKB1,CKB9,CKB21,CKB23,CKB26,CKB28,CKB32,CKB38,CKB48,CKB49,CKB55,CKB63,CKB69,CKB74,CKB76,CKB77,CKB78,CKB79,CKB80,CKB91;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve V for RealLinearSpace;
reserve v for (VECTOR of V);
reserve a for Real;
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
theorem
Th100: (for R being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr holds (for a being (Element of R) holds (for V being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R holds (for F,G being (FinSequence of V) holds ((( len F ) = ( len G ) & (for k holds (for v being (Element of V) holds ((k in ( dom F ) & v = ( G . k )) implies ( F . k ) = ( a * v ))))) implies ( Sum F ) = ( a * ( Sum G ) ))))))
proof
let R being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
let a being (Element of R);
let V being  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over R;
let F being (FinSequence of V);
let G being (FinSequence of V);
defpred P[ (Element of ( NAT )) ]
 means
(for H,I being (FinSequence of V) holds (((( len H ) = ( len I ) & ( len H ) = $1) & (for k holds (for v being (Element of V) holds ((k in ( dom H ) & v = ( I . k )) implies ( H . k ) = ( a * v ))))) implies ( Sum H ) = ( a * ( Sum I ) )));
A1: (P[ n ] implies P[ ( n + 1 ) ])
proof
assume A2: (for H,I being (FinSequence of V) holds (((( len H ) = ( len I ) & ( len H ) = n) & (for k holds (for v being (Element of V) holds ((k in ( dom H ) & v = ( I . k )) implies ( H . k ) = ( a * v ))))) implies ( Sum H ) = ( a * ( Sum I ) )));
let H being (FinSequence of V);
let I being (FinSequence of V);
assume that
A3: ( len H ) = ( len I )
and
A4: ( len H ) = ( n + 1 )
and
A5: (for k holds (for v being (Element of V) holds ((k in ( dom H ) & v = ( I . k )) implies ( H . k ) = ( a * v ))));
reconsider p = ( H | ( Seg n ) ),q = ( I | ( Seg n ) ) as (FinSequence of V) by FINSEQ_1:18;
A6: n <= ( n + 1 ) by NAT_1:12;
then A7: q = ( I | ( dom q ) ) by A3,A4,FINSEQ_1:17;
A8: ( len p ) = n by A4,A6,FINSEQ_1:17;
A9: ( len q ) = n by A3,A4,A6,FINSEQ_1:17;
A10:now
A11: ( dom p ) c= ( dom H ) by A4,A6,A8,FINSEQ_3:30;
let k;
let v being (Element of V);
assume that
A12: k in ( dom p )
and
A13: v = ( q . k );
( dom q ) = ( dom p ) by A8,A9,FINSEQ_3:29;
then ( I . k ) = ( q . k ) by A12,FUNCT_1:47;
then ( H . k ) = ( a * v ) by A5,A12,A13,A11;
hence ( p . k ) = ( a * v ) by A12,FUNCT_1:47;
end;
( n + 1 ) in ( Seg ( n + 1 ) ) by FINSEQ_1:4;
then A14: ( n + 1 ) in ( dom H ) by A4,FINSEQ_1:def 3;
( dom H ) = ( dom I ) by A3,FINSEQ_3:29;
then reconsider v1 = ( H . ( n + 1 ) ),v2 = ( I . ( n + 1 ) ) as (Element of V) by A14,FINSEQ_2:11;
A15: v1 = ( a * v2 ) by A5,A14;
p = ( H | ( dom p ) ) by A4,A6,FINSEQ_1:17;
hence ( Sum H ) = ( ( Sum p ) + v1 ) by A4,A8,RLVECT_1:38
.= ( ( a * ( Sum q ) ) + ( a * v2 ) ) by A2,A8,A9,A10,A15
.= ( a * ( ( Sum q ) + v2 ) ) by VECTSP_1:def 14
.= ( a * ( Sum I ) ) by A3,A4,A9,A7,RLVECT_1:38;
end;
A16: P[ ( 0 ) ]
proof
let H being (FinSequence of V);
let I being (FinSequence of V);
assume that
A17: ( len H ) = ( len I )
and
A18: ( len H ) = ( 0 )
and
(for k holds (for v being (Element of V) holds ((k in ( dom H ) & v = ( I . k )) implies ( H . k ) = ( a * v ))));
H = ( <*> (the carrier of V) ) by A18;
then A19: ( Sum H ) = ( 0. V ) by RLVECT_1:43;
I = ( <*> (the carrier of V) ) by A17,A18;
then ( Sum I ) = ( 0. V ) by RLVECT_1:43;
hence thesis by A19,VECTSP_1:14;
end;
(for n holds P[ n ]) from NAT_1:sch 1(A16,A1);
hence thesis;
end;
