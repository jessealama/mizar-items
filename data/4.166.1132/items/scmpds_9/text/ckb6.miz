environ
vocabularies NUMBERS,SCMPDS_2,AMI_1,INT_1,FUNCOP_1,SUBSET_1,FSM_1,FUNCT_1,AMISTD_1,FUNCT_4,XBOOLE_0,SETFAM_1,AMI_3,COMPLEX1,ARYTM_3,ORDINAL1,XXREAL_0,ARYTM_1,CARD_1,AMI_2,RELAT_1,GRAPHSP,TARSKI,FINSET_1,XREAL_0,CARD_3,AMI_WSTD;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,ORDINAL1,CARD_3,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,FUNCT_1,INT_1,NAT_1,FINSET_1,COMPLEX1,INT_2,PARTFUN1,FUNCOP_1,RELAT_1,FUNCT_4,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,SCMPDS_2,SCMPDS_3,AMISTD_1,AMI_WSTD,CKB1;
definitions TARSKI,XBOOLE_0,NAT_1,AMI_WSTD,AMISTD_1,COMPOS_1,MEMSTR_0;
theorems AMI_WSTD,SETFAM_1,XBOOLE_0,SCMPDS_1,SCMPDS_2,ABSVALUE,INT_1,TARSKI,AMI_2,NAT_1,XBOOLE_1,FUNCT_4,PRE_CIRC,WSIERP_1,PEPIN,COMPLEX1,XREAL_1,FUNCT_7,NAT_D,ZFMISC_1,PBOOLE,AMISTD_1,COMPOS_1,MEMSTR_0,CARD_3,CKB2,CKB4,CKB5;
registrations SETFAM_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,CARD_3,SCMPDS_2,FUNCT_1,FUNCT_2,XBOOLE_0,FUNCOP_1,FUNCT_4,AMISTD_1,COMPOS_1,FUNCT_7,RELAT_1,MEMSTR_0,CKB3;
constructors XXREAL_0,REAL_1,NAT_D,REALSET1,SCMPDS_1,SCMPDS_3,AMI_WSTD,PRE_POLY,AMISTD_1,FUNCT_4,FUNCT_7,FUNCOP_1,MEMSTR_0,CKB1;
requirements BOOLE,SUBSET,NUMERALS,ARITHM,REAL;
begin
reserve l for (Element of ( NAT ));
reserve k for Integer;
theorem
Th9: ( NIC (( goto k ),l) ) = { ( abs ( k + l ) ) }
proof
set s = the (State of ( SCMPDS ));
set i = ( goto k );
set t = ( abs ( k + l ) );
set I = i;
reconsider n = l as (Element of ( NAT ));
reconsider il1 = l as (Element of ( ObjectKind ( IC ( SCMPDS ) ) )) by MEMSTR_0:def 3;
hereby
let x being set;
assume x in ( NIC (i,l) );
then consider s being (Element of ( product (the Object-Kind of ( SCMPDS )) )) such that A1: x = ( IC ( Exec (i,s) ) ) and A2: ( IC s ) = l;
A3: (ex m1 being (Element of ( NAT )) st (m1 = ( IC s ) & ( ICplusConst (s,k) ) = ( abs ( m1 + k ) ))) by SCMPDS_2:def 18;
x = t by A1,A2,A3,SCMPDS_2:54;
hence x in { t } by TARSKI:def 1;
end;
let x being set;
reconsider u = the n -started (State of ( SCMPDS )) as (Element of ( product (the Object-Kind of ( SCMPDS )) )) by CARD_3:107;
A4: ( IC u ) = n by MEMSTR_0:def 8;
consider m1 being (Element of ( NAT )) such that A5: m1 = ( IC u ) and A6: ( ICplusConst (u,k) ) = ( abs ( m1 + k ) ) by SCMPDS_2:def 18;
assume x in { t };
then x = ( abs ( m1 + k ) ) by A4,A5,TARSKI:def 1
.= ( IC ( Exec (i,u) ) ) by A6,SCMPDS_2:54;
hence thesis by A4;
end;
