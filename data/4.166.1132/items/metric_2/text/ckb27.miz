environ
vocabularies NUMBERS,XBOOLE_0,METRIC_1,SUBSET_1,PARTFUN1,CARD_1,RELAT_2,TARSKI,STRUCT_0,XXREAL_0,ARYTM_3,ZFMISC_1,FUNCT_1,METRIC_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,FUNCT_2,DOMAIN_1,STRUCT_0,METRIC_1,MCART_1,XXREAL_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB23;
definitions CKB1,CKB4,CKB5,CKB23;
theorems TARSKI,BINOP_1,METRIC_1,SUBSET_1,MCART_1,XBOOLE_0,XXREAL_0,CKB1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB25,CKB26;
schemes FRAENKEL,BINOP_1;
registrations SUBSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,STRUCT_0,METRIC_1,XBOOLE_0,CKB17,CKB24;
constructors DOMAIN_1,XXREAL_0,REAL_1,MEMBERED,METRIC_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB23;
requirements REAL,SUBSET,BOOLE,ARITHM;
begin
reserve V for set;
theorem
Th26: (for M being non  empty MetrStruct holds (V in ( M -neighbour ) iff V is (equivalence_class of M)))
proof
let M being non  empty MetrStruct;
A1: (V is (equivalence_class of M) implies V in ( M -neighbour ))
proof
assume V is (equivalence_class of M);
then (ex x being (Element of M) st V = ( x -neighbour )) by CKB5:def 1;
hence thesis;
end;
(V in ( M -neighbour ) implies V is (equivalence_class of M))
proof
assume V in ( M -neighbour );
then (ex x being (Element of M) st V = ( x -neighbour )) by CKB25:1;
hence thesis by CKB5:def 1;
end;
hence thesis by A1;
end;
