environ
vocabularies XBOOLE_0,PRE_TOPC,TARSKI,SUBSET_1,FUNCT_1,RELAT_1,FUNCT_4,STRUCT_0,RCOMP_1,SETFAM_1,CONNSP_2,ORDINAL2,FUNCOP_1,FUNCT_3,ZFMISC_1,TSEP_1,CONNSP_1,TMAP_1,PARTFUN1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_4,FUNCOP_1,DOMAIN_1,STRUCT_0,PRE_TOPC,CONNSP_1,CONNSP_2,BORSUK_1,TSEP_1,CKB2;
definitions PRE_TOPC,BORSUK_1,XBOOLE_0,STRUCT_0,RELAT_1,CKB2;
theorems TARSKI,SUBSET_1,FUNCT_1,FUNCT_2,FUNCT_4,ZFMISC_1,PRE_TOPC,CONNSP_2,TOPS_1,TOPS_2,BORSUK_1,TSEP_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,CONNSP_1,CKB2,CKB3,CKB4;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,FUNCT_2,STRUCT_0,PRE_TOPC,BORSUK_1,TSEP_1,RELSET_1,RELAT_1,PARTFUN1,TOPS_1,CKB1;
constructors SETFAM_1,FUNCT_4,CONNSP_1,BORSUK_1,TSEP_1,FUNCOP_1,CKB2;
requirements BOOLE,SUBSET;
begin
reserve A for non empty set;
reserve B for non empty set;
reserve A1 for non empty (Subset of A);
reserve A2 for non empty (Subset of A);
theorem
(for f1 being (Function of A1,B) holds (for f2 being (Function of A2,B) holds (( f1 | ( A1 /\ A2 ) ) = ( f2 | ( A1 /\ A2 ) ) implies ( f1 union f2 ) = ( f2 union f1 ))))
proof
let f1 being (Function of A1,B);
let f2 being (Function of A2,B);
assume ( f1 | ( A1 /\ A2 ) ) = ( f2 | ( A1 /\ A2 ) );
then (( ( f1 union f2 ) | A1 ) = f1 & ( ( f1 union f2 ) | A2 ) = f2) by CKB2:def 1;
hence thesis by CKB4:1;
end;
