environ
vocabularies FUNCT_1,RELAT_1,XBOOLE_0,ZFMISC_1,TARSKI,SUBSET_1,MCART_1,FUNCT_2,PARTFUN1,CARD_1,FUNCOP_1,FUNCT_4,BINOP_1,FUNCT_5;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,BINOP_1,FUNCT_3,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4;
definitions TARSKI,FUNCT_1,WELLORD2,XBOOLE_0,BINOP_1,FUNCOP_1;
theorems TARSKI,ZFMISC_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,FUNCT_3,RELAT_1,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4,ENUMSET1,XBOOLE_0,XBOOLE_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes FUNCT_1,PARTFUN1,XBOOLE_0,CKB1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1;
constructors PARTFUN1,WELLORD2,BINOP_1,FUNCT_3,FUNCOP_1,FUNCT_4,CARD_1,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve f for Function;
theorem
Th20: (( proj1 ( dom f ) ) = ( proj2 ( dom ( ~ f ) ) ) & ( proj2 ( dom f ) ) = ( proj1 ( dom ( ~ f ) ) ))
proof
thus ( proj1 ( dom f ) ) c= ( proj2 ( dom ( ~ f ) ) )
proof
let x;
assume x in ( proj1 ( dom f ) );
then consider y such that A1: [ x,y ] in ( dom f ) by RELAT_1:def 4;
[ y,x ] in ( dom ( ~ f ) ) by A1,FUNCT_4:42;
hence thesis by RELAT_1:def 5;
end;

thus ( proj2 ( dom ( ~ f ) ) ) c= ( proj1 ( dom f ) )
proof
let y;
assume y in ( proj2 ( dom ( ~ f ) ) );
then consider x such that A2: [ x,y ] in ( dom ( ~ f ) ) by RELAT_1:def 5;
[ y,x ] in ( dom f ) by A2,FUNCT_4:42;
hence thesis by RELAT_1:def 4;
end;

thus ( proj2 ( dom f ) ) c= ( proj1 ( dom ( ~ f ) ) )
proof
let y;
assume y in ( proj2 ( dom f ) );
then consider x such that A3: [ x,y ] in ( dom f ) by RELAT_1:def 5;
[ y,x ] in ( dom ( ~ f ) ) by A3,FUNCT_4:42;
hence thesis by RELAT_1:def 4;
end;

thus ( proj1 ( dom ( ~ f ) ) ) c= ( proj2 ( dom f ) )
proof
let x;
assume x in ( proj1 ( dom ( ~ f ) ) );
then consider y such that A4: [ x,y ] in ( dom ( ~ f ) ) by RELAT_1:def 4;
[ y,x ] in ( dom f ) by A4,FUNCT_4:42;
hence thesis by RELAT_1:def 5;
end;

end;
