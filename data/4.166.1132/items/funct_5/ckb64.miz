environ
vocabularies FUNCT_1,RELAT_1,XBOOLE_0,ZFMISC_1,TARSKI,SUBSET_1,MCART_1,FUNCT_2,PARTFUN1,CARD_1,FUNCOP_1,FUNCT_4,BINOP_1,FUNCT_5;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,BINOP_1,FUNCT_3,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4,CKB20,CKB21,CKB22,CKB23;
definitions TARSKI,FUNCT_1,WELLORD2,XBOOLE_0,BINOP_1,FUNCOP_1,CKB20,CKB21,CKB22,CKB23;
theorems TARSKI,ZFMISC_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,FUNCT_3,RELAT_1,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4,ENUMSET1,XBOOLE_0,XBOOLE_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63;
schemes FUNCT_1,PARTFUN1,XBOOLE_0,CKB1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1;
constructors PARTFUN1,WELLORD2,BINOP_1,FUNCT_3,FUNCOP_1,FUNCT_4,CARD_1,RELSET_1,CKB20,CKB21,CKB22,CKB23;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve x for set;
reserve y for set;
reserve z for set;
reserve f for Function;
theorem
Th66: ( Funcs (X,{ x }) ) = { ( X --> x ) }
proof
thus ( Funcs (X,{ x }) ) c= { ( X --> x ) }
proof
let y;
assume y in ( Funcs (X,{ x }) );
then consider f such that A1: y = f and A2: ( dom f ) = X and A3: ( rng f ) c= { x } by FUNCT_2:def 2;
A4:now
set z = the (Element of X);
A5: (X <> ( {} ) implies z in X);
A6: ( dom ( ( {} ) --> x ) ) = ( {} );
assume (for z holds (not z in X));
hence f = ( X --> x ) by A2,A5,A6;
end;
now
given z such that
A7: z in X;

( f . z ) in ( rng f ) by A2,A7,FUNCT_1:def 3;
then (( f . z ) = x & { ( f . z ) } c= ( rng f )) by A3,TARSKI:def 1,ZFMISC_1:31;
then ( rng f ) = { x } by A3,XBOOLE_0:def 10;
hence f = ( X --> x ) by A2,FUNCOP_1:9;
end;
hence thesis by A1,A4,TARSKI:def 1;
end;

let y;
assume y in { ( X --> x ) };
then A8: y = ( X --> x ) by TARSKI:def 1;
(( dom ( X --> x ) ) = X & ( rng ( X --> x ) ) c= { x }) by FUNCOP_1:13;
hence thesis by A8,FUNCT_2:def 2;
end;
