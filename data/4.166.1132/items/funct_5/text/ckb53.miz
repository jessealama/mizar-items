environ
vocabularies FUNCT_1,RELAT_1,XBOOLE_0,ZFMISC_1,TARSKI,SUBSET_1,MCART_1,FUNCT_2,PARTFUN1,CARD_1,FUNCOP_1,FUNCT_4,BINOP_1,FUNCT_5;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,BINOP_1,FUNCT_3,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4,CKB20,CKB21,CKB22,CKB23;
definitions TARSKI,FUNCT_1,WELLORD2,XBOOLE_0,BINOP_1,FUNCOP_1,CKB20,CKB21,CKB22,CKB23;
theorems TARSKI,ZFMISC_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,FUNCT_3,RELAT_1,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4,ENUMSET1,XBOOLE_0,XBOOLE_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52;
schemes FUNCT_1,PARTFUN1,XBOOLE_0,CKB1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1;
constructors PARTFUN1,WELLORD2,BINOP_1,FUNCT_3,FUNCOP_1,FUNCT_4,CARD_1,RELSET_1,CKB20,CKB21,CKB22,CKB23;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve x for set;
reserve y for set;
reserve f for Function;
reserve g for Function;
reserve h for Function;
theorem
Th55: ((( rng f ) c= ( Funcs (X,Y) ) & X <> ( {} )) implies (( curry ( uncurry f ) ) = f & ( curry' ( uncurry' f ) ) = f))
proof
assume that
A1: ( rng f ) c= ( Funcs (X,Y) )
and
A2: X <> ( {} );
A3: ( dom ( uncurry f ) ) = [: ( dom f ),X :] by A1,CKB31:1;
A4:now
A5:now
let x;
assume A6: x in ( dom f );
then consider h such that A7: ((( ( curry ( uncurry f ) ) . x ) = h & ( dom h ) = X) & ( rng h ) c= ( rng ( uncurry f ) )) and A8: (y in X implies ( h . y ) = ( ( uncurry f ) . (x,y) )) by A2,A3,CKB34:1;
( f . x ) in ( rng f ) by A6,FUNCT_1:def 3;
then consider g such that A9: (( f . x ) = g & ( dom g ) = X) and ( rng g ) c= Y by A1,FUNCT_2:def 2;
now
let y;
assume A10: y in X;
then ( ( uncurry f ) . (x,y) ) = ( g . y ) by A6,A9,CKB43:1;
hence ( g . y ) = ( h . y ) by A8,A10;
end;
hence ( f . x ) = ( ( curry ( uncurry f ) ) . x ) by A9,A7,FUNCT_1:2;
end;
assume ( dom f ) <> ( {} );
then ( dom ( curry ( uncurry f ) ) ) = ( dom f ) by A2,A3,CKB29:1;
hence ( curry ( uncurry f ) ) = f by A5,FUNCT_1:2;
end;
A11:now
assume ( dom f ) = ( {} );
then (( dom ( uncurry f ) ) = ( {} ) & f = ( {} )) by A3,ZFMISC_1:90;
hence ( curry ( uncurry f ) ) = f by CKB47:1,RELAT_1:41;
end;
hence ( curry ( uncurry f ) ) = f by A4;
thus thesis by A3,A11,A4,FUNCT_4:52;
end;
