environ
vocabularies FUNCT_1,RELAT_1,XBOOLE_0,ZFMISC_1,TARSKI,SUBSET_1,MCART_1,FUNCT_2,PARTFUN1,CARD_1,FUNCOP_1,FUNCT_4,BINOP_1,FUNCT_5;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,BINOP_1,FUNCT_3,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4,CKB20,CKB21,CKB22,CKB23;
definitions TARSKI,FUNCT_1,WELLORD2,XBOOLE_0,BINOP_1,FUNCOP_1,CKB20,CKB21,CKB22,CKB23;
theorems TARSKI,ZFMISC_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,FUNCT_3,RELAT_1,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4,ENUMSET1,XBOOLE_0,XBOOLE_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50;
schemes FUNCT_1,PARTFUN1,XBOOLE_0,CKB1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1;
constructors PARTFUN1,WELLORD2,BINOP_1,FUNCT_3,FUNCOP_1,FUNCT_4,CARD_1,RELSET_1,CKB20,CKB21,CKB22,CKB23;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve x for set;
reserve y for set;
reserve f1 for Function;
reserve f2 for Function;
reserve g1 for Function;
reserve g2 for Function;
theorem
Th53: ((((( rng f1 ) c= ( Funcs (X,Y) ) & ( rng f2 ) c= ( Funcs (X,Y) )) & X <> ( {} )) & ( uncurry f1 ) = ( uncurry f2 )) implies f1 = f2)
proof
assume that
A1: ( rng f1 ) c= ( Funcs (X,Y) )
and
A2: ( rng f2 ) c= ( Funcs (X,Y) )
and
A3: X <> ( {} )
and
A4: ( uncurry f1 ) = ( uncurry f2 );
A5: (( dom ( uncurry f1 ) ) = [: ( dom f1 ),X :] & ( dom ( uncurry f2 ) ) = [: ( dom f2 ),X :]) by A1,A2,CKB31:1;
then (( dom f1 ) = ( {} ) implies ( dom f1 ) = ( dom f2 )) by A3,A4,ZFMISC_1:90;
then A6: ( dom f1 ) = ( dom f2 ) by A3,A4,A5,ZFMISC_1:110;
now
let x;
assume A7: x in ( dom f1 );
then ( f1 . x ) in ( rng f1 ) by FUNCT_1:def 3;
then consider g1 such that A8: ( f1 . x ) = g1 and A9: ( dom g1 ) = X and ( rng g1 ) c= Y by A1,FUNCT_2:def 2;
( f2 . x ) in ( rng f2 ) by A6,A7,FUNCT_1:def 3;
then consider g2 such that A10: ( f2 . x ) = g2 and A11: ( dom g2 ) = X and ( rng g2 ) c= Y by A2,FUNCT_2:def 2;
now
let y;
A12: (( [ x,y ] `1 ) = x & ( [ x,y ] `2 ) = y) by MCART_1:7;
assume A13: y in X;
then A14: [ x,y ] in ( dom ( uncurry f2 ) ) by A4,A7,A8,A9,CKB21:def 1;
[ x,y ] in ( dom ( uncurry f1 ) ) by A7,A8,A9,A13,CKB21:def 1;
then ( ( uncurry f1 ) . [ x,y ] ) = ( g1 . y ) by A8,A12,CKB21:def 1;
hence ( g1 . y ) = ( g2 . y ) by A4,A10,A14,A12,CKB21:def 1;
end;
hence ( f1 . x ) = ( f2 . x ) by A8,A9,A10,A11,FUNCT_1:2;
end;
hence thesis by A6,FUNCT_1:2;
end;
