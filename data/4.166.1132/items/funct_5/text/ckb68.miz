environ
vocabularies FUNCT_1,RELAT_1,XBOOLE_0,ZFMISC_1,TARSKI,SUBSET_1,MCART_1,FUNCT_2,PARTFUN1,CARD_1,FUNCOP_1,FUNCT_4,BINOP_1,FUNCT_5;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,BINOP_1,FUNCT_3,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4,CKB20,CKB21,CKB22,CKB23;
definitions TARSKI,FUNCT_1,WELLORD2,XBOOLE_0,BINOP_1,FUNCOP_1,CKB20,CKB21,CKB22,CKB23;
theorems TARSKI,ZFMISC_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,FUNCT_3,RELAT_1,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4,ENUMSET1,XBOOLE_0,XBOOLE_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67;
schemes FUNCT_1,PARTFUN1,XBOOLE_0,CKB1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1;
constructors PARTFUN1,WELLORD2,BINOP_1,FUNCT_3,FUNCOP_1,FUNCT_4,CARD_1,RELSET_1,CKB20,CKB21,CKB22,CKB23;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve Z for set;
reserve x for set;
reserve y for set;
reserve x1 for set;
reserve x2 for set;
reserve f for Function;
reserve g for Function;
reserve g1 for Function;
reserve g2 for Function;
theorem
(( Funcs ([: X,Y :],Z) ),( Funcs (X,( Funcs (Y,Z) )) ) are_equipotent  & ( card ( Funcs ([: X,Y :],Z) ) ) = ( card ( Funcs (X,( Funcs (Y,Z) )) ) ))
proof
deffunc F(Function) = ( curry $1 );
consider f such that A1: (( dom f ) = ( Funcs ([: X,Y :],Z) ) & (for g holds (g in ( Funcs ([: X,Y :],Z) ) implies ( f . g ) = F(g)))) from CKB1:sch 1;
A2:now
assume A3: [: X,Y :] <> ( {} );
thus ( Funcs ([: X,Y :],Z) ),( Funcs (X,( Funcs (Y,Z) )) ) are_equipotent 
proof
take f;
thus f is  one-to-one
proof
let x1;
let x2;
assume that
A4: x1 in ( dom f )
and
A5: x2 in ( dom f )
and
A6: ( f . x1 ) = ( f . x2 );
consider g2 such that A7: x2 = g2 and A8: ( dom g2 ) = [: X,Y :] and ( rng g2 ) c= Z by A1,A5,FUNCT_2:def 2;
A9: ( f . x2 ) = ( curry g2 ) by A1,A5,A7;
consider g1 such that A10: x1 = g1 and A11: ( dom g1 ) = [: X,Y :] and ( rng g1 ) c= Z by A1,A4,FUNCT_2:def 2;
( f . x1 ) = ( curry g1 ) by A1,A4,A10;
hence thesis by A6,A10,A11,A7,A8,A9,CKB49:1;
end;

thus ( dom f ) = ( Funcs ([: X,Y :],Z) ) by A1;
thus ( rng f ) c= ( Funcs (X,( Funcs (Y,Z) )) )
proof
let y;
assume y in ( rng f );
then consider x such that A12: x in ( dom f ) and A13: y = ( f . x ) by FUNCT_1:def 3;
consider g such that A14: x = g and A15: ( dom g ) = [: X,Y :] and A16: ( rng g ) c= Z by A1,A12,FUNCT_2:def 2;
A17: ( dom ( curry g ) ) = X by A3,A15,CKB29:1;
(( rng ( curry g ) ) c= ( Funcs (Y,( rng g )) ) & ( Funcs (Y,( rng g )) ) c= ( Funcs (Y,Z) )) by A15,A16,CKB40:1,CKB61:1;
then A18: ( rng ( curry g ) ) c= ( Funcs (Y,Z) ) by XBOOLE_1:1;
y = ( curry g ) by A1,A12,A13,A14;
hence thesis by A17,A18,FUNCT_2:def 2;
end;

let y;
assume y in ( Funcs (X,( Funcs (Y,Z) )) );
then consider g such that A19: y = g and A20: ( dom g ) = X and A21: ( rng g ) c= ( Funcs (Y,Z) ) by FUNCT_2:def 2;
(( dom ( uncurry g ) ) = [: X,Y :] & ( rng ( uncurry g ) ) c= Z) by A20,A21,CKB31:1,CKB46:1;
then A22: ( uncurry g ) in ( Funcs ([: X,Y :],Z) ) by FUNCT_2:def 2;
Y <> ( {} ) by A3,ZFMISC_1:90;
then ( curry ( uncurry g ) ) = g by A21,CKB53:1;
then ( f . ( uncurry g ) ) = y by A1,A19,A22;
hence thesis by A1,A22,FUNCT_1:def 3;
end;

hence ( card ( Funcs ([: X,Y :],Z) ) ) = ( card ( Funcs (X,( Funcs (Y,Z) )) ) ) by CARD_1:5;
end;
now
assume A23: [: X,Y :] = ( {} );
then A24: ( Funcs ([: X,Y :],Z) ) = { ( {} ) } by CKB62:1;
A25:now
assume Y = ( {} );
then ( Funcs (Y,Z) ) = { ( {} ) } by CKB62:1;
then ( Funcs (X,( Funcs (Y,Z) )) ) = { ( X --> ( {} ) ) } by CKB64:1;
hence ( Funcs ([: X,Y :],Z) ),( Funcs (X,( Funcs (Y,Z) )) ) are_equipotent  by A24,CARD_1:28;
end;
(X = ( {} ) or Y = ( {} )) by A23;
hence ( Funcs ([: X,Y :],Z) ),( Funcs (X,( Funcs (Y,Z) )) ) are_equipotent  by A24,A25,CKB62:1;
(X = ( {} ) implies ( Funcs (X,( Funcs (Y,Z) )) ) = { ( {} ) }) by CKB62:1;
hence ( card ( Funcs ([: X,Y :],Z) ) ) = ( card ( Funcs (X,( Funcs (Y,Z) )) ) ) by A23,A25,CKB62:1,CARD_1:5;
end;
hence thesis by A2;
end;
