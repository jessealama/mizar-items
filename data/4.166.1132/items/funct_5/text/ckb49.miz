environ
vocabularies FUNCT_1,RELAT_1,XBOOLE_0,ZFMISC_1,TARSKI,SUBSET_1,MCART_1,FUNCT_2,PARTFUN1,CARD_1,FUNCOP_1,FUNCT_4,BINOP_1,FUNCT_5;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,BINOP_1,FUNCT_3,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4,CKB20,CKB21,CKB22,CKB23;
definitions TARSKI,FUNCT_1,WELLORD2,XBOOLE_0,BINOP_1,FUNCOP_1,CKB20,CKB21,CKB22,CKB23;
theorems TARSKI,ZFMISC_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,FUNCT_3,RELAT_1,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4,ENUMSET1,XBOOLE_0,XBOOLE_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48;
schemes FUNCT_1,PARTFUN1,XBOOLE_0,CKB1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1;
constructors PARTFUN1,WELLORD2,BINOP_1,FUNCT_3,FUNCOP_1,FUNCT_4,CARD_1,RELSET_1,CKB20,CKB21,CKB22,CKB23;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve y for set;
reserve z for set;
reserve f1 for Function;
reserve f2 for Function;
theorem
Th51: (((( dom f1 ) = [: X,Y :] & ( dom f2 ) = [: X,Y :]) & ( curry f1 ) = ( curry f2 )) implies f1 = f2)
proof
assume that
A1: ( dom f1 ) = [: X,Y :]
and
A2: ( dom f2 ) = [: X,Y :]
and
A3: ( curry f1 ) = ( curry f2 );
A4:now
assume [: X,Y :] <> ( {} );
now
let z;
assume A5: z in [: X,Y :];
then consider g1 being Function such that A6: ( ( curry f1 ) . ( z `1 ) ) = g1 and ( dom g1 ) = Y and ( rng g1 ) c= ( rng f1 ) and A7: (for y holds (y in Y implies ( g1 . y ) = ( f1 . (( z `1 ),y) ))) by A1,CKB34:1,MCART_1:10;
A8: z = [ ( z `1 ),( z `2 ) ] by A5,MCART_1:21;
A9: ( z `2 ) in Y by A5,MCART_1:10;
then A10: ( f1 . (( z `1 ),( z `2 )) ) = ( g1 . ( z `2 ) ) by A7;
(ex g2 being Function st (((( ( curry f2 ) . ( z `1 ) ) = g2 & ( dom g2 ) = Y) & ( rng g2 ) c= ( rng f2 )) & (for y holds (y in Y implies ( g2 . y ) = ( f2 . (( z `1 ),y) ))))) by A2,A5,CKB34:1,MCART_1:10;
then ( f2 . (( z `1 ),( z `2 )) ) = ( g1 . ( z `2 ) ) by A3,A9,A6;
hence ( f1 . z ) = ( f2 . z ) by A8,A10;
end;
hence thesis by A1,A2,FUNCT_1:2;
end;
([: X,Y :] = ( {} ) implies (f1 = ( {} ) & f2 = ( {} ))) by A1,A2;
hence thesis by A4;
end;
