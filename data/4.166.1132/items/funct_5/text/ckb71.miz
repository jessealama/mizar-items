environ
vocabularies FUNCT_1,RELAT_1,XBOOLE_0,ZFMISC_1,TARSKI,SUBSET_1,MCART_1,FUNCT_2,PARTFUN1,CARD_1,FUNCOP_1,FUNCT_4,BINOP_1,FUNCT_5;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,BINOP_1,FUNCT_3,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4,CKB20,CKB21,CKB22,CKB23;
definitions TARSKI,FUNCT_1,WELLORD2,XBOOLE_0,BINOP_1,FUNCOP_1,CKB20,CKB21,CKB22,CKB23;
theorems TARSKI,ZFMISC_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,FUNCT_3,RELAT_1,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4,ENUMSET1,XBOOLE_0,XBOOLE_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70;
schemes FUNCT_1,PARTFUN1,XBOOLE_0,CKB1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1;
constructors PARTFUN1,WELLORD2,BINOP_1,FUNCT_3,FUNCOP_1,FUNCT_4,CARD_1,RELSET_1,CKB20,CKB21,CKB22,CKB23;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve x for set;
reserve y for set;
reserve z for set;
reserve t for set;
reserve x1 for set;
reserve x2 for set;
reserve f for Function;
reserve g for Function;
reserve g1 for Function;
reserve g2 for Function;
theorem
(x <> y implies (( Funcs ({ x,y },X) ),[: X,X :] are_equipotent  & ( card ( Funcs ({ x,y },X) ) ) = ( card [: X,X :] )))
proof
deffunc F(Function) = [ ( $1 . x ),( $1 . y ) ];
consider f such that A1: (( dom f ) = ( Funcs ({ x,y },X) ) & (for g holds (g in ( Funcs ({ x,y },X) ) implies ( f . g ) = F(g)))) from CKB1:sch 1;
assume A2: x <> y;
thus ( Funcs ({ x,y },X) ),[: X,X :] are_equipotent 
proof
defpred P[ set ]
 means
$1 = x;
take f;
thus f is  one-to-one
proof
let x1;
let x2;
assume that
A3: x1 in ( dom f )
and
A4: x2 in ( dom f )
and
A5: ( f . x1 ) = ( f . x2 );
consider g2 such that A6: x2 = g2 and A7: ( dom g2 ) = { x,y } and ( rng g2 ) c= X by A1,A4,FUNCT_2:def 2;
consider g1 such that A8: x1 = g1 and A9: ( dom g1 ) = { x,y } and ( rng g1 ) c= X by A1,A3,FUNCT_2:def 2;
A10: [ ( g1 . x ),( g1 . y ) ] = ( f . x1 ) by A1,A3,A8
.= [ ( g2 . x ),( g2 . y ) ] by A1,A4,A5,A6;
now
let z;
assume z in { x,y };
then (z = x or z = y) by TARSKI:def 2;
hence ( g1 . z ) = ( g2 . z ) by A10,ZFMISC_1:27;
end;
hence thesis by A8,A9,A6,A7,FUNCT_1:2;
end;

thus ( dom f ) = ( Funcs ({ x,y },X) ) by A1;
thus ( rng f ) c= [: X,X :]
proof
let z;
assume z in ( rng f );
then consider t such that A11: t in ( dom f ) and A12: z = ( f . t ) by FUNCT_1:def 3;
consider g such that A13: t = g and A14: ( dom g ) = { x,y } and A15: ( rng g ) c= X by A1,A11,FUNCT_2:def 2;
x in { x,y } by TARSKI:def 2;
then A16: ( g . x ) in ( rng g ) by A14,FUNCT_1:def 3;
y in { x,y } by TARSKI:def 2;
then A17: ( g . y ) in ( rng g ) by A14,FUNCT_1:def 3;
z = [ ( g . x ),( g . y ) ] by A1,A11,A12,A13;
hence thesis by A15,A16,A17,ZFMISC_1:87;
end;

let z;
deffunc F(set) = ( z `1 );
deffunc G(set) = ( z `2 );
consider g such that A18: (( dom g ) = { x,y } & (for t holds (t in { x,y } implies ((P[ t ] implies ( g . t ) = F(t)) & ((not P[ t ]) implies ( g . t ) = G(t)))))) from PARTFUN1:sch 1;
x in { x,y } by TARSKI:def 2;
then A19: ( g . x ) = ( z `1 ) by A18;
y in { x,y } by TARSKI:def 2;
then A20: ( g . y ) = ( z `2 ) by A2,A18;
assume A21: z in [: X,X :];
then A22: z = [ ( z `1 ),( z `2 ) ] by MCART_1:21;
A23: (( z `1 ) in X & ( z `2 ) in X) by A21,MCART_1:10;
( rng g ) c= X
proof
let t;
assume t in ( rng g );
then (ex a being set st (a in ( dom g ) & t = ( g . a ))) by FUNCT_1:def 3;
hence thesis by A23,A18;
end;
then A24: g in ( Funcs ({ x,y },X) ) by A18,FUNCT_2:def 2;
then ( f . g ) = [ ( g . x ),( g . y ) ] by A1;
hence thesis by A1,A22,A24,A19,A20,FUNCT_1:def 3;
end;

hence thesis by CARD_1:5;
end;
