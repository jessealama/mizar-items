environ
vocabularies FUNCT_1,RELAT_1,XBOOLE_0,ZFMISC_1,TARSKI,SUBSET_1,MCART_1,FUNCT_2,PARTFUN1,CARD_1,FUNCOP_1,FUNCT_4,BINOP_1,FUNCT_5;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,BINOP_1,FUNCT_3,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4,CKB20,CKB21,CKB22,CKB23;
definitions TARSKI,FUNCT_1,WELLORD2,XBOOLE_0,BINOP_1,FUNCOP_1,CKB20,CKB21,CKB22,CKB23;
theorems TARSKI,ZFMISC_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,FUNCT_3,RELAT_1,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4,ENUMSET1,XBOOLE_0,XBOOLE_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54;
schemes FUNCT_1,PARTFUN1,XBOOLE_0,CKB1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1;
constructors PARTFUN1,WELLORD2,BINOP_1,FUNCT_3,FUNCOP_1,FUNCT_4,CARD_1,RELSET_1,CKB20,CKB21,CKB22,CKB23;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve x for set;
reserve y for set;
reserve z for set;
reserve f for Function;
reserve g for Function;
theorem
Th57: (( dom f ) c= [: X,Y :] implies (( uncurry ( curry f ) ) = f & ( uncurry' ( curry' f ) ) = f))
proof
assume A1: ( dom f ) c= [: X,Y :];
A2:now
let X;
let Y;
let f;
assume that
A3: ( dom f ) c= [: X,Y :];
A4: ( dom ( uncurry ( curry f ) ) ) = ( dom f )
proof
thus ( dom ( uncurry ( curry f ) ) ) c= ( dom f )
proof
let x;
assume x in ( dom ( uncurry ( curry f ) ) );
then (ex y st (ex g st (ex z st (((x = [ y,z ] & y in ( dom ( curry f ) )) & g = ( ( curry f ) . y )) & z in ( dom g ))))) by CKB21:def 1;
hence thesis by CKB36:1;
end;

let x;
assume A5: x in ( dom f );
then A6: x = [ ( x `1 ),( x `2 ) ] by A3,MCART_1:21;
then reconsider g = ( ( curry f ) . ( x `1 ) ) as Function by A5,CKB24:1;
(( x `2 ) in ( dom g ) & ( x `1 ) in ( dom ( curry f ) )) by A5,A6,CKB24:1,CKB25:1;
hence thesis by A6,CKB43:1;
end;
now
let x;
assume A7: x in ( dom f );
then A8: x = [ ( x `1 ),( x `2 ) ] by A3,MCART_1:21;
then reconsider g = ( ( curry f ) . ( x `1 ) ) as Function by A7,CKB24:1;
( ( uncurry ( curry f ) ) . x ) = ( g . ( x `2 ) ) by A4,A7,CKB21:def 1;
then ( f . (( x `1 ),( x `2 )) ) = ( ( uncurry ( curry f ) ) . (( x `1 ),( x `2 )) ) by A7,A8,CKB25:1;
hence ( f . x ) = ( ( uncurry ( curry f ) ) . x ) by A8;
end;
hence ( uncurry ( curry f ) ) = f by A4,FUNCT_1:2;
end;
hence ( uncurry ( curry f ) ) = f by A1;
( dom ( ~ f ) ) c= [: Y,X :] by A1,FUNCT_4:45;
then ( uncurry ( curry ( ~ f ) ) ) = ( ~ f ) by A2;
hence thesis by A1,FUNCT_4:52;
end;
