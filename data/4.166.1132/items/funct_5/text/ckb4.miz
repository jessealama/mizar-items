environ
vocabularies FUNCT_1,RELAT_1,XBOOLE_0,ZFMISC_1,TARSKI,SUBSET_1,MCART_1,FUNCT_2,PARTFUN1,CARD_1,FUNCOP_1,FUNCT_4,BINOP_1,FUNCT_5;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,BINOP_1,FUNCT_3,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4;
definitions TARSKI,FUNCT_1,WELLORD2,XBOOLE_0,BINOP_1,FUNCOP_1;
theorems TARSKI,ZFMISC_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,FUNCT_3,RELAT_1,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4,ENUMSET1,XBOOLE_0,XBOOLE_1,CKB2,CKB3;
schemes FUNCT_1,PARTFUN1,XBOOLE_0,CKB1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1;
constructors PARTFUN1,WELLORD2,BINOP_1,FUNCT_3,FUNCOP_1,FUNCT_4,CARD_1,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve x for set;
reserve y for set;
theorem
Th5: (X c= Y implies (( proj1 X ) c= ( proj1 Y ) & ( proj2 X ) c= ( proj2 Y )))
proof
assume A1: (x in X implies x in Y);
thus ( proj1 X ) c= ( proj1 Y )
proof
let x;
assume x in ( proj1 X );
then consider y such that A2: [ x,y ] in X by RELAT_1:def 4;
[ x,y ] in Y by A1,A2;
hence thesis by RELAT_1:def 4;
end;

let y;
assume y in ( proj2 X );
then consider x such that A3: [ x,y ] in X by RELAT_1:def 5;
[ x,y ] in Y by A1,A3;
hence thesis by RELAT_1:def 5;
end;
