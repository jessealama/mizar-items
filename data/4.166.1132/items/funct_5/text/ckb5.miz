environ
vocabularies FUNCT_1,RELAT_1,XBOOLE_0,ZFMISC_1,TARSKI,SUBSET_1,MCART_1,FUNCT_2,PARTFUN1,CARD_1,FUNCOP_1,FUNCT_4,BINOP_1,FUNCT_5;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,BINOP_1,FUNCT_3,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4;
definitions TARSKI,FUNCT_1,WELLORD2,XBOOLE_0,BINOP_1,FUNCOP_1;
theorems TARSKI,ZFMISC_1,FUNCT_1,WELLORD2,FUNCT_2,MCART_1,FUNCT_3,RELAT_1,CARD_1,PARTFUN1,FUNCOP_1,FUNCT_4,ENUMSET1,XBOOLE_0,XBOOLE_1,CKB2,CKB3,CKB4;
schemes FUNCT_1,PARTFUN1,XBOOLE_0,CKB1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1;
constructors PARTFUN1,WELLORD2,BINOP_1,FUNCT_3,FUNCOP_1,FUNCT_4,CARD_1,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve x for set;
reserve y for set;
theorem
Th6: (( proj1 ( X \/ Y ) ) = ( ( proj1 X ) \/ ( proj1 Y ) ) & ( proj2 ( X \/ Y ) ) = ( ( proj2 X ) \/ ( proj2 Y ) ))
proof
thus ( proj1 ( X \/ Y ) ) c= ( ( proj1 X ) \/ ( proj1 Y ) )
proof
let x;
assume x in ( proj1 ( X \/ Y ) );
then consider y such that A1: [ x,y ] in ( X \/ Y ) by RELAT_1:def 4;
([ x,y ] in X or [ x,y ] in Y) by A1,XBOOLE_0:def 3;
then (x in ( proj1 X ) or x in ( proj1 Y )) by RELAT_1:def 4;
hence thesis by XBOOLE_0:def 3;
end;

A2: Y c= ( X \/ Y ) by XBOOLE_1:7;
then A3: ( proj1 Y ) c= ( proj1 ( X \/ Y ) ) by CKB4:1;
A4: ( proj2 Y ) c= ( proj2 ( X \/ Y ) ) by A2,CKB4:1;
A5: X c= ( X \/ Y ) by XBOOLE_1:7;
then ( proj1 X ) c= ( proj1 ( X \/ Y ) ) by CKB4:1;
hence ( ( proj1 X ) \/ ( proj1 Y ) ) c= ( proj1 ( X \/ Y ) ) by A3,XBOOLE_1:8;
thus ( proj2 ( X \/ Y ) ) c= ( ( proj2 X ) \/ ( proj2 Y ) )
proof
let y;
assume y in ( proj2 ( X \/ Y ) );
then consider x such that A6: [ x,y ] in ( X \/ Y ) by RELAT_1:def 5;
([ x,y ] in X or [ x,y ] in Y) by A6,XBOOLE_0:def 3;
then (y in ( proj2 X ) or y in ( proj2 Y )) by RELAT_1:def 5;
hence thesis by XBOOLE_0:def 3;
end;

( proj2 X ) c= ( proj2 ( X \/ Y ) ) by A5,CKB4:1;
hence thesis by A4,XBOOLE_1:8;
end;
