environ
vocabularies NUMBERS,REAL_1,SUBSET_1,SEQ_1,FDIFF_1,FUNCT_1,RCOMP_1,PARTFUN1,ARYTM_1,VALUED_0,SEQ_2,ORDINAL2,CARD_1,RELAT_1,ARYTM_3,XREAL_0,ORDINAL1,XXREAL_0,COMPLEX1,NAT_1,TARSKI,VALUED_1,FUNCT_2,FUNCOP_1,XXREAL_1,FCONT_1,SQUARE_1,XBOOLE_0,ORDINAL4,LIMFUNC1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,FUNCT_1,FUNCT_2,VALUED_0,VALUED_1,SEQ_1,RELSET_1,SEQ_2,PARTFUN1,SQUARE_1,PARTFUN2,RFUNCT_1,RCOMP_1,FCONT_1,FDIFF_1,LIMFUNC1,RECDEF_1,CKB1;
definitions TARSKI,XBOOLE_0,FDIFF_1,SQUARE_1,SUBSET_1,LIMFUNC1,PROB_1,VALUED_0,VALUED_1,SEQM_3;
theorems TARSKI,FUNCT_1,FUNCT_2,NAT_1,SEQ_1,SEQ_2,SEQM_3,SEQ_4,ABSVALUE,PARTFUN1,PARTFUN2,RCOMP_1,RFUNCT_1,RFUNCT_2,FCONT_1,FDIFF_1,SCHEME1,ROLLE,FCONT_3,FUNCT_3,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,XCMPLX_0,XCMPLX_1,COMPLEX1,FUNCOP_1,XREAL_1,XXREAL_0,ORDINAL1,VALUED_1,XXREAL_1,VALUED_0,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
schemes NAT_1,RECDEF_1,SEQ_1,SCHEME1,FUNCT_2,CKB11;
registrations ORDINAL1,RELSET_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,MEMBERED,SEQM_3,RCOMP_1,RFUNCT_2,FDIFF_1,FCONT_3,VALUED_0,VALUED_1,FUNCT_2,FUNCOP_1,SEQ_4;
constructors PARTFUN1,REAL_1,SQUARE_1,NAT_1,COMPLEX1,SEQ_2,SEQM_3,PROB_1,RCOMP_1,PARTFUN2,RFUNCT_1,RFUNCT_2,FCONT_1,LIMFUNC1,FDIFF_1,SEQ_1,VALUED_1,RECDEF_1,RELSET_1,BINOP_2,RVSUM_1,CKB1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x0 for Real;
reserve A for  open (Subset of ( REAL ));
reserve f1 for (PartFunc of ( REAL ),( REAL ));
reserve f2 for (PartFunc of ( REAL ),( REAL ));
theorem
(((f1 is_differentiable_on A & ( f1 .: A ) is  open  open (Subset of ( REAL ))) & f2 is_differentiable_on ( f1 .: A )) implies (( f2 * f1 ) is_differentiable_on A & ( ( f2 * f1 ) `| A ) = ( ( ( f2 `| ( f1 .: A ) ) * f1 ) (#) ( f1 `| A ) )))
proof
assume that
A1: f1 is_differentiable_on A
and
A2: ( f1 .: A ) is  open  open (Subset of ( REAL ))
and
A3: f2 is_differentiable_on ( f1 .: A );
A4: A c= ( dom f1 ) by A1,FDIFF_1:9;
A5:now
let x0;
assume A6: x0 in A;
hence A7: f1 is_differentiable_in x0 by A1,FDIFF_1:9;
thus x0 in ( dom f1 ) by A4,A6;
thus ( f1 . x0 ) in ( f1 .: A ) by A4,A6,FUNCT_1:def 6;
hence f2 is_differentiable_in ( f1 . x0 ) by A2,A3,FDIFF_1:9;
hence ( f2 * f1 ) is_differentiable_in x0 by A7,CKB17:1;
end;
( f1 .: A ) c= ( dom f2 ) by A2,A3,FDIFF_1:9;
then A8: A c= ( dom ( f2 * f1 ) ) by A4,FUNCT_3:3;
(for x0 holds (x0 in A implies ( f2 * f1 ) is_differentiable_in x0)) by A5;
hence A9: ( f2 * f1 ) is_differentiable_on A by A8,FDIFF_1:9;
then A10: ( dom ( ( f2 * f1 ) `| A ) ) = A by FDIFF_1:def 7;
A11:now
let x0;
assume A12: x0 in ( dom ( ( f2 * f1 ) `| A ) );
then A13: f1 is_differentiable_in x0 by A5,A10;
A14: x0 in ( dom f1 ) by A5,A10,A12;
A15: ( f1 . x0 ) in ( f1 .: A ) by A5,A10,A12;
A16: f2 is_differentiable_in ( f1 . x0 ) by A5,A10,A12;
thus ( ( ( f2 * f1 ) `| A ) . x0 ) = ( diff (( f2 * f1 ),x0) ) by A9,A10,A12,FDIFF_1:def 7
.= ( ( diff (f2,( f1 . x0 )) ) * ( diff (f1,x0) ) ) by A13,A16,CKB17:1
.= ( ( diff (f2,( f1 . x0 )) ) * ( ( f1 `| A ) . x0 ) ) by A1,A10,A12,FDIFF_1:def 7
.= ( ( ( f2 `| ( f1 .: A ) ) . ( f1 . x0 ) ) * ( ( f1 `| A ) . x0 ) ) by A3,A15,FDIFF_1:def 7
.= ( ( ( ( f2 `| ( f1 .: A ) ) * f1 ) . x0 ) * ( ( f1 `| A ) . x0 ) ) by A14,FUNCT_1:13
.= ( ( ( ( f2 `| ( f1 .: A ) ) * f1 ) (#) ( f1 `| A ) ) . x0 ) by VALUED_1:5;
end;
( dom ( f2 `| ( f1 .: A ) ) ) = ( f1 .: A ) by A3,FDIFF_1:def 7;
then A c= ( dom ( ( f2 `| ( f1 .: A ) ) * f1 ) ) by A4,FUNCT_1:101;
then ( dom ( ( f2 * f1 ) `| A ) ) = ( ( dom ( ( f2 `| ( f1 .: A ) ) * f1 ) ) /\ A ) by A10,XBOOLE_1:28
.= ( ( dom ( ( f2 `| ( f1 .: A ) ) * f1 ) ) /\ ( dom ( f1 `| A ) ) ) by A1,FDIFF_1:def 7
.= ( dom ( ( ( f2 `| ( f1 .: A ) ) * f1 ) (#) ( f1 `| A ) ) ) by VALUED_1:def 4;
hence thesis by A11,PARTFUN1:5;
end;
