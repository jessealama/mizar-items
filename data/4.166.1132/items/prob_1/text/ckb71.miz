environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,FUNCT_1,XREAL_0,ORDINAL1,SEQ_1,XXREAL_0,SEQ_2,ORDINAL2,CARD_1,ARYTM_3,COMPLEX1,ARYTM_1,SETFAM_1,FINSUB_1,ZFMISC_1,TARSKI,RELAT_1,CARD_3,EQREL_1,FUNCT_7,FUNCOP_1,NAT_1,RPR_1,REAL_1,VALUED_0,XXREAL_1,PROB_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSUB_1,RELAT_1,FUNCT_1,REAL_1,FUNCT_2,FUNCOP_1,FUNCT_7,ORDINAL1,CARD_3,NUMBERS,VALUED_0,XREAL_0,COMPLEX1,NAT_1,SEQ_1,SEQ_2,SETFAM_1,XXREAL_0,XXREAL_1,CKB2,CKB6,CKB17,CKB19,CKB21,CKB22,CKB26,CKB27,CKB28,CKB31,CKB36,CKB38,CKB39,CKB48,CKB49,CKB50,CKB51,CKB57,CKB58;
definitions FINSUB_1,TARSKI,SUBSET_1,MEMBERED,CARD_3,FUNCT_2,VALUED_0,CKB2,CKB21,CKB22,CKB26,CKB27,CKB28,CKB48,CKB58;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,ABSVALUE,SEQ_2,SETFAM_1,SUBSET_1,RELAT_1,RELSET_1,FINSUB_1,FUNCOP_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,XXREAL_1,FUNCT_7,NAT_1,ORDINAL1,CKB1,CKB2,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB32,CKB33,CKB37,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB48,CKB52,CKB53,CKB54,CKB55,CKB56,CKB58,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70;
schemes FUNCT_2,PARTFUN1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,XXREAL_1,RELAT_1,VALUED_0,RELSET_1,CKB3,CKB4,CKB5,CKB13,CKB29,CKB30,CKB34,CKB35,CKB47,CKB59;
constructors SETFAM_1,FINSUB_1,XXREAL_1,COMPLEX1,REAL_1,SEQ_2,CARD_3,MEMBERED,SEQ_1,FUNCT_7,RELSET_1,CKB2,CKB19,CKB21,CKB22,CKB26,CKB27,CKB28,CKB39,CKB48,CKB49,CKB50,CKB51,CKB57,CKB58;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve Z for set;
reserve Omega for non empty set;
reserve E for (Subset of Omega);
reserve BSeq for (SetSequence of Omega);
reserve S for (Subset-Family of Omega);
definition
let Omega;
let X being (Subset-Family of Omega);
func sigma X -> (SigmaField of Omega)
means
(X c= it & (for Z holds ((X c= Z & Z is (SigmaField of Omega)) implies it c= Z)));
existence
proof
set V = { S: (X c= S & S is (SigmaField of Omega)) };
set Y = ( meet V );
A1:now
let Z;
assume Z in V;
then (ex S st ((Z = S & X c= S) & S is (SigmaField of Omega)));
hence X c= Z;
end;
A2: ( bool Omega ) in V;
A3: (for E holds (E in Y implies ( E ` ) in Y))
proof
let E;
assume that
A4: E in Y;
now
let Z;
assume Z in V;
then (E in Z & (ex S st ((Z = S & X c= S) & S is (SigmaField of Omega)))) by A4,SETFAM_1:def 1;
hence ( E ` ) in Z by CKB2:def 1;
end;
hence thesis by A2,SETFAM_1:def 1;
end;
A5: (for BSeq holds (( rng BSeq ) c= Y implies ( Intersection BSeq ) in Y))
proof
let BSeq;
assume that
A6: ( rng BSeq ) c= Y;
now
let Z;
assume A7: Z in V;
now
let n being Nat;
( BSeq . n ) in ( rng BSeq ) by NAT_1:51;
hence ( BSeq . n ) in Z by A6,A7,SETFAM_1:def 1;
end;
then A8: ( rng BSeq ) c= Z by NAT_1:52;
(ex S st ((Z = S & X c= S) & S is (SigmaField of Omega))) by A7;
hence ( Intersection BSeq ) in Z by A8,CKB28:def 1;
end;
hence thesis by A2,SETFAM_1:def 1;
end;
now
let Z;
assume Z in V;
then (ex S st ((Z = S & X c= S) & S is (SigmaField of Omega)));
hence ( {} ) in Z by CKB9:1;
end;
then reconsider Y as (SigmaField of Omega) by A2,A5,A3,CKB2:def 1,CKB28:def 1,SETFAM_1:3,SETFAM_1:def 1;
take Y;
(for Z holds ((X c= Z & Z is (SigmaField of Omega)) implies Y c= Z))
proof
let Z;
assume that
A9: X c= Z
and
A10: Z is (SigmaField of Omega);
reconsider Z as (Subset-Family of Omega) by A10;
Z in V by A9,A10;
hence thesis by SETFAM_1:3;
end;
hence thesis by A2,A1,SETFAM_1:5;
end;
uniqueness
proof
let R1 being (SigmaField of Omega),R2 being (SigmaField of Omega);
assume (((X c= R1 & (for Z holds ((X c= Z & Z is (SigmaField of Omega)) implies R1 c= Z))) & X c= R2) & (for Z holds ((X c= Z & Z is (SigmaField of Omega)) implies R2 c= Z)));
then (R1 c= R2 & R2 c= R1);
hence thesis by XBOOLE_0:def 10;
end;
end;
