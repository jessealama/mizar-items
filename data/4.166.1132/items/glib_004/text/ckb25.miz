environ
vocabularies NUMBERS,FUNCT_1,RELAT_1,FUNCT_4,FUNCOP_1,XBOOLE_0,PRE_POLY,TARSKI,CARD_1,UPROOTS,CARD_3,ARYTM_3,FINSEQ_1,NAT_1,XXREAL_0,FINSET_1,SUBSET_1,FINSEQ_2,XREAL_0,ORDINAL1,ARYTM_1,GLIB_003,TREES_1,GLIB_000,GLIB_001,REAL_1,PBOOLE,ZFMISC_1,FUNCT_2,ABIAN,PARTFUN1,MCART_1,GLIB_002,WAYBEL_0,RELAT_2,RCOMP_1,GRAPH_1,GLIB_004;
notations TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,CARD_1,NUMBERS,SUBSET_1,DOMAIN_1,MCART_1,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,RELAT_1,RELSET_1,PARTFUN1,FUNCT_1,FINSEQ_1,FINSEQ_2,SEQ_1,PBOOLE,FUNCT_2,RVSUM_1,ABIAN,ORDINAL1,UPROOTS,FINSET_1,NAT_1,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GLIB_003,RFUNCT_3,PRE_POLY,CKB12,CKB13,CKB14,CKB15,CKB20,CKB22,CKB23;
definitions TARSKI,GLIB_000,GLIB_003,RVSUM_1,FUNCOP_1,CKB12,CKB13,CKB14,CKB15,CKB20,CKB23;
theorems CARD_1,CARD_2,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSET_1,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GLIB_003,ABIAN,INT_1,JORDAN12,NAT_1,PARTFUN1,PBOOLE,RELAT_1,RVSUM_1,TARSKI,TREES_1,UPROOTS,XBOOLE_0,XBOOLE_1,XREAL_0,ZFMISC_1,XREAL_1,XXREAL_0,ORDINAL1,FINSOP_1,FUNCT_7,MCART_1,RELSET_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20,CKB23,CKB24;
schemes NAT_1,SUBSET_1,RECDEF_1,GRAPH_5,CQC_SIM1,PBOOLE;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,FRAENKEL,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,CARD_1,UPROOTS,MEMBERED,GLIB_000,ABIAN,GLIB_001,GLIB_002,GLIB_003,VALUED_0,FUNCT_2,RELSET_1,PRE_POLY,INT_1,CKB17,CKB21;
constructors DOMAIN_1,BINOP_2,FINSOP_1,RVSUM_1,GRAPH_2,RFUNCT_3,UPROOTS,GLIB_002,GLIB_003,SEQ_1,XXREAL_2,RELSET_1,PBOOLE,CKB12,CKB13,CKB14,CKB15,CKB20,CKB22,CKB23;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th11: (for G being  finite  real-weighted WGraph holds (for V1 being non empty (Subset of ( the_Vertices_of G )) holds (for E1 being (Subset of ( G .edgesBetween V1 )) holds (for G1 being (inducedWSubgraph of G,V1,E1) holds (for e being set holds (for G2 being (inducedWSubgraph of G,V1,( E1 \/ { e } )) holds (((not e in E1) & e in ( G .edgesBetween V1 )) implies ( ( G1 .cost() ) + ( ( the_Weight_of G ) . e ) ) = ( G2 .cost() ))))))))
proof
let G being  finite  real-weighted WGraph;
let V1 being non empty (Subset of ( the_Vertices_of G ));
let E1 being (Subset of ( G .edgesBetween V1 ));
let G1 being (inducedWSubgraph of G,V1,E1);
let e being set;
let G2 being (inducedWSubgraph of G,V1,( E1 \/ { e } ));
assume that
A1: (not e in E1)
and
A2: e in ( G .edgesBetween V1 );
{ e } c= ( G .edgesBetween V1 ) by A2,ZFMISC_1:31;
then ( E1 \/ { e } ) c= ( G .edgesBetween V1 ) by XBOOLE_1:8;
then A3: ( the_Edges_of G2 ) = ( E1 \/ { e } ) by GLIB_000:def 37;
then A4: ( dom ( the_Weight_of G2 ) ) = ( E1 \/ { e } ) by PARTFUN1:def 2;
set W2 = ( e .--> ( ( the_Weight_of G ) . e ) );
A5: ( dom W2 ) = { e } by FUNCOP_1:13;
A6: ( the_Edges_of G1 ) = E1 by GLIB_000:def 37;
then ( ( the_Edges_of G2 ) \ ( the_Edges_of G1 ) ) = ( { e } \ E1 ) by A3,XBOOLE_1:40
.= { e } by A1,ZFMISC_1:59;
then reconsider W2 as (ManySortedSet of ( ( the_Edges_of G2 ) \ ( the_Edges_of G1 ) ));
reconsider W2 as (Rbag of ( ( the_Edges_of G2 ) \ ( the_Edges_of G1 ) ));
A7: ( the_Weight_of G1 ) = ( ( the_Weight_of G ) | E1 ) by A6,GLIB_003:def 10;
A8:now
let x being set;
assume x in ( dom ( the_Weight_of G2 ) );
then A9: x in ( E1 \/ { e } ) by A3,PARTFUN1:def 2;
( the_Weight_of G2 ) = ( ( the_Weight_of G ) | ( E1 \/ { e } ) ) by A3,GLIB_003:def 10;
then A10: ( ( the_Weight_of G2 ) . x ) = ( ( the_Weight_of G ) . x ) by A9,FUNCT_1:49;
now
per cases ;
suppose (not x in ( dom W2 ));

then (( ( ( the_Weight_of G1 ) +* W2 ) . x ) = ( ( the_Weight_of G1 ) . x ) & x in E1) by A5,A9,FUNCT_4:11,XBOOLE_0:def 3;
hence ( ( ( the_Weight_of G1 ) +* W2 ) . x ) = ( ( the_Weight_of G2 ) . x ) by A7,A10,FUNCT_1:49;
end;
suppose A11: x in ( dom W2 );

then A12: x = e by A5,TARSKI:def 1;
( ( ( the_Weight_of G1 ) +* W2 ) . x ) = ( W2 . x ) by A11,FUNCT_4:13
.= ( ( the_Weight_of G ) . e ) by A12,FUNCOP_1:72;
hence ( ( ( the_Weight_of G1 ) +* W2 ) . x ) = ( ( the_Weight_of G2 ) . x ) by A5,A10,A11,TARSKI:def 1;
end;
end;
hence ( ( the_Weight_of G2 ) . x ) = ( ( ( the_Weight_of G1 ) +* W2 ) . x );
end;
( dom W2 ) = { e } by FUNCOP_1:13;
then A13: ( Sum W2 ) = ( W2 . e ) by CKB6:1
.= ( ( the_Weight_of G ) . e ) by FUNCOP_1:72;
( dom ( ( the_Weight_of G1 ) +* W2 ) ) = ( ( dom ( the_Weight_of G1 ) ) \/ ( dom W2 ) ) by FUNCT_4:def 1
.= ( E1 \/ { e } ) by A6,A5,PARTFUN1:def 2;
hence thesis by A4,A8,A13,CKB5:1,FUNCT_1:2;
end;
