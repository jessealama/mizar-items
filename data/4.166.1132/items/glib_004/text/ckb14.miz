environ
vocabularies NUMBERS,FUNCT_1,RELAT_1,FUNCT_4,FUNCOP_1,XBOOLE_0,PRE_POLY,TARSKI,CARD_1,UPROOTS,CARD_3,ARYTM_3,FINSEQ_1,NAT_1,XXREAL_0,FINSET_1,SUBSET_1,FINSEQ_2,XREAL_0,ORDINAL1,ARYTM_1,GLIB_003,TREES_1,GLIB_000,GLIB_001,REAL_1,PBOOLE,ZFMISC_1,FUNCT_2,ABIAN,PARTFUN1,MCART_1,GLIB_002,WAYBEL_0,RELAT_2,RCOMP_1,GRAPH_1,GLIB_004;
notations TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,CARD_1,NUMBERS,SUBSET_1,DOMAIN_1,MCART_1,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,RELAT_1,RELSET_1,PARTFUN1,FUNCT_1,FINSEQ_1,FINSEQ_2,SEQ_1,PBOOLE,FUNCT_2,RVSUM_1,ABIAN,ORDINAL1,UPROOTS,FINSET_1,NAT_1,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GLIB_003,RFUNCT_3,PRE_POLY,CKB12,CKB13;
definitions TARSKI,GLIB_000,GLIB_003,RVSUM_1,FUNCOP_1,CKB12,CKB13;
theorems CARD_1,CARD_2,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSET_1,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GLIB_003,ABIAN,INT_1,JORDAN12,NAT_1,PARTFUN1,PBOOLE,RELAT_1,RVSUM_1,TARSKI,TREES_1,UPROOTS,XBOOLE_0,XBOOLE_1,XREAL_0,ZFMISC_1,XREAL_1,XXREAL_0,ORDINAL1,FINSOP_1,FUNCT_7,MCART_1,RELSET_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
schemes NAT_1,SUBSET_1,RECDEF_1,GRAPH_5,CQC_SIM1,PBOOLE;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,FRAENKEL,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,CARD_1,UPROOTS,MEMBERED,GLIB_000,ABIAN,GLIB_001,GLIB_002,GLIB_003,VALUED_0,FUNCT_2,RELSET_1,PRE_POLY,INT_1;
constructors DOMAIN_1,BINOP_2,FINSOP_1,RVSUM_1,GRAPH_2,RFUNCT_3,UPROOTS,GLIB_002,GLIB_003,SEQ_1,XXREAL_2,RELSET_1,PBOOLE,CKB12,CKB13;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
definition
let G being  finite  real-weighted WGraph;
let x being set;
let y being set;
func G .min_DPath_cost (x,y) -> Real means 
:Def3: (ex W being (DPath of G) st (W is_mincost_DPath_from x,y & it = ( W .cost() ))) if (ex W being (DWalk of G) st W is_Walk_from x,y) otherwise it = ( 0 );
existence
proof
set X = { W where W is (DPath of G): W is_Walk_from x,y };
now
let e being set;
assume e in X;
then (ex W being (DPath of G) st (e = W & W is_Walk_from x,y));
then e in { w where w is (DPath of G): (not contradiction) };
hence e in ( G .allDPaths() ) by GLIB_001:def 38;
end;
then reconsider X as  finite (Subset of ( G .allDPaths() )) by TARSKI:def 3;
hereby
assume (ex W being (DWalk of G) st W is_Walk_from x,y);
then consider W being (DWalk of G) such that A1: W is_Walk_from x,y;
set P = the (DPath of W);
P is_Walk_from x,y by A1,GLIB_001:160;
then P in X;
then reconsider X as non  empty  finite (Subset of ( G .allDPaths() ));
deffunc F((Element of X)) = ( $1 .cost() );
consider W1 being (Element of X) such that A2: (for W2 being (Element of X) holds F(W1) <= F(W2)) from GRAPH_5:sch 2;
W1 in X;
then consider WA being (DPath of G) such that A3: WA = W1 and A4: WA is_Walk_from x,y;
A5:now
let WB being (DPath of G);
assume WB is_Walk_from x,y;
then WB in X;
then reconsider WB9 = WB as (Element of X);
F(W1) <= F(WB9) by A2;
hence ( WA .cost() ) <= ( WB .cost() ) by A3;
end;
reconsider WA as (DPath of G);
set IT = ( WA .cost() );
take IT;
take WA;
thus WA is_mincost_DPath_from x,y by A4,A5,CKB13:def 1;
thus IT = ( WA .cost() );
end;
thus thesis;
end;
uniqueness
proof
let IT1 being Real;
let IT2 being Real;
hereby
assume (ex W being (DWalk of G) st W is_Walk_from x,y);
given W1 being (DPath of G) such that
A6: W1 is_mincost_DPath_from x,y
and
A7: IT1 = ( W1 .cost() );

given W2 being (DPath of G) such that
A8: W2 is_mincost_DPath_from x,y
and
A9: IT2 = ( W2 .cost() );

W2 is_Walk_from x,y by A8,CKB13:def 1;
then A10: IT1 <= IT2 by A6,A7,A9,CKB13:def 1;
W1 is_Walk_from x,y by A6,CKB13:def 1;
then IT2 <= IT1 by A7,A8,A9,CKB13:def 1;
hence IT1 = IT2 by A10,XXREAL_0:1;
end;
thus thesis;
end;
consistency;
end;
