environ
vocabularies NUMBERS,FUNCT_1,RELAT_1,FUNCT_4,FUNCOP_1,XBOOLE_0,PRE_POLY,TARSKI,CARD_1,UPROOTS,CARD_3,ARYTM_3,FINSEQ_1,NAT_1,XXREAL_0,FINSET_1,SUBSET_1,FINSEQ_2,XREAL_0,ORDINAL1,ARYTM_1,GLIB_003,TREES_1,GLIB_000,GLIB_001,REAL_1,PBOOLE,ZFMISC_1,FUNCT_2,ABIAN,PARTFUN1,MCART_1,GLIB_002,WAYBEL_0,RELAT_2,RCOMP_1,GRAPH_1,GLIB_004;
notations TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,CARD_1,NUMBERS,SUBSET_1,DOMAIN_1,MCART_1,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,RELAT_1,RELSET_1,PARTFUN1,FUNCT_1,FINSEQ_1,FINSEQ_2,SEQ_1,PBOOLE,FUNCT_2,RVSUM_1,ABIAN,ORDINAL1,UPROOTS,FINSET_1,NAT_1,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GLIB_003,RFUNCT_3,PRE_POLY,CKB12,CKB13,CKB14,CKB15,CKB20,CKB22,CKB23,CKB29,CKB30,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB54,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63;
definitions TARSKI,GLIB_000,GLIB_003,RVSUM_1,FUNCOP_1,CKB12,CKB13,CKB14,CKB15,CKB20,CKB23,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB57,CKB58,CKB59,CKB60,CKB62,CKB63;
theorems CARD_1,CARD_2,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSET_1,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GLIB_003,ABIAN,INT_1,JORDAN12,NAT_1,PARTFUN1,PBOOLE,RELAT_1,RVSUM_1,TARSKI,TREES_1,UPROOTS,XBOOLE_0,XBOOLE_1,XREAL_0,ZFMISC_1,XREAL_1,XXREAL_0,ORDINAL1,FINSOP_1,FUNCT_7,MCART_1,RELSET_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB51,CKB52,CKB53,CKB57,CKB58,CKB59,CKB60,CKB62,CKB63,CKB64,CKB65;
schemes NAT_1,SUBSET_1,RECDEF_1,GRAPH_5,CQC_SIM1,PBOOLE;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,FRAENKEL,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,CARD_1,UPROOTS,MEMBERED,GLIB_000,ABIAN,GLIB_001,GLIB_002,GLIB_003,VALUED_0,FUNCT_2,RELSET_1,PRE_POLY,INT_1,CKB17,CKB21,CKB31,CKB32,CKB50,CKB55,CKB56;
constructors DOMAIN_1,BINOP_2,FINSOP_1,RVSUM_1,GRAPH_2,RFUNCT_3,UPROOTS,GLIB_002,GLIB_003,SEQ_1,XXREAL_2,RELSET_1,PBOOLE,CKB12,CKB13,CKB14,CKB15,CKB20,CKB22,CKB23,CKB30,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th30: (for G being  finite  real-weighted WGraph holds (for n being Nat holds (( ( ( PRIM:CompSeq G ) . n ) `1 ) is non  empty non  empty (Subset of ( the_Vertices_of G )) & ( ( ( PRIM:CompSeq G ) . n ) `2 ) c= ( G .edgesBetween ( ( ( PRIM:CompSeq G ) . n ) `1 ) ))))
proof
let G being  finite  real-weighted WGraph;
set PCS = ( PRIM:CompSeq G );
defpred P[ Nat ]
 means
(( ( PCS . $1 ) `1 ) is non  empty non  empty (Subset of ( the_Vertices_of G )) & ( ( PCS . $1 ) `2 ) c= ( G .edgesBetween ( ( PCS . $1 ) `1 ) ));
A1: ( ( PCS . ( 0 ) ) `2 ) = ( ( PRIM:Init G ) `2 ) by CKB62:def 1
.= ( {} ) by MCART_1:7;
now
let n being Nat;
assume A2: P[ n ];
set Gn = ( PCS . n );
set Gn1 = ( PCS . ( n + 1 ) );
set Next = ( PRIM:NextBestEdges Gn );
set e = ( choose Next );
A3: Gn1 = ( PRIM:Step Gn ) by CKB62:def 1;
now
per cases ;
suppose Next = ( {} );

then Gn1 = Gn by A3,CKB59:def 1;
hence P[ ( n + 1 ) ] by A2;
end;
suppose A4: Next <> ( {} );

set src = ( ( the_Source_of G ) . e );
set tar = ( ( the_Target_of G ) . e );
A5: e in Next by A4;
A6: e SJoins ( Gn `1 ),( ( the_Vertices_of G ) \ ( Gn `1 ) ),G by A4,CKB57:def 1;
now
per cases ;
suppose A7: ( ( the_Source_of G ) . e ) in ( Gn `1 );

then A8: Gn1 = [ ( ( Gn `1 ) \/ { tar } ),( ( Gn `2 ) \/ { e } ) ] by A3,A4,CKB59:def 1;
then A9: ( Gn1 `1 ) = ( ( Gn `1 ) \/ { tar } ) by MCART_1:7;
then A10: ( G .edgesBetween ( Gn `1 ) ) c= ( G .edgesBetween ( Gn1 `1 ) ) by GLIB_000:36,XBOOLE_1:7;
now
let x being set;
assume A11: x in ( Gn1 `1 );
now
per cases  by A9,A11,XBOOLE_0:def 3;
suppose x in ( Gn `1 );

hence x in ( the_Vertices_of G ) by A2;
end;
suppose x in { tar };

then x = tar by TARSKI:def 1;
hence x in ( the_Vertices_of G ) by A5,FUNCT_2:5;
end;
end;
hence x in ( the_Vertices_of G );
end;
hence ( Gn1 `1 ) is non  empty non  empty (Subset of ( the_Vertices_of G )) by A8,MCART_1:7,TARSKI:def 3;
A12: ( Gn1 `2 ) = ( ( Gn `2 ) \/ { e } ) by A8,MCART_1:7;
A13: ( Gn `1 ) c= ( Gn1 `1 ) by A9,XBOOLE_1:7;
now
let x being set;
assume A14: x in ( Gn1 `2 );
now
per cases  by A12,A14,XBOOLE_0:def 3;
suppose x in ( Gn `2 );

then x in ( G .edgesBetween ( Gn `1 ) ) by A2;
hence x in ( G .edgesBetween ( Gn1 `1 ) ) by A10;
end;
suppose x in { e };

then A15: x = e by TARSKI:def 1;
then ( ( the_Target_of G ) . x ) in { tar } by TARSKI:def 1;
then ( ( the_Target_of G ) . x ) in ( Gn1 `1 ) by A9,XBOOLE_0:def 3;
hence x in ( G .edgesBetween ( Gn1 `1 ) ) by A5,A7,A13,A15,GLIB_000:31;
end;
end;
hence x in ( G .edgesBetween ( Gn1 `1 ) );
end;
hence ( Gn1 `2 ) c= ( G .edgesBetween ( Gn1 `1 ) ) by TARSKI:def 3;
end;
suppose A16: (not ( ( the_Source_of G ) . e ) in ( Gn `1 ));

then A17: tar in ( Gn `1 ) by A6,GLIB_000:def 15;
A18: Gn1 = [ ( ( Gn `1 ) \/ { ( ( the_Source_of G ) . e ) } ),( ( Gn `2 ) \/ { e } ) ] by A3,A4,A16,CKB59:def 1;
then A19: ( Gn1 `1 ) = ( ( Gn `1 ) \/ { src } ) by MCART_1:7;
then A20: ( G .edgesBetween ( Gn `1 ) ) c= ( G .edgesBetween ( Gn1 `1 ) ) by GLIB_000:36,XBOOLE_1:7;
now
let x being set;
assume A21: x in ( Gn1 `1 );
now
per cases  by A19,A21,XBOOLE_0:def 3;
suppose x in ( Gn `1 );

hence x in ( the_Vertices_of G ) by A2;
end;
suppose x in { src };

then x = src by TARSKI:def 1;
hence x in ( the_Vertices_of G ) by A5,FUNCT_2:5;
end;
end;
hence x in ( the_Vertices_of G );
end;
hence ( Gn1 `1 ) is non  empty non  empty (Subset of ( the_Vertices_of G )) by A18,MCART_1:7,TARSKI:def 3;
A22: ( Gn1 `2 ) = ( ( Gn `2 ) \/ { e } ) by A18,MCART_1:7;
A23: ( Gn `1 ) c= ( Gn1 `1 ) by A19,XBOOLE_1:7;
now
let x being set;
assume A24: x in ( Gn1 `2 );
now
per cases  by A22,A24,XBOOLE_0:def 3;
suppose x in ( Gn `2 );

then x in ( G .edgesBetween ( Gn `1 ) ) by A2;
hence x in ( G .edgesBetween ( Gn1 `1 ) ) by A20;
end;
suppose x in { e };

then A25: x = e by TARSKI:def 1;
then ( ( the_Source_of G ) . x ) in { src } by TARSKI:def 1;
then ( ( the_Source_of G ) . x ) in ( Gn1 `1 ) by A19,XBOOLE_0:def 3;
hence x in ( G .edgesBetween ( Gn1 `1 ) ) by A5,A23,A17,A25,GLIB_000:31;
end;
end;
hence x in ( G .edgesBetween ( Gn1 `1 ) );
end;
hence ( Gn1 `2 ) c= ( G .edgesBetween ( Gn1 `1 ) ) by TARSKI:def 3;
end;
end;
hence P[ ( n + 1 ) ];
end;
end;
hence P[ ( n + 1 ) ];
end;
then A26: (for n being Nat holds (P[ n ] implies P[ ( n + 1 ) ]));
( ( PCS . ( 0 ) ) `1 ) = ( ( PRIM:Init G ) `1 ) by CKB62:def 1
.= { ( choose ( the_Vertices_of G ) ) } by MCART_1:7;
then A27: P[ ( 0 ) ] by A1,XBOOLE_1:2;
(for n being Nat holds P[ n ]) from NAT_1:sch 2(A27,A26);
hence thesis;
end;
