environ
vocabularies NUMBERS,FUNCT_1,RELAT_1,FUNCT_4,FUNCOP_1,XBOOLE_0,PRE_POLY,TARSKI,CARD_1,UPROOTS,CARD_3,ARYTM_3,FINSEQ_1,NAT_1,XXREAL_0,FINSET_1,SUBSET_1,FINSEQ_2,XREAL_0,ORDINAL1,ARYTM_1,GLIB_003,TREES_1,GLIB_000,GLIB_001,REAL_1,PBOOLE,ZFMISC_1,FUNCT_2,ABIAN,PARTFUN1,MCART_1,GLIB_002,WAYBEL_0,RELAT_2,RCOMP_1,GRAPH_1,GLIB_004;
notations TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,CARD_1,NUMBERS,SUBSET_1,DOMAIN_1,MCART_1,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,RELAT_1,RELSET_1,PARTFUN1,FUNCT_1,FINSEQ_1,FINSEQ_2,SEQ_1,PBOOLE,FUNCT_2,RVSUM_1,ABIAN,ORDINAL1,UPROOTS,FINSET_1,NAT_1,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GLIB_003,RFUNCT_3,PRE_POLY,CKB12,CKB13,CKB14,CKB15,CKB20,CKB22,CKB23,CKB29,CKB30,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB54,CKB57,CKB58,CKB59,CKB60,CKB61;
definitions TARSKI,GLIB_000,GLIB_003,RVSUM_1,FUNCOP_1,CKB12,CKB13,CKB14,CKB15,CKB20,CKB23,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB57,CKB58,CKB59,CKB60;
theorems CARD_1,CARD_2,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSET_1,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GLIB_003,ABIAN,INT_1,JORDAN12,NAT_1,PARTFUN1,PBOOLE,RELAT_1,RVSUM_1,TARSKI,TREES_1,UPROOTS,XBOOLE_0,XBOOLE_1,XREAL_0,ZFMISC_1,XREAL_1,XXREAL_0,ORDINAL1,FINSOP_1,FUNCT_7,MCART_1,RELSET_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB51,CKB52,CKB53,CKB57,CKB58,CKB59,CKB60;
schemes NAT_1,SUBSET_1,RECDEF_1,GRAPH_5,CQC_SIM1,PBOOLE;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,FRAENKEL,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,CARD_1,UPROOTS,MEMBERED,GLIB_000,ABIAN,GLIB_001,GLIB_002,GLIB_003,VALUED_0,FUNCT_2,RELSET_1,PRE_POLY,INT_1,CKB17,CKB21,CKB31,CKB32,CKB50,CKB55,CKB56;
constructors DOMAIN_1,BINOP_2,FINSOP_1,RVSUM_1,GRAPH_2,RFUNCT_3,UPROOTS,GLIB_002,GLIB_003,SEQ_1,XXREAL_2,RELSET_1,PBOOLE,CKB12,CKB13,CKB14,CKB15,CKB20,CKB22,CKB23,CKB30,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB57,CKB58,CKB59,CKB60,CKB61;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
definition
let G being  real-weighted WGraph;
func PRIM:CompSeq G -> (PRIM:LabelingSeq of G)
means
:Def17: (( it . ( 0 ) ) = ( PRIM:Init G ) & (for n being Nat holds ( it . ( n + 1 ) ) = ( PRIM:Step ( it . n ) )));
existence
proof
defpred P[ set,set,set ]
 means
(($2 is (PRIM:Labeling of G) & (ex Gn,Gn1 being (PRIM:Labeling of G) st (($2 = Gn & $3 = Gn1) & Gn1 = ( PRIM:Step Gn )))) or ((not $2 is (PRIM:Labeling of G)) & $2 = $3));
now
let n being (Element of ( NAT ));
let x being set;
now
per cases ;
suppose x is (PRIM:Labeling of G);

then reconsider Gn = x as (PRIM:Labeling of G);
P[ n,x,( PRIM:Step Gn ) ];
hence (ex y being set st P[ n,x,y ]);
end;
suppose (not x is (PRIM:Labeling of G));

hence (ex y being set st P[ n,x,y ]);
end;
end;
hence (ex y being set st P[ n,x,y ]);
end;
then A1: (for n being (Element of ( NAT )) holds (for x being set holds (ex y being set st P[ n,x,y ])));
consider IT being Function such that A2: ((( dom IT ) = ( NAT ) & ( IT . ( 0 ) ) = ( PRIM:Init G )) & (for n being (Element of ( NAT )) holds P[ n,( IT . n ),( IT . ( n + 1 ) ) ])) from RECDEF_1:sch 1(A1);
reconsider IT as (ManySortedSet of ( NAT )) by A2,PARTFUN1:def 2,RELAT_1:def 18;
defpred P2[ Nat ]
 means
( IT . $1 ) is (PRIM:Labeling of G);
A3:now
let n being Nat;
reconsider n9 = n as (Element of ( NAT )) by ORDINAL1:def 12;
assume P2[ n ];
then (ex Gn,Gn1 being (PRIM:Labeling of G) st ((( IT . n9 ) = Gn & ( IT . ( n + 1 ) ) = Gn1) & Gn1 = ( PRIM:Step Gn ))) by A2;
hence P2[ ( n + 1 ) ];
end;
A4: P2[ ( 0 ) ] by A2;
(for n being Nat holds P2[ n ]) from NAT_1:sch 2(A4,A3);
then reconsider IT as (PRIM:LabelingSeq of G) by CKB60:def 1;
take IT;
thus ( IT . ( 0 ) ) = ( PRIM:Init G ) by A2;
let n being Nat;
reconsider n9 = n as (Element of ( NAT )) by ORDINAL1:def 12;
(ex Gn,Gn1 being (PRIM:Labeling of G) st ((( IT . n9 ) = Gn & ( IT . ( n + 1 ) ) = Gn1) & Gn1 = ( PRIM:Step Gn ))) by A2;
hence thesis;
end;
uniqueness
proof
let IT1 being (PRIM:LabelingSeq of G),IT2 being (PRIM:LabelingSeq of G);
assume that
A5: ( IT1 . ( 0 ) ) = ( PRIM:Init G )
and
A6: (for n being Nat holds ( IT1 . ( n + 1 ) ) = ( PRIM:Step ( IT1 . n ) ))
and
A7: ( IT2 . ( 0 ) ) = ( PRIM:Init G )
and
A8: (for n being Nat holds ( IT2 . ( n + 1 ) ) = ( PRIM:Step ( IT2 . n ) ));
defpred P[ Nat ]
 means
( IT1 . $1 ) = ( IT2 . $1 );
now
let n being Nat;
assume P[ n ];
then ( IT1 . ( n + 1 ) ) = ( PRIM:Step ( IT2 . n ) ) by A6
.= ( IT2 . ( n + 1 ) ) by A8;
hence P[ ( n + 1 ) ];
end;
then A9: (for n being Nat holds (P[ n ] implies P[ ( n + 1 ) ]));
A10: P[ ( 0 ) ] by A5,A7;
(for n being Nat holds P[ n ]) from NAT_1:sch 2(A10,A9);
then (for n being set holds (n in ( NAT ) implies ( IT1 . n ) = ( IT2 . n )));
hence IT1 = IT2 by PBOOLE:3;
end;
end;
