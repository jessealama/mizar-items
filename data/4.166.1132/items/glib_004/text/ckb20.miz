environ
vocabularies NUMBERS,FUNCT_1,RELAT_1,FUNCT_4,FUNCOP_1,XBOOLE_0,PRE_POLY,TARSKI,CARD_1,UPROOTS,CARD_3,ARYTM_3,FINSEQ_1,NAT_1,XXREAL_0,FINSET_1,SUBSET_1,FINSEQ_2,XREAL_0,ORDINAL1,ARYTM_1,GLIB_003,TREES_1,GLIB_000,GLIB_001,REAL_1,PBOOLE,ZFMISC_1,FUNCT_2,ABIAN,PARTFUN1,MCART_1,GLIB_002,WAYBEL_0,RELAT_2,RCOMP_1,GRAPH_1,GLIB_004;
notations TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,CARD_1,NUMBERS,SUBSET_1,DOMAIN_1,MCART_1,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,RELAT_1,RELSET_1,PARTFUN1,FUNCT_1,FINSEQ_1,FINSEQ_2,SEQ_1,PBOOLE,FUNCT_2,RVSUM_1,ABIAN,ORDINAL1,UPROOTS,FINSET_1,NAT_1,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GLIB_003,RFUNCT_3,PRE_POLY,CKB12,CKB13,CKB14,CKB15;
definitions TARSKI,GLIB_000,GLIB_003,RVSUM_1,FUNCOP_1,CKB12,CKB13,CKB14,CKB15;
theorems CARD_1,CARD_2,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSET_1,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GLIB_003,ABIAN,INT_1,JORDAN12,NAT_1,PARTFUN1,PBOOLE,RELAT_1,RVSUM_1,TARSKI,TREES_1,UPROOTS,XBOOLE_0,XBOOLE_1,XREAL_0,ZFMISC_1,XREAL_1,XXREAL_0,ORDINAL1,FINSOP_1,FUNCT_7,MCART_1,RELSET_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19;
schemes NAT_1,SUBSET_1,RECDEF_1,GRAPH_5,CQC_SIM1,PBOOLE;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,FRAENKEL,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,CARD_1,UPROOTS,MEMBERED,GLIB_000,ABIAN,GLIB_001,GLIB_002,GLIB_003,VALUED_0,FUNCT_2,RELSET_1,PRE_POLY,INT_1,CKB17;
constructors DOMAIN_1,BINOP_2,FINSOP_1,RVSUM_1,GRAPH_2,RFUNCT_3,UPROOTS,GLIB_002,GLIB_003,SEQ_1,XXREAL_2,RELSET_1,PBOOLE,CKB12,CKB13,CKB14,CKB15;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
definition
let G being WGraph;
func G .allWSubgraphs() -> non empty set
means
:Def5: (for x being set holds (x in it iff (ex G2 being (WSubgraph of G) st (x = G2 & ( dom G2 ) = ( WGraphSelectors )))));
existence
proof
set G9 = ( G | ( WGraphSelectors ) );
A1: G == G9 by CKB18:1;
A2: ( the_Weight_of G ) = ( the_Weight_of G9 ) by CKB18:1;
reconsider G9 as  [Weighted] (Subgraph of G) by A1,GLIB_000:87;
( dom ( the_Weight_of G ) ) = ( the_Edges_of G9 ) by A2,PARTFUN1:def 2;
then ( the_Weight_of G9 ) = ( ( the_Weight_of G ) | ( the_Edges_of G9 ) ) by A2,RELAT_1:69;
then reconsider G9 as (WSubgraph of G) by GLIB_003:def 10;
set Z = { ( bool ( the_Vertices_of G ) ),( bool ( the_Edges_of G ) ),( bool ( the_Source_of G ) ),( bool ( the_Target_of G ) ),( bool ( the_Weight_of G ) ) };
set Y = ( union Z );
set X = ( Funcs (( WGraphSelectors ),Y) );
defpred P[ set ]
 means
$1 is (WSubgraph of G);
consider IT being (Subset of X) such that A3: (for x being set holds (x in IT iff (x in X & P[ x ]))) from SUBSET_1:sch 1;
A4:now
let G2 being (WSubgraph of G);
assume A5: ( dom G2 ) = ( WGraphSelectors );
now
let y being set;
assume y in ( rng G2 );
then consider x being set such that A6: x in ( WGraphSelectors ) and A7: ( G2 . x ) = y by A5,FUNCT_1:def 3;
now
per cases  by A6,ENUMSET1:def 3;
suppose A8: x = ( VertexSelector );

A9: ( bool ( the_Vertices_of G ) ) in Z by ENUMSET1:def 3;
y = ( the_Vertices_of G2 ) by A7,A8;
hence y in Y by A9,TARSKI:def 4;
end;
suppose A10: x = ( EdgeSelector );

A11: ( bool ( the_Edges_of G ) ) in Z by ENUMSET1:def 3;
y = ( the_Edges_of G2 ) by A7,A10;
hence y in Y by A11,TARSKI:def 4;
end;
suppose x = ( SourceSelector );

then y = ( the_Source_of G2 ) by A7;
then y = ( ( the_Source_of G ) | ( the_Edges_of G2 ) ) by GLIB_000:45;
then A12: y c= ( the_Source_of G ) by RELAT_1:59;
( bool ( the_Source_of G ) ) in Z by ENUMSET1:def 3;
hence y in Y by A12,TARSKI:def 4;
end;
suppose x = ( TargetSelector );

then y = ( the_Target_of G2 ) by A7;
then y = ( ( the_Target_of G ) | ( the_Edges_of G2 ) ) by GLIB_000:45;
then A13: y c= ( the_Target_of G ) by RELAT_1:59;
( bool ( the_Target_of G ) ) in Z by ENUMSET1:def 3;
hence y in Y by A13,TARSKI:def 4;
end;
suppose x = ( WeightSelector );

then y = ( the_Weight_of G2 ) by A7;
then y = ( ( the_Weight_of G ) | ( the_Edges_of G2 ) ) by GLIB_003:def 10;
then A14: y c= ( the_Weight_of G ) by RELAT_1:59;
( bool ( the_Weight_of G ) ) in Z by ENUMSET1:def 3;
hence y in Y by A14,TARSKI:def 4;
end;
end;
hence y in Y;
end;
hence ( rng G2 ) c= Y by TARSKI:def 3;
end;
A15: ( dom G9 ) = ( WGraphSelectors ) by CKB19:1;
then ( rng G9 ) c= Y by A4;
then G9 in X by A15,FUNCT_2:def 2;
then reconsider IT as non empty set by A3;
take IT;
let x being set;
hereby
assume A16: x in IT;
then reconsider x9 = x as (WSubgraph of G) by A3;
take x9;
thus x9 = x;
(ex f being Function st ((f = x & ( dom f ) = ( WGraphSelectors )) & ( rng f ) c= Y)) by A16,FUNCT_2:def 2;
hence ( dom x9 ) = ( WGraphSelectors );
end;
given G2 being (WSubgraph of G) such that
A17: G2 = x
and
A18: ( dom G2 ) = ( WGraphSelectors );

( rng G2 ) c= Y by A4,A18;
then x in X by A17,A18,FUNCT_2:def 2;
hence thesis by A3,A17;
end;
uniqueness
proof
let IT1 being non empty set,IT2 being non empty set;
assume that
A19: (for x being set holds (x in IT1 iff (ex G2 being (WSubgraph of G) st (x = G2 & ( dom G2 ) = ( WGraphSelectors )))))
and
A20: (for x being set holds (x in IT2 iff (ex G2 being (WSubgraph of G) st (x = G2 & ( dom G2 ) = ( WGraphSelectors )))));
now
let x being set;
(x in IT1 iff (ex G2 being (WSubgraph of G) st (x = G2 & ( dom G2 ) = ( WGraphSelectors )))) by A19;
hence (x in IT1 iff x in IT2) by A20;
end;
hence thesis by TARSKI:1;
end;
end;
