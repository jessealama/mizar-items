environ
vocabularies NUMBERS,FUNCT_1,RELAT_1,FUNCT_4,FUNCOP_1,XBOOLE_0,PRE_POLY,TARSKI,CARD_1,UPROOTS,CARD_3,ARYTM_3,FINSEQ_1,NAT_1,XXREAL_0,FINSET_1,SUBSET_1,FINSEQ_2,XREAL_0,ORDINAL1,ARYTM_1,GLIB_003,TREES_1,GLIB_000,GLIB_001,REAL_1,PBOOLE,ZFMISC_1,FUNCT_2,ABIAN,PARTFUN1,MCART_1,GLIB_002,WAYBEL_0,RELAT_2,RCOMP_1,GRAPH_1,GLIB_004;
notations TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,CARD_1,NUMBERS,SUBSET_1,DOMAIN_1,MCART_1,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,RELAT_1,RELSET_1,PARTFUN1,FUNCT_1,FINSEQ_1,FINSEQ_2,SEQ_1,PBOOLE,FUNCT_2,RVSUM_1,ABIAN,ORDINAL1,UPROOTS,FINSET_1,NAT_1,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GLIB_003,RFUNCT_3,PRE_POLY,CKB12,CKB13,CKB14,CKB15,CKB20,CKB22,CKB23,CKB29,CKB30,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
definitions TARSKI,GLIB_000,GLIB_003,RVSUM_1,FUNCOP_1,CKB12,CKB13,CKB14,CKB15,CKB20,CKB23,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39;
theorems CARD_1,CARD_2,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSET_1,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GLIB_003,ABIAN,INT_1,JORDAN12,NAT_1,PARTFUN1,PBOOLE,RELAT_1,RVSUM_1,TARSKI,TREES_1,UPROOTS,XBOOLE_0,XBOOLE_1,XREAL_0,ZFMISC_1,XREAL_1,XXREAL_0,ORDINAL1,FINSOP_1,FUNCT_7,MCART_1,RELSET_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46;
schemes NAT_1,SUBSET_1,RECDEF_1,GRAPH_5,CQC_SIM1,PBOOLE;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,FRAENKEL,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,CARD_1,UPROOTS,MEMBERED,GLIB_000,ABIAN,GLIB_001,GLIB_002,GLIB_003,VALUED_0,FUNCT_2,RELSET_1,PRE_POLY,INT_1,CKB17,CKB21,CKB31,CKB32;
constructors DOMAIN_1,BINOP_2,FINSOP_1,RVSUM_1,GRAPH_2,RFUNCT_3,UPROOTS,GLIB_002,GLIB_003,SEQ_1,XXREAL_2,RELSET_1,PBOOLE,CKB12,CKB13,CKB14,CKB15,CKB20,CKB22,CKB23,CKB30,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th22: (for G being  finite  real-weighted WGraph holds (for src being (Vertex of G) holds (for n being Nat holds ( ( ( DIJK:CompSeq src ) . n ) `2 ) c= ( G .edgesBetween ( dom ( ( ( DIJK:CompSeq src ) . n ) `1 ) ) ))))
proof
let G being  finite  real-weighted WGraph;
let src being (Vertex of G);
set DCS = ( DIJK:CompSeq src );
set D0 = ( DCS . ( 0 ) );
defpred P[ Nat ]
 means
( ( DCS . $1 ) `2 ) c= ( G .edgesBetween ( dom ( ( DCS . $1 ) `1 ) ) );
now
let n being Nat;
set Dn = ( DCS . n );
set Dn1 = ( DCS . ( n + 1 ) );
set BE = ( DIJK:NextBestEdges Dn );
set e = ( choose BE );
set target = ( ( the_Target_of G ) . e );
set val = ( ( ( Dn `1 ) . ( ( the_Source_of G ) . e ) ) + ( ( the_Weight_of G ) . e ) );
set DnE = ( ( Dn `2 ) \/ { e } );
assume A1: ( Dn `2 ) c= ( G .edgesBetween ( dom ( Dn `1 ) ) );
A2: Dn1 = ( DIJK:Step Dn ) by CKB38:def 1;
now
let x being set;
n <= ( n + 1 ) by NAT_1:12;
then A3: ( dom ( Dn `1 ) ) c= ( dom ( Dn1 `1 ) ) by CKB43:1;
assume A4: x in ( Dn1 `2 );
now
per cases ;
suppose BE = ( {} );

then Dn1 = Dn by A2,CKB34:def 1;
hence x in ( G .edgesBetween ( dom ( Dn1 `1 ) ) ) by A1,A4;
end;
suppose A5: BE <> ( {} );

then A6: Dn1 = [ ( ( Dn `1 ) +* ( target .--> val ) ),DnE ] by A2,CKB34:def 1;
then A7: ( Dn1 `2 ) = DnE by MCART_1:7;
( Dn1 `1 ) = ( ( Dn `1 ) +* ( target .--> val ) ) by A6,MCART_1:7;
then A8: ( dom ( Dn1 `1 ) ) = ( ( dom ( Dn `1 ) ) \/ { target } ) by CKB1:1;
A9: e in BE by A5;
now
per cases  by A4,A7,XBOOLE_0:def 3;
suppose A10: x in ( Dn `2 );

A11: ( Dn `2 ) in ( bool ( the_Edges_of G ) ) by MCART_1:10;
(( ( the_Source_of G ) . x ) in ( dom ( Dn `1 ) ) & ( ( the_Target_of G ) . x ) in ( dom ( Dn `1 ) )) by A1,A10,GLIB_000:31;
hence x in ( G .edgesBetween ( dom ( Dn1 `1 ) ) ) by A3,A10,A11,GLIB_000:31;
end;
suppose x in { e };

then A12: x = e by TARSKI:def 1;
then ( ( the_Target_of G ) . x ) in { target } by TARSKI:def 1;
then A13: ( ( the_Target_of G ) . x ) in ( dom ( Dn1 `1 ) ) by A8,XBOOLE_0:def 3;
e DSJoins ( dom ( Dn `1 ) ),( ( the_Vertices_of G ) \ ( dom ( Dn `1 ) ) ),G by A5,CKB33:def 1;
then ( ( the_Source_of G ) . x ) in ( dom ( Dn `1 ) ) by A12,GLIB_000:def 16;
hence x in ( G .edgesBetween ( dom ( Dn1 `1 ) ) ) by A3,A9,A12,A13,GLIB_000:31;
end;
end;
hence x in ( G .edgesBetween ( dom ( Dn1 `1 ) ) );
end;
end;
hence x in ( G .edgesBetween ( dom ( Dn1 `1 ) ) );
end;
hence ( Dn1 `2 ) c= ( G .edgesBetween ( dom ( Dn1 `1 ) ) ) by TARSKI:def 3;
end;
then A14: (for k being Nat holds (P[ k ] implies P[ ( k + 1 ) ]));
D0 = ( DIJK:Init src ) by CKB38:def 1;
then (for x being set holds (x in ( D0 `2 ) implies x in ( G .edgesBetween ( dom ( D0 `1 ) ) ))) by MCART_1:7;
then A15: P[ ( 0 ) ] by TARSKI:def 3;
(for n being Nat holds P[ n ]) from NAT_1:sch 2(A15,A14);
hence thesis;
end;
