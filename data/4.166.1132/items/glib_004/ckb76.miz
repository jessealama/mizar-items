environ
vocabularies NUMBERS,FUNCT_1,RELAT_1,FUNCT_4,FUNCOP_1,XBOOLE_0,PRE_POLY,TARSKI,CARD_1,UPROOTS,CARD_3,ARYTM_3,FINSEQ_1,NAT_1,XXREAL_0,FINSET_1,SUBSET_1,FINSEQ_2,XREAL_0,ORDINAL1,ARYTM_1,GLIB_003,TREES_1,GLIB_000,GLIB_001,REAL_1,PBOOLE,ZFMISC_1,FUNCT_2,ABIAN,PARTFUN1,MCART_1,GLIB_002,WAYBEL_0,RELAT_2,RCOMP_1,GRAPH_1,GLIB_004;
notations TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,CARD_1,NUMBERS,SUBSET_1,DOMAIN_1,MCART_1,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,RELAT_1,RELSET_1,PARTFUN1,FUNCT_1,FINSEQ_1,FINSEQ_2,SEQ_1,PBOOLE,FUNCT_2,RVSUM_1,ABIAN,ORDINAL1,UPROOTS,FINSET_1,NAT_1,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GLIB_003,RFUNCT_3,PRE_POLY,CKB12,CKB13,CKB14,CKB15,CKB20,CKB22,CKB23,CKB29,CKB30,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB54,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63;
definitions TARSKI,GLIB_000,GLIB_003,RVSUM_1,FUNCOP_1,CKB12,CKB13,CKB14,CKB15,CKB20,CKB23,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB57,CKB58,CKB59,CKB60,CKB62,CKB63;
theorems CARD_1,CARD_2,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSET_1,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GLIB_003,ABIAN,INT_1,JORDAN12,NAT_1,PARTFUN1,PBOOLE,RELAT_1,RVSUM_1,TARSKI,TREES_1,UPROOTS,XBOOLE_0,XBOOLE_1,XREAL_0,ZFMISC_1,XREAL_1,XXREAL_0,ORDINAL1,FINSOP_1,FUNCT_7,MCART_1,RELSET_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB51,CKB52,CKB53,CKB57,CKB58,CKB59,CKB60,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB71,CKB72,CKB73,CKB74,CKB75;
schemes NAT_1,SUBSET_1,RECDEF_1,GRAPH_5,CQC_SIM1,PBOOLE;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,FRAENKEL,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,CARD_1,UPROOTS,MEMBERED,GLIB_000,ABIAN,GLIB_001,GLIB_002,GLIB_003,VALUED_0,FUNCT_2,RELSET_1,PRE_POLY,INT_1,CKB17,CKB21,CKB31,CKB32,CKB50,CKB55,CKB56,CKB69,CKB70;
constructors DOMAIN_1,BINOP_2,FINSOP_1,RVSUM_1,GRAPH_2,RFUNCT_3,UPROOTS,GLIB_002,GLIB_003,SEQ_1,XXREAL_2,RELSET_1,PBOOLE,CKB12,CKB13,CKB14,CKB15,CKB20,CKB22,CKB23,CKB30,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th38: (for G1 being  finite  real-weighted WGraph holds (for n being Nat holds (for G2 being (inducedSubgraph of G1,( ( ( PRIM:CompSeq G1 ) . n ) `1 ),( ( ( PRIM:CompSeq G1 ) . n ) `2 )) holds G2 is  Tree-like)))
proof
let G1 being  finite  real-weighted WGraph;
set PCS = ( PRIM:CompSeq G1 );
defpred P[ Nat ]
 means
(for G2 being (inducedSubgraph of G1,( ( PCS . $1 ) `1 ),( ( PCS . $1 ) `2 )) holds G2 is  Tree-like);
set G0 = ( PCS . ( 0 ) );
set src = ( choose ( the_Vertices_of G1 ) );
now
let n being Nat;
set Gn = ( PCS . n );
set Gn1 = ( PCS . ( n + 1 ) );
set Next = ( PRIM:NextBestEdges Gn );
set e = ( choose Next );
set G3 = the (inducedSubgraph of G1,( Gn `1 ),( Gn `2 ));
A1: Gn1 = ( PRIM:Step Gn ) by CKB62:def 1;
A2: ( Gn `2 ) c= ( G1 .edgesBetween ( Gn `1 ) ) by CKB66:1;
( Gn `1 ) is non empty non empty (Subset of ( the_Vertices_of G1 )) by CKB66:1;
then A3: (( the_Vertices_of G3 ) = ( Gn `1 ) & ( the_Edges_of G3 ) = ( Gn `2 )) by A2,GLIB_000:def 37;
assume A4: P[ n ];
then A5: G3 is  Tree-like;
now
A6: ( G3 .order() ) = ( ( G3 .size() ) + 1 ) by A5,GLIB_002:46;
let G2 being (inducedSubgraph of G1,( Gn1 `1 ),( Gn1 `2 ));
A7: ( Gn1 `2 ) c= ( G1 .edgesBetween ( Gn1 `1 ) ) by CKB66:1;
( Gn1 `1 ) is non empty non empty (Subset of ( the_Vertices_of G1 )) by CKB66:1;
then A8: ( the_Vertices_of G2 ) = ( Gn1 `1 ) by A7,GLIB_000:def 37;
now
per cases ;
suppose Next = ( {} );

then Gn = Gn1 by A1,CKB59:def 1;
hence G2 is  Tree-like by A4;
end;
suppose A9: Next <> ( {} );

set GnV = ( Gn `1 );
set GnVg = ( ( the_Vertices_of G1 ) \ GnV );
A10: e SJoins GnV,GnVg,G1 by A9,CKB57:def 1;
A11:now
assume A12: e in ( Gn `2 );
then ( ( the_Target_of G1 ) . e ) in GnV by A2,GLIB_000:31;
then A13: (not ( ( the_Target_of G1 ) . e ) in GnVg) by XBOOLE_0:def 5;
( ( the_Source_of G1 ) . e ) in GnV by A2,A12,GLIB_000:31;
then (not ( ( the_Source_of G1 ) . e ) in GnVg) by XBOOLE_0:def 5;
hence contradiction by A10,A13,GLIB_000:def 15;
end;
consider v being (Vertex of G1) such that A14: (not v in ( Gn `1 )) and A15: Gn1 = [ ( ( Gn `1 ) \/ { v } ),( ( Gn `2 ) \/ { e } ) ] by A1,A9,CKB64:1;
A16: ( card ( Gn1 `1 ) ) = ( card ( ( Gn `1 ) \/ { v } ) ) by A15,MCART_1:7
.= ( ( card ( Gn `1 ) ) + 1 ) by A14,CARD_2:41;
( card ( Gn1 `2 ) ) = ( card ( ( Gn `2 ) \/ { e } ) ) by A15,MCART_1:7
.= ( ( card ( Gn `2 ) ) + 1 ) by A11,CARD_2:41;
then ( G2 .order() ) = ( ( G2 .size() ) + 1 ) by A3,A7,A8,A6,A16,GLIB_000:def 37;
hence G2 is  Tree-like by GLIB_002:47;
end;
end;
hence G2 is  Tree-like;
end;
hence P[ ( n + 1 ) ];
end;
then A17: (for n being Nat holds (P[ n ] implies P[ ( n + 1 ) ]));
G0 = ( PRIM:Init G1 ) by CKB62:def 1;
then (( G0 `1 ) = { src } & ( G0 `2 ) = ( {} )) by MCART_1:7;
then A18: P[ ( 0 ) ];
(for n being Nat holds P[ n ]) from NAT_1:sch 2(A18,A17);
hence thesis;
end;
