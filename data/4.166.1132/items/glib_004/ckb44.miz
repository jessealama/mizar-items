environ
vocabularies NUMBERS,FUNCT_1,RELAT_1,FUNCT_4,FUNCOP_1,XBOOLE_0,PRE_POLY,TARSKI,CARD_1,UPROOTS,CARD_3,ARYTM_3,FINSEQ_1,NAT_1,XXREAL_0,FINSET_1,SUBSET_1,FINSEQ_2,XREAL_0,ORDINAL1,ARYTM_1,GLIB_003,TREES_1,GLIB_000,GLIB_001,REAL_1,PBOOLE,ZFMISC_1,FUNCT_2,ABIAN,PARTFUN1,MCART_1,GLIB_002,WAYBEL_0,RELAT_2,RCOMP_1,GRAPH_1,GLIB_004;
notations TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,CARD_1,NUMBERS,SUBSET_1,DOMAIN_1,MCART_1,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,RELAT_1,RELSET_1,PARTFUN1,FUNCT_1,FINSEQ_1,FINSEQ_2,SEQ_1,PBOOLE,FUNCT_2,RVSUM_1,ABIAN,ORDINAL1,UPROOTS,FINSET_1,NAT_1,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GLIB_003,RFUNCT_3,PRE_POLY,CKB12,CKB13,CKB14,CKB15,CKB20,CKB22,CKB23,CKB29,CKB30,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
definitions TARSKI,GLIB_000,GLIB_003,RVSUM_1,FUNCOP_1,CKB12,CKB13,CKB14,CKB15,CKB20,CKB23,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39;
theorems CARD_1,CARD_2,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSET_1,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GLIB_003,ABIAN,INT_1,JORDAN12,NAT_1,PARTFUN1,PBOOLE,RELAT_1,RVSUM_1,TARSKI,TREES_1,UPROOTS,XBOOLE_0,XBOOLE_1,XREAL_0,ZFMISC_1,XREAL_1,XXREAL_0,ORDINAL1,FINSOP_1,FUNCT_7,MCART_1,RELSET_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43;
schemes NAT_1,SUBSET_1,RECDEF_1,GRAPH_5,CQC_SIM1,PBOOLE;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,FRAENKEL,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,CARD_1,UPROOTS,MEMBERED,GLIB_000,ABIAN,GLIB_001,GLIB_002,GLIB_003,VALUED_0,FUNCT_2,RELSET_1,PRE_POLY,INT_1,CKB17,CKB21,CKB31,CKB32;
constructors DOMAIN_1,BINOP_2,FINSOP_1,RVSUM_1,GRAPH_2,RFUNCT_3,UPROOTS,GLIB_002,GLIB_003,SEQ_1,XXREAL_2,RELSET_1,PBOOLE,CKB12,CKB13,CKB14,CKB15,CKB20,CKB22,CKB23,CKB30,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th19: (for G being  finite  real-weighted WGraph holds (for src being (Vertex of G) holds (for n being Nat holds ( dom ( ( ( DIJK:CompSeq src ) . n ) `1 ) ) c= ( G .reachableDFrom src ))))
proof
let G being  finite  real-weighted WGraph;
let src being (Vertex of G);
set DCS = ( DIJK:CompSeq src );
defpred P[ Nat ]
 means
( dom ( ( DCS . $1 ) `1 ) ) c= ( G .reachableDFrom src );
( DCS . ( 0 ) ) = ( DIJK:Init src ) by CKB38:def 1;
then A1: ( dom ( ( DCS . ( 0 ) ) `1 ) ) = { src } by CKB42:1;
now
let k being Nat;
assume that
A2: ( dom ( ( DCS . k ) `1 ) ) c= ( G .reachableDFrom src );
set Gk = ( DCS . k );
set NextG = ( DCS . ( k + 1 ) );
set BestEdges = ( DIJK:NextBestEdges Gk );
set e = ( choose BestEdges );
set NextEG = ( ( Gk `2 ) \/ { e } );
set v1 = ( ( the_Source_of G ) . e );
set target = ( ( the_Target_of G ) . e );
set pc = ( ( Gk `1 ) . v1 );
set ec = ( ( the_Weight_of G ) . e );
A3: NextG = ( DIJK:Step Gk ) by CKB38:def 1;
now
let x being set;
assume A4: x in ( dom ( ( DCS . ( k + 1 ) ) `1 ) );
now
per cases ;
suppose BestEdges = ( {} );

then Gk = NextG by A3,CKB34:def 1;
hence x in ( G .reachableDFrom src ) by A2,A4;
end;
suppose A5: BestEdges <> ( {} );

set xx = x;
reconsider xx as (Vertex of G) by A4;
e DSJoins ( dom ( Gk `1 ) ),( ( the_Vertices_of G ) \ ( dom ( Gk `1 ) ) ),G by A5,CKB33:def 1;
then A6: v1 in ( dom ( Gk `1 ) ) by GLIB_000:def 16;
then reconsider v19 = v1 as (Vertex of G);
NextG = [ ( ( Gk `1 ) +* ( target .--> ( pc + ec ) ) ),NextEG ] by A3,A5,CKB34:def 1;
then A7: ( NextG `1 ) = ( ( Gk `1 ) +* ( target .--> ( pc + ec ) ) ) by MCART_1:7;
now
per cases ;
suppose xx in ( dom ( Gk `1 ) );

hence xx in ( G .reachableDFrom src ) by A2;
end;
suppose A8: (not xx in ( dom ( Gk `1 ) ));

A9: e in BestEdges by A5;
( ( the_Target_of G ) . e ) = xx by A4,A7,A8,CKB2:1;
then e DJoins v19,xx,G by A9,GLIB_000:def 14;
hence xx in ( G .reachableDFrom src ) by A2,A6,GLIB_002:19;
end;
end;
hence x in ( G .reachableDFrom src );
end;
end;
hence x in ( G .reachableDFrom src );
end;
hence ( dom ( ( DCS . ( k + 1 ) ) `1 ) ) c= ( G .reachableDFrom src ) by TARSKI:def 3;
end;
then A10: (for k being Nat holds (P[ k ] implies P[ ( k + 1 ) ]));
src in ( G .reachableDFrom src ) by GLIB_002:18;
then A11: P[ ( 0 ) ] by A1,ZFMISC_1:31;
(for n being Nat holds P[ n ]) from NAT_1:sch 2(A11,A10);
hence thesis;
end;
