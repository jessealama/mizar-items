environ
vocabularies NUMBERS,FUNCT_1,RELAT_1,FUNCT_4,FUNCOP_1,XBOOLE_0,PRE_POLY,TARSKI,CARD_1,UPROOTS,CARD_3,ARYTM_3,FINSEQ_1,NAT_1,XXREAL_0,FINSET_1,SUBSET_1,FINSEQ_2,XREAL_0,ORDINAL1,ARYTM_1,GLIB_003,TREES_1,GLIB_000,GLIB_001,REAL_1,PBOOLE,ZFMISC_1,FUNCT_2,ABIAN,PARTFUN1,MCART_1,GLIB_002,WAYBEL_0,RELAT_2,RCOMP_1,GRAPH_1,GLIB_004;
notations TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,CARD_1,NUMBERS,SUBSET_1,DOMAIN_1,MCART_1,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,RELAT_1,RELSET_1,PARTFUN1,FUNCT_1,FINSEQ_1,FINSEQ_2,SEQ_1,PBOOLE,FUNCT_2,RVSUM_1,ABIAN,ORDINAL1,UPROOTS,FINSET_1,NAT_1,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GLIB_003,RFUNCT_3,PRE_POLY,CKB12,CKB13,CKB14,CKB15,CKB20,CKB22,CKB23,CKB29,CKB30,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB54,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63;
definitions TARSKI,GLIB_000,GLIB_003,RVSUM_1,FUNCOP_1,CKB12,CKB13,CKB14,CKB15,CKB20,CKB23,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB57,CKB58,CKB59,CKB60,CKB62,CKB63;
theorems CARD_1,CARD_2,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSET_1,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GLIB_003,ABIAN,INT_1,JORDAN12,NAT_1,PARTFUN1,PBOOLE,RELAT_1,RVSUM_1,TARSKI,TREES_1,UPROOTS,XBOOLE_0,XBOOLE_1,XREAL_0,ZFMISC_1,XREAL_1,XXREAL_0,ORDINAL1,FINSOP_1,FUNCT_7,MCART_1,RELSET_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB51,CKB52,CKB53,CKB57,CKB58,CKB59,CKB60,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68;
schemes NAT_1,SUBSET_1,RECDEF_1,GRAPH_5,CQC_SIM1,PBOOLE;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,FRAENKEL,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,CARD_1,UPROOTS,MEMBERED,GLIB_000,ABIAN,GLIB_001,GLIB_002,GLIB_003,VALUED_0,FUNCT_2,RELSET_1,PRE_POLY,INT_1,CKB17,CKB21,CKB31,CKB32,CKB50,CKB55,CKB56,CKB69,CKB70;
constructors DOMAIN_1,BINOP_2,FINSOP_1,RVSUM_1,GRAPH_2,RFUNCT_3,UPROOTS,GLIB_002,GLIB_003,SEQ_1,XXREAL_2,RELSET_1,PBOOLE,CKB12,CKB13,CKB14,CKB15,CKB20,CKB22,CKB23,CKB30,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th33: (for G being  finite  real-weighted WGraph holds (for n being Nat holds ( ( ( PRIM:CompSeq G ) . n ) `1 ) c= ( G .reachableFrom ( choose ( the_Vertices_of G ) ) )))
proof
let G being  finite  real-weighted WGraph;
set src = ( choose ( the_Vertices_of G ) );
defpred P[ Nat ]
 means
( ( ( PRIM:CompSeq G ) . $1 ) `1 ) c= ( G .reachableFrom ( choose ( the_Vertices_of G ) ) );
set G0 = ( ( PRIM:CompSeq G ) . ( 0 ) );
G0 = ( PRIM:Init G ) by CKB62:def 1;
then A1: ( G0 `1 ) = { src } by MCART_1:7;
A2:now
let n being Nat;
assume A3: P[ n ];
set Gn = ( ( PRIM:CompSeq G ) . n );
set Gn1 = ( ( PRIM:CompSeq G ) . ( n + 1 ) );
set Next = ( PRIM:NextBestEdges Gn );
set e = ( choose Next );
set sc = ( ( the_Source_of G ) . e );
set tar = ( ( the_Target_of G ) . e );
A4: Gn1 = ( PRIM:Step Gn ) by CKB62:def 1;
now
per cases ;
suppose Next = ( {} );

hence P[ ( n + 1 ) ] by A3,A4,CKB59:def 1;
end;
suppose A5: (Next <> ( {} ) & sc in ( Gn `1 ));

then Gn1 = [ ( ( Gn `1 ) \/ { tar } ),( ( Gn `2 ) \/ { e } ) ] by A4,CKB59:def 1;
then A6: ( Gn1 `1 ) = ( ( Gn `1 ) \/ { tar } ) by MCART_1:7;
A7: e in Next by A5;
now
let v being set;
assume A8: v in ( Gn1 `1 );
now
per cases  by A6,A8,XBOOLE_0:def 3;
suppose v in ( Gn `1 );

hence v in ( G .reachableFrom src ) by A3;
end;
suppose v in { tar };

then v = tar by TARSKI:def 1;
then e Joins sc,v,G by A7,GLIB_000:def 13;
hence v in ( G .reachableFrom src ) by A3,A5,GLIB_002:10;
end;
end;
hence v in ( G .reachableFrom src );
end;
hence P[ ( n + 1 ) ] by TARSKI:def 3;
end;
suppose A9: (Next <> ( {} ) & (not sc in ( Gn `1 )));

then Gn1 = [ ( ( Gn `1 ) \/ { sc } ),( ( Gn `2 ) \/ { e } ) ] by A4,CKB59:def 1;
then A10: ( Gn1 `1 ) = ( ( Gn `1 ) \/ { sc } ) by MCART_1:7;
A11: e SJoins ( Gn `1 ),( ( the_Vertices_of G ) \ ( Gn `1 ) ),G by A9,CKB57:def 1;
then A12: e in ( the_Edges_of G ) by GLIB_000:def 15;
A13: tar in ( Gn `1 ) by A9,A11,GLIB_000:def 15;
now
let v being set;
assume A14: v in ( Gn1 `1 );
now
per cases  by A10,A14,XBOOLE_0:def 3;
suppose v in ( Gn `1 );

hence v in ( G .reachableFrom src ) by A3;
end;
suppose v in { sc };

then v = sc by TARSKI:def 1;
then e Joins tar,v,G by A12,GLIB_000:def 13;
hence v in ( G .reachableFrom src ) by A3,A13,GLIB_002:10;
end;
end;
hence v in ( G .reachableFrom src );
end;
hence P[ ( n + 1 ) ] by TARSKI:def 3;
end;
end;
hence P[ ( n + 1 ) ];
end;
src in ( G .reachableFrom src ) by GLIB_002:9;
then A15: P[ ( 0 ) ] by A1,ZFMISC_1:31;
(for n being Nat holds P[ n ]) from NAT_1:sch 2(A15,A2);
hence thesis;
end;
