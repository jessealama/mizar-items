environ
vocabularies FINSEQ_1,FUNCT_1,RELAT_1,RLVECT_2,CARD_3,TARSKI,BINOP_1,GROUP_1,XXREAL_0,GROUP_2,CARD_1,NUMBERS,FUNCT_4,GROUP_6,GROUP_7,FUNCOP_1,ALGSTR_0,GROUP_12,PARTFUN1,FUNCT_2,SUBSET_1,XBOOLE_0,STRUCT_0,NAT_1,ORDINAL4,PRE_TOPC,ARYTM_1,ARYTM_3;
notations TARSKI,XBOOLE_0,SUBSET_1,XCMPLX_0,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_4,FUNCOP_1,CARD_3,NAT_1,NUMBERS,FINSEQ_1,XXREAL_0,STRUCT_0,ALGSTR_0,GROUP_1,GROUP_2,GROUP_3,GROUP_4,GROUP_6,PRALG_1,GROUP_7,FUNCT_7;
definitions GROUP_2,FINSEQ_1;
theorems PRALG_1,FUNCT_1,CARD_3,FUNCT_2,TARSKI,GROUP_1,GROUP_2,GROUP_3,GROUP_4,GROUP_6,FINSEQ_2,XREAL_1,ORDINAL1,FINSEQ_1,FINSEQ_3,NAT_1,XBOOLE_0,RELAT_1,XXREAL_0,GROUP_7,FUNCT_7,YELLOW17,STRUCT_0,PARTFUN1;
schemes NAT_1,SUBSET_1,FUNCT_2,XBOOLE_0,FINSEQ_1;
registrations XBOOLE_0,XREAL_0,STRUCT_0,GROUP_2,MONOID_0,ORDINAL1,NAT_1,FUNCT_2,FUNCOP_1,CARD_1,CARD_3,GROUP_7,XXREAL_0,RELSET_1,FINSEQ_1,CKB1,CKB2,CKB3;
constructors BINOP_1,XXREAL_0,REALSET1,FUNCT_4,GROUP_6,MONOID_0,PRALG_1,GROUP_4,GROUP_7,FUNCT_7,RELSET_1;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve I for non  empty set;
reserve F for  associative  Group-like (multMagma-Family of I);
reserve i for (Element of I);
reserve j for (Element of I);
theorem
Th1: (for x being Function holds (for g being (Element of ( F . i )) holds (((( dom x ) = I & ( x . i ) = g) & (for j being (Element of I) holds (j <> i implies ( x . j ) = ( 1_ ( F . j ) )))) iff x = ( ( 1_ ( product F ) ) +* (i,g) ))))
proof
let x being Function;
let g being (Element of ( F . i ));
A1:now
assume A2: x = ( ( 1_ ( product F ) ) +* (i,g) );
A3: (the carrier of ( product F )) = ( product ( Carrier F ) ) by GROUP_7:def 2;
thus A4: ( dom x ) = ( dom ( 1_ ( product F ) ) ) by A2,FUNCT_7:30
.= I by A3,PARTFUN1:def 2;
( dom x ) = ( dom ( 1_ ( product F ) ) ) by A2,FUNCT_7:30;
hence ( x . i ) = g by A2,A4,FUNCT_7:31;
thus (for j being (Element of I) holds (j <> i implies ( x . j ) = ( 1_ ( F . j ) )))
proof
let j being (Element of I);
assume j <> i;
then ( x . j ) = ( ( 1_ ( product F ) ) . j ) by A2,FUNCT_7:32;
hence ( x . j ) = ( 1_ ( F . j ) ) by GROUP_7:6;
end;

end;
now
assume A5: ((( dom x ) = I & ( x . i ) = g) & (for j being (Element of I) holds (j <> i implies ( x . j ) = ( 1_ ( F . j ) ))));
(the carrier of ( product F )) = ( product ( Carrier F ) ) by GROUP_7:def 2;
then A6: ( dom ( 1_ ( product F ) ) ) = I by PARTFUN1:def 2;
A7: ( dom ( ( 1_ ( product F ) ) +* (i,g) ) ) = ( dom x ) by A5,A6,FUNCT_7:30;
set FG = ( ( 1_ ( product F ) ) +* (i,g) );
now
let j0 being set;
assume j0 in ( dom x );
then reconsider j = j0 as (Element of I) by A5;
per cases ;
suppose A8: j <> i;

then ( x . j ) = ( 1_ ( F . j ) ) by A5;
hence ( x . j0 ) = ( ( 1_ ( product F ) ) . j ) by GROUP_7:6
.= ( FG . j0 ) by A8,FUNCT_7:32;
end;
suppose j = i;

hence ( x . j0 ) = ( FG . j0 ) by A6,A5,FUNCT_7:31;
end;
end;
hence x = ( ( 1_ ( product F ) ) +* (i,g) ) by A7,FUNCT_1:2;
end;
hence thesis by A1;
end;
