environ
vocabularies FINSEQ_1,FUNCT_1,RELAT_1,RLVECT_2,CARD_3,TARSKI,BINOP_1,GROUP_1,XXREAL_0,GROUP_2,CARD_1,NUMBERS,FUNCT_4,GROUP_6,GROUP_7,FUNCOP_1,ALGSTR_0,GROUP_12,PARTFUN1,FUNCT_2,SUBSET_1,XBOOLE_0,STRUCT_0,NAT_1,ORDINAL4,PRE_TOPC,ARYTM_1,ARYTM_3;
notations TARSKI,XBOOLE_0,SUBSET_1,XCMPLX_0,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_4,FUNCOP_1,CARD_3,NAT_1,NUMBERS,FINSEQ_1,XXREAL_0,STRUCT_0,ALGSTR_0,GROUP_1,GROUP_2,GROUP_3,GROUP_4,GROUP_6,PRALG_1,GROUP_7,FUNCT_7,CKB5,CKB12,CKB14;
definitions GROUP_2,FINSEQ_1,CKB5,CKB12,CKB14;
theorems PRALG_1,FUNCT_1,CARD_3,FUNCT_2,TARSKI,GROUP_1,GROUP_2,GROUP_3,GROUP_4,GROUP_6,FINSEQ_2,XREAL_1,ORDINAL1,FINSEQ_1,FINSEQ_3,NAT_1,XBOOLE_0,RELAT_1,XXREAL_0,GROUP_7,FUNCT_7,YELLOW17,STRUCT_0,PARTFUN1,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
schemes NAT_1,SUBSET_1,FUNCT_2,XBOOLE_0,FINSEQ_1;
registrations XBOOLE_0,XREAL_0,STRUCT_0,GROUP_2,MONOID_0,ORDINAL1,NAT_1,FUNCT_2,FUNCOP_1,CARD_1,CARD_3,GROUP_7,XXREAL_0,RELSET_1,FINSEQ_1,CKB1,CKB2,CKB3,CKB6,CKB15,CKB16;
constructors BINOP_1,XXREAL_0,REALSET1,FUNCT_4,GROUP_6,MONOID_0,PRALG_1,GROUP_4,GROUP_7,FUNCT_7,RELSET_1,CKB5,CKB12,CKB14;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve I for non  empty set;
reserve F for  associative  Group-like (multMagma-Family of I);
reserve i for (Element of I);
reserve j for (Element of I);
theorem
(for x,y being (Element of ( product F )) holds (((i <> j & x in ( ProjGroup (F,i) )) & y in ( ProjGroup (F,j) )) implies ( x * y ) = ( y * x )))
proof
set G = ( product F );
let x being (Element of G);
let y being (Element of G);
assume A1: ((i <> j & x in ( ProjGroup (F,i) )) & y in ( ProjGroup (F,j) ));
A2: ((the carrier of ( ProjGroup (F,i) )) = ( ProjSet (F,i) ) & (the carrier of ( ProjGroup (F,j) )) = ( ProjSet (F,j) )) by CKB12:def 1;
A3: (x in ( ProjSet (F,i) ) & y in ( ProjSet (F,j) )) by A2,A1,STRUCT_0:def 5;
consider xx being Function,gx being (Element of ( F . i )) such that A4: (((xx = x & ( dom xx ) = I) & ( xx . i ) = gx) & (for k being (Element of I) holds (k <> i implies ( xx . k ) = ( 1_ ( F . k ) )))) by A3,CKB7:1;
consider yy being Function,gy being (Element of ( F . j )) such that A5: (((yy = y & ( dom yy ) = I) & ( yy . j ) = gy) & (for k being (Element of I) holds (k <> j implies ( yy . k ) = ( 1_ ( F . k ) )))) by A3,CKB7:1;
A6: (the carrier of ( product F )) = ( product ( Carrier F ) ) by GROUP_7:def 2;
set xy = ( x * y );
set yx = ( y * x );
A7: ( dom xy ) = I by A6,PARTFUN1:def 2;
A8: ( dom yx ) = I by A6,PARTFUN1:def 2;
(for k being set holds (k in ( dom xy ) implies ( xy . k ) = ( yx . k )))
proof
let k0 being set;
assume k0 in ( dom xy );
then reconsider k = k0 as (Element of I) by A6,PARTFUN1:def 2;
per cases ;
suppose A9: (k0 <> i & k0 <> j);

then A10: ( xx . k ) = ( 1_ ( F . k ) ) by A4;
A11: ( yy . k ) = ( 1_ ( F . k ) ) by A9,A5;
( xy . k ) = ( ( 1_ ( F . k ) ) * ( 1_ ( F . k ) ) ) by A4,A5,A10,A11,GROUP_7:1
.= ( yx . k ) by A4,A5,A10,A11,GROUP_7:1;
hence ( xy . k0 ) = ( yx . k0 );
end;
suppose A12: (k0 = i or k0 = j);

per cases  by A12;
suppose A13: k0 = i;

then A14: ( yy . k ) = ( 1_ ( F . k ) ) by A1,A5;
reconsider gx as (Element of ( F . k )) by A13;
( xy . k ) = ( gx * ( 1_ ( F . k ) ) ) by A4,A5,A14,A13,GROUP_7:1
.= gx by GROUP_1:def 4
.= ( ( 1_ ( F . k ) ) * gx ) by GROUP_1:def 4
.= ( yx . k ) by A4,A5,A14,A13,GROUP_7:1;
hence ( xy . k0 ) = ( yx . k0 );
end;
suppose A15: k0 = j;

then A16: ( xx . k ) = ( 1_ ( F . k ) ) by A1,A4;
reconsider gy as (Element of ( F . k )) by A15;
( xy . k ) = ( ( 1_ ( F . k ) ) * gy ) by A4,A5,A16,A15,GROUP_7:1
.= gy by GROUP_1:def 4
.= ( gy * ( 1_ ( F . k ) ) ) by GROUP_1:def 4
.= ( yx . k ) by A4,A5,A16,A15,GROUP_7:1;
hence ( xy . k0 ) = ( yx . k0 );
end;
end;
end;
hence thesis by A7,A8,FUNCT_1:2;
end;
