environ
vocabularies FINSEQ_1,FUNCT_1,RELAT_1,RLVECT_2,CARD_3,TARSKI,BINOP_1,GROUP_1,XXREAL_0,GROUP_2,CARD_1,NUMBERS,FUNCT_4,GROUP_6,GROUP_7,FUNCOP_1,ALGSTR_0,GROUP_12,PARTFUN1,FUNCT_2,SUBSET_1,XBOOLE_0,STRUCT_0,NAT_1,ORDINAL4,PRE_TOPC,ARYTM_1,ARYTM_3;
notations TARSKI,XBOOLE_0,SUBSET_1,XCMPLX_0,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_4,FUNCOP_1,CARD_3,NAT_1,NUMBERS,FINSEQ_1,XXREAL_0,STRUCT_0,ALGSTR_0,GROUP_1,GROUP_2,GROUP_3,GROUP_4,GROUP_6,PRALG_1,GROUP_7,FUNCT_7,CKB5,CKB12,CKB14;
definitions GROUP_2,FINSEQ_1,CKB5,CKB12,CKB14;
theorems PRALG_1,FUNCT_1,CARD_3,FUNCT_2,TARSKI,GROUP_1,GROUP_2,GROUP_3,GROUP_4,GROUP_6,FINSEQ_2,XREAL_1,ORDINAL1,FINSEQ_1,FINSEQ_3,NAT_1,XBOOLE_0,RELAT_1,XXREAL_0,GROUP_7,FUNCT_7,YELLOW17,STRUCT_0,PARTFUN1,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB17,CKB18,CKB19,CKB20;
schemes NAT_1,SUBSET_1,FUNCT_2,XBOOLE_0,FINSEQ_1;
registrations XBOOLE_0,XREAL_0,STRUCT_0,GROUP_2,MONOID_0,ORDINAL1,NAT_1,FUNCT_2,FUNCOP_1,CARD_1,CARD_3,GROUP_7,XXREAL_0,RELSET_1,FINSEQ_1,CKB1,CKB2,CKB3,CKB6,CKB15,CKB16;
constructors BINOP_1,XXREAL_0,REALSET1,FUNCT_4,GROUP_6,MONOID_0,PRALG_1,GROUP_4,GROUP_7,FUNCT_7,RELSET_1,CKB5,CKB12,CKB14;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve n for non empty Nat;
theorem
Th11: (for F being  associative  Group-like (multMagma-Family of ( Seg n )) holds (for x being (Element of ( product F )) holds (ex s being (FinSequence of ( product F )) st ((( len s ) = n & (for k being (Element of ( Seg n )) holds ( s . k ) in ( ProjGroup (F,k) ))) & x = ( Product s )))))
proof
let F being  associative  Group-like (multMagma-Family of ( Seg n ));
let x being (Element of ( product F ));
set I = ( Seg n );
defpred P[ Nat,set ]
 means
(ex k being (Element of I) st (ex g being (Element of ( F . k )) st ((k = $1 & ( x . k ) = g) & $2 = ( ( 1_ ( product F ) ) +* (k,g) ))));
A1: (for k being Nat holds (k in ( Seg n ) implies (ex z being (Element of ( product F )) st P[ k,z ])))
proof
let k being Nat;
assume k in ( Seg n );
then reconsider k0 = k as (Element of I);
A2: (the carrier of ( product F )) = ( product ( Carrier F ) ) by GROUP_7:def 2;
A3: ( dom ( Carrier F ) ) = I by PARTFUN1:def 2;
consider Rj being 1-sorted such that A4: (Rj = ( F . k0 ) & ( ( Carrier F ) . k0 ) = (the carrier of Rj)) by PRALG_1:def 13;
reconsider g = ( x . k0 ) as (Element of ( F . k0 )) by A4,A3,A2,CARD_3:9;
( ( 1_ ( product F ) ) +* (k0,g) ) in ( ProjSet (F,k0) ) by CKB5:def 1;
then reconsider z = ( ( 1_ ( product F ) ) +* (k0,g) ) as (Element of ( product F ));
take z;
thus P[ k,z ];
end;
consider s being (FinSequence of ( product F )) such that A5: (( dom s ) = ( Seg n ) & (for k being Nat holds (k in ( Seg n ) implies P[ k,( s . k ) ]))) from FINSEQ_1:sch 5(A1);
take s;
n in ( NAT ) by ORDINAL1:def 12;
hence A6: ( len s ) = n by A5,FINSEQ_1:def 3;
thus A7: (for k being (Element of I) holds ( s . k ) in ( ProjGroup (F,k) ))
proof
let k being (Element of ( Seg n ));
(ex k0 being (Element of I) st (ex g being (Element of ( F . k0 )) st ((k0 = k & ( x . k0 ) = g) & ( s . k ) = ( ( 1_ ( product F ) ) +* (k0,g) )))) by A5;
then A8: ( s . k ) in ( ProjSet (F,k) ) by CKB5:def 1;
(the carrier of ( ProjGroup (F,k) )) = ( ProjSet (F,k) ) by CKB12:def 1;
hence thesis by A8,STRUCT_0:def 5;
end;

set y = ( Product s );
A9: (the carrier of ( product F )) = ( product ( Carrier F ) ) by GROUP_7:def 2;
A10: ( dom x ) = ( Seg n ) by A9,PARTFUN1:def 2;
A11: ( dom y ) = ( Seg n ) by A9,PARTFUN1:def 2;
A12: ( dom ( 1_ ( product F ) ) ) = I by A9,PARTFUN1:def 2;
now
let t being set;
assume t in ( dom x );
then A13: t in ( Seg n ) by A9,PARTFUN1:def 2;
then reconsider i = t as Nat;
(1 <= i & i <= n) by A13,FINSEQ_1:1;
then A14: (ex si being (Element of ( product F )) st (si = ( s . i ) & ( y . i ) = ( si . i ))) by CKB19:1,A6,A7;
(ex i1 being (Element of I) st (ex g being (Element of ( F . i1 )) st ((i1 = i & ( x . i1 ) = g) & ( s . i ) = ( ( 1_ ( product F ) ) +* (i1,g) )))) by A13,A5;
hence ( x . t ) = ( y . t ) by A12,A14,FUNCT_7:31;
end;
hence thesis by A10,A11,FUNCT_1:2;
end;
