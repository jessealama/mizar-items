environ
vocabularies FINSEQ_1,FUNCT_1,RELAT_1,RLVECT_2,CARD_3,TARSKI,BINOP_1,GROUP_1,XXREAL_0,GROUP_2,CARD_1,NUMBERS,FUNCT_4,GROUP_6,GROUP_7,FUNCOP_1,ALGSTR_0,GROUP_12,PARTFUN1,FUNCT_2,SUBSET_1,XBOOLE_0,STRUCT_0,NAT_1,ORDINAL4,PRE_TOPC,ARYTM_1,ARYTM_3;
notations TARSKI,XBOOLE_0,SUBSET_1,XCMPLX_0,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_4,FUNCOP_1,CARD_3,NAT_1,NUMBERS,FINSEQ_1,XXREAL_0,STRUCT_0,ALGSTR_0,GROUP_1,GROUP_2,GROUP_3,GROUP_4,GROUP_6,PRALG_1,GROUP_7,FUNCT_7;
definitions GROUP_2,FINSEQ_1;
theorems PRALG_1,FUNCT_1,CARD_3,FUNCT_2,TARSKI,GROUP_1,GROUP_2,GROUP_3,GROUP_4,GROUP_6,FINSEQ_2,XREAL_1,ORDINAL1,FINSEQ_1,FINSEQ_3,NAT_1,XBOOLE_0,RELAT_1,XXREAL_0,GROUP_7,FUNCT_7,YELLOW17,STRUCT_0,PARTFUN1,CKB4;
schemes NAT_1,SUBSET_1,FUNCT_2,XBOOLE_0,FINSEQ_1;
registrations XBOOLE_0,XREAL_0,STRUCT_0,GROUP_2,MONOID_0,ORDINAL1,NAT_1,FUNCT_2,FUNCOP_1,CARD_1,CARD_3,GROUP_7,XXREAL_0,RELSET_1,FINSEQ_1,CKB1,CKB2,CKB3;
constructors BINOP_1,XXREAL_0,REALSET1,FUNCT_4,GROUP_6,MONOID_0,PRALG_1,GROUP_4,GROUP_7,FUNCT_7,RELSET_1;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve I for non  empty set;
reserve F for  associative  Group-like (multMagma-Family of I);
reserve i for (Element of I);
definition
let I being non  empty set;
let F being  associative  Group-like (multMagma-Family of I);
let i being (Element of I);
func ProjSet (F,i) -> (Subset of ( product F )) means 
:Def1: (for x being set holds (x in it iff (ex g being (Element of ( F . i )) st x = ( ( 1_ ( product F ) ) +* (i,g) ))));
existence
proof
set CF = (the carrier of ( product F ));
defpred P[ set ]
 means
(ex g being (Element of ( F . i )) st $1 = ( ( 1_ ( product F ) ) +* (i,g) ));
consider H being (Subset of CF) such that A1: (for x being set holds (x in H iff (x in CF & P[ x ]))) from SUBSET_1:sch 1;
take H;
set Gi = ( F . i );
A4:now
let x being set;
assume A5: P[ x ];
A6: (the carrier of ( product F )) = ( product ( Carrier F ) ) by GROUP_7:def 2;
(ex Ri being 1-sorted st (Ri = ( F . i ) & ( ( Carrier F ) . i ) = (the carrier of Ri))) by PRALG_1:def 13;
hence x in CF by A5,A6,YELLOW17:2;
end;
let x being set;
(x in H iff (x in CF & P[ x ])) by A1;
hence thesis by A4;
end;
uniqueness
proof
let F1 being (Subset of ( product F ));
let F2 being (Subset of ( product F ));
defpred P[ set ]
 means
(ex g being (Element of ( F . i )) st $1 = ( ( 1_ ( product F ) ) +* (i,g) ));
assume A7: (for x being set holds (x in F1 iff P[ x ]));
assume A8: (for x being set holds (x in F2 iff P[ x ]));
thus thesis from XBOOLE_0:sch 2(A7,A8);
end;
end;
