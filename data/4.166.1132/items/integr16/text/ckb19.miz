environ
vocabularies INTEGRA1,INTEGRA2,FINSEQ_1,SEQ_1,SEQ_2,ORDINAL2,ARYTM_1,RELAT_1,FUNCT_1,PARTFUN1,XBOOLE_0,FUNCT_3,INTEGR15,REALSET1,XCMPLX_0,COMPLEX1,COMSEQ_1,SETWISEO,SUBSET_1,NUMBERS,ORDINAL1,CARD_1,ORDINAL4,NAT_1,TARSKI,CARD_3,MEASURE7,ARYTM_3,XREAL_0,BINOP_2,XXREAL_0,XXREAL_2,INTEGRA5,VALUED_1,REAL_1,XXREAL_1,FUNCT_2,MEASURE5;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,NAT_1,RELAT_1,FUNCT_1,FUNCT_2,REAL_1,RCOMP_1,VALUED_1,RELSET_1,PARTFUN1,SEQ_1,SEQ_2,FINSEQ_1,FINSEQ_2,BINOP_2,BINOP_1,SETWOP_2,RVSUM_1,XXREAL_0,MEASURE5,INTEGRA1,INTEGRA2,INTEGRA3,INTEGRA5,INTEGR15,MESFUN6C,COMSEQ_1,COMSEQ_2,COMSEQ_3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
definitions XBOOLE_0,INTEGRA5,INTEGR15,FINSEQ_1,COMPLEX1,RVSUM_1,CKB6,CKB7,CKB8,CKB10;
theorems XBOOLE_0,XBOOLE_1,XCMPLX_0,XREAL_0,INTEGRA1,COMSEQ_3,RFUNCT_1,COMPLEX1,RELSET_1,BINOP_2,FINSOP_1,NAT_1,XXREAL_0,RELAT_1,ORDINAL1,XREAL_1,SEQ_2,FINSEQ_1,RVSUM_1,FUNCT_1,FUNCT_2,INTEGRA5,FINSEQ_3,INTEGRA6,INTEGR15,VALUED_1,MESFUN6C,CKB1,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB15,CKB16,CKB17,CKB18;
schemes FUNCT_2,FINSEQ_1,NAT_1;
registrations NUMBERS,XREAL_0,INTEGRA1,FUNCT_2,BINOP_2,MEMBERED,ORDINAL1,VALUED_0,RELSET_1,FINSEQ_1,MEASURE5,CKB2,CKB3,CKB13,CKB14;
constructors REAL_1,MONOID_0,MEASURE6,BINOP_2,SEQ_1,INTEGRA5,RELSET_1,INTEGR15,FINSOP_1,SETWISEO,COMSEQ_2,COMSEQ_3,MESFUN6C,SQUARE_1,SEQ_2,INTEGRA3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th6: (for F being (FinSequence of ( COMPLEX )) holds (for x being (Element of ( COMPLEX )) holds ( Im ( F ^ <* x *> ) ) = ( ( Im F ) ^ <* ( Im x ) *> )))
proof
let F being (FinSequence of ( COMPLEX ));
let x being (Element of ( COMPLEX ));
set F1 = ( Im ( F ^ <* x *> ) );
set F2 = ( ( Im F ) ^ <* ( Im x ) *> );
A1: ( dom F ) = ( dom ( Im F ) ) by COMSEQ_3:def 4;
A2: ( Seg ( len F ) ) = ( dom F ) by FINSEQ_1:def 3;
A3: ( len <* ( Im x ) *> ) = 1 by FINSEQ_1:39;
A4: ( dom F1 ) = ( dom ( F ^ <* x *> ) ) by COMSEQ_3:def 4
.= ( Seg ( ( len F ) + ( len <* x *> ) ) ) by FINSEQ_1:def 7
.= ( Seg ( ( len ( Im F ) ) + ( len <* x *> ) ) ) by A1,A2,FINSEQ_1:def 3
.= ( Seg ( ( len ( Im F ) ) + ( len <* ( Im x ) *> ) ) ) by A3,FINSEQ_1:39
.= ( dom F2 ) by FINSEQ_1:def 7;
now
let k being Nat;
assume A5: k in ( dom F1 );
then k in ( dom ( F ^ <* x *> ) ) by COMSEQ_3:def 4;
then A6: k in ( Seg ( len ( F ^ <* x *> ) ) ) by FINSEQ_1:def 3;
then k in ( Seg ( ( len F ) + ( len <* x *> ) ) ) by FINSEQ_1:22;
then A7: (1 <= k & k <= ( ( len F ) + ( len <* x *> ) )) by FINSEQ_1:1;
now
per cases ;
suppose A8: k = ( ( len F ) + 1 );

thus ( F1 . k ) = ( Im ( ( F ^ <* x *> ) . k ) ) by A5,COMSEQ_3:def 4
.= ( Im x ) by A8,FINSEQ_1:42
.= ( F2 . ( ( len ( Im F ) ) + 1 ) ) by FINSEQ_1:42
.= ( F2 . k ) by A8,A1,A2,FINSEQ_1:def 3;
end;
suppose A9: k <> ( ( len F ) + 1 );

k <= ( ( len F ) + 1 ) by A7,FINSEQ_1:39;
then k < ( ( len F ) + 1 ) by A9,XXREAL_0:1;
then (1 <= k & k <= ( len F )) by A6,FINSEQ_1:1,NAT_1:13;
then k in ( Seg ( len F ) ) by FINSEQ_1:1;
then A10: k in ( dom F ) by FINSEQ_1:def 3;
then A11: k in ( dom ( Im F ) ) by COMSEQ_3:def 4;
thus ( F1 . k ) = ( Im ( ( F ^ <* x *> ) . k ) ) by A5,COMSEQ_3:def 4
.= ( Im ( F . k ) ) by A10,FINSEQ_1:def 7
.= ( ( Im F ) . k ) by A11,COMSEQ_3:def 4
.= ( F2 . k ) by A11,FINSEQ_1:def 7;
end;
end;
hence ( F1 . k ) = ( F2 . k );
end;
hence ( Im ( F ^ <* x *> ) ) = ( ( Im F ) ^ <* ( Im x ) *> ) by A4,FINSEQ_1:13;
end;
