environ
vocabularies NUMBERS,REAL_1,ZFMISC_1,NORMSP_1,PRE_TOPC,PARTFUN1,FUNCT_1,NAT_1,FDIFF_1,SUBSET_1,RELAT_1,RCOMP_1,TARSKI,SEQ_1,ARYTM_3,VALUED_1,FUNCT_2,ARYTM_1,SEQ_2,ORDINAL2,SUPINF_2,FCONT_1,COMPLEX1,STRUCT_0,CARD_1,VALUED_0,XXREAL_0,FUNCOP_1,XREAL_0,ORDINAL1,XXREAL_2,XBOOLE_0,XXREAL_1;
notations TARSKI,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,REAL_1,NAT_1,VALUED_0,COMPLEX1,BINOP_2,VALUED_1,SEQ_1,SEQ_2,RCOMP_1,FDIFF_1,STRUCT_0,PRE_TOPC,RLVECT_1,VFUNCT_1,NORMSP_0,NORMSP_1,NDIFF_1,NFCONT_3,CKB3,CKB5,CKB6,CKB8,CKB15,CKB16,CKB17,CKB21,CKB37;
definitions RCOMP_1,SUBSET_1,XBOOLE_0,TARSKI,CKB3,CKB6,CKB15,CKB16,CKB17,CKB21,CKB37;
theorems TARSKI,ABSVALUE,XBOOLE_0,XBOOLE_1,RLVECT_1,XCMPLX_0,XCMPLX_1,ZFMISC_1,SEQ_1,SEQ_2,NAT_1,RELAT_1,FUNCT_1,VFUNCT_1,FUNCT_2,ORDINAL1,SEQ_4,NORMSP_1,LOPBAN_1,LOPBAN_3,PARTFUN1,PARTFUN2,FDIFF_1,NDIFF_1,FUNCOP_1,XREAL_1,COMPLEX1,XXREAL_0,VALUED_1,VALUED_0,NORMSP_0,XREAL_0,RCOMP_1,SEQM_3,RFUNCT_2,NFCONT_3,CKB1,CKB2,CKB3,CKB6,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38;
schemes FUNCT_2,SEQ_1;
registrations RELSET_1,STRUCT_0,ORDINAL1,XREAL_0,MEMBERED,FUNCT_2,NUMBERS,XBOOLE_0,VALUED_0,NORMSP_0,NORMSP_1,RELAT_1,SUBSET_1,XXREAL_0,LOPBAN_2,FUNCOP_1,NAT_1,RCOMP_1,VALUED_1,SEQ_4,FDIFF_1,CKB4,CKB7;
constructors REAL_1,FDIFF_1,VFUNCT_1,NDIFF_1,SEQ_1,RELSET_1,RVSUM_1,BINOP_2,INTEGR15,NAT_D,MEASURE6,NFCONT_3,CKB3,CKB6,CKB15,CKB16,CKB17,CKB21,CKB37;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve F for non  trivial RealNormSpace;
reserve x for Real;
registration
let F;
cluster  differentiable for (Function of ( REAL ),(the carrier of F));
existence
proof
reconsider Z = ( REAL ) as  open (Subset of ( REAL )) by CKB38:1;
reconsider f = ( ( REAL ) --> ( 0. F ) ) as (Function of ( REAL ),(the carrier of F));
take f;
A1: Z = ( dom f ) by FUNCT_2:def 1;
now
let x;
assume x in Z;
thus ( f /. x ) = ( 0. F ) by FUNCOP_1:7
.= ( x * ( 0. F ) ) by RLVECT_1:10
.= ( ( x * ( 0. F ) ) + ( 0. F ) ) by RLVECT_1:4;
end;
then f is_differentiable_on Z by A1,CKB31:1;
hence thesis by A1,CKB37:def 1;
end;
end;
