environ
vocabularies NUMBERS,REAL_1,ZFMISC_1,NORMSP_1,PRE_TOPC,PARTFUN1,FUNCT_1,NAT_1,FDIFF_1,SUBSET_1,RELAT_1,RCOMP_1,TARSKI,SEQ_1,ARYTM_3,VALUED_1,FUNCT_2,ARYTM_1,SEQ_2,ORDINAL2,SUPINF_2,FCONT_1,COMPLEX1,STRUCT_0,CARD_1,VALUED_0,XXREAL_0,FUNCOP_1,XREAL_0,ORDINAL1,XXREAL_2,XBOOLE_0,XXREAL_1;
notations TARSKI,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,REAL_1,NAT_1,VALUED_0,COMPLEX1,BINOP_2,VALUED_1,SEQ_1,SEQ_2,RCOMP_1,FDIFF_1,STRUCT_0,PRE_TOPC,RLVECT_1,VFUNCT_1,NORMSP_0,NORMSP_1,NDIFF_1,NFCONT_3,CKB3;
definitions RCOMP_1,SUBSET_1,XBOOLE_0,TARSKI,CKB3;
theorems TARSKI,ABSVALUE,XBOOLE_0,XBOOLE_1,RLVECT_1,XCMPLX_0,XCMPLX_1,ZFMISC_1,SEQ_1,SEQ_2,NAT_1,RELAT_1,FUNCT_1,VFUNCT_1,FUNCT_2,ORDINAL1,SEQ_4,NORMSP_1,LOPBAN_1,LOPBAN_3,PARTFUN1,PARTFUN2,FDIFF_1,NDIFF_1,FUNCOP_1,XREAL_1,COMPLEX1,XXREAL_0,VALUED_1,VALUED_0,NORMSP_0,XREAL_0,RCOMP_1,SEQM_3,RFUNCT_2,NFCONT_3,CKB1,CKB2,CKB3;
schemes FUNCT_2,SEQ_1;
registrations RELSET_1,STRUCT_0,ORDINAL1,XREAL_0,MEMBERED,FUNCT_2,NUMBERS,XBOOLE_0,VALUED_0,NORMSP_0,NORMSP_1,RELAT_1,SUBSET_1,XXREAL_0,LOPBAN_2,FUNCOP_1,NAT_1,RCOMP_1,VALUED_1,SEQ_4,FDIFF_1;
constructors REAL_1,FDIFF_1,VFUNCT_1,NDIFF_1,SEQ_1,RELSET_1,RVSUM_1,BINOP_2,INTEGR15,NAT_D,MEASURE6,NFCONT_3,CKB3;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve F for non  trivial RealNormSpace;
reserve n for (Element of ( NAT ));
reserve f for (PartFunc of ( REAL ),(the carrier of F));
reserve h for  convergent_to_0 Real_Sequence;
registration
let F;
cluster  REST-like for (PartFunc of ( REAL ),(the carrier of F));
existence
proof
take f = ( ( REAL ) --> ( 0. F ) );
thus f is  total;
A1: ( dom f ) = ( REAL ) by FUNCOP_1:13;
now
let h;
now
let n being Nat;
A2: ( rng h ) c= ( dom f ) by A1;
A3: n in ( NAT ) by ORDINAL1:def 12;
hence ( ( ( h " ) (#) ( f /* h ) ) . n ) = ( ( ( h " ) . n ) * ( ( f /* h ) . n ) ) by NDIFF_1:def 2
.= ( ( ( h " ) . n ) * ( f . ( h . n ) ) ) by A3,A2,FUNCT_2:108
.= ( 0. F ) by FUNCOP_1:7,RLVECT_1:10;
end;
then (( ( h " ) (#) ( f /* h ) ) is  constant & ( ( ( h " ) (#) ( f /* h ) ) . ( 0 ) ) = ( 0. F )) by VALUED_0:def 18;
hence (( ( h " ) (#) ( f /* h ) ) is  convergent & ( lim ( ( h " ) (#) ( f /* h ) ) ) = ( 0. F )) by NDIFF_1:18;
end;
hence thesis;
end;
end;
