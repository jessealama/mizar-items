environ
vocabularies NUMBERS,REAL_1,ZFMISC_1,NORMSP_1,PRE_TOPC,PARTFUN1,FUNCT_1,NAT_1,FDIFF_1,SUBSET_1,RELAT_1,RCOMP_1,TARSKI,SEQ_1,ARYTM_3,VALUED_1,FUNCT_2,ARYTM_1,SEQ_2,ORDINAL2,SUPINF_2,FCONT_1,COMPLEX1,STRUCT_0,CARD_1,VALUED_0,XXREAL_0,FUNCOP_1,XREAL_0,ORDINAL1,XXREAL_2,XBOOLE_0,XXREAL_1;
notations TARSKI,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,REAL_1,NAT_1,VALUED_0,COMPLEX1,BINOP_2,VALUED_1,SEQ_1,SEQ_2,RCOMP_1,FDIFF_1,STRUCT_0,PRE_TOPC,RLVECT_1,VFUNCT_1,NORMSP_0,NORMSP_1,NDIFF_1,NFCONT_3,CKB3,CKB5,CKB6,CKB8;
definitions RCOMP_1,SUBSET_1,XBOOLE_0,TARSKI,CKB3,CKB6;
theorems TARSKI,ABSVALUE,XBOOLE_0,XBOOLE_1,RLVECT_1,XCMPLX_0,XCMPLX_1,ZFMISC_1,SEQ_1,SEQ_2,NAT_1,RELAT_1,FUNCT_1,VFUNCT_1,FUNCT_2,ORDINAL1,SEQ_4,NORMSP_1,LOPBAN_1,LOPBAN_3,PARTFUN1,PARTFUN2,FDIFF_1,NDIFF_1,FUNCOP_1,XREAL_1,COMPLEX1,XXREAL_0,VALUED_1,VALUED_0,NORMSP_0,XREAL_0,RCOMP_1,SEQM_3,RFUNCT_2,NFCONT_3,CKB1,CKB2,CKB3,CKB6,CKB9,CKB10,CKB11,CKB12;
schemes FUNCT_2,SEQ_1;
registrations RELSET_1,STRUCT_0,ORDINAL1,XREAL_0,MEMBERED,FUNCT_2,NUMBERS,XBOOLE_0,VALUED_0,NORMSP_0,NORMSP_1,RELAT_1,SUBSET_1,XXREAL_0,LOPBAN_2,FUNCOP_1,NAT_1,RCOMP_1,VALUED_1,SEQ_4,FDIFF_1,CKB4,CKB7;
constructors REAL_1,FDIFF_1,VFUNCT_1,NDIFF_1,SEQ_1,RELSET_1,RVSUM_1,BINOP_2,INTEGR15,NAT_D,MEASURE6,NFCONT_3,CKB3,CKB6;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve F for non  trivial RealNormSpace;
reserve h for  convergent_to_0 Real_Sequence;
reserve R1 for (REST of F);
reserve R2 for (REST of F);
theorem
Th7: (( R1 + R2 ) is (REST of F) & ( R1 - R2 ) is (REST of F))
proof
A1: (R1 is  total & R2 is  total) by CKB3:def 1;
A2:now
let h;
A3: ( ( h " ) (#) ( ( R1 + R2 ) /* h ) ) = ( ( h " ) (#) ( ( R1 /* h ) + ( R2 /* h ) ) ) by A1,CKB12:1
.= ( ( ( h " ) (#) ( R1 /* h ) ) + ( ( h " ) (#) ( R2 /* h ) ) ) by NDIFF_1:9;
A4: (( ( h " ) (#) ( R1 /* h ) ) is  convergent & ( ( h " ) (#) ( R2 /* h ) ) is  convergent) by CKB3:def 1;
hence ( ( h " ) (#) ( ( R1 + R2 ) /* h ) ) is  convergent by A3,NORMSP_1:19;
(( lim ( ( h " ) (#) ( R1 /* h ) ) ) = ( 0. F ) & ( lim ( ( h " ) (#) ( R2 /* h ) ) ) = ( 0. F )) by CKB3:def 1;
hence ( lim ( ( h " ) (#) ( ( R1 + R2 ) /* h ) ) ) = ( ( 0. F ) + ( 0. F ) ) by A4,A3,NORMSP_1:25
.= ( 0. F ) by RLVECT_1:def 4;
end;
( R1 + R2 ) is  total by A1,VFUNCT_1:32;
hence ( R1 + R2 ) is (REST of F) by A2,CKB3:def 1;
A5:now
let h;
A6: ( ( h " ) (#) ( ( R1 - R2 ) /* h ) ) = ( ( h " ) (#) ( ( R1 /* h ) - ( R2 /* h ) ) ) by A1,CKB12:1
.= ( ( ( h " ) (#) ( R1 /* h ) ) - ( ( h " ) (#) ( R2 /* h ) ) ) by NDIFF_1:12;
A7: (( ( h " ) (#) ( R1 /* h ) ) is  convergent & ( ( h " ) (#) ( R2 /* h ) ) is  convergent) by CKB3:def 1;
hence ( ( h " ) (#) ( ( R1 - R2 ) /* h ) ) is  convergent by A6,NORMSP_1:20;
(( lim ( ( h " ) (#) ( R1 /* h ) ) ) = ( 0. F ) & ( lim ( ( h " ) (#) ( R2 /* h ) ) ) = ( 0. F )) by CKB3:def 1;
hence ( lim ( ( h " ) (#) ( ( R1 - R2 ) /* h ) ) ) = ( ( 0. F ) - ( 0. F ) ) by A7,A6,NORMSP_1:26
.= ( 0. F ) by RLVECT_1:13;
end;
( R1 - R2 ) is  total by A1,VFUNCT_1:32;
hence ( R1 - R2 ) is (REST of F) by A5,CKB3:def 1;
end;
