environ
vocabularies NUMBERS,TREES_1,SUBSET_1,FUNCT_1,XBOOLE_0,FINSEQ_1,ORDINAL4,XXREAL_0,ARYTM_3,RELAT_1,TARSKI,CARD_1,NAT_1,ORDINAL1,FINSET_1,REAL_1,ARYTM_1,ZFMISC_1,FUNCOP_1,TREES_2,AMISTD_3,FINSEQ_2,PARTFUN1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,RELAT_1,XCMPLX_0,FUNCT_1,PARTFUN1,REAL_1,NAT_1,CARD_1,NUMBERS,FINSEQ_1,FINSEQ_2,FINSET_1,RELSET_1,BINOP_1,FUNCT_2,FUNCOP_1,TREES_1,XXREAL_0,CKB7;
definitions RELAT_1,TARSKI,FUNCT_1,TREES_1,ORDINAL1,XBOOLE_0,BINOP_1,CKB7;
theorems FUNCT_1,NAT_1,FINSEQ_1,TREES_1,TARSKI,ORDERS_1,ZFMISC_1,FINSET_1,CARD_1,CARD_2,WELLORD2,FUNCOP_1,FUNCT_2,RELAT_1,FINSEQ_2,ORDINAL1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,PARTFUN1,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9;
schemes FUNCT_1,FRAENKEL,NAT_1,CARD_2,CLASSES1,DOMAIN_1,XBOOLE_0,CKB5;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,TREES_1,CARD_1,RELSET_1,FINSEQ_2,DOMAIN_1,PARTFUN1;
constructors WELLORD2,BINOP_1,FUNCOP_1,XXREAL_0,REAL_1,NAT_1,TREES_1,RELSET_1,FINSEQ_2;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve W for Tree;
reserve W1 for Tree;
reserve W2 for Tree;
reserve p for (FinSequence of ( NAT ));
reserve q for (FinSequence of ( NAT ));
reserve r for (FinSequence of ( NAT ));
reserve r1 for (FinSequence of ( NAT ));
reserve r2 for (FinSequence of ( NAT ));
theorem
(((p in W & q in W) & (not p,q are_c=-comparable )) implies ( ( W with-replacement (p,W1) ) with-replacement (q,W2) ) = ( ( W with-replacement (q,W2) ) with-replacement (p,W1) ))
proof
assume that
A1: p in W
and
A2: q in W
and
A3: (not p,q are_c=-comparable );
A4: (not p is_a_prefix_of q) by A3,XBOOLE_0:def 9;
(not q is_a_prefix_of p) by A3,XBOOLE_0:def 9;
then A5: p in ( W with-replacement (q,W2) ) by A1,A2,CKB9:1;
A6: q in ( W with-replacement (p,W1) ) by A1,A2,A4,CKB9:1;
let r;
thus (r in ( ( W with-replacement (p,W1) ) with-replacement (q,W2) ) implies r in ( ( W with-replacement (q,W2) ) with-replacement (p,W1) ))
proof
assume r in ( ( W with-replacement (p,W1) ) with-replacement (q,W2) );
then ((r in ( W with-replacement (p,W1) ) & (not q is_a_proper_prefix_of r)) or (ex r1 st (r1 in W2 & r = ( q ^ r1 )))) by A6,TREES_1:def 9;
then ((((r in W & (not p is_a_proper_prefix_of r)) & (not q is_a_proper_prefix_of r)) or ((ex r2 st (r2 in W1 & r = ( p ^ r2 ))) & (not q is_a_proper_prefix_of r))) or (q is_a_prefix_of r & (ex r1 st (r1 in W2 & r = ( q ^ r1 ))))) by A1,TREES_1:1,TREES_1:def 9;
then ((r in ( W with-replacement (q,W2) ) & (not p is_a_proper_prefix_of r)) or (ex r1 st (r1 in W1 & r = ( p ^ r1 )))) by A2,A3,CKB2:1,TREES_1:def 9;
hence thesis by A5,TREES_1:def 9;
end;

assume r in ( ( W with-replacement (q,W2) ) with-replacement (p,W1) );
then ((r in ( W with-replacement (q,W2) ) & (not p is_a_proper_prefix_of r)) or (ex r1 st (r1 in W1 & r = ( p ^ r1 )))) by A5,TREES_1:def 9;
then ((((r in W & (not q is_a_proper_prefix_of r)) & (not p is_a_proper_prefix_of r)) or ((ex r2 st (r2 in W2 & r = ( q ^ r2 ))) & (not p is_a_proper_prefix_of r))) or (p is_a_prefix_of r & (ex r1 st (r1 in W1 & r = ( p ^ r1 ))))) by A2,TREES_1:1,TREES_1:def 9;
then ((r in ( W with-replacement (p,W1) ) & (not q is_a_proper_prefix_of r)) or (ex r1 st (r1 in W2 & r = ( q ^ r1 )))) by A1,A3,CKB2:1,TREES_1:def 9;
hence thesis by A6,TREES_1:def 9;
end;
