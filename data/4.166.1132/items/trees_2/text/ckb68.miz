environ
vocabularies NUMBERS,TREES_1,SUBSET_1,FUNCT_1,XBOOLE_0,FINSEQ_1,ORDINAL4,XXREAL_0,ARYTM_3,RELAT_1,TARSKI,CARD_1,NAT_1,ORDINAL1,FINSET_1,REAL_1,ARYTM_1,ZFMISC_1,FUNCOP_1,TREES_2,AMISTD_3,FINSEQ_2,PARTFUN1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,RELAT_1,XCMPLX_0,FUNCT_1,PARTFUN1,REAL_1,NAT_1,CARD_1,NUMBERS,FINSEQ_1,FINSEQ_2,FINSET_1,RELSET_1,BINOP_1,FUNCT_2,FUNCOP_1,TREES_1,XXREAL_0,CKB7,CKB11,CKB13,CKB14,CKB15,CKB19,CKB33,CKB35,CKB51,CKB53,CKB56,CKB57,CKB61,CKB62,CKB64,CKB66;
definitions RELAT_1,TARSKI,FUNCT_1,TREES_1,ORDINAL1,XBOOLE_0,BINOP_1,CKB7,CKB11,CKB13,CKB14,CKB15,CKB19,CKB33,CKB51,CKB61,CKB62,CKB66;
theorems FUNCT_1,NAT_1,FINSEQ_1,TREES_1,TARSKI,ORDERS_1,ZFMISC_1,FINSET_1,CARD_1,CARD_2,WELLORD2,FUNCOP_1,FUNCT_2,RELAT_1,FINSEQ_2,ORDINAL1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,PARTFUN1,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB27,CKB28,CKB30,CKB31,CKB33,CKB37,CKB38,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB47,CKB49,CKB50,CKB51,CKB58,CKB61,CKB62,CKB63,CKB66;
schemes FUNCT_1,FRAENKEL,NAT_1,CARD_2,CLASSES1,DOMAIN_1,XBOOLE_0,CKB5,CKB25,CKB26,CKB46,CKB48,CKB59,CKB60;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,TREES_1,CARD_1,RELSET_1,FINSEQ_2,DOMAIN_1,PARTFUN1,CKB12,CKB29,CKB32,CKB34,CKB36,CKB39,CKB52,CKB54,CKB55,CKB65,CKB67;
constructors WELLORD2,BINOP_1,FUNCOP_1,XXREAL_0,REAL_1,NAT_1,TREES_1,RELSET_1,FINSEQ_2,CKB11,CKB13,CKB14,CKB15,CKB19,CKB33,CKB51,CKB57,CKB61,CKB62,CKB64,CKB66;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve X for set;
reserve D for non  empty set;
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve p for (FinSequence of ( NAT ));
theorem
Th35: ((for x holds (x in D implies x is Tree)) implies ( union D ) is Tree)
proof
assume A1: (for x holds (x in D implies x is Tree));
then reconsider x = the (Element of D) as Tree;
x c= ( union D ) by ZFMISC_1:74;
then reconsider T = ( union D ) as non  empty set;
T is  Tree-like
proof
(for X holds (X in D implies X c= ( ( NAT ) * )))
proof
let X;
assume X in D;
then X is Tree by A1;
hence thesis by TREES_1:def 3;
end;
hence T c= ( ( NAT ) * ) by ZFMISC_1:76;
thus (for p holds (p in T implies ( ProperPrefixes p ) c= T))
proof
let p;
assume p in T;
then consider X such that A2: p in X and A3: X in D by TARSKI:def 4;
reconsider X as Tree by A1,A3;
(( ProperPrefixes p ) c= X & X c= T) by A2,A3,TREES_1:def 3,ZFMISC_1:74;
hence thesis by XBOOLE_1:1;
end;

let p;
let k;
let n;
assume that
A4: ( p ^ <* k *> ) in T
and
A5: n <= k;
consider X such that A6: ( p ^ <* k *> ) in X and A7: X in D by A4,TARSKI:def 4;
reconsider X as Tree by A1,A7;
( p ^ <* n *> ) in X by A5,A6,TREES_1:def 3;
hence thesis by A7,TARSKI:def 4;
end;
hence thesis;
end;
