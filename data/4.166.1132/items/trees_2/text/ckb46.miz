environ
vocabularies NUMBERS,TREES_1,SUBSET_1,FUNCT_1,XBOOLE_0,FINSEQ_1,ORDINAL4,XXREAL_0,ARYTM_3,RELAT_1,TARSKI,CARD_1,NAT_1,ORDINAL1,FINSET_1,REAL_1,ARYTM_1,ZFMISC_1,FUNCOP_1,TREES_2,AMISTD_3,FINSEQ_2,PARTFUN1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,RELAT_1,XCMPLX_0,FUNCT_1,PARTFUN1,REAL_1,NAT_1,CARD_1,NUMBERS,FINSEQ_1,FINSEQ_2,FINSET_1,RELSET_1,BINOP_1,FUNCT_2,FUNCOP_1,TREES_1,XXREAL_0,CKB7,CKB11,CKB13,CKB14,CKB15,CKB19,CKB33,CKB35;
definitions RELAT_1,TARSKI,FUNCT_1,TREES_1,ORDINAL1,XBOOLE_0,BINOP_1,CKB7,CKB11,CKB13,CKB14,CKB15,CKB19,CKB33;
theorems FUNCT_1,NAT_1,FINSEQ_1,TREES_1,TARSKI,ORDERS_1,ZFMISC_1,FINSET_1,CARD_1,CARD_2,WELLORD2,FUNCOP_1,FUNCT_2,RELAT_1,FINSEQ_2,ORDINAL1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,PARTFUN1,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB27,CKB28,CKB30,CKB31,CKB33,CKB37,CKB38,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45;
schemes FUNCT_1,FRAENKEL,NAT_1,CARD_2,CLASSES1,DOMAIN_1,XBOOLE_0,CKB5,CKB25,CKB26;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,TREES_1,CARD_1,RELSET_1,FINSEQ_2,DOMAIN_1,PARTFUN1,CKB12,CKB29,CKB32,CKB34,CKB36,CKB39;
constructors WELLORD2,BINOP_1,FUNCOP_1,XXREAL_0,REAL_1,NAT_1,TREES_1,RELSET_1,FINSEQ_2,CKB11,CKB13,CKB14,CKB15,CKB19,CKB33;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve X for set;
reserve f for Function;
reserve m for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
scheme FuncExOfMinNat { P[set,Nat],X() -> set } : (ex f st (( dom f ) = X() & (for x holds (x in X() implies (ex n st ((( f . x ) = n & P[ x,n ]) & (for m holds (P[ x,m ] implies n <= m))))))))
provided
A1: (for x holds (x in X() implies (ex n st P[ x,n ])))
proof
defpred Q[ set,set ]
 means
(ex n st (($2 = n & P[ $1,n ]) & (for m holds (P[ $1,m ] implies n <= m))));
A2: (for x holds (x in X() implies (ex y st Q[ x,y ])))
proof
let x;
defpred X[ Nat ]
 means
P[ x,$1 ];
assume x in X();
then (ex n st X[ n ]) by A1;
then A3: (ex n being Nat st X[ n ]);
consider n being Nat such that A4: (X[ n ] & (for m being Nat holds (X[ m ] implies n <= m))) from NAT_1:sch 5(A3);
take n;
(n in ( NAT ) & (for m holds (X[ m ] implies n <= m))) by A4,ORDINAL1:def 12;
hence thesis by A4;
end;
thus (ex f st (( dom f ) = X() & (for x holds (x in X() implies Q[ x,( f . x ) ])))) from CLASSES1:sch 1(A2);
end;
