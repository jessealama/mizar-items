environ
vocabularies NUMBERS,TREES_1,SUBSET_1,FUNCT_1,XBOOLE_0,FINSEQ_1,ORDINAL4,XXREAL_0,ARYTM_3,RELAT_1,TARSKI,CARD_1,NAT_1,ORDINAL1,FINSET_1,REAL_1,ARYTM_1,ZFMISC_1,FUNCOP_1,TREES_2,AMISTD_3,FINSEQ_2,PARTFUN1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,RELAT_1,XCMPLX_0,FUNCT_1,PARTFUN1,REAL_1,NAT_1,CARD_1,NUMBERS,FINSEQ_1,FINSEQ_2,FINSET_1,RELSET_1,BINOP_1,FUNCT_2,FUNCOP_1,TREES_1,XXREAL_0,CKB7,CKB11,CKB13,CKB14,CKB15;
definitions RELAT_1,TARSKI,FUNCT_1,TREES_1,ORDINAL1,XBOOLE_0,BINOP_1,CKB7,CKB11,CKB13,CKB14,CKB15;
theorems FUNCT_1,NAT_1,FINSEQ_1,TREES_1,TARSKI,ORDERS_1,ZFMISC_1,FINSET_1,CARD_1,CARD_2,WELLORD2,FUNCOP_1,FUNCT_2,RELAT_1,FINSEQ_2,ORDINAL1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,PARTFUN1,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes FUNCT_1,FRAENKEL,NAT_1,CARD_2,CLASSES1,DOMAIN_1,XBOOLE_0,CKB5;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,TREES_1,CARD_1,RELSET_1,FINSEQ_2,DOMAIN_1,PARTFUN1,CKB12;
constructors WELLORD2,BINOP_1,FUNCOP_1,XXREAL_0,REAL_1,NAT_1,TREES_1,RELSET_1,FINSEQ_2,CKB11,CKB13,CKB14,CKB15;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve y for set;
reserve W for Tree;
reserve w for (Element of W);
reserve p for (FinSequence of ( NAT ));
reserve q for (FinSequence of ( NAT ));
theorem
(for A being (AntiChain_of_Prefixes of W) holds (for C being (Chain of W) holds (ex w st ( A /\ C ) c= { w })))
proof
let A being (AntiChain_of_Prefixes of W);
let C being (Chain of W);
A1:now
let p;
let q;
assume A2: (p in ( A /\ C ) & q in ( A /\ C ));
then A3: (p in A & q in A) by XBOOLE_0:def 4;
(p in C & q in C) by A2,XBOOLE_0:def 4;
then p,q are_c=-comparable  by CKB13:def 1;
hence p = q by A3,TREES_1:def 10;
end;
set w = the (Element of W);
now
per cases ;
suppose ( A /\ C ) = ( {} );

then ( A /\ C ) c= { w } by XBOOLE_1:2;
hence thesis;
end;
suppose A4: ( A /\ C ) <> ( {} );

set x = the (Element of ( A /\ C ));
x in C by A4,XBOOLE_0:def 4;
then reconsider x as (Element of W);
take x;
thus ( A /\ C ) c= { x }
proof
let y;
assume A5: y in ( A /\ C );
then y is (Element of W);
then reconsider y9 = y as (FinSequence of ( NAT ));
x = y9 by A1,A5;
hence thesis by TARSKI:def 1;
end;

end;
end;
hence thesis;
end;
