environ
vocabularies NUMBERS,ZFMISC_1,XBOOLE_0,SUBSET_1,FUNCT_1,RELAT_1,FUNCT_4,TARSKI,CARD_1,ARYTM_3,MCART_1,NAT_1,ARYTM_1,XXREAL_0,FUNCT_7,RECDEF_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,MCART_2,DOMAIN_1,NUMBERS,XCMPLX_0,NAT_1,NAT_D,RELAT_1,FUNCT_1,FUNCT_2,FUNCT_4,FUNCT_7,XXREAL_0,CKB1,CKB2,CKB3,CKB7,CKB8,CKB9,CKB10,CKB14,CKB15,CKB16,CKB17,CKB18;
definitions TARSKI,XBOOLE_0,CKB1,CKB2,CKB3,CKB7,CKB8,CKB9,CKB10,CKB14,CKB15,CKB16,CKB17,CKB18;
theorems MCART_1,NAT_1,FUNCT_1,FUNCT_2,RELSET_1,INT_1,FUNCT_4,XBOOLE_0,XBOOLE_1,DOMAIN_1,MCART_2,FUNCT_7,XREAL_1,XXREAL_0,XREAL_0,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
schemes NAT_1,RECDEF_1,FUNCT_1,XBOOLE_0,PARTFUN1;
registrations SUBSET_1,ORDINAL1,RELSET_1,XREAL_0,NAT_1,INT_1;
constructors DOMAIN_1,FUNCT_4,XXREAL_0,NAT_1,INT_1,MCART_2,BINARITH,FUNCT_7,NAT_D,RELSET_1,CKB1,CKB2,CKB3,CKB7,CKB8,CKB9,CKB10,CKB14,CKB15,CKB16,CKB17,CKB18;
requirements BOOLE,SUBSET,NUMERALS,ARITHM,REAL;
begin
scheme ExFunc3Cond { C() -> set,P,Q,R[set],F,G,H(set) -> set } : (ex f being Function st (( dom f ) = C() & (for c being set holds (c in C() implies (((P[ c ] implies ( f . c ) = F(c)) & (Q[ c ] implies ( f . c ) = G(c))) & (R[ c ] implies ( f . c ) = H(c)))))))
provided
A1: (for c being set holds (c in C() implies (((P[ c ] implies (not Q[ c ])) & (P[ c ] implies (not R[ c ]))) & (Q[ c ] implies (not R[ c ])))))
and
A2: (for c being set holds (c in C() implies ((P[ c ] or Q[ c ]) or R[ c ])))
proof
consider D1 being set such that A3: (for x being set holds (x in D1 iff (x in C() & P[ x ]))) from XBOOLE_0:sch 1;
consider D3 being set such that A4: (for x being set holds (x in D3 iff (x in C() & R[ x ]))) from XBOOLE_0:sch 1;
consider f1 being Function such that A5: ( dom f1 ) = D1 and A6: (for x being set holds (x in D1 implies ( f1 . x ) = F(x))) from FUNCT_1:sch 3;
consider D2 being set such that A7: (for x being set holds (x in D2 iff (x in C() & Q[ x ]))) from XBOOLE_0:sch 1;
consider f3 being Function such that A8: ( dom f3 ) = D3 and A9: (for x being set holds (x in D3 implies ( f3 . x ) = H(x))) from FUNCT_1:sch 3;
consider f2 being Function such that A10: ( dom f2 ) = D2 and A11: (for x being set holds (x in D2 implies ( f2 . x ) = G(x))) from FUNCT_1:sch 3;
set f = ( ( f1 +* f2 ) +* f3 );
take f;
A12: ( dom f ) = ( ( dom ( f1 +* f2 ) ) \/ ( dom f3 ) ) by FUNCT_4:def 1
.= ( ( ( dom f1 ) \/ ( dom f2 ) ) \/ ( dom f3 ) ) by FUNCT_4:def 1;
thus ( dom f ) = C()
proof
A13: D3 c= C()
proof
let x being set;
thus thesis by A4;
end;
A14: D2 c= C()
proof
let x being set;
thus thesis by A7;
end;
D1 c= C()
proof
let x being set;
thus thesis by A3;
end;
then ( D1 \/ D2 ) c= C() by A14,XBOOLE_1:8;
hence ( dom f ) c= C() by A5,A10,A8,A12,A13,XBOOLE_1:8;
let x being set;
assume A15: x in C();
then ((P[ x ] or Q[ x ]) or R[ x ]) by A2;
then ((x in D1 or x in D2) or x in D3) by A3,A7,A4,A15;
then (x in ( D1 \/ D2 ) or x in D3) by XBOOLE_0:def 3;
hence thesis by A5,A10,A8,A12,XBOOLE_0:def 3;
end;

let c being set;
assume that
A16: c in C();
hereby
assume A17: P[ c ];
then A18: c in D1 by A3,A16;
(not Q[ c ]) by A1,A16,A17;
then A19: (not c in D2) by A7;
(not R[ c ]) by A1,A16,A17;
then (not c in D3) by A4;
hence ( f . c ) = ( ( f1 +* f2 ) . c ) by A8,FUNCT_4:11
.= ( f1 . c ) by A10,A19,FUNCT_4:11
.= F(c) by A6,A18;
end;
hereby
assume A20: Q[ c ];
then A21: c in D2 by A7,A16;
(not R[ c ]) by A1,A16,A20;
then (not c in D3) by A4;
hence ( f . c ) = ( ( f1 +* f2 ) . c ) by A8,FUNCT_4:11
.= ( f2 . c ) by A10,A21,FUNCT_4:13
.= G(c) by A11,A21;
end;
assume R[ c ];
then A22: c in D3 by A4,A16;
hence ( f . c ) = ( f3 . c ) by A8,FUNCT_4:13
.= H(c) by A9,A22;
end;
