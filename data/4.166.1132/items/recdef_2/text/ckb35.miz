environ
vocabularies NUMBERS,ZFMISC_1,XBOOLE_0,SUBSET_1,FUNCT_1,RELAT_1,FUNCT_4,TARSKI,CARD_1,ARYTM_3,MCART_1,NAT_1,ARYTM_1,XXREAL_0,FUNCT_7,RECDEF_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,MCART_2,DOMAIN_1,NUMBERS,XCMPLX_0,NAT_1,NAT_D,RELAT_1,FUNCT_1,FUNCT_2,FUNCT_4,FUNCT_7,XXREAL_0,CKB1,CKB2,CKB3,CKB7,CKB8,CKB9,CKB10,CKB14,CKB15,CKB16,CKB17,CKB18;
definitions TARSKI,XBOOLE_0,CKB1,CKB2,CKB3,CKB7,CKB8,CKB9,CKB10,CKB14,CKB15,CKB16,CKB17,CKB18;
theorems MCART_1,NAT_1,FUNCT_1,FUNCT_2,RELSET_1,INT_1,FUNCT_4,XBOOLE_0,XBOOLE_1,DOMAIN_1,MCART_2,FUNCT_7,XREAL_1,XXREAL_0,XREAL_0,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
schemes NAT_1,RECDEF_1,FUNCT_1,XBOOLE_0,PARTFUN1,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34;
registrations SUBSET_1,ORDINAL1,RELSET_1,XREAL_0,NAT_1,INT_1;
constructors DOMAIN_1,FUNCT_4,XXREAL_0,NAT_1,INT_1,MCART_2,BINARITH,FUNCT_7,NAT_D,RELSET_1,CKB1,CKB2,CKB3,CKB7,CKB8,CKB9,CKB10,CKB14,CKB15,CKB16,CKB17,CKB18;
requirements BOOLE,SUBSET,NUMERALS,ARITHM,REAL;
begin
reserve A for set;
reserve B for set;
reserve C for set;
reserve D for set;
scheme LambdaRec4Un { A,B,C,D() -> set,F,G() -> Function,F(set,set,set,set,set) -> set } : F() = G()
provided
A1: ( dom F() ) = ( NAT )
and
A2: (((( F() . ( 0 ) ) = A() & ( F() . 1 ) = B()) & ( F() . 2 ) = C()) & ( F() . 3 ) = D())
and
A3: (for n being (Element of ( NAT )) holds ( F() . ( n + 4 ) ) = F(n,( F() . n ),( F() . ( n + 1 ) ),( F() . ( n + 2 ) ),( F() . ( n + 3 ) )))
and
A4: ( dom G() ) = ( NAT )
and
A5: (((( G() . ( 0 ) ) = A() & ( G() . 1 ) = B()) & ( G() . 2 ) = C()) & ( G() . 3 ) = D())
and
A6: (for n being (Element of ( NAT )) holds ( G() . ( n + 4 ) ) = F(n,( G() . n ),( G() . ( n + 1 ) ),( G() . ( n + 2 ) ),( G() . ( n + 3 ) )))
proof
defpred Q[ Nat ]
 means
( F() . $1 ) <> ( G() . $1 );
assume F() <> G();
then (ex x being set st (x in ( NAT ) & ( F() . x ) <> ( G() . x ))) by A1,A4,FUNCT_1:2;
then A7: (ex k being Nat st Q[ k ]);
consider m being Nat such that A8: Q[ m ] and A9: (for n being Nat holds (Q[ n ] implies m <= n)) from NAT_1:sch 5(A7);
now
set k = ( m -' 4 );
A10: (( F() . ( k + 4 ) ) = F(k,( F() . k ),( F() . ( k + 1 ) ),( F() . ( k + 2 ) ),( F() . ( k + 3 ) )) & ( G() . ( k + 4 ) ) = F(k,( G() . k ),( G() . ( k + 1 ) ),( G() . ( k + 2 ) ),( G() . ( k + 3 ) ))) by A3,A6;
assume (((m <> ( 0 ) & m <> 1) & m <> 2) & m <> 3);
then 4 <= m by NAT_1:28;
then A11: m = ( k + 4 ) by XREAL_1:235;
then ( k + 1 ) < m by XREAL_1:6;
then A12: ( F() . ( k + 1 ) ) = ( G() . ( k + 1 ) ) by A9;
( k + 3 ) < m by A11,XREAL_1:6;
then A13: ( F() . ( k + 3 ) ) = ( G() . ( k + 3 ) ) by A9;
( k + 2 ) < m by A11,XREAL_1:6;
then A14: ( F() . ( k + 2 ) ) = ( G() . ( k + 2 ) ) by A9;
( k + ( 0 ) ) < m by A11,XREAL_1:6;
hence contradiction by A8,A9,A11,A12,A14,A13,A10;
end;
hence contradiction by A2,A5,A8;
end;
