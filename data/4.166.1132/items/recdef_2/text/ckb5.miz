environ
vocabularies NUMBERS,ZFMISC_1,XBOOLE_0,SUBSET_1,FUNCT_1,RELAT_1,FUNCT_4,TARSKI,CARD_1,ARYTM_3,MCART_1,NAT_1,ARYTM_1,XXREAL_0,FUNCT_7,RECDEF_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,MCART_2,DOMAIN_1,NUMBERS,XCMPLX_0,NAT_1,NAT_D,RELAT_1,FUNCT_1,FUNCT_2,FUNCT_4,FUNCT_7,XXREAL_0,CKB1,CKB2,CKB3;
definitions TARSKI,XBOOLE_0,CKB1,CKB2,CKB3;
theorems MCART_1,NAT_1,FUNCT_1,FUNCT_2,RELSET_1,INT_1,FUNCT_4,XBOOLE_0,XBOOLE_1,DOMAIN_1,MCART_2,FUNCT_7,XREAL_1,XXREAL_0,XREAL_0,NAT_D,CKB1,CKB2,CKB3,CKB4;
schemes NAT_1,RECDEF_1,FUNCT_1,XBOOLE_0,PARTFUN1;
registrations SUBSET_1,ORDINAL1,RELSET_1,XREAL_0,NAT_1,INT_1;
constructors DOMAIN_1,FUNCT_4,XXREAL_0,NAT_1,INT_1,MCART_2,BINARITH,FUNCT_7,NAT_D,RELSET_1,CKB1,CKB2,CKB3;
requirements BOOLE,SUBSET,NUMERALS,ARITHM,REAL;
begin
reserve z for set;
reserve A for set;
reserve B for set;
reserve C for set;
theorem
(z in [: A,B,C :] implies ((( z `1_3 ) in A & ( z `2_3 ) in B) & ( z `3_3 ) in C))
proof
assume A1: z in [: A,B,C :];
then A2: C is non empty by MCART_1:31;
A3: (A is non empty & B is non empty) by A1,MCART_1:31;
then consider a being (Element of A),b being (Element of B),c being (Element of C) such that A4: z = [ a,b,c ] by A1,A2,DOMAIN_1:3;
A5: ( z `3_3 ) = c by A4,CKB3:def 1;
(( z `1_3 ) = a & ( z `2_3 ) = b) by A4,CKB1:def 1,CKB2:def 1;
hence thesis by A3,A2,A5;
end;
