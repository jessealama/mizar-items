environ
vocabularies NUMBERS,SUBSET_1,XBOOLE_0,FINSEQ_1,FUNCT_1,RELAT_1,PARTFUN1,FINSEQ_4,ARYTM_3,FINSEQ_5,RFINSEQ,ORDINAL4,XXREAL_0,ARYTM_1,FINSEQ_6,CARD_1,NAT_1,ZFMISC_1,EUCLID,JORDAN2C,FINSEQ_2,SUPINF_2,TARSKI,GOBOARD1,MCART_1,PRE_TOPC,TOPREAL1,RLTOPSP1,GOBOARD2,GOBOARD5,MATRIX_1,COMPLEX1,GOBOARD9,CONNSP_1,TOPS_1,PSCOMP_1,SPRECT_2,TREES_1,JORDAN5D,RCOMP_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,COMPLEX1,NAT_D,CARD_1,FUNCT_1,PARTFUN1,FINSEQ_1,FINSEQ_2,MATRIX_1,FINSEQ_4,RFINSEQ,FINSEQ_5,FINSEQ_6,ZFMISC_1,DOMAIN_1,SEQ_4,STRUCT_0,PRE_TOPC,TOPS_1,CONNSP_1,COMPTS_1,EUCLID,RLTOPSP1,TOPREAL1,GOBOARD1,GOBOARD2,GOBOARD5,GOBOARD9,PSCOMP_1,JORDAN5D,SPRECT_2,JORDAN2C,XXREAL_0;
definitions TOPREAL1,GOBOARD5,SPRECT_2,TARSKI,FINSEQ_6,GOBOARD1,XBOOLE_0,STRUCT_0,SEQM_3;
theorems FINSEQ_6,NAT_1,FINSEQ_5,FINSEQ_3,FINSEQ_4,NAT_2,FINSEQ_1,SPRECT_3,RFINSEQ,TOPREAL1,GOBOARD5,SPPOL_2,TARSKI,SPRECT_2,GOBOARD9,INT_1,SUBSET_1,JGRAPH_1,GOBOARD7,GOBOARD1,GOBOARD2,FUNCT_1,PARTFUN2,RELAT_1,FINSEQ_2,JORDAN5D,PSCOMP_1,JORDAN2C,EUCLID,YELLOW_8,TOPREAL3,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,MATRIX_1,NAT_D,SEQM_3,SEQ_4,ZFMISC_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,NUMBERS,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,ZFMISC_1,FINSEQ_5,FINSEQ_6,STRUCT_0,GOBOARD2,GOBOARD9,SPRECT_1,SPRECT_2,CARD_1,COMPTS_1,EUCLID,SEQ_4,FINSET_1;
constructors PARTFUN1,XXREAL_0,NAT_1,COMPLEX1,FINSEQOP,FINSEQ_4,RFINSEQ,NAT_D,TOPS_1,CONNSP_1,COMPTS_1,REALSET2,GOBOARD2,PSCOMP_1,GOBOARD9,SPRECT_2,JORDAN5D,JORDAN2C,SEQ_1,REAL_1,GOBOARD1,RELSET_1,SEQ_4,RVSUM_1;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve m for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve D for non  empty set;
reserve f for (FinSequence of D);
definition
let D being non  empty set;
let f being (FinSequence of D);
redefine attr f is  constant
means
:Def1: (for n holds (for m holds ((n in ( dom f ) & m in ( dom f )) implies ( f /. n ) = ( f /. m ))));
compatibility
proof
hereby
assume A1: f is  constant;
let n;
let m;
assume that
A2: n in ( dom f )
and
A3: m in ( dom f );
thus ( f /. n ) = ( f . n ) by A2,PARTFUN1:def 6
.= ( f . m ) by A1,A2,A3,SEQM_3:def 10
.= ( f /. m ) by A3,PARTFUN1:def 6;
end;
assume A4: (for n holds (for m holds ((n in ( dom f ) & m in ( dom f )) implies ( f /. n ) = ( f /. m ))));
let n;
let m;
assume that
A5: n in ( dom f )
and
A6: m in ( dom f );
thus ( f . n ) = ( f /. n ) by A5,PARTFUN1:def 6
.= ( f /. m ) by A4,A5,A6
.= ( f . m ) by A6,PARTFUN1:def 6;
end;
end;
