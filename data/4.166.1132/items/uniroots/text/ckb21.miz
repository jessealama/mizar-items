environ
vocabularies NUMBERS,SUBSET_1,XBOOLE_0,XXREAL_0,CARD_1,ARYTM_3,NAT_1,FINSEQ_1,RELAT_1,FUNCT_1,TARSKI,COMPLFLD,COMPLEX1,PARTFUN1,CARD_3,STRUCT_0,REAL_1,ORDINAL4,FINSET_1,UPROOTS,ARYTM_1,POLYNOM2,AFINSQ_1,GROUP_1,INT_1,HAHNBAN1,SQUARE_1,POWER,SIN_COS,BINOP_1,ALGSTR_0,FINSEQ_2,MOD_2,VECTSP_1,VECTSP_2,REALSET1,ZFMISC_1,SUPINF_2,COMPTRIG,RAT_1,PREPOWER,XREAL_0,ORDINAL1,NEWTON,XCMPLX_0,INT_2,BINOP_2,GROUP_2,POLYNOM1,POLYNOM3,FUNCT_4,ALGSEQ_1,VALUED_0,POLYNOM5,SGRAPH1,PRE_POLY,GRAPH_2,MESFUNC1,UNIROOTS;
notations TARSKI,XBOOLE_0,SUBSET_1,REALSET1,CARD_1,NUMBERS,XREAL_0,ZFMISC_1,XXREAL_0,COMPLEX1,REAL_1,SQUARE_1,INT_1,INT_2,NAT_1,NAT_D,PREPOWER,POWER,BINOP_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,RAT_1,DOMAIN_1,FINSET_1,BINOP_2,STRUCT_0,ALGSTR_0,VECTSP_2,VECTSP_1,GROUP_4,RVSUM_1,ALGSEQ_1,COMPLFLD,HAHNBAN1,POLYNOM3,POLYNOM4,POLYNOM5,COMPTRIG,GROUP_2,NEWTON,GROUP_1,MOD_2,GRAPH_2,ORDINAL1,PRE_POLY,FVSUM_1,UPROOTS,SIN_COS,FUNCT_7,FINSEQ_2;
definitions TARSKI,GROUP_1,XBOOLE_0,BINOP_1,REALSET1,SQUARE_1,HAHNBAN1,POLYNOM3,FINSEQ_2,COMPLEX1,GROUP_4,ALGSTR_0,STRUCT_0;
theorems GROUP_1,CARD_1,FINSEQ_1,ZFMISC_1,NAT_1,FUNCT_1,FUNCT_2,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,VECTSP_1,PREPOWER,COMPTRIG,COMPLFLD,BINOP_1,XCMPLX_1,COMPLEX1,HAHNBAN1,SIN_COS,POWER,SIN_COS2,POLYNOM5,INT_1,COMPLEX2,XCMPLX_0,XREAL_0,SQUARE_1,RVSUM_1,FVSUM_1,FINSEQ_3,FINSEQ_2,FINSEQ_4,POLYNOM4,INT_2,WSIERP_1,NAT_2,PEPIN,POLYNOM3,COMPUT_1,NORMSP_1,FUNCT_7,ALGSEQ_1,RLVECT_1,NEWTON,POLYNOM2,MATRIX_3,VECTSP_2,MOD_2,CARD_2,GRAPH_2,FINSEQ_5,UPROOTS,GROUP_2,BINOP_2,XREAL_1,XXREAL_0,GROUP_4,FUNCOP_1,ORDINAL1,FINSOP_1,NAT_D,PARTFUN1,PRE_POLY,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
schemes NAT_1,FUNCT_2,FINSEQ_1,INT_1,RECDEF_1,CKB2;
registrations RELAT_1,FUNCT_1,FINSET_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,INT_1,BINOP_2,CARD_1,MEMBERED,FINSEQ_1,FINSEQ_2,REALSET1,WSIERP_1,STRUCT_0,GROUP_1,VECTSP_1,COMPLFLD,QUOFIELD,POLYNOM3,POLYNOM5,VALUED_0,ALGSTR_0,POWER,UPROOTS,FUNCT_2,RELSET_1,PRE_POLY,XBOOLE_0,ZFMISC_1,CKB19,CKB20;
constructors WELLORD2,BINOP_1,REAL_1,SQUARE_1,NAT_D,FINSEQOP,FINSOP_1,RVSUM_1,PREPOWER,POWER,REALSET1,SIN_COS,GROUP_4,MOD_2,MATRIX_2,HAHNBAN1,GRAPH_2,POLYNOM4,POLYNOM5,UPROOTS,SEQ_1,RECDEF_1,BINOP_2,RELSET_1,PBOOLE,FUNCT_7,POLYNOM1,NEWTON,FVSUM_1;
requirements NUMERALS,BOOLE,SUBSET,ARITHM,REAL;
begin
definition
let R being Skew-Field;
func MultGroup R ->  strict Group means 
:Def1: ((the carrier of it) = ( NonZero R ) & (the multF of it) = ( (the multF of R) || (the carrier of it) ));
existence
proof
set ccs = ( NonZero R );
set cR = (the carrier of R);
reconsider ccs as non  empty set;
set mcs = ( (the multF of R) || ccs );
[: ccs,ccs :] c= [: cR,cR :]
proof
let x being set;
assume x in [: ccs,ccs :];
then (ex a,b being set st ((a in ccs & b in ccs) & x = [ a,b ])) by ZFMISC_1:def 2;
hence thesis by ZFMISC_1:def 2;
end;
then reconsider mcs as (Function of [: ccs,ccs :],cR) by FUNCT_2:32;
( rng mcs ) c= ccs
proof
let y being set;
assume y in ( rng mcs );
then consider x being set such that A1: x in ( dom mcs ) and A2: y = ( mcs . x ) by FUNCT_1:def 3;
A3: ( dom mcs ) = [: ccs,ccs :] by FUNCT_2:def 1;
then consider a,b being set such that A4: a in ccs and A5: b in ccs and A6: x = [ a,b ] by A1,ZFMISC_1:def 2;
reconsider a,b as (Element of cR) by A4,A5;
(not b in { ( 0. R ) }) by A5,XBOOLE_0:def 5;
then A7: b <> ( 0. R ) by TARSKI:def 1;
(not a in { ( 0. R ) }) by A4,XBOOLE_0:def 5;
then a <> ( 0. R ) by TARSKI:def 1;
then ( a * b ) <> ( 0. R ) by A7,VECTSP_2:12;
then A8: (not ( a * b ) in { ( 0. R ) }) by TARSKI:def 1;
( mcs . x ) = ( a * b ) by A1,A3,A6,FUNCT_1:49;
hence thesis by A2,A8,XBOOLE_0:def 5;
end;
then reconsider mcs as (BinOp of ccs) by FUNCT_2:6;
reconsider cs = multMagma (# ccs,mcs #) as non  empty multMagma;
set ccs1 = (the carrier of cs);
A9:now
let a being (Element of cR);
let b being (Element of cR);
let c being (Element of ccs1);
let d being (Element of ccs1);
assume that
A10: (a = c & b = d);
[ c,d ] in [: ccs,ccs :] by ZFMISC_1:def 2;
hence ( a * b ) = ( c * d ) by A10,FUNCT_1:49;
end;
A11: (not ( 1_ R ) in { ( 0. R ) }) by TARSKI:def 1;
A12: cs is  Group-like
proof
reconsider e = ( 1_ R ) as (Element of ccs1) by A11,XBOOLE_0:def 5;
take e;
let h being (Element of ccs1);
h in ccs;
then reconsider h9 = h as (Scalar of R);
thus ( h * e ) = ( h9 * ( 1_ R ) ) by A9
.= h by VECTSP_1:def 4;
thus ( e * h ) = ( ( 1_ R ) * h9 ) by A9
.= h by VECTSP_1:def 8;
(not h in { ( 0. R ) }) by XBOOLE_0:def 5;
then A13: h <> ( 0. R ) by TARSKI:def 1;
then ( h9 " ) <> ( 0. R ) by VECTSP_2:13;
then (not ( h9 " ) in { ( 0. R ) }) by TARSKI:def 1;
then reconsider g = ( h9 " ) as (Element of ccs1) by XBOOLE_0:def 5;
take g;
thus ( h * g ) = ( h9 * ( h9 " ) ) by A9
.= e by A13,VECTSP_2:9;
thus ( g * h ) = ( ( h9 " ) * h9 ) by A9
.= e by A13,VECTSP_2:9;
end;
cs is  associative
proof
let x being (Element of ccs1);
let y being (Element of ccs1);
let z being (Element of ccs1);
A14: z in ccs1;
(x in ccs1 & y in ccs1);
then reconsider x9 = x,y9 = y,z9 = z as (Element of cR) by A14;
A15: ( y9 * z9 ) = ( y * z ) by A9;
( x9 * y9 ) = ( x * y ) by A9;
hence ( ( x * y ) * z ) = ( ( x9 * y9 ) * z9 ) by A9
.= ( x9 * ( y9 * z9 ) ) by GROUP_1:def 3
.= ( x * ( y * z ) ) by A9,A15;
end;
hence thesis by A12;
end;
uniqueness;
end;
