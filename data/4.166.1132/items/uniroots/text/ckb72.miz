environ
vocabularies NUMBERS,SUBSET_1,XBOOLE_0,XXREAL_0,CARD_1,ARYTM_3,NAT_1,FINSEQ_1,RELAT_1,FUNCT_1,TARSKI,COMPLFLD,COMPLEX1,PARTFUN1,CARD_3,STRUCT_0,REAL_1,ORDINAL4,FINSET_1,UPROOTS,ARYTM_1,POLYNOM2,AFINSQ_1,GROUP_1,INT_1,HAHNBAN1,SQUARE_1,POWER,SIN_COS,BINOP_1,ALGSTR_0,FINSEQ_2,MOD_2,VECTSP_1,VECTSP_2,REALSET1,ZFMISC_1,SUPINF_2,COMPTRIG,RAT_1,PREPOWER,XREAL_0,ORDINAL1,NEWTON,XCMPLX_0,INT_2,BINOP_2,GROUP_2,POLYNOM1,POLYNOM3,FUNCT_4,ALGSEQ_1,VALUED_0,POLYNOM5,SGRAPH1,PRE_POLY,GRAPH_2,MESFUNC1,UNIROOTS;
notations TARSKI,XBOOLE_0,SUBSET_1,REALSET1,CARD_1,NUMBERS,XREAL_0,ZFMISC_1,XXREAL_0,COMPLEX1,REAL_1,SQUARE_1,INT_1,INT_2,NAT_1,NAT_D,PREPOWER,POWER,BINOP_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,RAT_1,DOMAIN_1,FINSET_1,BINOP_2,STRUCT_0,ALGSTR_0,VECTSP_2,VECTSP_1,GROUP_4,RVSUM_1,ALGSEQ_1,COMPLFLD,HAHNBAN1,POLYNOM3,POLYNOM4,POLYNOM5,COMPTRIG,GROUP_2,NEWTON,GROUP_1,MOD_2,GRAPH_2,ORDINAL1,PRE_POLY,FVSUM_1,UPROOTS,SIN_COS,FUNCT_7,FINSEQ_2,CKB21,CKB29,CKB48,CKB50,CKB63;
definitions TARSKI,GROUP_1,XBOOLE_0,BINOP_1,REALSET1,SQUARE_1,HAHNBAN1,POLYNOM3,FINSEQ_2,COMPLEX1,GROUP_4,ALGSTR_0,STRUCT_0,CKB21,CKB29,CKB48,CKB50,CKB63;
theorems GROUP_1,CARD_1,FINSEQ_1,ZFMISC_1,NAT_1,FUNCT_1,FUNCT_2,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,VECTSP_1,PREPOWER,COMPTRIG,COMPLFLD,BINOP_1,XCMPLX_1,COMPLEX1,HAHNBAN1,SIN_COS,POWER,SIN_COS2,POLYNOM5,INT_1,COMPLEX2,XCMPLX_0,XREAL_0,SQUARE_1,RVSUM_1,FVSUM_1,FINSEQ_3,FINSEQ_2,FINSEQ_4,POLYNOM4,INT_2,WSIERP_1,NAT_2,PEPIN,POLYNOM3,COMPUT_1,NORMSP_1,FUNCT_7,ALGSEQ_1,RLVECT_1,NEWTON,POLYNOM2,MATRIX_3,VECTSP_2,MOD_2,CARD_2,GRAPH_2,FINSEQ_5,UPROOTS,GROUP_2,BINOP_2,XREAL_1,XXREAL_0,GROUP_4,FUNCOP_1,ORDINAL1,FINSOP_1,NAT_D,PARTFUN1,PRE_POLY,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71;
schemes NAT_1,FUNCT_2,FINSEQ_1,INT_1,RECDEF_1,CKB2;
registrations RELAT_1,FUNCT_1,FINSET_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,INT_1,BINOP_2,CARD_1,MEMBERED,FINSEQ_1,FINSEQ_2,REALSET1,WSIERP_1,STRUCT_0,GROUP_1,VECTSP_1,COMPLFLD,QUOFIELD,POLYNOM3,POLYNOM5,VALUED_0,ALGSTR_0,POWER,UPROOTS,FUNCT_2,RELSET_1,PRE_POLY,XBOOLE_0,ZFMISC_1,CKB19,CKB20,CKB25,CKB37,CKB38,CKB55;
constructors WELLORD2,BINOP_1,REAL_1,SQUARE_1,NAT_D,FINSEQOP,FINSOP_1,RVSUM_1,PREPOWER,POWER,REALSET1,SIN_COS,GROUP_4,MOD_2,MATRIX_2,HAHNBAN1,GRAPH_2,POLYNOM4,POLYNOM5,UPROOTS,SEQ_1,RECDEF_1,BINOP_2,RELSET_1,PBOOLE,FUNCT_7,POLYNOM1,NEWTON,FVSUM_1,CKB21,CKB29,CKB48,CKB50,CKB63;
requirements NUMERALS,BOOLE,SUBSET,ARITHM,REAL;
begin
theorem
Th60: (for n being non empty (Element of ( NAT )) holds (for j,k,q being Integer holds (for qc being (Element of ( F_Complex )) holds (((qc = q & j = ( eval (( cyclotomic_poly n ),qc) )) & k = ( eval (( unital_poly (( F_Complex ),n) ),qc) )) implies j divides k))))
proof
let n being non empty (Element of ( NAT ));
let j being Integer,k being Integer,q being Integer;
let qc being (Element of ( F_Complex ));
assume that
A1: qc = q
and
A2: j = ( eval (( cyclotomic_poly n ),qc) )
and
A3: k = ( eval (( unital_poly (( F_Complex ),n) ),qc) );
set jfc = ( eval (( cyclotomic_poly n ),qc) );
per cases  by NAT_1:53;
suppose n = 1;

hence thesis by A2,A3,CKB64:1,POLYNOM5:def 4;
end;
suppose A4: n > 1;

set eup1fc = ( eval (( unital_poly (( F_Complex ),1) ),qc) );
reconsider eup1 = eup1fc as Integer by A1,CKB62:1;
consider f being (FinSequence of (the carrier of ( Polynom-Ring ( F_Complex ) ))),p being (Polynomial of ( F_Complex )) such that A5: p = ( Product f ) and A6: (( dom f ) = ( Seg n ) & (for i being non empty (Element of ( NAT )) holds (i in ( Seg n ) implies (((((not i divides n) or i divides 1) or i = n) implies ( f . i ) = <% ( 1_ ( F_Complex ) ) %>) & (((i divides n & (not i divides 1)) & i <> n) implies ( f . i ) = ( cyclotomic_poly i )))))) and A7: ( unital_poly (( F_Complex ),n) ) = ( ( ( unital_poly (( F_Complex ),1) ) *' ( cyclotomic_poly n ) ) *' p ) by A4,CKB70:1,NAT_D:6;
set epfc = ( eval (p,qc) );
now
let i being non empty (Element of ( NAT ));
assume A8: i in ( dom f );
per cases ;
suppose (((not i divides n) or i divides 1) or i = n);

hence (( f . i ) = <% ( 1_ ( F_Complex ) ) %> or ( f . i ) = ( cyclotomic_poly i )) by A6,A8;
end;
suppose ((i divides n & (not i divides 1)) & i <> n);

hence (( f . i ) = <% ( 1_ ( F_Complex ) ) %> or ( f . i ) = ( cyclotomic_poly i )) by A6,A8;
end;
end;
then reconsider ep = epfc as Integer by A1,A5,CKB71:1;
k = ( ( eval (( ( unital_poly (( F_Complex ),1) ) *' ( cyclotomic_poly n ) ),qc) ) * epfc ) by A3,A7,POLYNOM4:24;
then k = ( ( eup1fc * jfc ) * epfc ) by POLYNOM4:24;
then k = ( ( eup1 * ep ) * j ) by A2;
hence thesis by INT_1:def 3;
end;
end;
