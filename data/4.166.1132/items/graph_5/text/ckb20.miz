environ
vocabularies NUMBERS,SUBSET_1,FUNCT_1,RELAT_1,TARSKI,CARD_1,FINSET_1,XXREAL_0,FINSEQ_1,FINSEQ_2,CARD_3,NAT_1,XBOOLE_0,ARYTM_3,XREAL_0,ORDINAL1,ARYTM_1,ORDINAL4,GRAPH_1,STRUCT_0,TREES_2,GRAPH_4,PARTFUN1,GLIB_000,REAL_1,GRAPH_5,ARYTM_2;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,RELAT_1,FUNCT_1,PARTFUN1,FINSEQ_1,SEQ_1,FINSEQ_2,FINSEQ_4,FINSET_1,ARYTM_2,REAL_1,NAT_1,NAT_D,STRUCT_0,GRAPH_1,FUNCT_2,GRAPH_4,CARD_3,RVSUM_1,CKB8;
definitions TARSKI,FUNCT_1,RVSUM_1;
theorems FUNCT_2,XBOOLE_1,GRAPH_1,FINSEQ_1,GRAPH_4,FUNCT_1,FINSEQ_3,FINSEQ_4,NAT_1,TARSKI,YELLOW15,CARD_5,FINSEQ_2,XBOOLE_0,CARD_2,RVSUM_1,SUBSET_1,ZFMISC_1,XREAL_1,XXREAL_0,FINSOP_1,PRE_CIRC,ORDINAL1,PARTFUN1,CARD_3,ARYTM_0,REAL_1,CKB1,CKB3,CKB4,CKB5,CKB6,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes FUNCT_1,NAT_1,CLASSES1,CKB2,CKB7;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,GRAPH_1,GRAPH_4,VALUED_0,CARD_1,STRUCT_0,ARYTM_2;
constructors XXREAL_0,FINSEQ_4,FINSOP_1,BINARITH,GRAPH_4,SEQ_1,NAT_D,RVSUM_1,ARYTM_2,RELSET_1,CKB8;
requirements REAL,BOOLE,SUBSET,NUMERALS,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve G for Graph;
reserve pe for (FinSequence of (the carrier' of G));
theorem
Th18: (( len pe ) = 1 implies pe is  Simple  oriented  Simple  oriented (Chain of G))
proof
set p = pe;
set v1 = ( (the Source of G) . ( p . 1 ) );
set v2 = ( (the Target of G) . ( p . 1 ) );
A1:now
let n;
assume (1 <= n & n <= ( len p ));
then n in ( dom p ) by FINSEQ_3:25;
hence ( p . n ) in (the carrier' of G) by FINSEQ_2:11;
end;
assume A2: ( len p ) = 1;
then 1 in ( dom p ) by FINSEQ_3:25;
then reconsider v1,v2 as (Element of G) by FINSEQ_2:11,FUNCT_2:5;
set vs = <* v1,v2 *>;
A3: ( len vs ) = ( ( len p ) + 1 ) by A2,FINSEQ_1:44;
A4:now
let n;
assume (1 <= n & n <= ( len p ));
then A5: n = 1 by A2,XXREAL_0:1;
take v1;
take v2;
thus (v1 = ( vs . n ) & v2 = ( vs . ( n + 1 ) )) by A5,FINSEQ_1:44;
thus ( p . n ) joins v1,v2 by A5,GRAPH_1:def 10;
end;
A6: ( len vs ) = 2 by FINSEQ_1:44;
A7:now
let n;
let m;
assume that
A8: 1 <= n
and
A9: n < m
and
A10: m <= ( len vs )
and
( vs . n ) = ( vs . m );
n < ( 1 + 1 ) by A6,A9,A10,XXREAL_0:2;
then n <= 1 by NAT_1:13;
hence n = 1 by A8,XXREAL_0:1;
1 < m by A8,A9,XXREAL_0:2;
then ( 1 + 1 ) < ( m + 1 ) by XREAL_1:8;
then 2 <= m by NAT_1:13;
hence m = ( len vs ) by A6,A10,XXREAL_0:1;
end;
A11:now
let n;
assume that
A12: 1 <= n
and
A13: n <= ( len vs );
per cases ;
suppose n < ( 1 + 1 );

then n <= 1 by NAT_1:13;
then n = 1 by A12,XXREAL_0:1;
then ( vs . n ) = v1 by FINSEQ_1:44;
hence ( vs . n ) in (the carrier of G);
end;
suppose n >= 2;

then n = 2 by A6,A13,XXREAL_0:1;
then ( vs . n ) = v2 by FINSEQ_1:44;
hence ( vs . n ) in (the carrier of G);
end;
end;
A14: (for n holds (((1 <= n & n < ( len p )) & ( (the Source of G) . ( p . ( n + 1 ) ) ) <> ( (the Target of G) . ( p . n ) )) implies contradiction)) by A2;
now
let n;
assume (1 <= n & n <= ( len p ));
then A15: n = 1 by A2,XXREAL_0:1;
(( vs /. 1 ) = v1 & ( vs /. ( 1 + 1 ) ) = v2) by FINSEQ_4:17;
hence ( p . n ) orientedly_joins ( vs /. n ),( vs /. ( n + 1 ) ) by A15,GRAPH_4:def 1;
end;
then vs is_oriented_vertex_seq_of p by A3,GRAPH_4:def 5;
hence thesis by A3,A7,A1,A11,A4,A14,GRAPH_1:def 12,GRAPH_1:def 13,GRAPH_4:def 7;
end;
