environ
vocabularies NUMBERS,SUBSET_1,FUNCT_1,RELAT_1,TARSKI,CARD_1,FINSET_1,XXREAL_0,FINSEQ_1,FINSEQ_2,CARD_3,NAT_1,XBOOLE_0,ARYTM_3,XREAL_0,ORDINAL1,ARYTM_1,ORDINAL4,GRAPH_1,STRUCT_0,TREES_2,GRAPH_4,PARTFUN1,GLIB_000,REAL_1,GRAPH_5,ARYTM_2;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,RELAT_1,FUNCT_1,PARTFUN1,FINSEQ_1,SEQ_1,FINSEQ_2,FINSEQ_4,FINSET_1,ARYTM_2,REAL_1,NAT_1,NAT_D,STRUCT_0,GRAPH_1,FUNCT_2,GRAPH_4,CARD_3,RVSUM_1,CKB8,CKB23,CKB24,CKB36,CKB37,CKB38,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB62,CKB63,CKB65,CKB66,CKB67,CKB68,CKB82,CKB83;
definitions TARSKI,FUNCT_1,RVSUM_1,CKB23,CKB24,CKB36,CKB37,CKB38,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB63,CKB65,CKB66,CKB67,CKB68,CKB82,CKB83;
theorems FUNCT_2,XBOOLE_1,GRAPH_1,FINSEQ_1,GRAPH_4,FUNCT_1,FINSEQ_3,FINSEQ_4,NAT_1,TARSKI,YELLOW15,CARD_5,FINSEQ_2,XBOOLE_0,CARD_2,RVSUM_1,SUBSET_1,ZFMISC_1,XREAL_1,XXREAL_0,FINSOP_1,PRE_CIRC,ORDINAL1,PARTFUN1,CARD_3,ARYTM_0,REAL_1,CKB1,CKB3,CKB4,CKB5,CKB6,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB63,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB88,CKB89,CKB90,CKB94,CKB95,CKB96,CKB97,CKB98;
schemes FUNCT_1,NAT_1,CLASSES1,CKB2,CKB7;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,GRAPH_1,GRAPH_4,VALUED_0,CARD_1,STRUCT_0,ARYTM_2,CKB64,CKB87,CKB91,CKB92,CKB93;
constructors XXREAL_0,FINSEQ_4,FINSOP_1,BINARITH,GRAPH_4,SEQ_1,NAT_D,RVSUM_1,ARYTM_2,RELSET_1,CKB8,CKB23,CKB24,CKB36,CKB37,CKB38,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB63,CKB65,CKB66,CKB67,CKB68,CKB82,CKB83;
requirements REAL,BOOLE,SUBSET,NUMERALS,ARITHM;
begin
reserve V for set;
reserve U for set;
reserve W for Function;
reserve G for  finite Graph;
reserve P for  oriented (Chain of G);
reserve Q for  oriented (Chain of G);
reserve v1 for (Element of G);
reserve v2 for (Element of G);
reserve v3 for (Element of G);
theorem
(((((W is_weight>=0of G & P is_shortestpath_of v1,v2,V,W) & v1 <> v2) & V c= U) & (for Q holds (for v3 holds (((not v3 in V) & Q is_shortestpath_of v1,v3,V,W) implies ( cost (P,W) ) <= ( cost (Q,W) ))))) implies P is_shortestpath_of v1,v2,U,W)
proof
assume that
A1: W is_weight>=0of G
and
A2: P is_shortestpath_of v1,v2,V,W
and
A3: v1 <> v2
and
A4: V c= U
and
A5: (for Q holds (for v3 holds (((not v3 in V) & Q is_shortestpath_of v1,v3,V,W) implies ( cost (P,W) ) <= ( cost (Q,W) ))));
A6: P is_shortestpath_of v1,v2,W by A1,A2,A3,A5,CKB98:1;
A7:now
let q being  oriented (Chain of G);
assume q is_orientedpath_of v1,v2,U;
then q is_orientedpath_of v1,v2 by CKB37:def 1;
hence ( cost (P,W) ) <= ( cost (q,W) ) by A6,CKB82:def 1;
end;
P is_orientedpath_of v1,v2,V by A2,CKB83:def 1;
then P is_orientedpath_of v1,v2,U by A4,CKB42:1;
hence thesis by A7,CKB83:def 1;
end;
