environ
vocabularies NUMBERS,SUBSET_1,FUNCT_1,RELAT_1,TARSKI,XBOOLE_0,FUNCOP_1,PBOOLE,ZFMISC_1,FUNCT_4,FINSEQ_1,ARYTM_3,CARD_1,NAT_1,XXREAL_0,FINSET_1,SETFAM_1,FINSEQ_2,ORDINAL4,MCART_1,PARTFUN1,REWRITE1,FUNCT_2,ARYTM_1,RFINSEQ,CLASSES1,FUNCT_7,VALUED_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,SUBSET_1,CARD_1,WELLORD2,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,SETFAM_1,PBOOLE,DOMAIN_1,RELAT_1,FUNCT_1,RELSET_1,BINOP_1,FINSET_1,PARTFUN1,FUNCOP_1,FUNCT_2,FINSEQ_1,FINSEQ_2,FUNCT_4,CLASSES1,RFINSEQ,NAT_D,REWRITE1,VALUED_1,CKB38,CKB40,CKB46,CKB54,CKB58,CKB59,CKB78,CKB79,CKB83,CKB89;
definitions TARSKI,XBOOLE_0,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,BINOP_1,FINSEQ_2,FUNCT_4,CKB38,CKB40,CKB46,CKB58,CKB59,CKB78,CKB79,CKB83;
theorems FINSEQ_1,RELAT_1,TARSKI,AXIOMS,ZFMISC_1,INT_1,FUNCT_1,FINSEQ_2,FUNCT_4,SUBSET_1,FINSET_1,CARD_1,NAT_1,FUNCT_2,FUNCOP_1,SETFAM_1,MCART_1,FINSEQ_3,ENUMSET1,REWRITE1,FINSEQ_4,RELSET_1,XBOOLE_0,XBOOLE_1,PARTFUN1,GRFUNC_1,XREAL_1,XXREAL_0,ORDINAL1,RFINSEQ,FINSEQ_5,NAT_D,WELLORD2,VALUED_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB32,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB90,CKB91,CKB92,CKB93;
schemes NAT_1,DOMAIN_1,CLASSES1,FRAENKEL,FINSEQ_1,RECDEF_1,FUNCT_2,CKB33,CKB34,CKB35,CKB36,CKB37;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,FUNCOP_1,FUNCT_4,XREAL_0,NAT_1,INT_1,CARD_1,FINSEQ_1,FUNCT_2,RELSET_1,XXREAL_0,VALUED_1,CKB7,CKB8,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB53,CKB85,CKB86,CKB87,CKB88;
constructors SETFAM_1,PARTFUN1,WELLORD2,BINOP_1,DOMAIN_1,FUNCT_4,XXREAL_0,NAT_1,INT_1,PBOOLE,RFINSEQ,NAT_D,REWRITE1,RELAT_2,REAL_1,CLASSES1,RELSET_1,VALUED_1,FINSEQ_2,CKB38,CKB40,CKB46,CKB54,CKB58,CKB59,CKB78,CKB79,CKB83;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve X for set;
reserve x for set;
reserve p for  Function-yielding FinSequence;
reserve f for Function;
theorem
(for p being FuncSequence holds ((x in ( firstdom p ) & x in X) implies ( ( apply (p,x) ) . ( ( len p ) + 1 ) ) = ( ( compose (p,X) ) . x )))
proof
defpred P[  Function-yielding FinSequence ]
 means
((($1 is FuncSequence & x in ( firstdom $1 )) & x in X) implies ( ( apply ($1,x) ) . ( ( len $1 ) + 1 ) ) = ( ( compose ($1,X) ) . x ));
A1: (for p being  Function-yielding FinSequence holds (P[ p ] implies (for f being Function holds P[ ( p ^ <* f *> ) ])))
proof
A2: ( dom ( id X ) ) = X by FUNCT_1:17;
let p;
assume that
A3: (((p is FuncSequence & x in ( firstdom p )) & x in X) implies ( ( apply (p,x) ) . ( ( len p ) + 1 ) ) = ( ( compose (p,X) ) . x ));
let f;
assume that
A4: ( p ^ <* f *> ) is FuncSequence
and
A5: x in ( firstdom ( p ^ <* f *> ) )
and
A6: x in X;
A7: p is FuncSequence by A4,CKB84:1;
( ( id X ) . x ) = x by A6,FUNCT_1:17;
then A8: ( ( f * ( id X ) ) . x ) = ( f . x ) by A6,A2,FUNCT_1:13;
A9: ( len <* f *> ) = 1 by FINSEQ_1:40;
A10: ( compose (( p ^ <* f *> ),X) ) = ( f * ( compose (p,X) ) ) by CKB62:1;
A11: (( apply (<* f *>,x) ) = <* x,( f . x ) *> & ( compose (<* f *>,X) ) = ( f * ( id X ) )) by CKB66:1,CKB68:1;
A12: ( apply (( p ^ <* f *> ),x) ) = ( ( apply (p,x) ) ^ <* ( f . ( ( apply (p,x) ) . ( ( len p ) + 1 ) ) ) *> ) by CKB63:1;
per cases ;
suppose p = ( {} );

then ( p ^ <* f *> ) = <* f *> by FINSEQ_1:34;
hence thesis by A9,A11,A8,FINSEQ_1:44;
end;
suppose A13: p <> ( {} );

then A14: ( dom ( compose (p,X) ) ) = ( ( firstdom p ) /\ X ) by A7,CKB90:1;
A15: ( firstdom ( p ^ <* f *> ) ) = ( proj1 ( ( p ^ <* f *> ) . 1 ) ) by CKB78:def 1;
A16: ( firstdom p ) = ( proj1 ( p . 1 ) ) by A13,CKB78:def 1;
( len p ) >= ( ( 0 ) + 1 ) by A13,NAT_1:13;
then A17: 1 in ( dom p ) by FINSEQ_3:25;
then ( p . 1 ) = ( ( p ^ <* f *> ) . 1 ) by FINSEQ_1:def 7;
then A18: x in ( ( firstdom p ) /\ X ) by A5,A6,A16,A15,XBOOLE_0:def 4;
(( len ( apply (p,x) ) ) = ( ( len p ) + 1 ) & ( len ( p ^ <* f *> ) ) = ( ( len p ) + 1 )) by A9,CKB59:def 1,FINSEQ_1:22;
hence ( ( apply (( p ^ <* f *> ),x) ) . ( ( len ( p ^ <* f *> ) ) + 1 ) ) = ( f . ( ( compose (p,X) ) . x ) ) by A3,A4,A5,A6,A12,A16,A15,A17,CKB84:1,FINSEQ_1:42,FINSEQ_1:def 7
.= ( ( compose (( p ^ <* f *> ),X) ) . x ) by A10,A14,A18,FUNCT_1:13;
end;
end;
A19: P[ ( {} ) ] by CKB78:def 1;
(for p holds P[ p ]) from CKB37:sch 1(A19,A1);
hence thesis;
end;
