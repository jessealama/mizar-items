environ
vocabularies NUMBERS,SUBSET_1,FUNCT_1,RELAT_1,TARSKI,XBOOLE_0,FUNCOP_1,PBOOLE,ZFMISC_1,FUNCT_4,FINSEQ_1,ARYTM_3,CARD_1,NAT_1,XXREAL_0,FINSET_1,SETFAM_1,FINSEQ_2,ORDINAL4,MCART_1,PARTFUN1,REWRITE1,FUNCT_2,ARYTM_1,RFINSEQ,CLASSES1,FUNCT_7,VALUED_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,SUBSET_1,CARD_1,WELLORD2,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,SETFAM_1,PBOOLE,DOMAIN_1,RELAT_1,FUNCT_1,RELSET_1,BINOP_1,FINSET_1,PARTFUN1,FUNCOP_1,FUNCT_2,FINSEQ_1,FINSEQ_2,FUNCT_4,CLASSES1,RFINSEQ,NAT_D,REWRITE1,VALUED_1;
definitions TARSKI,XBOOLE_0,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,BINOP_1,FINSEQ_2,FUNCT_4;
theorems FINSEQ_1,RELAT_1,TARSKI,AXIOMS,ZFMISC_1,INT_1,FUNCT_1,FINSEQ_2,FUNCT_4,SUBSET_1,FINSET_1,CARD_1,NAT_1,FUNCT_2,FUNCOP_1,SETFAM_1,MCART_1,FINSEQ_3,ENUMSET1,REWRITE1,FINSEQ_4,RELSET_1,XBOOLE_0,XBOOLE_1,PARTFUN1,GRFUNC_1,XREAL_1,XXREAL_0,ORDINAL1,RFINSEQ,FINSEQ_5,NAT_D,WELLORD2,VALUED_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB32;
schemes NAT_1,DOMAIN_1,CLASSES1,FRAENKEL,FINSEQ_1,RECDEF_1,FUNCT_2,CKB33,CKB34;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,FUNCOP_1,FUNCT_4,XREAL_0,NAT_1,INT_1,CARD_1,FINSEQ_1,FUNCT_2,RELSET_1,XXREAL_0,VALUED_1,CKB7,CKB8,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31;
constructors SETFAM_1,PARTFUN1,WELLORD2,BINOP_1,DOMAIN_1,FUNCT_4,XXREAL_0,NAT_1,INT_1,PBOOLE,RFINSEQ,NAT_D,REWRITE1,RELAT_2,REAL_1,CLASSES1,RELSET_1,VALUED_1,FINSEQ_2;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
scheme CardMono { A() -> set,D() -> non empty set,G(set) -> set } : A(),{ d where d is (Element of D()): G(d) in A() } are_equipotent 
provided
A1: (for x being set holds (x in A() implies (ex d being (Element of D()) st x = G(d))))
and
A2: (for d1,d2 being (Element of D()) holds (G(d1) = G(d2) implies d1 = d2))
proof
set D = { d where d is (Element of D()): G(d) in A() };
per cases ;
suppose A3: A() = ( {} );

now
set a = the (Element of D);
assume D <> ( {} );
then a in D;
then (ex d being (Element of D()) st (a = d & G(d) in A()));
hence contradiction by A3;
end;
hence thesis by A3;
end;
suppose A() <> ( {} );

then reconsider A = A() as non empty set;
A,D are_equipotent 
proof
take Z = { [ G(d),d ] where d is (Element of D()): (not contradiction) };
hereby
let x being set;
assume A4: x in A;
then consider d being (Element of D()) such that A5: x = G(d) by A1;
reconsider d as set;
take d;
thus d in D by A4,A5;
thus [ x,d ] in Z by A5;
end;
hereby
let y being set;
assume y in D;
then consider d being (Element of D()) such that A6: (d = y & G(d) in A);
reconsider x = G(d) as set;
take x;
thus (x in A & [ x,y ] in Z) by A6;
end;
let x being set,y being set,z being set,u being set;
assume [ x,y ] in Z;
then consider d1 being (Element of D()) such that A7: [ x,y ] = [ G(d1),d1 ];
assume [ z,u ] in Z;
then consider d2 being (Element of D()) such that A8: [ z,u ] = [ G(d2),d2 ];
A9: (z = G(d2) & u = d2) by A8,ZFMISC_1:27;
(x = G(d1) & y = d1) by A7,ZFMISC_1:27;
hence thesis by A2,A9;
end;
hence thesis;
end;
end;
