environ
vocabularies NUMBERS,SUBSET_1,FUNCT_1,RELAT_1,TARSKI,XBOOLE_0,FUNCOP_1,PBOOLE,ZFMISC_1,FUNCT_4,FINSEQ_1,ARYTM_3,CARD_1,NAT_1,XXREAL_0,FINSET_1,SETFAM_1,FINSEQ_2,ORDINAL4,MCART_1,PARTFUN1,REWRITE1,FUNCT_2,ARYTM_1,RFINSEQ,CLASSES1,FUNCT_7,VALUED_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,SUBSET_1,CARD_1,WELLORD2,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,SETFAM_1,PBOOLE,DOMAIN_1,RELAT_1,FUNCT_1,RELSET_1,BINOP_1,FINSET_1,PARTFUN1,FUNCOP_1,FUNCT_2,FINSEQ_1,FINSEQ_2,FUNCT_4,CLASSES1,RFINSEQ,NAT_D,REWRITE1,VALUED_1,CKB38,CKB40,CKB46,CKB54;
definitions TARSKI,XBOOLE_0,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,BINOP_1,FINSEQ_2,FUNCT_4,CKB38,CKB40,CKB46;
theorems FINSEQ_1,RELAT_1,TARSKI,AXIOMS,ZFMISC_1,INT_1,FUNCT_1,FINSEQ_2,FUNCT_4,SUBSET_1,FINSET_1,CARD_1,NAT_1,FUNCT_2,FUNCOP_1,SETFAM_1,MCART_1,FINSEQ_3,ENUMSET1,REWRITE1,FINSEQ_4,RELSET_1,XBOOLE_0,XBOOLE_1,PARTFUN1,GRFUNC_1,XREAL_1,XXREAL_0,ORDINAL1,RFINSEQ,FINSEQ_5,NAT_D,WELLORD2,VALUED_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB32,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB55,CKB56,CKB57;
schemes NAT_1,DOMAIN_1,CLASSES1,FRAENKEL,FINSEQ_1,RECDEF_1,FUNCT_2,CKB33,CKB34,CKB35,CKB36,CKB37;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,FUNCOP_1,FUNCT_4,XREAL_0,NAT_1,INT_1,CARD_1,FINSEQ_1,FUNCT_2,RELSET_1,XXREAL_0,VALUED_1,CKB7,CKB8,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB53;
constructors SETFAM_1,PARTFUN1,WELLORD2,BINOP_1,DOMAIN_1,FUNCT_4,XXREAL_0,NAT_1,INT_1,PBOOLE,RFINSEQ,NAT_D,REWRITE1,RELAT_2,REAL_1,CLASSES1,RELSET_1,VALUED_1,FINSEQ_2,CKB38,CKB40,CKB46,CKB54;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
definition
let X being set;
let p being  Function-yielding FinSequence;
func compose (p,X) -> Function
means
:Def4: (ex f being (ManySortedFunction of ( NAT )) st ((it = ( f . ( len p ) ) & ( f . ( 0 ) ) = ( id X )) & (for i being (Element of ( NAT )) holds (( i + 1 ) in ( dom p ) implies (for g,h being Function holds ((g = ( f . i ) & h = ( p . ( i + 1 ) )) implies ( f . ( i + 1 ) ) = ( h * g )))))));
uniqueness
proof
let g1 being Function,g2 being Function;
given f1 being (ManySortedFunction of ( NAT )) such that
A1: g1 = ( f1 . ( len p ) )
and
A2: ( f1 . ( 0 ) ) = ( id X )
and
A3: (for i being (Element of ( NAT )) holds (( i + 1 ) in ( dom p ) implies (for g,h being Function holds ((g = ( f1 . i ) & h = ( p . ( i + 1 ) )) implies ( f1 . ( i + 1 ) ) = ( h * g )))));

given f2 being (ManySortedFunction of ( NAT )) such that
A4: g2 = ( f2 . ( len p ) )
and
A5: ( f2 . ( 0 ) ) = ( id X )
and
A6: (for i being (Element of ( NAT )) holds (( i + 1 ) in ( dom p ) implies (for g,h being Function holds ((g = ( f2 . i ) & h = ( p . ( i + 1 ) )) implies ( f2 . ( i + 1 ) ) = ( h * g )))));

defpred R[ (Element of ( NAT )) ]
 means
($1 <= ( len p ) implies (( f1 . $1 ) = ( f2 . $1 ) & ( f1 . $1 ) is Function));
A7: (for i being (Element of ( NAT )) holds (R[ i ] implies R[ ( i + 1 ) ]))
proof
let i being (Element of ( NAT ));
assume that
A8: (i <= ( len p ) implies (( f1 . i ) = ( f2 . i ) & ( f1 . i ) is Function))
and
A9: ( i + 1 ) <= ( len p );
reconsider h = ( p . ( i + 1 ) ) as Function;
reconsider g = ( f1 . i ) as Function;
( i + 1 ) >= 1 by NAT_1:11;
then A10: ( i + 1 ) in ( dom p ) by A9,FINSEQ_3:25;
then ( f1 . ( i + 1 ) ) = ( h * g ) by A3;
hence thesis by A6,A8,A9,A10,NAT_1:13;
end;
A11: R[ ( 0 ) ] by A2,A5;
(for i being (Element of ( NAT )) holds R[ i ]) from NAT_1:sch 1(A11,A7);
hence thesis by A1,A4;
end;
correctness
proof
reconsider e = ( 0 ) as Function;
defpred P[ (Element of ( NAT )),set,set ]
 means
(((not $2 is Function) & $3 = e) or ($2 is Function & (for g,h being Function holds ((g = $2 & h = ( p . ( $1 + 1 ) )) implies $3 = ( h * g )))));
A12: (for n being (Element of ( NAT )) holds (for x being set holds (ex y being set st P[ n,x,y ])))
proof
let n being (Element of ( NAT ));
let x being set;
reconsider h = ( p . ( n + 1 ) ) as Function;
per cases ;
suppose x is Function;

then reconsider g = x as Function;
take ( h * g );
thus thesis;
end;
suppose A13: (not x is Function);

take ( 0 );
thus thesis by A13;
end;
end;
consider f being Function such that A14: (( dom f ) = ( NAT ) & ( f . ( 0 ) ) = ( id X )) and A15: (for n being (Element of ( NAT )) holds P[ n,( f . n ),( f . ( n + 1 ) ) ]) from RECDEF_1:sch 1(A12);
defpred P[ (Element of ( NAT )) ]
 means
( f . $1 ) is Function;
A16: (for i being (Element of ( NAT )) holds (P[ i ] implies P[ ( i + 1 ) ]))
proof
let i being (Element of ( NAT ));
reconsider h = ( p . ( i + 1 ) ) as Function;
assume ( f . i ) is Function;
then reconsider g = ( f . i ) as Function;
( f . ( i + 1 ) ) = ( h * g ) by A15;
hence thesis;
end;
A17: P[ ( 0 ) ] by A14;
A18: (for i being (Element of ( NAT )) holds P[ i ]) from NAT_1:sch 1(A17,A16);
then reconsider F = ( f . ( len p ) ) as Function;
f is  Function-yielding
proof
let x being set;
assume x in ( dom f );
hence thesis by A14,A18;
end;
then reconsider f as (ManySortedFunction of ( NAT )) by A14,PARTFUN1:def 2,RELAT_1:def 18;
take F;
take f;
thus (F = ( f . ( len p ) ) & ( f . ( 0 ) ) = ( id X )) by A14;
let i being (Element of ( NAT ));
thus thesis by A15;
end;
end;
