environ
vocabularies NUMBERS,XBOOLEAN,XXREAL_0,CARD_1,XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,FUNCT_1,RELAT_1,TARSKI,FUNCOP_1,PARTIT1,EQREL_1,ZFMISC_1,SETFAM_1,BVFUNC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,FUNCT_2,SETFAM_1,EQREL_1,NUMBERS,PARTIT1,XXREAL_0,CKB1,CKB3,CKB4,CKB5,CKB6;
definitions TARSKI,XBOOLE_0,MARGREL1,XBOOLEAN,CKB1,CKB5,CKB6;
theorems TARSKI,FUNCT_1,FUNCT_2,MARGREL1,EQREL_1,SETFAM_1,PARTIT1,XBOOLE_0,FUNCOP_1,XBOOLEAN,CKB1,CKB5,CKB6;
schemes DOMAIN_1,FUNCT_2,FUNCT_1,CKB2;
registrations SUBSET_1,XREAL_0,XBOOLEAN,EQREL_1,MARGREL1,FUNCT_1,FUNCT_2;
constructors SETFAM_1,XXREAL_0,XREAL_0,PARTIT1,BINARITH,RELSET_1,CKB3,CKB4,CKB5,CKB6;
requirements REAL,SUBSET,BOOLE,ARITHM;
begin
registration
let p being  boolean-valued Function;
let q being  boolean-valued Function;
cluster ( p 'xor' q ) ->  boolean-valued;
coherence
proof
let x being set;
assume x in ( rng ( p 'xor' q ) );
then consider y being set such that A1: (y in ( dom ( p 'xor' q ) ) & x = ( ( p 'xor' q ) . y )) by FUNCT_1:def 3;
x = ( ( p . y ) 'xor' ( q . y ) ) by A1,CKB6:def 1;
then (x = ( FALSE ) or x = ( TRUE )) by XBOOLEAN:def 3;
hence thesis;
end;
end;
