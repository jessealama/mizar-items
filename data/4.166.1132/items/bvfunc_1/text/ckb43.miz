environ
vocabularies NUMBERS,XBOOLEAN,XXREAL_0,CARD_1,XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,FUNCT_1,RELAT_1,TARSKI,FUNCOP_1,PARTIT1,EQREL_1,ZFMISC_1,SETFAM_1,BVFUNC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,FUNCT_2,SETFAM_1,EQREL_1,NUMBERS,PARTIT1,XXREAL_0,CKB1,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB36,CKB41,CKB42;
definitions TARSKI,XBOOLE_0,MARGREL1,XBOOLEAN,CKB1,CKB5,CKB6,CKB8,CKB9,CKB12,CKB13,CKB16,CKB17,CKB20,CKB21,CKB36,CKB41,CKB42;
theorems TARSKI,FUNCT_1,FUNCT_2,MARGREL1,EQREL_1,SETFAM_1,PARTIT1,XBOOLE_0,FUNCOP_1,XBOOLEAN,CKB1,CKB5,CKB6,CKB8,CKB9,CKB12,CKB13,CKB16,CKB17,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42;
schemes DOMAIN_1,FUNCT_2,FUNCT_1,CKB2;
registrations SUBSET_1,XREAL_0,XBOOLEAN,EQREL_1,MARGREL1,FUNCT_1,FUNCT_2,CKB7,CKB14,CKB15;
constructors SETFAM_1,XXREAL_0,XREAL_0,PARTIT1,BINARITH,RELSET_1,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB36,CKB41,CKB42;
requirements REAL,SUBSET,BOOLE,ARITHM;
begin
reserve Y for non empty set;
theorem
Th22: (for a being (Element of ( Funcs (Y,( BOOLEAN )) )) holds (( 'not' ( B_INF a ) ) = ( B_SUP ( 'not' a ) ) & ( 'not' ( B_SUP a ) ) = ( B_INF ( 'not' a ) )))
proof
let a being (Element of ( Funcs (Y,( BOOLEAN )) ));
A1: ((for x being (Element of Y) holds ( ( 'not' a ) . x ) = ( TRUE )) implies (for x being (Element of Y) holds ( a . x ) = ( FALSE )))
proof
assume A2: (for x being (Element of Y) holds ( ( 'not' a ) . x ) = ( TRUE ));
let x being (Element of Y);
( ( 'not' a ) . x ) = ( TRUE ) by A2;
then ( 'not' ( a . x ) ) = ( TRUE ) by MARGREL1:def 19;
hence thesis;
end;
A3: ((for x being (Element of Y) holds ( ( 'not' a ) . x ) = ( FALSE )) implies (for x being (Element of Y) holds ( a . x ) = ( TRUE )))
proof
assume A4: (for x being (Element of Y) holds ( ( 'not' a ) . x ) = ( FALSE ));
let x being (Element of Y);
( ( 'not' a ) . x ) = ( FALSE ) by A4;
then ( 'not' ( a . x ) ) = ( FALSE ) by MARGREL1:def 19;
hence thesis;
end;
A5:now
assume A6: ((for x being (Element of Y) holds ( a . x ) = ( TRUE )) or (for x being (Element of Y) holds ( a . x ) = ( FALSE )));
now
per cases  by A6;
case A7: ((for x being (Element of Y) holds ( a . x ) = ( TRUE )) & (not (for x being (Element of Y) holds ( a . x ) = ( FALSE ))));
A8: (for x being (Element of Y) holds ( ( 'not' a ) . x ) = ( FALSE ))
proof
let x being (Element of Y);
( 'not' ( TRUE ) ) = ( FALSE );
then ( 'not' ( a . x ) ) = ( FALSE ) by A7;
hence thesis by MARGREL1:def 19;
end;
( B_INF a ) = ( I_el Y ) by A7,CKB41:def 1;
then A9: ( 'not' ( B_INF a ) ) = ( O_el Y ) by CKB23:1;
(( B_INF ( 'not' a ) ) = ( O_el Y ) & ( 'not' ( B_SUP a ) ) = ( 'not' ( I_el Y ) )) by A1,A7,CKB41:def 1,CKB42:def 1;
hence thesis by A9,A8,CKB42:def 1,CKB23:1;
end;
case A10: ((for x being (Element of Y) holds ( a . x ) = ( FALSE )) & (not (for x being (Element of Y) holds ( a . x ) = ( TRUE ))));
A11: (for x being (Element of Y) holds ( ( 'not' a ) . x ) = ( TRUE ))
proof
let x being (Element of Y);
( 'not' ( FALSE ) ) = ( TRUE );
then ( 'not' ( a . x ) ) = ( TRUE ) by A10;
hence thesis by MARGREL1:def 19;
end;
( 'not' ( B_SUP a ) ) = ( 'not' ( O_el Y ) ) by A10,CKB42:def 1;
then A12: ( 'not' ( B_SUP a ) ) = ( I_el Y ) by CKB23:1;
(( B_SUP ( 'not' a ) ) = ( I_el Y ) & ( 'not' ( B_INF a ) ) = ( 'not' ( O_el Y ) )) by A3,A10,CKB41:def 1,CKB42:def 1;
hence thesis by A12,A11,CKB41:def 1,CKB23:1;
end;
case A13: ((for x being (Element of Y) holds ( a . x ) = ( TRUE )) & (for x being (Element of Y) holds ( a . x ) = ( FALSE )));
let x being (Element of Y);
( a . x ) = ( TRUE ) by A13;
hence thesis by A13;
end;
end;
hence thesis;
end;
now
assume that
A14: (not (for x being (Element of Y) holds ( a . x ) = ( TRUE )))
and
A15: (not (for x being (Element of Y) holds ( a . x ) = ( FALSE )));
( 'not' ( B_INF a ) ) = ( 'not' ( O_el Y ) ) by A14,CKB41:def 1;
then A16: ( 'not' ( B_INF a ) ) = ( I_el Y ) by CKB23:1;
(( 'not' ( B_SUP a ) ) = ( 'not' ( I_el Y ) ) & ( B_INF ( 'not' a ) ) = ( O_el Y )) by A1,A15,CKB41:def 1,CKB42:def 1;
hence thesis by A3,A14,A16,CKB42:def 1,CKB23:1;
end;
hence thesis by A5;
end;
