environ
vocabularies NUMBERS,XBOOLE_0,PROB_1,MEASURE1,PARTFUN1,REAL_1,XREAL_0,ORDINAL1,SUBSET_1,SEQFUNC,MEASURE6,RELAT_1,FUNCT_1,PBOOLE,TARSKI,SEQ_1,ORDINAL2,RINFSUP1,MESFUNC8,CARD_1,NAT_1,MESFUNC1,ARYTM_3,SEQ_2,XXREAL_0,XXREAL_2,SETFAM_1,COMSEQ_1,COMPLEX1,VALUED_1,SUPINF_2,POWER,ARYTM_1,MESFUNC5,INTEGRA5,MESFUNC2,FINSEQ_1,MESFUNC3,INT_1,ZFMISC_1,XCMPLX_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,COMPLEX1,XXREAL_0,XREAL_0,XXREAL_2,REAL_1,NAT_1,NAT_D,PROB_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FINSEQ_1,RFUNCT_3,VALUED_1,FUNCT_2,SETFAM_1,SUPINF_1,SUPINF_2,SEQ_1,SEQ_2,SEQFUNC,COMSEQ_1,COMSEQ_2,RINFSUP1,RINFSUP2,MEASURE1,MEASURE6,EXTREAL1,MESFUNC1,MESFUNC2,MESFUNC5,MESFUNC6,COMSEQ_3,MESFUN6C,MESFUNC8,SEQ_4,COMPLSP2,CKB1,CKB4,CKB6,CKB8,CKB10,CKB19,CKB21,CKB23,CKB33,CKB34,CKB35,CKB37,CKB60,CKB61,CKB62;
definitions MESFUNC5,MEASURE6,COMPLEX1,RINFSUP2,TARSKI,XBOOLE_0,FINSEQ_1,COMPLSP2,XXREAL_3,CKB1,CKB4,CKB6,CKB8,CKB10,CKB19,CKB21,CKB23,CKB33,CKB34,CKB35,CKB37,CKB60,CKB61,CKB62;
theorems MEASURE1,TARSKI,PARTFUN1,FUNCT_1,EXTREAL1,MESFUNC1,NAT_1,XBOOLE_0,XBOOLE_1,XCMPLX_0,XREAL_1,MESFUNC5,XXREAL_0,VALUED_1,MESFUNC6,COMPLEX1,RELAT_1,SQUARE_1,FINSEQ_1,MESFUN6C,ORDINAL1,FUNCT_2,SEQFUNC,SETFAM_1,RINFSUP1,MESFUNC7,MESFUNC8,COMSEQ_3,MESFUNC3,NUMBERS,RINFSUP2,XXREAL_2,COMPLSP2,NAT_D,FINSEQ_2,NAT_2,FINSEQ_3,RELSET_1,XXREAL_3,CKB1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB37,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63;
schemes FUNCT_2,PARTFUN2,FINSEQ_1;
registrations NAT_1,MESFUNC8,SUBSET_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,VALUED_0,XCMPLX_0,PARTFUN1,FUNCT_2,RELAT_1,SEQ_2,COMSEQ_3,RELSET_1,FINSEQ_1,CKB3,CKB13,CKB36,CKB38;
constructors REAL_1,NAT_1,SQUARE_1,MEASURE6,EXTREAL1,MESFUNC2,MESFUNC3,MESFUNC5,SEQ_1,MESFUNC6,MESFUN6C,BINOP_2,RINFSUP1,MESFUNC8,COMSEQ_2,COMSEQ_3,SUPINF_1,RINFSUP2,SEQFUNC,SEQ_2,MESFUNC1,FINSEQ_1,COMPLSP2,MATRIX_5,NAT_D,RELSET_1,SEQ_4,CKB1,CKB4,CKB6,CKB8,CKB10,CKB19,CKB21,CKB23,CKB33,CKB34,CKB35,CKB37,CKB60,CKB61,CKB62;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve X for non empty set;
reserve S for (SigmaField of X);
reserve f for (PartFunc of X,( COMPLEX ));
theorem
Th44: (f is_simple_func_in S implies (ex F being (Finite_Sep_Sequence of S) st (ex a being (FinSequence of ( COMPLEX )) st ((( dom f ) = ( union ( rng F ) ) & ( dom F ) = ( dom a )) & (for n being Nat holds (n in ( dom F ) implies (for x being set holds (x in ( F . n ) implies ( f . x ) = ( a . n )))))))))
proof
assume f is_simple_func_in S;
then consider F being (Finite_Sep_Sequence of S) such that A1: ( dom f ) = ( union ( rng F ) ) and A2: (for n being Nat holds (for x,y being (Element of X) holds (((n in ( dom F ) & x in ( F . n )) & y in ( F . n )) implies ( f . x ) = ( f . y )))) by CKB60:def 1;
defpred P[ set,set ]
 means
(for x being set holds (x in ( F . $1 ) implies $2 = ( f . x )));
A3: (for k being Nat holds (k in ( Seg ( len F ) ) implies (ex y being (Element of ( COMPLEX )) st P[ k,y ])))
proof
let k being Nat;
assume k in ( Seg ( len F ) );
then A4: k in ( dom F ) by FINSEQ_1:def 3;
then A5: ( F . k ) in ( rng F ) by FUNCT_1:3;
per cases ;
suppose A6: ( F . k ) = ( {} );

reconsider y = ( 0 ) as (Element of ( COMPLEX )) by NUMBERS:11,TARSKI:def 3;
take y;
thus thesis by A6;
end;
suppose ( F . k ) <> ( {} );

then consider x1 being set such that A7: x1 in ( F . k ) by XBOOLE_0:def 1;
x1 in ( dom f ) by A1,A5,A7,TARSKI:def 4;
then ( f . x1 ) in ( rng f ) by FUNCT_1:3;
then reconsider y = ( f . x1 ) as (Element of ( COMPLEX ));
take y;
hereby
let x being set;
A8: ( rng F ) c= ( bool X ) by XBOOLE_1:1;
assume x in ( F . k );
hence y = ( f . x ) by A2,A4,A5,A7,A8;
end;
end;
end;
consider a being (FinSequence of ( COMPLEX )) such that A9: (( dom a ) = ( Seg ( len F ) ) & (for k being Nat holds (k in ( Seg ( len F ) ) implies P[ k,( a . k ) ]))) from FINSEQ_1:sch 5(A3);
take F;
take a;
now
let n being Nat;
assume n in ( dom F );
then n in ( Seg ( len F ) ) by FINSEQ_1:def 3;
hence (for x being set holds (x in ( F . n ) implies ( a . n ) = ( f . x ))) by A9;
end;
hence thesis by A1,A9,FINSEQ_1:def 3;
end;
