environ
vocabularies NUMBERS,XBOOLE_0,PROB_1,MEASURE1,PARTFUN1,REAL_1,XREAL_0,ORDINAL1,SUBSET_1,SEQFUNC,MEASURE6,RELAT_1,FUNCT_1,PBOOLE,TARSKI,SEQ_1,ORDINAL2,RINFSUP1,MESFUNC8,CARD_1,NAT_1,MESFUNC1,ARYTM_3,SEQ_2,XXREAL_0,XXREAL_2,SETFAM_1,COMSEQ_1,COMPLEX1,VALUED_1,SUPINF_2,POWER,ARYTM_1,MESFUNC5,INTEGRA5,MESFUNC2,FINSEQ_1,MESFUNC3,INT_1,ZFMISC_1,XCMPLX_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,COMPLEX1,XXREAL_0,XREAL_0,XXREAL_2,REAL_1,NAT_1,NAT_D,PROB_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FINSEQ_1,RFUNCT_3,VALUED_1,FUNCT_2,SETFAM_1,SUPINF_1,SUPINF_2,SEQ_1,SEQ_2,SEQFUNC,COMSEQ_1,COMSEQ_2,RINFSUP1,RINFSUP2,MEASURE1,MEASURE6,EXTREAL1,MESFUNC1,MESFUNC2,MESFUNC5,MESFUNC6,COMSEQ_3,MESFUN6C,MESFUNC8,SEQ_4,COMPLSP2,CKB1,CKB4,CKB6,CKB8,CKB10,CKB19,CKB21,CKB23,CKB33;
definitions MESFUNC5,MEASURE6,COMPLEX1,RINFSUP2,TARSKI,XBOOLE_0,FINSEQ_1,COMPLSP2,XXREAL_3,CKB1,CKB4,CKB6,CKB8,CKB10,CKB19,CKB21,CKB23,CKB33;
theorems MEASURE1,TARSKI,PARTFUN1,FUNCT_1,EXTREAL1,MESFUNC1,NAT_1,XBOOLE_0,XBOOLE_1,XCMPLX_0,XREAL_1,MESFUNC5,XXREAL_0,VALUED_1,MESFUNC6,COMPLEX1,RELAT_1,SQUARE_1,FINSEQ_1,MESFUN6C,ORDINAL1,FUNCT_2,SEQFUNC,SETFAM_1,RINFSUP1,MESFUNC7,MESFUNC8,COMSEQ_3,MESFUNC3,NUMBERS,RINFSUP2,XXREAL_2,COMPLSP2,NAT_D,FINSEQ_2,NAT_2,FINSEQ_3,RELSET_1,XXREAL_3,CKB1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33;
schemes FUNCT_2,PARTFUN2,FINSEQ_1;
registrations NAT_1,MESFUNC8,SUBSET_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,VALUED_0,XCMPLX_0,PARTFUN1,FUNCT_2,RELAT_1,SEQ_2,COMSEQ_3,RELSET_1,FINSEQ_1,CKB3,CKB13;
constructors REAL_1,NAT_1,SQUARE_1,MEASURE6,EXTREAL1,MESFUNC2,MESFUNC3,MESFUNC5,SEQ_1,MESFUNC6,MESFUN6C,BINOP_2,RINFSUP1,MESFUNC8,COMSEQ_2,COMSEQ_3,SUPINF_1,RINFSUP2,SEQFUNC,SEQ_2,MESFUNC1,FINSEQ_1,COMPLSP2,MATRIX_5,NAT_D,RELSET_1,SEQ_4,CKB1,CKB4,CKB6,CKB8,CKB10,CKB19,CKB21,CKB23,CKB33;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
definition
let X being non empty set;
let f being (Functional_Sequence of X,( COMPLEX ));
func lim f -> (PartFunc of X,( COMPLEX ))
means
:Def10: (( dom it ) = ( dom ( f . ( 0 ) ) ) & (for x being (Element of X) holds (x in ( dom it ) implies ( it . x ) = ( lim ( f # x ) ))));
existence
proof
defpred P[ set ]
 means
$1 in ( dom ( f . ( 0 ) ) );
deffunc F((Element of X)) = ( lim ( f # $1 ) );
consider g being (PartFunc of X,( COMPLEX )) such that A1: ((for x being (Element of X) holds (x in ( dom g ) iff P[ x ])) & (for x being (Element of X) holds (x in ( dom g ) implies ( g /. x ) = F(x)))) from PARTFUN2:sch 2;
take g;
A2:now
let x being (Element of X);
assume A3: x in ( dom g );
then ( g /. x ) = ( lim ( f # x ) ) by A1;
hence ( g . x ) = ( lim ( f # x ) ) by A3,PARTFUN1:def 6;
end;
(for x being set holds (x in ( dom g ) iff x in ( dom ( f . ( 0 ) ) ))) by A1;
hence thesis by A2,TARSKI:1;
end;
uniqueness
proof
let g being (PartFunc of X,( COMPLEX )),h being (PartFunc of X,( COMPLEX ));
assume that
A4: ( dom g ) = ( dom ( f . ( 0 ) ) )
and
A5: (for x being (Element of X) holds (x in ( dom g ) implies ( g . x ) = ( lim ( f # x ) )));
assume that
A6: ( dom h ) = ( dom ( f . ( 0 ) ) )
and
A7: (for x being (Element of X) holds (x in ( dom h ) implies ( h . x ) = ( lim ( f # x ) )));
now
let x being (Element of X);
assume A8: x in ( dom g );
then ( g . x ) = ( lim ( f # x ) ) by A5;
hence ( g . x ) = ( h . x ) by A4,A6,A7,A8;
end;
hence thesis by A4,A6,PARTFUN1:5;
end;
end;
