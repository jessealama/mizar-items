environ
vocabularies ALTCAT_1,XBOOLE_0,CAT_1,RELAT_1,ALTCAT_3,CAT_3,RELAT_2,FUNCTOR0,FUNCT_1,FUNCT_2,ZFMISC_1,STRUCT_0,PBOOLE,MSUALG_3,MSUALG_6,ALTCAT_2,REALSET1,TARSKI,ALTCAT_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,MULTOP_1,PBOOLE,REALSET1,STRUCT_0,MSUALG_3,ALTCAT_1,ALTCAT_2,ALTCAT_3,FUNCTOR0;
definitions ALTCAT_1,ALTCAT_3,FUNCTOR0,MSUALG_3,STRUCT_0,TARSKI,FUNCT_2,XBOOLE_0,PBOOLE,BINOP_1,REALSET1,ALTCAT_2;
theorems ALTCAT_1,ALTCAT_2,ALTCAT_3,FUNCT_1,FUNCT_2,FUNCTOR0,MCART_1,MULTOP_1,FUNCTOR1,FUNCTOR2,MSUALG_3,PBOOLE,RELAT_1,ZFMISC_1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB2,CKB3,CKB4,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
schemes PBOOLE,XBOOLE_0;
registrations SUBSET_1,RELSET_1,FUNCOP_1,STRUCT_0,FUNCT_1,RELAT_1,ALTCAT_1,ALTCAT_2,FUNCTOR0,FUNCTOR2,PBOOLE,CKB1,CKB6,CKB7;
constructors REALSET1,MSUALG_3,FUNCTOR0,ALTCAT_3,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve C for category;
reserve o1 for (object of C);
reserve o2 for (object of C);
theorem
Th14: (for C1,C2 being non  empty AltCatStr holds (for F being  Contravariant FunctorStr over C1,C2 holds (F is  full iff (for o1,o2 being (object of C1) holds ( Morph-Map (F,o2,o1) ) is  onto))))
proof
let C1 being non  empty AltCatStr;
let C2 being non  empty AltCatStr;
let F being  Contravariant FunctorStr over C1,C2;
set I = [: (the carrier of C1),(the carrier of C1) :];
hereby
assume A1: F is  full;
let o1 being (object of C1);
let o2 being (object of C1);
thus ( Morph-Map (F,o2,o1) ) is  onto
proof
A2: [ o2,o1 ] in I by ZFMISC_1:87;
then A3: [ o2,o1 ] in ( dom (the ObjectMap of F) ) by FUNCT_2:def 1;
consider f being (ManySortedFunction of (the Arrows of C1),( (the Arrows of C2) * (the ObjectMap of F) )) such that A4: f = (the MorphMap of F) and A5: f is  "onto" by A1,FUNCTOR0:def 32;
( rng ( f . [ o2,o1 ] ) ) = ( ( (the Arrows of C2) * (the ObjectMap of F) ) . [ o2,o1 ] ) by A5,A2,MSUALG_3:def 3;
hence ( rng ( Morph-Map (F,o2,o1) ) ) = ( (the Arrows of C2) . ( (the ObjectMap of F) . (o2,o1) ) ) by A4,A3,FUNCT_1:13
.= <^ ( F . o1 ),( F . o2 ) ^> by FUNCTOR0:23;
end;

end;
assume A6: (for o1,o2 being (object of C1) holds ( Morph-Map (F,o2,o1) ) is  onto);
(ex I29 being non  empty set st (ex B9 being (ManySortedSet of I29) st (ex f9 being (Function of I,I29) st (((the ObjectMap of F) = f9 & (the Arrows of C2) = B9) & (the MorphMap of F) is (ManySortedFunction of (the Arrows of C1),( B9 * f9 )))))) by FUNCTOR0:def 3;
then reconsider f = (the MorphMap of F) as (ManySortedFunction of (the Arrows of C1),( (the Arrows of C2) * (the ObjectMap of F) ));
take f;
thus f = (the MorphMap of F);
let i being set;
assume i in I;
then consider o2,o1 being set such that A7: (o2 in (the carrier of C1) & o1 in (the carrier of C1)) and A8: i = [ o2,o1 ] by ZFMISC_1:84;
reconsider o1,o2 as (object of C1) by A7;
[ o2,o1 ] in I by ZFMISC_1:87;
then A9: [ o2,o1 ] in ( dom (the ObjectMap of F) ) by FUNCT_2:def 1;
( Morph-Map (F,o2,o1) ) is  onto by A6;
then ( rng ( Morph-Map (F,o2,o1) ) ) = ( (the Arrows of C2) . (( F . o1 ),( F . o2 )) ) by FUNCT_2:def 3
.= ( (the Arrows of C2) . ( (the ObjectMap of F) . (o2,o1) ) ) by FUNCTOR0:23
.= ( ( (the Arrows of C2) * (the ObjectMap of F) ) . [ o2,o1 ] ) by A9,FUNCT_1:13;
hence thesis by A8;
end;
