environ
vocabularies ALTCAT_1,XBOOLE_0,CAT_1,RELAT_1,ALTCAT_3,CAT_3,RELAT_2,FUNCTOR0,FUNCT_1,FUNCT_2,ZFMISC_1,STRUCT_0,PBOOLE,MSUALG_3,MSUALG_6,ALTCAT_2,REALSET1,TARSKI,ALTCAT_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,MULTOP_1,PBOOLE,REALSET1,STRUCT_0,MSUALG_3,ALTCAT_1,ALTCAT_2,ALTCAT_3,FUNCTOR0;
definitions ALTCAT_1,ALTCAT_3,FUNCTOR0,MSUALG_3,STRUCT_0,TARSKI,FUNCT_2,XBOOLE_0,PBOOLE,BINOP_1,REALSET1,ALTCAT_2;
theorems ALTCAT_1,ALTCAT_2,ALTCAT_3,FUNCT_1,FUNCT_2,FUNCTOR0,MCART_1,MULTOP_1,FUNCTOR1,FUNCTOR2,MSUALG_3,PBOOLE,RELAT_1,ZFMISC_1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB2,CKB3,CKB4,CKB5,CKB8,CKB9,CKB10;
schemes PBOOLE,XBOOLE_0;
registrations SUBSET_1,RELSET_1,FUNCOP_1,STRUCT_0,FUNCT_1,RELAT_1,ALTCAT_1,ALTCAT_2,FUNCTOR0,FUNCTOR2,PBOOLE,CKB1,CKB6,CKB7;
constructors REALSET1,MSUALG_3,FUNCTOR0,ALTCAT_3,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve C for category;
theorem
(for C being non  empty AltCatStr holds (for O,A being (object of C) holds (for M being (Morphism of O,A) holds (O is  terminal implies M is  mono))))
proof
let C being non  empty AltCatStr;
let O being (object of C);
let A being (object of C);
let M being (Morphism of O,A);
assume that
A1: O is  terminal;
let o being (object of C);
assume that
A2: <^ o,O ^> <> ( {} );
let a being (Morphism of o,O);
let b being (Morphism of o,O);
assume that
( M * a ) = ( M * b );
consider N being (Morphism of o,O) such that N in <^ o,O ^> and A3: (for M1 being (Morphism of o,O) holds (M1 in <^ o,O ^> implies N = M1)) by A1,ALTCAT_3:27;
thus a = N by A2,A3
.= b by A2,A3;
end;
