environ
vocabularies ALTCAT_1,XBOOLE_0,CAT_1,RELAT_1,ALTCAT_3,CAT_3,RELAT_2,FUNCTOR0,FUNCT_1,FUNCT_2,ZFMISC_1,STRUCT_0,PBOOLE,MSUALG_3,MSUALG_6,ALTCAT_2,REALSET1,TARSKI,ALTCAT_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,MULTOP_1,PBOOLE,REALSET1,STRUCT_0,MSUALG_3,ALTCAT_1,ALTCAT_2,ALTCAT_3,FUNCTOR0;
definitions ALTCAT_1,ALTCAT_3,FUNCTOR0,MSUALG_3,STRUCT_0,TARSKI,FUNCT_2,XBOOLE_0,PBOOLE,BINOP_1,REALSET1,ALTCAT_2;
theorems ALTCAT_1,ALTCAT_2,ALTCAT_3,FUNCT_1,FUNCT_2,FUNCTOR0,MCART_1,MULTOP_1,FUNCTOR1,FUNCTOR2,MSUALG_3,PBOOLE,RELAT_1,ZFMISC_1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB2,CKB3,CKB4;
schemes PBOOLE,XBOOLE_0;
registrations SUBSET_1,RELSET_1,FUNCOP_1,STRUCT_0,FUNCT_1,RELAT_1,ALTCAT_1,ALTCAT_2,FUNCTOR0,FUNCTOR2,PBOOLE,CKB1;
constructors REALSET1,MSUALG_3,FUNCTOR0,ALTCAT_3,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve C for category;
reserve o1 for (object of C);
theorem
Th4: (for C being  with_units non  empty AltCatStr holds (for o being (object of C) holds ( idm o ) is  epi  mono))
proof
let C being  with_units non  empty AltCatStr;
let o being (object of C);
thus ( idm o ) is  epi
proof
let o1 being (object of C);
assume that
A1: <^ o,o1 ^> <> ( {} );
let B being (Morphism of o,o1);
let C being (Morphism of o,o1);
assume that
A2: ( B * ( idm o ) ) = ( C * ( idm o ) );
thus B = ( B * ( idm o ) ) by A1,ALTCAT_1:def 17
.= C by A1,A2,ALTCAT_1:def 17;
end;

let o1 being (object of C);
assume that
A3: <^ o1,o ^> <> ( {} );
let B being (Morphism of o1,o);
let C being (Morphism of o1,o);
assume that
A4: ( ( idm o ) * B ) = ( ( idm o ) * C );
thus B = ( ( idm o ) * B ) by A3,ALTCAT_1:20
.= C by A3,A4,ALTCAT_1:20;
end;
