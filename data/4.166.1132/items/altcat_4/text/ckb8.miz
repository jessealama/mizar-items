environ
vocabularies ALTCAT_1,XBOOLE_0,CAT_1,RELAT_1,ALTCAT_3,CAT_3,RELAT_2,FUNCTOR0,FUNCT_1,FUNCT_2,ZFMISC_1,STRUCT_0,PBOOLE,MSUALG_3,MSUALG_6,ALTCAT_2,REALSET1,TARSKI,ALTCAT_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,MULTOP_1,PBOOLE,REALSET1,STRUCT_0,MSUALG_3,ALTCAT_1,ALTCAT_2,ALTCAT_3,FUNCTOR0;
definitions ALTCAT_1,ALTCAT_3,FUNCTOR0,MSUALG_3,STRUCT_0,TARSKI,FUNCT_2,XBOOLE_0,PBOOLE,BINOP_1,REALSET1,ALTCAT_2;
theorems ALTCAT_1,ALTCAT_2,ALTCAT_3,FUNCT_1,FUNCT_2,FUNCTOR0,MCART_1,MULTOP_1,FUNCTOR1,FUNCTOR2,MSUALG_3,PBOOLE,RELAT_1,ZFMISC_1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB2,CKB3,CKB4,CKB5;
schemes PBOOLE,XBOOLE_0;
registrations SUBSET_1,RELSET_1,FUNCOP_1,STRUCT_0,FUNCT_1,RELAT_1,ALTCAT_1,ALTCAT_2,FUNCTOR0,FUNCTOR2,PBOOLE,CKB1,CKB6,CKB7;
constructors REALSET1,MSUALG_3,FUNCTOR0,ALTCAT_3,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve C for category;
reserve o1 for (object of C);
reserve o2 for (object of C);
theorem
(for f being (Morphism of o1,o2) holds (for g,h being (Morphism of o2,o1) holds ((((( h * f ) = ( idm o1 ) & ( f * g ) = ( idm o2 )) & <^ o1,o2 ^> <> ( {} )) & <^ o2,o1 ^> <> ( {} )) implies g = h)))
proof
let f being (Morphism of o1,o2);
let g being (Morphism of o2,o1);
let h being (Morphism of o2,o1);
assume that
A1: ( h * f ) = ( idm o1 )
and
A2: (( f * g ) = ( idm o2 ) & <^ o1,o2 ^> <> ( {} ))
and
A3: <^ o2,o1 ^> <> ( {} );
thus g = ( ( h * f ) * g ) by A1,A3,ALTCAT_1:20
.= ( h * ( idm o2 ) ) by A2,A3,ALTCAT_1:21
.= h by A3,ALTCAT_1:def 17;
end;
