environ
vocabularies ALTCAT_1,XBOOLE_0,CAT_1,RELAT_1,ALTCAT_3,CAT_3,RELAT_2,FUNCTOR0,FUNCT_1,FUNCT_2,ZFMISC_1,STRUCT_0,PBOOLE,MSUALG_3,MSUALG_6,ALTCAT_2,REALSET1,TARSKI,ALTCAT_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,MULTOP_1,PBOOLE,REALSET1,STRUCT_0,MSUALG_3,ALTCAT_1,ALTCAT_2,ALTCAT_3,FUNCTOR0;
definitions ALTCAT_1,ALTCAT_3,FUNCTOR0,MSUALG_3,STRUCT_0,TARSKI,FUNCT_2,XBOOLE_0,PBOOLE,BINOP_1,REALSET1,ALTCAT_2;
theorems ALTCAT_1,ALTCAT_2,ALTCAT_3,FUNCT_1,FUNCT_2,FUNCTOR0,MCART_1,MULTOP_1,FUNCTOR1,FUNCTOR2,MSUALG_3,PBOOLE,RELAT_1,ZFMISC_1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB2,CKB3,CKB4,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15;
schemes PBOOLE,XBOOLE_0;
registrations SUBSET_1,RELSET_1,FUNCOP_1,STRUCT_0,FUNCT_1,RELAT_1,ALTCAT_1,ALTCAT_2,FUNCTOR0,FUNCTOR2,PBOOLE,CKB1,CKB6,CKB7;
constructors REALSET1,MSUALG_3,FUNCTOR0,ALTCAT_3,RELSET_1;
requirements SUBSET,BOOLE;
begin
theorem
Th13: (for A,B being  transitive  with_units non  empty AltCatStr holds (for F being  contravariant (Functor of A,B) holds (for a being (object of A) holds ( F . ( idm a ) ) = ( idm ( F . a ) ))))
proof
let A being  transitive  with_units non  empty AltCatStr;
let B being  transitive  with_units non  empty AltCatStr;
let F being  contravariant (Functor of A,B);
let a being (object of A);
thus ( F . ( idm a ) ) = ( ( Morph-Map (F,a,a) ) . ( idm a ) ) by FUNCTOR0:def 16
.= ( idm ( F . a ) ) by FUNCTOR0:def 20;
end;
