environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_1,INT_1,RELAT_1,FUNCT_1,ORDINAL4,XBOOLE_0,XXREAL_0,PARTFUN1,GRAPH_1,STRUCT_0,TREES_2,GLIB_000,GRAPH_5,CARD_3,GRAPH_4,NAT_1,ARYTM_3,TARSKI,CARD_1,FINSET_1,FUNCT_4,REAL_1,FUNCT_2,ARYTM_1,GRAPHSP;
notations XCMPLX_0,XXREAL_0,REAL_1,INT_1,TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FINSEQ_1,SEQ_1,FINSEQ_2,FINSEQ_4,CARD_1,FINSET_1,STRUCT_0,GRAPH_1,PARTFUN1,FUNCT_2,CQC_SIM1,GRAPH_4,GRAPH_5,NAT_D,DOMAIN_1,RVSUM_1,NUMBERS,FUNCT_7,NAT_1;
definitions TARSKI,RVSUM_1;
theorems FUNCT_2,FUNCT_1,PARTFUN1,FINSEQ_1,NAT_1,ZFMISC_1,TARSKI,FINSEQ_3,XBOOLE_0,XBOOLE_1,SUBSET_1,GRAPH_1,FINSEQ_4,CARD_2,INT_1,GRAPH_5,GRAPH_4,FINSEQ_2,ENUMSET1,FUNCT_7,XREAL_1,XXREAL_0,FINSOP_1,ORDINAL1,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7;
schemes NAT_1,GRAPH_5,CLASSES1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,GRAPH_1,GRAPH_4,GRAPH_5,VALUED_0,CARD_1,FUNCT_1;
constructors DOMAIN_1,XXREAL_0,REAL_1,FINSEQ_4,FINSOP_1,NAT_D,FUNCT_7,CQC_SIM1,GRAPH_4,GRAPH_5,SEQ_1,BINOP_2,RVSUM_1,RELSET_1;
requirements NUMERALS,SUBSET,BOOLE,REAL,ARITHM;
begin
reserve m for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve G for Graph;
reserve pe for (FinSequence of (the carrier' of G));
reserve qe for (FinSequence of (the carrier' of G));
theorem
Th6: (for p being  Simple  oriented (Chain of G) holds (((p = ( pe ^ qe ) & ( len pe ) >= 1) & ( len qe ) >= 1) implies (( (the Target of G) . ( p . ( len p ) ) ) <> ( (the Target of G) . ( pe . ( len pe ) ) ) & ( (the Source of G) . ( p . 1 ) ) <> ( (the Source of G) . ( qe . 1 ) ))))
proof
let p being  Simple  oriented (Chain of G);
set FT = (the Target of G);
set FS = (the Source of G);
assume that
A1: p = ( pe ^ qe )
and
A2: ( len pe ) >= 1
and
A3: ( len qe ) >= 1;
consider vs being (FinSequence of (the carrier of G)) such that A4: vs is_oriented_vertex_seq_of p and A5: (for n holds (for m holds ((((1 <= n & n < m) & m <= ( len vs )) & ( vs . n ) = ( vs . m )) implies (n = 1 & m = ( len vs ))))) by GRAPH_4:def 7;
A6: ( len vs ) = ( ( len p ) + 1 ) by A4,GRAPH_4:def 5;
then A7: 1 <= ( len vs ) by NAT_1:12;
( len p ) = ( ( len pe ) + ( len qe ) ) by A1,FINSEQ_1:22;
then A8: ( len p ) >= ( ( len pe ) + 1 ) by A3,XREAL_1:7;
then A9: ( ( len pe ) + 1 ) < ( len vs ) by A6,NAT_1:13;
A10: ( len p ) > ( len pe ) by A8,NAT_1:13;
then A11: ( len p ) >= 1 by A2,XXREAL_0:2;
then ( p . 1 ) orientedly_joins ( vs /. 1 ),( vs /. ( 1 + 1 ) ) by A4,GRAPH_4:def 5;
then A12: ( FS . ( p . 1 ) ) = ( vs /. 1 ) by GRAPH_4:def 1
.= ( vs . 1 ) by A7,FINSEQ_4:15;
A13: ( p . ( len pe ) ) orientedly_joins ( vs /. ( len pe ) ),( vs /. ( ( len pe ) + 1 ) ) by A2,A4,A10,GRAPH_4:def 5;
( p . ( len p ) ) orientedly_joins ( vs /. ( len p ) ),( vs /. ( ( len p ) + 1 ) ) by A4,A11,GRAPH_4:def 5;
then A14: ( FT . ( p . ( len p ) ) ) = ( vs /. ( ( len p ) + 1 ) ) by GRAPH_4:def 1
.= ( vs . ( len vs ) ) by A6,A7,FINSEQ_4:15;
A15: 1 < ( ( len pe ) + 1 ) by A2,NAT_1:13;
then A16: ( p . ( ( len pe ) + 1 ) ) orientedly_joins ( vs /. ( ( len pe ) + 1 ) ),( vs /. ( ( ( len pe ) + 1 ) + 1 ) ) by A4,A8,GRAPH_4:def 5;
( FT . ( pe . ( len pe ) ) ) = ( FT . ( p . ( len pe ) ) ) by A1,A2,CKB6:1
.= ( vs /. ( ( len pe ) + 1 ) ) by A13,GRAPH_4:def 1
.= ( vs . ( ( len pe ) + 1 ) ) by A15,A9,FINSEQ_4:15;
hence ( FT . ( p . ( len p ) ) ) <> ( FT . ( pe . ( len pe ) ) ) by A5,A14,A15,A9;
assume A17: ( FS . ( p . 1 ) ) = ( FS . ( qe . 1 ) );
( FS . ( qe . 1 ) ) = ( FS . ( p . ( ( len pe ) + 1 ) ) ) by A1,A3,CKB7:1
.= ( vs /. ( ( len pe ) + 1 ) ) by A16,GRAPH_4:def 1
.= ( vs . ( ( len pe ) + 1 ) ) by A15,A9,FINSEQ_4:15;
hence contradiction by A5,A15,A9,A12,A17;
end;
