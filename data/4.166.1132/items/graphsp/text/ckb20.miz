environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_1,INT_1,RELAT_1,FUNCT_1,ORDINAL4,XBOOLE_0,XXREAL_0,PARTFUN1,GRAPH_1,STRUCT_0,TREES_2,GLIB_000,GRAPH_5,CARD_3,GRAPH_4,NAT_1,ARYTM_3,TARSKI,CARD_1,FINSET_1,FUNCT_4,REAL_1,FUNCT_2,ARYTM_1,GRAPHSP;
notations XCMPLX_0,XXREAL_0,REAL_1,INT_1,TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FINSEQ_1,SEQ_1,FINSEQ_2,FINSEQ_4,CARD_1,FINSET_1,STRUCT_0,GRAPH_1,PARTFUN1,FUNCT_2,CQC_SIM1,GRAPH_4,GRAPH_5,NAT_D,DOMAIN_1,RVSUM_1,NUMBERS,FUNCT_7,NAT_1;
definitions TARSKI,RVSUM_1;
theorems FUNCT_2,FUNCT_1,PARTFUN1,FINSEQ_1,NAT_1,ZFMISC_1,TARSKI,FINSEQ_3,XBOOLE_0,XBOOLE_1,SUBSET_1,GRAPH_1,FINSEQ_4,CARD_2,INT_1,GRAPH_5,GRAPH_4,FINSEQ_2,ENUMSET1,FUNCT_7,XREAL_1,XXREAL_0,FINSOP_1,ORDINAL1,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes NAT_1,GRAPH_5,CLASSES1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,GRAPH_1,GRAPH_4,GRAPH_5,VALUED_0,CARD_1,FUNCT_1;
constructors DOMAIN_1,XXREAL_0,REAL_1,FINSEQ_4,FINSOP_1,NAT_D,FUNCT_7,CQC_SIM1,GRAPH_4,GRAPH_5,SEQ_1,BINOP_2,RVSUM_1,RELSET_1;
requirements NUMERALS,SUBSET,BOOLE,REAL,ARITHM;
begin
reserve U for set;
reserve V for set;
reserve e for set;
reserve G for  finite  oriented Graph;
reserve P for  oriented (Chain of G);
reserve Q for  oriented (Chain of G);
reserve W for (Function of (the carrier' of G),( Real>=0 ));
reserve v1 for (Vertex of G);
reserve v2 for (Vertex of G);
reserve v3 for (Vertex of G);
reserve v4 for (Vertex of G);
theorem
Th16: ((((the carrier of G) = ( U \/ V ) & v1 in U) & (for v3 holds (for v4 holds ((v3 in U & v4 in V) implies (not (ex e st (e in (the carrier' of G) & e orientedly_joins v3,v4))))))) implies (P is_shortestpath_of v1,v2,U,W iff P is_shortestpath_of v1,v2,W))
proof
assume A1: (((the carrier of G) = ( U \/ V ) & v1 in U) & (for v3 holds (for v4 holds ((v3 in U & v4 in V) implies (not (ex e st (e in (the carrier' of G) & e orientedly_joins v3,v4)))))));
hereby
assume A2: P is_shortestpath_of v1,v2,U,W;
A3:now
let Q;
assume Q is_orientedpath_of v1,v2;
then Q is_orientedpath_of v1,v2,U by A1,CKB16:1;
hence ( cost (P,W) ) <= ( cost (Q,W) ) by A2,GRAPH_5:def 18;
end;
P is_orientedpath_of v1,v2,U by A2,GRAPH_5:def 18;
then P is_orientedpath_of v1,v2 by GRAPH_5:def 4;
hence P is_shortestpath_of v1,v2,W by A3,GRAPH_5:def 17;
end;
hereby
assume A4: P is_shortestpath_of v1,v2,W;
A5:now
let Q;
assume Q is_orientedpath_of v1,v2,U;
then Q is_orientedpath_of v1,v2 by GRAPH_5:def 4;
hence ( cost (P,W) ) <= ( cost (Q,W) ) by A4,GRAPH_5:def 17;
end;
P is_orientedpath_of v1,v2 by A4,GRAPH_5:def 17;
then P is_orientedpath_of v1,v2,U by A1,CKB16:1;
hence P is_shortestpath_of v1,v2,U,W by A5,GRAPH_5:def 18;
end;
end;
