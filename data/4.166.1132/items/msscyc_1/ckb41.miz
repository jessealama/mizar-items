environ
vocabularies NUMBERS,FINSET_1,FUNCT_1,RELAT_1,CARD_3,FUNCT_2,GRAPH_1,SUBSET_1,TREES_2,FINSEQ_1,STRUCT_0,GRAPH_2,ARYTM_3,XXREAL_0,NAT_1,PARTFUN1,TARSKI,ORDINAL4,XBOOLE_0,CARD_1,WAYBEL_0,GLIB_000,RELAT_2,FUNCOP_1,ARYTM_1,TREES_4,TREES_1,MSUALG_1,PBOOLE,MSATERM,TREES_9,ZFMISC_1,MSAFREE,MSUALG_2,MSAFREE2,MSUALG_3,PRELAMB,REALSET1,GROUP_6,FUNCT_6,MARGREL1,UNIALG_2,DTCONSTR,TDGROUP,TREES_3,TREES_A,MSSCYC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,CARD_1,NUMBERS,NAT_1,FINSEQ_2,STRUCT_0,CARD_3,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,FUNCOP_1,FINSEQ_1,GRAPH_1,GRAPH_2,TREES_1,TREES_2,TREES_3,FUNCT_6,TREES_4,LANG1,DTCONSTR,PBOOLE,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSAFREE2,TREES_9,MSATERM,XXREAL_0,PRE_POLY,CKB2,CKB4,CKB5,CKB27,CKB28,CKB30;
definitions TARSKI,GRAPH_1,GRAPH_2,MSAFREE,PBOOLE,FINSET_1,MSUALG_3,STRUCT_0,CKB2,CKB5,CKB27,CKB30;
theorems TARSKI,NAT_1,ZFMISC_1,FINSET_1,FRAENKEL,GRAPH_1,GRAPH_2,FUNCOP_1,FUNCT_1,FUNCT_2,FUNCT_6,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,CARD_1,CARD_3,TREES_1,TREES_3,TREES_4,PBOOLE,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSAFREE2,MSATERM,EXTENS_1,INT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,RELAT_1,CARD_2,CKB1,CKB2,CKB3,CKB5,CKB7,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB30,CKB38,CKB39,CKB40;
schemes NAT_1,FRAENKEL,PBOOLE,DOMAIN_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,PBOOLE,TREES_2,TREES_3,PRE_CIRC,TREES_9,STRUCT_0,DTCONSTR,MSUALG_1,MSAFREE,MSAFREE2,EXTENS_1,ORDINAL1,CARD_1,GRAPH_1,RELSET_1,TREES_1,MSATERM,CKB6,CKB8,CKB11,CKB18,CKB29,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37;
constructors WELLORD2,XXREAL_0,NAT_1,NAT_D,FINSEQ_4,TREES_9,MSSUBFAM,MSUALG_3,MSATERM,MSAFREE2,GRAPH_2,RELSET_1,PRE_POLY,DOMAIN_1,FINSEQ_2,CKB5,CKB27,CKB30;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
registration
let S being non void non empty ManySortedSign;
let A being  finitely-generated  non-empty MSAlgebra over S;
cluster  non-empty  finite-yielding for (GeneratorSet of A);
existence
proof
consider G being (GeneratorSet of A) such that A1: G is  finite-yielding by MSAFREE2:def 10;
consider B being (ManySortedSet of (the carrier of S)) such that A2: B in (the Sorts of A) by PBOOLE:134;
deffunc F(set) = { ( B . $1 ) };
consider C being (ManySortedSet of (the carrier of S)) such that A3: (for i being set holds (i in (the carrier of S) implies ( C . i ) = F(i))) from PBOOLE:sch 4;
set H = ( G \/ C );
now
let i being set;
assume A4: i in (the carrier of S);
then ( B . i ) in ( (the Sorts of A) . i ) by A2,PBOOLE:def 1;
then { ( B . i ) } c= ( (the Sorts of A) . i ) by ZFMISC_1:31;
hence ( C . i ) c= ( (the Sorts of A) . i ) by A3,A4;
end;
then (G c= (the Sorts of A) & C c= (the Sorts of A)) by PBOOLE:def 2,PBOOLE:def 18;
then A5: (C c= H & ( G \/ C ) c= (the Sorts of A)) by PBOOLE:14,PBOOLE:16;
now
let i being set;
assume i in (the carrier of S);
then ( C . i ) = { ( B . i ) } by A3;
hence ( C . i ) is non empty;
end;
then C is  non-empty by PBOOLE:def 13;
then reconsider H as  non-empty (MSSubset of A) by A5,PBOOLE:131,PBOOLE:def 18;
G c= H by PBOOLE:14;
then reconsider H as (GeneratorSet of A) by CKB40:1;
take H;
thus H is  non-empty;
let i being set;
assume A6: i in (the carrier of S);
then A7: ( C . i ) = { ( B . i ) } by A3;
A8: ( H . i ) = ( ( G . i ) \/ ( C . i ) ) by A6,PBOOLE:def 4;
( G . i ) is  finite by A1,A6,FINSET_1:def 4;
hence thesis by A7,A8;
end;
end;
