environ
vocabularies NUMBERS,FINSET_1,FUNCT_1,RELAT_1,CARD_3,FUNCT_2,GRAPH_1,SUBSET_1,TREES_2,FINSEQ_1,STRUCT_0,GRAPH_2,ARYTM_3,XXREAL_0,NAT_1,PARTFUN1,TARSKI,ORDINAL4,XBOOLE_0,CARD_1,WAYBEL_0,GLIB_000,RELAT_2,FUNCOP_1,ARYTM_1,TREES_4,TREES_1,MSUALG_1,PBOOLE,MSATERM,TREES_9,ZFMISC_1,MSAFREE,MSUALG_2,MSAFREE2,MSUALG_3,PRELAMB,REALSET1,GROUP_6,FUNCT_6,MARGREL1,UNIALG_2,DTCONSTR,TDGROUP,TREES_3,TREES_A,MSSCYC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,CARD_1,NUMBERS,NAT_1,FINSEQ_2,STRUCT_0,CARD_3,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,FUNCOP_1,FINSEQ_1,GRAPH_1,GRAPH_2,TREES_1,TREES_2,TREES_3,FUNCT_6,TREES_4,LANG1,DTCONSTR,PBOOLE,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSAFREE2,TREES_9,MSATERM,XXREAL_0,PRE_POLY,CKB2,CKB4,CKB5;
definitions TARSKI,GRAPH_1,GRAPH_2,MSAFREE,PBOOLE,FINSET_1,MSUALG_3,STRUCT_0,CKB2,CKB5;
theorems TARSKI,NAT_1,ZFMISC_1,FINSET_1,FRAENKEL,GRAPH_1,GRAPH_2,FUNCOP_1,FUNCT_1,FUNCT_2,FUNCT_6,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,CARD_1,CARD_3,TREES_1,TREES_3,TREES_4,PBOOLE,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSAFREE2,MSATERM,EXTENS_1,INT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,RELAT_1,CARD_2,CKB1,CKB2,CKB3,CKB5,CKB7,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes NAT_1,FRAENKEL,PBOOLE,DOMAIN_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,PBOOLE,TREES_2,TREES_3,PRE_CIRC,TREES_9,STRUCT_0,DTCONSTR,MSUALG_1,MSAFREE,MSAFREE2,EXTENS_1,ORDINAL1,CARD_1,GRAPH_1,RELSET_1,TREES_1,MSATERM,CKB6,CKB8,CKB11,CKB18;
constructors WELLORD2,XXREAL_0,NAT_1,NAT_D,FINSEQ_4,TREES_9,MSSUBFAM,MSUALG_3,MSATERM,MSAFREE2,GRAPH_2,RELSET_1,PRE_POLY,DOMAIN_1,FINSEQ_2,CKB5;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve G for non void Graph;
theorem
Th11: (for oc being  directed non empty (Chain of G) holds (for n holds ((1 <= n & n <= ( len oc )) implies (( ( vertex-seq oc ) . n ) = ( (the Source of G) . ( oc . n ) ) & ( ( vertex-seq oc ) . ( n + 1 ) ) = ( (the Target of G) . ( oc . n ) )))))
proof
let oc being  directed non empty (Chain of G);
set vsoc = ( vertex-seq oc );
set S = (the Source of G);
set T = (the Target of G);
defpred P[ (Element of ( NAT )) ]
 means
((1 <= $1 & $1 <= ( len oc )) implies (( vsoc . $1 ) = ( S . ( oc . $1 ) ) & ( vsoc . ( $1 + 1 ) ) = ( T . ( oc . $1 ) )));
A1: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let n;
assume A2: ((1 <= n & n <= ( len oc )) implies (( vsoc . n ) = ( S . ( oc . n ) ) & ( vsoc . ( n + 1 ) ) = ( T . ( oc . n ) )));
A3: vsoc is_vertex_seq_of oc by GRAPH_2:def 10;
assume that
A4: 1 <= ( n + 1 )
and
A5: ( n + 1 ) <= ( len oc );
per cases ;
suppose A6: n = ( 0 );

hence A7: ( vsoc . ( n + 1 ) ) = ( S . ( oc . ( n + 1 ) ) ) by GRAPH_2:def 10;
A8: (( vsoc /. 1 ) = ( vsoc /. ( 1 + 1 ) ) or ( vsoc /. 1 ) <> ( vsoc /. ( 1 + 1 ) ));
1 in ( dom vsoc ) by FINSEQ_5:6;
then A9: ( vsoc /. 1 ) = ( vsoc . 1 ) by PARTFUN1:def 6;
A10: 1 <= ( len oc ) by A4,A5,XXREAL_0:2;
( len vsoc ) = ( ( len oc ) + 1 ) by CKB17:1;
then ( 1 + 1 ) <= ( len vsoc ) by A10,XREAL_1:6;
then ( 1 + 1 ) in ( dom vsoc ) by FINSEQ_3:25;
then A11: ( vsoc /. ( 1 + 1 ) ) = ( vsoc . ( 1 + 1 ) ) by PARTFUN1:def 6;
( oc . 1 ) joins ( vsoc /. 1 ),( vsoc /. ( 1 + 1 ) ) by A3,A10,GRAPH_2:def 6;
hence thesis by A6,A7,A8,A9,A11,GRAPH_1:def 10;
end;
suppose A12: n <> ( 0 );

A13: n < ( len oc ) by A5,NAT_1:13;
1 <= n by A12,NAT_1:14;
hence A14: ( vsoc . ( n + 1 ) ) = ( S . ( oc . ( n + 1 ) ) ) by A2,A13,GRAPH_1:def 13;
A15: (( vsoc /. ( n + 1 ) ) = ( vsoc /. ( ( n + 1 ) + 1 ) ) or ( vsoc /. ( n + 1 ) ) <> ( vsoc /. ( ( n + 1 ) + 1 ) ));
A16: ( len vsoc ) = ( ( len oc ) + 1 ) by CKB17:1;
then (1 <= ( ( n + 1 ) + 1 ) & ( ( n + 1 ) + 1 ) <= ( len vsoc )) by A5,NAT_1:11,XREAL_1:6;
then ( ( n + 1 ) + 1 ) in ( dom vsoc ) by FINSEQ_3:25;
then A17: ( vsoc /. ( ( n + 1 ) + 1 ) ) = ( vsoc . ( ( n + 1 ) + 1 ) ) by PARTFUN1:def 6;
n <= ( n + 1 ) by NAT_1:11;
then n <= ( len oc ) by A5,XXREAL_0:2;
then ( n + 1 ) <= ( len vsoc ) by A16,XREAL_1:6;
then ( n + 1 ) in ( dom vsoc ) by A4,FINSEQ_3:25;
then A18: ( vsoc /. ( n + 1 ) ) = ( vsoc . ( n + 1 ) ) by PARTFUN1:def 6;
( oc . ( n + 1 ) ) joins ( vsoc /. ( n + 1 ) ),( vsoc /. ( ( n + 1 ) + 1 ) ) by A4,A5,A3,GRAPH_2:def 6;
hence thesis by A14,A15,A18,A17,GRAPH_1:def 10;
end;
end;
A19: P[ ( 0 ) ];
thus (for n holds P[ n ]) from NAT_1:sch 1(A19,A1);
end;
