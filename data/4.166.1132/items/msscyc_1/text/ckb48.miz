environ
vocabularies NUMBERS,FINSET_1,FUNCT_1,RELAT_1,CARD_3,FUNCT_2,GRAPH_1,SUBSET_1,TREES_2,FINSEQ_1,STRUCT_0,GRAPH_2,ARYTM_3,XXREAL_0,NAT_1,PARTFUN1,TARSKI,ORDINAL4,XBOOLE_0,CARD_1,WAYBEL_0,GLIB_000,RELAT_2,FUNCOP_1,ARYTM_1,TREES_4,TREES_1,MSUALG_1,PBOOLE,MSATERM,TREES_9,ZFMISC_1,MSAFREE,MSUALG_2,MSAFREE2,MSUALG_3,PRELAMB,REALSET1,GROUP_6,FUNCT_6,MARGREL1,UNIALG_2,DTCONSTR,TDGROUP,TREES_3,TREES_A,MSSCYC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,CARD_1,NUMBERS,NAT_1,FINSEQ_2,STRUCT_0,CARD_3,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,FUNCOP_1,FINSEQ_1,GRAPH_1,GRAPH_2,TREES_1,TREES_2,TREES_3,FUNCT_6,TREES_4,LANG1,DTCONSTR,PBOOLE,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSAFREE2,TREES_9,MSATERM,XXREAL_0,PRE_POLY,CKB2,CKB4,CKB5,CKB27,CKB28,CKB30,CKB46;
definitions TARSKI,GRAPH_1,GRAPH_2,MSAFREE,PBOOLE,FINSET_1,MSUALG_3,STRUCT_0,CKB2,CKB5,CKB27,CKB30,CKB46;
theorems TARSKI,NAT_1,ZFMISC_1,FINSET_1,FRAENKEL,GRAPH_1,GRAPH_2,FUNCOP_1,FUNCT_1,FUNCT_2,FUNCT_6,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,CARD_1,CARD_3,TREES_1,TREES_3,TREES_4,PBOOLE,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSAFREE2,MSATERM,EXTENS_1,INT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,RELAT_1,CARD_2,CKB1,CKB2,CKB3,CKB5,CKB7,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB30,CKB38,CKB39,CKB40,CKB42,CKB43,CKB45,CKB46,CKB47;
schemes NAT_1,FRAENKEL,PBOOLE,DOMAIN_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,PBOOLE,TREES_2,TREES_3,PRE_CIRC,TREES_9,STRUCT_0,DTCONSTR,MSUALG_1,MSAFREE,MSAFREE2,EXTENS_1,ORDINAL1,CARD_1,GRAPH_1,RELSET_1,TREES_1,MSATERM,CKB6,CKB8,CKB11,CKB18,CKB29,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB41,CKB44;
constructors WELLORD2,XXREAL_0,NAT_1,NAT_D,FINSEQ_4,TREES_9,MSSUBFAM,MSUALG_3,MSATERM,MSAFREE2,GRAPH_2,RELSET_1,PRE_POLY,DOMAIN_1,FINSEQ_2,CKB5,CKB27,CKB30,CKB46;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
(for S being non  void non  empty ManySortedSign holds (for X being  non-empty (ManySortedSet of (the carrier of S)) holds (for v being (SortSymbol of S) holds { t where t is (Element of ( (the Sorts of ( FreeMSA X )) . v )): ( depth t ) = ( 0 ) } = ( ( FreeGen (v,X) ) \/ ( Constants (( FreeMSA X ),v) ) ))))
proof
let S being non  void non  empty ManySortedSign;
let X being  non-empty (ManySortedSet of (the carrier of S));
let v being (SortSymbol of S);
set SF = (the Sorts of ( FreeMSA X ));
set d0 = { t where t is (Element of ( SF . v )): ( depth t ) = ( 0 ) };
A1: d0 c= ( ( FreeGen (v,X) ) \/ ( Constants (( FreeMSA X ),v) ) )
proof
let x being set;
assume x in d0;
then consider t being (Element of ( SF . v )) such that A2: x = t and A3: ( depth t ) = ( 0 );
t in ( SF . v );
then t in ( FreeSort (X,v) ) by MSAFREE:def 11;
then consider a being (Element of ( TS ( DTConMSA X ) )) such that A4: t = a and A5: ((ex x being set st (x in ( X . v ) & a = ( root-tree [ x,v ] ))) or (ex o being (OperSymbol of S) st ([ o,(the carrier of S) ] = ( a . ( {} ) ) & ( the_result_sort_of o ) = v)));
consider dt being  finite DecoratedTree,ft being  finite Tree such that A6: dt = t and A7: (ft = ( dom dt ) & ( depth t ) = ( height ft )) by MSAFREE2:def 14;
per cases  by A5;
suppose (ex x being set st (x in ( X . v ) & a = ( root-tree [ x,v ] )));

then t in ( FreeGen (v,X) ) by A4,MSAFREE:def 15;
hence thesis by A2,XBOOLE_0:def 3;
end;
suppose (ex o being (OperSymbol of S) st ([ o,(the carrier of S) ] = ( a . ( {} ) ) & ( the_result_sort_of o ) = v));

then consider o being (OperSymbol of S) such that A8: [ o,(the carrier of S) ] = ( a . ( {} ) ) and A9: ( the_result_sort_of o ) = v;
A10: ( (the ResultSort of S) . o ) = v by A9,MSUALG_1:def 2;
set ars9 = ( <*> ( TS ( DTConMSA X ) ) );
reconsider t9 = t as (Term of S,X) by A4,MSATERM:def 1;
A11: (ex Av being non  empty set st (Av = ( SF . v ) & ( Constants (( FreeMSA X ),v) ) = { a1 where a1 is (Element of Av): (ex o being (OperSymbol of S) st ((( (the Arity of S) . o ) = ( {} ) & ( (the ResultSort of S) . o ) = v) & a1 in ( rng ( Den (o,( FreeMSA X )) ) ))) })) by MSUALG_2:def 3;
consider ars being (ArgumentSeq of ( Sym (o,X) )) such that A12: t9 = ( [ o,(the carrier of S) ] -tree ars ) by A4,A8,MSATERM:10;
dt = ( root-tree ( dt . ( {} ) ) ) by A3,A7,TREES_1:43,TREES_4:5;
then A13: ars = ( {} ) by A6,A12,TREES_4:17;
then ( 0 ) = ( len ars )
.= ( len ( the_arity_of o ) ) by MSATERM:22;
then ( the_arity_of o ) = ( {} );
then A14: ( (the Arity of S) . o ) = ( {} ) by MSUALG_1:def 1;
then ( dom ( Den (o,( FreeMSA X )) ) ) = { ( {} ) } by CKB45:1;
then A15: ( {} ) in ( dom ( Den (o,( FreeMSA X )) ) ) by TARSKI:def 1;
( Sym (o,X) ) ==> ( roots ars ) by MSATERM:21;
then A16: ( ( DenOp (o,X) ) . ars9 ) = t by A12,A13,MSAFREE:def 12;
( Den (o,( FreeMSA X )) ) = ( ( FreeOper X ) . o ) by MSUALG_1:def 6
.= ( DenOp (o,X) ) by MSAFREE:def 13;
then t in ( rng ( Den (o,( FreeMSA X )) ) ) by A16,A15,FUNCT_1:def 3;
then t in ( Constants (( FreeMSA X ),v) ) by A14,A10,A11;
hence thesis by A2,XBOOLE_0:def 3;
end;
end;
A17: ( Constants (( FreeMSA X ),v) ) c= d0
proof
set p = ( <*> ( TS ( DTConMSA X ) ) );
let x being set;
consider Av being non  empty set such that A18: Av = ( (the Sorts of ( FreeMSA X )) . v ) and A19: ( Constants (( FreeMSA X ),v) ) = { a where a is (Element of Av): (ex o being (OperSymbol of S) st ((( (the Arity of S) . o ) = ( {} ) & ( (the ResultSort of S) . o ) = v) & a in ( rng ( Den (o,( FreeMSA X )) ) ))) } by MSUALG_2:def 3;
assume x in ( Constants (( FreeMSA X ),v) );
then consider a being (Element of Av) such that A20: x = a and A21: (ex o being (OperSymbol of S) st ((( (the Arity of S) . o ) = ( {} ) & ( (the ResultSort of S) . o ) = v) & a in ( rng ( Den (o,( FreeMSA X )) ) ))) by A19;
consider o being (OperSymbol of S) such that A22: ( (the Arity of S) . o ) = ( {} ) and ( (the ResultSort of S) . o ) = v and A23: a in ( rng ( Den (o,( FreeMSA X )) ) ) by A21;
A24: ( dom ( Den (o,( FreeMSA X )) ) ) = { ( {} ) } by A22,CKB45:1;
( ( ( ( FreeSort X ) # ) * (the Arity of S) ) . o ) = ( Args (o,( FreeMSA X )) ) by MSUALG_1:def 4
.= ( dom ( Den (o,( FreeMSA X )) ) ) by FUNCT_2:def 1;
then p in ( ( ( ( FreeSort X ) # ) * (the Arity of S) ) . o ) by A24,TARSKI:def 1;
then ( Sym (o,X) ) ==> ( roots p ) by MSAFREE:10;
then A25: ( ( DenOp (o,X) ) . p ) = ( ( Sym (o,X) ) -tree p ) by MSAFREE:def 12;
reconsider a as (Element of ( (the Sorts of ( FreeMSA X )) . v )) by A18;
consider d being set such that A26: d in ( dom ( Den (o,( FreeMSA X )) ) ) and A27: a = ( ( Den (o,( FreeMSA X )) ) . d ) by A23,FUNCT_1:def 3;
consider dt being  finite DecoratedTree,t being  finite Tree such that A28: (dt = a & t = ( dom dt )) and A29: ( depth a ) = ( height t ) by MSAFREE2:def 14;
A30: ( Den (o,( FreeMSA X )) ) = ( ( FreeOper X ) . o ) by MSUALG_1:def 6
.= ( DenOp (o,X) ) by MSAFREE:def 13;
d = ( {} ) by A24,A26,TARSKI:def 1;
then a = ( root-tree ( Sym (o,X) ) ) by A27,A30,A25,TREES_4:20;
then ( height t ) = ( 0 ) by A28,TREES_1:42,TREES_4:3;
hence thesis by A20,A29;
end;
( FreeGen (v,X) ) c= d0
proof
let x being set;
assume A31: x in ( FreeGen (v,X) );
then reconsider x9 = x as (Element of ( SF . v ));
consider dt being  finite DecoratedTree,t being  finite Tree such that A32: (dt = x9 & t = ( dom dt )) and A33: ( depth x9 ) = ( height t ) by MSAFREE2:def 14;
(ex a being set st (a in ( X . v ) & x = ( root-tree [ a,v ] ))) by A31,MSAFREE:def 15;
then ( height t ) = ( 0 ) by A32,TREES_1:42,TREES_4:3;
hence thesis by A33;
end;
then ( ( FreeGen (v,X) ) \/ ( Constants (( FreeMSA X ),v) ) ) c= d0 by A17,XBOOLE_1:8;
hence thesis by A1,XBOOLE_0:def 10;
end;
