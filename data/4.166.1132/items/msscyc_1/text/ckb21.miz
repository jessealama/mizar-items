environ
vocabularies NUMBERS,FINSET_1,FUNCT_1,RELAT_1,CARD_3,FUNCT_2,GRAPH_1,SUBSET_1,TREES_2,FINSEQ_1,STRUCT_0,GRAPH_2,ARYTM_3,XXREAL_0,NAT_1,PARTFUN1,TARSKI,ORDINAL4,XBOOLE_0,CARD_1,WAYBEL_0,GLIB_000,RELAT_2,FUNCOP_1,ARYTM_1,TREES_4,TREES_1,MSUALG_1,PBOOLE,MSATERM,TREES_9,ZFMISC_1,MSAFREE,MSUALG_2,MSAFREE2,MSUALG_3,PRELAMB,REALSET1,GROUP_6,FUNCT_6,MARGREL1,UNIALG_2,DTCONSTR,TDGROUP,TREES_3,TREES_A,MSSCYC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,CARD_1,NUMBERS,NAT_1,FINSEQ_2,STRUCT_0,CARD_3,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,FUNCOP_1,FINSEQ_1,GRAPH_1,GRAPH_2,TREES_1,TREES_2,TREES_3,FUNCT_6,TREES_4,LANG1,DTCONSTR,PBOOLE,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSAFREE2,TREES_9,MSATERM,XXREAL_0,PRE_POLY,CKB2,CKB4,CKB5;
definitions TARSKI,GRAPH_1,GRAPH_2,MSAFREE,PBOOLE,FINSET_1,MSUALG_3,STRUCT_0,CKB2,CKB5;
theorems TARSKI,NAT_1,ZFMISC_1,FINSET_1,FRAENKEL,GRAPH_1,GRAPH_2,FUNCOP_1,FUNCT_1,FUNCT_2,FUNCT_6,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,CARD_1,CARD_3,TREES_1,TREES_3,TREES_4,PBOOLE,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSAFREE2,MSATERM,EXTENS_1,INT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,RELAT_1,CARD_2,CKB1,CKB2,CKB3,CKB5,CKB7,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20;
schemes NAT_1,FRAENKEL,PBOOLE,DOMAIN_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,PBOOLE,TREES_2,TREES_3,PRE_CIRC,TREES_9,STRUCT_0,DTCONSTR,MSUALG_1,MSAFREE,MSAFREE2,EXTENS_1,ORDINAL1,CARD_1,GRAPH_1,RELSET_1,TREES_1,MSATERM,CKB6,CKB8,CKB11,CKB18;
constructors WELLORD2,XXREAL_0,NAT_1,NAT_D,FINSEQ_4,TREES_9,MSSUBFAM,MSUALG_3,MSATERM,MSAFREE2,GRAPH_2,RELSET_1,PRE_POLY,DOMAIN_1,FINSEQ_2,CKB5;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve m for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve G for non void Graph;
theorem
(for c,c1 being  directed (Chain of G) holds ((((1 <= m & m <= n) & n <= ( len c )) & c1 = ( (m,n) -cut c )) implies ( vertex-seq c1 ) = ( (m,( n + 1 )) -cut ( vertex-seq c ) )))
proof
let c being  directed (Chain of G),c1 being  directed (Chain of G);
assume that
A1: 1 <= m
and
A2: m <= n
and
A3: n <= ( len c )
and
A4: c1 = ( (m,n) -cut c );
set mn1c = ( (m,( n + 1 )) -cut ( vertex-seq c ) );
A5: c is non empty by A1,A2,A3;
then A6: ( vertex-seq c ) is_vertex_seq_of c by GRAPH_2:def 10;
then A7: mn1c is_vertex_seq_of c1 by A1,A2,A3,A4,GRAPH_2:42;
set vsc = ( vertex-seq c );
A8: m <= ( n + 1 ) by A2,NAT_1:12;
A9: ( len vsc ) = ( ( len c ) + 1 ) by A6,GRAPH_2:def 6;
then A10: ( n + 1 ) <= ( len vsc ) by A3,XREAL_1:6;
A11: c1 is non empty by A1,A2,A3,A4,A5,CKB20:1;
then ( 0 ) < ( len c1 );
then A12: ( c1 . ( ( 0 ) + 1 ) ) = ( c . ( m + ( 0 ) ) ) by A1,A2,A3,A4,GRAPH_2:def 1;
A13: m <= ( n + 1 ) by A2,NAT_1:12;
vsc is non empty by A9;
then mn1c is non empty by A1,A8,A10,CKB20:1;
then ( 0 ) < ( len mn1c );
then A14: ( vsc . ( m + ( 0 ) ) ) = ( mn1c . ( ( 0 ) + 1 ) ) by A1,A10,A13,GRAPH_2:def 1;
m <= ( len c ) by A2,A3,XXREAL_0:2;
then ( mn1c . 1 ) = ( (the Source of G) . ( c1 . 1 ) ) by A1,A5,A12,A14,CKB19:1;
hence thesis by A7,A11,GRAPH_2:def 10;
end;
