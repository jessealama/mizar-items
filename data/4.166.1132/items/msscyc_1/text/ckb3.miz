environ
vocabularies NUMBERS,FINSET_1,FUNCT_1,RELAT_1,CARD_3,FUNCT_2,GRAPH_1,SUBSET_1,TREES_2,FINSEQ_1,STRUCT_0,GRAPH_2,ARYTM_3,XXREAL_0,NAT_1,PARTFUN1,TARSKI,ORDINAL4,XBOOLE_0,CARD_1,WAYBEL_0,GLIB_000,RELAT_2,FUNCOP_1,ARYTM_1,TREES_4,TREES_1,MSUALG_1,PBOOLE,MSATERM,TREES_9,ZFMISC_1,MSAFREE,MSUALG_2,MSAFREE2,MSUALG_3,PRELAMB,REALSET1,GROUP_6,FUNCT_6,MARGREL1,UNIALG_2,DTCONSTR,TDGROUP,TREES_3,TREES_A,MSSCYC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,CARD_1,NUMBERS,NAT_1,FINSEQ_2,STRUCT_0,CARD_3,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,FUNCOP_1,FINSEQ_1,GRAPH_1,GRAPH_2,TREES_1,TREES_2,TREES_3,FUNCT_6,TREES_4,LANG1,DTCONSTR,PBOOLE,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSAFREE2,TREES_9,MSATERM,XXREAL_0,PRE_POLY,CKB2;
definitions TARSKI,GRAPH_1,GRAPH_2,MSAFREE,PBOOLE,FINSET_1,MSUALG_3,STRUCT_0,CKB2;
theorems TARSKI,NAT_1,ZFMISC_1,FINSET_1,FRAENKEL,GRAPH_1,GRAPH_2,FUNCOP_1,FUNCT_1,FUNCT_2,FUNCT_6,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,CARD_1,CARD_3,TREES_1,TREES_3,TREES_4,PBOOLE,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSAFREE2,MSATERM,EXTENS_1,INT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,RELAT_1,CARD_2,CKB1,CKB2;
schemes NAT_1,FRAENKEL,PBOOLE,DOMAIN_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,PBOOLE,TREES_2,TREES_3,PRE_CIRC,TREES_9,STRUCT_0,DTCONSTR,MSUALG_1,MSAFREE,MSAFREE2,EXTENS_1,ORDINAL1,CARD_1,GRAPH_1,RELSET_1,TREES_1,MSATERM;
constructors WELLORD2,XXREAL_0,NAT_1,NAT_D,FINSEQ_4,TREES_9,MSSUBFAM,MSUALG_3,MSATERM,MSAFREE2,GRAPH_2,RELSET_1,PRE_POLY,DOMAIN_1,FINSEQ_2;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
theorem
(for p,q being FinSequence holds (n <= ( len p ) implies ( (1,n) -cut p ) = ( (1,n) -cut ( p ^ q ) )))
proof
let p being FinSequence;
let q being FinSequence;
assume A1: n <= ( len p );
per cases ;
suppose A2: n < 1;

then ( (1,n) -cut p ) = ( {} ) by GRAPH_2:def 1;
hence thesis by A2,GRAPH_2:def 1;
end;
suppose A3: 1 <= n;

set cp = ( (1,n) -cut p );
set cpq = ( (1,n) -cut ( p ^ q ) );
now
A4: ( ( len cp ) + 1 ) = ( n + 1 ) by A1,A3,GRAPH_2:def 1;
( len ( p ^ q ) ) = ( ( len p ) + ( len q ) ) by FINSEQ_1:22;
then A5: n <= ( len ( p ^ q ) ) by A1,NAT_1:12;
then A6: ( ( len cpq ) + 1 ) = ( n + 1 ) by A3,GRAPH_2:def 1;
hence ( len cp ) = ( len cpq ) by A4;
let k being Nat;
assume that
A7: 1 <= k
and
A8: k <= ( len cp );
k <= ( len p ) by A1,A4,A8,XXREAL_0:2;
then A9: k in ( dom p ) by A7,FINSEQ_3:25;
( ( 0 ) + 1 ) = 1;
then A10: (ex i being (Element of ( NAT )) st ((( 0 ) <= i & i < ( len cp )) & k = ( i + 1 ))) by A7,A8,GRAPH_2:1;
hence ( cp . k ) = ( p . k ) by A1,A3,GRAPH_2:def 1
.= ( ( p ^ q ) . k ) by A9,FINSEQ_1:def 7
.= ( cpq . k ) by A3,A5,A4,A6,A10,GRAPH_2:def 1;
end;
hence thesis by FINSEQ_1:14;
end;
end;
