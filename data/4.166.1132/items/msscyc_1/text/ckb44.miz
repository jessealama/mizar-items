environ
vocabularies NUMBERS,FINSET_1,FUNCT_1,RELAT_1,CARD_3,FUNCT_2,GRAPH_1,SUBSET_1,TREES_2,FINSEQ_1,STRUCT_0,GRAPH_2,ARYTM_3,XXREAL_0,NAT_1,PARTFUN1,TARSKI,ORDINAL4,XBOOLE_0,CARD_1,WAYBEL_0,GLIB_000,RELAT_2,FUNCOP_1,ARYTM_1,TREES_4,TREES_1,MSUALG_1,PBOOLE,MSATERM,TREES_9,ZFMISC_1,MSAFREE,MSUALG_2,MSAFREE2,MSUALG_3,PRELAMB,REALSET1,GROUP_6,FUNCT_6,MARGREL1,UNIALG_2,DTCONSTR,TDGROUP,TREES_3,TREES_A,MSSCYC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,CARD_1,NUMBERS,NAT_1,FINSEQ_2,STRUCT_0,CARD_3,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,FUNCOP_1,FINSEQ_1,GRAPH_1,GRAPH_2,TREES_1,TREES_2,TREES_3,FUNCT_6,TREES_4,LANG1,DTCONSTR,PBOOLE,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSAFREE2,TREES_9,MSATERM,XXREAL_0,PRE_POLY,CKB2,CKB4,CKB5,CKB27,CKB28,CKB30;
definitions TARSKI,GRAPH_1,GRAPH_2,MSAFREE,PBOOLE,FINSET_1,MSUALG_3,STRUCT_0,CKB2,CKB5,CKB27,CKB30;
theorems TARSKI,NAT_1,ZFMISC_1,FINSET_1,FRAENKEL,GRAPH_1,GRAPH_2,FUNCOP_1,FUNCT_1,FUNCT_2,FUNCT_6,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,CARD_1,CARD_3,TREES_1,TREES_3,TREES_4,PBOOLE,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSAFREE2,MSATERM,EXTENS_1,INT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,RELAT_1,CARD_2,CKB1,CKB2,CKB3,CKB5,CKB7,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB30,CKB38,CKB39,CKB40,CKB42,CKB43;
schemes NAT_1,FRAENKEL,PBOOLE,DOMAIN_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,PBOOLE,TREES_2,TREES_3,PRE_CIRC,TREES_9,STRUCT_0,DTCONSTR,MSUALG_1,MSAFREE,MSAFREE2,EXTENS_1,ORDINAL1,CARD_1,GRAPH_1,RELSET_1,TREES_1,MSATERM,CKB6,CKB8,CKB11,CKB18,CKB29,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB41;
constructors WELLORD2,XXREAL_0,NAT_1,NAT_D,FINSEQ_4,TREES_9,MSSUBFAM,MSUALG_3,MSATERM,MSAFREE2,GRAPH_2,RELSET_1,PRE_POLY,DOMAIN_1,FINSEQ_2,CKB5,CKB27,CKB30;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
registration
let S being non  void non  empty ManySortedSign;
let X being  non-empty  finite-yielding (ManySortedSet of (the carrier of S));
let v being (SortSymbol of S);
cluster ( FreeGen (v,X) ) ->  finite;
coherence
proof
A1: ( X . v ),( FreeGen (v,X) ) are_equipotent 
proof
set Z = { [ a,( root-tree [ a,v ] ) ] where a is (Element of ( X . v )): (not contradiction) };
take Z;
hereby
let x being set;
assume that
A2: x in ( X . v );
reconsider y = ( root-tree [ x,v ] ) as set;
take y;
thus y in ( FreeGen (v,X) ) by A2,MSAFREE:def 15;
thus [ x,y ] in Z by A2;
end;
hereby
let y being set;
assume y in ( FreeGen (v,X) );
then consider x being set such that A3: x in ( X . v ) and A4: y = ( root-tree [ x,v ] ) by MSAFREE:def 15;
take x;
thus x in ( X . v ) by A3;
thus [ x,y ] in Z by A3,A4;
end;
let x being set;
let y being set;
let z being set;
let u being set;
assume that
A5: [ x,y ] in Z
and
A6: [ z,u ] in Z;
consider a being (Element of ( X . v )) such that A7: [ x,y ] = [ a,( root-tree [ a,v ] ) ] by A5;
consider b being (Element of ( X . v )) such that A8: [ z,u ] = [ b,( root-tree [ b,v ] ) ] by A6;
A9: z = b by A8,ZFMISC_1:27;
A10: x = a by A7,ZFMISC_1:27;
hence (x = z implies y = u) by A7,A8,A9,ZFMISC_1:27;
A11: y = ( root-tree [ a,v ] ) by A7,ZFMISC_1:27;
A12: u = ( root-tree [ b,v ] ) by A8,ZFMISC_1:27;
assume y = u;
then [ a,v ] = [ b,v ] by A11,A12,TREES_4:4;
hence thesis by A10,A9,ZFMISC_1:27;
end;
( X . v ) is  finite by FINSET_1:def 4;
hence thesis by A1,CARD_1:38;
end;
end;
