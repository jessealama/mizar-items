environ
vocabularies NUMBERS,ORDINAL1,RLVECT_1,ALGSTR_0,VECTSP_1,LATTICES,ZFMISC_1,POLYNOM1,SUBSET_1,STRUCT_0,RELAT_2,BAGORDER,BINOP_1,POLYRED,POLYNOM7,ARYTM_1,ARYTM_3,PRE_POLY,TERMORD,FUNCT_1,BROUWER,RELAT_1,XBOOLE_0,XXREAL_0,SUPINF_2,VALUED_0,XCMPLX_0,CAT_3,ALGSTR_1,IDEAL_1,FINSEQ_1,PARTFUN1,MESFUNC1,CARD_3,TARSKI,CARD_1,ORDERS_2,REWRITE1,MCART_1,INT_1,FUNCT_4,GROUP_1,ORDERS_1,DICKSON,RLVECT_2,FUNCOP_1,PBOOLE,FINSET_1,ORDINAL4,GROEB_1;
notations TARSKI,RELAT_1,XBOOLE_0,RELAT_2,XCMPLX_0,XXREAL_0,RELSET_1,FUNCT_1,PARTFUN1,ORDINAL1,ALGSTR_0,ALGSTR_1,RLVECT_1,FINSET_1,FUNCT_7,DICKSON,CARD_3,CARD_1,SUBSET_1,MCART_1,FINSEQ_1,YELLOW_1,ORDERS_1,PRALG_1,STRUCT_0,POLYNOM7,PBOOLE,FUNCOP_1,ORDERS_2,VFUNCT_1,POLYNOM1,IDEAL_1,REWRITE1,BAGORDER,VECTSP_1,TERMORD,GROUP_1,NUMBERS,NAT_1,PRE_POLY,POLYRED,RECDEF_1,CKB1;
definitions RELAT_2,RELAT_1,STRUCT_0;
theorems TARSKI,RELSET_1,FINSEQ_1,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,RLVECT_1,NAT_1,ALGSTR_1,MCART_1,POLYNOM7,REWRITE1,XBOOLE_0,IDEAL_1,TERMORD,INT_1,FUNCT_1,ORDERS_2,FINSET_1,WELLORD2,XBOOLE_1,CARD_3,DICKSON,FUNCOP_1,PRALG_1,YELLOW_1,FUNCT_7,FUNCT_2,CARD_2,BAGORDER,ORDINAL1,VECTSP_2,POLYRED,RELAT_2,PARTFUN1,ORDERS_1,GROUP_1,XREAL_1,XXREAL_0,VALUED_0,STRUCT_0,PRE_POLY,CKB2;
schemes RELSET_1,NAT_1,CLASSES1;
registrations XBOOLE_0,RELAT_1,ORDINAL1,FINSET_1,XREAL_0,NAT_1,INT_1,CARD_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,YELLOW_1,GCD_1,POLYNOM1,POLYNOM2,POLYNOM4,IDEAL_1,POLYNOM7,DICKSON,TERMORD,POLYRED,VALUED_0,ALGSTR_0,FINSEQ_1,SUBSET_1,PRE_POLY,FUNCOP_1,VFUNCT_1,FUNCT_1,FUNCT_2;
constructors XXREAL_0,REWRITE1,VECTSP_2,PRALG_1,YELLOW_1,IDEAL_1,DICKSON,BAGORDER,TERMORD,POLYRED,RECDEF_1,DOMAIN_1,RELSET_1,PBOOLE,FUNCT_7,VFUNCT_1,CKB1;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
(for n being Ordinal holds (for T being  admissible  connected (TermOrder of n) holds (for L being  add-associative  right_complementable  right_zeroed  commutative  associative  well-unital  distributive  Abelian  almost_left_invertible non  degenerated non  empty doubleLoopStr holds (for f,p,g being (Polynomial of n,L) holds (f reduces_to g,p,T implies (ex m being (Monomial of n,L) st ((g = ( f - ( m *' p ) ) & (not ( HT (( m *' p ),T) ) in ( Support g ))) & ( HT (( m *' p ),T) ) <= ( HT (f,T) ),T)))))))
proof
let n being Ordinal;
let T being  admissible  connected (TermOrder of n);
let L being  add-associative  right_complementable  right_zeroed  commutative  associative  well-unital  distributive  Abelian  almost_left_invertible non  degenerated non  empty doubleLoopStr;
let f being (Polynomial of n,L);
let p being (Polynomial of n,L);
let g being (Polynomial of n,L);
assume f reduces_to g,p,T;
then consider b being (bag of n) such that A1: f reduces_to g,p,b,T by POLYRED:def 6;
b in ( Support f ) by A1,POLYRED:def 5;
then A2: ( f . b ) <> ( 0. L ) by POLYNOM1:def 3;
p <> ( 0_ (n,L) ) by A1,POLYRED:def 5;
then reconsider p as  non-zero (Polynomial of n,L) by POLYNOM7:def 1;
consider s being (bag of n) such that A3: ( s + ( HT (p,T) ) ) = b and A4: g = ( f - ( ( ( f . b ) / ( HC (p,T) ) ) * ( s *' p ) ) ) by A1,POLYRED:def 5;
set m = ( Monom (( ( f . b ) / ( HC (p,T) ) ),s) );
A5: ( ( HC (p,T) ) " ) <> ( 0. L ) by VECTSP_1:25;
( ( f . b ) / ( HC (p,T) ) ) = ( ( f . b ) * ( ( HC (p,T) ) " ) ) by VECTSP_1:def 11;
then A6: ( ( f . b ) / ( HC (p,T) ) ) <> ( 0. L ) by A2,A5,VECTSP_2:def 1;
then A7: ( ( f . b ) / ( HC (p,T) ) ) is non  zero by STRUCT_0:def 12;
( coefficient m ) <> ( 0. L ) by A6,POLYNOM7:9;
then ( HC (m,T) ) <> ( 0. L ) by TERMORD:23;
then m <> ( 0_ (n,L) ) by TERMORD:17;
then reconsider m as  non-zero (Monomial of n,L) by POLYNOM7:def 1;
A8: ( HT (( m *' p ),T) ) = ( ( HT (m,T) ) + ( HT (p,T) ) ) by TERMORD:31
.= ( ( term m ) + ( HT (p,T) ) ) by TERMORD:23
.= ( s + ( HT (p,T) ) ) by A7,POLYNOM7:10;
then ( HT (( m *' p ),T) ) in ( Support f ) by A1,A3,POLYRED:def 5;
then (( ( ( f . b ) / ( HC (p,T) ) ) * ( s *' p ) ) = ( ( Monom (( ( f . b ) / ( HC (p,T) ) ),s) ) *' p ) & ( HT (( m *' p ),T) ) <= ( HT (f,T) ),T) by POLYRED:22,TERMORD:def 6;
hence thesis by A1,A3,A4,A8,POLYRED:39;
end;
