environ
vocabularies NUMBERS,ORDINAL1,RLVECT_1,ALGSTR_0,VECTSP_1,LATTICES,ZFMISC_1,POLYNOM1,SUBSET_1,STRUCT_0,RELAT_2,BAGORDER,BINOP_1,POLYRED,POLYNOM7,ARYTM_1,ARYTM_3,PRE_POLY,TERMORD,FUNCT_1,BROUWER,RELAT_1,XBOOLE_0,XXREAL_0,SUPINF_2,VALUED_0,XCMPLX_0,CAT_3,ALGSTR_1,IDEAL_1,FINSEQ_1,PARTFUN1,MESFUNC1,CARD_3,TARSKI,CARD_1,ORDERS_2,REWRITE1,MCART_1,INT_1,FUNCT_4,GROUP_1,ORDERS_1,DICKSON,RLVECT_2,FUNCOP_1,PBOOLE,FINSET_1,ORDINAL4,GROEB_1;
notations TARSKI,RELAT_1,XBOOLE_0,RELAT_2,XCMPLX_0,XXREAL_0,RELSET_1,FUNCT_1,PARTFUN1,ORDINAL1,ALGSTR_0,ALGSTR_1,RLVECT_1,FINSET_1,FUNCT_7,DICKSON,CARD_3,CARD_1,SUBSET_1,MCART_1,FINSEQ_1,YELLOW_1,ORDERS_1,PRALG_1,STRUCT_0,POLYNOM7,PBOOLE,FUNCOP_1,ORDERS_2,VFUNCT_1,POLYNOM1,IDEAL_1,REWRITE1,BAGORDER,VECTSP_1,TERMORD,GROUP_1,NUMBERS,NAT_1,PRE_POLY,POLYRED,RECDEF_1,CKB1,CKB16,CKB17,CKB29,CKB30;
definitions RELAT_2,RELAT_1,STRUCT_0,CKB16,CKB17,CKB29,CKB30;
theorems TARSKI,RELSET_1,FINSEQ_1,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,RLVECT_1,NAT_1,ALGSTR_1,MCART_1,POLYNOM7,REWRITE1,XBOOLE_0,IDEAL_1,TERMORD,INT_1,FUNCT_1,ORDERS_2,FINSET_1,WELLORD2,XBOOLE_1,CARD_3,DICKSON,FUNCOP_1,PRALG_1,YELLOW_1,FUNCT_7,FUNCT_2,CARD_2,BAGORDER,ORDINAL1,VECTSP_2,POLYRED,RELAT_2,PARTFUN1,ORDERS_1,GROUP_1,XREAL_1,XXREAL_0,VALUED_0,STRUCT_0,PRE_POLY,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31;
schemes RELSET_1,NAT_1,CLASSES1;
registrations XBOOLE_0,RELAT_1,ORDINAL1,FINSET_1,XREAL_0,NAT_1,INT_1,CARD_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,YELLOW_1,GCD_1,POLYNOM1,POLYNOM2,POLYNOM4,IDEAL_1,POLYNOM7,DICKSON,TERMORD,POLYRED,VALUED_0,ALGSTR_0,FINSEQ_1,SUBSET_1,PRE_POLY,FUNCOP_1,VFUNCT_1,FUNCT_1,FUNCT_2;
constructors XXREAL_0,REWRITE1,VECTSP_2,PRALG_1,YELLOW_1,IDEAL_1,DICKSON,BAGORDER,TERMORD,POLYRED,RECDEF_1,DOMAIN_1,RELSET_1,PBOOLE,FUNCT_7,VFUNCT_1,CKB1,CKB16,CKB17,CKB29,CKB30;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
(for n being (Element of ( NAT )) holds (for T being  connected  admissible (TermOrder of n) holds (for L being  Abelian  add-associative  right_complementable  right_zeroed  commutative  associative  well-unital  distributive  almost_left_invertible non  degenerated non  empty doubleLoopStr holds (for G,P being non  empty (Subset of ( Polynom-Ring (n,L) )) holds (G is_Groebner_basis_of P,T implies ( PolyRedRel (G,T) ) is (Completion of ( PolyRedRel (P,T) )))))))
proof
let n being (Element of ( NAT ));
let T being  connected  admissible (TermOrder of n);
let L being  Abelian  add-associative  right_complementable  right_zeroed  commutative  associative  well-unital  distributive  almost_left_invertible non  degenerated non  empty doubleLoopStr;
let G being non  empty (Subset of ( Polynom-Ring (n,L) ));
let P being non  empty (Subset of ( Polynom-Ring (n,L) ));
set R = ( PolyRedRel (P,T) );
assume A1: G is_Groebner_basis_of P,T;
then ( PolyRedRel (G,T) ) is  locally-confluent by CKB30:def 1;
then reconsider RG = ( PolyRedRel (G,T) ) as  complete Relation;
(for a,b being set holds (a,b are_convertible_wrt R iff a,b are_convergent_wrt RG))
proof
let a being set;
let b being set;
A2: ( G -Ideal ) = P by A1,CKB30:def 1;
A3:now
assume A4: a,b are_convertible_wrt R;
now
per cases ;
case a = b;
hence a,b are_convergent_wrt RG by REWRITE1:38;
end;
case A5: a <> b;
( R \/ ( R ~ ) ) reduces a,b by A4,REWRITE1:def 4;
then consider p being (RedSequence of ( R \/ ( R ~ ) )) such that A6: ( p . 1 ) = a and A7: ( p . ( len p ) ) = b by REWRITE1:def 3;
reconsider l = ( ( len p ) - 1 ) as (Element of ( NAT )) by INT_1:5,NAT_1:14;
A8: 1 <= ( len p ) by NAT_1:14;
set h = ( p . l );
set g = ( p . ( 1 + 1 ) );
1 <= ( l + 1 ) by NAT_1:12;
then ( l + 1 ) in ( Seg ( len p ) ) by FINSEQ_1:1;
then A9: ( l + 1 ) in ( dom p ) by FINSEQ_1:def 3;
now
per cases ;
case ( len p ) = 1;
hence (a is (Polynomial of n,L) & b is (Polynomial of n,L)) by A5,A6,A7;
end;
case A10: ( len p ) <> 1;
then ( ( 0 ) + 1 ) < ( l + 1 ) by A8,XXREAL_0:1;
then A11: 1 <= l by NAT_1:13;
l <= ( l + 1 ) by NAT_1:13;
then l in ( Seg ( len p ) ) by A11,FINSEQ_1:1;
then l in ( dom p ) by FINSEQ_1:def 3;
then A12: [ h,b ] in ( R \/ ( R ~ ) ) by A7,A9,REWRITE1:def 2;
A13:now
per cases  by A12,XBOOLE_0:def 3;
case [ h,b ] in R;
then consider h9,b9 being set such that A14: [ h,b ] = [ h9,b9 ] and h9 in ( NonZero ( Polynom-Ring (n,L) ) ) and A15: b9 in (the carrier of ( Polynom-Ring (n,L) )) by RELSET_1:2;
b = ( [ h9,b9 ] `2 ) by A14,MCART_1:def 2
.= b9 by MCART_1:def 2;
hence b is (Polynomial of n,L) by A15,POLYNOM1:def 10;
end;
case [ h,b ] in ( R ~ );
then [ b,h ] in R by RELAT_1:def 7;
then consider h9,b9 being set such that A16: [ b,h ] = [ h9,b9 ] and A17: h9 in ( NonZero ( Polynom-Ring (n,L) ) ) and b9 in (the carrier of ( Polynom-Ring (n,L) )) by RELSET_1:2;
b = ( [ h9,b9 ] `1 ) by A16,MCART_1:def 1
.= h9 by MCART_1:def 1;
hence b is (Polynomial of n,L) by A17,POLYNOM1:def 10;
end;
end;
1 < ( len p ) by A8,A10,XXREAL_0:1;
then ( 1 + 1 ) <= ( len p ) by NAT_1:13;
then ( 1 + 1 ) in ( Seg ( len p ) ) by FINSEQ_1:1;
then A18: ( 1 + 1 ) in ( dom p ) by FINSEQ_1:def 3;
1 in ( Seg ( len p ) ) by A8,FINSEQ_1:1;
then 1 in ( dom p ) by FINSEQ_1:def 3;
then A19: [ a,g ] in ( R \/ ( R ~ ) ) by A6,A18,REWRITE1:def 2;
now
per cases  by A19,XBOOLE_0:def 3;
case [ a,g ] in R;
then consider h9,b9 being set such that A20: [ a,g ] = [ h9,b9 ] and A21: h9 in ( NonZero ( Polynom-Ring (n,L) ) ) and b9 in (the carrier of ( Polynom-Ring (n,L) )) by RELSET_1:2;
a = ( [ h9,b9 ] `1 ) by A20,MCART_1:def 1
.= h9 by MCART_1:def 1;
hence a is (Polynomial of n,L) by A21,POLYNOM1:def 10;
end;
case [ a,g ] in ( R ~ );
then [ g,a ] in R by RELAT_1:def 7;
then consider h9,b9 being set such that A22: [ g,a ] = [ h9,b9 ] and h9 in ( NonZero ( Polynom-Ring (n,L) ) ) and A23: b9 in (the carrier of ( Polynom-Ring (n,L) )) by RELSET_1:2;
a = ( [ h9,b9 ] `2 ) by A22,MCART_1:def 2
.= b9 by MCART_1:def 2;
hence a is (Polynomial of n,L) by A23,POLYNOM1:def 10;
end;
end;
hence (a is (Polynomial of n,L) & b is (Polynomial of n,L)) by A13;
end;
end;
then reconsider a9 = a,b9 = b as (Element of ( Polynom-Ring (n,L) )) by POLYNOM1:def 10;
reconsider a9,b9 as (Element of ( Polynom-Ring (n,L) ));
( G -Ideal ) = ( P -Ideal ) by A2,IDEAL_1:44;
then a9,b9 are_congruent_mod ( G -Ideal ) by A4,POLYRED:57;
then a9,b9 are_convertible_wrt RG by POLYRED:58;
hence a,b are_convergent_wrt RG by REWRITE1:def 23;
end;
end;
hence a,b are_convergent_wrt RG;
end;
now
assume A24: a,b are_convergent_wrt RG;
now
per cases ;
case a = b;
hence a,b are_convertible_wrt R by REWRITE1:26;
end;
case A25: a <> b;
consider c being set such that A26: RG reduces a,c and A27: RG reduces b,c by A24,REWRITE1:def 7;
(a is (Polynomial of n,L) & b is (Polynomial of n,L))
proof
now
per cases ;
case a = c;
hence thesis by A25,A27,CKB31:1;
end;
case A28: a <> c;
now
per cases ;
case b = c;
hence thesis by A25,A26,CKB31:1;
end;
case b <> c;
hence b is (Polynomial of n,L) by A27,CKB31:1;
end;
end;
hence thesis by A26,A28,CKB31:1;
end;
end;
hence thesis;
end;
then reconsider a9 = a,b9 = b as (Element of (the carrier of ( Polynom-Ring (n,L) ))) by POLYNOM1:def 10;
reconsider a9,b9 as (Element of ( Polynom-Ring (n,L) ));
(( G -Ideal ) = ( P -Ideal ) & a9,b9 are_convertible_wrt RG) by A2,A24,IDEAL_1:44,REWRITE1:37;
then a9,b9 are_congruent_mod ( P -Ideal ) by POLYRED:57;
hence a,b are_convertible_wrt R by POLYRED:58;
end;
end;
hence a,b are_convertible_wrt R;
end;
hence thesis by A3;
end;
hence thesis by REWRITE1:def 28;
end;
