environ
vocabularies NUMBERS,ORDINAL1,RLVECT_1,ALGSTR_0,VECTSP_1,LATTICES,ZFMISC_1,POLYNOM1,SUBSET_1,STRUCT_0,RELAT_2,BAGORDER,BINOP_1,POLYRED,POLYNOM7,ARYTM_1,ARYTM_3,PRE_POLY,TERMORD,FUNCT_1,BROUWER,RELAT_1,XBOOLE_0,XXREAL_0,SUPINF_2,VALUED_0,XCMPLX_0,CAT_3,ALGSTR_1,IDEAL_1,FINSEQ_1,PARTFUN1,MESFUNC1,CARD_3,TARSKI,CARD_1,ORDERS_2,REWRITE1,MCART_1,INT_1,FUNCT_4,GROUP_1,ORDERS_1,DICKSON,RLVECT_2,FUNCOP_1,PBOOLE,FINSET_1,ORDINAL4,GROEB_1;
notations TARSKI,RELAT_1,XBOOLE_0,RELAT_2,XCMPLX_0,XXREAL_0,RELSET_1,FUNCT_1,PARTFUN1,ORDINAL1,ALGSTR_0,ALGSTR_1,RLVECT_1,FINSET_1,FUNCT_7,DICKSON,CARD_3,CARD_1,SUBSET_1,MCART_1,FINSEQ_1,YELLOW_1,ORDERS_1,PRALG_1,STRUCT_0,POLYNOM7,PBOOLE,FUNCOP_1,ORDERS_2,VFUNCT_1,POLYNOM1,IDEAL_1,REWRITE1,BAGORDER,VECTSP_1,TERMORD,GROUP_1,NUMBERS,NAT_1,PRE_POLY,POLYRED,RECDEF_1,CKB1;
definitions RELAT_2,RELAT_1,STRUCT_0;
theorems TARSKI,RELSET_1,FINSEQ_1,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,RLVECT_1,NAT_1,ALGSTR_1,MCART_1,POLYNOM7,REWRITE1,XBOOLE_0,IDEAL_1,TERMORD,INT_1,FUNCT_1,ORDERS_2,FINSET_1,WELLORD2,XBOOLE_1,CARD_3,DICKSON,FUNCOP_1,PRALG_1,YELLOW_1,FUNCT_7,FUNCT_2,CARD_2,BAGORDER,ORDINAL1,VECTSP_2,POLYRED,RELAT_2,PARTFUN1,ORDERS_1,GROUP_1,XREAL_1,XXREAL_0,VALUED_0,STRUCT_0,PRE_POLY,CKB2,CKB3;
schemes RELSET_1,NAT_1,CLASSES1;
registrations XBOOLE_0,RELAT_1,ORDINAL1,FINSET_1,XREAL_0,NAT_1,INT_1,CARD_1,REWRITE1,STRUCT_0,VECTSP_1,ORDERS_2,ALGSTR_1,YELLOW_1,GCD_1,POLYNOM1,POLYNOM2,POLYNOM4,IDEAL_1,POLYNOM7,DICKSON,TERMORD,POLYRED,VALUED_0,ALGSTR_0,FINSEQ_1,SUBSET_1,PRE_POLY,FUNCOP_1,VFUNCT_1,FUNCT_1,FUNCT_2;
constructors XXREAL_0,REWRITE1,VECTSP_2,PRALG_1,YELLOW_1,IDEAL_1,DICKSON,BAGORDER,TERMORD,POLYRED,RECDEF_1,DOMAIN_1,RELSET_1,PBOOLE,FUNCT_7,VFUNCT_1,CKB1;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
Lm1: (for L being  add-associative  left_zeroed  right_zeroed  add-cancelable  right_complementable  associative  distributive  well-unital non  empty doubleLoopStr holds (for P being (Subset of L) holds (for p being (Element of L) holds (p in P implies p in ( P -Ideal )))))
proof
let L being  add-associative  left_zeroed  right_zeroed  add-cancelable  associative  distributive  well-unital  right_complementable non  empty doubleLoopStr;
let P being (Subset of L);
let p being (Element of L);
set f = <* p *>;
assume A1: p in P;
then reconsider P9 = P as non  empty (Subset of L);
now
let i being set;
assume A2: i in ( dom f );
( dom f ) = { 1 } by FINSEQ_1:2,FINSEQ_1:38;
then i = 1 by A2,TARSKI:def 1;
then ( f /. i ) = ( f . 1 ) by A2,PARTFUN1:def 6
.= p by FINSEQ_1:40
.= ( ( 1. L ) * p ) by VECTSP_1:def 8
.= ( ( ( 1. L ) * p ) * ( 1. L ) ) by VECTSP_1:def 4;
hence (ex u,v being (Element of L) st (ex a being (Element of P9) st ( f /. i ) = ( ( u * a ) * v ))) by A1;
end;
then reconsider f as (LinearCombination of P9) by IDEAL_1:def 8;
( Sum f ) = p by RLVECT_1:44;
hence thesis by IDEAL_1:60;
end;
