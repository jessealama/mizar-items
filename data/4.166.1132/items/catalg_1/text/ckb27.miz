environ
vocabularies FUNCT_1,PBOOLE,RELAT_1,FUNCOP_1,CARD_3,TARSKI,FUNCT_6,MEMBER_1,XBOOLE_0,FINSEQ_1,MSUALG_1,STRUCT_0,PROB_2,MSAFREE,ZFMISC_1,CARD_1,FINSEQ_2,MCART_1,SUBSET_1,ORDINAL4,MSUALG_6,CAT_5,INSTALG1,NUMBERS,MARGREL1,CAT_1,PUA2MSS1,GRAPH_1,PARTFUN1,MSUALG_3,CATALG_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,MCART_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,MSAFREE1,FINSEQ_1,FINSEQ_2,CARD_3,FINSEQ_4,FUNCT_6,STRUCT_0,PBOOLE,MSUALG_1,MSUALG_3,MSAFREE,PUA2MSS1,MSUALG_6,INSTALG1,GRAPH_1,CAT_1,XXREAL_0,CKB1,CKB5,CKB10,CKB13,CKB14,CKB17,CKB18,CKB23,CKB24,CKB26;
definitions TARSKI,STRUCT_0,MSUALG_1,MSUALG_3,PUA2MSS1,MSUALG_6,INSTALG1,PROB_2,MSAFREE1,XBOOLE_0,FUNCOP_1,PBOOLE,CKB1,CKB5,CKB10,CKB14,CKB18,CKB24,CKB26;
theorems TARSKI,ZFMISC_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,FUNCT_3,MCART_1,ENUMSET1,FUNCT_6,FINSEQ_4,MONOID_1,CARD_3,PBOOLE,PRALG_2,MSUALG_3,INSTALG1,CAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,PARTFUN1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB10,CKB14,CKB18,CKB19,CKB24,CKB25,CKB26;
schemes FUNCT_1,CLASSES1,PBOOLE,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FUNCOP_1,XREAL_0,FINSEQ_1,FINSEQ_2,STRUCT_0,MSUALG_1,RELSET_1,MSAFREE,INSTALG1,MSAFREE1,MSSUBFAM,PBOOLE,CARD_1,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB15,CKB16,CKB20,CKB21,CKB22;
constructors ENUMSET1,XXREAL_0,NAT_1,FINSEQ_4,MSSUBFAM,CAT_1,MSUALG_3,MSATERM,MSAFREE1,PUA2MSS1,MSUALG_6,INSTALG1,XREAL_0,RELSET_1,CKB1,CKB5,CKB10,CKB14,CKB18,CKB23,CKB24,CKB26;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
registration
let A being set;
cluster ( CatSign A ) ->  delta-concrete;
coherence
proof
defpred P[ set,set ]
 means
((($1 = ( 0 ) implies $2 = 2) & ($1 = 1 implies $2 = 1)) & ($1 = 2 implies $2 = 3));
set S = ( CatSign A );
A1: (for x being set holds (x in ( NAT ) implies (ex y being set st (y in ( NAT ) & P[ x,y ]))))
proof
reconsider j0 = 2,j1 = 1,j2 = 3 as set;
let i being set;
assume i in ( NAT );
per cases ;
suppose A2: i = ( 0 );

take j0;
thus thesis by A2;
end;
suppose A3: i = 1;

take j1;
thus thesis by A3;
end;
suppose A4: i = 2;

take j2;
thus thesis by A4;
end;
suppose A5: ((i <> ( 0 ) & i <> 1) & i <> 2);

take j0;
thus thesis by A5;
end;
end;
consider f being Function such that A6: (( dom f ) = ( NAT ) & ( rng f ) c= ( NAT )) and A7: (for i being set holds (i in ( NAT ) implies P[ i,( f . i ) ])) from FUNCT_1:sch 5(A1);
reconsider f as (Function of ( NAT ),( NAT )) by A6,FUNCT_2:2;
take f;
A8: A = ( underlay S ) by CKB25:1;
A9: (the carrier of S) = [: { ( 0 ) },( 2 -tuples_on A ) :] by CKB10:def 1;
hereby
let s being set;
assume s in (the carrier of S);
then consider i,p being set such that A10: i in { ( 0 ) } and A11: p in ( 2 -tuples_on A ) and A12: s = [ i,p ] by A9,ZFMISC_1:84;
reconsider p as FinSequence by A11,FINSEQ_2:def 3;
take i = ( 0 );
take p;
( f . i ) = 2 by A7;
hence (s = [ i,p ] & ( len p ) = ( f . i )) by A10,A11,A12,FINSEQ_2:132,TARSKI:def 1;
thus [: { i },( ( f . i ) -tuples_on ( underlay S ) ) :] c= (the carrier of S) by A7,A9,A8;
end;
let o being set;
A13: (the carrier' of S) = ( [: { 1 },( 1 -tuples_on A ) :] \/ [: { 2 },( 3 -tuples_on A ) :] ) by CKB10:def 1;
assume A14: o in (the carrier' of S);
per cases  by A13,A14,XBOOLE_0:def 3;
suppose o in [: { 1 },( 1 -tuples_on A ) :];

then consider i,p being set such that A15: i in { 1 } and A16: p in ( 1 -tuples_on A ) and A17: o = [ i,p ] by ZFMISC_1:84;
reconsider p as (FinSequence of A) by A16,FINSEQ_2:def 3;
take i = 1;
take p;
( f . i ) = 1 by A7;
hence thesis by A13,A8,A15,A16,A17,FINSEQ_2:132,TARSKI:def 1,XBOOLE_1:7;
end;
suppose o in [: { 2 },( 3 -tuples_on A ) :];

then consider i,p being set such that A18: i in { 2 } and A19: p in ( 3 -tuples_on A ) and A20: o = [ i,p ] by ZFMISC_1:84;
reconsider p as (FinSequence of A) by A19,FINSEQ_2:def 3;
take i = 2;
take p;
( f . i ) = 3 by A7;
hence thesis by A13,A8,A18,A19,A20,FINSEQ_2:132,TARSKI:def 1,XBOOLE_1:7;
end;
end;
end;
