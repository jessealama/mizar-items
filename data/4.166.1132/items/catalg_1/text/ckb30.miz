environ
vocabularies FUNCT_1,PBOOLE,RELAT_1,FUNCOP_1,CARD_3,TARSKI,FUNCT_6,MEMBER_1,XBOOLE_0,FINSEQ_1,MSUALG_1,STRUCT_0,PROB_2,MSAFREE,ZFMISC_1,CARD_1,FINSEQ_2,MCART_1,SUBSET_1,ORDINAL4,MSUALG_6,CAT_5,INSTALG1,NUMBERS,MARGREL1,CAT_1,PUA2MSS1,GRAPH_1,PARTFUN1,MSUALG_3,CATALG_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,MCART_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,MSAFREE1,FINSEQ_1,FINSEQ_2,CARD_3,FINSEQ_4,FUNCT_6,STRUCT_0,PBOOLE,MSUALG_1,MSUALG_3,MSAFREE,PUA2MSS1,MSUALG_6,INSTALG1,GRAPH_1,CAT_1,XXREAL_0,CKB1,CKB5,CKB10,CKB13,CKB14,CKB17,CKB18,CKB23,CKB24,CKB26;
definitions TARSKI,STRUCT_0,MSUALG_1,MSUALG_3,PUA2MSS1,MSUALG_6,INSTALG1,PROB_2,MSAFREE1,XBOOLE_0,FUNCOP_1,PBOOLE,CKB1,CKB5,CKB10,CKB14,CKB18,CKB24,CKB26;
theorems TARSKI,ZFMISC_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,FUNCT_3,MCART_1,ENUMSET1,FUNCT_6,FINSEQ_4,MONOID_1,CARD_3,PBOOLE,PRALG_2,MSUALG_3,INSTALG1,CAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,PARTFUN1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB10,CKB14,CKB18,CKB19,CKB24,CKB25,CKB26;
schemes FUNCT_1,CLASSES1,PBOOLE,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FUNCOP_1,XREAL_0,FINSEQ_1,FINSEQ_2,STRUCT_0,MSUALG_1,RELSET_1,MSAFREE,INSTALG1,MSAFREE1,MSSUBFAM,PBOOLE,CARD_1,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB15,CKB16,CKB20,CKB21,CKB22,CKB27,CKB28,CKB29;
constructors ENUMSET1,XXREAL_0,NAT_1,FINSEQ_4,MSSUBFAM,CAT_1,MSUALG_3,MSATERM,MSAFREE1,PUA2MSS1,MSUALG_6,INSTALG1,XREAL_0,RELSET_1,CKB1,CKB5,CKB10,CKB14,CKB18,CKB23,CKB24,CKB26;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th16: (for S being  delta-concrete ManySortedSign holds (for x being set holds ((x in (the carrier of S) or x in (the carrier' of S)) implies (ex i being (Element of ( NAT )) st (ex p being FinSequence st (x = [ i,p ] & ( rng p ) c= ( underlay S )))))))
proof
let S being  delta-concrete ManySortedSign;
let x being set;
assume that
A1: (x in (the carrier of S) or x in (the carrier' of S));
A2: x in ( (the carrier of S) \/ (the carrier' of S) ) by A1,XBOOLE_0:def 3;
consider f being (Function of ( NAT ),( NAT )) such that A3: (for s being set holds (s in (the carrier of S) implies (ex i being (Element of ( NAT )) st (ex p being FinSequence st ((s = [ i,p ] & ( len p ) = ( f . i )) & [: { i },( ( f . i ) -tuples_on ( underlay S ) ) :] c= (the carrier of S)))))) and A4: (for o being set holds (o in (the carrier' of S) implies (ex i being (Element of ( NAT )) st (ex p being FinSequence st ((o = [ i,p ] & ( len p ) = ( f . i )) & [: { i },( ( f . i ) -tuples_on ( underlay S ) ) :] c= (the carrier' of S)))))) by CKB26:def 1;
per cases  by A1;
suppose x in (the carrier of S);

then consider i being (Element of ( NAT )),p being FinSequence such that A5: x = [ i,p ] and ( len p ) = ( f . i ) and [: { i },( ( f . i ) -tuples_on ( underlay S ) ) :] c= (the carrier of S) by A3;
take i;
take p;
thus x = [ i,p ] by A5;
let a being set;
thus thesis by A2,A5,CKB24:def 1;
end;
suppose x in (the carrier' of S);

then consider i being (Element of ( NAT )),p being FinSequence such that A6: x = [ i,p ] and ( len p ) = ( f . i ) and [: { i },( ( f . i ) -tuples_on ( underlay S ) ) :] c= (the carrier' of S) by A4;
take i;
take p;
thus x = [ i,p ] by A6;
let a being set;
thus thesis by A2,A6,CKB24:def 1;
end;
end;
