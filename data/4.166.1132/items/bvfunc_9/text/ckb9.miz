environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,XBOOLEAN,PARTIT1,FUNCT_1,BVFUNC_1;
notations XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,FUNCT_2,BVFUNC_1;
definitions BVFUNC_1,XBOOLEAN;
theorems MARGREL1,BVFUNC_1,BVFUNC_4,BVFUNC_5,BVFUNC_6,BVFUNC_7,XBOOLEAN,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8;
registrations XBOOLE_0,XBOOLEAN,MARGREL1;
constructors BINARITH,BVFUNC_1;
requirements ARITHM,BOOLE;
begin
reserve Y for non  empty set;
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve b for (Element of ( Funcs (Y,( BOOLEAN )) ));
theorem
Th2: ( a '&' ( a 'imp' b ) ) '<' b
proof
let z being (Element of Y);
A1: ( ( a '&' ( a 'imp' b ) ) . z ) = ( ( a . z ) '&' ( ( a 'imp' b ) . z ) ) by MARGREL1:def 20
.= ( ( a . z ) '&' ( ( ( 'not' a ) 'or' b ) . z ) ) by BVFUNC_4:8
.= ( ( a . z ) '&' ( ( ( 'not' a ) . z ) 'or' ( b . z ) ) ) by BVFUNC_1:def 4
.= ( ( ( a . z ) '&' ( ( 'not' a ) . z ) ) 'or' ( ( a . z ) '&' ( b . z ) ) ) by XBOOLEAN:8
.= ( ( ( a . z ) '&' ( 'not' ( a . z ) ) ) 'or' ( ( a . z ) '&' ( b . z ) ) ) by MARGREL1:def 19
.= ( ( FALSE ) 'or' ( ( a . z ) '&' ( b . z ) ) ) by XBOOLEAN:138
.= ( ( a . z ) '&' ( b . z ) );
assume A2: ( ( a '&' ( a 'imp' b ) ) . z ) = ( TRUE );
now
assume ( b . z ) <> ( TRUE );
then ( ( a . z ) '&' ( b . z ) ) = ( ( FALSE ) '&' ( a . z ) ) by XBOOLEAN:def 3
.= ( FALSE );
hence contradiction by A2,A1;
end;
hence thesis;
end;
