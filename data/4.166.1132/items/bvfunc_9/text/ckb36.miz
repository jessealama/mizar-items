environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,XBOOLEAN,PARTIT1,FUNCT_1,BVFUNC_1;
notations XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,FUNCT_2,BVFUNC_1;
definitions BVFUNC_1,XBOOLEAN;
theorems MARGREL1,BVFUNC_1,BVFUNC_4,BVFUNC_5,BVFUNC_6,BVFUNC_7,XBOOLEAN,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35;
registrations XBOOLE_0,XBOOLEAN,MARGREL1;
constructors BINARITH,BVFUNC_1;
requirements ARITHM,BOOLE;
begin
reserve Y for non  empty set;
theorem
Th26: (for a1,b1,a2,b2 being (Element of ( Funcs (Y,( BOOLEAN )) )) holds ( ( ( ( a1 'imp' a2 ) '&' ( b1 'imp' b2 ) ) '&' ( 'not' ( a2 '&' b2 ) ) ) 'imp' ( 'not' ( a1 '&' b1 ) ) ) = ( I_el Y ))
proof
let a1 being (Element of ( Funcs (Y,( BOOLEAN )) ));
let b1 being (Element of ( Funcs (Y,( BOOLEAN )) ));
let a2 being (Element of ( Funcs (Y,( BOOLEAN )) ));
let b2 being (Element of ( Funcs (Y,( BOOLEAN )) ));
(for z being (Element of Y) holds (( ( ( ( a1 'imp' a2 ) '&' ( b1 'imp' b2 ) ) '&' ( 'not' ( a2 '&' b2 ) ) ) . z ) = ( TRUE ) implies ( ( 'not' ( a1 '&' b1 ) ) . z ) = ( TRUE )))
proof
let z being (Element of Y);
A1: ( ( ( ( a1 'imp' a2 ) '&' ( b1 'imp' b2 ) ) '&' ( 'not' ( a2 '&' b2 ) ) ) . z ) = ( ( ( ( a1 'imp' a2 ) '&' ( b1 'imp' b2 ) ) . z ) '&' ( ( 'not' ( a2 '&' b2 ) ) . z ) ) by MARGREL1:def 20
.= ( ( ( ( a1 'imp' a2 ) . z ) '&' ( ( b1 'imp' b2 ) . z ) ) '&' ( ( 'not' ( a2 '&' b2 ) ) . z ) ) by MARGREL1:def 20
.= ( ( ( ( ( 'not' a1 ) 'or' a2 ) . z ) '&' ( ( b1 'imp' b2 ) . z ) ) '&' ( ( 'not' ( a2 '&' b2 ) ) . z ) ) by BVFUNC_4:8
.= ( ( ( ( ( 'not' a1 ) 'or' a2 ) . z ) '&' ( ( ( 'not' b1 ) 'or' b2 ) . z ) ) '&' ( ( 'not' ( a2 '&' b2 ) ) . z ) ) by BVFUNC_4:8
.= ( ( ( ( ( 'not' a1 ) . z ) 'or' ( a2 . z ) ) '&' ( ( ( 'not' b1 ) 'or' b2 ) . z ) ) '&' ( ( 'not' ( a2 '&' b2 ) ) . z ) ) by BVFUNC_1:def 4
.= ( ( ( ( ( 'not' a1 ) . z ) 'or' ( a2 . z ) ) '&' ( ( ( 'not' b1 ) . z ) 'or' ( b2 . z ) ) ) '&' ( ( 'not' ( a2 '&' b2 ) ) . z ) ) by BVFUNC_1:def 4
.= ( ( ( ( ( 'not' a1 ) . z ) 'or' ( a2 . z ) ) '&' ( ( ( 'not' b1 ) . z ) 'or' ( b2 . z ) ) ) '&' ( ( ( 'not' a2 ) 'or' ( 'not' b2 ) ) . z ) ) by BVFUNC_1:14
.= ( ( ( ( ( 'not' a1 ) . z ) 'or' ( a2 . z ) ) '&' ( ( ( 'not' b1 ) . z ) 'or' ( b2 . z ) ) ) '&' ( ( ( 'not' a2 ) . z ) 'or' ( ( 'not' b2 ) . z ) ) ) by BVFUNC_1:def 4;
assume A2: ( ( ( ( a1 'imp' a2 ) '&' ( b1 'imp' b2 ) ) '&' ( 'not' ( a2 '&' b2 ) ) ) . z ) = ( TRUE );
now
A3: (( ( 'not' b1 ) . z ) = ( TRUE ) or ( ( 'not' b1 ) . z ) = ( FALSE )) by XBOOLEAN:def 3;
A4: (( ( 'not' a1 ) . z ) = ( TRUE ) or ( ( 'not' a1 ) . z ) = ( FALSE )) by XBOOLEAN:def 3;
A5: ( ( 'not' ( a1 '&' b1 ) ) . z ) = ( ( ( 'not' a1 ) 'or' ( 'not' b1 ) ) . z ) by BVFUNC_1:14
.= ( ( ( 'not' a1 ) . z ) 'or' ( ( 'not' b1 ) . z ) ) by BVFUNC_1:def 4;
assume ( ( 'not' ( a1 '&' b1 ) ) . z ) <> ( TRUE );
then ( ( ( ( a1 'imp' a2 ) '&' ( b1 'imp' b2 ) ) '&' ( 'not' ( a2 '&' b2 ) ) ) . z ) = ( ( ( ( b2 . z ) '&' ( a2 . z ) ) '&' ( ( 'not' a2 ) . z ) ) 'or' ( ( ( a2 . z ) '&' ( b2 . z ) ) '&' ( ( 'not' b2 ) . z ) ) ) by A1,A5,A4,A3,XBOOLEAN:8
.= ( ( ( b2 . z ) '&' ( ( a2 . z ) '&' ( ( 'not' a2 ) . z ) ) ) 'or' ( ( a2 . z ) '&' ( ( b2 . z ) '&' ( ( 'not' b2 ) . z ) ) ) )
.= ( ( ( b2 . z ) '&' ( ( a2 . z ) '&' ( 'not' ( a2 . z ) ) ) ) 'or' ( ( a2 . z ) '&' ( ( b2 . z ) '&' ( ( 'not' b2 ) . z ) ) ) ) by MARGREL1:def 19
.= ( ( ( b2 . z ) '&' ( ( a2 . z ) '&' ( 'not' ( a2 . z ) ) ) ) 'or' ( ( a2 . z ) '&' ( ( b2 . z ) '&' ( 'not' ( b2 . z ) ) ) ) ) by MARGREL1:def 19
.= ( ( ( b2 . z ) '&' ( FALSE ) ) 'or' ( ( a2 . z ) '&' ( ( b2 . z ) '&' ( 'not' ( b2 . z ) ) ) ) ) by XBOOLEAN:138
.= ( ( FALSE ) 'or' ( ( FALSE ) '&' ( a2 . z ) ) ) by XBOOLEAN:138
.= ( FALSE );
hence contradiction by A2;
end;
hence thesis;
end;
then ( ( ( a1 'imp' a2 ) '&' ( b1 'imp' b2 ) ) '&' ( 'not' ( a2 '&' b2 ) ) ) '<' ( 'not' ( a1 '&' b1 ) ) by BVFUNC_1:def 12;
hence thesis by BVFUNC_1:16;
end;
