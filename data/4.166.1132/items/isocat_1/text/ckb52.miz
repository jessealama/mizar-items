environ
vocabularies CAT_1,FUNCT_1,ZFMISC_1,RELAT_1,MCART_1,STRUCT_0,ALGSTR_0,GRAPH_1,PZFMISC1,NATTRA_1,XBOOLE_0,WELLORD1,TARSKI,PARTFUN1,VALUED_1,REWRITE1,ISOCAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCT_3,STRUCT_0,GRAPH_1,CAT_1,CAT_2,NATTRA_1,CKB7,CKB11,CKB12,CKB18,CKB19,CKB25,CKB26,CKB30,CKB32,CKB45;
definitions TARSKI,CAT_1,FUNCT_1,NATTRA_1,XBOOLE_0,CAT_2,BINOP_1,CKB7,CKB11,CKB12,CKB18,CKB25,CKB26,CKB30,CKB32,CKB45;
theorems FUNCT_2,CAT_1,ZFMISC_1,FUNCT_1,FUNCT_3,NATTRA_1,RELAT_1,TARSKI,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51;
registrations RELSET_1,FUNCT_2,STRUCT_0;
constructors PARTFUN1,NATTRA_1,FUNCOP_1,RELSET_1,CKB11,CKB18,CKB25,CKB26,CKB30,CKB32,CKB45;
requirements SUBSET,BOOLE;
begin
reserve A for Category;
reserve B for Category;
reserve C for Category;
reserve F1 for (Functor of A,B);
reserve F2 for (Functor of A,B);
reserve F3 for (Functor of A,B);
reserve G1 for (Functor of B,C);
reserve G2 for (Functor of B,C);
reserve G3 for (Functor of B,C);
reserve s for (natural_transformation of F1,F2);
reserve s9 for (natural_transformation of F2,F3);
reserve t for (natural_transformation of G1,G2);
reserve t9 for (natural_transformation of G2,G3);
theorem
((((F1 is_naturally_transformable_to F2 & F2 is_naturally_transformable_to F3) & G1 is_naturally_transformable_to G2) & G2 is_naturally_transformable_to G3) implies ( ( t9 `*` t ) (#) ( s9 `*` s ) ) = ( ( t9 (#) s9 ) `*` ( t (#) s ) ))
proof
assume that
A1: F1 is_naturally_transformable_to F2
and
A2: F2 is_naturally_transformable_to F3
and
A3: G1 is_naturally_transformable_to G2
and
A4: G2 is_naturally_transformable_to G3;
A5: (( t9 (#) s9 ) = ( ( G3 * s9 ) `*` ( t9 * F2 ) ) & ( t (#) s ) = ( ( G2 * s ) `*` ( t * F1 ) )) by A1,A2,A3,A4,CKB46:1;
A6: ( G1 * F1 ) is_naturally_transformable_to ( G2 * F1 ) by A3,CKB29:1;
A7: ( G2 * F1 ) is_naturally_transformable_to ( G2 * F2 ) by A1,CKB29:1;
then A8: ( G1 * F1 ) is_naturally_transformable_to ( G2 * F2 ) by A6,NATTRA_1:23;
A9: ( G2 * F2 ) is_naturally_transformable_to ( G3 * F2 ) by A4,CKB29:1;
A10: G1 is_naturally_transformable_to G3 by A3,A4,NATTRA_1:23;
then A11: ( G1 * F1 ) is_naturally_transformable_to ( G3 * F1 ) by CKB29:1;
A12: ( G3 * F1 ) is_naturally_transformable_to ( G3 * F2 ) by A1,CKB29:1;
A13: ( G2 * F1 ) is_naturally_transformable_to ( G3 * F1 ) by A4,CKB29:1;
A14: ( G3 * F2 ) is_naturally_transformable_to ( G3 * F3 ) by A2,CKB29:1;
F1 is_naturally_transformable_to F3 by A1,A2,NATTRA_1:23;
hence ( ( t9 `*` t ) (#) ( s9 `*` s ) ) = ( ( G3 * ( s9 `*` s ) ) `*` ( ( t9 `*` t ) * F1 ) ) by A10,CKB46:1
.= ( ( ( G3 * s9 ) `*` ( G3 * s ) ) `*` ( ( t9 `*` t ) * F1 ) ) by A1,A2,CKB36:1
.= ( ( ( G3 * s9 ) `*` ( G3 * s ) ) `*` ( ( t9 * F1 ) `*` ( t * F1 ) ) ) by A3,A4,CKB37:1
.= ( ( G3 * s9 ) `*` ( ( G3 * s ) `*` ( ( t9 * F1 ) `*` ( t * F1 ) ) ) ) by A14,A12,A11,NATTRA_1:26
.= ( ( G3 * s9 ) `*` ( ( ( G3 * s ) `*` ( t9 * F1 ) ) `*` ( t * F1 ) ) ) by A12,A6,A13,NATTRA_1:26
.= ( ( G3 * s9 ) `*` ( ( t9 (#) s ) `*` ( t * F1 ) ) ) by A1,A4,CKB46:1
.= ( ( G3 * s9 ) `*` ( ( t9 * F2 ) `*` ( ( G2 * s ) `*` ( t * F1 ) ) ) ) by A6,A9,A7,NATTRA_1:26
.= ( ( t9 (#) s9 ) `*` ( t (#) s ) ) by A14,A9,A8,A5,NATTRA_1:26;
end;
