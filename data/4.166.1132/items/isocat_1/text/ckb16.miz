environ
vocabularies CAT_1,FUNCT_1,ZFMISC_1,RELAT_1,MCART_1,STRUCT_0,ALGSTR_0,GRAPH_1,PZFMISC1,NATTRA_1,XBOOLE_0,WELLORD1,TARSKI,PARTFUN1,VALUED_1,REWRITE1,ISOCAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCT_3,STRUCT_0,GRAPH_1,CAT_1,CAT_2,NATTRA_1,CKB7,CKB11,CKB12;
definitions TARSKI,CAT_1,FUNCT_1,NATTRA_1,XBOOLE_0,CAT_2,BINOP_1,CKB7,CKB11,CKB12;
theorems FUNCT_2,CAT_1,ZFMISC_1,FUNCT_1,FUNCT_3,NATTRA_1,RELAT_1,TARSKI,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15;
registrations RELSET_1,FUNCT_2,STRUCT_0;
constructors PARTFUN1,NATTRA_1,FUNCOP_1,RELSET_1,CKB11;
requirements SUBSET,BOOLE;
begin
reserve A for Category;
reserve B for Category;
reserve F for (Functor of A,B);
theorem
Th16: (F is  isomorphic implies (( F * ( F " ) ) = ( id B ) & ( ( F " ) * F ) = ( id A )))
proof
reconsider f = F as (Function of (the carrier' of A),(the carrier' of B));
A1: ( dom f ) = (the carrier' of A) by FUNCT_2:def 1;
assume A2: F is  isomorphic;
then A3: F is  one-to-one by CKB12:def 1;
A4: ( rng f ) = (the carrier' of B) by A2,CKB12:def 1;
thus ( F * ( F " ) ) = ( f * ( f " ) ) by A2,CKB11:def 1
.= ( id B ) by A3,A4,FUNCT_1:39;
thus ( ( F " ) * F ) = ( ( f " ) * f ) by A2,CKB11:def 1
.= ( id A ) by A3,A1,FUNCT_1:39;
end;
