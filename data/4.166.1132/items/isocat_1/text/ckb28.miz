environ
vocabularies CAT_1,FUNCT_1,ZFMISC_1,RELAT_1,MCART_1,STRUCT_0,ALGSTR_0,GRAPH_1,PZFMISC1,NATTRA_1,XBOOLE_0,WELLORD1,TARSKI,PARTFUN1,VALUED_1,REWRITE1,ISOCAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCT_3,STRUCT_0,GRAPH_1,CAT_1,CAT_2,NATTRA_1,CKB7,CKB11,CKB12,CKB18,CKB19,CKB25,CKB26;
definitions TARSKI,CAT_1,FUNCT_1,NATTRA_1,XBOOLE_0,CAT_2,BINOP_1,CKB7,CKB11,CKB12,CKB18,CKB25,CKB26;
theorems FUNCT_2,CAT_1,ZFMISC_1,FUNCT_1,FUNCT_3,NATTRA_1,RELAT_1,TARSKI,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
registrations RELSET_1,FUNCT_2,STRUCT_0;
constructors PARTFUN1,NATTRA_1,FUNCOP_1,RELSET_1,CKB11,CKB18,CKB25,CKB26;
requirements SUBSET,BOOLE;
begin
reserve A for Category;
reserve B for Category;
reserve C for Category;
reserve G for (Functor of B,C);
theorem
Th26: (for F1,F2 being (Functor of A,B) holds (F1 is_transformable_to F2 implies (for t being (transformation of F1,F2) holds (for G being (Functor of B,C) holds (for a being (Object of A) holds ( ( G * t ) . a ) = ( G . ( t . a ) ))))))
proof
let F1 being (Functor of A,B);
let F2 being (Functor of A,B);
assume that
A1: F1 is_transformable_to F2;
let t being (transformation of F1,F2);
let G being (Functor of B,C);
let a being (Object of A);
A2: ( Hom (( F1 . a ),( F2 . a )) ) <> ( {} ) by A1,NATTRA_1:def 2;
thus ( ( G * t ) . a ) = ( ( G * t ) . (a qua set) ) by A1,CKB5:1,NATTRA_1:def 5
.= ( ( (G qua (Function of (the carrier' of B),(the carrier' of C))) * (t qua (Function of (the carrier of A),(the carrier' of B))) ) . a ) by A1,CKB25:def 1
.= ( G . ( t . (a qua set) ) ) by FUNCT_2:15
.= ( G . (( t . a ) qua (Morphism of B)) ) by A1,NATTRA_1:def 5
.= ( G . ( t . a ) ) by A2,NATTRA_1:def 1;
end;
