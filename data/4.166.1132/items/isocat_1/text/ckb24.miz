environ
vocabularies CAT_1,FUNCT_1,ZFMISC_1,RELAT_1,MCART_1,STRUCT_0,ALGSTR_0,GRAPH_1,PZFMISC1,NATTRA_1,XBOOLE_0,WELLORD1,TARSKI,PARTFUN1,VALUED_1,REWRITE1,ISOCAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCT_3,STRUCT_0,GRAPH_1,CAT_1,CAT_2,NATTRA_1,CKB7,CKB11,CKB12,CKB18,CKB19;
definitions TARSKI,CAT_1,FUNCT_1,NATTRA_1,XBOOLE_0,CAT_2,BINOP_1,CKB7,CKB11,CKB12,CKB18;
theorems FUNCT_2,CAT_1,ZFMISC_1,FUNCT_1,FUNCT_3,NATTRA_1,RELAT_1,TARSKI,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23;
registrations RELSET_1,FUNCT_2,STRUCT_0;
constructors PARTFUN1,NATTRA_1,FUNCOP_1,RELSET_1,CKB11,CKB18;
requirements SUBSET,BOOLE;
begin
reserve A for Category;
reserve B for Category;
reserve C for Category;
reserve D for Category;
reserve F for (Functor of A,B);
reserve G for (Functor of B,C);
theorem
((A ~= B & C ~= D) implies [: A,C :] ~= [: B,D :])
proof
given F being (Functor of A,B) such that
A1: F is  isomorphic;

A2: F is  one-to-one by A1,CKB12:def 1;
given G being (Functor of C,D) such that
A3: G is  isomorphic;

take [: F,G :];
G is  one-to-one by A3,CKB12:def 1;
hence [: F,G :] is  one-to-one by A2,CKB1:1;
thus ( rng [: F,G :] ) = [: ( rng F ),( rng G ) :] by FUNCT_3:67
.= [: (the carrier' of B),( rng G ) :] by A1,CKB12:def 1
.= (the carrier' of [: B,D :]) by A3,CKB12:def 1;
end;
