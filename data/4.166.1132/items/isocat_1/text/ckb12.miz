environ
vocabularies CAT_1,FUNCT_1,ZFMISC_1,RELAT_1,MCART_1,STRUCT_0,ALGSTR_0,GRAPH_1,PZFMISC1,NATTRA_1,XBOOLE_0,WELLORD1,TARSKI,PARTFUN1,VALUED_1,REWRITE1,ISOCAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCT_3,STRUCT_0,GRAPH_1,CAT_1,CAT_2,NATTRA_1,CKB7,CKB11;
definitions TARSKI,CAT_1,FUNCT_1,NATTRA_1,XBOOLE_0,CAT_2,BINOP_1,CKB7,CKB11;
theorems FUNCT_2,CAT_1,ZFMISC_1,FUNCT_1,FUNCT_3,NATTRA_1,RELAT_1,TARSKI,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11;
registrations RELSET_1,FUNCT_2,STRUCT_0;
constructors PARTFUN1,NATTRA_1,FUNCOP_1,RELSET_1,CKB11;
requirements SUBSET,BOOLE;
begin
reserve A for Category;
reserve B for Category;
reserve F for (Functor of A,B);
definition
let A;
let B;
let F;
redefine attr F is  isomorphic
means
:Def3: (F is  one-to-one & ( rng F ) = (the carrier' of B));
compatibility
proof
thus (F is  isomorphic implies (F is  one-to-one & ( rng F ) = (the carrier' of B))) by CAT_1:def 19;
assume that
A1: F is  one-to-one
and
A2: ( rng F ) = (the carrier' of B);
thus (F is  one-to-one & ( rng F ) = (the carrier' of B)) by A1,A2;
thus ( rng ( Obj F ) ) c= (the carrier of B);
let x being set;
assume x in (the carrier of B);
then reconsider d = x as (Object of B);
consider f being set such that A3: f in ( dom F ) and A4: ( id d ) = ( F . f ) by A2,FUNCT_1:def 3;
reconsider f as (Morphism of A) by A3;
reconsider c = ( id ( dom f ) ) as (Morphism of A);
( F . c ) = ( id ( dom ( id d ) ) ) by A4,CAT_1:63
.= ( id d ) by CAT_1:19;
then (( dom ( Obj F ) ) = (the carrier of A) & ( ( Obj F ) . ( dom f ) ) = d) by CAT_1:67,FUNCT_2:def 1;
hence x in ( rng ( Obj F ) ) by FUNCT_1:def 3;
end;
end;
