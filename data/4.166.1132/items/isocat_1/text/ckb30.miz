environ
vocabularies CAT_1,FUNCT_1,ZFMISC_1,RELAT_1,MCART_1,STRUCT_0,ALGSTR_0,GRAPH_1,PZFMISC1,NATTRA_1,XBOOLE_0,WELLORD1,TARSKI,PARTFUN1,VALUED_1,REWRITE1,ISOCAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCT_3,STRUCT_0,GRAPH_1,CAT_1,CAT_2,NATTRA_1,CKB7,CKB11,CKB12,CKB18,CKB19,CKB25,CKB26;
definitions TARSKI,CAT_1,FUNCT_1,NATTRA_1,XBOOLE_0,CAT_2,BINOP_1,CKB7,CKB11,CKB12,CKB18,CKB25,CKB26;
theorems FUNCT_2,CAT_1,ZFMISC_1,FUNCT_1,FUNCT_3,NATTRA_1,RELAT_1,TARSKI,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
registrations RELSET_1,FUNCT_2,STRUCT_0;
constructors PARTFUN1,NATTRA_1,FUNCOP_1,RELSET_1,CKB11,CKB18,CKB25,CKB26;
requirements SUBSET,BOOLE;
begin
reserve A for Category;
reserve B for Category;
reserve C for Category;
reserve G for (Functor of B,C);
definition
let A;
let B;
let C;
let F1 being (Functor of A,B);
let F2 being (Functor of A,B);
let t being (natural_transformation of F1,F2);
let G being (Functor of B,C);
assume that
A1: F1 is_naturally_transformable_to F2;
func G * t -> (natural_transformation of ( G * F1 ),( G * F2 )) equals 
:Def7: ( G * t );
coherence
proof
A2: F1 is_transformable_to F2 by A1,NATTRA_1:def 7;
( G * t ) is (natural_transformation of ( G * F1 ),( G * F2 ))
proof
thus ( G * F1 ) is_naturally_transformable_to ( G * F2 ) by A1,CKB29:1;
then A3: ( G * F1 ) is_transformable_to ( G * F2 ) by NATTRA_1:def 7;
let a being (Object of A);
let b being (Object of A);
assume that
A4: ( Hom (a,b) ) <> ( {} );
A5: ( Hom (( ( G * F1 ) . a ),( ( G * F1 ) . b )) ) <> ( {} ) by A4,CAT_1:84;
A6: ( Hom (( ( G * F2 ) . a ),( ( G * F2 ) . b )) ) <> ( {} ) by A4,CAT_1:84;
A7: ( Hom (( ( G * F1 ) . a ),( ( G * F2 ) . a )) ) <> ( {} ) by A3,NATTRA_1:def 2;
let f being (Morphism of a,b);
A8: ( Hom (( F1 . b ),( F2 . b )) ) <> ( {} ) by A2,NATTRA_1:def 2;
then A9: ( Hom (( G . ( F1 . b ) ),( G . ( F2 . b ) )) ) <> ( {} ) by CAT_1:84;
A10: ( Hom (( F1 . a ),( F2 . a )) ) <> ( {} ) by A2,NATTRA_1:def 2;
then A11: ( Hom (( G . ( F1 . a ) ),( G . ( F2 . a ) )) ) <> ( {} ) by CAT_1:84;
A12: ( Hom (( F2 . a ),( F2 . b )) ) <> ( {} ) by A4,CAT_1:84;
then A13: ( Hom (( G . ( F2 . a ) ),( G . ( F2 . b ) )) ) <> ( {} ) by CAT_1:84;
A14: ( Hom (( F1 . a ),( F1 . b )) ) <> ( {} ) by A4,CAT_1:84;
then A15: ( Hom (( G . ( F1 . a ) ),( G . ( F1 . b ) )) ) <> ( {} ) by CAT_1:84;
( Hom (( ( G * F1 ) . b ),( ( G * F2 ) . b )) ) <> ( {} ) by A3,NATTRA_1:def 2;
hence ( ( ( G * t ) . b ) * ( ( G * F1 ) . f ) ) = ( ( ( G * t ) . b ) * (( ( G * F1 ) . f ) qua (Morphism of C)) ) by A5,CAT_1:def 10
.= ( ( ( G * t ) . b ) * ( G . ( F1 . f ) ) ) by A4,NATTRA_1:11
.= ( (( G . ( t . b ) ) qua (Morphism of C)) * ( G . ( F1 . f ) ) ) by A2,CKB28:1
.= ( ( G . ( t . b ) ) * ( G . ( F1 . f ) ) ) by A9,A15,CAT_1:def 10
.= ( G . ( ( t . b ) * ( F1 . f ) ) ) by A8,A14,NATTRA_1:13
.= ( G . ( ( F2 . f ) * ( t . a ) ) ) by A1,A4,NATTRA_1:def 8
.= ( ( G . ( F2 . f ) ) * ( G . ( t . a ) ) ) by A10,A12,NATTRA_1:13
.= ( ( G . ( F2 . f ) ) * (( G . ( t . a ) ) qua (Morphism of C)) ) by A13,A11,CAT_1:def 10
.= ( ( G . ( F2 . f ) ) * ( ( G * t ) . a ) ) by A2,CKB28:1
.= ( (( ( G * F2 ) . f ) qua (Morphism of C)) * ( ( G * t ) . a ) ) by A4,NATTRA_1:11
.= ( ( ( G * F2 ) . f ) * ( ( G * t ) . a ) ) by A7,A6,CAT_1:def 10;
end;
hence thesis;
end;
correctness;
end;
