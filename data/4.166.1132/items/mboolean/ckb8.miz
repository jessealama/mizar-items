environ
vocabularies PBOOLE,ZFMISC_1,FUNCT_1,RELAT_1,XBOOLE_0,FUNCT_4,FUNCOP_1,TARSKI,FUNCT_2,FINSET_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,FUNCT_1,FUNCT_2,FINSET_1,FUNCT_4,FUNCOP_1,PBOOLE,CKB1;
definitions PBOOLE,FUNCOP_1,CKB1;
theorems CARD_2,SETFAM_1,FUNCOP_1,FRAENKEL,FUNCT_4,PBOOLE,FINSET_1,TARSKI,ZFMISC_1,XBOOLE_0,XBOOLE_1,PARTFUN1,RELAT_1,FUNCT_1,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7;
schemes PBOOLE;
registrations XBOOLE_0,SUBSET_1,FUNCOP_1,PRE_CIRC,CKB2;
constructors FUNCT_4,PBOOLE,FINSET_1,RELSET_1,CKB1;
requirements SUBSET,BOOLE;
begin
reserve I for set;
reserve A for (ManySortedSet of I);
reserve X for (ManySortedSet of I);
reserve Y for (ManySortedSet of I);
theorem
Th1: (X = ( bool Y ) iff (for A holds (A in X iff A c= Y)))
proof
thus (X = ( bool Y ) implies (for A holds (A in X iff A c= Y)))
proof
assume A1: X = ( bool Y );
let A;
thus (A in X implies A c= Y)
proof
assume A2: A in X;
let i being set;
assume A3: i in I;
then A4: ( A . i ) in ( X . i ) by A2,PBOOLE:def 1;
( X . i ) = ( bool ( Y . i ) ) by A1,A3,CKB1:def 1;
hence thesis by A4;
end;

assume A5: A c= Y;
let i being set;
assume A6: i in I;
then A7: ( A . i ) c= ( Y . i ) by A5,PBOOLE:def 2;
( X . i ) = ( bool ( Y . i ) ) by A1,A6,CKB1:def 1;
hence thesis by A7;
end;

assume A8: (for A holds (A in X iff A c= Y));
now
let i being set;
assume that
A9: i in I;
( [[0]] I ) c= Y by PBOOLE:43;
then A10: ( [[0]] I ) in X by A8;
(for A9 being set holds (A9 in ( X . i ) iff A9 c= ( Y . i )))
proof
let A9 being set;
A11: ( dom ( i .--> A9 ) ) = { i } by FUNCOP_1:13;
( dom ( ( [[0]] I ) +* ( i .--> A9 ) ) ) = I by A9,CKB3:1;
then reconsider K = ( ( [[0]] I ) +* ( i .--> A9 ) ) as (ManySortedSet of I) by PARTFUN1:def 2,RELAT_1:def 18;
i in { i } by TARSKI:def 1;
then A12: ( K . i ) = ( ( i .--> A9 ) . i ) by A11,FUNCT_4:13
.= A9 by FUNCOP_1:72;
thus (A9 in ( X . i ) implies A9 c= ( Y . i ))
proof
assume A13: A9 in ( X . i );
K in X
proof
let j being set;
assume that
A14: j in I;
now
per cases ;
case j = i;
hence thesis by A12,A13;
end;
case j <> i;
then (not j in ( dom ( i .--> A9 ) )) by A11,TARSKI:def 1;
then ( K . j ) = ( ( [[0]] I ) . j ) by FUNCT_4:11;
hence thesis by A10,A14,PBOOLE:def 1;
end;
end;
hence thesis;
end;
then K c= Y by A8;
hence thesis by A9,A12,PBOOLE:def 2;
end;

assume A15: A9 c= ( Y . i );
K c= Y
proof
let j being set;
assume that
A16: j in I;
now
per cases ;
case j = i;
hence thesis by A12,A15;
end;
case j <> i;
then (not j in ( dom ( i .--> A9 ) )) by A11,TARSKI:def 1;
then A17: ( K . j ) = ( ( [[0]] I ) . j ) by FUNCT_4:11;
( [[0]] I ) c= Y by PBOOLE:43;
hence thesis by A16,A17,PBOOLE:def 2;
end;
end;
hence thesis;
end;
then K in X by A8;
hence thesis by A9,A12,PBOOLE:def 1;
end;
then ( X . i ) = ( bool ( Y . i ) ) by ZFMISC_1:def 1;
hence ( X . i ) = ( ( bool Y ) . i ) by A9,CKB1:def 1;
end;
hence thesis by PBOOLE:3;
end;
