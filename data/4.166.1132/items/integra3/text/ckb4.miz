environ
vocabularies FINSEQ_1,ARYTM_1,INTEGRA1,RELAT_1,ORDINAL2,FUNCT_1,CARD_1,FUNCT_3,SEQ_2,JORDAN3,RFINSEQ,INTEGRA2,FDIFF_1,ARYTM_3,SEQ_4,CLASSES1,VALUED_0,XBOOLE_0,NUMBERS,MEASURE7,XREAL_0,REAL_1,SUBSET_1,XXREAL_2,ORDINAL1,XXREAL_0,NAT_1,TARSKI,ORDINAL4,COMPLEX1,CARD_3,XXREAL_1,PARTFUN1,SEQ_1,MEASURE5;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,CARD_1,NUMBERS,XXREAL_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,NAT_D,RELAT_1,FUNCT_1,FUNCT_2,XXREAL_2,SEQ_4,VALUED_0,PARTFUN1,MEASURE6,FINSEQ_1,RFUNCT_1,RVSUM_1,INTEGRA1,SEQ_1,SEQ_2,FINSEQ_6,RCOMP_1,FDIFF_1,SQUARE_1,CLASSES1,RFINSEQ,MEASURE5,INTEGRA2,CKB3;
definitions TARSKI,RVSUM_1,CKB3;
theorems SEQ_4,SUBSET_1,PARTFUN1,INTEGRA1,RFUNCT_1,FUNCT_1,FINSEQ_1,RVSUM_1,SEQ_1,SEQ_2,FDIFF_1,ABSVALUE,NAT_1,RFINSEQ,TARSKI,FINSEQ_5,FINSEQ_3,FINSEQ_4,FINSEQ_6,INTEGRA2,RELAT_1,XREAL_0,FUNCT_2,XBOOLE_0,XBOOLE_1,XREAL_1,COMPLEX1,XXREAL_0,FINSOP_1,ORDINAL1,XXREAL_2,SEQM_3,CLASSES1,MEASURE5,CKB1,CKB2,CKB3;
schemes FINSEQ_2,NAT_1,SEQ_1;
registrations XBOOLE_0,RELAT_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,SEQM_3,INTEGRA1,INTEGRA2,VALUED_0,FUNCT_2,FINSET_1,XXREAL_2,CARD_1,SEQ_2,MEASURE5;
constructors PARTFUN1,REAL_1,SQUARE_1,NAT_1,COMPLEX1,FINSOP_1,RFUNCT_1,FDIFF_1,RFINSEQ,BINARITH,MEASURE6,FINSEQ_6,INTEGRA2,SEQ_1,BINOP_2,XXREAL_2,NAT_D,RVSUM_1,CLASSES1,SEQ_4,RELSET_1,SEQ_2,CKB3;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve i for (Element of ( NAT ));
reserve A for non  empty  closed_interval (Subset of ( REAL ));
reserve T for (DivSequence of A);
definition
let A being non  empty  closed_interval (Subset of ( REAL ));
let T being (DivSequence of A);
func delta T -> Real_Sequence means 
:Def2: (for i holds ( it . i ) = ( delta ( T . i ) ));
existence
proof
deffunc F((Element of ( NAT ))) = ( delta ( T . $1 ) );
thus (ex IT being Real_Sequence st (for i holds ( IT . i ) = F(i))) from SEQ_1:sch 1;
end;
uniqueness
proof
let F1 being Real_Sequence;
let F2 being Real_Sequence;
assume that
A1: (for i holds ( F1 . i ) = ( delta ( T . i ) ))
and
A2: (for i holds ( F2 . i ) = ( delta ( T . i ) ));
(for i holds ( F1 . i ) = ( F2 . i ))
proof
let i;
( F1 . i ) = ( delta ( T . i ) ) by A1
.= ( F2 . i ) by A2;
hence thesis;
end;
hence thesis by FUNCT_2:63;
end;
end;
