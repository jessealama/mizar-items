environ
vocabularies STRUCT_0,XBOOLE_0,MSUALG_1,FUNCT_1,RELAT_1,PBOOLE,FUNCOP_1,EQREL_1,SUBSET_1,NAT_1,MARGREL1,PARTFUN1,FINSEQ_1,TARSKI,CARD_3,MSUALG_3,WELLORD1,MSUALG_4;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,EQREL_1,STRUCT_0,NAT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,CARD_3,PBOOLE,FUNCOP_1,MSUALG_1,MSUALG_3,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB20,CKB21,CKB22;
definitions TARSKI,MSUALG_3,XBOOLE_0,FUNCOP_1,CKB2,CKB5,CKB8,CKB11,CKB15,CKB16,CKB20,CKB21,CKB22;
theorems FUNCT_1,FUNCT_2,PBOOLE,CARD_3,MSUALG_1,ZFMISC_1,RELAT_1,RELSET_1,EQREL_1,MSUALG_3,MSAFREE,TARSKI,XBOOLE_0,FUNCOP_1,ORDINAL1,PARTFUN1,FINSEQ_2,CKB2,CKB5,CKB8,CKB10,CKB11,CKB15,CKB16,CKB20,CKB21,CKB22;
schemes FUNCT_1,CLASSES1,EQREL_1;
registrations RELAT_1,FUNCT_1,PARTFUN1,FUNCOP_1,PBOOLE,STRUCT_0,MSUALG_1,MSUALG_3,CARD_3,RELSET_1,FINSEQ_2,FINSEQ_1,CKB1,CKB3,CKB9,CKB12,CKB18,CKB19;
constructors EQREL_1,PRALG_2,MSUALG_3,RELSET_1,CKB2,CKB5,CKB6,CKB8,CKB11,CKB14,CKB15,CKB16,CKB17,CKB20,CKB21,CKB22;
requirements SUBSET,BOOLE;
begin
reserve S for non void non empty ManySortedSign;
definition
let S;
let A being  non-empty MSAlgebra over S;
let R being (MSCongruence of A);
func QuotRes R -> (ManySortedFunction of ( (the Sorts of A) * (the ResultSort of S) ),( ( Class R ) * (the ResultSort of S) ))
means
(for o being (OperSymbol of S) holds ( it . o ) = ( QuotRes (R,o) ));
existence
proof
defpred P[ set,set ]
 means
(for o being (OperSymbol of S) holds (o = $1 implies $2 = ( QuotRes (R,o) )));
set O = (the carrier' of S);
A1: (for x being set holds (x in O implies (ex y being set st P[ x,y ])))
proof
let x being set;
assume x in O;
then reconsider x1 = x as (OperSymbol of S);
take ( QuotRes (R,x1) );
thus thesis;
end;
consider f being Function such that A2: (( dom f ) = O & (for x being set holds (x in O implies P[ x,( f . x ) ]))) from CLASSES1:sch 1(A1);
reconsider f as (ManySortedSet of O) by A2,PARTFUN1:def 2,RELAT_1:def 18;
(for x being set holds (x in ( dom f ) implies ( f . x ) is Function))
proof
let x being set;
assume x in ( dom f );
then reconsider x1 = x as (OperSymbol of S) by A2;
( f . x1 ) = ( QuotRes (R,x1) ) by A2;
hence thesis;
end;
then reconsider f as (ManySortedFunction of O) by FUNCOP_1:def 6;
(for i being set holds (i in O implies ( f . i ) is (Function of ( ( (the Sorts of A) * (the ResultSort of S) ) . i ),( ( ( Class R ) * (the ResultSort of S) ) . i ))))
proof
let i being set;
assume i in O;
then reconsider i1 = i as (OperSymbol of S);
( f . i1 ) = ( QuotRes (R,i1) ) by A2;
hence thesis;
end;
then reconsider f as (ManySortedFunction of ( (the Sorts of A) * (the ResultSort of S) ),( ( Class R ) * (the ResultSort of S) )) by PBOOLE:def 15;
take f;
thus thesis by A2;
end;
uniqueness
proof
let f being (ManySortedFunction of ( (the Sorts of A) * (the ResultSort of S) ),( ( Class R ) * (the ResultSort of S) )),g being (ManySortedFunction of ( (the Sorts of A) * (the ResultSort of S) ),( ( Class R ) * (the ResultSort of S) ));
assume that
A3: (for o being (OperSymbol of S) holds ( f . o ) = ( QuotRes (R,o) ))
and
A4: (for o being (OperSymbol of S) holds ( g . o ) = ( QuotRes (R,o) ));
now
let i being set;
assume i in (the carrier' of S);
then reconsider i1 = i as (OperSymbol of S);
( f . i1 ) = ( QuotRes (R,i1) ) by A3;
hence ( f . i ) = ( g . i ) by A4;
end;
hence thesis by PBOOLE:3;
end;
end;
