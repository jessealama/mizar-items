environ
vocabularies ORDINAL1,SUBSET_1,NUMBERS,XBOOLE_0,SETFAM_1,SCMFSA7B,FUNCSDOM,AMI_3,AMI_1,FSM_1,STRUCT_0,AMI_2,FUNCT_1,TARSKI,RELAT_1,AMISTD_2,ARYTM_3,FUNCT_4,CIRCUIT2,CARD_1,GRAPHSP,ARYTM_1,SUPINF_2,FUNCOP_1,ZFMISC_1,PARTFUN1,SCMNORM,RELOC,NAT_1,AMISTD_5,COMPOS_1,PBOOLE,FINSET_1;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,DOMAIN_1,ORDINAL1,RELAT_1,FINSET_1,NUMBERS,FUNCT_1,PARTFUN1,STRUCT_0,ALGSTR_0,FUNCSDOM,FUNCOP_1,XCMPLX_0,NAT_1,FUNCT_4,FUNCT_7,NAT_D,VALUED_1,PBOOLE,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,AMI_3,SCMRING1,SCMRING2,SCMRING3,AMISTD_2,AMISTD_5;
definitions FUNCT_1,EXTPRO_1,FUNCOP_1,AMI_3,AMI_2,AMISTD_1,AMISTD_2,NAT_1,COMPOS_1,AMISTD_5,STRUCT_0,MEMSTR_0;
theorems TARSKI,NAT_1,SCMRING2,AMI_3,FUNCT_4,FUNCT_1,ZFMISC_1,FUNCOP_1,SCMRING1,AMI_2,STRUCT_0,XBOOLE_0,XBOOLE_1,RELAT_1,GRFUNC_1,SCMRING3,AMISTD_2,PBOOLE,SUBSET_1,PARTFUN1,ORDINAL1,COMPOS_1,EXTPRO_1,AMISTD_5,MEMSTR_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
schemes NAT_1;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,FUNCOP_1,XREAL_0,NAT_1,CARD_3,STRUCT_0,AMI_3,SCMRING2,AMISTD_2,SCMRING3,FINSET_1,ORDINAL1,RELSET_1,GRFUNC_1,FUNCT_2,VALUED_1,FUNCT_4,COMPOS_1,EXTPRO_1,AMISTD_5,AMI_5,PBOOLE,PRE_POLY,FUNCT_7,ZFMISC_1,SUBSET_1,MEMSTR_0,NUMBERS,INT_1,CARD_1,AMI_2;
constructors XXREAL_0,REALSET2,AMI_3,AMISTD_2,SCMRING3,PRE_POLY,NAT_D,AMISTD_1,AMISTD_5,PBOOLE,INT_3,FUNCT_7,RELSET_1,MEMSTR_0;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve R for non trivial  good Ring;
registration
let R;
cluster ( SCM R ) ->  relocable;
coherence
proof
let INS being (Instruction of ( SCM R ));
let j being Nat,k being Nat;
reconsider k as (Element of ( NAT )) by ORDINAL1:def 12;
let s being (State of ( SCM R ));
A1: ( IC ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) ) = ( ( IC ( Exec (( IncAddr (INS,j) ),s) ) ) + k ) by MEMSTR_0:53
.= ( IC ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) ) by AMISTD_2:def 3;
per cases  by NAT_1:31,SCMRING3:39;
suppose ( InsCode INS ) = ( 0 );

then A3: INS = ( halt ( SCM R ) ) by SCMRING3:12;
( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) = ( IncIC (s,k) ) by A3,EXTPRO_1:def 3
.= ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) by A3,EXTPRO_1:def 3;
hence thesis;
end;
suppose ( InsCode INS ) = 1;

then consider da being (Data-Location of R),db being (Data-Location of R) such that A4: INS = ( da := db ) by SCMRING3:13;
now
let d being (Data-Location of R);
per cases ;
suppose A5: da = d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A4,COMPOS_1:11
.= ( ( IncIC (s,k) ) . db ) by A4,A5,SCMRING2:11
.= ( s . db ) by CKB5:1
.= ( ( Exec (INS,s) ) . d ) by A4,A5,SCMRING2:11
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A4,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by CKB5:1;
end;
suppose A6: da <> d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A4,COMPOS_1:11
.= ( ( IncIC (s,k) ) . d ) by A4,A6,SCMRING2:11
.= ( s . d ) by CKB5:1
.= ( ( Exec (INS,s) ) . d ) by A4,A6,SCMRING2:11
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A4,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by CKB5:1;
end;
end;
hence thesis by CKB6:1,A1;
end;
suppose ( InsCode INS ) = 2;

then consider da being (Data-Location of R),db being (Data-Location of R) such that A7: INS = ( AddTo (da,db) ) by SCMRING3:14;
now
let d being (Data-Location of R);
per cases ;
suppose A8: da = d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A7,COMPOS_1:11
.= ( ( ( IncIC (s,k) ) . da ) + ( ( IncIC (s,k) ) . db ) ) by A8,A7,SCMRING2:12
.= ( ( s . da ) + ( ( IncIC (s,k) ) . db ) ) by CKB5:1
.= ( ( s . da ) + ( s . db ) ) by CKB5:1
.= ( ( Exec (INS,s) ) . d ) by A7,A8,SCMRING2:12
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A7,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by CKB5:1;
end;
suppose A9: da <> d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A7,COMPOS_1:11
.= ( ( IncIC (s,k) ) . d ) by A7,A9,SCMRING2:12
.= ( s . d ) by CKB5:1
.= ( ( Exec (INS,s) ) . d ) by A7,A9,SCMRING2:12
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A7,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by CKB5:1;
end;
end;
hence thesis by CKB6:1,A1;
end;
suppose ( InsCode INS ) = 3;

then consider da being (Data-Location of R),db being (Data-Location of R) such that A10: INS = ( SubFrom (da,db) ) by SCMRING3:15;
now
let d being (Data-Location of R);
per cases ;
suppose A11: da = d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A10,COMPOS_1:11
.= ( ( ( IncIC (s,k) ) . da ) - ( ( IncIC (s,k) ) . db ) ) by A11,A10,SCMRING2:13
.= ( ( s . da ) - ( ( IncIC (s,k) ) . db ) ) by CKB5:1
.= ( ( s . da ) - ( s . db ) ) by CKB5:1
.= ( ( Exec (INS,s) ) . d ) by A10,A11,SCMRING2:13
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A10,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by CKB5:1;
end;
suppose A12: da <> d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A10,COMPOS_1:11
.= ( ( IncIC (s,k) ) . d ) by A10,A12,SCMRING2:13
.= ( s . d ) by CKB5:1
.= ( ( Exec (INS,s) ) . d ) by A10,A12,SCMRING2:13
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A10,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by CKB5:1;
end;
end;
hence thesis by CKB6:1,A1;
end;
suppose ( InsCode INS ) = 4;

then consider da being (Data-Location of R),db being (Data-Location of R) such that A13: INS = ( MultBy (da,db) ) by SCMRING3:16;
now
let d being (Data-Location of R);
per cases ;
suppose A14: da = d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A13,COMPOS_1:11
.= ( ( ( IncIC (s,k) ) . da ) * ( ( IncIC (s,k) ) . db ) ) by A14,A13,SCMRING2:14
.= ( ( s . da ) * ( ( IncIC (s,k) ) . db ) ) by CKB5:1
.= ( ( s . da ) * ( s . db ) ) by CKB5:1
.= ( ( Exec (INS,s) ) . d ) by A13,A14,SCMRING2:14
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A13,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by CKB5:1;
end;
suppose A15: da <> d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A13,COMPOS_1:11
.= ( ( IncIC (s,k) ) . d ) by A13,A15,SCMRING2:14
.= ( s . d ) by CKB5:1
.= ( ( Exec (INS,s) ) . d ) by A13,A15,SCMRING2:14
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A13,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by CKB5:1;
end;
end;
hence thesis by CKB6:1,A1;
end;
suppose ( InsCode INS ) = 5;

then consider da being (Data-Location of R),r being (Element of R) such that A16: INS = ( da := r ) by SCMRING3:17;
now
let d being (Data-Location of R);
per cases ;
suppose A17: da = d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A16,COMPOS_1:11
.= r by A17,A16,SCMRING2:17
.= ( ( Exec (INS,s) ) . d ) by A16,A17,SCMRING2:17
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A16,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by CKB5:1;
end;
suppose A18: da <> d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A16,COMPOS_1:11
.= ( ( IncIC (s,k) ) . d ) by A16,A18,SCMRING2:17
.= ( s . d ) by CKB5:1
.= ( ( Exec (INS,s) ) . d ) by A16,A18,SCMRING2:17
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A16,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by CKB5:1;
end;
end;
hence thesis by CKB6:1,A1;
end;
suppose ( InsCode INS ) = 6;

then consider loc being (Element of ( NAT )) such that A19: INS = ( goto (loc,R) ) by SCMRING3:18;
A20: ( IncAddr (INS,( j + k )) ) = ( goto (( loc + ( j + k ) ),R) ) by A19,SCMRING3:37;
A21: ( IncAddr (INS,j) ) = ( goto (( loc + j ),R) ) by A19,SCMRING3:37;
now
let d being (Data-Location of R);
thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( IncIC (s,k) ) . d ) by A20,SCMRING2:15
.= ( s . d ) by CKB5:1
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A21,SCMRING2:15
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by CKB5:1;
end;
hence thesis by CKB6:1,A1;
end;
suppose ( InsCode INS ) = 7;

then consider da being (Data-Location of R),loc being (Element of ( NAT )) such that A22: INS = ( da =0_goto loc ) by SCMRING3:19;
A23: ( IncAddr (INS,( j + k )) ) = ( da =0_goto ( loc + ( j + k ) ) ) by A22,SCMRING3:38;
A24: ( IncAddr (INS,j) ) = ( da =0_goto ( loc + j ) ) by A22,SCMRING3:38;
now
let d being (Data-Location of R);
thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( IncIC (s,k) ) . d ) by A23,SCMRING2:16
.= ( s . d ) by CKB5:1
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A24,SCMRING2:16
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by CKB5:1;
end;
hence thesis by A1,CKB6:1;
end;
end;
end;
