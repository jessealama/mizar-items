environ
vocabularies NUMBERS,XBOOLE_0,RLVECT_1,SUBSET_1,REAL_1,RELAT_1,RLSUB_1,IDEAL_1,ARYTM_3,STRUCT_0,RSSPACE,FUNCT_1,ZFMISC_1,TARSKI,BINOP_1,SUPINF_2,ALGSTR_0,REALSET1,XREAL_0,ORDINAL1,FUNCT_7,PARTFUN1,VALUED_1,FUNCOP_1,CARD_1,RFUNCT_3,ARYTM_1,PROB_1,MEASURE1,INTEGRA5,MESFUNC5,MESFUNC2,XXREAL_0,MESFUNC1,SUPINF_1,MEASURE6,VECTSP10,SETFAM_1,COMPLEX1,PRE_TOPC,NORMSP_1,LPSPACE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,XCMPLX_0,NUMBERS,COMPLEX1,XXREAL_0,XREAL_0,SUPINF_1,SUPINF_2,EXTREAL1,REALSET1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,VALUED_1,RFUNCT_3,BINOP_1,FUNCOP_1,REAL_1,STRUCT_0,ALGSTR_0,RLVECT_1,RLSUB_1,IDEAL_1,SETFAM_1,DOMAIN_1,PRE_TOPC,NORMSP_0,NORMSP_1,PROB_1,MEASURE1,MEASURE2,MEASURE3,MEASURE6,MESFUNC1,MESFUNC2,MESFUNC5,MESFUNC6,FUNCT_7,CKB1,CKB4;
definitions TARSKI,SUPINF_2,REALSET1,BINOP_1,STRUCT_0,ALGSTR_0,RLVECT_1,IDEAL_1,NORMSP_1,MEASURE6,MESFUNC5,MESFUNC6,SUBSET_1,XXREAL_3,NORMSP_0,CKB1,CKB4;
theorems FUNCT_1,FUNCT_2,PARTFUN1,COMPLEX1,XBOOLE_0,TARSKI,RELAT_1,VALUED_1,IDEAL_1,RLSUB_1,ZFMISC_1,RLVECT_1,FUNCOP_1,XBOOLE_1,BINOP_1,SUPINF_2,RFUNCT_3,MESFUNC5,MESFUNC2,EXTREAL1,MEASURE1,MESFUNC6,PROB_1,RFUNCT_1,XXREAL_0,NUMBERS,ABSVALUE,MESFUNC1,MEASURE2,MESFUNC7,EXTREAL2,RSSPACE3,NORMSP_1,FUNCT_7,VALUED_0,RELSET_1,XXREAL_3,XREAL_0,NORMSP_0,CKB1,CKB2,CKB4;
schemes BINOP_1,FUNCT_2;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XREAL_0,MEMBERED,VALUED_0,NAT_1,SUBSET_1,XCMPLX_0,PARTFUN1,XXREAL_0,RLVECT_1,STRUCT_0,NORMSP_1,MEASURE1,MESFUNC7,XXREAL_3,NORMSP_0,CKB3;
constructors COMPLEX1,EXTREAL1,NAT_1,BINOP_1,REAL_1,RLSUB_1,IDEAL_1,NORMSP_1,MEASURE3,MEASURE6,MESFUNC2,MESFUNC5,MESFUNC6,MESFUNC7,SEQ_1,MESFUNC3,EXTREAL2,SUPINF_1,FUNCT_7,REALSET1,RVSUM_1,MESFUNC1,SEQ_2,RELSET_1,BINOP_2,CKB1,CKB4;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
reserve a for Real;
theorem
Th2: (for V being  Abelian  add-associative  right_zeroed  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty RLSStruct holds (for V1 being non  empty (Subset of V) holds (for d1 being (Element of V1) holds (for A being (BinOp of V1) holds (for M being (Function of [: ( REAL ),V1 :],V1) holds (((d1 = ( 0. V ) & A = ( (the addF of V) || V1 )) & M = ( (the Mult of V) | [: ( REAL ),V1 :] )) implies RLSStruct (# V1,d1,A,M #) is  Abelian  add-associative  right_zeroed  vector-distributive  scalar-distributive  scalar-associative  scalar-unital))))))
proof
let V being  Abelian  add-associative  right_zeroed  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty RLSStruct;
let V1 being non  empty (Subset of V);
let d1 being (Element of V1);
let A being (BinOp of V1);
let M being (Function of [: ( REAL ),V1 :],V1);
set D = V1;
assume that
A1: d1 = ( 0. V )
and
A2: A = ( (the addF of V) || V1 )
and
A3: M = ( (the Mult of V) | [: ( REAL ),V1 :] );
set W = RLSStruct (# D,d1,A,M #);
A4:now
let a;
let x being (VECTOR of W);
thus ( a * x ) = ( (the Mult of V) . [ a,x ] ) by A3,FUNCT_1:49
.= ( (the Mult of V) . (a,x) );
end;
A5:now
let x being (VECTOR of W);
let y being (VECTOR of W);
thus ( x + y ) = ( (the addF of V) . [ x,y ] ) by A2,FUNCT_1:49
.= ( (the addF of V) . (x,y) );
end;
W is  Abelian  add-associative  right_zeroed  vector-distributive  scalar-distributive  scalar-associative  scalar-unital
proof
set Mv = (the Mult of V);
set Av = (the addF of V);
hereby
let x being (VECTOR of W);
let y being (VECTOR of W);
reconsider x1 = x,y1 = y as (VECTOR of V) by TARSKI:def 3;
thus ( x + y ) = ( x1 + y1 ) by A5
.= ( y1 + x1 )
.= ( y + x ) by A5;
end;
now
let x being (VECTOR of W);
let y being (VECTOR of W);
let z being (VECTOR of W);
reconsider x1 = x,y1 = y,z1 = z as (VECTOR of V) by TARSKI:def 3;
thus ( ( x + y ) + z ) = ( Av . (( x + y ),z1) ) by A5
.= ( ( x1 + y1 ) + z1 ) by A5
.= ( x1 + ( y1 + z1 ) ) by RLVECT_1:def 3
.= ( Av . (x1,( y + z )) ) by A5
.= ( x + ( y + z ) ) by A5;
end;
hence W is  add-associative by RLVECT_1:def 3;
now
let x being (VECTOR of W);
reconsider y = x as (VECTOR of V) by TARSKI:def 3;
thus ( x + ( 0. W ) ) = ( y + ( 0. V ) ) by A1,A5
.= x by RLVECT_1:def 4;
end;
hence W is  right_zeroed by RLVECT_1:def 4;
hereby
let a1 being  real number;
let x being (VECTOR of W);
let y being (VECTOR of W);
reconsider a = a1 as Real by XREAL_0:def 1;
reconsider x1 = x,y1 = y as (VECTOR of V) by TARSKI:def 3;
( a * ( x + y ) ) = ( Mv . (a,( x + y )) ) by A4
.= ( a * ( x1 + y1 ) ) by A5
.= ( ( a * x1 ) + ( a * y1 ) ) by RLVECT_1:def 5
.= ( Av . (( Mv . (a,x1) ),( a * y )) ) by A4
.= ( Av . (( a * x ),( a * y )) ) by A4
.= ( ( a * x ) + ( a * y ) ) by A5;
hence ( a1 * ( x + y ) ) = ( ( a1 * x ) + ( a1 * y ) );
end;
hereby
let a1 being  real number;
let b1 being  real number;
let x being (VECTOR of W);
reconsider a = a1,b = b1 as Real by XREAL_0:def 1;
reconsider y = x as (VECTOR of V) by TARSKI:def 3;
( ( a + b ) * x ) = ( ( a + b ) * y ) by A4
.= ( ( a * y ) + ( b * y ) ) by RLVECT_1:def 6
.= ( Av . (( Mv . (a,y) ),( b * x )) ) by A4
.= ( Av . (( a * x ),( b * x )) ) by A4
.= ( ( a * x ) + ( b * x ) ) by A5;
hence ( ( a1 + b1 ) * x ) = ( ( a1 * x ) + ( b1 * x ) );
end;
hereby
let a1 being  real number;
let b1 being  real number;
let x being (VECTOR of W);
reconsider a = a1,b = b1 as Real by XREAL_0:def 1;
reconsider y = x as (VECTOR of V) by TARSKI:def 3;
( ( a * b ) * x ) = ( ( a * b ) * y ) by A4
.= ( a * ( b * y ) ) by RLVECT_1:def 7
.= ( Mv . (a,( b * x )) ) by A4
.= ( a * ( b * x ) ) by A4;
hence ( ( a1 * b1 ) * x ) = ( a1 * ( b1 * x ) );
end;
let x being (VECTOR of W);
reconsider y = x as (VECTOR of V) by TARSKI:def 3;
thus ( 1 * x ) = ( 1 * y ) by A4
.= x by RLVECT_1:def 8;
end;
hence thesis;
end;
