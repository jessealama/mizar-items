environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,MATRIX_1,FINSEQ_3,RELAT_1,FINSEQ_1,TARSKI,ARYTM_3,XXREAL_0,CARD_1,TREES_1,FUNCT_1,INCSP_1,ORDINAL4,SUBSET_1,VECTSP_1,RLVECT_2,RLVECT_3,CARD_3,ARYTM_1,SUPINF_2,RLVECT_5,FINSET_1,STRUCT_0,RLSUB_1,ALGSTR_0,PARTFUN1,RLVECT_1,ZFMISC_1,QC_LANG1,FUNCT_2,VALUED_1,PRE_POLY,FINSEQ_2,RVSUM_1,FINSEQ_4,FVSUM_1,MATRLIN,MSSUBFAM,UNIALG_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,MOD_2,FINSEQ_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_3,STRUCT_0,ALGSTR_0,MATRIX_1,MATRIX_3,FVSUM_1,RLVECT_1,VECTSP_1,VECTSP_4,VECTSP_6,VECTSP_7,FINSET_1,FINSEQ_3,FINSEQ_2,FINSEQOP,BINOP_1,XXREAL_0,PRE_POLY,GRCAT_1,CKB1,CKB6,CKB11,CKB13,CKB14,CKB15,CKB19,CKB21,CKB33,CKB34;
definitions TARSKI,FVSUM_1,FUNCOP_1,ALGSTR_0,PRE_POLY,CKB11,CKB13,CKB14,CKB15,CKB19,CKB21;
theorems TARSKI,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,VECTSP_1,VECTSP_4,VECTSP_6,VECTSP_7,RLVECT_1,FUNCT_1,FUNCT_2,FUNCT_3,MATRIX_1,MATRIX_2,MATRIX_3,MOD_2,ZFMISC_1,NAT_1,FVSUM_1,SUBSET_1,FINSEQOP,FUNCOP_1,RELAT_1,PARTFUN2,XBOOLE_0,XBOOLE_1,RLVECT_2,ORDINAL1,PARTFUN1,PRE_POLY,GRCAT_1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40;
schemes FINSEQ_1,FINSEQ_2,FUNCT_2,MATRIX_1,NAT_1,FINSEQ_4;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,STRUCT_0,VECTSP_1,MATRIX_1,CARD_1,VECTSP_7,MOD_2,GRCAT_1,PRE_POLY,RELAT_1,FUNCT_1,FINSEQ_4,CKB12,CKB32;
constructors PARTFUN1,BINOP_1,FUNCT_3,SQUARE_1,NAT_1,VECTSP_6,VECTSP_7,MOD_2,FVSUM_1,MATRIX_3,RELSET_1,PRE_POLY,GRCAT_1,CKB1,CKB6,CKB11,CKB13,CKB14,CKB15,CKB19,CKB21,CKB33,CKB34;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve i for Nat;
reserve K for Field;
reserve V1 for  finite-dimensional (VectSp of K);
theorem
Th33: (for M1,M2 being (Matrix of (the carrier of V1)) holds ( ( Sum M1 ) + ( Sum M2 ) ) = ( Sum ( M1 ^^ M2 ) ))
proof
let M1 being (Matrix of (the carrier of V1));
let M2 being (Matrix of (the carrier of V1));
reconsider m = ( min (( len M1 ),( len M2 )) ) as (Element of ( NAT )) by FINSEQ_2:1;
A1: ( Seg m ) = ( ( Seg ( len M1 ) ) /\ ( Seg ( len M2 ) ) ) by FINSEQ_2:2
.= ( ( Seg ( len M1 ) ) /\ ( dom M2 ) ) by FINSEQ_1:def 3
.= ( ( dom M1 ) /\ ( dom M2 ) ) by FINSEQ_1:def 3
.= ( dom ( M1 ^^ M2 ) ) by PRE_POLY:def 4
.= ( Seg ( len ( M1 ^^ M2 ) ) ) by FINSEQ_1:def 3;
A2: ( len ( ( Sum M1 ) + ( Sum M2 ) ) ) = ( min (( len ( Sum M1 ) ),( len ( Sum M2 ) )) ) by FINSEQ_2:71
.= ( min (( len M1 ),( len ( Sum M2 ) )) ) by CKB21:def 1
.= ( min (( len M1 ),( len M2 )) ) by CKB21:def 1
.= ( len ( M1 ^^ M2 ) ) by A1,FINSEQ_1:6
.= ( len ( Sum ( M1 ^^ M2 ) ) ) by CKB21:def 1;
A3: ( dom ( ( Sum M1 ) + ( Sum M2 ) ) ) = ( Seg ( len ( ( Sum M1 ) + ( Sum M2 ) ) ) ) by FINSEQ_1:def 3;
now
let i being Nat;
assume A4: i in ( dom ( ( Sum M1 ) + ( Sum M2 ) ) );
then A5: i in ( dom ( Sum ( M1 ^^ M2 ) ) ) by A2,A3,FINSEQ_1:def 3;
i in ( Seg ( len ( M1 ^^ M2 ) ) ) by A2,A3,A4,CKB21:def 1;
then A6: i in ( dom ( M1 ^^ M2 ) ) by FINSEQ_1:def 3;
then A7: i in ( ( dom M1 ) /\ ( dom M2 ) ) by PRE_POLY:def 4;
then A8: i in ( dom M1 ) by XBOOLE_0:def 4;
A9: i in ( dom M2 ) by A7,XBOOLE_0:def 4;
then reconsider m1 = ( M1 . i ),m2 = ( M2 . i ) as FinSequence by A8,PRE_POLY:def 3;
A10: ( ( M1 /. i ) ^ ( M2 /. i ) ) = ( m1 ^ ( M2 /. i ) ) by A8,PARTFUN1:def 6
.= ( m1 ^ m2 ) by A9,PARTFUN1:def 6
.= ( ( M1 ^^ M2 ) . i ) by A6,PRE_POLY:def 4
.= ( ( M1 ^^ M2 ) /. i ) by A6,PARTFUN1:def 6;
i in ( Seg ( len M2 ) ) by A9,FINSEQ_1:def 3;
then i in ( Seg ( len ( Sum M2 ) ) ) by CKB21:def 1;
then A11: i in ( dom ( Sum M2 ) ) by FINSEQ_1:def 3;
then A12: ( ( Sum M2 ) /. i ) = ( ( Sum M2 ) . i ) by PARTFUN1:def 6;
i in ( Seg ( len M1 ) ) by A8,FINSEQ_1:def 3;
then i in ( Seg ( len ( Sum M1 ) ) ) by CKB21:def 1;
then A13: i in ( dom ( Sum M1 ) ) by FINSEQ_1:def 3;
then ( ( Sum M1 ) /. i ) = ( ( Sum M1 ) . i ) by PARTFUN1:def 6;
hence ( ( ( Sum M1 ) + ( Sum M2 ) ) . i ) = ( ( ( Sum M1 ) /. i ) + ( ( Sum M2 ) /. i ) ) by A4,A12,FUNCOP_1:22
.= ( ( Sum ( M1 /. i ) ) + ( ( Sum M2 ) /. i ) ) by A13,CKB21:def 1
.= ( ( Sum ( M1 /. i ) ) + ( Sum ( M2 /. i ) ) ) by A11,CKB21:def 1
.= ( Sum ( ( M1 ^^ M2 ) /. i ) ) by A10,RLVECT_1:41
.= ( ( Sum ( M1 ^^ M2 ) ) /. i ) by A5,CKB21:def 1
.= ( ( Sum ( M1 ^^ M2 ) ) . i ) by A5,PARTFUN1:def 6;
end;
hence thesis by A2,FINSEQ_2:9;
end;
