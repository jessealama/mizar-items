environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,MATRIX_1,FINSEQ_3,RELAT_1,FINSEQ_1,TARSKI,ARYTM_3,XXREAL_0,CARD_1,TREES_1,FUNCT_1,INCSP_1,ORDINAL4,SUBSET_1,VECTSP_1,RLVECT_2,RLVECT_3,CARD_3,ARYTM_1,SUPINF_2,RLVECT_5,FINSET_1,STRUCT_0,RLSUB_1,ALGSTR_0,PARTFUN1,RLVECT_1,ZFMISC_1,QC_LANG1,FUNCT_2,VALUED_1,PRE_POLY,FINSEQ_2,RVSUM_1,FINSEQ_4,FVSUM_1,MATRLIN,MSSUBFAM,UNIALG_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,MOD_2,FINSEQ_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_3,STRUCT_0,ALGSTR_0,MATRIX_1,MATRIX_3,FVSUM_1,RLVECT_1,VECTSP_1,VECTSP_4,VECTSP_6,VECTSP_7,FINSET_1,FINSEQ_3,FINSEQ_2,FINSEQOP,BINOP_1,XXREAL_0,PRE_POLY,GRCAT_1,CKB1,CKB6,CKB11,CKB13,CKB14,CKB15,CKB19,CKB21;
definitions TARSKI,FVSUM_1,FUNCOP_1,ALGSTR_0,PRE_POLY,CKB11,CKB13,CKB14,CKB15,CKB19,CKB21;
theorems TARSKI,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,VECTSP_1,VECTSP_4,VECTSP_6,VECTSP_7,RLVECT_1,FUNCT_1,FUNCT_2,FUNCT_3,MATRIX_1,MATRIX_2,MATRIX_3,MOD_2,ZFMISC_1,NAT_1,FVSUM_1,SUBSET_1,FINSEQOP,FUNCOP_1,RELAT_1,PARTFUN2,XBOOLE_0,XBOOLE_1,RLVECT_2,ORDINAL1,PARTFUN1,PRE_POLY,GRCAT_1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes FINSEQ_1,FINSEQ_2,FUNCT_2,MATRIX_1,NAT_1,FINSEQ_4;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,STRUCT_0,VECTSP_1,MATRIX_1,CARD_1,VECTSP_7,MOD_2,GRCAT_1,PRE_POLY,RELAT_1,FUNCT_1,FINSEQ_4,CKB12;
constructors PARTFUN1,BINOP_1,FUNCT_3,SQUARE_1,NAT_1,VECTSP_6,VECTSP_7,MOD_2,FVSUM_1,MATRIX_3,RELSET_1,PRE_POLY,GRCAT_1,CKB1,CKB6,CKB11,CKB13,CKB14,CKB15,CKB19,CKB21;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve K for Field;
reserve V1 for  finite-dimensional (VectSp of K);
reserve V2 for  finite-dimensional (VectSp of K);
reserve f for (Function of V1,V2);
reserve w for (Element of V1);
theorem
Th20: (for V1,V2 being (VectSp of K) holds (for f being (Function of V1,V2) holds (for p being (FinSequence of V1) holds (f is  additive  homogeneous implies ( f . ( Sum p ) ) = ( Sum ( f * p ) )))))
proof
let V1 being (VectSp of K);
let V2 being (VectSp of K);
let f being (Function of V1,V2);
let p being (FinSequence of V1);
defpred P[ (FinSequence of V1) ]
 means
( f . ( Sum $1 ) ) = ( Sum ( f * $1 ) );
assume A1: f is  additive  homogeneous;
A2: (for p being (FinSequence of V1) holds (for w being (Element of V1) holds (P[ p ] implies P[ ( p ^ <* w *> ) ])))
proof
let p being (FinSequence of V1);
let w being (Element of V1);
assume that
A3: ( f . ( Sum p ) ) = ( Sum ( f * p ) );
thus ( f . ( Sum ( p ^ <* w *> ) ) ) = ( f . ( ( Sum p ) + ( Sum <* w *> ) ) ) by RLVECT_1:41
.= ( ( Sum ( f * p ) ) + ( f . ( Sum <* w *> ) ) ) by A1,A3,GRCAT_1:def 8
.= ( ( Sum ( f * p ) ) + ( f . w ) ) by RLVECT_1:44
.= ( ( Sum ( f * p ) ) + ( Sum <* ( f . w ) *> ) ) by RLVECT_1:44
.= ( Sum ( ( f * p ) ^ <* ( f . w ) *> ) ) by RLVECT_1:41
.= ( Sum ( f * ( p ^ <* w *> ) ) ) by FINSEQOP:8;
end;
( f . ( Sum ( <*> (the carrier of V1) ) ) ) = ( f . ( 0. V1 ) ) by RLVECT_1:43
.= ( f . ( ( 0. K ) * ( 0. V1 ) ) ) by VECTSP_1:14
.= ( ( 0. K ) * ( f . ( 0. V1 ) ) ) by A1,MOD_2:def 2
.= ( 0. V2 ) by VECTSP_1:14
.= ( Sum ( <*> (the carrier of V2) ) ) by RLVECT_1:43
.= ( Sum ( f * ( <*> (the carrier of V1) ) ) );
then A4: P[ ( <*> (the carrier of V1) ) ];
(for p being (FinSequence of V1) holds P[ p ]) from FINSEQ_2:sch 2(A4,A2);
hence thesis;
end;
