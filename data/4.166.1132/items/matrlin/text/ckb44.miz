environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,MATRIX_1,FINSEQ_3,RELAT_1,FINSEQ_1,TARSKI,ARYTM_3,XXREAL_0,CARD_1,TREES_1,FUNCT_1,INCSP_1,ORDINAL4,SUBSET_1,VECTSP_1,RLVECT_2,RLVECT_3,CARD_3,ARYTM_1,SUPINF_2,RLVECT_5,FINSET_1,STRUCT_0,RLSUB_1,ALGSTR_0,PARTFUN1,RLVECT_1,ZFMISC_1,QC_LANG1,FUNCT_2,VALUED_1,PRE_POLY,FINSEQ_2,RVSUM_1,FINSEQ_4,FVSUM_1,MATRLIN,MSSUBFAM,UNIALG_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,MOD_2,FINSEQ_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_3,STRUCT_0,ALGSTR_0,MATRIX_1,MATRIX_3,FVSUM_1,RLVECT_1,VECTSP_1,VECTSP_4,VECTSP_6,VECTSP_7,FINSET_1,FINSEQ_3,FINSEQ_2,FINSEQOP,BINOP_1,XXREAL_0,PRE_POLY,GRCAT_1,CKB1,CKB6,CKB11,CKB13,CKB14,CKB15,CKB19,CKB21,CKB33,CKB34;
definitions TARSKI,FVSUM_1,FUNCOP_1,ALGSTR_0,PRE_POLY,CKB11,CKB13,CKB14,CKB15,CKB19,CKB21;
theorems TARSKI,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,VECTSP_1,VECTSP_4,VECTSP_6,VECTSP_7,RLVECT_1,FUNCT_1,FUNCT_2,FUNCT_3,MATRIX_1,MATRIX_2,MATRIX_3,MOD_2,ZFMISC_1,NAT_1,FVSUM_1,SUBSET_1,FINSEQOP,FUNCOP_1,RELAT_1,PARTFUN2,XBOOLE_0,XBOOLE_1,RLVECT_2,ORDINAL1,PARTFUN1,PRE_POLY,GRCAT_1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43;
schemes FINSEQ_1,FINSEQ_2,FUNCT_2,MATRIX_1,NAT_1,FINSEQ_4;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,STRUCT_0,VECTSP_1,MATRIX_1,CARD_1,VECTSP_7,MOD_2,GRCAT_1,PRE_POLY,RELAT_1,FUNCT_1,FINSEQ_4,CKB12,CKB32;
constructors PARTFUN1,BINOP_1,FUNCT_3,SQUARE_1,NAT_1,VECTSP_6,VECTSP_7,MOD_2,FVSUM_1,MATRIX_3,RELSET_1,PRE_POLY,GRCAT_1,CKB1,CKB6,CKB11,CKB13,CKB14,CKB15,CKB19,CKB21,CKB33,CKB34;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve i for Nat;
reserve n for Nat;
reserve x for set;
reserve K for Field;
reserve V1 for  finite-dimensional (VectSp of K);
theorem
Th37: (for M being (Matrix of (the carrier of V1)) holds ( Sum ( Sum M ) ) = ( Sum ( Sum ( M @ ) ) ))
proof
defpred X[ Nat ]
 means
(for M being (Matrix of (the carrier of V1)) holds (( len M ) = $1 implies ( Sum ( Sum M ) ) = ( Sum ( Sum ( M @ ) ) )));
let M being (Matrix of (the carrier of V1));
A1: (for P being (FinSequence of V1) holds ( Sum ( Sum <* P *> ) ) = ( Sum ( Sum ( <* P *> @ ) ) ))
proof
defpred X[ (FinSequence of V1) ]
 means
( Sum ( Sum <* $1 *> ) ) = ( Sum ( Sum ( <* $1 *> @ ) ) );
let P being (FinSequence of V1);
( len <* ( <*> (the carrier of V1) ) *> ) = 1 by MATRIX_1:def 2;
then ( width <* ( <*> (the carrier of V1) ) *> ) = ( 0 ) by MATRIX_1:20;
then A2: ( len ( <* ( <*> (the carrier of V1) ) *> @ ) ) = ( 0 ) by MATRIX_1:def 6;
A3: (for P being (FinSequence of V1) holds (for x being (Element of V1) holds (X[ P ] implies X[ ( P ^ <* x *> ) ])))
proof
let P being (FinSequence of V1);
let x being (Element of V1);
assume that
A4: ( Sum ( Sum <* P *> ) ) = ( Sum ( Sum ( <* P *> @ ) ) );
( Seg ( len ( <* P *> ^^ <* <* x *> *> ) ) ) = ( dom ( <* P *> ^^ <* <* x *> *> ) ) by FINSEQ_1:def 3
.= ( ( dom <* P *> ) /\ ( dom <* <* x *> *> ) ) by PRE_POLY:def 4
.= ( ( Seg 1 ) /\ ( dom <* <* x *> *> ) ) by FINSEQ_1:38
.= ( ( Seg 1 ) /\ ( Seg 1 ) ) by FINSEQ_1:38
.= ( Seg 1 );
then A5: ( len ( <* P *> ^^ <* <* x *> *> ) ) = 1 by FINSEQ_1:6
.= ( len <* ( P ^ <* x *> ) *> ) by FINSEQ_1:39;
then A6: ( dom ( <* P *> ^^ <* <* x *> *> ) ) = ( Seg ( len <* ( P ^ <* x *> ) *> ) ) by FINSEQ_1:def 3;
A7:now
let i being Nat;
assume A8: i in ( dom ( <* P *> ^^ <* <* x *> *> ) );
then i in { 1 } by A6,FINSEQ_1:2,FINSEQ_1:40;
then A9: i = 1 by TARSKI:def 1;
i in ( Seg 1 ) by A6,A8,FINSEQ_1:40;
then (i in ( dom <* P *> ) & i in ( dom <* <* x *> *> )) by FINSEQ_1:38;
then reconsider m1 = ( <* P *> . i ),m2 = ( <* <* x *> *> . i ) as FinSequence by PRE_POLY:def 3;
thus ( ( <* P *> ^^ <* <* x *> *> ) . i ) = ( m1 ^ m2 ) by A8,PRE_POLY:def 4
.= ( P ^ m2 ) by A9,FINSEQ_1:40
.= ( P ^ <* x *> ) by A9,FINSEQ_1:40
.= ( <* ( P ^ <* x *> ) *> . i ) by A9,FINSEQ_1:40;
end;
per cases ;
suppose ( len P ) = ( 0 );

then A10: P = ( {} );
hence ( Sum ( Sum <* ( P ^ <* x *> ) *> ) ) = ( Sum ( Sum <* <* x *> *> ) ) by FINSEQ_1:34
.= ( Sum ( Sum ( <* <* x *> *> @ ) ) ) by CKB24:1
.= ( Sum ( Sum ( <* ( P ^ <* x *> ) *> @ ) ) ) by A10,FINSEQ_1:34;
end;
suppose A11: ( len P ) <> ( 0 );

A12: ( len <* <* x *> *> ) = 1 by FINSEQ_1:40;
then A13: ( width <* <* x *> *> ) = ( len <* x *> ) by MATRIX_1:20
.= 1 by FINSEQ_1:40;
then A14: ( len ( <* <* x *> *> @ ) ) = 1 by MATRIX_1:def 6;
A15: ( len <* P *> ) = 1 by FINSEQ_1:40;
then A16: ( width <* P *> ) = ( len P ) by MATRIX_1:20;
then A17: ( len ( <* P *> @ ) ) = ( len P ) by MATRIX_1:def 6;
( width ( <* P *> @ ) ) = 1 by A11,A15,A16,MATRIX_2:10;
then reconsider d1 = ( <* P *> @ ) as (Matrix of ( len P ),1,(the carrier of V1)) by A11,A17,MATRIX_1:20;
A18: ( len <* ( P ^ <* x *> ) *> ) = 1 by FINSEQ_1:40;
then A19: ( width <* ( P ^ <* x *> ) *> ) = ( len ( P ^ <* x *> ) ) by MATRIX_1:20
.= ( ( len P ) + ( len <* x *> ) ) by FINSEQ_1:22
.= ( ( len P ) + 1 ) by FINSEQ_1:40;
A20: ( ( <* <* x *> *> @ ) @ ) = <* <* x *> *> by A12,A13,MATRIX_2:13;
A21: ( width ( <* P *> @ ) ) = ( len <* P *> ) by A11,A16,MATRIX_2:10
.= ( width ( <* <* x *> *> @ ) ) by A15,A12,A13,MATRIX_2:10;
then ( width ( <* <* x *> *> @ ) ) = 1 by A11,A15,A16,MATRIX_2:10;
then reconsider d2 = ( <* <* x *> *> @ ) as (Matrix of 1,1,(the carrier of V1)) by A14,MATRIX_1:20;
A22: ( ( d1 ^ d2 ) @ ) = ( ( ( <* P *> @ ) @ ) ^^ ( ( <* <* x *> *> @ ) @ ) ) by A21,CKB40:1
.= ( <* P *> ^^ <* <* x *> *> ) by A11,A15,A16,A20,MATRIX_2:13
.= <* ( P ^ <* x *> ) *> by A5,A7,FINSEQ_2:9
.= ( ( <* ( P ^ <* x *> ) *> @ ) @ ) by A18,A19,MATRIX_2:13;
A23: ( len ( ( <* P *> @ ) ^ ( <* <* x *> *> @ ) ) ) = ( ( len ( <* P *> @ ) ) + ( len ( <* <* x *> *> @ ) ) ) by FINSEQ_1:22
.= ( ( width <* P *> ) + ( len ( <* <* x *> *> @ ) ) ) by MATRIX_1:def 6
.= ( ( width <* P *> ) + ( width <* <* x *> *> ) ) by MATRIX_1:def 6
.= ( len ( <* ( P ^ <* x *> ) *> @ ) ) by A16,A13,A19,MATRIX_1:def 6;
thus ( Sum ( Sum <* ( P ^ <* x *> ) *> ) ) = ( Sum ( Sum ( <* P *> ^^ <* <* x *> *> ) ) ) by A5,A7,FINSEQ_2:9
.= ( ( Sum ( Sum ( <* P *> @ ) ) ) + ( Sum ( Sum <* <* x *> *> ) ) ) by A4,A15,A12,CKB43:1
.= ( ( Sum ( Sum ( <* P *> @ ) ) ) + ( Sum ( Sum ( <* <* x *> *> @ ) ) ) ) by CKB24:1
.= ( Sum ( ( Sum d1 ) ^ ( Sum d2 ) ) ) by RLVECT_1:41
.= ( Sum ( Sum ( d1 ^ d2 ) ) ) by CKB39:1
.= ( Sum ( Sum ( <* ( P ^ <* x *> ) *> @ ) ) ) by A23,A22,MATRIX_2:9;
end;
end;
<* ( <*> (the carrier of V1) ) *> is (Matrix of ( ( 0 ) + 1 ),( 0 ),(the carrier of V1));
then ( Sum ( Sum <* ( <*> (the carrier of V1) ) *> ) ) = ( 0. V1 ) by CKB23:1
.= ( Sum ( Sum ( <* ( <*> (the carrier of V1) ) *> @ ) ) ) by A2,CKB22:1;
then A24: X[ ( <*> (the carrier of V1) ) ];
(for P being (FinSequence of V1) holds X[ P ]) from FINSEQ_2:sch 2(A24,A3);
hence thesis;
end;
A25: (for n holds (X[ n ] implies X[ ( n + 1 ) ]))
proof
let n;
assume that
A26: (for M being (Matrix of (the carrier of V1)) holds (( len M ) = n implies ( Sum ( Sum M ) ) = ( Sum ( Sum ( M @ ) ) )));
thus (for M being (Matrix of (the carrier of V1)) holds (( len M ) = ( n + 1 ) implies ( Sum ( Sum M ) ) = ( Sum ( Sum ( M @ ) ) )))
proof
let M being (Matrix of (the carrier of V1));
assume that
A27: ( len M ) = ( n + 1 );
A28: M <> ( {} ) by A27;
A29: ( dom M ) = ( Seg ( len M ) ) by FINSEQ_1:def 3;
per cases ;
suppose A30: n = ( 0 );

then ( M . 1 ) = ( Line (M,1) ) by A27,A29,FINSEQ_1:4,MATRIX_2:16;
then reconsider G = ( M . 1 ) as (FinSequence of V1);
M = <* G *> by A27,A30,FINSEQ_1:40;
hence thesis by A1;
end;
suppose A31: n > ( 0 );

A32: ( M . ( n + 1 ) ) = ( Line (M,( n + 1 )) ) by A27,A29,FINSEQ_1:4,MATRIX_2:16;
then reconsider M1 = ( M . ( n + 1 ) ) as (FinSequence of V1);
reconsider R = <* M1 *> as (Matrix of 1,( width M ),(the carrier of V1)) by A32,MATRIX_1:def 7;
reconsider M9 = M as (Matrix of ( n + 1 ),( width M ),(the carrier of V1)) by A27,MATRIX_1:20;
reconsider W = ( Del (M9,( n + 1 )) ) as (Matrix of n,( width M ),(the carrier of V1)) by CKB4:1;
A33: ( width W ) = ( width M9 ) by A31,CKB3:1
.= ( width R ) by CKB3:1;
A34: ( len ( W @ ) ) = ( width W ) by MATRIX_1:def 6
.= ( len ( R @ ) ) by A33,MATRIX_1:def 6;
A35: ( len ( Del (M,( n + 1 )) ) ) = n by A27,CKB2:1;
thus ( Sum ( Sum M ) ) = ( Sum ( Sum ( W ^ R ) ) ) by A28,CKB5:1,A27
.= ( Sum ( ( Sum W ) ^ ( Sum R ) ) ) by CKB39:1
.= ( ( Sum ( Sum ( Del (M,( n + 1 )) ) ) ) + ( Sum ( Sum R ) ) ) by RLVECT_1:41
.= ( ( Sum ( Sum ( ( Del (M,( n + 1 )) ) @ ) ) ) + ( Sum ( Sum R ) ) ) by A26,A35
.= ( ( Sum ( Sum ( ( Del (M,( n + 1 )) ) @ ) ) ) + ( Sum ( Sum ( R @ ) ) ) ) by A1
.= ( Sum ( Sum ( ( W @ ) ^^ ( R @ ) ) ) ) by A34,CKB43:1
.= ( Sum ( Sum ( ( W ^ R ) @ ) ) ) by A33,CKB40:1
.= ( Sum ( Sum ( M @ ) ) ) by A28,CKB5:1,A27;
end;
end;

end;
A36: X[ ( 0 ) ]
proof
let M being (Matrix of (the carrier of V1));
assume A37: ( len M ) = ( 0 );
then ( width M ) = ( 0 ) by MATRIX_1:def 3;
then A38: ( len ( M @ ) ) = ( 0 ) by MATRIX_1:def 6;
thus ( Sum ( Sum M ) ) = ( 0. V1 ) by A37,CKB22:1
.= ( Sum ( Sum ( M @ ) ) ) by A38,CKB22:1;
end;
(for n holds X[ n ]) from NAT_1:sch 2(A36,A25);
then X[ ( len M ) ];
hence thesis;
end;
