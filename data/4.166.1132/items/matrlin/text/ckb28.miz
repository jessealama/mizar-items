environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,MATRIX_1,FINSEQ_3,RELAT_1,FINSEQ_1,TARSKI,ARYTM_3,XXREAL_0,CARD_1,TREES_1,FUNCT_1,INCSP_1,ORDINAL4,SUBSET_1,VECTSP_1,RLVECT_2,RLVECT_3,CARD_3,ARYTM_1,SUPINF_2,RLVECT_5,FINSET_1,STRUCT_0,RLSUB_1,ALGSTR_0,PARTFUN1,RLVECT_1,ZFMISC_1,QC_LANG1,FUNCT_2,VALUED_1,PRE_POLY,FINSEQ_2,RVSUM_1,FINSEQ_4,FVSUM_1,MATRLIN,MSSUBFAM,UNIALG_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,MOD_2,FINSEQ_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_3,STRUCT_0,ALGSTR_0,MATRIX_1,MATRIX_3,FVSUM_1,RLVECT_1,VECTSP_1,VECTSP_4,VECTSP_6,VECTSP_7,FINSET_1,FINSEQ_3,FINSEQ_2,FINSEQOP,BINOP_1,XXREAL_0,PRE_POLY,GRCAT_1,CKB1,CKB6,CKB11,CKB13,CKB14,CKB15,CKB19,CKB21;
definitions TARSKI,FVSUM_1,FUNCOP_1,ALGSTR_0,PRE_POLY,CKB11,CKB13,CKB14,CKB15,CKB19,CKB21;
theorems TARSKI,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,VECTSP_1,VECTSP_4,VECTSP_6,VECTSP_7,RLVECT_1,FUNCT_1,FUNCT_2,FUNCT_3,MATRIX_1,MATRIX_2,MATRIX_3,MOD_2,ZFMISC_1,NAT_1,FVSUM_1,SUBSET_1,FINSEQOP,FUNCOP_1,RELAT_1,PARTFUN2,XBOOLE_0,XBOOLE_1,RLVECT_2,ORDINAL1,PARTFUN1,PRE_POLY,GRCAT_1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
schemes FINSEQ_1,FINSEQ_2,FUNCT_2,MATRIX_1,NAT_1,FINSEQ_4;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,STRUCT_0,VECTSP_1,MATRIX_1,CARD_1,VECTSP_7,MOD_2,GRCAT_1,PRE_POLY,RELAT_1,FUNCT_1,FINSEQ_4,CKB12;
constructors PARTFUN1,BINOP_1,FUNCT_3,SQUARE_1,NAT_1,VECTSP_6,VECTSP_7,MOD_2,FVSUM_1,MATRIX_3,RELSET_1,PRE_POLY,GRCAT_1,CKB1,CKB6,CKB11,CKB13,CKB14,CKB15,CKB19,CKB21;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve k for Nat;
reserve K for Field;
reserve V1 for  finite-dimensional (VectSp of K);
reserve F for (FinSequence of V1);
reserve KL for (Linear_Combination of V1);
theorem
Th23: (for F,F1 being (FinSequence of V1) holds (for KL being (Linear_Combination of V1) holds (for p being (Permutation of ( dom F )) holds (F1 = ( F * p ) implies ( KL (#) F1 ) = ( ( KL (#) F ) * p )))))
proof
let F being (FinSequence of V1);
let F1 being (FinSequence of V1);
let KL being (Linear_Combination of V1);
let p being (Permutation of ( dom F ));
assume that
A1: F1 = ( F * p );
( dom F ) = ( Seg ( len F ) ) by FINSEQ_1:def 3;
then ( dom F ) = ( Seg ( len ( KL (#) F ) ) ) by VECTSP_6:def 5;
then A2: ( dom F ) = ( dom ( KL (#) F ) ) by FINSEQ_1:def 3;
then reconsider F2 = ( ( KL (#) F ) * p ) as (FinSequence of V1) by FINSEQ_2:47;
( len ( KL (#) F1 ) ) = ( len F1 ) by VECTSP_6:def 5
.= ( len F ) by A1,FINSEQ_2:44
.= ( len ( KL (#) F ) ) by VECTSP_6:def 5
.= ( len F2 ) by A2,FINSEQ_2:44;
then A3: ( dom ( KL (#) F1 ) ) = ( dom ( ( KL (#) F ) * p ) ) by FINSEQ_3:29;
( len ( KL (#) F1 ) ) = ( len F1 ) by VECTSP_6:def 5;
then A4: ( dom ( KL (#) F1 ) ) = ( dom F1 ) by FINSEQ_3:29;
now
let k being Nat;
reconsider k0 = k as (Element of ( NAT )) by ORDINAL1:def 12;
assume A5: k in ( dom ( KL (#) F1 ) );
then k in ( dom p ) by A3,FUNCT_1:11;
then ( p . k ) in ( rng p ) by FUNCT_1:def 3;
then A6: ( p . k ) in ( dom F ) by FUNCT_2:def 3;
then reconsider k1 = ( p . k0 ) as (Element of ( NAT )) by FINSEQ_3:23;
( F1 /. k ) = ( F1 . k ) by A4,A5,PARTFUN1:def 6
.= ( F . ( p . k ) ) by A1,A4,A5,FUNCT_1:12
.= ( F /. ( p . k ) ) by A6,PARTFUN1:def 6;
hence ( ( KL (#) F1 ) . k ) = ( ( KL . ( F /. k1 ) ) * ( F /. k1 ) ) by A5,VECTSP_6:def 5
.= ( ( KL (#) F ) . k1 ) by A2,A6,VECTSP_6:def 5
.= ( F2 . k ) by A3,A5,FUNCT_1:12;
end;
hence thesis by A3,FINSEQ_1:13;
end;
