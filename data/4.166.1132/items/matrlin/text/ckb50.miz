environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,MATRIX_1,FINSEQ_3,RELAT_1,FINSEQ_1,TARSKI,ARYTM_3,XXREAL_0,CARD_1,TREES_1,FUNCT_1,INCSP_1,ORDINAL4,SUBSET_1,VECTSP_1,RLVECT_2,RLVECT_3,CARD_3,ARYTM_1,SUPINF_2,RLVECT_5,FINSET_1,STRUCT_0,RLSUB_1,ALGSTR_0,PARTFUN1,RLVECT_1,ZFMISC_1,QC_LANG1,FUNCT_2,VALUED_1,PRE_POLY,FINSEQ_2,RVSUM_1,FINSEQ_4,FVSUM_1,MATRLIN,MSSUBFAM,UNIALG_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,MOD_2,FINSEQ_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_3,STRUCT_0,ALGSTR_0,MATRIX_1,MATRIX_3,FVSUM_1,RLVECT_1,VECTSP_1,VECTSP_4,VECTSP_6,VECTSP_7,FINSET_1,FINSEQ_3,FINSEQ_2,FINSEQOP,BINOP_1,XXREAL_0,PRE_POLY,GRCAT_1,CKB1,CKB6,CKB11,CKB13,CKB14,CKB15,CKB19,CKB21,CKB33,CKB34,CKB46;
definitions TARSKI,FVSUM_1,FUNCOP_1,ALGSTR_0,PRE_POLY,CKB11,CKB13,CKB14,CKB15,CKB19,CKB21,CKB46;
theorems TARSKI,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,VECTSP_1,VECTSP_4,VECTSP_6,VECTSP_7,RLVECT_1,FUNCT_1,FUNCT_2,FUNCT_3,MATRIX_1,MATRIX_2,MATRIX_3,MOD_2,ZFMISC_1,NAT_1,FVSUM_1,SUBSET_1,FINSEQOP,FUNCOP_1,RELAT_1,PARTFUN2,XBOOLE_0,XBOOLE_1,RLVECT_2,ORDINAL1,PARTFUN1,PRE_POLY,GRCAT_1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49;
schemes FINSEQ_1,FINSEQ_2,FUNCT_2,MATRIX_1,NAT_1,FINSEQ_4;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,STRUCT_0,VECTSP_1,MATRIX_1,CARD_1,VECTSP_7,MOD_2,GRCAT_1,PRE_POLY,RELAT_1,FUNCT_1,FINSEQ_4,CKB12,CKB32;
constructors PARTFUN1,BINOP_1,FUNCT_3,SQUARE_1,NAT_1,VECTSP_6,VECTSP_7,MOD_2,FVSUM_1,MATRIX_3,RELSET_1,PRE_POLY,GRCAT_1,CKB1,CKB6,CKB11,CKB13,CKB14,CKB15,CKB19,CKB21,CKB33,CKB34,CKB46;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve k for Nat;
reserve i for Nat;
reserve x for set;
reserve K for Field;
reserve V1 for  finite-dimensional (VectSp of K);
reserve V2 for  finite-dimensional (VectSp of K);
reserve f for (Function of V1,V2);
reserve b1 for (OrdBasis of V1);
reserve v for (Element of V1);
reserve d for (FinSequence of K);
reserve KL for (Linear_Combination of V1);
theorem
Th41: (( len d ) = ( len b1 ) implies d = ( ( Sum ( lmlt (d,b1) ) ) |-- b1 ))
proof
reconsider T = ( rng b1 ) as  finite (Subset of V1) by CKB13:def 1;
defpred X[ (Element of V1),(Element of K) ]
 means
(($1 in ( rng b1 ) implies (for k holds ((k in ( dom b1 ) & ( b1 /. k ) = $1) implies $2 = ( d /. k )))) & ((not $1 in ( rng b1 )) implies $2 = ( 0. K )));
A1: (for v holds (ex u being (Element of K) st X[ v,u ]))
proof
let v being (Element of V1);
per cases ;
suppose A2: v in ( rng b1 );

then consider k being (Element of ( NAT )) such that A3: k in ( dom b1 ) and A4: ( b1 /. k ) = v by PARTFUN2:2;
take u = ( d /. k );
now
A5: b1 is  one-to-one by CKB13:def 1;
let i;
assume that
A6: i in ( dom b1 )
and
A7: ( b1 /. i ) = v;
( b1 . i ) = ( b1 /. k ) by A4,A6,A7,PARTFUN1:def 6
.= ( b1 . k ) by A3,PARTFUN1:def 6;
hence u = ( d /. i ) by A3,A6,A5,FUNCT_1:def 4;
end;
hence thesis by A2;
end;
suppose A8: (not v in ( rng b1 ));

take ( 0. K );
thus thesis by A8;
end;
end;
consider KL being (Function of V1,K) such that A9: (for v holds X[ v,( KL . v ) ]) from FUNCT_2:sch 3(A1);
A10:now
take T;
let v being (Element of V1);
assume (not v in T);
hence ( KL . v ) = ( 0. K ) by A9;
end;
now
take f = KL;
thus ((KL = f & ( dom f ) = (the carrier of V1)) & ( rng f ) c= (the carrier of K)) by FUNCT_2:def 1,RELAT_1:def 19;
end;
then KL in ( Funcs ((the carrier of V1),(the carrier of K)) ) by FUNCT_2:def 2;
then reconsider KL1 = KL as (Linear_Combination of V1) by A10,VECTSP_6:def 1;
assume A11: ( len d ) = ( len b1 );
now
take KL1;
A12: b1 is  one-to-one by CKB13:def 1;
thus A13: (for k holds ((1 <= k & k <= ( len d )) implies ( d /. k ) = ( KL1 . ( b1 /. k ) )))
proof
let k;
assume (1 <= k & k <= ( len d ));
then A14: k in ( dom b1 ) by A11,FINSEQ_3:25;
then ( b1 . k ) = ( b1 /. k ) by PARTFUN1:def 6;
then ( b1 /. k ) in ( rng b1 ) by A14,FUNCT_1:def 3;
hence thesis by A9,A14;
end;

(for x holds (x in ( Carrier KL1 ) implies x in ( rng b1 )))
proof
let x;
assume x in ( Carrier KL1 );
then A15: (ex v st (x = v & ( KL1 . v ) <> ( 0. K ))) by VECTSP_6:1;
assume (not x in ( rng b1 ));
hence contradiction by A9,A15;
end;
hence A16: ( Carrier KL1 ) c= ( rng b1 ) by TARSKI:def 3;
A17: ( dom d ) = ( dom b1 ) by A11,FINSEQ_3:29;
then A18: ( dom ( lmlt (d,b1) ) ) = ( dom b1 ) by CKB20:1;
then A19: ( len ( lmlt (d,b1) ) ) = ( len b1 ) by FINSEQ_3:29
.= ( len ( KL1 (#) b1 ) ) by VECTSP_6:def 5;
now
let k being Nat;
assume A20: k in ( dom ( lmlt (d,b1) ) );
then A21: k in ( dom ( KL1 (#) b1 ) ) by A19,FINSEQ_3:29;
A22: (1 <= k & k <= ( len d )) by A11,A18,A20,FINSEQ_3:25;
A23: (( d /. k ) = ( d . k ) & ( b1 /. k ) = ( b1 . k )) by A17,A18,A20,PARTFUN1:def 6;
thus ( ( lmlt (d,b1) ) . k ) = ( (the lmult of V1) . (( d . k ),( b1 . k )) ) by A20,FUNCOP_1:22
.= ( ( d /. k ) * ( b1 /. k ) ) by A23,VECTSP_1:def 12
.= ( ( KL1 . ( b1 /. k ) ) * ( b1 /. k ) ) by A13,A22
.= ( ( KL1 (#) b1 ) . k ) by A21,VECTSP_6:def 5;
end;
hence ( Sum ( lmlt (d,b1) ) ) = ( Sum ( KL1 (#) b1 ) ) by A19,FINSEQ_2:9
.= ( Sum KL1 ) by A16,A12,CKB29:1;
end;
hence thesis by A11,CKB46:def 1;
end;
