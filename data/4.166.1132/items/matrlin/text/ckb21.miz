environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,MATRIX_1,FINSEQ_3,RELAT_1,FINSEQ_1,TARSKI,ARYTM_3,XXREAL_0,CARD_1,TREES_1,FUNCT_1,INCSP_1,ORDINAL4,SUBSET_1,VECTSP_1,RLVECT_2,RLVECT_3,CARD_3,ARYTM_1,SUPINF_2,RLVECT_5,FINSET_1,STRUCT_0,RLSUB_1,ALGSTR_0,PARTFUN1,RLVECT_1,ZFMISC_1,QC_LANG1,FUNCT_2,VALUED_1,PRE_POLY,FINSEQ_2,RVSUM_1,FINSEQ_4,FVSUM_1,MATRLIN,MSSUBFAM,UNIALG_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,MOD_2,FINSEQ_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_3,STRUCT_0,ALGSTR_0,MATRIX_1,MATRIX_3,FVSUM_1,RLVECT_1,VECTSP_1,VECTSP_4,VECTSP_6,VECTSP_7,FINSET_1,FINSEQ_3,FINSEQ_2,FINSEQOP,BINOP_1,XXREAL_0,PRE_POLY,GRCAT_1,CKB1,CKB6,CKB11,CKB13,CKB14,CKB15,CKB19;
definitions TARSKI,FVSUM_1,FUNCOP_1,ALGSTR_0,PRE_POLY,CKB11,CKB13,CKB14,CKB15,CKB19;
theorems TARSKI,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,VECTSP_1,VECTSP_4,VECTSP_6,VECTSP_7,RLVECT_1,FUNCT_1,FUNCT_2,FUNCT_3,MATRIX_1,MATRIX_2,MATRIX_3,MOD_2,ZFMISC_1,NAT_1,FVSUM_1,SUBSET_1,FINSEQOP,FUNCOP_1,RELAT_1,PARTFUN2,XBOOLE_0,XBOOLE_1,RLVECT_2,ORDINAL1,PARTFUN1,PRE_POLY,GRCAT_1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
schemes FINSEQ_1,FINSEQ_2,FUNCT_2,MATRIX_1,NAT_1,FINSEQ_4;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,STRUCT_0,VECTSP_1,MATRIX_1,CARD_1,VECTSP_7,MOD_2,GRCAT_1,PRE_POLY,RELAT_1,FUNCT_1,FINSEQ_4,CKB12;
constructors PARTFUN1,BINOP_1,FUNCT_3,SQUARE_1,NAT_1,VECTSP_6,VECTSP_7,MOD_2,FVSUM_1,MATRIX_3,RELSET_1,PRE_POLY,GRCAT_1,CKB1,CKB6,CKB11,CKB13,CKB14,CKB15,CKB19;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve k for Nat;
reserve K for Field;
reserve V1 for  finite-dimensional (VectSp of K);
definition
let V1 being non  empty addLoopStr;
let M being (FinSequence of ( (the carrier of V1) * ));
func Sum M -> (FinSequence of V1) means 
:Def8: (( len it ) = ( len M ) & (for k holds (k in ( dom it ) implies ( it /. k ) = ( Sum ( M /. k ) ))));
existence
proof
deffunc F(Nat) = ( Sum ( M /. $1 ) );
consider F being (FinSequence of V1) such that A1: (( len F ) = ( len M ) & (for k being Nat holds (k in ( dom F ) implies ( F . k ) = F(k)))) from FINSEQ_2:sch 1;
take F;
thus ( len F ) = ( len M ) by A1;
hereby
let k;
assume A2: k in ( dom F );
hence ( F /. k ) = ( F . k ) by PARTFUN1:def 6
.= ( Sum ( M /. k ) ) by A1,A2;
end;
end;
uniqueness
proof
let F1 being (FinSequence of V1);
let F2 being (FinSequence of V1);
assume that
A3: ( len F1 ) = ( len M )
and
A4: (for k holds (k in ( dom F1 ) implies ( F1 /. k ) = ( Sum ( M /. k ) )))
and
A5: ( len F2 ) = ( len M )
and
A6: (for k holds (k in ( dom F2 ) implies ( F2 /. k ) = ( Sum ( M /. k ) )));
A7: ( dom F1 ) = ( Seg ( len F1 ) ) by FINSEQ_1:def 3;
now
let k being Nat;
assume A8: k in ( dom F1 );
then A9: k in ( dom F2 ) by A3,A5,A7,FINSEQ_1:def 3;
thus ( F1 . k ) = ( F1 /. k ) by A8,PARTFUN1:def 6
.= ( Sum ( M /. k ) ) by A4,A8
.= ( F2 /. k ) by A6,A9
.= ( F2 . k ) by A9,PARTFUN1:def 6;
end;
hence thesis by A3,A5,FINSEQ_2:9;
end;
end;
