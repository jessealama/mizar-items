environ
vocabularies XBOOLE_0,LATTICES,ORDERS_2,ZFMISC_1,STRUCT_0,TARSKI,SUBSET_1,LATTICE3,RELAT_2,XXREAL_0,YELLOW_0,REWRITE1,ORDINAL2,RELAT_1,MCART_1,EQREL_1,XXREAL_2,WAYBEL_0,WAYBEL_3,RCOMP_1,WAYBEL_8,WAYBEL_6,CARD_FIL,WAYBEL11,WAYBEL_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,DOMAIN_1,STRUCT_0,MCART_1,ORDERS_2,LATTICE3,YELLOW_0,WAYBEL_0,WAYBEL_1,YELLOW_3,YELLOW_4,WAYBEL_2,WAYBEL_3,WAYBEL_6,WAYBEL_8,WAYBEL11;
definitions TARSKI,YELLOW_0,LATTICE3,WAYBEL_0,WAYBEL_1,WAYBEL_2,WAYBEL_3,WAYBEL_6,WAYBEL_8,WAYBEL11,XBOOLE_0;
theorems ZFMISC_1,TARSKI,ORDERS_2,YELLOW_0,YELLOW_3,YELLOW_4,WAYBEL_0,WAYBEL_1,WAYBEL_2,WAYBEL_3,WAYBEL_8,MCART_1,FUNCT_5,DOMAIN_1,XBOOLE_0,RELAT_1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9;
registrations XBOOLE_0,SUBSET_1,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_3,YELLOW_4,WAYBEL_2,WAYBEL_3,WAYBEL_8,WAYBEL14,RELAT_1,CKB1,CKB2;
constructors DOMAIN_1,WAYBEL_1,YELLOW_4,WAYBEL_3,WAYBEL_6,WAYBEL_8,WAYBEL11,WAYBEL_2;
requirements SUBSET,BOOLE;
begin
theorem
(for S,T being non  empty RelStr holds (for x,y,z being (Element of [: S,T :]) holds (x is_<=_than { y,z } iff (( x `1 ) is_<=_than { ( y `1 ),( z `1 ) } & ( x `2 ) is_<=_than { ( y `2 ),( z `2 ) }))))
proof
let S being non  empty RelStr;
let T being non  empty RelStr;
let x being (Element of [: S,T :]);
let y being (Element of [: S,T :]);
let z being (Element of [: S,T :]);
thus (x is_<=_than { y,z } implies (( x `1 ) is_<=_than { ( y `1 ),( z `1 ) } & ( x `2 ) is_<=_than { ( y `2 ),( z `2 ) }))
proof
assume A1: (for b being (Element of [: S,T :]) holds (b in { y,z } implies x <= b));
A2: (the carrier of [: S,T :]) = [: (the carrier of S),(the carrier of T) :] by YELLOW_3:def 2;
then y = [ ( y `1 ),( y `2 ) ] by MCART_1:21;
then [ ( y `1 ),( y `2 ) ] in { y,z } by TARSKI:def 2;
then A3: x <= [ ( y `1 ),( y `2 ) ] by A1;
z = [ ( z `1 ),( z `2 ) ] by A2,MCART_1:21;
then [ ( z `1 ),( z `2 ) ] in { y,z } by TARSKI:def 2;
then A4: x <= [ ( z `1 ),( z `2 ) ] by A1;
A5: x = [ ( x `1 ),( x `2 ) ] by A2,MCART_1:21;
hereby
let b being (Element of S);
assume b in { ( y `1 ),( z `1 ) };
then (b = ( y `1 ) or b = ( z `1 )) by TARSKI:def 2;
hence ( x `1 ) <= b by A3,A4,A5,YELLOW_3:11;
end;
let b being (Element of T);
assume b in { ( y `2 ),( z `2 ) };
then (b = ( y `2 ) or b = ( z `2 )) by TARSKI:def 2;
hence thesis by A3,A4,A5,YELLOW_3:11;
end;

assume that
A6: (for b being (Element of S) holds (b in { ( y `1 ),( z `1 ) } implies ( x `1 ) <= b))
and
A7: (for b being (Element of T) holds (b in { ( y `2 ),( z `2 ) } implies ( x `2 ) <= b));
let b being (Element of [: S,T :]);
assume b in { y,z };
then A8: (b = y or b = z) by TARSKI:def 2;
then ( b `2 ) in { ( y `2 ),( z `2 ) } by TARSKI:def 2;
then A9: ( x `2 ) <= ( b `2 ) by A7;
( b `1 ) in { ( y `1 ),( z `1 ) } by A8,TARSKI:def 2;
then ( x `1 ) <= ( b `1 ) by A6;
hence thesis by A9,YELLOW_3:12;
end;
