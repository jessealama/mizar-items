environ
vocabularies XBOOLE_0,LATTICES,ORDERS_2,ZFMISC_1,STRUCT_0,TARSKI,SUBSET_1,LATTICE3,RELAT_2,XXREAL_0,YELLOW_0,REWRITE1,ORDINAL2,RELAT_1,MCART_1,EQREL_1,XXREAL_2,WAYBEL_0,WAYBEL_3,RCOMP_1,WAYBEL_8,WAYBEL_6,CARD_FIL,WAYBEL11,WAYBEL_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,DOMAIN_1,STRUCT_0,MCART_1,ORDERS_2,LATTICE3,YELLOW_0,WAYBEL_0,WAYBEL_1,YELLOW_3,YELLOW_4,WAYBEL_2,WAYBEL_3,WAYBEL_6,WAYBEL_8,WAYBEL11,CKB19;
definitions TARSKI,YELLOW_0,LATTICE3,WAYBEL_0,WAYBEL_1,WAYBEL_2,WAYBEL_3,WAYBEL_6,WAYBEL_8,WAYBEL11,XBOOLE_0;
theorems ZFMISC_1,TARSKI,ORDERS_2,YELLOW_0,YELLOW_3,YELLOW_4,WAYBEL_0,WAYBEL_1,WAYBEL_2,WAYBEL_3,WAYBEL_8,MCART_1,FUNCT_5,DOMAIN_1,XBOOLE_0,RELAT_1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66;
registrations XBOOLE_0,SUBSET_1,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_3,YELLOW_4,WAYBEL_2,WAYBEL_3,WAYBEL_8,WAYBEL14,RELAT_1,CKB1,CKB2,CKB57,CKB67;
constructors DOMAIN_1,WAYBEL_1,YELLOW_4,WAYBEL_3,WAYBEL_6,WAYBEL_8,WAYBEL11,WAYBEL_2,CKB19;
requirements SUBSET,BOOLE;
begin
registration
let S being  /\-complete non empty  reflexive RelStr;
let T being  /\-complete non empty  reflexive RelStr;
cluster [: S,T :] ->  /\-complete;
coherence
proof
let X being non empty (Subset of [: S,T :]);
( proj1 X ) is non empty by YELLOW_3:21;
then consider s being (Element of S) such that A1: s is_<=_than ( proj1 X ) and A2: (for y being (Element of S) holds (y is_<=_than ( proj1 X ) implies s >= y)) by WAYBEL_0:def 40;
( proj2 X ) is non empty by YELLOW_3:21;
then consider t being (Element of T) such that A3: t is_<=_than ( proj2 X ) and A4: (for y being (Element of T) holds (y is_<=_than ( proj2 X ) implies t >= y)) by WAYBEL_0:def 40;
take [ s,t ];
thus [ s,t ] is_<=_than X by A1,A3,YELLOW_3:34;
let y being (Element of [: S,T :]);
(the carrier of [: S,T :]) = [: (the carrier of S),(the carrier of T) :] by YELLOW_3:def 2;
then A5: y = [ ( y `1 ),( y `2 ) ] by MCART_1:21;
assume A6: y is_<=_than X;
then ( y `2 ) is_<=_than ( proj2 X ) by A5,YELLOW_3:34;
then A7: t >= ( y `2 ) by A4;
( y `1 ) is_<=_than ( proj1 X ) by A5,A6,YELLOW_3:34;
then s >= ( y `1 ) by A2;
hence thesis by A5,A7,YELLOW_3:11;
end;
end;
