environ
vocabularies NUMBERS,SUBSET_1,STRUCT_0,AMI_1,AMI_2,FUNCT_7,XBOOLE_0,RELAT_1,TARSKI,ZFMISC_1,CAT_1,FSM_1,FUNCT_1,INT_1,NAT_1,GRAPHSP,FINSEQ_1,CARD_1,ORDINAL1,ARYTM_3,ARYTM_1,FUNCOP_1,XXREAL_0,GLIB_000,FUNCT_4,AMI_3,RECDEF_2,COMPOS_1,AMISTD_2,SCMNORM;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,ORDINAL1,XCMPLX_0,FUNCT_1,XXREAL_0,INT_1,NAT_1,ZFMISC_1,MCART_1,FUNCOP_1,CARD_1,CARD_3,RELAT_1,FUNCT_4,FUNCT_7,FINSEQ_1,RECDEF_2,NUMBERS,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,CKB1,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
definitions RELAT_1,COMPOS_1,EXTPRO_1,FUNCOP_1,AMI_2,CARD_1,NAT_1,STRUCT_0,MEMSTR_0,CKB1,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
theorems TARSKI,ZFMISC_1,ENUMSET1,AMI_2,FUNCOP_1,FUNCT_4,CARD_3,FUNCT_2,MCART_1,INT_1,STRUCT_0,ORDINAL1,XBOOLE_0,XBOOLE_1,FUNCT_7,ARYTM_3,XXREAL_0,NAT_1,RELAT_1,FINSEQ_1,FUNCT_1,PARTFUN1,PBOOLE,RECDEF_2,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB1,CKB3,CKB4,CKB5,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
registrations XBOOLE_0,SETFAM_1,ORDINAL1,FUNCOP_1,NUMBERS,XREAL_0,INT_1,CARD_3,AMI_2,XXREAL_0,FUNCT_1,FINSEQ_1,FUNCT_2,RELSET_1,COMPOS_1,EXTPRO_1,FUNCT_4,MEMSTR_0,CKB2,CKB6;
constructors DOMAIN_1,XXREAL_0,FINSEQ_4,CAT_2,AMI_2,RELSET_1,PRE_POLY,RECDEF_2,EXTPRO_1,FUNCT_7,MEMSTR_0,CKB1,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve a for Data-Location;
reserve b for Data-Location;
reserve c for Data-Location;
reserve s for (State of ( SCM ));
theorem
Th9: ((( ( Exec (( AddTo (a,b) ),s) ) . ( IC ( SCM ) ) ) = ( succ ( IC s ) ) & ( ( Exec (( AddTo (a,b) ),s) ) . a ) = ( ( s . a ) + ( s . b ) )) & (for c holds (c <> a implies ( ( Exec (( AddTo (a,b) ),s) ) . c ) = ( s . c ))))
proof
reconsider S = s as SCM-State by CARD_3:107;
reconsider mk = a,ml = b as (Element of ( SCM-Data-Loc )) by CKB7:def 1;
reconsider I = ( AddTo (a,b) ) as (Element of ( SCM-Instr ));
set S1 = ( SCM-Chg (S,( I address_1 ),( ( S . ( I address_1 ) ) + ( S . ( I address_2 ) ) )) );
reconsider i = 2 as (Element of ( Segm 9 )) by NAT_1:44;
A1: I = [ i,( {} ),<* mk,ml *> ];
then A2: ( I address_1 ) = mk by AMI_2:17;
A3: ( I address_2 ) = ml by A1,AMI_2:17;
A4: ( Exec (( AddTo (a,b) ),s) ) = ( SCM-Exec-Res (I,S) ) by AMI_2:def 14
.= ( SCM-Chg (S1,( succ ( IC S ) )) ) by A1,AMI_2:def 13;
hence ( ( Exec (( AddTo (a,b) ),s) ) . ( IC ( SCM ) ) ) = ( succ ( IC s ) ) by CKB17:1,AMI_2:11;
thus ( ( Exec (( AddTo (a,b) ),s) ) . a ) = ( S1 . mk ) by A4,AMI_2:12
.= ( ( s . a ) + ( s . b ) ) by A2,A3,AMI_2:15;
let c;
reconsider mn = c as (Element of ( SCM-Data-Loc )) by CKB7:def 1;
assume A5: c <> a;
thus ( ( Exec (( AddTo (a,b) ),s) ) . c ) = ( S1 . mn ) by A4,AMI_2:12
.= ( s . c ) by A2,A5,AMI_2:16;
end;
