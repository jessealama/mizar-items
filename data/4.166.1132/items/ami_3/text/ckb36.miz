environ
vocabularies NUMBERS,SUBSET_1,STRUCT_0,AMI_1,AMI_2,FUNCT_7,XBOOLE_0,RELAT_1,TARSKI,ZFMISC_1,CAT_1,FSM_1,FUNCT_1,INT_1,NAT_1,GRAPHSP,FINSEQ_1,CARD_1,ORDINAL1,ARYTM_3,ARYTM_1,FUNCOP_1,XXREAL_0,GLIB_000,FUNCT_4,AMI_3,RECDEF_2,COMPOS_1,AMISTD_2,SCMNORM;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,ORDINAL1,XCMPLX_0,FUNCT_1,XXREAL_0,INT_1,NAT_1,ZFMISC_1,MCART_1,FUNCOP_1,CARD_1,CARD_3,RELAT_1,FUNCT_4,FUNCT_7,FINSEQ_1,RECDEF_2,NUMBERS,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,CKB1,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
definitions RELAT_1,COMPOS_1,EXTPRO_1,FUNCOP_1,AMI_2,CARD_1,NAT_1,STRUCT_0,MEMSTR_0,CKB1,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
theorems TARSKI,ZFMISC_1,ENUMSET1,AMI_2,FUNCOP_1,FUNCT_4,CARD_3,FUNCT_2,MCART_1,INT_1,STRUCT_0,ORDINAL1,XBOOLE_0,XBOOLE_1,FUNCT_7,ARYTM_3,XXREAL_0,NAT_1,RELAT_1,FINSEQ_1,FUNCT_1,PARTFUN1,PBOOLE,RECDEF_2,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB1,CKB3,CKB4,CKB5,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35;
registrations XBOOLE_0,SETFAM_1,ORDINAL1,FUNCOP_1,NUMBERS,XREAL_0,INT_1,CARD_3,AMI_2,XXREAL_0,FUNCT_1,FINSEQ_1,FUNCT_2,RELSET_1,COMPOS_1,EXTPRO_1,FUNCT_4,MEMSTR_0,CKB2,CKB6;
constructors DOMAIN_1,XXREAL_0,FINSEQ_4,CAT_2,AMI_2,RELSET_1,PRE_POLY,RECDEF_2,EXTPRO_1,FUNCT_7,MEMSTR_0,CKB1,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve a for Data-Location;
reserve b for Data-Location;
reserve loc for Nat;
reserve I for (Instruction of ( SCM ));
reserve Y for (Element of ( Segm 9 ));
reserve K for (Element of ( Segm 9 ));
reserve T for (Element of ( Segm 9 ));
reserve a1 for (Element of ( NAT ));
reserve a3 for (Element of ( NAT ));
reserve b1 for (Element of ( SCM-Data-Loc ));
reserve c2 for (Element of ( SCM-Data-Loc ));
reserve c3 for (Element of ( SCM-Data-Loc ));
theorem
Lm13: (for I being set holds (I is (Instruction of ( SCM )) iff ((((((((I = [ ( 0 ),( {} ),( {} ) ] or (ex a st (ex b st I = ( a := b )))) or (ex a st (ex b st I = ( AddTo (a,b) )))) or (ex a st (ex b st I = ( SubFrom (a,b) )))) or (ex a st (ex b st I = ( MultBy (a,b) )))) or (ex a st (ex b st I = ( Divide (a,b) )))) or (ex loc st I = ( SCM-goto loc ))) or (ex a st (ex loc st I = ( a =0_goto loc )))) or (ex a st (ex loc st I = ( a >0_goto loc ))))))
proof
let I being set;
thus (I is (Instruction of ( SCM )) implies ((((((((I = [ ( 0 ),( {} ),( {} ) ] or (ex a st (ex b st I = ( a := b )))) or (ex a st (ex b st I = ( AddTo (a,b) )))) or (ex a st (ex b st I = ( SubFrom (a,b) )))) or (ex a st (ex b st I = ( MultBy (a,b) )))) or (ex a st (ex b st I = ( Divide (a,b) )))) or (ex loc st I = ( SCM-goto loc ))) or (ex a st (ex loc st I = ( a =0_goto loc )))) or (ex a st (ex loc st I = ( a >0_goto loc )))))
proof
assume I is (Instruction of ( SCM ));
then (I in ( ( { [ ( SCM-Halt ),( {} ),( {} ) ] } \/ { [ Y,<* a3 *>,( {} ) ]: Y = 6 } ) \/ { [ K,<* a1 *>,<* b1 *> ]: K in { 7,8 } } ) or I in { [ T,( {} ),<* c2,c3 *> ]: T in { 1,2,3,4,5 } }) by XBOOLE_0:def 3;
then A1: ((I in ( { [ ( SCM-Halt ),( {} ),( {} ) ] } \/ { [ Y,<* a3 *>,( {} ) ]: Y = 6 } ) or I in { [ K,<* a1 *>,<* b1 *> ]: K in { 7,8 } }) or I in { [ T,( {} ),<* c2,c3 *> ]: T in { 1,2,3,4,5 } }) by XBOOLE_0:def 3;
per cases  by A1,XBOOLE_0:def 3;
suppose I in { [ ( SCM-Halt ),( {} ),( {} ) ] };

hence thesis by TARSKI:def 1;
end;
suppose I in { [ Y,<* a3 *>,( {} ) ]: Y = 6 };

then consider Y,a3 such that A2: (I = [ Y,<* a3 *>,( {} ) ] & Y = 6);
I = ( SCM-goto a3 ) by A2;
hence thesis;
end;
suppose I in { [ K,<* a1 *>,<* b1 *> ]: K in { 7,8 } };

then consider K,a1,b1 such that A3: (I = [ K,<* a1 *>,<* b1 *> ] & K in { 7,8 });
reconsider a = b1 as Data-Location by CKB7:def 1;
reconsider loc = a1 as (Element of ( NAT ));
(I = ( a =0_goto a1 ) or I = ( a >0_goto a1 )) by A3,TARSKI:def 2;
hence thesis;
end;
suppose I in { [ T,( {} ),<* c2,c3 *> ]: T in { 1,2,3,4,5 } };

then consider T,c2,c3 such that A4: (I = [ T,( {} ),<* c2,c3 *> ] & T in { 1,2,3,4,5 });
reconsider a = c2,b = c3 as Data-Location by CKB7:def 1;
((((I = ( a := b ) or I = ( AddTo (a,b) )) or I = ( SubFrom (a,b) )) or I = ( MultBy (a,b) )) or I = ( Divide (a,b) )) by A4,ENUMSET1:def 3;
hence thesis;
end;
end;

thus thesis by AMI_2:1;
end;
