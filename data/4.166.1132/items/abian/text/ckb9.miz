environ
vocabularies NUMBERS,SETFAM_1,FUNCT_1,SUBSET_1,ORDINAL1,INT_1,RELAT_1,CARD_1,XXREAL_0,ARYTM_3,ARYTM_1,FUNCT_7,XBOOLE_0,TARSKI,ZFMISC_1,FINSET_1,EQREL_1,FUNCOP_1,MCART_1,ABIAN,XCMPLX_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,MCART_1,DOMAIN_1,FINSET_1,SETFAM_1,SEQ_4,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,INT_1,NAT_1,NAT_D,EQREL_1,FUNCT_7,XXREAL_0,CKB1,CKB2,CKB4;
definitions TARSKI,XBOOLE_0,RELAT_1,FUNCT_1,REALSET1,SETFAM_1,INT_1,CKB1,CKB4;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,EQREL_1,NAT_1,INT_1,MCART_1,SCHEME1,FUNCOP_1,SETFAM_1,XBOOLE_0,XBOOLE_1,FUNCT_7,XREAL_1,XXREAL_0,NAT_D,XXREAL_2,CKB1,CKB3,CKB4;
schemes EQREL_1,FUNCT_2,NAT_1,DOMAIN_1;
registrations XBOOLE_0,SUBSET_1,SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,PARTFUN1,FINSET_1,XREAL_0,INT_1,MEMBERED,EQREL_1,XXREAL_2,XXREAL_0,CKB5,CKB6,CKB7,CKB8;
constructors SETFAM_1,XXREAL_0,REAL_1,NAT_1,NAT_D,EQREL_1,SEQ_4,REALSET1,FUNCT_7,XXREAL_2,RELSET_1,CKB1;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve k for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
theorem
Th1: (for i being Integer holds (i is  odd iff (ex j being Integer st i = ( ( 2 * j ) + 1 ))))
proof
let i being Integer;
hereby
consider k such that A1: (i = k or i = ( - k )) by INT_1:2;
consider m being (Element of ( NAT )) such that A2: (k = ( 2 * m ) or k = ( ( 2 * m ) + 1 )) by SCHEME1:1;
assume A3: i is  odd;
assume A4: (for j being Integer holds i <> ( ( 2 * j ) + 1 ));
per cases  by A1,A2;
suppose (i = k & k = ( 2 * m ));

hence contradiction by A3,CKB3:1;
end;
suppose (i = ( - k ) & k = ( 2 * m ));

then i = ( 2 * ( - m ) );
hence contradiction by A3,CKB3:1;
end;
suppose (i = k & k = ( ( 2 * m ) + 1 ));

hence contradiction by A4;
end;
suppose (i = ( - k ) & k = ( ( 2 * m ) + 1 ));

then i = ( ( 2 * ( - ( m + 1 ) ) ) + 1 );
hence contradiction by A4;
end;
end;
given j being Integer such that
A5: i = ( ( 2 * j ) + 1 );

given k being Integer such that
A6: i = ( 2 * k );

1 = ( 2 * ( k - j ) ) by A5,A6;
hence contradiction by INT_1:9;
end;
