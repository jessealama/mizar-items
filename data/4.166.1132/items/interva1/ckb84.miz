environ
vocabularies SUBSET_1,SETFAM_1,TARSKI,ZFMISC_1,XBOOLE_0,LEXBFS,XXREAL_0,ORDINAL4,STRUCT_0,LATTICES,FUNCT_1,BINOP_1,EQREL_1,ROUGHS_1,MCART_1,QC_LANG1,MSUALG_6,XXREAL_2,PBOOLE,REWRITE1,LATTICE3,INTERVA1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,MCART_1,BINOP_1,STRUCT_0,LATTICES,LATTICE3,ROUGHS_1,CKB1,CKB10,CKB13,CKB18,CKB19,CKB22,CKB23,CKB29,CKB37,CKB41,CKB42,CKB43,CKB44,CKB62,CKB71,CKB82,CKB83;
definitions XBOOLE_0,TARSKI,LATTICES,SUBSET_1,LATTICE3,VECTSP_8,STRUCT_0,CKB1,CKB10,CKB18,CKB19,CKB22,CKB23,CKB29,CKB37,CKB62,CKB71,CKB82,CKB83;
theorems ROUGHS_1,ZFMISC_1,MCART_1,XBOOLE_1,BINOP_1,LATTICES,TARSKI,LATTICE3,SETFAM_1,XBOOLE_0,TOPGEN_4,SUBSET_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB16,CKB17,CKB18,CKB19,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB39,CKB40,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB64,CKB65,CKB66,CKB67,CKB68,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83;
schemes BINOP_1,XBOOLE_0;
registrations RELSET_1,STRUCT_0,SUBSET_1,XBOOLE_0,LATTICES,CKB14,CKB20,CKB21,CKB38,CKB63,CKB69,CKB70;
constructors LATTICE3,SETFAM_1,ROUGHS_1,BINOP_1,CKB1,CKB10,CKB13,CKB18,CKB19,CKB22,CKB23,CKB29,CKB37,CKB43,CKB44,CKB62,CKB71,CKB82,CKB83;
requirements BOOLE,SUBSET;
begin
registration
let U being non empty set;
cluster ( InterLatt U ) ->  Lattice-like;
correctness
proof
A1: ( InterLatt U ) is  join-commutative
proof
(for a,b being (Element of ( InterLatt U )) holds ( a "\/" b ) = ( b "\/" a ))
proof
let a being (Element of ( InterLatt U )),b being (Element of ( InterLatt U ));
(a in (the carrier of ( InterLatt U )) & b in (the carrier of ( InterLatt U )));
then (a in ( IntervalSets U ) & b in ( IntervalSets U )) by CKB83:def 1;
then reconsider a9 = a,b9 = b as non empty (IntervalSet of U) by CKB82:def 1;
( a "\/" b ) = ( a9 _\/_ b9 ) by CKB83:def 1
.= ( b9 _\/_ a9 )
.= ( b "\/" a ) by CKB83:def 1;
hence thesis;
end;
hence thesis by LATTICES:def 4;
end;
A2: ( InterLatt U ) is  join-associative
proof
(for a,b,c being (Element of ( InterLatt U )) holds ( a "\/" ( b "\/" c ) ) = ( ( a "\/" b ) "\/" c ))
proof
let a being (Element of ( InterLatt U )),b being (Element of ( InterLatt U )),c being (Element of ( InterLatt U ));
((a in (the carrier of ( InterLatt U )) & b in (the carrier of ( InterLatt U ))) & c in (the carrier of ( InterLatt U )));
then ((a in ( IntervalSets U ) & b in ( IntervalSets U )) & c in ( IntervalSets U )) by CKB83:def 1;
then reconsider a9 = a,b9 = b,c9 = c as non empty (IntervalSet of U) by CKB82:def 1;
reconsider bc = ( b9 _\/_ c9 ) as non empty (IntervalSet of U);
reconsider ab = ( a9 _\/_ b9 ) as non empty (IntervalSet of U);
(bc in ( IntervalSets U ) & ab in ( IntervalSets U )) by CKB82:def 1;
then A3: (bc in (the carrier of ( InterLatt U )) & ab in (the carrier of ( InterLatt U ))) by CKB83:def 1;
( a "\/" ( b "\/" c ) ) = ( (the L_join of ( InterLatt U )) . (a,bc) ) by CKB83:def 1
.= ( a9 _\/_ bc ) by CKB83:def 1,A3
.= ( ( a9 _\/_ b9 ) _\/_ c9 ) by CKB34:1
.= ( (the L_join of ( InterLatt U )) . (ab,c9) ) by CKB83:def 1,A3
.= ( ( a "\/" b ) "\/" c ) by CKB83:def 1;
hence thesis;
end;
hence thesis by LATTICES:def 5;
end;
A4: ( InterLatt U ) is  meet-absorbing
proof
(for a,b being (Element of ( InterLatt U )) holds ( ( a "/\" b ) "\/" b ) = b)
proof
let a being (Element of ( InterLatt U )),b being (Element of ( InterLatt U ));
(a in (the carrier of ( InterLatt U )) & b in (the carrier of ( InterLatt U )));
then (a in ( IntervalSets U ) & b in ( IntervalSets U )) by CKB83:def 1;
then reconsider a9 = a,b9 = b as non empty (IntervalSet of U) by CKB82:def 1;
reconsider ab = ( a9 _/\_ b9 ) as non empty (IntervalSet of U);
ab in ( IntervalSets U ) by CKB82:def 1;
then A5: ab in (the carrier of ( InterLatt U )) by CKB83:def 1;
( ( a "/\" b ) "\/" b ) = ( (the L_join of ( InterLatt U )) . (ab,b) ) by CKB83:def 1
.= ( ab _\/_ b9 ) by CKB83:def 1,A5
.= b by CKB58:1;
hence thesis;
end;
hence thesis by LATTICES:def 8;
end;
A6: ( InterLatt U ) is  meet-associative
proof
(for a,b,c being (Element of ( InterLatt U )) holds ( a "/\" ( b "/\" c ) ) = ( ( a "/\" b ) "/\" c ))
proof
let a being (Element of ( InterLatt U )),b being (Element of ( InterLatt U )),c being (Element of ( InterLatt U ));
((a in (the carrier of ( InterLatt U )) & b in (the carrier of ( InterLatt U ))) & c in (the carrier of ( InterLatt U )));
then ((a in ( IntervalSets U ) & b in ( IntervalSets U )) & c in ( IntervalSets U )) by CKB83:def 1;
then reconsider a9 = a,b9 = b,c9 = c as non empty (IntervalSet of U) by CKB82:def 1;
reconsider bc = ( b9 _/\_ c9 ),ab = ( a9 _/\_ b9 ) as non empty (IntervalSet of U);
(bc in ( IntervalSets U ) & ab in ( IntervalSets U )) by CKB82:def 1;
then A7: (bc in (the carrier of ( InterLatt U )) & ab in (the carrier of ( InterLatt U ))) by CKB83:def 1;
( a "/\" ( b "/\" c ) ) = ( (the L_meet of ( InterLatt U )) . (a,bc) ) by CKB83:def 1
.= ( a9 _/\_ bc ) by CKB83:def 1,A7
.= ( ( a9 _/\_ b9 ) _/\_ c9 ) by CKB35:1
.= ( (the L_meet of ( InterLatt U )) . (ab,c9) ) by CKB83:def 1,A7
.= ( ( a "/\" b ) "/\" c ) by CKB83:def 1;
hence thesis;
end;
hence thesis by LATTICES:def 7;
end;
A8: ( InterLatt U ) is  join-absorbing
proof
(for a,b being (Element of (the carrier of ( InterLatt U ))) holds ( a "/\" ( a "\/" b ) ) = a)
proof
let a being (Element of (the carrier of ( InterLatt U ))),b being (Element of (the carrier of ( InterLatt U )));
(a in (the carrier of ( InterLatt U )) & b in (the carrier of ( InterLatt U )));
then (a in ( IntervalSets U ) & b in ( IntervalSets U )) by CKB83:def 1;
then reconsider a9 = a,b9 = b as non empty (IntervalSet of U) by CKB82:def 1;
reconsider ab = ( a9 _\/_ b9 ) as non empty (IntervalSet of U);
ab in ( IntervalSets U ) by CKB82:def 1;
then A9: ab in (the carrier of ( InterLatt U )) by CKB83:def 1;
( a "/\" ( a "\/" b ) ) = ( (the L_meet of ( InterLatt U )) . (a9,( a9 _\/_ b9 )) ) by CKB83:def 1
.= ( a9 _/\_ ab ) by CKB83:def 1,A9
.= a by CKB57:1;
hence thesis;
end;
hence thesis by LATTICES:def 9;
end;
( InterLatt U ) is  meet-commutative
proof
(for a,b being (Element of (the carrier of ( InterLatt U ))) holds ( a "/\" b ) = ( b "/\" a ))
proof
let a being (Element of (the carrier of ( InterLatt U ))),b being (Element of (the carrier of ( InterLatt U )));
(a in (the carrier of ( InterLatt U )) & b in (the carrier of ( InterLatt U )));
then (a in ( IntervalSets U ) & b in ( IntervalSets U )) by CKB83:def 1;
then reconsider a9 = a,b9 = b as non empty (IntervalSet of U) by CKB82:def 1;
( a9 _/\_ b9 ) = ( b9 _/\_ a9 );
then ( (the L_meet of ( InterLatt U )) . (a,b) ) = ( b9 _/\_ a9 ) by CKB83:def 1
.= ( (the L_meet of ( InterLatt U )) . (b,a) ) by CKB83:def 1;
hence thesis;
end;
hence thesis by LATTICES:def 6;
end;
hence thesis by A1,A2,A4,A6,A8;
end;
end;
