environ
vocabularies SUBSET_1,SETFAM_1,TARSKI,ZFMISC_1,XBOOLE_0,LEXBFS,XXREAL_0,ORDINAL4,STRUCT_0,LATTICES,FUNCT_1,BINOP_1,EQREL_1,ROUGHS_1,MCART_1,QC_LANG1,MSUALG_6,XXREAL_2,PBOOLE,REWRITE1,LATTICE3,INTERVA1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,MCART_1,BINOP_1,STRUCT_0,LATTICES,LATTICE3,ROUGHS_1;
definitions XBOOLE_0,TARSKI,LATTICES,SUBSET_1,LATTICE3,VECTSP_8,STRUCT_0;
theorems ROUGHS_1,ZFMISC_1,MCART_1,XBOOLE_1,BINOP_1,LATTICES,TARSKI,LATTICE3,SETFAM_1,XBOOLE_0,TOPGEN_4,SUBSET_1;
schemes BINOP_1,XBOOLE_0;
registrations RELSET_1,STRUCT_0,SUBSET_1,XBOOLE_0,LATTICES;
constructors LATTICE3,SETFAM_1,ROUGHS_1,BINOP_1;
requirements BOOLE,SUBSET;
begin
definition
let U being set;
let X being (Subset of U);
let Y being (Subset of U);
func Inter (X,Y) -> (Subset-Family of U)
equals
{ A where A is (Subset of U): (X c= A & A c= Y) };
coherence
proof
set IT = { A where A is (Subset of U): (X c= A & A c= Y) };
IT c= ( bool U )
proof
let x being set;
assume x in IT;
then x in { A where A is (Subset of U): (X c= A & A c= Y) };
then consider B being (Subset of U) such that A1: ((x = B & X c= B) & B c= Y);
thus thesis by A1;
end;
then IT is (Subset-Family of U);
hence thesis;
end;
end;
