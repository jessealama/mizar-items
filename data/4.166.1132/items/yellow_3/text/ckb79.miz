environ
vocabularies XBOOLE_0,SUBSET_1,TARSKI,ORDERS_2,WAYBEL_0,XXREAL_0,ZFMISC_1,RELAT_1,MCART_1,LATTICE3,RELAT_2,LATTICES,YELLOW_0,EQREL_1,REWRITE1,ORDINAL2,FUNCT_1,STRUCT_0,YELLOW_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,RELSET_1,MCART_1,DOMAIN_1,FUNCT_2,BINOP_1,STRUCT_0,ORDERS_2,LATTICE3,YELLOW_0,WAYBEL_0,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB43,CKB47,CKB50,CKB53,CKB56;
definitions LATTICE3,RELAT_2,TARSKI,WAYBEL_0,ORDERS_2,CKB18,CKB21,CKB56;
theorems FUNCT_1,FUNCT_2,FUNCT_5,LATTICE3,MCART_1,ORDERS_2,RELAT_1,RELAT_2,RELSET_1,TARSKI,WAYBEL_0,YELLOW_0,YELLOW_2,ZFMISC_1,XBOOLE_0,BINOP_1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB18,CKB19,CKB21,CKB28,CKB29,CKB30,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB44,CKB45,CKB46,CKB48,CKB49,CKB51,CKB52,CKB54,CKB55,CKB56,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77;
schemes FUNCT_7,RELAT_1,CKB1,CKB14,CKB15,CKB16,CKB17;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,LATTICE3,YELLOW_0,ORDERS_2,WAYBEL_0,RELAT_1,CKB2,CKB3,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB57,CKB58,CKB59,CKB60,CKB61,CKB78;
constructors DOMAIN_1,LATTICE3,ORDERS_3,WAYBEL_0,RELSET_1,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB43,CKB47,CKB50,CKB53,CKB56;
requirements SUBSET,BOOLE;
begin
theorem
(for X,Y being non  empty  lower-bounded  antisymmetric RelStr holds ([: X,Y :] is  complete implies (X is  complete & Y is  complete)))
proof
let X being non  empty  lower-bounded  antisymmetric RelStr;
let Y being non  empty  lower-bounded  antisymmetric RelStr;
assume that
A1: [: X,Y :] is  complete;
(for A being (Subset of X) holds  ex_sup_of A,X)
proof
let A being (Subset of X);
per cases ;
suppose A2: A is non  empty;

set B = the non  empty (Subset of Y);
 ex_sup_of [: A,B :],[: X,Y :] by A1,YELLOW_0:17;
hence thesis by A2,CKB72:1;
end;
suppose A is  empty;

hence thesis by YELLOW_0:42;
end;
end;
hence X is  complete by YELLOW_0:53;
(for B being (Subset of Y) holds  ex_sup_of B,Y)
proof
let B being (Subset of Y);
per cases ;
suppose A3: B is non  empty;

set A = the non  empty (Subset of X);
 ex_sup_of [: A,B :],[: X,Y :] by A1,YELLOW_0:17;
hence thesis by A3,CKB72:1;
end;
suppose B is  empty;

hence thesis by YELLOW_0:42;
end;
end;
hence thesis by YELLOW_0:53;
end;
