environ
vocabularies XBOOLE_0,SUBSET_1,TARSKI,ORDERS_2,WAYBEL_0,XXREAL_0,ZFMISC_1,RELAT_1,MCART_1,LATTICE3,RELAT_2,LATTICES,YELLOW_0,EQREL_1,REWRITE1,ORDINAL2,FUNCT_1,STRUCT_0,YELLOW_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,RELSET_1,MCART_1,DOMAIN_1,FUNCT_2,BINOP_1,STRUCT_0,ORDERS_2,LATTICE3,YELLOW_0,WAYBEL_0,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
definitions LATTICE3,RELAT_2,TARSKI,WAYBEL_0,ORDERS_2,CKB18,CKB21;
theorems FUNCT_1,FUNCT_2,FUNCT_5,LATTICE3,MCART_1,ORDERS_2,RELAT_1,RELAT_2,RELSET_1,TARSKI,WAYBEL_0,YELLOW_0,YELLOW_2,ZFMISC_1,XBOOLE_0,BINOP_1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB18,CKB19,CKB21,CKB28,CKB29,CKB30,CKB37,CKB38,CKB39,CKB40;
schemes FUNCT_7,RELAT_1,CKB1,CKB14,CKB15,CKB16,CKB17;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,LATTICE3,YELLOW_0,ORDERS_2,WAYBEL_0,RELAT_1,CKB2,CKB3,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36;
constructors DOMAIN_1,LATTICE3,ORDERS_3,WAYBEL_0,RELSET_1,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
requirements SUBSET,BOOLE;
begin
theorem
(for X,Y being non empty  reflexive RelStr holds ([: X,Y :] is  with_suprema implies (X is  with_suprema & Y is  with_suprema)))
proof
let X being non empty  reflexive RelStr,Y being non empty  reflexive RelStr;
assume that
A1: [: X,Y :] is  with_suprema;
A2: (the carrier of [: X,Y :]) = [: (the carrier of X),(the carrier of Y) :] by CKB21:def 1;
thus X is  with_suprema
proof
let x being (Element of X),y being (Element of X);
set a = the (Element of Y);
A3: a <= a;
consider z being (Element of [: X,Y :]) such that A4: ([ x,a ] <= z & [ y,a ] <= z) and A5: (for z9 being (Element of [: X,Y :]) holds (([ x,a ] <= z9 & [ y,a ] <= z9) implies z <= z9)) by A1,LATTICE3:def 10;
take ( z `1 );
A6: z = [ ( z `1 ),( z `2 ) ] by A2,MCART_1:21;
hence (x <= ( z `1 ) & y <= ( z `1 )) by A4,CKB28:1;
let z9 being (Element of X);
assume (x <= z9 & y <= z9);
then ([ x,a ] <= [ z9,a ] & [ y,a ] <= [ z9,a ]) by A3,CKB28:1;
then z <= [ z9,a ] by A5;
hence ( z `1 ) <= z9 by A6,CKB28:1;
end;

set a = the (Element of X);
A7: a <= a;
let x being (Element of Y),y being (Element of Y);
consider z being (Element of [: X,Y :]) such that A8: ([ a,x ] <= z & [ a,y ] <= z) and A9: (for z9 being (Element of [: X,Y :]) holds (([ a,x ] <= z9 & [ a,y ] <= z9) implies z <= z9)) by A1,LATTICE3:def 10;
take ( z `2 );
A10: z = [ ( z `1 ),( z `2 ) ] by A2,MCART_1:21;
hence (x <= ( z `2 ) & y <= ( z `2 )) by A8,CKB28:1;
let z9 being (Element of Y);
assume (x <= z9 & y <= z9);
then ([ a,x ] <= [ a,z9 ] & [ a,y ] <= [ a,z9 ]) by A7,CKB28:1;
then z <= [ a,z9 ] by A9;
hence ( z `2 ) <= z9 by A10,CKB28:1;
end;
