environ
vocabularies NUMBERS,NAT_1,CARD_1,ZFMISC_1,XBOOLE_0,SUBSET_1,ARYTM_3,FUNCT_3,FUNCT_1,RELAT_1,FUNCT_2,FUNCT_4,TARSKI,FUNCOP_1,ORDERS_2,STRUCT_0,RELAT_2,XXREAL_0,ARYTM_1,WELLORD1,CAT_1,SEQM_3,FINSET_1,ORDINAL1,CARD_2,SQUARE_1,NECKLACE;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,ZFMISC_1,CARD_1,CARD_2,WELLORD1,FINSET_1,SQUARE_1,QUIN_1,ORDINAL1,NUMBERS,XCMPLX_0,REAL_1,NAT_1,NAT_D,RELAT_1,RELAT_2,FUNCT_3,FUNCOP_1,RELSET_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_4,BINOP_1,XXREAL_0,STRUCT_0,ORDERS_2,WAYBEL_0,WAYBEL_1,ORDERS_3,CKB15,CKB16,CKB18,CKB20,CKB21,CKB22,CKB24,CKB25;
definitions WAYBEL_0,WAYBEL_1,ORDERS_3,STRUCT_0,FUNCT_1,RELAT_1,RELAT_2,XBOOLE_0,TARSKI,SQUARE_1,FUNCOP_1,WELLORD1,SUBSET_1,BINOP_1,CKB15,CKB18,CKB21,CKB22,CKB24,CKB25;
theorems FUNCT_1,FUNCT_2,FUNCT_4,ENUMSET1,RELSET_1,ZFMISC_1,NAT_1,AXIOMS,CARD_1,WAYBEL_0,SUBSET_1,XBOOLE_0,XBOOLE_1,QUIN_1,WELLORD2,RELAT_1,FUNCT_3,TARSKI,REALSET1,FUNCOP_1,ORDERS_2,RELAT_2,ORDINAL1,CARD_2,SQUARE_1,WAYBEL_1,ORDERS_3,PARTFUN1,XREAL_1,XXREAL_0,FRECHET,CKB1,CKB2,CKB3,CKB4,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14,CKB15,CKB17,CKB18,CKB19,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
schemes NAT_1,FRAENKEL,FUNCT_7,CKB13;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,FUNCT_2,FUNCOP_1,FUNCT_4,FINSET_1,XXREAL_0,XREAL_0,SQUARE_1,REALSET1,STRUCT_0,ORDERS_2,HILBERT3,CARD_1,RELAT_1,ZFMISC_1,CKB5,CKB7;
constructors WELLORD1,REAL_1,SQUARE_1,NAT_1,QUIN_1,CARD_2,REALSET1,ORDERS_3,WAYBEL_1,NAT_D,RELSET_1,CKB15,CKB16,CKB18,CKB21,CKB22,CKB24,CKB25;
requirements BOOLE,SUBSET,NUMERALS,REAL,ARITHM;
begin
reserve i for Nat;
reserve n for Nat;
theorem
Th17: (n > ( 0 ) implies ( card (the InternalRel of ( n -SuccRelStr )) ) = ( n - 1 ))
proof
deffunc F((Element of ( NAT ))) = [ $1,( $1 + 1 ) ];
defpred P[ (Element of ( NAT )) ]
 means
( $1 + 1 ) < n;
defpred Q[ set ]
 means
$1 in ( n -' 1 );
A1: ( n -' 1 ) c= ( NAT );
assume A2: n > ( 0 );
then A3: n >= ( ( 0 ) + 1 ) by NAT_1:13;
A4: (i in ( n -' 1 ) implies ( i + 1 ) < n)
proof
assume i in ( n -' 1 );
then A5: i < ( n -' 1 ) by NAT_1:44;
n >= ( ( 0 ) + 1 ) by A2,NAT_1:13;
then i < ( n - 1 ) by A5,XREAL_1:233;
hence thesis by XREAL_1:20;
end;
A6: (for i being (Element of ( NAT )) holds (P[ i ] iff Q[ i ]))
proof
let i being (Element of ( NAT ));
thus (( i + 1 ) < n implies i in ( n -' 1 ))
proof
assume ( i + 1 ) < n;
then i < ( n - 1 ) by XREAL_1:20;
then i < ( n -' 1 ) by A3,XREAL_1:233;
hence thesis by NAT_1:44;
end;

thus thesis by A4;
end;
A7: { F(i) where i is (Element of ( NAT )): P[ i ] } = { F(i) where i is (Element of ( NAT )): Q[ i ] } from FRAENKEL:sch 3(A6);
deffunc F((Element of ( NAT ))) = [ $1,( $1 + 1 ) ];
A8: (for d1,d2 being (Element of ( NAT )) holds (F(d1) = F(d2) implies d1 = d2)) by ZFMISC_1:27;
A9: ( n -' 1 ),{ F(i) where i is (Element of ( NAT )): i in ( n -' 1 ) } are_equipotent  from FUNCT_7:sch 4(A1,A8);
thus ( card (the InternalRel of ( n -SuccRelStr )) ) = ( card { [ i,( i + 1 ) ] where i is (Element of ( NAT )): ( i + 1 ) < n } ) by CKB25:def 1
.= ( card ( n -' 1 ) ) by A7,A9,CARD_1:5
.= ( n -' 1 ) by CARD_1:def 2
.= ( n - 1 ) by A3,XREAL_1:233;
end;
