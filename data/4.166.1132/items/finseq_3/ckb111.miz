environ
vocabularies NUMBERS,FINSEQ_1,ORDINAL1,XBOOLE_0,ARYTM_3,CARD_1,XXREAL_0,ARYTM_1,NAT_1,SUBSET_1,TARSKI,RELAT_1,ORDINAL4,FUNCT_1,FINSET_1,FINSEQ_2,FUNCT_2,CARD_3,FUNCOP_1,FINSEQ_3,EQREL_1,ALG_1,FUNCT_6,SETFAM_1,FINSEQ_4,ZFMISC_1,FUNCT_5,PARTFUN1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,SETFAM_1,CARD_1,NUMBERS,ORDINAL1,XCMPLX_0,RELAT_1,FUNCT_1,FINSEQ_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,FINSEQ_2,FINSET_1,NAT_1,FINSEQOP,XXREAL_0,CARD_3,FUNCT_3,FUNCT_5,FUNCT_6,EQREL_1,CKB61;
definitions FUNCT_1,TARSKI,WELLORD2,XBOOLE_0,FINSEQ_2,CARD_3,FUNCOP_1,EQREL_1,FUNCT_6,CKB61;
theorems CARD_1,CARD_2,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSET_1,FUNCT_1,INT_1,NAT_1,TARSKI,WELLORD2,ZFMISC_1,RELAT_1,XREAL_1,XBOOLE_0,XBOOLE_1,FUNCT_2,GRFUNC_1,SUBSET_1,XXREAL_0,ORDINAL1,NUMBERS,CARD_3,FUNCOP_1,EQREL_1,FUNCT_6,SETFAM_1,FUNCT_5,FUNCT_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106,CKB107,CKB108,CKB109,CKB110;
schemes FINSEQ_1,FUNCT_1,NAT_1,CLASSES1,RELSET_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,CARD_1,FINSEQ_2,FUNCOP_1,CARD_3,SUBSET_1,FUNCT_2,CARD_2,EQREL_1,RELSET_1,FUNCT_4;
constructors ENUMSET1,PARTFUN1,WELLORD2,XXREAL_0,REAL_1,NAT_1,INT_1,FINSEQOP,RELSET_1,CARD_3,DOMAIN_1,CARD_2,EQREL_1,FUNCT_6,BINOP_1,FUNCT_3,FUNCT_5,CKB61;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve p for FinSequence;
reserve x for set;
reserve y for set;
reserve z for set;
theorem
(((((p is  one-to-one & ( rng p ) = { x,y,z }) & x <> y) & y <> z) & x <> z) implies ( len p ) = 3)
proof
assume that
A1: p is  one-to-one
and
A2: ( rng p ) = { x,y,z }
and
A3: x <> y
and
A4: y <> z
and
A5: x <> z;
<* x,y,z *> is  one-to-one by A3,A4,A5,CKB105:1;
hence thesis by A1,A2,CKB110:1;
end;
