environ
vocabularies FUNCT_1,SUBSET_1,NUMBERS,XREAL_0,ORDINAL1,NAT_1,RELAT_1,TARSKI,VALUED_0,REAL_1,PARTFUN1,FUNCOP_1,CARD_1,XBOOLE_0,ARYTM_3,VALUED_1,ARYTM_1,COMPLEX1,SEQ_1,PBOOLE;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,VALUED_0,REAL_1,RELAT_1,FUNCT_1,FUNCOP_1,PBOOLE,COMPLEX1,NAT_1,RELSET_1,PARTFUN1,FUNCT_2,VALUED_1,CKB1;
definitions XREAL_0,RELAT_1,VALUED_1;
theorems FUNCT_1,TARSKI,ABSVALUE,FUNCT_2,PARTFUN1,RELSET_1,RELAT_1,XREAL_0,ZFMISC_1,XBOOLE_0,XCMPLX_0,XCMPLX_1,COMPLEX1,VALUED_1,FUNCOP_1;
schemes CLASSES1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XREAL_0,MEMBERED,VALUED_0,VALUED_1,FUNCT_2;
constructors PARTFUN1,FUNCT_2,XXREAL_0,REAL_1,COMPLEX1,VALUED_1,FUNCOP_1,RELSET_1;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve f for Function;
reserve x for set;
reserve y for set;
theorem
Th3: (f is Real_Sequence iff (( dom f ) = ( NAT ) & (for x holds (x in ( NAT ) implies ( f . x ) is  real))))
proof
thus (f is Real_Sequence implies (( dom f ) = ( NAT ) & (for x holds (x in ( NAT ) implies ( f . x ) is  real)))) by FUNCT_2:def 1;
assume that
A1: ( dom f ) = ( NAT )
and
A2: (for x holds (x in ( NAT ) implies ( f . x ) is  real));
now
let y;
assume y in ( rng f );
then consider x such that A3: x in ( dom f ) and A4: y = ( f . x ) by FUNCT_1:def 3;
( f . x ) is  real by A1,A2,A3;
hence y in ( REAL ) by A4,XREAL_0:def 1;
end;
then ( rng f ) c= ( REAL ) by TARSKI:def 3;
hence thesis by A1,FUNCT_2:def 1,RELSET_1:4;
end;
