environ
vocabularies FUNCT_1,SUBSET_1,NUMBERS,XREAL_0,ORDINAL1,NAT_1,RELAT_1,TARSKI,VALUED_0,REAL_1,PARTFUN1,FUNCOP_1,CARD_1,XBOOLE_0,ARYTM_3,VALUED_1,ARYTM_1,COMPLEX1,SEQ_1,PBOOLE;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,VALUED_0,REAL_1,RELAT_1,FUNCT_1,FUNCOP_1,PBOOLE,COMPLEX1,NAT_1,RELSET_1,PARTFUN1,FUNCT_2,VALUED_1,CKB1,CKB4;
definitions XREAL_0,RELAT_1,VALUED_1;
theorems FUNCT_1,TARSKI,ABSVALUE,FUNCT_2,PARTFUN1,RELSET_1,RELAT_1,XREAL_0,ZFMISC_1,XBOOLE_0,XCMPLX_0,XCMPLX_1,COMPLEX1,VALUED_1,FUNCOP_1,CKB2,CKB3,CKB6,CKB7,CKB8,CKB9;
schemes CLASSES1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XREAL_0,MEMBERED,VALUED_0,VALUED_1,FUNCT_2,CKB5;
constructors PARTFUN1,FUNCT_2,XXREAL_0,REAL_1,COMPLEX1,VALUED_1,FUNCOP_1,RELSET_1,CKB4;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve f for Function;
reserve n for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve x for set;
reserve y for set;
reserve seq for Real_Sequence;
scheme ExRealSeq { F(set) ->  real number } : (ex seq st (for n holds ( seq . n ) = F(n)))
proof
defpred P[ set,set ]
 means
(ex n st (n = $1 & $2 = F(n)));
A1:now
let x;
assume x in ( NAT );
then consider n such that A2: n = x;
reconsider r2 = F(n) as set;
take y = r2;
thus P[ x,y ] by A2;
end;
consider f such that A3: ( dom f ) = ( NAT ) and A4: (for x holds (x in ( NAT ) implies P[ x,( f . x ) ])) from CLASSES1:sch 1(A1);
now
let x;
assume x in ( NAT );
then (ex n st (n = x & ( f . x ) = F(n))) by A4;
hence ( f . x ) is  real;
end;
then reconsider f as Real_Sequence by A3,CKB2:1;
take seq = f;
let n;
(ex k st (k = n & ( seq . n ) = F(k))) by A4;
hence thesis;
end;
