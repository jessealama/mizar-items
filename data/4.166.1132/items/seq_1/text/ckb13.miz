environ
vocabularies FUNCT_1,SUBSET_1,NUMBERS,XREAL_0,ORDINAL1,NAT_1,RELAT_1,TARSKI,VALUED_0,REAL_1,PARTFUN1,FUNCOP_1,CARD_1,XBOOLE_0,ARYTM_3,VALUED_1,ARYTM_1,COMPLEX1,SEQ_1,PBOOLE;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,VALUED_0,REAL_1,RELAT_1,FUNCT_1,FUNCOP_1,PBOOLE,COMPLEX1,NAT_1,RELSET_1,PARTFUN1,FUNCT_2,VALUED_1,CKB1,CKB4;
definitions XREAL_0,RELAT_1,VALUED_1;
theorems FUNCT_1,TARSKI,ABSVALUE,FUNCT_2,PARTFUN1,RELSET_1,RELAT_1,XREAL_0,ZFMISC_1,XBOOLE_0,XCMPLX_0,XCMPLX_1,COMPLEX1,VALUED_1,FUNCOP_1,CKB2,CKB3,CKB6,CKB7,CKB8,CKB9;
schemes CLASSES1,FUNCT_2,XBOOLE_0,CKB10,CKB11,CKB12;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XREAL_0,MEMBERED,VALUED_0,VALUED_1,FUNCT_2,CKB5;
constructors PARTFUN1,FUNCT_2,XXREAL_0,REAL_1,COMPLEX1,VALUED_1,FUNCOP_1,RELSET_1,CKB4;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve f for Function;
scheme UnPartFuncD9 { C,D,X() -> set,F(set) -> set } : (for f,g being (PartFunc of C(),D()) holds (((( dom f ) = X() & (for c being (Element of C()) holds (c in ( dom f ) implies ( f . c ) = F(c)))) & (( dom g ) = X() & (for c being (Element of C()) holds (c in ( dom g ) implies ( g . c ) = F(c))))) implies f = g))
proof
let f being (PartFunc of C(),D());
let g being (PartFunc of C(),D());
assume that
A1: ( dom f ) = X()
and
A2: (for c being (Element of C()) holds (c in ( dom f ) implies ( f . c ) = F(c)))
and
A3: ( dom g ) = X()
and
A4: (for c being (Element of C()) holds (c in ( dom g ) implies ( g . c ) = F(c)));
now
let c being (Element of C());
assume A5: c in ( dom f );
hence ( f . c ) = F(c) by A2
.= ( g . c ) by A1,A3,A4,A5;
end;
hence thesis by A1,A3,PARTFUN1:5;
end;
