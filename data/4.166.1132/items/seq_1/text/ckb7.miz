environ
vocabularies FUNCT_1,SUBSET_1,NUMBERS,XREAL_0,ORDINAL1,NAT_1,RELAT_1,TARSKI,VALUED_0,REAL_1,PARTFUN1,FUNCOP_1,CARD_1,XBOOLE_0,ARYTM_3,VALUED_1,ARYTM_1,COMPLEX1,SEQ_1,PBOOLE;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,VALUED_0,REAL_1,RELAT_1,FUNCT_1,FUNCOP_1,PBOOLE,COMPLEX1,NAT_1,RELSET_1,PARTFUN1,FUNCT_2,VALUED_1,CKB1,CKB4;
definitions XREAL_0,RELAT_1,VALUED_1;
theorems FUNCT_1,TARSKI,ABSVALUE,FUNCT_2,PARTFUN1,RELSET_1,RELAT_1,XREAL_0,ZFMISC_1,XBOOLE_0,XCMPLX_0,XCMPLX_1,COMPLEX1,VALUED_1,FUNCOP_1,CKB2,CKB3,CKB6;
schemes CLASSES1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XREAL_0,MEMBERED,VALUED_0,VALUED_1,FUNCT_2,CKB5;
constructors PARTFUN1,FUNCT_2,XXREAL_0,REAL_1,COMPLEX1,VALUED_1,FUNCOP_1,RELSET_1,CKB4;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve seq for Real_Sequence;
theorem
Th6: (seq is  non-zero iff (for x holds (x in ( NAT ) implies ( seq . x ) <> ( 0 ))))
proof
thus (seq is  non-zero implies (for x holds (x in ( NAT ) implies ( seq . x ) <> ( 0 ))))
proof
assume A1: seq is  non-zero;
let x;
assume x in ( NAT );
then x in ( dom seq ) by CKB3:1;
then ( seq . x ) in ( rng seq ) by FUNCT_1:def 3;
hence thesis by A1,RELAT_1:def 9;
end;

assume A2: (for x holds (x in ( NAT ) implies ( seq . x ) <> ( 0 )));
assume ( 0 ) in ( rng seq );
then (ex x st (x in ( dom seq ) & ( seq . x ) = ( 0 ))) by FUNCT_1:def 3;
hence contradiction by A2;
end;
