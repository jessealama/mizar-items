environ
vocabularies NUMBERS,SUPINF_1,REAL_1,RELAT_1,XREAL_0,ORDINAL1,XXREAL_0,ARYTM_3,COMPLEX1,CARD_1,ARYTM_1,MEASURE6,FINSEQ_1,CARD_3,FUNCT_1,SUBSET_1,SUPINF_2,NAT_1,FUNCT_2,FUNCOP_1,XBOOLE_0,TARSKI,ORDINAL4,PARTFUN1,RFINSEQ,XCMPLX_0;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,ORDINAL1,NUMBERS,XXREAL_3,XCMPLX_0,XREAL_0,REAL_1,FUNCT_1,RELSET_1,PARTFUN1,BINOP_1,FUNCT_2,SEQ_1,DOMAIN_1,BINOP_2,RFINSEQ,RFUNCT_3,RVSUM_1,FUNCOP_1,FINSEQ_1,FINSEQ_4,XXREAL_0,NAT_1,NAT_D,SUPINF_1,SUPINF_2,MEASURE6,CKB1,CKB3,CKB5;
definitions XXREAL_3,XCMPLX_0,CKB5;
theorems FUNCT_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_5,NAT_1,TARSKI,FUNCT_1,INT_1,XCMPLX_1,XBOOLE_0,RFINSEQ,RELAT_1,FUNCOP_1,XREAL_1,XXREAL_0,XREAL_0,PARTFUN1,ORDINAL1,MEASURE6,XXREAL_3,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9;
schemes FUNCT_2,FINSEQ_2,NAT_1,RECDEF_1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,VALUED_0,CARD_1,XXREAL_3;
constructors BINOP_1,DOMAIN_1,REAL_1,NAT_1,FINSEQ_4,FINSOP_1,RVSUM_1,SUPINF_2,RFINSEQ,RFUNCT_3,MEASURE6,BINARITH,SEQ_1,BINOP_2,SUPINF_1,CLASSES1,NAT_D,RELSET_1,XXREAL_3,FINSEQ_1,FUNCT_1,FUNCT_2,INT_1,FUNCOP_1,CKB1,CKB3,CKB5;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
definition
let F being (FinSequence of ( ExtREAL ));
func Sum F -> R_eal
means
:Def4: (ex f being (Function of ( NAT ),( ExtREAL )) st ((it = ( f . ( len F ) ) & ( f . ( 0 ) ) = ( 0. )) & (for i being (Element of ( NAT )) holds (i < ( len F ) implies ( f . ( i + 1 ) ) = ( ( f . i ) + ( F . ( i + 1 ) ) )))));
existence
proof
defpred P[ (FinSequence of ( ExtREAL )) ]
 means
(ex f being (Function of ( NAT ),( ExtREAL )) st (( f . ( 0 ) ) = ( 0. ) & (for i being (Element of ( NAT )) holds (i < ( len $1 ) implies ( f . ( i + 1 ) ) = ( ( f . i ) + ( $1 . ( i + 1 ) ) )))));
A1: (for F being (FinSequence of ( ExtREAL )) holds (for x being (Element of ( ExtREAL )) holds (P[ F ] implies P[ ( F ^ <* x *> ) ])))
proof
let F being (FinSequence of ( ExtREAL ));
let x being (Element of ( ExtREAL ));
assume P[ F ];
then consider f being (Function of ( NAT ),( ExtREAL )) such that A2: ( f . ( 0 ) ) = ( 0. ) and A3: (for i being (Element of ( NAT )) holds (i < ( len F ) implies ( f . ( i + 1 ) ) = ( ( f . i ) + ( F . ( i + 1 ) ) )));
defpred R[ (Element of ( NAT )),set ]
 means
(($1 <= ( len F ) implies $2 = ( f . $1 )) & ($1 = ( ( len F ) + 1 ) implies $2 = ( ( f . ( len F ) ) + x )));
A4: (for i being (Element of ( NAT )) holds (ex g being (Element of ( ExtREAL )) st R[ i,g ]))
proof
let i being (Element of ( NAT ));
per cases ;
suppose A5: i <> ( ( len F ) + 1 );

take ( f . i );
thus thesis by A5;
end;
suppose A6: i = ( ( len F ) + 1 );

take ( ( f . ( len F ) ) + x );
thus thesis by A6,NAT_1:13;
end;
end;
consider f9 being (Function of ( NAT ),( ExtREAL )) such that A7: (for i being (Element of ( NAT )) holds R[ i,( f9 . i ) ]) from FUNCT_2:sch 3(A4);
thus P[ ( F ^ <* x *> ) ]
proof
take f9;
thus ( f9 . ( 0 ) ) = ( 0. ) by A2,A7;
thus (for i being (Element of ( NAT )) holds (i < ( len ( F ^ <* x *> ) ) implies ( f9 . ( i + 1 ) ) = ( ( f9 . i ) + ( ( F ^ <* x *> ) . ( i + 1 ) ) )))
proof
let i being (Element of ( NAT ));
assume i < ( len ( F ^ <* x *> ) );
then i < ( ( len F ) + ( len <* x *> ) ) by FINSEQ_1:22;
then i < ( ( len F ) + 1 ) by FINSEQ_1:39;
then A8: i <= ( len F ) by NAT_1:13;
then A9: ( f9 . i ) = ( f . i ) by A7;
per cases  by A8,XXREAL_0:1;
suppose A10: i < ( len F );

then A11: ( i + 1 ) <= ( len F ) by INT_1:7;
1 <= ( i + 1 ) by NAT_1:12;
then ( i + 1 ) in ( Seg ( len F ) ) by A11,FINSEQ_1:1;
then A12: ( i + 1 ) in ( dom F ) by FINSEQ_1:def 3;
( f9 . ( i + 1 ) ) = ( f . ( i + 1 ) ) by A7,A11;
then ( f9 . ( i + 1 ) ) = ( ( f9 . i ) + ( F . ( i + 1 ) ) ) by A3,A9,A10;
hence thesis by A12,FINSEQ_1:def 7;
end;
suppose A13: i = ( len F );

then ( f9 . ( i + 1 ) ) = ( ( f9 . i ) + x ) by A7,A9;
hence thesis by A13,FINSEQ_1:42;
end;
end;

end;

end;
A14: P[ ( <*> ( ExtREAL ) ) ]
proof
reconsider f = ( ( NAT ) --> ( 0. ) ) as (Function of ( NAT ),( ExtREAL ));
take f;
thus ( f . ( 0 ) ) = ( 0. ) by FUNCOP_1:7;
thus thesis;
end;
(for F being (FinSequence of ( ExtREAL )) holds P[ F ]) from FINSEQ_2:sch 2(A14,A1);
then consider f being (Function of ( NAT ),( ExtREAL )) such that A15: ( f . ( 0 ) ) = ( 0. ) and A16: (for i being (Element of ( NAT )) holds (i < ( len F ) implies ( f . ( i + 1 ) ) = ( ( f . i ) + ( F . ( i + 1 ) ) )));
take ( f . ( len F ) );
thus thesis by A15,A16;
end;
uniqueness
proof
let g1 being (Element of ( ExtREAL )),g2 being (Element of ( ExtREAL ));
given f1 being (Function of ( NAT ),( ExtREAL )) such that
A17: g1 = ( f1 . ( len F ) )
and
A18: ( f1 . ( 0 ) ) = ( 0. )
and
A19: (for i being (Element of ( NAT )) holds (i < ( len F ) implies ( f1 . ( i + 1 ) ) = ( ( f1 . i ) + ( F . ( i + 1 ) ) )));

given f2 being (Function of ( NAT ),( ExtREAL )) such that
A20: g2 = ( f2 . ( len F ) )
and
A21: ( f2 . ( 0 ) ) = ( 0. )
and
A22: (for i being (Element of ( NAT )) holds (i < ( len F ) implies ( f2 . ( i + 1 ) ) = ( ( f2 . i ) + ( F . ( i + 1 ) ) )));

defpred P[ (Element of ( NAT )) ]
 means
($1 <= ( len F ) implies ( f1 . $1 ) = ( f2 . $1 ));
A23: (for i being (Element of ( NAT )) holds (P[ i ] implies P[ ( i + 1 ) ]))
proof
let i being (Element of ( NAT ));
assume A24: P[ i ];
thus P[ ( i + 1 ) ]
proof
assume ( i + 1 ) <= ( len F );
then A25: i < ( len F ) by NAT_1:13;
then ( f1 . ( i + 1 ) ) = ( ( f1 . i ) + ( F . ( i + 1 ) ) ) by A19;
hence thesis by A22,A24,A25;
end;

end;
A26: P[ ( 0 ) ] by A18,A21;
(for i being (Element of ( NAT )) holds P[ i ]) from NAT_1:sch 1(A26,A23);
hence thesis by A17,A20;
end;
end;
