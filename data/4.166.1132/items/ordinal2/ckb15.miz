environ
vocabularies ORDINAL1,FUNCT_1,XBOOLE_0,TARSKI,ZFMISC_1,RELAT_1,SETFAM_1,SUBSET_1,FUNCOP_1,ORDINAL2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,SETFAM_1,FUNCOP_1,CKB7;
definitions ORDINAL1,TARSKI,XBOOLE_0,CKB7;
theorems TARSKI,XBOOLE_0,ORDINAL1,SETFAM_1,ZFMISC_1,FUNCT_1,RELAT_1,XBOOLE_1,FUNCOP_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
schemes XBOOLE_0,FUNCT_1,ORDINAL1,CKB1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,FUNCOP_1;
constructors SETFAM_1,ORDINAL1,FUNCOP_1,CKB7;
requirements SUBSET,BOOLE,NUMERALS;
begin
reserve A for Ordinal;
reserve B for Ordinal;
reserve X for set;
reserve Y for set;
reserve x for set;
theorem
Th17: ((for x holds (x in X implies x is Ordinal)) implies ( meet X ) is Ordinal)
proof
assume A1: (for x holds (x in X implies x is Ordinal));
now
defpred P[ Ordinal ]
 means
$1 in X;
set x = the (Element of X);
assume A2: X <> ( {} );
then x is Ordinal by A1;
then A3: (ex A st P[ A ]) by A2;
consider A such that A4: (P[ A ] & (for B holds (P[ B ] implies A c= B))) from ORDINAL1:sch 1(A3);
(for x holds (x in A iff (for Y holds (Y in X implies x in Y))))
proof
let x;
thus (x in A implies (for Y holds (Y in X implies x in Y)))
proof
assume A5: x in A;
let Y;
assume A6: Y in X;
then reconsider B = Y as Ordinal by A1;
A c= B by A4,A6;
hence thesis by A5;
end;

assume (for Y holds (Y in X implies x in Y));
hence thesis by A4;
end;
hence thesis by A2,SETFAM_1:def 1;
end;
hence thesis by SETFAM_1:def 1;
end;
