environ
vocabularies ORDINAL1,FUNCT_1,XBOOLE_0,TARSKI,ZFMISC_1,RELAT_1,SETFAM_1,SUBSET_1,FUNCOP_1,ORDINAL2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,SETFAM_1,FUNCOP_1,CKB7,CKB17,CKB18;
definitions ORDINAL1,TARSKI,XBOOLE_0,CKB7,CKB17,CKB18;
theorems TARSKI,XBOOLE_0,ORDINAL1,SETFAM_1,ZFMISC_1,FUNCT_1,RELAT_1,XBOOLE_1,FUNCOP_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
schemes XBOOLE_0,FUNCT_1,ORDINAL1,CKB1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,FUNCOP_1,CKB16;
constructors SETFAM_1,ORDINAL1,FUNCOP_1,CKB7,CKB17,CKB18;
requirements SUBSET,BOOLE,NUMERALS;
begin
reserve A for Ordinal;
reserve x for set;
reserve L for T-Sequence;
reserve f for Function;
scheme TSLambda { A() -> Ordinal,F(Ordinal) -> set } : (ex L st (( dom L ) = A() & (for A holds (A in A() implies ( L . A ) = F(A)))))
proof
deffunc G(set) = F(( sup ( union { $1 } ) ));
consider f such that A1: (( dom f ) = A() & (for x holds (x in A() implies ( f . x ) = G(x)))) from FUNCT_1:sch 3;
reconsider f as T-Sequence by A1,ORDINAL1:def 7;
take L = f;
thus ( dom L ) = A() by A1;
let A;
assume A in A();
hence ( L . A ) = F(( sup ( union { A } ) )) by A1
.= F(( sup A )) by ZFMISC_1:25
.= F(A) by CKB23:1;
end;
