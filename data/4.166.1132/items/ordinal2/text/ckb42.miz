environ
vocabularies ORDINAL1,FUNCT_1,XBOOLE_0,TARSKI,ZFMISC_1,RELAT_1,SETFAM_1,SUBSET_1,FUNCOP_1,ORDINAL2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,SETFAM_1,FUNCOP_1,CKB7,CKB17,CKB18,CKB31,CKB33;
definitions ORDINAL1,TARSKI,XBOOLE_0,CKB7,CKB17,CKB18,CKB31;
theorems TARSKI,XBOOLE_0,ORDINAL1,SETFAM_1,ZFMISC_1,FUNCT_1,RELAT_1,XBOOLE_1,FUNCOP_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB31,CKB36;
schemes XBOOLE_0,FUNCT_1,ORDINAL1,CKB1,CKB30,CKB38,CKB39,CKB40,CKB41;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,FUNCOP_1,CKB16,CKB32,CKB34,CKB35,CKB37;
constructors SETFAM_1,ORDINAL1,FUNCOP_1,CKB7,CKB17,CKB18,CKB31;
requirements SUBSET,BOOLE,NUMERALS;
begin
reserve C for Ordinal;
reserve x for set;
reserve L for T-Sequence;
reserve L1 for T-Sequence;
reserve L2 for T-Sequence;
scheme TSDef { A() -> Ordinal,B() -> set,C(Ordinal,set) -> set,D(Ordinal,T-Sequence) -> set } : ((ex x st (ex L st ((((x = ( last L ) & ( dom L ) = ( succ A() )) & ( L . ( {} ) ) = B()) & (for C holds (( succ C ) in ( succ A() ) implies ( L . ( succ C ) ) = C(C,( L . C ))))) & (for C holds (((C in ( succ A() ) & C <> ( {} )) & C is  limit_ordinal) implies ( L . C ) = D(C,( L | C ))))))) & (for x1,x2 being set holds (((ex L st ((((x1 = ( last L ) & ( dom L ) = ( succ A() )) & ( L . ( {} ) ) = B()) & (for C holds (( succ C ) in ( succ A() ) implies ( L . ( succ C ) ) = C(C,( L . C ))))) & (for C holds (((C in ( succ A() ) & C <> ( {} )) & C is  limit_ordinal) implies ( L . C ) = D(C,( L | C )))))) & (ex L st ((((x2 = ( last L ) & ( dom L ) = ( succ A() )) & ( L . ( {} ) ) = B()) & (for C holds (( succ C ) in ( succ A() ) implies ( L . ( succ C ) ) = C(C,( L . C ))))) & (for C holds (((C in ( succ A() ) & C <> ( {} )) & C is  limit_ordinal) implies ( L . C ) = D(C,( L | C ))))))) implies x1 = x2)))
proof
consider L such that A1: (((( dom L ) = ( succ A() ) & (( {} ) in ( succ A() ) implies ( L . ( {} ) ) = B())) & (for C holds (( succ C ) in ( succ A() ) implies ( L . ( succ C ) ) = C(C,( L . C ))))) & (for C holds (((C in ( succ A() ) & C <> ( {} )) & C is  limit_ordinal) implies ( L . C ) = D(C,( L | C ))))) from CKB40:sch 1;
thus (ex x st (ex L st ((((x = ( last L ) & ( dom L ) = ( succ A() )) & ( L . ( {} ) ) = B()) & (for C holds (( succ C ) in ( succ A() ) implies ( L . ( succ C ) ) = C(C,( L . C ))))) & (for C holds (((C in ( succ A() ) & C <> ( {} )) & C is  limit_ordinal) implies ( L . C ) = D(C,( L | C )))))))
proof
take x = ( last L );
take L;
thus (x = ( last L ) & ( dom L ) = ( succ A() )) by A1;
( {} ) c= ( succ A() );
then ( {} ) c< ( succ A() ) by XBOOLE_0:def 8;
hence thesis by A1,ORDINAL1:11;
end;

let x1 being set,x2 being set;
given L1 such that
A2: x1 = ( last L1 )
and
A3: ( dom L1 ) = ( succ A() )
and
A4: ( L1 . ( {} ) ) = B()
and
A5: (for C holds (( succ C ) in ( succ A() ) implies ( L1 . ( succ C ) ) = C(C,( L1 . C ))))
and
A6: (for C holds (((C in ( succ A() ) & C <> ( {} )) & C is  limit_ordinal) implies ( L1 . C ) = D(C,( L1 | C ))));

A7: (( {} ) in ( succ A() ) implies ( L1 . ( {} ) ) = B()) by A4;
given L2 such that
A8: x2 = ( last L2 )
and
A9: ( dom L2 ) = ( succ A() )
and
A10: ( L2 . ( {} ) ) = B()
and
A11: (for C holds (( succ C ) in ( succ A() ) implies ( L2 . ( succ C ) ) = C(C,( L2 . C ))))
and
A12: (for C holds (((C in ( succ A() ) & C <> ( {} )) & C is  limit_ordinal) implies ( L2 . C ) = D(C,( L2 | C ))));

A13: (( {} ) in ( succ A() ) implies ( L2 . ( {} ) ) = B()) by A10;
L1 = L2 from CKB39:sch 1(A3,A7,A5,A6,A9,A13,A11,A12);
hence thesis by A2,A8;
end;
