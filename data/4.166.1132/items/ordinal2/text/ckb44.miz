environ
vocabularies ORDINAL1,FUNCT_1,XBOOLE_0,TARSKI,ZFMISC_1,RELAT_1,SETFAM_1,SUBSET_1,FUNCOP_1,ORDINAL2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,SETFAM_1,FUNCOP_1,CKB7,CKB17,CKB18,CKB31,CKB33;
definitions ORDINAL1,TARSKI,XBOOLE_0,CKB7,CKB17,CKB18,CKB31;
theorems TARSKI,XBOOLE_0,ORDINAL1,SETFAM_1,ZFMISC_1,FUNCT_1,RELAT_1,XBOOLE_1,FUNCOP_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB31,CKB36;
schemes XBOOLE_0,FUNCT_1,ORDINAL1,CKB1,CKB30,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,FUNCOP_1,CKB16,CKB32,CKB34,CKB35,CKB37;
constructors SETFAM_1,ORDINAL1,FUNCOP_1,CKB7,CKB17,CKB18,CKB31;
requirements SUBSET,BOOLE,NUMERALS;
begin
reserve A for Ordinal;
reserve B for Ordinal;
reserve C for Ordinal;
reserve D for Ordinal;
reserve x for set;
reserve L for T-Sequence;
scheme TSResultS { B() -> set,C(Ordinal,set) -> set,D(Ordinal,T-Sequence) -> set,F(Ordinal) -> set } : (for A holds F(( succ A )) = C(A,F(A)))
provided
A1: (for A holds (for x holds (x = F(A) iff (ex L st ((((x = ( last L ) & ( dom L ) = ( succ A )) & ( L . ( {} ) ) = B()) & (for C holds (( succ C ) in ( succ A ) implies ( L . ( succ C ) ) = C(C,( L . C ))))) & (for C holds (((C in ( succ A ) & C <> ( {} )) & C is  limit_ordinal) implies ( L . C ) = D(C,( L | C )))))))))
proof
let A;
consider L such that A2: ( dom L ) = ( succ ( succ A ) ) and A3: (( {} ) in ( succ ( succ A ) ) implies ( L . ( {} ) ) = B()) and A4: (for C holds (( succ C ) in ( succ ( succ A ) ) implies ( L . ( succ C ) ) = C(C,( L . C )))) and A5: (for C holds (((C in ( succ ( succ A ) ) & C <> ( {} )) & C is  limit_ordinal) implies ( L . C ) = D(C,( L | C )))) from CKB40:sch 1;
A6: (for A holds (for x holds (x = F(A) iff (ex L st ((((x = ( last L ) & ( dom L ) = ( succ A )) & ( L . ( {} ) ) = B()) & (for C holds (( succ C ) in ( succ A ) implies ( L . ( succ C ) ) = C(C,( L . C ))))) & (for C holds (((C in ( succ A ) & C <> ( {} )) & C is  limit_ordinal) implies ( L . C ) = D(C,( L | C ))))))))) by A1;
A7: (for B holds (B in ( dom L ) implies ( L . B ) = F(B))) from CKB41:sch 1(A6,A2,A3,A4,A5);
then A8: ( L . ( succ A ) ) = F(( succ A )) by A2,ORDINAL1:6;
(A in ( succ A ) & ( succ A ) in ( succ ( succ A ) )) by ORDINAL1:6;
then ( L . A ) = F(A) by A2,A7,ORDINAL1:10;
hence thesis by A4,A8,ORDINAL1:6;
end;
