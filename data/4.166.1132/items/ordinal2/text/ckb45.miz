environ
vocabularies ORDINAL1,FUNCT_1,XBOOLE_0,TARSKI,ZFMISC_1,RELAT_1,SETFAM_1,SUBSET_1,FUNCOP_1,ORDINAL2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,SETFAM_1,FUNCOP_1,CKB7,CKB17,CKB18,CKB31,CKB33;
definitions ORDINAL1,TARSKI,XBOOLE_0,CKB7,CKB17,CKB18,CKB31;
theorems TARSKI,XBOOLE_0,ORDINAL1,SETFAM_1,ZFMISC_1,FUNCT_1,RELAT_1,XBOOLE_1,FUNCOP_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB31,CKB36;
schemes XBOOLE_0,FUNCT_1,ORDINAL1,CKB1,CKB30,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,FUNCOP_1,CKB16,CKB32,CKB34,CKB35,CKB37;
constructors SETFAM_1,ORDINAL1,FUNCOP_1,CKB7,CKB17,CKB18,CKB31;
requirements SUBSET,BOOLE,NUMERALS;
begin
reserve A for Ordinal;
reserve B for Ordinal;
reserve C for Ordinal;
reserve x for set;
reserve L for T-Sequence;
scheme TSResultL { L() -> T-Sequence,A() -> Ordinal,F(Ordinal) -> set,B() -> set,C(Ordinal,set) -> set,D(Ordinal,T-Sequence) -> set } : F(A()) = D(A(),L())
provided
A1: (for A holds (for x holds (x = F(A) iff (ex L st ((((x = ( last L ) & ( dom L ) = ( succ A )) & ( L . ( {} ) ) = B()) & (for C holds (( succ C ) in ( succ A ) implies ( L . ( succ C ) ) = C(C,( L . C ))))) & (for C holds (((C in ( succ A ) & C <> ( {} )) & C is  limit_ordinal) implies ( L . C ) = D(C,( L | C )))))))))
and
A2: (A() <> ( {} ) & A() is  limit_ordinal)
and
A3: ( dom L() ) = A()
and
A4: (for A holds (A in A() implies ( L() . A ) = F(A)))
proof
A5: A() in ( succ A() ) by ORDINAL1:6;
consider L such that A6: ( dom L ) = ( succ A() ) and A7: (( {} ) in ( succ A() ) implies ( L . ( {} ) ) = B()) and A8: (for C holds (( succ C ) in ( succ A() ) implies ( L . ( succ C ) ) = C(C,( L . C )))) and A9: (for C holds (((C in ( succ A() ) & C <> ( {} )) & C is  limit_ordinal) implies ( L . C ) = D(C,( L | C )))) from CKB40:sch 1;
set L1 = ( L | A() );
A10: (for A holds (for x holds (x = F(A) iff (ex L st ((((x = ( last L ) & ( dom L ) = ( succ A )) & ( L . ( {} ) ) = B()) & (for C holds (( succ C ) in ( succ A ) implies ( L . ( succ C ) ) = C(C,( L . C ))))) & (for C holds (((C in ( succ A ) & C <> ( {} )) & C is  limit_ordinal) implies ( L . C ) = D(C,( L | C ))))))))) by A1;
A11: (for B holds (B in ( dom L ) implies ( L . B ) = F(B))) from CKB41:sch 1(A10,A6,A7,A8,A9);
A12:now
let x;
assume A13: x in A();
then reconsider x9 = x as Ordinal;
thus ( L1 . x ) = ( L . x9 ) by A13,FUNCT_1:49
.= F(x9) by A6,A11,A5,A13,ORDINAL1:10
.= ( L() . x ) by A4,A13;
end;
A() c= ( dom L ) by A6,A5,ORDINAL1:def 2;
then ( dom L1 ) = A() by RELAT_1:62;
then L1 = L() by A3,A12,FUNCT_1:2;
then ( L . A() ) = D(A(),L()) by A2,A9,ORDINAL1:6;
hence thesis by A6,A11,ORDINAL1:6;
end;
