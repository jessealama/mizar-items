environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_1,NUMBERS,RELAT_1,TARSKI,WAYBEL_9,STRUCT_0,WAYBEL_0,RELAT_2,ORDERS_2,SEQM_3,XXREAL_0,WAYBEL11,YELLOW_0,LATTICE3,ORDINAL2,PRE_TOPC,RCOMP_1,FUNCOP_1,WAYBEL_3,REWRITE1,NEWTON,CARD_3,CAT_1,YELLOW_1,FUNCT_2,ARYTM_3,LATTICES,WELLORD1,YELLOW_2,EQREL_1,CARD_FIL,RLVECT_3,ZFMISC_1,SETFAM_1,YELLOW_8,TOPS_1,WAYBEL_8,WAYBEL17;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,RELAT_1,SETFAM_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,DOMAIN_1,STRUCT_0,PRE_TOPC,TOPS_1,TOPS_2,TOLER_1,ORDERS_2,LATTICE3,YELLOW_0,ORDERS_3,WAYBEL_0,YELLOW_1,YELLOW_2,NATTRA_1,WAYBEL_3,FUNCOP_1,WAYBEL_8,WAYBEL_9,WAYBEL11,WAYBEL_2,CANTOR_1,YELLOW_8,XXREAL_0,CKB1,CKB16;
definitions TARSKI,XBOOLE_0,WAYBEL_0,PRE_TOPC,RELAT_1,LATTICE3,YELLOW_0,WAYBEL_1,WAYBEL_3,WAYBEL11,YELLOW_8,WELLORD1,SUBSET_1,STRUCT_0,TOPS_2,CKB1,CKB16;
theorems WAYBEL11,WAYBEL_0,PRE_TOPC,TOPS_1,TARSKI,FUNCT_1,FUNCT_2,TOPS_2,YELLOW_0,YELLOW_2,WAYBEL_3,WAYBEL_1,RELAT_1,WAYBEL_4,ZFMISC_1,WAYBEL_2,WAYBEL_8,LATTICE3,NAT_1,ORDERS_2,SCHEME1,WAYBEL_9,FUNCT_3,WAYBEL13,YELLOW_8,YELLOW_1,FUNCOP_1,WAYBEL10,RELSET_1,SETFAM_1,XBOOLE_0,XBOOLE_1,XXREAL_0,EQREL_1,CKB1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB13,CKB16;
schemes PARTFUN1,RELSET_1,FRAENKEL,XBOOLE_0,CKB2,CKB3;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FUNCOP_1,MEMBERED,ABIAN,STRUCT_0,TOPS_1,LATTICE3,WAYBEL_0,YELLOW_1,WAYBEL_2,WAYBEL_3,WAYBEL_9,WAYBEL10,WAYBEL11,PRE_TOPC,RELSET_1,CKB10,CKB12,CKB14,CKB15,CKB17;
constructors SETFAM_1,DOMAIN_1,XXREAL_0,NAT_1,NAT_D,TOLER_1,ABIAN,TOPS_1,NATTRA_1,LATTICE3,CANTOR_1,ORDERS_3,WAYBEL_1,WAYBEL_3,WAYBEL_5,WAYBEL_8,YELLOW_8,WAYBEL11,MEMBERED,RELSET_1,TOPS_2,WAYBEL_2,CKB1,CKB16;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
definition
let S being non empty RelStr;
let a being (Element of S);
let b being (Element of S);
func Net-Str (a,b) ->  strict non empty NetStr over S
means
:Def3: (((the carrier of it) = ( NAT ) & (the mapping of it) = ( (a,b) ,... )) & (for i,j being (Element of it) holds (for i9,j9 being (Element of ( NAT )) holds ((i = i9 & j = j9) implies (i <= j iff i9 <= j9)))));
existence
proof
defpred P[ set,set ]
 means
(for i,j being (Element of ( NAT )) holds ((i = $1 & j = $2) implies i <= j));
consider R being (Relation of ( NAT ),( NAT )) such that A1: (for x,y being (Element of ( NAT )) holds ([ x,y ] in R iff P[ x,y ])) from RELSET_1:sch 2;
reconsider R as (Relation of ( NAT ));
take N = NetStr (# ( NAT ),R,( (a,b) ,... ) #);
thus (the carrier of N) = ( NAT );
thus (the mapping of N) = ( (a,b) ,... );
let i being (Element of N),j being (Element of N);
let i9 being (Element of ( NAT )),j9 being (Element of ( NAT ));
assume that
A2: i = i9
and
A3: j = j9;
reconsider x = i,y = j as (Element of ( NAT ));
([ x,y ] in (the InternalRel of N) iff P[ x,y ]) by A1;
hence thesis by A2,A3,ORDERS_2:def 5;
end;
uniqueness
proof
let it1 being  strict non empty NetStr over S,it2 being  strict non empty NetStr over S;
assume that
A4: (the carrier of it1) = ( NAT )
and
A5: (the mapping of it1) = ( (a,b) ,... )
and
A6: (for i,j being (Element of it1) holds (for i9,j9 being (Element of ( NAT )) holds ((i = i9 & j = j9) implies (i <= j iff i9 <= j9))))
and
A7: (the carrier of it2) = ( NAT )
and
A8: (the mapping of it2) = ( (a,b) ,... )
and
A9: (for i,j being (Element of it2) holds (for i9,j9 being (Element of ( NAT )) holds ((i = i9 & j = j9) implies (i <= j iff i9 <= j9))));
(the InternalRel of it1) = (the InternalRel of it2)
proof
let x being set,y being set;
hereby
assume A10: [ x,y ] in (the InternalRel of it1);
then reconsider i = x,j = y as (Element of it1) by ZFMISC_1:87;
reconsider i1 = i,i2 = j as (Element of ( NAT )) by A4;
reconsider i9 = x,j9 = y as (Element of it2) by A4,A7,A10,ZFMISC_1:87;
i <= j by A10,ORDERS_2:def 5;
then i1 <= i2 by A6;
then i9 <= j9 by A9;
hence [ x,y ] in (the InternalRel of it2) by ORDERS_2:def 5;
end;
assume A11: [ x,y ] in (the InternalRel of it2);
then reconsider i = x,j = y as (Element of it2) by ZFMISC_1:87;
reconsider i9 = x,j9 = y as (Element of it1) by A4,A7,A11,ZFMISC_1:87;
reconsider i1 = i,i2 = j as (Element of ( NAT )) by A7;
i <= j by A11,ORDERS_2:def 5;
then i1 <= i2 by A9;
then i9 <= j9 by A6;
hence thesis by ORDERS_2:def 5;
end;
hence thesis by A4,A5,A7,A8;
end;
end;
