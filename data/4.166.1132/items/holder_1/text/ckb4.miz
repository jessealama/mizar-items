environ
vocabularies NUMBERS,REAL_1,XREAL_0,ORDINAL1,LIMFUNC1,XBOOLE_0,XXREAL_0,CARD_1,ARYTM_3,POWER,RELAT_1,PREPOWER,ARYTM_1,PARTFUN1,FUNCT_1,FDIFF_1,VALUED_1,SUBSET_1,TARSKI,XXREAL_1,ORDINAL2,SEQ_1,SERIES_1,VALUED_0,COMPLEX1,SEQ_2,XXREAL_2,NAT_1,FUNCT_2,FCONT_1,CARD_3;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,FUNCT_2,LIMFUNC1,RCOMP_1,FCONT_1,XXREAL_0,XREAL_0,COMPLEX1,ORDINAL1,NUMBERS,REAL_1,NAT_1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,SERIES_1,FDIFF_1,PREPOWER,POWER,TAYLOR_1,RECDEF_1;
definitions SUBSET_1,LIMFUNC1;
theorems XBOOLE_1,ABSVALUE,TARSKI,XBOOLE_0,XREAL_0,XCMPLX_1,RCOMP_1,SEQ_1,SEQ_2,SEQM_3,SERIES_1,FUNCT_1,NAT_1,POWER,FCONT_1,FDIFF_1,ROLLE,SEQ_4,PREPOWER,RELSET_1,FUNCT_2,TAYLOR_1,XREAL_1,COMPLEX1,XXREAL_0,PARTFUN1,ORDINAL1,VALUED_1,XXREAL_1,VALUED_0,RELAT_1,CKB2,CKB3;
schemes SEQ_1,RECDEF_1,NAT_1,PARTFUN2;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,RCOMP_1,VALUED_0,VALUED_1,FUNCT_2,SEQ_2,SEQ_4,FCONT_3,CKB1;
constructors PARTFUN1,REAL_1,NAT_1,INT_2,SEQ_2,SEQM_3,RCOMP_1,RFUNCT_2,FCONT_1,LIMFUNC1,FDIFF_1,PREPOWER,SERIES_1,TAYLOR_1,SEQ_1,VALUED_1,RECDEF_1,RELSET_1;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve a for Real;
reserve b for Real;
reserve p for Real;
theorem
Th3: (for p being Real holds (( 0 ) < p implies (for a,b being Real holds ((( 0 ) <= a & a <= b) implies ( a to_power p ) <= ( b to_power p )))))
proof
let p being Real;
assume that
A1: ( 0 ) < p;
let a being Real;
let b being Real;
assume that
A2: ( 0 ) <= a
and
A3: a <= b;
per cases ;
suppose a = b;

hence thesis;
end;
suppose A4: a <> b;

thus ( a to_power p ) <= ( b to_power p )
proof
A5: a < b by A3,A4,XXREAL_0:1;
now
per cases ;
case A6: a = ( 0 );
then ( a to_power p ) = ( 0 ) by A1,POWER:def 2;
hence thesis by A3,A4,A6,POWER:34;
end;
case a <> ( 0 );
hence thesis by A1,A2,A5,POWER:37;
end;
end;
hence thesis;
end;

end;
end;
