environ
vocabularies NUMBERS,REAL_1,XREAL_0,ORDINAL1,LIMFUNC1,XBOOLE_0,XXREAL_0,CARD_1,ARYTM_3,POWER,RELAT_1,PREPOWER,ARYTM_1,PARTFUN1,FUNCT_1,FDIFF_1,VALUED_1,SUBSET_1,TARSKI,XXREAL_1,ORDINAL2,SEQ_1,SERIES_1,VALUED_0,COMPLEX1,SEQ_2,XXREAL_2,NAT_1,FUNCT_2,FCONT_1,CARD_3;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,FUNCT_2,LIMFUNC1,RCOMP_1,FCONT_1,XXREAL_0,XREAL_0,COMPLEX1,ORDINAL1,NUMBERS,REAL_1,NAT_1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,SERIES_1,FDIFF_1,PREPOWER,POWER,TAYLOR_1,RECDEF_1;
definitions SUBSET_1,LIMFUNC1;
theorems XBOOLE_1,ABSVALUE,TARSKI,XBOOLE_0,XREAL_0,XCMPLX_1,RCOMP_1,SEQ_1,SEQ_2,SEQM_3,SERIES_1,FUNCT_1,NAT_1,POWER,FCONT_1,FDIFF_1,ROLLE,SEQ_4,PREPOWER,RELSET_1,FUNCT_2,TAYLOR_1,XREAL_1,COMPLEX1,XXREAL_0,PARTFUN1,ORDINAL1,VALUED_1,XXREAL_1,VALUED_0,RELAT_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
schemes SEQ_1,RECDEF_1,NAT_1,PARTFUN2;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,RCOMP_1,VALUED_0,VALUED_1,FUNCT_2,SEQ_2,SEQ_4,FCONT_3,CKB1;
constructors PARTFUN1,REAL_1,NAT_1,INT_2,SEQ_2,SEQM_3,RCOMP_1,RFUNCT_2,FCONT_1,LIMFUNC1,FDIFF_1,PREPOWER,SERIES_1,TAYLOR_1,SEQ_1,VALUED_1,RECDEF_1,RELSET_1;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve a for Real;
reserve b for Real;
reserve p for Real;
reserve q for Real;
theorem
(for p,q being Real holds ((1 < p & ( ( 1 / p ) + ( 1 / q ) ) = 1) implies (for a,b,ap,bq,ab being Real_Sequence holds ((((for n being (Element of ( NAT )) holds ((( ap . n ) = ( ( abs ( a . n ) ) to_power p ) & ( bq . n ) = ( ( abs ( b . n ) ) to_power q )) & ( ab . n ) = ( abs ( ( a . n ) * ( b . n ) ) ))) & ap is  summable) & bq is  summable) implies (ab is  summable & ( Sum ab ) <= ( ( ( Sum ap ) to_power ( 1 / p ) ) * ( ( Sum bq ) to_power ( 1 / q ) ) ))))))
proof
let p being Real;
let q being Real;
assume that
A1: 1 < p
and
A2: ( ( 1 / p ) + ( 1 / q ) ) = 1;
let a being Real_Sequence;
let b being Real_Sequence;
let ap being Real_Sequence;
let bq being Real_Sequence;
let ab being Real_Sequence;
assume that
A3: (for n being (Element of ( NAT )) holds ((( ap . n ) = ( ( abs ( a . n ) ) to_power p ) & ( bq . n ) = ( ( abs ( b . n ) ) to_power q )) & ( ab . n ) = ( abs ( ( a . n ) * ( b . n ) ) )))
and
A4: ap is  summable
and
A5: bq is  summable;
A6: ( Partial_Sums ap ) is  convergent by A4,SERIES_1:def 2;
reconsider pp = ( 1 / p ) as Real;
( 1 / p ) < 1 by A1,XREAL_1:189;
then A7: ( 1 - 1 ) < ( 1 - pp ) by XREAL_1:15;
then A8: ( 0 ) < q by A2;
(for n being (Element of ( NAT )) holds ( 0 ) <= ( bq . n ))
proof
let n being (Element of ( NAT ));
A9: ( bq . n ) = ( ( abs ( b . n ) ) to_power q ) by A3;
now
per cases  by COMPLEX1:46;
case ( abs ( b . n ) ) = ( 0 );
hence thesis by A8,A9,POWER:def 2;
end;
case ( abs ( b . n ) ) > ( 0 );
hence thesis by A9,POWER:34;
end;
end;
hence thesis;
end;
then A10: (for n being (Element of ( NAT )) holds ( 0 ) <= ( ( Partial_Sums bq ) . n )) by CKB8:1;
(for n being (Element of ( NAT )) holds ( 0 ) <= ( ab . n ))
proof
let n being (Element of ( NAT ));
( ab . n ) = ( abs ( ( a . n ) * ( b . n ) ) ) by A3;
hence thesis by COMPLEX1:46;
end;
then A11: ( Partial_Sums ab ) is  non-decreasing by SERIES_1:16;
deffunc G((Element of ( NAT ))) = ( ( ( Partial_Sums bq ) . $1 ) to_power ( 1 / q ) );
consider y being Real_Sequence such that A12: (for n being (Element of ( NAT )) holds ( y . n ) = G(n)) from SEQ_1:sch 1;
(for n being (Element of ( NAT )) holds ( 0 ) <= ( ap . n ))
proof
let n being (Element of ( NAT ));
A13: ( ap . n ) = ( ( abs ( a . n ) ) to_power p ) by A3;
now
per cases  by COMPLEX1:46;
case ( abs ( a . n ) ) = ( 0 );
hence thesis by A1,A13,POWER:def 2;
end;
case ( abs ( a . n ) ) > ( 0 );
hence thesis by A13,POWER:34;
end;
end;
hence thesis;
end;
then A14: (for n being (Element of ( NAT )) holds ( 0 ) <= ( ( Partial_Sums ap ) . n )) by CKB8:1;
deffunc F((Element of ( NAT ))) = ( ( ( Partial_Sums ap ) . $1 ) to_power ( 1 / p ) );
consider x being Real_Sequence such that A15: (for n being (Element of ( NAT )) holds ( x . n ) = F(n)) from SEQ_1:sch 1;
A16: (for n being (Element of ( NAT )) holds ( ( Partial_Sums ab ) . n ) <= ( ( x (#) y ) . n ))
proof
let n being (Element of ( NAT ));
A17: ( y . n ) = ( ( ( Partial_Sums bq ) . n ) to_power ( 1 / q ) ) by A12;
(( ( Partial_Sums ab ) . n ) <= ( ( ( ( Partial_Sums ap ) . n ) to_power ( 1 / p ) ) * ( ( ( Partial_Sums bq ) . n ) to_power ( 1 / q ) ) ) & ( x . n ) = ( ( ( Partial_Sums ap ) . n ) to_power ( 1 / p ) )) by A1,A2,A3,A15,CKB11:1;
hence thesis by A17,SEQ_1:8;
end;
A18: ( 1 / p ) > ( 0 ) by A1,XREAL_1:139;
then A19: x is  convergent by A15,A6,A14,CKB15:1;
A20: ( Partial_Sums bq ) is  convergent by A5,SERIES_1:def 2;
then A21: y is  convergent by A2,A7,A12,A10,CKB15:1;
then ( x (#) y ) is  convergent by A19;
then A22: (( Partial_Sums ab ) is  convergent & ( lim ( Partial_Sums ab ) ) <= ( lim ( x (#) y ) )) by A16,A11,CKB13:1;
( Sum ap ) = ( lim ( Partial_Sums ap ) ) by SERIES_1:def 3;
then A23: ( lim x ) = ( ( Sum ap ) to_power ( 1 / p ) ) by A18,A15,A6,A14,CKB15:1;
( Sum bq ) = ( lim ( Partial_Sums bq ) ) by SERIES_1:def 3;
then ( lim y ) = ( ( Sum bq ) to_power ( 1 / q ) ) by A2,A7,A12,A20,A10,CKB15:1;
then ( lim ( x (#) y ) ) = ( ( ( Sum ap ) to_power ( 1 / p ) ) * ( ( Sum bq ) to_power ( 1 / q ) ) ) by A19,A23,A21,SEQ_2:15;
hence thesis by A22,SERIES_1:def 2,SERIES_1:def 3;
end;
