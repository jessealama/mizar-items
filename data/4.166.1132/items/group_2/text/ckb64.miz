environ
vocabularies NUMBERS,XBOOLE_0,STRUCT_0,SUBSET_1,FINSET_1,NAT_1,GROUP_1,RELAT_1,TARSKI,ALGSTR_0,BINOP_1,REALSET1,ZFMISC_1,FUNCT_1,RLSUB_1,CARD_1,XXREAL_0,NEWTON,SETFAM_1,CQC_SIM1,FINSUB_1,SETWISEO,ARYTM_3,GROUP_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,FINSUB_1,FINSET_1,REALSET1,XXREAL_0,CARD_1,NUMBERS,STRUCT_0,ALGSTR_0,GROUP_1,WELLORD2,BINOP_1,SETWISEO,DOMAIN_1,RELAT_1,FUNCT_1,RELSET_1,NAT_1,NAT_D,MCART_1,CKB3,CKB12,CKB13,CKB34,CKB35,CKB48;
definitions FUNCT_1,GROUP_1,STRUCT_0,TARSKI,XBOOLE_0,BINOP_1,REALSET1,SUBSET_1,ALGSTR_0,CKB3,CKB12,CKB34,CKB35,CKB48;
theorems CARD_1,CARD_2,ENUMSET1,FINSET_1,FINSUB_1,FUNCT_1,FUNCT_2,GROUP_1,TARSKI,WELLORD2,ZFMISC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,NAT_D,STRUCT_0,NAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62;
schemes FUNCT_1,SUBSET_1,SETWISEO,CLASSES1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FINSET_1,FINSUB_1,MEMBERED,REALSET1,STRUCT_0,GROUP_1,ALGSTR_0,CARD_1,CKB10,CKB11,CKB54,CKB63;
constructors SETFAM_1,PARTFUN1,WELLORD2,BINOP_1,SETWISEO,XXREAL_0,NAT_1,NAT_D,MEMBERED,REALSET1,GROUP_1,RELSET_1,CKB3,CKB12,CKB13,CKB34,CKB35,CKB48;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve G for non  empty 1-sorted;
reserve A for (Subset of G);
reserve y for set;
reserve y1 for set;
reserve y2 for set;
reserve G for Group;
reserve g for (Element of G);
reserve g1 for (Element of G);
reserve g2 for (Element of G);
reserve A for (Subset of G);
reserve H for (Subgroup of G);
reserve h1 for (Element of H);
reserve h2 for (Element of H);
theorem
Th61: (((A <> ( {} ) & (for g1 holds (for g2 holds ((g1 in A & g2 in A) implies ( g1 * g2 ) in A)))) & (for g holds (g in A implies ( g " ) in A))) implies (ex H being  strict (Subgroup of G) st (the carrier of H) = A))
proof
assume that
A1: A <> ( {} )
and
A2: (for g1 holds (for g2 holds ((g1 in A & g2 in A) implies ( g1 * g2 ) in A)))
and
A3: (for g holds (g in A implies ( g " ) in A));
reconsider D = A as non  empty set by A1;
set o = ( (the multF of G) || A );
A4: ( dom o ) = ( ( dom (the multF of G) ) /\ [: A,A :] ) by RELAT_1:61;
( dom (the multF of G) ) = [: (the carrier of G),(the carrier of G) :] by FUNCT_2:def 1;
then A5: ( dom o ) = [: A,A :] by A4,XBOOLE_1:28;
( rng o ) c= A
proof
let x;
assume x in ( rng o );
then consider y such that A6: y in ( dom o ) and A7: ( o . y ) = x by FUNCT_1:def 3;
consider y1,y2 such that A8: [ y1,y2 ] = y by A4,A6,RELAT_1:def 1;
A9: (y1 in A & y2 in A) by A5,A6,A8,ZFMISC_1:87;
reconsider y1,y2 as (Element of G) by A4,A6,A8,ZFMISC_1:87;
x = ( y1 * y2 ) by A6,A7,A8,FUNCT_1:47;
hence thesis by A2,A9;
end;
then reconsider o as (BinOp of D) by A5,FUNCT_2:def 1,RELSET_1:4;
set H = multMagma (# D,o #);
A10:now
let g1;
let g2;
let h1 being (Element of H);
let h2 being (Element of H);
A11: ( h1 * h2 ) = ( ( (the multF of G) || A ) . [ h1,h2 ] );
assume (g1 = h1 & g2 = h2);
hence ( g1 * g2 ) = ( h1 * h2 ) by A11,FUNCT_1:49;
end;
H is  Group-like
proof
set a = the (Element of H);
reconsider x = a as (Element of G) by CKB1:1;
( x " ) in A by A3;
then ( x * ( x " ) ) in A by A2;
then reconsider t = ( 1_ G ) as (Element of H) by GROUP_1:def 5;
take t;
let a being (Element of H);
reconsider x = a as (Element of G) by CKB1:1;
thus ( a * t ) = ( x * ( 1_ G ) ) by A10
.= a by GROUP_1:def 4;
thus ( t * a ) = ( ( 1_ G ) * x ) by A10
.= a by GROUP_1:def 4;
reconsider s = ( x " ) as (Element of H) by A3;
take s;
thus ( a * s ) = ( x * ( x " ) ) by A10
.= t by GROUP_1:def 5;
thus ( s * a ) = ( ( x " ) * x ) by A10
.= t by GROUP_1:def 5;
end;
then reconsider H as  Group-like non  empty multMagma;
reconsider H as  strict (Subgroup of G) by CKB48:def 1;
take H;
thus thesis;
end;
