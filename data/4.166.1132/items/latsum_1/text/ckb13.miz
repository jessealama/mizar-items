environ
vocabularies XBOOLE_0,ORDERS_2,PARTFUN1,STRUCT_0,FINSEQ_1,RELAT_1,TARSKI,RELAT_2,SUBSET_1,XXREAL_0,LATTICE3,WAYBEL_0,EQREL_1,LATTICES;
notations XBOOLE_0,TARSKI,SUBSET_1,RELSET_1,RELAT_2,STRUCT_0,ORDERS_2,YELLOW_0,WAYBEL_0,LATTICE3,CKB2,CKB3;
definitions RELAT_2,CKB2,CKB3;
theorems ZFMISC_1,RELAT_1,RELSET_1,ORDERS_2,RELAT_2,XBOOLE_0,XBOOLE_1,WAYBEL_0,YELLOW_0,YELLOW_5,CKB1,CKB2,CKB3,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
registrations XBOOLE_0,RELSET_1,STRUCT_0,WAYBEL_0,CKB4,CKB5;
constructors LATTICE3,WAYBEL_0,RELSET_1,CKB2,CKB3;
requirements SUBSET,BOOLE;
begin
theorem
Th9: (for R,S being non  empty RelStr holds (for a,b being (Element of ( R [*] S )) holds (for c,d being (Element of S) holds ((((a = c & b = d) & R tolerates S) & S is  transitive) implies (a <= b iff c <= d)))))
proof
let R being non  empty RelStr;
let S being non  empty RelStr;
let a being (Element of ( R [*] S ));
let b being (Element of ( R [*] S ));
let c being (Element of S);
let d being (Element of S);
assume that
A1: (a = c & b = d)
and
A2: (R tolerates S & S is  transitive);
hereby
assume a <= b;
then [ a,b ] in (the InternalRel of ( R [*] S )) by ORDERS_2:def 5;
then [ c,d ] in (the InternalRel of S) by A1,A2,CKB9:1;
hence c <= d by ORDERS_2:def 5;
end;
assume c <= d;
then [ c,d ] in (the InternalRel of S) by ORDERS_2:def 5;
then [ a,b ] in (the InternalRel of ( R [*] S )) by A1,CKB10:1;
hence thesis by ORDERS_2:def 5;
end;
