environ
vocabularies XBOOLE_0,ORDERS_2,PARTFUN1,STRUCT_0,FINSEQ_1,RELAT_1,TARSKI,RELAT_2,SUBSET_1,XXREAL_0,LATTICE3,WAYBEL_0,EQREL_1,LATTICES;
notations XBOOLE_0,TARSKI,SUBSET_1,RELSET_1,RELAT_2,STRUCT_0,ORDERS_2,YELLOW_0,WAYBEL_0,LATTICE3,CKB2,CKB3;
definitions RELAT_2,CKB2,CKB3;
theorems ZFMISC_1,RELAT_1,RELSET_1,ORDERS_2,RELAT_2,XBOOLE_0,XBOOLE_1,WAYBEL_0,YELLOW_0,YELLOW_5,CKB1,CKB2,CKB3,CKB6;
registrations XBOOLE_0,RELSET_1,STRUCT_0,WAYBEL_0,CKB4,CKB5;
constructors LATTICE3,WAYBEL_0,RELSET_1,CKB2,CKB3;
requirements SUBSET,BOOLE;
begin
theorem
Th3: (for R,S being RelStr holds ((R is  reflexive & S is  reflexive) implies ( R [*] S ) is  reflexive))
proof
let R being RelStr;
let S being RelStr;
assume (R is  reflexive & S is  reflexive);
then A1: ((the InternalRel of R) is_reflexive_in (the carrier of R) & (the InternalRel of S) is_reflexive_in (the carrier of S)) by ORDERS_2:def 2;
A2: ((the InternalRel of R) c= (the InternalRel of ( R [*] S )) & (the InternalRel of S) c= (the InternalRel of ( R [*] S ))) by CKB6:1;
(the InternalRel of ( R [*] S )) is_reflexive_in (the carrier of ( R [*] S ))
proof
let x being set;
assume x in (the carrier of ( R [*] S ));
then x in ( (the carrier of R) \/ (the carrier of S) ) by CKB3:def 1;
then (x in (the carrier of R) or x in (the carrier of S)) by XBOOLE_0:def 3;
then ([ x,x ] in (the InternalRel of R) or [ x,x ] in (the InternalRel of S)) by A1,RELAT_2:def 1;
hence thesis by A2;
end;
hence thesis by ORDERS_2:def 2;
end;
