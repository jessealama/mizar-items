environ
vocabularies XBOOLE_0,ORDERS_2,PARTFUN1,STRUCT_0,FINSEQ_1,RELAT_1,TARSKI,RELAT_2,SUBSET_1,XXREAL_0,LATTICE3,WAYBEL_0,EQREL_1,LATTICES;
notations XBOOLE_0,TARSKI,SUBSET_1,RELSET_1,RELAT_2,STRUCT_0,ORDERS_2,YELLOW_0,WAYBEL_0,LATTICE3,CKB2,CKB3;
definitions RELAT_2,CKB2,CKB3;
theorems ZFMISC_1,RELAT_1,RELSET_1,ORDERS_2,RELAT_2,XBOOLE_0,XBOOLE_1,WAYBEL_0,YELLOW_0,YELLOW_5,CKB1,CKB2,CKB3,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11;
registrations XBOOLE_0,RELSET_1,STRUCT_0,WAYBEL_0,CKB4,CKB5;
constructors LATTICE3,WAYBEL_0,RELSET_1,CKB2,CKB3;
requirements SUBSET,BOOLE;
begin
theorem
Th8: (for R,S being non  empty RelStr holds (for x,y being (Element of R) holds (for a,b being (Element of ( R [*] S )) holds ((((x = a & y = b) & R tolerates S) & R is  transitive) implies (x <= y iff a <= b)))))
proof
let R being non  empty RelStr;
let S being non  empty RelStr;
let x being (Element of R);
let y being (Element of R);
let a being (Element of ( R [*] S ));
let b being (Element of ( R [*] S ));
assume A1: (x = a & y = b);
assume A2: (R tolerates S & R is  transitive);
hereby
assume x <= y;
then [ x,y ] in (the InternalRel of R) by ORDERS_2:def 5;
then [ a,b ] in (the InternalRel of ( R [*] S )) by A1,CKB10:1;
hence a <= b by ORDERS_2:def 5;
end;
assume a <= b;
then [ a,b ] in (the InternalRel of ( R [*] S )) by ORDERS_2:def 5;
then [ x,y ] in (the InternalRel of R) by A1,A2,CKB8:1;
hence thesis by ORDERS_2:def 5;
end;
