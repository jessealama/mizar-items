environ
vocabularies ORDINAL2,ORDINAL1,TARSKI,XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,SUBSET_1,ORDINAL3;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,SETFAM_1,ORDINAL2,CKB42,CKB43,CKB44,CKB45;
definitions ORDINAL2,ORDINAL1,TARSKI,XBOOLE_0,CKB42,CKB43,CKB44,CKB45;
theorems TARSKI,XBOOLE_0,FUNCT_1,ORDINAL1,SETFAM_1,ORDINAL2,XBOOLE_1,ZFMISC_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51;
schemes ORDINAL1,ORDINAL2,XBOOLE_0;
registrations XBOOLE_0,ORDINAL1,ORDINAL2,CKB12,CKB13;
constructors SETFAM_1,ORDINAL2,CKB42,CKB43,CKB44,CKB45;
requirements SUBSET,BOOLE,NUMERALS;
begin
reserve A for Ordinal;
reserve B for Ordinal;
reserve C for Ordinal;
theorem
Th53: (B <> ( {} ) implies ( union ( A +^ B ) ) = ( A +^ ( union B ) ))
proof
assume A1: B <> ( {} );
A2:now
assume (not (ex C st B = ( succ C )));
then A3: B is  limit_ordinal by ORDINAL1:29;
then ( A +^ B ) is  limit_ordinal by A1,CKB32:1;
then ( union ( A +^ B ) ) = ( A +^ B ) by ORDINAL1:def 6;
hence thesis by A3,ORDINAL1:def 6;
end;
now
given C such that
A4: B = ( succ C );

thus ( union ( A +^ B ) ) = ( union ( succ ( A +^ C ) ) ) by A4,ORDINAL2:28
.= ( A +^ C ) by ORDINAL2:2
.= ( A +^ ( union B ) ) by A4,ORDINAL2:2;
end;
hence thesis by A2;
end;
