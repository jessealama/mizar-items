environ
vocabularies XBOOLE_0,PROB_1,SUBSET_1,SETFAM_1,NUMBERS,RELAT_1,FUNCT_1,FINSET_1,ARYTM_3,ORDINAL1,CARD_1,FUNCT_7,CARD_3,TARSKI,ZFMISC_1,PROB_2,XXREAL_0,MSSUBFAM,NAT_1,EQREL_1,DYNKIN,FINSUB_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,FINSET_1,CARD_1,NUMBERS,SETFAM_1,RELAT_1,FUNCT_1,FUNCT_2,NAT_1,FUNCT_7,CARD_3,PROB_1,FINSUB_1,PROB_2,XXREAL_0;
definitions SUBSET_1,CARD_1,ORDINAL1,CARD_3;
theorems TARSKI,FUNCT_1,ZFMISC_1,FUNCT_2,SUBSET_1,NAT_1,RELAT_1,SETFAM_1,PROB_2,FINSUB_1,XBOOLE_0,XBOOLE_1,PROB_1,ORDINAL1,XXREAL_0,FUNCT_7,MEASURE1;
schemes FUNCT_2,NAT_1,FINSET_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,FINSET_1,XREAL_0,FUNCT_7;
constructors SETFAM_1,FINSUB_1,NAT_1,PROB_2,XREAL_0,FUNCT_7,ENUMSET1,RELSET_1;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve Omega for non  empty set;
reserve f for (SetSequence of Omega);
reserve n for (Element of ( NAT ));
reserve x for set;
reserve z for set;
theorem
Th1: (for f being (SetSequence of Omega) holds (for x holds (x in ( rng f ) iff (ex n st ( f . n ) = x))))
proof
let f being (SetSequence of Omega);
let x;
A1:now
assume x in ( rng f );
then consider z such that A2: z in ( dom f ) and A3: x = ( f . z ) by FUNCT_1:def 3;
reconsider n = z as (Element of ( NAT )) by A2,FUNCT_2:def 1;
take n;
thus ( f . n ) = x by A3;
end;
( dom f ) = ( NAT ) by FUNCT_2:def 1;
hence thesis by A1,FUNCT_1:def 3;
end;
