environ
vocabularies XBOOLE_0,PROB_1,SUBSET_1,SETFAM_1,NUMBERS,RELAT_1,FUNCT_1,FINSET_1,ARYTM_3,ORDINAL1,CARD_1,FUNCT_7,CARD_3,TARSKI,ZFMISC_1,PROB_2,XXREAL_0,MSSUBFAM,NAT_1,EQREL_1,DYNKIN,FINSUB_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,FINSET_1,CARD_1,NUMBERS,SETFAM_1,RELAT_1,FUNCT_1,FUNCT_2,NAT_1,FUNCT_7,CARD_3,PROB_1,FINSUB_1,PROB_2,XXREAL_0,CKB5,CKB7,CKB8,CKB10,CKB11,CKB12,CKB19;
definitions SUBSET_1,CARD_1,ORDINAL1,CARD_3,CKB7,CKB8,CKB11,CKB12,CKB19;
theorems TARSKI,FUNCT_1,ZFMISC_1,FUNCT_2,SUBSET_1,NAT_1,RELAT_1,SETFAM_1,PROB_2,FINSUB_1,XBOOLE_0,XBOOLE_1,PROB_1,ORDINAL1,XXREAL_0,FUNCT_7,MEASURE1,CKB1,CKB2,CKB4,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
schemes FUNCT_2,NAT_1,FINSET_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,FINSET_1,XREAL_0,FUNCT_7,CKB3,CKB20;
constructors SETFAM_1,FINSUB_1,NAT_1,PROB_2,XREAL_0,FUNCT_7,ENUMSET1,RELSET_1,CKB5,CKB7,CKB8,CKB11,CKB12,CKB19;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve Omega for non  empty set;
reserve f for (SetSequence of Omega);
reserve X for (Subset of Omega);
reserve D for non  empty (Subset-Family of Omega);
reserve n for (Element of ( NAT ));
reserve x for set;
reserve z for set;
theorem
Th23: ((D is (Dynkin_System of Omega) & D is  intersection_stable) implies D is (SigmaField of Omega))
proof
assume that
A1: D is (Dynkin_System of Omega)
and
A2: D is  intersection_stable;
A3: (for f holds (( rng f ) c= D implies ( Intersection f ) in D))
proof
let f;
assume that
A4: ( rng f ) c= D;
A5: (for n holds ( ( f . n ) ` ) in D)
proof
let n;
( f . n ) in ( rng f ) by NAT_1:51;
hence thesis by A1,A4,CKB19:def 1;
end;
A6: (for n holds ( ( Complement f ) . n ) in D)
proof
let n;
( ( Complement f ) . n ) = ( ( f . n ) ` ) by PROB_1:def 2;
hence thesis by A5;
end;
(for x holds (x in ( rng ( Complement f ) ) implies x in D))
proof
let x;
assume x in ( rng ( Complement f ) );
then consider z such that A7: z in ( dom ( Complement f ) ) and A8: x = ( ( Complement f ) . z ) by FUNCT_1:def 3;
reconsider n = z as (Element of ( NAT )) by A7,FUNCT_2:def 1;
x = ( ( Complement f ) . n ) by A8;
hence thesis by A6;
end;
then ( rng ( Complement f ) ) c= D by TARSKI:def 3;
then ( Union ( Complement f ) ) in D by A1,A2,CKB27:1;
then ( ( Union ( Complement f ) ) ` ) in D by A1,CKB19:def 1;
hence thesis by PROB_1:def 3;
end;
(for X holds (X in D implies ( X ` ) in D)) by A1,CKB19:def 1;
hence thesis by A3,PROB_1:15;
end;
