environ
vocabularies XBOOLE_0,PROB_1,SUBSET_1,SETFAM_1,NUMBERS,RELAT_1,FUNCT_1,FINSET_1,ARYTM_3,ORDINAL1,CARD_1,FUNCT_7,CARD_3,TARSKI,ZFMISC_1,PROB_2,XXREAL_0,MSSUBFAM,NAT_1,EQREL_1,DYNKIN,FINSUB_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,FINSET_1,CARD_1,NUMBERS,SETFAM_1,RELAT_1,FUNCT_1,FUNCT_2,NAT_1,FUNCT_7,CARD_3,PROB_1,FINSUB_1,PROB_2,XXREAL_0,CKB5,CKB7,CKB8,CKB10,CKB11,CKB12,CKB19,CKB31,CKB32,CKB33;
definitions SUBSET_1,CARD_1,ORDINAL1,CARD_3,CKB7,CKB8,CKB11,CKB12,CKB19,CKB31,CKB32;
theorems TARSKI,FUNCT_1,ZFMISC_1,FUNCT_2,SUBSET_1,NAT_1,RELAT_1,SETFAM_1,PROB_2,FINSUB_1,XBOOLE_0,XBOOLE_1,PROB_1,ORDINAL1,XXREAL_0,FUNCT_7,MEASURE1,CKB1,CKB2,CKB4,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB34;
schemes FUNCT_2,NAT_1,FINSET_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,FINSET_1,XREAL_0,FUNCT_7,CKB3,CKB20;
constructors SETFAM_1,FINSUB_1,NAT_1,PROB_2,XREAL_0,FUNCT_7,ENUMSET1,RELSET_1,CKB5,CKB7,CKB8,CKB11,CKB12,CKB19,CKB31,CKB32,CKB33;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve Omega for non empty set;
reserve h for set;
reserve x for set;
reserve Y for set;
theorem
Th25: (for E being (Subset-Family of Omega) holds (for X,Y being (Subset of Omega) holds (((X in ( generated_Dynkin_System E ) & Y in ( generated_Dynkin_System E )) & E is  intersection_stable) implies ( X /\ Y ) in ( generated_Dynkin_System E ))))
proof
let E being (Subset-Family of Omega);
let X being (Subset of Omega),Y being (Subset of Omega);
assume that
A1: X in ( generated_Dynkin_System E )
and
A2: Y in ( generated_Dynkin_System E )
and
A3: E is  intersection_stable;
reconsider G = ( generated_Dynkin_System E ) as (Dynkin_System of Omega);
defpred P[ set ]
 means
(ex X being (Element of G) st $1 = ( DynSys (X,G) ));
consider h such that A4: (for x holds (x in h iff (x in ( bool ( bool Omega ) ) & P[ x ]))) from XBOOLE_0:sch 1;
A5: (for Y holds (Y in h implies Y is (Dynkin_System of Omega)))
proof
let Y;
assume Y in h;
then (ex X being (Element of G) st Y = ( DynSys (X,G) )) by A4;
hence thesis;
end;
h is non empty
proof
set X = the (Element of G);
( DynSys (X,G) ) in h by A4;
hence thesis;
end;
then reconsider h as non empty set;
( DynSys (X,G) ) in h by A1,A4;
then A6: ( meet h ) c= ( DynSys (X,G) ) by SETFAM_1:3;
(for x holds (x in E implies x in ( meet h )))
proof
let x;
assume A7: x in E;
(for Y holds (Y in h implies x in Y))
proof
let Y;
assume Y in h;
then consider X being (Element of G) such that A8: Y = ( DynSys (X,G) ) by A4;
( x /\ X ) in G by A3,A7,CKB34:1;
hence thesis by A7,A8,CKB32:def 1;
end;
hence thesis by SETFAM_1:def 1;
end;
then A9: E c= ( meet h ) by TARSKI:def 3;
( meet h ) is (Dynkin_System of Omega) by A5,CKB22:1;
then G c= ( meet h ) by A9,CKB31:def 1;
then G c= ( DynSys (X,G) ) by A6,XBOOLE_1:1;
hence thesis by A2,CKB32:def 1;
end;
