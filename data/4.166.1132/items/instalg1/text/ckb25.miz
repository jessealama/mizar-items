environ
vocabularies XBOOLE_0,STRUCT_0,MSUALG_1,RELAT_1,PBOOLE,MSATERM,MSAFREE,SUBSET_1,DTCONSTR,FINSEQ_1,TDGROUP,TREES_3,TARSKI,FUNCT_1,NUMBERS,MARGREL1,PARTFUN1,PZFMISC1,TREES_4,FUNCT_6,MSUALG_3,MSUALG_6,PUA2MSS1,CARD_3,ORDINAL1,RLTOPSP1,FUNCT_4,REWRITE1,REALSET1,CAT_1,ZFMISC_1,NAT_1,MEMBER_1,INSTALG1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,RELAT_1,FUNCT_1,NUMBERS,NAT_1,FINSEQ_1,STRUCT_0,FINSEQ_2,CARD_3,LANG1,TREES_3,TREES_4,DTCONSTR,REWRITE1,FUNCT_7,PBOOLE,PZFMISC1,MSUALG_1,PARTFUN1,FUNCT_2,PRALG_2,MSUALG_3,PUA2MSS1,MSAFREE,MSATERM,MSUALG_6,CKB8,CKB17;
definitions TARSKI,STRUCT_0,FUNCT_1,MSUALG_1,MSUALG_3,PUA2MSS1,MSUALG_6,PBOOLE,PZFMISC1,CKB8,CKB17;
theorems ZFMISC_1,RELAT_1,FUNCT_1,GRFUNC_1,FUNCT_2,FINSEQ_1,TARSKI,TREES_4,PBOOLE,MSUALG_1,MSUALG_3,REWRITE1,PRALG_2,PUA2MSS1,MSAFREE,MSATERM,EXTENS_1,MSUALG_6,RELSET_1,XBOOLE_0,MSALIMIT,PARTFUN1,FINSEQ_2,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes CLASSES1,MSATERM,MSUALG_6,FUNCT_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,PBOOLE,TREES_3,STRUCT_0,MSUALG_1,MSUALG_3,MSAFREE,MSATERM,MSUALG_9,ORDINAL1,RELSET_1,CKB2,CKB10,CKB11,CKB12,CKB13,CKB14,CKB19;
constructors XXREAL_0,NAT_1,REWRITE1,PZFMISC1,FUNCT_7,PRALG_2,MSUALG_3,MSATERM,PUA2MSS1,MSUALG_6,RELSET_1,CKB8,CKB17;
requirements SUBSET,BOOLE;
begin
theorem
(for S1 being  feasible ManySortedSign holds (for S2 being (Subsignature of S1) holds (for S3 being (Subsignature of S2) holds S3 is (Subsignature of S1))))
proof
let S1 being  feasible ManySortedSign;
let S2 being (Subsignature of S1);
let S3 being (Subsignature of S2);
( rng ( id (the carrier of S3) ) ) = (the carrier of S3) by RELAT_1:45;
then A1: ( ( id (the carrier of S2) ) * ( id (the carrier of S3) ) ) = ( id (the carrier of S3) ) by CKB18:1,RELAT_1:53;
( rng ( id (the carrier' of S3) ) ) = (the carrier' of S3) by RELAT_1:45;
then A2: ( ( id (the carrier' of S2) ) * ( id (the carrier' of S3) ) ) = ( id (the carrier' of S3) ) by CKB18:1,RELAT_1:53;
(( id (the carrier of S3) ),( id (the carrier' of S3) ) form_morphism_between S3,S2 & ( id (the carrier of S2) ),( id (the carrier' of S2) ) form_morphism_between S2,S1) by CKB17:def 1;
hence ( id (the carrier of S3) ),( id (the carrier' of S3) ) form_morphism_between S3,S1 by A1,A2,PUA2MSS1:29;
end;
