environ
vocabularies XBOOLE_0,STRUCT_0,MSUALG_1,RELAT_1,PBOOLE,MSATERM,MSAFREE,SUBSET_1,DTCONSTR,FINSEQ_1,TDGROUP,TREES_3,TARSKI,FUNCT_1,NUMBERS,MARGREL1,PARTFUN1,PZFMISC1,TREES_4,FUNCT_6,MSUALG_3,MSUALG_6,PUA2MSS1,CARD_3,ORDINAL1,RLTOPSP1,FUNCT_4,REWRITE1,REALSET1,CAT_1,ZFMISC_1,NAT_1,MEMBER_1,INSTALG1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,RELAT_1,FUNCT_1,NUMBERS,NAT_1,FINSEQ_1,STRUCT_0,FINSEQ_2,CARD_3,LANG1,TREES_3,TREES_4,DTCONSTR,REWRITE1,FUNCT_7,PBOOLE,PZFMISC1,MSUALG_1,PARTFUN1,FUNCT_2,PRALG_2,MSUALG_3,PUA2MSS1,MSAFREE,MSATERM,MSUALG_6,CKB8,CKB17,CKB32,CKB33;
definitions TARSKI,STRUCT_0,FUNCT_1,MSUALG_1,MSUALG_3,PUA2MSS1,MSUALG_6,PBOOLE,PZFMISC1,CKB8,CKB17,CKB32,CKB33;
theorems ZFMISC_1,RELAT_1,FUNCT_1,GRFUNC_1,FUNCT_2,FINSEQ_1,TARSKI,TREES_4,PBOOLE,MSUALG_1,MSUALG_3,REWRITE1,PRALG_2,PUA2MSS1,MSAFREE,MSATERM,EXTENS_1,MSUALG_6,RELSET_1,XBOOLE_0,MSALIMIT,PARTFUN1,FINSEQ_2,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53;
schemes CLASSES1,MSATERM,MSUALG_6,FUNCT_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,PBOOLE,TREES_3,STRUCT_0,MSUALG_1,MSUALG_3,MSAFREE,MSATERM,MSUALG_9,ORDINAL1,RELSET_1,CKB2,CKB10,CKB11,CKB12,CKB13,CKB14,CKB19,CKB27,CKB28,CKB36;
constructors XXREAL_0,NAT_1,REWRITE1,PZFMISC1,FUNCT_7,PRALG_2,MSUALG_3,MSATERM,PUA2MSS1,MSUALG_6,RELSET_1,CKB8,CKB17,CKB32,CKB33;
requirements SUBSET,BOOLE;
begin
scheme GenFuncEx { S() -> non  empty non  void ManySortedSign,A() ->  non-empty MSAlgebra over S(),X() ->  non-empty (ManySortedSet of (the carrier of S())),F(set,set) -> set } : (ex h being (ManySortedFunction of ( FreeMSA X() ),A()) st (h is_homomorphism ( FreeMSA X() ),A() & (for s being (SortSymbol of S()) holds (for x being (Element of ( X() . s )) holds ( ( h . s ) . ( root-tree [ x,s ] ) ) = F(x,s)))))
provided
A1: (for s being (SortSymbol of S()) holds (for x being (Element of ( X() . s )) holds F(x,s) in ( (the Sorts of A()) . s )))
proof
defpred P[ set,set ]
 means
(ex f being (Function of ( ( FreeGen X() ) . $1 ),( (the Sorts of A()) . $1 )) st ($2 = f & (for x being (Element of ( X() . $1 )) holds ( f . ( root-tree [ x,$1 ] ) ) = F(x,$1))));
A2: (for a being set holds (a in (the carrier of S()) implies (ex y being set st P[ a,y ])))
proof
let a being set;
assume a in (the carrier of S());
then reconsider s = a as (SortSymbol of S());
defpred P[ set,set ]
 means
(ex x being (Element of ( X() . s )) st ($1 = ( root-tree [ x,s ] ) & $2 = F(x,s)));
A3: ( ( FreeGen X() ) . s ) = ( FreeGen (s,X()) ) by MSAFREE:def 16;
A4: (for y being set holds (y in ( ( FreeGen X() ) . s ) implies (ex z being set st (z in ( (the Sorts of A()) . s ) & P[ y,z ]))))
proof
let y being set;
assume y in ( ( FreeGen X() ) . s );
then consider a being set such that A5: a in ( X() . s ) and A6: y = ( root-tree [ a,s ] ) by A3,MSAFREE:def 15;
reconsider a as (Element of ( X() . s )) by A5;
take z = F(a,s);
thus z in ( (the Sorts of A()) . s ) by A1;
take a;
thus thesis by A6;
end;
consider f being Function such that A7: (( dom f ) = ( ( FreeGen X() ) . s ) & ( rng f ) c= ( (the Sorts of A()) . s )) and A8: (for y being set holds (y in ( ( FreeGen X() ) . s ) implies P[ y,( f . y ) ])) from FUNCT_1:sch 5(A4);
reconsider f as (Function of ( ( FreeGen X() ) . a ),( (the Sorts of A()) . a )) by A7,FUNCT_2:2;
take y = f;
take f;
thus y = f;
let x being (Element of ( X() . a ));
( root-tree [ x,s ] ) in ( ( FreeGen X() ) . s ) by A3,MSAFREE:def 15;
then consider z being (Element of ( X() . s )) such that A9: ( root-tree [ x,s ] ) = ( root-tree [ z,s ] ) and A10: ( f . ( root-tree [ x,s ] ) ) = F(z,s) by A8;
[ x,s ] = [ z,s ] by A9,TREES_4:4;
hence thesis by A10,ZFMISC_1:27;
end;
consider h being Function such that A11: ( dom h ) = (the carrier of S()) and A12: (for a being set holds (a in (the carrier of S()) implies P[ a,( h . a ) ])) from CLASSES1:sch 1(A2);
reconsider h as (ManySortedSet of (the carrier of S())) by A11,PARTFUN1:def 2,RELAT_1:def 18;
h is (ManySortedFunction of ( FreeGen X() ),(the Sorts of A()))
proof
let a being set;
assume a in (the carrier of S());
then (ex f being (Function of ( ( FreeGen X() ) . a ),( (the Sorts of A()) . a )) st (( h . a ) = f & (for x being (Element of ( X() . a )) holds ( f . ( root-tree [ x,a ] ) ) = F(x,a)))) by A12;
hence thesis;
end;
then reconsider h as (ManySortedFunction of ( FreeGen X() ),(the Sorts of A()));
consider H being (ManySortedFunction of ( FreeMSA X() ),A()) such that A13: H is_homomorphism ( FreeMSA X() ),A() and A14: ( H || ( FreeGen X() ) ) = h by MSAFREE:def 5;
take H;
thus H is_homomorphism ( FreeMSA X() ),A() by A13;
let s being (SortSymbol of S());
let x being (Element of ( X() . s ));
A15: (ex f being (Function of ( ( FreeGen X() ) . s ),( (the Sorts of A()) . s )) st (( h . s ) = f & (for x being (Element of ( X() . s )) holds ( f . ( root-tree [ x,s ] ) ) = F(x,s)))) by A12;
reconsider t = ( root-tree [ x,s ] ) as (Term of S(),X()) by MSATERM:4;
( ( FreeGen X() ) . s ) = ( FreeGen (s,X()) ) by MSAFREE:def 16;
then A16: t in ( ( FreeGen X() ) . s ) by MSAFREE:def 15;
( h . s ) = ( ( H . s ) | ( ( FreeGen X() ) . s ) ) by A14,MSAFREE:def 1;
then ( ( H . s ) . ( root-tree [ x,s ] ) ) = ( ( h . s ) . ( root-tree [ x,s ] ) ) by A16,FUNCT_1:49;
hence thesis by A15;
end;
