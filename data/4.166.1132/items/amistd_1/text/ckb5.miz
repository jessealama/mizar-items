environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,ORDINAL1,SETFAM_1,AMI_1,FSM_1,FUNCT_4,FUNCOP_1,RELAT_1,TARSKI,STRUCT_0,FUNCT_1,CARD_3,ZFMISC_1,CIRCUIT2,CAT_1,NAT_1,GLIB_000,XXREAL_0,PARTFUN1,FINSEQ_1,ARYTM_3,CARD_1,GOBOARD5,FUNCT_2,FINSEQ_4,ARYTM_1,FINSET_1,FRECHET,AMISTD_1,SCMNORM,AFINSQ_1,COMPOS_1,AMISTD_2,PBOOLE,SCMFSA6B;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,SETFAM_1,ORDINAL1,CARD_1,XXREAL_0,NUMBERS,XCMPLX_0,NAT_1,MEMBERED,FUNCT_1,RELSET_1,PARTFUN1,MCART_1,VALUED_1,DOMAIN_1,CARD_3,FINSEQ_1,FINSEQ_4,FUNCOP_1,FINSET_1,FUNCT_4,FUNCT_7,AFINSQ_1,PBOOLE,STRUCT_0,GRAPH_2,NAT_D,XXREAL_2,MEMSTR_0,COMPOS_1,EXTPRO_1,FUNCT_2,CKB2,CKB3,CKB4;
definitions TARSKI,STRUCT_0,COMPOS_1,EXTPRO_1,XBOOLE_0,MEMSTR_0,FUNCT_1,FUNCOP_1,NAT_1,RELAT_1,FUNCT_4,NAT_D,AFINSQ_1,VALUED_1,CKB2,CKB3,CKB4;
theorems TARSKI,FINSEQ_4,FINSEQ_1,NAT_1,FUNCT_4,FUNCT_1,FUNCT_2,ENUMSET1,ZFMISC_1,CARD_1,FUNCOP_1,CARD_3,ORDINAL1,MCART_1,FINSEQ_3,INT_1,SETFAM_1,REVROT_1,EXTPRO_1,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,COMPOS_1,FUNCT_7,PARTFUN1,XREAL_0,NAT_D,PBOOLE,AFINSQ_1,RECDEF_2,MEMSTR_0,GRFUNC_1,PARTFUN2,CKB2,CKB3,CKB4;
schemes NAT_1,FINSEQ_2,FUNCT_2;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCOP_1,FINSET_1,NUMBERS,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,CARD_3,REALSET1,FUNCT_7,STRUCT_0,CARD_1,XXREAL_2,RELSET_1,FUNCT_4,AFINSQ_1,ORDINAL1,ZFMISC_1,SUBSET_1,VALUED_1,COMPOS_1,EXTPRO_1,PBOOLE,PRE_POLY,MEMSTR_0,CKB1;
constructors WELLORD2,REAL_1,FINSEQ_4,REALSET1,NAT_D,XXREAL_2,COMPOS_1,EXTPRO_1,RELSET_1,PRE_POLY,GRAPH_2,AFINSQ_1,MCART_1,FUNCT_7,PBOOLE,XXREAL_1,FUNCT_4,MEMSTR_0,CKB2,CKB3,CKB4;
requirements NUMERALS,BOOLE,REAL,SUBSET,ARITHM;
begin
reserve N for  with_non-empty_elements non  empty set;
reserve S for  IC-Ins-separated non  empty AMI-Struct over N;
reserve i for (Element of (the Instructions of S));
reserve l for (Element of ( NAT ));
reserve s for (State of S);
Lm1:now
let N;
let S being  IC-Ins-separated non  empty AMI-Struct over N;
let i being (Element of (the Instructions of S));
let l being (Element of ( NAT ));
let s being (State of S);
let P being (Instruction-Sequence of S);
reconsider t = ( s +* (( IC S ),l) ) as (Element of ( product (the Object-Kind of S) )) by CARD_3:107;
l in ( NAT );
then A1: l in ( dom P ) by PARTFUN1:def 2;
( IC S ) in ( dom s ) by MEMSTR_0:2;
then A4: ( IC t ) = l by FUNCT_7:31;
then ( CurInstr (( P +* (l,i) ),t) ) = ( ( P +* (l,i) ) . l ) by PBOOLE:143
.= i by A1,FUNCT_7:31;
hence ( IC ( Following (( P +* (l,i) ),( s +* (( IC S ),l) )) ) ) in ( NIC (i,l) ) by A4;
end;
registration
let N being  with_non-empty_elements non  empty set;
let S being  IC-Ins-separated non  empty AMI-Struct over N;
let i being (Element of (the Instructions of S));
let l being (Element of ( NAT ));
cluster ( NIC (i,l) ) -> non  empty;
coherence by Lm1;
end;
