environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,ORDINAL1,SETFAM_1,AMI_1,FSM_1,FUNCT_4,FUNCOP_1,RELAT_1,TARSKI,STRUCT_0,FUNCT_1,CARD_3,ZFMISC_1,CIRCUIT2,CAT_1,NAT_1,GLIB_000,XXREAL_0,PARTFUN1,FINSEQ_1,ARYTM_3,CARD_1,GOBOARD5,FUNCT_2,FINSEQ_4,ARYTM_1,FINSET_1,FRECHET,AMISTD_1,SCMNORM,AFINSQ_1,COMPOS_1,AMISTD_2,PBOOLE,SCMFSA6B;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,SETFAM_1,ORDINAL1,CARD_1,XXREAL_0,NUMBERS,XCMPLX_0,NAT_1,MEMBERED,FUNCT_1,RELSET_1,PARTFUN1,MCART_1,VALUED_1,DOMAIN_1,CARD_3,FINSEQ_1,FINSEQ_4,FUNCOP_1,FINSET_1,FUNCT_4,FUNCT_7,AFINSQ_1,PBOOLE,STRUCT_0,GRAPH_2,NAT_D,XXREAL_2,MEMSTR_0,COMPOS_1,EXTPRO_1,FUNCT_2,CKB2,CKB3,CKB4,CKB6,CKB7,CKB10,CKB13;
definitions TARSKI,STRUCT_0,COMPOS_1,EXTPRO_1,XBOOLE_0,MEMSTR_0,FUNCT_1,FUNCOP_1,NAT_1,RELAT_1,FUNCT_4,NAT_D,AFINSQ_1,VALUED_1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB10,CKB13;
theorems TARSKI,FINSEQ_4,FINSEQ_1,NAT_1,FUNCT_4,FUNCT_1,FUNCT_2,ENUMSET1,ZFMISC_1,CARD_1,FUNCOP_1,CARD_3,ORDINAL1,MCART_1,FINSEQ_3,INT_1,SETFAM_1,REVROT_1,EXTPRO_1,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,COMPOS_1,FUNCT_7,PARTFUN1,XREAL_0,NAT_D,PBOOLE,AFINSQ_1,RECDEF_2,MEMSTR_0,GRFUNC_1,PARTFUN2,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB17,CKB18,CKB19,CKB20,CKB21;
schemes NAT_1,FINSEQ_2,FUNCT_2;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCOP_1,FINSET_1,NUMBERS,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,CARD_3,REALSET1,FUNCT_7,STRUCT_0,CARD_1,XXREAL_2,RELSET_1,FUNCT_4,AFINSQ_1,ORDINAL1,ZFMISC_1,SUBSET_1,VALUED_1,COMPOS_1,EXTPRO_1,PBOOLE,PRE_POLY,MEMSTR_0,CKB1,CKB5,CKB14,CKB15,CKB16,CKB22;
constructors WELLORD2,REAL_1,FINSEQ_4,REALSET1,NAT_D,XXREAL_2,COMPOS_1,EXTPRO_1,RELSET_1,PRE_POLY,GRAPH_2,AFINSQ_1,MCART_1,FUNCT_7,PBOOLE,XXREAL_1,FUNCT_4,MEMSTR_0,CKB2,CKB3,CKB4,CKB6,CKB7,CKB10,CKB13;
requirements NUMERALS,BOOLE,REAL,SUBSET,ARITHM;
begin
reserve z for  natural number;
reserve N for  with_non-empty_elements non  empty set;
reserve S for  IC-Ins-separated non  empty AMI-Struct over N;
reserve i for (Element of (the Instructions of S));
reserve l for (Element of ( NAT ));
theorem
Lm5: (for l being (Element of ( NAT )) holds (for i being (Element of (the Instructions of ( STC N ))) holds ((l = z & ( InsCode i ) = 1) implies ( NIC (i,l) ) = { ( z + 1 ) })))
proof
let l being (Element of ( NAT ));
let i being (Element of (the Instructions of ( STC N )));
assume that
A1: l = z
and
A2: ( InsCode i ) = 1;
set M = ( STC N );
set F = { ( IC ( Exec (i,ss) ) ) where ss is (Element of ( product (the Object-Kind of ( STC N )) )): ( IC ss ) = l };
now
set f = ( ( NAT ) --> i );
set w = the (State of M);
reconsider l9 = l as (Element of ( ObjectKind ( IC M ) )) by MEMSTR_0:def 3;
set u = ( ( IC M ) .--> l9 );
A3: ( dom u ) = { ( IC M ) } by FUNCOP_1:13;
let y being set;
reconsider t = ( w +* u ) as (Element of ( product (the Object-Kind of ( STC N )) )) by CARD_3:107;
A6: ( f /. l ) = i by FUNCOP_1:7;
hereby
assume y in F;
then (ex s being (Element of ( product (the Object-Kind of ( STC N )) )) st (y = ( IC ( Exec (i,s) ) ) & ( IC s ) = l));
then y = ( succ z ) by A1,A2,CKB17:1
.= ( z + 1 );
hence y in { ( z + 1 ) } by TARSKI:def 1;
end;
assume y in { ( z + 1 ) };
then A7: y = ( succ z ) by TARSKI:def 1;
( IC M ) in ( dom u ) by A3,TARSKI:def 1;
then A8: ( IC t ) = ( u . ( IC M ) ) by FUNCT_4:13
.= z by A1,FUNCOP_1:72;
then ( IC ( Following (f,t) ) ) = ( succ z ) by A1,A2,A6,CKB17:1;
hence y in F by A1,A7,A8,A6;
end;
hence thesis by TARSKI:1;
end;
