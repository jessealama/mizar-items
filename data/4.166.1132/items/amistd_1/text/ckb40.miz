environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,ORDINAL1,SETFAM_1,AMI_1,FSM_1,FUNCT_4,FUNCOP_1,RELAT_1,TARSKI,STRUCT_0,FUNCT_1,CARD_3,ZFMISC_1,CIRCUIT2,CAT_1,NAT_1,GLIB_000,XXREAL_0,PARTFUN1,FINSEQ_1,ARYTM_3,CARD_1,GOBOARD5,FUNCT_2,FINSEQ_4,ARYTM_1,FINSET_1,FRECHET,AMISTD_1,SCMNORM,AFINSQ_1,COMPOS_1,AMISTD_2,PBOOLE,SCMFSA6B;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,SETFAM_1,ORDINAL1,CARD_1,XXREAL_0,NUMBERS,XCMPLX_0,NAT_1,MEMBERED,FUNCT_1,RELSET_1,PARTFUN1,MCART_1,VALUED_1,DOMAIN_1,CARD_3,FINSEQ_1,FINSEQ_4,FUNCOP_1,FINSET_1,FUNCT_4,FUNCT_7,AFINSQ_1,PBOOLE,STRUCT_0,GRAPH_2,NAT_D,XXREAL_2,MEMSTR_0,COMPOS_1,EXTPRO_1,FUNCT_2,CKB2,CKB3,CKB4,CKB6,CKB7,CKB10,CKB13,CKB32,CKB37,CKB38,CKB39;
definitions TARSKI,STRUCT_0,COMPOS_1,EXTPRO_1,XBOOLE_0,MEMSTR_0,FUNCT_1,FUNCOP_1,NAT_1,RELAT_1,FUNCT_4,NAT_D,AFINSQ_1,VALUED_1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB10,CKB13,CKB32,CKB37,CKB38,CKB39;
theorems TARSKI,FINSEQ_4,FINSEQ_1,NAT_1,FUNCT_4,FUNCT_1,FUNCT_2,ENUMSET1,ZFMISC_1,CARD_1,FUNCOP_1,CARD_3,ORDINAL1,MCART_1,FINSEQ_3,INT_1,SETFAM_1,REVROT_1,EXTPRO_1,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,COMPOS_1,FUNCT_7,PARTFUN1,XREAL_0,NAT_D,PBOOLE,AFINSQ_1,RECDEF_2,MEMSTR_0,GRFUNC_1,PARTFUN2,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB17,CKB18,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB29,CKB30,CKB31,CKB32,CKB33,CKB36,CKB37,CKB38,CKB39;
schemes NAT_1,FINSEQ_2,FUNCT_2;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCOP_1,FINSET_1,NUMBERS,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,CARD_3,REALSET1,FUNCT_7,STRUCT_0,CARD_1,XXREAL_2,RELSET_1,FUNCT_4,AFINSQ_1,ORDINAL1,ZFMISC_1,SUBSET_1,VALUED_1,COMPOS_1,EXTPRO_1,PBOOLE,PRE_POLY,MEMSTR_0,CKB1,CKB5,CKB14,CKB15,CKB16,CKB22,CKB26,CKB27,CKB28,CKB34,CKB35;
constructors WELLORD2,REAL_1,FINSEQ_4,REALSET1,NAT_D,XXREAL_2,COMPOS_1,EXTPRO_1,RELSET_1,PRE_POLY,GRAPH_2,AFINSQ_1,MCART_1,FUNCT_7,PBOOLE,XXREAL_1,FUNCT_4,MEMSTR_0,CKB2,CKB3,CKB4,CKB6,CKB7,CKB10,CKB13,CKB32,CKB37,CKB38,CKB39;
requirements NUMERALS,BOOLE,REAL,SUBSET,ARITHM;
begin
reserve x for set;
reserve k for (Element of ( NAT ));
reserve N for  with_non-empty_elements non  empty set;
reserve S for  IC-Ins-separated non  empty AMI-Struct over N;
reserve l for (Element of ( NAT ));
reserve s for (State of S);
reserve ss for (Element of ( product (the Object-Kind of S) ));
theorem
Th45: (for N being  with_non-empty_elements non  empty set holds (for S being  IC-Ins-separated non  empty AMI-Struct over N holds (for F being  finite (preProgram of S) holds (F is  really-closed iff (for s being (State of S) holds (( IC s ) in ( dom F ) implies (for k being (Element of ( NAT )) holds ( IC ( Comput (F,s,k) ) ) in ( dom F ))))))))
proof
let N being  with_non-empty_elements non  empty set;
let S being  IC-Ins-separated non  empty AMI-Struct over N;
let F being  finite (preProgram of S);
thus (F is  really-closed implies (for s being (State of S) holds (( IC s ) in ( dom F ) implies (for k being (Element of ( NAT )) holds ( IC ( Comput (F,s,k) ) ) in ( dom F )))))
proof
assume A1: F is  really-closed;
let s being (State of S);
assume that
A2: ( IC s ) in ( dom F );
defpred P[ (Element of ( NAT )) ]
 means
( IC ( Comput (F,s,$1) ) ) in ( dom F );
A3:now
let k being (Element of ( NAT ));
assume that
A4: P[ k ];
reconsider t = ( Comput (F,s,k) ) as (Element of ( product (the Object-Kind of S) )) by CARD_3:107;
set l = ( IC ( Comput (F,s,k) ) );
A5: ( IC ( Following (F,t) ) ) in ( NIC (( F /. l ),l) );
A6: ( Comput (F,s,( k + 1 )) ) = ( Following (F,t) ) by EXTPRO_1:3;
( NIC (( F /. l ),l) ) c= ( dom F ) by A1,A4,CKB37:def 1;
hence P[ ( k + 1 ) ] by A5,A6;
end;
A7: P[ ( 0 ) ] by A2,EXTPRO_1:2;
thus (for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A7,A3);
end;

assume Z1: (for s being (State of S) holds (( IC s ) in ( dom F ) implies (for k being (Element of ( NAT )) holds ( IC ( Comput (F,s,k) ) ) in ( dom F ))));
let l being (Element of ( NAT ));
assume that
Z2: l in ( dom F );
let x;
assume x in ( NIC (( F /. l ),l) );
then consider ss being (Element of ( product (the Object-Kind of S) )) such that W1: x = ( IC ( Exec (( F /. l ),ss) ) ) and W2: ( IC ss ) = l;
reconsider ss as (State of S);
( IC ( Comput (F,ss,( ( 0 ) + 1 )) ) ) = ( IC ( Following (F,( Comput (F,ss,( 0 )) )) ) ) by EXTPRO_1:3
.= ( IC ( Following (F,ss) ) ) by EXTPRO_1:2
.= ( IC ( Exec (( F /. ( IC ss ) ),ss) ) );
hence x in ( dom F ) by W1,W2,Z1,Z2;
end;
