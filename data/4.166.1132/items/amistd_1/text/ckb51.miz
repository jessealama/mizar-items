environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,ORDINAL1,SETFAM_1,AMI_1,FSM_1,FUNCT_4,FUNCOP_1,RELAT_1,TARSKI,STRUCT_0,FUNCT_1,CARD_3,ZFMISC_1,CIRCUIT2,CAT_1,NAT_1,GLIB_000,XXREAL_0,PARTFUN1,FINSEQ_1,ARYTM_3,CARD_1,GOBOARD5,FUNCT_2,FINSEQ_4,ARYTM_1,FINSET_1,FRECHET,AMISTD_1,SCMNORM,AFINSQ_1,COMPOS_1,AMISTD_2,PBOOLE,SCMFSA6B;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,SETFAM_1,ORDINAL1,CARD_1,XXREAL_0,NUMBERS,XCMPLX_0,NAT_1,MEMBERED,FUNCT_1,RELSET_1,PARTFUN1,MCART_1,VALUED_1,DOMAIN_1,CARD_3,FINSEQ_1,FINSEQ_4,FUNCOP_1,FINSET_1,FUNCT_4,FUNCT_7,AFINSQ_1,PBOOLE,STRUCT_0,GRAPH_2,NAT_D,XXREAL_2,MEMSTR_0,COMPOS_1,EXTPRO_1,FUNCT_2,CKB2,CKB3,CKB4,CKB6,CKB7,CKB10,CKB13,CKB32,CKB37,CKB38,CKB39;
definitions TARSKI,STRUCT_0,COMPOS_1,EXTPRO_1,XBOOLE_0,MEMSTR_0,FUNCT_1,FUNCOP_1,NAT_1,RELAT_1,FUNCT_4,NAT_D,AFINSQ_1,VALUED_1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB10,CKB13,CKB32,CKB37,CKB38,CKB39;
theorems TARSKI,FINSEQ_4,FINSEQ_1,NAT_1,FUNCT_4,FUNCT_1,FUNCT_2,ENUMSET1,ZFMISC_1,CARD_1,FUNCOP_1,CARD_3,ORDINAL1,MCART_1,FINSEQ_3,INT_1,SETFAM_1,REVROT_1,EXTPRO_1,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,COMPOS_1,FUNCT_7,PARTFUN1,XREAL_0,NAT_D,PBOOLE,AFINSQ_1,RECDEF_2,MEMSTR_0,GRFUNC_1,PARTFUN2,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB17,CKB18,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB29,CKB30,CKB31,CKB32,CKB33,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB48,CKB49,CKB50;
schemes NAT_1,FINSEQ_2,FUNCT_2;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCOP_1,FINSET_1,NUMBERS,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,CARD_3,REALSET1,FUNCT_7,STRUCT_0,CARD_1,XXREAL_2,RELSET_1,FUNCT_4,AFINSQ_1,ORDINAL1,ZFMISC_1,SUBSET_1,VALUED_1,COMPOS_1,EXTPRO_1,PBOOLE,PRE_POLY,MEMSTR_0,CKB1,CKB5,CKB14,CKB15,CKB16,CKB22,CKB26,CKB27,CKB28,CKB34,CKB35,CKB44,CKB45,CKB46,CKB47;
constructors WELLORD2,REAL_1,FINSEQ_4,REALSET1,NAT_D,XXREAL_2,COMPOS_1,EXTPRO_1,RELSET_1,PRE_POLY,GRAPH_2,AFINSQ_1,MCART_1,FUNCT_7,PBOOLE,XXREAL_1,FUNCT_4,MEMSTR_0,CKB2,CKB3,CKB4,CKB6,CKB7,CKB10,CKB13,CKB32,CKB37,CKB38,CKB39;
requirements NUMERALS,BOOLE,REAL,SUBSET,ARITHM;
begin
reserve N for  with_non-empty_elements non  empty set;
reserve S for  IC-Ins-separated non  empty AMI-Struct over N;
reserve i for (Element of (the Instructions of S));
reserve s for (State of S);
set III = { [ 1,( 0 ),( 0 ) ],[ ( 0 ),( 0 ),( 0 ) ] };
theorem
(for i being (Instruction of ( STC N )) holds (for s being (State of ( STC N )) holds (( InsCode i ) = 1 implies ( Exec (i,s) ) = ( IncIC (s,1) ))))
proof
let i being (Instruction of ( STC N ));
let s being (State of ( STC N ));
set M = ( STC N );
assume A1: ( InsCode i ) = 1;
A2:now
assume i in { [ ( 0 ),( 0 ),( 0 ) ] };
then i = [ ( 0 ),( 0 ),( 0 ) ] by TARSKI:def 1;
hence contradiction by A1,RECDEF_2:def 1;
end;
(the Instructions of M) = III by CKB13:def 1;
then (i = [ 1,( 0 ),( 0 ) ] or i = [ ( 0 ),( 0 ),( 0 ) ]) by TARSKI:def 2;
then A3: i in { [ 1,( 0 ),( 0 ) ] } by A1,RECDEF_2:def 1,TARSKI:def 1;
consider f being (Function of ( product (the Object-Kind of M) ),( product (the Object-Kind of M) )) such that A4: (for s being (Element of ( product (the Object-Kind of M) )) holds ( f . s ) = ( s +* ( ( 0 ) .--> ( succ ( s . ( 0 ) ) ) ) )) and A5: (the Execution of M) = ( ( [ 1,( 0 ),( 0 ) ] .--> f ) +* ( [ ( 0 ),( 0 ),( 0 ) ] .--> ( id ( product (the Object-Kind of M) ) ) ) ) by CKB13:def 1;
A6: (for s being (State of M) holds ( f . s ) = ( s +* ( ( 0 ) .--> ( succ ( s . ( 0 ) ) ) ) ))
proof
let s being (State of M);
reconsider s as (Element of ( product (the Object-Kind of M) )) by CARD_3:107;
( f . s ) = ( s +* ( ( 0 ) .--> ( succ ( s . ( 0 ) ) ) ) ) by A4;
hence thesis;
end;
A7: (the ZeroF of M) = ( 0 ) by CKB13:def 1;
A8: ( Start-At (( ( IC s ) + 1 ),M) ) = ( ( 0 ) .--> ( succ ( s . ( 0 ) ) ) ) by A7,NAT_1:38;
( dom ( [ ( 0 ),( 0 ),( 0 ) ] .--> ( id ( product (the Object-Kind of M) ) ) ) ) = { [ ( 0 ),( 0 ),( 0 ) ] } by FUNCOP_1:13;
then ( (the Execution of M) . i ) = ( ( [ 1,( 0 ),( 0 ) ] .--> f ) . i ) by A5,A2,FUNCT_4:11
.= f by A3,FUNCOP_1:7;
hence ( Exec (i,s) ) = ( IncIC (s,1) ) by A8,A6;
end;
