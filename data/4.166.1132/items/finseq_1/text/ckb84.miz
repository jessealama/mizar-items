environ
vocabularies NUMBERS,NAT_1,FUNCT_1,SUBSET_1,XXREAL_0,TARSKI,XCMPLX_0,XBOOLE_0,CARD_1,ARYTM_3,RELAT_1,FINSET_1,ZFMISC_1,ORDINAL1,PARTFUN1,FUNCOP_1,ORDINAL4,ARYTM_1,REAL_1,FINSEQ_1,ORDINAL2,VALUED_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,RELAT_1,FUNCT_1,FUNCOP_1,WELLORD2,ORDINAL1,REAL_1,NAT_1,CARD_1,NUMBERS,PARTFUN1,FINSET_1,XXREAL_0,FUNCT_2,INT_1,VALUED_0,CKB1,CKB2,CKB15,CKB17,CKB23,CKB24,CKB25,CKB35,CKB40,CKB45,CKB46,CKB49,CKB65,CKB67,CKB71,CKB72;
definitions TARSKI,FINSET_1,FUNCT_1,WELLORD2,XBOOLE_0,RELAT_1,CARD_1,CKB1,CKB15,CKB24,CKB35,CKB45,CKB46,CKB49,CKB67,CKB71,CKB72;
theorems TARSKI,AXIOMS,FUNCT_1,NAT_1,ZFMISC_1,RELAT_1,RELSET_1,WELLORD2,ORDINAL1,CARD_1,FINSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,XREAL_1,XXREAL_0,SETFAM_1,ORDINAL3,SUBSET_1,VALUED_0,CKB1,CKB3,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB20,CKB21,CKB24,CKB26,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB37,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB66,CKB67,CKB70,CKB71,CKB72,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83;
schemes FUNCT_1,SUBSET_1,NAT_1,XBOOLE_0,RELAT_1,CLASSES1,CKB27,CKB28;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,NUMBERS,RELSET_1,INT_1,XCMPLX_0,VALUED_0,CKB4,CKB7,CKB16,CKB18,CKB19,CKB22,CKB36,CKB38,CKB39,CKB47,CKB48,CKB68,CKB69,CKB73,CKB74,CKB75,CKB76;
constructors WELLORD2,FUNCOP_1,FUNCT_4,XXREAL_0,XREAL_0,NAT_1,CARD_1,RELSET_1,XCMPLX_0,INT_1,VALUED_0,CKB1,CKB2,CKB15,CKB24,CKB25,CKB35,CKB40,CKB45,CKB46,CKB49,CKB65,CKB67,CKB71,CKB72;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for Nat;
reserve x for set;
reserve y for set;
reserve p for FinSequence;
theorem
Th61: (p = <* x,y *> iff ((( len p ) = 2 & ( p . 1 ) = x) & ( p . 2 ) = y))
proof
thus (p = <* x,y *> implies ((( len p ) = 2 & ( p . 1 ) = x) & ( p . 2 ) = y))
proof
assume A1: p = <* x,y *>;
hence ( len p ) = ( ( len <* x *> ) + ( len <* y *> ) ) by CKB51:1
.= ( 1 + ( len <* y *> ) ) by CKB79:1
.= ( 1 + 1 ) by CKB79:1
.= 2;
A2: 1 in { 1 } by TARSKI:def 1;
then 1 in ( dom <* x *> ) by CKB67:def 1,CKB5:1;
hence ( p . 1 ) = ( <* x *> . 1 ) by A1,CKB49:def 1
.= x by CKB67:def 1;
A3: 1 in ( dom <* y *> ) by A2,CKB67:def 1,CKB5:1;
thus ( p . 2 ) = ( ( <* x *> ^ <* y *> ) . ( 1 + 1 ) ) by A1
.= ( ( <* x *> ^ <* y *> ) . ( ( len <* x *> ) + 1 ) ) by CKB79:1
.= ( <* y *> . 1 ) by A3,CKB49:def 1
.= y by CKB67:def 1;
end;

assume that
A4: ( len p ) = 2
and
A5: ( p . 1 ) = x
and
A6: ( p . 2 ) = y;
A7: ( dom p ) = ( Seg ( 1 + 1 ) ) by A4,CKB24:def 1
.= ( Seg ( ( len <* x *> ) + 1 ) ) by CKB79:1
.= ( Seg ( ( len <* x *> ) + ( len <* y *> ) ) ) by CKB79:1;
A8: (for k holds (k in ( dom <* x *> ) implies ( p . k ) = ( <* x *> . k )))
proof
let k;
assume k in ( dom <* x *> );
then k in { 1 } by CKB67:def 1,CKB5:1;
then k = 1 by TARSKI:def 1;
hence thesis by A5,CKB67:def 1;
end;
(for k holds (k in ( dom <* y *> ) implies ( p . ( ( len <* x *> ) + k ) ) = ( <* y *> . k )))
proof
let k;
assume k in ( dom <* y *> );
then A9: k in { 1 } by CKB67:def 1,CKB5:1;
thus ( p . ( ( len <* x *> ) + k ) ) = ( p . ( 1 + k ) ) by CKB79:1
.= ( p . ( 1 + 1 ) ) by A9,TARSKI:def 1
.= ( <* y *> . 1 ) by A6,CKB67:def 1
.= ( <* y *> . k ) by A9,TARSKI:def 1;
end;
hence thesis by A7,A8,CKB49:def 1;
end;
