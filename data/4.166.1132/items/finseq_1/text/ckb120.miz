environ
vocabularies NUMBERS,NAT_1,FUNCT_1,SUBSET_1,XXREAL_0,TARSKI,XCMPLX_0,XBOOLE_0,CARD_1,ARYTM_3,RELAT_1,FINSET_1,ZFMISC_1,ORDINAL1,PARTFUN1,FUNCOP_1,ORDINAL4,ARYTM_1,REAL_1,FINSEQ_1,ORDINAL2,VALUED_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,RELAT_1,FUNCT_1,FUNCOP_1,WELLORD2,ORDINAL1,REAL_1,NAT_1,CARD_1,NUMBERS,PARTFUN1,FINSET_1,XXREAL_0,FUNCT_2,INT_1,VALUED_0,CKB1,CKB2,CKB15,CKB17,CKB23,CKB24,CKB25,CKB35,CKB40,CKB45,CKB46,CKB49,CKB65,CKB67,CKB71,CKB72,CKB87,CKB91,CKB96,CKB98,CKB103,CKB105;
definitions TARSKI,FINSET_1,FUNCT_1,WELLORD2,XBOOLE_0,RELAT_1,CARD_1,CKB1,CKB15,CKB24,CKB35,CKB45,CKB46,CKB49,CKB67,CKB71,CKB72,CKB91,CKB96,CKB103,CKB105;
theorems TARSKI,AXIOMS,FUNCT_1,NAT_1,ZFMISC_1,RELAT_1,RELSET_1,WELLORD2,ORDINAL1,CARD_1,FINSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,XREAL_1,XXREAL_0,SETFAM_1,ORDINAL3,SUBSET_1,VALUED_0,CKB1,CKB3,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB20,CKB21,CKB24,CKB26,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB37,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB66,CKB67,CKB70,CKB71,CKB72,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB89,CKB91,CKB93,CKB94,CKB96,CKB103,CKB104,CKB105,CKB107,CKB108,CKB109,CKB110,CKB111,CKB112,CKB113;
schemes FUNCT_1,SUBSET_1,NAT_1,XBOOLE_0,RELAT_1,CLASSES1,CKB27,CKB28,CKB88,CKB95;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,NUMBERS,RELSET_1,INT_1,XCMPLX_0,VALUED_0,CKB4,CKB7,CKB16,CKB18,CKB19,CKB22,CKB36,CKB38,CKB39,CKB47,CKB48,CKB68,CKB69,CKB73,CKB74,CKB75,CKB76,CKB90,CKB92,CKB97,CKB99,CKB100,CKB101,CKB102,CKB106,CKB114,CKB115,CKB116,CKB117,CKB118,CKB119;
constructors WELLORD2,FUNCOP_1,FUNCT_4,XXREAL_0,XREAL_0,NAT_1,CARD_1,RELSET_1,XCMPLX_0,INT_1,VALUED_0,CKB1,CKB2,CKB15,CKB24,CKB25,CKB35,CKB40,CKB45,CKB46,CKB49,CKB65,CKB67,CKB71,CKB72,CKB87,CKB91,CKB96,CKB103,CKB105;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for Nat;
reserve x for set;
reserve y for set;
reserve f for Function;
defpred P[ set,set ]
 means
(ex k st ($1 = k & $2 = ( k + 1 )));
reserve D for set;
scheme SeqDEx { D() -> non  empty set,A() -> Nat,P[set,set] } : (ex p being (FinSequence of D()) st (( dom p ) = ( Seg A() ) & (for k holds (k in ( Seg A() ) implies P[ k,( p . k ) ]))))
provided
A1: (for k holds (k in ( Seg A() ) implies (ex x being (Element of D()) st P[ k,x ])))
proof
A2: (for y being set holds (y in ( Seg A() ) implies (ex x st (x in D() & P[ y,x ]))))
proof
let y;
assume A3: y in ( Seg A() );
then reconsider k = y as (Element of ( NAT ));
consider x being (Element of D()) such that A4: P[ k,x ] by A1,A3;
take x;
thus thesis by A4;
end;
consider f being Function such that A5: ( dom f ) = ( Seg A() ) and A6: ( rng f ) c= D() and A7: (for y being set holds (y in ( Seg A() ) implies P[ y,( f . y ) ])) from FUNCT_1:sch 5(A2);
reconsider f as FinSequence by A5,CKB15:def 1;
reconsider p = f as (FinSequence of D()) by A6,CKB35:def 1;
take p;
thus thesis by A5,A7;
end;
