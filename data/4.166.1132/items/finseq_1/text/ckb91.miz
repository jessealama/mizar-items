environ
vocabularies NUMBERS,NAT_1,FUNCT_1,SUBSET_1,XXREAL_0,TARSKI,XCMPLX_0,XBOOLE_0,CARD_1,ARYTM_3,RELAT_1,FINSET_1,ZFMISC_1,ORDINAL1,PARTFUN1,FUNCOP_1,ORDINAL4,ARYTM_1,REAL_1,FINSEQ_1,ORDINAL2,VALUED_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,RELAT_1,FUNCT_1,FUNCOP_1,WELLORD2,ORDINAL1,REAL_1,NAT_1,CARD_1,NUMBERS,PARTFUN1,FINSET_1,XXREAL_0,FUNCT_2,INT_1,VALUED_0,CKB1,CKB2,CKB15,CKB17,CKB23,CKB24,CKB25,CKB35,CKB40,CKB45,CKB46,CKB49,CKB65,CKB67,CKB71,CKB72,CKB87;
definitions TARSKI,FINSET_1,FUNCT_1,WELLORD2,XBOOLE_0,RELAT_1,CARD_1,CKB1,CKB15,CKB24,CKB35,CKB45,CKB46,CKB49,CKB67,CKB71,CKB72;
theorems TARSKI,AXIOMS,FUNCT_1,NAT_1,ZFMISC_1,RELAT_1,RELSET_1,WELLORD2,ORDINAL1,CARD_1,FINSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,XREAL_1,XXREAL_0,SETFAM_1,ORDINAL3,SUBSET_1,VALUED_0,CKB1,CKB3,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB20,CKB21,CKB24,CKB26,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB37,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB66,CKB67,CKB70,CKB71,CKB72,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB89;
schemes FUNCT_1,SUBSET_1,NAT_1,XBOOLE_0,RELAT_1,CLASSES1,CKB27,CKB28,CKB88;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,NUMBERS,RELSET_1,INT_1,XCMPLX_0,VALUED_0,CKB4,CKB7,CKB16,CKB18,CKB19,CKB22,CKB36,CKB38,CKB39,CKB47,CKB48,CKB68,CKB69,CKB73,CKB74,CKB75,CKB76,CKB90;
constructors WELLORD2,FUNCOP_1,FUNCT_4,XXREAL_0,XREAL_0,NAT_1,CARD_1,RELSET_1,XCMPLX_0,INT_1,VALUED_0,CKB1,CKB2,CKB15,CKB24,CKB25,CKB35,CKB40,CKB45,CKB46,CKB49,CKB65,CKB67,CKB71,CKB72,CKB87;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for Nat;
reserve x for set;
reserve X for set;
defpred P[ set,set ]
 means
(ex k st ($1 = k & $2 = ( k + 1 )));
reserve D for set;
definition
let D being set;
func D * -> set means 
:Def11: (x in it iff x is (FinSequence of D));
existence
proof
defpred P[ set ]
 means
$1 is (FinSequence of D);
consider X such that A1: (x in X iff (x in ( bool [: ( NAT ),D :] ) & P[ x ])) from XBOOLE_0:sch 1;
take X;
let x;
thus (x in X implies x is (FinSequence of D)) by A1;
assume x is (FinSequence of D);
then reconsider p = x as (FinSequence of D);
p c= [: ( NAT ),D :] by RELAT_1:185;
hence thesis by A1;
end;
uniqueness
proof
let D1 being set;
let D2 being set;
assume that
A2: (x in D1 iff x is (FinSequence of D))
and
A3: (x in D2 iff x is (FinSequence of D));
now
let x;
thus (x in D1 implies x in D2)
proof
assume x in D1;
then x is (FinSequence of D) by A2;
hence thesis by A3;
end;

assume x in D2;
then x is (FinSequence of D) by A3;
hence x in D1 by A2;
end;
hence thesis by TARSKI:1;
end;
end;
