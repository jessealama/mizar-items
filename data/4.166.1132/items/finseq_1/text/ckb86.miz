environ
vocabularies NUMBERS,NAT_1,FUNCT_1,SUBSET_1,XXREAL_0,TARSKI,XCMPLX_0,XBOOLE_0,CARD_1,ARYTM_3,RELAT_1,FINSET_1,ZFMISC_1,ORDINAL1,PARTFUN1,FUNCOP_1,ORDINAL4,ARYTM_1,REAL_1,FINSEQ_1,ORDINAL2,VALUED_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,RELAT_1,FUNCT_1,FUNCOP_1,WELLORD2,ORDINAL1,REAL_1,NAT_1,CARD_1,NUMBERS,PARTFUN1,FINSET_1,XXREAL_0,FUNCT_2,INT_1,VALUED_0,CKB1,CKB2,CKB15,CKB17,CKB23,CKB24,CKB25,CKB35,CKB40,CKB45,CKB46,CKB49,CKB65,CKB67,CKB71,CKB72;
definitions TARSKI,FINSET_1,FUNCT_1,WELLORD2,XBOOLE_0,RELAT_1,CARD_1,CKB1,CKB15,CKB24,CKB35,CKB45,CKB46,CKB49,CKB67,CKB71,CKB72;
theorems TARSKI,AXIOMS,FUNCT_1,NAT_1,ZFMISC_1,RELAT_1,RELSET_1,WELLORD2,ORDINAL1,CARD_1,FINSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,XREAL_1,XXREAL_0,SETFAM_1,ORDINAL3,SUBSET_1,VALUED_0,CKB1,CKB3,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB20,CKB21,CKB24,CKB26,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB37,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB66,CKB67,CKB70,CKB71,CKB72,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85;
schemes FUNCT_1,SUBSET_1,NAT_1,XBOOLE_0,RELAT_1,CLASSES1,CKB27,CKB28;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,NUMBERS,RELSET_1,INT_1,XCMPLX_0,VALUED_0,CKB4,CKB7,CKB16,CKB18,CKB19,CKB22,CKB36,CKB38,CKB39,CKB47,CKB48,CKB68,CKB69,CKB73,CKB74,CKB75,CKB76;
constructors WELLORD2,FUNCOP_1,FUNCT_4,XXREAL_0,XREAL_0,NAT_1,CARD_1,RELSET_1,XCMPLX_0,INT_1,VALUED_0,CKB1,CKB2,CKB15,CKB24,CKB25,CKB35,CKB40,CKB45,CKB46,CKB49,CKB65,CKB67,CKB71,CKB72;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for Nat;
reserve x for set;
reserve p for FinSequence;
reserve q for FinSequence;
theorem
Th63: (p <> ( {} ) implies (ex q st (ex x st p = ( q ^ <* x *> ))))
proof
assume p <> ( {} );
then consider n being Nat such that A1: ( len p ) = ( n + 1 ) by NAT_1:6;
reconsider n as (Element of ( NAT )) by ORDINAL1:def 12;
reconsider q = ( p | ( Seg n ) ) as FinSequence by CKB32:1;
take q;
take ( p . ( len p ) );
A2: ( dom q ) = ( ( dom p ) /\ ( Seg n ) ) by RELAT_1:61
.= ( ( Seg ( len p ) ) /\ ( Seg n ) ) by CKB24:def 1;
n <= ( len p ) by A1,NAT_1:11;
then ( Seg n ) c= ( Seg ( len p ) ) by CKB9:1;
then A3: ( dom q ) = ( Seg n ) by A2,XBOOLE_1:28;
A4: ( dom ( q ^ <* ( p . ( len p ) ) *> ) ) = ( Seg ( len ( q ^ <* ( p . ( len p ) ) *> ) ) ) by CKB24:def 1
.= ( Seg ( ( len q ) + ( len <* ( p . ( len p ) ) *> ) ) ) by CKB51:1
.= ( Seg ( ( len q ) + 1 ) ) by CKB79:1
.= ( Seg ( len p ) ) by A1,A3,CKB24:def 1
.= ( dom p ) by CKB24:def 1;
(for x holds (x in ( dom p ) implies ( p . x ) = ( ( q ^ <* ( p . ( len p ) ) *> ) . x )))
proof
let x;
assume A5: x in ( dom p );
then reconsider k = x as (Element of ( NAT ));
k in ( Seg ( n + 1 ) ) by A1,A5,CKB24:def 1;
then A6: k in ( ( Seg n ) \/ { ( n + 1 ) } ) by CKB13:1;
A7:now
assume A8: k in ( Seg n );
hence ( p . k ) = ( q . k ) by A3,FUNCT_1:47
.= ( ( q ^ <* ( p . ( len p ) ) *> ) . k ) by A3,A8,CKB49:def 1;
end;
now
assume A9: k in { ( n + 1 ) };
1 in ( Seg 1 );
then A10: 1 in ( dom <* ( p . ( len p ) ) *> ) by CKB67:def 1;
thus ( ( q ^ <* ( p . ( len p ) ) *> ) . k ) = ( ( q ^ <* ( p . ( len p ) ) *> ) . ( n + 1 ) ) by A9,TARSKI:def 1
.= ( ( q ^ <* ( p . ( len p ) ) *> ) . ( ( len q ) + 1 ) ) by A3,CKB24:def 1
.= ( <* ( p . ( len p ) ) *> . 1 ) by A10,CKB49:def 1
.= ( p . ( n + 1 ) ) by A1,CKB67:def 1
.= ( p . k ) by A9,TARSKI:def 1;
end;
hence thesis by A6,A7,XBOOLE_0:def 3;
end;
hence ( q ^ <* ( p . ( len p ) ) *> ) = p by A4,FUNCT_1:2;
end;
