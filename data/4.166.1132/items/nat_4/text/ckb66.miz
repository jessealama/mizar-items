environ
vocabularies NUMBERS,XREAL_0,ORDINAL1,CARD_1,XXREAL_0,RELAT_1,ARYTM_3,NAT_1,NEWTON,INT_1,SUBSET_1,ARYTM_1,REALSET1,ABIAN,FINSEQ_1,FINSEQ_2,ORDINAL4,CARD_3,FUNCT_1,INT_2,NAT_3,XBOOLE_0,PRE_POLY,POWER,PEPIN,SQUARE_1,ZFMISC_1,TARSKI,BINOP_2,FINSET_1,MEMBERED,REAL_1,COMPLEX1,PREPOWER;
notations SUBSET_1,XXREAL_0,PREPOWER,TARSKI,XBOOLE_0,ORDINAL1,CARD_1,NUMBERS,XREAL_0,INT_1,ABIAN,SQUARE_1,NEWTON,FINSET_1,PEPIN,NAT_3,RELAT_1,FUNCT_1,FINSEQ_1,RVSUM_1,WSIERP_1,TREES_4,BINOP_2,XXREAL_2,POWER,MEMBERED,INT_2,FINSEQ_2,ZFMISC_1,RECDEF_1,PRE_POLY,REAL_1,NAT_1,NAT_D,CKB59;
definitions TARSKI,MEMBERED,RVSUM_1,FINSEQ_2,NEWTON,SQUARE_1,CKB59;
theorems TARSKI,NAT_1,NAT_2,INT_1,FINSEQ_1,CARD_1,XBOOLE_1,CARD_2,FINSET_1,SQUARE_1,EULER_1,EULER_2,PREPOWER,POWER,ABSVALUE,NEWTON,XCMPLX_1,ORDINAL1,XREAL_1,PEPIN,NAT_3,XBOOLE_0,INT_2,ABIAN,FINSEQ_3,RVSUM_1,FUNCT_1,FINSEQ_2,ZFMISC_1,FUNCT_2,FUNCOP_1,PROB_3,INTEGRA5,COMPTRIG,XXREAL_0,NAT_D,VALUED_1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
schemes NAT_1,FINSEQ_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,FINSEQ_2,RVSUM_1,NEWTON,SEQM_3,NAT_3,VALUED_0,VALUED_1,XXREAL_2,CARD_1,PRE_POLY;
constructors REAL_1,NAT_D,PREPOWER,POWER,WSIERP_1,ABIAN,PEPIN,POLYNOM2,NAT_3,SEQ_1,RECDEF_1,BINOP_2,XXREAL_2,RELSET_1,CKB59;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
scheme scheme1 { P[set,set,set] } : (for p being Prime holds (for n being (Element of ( NAT )) holds (for m being non empty (Element of ( NAT )) holds (for X being set holds (X = { ( p9 |^ ( p9 |-count m ) ) where p9 is  prime (Element of ( NAT )): P[ n,m,p9 ] } implies ( Product ( Sgm X ) ) > ( 0 ))))))
proof
let p being Prime;
let n being (Element of ( NAT ));
let m being non empty (Element of ( NAT ));
let X being set;
set f = ( Sgm X );
assume A1: X = { ( p9 |^ ( p9 |-count m ) ) where p9 is  prime (Element of ( NAT )): P[ n,m,p9 ] };
A2: (for k being (Element of ( NAT )) holds (k in ( dom f ) implies ( f . k ) > ( 0 )))
proof
set XX = ( Seg m );
let k being (Element of ( NAT ));
now
let x being set;
assume x in X;
then (ex y9 being  prime (Element of ( NAT )) st (( y9 |^ ( y9 |-count m ) ) = x & P[ n,m,y9 ])) by A1;
then (ex b being (Element of ( NAT )) st ((b = x & 1 <= b) & b <= m)) by CKB17:1;
hence x in XX by FINSEQ_1:1;
end;
then X c= ( Seg m ) by TARSKI:def 3;
then A3: ( rng f ) = { ( p9 |^ ( p9 |-count m ) ) where p9 is  prime (Element of ( NAT )): P[ n,m,p9 ] } by A1,FINSEQ_1:def 13;
assume k in ( dom f );
then ( f . k ) in { ( p9 |^ ( p9 |-count m ) ) where p9 is  prime (Element of ( NAT )): P[ n,m,p9 ] } by A3,FUNCT_1:3;
then (ex y9 being  prime (Element of ( NAT )) st (( y9 |^ ( y9 |-count m ) ) = ( f . k ) & P[ n,m,y9 ]));
hence thesis;
end;
( rng f ) c= ( REAL );
then f is (FinSequence of ( REAL )) by FINSEQ_1:def 4;
hence thesis by A2,CKB49:1;
end;
