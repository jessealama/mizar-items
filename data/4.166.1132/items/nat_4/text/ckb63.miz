environ
vocabularies NUMBERS,XREAL_0,ORDINAL1,CARD_1,XXREAL_0,RELAT_1,ARYTM_3,NAT_1,NEWTON,INT_1,SUBSET_1,ARYTM_1,REALSET1,ABIAN,FINSEQ_1,FINSEQ_2,ORDINAL4,CARD_3,FUNCT_1,INT_2,NAT_3,XBOOLE_0,PRE_POLY,POWER,PEPIN,SQUARE_1,ZFMISC_1,TARSKI,BINOP_2,FINSET_1,MEMBERED,REAL_1,COMPLEX1,PREPOWER;
notations SUBSET_1,XXREAL_0,PREPOWER,TARSKI,XBOOLE_0,ORDINAL1,CARD_1,NUMBERS,XREAL_0,INT_1,ABIAN,SQUARE_1,NEWTON,FINSET_1,PEPIN,NAT_3,RELAT_1,FUNCT_1,FINSEQ_1,RVSUM_1,WSIERP_1,TREES_4,BINOP_2,XXREAL_2,POWER,MEMBERED,INT_2,FINSEQ_2,ZFMISC_1,RECDEF_1,PRE_POLY,REAL_1,NAT_1,NAT_D,CKB59;
definitions TARSKI,MEMBERED,RVSUM_1,FINSEQ_2,NEWTON,SQUARE_1,CKB59;
theorems TARSKI,NAT_1,NAT_2,INT_1,FINSEQ_1,CARD_1,XBOOLE_1,CARD_2,FINSET_1,SQUARE_1,EULER_1,EULER_2,PREPOWER,POWER,ABSVALUE,NEWTON,XCMPLX_1,ORDINAL1,XREAL_1,PEPIN,NAT_3,XBOOLE_0,INT_2,ABIAN,FINSEQ_3,RVSUM_1,FUNCT_1,FINSEQ_2,ZFMISC_1,FUNCT_2,FUNCOP_1,PROB_3,INTEGRA5,COMPTRIG,XXREAL_0,NAT_D,VALUED_1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62;
schemes NAT_1,FINSEQ_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,FINSEQ_2,RVSUM_1,NEWTON,SEQM_3,NAT_3,VALUED_0,VALUED_1,XXREAL_2,CARD_1,PRE_POLY;
constructors REAL_1,NAT_D,PREPOWER,POWER,WSIERP_1,ABIAN,PEPIN,POLYNOM2,NAT_3,SEQ_1,RECDEF_1,BINOP_2,XXREAL_2,RELSET_1,CKB59;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Th53: (for f being (FinSequence of ( NAT )) holds (for p being Prime holds (( Product f ) <> ( 0 ) implies ( p |-count ( Product f ) ) = ( Sum ( p |-count f ) ))))
proof
let f being (FinSequence of ( NAT ));
defpred P[ Nat ]
 means
(for f being (FinSequence of ( NAT )) holds (for p being Prime holds (($1 = ( len f ) & ( Product f ) <> ( 0 )) implies ( p |-count ( Product f ) ) = ( Sum ( p |-count f ) ))));
let p being Prime;
assume A1: ( Product f ) <> ( 0 );
A2: (ex n being (Element of ( NAT )) st n = ( len f ));
A3: (for n being (Element of ( NAT )) holds (P[ n ] implies P[ ( n + 1 ) ]))
proof
let n being (Element of ( NAT ));
assume A4: P[ n ];
(for f being (FinSequence of ( NAT )) holds (for p being Prime holds ((( n + 1 ) = ( len f ) & ( Product f ) <> ( 0 )) implies ( p |-count ( Product f ) ) = ( Sum ( p |-count f ) ))))
proof
let f being (FinSequence of ( NAT ));
let p being Prime;
assume that
A5: ( n + 1 ) = ( len f )
and
A6: ( Product f ) <> ( 0 );
consider g being (FinSequence of ( NAT )),d being (Element of ( NAT )) such that A7: f = ( g ^ <* d *> ) by A5,FINSEQ_2:19;
( len f ) = ( ( len g ) + ( len <* d *> ) ) by A7,FINSEQ_1:22;
then A8: ( n + 1 ) = ( ( len g ) + 1 ) by A5,FINSEQ_1:39;
A9: ( ( Product g ) * d ) <> ( 0 ) by A6,A7,RVSUM_1:96;
then A10: ( Product g ) <> ( 0 );
A11: d <> ( 0 ) by A9;
( p |-count ( Product f ) ) = ( p |-count ( ( Product g ) * d ) ) by A7,RVSUM_1:96
.= ( ( p |-count ( Product g ) ) + ( p |-count d ) ) by A10,A11,NAT_3:28
.= ( ( Sum ( p |-count g ) ) + ( p |-count d ) ) by A4,A10,A8
.= ( Sum ( ( p |-count g ) ^ <* ( p |-count d ) *> ) ) by RVSUM_1:74
.= ( Sum ( ( p |-count g ) ^ ( p |-count <* d *> ) ) ) by A11,CKB62:1
.= ( Sum ( p |-count ( g ^ <* d *> ) ) ) by CKB61:1;
hence thesis by A7;
end;
hence thesis;
end;
A12: P[ ( 0 ) ]
proof
let f being (FinSequence of ( NAT ));
let p being Prime;
assume that
A13: ( 0 ) = ( len f )
and
( Product f ) <> ( 0 );
A14: p <> 1 by INT_2:def 4;
A15: f = ( {} ) by A13;
then ( Sum ( p |-count f ) ) = ( 0 ) by CKB60:1,RVSUM_1:72;
hence thesis by A15,A14,NAT_3:21,RVSUM_1:94;
end;
(for n being (Element of ( NAT )) holds P[ n ]) from NAT_1:sch 1(A12,A3);
hence thesis by A1,A2;
end;
