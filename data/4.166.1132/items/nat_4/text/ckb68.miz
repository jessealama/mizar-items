environ
vocabularies NUMBERS,XREAL_0,ORDINAL1,CARD_1,XXREAL_0,RELAT_1,ARYTM_3,NAT_1,NEWTON,INT_1,SUBSET_1,ARYTM_1,REALSET1,ABIAN,FINSEQ_1,FINSEQ_2,ORDINAL4,CARD_3,FUNCT_1,INT_2,NAT_3,XBOOLE_0,PRE_POLY,POWER,PEPIN,SQUARE_1,ZFMISC_1,TARSKI,BINOP_2,FINSET_1,MEMBERED,REAL_1,COMPLEX1,PREPOWER;
notations SUBSET_1,XXREAL_0,PREPOWER,TARSKI,XBOOLE_0,ORDINAL1,CARD_1,NUMBERS,XREAL_0,INT_1,ABIAN,SQUARE_1,NEWTON,FINSET_1,PEPIN,NAT_3,RELAT_1,FUNCT_1,FINSEQ_1,RVSUM_1,WSIERP_1,TREES_4,BINOP_2,XXREAL_2,POWER,MEMBERED,INT_2,FINSEQ_2,ZFMISC_1,RECDEF_1,PRE_POLY,REAL_1,NAT_1,NAT_D,CKB59;
definitions TARSKI,MEMBERED,RVSUM_1,FINSEQ_2,NEWTON,SQUARE_1,CKB59;
theorems TARSKI,NAT_1,NAT_2,INT_1,FINSEQ_1,CARD_1,XBOOLE_1,CARD_2,FINSET_1,SQUARE_1,EULER_1,EULER_2,PREPOWER,POWER,ABSVALUE,NEWTON,XCMPLX_1,ORDINAL1,XREAL_1,PEPIN,NAT_3,XBOOLE_0,INT_2,ABIAN,FINSEQ_3,RVSUM_1,FUNCT_1,FINSEQ_2,ZFMISC_1,FUNCT_2,FUNCOP_1,PROB_3,INTEGRA5,COMPTRIG,XXREAL_0,NAT_D,VALUED_1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
schemes NAT_1,FINSEQ_1,CKB66,CKB67;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,FINSEQ_2,RVSUM_1,NEWTON,SEQM_3,NAT_3,VALUED_0,VALUED_1,XXREAL_2,CARD_1,PRE_POLY;
constructors REAL_1,NAT_D,PREPOWER,POWER,WSIERP_1,ABIAN,PEPIN,POLYNOM2,NAT_3,SEQ_1,RECDEF_1,BINOP_2,XXREAL_2,RELSET_1,CKB59;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
scheme scheme3 { P[set,set,set] } : (for p being Prime holds (for n being (Element of ( NAT )) holds (for m being non  empty (Element of ( NAT )) holds (for X being set holds ((X = { ( p9 |^ ( p9 |-count m ) ) where p9 is  prime (Element of ( NAT )): P[ n,m,p9 ] } & ( p |^ ( p |-count m ) ) in X) implies ( p |-count ( Product ( Sgm X ) ) ) = ( p |-count m ))))))
proof
let p being Prime;
let n being (Element of ( NAT ));
let m being non  empty (Element of ( NAT ));
let X being set;
set XX = ( Seg m );
defpred P1[ (Element of ( NAT )),(Element of ( NAT )),Prime ]
 means
(P[ $1,$2,$3 ] & ( $3 |^ ( $3 |-count $2 ) ) <= ( p |^ ( p |-count $2 ) ));
defpred P2[ (Element of ( NAT )),(Element of ( NAT )),Prime ]
 means
(P[ $1,$2,$3 ] & ( $3 |^ ( $3 |-count $2 ) ) > ( p |^ ( p |-count $2 ) ));
set X1 = { ( p9 |^ ( p9 |-count m ) ) where p9 is  prime (Element of ( NAT )): P1[ n,m,p9 ] };
set X2 = { ( p9 |^ ( p9 |-count m ) ) where p9 is  prime (Element of ( NAT )): P2[ n,m,p9 ] };
A1:now
let k1 being (Element of ( NAT ));
let k2 being (Element of ( NAT ));
assume (k1 in X1 & k2 in X2);
then ((ex p1 being  prime (Element of ( NAT )) st (( p1 |^ ( p1 |-count m ) ) = k1 & P1[ n,m,p1 ])) & (ex p2 being  prime (Element of ( NAT )) st (( p2 |^ ( p2 |-count m ) ) = k2 & P2[ n,m,p2 ])));
hence k1 < k2 by XXREAL_0:2;
end;
A2:now
assume ( p |^ ( p |-count m ) ) in X2;
then (ex p9 being  prime (Element of ( NAT )) st (( p9 |^ ( p9 |-count m ) ) = ( p |^ ( p |-count m ) ) & P2[ n,m,p9 ]));
hence contradiction;
end;
set m1 = ( p |^ ( p |-count m ) );
defpred P12[ (Element of ( NAT )),(Element of ( NAT )),Prime ]
 means
(P[ $1,$2,$3 ] & ( $3 |^ ( $3 |-count $2 ) ) = ( p |^ ( p |-count $2 ) ));
defpred P11[ (Element of ( NAT )),(Element of ( NAT )),Prime ]
 means
(P[ $1,$2,$3 ] & ( $3 |^ ( $3 |-count $2 ) ) < ( p |^ ( p |-count $2 ) ));
set X11 = { ( p9 |^ ( p9 |-count m ) ) where p9 is  prime (Element of ( NAT )): P11[ n,m,p9 ] };
set X12 = { ( p9 |^ ( p9 |-count m ) ) where p9 is  prime (Element of ( NAT )): P12[ n,m,p9 ] };
A3:now
let k1 being (Element of ( NAT ));
let k2 being (Element of ( NAT ));
assume (k1 in X11 & k2 in X12);
then ((ex p1 being  prime (Element of ( NAT )) st (( p1 |^ ( p1 |-count m ) ) = k1 & P11[ n,m,p1 ])) & (ex p2 being  prime (Element of ( NAT )) st (( p2 |^ ( p2 |-count m ) ) = k2 & P12[ n,m,p2 ])));
hence k1 < k2;
end;
now
let x being set;
assume x in X1;
then consider p9 being  prime (Element of ( NAT )) such that A4: (( p9 |^ ( p9 |-count m ) ) = x & P1[ n,m,p9 ]);
((( p9 |^ ( p9 |-count m ) ) = x & P11[ n,m,p9 ]) or (( p9 |^ ( p9 |-count m ) ) = x & P12[ n,m,p9 ])) by A4,XXREAL_0:1;
then (x in X11 or x in X12);
hence x in ( X11 \/ X12 ) by XBOOLE_0:def 3;
end;
then A5: X1 c= ( X11 \/ X12 ) by TARSKI:def 3;
assume A6: X = { ( p9 |^ ( p9 |-count m ) ) where p9 is  prime (Element of ( NAT )): P[ n,m,p9 ] };
now
let x being set;
assume x in X;
then (ex y9 being  prime (Element of ( NAT )) st (( y9 |^ ( y9 |-count m ) ) = x & P[ n,m,y9 ])) by A6;
then (ex b being (Element of ( NAT )) st ((b = x & 1 <= b) & b <= m)) by CKB17:1;
hence x in XX by FINSEQ_1:1;
end;
then A7: X c= ( Seg m ) by TARSKI:def 3;
now
let x being set;
assume x in X12;
then (ex p9 being  prime (Element of ( NAT )) st (( p9 |^ ( p9 |-count m ) ) = x & P12[ n,m,p9 ]));
hence x in { ( p |^ ( p |-count m ) ) } by TARSKI:def 1;
end;
then A8: X12 c= { ( p |^ ( p |-count m ) ) } by TARSKI:def 3;
(for p being Prime holds (for n being (Element of ( NAT )) holds (for m being non  empty (Element of ( NAT )) holds (for X being set holds (X = { ( p9 |^ ( p9 |-count m ) ) where p9 is  prime (Element of ( NAT )): P[ n,m,p9 ] } implies ( Product ( Sgm X ) ) > ( 0 )))))) from CKB66:sch 1;
then A9: ( Product ( Sgm X ) ) <> ( 0 ) by A6;
A10: 1 < p by INT_2:def 4;
A11: ( p |-count ( p |^ ( p |-count m ) ) ) = ( ( p |-count m ) * ( p |-count p ) ) by NAT_3:32
.= ( ( p |-count m ) * 1 ) by A10,NAT_3:22;
now
let x being set;
assume x in X1;
then (ex p9 being  prime (Element of ( NAT )) st (( p9 |^ ( p9 |-count m ) ) = x & P1[ n,m,p9 ]));
hence x in X by A6;
end;
then A12: X1 c= X by TARSKI:def 3;
then A13: X1 c= ( Seg m ) by A7,XBOOLE_1:1;
now
let x being set;
assume x in X12;
then (ex p9 being  prime (Element of ( NAT )) st (( p9 |^ ( p9 |-count m ) ) = x & P12[ n,m,p9 ]));
hence x in X1;
end;
then A14: X12 c= X1 by TARSKI:def 3;
then A15: X12 c= ( Seg m ) by A13,XBOOLE_1:1;
now
let x being set;
assume x in X11;
then (ex p9 being  prime (Element of ( NAT )) st (( p9 |^ ( p9 |-count m ) ) = x & P11[ n,m,p9 ]));
hence x in X1;
end;
then A16: X11 c= X1 by TARSKI:def 3;
then A17: X11 c= ( Seg m ) by A13,XBOOLE_1:1;
( X11 \/ X12 ) c= ( X1 \/ X1 ) by A16,A14,XBOOLE_1:13;
then A18: ( Sum ( p |-count ( Sgm X1 ) ) ) = ( Sum ( p |-count ( Sgm ( X11 \/ X12 ) ) ) ) by A5,XBOOLE_0:def 10
.= ( Sum ( p |-count ( ( Sgm X11 ) ^ ( Sgm X12 ) ) ) ) by A17,A15,A3,FINSEQ_3:42
.= ( Sum ( ( p |-count ( Sgm X11 ) ) ^ ( p |-count ( Sgm X12 ) ) ) ) by CKB61:1
.= ( ( Sum ( p |-count ( Sgm X11 ) ) ) + ( Sum ( p |-count ( Sgm X12 ) ) ) ) by RVSUM_1:75;
(for p being Prime holds (for n being (Element of ( NAT )) holds (for m being non  empty (Element of ( NAT )) holds (for X2 being set holds ((X2 = { ( p9 |^ ( p9 |-count m ) ) where p9 is  prime (Element of ( NAT )): P2[ n,m,p9 ] } & (not ( p |^ ( p |-count m ) ) in X2)) implies ( p |-count ( Product ( Sgm X2 ) ) ) = ( 0 )))))) from CKB67:sch 1;
then A19: ( p |-count ( Product ( Sgm X2 ) ) ) = ( 0 ) by A2;
(for p being Prime holds (for n being (Element of ( NAT )) holds (for m being non  empty (Element of ( NAT )) holds (for X2 being set holds (X2 = { ( p9 |^ ( p9 |-count m ) ) where p9 is  prime (Element of ( NAT )): P2[ n,m,p9 ] } implies ( Product ( Sgm X2 ) ) > ( 0 )))))) from CKB66:sch 1;
then A20: ( Product ( Sgm X2 ) ) <> ( 0 );
now
let x being set;
assume x in X;
then consider p9 being  prime (Element of ( NAT )) such that A21: (( p9 |^ ( p9 |-count m ) ) = x & P[ n,m,p9 ]) by A6;
((( p9 |^ ( p9 |-count m ) ) = x & P1[ n,m,p9 ]) or (( p9 |^ ( p9 |-count m ) ) = x & P2[ n,m,p9 ])) by A21;
then (x in X1 or x in X2);
hence x in ( X1 \/ X2 ) by XBOOLE_0:def 3;
end;
then A22: X c= ( X1 \/ X2 ) by TARSKI:def 3;
now
let x being set;
assume x in X2;
then (ex p9 being  prime (Element of ( NAT )) st (( p9 |^ ( p9 |-count m ) ) = x & P2[ n,m,p9 ]));
hence x in X by A6;
end;
then A23: X2 c= X by TARSKI:def 3;
then A24: X2 c= ( Seg m ) by A7,XBOOLE_1:1;
reconsider m1 as non  empty (Element of ( NAT )) by ORDINAL1:def 12;
A25:now
assume ( p |^ ( p |-count m ) ) in X11;
then (ex p9 being  prime (Element of ( NAT )) st (( p9 |^ ( p9 |-count m ) ) = ( p |^ ( p |-count m ) ) & P11[ n,m,p9 ]));
hence contradiction;
end;
assume ( p |^ ( p |-count m ) ) in X;
then ( p |^ ( p |-count m ) ) in X1 by A22,A2,XBOOLE_0:def 3;
then ( p |^ ( p |-count m ) ) in X12 by A5,A25,XBOOLE_0:def 3;
then (for x being set holds (x in { ( p |^ ( p |-count m ) ) } implies x in X12)) by TARSKI:def 1;
then A26: { ( p |^ ( p |-count m ) ) } c= X12 by TARSKI:def 3;
(for p being Prime holds (for n being (Element of ( NAT )) holds (for m being non  empty (Element of ( NAT )) holds (for X11 being set holds ((X11 = { ( p9 |^ ( p9 |-count m ) ) where p9 is  prime (Element of ( NAT )): P11[ n,m,p9 ] } & (not ( p |^ ( p |-count m ) ) in X11)) implies ( p |-count ( Product ( Sgm X11 ) ) ) = ( 0 )))))) from CKB67:sch 1;
then A27: ( p |-count ( Product ( Sgm X11 ) ) ) = ( 0 ) by A25;
(for p being Prime holds (for n being (Element of ( NAT )) holds (for m being non  empty (Element of ( NAT )) holds (for X11 being set holds (X11 = { ( p9 |^ ( p9 |-count m ) ) where p9 is  prime (Element of ( NAT )): P11[ n,m,p9 ] } implies ( Product ( Sgm X11 ) ) > ( 0 )))))) from CKB66:sch 1;
then A28: ( Product ( Sgm X11 ) ) <> ( 0 );
( X1 \/ X2 ) c= ( X \/ X ) by A12,A23,XBOOLE_1:13;
then ( Sum ( p |-count ( Sgm X ) ) ) = ( Sum ( p |-count ( Sgm ( X1 \/ X2 ) ) ) ) by A22,XBOOLE_0:def 10
.= ( Sum ( p |-count ( ( Sgm X1 ) ^ ( Sgm X2 ) ) ) ) by A13,A24,A1,FINSEQ_3:42
.= ( Sum ( ( p |-count ( Sgm X1 ) ) ^ ( p |-count ( Sgm X2 ) ) ) ) by CKB61:1
.= ( ( Sum ( p |-count ( Sgm X1 ) ) ) + ( Sum ( p |-count ( Sgm X2 ) ) ) ) by RVSUM_1:75;
then ( p |-count ( Product ( Sgm X ) ) ) = ( ( Sum ( p |-count ( Sgm X1 ) ) ) + ( Sum ( p |-count ( Sgm X2 ) ) ) ) by A9,CKB63:1
.= ( ( Sum ( p |-count ( Sgm X1 ) ) ) + ( 0 ) ) by A20,A19,CKB63:1
.= ( ( 0 ) + ( Sum ( p |-count ( Sgm X12 ) ) ) ) by A18,A28,A27,CKB63:1
.= ( Sum ( p |-count ( Sgm { ( p |^ ( p |-count m ) ) } ) ) ) by A26,A8,XBOOLE_0:def 10
.= ( Sum ( p |-count <* m1 *> ) ) by FINSEQ_3:44
.= ( Sum <* ( p |-count m1 ) *> ) by CKB62:1
.= ( p |-count m1 ) by RVSUM_1:73;
hence thesis by A11;
end;
