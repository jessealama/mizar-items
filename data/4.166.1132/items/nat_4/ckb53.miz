environ
vocabularies NUMBERS,XREAL_0,ORDINAL1,CARD_1,XXREAL_0,RELAT_1,ARYTM_3,NAT_1,NEWTON,INT_1,SUBSET_1,ARYTM_1,REALSET1,ABIAN,FINSEQ_1,FINSEQ_2,ORDINAL4,CARD_3,FUNCT_1,INT_2,NAT_3,XBOOLE_0,PRE_POLY,POWER,PEPIN,SQUARE_1,ZFMISC_1,TARSKI,BINOP_2,FINSET_1,MEMBERED,REAL_1,COMPLEX1,PREPOWER;
notations SUBSET_1,XXREAL_0,PREPOWER,TARSKI,XBOOLE_0,ORDINAL1,CARD_1,NUMBERS,XREAL_0,INT_1,ABIAN,SQUARE_1,NEWTON,FINSET_1,PEPIN,NAT_3,RELAT_1,FUNCT_1,FINSEQ_1,RVSUM_1,WSIERP_1,TREES_4,BINOP_2,XXREAL_2,POWER,MEMBERED,INT_2,FINSEQ_2,ZFMISC_1,RECDEF_1,PRE_POLY,REAL_1,NAT_1,NAT_D;
definitions TARSKI,MEMBERED,RVSUM_1,FINSEQ_2,NEWTON,SQUARE_1;
theorems TARSKI,NAT_1,NAT_2,INT_1,FINSEQ_1,CARD_1,XBOOLE_1,CARD_2,FINSET_1,SQUARE_1,EULER_1,EULER_2,PREPOWER,POWER,ABSVALUE,NEWTON,XCMPLX_1,ORDINAL1,XREAL_1,PEPIN,NAT_3,XBOOLE_0,INT_2,ABIAN,FINSEQ_3,RVSUM_1,FUNCT_1,FINSEQ_2,ZFMISC_1,FUNCT_2,FUNCOP_1,PROB_3,INTEGRA5,COMPTRIG,XXREAL_0,NAT_D,VALUED_1,XXREAL_2,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52;
schemes NAT_1,FINSEQ_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,FINSEQ_2,RVSUM_1,NEWTON,SEQM_3,NAT_3,VALUED_0,VALUED_1,XXREAL_2,CARD_1,PRE_POLY;
constructors REAL_1,NAT_D,PREPOWER,POWER,WSIERP_1,ABIAN,PEPIN,POLYNOM2,NAT_3,SEQ_1,RECDEF_1,BINOP_2,XXREAL_2,RELSET_1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Th46: (for x being Real holds (x >= 2 implies ( Product ( Sgm { p where p is  prime (Element of ( NAT )): p <= x } ) ) <= ( 4 to_power ( x - 1 ) )))
proof
let x being Real;
set A = { p where p is  prime (Element of ( NAT )): p <= x };
A1: A is  finite
proof
(ex m being (Element of ( NAT )) st x < m)
proof
set m = ( ( abs [/ x \] ) + 1 );
take m;
([/ x \] <= ( abs [/ x \] ) & ( abs [/ x \] ) < ( ( abs [/ x \] ) + 1 )) by ABSVALUE:4,NAT_1:13;
then (x <= [/ x \] & [/ x \] < ( ( abs [/ x \] ) + 1 )) by INT_1:def 7,XXREAL_0:2;
hence thesis by XXREAL_0:2;
end;
then consider m being (Element of ( NAT )) such that A2: x < m;
set B = ( SetPrimenumber m );
A c= B
proof
let y being set;
assume y in { p where p is  prime (Element of ( NAT )): p <= x };
then consider y9 being  prime (Element of ( NAT )) such that A3: y9 = y and A4: y9 <= x;
y9 < m by A2,A4,XXREAL_0:2;
hence thesis by A3,NEWTON:def 7;
end;
hence thesis;
end;
A5: A is  real-membered
proof
let y being set;
(y in A implies y is  real)
proof
assume y in { p where p is  prime (Element of ( NAT )): p <= x };
then (ex y9 being  prime (Element of ( NAT )) st (y9 = y & y9 <= x));
hence thesis;
end;
hence thesis;
end;
assume A6: x >= 2;
A is non empty
proof
assume A7: A is  empty;
2 in A by A6,INT_2:28;
hence contradiction by A7;
end;
then reconsider A as  finite non empty  real-membered set by A1,A5;
set q = ( max A );
q in A by XXREAL_2:def 8;
then A8: (ex q9 being  prime (Element of ( NAT )) st (q9 = q & q9 <= x));
then reconsider q as Prime;
(for y being set holds (y in { p where p is  prime (Element of ( NAT )): p <= q } iff y in { p where p is  prime (Element of ( NAT )): p <= x }))
proof
let y being set;
hereby
assume y in { p where p is  prime (Element of ( NAT )): p <= q };
then consider y9 being  prime (Element of ( NAT )) such that A9: y9 = y and A10: y9 <= q;
y9 <= x by A8,A10,XXREAL_0:2;
hence y in { p where p is  prime (Element of ( NAT )): p <= x } by A9;
end;
assume A11: y in { p where p is  prime (Element of ( NAT )): p <= x };
then consider y9 being  prime (Element of ( NAT )) such that A12: y9 = y and y9 <= x;
y9 <= q by A11,A12,XXREAL_2:def 8;
hence thesis by A12;
end;
then A13: { p where p is  prime (Element of ( NAT )): p <= q } = { p where p is  prime (Element of ( NAT )): p <= x } by TARSKI:1;
A14: ( 4 to_power ( q - 1 ) ) <= ( 4 to_power ( x - 1 ) )
proof
per cases  by A8,XXREAL_0:1;
suppose q = x;

hence thesis;
end;
suppose q < x;

then ( q - 1 ) < ( x - 1 ) by XREAL_1:14;
hence thesis by POWER:39;
end;
end;
( Product ( Sgm { p where p is  prime (Element of ( NAT )): p <= x } ) ) <= ( 4 to_power ( x - 1 ) )
proof
set b = ( 4 to_power ( q - 1 ) );
set a = ( Product ( Sgm { p where p is  prime (Element of ( NAT )): p <= q } ) );
set n = ( q -' 1 );
q > 1 by CKB14:1;
then ( q -' 1 ) = ( q - 1 ) by XREAL_1:233;
then q = ( n + 1 );
then a <= b by CKB52:1;
hence thesis by A13,A14,XXREAL_0:2;
end;
hence thesis;
end;
