environ
vocabularies NUMBERS,CARD_1,FUNCT_1,RELAT_1,XBOOLE_0,ARYTM_3,NEWTON,TARSKI,FINSET_1,MCART_1,CARD_3,FINSEQ_1,SUBSET_1,ARYTM_1,XXREAL_0,FUNCT_2,PARTFUN1,INT_2,NAT_1,BINOP_1,BINOP_2,REALSET1,ZFMISC_1,INT_3,SUPINF_2,ALGSTR_0,GROUP_1,MESFUNC1,INT_1,VECTSP_1,STRUCT_0,GROUP_2,GRAPH_1,FINSEQ_2,EC_PF_1,RLVECT_1,LATTICES,EQREL_1,RELAT_2,UNIROOTS,PROB_2,REAL_1,MOD_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELAT_2,RELSET_1,PARTFUN1,MCART_1,FUNCT_2,BINOP_1,DOMAIN_1,FINSET_1,CARD_1,CARD_3,NUMBERS,XCMPLX_0,XXREAL_0,REAL_1,NAT_1,INT_1,NAT_D,REALSET1,FINSEQ_1,FINSEQ_2,EQREL_1,RVSUM_1,NEWTON,WSIERP_1,MOD_2,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,GROUP_2,GR_CY_1,INT_3,UNIROOTS,PROB_2,BINOM,CKB1,CKB13,CKB16,CKB17,CKB48,CKB49,CKB52,CKB61,CKB63,CKB64,CKB67;
definitions STRUCT_0,GROUP_1,INT_3,CARD_1,ALGSTR_0,BINOP_1,FINSEQ_1,REALSET1,TARSKI,FINSEQ_2,VECTSP_1,RLVECT_1,EQREL_1,BINOM,CARD_3,CKB1,CKB16,CKB48,CKB49,CKB52,CKB61,CKB63,CKB64,CKB67;
theorems TARSKI,XBOOLE_0,ZFMISC_1,ORDINAL1,FUNCT_1,FUNCT_2,VECTSP_1,INT_1,RELAT_1,RLVECT_1,GR_CY_1,FUNCT_7,NAT_1,INT_2,INT_3,PEPIN,NAT_D,NUMBERS,CARD_1,GROUP_1,GROUP_2,STRUCT_0,XREAL_1,NEWTON,XXREAL_0,ALGSEQ_1,NAT_3,RVSUM_1,CARD_2,EULER_1,XBOOLE_1,FINSEQ_1,RELSET_1,FUNCOP_1,PARTFUN1,FINSEQ_2,BINOP_1,ALGSTR_0,MCART_1,EQREL_1,UNIROOTS,RELAT_2,GR_CY_3,DIST_1,PROB_2,BINOM,MOD_2,CKB1,CKB2,CKB3,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB15,CKB16,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB46,CKB47,CKB48,CKB49,CKB50,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70;
schemes NAT_1,FUNCT_2,INT_1,FINSEQ_1;
registrations XBOOLE_0,STRUCT_0,XREAL_0,ORDINAL1,NAT_1,INT_1,GROUP_2,FINSET_1,GR_CY_1,ALGSTR_0,VECTSP_1,INT_3,XXREAL_0,NEWTON,SUBSET_1,CARD_1,VALUED_0,EQREL_1,RELSET_1,FINSEQ_2,UNIROOTS,NUMBERS,ALGSTR_1,MOD_2,MEMBERED,CKB4,CKB12,CKB14,CKB18,CKB19,CKB20,CKB45,CKB51;
constructors REAL_1,NAT_D,NAT_3,SEQ_1,REALSET1,GROUP_2,BINOP_1,GR_CY_1,INT_3,WSIERP_1,UPROOTS,BINOP_2,RELSET_1,FUNCT_7,UNIROOTS,PROB_2,GROUP_1,FINSET_1,BINOM,MOD_2,CKB1,CKB13,CKB16,CKB48,CKB49,CKB52,CKB61,CKB63,CKB64,CKB67;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve p for Prime;
reserve a for (Element of ( GF p ));
reserve b for (Element of ( GF p ));
definition
let p being Prime;
let P being (Element of ( ProjCo ( GF p ) ));
let Q being (Element of ( ProjCo ( GF p ) ));
pred P _EQ_ Q
means
:DefEQV: (ex a being (Element of ( GF p )) st (((a <> ( 0. ( GF p ) ) & ( P `1 ) = ( a * ( Q `1 ) )) & ( P `2 ) = ( a * ( Q `2 ) )) & ( P `3 ) = ( a * ( Q `3 ) )))
;reflexivity
proof
(for R being (Element of ( ProjCo ( GF p ) )) holds (ex a being (Element of ( GF p )) st (((a <> ( 0. ( GF p ) ) & ( R `1 ) = ( a * ( R `1 ) )) & ( R `2 ) = ( a * ( R `2 ) )) & ( R `3 ) = ( a * ( R `3 ) ))))
proof
let R being (Element of ( ProjCo ( GF p ) ));
reconsider a = ( 1. ( GF p ) ) as (Element of ( GF p ));
((( R `1 ) = ( a * ( R `1 ) ) & ( R `2 ) = ( a * ( R `2 ) )) & ( R `3 ) = ( a * ( R `3 ) )) by VECTSP_1:def 6;
hence thesis;
end;
hence thesis;
end;
symmetry
proof
thus (for P,Q being (Element of ( ProjCo ( GF p ) )) holds ((ex a being (Element of ( GF p )) st (((a <> ( 0. ( GF p ) ) & ( P `1 ) = ( a * ( Q `1 ) )) & ( P `2 ) = ( a * ( Q `2 ) )) & ( P `3 ) = ( a * ( Q `3 ) ))) implies (ex b being (Element of ( GF p )) st (((b <> ( 0. ( GF p ) ) & ( Q `1 ) = ( b * ( P `1 ) )) & ( Q `2 ) = ( b * ( P `2 ) )) & ( Q `3 ) = ( b * ( P `3 ) )))))
proof
let P being (Element of ( ProjCo ( GF p ) ));
let Q being (Element of ( ProjCo ( GF p ) ));
given a being (Element of ( GF p )) such that
P1: (((a <> ( 0. ( GF p ) ) & ( P `1 ) = ( a * ( Q `1 ) )) & ( P `2 ) = ( a * ( Q `2 ) )) & ( P `3 ) = ( a * ( Q `3 ) ));

take b = ( a " );
P2: b <> ( 0. ( GF p ) )
proof
assume b = ( 0. ( GF p ) );
then ( b * a ) = ( 0. ( GF p ) ) by VECTSP_1:7;
then ( 1. ( GF p ) ) = ( 0. ( GF p ) ) by P1,VECTSP_1:def 10;
hence contradiction;
end;
P3: ( Q `1 ) = ( ( 1. ( GF p ) ) * ( Q `1 ) ) by VECTSP_1:def 6
.= ( ( b * a ) * ( Q `1 ) ) by P1,VECTSP_1:def 10
.= ( b * ( P `1 ) ) by P1,GROUP_1:def 3;
P4: ( Q `2 ) = ( ( 1. ( GF p ) ) * ( Q `2 ) ) by VECTSP_1:def 6
.= ( ( b * a ) * ( Q `2 ) ) by P1,VECTSP_1:def 10
.= ( b * ( P `2 ) ) by P1,GROUP_1:def 3;
( Q `3 ) = ( ( 1. ( GF p ) ) * ( Q `3 ) ) by VECTSP_1:def 6
.= ( ( b * a ) * ( Q `3 ) ) by P1,VECTSP_1:def 10
.= ( b * ( P `3 ) ) by P1,GROUP_1:def 3;
hence thesis by P2,P3,P4;
end;

end;
end;
