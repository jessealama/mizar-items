environ
vocabularies NUMBERS,CARD_1,FUNCT_1,RELAT_1,XBOOLE_0,ARYTM_3,NEWTON,TARSKI,FINSET_1,MCART_1,CARD_3,FINSEQ_1,SUBSET_1,ARYTM_1,XXREAL_0,FUNCT_2,PARTFUN1,INT_2,NAT_1,BINOP_1,BINOP_2,REALSET1,ZFMISC_1,INT_3,SUPINF_2,ALGSTR_0,GROUP_1,MESFUNC1,INT_1,VECTSP_1,STRUCT_0,GROUP_2,GRAPH_1,FINSEQ_2,EC_PF_1,RLVECT_1,LATTICES,EQREL_1,RELAT_2,UNIROOTS,PROB_2,REAL_1,MOD_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELAT_2,RELSET_1,PARTFUN1,MCART_1,FUNCT_2,BINOP_1,DOMAIN_1,FINSET_1,CARD_1,CARD_3,NUMBERS,XCMPLX_0,XXREAL_0,REAL_1,NAT_1,INT_1,NAT_D,REALSET1,FINSEQ_1,FINSEQ_2,EQREL_1,RVSUM_1,NEWTON,WSIERP_1,MOD_2,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,GROUP_2,GR_CY_1,INT_3,UNIROOTS,PROB_2,BINOM,CKB1,CKB13,CKB16,CKB17,CKB48,CKB49,CKB52,CKB61,CKB63,CKB64,CKB67,CKB71,CKB74,CKB77;
definitions STRUCT_0,GROUP_1,INT_3,CARD_1,ALGSTR_0,BINOP_1,FINSEQ_1,REALSET1,TARSKI,FINSEQ_2,VECTSP_1,RLVECT_1,EQREL_1,BINOM,CARD_3,CKB1,CKB16,CKB48,CKB49,CKB52,CKB61,CKB63,CKB64,CKB67,CKB71,CKB74,CKB77;
theorems TARSKI,XBOOLE_0,ZFMISC_1,ORDINAL1,FUNCT_1,FUNCT_2,VECTSP_1,INT_1,RELAT_1,RLVECT_1,GR_CY_1,FUNCT_7,NAT_1,INT_2,INT_3,PEPIN,NAT_D,NUMBERS,CARD_1,GROUP_1,GROUP_2,STRUCT_0,XREAL_1,NEWTON,XXREAL_0,ALGSEQ_1,NAT_3,RVSUM_1,CARD_2,EULER_1,XBOOLE_1,FINSEQ_1,RELSET_1,FUNCOP_1,PARTFUN1,FINSEQ_2,BINOP_1,ALGSTR_0,MCART_1,EQREL_1,UNIROOTS,RELAT_2,GR_CY_3,DIST_1,PROB_2,BINOM,MOD_2,CKB1,CKB2,CKB3,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB15,CKB16,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB46,CKB47,CKB48,CKB49,CKB50,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91;
schemes NAT_1,FUNCT_2,INT_1,FINSEQ_1;
registrations XBOOLE_0,STRUCT_0,XREAL_0,ORDINAL1,NAT_1,INT_1,GROUP_2,FINSET_1,GR_CY_1,ALGSTR_0,VECTSP_1,INT_3,XXREAL_0,NEWTON,SUBSET_1,CARD_1,VALUED_0,EQREL_1,RELSET_1,FINSEQ_2,UNIROOTS,NUMBERS,ALGSTR_1,MOD_2,MEMBERED,CKB4,CKB12,CKB14,CKB18,CKB19,CKB20,CKB45,CKB51,CKB76;
constructors REAL_1,NAT_D,NAT_3,SEQ_1,REALSET1,GROUP_2,BINOP_1,GR_CY_1,INT_3,WSIERP_1,UPROOTS,BINOP_2,RELSET_1,FUNCT_7,UNIROOTS,PROB_2,GROUP_1,FINSET_1,BINOM,MOD_2,CKB1,CKB13,CKB16,CKB48,CKB49,CKB52,CKB61,CKB63,CKB64,CKB67,CKB71,CKB74,CKB77;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve n for Nat;
reserve p for Prime;
reserve a for (Element of ( GF p ));
reserve b for (Element of ( GF p ));
theorem
LmECPFCardC: (for p being Prime holds (for a,b,c,d being (Element of ( GF p )) holds ((p > 3 & ( Disc (a,b,p) ) <> ( 0. ( GF p ) )) implies (ex S being Function st ((((( dom S ) = ( Seg p ) & (for n being Nat holds (n in ( dom S ) implies ( S . n ) = { ( Class (( R_EllCur (a,b,p) ),[ ( n - 1 ),Y,1 ]) ) where Y is (Element of ( GF p )): [ ( n - 1 ),Y,1 ] in ( EC_SetProjCo (a,b,p) ) }))) & S is  disjoint_valued) & (for n being Nat holds (n in ( dom S ) implies ( S . n ) is  finite))) & ( Union S ) = { ( Class (( R_EllCur (a,b,p) ),P) ) where P is (Element of ( ProjCo ( GF p ) )): (P in ( EC_SetProjCo (a,b,p) ) & (ex X,Y being (Element of ( GF p )) st P = [ X,Y,1 ])) })))))
proof
let p being Prime;
let a being (Element of ( GF p ));
let b being (Element of ( GF p ));
let c being (Element of ( GF p ));
let d being (Element of ( GF p ));
assume AS: (p > 3 & ( Disc (a,b,p) ) <> ( 0. ( GF p ) ));
deffunc F(Nat) = { ( Class (( R_EllCur (a,b,p) ),[ ( $1 - 1 ),Y,1 ]) ) where Y is (Element of ( GF p )): [ ( $1 - 1 ),Y,1 ] in ( EC_SetProjCo (a,b,p) ) };
consider S being FinSequence such that P2: (( len S ) = p & (for i being Nat holds (i in ( dom S ) implies ( S . i ) = F(i)))) from FINSEQ_1:sch 2;
take S;
thus P20: ( dom S ) = ( Seg p ) by P2,FINSEQ_1:def 3;
thus (for n being Nat holds (n in ( dom S ) implies ( S . n ) = { ( Class (( R_EllCur (a,b,p) ),[ ( n - 1 ),Y,1 ]) ) where Y is (Element of ( GF p )): [ ( n - 1 ),Y,1 ] in ( EC_SetProjCo (a,b,p) ) })) by P2;
now
let x being set;
let y being set;
assume A3: x <> y;
per cases ;
suppose A4: (x in ( dom S ) & y in ( dom S ));

then reconsider n = x,m = y as Nat;
(x in ( Seg p ) & y in ( Seg p )) by A4,P2,FINSEQ_1:def 3;
then V1: (( n - 1 ) is (Element of ( GF p )) & ( m - 1 ) is (Element of ( GF p ))) by CKB91:1;
A40: ( S . n ) = { ( Class (( R_EllCur (a,b,p) ),[ ( n - 1 ),Y,1 ]) ) where Y is (Element of ( GF p )): [ ( n - 1 ),Y,1 ] in ( EC_SetProjCo (a,b,p) ) } by A4,P2;
A41: ( S . m ) = { ( Class (( R_EllCur (a,b,p) ),[ ( m - 1 ),Y,1 ]) ) where Y is (Element of ( GF p )): [ ( m - 1 ),Y,1 ] in ( EC_SetProjCo (a,b,p) ) } by A4,P2;
thus ( S . x ) misses ( S . y )
proof
assume ( S . x ) meets ( S . y );
then consider z being set such that A50: (z in ( S . x ) & z in ( S . y )) by XBOOLE_0:3;
consider Yx being (Element of ( GF p )) such that A52: (z = ( Class (( R_EllCur (a,b,p) ),[ ( n - 1 ),Yx,1 ]) ) & [ ( n - 1 ),Yx,1 ] in ( EC_SetProjCo (a,b,p) )) by A40,A50;
consider Yy being (Element of ( GF p )) such that A53: (z = ( Class (( R_EllCur (a,b,p) ),[ ( m - 1 ),Yy,1 ]) ) & [ ( m - 1 ),Yy,1 ] in ( EC_SetProjCo (a,b,p) )) by A41,A50;
( n - 1 ) = ( m - 1 ) by CKB83:1,AS,A52,A53,V1;
hence contradiction by A3;
end;

end;
suppose (not (x in ( dom S ) & y in ( dom S )));

then (( S . x ) = ( {} ) or ( S . y ) = ( {} )) by FUNCT_1:def 2;
hence ( S . x ) misses ( S . y ) by XBOOLE_1:65;
end;
end;
hence S is  disjoint_valued by PROB_2:def 2;
thus (for n being Nat holds (n in ( dom S ) implies ( S . n ) is  finite))
proof
let n being Nat;
assume ASN: n in ( dom S );
then Q1: ( S . n ) = { ( Class (( R_EllCur (a,b,p) ),[ ( n - 1 ),Y,1 ]) ) where Y is (Element of ( GF p )): [ ( n - 1 ),Y,1 ] in ( EC_SetProjCo (a,b,p) ) } by P2;
(1 <= n & n <= p) by ASN,P20,FINSEQ_1:1;
then X2: (( 1 - 1 ) <= ( n - 1 ) & ( n - 1 ) <= ( p - 1 )) by XREAL_1:9;
then X3: ( n - 1 ) is (Element of ( NAT )) by INT_1:3;
( p - 1 ) < ( p - ( 0 ) ) by XREAL_1:15;
then ( n - 1 ) < p by X2,XXREAL_0:2;
then reconsider d = ( n - 1 ) as (Element of ( GF p )) by X3,NAT_1:44;
X1: ( card ( S . n ) ) = ( card { ( Class (( R_EllCur (a,b,p) ),[ d,Y,1 ]) ) where Y is (Element of ( GF p )): [ d,Y,1 ] in ( EC_SetProjCo (a,b,p) ) } ) by Q1
.= ( 1 + ( Lege_p ( ( ( d |^ 3 ) + ( a * d ) ) + b ) ) ) by CKB90:1,AS;
( 0 ) <= ( 1 + ( Lege_p ( ( ( d |^ 3 ) + ( a * d ) ) + b ) ) )
proof
per cases ;
suppose (not (( ( ( d |^ 3 ) + ( a * d ) ) + b ) = ( 0 ) or ( ( ( d |^ 3 ) + ( a * d ) ) + b ) is  quadratic_residue));

then ( Lege_p ( ( ( d |^ 3 ) + ( a * d ) ) + b ) ) = ( - 1 ) by CKB52:def 1;
hence ( 0 ) <= ( 1 + ( Lege_p ( ( ( d |^ 3 ) + ( a * d ) ) + b ) ) );
end;
suppose C2: (( ( ( d |^ 3 ) + ( a * d ) ) + b ) = ( 0 ) or ( ( ( d |^ 3 ) + ( a * d ) ) + b ) is  quadratic_residue);

now
per cases  by C2;
suppose ( ( ( d |^ 3 ) + ( a * d ) ) + b ) = ( 0 );

then ( Lege_p ( ( ( d |^ 3 ) + ( a * d ) ) + b ) ) = ( 0 ) by CKB52:def 1;
hence ( 0 ) <= ( 1 + ( Lege_p ( ( ( d |^ 3 ) + ( a * d ) ) + b ) ) );
end;
suppose ( ( ( d |^ 3 ) + ( a * d ) ) + b ) is  quadratic_residue;

then ( Lege_p ( ( ( d |^ 3 ) + ( a * d ) ) + b ) ) = 1 by CKB52:def 1;
hence ( 0 ) <= ( 1 + ( Lege_p ( ( ( d |^ 3 ) + ( a * d ) ) + b ) ) );
end;
end;
hence ( 0 ) <= ( 1 + ( Lege_p ( ( ( d |^ 3 ) + ( a * d ) ) + b ) ) );
end;
end;
then ( card ( S . n ) ) in ( NAT ) by X1,INT_1:3;
hence ( S . n ) is  finite;
end;

set B = { ( Class (( R_EllCur (a,b,p) ),P) ) where P is (Element of ( ProjCo ( GF p ) )): (P in ( EC_SetProjCo (a,b,p) ) & (ex X,Y being (Element of ( GF p )) st P = [ X,Y,1 ])) };
(for x being set holds (x in ( union ( rng S ) ) iff x in B))
proof
let x being set;
hereby
assume x in ( union ( rng S ) );
then consider Z being set such that A2: (x in Z & Z in ( rng S )) by TARSKI:def 4;
consider n being set such that A4: (n in ( dom S ) & Z = ( S . n )) by A2,FUNCT_1:def 3;
reconsider n as Nat by A4;
( S . n ) = { ( Class (( R_EllCur (a,b,p) ),[ ( n - 1 ),Y,1 ]) ) where Y is (Element of ( GF p )): [ ( n - 1 ),Y,1 ] in ( EC_SetProjCo (a,b,p) ) } by A4,P2;
then consider Y being (Element of ( GF p )) such that A6: (x = ( Class (( R_EllCur (a,b,p) ),[ ( n - 1 ),Y,1 ]) ) & [ ( n - 1 ),Y,1 ] in ( EC_SetProjCo (a,b,p) )) by A2,A4;
( n - 1 ) is (Element of ( GF p )) by P20,A4,CKB91:1;
hence x in B by A6;
end;
assume x in B;
then consider P being (Element of ( ProjCo ( GF p ) )) such that A3: ((x = ( Class (( R_EllCur (a,b,p) ),P) ) & P in ( EC_SetProjCo (a,b,p) )) & (ex X,Y being (Element of ( GF p )) st P = [ X,Y,1 ]));
consider X,Y being (Element of ( GF p )) such that A4: P = [ X,Y,1 ] by A3;
reconsider n1 = X as Nat;
D2: (( 0 ) <= n1 & n1 < p) by NAT_1:44;
D3: ( (( 0 ) qua Nat) + 1 ) <= ( n1 + 1 ) by XREAL_1:6;
D4: ( n1 + 1 ) <= p by D2,NAT_1:13;
set n = ( n1 + 1 );
A5: (n in ( Seg p ) & ( n - 1 ) = X) by D3,D4;
x in { ( Class (( R_EllCur (a,b,p) ),[ ( n - 1 ),Q,1 ]) ) where Q is (Element of ( GF p )): [ ( n - 1 ),Q,1 ] in ( EC_SetProjCo (a,b,p) ) } by A3,A4;
then A6: x in ( S . n ) by A5,P2,P20;
( S . n ) in ( rng S ) by A5,P20,FUNCT_1:3;
hence x in ( union ( rng S ) ) by A6,TARSKI:def 4;
end;
hence thesis by TARSKI:1;
end;
