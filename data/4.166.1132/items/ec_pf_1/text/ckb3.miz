environ
vocabularies NUMBERS,CARD_1,FUNCT_1,RELAT_1,XBOOLE_0,ARYTM_3,NEWTON,TARSKI,FINSET_1,MCART_1,CARD_3,FINSEQ_1,SUBSET_1,ARYTM_1,XXREAL_0,FUNCT_2,PARTFUN1,INT_2,NAT_1,BINOP_1,BINOP_2,REALSET1,ZFMISC_1,INT_3,SUPINF_2,ALGSTR_0,GROUP_1,MESFUNC1,INT_1,VECTSP_1,STRUCT_0,GROUP_2,GRAPH_1,FINSEQ_2,EC_PF_1,RLVECT_1,LATTICES,EQREL_1,RELAT_2,UNIROOTS,PROB_2,REAL_1,MOD_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELAT_2,RELSET_1,PARTFUN1,MCART_1,FUNCT_2,BINOP_1,DOMAIN_1,FINSET_1,CARD_1,CARD_3,NUMBERS,XCMPLX_0,XXREAL_0,REAL_1,NAT_1,INT_1,NAT_D,REALSET1,FINSEQ_1,FINSEQ_2,EQREL_1,RVSUM_1,NEWTON,WSIERP_1,MOD_2,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,GROUP_2,GR_CY_1,INT_3,UNIROOTS,PROB_2,BINOM,CKB1;
definitions STRUCT_0,GROUP_1,INT_3,CARD_1,ALGSTR_0,BINOP_1,FINSEQ_1,REALSET1,TARSKI,FINSEQ_2,VECTSP_1,RLVECT_1,EQREL_1,BINOM,CARD_3,CKB1;
theorems TARSKI,XBOOLE_0,ZFMISC_1,ORDINAL1,FUNCT_1,FUNCT_2,VECTSP_1,INT_1,RELAT_1,RLVECT_1,GR_CY_1,FUNCT_7,NAT_1,INT_2,INT_3,PEPIN,NAT_D,NUMBERS,CARD_1,GROUP_1,GROUP_2,STRUCT_0,XREAL_1,NEWTON,XXREAL_0,ALGSEQ_1,NAT_3,RVSUM_1,CARD_2,EULER_1,XBOOLE_1,FINSEQ_1,RELSET_1,FUNCOP_1,PARTFUN1,FINSEQ_2,BINOP_1,ALGSTR_0,MCART_1,EQREL_1,UNIROOTS,RELAT_2,GR_CY_3,DIST_1,PROB_2,BINOM,MOD_2,CKB1,CKB2;
schemes NAT_1,FUNCT_2,INT_1,FINSEQ_1;
registrations XBOOLE_0,STRUCT_0,XREAL_0,ORDINAL1,NAT_1,INT_1,GROUP_2,FINSET_1,GR_CY_1,ALGSTR_0,VECTSP_1,INT_3,XXREAL_0,NEWTON,SUBSET_1,CARD_1,VALUED_0,EQREL_1,RELSET_1,FINSEQ_2,UNIROOTS,NUMBERS,ALGSTR_1,MOD_2,MEMBERED;
constructors REAL_1,NAT_D,NAT_3,SEQ_1,REALSET1,GROUP_2,BINOP_1,GR_CY_1,INT_3,WSIERP_1,UPROOTS,BINOP_2,RELSET_1,FUNCT_7,UNIROOTS,PROB_2,GROUP_1,FINSET_1,BINOM,MOD_2,CKB1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve K for Field;
theorem
PF2: (for ST being non empty doubleLoopStr holds (((((((the carrier of ST) is (Subset of (the carrier of K)) & (the addF of ST) = ( (the addF of K) || (the carrier of ST) )) & (the multF of ST) = ( (the multF of K) || (the carrier of ST) )) & ( 1. ST ) = ( 1. K )) & ( 0. ST ) = ( 0. K )) & ST is  right_complementable  commutative  almost_left_invertible non degenerated) implies ST is (Subfield of K)))
proof
let ST being non empty doubleLoopStr;
assume that
A1: (the carrier of ST) is (Subset of (the carrier of K))
and
A2: (the addF of ST) = ( (the addF of K) || (the carrier of ST) )
and
A3: (the multF of ST) = ( (the multF of K) || (the carrier of ST) )
and
A4: ( 1. ST ) = ( 1. K )
and
A5: ( 0. ST ) = ( 0. K )
and
A6: ST is  right_complementable  commutative  almost_left_invertible non degenerated;
set C1 = (the carrier of ST);
set AC = (the addF of ST);
set MC = (the multF of ST);
set d0 = ( 0. ST );
set d1 = ( 1. ST );
A7:now
let a being (Element of ST),x being (Element of ST);
( a * x ) = ( (the multF of K) . [ a,x ] ) by A3,FUNCT_1:49;
hence ( a * x ) = ( (the multF of K) . (a,x) );
end;
A8:now
let x being (Element of ST),y being (Element of ST);
( x + y ) = ( (the addF of K) . [ x,y ] ) by A2,FUNCT_1:49;
hence ( x + y ) = ( (the addF of K) . (x,y) );
end;
ST is  Abelian  add-associative  right_zeroed  associative  well-unital  distributive
proof
set MK = (the multF of K);
set AK = (the addF of K);
hereby
let x being (Element of ST),y being (Element of ST);
reconsider x1 = x,y1 = y as (Element of K) by A1,TARSKI:def 3;
(( x + y ) = ( x1 + y1 ) & ( y + x ) = ( y1 + x1 )) by A8;
hence ( x + y ) = ( y + x );
end;
hereby
let x being (Element of ST),y being (Element of ST),z being (Element of ST);
reconsider x1 = x,y1 = y,z1 = z as (Element of K) by A1,TARSKI:def 3;
( x + ( y + z ) ) = ( AK . (x1,( y + z )) ) by A8;
then A10: ( x + ( y + z ) ) = ( x1 + ( y1 + z1 ) ) by A8;
( ( x + y ) + z ) = ( AK . (( x + y ),z1) ) by A8;
then ( ( x + y ) + z ) = ( ( x1 + y1 ) + z1 ) by A8;
hence ( ( x + y ) + z ) = ( x + ( y + z ) ) by A10,RLVECT_1:def 3;
end;
hereby
let x being (Element of ST);
reconsider y = x,z = ( 0. ST ) as (Element of K) by A1,TARSKI:def 3;
( x + ( 0. ST ) ) = ( y + ( 0. K ) ) by A5,A8;
hence ( x + ( 0. ST ) ) = x by RLVECT_1:4;
end;
hereby
let a being (Element of ST),b being (Element of ST),x being (Element of ST);
reconsider y = x,a1 = a,b1 = b as (Element of K) by A1,TARSKI:def 3;
( a * ( b * x ) ) = ( MK . (a,( b * x )) ) by A7;
then A12: ( a * ( b * x ) ) = ( a1 * ( b1 * y ) ) by A7;
( a * b ) = ( a1 * b1 ) by A7;
then ( ( a * b ) * x ) = ( ( a1 * b1 ) * y ) by A7;
hence ( ( a * b ) * x ) = ( a * ( b * x ) ) by A12,GROUP_1:def 3;
end;
hereby
let x being (Element of ST);
reconsider y = x as (Element of K) by A1,TARSKI:def 3;
(( x * ( 1. ST ) ) = ( y * ( 1. K ) ) & ( ( 1. ST ) * x ) = ( ( 1. K ) * y )) by A4,A7;
hence (( x * ( 1. ST ) ) = x & ( ( 1. ST ) * x ) = x) by VECTSP_1:def 6;
end;
hereby
let a being (Element of ST),x being (Element of ST),y being (Element of ST);
reconsider x1 = x,y1 = y,a1 = a as (Element of K) by A1,TARSKI:def 3;
( ( x + y ) * a ) = ( MK . (( x + y ),a) ) by A7;
then ( ( x + y ) * a ) = ( ( x1 + y1 ) * a1 ) by A8;
then ( ( x + y ) * a ) = ( ( x1 * a1 ) + ( y1 * a1 ) ) by VECTSP_1:def 7;
then ( ( x + y ) * a ) = ( AK . (( MK . (x1,a1) ),( y * a )) ) by A7;
then A13: ( ( x + y ) * a ) = ( AK . (( x * a ),( y * a )) ) by A7;
( a * ( x + y ) ) = ( MK . (a,( x + y )) ) by A7;
then ( a * ( x + y ) ) = ( a1 * ( x1 + y1 ) ) by A8;
then ( a * ( x + y ) ) = ( ( a1 * x1 ) + ( a1 * y1 ) ) by VECTSP_1:def 7;
then ( a * ( x + y ) ) = ( AK . (( MK . (a,x1) ),( a * y )) ) by A7;
then ( a * ( x + y ) ) = ( AK . (( a * x ),( a * y )) ) by A7;
hence (( a * ( x + y ) ) = ( ( a * x ) + ( a * y ) ) & ( ( x + y ) * a ) = ( ( x * a ) + ( y * a ) )) by A8,A13;
end;
end;
hence thesis by A1,A2,A3,A4,A5,A6,CKB1:def 1;
end;
