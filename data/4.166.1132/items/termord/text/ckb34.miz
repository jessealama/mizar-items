environ
vocabularies NUMBERS,ZFMISC_1,ALGSTR_0,VECTSP_1,RLVECT_1,PRE_POLY,XCMPLX_0,ARYTM_3,FUNCT_1,XXREAL_0,ARYTM_1,CARD_1,XBOOLE_0,SUBSET_1,MCART_1,RELAT_1,PBOOLE,TARSKI,ORDINAL1,LATTICES,POLYNOM1,FINSEQ_1,CARD_3,PARTFUN1,NAT_1,SUPINF_2,POLYNOM7,STRUCT_0,VECTSP_2,CAT_3,BAGORDER,RELAT_2,WELLORD1,FINSET_1,BROUWER,VALUED_0,ORDERS_1,ALGSTR_1,TERMORD;
notations NUMBERS,XCMPLX_0,TARSKI,XBOOLE_0,SUBSET_1,ORDERS_1,RELAT_1,CARD_1,BAGORDER,RELSET_1,FUNCT_1,PARTFUN1,FINSET_1,XXREAL_0,ORDINAL1,NAT_1,ALGSTR_1,PBOOLE,FINSEQ_1,PRE_POLY,STRUCT_0,ALGSTR_0,RLVECT_1,VFUNCT_1,MCART_1,VECTSP_1,VECTSP_2,RELAT_2,POLYNOM1,NAT_D,WELLORD1,POLYNOM7,CKB3,CKB13,CKB14,CKB15,CKB16;
definitions CKB3,CKB13,CKB14,CKB15,CKB16;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,RELAT_1,POLYNOM1,NAT_1,BINOM,RLVECT_1,VECTSP_2,POLYNOM7,POLYNOM2,NAT_2,RELAT_2,CARD_1,CARD_2,MATRLIN,XBOOLE_0,XBOOLE_1,ORDERS_1,MCART_1,BAGORDER,WELLORD1,VECTSP_1,XREAL_1,PARTFUN1,VALUED_0,STRUCT_0,XREAL_0,PRE_POLY,CKB3,CKB4,CKB5,CKB8,CKB9,CKB10,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33;
schemes NAT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,FINSEQ_1,STRUCT_0,VECTSP_1,ALGSTR_1,POLYNOM1,POLYNOM2,POLYNOM7,BAGORDER,VALUED_0,PRE_POLY,VFUNCT_1,FUNCT_2,FUNCT_1,CKB1,CKB2,CKB6,CKB7,CKB11,CKB12;
constructors XXREAL_0,VECTSP_2,ALGSTR_1,TRIANG_1,POLYNOM7,BAGORDER,WELLORD2,RELSET_1,POLYNOM1,BINOP_2,VFUNCT_1,CKB3,CKB13,CKB14,CKB15,CKB16;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
definition
let n being Ordinal;
let T being  connected (TermOrder of n);
let L being non empty ZeroStr;
let p being (Polynomial of n,L);
func HT (p,T) -> (Element of ( Bags n ))
means
:Def6: ((( Support p ) = ( {} ) & it = ( EmptyBag n )) or (it in ( Support p ) & (for b being (bag of n) holds (b in ( Support p ) implies b <= it,T))));
existence
proof
set O = T;
per cases ;
suppose ( Support p ) = ( {} );

hence thesis;
end;
suppose A1: ( Support p ) <> ( {} );

reconsider sp = ( Support p ) as  finite set by POLYNOM1:def 4;
( card sp ) is  finite;
then consider m being Nat such that A2: ( card ( Support p ) ) = ( card m ) by CARD_1:48;
reconsider sp = ( Support p ) as  finite (Subset of ( Bags n )) by POLYNOM1:def 4;
defpred P[ Nat ]
 means
(for B being  finite (Subset of ( Bags n )) holds (( card B ) = $1 implies (ex b9 being (bag of n) st (b9 in B & (for b being (bag of n) holds (b in B implies [ b,b9 ] in O))))));
A3: (for k being Nat holds (1 <= k implies (P[ k ] implies P[ ( k + 1 ) ])))
proof
let k being Nat;
assume A4: 1 <= k;
thus (P[ k ] implies P[ ( k + 1 ) ])
proof
assume A5: P[ k ];
thus P[ ( k + 1 ) ]
proof
let B being  finite (Subset of ( Bags n ));
assume A6: ( card B ) = ( k + 1 );
then reconsider B as non empty  finite (Subset of ( Bags n ));
set x = the (Element of B);
reconsider x as (Element of ( Bags n ));
reconsider x as (bag of n);
set X = ( B \ { x } );
now
let u being set;
assume u in { x };
then u = x by TARSKI:def 1;
hence u in B;
end;
then { x } c= B by TARSKI:def 3;
then A7: B = ( { x } \/ B ) by XBOOLE_1:12
.= ( { x } \/ X ) by XBOOLE_1:39;
(x in X iff (x in B & (not x in { x }))) by XBOOLE_0:def 5;
then A8: ( ( card X ) + 1 ) = ( k + 1 ) by A6,A7,CARD_2:41,TARSKI:def 1;
then reconsider X as non empty set by A4;
consider b9 being (bag of n) such that A9: b9 in X and A10: (for b being (bag of n) holds (b in X implies [ b,b9 ] in O)) by A5,A8;
A11: O is_connected_in ( field O ) by RELAT_2:def 14;
now
per cases ;
case A12: x = b9;
A13:now
let b being (bag of n);
assume A14: b in B;
now
per cases ;
case b in X;
hence [ b,b9 ] in O by A10;
end;
case (not b in X);
then b in { x } by A7,A14,XBOOLE_0:def 3;
then b = x by TARSKI:def 1;
hence [ b,b9 ] in O by A12,ORDERS_1:3;
end;
end;
hence [ b,b9 ] in O;
end;
take b9;
X c= B by XBOOLE_1:36;
hence thesis by A9,A13;
end;
case A15: x <> b9;
b9 is (Element of ( Bags n )) by PRE_POLY:def 12;
then [ b9,b9 ] in O by ORDERS_1:3;
then A16: b9 in ( field O ) by RELAT_1:15;
[ x,x ] in O by ORDERS_1:3;
then A17: x in ( field O ) by RELAT_1:15;
now
per cases  by A11,A15,A17,A16,RELAT_2:def 6;
case A18: [ x,b9 ] in O;
thus (ex b9 being (bag of n) st (b9 in B & (for b being (bag of n) holds (b in B implies [ b,b9 ] in O))))
proof
take b9;
(for b being (bag of n) holds (b in B implies [ b,b9 ] in O))
proof
let b being (bag of n);
assume A19: b in B;
now
per cases ;
case b <> x;
then (not b in { x }) by TARSKI:def 1;
then b in X by A19,XBOOLE_0:def 5;
hence thesis by A10;
end;
case b = x;
hence thesis by A18;
end;
end;
hence thesis;
end;
hence thesis by A9,XBOOLE_0:def 5;
end;

end;
case A20: [ b9,x ] in O;
thus (ex b9 being (bag of n) st (b9 in B & (for b being (bag of n) holds (b in B implies [ b,b9 ] in O))))
proof
take x;
(for b being (bag of n) holds (b in B implies [ b,x ] in O))
proof
let b being (bag of n);
assume A21: b in B;
now
per cases ;
case b <> x;
then (not b in { x }) by TARSKI:def 1;
then b in X by A21,XBOOLE_0:def 5;
then A22: [ b,b9 ] in O by A10;
(b is (Element of ( Bags n )) & b9 is (Element of ( Bags n ))) by PRE_POLY:def 12;
hence thesis by A20,A22,ORDERS_1:5;
end;
case b = x;
hence thesis by ORDERS_1:3;
end;
end;
hence thesis;
end;
hence thesis;
end;

end;
end;
hence thesis;
end;
end;
hence thesis;
end;

end;

end;
m <> ( 0 ) by A1,A2;
then A23: 1 <= m by NAT_1:14;
A24: ( card ( Support p ) ) = m by A2,CARD_1:def 2;
A25: P[ 1 ]
proof
let B being  finite (Subset of ( Bags n ));
assume ( card B ) = 1;
then ( card { ( {} ) } ) = ( card B ) by CARD_1:30;
then consider b being set such that A26: B = { b } by CARD_1:29;
A27: b in B by A26,TARSKI:def 1;
then reconsider b as (Element of ( Bags n ));
reconsider b as (bag of n);
now
let b9 being (bag of n);
assume b9 in B;
then b9 = b by A26,TARSKI:def 1;
hence [ b9,b ] in O by ORDERS_1:3;
end;
hence thesis by A27;
end;
(for k being Nat holds (1 <= k implies P[ k ])) from NAT_1:sch 8(A25,A3);
then consider b9 being (bag of n) such that A28: b9 in sp and A29: (for b being (bag of n) holds (b in sp implies [ b,b9 ] in O)) by A24,A23;
take b9;
now
let b being (bag of n);
assume b in sp;
then [ b,b9 ] in O by A29;
hence b <= b9,O by CKB13:def 1;
end;
hence thesis by A28;
end;
end;
uniqueness
proof
let b1 being (Element of ( Bags n )),b2 being (Element of ( Bags n ));
set O = T;
assume A30: ((( Support p ) = ( {} ) & b1 = ( EmptyBag n )) or (b1 in ( Support p ) & (for b being (bag of n) holds (b in ( Support p ) implies b <= b1,O))));
assume A31: ((( Support p ) = ( {} ) & b2 = ( EmptyBag n )) or (b2 in ( Support p ) & (for b being (bag of n) holds (b in ( Support p ) implies b <= b2,O))));
per cases ;
suppose ( Support p ) = ( {} );

hence b1 = b2 by A30,A31;
end;
suppose A32: ( Support p ) <> ( {} );

then b1 <= b2,O by A30,A31;
then A33: [ b1,b2 ] in O by CKB13:def 1;
b2 <= b1,O by A30,A31,A32;
then [ b2,b1 ] in O by CKB13:def 1;
hence b1 = b2 by A33,ORDERS_1:4;
end;
end;
end;
