environ
vocabularies NUMBERS,ZFMISC_1,ALGSTR_0,VECTSP_1,RLVECT_1,PRE_POLY,XCMPLX_0,ARYTM_3,FUNCT_1,XXREAL_0,ARYTM_1,CARD_1,XBOOLE_0,SUBSET_1,MCART_1,RELAT_1,PBOOLE,TARSKI,ORDINAL1,LATTICES,POLYNOM1,FINSEQ_1,CARD_3,PARTFUN1,NAT_1,SUPINF_2,POLYNOM7,STRUCT_0,VECTSP_2,CAT_3,BAGORDER,RELAT_2,WELLORD1,FINSET_1,BROUWER,VALUED_0,ORDERS_1,ALGSTR_1,TERMORD;
notations NUMBERS,XCMPLX_0,TARSKI,XBOOLE_0,SUBSET_1,ORDERS_1,RELAT_1,CARD_1,BAGORDER,RELSET_1,FUNCT_1,PARTFUN1,FINSET_1,XXREAL_0,ORDINAL1,NAT_1,ALGSTR_1,PBOOLE,FINSEQ_1,PRE_POLY,STRUCT_0,ALGSTR_0,RLVECT_1,VFUNCT_1,MCART_1,VECTSP_1,VECTSP_2,RELAT_2,POLYNOM1,NAT_D,WELLORD1,POLYNOM7,CKB3,CKB13,CKB14,CKB15,CKB16,CKB34,CKB35,CKB36;
definitions CKB3,CKB13,CKB14,CKB15,CKB16,CKB34,CKB35,CKB36;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,RELAT_1,POLYNOM1,NAT_1,BINOM,RLVECT_1,VECTSP_2,POLYNOM7,POLYNOM2,NAT_2,RELAT_2,CARD_1,CARD_2,MATRLIN,XBOOLE_0,XBOOLE_1,ORDERS_1,MCART_1,BAGORDER,WELLORD1,VECTSP_1,XREAL_1,PARTFUN1,VALUED_0,STRUCT_0,XREAL_0,PRE_POLY,CKB3,CKB4,CKB5,CKB8,CKB9,CKB10,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59;
schemes NAT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,FINSEQ_1,STRUCT_0,VECTSP_1,ALGSTR_1,POLYNOM1,POLYNOM2,POLYNOM7,BAGORDER,VALUED_0,PRE_POLY,VFUNCT_1,FUNCT_2,FUNCT_1,CKB1,CKB2,CKB6,CKB7,CKB11,CKB12,CKB41,CKB42;
constructors XXREAL_0,VECTSP_2,ALGSTR_1,TRIANG_1,POLYNOM7,BAGORDER,WELLORD2,RELSET_1,POLYNOM1,BINOP_2,VFUNCT_1,CKB3,CKB13,CKB14,CKB15,CKB16,CKB34,CKB35,CKB36;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
Th30: (for n being Ordinal holds (for L being  add-associative  right_complementable  right_zeroed  well-unital  distributive non  empty doubleLoopStr holds (for p,q being (Polynomial of n,L) holds ( Support ( p *' q ) ) c= { ( s + t ) where s is (Element of ( Bags n )),t is (Element of ( Bags n )): (s in ( Support p ) & t in ( Support q )) })))
proof
let n being Ordinal;
let L being  add-associative  right_complementable  right_zeroed  well-unital  distributive non  empty doubleLoopStr;
let p being (Polynomial of n,L);
let q being (Polynomial of n,L);
A1:now
let b being (bag of n);
consider s being (FinSequence of L) such that A2: ( ( p *' q ) . b ) = ( Sum s ) and A3: ( len s ) = ( len ( decomp b ) ) and A4: (for k being (Element of ( NAT )) holds (k in ( dom s ) implies (ex b1,b2 being (bag of n) st (( ( decomp b ) /. k ) = <* b1,b2 *> & ( s /. k ) = ( ( p . b1 ) * ( q . b2 ) ))))) by POLYNOM1:def 9;
A5: ( dom s ) = ( Seg ( len ( decomp b ) ) ) by A3,FINSEQ_1:def 3
.= ( dom ( decomp b ) ) by FINSEQ_1:def 3;
assume A6: b in ( Support ( p *' q ) );
now
per cases ;
case ( dom s ) = ( {} );
then ( Seg ( len s ) ) = ( {} ) by FINSEQ_1:def 3;
then ( len s ) = ( 0 );
hence contradiction by A3;
end;
case A7: ( dom s ) <> ( {} );
set k = the (Element of ( dom s ));
k in ( dom s ) by A7;
then reconsider k as (Element of ( NAT ));
now
assume A8: (not (ex k being (Element of ( dom ( decomp b ) )) st (ex b1,b2 being (bag of n) st ((( ( decomp b ) /. k ) = <* b1,b2 *> & ( p . b1 ) <> ( 0. L )) & ( q . b2 ) <> ( 0. L )))));
A9: (for k being Nat holds (k in ( dom s ) implies ( s /. k ) = ( 0. L )))
proof
let k being Nat;
assume A10: k in ( dom s );
then consider b1,b2 being (bag of n) such that A11: ( ( decomp b ) /. k ) = <* b1,b2 *> and A12: ( s /. k ) = ( ( p . b1 ) * ( q . b2 ) ) by A4;
now
per cases  by A5,A8,A10,A11;
case ( p . b1 ) = ( 0. L );
hence thesis by A12,BINOM:1;
end;
case ( q . b2 ) = ( 0. L );
hence thesis by A12,BINOM:2;
end;
end;
hence thesis;
end;
then (for k9 being (Element of ( NAT )) holds ((k9 in ( dom s ) & k9 <> k) implies ( s /. k9 ) = ( 0. L )));
then ( Sum s ) = ( s /. k ) by A7,POLYNOM2:3
.= ( 0. L ) by A7,A9;
hence contradiction by A6,A2,POLYNOM1:def 3;
end;
then consider k being (Element of ( dom ( decomp b ) )),b1,b2 being (bag of n) such that A13: ( ( decomp b ) /. k ) = <* b1,b2 *> and A14: ( p . b1 ) <> ( 0. L ) and A15: ( q . b2 ) <> ( 0. L );
k in ( dom ( decomp b ) ) by A5,A7;
then reconsider k as (Element of ( NAT ));
consider b19,b29 being (bag of n) such that A16: ( ( decomp b ) /. k ) = <* b19,b29 *> and A17: b = ( b19 + b29 ) by A5,A7,PRE_POLY:68;
A18: b29 = ( <* b1,b2 *> . 2 ) by A13,A16,FINSEQ_1:44
.= b2 by FINSEQ_1:44;
b2 is (Element of ( Bags n )) by PRE_POLY:def 12;
then A19: b2 in ( Support q ) by A15,POLYNOM1:def 3;
b1 is (Element of ( Bags n )) by PRE_POLY:def 12;
then A20: b1 in ( Support p ) by A14,POLYNOM1:def 3;
b19 = ( <* b1,b2 *> . 1 ) by A13,A16,FINSEQ_1:44
.= b1 by FINSEQ_1:44;
hence (ex s,t being (bag of n) st ((s in ( Support p ) & t in ( Support q )) & b = ( s + t ))) by A20,A19,A17,A18;
end;
end;
hence (ex s,t being (bag of n) st ((s in ( Support p ) & t in ( Support q )) & b = ( s + t )));
end;
now
let u being set;
assume A21: u in ( Support ( p *' q ) );
then reconsider u9 = u as (Element of ( Bags n ));
(ex s,t being (bag of n) st ((s in ( Support p ) & t in ( Support q )) & u9 = ( s + t ))) by A1,A21;
hence u in { ( s9 + t9 ) where s9 is (Element of ( Bags n )),t9 is (Element of ( Bags n )): (s9 in ( Support p ) & t9 in ( Support q )) };
end;
hence thesis by TARSKI:def 3;
end;
