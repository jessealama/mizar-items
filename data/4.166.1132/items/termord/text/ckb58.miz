environ
vocabularies NUMBERS,ZFMISC_1,ALGSTR_0,VECTSP_1,RLVECT_1,PRE_POLY,XCMPLX_0,ARYTM_3,FUNCT_1,XXREAL_0,ARYTM_1,CARD_1,XBOOLE_0,SUBSET_1,MCART_1,RELAT_1,PBOOLE,TARSKI,ORDINAL1,LATTICES,POLYNOM1,FINSEQ_1,CARD_3,PARTFUN1,NAT_1,SUPINF_2,POLYNOM7,STRUCT_0,VECTSP_2,CAT_3,BAGORDER,RELAT_2,WELLORD1,FINSET_1,BROUWER,VALUED_0,ORDERS_1,ALGSTR_1,TERMORD;
notations NUMBERS,XCMPLX_0,TARSKI,XBOOLE_0,SUBSET_1,ORDERS_1,RELAT_1,CARD_1,BAGORDER,RELSET_1,FUNCT_1,PARTFUN1,FINSET_1,XXREAL_0,ORDINAL1,NAT_1,ALGSTR_1,PBOOLE,FINSEQ_1,PRE_POLY,STRUCT_0,ALGSTR_0,RLVECT_1,VFUNCT_1,MCART_1,VECTSP_1,VECTSP_2,RELAT_2,POLYNOM1,NAT_D,WELLORD1,POLYNOM7,CKB3,CKB13,CKB14,CKB15,CKB16,CKB34,CKB35,CKB36;
definitions CKB3,CKB13,CKB14,CKB15,CKB16,CKB34,CKB35,CKB36;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,RELAT_1,POLYNOM1,NAT_1,BINOM,RLVECT_1,VECTSP_2,POLYNOM7,POLYNOM2,NAT_2,RELAT_2,CARD_1,CARD_2,MATRLIN,XBOOLE_0,XBOOLE_1,ORDERS_1,MCART_1,BAGORDER,WELLORD1,VECTSP_1,XREAL_1,PARTFUN1,VALUED_0,STRUCT_0,XREAL_0,PRE_POLY,CKB3,CKB4,CKB5,CKB8,CKB9,CKB10,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57;
schemes NAT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,FINSEQ_1,STRUCT_0,VECTSP_1,ALGSTR_1,POLYNOM1,POLYNOM2,POLYNOM7,BAGORDER,VALUED_0,PRE_POLY,VFUNCT_1,FUNCT_2,FUNCT_1,CKB1,CKB2,CKB6,CKB7,CKB11,CKB12,CKB41,CKB42;
constructors XXREAL_0,VECTSP_2,ALGSTR_1,TRIANG_1,POLYNOM7,BAGORDER,WELLORD2,RELSET_1,POLYNOM1,BINOP_2,VFUNCT_1,CKB3,CKB13,CKB14,CKB15,CKB16,CKB34,CKB35,CKB36;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
Lm14: (for n being Ordinal holds (for O being  admissible  connected (TermOrder of n) holds (for L being  add-associative  right_complementable  left_zeroed  right_zeroed  well-unital  distributive non trivial doubleLoopStr holds (for p,q being  non-zero (Polynomial of n,L) holds ( ( p *' q ) . ( ( HT (p,O) ) + ( HT (q,O) ) ) ) = ( ( p . ( HT (p,O) ) ) * ( q . ( HT (q,O) ) ) )))))
proof
let n being Ordinal;
let O being  admissible  connected (TermOrder of n);
let L being  add-associative  right_complementable  right_zeroed  left_zeroed  well-unital  distributive non trivial doubleLoopStr;
let p being  non-zero (Polynomial of n,L),q being  non-zero (Polynomial of n,L);
set b = ( ( HT (p,O) ) + ( HT (q,O) ) );
consider s being (FinSequence of L) such that A1: ( ( p *' q ) . b ) = ( Sum s ) and A2: ( len s ) = ( len ( decomp b ) ) and A3: (for k being (Element of ( NAT )) holds (k in ( dom s ) implies (ex b1,b2 being (bag of n) st (( ( decomp b ) /. k ) = <* b1,b2 *> & ( s /. k ) = ( ( p . b1 ) * ( q . b2 ) ))))) by POLYNOM1:def 9;
consider S being non empty  finite (Subset of ( Bags n )) such that A4: ( divisors b ) = ( SgmX (( BagOrder n ),S) ) and A5: (for p being (bag of n) holds (p in S iff p divides b)) by PRE_POLY:def 16;
set sgm = ( SgmX (( BagOrder n ),S) );
A6: ( BagOrder n ) linearly_orders S by CKB57:1;
( HT (p,O) ) divides b by PRE_POLY:50;
then ( HT (p,O) ) in S by A5;
then ( HT (p,O) ) in ( rng sgm ) by A6,PRE_POLY:def 2;
then consider i being set such that A7: i in ( dom sgm ) and A8: ( sgm . i ) = ( HT (p,O) ) by FUNCT_1:def 3;
A9: i in ( dom ( decomp b ) ) by A4,A7,PRE_POLY:def 17;
( ( divisors b ) /. i ) = ( HT (p,O) ) by A4,A7,A8,PARTFUN1:def 6;
then A10: ( ( decomp b ) /. i ) = <* ( HT (p,O) ),( b -' ( HT (p,O) ) ) *> by A9,PRE_POLY:def 17;
then A11: ( ( decomp b ) /. i ) = <* ( HT (p,O) ),( HT (q,O) ) *> by PRE_POLY:48;
A12: ( dom s ) = ( Seg ( len ( decomp b ) ) ) by A2,FINSEQ_1:def 3
.= ( dom ( decomp b ) ) by FINSEQ_1:def 3;
then A13: i in ( dom s ) by A4,A7,PRE_POLY:def 17;
reconsider i as (Element of ( NAT )) by A7;
consider b1 being (bag of n),b2 being (bag of n) such that A14: ( ( decomp b ) /. i ) = <* b1,b2 *> and A15: ( s /. i ) = ( ( p . b1 ) * ( q . b2 ) ) by A3,A13;
A16: b2 = ( <* ( HT (p,O) ),( HT (q,O) ) *> . 2 ) by A11,A14,FINSEQ_1:44
.= ( HT (q,O) ) by FINSEQ_1:44;
A17:now
let k being (Element of ( NAT ));
assume that
A18: k in ( dom s )
and
A19: k <> i;
consider b1 being (bag of n),b2 being (bag of n) such that A20: ( ( decomp b ) /. k ) = <* b1,b2 *> and A21: ( s /. k ) = ( ( p . b1 ) * ( q . b2 ) ) by A3,A18;
consider b19 being (bag of n),b29 being (bag of n) such that A22: ( ( decomp b ) /. k ) = <* b19,b29 *> and A23: b = ( b19 + b29 ) by A12,A18,PRE_POLY:68;
A24: b2 = ( <* b19,b29 *> . 2 ) by A22,A20,FINSEQ_1:44
.= b29 by FINSEQ_1:44;
A25: b1 = ( <* b19,b29 *> . 1 ) by A22,A20,FINSEQ_1:44
.= b19 by FINSEQ_1:44;
A26:now
assume that
A27: ( p . b1 ) <> ( 0. L )
and
A28: ( q . b2 ) <> ( 0. L );
b1 is (Element of ( Bags n )) by PRE_POLY:def 12;
then b1 in ( Support p ) by A27,POLYNOM1:def 3;
then b1 <= ( HT (p,O) ),O by CKB34:def 1;
then A29: [ b1,( HT (p,O) ) ] in O by CKB13:def 1;
b2 is (Element of ( Bags n )) by PRE_POLY:def 12;
then b2 in ( Support q ) by A28,POLYNOM1:def 3;
then b2 <= ( HT (q,O) ),O by CKB34:def 1;
then A30: [ b2,( HT (q,O) ) ] in O by CKB13:def 1;
A31:now
assume (b1 = ( HT (p,O) ) & b2 = ( HT (q,O) ));
then ( ( decomp b ) . k ) = <* ( HT (p,O) ),( HT (q,O) ) *> by A12,A18,A20,PARTFUN1:def 6
.= ( ( decomp b ) /. i ) by A10,PRE_POLY:48
.= ( ( decomp b ) . i ) by A9,PARTFUN1:def 6;
hence contradiction by A9,A12,A18,A19,FUNCT_1:def 4;
end;
now
per cases  by A31;
case A32: b1 <> ( HT (p,O) );
A33:now
assume ( b1 + b2 ) = ( ( HT (p,O) ) + b2 );
then b1 = ( ( ( HT (p,O) ) + b2 ) -' b2 ) by PRE_POLY:48;
hence contradiction by A32,PRE_POLY:48;
end;
A34: (( ( HT (p,O) ) + b2 ) is (Element of ( Bags n )) & ( ( HT (p,O) ) + ( HT (q,O) ) ) is (Element of ( Bags n ))) by PRE_POLY:def 12;
([ ( ( HT (p,O) ) + ( HT (q,O) ) ),( ( HT (p,O) ) + b2 ) ] in O & [ ( ( HT (p,O) ) + b2 ),( ( HT (p,O) ) + ( HT (q,O) ) ) ] in O) by A23,A25,A24,A29,A30,BAGORDER:def 5;
hence contradiction by A23,A25,A24,A33,A34,ORDERS_1:4;
end;
case A35: b2 <> ( HT (q,O) );
A36:now
assume ( b2 + b1 ) = ( ( HT (q,O) ) + b1 );
then b2 = ( ( ( HT (q,O) ) + b1 ) -' b1 ) by PRE_POLY:48;
hence contradiction by A35,PRE_POLY:48;
end;
A37: (( ( HT (q,O) ) + b1 ) is (Element of ( Bags n )) & ( ( HT (p,O) ) + ( HT (q,O) ) ) is (Element of ( Bags n ))) by PRE_POLY:def 12;
([ ( ( HT (p,O) ) + ( HT (q,O) ) ),( ( HT (q,O) ) + b1 ) ] in O & [ ( ( HT (q,O) ) + b1 ),( ( HT (p,O) ) + ( HT (q,O) ) ) ] in O) by A23,A25,A24,A29,A30,BAGORDER:def 5;
hence contradiction by A23,A25,A24,A36,A37,ORDERS_1:4;
end;
end;
hence contradiction;
end;
now
per cases  by A26;
case ( p . b1 ) = ( 0. L );
hence ( ( p . b1 ) * ( q . b2 ) ) = ( 0. L ) by BINOM:1;
end;
case ( q . b2 ) = ( 0. L );
hence ( ( p . b1 ) * ( q . b2 ) ) = ( 0. L ) by BINOM:2;
end;
end;
hence ( s /. k ) = ( 0. L ) by A21;
end;
b1 = ( <* ( HT (p,O) ),( HT (q,O) ) *> . 1 ) by A11,A14,FINSEQ_1:44
.= ( HT (p,O) ) by FINSEQ_1:44;
hence thesis by A1,A13,A17,A15,A16,POLYNOM2:3;
end;
