environ
vocabularies NUMBERS,ZFMISC_1,ALGSTR_0,VECTSP_1,RLVECT_1,PRE_POLY,XCMPLX_0,ARYTM_3,FUNCT_1,XXREAL_0,ARYTM_1,CARD_1,XBOOLE_0,SUBSET_1,MCART_1,RELAT_1,PBOOLE,TARSKI,ORDINAL1,LATTICES,POLYNOM1,FINSEQ_1,CARD_3,PARTFUN1,NAT_1,SUPINF_2,POLYNOM7,STRUCT_0,VECTSP_2,CAT_3,BAGORDER,RELAT_2,WELLORD1,FINSET_1,BROUWER,VALUED_0,ORDERS_1,ALGSTR_1,TERMORD;
notations NUMBERS,XCMPLX_0,TARSKI,XBOOLE_0,SUBSET_1,ORDERS_1,RELAT_1,CARD_1,BAGORDER,RELSET_1,FUNCT_1,PARTFUN1,FINSET_1,XXREAL_0,ORDINAL1,NAT_1,ALGSTR_1,PBOOLE,FINSEQ_1,PRE_POLY,STRUCT_0,ALGSTR_0,RLVECT_1,VFUNCT_1,MCART_1,VECTSP_1,VECTSP_2,RELAT_2,POLYNOM1,NAT_D,WELLORD1,POLYNOM7,CKB3,CKB13,CKB14,CKB15,CKB16,CKB34,CKB35,CKB36;
definitions CKB3,CKB13,CKB14,CKB15,CKB16,CKB34,CKB35,CKB36;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,RELAT_1,POLYNOM1,NAT_1,BINOM,RLVECT_1,VECTSP_2,POLYNOM7,POLYNOM2,NAT_2,RELAT_2,CARD_1,CARD_2,MATRLIN,XBOOLE_0,XBOOLE_1,ORDERS_1,MCART_1,BAGORDER,WELLORD1,VECTSP_1,XREAL_1,PARTFUN1,VALUED_0,STRUCT_0,XREAL_0,PRE_POLY,CKB3,CKB4,CKB5,CKB8,CKB9,CKB10,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63;
schemes NAT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,FINSEQ_1,STRUCT_0,VECTSP_1,ALGSTR_1,POLYNOM1,POLYNOM2,POLYNOM7,BAGORDER,VALUED_0,PRE_POLY,VFUNCT_1,FUNCT_2,FUNCT_1,CKB1,CKB2,CKB6,CKB7,CKB11,CKB12,CKB41,CKB42;
constructors XXREAL_0,VECTSP_2,ALGSTR_1,TRIANG_1,POLYNOM7,BAGORDER,WELLORD2,RELSET_1,POLYNOM1,BINOP_2,VFUNCT_1,CKB3,CKB13,CKB14,CKB15,CKB16,CKB34,CKB35,CKB36;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
(for n being Ordinal holds (for T being  admissible  connected (TermOrder of n) holds (for L being  right_zeroed non empty addLoopStr holds (for p,q being (Polynomial of n,L) holds ( HT (( p + q ),T) ) <= ( max (( HT (p,T) ),( HT (q,T) ),T) ),T))))
proof
let n being Ordinal;
let O being  admissible  connected (TermOrder of n);
let L being  right_zeroed non empty addLoopStr;
let p being (Polynomial of n,L),q being (Polynomial of n,L);
per cases ;
suppose A1: ( HT (( p + q ),O) ) in ( Support ( p + q ) );

A2: ( Support ( p + q ) ) c= ( ( Support p ) \/ ( Support q ) ) by POLYNOM1:20;
now
per cases  by A1,A2,XBOOLE_0:def 3;
case A3: ( HT (( p + q ),O) ) in ( Support p );
then A4: ( HT (( p + q ),O) ) <= ( HT (p,O) ),O by CKB34:def 1;
now
per cases  by CKB28:1;
case ( max (( HT (p,O) ),( HT (q,O) ),O) ) = ( HT (p,O) );
hence thesis by A3,CKB34:def 1;
end;
case A5: ( max (( HT (p,O) ),( HT (q,O) ),O) ) = ( HT (q,O) );
then ( HT (p,O) ) <= ( HT (q,O) ),O by CKB31:1;
hence thesis by A4,A5,CKB24:1;
end;
end;
hence thesis;
end;
case A6: ( HT (( p + q ),O) ) in ( Support q );
then A7: ( HT (( p + q ),O) ) <= ( HT (q,O) ),O by CKB34:def 1;
now
per cases  by CKB28:1;
case ( max (( HT (p,O) ),( HT (q,O) ),O) ) = ( HT (q,O) );
hence thesis by A6,CKB34:def 1;
end;
case A8: ( max (( HT (p,O) ),( HT (q,O) ),O) ) = ( HT (p,O) );
then ( HT (q,O) ) <= ( HT (p,O) ),O by CKB31:1;
hence thesis by A7,A8,CKB24:1;
end;
end;
hence thesis;
end;
end;
hence thesis;
end;
suppose (not ( HT (( p + q ),O) ) in ( Support ( p + q ) ));

then ( HT (( p + q ),O) ) = ( EmptyBag n ) by CKB34:def 1;
then [ ( HT (( p + q ),O) ),( max (( HT (p,O) ),( HT (q,O) ),O) ) ] in O by BAGORDER:def 5;
hence thesis by CKB13:def 1;
end;
end;
