environ
vocabularies NUMBERS,SUBSET_1,XBOOLE_0,XXREAL_0,NAT_1,ORDINAL1,CARD_1,TARSKI,ARYTM_3,ARYTM_1,FUNCT_1,RELAT_1,FUNCT_2,INT_1,FINSET_1,AFINSQ_1,BINOP_1,FINSEQ_1,FINSOP_1,CARD_3,BINOP_2,ZFMISC_1,NEWTON,REALSET1,STIRL2_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FUNCT_1,RELSET_1,ORDINAL1,SEQ_4,PARTFUN1,FINSET_1,AFINSQ_1,AFINSQ_2,XXREAL_0,FUNCT_2,NAT_1,INT_1,BINOP_1,BINOP_2,NEWTON,DOMAIN_1,CKB16,CKB17,CKB19,CKB32,CKB79;
definitions TARSKI,XBOOLE_0,FUNCT_1,CKB19,CKB32,CKB79;
theorems AFINSQ_1,TARSKI,FUNCT_1,XBOOLE_0,ZFMISC_1,RELAT_1,XBOOLE_1,NAT_1,FUNCT_2,AXIOMS,XCMPLX_1,CARD_2,INT_1,ORDINAL1,WELLORD2,FRAENKEL,SUBSET_1,ENUMSET1,CARD_1,BINOP_2,NEWTON,WSIERP_1,XREAL_1,XXREAL_0,XXREAL_2,AFINSQ_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83;
schemes FUNCT_2,NAT_1,INT_1,CKB29,CKB41,CKB42,CKB43,CKB56,CKB57,CKB70;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,BINOP_2,MEMBERED,AFINSQ_1,CARD_1,VALUED_0,XXREAL_2,RELSET_1,AFINSQ_2,CKB9,CKB18;
constructors WELLORD2,DOMAIN_1,SETWISEO,REAL_1,BINOP_2,SEQ_4,NEWTON,AFINSQ_1,AFINSQ_2,RELSET_1,PARTFUN3,SEQ_1,BINOP_1,CKB16,CKB17,CKB19,CKB32,CKB79;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for Nat;
reserve m for Nat;
reserve n for Nat;
reserve i for Nat;
reserve j for Nat;
reserve X for set;
reserve Y for set;
reserve f for (Function of n,k);
reserve x for set;
Lm2:now
let D being non  empty set;
let F being (XFinSequence of D);
assume that
A1: (for i holds (i in ( dom F ) implies ( F . i ) is  finite))
and
A2: (for i holds (for j holds (((i in ( dom F ) & j in ( dom F )) & i <> j) implies ( F . i ) misses ( F . j ))));
thus (ex CardF being (XFinSequence of ( NAT )) st ((( dom CardF ) = ( dom F ) & (for i holds (i in ( dom CardF ) implies ( CardF . i ) = ( card ( F . i ) )))) & ( card ( union ( rng F ) ) ) = ( Sum CardF )))
proof
defpred FF[ Nat,set ]
 means
$2 = ( card ( F . $1 ) );
A3: (for k holds (k in ( len F ) implies (ex x being (Element of ( NAT )) st FF[ k,x ])))
proof
let k;
assume k in ( len F );
then consider m being Nat such that A4: ( F . k ),m are_equipotent  by A1,CARD_1:43;
( card ( F . k ) ) = ( card m ) by A4,CARD_1:5;
hence thesis;
end;
consider CardF being (XFinSequence of ( NAT )) such that A5: (( dom CardF ) = ( len F ) & (for k holds (k in ( len F ) implies FF[ k,( CardF . k ) ]))) from CKB56:sch 1(A3);
take CardF;
thus ( dom CardF ) = ( dom F ) by A5;
thus (for i holds (i in ( dom CardF ) implies ( CardF . i ) = ( card ( F . i ) ))) by A5;
A6: ( ( addnat ) "**" CardF ) = ( Sum CardF ) by AFINSQ_2:51;
per cases ;
suppose A7: ( len CardF ) = ( 0 );

then ( union ( rng F ) ) is  empty by A5,RELAT_1:42,ZFMISC_1:2;
hence thesis by A7,A6,AFINSQ_2:def 8,BINOP_2:5;
end;
suppose A8: ( len CardF ) <> ( 0 );

then consider f being (Function of ( NAT ),( NAT )) such that A9: ( f . ( 0 ) ) = ( CardF . ( 0 ) ) and A10: (for n being Nat holds (( n + 1 ) < ( len CardF ) implies ( f . ( n + 1 ) ) = ( ( addnat ) . (( f . n ),( CardF . ( n + 1 ) )) ))) and A11: ( ( addnat ) "**" CardF ) = ( f . ( ( len CardF ) - 1 ) ) by AFINSQ_2:def 8;
defpred P[ Nat ]
 means
($1 < ( len CardF ) implies (( card ( union ( rng ( F | ( $1 + 1 ) ) ) ) ) = ( f . $1 ) & ( union ( rng ( F | ( $1 + 1 ) ) ) ) is  finite));
A12: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume that
A13: P[ k ];
set k1 = ( k + 1 );
set Fk1 = ( F | k1 );
set rFk1 = ( rng Fk1 );
assume that
A14: k1 < ( len CardF );
reconsider urFk1 = ( union rFk1 ) as  finite set by A13,A14,NAT_1:13;
A15: ( f . k1 ) = ( ( addnat ) . (( f . k ),( CardF . k1 )) ) by A10,A14;
A16: ( union ( rng Fk1 ) ) misses ( F . k1 )
proof
assume ( union ( rng Fk1 ) ) meets ( F . k1 );
then consider x such that A17: x in ( ( union ( rng Fk1 ) ) /\ ( F . k1 ) ) by XBOOLE_0:4;
A18: x in ( F . k1 ) by A17,XBOOLE_0:def 4;
A19: k1 in ( dom F ) by A5,A14,NAT_1:44;
x in ( union ( rng Fk1 ) ) by A17,XBOOLE_0:def 4;
then consider Y being set such that A20: x in Y and A21: Y in ( rng Fk1 ) by TARSKI:def 4;
consider X being set such that A22: X in ( dom Fk1 ) and A23: ( Fk1 . X ) = Y by A21,FUNCT_1:def 3;
reconsider X as (Element of ( NAT )) by A22;
A24: ( Fk1 . X ) = ( F . X ) by A22,FUNCT_1:47;
A25: X in ( ( dom F ) /\ k1 ) by A22,RELAT_1:61;
then X in k1 by XBOOLE_0:def 4;
then A26: X <> k1;
X in ( dom F ) by A25,XBOOLE_0:def 4;
then Y misses ( F . k1 ) by A2,A23,A19,A26,A24;
hence contradiction by A20,A18,XBOOLE_0:3;
end;
k1 in ( dom F ) by A5,A14,NAT_1:44;
then reconsider Fk1 = ( F . k1 ) as  finite set by A1;
k1 in ( len F ) by A5,A14,NAT_1:44;
then ( card Fk1 ) = ( CardF . k1 ) by A5;
then A27: ( f . k1 ) = ( ( f . k ) + ( card Fk1 ) ) by A15,BINOP_2:def 23;
( card ( urFk1 \/ Fk1 ) ) = ( ( f . k ) + ( card Fk1 ) ) by A13,A14,A16,CARD_2:40,NAT_1:13;
hence thesis by A27,CKB55:1;
end;
reconsider C1 = ( ( len CardF ) - 1 ) as (Element of ( NAT )) by A8,NAT_1:20;
A28: C1 < ( C1 + 1 ) by NAT_1:13;
A29: ( F | ( len CardF ) ) = F by A5,RELAT_1:68;
A30: P[ ( 0 ) ]
proof
assume ( 0 ) < ( len CardF );
A31: ( union ( rng ( F | ( ( 0 ) + 1 ) ) ) ) = ( ( union ( rng ( F | (( 0 ) qua Ordinal) ) ) ) \/ ( F . ( 0 ) ) ) by CKB55:1;
( 0 ) in ( len CardF ) by A8,NAT_1:44;
hence thesis by A1,A5,A9,A31,ZFMISC_1:2;
end;
(for k being Nat holds P[ k ]) from NAT_1:sch 2(A30,A12);
hence thesis by A11,A28,A29,A6;
end;
end;

end;
theorem
(for D being non  empty set holds (for F being (XFinSequence of D) holds (((for i holds (i in ( dom F ) implies ( F . i ) is  finite)) & (for i holds (for j holds (((i in ( dom F ) & j in ( dom F )) & i <> j) implies ( F . i ) misses ( F . j ))))) implies (ex CardF being (XFinSequence of ( NAT )) st ((( dom CardF ) = ( dom F ) & (for i holds (i in ( dom CardF ) implies ( CardF . i ) = ( card ( F . i ) )))) & ( card ( union ( rng F ) ) ) = ( Sum CardF )))))) by Lm2;
