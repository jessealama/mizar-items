environ
vocabularies SCMFSA_2,XBOOLE_0,AMI_1,GRAPHSP,AMI_3,FINSEQ_1,FUNCT_1,SUBSET_1,FINSUB_1,SETWISEO,CARD_1,TARSKI,CARD_3,RELAT_1,ZFMISC_1,SCMNORM,FINSET_1,NUMBERS,FUNCT_4,VALUED_1,ARYTM_3,AMISTD_2,XXREAL_0,SCMFSA6A,TURING_1,FSM_1,CIRCUIT2,STRUCT_0,ARYTM_1,INT_1,COMPLEX1,PARTFUN1,FINSEQ_2,NAT_1,SF_MASTR,ORDINAL1,RELOC,AMI_2,PBOOLE,SCMFSA6C,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,FINSET_1,FINSUB_1,NAT_1,INT_1,VALUED_1,STRUCT_0,SETWISEO,SEQ_4,CARD_3,FINSEQ_1,FINSEQ_2,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_4,PBOOLE,FUNCT_7,MEMSTR_0,COMPOS_1,AMI_2,EXTPRO_1,AMI_3,SCMFSA_2,AMISTD_2,SCMFSA6A,INT_2,XXREAL_0,CKB14,CKB21;
definitions XBOOLE_0,FUNCOP_1,MEMSTR_0,EXTPRO_1,COMPOS_1,AMI_3,SCMFSA_2,SCMFSA6A,AMISTD_2,CKB14,CKB21;
theorems TARSKI,ENUMSET1,ZFMISC_1,FINSEQ_1,FINSUB_1,SETWISEO,NAT_1,RELAT_1,GRFUNC_1,FUNCT_1,FUNCT_2,FUNCT_4,FUNCT_7,CARD_3,SCMFSA_2,SCMFSA_4,XBOOLE_0,XBOOLE_1,ORDINAL1,AMI_2,MEMSTR_0,AMI_3,VALUED_1,XXREAL_2,PARTFUN1,MCART_1,COMPOS_1,EXTPRO_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27;
schemes NAT_1,DOMAIN_1,FUNCT_2;
registrations SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,FINSUB_1,NUMBERS,XREAL_0,INT_1,MEMBERED,CARD_3,SCMFSA_2,XBOOLE_0,XXREAL_2,VALUED_1,FINSEQ_1,AMISTD_2,AMI_3,SCMFSA10,COMPOS_1,EXTPRO_1,CARD_5,ZFMISC_1,AMI_2,CARD_1,PBOOLE,SCMFSA_4,MEMSTR_0,CARD_2,CKB1,CKB22;
constructors SETWISEO,INT_2,SEQ_4,AMI_3,SCMFSA6A,RELSET_1,VALUED_1,AMISTD_2,AMISTD_1,AMI_2,SCMFSA_1,CARD_5,PRE_POLY,DOMAIN_1,PBOOLE,FUNCT_7,MEMSTR_0,CKB14,CKB21;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve p for (preProgram of ( SCM+FSA ));
reserve k for (Element of ( NAT ));
theorem
Th28: ( UsedIntLoc p ) = ( UsedIntLoc ( IncAddr (p,k) ) )
proof
set Ip = ( IncAddr (p,k) );
consider UIL being (Function of (the Instructions of ( SCM+FSA )),( Fin ( Int-Locations ) )) such that A1: (for i being (Instruction of ( SCM+FSA )) holds ( UIL . i ) = ( UsedIntLoc i )) and A2: ( UsedIntLoc p ) = ( Union ( UIL * p ) ) by CKB21:def 1;
set g = ( UIL * p );
set f = ( UIL * Ip );
consider UIL2 being (Function of (the Instructions of ( SCM+FSA )),( Fin ( Int-Locations ) )) such that A3: (for i being (Instruction of ( SCM+FSA )) holds ( UIL2 . i ) = ( UsedIntLoc i )) and A4: ( UsedIntLoc ( IncAddr (p,k) ) ) = ( Union ( UIL2 * ( IncAddr (p,k) ) ) ) by CKB21:def 1;
(for c being (Element of (the Instructions of ( SCM+FSA ))) holds ( UIL . c ) = ( UIL2 . c ))
proof
let c being (Element of (the Instructions of ( SCM+FSA )));
reconsider d = c as (Instruction of ( SCM+FSA ));
thus ( UIL . c ) = ( UsedIntLoc d ) by A1
.= ( UIL2 . c ) by A3;
end;
then A5: UIL = UIL2 by FUNCT_2:63;
now
A6: ( dom UIL ) = (the Instructions of ( SCM+FSA )) by FUNCT_2:def 1;
then A7: ( rng p ) c= ( dom UIL ) by RELAT_1:def 19;
A8: ( rng Ip ) c= ( dom UIL ) by A6,RELAT_1:def 19;
then A9: ( dom f ) = ( dom Ip ) by RELAT_1:27;
A10: ( dom Ip ) = ( dom p ) by COMPOS_1:def 19;
hence ( dom f ) = ( dom g ) by A7,A9,RELAT_1:27;
let x being set;
assume A11: x in ( dom f );
then ( p . x ) in ( rng p ) by A10,A9,FUNCT_1:def 3;
then reconsider px = ( p . x ) as (Instruction of ( SCM+FSA )) by A7,FUNCT_2:def 1;
( dom p ) c= ( NAT ) by RELAT_1:def 18;
then reconsider x9 = x as (Element of ( NAT )) by A10,A9,A11;
reconsider m = x9 as (Element of ( NAT ));
A12: ( Ip . x ) = ( IncAddr (( p /. m ),k) ) by A10,A9,A11,COMPOS_1:def 19
.= ( IncAddr (px,k) ) by A10,A9,A11,PARTFUN1:def 6;
( Ip . x ) in ( rng Ip ) by A9,A11,FUNCT_1:def 3;
then reconsider Ipx = ( Ip . x ) as (Instruction of ( SCM+FSA )) by A8,FUNCT_2:def 1;
thus ( f . x ) = ( UIL . Ipx ) by A11,FUNCT_1:12
.= ( UsedIntLoc Ipx ) by A1
.= ( UsedIntLoc px ) by A12,CKB27:1
.= ( UIL . px ) by A3,A5
.= ( g . x ) by A10,A9,A11,FUNCT_1:13;
end;
hence thesis by A2,A4,A5,FUNCT_1:2;
end;
