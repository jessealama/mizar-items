environ
vocabularies SCMFSA_2,XBOOLE_0,AMI_1,GRAPHSP,AMI_3,FINSEQ_1,FUNCT_1,SUBSET_1,FINSUB_1,SETWISEO,CARD_1,TARSKI,CARD_3,RELAT_1,ZFMISC_1,SCMNORM,FINSET_1,NUMBERS,FUNCT_4,VALUED_1,ARYTM_3,AMISTD_2,XXREAL_0,SCMFSA6A,TURING_1,FSM_1,CIRCUIT2,STRUCT_0,ARYTM_1,INT_1,COMPLEX1,PARTFUN1,FINSEQ_2,NAT_1,SF_MASTR,ORDINAL1,RELOC,AMI_2,PBOOLE,SCMFSA6C,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,FINSET_1,FINSUB_1,NAT_1,INT_1,VALUED_1,STRUCT_0,SETWISEO,SEQ_4,CARD_3,FINSEQ_1,FINSEQ_2,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_4,PBOOLE,FUNCT_7,MEMSTR_0,COMPOS_1,AMI_2,EXTPRO_1,AMI_3,SCMFSA_2,AMISTD_2,SCMFSA6A,INT_2,XXREAL_0,CKB14,CKB21,CKB36,CKB40;
definitions XBOOLE_0,FUNCOP_1,MEMSTR_0,EXTPRO_1,COMPOS_1,AMI_3,SCMFSA_2,SCMFSA6A,AMISTD_2,CKB14,CKB21,CKB36,CKB40;
theorems TARSKI,ENUMSET1,ZFMISC_1,FINSEQ_1,FINSUB_1,SETWISEO,NAT_1,RELAT_1,GRFUNC_1,FUNCT_1,FUNCT_2,FUNCT_4,FUNCT_7,CARD_3,SCMFSA_2,SCMFSA_4,XBOOLE_0,XBOOLE_1,ORDINAL1,AMI_2,MEMSTR_0,AMI_3,VALUED_1,XXREAL_2,PARTFUN1,MCART_1,COMPOS_1,EXTPRO_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB42,CKB43;
schemes NAT_1,DOMAIN_1,FUNCT_2;
registrations SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,FINSUB_1,NUMBERS,XREAL_0,INT_1,MEMBERED,CARD_3,SCMFSA_2,XBOOLE_0,XXREAL_2,VALUED_1,FINSEQ_1,AMISTD_2,AMI_3,SCMFSA10,COMPOS_1,EXTPRO_1,CARD_5,ZFMISC_1,AMI_2,CARD_1,PBOOLE,SCMFSA_4,MEMSTR_0,CARD_2,CKB1,CKB22,CKB41;
constructors SETWISEO,INT_2,SEQ_4,AMI_3,SCMFSA6A,RELSET_1,VALUED_1,AMISTD_2,AMISTD_1,AMI_2,SCMFSA_1,CARD_5,PRE_POLY,DOMAIN_1,PBOOLE,FUNCT_7,MEMSTR_0,CKB14,CKB21,CKB36,CKB40;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve p for (preProgram of ( SCM+FSA ));
reserve r for (preProgram of ( SCM+FSA ));
theorem
Th41: (( dom p ) misses ( dom r ) implies ( UsedInt*Loc ( p +* r ) ) = ( ( UsedInt*Loc p ) \/ ( UsedInt*Loc r ) ))
proof
consider UIL being (Function of (the Instructions of ( SCM+FSA )),( Fin ( FinSeq-Locations ) )) such that A1: (for i being (Instruction of ( SCM+FSA )) holds ( UIL . i ) = ( UsedInt*Loc i )) and A2: ( UsedInt*Loc ( p +* r ) ) = ( Union ( UIL * ( p +* r ) ) ) by CKB40:def 1;
assume ( dom p ) misses ( dom r );
then (( dom ( UIL * p ) ) c= ( dom p ) & ( dom p ) misses ( dom ( UIL * r ) )) by RELAT_1:25,XBOOLE_1:63;
then A3: ( ( UIL * p ) +* ( UIL * r ) ) = ( ( UIL * p ) \/ ( UIL * r ) ) by FUNCT_4:31,XBOOLE_1:63;
( dom UIL ) = (the Instructions of ( SCM+FSA )) by FUNCT_2:def 1;
then ( rng r ) c= ( dom UIL ) by RELAT_1:def 19;
then ( UIL * ( p +* r ) ) = ( ( UIL * p ) +* ( UIL * r ) ) by FUNCT_7:9;
then A4: (( Union ( UIL * r ) ) = ( union ( rng ( UIL * r ) ) ) & ( union ( rng ( UIL * ( p +* r ) ) ) ) = ( union ( ( rng ( UIL * p ) ) \/ ( rng ( UIL * r ) ) ) )) by A3,CARD_3:def 4,RELAT_1:12;
consider UIL1 being (Function of (the Instructions of ( SCM+FSA )),( Fin ( FinSeq-Locations ) )) such that A5: (for i being (Instruction of ( SCM+FSA )) holds ( UIL1 . i ) = ( UsedInt*Loc i )) and A6: ( UsedInt*Loc p ) = ( Union ( UIL1 * p ) ) by CKB40:def 1;
(for c being (Element of (the Instructions of ( SCM+FSA ))) holds ( UIL . c ) = ( UIL1 . c ))
proof
let c being (Element of (the Instructions of ( SCM+FSA )));
reconsider d = c as (Instruction of ( SCM+FSA ));
thus ( UIL . c ) = ( UsedInt*Loc d ) by A1
.= ( UIL1 . c ) by A5;
end;
then A7: UIL = UIL1 by FUNCT_2:63;
consider UIL2 being (Function of (the Instructions of ( SCM+FSA )),( Fin ( FinSeq-Locations ) )) such that A8: (for i being (Instruction of ( SCM+FSA )) holds ( UIL2 . i ) = ( UsedInt*Loc i )) and A9: ( UsedInt*Loc r ) = ( Union ( UIL2 * r ) ) by CKB40:def 1;
(for c being (Element of (the Instructions of ( SCM+FSA ))) holds ( UIL . c ) = ( UIL2 . c ))
proof
let c being (Element of (the Instructions of ( SCM+FSA )));
reconsider d = c as (Instruction of ( SCM+FSA ));
thus ( UIL . c ) = ( UsedInt*Loc d ) by A1
.= ( UIL2 . c ) by A8;
end;
then A10: UIL = UIL2 by FUNCT_2:63;
(( Union ( UIL * ( p +* r ) ) ) = ( union ( rng ( UIL * ( p +* r ) ) ) ) & ( Union ( UIL * p ) ) = ( union ( rng ( UIL * p ) ) )) by CARD_3:def 4;
hence thesis by A2,A6,A9,A7,A10,A4,ZFMISC_1:78;
end;
