environ
vocabularies SCMFSA_2,XBOOLE_0,AMI_1,GRAPHSP,AMI_3,FINSEQ_1,FUNCT_1,SUBSET_1,FINSUB_1,SETWISEO,CARD_1,TARSKI,CARD_3,RELAT_1,ZFMISC_1,SCMNORM,FINSET_1,NUMBERS,FUNCT_4,VALUED_1,ARYTM_3,AMISTD_2,XXREAL_0,SCMFSA6A,TURING_1,FSM_1,CIRCUIT2,STRUCT_0,ARYTM_1,INT_1,COMPLEX1,PARTFUN1,FINSEQ_2,NAT_1,SF_MASTR,ORDINAL1,RELOC,AMI_2,PBOOLE,SCMFSA6C,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,FINSET_1,FINSUB_1,NAT_1,INT_1,VALUED_1,STRUCT_0,SETWISEO,SEQ_4,CARD_3,FINSEQ_1,FINSEQ_2,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_4,PBOOLE,FUNCT_7,MEMSTR_0,COMPOS_1,AMI_2,EXTPRO_1,AMI_3,SCMFSA_2,AMISTD_2,SCMFSA6A,INT_2,XXREAL_0,CKB14,CKB21;
definitions XBOOLE_0,FUNCOP_1,MEMSTR_0,EXTPRO_1,COMPOS_1,AMI_3,SCMFSA_2,SCMFSA6A,AMISTD_2,CKB14,CKB21;
theorems TARSKI,ENUMSET1,ZFMISC_1,FINSEQ_1,FINSUB_1,SETWISEO,NAT_1,RELAT_1,GRFUNC_1,FUNCT_1,FUNCT_2,FUNCT_4,FUNCT_7,CARD_3,SCMFSA_2,SCMFSA_4,XBOOLE_0,XBOOLE_1,ORDINAL1,AMI_2,MEMSTR_0,AMI_3,VALUED_1,XXREAL_2,PARTFUN1,MCART_1,COMPOS_1,EXTPRO_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35;
schemes NAT_1,DOMAIN_1,FUNCT_2;
registrations SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,FUNCT_2,FINSET_1,FINSUB_1,NUMBERS,XREAL_0,INT_1,MEMBERED,CARD_3,SCMFSA_2,XBOOLE_0,XXREAL_2,VALUED_1,FINSEQ_1,AMISTD_2,AMI_3,SCMFSA10,COMPOS_1,EXTPRO_1,CARD_5,ZFMISC_1,AMI_2,CARD_1,PBOOLE,SCMFSA_4,MEMSTR_0,CARD_2,CKB1,CKB22;
constructors SETWISEO,INT_2,SEQ_4,AMI_3,SCMFSA6A,RELSET_1,VALUED_1,AMISTD_2,AMISTD_1,AMI_2,SCMFSA_1,CARD_5,PRE_POLY,DOMAIN_1,PBOOLE,FUNCT_7,MEMSTR_0,CKB14,CKB21;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve a for Int-Location;
reserve b for Int-Location;
reserve a1 for Int-Location;
reserve a2 for Int-Location;
reserve b1 for Int-Location;
reserve b2 for Int-Location;
reserve f for FinSeq-Location;
reserve f1 for FinSeq-Location;
reserve f2 for FinSeq-Location;
reserve i for (Instruction of ( SCM+FSA ));
definition
let i being (Instruction of ( SCM+FSA ));
func UsedInt*Loc i -> (Element of ( Fin ( FinSeq-Locations ) )) means 
:Def3: (ex a,b being Int-Location st (ex f being FinSeq-Location st ((i = ( b := (f,a) ) or i = ( (f,a) := b )) & it = { f }))) if (( InsCode i ) = 9 or ( InsCode i ) = 10),(ex a being Int-Location st (ex f being FinSeq-Location st ((i = ( a :=len f ) or i = ( f :=<0,...,0> a )) & it = { f }))) if (( InsCode i ) = 11 or ( InsCode i ) = 12) otherwise it = ( {} );
existence
proof
hereby
assume (( InsCode i ) = 9 or ( InsCode i ) = 10);
then consider a,b being Int-Location,f being FinSeq-Location such that A1: (i = ( b := (f,a) ) or i = ( (f,a) := b )) by SCMFSA_2:38,SCMFSA_2:39;
reconsider f9 = f as (Element of ( FinSeq-Locations )) by SCMFSA_2:3;
reconsider IT = {. f9 .} as (Element of ( Fin ( FinSeq-Locations ) ));
take IT;
take a;
take b;
take f;
thus ((i = ( b := (f,a) ) or i = ( (f,a) := b )) & IT = { f }) by A1;
end;
hereby
assume (( InsCode i ) = 11 or ( InsCode i ) = 12);
then consider a being Int-Location,f being FinSeq-Location such that A2: (i = ( a :=len f ) or i = ( f :=<0,...,0> a )) by SCMFSA_2:40,SCMFSA_2:41;
reconsider f9 = f as (Element of ( FinSeq-Locations )) by SCMFSA_2:3;
reconsider IT = {. f9 .} as (Element of ( Fin ( FinSeq-Locations ) ));
take IT;
take a;
take f;
thus ((i = ( a :=len f ) or i = ( f :=<0,...,0> a )) & IT = { f }) by A2;
end;
( {} ) in ( Fin ( FinSeq-Locations ) ) by FINSUB_1:7;
hence thesis;
end;
uniqueness
proof
let it1 being (Element of ( Fin ( FinSeq-Locations ) ));
let it2 being (Element of ( Fin ( FinSeq-Locations ) ));
hereby
assume (( InsCode i ) = 9 or ( InsCode i ) = 10);
given a1 being Int-Location,b1 being Int-Location,f1 being FinSeq-Location such that
A3: (i = ( b1 := (f1,a1) ) or i = ( (f1,a1) := b1 ))
and
A4: it1 = { f1 };

given a2 being Int-Location,b2 being Int-Location,f2 being FinSeq-Location such that
A5: (i = ( b2 := (f2,a2) ) or i = ( (f2,a2) := b2 ))
and
A6: it2 = { f2 };

A7: ((i = ( (f1,a1) := b1 ) or i = ( (f2,a2) := b2 )) implies ( InsCode i ) = 10) by SCMFSA_2:27;
per cases  by A3,A5,A7,SCMFSA_2:26;
suppose (i = ( b1 := (f1,a1) ) & i = ( b2 := (f2,a2) ));

hence it1 = it2 by A4,A6,CKB10:1;
end;
suppose (i = ( (f1,a1) := b1 ) & i = ( (f2,a2) := b2 ));

hence it1 = it2 by A4,A6,CKB11:1;
end;
end;
hereby
assume (( InsCode i ) = 11 or ( InsCode i ) = 12);
given a1 being Int-Location,f1 being FinSeq-Location such that
A8: (i = ( a1 :=len f1 ) or i = ( f1 :=<0,...,0> a1 ))
and
A9: it1 = { f1 };

given a2 being Int-Location,f2 being FinSeq-Location such that
A10: (i = ( a2 :=len f2 ) or i = ( f2 :=<0,...,0> a2 ))
and
A11: it2 = { f2 };

A12: ((i = ( f1 :=<0,...,0> a1 ) or i = ( f2 :=<0,...,0> a2 )) implies ( InsCode i ) = 12) by SCMFSA_2:29;
per cases  by A8,A10,A12,SCMFSA_2:28;
suppose (i = ( a1 :=len f1 ) & i = ( a2 :=len f2 ));

hence it1 = it2 by A9,A11,CKB12:1;
end;
suppose (i = ( f1 :=<0,...,0> a1 ) & i = ( f2 :=<0,...,0> a2 ));

hence it1 = it2 by A9,A11,CKB13:1;
end;
end;
thus thesis;
end;
consistency;
end;
