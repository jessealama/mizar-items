environ
vocabularies XBOOLE_0,CAT_1,SUBSET_1,FUNCT_1,PARTFUN1,FUNCOP_1,STRUCT_0,FUNCT_6,RELAT_1,GRAPH_1,FUNCT_4,ARYTM_0,FVSUM_1,ALGSTR_0,WELLORD1,TARSKI,CARD_1,CAT_3;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCOP_1,FUNCT_4,NUMBERS,FUNCT_2,STRUCT_0,GRAPH_1,CAT_1,OPPCAT_1;
definitions CAT_1,FUNCOP_1;
theorems TARSKI,FUNCT_2,FUNCOP_1,FUNCT_4,CAT_1,OPPCAT_1,RELSET_1;
schemes FUNCT_2,FUNCT_1,CKB1;
registrations XBOOLE_0,RELSET_1,STRUCT_0;
constructors PARTFUN1,OPPCAT_1,FUNCOP_1,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve I for set;
reserve x for set;
reserve A for non empty set;
theorem
Th1: (for F1,F2 being (Function of I,A) holds ((for x holds (x in I implies ( F1 /. x ) = ( F2 /. x ))) implies F1 = F2))
proof
let F1 being (Function of I,A),F2 being (Function of I,A);
assume that
A1: (for x holds (x in I implies ( F1 /. x ) = ( F2 /. x )));
now
let x;
assume A2: x in I;
hence ( F1 . x ) = ( F1 /. x ) by FUNCT_2:def 13
.= ( F2 /. x ) by A1,A2
.= ( F2 . x ) by A2,FUNCT_2:def 13;
end;
hence thesis by FUNCT_2:12;
end;
