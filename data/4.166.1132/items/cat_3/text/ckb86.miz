environ
vocabularies XBOOLE_0,CAT_1,SUBSET_1,FUNCT_1,PARTFUN1,FUNCOP_1,STRUCT_0,FUNCT_6,RELAT_1,GRAPH_1,FUNCT_4,ARYTM_0,FVSUM_1,ALGSTR_0,WELLORD1,TARSKI,CARD_1,CAT_3;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCOP_1,FUNCT_4,NUMBERS,FUNCT_2,STRUCT_0,GRAPH_1,CAT_1,OPPCAT_1,CKB4,CKB7,CKB8,CKB13,CKB17,CKB21,CKB22,CKB27,CKB32,CKB33,CKB47,CKB51,CKB55,CKB63,CKB70,CKB79;
definitions CAT_1,FUNCOP_1,CKB7,CKB8,CKB13,CKB17,CKB21,CKB22,CKB27,CKB32,CKB33,CKB47,CKB51,CKB55,CKB63,CKB70,CKB79;
theorems TARSKI,FUNCT_2,FUNCOP_1,FUNCT_4,CAT_1,OPPCAT_1,RELSET_1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85;
schemes FUNCT_2,FUNCT_1,CKB1,CKB3;
registrations XBOOLE_0,RELSET_1,STRUCT_0;
constructors PARTFUN1,OPPCAT_1,FUNCOP_1,RELSET_1,CKB4,CKB7,CKB8,CKB13,CKB17,CKB21,CKB22,CKB27,CKB32,CKB33,CKB47,CKB51,CKB55,CKB63,CKB70,CKB79;
requirements SUBSET,BOOLE;
begin
reserve I for set;
reserve x for set;
reserve C for Category;
reserve c for (Object of C);
theorem
Th74: (for F being (Function of I,(the carrier' of C)) holds (F is (Projections_family of c,I) iff ( F opp ) is (Injections_family of ( c opp ),I)))
proof
let F being (Function of I,(the carrier' of C));
thus (F is (Projections_family of c,I) implies ( F opp ) is (Injections_family of ( c opp ),I))
proof
assume A1: ( doms F ) = ( I --> c );
now
let x;
assume A2: x in I;
hence ( ( cods ( F opp ) ) /. x ) = ( cod ( ( F opp ) /. x ) ) by CKB8:def 1
.= ( cod ( ( F /. x ) opp ) ) by A2,CKB13:def 1
.= ( ( dom ( F /. x ) ) opp ) by OPPCAT_1:10
.= ( ( ( I --> c ) /. x ) opp ) by A1,A2,CKB7:def 1
.= ( c opp ) by A2,CKB5:1
.= ( ( I --> ( c opp ) ) /. x ) by A2,CKB5:1;
end;
hence ( cods ( F opp ) ) = ( I --> ( c opp ) ) by CKB2:1;
end;

assume A3: ( cods ( F opp ) ) = ( I --> ( c opp ) );
now
let x;
assume A4: x in I;
hence ( ( doms F ) /. x ) = ( dom ( F /. x ) ) by CKB7:def 1
.= ( cod ( ( F /. x ) opp ) ) by OPPCAT_1:8
.= ( cod ( ( F opp ) /. x ) ) by A4,CKB13:def 1
.= ( ( I --> ( c opp ) ) /. x ) by A3,A4,CKB8:def 1
.= ( c opp ) by A4,CKB5:1
.= c by OPPCAT_1:def 2
.= ( ( I --> c ) /. x ) by A4,CKB5:1;
end;
hence ( doms F ) = ( I --> c ) by CKB2:1;
end;
