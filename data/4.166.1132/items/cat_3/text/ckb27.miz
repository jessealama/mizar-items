environ
vocabularies XBOOLE_0,CAT_1,SUBSET_1,FUNCT_1,PARTFUN1,FUNCOP_1,STRUCT_0,FUNCT_6,RELAT_1,GRAPH_1,FUNCT_4,ARYTM_0,FVSUM_1,ALGSTR_0,WELLORD1,TARSKI,CARD_1,CAT_3;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCOP_1,FUNCT_4,NUMBERS,FUNCT_2,STRUCT_0,GRAPH_1,CAT_1,OPPCAT_1,CKB4,CKB7,CKB8,CKB13,CKB17,CKB21,CKB22;
definitions CAT_1,FUNCOP_1,CKB7,CKB8,CKB13,CKB17,CKB21,CKB22;
theorems TARSKI,FUNCT_2,FUNCOP_1,FUNCT_4,CAT_1,OPPCAT_1,RELSET_1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
schemes FUNCT_2,FUNCT_1,CKB1,CKB3;
registrations XBOOLE_0,RELSET_1,STRUCT_0;
constructors PARTFUN1,OPPCAT_1,FUNCOP_1,RELSET_1,CKB4,CKB7,CKB8,CKB13,CKB17,CKB21,CKB22;
requirements SUBSET,BOOLE;
begin
reserve I for set;
reserve x for set;
reserve C for Category;
definition
let C;
let I;
let F being (Function of I,(the carrier' of C));
let G being (Function of I,(the carrier' of C));
func F "*" G -> (Function of I,(the carrier' of C)) means 
:Def9: (for x holds (x in I implies ( it /. x ) = ( ( F /. x ) * ( G /. x ) )));
correctness
proof
deffunc F(set) = ( ( F /. $1 ) * ( G /. $1 ) );
set A = (the carrier' of C);
thus ((ex F being (Function of I,A) st (for x holds (x in I implies ( F /. x ) = F(x)))) & (for F1,F2 being (Function of I,A) holds (((for x holds (x in I implies ( F1 /. x ) = F(x))) & (for x holds (x in I implies ( F2 /. x ) = F(x)))) implies F1 = F2))) from CKB3:sch 1;
end;
end;
