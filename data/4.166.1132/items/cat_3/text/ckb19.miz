environ
vocabularies XBOOLE_0,CAT_1,SUBSET_1,FUNCT_1,PARTFUN1,FUNCOP_1,STRUCT_0,FUNCT_6,RELAT_1,GRAPH_1,FUNCT_4,ARYTM_0,FVSUM_1,ALGSTR_0,WELLORD1,TARSKI,CARD_1,CAT_3;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCOP_1,FUNCT_4,NUMBERS,FUNCT_2,STRUCT_0,GRAPH_1,CAT_1,OPPCAT_1,CKB4,CKB7,CKB8,CKB13,CKB17;
definitions CAT_1,FUNCOP_1,CKB7,CKB8,CKB13,CKB17;
theorems TARSKI,FUNCT_2,FUNCOP_1,FUNCT_4,CAT_1,OPPCAT_1,RELSET_1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
schemes FUNCT_2,FUNCT_1,CKB1,CKB3;
registrations XBOOLE_0,RELSET_1,STRUCT_0;
constructors PARTFUN1,OPPCAT_1,FUNCOP_1,RELSET_1,CKB4,CKB7,CKB8,CKB13,CKB17;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve x1 for set;
reserve x2 for set;
reserve C for Category;
reserve p1 for (Morphism of C);
reserve p2 for (Morphism of C);
theorem
(x1 <> x2 implies (for p1,p2 being (Morphism of ( C opp )) holds ( opp ( (x1,x2) --> (p1,p2) ) ) = ( (x1,x2) --> (( opp p1 ),( opp p2 )) )))
proof
assume A1: x1 <> x2;
let p1 being (Morphism of ( C opp ));
let p2 being (Morphism of ( C opp ));
set F = ( (x1,x2) --> (p1,p2) );
set F9 = ( (x1,x2) --> (( opp p1 ),( opp p2 )) );
now
let x;
assume A2: x in { x1,x2 };
then (x = x1 or x = x2) by TARSKI:def 2;
then ((( F /. x ) = p1 & ( F9 /. x ) = ( opp p1 )) or (( F /. x ) = p2 & ( F9 /. x ) = ( opp p2 ))) by A1,CKB6:1;
hence ( ( opp F ) /. x ) = ( F9 /. x ) by A2,CKB17:def 1;
end;
hence thesis by CKB2:1;
end;
