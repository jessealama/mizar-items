environ
vocabularies XBOOLE_0,CAT_1,SUBSET_1,FUNCT_1,PARTFUN1,FUNCOP_1,STRUCT_0,FUNCT_6,RELAT_1,GRAPH_1,FUNCT_4,ARYTM_0,FVSUM_1,ALGSTR_0,WELLORD1,TARSKI,CARD_1,CAT_3;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCOP_1,FUNCT_4,NUMBERS,FUNCT_2,STRUCT_0,GRAPH_1,CAT_1,OPPCAT_1;
definitions CAT_1,FUNCOP_1;
theorems TARSKI,FUNCT_2,FUNCOP_1,FUNCT_4,CAT_1,OPPCAT_1,RELSET_1,CKB2;
schemes FUNCT_2,FUNCT_1,CKB1;
registrations XBOOLE_0,RELSET_1,STRUCT_0;
constructors PARTFUN1,OPPCAT_1,FUNCOP_1,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve x for set;
scheme FuncIdxcorrectness { I() -> set,A() -> non empty set,F(set) -> (Element of A()) } : ((ex F being (Function of I(),A()) st (for x holds (x in I() implies ( F /. x ) = F(x)))) & (for F1,F2 being (Function of I(),A()) holds (((for x holds (x in I() implies ( F1 /. x ) = F(x))) & (for x holds (x in I() implies ( F2 /. x ) = F(x)))) implies F1 = F2)))
proof
thus (ex F being (Function of I(),A()) st (for x holds (x in I() implies ( F /. x ) = F(x)))) from CKB1:sch 1;
let F1 being (Function of I(),A()),F2 being (Function of I(),A());
assume that
A1: (for x holds (x in I() implies ( F1 /. x ) = F(x)))
and
A2: (for x holds (x in I() implies ( F2 /. x ) = F(x)));
now
let x;
assume A3: x in I();
hence ( F1 /. x ) = F(x) by A1
.= ( F2 /. x ) by A2,A3;
end;
hence thesis by CKB2:1;
end;
