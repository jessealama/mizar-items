environ
vocabularies XBOOLE_0,CAT_1,SUBSET_1,FUNCT_1,PARTFUN1,FUNCOP_1,STRUCT_0,FUNCT_6,RELAT_1,GRAPH_1,FUNCT_4,ARYTM_0,FVSUM_1,ALGSTR_0,WELLORD1,TARSKI,CARD_1,CAT_3;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCOP_1,FUNCT_4,NUMBERS,FUNCT_2,STRUCT_0,GRAPH_1,CAT_1,OPPCAT_1,CKB4,CKB7,CKB8,CKB13,CKB17,CKB21,CKB22;
definitions CAT_1,FUNCOP_1,CKB7,CKB8,CKB13,CKB17,CKB21,CKB22;
theorems TARSKI,FUNCT_2,FUNCOP_1,FUNCT_4,CAT_1,OPPCAT_1,RELSET_1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes FUNCT_2,FUNCT_1,CKB1,CKB3;
registrations XBOOLE_0,RELSET_1,STRUCT_0;
constructors PARTFUN1,OPPCAT_1,FUNCOP_1,RELSET_1,CKB4,CKB7,CKB8,CKB13,CKB17,CKB21,CKB22;
requirements SUBSET,BOOLE;
begin
reserve I for set;
reserve x for set;
reserve C for Category;
reserve f for (Morphism of C);
theorem
Th20: (for F being (Function of I,(the carrier' of C)) holds (( doms F ) = ( I --> ( cod f ) ) implies (( doms ( F * f ) ) = ( I --> ( dom f ) ) & ( cods ( F * f ) ) = ( cods F ))))
proof
let F being (Function of I,(the carrier' of C));
assume that
A1: ( doms F ) = ( I --> ( cod f ) );
now
let x;
assume A2: x in I;
then A3: ( dom ( F /. x ) ) = ( ( I --> ( cod f ) ) /. x ) by A1,CKB7:def 1
.= ( cod f ) by A2,CKB5:1;
thus ( ( doms ( F * f ) ) /. x ) = ( dom ( ( F * f ) /. x ) ) by A2,CKB7:def 1
.= ( dom ( ( F /. x ) * f ) ) by A2,CKB21:def 1
.= ( dom f ) by A3,CAT_1:17
.= ( ( I --> ( dom f ) ) /. x ) by A2,CKB5:1;
end;
hence ( doms ( F * f ) ) = ( I --> ( dom f ) ) by CKB2:1;
now
let x;
assume A4: x in I;
then A5: ( dom ( F /. x ) ) = ( ( I --> ( cod f ) ) /. x ) by A1,CKB7:def 1
.= ( cod f ) by A4,CKB5:1;
thus ( ( cods F ) /. x ) = ( cod ( F /. x ) ) by A4,CKB8:def 1
.= ( cod ( ( F /. x ) * f ) ) by A5,CAT_1:17
.= ( cod ( ( F * f ) /. x ) ) by A4,CKB21:def 1
.= ( ( cods ( F * f ) ) /. x ) by A4,CKB8:def 1;
end;
hence thesis by CKB2:1;
end;
