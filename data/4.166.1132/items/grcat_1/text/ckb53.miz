environ
vocabularies XBOOLE_0,CLASSES2,TARSKI,ZFMISC_1,SUBSET_1,FUNCT_5,FUNCT_1,FUNCT_2,ALGSTR_0,MIDSP_2,ROBBINS1,SUPINF_2,ARYTM_3,ARYTM_1,CAT_1,STRUCT_0,RELAT_1,GRAPH_1,VECTSP_1,PARTFUN1,REALSET1,MIDSP_1,CAT_2,FUNCOP_1,MSSUBFAM,RLVECT_1,ENS_1,ALGSTR_1,GRCAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,MCART_1,REALSET1,PARTFUN1,FUNCT_2,ORDINAL1,CLASSES2,BINOP_1,FUNCT_5,STRUCT_0,ALGSTR_0,GRAPH_1,CAT_1,TOPS_2,RLVECT_1,VECTSP_1,FUNCOP_1,CAT_2,ALGSTR_1,MIDSP_2,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB16,CKB22,CKB23,CKB24,CKB25,CKB27,CKB29,CKB31,CKB34,CKB39,CKB41,CKB47,CKB49;
definitions BINOP_1,STRUCT_0,ALGSTR_1,ALGSTR_0,GRAPH_1,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB16,CKB23,CKB24,CKB25,CKB27,CKB29,CKB34,CKB39,CKB47;
theorems CAT_1,CAT_2,CLASSES2,FUNCOP_1,FUNCT_1,FUNCT_2,MIDSP_2,MCART_1,VECTSP_1,TARSKI,ZFMISC_1,RLVECT_1,RELAT_1,ORDINAL1,XBOOLE_0,TOPS_2,BINOP_1,CARD_1,SUBSET_1,CKB1,CKB2,CKB3,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB20,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB32,CKB34,CKB36,CKB37,CKB39,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB50,CKB51,CKB52;
schemes FUNCT_2,BINOP_1,TARSKI,XBOOLE_0;
registrations XBOOLE_0,RELSET_1,FUNCT_2,CLASSES2,STRUCT_0,ALGSTR_1,MIDSP_2,ALGSTR_0,CAT_2,CKB4,CKB7,CKB13,CKB18,CKB19,CKB21,CKB22,CKB28,CKB30,CKB33,CKB35,CKB38,CKB40;
constructors PARTFUN1,CLASSES1,CLASSES2,REALSET1,TOPS_2,VECTSP_2,CAT_2,ALGSTR_1,MIDSP_2,FUNCOP_1,RELSET_1,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB16,CKB22,CKB23,CKB24,CKB25,CKB27,CKB29,CKB34,CKB39,CKB41,CKB47,CKB49;
requirements SUBSET,BOOLE;
begin
theorem
Th32: (for G1,G2,G3,G4 being AddGroup holds (for f being  strict (Morphism of G1,G2) holds (for g being  strict (Morphism of G2,G3) holds (for h being  strict (Morphism of G3,G4) holds ( h * ( g * f ) ) = ( ( h * g ) * f )))))
proof
let G1 being AddGroup;
let G2 being AddGroup;
let G3 being AddGroup;
let G4 being AddGroup;
let f being  strict (Morphism of G1,G2);
let g being  strict (Morphism of G2,G3);
let h being  strict (Morphism of G3,G4);
consider f0 being (Function of G1,G2) such that A1: f = GroupMorphismStr (# G1,G2,f0 #) by CKB43:1;
consider g0 being (Function of G2,G3) such that A2: g = GroupMorphismStr (# G2,G3,g0 #) by CKB43:1;
consider h0 being (Function of G3,G4) such that A3: h = GroupMorphismStr (# G3,G4,h0 #) by CKB43:1;
A4: ( h * g ) = GroupMorphismStr (# G2,G4,( h0 * g0 ) #) by A2,A3,CKB50:1;
( g * f ) = GroupMorphismStr (# G1,G3,( g0 * f0 ) #) by A1,A2,CKB50:1;
then ( h * ( g * f ) ) = GroupMorphismStr (# G1,G4,( h0 * ( g0 * f0 ) ) #) by A3,CKB50:1
.= GroupMorphismStr (# G1,G4,( ( h0 * g0 ) * f0 ) #) by RELAT_1:36
.= ( ( h * g ) * f ) by A1,A4,CKB50:1;
hence thesis;
end;
