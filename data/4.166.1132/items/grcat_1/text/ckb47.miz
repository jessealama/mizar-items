environ
vocabularies XBOOLE_0,CLASSES2,TARSKI,ZFMISC_1,SUBSET_1,FUNCT_5,FUNCT_1,FUNCT_2,ALGSTR_0,MIDSP_2,ROBBINS1,SUPINF_2,ARYTM_3,ARYTM_1,CAT_1,STRUCT_0,RELAT_1,GRAPH_1,VECTSP_1,PARTFUN1,REALSET1,MIDSP_1,CAT_2,FUNCOP_1,MSSUBFAM,RLVECT_1,ENS_1,ALGSTR_1,GRCAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,MCART_1,REALSET1,PARTFUN1,FUNCT_2,ORDINAL1,CLASSES2,BINOP_1,FUNCT_5,STRUCT_0,ALGSTR_0,GRAPH_1,CAT_1,TOPS_2,RLVECT_1,VECTSP_1,FUNCOP_1,CAT_2,ALGSTR_1,MIDSP_2,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB16,CKB22,CKB23,CKB24,CKB25,CKB27,CKB29,CKB31,CKB34,CKB39,CKB41;
definitions BINOP_1,STRUCT_0,ALGSTR_1,ALGSTR_0,GRAPH_1,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB16,CKB23,CKB24,CKB25,CKB27,CKB29,CKB34,CKB39;
theorems CAT_1,CAT_2,CLASSES2,FUNCOP_1,FUNCT_1,FUNCT_2,MIDSP_2,MCART_1,VECTSP_1,TARSKI,ZFMISC_1,RLVECT_1,RELAT_1,ORDINAL1,XBOOLE_0,TOPS_2,BINOP_1,CARD_1,SUBSET_1,CKB1,CKB2,CKB3,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB20,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB32,CKB34,CKB36,CKB37,CKB39,CKB42,CKB43,CKB44,CKB45,CKB46;
schemes FUNCT_2,BINOP_1,TARSKI,XBOOLE_0;
registrations XBOOLE_0,RELSET_1,FUNCT_2,CLASSES2,STRUCT_0,ALGSTR_1,MIDSP_2,ALGSTR_0,CAT_2,CKB4,CKB7,CKB13,CKB18,CKB19,CKB21,CKB22,CKB28,CKB30,CKB33,CKB35,CKB38,CKB40;
constructors PARTFUN1,CLASSES1,CLASSES2,REALSET1,TOPS_2,VECTSP_2,CAT_2,ALGSTR_1,MIDSP_2,FUNCOP_1,RELSET_1,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB16,CKB22,CKB23,CKB24,CKB25,CKB27,CKB29,CKB34,CKB39,CKB41;
requirements SUBSET,BOOLE;
begin
definition
let G being GroupMorphism;
let F being GroupMorphism;
assume A1: ( dom G ) = ( cod F );
func G * F ->  strict GroupMorphism
means
:Def21: (for G1,G2,G3 being AddGroup holds (for g being (Function of G2,G3) holds (for f being (Function of G1,G2) holds ((( the GroupMorphismStr of G ) = GroupMorphismStr (# G2,G3,g #) & ( the GroupMorphismStr of F ) = GroupMorphismStr (# G1,G2,f #)) implies it = GroupMorphismStr (# G1,G3,( g * f ) #)))));
existence
proof
consider G19 being AddGroup,G29 being AddGroup,G39 being AddGroup such that A2: G is (Morphism of G29,G39) and A3: F is (Morphism of G19,G29) by A1,CKB46:1;
consider f9 being (Function of G19,G29) such that A4: ( the GroupMorphismStr of F ) = GroupMorphismStr (# G19,G29,f9 #) and A5: f9 is  additive by A3,CKB42:1;
consider g9 being (Function of G29,G39) such that A6: ( the GroupMorphismStr of G ) = GroupMorphismStr (# G29,G39,g9 #) and A7: g9 is  additive by A2,CKB42:1;
( g9 * f9 ) is  additive by A7,A5;
then reconsider T9 = GroupMorphismStr (# G19,G39,( g9 * f9 ) #) as  strict GroupMorphism by CKB37:1;
take T9;
thus thesis by A6,A4;
end;
uniqueness
proof
consider G19 being AddGroup,G299 being AddGroup such that A8: F is (Morphism of G19,G299) by CKB44:1;
reconsider F9 = F as (Morphism of G19,G299) by A8;
consider G29 being AddGroup,G39 being AddGroup such that A9: G is (Morphism of G29,G39) by CKB44:1;
G29 = ( dom G ) by A9,CKB34:def 1;
then reconsider F9 as (Morphism of G19,G29) by A1,CKB34:def 1;
consider f9 being (Function of G19,G29) such that A10: ( the GroupMorphismStr of F9 ) = GroupMorphismStr (# G19,G29,f9 #) and f9 is  additive by CKB42:1;
reconsider G9 = G as (Morphism of G29,G39) by A9;
let S1 being  strict GroupMorphism,S2 being  strict GroupMorphism;
assume that
A11: (for G1,G2,G3 being AddGroup holds (for g being (Function of G2,G3) holds (for f being (Function of G1,G2) holds ((( the GroupMorphismStr of G ) = GroupMorphismStr (# G2,G3,g #) & ( the GroupMorphismStr of F ) = GroupMorphismStr (# G1,G2,f #)) implies S1 = GroupMorphismStr (# G1,G3,( g * f ) #)))))
and
A12: (for G1,G2,G3 being AddGroup holds (for g being (Function of G2,G3) holds (for f being (Function of G1,G2) holds ((( the GroupMorphismStr of G ) = GroupMorphismStr (# G2,G3,g #) & ( the GroupMorphismStr of F ) = GroupMorphismStr (# G1,G2,f #)) implies S2 = GroupMorphismStr (# G1,G3,( g * f ) #)))));
consider g9 being (Function of G29,G39) such that A13: ( the GroupMorphismStr of G9 ) = GroupMorphismStr (# G29,G39,g9 #) and g9 is  additive by CKB42:1;
thus S1 = GroupMorphismStr (# G19,G39,( g9 * f9 ) #) by A11,A13,A10
.= S2 by A12,A13,A10;
end;
end;
