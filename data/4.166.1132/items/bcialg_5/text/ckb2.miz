environ
vocabularies NUMBERS,BCIALG_1,SUBSET_1,POLYEQ_1,XBOOLE_0,POWER,ARYTM_3,NAT_1,FUNCT_1,STRUCT_0,XXREAL_0,SUPINF_2,CARD_1,ARYTM_1,ORDINAL1,BINOP_1,TARSKI,CHORD,FILTER_0,BCIALG_3,BCIALG_5;
notations TARSKI,XBOOLE_0,SUBSET_1,STRUCT_0,BCIALG_1,NUMBERS,XXREAL_0,REAL_1,FUNCT_2,NAT_1,BCIALG_2,ORDINAL1,BCIALG_3,CKB1;
definitions TARSKI,XBOOLE_0,BCIALG_1,CKB1;
theorems TARSKI,STRUCT_0,BCIALG_1,XREAL_1,XXREAL_0,XBOOLE_0,BCIALG_3,NAT_1,BCIALG_2,CKB1;
schemes NAT_1;
registrations BCIALG_1,STRUCT_0,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,BCIALG_3,NAT_1,BCIALG_2;
constructors REAL_1,NAT_1,SQUARE_1,BCIALG_2,BCIALG_3,CKB1;
requirements SUBSET,BOOLE,NUMERALS,REAL,ARITHM;
begin
reserve X for BCI-algebra;
reserve x for (Element of X);
reserve y for (Element of X);
reserve z for (Element of X);
theorem
Th1: ((x <= y & y <= z) implies x <= z)
proof
assume (x <= y & y <= z);
then (( x \ y ) = ( 0. X ) & ( y \ z ) = ( 0. X )) by BCIALG_1:def 11;
hence ( x \ z ) = ( 0. X ) by BCIALG_1:3;
end;
