environ
vocabularies NUMBERS,BCIALG_1,SUBSET_1,POLYEQ_1,XBOOLE_0,POWER,ARYTM_3,NAT_1,FUNCT_1,STRUCT_0,XXREAL_0,SUPINF_2,CARD_1,ARYTM_1,ORDINAL1,BINOP_1,TARSKI,CHORD,FILTER_0,BCIALG_3,BCIALG_5;
notations TARSKI,XBOOLE_0,SUBSET_1,STRUCT_0,BCIALG_1,NUMBERS,XXREAL_0,REAL_1,FUNCT_2,NAT_1,BCIALG_2,ORDINAL1,BCIALG_3,CKB1;
definitions TARSKI,XBOOLE_0,BCIALG_1,CKB1;
theorems TARSKI,STRUCT_0,BCIALG_1,XREAL_1,XXREAL_0,XBOOLE_0,BCIALG_3,NAT_1,BCIALG_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11;
schemes NAT_1;
registrations BCIALG_1,STRUCT_0,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,BCIALG_3,NAT_1,BCIALG_2;
constructors REAL_1,NAT_1,SQUARE_1,BCIALG_2,BCIALG_3,CKB1;
requirements SUBSET,BOOLE,NUMERALS,REAL,ARITHM;
begin
reserve X for BCI-algebra;
reserve x for (Element of X);
reserve y for (Element of X);
reserve n for (Element of ( NAT ));
theorem
( Polynom (( n + 1 ),( n + 1 ),y,x) ) <= ( Polynom (n,( n + 1 ),x,y) )
proof
( ( y \ x ) \ ( y \ x ) ) = ( 0. X ) by BCIALG_1:def 5;
then ( ( y \ ( y \ x ) ) \ x ) = ( 0. X ) by BCIALG_1:7;
then ( y \ ( y \ x ) ) <= x by BCIALG_1:def 11;
then ( (( y \ ( y \ x ) ),( x \ y )) to_power ( n + 1 ) ) <= ( (x,( x \ y )) to_power ( n + 1 ) ) by BCIALG_2:19;
then ( (( (( y \ ( y \ x ) ),( x \ y )) to_power ( n + 1 ) ),( y \ x )) to_power ( n + 1 ) ) <= ( (( (x,( x \ y )) to_power ( n + 1 ) ),( y \ x )) to_power ( n + 1 ) ) by BCIALG_2:19;
then ( (( (( y \ ( y \ x ) ),( y \ x )) to_power ( n + 1 ) ),( x \ y )) to_power ( n + 1 ) ) <= ( (( (x,( x \ y )) to_power ( n + 1 ) ),( y \ x )) to_power ( n + 1 ) ) by BCIALG_2:11;
then ( (( (( (y,( y \ x )) to_power 1 ),( y \ x )) to_power ( n + 1 ) ),( x \ y )) to_power ( n + 1 ) ) <= ( (( (x,( x \ y )) to_power ( n + 1 ) ),( y \ x )) to_power ( n + 1 ) ) by BCIALG_2:2;
hence thesis by BCIALG_2:10;
end;
