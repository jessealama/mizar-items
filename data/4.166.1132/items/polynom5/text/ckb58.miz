environ
vocabularies NUMBERS,SUBSET_1,CARD_1,RELAT_1,ARYTM_1,ARYTM_3,XXREAL_0,XREAL_0,ORDINAL1,REAL_1,FINSEQ_1,FUNCT_1,CARD_3,ORDINAL4,TARSKI,PARTFUN1,XBOOLE_0,HAHNBAN1,XCMPLX_0,COMPLFLD,SUPINF_2,COMPLEX1,GROUP_1,POWER,STRUCT_0,NAT_1,RLVECT_1,ALGSTR_0,VECTSP_1,BINOP_1,LATTICES,POLYNOM1,ALGSEQ_1,POLYNOM3,POLYNOM2,VECTSP_2,MESFUNC1,AFINSQ_1,FUNCT_4,CQC_LANG,CFCONT_1,FUNCOP_1,VALUED_1,FUNCT_2,SEQ_4,XXREAL_2,COMSEQ_1,VALUED_0,SEQ_2,ORDINAL2,SEQ_1,COMPTRIG,RFINSEQ,POLYNOM5;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_2,XREAL_0,COMPLEX1,REAL_1,NAT_1,POWER,BINOP_1,RELAT_1,FUNCT_1,FUNCT_2,PARTFUN1,FUNCOP_1,FINSEQ_1,FINSEQ_4,POLYNOM1,RVSUM_1,STRUCT_0,ALGSTR_0,RLVECT_1,VECTSP_2,VECTSP_1,RFINSEQ,CFCONT_1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,SEQ_4,XXREAL_0,COMSEQ_1,COMSEQ_2,NAT_D,COMPLFLD,HAHNBAN1,ALGSEQ_1,POLYNOM3,POLYNOM4,GROUP_1,FUNCT_7,RECDEF_1,CKB9,CKB17,CKB29,CKB39;
definitions TARSKI,ALGSEQ_1,SEQ_4,XBOOLE_0,RVSUM_1,POLYNOM3,HAHNBAN1,STRUCT_0,ALGSTR_0,XCMPLX_0,XXREAL_2,CKB9,CKB17,CKB29,CKB39;
theorems XREAL_0,TARSKI,ENUMSET1,NAT_1,POWER,INT_1,ABSVALUE,FUNCT_1,FUNCT_2,FUNCT_7,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,FUNCOP_1,TBSP_1,RFINSEQ,PRE_FF,CFCONT_1,TOPREAL3,INTEGRA5,RLVECT_1,VECTSP_1,RVSUM_1,SEQ_2,SEQM_3,SEQ_4,COMSEQ_2,COMSEQ_3,CFUNCT_1,FVSUM_1,GROUP_1,ALGSEQ_1,COMPLEX1,COMPLFLD,HAHNBAN1,POLYNOM1,POLYNOM2,POLYNOM3,POLYNOM4,XBOOLE_0,XCMPLX_1,VECTSP_2,XREAL_1,XXREAL_0,FINSOP_1,NORMSP_1,PARTFUN1,ORDINAL1,VALUED_1,RELAT_1,CARD_1,NAT_D,VALUED_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57;
schemes NAT_1,FUNCT_2,FINSEQ_2,FINSEQ_1,FINSEQ_4,SEQ_1,CFCONT_1,DOMAIN_1,FUNCT_7;
registrations FUNCT_1,ORDINAL1,RELSET_1,FUNCT_2,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,COMSEQ_2,STRUCT_0,GROUP_1,VECTSP_1,COMPLFLD,ALGSTR_1,POLYNOM3,POLYNOM4,VALUED_0,VALUED_1,FUNCOP_1,SEQ_4,CARD_1,CKB18,CKB30,CKB47;
constructors FINSEQ_4,ENUMSET1,REAL_1,SEQ_4,FINSOP_1,COMSEQ_2,RVSUM_1,COMSEQ_3,CFCONT_1,RFINSEQ,NAT_D,FUNCSDOM,VECTSP_2,ALGSTR_1,MATRIX_2,HAHNBAN1,POLYNOM1,POLYNOM4,SEQ_1,RECDEF_1,BINOP_2,SUPINF_1,XXREAL_2,POWER,SEQ_2,RELSET_1,FUNCT_7,FVSUM_1,CKB9,CKB17,CKB29,CKB39;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
definition
let L being  Abelian  add-associative  right_zeroed  right_complementable  well-unital  commutative  distributive non empty doubleLoopStr;
let p being (Polynomial of L);
let q being (Polynomial of L);
func Subst (p,q) -> (Polynomial of L)
means
:Def5: (ex F being (FinSequence of (the carrier of ( Polynom-Ring L ))) st ((it = ( Sum F ) & ( len F ) = ( len p )) & (for n being (Element of ( NAT )) holds (n in ( dom F ) implies ( F . n ) = ( ( p . ( n -' 1 ) ) * ( q `^ ( n -' 1 ) ) )))));
existence
proof
defpred P[ Nat,set ]
 means
$2 = ( ( p . ( $1 -' 1 ) ) * ( q `^ ( $1 -' 1 ) ) );
set k = ( len p );
A1:now
let n being Nat;
assume n in ( Seg k );
reconsider x = ( ( p . ( n -' 1 ) ) * ( q `^ ( n -' 1 ) ) ) as (Element of ( Polynom-Ring L )) by POLYNOM3:def 10;
take x;
thus P[ n,x ];
end;
consider F being (FinSequence of (the carrier of ( Polynom-Ring L ))) such that A2: (( dom F ) = ( Seg k ) & (for n being Nat holds (n in ( Seg k ) implies P[ n,( F . n ) ]))) from FINSEQ_1:sch 5(A1);
reconsider r = ( Sum F ) as (Polynomial of L) by POLYNOM3:def 10;
take r;
take F;
thus thesis by A2,FINSEQ_1:def 3;
end;
uniqueness
proof
let y1 being (Polynomial of L),y2 being (Polynomial of L);
given F1 being (FinSequence of (the carrier of ( Polynom-Ring L ))) such that
A3: y1 = ( Sum F1 )
and
A4: ( len F1 ) = ( len p )
and
A5: (for n being (Element of ( NAT )) holds (n in ( dom F1 ) implies ( F1 . n ) = ( ( p . ( n -' 1 ) ) * ( q `^ ( n -' 1 ) ) )));

given F2 being (FinSequence of (the carrier of ( Polynom-Ring L ))) such that
A6: y2 = ( Sum F2 )
and
A7: ( len F2 ) = ( len p )
and
A8: (for n being (Element of ( NAT )) holds (n in ( dom F2 ) implies ( F2 . n ) = ( ( p . ( n -' 1 ) ) * ( q `^ ( n -' 1 ) ) )));

A9: ( dom F1 ) = ( Seg ( len F1 ) ) by FINSEQ_1:def 3;
now
let n being Nat;
assume A10: n in ( dom F1 );
then A11: n in ( dom F2 ) by A4,A7,A9,FINSEQ_1:def 3;
thus ( F1 . n ) = ( ( p . ( n -' 1 ) ) * ( q `^ ( n -' 1 ) ) ) by A5,A10
.= ( F2 . n ) by A8,A11;
end;
hence y1 = y2 by A3,A4,A6,A7,FINSEQ_2:9;
end;
end;
