environ
vocabularies NUMBERS,SUBSET_1,CARD_1,RELAT_1,ARYTM_1,ARYTM_3,XXREAL_0,XREAL_0,ORDINAL1,REAL_1,FINSEQ_1,FUNCT_1,CARD_3,ORDINAL4,TARSKI,PARTFUN1,XBOOLE_0,HAHNBAN1,XCMPLX_0,COMPLFLD,SUPINF_2,COMPLEX1,GROUP_1,POWER,STRUCT_0,NAT_1,RLVECT_1,ALGSTR_0,VECTSP_1,BINOP_1,LATTICES,POLYNOM1,ALGSEQ_1,POLYNOM3,POLYNOM2,VECTSP_2,MESFUNC1,AFINSQ_1,FUNCT_4,CQC_LANG,CFCONT_1,FUNCOP_1,VALUED_1,FUNCT_2,SEQ_4,XXREAL_2,COMSEQ_1,VALUED_0,SEQ_2,ORDINAL2,SEQ_1,COMPTRIG,RFINSEQ,POLYNOM5;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_2,XREAL_0,COMPLEX1,REAL_1,NAT_1,POWER,BINOP_1,RELAT_1,FUNCT_1,FUNCT_2,PARTFUN1,FUNCOP_1,FINSEQ_1,FINSEQ_4,POLYNOM1,RVSUM_1,STRUCT_0,ALGSTR_0,RLVECT_1,VECTSP_2,VECTSP_1,RFINSEQ,CFCONT_1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,SEQ_4,XXREAL_0,COMSEQ_1,COMSEQ_2,NAT_D,COMPLFLD,HAHNBAN1,ALGSEQ_1,POLYNOM3,POLYNOM4,GROUP_1,FUNCT_7,RECDEF_1,CKB9,CKB17,CKB29;
definitions TARSKI,ALGSEQ_1,SEQ_4,XBOOLE_0,RVSUM_1,POLYNOM3,HAHNBAN1,STRUCT_0,ALGSTR_0,XCMPLX_0,XXREAL_2,CKB9,CKB17,CKB29;
theorems XREAL_0,TARSKI,ENUMSET1,NAT_1,POWER,INT_1,ABSVALUE,FUNCT_1,FUNCT_2,FUNCT_7,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,FUNCOP_1,TBSP_1,RFINSEQ,PRE_FF,CFCONT_1,TOPREAL3,INTEGRA5,RLVECT_1,VECTSP_1,RVSUM_1,SEQ_2,SEQM_3,SEQ_4,COMSEQ_2,COMSEQ_3,CFUNCT_1,FVSUM_1,GROUP_1,ALGSEQ_1,COMPLEX1,COMPLFLD,HAHNBAN1,POLYNOM1,POLYNOM2,POLYNOM3,POLYNOM4,XBOOLE_0,XCMPLX_1,VECTSP_2,XREAL_1,XXREAL_0,FINSOP_1,NORMSP_1,PARTFUN1,ORDINAL1,VALUED_1,RELAT_1,CARD_1,NAT_D,VALUED_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36;
schemes NAT_1,FUNCT_2,FINSEQ_2,FINSEQ_1,FINSEQ_4,SEQ_1,CFCONT_1,DOMAIN_1,FUNCT_7;
registrations FUNCT_1,ORDINAL1,RELSET_1,FUNCT_2,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,COMSEQ_2,STRUCT_0,GROUP_1,VECTSP_1,COMPLFLD,ALGSTR_1,POLYNOM3,POLYNOM4,VALUED_0,VALUED_1,FUNCOP_1,SEQ_4,CARD_1,CKB18,CKB30;
constructors FINSEQ_4,ENUMSET1,REAL_1,SEQ_4,FINSOP_1,COMSEQ_2,RVSUM_1,COMSEQ_3,CFCONT_1,RFINSEQ,NAT_D,FUNCSDOM,VECTSP_2,ALGSTR_1,MATRIX_2,HAHNBAN1,POLYNOM1,POLYNOM4,SEQ_1,RECDEF_1,BINOP_2,SUPINF_1,XXREAL_2,POWER,SEQ_2,RELSET_1,FUNCT_7,FVSUM_1,CKB9,CKB17,CKB29;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
theorem
Th31: (for L being  add-associative  right_zeroed  right_complementable  well-unital  distributive  commutative  associative  almost_left_invertible non  empty doubleLoopStr holds (for p being (Polynomial of L) holds (for v,x being (Element of L) holds ( eval (( v * p ),x) ) = ( v * ( eval (p,x) ) ))))
proof
let L being  add-associative  right_zeroed  right_complementable  well-unital  distributive  commutative  associative  almost_left_invertible non  empty doubleLoopStr;
let p being (Polynomial of L);
let v being (Element of L);
let x being (Element of L);
consider F1 being (FinSequence of (the carrier of L)) such that A1: ( eval (p,x) ) = ( Sum F1 ) and A2: ( len F1 ) = ( len p ) and A3: (for n being (Element of ( NAT )) holds (n in ( dom F1 ) implies ( F1 . n ) = ( ( p . ( n -' 1 ) ) * ( ( power L ) . (x,( n -' 1 )) ) ))) by POLYNOM4:def 2;
consider F2 being (FinSequence of (the carrier of L)) such that A4: ( eval (( v * p ),x) ) = ( Sum F2 ) and A5: ( len F2 ) = ( len ( v * p ) ) and A6: (for n being (Element of ( NAT )) holds (n in ( dom F2 ) implies ( F2 . n ) = ( ( ( v * p ) . ( n -' 1 ) ) * ( ( power L ) . (x,( n -' 1 )) ) ))) by POLYNOM4:def 2;
per cases ;
suppose v <> ( 0. L );

then ( len F1 ) = ( len F2 ) by A2,A5,CKB32:1;
then A7: ( dom F1 ) = ( dom F2 ) by FINSEQ_3:29;
now
let i being set;
assume A8: i in ( dom F1 );
then reconsider i1 = i as (Element of ( NAT ));
A9: ( ( p . ( i1 -' 1 ) ) * ( ( power L ) . (x,( i1 -' 1 )) ) ) = ( F1 . i ) by A3,A8
.= ( F1 /. i ) by A8,PARTFUN1:def 6;
thus ( F2 /. i ) = ( F2 . i ) by A7,A8,PARTFUN1:def 6
.= ( ( ( v * p ) . ( i1 -' 1 ) ) * ( ( power L ) . (x,( i1 -' 1 )) ) ) by A6,A7,A8
.= ( ( v * ( p . ( i1 -' 1 ) ) ) * ( ( power L ) . (x,( i1 -' 1 )) ) ) by CKB29:def 1
.= ( v * ( F1 /. i ) ) by A9,GROUP_1:def 3;
end;
then F2 = ( v * F1 ) by A7,POLYNOM1:def 1;
hence thesis by A1,A4,POLYNOM1:12;
end;
suppose A10: v = ( 0. L );

hence ( eval (( v * p ),x) ) = ( eval (( 0_. L ),x) ) by CKB33:1
.= ( 0. L ) by POLYNOM4:17
.= ( v * ( eval (p,x) ) ) by A10,VECTSP_1:7;
end;
end;
