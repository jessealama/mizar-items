environ
vocabularies NUMBERS,SUBSET_1,CARD_1,RELAT_1,ARYTM_1,ARYTM_3,XXREAL_0,XREAL_0,ORDINAL1,REAL_1,FINSEQ_1,FUNCT_1,CARD_3,ORDINAL4,TARSKI,PARTFUN1,XBOOLE_0,HAHNBAN1,XCMPLX_0,COMPLFLD,SUPINF_2,COMPLEX1,GROUP_1,POWER,STRUCT_0,NAT_1,RLVECT_1,ALGSTR_0,VECTSP_1,BINOP_1,LATTICES,POLYNOM1,ALGSEQ_1,POLYNOM3,POLYNOM2,VECTSP_2,MESFUNC1,AFINSQ_1,FUNCT_4,CQC_LANG,CFCONT_1,FUNCOP_1,VALUED_1,FUNCT_2,SEQ_4,XXREAL_2,COMSEQ_1,VALUED_0,SEQ_2,ORDINAL2,SEQ_1,COMPTRIG,RFINSEQ,POLYNOM5;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_2,XREAL_0,COMPLEX1,REAL_1,NAT_1,POWER,BINOP_1,RELAT_1,FUNCT_1,FUNCT_2,PARTFUN1,FUNCOP_1,FINSEQ_1,FINSEQ_4,POLYNOM1,RVSUM_1,STRUCT_0,ALGSTR_0,RLVECT_1,VECTSP_2,VECTSP_1,RFINSEQ,CFCONT_1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,SEQ_4,XXREAL_0,COMSEQ_1,COMSEQ_2,NAT_D,COMPLFLD,HAHNBAN1,ALGSEQ_1,POLYNOM3,POLYNOM4,GROUP_1,FUNCT_7,RECDEF_1,CKB9,CKB17,CKB29,CKB39,CKB58,CKB64,CKB65,CKB70,CKB71,CKB72,CKB82,CKB90;
definitions TARSKI,ALGSEQ_1,SEQ_4,XBOOLE_0,RVSUM_1,POLYNOM3,HAHNBAN1,STRUCT_0,ALGSTR_0,XCMPLX_0,XXREAL_2,CKB9,CKB17,CKB29,CKB39,CKB58,CKB64,CKB65,CKB70,CKB71,CKB72,CKB82,CKB90;
theorems XREAL_0,TARSKI,ENUMSET1,NAT_1,POWER,INT_1,ABSVALUE,FUNCT_1,FUNCT_2,FUNCT_7,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,FUNCOP_1,TBSP_1,RFINSEQ,PRE_FF,CFCONT_1,TOPREAL3,INTEGRA5,RLVECT_1,VECTSP_1,RVSUM_1,SEQ_2,SEQM_3,SEQ_4,COMSEQ_2,COMSEQ_3,CFUNCT_1,FVSUM_1,GROUP_1,ALGSEQ_1,COMPLEX1,COMPLFLD,HAHNBAN1,POLYNOM1,POLYNOM2,POLYNOM3,POLYNOM4,XBOOLE_0,XCMPLX_1,VECTSP_2,XREAL_1,XXREAL_0,FINSOP_1,NORMSP_1,PARTFUN1,ORDINAL1,VALUED_1,RELAT_1,CARD_1,NAT_D,VALUED_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB68,CKB70,CKB71,CKB72,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90;
schemes NAT_1,FUNCT_2,FINSEQ_2,FINSEQ_1,FINSEQ_4,SEQ_1,CFCONT_1,DOMAIN_1,FUNCT_7;
registrations FUNCT_1,ORDINAL1,RELSET_1,FUNCT_2,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,COMSEQ_2,STRUCT_0,GROUP_1,VECTSP_1,COMPLFLD,ALGSTR_1,POLYNOM3,POLYNOM4,VALUED_0,VALUED_1,FUNCOP_1,SEQ_4,CARD_1,CKB18,CKB30,CKB47,CKB67,CKB69,CKB73;
constructors FINSEQ_4,ENUMSET1,REAL_1,SEQ_4,FINSOP_1,COMSEQ_2,RVSUM_1,COMSEQ_3,CFCONT_1,RFINSEQ,NAT_D,FUNCSDOM,VECTSP_2,ALGSTR_1,MATRIX_2,HAHNBAN1,POLYNOM1,POLYNOM4,SEQ_1,RECDEF_1,BINOP_2,SUPINF_1,XXREAL_2,POWER,SEQ_2,RELSET_1,FUNCT_7,FVSUM_1,CKB9,CKB17,CKB29,CKB39,CKB58,CKB64,CKB65,CKB70,CKB71,CKB72,CKB82,CKB90;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
theorem
Th72: (for p being (Polynomial of ( F_Complex )) holds (ex f being (Function of ( COMPLEX ),( COMPLEX )) st (f = ( Polynomial-Function (( F_Complex ),p) ) & f is_continuous_on ( COMPLEX ))))
proof
set FuFF = ( Funcs (( COMPLEX ),( COMPLEX )) );
let p being (Polynomial of ( F_Complex ));
reconsider fzero = ( ( COMPLEX ) --> ( 0c ) ) as (Element of FuFF) by FUNCT_2:9;
defpred P[ Nat,set ]
 means
$2 = ( FPower (( p . ( $1 -' 1 ) ),( $1 -' 1 )) );
A1: (the carrier of ( F_Complex )) = ( COMPLEX ) by COMPLFLD:def 1;
then reconsider f = ( Polynomial-Function (( F_Complex ),p) ) as (Function of ( COMPLEX ),( COMPLEX ));
deffunc F((Element of FuFF),(Element of FuFF)) = ( $1 + $2 );
take f;
thus f = ( Polynomial-Function (( F_Complex ),p) );
A2: (for x,y being (Element of FuFF) holds F(x,y) in FuFF) by FUNCT_2:8;
consider fadd being (BinOp of FuFF) such that A3: (for x,y being (Element of FuFF) holds ( fadd . (x,y) ) = F(x,y)) from FUNCT_7:sch 1(A2);
reconsider L = addLoopStr (# FuFF,fadd,fzero #) as non  empty addLoopStr;
A4:now
let u being (Element of L);
let v being (Element of L);
let w being (Element of L);
reconsider u1 = u,v1 = v,w1 = w as (Function of ( COMPLEX ),( COMPLEX )) by FUNCT_2:66;
A5: ( u1 + v1 ) in ( Funcs (( COMPLEX ),( COMPLEX )) ) by FUNCT_2:9;
A6: ( v1 + w1 ) in ( Funcs (( COMPLEX ),( COMPLEX )) ) by FUNCT_2:9;
thus ( ( u + v ) + w ) = ( fadd . (( u1 + v1 ),w) ) by A3
.= ( ( u1 + v1 ) + w1 ) by A3,A5
.= ( u1 + ( v1 + w1 ) ) by CFUNCT_1:13
.= ( fadd . (u,( v1 + w1 )) ) by A3,A6
.= ( u + ( v + w ) ) by A3;
end;
A7:now
let v being (Element of L);
reconsider v1 = v as (Function of ( COMPLEX ),( COMPLEX )) by FUNCT_2:66;
A8:now
let x being (Element of ( COMPLEX ));
thus ( ( v1 + fzero ) . x ) = ( ( v1 . x ) + ( fzero . x ) ) by VALUED_1:1
.= ( ( v1 . x ) + ( 0c ) ) by FUNCOP_1:7
.= ( v1 . x );
end;
thus ( v + ( 0. L ) ) = ( v1 + fzero ) by A3
.= v by A8,FUNCT_2:63;
end;
L is  right_complementable
proof
let v being (Element of L);
reconsider v1 = v as (Function of ( COMPLEX ),( COMPLEX )) by FUNCT_2:66;
reconsider w = ( - v1 ) as (Element of L) by FUNCT_2:9;
take w;
A9:now
let x being (Element of ( COMPLEX ));
thus ( ( v1 + ( - v1 ) ) . x ) = ( ( v1 . x ) + ( ( - v1 ) . x ) ) by VALUED_1:1
.= ( ( v1 . x ) + ( - ( v1 . x ) ) ) by VALUED_1:8
.= ( fzero . x ) by FUNCOP_1:7;
end;
thus ( v + w ) = ( v1 + ( - v1 ) ) by A3
.= ( 0. L ) by A9,FUNCT_2:63;
end;
then reconsider L as  add-associative  right_zeroed  right_complementable non  empty addLoopStr by A4,A7,RLVECT_1:def 3,RLVECT_1:def 4;
A10:now
let n being Nat;
reconsider x = ( FPower (( p . ( n -' 1 ) ),( n -' 1 )) ) as (Element of L) by A1,FUNCT_2:9;
assume n in ( Seg ( len p ) );
take x;
thus P[ n,x ];
end;
consider F being (FinSequence of (the carrier of L)) such that A11: ( dom F ) = ( Seg ( len p ) ) and A12: (for n being Nat holds (n in ( Seg ( len p ) ) implies P[ n,( F . n ) ])) from FINSEQ_1:sch 5(A10);
A13: ( F | ( len F ) ) = F by FINSEQ_1:58;
reconsider SF = ( Sum F ) as (Function of ( COMPLEX ),( COMPLEX )) by FUNCT_2:66;
A14:now
let x being (Element of ( COMPLEX ));
reconsider x1 = x as (Element of ( F_Complex )) by COMPLFLD:def 1;
consider H being (FinSequence of (the carrier of ( F_Complex ))) such that A15: ( eval (p,x1) ) = ( Sum H ) and A16: ( len H ) = ( len p ) and A17: (for n being (Element of ( NAT )) holds (n in ( dom H ) implies ( H . n ) = ( ( p . ( n -' 1 ) ) * ( ( power ( F_Complex ) ) . (x1,( n -' 1 )) ) ))) by POLYNOM4:def 2;
defpred P[ (Element of ( NAT )) ]
 means
(for SFk being (Function of ( COMPLEX ),( COMPLEX )) holds (SFk = ( Sum ( F | $1 ) ) implies ( Sum ( H | $1 ) ) = ( SFk . x )));
A18: ( len F ) = ( len p ) by A11,FINSEQ_1:def 3;
A19: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being (Element of ( NAT ));
assume A20: (for SFk being (Function of ( COMPLEX ),( COMPLEX )) holds (SFk = ( Sum ( F | k ) ) implies ( Sum ( H | k ) ) = ( SFk . x )));
reconsider SFk1 = ( Sum ( F | k ) ) as (Function of ( COMPLEX ),( COMPLEX )) by FUNCT_2:66;
let SFk being (Function of ( COMPLEX ),( COMPLEX ));
assume A21: SFk = ( Sum ( F | ( k + 1 ) ) );
per cases ;
suppose A22: ( len F ) > k;

reconsider g2 = ( FPower (( p . k ),k) ) as (Function of ( COMPLEX ),( COMPLEX )) by A1;
A23: ( k + 1 ) >= 1 by NAT_1:11;
( k + 1 ) <= ( len F ) by A22,NAT_1:13;
then A24: ( k + 1 ) in ( dom F ) by A23,FINSEQ_3:25;
then A25: ( F /. ( k + 1 ) ) = ( F . ( k + 1 ) ) by PARTFUN1:def 6
.= ( FPower (( p . ( ( k + 1 ) -' 1 ) ),( ( k + 1 ) -' 1 )) ) by A11,A12,A24
.= ( FPower (( p . k ),( ( k + 1 ) -' 1 )) ) by NAT_D:34
.= ( FPower (( p . k ),k) ) by NAT_D:34;
( F | ( k + 1 ) ) = ( ( F | k ) ^ <* ( F . ( k + 1 ) ) *> ) by A22,POLYNOM3:19
.= ( ( F | k ) ^ <* ( F /. ( k + 1 ) ) *> ) by A24,PARTFUN1:def 6;
then A26: SFk = ( ( Sum ( F | k ) ) + ( F /. ( k + 1 ) ) ) by A21,FVSUM_1:71
.= ( SFk1 + g2 ) by A3,A25;
A27: ( Sum ( H | k ) ) = ( SFk1 . x ) by A20;
A28: ( dom F ) = ( dom H ) by A11,A16,FINSEQ_1:def 3;
then A29: ( H /. ( k + 1 ) ) = ( H . ( k + 1 ) ) by A24,PARTFUN1:def 6
.= ( ( p . ( ( k + 1 ) -' 1 ) ) * ( ( power ( F_Complex ) ) . (x1,( ( k + 1 ) -' 1 )) ) ) by A17,A28,A24
.= ( ( p . k ) * ( ( power ( F_Complex ) ) . (x1,( ( k + 1 ) -' 1 )) ) ) by NAT_D:34
.= ( ( p . k ) * ( ( power ( F_Complex ) ) . (x1,k) ) ) by NAT_D:34
.= ( ( FPower (( p . k ),k) ) . x ) by CKB82:def 1;
( H | ( k + 1 ) ) = ( ( H | k ) ^ <* ( H . ( k + 1 ) ) *> ) by A16,A18,A22,POLYNOM3:19
.= ( ( H | k ) ^ <* ( H /. ( k + 1 ) ) *> ) by A28,A24,PARTFUN1:def 6;
hence ( Sum ( H | ( k + 1 ) ) ) = ( ( Sum ( H | k ) ) + ( H /. ( k + 1 ) ) ) by FVSUM_1:71
.= ( SFk . x ) by A29,A26,A27,VALUED_1:1;
end;
suppose A30: ( len F ) <= k;

k <= ( k + 1 ) by NAT_1:11;
then A31: (( F | ( k + 1 ) ) = F & ( H | ( k + 1 ) ) = H) by A16,A18,A30,FINSEQ_1:58,XXREAL_0:2;
(( F | k ) = F & ( H | k ) = H) by A16,A18,A30,FINSEQ_1:58;
hence thesis by A20,A21,A31;
end;
end;
A32: P[ ( 0 ) ]
proof
let SFk being (Function of ( COMPLEX ),( COMPLEX ));
A33: ( F | ( 0 ) ) = ( <*> (the carrier of L) );
assume SFk = ( Sum ( F | ( 0 ) ) );
then A34: SFk = ( 0. L ) by A33,RLVECT_1:43
.= ( ( COMPLEX ) --> ( 0c ) );
( H | ( 0 ) ) = ( <*> (the carrier of ( F_Complex )) );
hence ( Sum ( H | ( 0 ) ) ) = ( 0. ( F_Complex ) ) by RLVECT_1:43
.= ( SFk . x ) by A34,COMPLFLD:7,FUNCOP_1:7;
end;
A35: (for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A32,A19);
A36: ( Sum ( F | ( len F ) ) ) = SF by FINSEQ_1:58;
thus ( f . x ) = ( Sum H ) by A15,CKB90:def 1
.= ( Sum ( H | ( len H ) ) ) by FINSEQ_1:58
.= ( SF . x ) by A16,A18,A35,A36;
end;
defpred P[ (Element of ( NAT )) ]
 means
(for g being (PartFunc of ( COMPLEX ),( COMPLEX )) holds (g = ( Sum ( F | $1 ) ) implies g is_continuous_on ( COMPLEX )));
A37: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being (Element of ( NAT ));
reconsider g1 = ( Sum ( F | k ) ) as (Function of ( COMPLEX ),( COMPLEX )) by FUNCT_2:66;
assume A38: (for g being (PartFunc of ( COMPLEX ),( COMPLEX )) holds (g = ( Sum ( F | k ) ) implies g is_continuous_on ( COMPLEX )));
then A39: g1 is_continuous_on ( COMPLEX );
let g being (PartFunc of ( COMPLEX ),( COMPLEX ));
assume A40: g = ( Sum ( F | ( k + 1 ) ) );
per cases ;
suppose A41: ( len F ) > k;

A42: ( k + 1 ) >= 1 by NAT_1:11;
( k + 1 ) <= ( len F ) by A41,NAT_1:13;
then A43: ( k + 1 ) in ( dom F ) by A42,FINSEQ_3:25;
then A44: ( F /. ( k + 1 ) ) = ( F . ( k + 1 ) ) by PARTFUN1:def 6
.= ( FPower (( p . ( ( k + 1 ) -' 1 ) ),( ( k + 1 ) -' 1 )) ) by A11,A12,A43
.= ( FPower (( p . k ),( ( k + 1 ) -' 1 )) ) by NAT_D:34
.= ( FPower (( p . k ),k) ) by NAT_D:34;
consider g2 being (Function of ( COMPLEX ),( COMPLEX )) such that A45: g2 = ( FPower (( p . k ),k) ) and A46: g2 is_continuous_on ( COMPLEX ) by CKB89:1;
( F | ( k + 1 ) ) = ( ( F | k ) ^ <* ( F . ( k + 1 ) ) *> ) by A41,POLYNOM3:19
.= ( ( F | k ) ^ <* ( F /. ( k + 1 ) ) *> ) by A43,PARTFUN1:def 6;
then g = ( ( Sum ( F | k ) ) + ( F /. ( k + 1 ) ) ) by A40,FVSUM_1:71
.= ( g1 + g2 ) by A3,A44,A45;
hence thesis by A39,A46,CFCONT_1:43;
end;
suppose A47: ( len F ) <= k;

k <= ( k + 1 ) by NAT_1:11;
then ( F | ( k + 1 ) ) = F by A47,FINSEQ_1:58,XXREAL_0:2
.= ( F | k ) by A47,FINSEQ_1:58;
hence thesis by A38,A40;
end;
end;
A48: P[ ( 0 ) ]
proof
let g being (PartFunc of ( COMPLEX ),( COMPLEX ));
A49: ( F | ( 0 ) ) = ( <*> (the carrier of L) );
assume g = ( Sum ( F | ( 0 ) ) );
then g = ( 0. L ) by A49,RLVECT_1:43
.= ( ( COMPLEX ) --> ( 0c ) );
hence thesis by CKB81:1;
end;
(for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A48,A37);
hence thesis by A13,A14,FUNCT_2:63;
end;
