environ
vocabularies RLVECT_1,SUBSET_1,REAL_1,RELAT_1,CARD_1,SUPINF_2,ARYTM_3,ARYTM_1,XCMPLX_0,EQREL_1,STRUCT_0,SETFAM_1,ZFMISC_1,XBOOLE_0,COLLSP,TARSKI,ANPROJ_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,REAL_1,EQREL_1,SETFAM_1,NUMBERS,STRUCT_0,COLLSP,RLVECT_1,MCART_1,CKB1,CKB5;
definitions STRUCT_0,CKB1,CKB5;
theorems RLVECT_1,RELAT_1,DOMAIN_1,FUNCSDOM,ANALOAF,TARSKI,EQREL_1,COLLSP,MCART_1,XCMPLX_0,XCMPLX_1,STRUCT_0,ZFMISC_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes EQREL_1,XBOOLE_0;
registrations RELSET_1,STRUCT_0,RLVECT_1,COLLSP,REAL_1,XREAL_0,ORDINAL1;
constructors REAL_1,EQREL_1,RLVECT_1,COLLSP,CKB1,CKB5;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve V for RealLinearSpace;
reserve p for (Element of V);
reserve q for (Element of V);
reserve u for (Element of V);
reserve v for (Element of V);
reserve y for (Element of V);
reserve a for Real;
reserve b for Real;
theorem
((((not  are_Prop p,q) & (not p is  zero)) & (not q is  zero)) implies (for u holds (for v holds (ex y st ((((not y is  zero) & u,v,y are_LinDep ) & (not  are_Prop u,y)) & (not  are_Prop v,y))))))
proof
assume that
A1: (not  are_Prop p,q)
and
A2: (not p is  zero)
and
A3: (not q is  zero);
let u;
let v;
A4:now
assume that
(not  are_Prop u,v)
and
A5: (not (not u is  zero));
A6: u = ( 0. V ) by A5,STRUCT_0:def 12;
then A7: ((not  are_Prop v,q) implies ((((not  are_Prop v,q) & (not q is  zero)) & u,v,q are_LinDep ) & (not  are_Prop u,q))) by A3,CKB4:1,CKB18:1;
((not  are_Prop v,p) implies ((((not  are_Prop v,p) & (not p is  zero)) & u,v,p are_LinDep ) & (not  are_Prop u,p))) by A2,A6,CKB4:1,CKB18:1;
hence thesis by A1,A7,CKB3:1;
end;
A8:now
set y = ( u + v );
assume that
A9: (not  are_Prop u,v)
and
A10: (not u is  zero)
and
A11: (not v is  zero);
( u + v ) <> ( 0. V ) by A9,CKB21:1;
hence (not y is  zero) by STRUCT_0:def 12;
( ( ( 1 * u ) + ( 1 * v ) ) + ( ( - 1 ) * y ) ) = ( ( u + ( 1 * v ) ) + ( ( - 1 ) * ( u + v ) ) ) by RLVECT_1:def 8
.= ( ( u + v ) + ( ( - 1 ) * ( u + v ) ) ) by RLVECT_1:def 8
.= ( ( u + v ) + ( - ( u + v ) ) ) by RLVECT_1:16
.= ( ( v + u ) + ( ( - u ) + ( - v ) ) ) by RLVECT_1:31
.= ( v + ( u + ( ( - u ) + ( - v ) ) ) ) by RLVECT_1:def 3
.= ( v + ( ( u + ( - u ) ) + ( - v ) ) ) by RLVECT_1:def 3
.= ( v + ( ( 0. V ) + ( - v ) ) ) by RLVECT_1:5
.= ( v + ( - v ) ) by RLVECT_1:4
.= ( 0. V ) by RLVECT_1:5;
hence u,v,y are_LinDep  by CKB5:def 1;
A12: v <> ( 0. V ) by A11;
now
let a;
let b;
assume ( a * u ) = ( b * y );
then ( ( - ( b * u ) ) + ( a * u ) ) = ( ( - ( b * u ) ) + ( ( b * u ) + ( b * v ) ) ) by RLVECT_1:def 5
.= ( ( ( b * u ) + ( - ( b * u ) ) ) + ( b * v ) ) by RLVECT_1:def 3
.= ( ( 0. V ) + ( b * v ) ) by RLVECT_1:5
.= ( b * v ) by RLVECT_1:4;
then A13: ( b * v ) = ( ( a * u ) + ( b * ( - u ) ) ) by RLVECT_1:25
.= ( ( a * u ) + ( ( - b ) * u ) ) by RLVECT_1:24
.= ( ( a + ( - b ) ) * u ) by RLVECT_1:def 6;
now
assume ( a + ( - b ) ) = ( 0 );
then ( b * v ) = ( 0. V ) by A13,RLVECT_1:10;
hence b = ( 0 ) by A12,RLVECT_1:11;
end;
hence (a = ( 0 ) or b = ( 0 )) by A9,A13,CKB1:def 1;
end;
hence (not  are_Prop u,y) by CKB1:def 1;
A14: u <> ( 0. V ) by A10;
now
let a;
let b;
assume ( a * v ) = ( b * y );
then ( ( a * v ) + ( - ( b * v ) ) ) = ( ( ( b * u ) + ( b * v ) ) + ( - ( b * v ) ) ) by RLVECT_1:def 5
.= ( ( b * u ) + ( ( b * v ) + ( - ( b * v ) ) ) ) by RLVECT_1:def 3
.= ( ( b * u ) + ( 0. V ) ) by RLVECT_1:5
.= ( b * u ) by RLVECT_1:4;
then A15: ( b * u ) = ( ( a * v ) + ( b * ( - v ) ) ) by RLVECT_1:25
.= ( ( a * v ) + ( ( - b ) * v ) ) by RLVECT_1:24
.= ( ( a + ( - b ) ) * v ) by RLVECT_1:def 6;
now
assume ( a + ( - b ) ) = ( 0 );
then ( b * u ) = ( 0. V ) by A15,RLVECT_1:10;
hence b = ( 0 ) by A14,RLVECT_1:11;
end;
hence (a = ( 0 ) or b = ( 0 )) by A9,A15,CKB1:def 1;
end;
hence (not  are_Prop v,y) by CKB1:def 1;
end;
A16:now
assume that
(not  are_Prop u,v)
and
A17: (not (not v is  zero));
A18: v = ( 0. V ) by A17,STRUCT_0:def 12;
then A19: ((not  are_Prop u,q) implies ((((not q is  zero) & u,v,q are_LinDep ) & (not  are_Prop u,q)) & (not  are_Prop v,q))) by A3,CKB4:1,CKB18:1;
((not  are_Prop u,p) implies ((((not p is  zero) & u,v,p are_LinDep ) & (not  are_Prop u,p)) & (not  are_Prop v,p))) by A2,A18,CKB4:1,CKB18:1;
hence thesis by A1,A19,CKB3:1;
end;
now
assume A20:  are_Prop u,v;
then A21: ((not  are_Prop u,q) implies ((((not q is  zero) & u,v,q are_LinDep ) & (not  are_Prop u,q)) & (not  are_Prop v,q))) by A3,CKB3:1,CKB19:1;
((not  are_Prop u,p) implies ((((not p is  zero) & u,v,p are_LinDep ) & (not  are_Prop u,p)) & (not  are_Prop v,p))) by A2,A20,CKB3:1,CKB19:1;
hence thesis by A1,A21,CKB3:1;
end;
hence thesis by A8,A4,A16;
end;
