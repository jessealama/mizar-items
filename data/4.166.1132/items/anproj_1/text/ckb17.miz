environ
vocabularies RLVECT_1,SUBSET_1,REAL_1,RELAT_1,CARD_1,SUPINF_2,ARYTM_3,ARYTM_1,XCMPLX_0,EQREL_1,STRUCT_0,SETFAM_1,ZFMISC_1,XBOOLE_0,COLLSP,TARSKI,ANPROJ_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,REAL_1,EQREL_1,SETFAM_1,NUMBERS,STRUCT_0,COLLSP,RLVECT_1,MCART_1,CKB1,CKB5;
definitions STRUCT_0,CKB1,CKB5;
theorems RLVECT_1,RELAT_1,DOMAIN_1,FUNCSDOM,ANALOAF,TARSKI,EQREL_1,COLLSP,MCART_1,XCMPLX_0,XCMPLX_1,STRUCT_0,ZFMISC_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
schemes EQREL_1,XBOOLE_0;
registrations RELSET_1,STRUCT_0,RLVECT_1,COLLSP,REAL_1,XREAL_0,ORDINAL1;
constructors REAL_1,EQREL_1,RLVECT_1,COLLSP,CKB1,CKB5;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve V for RealLinearSpace;
reserve p for (Element of V);
reserve q for (Element of V);
reserve u for (Element of V);
reserve v for (Element of V);
reserve a1 for Real;
reserve b1 for Real;
reserve a2 for Real;
reserve b2 for Real;
theorem
Th14: (((((((not  are_Prop p,q) & u = ( ( a1 * p ) + ( b1 * q ) )) & v = ( ( a2 * p ) + ( b2 * q ) )) & ( ( a1 * b2 ) - ( a2 * b1 ) ) = ( 0 )) & (not p is  zero)) & (not q is  zero)) implies (( are_Prop u,v or u = ( 0. V )) or v = ( 0. V )))
proof
assume that
A1: (not  are_Prop p,q)
and
A2: u = ( ( a1 * p ) + ( b1 * q ) )
and
A3: v = ( ( a2 * p ) + ( b2 * q ) )
and
A4: ( ( a1 * b2 ) - ( a2 * b1 ) ) = ( 0 )
and
A5: ((not p is  zero) & (not q is  zero));
now
assume that
u <> ( 0. V )
and
v <> ( 0. V );
A6: (for p holds (for q holds (for u holds (for v holds (for a1 holds (for a2 holds (for b1 holds (for b2 holds ((((((((((not  are_Prop p,q) & u = ( ( a1 * p ) + ( b1 * q ) )) & v = ( ( a2 * p ) + ( b2 * q ) )) & ( ( a1 * b2 ) - ( a2 * b1 ) ) = ( 0 )) & (not p is  zero)) & (not q is  zero)) & a1 = ( 0 )) & u <> ( 0. V )) & v <> ( 0. V )) implies  are_Prop u,v)))))))))
proof
let p;
let q;
let u;
let v;
let a1;
let a2;
let b1;
let b2;
assume that
(not  are_Prop p,q)
and
A7: u = ( ( a1 * p ) + ( b1 * q ) )
and
A8: v = ( ( a2 * p ) + ( b2 * q ) )
and
A9: ( ( a1 * b2 ) - ( a2 * b1 ) ) = ( 0 )
and
(not p is  zero)
and
(not q is  zero)
and
A10: a1 = ( 0 )
and
A11: u <> ( 0. V )
and
A12: v <> ( 0. V );
( 0 ) = ( ( - a2 ) * b1 ) by A9,A10;
then A13: (( - a2 ) = ( 0 ) or b1 = ( 0 )) by XCMPLX_1:6;
A14:now
assume b1 = ( 0 );
then u = ( ( 0. V ) + ( ( 0 ) * q ) ) by A7,A10,RLVECT_1:10
.= ( ( 0. V ) + ( 0. V ) ) by RLVECT_1:10;
hence contradiction by A11,RLVECT_1:4;
end;
then A15: ( b1 " ) <> ( 0 ) by XCMPLX_1:202;
A16:now
assume ( b2 * ( b1 " ) ) = ( 0 );
then b2 = ( 0 ) by A15,XCMPLX_1:6;
then v = ( ( 0. V ) + ( ( 0 ) * q ) ) by A8,A13,A14,RLVECT_1:10
.= ( ( 0. V ) + ( 0. V ) ) by RLVECT_1:10;
hence contradiction by A12,RLVECT_1:4;
end;
u = ( ( 0. V ) + ( b1 * q ) ) by A7,A10,RLVECT_1:10;
then A17: u = ( b1 * q ) by RLVECT_1:4;
v = ( ( 0. V ) + ( b2 * q ) ) by A8,A13,A14,RLVECT_1:10;
then v = ( b2 * q ) by RLVECT_1:4;
then v = ( b2 * ( ( b1 " ) * u ) ) by A14,A17,ANALOAF:5;
then v = ( ( b2 * ( b1 " ) ) * u ) by RLVECT_1:def 7;
then ( 1 * v ) = ( ( b2 * ( b1 " ) ) * u ) by RLVECT_1:def 8;
hence thesis by A16,CKB1:def 1;
end;
now
assume that
A18: a1 <> ( 0 )
and
A19: a2 <> ( 0 );
A20:now
( a1 " ) <> ( 0 ) by A18,XCMPLX_1:202;
then A21: ( a2 * ( a1 " ) ) <> ( 0 ) by A19,XCMPLX_1:6;
assume A22: b1 = ( 0 );
then b2 = ( 0 ) by A4,A18,XCMPLX_1:6;
then v = ( ( a2 * p ) + ( 0. V ) ) by A3,RLVECT_1:10;
then A23: v = ( a2 * p ) by RLVECT_1:4;
u = ( ( a1 * p ) + ( 0. V ) ) by A2,A22,RLVECT_1:10;
then u = ( a1 * p ) by RLVECT_1:4;
then v = ( a2 * ( ( a1 " ) * u ) ) by A18,A23,ANALOAF:5
.= ( ( a2 * ( a1 " ) ) * u ) by RLVECT_1:def 7;
then ( 1 * v ) = ( ( a2 * ( a1 " ) ) * u ) by RLVECT_1:def 8;
hence  are_Prop u,v by A21,CKB1:def 1;
end;
now
A24: (( b2 * u ) = ( ( ( a1 * b2 ) * p ) + ( ( b2 * b1 ) * q ) ) & ( b1 * v ) = ( ( ( a2 * b1 ) * p ) + ( ( b1 * b2 ) * q ) )) by A2,A3,CKB13:1;
assume A25: b1 <> ( 0 );
then b2 <> ( 0 ) by A4,A19,XCMPLX_1:6;
hence  are_Prop u,v by A4,A25,A24,CKB1:def 1;
end;
hence thesis by A20;
end;
hence thesis by A1,A2,A3,A4,A5,A6;
end;
hence thesis;
end;
