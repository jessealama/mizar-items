environ
vocabularies RLVECT_1,SUBSET_1,REAL_1,RELAT_1,CARD_1,SUPINF_2,ARYTM_3,ARYTM_1,XCMPLX_0,EQREL_1,STRUCT_0,SETFAM_1,ZFMISC_1,XBOOLE_0,COLLSP,TARSKI,ANPROJ_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,REAL_1,EQREL_1,SETFAM_1,NUMBERS,STRUCT_0,COLLSP,RLVECT_1,MCART_1,CKB1,CKB5;
definitions STRUCT_0,CKB1,CKB5;
theorems RLVECT_1,RELAT_1,DOMAIN_1,FUNCSDOM,ANALOAF,TARSKI,EQREL_1,COLLSP,MCART_1,XCMPLX_0,XCMPLX_1,STRUCT_0,ZFMISC_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9;
schemes EQREL_1,XBOOLE_0;
registrations RELSET_1,STRUCT_0,RLVECT_1,COLLSP,REAL_1,XREAL_0,ORDINAL1;
constructors REAL_1,EQREL_1,RLVECT_1,COLLSP,CKB1,CKB5;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve V for RealLinearSpace;
reserve u for (Element of V);
reserve v for (Element of V);
reserve w for (Element of V);
reserve a for Real;
reserve b for Real;
reserve c for Real;
theorem
Th11: ((((not v is  zero) & (not w is  zero)) & (not  are_Prop v,w)) implies (v,w,u are_LinDep  iff (ex a st (ex b st u = ( ( a * v ) + ( b * w ) )))))
proof
assume that
A1: (not v is  zero)
and
A2: (not w is  zero)
and
A3: (not  are_Prop v,w);
A4: w <> ( 0. V ) by A2;
A5: v <> ( 0. V ) by A1;
A6: (v,w,u are_LinDep  implies (ex a st (ex b st u = ( ( a * v ) + ( b * w ) ))))
proof
assume v,w,u are_LinDep ;
then u,v,w are_LinDep  by CKB7:1;
then consider a,b,c such that A7: ( ( ( a * u ) + ( b * v ) ) + ( c * w ) ) = ( 0. V ) and A8: ((a <> ( 0 ) or b <> ( 0 )) or c <> ( 0 )) by CKB5:def 1;
a <> ( 0 )
proof
assume A9: a = ( 0 );
then A10: ( 0. V ) = ( ( ( 0. V ) + ( b * v ) ) + ( c * w ) ) by A7,RLVECT_1:10
.= ( ( b * v ) + ( c * w ) ) by RLVECT_1:4;
A11: b <> ( 0 )
proof
assume A12: b = ( 0 );
then ( 0. V ) = ( ( 0. V ) + ( c * w ) ) by A10,RLVECT_1:10
.= ( c * w ) by RLVECT_1:4;
hence thesis by A4,A8,A9,A12,RLVECT_1:11;
end;
A13: c <> ( 0 )
proof
assume A14: c = ( 0 );
then ( 0. V ) = ( ( b * v ) + ( 0. V ) ) by A10,RLVECT_1:10
.= ( b * v ) by RLVECT_1:4;
hence thesis by A5,A8,A9,A14,RLVECT_1:11;
end;
( b * v ) = ( ( - c ) * w ) by A10,CKB8:1;
then (b = ( 0 ) or ( - c ) = ( 0 )) by A3,CKB1:def 1;
hence contradiction by A11,A13;
end;
then u = ( ( ( - ( ( a " ) * b ) ) * v ) + ( ( - ( ( a " ) * c ) ) * w ) ) by A7,CKB9:1;
hence thesis;
end;
((ex a st (ex b st u = ( ( a * v ) + ( b * w ) ))) implies v,w,u are_LinDep )
proof
given a,b such that
A15: u = ( ( a * v ) + ( b * w ) );

( 0. V ) = ( ( ( a * v ) + ( b * w ) ) + ( - u ) ) by A15,RLVECT_1:5
.= ( ( ( a * v ) + ( b * w ) ) + ( ( - 1 ) * u ) ) by RLVECT_1:16;
hence thesis by CKB5:def 1;
end;
hence thesis by A6;
end;
