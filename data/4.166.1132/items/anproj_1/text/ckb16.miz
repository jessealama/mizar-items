environ
vocabularies RLVECT_1,SUBSET_1,REAL_1,RELAT_1,CARD_1,SUPINF_2,ARYTM_3,ARYTM_1,XCMPLX_0,EQREL_1,STRUCT_0,SETFAM_1,ZFMISC_1,XBOOLE_0,COLLSP,TARSKI,ANPROJ_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,REAL_1,EQREL_1,SETFAM_1,NUMBERS,STRUCT_0,COLLSP,RLVECT_1,MCART_1,CKB1,CKB5;
definitions STRUCT_0,CKB1,CKB5;
theorems RLVECT_1,RELAT_1,DOMAIN_1,FUNCSDOM,ANALOAF,TARSKI,EQREL_1,COLLSP,MCART_1,XCMPLX_0,XCMPLX_1,STRUCT_0,ZFMISC_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15;
schemes EQREL_1,XBOOLE_0;
registrations RELSET_1,STRUCT_0,RLVECT_1,COLLSP,REAL_1,XREAL_0,ORDINAL1;
constructors REAL_1,EQREL_1,RLVECT_1,COLLSP,CKB1,CKB5;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve V for RealLinearSpace;
reserve u for (Element of V);
reserve v for (Element of V);
reserve w for (Element of V);
reserve a1 for Real;
reserve b1 for Real;
reserve c1 for Real;
reserve a2 for Real;
reserve b2 for Real;
reserve c2 for Real;
theorem
(((not u,v,w are_LinDep ) & ( ( ( a1 * u ) + ( b1 * v ) ) + ( c1 * w ) ) = ( ( ( a2 * u ) + ( b2 * v ) ) + ( c2 * w ) )) implies ((a1 = a2 & b1 = b2) & c1 = c2))
proof
A1: (( ( ( a1 * u ) + ( b1 * v ) ) + ( c1 * w ) ) = ( ( ( a2 * u ) + ( b2 * v ) ) + ( c2 * w ) ) implies ( ( ( ( a1 - a2 ) * u ) + ( ( b1 - b2 ) * v ) ) + ( ( c1 - c2 ) * w ) ) = ( 0. V ))
proof
assume ( ( ( a1 * u ) + ( b1 * v ) ) + ( c1 * w ) ) = ( ( ( a2 * u ) + ( b2 * v ) ) + ( c2 * w ) );
then ( ( ( c1 - c2 ) * w ) + ( ( a1 * u ) + ( b1 * v ) ) ) = ( ( a2 * u ) + ( b2 * v ) ) by CKB15:1;
then ( ( ( ( c1 - c2 ) * w ) + ( a1 * u ) ) + ( b1 * v ) ) = ( ( a2 * u ) + ( b2 * v ) ) by RLVECT_1:def 3;
then ( ( ( b1 - b2 ) * v ) + ( ( ( c1 - c2 ) * w ) + ( a1 * u ) ) ) = ( a2 * u ) by CKB15:1;
then ( ( ( ( b1 - b2 ) * v ) + ( ( c1 - c2 ) * w ) ) + ( a1 * u ) ) = ( a2 * u ) by RLVECT_1:def 3;
then ( ( ( ( b1 - b2 ) * v ) + ( ( c1 - c2 ) * w ) ) + ( a1 * u ) ) = ( ( 0. V ) + ( a2 * u ) ) by RLVECT_1:4;
then ( ( ( a1 - a2 ) * u ) + ( ( ( b1 - b2 ) * v ) + ( ( c1 - c2 ) * w ) ) ) = ( 0. V ) by CKB15:1;
hence thesis by RLVECT_1:def 3;
end;
assume A2: ((not u,v,w are_LinDep ) & ( ( ( a1 * u ) + ( b1 * v ) ) + ( c1 * w ) ) = ( ( ( a2 * u ) + ( b2 * v ) ) + ( c2 * w ) ));
then A3: ( c1 - c2 ) = ( 0 ) by A1,CKB5:def 1;
(( a1 - a2 ) = ( 0 ) & ( b1 - b2 ) = ( 0 )) by A2,A1,CKB5:def 1;
hence thesis by A3;
end;
