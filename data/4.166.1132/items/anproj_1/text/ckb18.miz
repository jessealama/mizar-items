environ
vocabularies RLVECT_1,SUBSET_1,REAL_1,RELAT_1,CARD_1,SUPINF_2,ARYTM_3,ARYTM_1,XCMPLX_0,EQREL_1,STRUCT_0,SETFAM_1,ZFMISC_1,XBOOLE_0,COLLSP,TARSKI,ANPROJ_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,REAL_1,EQREL_1,SETFAM_1,NUMBERS,STRUCT_0,COLLSP,RLVECT_1,MCART_1,CKB1,CKB5;
definitions STRUCT_0,CKB1,CKB5;
theorems RLVECT_1,RELAT_1,DOMAIN_1,FUNCSDOM,ANALOAF,TARSKI,EQREL_1,COLLSP,MCART_1,XCMPLX_0,XCMPLX_1,STRUCT_0,ZFMISC_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes EQREL_1,XBOOLE_0;
registrations RELSET_1,STRUCT_0,RLVECT_1,COLLSP,REAL_1,XREAL_0,ORDINAL1;
constructors REAL_1,EQREL_1,RLVECT_1,COLLSP,CKB1,CKB5;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve V for RealLinearSpace;
reserve u for (Element of V);
reserve v for (Element of V);
reserve w for (Element of V);
theorem
Th15: (((u = ( 0. V ) or v = ( 0. V )) or w = ( 0. V )) implies u,v,w are_LinDep )
proof
A1: (for u holds (for v holds (for w holds (u = ( 0. V ) implies u,v,w are_LinDep ))))
proof
let u;
let v;
let w;
assume that
A2: u = ( 0. V );
( 0. V ) = ( ( 0. V ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( 1 * u ) + ( 0. V ) ) by A2,RLVECT_1:10
.= ( ( 1 * u ) + ( ( 0 ) * v ) ) by RLVECT_1:10
.= ( ( ( 1 * u ) + ( ( 0 ) * v ) ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( 1 * u ) + ( ( 0 ) * v ) ) + ( ( 0 ) * w ) ) by RLVECT_1:10;
hence thesis by CKB5:def 1;
end;
A3:now
assume v = ( 0. V );
then v,w,u are_LinDep  by A1;
hence thesis by CKB7:1;
end;
A4:now
assume w = ( 0. V );
then w,u,v are_LinDep  by A1;
hence thesis by CKB7:1;
end;
assume ((u = ( 0. V ) or v = ( 0. V )) or w = ( 0. V ));
hence thesis by A1,A3,A4;
end;
