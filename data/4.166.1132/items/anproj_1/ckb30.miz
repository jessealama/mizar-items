environ
vocabularies RLVECT_1,SUBSET_1,REAL_1,RELAT_1,CARD_1,SUPINF_2,ARYTM_3,ARYTM_1,XCMPLX_0,EQREL_1,STRUCT_0,SETFAM_1,ZFMISC_1,XBOOLE_0,COLLSP,TARSKI,ANPROJ_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,REAL_1,EQREL_1,SETFAM_1,NUMBERS,STRUCT_0,COLLSP,RLVECT_1,MCART_1,CKB1,CKB5;
definitions STRUCT_0,CKB1,CKB5;
theorems RLVECT_1,RELAT_1,DOMAIN_1,FUNCSDOM,ANALOAF,TARSKI,EQREL_1,COLLSP,MCART_1,XCMPLX_0,XCMPLX_1,STRUCT_0,ZFMISC_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
schemes EQREL_1,XBOOLE_0;
registrations RELSET_1,STRUCT_0,RLVECT_1,COLLSP,REAL_1,XREAL_0,ORDINAL1;
constructors REAL_1,EQREL_1,RLVECT_1,COLLSP,CKB1,CKB5;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve V for RealLinearSpace;
reserve x for set;
reserve y for set;
reserve z for set;
definition
let V;
func Proportionality_as_EqRel_of V -> (Equivalence_Relation of ( NonZero V ))
means
:Def5: (for x holds (for y holds ([ x,y ] in it iff ((x in ( NonZero V ) & y in ( NonZero V )) & (ex u,v being (Element of V) st ((x = u & y = v) &  are_Prop u,v))))));
existence
proof
defpred P[ set,set ]
 means
(ex u,v being (Element of V) st (($1 = u & $2 = v) &  are_Prop u,v));
A1: (for x holds (x in ( NonZero V ) implies P[ x,x ]));
A2: (for x holds (for y holds (P[ x,y ] implies P[ y,x ])));
A3: (for x holds (for y holds (for z holds ((P[ x,y ] & P[ y,z ]) implies P[ x,z ])))) by CKB3:1;
consider R being (Equivalence_Relation of ( NonZero V )) such that A4: (for x holds (for y holds ([ x,y ] in R iff ((x in ( NonZero V ) & y in ( NonZero V )) & P[ x,y ])))) from EQREL_1:sch 1(A1,A2,A3);
take R;
thus thesis by A4;
end;
uniqueness
proof
let R1 being (Equivalence_Relation of ( NonZero V )),R2 being (Equivalence_Relation of ( NonZero V ));
assume that
A5: (for x holds (for y holds ([ x,y ] in R1 iff ((x in ( NonZero V ) & y in ( NonZero V )) & (ex u,v being (Element of V) st ((x = u & y = v) &  are_Prop u,v))))))
and
A6: (for x holds (for y holds ([ x,y ] in R2 iff ((x in ( NonZero V ) & y in ( NonZero V )) & (ex u,v being (Element of V) st ((x = u & y = v) &  are_Prop u,v))))));
(for x holds (for y holds ([ x,y ] in R1 iff [ x,y ] in R2)))
proof
let x;
let y;
A7:now
assume A8: [ x,y ] in R2;
then A9: (ex u,v being (Element of V) st ((x = u & y = v) &  are_Prop u,v)) by A6;
(x in ( NonZero V ) & y in ( NonZero V )) by A6,A8;
hence [ x,y ] in R1 by A5,A9;
end;
now
assume A10: [ x,y ] in R1;
then A11: (ex u,v being (Element of V) st ((x = u & y = v) &  are_Prop u,v)) by A5;
(x in ( NonZero V ) & y in ( NonZero V )) by A5,A10;
hence [ x,y ] in R2 by A6,A11;
end;
hence thesis by A7;
end;
hence thesis by RELAT_1:def 2;
end;
end;
