environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMPDS_2,SCMFSA_7,CARD_1,FUNCOP_1,RELAT_1,FUNCT_1,NAT_1,ARYTM_3,XBOOLE_0,TARSKI,VALUED_1,SCMNORM,FSM_1,INT_1,FUNCT_4,GRAPHSP,AMI_3,AMI_2,STRUCT_0,SCMPDS_1,COMPLEX1,XXREAL_0,ARYTM_1,TURING_1,AMISTD_2,SCMFSA6B,MSUALG_1,CIRCUIT2,SCMPDS_4,ORDINAL1,PARTFUN1,SCMFSA6C,ORDINAL4,PBOOLE,FINSET_1,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,FINSET_1,NUMBERS,XCMPLX_0,RELAT_1,FUNCT_1,PARTFUN1,AFINSQ_1,VALUED_1,FUNCT_4,FUNCT_7,INT_1,NAT_1,INT_2,XXREAL_0,PBOOLE,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,AMISTD_2,SCMPDS_1,SCMPDS_2,CKB10,CKB11,CKB12,CKB13,CKB14,CKB26,CKB27,CKB28,CKB29,CKB35,CKB36,CKB40;
definitions TARSKI,COMPOS_1,EXTPRO_1,FUNCT_7,XBOOLE_0,SCMPDS_2,FUNCOP_1,NAT_1,AFINSQ_1,FUNCT_4,AMISTD_2,MEMSTR_0,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28,CKB29,CKB35,CKB36,CKB40;
theorems NAT_1,TARSKI,FUNCT_4,FUNCT_1,ZFMISC_1,INT_1,RELAT_1,SCMPDS_2,AMI_2,FUNCT_2,FUNCT_7,SCMPDS_3,ENUMSET1,ABSVALUE,GRFUNC_1,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,FUNCOP_1,VALUED_1,AFINSQ_1,PARTFUN1,COMPOS_1,EXTPRO_1,AMISTD_2,PBOOLE,STRUCT_0,MEMSTR_0,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB40,CKB57,CKB59,CKB61,CKB63,CKB65;
schemes NAT_1,CLASSES1,CKB5;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMPDS_2,AMI_2,FINSET_1,CARD_1,VALUED_1,FUNCT_4,RELAT_1,PRE_POLY,AFINSQ_1,COMPOS_1,ORDINAL5,EXTPRO_1,FUNCOP_1,FUNCT_7,SCMPDS_3,AMISTD_2,PBOOLE,MEMSTR_0,CKB31,CKB34,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB58,CKB60,CKB62,CKB64;
constructors WELLORD2,XXREAL_0,INT_2,SCMPDS_1,SCMPDS_3,DOMAIN_1,RELSET_1,PRE_POLY,ORDINAL5,AMI_3,AMISTD_2,AMISTD_1,FUNCT_7,MEMSTR_0,CKB11,CKB12,CKB13,CKB14,CKB26,CKB27,CKB28,CKB29,CKB35,CKB36,CKB40;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve a for Int_position;
reserve b for Int_position;
reserve c for Int_position;
reserve k1 for Integer;
reserve k2 for Integer;
theorem
Th83: (for s1,s2 being (State of ( SCMPDS )) holds (for n,m being (Element of ( NAT )) holds (for i being (Instruction of ( SCMPDS )) holds ((((((( IC s1 ) = m & i valid_at m) & ( InsCode i ) <> 1) & ( InsCode i ) <> 3) & ( ( IC s1 ) + n ) = ( IC s2 )) & ( DataPart s1 ) = ( DataPart s2 )) implies (( ( IC ( Exec (i,s1) ) ) + n ) = ( IC ( Exec (i,s2) ) ) & ( DataPart ( Exec (i,s1) ) ) = ( DataPart ( Exec (i,s2) ) ))))))
proof
let s1 being (State of ( SCMPDS )),s2 being (State of ( SCMPDS ));
let n being (Element of ( NAT )),m being (Element of ( NAT ));
let i being (Instruction of ( SCMPDS ));
assume that
A1: ( IC s1 ) = m
and
A2: i valid_at m
and
A3: (( InsCode i ) <> 1 & ( InsCode i ) <> 3)
and
A4: ( ( IC s1 ) + n ) = ( IC s2 )
and
A5: ( DataPart s1 ) = ( DataPart s2 );
A6:now
let a;
let k1;
thus ( s1 . ( DataLoc (( s1 . a ),k1) ) ) = ( s1 . ( DataLoc (( s2 . a ),k1) ) ) by A5,CKB9:1
.= ( s2 . ( DataLoc (( s2 . a ),k1) ) ) by A5,CKB9:1;
end;
reconsider k1 = ( IC s1 ) as (Element of ( NAT ));
set Ci = ( InsCode i );
A7: ( ( succ ( IC s1 ) ) + n ) = ( succ ( IC s2 ) ) by A4;
A8:now
assume ((((Ci <> ( 0 ) & Ci <> 1) & Ci <> 4) & Ci <> 5) & Ci <> 6);
then A9: (not Ci in { ( 0 ),1,4,5,6 }) by ENUMSET1:def 3;
then ( IC ( Exec (i,s1) ) ) = ( succ ( IC s1 ) ) by CKB1:1;
hence ( ( IC ( Exec (i,s1) ) ) + n ) = ( IC ( Exec (i,s2) ) ) by A7,A9,CKB1:1;
end;
per cases  by A3,NAT_1:37,SCMPDS_2:6;
suppose Ci = ( 0 );

then consider k1 such that A10: i = ( goto k1 ) and A11: ( m + k1 ) >= ( 0 ) by A2,CKB35:def 1;
( IC ( Exec (i,s1) ) ) = ( ICplusConst (s1,k1) ) by A10,SCMPDS_2:54;
hence ( ( IC ( Exec (i,s1) ) ) + n ) = ( ICplusConst (s2,k1) ) by A1,A4,A11,CKB65:1
.= ( IC ( Exec (i,s2) ) ) by A10,SCMPDS_2:54;
now
let a;
thus ( ( Exec (i,s1) ) . a ) = ( s1 . a ) by A10,SCMPDS_2:54
.= ( s2 . a ) by A5,CKB9:1
.= ( ( Exec (i,s2) ) . a ) by A10,SCMPDS_2:54;
end;
hence thesis by CKB9:1;
end;
suppose A12: Ci = 2;

hence ( ( IC ( Exec (i,s1) ) ) + n ) = ( IC ( Exec (i,s2) ) ) by A8;
consider a,k1 such that A13: i = ( a := k1 ) by A12,SCMPDS_2:28;
now
let b;
per cases ;
suppose A14: a = b;

hence ( ( Exec (i,s1) ) . b ) = k1 by A13,SCMPDS_2:45
.= ( ( Exec (i,s2) ) . b ) by A13,A14,SCMPDS_2:45;
end;
suppose A15: a <> b;

hence ( ( Exec (i,s1) ) . b ) = ( s1 . b ) by A13,SCMPDS_2:45
.= ( s2 . b ) by A5,CKB9:1
.= ( ( Exec (i,s2) ) . b ) by A13,A15,SCMPDS_2:45;
end;
end;
hence thesis by CKB9:1;
end;
suppose Ci = 4;

then consider a,k1,k2 such that A16: i = ( (a,k1) <>0_goto k2 ) and A17: ( m + k2 ) >= ( 0 ) by A2,CKB35:def 1;
hereby
per cases ;
suppose A18: ( s1 . ( DataLoc (( s1 . a ),k1) ) ) <> ( 0 );

then A19: ( s2 . ( DataLoc (( s2 . a ),k1) ) ) <> ( 0 ) by A6;
( IC ( Exec (i,s1) ) ) = ( ICplusConst (s1,k2) ) by A16,A18,SCMPDS_2:55;
hence ( ( IC ( Exec (i,s1) ) ) + n ) = ( ICplusConst (s2,k2) ) by A1,A4,A17,CKB65:1
.= ( IC ( Exec (i,s2) ) ) by A16,A19,SCMPDS_2:55;
end;
suppose ( s1 . ( DataLoc (( s1 . a ),k1) ) ) = ( 0 );

then (( s2 . ( DataLoc (( s2 . a ),k1) ) ) = ( 0 ) & ( IC ( Exec (i,s1) ) ) = ( succ ( IC s1 ) )) by A6,A16,SCMPDS_2:55;
hence ( ( IC ( Exec (i,s1) ) ) + n ) = ( IC ( Exec (i,s2) ) ) by A7,A16,SCMPDS_2:55;
end;
end;
now
let a;
thus ( ( Exec (i,s1) ) . a ) = ( s1 . a ) by A16,SCMPDS_2:55
.= ( s2 . a ) by A5,CKB9:1
.= ( ( Exec (i,s2) ) . a ) by A16,SCMPDS_2:55;
end;
hence thesis by CKB9:1;
end;
suppose Ci = 5;

then consider a,k1,k2 such that A20: i = ( (a,k1) <=0_goto k2 ) and A21: ( m + k2 ) >= ( 0 ) by A2,CKB35:def 1;
hereby
per cases ;
suppose A22: ( s1 . ( DataLoc (( s1 . a ),k1) ) ) <= ( 0 );

then A23: ( s2 . ( DataLoc (( s2 . a ),k1) ) ) <= ( 0 ) by A6;
( IC ( Exec (i,s1) ) ) = ( ICplusConst (s1,k2) ) by A20,A22,SCMPDS_2:56;
hence ( ( IC ( Exec (i,s1) ) ) + n ) = ( ICplusConst (s2,k2) ) by A1,A4,A21,CKB65:1
.= ( IC ( Exec (i,s2) ) ) by A20,A23,SCMPDS_2:56;
end;
suppose ( s1 . ( DataLoc (( s1 . a ),k1) ) ) > ( 0 );

then (( s2 . ( DataLoc (( s2 . a ),k1) ) ) > ( 0 ) & ( IC ( Exec (i,s1) ) ) = ( succ ( IC s1 ) )) by A6,A20,SCMPDS_2:56;
hence ( ( IC ( Exec (i,s1) ) ) + n ) = ( IC ( Exec (i,s2) ) ) by A7,A20,SCMPDS_2:56;
end;
end;
now
let a;
thus ( ( Exec (i,s1) ) . a ) = ( s1 . a ) by A20,SCMPDS_2:56
.= ( s2 . a ) by A5,CKB9:1
.= ( ( Exec (i,s2) ) . a ) by A20,SCMPDS_2:56;
end;
hence thesis by CKB9:1;
end;
suppose Ci = 6;

then consider a,k1,k2 such that A24: i = ( (a,k1) >=0_goto k2 ) and A25: ( m + k2 ) >= ( 0 ) by A2,CKB35:def 1;
hereby
per cases ;
suppose A26: ( s1 . ( DataLoc (( s1 . a ),k1) ) ) >= ( 0 );

then A27: ( s2 . ( DataLoc (( s2 . a ),k1) ) ) >= ( 0 ) by A6;
( IC ( Exec (i,s1) ) ) = ( ICplusConst (s1,k2) ) by A24,A26,SCMPDS_2:57;
hence ( ( IC ( Exec (i,s1) ) ) + n ) = ( ICplusConst (s2,k2) ) by A1,A4,A25,CKB65:1
.= ( IC ( Exec (i,s2) ) ) by A24,A27,SCMPDS_2:57;
end;
suppose ( s1 . ( DataLoc (( s1 . a ),k1) ) ) < ( 0 );

then (( s2 . ( DataLoc (( s2 . a ),k1) ) ) < ( 0 ) & ( IC ( Exec (i,s1) ) ) = ( succ ( IC s1 ) )) by A6,A24,SCMPDS_2:57;
hence ( ( IC ( Exec (i,s1) ) ) + n ) = ( IC ( Exec (i,s2) ) ) by A7,A24,SCMPDS_2:57;
end;
end;
now
let a;
thus ( ( Exec (i,s1) ) . a ) = ( s1 . a ) by A24,SCMPDS_2:57
.= ( s2 . a ) by A5,CKB9:1
.= ( ( Exec (i,s2) ) . a ) by A24,SCMPDS_2:57;
end;
hence thesis by CKB9:1;
end;
suppose A28: Ci = 7;

hence ( ( IC ( Exec (i,s1) ) ) + n ) = ( IC ( Exec (i,s2) ) ) by A8;
consider a,k1,k2 such that A29: i = ( (a,k1) := k2 ) by A28,SCMPDS_2:33;
now
let b;
per cases ;
suppose A30: ( DataLoc (( s1 . a ),k1) ) = b;

then A31: ( DataLoc (( s2 . a ),k1) ) = b by A5,CKB9:1;
thus ( ( Exec (i,s1) ) . b ) = k2 by A29,A30,SCMPDS_2:46
.= ( ( Exec (i,s2) ) . b ) by A29,A31,SCMPDS_2:46;
end;
suppose A32: ( DataLoc (( s1 . a ),k1) ) <> b;

then A33: ( DataLoc (( s2 . a ),k1) ) <> b by A5,CKB9:1;
thus ( ( Exec (i,s1) ) . b ) = ( s1 . b ) by A29,A32,SCMPDS_2:46
.= ( s2 . b ) by A5,CKB9:1
.= ( ( Exec (i,s2) ) . b ) by A29,A33,SCMPDS_2:46;
end;
end;
hence thesis by CKB9:1;
end;
suppose A34: Ci = 8;

hence ( ( IC ( Exec (i,s1) ) ) + n ) = ( IC ( Exec (i,s2) ) ) by A8;
consider a,k1,k2 such that A35: i = ( AddTo (a,k1,k2) ) by A34,SCMPDS_2:34;
now
let b;
per cases ;
suppose A36: ( DataLoc (( s1 . a ),k1) ) = b;

then A37: ( DataLoc (( s2 . a ),k1) ) = b by A5,CKB9:1;
thus ( ( Exec (i,s1) ) . b ) = ( ( s1 . ( DataLoc (( s1 . a ),k1) ) ) + k2 ) by A35,A36,SCMPDS_2:48
.= ( ( s2 . ( DataLoc (( s2 . a ),k1) ) ) + k2 ) by A6
.= ( ( Exec (i,s2) ) . b ) by A35,A37,SCMPDS_2:48;
end;
suppose A38: ( DataLoc (( s1 . a ),k1) ) <> b;

then A39: ( DataLoc (( s2 . a ),k1) ) <> b by A5,CKB9:1;
thus ( ( Exec (i,s1) ) . b ) = ( s1 . b ) by A35,A38,SCMPDS_2:48
.= ( s2 . b ) by A5,CKB9:1
.= ( ( Exec (i,s2) ) . b ) by A35,A39,SCMPDS_2:48;
end;
end;
hence thesis by CKB9:1;
end;
suppose A40: Ci = 9;

hence ( ( IC ( Exec (i,s1) ) ) + n ) = ( IC ( Exec (i,s2) ) ) by A8;
consider a,b,k1,k2 such that A41: i = ( AddTo (a,k1,b,k2) ) by A40,SCMPDS_2:35;
now
let c;
per cases ;
suppose A42: ( DataLoc (( s1 . a ),k1) ) = c;

then A43: ( DataLoc (( s2 . a ),k1) ) = c by A5,CKB9:1;
thus ( ( Exec (i,s1) ) . c ) = ( ( s1 . ( DataLoc (( s1 . a ),k1) ) ) + ( s1 . ( DataLoc (( s1 . b ),k2) ) ) ) by A41,A42,SCMPDS_2:49
.= ( ( s2 . ( DataLoc (( s2 . a ),k1) ) ) + ( s1 . ( DataLoc (( s1 . b ),k2) ) ) ) by A6
.= ( ( s2 . ( DataLoc (( s2 . a ),k1) ) ) + ( s2 . ( DataLoc (( s2 . b ),k2) ) ) ) by A6
.= ( ( Exec (i,s2) ) . c ) by A41,A43,SCMPDS_2:49;
end;
suppose A44: ( DataLoc (( s1 . a ),k1) ) <> c;

then A45: ( DataLoc (( s2 . a ),k1) ) <> c by A5,CKB9:1;
thus ( ( Exec (i,s1) ) . c ) = ( s1 . c ) by A41,A44,SCMPDS_2:49
.= ( s2 . c ) by A5,CKB9:1
.= ( ( Exec (i,s2) ) . c ) by A41,A45,SCMPDS_2:49;
end;
end;
hence thesis by CKB9:1;
end;
suppose A46: Ci = 10;

hence ( ( IC ( Exec (i,s1) ) ) + n ) = ( IC ( Exec (i,s2) ) ) by A8;
consider a,b,k1,k2 such that A47: i = ( SubFrom (a,k1,b,k2) ) by A46,SCMPDS_2:36;
now
let c;
per cases ;
suppose A48: ( DataLoc (( s1 . a ),k1) ) = c;

then A49: ( DataLoc (( s2 . a ),k1) ) = c by A5,CKB9:1;
thus ( ( Exec (i,s1) ) . c ) = ( ( s1 . ( DataLoc (( s1 . a ),k1) ) ) - ( s1 . ( DataLoc (( s1 . b ),k2) ) ) ) by A47,A48,SCMPDS_2:50
.= ( ( s2 . ( DataLoc (( s2 . a ),k1) ) ) - ( s1 . ( DataLoc (( s1 . b ),k2) ) ) ) by A6
.= ( ( s2 . ( DataLoc (( s2 . a ),k1) ) ) - ( s2 . ( DataLoc (( s2 . b ),k2) ) ) ) by A6
.= ( ( Exec (i,s2) ) . c ) by A47,A49,SCMPDS_2:50;
end;
suppose A50: ( DataLoc (( s1 . a ),k1) ) <> c;

then A51: ( DataLoc (( s2 . a ),k1) ) <> c by A5,CKB9:1;
thus ( ( Exec (i,s1) ) . c ) = ( s1 . c ) by A47,A50,SCMPDS_2:50
.= ( s2 . c ) by A5,CKB9:1
.= ( ( Exec (i,s2) ) . c ) by A47,A51,SCMPDS_2:50;
end;
end;
hence thesis by CKB9:1;
end;
suppose A52: Ci = 11;

hence ( ( IC ( Exec (i,s1) ) ) + n ) = ( IC ( Exec (i,s2) ) ) by A8;
consider a,b,k1,k2 such that A53: i = ( MultBy (a,k1,b,k2) ) by A52,SCMPDS_2:37;
now
let c;
per cases ;
suppose A54: ( DataLoc (( s1 . a ),k1) ) = c;

then A55: ( DataLoc (( s2 . a ),k1) ) = c by A5,CKB9:1;
thus ( ( Exec (i,s1) ) . c ) = ( ( s1 . ( DataLoc (( s1 . a ),k1) ) ) * ( s1 . ( DataLoc (( s1 . b ),k2) ) ) ) by A53,A54,SCMPDS_2:51
.= ( ( s2 . ( DataLoc (( s2 . a ),k1) ) ) * ( s1 . ( DataLoc (( s1 . b ),k2) ) ) ) by A6
.= ( ( s2 . ( DataLoc (( s2 . a ),k1) ) ) * ( s2 . ( DataLoc (( s2 . b ),k2) ) ) ) by A6
.= ( ( Exec (i,s2) ) . c ) by A53,A55,SCMPDS_2:51;
end;
suppose A56: ( DataLoc (( s1 . a ),k1) ) <> c;

then A57: ( DataLoc (( s2 . a ),k1) ) <> c by A5,CKB9:1;
thus ( ( Exec (i,s1) ) . c ) = ( s1 . c ) by A53,A56,SCMPDS_2:51
.= ( s2 . c ) by A5,CKB9:1
.= ( ( Exec (i,s2) ) . c ) by A53,A57,SCMPDS_2:51;
end;
end;
hence thesis by CKB9:1;
end;
suppose A58: Ci = 12;

hence ( ( IC ( Exec (i,s1) ) ) + n ) = ( IC ( Exec (i,s2) ) ) by A8;
consider a,b,k1,k2 such that A59: i = ( Divide (a,k1,b,k2) ) by A58,SCMPDS_2:38;
now
let c;
per cases ;
suppose A60: ( DataLoc (( s1 . b ),k2) ) = c;

then A61: ( DataLoc (( s2 . b ),k2) ) = c by A5,CKB9:1;
thus ( ( Exec (i,s1) ) . c ) = ( ( s1 . ( DataLoc (( s1 . a ),k1) ) ) mod ( s1 . ( DataLoc (( s1 . b ),k2) ) ) ) by A59,A60,SCMPDS_2:52
.= ( ( s2 . ( DataLoc (( s2 . a ),k1) ) ) mod ( s1 . ( DataLoc (( s1 . b ),k2) ) ) ) by A6
.= ( ( s2 . ( DataLoc (( s2 . a ),k1) ) ) mod ( s2 . ( DataLoc (( s2 . b ),k2) ) ) ) by A6
.= ( ( Exec (i,s2) ) . c ) by A59,A61,SCMPDS_2:52;
end;
suppose A62: ( DataLoc (( s1 . b ),k2) ) <> c;

then A63: ( DataLoc (( s2 . b ),k2) ) <> c by A5,CKB9:1;
hereby
per cases ;
suppose A64: ( DataLoc (( s1 . a ),k1) ) <> c;

then A65: ( DataLoc (( s2 . a ),k1) ) <> c by A5,CKB9:1;
thus ( ( Exec (i,s1) ) . c ) = ( s1 . c ) by A59,A62,A64,SCMPDS_2:52
.= ( s2 . c ) by A5,CKB9:1
.= ( ( Exec (i,s2) ) . c ) by A59,A63,A65,SCMPDS_2:52;
end;
suppose A66: ( DataLoc (( s1 . a ),k1) ) = c;

then A67: ( DataLoc (( s2 . a ),k1) ) = c by A5,CKB9:1;
thus ( ( Exec (i,s1) ) . c ) = ( ( s1 . ( DataLoc (( s1 . a ),k1) ) ) div ( s1 . ( DataLoc (( s1 . b ),k2) ) ) ) by A59,A62,A66,SCMPDS_2:52
.= ( ( s2 . ( DataLoc (( s2 . a ),k1) ) ) div ( s1 . ( DataLoc (( s1 . b ),k2) ) ) ) by A6
.= ( ( s2 . ( DataLoc (( s2 . a ),k1) ) ) div ( s2 . ( DataLoc (( s2 . b ),k2) ) ) ) by A6
.= ( ( Exec (i,s2) ) . c ) by A59,A63,A67,SCMPDS_2:52;
end;
end;
end;
end;
hence thesis by CKB9:1;
end;
suppose A68: Ci = 13;

hence ( ( IC ( Exec (i,s1) ) ) + n ) = ( IC ( Exec (i,s2) ) ) by A8;
consider a,b,k1,k2 such that A69: i = ( (a,k1) := (b,k2) ) by A68,SCMPDS_2:39;
now
let c;
per cases ;
suppose A70: ( DataLoc (( s1 . a ),k1) ) = c;

then A71: ( DataLoc (( s2 . a ),k1) ) = c by A5,CKB9:1;
thus ( ( Exec (i,s1) ) . c ) = ( s1 . ( DataLoc (( s1 . b ),k2) ) ) by A69,A70,SCMPDS_2:47
.= ( s2 . ( DataLoc (( s2 . b ),k2) ) ) by A6
.= ( ( Exec (i,s2) ) . c ) by A69,A71,SCMPDS_2:47;
end;
suppose A72: ( DataLoc (( s1 . a ),k1) ) <> c;

then A73: ( DataLoc (( s2 . a ),k1) ) <> c by A5,CKB9:1;
thus ( ( Exec (i,s1) ) . c ) = ( s1 . c ) by A69,A72,SCMPDS_2:47
.= ( s2 . c ) by A5,CKB9:1
.= ( ( Exec (i,s2) ) . c ) by A69,A73,SCMPDS_2:47;
end;
end;
hence thesis by CKB9:1;
end;
end;
