environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMPDS_2,SCMFSA_7,CARD_1,FUNCOP_1,RELAT_1,FUNCT_1,NAT_1,ARYTM_3,XBOOLE_0,TARSKI,VALUED_1,SCMNORM,FSM_1,INT_1,FUNCT_4,GRAPHSP,AMI_3,AMI_2,STRUCT_0,SCMPDS_1,COMPLEX1,XXREAL_0,ARYTM_1,TURING_1,AMISTD_2,SCMFSA6B,MSUALG_1,CIRCUIT2,SCMPDS_4,ORDINAL1,PARTFUN1,SCMFSA6C,ORDINAL4,PBOOLE,FINSET_1,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,FINSET_1,NUMBERS,XCMPLX_0,RELAT_1,FUNCT_1,PARTFUN1,AFINSQ_1,VALUED_1,FUNCT_4,FUNCT_7,INT_1,NAT_1,INT_2,XXREAL_0,PBOOLE,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,AMISTD_2,SCMPDS_1,SCMPDS_2;
definitions TARSKI,COMPOS_1,EXTPRO_1,FUNCT_7,XBOOLE_0,SCMPDS_2,FUNCOP_1,NAT_1,AFINSQ_1,FUNCT_4,AMISTD_2,MEMSTR_0;
theorems NAT_1,TARSKI,FUNCT_4,FUNCT_1,ZFMISC_1,INT_1,RELAT_1,SCMPDS_2,AMI_2,FUNCT_2,FUNCT_7,SCMPDS_3,ENUMSET1,ABSVALUE,GRFUNC_1,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,FUNCOP_1,VALUED_1,AFINSQ_1,PARTFUN1,COMPOS_1,EXTPRO_1,AMISTD_2,PBOOLE,STRUCT_0,MEMSTR_0;
schemes NAT_1,CLASSES1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMPDS_2,AMI_2,FINSET_1,CARD_1,VALUED_1,FUNCT_4,RELAT_1,PRE_POLY,AFINSQ_1,COMPOS_1,ORDINAL5,EXTPRO_1,FUNCOP_1,FUNCT_7,SCMPDS_3,AMISTD_2,PBOOLE,MEMSTR_0;
constructors WELLORD2,XXREAL_0,INT_2,SCMPDS_1,SCMPDS_3,DOMAIN_1,RELSET_1,PRE_POLY,ORDINAL5,AMI_3,AMISTD_2,AMISTD_1,FUNCT_7,MEMSTR_0;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve i for (Instruction of ( SCMPDS ));
reserve a for Int_position;
reserve b for Int_position;
reserve s for (State of ( SCMPDS ));
reserve k1 for Integer;
reserve k2 for Integer;
theorem
Th6: (( InsCode i ) in { ( 0 ),1,4,5,6 } or ( ( Exec (i,s) ) . ( IC ( SCMPDS ) ) ) = ( succ ( IC s ) ))
proof
assume A1: (not ( InsCode i ) in { ( 0 ),1,4,5,6 });
then A2: (( InsCode i ) <> ( 0 ) & ( InsCode i ) <> 1) by ENUMSET1:def 3;
A3: ( InsCode i ) <> 6 by A1,ENUMSET1:def 3;
A4: (( InsCode i ) <> 4 & ( InsCode i ) <> 5) by A1,ENUMSET1:def 3;
per cases  by A2,A4,A3,NAT_1:37,SCMPDS_2:6;
suppose ( InsCode i ) = 2;

then (ex a st (ex k1 st i = ( a := k1 ))) by SCMPDS_2:28;
hence thesis by SCMPDS_2:45;
end;
suppose ( InsCode i ) = 3;

then (ex a st (ex k1 st i = ( saveIC (a,k1) ))) by SCMPDS_2:29;
hence thesis by SCMPDS_2:59;
end;
suppose ( InsCode i ) = 7;

then (ex a st (ex k1 st (ex k2 st i = ( (a,k1) := k2 )))) by SCMPDS_2:33;
hence thesis by SCMPDS_2:46;
end;
suppose ( InsCode i ) = 8;

then (ex a st (ex k1 st (ex k2 st i = ( AddTo (a,k1,k2) )))) by SCMPDS_2:34;
hence thesis by SCMPDS_2:48;
end;
suppose ( InsCode i ) = 9;

then (ex a st (ex b st (ex k1 st (ex k2 st i = ( AddTo (a,k1,b,k2) ))))) by SCMPDS_2:35;
hence thesis by SCMPDS_2:49;
end;
suppose ( InsCode i ) = 10;

then (ex a st (ex b st (ex k1 st (ex k2 st i = ( SubFrom (a,k1,b,k2) ))))) by SCMPDS_2:36;
hence thesis by SCMPDS_2:50;
end;
suppose ( InsCode i ) = 11;

then (ex a st (ex b st (ex k1 st (ex k2 st i = ( MultBy (a,k1,b,k2) ))))) by SCMPDS_2:37;
hence thesis by SCMPDS_2:51;
end;
suppose ( InsCode i ) = 12;

then (ex a st (ex b st (ex k1 st (ex k2 st i = ( Divide (a,k1,b,k2) ))))) by SCMPDS_2:38;
hence thesis by SCMPDS_2:52;
end;
suppose ( InsCode i ) = 13;

then (ex a st (ex b st (ex k1 st (ex k2 st i = ( (a,k1) := (b,k2) ))))) by SCMPDS_2:39;
hence thesis by SCMPDS_2:47;
end;
end;
