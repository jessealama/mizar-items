environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMPDS_2,SCMFSA_7,CARD_1,FUNCOP_1,RELAT_1,FUNCT_1,NAT_1,ARYTM_3,XBOOLE_0,TARSKI,VALUED_1,SCMNORM,FSM_1,INT_1,FUNCT_4,GRAPHSP,AMI_3,AMI_2,STRUCT_0,SCMPDS_1,COMPLEX1,XXREAL_0,ARYTM_1,TURING_1,AMISTD_2,SCMFSA6B,MSUALG_1,CIRCUIT2,SCMPDS_4,ORDINAL1,PARTFUN1,SCMFSA6C,ORDINAL4,PBOOLE,FINSET_1,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,FINSET_1,NUMBERS,XCMPLX_0,RELAT_1,FUNCT_1,PARTFUN1,AFINSQ_1,VALUED_1,FUNCT_4,FUNCT_7,INT_1,NAT_1,INT_2,XXREAL_0,PBOOLE,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,AMISTD_2,SCMPDS_1,SCMPDS_2,CKB10,CKB11,CKB12,CKB13,CKB14,CKB26,CKB27,CKB28,CKB29,CKB35,CKB36,CKB40;
definitions TARSKI,COMPOS_1,EXTPRO_1,FUNCT_7,XBOOLE_0,SCMPDS_2,FUNCOP_1,NAT_1,AFINSQ_1,FUNCT_4,AMISTD_2,MEMSTR_0,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28,CKB29,CKB35,CKB36,CKB40;
theorems NAT_1,TARSKI,FUNCT_4,FUNCT_1,ZFMISC_1,INT_1,RELAT_1,SCMPDS_2,AMI_2,FUNCT_2,FUNCT_7,SCMPDS_3,ENUMSET1,ABSVALUE,GRFUNC_1,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,FUNCOP_1,VALUED_1,AFINSQ_1,PARTFUN1,COMPOS_1,EXTPRO_1,AMISTD_2,PBOOLE,STRUCT_0,MEMSTR_0,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB40;
schemes NAT_1,CLASSES1,CKB5;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMPDS_2,AMI_2,FINSET_1,CARD_1,VALUED_1,FUNCT_4,RELAT_1,PRE_POLY,AFINSQ_1,COMPOS_1,ORDINAL5,EXTPRO_1,FUNCOP_1,FUNCT_7,SCMPDS_3,AMISTD_2,PBOOLE,MEMSTR_0,CKB31,CKB34,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49;
constructors WELLORD2,XXREAL_0,INT_2,SCMPDS_1,SCMPDS_3,DOMAIN_1,RELSET_1,PRE_POLY,ORDINAL5,AMI_3,AMISTD_2,AMISTD_1,FUNCT_7,MEMSTR_0,CKB11,CKB12,CKB13,CKB14,CKB26,CKB27,CKB28,CKB29,CKB35,CKB36,CKB40;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve i for (Instruction of ( SCMPDS ));
reserve l for (Element of ( NAT ));
registration
let I being  shiftable (Program of ( SCMPDS ));
let J being  shiftable (Program of ( SCMPDS ));
cluster ( I ';' J ) ->  shiftable for (Program of ( SCMPDS ));
coherence
proof
set IJ = ( I ';' J );
now
set D = { ( l + ( card I ) ): l in ( dom J ) };
let n;
let i;
assume that
A1: n in ( dom IJ )
and
A2: i = ( IJ . n );
( dom ( Shift (J,( card I )) ) ) = D by VALUED_1:def 12;
then A3: ( dom IJ ) = ( ( dom I ) \/ D ) by FUNCT_4:def 1;
per cases  by A1,A3,XBOOLE_0:def 3;
suppose A4: n in ( dom I );

then ( I . n ) = i by A2,AFINSQ_1:def 3;
hence ((( InsCode i ) <> 1 & ( InsCode i ) <> 3) & i valid_at n) by A4,CKB36:def 1;
end;
suppose n in D;

then consider l such that A5: n = ( l + ( card I ) ) and A6: l in ( dom J );
A7: ( J . l ) = i by A2,A5,A6,AFINSQ_1:def 3;
hence (( InsCode i ) <> 1 & ( InsCode i ) <> 3) by A6,CKB36:def 1;
i valid_at l by A6,A7,CKB36:def 1;
hence i valid_at n by A5,CKB38:1,NAT_1:11;
end;
end;
hence thesis by CKB36:def 1;
end;
end;
