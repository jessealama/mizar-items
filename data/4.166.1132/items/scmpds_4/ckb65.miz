environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMPDS_2,SCMFSA_7,CARD_1,FUNCOP_1,RELAT_1,FUNCT_1,NAT_1,ARYTM_3,XBOOLE_0,TARSKI,VALUED_1,SCMNORM,FSM_1,INT_1,FUNCT_4,GRAPHSP,AMI_3,AMI_2,STRUCT_0,SCMPDS_1,COMPLEX1,XXREAL_0,ARYTM_1,TURING_1,AMISTD_2,SCMFSA6B,MSUALG_1,CIRCUIT2,SCMPDS_4,ORDINAL1,PARTFUN1,SCMFSA6C,ORDINAL4,PBOOLE,FINSET_1,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,FINSET_1,NUMBERS,XCMPLX_0,RELAT_1,FUNCT_1,PARTFUN1,AFINSQ_1,VALUED_1,FUNCT_4,FUNCT_7,INT_1,NAT_1,INT_2,XXREAL_0,PBOOLE,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,AMISTD_2,SCMPDS_1,SCMPDS_2,CKB10,CKB11,CKB12,CKB13,CKB14,CKB26,CKB27,CKB28,CKB29,CKB35,CKB36,CKB40;
definitions TARSKI,COMPOS_1,EXTPRO_1,FUNCT_7,XBOOLE_0,SCMPDS_2,FUNCOP_1,NAT_1,AFINSQ_1,FUNCT_4,AMISTD_2,MEMSTR_0,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28,CKB29,CKB35,CKB36,CKB40;
theorems NAT_1,TARSKI,FUNCT_4,FUNCT_1,ZFMISC_1,INT_1,RELAT_1,SCMPDS_2,AMI_2,FUNCT_2,FUNCT_7,SCMPDS_3,ENUMSET1,ABSVALUE,GRFUNC_1,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,FUNCOP_1,VALUED_1,AFINSQ_1,PARTFUN1,COMPOS_1,EXTPRO_1,AMISTD_2,PBOOLE,STRUCT_0,MEMSTR_0,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB40,CKB57,CKB59,CKB61,CKB63;
schemes NAT_1,CLASSES1,CKB5;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMPDS_2,AMI_2,FINSET_1,CARD_1,VALUED_1,FUNCT_4,RELAT_1,PRE_POLY,AFINSQ_1,COMPOS_1,ORDINAL5,EXTPRO_1,FUNCOP_1,FUNCT_7,SCMPDS_3,AMISTD_2,PBOOLE,MEMSTR_0,CKB31,CKB34,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB58,CKB60,CKB62,CKB64;
constructors WELLORD2,XXREAL_0,INT_2,SCMPDS_1,SCMPDS_3,DOMAIN_1,RELSET_1,PRE_POLY,ORDINAL5,AMI_3,AMISTD_2,AMISTD_1,FUNCT_7,MEMSTR_0,CKB11,CKB12,CKB13,CKB14,CKB26,CKB27,CKB28,CKB29,CKB35,CKB36,CKB40;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Th82: (for s1,s2 being (State of ( SCMPDS )) holds (for n,m being (Element of ( NAT )) holds (for k1 being Integer holds (((( IC s1 ) = m & ( m + k1 ) >= ( 0 )) & ( ( IC s1 ) + n ) = ( IC s2 )) implies ( ( ICplusConst (s1,k1) ) + n ) = ( ICplusConst (s2,k1) )))))
proof
let s1 being (State of ( SCMPDS )),s2 being (State of ( SCMPDS ));
let n being (Element of ( NAT )),m being (Element of ( NAT ));
let k1 being Integer;
assume that
A1: ( IC s1 ) = m
and
A2: ( m + k1 ) >= ( 0 )
and
A3: ( ( IC s1 ) + n ) = ( IC s2 );
reconsider nk = ( ICplusConst (s1,k1) ) as (Element of ( NAT ));
reconsider mk = ( m + k1 ) as (Element of ( NAT )) by A2,INT_1:3;
(ex n1 being (Element of ( NAT )) st (n1 = ( IC s1 ) & ( ICplusConst (s1,k1) ) = ( abs ( n1 + k1 ) ))) by SCMPDS_2:def 18;
then ((ex n2 being (Element of ( NAT )) st (n2 = ( IC s2 ) & ( ICplusConst (s2,k1) ) = ( abs ( n2 + k1 ) ))) & nk = mk) by A1,ABSVALUE:def 1,SCMPDS_2:def 18;
hence thesis by A1,A3,ABSVALUE:def 1;
end;
