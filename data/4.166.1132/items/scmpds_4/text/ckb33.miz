environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMPDS_2,SCMFSA_7,CARD_1,FUNCOP_1,RELAT_1,FUNCT_1,NAT_1,ARYTM_3,XBOOLE_0,TARSKI,VALUED_1,SCMNORM,FSM_1,INT_1,FUNCT_4,GRAPHSP,AMI_3,AMI_2,STRUCT_0,SCMPDS_1,COMPLEX1,XXREAL_0,ARYTM_1,TURING_1,AMISTD_2,SCMFSA6B,MSUALG_1,CIRCUIT2,SCMPDS_4,ORDINAL1,PARTFUN1,SCMFSA6C,ORDINAL4,PBOOLE,FINSET_1,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,FINSET_1,NUMBERS,XCMPLX_0,RELAT_1,FUNCT_1,PARTFUN1,AFINSQ_1,VALUED_1,FUNCT_4,FUNCT_7,INT_1,NAT_1,INT_2,XXREAL_0,PBOOLE,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,AMISTD_2,SCMPDS_1,SCMPDS_2,CKB10,CKB11,CKB12,CKB13,CKB14,CKB26,CKB27,CKB28,CKB29;
definitions TARSKI,COMPOS_1,EXTPRO_1,FUNCT_7,XBOOLE_0,SCMPDS_2,FUNCOP_1,NAT_1,AFINSQ_1,FUNCT_4,AMISTD_2,MEMSTR_0,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28,CKB29;
theorems NAT_1,TARSKI,FUNCT_4,FUNCT_1,ZFMISC_1,INT_1,RELAT_1,SCMPDS_2,AMI_2,FUNCT_2,FUNCT_7,SCMPDS_3,ENUMSET1,ABSVALUE,GRFUNC_1,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,FUNCOP_1,VALUED_1,AFINSQ_1,PARTFUN1,COMPOS_1,EXTPRO_1,AMISTD_2,PBOOLE,STRUCT_0,MEMSTR_0,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB27,CKB28,CKB29,CKB30,CKB32;
schemes NAT_1,CLASSES1,CKB5;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMPDS_2,AMI_2,FINSET_1,CARD_1,VALUED_1,FUNCT_4,RELAT_1,PRE_POLY,AFINSQ_1,COMPOS_1,ORDINAL5,EXTPRO_1,FUNCOP_1,FUNCT_7,SCMPDS_3,AMISTD_2,PBOOLE,MEMSTR_0,CKB31;
constructors WELLORD2,XXREAL_0,INT_2,SCMPDS_1,SCMPDS_3,DOMAIN_1,RELSET_1,PRE_POLY,ORDINAL5,AMI_3,AMISTD_2,AMISTD_1,FUNCT_7,MEMSTR_0,CKB11,CKB12,CKB13,CKB14,CKB26,CKB27,CKB28,CKB29;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve m for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve I for (Program of ( SCMPDS ));
reserve s1 for (State of ( SCMPDS ));
reserve s2 for (State of ( SCMPDS ));
theorem
Th67: (for P1,P2 being (Instruction-Sequence of ( SCMPDS )) holds ((((s1 = s2 & I c= P1) & I c= P2) & (for m holds (m < n implies ( IC ( Comput (P2,s2,m) ) ) in ( dom I )))) implies (for m holds (m <= n implies ( Comput (P1,s1,m) ) = ( Comput (P2,s2,m) )))))
proof
let P1 being (Instruction-Sequence of ( SCMPDS ));
let P2 being (Instruction-Sequence of ( SCMPDS ));
assume that
A1: s1 = s2
and
A2: I c= P1
and
A3: I c= P2
and
A4: (for m holds (m < n implies ( IC ( Comput (P2,s2,m) ) ) in ( dom I )));
defpred X[ Nat ]
 means
($1 <= n implies ( Comput (P1,s1,$1) ) = ( Comput (P2,s2,$1) ));
A5: (for m holds (X[ m ] implies X[ ( m + 1 ) ]))
proof
let m;
assume that
A6: (m <= n implies ( Comput (P1,s1,m) ) = ( Comput (P2,s2,m) ));
A7: ( Comput (P2,s2,( m + 1 )) ) = ( Following (P2,( Comput (P2,s2,m) )) ) by EXTPRO_1:3
.= ( Exec (( CurInstr (P2,( Comput (P2,s2,m) )) ),( Comput (P2,s2,m) )) );
A8: ( Comput (P1,s1,( m + 1 )) ) = ( Following (P1,( Comput (P1,s1,m) )) ) by EXTPRO_1:3
.= ( Exec (( CurInstr (P1,( Comput (P1,s1,m) )) ),( Comput (P1,s1,m) )) );
assume A9: ( m + 1 ) <= n;
then A10: ( IC ( Comput (P1,s1,m) ) ) = ( IC ( Comput (P2,s2,m) ) ) by A6,NAT_1:13;
m < n by A9,NAT_1:13;
then A11: ( IC ( Comput (P2,s2,m) ) ) in ( dom I ) by A4;
A12: ( P1 /. ( IC ( Comput (P1,s1,m) ) ) ) = ( P1 . ( IC ( Comput (P1,s1,m) ) ) ) by PBOOLE:143;
A13: ( P2 /. ( IC ( Comput (P2,s2,m) ) ) ) = ( P2 . ( IC ( Comput (P2,s2,m) ) ) ) by PBOOLE:143;
( CurInstr (P1,( Comput (P1,s1,m) )) ) = ( P1 . ( IC ( Comput (P1,s1,m) ) ) ) by A12
.= ( I . ( IC ( Comput (P1,s1,m) ) ) ) by A2,A11,A10,GRFUNC_1:2
.= ( P2 . ( IC ( Comput (P2,s2,m) ) ) ) by A3,A11,A10,GRFUNC_1:2
.= ( CurInstr (P2,( Comput (P2,s2,m) )) ) by A13;
hence thesis by A6,A8,A7,A9,NAT_1:13;
end;
( Comput (P1,s1,( 0 )) ) = s1 by EXTPRO_1:2;
then A14: X[ ( 0 ) ] by A1,EXTPRO_1:2;
thus (for m holds X[ m ]) from NAT_1:sch 1(A14,A5);
end;
