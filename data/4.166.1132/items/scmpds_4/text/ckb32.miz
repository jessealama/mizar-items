environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMPDS_2,SCMFSA_7,CARD_1,FUNCOP_1,RELAT_1,FUNCT_1,NAT_1,ARYTM_3,XBOOLE_0,TARSKI,VALUED_1,SCMNORM,FSM_1,INT_1,FUNCT_4,GRAPHSP,AMI_3,AMI_2,STRUCT_0,SCMPDS_1,COMPLEX1,XXREAL_0,ARYTM_1,TURING_1,AMISTD_2,SCMFSA6B,MSUALG_1,CIRCUIT2,SCMPDS_4,ORDINAL1,PARTFUN1,SCMFSA6C,ORDINAL4,PBOOLE,FINSET_1,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,FINSET_1,NUMBERS,XCMPLX_0,RELAT_1,FUNCT_1,PARTFUN1,AFINSQ_1,VALUED_1,FUNCT_4,FUNCT_7,INT_1,NAT_1,INT_2,XXREAL_0,PBOOLE,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,AMISTD_2,SCMPDS_1,SCMPDS_2,CKB10,CKB11,CKB12,CKB13,CKB14,CKB26,CKB27,CKB28,CKB29;
definitions TARSKI,COMPOS_1,EXTPRO_1,FUNCT_7,XBOOLE_0,SCMPDS_2,FUNCOP_1,NAT_1,AFINSQ_1,FUNCT_4,AMISTD_2,MEMSTR_0,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28,CKB29;
theorems NAT_1,TARSKI,FUNCT_4,FUNCT_1,ZFMISC_1,INT_1,RELAT_1,SCMPDS_2,AMI_2,FUNCT_2,FUNCT_7,SCMPDS_3,ENUMSET1,ABSVALUE,GRFUNC_1,XBOOLE_0,XBOOLE_1,XREAL_1,ORDINAL1,FUNCOP_1,VALUED_1,AFINSQ_1,PARTFUN1,COMPOS_1,EXTPRO_1,AMISTD_2,PBOOLE,STRUCT_0,MEMSTR_0,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB27,CKB28,CKB29,CKB30;
schemes NAT_1,CLASSES1,CKB5;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,SCMPDS_2,AMI_2,FINSET_1,CARD_1,VALUED_1,FUNCT_4,RELAT_1,PRE_POLY,AFINSQ_1,COMPOS_1,ORDINAL5,EXTPRO_1,FUNCOP_1,FUNCT_7,SCMPDS_3,AMISTD_2,PBOOLE,MEMSTR_0,CKB31;
constructors WELLORD2,XXREAL_0,INT_2,SCMPDS_1,SCMPDS_3,DOMAIN_1,RELSET_1,PRE_POLY,ORDINAL5,AMI_3,AMISTD_2,AMISTD_1,FUNCT_7,MEMSTR_0,CKB11,CKB12,CKB13,CKB14,CKB26,CKB27,CKB28,CKB29;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve s for (State of ( SCMPDS ));
theorem
Th66: (for P,Q being (Instruction-Sequence of ( SCMPDS )) holds (Q = ( P +* ( (( IC s ),( succ ( IC s ) )) --> (( goto 1 ),( goto ( - 1 ) )) ) ) implies (not Q halts_on s)))
proof
let P being (Instruction-Sequence of ( SCMPDS ));
let Q being (Instruction-Sequence of ( SCMPDS ));
assume that
Z: Q = ( P +* ( (( IC s ),( succ ( IC s ) )) --> (( goto 1 ),( goto ( - 1 ) )) ) );
set m = ( (( IC s ),( succ ( IC s ) )) --> (( goto 1 ),( goto ( - 1 ) )) );
A1: ( m . ( succ ( IC s ) ) ) = ( goto ( - 1 ) ) by FUNCT_4:63;
( IC s ) <> ( succ ( IC s ) );
then A2: ( m . ( IC s ) ) = ( goto 1 ) by FUNCT_4:63;
defpred X[ Nat ]
 means
(( IC ( Comput (Q,s,$1) ) ) = ( IC s ) or ( IC ( Comput (Q,s,$1) ) ) = ( succ ( IC s ) ));
A3: ( dom m ) = { ( IC s ),( succ ( IC s ) ) } by FUNCT_4:62;
then A4: ( succ ( IC s ) ) in ( dom m ) by TARSKI:def 2;
A6: ( IC s ) in ( dom m ) by A3,TARSKI:def 2;
now
let n;
set Cn = ( Comput (Q,s,n) );
assume A7: (( IC Cn ) = ( IC s ) or ( IC Cn ) = ( succ ( IC s ) ));
A8: ( Q /. ( IC Cn ) ) = ( Q . ( IC Cn ) ) by PBOOLE:143;
per cases  by A7;
case A9: ( IC Cn ) = ( IC s );
then A10: ( CurInstr (Q,Cn) ) = ( Q . ( IC s ) ) by A8
.= ( goto 1 ) by A6,A2,Z,FUNCT_4:13;
thus ( IC ( Comput (Q,s,( n + 1 )) ) ) = ( IC ( Following (Q,Cn) ) ) by EXTPRO_1:3
.= ( ICplusConst (Cn,1) ) by A10,SCMPDS_2:54
.= ( succ ( IC s ) ) by A9,SCMPDS_3:10;
end;
case A12: ( IC Cn ) = ( succ ( IC s ) );
reconsider i = ( IC s ) as (Element of ( NAT ));
A13: (ex j being (Element of ( NAT )) st (j = ( IC Cn ) & ( ICplusConst (Cn,( - 1 )) ) = ( abs ( j + ( - 1 ) ) ))) by SCMPDS_2:def 18;
A14: ( Q /. ( IC ( Comput (Q,s,n) ) ) ) = ( Q . ( IC ( Comput (Q,s,n) ) ) ) by PBOOLE:143;
A15: ( CurInstr (Q,( Comput (Q,s,n) )) ) = ( Q . ( succ ( IC s ) ) ) by A12,A14
.= ( goto ( - 1 ) ) by A4,A1,Z,FUNCT_4:13;
thus ( IC ( Comput (Q,s,( n + 1 )) ) ) = ( IC ( Following (Q,Cn) ) ) by EXTPRO_1:3
.= ( abs ( ( i + 4 ) + ( - 4 ) ) ) by A12,A15,A13,SCMPDS_2:54
.= ( IC s ) by ABSVALUE:def 1;
end;
end;
then A17: (for n holds (X[ n ] implies X[ ( n + 1 ) ]));
let nn being Nat;
reconsider n = nn as (Element of ( NAT )) by ORDINAL1:def 12;
assume ( IC ( Comput (Q,s,nn) ) ) in ( dom Q );
A18: X[ ( 0 ) ] by EXTPRO_1:2;
A19: (for n holds X[ n ]) from NAT_1:sch 1(A18,A17);
A21: ( Q /. ( IC ( Comput (Q,s,n) ) ) ) = ( Q . ( IC ( Comput (Q,s,n) ) ) ) by PBOOLE:143;
per cases  by A19;
suppose ( IC ( Comput (Q,s,n) ) ) = ( IC s );

then ( CurInstr (Q,( Comput (Q,s,n) )) ) = ( Q . ( IC s ) ) by A21
.= ( goto 1 ) by A6,A2,Z,FUNCT_4:13;
hence thesis by SCMPDS_2:73;
end;
suppose ( IC ( Comput (Q,s,n) ) ) = ( succ ( IC s ) );

then ( CurInstr (Q,( Comput (Q,s,n) )) ) = ( Q . ( succ ( IC s ) ) ) by A21
.= ( goto ( - 1 ) ) by A4,A1,Z,FUNCT_4:13;
hence thesis by SCMPDS_2:73;
end;
end;
