environ
vocabularies XBOOLE_0,STRUCT_0,SUBSET_1,ZFMISC_1,SUPINF_2,ALGSTR_0,MESFUNC1,MCART_1,VECTSP_2,RELAT_1,ARYTM_3,BINOP_1,RLVECT_1,LATTICES,SETFAM_1,FUNCSDOM,GROUP_1,ARYTM_1,FUNCT_1,VECTSP_1,MSSUBFAM,TARSKI,QUOFIELD,FUNCT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,MCART_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,SETFAM_1,BINOP_1,DOMAIN_1,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_2,VECTSP_1,TOPS_2,FUNCSDOM,GRCAT_1,GCD_1,GROUP_6,CKB1,CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB14,CKB17,CKB22,CKB23,CKB24,CKB27;
definitions VECTSP_1,VECTSP_2,STRUCT_0,XBOOLE_0,ALGSTR_0,CKB1,CKB8,CKB9,CKB14,CKB17,CKB22,CKB23,CKB27;
theorems TARSKI,MCART_1,VECTSP_1,VECTSP_2,SUBSET_1,BINOP_1,RLVECT_1,FUNCT_1,FUNCT_2,GCD_1,RELAT_1,RELSET_1,GRCAT_1,TOPS_2,XBOOLE_0,GROUP_1,GROUP_6,STRUCT_0,CKB1,CKB2,CKB4,CKB5,CKB8,CKB9,CKB10,CKB11,CKB14,CKB15,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB25,CKB26,CKB27;
schemes SUBSET_1,BINOP_1,FUNCT_2;
registrations SUBSET_1,RELSET_1,FUNCT_2,STRUCT_0,VECTSP_1,ALGSTR_1,GCD_1,CKB3,CKB16,CKB19;
constructors PARTFUN1,DOMAIN_1,TOPS_2,GRCAT_1,GROUP_6,GCD_1,ALGSTR_1,RELSET_1,CKB1,CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB14,CKB17,CKB22,CKB23,CKB24,CKB27;
requirements SUBSET,BOOLE;
begin
definition
let I being non  degenerated  domRing-like  commutative Ring;
func q1. I -> (Element of ( Quot. I )) means 
:Def9: (for z being (Element of ( Q. I )) holds (z in it iff ( z `1 ) = ( z `2 )));
existence
proof
( 1_ I ) <> ( 0. I );
then reconsider t = [ ( 1_ I ),( 1_ I ) ] as (Element of ( Q. I )) by CKB1:def 1;
set M = ( QClass. t );
A1: (for z being (Element of ( Q. I )) holds (z in M implies ( z `1 ) = ( z `2 )))
proof
let z being (Element of ( Q. I ));
assume z in M;
then A2: ( ( z `1 ) * ( t `2 ) ) = ( ( z `2 ) * ( t `1 ) ) by CKB14:def 1;
( z `1 ) = ( ( z `1 ) * ( 1_ I ) ) by VECTSP_1:def 4
.= ( ( z `2 ) * ( t `1 ) ) by A2,MCART_1:def 2
.= ( ( z `2 ) * ( 1_ I ) ) by MCART_1:def 1
.= ( z `2 ) by VECTSP_1:def 4;
hence thesis;
end;
(for z being (Element of ( Q. I )) holds (( z `1 ) = ( z `2 ) implies z in M))
proof
let z being (Element of ( Q. I ));
assume ( z `1 ) = ( z `2 );
then ( ( z `1 ) * ( t `2 ) ) = ( ( z `2 ) * ( 1_ I ) ) by MCART_1:def 2
.= ( ( z `2 ) * ( t `1 ) ) by MCART_1:def 1;
hence thesis by CKB14:def 1;
end;
hence thesis by A1;
end;
uniqueness
proof
let M1 being (Element of ( Quot. I ));
let M2 being (Element of ( Quot. I ));
assume A3: (for z being (Element of ( Q. I )) holds (z in M1 iff ( z `1 ) = ( z `2 )));
assume A4: (for z being (Element of ( Q. I )) holds (z in M2 iff ( z `1 ) = ( z `2 )));
A5: (for z being (Element of ( Q. I )) holds (z in M2 implies z in M1))
proof
let z being (Element of ( Q. I ));
assume z in M2;
then ( z `1 ) = ( z `2 ) by A4;
hence thesis by A3;
end;
(for z being (Element of ( Q. I )) holds (z in M1 implies z in M2))
proof
let z being (Element of ( Q. I ));
assume z in M1;
then ( z `1 ) = ( z `2 ) by A3;
hence thesis by A4;
end;
hence thesis by A5,SUBSET_1:3;
end;
end;
