environ
vocabularies NUMBERS,INTEGRA1,SUBSET_1,FUNCT_1,FINSEQ_1,NAT_1,RELAT_1,MEASURE7,XBOOLE_0,XXREAL_2,XXREAL_0,SEQ_4,CARD_1,REAL_1,ARYTM_3,XREAL_0,ORDINAL1,ARYTM_1,CARD_3,FINSEQ_2,INTEGRA2,SEQ_1,SEQ_2,ORDINAL2,COMPLEX1,XXREAL_1,FUNCT_3,REAL_NS1,STRUCT_0,PARTFUN1,VALUED_1,TARSKI,PRE_TOPC,INTEGRA5,REALSET1,INTEGR15,VALUED_2,MEASURE5;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XREAL_0,COMPLEX1,XXREAL_2,NAT_1,FUNCT_1,FUNCT_2,STRUCT_0,REAL_1,RCOMP_1,VALUED_1,RELSET_1,PARTFUN1,SEQ_1,SEQ_2,SEQ_4,FINSEQ_1,FINSEQ_2,FINSEQOP,VALUED_2,RVSUM_1,PRE_TOPC,XXREAL_0,EUCLID,PDIFF_1,MEASURE5,INTEGRA1,INTEGRA2,INTEGRA3,INTEGRA5,NORMSP_1,REAL_NS1,CKB1,CKB6;
definitions TARSKI,XBOOLE_0,EUCLID,INTEGRA1,INTEGRA5,CKB1,CKB6;
theorems XBOOLE_0,XBOOLE_1,XREAL_0,INTEGRA1,INTEGRA2,INTEGRA4,XXREAL_2,XXREAL_0,EUCLID,RELAT_1,XCMPLX_1,PREPOWER,ORDINAL1,SUBSET_1,XREAL_1,RCOMP_1,SEQ_4,SEQ_2,FINSEQ_1,FINSEQ_2,RVSUM_1,FUNCT_1,FUNCT_2,PARTFUN1,REAL_NS1,INTEGRA5,PDIFF_1,INTEGRA6,VALUED_1,VALUED_2,RELSET_1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8;
schemes SEQ_1,FUNCT_2,FINSEQ_1,PARTFUN2;
registrations NUMBERS,XREAL_0,FINSEQ_2,SEQ_2,INTEGRA1,FUNCT_2,NAT_1,MEMBERED,XXREAL_0,ORDINAL1,VALUED_0,VALUED_1,REAL_NS1,RELSET_1,EUCLID,VALUED_2,CARD_1,MEASURE5;
constructors REAL_1,FINSEQOP,MONOID_0,SEQ_4,PSCOMP_1,NAT_D,VFUNCT_1,PDIFF_1,BINOP_2,SEQ_1,INTEGRA2,INTEGRA5,RELSET_1,SEQ_2,INTEGRA3,VALUED_2,CKB1,CKB6;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th3: (for A being non empty  closed_interval (Subset of ( REAL )) holds (for f being (Function of A,( REAL )) holds (for D being (Division of A) holds (for e being Real holds ((( f | A ) is  bounded_below & ( 0 ) < e) implies (ex F being (middle_volume of f,D) st ( middle_sum (f,F) ) <= ( ( lower_sum (f,D) ) + e )))))))
proof
let A being non empty  closed_interval (Subset of ( REAL ));
let f being (Function of A,( REAL ));
let D being (Division of A);
let e being Real;
A1: ( 0 ) < ( len D ) by FINSEQ_1:20;
( len ( lower_volume (f,D) ) ) = ( len D ) by INTEGRA1:def 7;
then reconsider p = ( lower_volume (f,D) ) as (Element of ( ( len D ) -tuples_on ( REAL ) )) by FINSEQ_2:92;
set e1 = ( e / ( len D ) );
assume (( f | A ) is  bounded_below & ( 0 ) < e);
then consider F being (middle_volume of f,D) such that A2: (for i being Nat holds (i in ( dom D ) implies (( ( lower_volume (f,D) ) . i ) <= ( F . i ) & ( F . i ) < ( ( ( lower_volume (f,D) ) . i ) + e1 )))) by A1,CKB3:1,XREAL_1:139;
set s = ( ( len D ) |-> e1 );
reconsider t = ( p + s ) as (Element of ( ( len D ) -tuples_on ( REAL ) ));
take F;
( len F ) = ( len D ) by CKB1:def 1;
then reconsider q = F as (Element of ( ( len D ) -tuples_on ( REAL ) )) by FINSEQ_2:92;
now
let i being Nat;
assume A3: i in ( Seg ( len D ) );
then i in ( dom D ) by FINSEQ_1:def 3;
then ( q . i ) <= ( ( p . i ) + e1 ) by A2;
then ( q . i ) <= ( ( p . i ) + ( s . i ) ) by A3,FINSEQ_2:57;
hence ( q . i ) <= ( t . i ) by RVSUM_1:11;
end;
then ( Sum q ) <= ( Sum t ) by RVSUM_1:82;
then ( Sum q ) <= ( ( Sum p ) + ( Sum s ) ) by RVSUM_1:89;
then ( Sum q ) <= ( ( Sum p ) + ( ( len D ) * e1 ) ) by RVSUM_1:80;
hence thesis by A1,XCMPLX_1:87;
end;
