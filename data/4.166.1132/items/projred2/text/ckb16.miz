environ
vocabularies INCPROJ,INCSP_1,SUBSET_1,AFF_2,ANALOAF,PARTFUN1,PROJRED1,FUNCT_1,RELAT_1,TARSKI,ZFMISC_1,PROJRED2;
notations TARSKI,ZFMISC_1,SUBSET_1,DOMAIN_1,RELAT_1,RELSET_1,INCSP_1,INCPROJ,PARTFUN1,FUNCT_1,PROJRED1,CKB1,CKB2,CKB3;
definitions CKB1,CKB2,CKB3;
theorems TARSKI,INCPROJ,FUNCT_1,PROJRED1,ZFMISC_1,INCSP_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15;
registrations FUNCT_1,RELSET_1,INCPROJ;
constructors DOMAIN_1,PROJRED1,RELSET_1,CKB1,CKB2,CKB3;
requirements SUBSET,BOOLE;
begin
reserve IPP for  Desarguesian  2-dimensional IncProjSp;
reserve p for (POINT of IPP);
reserve o for (POINT of IPP);
reserve o1 for (POINT of IPP);
reserve o2 for (POINT of IPP);
reserve O1 for (LINE of IPP);
reserve O2 for (LINE of IPP);
reserve O3 for (LINE of IPP);
theorem
(((((((not o1 on O1) & (not o1 on O2)) & (not o2 on O2)) & (not o2 on O3)) & O1,O2,O3 are_concurrent ) & O1 <> O3) implies (ex o st (((not o on O1) & (not o on O3)) & ( ( IncProj (O2,o2,O3) ) * ( IncProj (O1,o1,O2) ) ) = ( IncProj (O1,o,O3) ))))
proof
assume that
A1: ((((not o1 on O1) & (not o1 on O2)) & (not o2 on O2)) & (not o2 on O3))
and
A2: O1,O2,O3 are_concurrent 
and
A3: O1 <> O3;
(ex p st ((p on O1 & p on O2) & p on O3)) by A2,CKB1:def 1;
hence thesis by A1,A3,PROJRED1:25;
end;
