environ
vocabularies XBOOLE_0,PRE_TOPC,SUBSET_1,TOPS_1,TARSKI,RCOMP_1,RELAT_1,CONNSP_1,RELAT_2,SETFAM_1,CONNSP_2;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,DOMAIN_1,STRUCT_0,PRE_TOPC,TOPS_1,CONNSP_1,CKB1,CKB2,CKB16,CKB17,CKB18,CKB19;
definitions COMPTS_1,SUBSET_1,STRUCT_0,CKB1,CKB2,CKB16,CKB17,CKB18,CKB19;
theorems TARSKI,ZFMISC_1,SETFAM_1,PRE_TOPC,TOPS_1,CONNSP_1,COMPTS_1,XBOOLE_0,XBOOLE_1,SUBSET_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
schemes SUBSET_1;
registrations XBOOLE_0,SUBSET_1,STRUCT_0,PRE_TOPC,TOPS_1,CONNSP_1;
constructors SETFAM_1,DOMAIN_1,TOPS_1,CONNSP_1,COMPTS_1,CKB1,CKB2,CKB16,CKB17,CKB18,CKB19;
requirements SUBSET,BOOLE;
begin
reserve X for non  empty TopSpace;
reserve x for (Point of X);
definition
let X being non  empty TopSpace;
let x being (Point of X);
func qComponent_of x -> (Subset of X) means 
:Def7: (ex F being (Subset-Family of X) st ((for A being (Subset of X) holds (A in F iff (A is  open  closed & x in A))) & ( meet F ) = it));
existence
proof
defpred P[ set ]
 means
(ex A1 being (Subset of X) st ((A1 = $1 & A1 is  open  closed) & x in $1));
consider F being (Subset-Family of X) such that A1: (for A being (Subset of X) holds (A in F iff P[ A ])) from SUBSET_1:sch 3;
reconsider S = ( meet F ) as (Subset of X);
take S;
take F;
thus (for A being (Subset of X) holds (A in F iff (A is  open  closed & x in A)))
proof
let A being (Subset of X);
thus (A in F implies (A is  open  closed & x in A))
proof
assume A in F;
then (ex A1 being (Subset of X) st ((A1 = A & A1 is  open  closed) & x in A)) by A1;
hence thesis;
end;

thus thesis by A1;
end;

thus thesis;
end;
uniqueness
proof
let S being (Subset of X);
let S9 being (Subset of X);
assume that
A2: (ex F being (Subset-Family of X) st ((for A being (Subset of X) holds (A in F iff (A is  open  closed & x in A))) & ( meet F ) = S))
and
A3: (ex F9 being (Subset-Family of X) st ((for A being (Subset of X) holds (A in F9 iff (A is  open  closed & x in A))) & ( meet F9 ) = S9));
consider F being (Subset-Family of X) such that A4: (for A being (Subset of X) holds (A in F iff (A is  open  closed & x in A))) and A5: ( meet F ) = S by A2;
consider F9 being (Subset-Family of X) such that A6: (for A being (Subset of X) holds (A in F9 iff (A is  open  closed & x in A))) and A7: ( meet F9 ) = S9 by A3;
A8: F9 <> ( {} ) by A6,CKB29:1;
A9: F <> ( {} ) by A4,CKB29:1;
now
let y being set;
A10:now
assume A11: y in S9;
(for B being set holds (B in F implies y in B))
proof
let B being set;
assume A12: B in F;
then reconsider B1 = B as (Subset of X);
(B1 is  open  closed & x in B1) by A4,A12;
then B1 in F9 by A6;
hence thesis by A7,A11,SETFAM_1:def 1;
end;
hence y in S by A5,A9,SETFAM_1:def 1;
end;
now
assume A13: y in S;
(for B being set holds (B in F9 implies y in B))
proof
let B being set;
assume A14: B in F9;
then reconsider B1 = B as (Subset of X);
(B1 is  open  closed & x in B1) by A6,A14;
then B1 in F by A4;
hence thesis by A5,A13,SETFAM_1:def 1;
end;
hence y in S9 by A7,A8,SETFAM_1:def 1;
end;
hence (y in S iff y in S9) by A10;
end;
hence thesis by TARSKI:1;
end;
end;
