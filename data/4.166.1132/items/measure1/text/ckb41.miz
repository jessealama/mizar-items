environ
vocabularies NUMBERS,TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,ZFMISC_1,PROB_1,FINSUB_1,FUNCT_1,SUPINF_2,XXREAL_0,MSSUBFAM,ARYTM_3,VALUED_0,FUNCOP_1,ARYTM_1,RELAT_1,CARD_3,CARD_1,NAT_1,EQREL_1,PROB_2,SUPINF_1,MEASURE1,FUNCT_7;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,NUMBERS,XXREAL_0,RELAT_1,FINSUB_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,NAT_1,SETFAM_1,FUNCOP_1,PROB_1,PROB_2,VALUED_0,FUNCT_7,SUPINF_1,SUPINF_2,CKB5,CKB8,CKB15,CKB16,CKB18,CKB22,CKB23,CKB24,CKB27,CKB34,CKB40;
definitions SUPINF_2,TARSKI,FINSUB_1,PROB_2,PROB_1,XBOOLE_0,SUBSET_1,FUNCT_1,RELAT_1,XXREAL_3,CKB8,CKB15,CKB16,CKB27,CKB40;
theorems TARSKI,FUNCT_1,FUNCT_2,ENUMSET1,ZFMISC_1,NAT_1,SETFAM_1,SUPINF_2,RELAT_1,FUNCOP_1,FINSUB_1,PROB_2,PROB_1,SUBSET_1,XBOOLE_0,XBOOLE_1,XXREAL_0,CARD_3,ORDINAL1,VALUED_0,XXREAL_3,FUNCT_7,CKB1,CKB2,CKB3,CKB7,CKB8,CKB11,CKB13,CKB14,CKB15,CKB16,CKB19,CKB20,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40;
schemes FUNCT_2,XBOOLE_0,CKB4;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,NUMBERS,MEMBERED,PROB_1,VALUED_0,FINSUB_1,RELAT_1,FUNCT_1,CKB6,CKB9,CKB10,CKB12,CKB17,CKB21,CKB33;
constructors ENUMSET1,PARTFUN1,FUNCOP_1,FINSUB_1,REAL_1,NAT_1,PROB_2,SUPINF_2,SUPINF_1,RELSET_1,FUNCT_7,CKB15,CKB16,CKB22,CKB23,CKB24,CKB27,CKB40;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
registration
let X being set;
cluster non empty  compl-closed  sigma-additive for (Subset-Family of X);
existence
proof
reconsider S = { ( {} ),X } as non empty (Subset-Family of X) by PROB_1:8;
take S;
thus S is non empty;
thus (for A being set holds (A in S implies ( X \ A ) in S))
proof
let A being set;
A1: (A = ( {} ) implies ( X \ A ) in S) by TARSKI:def 2;
A2: (A = X implies ( X \ A ) in S)
proof
assume A = X;
then ( X \ A ) = ( {} ) by XBOOLE_1:37;
hence thesis by TARSKI:def 2;
end;
assume A in S;
hence thesis by A1,A2,TARSKI:def 2;
end;

let M being (N_Sub_set_fam of X);
assume A3: M c= S;
A4: ((not X in M) implies ( union M ) in S)
proof
assume (not X in M);
then (for A being set holds (A in M implies A c= ( {} ))) by A3,TARSKI:def 2;
then ( union M ) c= ( {} ) by ZFMISC_1:76;
then ( union M ) = ( {} );
hence thesis by TARSKI:def 2;
end;
(X in M implies ( union M ) in S)
proof
assume X in M;
then X c= ( union M ) by ZFMISC_1:74;
then X = ( union M ) by XBOOLE_0:def 10;
hence thesis by TARSKI:def 2;
end;
hence thesis by A4;
end;
end;
