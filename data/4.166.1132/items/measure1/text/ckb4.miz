environ
vocabularies NUMBERS,TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,ZFMISC_1,PROB_1,FINSUB_1,FUNCT_1,SUPINF_2,XXREAL_0,MSSUBFAM,ARYTM_3,VALUED_0,FUNCOP_1,ARYTM_1,RELAT_1,CARD_3,CARD_1,NAT_1,EQREL_1,PROB_2,SUPINF_1,MEASURE1,FUNCT_7;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,NUMBERS,XXREAL_0,RELAT_1,FINSUB_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,NAT_1,SETFAM_1,FUNCOP_1,PROB_1,PROB_2,VALUED_0,FUNCT_7,SUPINF_1,SUPINF_2;
definitions SUPINF_2,TARSKI,FINSUB_1,PROB_2,PROB_1,XBOOLE_0,SUBSET_1,FUNCT_1,RELAT_1,XXREAL_3;
theorems TARSKI,FUNCT_1,FUNCT_2,ENUMSET1,ZFMISC_1,NAT_1,SETFAM_1,SUPINF_2,RELAT_1,FUNCOP_1,FINSUB_1,PROB_2,PROB_1,SUBSET_1,XBOOLE_0,XBOOLE_1,XXREAL_0,CARD_3,ORDINAL1,VALUED_0,XXREAL_3,FUNCT_7,CKB1,CKB2,CKB3;
schemes FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,NUMBERS,MEMBERED,PROB_1,VALUED_0,FINSUB_1,RELAT_1,FUNCT_1;
constructors ENUMSET1,PARTFUN1,FUNCOP_1,FINSUB_1,REAL_1,NAT_1,PROB_2,SUPINF_2,SUPINF_1,RELSET_1,FUNCT_7;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
scheme DomsetFamEx { A() -> set,P[set] } : (ex F being non  empty (Subset-Family of A()) st (for B being set holds (B in F iff (B c= A() & P[ B ]))))
provided
A1: (ex B being set st (B c= A() & P[ B ]))
proof
defpred X[ set ]
 means
(ex Z being set st ($1 = Z & P[ Z ]));
consider X being set such that A2: (for x being set holds (x in X iff (x in ( bool A() ) & X[ x ]))) from XBOOLE_0:sch 1;
X c= ( bool A() )
proof
let x being set;
assume x in X;
hence thesis by A2;
end;
then reconsider X as non  empty (Subset-Family of A()) by A1,A2;
take X;
(for B being set holds (B in X iff (B c= A() & P[ B ])))
proof
let B being set;
thus (B in X implies (B c= A() & P[ B ]))
proof
assume A3: B in X;
then (ex Z being set st (B = Z & P[ Z ])) by A2;
hence thesis by A3;
end;

assume (B c= A() & P[ B ]);
hence thesis by A2;
end;
hence thesis;
end;
