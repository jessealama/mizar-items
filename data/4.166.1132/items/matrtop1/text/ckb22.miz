environ
vocabularies ALGSTR_0,ARYTM_1,ARYTM_3,BINOP_2,CARD_1,CARD_3,CLASSES1,COMPLEX1,CONNSP_2,EUCLID,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSET_1,FINSOP_1,FUNCT_1,FUNCT_2,FVSUM_1,INCSP_1,LMOD_7,MATRIX_1,MATRIX_3,MATRIX_6,MATRIX13,MATRIX15,MATRIXR1,MATRLIN,MATRLIN2,MESFUNC1,METRIC_1,NAT_1,NUMBERS,ORDINAL1,ORDINAL2,ORDINAL4,PARTFUN1,PARTFUN3,PRE_POLY,PRE_TOPC,PRVECT_1,QC_LANG1,RANKNULL,REAL_1,RELAT_1,RLSUB_1,RLVECT_3,RLVECT_5,RVSUM_1,SETWISEO,SQUARE_1,STRUCT_0,SUBSET_1,SUPINF_2,TARSKI,TOPS_1,TOPS_2,TREES_1,VALUED_0,VALUED_1,VECTSP_1,VECTSP10,XBOOLE_0,XREAL_0,XXREAL_0,ZFMISC_1,FUNCOP_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,CARD_1,NUMBERS,XXREAL_0,NAT_1,FINSET_1,TOPS_1,TOPS_2,FUNCT_1,PARTFUN1,VALUED_0,VALUED_1,FUNCT_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,BINOP_1,STRUCT_0,VECTSP_1,MATRIX_1,MATRIX_3,VECTSP_4,VECTSP_7,VECTSP_9,MATRIX13,SETWOP_2,XREAL_0,REAL_1,RVSUM_1,ALGSTR_0,FVSUM_1,RANKNULL,MATRIX11,ORDINAL1,COMPLEX1,BINOP_2,FUNCOP_1,SQUARE_1,PRE_TOPC,PARTFUN3,MATRIX_6,MATRLIN,MATRLIN2,NAT_D,MATRIX15,CONNSP_2,METRIC_1,EUCLID,FINSOP_1,PNPROC_1,RUSUB_4,PRVECT_1,CKB6,CKB7;
definitions BORSUK_1,EUCLID,FINSEQ_1,MATRIX13,PARTFUN3,RANKNULL,SQUARE_1,STRUCT_0,TARSKI,VECTSP_1,VECTSP_4,XBOOLE_0,FVSUM_1,CKB6,CKB7;
theorems ABSVALUE,BINOP_2,CARD_1,CARD_2,CONNSP_2,EUCLID,EUCLID_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQOP,FINSOP_1,FUNCOP_1,FUNCT_1,FUNCT_2,FVSUM_1,GOBOARD6,JORDAN2C,LAPLACE,MATRIX_1,MATRIX_2,MATRIX_3,MATRIX_4,MATRIX_6,MATRIX11,MATRIX13,MATRIX14,MATRIX15,MATRIXR1,MATRLIN,MATRLIN2,MATRPROB,METRIC_1,NAT_1,ORDINAL1,PARTFUN3,PNPROC_1,RANKNULL,RELAT_1,RLVECT_1,RUSUB_4,RVSUM_1,SPPOL_1,SQUARE_1,STIRL2_1,STRUCT_0,TARSKI,TOPREAL6,TOPREAL7,TOPS_2,VALUED_0,VALUED_1,VECTSP_4,VECTSP_7,VECTSP_9,XBOOLE_0,XBOOLE_1,XCMPLX_1,XREAL_0,XREAL_1,XXREAL_0,ZFMISC_1,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB18,CKB19,CKB20,CKB21;
schemes FINSEQ_1,FUNCT_2,NAT_1;
registrations BINOP_2,CARD_1,EUCLID,EUCLID_9,FINSEQ_1,FINSEQ_2,FINSET_1,FUNCT_1,FUNCT_2,GRCAT_1,MATRIX13,MATRLIN2,MEMBERED,MOD_2,MONOID_0,NAT_1,NUMBERS,PARTFUN3,PNPROC_1,PRVECT_1,RELAT_1,RELSET_1,RVSUM_1,STRUCT_0,VALUED_0,VALUED_1,VECTSP_1,VECTSP_9,XBOOLE_0,XREAL_0,XXREAL_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB14,CKB15,CKB16,CKB17;
constructors BINARITH,CONNSP_2,FINSOP_1,FVSUM_1,LAPLACE,MATRIX_6,MATRIX11,MATRIX13,MATRIX15,MATRLIN2,MONOID_0,PARTFUN3,PNPROC_1,RANKNULL,RELSET_1,RUSUB_5,SEQ_1,SETWISEO,SQUARE_1,TOPS_1,TOPS_2,VECTSP_9,VECTSP10,WELLORD2,SEQ_4,EUCLID,CKB6,CKB7;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve X for set;
reserve Y for set;
reserve n for Nat;
reserve k for Nat;
reserve i for Nat;
reserve f for FinSequence;
theorem
Th11: (for f being FinSubsequence holds (for n being (Element of ( NAT )) holds ((for i holds (( i + n ) in X iff i in Y)) implies ( ( n Shift f ) | X ) = ( n Shift ( f | Y ) ))))
proof
let f being FinSubsequence;
let n being (Element of ( NAT ));
assume that
A1: (( i + n ) in X iff i in Y);
set fY = ( f | Y );
set nf = ( n Shift f );
set nfX = ( nf | X );
set nfY = ( n Shift fY );
A2: ( dom nfY ) = { ( n + k ) where k is (Element of ( NAT )): k in ( dom fY ) } by PNPROC_1:def 14;
A3:now
let x being set;
assume x in ( dom nfY );
then consider k being (Element of ( NAT )) such that A4: x = ( n + k ) and A5: k in ( dom fY ) by A2;
A6: k in ( dom f ) by A5,RELAT_1:57;
A7: k in Y by A5,RELAT_1:57;
then x in X by A1,A4;
hence ( nfX . x ) = ( nf . x ) by FUNCT_1:49
.= ( f . k ) by A4,A6,PNPROC_1:def 14
.= ( fY . k ) by A7,FUNCT_1:49
.= ( nfY . x ) by A4,A5,PNPROC_1:def 14;
end;
A8: ( dom nf ) = { ( n + k ) where k is (Element of ( NAT )): k in ( dom f ) } by PNPROC_1:def 14;
A9: ( dom nfY ) c= ( dom nfX )
proof
let x being set;
assume x in ( dom nfY );
then consider k being (Element of ( NAT )) such that A10: x = ( n + k ) and A11: k in ( dom fY ) by A2;
k in Y by A11,RELAT_1:57;
then A12: x in X by A1,A10;
k in ( dom f ) by A11,RELAT_1:57;
then x in ( dom nf ) by A8,A10;
hence thesis by A12,RELAT_1:57;
end;
( dom nfX ) c= ( dom nfY )
proof
let x being set;
assume A13: x in ( dom nfX );
then x in ( dom nf ) by RELAT_1:57;
then consider k being (Element of ( NAT )) such that A14: x = ( n + k ) and A15: k in ( dom f ) by A8;
x in X by A13,RELAT_1:57;
then k in Y by A1,A14;
then k in ( dom fY ) by A15,RELAT_1:57;
hence thesis by A2,A14;
end;
then ( dom nfY ) = ( dom nfX ) by A9,XBOOLE_0:def 10;
hence thesis by A3,FUNCT_1:2;
end;
