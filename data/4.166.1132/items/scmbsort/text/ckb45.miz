environ
vocabularies NUMBERS,SCMNORM,SCMFSA_2,AMI_1,SUBSET_1,SCMFSA7B,SCMFSA8C,SCMFSA8A,AMI_3,CARD_1,AMISTD_2,SCMFSA8B,TURING_1,FSM_1,GRAPHSP,FUNCT_1,PARTFUN1,COMPLEX1,FUNCT_4,ARYTM_3,SF_MASTR,SCMFSA6C,SCMFSA6B,FUNCOP_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XXREAL_0,CIRCUIT2,NAT_1,STRUCT_0,ARYTM_1,INT_1,FINSEQ_1,FINSEQ_2,SCMFSA6A,FINSUB_1,CARD_3,CLASSES1,VALUED_0,MSUALG_1,SCM_HALT,SCMBSORT,PBOOLE,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,SETFAM_1,ORDINAL1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,INT_1,RELAT_1,FINSEQ_1,FUNCT_1,COMPLEX1,FUNCT_2,PBOOLE,FUNCT_4,FINSEQ_2,FUNCT_7,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_2,SCMFSA_2,FUNCOP_1,FINSUB_1,CARD_3,PARTFUN1,SCMFSA6B,SCMFSA6C,SCMFSA6A,SF_MASTR,SCMFSA8A,SCMFSA8B,SCMFSA8C,CLASSES1,RFINSEQ,SCMFSA7B,NAT_D,SCM_HALT,XXREAL_0,CKB21,CKB35,CKB36,CKB39;
definitions TARSKI,FUNCOP_1,COMPOS_1,EXTPRO_1,XBOOLE_0,SCMFSA8C,SCM_HALT,MEMSTR_0,CKB35,CKB36,CKB39;
theorems SF_MASTR,FUNCT_1,FUNCT_7,FUNCOP_1,RELAT_1,FUNCT_2,ZFMISC_1,SCMFSA6A,FUNCT_4,FINSEQ_3,ENUMSET1,NAT_1,FINSEQ_1,RELSET_1,TARSKI,INT_1,PARTFUN1,GRFUNC_1,RFINSEQ,SCMFSA_2,SCMFSA7B,SCMFSA8B,SCMFSA8A,SCMFSA8C,SCMFSA6C,SCM_HALT,ABSVALUE,FINSEQ_4,XBOOLE_0,XBOOLE_1,SCMFSA9A,XREAL_1,ORDINAL1,XXREAL_0,NAT_D,CLASSES1,PBOOLE,AFINSQ_1,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44;
schemes RELSET_1,FUNCT_1,NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,RELSET_1,FUNCOP_1,FINSUB_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_3,RFINSEQ,SCMFSA_2,SF_MASTR,SCMFSA6C,SCMFSA7B,FINSET_1,SCMFSA8A,SCMFSA8B,SCMFSA_9,SCM_HALT,STRUCT_0,VALUED_0,ORDINAL1,RELAT_1,FUNCT_2,PBOOLE,SCMFSA10,AMISTD_2,SCMFSA6A,COMPOS_1,SFMASTR1,FUNCT_4,EXTPRO_1,SCMFSA8C,MEMSTR_0;
constructors SETWISEO,XXREAL_0,REAL_1,AMI_3,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA8C,SCM_HALT,SEQ_1,SCMFSA7B,AMISTD_2,NAT_D,CLASSES1,RELSET_1,DOMAIN_1,SFMASTR1,AMISTD_1,PBOOLE,PRE_POLY,SCMFSA_3,SCMFSA_7,SCMFSA_9,SCMFSA_2,XXREAL_2,MEMSTR_0,CKB21,CKB35,CKB36,CKB39;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve p for (preProgram of ( SCM+FSA ));
reserve i for (Element of ( NAT ));
reserve j for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve q for (Instruction-Sequence of ( SCM+FSA ));
reserve n for  natural number;
set a0 = ( intloc ( 0 ) );
set a1 = ( intloc 1 );
set a2 = ( intloc 2 );
set a3 = ( intloc 3 );
set a4 = ( intloc 4 );
set a5 = ( intloc 5 );
set a6 = ( intloc 6 );
Lm9: a1 <> a6 by SCMFSA_2:101;
Lm10: a2 <> a3 by SCMFSA_2:101;
Lm13: a2 <> a6 by SCMFSA_2:101;
Lm14: a3 <> a4 by SCMFSA_2:101;
Lm15: a3 <> a5 by SCMFSA_2:101;
Lm16: a3 <> a6 by SCMFSA_2:101;
Lm17: a4 <> a5 by SCMFSA_2:101;
Lm18: a4 <> a6 by SCMFSA_2:101;
Lm19: a5 <> a6 by SCMFSA_2:101;
set b1 = ( intloc ( ( 0 ) + 1 ) );
set b2 = ( intloc ( 1 + 1 ) );
set b3 = ( intloc ( 2 + 1 ) );
set b4 = ( intloc ( 3 + 1 ) );
set b5 = ( intloc ( 4 + 1 ) );
set b6 = ( intloc ( 5 + 1 ) );
set f0 = ( fsloc ( 0 ) );
set i1 = ( b4 := b3 );
set i2 = ( SubFrom (b3,a0) );
set i3 = ( b5 := (f0,b3) );
set i4 = ( b6 := (f0,b4) );
set i5 = ( SubFrom (b6,b5) );
set i6 = ( (f0,b3) := b6 );
set i7 = ( (f0,b4) := b5 );
set SS = ( Stop ( SCM+FSA ) );
set ifc = ( if>0 (b6,( ( i4 ';' i6 ) ';' i7 ),SS) );
set body2 = ( ( ( ( ( i1 ';' i2 ) ';' i3 ) ';' i4 ) ';' i5 ) ';' ifc );
set T2 = ( Times (b2,body2) );
set j1 = ( b2 := b1 );
set j2 = ( SubFrom (b2,a0) );
set j3 = ( b3 :=len f0 );
set Sb = ( ( j1 ';' j2 ) ';' j3 );
set body1 = ( Sb ';' T2 );
set T1 = ( Times (b1,body1) );
set w2 = ( b2 := a0 );
set w3 = ( b3 := a0 );
set w4 = ( b4 := a0 );
set w5 = ( b5 := a0 );
set w6 = ( b6 := a0 );
set w7 = ( b1 :=len f0 );
Lm22: (not body2 destroy b2)
proof
A1: (not i1 destroy b2) by SCMFSA7B:6,SCMFSA_2:101;
A2: (not i2 destroy b2) by SCMFSA7B:8,SCMFSA_2:101;
A3: (not i3 destroy b2) by SCMFSA7B:14,SCMFSA_2:101;
A4: (not i4 destroy b2) by SCMFSA7B:14,SCMFSA_2:101;
A5: (not i6 destroy b2) by SCMFSA7B:15;
A6: (not i7 destroy b2) by SCMFSA7B:15;
A7: (not SS destroy b2) by SCMFSA8C:56;
(not ( ( i4 ';' i6 ) ';' i7 ) destroy b2) by A4,A5,A6,SCMFSA8C:54,SCMFSA8C:55;
then A8: (not ifc destroy b2) by A7,SCMFSA8C:88;
(not ( ( i1 ';' i2 ) ';' i3 ) destroy b2) by A1,A2,A3,SCMFSA8C:54,SCMFSA8C:55;
then (not ( ( ( i1 ';' i2 ) ';' i3 ) ';' i4 ) destroy b2) by Lm13,SCMFSA7B:14,SCMFSA8C:54;
then (not ( ( ( ( i1 ';' i2 ) ';' i3 ) ';' i4 ) ';' i5 ) destroy b2) by Lm13,SCMFSA7B:8,SCMFSA8C:54;
hence thesis by A8,SCMFSA8C:52;
end;
Lm23: ( Times (b2,body2) ) is  good  InitHalting
proof
thus ( Times (b2,body2) ) is  good;
let s being (State of ( SCM+FSA ));
assume that
Z1: ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) c= s;
let P being (Instruction-Sequence of ( SCM+FSA ));
assume that
Z2: ( Times (b2,body2) ) c= P;
ZZ2: ( P +* ( Times (b2,body2) ) ) = P by Z2,FUNCT_4:98;
X2: ( dom ( ( intloc ( 0 ) ) .--> 1 ) ) = { ( intloc ( 0 ) ) } by FUNCOP_1:13;
X1: ( dom ( ( intloc ( 0 ) ) .--> 1 ) ) misses { ( IC ( SCM+FSA ) ) } by X2,SCMFSA_2:56,ZFMISC_1:11;
( Start-At (( 0 ),( SCM+FSA )) ) c= ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) by FUNCT_4:25;
then x: s = ( Initialize s ) by Z1,FUNCT_4:98,XBOOLE_1:1;
Y2: ( intloc ( 0 ) ) in ( dom ( ( intloc ( 0 ) ) .--> 1 ) ) by X2,TARSKI:def 1;
( dom ( ( intloc ( 0 ) ) .--> 1 ) ) misses ( dom ( Start-At (( 0 ),( SCM+FSA )) ) ) by X1,FUNCOP_1:13;
then ( ( intloc ( 0 ) ) .--> 1 ) c= ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) by FUNCT_4:32;
then ( ( intloc ( 0 ) ) .--> 1 ) c= s by Z1,XBOOLE_1:1;
then A2: ( s . ( intloc ( 0 ) ) ) = ( ( ( intloc ( 0 ) ) .--> 1 ) . ( intloc ( 0 ) ) ) by Y2,GRFUNC_1:2
.= 1 by FUNCOP_1:72;
( Times (b2,body2) ) is_halting_on s,P by Lm22,A2,SCM_HALT:62;
hence P halts_on s by x,ZZ2,SCMFSA7B:def 7;
end;
Lm24: (not body2 destroy b1)
proof
A1: (not i1 destroy b1) by SCMFSA7B:6,SCMFSA_2:101;
A2: (not i2 destroy b1) by SCMFSA7B:8,SCMFSA_2:101;
A3: (not i3 destroy b1) by SCMFSA7B:14,SCMFSA_2:101;
A4: (not i4 destroy b1) by SCMFSA7B:14,SCMFSA_2:101;
A5: (not i6 destroy b1) by SCMFSA7B:15;
A6: (not i7 destroy b1) by SCMFSA7B:15;
A7: (not SS destroy b1) by SCMFSA8C:56;
(not ( ( i4 ';' i6 ) ';' i7 ) destroy b1) by A4,A5,A6,SCMFSA8C:54,SCMFSA8C:55;
then A8: (not ifc destroy b1) by A7,SCMFSA8C:88;
(not ( ( i1 ';' i2 ) ';' i3 ) destroy b1) by A1,A2,A3,SCMFSA8C:54,SCMFSA8C:55;
then (not ( ( ( i1 ';' i2 ) ';' i3 ) ';' i4 ) destroy b1) by Lm9,SCMFSA7B:14,SCMFSA8C:54;
then (not ( ( ( ( i1 ';' i2 ) ';' i3 ) ';' i4 ) ';' i5 ) destroy b1) by Lm9,SCMFSA7B:8,SCMFSA8C:54;
hence thesis by A8,SCMFSA8C:52;
end;
Lm25: (not body1 destroy b1)
proof
A1: (not j1 destroy b1) by SCMFSA7B:6,SCMFSA_2:101;
A2: (not j2 destroy b1) by SCMFSA7B:8,SCMFSA_2:101;
A3: (not j3 destroy b1) by SCMFSA7B:16,SCMFSA_2:101;
A4: (not T2 destroy b1) by Lm24,CKB1:1,SCMFSA_2:101;
(not ( ( j1 ';' j2 ) ';' j3 ) destroy b1) by A1,A2,A3,SCMFSA8C:54,SCMFSA8C:55;
hence thesis by A4,SCMFSA8C:52;
end;
Lm26: ( Times (b1,body1) ) is  good  InitHalting
proof
thus ( Times (b1,body1) ) is  good;
let s being (State of ( SCM+FSA ));
assume that
Z1: ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) c= s;
let P being (Instruction-Sequence of ( SCM+FSA ));
assume that
Z2: ( Times (b1,body1) ) c= P;
ZZ2: ( P +* ( Times (b1,body1) ) ) = P by Z2,FUNCT_4:98;
X2: ( dom ( ( intloc ( 0 ) ) .--> 1 ) ) = { ( intloc ( 0 ) ) } by FUNCOP_1:13;
X1: ( dom ( ( intloc ( 0 ) ) .--> 1 ) ) misses { ( IC ( SCM+FSA ) ) } by X2,SCMFSA_2:56,ZFMISC_1:11;
( Start-At (( 0 ),( SCM+FSA )) ) c= ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) by FUNCT_4:25;
then x: s = ( Initialize s ) by Z1,FUNCT_4:98,XBOOLE_1:1;
Y2: ( intloc ( 0 ) ) in ( dom ( ( intloc ( 0 ) ) .--> 1 ) ) by X2,TARSKI:def 1;
( dom ( ( intloc ( 0 ) ) .--> 1 ) ) misses ( dom ( Start-At (( 0 ),( SCM+FSA )) ) ) by X1,FUNCOP_1:13;
then ( ( intloc ( 0 ) ) .--> 1 ) c= ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) by FUNCT_4:32;
then ( ( intloc ( 0 ) ) .--> 1 ) c= s by Z1,XBOOLE_1:1;
then A2: ( s . ( intloc ( 0 ) ) ) = ( ( ( intloc ( 0 ) ) .--> 1 ) . ( intloc ( 0 ) ) ) by Y2,GRFUNC_1:2
.= 1 by FUNCOP_1:72;
reconsider TT = T2 as  good  InitHalting (Program of ( SCM+FSA )) by Lm23;
body1 = ( ( ( j1 ';' j2 ) ';' j3 ) ';' TT );
then ( Times (b1,body1) ) is_halting_on s,P by Lm25,A2,SCM_HALT:62;
hence P halts_on s by x,ZZ2,SCMFSA7B:def 7;
end;
Lm27: (for p being (Instruction-Sequence of ( SCM+FSA )) holds (for s being (State of ( SCM+FSA )) holds ((( s . b6 ) > ( 0 ) implies ( ( IExec (ifc,p,s) ) . f0 ) = ( ( ( s . f0 ) +* (( abs ( s . b3 ) ),( ( s . f0 ) /. ( abs ( s . b4 ) ) )) ) +* (( abs ( s . b4 ) ),( s . b5 )) )) & (( s . b6 ) <= ( 0 ) implies ( ( IExec (ifc,p,s) ) . f0 ) = ( s . f0 )))))
proof
let p being (Instruction-Sequence of ( SCM+FSA ));
let s being (State of ( SCM+FSA ));
set s0 = ( Initialized s );
set s1 = ( Exec (i4,s0) );
set s2 = ( IExec (( i4 ';' i6 ),p,s) );
A1: ( s0 . f0 ) = ( s . f0 ) by SCMFSA6C:3;
( s0 . b4 ) = ( s . b4 ) by SCMFSA6C:3;
then A2: ( s1 . b6 ) = ( ( s . f0 ) /. ( abs ( s . b4 ) ) ) by A1,CKB2:1;
A3: ( s1 . f0 ) = ( s . f0 ) by A1,SCMFSA_2:72;
A4: ( s1 . b3 ) = ( s . b3 ) by CKB4:1;
A5: ( s1 . b4 ) = ( s . b4 ) by CKB4:1;
A6: ( s1 . b5 ) = ( s . b5 ) by CKB4:1;
A7: ( s2 . f0 ) = ( ( Exec (i6,s1) ) . f0 ) by SCMFSA6C:9
.= ( ( s . f0 ) +* (( abs ( s . b3 ) ),( ( s . f0 ) /. ( abs ( s . b4 ) ) )) ) by A2,A3,A4,CKB3:1;
A8: ( s2 . b4 ) = ( ( Exec (i6,s1) ) . b4 ) by SCMFSA6C:8
.= ( s . b4 ) by A5,SCMFSA_2:73;
A9: ( s2 . b5 ) = ( ( Exec (i6,s1) ) . b5 ) by SCMFSA6C:8
.= ( s . b5 ) by A6,SCMFSA_2:73;
set I = ( ( i4 ';' i6 ) ';' i7 );
set J = ( Stop ( SCM+FSA ) );
hereby
assume ( s . b6 ) > ( 0 );
hence ( ( IExec (( if>0 (b6,I,J) ),p,s) ) . f0 ) = ( ( IExec (I,p,s) ) . f0 ) by SCM_HALT:44
.= ( ( Exec (i7,s2) ) . f0 ) by SCMFSA6C:7
.= ( ( ( s . f0 ) +* (( abs ( s . b3 ) ),( ( s . f0 ) /. ( abs ( s . b4 ) ) )) ) +* (( abs ( s . b4 ) ),( s . b5 )) ) by A7,A8,A9,CKB3:1;
end;
assume ( s . b6 ) <= ( 0 );
hence ( ( IExec (( if>0 (b6,I,J) ),p,s) ) . f0 ) = ( ( IExec (J,p,s) ) . f0 ) by SCM_HALT:44
.= ( s . f0 ) by CKB6:1;
end;
Lm28: (for p being (Instruction-Sequence of ( SCM+FSA )) holds (for s being (State of ( SCM+FSA )) holds ( ( IExec (ifc,p,s) ) . b3 ) = ( s . b3 )))
proof
let p being (Instruction-Sequence of ( SCM+FSA ));
let s being (State of ( SCM+FSA ));
set s1 = ( Exec (i4,( Initialized s )) );
set s2 = ( IExec (( i4 ';' i6 ),p,s) );
A1: ( s1 . b3 ) = ( s . b3 ) by CKB4:1;
A2: ( s2 . b3 ) = ( ( Exec (i6,s1) ) . b3 ) by SCMFSA6C:8
.= ( s . b3 ) by A1,SCMFSA_2:73;
per cases ;
suppose ( s . b6 ) > ( 0 );

hence ( ( IExec (ifc,p,s) ) . b3 ) = ( ( IExec (( ( i4 ';' i6 ) ';' i7 ),p,s) ) . b3 ) by SCM_HALT:44
.= ( ( Exec (i7,s2) ) . b3 ) by SCMFSA6C:6
.= ( s . b3 ) by A2,SCMFSA_2:73;
end;
suppose ( s . b6 ) <= ( 0 );

hence ( ( IExec (ifc,p,s) ) . b3 ) = ( ( IExec (( Stop ( SCM+FSA ) ),p,s) ) . b3 ) by SCM_HALT:44
.= ( s . b3 ) by CKB6:1;
end;
end;
Lm29: (for p being (Instruction-Sequence of ( SCM+FSA )) holds (for s being (State of ( SCM+FSA )) holds ((( s . b3 ) <= ( len ( s . f0 ) ) & ( s . b3 ) >= 2) implies ((((((( ( IExec (body2,p,s) ) . b3 ) = ( ( s . b3 ) - 1 ) & ( s . f0 ),( ( IExec (body2,p,s) ) . f0 ) are_fiberwise_equipotent ) & (( ( s . f0 ) . ( s . b3 ) ) = ( ( ( IExec (body2,p,s) ) . f0 ) . ( s . b3 ) ) or ( ( s . f0 ) . ( s . b3 ) ) = ( ( ( IExec (body2,p,s) ) . f0 ) . ( ( s . b3 ) - 1 ) ))) & (( ( s . f0 ) . ( s . b3 ) ) = ( ( ( IExec (body2,p,s) ) . f0 ) . ( s . b3 ) ) or ( ( s . f0 ) . ( ( s . b3 ) - 1 ) ) = ( ( ( IExec (body2,p,s) ) . f0 ) . ( s . b3 ) ))) & (( ( s . f0 ) . ( s . b3 ) ) = ( ( ( IExec (body2,p,s) ) . f0 ) . ( ( s . b3 ) - 1 ) ) or ( ( s . f0 ) . ( ( s . b3 ) - 1 ) ) = ( ( ( IExec (body2,p,s) ) . f0 ) . ( ( s . b3 ) - 1 ) ))) & (for k being set holds (((k <> ( ( s . b3 ) - 1 ) & k <> ( s . b3 )) & k in ( dom ( s . f0 ) )) implies ( ( s . f0 ) . k ) = ( ( ( IExec (body2,p,s) ) . f0 ) . k )))) & (ex x1,x2 being Integer st ((x1 = ( ( ( IExec (body2,p,s) ) . f0 ) . ( ( s . b3 ) - 1 ) ) & x2 = ( ( ( IExec (body2,p,s) ) . f0 ) . ( s . b3 ) )) & x1 >= x2))))))
proof
let p being (Instruction-Sequence of ( SCM+FSA ));
let s being (State of ( SCM+FSA ));
assume that
A1: ( s . b3 ) <= ( len ( s . f0 ) )
and
A2: ( s . b3 ) >= 2;
A3: ( ( s . b3 ) - 1 ) >= ( 2 - 1 ) by A2,XREAL_1:9;
then A4: ( abs ( ( s . b3 ) - 1 ) ) = ( ( s . b3 ) - 1 ) by ABSVALUE:def 1;
A5: ( ( s . b3 ) - 1 ) <= ( len ( s . f0 ) ) by A1,XREAL_1:146,XXREAL_0:2;
A6: ( s . b3 ) >= 1 by A2,XXREAL_0:2;
A7: ( abs ( s . b3 ) ) = ( s . b3 ) by A2,ABSVALUE:def 1;
reconsider k1 = ( ( s . b3 ) - 1 ) as (Element of ( NAT )) by A3,INT_1:3;
reconsider k2 = ( s . b3 ) as (Element of ( NAT )) by A2,INT_1:3;
A8: k1 in ( dom ( s . f0 ) ) by A3,A5,FINSEQ_3:25;
reconsider n1 = ( ( s . f0 ) . k1 ) as Integer;
A9: k2 in ( dom ( s . f0 ) ) by A1,A6,FINSEQ_3:25;
reconsider n2 = ( ( s . f0 ) . k2 ) as Integer;
set s0 = ( Initialized s );
set s1 = ( Exec (i1,s0) );
set s2 = ( IExec (( i1 ';' i2 ),p,s) );
set s3 = ( IExec (( ( i1 ';' i2 ) ';' i3 ),p,s) );
set s4 = ( IExec (( ( ( i1 ';' i2 ) ';' i3 ) ';' i4 ),p,s) );
set s5 = ( IExec (( ( ( ( i1 ';' i2 ) ';' i3 ) ';' i4 ) ';' i5 ),p,s) );
set s6 = ( IExec (body2,p,s) );
A10: ( s1 . b4 ) = ( s0 . b3 ) by SCMFSA_2:63
.= ( s . b3 ) by SCMFSA6C:3;
A11: ( s1 . f0 ) = ( s0 . f0 ) by SCMFSA_2:63
.= ( s . f0 ) by SCMFSA6C:3;
A12: ( s1 . b3 ) = ( s . b3 ) by CKB5:1;
A13: ( s1 . a0 ) = ( s0 . a0 ) by SCMFSA_2:63
.= 1 by SCMFSA6A:38;
A14: ( s2 . f0 ) = ( ( Exec (i2,s1) ) . f0 ) by SCMFSA6C:9
.= ( s . f0 ) by A11,SCMFSA_2:65;
A15: ( s2 . b3 ) = ( ( Exec (i2,s1) ) . b3 ) by SCMFSA6C:8
.= ( ( s . b3 ) - 1 ) by A12,A13,SCMFSA_2:65;
A16: ( s2 . b4 ) = ( ( Exec (i2,s1) ) . b4 ) by SCMFSA6C:8
.= ( s . b3 ) by A10,Lm14,SCMFSA_2:65;
A17: ( s3 . f0 ) = ( ( Exec (i3,s2) ) . f0 ) by SCMFSA6C:7
.= ( s . f0 ) by A14,SCMFSA_2:72;
A18: ( ( s . f0 ) /. k1 ) = n1 by A3,A5,FINSEQ_4:15;
A19: ( s3 . b5 ) = ( ( Exec (i3,s2) ) . b5 ) by SCMFSA6C:6
.= n1 by A4,A14,A15,A18,CKB2:1;
A20: ( s3 . b4 ) = ( ( Exec (i3,s2) ) . b4 ) by SCMFSA6C:6
.= ( s . b3 ) by A16,Lm17,SCMFSA_2:72;
A21: ( s3 . b3 ) = ( ( Exec (i3,s2) ) . b3 ) by SCMFSA6C:6
.= ( ( s . b3 ) - 1 ) by A15,Lm15,SCMFSA_2:72;
A22: ( s4 . f0 ) = ( ( Exec (i4,s3) ) . f0 ) by SCMFSA6C:7
.= ( s . f0 ) by A17,SCMFSA_2:72;
A23: ( ( s . f0 ) /. k2 ) = n2 by A1,A6,FINSEQ_4:15;
A24: ( s4 . b6 ) = ( ( Exec (i4,s3) ) . b6 ) by SCMFSA6C:6
.= n2 by A7,A17,A20,A23,CKB2:1;
A25: ( s4 . b3 ) = ( ( Exec (i4,s3) ) . b3 ) by SCMFSA6C:6
.= ( ( s . b3 ) - 1 ) by A21,Lm16,SCMFSA_2:72;
A26: ( s4 . b4 ) = ( ( Exec (i4,s3) ) . b4 ) by SCMFSA6C:6
.= ( s . b3 ) by A20,Lm18,SCMFSA_2:72;
A27: ( s4 . b5 ) = ( ( Exec (i4,s3) ) . b5 ) by SCMFSA6C:6
.= ( ( s . f0 ) . ( ( s . b3 ) - 1 ) ) by A19,Lm19,SCMFSA_2:72;
A28: ( s5 . f0 ) = ( ( Exec (i5,s4) ) . f0 ) by SCMFSA6C:7
.= ( s . f0 ) by A22,SCMFSA_2:65;
A29: ( s5 . b3 ) = ( ( Exec (i5,s4) ) . b3 ) by SCMFSA6C:6
.= ( ( s . b3 ) - 1 ) by A25,Lm16,SCMFSA_2:65;
A30: ( s5 . b4 ) = ( ( Exec (i5,s4) ) . b4 ) by SCMFSA6C:6
.= ( s . b3 ) by A26,Lm18,SCMFSA_2:65;
A31: ( s5 . b5 ) = ( ( Exec (i5,s4) ) . b5 ) by SCMFSA6C:6
.= n1 by A27,Lm19,SCMFSA_2:65;
A32: ( s5 . b6 ) = ( ( Exec (i5,s4) ) . b6 ) by SCMFSA6C:6
.= ( n2 - n1 ) by A24,A27,SCMFSA_2:65;
A33: ( s6 . f0 ) = ( ( IExec (ifc,p,s5) ) . f0 ) by SCMFSA6C:2;
thus ( s6 . b3 ) = ( ( IExec (ifc,p,s5) ) . b3 ) by SCMFSA6C:1
.= ( ( s . b3 ) - 1 ) by A29,Lm28;
per cases ;
suppose A34: ( s5 . b6 ) > ( 0 );

then A35: ( s6 . f0 ) = ( ( ( s . f0 ) +* (k1,n2) ) +* (k2,n1) ) by A4,A7,A23,A28,A29,A30,A31,A33,Lm27;
A36: ( dom ( ( s . f0 ) +* (k1,n2) ) ) = ( dom ( s . f0 ) ) by FUNCT_7:30;
then A37: ( dom ( s6 . f0 ) ) = ( dom ( s . f0 ) ) by A35,FUNCT_7:30;
A38: k2 in ( dom ( ( s . f0 ) +* (k1,n2) ) ) by A1,A6,A36,FINSEQ_3:25;
A39: ( ( s6 . f0 ) . k2 ) = ( ( s . f0 ) . k1 ) by A9,A35,A36,FUNCT_7:31;
A40:now
per cases ;
suppose k1 = k2;

hence ( ( s6 . f0 ) . k1 ) = ( ( s . f0 ) . k2 );
end;
suppose k1 <> k2;

hence ( ( s6 . f0 ) . k1 ) = ( ( ( s . f0 ) +* (k1,n2) ) . k1 ) by A35,FUNCT_7:32
.= ( ( s . f0 ) . k2 ) by A8,FUNCT_7:31;
end;
end;
A41:now
let k being set;
assume that
A42: k <> k1
and
A43: k <> k2
and
k in ( dom ( s . f0 ) );
thus ( ( s6 . f0 ) . k ) = ( ( ( s . f0 ) +* (k1,n2) ) . k ) by A35,A43,FUNCT_7:32
.= ( ( s . f0 ) . k ) by A42,FUNCT_7:32;
end;
hence ( s . f0 ),( s6 . f0 ) are_fiberwise_equipotent  by A8,A9,A37,A39,A40,RFINSEQ:28;
thus (( ( s . f0 ) . ( s . b3 ) ) = ( ( ( IExec (body2,p,s) ) . f0 ) . ( s . b3 ) ) or ( ( s . f0 ) . ( s . b3 ) ) = ( ( ( IExec (body2,p,s) ) . f0 ) . ( ( s . b3 ) - 1 ) )) by A40;
thus (( ( s . f0 ) . ( s . b3 ) ) = ( ( ( IExec (body2,p,s) ) . f0 ) . ( s . b3 ) ) or ( ( s . f0 ) . ( ( s . b3 ) - 1 ) ) = ( ( ( IExec (body2,p,s) ) . f0 ) . ( s . b3 ) )) by A35,A38,FUNCT_7:31;
thus (( ( s . f0 ) . ( s . b3 ) ) = ( ( ( IExec (body2,p,s) ) . f0 ) . ( ( s . b3 ) - 1 ) ) or ( ( s . f0 ) . ( ( s . b3 ) - 1 ) ) = ( ( ( IExec (body2,p,s) ) . f0 ) . ( ( s . b3 ) - 1 ) )) by A40;
thus (for k being set holds (((k <> ( ( s . b3 ) - 1 ) & k <> ( s . b3 )) & k in ( dom ( s . f0 ) )) implies ( ( s . f0 ) . k ) = ( ( s6 . f0 ) . k ))) by A41;
A44: ( ( n2 - n1 ) + n1 ) > ( ( 0 ) + n1 ) by A32,A34,XREAL_1:6;
take n2;
take n1;
thus thesis by A9,A35,A36,A40,A44,FUNCT_7:31;
end;
suppose A45: ( s5 . b6 ) <= ( 0 );

hence ( s . f0 ),( s6 . f0 ) are_fiberwise_equipotent  by A28,A33,Lm27;
thus (( ( s . f0 ) . ( s . b3 ) ) = ( ( ( IExec (body2,p,s) ) . f0 ) . ( s . b3 ) ) or ( ( s . f0 ) . ( s . b3 ) ) = ( ( ( IExec (body2,p,s) ) . f0 ) . ( ( s . b3 ) - 1 ) )) by A28,A33,A45,Lm27;
thus (( ( s . f0 ) . ( s . b3 ) ) = ( ( ( IExec (body2,p,s) ) . f0 ) . ( s . b3 ) ) or ( ( s . f0 ) . ( ( s . b3 ) - 1 ) ) = ( ( ( IExec (body2,p,s) ) . f0 ) . ( s . b3 ) )) by A28,A33,A45,Lm27;
thus (( ( s . f0 ) . ( s . b3 ) ) = ( ( ( IExec (body2,p,s) ) . f0 ) . ( ( s . b3 ) - 1 ) ) or ( ( s . f0 ) . ( ( s . b3 ) - 1 ) ) = ( ( ( IExec (body2,p,s) ) . f0 ) . ( ( s . b3 ) - 1 ) )) by A28,A33,A45,Lm27;
thus (for k being set holds (((k <> ( ( s . b3 ) - 1 ) & k <> ( s . b3 )) & k in ( dom ( s . f0 ) )) implies ( ( s . f0 ) . k ) = ( ( s6 . f0 ) . k ))) by A28,A33,A45,Lm27;
A46: ( ( n2 - n1 ) + n1 ) <= ( ( 0 ) + n1 ) by A32,A45,XREAL_1:6;
take n1;
take n2;
thus thesis by A28,A33,A45,A46,Lm27;
end;
end;
Lm30: (for p being (Instruction-Sequence of ( SCM+FSA )) holds (for s being (State of ( SCM+FSA )) holds (((( s . b2 ) >= ( 0 ) & ( s . b2 ) < ( s . b3 )) & ( s . b3 ) <= ( len ( s . f0 ) )) implies (ex k being (Element of ( NAT )) st ((k <= ( s . b3 ) & k >= ( ( s . b3 ) - ( s . b2 ) )) & ( ( ( IExec (T2,p,s) ) . f0 ) . k ) = ( ( s . f0 ) . ( s . b3 ) ))))))
proof
let p being (Instruction-Sequence of ( SCM+FSA ));
let s being (State of ( SCM+FSA ));
assume that
A1: ( s . b2 ) >= ( 0 )
and
A2: ( s . b2 ) < ( s . b3 )
and
A3: ( s . b3 ) <= ( len ( s . f0 ) );
defpred P[ Nat ]
 means
(for t being (State of ( SCM+FSA )) holds (for q holds (((( t . b2 ) = $1 & ( t . b2 ) < ( t . b3 )) & ( t . b3 ) <= ( len ( t . f0 ) )) implies ((for m being (Element of ( NAT )) holds ((m > ( t . b3 ) & m <= ( len ( t . f0 ) )) implies ( ( t . f0 ) . m ) = ( ( ( IExec (T2,q,t) ) . f0 ) . m ))) & (ex n being (Element of ( NAT )) st ((n <= ( t . b3 ) & n >= ( ( t . b3 ) - $1 )) & ( ( ( IExec (T2,q,t) ) . f0 ) . n ) = ( ( t . f0 ) . ( t . b3 ) )))))));
A4: P[ ( 0 ) ]
proof
let t being (State of ( SCM+FSA ));
let q;
assume that
A5: ( t . b2 ) = ( 0 )
and
A6: ( t . b2 ) < ( t . b3 )
and
( t . b3 ) <= ( len ( t . f0 ) );
set If0 = ( ( IExec (T2,q,t) ) . f0 );
thus (for m being (Element of ( NAT )) holds ((m > ( t . b3 ) & m <= ( len ( t . f0 ) )) implies ( ( t . f0 ) . m ) = ( If0 . m ))) by A5,SCM_HALT:67;
reconsider n = ( t . b3 ) as (Element of ( NAT )) by A5,A6,INT_1:3;
take n;
thus n <= ( t . b3 );
thus n >= ( ( t . b3 ) - ( 0 ) );
thus thesis by A5,SCM_HALT:67;
end;
set sb2 = ( SubFrom (b2,a0) );
A7:now
let k being (Element of ( NAT ));
assume A8: P[ k ];
now
let t being (State of ( SCM+FSA ));
let q;
assume that
A9: ( t . b2 ) = ( k + 1 )
and
A10: ( t . b2 ) < ( t . b3 )
and
A11: ( t . b3 ) <= ( len ( t . f0 ) );
set t1 = ( IExec (( body2 ';' sb2 ),q,t) );
set IB = ( IExec (body2,q,t) );
set t2 = ( IExec (T2,q,t1) );
A12: ( t1 . b2 ) = ( ( Exec (sb2,IB) ) . b2 ) by SCM_HALT:23
.= ( ( IB . b2 ) - ( IB . a0 ) ) by SCMFSA_2:65
.= ( ( IB . b2 ) - 1 ) by SCM_HALT:9
.= ( ( ( Initialized t ) . b2 ) - 1 ) by Lm22,SCM_HALT:53
.= ( ( t . b2 ) - 1 ) by SCMFSA6C:3;
A13: 2 <= ( k + 2 ) by NAT_1:11;
( ( k + 1 ) + 1 ) <= ( t . b3 ) by A9,A10,INT_1:7;
then A14: 2 <= ( t . b3 ) by A13,XXREAL_0:2;
A15: ( t1 . b3 ) = ( ( Exec (sb2,IB) ) . b3 ) by SCM_HALT:23
.= ( IB . b3 ) by Lm10,SCMFSA_2:65
.= ( ( t . b3 ) - 1 ) by A11,A14,Lm29;
A16: ( ( t . b2 ) - 1 ) < ( ( t . b3 ) - 1 ) by A10,XREAL_1:9;
A17: ( t1 . b2 ) < ( t1 . b3 ) by A10,A12,A15,XREAL_1:9;
A18: ( t1 . f0 ) = ( ( Exec (sb2,IB) ) . f0 ) by SCM_HALT:24
.= ( IB . f0 ) by SCMFSA_2:65;
A19: ( t . f0 ),( IB . f0 ) are_fiberwise_equipotent  by A11,A14,Lm29;
then A20: ( len ( t . f0 ) ) = ( len ( t1 . f0 ) ) by A18,RFINSEQ:3;
then A21: ( t1 . b3 ) <= ( len ( t1 . f0 ) ) by A11,A15,XREAL_1:146,XXREAL_0:2;
A22: ( ( IExec (T2,q,t) ) . f0 ) = ( t2 . f0 ) by A9,Lm22,SCM_HALT:69;
A23: ( IB . f0 ) = ( ( Exec (sb2,IB) ) . f0 ) by SCMFSA_2:65
.= ( t1 . f0 ) by SCM_HALT:24;
thus (for m being (Element of ( NAT )) holds ((m > ( t . b3 ) & m <= ( len ( t . f0 ) )) implies ( ( t . f0 ) . m ) = ( ( ( IExec (T2,q,t) ) . f0 ) . m )))
proof
let m being (Element of ( NAT ));
assume that
A24: m > ( t . b3 )
and
A25: m <= ( len ( t . f0 ) );
A26: ( t . b3 ) > ( ( t . b3 ) - 1 ) by XREAL_1:146;
A27: m > ( t1 . b3 ) by A15,A24,XREAL_1:146,XXREAL_0:2;
A28: m <= ( len ( t1 . f0 ) ) by A18,A19,A25,RFINSEQ:3;
m >= 2 by A14,A24,XXREAL_0:2;
then m >= 1 by XXREAL_0:2;
then m in ( dom ( t . f0 ) ) by A25,FINSEQ_3:25;
hence ( ( t . f0 ) . m ) = ( ( t1 . f0 ) . m ) by A11,A14,A23,A24,A26,Lm29
.= ( ( ( IExec (T2,q,t) ) . f0 ) . m ) by A8,A9,A12,A17,A21,A22,A27,A28;
end;

hereby
reconsider n = ( t . b3 ) as (Element of ( NAT )) by A9,A10,INT_1:3;
per cases  by A11,A14,Lm29;
suppose A29: ( ( t . f0 ) . ( t . b3 ) ) = ( ( ( IExec (body2,q,t) ) . f0 ) . ( t . b3 ) );

take n;
thus n <= ( t . b3 );
n <= ( n + ( k + 1 ) ) by NAT_1:11;
hence n >= ( ( t . b3 ) - ( k + 1 ) ) by XREAL_1:20;
thus ( ( ( IExec (T2,q,t) ) . f0 ) . n ) = ( ( t . f0 ) . ( t . b3 ) ) by A8,A9,A11,A12,A15,A16,A20,A21,A22,A23,A29,XREAL_1:146;
end;
suppose A30: ( ( t . f0 ) . ( t . b3 ) ) = ( ( ( IExec (body2,q,t) ) . f0 ) . ( ( t . b3 ) - 1 ) );

consider m being (Element of ( NAT )) such that A31: m <= ( t1 . b3 ) and A32: m >= ( ( t1 . b3 ) - k ) and A33: ( ( ( IExec (T2,q,t1) ) . f0 ) . m ) = ( ( t1 . f0 ) . ( t1 . b3 ) ) by A8,A9,A12,A17,A21;
take m;
thus m <= ( t . b3 ) by A15,A31,XREAL_1:146,XXREAL_0:2;
thus m >= ( ( t . b3 ) - ( k + 1 ) ) by A15,A32;
thus ( ( ( IExec (T2,q,t) ) . f0 ) . m ) = ( ( t . f0 ) . ( t . b3 ) ) by A9,A15,A23,A30,A33,Lm22,SCM_HALT:69;
end;
end;
end;
hence P[ ( k + 1 ) ];
end;
A34: (for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A4,A7);
reconsider i = ( s . b2 ) as (Element of ( NAT )) by A1,INT_1:3;
P[ i ] by A34;
hence thesis by A2,A3;
end;
Lm31: (for k being (Element of ( NAT )) holds (for t being (State of ( SCM+FSA )) holds (for q holds (((k = ( t . b2 ) & k < ( t . b3 )) & ( t . b3 ) <= ( len ( t . f0 ) )) implies (((( t . f0 ),( ( IExec (T2,q,t) ) . f0 ) are_fiberwise_equipotent  & (for m being (Element of ( NAT )) holds (((m < ( ( t . b3 ) - k ) & m >= 1) or (m > ( t . b3 ) & m in ( dom ( t . f0 ) ))) implies ( ( t . f0 ) . m ) = ( ( ( IExec (T2,q,t) ) . f0 ) . m )))) & (for m being (Element of ( NAT )) holds ((m >= ( ( t . b3 ) - k ) & m <= ( t . b3 )) implies (ex x1,x2 being Integer st ((x1 = ( ( ( IExec (T2,q,t) ) . f0 ) . ( ( t . b3 ) - k ) ) & x2 = ( ( ( IExec (T2,q,t) ) . f0 ) . m )) & x1 >= x2))))) & (for i being (Element of ( NAT )) holds ((i >= ( ( t . b3 ) - k ) & i <= ( t . b3 )) implies (ex n being (Element of ( NAT )) st ((n >= ( ( t . b3 ) - k ) & n <= ( t . b3 )) & ( ( ( IExec (T2,q,t) ) . f0 ) . i ) = ( ( t . f0 ) . n ))))))))))
proof
defpred P[ Nat ]
 means
(for t being (State of ( SCM+FSA )) holds ((($1 = ( t . b2 ) & $1 < ( t . b3 )) & ( t . b3 ) <= ( len ( t . f0 ) )) implies (((( t . f0 ),( ( IExec (T2,q,t) ) . f0 ) are_fiberwise_equipotent  & (for m being (Element of ( NAT )) holds (((m < ( ( t . b3 ) - $1 ) & m >= 1) or (m > ( t . b3 ) & m in ( dom ( t . f0 ) ))) implies ( ( t . f0 ) . m ) = ( ( ( IExec (T2,q,t) ) . f0 ) . m )))) & (for m being (Element of ( NAT )) holds ((m >= ( ( t . b3 ) - $1 ) & m <= ( t . b3 )) implies (ex x1,x2 being Integer st ((x1 = ( ( ( IExec (T2,q,t) ) . f0 ) . ( ( t . b3 ) - $1 ) ) & x2 = ( ( ( IExec (T2,q,t) ) . f0 ) . m )) & x1 >= x2))))) & (for i being (Element of ( NAT )) holds ((i >= ( ( t . b3 ) - $1 ) & i <= ( t . b3 )) implies (ex n being (Element of ( NAT )) st ((n >= ( ( t . b3 ) - $1 ) & n <= ( t . b3 )) & ( ( ( IExec (T2,q,t) ) . f0 ) . i ) = ( ( t . f0 ) . n ))))))));
now
let t being (State of ( SCM+FSA ));
let q;
assume that
A1: ( 0 ) = ( t . b2 )
and
( 0 ) < ( t . b3 )
and
( t . b3 ) <= ( len ( t . f0 ) );
set If0 = ( ( IExec (T2,q,t) ) . f0 );
thus ( t . f0 ),If0 are_fiberwise_equipotent  by A1,SCM_HALT:67;
thus (for m being (Element of ( NAT )) holds (((m < ( ( t . b3 ) - ( 0 ) ) & m >= 1) or (m > ( t . b3 ) & m in ( dom ( t . f0 ) ))) implies ( ( t . f0 ) . m ) = ( ( ( IExec (T2,q,t) ) . f0 ) . m ))) by A1,SCM_HALT:67;
hereby
let m being (Element of ( NAT ));
assume that
A2: m >= ( ( t . b3 ) - ( 0 ) )
and
A3: m <= ( t . b3 );
A4: m = ( t . b3 ) by A2,A3,XXREAL_0:1;
reconsider n1 = ( ( t . f0 ) . m ) as Integer;
take x1 = n1;
take x2 = n1;
thus x1 = ( ( ( IExec (T2,q,t) ) . f0 ) . ( ( t . b3 ) - ( 0 ) ) ) by A1,A4,SCM_HALT:67;
thus x2 = ( If0 . m ) by A1,SCM_HALT:67;
thus x1 >= x2;
end;
let i being (Element of ( NAT ));
assume that
A5: i >= ( ( t . b3 ) - ( 0 ) )
and
A6: i <= ( t . b3 );
take n = i;
thus (n >= ( ( t . b3 ) - ( 0 ) ) & n <= ( t . b3 )) by A5,A6;
thus ( ( ( IExec (T2,q,t) ) . f0 ) . i ) = ( ( t . f0 ) . n ) by A1,SCM_HALT:67;
end;
then A7: P[ ( 0 ) ];
set sb2 = ( SubFrom (b2,a0) );
A8:now
let k being (Element of ( NAT ));
assume A9: P[ k ];
now
let t being (State of ( SCM+FSA ));
let q;
set t1 = ( IExec (( body2 ';' sb2 ),q,t) );
set IB = ( IExec (body2,q,t) );
set t2 = ( IExec (T2,q,t1) );
assume that
A10: ( k + 1 ) = ( t . b2 )
and
A11: ( k + 1 ) < ( t . b3 )
and
A12: ( t . b3 ) <= ( len ( t . f0 ) );
A13: ( t1 . b2 ) = ( ( Exec (sb2,IB) ) . b2 ) by SCM_HALT:23
.= ( ( IB . b2 ) - ( IB . a0 ) ) by SCMFSA_2:65
.= ( ( IB . b2 ) - 1 ) by SCM_HALT:9
.= ( ( ( Initialized t ) . b2 ) - 1 ) by Lm22,SCM_HALT:53
.= ( ( k + 1 ) - 1 ) by A10,SCMFSA6C:3
.= k;
A14: 2 <= ( k + 2 ) by NAT_1:11;
( ( k + 1 ) + 1 ) <= ( t . b3 ) by A11,INT_1:7;
then A15: 2 <= ( t . b3 ) by A14,XXREAL_0:2;
A16: ( t1 . b3 ) = ( ( Exec (sb2,IB) ) . b3 ) by SCM_HALT:23
.= ( IB . b3 ) by Lm10,SCMFSA_2:65
.= ( ( t . b3 ) - 1 ) by A12,A15,Lm29;
A17: ( ( k + 1 ) - 1 ) < ( ( t . b3 ) - 1 ) by A11,XREAL_1:9;
A18: ( t1 . f0 ) = ( ( Exec (sb2,IB) ) . f0 ) by SCM_HALT:24
.= ( IB . f0 ) by SCMFSA_2:65;
A19: ( t . f0 ),( IB . f0 ) are_fiberwise_equipotent  by A12,A15,Lm29;
then A20: ( len ( t . f0 ) ) = ( len ( t1 . f0 ) ) by A18,RFINSEQ:3;
A21: ( t . b3 ) <= ( len ( t1 . f0 ) ) by A12,A18,A19,RFINSEQ:3;
A22: ( t1 . b3 ) <= ( len ( t1 . f0 ) ) by A12,A16,A20,XREAL_1:146,XXREAL_0:2;
A23: ( t . b3 ) = ( ( t1 . b3 ) + 1 ) by A16;
A24: ( t1 . f0 ),( t2 . f0 ) are_fiberwise_equipotent  by A9,A13,A16,A17,A22;
A25: ( ( IExec (T2,q,t) ) . f0 ) = ( t2 . f0 ) by A10,Lm22,SCM_HALT:69;
( t1 . f0 ),( ( IExec (T2,q,t) ) . f0 ) are_fiberwise_equipotent  by A10,A24,Lm22,SCM_HALT:69;
hence ( t . f0 ),( ( IExec (T2,q,t) ) . f0 ) are_fiberwise_equipotent  by A18,A19,CLASSES1:76;
A26: ( ( t . b3 ) - ( k + 1 ) ) = ( ( t1 . b3 ) - k ) by A16;
consider n1,n2 being Integer such that A27: n1 = ( ( IB . f0 ) . ( ( t . b3 ) - 1 ) ) and A28: n2 = ( ( IB . f0 ) . ( t . b3 ) ) and A29: n1 >= n2 by A12,A15,Lm29;
A30: ( IB . f0 ) = ( ( Exec (sb2,IB) ) . f0 ) by SCMFSA_2:65
.= ( t1 . f0 ) by SCM_HALT:24;
A31: ( t . b3 ) is (Element of ( NAT )) by A11,INT_1:3;
A32: ( t . b3 ) >= 1 by A15,XXREAL_0:2;
then A33: ( t . b3 ) in ( dom ( t1 . f0 ) ) by A12,A20,A31,FINSEQ_3:25;
hereby
let m being (Element of ( NAT ));
assume that
A34: ((m < ( ( t . b3 ) - ( k + 1 ) ) & m >= 1) or (m > ( t . b3 ) & m in ( dom ( t . f0 ) )));
per cases  by A34;
suppose A35: (m < ( ( t . b3 ) - ( k + 1 ) ) & m >= 1);

A36: ( ( ( t . b3 ) - ( k + 1 ) ) + ( k + 1 ) ) = ( t . b3 );
A37: ( m + ( k + 1 ) ) < ( ( ( t . b3 ) - ( k + 1 ) ) + ( k + 1 ) ) by A35,XREAL_1:6;
A38: ( m + ( k + 1 ) ) < ( t . b3 ) by A35,A36,XREAL_1:6;
m <= ( m + ( k + 1 ) ) by NAT_1:11;
then m <= ( t . b3 ) by A37,XXREAL_0:2;
then m <= ( len ( t1 . f0 ) ) by A12,A20,XXREAL_0:2;
then A39: m in ( dom ( t . f0 ) ) by A20,A35,FINSEQ_3:25;
A40: m <> ( t . b3 ) by A35,A36,XREAL_1:29;
m <> ( ( t . b3 ) - 1 )
proof
assume A41: m = ( ( t . b3 ) - 1 );
( m + ( k + 1 ) ) = ( ( m + 1 ) + k );
hence contradiction by A38,A41,NAT_1:11;
end;
hence ( ( t . f0 ) . m ) = ( ( t1 . f0 ) . m ) by A12,A15,A30,A39,A40,Lm29
.= ( ( ( IExec (T2,q,t) ) . f0 ) . m ) by A9,A13,A17,A22,A25,A26,A35;
end;
suppose A42: (m > ( t . b3 ) & m in ( dom ( t . f0 ) ));

then A43: m in ( dom ( t1 . f0 ) ) by A18,A19,RFINSEQ:3;
A44: ( t . b3 ) > ( ( t . b3 ) - 1 ) by XREAL_1:146;
A45: m > ( t1 . b3 ) by A16,A42,XREAL_1:146,XXREAL_0:2;
thus ( ( t . f0 ) . m ) = ( ( t1 . f0 ) . m ) by A12,A15,A30,A42,A44,Lm29
.= ( ( ( IExec (T2,q,t) ) . f0 ) . m ) by A9,A13,A16,A17,A22,A25,A43,A45;
end;
end;
hereby
let m being (Element of ( NAT ));
assume that
A46: m >= ( ( t . b3 ) - ( k + 1 ) )
and
A47: m <= ( t . b3 );
consider nn being (Element of ( NAT )) such that A48: nn <= ( t1 . b3 ) and A49: nn >= ( ( t1 . b3 ) - ( t1 . b2 ) ) and A50: ( ( t2 . f0 ) . nn ) = ( ( t1 . f0 ) . ( t1 . b3 ) ) by A13,A16,A17,A22,Lm30;
consider y1,y2 being Integer such that A51: y1 = ( ( t2 . f0 ) . ( ( t1 . b3 ) - k ) ) and A52: y2 = ( ( t2 . f0 ) . nn ) and A53: y1 >= y2 by A9,A13,A16,A17,A22,A48,A49;
per cases ;
suppose A54: m > ( t1 . b3 );

then m >= ( ( t1 . b3 ) + 1 ) by INT_1:7;
then A55: m = ( t . b3 ) by A16,A47,XXREAL_0:1;
take y1;
take n2;
thus y1 = ( ( ( IExec (T2,q,t) ) . f0 ) . ( ( t . b3 ) - ( k + 1 ) ) ) by A10,A16,A51,Lm22,SCM_HALT:69;
thus n2 = ( ( ( IExec (T2,q,t) ) . f0 ) . m ) by A9,A13,A16,A17,A22,A25,A28,A30,A33,A54,A55;
thus y1 >= n2 by A16,A27,A29,A30,A50,A52,A53,XXREAL_0:2;
end;
suppose m <= ( t1 . b3 );

then consider y1,y2 being Integer such that A56: y1 = ( ( t2 . f0 ) . ( ( t1 . b3 ) - k ) ) and A57: y2 = ( ( t2 . f0 ) . m ) and A58: y1 >= y2 by A9,A13,A16,A17,A22,A46;
take y1;
take y2;
thus y1 = ( ( ( IExec (T2,q,t) ) . f0 ) . ( ( t . b3 ) - ( k + 1 ) ) ) by A10,A16,A56,Lm22,SCM_HALT:69;
thus y2 = ( ( ( IExec (T2,q,t) ) . f0 ) . m ) by A10,A57,Lm22,SCM_HALT:69;
thus y1 >= y2 by A58;
end;
end;
thus (for i being (Element of ( NAT )) holds ((i >= ( ( t . b3 ) - ( k + 1 ) ) & i <= ( t . b3 )) implies (ex n being (Element of ( NAT )) st ((n >= ( ( t . b3 ) - ( k + 1 ) ) & n <= ( t . b3 )) & ( ( ( IExec (T2,q,t) ) . f0 ) . i ) = ( ( t . f0 ) . n )))))
proof
let i being (Element of ( NAT ));
assume that
A59: i >= ( ( t . b3 ) - ( k + 1 ) )
and
A60: i <= ( t . b3 );
per cases ;
suppose A61: i = ( t . b3 );

then A62: i > ( t1 . b3 ) by A23,XREAL_1:29;
A63: i in ( dom ( t1 . f0 ) ) by A21,A32,A61,FINSEQ_3:25;
per cases  by A12,A15,Lm29;
suppose A64: ( ( t . f0 ) . ( t . b3 ) ) = ( ( ( IExec (body2,q,t) ) . f0 ) . ( t . b3 ) );

reconsider n = ( t . b3 ) as (Element of ( NAT )) by A11,INT_1:3;
take n;
thus (n >= ( ( t . b3 ) - ( k + 1 ) ) & n <= ( t . b3 )) by A59,A61;
thus ( ( ( IExec (T2,q,t) ) . f0 ) . i ) = ( ( t . f0 ) . n ) by A9,A13,A16,A17,A22,A25,A30,A61,A62,A63,A64;
end;
suppose A65: ( ( t . f0 ) . ( ( t . b3 ) - 1 ) ) = ( ( ( IExec (body2,q,t) ) . f0 ) . ( t . b3 ) );

( ( t . b3 ) - 1 ) >= ( 1 - 1 ) by A32,XREAL_1:9;
then reconsider n = ( ( t . b3 ) - 1 ) as (Element of ( NAT )) by INT_1:3;
take n;
n <= ( n + k ) by NAT_1:11;
hence n >= ( ( t . b3 ) - ( k + 1 ) ) by A26,XREAL_1:20;
thus n <= ( t . b3 ) by XREAL_1:146;
thus ( ( ( IExec (T2,q,t) ) . f0 ) . i ) = ( ( t . f0 ) . n ) by A9,A13,A16,A17,A22,A25,A30,A61,A62,A63,A65;
end;
end;
suppose i <> ( t . b3 );

then i < ( t . b3 ) by A60,XXREAL_0:1;
then ( i + 1 ) <= ( t . b3 ) by INT_1:7;
then i <= ( t1 . b3 ) by A16,XREAL_1:19;
then consider n being (Element of ( NAT )) such that A66: n >= ( ( t1 . b3 ) - k ) and A67: n <= ( t1 . b3 ) and A68: ( ( t2 . f0 ) . i ) = ( ( t1 . f0 ) . n ) by A9,A13,A16,A17,A22,A59;
thus (ex n being (Element of ( NAT )) st ((n >= ( ( t . b3 ) - ( k + 1 ) ) & n <= ( t . b3 )) & ( ( ( IExec (T2,q,t) ) . f0 ) . i ) = ( ( t . f0 ) . n )))
proof
per cases ;
suppose A69: n = ( t1 . b3 );

per cases  by A12,A15,Lm29;
suppose A70: ( ( t . f0 ) . ( t . b3 ) ) = ( ( ( IExec (body2,q,t) ) . f0 ) . ( ( t . b3 ) - 1 ) );

reconsider m = ( t . b3 ) as (Element of ( NAT )) by A11,INT_1:3;
take m;
m <= ( m + ( k + 1 ) ) by NAT_1:11;
hence m >= ( ( t . b3 ) - ( k + 1 ) ) by XREAL_1:20;
thus m <= ( t . b3 );
thus ( ( ( IExec (T2,q,t) ) . f0 ) . i ) = ( ( t . f0 ) . m ) by A10,A16,A30,A68,A69,A70,Lm22,SCM_HALT:69;
end;
suppose A71: ( ( t . f0 ) . ( ( t . b3 ) - 1 ) ) = ( ( ( IExec (body2,q,t) ) . f0 ) . ( ( t . b3 ) - 1 ) );

take n;
thus n >= ( ( t . b3 ) - ( k + 1 ) ) by A16,A66;
thus n <= ( t . b3 ) by A16,A69,XREAL_1:146;
thus ( ( ( IExec (T2,q,t) ) . f0 ) . i ) = ( ( t . f0 ) . n ) by A10,A16,A30,A68,A69,A71,Lm22,SCM_HALT:69;
end;
end;
suppose A72: n <> ( t1 . b3 );

A73: ( t1 . b3 ) < ( t . b3 ) by A16,XREAL_1:146;
A74: n < ( t . b3 ) by A16,A67,XREAL_1:146,XXREAL_0:2;
( k - k ) < ( ( t1 . b3 ) - k ) by A16,A17,XREAL_1:9;
then A75: n >= ( ( 0 ) + 1 ) by A66,INT_1:7;
n <= ( len ( t1 . f0 ) ) by A12,A20,A74,XXREAL_0:2;
then A76: n in ( dom ( t . f0 ) ) by A20,A75,FINSEQ_3:25;
take n;
thus n >= ( ( t . b3 ) - ( k + 1 ) ) by A16,A66;
thus n <= ( t . b3 ) by A16,A67,XREAL_1:146,XXREAL_0:2;
thus thesis by A12,A15,A16,A25,A30,A67,A68,A72,A73,A76,Lm29;
end;
end;

end;
end;

end;
hence P[ ( k + 1 ) ];
end;
(for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A7,A8);
hence thesis;
end;
Lm32: (for p being (Instruction-Sequence of ( SCM+FSA )) holds (for s being (State of ( SCM+FSA )) holds ((( ( IExec (Sb,p,s) ) . b2 ) = ( ( s . b1 ) - 1 ) & ( ( IExec (Sb,p,s) ) . b3 ) = ( len ( s . f0 ) )) & ( ( IExec (Sb,p,s) ) . f0 ) = ( s . f0 ))))
proof
let p being (Instruction-Sequence of ( SCM+FSA ));
let s being (State of ( SCM+FSA ));
set s0 = ( Initialized s );
set s1 = ( Exec (j1,s0) );
set s2 = ( IExec (( j1 ';' j2 ),p,s) );
set s3 = ( IExec (( ( j1 ';' j2 ) ';' j3 ),p,s) );
A1: ( s1 . b2 ) = ( s0 . b1 ) by SCMFSA_2:63
.= ( s . b1 ) by SCMFSA6C:3;
A2: ( s1 . f0 ) = ( s0 . f0 ) by SCMFSA_2:63
.= ( s . f0 ) by SCMFSA6C:3;
A3: ( s1 . a0 ) = ( s0 . a0 ) by SCMFSA_2:63
.= 1 by SCMFSA6A:38;
A4: ( s2 . f0 ) = ( ( Exec (j2,s1) ) . f0 ) by SCMFSA6C:9
.= ( s . f0 ) by A2,SCMFSA_2:65;
A5: ( s2 . b2 ) = ( ( Exec (j2,s1) ) . b2 ) by SCMFSA6C:8
.= ( ( s . b1 ) - 1 ) by A1,A3,SCMFSA_2:65;
thus ( s3 . b2 ) = ( ( Exec (j3,s2) ) . b2 ) by SCMFSA6C:6
.= ( ( s . b1 ) - 1 ) by A5,Lm10,SCMFSA_2:74;
thus ( s3 . b3 ) = ( ( Exec (j3,s2) ) . b3 ) by SCMFSA6C:6
.= ( len ( s . f0 ) ) by A4,SCMFSA_2:74;
thus ( s3 . f0 ) = ( ( Exec (j3,s2) ) . f0 ) by SCMFSA6C:7
.= ( s . f0 ) by A4,SCMFSA_2:74;
end;
Lm33: (for p being (Instruction-Sequence of ( SCM+FSA )) holds (for s being (State of ( SCM+FSA )) holds (( s . b1 ) = ( len ( s . f0 ) ) implies (( s . f0 ),( ( IExec (T1,p,s) ) . f0 ) are_fiberwise_equipotent  & (for i,j being (Element of ( NAT )) holds (((i >= 1 & j <= ( len ( s . f0 ) )) & i < j) implies (for x1,x2 being Integer holds ((x1 = ( ( ( IExec (T1,p,s) ) . f0 ) . i ) & x2 = ( ( ( IExec (T1,p,s) ) . f0 ) . j )) implies x1 >= x2))))))))
proof
let p being (Instruction-Sequence of ( SCM+FSA ));
let s being (State of ( SCM+FSA ));
assume A1: ( s . b1 ) = ( len ( s . f0 ) );
per cases ;
suppose A2: ( len ( s . f0 ) ) = ( 0 );

hence ( s . f0 ),( ( IExec (T1,p,s) ) . f0 ) are_fiberwise_equipotent  by A1,Lm23,SCM_HALT:67;
thus thesis by A2;
end;
suppose A3: ( len ( s . f0 ) ) <> ( 0 );

defpred P[ Nat ]
 means
(for t being (State of ( SCM+FSA )) holds (for q holds ((( t . b1 ) = ( $1 + 1 ) & ( t . b1 ) <= ( len ( t . f0 ) )) implies (((( t . f0 ),( ( IExec (T1,q,t) ) . f0 ) are_fiberwise_equipotent  & (for i,j being (Element of ( NAT )) holds (((i >= ( ( len ( t . f0 ) ) - $1 ) & j <= ( len ( t . f0 ) )) & i < j) implies (for x1,x2 being Integer holds ((x1 = ( ( ( IExec (T1,q,t) ) . f0 ) . i ) & x2 = ( ( ( IExec (T1,q,t) ) . f0 ) . j )) implies x1 >= x2))))) & (for i being (Element of ( NAT )) holds ((i < ( ( len ( t . f0 ) ) - $1 ) & i >= 1) implies ( ( ( IExec (T1,q,t) ) . f0 ) . i ) = ( ( t . f0 ) . i )))) & (for i being (Element of ( NAT )) holds ((i >= ( ( len ( t . f0 ) ) - $1 ) & i <= ( len ( t . f0 ) )) implies (ex n being (Element of ( NAT )) st ((n >= ( ( len ( t . f0 ) ) - $1 ) & n <= ( len ( t . f0 ) )) & ( ( ( IExec (T1,q,t) ) . f0 ) . i ) = ( ( t . f0 ) . n )))))))));
set B11 = ( SubFrom (b1,a0) );
A4: P[ ( 0 ) ]
proof
let t being (State of ( SCM+FSA ));
let q;
assume that
A5: ( t . b1 ) = ( ( 0 ) + 1 )
and
( t . b1 ) <= ( len ( t . f0 ) );
set IB = ( IExec (( body1 ';' B11 ),q,t) );
A6: ( IB . b1 ) = ( 1 - 1 ) by A5,Lm23,Lm25,SCM_HALT:66;
A7: ( ( IExec (Sb,q,t) ) . b2 ) = ( 1 - 1 ) by A5,Lm32;
A8: ( ( IExec (T1,q,t) ) . f0 ) = ( ( IExec (T1,q,IB) ) . f0 ) by A5,Lm23,Lm25,SCM_HALT:69
.= ( IB . f0 ) by A6,Lm23,SCM_HALT:67
.= ( ( Exec (B11,( IExec (body1,q,t) )) ) . f0 ) by Lm23,SCM_HALT:24
.= ( ( IExec (body1,q,t) ) . f0 ) by SCMFSA_2:65
.= ( ( IExec (T2,q,( IExec (Sb,q,t) )) ) . f0 ) by Lm23,SCM_HALT:21
.= ( ( IExec (Sb,q,t) ) . f0 ) by A7,SCM_HALT:67
.= ( t . f0 ) by Lm32;
hence ( t . f0 ),( ( IExec (T1,q,t) ) . f0 ) are_fiberwise_equipotent ;
thus (for i,j being (Element of ( NAT )) holds (((i >= ( ( len ( t . f0 ) ) - ( 0 ) ) & j <= ( len ( t . f0 ) )) & i < j) implies (for x1,x2 being Integer holds ((x1 = ( ( ( IExec (T1,q,t) ) . f0 ) . i ) & x2 = ( ( ( IExec (T1,q,t) ) . f0 ) . j )) implies x1 >= x2)))) by XXREAL_0:2;
thus (for i being (Element of ( NAT )) holds ((i < ( ( len ( t . f0 ) ) - ( 0 ) ) & i >= 1) implies ( ( ( IExec (T1,q,t) ) . f0 ) . i ) = ( ( t . f0 ) . i ))) by A8;
let i being (Element of ( NAT ));
assume that
A9: i >= ( ( len ( t . f0 ) ) - ( 0 ) )
and
A10: i <= ( len ( t . f0 ) );
take n = i;
thus (n >= ( ( len ( t . f0 ) ) - ( 0 ) ) & n <= ( len ( t . f0 ) )) by A9,A10;
thus thesis by A8;
end;
A11:now
let k being (Element of ( NAT ));
assume A12: P[ k ];
now
let t being (State of ( SCM+FSA ));
let q;
set t1 = ( IExec (( body1 ';' B11 ),q,t) );
set IB = ( IExec (body1,q,t) );
set t2 = ( IExec (T1,q,t1) );
assume that
A13: ( t . b1 ) = ( ( k + 1 ) + 1 )
and
A14: ( t . b1 ) <= ( len ( t . f0 ) );
A15: ( t1 . b1 ) = ( ( Exec (B11,IB) ) . b1 ) by Lm23,SCM_HALT:23
.= ( ( IB . b1 ) - ( IB . a0 ) ) by SCMFSA_2:65
.= ( ( IB . b1 ) - 1 ) by Lm23,SCM_HALT:9
.= ( ( ( Initialized t ) . b1 ) - 1 ) by Lm23,Lm25,SCM_HALT:53
.= ( ( ( k + 1 ) + 1 ) - 1 ) by A13,SCMFSA6C:3
.= ( k + 1 );
then ( t1 . b1 ) < ( t . b1 ) by A13,XREAL_1:29;
then A16: ( t1 . b1 ) <= ( len ( t . f0 ) ) by A14,XXREAL_0:2;
set Ts = ( IExec (Sb,q,t) );
A17: ( Ts . b2 ) = ( ( ( k + 1 ) + 1 ) - 1 ) by A13,Lm32
.= ( k + 1 );
A18: ( Ts . b3 ) = ( len ( t . f0 ) ) by Lm32;
then A19: ( Ts . b3 ) = ( len ( Ts . f0 ) ) by Lm32;
A20: ( k + 1 ) < ( ( k + 1 ) + 1 ) by XREAL_1:29;
A21: ( k + 1 ) < ( t . b1 ) by A13,XREAL_1:29;
A22: ( k + 1 ) < ( len ( t . f0 ) ) by A13,A14,A20,XXREAL_0:2;
A23: ( k + 1 ) < ( Ts . b3 ) by A14,A18,A21,XXREAL_0:2;
A24: ( Ts . f0 ),( ( IExec (T2,q,Ts) ) . f0 ) are_fiberwise_equipotent  by A17,A18,A19,A22,Lm31;
A25: ( Ts . f0 ) = ( t . f0 ) by Lm32;
A26: ( t1 . f0 ) = ( ( Exec (B11,IB) ) . f0 ) by Lm23,SCM_HALT:24
.= ( IB . f0 ) by SCMFSA_2:65
.= ( ( IExec (T2,q,Ts) ) . f0 ) by Lm23,SCM_HALT:21;
then A27: ( t . f0 ),( t1 . f0 ) are_fiberwise_equipotent  by A17,A18,A23,A25,Lm31;
A28: ( len ( t . f0 ) ) = ( len ( t1 . f0 ) ) by A24,A25,A26,RFINSEQ:3;
A29: ( t1 . b1 ) <= ( len ( t1 . f0 ) ) by A16,A27,RFINSEQ:3;
A30: ( t1 . f0 ),( ( IExec (T1,q,t1) ) . f0 ) are_fiberwise_equipotent  by A12,A15,A16,A28;
A31: ( ( IExec (T1,q,t) ) . f0 ) = ( t2 . f0 ) by A13,Lm23,Lm25,SCM_HALT:69;
hence ( t . f0 ),( ( IExec (T1,q,t) ) . f0 ) are_fiberwise_equipotent  by A27,A30,CLASSES1:76;
set lk = ( ( len ( t . f0 ) ) - ( k + 1 ) );
A32: ( lk + 1 ) = ( ( len ( t1 . f0 ) ) - k ) by A28;
thus (for i,j being (Element of ( NAT )) holds (((i >= ( ( len ( t . f0 ) ) - ( k + 1 ) ) & j <= ( len ( t . f0 ) )) & i < j) implies (for x1,x2 being Integer holds ((x1 = ( ( ( IExec (T1,q,t) ) . f0 ) . i ) & x2 = ( ( ( IExec (T1,q,t) ) . f0 ) . j )) implies x1 >= x2))))
proof
let i being (Element of ( NAT ));
let j being (Element of ( NAT ));
assume that
A33: i >= lk
and
A34: j <= ( len ( t . f0 ) )
and
A35: i < j;
j > lk by A33,A35,XXREAL_0:2;
then j >= ( ( len ( t1 . f0 ) ) - k ) by A32,INT_1:7;
then consider n being (Element of ( NAT )) such that A36: n >= ( ( len ( t1 . f0 ) ) - k ) and A37: n <= ( len ( t1 . f0 ) ) and A38: ( ( ( IExec (T1,q,t1) ) . f0 ) . j ) = ( ( t1 . f0 ) . n ) by A12,A15,A16,A28,A34;
lk < ( lk + 1 ) by XREAL_1:29;
then A39: n >= ( ( Ts . b3 ) - ( k + 1 ) ) by A18,A28,A36,XXREAL_0:2;
A40: n <= ( Ts . b3 ) by A28,A37,Lm32;
hereby
let x1 being Integer;
let x2 being Integer;
assume that
A41: x1 = ( ( ( IExec (T1,q,t) ) . f0 ) . i )
and
A42: x2 = ( ( ( IExec (T1,q,t) ) . f0 ) . j );
per cases ;
suppose A43: i = lk;

A44: (ex y1,y2 being Integer st ((y1 = ( ( ( IExec (T2,q,Ts) ) . f0 ) . ( ( Ts . b3 ) - ( k + 1 ) ) ) & y2 = ( ( ( IExec (T2,q,Ts) ) . f0 ) . n )) & y1 >= y2)) by A17,A19,A23,A39,A40,Lm31;
A45: i < ( ( len ( t1 . f0 ) ) - k ) by A32,A43,XREAL_1:29;
A46: 1 <= i by A13,A14,A43,XREAL_1:19;
i = ( ( Ts . b3 ) - ( k + 1 ) ) by A43,Lm32;
hence x1 >= x2 by A12,A15,A16,A26,A28,A31,A38,A41,A42,A44,A45,A46;
end;
suppose i <> lk;

then i > lk by A33,XXREAL_0:1;
then i >= ( ( len ( t1 . f0 ) ) - k ) by A32,INT_1:7;
hence x1 >= x2 by A12,A15,A16,A28,A31,A34,A35,A41,A42;
end;
end;
end;

thus (for i being (Element of ( NAT )) holds ((i < ( ( len ( t . f0 ) ) - ( k + 1 ) ) & i >= 1) implies ( ( ( IExec (T1,q,t) ) . f0 ) . i ) = ( ( t . f0 ) . i )))
proof
let i being (Element of ( NAT ));
assume that
A47: i < lk
and
A48: i >= 1;
lk < ( lk + 1 ) by XREAL_1:29;
then i < ( ( len ( t1 . f0 ) ) - k ) by A28,A47,XXREAL_0:2;
hence ( ( ( IExec (T1,q,t) ) . f0 ) . i ) = ( ( t1 . f0 ) . i ) by A12,A15,A29,A31,A48
.= ( ( t . f0 ) . i ) by A17,A18,A23,A25,A26,A47,A48,Lm31;
end;

thus (for i being (Element of ( NAT )) holds ((i >= ( ( len ( t . f0 ) ) - ( k + 1 ) ) & i <= ( len ( t . f0 ) )) implies (ex n being (Element of ( NAT )) st ((n >= ( ( len ( t . f0 ) ) - ( k + 1 ) ) & n <= ( len ( t . f0 ) )) & ( ( ( IExec (T1,q,t) ) . f0 ) . i ) = ( ( t . f0 ) . n )))))
proof
let i being (Element of ( NAT ));
assume that
A49: i >= ( ( len ( t . f0 ) ) - ( k + 1 ) )
and
A50: i <= ( len ( t . f0 ) );
per cases ;
suppose A51: i = lk;

then A52: i < ( ( len ( t1 . f0 ) ) - k ) by A32,XREAL_1:29;
A53: i >= 1 by A13,A14,A51,XREAL_1:19;
consider n being (Element of ( NAT )) such that A54: n >= ( ( Ts . b3 ) - ( k + 1 ) ) and A55: n <= ( Ts . b3 ) and A56: ( ( ( IExec (T2,q,Ts) ) . f0 ) . i ) = ( ( Ts . f0 ) . n ) by A17,A18,A19,A22,A49,A50,Lm31;
take n;
thus n >= ( ( len ( t . f0 ) ) - ( k + 1 ) ) by A54,Lm32;
thus n <= ( len ( t . f0 ) ) by A55,Lm32;
thus thesis by A12,A15,A25,A26,A29,A31,A52,A53,A56;
end;
suppose i <> lk;

then i > lk by A49,XXREAL_0:1;
then i >= ( ( len ( t1 . f0 ) ) - k ) by A32,INT_1:7;
then consider m being (Element of ( NAT )) such that A57: m >= ( ( len ( t1 . f0 ) ) - k ) and A58: m <= ( len ( t1 . f0 ) ) and A59: ( ( ( IExec (T1,q,t1) ) . f0 ) . i ) = ( ( t1 . f0 ) . m ) by A12,A15,A16,A28,A50;
( lk + 1 ) > lk by XREAL_1:29;
then m > ( ( Ts . b3 ) - ( k + 1 ) ) by A18,A28,A57,XXREAL_0:2;
then consider n being (Element of ( NAT )) such that A60: n >= ( ( Ts . b3 ) - ( k + 1 ) ) and A61: n <= ( Ts . b3 ) and A62: ( ( ( IExec (T2,q,Ts) ) . f0 ) . m ) = ( ( Ts . f0 ) . n ) by A17,A18,A19,A22,A28,A58,Lm31;
take n;
thus n >= ( ( len ( t . f0 ) ) - ( k + 1 ) ) by A60,Lm32;
thus n <= ( len ( t . f0 ) ) by A61,Lm32;
thus thesis by A26,A31,A59,A62,Lm32;
end;
end;

end;
hence P[ ( k + 1 ) ];
end;
A63: (for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A4,A11);
( s . b1 ) >= ( 1 + ( 0 ) ) by A1,A3,INT_1:7;
then reconsider m = ( ( s . b1 ) - 1 ) as (Element of ( NAT )) by INT_1:5;
A64: ( m + 1 ) = ( s . b1 );
hence ( s . f0 ),( ( IExec (T1,p,s) ) . f0 ) are_fiberwise_equipotent  by A1,A63;
( ( len ( s . f0 ) ) - m ) = 1 by A1;
hence thesis by A63,A64;
end;
end;
theorem
Th65: (for p being (Instruction-Sequence of ( SCM+FSA )) holds (for s being (State of ( SCM+FSA )) holds (( s . ( fsloc ( 0 ) ) ),( ( IExec (( bubble-sort ( fsloc ( 0 ) ) ),p,s) ) . ( fsloc ( 0 ) ) ) are_fiberwise_equipotent  & (for i,j being (Element of ( NAT )) holds (((i >= 1 & j <= ( len ( s . ( fsloc ( 0 ) ) ) )) & i < j) implies (for x1,x2 being Integer holds ((x1 = ( ( ( IExec (( bubble-sort ( fsloc ( 0 ) ) ),p,s) ) . ( fsloc ( 0 ) ) ) . i ) & x2 = ( ( ( IExec (( bubble-sort ( fsloc ( 0 ) ) ),p,s) ) . ( fsloc ( 0 ) ) ) . j )) implies x1 >= x2)))))))
proof
let p being (Instruction-Sequence of ( SCM+FSA ));
let s being (State of ( SCM+FSA ));
set W27 = ( ( ( ( ( w2 ';' w3 ) ';' w4 ) ';' w5 ) ';' w6 ) ';' w7 );
set s0 = ( Initialized s );
set s1 = ( Exec (w2,s0) );
set s2 = ( IExec (( w2 ';' w3 ),p,s) );
set s3 = ( IExec (( ( w2 ';' w3 ) ';' w4 ),p,s) );
set s4 = ( IExec (( ( ( w2 ';' w3 ) ';' w4 ) ';' w5 ),p,s) );
set s5 = ( IExec (( ( ( ( w2 ';' w3 ) ';' w4 ) ';' w5 ) ';' w6 ),p,s) );
set s6 = ( IExec (W27,p,s) );
A1: ( s5 . f0 ) = ( ( Exec (w6,s4) ) . f0 ) by SCMFSA6C:7
.= ( s4 . f0 ) by SCMFSA_2:63
.= ( ( Exec (w5,s3) ) . f0 ) by SCMFSA6C:7
.= ( s3 . f0 ) by SCMFSA_2:63
.= ( ( Exec (w4,s2) ) . f0 ) by SCMFSA6C:7
.= ( s2 . f0 ) by SCMFSA_2:63
.= ( ( Exec (w3,s1) ) . f0 ) by SCMFSA6C:9
.= ( s1 . f0 ) by SCMFSA_2:63
.= ( s0 . f0 ) by SCMFSA_2:63
.= ( s . f0 ) by SCMFSA6C:3;
A2: ( s6 . f0 ) = ( ( Exec (w7,s5) ) . f0 ) by SCMFSA6C:7
.= ( s . f0 ) by A1,SCMFSA_2:74;
A3: ( s6 . b1 ) = ( ( Exec (w7,s5) ) . b1 ) by SCMFSA6C:6
.= ( len ( s6 . f0 ) ) by A1,A2,SCMFSA_2:74;
A4: ( ( IExec (( bubble-sort f0 ),p,s) ) . f0 ) = ( ( IExec (T1,p,s6) ) . f0 ) by Lm26,SCM_HALT:21;
hence ( s . f0 ),( ( IExec (( bubble-sort f0 ),p,s) ) . f0 ) are_fiberwise_equipotent  by A2,A3,Lm33;
let i being (Element of ( NAT ));
let j being (Element of ( NAT ));
assume that
A5: i >= 1
and
A6: j <= ( len ( s . f0 ) )
and
A7: i < j;
thus thesis by A2,A3,A4,A5,A6,A7,Lm33;
end;
