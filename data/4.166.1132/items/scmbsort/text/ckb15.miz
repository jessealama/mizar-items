environ
vocabularies NUMBERS,SCMNORM,SCMFSA_2,AMI_1,SUBSET_1,SCMFSA7B,SCMFSA8C,SCMFSA8A,AMI_3,CARD_1,AMISTD_2,SCMFSA8B,TURING_1,FSM_1,GRAPHSP,FUNCT_1,PARTFUN1,COMPLEX1,FUNCT_4,ARYTM_3,SF_MASTR,SCMFSA6C,SCMFSA6B,FUNCOP_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XXREAL_0,CIRCUIT2,NAT_1,STRUCT_0,ARYTM_1,INT_1,FINSEQ_1,FINSEQ_2,SCMFSA6A,FINSUB_1,CARD_3,CLASSES1,VALUED_0,MSUALG_1,SCM_HALT,SCMBSORT,PBOOLE,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,SETFAM_1,ORDINAL1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,INT_1,RELAT_1,FINSEQ_1,FUNCT_1,COMPLEX1,FUNCT_2,PBOOLE,FUNCT_4,FINSEQ_2,FUNCT_7,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_2,SCMFSA_2,FUNCOP_1,FINSUB_1,CARD_3,PARTFUN1,SCMFSA6B,SCMFSA6C,SCMFSA6A,SF_MASTR,SCMFSA8A,SCMFSA8B,SCMFSA8C,CLASSES1,RFINSEQ,SCMFSA7B,NAT_D,SCM_HALT,XXREAL_0;
definitions TARSKI,FUNCOP_1,COMPOS_1,EXTPRO_1,XBOOLE_0,SCMFSA8C,SCM_HALT,MEMSTR_0;
theorems SF_MASTR,FUNCT_1,FUNCT_7,FUNCOP_1,RELAT_1,FUNCT_2,ZFMISC_1,SCMFSA6A,FUNCT_4,FINSEQ_3,ENUMSET1,NAT_1,FINSEQ_1,RELSET_1,TARSKI,INT_1,PARTFUN1,GRFUNC_1,RFINSEQ,SCMFSA_2,SCMFSA7B,SCMFSA8B,SCMFSA8A,SCMFSA8C,SCMFSA6C,SCM_HALT,ABSVALUE,FINSEQ_4,XBOOLE_0,XBOOLE_1,SCMFSA9A,XREAL_1,ORDINAL1,XXREAL_0,NAT_D,CLASSES1,PBOOLE,AFINSQ_1,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
schemes RELSET_1,FUNCT_1,NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,RELSET_1,FUNCOP_1,FINSUB_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_3,RFINSEQ,SCMFSA_2,SF_MASTR,SCMFSA6C,SCMFSA7B,FINSET_1,SCMFSA8A,SCMFSA8B,SCMFSA_9,SCM_HALT,STRUCT_0,VALUED_0,ORDINAL1,RELAT_1,FUNCT_2,PBOOLE,SCMFSA10,AMISTD_2,SCMFSA6A,COMPOS_1,SFMASTR1,FUNCT_4,EXTPRO_1,SCMFSA8C,MEMSTR_0;
constructors SETWISEO,XXREAL_0,REAL_1,AMI_3,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA8C,SCM_HALT,SEQ_1,SCMFSA7B,AMISTD_2,NAT_D,CLASSES1,RELSET_1,DOMAIN_1,SFMASTR1,AMISTD_1,PBOOLE,PRE_POLY,SCMFSA_3,SCMFSA_7,SCMFSA_9,SCMFSA_2,XXREAL_2,MEMSTR_0;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve p for (preProgram of ( SCM+FSA ));
reserve i for (Element of ( NAT ));
reserve j for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve p1 for (Instruction-Sequence of ( SCM+FSA ));
reserve p2 for (Instruction-Sequence of ( SCM+FSA ));
theorem
Th26: (for i,k being (Element of ( NAT )) holds (for p being (Program of ( SCM+FSA )) holds (for s1,s2 being (State of ( SCM+FSA )) holds ((((((k <= i & p c= p1) & p c= p2) & (for j holds (( IC ( Comput (p1,s1,j) ) ) in ( dom p ) & ( IC ( Comput (p2,s2,j) ) ) in ( dom p )))) & ( ( Comput (p1,s1,k) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (p2,s2,k) ) . ( IC ( SCM+FSA ) ) )) & ( ( Comput (p1,s1,k) ) | ( ( UsedInt*Loc p ) \/ ( UsedIntLoc p ) ) ) = ( ( Comput (p2,s2,k) ) | ( ( UsedInt*Loc p ) \/ ( UsedIntLoc p ) ) )) implies (( ( Comput (p1,s1,i) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (p2,s2,i) ) . ( IC ( SCM+FSA ) ) ) & ( ( Comput (p1,s1,i) ) | ( ( UsedInt*Loc p ) \/ ( UsedIntLoc p ) ) ) = ( ( Comput (p2,s2,i) ) | ( ( UsedInt*Loc p ) \/ ( UsedIntLoc p ) ) ))))))
proof
let i being (Element of ( NAT ));
let k being (Element of ( NAT ));
let p being (Program of ( SCM+FSA ));
let s1 being (State of ( SCM+FSA ));
let s2 being (State of ( SCM+FSA ));
set D = ( ( UsedInt*Loc p ) \/ ( UsedIntLoc p ) );
assume that
A1: k <= i
and
A2: p c= p1
and
A3: p c= p2
and
A4: (for j holds (( IC ( Comput (p1,s1,j) ) ) in ( dom p ) & ( IC ( Comput (p2,s2,j) ) ) in ( dom p )))
and
A5: ( ( Comput (p1,s1,k) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (p2,s2,k) ) . ( IC ( SCM+FSA ) ) )
and
A6: ( ( Comput (p1,s1,k) ) | D ) = ( ( Comput (p2,s2,k) ) | D );
reconsider t = ( {} ) as (PartState of ( SCM+FSA )) by FUNCT_1:104,RELAT_1:171;
set D1 = ( ( ( dom t ) \/ ( UsedInt*Loc p ) ) \/ ( UsedIntLoc p ) );
A7: ( dom t ) c= ( ( Int-Locations ) \/ ( FinSeq-Locations ) ) by RELAT_1:38,XBOOLE_1:2;
A8: D1 = D by RELAT_1:38;
hence ( ( Comput (p1,s1,i) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (p2,s2,i) ) . ( IC ( SCM+FSA ) ) ) by A1,A2,A3,A4,A5,A6,A7,CKB14:1;
thus thesis by A1,A2,A3,A4,A5,A6,A7,A8,CKB14:1;
end;
