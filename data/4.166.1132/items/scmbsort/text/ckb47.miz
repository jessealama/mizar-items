environ
vocabularies NUMBERS,SCMNORM,SCMFSA_2,AMI_1,SUBSET_1,SCMFSA7B,SCMFSA8C,SCMFSA8A,AMI_3,CARD_1,AMISTD_2,SCMFSA8B,TURING_1,FSM_1,GRAPHSP,FUNCT_1,PARTFUN1,COMPLEX1,FUNCT_4,ARYTM_3,SF_MASTR,SCMFSA6C,SCMFSA6B,FUNCOP_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XXREAL_0,CIRCUIT2,NAT_1,STRUCT_0,ARYTM_1,INT_1,FINSEQ_1,FINSEQ_2,SCMFSA6A,FINSUB_1,CARD_3,CLASSES1,VALUED_0,MSUALG_1,SCM_HALT,SCMBSORT,PBOOLE,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,SETFAM_1,ORDINAL1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,INT_1,RELAT_1,FINSEQ_1,FUNCT_1,COMPLEX1,FUNCT_2,PBOOLE,FUNCT_4,FINSEQ_2,FUNCT_7,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_2,SCMFSA_2,FUNCOP_1,FINSUB_1,CARD_3,PARTFUN1,SCMFSA6B,SCMFSA6C,SCMFSA6A,SF_MASTR,SCMFSA8A,SCMFSA8B,SCMFSA8C,CLASSES1,RFINSEQ,SCMFSA7B,NAT_D,SCM_HALT,XXREAL_0,CKB21,CKB35,CKB36,CKB39;
definitions TARSKI,FUNCOP_1,COMPOS_1,EXTPRO_1,XBOOLE_0,SCMFSA8C,SCM_HALT,MEMSTR_0,CKB35,CKB36,CKB39;
theorems SF_MASTR,FUNCT_1,FUNCT_7,FUNCOP_1,RELAT_1,FUNCT_2,ZFMISC_1,SCMFSA6A,FUNCT_4,FINSEQ_3,ENUMSET1,NAT_1,FINSEQ_1,RELSET_1,TARSKI,INT_1,PARTFUN1,GRFUNC_1,RFINSEQ,SCMFSA_2,SCMFSA7B,SCMFSA8B,SCMFSA8A,SCMFSA8C,SCMFSA6C,SCM_HALT,ABSVALUE,FINSEQ_4,XBOOLE_0,XBOOLE_1,SCMFSA9A,XREAL_1,ORDINAL1,XXREAL_0,NAT_D,CLASSES1,PBOOLE,AFINSQ_1,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46;
schemes RELSET_1,FUNCT_1,NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,RELSET_1,FUNCOP_1,FINSUB_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_3,RFINSEQ,SCMFSA_2,SF_MASTR,SCMFSA6C,SCMFSA7B,FINSET_1,SCMFSA8A,SCMFSA8B,SCMFSA_9,SCM_HALT,STRUCT_0,VALUED_0,ORDINAL1,RELAT_1,FUNCT_2,PBOOLE,SCMFSA10,AMISTD_2,SCMFSA6A,COMPOS_1,SFMASTR1,FUNCT_4,EXTPRO_1,SCMFSA8C,MEMSTR_0;
constructors SETWISEO,XXREAL_0,REAL_1,AMI_3,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA8C,SCM_HALT,SEQ_1,SCMFSA7B,AMISTD_2,NAT_D,CLASSES1,RELSET_1,DOMAIN_1,SFMASTR1,AMISTD_1,PBOOLE,PRE_POLY,SCMFSA_3,SCMFSA_7,SCMFSA_9,SCMFSA_2,XXREAL_2,MEMSTR_0,CKB21,CKB35,CKB36,CKB39;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve p for (preProgram of ( SCM+FSA ));
reserve i for (Element of ( NAT ));
reserve j for (Element of ( NAT ));
set f0 = ( fsloc ( 0 ) );
theorem
Th67: (for p being (Instruction-Sequence of ( SCM+FSA )) holds (for s being (State of ( SCM+FSA )) holds (for t being (FinSequence of ( INT )) holds ((( ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) ) +* ( ( fsloc ( 0 ) ) .--> t ) ) c= s & ( Bubble-Sort-Algorithm ) c= p) implies (ex u being (FinSequence of ( REAL )) st (((t,u are_fiberwise_equipotent  & u is  non-increasing) & u is (FinSequence of ( INT ))) & ( ( Result (p,s) ) . ( fsloc ( 0 ) ) ) = u))))))
proof
let p being (Instruction-Sequence of ( SCM+FSA ));
let s being (State of ( SCM+FSA ));
let t being (FinSequence of ( INT ));
set Ba = ( Bubble-Sort-Algorithm );
set pp = ( Initialize ( ( intloc ( 0 ) ) .--> 1 ) );
set x = ( ( fsloc ( 0 ) ) .--> t );
set z = ( ( IExec (( bubble-sort f0 ),p,s) ) . f0 );
assume that
A1: ( pp +* x ) c= s
and
A2: Ba c= p;
A3: ( p +* Ba ) = p by A2,FUNCT_4:98;
( dom x ) = { f0 } by FUNCOP_1:13;
then A4: f0 in ( dom x ) by TARSKI:def 1;
then f0 in ( dom ( pp +* x ) ) by FUNCT_4:12;
then A5: ( s . f0 ) = ( ( pp +* x ) . f0 ) by A1,GRFUNC_1:2
.= ( x . f0 ) by A4,FUNCT_4:13
.= t by FUNCOP_1:72;
A6: ( s . f0 ),z are_fiberwise_equipotent  by CKB45:1;
reconsider u = z as (FinSequence of ( REAL )) by FINSEQ_3:117;
take u;
thus t,u are_fiberwise_equipotent  by A5,CKB45:1;
A7: ( dom ( s . f0 ) ) = ( dom u ) by A6,RFINSEQ:3;
now
let i being (Element of ( NAT ));
let j being (Element of ( NAT ));
assume that
A8: i in ( dom u )
and
A9: j in ( dom u )
and
A10: i < j;
A11: i >= 1 by A8,FINSEQ_3:25;
A12: j <= ( len ( s . f0 ) ) by A7,A9,FINSEQ_3:25;
reconsider y1 = ( z . i ) as Integer;
reconsider y2 = ( z . j ) as Integer;
thus ( u . i ) >= ( u . j ) by A10,A11,A12,CKB45:1;
end;
hence u is  non-increasing by RFINSEQ:19;
thus u is (FinSequence of ( INT ));
( dom pp ) misses ( dom x ) by CKB25:1;
then pp c= ( pp +* x ) by FUNCT_4:32;
then s = ( s +* pp ) by A1,FUNCT_4:98,XBOOLE_1:1;
then s = ( Initialized s ) by SCMFSA6A:def 3;
hence thesis by CKB34:1,A3;
end;
