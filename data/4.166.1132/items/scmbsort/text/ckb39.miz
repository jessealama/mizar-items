environ
vocabularies NUMBERS,SCMNORM,SCMFSA_2,AMI_1,SUBSET_1,SCMFSA7B,SCMFSA8C,SCMFSA8A,AMI_3,CARD_1,AMISTD_2,SCMFSA8B,TURING_1,FSM_1,GRAPHSP,FUNCT_1,PARTFUN1,COMPLEX1,FUNCT_4,ARYTM_3,SF_MASTR,SCMFSA6C,SCMFSA6B,FUNCOP_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XXREAL_0,CIRCUIT2,NAT_1,STRUCT_0,ARYTM_1,INT_1,FINSEQ_1,FINSEQ_2,SCMFSA6A,FINSUB_1,CARD_3,CLASSES1,VALUED_0,MSUALG_1,SCM_HALT,SCMBSORT,PBOOLE,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,SETFAM_1,ORDINAL1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,INT_1,RELAT_1,FINSEQ_1,FUNCT_1,COMPLEX1,FUNCT_2,PBOOLE,FUNCT_4,FINSEQ_2,FUNCT_7,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_2,SCMFSA_2,FUNCOP_1,FINSUB_1,CARD_3,PARTFUN1,SCMFSA6B,SCMFSA6C,SCMFSA6A,SF_MASTR,SCMFSA8A,SCMFSA8B,SCMFSA8C,CLASSES1,RFINSEQ,SCMFSA7B,NAT_D,SCM_HALT,XXREAL_0,CKB21,CKB35,CKB36;
definitions TARSKI,FUNCOP_1,COMPOS_1,EXTPRO_1,XBOOLE_0,SCMFSA8C,SCM_HALT,MEMSTR_0,CKB35,CKB36;
theorems SF_MASTR,FUNCT_1,FUNCT_7,FUNCOP_1,RELAT_1,FUNCT_2,ZFMISC_1,SCMFSA6A,FUNCT_4,FINSEQ_3,ENUMSET1,NAT_1,FINSEQ_1,RELSET_1,TARSKI,INT_1,PARTFUN1,GRFUNC_1,RFINSEQ,SCMFSA_2,SCMFSA7B,SCMFSA8B,SCMFSA8A,SCMFSA8C,SCMFSA6C,SCM_HALT,ABSVALUE,FINSEQ_4,XBOOLE_0,XBOOLE_1,SCMFSA9A,XREAL_1,ORDINAL1,XXREAL_0,NAT_D,CLASSES1,PBOOLE,AFINSQ_1,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38;
schemes RELSET_1,FUNCT_1,NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,RELSET_1,FUNCOP_1,FINSUB_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_3,RFINSEQ,SCMFSA_2,SF_MASTR,SCMFSA6C,SCMFSA7B,FINSET_1,SCMFSA8A,SCMFSA8B,SCMFSA_9,SCM_HALT,STRUCT_0,VALUED_0,ORDINAL1,RELAT_1,FUNCT_2,PBOOLE,SCMFSA10,AMISTD_2,SCMFSA6A,COMPOS_1,SFMASTR1,FUNCT_4,EXTPRO_1,SCMFSA8C,MEMSTR_0;
constructors SETWISEO,XXREAL_0,REAL_1,AMI_3,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA8C,SCM_HALT,SEQ_1,SCMFSA7B,AMISTD_2,NAT_D,CLASSES1,RELSET_1,DOMAIN_1,SFMASTR1,AMISTD_1,PBOOLE,PRE_POLY,SCMFSA_3,SCMFSA_7,SCMFSA_9,SCMFSA_2,XXREAL_2,MEMSTR_0,CKB21,CKB35,CKB36;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve p for (preProgram of ( SCM+FSA ));
reserve f for FinSeq-Location;
reserve q for (Instruction-Sequence of ( SCM+FSA ));
definition
func Sorting-Function -> (PartFunc of ( FinPartSt ( SCM+FSA ) ),( FinPartSt ( SCM+FSA ) )) means 
:Def3: (for p,q being (FinPartState of ( SCM+FSA )) holds ([ p,q ] in it iff (ex t being (FinSequence of ( INT )) st (ex u being (FinSequence of ( REAL )) st ((((t,u are_fiberwise_equipotent  & u is (FinSequence of ( INT ))) & u is  non-increasing) & p = ( ( fsloc ( 0 ) ) .--> t )) & q = ( ( fsloc ( 0 ) ) .--> u ))))));
existence
proof
defpred X[ set,set ]
 means
(ex t being (FinSequence of ( INT )) st (ex u being (FinSequence of ( REAL )) st ((((t,u are_fiberwise_equipotent  & u is (FinSequence of ( INT ))) & u is  non-increasing) & $1 = ( ( fsloc ( 0 ) ) .--> t )) & $2 = ( ( fsloc ( 0 ) ) .--> u ))));
A1: (for x,y1,y2 being set holds ((X[ x,y1 ] & X[ x,y2 ]) implies y1 = y2))
proof
let p being set;
let q1 being set;
let q2 being set;
given t1 being (FinSequence of ( INT )),u1 being (FinSequence of ( REAL )) such that
A2: t1,u1 are_fiberwise_equipotent 
and
u1 is (FinSequence of ( INT ))
and
A3: u1 is  non-increasing
and
A4: p = ( ( fsloc ( 0 ) ) .--> t1 )
and
A5: q1 = ( ( fsloc ( 0 ) ) .--> u1 );

given t2 being (FinSequence of ( INT )),u2 being (FinSequence of ( REAL )) such that
A6: t2,u2 are_fiberwise_equipotent 
and
u2 is (FinSequence of ( INT ))
and
A7: u2 is  non-increasing
and
A8: p = ( ( fsloc ( 0 ) ) .--> t2 )
and
A9: q2 = ( ( fsloc ( 0 ) ) .--> u2 );

t1 = ( ( ( fsloc ( 0 ) ) .--> t1 ) . ( fsloc ( 0 ) ) ) by FUNCOP_1:72
.= t2 by A4,A8,FUNCOP_1:72;
hence thesis by A2,A3,A5,A6,A7,A9,CLASSES1:76,RFINSEQ:23;
end;
consider f being Function such that A10: (for p,q being set holds ([ p,q ] in f iff (p in ( FinPartSt ( SCM+FSA ) ) & X[ p,q ]))) from FUNCT_1:sch 1(A1);
A11: ( dom f ) c= ( FinPartSt ( SCM+FSA ) )
proof
let e being set;
assume e in ( dom f );
then [ e,( f . e ) ] in f by FUNCT_1:1;
hence thesis by A10;
end;
( rng f ) c= ( FinPartSt ( SCM+FSA ) )
proof
let q being set;
assume q in ( rng f );
then consider p being set such that A12: [ p,q ] in f by RELAT_1:def 5;
consider t being (FinSequence of ( INT )),u being (FinSequence of ( REAL )) such that t,u are_fiberwise_equipotent  and A13: u is (FinSequence of ( INT )) and u is  non-increasing and p = ( ( fsloc ( 0 ) ) .--> t ) and A14: q = ( ( fsloc ( 0 ) ) .--> u ) by A10,A12;
reconsider u as (FinSequence of ( INT )) by A13;
( ( fsloc ( 0 ) ) .--> u ) is (FinPartState of ( SCM+FSA ));
hence thesis by A14,MEMSTR_0:75;
end;
then reconsider f as (PartFunc of ( FinPartSt ( SCM+FSA ) ),( FinPartSt ( SCM+FSA ) )) by A11,RELSET_1:4;
take f;
let p being (FinPartState of ( SCM+FSA ));
let q being (FinPartState of ( SCM+FSA ));
thus ([ p,q ] in f implies (ex t being (FinSequence of ( INT )) st (ex u being (FinSequence of ( REAL )) st ((((t,u are_fiberwise_equipotent  & u is (FinSequence of ( INT ))) & u is  non-increasing) & p = ( ( fsloc ( 0 ) ) .--> t )) & q = ( ( fsloc ( 0 ) ) .--> u ))))) by A10;
given t being (FinSequence of ( INT )),u being (FinSequence of ( REAL )) such that
A15: t,u are_fiberwise_equipotent 
and
A16: u is (FinSequence of ( INT ))
and
A17: u is  non-increasing
and
A18: p = ( ( fsloc ( 0 ) ) .--> t )
and
A19: q = ( ( fsloc ( 0 ) ) .--> u );

p in ( FinPartSt ( SCM+FSA ) ) by MEMSTR_0:75;
hence thesis by A10,A15,A16,A17,A18,A19;
end;
uniqueness
proof
let IT1 being (PartFunc of ( FinPartSt ( SCM+FSA ) ),( FinPartSt ( SCM+FSA ) ));
let IT2 being (PartFunc of ( FinPartSt ( SCM+FSA ) ),( FinPartSt ( SCM+FSA ) ));
assume that
A20: (for p,q being (FinPartState of ( SCM+FSA )) holds ([ p,q ] in IT1 iff (ex t being (FinSequence of ( INT )) st (ex u being (FinSequence of ( REAL )) st ((((t,u are_fiberwise_equipotent  & u is (FinSequence of ( INT ))) & u is  non-increasing) & p = ( ( fsloc ( 0 ) ) .--> t )) & q = ( ( fsloc ( 0 ) ) .--> u ))))))
and
A21: (for p,q being (FinPartState of ( SCM+FSA )) holds ([ p,q ] in IT2 iff (ex t being (FinSequence of ( INT )) st (ex u being (FinSequence of ( REAL )) st ((((t,u are_fiberwise_equipotent  & u is (FinSequence of ( INT ))) & u is  non-increasing) & p = ( ( fsloc ( 0 ) ) .--> t )) & q = ( ( fsloc ( 0 ) ) .--> u ))))));
defpred X[ set,set ]
 means
(ex t being (FinSequence of ( INT )) st (ex u being (FinSequence of ( REAL )) st ((((t,u are_fiberwise_equipotent  & u is (FinSequence of ( INT ))) & u is  non-increasing) & $1 = ( ( fsloc ( 0 ) ) .--> t )) & $2 = ( ( fsloc ( 0 ) ) .--> u ))));
A22: (for p,q being (Element of ( FinPartSt ( SCM+FSA ) )) holds ([ p,q ] in IT1 iff X[ p,q ]))
proof
let p being (Element of ( FinPartSt ( SCM+FSA ) ));
let q being (Element of ( FinPartSt ( SCM+FSA ) ));
reconsider p,q as (FinPartState of ( SCM+FSA )) by MEMSTR_0:76;
([ p,q ] in IT1 iff X[ p,q ]) by A20;
hence thesis;
end;
A23: (for p,q being (Element of ( FinPartSt ( SCM+FSA ) )) holds ([ p,q ] in IT2 iff X[ p,q ]))
proof
let p being (Element of ( FinPartSt ( SCM+FSA ) ));
let q being (Element of ( FinPartSt ( SCM+FSA ) ));
reconsider p,q as (FinPartState of ( SCM+FSA )) by MEMSTR_0:76;
([ p,q ] in IT2 iff X[ p,q ]) by A21;
hence thesis;
end;
thus IT1 = IT2 from RELSET_1:sch 4(A22,A23);
end;
end;
