environ
vocabularies NUMBERS,SCMNORM,SCMFSA_2,AMI_1,SUBSET_1,SCMFSA7B,SCMFSA8C,SCMFSA8A,AMI_3,CARD_1,AMISTD_2,SCMFSA8B,TURING_1,FSM_1,GRAPHSP,FUNCT_1,PARTFUN1,COMPLEX1,FUNCT_4,ARYTM_3,SF_MASTR,SCMFSA6C,SCMFSA6B,FUNCOP_1,ORDINAL1,RELAT_1,TARSKI,XBOOLE_0,XXREAL_0,CIRCUIT2,NAT_1,STRUCT_0,ARYTM_1,INT_1,FINSEQ_1,FINSEQ_2,SCMFSA6A,FINSUB_1,CARD_3,CLASSES1,VALUED_0,MSUALG_1,SCM_HALT,SCMBSORT,PBOOLE,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,SETFAM_1,ORDINAL1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,INT_1,RELAT_1,FINSEQ_1,FUNCT_1,COMPLEX1,FUNCT_2,PBOOLE,FUNCT_4,FINSEQ_2,FUNCT_7,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_2,SCMFSA_2,FUNCOP_1,FINSUB_1,CARD_3,PARTFUN1,SCMFSA6B,SCMFSA6C,SCMFSA6A,SF_MASTR,SCMFSA8A,SCMFSA8B,SCMFSA8C,CLASSES1,RFINSEQ,SCMFSA7B,NAT_D,SCM_HALT,XXREAL_0;
definitions TARSKI,FUNCOP_1,COMPOS_1,EXTPRO_1,XBOOLE_0,SCMFSA8C,SCM_HALT,MEMSTR_0;
theorems SF_MASTR,FUNCT_1,FUNCT_7,FUNCOP_1,RELAT_1,FUNCT_2,ZFMISC_1,SCMFSA6A,FUNCT_4,FINSEQ_3,ENUMSET1,NAT_1,FINSEQ_1,RELSET_1,TARSKI,INT_1,PARTFUN1,GRFUNC_1,RFINSEQ,SCMFSA_2,SCMFSA7B,SCMFSA8B,SCMFSA8A,SCMFSA8C,SCMFSA6C,SCM_HALT,ABSVALUE,FINSEQ_4,XBOOLE_0,XBOOLE_1,SCMFSA9A,XREAL_1,ORDINAL1,XXREAL_0,NAT_D,CLASSES1,PBOOLE,AFINSQ_1,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
schemes RELSET_1,FUNCT_1,NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,RELSET_1,FUNCOP_1,FINSUB_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_3,RFINSEQ,SCMFSA_2,SF_MASTR,SCMFSA6C,SCMFSA7B,FINSET_1,SCMFSA8A,SCMFSA8B,SCMFSA_9,SCM_HALT,STRUCT_0,VALUED_0,ORDINAL1,RELAT_1,FUNCT_2,PBOOLE,SCMFSA10,AMISTD_2,SCMFSA6A,COMPOS_1,SFMASTR1,FUNCT_4,EXTPRO_1,SCMFSA8C,MEMSTR_0;
constructors SETWISEO,XXREAL_0,REAL_1,AMI_3,SCMFSA6A,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA8A,SCMFSA8B,SCMFSA8C,SCM_HALT,SEQ_1,SCMFSA7B,AMISTD_2,NAT_D,CLASSES1,RELSET_1,DOMAIN_1,SFMASTR1,AMISTD_1,PBOOLE,PRE_POLY,SCMFSA_3,SCMFSA_7,SCMFSA_9,SCMFSA_2,XXREAL_2,MEMSTR_0;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve p for (preProgram of ( SCM+FSA ));
reserve i for (Element of ( NAT ));
reserve j for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve fa for FinSeq-Location;
reserve a for Int-Location;
reserve b for Int-Location;
reserve da for Int-Location;
reserve db for Int-Location;
reserve lb for (Element of ( NAT ));
reserve p1 for (Instruction-Sequence of ( SCM+FSA ));
reserve p2 for (Instruction-Sequence of ( SCM+FSA ));
theorem
Th25: (for i,k being (Element of ( NAT )) holds (for t being (FinPartState of ( SCM+FSA )) holds (for p being (Program of ( SCM+FSA )) holds (for s1,s2 being (State of ( SCM+FSA )) holds (((((((k <= i & p c= p1) & p c= p2) & ( dom t ) c= ( ( Int-Locations ) \/ ( FinSeq-Locations ) )) & (for j holds (( IC ( Comput (p1,s1,j) ) ) in ( dom p ) & ( IC ( Comput (p2,s2,j) ) ) in ( dom p )))) & ( ( Comput (p1,s1,k) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (p2,s2,k) ) . ( IC ( SCM+FSA ) ) )) & ( ( Comput (p1,s1,k) ) | ( ( ( dom t ) \/ ( UsedInt*Loc p ) ) \/ ( UsedIntLoc p ) ) ) = ( ( Comput (p2,s2,k) ) | ( ( ( dom t ) \/ ( UsedInt*Loc p ) ) \/ ( UsedIntLoc p ) ) )) implies (( ( Comput (p1,s1,i) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (p2,s2,i) ) . ( IC ( SCM+FSA ) ) ) & ( ( Comput (p1,s1,i) ) | ( ( ( dom t ) \/ ( UsedInt*Loc p ) ) \/ ( UsedIntLoc p ) ) ) = ( ( Comput (p2,s2,i) ) | ( ( ( dom t ) \/ ( UsedInt*Loc p ) ) \/ ( UsedIntLoc p ) ) )))))))
proof
let i;
let k;
let t being (FinPartState of ( SCM+FSA ));
let p being (Program of ( SCM+FSA ));
let s1 being (State of ( SCM+FSA ));
let s2 being (State of ( SCM+FSA ));
set Dloc = ( ( ( dom t ) \/ ( UsedInt*Loc p ) ) \/ ( UsedIntLoc p ) );
assume that
A1: k <= i
and
A2: p c= p1
and
A3: p c= p2
and
A4: ( dom t ) c= ( ( Int-Locations ) \/ ( FinSeq-Locations ) )
and
A5: (for j holds (( IC ( Comput (p1,s1,j) ) ) in ( dom p ) & ( IC ( Comput (p2,s2,j) ) ) in ( dom p )))
and
A6: ( ( Comput (p1,s1,k) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (p2,s2,k) ) . ( IC ( SCM+FSA ) ) )
and
A7: ( ( Comput (p1,s1,k) ) | Dloc ) = ( ( Comput (p2,s2,k) ) | Dloc );
consider m being Nat such that A8: i = ( k + m ) by A1,NAT_1:10;
reconsider m as (Element of ( NAT )) by ORDINAL1:def 12;
A9: i = ( k + m ) by A8;
A10: ( UsedIntLoc p ) c= Dloc by XBOOLE_1:7;
Dloc = ( ( ( dom t ) \/ ( UsedIntLoc p ) ) \/ ( UsedInt*Loc p ) ) by XBOOLE_1:4;
then A11: ( UsedInt*Loc p ) c= Dloc by XBOOLE_1:7;
defpred P[ Nat ]
 means
(( ( Comput (p1,s1,( k + $1 )) ) . ( IC ( SCM+FSA ) ) ) = ( ( Comput (p2,s2,( k + $1 )) ) . ( IC ( SCM+FSA ) ) ) & ( ( Comput (p1,s1,( k + $1 )) ) | Dloc ) = ( ( Comput (p2,s2,( k + $1 )) ) | Dloc ));
A12: P[ ( 0 ) ] by A6,A7;
A13:now
let m being (Element of ( NAT ));
assume A14: P[ m ];
set sk1 = ( Comput (p1,s1,( k + m )) );
set sk11 = ( Comput (p1,s1,( k + ( m + 1 ) )) );
set i1 = ( CurInstr (p1,sk1) );
set sk2 = ( Comput (p2,s2,( k + m )) );
set sk12 = ( Comput (p2,s2,( k + ( m + 1 ) )) );
set i2 = ( CurInstr (p2,sk2) );
A15: ( IC sk1 ) in ( dom p ) by A5;
A16: ( p2 /. ( IC sk2 ) ) = ( p2 . ( IC sk2 ) ) by PBOOLE:143;
A17: ( p1 /. ( IC sk1 ) ) = ( p1 . ( IC sk1 ) ) by PBOOLE:143;
i1 = ( p . ( IC sk1 ) ) by A2,A15,A17,GRFUNC_1:2;
then A19: i1 in ( rng p ) by A15,FUNCT_1:def 3;
A20: i2 = ( ( p2 | ( dom p ) ) . ( IC sk2 ) ) by A16,A5,FUNCT_1:49
.= ( ( p1 | ( dom p ) ) . ( IC sk1 ) ) by A2,A3,A14,GRFUNC_1:33
.= i1 by A17,A5,FUNCT_1:49;
A21: sk11 = ( Comput (p1,s1,( ( k + m ) + 1 )) )
.= ( Following (p1,sk1) ) by EXTPRO_1:3
.= ( Exec (i1,sk1) );
A22: sk12 = ( Comput (p2,s2,( ( k + m ) + 1 )) )
.= ( Following (p2,sk2) ) by EXTPRO_1:3
.= ( Exec (i2,sk2) );
A23: ( dom sk11 ) = (the carrier of ( SCM+FSA )) by PARTFUN1:def 2
.= ( dom sk12 ) by PARTFUN1:def 2;
per cases  by NAT_1:36,SCMFSA_2:16;
suppose ( InsCode i1 ) = ( 0 );

then A24: i1 = ( halt ( SCM+FSA ) ) by SCMFSA_2:95;
then sk11 = sk1 by A21,EXTPRO_1:def 3;
hence P[ ( m + 1 ) ] by A14,A20,A22,A24,EXTPRO_1:def 3;
end;
suppose ( InsCode i1 ) = 1;

then consider da,db such that A25: i1 = ( da := db ) by SCMFSA_2:30;
A26: ( sk11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC sk1 ) ) by A21,A25,SCMFSA_2:63
.= ( sk12 . ( IC ( SCM+FSA ) ) ) by A14,A20,A22,A25,SCMFSA_2:63;
now
let x being set;
assume A27: x in Dloc;
per cases  by A4,A27,CKB13:1;
suppose A28: x is Int-Location;

per cases ;
suppose A29: x = da;

then A30: ( sk12 . x ) = ( sk2 . db ) by A20,A22,A25,SCMFSA_2:63;
A31: db in ( UsedIntLoc p ) by A19,A25,CKB7:1;
then ( sk1 . db ) = ( ( sk2 | Dloc ) . db ) by A10,A14,FUNCT_1:49
.= ( sk2 . db ) by A10,A31,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A25,A29,A30,SCMFSA_2:63;
end;
suppose A32: x <> da;

then A33: ( sk12 . x ) = ( sk2 . x ) by A20,A22,A25,A28,SCMFSA_2:63;
( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,A27,FUNCT_1:49
.= ( sk2 . x ) by A27,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A25,A28,A32,A33,SCMFSA_2:63;
end;
end;
suppose A34: x is FinSeq-Location;

then A35: ( sk12 . x ) = ( sk2 . x ) by A20,A22,A25,SCMFSA_2:63;
( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,A27,FUNCT_1:49
.= ( sk2 . x ) by A27,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A25,A34,A35,SCMFSA_2:63;
end;
end;
hence P[ ( m + 1 ) ] by A23,A26,FUNCT_1:96;
end;
suppose ( InsCode i1 ) = 2;

then consider da,db such that A36: i1 = ( AddTo (da,db) ) by SCMFSA_2:31;
A37: ( sk11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC sk1 ) ) by A21,A36,SCMFSA_2:64
.= ( sk12 . ( IC ( SCM+FSA ) ) ) by A14,A20,A22,A36,SCMFSA_2:64;
now
let x being set;
assume A38: x in Dloc;
per cases  by A4,A38,CKB13:1;
suppose A39: x is Int-Location;

per cases ;
suppose A40: x = da;

then A41: ( sk12 . x ) = ( ( sk2 . da ) + ( sk2 . db ) ) by A20,A22,A36,SCMFSA_2:64;
A42: da in ( UsedIntLoc p ) by A19,A36,CKB7:1;
then A43: ( sk1 . da ) = ( ( sk2 | Dloc ) . da ) by A10,A14,FUNCT_1:49
.= ( sk2 . da ) by A10,A42,FUNCT_1:49;
A44: db in ( UsedIntLoc p ) by A19,A36,CKB7:1;
then ( sk1 . db ) = ( ( sk2 | Dloc ) . db ) by A10,A14,FUNCT_1:49
.= ( sk2 . db ) by A10,A44,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A36,A40,A41,A43,SCMFSA_2:64;
end;
suppose A45: x <> da;

then A46: ( sk12 . x ) = ( sk2 . x ) by A20,A22,A36,A39,SCMFSA_2:64;
( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,A38,FUNCT_1:49
.= ( sk2 . x ) by A38,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A36,A39,A45,A46,SCMFSA_2:64;
end;
end;
suppose A47: x is FinSeq-Location;

then A48: ( sk12 . x ) = ( sk2 . x ) by A20,A22,A36,SCMFSA_2:64;
( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,A38,FUNCT_1:49
.= ( sk2 . x ) by A38,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A36,A47,A48,SCMFSA_2:64;
end;
end;
hence P[ ( m + 1 ) ] by A23,A37,FUNCT_1:96;
end;
suppose ( InsCode i1 ) = 3;

then consider da,db such that A49: i1 = ( SubFrom (da,db) ) by SCMFSA_2:32;
A50: ( sk11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC sk1 ) ) by A21,A49,SCMFSA_2:65
.= ( sk12 . ( IC ( SCM+FSA ) ) ) by A14,A20,A22,A49,SCMFSA_2:65;
now
let x being set;
assume A51: x in Dloc;
per cases  by A4,A51,CKB13:1;
suppose A52: x is Int-Location;

per cases ;
suppose A53: x = da;

then A54: ( sk12 . x ) = ( ( sk2 . da ) - ( sk2 . db ) ) by A20,A22,A49,SCMFSA_2:65;
A55: da in ( UsedIntLoc p ) by A19,A49,CKB7:1;
then A56: ( sk1 . da ) = ( ( sk2 | Dloc ) . da ) by A10,A14,FUNCT_1:49
.= ( sk2 . da ) by A10,A55,FUNCT_1:49;
A57: db in ( UsedIntLoc p ) by A19,A49,CKB7:1;
then ( sk1 . db ) = ( ( sk2 | Dloc ) . db ) by A10,A14,FUNCT_1:49
.= ( sk2 . db ) by A10,A57,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A49,A53,A54,A56,SCMFSA_2:65;
end;
suppose A58: x <> da;

then A59: ( sk12 . x ) = ( sk2 . x ) by A20,A22,A49,A52,SCMFSA_2:65;
( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,A51,FUNCT_1:49
.= ( sk2 . x ) by A51,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A49,A52,A58,A59,SCMFSA_2:65;
end;
end;
suppose A60: x is FinSeq-Location;

then A61: ( sk12 . x ) = ( sk2 . x ) by A20,A22,A49,SCMFSA_2:65;
( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,A51,FUNCT_1:49
.= ( sk2 . x ) by A51,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A49,A60,A61,SCMFSA_2:65;
end;
end;
hence P[ ( m + 1 ) ] by A23,A50,FUNCT_1:96;
end;
suppose ( InsCode i1 ) = 4;

then consider da,db such that A62: i1 = ( MultBy (da,db) ) by SCMFSA_2:33;
A63: ( sk11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC sk1 ) ) by A21,A62,SCMFSA_2:66
.= ( sk12 . ( IC ( SCM+FSA ) ) ) by A14,A20,A22,A62,SCMFSA_2:66;
now
let x being set;
assume A64: x in Dloc;
per cases  by A4,A64,CKB13:1;
suppose A65: x is Int-Location;

per cases ;
suppose A66: x = da;

then A67: ( sk12 . x ) = ( ( sk2 . da ) * ( sk2 . db ) ) by A20,A22,A62,SCMFSA_2:66;
A68: da in ( UsedIntLoc p ) by A19,A62,CKB7:1;
then A69: ( sk1 . da ) = ( ( sk2 | Dloc ) . da ) by A10,A14,FUNCT_1:49
.= ( sk2 . da ) by A10,A68,FUNCT_1:49;
A70: db in ( UsedIntLoc p ) by A19,A62,CKB7:1;
then ( sk1 . db ) = ( ( sk2 | Dloc ) . db ) by A10,A14,FUNCT_1:49
.= ( sk2 . db ) by A10,A70,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A62,A66,A67,A69,SCMFSA_2:66;
end;
suppose A71: x <> da;

then A72: ( sk12 . x ) = ( sk2 . x ) by A20,A22,A62,A65,SCMFSA_2:66;
( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,A64,FUNCT_1:49
.= ( sk2 . x ) by A64,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A62,A65,A71,A72,SCMFSA_2:66;
end;
end;
suppose A73: x is FinSeq-Location;

then A74: ( sk12 . x ) = ( sk2 . x ) by A20,A22,A62,SCMFSA_2:66;
( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,A64,FUNCT_1:49
.= ( sk2 . x ) by A64,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A62,A73,A74,SCMFSA_2:66;
end;
end;
hence P[ ( m + 1 ) ] by A23,A63,FUNCT_1:96;
end;
suppose ( InsCode i1 ) = 5;

then consider da,db such that A75: i1 = ( Divide (da,db) ) by SCMFSA_2:34;
A76: ( sk11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC sk1 ) ) by A21,A75,SCMFSA_2:67
.= ( sk12 . ( IC ( SCM+FSA ) ) ) by A14,A20,A22,A75,SCMFSA_2:67;
now
let x being set;
assume A77: x in Dloc;
per cases  by A4,A77,CKB13:1;
suppose A78: x is Int-Location;

A79: da in ( UsedIntLoc p ) by A19,A75,CKB7:1;
then A80: ( sk1 . da ) = ( ( sk2 | Dloc ) . da ) by A10,A14,FUNCT_1:49
.= ( sk2 . da ) by A10,A79,FUNCT_1:49;
A81: db in ( UsedIntLoc p ) by A19,A75,CKB7:1;
then A82: ( sk1 . db ) = ( ( sk2 | Dloc ) . db ) by A10,A14,FUNCT_1:49
.= ( sk2 . db ) by A10,A81,FUNCT_1:49;
A83: ( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,A77,FUNCT_1:49
.= ( sk2 . x ) by A77,FUNCT_1:49;
now
per cases ;
suppose A84: da <> db;

per cases ;
suppose A85: x = da;

then ( sk11 . x ) = ( ( sk1 . da ) div ( sk1 . db ) ) by A21,A75,A84,SCMFSA_2:67;
hence ( sk11 . x ) = ( sk12 . x ) by A20,A22,A75,A80,A82,A84,A85,SCMFSA_2:67;
end;
suppose A86: x = db;

then ( sk11 . x ) = ( ( sk1 . da ) mod ( sk1 . db ) ) by A21,A75,SCMFSA_2:67;
hence ( sk11 . x ) = ( sk12 . x ) by A20,A22,A75,A80,A82,A86,SCMFSA_2:67;
end;
suppose A87: (x <> da & x <> db);

then ( sk11 . x ) = ( sk1 . x ) by A21,A75,A78,SCMFSA_2:67;
hence ( sk11 . x ) = ( sk12 . x ) by A20,A22,A75,A78,A83,A87,SCMFSA_2:67;
end;
end;
suppose A88: da = db;

now
per cases ;
case A89: x = da;
then ( sk11 . x ) = ( ( sk1 . da ) mod ( sk1 . da ) ) by A21,A75,A88,SCMFSA_2:68;
hence ( sk11 . x ) = ( sk12 . x ) by A20,A22,A75,A80,A88,A89,SCMFSA_2:68;
end;
case A90: x <> da;
then ( sk11 . x ) = ( sk1 . x ) by A21,A75,A78,A88,SCMFSA_2:68;
hence ( sk11 . x ) = ( sk12 . x ) by A20,A22,A75,A78,A83,A88,A90,SCMFSA_2:68;
end;
end;
hence ( sk11 . x ) = ( sk12 . x );
end;
end;
hence ( sk11 . x ) = ( sk12 . x );
end;
suppose A91: x is FinSeq-Location;

then A92: ( sk12 . x ) = ( sk2 . x ) by A20,A22,A75,SCMFSA_2:67;
( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,A77,FUNCT_1:49
.= ( sk2 . x ) by A77,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A75,A91,A92,SCMFSA_2:67;
end;
end;
hence P[ ( m + 1 ) ] by A23,A76,FUNCT_1:96;
end;
suppose ( InsCode i1 ) = 6;

then consider lb such that A93: i1 = ( goto lb ) by SCMFSA_2:35;
A94: ( sk11 . ( IC ( SCM+FSA ) ) ) = lb by A21,A93,SCMFSA_2:69
.= ( sk12 . ( IC ( SCM+FSA ) ) ) by A20,A22,A93,SCMFSA_2:69;
now
let x being set;
assume A95: x in Dloc;
then A96: ( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,FUNCT_1:49
.= ( sk2 . x ) by A95,FUNCT_1:49;
per cases  by A4,A95,CKB13:1;
suppose A97: x is Int-Location;

then ( sk11 . x ) = ( sk1 . x ) by A21,A93,SCMFSA_2:69;
hence ( sk11 . x ) = ( sk12 . x ) by A20,A22,A93,A96,A97,SCMFSA_2:69;
end;
suppose A98: x is FinSeq-Location;

then ( sk11 . x ) = ( sk1 . x ) by A21,A93,SCMFSA_2:69;
hence ( sk11 . x ) = ( sk12 . x ) by A20,A22,A93,A96,A98,SCMFSA_2:69;
end;
end;
hence P[ ( m + 1 ) ] by A23,A94,FUNCT_1:96;
end;
suppose ( InsCode i1 ) = 7;

then consider lb,da such that A99: i1 = ( da =0_goto lb ) by SCMFSA_2:36;
A100: da in ( UsedIntLoc p ) by A19,A99,CKB8:1;
then A101: ( sk1 . da ) = ( ( sk2 | Dloc ) . da ) by A10,A14,FUNCT_1:49
.= ( sk2 . da ) by A10,A100,FUNCT_1:49;
A102:now
per cases ;
suppose A103: ( sk1 . da ) = ( 0 );

hence ( sk11 . ( IC ( SCM+FSA ) ) ) = lb by A21,A99,SCMFSA_2:70
.= ( sk12 . ( IC ( SCM+FSA ) ) ) by A20,A22,A99,A101,A103,SCMFSA_2:70;
end;
suppose A104: ( sk1 . da ) <> ( 0 );

hence ( sk11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC sk2 ) ) by A14,A21,A99,SCMFSA_2:70
.= ( sk12 . ( IC ( SCM+FSA ) ) ) by A20,A22,A99,A101,A104,SCMFSA_2:70;
end;
end;
now
let x being set;
assume A105: x in Dloc;
then A106: ( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,FUNCT_1:49
.= ( sk2 . x ) by A105,FUNCT_1:49;
per cases  by A4,A105,CKB13:1;
suppose A107: x is Int-Location;

then ( sk11 . x ) = ( sk1 . x ) by A21,A99,SCMFSA_2:70;
hence ( sk11 . x ) = ( sk12 . x ) by A20,A22,A99,A106,A107,SCMFSA_2:70;
end;
suppose A108: x is FinSeq-Location;

then ( sk11 . x ) = ( sk1 . x ) by A21,A99,SCMFSA_2:70;
hence ( sk11 . x ) = ( sk12 . x ) by A20,A22,A99,A106,A108,SCMFSA_2:70;
end;
end;
hence P[ ( m + 1 ) ] by A23,A102,FUNCT_1:96;
end;
suppose ( InsCode i1 ) = 8;

then consider lb,da such that A109: i1 = ( da >0_goto lb ) by SCMFSA_2:37;
A110: da in ( UsedIntLoc p ) by A19,A109,CKB8:1;
then A111: ( sk1 . da ) = ( ( sk2 | Dloc ) . da ) by A10,A14,FUNCT_1:49
.= ( sk2 . da ) by A10,A110,FUNCT_1:49;
A112:now
per cases ;
suppose A113: ( sk1 . da ) > ( 0 );

hence ( sk11 . ( IC ( SCM+FSA ) ) ) = lb by A21,A109,SCMFSA_2:71
.= ( sk12 . ( IC ( SCM+FSA ) ) ) by A20,A22,A109,A111,A113,SCMFSA_2:71;
end;
suppose A114: ( sk1 . da ) <= ( 0 );

hence ( sk11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC sk2 ) ) by A14,A21,A109,SCMFSA_2:71
.= ( sk12 . ( IC ( SCM+FSA ) ) ) by A20,A22,A109,A111,A114,SCMFSA_2:71;
end;
end;
now
let x being set;
assume A115: x in Dloc;
then A116: ( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,FUNCT_1:49
.= ( sk2 . x ) by A115,FUNCT_1:49;
per cases  by A4,A115,CKB13:1;
suppose A117: x is Int-Location;

then ( sk11 . x ) = ( sk1 . x ) by A21,A109,SCMFSA_2:71;
hence ( sk11 . x ) = ( sk12 . x ) by A20,A22,A109,A116,A117,SCMFSA_2:71;
end;
suppose A118: x is FinSeq-Location;

then ( sk11 . x ) = ( sk1 . x ) by A21,A109,SCMFSA_2:71;
hence ( sk11 . x ) = ( sk12 . x ) by A20,A22,A109,A116,A118,SCMFSA_2:71;
end;
end;
hence P[ ( m + 1 ) ] by A23,A112,FUNCT_1:96;
end;
suppose ( InsCode i1 ) = 9;

then consider a,b,fa such that A119: i1 = ( b := (fa,a) ) by SCMFSA_2:38;
A120: ( sk11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC sk2 ) ) by A14,A21,A119,SCMFSA_2:72
.= ( sk12 . ( IC ( SCM+FSA ) ) ) by A20,A22,A119,SCMFSA_2:72;
now
let x being set;
assume A121: x in Dloc;
per cases  by A4,A121,CKB13:1;
suppose A122: x is Int-Location;

per cases ;
suppose A123: x = b;

A124: (ex k1 being (Element of ( NAT )) st (k1 = ( abs ( sk1 . a ) ) & ( ( Exec (( b := (fa,a) ),sk1) ) . b ) = ( ( sk1 . fa ) /. k1 ))) by SCMFSA_2:72;
A125: (ex k2 being (Element of ( NAT )) st (k2 = ( abs ( sk2 . a ) ) & ( ( Exec (( b := (fa,a) ),sk2) ) . b ) = ( ( sk2 . fa ) /. k2 ))) by SCMFSA_2:72;
A126: a in ( UsedIntLoc p ) by A19,A119,CKB9:1;
then A127: ( sk1 . a ) = ( ( sk2 | Dloc ) . a ) by A10,A14,FUNCT_1:49
.= ( sk2 . a ) by A10,A126,FUNCT_1:49;
A128: fa in ( UsedInt*Loc p ) by A19,A119,CKB10:1;
then ( sk1 . fa ) = ( ( sk2 | Dloc ) . fa ) by A11,A14,FUNCT_1:49
.= ( sk2 . fa ) by A11,A128,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A20,A21,A22,A119,A123,A124,A125,A127;
end;
suppose A129: x <> b;

then A130: ( sk12 . x ) = ( sk2 . x ) by A20,A22,A119,A122,SCMFSA_2:72;
( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,A121,FUNCT_1:49
.= ( sk2 . x ) by A121,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A119,A122,A129,A130,SCMFSA_2:72;
end;
end;
suppose A131: x is FinSeq-Location;

then A132: ( sk12 . x ) = ( sk2 . x ) by A20,A22,A119,SCMFSA_2:72;
( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,A121,FUNCT_1:49
.= ( sk2 . x ) by A121,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A119,A131,A132,SCMFSA_2:72;
end;
end;
hence P[ ( m + 1 ) ] by A23,A120,FUNCT_1:96;
end;
suppose ( InsCode i1 ) = 10;

then consider a,b,fa such that A133: i1 = ( (fa,a) := b ) by SCMFSA_2:39;
A134: ( sk11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC sk2 ) ) by A14,A21,A133,SCMFSA_2:73
.= ( sk12 . ( IC ( SCM+FSA ) ) ) by A20,A22,A133,SCMFSA_2:73;
now
let x being set;
assume A135: x in Dloc;
per cases  by A4,A135,CKB13:1;
suppose A136: x is FinSeq-Location;

per cases ;
suppose A137: x = fa;

A138: (ex k1 being (Element of ( NAT )) st (k1 = ( abs ( sk1 . a ) ) & ( ( Exec (( (fa,a) := b ),sk1) ) . fa ) = ( ( sk1 . fa ) +* (k1,( sk1 . b )) ))) by SCMFSA_2:73;
A139: (ex k2 being (Element of ( NAT )) st (k2 = ( abs ( sk2 . a ) ) & ( ( Exec (( (fa,a) := b ),sk2) ) . fa ) = ( ( sk2 . fa ) +* (k2,( sk2 . b )) ))) by SCMFSA_2:73;
A140: a in ( UsedIntLoc p ) by A19,A133,CKB9:1;
then A141: ( sk1 . a ) = ( ( sk2 | Dloc ) . a ) by A10,A14,FUNCT_1:49
.= ( sk2 . a ) by A10,A140,FUNCT_1:49;
A142: b in ( UsedIntLoc p ) by A19,A133,CKB9:1;
then A143: ( sk1 . b ) = ( ( sk2 | Dloc ) . b ) by A10,A14,FUNCT_1:49
.= ( sk2 . b ) by A10,A142,FUNCT_1:49;
A144: fa in ( UsedInt*Loc p ) by A19,A133,CKB10:1;
then ( sk1 . fa ) = ( ( sk2 | Dloc ) . fa ) by A11,A14,FUNCT_1:49
.= ( sk2 . fa ) by A11,A144,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A20,A21,A22,A133,A137,A138,A139,A141,A143;
end;
suppose A145: x <> fa;

then A146: ( sk12 . x ) = ( sk2 . x ) by A20,A22,A133,A136,SCMFSA_2:73;
( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,A135,FUNCT_1:49
.= ( sk2 . x ) by A135,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A133,A136,A145,A146,SCMFSA_2:73;
end;
end;
suppose A147: x is Int-Location;

then A148: ( sk12 . x ) = ( sk2 . x ) by A20,A22,A133,SCMFSA_2:73;
( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,A135,FUNCT_1:49
.= ( sk2 . x ) by A135,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A133,A147,A148,SCMFSA_2:73;
end;
end;
hence P[ ( m + 1 ) ] by A23,A134,FUNCT_1:96;
end;
suppose ( InsCode i1 ) = 11;

then consider a,fa such that A149: i1 = ( a :=len fa ) by SCMFSA_2:40;
A150: ( sk11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC sk2 ) ) by A14,A21,A149,SCMFSA_2:74
.= ( sk12 . ( IC ( SCM+FSA ) ) ) by A20,A22,A149,SCMFSA_2:74;
now
let x being set;
assume A151: x in Dloc;
per cases  by A4,A151,CKB13:1;
suppose A152: x is Int-Location;

per cases ;
suppose A153: x = a;

then A154: ( sk12 . x ) = ( len ( sk2 . fa ) ) by A20,A22,A149,SCMFSA_2:74;
A155: fa in ( UsedInt*Loc p ) by A19,A149,CKB12:1;
then ( sk1 . fa ) = ( ( sk2 | Dloc ) . fa ) by A11,A14,FUNCT_1:49
.= ( sk2 . fa ) by A11,A155,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A149,A153,A154,SCMFSA_2:74;
end;
suppose A156: x <> a;

then A157: ( sk12 . x ) = ( sk2 . x ) by A20,A22,A149,A152,SCMFSA_2:74;
( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,A151,FUNCT_1:49
.= ( sk2 . x ) by A151,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A149,A152,A156,A157,SCMFSA_2:74;
end;
end;
suppose A158: x is FinSeq-Location;

then A159: ( sk12 . x ) = ( sk2 . x ) by A20,A22,A149,SCMFSA_2:74;
( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,A151,FUNCT_1:49
.= ( sk2 . x ) by A151,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A149,A158,A159,SCMFSA_2:74;
end;
end;
hence P[ ( m + 1 ) ] by A23,A150,FUNCT_1:96;
end;
suppose ( InsCode i1 ) = 12;

then consider a,fa such that A160: i1 = ( fa :=<0,...,0> a ) by SCMFSA_2:41;
A161: ( sk11 . ( IC ( SCM+FSA ) ) ) = ( succ ( IC sk2 ) ) by A14,A21,A160,SCMFSA_2:75
.= ( sk12 . ( IC ( SCM+FSA ) ) ) by A20,A22,A160,SCMFSA_2:75;
now
let x being set;
assume A162: x in Dloc;
per cases  by A4,A162,CKB13:1;
suppose A163: x is FinSeq-Location;

per cases ;
suppose A164: x = fa;

A165: (ex k1 being (Element of ( NAT )) st (k1 = ( abs ( sk1 . a ) ) & ( ( Exec (( fa :=<0,...,0> a ),sk1) ) . fa ) = ( k1 |-> ( 0 ) ))) by SCMFSA_2:75;
A166: (ex k2 being (Element of ( NAT )) st (k2 = ( abs ( sk2 . a ) ) & ( ( Exec (( fa :=<0,...,0> a ),sk2) ) . fa ) = ( k2 |-> ( 0 ) ))) by SCMFSA_2:75;
A167: a in ( UsedIntLoc p ) by A19,A160,CKB11:1;
then ( sk1 . a ) = ( ( sk2 | Dloc ) . a ) by A10,A14,FUNCT_1:49
.= ( sk2 . a ) by A10,A167,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A20,A21,A22,A160,A164,A165,A166;
end;
suppose A168: x <> fa;

then A169: ( sk12 . x ) = ( sk2 . x ) by A20,A22,A160,A163,SCMFSA_2:75;
( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,A162,FUNCT_1:49
.= ( sk2 . x ) by A162,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A160,A163,A168,A169,SCMFSA_2:75;
end;
end;
suppose A170: x is Int-Location;

then A171: ( sk12 . x ) = ( sk2 . x ) by A20,A22,A160,SCMFSA_2:75;
( sk1 . x ) = ( ( sk2 | Dloc ) . x ) by A14,A162,FUNCT_1:49
.= ( sk2 . x ) by A162,FUNCT_1:49;
hence ( sk11 . x ) = ( sk12 . x ) by A21,A160,A170,A171,SCMFSA_2:75;
end;
end;
hence P[ ( m + 1 ) ] by A23,A161,FUNCT_1:96;
end;
end;
(for m being (Element of ( NAT )) holds P[ m ]) from NAT_1:sch 1(A12,A13);
hence thesis by A9;
end;
