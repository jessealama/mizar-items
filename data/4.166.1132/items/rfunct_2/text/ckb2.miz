environ
vocabularies NUMBERS,SUBSET_1,SEQ_1,ORDINAL2,NAT_1,PARTFUN1,ARYTM_1,FUNCT_1,ARYTM_3,RELAT_1,VALUED_1,COMPLEX1,SEQ_2,XXREAL_0,CARD_1,REAL_1,TARSKI,XBOOLE_0,FUNCT_2,XREAL_0,ORDINAL1,ORDINAL4,VALUED_0,XXREAL_2,SEQ_4,SEQM_3,ZFMISC_1,XXREAL_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XREAL_0,COMPLEX1,REAL_1,NAT_1,RELAT_1,FUNCT_1,FUNCT_2,ZFMISC_1,RELSET_1,PARTFUN1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,SEQ_4,PARTFUN2,RCOMP_1,RFUNCT_1,XXREAL_0,XXREAL_2,RECDEF_1;
definitions TARSKI,SEQM_3,XBOOLE_0,FUNCT_1,VALUED_0,VALUED_1;
theorems TARSKI,FUNCT_1,SEQ_1,SEQ_2,SEQ_4,PARTFUN1,PARTFUN2,RFUNCT_1,FUNCT_2,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,VALUED_1,VALUED_0,CKB1;
registrations FUNCT_1,ORDINAL1,RELSET_1,NUMBERS,XREAL_0,MEMBERED,VALUED_0,VALUED_1,FUNCT_2,ZFMISC_1;
constructors PARTFUN1,REAL_1,NAT_1,COMPLEX1,SEQ_2,SEQM_3,SEQ_4,RCOMP_1,PARTFUN2,RFUNCT_1,VALUED_1,SEQ_1,RECDEF_1,XXREAL_2,ZFMISC_1,RELSET_1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve seq1 for Real_Sequence;
reserve seq2 for Real_Sequence;
reserve Ns for  increasing (sequence of ( NAT ));
reserve n for (Element of ( NAT ));
theorem
Th13: ((( ( seq1 + seq2 ) * Ns ) = ( ( seq1 * Ns ) + ( seq2 * Ns ) ) & ( ( seq1 - seq2 ) * Ns ) = ( ( seq1 * Ns ) - ( seq2 * Ns ) )) & ( ( seq1 (#) seq2 ) * Ns ) = ( ( seq1 * Ns ) (#) ( seq2 * Ns ) ))
proof
now
let n;
thus ( ( ( seq1 + seq2 ) * Ns ) . n ) = ( ( seq1 + seq2 ) . ( Ns . n ) ) by FUNCT_2:15
.= ( ( seq1 . ( Ns . n ) ) + ( seq2 . ( Ns . n ) ) ) by SEQ_1:7
.= ( ( ( seq1 * Ns ) . n ) + ( seq2 . ( Ns . n ) ) ) by FUNCT_2:15
.= ( ( ( seq1 * Ns ) . n ) + ( ( seq2 * Ns ) . n ) ) by FUNCT_2:15
.= ( ( ( seq1 * Ns ) + ( seq2 * Ns ) ) . n ) by SEQ_1:7;
end;
hence ( ( seq1 + seq2 ) * Ns ) = ( ( seq1 * Ns ) + ( seq2 * Ns ) ) by FUNCT_2:63;
now
let n;
thus ( ( ( seq1 - seq2 ) * Ns ) . n ) = ( ( seq1 - seq2 ) . ( Ns . n ) ) by FUNCT_2:15
.= ( ( seq1 . ( Ns . n ) ) - ( seq2 . ( Ns . n ) ) ) by CKB1:1
.= ( ( ( seq1 * Ns ) . n ) - ( seq2 . ( Ns . n ) ) ) by FUNCT_2:15
.= ( ( ( seq1 * Ns ) . n ) - ( ( seq2 * Ns ) . n ) ) by FUNCT_2:15
.= ( ( ( seq1 * Ns ) - ( seq2 * Ns ) ) . n ) by CKB1:1;
end;
hence ( ( seq1 - seq2 ) * Ns ) = ( ( seq1 * Ns ) - ( seq2 * Ns ) ) by FUNCT_2:63;
now
let n;
thus ( ( ( seq1 (#) seq2 ) * Ns ) . n ) = ( ( seq1 (#) seq2 ) . ( Ns . n ) ) by FUNCT_2:15
.= ( ( seq1 . ( Ns . n ) ) * ( seq2 . ( Ns . n ) ) ) by SEQ_1:8
.= ( ( ( seq1 * Ns ) . n ) * ( seq2 . ( Ns . n ) ) ) by FUNCT_2:15
.= ( ( ( seq1 * Ns ) . n ) * ( ( seq2 * Ns ) . n ) ) by FUNCT_2:15
.= ( ( ( seq1 * Ns ) (#) ( seq2 * Ns ) ) . n ) by SEQ_1:8;
end;
hence thesis by FUNCT_2:63;
end;
