environ
vocabularies NUMBERS,TARSKI,XBOOLE_0,ZFMISC_1,FUNCT_1,GOBOARD1,SUBSET_1,FINSEQ_1,ARYTM_3,XXREAL_0,FINSEQ_6,RELAT_1,PARTFUN1,FINSEQ_4,CARD_1,ORDINAL4,RFINSEQ,NAT_1,GRAPH_2,MATRIX_1,ARYTM_1,FINSEQ_5,EUCLID,RLTOPSP1,TOPREAL1,GOBOARD5,STRUCT_0,MCART_1,SETFAM_1,PRE_TOPC;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,NAT_D,SETFAM_1,FUNCT_1,PARTFUN1,FINSEQ_5,FINSEQ_6,RFINSEQ,GRAPH_2,MATRIX_1,RELSET_1,FINSEQ_1,ZFMISC_1,STRUCT_0,PRE_TOPC,RLTOPSP1,EUCLID,TOPREAL1,GOBOARD1,GOBOARD5,FINSEQ_4,XXREAL_0;
definitions FINSEQ_6,GOBOARD1,GOBOARD5,TOPREAL1,TARSKI;
theorems GRAPH_2,GOBOARD1,FINSEQ_3,NAT_1,FINSEQ_5,TOPREAL1,FINSEQ_1,TARSKI,FUNCT_1,FINSEQ_4,ZFMISC_1,PARTFUN2,FINSEQ_6,RELAT_1,RFINSEQ,INT_1,MSSCYC_1,REVROT_1,GOBOARD2,TOPREAL3,GOBOARD3,SPPOL_2,GOBOARD5,GOBOARD7,ENUMSET1,SETFAM_1,XBOOLE_0,XBOOLE_1,XREAL_1,CARD_1,XXREAL_0,ORDINAL1,PARTFUN1,NAT_D,SEQM_3,CKB1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15;
registrations XBOOLE_0,ORDINAL1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,ZFMISC_1,FINSEQ_5,FINSEQ_6,STRUCT_0,SPPOL_2,GOBOARD9,SPRECT_1,REVROT_1,CARD_1,FUNCT_1,RELAT_1,EUCLID,CKB2,CKB3;
constructors PARTFUN1,SETFAM_1,XXREAL_0,REAL_1,NAT_1,COMPLEX1,FINSEQ_4,RFINSEQ,NAT_D,FINSEQ_5,REALSET2,GOBOARD1,GOBOARD5,GRAPH_2,SPRECT_1,RELSET_1,RLTOPSP1;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve i for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
theorem
Th13: (for D being set holds (for f being (FinSequence of D) holds (1 <= k implies ( (( k + 1 ),( len f )) -cut f ) = ( f /^ k ))))
proof
let D being set;
let f being (FinSequence of D);
assume that
A1: 1 <= k;
per cases ;
suppose A2: ( len f ) < k;

k <= ( k + 1 ) by NAT_1:11;
then ( len f ) < ( k + 1 ) by A2,XXREAL_0:2;
hence ( (( k + 1 ),( len f )) -cut f ) = ( {} ) by GRAPH_2:def 1
.= ( f /^ k ) by A2,FINSEQ_5:32;
end;
suppose A3: f = ( {} );

then A4: ( len f ) = ( 0 );
thus ( (( k + 1 ),( len f )) -cut f ) = ( <*> D ) by A3,GRAPH_2:def 1
.= ( f /^ k ) by A1,A4,RFINSEQ:def 1;
end;
suppose that A5: k <= ( len f );
set IT = ( (( k + 1 ),( len f )) -cut f );
A6: 1 <= ( k + 1 ) by NAT_1:11;
A7: ( k + 1 ) <= ( ( len f ) + 1 ) by A5,XREAL_1:6;
A8: (for m being Nat holds (m in ( dom IT ) implies ( IT . m ) = ( f . ( m + k ) )))
proof
let m being Nat;
assume that
A9: m in ( dom IT );
1 <= m by A9,FINSEQ_3:25;
then consider i being Nat such that A10: m = ( 1 + i ) by NAT_1:10;
reconsider i as (Element of ( NAT )) by ORDINAL1:def 12;
m <= ( len IT ) by A9,FINSEQ_3:25;
then i < ( len IT ) by A10,NAT_1:13;
hence ( IT . m ) = ( f . ( ( k + 1 ) + i ) ) by A6,A7,A10,CKB15:1
.= ( f . ( m + k ) ) by A10;
end;
( ( len f ) + 1 ) = ( ( len IT ) + ( k + 1 ) ) by A6,A7,CKB15:1
.= ( ( ( len IT ) + k ) + 1 );
then ( len IT ) = ( ( len f ) - k );
hence thesis by A5,A8,RFINSEQ:def 1;
end;
end;
