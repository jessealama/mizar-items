environ
vocabularies NUMBERS,TARSKI,XBOOLE_0,ZFMISC_1,FUNCT_1,GOBOARD1,SUBSET_1,FINSEQ_1,ARYTM_3,XXREAL_0,FINSEQ_6,RELAT_1,PARTFUN1,FINSEQ_4,CARD_1,ORDINAL4,RFINSEQ,NAT_1,GRAPH_2,MATRIX_1,ARYTM_1,FINSEQ_5,EUCLID,RLTOPSP1,TOPREAL1,GOBOARD5,STRUCT_0,MCART_1,SETFAM_1,PRE_TOPC;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,NAT_D,SETFAM_1,FUNCT_1,PARTFUN1,FINSEQ_5,FINSEQ_6,RFINSEQ,GRAPH_2,MATRIX_1,RELSET_1,FINSEQ_1,ZFMISC_1,STRUCT_0,PRE_TOPC,RLTOPSP1,EUCLID,TOPREAL1,GOBOARD1,GOBOARD5,FINSEQ_4,XXREAL_0;
definitions FINSEQ_6,GOBOARD1,GOBOARD5,TOPREAL1,TARSKI;
theorems GRAPH_2,GOBOARD1,FINSEQ_3,NAT_1,FINSEQ_5,TOPREAL1,FINSEQ_1,TARSKI,FUNCT_1,FINSEQ_4,ZFMISC_1,PARTFUN2,FINSEQ_6,RELAT_1,RFINSEQ,INT_1,MSSCYC_1,REVROT_1,GOBOARD2,TOPREAL3,GOBOARD3,SPPOL_2,GOBOARD5,GOBOARD7,ENUMSET1,SETFAM_1,XBOOLE_0,XBOOLE_1,XREAL_1,CARD_1,XXREAL_0,ORDINAL1,PARTFUN1,NAT_D,SEQM_3,CKB1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
registrations XBOOLE_0,ORDINAL1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,ZFMISC_1,FINSEQ_5,FINSEQ_6,STRUCT_0,SPPOL_2,GOBOARD9,SPRECT_1,REVROT_1,CARD_1,FUNCT_1,RELAT_1,EUCLID,CKB2,CKB3;
constructors PARTFUN1,SETFAM_1,XXREAL_0,REAL_1,NAT_1,COMPLEX1,FINSEQ_4,RFINSEQ,NAT_D,FINSEQ_5,REALSET2,GOBOARD1,GOBOARD5,GRAPH_2,SPRECT_1,RELSET_1,RLTOPSP1;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve m for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
theorem
Lm1: (for p being FinSequence holds (for m,n being (Element of ( NAT )) holds (((1 <= m & m <= ( n + 1 )) & n <= ( len p )) implies (( ( len ( (m,n) -cut p ) ) + m ) = ( n + 1 ) & (for i being (Element of ( NAT )) holds (i < ( len ( (m,n) -cut p ) ) implies ( ( (m,n) -cut p ) . ( i + 1 ) ) = ( p . ( m + i ) )))))))
proof
let p being FinSequence;
let m being (Element of ( NAT ));
let n being (Element of ( NAT ));
assume that
A1: 1 <= m
and
A2: m <= ( n + 1 )
and
A3: n <= ( len p );
A4: (m = ( n + 1 ) or m < ( n + 1 )) by A2,XXREAL_0:1;
per cases  by A4,NAT_1:13;
suppose A5: m = ( n + 1 );

then n < m by XREAL_1:29;
then ( (m,n) -cut p ) = ( {} ) by GRAPH_2:def 1;
hence ( ( len ( (m,n) -cut p ) ) + m ) = ( n + 1 ) by A5,CARD_1:27;
(not ((1 <= m & m <= n) & n <= ( len p ))) by A5,XREAL_1:29;
hence thesis by CARD_1:27,GRAPH_2:def 1;
end;
suppose m <= n;

hence thesis by A1,A3,GRAPH_2:def 1;
end;
end;
