environ
vocabularies SUBSET_1,NUMBERS,PROB_1,XXREAL_0,ARYTM_3,FUNCT_1,XBOOLE_0,TARSKI,NAT_1,RELAT_1,CARD_1,SETFAM_1,EQREL_1,CARD_3,ZFMISC_1,SEQM_3,ORDINAL2,SEQ_2,PROB_2,RPR_1,SETLIM_1;
notations NUMBERS,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELSET_1,SETFAM_1,PROB_1,FUNCT_2,KURATO_0;
definitions TARSKI,SUBSET_1;
theorems FUNCT_1,FUNCT_2,PROB_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_1,SETFAM_1,ZFMISC_1,CARD_3,KURATO_0,PROB_2,XREAL_1,ORDINAL1,VALUED_0,RELAT_1,CKB1,CKB2,CKB3,CKB4;
schemes NAT_1,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,XREAL_0,FUNCT_2,RELAT_1,PROB_1,PROB_2,RELSET_1;
constructors SETFAM_1,NAT_1,KURATO_0,XREAL_0,RELSET_1,FINSUB_1,PROB_2;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve n for (Element of ( NAT ));
reserve x for set;
reserve y for set;
theorem
Th4: (for Y being non empty set holds (for f being (Function of ( NAT ),Y) holds (x in ( rng f ) iff (ex n st x = ( f . n )))))
proof
let Y being non empty set;
let f being (Function of ( NAT ),Y);
thus (x in ( rng f ) implies (ex n st x = ( f . n )))
proof
assume x in ( rng f );
then consider y such that A1: y in ( dom f ) and A2: x = ( f . y ) by FUNCT_1:def 3;
reconsider m = y as (Element of ( NAT )) by A1;
take m;
thus thesis by A2;
end;

given n such that
A3: x = ( f . n );

( dom f ) = ( NAT ) by FUNCT_2:def 1;
hence thesis by A3,FUNCT_1:def 3;
end;
