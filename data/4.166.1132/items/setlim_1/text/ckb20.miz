environ
vocabularies SUBSET_1,NUMBERS,PROB_1,XXREAL_0,ARYTM_3,FUNCT_1,XBOOLE_0,TARSKI,NAT_1,RELAT_1,CARD_1,SETFAM_1,EQREL_1,CARD_3,ZFMISC_1,SEQM_3,ORDINAL2,SEQ_2,PROB_2,RPR_1,SETLIM_1;
notations NUMBERS,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELSET_1,SETFAM_1,PROB_1,FUNCT_2,KURATO_0,CKB19;
definitions TARSKI,SUBSET_1,CKB19;
theorems FUNCT_1,FUNCT_2,PROB_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_1,SETFAM_1,ZFMISC_1,CARD_3,KURATO_0,PROB_2,XREAL_1,ORDINAL1,VALUED_0,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes NAT_1,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,XREAL_0,FUNCT_2,RELAT_1,PROB_1,PROB_2,RELSET_1;
constructors SETFAM_1,NAT_1,KURATO_0,XREAL_0,RELSET_1,FINSUB_1,PROB_2,CKB19;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve n for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve y for set;
reserve X for set;
reserve B for (SetSequence of X);
definition
let B being Function;
func inferior_setsequence B -> Function means 
:Def2: (( dom it ) = ( NAT ) & (for n holds ( it . n ) = ( meet { ( B . k ): n <= k } )));
existence
proof
deffunc F(Nat) = ( meet { ( B . k ): $1 <= k } );
thus (ex f being Function st (( dom f ) = ( NAT ) & (for n being (Element of ( NAT )) holds ( f . n ) = F(n)))) from FUNCT_1:sch 4;
end;
uniqueness
proof
let BSeq being Function;
let CSeq being Function;
assume that
A1: (( dom BSeq ) = ( NAT ) & (for n holds ( BSeq . n ) = ( meet { ( B . k ): n <= k } )))
and
A2: (( dom CSeq ) = ( NAT ) & (for m holds ( CSeq . m ) = ( meet { ( B . k ): m <= k } )));
(for y holds (y in ( NAT ) implies ( BSeq . y ) = ( CSeq . y )))
proof
let y;
assume y in ( NAT );
then reconsider y as (Element of ( NAT ));
set Y = { ( B . k ): y <= k };
( BSeq . y ) = ( meet Y ) by A1;
hence thesis by A2;
end;
hence thesis by A1,A2,FUNCT_1:2;
end;
end;
