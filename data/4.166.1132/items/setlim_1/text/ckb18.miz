environ
vocabularies SUBSET_1,NUMBERS,PROB_1,XXREAL_0,ARYTM_3,FUNCT_1,XBOOLE_0,TARSKI,NAT_1,RELAT_1,CARD_1,SETFAM_1,EQREL_1,CARD_3,ZFMISC_1,SEQM_3,ORDINAL2,SEQ_2,PROB_2,RPR_1,SETLIM_1;
notations NUMBERS,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELSET_1,SETFAM_1,PROB_1,FUNCT_2,KURATO_0;
definitions TARSKI,SUBSET_1;
theorems FUNCT_1,FUNCT_2,PROB_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_1,SETFAM_1,ZFMISC_1,CARD_3,KURATO_0,PROB_2,XREAL_1,ORDINAL1,VALUED_0,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes NAT_1,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,XREAL_0,FUNCT_2,RELAT_1,PROB_1,PROB_2,RELSET_1;
constructors SETFAM_1,NAT_1,KURATO_0,XREAL_0,RELSET_1,FINSUB_1,PROB_2;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve n for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve x for set;
reserve z for set;
reserve X for set;
reserve Z for set;
reserve B for (SetSequence of X);
theorem
Th16: (for X being set holds (for B being (SetSequence of X) holds (for f being Function holds ((( dom f ) = ( NAT ) & (for n holds ( f . n ) = ( union { ( B . k ): n <= k } ))) implies f is (Function of ( NAT ),( bool X ))))))
proof
let X being set;
let B being (SetSequence of X);
let f being Function;
assume that
A1: ( dom f ) = ( NAT )
and
A2: (for n holds ( f . n ) = ( union { ( B . k ): n <= k } ));
( rng f ) c= ( bool X )
proof
let z;
assume z in ( rng f );
then consider x such that A3: x in ( dom f ) and A4: z = ( f . x ) by FUNCT_1:def 3;
reconsider n = x as (Element of ( NAT )) by A1,A3;
set Y = { ( B . k ): n <= k };
set y = ( union Y );
now
let z;
assume z in y;
then (ex Z st (z in Z & Z in Y)) by TARSKI:def 4;
then consider Z1 being set such that A5: Z1 in Y and A6: z in Z1;
(ex k1 being (Element of ( NAT )) st (Z1 = ( B . k1 ) & n <= k1)) by A5;
hence z in X by A6;
end;
then A7: y is (Subset of X) by TARSKI:def 3;
z = y by A2,A4;
hence thesis by A7;
end;
hence thesis by A1,FUNCT_2:2;
end;
