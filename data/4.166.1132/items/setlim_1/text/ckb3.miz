environ
vocabularies SUBSET_1,NUMBERS,PROB_1,XXREAL_0,ARYTM_3,FUNCT_1,XBOOLE_0,TARSKI,NAT_1,RELAT_1,CARD_1,SETFAM_1,EQREL_1,CARD_3,ZFMISC_1,SEQM_3,ORDINAL2,SEQ_2,PROB_2,RPR_1,SETLIM_1;
notations NUMBERS,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELSET_1,SETFAM_1,PROB_1,FUNCT_2,KURATO_0;
definitions TARSKI,SUBSET_1;
theorems FUNCT_1,FUNCT_2,PROB_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_1,SETFAM_1,ZFMISC_1,CARD_3,KURATO_0,PROB_2,XREAL_1,ORDINAL1,VALUED_0,RELAT_1,CKB1,CKB2;
schemes NAT_1,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,XREAL_0,FUNCT_2,RELAT_1,PROB_1,PROB_2,RELSET_1;
constructors SETFAM_1,NAT_1,KURATO_0,XREAL_0,RELSET_1,FINSUB_1,PROB_2;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve n for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve k1 for (Element of ( NAT ));
reserve k2 for (Element of ( NAT ));
reserve x for set;
reserve z for set;
reserve Y for set;
theorem
Th2: (for f being (Function of ( NAT ),Y) holds { ( f . k1 ): n <= k1 } = ( { ( f . k2 ): ( n + 1 ) <= k2 } \/ { ( f . n ) } ))
proof
let f being (Function of ( NAT ),Y);
set Z1 = { ( f . k1 ): n <= k1 };
set Z2 = { ( f . k2 ): ( n + 1 ) <= k2 };
A1: ( Z2 \/ { ( f . n ) } ) c= Z1
proof
let x;
assume A2: x in ( Z2 \/ { ( f . n ) } );
now
per cases  by A2,XBOOLE_0:def 3;
case x in Z2;
then consider z such that A3: x = z and A4: z in Z2;
consider k11 being (Element of ( NAT )) such that A5: z = ( f . k11 ) and A6: ( n + 1 ) <= k11 by A4;
n <= k11 by A6,NAT_1:13;
hence thesis by A3,A5;
end;
case x in { ( f . n ) };
then x = ( f . n ) by TARSKI:def 1;
hence thesis;
end;
end;
hence thesis;
end;
{ ( f . k1 ): n <= k1 } c= ( { ( f . k2 ): ( n + 1 ) <= k2 } \/ { ( f . n ) } )
proof
let x;
assume x in Z1;
then consider z such that A7: x = z and A8: z in Z1;
consider k such that A9: (z = ( f . k ) & n <= k) by A8;
((z = ( f . k ) & ( n + 1 ) <= k) or (z = ( f . k ) & n = k)) by A9,CKB1:1;
then (z in Z2 or z in { ( f . n ) }) by TARSKI:def 1;
hence thesis by A7,XBOOLE_0:def 3;
end;
hence thesis by A1,XBOOLE_0:def 10;
end;
