environ
vocabularies SUBSET_1,NUMBERS,PROB_1,XXREAL_0,ARYTM_3,FUNCT_1,XBOOLE_0,TARSKI,NAT_1,RELAT_1,CARD_1,SETFAM_1,EQREL_1,CARD_3,ZFMISC_1,SEQM_3,ORDINAL2,SEQ_2,PROB_2,RPR_1,SETLIM_1;
notations NUMBERS,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELSET_1,SETFAM_1,PROB_1,FUNCT_2,KURATO_0;
definitions TARSKI,SUBSET_1;
theorems FUNCT_1,FUNCT_2,PROB_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_1,SETFAM_1,ZFMISC_1,CARD_3,KURATO_0,PROB_2,XREAL_1,ORDINAL1,VALUED_0,RELAT_1,CKB1,CKB2,CKB3;
schemes NAT_1,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,XREAL_0,FUNCT_2,RELAT_1,PROB_1,PROB_2,RELSET_1;
constructors SETFAM_1,NAT_1,KURATO_0,XREAL_0,RELSET_1,FINSUB_1,PROB_2;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve n for (Element of ( NAT ));
reserve k1 for (Element of ( NAT ));
reserve k2 for (Element of ( NAT ));
reserve x for set;
reserve Y for set;
reserve Z for set;
theorem
Th3: (for f being (Function of ( NAT ),Y) holds ((for k1 holds x in ( f . ( n + k1 ) )) iff (for Z holds (Z in { ( f . k2 ): n <= k2 } implies x in Z))))
proof
let f being (Function of ( NAT ),Y);
set Z = { ( f . k2 ): n <= k2 };
now
assume A1: (for k1 holds x in ( f . ( n + k1 ) ));
now
let Z1 being set;
assume Z1 in Z;
then consider k1 being (Element of ( NAT )) such that A2: Z1 = ( f . k1 ) and A3: n <= k1;
(ex m being Nat st k1 = ( n + m )) by A3,NAT_1:10;
then consider k2 being Nat such that A4: Z1 = ( f . ( n + k2 ) ) by A2;
k2 in ( NAT ) by ORDINAL1:def 12;
hence x in Z1 by A1,A4;
end;
hence (for Z1 being set holds (Z1 in { ( f . k2 ): n <= k2 } implies x in Z1));
end;
hence thesis by CKB2:1;
end;
