environ
vocabularies SUBSET_1,NUMBERS,PROB_1,XXREAL_0,ARYTM_3,FUNCT_1,XBOOLE_0,TARSKI,NAT_1,RELAT_1,CARD_1,SETFAM_1,EQREL_1,CARD_3,ZFMISC_1,SEQM_3,ORDINAL2,SEQ_2,PROB_2,RPR_1,SETLIM_1;
notations NUMBERS,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELSET_1,SETFAM_1,PROB_1,FUNCT_2,KURATO_0;
definitions TARSKI,SUBSET_1;
theorems FUNCT_1,FUNCT_2,PROB_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_1,SETFAM_1,ZFMISC_1,CARD_3,KURATO_0,PROB_2,XREAL_1,ORDINAL1,VALUED_0,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
schemes NAT_1,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,XREAL_0,FUNCT_2,RELAT_1,PROB_1,PROB_2,RELSET_1;
constructors SETFAM_1,NAT_1,KURATO_0,XREAL_0,RELSET_1,FINSUB_1,PROB_2;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve n for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve x for set;
reserve X for set;
reserve A for (Subset of X);
reserve B for (SetSequence of X);
theorem
Th13: ((B is  constant & ( the_value_of B ) = A) implies (for n holds ( union { ( B . k ): n <= k } ) = A))
proof
assume A1: (B is  constant & ( the_value_of B ) = A);
let n;
set Y = { ( B . k ): n <= k };
A2:now
let x;
assume x in Y;
then (ex k st (x = ( B . k ) & n <= k));
hence x = A by A1,CKB14:1;
end;
Y <> ( {} ) by CKB2:1;
then Y = { A } by A2,ZFMISC_1:35;
hence thesis by ZFMISC_1:25;
end;
