environ
vocabularies SUBSET_1,NUMBERS,PROB_1,XXREAL_0,ARYTM_3,FUNCT_1,XBOOLE_0,TARSKI,NAT_1,RELAT_1,CARD_1,SETFAM_1,EQREL_1,CARD_3,ZFMISC_1,SEQM_3,ORDINAL2,SEQ_2,PROB_2,RPR_1,SETLIM_1;
notations NUMBERS,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELSET_1,SETFAM_1,PROB_1,FUNCT_2,KURATO_0,CKB19,CKB20,CKB21,CKB22,CKB23;
definitions TARSKI,SUBSET_1,CKB19,CKB20,CKB22;
theorems FUNCT_1,FUNCT_2,PROB_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_1,SETFAM_1,ZFMISC_1,CARD_3,KURATO_0,PROB_2,XREAL_1,ORDINAL1,VALUED_0,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB22,CKB24,CKB25,CKB26;
schemes NAT_1,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,XREAL_0,FUNCT_2,RELAT_1,PROB_1,PROB_2,RELSET_1;
constructors SETFAM_1,NAT_1,KURATO_0,XREAL_0,RELSET_1,FINSUB_1,PROB_2,CKB19,CKB20,CKB21,CKB22,CKB23;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve n for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve x for set;
reserve X for set;
reserve B for (SetSequence of X);
theorem
Th20: (x in ( ( superior_setsequence B ) . n ) iff (ex k st x in ( B . ( n + k ) )))
proof
set Y = { ( B . k ): n <= k };
A1: ( ( superior_setsequence B ) . n ) = ( union { ( B . k ): n <= k } ) by CKB22:def 1;
thus (x in ( ( superior_setsequence B ) . n ) implies (ex k st x in ( B . ( n + k ) )))
proof
assume x in ( ( superior_setsequence B ) . n );
then consider Y1 being set such that A2: x in Y1 and A3: Y1 in Y by A1,TARSKI:def 4;
consider k11 being (Element of ( NAT )) such that A4: Y1 = ( B . k11 ) and A5: n <= k11 by A3;
(ex k being Nat st k11 = ( n + k )) by A5,NAT_1:10;
then consider k22 being Nat such that A6: Y1 = ( B . ( n + k22 ) ) by A4;
k22 in ( NAT ) by ORDINAL1:def 12;
hence thesis by A2,A6;
end;

now
assume (ex k st x in ( B . ( n + k ) ));
then consider k1 being (Element of ( NAT )) such that A7: x in ( B . ( n + k1 ) );
( B . ( n + k1 ) ) in Y by CKB2:1;
hence x in ( ( superior_setsequence B ) . n ) by A1,A7,TARSKI:def 4;
end;
hence thesis;
end;
