environ
vocabularies SUBSET_1,NUMBERS,PROB_1,XXREAL_0,ARYTM_3,FUNCT_1,XBOOLE_0,TARSKI,NAT_1,RELAT_1,CARD_1,SETFAM_1,EQREL_1,CARD_3,ZFMISC_1,SEQM_3,ORDINAL2,SEQ_2,PROB_2,RPR_1,SETLIM_1;
notations NUMBERS,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELSET_1,SETFAM_1,PROB_1,FUNCT_2,KURATO_0;
definitions TARSKI,SUBSET_1;
theorems FUNCT_1,FUNCT_2,PROB_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_1,SETFAM_1,ZFMISC_1,CARD_3,KURATO_0,PROB_2,XREAL_1,ORDINAL1,VALUED_0,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
schemes NAT_1,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,XREAL_0,FUNCT_2,RELAT_1,PROB_1,PROB_2,RELSET_1;
constructors SETFAM_1,NAT_1,KURATO_0,XREAL_0,RELSET_1,FINSUB_1,PROB_2;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve n for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve k1 for (Element of ( NAT ));
reserve k2 for (Element of ( NAT ));
reserve x for set;
reserve y for set;
reserve Y for set;
theorem
Th6: (for Y being non  empty set holds (for f being (Function of ( NAT ),Y) holds ( rng ( f ^\ k ) ) = { ( f . n ): k <= n }))
proof
let Y being non  empty set;
let f being (Function of ( NAT ),Y);
reconsider f1 = ( f ^\ k ) as (Function of ( NAT ),Y);
( rng f1 ) = { ( f . m ): k <= m }
proof
set Z = { ( f . m ): k <= m };
A1: ( dom f1 ) = ( NAT ) by FUNCT_2:def 1;
A2: ( rng f1 ) c= Z
proof
let y;
assume y in ( rng f1 );
then consider m1 being set such that A3: m1 in ( NAT ) and A4: y = ( f1 . m1 ) by A1,FUNCT_1:def 3;
reconsider m1 as (Element of ( NAT )) by A3;
y = ( f . ( k + m1 ) ) by A4,NAT_1:def 3;
hence thesis by CKB2:1;
end;
Z c= ( rng f1 )
proof
let x;
assume x in Z;
then consider k1 being (Element of ( NAT )) such that A5: x = ( f . k1 ) and A6: k <= k1;
consider k2 being Nat such that A7: k1 = ( k + k2 ) by A6,NAT_1:10;
(k2 in ( NAT ) & x = ( f1 . k2 )) by A5,A7,NAT_1:def 3,ORDINAL1:def 12;
hence thesis by FUNCT_2:4;
end;
hence thesis by A2,XBOOLE_0:def 10;
end;
hence thesis;
end;
