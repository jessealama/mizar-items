environ
vocabularies SUBSET_1,NUMBERS,PROB_1,XXREAL_0,ARYTM_3,FUNCT_1,XBOOLE_0,TARSKI,NAT_1,RELAT_1,CARD_1,SETFAM_1,EQREL_1,CARD_3,ZFMISC_1,SEQM_3,ORDINAL2,SEQ_2,PROB_2,RPR_1,SETLIM_1;
notations NUMBERS,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELSET_1,SETFAM_1,PROB_1,FUNCT_2,KURATO_0;
definitions TARSKI,SUBSET_1;
theorems FUNCT_1,FUNCT_2,PROB_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_1,SETFAM_1,ZFMISC_1,CARD_3,KURATO_0,PROB_2,XREAL_1,ORDINAL1,VALUED_0,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7;
schemes NAT_1,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,XREAL_0,FUNCT_2,RELAT_1,PROB_1,PROB_2,RELSET_1;
constructors SETFAM_1,NAT_1,KURATO_0,XREAL_0,RELSET_1,FINSUB_1,PROB_2;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve n for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve x for set;
reserve X for set;
reserve Y for set;
reserve B for (SetSequence of X);
theorem
Th7: (x in ( meet ( rng B ) ) iff (for n holds x in ( B . n )))
proof
A1: ( dom B ) = ( NAT ) by FUNCT_2:def 1;
A2:now
let x;
assume A3: (for n holds x in ( B . n ));
now
let Y;
assume Y in ( rng B );
then consider n being set such that A4: n in ( NAT ) and A5: Y = ( B . n ) by A1,FUNCT_1:def 3;
thus x in Y by A3,A4,A5;
end;
hence x in ( meet ( rng B ) ) by SETFAM_1:def 1;
end;
now
let x;
assume A6: x in ( meet ( rng B ) );
now
let k;
( B . k ) in ( rng B ) by FUNCT_2:4;
hence x in ( B . k ) by A6,SETFAM_1:def 1;
end;
hence (for n holds x in ( B . n ));
end;
hence thesis by A2;
end;
