environ
vocabularies NUMBERS,XBOOLE_0,MSUALG_1,SUBSET_1,FUNCT_1,PBOOLE,MEMBER_1,RELAT_1,STRUCT_0,CARD_3,MARGREL1,PARTFUN1,MOD_4,MSUALG_3,NAT_1,FUNCT_4,RLTOPSP1,TARSKI,REWRITE1,FUNCOP_1,FINSEQ_1,ARYTM_3,FUNCT_7,CARD_1,XXREAL_0,ORDINAL4,MSUALG_4,CIRCUIT2,MCART_1,ZFMISC_1,EQREL_1,RELAT_2,MSUALG_5,MSUALG_6;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,MCART_1,STRUCT_0,RELAT_1,RELAT_2,RELSET_1,EQREL_1,REWRITE1,FUNCT_1,PBOOLE,PARTFUN1,FUNCT_2,FINSEQ_1,CARD_3,FUNCOP_1,MSUALG_1,MSUALG_3,MSUALG_4,MSUALG_5,FUNCT_7,XXREAL_0,CKB1,CKB2,CKB5,CKB9,CKB13,CKB14,CKB18,CKB20,CKB25;
definitions TARSKI,RELAT_1,REWRITE1,FUNCT_1,PBOOLE,MSUALG_3,MSUALG_4,FUNCT_7,FUNCOP_1,CKB5,CKB9,CKB14,CKB18,CKB20,CKB25;
theorems TARSKI,NAT_1,MCART_1,ZFMISC_1,RELAT_1,RELSET_1,EQREL_1,FUNCT_1,FINSEQ_1,FINSEQ_3,FUNCT_2,CARD_3,FUNCT_7,REWRITE1,PBOOLE,PRALG_2,MSUALG_3,MSUALG_4,MSUALG_5,FINSEQ_5,XBOOLE_0,PARTFUN1,RELAT_2,ORDERS_1,XREAL_1,XXREAL_0,ORDINAL1,CKB3,CKB4,CKB5,CKB6,CKB9,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
schemes NAT_1,RECDEF_1,RELSET_1,FUNCT_1,FINSEQ_1,CARD_3,CLASSES1,PBOOLE,PUA2MSS1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCOP_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,PBOOLE,REWRITE1,FUNCT_7,STRUCT_0,MSUALG_1,MSUALG_3,MSUALG_4,MSUALG_5,ORDINAL1,CARD_1,RELSET_1,CKB7,CKB8;
constructors XXREAL_0,NAT_1,NAT_D,REWRITE1,FUNCT_7,MSUALG_3,MSUALG_5,RELSET_1,CKB2,CKB5,CKB9,CKB13,CKB14,CKB18,CKB20,CKB25;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve S for non  empty non  void ManySortedSign;
reserve A for  non-empty MSAlgebra over S;
theorem
Th17: (for s1,s2 being (SortSymbol of S) holds (for f being Function holds (f is_e.translation_of A,s1,s2 implies (( TranslationRel S ) reduces s1,s2 & f is (Translation of A,s1,s2)))))
proof
let s1 being (SortSymbol of S);
let s2 being (SortSymbol of S);
let f being Function;
A1: ( len <* s1,s2 *> ) = ( 1 + 1 ) by FINSEQ_1:44;
A2: ( len <* f *> ) = 1 by FINSEQ_1:40;
assume A3: f is_e.translation_of A,s1,s2;
then reconsider g = f as (Function of ( (the Sorts of A) . s1 ),( (the Sorts of A) . s2 )) by CKB21:1;
A4: ( <* s1,s2 *> . 2 ) = s2 by FINSEQ_1:44;
A5: ( <* s1,s2 *> . 1 ) = s1 by FINSEQ_1:44;
A6:now
let i being (Element of ( NAT ));
let g being Function;
let w1 being (SortSymbol of S);
let w2 being (SortSymbol of S);
assume i in ( dom <* f *> );
then i in { 1 } by FINSEQ_1:2,FINSEQ_1:38;
then i = 1 by TARSKI:def 1;
hence (((g = ( <* f *> . i ) & w1 = ( <* s1,s2 *> . i )) & w2 = ( <* s1,s2 *> . ( i + 1 ) )) implies g is_e.translation_of A,w1,w2) by A3,A5,A4,FINSEQ_1:40;
end;
( dom g ) = ( (the Sorts of A) . s1 ) by FUNCT_2:def 1;
then A7: g = ( compose (<* f *>,( (the Sorts of A) . s1 )) ) by FUNCT_7:46;
A8: [ s1,s2 ] in ( TranslationRel S ) by A3,CKB22:1;
hence A9: ( TranslationRel S ) reduces s1,s2 by REWRITE1:15;
<* s1,s2 *> is (RedSequence of ( TranslationRel S )) by A8,REWRITE1:7;
hence thesis by A7,A9,A1,A2,A5,A4,A6,CKB25:def 1;
end;
