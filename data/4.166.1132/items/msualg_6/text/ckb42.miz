environ
vocabularies NUMBERS,XBOOLE_0,MSUALG_1,SUBSET_1,FUNCT_1,PBOOLE,MEMBER_1,RELAT_1,STRUCT_0,CARD_3,MARGREL1,PARTFUN1,MOD_4,MSUALG_3,NAT_1,FUNCT_4,RLTOPSP1,TARSKI,REWRITE1,FUNCOP_1,FINSEQ_1,ARYTM_3,FUNCT_7,CARD_1,XXREAL_0,ORDINAL4,MSUALG_4,CIRCUIT2,MCART_1,ZFMISC_1,EQREL_1,RELAT_2,MSUALG_5,MSUALG_6;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,MCART_1,STRUCT_0,RELAT_1,RELAT_2,RELSET_1,EQREL_1,REWRITE1,FUNCT_1,PBOOLE,PARTFUN1,FUNCT_2,FINSEQ_1,CARD_3,FUNCOP_1,MSUALG_1,MSUALG_3,MSUALG_4,MSUALG_5,FUNCT_7,XXREAL_0,CKB1,CKB2,CKB5,CKB9,CKB13,CKB14,CKB18,CKB20,CKB25,CKB39,CKB40,CKB41;
definitions TARSKI,RELAT_1,REWRITE1,FUNCT_1,PBOOLE,MSUALG_3,MSUALG_4,FUNCT_7,FUNCOP_1,CKB5,CKB9,CKB14,CKB18,CKB20,CKB25,CKB39,CKB40,CKB41;
theorems TARSKI,NAT_1,MCART_1,ZFMISC_1,RELAT_1,RELSET_1,EQREL_1,FUNCT_1,FINSEQ_1,FINSEQ_3,FUNCT_2,CARD_3,FUNCT_7,REWRITE1,PBOOLE,PRALG_2,MSUALG_3,MSUALG_4,MSUALG_5,FINSEQ_5,XBOOLE_0,PARTFUN1,RELAT_2,ORDERS_1,XREAL_1,XXREAL_0,ORDINAL1,CKB3,CKB4,CKB5,CKB6,CKB9,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41;
schemes NAT_1,RECDEF_1,RELSET_1,FUNCT_1,FINSEQ_1,CARD_3,CLASSES1,PBOOLE,PUA2MSS1,CKB32;
registrations XBOOLE_0,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCOP_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,PBOOLE,REWRITE1,FUNCT_7,STRUCT_0,MSUALG_1,MSUALG_3,MSUALG_4,MSUALG_5,ORDINAL1,CARD_1,RELSET_1,CKB7,CKB8;
constructors XXREAL_0,NAT_1,NAT_D,REWRITE1,FUNCT_7,MSUALG_3,MSUALG_5,RELSET_1,CKB2,CKB5,CKB9,CKB13,CKB14,CKB18,CKB20,CKB25,CKB39,CKB40,CKB41;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve S for non  empty non  void ManySortedSign;
reserve A for  non-empty MSAlgebra over S;
theorem
(for R being  MSEquivalence-like (ManySortedRelation of A) holds (R is  compatible iff R is (MSCongruence of A)))
proof
let R being  MSEquivalence-like (ManySortedRelation of A);
hereby
assume A1: R is  compatible;
now
let o being (OperSymbol of S);
let x being (Element of ( Args (o,A) ));
let y being (Element of ( Args (o,A) ));
assume that
A2: (for n being Nat holds (n in ( dom x ) implies [ ( x . n ),( y . n ) ] in ( R . ( ( the_arity_of o ) /. n ) )));
now
let n being (Element of ( NAT ));
assume n in ( dom ( the_arity_of o ) );
then n in ( dom x ) by MSUALG_3:6;
hence [ ( x . n ),( y . n ) ] in ( R . ( ( the_arity_of o ) /. n ) ) by A2;
end;
hence [ ( ( Den (o,A) ) . x ),( ( Den (o,A) ) . y ) ] in ( R . ( the_result_sort_of o ) ) by A1,CKB39:def 1;
end;
hence R is (MSCongruence of A) by MSUALG_4:def 4;
end;
assume A3: R is (MSCongruence of A);
let o being (OperSymbol of S);
let x being Function;
let y being Function;
assume that
A4: x in ( Args (o,A) )
and
A5: y in ( Args (o,A) )
and
A6: (for n being (Element of ( NAT )) holds (n in ( dom ( the_arity_of o ) ) implies [ ( x . n ),( y . n ) ] in ( R . ( ( the_arity_of o ) /. n ) )));
reconsider x,y as (Element of ( Args (o,A) )) by A4,A5;
now
let n being Nat;
assume n in ( dom x );
then n in ( dom ( the_arity_of o ) ) by MSUALG_3:6;
hence [ ( x . n ),( y . n ) ] in ( R . ( ( the_arity_of o ) /. n ) ) by A6;
end;
hence thesis by A3,MSUALG_4:def 4;
end;
