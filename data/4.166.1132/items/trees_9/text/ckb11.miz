environ
vocabularies XBOOLE_0,TREES_3,SUBSET_1,FINSET_1,TREES_2,TREES_1,CARD_1,ARYTM_3,NAT_1,ORDINAL4,FINSEQ_1,ARYTM_1,RELAT_1,FUNCT_1,TARSKI,ORDINAL1,NUMBERS,XXREAL_0,ZFMISC_1,TREES_4,FUNCT_6,TREES_A,TREES_9,MCART_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCT_6,NAT_1,BINOP_1,FINSET_1,FINSEQ_1,FINSEQ_2,TREES_1,TREES_2,TREES_3,TREES_4,MCART_1,XXREAL_0,CKB1,CKB8,CKB9;
definitions TARSKI,XBOOLE_0,FUNCT_1,TREES_2,TREES_3,TREES_4,BINOP_1,CKB9;
theorems TARSKI,AXIOMS,ZFMISC_1,NAT_1,WELLORD2,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_3,CARD_1,CARD_2,FUNCT_6,TREES_1,TREES_2,TREES_3,TREES_4,RELSET_1,RELAT_1,XBOOLE_0,XBOOLE_1,FINSET_1,XREAL_1,XXREAL_0,ORDINAL1,FINSEQ_2,REALSET1,TREES_A,MCART_1,FINSEQ_6,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB10;
schemes NAT_1,FUNCT_1,FINSEQ_1,CLASSES1,FUNCT_2,TREES_2;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XREAL_0,FINSEQ_1,TREES_1,TREES_2,TREES_3,PRE_CIRC,CARD_1,ZFMISC_1,REALSET1,BINOP_1,SUBSET_1,RELSET_1,NAT_1,TREES_A,CKB2;
constructors WELLORD2,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,TREES_4,RELSET_1,BINOP_1,FINSEQ_4,CKB1;
requirements NUMERALS,BOOLE,SUBSET,ARITHM,REAL;
begin
theorem
Th5: (for t being Tree holds (for p being (Element of t) holds (( t | p ) = ( elementary_tree ( 0 ) ) iff p in ( Leaves t ))))
proof
let t being Tree;
let p being (Element of t);
A1: (not <* ( 0 ) *> in ( elementary_tree ( 0 ) )) by TARSKI:def 1,TREES_1:29;
hereby
assume ( t | p ) = ( elementary_tree ( 0 ) );
then (not ( p ^ <* ( 0 ) *> ) in t) by A1,TREES_1:def 6;
hence p in ( Leaves t ) by TREES_1:54;
end;
assume A2: p in ( Leaves t );
let q being (FinSequence of ( NAT ));
hereby
assume q in ( t | p );
then ( p ^ q ) in t by TREES_1:def 6;
then A3: (not p is_a_proper_prefix_of ( p ^ q )) by A2,TREES_1:def 5;
p is_a_prefix_of ( p ^ q ) by TREES_1:1;
then ( p ^ q ) = p by A3,XBOOLE_0:def 8
.= ( p ^ ( {} ) ) by FINSEQ_1:34;
then q = ( {} ) by FINSEQ_1:33;
hence q in ( elementary_tree ( 0 ) ) by TREES_1:22;
end;
assume q in ( elementary_tree ( 0 ) );
then q = ( {} ) by TARSKI:def 1,TREES_1:29;
hence thesis by TREES_1:22;
end;
