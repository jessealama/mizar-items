environ
vocabularies XBOOLE_0,TREES_3,SUBSET_1,FINSET_1,TREES_2,TREES_1,CARD_1,ARYTM_3,NAT_1,ORDINAL4,FINSEQ_1,ARYTM_1,RELAT_1,FUNCT_1,TARSKI,ORDINAL1,NUMBERS,XXREAL_0,ZFMISC_1,TREES_4,FUNCT_6,TREES_A,TREES_9,MCART_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCT_6,NAT_1,BINOP_1,FINSET_1,FINSEQ_1,FINSEQ_2,TREES_1,TREES_2,TREES_3,TREES_4,MCART_1,XXREAL_0,CKB1;
definitions TARSKI,XBOOLE_0,FUNCT_1,TREES_2,TREES_3,TREES_4,BINOP_1;
theorems TARSKI,AXIOMS,ZFMISC_1,NAT_1,WELLORD2,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_3,CARD_1,CARD_2,FUNCT_6,TREES_1,TREES_2,TREES_3,TREES_4,RELSET_1,RELAT_1,XBOOLE_0,XBOOLE_1,FINSET_1,XREAL_1,XXREAL_0,ORDINAL1,FINSEQ_2,REALSET1,TREES_A,MCART_1,FINSEQ_6;
schemes NAT_1,FUNCT_1,FINSEQ_1,CLASSES1,FUNCT_2,TREES_2;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XREAL_0,FINSEQ_1,TREES_1,TREES_2,TREES_3,PRE_CIRC,CARD_1,ZFMISC_1,REALSET1,BINOP_1,SUBSET_1,RELSET_1,NAT_1,TREES_A;
constructors WELLORD2,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,TREES_4,RELSET_1,BINOP_1,FINSEQ_4,CKB1;
requirements NUMERALS,BOOLE,SUBSET,ARITHM,REAL;
begin
registration
cluster  finite ->  finite-order for Tree;
coherence
proof
let t being Tree;
assume t is  finite;
then reconsider s = t as  finite Tree;
take n = ( ( card s ) + 1 );
let x being (Element of t);
deffunc U(Nat) = ( x ^ <* ( $1 - 1 ) *> );
consider f being FinSequence such that A1: (( len f ) = n & (for i being Nat holds (i in ( dom f ) implies ( f . i ) = U(i)))) from FINSEQ_1:sch 2;
A2: ( dom f ) = ( Seg n ) by A1,FINSEQ_1:def 3;
assume A3: ( x ^ <* n *> ) in t;
A4: ( rng f ) c= ( succ x )
proof
let y being set;
assume y in ( rng f );
then consider i being set such that A5: i in ( dom f ) and A6: y = ( f . i ) by FUNCT_1:def 3;
reconsider i as (Element of ( NAT )) by A5;
i >= 1 by A2,A5,FINSEQ_1:1;
then consider j being Nat such that A7: i = ( 1 + j ) by NAT_1:10;
reconsider j as (Element of ( NAT )) by ORDINAL1:def 12;
A8: j <= i by A7,NAT_1:11;
i <= n by A2,A5,FINSEQ_1:1;
then j <= n by A8,XXREAL_0:2;
then A9: ( x ^ <* j *> ) in t by A3,TREES_1:def 3;
( i - 1 ) = j by A7;
then y = ( x ^ <* j *> ) by A1,A5,A6;
hence thesis by A9;
end;
A10: ( card ( succ x ) ) c= ( card t ) by CARD_1:11;
f is  one-to-one
proof
let z being set;
let y being set;
assume that
A11: (z in ( dom f ) & y in ( dom f ))
and
A12: ( f . z ) = ( f . y );
reconsider i1 = z,i2 = y as (Element of ( NAT )) by A11;
(( f . z ) = ( x ^ <* ( i1 - 1 ) *> ) & ( f . y ) = ( x ^ <* ( i2 - 1 ) *> )) by A1,A11;
then <* ( i1 - 1 ) *> = <* ( i2 - 1 ) *> by A12,FINSEQ_1:33;
then ( i1 - 1 ) = ( <* ( i2 - 1 ) *> . 1 ) by FINSEQ_1:40
.= ( i2 - 1 ) by FINSEQ_1:40;
hence thesis;
end;
then ( card ( dom f ) ) c= ( card ( succ x ) ) by A4,CARD_1:10;
then A13: ( card ( dom f ) ) c= ( card t ) by A10,XBOOLE_1:1;
A14: ( card s ) <= n by NAT_1:11;
( card ( Seg n ) ) = n by FINSEQ_1:57;
then n <= ( card s ) by A2,A13,NAT_1:39;
then n = ( ( card s ) + ( 0 ) ) by A14,XXREAL_0:1;
hence contradiction;
end;
end;
