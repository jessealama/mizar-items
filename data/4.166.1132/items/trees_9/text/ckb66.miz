environ
vocabularies XBOOLE_0,TREES_3,SUBSET_1,FINSET_1,TREES_2,TREES_1,CARD_1,ARYTM_3,NAT_1,ORDINAL4,FINSEQ_1,ARYTM_1,RELAT_1,FUNCT_1,TARSKI,ORDINAL1,NUMBERS,XXREAL_0,ZFMISC_1,TREES_4,FUNCT_6,TREES_A,TREES_9,MCART_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCT_6,NAT_1,BINOP_1,FINSET_1,FINSEQ_1,FINSEQ_2,TREES_1,TREES_2,TREES_3,TREES_4,MCART_1,XXREAL_0,CKB1,CKB8,CKB9,CKB16,CKB18,CKB19,CKB27,CKB28,CKB33,CKB35,CKB36,CKB42,CKB47,CKB50,CKB51,CKB53,CKB54,CKB61;
definitions TARSKI,XBOOLE_0,FUNCT_1,TREES_2,TREES_3,TREES_4,BINOP_1,CKB9,CKB16,CKB18,CKB19,CKB27,CKB28,CKB33,CKB42,CKB47,CKB50,CKB51,CKB61;
theorems TARSKI,AXIOMS,ZFMISC_1,NAT_1,WELLORD2,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_3,CARD_1,CARD_2,FUNCT_6,TREES_1,TREES_2,TREES_3,TREES_4,RELSET_1,RELAT_1,XBOOLE_0,XBOOLE_1,FINSET_1,XREAL_1,XXREAL_0,ORDINAL1,FINSEQ_2,REALSET1,TREES_A,MCART_1,FINSEQ_6,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB10,CKB11,CKB12,CKB16,CKB18,CKB19,CKB26,CKB27,CKB28,CKB29,CKB31,CKB33,CKB38,CKB39,CKB40,CKB41,CKB42,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB55,CKB56,CKB57,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
schemes NAT_1,FUNCT_1,FINSEQ_1,CLASSES1,FUNCT_2,TREES_2,CKB25;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XREAL_0,FINSEQ_1,TREES_1,TREES_2,TREES_3,PRE_CIRC,CARD_1,ZFMISC_1,REALSET1,BINOP_1,SUBSET_1,RELSET_1,NAT_1,TREES_A,CKB2,CKB13,CKB14,CKB15,CKB17,CKB20,CKB21,CKB22,CKB23,CKB24,CKB30,CKB32,CKB34,CKB37,CKB43,CKB52,CKB58;
constructors WELLORD2,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,TREES_4,RELSET_1,BINOP_1,FINSEQ_4,CKB1,CKB16,CKB18,CKB19,CKB27,CKB28,CKB33,CKB35,CKB36,CKB42,CKB47,CKB50,CKB51,CKB53,CKB54,CKB61;
requirements NUMERALS,BOOLE,SUBSET,ARITHM,REAL;
begin
Lm4:now
let p being FinSequence;
let x being set;
assume x in ( rng p );
then consider y being set such that A1: y in ( dom p ) and A2: x = ( p . y ) by FUNCT_1:def 3;
(ex k being (Element of ( NAT )) st (y = ( k + 1 ) & k < ( len p ))) by A1,CKB3:1;
hence (ex k being (Element of ( NAT )) st (k < ( len p ) & x = ( p . ( k + 1 ) ))) by A2;
end;
reserve x for set;
reserve t for DecoratedTree;
reserve C for set;
reserve X for non  empty  constituted-DTrees set;
definition
let X being non  empty  constituted-DTrees set;
let C being set;
assume that
A1: (for t being (Element of X) holds t is  finite);
func C -ImmediateSubtrees X -> (Function of ( C -Subtrees X ),( ( Subtrees X ) * )) means 
(for d being DecoratedTree holds (d in ( C -Subtrees X ) implies (for p being (FinSequence of ( Subtrees X )) holds (p = ( it . d ) implies d = ( ( d . ( {} ) ) -tree p )))));
existence
proof
defpred X[ set,set ]
 means
(ex d being DecoratedTree st (ex p being (FinSequence of ( Subtrees X )) st ((p = $2 & d = $1) & d = ( ( d . ( {} ) ) -tree p ))));
A2: (for x holds (x in ( C -Subtrees X ) implies (ex y being set st (y in ( ( Subtrees X ) * ) & X[ x,y ]))))
proof
let x being set;
assume x in ( C -Subtrees X );
then reconsider s = x as (Element of ( Subtrees X ));
reconsider d = s as DecoratedTree;
consider t being (Element of X),sp being (Node of t) such that A3: s = ( t | sp ) by CKB55:1;
t is  finite by A1;
then consider z being set,p being  DTree-yielding FinSequence such that A4: s = ( z -tree p ) by A3,CKB29:1;
( rng p ) c= ( Subtrees X )
proof
let x being set;
A5: ( dom ( t | sp ) ) = ( ( dom t ) | sp ) by TREES_2:def 10;
assume x in ( rng p );
then consider k being (Element of ( NAT )) such that A6: (k < ( len p ) & x = ( p . ( k + 1 ) )) by Lm4;
reconsider e = ( {} ) as (Node of ( s | <* k *> )) by TREES_1:22;
A7: x = ( s | <* k *> ) by A4,A6,TREES_4:def 4;
( <* k *> ^ e ) = <* k *> by FINSEQ_1:34;
then <* k *> in ( dom s ) by A4,A6,A7,TREES_4:11;
then reconsider q = ( sp ^ <* k *> ) as (Node of t) by A3,A5,TREES_1:def 6;
x = ( t | q ) by A3,A7,CKB7:1;
hence thesis;
end;
then reconsider p as (FinSequence of ( Subtrees X )) by FINSEQ_1:def 4;
reconsider y = p as set;
take y;
thus y in ( ( Subtrees X ) * ) by FINSEQ_1:def 11;
take d;
take p;
thus thesis by A4,TREES_4:def 4;
end;
consider f being Function such that A8: ((( dom f ) = ( C -Subtrees X ) & ( rng f ) c= ( ( Subtrees X ) * )) & (for x being set holds (x in ( C -Subtrees X ) implies X[ x,( f . x ) ]))) from FUNCT_1:sch 5(A2);
reconsider f as (Function of ( C -Subtrees X ),( ( Subtrees X ) * )) by A8,FUNCT_2:def 1,RELSET_1:4;
take f;
let d being DecoratedTree;
assume d in ( C -Subtrees X );
then (ex d9 being DecoratedTree st (ex p being (FinSequence of ( Subtrees X )) st ((p = ( f . d ) & d9 = d) & d9 = ( ( d9 . ( {} ) ) -tree p )))) by A8;
hence thesis;
end;
uniqueness
proof
let f1 being (Function of ( C -Subtrees X ),( ( Subtrees X ) * ));
let f2 being (Function of ( C -Subtrees X ),( ( Subtrees X ) * ));
assume that
A9: ((for d being DecoratedTree holds (d in ( C -Subtrees X ) implies (for p being (FinSequence of ( Subtrees X )) holds (p = ( f1 . d ) implies d = ( ( d . ( {} ) ) -tree p ))))) & (for d being DecoratedTree holds (d in ( C -Subtrees X ) implies (for p being (FinSequence of ( Subtrees X )) holds (p = ( f2 . d ) implies d = ( ( d . ( {} ) ) -tree p ))))));
now
let x being set;
assume A10: x in ( C -Subtrees X );
then reconsider s = x as (Element of ( Subtrees X ));
reconsider p1 = ( f1 . s ),p2 = ( f2 . s ) as (Element of ( ( Subtrees X ) * )) by A10,FUNCT_2:5;
(s = ( ( s . ( {} ) ) -tree p1 ) & s = ( ( s . ( {} ) ) -tree p2 )) by A9,A10;
hence ( f1 . x ) = ( f2 . x ) by TREES_4:15;
end;
hence f1 = f2 by FUNCT_2:12;
end;
end;
