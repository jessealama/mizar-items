environ
vocabularies XBOOLE_0,TREES_3,SUBSET_1,FINSET_1,TREES_2,TREES_1,CARD_1,ARYTM_3,NAT_1,ORDINAL4,FINSEQ_1,ARYTM_1,RELAT_1,FUNCT_1,TARSKI,ORDINAL1,NUMBERS,XXREAL_0,ZFMISC_1,TREES_4,FUNCT_6,TREES_A,TREES_9,MCART_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCT_6,NAT_1,BINOP_1,FINSET_1,FINSEQ_1,FINSEQ_2,TREES_1,TREES_2,TREES_3,TREES_4,MCART_1,XXREAL_0,CKB1,CKB8,CKB9,CKB16,CKB18,CKB19,CKB27,CKB28,CKB33,CKB35,CKB36,CKB42,CKB47,CKB50,CKB51,CKB53,CKB54,CKB61,CKB66;
definitions TARSKI,XBOOLE_0,FUNCT_1,TREES_2,TREES_3,TREES_4,BINOP_1,CKB9,CKB16,CKB18,CKB19,CKB27,CKB28,CKB33,CKB42,CKB47,CKB50,CKB51,CKB61,CKB66;
theorems TARSKI,AXIOMS,ZFMISC_1,NAT_1,WELLORD2,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_3,CARD_1,CARD_2,FUNCT_6,TREES_1,TREES_2,TREES_3,TREES_4,RELSET_1,RELAT_1,XBOOLE_0,XBOOLE_1,FINSET_1,XREAL_1,XXREAL_0,ORDINAL1,FINSEQ_2,REALSET1,TREES_A,MCART_1,FINSEQ_6,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB10,CKB11,CKB12,CKB16,CKB18,CKB19,CKB26,CKB27,CKB28,CKB29,CKB31,CKB33,CKB38,CKB39,CKB40,CKB41,CKB42,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB55,CKB56,CKB57,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB84,CKB85,CKB86,CKB87;
schemes NAT_1,FUNCT_1,FINSEQ_1,CLASSES1,FUNCT_2,TREES_2,CKB25,CKB83;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XREAL_0,FINSEQ_1,TREES_1,TREES_2,TREES_3,PRE_CIRC,CARD_1,ZFMISC_1,REALSET1,BINOP_1,SUBSET_1,RELSET_1,NAT_1,TREES_A,CKB2,CKB13,CKB14,CKB15,CKB17,CKB20,CKB21,CKB22,CKB23,CKB24,CKB30,CKB32,CKB34,CKB37,CKB43,CKB52,CKB58,CKB67;
constructors WELLORD2,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,TREES_4,RELSET_1,BINOP_1,FINSEQ_4,CKB1,CKB16,CKB18,CKB19,CKB27,CKB28,CKB33,CKB35,CKB36,CKB42,CKB47,CKB50,CKB51,CKB53,CKB54,CKB61,CKB66;
requirements NUMERALS,BOOLE,SUBSET,ARITHM,REAL;
begin
reserve C for set;
reserve Y for non  empty  constituted-DTrees set;
reserve p for (FinSequence of ( NAT ));
reserve T for  finite-branching DecoratedTree;
reserve t for (Element of ( dom T ));
reserve n for (Element of ( NAT ));
reserve l for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve x for set;
reserve y for set;
theorem
Th48: (for T being  finite-branching Tree holds (T is  finite iff (ex n being (Element of ( NAT )) st ( T -level n ) = ( {} ))))
proof
let T being  finite-branching Tree;
deffunc F((Element of ( NAT ))) = ( T -level $1 );
now
assume A1: T is  finite;
now
assume A2: (not (ex n being (Element of ( NAT )) st ( T -level n ) = ( {} )));
A3: (for n holds (ex C being  finite (Chain of T) st ( card C ) = n))
proof
let n;
( T -level n ) <> ( {} ) by A2;
then consider t being set such that A4: t in ( T -level n ) by XBOOLE_0:def 1;
consider w being (Element of T) such that t = w and A5: ( len w ) = n by A4;
( ProperPrefixes w ) is  finite  finite (Chain of T) by CKB84:1;
then consider C being  finite (Chain of T) such that A6: C = ( ProperPrefixes w );
( card C ) = n by A5,A6,TREES_1:35;
hence thesis;
end;
(for t being (Element of T) holds ( succ t ) is  finite);
then (ex C being (Chain of T) st (not C is  finite)) by A3,TREES_2:29;
hence contradiction by A1;
end;
hence (ex n being (Element of ( NAT )) st ( T -level n ) = ( {} ));
end;
hence (T is  finite implies (ex n being (Element of ( NAT )) st ( T -level n ) = ( {} )));
given n such that
A7: ( T -level n ) = ( {} );

set X = { F(m) where m is (Element of ( NAT )): m <= n };
A8: T c= ( union X )
proof
let x;
assume x in T;
then reconsider t = x as (Element of T);
consider m such that A9: m = ( len t );
A10: t in F(m) by A9;
( len t ) < n
proof
consider q being FinSequence such that A11: q = ( t | ( Seg n ) ) and A12: q is_a_prefix_of t by CKB72:1;
assume n <= ( len t );
then A13: ( len q ) = n by A11,FINSEQ_1:17;
reconsider q as (Element of T) by A12,TREES_1:20;
q in ( T -level n ) by A13;
hence contradiction by A7;
end;
then F(m) in X by A9;
hence thesis by A10,TARSKI:def 4;
end;
A14: X is  finite
proof
defpred P[ set,set ]
 means
(ex l st (ex m st ((m = ( l + 1 ) & $1 = m) & F(l) = $2)));
A15: (for k being Nat holds (k in ( Seg ( n + 1 ) ) implies (ex x st P[ k,x ])))
proof
let k being Nat;
assume k in ( Seg ( n + 1 ) );
then ( 0 ) <> k by FINSEQ_1:1;
then consider l being Nat such that A16: k = ( l + 1 ) by NAT_1:6;
reconsider l as (Element of ( NAT )) by ORDINAL1:def 12;
consider x such that A17: x = F(l);
take x;
take l;
take ( l + 1 );
thus thesis by A16,A17;
end;
consider p being FinSequence such that A18: (( dom p ) = ( Seg ( n + 1 ) ) & (for k being Nat holds (k in ( Seg ( n + 1 ) ) implies P[ k,( p . k ) ]))) from FINSEQ_1:sch 1(A15);
A19: (for k holds (( k + 1 ) in ( Seg ( n + 1 ) ) implies ( p . ( k + 1 ) ) = F(k)))
proof
let k;
assume ( k + 1 ) in ( Seg ( n + 1 ) );
then (ex l st (ex m st ((m = ( l + 1 ) & ( k + 1 ) = m) & F(l) = ( p . ( k + 1 ) )))) by A18;
hence thesis;
end;
X c= ( rng p )
proof
let y;
assume y in X;
then consider m such that A20: y = F(m) and A21: m <= n;
( 0 ) <= m by NAT_1:2;
then A22: ( ( 0 ) + 1 ) <= ( m + 1 ) by XREAL_1:6;
( m + 1 ) <= ( n + 1 ) by A21,XREAL_1:6;
then A23: ( m + 1 ) in ( Seg ( n + 1 ) ) by A22,FINSEQ_1:1;
then ( p . ( m + 1 ) ) = F(m) by A19;
hence thesis by A18,A20,A23,FUNCT_1:def 3;
end;
hence thesis;
end;
(for Y being set holds (Y in X implies Y is  finite))
proof
let Y being set;
assume Y in X;
then (ex m st (Y = F(m) & m <= n));
hence thesis by CKB87:1;
end;
then ( union X ) is  finite by A14,FINSET_1:7;
hence thesis by A8;
end;
