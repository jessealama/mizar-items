environ
vocabularies XBOOLE_0,TREES_3,SUBSET_1,FINSET_1,TREES_2,TREES_1,CARD_1,ARYTM_3,NAT_1,ORDINAL4,FINSEQ_1,ARYTM_1,RELAT_1,FUNCT_1,TARSKI,ORDINAL1,NUMBERS,XXREAL_0,ZFMISC_1,TREES_4,FUNCT_6,TREES_A,TREES_9,MCART_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCT_6,NAT_1,BINOP_1,FINSET_1,FINSEQ_1,FINSEQ_2,TREES_1,TREES_2,TREES_3,TREES_4,MCART_1,XXREAL_0,CKB1,CKB8,CKB9;
definitions TARSKI,XBOOLE_0,FUNCT_1,TREES_2,TREES_3,TREES_4,BINOP_1,CKB9;
theorems TARSKI,AXIOMS,ZFMISC_1,NAT_1,WELLORD2,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_3,CARD_1,CARD_2,FUNCT_6,TREES_1,TREES_2,TREES_3,TREES_4,RELSET_1,RELAT_1,XBOOLE_0,XBOOLE_1,FINSET_1,XREAL_1,XXREAL_0,ORDINAL1,FINSEQ_2,REALSET1,TREES_A,MCART_1,FINSEQ_6,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9;
schemes NAT_1,FUNCT_1,FINSEQ_1,CLASSES1,FUNCT_2,TREES_2;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XREAL_0,FINSEQ_1,TREES_1,TREES_2,TREES_3,PRE_CIRC,CARD_1,ZFMISC_1,REALSET1,BINOP_1,SUBSET_1,RELSET_1,NAT_1,TREES_A,CKB2;
constructors WELLORD2,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,TREES_4,RELSET_1,BINOP_1,FINSEQ_4,CKB1;
requirements NUMERALS,BOOLE,SUBSET,ARITHM,REAL;
begin
theorem
Th4: (for t being DecoratedTree holds (t is  root iff ( {} ) in ( Leaves ( dom t ) )))
proof
let t being DecoratedTree;
reconsider e = ( {} ) as (Node of t) by TREES_1:22;
hereby
assume t is  root;
then ( dom t ) = ( elementary_tree ( 0 ) ) by CKB9:def 1;
then (not ( e ^ <* ( 0 ) *> ) in ( dom t )) by TARSKI:def 1,TREES_1:29;
hence ( {} ) in ( Leaves ( dom t ) ) by TREES_1:54;
end;
assume A1: ( {} ) in ( Leaves ( dom t ) );
let p being (FinSequence of ( NAT ));
hereby
assume that
A2: p in ( dom t )
and
A3: (not p in ( elementary_tree ( 0 ) ));
p <> ( {} ) by A3,TARSKI:def 1,TREES_1:29;
then consider q being (FinSequence of ( NAT )),n being (Element of ( NAT )) such that A4: p = ( <* n *> ^ q ) by FINSEQ_2:130;
A5: ( e ^ <* n *> ) = <* n *> by FINSEQ_1:34;
<* n *> in ( dom t ) by A2,A4,TREES_1:21;
hence contradiction by A1,A5,TREES_1:55;
end;
assume p in ( elementary_tree ( 0 ) );
then p = ( {} ) by TARSKI:def 1,TREES_1:29;
hence thesis by TREES_1:22;
end;
