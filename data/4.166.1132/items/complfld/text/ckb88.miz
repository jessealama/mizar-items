environ
vocabularies STRUCT_0,ALGSTR_0,NUMBERS,BINOP_2,MESFUNC1,COMPLEX1,SUPINF_2,XBOOLE_0,XCMPLX_0,SUBSET_1,ORDINAL1,ARYTM_3,FUNCT_1,RELAT_1,VECTSP_1,GROUP_1,RLVECT_1,BINOP_1,LATTICES,ARYTM_1,CARD_1,XXREAL_0,NAT_1,NEWTON,COMPTRIG,COMPLFLD;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,COMPLEX1,NAT_1,FUNCT_1,XXREAL_0,COMPTRIG,BINOP_1,BINOP_2,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,NEWTON,VECTSP_1,CKB1,CKB19,CKB86;
definitions RLVECT_1,GROUP_1,VECTSP_1,BINOP_1,COMPTRIG,STRUCT_0,COMPLEX1,ALGSTR_0,CKB1,CKB86;
theorems STRUCT_0,COMPLEX1,RLVECT_1,VECTSP_1,XREAL_0,XCMPLX_0,XCMPLX_1,BINOP_2,GROUP_1,COMPTRIG,NEWTON,ORDINAL1,NAT_1,XREAL_1,CKB1,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB85,CKB86,CKB87;
schemes NAT_1,CKB84;
registrations ORDINAL1,RELSET_1,NUMBERS,XCMPLX_0,NAT_1,COMPLEX1,STRUCT_0,VECTSP_1,XREAL_0,XBOOLE_0,CKB2,CKB3,CKB6,CKB9,CKB4,CKB5;
constructors BINOP_1,XXREAL_0,REAL_1,NAT_1,BINOP_2,NEWTON,COMPTRIG,VECTSP_1,RLVECT_1,CKB1,CKB19,CKB86;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
(for n being non  empty (Element of ( NAT )) holds (for v being (CRoot of n,( 0. ( F_Complex ) )) holds v = ( 0. ( F_Complex ) )))
proof
let n being non  empty (Element of ( NAT ));
let v being (CRoot of n,( 0. ( F_Complex ) ));
defpred P[ (Element of ( NAT )) ]
 means
( ( power ( F_Complex ) ) . (v,$1) ) = ( 0. ( F_Complex ) );
A1:now
let k being non  empty (Element of ( NAT ));
assume that
A2: k <> 1
and
A3: P[ k ];
consider t being Nat such that A4: k = ( t + 1 ) by NAT_1:6;
reconsider t as (Element of ( NAT )) by ORDINAL1:def 12;
reconsider t as non  empty (Element of ( NAT )) by A2,A4;
take t;
thus t < k by A4,NAT_1:13;
( ( power ( F_Complex ) ) . (v,k) ) = ( ( ( power ( F_Complex ) ) . (v,t) ) * v ) by A4,GROUP_1:def 7;
then (( ( power ( F_Complex ) ) . (v,t) ) = ( 0. ( F_Complex ) ) or v = ( 0. ( F_Complex ) )) by A3,VECTSP_1:12;
hence P[ t ] by NAT_1:3,VECTSP_1:36;
end;
A5: (ex n being non  empty (Element of ( NAT )) st P[ n ])
proof
take n;
thus thesis by CKB86:def 1;
end;
P[ 1 ] from CKB84:sch 1(A5,A1);
hence thesis by GROUP_1:50;
end;
