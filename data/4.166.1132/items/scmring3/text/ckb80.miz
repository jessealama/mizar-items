environ
vocabularies NUMBERS,SCMFSA7B,FUNCSDOM,SUBSET_1,AMI_3,AMI_1,FSM_1,ORDINAL1,INT_3,FINSET_1,STRUCT_0,AMI_2,TARSKI,ZFMISC_1,RELAT_1,FUNCOP_1,XBOOLE_0,CAT_1,FUNCT_1,CARD_1,GRAPHSP,FINSEQ_1,AMISTD_2,CARD_3,AMISTD_1,CIRCUIT2,FUNCT_4,SETFAM_1,SUPINF_2,ARYTM_3,XXREAL_0,GOBOARD5,ARYTM_1,GROUP_1,PBOOLE,FRECHET,UNIALG_1,CARD_5,PARTFUN1,RECDEF_2,SCMNORM,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,FINSET_1,ENUMSET1,ZFMISC_1,MCART_1,SETFAM_1,RELAT_1,FUNCT_1,XXREAL_0,RECDEF_2,VALUED_1,PBOOLE,STRUCT_0,ALGSTR_0,FUNCSDOM,ORDINAL1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,FUNCOP_1,FINSEQ_1,PARTFUN1,FUNCT_4,CARD_3,FUNCT_7,GROUP_1,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,AMI_3,SCMRING1,SCMRING2,INT_3,NAT_D,AMISTD_1,AMISTD_2,FUNCT_2,CKB4,CKB57;
definitions TARSKI,FUNCT_1,FUNCT_7,SCMRING1,SCMRING2,AMISTD_1,AMISTD_2,XBOOLE_0,FUNCOP_1,STRUCT_0,COMPOS_1,EXTPRO_1,AMI_2,CARD_3,NAT_1,MEMSTR_0,MCART_1,ZFMISC_1,CKB57;
theorems TARSKI,NAT_1,SCMRING2,AMI_3,FUNCT_4,FUNCT_1,ZFMISC_1,FUNCOP_1,SCMRING1,SETFAM_1,AMI_2,AMISTD_1,MCART_1,INT_1,INT_3,STRUCT_0,RLVECT_1,VECTSP_1,LMOD_6,FINSEQ_1,AMISTD_2,CARD_3,ORDINAL1,XBOOLE_0,XBOOLE_1,RELAT_1,ENUMSET1,NUMBERS,PARTFUN1,PBOOLE,RECDEF_2,VALUED_1,COMPOS_1,EXTPRO_1,FUNCT_7,MEMSTR_0,CKB3,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB47,CKB48,CKB50,CKB51,CKB52,CKB54,CKB55,CKB57;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,XREAL_0,INT_1,FINSEQ_1,CARD_3,STRUCT_0,VECTSP_1,INT_3,FINSET_1,AMI_3,SCMRING1,SCMRING2,AMISTD_2,NUMBERS,RELSET_1,ZFMISC_1,CARD_2,FUNCT_2,FUNCT_4,ALGSTR_0,ALGSTR_1,GCD_1,VALUED_1,VALUED_0,COMPOS_1,EXTPRO_1,XCMPLX_0,REAL_1,NAT_1,PBOOLE,FUNCT_7,PRE_POLY,MEMSTR_0,CARD_1,CKB1,CKB2,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB49,CKB53,CKB56,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79;
constructors XXREAL_0,NAT_1,FINSEQ_4,VECTSP_2,REALSET2,INT_3,AMI_3,SCMRING2,AMISTD_2,BINOP_2,RELSET_1,RECDEF_2,VALUED_1,GCD_1,NAT_D,XCMPLX_0,REAL_1,AMISTD_1,PBOOLE,FUNCT_7,PRE_POLY,MEMSTR_0,CKB4,CKB57;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve R for  good Ring;
reserve a for (Data-Location of R);
reserve i1 for (Element of ( NAT ));
reserve T for (InsType of ( SCM R ));
reserve S for non  trivial  good Ring;
reserve p for (Data-Location of S);
registration
let R;
cluster ( SCM R ) ->  J/A-independent;
coherence
proof
let T being (InsType of ( SCM R ));
let f1 being Function;
let f2 being Function;
let p being set;
assume that
A1: f1 in ( JumpParts T )
and
A2: f2 in ( product ( product" ( JumpParts T ) ) )
and
A3: [ T,f1,p ] in (the Instructions of ( SCM R ));
per cases  by CKB24:1;
suppose (((((T = ( 0 ) or T = 1) or T = 2) or T = 3) or T = 4) or T = 5);

then A4: ( JumpParts T ) = { ( 0 ) } by CKB25:1,CKB26:1,CKB27:1,CKB28:1,CKB29:1,CKB30:1;
then A5: ( product ( product" ( JumpParts T ) ) ) = { ( 0 ) } by CARD_3:10,CARD_3:106;
f1 = ( 0 ) by A4,A1,TARSKI:def 1
.= f2 by A2,A5,TARSKI:def 1;
hence [ T,f2,p ] in (the Instructions of ( SCM R )) by A3;
end;
suppose A6: T = 6;

reconsider J = [ T,f1,p ] as (Instruction of ( SCM R )) by A3;
A7: ( InsCode J ) = 6 by A6,RECDEF_2:def 1;
then consider i1 being (Element of ( NAT )) such that A8: J = ( goto (i1,R) ) by CKB21:1;
A9: p = ( {} ) by A8,MCART_1:25;
A10: ( dom f2 ) = ( dom ( product" ( JumpParts T ) ) ) by A2,CARD_3:9;
A12: ( dom f2 ) = { 1 } by A6,A10,CKB31:1;
then 1 in ( dom f2 ) by TARSKI:def 1;
then ( f2 . 1 ) in ( ( product" ( JumpParts T ) ) . 1 ) by A10,A2,CARD_3:9;
then reconsider l = ( f2 . 1 ) as (Element of ( NAT )) by A8,A6,A7,CKB33:1;
set I = [ T,f2,( {} ) ];
I = ( goto (l,R) ) by A6,A12,FINSEQ_1:2,FINSEQ_1:def 8;
then reconsider I as (Instruction of ( SCM R ));
f2 = ( JumpPart I ) by RECDEF_2:def 2;
hence [ T,f2,p ] in (the Instructions of ( SCM R )) by A9;
end;
suppose A13: T = 7;

reconsider J = [ T,f1,p ] as (Instruction of ( SCM R )) by A3;
A14: ( InsCode J ) = T by RECDEF_2:def 1;
then consider a,i1 such that A15: J = ( a =0_goto i1 ) by CKB22:1,A13;
A16: p = <* a *> by A15,MCART_1:25;
A17: ( dom f2 ) = ( dom ( product" ( JumpParts T ) ) ) by A2,CARD_3:9;
A19: ( dom f2 ) = { 1 } by A13,A17,CKB32:1;
then 1 in ( dom f2 ) by TARSKI:def 1;
then ( f2 . 1 ) in ( ( product" ( JumpParts T ) ) . 1 ) by A17,A2,CARD_3:9;
then reconsider l = ( f2 . 1 ) as (Element of ( NAT )) by A15,A14,CKB34:1;
set I = [ T,f2,p ];
I = ( a =0_goto l ) by A16,A13,A19,FINSEQ_1:2,FINSEQ_1:def 8;
then reconsider I as (Instruction of ( SCM R ));
A20: f2 = ( JumpPart I ) by RECDEF_2:def 2;
thus [ T,f2,p ] in (the Instructions of ( SCM R )) by A20;
end;
end;
end;
