environ
vocabularies NUMBERS,SCMFSA7B,FUNCSDOM,SUBSET_1,AMI_3,AMI_1,FSM_1,ORDINAL1,INT_3,FINSET_1,STRUCT_0,AMI_2,TARSKI,ZFMISC_1,RELAT_1,FUNCOP_1,XBOOLE_0,CAT_1,FUNCT_1,CARD_1,GRAPHSP,FINSEQ_1,AMISTD_2,CARD_3,AMISTD_1,CIRCUIT2,FUNCT_4,SETFAM_1,SUPINF_2,ARYTM_3,XXREAL_0,GOBOARD5,ARYTM_1,GROUP_1,PBOOLE,FRECHET,UNIALG_1,CARD_5,PARTFUN1,RECDEF_2,SCMNORM,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,FINSET_1,ENUMSET1,ZFMISC_1,MCART_1,SETFAM_1,RELAT_1,FUNCT_1,XXREAL_0,RECDEF_2,VALUED_1,PBOOLE,STRUCT_0,ALGSTR_0,FUNCSDOM,ORDINAL1,CARD_1,NUMBERS,XCMPLX_0,NAT_1,FUNCOP_1,FINSEQ_1,PARTFUN1,FUNCT_4,CARD_3,FUNCT_7,GROUP_1,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,AMI_3,SCMRING1,SCMRING2,INT_3,NAT_D,AMISTD_1,AMISTD_2,FUNCT_2,CKB4;
definitions TARSKI,FUNCT_1,FUNCT_7,SCMRING1,SCMRING2,AMISTD_1,AMISTD_2,XBOOLE_0,FUNCOP_1,STRUCT_0,COMPOS_1,EXTPRO_1,AMI_2,CARD_3,NAT_1,MEMSTR_0,MCART_1,ZFMISC_1;
theorems TARSKI,NAT_1,SCMRING2,AMI_3,FUNCT_4,FUNCT_1,ZFMISC_1,FUNCOP_1,SCMRING1,SETFAM_1,AMI_2,AMISTD_1,MCART_1,INT_1,INT_3,STRUCT_0,RLVECT_1,VECTSP_1,LMOD_6,FINSEQ_1,AMISTD_2,CARD_3,ORDINAL1,XBOOLE_0,XBOOLE_1,RELAT_1,ENUMSET1,NUMBERS,PARTFUN1,PBOOLE,RECDEF_2,VALUED_1,COMPOS_1,EXTPRO_1,FUNCT_7,MEMSTR_0,CKB3,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,XREAL_0,INT_1,FINSEQ_1,CARD_3,STRUCT_0,VECTSP_1,INT_3,FINSET_1,AMI_3,SCMRING1,SCMRING2,AMISTD_2,NUMBERS,RELSET_1,ZFMISC_1,CARD_2,FUNCT_2,FUNCT_4,ALGSTR_0,ALGSTR_1,GCD_1,VALUED_1,VALUED_0,COMPOS_1,EXTPRO_1,XCMPLX_0,REAL_1,NAT_1,PBOOLE,FUNCT_7,PRE_POLY,MEMSTR_0,CARD_1,CKB1,CKB2;
constructors XXREAL_0,NAT_1,FINSEQ_4,VECTSP_2,REALSET2,INT_3,AMI_3,SCMRING2,AMISTD_2,BINOP_2,RELSET_1,RECDEF_2,VALUED_1,GCD_1,NAT_D,XCMPLX_0,REAL_1,AMISTD_1,PBOOLE,FUNCT_7,PRE_POLY,MEMSTR_0,CKB4;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve R for  good Ring;
reserve a for (Data-Location of R);
reserve b for (Data-Location of R);
reserve i1 for (Element of ( NAT ));
reserve i2 for (Element of ( NAT ));
theorem
Th51: ( ( product" ( JumpParts ( InsCode ( a =0_goto i1 ) ) ) ) . 1 ) = ( NAT )
proof
( dom ( product" ( JumpParts ( InsCode ( a =0_goto i1 ) ) ) ) ) = { 1 } by CKB14:1,CKB32:1;
then A1: 1 in ( dom ( product" ( JumpParts ( InsCode ( a =0_goto i1 ) ) ) ) ) by TARSKI:def 1;
A2: ( InsCode ( a =0_goto i1 ) ) = 7 by RECDEF_2:def 1;
hereby
let x being set;
assume x in ( ( product" ( JumpParts ( InsCode ( a =0_goto i1 ) ) ) ) . 1 );
then x in ( pi (( JumpParts ( InsCode ( a =0_goto i1 ) ) ),1) ) by A1,CARD_3:76;
then consider g being Function such that A3: g in ( JumpParts ( InsCode ( a =0_goto i1 ) ) ) and A4: x = ( g . 1 ) by CARD_3:def 6;
consider I being (Instruction of ( SCM R )) such that A5: g = ( JumpPart I ) and A6: ( InsCode I ) = ( InsCode ( a =0_goto i1 ) ) by A3;
consider b,i2 such that A7: I = ( b =0_goto i2 ) by A2,A6,CKB22:1;
g = <* i2 *> by A5,A7,RECDEF_2:def 2;
then x = i2 by A4,FINSEQ_1:40;
hence x in ( NAT );
end;
let x being set;
assume x in ( NAT );
then reconsider x as (Element of ( NAT ));
(( JumpPart ( a =0_goto x ) ) = <* x *> & ( InsCode ( a =0_goto i1 ) ) = ( InsCode ( a =0_goto x ) )) by A2,RECDEF_2:def 1,RECDEF_2:def 2;
then A8: <* x *> in ( JumpParts ( InsCode ( a =0_goto i1 ) ) );
( <* x *> . 1 ) = x by FINSEQ_1:40;
then x in ( pi (( JumpParts ( InsCode ( a =0_goto i1 ) ) ),1) ) by A8,CARD_3:def 6;
hence thesis by A1,CARD_3:76;
end;
