environ
vocabularies FUNCT_1,SUBSET_1,NUMBERS,NAT_1,RELAT_1,TARSKI,XCMPLX_0,ORDINAL1,VALUED_0,FUNCOP_1,COMPLEX1,CARD_1,XBOOLE_0,ARYTM_3,VALUED_1,ARYTM_1,COMSEQ_1;
notations TARSKI,SUBSET_1,XCMPLX_0,NUMBERS,COMPLEX1,RELAT_1,FUNCT_1,NAT_1,ORDINAL1,RELSET_1,FUNCOP_1,VALUED_0,VALUED_1,CKB1,CKB5;
definitions VALUED_1,RELAT_1,COMPLEX1;
theorems COMPLEX1,FUNCT_1,FUNCT_2,TARSKI,SEQ_1,RELSET_1,XCMPLX_1,XCMPLX_0,FUNCOP_1,VALUED_1,ZFMISC_1,RELAT_1,CKB2,CKB3,CKB7,CKB8,CKB9;
schemes CLASSES1,CKB4;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCT_2,NUMBERS,MEMBERED,VALUED_0,VALUED_1,XCMPLX_0,CKB6;
constructors PARTFUN1,FUNCOP_1,REAL_1,COMPLEX1,SEQ_1,VALUED_1,RELSET_1;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve f for Function;
reserve r for (Element of ( COMPLEX ));
reserve x for set;
reserve seq for Complex_Sequence;
theorem
(for r holds (ex seq st ( rng seq ) = { r }))
proof
let r;
consider f such that A1: ( dom f ) = ( NAT ) and A2: ( rng f ) = { r } by FUNCT_1:5;
now
let x;
assume x in { r };
then x = r by TARSKI:def 1;
hence x in ( COMPLEX );
end;
then ( rng f ) c= ( COMPLEX ) by A2,TARSKI:def 3;
then reconsider f as Complex_Sequence by A1,FUNCT_2:def 1,RELSET_1:4;
take f;
thus thesis by A2;
end;
