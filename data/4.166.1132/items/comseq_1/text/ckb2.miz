environ
vocabularies FUNCT_1,SUBSET_1,NUMBERS,NAT_1,RELAT_1,TARSKI,XCMPLX_0,ORDINAL1,VALUED_0,FUNCOP_1,COMPLEX1,CARD_1,XBOOLE_0,ARYTM_3,VALUED_1,ARYTM_1,COMSEQ_1;
notations TARSKI,SUBSET_1,XCMPLX_0,NUMBERS,COMPLEX1,RELAT_1,FUNCT_1,NAT_1,ORDINAL1,RELSET_1,FUNCOP_1,VALUED_0,VALUED_1,CKB1;
definitions VALUED_1,RELAT_1,COMPLEX1;
theorems COMPLEX1,FUNCT_1,FUNCT_2,TARSKI,SEQ_1,RELSET_1,XCMPLX_1,XCMPLX_0,FUNCOP_1,VALUED_1,ZFMISC_1,RELAT_1;
schemes CLASSES1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCT_2,NUMBERS,MEMBERED,VALUED_0,VALUED_1,XCMPLX_0;
constructors PARTFUN1,FUNCOP_1,REAL_1,COMPLEX1,SEQ_1,VALUED_1,RELSET_1;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve f for Function;
reserve x for set;
reserve y for set;
theorem
Th1: (f is Complex_Sequence iff (( dom f ) = ( NAT ) & (for x holds (x in ( NAT ) implies ( f . x ) is (Element of ( COMPLEX ))))))
proof
thus (f is Complex_Sequence implies (( dom f ) = ( NAT ) & (for x holds (x in ( NAT ) implies ( f . x ) is (Element of ( COMPLEX ))))))
proof
assume A1: f is Complex_Sequence;
hence A2: ( dom f ) = ( NAT ) by FUNCT_2:def 1;
let x;
assume x in ( NAT );
then A3: ( f . x ) in ( rng f ) by A2,FUNCT_1:def 3;
( rng f ) c= ( COMPLEX ) by A1,RELAT_1:def 19;
hence thesis by A3;
end;

assume that
A4: ( dom f ) = ( NAT )
and
A5: (for x holds (x in ( NAT ) implies ( f . x ) is (Element of ( COMPLEX ))));
now
let y;
assume y in ( rng f );
then consider x such that A6: x in ( dom f ) and A7: y = ( f . x ) by FUNCT_1:def 3;
( f . x ) is (Element of ( COMPLEX )) by A4,A5,A6;
hence y in ( COMPLEX ) by A7;
end;
then ( rng f ) c= ( COMPLEX ) by TARSKI:def 3;
hence thesis by A4,FUNCT_2:def 1,RELSET_1:4;
end;
