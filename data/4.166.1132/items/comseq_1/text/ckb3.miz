environ
vocabularies FUNCT_1,SUBSET_1,NUMBERS,NAT_1,RELAT_1,TARSKI,XCMPLX_0,ORDINAL1,VALUED_0,FUNCOP_1,COMPLEX1,CARD_1,XBOOLE_0,ARYTM_3,VALUED_1,ARYTM_1,COMSEQ_1;
notations TARSKI,SUBSET_1,XCMPLX_0,NUMBERS,COMPLEX1,RELAT_1,FUNCT_1,NAT_1,ORDINAL1,RELSET_1,FUNCOP_1,VALUED_0,VALUED_1,CKB1;
definitions VALUED_1,RELAT_1,COMPLEX1;
theorems COMPLEX1,FUNCT_1,FUNCT_2,TARSKI,SEQ_1,RELSET_1,XCMPLX_1,XCMPLX_0,FUNCOP_1,VALUED_1,ZFMISC_1,RELAT_1,CKB2;
schemes CLASSES1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCT_2,NUMBERS,MEMBERED,VALUED_0,VALUED_1,XCMPLX_0;
constructors PARTFUN1,FUNCOP_1,REAL_1,COMPLEX1,SEQ_1,VALUED_1,RELSET_1;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve f for Function;
reserve n for (Element of ( NAT ));
reserve x for set;
theorem
Th2: (f is Complex_Sequence iff (( dom f ) = ( NAT ) & (for n holds ( f . n ) is (Element of ( COMPLEX )))))
proof
thus (f is Complex_Sequence implies (( dom f ) = ( NAT ) & (for n holds ( f . n ) is (Element of ( COMPLEX ))))) by CKB2:1;
assume that
A1: ( dom f ) = ( NAT )
and
A2: (for n holds ( f . n ) is (Element of ( COMPLEX )));
(for x holds (x in ( NAT ) implies ( f . x ) is (Element of ( COMPLEX )))) by A2;
hence thesis by A1,CKB2:1;
end;
