environ
vocabularies FUNCT_1,SUBSET_1,NUMBERS,NAT_1,RELAT_1,TARSKI,XCMPLX_0,ORDINAL1,VALUED_0,FUNCOP_1,COMPLEX1,CARD_1,XBOOLE_0,ARYTM_3,VALUED_1,ARYTM_1,COMSEQ_1;
notations TARSKI,SUBSET_1,XCMPLX_0,NUMBERS,COMPLEX1,RELAT_1,FUNCT_1,NAT_1,ORDINAL1,RELSET_1,FUNCOP_1,VALUED_0,VALUED_1,CKB1,CKB5;
definitions VALUED_1,RELAT_1,COMPLEX1;
theorems COMPLEX1,FUNCT_1,FUNCT_2,TARSKI,SEQ_1,RELSET_1,XCMPLX_1,XCMPLX_0,FUNCOP_1,VALUED_1,ZFMISC_1,RELAT_1,CKB2,CKB3,CKB7,CKB8,CKB9,CKB10;
schemes CLASSES1,CKB4;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCT_2,NUMBERS,MEMBERED,VALUED_0,VALUED_1,XCMPLX_0,CKB6;
constructors PARTFUN1,FUNCOP_1,REAL_1,COMPLEX1,SEQ_1,VALUED_1,RELSET_1;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve seq1 for Complex_Sequence;
reserve seq2 for Complex_Sequence;
reserve seq3 for Complex_Sequence;
theorem
Th9: ( ( seq1 + seq2 ) + seq3 ) = ( seq1 + ( seq2 + seq3 ) )
proof
now
let n;
thus ( ( ( seq1 + seq2 ) + seq3 ) . n ) = ( ( (( seq1 + seq2 ) qua Complex_Sequence) . n ) + ( seq3 . n ) ) by VALUED_1:1
.= ( ( ( seq1 . n ) + ( seq2 . n ) ) + ( seq3 . n ) ) by VALUED_1:1
.= ( ( seq1 . n ) + ( ( seq2 . n ) + ( seq3 . n ) ) )
.= ( ( seq1 . n ) + ( ( seq2 + seq3 ) . n ) ) by VALUED_1:1
.= ( ( seq1 + ( seq2 + seq3 ) ) . n ) by VALUED_1:1;
end;
hence thesis by FUNCT_2:63;
end;
