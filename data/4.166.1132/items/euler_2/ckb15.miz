environ
vocabularies NUMBERS,NAT_1,INT_1,FINSEQ_1,ARYTM_3,XXREAL_0,CARD_1,SUBSET_1,ARYTM_1,INT_2,COMPLEX1,RELAT_1,TARSKI,FUNCT_1,CLASSES1,CARD_3,ORDINAL4,RFINSEQ,XBOOLE_0,NEWTON,EULER_1,FINSET_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,CARD_1,RELAT_1,FUNCT_1,RECDEF_1,INT_1,INT_2,FINSET_1,NAT_1,NAT_D,NEWTON,EULER_1,CLASSES1,RFINSEQ,RVSUM_1,FINSEQ_1,FINSEQ_3,TREES_4,WSIERP_1,CKB14;
definitions TARSKI,FUNCT_1,XBOOLE_0,RELAT_1;
theorems INT_2,FINSEQ_1,NAT_1,ABSVALUE,INT_1,FUNCT_1,EULER_1,PREPOWER,RFINSEQ,FINSEQ_2,RVSUM_1,FINSEQ_3,NEWTON,RELAT_1,XBOOLE_1,XCMPLX_1,XREAL_1,FINSEQ_5,XXREAL_0,ORDINAL1,NAT_D,CLASSES1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
schemes NAT_1,FINSEQ_1;
registrations FUNCT_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,SEQM_3,NEWTON,XBOOLE_0,VALUED_0,FINSET_1,CARD_1;
constructors REAL_1,SQUARE_1,NAT_1,NAT_D,NEWTON,RFINSEQ,WSIERP_1,EULER_1,SEQ_1,RECDEF_1,CLASSES1,BINOP_2,RELSET_1,CKB14;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for Nat;
theorem
Th25: (for R1,R2 being (FinSequence of ( NAT )) holds (R1,R2 are_fiberwise_equipotent  implies ( Product R1 ) = ( Product R2 )))
proof
let R1 being (FinSequence of ( NAT )),R2 being (FinSequence of ( NAT ));
defpred P[ Nat ]
 means
(for f,g being (FinSequence of ( NAT )) holds ((f,g are_fiberwise_equipotent  & ( len f ) = $1) implies ( Product f ) = ( Product g )));
A1: (for n holds (P[ n ] implies P[ ( n + 1 ) ]))
proof
let n;
assume A2: P[ n ];
let f being (FinSequence of ( NAT )),g being (FinSequence of ( NAT ));
assume that
A3: f,g are_fiberwise_equipotent 
and
A4: ( len f ) = ( n + 1 );
reconsider a = ( f . ( n + 1 ) ) as (Element of ( NAT ));
A5: ( rng f ) = ( rng g ) by A3,CLASSES1:75;
set fn = ( f | n );
A6: f = ( fn ^ <* a *> ) by A4,RFINSEQ:7;
( ( 0 ) + 1 ) <= ( n + 1 ) by NAT_1:13;
then ( n + 1 ) in ( dom f ) by A4,FINSEQ_3:25;
then a in ( rng g ) by A5,FUNCT_1:def 3;
then consider m being Nat such that A7: m in ( dom g ) and A8: ( g . m ) = a by FINSEQ_2:10;
reconsider m as (Element of ( NAT )) by ORDINAL1:def 12;
set gg = ( g /^ m );
set gm = ( g | m );
m <= ( len g ) by A7,FINSEQ_3:25;
then A9: ( len gm ) = m by FINSEQ_1:59;
A10: 1 <= m by A7,FINSEQ_3:25;
then ( max (( 0 ),( m - 1 )) ) = ( m - 1 ) by FINSEQ_2:4;
then reconsider m1 = ( m - 1 ) as (Element of ( NAT )) by FINSEQ_2:5;
A11: m = ( m1 + 1 );
then m1 <= m by NAT_1:11;
then A12: ( Seg m1 ) c= ( Seg m ) by FINSEQ_1:5;
m in ( Seg m ) by A10,FINSEQ_1:1;
then ( gm . m ) = a by A7,A8,RFINSEQ:6;
then A13: gm = ( ( gm | m1 ) ^ <* a *> ) by A9,A11,RFINSEQ:7;
A14: g = ( ( g | m ) ^ ( g /^ m ) ) by RFINSEQ:8;
A15: ( gm | m1 ) = ( gm | ( Seg m1 ) ) by FINSEQ_1:def 15
.= ( ( g | ( Seg m ) ) | ( Seg m1 ) ) by FINSEQ_1:def 15
.= ( g | ( ( Seg m ) /\ ( Seg m1 ) ) ) by RELAT_1:71
.= ( g | ( Seg m1 ) ) by A12,XBOOLE_1:28
.= ( g | m1 ) by FINSEQ_1:def 15;
now
let x being set;
( card ( Coim (f,x) ) ) = ( card ( Coim (g,x) ) ) by A3,CLASSES1:def 9;
then ( ( card ( fn " { x } ) ) + ( card ( <* a *> " { x } ) ) ) = ( card ( ( ( ( g | m1 ) ^ <* a *> ) ^ ( g /^ m ) ) " { x } ) ) by A14,A13,A15,A6,FINSEQ_3:57
.= ( ( card ( ( ( g | m1 ) ^ <* a *> ) " { x } ) ) + ( card ( ( g /^ m ) " { x } ) ) ) by FINSEQ_3:57
.= ( ( ( card ( ( g | m1 ) " { x } ) ) + ( card ( <* a *> " { x } ) ) ) + ( card ( ( g /^ m ) " { x } ) ) ) by FINSEQ_3:57
.= ( ( ( card ( ( g | m1 ) " { x } ) ) + ( card ( ( g /^ m ) " { x } ) ) ) + ( card ( <* a *> " { x } ) ) )
.= ( ( card ( ( ( g | m1 ) ^ ( g /^ m ) ) " { x } ) ) + ( card ( <* a *> " { x } ) ) ) by FINSEQ_3:57;
hence ( card ( Coim (fn,x) ) ) = ( card ( Coim (( ( g | m1 ) ^ ( g /^ m ) ),x) ) );
end;
then A16: fn,( ( g | m1 ) ^ ( g /^ m ) ) are_fiberwise_equipotent  by CLASSES1:def 9;
( len fn ) = n by A4,FINSEQ_1:59,NAT_1:11;
then ( Product fn ) = ( Product ( ( g | m1 ) ^ gg ) ) by A2,A16;
hence ( Product f ) = ( ( Product ( ( g | m1 ) ^ gg ) ) * ( Product <* a *> ) ) by A6,RVSUM_1:97
.= ( ( ( Product ( g | m1 ) ) * ( Product gg ) ) * ( Product <* a *> ) ) by RVSUM_1:97
.= ( ( ( Product ( g | m1 ) ) * ( Product <* a *> ) ) * ( Product gg ) )
.= ( ( Product gm ) * ( Product gg ) ) by A13,A15,RVSUM_1:97
.= ( Product g ) by A14,RVSUM_1:97;
end;
assume A17: R1,R2 are_fiberwise_equipotent ;
A18: ( len R1 ) = ( len R1 );
A19: P[ ( 0 ) ]
proof
let f being (FinSequence of ( NAT )),g being (FinSequence of ( NAT ));
assume (f,g are_fiberwise_equipotent  & ( len f ) = ( 0 ));
then A20: (( len g ) = ( 0 ) & f = ( <*> ( NAT ) )) by RFINSEQ:3;
then g = ( <*> ( NAT ) );
hence thesis by A20;
end;
(for n holds P[ n ]) from NAT_1:sch 2(A19,A1);
hence thesis by A17,A18;
end;
