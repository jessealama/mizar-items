environ
vocabularies XBOOLE_0,BCIALG_1,BINOP_1,SUBSET_1,XXREAL_0,SUPINF_2,XXREAL_2,CARD_FIL,BCIALG_3;
notations XBOOLE_0,SUBSET_1,STRUCT_0,BCIALG_1,CKB1,CKB15,CKB16,CKB17,CKB18,CKB31,CKB34,CKB38,CKB39,CKB41,CKB45,CKB46;
definitions BCIALG_1,CKB1,CKB15,CKB16,CKB17,CKB18,CKB31,CKB34,CKB38,CKB39,CKB41,CKB45,CKB46;
theorems BCIALG_1,STRUCT_0,CKB1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58;
registrations STRUCT_0,BCIALG_1,CKB2,CKB3,CKB19,CKB20,CKB32,CKB33,CKB40,CKB47,CKB48;
constructors BCIALG_1,CKB1,CKB15,CKB16,CKB17,CKB18,CKB31,CKB34,CKB38,CKB39,CKB41,CKB45,CKB46;
requirements SUBSET;
begin
theorem
Th37: (for X being  bounded BCK-algebra holds (for a being (Element of X) holds (a is  being_greatest implies (X is  BCK-implicative iff (X is  involutory & X is  BCK-positive-implicative)))))
proof
let X being  bounded BCK-algebra;
let a being (Element of X);
assume A1: a is  being_greatest;
thus (X is  BCK-implicative implies (X is  involutory & X is  BCK-positive-implicative))
proof
assume A2: X is  BCK-implicative;
then (for a being (Element of X) holds (a is  being_greatest implies (for x being (Element of X) holds ( a \ ( a \ x ) ) = x))) by CKB58:1;
hence thesis by A2,CKB34:def 1,CKB55:1;
end;

assume that
A3: X is  involutory
and
A4: X is  BCK-positive-implicative;
(for x,y being (Element of X) holds ( x \ ( y \ x ) ) = x)
proof
let x being (Element of X),y being (Element of X);
( y \ a ) = ( 0. X ) by A1,CKB15:def 1;
then y <= a by BCIALG_1:def 11;
then A5: ( y \ x ) <= ( a \ x ) by BCIALG_1:5;
( x \ ( a \ x ) ) = ( ( a \ ( a \ x ) ) \ ( a \ x ) ) by A1,A3,CKB34:def 1
.= ( a \ ( a \ x ) ) by A4,CKB49:1
.= x by A1,A3,CKB34:def 1;
then x <= ( x \ ( y \ x ) ) by A5,BCIALG_1:5;
then A6: ( x \ ( x \ ( y \ x ) ) ) = ( 0. X ) by BCIALG_1:def 11;
( ( x \ ( y \ x ) ) \ x ) = ( ( x \ x ) \ ( y \ x ) ) by BCIALG_1:7
.= ( ( y \ x ) ` ) by BCIALG_1:def 5
.= ( 0. X ) by BCIALG_1:def 8;
hence thesis by A6,BCIALG_1:def 7;
end;
hence thesis by CKB46:def 1;
end;
