environ
vocabularies NUMBERS,FUNCT_1,CARD_1,RELAT_1,TARSKI,FUNCT_4,FUNCOP_1,XBOOLE_0,SUBSET_1,XXREAL_0,ARYTM_3,FINSET_1,XREAL_0,ORDINAL1,ARYTM_1,NAT_1,ZFMISC_1,FINSEQ_1,UPROOTS,VALUED_0,RELAT_2,BAGORDER,PRE_POLY,WELLORD1,GLIB_000,GLIB_001,ORDINAL4,PBOOLE,PARTFUN1,MCART_1,FUNCT_2,FINSUB_1,CHORD,TOPGEN_1,RCOMP_1,FINSEQ_4,GRAPH_1,MEMBERED,ABIAN,LEXBFS;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,CARD_1,NUMBERS,SUBSET_1,XXREAL_0,VALUED_0,XREAL_0,RELAT_1,RELAT_2,WELLORD1,MEMBERED,XXREAL_2,PARTFUN1,FUNCT_1,FUNCT_2,PBOOLE,ORDINAL1,FINSET_1,XCMPLX_0,NAT_1,NAT_D,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,BAGORDER,TERMORD,UPROOTS,CHORD,FINSEQ_1,DOMAIN_1,ABIAN,RELSET_1,RECDEF_1,FINSUB_1,RFUNCT_3,PRE_POLY;
definitions GLIB_000,GLIB_001,FUNCOP_1,TARSKI;
theorems AXIOMS,CARD_1,CARD_2,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSET_1,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,INT_1,NAT_1,BAGORDER,TERMORD,ORDINAL1,PARTFUN1,PBOOLE,NAT_D,XREAL_0,RELAT_1,RELSET_1,TARSKI,XBOOLE_0,XBOOLE_1,XREAL_1,ZFMISC_1,ENUMSET1,CHORD,NECKLACE,FINSEQ_4,WELLORD1,UPROOTS,CARD_FIN,TREES_1,NAT_2,XXREAL_0,XXREAL_2,VALUED_0,MCART_1,FINSUB_1,SYSREL,GRFUNC_1,PRE_POLY,CKB1,CKB2,CKB3;
schemes NAT_1,FUNCT_1,RECDEF_1,FRAENKEL,PBOOLE,FUNCT_2,CLASSES1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,XXREAL_2,NAT_1,INT_1,MEMBERED,FINSEQ_1,CARD_1,UPROOTS,FUNCT_2,GLIB_000,ABIAN,BAGORDER,TERMORD,CARD_FIN,GLIB_001,CHORD,VALUED_0,FINSUB_1,PARTFUN1,RELSET_1,PRE_POLY;
constructors DOMAIN_1,FUNCT_4,XXREAL_2,BAGORDER,TERMORD,UPROOTS,CHORD,RECDEF_1,RFUNCT_3,WELLORD2,RELSET_1,PBOOLE;
requirements NUMERALS,SUBSET,BOOLE,REAL,ARITHM;
begin
theorem
(for A,B being (Element of ( NAT )) holds (for X being non empty set holds (for F being (Function of ( NAT ),X) holds (F is  one-to-one implies ( card { ( F . w ) where w is (Element of ( NAT )): (A <= w & w <= ( A + B )) } ) = ( B + 1 )))))
proof
let A being (Element of ( NAT )),B being (Element of ( NAT ));
let X being non empty set;
let F being (Function of ( NAT ),X);
assume that
A1: F is  one-to-one;
defpred P[ (Element of ( NAT )) ]
 means
( card { ( F . w ) where w is (Element of ( NAT )): (A <= w & w <= ( A + $1 )) } ) = ( $1 + 1 );
A2: ( dom F ) = ( NAT ) by FUNCT_2:def 1;
A3: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being (Element of ( NAT ));
assume that
A4: P[ k ];
set Fwk = { ( F . w ) where w is (Element of ( NAT )): (A <= w & w <= ( A + k )) };
reconsider Fwk as  finite set by A4;
set Fwk1 = { ( F . w ) where w is (Element of ( NAT )): (A <= w & w <= ( ( A + k ) + 1 )) };
A5:now
let x being set;
hereby
assume x in Fwk1;
then consider w being (Element of ( NAT )) such that A6: x = ( F . w ) and A7: A <= w and A8: w <= ( ( A + k ) + 1 );
A9: (w = ( ( A + k ) + 1 ) or w < ( ( A + k ) + 1 )) by A8,XXREAL_0:1;
per cases  by A9,NAT_1:13;
suppose w = ( ( A + k ) + 1 );

then x in { ( F . ( ( A + k ) + 1 ) ) } by A6,TARSKI:def 1;
hence x in ( Fwk \/ { ( F . ( ( A + k ) + 1 ) ) } ) by XBOOLE_0:def 3;
end;
suppose w <= ( A + k );

then x in Fwk by A6,A7;
hence x in ( Fwk \/ { ( F . ( ( A + k ) + 1 ) ) } ) by XBOOLE_0:def 3;
end;
end;
assume A10: x in ( Fwk \/ { ( F . ( ( A + k ) + 1 ) ) } );
per cases  by A10,XBOOLE_0:def 3;
suppose x in Fwk;

then consider w being (Element of ( NAT )) such that A11: x = ( F . w ) and A12: A <= w and A13: w <= ( A + k );
w <= ( ( A + k ) + 1 ) by A13,NAT_1:13;
hence x in Fwk1 by A11,A12;
end;
suppose A14: x in { ( F . ( ( A + k ) + 1 ) ) };

A15: A <= ( A + ( k + 1 ) ) by NAT_1:11;
x = ( F . ( ( A + k ) + 1 ) ) by A14,TARSKI:def 1;
hence x in Fwk1 by A15;
end;
end;
now
assume ( F . ( ( A + k ) + 1 ) ) in Fwk;
then consider w being (Element of ( NAT )) such that A16: ( F . ( ( A + k ) + 1 ) ) = ( F . w ) and A <= w and A17: w <= ( A + k );
( ( A + k ) + 1 ) = w by A1,A2,A16,FUNCT_1:def 4;
hence contradiction by A17,NAT_1:13;
end;
then ( card ( Fwk \/ { ( F . ( ( A + k ) + 1 ) ) } ) ) = ( ( k + 1 ) + 1 ) by A4,CARD_2:41;
hence thesis by A5,TARSKI:1;
end;
now
let x being set;
hereby
assume x in { ( F . w ) where w is (Element of ( NAT )): (A <= w & w <= ( A + ( 0 ) )) };
then consider w being (Element of ( NAT )) such that A18: ( F . w ) = x and A19: A <= w and A20: w <= ( A + ( 0 ) );
w = A by A19,A20,XXREAL_0:1;
hence x in { ( F . A ) } by A18,TARSKI:def 1;
end;
assume x in { ( F . A ) };
then x = ( F . A ) by TARSKI:def 1;
hence x in { ( F . w ) where w is (Element of ( NAT )): (A <= w & w <= ( A + ( 0 ) )) };
end;
then { ( F . w ) where w is (Element of ( NAT )): (A <= w & w <= ( A + ( 0 ) )) } = { ( F . A ) } by TARSKI:1;
then A21: P[ ( 0 ) ] by CARD_1:30;
(for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A21,A3);
hence thesis;
end;
