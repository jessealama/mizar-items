environ
vocabularies NUMBERS,FUNCT_1,CARD_1,RELAT_1,TARSKI,FUNCT_4,FUNCOP_1,XBOOLE_0,SUBSET_1,XXREAL_0,ARYTM_3,FINSET_1,XREAL_0,ORDINAL1,ARYTM_1,NAT_1,ZFMISC_1,FINSEQ_1,UPROOTS,VALUED_0,RELAT_2,BAGORDER,PRE_POLY,WELLORD1,GLIB_000,GLIB_001,ORDINAL4,PBOOLE,PARTFUN1,MCART_1,FUNCT_2,FINSUB_1,CHORD,TOPGEN_1,RCOMP_1,FINSEQ_4,GRAPH_1,MEMBERED,ABIAN,LEXBFS;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,CARD_1,NUMBERS,SUBSET_1,XXREAL_0,VALUED_0,XREAL_0,RELAT_1,RELAT_2,WELLORD1,MEMBERED,XXREAL_2,PARTFUN1,FUNCT_1,FUNCT_2,PBOOLE,ORDINAL1,FINSET_1,XCMPLX_0,NAT_1,NAT_D,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,BAGORDER,TERMORD,UPROOTS,CHORD,FINSEQ_1,DOMAIN_1,ABIAN,RELSET_1,RECDEF_1,FINSUB_1,RFUNCT_3,PRE_POLY,CKB7,CKB11,CKB15,CKB18,CKB20,CKB21,CKB26,CKB27,CKB35,CKB36,CKB37,CKB40;
definitions GLIB_000,GLIB_001,FUNCOP_1,TARSKI,CKB7,CKB11,CKB15,CKB20,CKB21,CKB26,CKB27,CKB35,CKB37;
theorems AXIOMS,CARD_1,CARD_2,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSET_1,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,INT_1,NAT_1,BAGORDER,TERMORD,ORDINAL1,PARTFUN1,PBOOLE,NAT_D,XREAL_0,RELAT_1,RELSET_1,TARSKI,XBOOLE_0,XBOOLE_1,XREAL_1,ZFMISC_1,ENUMSET1,CHORD,NECKLACE,FINSEQ_4,WELLORD1,UPROOTS,CARD_FIN,TREES_1,NAT_2,XXREAL_0,XXREAL_2,VALUED_0,MCART_1,FINSUB_1,SYSREL,GRFUNC_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB31,CKB33,CKB34,CKB35,CKB37;
schemes NAT_1,FUNCT_1,RECDEF_1,FRAENKEL,PBOOLE,FUNCT_2,CLASSES1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,XXREAL_2,NAT_1,INT_1,MEMBERED,FINSEQ_1,CARD_1,UPROOTS,FUNCT_2,GLIB_000,ABIAN,BAGORDER,TERMORD,CARD_FIN,GLIB_001,CHORD,VALUED_0,FINSUB_1,PARTFUN1,RELSET_1,PRE_POLY,CKB8,CKB9,CKB10,CKB17,CKB22,CKB28,CKB30,CKB32,CKB38,CKB39;
constructors DOMAIN_1,FUNCT_4,XXREAL_2,BAGORDER,TERMORD,UPROOTS,CHORD,RECDEF_1,RFUNCT_3,WELLORD2,RELSET_1,PBOOLE,CKB7,CKB11,CKB15,CKB18,CKB20,CKB21,CKB26,CKB27,CKB35,CKB36,CKB37;
requirements NUMERALS,SUBSET,BOOLE,REAL,ARITHM;
begin
definition
let G being  finite _Graph;
let S being (VNumberingSeq of G);
let n being Nat;
func S .PickedAt n -> set
means
:Def10: it = ( choose ( the_Vertices_of G ) ) if n >= ( S .Lifespan() ) otherwise ((not it in ( dom ( S . n ) )) & ( S . ( n + 1 ) ) = ( ( S . n ) +* ( it .--> ( ( S .Lifespan() ) -' n ) ) ));
existence
proof
per cases ;
suppose n >= ( S .Lifespan() );

hence thesis;
end;
suppose n < ( S .Lifespan() );

then (ex w being (Vertex of G) st ((not w in ( dom ( S . n ) )) & ( S . ( n + 1 ) ) = ( ( S . n ) +* ( w .--> ( ( S .Lifespan() ) -' n ) ) ))) by CKB37:def 1;
hence thesis;
end;
end;
uniqueness
proof
set VL1 = ( S . ( n + 1 ) );
set VLN = ( S . n );
let IT1 being set,IT2 being set;
thus (((n >= ( S .Lifespan() ) & IT1 = ( choose ( the_Vertices_of G ) )) & IT2 = ( choose ( the_Vertices_of G ) )) implies IT1 = IT2);
assume n < ( S .Lifespan() );
assume that
A1: (not IT1 in ( dom VLN ))
and
A2: VL1 = ( VLN +* ( IT1 .--> ( ( S .Lifespan() ) -' n ) ) );
set f2 = ( IT2 .--> ( ( S .Lifespan() ) -' n ) );
set f1 = ( IT1 .--> ( ( S .Lifespan() ) -' n ) );
assume that
(not IT2 in ( dom VLN ))
and
A3: VL1 = ( VLN +* ( IT2 .--> ( ( S .Lifespan() ) -' n ) ) );
( dom f2 ) = { IT2 } by FUNCOP_1:13;
then A4: ( dom VL1 ) = ( ( dom VLN ) \/ { IT2 } ) by A3,FUNCT_4:def 1;
( dom f1 ) = { IT1 } by FUNCOP_1:13;
then A5: ( dom VL1 ) = ( ( dom VLN ) \/ { IT1 } ) by A2,FUNCT_4:def 1;
now
assume IT1 <> IT2;
then (not IT1 in { IT2 }) by TARSKI:def 1;
then A6: (not IT1 in ( dom VL1 )) by A1,A4,XBOOLE_0:def 3;
IT1 in { IT1 } by TARSKI:def 1;
hence contradiction by A5,A6,XBOOLE_0:def 3;
end;
hence thesis;
end;
consistency;
end;
