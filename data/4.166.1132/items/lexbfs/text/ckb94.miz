environ
vocabularies NUMBERS,FUNCT_1,CARD_1,RELAT_1,TARSKI,FUNCT_4,FUNCOP_1,XBOOLE_0,SUBSET_1,XXREAL_0,ARYTM_3,FINSET_1,XREAL_0,ORDINAL1,ARYTM_1,NAT_1,ZFMISC_1,FINSEQ_1,UPROOTS,VALUED_0,RELAT_2,BAGORDER,PRE_POLY,WELLORD1,GLIB_000,GLIB_001,ORDINAL4,PBOOLE,PARTFUN1,MCART_1,FUNCT_2,FINSUB_1,CHORD,TOPGEN_1,RCOMP_1,FINSEQ_4,GRAPH_1,MEMBERED,ABIAN,LEXBFS;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,CARD_1,NUMBERS,SUBSET_1,XXREAL_0,VALUED_0,XREAL_0,RELAT_1,RELAT_2,WELLORD1,MEMBERED,XXREAL_2,PARTFUN1,FUNCT_1,FUNCT_2,PBOOLE,ORDINAL1,FINSET_1,XCMPLX_0,NAT_1,NAT_D,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,BAGORDER,TERMORD,UPROOTS,CHORD,FINSEQ_1,DOMAIN_1,ABIAN,RELSET_1,RECDEF_1,FINSUB_1,RFUNCT_3,PRE_POLY,CKB7,CKB11,CKB15,CKB18,CKB20,CKB21,CKB26,CKB27,CKB35,CKB36,CKB37,CKB40,CKB41,CKB56,CKB57,CKB58,CKB61,CKB62,CKB63,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB76;
definitions GLIB_000,GLIB_001,FUNCOP_1,TARSKI,CKB7,CKB11,CKB15,CKB20,CKB21,CKB26,CKB27,CKB35,CKB37,CKB41,CKB61,CKB62,CKB63,CKB67,CKB68,CKB71,CKB72;
theorems AXIOMS,CARD_1,CARD_2,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSET_1,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,INT_1,NAT_1,BAGORDER,TERMORD,ORDINAL1,PARTFUN1,PBOOLE,NAT_D,XREAL_0,RELAT_1,RELSET_1,TARSKI,XBOOLE_0,XBOOLE_1,XREAL_1,ZFMISC_1,ENUMSET1,CHORD,NECKLACE,FINSEQ_4,WELLORD1,UPROOTS,CARD_FIN,TREES_1,NAT_2,XXREAL_0,XXREAL_2,VALUED_0,MCART_1,FINSUB_1,SYSREL,GRFUNC_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB31,CKB33,CKB34,CKB35,CKB37,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB71,CKB72,CKB73,CKB75,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB85,CKB86,CKB87,CKB88,CKB90,CKB91,CKB92,CKB93;
schemes NAT_1,FUNCT_1,RECDEF_1,FRAENKEL,PBOOLE,FUNCT_2,CLASSES1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,XXREAL_2,NAT_1,INT_1,MEMBERED,FINSEQ_1,CARD_1,UPROOTS,FUNCT_2,GLIB_000,ABIAN,BAGORDER,TERMORD,CARD_FIN,GLIB_001,CHORD,VALUED_0,FINSUB_1,PARTFUN1,RELSET_1,PRE_POLY,CKB8,CKB9,CKB10,CKB17,CKB22,CKB28,CKB30,CKB32,CKB38,CKB39,CKB59,CKB60,CKB74,CKB84,CKB89;
constructors DOMAIN_1,FUNCT_4,XXREAL_2,BAGORDER,TERMORD,UPROOTS,CHORD,RECDEF_1,RFUNCT_3,WELLORD2,RELSET_1,PBOOLE,CKB7,CKB11,CKB15,CKB18,CKB20,CKB21,CKB26,CKB27,CKB35,CKB36,CKB37,CKB41,CKB56,CKB57,CKB61,CKB62,CKB63,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB76;
requirements NUMERALS,SUBSET,BOOLE,REAL,ARITHM;
begin
theorem
Th44: (for G being  finite _Graph holds (for x being set holds (for i,j being Nat holds (i <= j implies ( ( ( ( LexBFS:CSeq G ) . i ) `2 ) . x ) c= ( ( ( ( LexBFS:CSeq G ) . j ) `2 ) . x )))))
proof
let G being  finite _Graph;
let x being set;
let i being Nat;
let j being Nat;
assume i <= j;
then A1: (ex k being Nat st j = ( i + k )) by NAT_1:10;
set CS = ( LexBFS:CSeq G );
set CSI = ( CS . i );
set V2I = ( CSI `2 );
defpred P[ Nat ]
 means
( V2I . x ) c= ( ( ( CS . ( i + $1 ) ) `2 ) . x );
A2: (for k being Nat holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being Nat;
assume that
A3: P[ k ];
set CK1 = ( CS . ( ( i + k ) + 1 ) );
set CSK = ( CS . ( i + k ) );
set V2K = ( CSK `2 );
set VLK = ( CSK `1 );
set V21 = ( CK1 `2 );
per cases ;
suppose ( ( i + k ) + 1 ) <= ( G .order() );

then ( i + k ) < ( G .order() ) by NAT_1:13;
then consider w being (Vertex of G) such that w = ( LexBFS:PickUnnumbered CSK ) and A4: (for v being set holds (((v in ( G .AdjacentSet { w } ) & (not v in ( dom VLK ))) implies ( V21 . v ) = ( ( V2K . v ) \/ { ( ( G .order() ) -' ( i + k ) ) } )) & (((not v in ( G .AdjacentSet { w } )) or v in ( dom VLK )) implies ( V21 . v ) = ( V2K . v )))) by CKB92:1;
per cases ;
suppose (x in ( G .AdjacentSet { w } ) & (not x in ( dom VLK )));

then ( V21 . x ) = ( ( V2K . x ) \/ { ( ( G .order() ) -' ( i + k ) ) } ) by A4;
then ( V2K . x ) c= ( V21 . x ) by XBOOLE_1:7;
hence thesis by A3,XBOOLE_1:1;
end;
suppose ((not x in ( G .AdjacentSet { w } )) or x in ( dom VLK ));

hence thesis by A3,A4;
end;
end;
suppose A5: ( G .order() ) < ( ( i + k ) + 1 );

A6: ( i + k ) <= ( ( i + k ) + 1 ) by NAT_1:13;
( G .order() ) <= ( i + k ) by A5,NAT_1:13;
hence thesis by A3,A6,CKB82:1;
end;
end;
A7: P[ ( 0 ) ];
(for k being Nat holds P[ k ]) from NAT_1:sch 2(A7,A2);
hence thesis by A1;
end;
