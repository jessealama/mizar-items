environ
vocabularies NUMBERS,FUNCT_1,CARD_1,RELAT_1,TARSKI,FUNCT_4,FUNCOP_1,XBOOLE_0,SUBSET_1,XXREAL_0,ARYTM_3,FINSET_1,XREAL_0,ORDINAL1,ARYTM_1,NAT_1,ZFMISC_1,FINSEQ_1,UPROOTS,VALUED_0,RELAT_2,BAGORDER,PRE_POLY,WELLORD1,GLIB_000,GLIB_001,ORDINAL4,PBOOLE,PARTFUN1,MCART_1,FUNCT_2,FINSUB_1,CHORD,TOPGEN_1,RCOMP_1,FINSEQ_4,GRAPH_1,MEMBERED,ABIAN,LEXBFS;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,CARD_1,NUMBERS,SUBSET_1,XXREAL_0,VALUED_0,XREAL_0,RELAT_1,RELAT_2,WELLORD1,MEMBERED,XXREAL_2,PARTFUN1,FUNCT_1,FUNCT_2,PBOOLE,ORDINAL1,FINSET_1,XCMPLX_0,NAT_1,NAT_D,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,BAGORDER,TERMORD,UPROOTS,CHORD,FINSEQ_1,DOMAIN_1,ABIAN,RELSET_1,RECDEF_1,FINSUB_1,RFUNCT_3,PRE_POLY,CKB7,CKB11;
definitions GLIB_000,GLIB_001,FUNCOP_1,TARSKI,CKB7,CKB11;
theorems AXIOMS,CARD_1,CARD_2,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSET_1,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,INT_1,NAT_1,BAGORDER,TERMORD,ORDINAL1,PARTFUN1,PBOOLE,NAT_D,XREAL_0,RELAT_1,RELSET_1,TARSKI,XBOOLE_0,XBOOLE_1,XREAL_1,ZFMISC_1,ENUMSET1,CHORD,NECKLACE,FINSEQ_4,WELLORD1,UPROOTS,CARD_FIN,TREES_1,NAT_2,XXREAL_0,XXREAL_2,VALUED_0,MCART_1,FINSUB_1,SYSREL,GRFUNC_1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB11,CKB12,CKB13;
schemes NAT_1,FUNCT_1,RECDEF_1,FRAENKEL,PBOOLE,FUNCT_2,CLASSES1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,XXREAL_2,NAT_1,INT_1,MEMBERED,FINSEQ_1,CARD_1,UPROOTS,FUNCT_2,GLIB_000,ABIAN,BAGORDER,TERMORD,CARD_FIN,GLIB_001,CHORD,VALUED_0,FINSUB_1,PARTFUN1,RELSET_1,PRE_POLY,CKB8,CKB9,CKB10;
constructors DOMAIN_1,FUNCT_4,XXREAL_2,BAGORDER,TERMORD,UPROOTS,CHORD,RECDEF_1,RFUNCT_3,WELLORD2,RELSET_1,PBOOLE,CKB7,CKB11;
requirements NUMERALS,SUBSET,BOOLE,REAL,ARITHM;
begin
theorem
Th5: (for n,k being Nat holds (n < k implies ( ( ( Seg k ) \ ( Seg ( k -' n ) ) ) \/ { ( k -' n ) } ) = ( ( Seg k ) \ ( Seg ( k -' ( n + 1 ) ) ) )))
proof
let n being Nat;
let k being Nat;
assume that
A1: n < k;
set Sn1 = ( ( Seg k ) \ ( Seg ( k -' ( n + 1 ) ) ) );
set Sn = ( ( Seg k ) \ ( Seg ( k -' n ) ) );
now
let x being set;
assume that
A2: x in ( Sn \/ { ( k -' n ) } );
per cases  by A2,XBOOLE_0:def 3;
suppose A3: x in Sn;

n <= ( n + 1 ) by NAT_1:13;
then Sn c= Sn1 by CKB13:1;
hence x in Sn1 by A3;
end;
suppose A4: x in { ( k -' n ) };

then reconsider y = x as Nat;
A5: n < ( n + 1 ) by NAT_1:13;
( n + 1 ) <= k by A1,NAT_1:13;
then A6: ( k -' ( n + 1 ) ) < ( k -' n ) by A5,CKB6:1;
A7: x = ( k -' n ) by A4,TARSKI:def 1;
then y <= k by NAT_D:35;
hence x in Sn1 by A7,A6,CKB12:1;
end;
end;
then A8: ( Sn \/ { ( k -' n ) } ) c= Sn1 by TARSKI:def 3;
now
let x being set;
assume that
A9: x in Sn1;
reconsider y = x as (Element of ( NAT )) by A9;
A10: y <= k by A9,CKB12:1;
A11: ( ( k -' ( n + 1 ) ) + 1 ) = ( k -' n ) by A1,NAT_D:59;
( k -' ( n + 1 ) ) < y by A9,CKB12:1;
then A12: ( k -' n ) <= y by A11,NAT_1:13;
per cases  by A12,XXREAL_0:1;
suppose ( k -' n ) = y;

then y in { ( k -' n ) } by TARSKI:def 1;
hence x in ( Sn \/ { ( k -' n ) } ) by XBOOLE_0:def 3;
end;
suppose ( k -' n ) < y;

then y in Sn by A10,CKB12:1;
hence x in ( Sn \/ { ( k -' n ) } ) by XBOOLE_0:def 3;
end;
end;
then Sn1 c= ( Sn \/ { ( k -' n ) } ) by TARSKI:def 3;
hence thesis by A8,XBOOLE_0:def 10;
end;
