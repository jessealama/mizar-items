environ
vocabularies NUMBERS,XBOOLE_0,FUNCT_1,SUBSET_1,FUNCT_4,FUNCOP_1,RELAT_1,TARSKI,PETRI,FUNCT_2,MARGREL1,ARYTM_3,XBOOLEAN,FINSEQ_1,PARTFUN1,XXREAL_0,CARD_1,ORDINAL4,NAT_1,ARYTM_1,BOOLMARK,STRUCT_0,PNPROC_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,DOMAIN_1,FUNCOP_1,FINSEQ_1,FUNCT_4,MARGREL1,PETRI,XXREAL_0,STRUCT_0,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11;
definitions PETRI,XBOOLE_0,XBOOLEAN,SUBSET_1,STRUCT_0,CKB4,CKB6,CKB8,CKB9,CKB11;
theorems SUBSET_1,TARSKI,ZFMISC_1,PETRI,FUNCT_1,FUNCOP_1,FUNCT_2,FUNCT_4,FINSEQ_1,FINSEQ_4,NAT_1,FINSEQ_2,FINSEQ_3,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,SEQ_4,CKB1,CKB2,CKB3,CKB4,CKB6,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes FINSEQ_2,NAT_1;
registrations SUBSET_1,XXREAL_0,XREAL_0,FINSEQ_1,MARGREL1,ORDINAL1,CARD_1,RELSET_1,STRUCT_0,PETRI;
constructors PARTFUN1,DOMAIN_1,FUNCT_4,XXREAL_0,XREAL_0,NAT_1,MARGREL1,FINSEQ_4,PETRI,RELSET_1,STRUCT_0,CKB4,CKB6,CKB8,CKB9,CKB11;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
(for PTN being Petri_net holds (for Sd being non empty (Subset of (the carrier of PTN)) holds (Sd is  Deadlock-like iff (for M0 being (Boolean_marking of PTN) holds (( M0 .: Sd ) = { ( FALSE ) } implies (for Q being (FinSequence of (the carrier' of PTN)) holds (Q is_firable_on M0 implies ( ( Firing (Q,M0) ) .: Sd ) = { ( FALSE ) })))))))
proof
let PTN being Petri_net;
let Sd being non empty (Subset of (the carrier of PTN));
set M0 = ( (( (the carrier of PTN) --> ( TRUE ) ) qua Function) +* ( Sd --> ( FALSE ) ) );
A1: ( [#] (the carrier of PTN) ) = (the carrier of PTN);
(( dom (( (the carrier of PTN) --> ( TRUE ) ) qua Function) ) = (the carrier of PTN) & ( dom ( Sd --> ( FALSE ) ) ) = Sd) by FUNCOP_1:13;
then A2: ( dom M0 ) = ( (the carrier of PTN) \/ Sd ) by FUNCT_4:def 1
.= (the carrier of PTN) by A1,SUBSET_1:11;
( rng ( Sd --> ( FALSE ) ) ) c= { ( FALSE ) } by FUNCOP_1:13;
then A3: ( rng ( Sd --> ( FALSE ) ) ) c= ( BOOLEAN ) by XBOOLE_1:1;
thus (Sd is  Deadlock-like implies (for M0 being (Boolean_marking of PTN) holds (( M0 .: Sd ) = { ( FALSE ) } implies (for Q being (FinSequence of (the carrier' of PTN)) holds (Q is_firable_on M0 implies ( ( Firing (Q,M0) ) .: Sd ) = { ( FALSE ) })))))
proof
assume A4: Sd is  Deadlock-like;
let M0 being (Boolean_marking of PTN);
assume that
A5: ( M0 .: Sd ) = { ( FALSE ) };
defpred P[ (FinSequence of (the carrier' of PTN)) ]
 means
($1 is_firable_on M0 implies ( ( Firing ($1,M0) ) .: Sd ) = { ( FALSE ) });
A6: ( *' Sd ) is (Subset of ( Sd *' )) by A4,PETRI:def 8;
A7:now
let Q being (FinSequence of (the carrier' of PTN));
let x being (transition of PTN);
assume A8: P[ Q ];
thus P[ ( Q ^ <* x *> ) ]
proof
( Firing (( Q ^ <* x *> ),M0) ) = ( Firing (<* x *>,( Firing (Q,M0) )) ) by CKB16:1;
then A9: (ex M being (FinSequence of ( Bool_marks_of PTN )) st (((( len <* x *> ) = ( len M ) & ( Firing (( Q ^ <* x *> ),M0) ) = ( M /. ( len M ) )) & ( M /. 1 ) = ( Firing (( <* x *> /. 1 ),( Firing (Q,M0) )) )) & (for i being (Element of ( NAT )) holds ((i < ( len <* x *> ) & i > ( 0 )) implies ( M /. ( i + 1 ) ) = ( Firing (( <* x *> /. ( i + 1 ) ),( M /. i )) ))))) by CKB11:def 1;
( <* x *> /. 1 ) = x by FINSEQ_4:16;
then A10: ( Firing (( Q ^ <* x *> ),M0) ) = ( ( ( Firing (Q,M0) ) +* ( ( *' { x } ) --> ( FALSE ) ) ) +* ( ( { x } *' ) --> ( TRUE ) ) ) by A9,FINSEQ_1:39;
assume A11: ( Q ^ <* x *> ) is_firable_on M0;
then <* x *> is_firable_on ( Firing (Q,M0) ) by CKB17:1;
then x is_firable_on ( Firing (Q,M0) ) by CKB18:1;
then ( ( Firing (Q,M0) ) .: ( *' { x } ) ) c= { ( TRUE ) } by CKB6:def 1;
then A12: ( ( Firing (Q,M0) ) .: ( *' { x } ) ) misses { ( FALSE ) } by XBOOLE_1:63,ZFMISC_1:11;
then ( *' { x } ) misses Sd by A8,A11,CKB2:1,CKB17:1;
then (not x in ( *' Sd )) by A6,PETRI:19;
then ( { x } *' ) misses Sd by PETRI:20;
hence ( ( Firing (( Q ^ <* x *> ),M0) ) .: Sd ) = ( ( ( Firing (Q,M0) ) +* ( ( *' { x } ) --> ( FALSE ) ) ) .: Sd ) by A10,CKB3:1
.= { ( FALSE ) } by A8,A11,A12,CKB2:1,CKB3:1,CKB17:1;
end;

end;
A13: P[ ( <*> (the carrier' of PTN) ) ] by A5,CKB11:def 1;
thus (for Q0 being (FinSequence of (the carrier' of PTN)) holds P[ Q0 ]) from FINSEQ_2:sch 2(A13,A7);
end;

A14: ( rng M0 ) c= ( ( rng ( (the carrier of PTN) --> ( TRUE ) ) ) \/ ( rng ( Sd --> ( FALSE ) ) ) ) by FUNCT_4:17;
( rng ( (the carrier of PTN) --> ( TRUE ) ) ) c= { ( TRUE ) } by FUNCOP_1:13;
then ( rng ( (the carrier of PTN) --> ( TRUE ) ) ) c= ( BOOLEAN ) by XBOOLE_1:1;
then ( ( rng ( (the carrier of PTN) --> ( TRUE ) ) ) \/ ( rng ( Sd --> ( FALSE ) ) ) ) c= ( BOOLEAN ) by A3,XBOOLE_1:8;
then ( rng M0 ) c= ( BOOLEAN ) by A14,XBOOLE_1:1;
then reconsider M0 as (Boolean_marking of PTN) by A2,FUNCT_2:def 2;
assume A15: (for M0 being (Boolean_marking of PTN) holds (( M0 .: Sd ) = { ( FALSE ) } implies (for Q being (FinSequence of (the carrier' of PTN)) holds (Q is_firable_on M0 implies ( ( Firing (Q,M0) ) .: Sd ) = { ( FALSE ) }))));
assume (not ( *' Sd ) is (Subset of ( Sd *' )));
then consider t being (transition of PTN) such that A16: t in ( *' Sd ) and A17: (not t in ( Sd *' )) by SUBSET_1:2;
Sd misses ( *' { t } ) by A17,PETRI:19;
then A18: ( (( (the carrier of PTN) --> ( TRUE ) ) qua Function) .: ( *' { t } ) ) = ( M0 .: ( *' { t } ) ) by CKB3:1;
reconsider Q = <* t *> as (FinSequence of (the carrier' of PTN));
( { t } *' ) meets Sd by A16,PETRI:20;
then consider s being set such that A19: s in ( ( { t } *' ) /\ Sd ) by XBOOLE_0:4;
s in ( { t } *' ) by A19,XBOOLE_0:def 4;
then A20: ( ( Firing (t,M0) ) . s ) = ( TRUE ) by CKB13:1;
s in Sd by A19,XBOOLE_0:def 4;
then ( TRUE ) in ( ( Firing (t,M0) ) .: Sd ) by A20,FUNCT_2:35;
then ( ( Firing (t,M0) ) .: Sd ) <> { ( FALSE ) } by TARSKI:def 1;
then A21: ( ( Firing (Q,M0) ) .: Sd ) <> { ( FALSE ) } by CKB19:1;
(( rng ( (the carrier of PTN) --> ( TRUE ) ) ) c= { ( TRUE ) } & ( ( (the carrier of PTN) --> ( TRUE ) ) .: ( *' { t } ) ) c= ( rng ( (the carrier of PTN) --> ( TRUE ) ) )) by FUNCOP_1:13,RELAT_1:111;
then ( M0 .: ( *' { t } ) ) c= { ( TRUE ) } by A18,XBOOLE_1:1;
then t is_firable_on M0 by CKB6:def 1;
then A22: Q is_firable_on M0 by CKB18:1;
( M0 .: Sd ) = { (( FALSE ) qua set) } by CKB12:1;
hence contradiction by A15,A22,A21;
end;
