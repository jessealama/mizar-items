environ
vocabularies FUNCT_1,FUNCT_3,PARTFUN1,RELAT_1,ZFMISC_1,XBOOLE_0,TARSKI,SUBSET_1,BINOP_1,MCART_1,FUNCOP_1,WELLORD1,MSUALG_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_3,BINOP_1,WELLORD1,CKB2;
definitions TARSKI,RELAT_1,BINOP_1,FUNCT_1,WELLORD1,PARTFUN1,CKB2;
theorems ZFMISC_1,RELAT_1,RELSET_1,FUNCT_1,FUNCT_2,FUNCT_3,TARSKI,BINOP_1,MCART_1,XBOOLE_0,XBOOLE_1,GRFUNC_1,CKB1,CKB2;
schemes FUNCT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,RELSET_1;
constructors PARTFUN1,BINOP_1,FUNCT_3,RELSET_1,WELLORD1,CKB2;
requirements SUBSET,BOOLE;
begin
reserve f for Function;
reserve g for Function;
reserve x for set;
theorem
Th6: <: f,g :> = ( <: g,f :> ~ )
proof
A1: ( dom <: f,g :> ) = ( ( dom g ) /\ ( dom f ) ) by FUNCT_3:def 7
.= ( dom <: g,f :> ) by FUNCT_3:def 7;
A2:now
let x;
assume A3: x in ( dom <: f,g :> );
then A4: ( <: g,f :> . x ) = [ ( g . x ),( f . x ) ] by A1,FUNCT_3:def 7;
thus ( <: f,g :> . x ) = [ ( f . x ),( g . x ) ] by A3,FUNCT_3:def 7
.= ( ( <: g,f :> ~ ) . x ) by A1,A3,A4,CKB2:def 1;
end;
( dom <: f,g :> ) = ( dom ( <: g,f :> ~ ) ) by A1,CKB2:def 1;
hence thesis by A2,FUNCT_1:2;
end;
