environ
vocabularies FUNCT_1,FUNCT_3,PARTFUN1,RELAT_1,ZFMISC_1,XBOOLE_0,TARSKI,SUBSET_1,BINOP_1,MCART_1,FUNCOP_1,WELLORD1,MSUALG_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_3,BINOP_1,WELLORD1,CKB2,CKB8;
definitions TARSKI,RELAT_1,BINOP_1,FUNCT_1,WELLORD1,PARTFUN1,CKB2,CKB8;
theorems ZFMISC_1,RELAT_1,RELSET_1,FUNCT_1,FUNCT_2,FUNCT_3,TARSKI,BINOP_1,MCART_1,XBOOLE_0,XBOOLE_1,GRFUNC_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB16;
schemes FUNCT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,RELSET_1,CKB9,CKB13,CKB14,CKB15;
constructors PARTFUN1,BINOP_1,FUNCT_3,RELSET_1,WELLORD1,CKB2,CKB8;
requirements SUBSET,BOOLE;
begin
reserve f for Function;
reserve x for set;
reserve y for set;
reserve y1 for set;
reserve z for set;
theorem
Th17: ((for z holds (z in ( dom f ) implies ( f . z ) = x)) implies f = ( ( dom f ) --> x ))
proof
assume A1: (for z holds (z in ( dom f ) implies ( f . z ) = x));
now
per cases ;
suppose A2: ( dom f ) = ( {} );

( dom ( ( {} ) --> x ) ) = ( {} );
hence thesis by A2;
end;
suppose A3: ( dom f ) <> ( {} );

set z = the (Element of ( dom f ));
now
let y;
thus (y in { x } implies (ex y1 st (y1 in ( dom f ) & y = ( f . y1 ))))
proof
assume y in { x };
then y = x by TARSKI:def 1;
then ( f . z ) = y by A1,A3;
hence thesis by A3;
end;

assume (ex y1 st (y1 in ( dom f ) & y = ( f . y1 )));
then y = x by A1;
hence y in { x } by TARSKI:def 1;
end;
then ( rng f ) = { x } by FUNCT_1:def 3;
hence thesis by CKB12:1;
end;
end;
hence thesis;
end;
