environ
vocabularies DIRAF,SUBSET_1,STRUCT_0,AFF_4,INCSP_1,AFF_1,ANALOAF,RELAT_1,TARSKI,PARSP_1,XBOOLE_0,ARYTM_3,SETFAM_1,ZFMISC_1,EQREL_1,RELAT_2,ANPROJ_1,INCPROJ,MCART_1,FDIFF_1,ANPROJ_2,AFF_2,VECTSP_1,AFPROJ;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,EQREL_1,RELSET_1,RELAT_1,RELAT_2,MCART_1,STRUCT_0,ANALOAF,DIRAF,AFF_1,AFF_4,AFF_2,PAPDESAF,INCSP_1,INCPROJ,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14,CKB20,CKB21,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33;
definitions TARSKI,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14,CKB20,CKB21,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33;
theorems RELAT_1,RELAT_2,TARSKI,ZFMISC_1,MCART_1,EQREL_1,AFF_1,AFF_4,INCPROJ,PAPDESAF,AFF_2,DIRAF,INCSP_1,XBOOLE_0,PARTFUN1,ORDERS_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36;
schemes RELSET_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,INCPROJ;
constructors DOMAIN_1,EQREL_1,AFF_1,AFF_2,TRANSLAC,INCPROJ,AFF_4,RELSET_1,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14,CKB20,CKB21,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33;
requirements SUBSET,BOOLE;
begin
reserve AS for AffinSpace;
reserve X for (Subset of AS);
reserve x for set;
theorem
Th23: (for x holds (x is (LINE of ( IncProjSp_of AS )) iff (ex X st ((x = [ X,1 ] & X is  being_line) or (x = [ ( PDir X ),2 ] & X is  being_plane)))))
proof
let x;
A1:now
given X such that
A2: ((x = [ X,1 ] & X is  being_line) or (x = [ ( PDir X ),2 ] & X is  being_plane));

A3:now
assume that
A4: x = [ ( PDir X ),2 ]
and
A5: X is  being_plane;
x in [: ( Dir_of_Planes AS ),{ 2 } :] by A4,A5,CKB27:1;
hence x is (LINE of ( IncProjSp_of AS )) by XBOOLE_0:def 3;
end;
now
assume that
A6: x = [ X,1 ]
and
A7: X is  being_line;
x in [: ( AfLines AS ),{ 1 } :] by A6,A7,CKB26:1;
hence x is (LINE of ( IncProjSp_of AS )) by XBOOLE_0:def 3;
end;
hence x is (LINE of ( IncProjSp_of AS )) by A2,A3;
end;
now
A8: (x in [: ( Dir_of_Planes AS ),{ 2 } :] implies (ex X st ((x = [ X,1 ] & X is  being_line) or (x = [ ( PDir X ),2 ] & X is  being_plane)))) by CKB27:1;
assume A9: x is (LINE of ( IncProjSp_of AS ));
(x in [: ( AfLines AS ),{ 1 } :] implies (ex X st ((x = [ X,1 ] & X is  being_line) or (x = [ ( PDir X ),2 ] & X is  being_plane)))) by CKB26:1;
hence (ex X st ((x = [ X,1 ] & X is  being_line) or (x = [ ( PDir X ),2 ] & X is  being_plane))) by A9,A8,XBOOLE_0:def 3;
end;
hence thesis by A1;
end;
