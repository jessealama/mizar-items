environ
vocabularies DIRAF,SUBSET_1,STRUCT_0,AFF_4,INCSP_1,AFF_1,ANALOAF,RELAT_1,TARSKI,PARSP_1,XBOOLE_0,ARYTM_3,SETFAM_1,ZFMISC_1,EQREL_1,RELAT_2,ANPROJ_1,INCPROJ,MCART_1,FDIFF_1,ANPROJ_2,AFF_2,VECTSP_1,AFPROJ;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,EQREL_1,RELSET_1,RELAT_1,RELAT_2,MCART_1,STRUCT_0,ANALOAF,DIRAF,AFF_1,AFF_4,AFF_2,PAPDESAF,INCSP_1,INCPROJ,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14;
definitions TARSKI,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14;
theorems RELAT_1,RELAT_2,TARSKI,ZFMISC_1,MCART_1,EQREL_1,AFF_1,AFF_4,INCPROJ,PAPDESAF,AFF_2,DIRAF,INCSP_1,XBOOLE_0,PARTFUN1,ORDERS_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
schemes RELSET_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,INCPROJ;
constructors DOMAIN_1,EQREL_1,AFF_1,AFF_2,TRANSLAC,INCPROJ,AFF_4,RELSET_1,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14;
requirements SUBSET,BOOLE;
begin
reserve AS for AffinSpace;
reserve K for (Subset of AS);
reserve M for (Subset of AS);
reserve X for (Subset of AS);
reserve Y for (Subset of AS);
reserve x for set;
theorem
Th9: (X is  being_line implies (for x holds (x in ( LDir X ) iff (ex Y st ((x = Y & Y is  being_line) & X '||' Y)))))
proof
assume A1: X is  being_line;
let x;
A2:now
assume x in ( LDir X );
then [ x,X ] in ( LinesParallelity AS ) by EQREL_1:19;
then consider K,M such that A3: [ x,X ] = [ K,M ] and A4: K is  being_line and A5: M is  being_line and A6: K '||' M;
take Y = K;
A7: X = M by A3,ZFMISC_1:27;
K // M by A4,A5,A6,AFF_4:40;
hence ((x = Y & Y is  being_line) & X '||' Y) by A3,A4,A5,A7,AFF_4:40,ZFMISC_1:27;
end;
now
given Y such that
A8: x = Y
and
A9: Y is  being_line
and
A10: X '||' Y;

X // Y by A1,A9,A10,AFF_4:40;
then Y '||' X by A1,A9,AFF_4:40;
then [ Y,X ] in { [ K,M ]: ((K is  being_line & M is  being_line) & K '||' M) } by A1,A9;
hence x in ( LDir X ) by A8,EQREL_1:19;
end;
hence thesis by A2;
end;
