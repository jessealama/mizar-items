environ
vocabularies DIRAF,SUBSET_1,STRUCT_0,AFF_4,INCSP_1,AFF_1,ANALOAF,RELAT_1,TARSKI,PARSP_1,XBOOLE_0,ARYTM_3,SETFAM_1,ZFMISC_1,EQREL_1,RELAT_2,ANPROJ_1,INCPROJ,MCART_1,FDIFF_1,ANPROJ_2,AFF_2,VECTSP_1,AFPROJ;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,EQREL_1,RELSET_1,RELAT_1,RELAT_2,MCART_1,STRUCT_0,ANALOAF,DIRAF,AFF_1,AFF_4,AFF_2,PAPDESAF,INCSP_1,INCPROJ,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14,CKB20,CKB21,CKB28,CKB29;
definitions TARSKI,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14,CKB20,CKB21,CKB28,CKB29;
theorems RELAT_1,RELAT_2,TARSKI,ZFMISC_1,MCART_1,EQREL_1,AFF_1,AFF_4,INCPROJ,PAPDESAF,AFF_2,DIRAF,INCSP_1,XBOOLE_0,PARTFUN1,ORDERS_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
schemes RELSET_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,INCPROJ;
constructors DOMAIN_1,EQREL_1,AFF_1,AFF_2,TRANSLAC,INCPROJ,AFF_4,RELSET_1,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14,CKB20,CKB21,CKB28,CKB29;
requirements SUBSET,BOOLE;
begin
reserve AS for AffinSpace;
reserve K for (Subset of AS);
reserve X for (Subset of AS);
reserve x for set;
reserve y for set;
definition
let AS;
func Proj_Inc AS -> (Relation of ( ProjectivePoints AS ),( ProjectiveLines AS ))
means
:Def11: (for x holds (for y holds ([ x,y ] in it iff ((ex K st ((K is  being_line & y = [ K,1 ]) & ((x in (the carrier of AS) & x in K) or x = ( LDir K )))) or (ex K st (ex X st ((((K is  being_line & X is  being_plane) & x = ( LDir K )) & y = [ ( PDir X ),2 ]) & K '||' X)))))));
existence
proof
defpred P[ set,set ]
 means
((ex K st ((K is  being_line & $2 = [ K,1 ]) & (($1 in (the carrier of AS) & $1 in K) or $1 = ( LDir K )))) or (ex K st (ex X st ((((K is  being_line & X is  being_plane) & $1 = ( LDir K )) & $2 = [ ( PDir X ),2 ]) & K '||' X))));
set VV1 = ( ProjectivePoints AS );
set VV2 = ( ProjectiveLines AS );
consider P being (Relation of VV1,VV2) such that A1: ([ x,y ] in P iff ((x in VV1 & y in VV2) & P[ x,y ])) from RELSET_1:sch 1;
take P;
let x;
let y;
thus ([ x,y ] in P implies ((ex K st ((K is  being_line & y = [ K,1 ]) & ((x in (the carrier of AS) & x in K) or x = ( LDir K )))) or (ex K st (ex X st ((((K is  being_line & X is  being_plane) & x = ( LDir K )) & y = [ ( PDir X ),2 ]) & K '||' X))))) by A1;
assume A2: ((ex K st ((K is  being_line & y = [ K,1 ]) & ((x in (the carrier of AS) & x in K) or x = ( LDir K )))) or (ex K st (ex X st ((((K is  being_line & X is  being_plane) & x = ( LDir K )) & y = [ ( PDir X ),2 ]) & K '||' X))));
(x in VV1 & y in VV2)
proof
A3:now
given K such that
A4: K is  being_line
and
A5: y = [ K,1 ]
and
A6: ((x in (the carrier of AS) & x in K) or x = ( LDir K ));

A7:now
assume x = ( LDir K );
then x in ( Dir_of_Lines AS ) by A4,CKB22:1;
hence x in VV1 by XBOOLE_0:def 3;
end;
y in [: ( AfLines AS ),{ 1 } :] by A4,A5,CKB26:1;
hence thesis by A6,A7,XBOOLE_0:def 3;
end;
now
given K,X such that
A8: K is  being_line
and
A9: X is  being_plane
and
A10: x = ( LDir K )
and
A11: y = [ ( PDir X ),2 ]
and
K '||' X;

x in ( Dir_of_Lines AS ) by A8,A10,CKB22:1;
hence x in VV1 by XBOOLE_0:def 3;
y in [: ( Dir_of_Planes AS ),{ 2 } :] by A9,A11,CKB27:1;
hence y in VV2 by XBOOLE_0:def 3;
end;
hence thesis by A2,A3;
end;
hence thesis by A1,A2;
end;
uniqueness
proof
let P being (Relation of ( ProjectivePoints AS ),( ProjectiveLines AS )),Q being (Relation of ( ProjectivePoints AS ),( ProjectiveLines AS ));
assume that
A12: ([ x,y ] in P iff ((ex K st ((K is  being_line & y = [ K,1 ]) & ((x in (the carrier of AS) & x in K) or x = ( LDir K )))) or (ex K st (ex X st ((((K is  being_line & X is  being_plane) & x = ( LDir K )) & y = [ ( PDir X ),2 ]) & K '||' X)))))
and
A13: ([ x,y ] in Q iff ((ex K st ((K is  being_line & y = [ K,1 ]) & ((x in (the carrier of AS) & x in K) or x = ( LDir K )))) or (ex K st (ex X st ((((K is  being_line & X is  being_plane) & x = ( LDir K )) & y = [ ( PDir X ),2 ]) & K '||' X)))));
(for x holds (for y holds ([ x,y ] in P iff [ x,y ] in Q)))
proof
let x;
let y;
([ x,y ] in P iff ((ex K st ((K is  being_line & y = [ K,1 ]) & ((x in (the carrier of AS) & x in K) or x = ( LDir K )))) or (ex K st (ex X st ((((K is  being_line & X is  being_plane) & x = ( LDir K )) & y = [ ( PDir X ),2 ]) & K '||' X))))) by A12;
hence thesis by A13;
end;
hence thesis by RELAT_1:def 2;
end;
end;
