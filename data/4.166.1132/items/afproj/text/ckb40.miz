environ
vocabularies DIRAF,SUBSET_1,STRUCT_0,AFF_4,INCSP_1,AFF_1,ANALOAF,RELAT_1,TARSKI,PARSP_1,XBOOLE_0,ARYTM_3,SETFAM_1,ZFMISC_1,EQREL_1,RELAT_2,ANPROJ_1,INCPROJ,MCART_1,FDIFF_1,ANPROJ_2,AFF_2,VECTSP_1,AFPROJ;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,EQREL_1,RELSET_1,RELAT_1,RELAT_2,MCART_1,STRUCT_0,ANALOAF,DIRAF,AFF_1,AFF_4,AFF_2,PAPDESAF,INCSP_1,INCPROJ,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14,CKB20,CKB21,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33;
definitions TARSKI,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14,CKB20,CKB21,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33;
theorems RELAT_1,RELAT_2,TARSKI,ZFMISC_1,MCART_1,EQREL_1,AFF_1,AFF_4,INCPROJ,PAPDESAF,AFF_2,DIRAF,INCSP_1,XBOOLE_0,PARTFUN1,ORDERS_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
schemes RELSET_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,INCPROJ;
constructors DOMAIN_1,EQREL_1,AFF_1,AFF_2,TRANSLAC,INCPROJ,AFF_4,RELSET_1,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14,CKB20,CKB21,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33;
requirements SUBSET,BOOLE;
begin
reserve AS for AffinSpace;
reserve x for (Element of AS);
reserve K for (Subset of AS);
reserve X for (Subset of AS);
reserve X9 for (Subset of AS);
reserve a for (POINT of ( IncProjSp_of AS ));
reserve A for (LINE of ( IncProjSp_of AS ));
theorem
Th26: ((x = a & [ X,1 ] = A) implies (a on A iff (X is  being_line & x in X)))
proof
assume that
A1: x = a
and
A2: [ X,1 ] = A;
A3:now
A4:now
given K such that
A5: K is  being_line
and
A6: [ X,1 ] = [ K,1 ]
and
A7: ((x in (the carrier of AS) & x in K) or x = ( LDir K ));

A8:now
assume x = ( LDir K );
then x in ( Dir_of_Lines AS ) by A5,CKB22:1;
then ( (the carrier of AS) /\ ( Dir_of_Lines AS ) ) <> ( {} ) by XBOOLE_0:def 4;
then (the carrier of AS) meets ( Dir_of_Lines AS ) by XBOOLE_0:def 7;
hence contradiction by CKB24:1;
end;
X = ( [ K,1 ] `1 ) by A6,MCART_1:7
.= K by MCART_1:7;
hence (X is  being_line & x in X) by A5,A7,A8;
end;
assume a on A;
then A9: [ a,A ] in (the Inc of ( IncProjSp_of AS )) by INCSP_1:def 1;
(not (ex K st (ex X9 st ((((K is  being_line & X9 is  being_plane) & x = ( LDir K )) & [ X,1 ] = [ ( PDir X9 ),2 ]) & K '||' X9)))) by ZFMISC_1:27;
hence (X is  being_line & x in X) by A1,A2,A9,A4,CKB30:def 1;
end;
now
assume that
A10: X is  being_line
and
A11: x in X;
[ x,[ X,1 ] ] in ( Proj_Inc AS ) by A10,A11,CKB30:def 1;
hence a on A by A1,A2,INCSP_1:def 1;
end;
hence thesis by A3;
end;
