environ
vocabularies RLVECT_1,SUBSET_1,REAL_1,RELAT_1,ARYTM_3,SUPINF_2,CARD_1,XCMPLX_0,ANPROJ_1,ARYTM_1,XBOOLE_0,FUNCT_2,NUMBERS,FUNCT_1,FUNCSDOM,ZFMISC_1,INCSP_1,COLLSP,RELAT_2,PARSP_2,VECTSP_1,AFF_2,ANALOAF,ANPROJ_2;
notations XBOOLE_0,SUBSET_1,NUMBERS,FUNCT_1,FUNCT_2,DOMAIN_1,STRUCT_0,RLVECT_1,REAL_1,FUNCSDOM,COLLSP,ANPROJ_1;
definitions COLLSP,ANPROJ_1,BINOP_1,FUNCSDOM,RLVECT_1,STRUCT_0,ALGSTR_0;
theorems RLVECT_1,FUNCT_2,FUNCSDOM,COLLSP,ANPROJ_1,ENUMSET1,XCMPLX_0,XCMPLX_1,FUNCOP_1,STRUCT_0,CKB1,CKB2;
schemes FUNCT_2;
registrations XBOOLE_0,SUBSET_1,RELSET_1,NUMBERS,STRUCT_0,COLLSP,REAL_1,ANPROJ_1,XREAL_0,ORDINAL1;
constructors DOMAIN_1,REAL_1,FUNCSDOM,BINOP_2,ANPROJ_1,RELSET_1;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve V for RealLinearSpace;
reserve u for (Element of V);
reserve v for (Element of V);
reserve u1 for (Element of V);
reserve v1 for (Element of V);
reserve a for Real;
reserve b for Real;
reserve a1 for Real;
reserve b1 for Real;
reserve d1 for Real;
reserve d2 for Real;
reserve d3 for Real;
theorem
Th2: (for u holds (for v holds (for u1 holds (for v1 holds ((for a holds (for b holds (for a1 holds (for b1 holds (( ( ( ( a * u ) + ( b * v ) ) + ( a1 * u1 ) ) + ( b1 * v1 ) ) = ( 0. V ) implies (((a = ( 0 ) & b = ( 0 )) & a1 = ( 0 )) & b1 = ( 0 ))))))) implies ((((((((not u is  zero) & (not v is  zero)) & (not  are_Prop u,v)) & (not u1 is  zero)) & (not v1 is  zero)) & (not  are_Prop u1,v1)) & (not u,v,u1 are_LinDep )) & (not u1,v1,u are_LinDep )))))))
proof
let u;
let v;
let u1;
let v1;
assume A1: (for a holds (for b holds (for a1 holds (for b1 holds (( ( ( ( a * u ) + ( b * v ) ) + ( a1 * u1 ) ) + ( b1 * v1 ) ) = ( 0. V ) implies (((a = ( 0 ) & b = ( 0 )) & a1 = ( 0 )) & b1 = ( 0 )))))));
A2:now
let d1;
let d2;
let d3;
assume ( ( ( d1 * u ) + ( d2 * v ) ) + ( d3 * u1 ) ) = ( 0. V );
then ( 0. V ) = ( ( ( ( d1 * u ) + ( d2 * v ) ) + ( d3 * u1 ) ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( ( d1 * u ) + ( d2 * v ) ) + ( d3 * u1 ) ) + ( ( 0 ) * v1 ) ) by RLVECT_1:10;
hence ((d1 = ( 0 ) & d2 = ( 0 )) & d3 = ( 0 )) by A1;
end;
now
let d1;
let d2;
let d3;
assume ( ( ( d1 * u1 ) + ( d2 * v1 ) ) + ( d3 * u ) ) = ( 0. V );
then ( 0. V ) = ( ( ( d3 * u ) + ( d1 * u1 ) ) + ( d2 * v1 ) ) by RLVECT_1:def 3
.= ( ( ( ( d3 * u ) + ( 0. V ) ) + ( d1 * u1 ) ) + ( d2 * v1 ) ) by RLVECT_1:4
.= ( ( ( ( d3 * u ) + ( ( 0 ) * v ) ) + ( d1 * u1 ) ) + ( d2 * v1 ) ) by RLVECT_1:10;
hence ((d1 = ( 0 ) & d2 = ( 0 )) & d3 = ( 0 )) by A1;
end;
hence thesis by A2,CKB1:1;
end;
