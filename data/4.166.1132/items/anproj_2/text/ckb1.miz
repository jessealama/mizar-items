environ
vocabularies RLVECT_1,SUBSET_1,REAL_1,RELAT_1,ARYTM_3,SUPINF_2,CARD_1,XCMPLX_0,ANPROJ_1,ARYTM_1,XBOOLE_0,FUNCT_2,NUMBERS,FUNCT_1,FUNCSDOM,ZFMISC_1,INCSP_1,COLLSP,RELAT_2,PARSP_2,VECTSP_1,AFF_2,ANALOAF,ANPROJ_2;
notations XBOOLE_0,SUBSET_1,NUMBERS,FUNCT_1,FUNCT_2,DOMAIN_1,STRUCT_0,RLVECT_1,REAL_1,FUNCSDOM,COLLSP,ANPROJ_1;
definitions COLLSP,ANPROJ_1,BINOP_1,FUNCSDOM,RLVECT_1,STRUCT_0,ALGSTR_0;
theorems RLVECT_1,FUNCT_2,FUNCSDOM,COLLSP,ANPROJ_1,ENUMSET1,XCMPLX_0,XCMPLX_1,FUNCOP_1,STRUCT_0;
schemes FUNCT_2;
registrations XBOOLE_0,SUBSET_1,RELSET_1,NUMBERS,STRUCT_0,COLLSP,REAL_1,ANPROJ_1,XREAL_0,ORDINAL1;
constructors DOMAIN_1,REAL_1,FUNCSDOM,BINOP_2,ANPROJ_1,RELSET_1;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve V for RealLinearSpace;
reserve u for (Element of V);
reserve v for (Element of V);
reserve w for (Element of V);
reserve a for Real;
reserve b for Real;
reserve c for Real;
theorem
Th1: ((for a holds (for b holds (for c holds (( ( ( a * u ) + ( b * v ) ) + ( c * w ) ) = ( 0. V ) implies ((a = ( 0 ) & b = ( 0 )) & c = ( 0 )))))) implies (((((not u is  zero) & (not v is  zero)) & (not w is  zero)) & (not u,v,w are_LinDep )) & (not  are_Prop u,v)))
proof
assume A1: (for a holds (for b holds (for c holds (( ( ( a * u ) + ( b * v ) ) + ( c * w ) ) = ( 0. V ) implies ((a = ( 0 ) & b = ( 0 )) & c = ( 0 ))))));
A2:now
assume (not (not v is  zero));
then A3: v = ( 0. V ) by STRUCT_0:def 12;
( 0. V ) = ( ( 0. V ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( 0. V ) + ( 0. V ) ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( 0. V ) + ( 1 * v ) ) + ( 0. V ) ) by A3,RLVECT_1:def 8
.= ( ( ( ( 0 ) * u ) + ( 1 * v ) ) + ( 0. V ) ) by RLVECT_1:10
.= ( ( ( ( 0 ) * u ) + ( 1 * v ) ) + ( ( 0 ) * w ) ) by RLVECT_1:10;
hence contradiction by A1;
end;
A4:now
assume (not (not w is  zero));
then A5: w = ( 0. V ) by STRUCT_0:def 12;
( 0. V ) = ( ( 0. V ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( 0. V ) + ( 0. V ) ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( 0. V ) + ( 0. V ) ) + ( 1 * w ) ) by A5,RLVECT_1:def 8
.= ( ( ( ( 0 ) * u ) + ( 0. V ) ) + ( 1 * w ) ) by RLVECT_1:10
.= ( ( ( ( 0 ) * u ) + ( ( 0 ) * v ) ) + ( 1 * w ) ) by RLVECT_1:10;
hence contradiction by A1;
end;
now
assume (not (not u is  zero));
then A6: u = ( 0. V ) by STRUCT_0:def 12;
( 0. V ) = ( ( 0. V ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( 0. V ) + ( 0. V ) ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( 1 * u ) + ( 0. V ) ) + ( 0. V ) ) by A6,RLVECT_1:def 8
.= ( ( ( 1 * u ) + ( ( 0 ) * v ) ) + ( 0. V ) ) by RLVECT_1:10
.= ( ( ( 1 * u ) + ( ( 0 ) * v ) ) + ( ( 0 ) * w ) ) by RLVECT_1:10;
hence contradiction by A1;
end;
hence (((not u is  zero) & (not v is  zero)) & (not w is  zero)) by A2,A4;
thus (not u,v,w are_LinDep ) by A1,ANPROJ_1:def 2;
hence thesis by ANPROJ_1:12;
end;
