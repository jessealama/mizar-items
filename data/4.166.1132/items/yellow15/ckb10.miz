environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,FINSEQ_1,FUNCT_1,RELAT_1,TARSKI,SUBSET_1,MARGREL1,FINSET_1,FINSEQ_2,CARD_3,CARD_1,SETFAM_1,STRUCT_0,ZFMISC_1,FUNCOP_1,XBOOLEAN,EQREL_1,ORDERS_2,WAYBEL23,YELLOW_0,LATTICES,ORDINAL2,WAYBEL_0,WAYBEL_3,WAYBEL_8,RCOMP_1,PRE_TOPC,RLVECT_3,CANTOR_1,YELLOW15;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NAT_1,SETFAM_1,DOMAIN_1,CARD_1,NUMBERS,FINSET_1,STRUCT_0,MARGREL1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,FINSEQ_1,FINSEQ_2,FINSEQ_4,EQREL_1,FUNCOP_1,CARD_3,PRE_TOPC,TOPS_2,CANTOR_1,ORDERS_2,YELLOW_0,WAYBEL_0,WAYBEL_3,WAYBEL_8,WAYBEL23,CKB8;
definitions TARSKI,FUNCT_1,XBOOLE_0,FINSEQ_2,MARGREL1,XBOOLEAN,STRUCT_0,CKB8;
theorems TARSKI,SETFAM_1,ZFMISC_1,FINSET_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCT_6,MSSUBFAM,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,EQREL_1,FUNCOP_1,CARD_1,CARD_4,T_0TOPSP,PRE_TOPC,TOPS_2,CANTOR_1,MSSCYC_1,YELLOW_0,YELLOW_8,YELLOW_9,WAYBEL_0,WAYBEL_3,WAYBEL_8,WAYBEL23,XBOOLE_0,XBOOLE_1,SUBSET_1,ORDINAL1,XBOOLEAN,CKB3,CKB4,CKB7,CKB8,CKB9;
schemes FUNCT_2,PRE_CIRC,FINSEQ_1,FRAENKEL,CKB1;
registrations SUBSET_1,FUNCT_1,RELSET_1,FINSET_1,FINSEQ_1,MARGREL1,FINSEQ_2,REALSET1,STRUCT_0,TOPS_1,LATTICE3,WAYBEL_0,WAYBEL_3,WAYBEL23,ORDINAL1,PRE_TOPC,ZFMISC_1,CARD_1,XBOOLE_0,RELAT_1,CKB2,CKB5,CKB6;
constructors SETFAM_1,XXREAL_0,FINSEQ_4,REALSET1,VALUAT_1,TOPS_2,CANTOR_1,WAYBEL_8,WAYBEL23,RELSET_1,FINSEQ_2,CKB8;
requirements NUMERALS,REAL,SUBSET,BOOLE;
begin
theorem
Th6: (for X being set holds (for p being (FinSequence of ( bool X )) holds (for q being (FinSequence of ( BOOLEAN )) holds (for i being Nat holds (( q . i ) = ( TRUE ) implies ( ( MergeSequence (p,q) ) . i ) = ( p . i ))))))
proof
let X being set;
let p being (FinSequence of ( bool X ));
let q being (FinSequence of ( BOOLEAN ));
let i being Nat;
assume A1: ( q . i ) = ( TRUE );
now
per cases ;
suppose i in ( dom p );

hence ( ( MergeSequence (p,q) ) . i ) = ( IFEQ (( q . i ),( TRUE ),( p . i ),( X \ ( p . i ) )) ) by CKB8:def 1
.= ( p . i ) by A1,FUNCOP_1:def 8;
end;
suppose A2: (not i in ( dom p ));

( dom p ) = ( Seg ( len p ) ) by FINSEQ_1:def 3
.= ( Seg ( len ( MergeSequence (p,q) ) ) ) by CKB8:def 1
.= ( dom ( MergeSequence (p,q) ) ) by FINSEQ_1:def 3;
hence ( ( MergeSequence (p,q) ) . i ) = ( {} ) by A2,FUNCT_1:def 2
.= ( p . i ) by A2,FUNCT_1:def 2;
end;
end;
hence thesis;
end;
