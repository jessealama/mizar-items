environ
vocabularies NUMBERS,NAT_1,INT_1,CARD_1,RELAT_1,ARYTM_3,XXREAL_0,ARYTM_1,NEWTON,FINSEQ_1,RADIX_1,POWER,FINSEQ_2,PARTFUN1,FUNCT_1,CARD_3,ORDINAL4,SUBSET_1,TARSKI,REAL_1,RADIX_2;
notations TARSKI,NUMBERS,XCMPLX_0,XXREAL_0,REAL_1,INT_1,NAT_1,NAT_D,FUNCT_1,POWER,PARTFUN1,FINSEQ_1,FINSEQ_2,SEQ_1,NEWTON,BINARITH,RVSUM_1,GR_CY_1,WSIERP_1,RADIX_1,SUBSET_1,RECDEF_1,CKB12,CKB13,CKB14,CKB15,CKB16;
definitions TARSKI,CKB12,CKB13,CKB14,CKB15,CKB16;
theorems NAT_1,NAT_2,INT_1,FINSEQ_1,PREPOWER,POWER,RVSUM_1,FINSEQ_2,TARSKI,FUNCT_1,PEPIN,RADIX_1,EULER_2,INT_3,NEWTON,INT_2,XCMPLX_1,XREAL_1,XXREAL_0,XREAL_0,NAT_D,ORDINAL1,PARTFUN1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
schemes NAT_1,FINSEQ_2,RECDEF_1;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,FINSEQ_2,CARD_1,FINSEQ_1;
constructors REAL_1,NAT_D,NEWTON,POWER,BINARITH,WSIERP_1,GR_CY_1,RADIX_1,SEQ_1,RECDEF_1,CKB12,CKB13,CKB14,CKB15,CKB16;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for Nat;
theorem
Th12: (for n,k being Nat holds (for x being (Tuple of n,( NAT )) holds (for y being (Tuple of n,( k -SD )) holds (x = y implies ( DigitSD2 (x,k) ) = ( DigitSD y )))))
proof
let n being Nat;
let k being Nat;
let x being (Tuple of n,( NAT ));
let y being (Tuple of n,( k -SD ));
A1: ( len ( DigitSD y ) ) = n by CARD_1:def 7;
A2: ( len ( DigitSD2 (x,k) ) ) = n by CARD_1:def 7;
then A3: ( dom ( DigitSD2 (x,k) ) ) = ( Seg n ) by FINSEQ_1:def 3;
assume A4: x = y;
A5:now
let i being (Element of ( NAT ));
assume i in ( Seg n );
then ( x . i ) = ( DigA (y,i) ) by A4,RADIX_1:def 3
.= ( DigB (y,i) ) by RADIX_1:def 4;
hence ( x . i ) = ( DigB (y,i) );
end;
now
let j being Nat;
assume A6: j in ( dom ( DigitSD2 (x,k) ) );
then A7: j in ( dom ( DigitSD y ) ) by A1,A3,FINSEQ_1:def 3;
( ( DigitSD2 (x,k) ) . j ) = ( ( DigitSD2 (x,k) ) /. j ) by A6,PARTFUN1:def 6
.= ( SubDigit2 (x,j,k) ) by A3,A6,CKB13:def 1
.= ( ( ( Radix k ) |^ ( j -' 1 ) ) * ( DigB (y,j) ) ) by A5,A3,A6
.= ( SubDigit (y,j,k) ) by RADIX_1:def 5
.= ( ( DigitSD y ) /. j ) by A3,A6,RADIX_1:def 6
.= ( ( DigitSD y ) . j ) by A7,PARTFUN1:def 6;
hence ( ( DigitSD2 (x,k) ) . j ) = ( ( DigitSD y ) . j );
end;
hence thesis by A2,A1,FINSEQ_2:9;
end;
