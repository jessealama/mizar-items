environ
vocabularies NUMBERS,NAT_1,INT_1,CARD_1,RELAT_1,ARYTM_3,XXREAL_0,ARYTM_1,NEWTON,FINSEQ_1,RADIX_1,POWER,FINSEQ_2,PARTFUN1,FUNCT_1,CARD_3,ORDINAL4,SUBSET_1,TARSKI,REAL_1,RADIX_2;
notations TARSKI,NUMBERS,XCMPLX_0,XXREAL_0,REAL_1,INT_1,NAT_1,NAT_D,FUNCT_1,POWER,PARTFUN1,FINSEQ_1,FINSEQ_2,SEQ_1,NEWTON,BINARITH,RVSUM_1,GR_CY_1,WSIERP_1,RADIX_1,SUBSET_1,RECDEF_1;
definitions TARSKI;
theorems NAT_1,NAT_2,INT_1,FINSEQ_1,PREPOWER,POWER,RVSUM_1,FINSEQ_2,TARSKI,FUNCT_1,PEPIN,RADIX_1,EULER_2,INT_3,NEWTON,INT_2,XCMPLX_1,XREAL_1,XXREAL_0,XREAL_0,NAT_D,ORDINAL1,PARTFUN1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
schemes NAT_1,FINSEQ_2,RECDEF_1;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,FINSEQ_2,CARD_1,FINSEQ_1;
constructors REAL_1,NAT_D,NEWTON,POWER,BINARITH,WSIERP_1,GR_CY_1,RADIX_1,SEQ_1,RECDEF_1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for Nat;
theorem
Th7: (for x being (Tuple of 1,( k -SD )) holds ( SDDec x ) = ( DigA (x,1) ))
proof
( 1 - 1 ) = ( 0 );
then A1: ( 1 -' 1 ) = ( 0 ) by XREAL_0:def 2;
let x being (Tuple of 1,( k -SD ));
A2: 1 in ( Seg 1 ) by FINSEQ_1:2,TARSKI:def 1;
then A3: ( ( DigitSD x ) /. 1 ) = ( SubDigit (x,1,k) ) by RADIX_1:def 6;
A4: ( len ( DigitSD x ) ) = 1 by CARD_1:def 7;
then 1 in ( dom ( DigitSD x ) ) by A2,FINSEQ_1:def 3;
then A5: ( ( DigitSD x ) . 1 ) = ( SubDigit (x,1,k) ) by A3,PARTFUN1:def 6;
thus ( SDDec x ) = ( Sum ( DigitSD x ) ) by RADIX_1:def 7
.= ( Sum <* ( SubDigit (x,1,k) ) *> ) by A4,A5,FINSEQ_1:40
.= ( SubDigit (x,1,k) ) by RVSUM_1:73
.= ( ( ( Radix k ) |^ ( 0 ) ) * ( DigB (x,1) ) ) by A1,RADIX_1:def 5
.= ( 1 * ( DigB (x,1) ) ) by NEWTON:4
.= ( DigA (x,1) ) by RADIX_1:def 4;
end;
