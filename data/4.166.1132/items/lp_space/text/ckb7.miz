environ
vocabularies NUMBERS,SEQ_1,REAL_1,SUBSET_1,FUNCT_1,COMPLEX1,POWER,XXREAL_0,XBOOLE_0,RSSPACE,SERIES_1,CARD_1,TARSKI,RELAT_1,ARYTM_3,CARD_3,RLVECT_1,RSSPACE3,NORMSP_1,RLSUB_1,XXREAL_2,XREAL_0,ORDINAL1,VALUED_0,VALUED_1,ALGSTR_0,ZFMISC_1,STRUCT_0,SUPINF_2,REALSET1,ARYTM_1,SEQ_2,ORDINAL2,PRE_TOPC,NAT_1,LOPBAN_1,LP_SPACE,NORMSP_0,METRIC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELAT_1,FUNCT_1,REALSET1,PARTFUN1,FUNCT_2,PRE_TOPC,DOMAIN_1,XXREAL_0,XREAL_0,ORDINAL1,NUMBERS,RLVECT_1,COMPLEX1,REAL_1,NAT_1,STRUCT_0,ALGSTR_0,RLSUB_1,NORMSP_0,NORMSP_1,VALUED_1,SEQ_1,SEQ_2,SERIES_1,POWER,RSSPACE,RSSPACE3,LOPBAN_1,CKB1,CKB2;
definitions TARSKI,REALSET1,BINOP_1,RLVECT_1,RLSUB_1,STRUCT_0,ALGSTR_0,VALUED_1,NORMSP_0,CKB1,CKB2;
theorems XBOOLE_0,RELAT_1,TARSKI,ABSVALUE,ZFMISC_1,SEQ_1,SEQM_3,SERIES_1,COMSEQ_3,FUNCT_1,NAT_1,SEQ_2,FUNCT_2,RLVECT_1,RLSUB_1,NORMSP_1,XREAL_0,RSSPACE2,XCMPLX_1,SEQ_4,POWER,RSSPACE,RSSPACE3,LOPBAN_1,HOLDER_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,NORMSP_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
schemes NAT_1,SEQ_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,REALSET1,STRUCT_0,RLVECT_1,LOPBAN_1,VALUED_0,RSSPACE,VALUED_1,FUNCT_2,NORMSP_0;
constructors PARTFUN1,BINOP_1,XXREAL_0,REAL_1,NAT_1,COMPLEX1,SEQ_2,SEQM_3,PREPOWER,SERIES_1,REALSET1,RLSUB_1,RSSPACE3,LOPBAN_1,SEQ_1,VALUED_1,RELSET_1,BINOP_2,RVSUM_1,CKB1,CKB2;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
theorem
Th2: (for p being Real holds (1 <= p implies (for a,b being Real_Sequence holds (for n being (Element of ( NAT )) holds ( ( ( Partial_Sums ( ( a + b ) rto_power p ) ) . n ) to_power ( 1 / p ) ) <= ( ( ( ( Partial_Sums ( a rto_power p ) ) . n ) to_power ( 1 / p ) ) + ( ( ( Partial_Sums ( b rto_power p ) ) . n ) to_power ( 1 / p ) ) )))))
proof
let p being Real;
assume that
A1: 1 <= p;
let a being Real_Sequence,b being Real_Sequence;
set ap = ( a rto_power p );
set bp = ( b rto_power p );
set ab = ( ( a + b ) rto_power p );
let n being (Element of ( NAT ));
now
per cases  by A1,XXREAL_0:1;
case A2: p > 1;
now
let n being (Element of ( NAT ));
thus ( ap . n ) = ( ( abs ( a . n ) ) to_power p ) by CKB1:def 1;
thus ( bp . n ) = ( ( abs ( b . n ) ) to_power p ) by CKB1:def 1;
( ( ( a + b ) rto_power p ) . n ) = ( ( abs ( ( a + b ) . n ) ) to_power p ) by CKB1:def 1
.= ( ( abs ( ( a . n ) + ( b . n ) ) ) to_power p ) by SEQ_1:7;
hence ( ab . n ) = ( ( abs ( ( a . n ) + ( b . n ) ) ) to_power p );
end;
hence thesis by A2,HOLDER_1:7;
end;
case p = 1;
hence thesis by CKB6:1;
end;
end;
hence thesis;
end;
