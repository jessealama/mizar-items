environ
vocabularies NUMBERS,SEQ_1,REAL_1,SUBSET_1,FUNCT_1,COMPLEX1,POWER,XXREAL_0,XBOOLE_0,RSSPACE,SERIES_1,CARD_1,TARSKI,RELAT_1,ARYTM_3,CARD_3,RLVECT_1,RSSPACE3,NORMSP_1,RLSUB_1,XXREAL_2,XREAL_0,ORDINAL1,VALUED_0,VALUED_1,ALGSTR_0,ZFMISC_1,STRUCT_0,SUPINF_2,REALSET1,ARYTM_1,SEQ_2,ORDINAL2,PRE_TOPC,NAT_1,LOPBAN_1,LP_SPACE,NORMSP_0,METRIC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELAT_1,FUNCT_1,REALSET1,PARTFUN1,FUNCT_2,PRE_TOPC,DOMAIN_1,XXREAL_0,XREAL_0,ORDINAL1,NUMBERS,RLVECT_1,COMPLEX1,REAL_1,NAT_1,STRUCT_0,ALGSTR_0,RLSUB_1,NORMSP_0,NORMSP_1,VALUED_1,SEQ_1,SEQ_2,SERIES_1,POWER,RSSPACE,RSSPACE3,LOPBAN_1,CKB1,CKB2;
definitions TARSKI,REALSET1,BINOP_1,RLVECT_1,RLSUB_1,STRUCT_0,ALGSTR_0,VALUED_1,NORMSP_0,CKB1,CKB2;
theorems XBOOLE_0,RELAT_1,TARSKI,ABSVALUE,ZFMISC_1,SEQ_1,SEQM_3,SERIES_1,COMSEQ_3,FUNCT_1,NAT_1,SEQ_2,FUNCT_2,RLVECT_1,RLSUB_1,NORMSP_1,XREAL_0,RSSPACE2,XCMPLX_1,SEQ_4,POWER,RSSPACE,RSSPACE3,LOPBAN_1,HOLDER_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,NORMSP_0,CKB1,CKB2,CKB3,CKB4,CKB5;
schemes NAT_1,SEQ_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,REALSET1,STRUCT_0,RLVECT_1,LOPBAN_1,VALUED_0,RSSPACE,VALUED_1,FUNCT_2,NORMSP_0;
constructors PARTFUN1,BINOP_1,XXREAL_0,REAL_1,NAT_1,COMPLEX1,SEQ_2,SEQM_3,PREPOWER,SERIES_1,REALSET1,RLSUB_1,RSSPACE3,LOPBAN_1,SEQ_1,VALUED_1,RELSET_1,BINOP_2,RVSUM_1,CKB1,CKB2;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve a for Real;
reserve b for Real;
reserve c for Real;
theorem
Lm3: (for p being Real holds (1 = p implies (for a,b being Real_Sequence holds (for n being (Element of ( NAT )) holds ( ( ( Partial_Sums ( ( a + b ) rto_power p ) ) . n ) to_power ( 1 / p ) ) <= ( ( ( ( Partial_Sums ( a rto_power p ) ) . n ) to_power ( 1 / p ) ) + ( ( ( Partial_Sums ( b rto_power p ) ) . n ) to_power ( 1 / p ) ) )))))
proof
let p being Real;
assume that
A1: p = 1;
let a being Real_Sequence;
let b being Real_Sequence;
let n being (Element of ( NAT ));
A2:now
let n being (Element of ( NAT ));
thus ( ( ( a + b ) rto_power p ) . n ) = ( ( abs ( ( a + b ) . n ) ) to_power p ) by CKB1:def 1
.= ( abs ( ( a + b ) . n ) ) by A1,POWER:25;
thus ( ( a rto_power p ) . n ) = ( ( abs ( a . n ) ) to_power p ) by CKB1:def 1
.= ( abs ( a . n ) ) by A1,POWER:25;
thus ( ( b rto_power p ) . n ) = ( ( abs ( b . n ) ) to_power p ) by CKB1:def 1
.= ( abs ( b . n ) ) by A1,POWER:25;
end;
then ( ( a + b ) rto_power p ) = ( abs ( a + b ) ) by SEQ_1:12;
then A3: ( ( ( Partial_Sums ( ( a + b ) rto_power p ) ) . n ) to_power ( 1 / p ) ) = ( ( Partial_Sums ( abs ( a + b ) ) ) . n ) by A1,POWER:25;
( a rto_power p ) = ( abs a ) by A2,SEQ_1:12;
then A4: ( ( ( Partial_Sums ( a rto_power p ) ) . n ) to_power ( 1 / p ) ) = ( ( Partial_Sums ( abs a ) ) . n ) by A1,POWER:25;
deffunc F((Element of ( NAT ))) = ( ( abs ( a . $1 ) ) + ( abs ( b . $1 ) ) );
consider c being Real_Sequence such that A5: (for n being (Element of ( NAT )) holds ( c . n ) = F(n)) from SEQ_1:sch 1;
A6: (for n being (Element of ( NAT )) holds ( abs ( ( a + b ) . n ) ) <= ( ( abs ( b . n ) ) + ( abs ( a . n ) ) ))
proof
let n being (Element of ( NAT ));
( abs ( ( a + b ) . n ) ) = ( abs ( ( a . n ) + ( b . n ) ) ) by SEQ_1:7;
hence thesis by COMPLEX1:56;
end;
now
let n being (Element of ( NAT ));
A7: ( abs ( ( a + b ) . n ) ) = ( ( abs ( a + b ) ) . n ) by SEQ_1:12;
( abs ( ( a + b ) . n ) ) <= ( ( abs ( b . n ) ) + ( abs ( a . n ) ) ) by A6;
hence ( ( abs ( a + b ) ) . n ) <= ( c . n ) by A5,A7;
end;
then A8: ( ( Partial_Sums ( abs ( a + b ) ) ) . n ) <= ( ( Partial_Sums c ) . n ) by SERIES_1:14;
now
let n being (Element of ( NAT ));
A9: ( abs ( a . n ) ) = ( ( abs a ) . n ) by SEQ_1:12;
( abs ( b . n ) ) = ( ( abs b ) . n ) by SEQ_1:12;
hence ( c . n ) = ( ( ( abs a ) . n ) + ( ( abs b ) . n ) ) by A5,A9
.= ( ( ( abs a ) + ( abs b ) ) . n ) by SEQ_1:7;
end;
then (for n being set holds (n in ( NAT ) implies ( c . n ) = ( ( ( abs a ) + ( abs b ) ) . n )));
then A10: c = ( ( abs a ) + ( abs b ) ) by FUNCT_2:12;
( b rto_power p ) = ( abs b ) by A2,SEQ_1:12;
then A11: ( ( ( Partial_Sums ( b rto_power p ) ) . n ) to_power ( 1 / p ) ) = ( ( Partial_Sums ( abs b ) ) . n ) by A1,POWER:25;
( Partial_Sums ( ( abs a ) + ( abs b ) ) ) = ( ( Partial_Sums ( abs a ) ) + ( Partial_Sums ( abs b ) ) ) by SERIES_1:5;
hence thesis by A3,A4,A11,A10,A8,SEQ_1:7;
end;
