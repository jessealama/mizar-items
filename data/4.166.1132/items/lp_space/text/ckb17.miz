environ
vocabularies NUMBERS,SEQ_1,REAL_1,SUBSET_1,FUNCT_1,COMPLEX1,POWER,XXREAL_0,XBOOLE_0,RSSPACE,SERIES_1,CARD_1,TARSKI,RELAT_1,ARYTM_3,CARD_3,RLVECT_1,RSSPACE3,NORMSP_1,RLSUB_1,XXREAL_2,XREAL_0,ORDINAL1,VALUED_0,VALUED_1,ALGSTR_0,ZFMISC_1,STRUCT_0,SUPINF_2,REALSET1,ARYTM_1,SEQ_2,ORDINAL2,PRE_TOPC,NAT_1,LOPBAN_1,LP_SPACE,NORMSP_0,METRIC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELAT_1,FUNCT_1,REALSET1,PARTFUN1,FUNCT_2,PRE_TOPC,DOMAIN_1,XXREAL_0,XREAL_0,ORDINAL1,NUMBERS,RLVECT_1,COMPLEX1,REAL_1,NAT_1,STRUCT_0,ALGSTR_0,RLSUB_1,NORMSP_0,NORMSP_1,VALUED_1,SEQ_1,SEQ_2,SERIES_1,POWER,RSSPACE,RSSPACE3,LOPBAN_1,CKB1,CKB2,CKB14;
definitions TARSKI,REALSET1,BINOP_1,RLVECT_1,RLSUB_1,STRUCT_0,ALGSTR_0,VALUED_1,NORMSP_0,CKB1,CKB2,CKB14;
theorems XBOOLE_0,RELAT_1,TARSKI,ABSVALUE,ZFMISC_1,SEQ_1,SEQM_3,SERIES_1,COMSEQ_3,FUNCT_1,NAT_1,SEQ_2,FUNCT_2,RLVECT_1,RLSUB_1,NORMSP_1,XREAL_0,RSSPACE2,XCMPLX_1,SEQ_4,POWER,RSSPACE,RSSPACE3,LOPBAN_1,HOLDER_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,NORMSP_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
schemes NAT_1,SEQ_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,REALSET1,STRUCT_0,RLVECT_1,LOPBAN_1,VALUED_0,RSSPACE,VALUED_1,FUNCT_2,NORMSP_0;
constructors PARTFUN1,BINOP_1,XXREAL_0,REAL_1,NAT_1,COMPLEX1,SEQ_2,SEQM_3,PREPOWER,SERIES_1,REALSET1,RLSUB_1,RSSPACE3,LOPBAN_1,SEQ_1,VALUED_1,RELSET_1,BINOP_2,RVSUM_1,CKB1,CKB2,CKB14;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
theorem
Th10: (for p being Real holds (1 <= p implies (for lp being non empty NORMSTR holds (lp = NORMSTR (# ( the_set_of_RealSequences_l^ p ),( Zero_ (( the_set_of_RealSequences_l^ p ),( Linear_Space_of_RealSequences )) ),( Add_ (( the_set_of_RealSequences_l^ p ),( Linear_Space_of_RealSequences )) ),( Mult_ (( the_set_of_RealSequences_l^ p ),( Linear_Space_of_RealSequences )) ),( l_norm^ p ) #) implies ((((((((((the carrier of lp) = ( the_set_of_RealSequences_l^ p ) & (for x being set holds (x is (VECTOR of lp) iff (x is Real_Sequence & ( ( seq_id x ) rto_power p ) is  summable)))) & ( 0. lp ) = ( Zeroseq )) & (for x being (VECTOR of lp) holds x = ( seq_id x ))) & (for x,y being (VECTOR of lp) holds ( x + y ) = ( ( seq_id x ) + ( seq_id y ) ))) & (for r being Real holds (for x being (VECTOR of lp) holds ( r * x ) = ( r (#) ( seq_id x ) )))) & (for x being (VECTOR of lp) holds (( - x ) = ( - ( seq_id x ) ) & ( seq_id ( - x ) ) = ( - ( seq_id x ) )))) & (for x,y being (VECTOR of lp) holds ( x - y ) = ( ( seq_id x ) - ( seq_id y ) ))) & (for x being (VECTOR of lp) holds ( ( seq_id x ) rto_power p ) is  summable)) & (for x being (VECTOR of lp) holds ||. x .|| = ( ( Sum ( ( seq_id x ) rto_power p ) ) to_power ( 1 / p ) )))))))
proof
let p being Real;
assume that
A1: 1 <= p;
let lp being non empty NORMSTR;
assume that
A2: lp = NORMSTR (# ( the_set_of_RealSequences_l^ p ),( Zero_ (( the_set_of_RealSequences_l^ p ),( Linear_Space_of_RealSequences )) ),( Add_ (( the_set_of_RealSequences_l^ p ),( Linear_Space_of_RealSequences )) ),( Mult_ (( the_set_of_RealSequences_l^ p ),( Linear_Space_of_RealSequences )) ),( l_norm^ p ) #);
A3: (for x being (VECTOR of lp) holds ||. x .|| = ( ( Sum ( ( seq_id x ) rto_power p ) ) to_power ( 1 / p ) )) by A2,CKB14:def 1;
A4: (for x,y being (VECTOR of lp) holds ( x + y ) = ( ( seq_id x ) + ( seq_id y ) ))
proof
let x being (VECTOR of lp),y being (VECTOR of lp);
A5: lp is (Subspace of ( Linear_Space_of_RealSequences )) by A1,A2,CKB16:1;
then reconsider x1 = x as (VECTOR of ( Linear_Space_of_RealSequences )) by RLSUB_1:10;
reconsider y1 = y as (VECTOR of ( Linear_Space_of_RealSequences )) by A5,RLSUB_1:10;
set L1 = ( Linear_Space_of_RealSequences );
set W = ( the_set_of_RealSequences_l^ p );
( dom (the addF of L1) ) = [: (the carrier of L1),(the carrier of L1) :] by FUNCT_2:def 1;
then A6: ( dom ( (the addF of ( Linear_Space_of_RealSequences )) || W ) ) = [: W,W :] by RELAT_1:62;
W is  linearly-closed by A1,CKB10:1;
then ( x + y ) = ( ( (the addF of ( Linear_Space_of_RealSequences )) || W ) . [ x,y ] ) by A2,RSSPACE:def 8
.= ( x1 + y1 ) by A2,A6,FUNCT_1:47;
hence thesis by RSSPACE:2,RSSPACE:def 7;
end;
A7: (for r being Real holds (for x being (VECTOR of lp) holds ( r * x ) = ( r (#) ( seq_id x ) )))
proof
set W = ( the_set_of_RealSequences_l^ p );
set L1 = ( Linear_Space_of_RealSequences );
let r being Real;
let x being (VECTOR of lp);
( dom (the Mult of L1) ) = [: ( REAL ),(the carrier of L1) :] by FUNCT_2:def 1;
then A8: ( dom ( (the Mult of ( Linear_Space_of_RealSequences )) | [: ( REAL ),W :] ) ) = [: ( REAL ),W :] by RELAT_1:62,ZFMISC_1:96;
lp is (Subspace of ( Linear_Space_of_RealSequences )) by A1,A2,CKB16:1;
then reconsider x1 = x as (VECTOR of ( Linear_Space_of_RealSequences )) by RLSUB_1:10;
W is  linearly-closed by A1,CKB10:1;
then ( r * x ) = ( ( (the Mult of ( Linear_Space_of_RealSequences )) | [: ( REAL ),W :] ) . [ r,x ] ) by A2,RSSPACE:def 9
.= ( r * x1 ) by A2,A8,FUNCT_1:47;
hence thesis by RSSPACE:3,RSSPACE:def 7;
end;
( the_set_of_RealSequences_l^ p ) is  linearly-closed by A1,CKB10:1;
then A9: ( 0. lp ) = ( 0. ( Linear_Space_of_RealSequences ) ) by A2,RSSPACE:def 10
.= ( Zeroseq ) by RSSPACE:def 7;
A10: (for x being set holds (x is (Element of lp) iff (x is Real_Sequence & ( ( seq_id x ) rto_power p ) is  summable)))
proof
let x being set;
(x in ( the_set_of_RealSequences_l^ p ) iff (( ( seq_id x ) rto_power p ) is  summable & x in ( the_set_of_RealSequences ))) by A1,CKB2:def 1;
hence thesis by A2,RSSPACE:def 1;
end;
A11: (for x being set holds (x is (VECTOR of lp) implies x = ( seq_id x )))
proof
let x being set;
(x in ( the_set_of_RealSequences ) iff x is Real_Sequence) by RSSPACE:def 1;
hence thesis by A1,A2,CKB2:def 1,RSSPACE:1;
end;
A12: (for x being (VECTOR of lp) holds (( - x ) = ( - ( seq_id x ) ) & ( seq_id ( - x ) ) = ( - ( seq_id x ) )))
proof
let x being (VECTOR of lp);
lp is (Subspace of ( Linear_Space_of_RealSequences )) by A1,A2,CKB16:1;
then ( - x ) = ( ( - 1 ) * x ) by RLVECT_1:16
.= ( - ( seq_id x ) ) by A7;
hence thesis by A11;
end;
(for x,y being (VECTOR of lp) holds ( x - y ) = ( ( seq_id x ) - ( seq_id y ) ))
proof
let x being (VECTOR of lp),y being (VECTOR of lp);
thus ( x - y ) = ( ( seq_id x ) + ( seq_id ( - y ) ) ) by A4
.= ( ( seq_id x ) - ( seq_id y ) ) by A12;
end;
hence thesis by A2,A10,A11,A9,A4,A7,A12,A3;
end;
