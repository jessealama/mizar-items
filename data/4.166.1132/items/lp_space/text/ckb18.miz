environ
vocabularies NUMBERS,SEQ_1,REAL_1,SUBSET_1,FUNCT_1,COMPLEX1,POWER,XXREAL_0,XBOOLE_0,RSSPACE,SERIES_1,CARD_1,TARSKI,RELAT_1,ARYTM_3,CARD_3,RLVECT_1,RSSPACE3,NORMSP_1,RLSUB_1,XXREAL_2,XREAL_0,ORDINAL1,VALUED_0,VALUED_1,ALGSTR_0,ZFMISC_1,STRUCT_0,SUPINF_2,REALSET1,ARYTM_1,SEQ_2,ORDINAL2,PRE_TOPC,NAT_1,LOPBAN_1,LP_SPACE,NORMSP_0,METRIC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELAT_1,FUNCT_1,REALSET1,PARTFUN1,FUNCT_2,PRE_TOPC,DOMAIN_1,XXREAL_0,XREAL_0,ORDINAL1,NUMBERS,RLVECT_1,COMPLEX1,REAL_1,NAT_1,STRUCT_0,ALGSTR_0,RLSUB_1,NORMSP_0,NORMSP_1,VALUED_1,SEQ_1,SEQ_2,SERIES_1,POWER,RSSPACE,RSSPACE3,LOPBAN_1,CKB1,CKB2,CKB14;
definitions TARSKI,REALSET1,BINOP_1,RLVECT_1,RLSUB_1,STRUCT_0,ALGSTR_0,VALUED_1,NORMSP_0,CKB1,CKB2,CKB14;
theorems XBOOLE_0,RELAT_1,TARSKI,ABSVALUE,ZFMISC_1,SEQ_1,SEQM_3,SERIES_1,COMSEQ_3,FUNCT_1,NAT_1,SEQ_2,FUNCT_2,RLVECT_1,RLSUB_1,NORMSP_1,XREAL_0,RSSPACE2,XCMPLX_1,SEQ_4,POWER,RSSPACE,RSSPACE3,LOPBAN_1,HOLDER_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,NORMSP_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes NAT_1,SEQ_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,REALSET1,STRUCT_0,RLVECT_1,LOPBAN_1,VALUED_0,RSSPACE,VALUED_1,FUNCT_2,NORMSP_0;
constructors PARTFUN1,BINOP_1,XXREAL_0,REAL_1,NAT_1,COMPLEX1,SEQ_2,SEQM_3,PREPOWER,SERIES_1,REALSET1,RLSUB_1,RSSPACE3,LOPBAN_1,SEQ_1,VALUED_1,RELSET_1,BINOP_2,RVSUM_1,CKB1,CKB2,CKB14;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
theorem
Th11: (for p being Real holds (p >= 1 implies (for rseq being Real_Sequence holds ((for n being (Element of ( NAT )) holds ( rseq . n ) = ( 0 )) implies (( rseq rto_power p ) is  summable & ( ( Sum ( rseq rto_power p ) ) to_power ( 1 / p ) ) = ( 0 ))))))
proof
let p being Real;
assume that
A1: p >= 1;
A2: ( 1 / p ) > ( 0 ) by A1,XREAL_1:139;
let rseq being Real_Sequence;
assume that
A3: (for n being (Element of ( NAT )) holds ( rseq . n ) = ( 0 ));
A4: (for n being (Element of ( NAT )) holds ( ( rseq rto_power p ) . n ) = ( 0 ))
proof
let n being (Element of ( NAT ));
( rseq . n ) = ( 0 ) by A3;
then ( abs ( rseq . n ) ) = ( 0 ) by ABSVALUE:2;
then ( ( abs ( rseq . n ) ) to_power p ) = ( 0 ) by A1,POWER:def 2;
hence thesis by CKB1:def 1;
end;
A5: (for m being (Element of ( NAT )) holds ( ( Partial_Sums ( rseq rto_power p ) ) . m ) = ( 0 ))
proof
defpred P[ (Element of ( NAT )) ]
 means
( ( rseq rto_power p ) . $1 ) = ( ( Partial_Sums ( rseq rto_power p ) ) . $1 );
let m being (Element of ( NAT ));
A6: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being (Element of ( NAT ));
assume that
A7: ( ( rseq rto_power p ) . k ) = ( ( Partial_Sums ( rseq rto_power p ) ) . k );
thus ( ( rseq rto_power p ) . ( k + 1 ) ) = ( ( 0 ) + ( ( rseq rto_power p ) . ( k + 1 ) ) )
.= ( ( ( rseq rto_power p ) . k ) + ( ( rseq rto_power p ) . ( k + 1 ) ) ) by A4
.= ( ( Partial_Sums ( rseq rto_power p ) ) . ( k + 1 ) ) by A7,SERIES_1:def 1;
end;
A8: P[ ( 0 ) ] by SERIES_1:def 1;
(for n being (Element of ( NAT )) holds P[ n ]) from NAT_1:sch 1(A8,A6);
hence ( ( Partial_Sums ( rseq rto_power p ) ) . m ) = ( ( rseq rto_power p ) . m )
.= ( 0 ) by A4;
end;
A9: (for e being  real number holds (( 0 ) < e implies (ex n being (Element of ( NAT )) st (for m being (Element of ( NAT )) holds (n <= m implies ( abs ( ( ( Partial_Sums ( rseq rto_power p ) ) . m ) - ( 0 ) ) ) < e)))))
proof
let e being  real number;
assume that
A10: ( 0 ) < e;
take ( 0 );
let m being (Element of ( NAT ));
assume that
( 0 ) <= m;
( abs ( ( ( Partial_Sums ( rseq rto_power p ) ) . m ) - ( 0 ) ) ) = ( abs ( ( 0 ) - ( 0 ) ) ) by A5
.= ( 0 ) by ABSVALUE:def 1;
hence thesis by A10;
end;
then A11: ( Partial_Sums ( rseq rto_power p ) ) is  convergent by SEQ_2:def 6;
then ( lim ( Partial_Sums ( rseq rto_power p ) ) ) = ( 0 ) by A9,SEQ_2:def 7;
then ( Sum ( rseq rto_power p ) ) = ( 0 ) by SERIES_1:def 3;
hence thesis by A2,A11,POWER:def 2,SERIES_1:def 2;
end;
