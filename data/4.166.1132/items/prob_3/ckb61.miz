environ
vocabularies NUMBERS,NAT_1,XREAL_0,ORDINAL1,PROB_1,FINSEQ_1,ZFMISC_1,XBOOLE_0,CARD_1,ARYTM_3,XXREAL_0,ARYTM_1,RELAT_1,SEQ_1,FUNCT_1,SEQ_2,ORDINAL2,SUBSET_1,COMPLEX1,RPR_1,TARSKI,VALUED_0,EQREL_1,CARD_3,PROB_2,SERIES_1,XXREAL_2,FINSEQ_2,SETFAM_1,BINOP_2,SETWISEO,FINSOP_1,SEQM_3,SETLIM_2,PROB_3,SEQ_4;
notations FINSEQ_1,ORDINAL1,CARD_3,REAL_1,RELAT_1,TARSKI,XBOOLE_0,RVSUM_1,FINSOP_1,SUBSET_1,NUMBERS,XCMPLX_0,XREAL_0,SETFAM_1,BINOP_1,SETWOP_2,BINOP_2,SETWISEO,NAT_1,FINSEQ_2,COMPLEX1,SEQ_1,SEQ_2,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,PROB_1,PROB_2,KURATO_0,SETLIM_2,SEQM_3,SETLIM_1,RINFSUP1,SERIES_1,XXREAL_0,CKB9,CKB10,CKB19,CKB25,CKB56,CKB59;
definitions TARSKI,XBOOLE_0,RELAT_1,FINSEQ_1,FINSEQ_2,CKB9,CKB10,CKB19,CKB25;
theorems FUNCT_1,FUNCT_2,SEQ_1,ABSVALUE,SEQ_2,SUBSET_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,PROB_2,SETLIM_2,RINFSUP1,RELAT_1,SETFAM_1,ZFMISC_1,SEQM_3,CARD_3,SETLIM_1,PROB_1,FINSUB_1,SERIES_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,RVSUM_1,FINSOP_1,SETWISEO,BINOP_2,XREAL_1,XXREAL_0,ORDINAL1,VALUED_0,FUNCOP_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB57,CKB58,CKB60;
schemes CLASSES1,NAT_1,RECDEF_1,FINSEQ_2,PARTFUN1;
registrations SUBSET_1,ORDINAL1,RELSET_1,NUMBERS,XREAL_0,NAT_1,MEMBERED,PROB_1,VALUED_0,SEQ_2,FINSEQ_1,CKB26,CKB27,CKB28,CKB29;
constructors SETFAM_1,PARTFUN1,SETWISEO,XXREAL_0,REAL_1,NAT_1,BINOP_2,COMPLEX1,SEQ_2,SEQM_3,PROB_2,FINSOP_1,RVSUM_1,SERIES_1,BINOP_1,KURATO_0,SETLIM_1,RINFSUP1,SETLIM_2,SEQ_1,PROB_1,RELSET_1,SETWOP_2,CKB9,CKB10,CKB19,CKB25,CKB56,CKB59;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for Nat;
reserve X for set;
reserve F1 for (FinSequence of ( bool X ));
definition
let X;
let F1;
func Complement F1 -> (FinSequence of ( bool X ))
means
:Def8: (( len it ) = ( len F1 ) & (for n holds (n in ( dom it ) implies ( it . n ) = ( ( F1 . n ) ` ))));
existence
proof
deffunc F(Nat) = ( ( F1 . $1 ) ` );
consider f being (FinSequence of ( bool X )) such that A1: (( len f ) = ( len F1 ) & (for n being Nat holds (n in ( dom f ) implies ( f . n ) = F(n)))) from FINSEQ_2:sch 1;
take f;
thus thesis by A1;
end;
uniqueness
proof
let F2 being (FinSequence of ( bool X )),F3 being (FinSequence of ( bool X ));
assume that
A2: ( len F2 ) = ( len F1 )
and
A3: (for n holds (n in ( dom F2 ) implies ( F2 . n ) = ( ( F1 . n ) ` )))
and
A4: ( len F3 ) = ( len F1 )
and
A5: (for n holds (n in ( dom F3 ) implies ( F3 . n ) = ( ( F1 . n ) ` )));
(( dom F2 ) = ( dom F3 ) & (for k being Nat holds (k in ( dom F2 ) implies ( F2 . k ) = ( F3 . k ))))
proof
thus A6: ( dom F2 ) = ( Seg ( len F3 ) ) by A2,A4,FINSEQ_1:def 3
.= ( dom F3 ) by FINSEQ_1:def 3;
let k being Nat;
assume A7: k in ( dom F2 );
hence ( F2 . k ) = ( ( F1 . k ) ` ) by A3
.= ( F3 . k ) by A5,A6,A7;
end;
hence thesis by FINSEQ_1:13;
end;
end;
