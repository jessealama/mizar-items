environ
vocabularies NUMBERS,NAT_1,XREAL_0,ORDINAL1,PROB_1,FINSEQ_1,ZFMISC_1,XBOOLE_0,CARD_1,ARYTM_3,XXREAL_0,ARYTM_1,RELAT_1,SEQ_1,FUNCT_1,SEQ_2,ORDINAL2,SUBSET_1,COMPLEX1,RPR_1,TARSKI,VALUED_0,EQREL_1,CARD_3,PROB_2,SERIES_1,XXREAL_2,FINSEQ_2,SETFAM_1,BINOP_2,SETWISEO,FINSOP_1,SEQM_3,SETLIM_2,PROB_3,SEQ_4;
notations FINSEQ_1,ORDINAL1,CARD_3,REAL_1,RELAT_1,TARSKI,XBOOLE_0,RVSUM_1,FINSOP_1,SUBSET_1,NUMBERS,XCMPLX_0,XREAL_0,SETFAM_1,BINOP_1,SETWOP_2,BINOP_2,SETWISEO,NAT_1,FINSEQ_2,COMPLEX1,SEQ_1,SEQ_2,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,PROB_1,PROB_2,KURATO_0,SETLIM_2,SEQM_3,SETLIM_1,RINFSUP1,SERIES_1,XXREAL_0,CKB9,CKB10,CKB19,CKB25,CKB56,CKB59,CKB61,CKB62,CKB69,CKB70;
definitions TARSKI,XBOOLE_0,RELAT_1,FINSEQ_1,FINSEQ_2,CKB9,CKB10,CKB19,CKB25,CKB61,CKB62;
theorems FUNCT_1,FUNCT_2,SEQ_1,ABSVALUE,SEQ_2,SUBSET_1,NAT_1,TARSKI,XBOOLE_0,XBOOLE_1,PROB_2,SETLIM_2,RINFSUP1,RELAT_1,SETFAM_1,ZFMISC_1,SEQM_3,CARD_3,SETLIM_1,PROB_1,FINSUB_1,SERIES_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,RVSUM_1,FINSOP_1,SETWISEO,BINOP_2,XREAL_1,XXREAL_0,ORDINAL1,VALUED_0,FUNCOP_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB57,CKB58,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB71,CKB72,CKB74;
schemes CLASSES1,NAT_1,RECDEF_1,FINSEQ_2,PARTFUN1;
registrations SUBSET_1,ORDINAL1,RELSET_1,NUMBERS,XREAL_0,NAT_1,MEMBERED,PROB_1,VALUED_0,SEQ_2,FINSEQ_1,CKB26,CKB27,CKB28,CKB29,CKB73;
constructors SETFAM_1,PARTFUN1,SETWISEO,XXREAL_0,REAL_1,NAT_1,BINOP_2,COMPLEX1,SEQ_2,SEQM_3,PROB_2,FINSOP_1,RVSUM_1,SERIES_1,BINOP_1,KURATO_0,SETLIM_1,RINFSUP1,SETLIM_2,SEQ_1,PROB_1,RELSET_1,SETWOP_2,CKB9,CKB10,CKB19,CKB25,CKB56,CKB59,CKB61,CKB62,CKB69,CKB70;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve Omega for non  empty set;
reserve Sigma for (SigmaField of Omega);
reserve P for (Probability of Sigma);
reserve FSeq for (FinSequence of Sigma);
theorem
Th64: ( dom ( P * FSeq ) ) = ( dom FSeq )
proof
(for x holds (x in ( dom ( P * FSeq ) ) iff x in ( dom FSeq )))
proof
let x;
thus (x in ( dom ( P * FSeq ) ) implies x in ( dom FSeq )) by FUNCT_1:11;
assume A1: x in ( dom FSeq );
then reconsider k = x as (Element of ( NAT ));
( FSeq . k ) in Sigma;
then ( FSeq . k ) in ( dom P ) by FUNCT_2:def 1;
hence thesis by A1,FUNCT_1:11;
end;
hence thesis by TARSKI:1;
end;
