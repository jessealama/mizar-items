environ
vocabularies RLVECT_1,ALGSTR_0,XBOOLE_0,SUBSET_1,ARYTM_1,SUPINF_2,ARYTM_3,VECTSP_1,PARSP_1,ZFMISC_1,STRUCT_0,MCART_1,RELAT_1,GROUP_1,MESFUNC1,PARSP_2;
notations ZFMISC_1,SUBSET_1,MCART_1,DOMAIN_1,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,PARSP_1;
theorems MCART_1,VECTSP_1,PARSP_1,RLVECT_1,GROUP_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
registrations XBOOLE_0,STRUCT_0,VECTSP_1,PARSP_1;
constructors DOMAIN_1,PARSP_1;
begin
reserve F for Field;
reserve K for (Element of F);
reserve L for (Element of F);
reserve R for (Element of F);
theorem
Lm8: (( ( L * K ) - ( L * R ) ) = ( R + K ) implies ( ( L - ( 1_ F ) ) * K ) = ( ( L + ( 1_ F ) ) * R ))
proof
assume ( ( L * K ) - ( L * R ) ) = ( R + K );
then ( ( ( L * K ) + ( - ( L * R ) ) ) + ( - K ) ) = ( ( R + K ) + ( - K ) ) by RLVECT_1:def 11
.= ( R + ( K + ( - K ) ) ) by RLVECT_1:def 3
.= ( R + ( 0. F ) ) by RLVECT_1:5
.= R by RLVECT_1:4;
then ( ( ( L * K ) + ( - K ) ) + ( - ( L * R ) ) ) = R by RLVECT_1:def 3;
then ( ( ( L * K ) + ( - ( ( 1_ F ) * K ) ) ) + ( - ( L * R ) ) ) = R by VECTSP_1:def 8;
then ( ( ( L * K ) + ( ( - ( 1_ F ) ) * K ) ) + ( - ( L * R ) ) ) = R by VECTSP_1:9;
then ( ( ( L + ( - ( 1_ F ) ) ) * K ) + ( - ( L * R ) ) ) = R by VECTSP_1:def 7;
then ( ( ( ( L - ( 1_ F ) ) * K ) + ( - ( L * R ) ) ) + ( L * R ) ) = ( R + ( L * R ) ) by RLVECT_1:def 11;
then ( ( ( L - ( 1_ F ) ) * K ) + ( ( - ( L * R ) ) + ( L * R ) ) ) = ( R + ( L * R ) ) by RLVECT_1:def 3;
then ( ( ( L - ( 1_ F ) ) * K ) + ( 0. F ) ) = ( R + ( L * R ) ) by RLVECT_1:5;
then ( ( L - ( 1_ F ) ) * K ) = ( ( L * R ) + R ) by RLVECT_1:4
.= ( ( L * R ) + ( ( 1_ F ) * R ) ) by VECTSP_1:def 8;
hence thesis by VECTSP_1:def 7;
end;
