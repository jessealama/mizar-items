environ
vocabularies RLVECT_1,ALGSTR_0,XBOOLE_0,SUBSET_1,ARYTM_1,SUPINF_2,ARYTM_3,VECTSP_1,PARSP_1,ZFMISC_1,STRUCT_0,MCART_1,RELAT_1,GROUP_1,MESFUNC1,PARSP_2;
notations ZFMISC_1,SUBSET_1,MCART_1,DOMAIN_1,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,PARSP_1;
theorems MCART_1,VECTSP_1,PARSP_1,RLVECT_1,GROUP_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
registrations XBOOLE_0,STRUCT_0,VECTSP_1,PARSP_1;
constructors DOMAIN_1,PARSP_1;
begin
reserve F for Field;
reserve a for (Element of ( MPS F ));
reserve b for (Element of ( MPS F ));
reserve c for (Element of ( MPS F ));
reserve d for (Element of ( MPS F ));
reserve e for (Element of [: (the carrier of F),(the carrier of F),(the carrier of F) :]);
reserve f for (Element of [: (the carrier of F),(the carrier of F),(the carrier of F) :]);
reserve g for (Element of [: (the carrier of F),(the carrier of F),(the carrier of F) :]);
reserve h for (Element of [: (the carrier of F),(the carrier of F),(the carrier of F) :]);
reserve i for (Element of [: (the carrier of F),(the carrier of F),(the carrier of F) :]);
reserve j for (Element of [: (the carrier of F),(the carrier of F),(the carrier of F) :]);
reserve k for (Element of [: (the carrier of F),(the carrier of F),(the carrier of F) :]);
reserve l for (Element of [: (the carrier of F),(the carrier of F),(the carrier of F) :]);
reserve K for (Element of F);
reserve L for (Element of F);
theorem
Th7: ((((( ( 1_ F ) + ( 1_ F ) ) <> ( 0. F ) & b,c '||' a,d) & a,b '||' c,d) & a,c '||' b,d) implies a,b '||' a,c)
proof
assume that
A1: ( ( 1_ F ) + ( 1_ F ) ) <> ( 0. F )
and
A2: b,c '||' a,d
and
A3: a,b '||' c,d
and
A4: a,c '||' b,d;
assume A5: (not thesis);
consider i,j,k,l such that A6: [ b,c,a,d ] = [ i,j,k,l ] and A7: ((ex L st ((( L * ( ( i `1 ) - ( j `1 ) ) ) = ( ( k `1 ) - ( l `1 ) ) & ( L * ( ( i `2 ) - ( j `2 ) ) ) = ( ( k `2 ) - ( l `2 ) )) & ( L * ( ( i `3 ) - ( j `3 ) ) ) = ( ( k `3 ) - ( l `3 ) ))) or ((( ( i `1 ) - ( j `1 ) ) = ( 0. F ) & ( ( i `2 ) - ( j `2 ) ) = ( 0. F )) & ( ( i `3 ) - ( j `3 ) ) = ( 0. F ))) by A2,CKB5:1;
A8: (b = i & c = j) by A6,MCART_1:29;
A9: (a = k & d = l) by A6,MCART_1:29;
consider e,f,g,h such that A10: [ a,b,c,d ] = [ e,f,g,h ] and ((ex K st ((( K * ( ( e `1 ) - ( f `1 ) ) ) = ( ( g `1 ) - ( h `1 ) ) & ( K * ( ( e `2 ) - ( f `2 ) ) ) = ( ( g `2 ) - ( h `2 ) )) & ( K * ( ( e `3 ) - ( f `3 ) ) ) = ( ( g `3 ) - ( h `3 ) ))) or ((( ( e `1 ) - ( f `1 ) ) = ( 0. F ) & ( ( e `2 ) - ( f `2 ) ) = ( 0. F )) & ( ( e `3 ) - ( f `3 ) ) = ( 0. F ))) by A3,CKB5:1;
A11: b = f by A10,MCART_1:29;
A12: d = h by A10,MCART_1:29;
A13: c = g by A10,MCART_1:29;
A14: a = e by A10,MCART_1:29;
then A15: [ a,b,a,c ] = [ e,f,e,g ] by A10,A11,MCART_1:29;
(f = [ ( f `1 ),( f `2 ),( f `3 ) ] & g = [ ( g `1 ),( g `2 ),( g `3 ) ]) by MCART_1:44;
then ((( i `1 ) <> ( j `1 ) or ( i `2 ) <> ( j `2 )) or ( i `3 ) <> ( j `3 )) by A5,A11,A13,A15,A8,CKB6:1;
then consider L such that A16: ( L * ( ( f `1 ) - ( g `1 ) ) ) = ( ( e `1 ) - ( h `1 ) ) and A17: ( L * ( ( f `2 ) - ( g `2 ) ) ) = ( ( e `2 ) - ( h `2 ) ) and A18: ( L * ( ( f `3 ) - ( g `3 ) ) ) = ( ( e `3 ) - ( h `3 ) ) by A14,A11,A13,A12,A7,A8,A9,CKB2:1;
( h `2 ) = ( ( ( f `2 ) + ( g `2 ) ) - ( e `2 ) ) by A3,A4,A5,A10,CKB12:1;
then A19: ( ( L - ( 1_ F ) ) * ( ( e `2 ) - ( g `2 ) ) ) = ( ( L + ( 1_ F ) ) * ( ( e `2 ) - ( f `2 ) ) ) by A17,CKB14:1;
( h `3 ) = ( ( ( f `3 ) + ( g `3 ) ) - ( e `3 ) ) by A3,A4,A5,A10,CKB12:1;
then A20: ( ( L - ( 1_ F ) ) * ( ( e `3 ) - ( g `3 ) ) ) = ( ( L + ( 1_ F ) ) * ( ( e `3 ) - ( f `3 ) ) ) by A18,CKB14:1;
( h `1 ) = ( ( ( f `1 ) + ( g `1 ) ) - ( e `1 ) ) by A3,A4,A5,A10,CKB12:1;
then ( ( L - ( 1_ F ) ) * ( ( e `1 ) - ( g `1 ) ) ) = ( ( L + ( 1_ F ) ) * ( ( e `1 ) - ( f `1 ) ) ) by A16,CKB14:1;
then (( L + ( 1_ F ) ) = ( 0. F ) & ( L - ( 1_ F ) ) = ( 0. F )) by A5,A15,A19,A20,CKB7:1;
then ( ( L + ( 1_ F ) ) - ( L - ( 1_ F ) ) ) = ( ( 0. F ) + ( - ( 0. F ) ) ) by RLVECT_1:def 11;
then ( ( L + ( 1_ F ) ) - ( L - ( 1_ F ) ) ) = ( 0. F ) by RLVECT_1:5;
then ( ( L + ( 1_ F ) ) + ( - ( L - ( 1_ F ) ) ) ) = ( 0. F ) by RLVECT_1:def 11;
then ( ( L + ( 1_ F ) ) + ( ( 1_ F ) + ( - L ) ) ) = ( 0. F ) by RLVECT_1:33;
then ( ( ( L + ( 1_ F ) ) + ( 1_ F ) ) + ( - L ) ) = ( 0. F ) by RLVECT_1:def 3;
then ( ( ( ( 1_ F ) + ( 1_ F ) ) + L ) + ( - L ) ) = ( 0. F ) by RLVECT_1:def 3;
then ( ( ( 1_ F ) + ( 1_ F ) ) + ( L + ( - L ) ) ) = ( 0. F ) by RLVECT_1:def 3;
then ( ( ( 1_ F ) + ( 1_ F ) ) + ( 0. F ) ) = ( 0. F ) by RLVECT_1:5;
hence contradiction by A1,RLVECT_1:4;
end;
