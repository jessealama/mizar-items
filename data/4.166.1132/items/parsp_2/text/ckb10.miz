environ
vocabularies RLVECT_1,ALGSTR_0,XBOOLE_0,SUBSET_1,ARYTM_1,SUPINF_2,ARYTM_3,VECTSP_1,PARSP_1,ZFMISC_1,STRUCT_0,MCART_1,RELAT_1,GROUP_1,MESFUNC1,PARSP_2;
notations ZFMISC_1,SUBSET_1,MCART_1,DOMAIN_1,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,PARSP_1;
theorems MCART_1,VECTSP_1,PARSP_1,RLVECT_1,GROUP_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9;
registrations XBOOLE_0,STRUCT_0,VECTSP_1,PARSP_1;
constructors DOMAIN_1,PARSP_1;
begin
reserve F for Field;
reserve K for (Element of F);
reserve L for (Element of F);
reserve M for (Element of F);
reserve N for (Element of F);
reserve S for (Element of F);
theorem
Lm6: (( ( K * ( N - M ) ) - ( L * ( N - S ) ) ) = ( S - M ) implies ( ( K + ( - ( 1_ F ) ) ) * ( N - M ) ) = ( ( L + ( - ( 1_ F ) ) ) * ( N - S ) ))
proof
assume ( ( K * ( N - M ) ) - ( L * ( N - S ) ) ) = ( S - M );
then ( ( K * ( N - M ) ) - ( L * ( N - S ) ) ) = ( S + ( - M ) ) by RLVECT_1:def 11
.= ( ( S + ( - M ) ) + ( 0. F ) ) by RLVECT_1:4
.= ( ( ( - M ) + S ) + ( ( - N ) + N ) ) by RLVECT_1:5
.= ( S + ( ( ( - N ) + N ) + ( - M ) ) ) by RLVECT_1:def 3
.= ( S + ( ( - N ) + ( N + ( - M ) ) ) ) by RLVECT_1:def 3
.= ( S + ( ( - N ) + ( N - M ) ) ) by RLVECT_1:def 11
.= ( ( S + ( - N ) ) + ( N - M ) ) by RLVECT_1:def 3
.= ( ( S - N ) + ( N - M ) ) by RLVECT_1:def 11;
then ( ( ( K * ( N - M ) ) + ( - ( L * ( N - S ) ) ) ) + ( L * ( N - S ) ) ) = ( ( ( S - N ) + ( N - M ) ) + ( L * ( N - S ) ) ) by RLVECT_1:def 11;
then ( ( K * ( N - M ) ) + ( ( - ( L * ( N - S ) ) ) + ( L * ( N - S ) ) ) ) = ( ( ( S - N ) + ( N - M ) ) + ( L * ( N - S ) ) ) by RLVECT_1:def 3;
then ( ( K * ( N - M ) ) + ( 0. F ) ) = ( ( ( S - N ) + ( N - M ) ) + ( L * ( N - S ) ) ) by RLVECT_1:5;
then ( K * ( N - M ) ) = ( ( ( S - N ) + ( N - M ) ) + ( L * ( N - S ) ) ) by RLVECT_1:4
.= ( ( ( S - N ) + ( L * ( N - S ) ) ) + ( N - M ) ) by RLVECT_1:def 3;
then ( ( K * ( N - M ) ) + ( - ( N - M ) ) ) = ( ( ( S - N ) + ( L * ( N - S ) ) ) + ( ( N - M ) + ( - ( N - M ) ) ) ) by RLVECT_1:def 3
.= ( ( ( S - N ) + ( L * ( N - S ) ) ) + ( 0. F ) ) by RLVECT_1:5
.= ( ( S - N ) + ( L * ( N - S ) ) ) by RLVECT_1:4
.= ( ( S + ( - N ) ) + ( L * ( N - S ) ) ) by RLVECT_1:def 11
.= ( ( L * ( N - S ) ) + ( - ( N - S ) ) ) by RLVECT_1:33;
then ( ( K * ( N - M ) ) + ( - ( ( 1_ F ) * ( N - M ) ) ) ) = ( ( L * ( N - S ) ) + ( - ( N - S ) ) ) by VECTSP_1:def 8;
then ( ( K * ( N - M ) ) + ( ( - ( 1_ F ) ) * ( N - M ) ) ) = ( ( L * ( N - S ) ) + ( - ( N - S ) ) ) by VECTSP_1:9;
then ( ( K + ( - ( 1_ F ) ) ) * ( N - M ) ) = ( ( L * ( N - S ) ) + ( - ( N - S ) ) ) by VECTSP_1:def 7
.= ( ( L * ( N - S ) ) + ( - ( ( 1_ F ) * ( N - S ) ) ) ) by VECTSP_1:def 8
.= ( ( L * ( N - S ) ) + ( ( - ( 1_ F ) ) * ( N - S ) ) ) by VECTSP_1:9;
hence thesis by VECTSP_1:def 7;
end;
