environ
vocabularies RLVECT_1,ALGSTR_0,XBOOLE_0,SUBSET_1,ARYTM_1,SUPINF_2,ARYTM_3,VECTSP_1,PARSP_1,ZFMISC_1,STRUCT_0,MCART_1,RELAT_1,GROUP_1,MESFUNC1,PARSP_2;
notations ZFMISC_1,SUBSET_1,MCART_1,DOMAIN_1,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,PARSP_1;
theorems MCART_1,VECTSP_1,PARSP_1,RLVECT_1,GROUP_1;
registrations XBOOLE_0,STRUCT_0,VECTSP_1,PARSP_1;
constructors DOMAIN_1,PARSP_1;
begin
theorem
Lm1: (for F being  add-associative  right_zeroed  right_complementable non empty addLoopStr holds (for a,b being (Element of F) holds (( a - b ) = ( 0. F ) implies a = b)))
proof
let F being  add-associative  right_zeroed  right_complementable non empty addLoopStr;
let a being (Element of F),b being (Element of F);
assume ( a - b ) = ( 0. F );
then ( a + ( - b ) ) = ( 0. F ) by RLVECT_1:def 11;
then a = ( - ( - b ) ) by RLVECT_1:6;
hence thesis by RLVECT_1:17;
end;
