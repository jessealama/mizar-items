environ
vocabularies RLVECT_1,ALGSTR_0,XBOOLE_0,SUBSET_1,ARYTM_1,SUPINF_2,ARYTM_3,VECTSP_1,PARSP_1,ZFMISC_1,STRUCT_0,MCART_1,RELAT_1,GROUP_1,MESFUNC1,PARSP_2;
notations ZFMISC_1,SUBSET_1,MCART_1,DOMAIN_1,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,PARSP_1;
theorems MCART_1,VECTSP_1,PARSP_1,RLVECT_1,GROUP_1,CKB1,CKB2,CKB3,CKB4,CKB5;
registrations XBOOLE_0,STRUCT_0,VECTSP_1,PARSP_1;
constructors DOMAIN_1,PARSP_1;
begin
reserve F for Field;
reserve a for (Element of ( MPS F ));
reserve b for (Element of ( MPS F ));
reserve c for (Element of ( MPS F ));
reserve e for (Element of [: (the carrier of F),(the carrier of F),(the carrier of F) :]);
reserve f for (Element of [: (the carrier of F),(the carrier of F),(the carrier of F) :]);
reserve g for (Element of [: (the carrier of F),(the carrier of F),(the carrier of F) :]);
theorem
Th3: (((not a,b '||' a,c) & [ a,b,a,c ] = [ e,f,e,g ]) implies ((e <> f & e <> g) & f <> g))
proof
assume A1: ((not a,b '||' a,c) & [ a,b,a,c ] = [ e,f,e,g ]);
then ((( ( 0. F ) * ( ( e `1 ) - ( f `1 ) ) ) <> ( ( e `1 ) - ( g `1 ) ) or ( ( 0. F ) * ( ( e `2 ) - ( f `2 ) ) ) <> ( ( e `2 ) - ( g `2 ) )) or ( ( 0. F ) * ( ( e `3 ) - ( f `3 ) ) ) <> ( ( e `3 ) - ( g `3 ) )) by CKB5:1;
then A2: ((( 0. F ) <> ( ( e `1 ) - ( g `1 ) ) or ( 0. F ) <> ( ( e `2 ) - ( g `2 ) )) or ( 0. F ) <> ( ( e `3 ) - ( g `3 ) )) by VECTSP_1:12;
A3: f <> g
proof
assume A4: (not thesis);
((( ( ( e `1 ) - ( f `1 ) ) * ( 1_ F ) ) <> ( ( e `1 ) - ( g `1 ) ) or ( ( ( e `2 ) - ( f `2 ) ) * ( 1_ F ) ) <> ( ( e `2 ) - ( g `2 ) )) or ( ( ( e `3 ) - ( f `3 ) ) * ( 1_ F ) ) <> ( ( e `3 ) - ( g `3 ) )) by A1,CKB5:1;
hence contradiction by A4,VECTSP_1:def 8;
end;
((( ( e `1 ) - ( f `1 ) ) <> ( 0. F ) or ( ( e `2 ) - ( f `2 ) ) <> ( 0. F )) or ( ( e `3 ) - ( f `3 ) ) <> ( 0. F )) by A1,CKB5:1;
hence thesis by A2,A3,RLVECT_1:15;
end;
