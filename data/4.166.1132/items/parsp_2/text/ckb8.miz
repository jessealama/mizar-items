environ
vocabularies RLVECT_1,ALGSTR_0,XBOOLE_0,SUBSET_1,ARYTM_1,SUPINF_2,ARYTM_3,VECTSP_1,PARSP_1,ZFMISC_1,STRUCT_0,MCART_1,RELAT_1,GROUP_1,MESFUNC1,PARSP_2;
notations ZFMISC_1,SUBSET_1,MCART_1,DOMAIN_1,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,PARSP_1;
theorems MCART_1,VECTSP_1,PARSP_1,RLVECT_1,GROUP_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7;
registrations XBOOLE_0,STRUCT_0,VECTSP_1,PARSP_1;
constructors DOMAIN_1,PARSP_1;
begin
reserve F for Field;
reserve a for (Element of ( MPS F ));
reserve b for (Element of ( MPS F ));
reserve c for (Element of ( MPS F ));
theorem
Lm4: (for F being  add-associative  right_zeroed  right_complementable non  empty addLoopStr holds (for a,b,c being (Element of F) holds ( ( b + a ) - ( c + a ) ) = ( b - c )))
proof
let F being  add-associative  right_zeroed  right_complementable non  empty addLoopStr;
let a being (Element of F);
let b being (Element of F);
let c being (Element of F);
thus ( ( b + a ) - ( c + a ) ) = ( ( b + a ) + ( - ( c + a ) ) ) by RLVECT_1:def 11
.= ( ( b + a ) + ( ( - a ) + ( - c ) ) ) by RLVECT_1:31
.= ( ( ( b + a ) + ( - a ) ) + ( - c ) ) by RLVECT_1:def 3
.= ( ( b + ( a + ( - a ) ) ) + ( - c ) ) by RLVECT_1:def 3
.= ( ( b + ( 0. F ) ) + ( - c ) ) by RLVECT_1:def 10
.= ( b + ( - c ) ) by RLVECT_1:4
.= ( b - c ) by RLVECT_1:def 11;
end;
