environ
vocabularies RLVECT_1,ALGSTR_0,XBOOLE_0,SUBSET_1,ARYTM_1,SUPINF_2,ARYTM_3,VECTSP_1,PARSP_1,ZFMISC_1,STRUCT_0,MCART_1,RELAT_1,GROUP_1,MESFUNC1,PARSP_2;
notations ZFMISC_1,SUBSET_1,MCART_1,DOMAIN_1,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,PARSP_1;
theorems MCART_1,VECTSP_1,PARSP_1,RLVECT_1,GROUP_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
registrations XBOOLE_0,STRUCT_0,VECTSP_1,PARSP_1;
constructors DOMAIN_1,PARSP_1;
begin
reserve F for Field;
reserve K for (Element of F);
reserve L for (Element of F);
reserve M for (Element of F);
reserve N for (Element of F);
reserve R for (Element of F);
reserve S for (Element of F);
theorem
Lm10: ((K = ( ( L + M ) - N ) & R = ( ( L + S ) - N )) implies ( ( 1_ F ) * ( M - S ) ) = ( K - R ))
proof
assume that
A1: K = ( ( L + M ) - N )
and
A2: R = ( ( L + S ) - N );
( - R ) = ( - ( ( L + S ) + ( - N ) ) ) by A2,RLVECT_1:def 11
.= ( ( - ( L + S ) ) + ( - ( - N ) ) ) by RLVECT_1:31
.= ( ( - ( L + S ) ) + N ) by RLVECT_1:17
.= ( ( ( - L ) + ( - S ) ) + N ) by RLVECT_1:31;
then ( K - R ) = ( ( ( L + M ) - N ) + ( ( ( - L ) + ( - S ) ) + N ) ) by A1,RLVECT_1:def 11
.= ( ( ( M + L ) + ( - N ) ) + ( ( ( - L ) + ( - S ) ) + N ) ) by RLVECT_1:def 11
.= ( ( ( M + L ) + ( - N ) ) + ( ( - S ) + ( ( - L ) + N ) ) ) by RLVECT_1:def 3
.= ( ( M + ( L + ( - N ) ) ) + ( ( - S ) + ( ( - L ) + N ) ) ) by RLVECT_1:def 3
.= ( ( M + ( L - N ) ) + ( ( - S ) + ( ( - L ) + N ) ) ) by RLVECT_1:def 11
.= ( ( M + ( L - N ) ) + ( ( - S ) + ( ( - L ) + ( - ( - N ) ) ) ) ) by RLVECT_1:17
.= ( ( M + ( L - N ) ) + ( ( - S ) + ( - ( L + ( - N ) ) ) ) ) by RLVECT_1:31
.= ( ( M + ( L - N ) ) + ( ( - ( L - N ) ) + ( - S ) ) ) by RLVECT_1:def 11
.= ( ( ( M + ( L - N ) ) + ( - ( L - N ) ) ) + ( - S ) ) by RLVECT_1:def 3
.= ( ( M + ( ( L - N ) + ( - ( L - N ) ) ) ) + ( - S ) ) by RLVECT_1:def 3
.= ( ( M + ( 0. F ) ) + ( - S ) ) by RLVECT_1:5
.= ( M + ( - S ) ) by RLVECT_1:4
.= ( ( M * ( 1_ F ) ) + ( - S ) ) by VECTSP_1:def 8
.= ( ( M * ( 1_ F ) ) + ( ( - S ) * ( 1_ F ) ) ) by VECTSP_1:def 8
.= ( ( M + ( - S ) ) * ( 1_ F ) ) by VECTSP_1:def 7
.= ( ( M - S ) * ( 1_ F ) ) by RLVECT_1:def 11;
hence thesis;
end;
