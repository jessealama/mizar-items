environ
vocabularies RLVECT_1,ALGSTR_0,XBOOLE_0,SUBSET_1,ARYTM_1,SUPINF_2,ARYTM_3,VECTSP_1,PARSP_1,ZFMISC_1,STRUCT_0,MCART_1,RELAT_1,GROUP_1,MESFUNC1,PARSP_2;
notations ZFMISC_1,SUBSET_1,MCART_1,DOMAIN_1,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,PARSP_1;
theorems MCART_1,VECTSP_1,PARSP_1,RLVECT_1,GROUP_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
registrations XBOOLE_0,STRUCT_0,VECTSP_1,PARSP_1;
constructors DOMAIN_1,PARSP_1;
begin
reserve F for Field;
reserve K for (Element of F);
reserve L for (Element of F);
reserve N for (Element of F);
reserve R for (Element of F);
reserve S for (Element of F);
theorem
Lm9: ((( L * ( K - N ) ) = ( R - S ) & S = ( ( K + N ) - R )) implies ( ( L - ( 1_ F ) ) * ( R - N ) ) = ( ( L + ( 1_ F ) ) * ( R - K ) ))
proof
assume (( L * ( K - N ) ) = ( R - S ) & S = ( ( K + N ) - R ));
then A1: ( L * ( K - N ) ) = ( R + ( - ( ( K + N ) - R ) ) ) by RLVECT_1:def 11
.= ( R + ( R + ( - ( K + N ) ) ) ) by RLVECT_1:33
.= ( R + ( R + ( ( - K ) + ( - N ) ) ) ) by RLVECT_1:31
.= ( R + ( ( - N ) + ( R + ( - K ) ) ) ) by RLVECT_1:def 3
.= ( ( R + ( - N ) ) + ( R + ( - K ) ) ) by RLVECT_1:def 3
.= ( ( R - N ) + ( R + ( - K ) ) ) by RLVECT_1:def 11
.= ( ( R - K ) + ( R - N ) ) by RLVECT_1:def 11;
( ( L * ( R - N ) ) - ( L * ( R - K ) ) ) = ( ( L * ( R + ( - N ) ) ) - ( L * ( R - K ) ) ) by RLVECT_1:def 11
.= ( ( L * ( R + ( - N ) ) ) - ( L * ( R + ( - K ) ) ) ) by RLVECT_1:def 11
.= ( ( L * ( R + ( - N ) ) ) + ( - ( L * ( R + ( - K ) ) ) ) ) by RLVECT_1:def 11
.= ( ( ( L * R ) + ( L * ( - N ) ) ) + ( - ( L * ( R + ( - K ) ) ) ) ) by VECTSP_1:def 7
.= ( ( ( L * R ) + ( L * ( - N ) ) ) + ( ( - L ) * ( R + ( - K ) ) ) ) by VECTSP_1:9
.= ( ( ( L * R ) + ( L * ( - N ) ) ) + ( ( ( - L ) * R ) + ( ( - L ) * ( - K ) ) ) ) by VECTSP_1:def 7
.= ( ( ( L * R ) + ( L * ( - N ) ) ) + ( ( ( - L ) * R ) + ( L * K ) ) ) by VECTSP_1:10
.= ( ( ( L * ( - N ) ) + ( L * R ) ) + ( ( - ( L * R ) ) + ( L * K ) ) ) by VECTSP_1:9
.= ( ( ( ( L * ( - N ) ) + ( L * R ) ) + ( - ( L * R ) ) ) + ( L * K ) ) by RLVECT_1:def 3
.= ( ( ( L * ( - N ) ) + ( ( L * R ) + ( - ( L * R ) ) ) ) + ( L * K ) ) by RLVECT_1:def 3
.= ( ( ( L * ( - N ) ) + ( 0. F ) ) + ( L * K ) ) by RLVECT_1:5
.= ( ( L * K ) + ( L * ( - N ) ) ) by RLVECT_1:4
.= ( L * ( K + ( - N ) ) ) by VECTSP_1:def 7
.= ( L * ( K - N ) ) by RLVECT_1:def 11;
hence thesis by A1,CKB13:1;
end;
