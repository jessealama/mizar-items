environ
vocabularies NUMBERS,SUBSET_1,INT_2,ARYTM_3,RELAT_1,NAT_1,CARD_1,XXREAL_0,XREAL_0,ORDINAL1,PRE_FF,FUNCT_3,SQUARE_1,ARYTM_1,COMPLEX1,POWER,NEWTON,SEQ_1,VALUED_0,VALUED_1,FUNCT_1,SEQ_2,ORDINAL2,XXREAL_2,FIB_NUM;
notations SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,SQUARE_1,NAT_1,NAT_D,INT_2,VALUED_0,VALUED_1,SEQ_1,XXREAL_0,COMPLEX1,PRE_FF,SEQ_2,LIMFUNC1,QUIN_1,NEWTON,POWER;
definitions SQUARE_1,VALUED_1,XCMPLX_0;
theorems NAT_1,PRE_FF,INT_2,SQUARE_1,WSIERP_1,EULER_1,PYTHTRIP,QUIN_1,ABSVALUE,POWER,NEWTON,SEQM_3,SEQ_1,SEQ_2,SEQ_4,PREPOWER,XCMPLX_0,XCMPLX_1,XREAL_1,COMPLEX1,XXREAL_0,FUNCT_2,ORDINAL1,NAT_D,VALUED_1,VALUED_0,XREAL_0,CKB1,CKB2,CKB3,CKB6,CKB7,CKB8,CKB9,CKB10;
schemes NAT_1,SEQ_1,CKB4,CKB5;
registrations RELSET_1,XREAL_0,SQUARE_1,MEMBERED,QUIN_1,NEWTON,INT_1,VALUED_0,VALUED_1,FUNCT_2,NUMBERS,SEQ_4,SETFAM_1,REALSET1,FINSET_1;
constructors REAL_1,SQUARE_1,NAT_1,NAT_D,QUIN_1,SEQ_2,SEQM_3,LIMFUNC1,NEWTON,POWER,PRE_FF,SEQ_1,VALUED_1,PARTFUN1,SETFAM_1,RELSET_1,BINOP_2,RVSUM_1;
requirements SUBSET,NUMERALS,REAL,ARITHM,BOOLE;
begin
reserve k for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
theorem
Lm5: (for m,n being (Element of ( NAT )) holds (m >= n implies ( Fib m ) >= ( Fib n )))
proof
A1: (for k,n being (Element of ( NAT )) holds ( Fib ( n + k ) ) >= ( Fib n ))
proof
defpred P[ (Element of ( NAT )) ]
 means
(for n being (Element of ( NAT )) holds ( Fib ( n + $1 ) ) >= ( Fib n ));
A2: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume A3: P[ k ];
let n;
( n + ( k + 1 ) ) = ( ( n + k ) + 1 );
then A4: ( Fib ( n + ( k + 1 ) ) ) >= ( Fib ( n + k ) ) by CKB10:1;
( Fib ( n + k ) ) >= ( Fib n ) by A3;
hence thesis by A4,XXREAL_0:2;
end;
let k being (Element of ( NAT ));
let n being (Element of ( NAT ));
A5: P[ ( 0 ) ];
(for k holds P[ k ]) from NAT_1:sch 1(A5,A2);
hence thesis;
end;
let m being (Element of ( NAT ));
let n being (Element of ( NAT ));
assume m >= n;
then consider k being Nat such that A6: m = ( n + k ) by NAT_1:10;
reconsider k as (Element of ( NAT )) by ORDINAL1:def 12;
m = ( n + k ) by A6;
hence thesis by A1;
end;
