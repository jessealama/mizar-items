environ
vocabularies NUMBERS,SUBSET_1,INT_2,ARYTM_3,RELAT_1,NAT_1,CARD_1,XXREAL_0,XREAL_0,ORDINAL1,PRE_FF,FUNCT_3,SQUARE_1,ARYTM_1,COMPLEX1,POWER,NEWTON,SEQ_1,VALUED_0,VALUED_1,FUNCT_1,SEQ_2,ORDINAL2,XXREAL_2,FIB_NUM;
notations SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,SQUARE_1,NAT_1,NAT_D,INT_2,VALUED_0,VALUED_1,SEQ_1,XXREAL_0,COMPLEX1,PRE_FF,SEQ_2,LIMFUNC1,QUIN_1,NEWTON,POWER;
definitions SQUARE_1,VALUED_1,XCMPLX_0;
theorems NAT_1,PRE_FF,INT_2,SQUARE_1,WSIERP_1,EULER_1,PYTHTRIP,QUIN_1,ABSVALUE,POWER,NEWTON,SEQM_3,SEQ_1,SEQ_2,SEQ_4,PREPOWER,XCMPLX_0,XCMPLX_1,XREAL_1,COMPLEX1,XXREAL_0,FUNCT_2,ORDINAL1,NAT_D,VALUED_1,VALUED_0,XREAL_0,CKB1;
schemes NAT_1,SEQ_1;
registrations RELSET_1,XREAL_0,SQUARE_1,MEMBERED,QUIN_1,NEWTON,INT_1,VALUED_0,VALUED_1,FUNCT_2,NUMBERS,SEQ_4,SETFAM_1,REALSET1,FINSET_1;
constructors REAL_1,SQUARE_1,NAT_1,NAT_D,QUIN_1,SEQ_2,SEQM_3,LIMFUNC1,NEWTON,POWER,PRE_FF,SEQ_1,VALUED_1,PARTFUN1,SETFAM_1,RELSET_1,BINOP_2,RVSUM_1;
requirements SUBSET,NUMERALS,REAL,ARITHM,BOOLE;
begin
reserve k for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve p for (Element of ( NAT ));
theorem
Th2: (for k,m,n being (Element of ( NAT )) holds (( k gcd m ) = 1 implies ( k gcd ( m * n ) ) = ( k gcd n )))
proof
defpred P[ Nat ]
 means
(for m holds (for n holds (( $1 gcd m ) = 1 implies ( $1 gcd ( m * n ) ) = ( $1 gcd n ))));
A1: (for k being Nat holds ((for a being Nat holds (a < k implies P[ a ])) implies P[ k ]))
proof
let k being Nat;
assume A2: (for a being Nat holds (a < k implies P[ a ]));
per cases  by NAT_1:25;
suppose A3: k = ( 0 );

let m;
let n;
assume ( k gcd m ) = 1;
then 1 = m by A3,NEWTON:52;
hence thesis;
end;
suppose A4: k = 1;

let m;
let n;
assume ( k gcd m ) = 1;
( k gcd ( m * n ) ) = 1 by A4,NEWTON:51;
hence thesis by A4,NEWTON:51;
end;
suppose A5: k > 1;

let m;
let n;
set b = ( k gcd ( m * n ) );
assume A6: ( k gcd m ) = 1;
thus thesis
proof
per cases  by NAT_1:25;
suppose b = ( 0 );

then ( 0 ) divides k by NAT_D:def 5;
then k = ( 0 ) by INT_2:3;
hence thesis by A5;
end;
suppose A7: b = 1;

set c = ( k gcd n );
A8: c divides k by NAT_D:def 5;
A9: n divides ( m * n ) by NAT_D:def 3;
c divides n by NAT_D:def 5;
then c divides ( m * n ) by A9,NAT_D:4;
then c divides 1 by A7,A8,NAT_D:def 5;
hence thesis by A7,WSIERP_1:15;
end;
suppose b > 1;

then b >= ( 1 + 1 ) by NAT_1:13;
then consider p such that A10: p is  prime and A11: p divides b by INT_2:31;
b divides k by NAT_D:def 5;
then A12: p divides k by A11,NAT_D:4;
then consider s being Nat such that A13: k = ( p * s ) by NAT_D:def 3;
A14: (not p divides m)
proof
assume p divides m;
then p divides 1 by A6,A12,NAT_D:def 5;
then p = 1 by WSIERP_1:15;
hence thesis by A10,INT_2:def 4;
end;
b divides ( m * n ) by NAT_D:def 5;
then p divides ( m * n ) by A11,NAT_D:4;
then p divides n by A10,A14,NEWTON:80;
then consider r being Nat such that A15: n = ( p * r ) by NAT_D:def 3;
reconsider s as (Element of ( NAT )) by ORDINAL1:def 12;
A16: ( s + 1 ) > s by XREAL_1:29;
p > 1 by A10,INT_2:def 4;
then p >= ( 1 + 1 ) by NAT_1:13;
then A17: ( s * p ) >= ( s * ( 1 + 1 ) ) by NAT_1:4;
s <> ( 0 ) by A5,A13;
then ( s + s ) > s by NAT_1:3,XREAL_1:29;
then ( s + s ) >= ( s + 1 ) by NAT_1:13;
then k >= ( s + 1 ) by A13,A17,XXREAL_0:2;
then A18: s < k by A16,XXREAL_0:2;
A19: ( s gcd m ) = 1
proof
set c = ( s gcd m );
A20: c divides s by NAT_D:def 5;
A21: c divides m by NAT_D:def 5;
s divides k by A13,NAT_D:def 3;
then c divides k by A20,NAT_D:4;
then c divides 1 by A6,A21,NAT_D:def 5;
hence thesis by WSIERP_1:15;
end;
reconsider r as (Element of ( NAT )) by ORDINAL1:def 12;
A22: ( k gcd n ) = ( p * ( s gcd r ) ) by A13,A15,PYTHTRIP:8;
( k gcd ( m * n ) ) = ( ( p * s ) gcd ( p * ( m * r ) ) ) by A13,A15
.= ( p * ( s gcd ( m * r ) ) ) by PYTHTRIP:8;
hence thesis by A2,A18,A19,A22;
end;
end;

end;
end;
(for k being Nat holds P[ k ]) from NAT_1:sch 4(A1);
hence thesis;
end;
