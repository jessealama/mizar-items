environ
vocabularies NUMBERS,FINSEQ_1,ORDINAL4,XBOOLE_0,SUBSET_1,RELAT_1,BINTREE1,TREES_1,MARGREL1,TARSKI,ORDINAL1,CARD_1,ARYTM_3,PARTFUN1,FUNCT_1,XBOOLEAN,TREES_2,FINSEQ_2,TREES_4,ZFMISC_1,FUNCOP_1,MCART_1,FINSEQ_5,NAT_1,BINARITH,CAT_1,XXREAL_0,EUCLID,FINSET_1,POWER,ARYTM_1,BINARI_3,INT_1,ABIAN,BINTREE2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,MCART_1,NAT_1,NAT_D,ABIAN,SERIES_1,RELAT_1,MARGREL1,DOMAIN_1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,FINSET_1,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_5,BINARITH,BINARI_3,TREES_1,TREES_2,TREES_4,BINTREE1,EUCLID,XXREAL_0,CKB5,CKB15,CKB17;
definitions TARSKI,XBOOLE_0,EUCLID,FINSEQ_2,MARGREL1,XBOOLEAN,BINOP_1,CKB15,CKB17;
theorems TARSKI,MCART_1,NAT_1,NAT_2,WELLORD2,ZFMISC_1,FUNCT_1,FUNCT_2,CARD_1,CARD_2,POWER,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSEQ_5,FINSEQ_6,BINARI_3,TREES_1,TREES_2,BINTREE1,XBOOLE_0,XBOOLE_1,XREAL_1,NAT_D,PARTFUN1,RELAT_1,ORDINAL1,XXREAL_0,XREAL_0,TREES_9,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20;
schemes FUNCT_2,NAT_1,FINSEQ_2,TREES_2,FUNCT_1,CKB12,CKB13;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,MARGREL1,TREES_2,TREES_9,BINTREE1,FINSEQ_2,INT_1,CARD_1,CKB16,CKB21,CKB22,CKB23;
constructors WELLORD2,DOMAIN_1,XXREAL_0,NAT_1,NAT_D,FINSEQOP,SERIES_1,BINARITH,FINSEQ_5,TREES_9,ABIAN,EUCLID,BINTREE1,BINARI_3,ORDINAL1,RELSET_1,CKB5,CKB15,CKB17;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th12: (for T being  full Tree holds (for n being non  empty Nat holds ( Seg ( 2 to_power n ) ) c= ( rng ( NumberOnLevel (n,T) ) )))
proof
let T being  full Tree;
let n being non  empty Nat;
let y being set;
assume y in ( Seg ( 2 to_power n ) );
then y in { k where k is (Element of ( NAT )): (1 <= k & k <= ( 2 to_power n )) } by FINSEQ_1:def 1;
then consider k being (Element of ( NAT )) such that A1: k = y and A2: 1 <= k and A3: k <= ( 2 to_power n );
A4: ( k - 1 ) >= ( 1 - 1 ) by A2,XREAL_1:9;
set t = ( Rev ( n -BinarySequence ( k -' 1 ) ) );
A5: ( len t ) = ( len ( n -BinarySequence ( k -' 1 ) ) ) by FINSEQ_5:def 3
.= n by CARD_1:def 7;
then ( len ( Rev t ) ) = n by FINSEQ_5:def 3;
then reconsider F = ( Rev t ) as (Element of ( n -tuples_on ( BOOLEAN ) )) by FINSEQ_2:92;
T = ( { ( 0 ),1 } * ) by CKB17:def 1;
then t in T by FINSEQ_1:def 11;
then t in { w where w is (Element of T): ( len w ) = n } by A5;
then A6: t in ( T -level n ) by TREES_2:def 6;
then A7: t in ( dom ( NumberOnLevel (n,T) ) ) by FUNCT_2:def 1;
k < ( ( 2 to_power n ) + 1 ) by A3,NAT_1:13;
then ( k - 1 ) < ( 2 to_power n ) by XREAL_1:19;
then A8: ( k -' 1 ) < ( 2 to_power n ) by A4,XREAL_0:def 2;
( ( NumberOnLevel (n,T) ) . t ) = ( ( Absval F ) + 1 ) by A6,CKB15:def 1
.= ( ( Absval ( n -BinarySequence ( k -' 1 ) ) ) + 1 ) by FINSEQ_6:25
.= ( ( k -' 1 ) + 1 ) by A8,BINARI_3:35
.= ( ( k - 1 ) + 1 ) by A4,XREAL_0:def 2
.= y by A1;
hence thesis by A7,FUNCT_1:def 3;
end;
