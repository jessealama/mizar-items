environ
vocabularies NUMBERS,FINSEQ_1,ORDINAL4,XBOOLE_0,SUBSET_1,RELAT_1,BINTREE1,TREES_1,MARGREL1,TARSKI,ORDINAL1,CARD_1,ARYTM_3,PARTFUN1,FUNCT_1,XBOOLEAN,TREES_2,FINSEQ_2,TREES_4,ZFMISC_1,FUNCOP_1,MCART_1,FINSEQ_5,NAT_1,BINARITH,CAT_1,XXREAL_0,EUCLID,FINSET_1,POWER,ARYTM_1,BINARI_3,INT_1,ABIAN,BINTREE2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,MCART_1,NAT_1,NAT_D,ABIAN,SERIES_1,RELAT_1,MARGREL1,DOMAIN_1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,FINSET_1,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_5,BINARITH,BINARI_3,TREES_1,TREES_2,TREES_4,BINTREE1,EUCLID,XXREAL_0,CKB5;
definitions TARSKI,XBOOLE_0,EUCLID,FINSEQ_2,MARGREL1,XBOOLEAN,BINOP_1;
theorems TARSKI,MCART_1,NAT_1,NAT_2,WELLORD2,ZFMISC_1,FUNCT_1,FUNCT_2,CARD_1,CARD_2,POWER,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSEQ_5,FINSEQ_6,BINARI_3,TREES_1,TREES_2,BINTREE1,XBOOLE_0,XBOOLE_1,XREAL_1,NAT_D,PARTFUN1,RELAT_1,ORDINAL1,XXREAL_0,XREAL_0,TREES_9,CKB1,CKB2,CKB3,CKB4;
schemes FUNCT_2,NAT_1,FINSEQ_2,TREES_2,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,MARGREL1,TREES_2,TREES_9,BINTREE1,FINSEQ_2,INT_1,CARD_1;
constructors WELLORD2,DOMAIN_1,XXREAL_0,NAT_1,NAT_D,FINSEQOP,SERIES_1,BINARITH,FINSEQ_5,TREES_9,ABIAN,EUCLID,BINTREE1,BINARI_3,ORDINAL1,RELSET_1,CKB5;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th3: (for T being Tree holds (T = ( { ( 0 ),1 } * ) implies T is  binary))
proof
let T being Tree;
assume A1: T = ( { ( 0 ),1 } * );
now
let t being (Element of T);
assume (not t in ( Leaves T ));
{ ( t ^ <* n *> ) where n is (Element of ( NAT )): ( t ^ <* n *> ) in T } = { ( t ^ <* ( 0 ) *> ),( t ^ <* 1 *> ) }
proof
thus { ( t ^ <* n *> ) where n is (Element of ( NAT )): ( t ^ <* n *> ) in T } c= { ( t ^ <* ( 0 ) *> ),( t ^ <* 1 *> ) }
proof
let x being set;
assume x in { ( t ^ <* n *> ) where n is (Element of ( NAT )): ( t ^ <* n *> ) in T };
then consider n being (Element of ( NAT )) such that A2: x = ( t ^ <* n *> ) and A3: ( t ^ <* n *> ) in T;
reconsider tn = ( t ^ <* n *> ) as (FinSequence of ({ ( 0 ),1 } qua set)) by A1,A3,FINSEQ_1:def 11;
( ( len t ) + 1 ) in ( Seg ( ( len t ) + 1 ) ) by FINSEQ_1:4;
then ( ( len t ) + 1 ) in ( Seg ( len tn ) ) by FINSEQ_2:16;
then ( ( len t ) + 1 ) in ( dom tn ) by FINSEQ_1:def 3;
then ( tn /. ( ( len t ) + 1 ) ) = ( ( t ^ <* n *> ) . ( ( len t ) + 1 ) ) by PARTFUN1:def 6
.= n by FINSEQ_1:42;
then (n = ( 0 ) or n = 1) by TARSKI:def 2;
hence thesis by A2,TARSKI:def 2;
end;

let x being set;
A4: t is (FinSequence of { ( 0 ),1 }) by A1,FINSEQ_1:def 11;
( rng <* 1 *> ) c= { ( 0 ),1 }
proof
let z being set;
assume z in ( rng <* 1 *> );
then z in { 1 } by FINSEQ_1:38;
then z = 1 by TARSKI:def 1;
hence thesis by TARSKI:def 2;
end;
then <* 1 *> is (FinSequence of { ( 0 ),1 }) by FINSEQ_1:def 4;
then ( t ^ <* 1 *> ) is (FinSequence of { ( 0 ),1 }) by A4,CKB1:1;
then A5: ( t ^ <* 1 *> ) in T by A1,FINSEQ_1:def 11;
assume x in { ( t ^ <* ( 0 ) *> ),( t ^ <* 1 *> ) };
then A6: (x = ( t ^ <* ( 0 ) *> ) or x = ( t ^ <* 1 *> )) by TARSKI:def 2;
( rng <* ( 0 ) *> ) c= { ( 0 ),1 }
proof
let z being set;
assume z in ( rng <* ( 0 ) *> );
then z in { ( 0 ) } by FINSEQ_1:38;
then z = ( 0 ) by TARSKI:def 1;
hence thesis by TARSKI:def 2;
end;
then <* ( 0 ) *> is (FinSequence of { ( 0 ),1 }) by FINSEQ_1:def 4;
then ( t ^ <* ( 0 ) *> ) is (FinSequence of { ( 0 ),1 }) by A4,CKB1:1;
then ( t ^ <* ( 0 ) *> ) in T by A1,FINSEQ_1:def 11;
hence thesis by A5,A6;
end;
hence ( succ t ) = { ( t ^ <* ( 0 ) *> ),( t ^ <* 1 *> ) } by TREES_2:def 5;
end;
hence thesis by BINTREE1:def 2;
end;
