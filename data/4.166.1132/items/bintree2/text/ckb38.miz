environ
vocabularies NUMBERS,FINSEQ_1,ORDINAL4,XBOOLE_0,SUBSET_1,RELAT_1,BINTREE1,TREES_1,MARGREL1,TARSKI,ORDINAL1,CARD_1,ARYTM_3,PARTFUN1,FUNCT_1,XBOOLEAN,TREES_2,FINSEQ_2,TREES_4,ZFMISC_1,FUNCOP_1,MCART_1,FINSEQ_5,NAT_1,BINARITH,CAT_1,XXREAL_0,EUCLID,FINSET_1,POWER,ARYTM_1,BINARI_3,INT_1,ABIAN,BINTREE2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,MCART_1,NAT_1,NAT_D,ABIAN,SERIES_1,RELAT_1,MARGREL1,DOMAIN_1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,FINSET_1,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_5,BINARITH,BINARI_3,TREES_1,TREES_2,TREES_4,BINTREE1,EUCLID,XXREAL_0,CKB5,CKB15,CKB17,CKB25;
definitions TARSKI,XBOOLE_0,EUCLID,FINSEQ_2,MARGREL1,XBOOLEAN,BINOP_1,CKB15,CKB17,CKB25;
theorems TARSKI,MCART_1,NAT_1,NAT_2,WELLORD2,ZFMISC_1,FUNCT_1,FUNCT_2,CARD_1,CARD_2,POWER,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSEQ_5,FINSEQ_6,BINARI_3,TREES_1,TREES_2,BINTREE1,XBOOLE_0,XBOOLE_1,XREAL_1,NAT_D,PARTFUN1,RELAT_1,ORDINAL1,XXREAL_0,XREAL_0,TREES_9,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB24,CKB25,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37;
schemes FUNCT_2,NAT_1,FINSEQ_2,TREES_2,FUNCT_1,CKB12,CKB13;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,MARGREL1,TREES_2,TREES_9,BINTREE1,FINSEQ_2,INT_1,CARD_1,CKB16,CKB21,CKB22,CKB23,CKB26;
constructors WELLORD2,DOMAIN_1,XXREAL_0,NAT_1,NAT_D,FINSEQOP,SERIES_1,BINARITH,FINSEQ_5,TREES_9,ABIAN,EUCLID,BINTREE1,BINARI_3,ORDINAL1,RELSET_1,CKB5,CKB15,CKB17,CKB25;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
(for T being  full Tree holds (for n,i being non empty (Element of ( NAT )) holds (i <= ( 2 to_power ( n + 1 ) ) implies (for F being (Element of ( n -tuples_on ( BOOLEAN ) )) holds (F = ( ( FinSeqLevel (n,T) ) . ( ( i + 1 ) div 2 ) ) implies ( ( FinSeqLevel (( n + 1 ),T) ) . i ) = ( F ^ <* ( ( i + 1 ) mod 2 ) *> ))))))
proof
let T being  full Tree;
let n being non empty (Element of ( NAT )),i being non empty (Element of ( NAT ));
assume A1: i <= ( 2 to_power ( n + 1 ) );
A2:now
per cases ;
suppose ( i -' 1 ) is  odd;

then A3: ( ( i -' 1 ) mod 2 ) = 1 by NAT_2:22;
then ( ( ( i -' 1 ) + ( ( 1 + 1 ) * 1 ) ) mod 2 ) = 1 by NAT_D:21;
then ( ( ( ( i -' 1 ) + 1 ) + 1 ) mod 2 ) = 1;
hence ( ( i + 1 ) mod 2 ) = ( ( i -' 1 ) mod 2 ) by A3,NAT_1:14,XREAL_1:235;
end;
suppose ( i -' 1 ) is  even;

then A4: ( ( i -' 1 ) mod 2 ) = ( 0 ) by NAT_2:21;
then ( ( ( i -' 1 ) + ( ( 1 + 1 ) * 1 ) ) mod 2 ) = ( 0 ) by NAT_D:21;
then ( ( ( ( i -' 1 ) + 1 ) + 1 ) mod 2 ) = ( 0 );
hence ( ( i + 1 ) mod 2 ) = ( ( i -' 1 ) mod 2 ) by A4,NAT_1:14,XREAL_1:235;
end;
end;
let F being (Element of ( n -tuples_on ( BOOLEAN ) ));
assume A5: F = ( ( FinSeqLevel (n,T) ) . ( ( i + 1 ) div 2 ) );
A6: 1 <= i by NAT_1:14;
then ( 1 + 1 ) <= ( i + 1 ) by XREAL_1:6;
then A7: 1 <= ( ( i + 1 ) div 2 ) by NAT_2:13;
( 2 to_power ( n + 1 ) ) = ( ( 2 to_power n ) * ( 2 to_power 1 ) ) by POWER:27
.= ( 2 * ( 2 to_power n ) ) by POWER:25;
then ( ( i + 1 ) div 2 ) <= ( 2 to_power n ) by A1,NAT_2:25;
then A8: ( ( i + 1 ) div 2 ) in ( Seg ( 2 to_power n ) ) by A7,FINSEQ_1:1;
( i + 1 ) >= ( 1 + 1 ) by A6,XREAL_1:6;
then A9: 1 <= ( ( i + 1 ) div 2 ) by NAT_2:13;
A10: ( ( i -' 1 ) div 2 ) = ( ( ( ( i -' 1 ) div 2 ) + 1 ) - 1 )
.= ( ( ( ( i -' 1 ) + ( 1 + 1 ) ) div 2 ) - 1 ) by NAT_2:14
.= ( ( ( ( ( i -' 1 ) + 1 ) + 1 ) div 2 ) - 1 )
.= ( ( ( i + 1 ) div 2 ) - 1 ) by NAT_1:14,XREAL_1:235
.= ( ( ( i + 1 ) div 2 ) -' 1 ) by A9,XREAL_1:233;
i in ( Seg ( 2 to_power ( n + 1 ) ) ) by A1,A6,FINSEQ_1:1;
hence ( ( FinSeqLevel (( n + 1 ),T) ) . i ) = ( Rev ( ( n + 1 ) -BinarySequence ( i -' 1 ) ) ) by CKB31:1
.= ( Rev ( <* ( ( i -' 1 ) mod 2 ) *> ^ ( n -BinarySequence ( ( i -' 1 ) div 2 ) ) ) ) by BINARI_3:34
.= ( ( Rev ( n -BinarySequence ( ( ( i + 1 ) div 2 ) -' 1 ) ) ) ^ <* ( ( i + 1 ) mod 2 ) *> ) by A2,A10,FINSEQ_6:24
.= ( F ^ <* ( ( i + 1 ) mod 2 ) *> ) by A5,A8,CKB31:1;
end;
