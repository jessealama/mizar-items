environ
vocabularies NUMBERS,FINSEQ_1,ORDINAL4,XBOOLE_0,SUBSET_1,RELAT_1,BINTREE1,TREES_1,MARGREL1,TARSKI,ORDINAL1,CARD_1,ARYTM_3,PARTFUN1,FUNCT_1,XBOOLEAN,TREES_2,FINSEQ_2,TREES_4,ZFMISC_1,FUNCOP_1,MCART_1,FINSEQ_5,NAT_1,BINARITH,CAT_1,XXREAL_0,EUCLID,FINSET_1,POWER,ARYTM_1,BINARI_3,INT_1,ABIAN,BINTREE2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,MCART_1,NAT_1,NAT_D,ABIAN,SERIES_1,RELAT_1,MARGREL1,DOMAIN_1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,FINSET_1,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_5,BINARITH,BINARI_3,TREES_1,TREES_2,TREES_4,BINTREE1,EUCLID,XXREAL_0,CKB5,CKB15,CKB17,CKB25;
definitions TARSKI,XBOOLE_0,EUCLID,FINSEQ_2,MARGREL1,XBOOLEAN,BINOP_1,CKB15,CKB17,CKB25;
theorems TARSKI,MCART_1,NAT_1,NAT_2,WELLORD2,ZFMISC_1,FUNCT_1,FUNCT_2,CARD_1,CARD_2,POWER,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSEQ_5,FINSEQ_6,BINARI_3,TREES_1,TREES_2,BINTREE1,XBOOLE_0,XBOOLE_1,XREAL_1,NAT_D,PARTFUN1,RELAT_1,ORDINAL1,XXREAL_0,XREAL_0,TREES_9,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB24,CKB25,CKB27;
schemes FUNCT_2,NAT_1,FINSEQ_2,TREES_2,FUNCT_1,CKB12,CKB13;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,MARGREL1,TREES_2,TREES_9,BINTREE1,FINSEQ_2,INT_1,CARD_1,CKB16,CKB21,CKB22,CKB23,CKB26;
constructors WELLORD2,DOMAIN_1,XXREAL_0,NAT_1,NAT_D,FINSEQOP,SERIES_1,BINARITH,FINSEQ_5,TREES_9,ABIAN,EUCLID,BINTREE1,BINARI_3,ORDINAL1,RELSET_1,CKB5,CKB15,CKB17,CKB25;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th14: (for T being  full Tree holds (for n being non empty (Element of ( NAT )) holds (for y being (Element of ( n -tuples_on ( BOOLEAN ) )) holds (y = ( 0* n ) implies ( ( NumberOnLevel (n,T) ) . ( 'not' y ) ) = ( 2 to_power n )))))
proof
let T being  full Tree;
let n being non empty (Element of ( NAT ));
let y being (Element of ( n -tuples_on ( BOOLEAN ) ));
assume A1: y = ( 0* n );
then A2: ( Rev ( 'not' y ) ) = ( 'not' y ) by BINARI_3:9;
( len ( Rev ( 'not' y ) ) ) = ( len ( 'not' y ) ) by FINSEQ_5:def 3
.= n by CARD_1:def 7;
then reconsider F = ( Rev ( 'not' y ) ) as (Element of ( n -tuples_on ( BOOLEAN ) )) by FINSEQ_2:92;
reconsider ny = ( 'not' y ) as (Element of ( n -tuples_on ( BOOLEAN ) )) by FINSEQ_2:131;
T = ( { ( 0 ),1 } * ) by CKB17:def 1;
then ny in ( T -level n ) by CKB20:1;
hence ( ( NumberOnLevel (n,T) ) . ( 'not' y ) ) = ( ( Absval F ) + 1 ) by CKB15:def 1
.= ( ( ( 2 to_power n ) - 1 ) + 1 ) by A1,A2,BINARI_3:7
.= ( 2 to_power n );
end;
