environ
vocabularies NUMBERS,FINSET_1,XBOOLE_0,SUBSET_1,TARSKI,FUNCT_1,RELAT_1,FUNCOP_1,FUNCT_4,PBOOLE,FINSEQ_1,CARD_3,PARTFUN1,FUNCT_5,FUNCT_2,ZFMISC_1,FUNCT_6,NAT_1,CARD_1,ARYTM_3,MCART_1,FINSEQ_2,TREES_1,TREES_3,TREES_2,ORDINAL4,TREES_A,XXREAL_0,TREES_4,ARYTM_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,XREAL_0,MCART_1,CARD_1,RELAT_1,FUNCT_1,FINSET_1,PARTFUN1,FUNCT_2,XXREAL_0,XXREAL_2,BINOP_1,FUNCOP_1,FUNCT_4,FUNCT_7,CARD_3,TREES_2,TREES_1,TREES_3,TREES_4,FUNCT_5,FUNCT_6,PBOOLE,FINSEQ_1,FINSEQ_2,NAT_1;
definitions TARSKI,FUNCOP_1,WELLORD2,FUNCT_1,RELAT_1,PBOOLE,XBOOLE_0,SEQ_4,FINSEQ_2,FINSET_1;
theorems TARSKI,ZFMISC_1,FINSEQ_1,FINSEQ_3,GRFUNC_1,FUNCT_1,FUNCT_2,FUNCT_4,FUNCT_5,TREES_1,TREES_2,TREES_3,TREES_4,NAT_1,RELAT_1,CARD_3,FUNCOP_1,MCART_1,PBOOLE,CARD_2,CARD_1,FUNCT_6,FINSET_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,ORDERS_1,XREAL_1,XXREAL_0,XXREAL_2,XREAL_0,PARTFUN1,FUNCT_7,FINSEQ_2,CKB2,CKB3,CKB9,CKB10,CKB11;
schemes DOMAIN_1,PBOOLE,FUNCT_1,FRAENKEL,FINSEQ_1,NAT_1,CKB1,CKB4;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XREAL_0,MEMBERED,FINSEQ_1,CARD_3,PBOOLE,TREES_2,TREES_3,XXREAL_2,CARD_1,RELSET_1,TREES_1,CKB5,CKB6,CKB7,CKB8;
constructors WELLORD2,BINOP_1,FUNCT_4,SETWISEO,XXREAL_0,NAT_1,FUNCT_5,CARD_3,SEQ_4,PBOOLE,TREES_4,BINARITH,INT_1,SEQ_1,XXREAL_2,PARTFUN1,RELSET_1,FUNCT_7;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
scheme LambdaRecCorrD { D() -> non empty set,A() -> (Element of D()),F(Nat,(Element of D())) -> (Element of D()) } : ((ex f being (Function of ( NAT ),D()) st (( f . ( 0 ) ) = A() & (for i being Nat holds ( f . ( i + 1 ) ) = F(i,( f . i ))))) & (for f1,f2 being (Function of ( NAT ),D()) holds (((( f1 . ( 0 ) ) = A() & (for i being Nat holds ( f1 . ( i + 1 ) ) = F(i,( f1 . i )))) & (( f2 . ( 0 ) ) = A() & (for i being Nat holds ( f2 . ( i + 1 ) ) = F(i,( f2 . i ))))) implies f1 = f2)))
proof
thus (ex f being (Function of ( NAT ),D()) st (( f . ( 0 ) ) = A() & (for i being Nat holds ( f . ( i + 1 ) ) = F(i,( f . i ))))) from NAT_1:sch 12;
let f1 being (Function of ( NAT ),D()),f2 being (Function of ( NAT ),D());
assume that
A1: ( f1 . ( 0 ) ) = A()
and
A2: (for i being Nat holds ( f1 . ( i + 1 ) ) = F(i,( f1 . i )))
and
A3: ( f2 . ( 0 ) ) = A()
and
A4: (for i being Nat holds ( f2 . ( i + 1 ) ) = F(i,( f2 . i )));
thus f1 = f2 from NAT_1:sch 16(A1,A2,A3,A4);
end;
