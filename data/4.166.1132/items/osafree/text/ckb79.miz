environ
vocabularies OSALG_1,MSUALG_2,OSALG_2,MSUALG_1,TARSKI,STRUCT_0,RELAT_1,SEQM_3,PBOOLE,MSUALG_3,REALSET1,ZFMISC_1,XBOOLE_0,CARD_3,MSAFREE,SUBSET_1,FINSEQ_1,MARGREL1,FUNCT_1,XXREAL_0,PARTFUN1,LANG1,TDGROUP,DTCONSTR,TREES_3,TREES_4,NAT_1,TREES_2,OSALG_4,CARD_5,NATTRA_1,CARD_LAR,QC_LANG1,EQREL_1,RELAT_2,MSUALG_4,COH_SP,MCART_1,UNIALG_2,MEMBER_1,FUNCT_7,OSAFREE;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NAT_1,RELAT_1,RELSET_1,FUNCT_1,MCART_1,PARTFUN1,FUNCT_2,FINSEQ_1,FINSEQ_2,PBOOLE,RELAT_2,TREES_2,CARD_3,EQREL_1,STRUCT_0,LANG1,TREES_3,TREES_4,DTCONSTR,ORDERS_2,ORDERS_3,MSUALG_1,MSUALG_2,MSUALG_3,MSUALG_4,OSALG_1,OSALG_2,OSALG_3,OSALG_4,MSAFREE,FUNCT_7,CKB1,CKB3,CKB4,CKB5,CKB7,CKB12,CKB13,CKB15,CKB21,CKB22,CKB23,CKB25,CKB31,CKB32,CKB38,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB53,CKB60,CKB63,CKB65,CKB68,CKB71,CKB77;
definitions TARSKI,XBOOLE_0,PBOOLE,MSUALG_3,OSALG_1,OSALG_3,OSALG_4,CKB1,CKB3,CKB4,CKB5,CKB7,CKB12,CKB13,CKB15,CKB21,CKB22,CKB23,CKB31,CKB38,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB53,CKB60,CKB63,CKB65,CKB68,CKB71,CKB77;
theorems TARSKI,FUNCT_1,FUNCT_2,MCART_1,ZFMISC_1,PBOOLE,CARD_3,MSUALG_1,MSUALG_2,MSUALG_3,RELAT_1,LANG1,DTCONSTR,FINSEQ_1,TREES_4,TREES_1,DOMAIN_1,RELSET_1,XBOOLE_0,XBOOLE_1,OSALG_1,OSALG_2,OSALG_3,OSALG_4,MSAFREE,MSUALG_6,MSAFREE2,CARD_5,FINSEQ_2,FINSEQ_3,MSUALG_9,MSUALG_4,EQREL_1,FUNCT_5,ORDERS_2,RELAT_2,PARTFUN1,ORDERS_1,FUNCT_7,FUNCOP_1,TREES_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB11,CKB12,CKB13,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB60,CKB62,CKB63,CKB64,CKB65,CKB67,CKB68,CKB69,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78;
schemes CLASSES1,FUNCT_1,RELSET_1,DTCONSTR,XBOOLE_0,FUNCT_2,PBOOLE;
registrations XBOOLE_0,SUBSET_1,RELAT_1,ORDINAL1,PARTFUN1,FUNCOP_1,FUNCT_1,PBOOLE,TREES_2,TREES_3,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_3,MSAFREE,MSUALG_4,MSUALG_9,OSALG_1,OSALG_4,RELSET_1,FINSEQ_1,CKB8,CKB10,CKB14,CKB16,CKB24,CKB37,CKB40,CKB59,CKB61,CKB66,CKB70;
constructors XXREAL_0,NAT_1,FINSEQOP,FUNCT_7,MSUALG_3,MSAFREE,ORDERS_3,OSALG_2,OSALG_3,OSALG_4,RELSET_1,CKB1,CKB3,CKB4,CKB5,CKB7,CKB12,CKB13,CKB15,CKB21,CKB22,CKB23,CKB25,CKB31,CKB38,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB53,CKB60,CKB63,CKB65,CKB68,CKB71,CKB77;
requirements BOOLE,SUBSET;
begin
reserve S for OrderSortedSign;
reserve X for (ManySortedSet of S);
reserve x for set;
definition
let S being  locally_directed OrderSortedSign;
let X being  non-empty (ManySortedSet of S);
let s being (Element of S);
func NHReverse (s,X) -> (Function of ( OSFreeGen (s,X) ),( PTVars (s,X) )) means 
(for t being (Symbol of ( DTConOSA X )) holds (( ( ( OSNat_Hom (( ParsedTermsOSA X ),( LCongruence X )) ) . s ) . ( root-tree t ) ) in ( OSFreeGen (s,X) ) implies ( it . ( ( ( OSNat_Hom (( ParsedTermsOSA X ),( LCongruence X )) ) . s ) . ( root-tree t ) ) ) = ( root-tree t )));
existence
proof
set A = ( OSFreeGen (s,X) );
set R = ( LCongruence X );
set PTA = ( ParsedTermsOSA X );
set SPTA = (the Sorts of PTA);
set NHs = ( OSNat_Hom (PTA,R,s) );
set D = ( DTConOSA X );
set NH = ( OSNat_Hom (( ParsedTermsOSA X ),( LCongruence X )) );
defpred P[ set,set ]
 means
(for t being (Symbol of D) holds ($1 = ( ( NH . s ) . ( root-tree t ) ) implies $2 = ( root-tree t )));
A1: ( NH . s ) = ( OSNat_Hom (PTA,R,s) ) by OSALG_4:def 22;
A2: (for x being set holds (x in A implies (ex a being set st (a in ( PTVars (s,X) ) & P[ x,a ]))))
proof
let x being set;
assume x in A;
then x in { ( ( NH . s ) . ( root-tree t ) ) where t is (Symbol of D): (t in ( Terminals D ) & ( t `2 ) = s) } by CKB67:1;
then consider t being (Symbol of D) such that A3: x = ( ( NH . s ) . ( root-tree t ) ) and A4: t in ( Terminals D ) and A5: ( t `2 ) = s;
A6: x = ( NHs . ( root-tree t ) ) by A3,OSALG_4:def 22;
take ( root-tree t );
consider s1 being (Element of S),a being set such that A7: a in ( X . s1 ) and A8: t = [ a,s1 ] by A4,CKB11:1;
A9: s = s1 by A5,A8,MCART_1:7;
hence ( root-tree t ) in ( PTVars (s,X) ) by A7,A8,CKB60:def 1;
reconsider rt = ( root-tree t ) as (Element of ( SPTA . s )) by A7,A8,A9,CKB27:1;
A10: ( NHs . rt ) = ( OSClass (R,rt) ) by OSALG_4:def 21;
reconsider tt = ( root-tree t ) as (Element of ( TS D )) by A7,A8,CKB27:1;
let t1 being (Symbol of D);
assume A11: x = ( ( NH . s ) . ( root-tree t1 ) );
A12: ( OSClass (R,tt) ) = ( OSClass (R,rt) ) by CKB71:def 1;
( OSClass (R,tt) ) <> ( {} ) by CKB72:1;
then x <> ( {} ) by A12,A6,OSALG_4:def 21;
then ( root-tree t1 ) in ( dom NHs ) by A1,A11,FUNCT_1:def 2;
then reconsider rt1 = ( root-tree t1 ) as (Element of ( SPTA . s ));
reconsider tt2 = rt1 as (Element of ( TS D )) by CKB34:1;
A13: ( OSClass (R,tt2) ) = ( OSClass (R,rt1) ) by CKB71:def 1;
x = ( NHs . ( root-tree t1 ) ) by A11,OSALG_4:def 22;
then ( OSClass (R,rt1) ) = ( OSClass (R,rt) ) by A6,A10,OSALG_4:def 21;
then tt2 in ( OSClass (R,tt) ) by A12,A13,CKB74:1;
hence thesis by A7,A8,CKB76:1;
end;
consider f being Function such that A14: ((( dom f ) = A & ( rng f ) c= ( PTVars (s,X) )) & (for x being set holds (x in A implies P[ x,( f . x ) ]))) from FUNCT_1:sch 5(A2);
reconsider f as (Function of A,( PTVars (s,X) )) by A14,FUNCT_2:2;
take f;
let t being (Symbol of D);
assume ( ( NH . s ) . ( root-tree t ) ) in A;
hence thesis by A14;
end;
uniqueness
proof
let A being (Function of ( OSFreeGen (s,X) ),( PTVars (s,X) ));
let B being (Function of ( OSFreeGen (s,X) ),( PTVars (s,X) ));
set NH = ( OSNat_Hom (( ParsedTermsOSA X ),( LCongruence X )) );
assume that
A15: (for t being (Symbol of ( DTConOSA X )) holds (( ( NH . s ) . ( root-tree t ) ) in ( OSFreeGen (s,X) ) implies ( A . ( ( NH . s ) . ( root-tree t ) ) ) = ( root-tree t )))
and
A16: (for t being (Symbol of ( DTConOSA X )) holds (( ( NH . s ) . ( root-tree t ) ) in ( OSFreeGen (s,X) ) implies ( B . ( ( NH . s ) . ( root-tree t ) ) ) = ( root-tree t )));
set D = ( DTConOSA X );
set C = { ( ( NH . s ) . ( root-tree t ) ) where t is (Symbol of D): (t in ( Terminals D ) & ( t `2 ) = s) };
A17: ( OSFreeGen (s,X) ) = C by CKB67:1;
then A18: ( dom B ) = C by FUNCT_2:def 1;
A19: (for i being set holds (i in C implies ( A . i ) = ( B . i )))
proof
let i being set;
assume A20: i in C;
then consider t being (Symbol of D) such that A21: i = ( ( NH . s ) . ( root-tree t ) ) and t in ( Terminals D ) and ( t `2 ) = s;
( A . ( ( NH . s ) . ( root-tree t ) ) ) = ( root-tree t ) by A15,A17,A20,A21;
hence thesis by A16,A17,A20,A21;
end;
( dom A ) = C by A17,FUNCT_2:def 1;
hence thesis by A18,A19,FUNCT_1:2;
end;
end;
