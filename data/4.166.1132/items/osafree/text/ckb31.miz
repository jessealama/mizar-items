environ
vocabularies OSALG_1,MSUALG_2,OSALG_2,MSUALG_1,TARSKI,STRUCT_0,RELAT_1,SEQM_3,PBOOLE,MSUALG_3,REALSET1,ZFMISC_1,XBOOLE_0,CARD_3,MSAFREE,SUBSET_1,FINSEQ_1,MARGREL1,FUNCT_1,XXREAL_0,PARTFUN1,LANG1,TDGROUP,DTCONSTR,TREES_3,TREES_4,NAT_1,TREES_2,OSALG_4,CARD_5,NATTRA_1,CARD_LAR,QC_LANG1,EQREL_1,RELAT_2,MSUALG_4,COH_SP,MCART_1,UNIALG_2,MEMBER_1,FUNCT_7,OSAFREE;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NAT_1,RELAT_1,RELSET_1,FUNCT_1,MCART_1,PARTFUN1,FUNCT_2,FINSEQ_1,FINSEQ_2,PBOOLE,RELAT_2,TREES_2,CARD_3,EQREL_1,STRUCT_0,LANG1,TREES_3,TREES_4,DTCONSTR,ORDERS_2,ORDERS_3,MSUALG_1,MSUALG_2,MSUALG_3,MSUALG_4,OSALG_1,OSALG_2,OSALG_3,OSALG_4,MSAFREE,FUNCT_7,CKB1,CKB3,CKB4,CKB5,CKB7,CKB12,CKB13,CKB15,CKB21,CKB22,CKB23,CKB25;
definitions TARSKI,XBOOLE_0,PBOOLE,MSUALG_3,OSALG_1,OSALG_3,OSALG_4,CKB1,CKB3,CKB4,CKB5,CKB7,CKB12,CKB13,CKB15,CKB21,CKB22,CKB23;
theorems TARSKI,FUNCT_1,FUNCT_2,MCART_1,ZFMISC_1,PBOOLE,CARD_3,MSUALG_1,MSUALG_2,MSUALG_3,RELAT_1,LANG1,DTCONSTR,FINSEQ_1,TREES_4,TREES_1,DOMAIN_1,RELSET_1,XBOOLE_0,XBOOLE_1,OSALG_1,OSALG_2,OSALG_3,OSALG_4,MSAFREE,MSUALG_6,MSAFREE2,CARD_5,FINSEQ_2,FINSEQ_3,MSUALG_9,MSUALG_4,EQREL_1,FUNCT_5,ORDERS_2,RELAT_2,PARTFUN1,ORDERS_1,FUNCT_7,FUNCOP_1,TREES_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB11,CKB12,CKB13,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB26,CKB27,CKB28,CKB29,CKB30;
schemes CLASSES1,FUNCT_1,RELSET_1,DTCONSTR,XBOOLE_0,FUNCT_2,PBOOLE;
registrations XBOOLE_0,SUBSET_1,RELAT_1,ORDINAL1,PARTFUN1,FUNCOP_1,FUNCT_1,PBOOLE,TREES_2,TREES_3,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_3,MSAFREE,MSUALG_4,MSUALG_9,OSALG_1,OSALG_4,RELSET_1,FINSEQ_1,CKB8,CKB10,CKB14,CKB16,CKB24;
constructors XXREAL_0,NAT_1,FINSEQOP,FUNCT_7,MSUALG_3,MSAFREE,ORDERS_3,OSALG_2,OSALG_3,OSALG_4,RELSET_1,CKB1,CKB3,CKB4,CKB5,CKB7,CKB12,CKB13,CKB15,CKB21,CKB22,CKB23,CKB25;
requirements BOOLE,SUBSET;
begin
reserve S for OrderSortedSign;
reserve X for (ManySortedSet of S);
reserve o for (OperSymbol of S);
definition
let S being OrderSortedSign;
let X being  non-empty (ManySortedSet of S);
let t being (Element of ( TS ( DTConOSA X ) ));
func LeastSort t -> (SortSymbol of S) means 
:Def12: (t in ( (the Sorts of ( ParsedTermsOSA X )) . it ) & (for s1 being (Element of S) holds (t in ( (the Sorts of ( ParsedTermsOSA X )) . s1 ) implies it <= s1)));
existence
proof
set D = ( DTConOSA X );
defpred P[ set ]
 means
(ex s being (SortSymbol of S) st ($1 in ( (the Sorts of ( ParsedTermsOSA X )) . s ) & (for s1 being (Element of S) holds ($1 in ( (the Sorts of ( ParsedTermsOSA X )) . s1 ) implies s <= s1))));
A1: (for nt being (Symbol of D) holds (for ts being (FinSequence of ( TS D )) holds ((nt ==> ( roots ts ) & (for t being (DecoratedTree of (the carrier of D)) holds (t in ( rng ts ) implies P[ t ]))) implies P[ ( nt -tree ts ) ])))
proof
let nt being (Symbol of D);
let ts being (FinSequence of ( TS D ));
assume that
A2: nt ==> ( roots ts )
and
(for t being (DecoratedTree of (the carrier of D)) holds (t in ( rng ts ) implies P[ t ]));
consider o being (OperSymbol of S) such that nt = [ o,(the carrier of S) ] and ts in ( Args (o,( ParsedTermsOSA X )) ) and ( nt -tree ts ) = ( ( Den (o,( ParsedTermsOSA X )) ) . ts ) and A3: (for s1 being (Element of S) holds (( nt -tree ts ) in ( (the Sorts of ( ParsedTermsOSA X )) . s1 ) iff ( the_result_sort_of o ) <= s1)) by A2,CKB29:1;
reconsider s = ( the_result_sort_of o ) as (SortSymbol of S);
take s;
thus thesis by A3;
end;
A4: (for s being (Symbol of D) holds (s in ( Terminals D ) implies P[ ( root-tree s ) ]))
proof
let sy being (Symbol of D);
assume sy in ( Terminals D );
then consider s being (Element of S),x being set such that A5: x in ( X . s ) and A6: sy = [ x,s ] by CKB11:1;
reconsider s as (SortSymbol of S);
take s;
thus thesis by A5,A6,CKB27:1;
end;
(for t being (DecoratedTree of (the carrier of D)) holds (t in ( TS D ) implies P[ t ])) from DTCONSTR:sch 7(A4,A1);
hence thesis;
end;
uniqueness
proof
let s2 being (SortSymbol of S);
let s3 being (SortSymbol of S);
assume that
A1: t in ( (the Sorts of ( ParsedTermsOSA X )) . s2 )
and
A2: (for s1 being (Element of S) holds (t in ( (the Sorts of ( ParsedTermsOSA X )) . s1 ) implies s2 <= s1))
and
A3: t in ( (the Sorts of ( ParsedTermsOSA X )) . s3 )
and
A4: (for s1 being (Element of S) holds (t in ( (the Sorts of ( ParsedTermsOSA X )) . s1 ) implies s3 <= s1));
A5: s2 <= s3 by A2,A3;
s3 <= s2 by A1,A4;
hence thesis by A5,ORDERS_2:2;
end;
end;
