environ
vocabularies OSALG_1,MSUALG_2,OSALG_2,MSUALG_1,TARSKI,STRUCT_0,RELAT_1,SEQM_3,PBOOLE,MSUALG_3,REALSET1,ZFMISC_1,XBOOLE_0,CARD_3,MSAFREE,SUBSET_1,FINSEQ_1,MARGREL1,FUNCT_1,XXREAL_0,PARTFUN1,LANG1,TDGROUP,DTCONSTR,TREES_3,TREES_4,NAT_1,TREES_2,OSALG_4,CARD_5,NATTRA_1,CARD_LAR,QC_LANG1,EQREL_1,RELAT_2,MSUALG_4,COH_SP,MCART_1,UNIALG_2,MEMBER_1,FUNCT_7,OSAFREE;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NAT_1,RELAT_1,RELSET_1,FUNCT_1,MCART_1,PARTFUN1,FUNCT_2,FINSEQ_1,FINSEQ_2,PBOOLE,RELAT_2,TREES_2,CARD_3,EQREL_1,STRUCT_0,LANG1,TREES_3,TREES_4,DTCONSTR,ORDERS_2,ORDERS_3,MSUALG_1,MSUALG_2,MSUALG_3,MSUALG_4,OSALG_1,OSALG_2,OSALG_3,OSALG_4,MSAFREE,FUNCT_7,CKB1,CKB3,CKB4,CKB5,CKB7,CKB12,CKB13,CKB15,CKB21,CKB22,CKB23,CKB25,CKB31,CKB32,CKB38,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB53;
definitions TARSKI,XBOOLE_0,PBOOLE,MSUALG_3,OSALG_1,OSALG_3,OSALG_4,CKB1,CKB3,CKB4,CKB5,CKB7,CKB12,CKB13,CKB15,CKB21,CKB22,CKB23,CKB31,CKB38,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB53;
theorems TARSKI,FUNCT_1,FUNCT_2,MCART_1,ZFMISC_1,PBOOLE,CARD_3,MSUALG_1,MSUALG_2,MSUALG_3,RELAT_1,LANG1,DTCONSTR,FINSEQ_1,TREES_4,TREES_1,DOMAIN_1,RELSET_1,XBOOLE_0,XBOOLE_1,OSALG_1,OSALG_2,OSALG_3,OSALG_4,MSAFREE,MSUALG_6,MSAFREE2,CARD_5,FINSEQ_2,FINSEQ_3,MSUALG_9,MSUALG_4,EQREL_1,FUNCT_5,ORDERS_2,RELAT_2,PARTFUN1,ORDERS_1,FUNCT_7,FUNCOP_1,TREES_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB11,CKB12,CKB13,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58;
schemes CLASSES1,FUNCT_1,RELSET_1,DTCONSTR,XBOOLE_0,FUNCT_2,PBOOLE;
registrations XBOOLE_0,SUBSET_1,RELAT_1,ORDINAL1,PARTFUN1,FUNCOP_1,FUNCT_1,PBOOLE,TREES_2,TREES_3,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_3,MSAFREE,MSUALG_4,MSUALG_9,OSALG_1,OSALG_4,RELSET_1,FINSEQ_1,CKB8,CKB10,CKB14,CKB16,CKB24,CKB37,CKB40,CKB59;
constructors XXREAL_0,NAT_1,FINSEQOP,FUNCT_7,MSUALG_3,MSAFREE,ORDERS_3,OSALG_2,OSALG_3,OSALG_4,RELSET_1,CKB1,CKB3,CKB4,CKB5,CKB7,CKB12,CKB13,CKB15,CKB21,CKB22,CKB23,CKB25,CKB31,CKB38,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB53;
requirements BOOLE,SUBSET;
begin
reserve x for set;
definition
let S being  locally_directed OrderSortedSign;
let X being  non-empty (ManySortedSet of S);
let s being (Element of S);
func PTVars (s,X) -> (Subset of ( (the Sorts of ( ParsedTermsOSA X )) . s ))
means
:Def24: (for x being set holds (x in it iff (ex a being set st (a in ( X . s ) & x = ( root-tree [ a,s ] )))));
existence
proof
defpred P[ set ]
 means
(ex a being set st (a in ( X . s ) & $1 = ( root-tree [ a,s ] )));
set D = ( DTConOSA X );
set PTA = ( ParsedTermsOSA X );
set SO = (the Sorts of PTA);
consider A being set such that A1: (for x holds (x in A iff (x in ( SO . s ) & P[ x ]))) from XBOOLE_0:sch 1;
A c= ( SO . s )
proof
let x;
assume x in A;
hence thesis by A1;
end;
then reconsider A as (Subset of ( SO . s ));
(for x holds (x in A iff P[ x ]))
proof
( dom ( coprod X ) ) = (the carrier of S) by PARTFUN1:def 2;
then ( ( coprod X ) . s ) in ( rng ( coprod X ) ) by FUNCT_1:def 3;
then A2: ( coprod (s,X) ) in ( rng ( coprod X ) ) by MSAFREE:def 3;
A3: ( Terminals D ) = ( Union ( coprod X ) ) by CKB9:1;
set A1 = { aa where aa is (Element of ( TS D )): ((ex s1 being (Element of S) st (ex x being set st ((s1 <= s & x in ( X . s1 )) & aa = ( root-tree [ x,s1 ] )))) or (ex o1 being (OperSymbol of S) st ([ o1,(the carrier of S) ] = ( aa . ( {} ) ) & ( the_result_sort_of o1 ) <= s))) };
let x;
thus (x in A implies P[ x ]) by A1;
assume A4: P[ x ];
then consider a being set such that A5: a in ( X . s ) and A6: x = ( root-tree [ a,s ] );
A7: ( ( ParsedTerms X ) . s ) = ( ParsedTerms (X,s) ) by CKB15:def 1;
set sa = [ a,s ];
sa in ( coprod (s,X) ) by A5,MSAFREE:def 2;
then sa in ( union ( rng ( coprod X ) ) ) by A2,TARSKI:def 4;
then A8: sa in ( Terminals D ) by A3,CARD_3:def 4;
then reconsider sa as (Symbol of D);
reconsider b = ( root-tree sa ) as (Element of ( TS D )) by A8,DTCONSTR:def 1;
b in A1 by A5;
hence thesis by A1,A4,A6,A7;
end;
hence thesis;
end;
uniqueness
proof
set PTA = ( ParsedTermsOSA X );
set SO = (the Sorts of PTA);
let A being (Subset of ( SO . s )),B being (Subset of ( SO . s ));
assume that
A9: (for x being set holds (x in A iff (ex a being set st (a in ( X . s ) & x = ( root-tree [ a,s ] )))))
and
A10: (for x being set holds (x in B iff (ex a being set st (a in ( X . s ) & x = ( root-tree [ a,s ] )))));
thus A c= B
proof
let x being set;
assume x in A;
then (ex a being set st (a in ( X . s ) & x = ( root-tree [ a,s ] ))) by A9;
hence thesis by A10;
end;

let x being set;
assume x in B;
then (ex a being set st (a in ( X . s ) & x = ( root-tree [ a,s ] ))) by A10;
hence thesis by A9;
end;
end;
