environ
vocabularies OSALG_1,MSUALG_2,OSALG_2,MSUALG_1,TARSKI,STRUCT_0,RELAT_1,SEQM_3,PBOOLE,MSUALG_3,REALSET1,ZFMISC_1,XBOOLE_0,CARD_3,MSAFREE,SUBSET_1,FINSEQ_1,MARGREL1,FUNCT_1,XXREAL_0,PARTFUN1,LANG1,TDGROUP,DTCONSTR,TREES_3,TREES_4,NAT_1,TREES_2,OSALG_4,CARD_5,NATTRA_1,CARD_LAR,QC_LANG1,EQREL_1,RELAT_2,MSUALG_4,COH_SP,MCART_1,UNIALG_2,MEMBER_1,FUNCT_7,OSAFREE;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NAT_1,RELAT_1,RELSET_1,FUNCT_1,MCART_1,PARTFUN1,FUNCT_2,FINSEQ_1,FINSEQ_2,PBOOLE,RELAT_2,TREES_2,CARD_3,EQREL_1,STRUCT_0,LANG1,TREES_3,TREES_4,DTCONSTR,ORDERS_2,ORDERS_3,MSUALG_1,MSUALG_2,MSUALG_3,MSUALG_4,OSALG_1,OSALG_2,OSALG_3,OSALG_4,MSAFREE,FUNCT_7,CKB1;
definitions TARSKI,XBOOLE_0,PBOOLE,MSUALG_3,OSALG_1,OSALG_3,OSALG_4,CKB1;
theorems TARSKI,FUNCT_1,FUNCT_2,MCART_1,ZFMISC_1,PBOOLE,CARD_3,MSUALG_1,MSUALG_2,MSUALG_3,RELAT_1,LANG1,DTCONSTR,FINSEQ_1,TREES_4,TREES_1,DOMAIN_1,RELSET_1,XBOOLE_0,XBOOLE_1,OSALG_1,OSALG_2,OSALG_3,OSALG_4,MSAFREE,MSUALG_6,MSAFREE2,CARD_5,FINSEQ_2,FINSEQ_3,MSUALG_9,MSUALG_4,EQREL_1,FUNCT_5,ORDERS_2,RELAT_2,PARTFUN1,ORDERS_1,FUNCT_7,FUNCOP_1,TREES_3,CKB1;
schemes CLASSES1,FUNCT_1,RELSET_1,DTCONSTR,XBOOLE_0,FUNCT_2,PBOOLE;
registrations XBOOLE_0,SUBSET_1,RELAT_1,ORDINAL1,PARTFUN1,FUNCOP_1,FUNCT_1,PBOOLE,TREES_2,TREES_3,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_3,MSAFREE,MSUALG_4,MSUALG_9,OSALG_1,OSALG_4,RELSET_1,FINSEQ_1;
constructors XXREAL_0,NAT_1,FINSEQOP,FUNCT_7,MSUALG_3,MSAFREE,ORDERS_3,OSALG_2,OSALG_3,OSALG_4,RELSET_1,CKB1;
requirements BOOLE,SUBSET;
begin
theorem
(for S being OrderSortedSign holds (for U0 being  strict  non-empty (OSAlgebra of S) holds (for A being (MSSubset of U0) holds (A is (OSGeneratorSet of U0) iff (for O being (OSSubset of U0) holds (O = ( OSCl A ) implies ( GenOSAlg O ) = U0))))))
proof
let S being OrderSortedSign;
let U0 being  strict  non-empty (OSAlgebra of S);
let A being (MSSubset of U0);
thus (A is (OSGeneratorSet of U0) implies (for O being (OSSubset of U0) holds (O = ( OSCl A ) implies ( GenOSAlg O ) = U0)))
proof
reconsider U1 = U0 as (MSSubAlgebra of U0) by MSUALG_2:5;
assume A1: A is (OSGeneratorSet of U0);
let O being (OSSubset of U0);
assume O = ( OSCl A );
then (the Sorts of ( GenOSAlg O )) = (the Sorts of U1) by A1,CKB1:def 1;
hence thesis by MSUALG_2:9;
end;

assume A2: (for O being (OSSubset of U0) holds (O = ( OSCl A ) implies ( GenOSAlg O ) = U0));
let O being (OSSubset of U0);
assume O = ( OSCl A );
hence thesis by A2;
end;
