environ
vocabularies OSALG_1,MSUALG_2,OSALG_2,MSUALG_1,TARSKI,STRUCT_0,RELAT_1,SEQM_3,PBOOLE,MSUALG_3,REALSET1,ZFMISC_1,XBOOLE_0,CARD_3,MSAFREE,SUBSET_1,FINSEQ_1,MARGREL1,FUNCT_1,XXREAL_0,PARTFUN1,LANG1,TDGROUP,DTCONSTR,TREES_3,TREES_4,NAT_1,TREES_2,OSALG_4,CARD_5,NATTRA_1,CARD_LAR,QC_LANG1,EQREL_1,RELAT_2,MSUALG_4,COH_SP,MCART_1,UNIALG_2,MEMBER_1,FUNCT_7,OSAFREE;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NAT_1,RELAT_1,RELSET_1,FUNCT_1,MCART_1,PARTFUN1,FUNCT_2,FINSEQ_1,FINSEQ_2,PBOOLE,RELAT_2,TREES_2,CARD_3,EQREL_1,STRUCT_0,LANG1,TREES_3,TREES_4,DTCONSTR,ORDERS_2,ORDERS_3,MSUALG_1,MSUALG_2,MSUALG_3,MSUALG_4,OSALG_1,OSALG_2,OSALG_3,OSALG_4,MSAFREE,FUNCT_7,CKB1,CKB3,CKB4,CKB5,CKB7,CKB12,CKB13,CKB15,CKB21,CKB22,CKB23,CKB25,CKB31,CKB32,CKB38,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB53,CKB60,CKB63,CKB65,CKB68,CKB71;
definitions TARSKI,XBOOLE_0,PBOOLE,MSUALG_3,OSALG_1,OSALG_3,OSALG_4,CKB1,CKB3,CKB4,CKB5,CKB7,CKB12,CKB13,CKB15,CKB21,CKB22,CKB23,CKB31,CKB38,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB53,CKB60,CKB63,CKB65,CKB68,CKB71;
theorems TARSKI,FUNCT_1,FUNCT_2,MCART_1,ZFMISC_1,PBOOLE,CARD_3,MSUALG_1,MSUALG_2,MSUALG_3,RELAT_1,LANG1,DTCONSTR,FINSEQ_1,TREES_4,TREES_1,DOMAIN_1,RELSET_1,XBOOLE_0,XBOOLE_1,OSALG_1,OSALG_2,OSALG_3,OSALG_4,MSAFREE,MSUALG_6,MSAFREE2,CARD_5,FINSEQ_2,FINSEQ_3,MSUALG_9,MSUALG_4,EQREL_1,FUNCT_5,ORDERS_2,RELAT_2,PARTFUN1,ORDERS_1,FUNCT_7,FUNCOP_1,TREES_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB11,CKB12,CKB13,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB60,CKB62,CKB63,CKB64,CKB65,CKB67,CKB68,CKB69,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76;
schemes CLASSES1,FUNCT_1,RELSET_1,DTCONSTR,XBOOLE_0,FUNCT_2,PBOOLE;
registrations XBOOLE_0,SUBSET_1,RELAT_1,ORDINAL1,PARTFUN1,FUNCOP_1,FUNCT_1,PBOOLE,TREES_2,TREES_3,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_3,MSAFREE,MSUALG_4,MSUALG_9,OSALG_1,OSALG_4,RELSET_1,FINSEQ_1,CKB8,CKB10,CKB14,CKB16,CKB24,CKB37,CKB40,CKB59,CKB61,CKB66,CKB70;
constructors XXREAL_0,NAT_1,FINSEQOP,FUNCT_7,MSUALG_3,MSAFREE,ORDERS_3,OSALG_2,OSALG_3,OSALG_4,RELSET_1,CKB1,CKB3,CKB4,CKB5,CKB7,CKB12,CKB13,CKB15,CKB21,CKB22,CKB23,CKB25,CKB31,CKB38,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB53,CKB60,CKB63,CKB65,CKB68,CKB71;
requirements BOOLE,SUBSET;
begin
definition
let S being  locally_directed OrderSortedSign;
let X being  non-empty (ManySortedSet of S);
let A being  non-empty (ManySortedSet of (the carrier of S));
let F being (ManySortedFunction of ( PTVars X ),A);
let t being (Symbol of ( DTConOSA X ));
assume A1: t in ( Terminals ( DTConOSA X ) );
func pi (F,A,t) -> (Element of ( Union A ))
means
:Def29: (for f being Function holds (f = ( F . ( t `2 ) ) implies it = ( f . ( root-tree t ) )));
existence
proof
set FG = ( PTVars X );
set D = ( DTConOSA X );
consider s being (Element of S),x being set such that x in ( X . s ) and A2: t = [ x,s ] by A1,CKB11:1;
( FG . s ) = ( PTVars (s,X) ) by CKB63:def 1;
then A3: ( dom ( F . s ) ) = ( PTVars (s,X) ) by FUNCT_2:def 1
.= { ( root-tree tt ) where tt is (Symbol of D): (tt in ( Terminals D ) & ( tt `2 ) = s) } by CKB62:1;
( t `2 ) = s by A2,MCART_1:7;
then ( root-tree t ) in ( dom ( F . s ) ) by A1,A3;
then A4: ( ( F . s ) . ( root-tree t ) ) in ( rng ( F . s ) ) by FUNCT_1:def 3;
( dom A ) = (the carrier of S) by PARTFUN1:def 2;
then A5: ( A . s ) in ( rng A ) by FUNCT_1:def 3;
( rng ( F . s ) ) c= ( A . s ) by RELAT_1:def 19;
then ( ( F . s ) . ( root-tree t ) ) in ( union ( rng A ) ) by A4,A5,TARSKI:def 4;
then reconsider eu = ( ( F . s ) . ( root-tree t ) ) as (Element of ( Union A )) by CARD_3:def 4;
take eu;
let f being Function;
assume f = ( F . ( t `2 ) );
hence thesis by A2,MCART_1:7;
end;
uniqueness
proof
consider s being (Element of S),x being set such that x in ( X . s ) and A6: t = [ x,s ] by A1,CKB11:1;
reconsider f = ( F . s ) as Function;
let a being (Element of ( Union A )),b being (Element of ( Union A ));
assume that
A7: (for f being Function holds (f = ( F . ( t `2 ) ) implies a = ( f . ( root-tree t ) )))
and
A8: (for f being Function holds (f = ( F . ( t `2 ) ) implies b = ( f . ( root-tree t ) )));
A9: f = ( F . ( t `2 ) ) by A6,MCART_1:7;
then a = ( f . ( root-tree t ) ) by A7;
hence thesis by A8,A9;
end;
end;
