environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,EQREL_1,TARSKI,ZFMISC_1,FUNCT_1,SETFAM_1,RELAT_1,PARTFUN1,FUNCT_2,MARGREL1,BVFUNC_1,XBOOLEAN,BVFUNC_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,SETFAM_1,RELSET_1,PARTFUN1,FUNCT_2,EQREL_1,PARTIT1,BVFUNC_1,CKB1,CKB2;
definitions TARSKI,BVFUNC_1,XBOOLE_0,XBOOLEAN;
theorems TARSKI,FUNCT_1,SETFAM_1,EQREL_1,ZFMISC_1,FUNCT_2,SUBSET_1,MARGREL1,BINARITH,PARTIT1,BVFUNC_1,RELAT_1,XBOOLE_0,XBOOLE_1,XBOOLEAN,PARTFUN1,CKB3;
schemes DOMAIN_1,PARTFUN2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,XBOOLEAN,EQREL_1,MARGREL1,PARTIT1;
constructors SETFAM_1,PARTIT1,BVFUNC_1,RELSET_1,CKB1,CKB2;
requirements SUBSET,BOOLE;
begin
reserve Y for non  empty set;
reserve G for (Subset of ( PARTITIONS Y ));
definition
let Y;
let G being (Subset of ( PARTITIONS Y ));
func '/\' G -> (a_partition of Y) means 
:Def1: (for x being set holds (x in it iff (ex h being Function st (ex F being (Subset-Family of Y) st ((((( dom h ) = G & ( rng h ) = F) & (for d being set holds (d in G implies ( h . d ) in d))) & x = ( Intersect F )) & x <> ( {} ))))));
existence
proof
defpred P[ set ]
 means
(ex h being Function st (ex F being (Subset-Family of Y) st ((((( dom h ) = G & ( rng h ) = F) & (for d being set holds (d in G implies ( h . d ) in d))) & $1 = ( Intersect F )) & $1 <> ( {} ))));
consider X being set such that A1: (for x being set holds (x in X iff (x in ( bool Y ) & P[ x ]))) from XBOOLE_0:sch 1;
A2: (for A being (Subset of Y) holds (A in X implies (A <> ( {} ) & (for B being (Subset of Y) holds (B in X implies (A = B or A misses B))))))
proof
let A being (Subset of Y);
assume A in X;
then consider h1 being Function,F1 being (Subset-Family of Y) such that A3: ( dom h1 ) = G and A4: ( rng h1 ) = F1 and A5: (for d being set holds (d in G implies ( h1 . d ) in d)) and A6: A = ( Intersect F1 ) and A7: A <> ( {} ) by A1;
thus A <> ( {} ) by A7;
let B being (Subset of Y);
assume B in X;
then consider h2 being Function,F2 being (Subset-Family of Y) such that A8: ( dom h2 ) = G and A9: ( rng h2 ) = F2 and A10: (for d being set holds (d in G implies ( h2 . d ) in d)) and A11: B = ( Intersect F2 ) and B <> ( {} ) by A1;
per cases ;
suppose A12: G = ( {} );

then ( rng h1 ) = ( {} ) by A3,RELAT_1:42;
hence thesis by A4,A6,A8,A9,A11,A12,RELAT_1:42;
end;
suppose A13: G <> ( {} );

then A14: ( rng h2 ) <> ( {} ) by A8,RELAT_1:42;
A15: ( rng h1 ) <> ( {} ) by A3,A13,RELAT_1:42;
now
assume A meets B;
then consider p being set such that A16: p in A and A17: p in B by XBOOLE_0:3;
A18: p in ( meet ( rng h2 ) ) by A9,A11,A14,A17,SETFAM_1:def 9;
A19: p in ( meet ( rng h1 ) ) by A4,A6,A15,A16,SETFAM_1:def 9;
(for g being set holds (g in G implies ( h1 . g ) = ( h2 . g )))
proof
let g being set;
assume A20: g in G;
then reconsider g as (a_partition of Y) by PARTIT1:def 3;
( h1 . g ) in ( rng h1 ) by A3,A20,FUNCT_1:def 3;
then A21: p in ( h1 . g ) by A19,SETFAM_1:def 1;
( h2 . g ) in ( rng h2 ) by A8,A20,FUNCT_1:def 3;
then A22: p in ( h2 . g ) by A18,SETFAM_1:def 1;
(( h1 . g ) in g & ( h2 . g ) in g) by A5,A10,A20;
then (( h1 . g ) = ( h2 . g ) or ( h1 . g ) misses ( h2 . g )) by EQREL_1:def 4;
hence thesis by A21,A22,XBOOLE_0:3;
end;
hence thesis by A3,A4,A6,A8,A9,A11,FUNCT_1:2;
end;
hence thesis;
end;
end;
A23: Y c= ( union X )
proof
let y being set;
assume y in Y;
then reconsider y as (Element of Y);
consider a being (Subset of Y) such that A24: y in a and A25: (ex h being Function st (ex F being (Subset-Family of Y) st ((((( dom h ) = G & ( rng h ) = F) & (for d being set holds (d in G implies ( h . d ) in d))) & a = ( Intersect F )) & a <> ( {} )))) by CKB3:1;
a in X by A1,A25;
hence thesis by A24,TARSKI:def 4;
end;
( union X ) c= Y
proof
let a being set;
assume a in ( union X );
then consider p being set such that A26: a in p and A27: p in X by TARSKI:def 4;
(ex h being Function st (ex F being (Subset-Family of Y) st ((((( dom h ) = G & ( rng h ) = F) & (for d being set holds (d in G implies ( h . d ) in d))) & p = ( Intersect F )) & p <> ( {} )))) by A1,A27;
hence thesis by A26;
end;
then A28: ( union X ) = Y by A23,XBOOLE_0:def 10;
take X;
X c= ( bool Y )
proof
let a being set;
assume a in X;
hence thesis by A1;
end;
then reconsider X as (Subset-Family of Y);
X is (a_partition of Y) by A28,A2,EQREL_1:def 4;
hence thesis by A1;
end;
uniqueness
proof
let A1 being (a_partition of Y);
let A2 being (a_partition of Y);
assume that
A29: (for x being set holds (x in A1 iff (ex h being Function st (ex F being (Subset-Family of Y) st ((((( dom h ) = G & ( rng h ) = F) & (for d being set holds (d in G implies ( h . d ) in d))) & x = ( Intersect F )) & x <> ( {} ))))))
and
A30: (for x being set holds (x in A2 iff (ex h being Function st (ex F being (Subset-Family of Y) st ((((( dom h ) = G & ( rng h ) = F) & (for d being set holds (d in G implies ( h . d ) in d))) & x = ( Intersect F )) & x <> ( {} ))))));
now
let y being set;
(y in A1 iff (ex h being Function st (ex F being (Subset-Family of Y) st ((((( dom h ) = G & ( rng h ) = F) & (for d being set holds (d in G implies ( h . d ) in d))) & y = ( Intersect F )) & y <> ( {} ))))) by A29;
hence (y in A1 iff y in A2) by A30;
end;
hence thesis by TARSKI:1;
end;
end;
