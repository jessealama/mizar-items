environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,EQREL_1,TARSKI,ZFMISC_1,FUNCT_1,SETFAM_1,RELAT_1,PARTFUN1,FUNCT_2,MARGREL1,BVFUNC_1,XBOOLEAN,BVFUNC_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,SETFAM_1,RELSET_1,PARTFUN1,FUNCT_2,EQREL_1,PARTIT1,BVFUNC_1,CKB1,CKB2,CKB4,CKB5,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
definitions TARSKI,BVFUNC_1,XBOOLE_0,XBOOLEAN,CKB4,CKB5,CKB7,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17;
theorems TARSKI,FUNCT_1,SETFAM_1,EQREL_1,ZFMISC_1,FUNCT_2,SUBSET_1,MARGREL1,BINARITH,PARTIT1,BVFUNC_1,RELAT_1,XBOOLE_0,XBOOLE_1,XBOOLEAN,PARTFUN1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36;
schemes DOMAIN_1,PARTFUN2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,XBOOLEAN,EQREL_1,MARGREL1,PARTIT1;
constructors SETFAM_1,PARTIT1,BVFUNC_1,RELSET_1,CKB1,CKB2,CKB4,CKB5,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
requirements SUBSET,BOOLE;
begin
reserve Y for non  empty set;
reserve G for (Subset of ( PARTITIONS Y ));
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve u for (Element of ( Funcs (Y,( BOOLEAN )) ));
theorem
(for PA being (a_partition of Y) holds (u is_independent_of PA,G implies ( All (( a 'or' u ),PA,G) ) '<' ( ( Ex (a,PA,G) ) 'or' u )))
proof
let PA being (a_partition of Y);
assume u is_independent_of PA,G;
then A1: u is_dependent_of ( CompF (PA,G) ) by CKB15:def 1;
let z being (Element of Y);
A2: z in ( EqClass (z,( CompF (PA,G) )) ) by EQREL_1:def 6;
assume A3: ( ( All (( a 'or' u ),PA,G) ) . z ) = ( TRUE );
A4: (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies (( a . x ) = ( TRUE ) or ( u . x ) = ( TRUE ))))
proof
let x being (Element of Y);
assume x in ( EqClass (z,( CompF (PA,G) )) );
then ( ( a 'or' u ) . x ) = ( TRUE ) by A3,BVFUNC_1:def 16;
then A5: ( ( a . x ) 'or' ( u . x ) ) = ( TRUE ) by BVFUNC_1:def 4;
(( u . x ) = ( TRUE ) or ( u . x ) = ( FALSE )) by XBOOLEAN:def 3;
hence thesis by A5,BINARITH:3;
end;
A6: ( ( ( Ex (a,PA,G) ) 'or' u ) . z ) = ( ( ( Ex (a,PA,G) ) . z ) 'or' ( u . z ) ) by BVFUNC_1:def 4;
per cases ;
suppose (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( u . x ) = ( TRUE )));

then ( ( ( Ex (a,PA,G) ) 'or' u ) . z ) = ( ( ( Ex (a,PA,G) ) . z ) 'or' ( TRUE ) ) by A2,A6
.= ( TRUE ) by BINARITH:10;
hence thesis;
end;
suppose ((not (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( u . x ) = ( TRUE )))) & (ex x being (Element of Y) st (x in ( EqClass (z,( CompF (PA,G) )) ) & ( a . x ) = ( TRUE ))));

then ( ( ( Ex (a,PA,G) ) 'or' u ) . z ) = ( ( TRUE ) 'or' ( u . z ) ) by A6,BVFUNC_1:def 17
.= ( TRUE ) by BINARITH:10;
hence thesis;
end;
suppose A7: ((not (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( u . x ) = ( TRUE )))) & (not (ex x being (Element of Y) st (x in ( EqClass (z,( CompF (PA,G) )) ) & ( a . x ) = ( TRUE )))));

A8: z in ( EqClass (z,( CompF (PA,G) )) ) by EQREL_1:def 6;
then A9: ( a . z ) <> ( TRUE ) by A7;
consider x1 being (Element of Y) such that A10: x1 in ( EqClass (z,( CompF (PA,G) )) ) and A11: ( u . x1 ) <> ( TRUE ) by A7;
( u . x1 ) = ( u . z ) by A1,A8,A10,BVFUNC_1:def 15;
hence thesis by A4,A8,A9,A11;
end;
end;
