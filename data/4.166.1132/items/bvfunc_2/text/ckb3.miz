environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,EQREL_1,TARSKI,ZFMISC_1,FUNCT_1,SETFAM_1,RELAT_1,PARTFUN1,FUNCT_2,MARGREL1,BVFUNC_1,XBOOLEAN,BVFUNC_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,SETFAM_1,RELSET_1,PARTFUN1,FUNCT_2,EQREL_1,PARTIT1,BVFUNC_1,CKB1,CKB2;
definitions TARSKI,BVFUNC_1,XBOOLE_0,XBOOLEAN;
theorems TARSKI,FUNCT_1,SETFAM_1,EQREL_1,ZFMISC_1,FUNCT_2,SUBSET_1,MARGREL1,BINARITH,PARTIT1,BVFUNC_1,RELAT_1,XBOOLE_0,XBOOLE_1,XBOOLEAN,PARTFUN1;
schemes DOMAIN_1,PARTFUN2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,XBOOLEAN,EQREL_1,MARGREL1,PARTIT1;
constructors SETFAM_1,PARTIT1,BVFUNC_1,RELSET_1,CKB1,CKB2;
requirements SUBSET,BOOLE;
begin
reserve Y for non  empty set;
reserve G for (Subset of ( PARTITIONS Y ));
theorem
Th1: (for y being (Element of Y) holds (ex X being (Subset of Y) st (y in X & (ex h being Function st (ex F being (Subset-Family of Y) st ((((( dom h ) = G & ( rng h ) = F) & (for d being set holds (d in G implies ( h . d ) in d))) & X = ( Intersect F )) & X <> ( {} )))))))
proof
let y being (Element of Y);
deffunc F((Element of ( PARTITIONS Y ))) = ( EqClass (y,$1) );
defpred P[ set ]
 means
$1 in G;
consider h being (PartFunc of ( PARTITIONS Y ),( bool Y )) such that A1: (for d being (Element of ( PARTITIONS Y )) holds (d in ( dom h ) iff P[ d ])) and A2: (for d being (Element of ( PARTITIONS Y )) holds (d in ( dom h ) implies ( h /. d ) = F(d))) from PARTFUN2:sch 2;
A3: G c= ( dom h )
proof
let x being set;
assume x in G;
hence thesis by A1;
end;
A4: (for d being set holds (d in G implies ( h . d ) in d))
proof
let d being set;
assume A5: d in G;
then reconsider d as (a_partition of Y) by PARTIT1:def 3;
( h /. d ) = ( h . d ) by A3,A5,PARTFUN1:def 6;
then ( h . d ) = ( EqClass (y,d) ) by A2,A3,A5;
hence thesis;
end;
( dom h ) c= G
proof
let x being set;
assume x in ( dom h );
hence thesis by A1;
end;
then A6: ( dom h ) = G by A3,XBOOLE_0:def 10;
reconsider rr = ( rng h ) as (Subset-Family of Y);
A7: (for d being (Element of ( PARTITIONS Y )) holds (d in ( dom h ) implies y in ( h . d )))
proof
let d being (Element of ( PARTITIONS Y ));
assume A8: d in ( dom h );
then ( h /. d ) = ( EqClass (y,d) ) by A2;
then ( h . d ) = ( EqClass (y,d) ) by A8,PARTFUN1:def 6;
hence thesis by EQREL_1:def 6;
end;
A9: (for c being set holds (c in ( rng h ) implies y in c))
proof
let c being set;
assume c in ( rng h );
then (ex a being set st (a in ( dom h ) & c = ( h . a ))) by FUNCT_1:def 3;
hence thesis by A7;
end;
per cases ;
suppose ( rng h ) = ( {} );

then ( Intersect rr ) = Y by SETFAM_1:def 9;
hence thesis by A6,A4;
end;
suppose ( rng h ) <> ( {} );

then (y in ( meet ( rng h ) ) & ( Intersect rr ) = ( meet ( rng h ) )) by A9,SETFAM_1:def 1,SETFAM_1:def 9;
hence thesis by A6,A4;
end;
end;
