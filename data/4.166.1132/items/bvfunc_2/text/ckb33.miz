environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,EQREL_1,TARSKI,ZFMISC_1,FUNCT_1,SETFAM_1,RELAT_1,PARTFUN1,FUNCT_2,MARGREL1,BVFUNC_1,XBOOLEAN,BVFUNC_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,SETFAM_1,RELSET_1,PARTFUN1,FUNCT_2,EQREL_1,PARTIT1,BVFUNC_1,CKB1,CKB2,CKB4,CKB5,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
definitions TARSKI,BVFUNC_1,XBOOLE_0,XBOOLEAN,CKB4,CKB5,CKB7,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17;
theorems TARSKI,FUNCT_1,SETFAM_1,EQREL_1,ZFMISC_1,FUNCT_2,SUBSET_1,MARGREL1,BINARITH,PARTIT1,BVFUNC_1,RELAT_1,XBOOLE_0,XBOOLE_1,XBOOLEAN,PARTFUN1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32;
schemes DOMAIN_1,PARTFUN2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,XBOOLEAN,EQREL_1,MARGREL1,PARTIT1;
constructors SETFAM_1,PARTIT1,BVFUNC_1,RELSET_1,CKB1,CKB2,CKB4,CKB5,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
requirements SUBSET,BOOLE;
begin
reserve Y for non empty set;
reserve G for (Subset of ( PARTITIONS Y ));
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve u for (Element of ( Funcs (Y,( BOOLEAN )) ));
theorem
(for PA being (a_partition of Y) holds (u is_independent_of PA,G implies ( All (( u 'imp' a ),PA,G) ) = ( u 'imp' ( All (a,PA,G) ) )))
proof
let PA being (a_partition of Y);
assume u is_independent_of PA,G;
then A1: u is_dependent_of ( CompF (PA,G) ) by CKB15:def 1;
A2: ( u 'imp' ( All (a,PA,G) ) ) '<' ( All (( u 'imp' a ),PA,G) )
proof
let z being (Element of Y);
assume ( ( u 'imp' ( All (a,PA,G) ) ) . z ) = ( TRUE );
then A3: ( ( 'not' ( u . z ) ) 'or' ( ( All (a,PA,G) ) . z ) ) = ( TRUE ) by BVFUNC_1:def 8;
A4: (( ( All (a,PA,G) ) . z ) = ( TRUE ) or ( ( All (a,PA,G) ) . z ) = ( FALSE )) by XBOOLEAN:def 3;
now
per cases  by A3,A4,BINARITH:3;
suppose A5: ( ( All (a,PA,G) ) . z ) = ( TRUE );

(for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( ( u 'imp' a ) . x ) = ( TRUE )))
proof
let x being (Element of Y);
assume A6: x in ( EqClass (z,( CompF (PA,G) )) );
( ( u 'imp' a ) . x ) = ( ( 'not' ( u . x ) ) 'or' ( a . x ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( u . x ) ) 'or' ( TRUE ) ) by A5,A6,BVFUNC_1:def 16
.= ( TRUE ) by BINARITH:10;
hence thesis;
end;
hence thesis by BVFUNC_1:def 16;
end;
suppose A7: (( ( All (a,PA,G) ) . z ) <> ( TRUE ) & ( 'not' ( u . z ) ) = ( TRUE ));

A8: z in ( EqClass (z,( CompF (PA,G) )) ) by EQREL_1:def 6;
(for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( ( u 'imp' a ) . x ) = ( TRUE )))
proof
let x being (Element of Y);
assume x in ( EqClass (z,( CompF (PA,G) )) );
then (( ( u 'imp' a ) . x ) = ( ( 'not' ( u . x ) ) 'or' ( a . x ) ) & ( u . x ) = ( u . z )) by A1,A8,BVFUNC_1:def 8,BVFUNC_1:def 15;
hence thesis by A7,BINARITH:10;
end;
hence thesis by BVFUNC_1:def 16;
end;
end;
hence thesis;
end;
( All (( u 'imp' a ),PA,G) ) '<' ( u 'imp' ( All (a,PA,G) ) )
proof
let z being (Element of Y);
assume A9: ( ( All (( u 'imp' a ),PA,G) ) . z ) = ( TRUE );
A10: z in ( EqClass (z,( CompF (PA,G) )) ) by EQREL_1:def 6;
A11: ( ( u 'imp' ( All (a,PA,G) ) ) . z ) = ( ( 'not' ( u . z ) ) 'or' ( ( All (a,PA,G) ) . z ) ) by BVFUNC_1:def 8;
per cases ;
suppose (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( a . x ) = ( TRUE )));

then ( ( All (a,PA,G) ) . z ) = ( TRUE ) by BVFUNC_1:def 16;
hence thesis by A11,BINARITH:10;
end;
suppose ((not (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( a . x ) = ( TRUE )))) & (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( 'not' ( u . x ) ) = ( TRUE ))));

then ( 'not' ( u . z ) ) = ( TRUE ) by A10;
hence thesis by A11,BINARITH:10;
end;
suppose A12: ((not (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( a . x ) = ( TRUE )))) & (not (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( 'not' ( u . x ) ) = ( TRUE )))));

then consider x1 being (Element of Y) such that A13: x1 in ( EqClass (z,( CompF (PA,G) )) ) and A14: ( 'not' ( u . x1 ) ) <> ( TRUE );
consider x2 being (Element of Y) such that A15: x2 in ( EqClass (z,( CompF (PA,G) )) ) and A16: ( a . x2 ) <> ( TRUE ) by A12;
( u . x1 ) = ( u . x2 ) by A1,A13,A15,BVFUNC_1:def 15;
then ( 'not' ( u . x2 ) ) = ( FALSE ) by A14,XBOOLEAN:def 3;
then A17: ( u . x2 ) = ( TRUE ) by MARGREL1:11;
( a . x2 ) = ( FALSE ) by A16,XBOOLEAN:def 3;
then ( ( u 'imp' a ) . x2 ) = ( ( 'not' ( TRUE ) ) 'or' ( FALSE ) ) by A17,BVFUNC_1:def 8;
then ( ( u 'imp' a ) . x2 ) = ( ( FALSE ) 'or' ( FALSE ) ) by MARGREL1:11
.= ( FALSE );
hence thesis by A9,A15,BVFUNC_1:def 16;
end;
end;
hence thesis by A2,BVFUNC_1:15;
end;
