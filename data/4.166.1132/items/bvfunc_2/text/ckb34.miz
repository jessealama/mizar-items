environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,EQREL_1,TARSKI,ZFMISC_1,FUNCT_1,SETFAM_1,RELAT_1,PARTFUN1,FUNCT_2,MARGREL1,BVFUNC_1,XBOOLEAN,BVFUNC_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,SETFAM_1,RELSET_1,PARTFUN1,FUNCT_2,EQREL_1,PARTIT1,BVFUNC_1,CKB1,CKB2,CKB4,CKB5,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
definitions TARSKI,BVFUNC_1,XBOOLE_0,XBOOLEAN,CKB4,CKB5,CKB7,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17;
theorems TARSKI,FUNCT_1,SETFAM_1,EQREL_1,ZFMISC_1,FUNCT_2,SUBSET_1,MARGREL1,BINARITH,PARTIT1,BVFUNC_1,RELAT_1,XBOOLE_0,XBOOLE_1,XBOOLEAN,PARTFUN1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33;
schemes DOMAIN_1,PARTFUN2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,XBOOLEAN,EQREL_1,MARGREL1,PARTIT1;
constructors SETFAM_1,PARTIT1,BVFUNC_1,RELSET_1,CKB1,CKB2,CKB4,CKB5,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
requirements SUBSET,BOOLE;
begin
reserve Y for non  empty set;
reserve G for (Subset of ( PARTITIONS Y ));
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve u for (Element of ( Funcs (Y,( BOOLEAN )) ));
theorem
(for PA being (a_partition of Y) holds (u is_independent_of PA,G implies ( All (( a 'imp' u ),PA,G) ) = ( ( Ex (a,PA,G) ) 'imp' u )))
proof
let PA being (a_partition of Y);
assume u is_independent_of PA,G;
then A1: u is_dependent_of ( CompF (PA,G) ) by CKB15:def 1;
A2: ( ( Ex (a,PA,G) ) 'imp' u ) '<' ( All (( a 'imp' u ),PA,G) )
proof
let z being (Element of Y);
A3: z in ( EqClass (z,( CompF (PA,G) )) ) by EQREL_1:def 6;
assume ( ( ( Ex (a,PA,G) ) 'imp' u ) . z ) = ( TRUE );
then A4: ( ( 'not' ( ( Ex (a,PA,G) ) . z ) ) 'or' ( u . z ) ) = ( TRUE ) by BVFUNC_1:def 8;
A5: (( 'not' ( ( Ex (a,PA,G) ) . z ) ) = ( TRUE ) or ( 'not' ( ( Ex (a,PA,G) ) . z ) ) = ( FALSE )) by XBOOLEAN:def 3;
now
per cases  by A4,A5,BINARITH:3,XBOOLEAN:def 3;
case A6: ( u . z ) = ( TRUE );
(for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( ( a 'imp' u ) . x ) = ( TRUE )))
proof
let x being (Element of Y);
assume x in ( EqClass (z,( CompF (PA,G) )) );
then (( ( a 'imp' u ) . x ) = ( ( 'not' ( a . x ) ) 'or' ( u . x ) ) & ( u . x ) = ( u . z )) by A1,A3,BVFUNC_1:def 8,BVFUNC_1:def 15;
hence thesis by A6,BINARITH:10;
end;
hence thesis by BVFUNC_1:def 16;
end;
case (( 'not' ( ( Ex (a,PA,G) ) . z ) ) = ( TRUE ) & ( u . z ) = ( FALSE ));
then A7: ( ( Ex (a,PA,G) ) . z ) = ( FALSE ) by MARGREL1:11;
(for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( ( a 'imp' u ) . x ) = ( TRUE )))
proof
let x being (Element of Y);
assume x in ( EqClass (z,( CompF (PA,G) )) );
then ( a . x ) <> ( TRUE ) by A7,BVFUNC_1:def 17;
then (( ( a 'imp' u ) . x ) = ( ( 'not' ( a . x ) ) 'or' ( u . x ) ) & ( a . x ) = ( FALSE )) by BVFUNC_1:def 8,XBOOLEAN:def 3;
then ( ( a 'imp' u ) . x ) = ( ( TRUE ) 'or' ( u . x ) ) by MARGREL1:11
.= ( TRUE ) by BINARITH:10;
hence thesis;
end;
hence thesis by BVFUNC_1:def 16;
end;
end;
hence thesis;
end;
( All (( a 'imp' u ),PA,G) ) '<' ( ( Ex (a,PA,G) ) 'imp' u )
proof
let z being (Element of Y);
assume A8: ( ( All (( a 'imp' u ),PA,G) ) . z ) = ( TRUE );
A9: z in ( EqClass (z,( CompF (PA,G) )) ) by EQREL_1:def 6;
A10: ( ( ( Ex (a,PA,G) ) 'imp' u ) . z ) = ( ( 'not' ( ( Ex (a,PA,G) ) . z ) ) 'or' ( u . z ) ) by BVFUNC_1:def 8;
per cases ;
suppose (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( u . x ) = ( TRUE )));

then ( ( ( Ex (a,PA,G) ) 'imp' u ) . z ) = ( ( 'not' ( ( Ex (a,PA,G) ) . z ) ) 'or' ( TRUE ) ) by A9,A10
.= ( TRUE ) by BINARITH:10;
hence thesis;
end;
suppose A11: ((not (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( u . x ) = ( TRUE )))) & (ex x being (Element of Y) st (x in ( EqClass (z,( CompF (PA,G) )) ) & ( a . x ) = ( TRUE ))));

then consider x1 being (Element of Y) such that A12: x1 in ( EqClass (z,( CompF (PA,G) )) ) and A13: ( u . x1 ) <> ( TRUE );
consider x2 being (Element of Y) such that A14: x2 in ( EqClass (z,( CompF (PA,G) )) ) and A15: ( a . x2 ) = ( TRUE ) by A11;
A16: ( u . x1 ) = ( u . x2 ) by A1,A12,A14,BVFUNC_1:def 15;
( ( a 'imp' u ) . x2 ) = ( ( 'not' ( a . x2 ) ) 'or' ( u . x2 ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( TRUE ) ) 'or' ( FALSE ) ) by A13,A15,A16,XBOOLEAN:def 3
.= ( ( FALSE ) 'or' ( FALSE ) ) by MARGREL1:11
.= ( FALSE );
hence thesis by A8,A14,BVFUNC_1:def 16;
end;
suppose ((not (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( u . x ) = ( TRUE )))) & (not (ex x being (Element of Y) st (x in ( EqClass (z,( CompF (PA,G) )) ) & ( a . x ) = ( TRUE )))));

then ( ( ( Ex (a,PA,G) ) 'imp' u ) . z ) = ( ( 'not' ( FALSE ) ) 'or' ( u . z ) ) by A10,BVFUNC_1:def 17
.= ( ( TRUE ) 'or' ( u . z ) ) by MARGREL1:11
.= ( TRUE ) by BINARITH:10;
hence thesis;
end;
end;
hence thesis by A2,BVFUNC_1:15;
end;
