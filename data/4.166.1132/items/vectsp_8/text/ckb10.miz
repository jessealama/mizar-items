environ
vocabularies VECTSP_1,STRUCT_0,GROUP_4,XXREAL_2,LATTICES,RLSUB_2,RLSUB_1,XBOOLE_0,SUBSET_1,GROUP_2,FUNCT_1,ZFMISC_1,RELAT_1,SUPINF_2,SETFAM_1,ARYTM_3,PBOOLE,TARSKI,EQREL_1,REWRITE1,LATTICE3,RLVECT_3,GROUP_6,VECTSP_8,MSSUBFAM,UNIALG_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,LATTICE4,SETFAM_1,RLVECT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,STRUCT_0,VECTSP_1,LATTICES,VECTSP_5,LATTICE3,VECTSP_4,VECTSP_7,GRCAT_1,MOD_2,CKB1,CKB2,CKB4,CKB5,CKB6,CKB7;
definitions LATTICE3,TARSKI,XBOOLE_0,CKB1,CKB2,CKB6,CKB7;
theorems TARSKI,VECTSP_5,LATTICES,LATTICE3,LATTICE4,VECTSP_4,SETFAM_1,VECTSP_7,MOD_2,SUBSET_1,FUNCT_1,FUNCT_2,XBOOLE_0,XBOOLE_1,STRUCT_0,GRCAT_1,CKB1,CKB2,CKB6,CKB7,CKB8,CKB9;
schemes FUNCT_2,DOMAIN_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,STRUCT_0,LATTICES,VECTSP_2,VECTSP_4,VECTSP_5,GRCAT_1,MOD_2,RELSET_1,CKB3;
constructors SETFAM_1,BINOP_1,REALSET1,VECTSP_5,VECTSP_7,MOD_2,LATTICE3,LATTICE4,RELSET_1,GRCAT_1,CKB1,CKB2,CKB4,CKB5,CKB6,CKB7;
requirements BOOLE,SUBSET;
begin
reserve F for Field;
reserve VS for  strict (VectSp of F);
reserve u for set;
definition
let F;
let VS;
let G being non  empty (Subset of ( Subspaces VS ));
func meet G ->  strict (Subspace of VS) means 
:Def5: (the carrier of it) = ( meet ( ( carr VS ) .: G ) );
existence
proof
reconsider cG = ( ( carr VS ) .: G ) as (Subset-Family of VS);
set C0 = ( meet cG );
A1: (for X being set holds (X in ( ( carr VS ) .: G ) implies ( 0. VS ) in X))
proof
let X being set;
assume A2: X in ( ( carr VS ) .: G );
then reconsider X as (Subset of VS);
consider X1 being (Element of ( Subspaces VS )) such that X1 in G and A3: X = ( ( carr VS ) . X1 ) by A2,FUNCT_2:65;
A4: ( 0. VS ) in X1 by VECTSP_4:17;
X = (the carrier of X1) by A3,CKB7:def 1;
hence thesis by A4,STRUCT_0:def 5;
end;
( ( carr VS ) .: G ) <> ( {} ) by CKB8:1;
then A5: C0 <> ( {} ) by A1,SETFAM_1:def 1;
reconsider C0 as (Subset of VS);
A6: (for v,u being (Element of VS) holds ((v in C0 & u in C0) implies ( v + u ) in C0))
proof
let v being (Element of VS);
let u being (Element of VS);
assume that
A7: v in C0
and
A8: u in C0;
A9: (for X being set holds (X in ( ( carr VS ) .: G ) implies ( v + u ) in X))
proof
reconsider v1 = v,u1 = u as (Element of VS);
let X being set;
reconsider vu = ( v1 + u1 ) as (Element of VS);
assume A10: X in ( ( carr VS ) .: G );
then A11: v in X by A7,SETFAM_1:def 1;
A12: u in X by A8,A10,SETFAM_1:def 1;
reconsider X as (Subset of VS) by A10;
consider X1 being (Element of ( Subspaces VS )) such that X1 in G and A13: X = ( ( carr VS ) . X1 ) by A10,FUNCT_2:65;
A14: X = (the carrier of X1) by A13,CKB7:def 1;
then A15: u1 in X1 by A12,STRUCT_0:def 5;
consider X2 being  strict (Subspace of VS) such that A16: X2 = X1 by VECTSP_5:def 3;
v1 in X1 by A11,A14,STRUCT_0:def 5;
then vu in ( X1 + X1 ) by A15,VECTSP_5:1;
then vu in X2 by A16,VECTSP_5:4;
hence thesis by A14,A16,STRUCT_0:def 5;
end;
( ( carr VS ) .: G ) <> ( {} ) by CKB8:1;
hence thesis by A9,SETFAM_1:def 1;
end;
(for a being (Element of F) holds (for v being (Element of VS) holds (v in C0 implies ( a * v ) in C0)))
proof
let a being (Element of F);
let v being (Element of VS);
assume A17: v in C0;
A18: (for X being set holds (X in ( ( carr VS ) .: G ) implies ( a * v ) in X))
proof
reconsider v1 = v as (Element of VS);
let X being set;
assume A19: X in ( ( carr VS ) .: G );
then A20: v in X by A17,SETFAM_1:def 1;
reconsider X as (Subset of VS) by A19;
consider X1 being (Element of ( Subspaces VS )) such that X1 in G and A21: X = ( ( carr VS ) . X1 ) by A19,FUNCT_2:65;
A22: X = (the carrier of X1) by A21,CKB7:def 1;
then v1 in X1 by A20,STRUCT_0:def 5;
then ( a * v1 ) in X1 by VECTSP_4:21;
hence thesis by A22,STRUCT_0:def 5;
end;
( ( carr VS ) .: G ) <> ( {} ) by CKB8:1;
hence thesis by A18,SETFAM_1:def 1;
end;
then C0 is  linearly-closed by A6,VECTSP_4:def 1;
hence thesis by A5,VECTSP_4:34;
end;
uniqueness by VECTSP_4:29;
end;
