environ
vocabularies VECTSP_1,STRUCT_0,GROUP_4,XXREAL_2,LATTICES,RLSUB_2,RLSUB_1,XBOOLE_0,SUBSET_1,GROUP_2,FUNCT_1,ZFMISC_1,RELAT_1,SUPINF_2,SETFAM_1,ARYTM_3,PBOOLE,TARSKI,EQREL_1,REWRITE1,LATTICE3,RLVECT_3,GROUP_6,VECTSP_8,MSSUBFAM,UNIALG_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,LATTICE4,SETFAM_1,RLVECT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,STRUCT_0,VECTSP_1,LATTICES,VECTSP_5,LATTICE3,VECTSP_4,VECTSP_7,GRCAT_1,MOD_2,CKB1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB10,CKB17;
definitions LATTICE3,TARSKI,XBOOLE_0,CKB1,CKB2,CKB6,CKB7,CKB10,CKB17;
theorems TARSKI,VECTSP_5,LATTICES,LATTICE3,LATTICE4,VECTSP_4,SETFAM_1,VECTSP_7,MOD_2,SUBSET_1,FUNCT_1,FUNCT_2,XBOOLE_0,XBOOLE_1,STRUCT_0,GRCAT_1,CKB1,CKB2,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes FUNCT_2,DOMAIN_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,STRUCT_0,LATTICES,VECTSP_2,VECTSP_4,VECTSP_5,GRCAT_1,MOD_2,RELSET_1,CKB3;
constructors SETFAM_1,BINOP_1,REALSET1,VECTSP_5,VECTSP_7,MOD_2,LATTICE3,LATTICE4,RELSET_1,GRCAT_1,CKB1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB10;
requirements BOOLE,SUBSET;
begin
reserve F for Field;
reserve VS for  strict (VectSp of F);
reserve Z1 for set;
theorem
(for VS holds ( lattice VS ) is  complete)
proof
let VS;
let Y being (Subset of ( lattice VS ));
per cases ;
suppose A1: Y = ( {} );

thus thesis
proof
take ( Top ( lattice VS ) );
thus ( Top ( lattice VS ) ) is_less_than Y
proof
let q being (Element of ( lattice VS ));
thus thesis by A1;
end;

let b being (Element of ( lattice VS ));
assume b is_less_than Y;
thus thesis by LATTICES:19;
end;

end;
suppose Y <> ( {} );

then reconsider X = Y as non empty (Subset of ( Subspaces VS ));
reconsider p = ( meet X ) as (Element of ( lattice VS )) by VECTSP_5:def 3;
take p;
set x = the (Element of X);
thus p is_less_than Y
proof
let q being (Element of ( lattice VS ));
consider H being  strict (Subspace of VS) such that A2: H = q by VECTSP_5:def 3;
reconsider h = q as (Element of ( Subspaces VS ));
assume A3: q in Y;
( ( carr VS ) . h ) = (the carrier of H) by A2,CKB7:def 1;
then ( meet ( ( carr VS ) .: X ) ) c= (the carrier of H) by A3,FUNCT_2:35,SETFAM_1:3;
then (the carrier of ( meet X )) c= (the carrier of H) by CKB10:def 1;
hence p [= q by A2,CKB14:1;
end;

let r being (Element of ( lattice VS ));
consider H being  strict (Subspace of VS) such that A4: H = r by VECTSP_5:def 3;
assume A5: r is_less_than Y;
A6: (for Z1 holds (Z1 in ( ( carr VS ) .: X ) implies (the carrier of H) c= Z1))
proof
let Z1;
assume A7: Z1 in ( ( carr VS ) .: X );
then reconsider Z2 = Z1 as (Subset of VS);
consider z1 being (Element of ( Subspaces VS )) such that A8: z1 in X and A9: Z2 = ( ( carr VS ) . z1 ) by A7,FUNCT_2:65;
reconsider z1 as (Element of ( lattice VS ));
A10: r [= z1 by A5,A8,LATTICE3:def 16;
consider z3 being  strict (Subspace of VS) such that A11: z3 = z1 by VECTSP_5:def 3;
Z1 = (the carrier of z3) by A9,A11,CKB7:def 1;
hence thesis by A4,A11,A10,CKB14:1;
end;
( ( carr VS ) . x ) in ( ( carr VS ) .: X ) by FUNCT_2:35;
then (the carrier of H) c= ( meet ( ( carr VS ) .: X ) ) by A6,SETFAM_1:5;
then (the carrier of H) c= (the carrier of ( meet X )) by CKB10:def 1;
hence r [= p by A4,CKB14:1;
end;
end;
