environ
vocabularies RELAT_1,RELAT_2,XBOOLE_0,SUBSET_1,TARSKI,FUNCT_1,ZFMISC_1,WELLORD1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,CKB5,CKB8,CKB9,CKB11,CKB12,CKB19;
definitions TARSKI,XBOOLE_0,FUNCT_1,RELAT_1,CKB5,CKB8,CKB9,CKB11,CKB12,CKB19;
theorems TARSKI,XBOOLE_0,FUNCT_1,RELAT_1,RELAT_2,ZFMISC_1,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36;
schemes XBOOLE_0,FUNCT_1;
registrations FUNCT_1,RELAT_1;
constructors TARSKI,SUBSET_1,FUNCT_1,RELAT_2,CKB5,CKB8,CKB9,CKB11,CKB12,CKB19;
requirements SUBSET,BOOLE;
begin
reserve a for set;
reserve b for set;
reserve c for set;
reserve R for Relation;
theorem
Th33: (R is  well-ordering implies ( R -Seg a ),( R -Seg b ) are_c=-comparable )
proof
assume R is  well-ordering;
then A1: R is  connected  transitive  reflexive  antisymmetric by CKB11:def 1;
A2:now
assume A3: (a in ( field R ) & b in ( field R ));
now
assume a <> b;
A4:now
assume A5: [ b,a ] in R;
now
let c;
assume A6: c in ( R -Seg b );
then A7: [ c,b ] in R by CKB6:1;
then A8: [ c,a ] in R by A1,A5,CKB2:1;
c <> b by A6,CKB6:1;
then c <> a by A1,A5,A7,CKB3:1;
hence c in ( R -Seg a ) by A8,CKB6:1;
end;
hence ( R -Seg b ) c= ( R -Seg a ) by TARSKI:def 3;
end;
now
assume A9: [ a,b ] in R;
now
let c;
assume A10: c in ( R -Seg a );
then A11: [ c,a ] in R by CKB6:1;
then A12: [ c,b ] in R by A1,A9,CKB2:1;
c <> a by A10,CKB6:1;
then c <> b by A1,A9,A11,CKB3:1;
hence c in ( R -Seg b ) by A12,CKB6:1;
end;
hence ( R -Seg a ) c= ( R -Seg b ) by TARSKI:def 3;
end;
hence thesis by A1,A3,A4,CKB4:1,XBOOLE_0:def 9;
end;
hence thesis;
end;
now
assume (( R -Seg a ) = ( {} ) or ( R -Seg b ) = ( {} ));
then (( R -Seg a ) c= ( R -Seg b ) or ( R -Seg b ) c= ( R -Seg a )) by XBOOLE_1:2;
hence thesis by XBOOLE_0:def 9;
end;
hence thesis by A2,CKB7:1;
end;
