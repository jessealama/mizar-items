environ
vocabularies RELAT_1,RELAT_2,XBOOLE_0,SUBSET_1,TARSKI,FUNCT_1,ZFMISC_1,WELLORD1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1;
definitions TARSKI,XBOOLE_0,FUNCT_1,RELAT_1;
theorems TARSKI,XBOOLE_0,FUNCT_1,RELAT_1,RELAT_2,ZFMISC_1,XBOOLE_1,CKB1;
schemes XBOOLE_0,FUNCT_1;
registrations FUNCT_1,RELAT_1;
constructors TARSKI,SUBSET_1,FUNCT_1,RELAT_2;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve z for set;
reserve R for Relation;
theorem
Lm2: (R is  transitive iff (for x holds (for y holds (for z holds (([ x,y ] in R & [ y,z ] in R) implies [ x,z ] in R)))))
proof
thus (R is  transitive implies (for x holds (for y holds (for z holds (([ x,y ] in R & [ y,z ] in R) implies [ x,z ] in R)))))
proof
assume R is  transitive;
then A1: R is_transitive_in ( field R ) by RELAT_2:def 16;
let x;
let y;
let z;
assume that
A2: [ x,y ] in R
and
A3: [ y,z ] in R;
A4: z in ( field R ) by A3,RELAT_1:15;
(x in ( field R ) & y in ( field R )) by A2,RELAT_1:15;
hence thesis by A1,A2,A3,A4,RELAT_2:def 8;
end;

assume (for x holds (for y holds (for z holds (([ x,y ] in R & [ y,z ] in R) implies [ x,z ] in R))));
then (for x holds (for y holds (for z holds (((((x in ( field R ) & y in ( field R )) & z in ( field R )) & [ x,y ] in R) & [ y,z ] in R) implies [ x,z ] in R))));
then R is_transitive_in ( field R ) by RELAT_2:def 8;
hence thesis by RELAT_2:def 16;
end;
