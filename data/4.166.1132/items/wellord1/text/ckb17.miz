environ
vocabularies RELAT_1,RELAT_2,XBOOLE_0,SUBSET_1,TARSKI,FUNCT_1,ZFMISC_1,WELLORD1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,CKB5,CKB8,CKB9,CKB11,CKB12;
definitions TARSKI,XBOOLE_0,FUNCT_1,RELAT_1,CKB5,CKB8,CKB9,CKB11,CKB12;
theorems TARSKI,XBOOLE_0,FUNCT_1,RELAT_1,RELAT_2,ZFMISC_1,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
schemes XBOOLE_0,FUNCT_1;
registrations FUNCT_1,RELAT_1;
constructors TARSKI,SUBSET_1,FUNCT_1,RELAT_2,CKB5,CKB8,CKB9,CKB11,CKB12;
requirements SUBSET,BOOLE;
begin
reserve a for set;
reserve b for set;
reserve c for set;
reserve d for set;
reserve Z for set;
reserve R for Relation;
theorem
(for R holds (R is  well-ordering implies (for a holds (a in ( field R ) implies ((for b holds (b in ( field R ) implies [ b,a ] in R)) or (ex b st ((b in ( field R ) & [ a,b ] in R) & (for c holds ((c in ( field R ) & [ a,c ] in R) implies (c = a or [ b,c ] in R))))))))))
proof
let R;
assume A1: R is  well-ordering;
then A2: R is  connected by CKB11:def 1;
A3: R is  antisymmetric by A1,CKB11:def 1;
let a;
assume that
A4: a in ( field R );
defpred P[ set ]
 means
(not [ $1,a ] in R);
given b such that
A5: (b in ( field R ) & (not [ b,a ] in R));

consider Z such that A6: (c in Z iff (c in ( field R ) & P[ c ])) from XBOOLE_0:sch 1;
(for b holds (b in Z implies b in ( field R ))) by A6;
then A7: Z c= ( field R ) by TARSKI:def 3;
Z <> ( {} ) by A5,A6;
then consider d such that A8: d in Z and A9: (for c holds (c in Z implies [ d,c ] in R)) by A1,A7,CKB15:1;
take d;
thus A10: d in ( field R ) by A6,A8;
A11: (not [ d,a ] in R) by A6,A8;
then a <> d by A8,A9;
hence [ a,d ] in R by A2,A4,A10,A11,CKB4:1;
let c;
assume that
A12: c in ( field R )
and
A13: [ a,c ] in R;
assume c <> a;
then (not [ c,a ] in R) by A3,A13,CKB3:1;
then c in Z by A6,A12;
hence thesis by A9;
end;
