environ
vocabularies RELAT_1,RELAT_2,XBOOLE_0,SUBSET_1,TARSKI,FUNCT_1,ZFMISC_1,WELLORD1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1;
definitions TARSKI,XBOOLE_0,FUNCT_1,RELAT_1;
theorems TARSKI,XBOOLE_0,FUNCT_1,RELAT_1,RELAT_2,ZFMISC_1,XBOOLE_1,CKB1,CKB2;
schemes XBOOLE_0,FUNCT_1;
registrations FUNCT_1,RELAT_1;
constructors TARSKI,SUBSET_1,FUNCT_1,RELAT_2;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve R for Relation;
theorem
Lm3: (R is  antisymmetric iff (for x holds (for y holds (([ x,y ] in R & [ y,x ] in R) implies x = y))))
proof
thus (R is  antisymmetric implies (for x holds (for y holds (([ x,y ] in R & [ y,x ] in R) implies x = y))))
proof
assume R is  antisymmetric;
then A1: R is_antisymmetric_in ( field R ) by RELAT_2:def 12;
let x;
let y;
assume that
A2: [ x,y ] in R
and
A3: [ y,x ] in R;
(x in ( field R ) & y in ( field R )) by A2,RELAT_1:15;
hence thesis by A1,A2,A3,RELAT_2:def 4;
end;

assume (for x holds (for y holds (([ x,y ] in R & [ y,x ] in R) implies x = y)));
then (for x holds (for y holds ((((x in ( field R ) & y in ( field R )) & [ x,y ] in R) & [ y,x ] in R) implies x = y)));
then R is_antisymmetric_in ( field R ) by RELAT_2:def 4;
hence thesis by RELAT_2:def 12;
end;
