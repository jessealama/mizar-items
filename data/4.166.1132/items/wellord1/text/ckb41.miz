environ
vocabularies RELAT_1,RELAT_2,XBOOLE_0,SUBSET_1,TARSKI,FUNCT_1,ZFMISC_1,WELLORD1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,CKB5,CKB8,CKB9,CKB11,CKB12,CKB19;
definitions TARSKI,XBOOLE_0,FUNCT_1,RELAT_1,CKB5,CKB8,CKB9,CKB11,CKB12,CKB19;
theorems TARSKI,XBOOLE_0,FUNCT_1,RELAT_1,RELAT_2,ZFMISC_1,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40;
schemes XBOOLE_0,FUNCT_1;
registrations FUNCT_1,RELAT_1;
constructors TARSKI,SUBSET_1,FUNCT_1,RELAT_2,CKB5,CKB8,CKB9,CKB11,CKB12,CKB19;
requirements SUBSET,BOOLE;
begin
reserve a for set;
reserve b for set;
reserve R for Relation;
theorem
Th38: (((R is  well-ordering & a in ( field R )) & b in ( field R )) implies (( R -Seg a ) c= ( R -Seg b ) iff (a = b or a in ( R -Seg b ))))
proof
assume A1: ((R is  well-ordering & a in ( field R )) & b in ( field R ));
thus (( R -Seg a ) c= ( R -Seg b ) implies (a = b or a in ( R -Seg b )))
proof
assume ( R -Seg a ) c= ( R -Seg b );
then [ a,b ] in R by A1,CKB40:1;
hence thesis by CKB6:1;
end;

now
assume a in ( R -Seg b );
then [ a,b ] in R by CKB6:1;
hence ( R -Seg a ) c= ( R -Seg b ) by A1,CKB40:1;
end;
hence thesis;
end;
