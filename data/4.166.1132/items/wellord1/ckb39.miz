environ
vocabularies RELAT_1,RELAT_2,XBOOLE_0,SUBSET_1,TARSKI,FUNCT_1,ZFMISC_1,WELLORD1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,CKB5,CKB8,CKB9,CKB11,CKB12,CKB19;
definitions TARSKI,XBOOLE_0,FUNCT_1,RELAT_1,CKB5,CKB8,CKB9,CKB11,CKB12,CKB19;
theorems TARSKI,XBOOLE_0,FUNCT_1,RELAT_1,RELAT_2,ZFMISC_1,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38;
schemes XBOOLE_0,FUNCT_1;
registrations FUNCT_1,RELAT_1;
constructors TARSKI,SUBSET_1,FUNCT_1,RELAT_2,CKB5,CKB8,CKB9,CKB11,CKB12,CKB19;
requirements SUBSET,BOOLE;
begin
reserve a for set;
reserve b for set;
reserve c for set;
reserve d for set;
reserve Y for set;
reserve R for Relation;
theorem
Th36: ((R is  well-ordering & Y c= ( field R )) implies ((Y = ( field R ) or (ex a st (a in ( field R ) & Y = ( R -Seg a )))) iff (for a holds (a in Y implies (for b holds ([ b,a ] in R implies b in Y))))))
proof
assume that
A1: R is  well-ordering
and
A2: Y c= ( field R );
A3: R is  antisymmetric by A1,CKB11:def 1;
A4: R is  transitive by A1,CKB11:def 1;
now
given a such that
a in ( field R )
and
A5: Y = ( R -Seg a );

let b;
assume that
A6: b in Y;
A7: [ b,a ] in R by A5,A6,CKB6:1;
let c;
assume that
A8: [ c,b ] in R;
A9: [ c,a ] in R by A4,A8,A7,CKB2:1;
b <> a by A5,A6,CKB6:1;
then c <> a by A3,A8,A7,CKB3:1;
hence c in Y by A5,A9,CKB6:1;
end;
hence ((Y = ( field R ) or (ex a st (a in ( field R ) & Y = ( R -Seg a )))) implies (for a holds (a in Y implies (for b holds ([ b,a ] in R implies b in Y))))) by RELAT_1:15;
assume A10: (for a holds (a in Y implies (for b holds ([ b,a ] in R implies b in Y))));
assume Y <> ( field R );
then (ex d st (not (d in ( field R ) iff d in Y))) by TARSKI:1;
then ( ( field R ) \ Y ) <> ( {} ) by A2,XBOOLE_0:def 5;
then consider a such that A11: a in ( ( field R ) \ Y ) and A12: (for b holds (b in ( ( field R ) \ Y ) implies [ a,b ] in R)) by A1,CKB15:1;
A13:now
let b;
assume A14: b in ( R -Seg a );
then A15: [ b,a ] in R by CKB6:1;
assume A16: (not b in Y);
b in ( field R ) by A15,RELAT_1:15;
then b in ( ( field R ) \ Y ) by A16,XBOOLE_0:def 5;
then A17: [ a,b ] in R by A12;
b <> a by A14,CKB6:1;
hence contradiction by A3,A15,A17,CKB3:1;
end;
take a;
thus a in ( field R ) by A11;
A18: R is  connected by A1,CKB11:def 1;
now
A19: (not a in Y) by A11,XBOOLE_0:def 5;
let b;
assume A20: b in Y;
assume (not b in ( R -Seg a ));
then A21: ((not [ b,a ] in R) or a = b) by CKB6:1;
a <> b by A11,A20,XBOOLE_0:def 5;
then [ a,b ] in R by A2,A18,A11,A20,A21,CKB4:1;
hence contradiction by A10,A20,A19;
end;
hence Y = ( R -Seg a ) by A13,TARSKI:1;
end;
