environ
vocabularies NUMBERS,REAL_1,ZFMISC_1,NORMSP_1,PRE_TOPC,PARTFUN1,FUNCT_1,FUNCT_4,NAT_1,FDIFF_1,SUBSET_1,SEQ_4,RELAT_1,GLIB_000,LOPBAN_1,ORDINAL4,RFINSEQ,RCOMP_1,TARSKI,SEQ_1,ARYTM_3,VALUED_1,FUNCT_2,ARYTM_1,SEQ_2,ORDINAL2,SUPINF_2,FCONT_1,COMPLEX1,STRUCT_0,CARD_1,VALUED_0,XXREAL_0,GROUP_2,FUNCOP_1,XREAL_0,ORDINAL1,MEMBERED,FINSEQ_5,XXREAL_2,XBOOLE_0,CARD_3,FINSEQ_1,FINSEQ_2,AFINSQ_1,RLVECT_1,SQUARE_1,RVSUM_1,XXREAL_1,PDIFF_1,PRVECT_1,PRVECT_2,ALGSTR_0,EUCLID,CFCONT_1,RFINSEQ2,NORMSP_0,NFCONT_1,MONOID_0,RLTOPSP1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,FUNCT_4,CARD_1,NUMBERS,XXREAL_0,XREAL_0,REAL_1,SQUARE_1,NAT_1,MEMBERED,VALUED_0,COMPLEX1,NAT_D,BINOP_2,XXREAL_2,CARD_3,FINSEQ_1,VALUED_1,FINSEQ_2,SEQ_1,SEQ_2,RVSUM_1,RFINSEQ,SEQ_4,RCOMP_1,FCONT_1,FDIFF_1,FINSEQ_5,FINSEQ_7,RFINSEQ2,STRUCT_0,MONOID_0,ALGSTR_0,PRE_TOPC,RLVECT_1,NORMSP_0,NORMSP_1,VFUNCT_1,EUCLID,LOPBAN_1,PRVECT_1,NFCONT_1,NDIFF_1,PRVECT_2,NFCONT_3,NDIFF_3,RLTOPSP1,FUNCT_7,CKB11,CKB14;
definitions TARSKI,FUNCT_2,RLVECT_1,LOPBAN_1,EUCLID,RFINSEQ2,FINSEQ_1,FINSEQ_2,STRUCT_0,MONOID_0,ALGSTR_0,NORMSP_0,RCOMP_1,XCMPLX_0,PRVECT_2,CKB14;
theorems TARSKI,ABSVALUE,XBOOLE_0,XBOOLE_1,RLVECT_1,XCMPLX_0,XCMPLX_1,ZFMISC_1,SEQ_1,SEQ_2,NAT_1,RELAT_1,FUNCT_1,VFUNCT_1,FUNCT_2,FUNCT_3,FINSEQ_4,RLVECT_2,FINSEQ_3,ORDINAL1,FINSEQ_1,CARD_3,FUNCT_4,SEQ_4,NORMSP_1,LOPBAN_1,PARTFUN1,PARTFUN2,NFCONT_1,FDIFF_1,NDIFF_1,FUNCOP_1,XREAL_1,COMPLEX1,XXREAL_0,VALUED_1,VALUED_0,GRCAT_1,NORMSP_0,XREAL_0,RCOMP_1,FINSEQ_2,FINSEQ_7,RVSUM_1,SQUARE_1,PRVECT_1,PRVECT_2,PDIFF_7,EUCLID,TOPREAL7,XXREAL_2,FINSEQ_5,NAT_D,RFINSEQ2,INTEGRA5,FCONT_1,NAT_2,NFCONT_3,NDIFF_2,NDIFF_3,CARD_1,ROLLE,XXREAL_1,RLTOPSP1,FUNCT_7,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB14,CKB18;
schemes FUNCT_2,SEQ_1,FINSEQ_1,NAT_1,FINSEQ_2;
registrations RELSET_1,STRUCT_0,ORDINAL1,XREAL_0,MEMBERED,FUNCT_1,NDIFF_1,FUNCT_2,NUMBERS,XBOOLE_0,VALUED_0,PRVECT_2,FINSEQ_2,FINSEQ_1,CARD_3,NORMSP_0,NORMSP_1,RELAT_1,XXREAL_0,LOPBAN_1,LOPBAN_2,PRVECT_3,FUNCOP_1,NAT_1,FINSEQ_5,XXREAL_2,RCOMP_1,VALUED_1,FDIFF_1,NFCONT_3,FINSET_1,XCMPLX_0,PARTFUN1,CARD_1,MONOID_0,CKB10,CKB15,CKB16,CKB17;
constructors REAL_1,SQUARE_1,SEQ_2,FDIFF_1,NFCONT_1,RSSPACE,VFUNCT_1,NDIFF_1,SEQ_1,RELSET_1,FINSEQ_7,FINSEQ_5,RVSUM_1,BINOP_2,PRVECT_2,RLVECT_2,NAT_D,FINSEQOP,RFINSEQ,RFINSEQ2,SEQ_4,FCONT_1,NFCONT_3,NDIFF_3,MONOID_0,RLTOPSP1,FUNCT_7,CKB11,CKB14;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve p for Real;
reserve r for Real;
reserve G for RealNormSpace-Sequence;
reserve i for (Element of ( dom G ));
ZE:now
let G being RealLinearSpace-Sequence;
( len ( carr G ) ) = ( len G ) by PRVECT_2:def 4;
hence ( dom ( carr G ) ) = ( Seg ( len G ) ) by FINSEQ_1:def 3
.= ( dom G ) by FINSEQ_1:def 3;
end;
theorem
MLT1: (for G being RealNormSpace-Sequence holds (for p being (Point of ( product G )) holds (for r being Real holds (for r0,p0 being (Element of ( product ( carr G ) )) holds (p = p0 implies (( r * p ) = r0 iff (for i being (Element of ( dom G )) holds ( r0 . i ) = ( r * ( p0 . i ) ))))))))
proof
let G being RealNormSpace-Sequence;
let p being (Point of ( product G ));
let r being Real;
let r0 being (Element of ( product ( carr G ) ));
let p0 being (Element of ( product ( carr G ) ));
assume AS0: p = p0;
hereby
assume AS1: ( r * p ) = r0;
hereby
let i being (Element of ( dom G ));
reconsider i0 = i as (Element of ( dom ( carr G ) )) by ZE;
X1: ( ( multop G ) . i0 ) = (the Mult of ( G . i0 )) by PRVECT_2:def 8;
( product G ) = NORMSTR (# ( product ( carr G ) ),( zeros G ),[: ( addop G ) :],[: ( multop G ) :],( productnorm G ) #) by PRVECT_2:6;
hence ( r0 . i ) = ( r * ( p0 . i ) ) by AS0,AS1,X1,PRVECT_2:def 2;
end;
end;
assume AS2: (for i being (Element of ( dom G )) holds ( r0 . i ) = ( r * ( p0 . i ) ));
reconsider rp = ( r * p ) as (Element of ( product ( carr G ) )) by CKB12:1;
X1: (ex g being Function st ((rp = g & ( dom g ) = ( dom ( carr G ) )) & (for i being set holds (i in ( dom ( carr G ) ) implies ( g . i ) in ( ( carr G ) . i ))))) by CARD_3:def 5;
X2: (ex g being Function st ((r0 = g & ( dom g ) = ( dom ( carr G ) )) & (for i being set holds (i in ( dom ( carr G ) ) implies ( g . i ) in ( ( carr G ) . i ))))) by CARD_3:def 5;
now
let i0 being set;
assume AS1: i0 in ( dom rp );
then reconsider i1 = i0 as (Element of ( dom G )) by ZE,X1;
reconsider i = i0 as (Element of ( dom ( carr G ) )) by AS1,X1;
P1: ( product G ) = NORMSTR (# ( product ( carr G ) ),( zeros G ),[: ( addop G ) :],[: ( multop G ) :],( productnorm G ) #) by PRVECT_2:6;
( ( multop G ) . i ) = (the Mult of ( G . i )) by PRVECT_2:def 8;
then ( rp . i0 ) = ( r * ( p0 . i1 ) ) by AS0,P1,PRVECT_2:def 2;
hence ( rp . i0 ) = ( r0 . i0 ) by AS2;
end;
hence ( r * p ) = r0 by X1,X2,FUNCT_1:2;
end;
