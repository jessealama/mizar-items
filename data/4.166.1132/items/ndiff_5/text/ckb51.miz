environ
vocabularies NUMBERS,REAL_1,ZFMISC_1,NORMSP_1,PRE_TOPC,PARTFUN1,FUNCT_1,FUNCT_4,NAT_1,FDIFF_1,SUBSET_1,SEQ_4,RELAT_1,GLIB_000,LOPBAN_1,ORDINAL4,RFINSEQ,RCOMP_1,TARSKI,SEQ_1,ARYTM_3,VALUED_1,FUNCT_2,ARYTM_1,SEQ_2,ORDINAL2,SUPINF_2,FCONT_1,COMPLEX1,STRUCT_0,CARD_1,VALUED_0,XXREAL_0,GROUP_2,FUNCOP_1,XREAL_0,ORDINAL1,MEMBERED,FINSEQ_5,XXREAL_2,XBOOLE_0,CARD_3,FINSEQ_1,FINSEQ_2,AFINSQ_1,RLVECT_1,SQUARE_1,RVSUM_1,XXREAL_1,PDIFF_1,PRVECT_1,PRVECT_2,ALGSTR_0,EUCLID,CFCONT_1,RFINSEQ2,NORMSP_0,NFCONT_1,MONOID_0,RLTOPSP1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,FUNCT_4,CARD_1,NUMBERS,XXREAL_0,XREAL_0,REAL_1,SQUARE_1,NAT_1,MEMBERED,VALUED_0,COMPLEX1,NAT_D,BINOP_2,XXREAL_2,CARD_3,FINSEQ_1,VALUED_1,FINSEQ_2,SEQ_1,SEQ_2,RVSUM_1,RFINSEQ,SEQ_4,RCOMP_1,FCONT_1,FDIFF_1,FINSEQ_5,FINSEQ_7,RFINSEQ2,STRUCT_0,MONOID_0,ALGSTR_0,PRE_TOPC,RLVECT_1,NORMSP_0,NORMSP_1,VFUNCT_1,EUCLID,LOPBAN_1,PRVECT_1,NFCONT_1,NDIFF_1,PRVECT_2,NFCONT_3,NDIFF_3,RLTOPSP1,FUNCT_7,CKB11,CKB14,CKB22,CKB23,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB42;
definitions TARSKI,FUNCT_2,RLVECT_1,LOPBAN_1,EUCLID,RFINSEQ2,FINSEQ_1,FINSEQ_2,STRUCT_0,MONOID_0,ALGSTR_0,NORMSP_0,RCOMP_1,XCMPLX_0,PRVECT_2,CKB14,CKB22,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB42;
theorems TARSKI,ABSVALUE,XBOOLE_0,XBOOLE_1,RLVECT_1,XCMPLX_0,XCMPLX_1,ZFMISC_1,SEQ_1,SEQ_2,NAT_1,RELAT_1,FUNCT_1,VFUNCT_1,FUNCT_2,FUNCT_3,FINSEQ_4,RLVECT_2,FINSEQ_3,ORDINAL1,FINSEQ_1,CARD_3,FUNCT_4,SEQ_4,NORMSP_1,LOPBAN_1,PARTFUN1,PARTFUN2,NFCONT_1,FDIFF_1,NDIFF_1,FUNCOP_1,XREAL_1,COMPLEX1,XXREAL_0,VALUED_1,VALUED_0,GRCAT_1,NORMSP_0,XREAL_0,RCOMP_1,FINSEQ_2,FINSEQ_7,RVSUM_1,SQUARE_1,PRVECT_1,PRVECT_2,PDIFF_7,EUCLID,TOPREAL7,XXREAL_2,FINSEQ_5,NAT_D,RFINSEQ2,INTEGRA5,FCONT_1,NAT_2,NFCONT_3,NDIFF_2,NDIFF_3,CARD_1,ROLLE,XXREAL_1,RLTOPSP1,FUNCT_7,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB14,CKB18,CKB19,CKB20,CKB21,CKB22,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB50;
schemes FUNCT_2,SEQ_1,FINSEQ_1,NAT_1,FINSEQ_2;
registrations RELSET_1,STRUCT_0,ORDINAL1,XREAL_0,MEMBERED,FUNCT_1,NDIFF_1,FUNCT_2,NUMBERS,XBOOLE_0,VALUED_0,PRVECT_2,FINSEQ_2,FINSEQ_1,CARD_3,NORMSP_0,NORMSP_1,RELAT_1,XXREAL_0,LOPBAN_1,LOPBAN_2,PRVECT_3,FUNCOP_1,NAT_1,FINSEQ_5,XXREAL_2,RCOMP_1,VALUED_1,FDIFF_1,NFCONT_3,FINSET_1,XCMPLX_0,PARTFUN1,CARD_1,MONOID_0,CKB10,CKB15,CKB16,CKB17,CKB49;
constructors REAL_1,SQUARE_1,SEQ_2,FDIFF_1,NFCONT_1,RSSPACE,VFUNCT_1,NDIFF_1,SEQ_1,RELSET_1,FINSEQ_7,FINSEQ_5,RVSUM_1,BINOP_2,PRVECT_2,RLVECT_2,NAT_D,FINSEQOP,RFINSEQ,RFINSEQ2,SEQ_4,FCONT_1,NFCONT_3,NDIFF_3,MONOID_0,RLTOPSP1,FUNCT_7,CKB11,CKB14,CKB22,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB42;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve j for set;
ZE:now
let G being RealLinearSpace-Sequence;
( len ( carr G ) ) = ( len G ) by PRVECT_2:def 4;
hence ( dom ( carr G ) ) = ( Seg ( len G ) ) by FINSEQ_1:def 3
.= ( dom G ) by FINSEQ_1:def 3;
end;
reserve G for  non-trivial RealNormSpace-Sequence;
reserve i for (Element of ( dom G ));
reserve x for (Point of ( product G ));
theorem
XLm7: (for i,j being (Element of ( dom G )) holds (for x being (Point of ( G . i )) holds (for z being (Element of ( product ( carr G ) )) holds (z = ( ( reproj (i,( 0. ( product G ) )) ) . x ) implies ((i = j implies ( z . j ) = x) & (i <> j implies ( z . j ) = ( 0. ( G . j ) )))))))
proof
let i being (Element of ( dom G ));
let j being (Element of ( dom G ));
let x being (Point of ( G . i ));
let z being (Element of ( product ( carr G ) ));
assume AS: z = ( ( reproj (i,( 0. ( product G ) )) ) . x );
reconsider Zr = ( 0. ( product G ) ) as (Element of ( product ( carr G ) )) by CKB12:1;
reconsider ixr = ( ( reproj (i,( 0. ( product G ) )) ) . x ) as (Element of ( product ( carr G ) )) by CKB12:1;
X9: ( ( reproj (i,( 0. ( product G ) )) ) . x ) = ( ( 0. ( product G ) ) +* (i,x) ) by CKB32:def 1;
set ix = ( i .--> x );
consider g being Function such that P1: ((Zr = g & ( dom g ) = ( dom ( carr G ) )) & (for i being set holds (i in ( dom ( carr G ) ) implies ( g . i ) in ( ( carr G ) . i )))) by CARD_3:def 5;
S1: ( dom Zr ) = ( dom G ) by P1,ZE;
now
assume i <> j;
then ( z . j ) = ( Zr . j ) by AS,X9,FUNCT_7:32;
hence ( z . j ) = ( 0. ( G . j ) ) by CKB20:1;
end;
hence thesis by AS,X9,S1,FUNCT_7:31;
end;
