environ
vocabularies NUMBERS,REAL_1,CFUNCT_1,NORMSP_1,CLVECT_1,PARTFUN1,NFCONT_2,TARSKI,RELAT_1,CARD_1,ARYTM_3,PRE_TOPC,ARYTM_1,STRUCT_0,COMPLEX1,XBOOLE_0,XXREAL_0,VALUED_1,SUPINF_2,FUNCT_1,CFCONT_1,NFCONT_1,SUBSET_1,RCOMP_1,NAT_1,VALUED_0,SEQ_2,ORDINAL2,FCONT_1,FUNCT_2,SEQ_4,CLOPBAN1,ALI2,FUNCOP_1,POWER,RSSPACE3,FUNCT_7;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,COMPLEX1,REAL_1,NAT_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,PRE_TOPC,VALUED_0,STRUCT_0,RLVECT_1,FUNCOP_1,VALUED_1,SEQ_2,SEQ_4,FUNCT_7,VFUNCT_1,SQUARE_1,POWER,CFUNCT_1,VFUNCT_2,NORMSP_0,NORMSP_1,CLVECT_1,NFCONT_1,CLOPBAN1,NFCONT_2,NCFCONT1,CSSPACE3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
definitions RLVECT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
theorems TARSKI,ABSVALUE,XBOOLE_1,RLVECT_1,XCMPLX_1,SEQ_2,NAT_1,RELAT_1,FUNCT_1,VFUNCT_1,FUNCT_2,SEQ_4,NORMSP_1,LOPBAN_3,PARTFUN2,CLVECT_1,CLOPBAN3,VFUNCT_2,NFCONT_1,CLOPBAN1,COMPLEX1,NCFCONT1,NFCONT_2,FUNCOP_1,POWER,CSSPACE3,FUNCT_7,SEQ_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,VALUED_0,NORMSP_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8;
schemes FUNCT_2,NAT_1;
registrations XBOOLE_0,FUNCT_1,ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,MEMBERED,STRUCT_0,VALUED_1,FUNCT_2,NUMBERS,VALUED_0,FUNCT_7;
constructors PARTFUN1,REAL_1,SQUARE_1,NAT_1,COMPLEX1,SEQ_2,SEQ_4,PARTFUN2,POWER,FUNCT_7,BHSP_3,VFUNCT_1,LOPBAN_3,CSSPACE3,NFCONT_1,NFCONT_2,CLOPBAN3,VFUNCT_2,NCFCONT1,SEQ_1,VALUED_1,RECDEF_1,NORMSP_1,RELSET_1,CFCONT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve X for set;
reserve X1 for set;
reserve r for Real;
reserve s for Real;
reserve RNS for RealNormSpace;
reserve CNS for ComplexNormSpace;
theorem
Th3: (for f being (PartFunc of RNS,CNS) holds ((f is_uniformly_continuous_on X & X1 c= X) implies f is_uniformly_continuous_on X1))
proof
let f being (PartFunc of RNS,CNS);
assume that
A1: f is_uniformly_continuous_on X
and
A2: X1 c= X;
X c= ( dom f ) by A1,CKB3:def 1;
hence X1 c= ( dom f ) by A2,XBOOLE_1:1;
let r;
assume ( 0 ) < r;
then consider s such that A3: ( 0 ) < s and A4: (for x1,x2 being (Point of RNS) holds (((x1 in X & x2 in X) & ||. ( x1 - x2 ) .|| < s) implies ||. ( ( f /. x1 ) - ( f /. x2 ) ) .|| < r)) by A1,CKB3:def 1;
take s;
thus ( 0 ) < s by A3;
let x1 being (Point of RNS);
let x2 being (Point of RNS);
assume ((x1 in X1 & x2 in X1) & ||. ( x1 - x2 ) .|| < s);
hence thesis by A2,A4;
end;
