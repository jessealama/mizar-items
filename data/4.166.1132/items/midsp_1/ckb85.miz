environ
vocabularies STRUCT_0,BINOP_1,XBOOLE_0,SUBSET_1,QC_LANG1,FUNCT_1,FUNCT_5,ZFMISC_1,MCART_1,RELAT_1,VECTSP_1,ARYTM_3,ARYTM_1,ALGSTR_0,SUPINF_2,RLVECT_1,MIDSP_1;
notations XBOOLE_0,ZFMISC_1,SUBSET_1,BINOP_1,DOMAIN_1,FUNCT_5,STRUCT_0,ALGSTR_0,RLVECT_1,MCART_1,FUNCT_2,CKB1,CKB3,CKB4,CKB10,CKB12,CKB13,CKB19,CKB29,CKB30,CKB31,CKB39,CKB46,CKB47,CKB49,CKB52,CKB54,CKB68,CKB69,CKB72,CKB75,CKB78,CKB79,CKB80;
definitions STRUCT_0,RLVECT_1,ALGSTR_0,CKB3,CKB4,CKB10,CKB19,CKB31,CKB39,CKB46,CKB49,CKB52,CKB54,CKB68,CKB69,CKB72,CKB75,CKB78,CKB79,CKB80;
theorems FUNCT_2,TARSKI,MCART_1,BINOP_1,CARD_1,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB82,CKB83,CKB84;
schemes FUNCT_2,BINOP_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,RELAT_1,CKB1,CKB2,CKB5,CKB11,CKB40,CKB71,CKB81;
constructors BINOP_1,DOMAIN_1,RLVECT_1,FUNCT_5,RELSET_1,CKB1,CKB3,CKB4,CKB10,CKB13,CKB19,CKB29,CKB30,CKB31,CKB39,CKB46,CKB47,CKB49,CKB52,CKB54,CKB68,CKB69,CKB72,CKB75,CKB78,CKB79,CKB80;
requirements SUBSET,BOOLE;
begin
reserve M for MidSp;
theorem
( vectgroup M ) is  add-associative  right_zeroed  right_complementable  Abelian
proof
set GS = ( vectgroup M );
thus GS is  add-associative
proof
let x being (Element of GS),y being (Element of GS),z being (Element of GS);
reconsider xx = x,yy = y,zz = z as (Element of ( setvect M ));
thus ( ( x + y ) + z ) = ( ( addvect M ) . (( xx + yy ),zz) ) by CKB75:def 1
.= ( ( xx + yy ) + zz ) by CKB75:def 1
.= ( xx + ( yy + zz ) ) by CKB74:1
.= ( ( addvect M ) . (xx,( yy + zz )) ) by CKB75:def 1
.= ( x + ( y + z ) ) by CKB75:def 1;
end;

thus GS is  right_zeroed
proof
let x being (Element of GS);
reconsider xx = x as (Element of ( setvect M ));
thus ( x + ( 0. GS ) ) = x
proof
reconsider xxx = xx as (Vector of M) by CKB70:1;
( xx + ( zerovect M ) ) = ( xxx + ( ID M ) ) by CKB72:def 1
.= x by CKB64:1;
hence thesis by CKB75:def 1;
end;

end;

thus GS is  right_complementable
proof
let x being (Element of GS);
reconsider xx = x as (Element of ( setvect M ));
reconsider w = ( ( complvect M ) . xx ) as (Element of GS);
take w;
thus ( x + w ) = ( xx + ( ( complvect M ) . xx ) ) by CKB75:def 1
.= ( 0. GS ) by CKB78:def 1;
end;

thus GS is  Abelian
proof
let x being (Element of GS),y being (Element of GS);
reconsider xx = x,yy = y as (Element of ( setvect M ));
thus ( x + y ) = ( xx + yy ) by CKB75:def 1
.= ( yy + xx ) by CKB73:1
.= ( y + x ) by CKB75:def 1;
end;

end;
