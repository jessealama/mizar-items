environ
vocabularies ORDERS_2,CAT_1,YELLOW_0,STRUCT_0,TARSKI,WELLORD1,XBOOLE_0,FUNCT_1,FUNCT_2,RELAT_1,SUBSET_1,YELLOW_1,WAYBEL_0,XXREAL_0,LATTICES,RELAT_2,WAYBEL_1,GROUP_6,SEQM_3,WAYBEL_8,RCOMP_1,FINSET_1,LATTICE3,WAYBEL_3,ORDINAL2,YELLOW_2,CARD_FIL,BINOP_1,EQREL_1,REWRITE1,WAYBEL_6,ARYTM_0,INT_2,ARYTM_3,XBOOLEAN,WAYBEL_5,WAYBEL15;
notations TARSKI,XBOOLE_0,SUBSET_1,WELLORD1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FINSET_1,DOMAIN_1,STRUCT_0,ORDERS_2,QUANTAL1,LATTICE3,YELLOW_0,YELLOW_1,YELLOW_2,YELLOW_7,WAYBEL_0,WAYBEL_1,WAYBEL_3,WAYBEL_5,WAYBEL_6,WAYBEL_8,CKB25,CKB26;
definitions TARSKI,YELLOW_2,WAYBEL_1,STRUCT_0,CKB25,CKB26;
theorems TARSKI,RELAT_1,WELLORD1,FUNCT_1,FUNCT_2,ORDERS_2,QUANTAL1,LATTICE3,YELLOW_0,YELLOW_1,YELLOW_2,YELLOW_5,YELLOW_6,YELLOW_7,WAYBEL_0,WAYBEL_1,WAYBEL_3,WAYBEL_5,WAYBEL_6,WAYBEL_8,WAYBEL13,XBOOLE_0,XBOOLE_1,WAYBEL14,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29;
schemes FUNCT_2,SUBSET_1;
registrations XBOOLE_0,FUNCT_1,RELSET_1,FUNCT_2,FINSET_1,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,WAYBEL_1,WAYBEL_2,WAYBEL_3,WAYBEL_5,WAYBEL_8,WAYBEL10,SUBSET_1,CKB9,CKB28;
constructors DOMAIN_1,TOLER_1,QUANTAL1,ORDERS_3,WAYBEL_1,WAYBEL_3,WAYBEL_5,WAYBEL_6,WAYBEL_8,RELSET_1,CKB25,CKB26;
requirements SUBSET,BOOLE;
begin
theorem
(for L being  Boolean LATTICE holds (for x,a being (Element of L) holds (a is  atom implies (a <= x iff (not a <= ( 'not' x ))))))
proof
let L being  Boolean LATTICE;
let x being (Element of L);
let a being (Element of L);
assume A1: a is  atom;
thus (a <= x implies (not a <= ( 'not' x )))
proof
assume that
A2: a <= x
and
A3: a <= ( 'not' x );
a = ( a "\/" ( Bottom L ) ) by WAYBEL_1:3
.= ( a "\/" ( x "/\" ( 'not' x ) ) ) by YELLOW_5:34
.= ( ( a "\/" x ) "/\" ( ( 'not' x ) "\/" a ) ) by WAYBEL_1:5
.= ( x "/\" ( ( 'not' x ) "\/" a ) ) by A2,YELLOW_0:24
.= ( x "/\" ( 'not' x ) ) by A3,YELLOW_0:24
.= ( Bottom L ) by YELLOW_5:34;
hence contradiction by A1,CKB27:1;
end;

thus ((not a <= ( 'not' x )) implies a <= x)
proof
a <= ( Top L ) by YELLOW_0:45;
then A4: a <= ( x "\/" ( 'not' x ) ) by YELLOW_5:34;
assume ((not a <= ( 'not' x )) & (not a <= x));
hence contradiction by A1,A4,WAYBEL14:14;
end;

end;
