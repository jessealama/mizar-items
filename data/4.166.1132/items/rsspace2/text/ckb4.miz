environ
vocabularies NUMBERS,STRUCT_0,RSSPACE,RLVECT_1,SEQ_1,VALUED_1,SERIES_1,SUPINF_2,ARYTM_3,REAL_1,RELAT_1,ARYTM_1,PROB_2,CARD_3,COMPLEX1,SUBSET_1,CARD_1,XXREAL_0,FUNCT_1,SQUARE_1,BHSP_1,ALGSTR_0,ZFMISC_1,REALSET1,PRE_TOPC,VALUED_0,XXREAL_2,ORDINAL2,SEQ_2,FUNCOP_1,NAT_1,BHSP_3,XREAL_0,ORDINAL1,NORMSP_1,REWRITE1,RSSPACE2;
notations TARSKI,SUBSET_1,ZFMISC_1,ORDINAL1,BINOP_1,REALSET1,NUMBERS,XCMPLX_0,XXREAL_0,COMPLEX1,REAL_1,NAT_1,STRUCT_0,ALGSTR_0,XREAL_0,RELAT_1,PARTFUN1,FUNCT_1,FUNCT_2,FUNCOP_1,PRE_TOPC,RLVECT_1,BHSP_1,BHSP_2,BHSP_3,SQUARE_1,VALUED_1,SEQ_1,SEQ_2,SERIES_1,RSSPACE;
definitions SQUARE_1,BINOP_1,REALSET1,RLVECT_1,STRUCT_0,ALGSTR_0,BHSP_3;
theorems RELAT_1,SQUARE_1,ZFMISC_1,SEQ_1,SEQ_2,SEQM_3,SERIES_1,INT_1,FUNCT_1,NAT_1,FUNCT_2,RLVECT_1,RLSUB_1,BHSP_1,BHSP_2,BHSP_3,SEQ_4,RSSPACE,XREAL_0,XCMPLX_1,COMPLEX1,FUNCOP_1,XREAL_1,XXREAL_0,CKB1,CKB2;
schemes NAT_1,SEQ_1,FUNCT_2;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,REALSET1,STRUCT_0,RSSPACE,VALUED_1,FUNCT_2,VALUED_0,FUNCOP_1,NAT_1,SEQ_4,CKB3;
constructors PARTFUN1,BINOP_1,FUNCOP_1,REAL_1,SQUARE_1,NAT_1,NAT_D,SEQ_2,SERIES_1,REALSET1,RLSUB_1,BHSP_2,BHSP_3,RSSPACE,SEQ_1,VALUED_1,RELSET_1,BINOP_2,RVSUM_1;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
theorem
Lm1: (for rseq being Real_Sequence holds ((for n being (Element of ( NAT )) holds ( 0 ) <= ( rseq . n )) implies (((for n being (Element of ( NAT )) holds ( 0 ) <= ( ( Partial_Sums rseq ) . n )) & (for n being (Element of ( NAT )) holds ( rseq . n ) <= ( ( Partial_Sums rseq ) . n ))) & (rseq is  summable implies ((for n being (Element of ( NAT )) holds ( ( Partial_Sums rseq ) . n ) <= ( Sum rseq )) & (for n being (Element of ( NAT )) holds ( rseq . n ) <= ( Sum rseq )))))))
proof
let rseq being Real_Sequence;
assume that
A1: (for n being (Element of ( NAT )) holds ( 0 ) <= ( rseq . n ));
A2: ( Partial_Sums rseq ) is  non-decreasing by A1,SERIES_1:16;
thus A3: (for n being (Element of ( NAT )) holds ( 0 ) <= ( ( Partial_Sums rseq ) . n ))
proof
let n being (Element of ( NAT ));
A4: (n = ( n + ( 0 ) ) & ( ( Partial_Sums rseq ) . ( 0 ) ) = ( rseq . ( 0 ) )) by SERIES_1:def 1;
( 0 ) <= ( rseq . ( 0 ) ) by A1;
hence thesis by A2,A4,SEQM_3:5;
end;

thus A5: (for n being (Element of ( NAT )) holds ( rseq . n ) <= ( ( Partial_Sums rseq ) . n ))
proof
let n being (Element of ( NAT ));
now
per cases ;
case n = ( 0 );
hence thesis by SERIES_1:def 1;
end;
case A6: n <> ( 0 );
set nn = ( n - 1 );
( ( 0 ) + 1 ) <= n by A6,INT_1:7;
then A7: nn in ( NAT ) by INT_1:5;
then ( 0 ) <= ( ( Partial_Sums rseq ) . nn ) by A3;
then (( nn + 1 ) = n & ( ( rseq . n ) + ( 0 ) ) <= ( ( rseq . n ) + ( ( Partial_Sums rseq ) . nn ) )) by XREAL_1:7;
hence thesis by A7,SERIES_1:def 1;
end;
end;
hence thesis;
end;

assume rseq is  summable;
then A8: ( Partial_Sums rseq ) is  bounded_above by A1,SERIES_1:17;
thus A9: (for n being (Element of ( NAT )) holds ( ( Partial_Sums rseq ) . n ) <= ( Sum rseq ))
proof
let n being (Element of ( NAT ));
( ( Partial_Sums rseq ) . n ) <= ( lim ( Partial_Sums rseq ) ) by A1,A8,SEQ_4:37,SERIES_1:16;
hence thesis by SERIES_1:def 3;
end;

let n being (Element of ( NAT ));
A10: ( rseq . n ) <= ( ( Partial_Sums rseq ) . n ) by A5;
( ( Partial_Sums rseq ) . n ) <= ( Sum rseq ) by A9;
hence thesis by A10,XXREAL_0:2;
end;
