environ
vocabularies REAL_1,SUBSET_1,NUMBERS,RLVECT_1,RLSUB_1,FINSET_1,RLVECT_2,FINSEQ_1,STRUCT_0,FUNCT_1,XBOOLE_0,ORDERS_1,VALUED_1,ORDINAL4,ARYTM_3,RELAT_1,PARTFUN1,NAT_1,CARD_3,CARD_1,SUPINF_2,FINSEQ_4,TARSKI,FUNCT_2,ARYTM_1,ZFMISC_1,ORDINAL1,RLVECT_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,FINSEQ_1,RELAT_1,ORDINAL1,FUNCT_1,PARTFUN1,FUNCT_2,ORDERS_1,DOMAIN_1,STRUCT_0,RLVECT_1,FINSEQ_4,FINSET_1,REAL_1,RLSUB_1,RLSUB_2,RLVECT_2,NAT_1,CKB6,CKB7;
definitions XBOOLE_0,RLSUB_1,RLVECT_2,TARSKI,CKB6;
theorems CARD_2,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSET_1,RLSUB_1,RLSUB_2,RLVECT_1,RLVECT_2,TARSKI,ZFMISC_1,RELAT_1,RELSET_1,ORDINAL1,XBOOLE_0,XBOOLE_1,XCMPLX_0,ORDERS_1,STRUCT_0,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15;
schemes FINSEQ_1,FUNCT_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,FINSET_1,NUMBERS,STRUCT_0,RLVECT_1,RLSUB_1,ORDINAL1,REAL_1,XREAL_0,RLVECT_2,CKB11;
constructors PARTFUN1,REAL_1,NAT_1,ORDERS_1,FINSEQ_4,REALSET1,RLSUB_2,RLVECT_2,RELSET_1,CKB6;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve a for Real;
reserve V for RealLinearSpace;
reserve v for (VECTOR of V);
reserve v1 for (VECTOR of V);
reserve v2 for (VECTOR of V);
reserve u for (VECTOR of V);
reserve A for (Subset of V);
reserve l for (Linear_Combination of A);
reserve f for (Function of (the carrier of V),( REAL ));
theorem
Th13: ((v1 <> v2 & { v1,v2 } is  linearly-independent) iff (v2 <> ( 0. V ) & (for a holds v1 <> ( a * v2 ))))
proof
thus ((v1 <> v2 & { v1,v2 } is  linearly-independent) implies (v2 <> ( 0. V ) & (for a holds v1 <> ( a * v2 ))))
proof
deffunc F((Element of V)) = ( 0 );
assume that
A1: v1 <> v2
and
A2: { v1,v2 } is  linearly-independent;
thus v2 <> ( 0. V ) by A2,CKB14:1;
let a;
consider f such that A3: (( f . v1 ) = ( - 1 ) & ( f . v2 ) = a) and A4: (for v being (Element of V) holds ((v <> v1 & v <> v2) implies ( f . v ) = F(v))) from FUNCT_2:sch 7(A1);
reconsider f as (Element of ( Funcs ((the carrier of V),( REAL )) )) by FUNCT_2:8;
now
let v;
assume (not v in { v1,v2 });
then (v <> v1 & v <> v2) by TARSKI:def 2;
hence ( f . v ) = ( 0 ) by A4;
end;
then reconsider f as (Linear_Combination of V) by RLVECT_2:def 3;
( Carrier f ) c= { v1,v2 }
proof
let x;
assume x in ( Carrier f );
then A5: (ex u st (x = u & ( f . u ) <> ( 0 )));
assume (not x in { v1,v2 });
then (x <> v1 & x <> v2) by TARSKI:def 2;
hence thesis by A4,A5;
end;
then reconsider f as (Linear_Combination of { v1,v2 }) by RLVECT_2:def 6;
A6: v1 in ( Carrier f ) by A3;
set w = ( a * v2 );
assume v1 = ( a * v2 );
then ( Sum f ) = ( ( ( - 1 ) * w ) + w ) by A1,A3,RLVECT_2:33
.= ( ( - w ) + w ) by RLVECT_1:16
.= ( - ( w - w ) ) by RLVECT_1:33
.= ( - ( 0. V ) ) by RLVECT_1:15
.= ( 0. V ) by RLVECT_1:12;
hence thesis by A2,A6,CKB6:def 1;
end;

assume A7: v2 <> ( 0. V );
assume A8: (for a holds v1 <> ( a * v2 ));
A9: ( 1 * v2 ) = v2 by RLVECT_1:def 8;
hence v1 <> v2 by A8;
let l being (Linear_Combination of { v1,v2 });
assume that
A10: ( Sum l ) = ( 0. V )
and
A11: ( Carrier l ) <> ( {} );
A12: ( 0. V ) = ( ( ( l . v1 ) * v1 ) + ( ( l . v2 ) * v2 ) ) by A8,A9,A10,RLVECT_2:33;
set x = the (Element of ( Carrier l ));
( Carrier l ) c= { v1,v2 } by RLVECT_2:def 6;
then A13: x in { v1,v2 } by A11,TARSKI:def 3;
x in ( Carrier l ) by A11;
then A14: (ex u st (x = u & ( l . u ) <> ( 0 )));
now
per cases  by A14,A13,TARSKI:def 2;
suppose A15: ( l . v1 ) <> ( 0 );

( 0. V ) = ( ( ( l . v1 ) " ) * ( ( ( l . v1 ) * v1 ) + ( ( l . v2 ) * v2 ) ) ) by A12,RLVECT_1:10
.= ( ( ( ( l . v1 ) " ) * ( ( l . v1 ) * v1 ) ) + ( ( ( l . v1 ) " ) * ( ( l . v2 ) * v2 ) ) ) by RLVECT_1:def 5
.= ( ( ( ( ( l . v1 ) " ) * ( l . v1 ) ) * v1 ) + ( ( ( l . v1 ) " ) * ( ( l . v2 ) * v2 ) ) ) by RLVECT_1:def 7
.= ( ( ( ( ( l . v1 ) " ) * ( l . v1 ) ) * v1 ) + ( ( ( ( l . v1 ) " ) * ( l . v2 ) ) * v2 ) ) by RLVECT_1:def 7
.= ( ( 1 * v1 ) + ( ( ( ( l . v1 ) " ) * ( l . v2 ) ) * v2 ) ) by A15,XCMPLX_0:def 7
.= ( v1 + ( ( ( ( l . v1 ) " ) * ( l . v2 ) ) * v2 ) ) by RLVECT_1:def 8;
then v1 = ( - ( ( ( ( l . v1 ) " ) * ( l . v2 ) ) * v2 ) ) by RLVECT_1:6
.= ( ( - 1 ) * ( ( ( ( l . v1 ) " ) * ( l . v2 ) ) * v2 ) ) by RLVECT_1:16
.= ( ( ( - 1 ) * ( ( ( l . v1 ) " ) * ( l . v2 ) ) ) * v2 ) by RLVECT_1:def 7;
hence thesis by A8;
end;
suppose A16: (( l . v2 ) <> ( 0 ) & ( l . v1 ) = ( 0 ));

( 0. V ) = ( ( ( l . v2 ) " ) * ( ( ( l . v1 ) * v1 ) + ( ( l . v2 ) * v2 ) ) ) by A12,RLVECT_1:10
.= ( ( ( ( l . v2 ) " ) * ( ( l . v1 ) * v1 ) ) + ( ( ( l . v2 ) " ) * ( ( l . v2 ) * v2 ) ) ) by RLVECT_1:def 5
.= ( ( ( ( ( l . v2 ) " ) * ( l . v1 ) ) * v1 ) + ( ( ( l . v2 ) " ) * ( ( l . v2 ) * v2 ) ) ) by RLVECT_1:def 7
.= ( ( ( ( ( l . v2 ) " ) * ( l . v1 ) ) * v1 ) + ( ( ( ( l . v2 ) " ) * ( l . v2 ) ) * v2 ) ) by RLVECT_1:def 7
.= ( ( ( ( ( l . v2 ) " ) * ( l . v1 ) ) * v1 ) + ( 1 * v2 ) ) by A16,XCMPLX_0:def 7
.= ( ( ( 0 ) * v1 ) + v2 ) by A16,RLVECT_1:def 8
.= ( ( 0. V ) + v2 ) by RLVECT_1:10
.= v2 by RLVECT_1:4;
hence thesis by A7;
end;
end;
hence thesis;
end;
