environ
vocabularies REAL_1,SUBSET_1,NUMBERS,RLVECT_1,RLSUB_1,FINSET_1,RLVECT_2,FINSEQ_1,STRUCT_0,FUNCT_1,XBOOLE_0,ORDERS_1,VALUED_1,ORDINAL4,ARYTM_3,RELAT_1,PARTFUN1,NAT_1,CARD_3,CARD_1,SUPINF_2,FINSEQ_4,TARSKI,FUNCT_2,ARYTM_1,ZFMISC_1,ORDINAL1,RLVECT_3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,FINSEQ_1,RELAT_1,ORDINAL1,FUNCT_1,PARTFUN1,FUNCT_2,ORDERS_1,DOMAIN_1,STRUCT_0,RLVECT_1,FINSEQ_4,FINSET_1,REAL_1,RLSUB_1,RLSUB_2,RLVECT_2,NAT_1;
definitions XBOOLE_0,RLSUB_1,RLVECT_2,TARSKI;
theorems CARD_2,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSET_1,RLSUB_1,RLSUB_2,RLVECT_1,RLVECT_2,TARSKI,ZFMISC_1,RELAT_1,RELSET_1,ORDINAL1,XBOOLE_0,XBOOLE_1,XCMPLX_0,ORDERS_1,STRUCT_0,PARTFUN1,CKB1,CKB2;
schemes FINSEQ_1,FUNCT_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,FINSET_1,NUMBERS,STRUCT_0,RLVECT_1,RLSUB_1,ORDINAL1,REAL_1,XREAL_0,RLVECT_2;
constructors PARTFUN1,REAL_1,NAT_1,ORDERS_1,FINSEQ_4,REALSET1,RLSUB_2,RLVECT_2,RELSET_1;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve a for Real;
reserve k for (Element of ( NAT ));
reserve V for RealLinearSpace;
reserve v for (VECTOR of V);
reserve L for (Linear_Combination of V);
reserve F for (FinSequence of (the carrier of V));
reserve G for (FinSequence of (the carrier of V));
theorem
Th2: ( Sum ( a * L ) ) = ( a * ( Sum L ) )
proof
per cases ;
suppose A1: a <> ( 0 );

set l = ( a * L );
consider F such that A2: F is  one-to-one and A3: ( rng F ) = ( Carrier ( a * L ) ) and A4: ( Sum ( a * L ) ) = ( Sum ( ( a * L ) (#) F ) ) by RLVECT_2:def 8;
set f = ( ( a * L ) (#) F );
consider G such that A5: G is  one-to-one and A6: ( rng G ) = ( Carrier L ) and A7: ( Sum L ) = ( Sum ( L (#) G ) ) by RLVECT_2:def 8;
A8: ( len G ) = ( len F ) by A1,A2,A3,A5,A6,FINSEQ_1:48,RLVECT_2:42;
deffunc Q(Nat) = ( F <- ( G . $1 ) );
consider P being FinSequence such that A9: ( len P ) = ( len F ) and A10: (for k being Nat holds (k in ( dom P ) implies ( P . k ) = Q(k))) from FINSEQ_1:sch 2;
A11: ( Carrier l ) = ( Carrier L ) by A1,RLVECT_2:42;
A12: ( rng P ) c= ( Seg ( len F ) )
proof
let x;
assume x in ( rng P );
then consider y such that A13: y in ( dom P ) and A14: ( P . y ) = x by FUNCT_1:def 3;
reconsider y as (Element of ( NAT )) by A13,FINSEQ_3:23;
y in ( Seg ( len F ) ) by A9,A13,FINSEQ_1:def 3;
then y in ( dom G ) by A8,FINSEQ_1:def 3;
then ( G . y ) in ( rng F ) by A3,A6,A11,FUNCT_1:def 3;
then A15: F just_once_values ( G . y ) by A2,FINSEQ_4:8;
( P . y ) = ( F <- ( G . y ) ) by A10,A13;
then ( P . y ) in ( dom F ) by A15,FINSEQ_4:def 3;
hence thesis by A14,FINSEQ_1:def 3;
end;
A16:now
let x;
thus (x in ( dom G ) implies (x in ( dom P ) & ( P . x ) in ( dom F )))
proof
assume x in ( dom G );
then x in ( Seg ( len P ) ) by A9,A8,FINSEQ_1:def 3;
hence x in ( dom P ) by FINSEQ_1:def 3;
then ( P . x ) in ( rng P ) by FUNCT_1:def 3;
then ( P . x ) in ( Seg ( len F ) ) by A12;
hence thesis by FINSEQ_1:def 3;
end;

assume that
A17: x in ( dom P )
and
( P . x ) in ( dom F );
x in ( Seg ( len P ) ) by A17,FINSEQ_1:def 3;
hence x in ( dom G ) by A9,A8,FINSEQ_1:def 3;
end;
A18: ( dom P ) = ( Seg ( len F ) ) by A9,FINSEQ_1:def 3;
now
let x;
assume A19: x in ( dom G );
then reconsider n = x as (Element of ( NAT )) by FINSEQ_3:23;
( G . n ) in ( rng F ) by A3,A6,A11,A19,FUNCT_1:def 3;
then A20: F just_once_values ( G . n ) by A2,FINSEQ_4:8;
n in ( Seg ( len F ) ) by A8,A19,FINSEQ_1:def 3;
then ( F . ( P . n ) ) = ( F . ( F <- ( G . n ) ) ) by A10,A18
.= ( G . n ) by A20,FINSEQ_4:def 3;
hence ( G . x ) = ( F . ( P . x ) );
end;
then A21: G = ( F * P ) by A16,FUNCT_1:10;
( Seg ( len F ) ) c= ( rng P )
proof
set f = ( ( F " ) * G );
let x;
assume A22: x in ( Seg ( len F ) );
( dom ( F " ) ) = ( rng G ) by A2,A3,A6,A11,FUNCT_1:33;
then A23: ( rng f ) = ( rng ( F " ) ) by RELAT_1:28
.= ( dom F ) by A2,FUNCT_1:33;
A24: ( rng P ) c= ( dom F ) by A12,FINSEQ_1:def 3;
f = ( ( ( F " ) * F ) * P ) by A21,RELAT_1:36
.= ( ( id ( dom F ) ) * P ) by A2,FUNCT_1:39
.= P by A24,RELAT_1:53;
hence thesis by A22,A23,FINSEQ_1:def 3;
end;
then A25: ( Seg ( len F ) ) = ( rng P ) by A12,XBOOLE_0:def 10;
A26: ( dom P ) = ( Seg ( len F ) ) by A9,FINSEQ_1:def 3;
then A27: P is  one-to-one by A25,FINSEQ_4:60;
(( Seg ( len F ) ) = ( {} ) implies ( Seg ( len F ) ) = ( {} ));
then reconsider P as (Function of ( Seg ( len F ) ),( Seg ( len F ) )) by A12,A26,FUNCT_2:def 1,RELSET_1:4;
reconsider P as (Permutation of ( Seg ( len F ) )) by A25,A27,FUNCT_2:57;
A28: ( len f ) = ( len F ) by RLVECT_2:def 7;
then A29: ( dom f ) = ( Seg ( len F ) ) by FINSEQ_1:def 3;
then reconsider Fp = ( f * P ) as (FinSequence of (the carrier of V)) by FINSEQ_2:47;
set g = ( L (#) G );
( dom f ) = ( Seg ( len f ) ) by FINSEQ_1:def 3;
then A30: ( Sum Fp ) = ( Sum f ) by A28,RLVECT_2:7;
A31: ( len Fp ) = ( len f ) by A29,FINSEQ_2:44;
then A32: ( len Fp ) = ( len g ) by A8,A28,RLVECT_2:def 7;
A33:now
let k;
let v;
assume that
A34: k in ( dom g )
and
A35: v = ( g . k );
A36: k in ( Seg ( len F ) ) by A28,A31,A32,A34,FINSEQ_1:def 3;
A37: k in ( dom G ) by A8,A28,A31,A32,A34,FINSEQ_3:29;
then ( G . k ) in ( rng G ) by FUNCT_1:def 3;
then F just_once_values ( G . k ) by A2,A3,A6,A11,FINSEQ_4:8;
then A38: ( F <- ( G . k ) ) in ( dom F ) by FINSEQ_4:def 3;
then reconsider i = ( F <- ( G . k ) ) as (Element of ( NAT )) by FINSEQ_3:23;
i in ( Seg ( len f ) ) by A28,A38,FINSEQ_1:def 3;
then A39: i in ( dom f ) by FINSEQ_1:def 3;
A40: k in ( dom P ) by A9,A28,A31,A32,A34,FINSEQ_3:29;
A41: ( G /. k ) = ( G . k ) by A37,PARTFUN1:def 6
.= ( F . ( P . k ) ) by A21,A40,FUNCT_1:13
.= ( F . i ) by A10,A18,A36
.= ( F /. i ) by A38,PARTFUN1:def 6;
thus ( Fp . k ) = ( f . ( P . k ) ) by A40,FUNCT_1:13
.= ( f . ( F <- ( G . k ) ) ) by A10,A18,A36
.= ( ( l . ( F /. i ) ) * ( F /. i ) ) by A39,RLVECT_2:def 7
.= ( ( a * ( L . ( F /. i ) ) ) * ( F /. i ) ) by RLVECT_2:def 11
.= ( a * ( ( L . ( F /. i ) ) * ( F /. i ) ) ) by RLVECT_1:def 7
.= ( a * v ) by A34,A35,A41,RLVECT_2:def 7;
end;
( dom Fp ) = ( dom g ) by A32,FINSEQ_3:29;
hence thesis by A4,A7,A30,A32,A33,RLVECT_1:39;
end;
suppose A42: a = ( 0 );

hence ( Sum ( a * L ) ) = ( Sum ( ZeroLC V ) ) by RLVECT_2:43
.= ( 0. V ) by RLVECT_2:30
.= ( a * ( Sum L ) ) by A42,RLVECT_1:10;
end;
end;
