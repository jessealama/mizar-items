environ
vocabularies NUMBERS,FINSEQ_1,SUBSET_1,RELAT_1,FUNCT_1,CARD_1,CARD_3,FINSEQ_2,ARYTM_3,ORDINAL4,TARSKI,NAT_1,XXREAL_0,REAL_1,ARYTM_1,XBOOLE_0,ORDINAL1,RLVECT_1,ALGSTR_0,SUPINF_2,PARTFUN1,FINSET_1,FUNCT_2,MCART_1,ZFMISC_1,PRE_POLY,FUNCT_4,FUNCOP_1,VALUED_0,PBOOLE,XREAL_0,SGRAPH1,FINSOP_1,BINOP_1,GROUP_1,STRUCT_0,POLYNOM1,POLYNOM3,AFINSQ_1,MESFUNC1,ALGSEQ_1,VECTSP_1,POLYNOM5,LATTICES,VECTSP_2,COMPLFLD,POLYNOM2,FVSUM_1,MEMBERED,CLASSES1,UPROOTS;
notations TARSKI,XBOOLE_0,XCMPLX_0,XXREAL_0,SUBSET_1,ORDINAL1,CARD_1,NUMBERS,XREAL_0,ZFMISC_1,REAL_1,VECTSP_2,BINOP_1,RELAT_1,FUNCT_1,PBOOLE,RELSET_1,PARTFUN1,FINSEQ_1,FINSEQ_2,DOMAIN_1,FUNCT_2,XXREAL_2,VALUED_0,NAT_1,NAT_D,STRUCT_0,ALGSTR_0,RLVECT_1,VFUNCT_1,VECTSP_1,FINSOP_1,NORMSP_1,GROUP_4,RVSUM_1,ALGSEQ_1,COMPLFLD,BHSP_1,POLYNOM3,POLYNOM4,POLYNOM5,FINSET_1,MCART_1,FUNCT_4,FUNCOP_1,CLASSES1,FVSUM_1,WSIERP_1,MEMBERED,GROUP_1,RECDEF_1,PRE_POLY,CKB5,CKB11,CKB17,CKB18,CKB19,CKB20,CKB27,CKB59,CKB65,CKB72,CKB75,CKB82,CKB83;
definitions TARSKI,VECTSP_2,FUNCT_1,POLYNOM3,POLYNOM5,FINSEQ_2,RVSUM_1,GROUP_4,RLVECT_1,FUNCOP_1,RELAT_1,STRUCT_0,CKB5,CKB11,CKB18,CKB20,CKB27,CKB59,CKB65,CKB72,CKB75,CKB82,CKB83;
theorems GROUP_1,CARD_1,FINSEQ_1,ZFMISC_1,NAT_1,FUNCT_1,FUNCT_2,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,VECTSP_1,POLYNOM5,INT_1,AXIOMS,RVSUM_1,FVSUM_1,FINSEQ_3,FINSEQ_2,POLYNOM4,POLYNOM3,FUNCT_7,ALGSEQ_1,RLVECT_1,PBOOLE,FUNCOP_1,MATRIX_3,VECTSP_2,CARD_2,FINSEQ_5,GRAPH_5,BAGORDER,RFINSEQ,WELLORD2,CARD_3,ORDINAL1,FINSOP_1,MONOID_0,INTEGRA1,FUNCT_4,MCART_1,XREAL_1,GROUP_4,XXREAL_0,PARTFUN1,XXREAL_2,NAT_D,FINSEQ_4,CLASSES1,PRE_POLY,TREES_9,CKB1,CKB3,CKB5,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB31,CKB32,CKB33,CKB35,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86;
schemes NAT_1,FUNCT_1,FUNCT_2,FRAENKEL,ALGSEQ_1,FINSEQ_1,RECDEF_1,CLASSES1,INT_1,CKB2;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,BINOP_2,CARD_1,MEMBERED,FINSEQ_1,STRUCT_0,VECTSP_1,COMPLFLD,ALGSTR_1,MONOID_0,PRE_POLY,POLYNOM3,POLYNOM4,POLYNOM5,FINSEQ_2,VALUED_0,XXREAL_2,FUNCT_2,RELSET_1,GROUP_1,VFUNCT_1,CKB4,CKB6,CKB8,CKB29,CKB30,CKB34,CKB36,CKB37,CKB56,CKB71;
constructors WELLORD2,SETWISEO,REAL_1,FINSEQOP,FINSOP_1,NAT_D,WSIERP_1,VECTSP_2,REALSET2,ALGSTR_1,GROUP_4,BHSP_1,MATRIX_2,MONOID_0,GOBOARD1,POLYNOM2,POLYNOM4,POLYNOM5,SEQ_1,RECDEF_1,BINOP_2,CLASSES1,XXREAL_2,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1,CKB5,CKB11,CKB18,CKB20,CKB27,CKB59,CKB65,CKB72,CKB75,CKB82,CKB83;
requirements NUMERALS,BOOLE,SUBSET,ARITHM,REAL;
begin
theorem
Th65: (for L being  add-associative  right_zeroed  right_complementable  distributive non  empty doubleLoopStr holds (for b being (bag of (the carrier of L)) holds (for f being (FinSequence of ( (the carrier of ( Polynom-Ring L )) * )) holds (for s being (FinSequence of L) holds (for c being (Element of L) holds (((( len f ) = ( card ( support b ) ) & s = ( canFS ( support b ) )) & (for i being (Element of ( NAT )) holds (i in ( dom f ) implies ( f . i ) = ( fpoly_mult_root (( s /. i ),( b . ( s /. i ) )) )))) implies ((c in ( support b ) implies ( card ( ( FlattenSeq f ) " { <% ( - c ),( 1. L ) %> } ) ) = ( b . c )) & ((not c in ( support b )) implies ( card ( ( FlattenSeq f ) " { <% ( - c ),( 1. L ) %> } ) ) = ( 0 )))))))))
proof
let L being  add-associative  right_zeroed  right_complementable  distributive non  empty doubleLoopStr;
let b being (bag of (the carrier of L));
let f being (FinSequence of ( (the carrier of ( Polynom-Ring L )) * ));
let s being (FinSequence of L);
let c being (Element of L);
assume that
A1: ( len f ) = ( card ( support b ) )
and
A2: s = ( canFS ( support b ) )
and
A3: (for i being (Element of ( NAT )) holds (i in ( dom f ) implies ( f . i ) = ( fpoly_mult_root (( s /. i ),( b . ( s /. i ) )) )));
( len f ) = ( len s ) by A1,A2,CKB7:1;
then A4: ( dom f ) = ( dom s ) by FINSEQ_3:29;
hereby
set X = { k where k is (Element of ( NAT )): k < ( b . c ) };
set ff = ( FlattenSeq f );
set Y = ( ff " { <% ( - c ),( 1. L ) %> } );
assume c in ( support b );
then c in ( rng s ) by A2,FUNCT_2:def 3;
then consider i being Nat such that A5: i in ( dom s ) and A6: ( s . i ) = c by FINSEQ_2:10;
defpred P[ set,set ]
 means
(ex n being (Element of ( NAT )) st (n = $1 & $2 = ( ( Sum ( Card ( f | ( i -' 1 ) ) ) ) + ( 1 + n ) )));
A7: (for x being set holds (x in X implies (ex y being set st P[ x,y ])))
proof
let x being set;
assume x in X;
then consider k being (Element of ( NAT )) such that A8: x = k and k < ( b . c );
take ( ( Sum ( Card ( f | ( i -' 1 ) ) ) ) + ( 1 + k ) );
thus thesis by A8;
end;
consider g being Function such that A9: ( dom g ) = X and A10: (for x being set holds (x in X implies P[ x,( g . x ) ])) from CLASSES1:sch 1(A7);
A11: ( s /. i ) = c by A5,A6,PARTFUN1:def 6;
now
let y being set;
A12: ( <% ( - c ),( 1. L ) %> . ( 0 ) ) = ( - c ) by POLYNOM5:38;
hereby
assume y in ( rng g );
then consider x being set such that A13: x in ( dom g ) and A14: y = ( g . x ) by FUNCT_1:def 3;
consider n being (Element of ( NAT )) such that A15: n = x and A16: ( g . x ) = ( ( Sum ( Card ( f | ( i -' 1 ) ) ) ) + ( 1 + n ) ) by A9,A10,A13;
(ex k being (Element of ( NAT )) st (x = k & k < ( b . c ))) by A9,A13;
then A17: (1 <= ( 1 + n ) & ( 1 + n ) <= ( b . c )) by A15,NAT_1:12,NAT_1:13;
A18: ( f . i ) = ( fpoly_mult_root (( s /. i ),( b . ( s /. i ) )) ) by A3,A4,A5;
then ( len ( f . i ) ) = ( b . c ) by A11,CKB82:def 1;
then A19: ( 1 + n ) in ( dom ( f . i ) ) by A17,FINSEQ_3:25;
then ( ( f . i ) . ( 1 + n ) ) = <% ( - c ),( 1. L ) %> by A11,A18,CKB82:def 1;
then A20: ( ( f . i ) . ( 1 + n ) ) in { <% ( - c ),( 1. L ) %> } by TARSKI:def 1;
(( ( Sum ( Card ( f | ( i -' 1 ) ) ) ) + ( 1 + n ) ) in ( dom ff ) & ( ( f . i ) . ( 1 + n ) ) = ( ff . ( ( Sum ( Card ( f | ( i -' 1 ) ) ) ) + ( 1 + n ) ) )) by A4,A5,A19,PRE_POLY:30;
hence y in Y by A14,A16,A20,FUNCT_1:def 7;
end;
assume A21: y in Y;
then reconsider yn = y as (Element of ( NAT ));
A22: ( ff . y ) in { <% ( - c ),( 1. L ) %> } by A21,FUNCT_1:def 7;
y in ( dom ff ) by A21,FUNCT_1:def 7;
then consider i1,j being (Element of ( NAT )) such that A23: i1 in ( dom f ) and A24: j in ( dom ( f . i1 ) ) and A25: yn = ( ( Sum ( Card ( f | ( i1 -' 1 ) ) ) ) + j ) and A26: ( ( f . i1 ) . j ) = ( ff . yn ) by PRE_POLY:29;
A27: ( f . i1 ) = ( fpoly_mult_root (( s /. i1 ),( b . ( s /. i1 ) )) ) by A3,A23;
then ( ( f . i1 ) . j ) = <% ( - ( s /. i1 ) ),( 1. L ) %> by A24,CKB82:def 1;
then <% ( - c ),( 1. L ) %> = <% ( - ( s /. i1 ) ),( 1. L ) %> by A22,A26,TARSKI:def 1;
then A28: c = ( s /. i1 ) by A12,POLYNOM5:38,RLVECT_1:18;
(i1 in ( dom s ) & ( s /. i1 ) = ( s . i1 )) by A4,A23,PARTFUN1:def 6;
then A29: i1 = i by A2,A5,A6,A28,FUNCT_1:def 4;
consider j1 being Nat such that A30: j = ( j1 + 1 ) by A24,FINSEQ_3:24,NAT_1:6;
reconsider j1 as (Element of ( NAT )) by ORDINAL1:def 12;
( len ( f . i1 ) ) = ( b . c ) by A27,A28,CKB82:def 1;
then j <= ( b . c ) by A24,FINSEQ_3:25;
then j1 < ( b . c ) by A30,NAT_1:13;
then A31: j1 in X;
then (ex n being (Element of ( NAT )) st (n = j1 & ( g . j1 ) = ( ( Sum ( Card ( f | ( i -' 1 ) ) ) ) + ( 1 + n ) ))) by A10;
hence y in ( rng g ) by A9,A25,A30,A29,A31,FUNCT_1:3;
end;
then A32: ( rng g ) = Y by TARSKI:1;
g is  one-to-one
proof
let x1 being set;
let x2 being set;
assume that
A33: (x1 in ( dom g ) & x2 in ( dom g ))
and
A34: ( g . x1 ) = ( g . x2 );
((ex n1 being (Element of ( NAT )) st (n1 = x1 & ( g . x1 ) = ( ( Sum ( Card ( f | ( i -' 1 ) ) ) ) + ( 1 + n1 ) ))) & (ex n2 being (Element of ( NAT )) st (n2 = x2 & ( g . x2 ) = ( ( Sum ( Card ( f | ( i -' 1 ) ) ) ) + ( 1 + n2 ) )))) by A9,A10,A33;
hence thesis by A34;
end;
then (( b . c ) = { k where k is (Element of ( NAT )): k < ( b . c ) } & X,Y are_equipotent ) by A9,A32,AXIOMS:4,WELLORD2:def 4;
hence ( card ( ( FlattenSeq f ) " { <% ( - c ),( 1. L ) %> } ) ) = ( b . c ) by CARD_1:def 2;
end;
assume that
A35: (not c in ( support b ))
and
A36: ( card ( ( FlattenSeq f ) " { <% ( - c ),( 1. L ) %> } ) ) <> ( 0 );
consider x being set such that A37: x in ( ( FlattenSeq f ) " { <% ( - c ),( 1. L ) %> } ) by A36,CARD_1:27,XBOOLE_0:def 1;
A38: x in ( dom ( FlattenSeq f ) ) by A37,FUNCT_1:def 7;
reconsider x as (Element of ( NAT )) by A37;
consider i,j being (Element of ( NAT )) such that A39: i in ( dom f ) and A40: j in ( dom ( f . i ) ) and x = ( ( Sum ( Card ( f | ( i -' 1 ) ) ) ) + j ) and A41: ( ( f . i ) . j ) = ( ( FlattenSeq f ) . x ) by A38,PRE_POLY:29;
A42: (( s /. i ) = ( s . i ) & ( s . i ) in ( rng s )) by A4,A39,FUNCT_1:3,PARTFUN1:def 6;
( ( FlattenSeq f ) . x ) in { <% ( - c ),( 1. L ) %> } by A37,FUNCT_1:def 7;
then A43: ( ( FlattenSeq f ) . x ) = <% ( - c ),( 1. L ) %> by TARSKI:def 1;
( f . i ) = ( fpoly_mult_root (( s /. i ),( b . ( s /. i ) )) ) by A3,A39;
then A44: ( ( f . i ) . j ) = <% ( - ( s /. i ) ),( 1. L ) %> by A40,CKB82:def 1;
( <% ( - c ),( 1. L ) %> . ( 0 ) ) = ( - c ) by POLYNOM5:38;
then c = ( s /. i ) by A41,A43,A44,POLYNOM5:38,RLVECT_1:18;
hence contradiction by A2,A35,A42,FUNCT_2:def 3;
end;
