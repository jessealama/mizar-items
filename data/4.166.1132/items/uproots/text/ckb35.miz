environ
vocabularies NUMBERS,FINSEQ_1,SUBSET_1,RELAT_1,FUNCT_1,CARD_1,CARD_3,FINSEQ_2,ARYTM_3,ORDINAL4,TARSKI,NAT_1,XXREAL_0,REAL_1,ARYTM_1,XBOOLE_0,ORDINAL1,RLVECT_1,ALGSTR_0,SUPINF_2,PARTFUN1,FINSET_1,FUNCT_2,MCART_1,ZFMISC_1,PRE_POLY,FUNCT_4,FUNCOP_1,VALUED_0,PBOOLE,XREAL_0,SGRAPH1,FINSOP_1,BINOP_1,GROUP_1,STRUCT_0,POLYNOM1,POLYNOM3,AFINSQ_1,MESFUNC1,ALGSEQ_1,VECTSP_1,POLYNOM5,LATTICES,VECTSP_2,COMPLFLD,POLYNOM2,FVSUM_1,MEMBERED,CLASSES1,UPROOTS;
notations TARSKI,XBOOLE_0,XCMPLX_0,XXREAL_0,SUBSET_1,ORDINAL1,CARD_1,NUMBERS,XREAL_0,ZFMISC_1,REAL_1,VECTSP_2,BINOP_1,RELAT_1,FUNCT_1,PBOOLE,RELSET_1,PARTFUN1,FINSEQ_1,FINSEQ_2,DOMAIN_1,FUNCT_2,XXREAL_2,VALUED_0,NAT_1,NAT_D,STRUCT_0,ALGSTR_0,RLVECT_1,VFUNCT_1,VECTSP_1,FINSOP_1,NORMSP_1,GROUP_4,RVSUM_1,ALGSEQ_1,COMPLFLD,BHSP_1,POLYNOM3,POLYNOM4,POLYNOM5,FINSET_1,MCART_1,FUNCT_4,FUNCOP_1,CLASSES1,FVSUM_1,WSIERP_1,MEMBERED,GROUP_1,RECDEF_1,PRE_POLY,CKB5,CKB11,CKB17,CKB18,CKB19,CKB20,CKB27;
definitions TARSKI,VECTSP_2,FUNCT_1,POLYNOM3,POLYNOM5,FINSEQ_2,RVSUM_1,GROUP_4,RLVECT_1,FUNCOP_1,RELAT_1,STRUCT_0,CKB5,CKB11,CKB18,CKB20,CKB27;
theorems GROUP_1,CARD_1,FINSEQ_1,ZFMISC_1,NAT_1,FUNCT_1,FUNCT_2,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,VECTSP_1,POLYNOM5,INT_1,AXIOMS,RVSUM_1,FVSUM_1,FINSEQ_3,FINSEQ_2,POLYNOM4,POLYNOM3,FUNCT_7,ALGSEQ_1,RLVECT_1,PBOOLE,FUNCOP_1,MATRIX_3,VECTSP_2,CARD_2,FINSEQ_5,GRAPH_5,BAGORDER,RFINSEQ,WELLORD2,CARD_3,ORDINAL1,FINSOP_1,MONOID_0,INTEGRA1,FUNCT_4,MCART_1,XREAL_1,GROUP_4,XXREAL_0,PARTFUN1,XXREAL_2,NAT_D,FINSEQ_4,CLASSES1,PRE_POLY,TREES_9,CKB1,CKB3,CKB5,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB31,CKB32,CKB33;
schemes NAT_1,FUNCT_1,FUNCT_2,FRAENKEL,ALGSEQ_1,FINSEQ_1,RECDEF_1,CLASSES1,INT_1,CKB2;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,BINOP_2,CARD_1,MEMBERED,FINSEQ_1,STRUCT_0,VECTSP_1,COMPLFLD,ALGSTR_1,MONOID_0,PRE_POLY,POLYNOM3,POLYNOM4,POLYNOM5,FINSEQ_2,VALUED_0,XXREAL_2,FUNCT_2,RELSET_1,GROUP_1,VFUNCT_1,CKB4,CKB6,CKB8,CKB29,CKB30,CKB34;
constructors WELLORD2,SETWISEO,REAL_1,FINSEQOP,FINSOP_1,NAT_D,WSIERP_1,VECTSP_2,REALSET2,ALGSTR_1,GROUP_4,BHSP_1,MATRIX_2,MONOID_0,GOBOARD1,POLYNOM2,POLYNOM4,POLYNOM5,SEQ_1,RECDEF_1,BINOP_2,CLASSES1,XXREAL_2,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1,CKB5,CKB11,CKB18,CKB20,CKB27;
requirements NUMERALS,BOOLE,SUBSET,ARITHM,REAL;
begin
theorem
Th23: (for L being  add-associative  right_zeroed  right_complementable  distributive  domRing-like non  empty doubleLoopStr holds (for p,q being (Polynomial of L) holds (( p *' q ) = ( 0_. L ) implies (p = ( 0_. L ) or q = ( 0_. L )))))
proof
let L being  add-associative  right_zeroed  right_complementable  distributive  domRing-like non  empty doubleLoopStr;
let p being (Polynomial of L);
let q being (Polynomial of L);
assume that
A1: ( p *' q ) = ( 0_. L )
and
A2: p <> ( 0_. L )
and
A3: q <> ( 0_. L );
consider lp1 being Nat such that A4: ( len p ) = ( lp1 + 1 ) by A2,NAT_1:6,POLYNOM4:5;
( len p ) <> ( 0 ) by A2,POLYNOM4:5;
then A5: ( (( 0 ) qua Nat) + 1 ) <= ( len p ) by NAT_1:13;
consider lq1 being Nat such that A6: ( len q ) = ( lq1 + 1 ) by A3,NAT_1:6,POLYNOM4:5;
reconsider lp1,lq1 as (Element of ( NAT )) by ORDINAL1:def 12;
A7: ( p . lp1 ) <> ( 0. L ) by A4,ALGSEQ_1:10;
A8: ( q . lq1 ) <> ( 0. L ) by A6,ALGSEQ_1:10;
set lpq = ( lp1 + lq1 );
consider r being (FinSequence of L) such that A9: ( len r ) = ( lpq + 1 ) and A10: ( ( p *' q ) . lpq ) = ( Sum r ) and A11: (for k being (Element of ( NAT )) holds (k in ( dom r ) implies ( r . k ) = ( ( p . ( k -' 1 ) ) * ( q . ( ( lpq + 1 ) -' k ) ) ))) by POLYNOM3:def 9;
A12: ( ( lpq + 1 ) -' ( len p ) ) = ( ( lq1 + ( lp1 + 1 ) ) -' ( len p ) )
.= lq1 by A4,NAT_D:34;
( len p ) <= ( ( lp1 + 1 ) + lq1 ) by A4,NAT_1:12;
then A13: ( len p ) in ( dom r ) by A9,A5,FINSEQ_3:25;
now
let k being Nat;
assume that
A14: k in ( dom r )
and
A15: k <> ( len p );
reconsider k1 = k as (Element of ( NAT )) by ORDINAL1:def 12;
A16: ( r . k1 ) = ( ( p . ( k1 -' 1 ) ) * ( q . ( ( lpq + 1 ) -' k1 ) ) ) by A11,A14;
per cases  by A15,XXREAL_0:1;
suppose k < ( len p );

then consider d being (Element of ( NAT )) such that A17: ( len p ) = ( k1 + d ) and A18: 1 <= d by FINSEQ_4:84;
A19: ( len q ) <= ( lq1 + d ) by A6,A18,XREAL_1:6;
( ( lpq + 1 ) -' k ) = ( ( ( lq1 + d ) + k ) -' k ) by A4,A17
.= ( lq1 + d ) by NAT_D:34;
hence ( r . k ) = ( ( p . ( k -' 1 ) ) * ( 0. L ) ) by A16,A19,ALGSEQ_1:8
.= ( 0. L ) by VECTSP_1:6;
end;
suppose k > ( len p );

then k >= ( ( len p ) + 1 ) by NAT_1:13;
then ( k -' 1 ) >= ( ( ( len p ) + 1 ) -' 1 ) by NAT_D:42;
then ( k -' 1 ) >= ( len p ) by NAT_D:34;
hence ( r . k ) = ( ( 0. L ) * ( q . ( ( lpq + 1 ) -' k ) ) ) by A16,ALGSEQ_1:8
.= ( 0. L ) by VECTSP_1:7;
end;
end;
then ( Sum r ) = ( r . ( len p ) ) by A13,MATRIX_3:12
.= ( ( p . ( ( len p ) -' 1 ) ) * ( q . ( ( lpq + 1 ) -' ( len p ) ) ) ) by A11,A13
.= ( ( p . lp1 ) * ( q . lq1 ) ) by A4,A12,NAT_D:34;
then ( Sum r ) <> ( 0. L ) by A7,A8,VECTSP_2:def 1;
hence contradiction by A1,A10,FUNCOP_1:7;
end;
