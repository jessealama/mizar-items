environ
vocabularies NUMBERS,TREES_2,SUBSET_1,RELAT_1,FINSEQ_1,FUNCT_1,TARSKI,TREES_1,XXREAL_0,ARYTM_3,CARD_1,FUNCOP_1,XBOOLE_0,TREES_3,ZFMISC_1,NAT_1,FINSEQ_2,TREES_A,ORDINAL4,FUNCT_6,FINSEQ_4,MCART_1,PARTFUN1,TREES_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,RELAT_1,FUNCT_1,DOMAIN_1,FUNCOP_1,FUNCT_3,FINSEQ_1,FINSEQ_2,TREES_1,TREES_2,FUNCT_6,TREES_3,XXREAL_0,CKB1,CKB2,CKB6,CKB7,CKB12,CKB16,CKB17,CKB18;
definitions TARSKI,FINSEQ_1,TREES_1,TREES_2,FINSEQ_2,FUNCT_6,CKB2,CKB6,CKB12,CKB16,CKB17,CKB18;
theorems TARSKI,ZFMISC_1,FINSEQ_1,MCART_1,NAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,FUNCT_6,FINSEQ_2,FINSEQ_3,TREES_1,TREES_2,TREES_3,RELAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,FUNCT_5,ORDINAL1,CARD_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes CLASSES1,FINSEQ_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,XREAL_0,FINSEQ_1,TREES_2,TREES_3,CARD_1,FINSEQ_2,FUNCOP_1,RELSET_1,TREES_1;
constructors BINOP_1,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FUNCT_5,FINSEQ_2,FUNCT_6,TREES_3,RELSET_1,CKB6,CKB7,CKB12,CKB16,CKB17,CKB18;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve i for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve p for FinSequence;
reserve q for FinSequence;
theorem
Th11: (for p being  DTree-yielding FinSequence holds (y in ( dom ( x -tree p ) ) iff (y = ( {} ) or (ex i being (Element of ( NAT )) st (ex T being DecoratedTree st (ex q being (Node of T) st ((i < ( len p ) & T = ( p . ( i + 1 ) )) & y = ( <* i *> ^ q ))))))))
proof
let p being  DTree-yielding FinSequence;
A1: ( dom ( x -tree p ) ) = ( tree ( doms p ) ) by CKB19:1;
A2:now
given i,q such that
A3: i < ( len ( doms p ) )
and
A4: q in ( ( doms p ) . ( i + 1 ) )
and
A5: y = ( <* i *> ^ q );

( len ( doms p ) ) = ( len p ) by TREES_3:38;
then A6: ( i + 1 ) in ( dom p ) by A3,CKB5:1;
then reconsider T = ( p . ( i + 1 ) ) as DecoratedTree by TREES_3:24;
take i;
take T;
reconsider q as (Node of T) by A4,A6,FUNCT_6:22;
take q;
thus ((i < ( len p ) & T = ( p . ( i + 1 ) )) & y = ( <* i *> ^ q )) by A3,A5,TREES_3:38;
end;
now
given i being (Element of ( NAT )),T being DecoratedTree,q being (Node of T) such that
A7: i < ( len p )
and
A8: T = ( p . ( i + 1 ) )
and
A9: y = ( <* i *> ^ q );

reconsider q as FinSequence;
take i;
take q;
( i + 1 ) in ( dom p ) by A7,CKB5:1;
then ( ( doms p ) . ( i + 1 ) ) = ( dom T ) by A8,FUNCT_6:22;
hence ((i < ( len ( doms p ) ) & q in ( ( doms p ) . ( i + 1 ) )) & y = ( <* i *> ^ q )) by A7,A9,TREES_3:38;
end;
hence thesis by A1,A2,TREES_3:def 15;
end;
