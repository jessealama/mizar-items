environ
vocabularies NUMBERS,TREES_2,SUBSET_1,RELAT_1,FINSEQ_1,FUNCT_1,TARSKI,TREES_1,XXREAL_0,ARYTM_3,CARD_1,FUNCOP_1,XBOOLE_0,TREES_3,ZFMISC_1,NAT_1,FINSEQ_2,TREES_A,ORDINAL4,FUNCT_6,FINSEQ_4,MCART_1,PARTFUN1,TREES_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,RELAT_1,FUNCT_1,DOMAIN_1,FUNCOP_1,FUNCT_3,FINSEQ_1,FINSEQ_2,TREES_1,TREES_2,FUNCT_6,TREES_3,XXREAL_0,CKB1,CKB2,CKB6,CKB7,CKB12,CKB16,CKB17,CKB18,CKB36,CKB37,CKB38,CKB41;
definitions TARSKI,FINSEQ_1,TREES_1,TREES_2,FINSEQ_2,FUNCT_6,CKB2,CKB6,CKB12,CKB16,CKB17,CKB18,CKB41;
theorems TARSKI,ZFMISC_1,FINSEQ_1,MCART_1,NAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,FUNCT_6,FINSEQ_2,FINSEQ_3,TREES_1,TREES_2,TREES_3,RELAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,FUNCT_5,ORDINAL1,CARD_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB41;
schemes CLASSES1,FINSEQ_1,XBOOLE_0,CKB40;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,XREAL_0,FINSEQ_1,TREES_2,TREES_3,CARD_1,FINSEQ_2,FUNCOP_1,RELSET_1,TREES_1,CKB32,CKB33,CKB34,CKB35,CKB39;
constructors BINOP_1,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FUNCT_5,FINSEQ_2,FUNCT_6,TREES_3,RELSET_1,CKB6,CKB7,CKB12,CKB16,CKB17,CKB18,CKB36,CKB37,CKB38,CKB41;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve z for set;
reserve r for FinSequence;
registration
let D being non  empty set;
let T being (DecoratedTree of D);
let T9 being (DecoratedTree of D);
let x being set;
cluster ( (T,x) <- T9 ) -> D -valued;
coherence
proof
( rng ( (T,x) <- T9 ) ) c= D
proof
let y being set;
assume y in ( rng ( (T,x) <- T9 ) );
then consider z being set such that A1: z in ( dom ( (T,x) <- T9 ) ) and A2: y = ( ( (T,x) <- T9 ) . z ) by FUNCT_1:def 3;
reconsider z as (Node of ( (T,x) <- T9 )) by A1;
reconsider p9 = ( {} ) as (Node of T9) by TREES_1:22;
per cases  by CKB41:def 1;
suppose z in ( dom T );

then reconsider p = z as (Node of T);
hereby
per cases ;
suppose (p in ( Leaves ( dom T ) ) & ( T . p ) = x);

then A3: ( ( (T,x) <- T9 ) . ( p ^ p9 ) ) = ( T9 . p9 ) by CKB41:def 1;
( p ^ p9 ) = p by FINSEQ_1:34;
hence thesis by A2,A3;
end;
suppose ((not p in ( Leaves ( dom T ) )) or ( T . p ) <> x);

then ( ( (T,x) <- T9 ) . p ) = ( T . p ) by CKB41:def 1;
hence thesis by A2;
end;
end;
end;
suppose (ex q being (Node of T) st (ex r being (Node of T9) st ((q in ( Leaves ( dom T ) ) & ( T . q ) = x) & z = ( q ^ r ))));

then consider q being (Node of T),r being (Node of T9) such that A4: ((q in ( Leaves ( dom T ) ) & ( T . q ) = x) & z = ( q ^ r ));
( ( (T,x) <- T9 ) . z ) = ( T9 . r ) by A4,CKB41:def 1;
hence thesis by A2;
end;
end;
hence thesis by RELAT_1:def 19;
end;
end;
