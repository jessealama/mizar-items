environ
vocabularies NUMBERS,TREES_2,SUBSET_1,RELAT_1,FINSEQ_1,FUNCT_1,TARSKI,TREES_1,XXREAL_0,ARYTM_3,CARD_1,FUNCOP_1,XBOOLE_0,TREES_3,ZFMISC_1,NAT_1,FINSEQ_2,TREES_A,ORDINAL4,FUNCT_6,FINSEQ_4,MCART_1,PARTFUN1,TREES_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,RELAT_1,FUNCT_1,DOMAIN_1,FUNCOP_1,FUNCT_3,FINSEQ_1,FINSEQ_2,TREES_1,TREES_2,FUNCT_6,TREES_3,XXREAL_0,CKB1,CKB2,CKB6,CKB7,CKB12,CKB16,CKB17,CKB18,CKB36,CKB37,CKB38,CKB41;
definitions TARSKI,FINSEQ_1,TREES_1,TREES_2,FINSEQ_2,FUNCT_6,CKB2,CKB6,CKB12,CKB16,CKB17,CKB18,CKB41;
theorems TARSKI,ZFMISC_1,FINSEQ_1,MCART_1,NAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,FUNCT_6,FINSEQ_2,FINSEQ_3,TREES_1,TREES_2,TREES_3,RELAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,FUNCT_5,ORDINAL1,CARD_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB41;
schemes CLASSES1,FINSEQ_1,XBOOLE_0,CKB40;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,XREAL_0,FINSEQ_1,TREES_2,TREES_3,CARD_1,FINSEQ_2,FUNCOP_1,RELSET_1,TREES_1,CKB32,CKB33,CKB34,CKB35,CKB39,CKB42;
constructors BINOP_1,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FUNCT_5,FINSEQ_2,FUNCT_6,TREES_3,RELSET_1,CKB6,CKB7,CKB12,CKB16,CKB17,CKB18,CKB36,CKB37,CKB38,CKB41;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve p for FinSequence;
reserve T for DecoratedTree;
reserve T9 for DecoratedTree;
reserve x for set;
theorem
(((not x in ( rng T )) or (not x in ( Leaves T ))) implies ( (T,x) <- T9 ) = T)
proof
A1: ( Leaves T ) c= ( rng T ) by RELAT_1:111;
assume ((not x in ( rng T )) or (not x in ( Leaves T )));
then A2: (not x in ( Leaves T )) by A1;
thus A3: ( dom ( (T,x) <- T9 ) ) = ( dom T )
proof
let p being (FinSequence of ( NAT ));
(p in ( dom ( (T,x) <- T9 ) ) iff (p in ( dom T ) or (ex q being (Node of T) st (ex r being (Node of T9) st ((q in ( Leaves ( dom T ) ) & ( T . q ) = x) & p = ( q ^ r )))))) by CKB41:def 1;
hence thesis by A2,FUNCT_1:def 6;
end;

let p being (Node of ( (T,x) <- T9 ));
reconsider p9 = p as (Node of T) by A3;
(p9 in ( Leaves ( dom T ) ) implies ( T . p9 ) in ( Leaves T )) by FUNCT_1:def 6;
hence thesis by A2,CKB41:def 1;
end;
