environ
vocabularies NUMBERS,TREES_2,SUBSET_1,RELAT_1,FINSEQ_1,FUNCT_1,TARSKI,TREES_1,XXREAL_0,ARYTM_3,CARD_1,FUNCOP_1,XBOOLE_0,TREES_3,ZFMISC_1,NAT_1,FINSEQ_2,TREES_A,ORDINAL4,FUNCT_6,FINSEQ_4,MCART_1,PARTFUN1,TREES_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,RELAT_1,FUNCT_1,DOMAIN_1,FUNCOP_1,FUNCT_3,FINSEQ_1,FINSEQ_2,TREES_1,TREES_2,FUNCT_6,TREES_3,XXREAL_0,CKB1,CKB2,CKB6,CKB7,CKB12,CKB16,CKB17,CKB18,CKB36,CKB37,CKB38;
definitions TARSKI,FINSEQ_1,TREES_1,TREES_2,FINSEQ_2,FUNCT_6,CKB2,CKB6,CKB12,CKB16,CKB17,CKB18;
theorems TARSKI,ZFMISC_1,FINSEQ_1,MCART_1,NAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,FUNCT_6,FINSEQ_2,FINSEQ_3,TREES_1,TREES_2,TREES_3,RELAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,FUNCT_5,ORDINAL1,CARD_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31;
schemes CLASSES1,FINSEQ_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,XREAL_0,FINSEQ_1,TREES_2,TREES_3,CARD_1,FINSEQ_2,FUNCOP_1,RELSET_1,TREES_1,CKB32,CKB33,CKB34,CKB35,CKB39;
constructors BINOP_1,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FUNCT_5,FINSEQ_2,FUNCT_6,TREES_3,RELSET_1,CKB6,CKB7,CKB12,CKB16,CKB17,CKB18,CKB36,CKB37,CKB38;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve z for set;
reserve n for (Element of ( NAT ));
reserve p for FinSequence;
reserve q for FinSequence;
reserve r for FinSequence;
scheme ExpandTree { T1() -> Tree,T2() -> Tree,P[set] } : (ex T being Tree st (for p holds (p in T iff (p in T1() or (ex q being (Element of T1()) st (ex r being (Element of T2()) st (P[ q ] & p = ( q ^ r ))))))))
proof
defpred X[ set ]
 means
($1 in T1() or (ex q being (Element of T1()) st (ex r being (Element of T2()) st (P[ q ] & $1 = ( q ^ r )))));
consider T being set such that A1: (x in T iff (x in ( ( NAT ) * ) & X[ x ])) from XBOOLE_0:sch 1;
set t = the (Element of T1());
t in ( ( NAT ) * ) by FINSEQ_1:def 11;
then reconsider T as non  empty set by A1;
T is  Tree-like
proof
thus T c= ( ( NAT ) * )
proof
let x;
thus thesis by A1;
end;

thus (for p being (FinSequence of ( NAT )) holds (p in T implies ( ProperPrefixes p ) c= T))
proof
let p being (FinSequence of ( NAT ));
assume that
A2: p in T;
let x;
assume x in ( ProperPrefixes p );
then consider q such that A3: x = q and A4: q is_a_proper_prefix_of p by TREES_1:def 2;
assume A5: (not thesis);
q is_a_prefix_of p by A4,XBOOLE_0:def 8;
then consider r such that A6: p = ( q ^ r ) by TREES_1:1;
reconsider q,r as (FinSequence of ( NAT )) by A6,FINSEQ_1:36;
(((( q ^ r ) in T1() & q in ( ( NAT ) * )) & (( q ^ r ) in T1() implies q in T1())) or (ex q being (Element of T1()) st (ex r being (Element of T2()) st (P[ q ] & p = ( q ^ r ))))) by A1,A2,A6,FINSEQ_1:def 11,TREES_1:21;
then consider q9 being (Element of T1()),r9 being (Element of T2()) such that A7: P[ q9 ] and A8: ( q ^ r ) = ( q9 ^ r9 ) by A1,A3,A5,A6;
now
assume ( len q ) <= ( len q9 );
then (ex s being FinSequence st ( q ^ s ) = q9) by A8,FINSEQ_1:47;
then A9: q in T1() by TREES_1:21;
q in ( ( NAT ) * ) by FINSEQ_1:def 11;
hence contradiction by A1,A3,A5,A9;
end;
then consider s being FinSequence such that A10: ( q9 ^ s ) = q by A8,FINSEQ_1:47;
reconsider s as (FinSequence of ( NAT )) by A10,FINSEQ_1:36;
( q9 ^ r9 ) = ( q9 ^ ( s ^ r ) ) by A8,A10,FINSEQ_1:32;
then ( s ^ r ) = r9 by FINSEQ_1:33;
then (q in ( ( NAT ) * ) & s is (Element of T2())) by FINSEQ_1:def 11,TREES_1:21;
hence thesis by A1,A3,A5,A7,A10;
end;

let p being (FinSequence of ( NAT ));
let k being (Element of ( NAT ));
let n being (Element of ( NAT ));
assume that
A11: ( p ^ <* k *> ) in T
and
A12: n <= k;
A13:now
assume ( p ^ <* k *> ) in T1();
then A14: ( p ^ <* n *> ) in T1() by A12,TREES_1:def 3;
( p ^ <* n *> ) in ( ( NAT ) * ) by FINSEQ_1:def 11;
hence thesis by A1,A14;
end;
now
assume A15: (not ( p ^ <* k *> ) in T1());
then consider q being (Element of T1()),r being (Element of T2()) such that A16: P[ q ] and A17: ( p ^ <* k *> ) = ( q ^ r ) by A1,A11;
( q ^ ( {} ) ) = q by FINSEQ_1:34;
then r <> ( {} ) by A15,A17;
then consider w being FinSequence,z such that A18: r = ( w ^ <* z *> ) by FINSEQ_1:46;
reconsider w as (FinSequence of ( NAT )) by A18,FINSEQ_1:36;
A19: ( p ^ <* k *> ) = ( ( q ^ w ) ^ <* z *> ) by A17,A18,FINSEQ_1:32;
A20: (( ( p ^ <* k *> ) . ( ( len p ) + 1 ) ) = k & ( ( ( q ^ w ) ^ <* z *> ) . ( ( len ( q ^ w ) ) + 1 ) ) = z) by FINSEQ_1:42;
A21: (( len <* k *> ) = 1 & ( len <* z *> ) = 1) by FINSEQ_1:40;
A22: (( len ( p ^ <* k *> ) ) = ( ( len p ) + ( len <* k *> ) ) & ( len ( ( q ^ w ) ^ <* z *> ) ) = ( ( len ( q ^ w ) ) + ( len <* z *> ) )) by FINSEQ_1:22;
then A23: p = ( q ^ w ) by A19,A20,A21,FINSEQ_1:33;
A24: ( w ^ <* n *> ) in T2() by A12,A18,A19,A20,A21,A22,TREES_1:def 3;
A25: ( p ^ <* n *> ) = ( q ^ ( w ^ <* n *> ) ) by A23,FINSEQ_1:32;
( p ^ <* n *> ) in ( ( NAT ) * ) by FINSEQ_1:def 11;
hence thesis by A1,A16,A24,A25;
end;
hence thesis by A13;
end;
then reconsider T as Tree;
take T;
let p;
((p is (Element of T1()) or (ex q being (Element of T1()) st (ex r being (Element of T2()) st (P[ q ] & p = ( q ^ r ))))) implies p in ( ( NAT ) * )) by FINSEQ_1:def 11;
hence thesis by A1;
end;
