environ
vocabularies NUMBERS,TREES_2,SUBSET_1,RELAT_1,FINSEQ_1,FUNCT_1,TARSKI,TREES_1,XXREAL_0,ARYTM_3,CARD_1,FUNCOP_1,XBOOLE_0,TREES_3,ZFMISC_1,NAT_1,FINSEQ_2,TREES_A,ORDINAL4,FUNCT_6,FINSEQ_4,MCART_1,PARTFUN1,TREES_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,RELAT_1,FUNCT_1,DOMAIN_1,FUNCOP_1,FUNCT_3,FINSEQ_1,FINSEQ_2,TREES_1,TREES_2,FUNCT_6,TREES_3,XXREAL_0,CKB1,CKB2,CKB6,CKB7,CKB12,CKB16,CKB17,CKB18,CKB36,CKB37,CKB38;
definitions TARSKI,FINSEQ_1,TREES_1,TREES_2,FINSEQ_2,FUNCT_6,CKB2,CKB6,CKB12,CKB16,CKB17,CKB18;
theorems TARSKI,ZFMISC_1,FINSEQ_1,MCART_1,NAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,FUNCT_6,FINSEQ_2,FINSEQ_3,TREES_1,TREES_2,TREES_3,RELAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,FUNCT_5,ORDINAL1,CARD_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31;
schemes CLASSES1,FINSEQ_1,XBOOLE_0,CKB40;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,XREAL_0,FINSEQ_1,TREES_2,TREES_3,CARD_1,FINSEQ_2,FUNCOP_1,RELSET_1,TREES_1,CKB32,CKB33,CKB34,CKB35,CKB39;
constructors BINOP_1,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FUNCT_5,FINSEQ_2,FUNCT_6,TREES_3,RELSET_1,CKB6,CKB7,CKB12,CKB16,CKB17,CKB18,CKB36,CKB37,CKB38;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve z for set;
reserve p for FinSequence;
reserve q for FinSequence;
reserve r for FinSequence;
definition
let T being DecoratedTree;
let T9 being DecoratedTree;
let x being set;
func (T,x) <- T9 -> DecoratedTree means 
:Def7: (((for p holds (p in ( dom it ) iff (p in ( dom T ) or (ex q being (Node of T) st (ex r being (Node of T9) st ((q in ( Leaves ( dom T ) ) & ( T . q ) = x) & p = ( q ^ r ))))))) & (for p being (Node of T) holds (((not p in ( Leaves ( dom T ) )) or ( T . p ) <> x) implies ( it . p ) = ( T . p )))) & (for p being (Node of T) holds (for q being (Node of T9) holds ((p in ( Leaves ( dom T ) ) & ( T . p ) = x) implies ( it . ( p ^ q ) ) = ( T9 . q )))));
existence
proof
defpred X[ set ]
 means
($1 in ( Leaves ( dom T ) ) & ( T . $1 ) = x);
consider W being Tree such that A1: (p in W iff (p in ( dom T ) or (ex q being (Node of T) st (ex r being (Node of T9) st (X[ q ] & p = ( q ^ r )))))) from CKB40:sch 1;
defpred X[ set,set ]
 means
((($1 is (Node of T) & ((not $1 in ( Leaves ( dom T ) )) or ( T . $1 ) <> x)) & $2 = ( T . $1 )) or (ex p being (Node of T) st (ex q being (Node of T9) st ((($1 = ( p ^ q ) & p in ( Leaves ( dom T ) )) & ( T . p ) = x) & $2 = ( T9 . q )))));
A2: (for z holds (z in W implies (ex y st X[ z,y ])))
proof
let z;
assume z in W;
then reconsider w = z as (Element of W);
A3:now
given q being (Node of T),r being (Node of T9) such that
A4: ((q in ( Leaves ( dom T ) ) & ( T . q ) = x) & w = ( q ^ r ));

take y = ( T9 . r );
take q;
take r;
thus (((z = ( q ^ r ) & q in ( Leaves ( dom T ) )) & ( T . q ) = x) & y = ( T9 . r )) by A4;
end;
now
assume A5: (not (ex q being (Node of T) st (ex r being (Node of T9) st ((q in ( Leaves ( dom T ) ) & ( T . q ) = x) & w = ( q ^ r )))));
take y = ( T . z );
thus z is (Node of T) by A1,A5;
reconsider w as (Node of T) by A1,A5;
reconsider e = ( {} ) as (Node of T9) by TREES_1:22;
( w ^ e ) = w by FINSEQ_1:34;
hence (((not z in ( Leaves ( dom T ) )) or ( T . z ) <> x) & y = ( T . z )) by A5;
end;
hence thesis by A3;
end;
consider f being Function such that A6: (( dom f ) = W & (for z holds (z in W implies X[ z,( f . z ) ]))) from CLASSES1:sch 1(A2);
reconsider f as DecoratedTree by A6,TREES_2:def 8;
take f;
thus (p in ( dom f ) iff (p in ( dom T ) or (ex q being (Node of T) st (ex r being (Node of T9) st ((q in ( Leaves ( dom T ) ) & ( T . q ) = x) & p = ( q ^ r )))))) by A1,A6;
thus (for p being (Node of T) holds (((not p in ( Leaves ( dom T ) )) or ( T . p ) <> x) implies ( f . p ) = ( T . p )))
proof
let p being (Node of T);
assume A7: ((not p in ( Leaves ( dom T ) )) or ( T . p ) <> x);
A8: p in W by A1;
now
given p9 being (Node of T),q being (Node of T9) such that
A9: p = ( p9 ^ q )
and
A10: p9 in ( Leaves ( dom T ) )
and
A11: ( T . p9 ) = x
and
( f . p ) = ( T9 . q );

(p9 is_a_prefix_of p & (not p9 is_a_proper_prefix_of p)) by A9,A10,TREES_1:1,TREES_1:def 5;
hence contradiction by A7,A10,A11,XBOOLE_0:def 8;
end;
hence thesis by A6,A8;
end;

let p being (Node of T);
let q being (Node of T9);
assume that
A12: p in ( Leaves ( dom T ) )
and
A13: ( T . p ) = x;
A14: ( p ^ q ) in W by A1,A12,A13;
now
assume ( p ^ q ) is (Node of T);
then A15: (not p is_a_proper_prefix_of ( p ^ q )) by A12,TREES_1:def 5;
p is_a_prefix_of ( p ^ q ) by TREES_1:1;
hence p = ( p ^ q ) by A15,XBOOLE_0:def 8;
end;
then consider p9 being (Node of T),q9 being (Node of T9) such that A16: ( p ^ q ) = ( p9 ^ q9 ) and A17: p9 in ( Leaves ( dom T ) ) and ( T . p9 ) = x and A18: ( f . ( p ^ q ) ) = ( T9 . q9 ) by A6,A12,A13,A14;
now
let p being (FinSequence of ( NAT ));
let p9 being (FinSequence of ( NAT ));
let q being (FinSequence of ( NAT ));
let q9 being (FinSequence of ( NAT ));
let T being Tree;
assume that
A19: ( p ^ q ) = ( p9 ^ q9 )
and
A20: (p in ( Leaves T ) & p9 in ( Leaves T ))
and
A21: p <> p9;
now
assume ( len p ) <= ( len p9 );
then (ex r st ( p ^ r ) = p9) by A19,FINSEQ_1:47;
then p is_a_prefix_of p9 by TREES_1:1;
then p is_a_proper_prefix_of p9 by A21,XBOOLE_0:def 8;
hence contradiction by A20,TREES_1:def 5;
end;
then (ex r st ( p9 ^ r ) = p) by A19,FINSEQ_1:47;
then p9 is_a_prefix_of p by TREES_1:1;
then p9 is_a_proper_prefix_of p by A21,XBOOLE_0:def 8;
hence contradiction by A20,TREES_1:def 5;
end;
then p = p9 by A12,A16,A17;
hence thesis by A16,A18,FINSEQ_1:33;
end;
uniqueness
proof
let T1 being DecoratedTree;
let T2 being DecoratedTree;
assume that
A22: (p in ( dom T1 ) iff (p in ( dom T ) or (ex q being (Node of T) st (ex r being (Node of T9) st ((q in ( Leaves ( dom T ) ) & ( T . q ) = x) & p = ( q ^ r ))))))
and
A23: (for p being (Node of T) holds (((not p in ( Leaves ( dom T ) )) or ( T . p ) <> x) implies ( T1 . p ) = ( T . p )))
and
A24: (for p being (Node of T) holds (for q being (Node of T9) holds ((p in ( Leaves ( dom T ) ) & ( T . p ) = x) implies ( T1 . ( p ^ q ) ) = ( T9 . q ))))
and
A25: (p in ( dom T2 ) iff (p in ( dom T ) or (ex q being (Node of T) st (ex r being (Node of T9) st ((q in ( Leaves ( dom T ) ) & ( T . q ) = x) & p = ( q ^ r ))))))
and
A26: (for p being (Node of T) holds (((not p in ( Leaves ( dom T ) )) or ( T . p ) <> x) implies ( T2 . p ) = ( T . p )))
and
A27: (for p being (Node of T) holds (for q being (Node of T9) holds ((p in ( Leaves ( dom T ) ) & ( T . p ) = x) implies ( T2 . ( p ^ q ) ) = ( T9 . q ))));
A28: ( dom T1 ) = ( dom T2 )
proof
let p being (FinSequence of ( NAT ));
(p in ( dom T1 ) iff (p in ( dom T ) or (ex q being (Node of T) st (ex r being (Node of T9) st ((q in ( Leaves ( dom T ) ) & ( T . q ) = x) & p = ( q ^ r )))))) by A22;
hence thesis by A25;
end;
reconsider p9 = ( {} ) as (Node of T9) by TREES_1:22;
now
let y;
assume y in ( dom T1 );
then reconsider p = y as (Node of T1);
per cases  by A22;
suppose p in ( dom T );

then reconsider p as (Node of T);
hereby
per cases ;
suppose A29: (p in ( Leaves ( dom T ) ) & ( T . p ) = x);

then A30: ( T1 . ( p ^ p9 ) ) = ( T9 . p9 ) by A24;
( p ^ p9 ) = p by FINSEQ_1:34;
hence ( T1 . y ) = ( T2 . y ) by A27,A29,A30;
end;
suppose A31: ((not p in ( Leaves ( dom T ) )) or ( T . p ) <> x);

then ( T1 . p ) = ( T . p ) by A23;
hence ( T1 . y ) = ( T2 . y ) by A26,A31;
end;
end;
end;
suppose (ex q being (Node of T) st (ex r being (Node of T9) st ((q in ( Leaves ( dom T ) ) & ( T . q ) = x) & p = ( q ^ r ))));

then consider q being (Node of T),r being (Node of T9) such that A32: ((q in ( Leaves ( dom T ) ) & ( T . q ) = x) & p = ( q ^ r ));
thus ( T1 . y ) = ( T9 . r ) by A24,A32
.= ( T2 . y ) by A27,A32;
end;
end;
hence thesis by A28,FUNCT_1:2;
end;
end;
