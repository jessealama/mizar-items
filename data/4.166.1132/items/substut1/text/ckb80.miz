environ
vocabularies NUMBERS,SUBSET_1,QC_LANG1,CQC_LANG,FINSEQ_1,PARTFUN1,XBOOLE_0,FUNCT_1,RELAT_1,XXREAL_0,NAT_1,TARSKI,FINSET_1,ZFMISC_1,ZF_LANG,CLASSES2,CARD_1,BVFUNC_2,ORDINAL4,REALSET1,XBOOLEAN,MARGREL1,MCART_1,ARYTM_3,SUBSTUT1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,CARD_1,NUMBERS,FINSEQ_1,NAT_1,QC_LANG1,QC_LANG3,PARTFUN1,SEQ_4,CQC_LANG,FINSET_1,RELSET_1,FUNCT_2,DOMAIN_1,MCART_1,XXREAL_0,CKB1,CKB3,CKB5,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB35,CKB38,CKB40,CKB41,CKB42,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB53,CKB56,CKB57,CKB58,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
definitions TARSKI,FUNCT_1,QC_LANG1,QC_LANG3,CKB1,CKB5,CKB7,CKB8,CKB9,CKB12,CKB13,CKB14,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB35,CKB38,CKB40,CKB44,CKB45,CKB48,CKB49,CKB50,CKB53,CKB56,CKB57,CKB58,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
theorems TARSKI,FINSEQ_1,FUNCT_1,MCART_1,CQC_SIM1,XBOOLE_0,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,XBOOLE_1,CARD_2,CARD_3,FUNCT_2,PARTFUN1,RELSET_1,NAT_1,QC_LANG2,FINSEQ_3,CARD_1,XXREAL_0,ORDINAL1,CKB1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB43,CKB44,CKB45,CKB48,CKB49,CKB50,CKB53,CKB54,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB77,CKB78,CKB79;
schemes FUNCT_1,FUNCT_2,QC_LANG1,QC_LANG3,NAT_1,XBOOLE_0,FRAENKEL,FINSEQ_1,CLASSES1,CKB52,CKB76;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,PARTFUN1,FINSET_1,MEMBERED,FINSEQ_1,RFINSEQ,QC_LANG1,CQC_LANG,XXREAL_0,CARD_1,CKB2,CKB4,CKB11,CKB21,CKB31,CKB37,CKB55,CKB66;
constructors PARTFUN1,DOMAIN_1,XXREAL_0,NAT_1,SEQ_4,QC_LANG3,CQC_SIM1,RELSET_1,CKB1,CKB5,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB35,CKB38,CKB40,CKB41,CKB42,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB53,CKB56,CKB57,CKB58,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
requirements REAL,NUMERALS,SUBSET,BOOLE;
begin
reserve k for (Element of ( NAT ));
reserve P for (QC-pred_symbol of k);
reserve ll for (CQC-variable_list of k);
reserve e for (Element of ( vSUB ));
reserve S for (Element of ( QC-Sub-WFF ));
reserve S9 for (Element of ( QC-Sub-WFF ));
reserve S1 for (Element of ( QC-Sub-WFF ));
reserve S2 for (Element of ( QC-Sub-WFF ));
reserve B for (Element of [: ( QC-Sub-WFF ),( bound_QC-variables ) :]);
reserve SQ for (second_Q_comp of B);
theorem
Th25: (((((S is  Sub_VERUM implies ( ( ( @ ( S `1 ) ) . 1 ) `1 ) = ( 0 )) & (S is  Sub_atomic implies (ex k being (Element of ( NAT )) st ( ( @ ( S `1 ) ) . 1 ) is (QC-pred_symbol of k)))) & (S is  Sub_negative implies ( ( ( @ ( S `1 ) ) . 1 ) `1 ) = 1)) & (S is  Sub_conjunctive implies ( ( ( @ ( S `1 ) ) . 1 ) `1 ) = 2)) & (S is  Sub_universal implies ( ( ( @ ( S `1 ) ) . 1 ) `1 ) = 3))
proof
thus (S is  Sub_VERUM implies ( ( ( @ ( S `1 ) ) . 1 ) `1 ) = ( 0 ))
proof
assume S is  Sub_VERUM;
then (ex e st S = [ ( VERUM ),e ]) by CKB40:def 1;
then ( S `1 ) = ( VERUM ) by MCART_1:7;
hence ( ( ( @ ( S `1 ) ) . 1 ) `1 ) = ( [ ( 0 ),( 0 ) ] `1 ) by FINSEQ_1:def 8
.= ( 0 ) by MCART_1:7;
end;

thus (S is  Sub_atomic implies (ex k being (Element of ( NAT )) st ( ( @ ( S `1 ) ) . 1 ) is (QC-pred_symbol of k)))
proof
assume S is  Sub_atomic;
then consider k being (Element of ( NAT )),P being (QC-pred_symbol of k),ll being (QC-variable_list of k),e being (Element of ( vSUB )) such that A1: S = ( Sub_P (P,ll,e) ) by CKB53:def 1;
S = [ ( P ! ll ),e ] by A1,CKB39:1;
then ( S `1 ) = ( P ! ll ) by MCART_1:7;
then ( @ ( S `1 ) ) = ( <* P *> ^ ll ) by QC_LANG1:6;
then ( ( @ ( S `1 ) ) . 1 ) = P by FINSEQ_1:41;
hence thesis;
end;

thus (S is  Sub_negative implies ( ( ( @ ( S `1 ) ) . 1 ) `1 ) = 1)
proof
assume S is  Sub_negative;
then consider S9 such that A2: S = ( Sub_not S9 ) by CKB56:def 1;
( S `1 ) = ( 'not' ( S9 `1 ) ) by A2,MCART_1:7;
then ( ( @ ( S `1 ) ) . 1 ) = [ 1,( 0 ) ] by FINSEQ_1:41;
hence thesis by MCART_1:7;
end;

thus (S is  Sub_conjunctive implies ( ( ( @ ( S `1 ) ) . 1 ) `1 ) = 2)
proof
assume S is  Sub_conjunctive;
then consider S1,S2 such that A3: (S = ( Sub_& (S1,S2) ) & ( S1 `2 ) = ( S2 `2 )) by CKB57:def 1;
S = [ ( ( S1 `1 ) '&' ( S2 `1 ) ),( S1 `2 ) ] by A3,CKB45:def 1;
then ( S `1 ) = ( ( S1 `1 ) '&' ( S2 `1 ) ) by MCART_1:7;
then ( @ ( S `1 ) ) = ( <* [ 2,( 0 ) ] *> ^ ( ( @ ( S1 `1 ) ) ^ ( @ ( S2 `1 ) ) ) ) by FINSEQ_1:32;
then ( ( @ ( S `1 ) ) . 1 ) = [ 2,( 0 ) ] by FINSEQ_1:41;
hence thesis by MCART_1:7;
end;

thus (S is  Sub_universal implies ( ( ( @ ( S `1 ) ) . 1 ) `1 ) = 3)
proof
assume S is  Sub_universal;
then consider B,SQ such that A4: (S = ( Sub_All (B,SQ) ) & B is  quantifiable) by CKB58:def 1;
S = [ ( All (( B `2 ),( ( B `1 ) `1 )) ),SQ ] by A4,CKB50:def 1;
then ( S `1 ) = ( All (( B `2 ),( ( B `1 ) `1 )) ) by MCART_1:7;
then ( @ ( S `1 ) ) = ( <* [ 3,( 0 ) ] *> ^ ( <* ( B `2 ) *> ^ ( @ ( ( B `1 ) `1 ) ) ) ) by FINSEQ_1:32;
then ( ( @ ( S `1 ) ) . 1 ) = [ 3,( 0 ) ] by FINSEQ_1:41;
hence thesis by MCART_1:7;
end;

end;
