environ
vocabularies NUMBERS,SUBSET_1,QC_LANG1,CQC_LANG,FINSEQ_1,PARTFUN1,XBOOLE_0,FUNCT_1,RELAT_1,XXREAL_0,NAT_1,TARSKI,FINSET_1,ZFMISC_1,ZF_LANG,CLASSES2,CARD_1,BVFUNC_2,ORDINAL4,REALSET1,XBOOLEAN,MARGREL1,MCART_1,ARYTM_3,SUBSTUT1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,CARD_1,NUMBERS,FINSEQ_1,NAT_1,QC_LANG1,QC_LANG3,PARTFUN1,SEQ_4,CQC_LANG,FINSET_1,RELSET_1,FUNCT_2,DOMAIN_1,MCART_1,XXREAL_0,CKB1,CKB3,CKB5,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB35,CKB38,CKB40,CKB41,CKB42,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB53,CKB56,CKB57,CKB58,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
definitions TARSKI,FUNCT_1,QC_LANG1,QC_LANG3,CKB1,CKB5,CKB7,CKB8,CKB9,CKB12,CKB13,CKB14,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB35,CKB38,CKB40,CKB44,CKB45,CKB48,CKB49,CKB50,CKB53,CKB56,CKB57,CKB58,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
theorems TARSKI,FINSEQ_1,FUNCT_1,MCART_1,CQC_SIM1,XBOOLE_0,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,XBOOLE_1,CARD_2,CARD_3,FUNCT_2,PARTFUN1,RELSET_1,NAT_1,QC_LANG2,FINSEQ_3,CARD_1,XXREAL_0,ORDINAL1,CKB1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB43,CKB44,CKB45,CKB48,CKB49,CKB50,CKB53,CKB54,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82;
schemes FUNCT_1,FUNCT_2,QC_LANG1,QC_LANG3,NAT_1,XBOOLE_0,FRAENKEL,FINSEQ_1,CLASSES1,CKB52,CKB76;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,PARTFUN1,FINSET_1,MEMBERED,FINSEQ_1,RFINSEQ,QC_LANG1,CQC_LANG,XXREAL_0,CARD_1,CKB2,CKB4,CKB11,CKB21,CKB31,CKB37,CKB55,CKB66;
constructors PARTFUN1,DOMAIN_1,XXREAL_0,NAT_1,SEQ_4,QC_LANG3,CQC_SIM1,RELSET_1,CKB1,CKB5,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB35,CKB38,CKB40,CKB41,CKB42,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB53,CKB56,CKB57,CKB58,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
requirements REAL,NUMERALS,SUBSET,BOOLE;
begin
scheme SubFuncEx { D() -> non empty set,V() -> (Element of D()),A((Element of ( QC-Sub-WFF ))) -> (Element of D()),N((Element of D())) -> (Element of D()),C((Element of D()),(Element of D())) -> (Element of D()),R((Element of ( QC-Sub-WFF )),(Element of D())) -> (Element of D()) } : (ex F being (Function of ( QC-Sub-WFF ),D()) st (for S being (Element of ( QC-Sub-WFF )) holds (for d1,d2 being (Element of D()) holds (((((S is  Sub_VERUM implies ( F . S ) = V()) & (S is  Sub_atomic implies ( F . S ) = A(S))) & ((S is  Sub_negative & d1 = ( F . ( Sub_the_argument_of S ) )) implies ( F . S ) = N(d1))) & (((S is  Sub_conjunctive & d1 = ( F . ( Sub_the_left_argument_of S ) )) & d2 = ( F . ( Sub_the_right_argument_of S ) )) implies ( F . S ) = C(d1,d2))) & ((S is  Sub_universal & d1 = ( F . ( Sub_the_scope_of S ) )) implies ( F . S ) = R(S,d1))))))
proof
defpred Pfn[ (Function of ( QC-Sub-WFF ),D()),(Element of ( NAT )) ]
 means
(for S being (Element of ( QC-Sub-WFF )) holds (( len ( @ ( S `1 ) ) ) <= $2 implies (((((S is  Sub_VERUM implies ( $1 . S ) = V()) & (S is  Sub_atomic implies ( $1 . S ) = A(S))) & (S is  Sub_negative implies ( $1 . S ) = N(( $1 . ( Sub_the_argument_of S ) )))) & (S is  Sub_conjunctive implies ( $1 . S ) = C(( $1 . ( Sub_the_left_argument_of S ) ),( $1 . ( Sub_the_right_argument_of S ) )))) & (S is  Sub_universal implies ( $1 . S ) = R(S,( $1 . ( Sub_the_scope_of S ) ))))));
defpred Pfgp[ (Element of D()),(Function of ( QC-Sub-WFF ),D()),(Element of ( QC-Sub-WFF )) ]
 means
((((($3 is  Sub_VERUM implies $1 = V()) & ($3 is  Sub_atomic implies $1 = A($3))) & ($3 is  Sub_negative implies $1 = N(( $2 . ( Sub_the_argument_of $3 ) )))) & ($3 is  Sub_conjunctive implies $1 = C(( $2 . ( Sub_the_left_argument_of $3 ) ),( $2 . ( Sub_the_right_argument_of $3 ) )))) & ($3 is  Sub_universal implies $1 = R($3,( $2 . ( Sub_the_scope_of $3 ) ))));
defpred S[ (Element of ( NAT )) ]
 means
(ex F being (Function of ( QC-Sub-WFF ),D()) st Pfn[ F,$1 ]);
defpred Qfn[ set,set ]
 means
(ex S being (Element of ( QC-Sub-WFF )) st (S = $1 & (for g being (Function of ( QC-Sub-WFF ),D()) holds (Pfn[ g,(( len ( @ ( S `1 ) ) ) qua (Element of ( NAT ))) ] implies $2 = ( g . S )))));
A1: (for n being (Element of ( NAT )) holds (S[ n ] implies S[ ( n + 1 ) ]))
proof
let n being (Element of ( NAT ));
given F being (Function of ( QC-Sub-WFF ),D()) such that
A2: Pfn[ F,n ];

defpred R[ (Element of ( QC-Sub-WFF )),(Element of D()) ]
 means
((( len ( @ ( $1 `1 ) ) ) <> ( n + 1 ) implies $2 = ( F . $1 )) & (( len ( @ ( $1 `1 ) ) ) = ( n + 1 ) implies Pfgp[ $2,F,$1 ]));
A3: (for S being (Element of ( QC-Sub-WFF )) holds (ex y being (Element of D()) st R[ S,y ]))
proof
let S being (Element of ( QC-Sub-WFF ));
now
per cases  by CKB59:1;
case ( len ( @ ( S `1 ) ) ) <> ( n + 1 );
take y = ( F . S );
thus y = ( F . S );
end;
case A4: (( len ( @ ( S `1 ) ) ) = ( n + 1 ) & S is  Sub_VERUM);
take y = V();
thus Pfgp[ y,F,S ] by A4,CKB82:1;
end;
case A5: (( len ( @ ( S `1 ) ) ) = ( n + 1 ) & S is  Sub_atomic);
take y = A(S);
thus Pfgp[ y,F,S ] by A5,CKB82:1;
end;
case A6: (( len ( @ ( S `1 ) ) ) = ( n + 1 ) & S is  Sub_negative);
take y = N(( F . ( Sub_the_argument_of S ) ));
thus Pfgp[ y,F,S ] by A6,CKB82:1;
end;
case A7: (( len ( @ ( S `1 ) ) ) = ( n + 1 ) & S is  Sub_conjunctive);
take y = C(( F . ( Sub_the_left_argument_of S ) ),( F . ( Sub_the_right_argument_of S ) ));
thus Pfgp[ y,F,S ] by A7,CKB82:1;
end;
case A8: (( len ( @ ( S `1 ) ) ) = ( n + 1 ) & S is  Sub_universal);
take y = R(S,( F . ( Sub_the_scope_of S ) ));
thus Pfgp[ y,F,S ] by A8,CKB82:1;
end;
end;
hence thesis;
end;
consider G being (Function of ( QC-Sub-WFF ),D()) such that A9: (for S being (Element of ( QC-Sub-WFF )) holds R[ S,( G . S ) ]) from FUNCT_2:sch 3(A3);
take H = G;
thus Pfn[ H,( n + 1 ) ]
proof
let S being (Element of ( QC-Sub-WFF ));
assume that
A10: ( len ( @ ( S `1 ) ) ) <= ( n + 1 );
thus (S is  Sub_VERUM implies ( H . S ) = V())
proof
now
per cases ;
suppose ( len ( @ ( S `1 ) ) ) <> ( n + 1 );

then (( len ( @ ( S `1 ) ) ) <= n & ( H . S ) = ( F . S )) by A9,A10,NAT_1:8;
hence thesis by A2;
end;
suppose ( len ( @ ( S `1 ) ) ) = ( n + 1 );

hence thesis by A9;
end;
end;
hence thesis;
end;

thus (S is  Sub_atomic implies ( H . S ) = A(S))
proof
now
per cases ;
suppose ( len ( @ ( S `1 ) ) ) <> ( n + 1 );

then (( len ( @ ( S `1 ) ) ) <= n & ( H . S ) = ( F . S )) by A9,A10,NAT_1:8;
hence thesis by A2;
end;
suppose ( len ( @ ( S `1 ) ) ) = ( n + 1 );

hence thesis by A9;
end;
end;
hence thesis;
end;

thus (S is  Sub_negative implies ( H . S ) = N(( H . ( Sub_the_argument_of S ) )))
proof
assume A11: S is  Sub_negative;
then ( len ( @ ( ( Sub_the_argument_of S ) `1 ) ) ) <> ( n + 1 ) by A10,CKB77:1;
then A12: ( H . ( Sub_the_argument_of S ) ) = ( F . ( Sub_the_argument_of S ) ) by A9;
now
per cases ;
suppose ( len ( @ ( S `1 ) ) ) <> ( n + 1 );

then (( len ( @ ( S `1 ) ) ) <= n & ( H . S ) = ( F . S )) by A9,A10,NAT_1:8;
hence thesis by A2,A11,A12;
end;
suppose ( len ( @ ( S `1 ) ) ) = ( n + 1 );

hence thesis by A9,A11,A12;
end;
end;
hence thesis;
end;

thus (S is  Sub_conjunctive implies ( H . S ) = C(( H . ( Sub_the_left_argument_of S ) ),( H . ( Sub_the_right_argument_of S ) )))
proof
assume A13: S is  Sub_conjunctive;
then ( len ( @ ( ( Sub_the_right_argument_of S ) `1 ) ) ) <> ( n + 1 ) by A10,CKB78:1;
then A14: ( H . ( Sub_the_right_argument_of S ) ) = ( F . ( Sub_the_right_argument_of S ) ) by A9;
( len ( @ ( ( Sub_the_left_argument_of S ) `1 ) ) ) <> ( n + 1 ) by A10,A13,CKB78:1;
then A15: ( H . ( Sub_the_left_argument_of S ) ) = ( F . ( Sub_the_left_argument_of S ) ) by A9;
now
per cases ;
suppose ( len ( @ ( S `1 ) ) ) <> ( n + 1 );

then (( len ( @ ( S `1 ) ) ) <= n & ( H . S ) = ( F . S )) by A9,A10,NAT_1:8;
hence thesis by A2,A13,A15,A14;
end;
suppose ( len ( @ ( S `1 ) ) ) = ( n + 1 );

hence thesis by A9,A13,A15,A14;
end;
end;
hence thesis;
end;

thus (S is  Sub_universal implies ( H . S ) = R(S,( H . ( Sub_the_scope_of S ) )))
proof
assume A16: S is  Sub_universal;
then ( len ( @ ( ( Sub_the_scope_of S ) `1 ) ) ) <> ( n + 1 ) by A10,CKB79:1;
then A17: ( H . ( Sub_the_scope_of S ) ) = ( F . ( Sub_the_scope_of S ) ) by A9;
now
per cases ;
suppose ( len ( @ ( S `1 ) ) ) <> ( n + 1 );

then (( len ( @ ( S `1 ) ) ) <= n & ( H . S ) = ( F . S )) by A9,A10,NAT_1:8;
hence thesis by A2,A16,A17;
end;
suppose ( len ( @ ( S `1 ) ) ) = ( n + 1 );

hence thesis by A9,A16,A17;
end;
end;
hence thesis;
end;

end;

end;
A18: S[ ( 0 ) ]
proof
set F = the (Function of ( QC-Sub-WFF ),D());
take F;
let S being (Element of ( QC-Sub-WFF ));
assume ( len ( @ ( S `1 ) ) ) <= ( 0 );
hence thesis by QC_LANG1:8;
end;
A19: (for n being (Element of ( NAT )) holds S[ n ]) from NAT_1:sch 1(A18,A1);
A20: (for x being set holds (x in ( QC-Sub-WFF ) implies (ex y being set st Qfn[ x,y ])))
proof
let x being set;
assume x in ( QC-Sub-WFF );
then reconsider x9 = x as (Element of ( QC-Sub-WFF ));
consider F being (Function of ( QC-Sub-WFF ),D()) such that A21: Pfn[ F,(( len ( @ ( x9 `1 ) ) ) qua (Element of ( NAT ))) ] by A19;
take ( F . x );
take x9;
thus x9 = x;
let G being (Function of ( QC-Sub-WFF ),D());
assume that
A22: Pfn[ G,(( len ( @ ( x9 `1 ) ) ) qua (Element of ( NAT ))) ];
defpred Pro[ (Element of ( QC-Sub-WFF )) ]
 means
(( len ( @ ( $1 `1 ) ) ) <= ( len ( @ ( x9 `1 ) ) ) implies ( F . $1 ) = ( G . $1 ));
A23:now
let S being (Element of ( QC-Sub-WFF ));
thus (S is  Sub_atomic implies Pro[ S ])
proof
assume A24: (S is  Sub_atomic & ( len ( @ ( S `1 ) ) ) <= ( len ( @ ( x9 `1 ) ) ));
hence ( F . S ) = A(S) by A21
.= ( G . S ) by A22,A24;
end;

thus (S is  Sub_VERUM implies Pro[ S ])
proof
assume A25: (S is  Sub_VERUM & ( len ( @ ( S `1 ) ) ) <= ( len ( @ ( x9 `1 ) ) ));
hence ( F . S ) = V() by A21
.= ( G . S ) by A22,A25;
end;

thus ((S is  Sub_negative & Pro[ ( Sub_the_argument_of S ) ]) implies Pro[ S ])
proof
assume that
A26: S is  Sub_negative
and
A27: Pro[ ( Sub_the_argument_of S ) ]
and
A28: ( len ( @ ( S `1 ) ) ) <= ( len ( @ ( x9 `1 ) ) );
( len ( @ ( ( Sub_the_argument_of S ) `1 ) ) ) < ( len ( @ ( S `1 ) ) ) by A26,CKB77:1;
hence ( F . S ) = N(( G . ( Sub_the_argument_of S ) )) by A21,A26,A27,A28,XXREAL_0:2
.= ( G . S ) by A22,A26,A28;
end;

thus (((S is  Sub_conjunctive & Pro[ ( Sub_the_left_argument_of S ) ]) & Pro[ ( Sub_the_right_argument_of S ) ]) implies Pro[ S ])
proof
assume that
A29: S is  Sub_conjunctive
and
A30: (Pro[ ( Sub_the_left_argument_of S ) ] & Pro[ ( Sub_the_right_argument_of S ) ])
and
A31: ( len ( @ ( S `1 ) ) ) <= ( len ( @ ( x9 `1 ) ) );
(( len ( @ ( ( Sub_the_left_argument_of S ) `1 ) ) ) < ( len ( @ ( S `1 ) ) ) & ( len ( @ ( ( Sub_the_right_argument_of S ) `1 ) ) ) < ( len ( @ ( S `1 ) ) )) by A29,CKB78:1;
hence ( F . S ) = C(( G . ( Sub_the_left_argument_of S ) ),( G . ( Sub_the_right_argument_of S ) )) by A21,A29,A30,A31,XXREAL_0:2
.= ( G . S ) by A22,A29,A31;
end;

thus ((S is  Sub_universal & Pro[ ( Sub_the_scope_of S ) ]) implies Pro[ S ])
proof
assume that
A32: S is  Sub_universal
and
A33: Pro[ ( Sub_the_scope_of S ) ]
and
A34: ( len ( @ ( S `1 ) ) ) <= ( len ( @ ( x9 `1 ) ) );
( len ( @ ( ( Sub_the_scope_of S ) `1 ) ) ) < ( len ( @ ( S `1 ) ) ) by A32,CKB79:1;
hence ( F . S ) = R(S,( G . ( Sub_the_scope_of S ) )) by A21,A32,A33,A34,XXREAL_0:2
.= ( G . S ) by A22,A32,A34;
end;

end;
(for S being (Element of ( QC-Sub-WFF )) holds Pro[ S ]) from CKB76:sch 1(A23);
hence thesis;
end;
consider F being Function such that A35: ( dom F ) = ( QC-Sub-WFF ) and A36: (for x being set holds (x in ( QC-Sub-WFF ) implies Qfn[ x,( F . x ) ])) from CLASSES1:sch 1(A20);
( rng F ) c= D()
proof
let y being set;
assume y in ( rng F );
then consider x being set such that A37: (x in ( QC-Sub-WFF ) & y = ( F . x )) by A35,FUNCT_1:def 3;
consider S being (Element of ( QC-Sub-WFF )) such that S = x and A38: (for g being (Function of ( QC-Sub-WFF ),D()) holds (Pfn[ g,(( len ( @ ( S `1 ) ) ) qua (Element of ( NAT ))) ] implies y = ( g . S ))) by A36,A37;
consider G being (Function of ( QC-Sub-WFF ),D()) such that A39: Pfn[ G,(( len ( @ ( S `1 ) ) ) qua (Element of ( NAT ))) ] by A19;
y = ( G . S ) by A38,A39;
hence thesis;
end;
then reconsider F as (Function of ( QC-Sub-WFF ),D()) by A35,FUNCT_2:def 1,RELSET_1:4;
take F;
let S being (Element of ( QC-Sub-WFF ));
consider S1 being (Element of ( QC-Sub-WFF )) such that A40: S1 = S and A41: (for g being (Function of ( QC-Sub-WFF ),D()) holds (Pfn[ g,(( len ( @ ( S1 `1 ) ) ) qua (Element of ( NAT ))) ] implies ( F . S ) = ( g . S1 ))) by A36;
let d1 being (Element of D()),d2 being (Element of D());
consider G being (Function of ( QC-Sub-WFF ),D()) such that A42: Pfn[ G,(( len ( @ ( S1 `1 ) ) ) qua (Element of ( NAT ))) ] by A19;
set S9 = ( Sub_the_scope_of S );
A43: (ex S1 being (Element of ( QC-Sub-WFF )) st (S1 = S9 & (for g being (Function of ( QC-Sub-WFF ),D()) holds (Pfn[ g,(( len ( @ ( S1 `1 ) ) ) qua (Element of ( NAT ))) ] implies ( F . S9 ) = ( g . S1 ))))) by A36;
A44: ( F . S ) = ( G . S ) by A40,A41,A42;
hence (S is  Sub_VERUM implies ( F . S ) = V()) by A40,A42;
thus (S is  Sub_atomic implies ( F . S ) = A(S)) by A40,A42,A44;
A45: (for k being (Element of ( NAT )) holds (k < ( len ( @ ( S `1 ) ) ) implies Pfn[ G,k ]))
proof
let k being (Element of ( NAT ));
assume A46: k < ( len ( @ ( S `1 ) ) );
let S9 being (Element of ( QC-Sub-WFF ));
assume ( len ( @ ( S9 `1 ) ) ) <= k;
then ( len ( @ ( S9 `1 ) ) ) <= ( len ( @ ( S `1 ) ) ) by A46,XXREAL_0:2;
hence thesis by A40,A42;
end;
thus ((S is  Sub_negative & d1 = ( F . ( Sub_the_argument_of S ) )) implies ( F . S ) = N(d1))
proof
set S9 = ( Sub_the_argument_of S );
set k = ( len ( @ ( S9 `1 ) ) );
A47: (ex S1 being (Element of ( QC-Sub-WFF )) st (S1 = S9 & (for g being (Function of ( QC-Sub-WFF ),D()) holds (Pfn[ g,(( len ( @ ( S1 `1 ) ) ) qua (Element of ( NAT ))) ] implies ( F . S9 ) = ( g . S1 ))))) by A36;
assume A48: S is  Sub_negative;
then k < ( len ( @ ( S `1 ) ) ) by CKB77:1;
then Pfn[ G,(k qua (Element of ( NAT ))) ] by A45;
then ( F . S9 ) = ( G . S9 ) by A47;
hence thesis by A40,A42,A44,A48;
end;

thus (((S is  Sub_conjunctive & d1 = ( F . ( Sub_the_left_argument_of S ) )) & d2 = ( F . ( Sub_the_right_argument_of S ) )) implies ( F . S ) = C(d1,d2))
proof
set S99 = ( Sub_the_right_argument_of S );
set S9 = ( Sub_the_left_argument_of S );
set k9 = ( len ( @ ( S9 `1 ) ) );
set k99 = ( len ( @ ( S99 `1 ) ) );
A49: (ex S2 being (Element of ( QC-Sub-WFF )) st (S2 = S99 & (for g being (Function of ( QC-Sub-WFF ),D()) holds (Pfn[ g,(( len ( @ ( S2 `1 ) ) ) qua (Element of ( NAT ))) ] implies ( F . S99 ) = ( g . S2 ))))) by A36;
assume A50: S is  Sub_conjunctive;
then k9 < ( len ( @ ( S `1 ) ) ) by CKB78:1;
then A51: Pfn[ G,(k9 qua (Element of ( NAT ))) ] by A45;
k99 < ( len ( @ ( S `1 ) ) ) by A50,CKB78:1;
then Pfn[ G,(k99 qua (Element of ( NAT ))) ] by A45;
then A52: ( F . S99 ) = ( G . S99 ) by A49;
(ex S1 being (Element of ( QC-Sub-WFF )) st (S1 = S9 & (for g being (Function of ( QC-Sub-WFF ),D()) holds (Pfn[ g,(( len ( @ ( S1 `1 ) ) ) qua (Element of ( NAT ))) ] implies ( F . S9 ) = ( g . S1 ))))) by A36;
then ( F . S9 ) = ( G . S9 ) by A51;
hence thesis by A40,A42,A44,A50,A52;
end;

set k = ( len ( @ ( S9 `1 ) ) );
assume A53: S is  Sub_universal;
then k < ( len ( @ ( S `1 ) ) ) by CKB79:1;
then Pfn[ G,(k qua (Element of ( NAT ))) ] by A45;
then ( F . S9 ) = ( G . S9 ) by A43;
hence thesis by A40,A42,A44,A53;
end;
