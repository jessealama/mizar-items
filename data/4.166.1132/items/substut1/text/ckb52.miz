environ
vocabularies NUMBERS,SUBSET_1,QC_LANG1,CQC_LANG,FINSEQ_1,PARTFUN1,XBOOLE_0,FUNCT_1,RELAT_1,XXREAL_0,NAT_1,TARSKI,FINSET_1,ZFMISC_1,ZF_LANG,CLASSES2,CARD_1,BVFUNC_2,ORDINAL4,REALSET1,XBOOLEAN,MARGREL1,MCART_1,ARYTM_3,SUBSTUT1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,CARD_1,NUMBERS,FINSEQ_1,NAT_1,QC_LANG1,QC_LANG3,PARTFUN1,SEQ_4,CQC_LANG,FINSET_1,RELSET_1,FUNCT_2,DOMAIN_1,MCART_1,XXREAL_0,CKB1,CKB3,CKB5,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB35,CKB38,CKB40,CKB41,CKB42,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51;
definitions TARSKI,FUNCT_1,QC_LANG1,QC_LANG3,CKB1,CKB5,CKB7,CKB8,CKB9,CKB12,CKB13,CKB14,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB35,CKB38,CKB40,CKB44,CKB45,CKB48,CKB49,CKB50;
theorems TARSKI,FINSEQ_1,FUNCT_1,MCART_1,CQC_SIM1,XBOOLE_0,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,XBOOLE_1,CARD_2,CARD_3,FUNCT_2,PARTFUN1,RELSET_1,NAT_1,QC_LANG2,FINSEQ_3,CARD_1,XXREAL_0,ORDINAL1,CKB1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB43,CKB44,CKB45,CKB48,CKB49,CKB50;
schemes FUNCT_1,FUNCT_2,QC_LANG1,QC_LANG3,NAT_1,XBOOLE_0,FRAENKEL,FINSEQ_1,CLASSES1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,PARTFUN1,FINSET_1,MEMBERED,FINSEQ_1,RFINSEQ,QC_LANG1,CQC_LANG,XXREAL_0,CARD_1,CKB2,CKB4,CKB11,CKB21,CKB31,CKB37;
constructors PARTFUN1,DOMAIN_1,XXREAL_0,NAT_1,SEQ_4,QC_LANG3,CQC_SIM1,RELSET_1,CKB1,CKB5,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB35,CKB38,CKB40,CKB41,CKB42,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51;
requirements REAL,NUMERALS,SUBSET,BOOLE;
begin
reserve S for (Element of ( QC-Sub-WFF ));
reserve S1 for (Element of ( QC-Sub-WFF ));
reserve S2 for (Element of ( QC-Sub-WFF ));
scheme SubQCInd { Pro[(Element of ( QC-Sub-WFF ))] } : (for S being (Element of ( QC-Sub-WFF )) holds Pro[ S ])
provided
A1: (for k being (Element of ( NAT )) holds (for P being (QC-pred_symbol of k) holds (for ll being (QC-variable_list of k) holds (for e being (Element of ( vSUB )) holds Pro[ ( Sub_P (P,ll,e) ) ]))))
and
A2: (for S being (Element of ( QC-Sub-WFF )) holds (S is  Sub_VERUM implies Pro[ S ]))
and
A3: (for S being (Element of ( QC-Sub-WFF )) holds (Pro[ S ] implies Pro[ ( Sub_not S ) ]))
and
A4: (for S,S9 being (Element of ( QC-Sub-WFF )) holds (((( S `2 ) = ( S9 `2 ) & Pro[ S ]) & Pro[ S9 ]) implies Pro[ ( Sub_& (S,S9) ) ]))
and
A5: (for x being bound_QC-variable holds (for S being (Element of ( QC-Sub-WFF )) holds (for SQ being (second_Q_comp of [ S,x ]) holds (([ S,x ] is  quantifiable & Pro[ S ]) implies Pro[ ( Sub_All ([ S,x ],SQ) ) ]))))
proof
set X = { S: Pro[ S ] };
X is non empty
proof
set e = the (Element of ( vSUB ));
reconsider V = [ ( VERUM ),e ] as (Element of ( QC-Sub-WFF )) by CKB30:def 1;
V is  Sub_VERUM by CKB40:def 1;
then Pro[ V ] by A2;
then V in X;
hence thesis;
end;
then reconsider X as non empty set;
(for e being (Element of ( vSUB )) holds [ ( VERUM ),e ] in X)
proof
let e being (Element of ( vSUB ));
reconsider V = [ ( VERUM ),e ] as (Element of ( QC-Sub-WFF )) by CKB30:def 1;
V is  Sub_VERUM by CKB40:def 1;
then Pro[ V ] by A2;
hence thesis;
end;
then A6: (for e being (Element of ( vSUB )) holds [ <* [ ( 0 ),( 0 ) ] *>,e ] in X);
A7: (for p being (FinSequence of [: ( NAT ),( NAT ) :]) holds (for e being (Element of ( vSUB )) holds ([ p,e ] in X implies [ ( <* [ 1,( 0 ) ] *> ^ p ),e ] in X)))
proof
let p being (FinSequence of [: ( NAT ),( NAT ) :]);
let e being (Element of ( vSUB ));
assume [ p,e ] in X;
then consider S such that A8: S = [ p,e ] and A9: Pro[ S ];
Pro[ ( Sub_not S ) ] by A3,A9;
then A10: ( Sub_not S ) in X;
consider p9 being (Element of ( QC-WFF )),e9 being (Element of ( vSUB )) such that A11: S = [ p9,e9 ] by CKB36:1;
A12: ( S `1 ) = p9 by A11,MCART_1:7;
p = p9 by A8,A11,ZFMISC_1:27;
hence thesis by A8,A10,A12,MCART_1:7;
end;
A13: (for x being bound_QC-variable holds (for p being (FinSequence of [: ( NAT ),( NAT ) :]) holds (for e being (Element of ( vSUB )) holds ([ p,( ( QSub ) . [ ( ( <* [ 3,( 0 ) ] *> ^ <* x *> ) ^ p ),e ] ) ] in X implies [ ( ( <* [ 3,( 0 ) ] *> ^ <* x *> ) ^ p ),e ] in X))))
proof
let x being bound_QC-variable;
let p being (FinSequence of [: ( NAT ),( NAT ) :]);
let e being (Element of ( vSUB ));
assume [ p,( ( QSub ) . [ ( ( <* [ 3,( 0 ) ] *> ^ <* x *> ) ^ p ),e ] ) ] in X;
then consider S such that A14: S = [ p,( ( QSub ) . [ ( ( <* [ 3,( 0 ) ] *> ^ <* x *> ) ^ p ),e ] ) ] and A15: Pro[ S ];
consider B being set such that A16: B = [ S,x ];
reconsider B as (Element of [: ( QC-Sub-WFF ),( bound_QC-variables ) :]) by A16;
A17: (( B `1 ) = S & ( B `2 ) = x) by A16,MCART_1:7;
( S `1 ) = p by A14,MCART_1:7;
then A18: ( S `2 ) = ( ( QSub ) . [ ( All (x,( S `1 )) ),e ] ) by A14,MCART_1:7;
then A19: B is  quantifiable by A17,CKB48:def 1;
then reconsider e as (second_Q_comp of B) by A18,A17,CKB49:def 1;
Pro[ ( Sub_All (B,e) ) ] by A5,A15,A16,A19;
then ( Sub_All (B,e) ) in X;
then [ ( All (( B `2 ),( ( B `1 ) `1 )) ),e ] in X by A19,CKB50:def 1;
hence thesis by A14,A17,MCART_1:7;
end;
let F being (Element of ( QC-Sub-WFF ));
A20: X c= [: ( [: ( NAT ),( NAT ) :] * ),( vSUB ) :]
proof
let x being set;
assume x in X;
then (ex S st (x = S & Pro[ S ]));
then consider p being (Element of ( QC-WFF )),e being (Element of ( vSUB )) such that A21: x = [ p,e ] by CKB36:1;
p = ( @ p );
then p in ( [: ( NAT ),( NAT ) :] * ) by FINSEQ_1:def 11;
hence thesis by A21,ZFMISC_1:def 2;
end;
A22: (for p,q being (FinSequence of [: ( NAT ),( NAT ) :]) holds (for e being (Element of ( vSUB )) holds (([ p,e ] in X & [ q,e ] in X) implies [ ( ( <* [ 2,( 0 ) ] *> ^ p ) ^ q ),e ] in X)))
proof
let p being (FinSequence of [: ( NAT ),( NAT ) :]),q being (FinSequence of [: ( NAT ),( NAT ) :]);
let e being (Element of ( vSUB ));
assume [ p,e ] in X;
then consider S1 such that A23: S1 = [ p,e ] and A24: Pro[ S1 ];
assume [ q,e ] in X;
then consider S2 such that A25: S2 = [ q,e ] and A26: Pro[ S2 ];
consider p9 being (Element of ( QC-WFF )),e1 being (Element of ( vSUB )) such that A27: [ p,e ] = [ p9,e1 ] by A23,CKB36:1;
A28: e = e1 by A27,ZFMISC_1:27;
A29: ( S1 `2 ) = e1 by A23,A27,MCART_1:7;
then A30: ( S1 `2 ) = ( S2 `2 ) by A25,A28,MCART_1:7;
then Pro[ ( Sub_& (S1,S2) ) ] by A4,A24,A26;
then ( Sub_& (S1,S2) ) in X;
then A31: [ ( ( S1 `1 ) '&' ( S2 `1 ) ),( S1 `2 ) ] in X by A30,CKB45:def 1;
A32: p = p9 by A27,ZFMISC_1:27;
( S1 `1 ) = p9 by A23,A27,MCART_1:7;
hence thesis by A25,A32,A28,A29,A31,MCART_1:7;
end;
(for k being (Element of ( NAT )) holds (for P being (QC-pred_symbol of k) holds (for ll being (QC-variable_list of k) holds (for e being (Element of ( vSUB )) holds [ ( <* P *> ^ ll ),e ] in X))))
proof
let k being (Element of ( NAT ));
let P being (QC-pred_symbol of k);
let ll being (QC-variable_list of k);
let e being (Element of ( vSUB ));
(Pro[ ( Sub_P (P,ll,e) ) ] & [ ( P ! ll ),e ] = ( Sub_P (P,ll,e) )) by A1,CKB39:1;
then [ ( P ! ll ),e ] in X;
hence thesis by QC_LANG1:6;
end;
then X is  QC-Sub-closed by A20,A6,A7,A22,A13,CKB30:def 1;
then ( QC-Sub-WFF ) c= X by CKB35:def 1;
then F in X by TARSKI:def 3;
then (ex S being (Element of ( QC-Sub-WFF )) st (S = F & Pro[ S ]));
hence thesis;
end;
