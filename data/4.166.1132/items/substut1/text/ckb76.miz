environ
vocabularies NUMBERS,SUBSET_1,QC_LANG1,CQC_LANG,FINSEQ_1,PARTFUN1,XBOOLE_0,FUNCT_1,RELAT_1,XXREAL_0,NAT_1,TARSKI,FINSET_1,ZFMISC_1,ZF_LANG,CLASSES2,CARD_1,BVFUNC_2,ORDINAL4,REALSET1,XBOOLEAN,MARGREL1,MCART_1,ARYTM_3,SUBSTUT1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,CARD_1,NUMBERS,FINSEQ_1,NAT_1,QC_LANG1,QC_LANG3,PARTFUN1,SEQ_4,CQC_LANG,FINSET_1,RELSET_1,FUNCT_2,DOMAIN_1,MCART_1,XXREAL_0,CKB1,CKB3,CKB5,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB35,CKB38,CKB40,CKB41,CKB42,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB53,CKB56,CKB57,CKB58,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
definitions TARSKI,FUNCT_1,QC_LANG1,QC_LANG3,CKB1,CKB5,CKB7,CKB8,CKB9,CKB12,CKB13,CKB14,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB35,CKB38,CKB40,CKB44,CKB45,CKB48,CKB49,CKB50,CKB53,CKB56,CKB57,CKB58,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
theorems TARSKI,FINSEQ_1,FUNCT_1,MCART_1,CQC_SIM1,XBOOLE_0,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,XBOOLE_1,CARD_2,CARD_3,FUNCT_2,PARTFUN1,RELSET_1,NAT_1,QC_LANG2,FINSEQ_3,CARD_1,XXREAL_0,ORDINAL1,CKB1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB43,CKB44,CKB45,CKB48,CKB49,CKB50,CKB53,CKB54,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75;
schemes FUNCT_1,FUNCT_2,QC_LANG1,QC_LANG3,NAT_1,XBOOLE_0,FRAENKEL,FINSEQ_1,CLASSES1,CKB52;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,PARTFUN1,FINSET_1,MEMBERED,FINSEQ_1,RFINSEQ,QC_LANG1,CQC_LANG,XXREAL_0,CARD_1,CKB2,CKB4,CKB11,CKB21,CKB31,CKB37,CKB55,CKB66;
constructors PARTFUN1,DOMAIN_1,XXREAL_0,NAT_1,SEQ_4,QC_LANG3,CQC_SIM1,RELSET_1,CKB1,CKB5,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB35,CKB38,CKB40,CKB41,CKB42,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB53,CKB56,CKB57,CKB58,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
requirements REAL,NUMERALS,SUBSET,BOOLE;
begin
scheme SubQCInd2 { Pro[(Element of ( QC-Sub-WFF ))] } : (for S being (Element of ( QC-Sub-WFF )) holds Pro[ S ])
provided
A1: (for S being (Element of ( QC-Sub-WFF )) holds (((((S is  Sub_atomic implies Pro[ S ]) & (S is  Sub_VERUM implies Pro[ S ])) & ((S is  Sub_negative & Pro[ ( Sub_the_argument_of S ) ]) implies Pro[ S ])) & (((S is  Sub_conjunctive & Pro[ ( Sub_the_left_argument_of S ) ]) & Pro[ ( Sub_the_right_argument_of S ) ]) implies Pro[ S ])) & ((S is  Sub_universal & Pro[ ( Sub_the_scope_of S ) ]) implies Pro[ S ])))
proof
A2:now
let x being bound_QC-variable;
let S being (Element of ( QC-Sub-WFF ));
let SQ being (second_Q_comp of [ S,x ]);
assume that
A3: [ S,x ] is  quantifiable
and
A4: Pro[ S ];
( [ S,x ] `1 ) = ( Sub_the_scope_of ( Sub_All ([ S,x ],SQ) ) ) by A3,CKB75:1;
then A5: S = ( Sub_the_scope_of ( Sub_All ([ S,x ],SQ) ) ) by MCART_1:7;
( Sub_All ([ S,x ],SQ) ) is  Sub_universal by A3,CKB68:1;
hence Pro[ ( Sub_All ([ S,x ],SQ) ) ] by A1,A4,A5;
end;
A6:now
let S1 being (Element of ( QC-Sub-WFF )),S2 being (Element of ( QC-Sub-WFF ));
assume that
A7: ( S1 `2 ) = ( S2 `2 )
and
A8: (Pro[ S1 ] & Pro[ S2 ]);
A9: S2 = ( Sub_the_right_argument_of ( Sub_& (S1,S2) ) ) by A7,CKB73:1;
(( Sub_& (S1,S2) ) is  Sub_conjunctive & S1 = ( Sub_the_left_argument_of ( Sub_& (S1,S2) ) )) by A7,CKB67:1,CKB72:1;
hence Pro[ ( Sub_& (S1,S2) ) ] by A1,A8,A9;
end;
A10:now
let S being (Element of ( QC-Sub-WFF ));
assume that
A11: Pro[ S ];
S = ( Sub_the_argument_of ( Sub_not S ) ) by CKB61:def 1;
hence Pro[ ( Sub_not S ) ] by A1,A11;
end;
A12: (for S being (Element of ( QC-Sub-WFF )) holds (S is  Sub_VERUM implies Pro[ S ])) by A1;
A13: (for k being (Element of ( NAT )) holds (for P being (QC-pred_symbol of k) holds (for ll being (QC-variable_list of k) holds (for e being (Element of ( vSUB )) holds Pro[ ( Sub_P (P,ll,e) ) ])))) by A1;
thus thesis from CKB52:sch 1(A13,A12,A10,A6,A2);
end;
