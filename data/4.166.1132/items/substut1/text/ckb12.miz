environ
vocabularies NUMBERS,SUBSET_1,QC_LANG1,CQC_LANG,FINSEQ_1,PARTFUN1,XBOOLE_0,FUNCT_1,RELAT_1,XXREAL_0,NAT_1,TARSKI,FINSET_1,ZFMISC_1,ZF_LANG,CLASSES2,CARD_1,BVFUNC_2,ORDINAL4,REALSET1,XBOOLEAN,MARGREL1,MCART_1,ARYTM_3,SUBSTUT1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,CARD_1,NUMBERS,FINSEQ_1,NAT_1,QC_LANG1,QC_LANG3,PARTFUN1,SEQ_4,CQC_LANG,FINSET_1,RELSET_1,FUNCT_2,DOMAIN_1,MCART_1,XXREAL_0,CKB1,CKB3,CKB5,CKB7,CKB8,CKB9,CKB10;
definitions TARSKI,FUNCT_1,QC_LANG1,QC_LANG3,CKB1,CKB5,CKB7,CKB8,CKB9;
theorems TARSKI,FINSEQ_1,FUNCT_1,MCART_1,CQC_SIM1,XBOOLE_0,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,XBOOLE_1,CARD_2,CARD_3,FUNCT_2,PARTFUN1,RELSET_1,NAT_1,QC_LANG2,FINSEQ_3,CARD_1,XXREAL_0,ORDINAL1,CKB1,CKB5,CKB6,CKB7,CKB8,CKB9;
schemes FUNCT_1,FUNCT_2,QC_LANG1,QC_LANG3,NAT_1,XBOOLE_0,FRAENKEL,FINSEQ_1,CLASSES1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,PARTFUN1,FINSET_1,MEMBERED,FINSEQ_1,RFINSEQ,QC_LANG1,CQC_LANG,XXREAL_0,CARD_1,CKB2,CKB4,CKB11;
constructors PARTFUN1,DOMAIN_1,XXREAL_0,NAT_1,SEQ_4,QC_LANG3,CQC_SIM1,RELSET_1,CKB1,CKB5,CKB7,CKB8,CKB9,CKB10;
requirements REAL,NUMERALS,SUBSET,BOOLE;
begin
reserve a for set;
reserve x for bound_QC-variable;
reserve y for bound_QC-variable;
reserve p for QC-formula;
reserve Sub for CQC_Substitution;
definition
let x;
let p;
let Sub;
func RestrictSub (x,p,Sub) ->  finite CQC_Substitution
equals
( Sub | { y: (((y in ( still_not-bound_in p ) & y is (Element of ( dom Sub ))) & y <> x) & y <> ( Sub . y )) } );
coherence
proof
set Y = { y: ((y is (Element of ( dom Sub )) & y <> x) & y <> ( Sub . y )) };
set X = { y: (((y in ( still_not-bound_in p ) & y is (Element of ( dom Sub ))) & y <> x) & y <> ( Sub . y )) };
reconsider Z = ( still_not-bound_in p ) as  finite set by CQC_SIM1:19;
(for a holds (a in X iff a in ( Z /\ Y )))
proof
let a;
thus (a in X implies a in ( Z /\ Y ))
proof
assume a in X;
then consider y such that A1: (a = y & y in ( still_not-bound_in p )) and A2: ((y is (Element of ( dom Sub )) & y <> x) & y <> ( Sub . y ));
y in Y by A2;
hence thesis by A1,XBOOLE_0:def 4;
end;

thus (a in ( Z /\ Y ) implies a in X)
proof
assume A3: a in ( Z /\ Y );
then a in Y by XBOOLE_0:def 4;
then A4: (ex y st (((a = y & y is (Element of ( dom Sub ))) & y <> x) & y <> ( Sub . y )));
a in Z by A3,XBOOLE_0:def 4;
hence thesis by A4;
end;

end;
then reconsider X as  finite set by TARSKI:1;
( Sub | X ) is  finite;
hence thesis;
end;
end;
