environ
vocabularies NUMBERS,SUBSET_1,REAL_1,CFUNCT_1,CLVECT_1,NORMSP_1,NAT_1,ARYTM_1,ARYTM_3,COMPLEX1,RELAT_1,FUNCT_1,PARTFUN1,STRUCT_0,PRE_TOPC,RCOMP_1,CARD_1,TARSKI,XXREAL_0,SUPINF_2,VALUED_0,SEQ_2,ORDINAL2,FCONT_1,FUNCT_2,XREAL_0,ORDINAL1,XBOOLE_0,VALUED_1,CFCONT_1,COMSEQ_1,SEQ_1,SEQ_4,NFCONT_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,PARTFUN2,FUNCT_2,PRE_TOPC,XREAL_0,ORDINAL1,NUMBERS,COMPLEX1,REAL_1,RLVECT_1,SEQ_1,SEQ_2,VALUED_0,SEQ_4,VFUNCT_1,COMSEQ_1,CFUNCT_1,CFCONT_1,RCOMP_1,COMSEQ_2,STRUCT_0,VFUNCT_2,BHSP_1,CLVECT_1,NFCONT_1,XXREAL_0,NORMSP_0,NORMSP_1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56;
definitions TARSKI,SEQM_3,COMSEQ_3,NFCONT_1,BHSP_3,RELAT_1,VALUED_0,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56;
theorems TARSKI,ABSVALUE,XBOOLE_0,XBOOLE_1,RLVECT_1,XCMPLX_0,XCMPLX_1,ZFMISC_1,RCOMP_1,XREAL_0,SEQ_2,NAT_1,RELAT_1,FUNCT_1,VFUNCT_1,LOPBAN_1,FUNCT_2,SEQ_4,NORMSP_1,PARTFUN1,PARTFUN2,CLVECT_1,COMSEQ_2,VFUNCT_2,NFCONT_1,CLOPBAN1,CFCONT_1,COMPLEX1,XREAL_1,XXREAL_0,BHSP_1,VALUED_0,NORMSP_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78;
schemes FUNCT_2;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,NAT_1,MEMBERED,STRUCT_0,VALUED_0,XREAL_0,VFUNCT_1,FUNCT_2;
constructors PARTFUN1,REAL_1,SEQ_4,RCOMP_1,PARTFUN2,COMSEQ_2,COMSEQ_3,CFCONT_1,BHSP_3,VFUNCT_1,LOPBAN_3,NFCONT_1,VFUNCT_2,SEQ_1,RECDEF_1,BINOP_2,NAT_1,SEQM_3,SEQ_2,NORMSP_1,RELSET_1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve CNS for ComplexNormSpace;
reserve RNS for RealNormSpace;
reserve X for set;
theorem
Th84: (for f1,f2 being (PartFunc of CNS,RNS) holds ((f1 is_continuous_on X & f2 is_continuous_on X) implies (( f1 + f2 ) is_continuous_on X & ( f1 - f2 ) is_continuous_on X)))
proof
let f1 being (PartFunc of CNS,RNS),f2 being (PartFunc of CNS,RNS);
assume A1: (f1 is_continuous_on X & f2 is_continuous_on X);
then (X c= ( dom f1 ) & X c= ( dom f2 )) by CKB58:1;
then A2: X c= ( ( dom f1 ) /\ ( dom f2 ) ) by XBOOLE_1:19;
then A3: X c= ( dom ( f1 + f2 ) ) by VFUNCT_1:def 1;
now
let s1 being (sequence of CNS);
assume that
A4: ( rng s1 ) c= X
and
A5: s1 is  convergent
and
A6: ( lim s1 ) in X;
A7: (( f1 /* s1 ) is  convergent & ( f2 /* s1 ) is  convergent) by A1,A4,A5,A6,CKB58:1;
then A8: ( ( f1 /* s1 ) + ( f2 /* s1 ) ) is  convergent by NORMSP_1:19;
A9: ( rng s1 ) c= ( ( dom f1 ) /\ ( dom f2 ) ) by A2,A4,XBOOLE_1:1;
(( f1 /. ( lim s1 ) ) = ( lim ( f1 /* s1 ) ) & ( f2 /. ( lim s1 ) ) = ( lim ( f2 /* s1 ) )) by A1,A4,A5,A6,CKB58:1;
then ( ( f1 + f2 ) /. ( lim s1 ) ) = ( ( lim ( f1 /* s1 ) ) + ( lim ( f2 /* s1 ) ) ) by A3,A6,VFUNCT_1:def 1
.= ( lim ( ( f1 /* s1 ) + ( f2 /* s1 ) ) ) by A7,NORMSP_1:25
.= ( lim ( ( f1 + f2 ) /* s1 ) ) by A9,CKB34:1;
hence (( ( f1 + f2 ) /* s1 ) is  convergent & ( ( f1 + f2 ) /. ( lim s1 ) ) = ( lim ( ( f1 + f2 ) /* s1 ) )) by A9,A8,CKB34:1;
end;
hence ( f1 + f2 ) is_continuous_on X by A3,CKB58:1;
A10: X c= ( dom ( f1 - f2 ) ) by A2,VFUNCT_1:def 2;
now
let s1 being (sequence of CNS);
assume that
A11: ( rng s1 ) c= X
and
A12: s1 is  convergent
and
A13: ( lim s1 ) in X;
A14: (( f1 /* s1 ) is  convergent & ( f2 /* s1 ) is  convergent) by A1,A11,A12,A13,CKB58:1;
then A15: ( ( f1 /* s1 ) - ( f2 /* s1 ) ) is  convergent by NORMSP_1:20;
A16: ( rng s1 ) c= ( ( dom f1 ) /\ ( dom f2 ) ) by A2,A11,XBOOLE_1:1;
(( f1 /. ( lim s1 ) ) = ( lim ( f1 /* s1 ) ) & ( f2 /. ( lim s1 ) ) = ( lim ( f2 /* s1 ) )) by A1,A11,A12,A13,CKB58:1;
then ( ( f1 - f2 ) /. ( lim s1 ) ) = ( ( lim ( f1 /* s1 ) ) - ( lim ( f2 /* s1 ) ) ) by A10,A13,VFUNCT_1:def 2
.= ( lim ( ( f1 /* s1 ) - ( f2 /* s1 ) ) ) by A14,NORMSP_1:26
.= ( lim ( ( f1 - f2 ) /* s1 ) ) by A16,CKB34:1;
hence (( ( f1 - f2 ) /* s1 ) is  convergent & ( ( f1 - f2 ) /. ( lim s1 ) ) = ( lim ( ( f1 - f2 ) /* s1 ) )) by A16,A15,CKB34:1;
end;
hence thesis by A10,CKB58:1;
end;
