environ
vocabularies NUMBERS,SUBSET_1,CARD_1,XBOOLE_0,STRUCT_0,SCMFSA7B,FUNCSDOM,AMI_3,AMI_1,AMI_2,FUNCT_7,TARSKI,RELAT_1,ZFMISC_1,FSM_1,FUNCT_1,CAT_1,FINSEQ_1,GRAPHSP,FUNCT_2,CARD_3,ORDINAL1,ARYTM_3,ARYTM_1,SUPINF_2,FUNCOP_1,SCMRING1,GLIB_000,FUNCT_4,ALGSTR_0,RECDEF_2,COMPOS_1,AMISTD_2;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,DOMAIN_1,RELAT_1,FUNCT_1,CARD_1,FUNCT_2,RECDEF_2,STRUCT_0,ALGSTR_0,FUNCSDOM,MCART_1,CARD_3,FINSEQ_1,NUMBERS,FUNCOP_1,FUNCT_4,FUNCT_7,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,AMI_3,SCMRING1,CKB2,CKB4,CKB6,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
definitions STRUCT_0,AMI_3,FUNCOP_1,SCMRING1,COMPOS_1,EXTPRO_1,CARD_1,NAT_1,AMI_2,MEMSTR_0,CKB2,CKB4,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
theorems AMI_2,AMI_3,AMI_5,CARD_3,FUNCOP_1,ENUMSET1,FUNCT_4,MCART_1,SCMRING1,TARSKI,ZFMISC_1,XBOOLE_0,XBOOLE_1,FUNCT_7,ARYTM_3,NAT_1,FINSEQ_1,FUNCT_1,PARTFUN1,PBOOLE,RELAT_1,RECDEF_2,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB2,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
registrations XBOOLE_0,SETFAM_1,ORDINAL1,RELSET_1,FUNCOP_1,FINSEQ_1,CARD_3,STRUCT_0,AMI_3,SCMRING1,AMI_2,FUNCT_1,FUNCT_2,ALGSTR_0,ALGSTR_1,GCD_1,COMPOS_1,EXTPRO_1,MEMSTR_0,CARD_1,CKB1,CKB3,CKB20;
constructors XXREAL_0,FINSEQ_4,REALSET1,CAT_2,AMI_3,SCMRING1,PRE_POLY,RECDEF_2,FUNCT_7,MEMSTR_0,RELSET_1,CKB2,CKB4,CKB6,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve R for  good Ring;
reserve a for (Data-Location of R);
reserve c for (Data-Location of R);
reserve i1 for (Element of ( NAT ));
reserve s for (State of ( SCM R ));
theorem
Th18: (((( s . a ) = ( 0. R ) implies ( ( Exec (( a =0_goto i1 ),s) ) . ( IC ( SCM R ) ) ) = i1) & (( s . a ) <> ( 0. R ) implies ( ( Exec (( a =0_goto i1 ),s) ) . ( IC ( SCM R ) ) ) = ( succ ( IC s ) ))) & ( ( Exec (( a =0_goto i1 ),s) ) . c ) = ( s . c ))
proof
A1: (the Object-Kind of ( SCM R )) = ( SCM-OK R ) by CKB2:def 1;
reconsider S = s as (SCM-State of R) by A1,CARD_3:107;
reconsider I = ( a =0_goto i1 ) as (Element of ( SCM-Instr R )) by CKB2:def 1;
reconsider i = 7 as (Element of ( Segm 8 )) by NAT_1:44;
A2: (a is (Element of ( Data-Locations ( SCM ) )) & i1 is (Element of ( NAT ))) by CKB5:1;
A3: ( Exec (( a =0_goto i1 ),s) ) = ( SCM-Exec-Res (I,S) ) by CKB23:1
.= ( SCM-Chg (S,( IFEQ (( S . ( I cond_address ) ),( 0. R ),( I cjump_address ),( succ ( IC S ) )) )) ) by A2,AMI_3:27,SCMRING1:def 14;
A4: I = [ i,<* i1 *>,<* a *> ];
thus (( s . a ) = ( 0. R ) implies ( ( Exec (( a =0_goto i1 ),s) ) . ( IC ( SCM R ) ) ) = i1)
proof
assume ( s . a ) = ( 0. R );
then A5: ( S . ( I cond_address ) ) = ( 0. R ) by A4,A2,AMI_3:27,SCMRING1:15;
thus ( ( Exec (( a =0_goto i1 ),s) ) . ( IC ( SCM R ) ) ) = ( ( Exec (( a =0_goto i1 ),s) ) . ( NAT ) ) by CKB2:def 1
.= ( IFEQ (( S . ( I cond_address ) ),( 0. R ),( I cjump_address ),( succ ( IC S ) )) ) by A3,SCMRING1:7
.= ( I cjump_address ) by A5,FUNCOP_1:def 8
.= i1 by A4,A2,AMI_3:27,SCMRING1:15;
end;

A6: ( IC s ) = ( IC S ) by CKB2:def 1;
thus (( s . a ) <> ( 0. R ) implies ( ( Exec (( a =0_goto i1 ),s) ) . ( IC ( SCM R ) ) ) = ( succ ( IC s ) ))
proof
assume ( s . a ) <> ( 0. R );
then A7: ( S . ( I cond_address ) ) <> ( 0. R ) by A4,A2,AMI_3:27,SCMRING1:15;
thus ( ( Exec (( a =0_goto i1 ),s) ) . ( IC ( SCM R ) ) ) = ( ( Exec (( a =0_goto i1 ),s) ) . ( NAT ) ) by CKB2:def 1
.= ( IFEQ (( S . ( I cond_address ) ),( 0. R ),( I cjump_address ),( succ ( IC S ) )) ) by A3,SCMRING1:7
.= ( succ ( IC s ) ) by A6,A7,FUNCOP_1:def 8;
end;

c is (Element of ( Data-Locations ( SCM ) )) by CKB5:1;
hence thesis by A3,AMI_3:27,SCMRING1:8;
end;
