environ
vocabularies NUMBERS,SUBSET_1,CARD_1,XBOOLE_0,STRUCT_0,SCMFSA7B,FUNCSDOM,AMI_3,AMI_1,AMI_2,FUNCT_7,TARSKI,RELAT_1,ZFMISC_1,FSM_1,FUNCT_1,CAT_1,FINSEQ_1,GRAPHSP,FUNCT_2,CARD_3,ORDINAL1,ARYTM_3,ARYTM_1,SUPINF_2,FUNCOP_1,SCMRING1,GLIB_000,FUNCT_4,ALGSTR_0,RECDEF_2,COMPOS_1,AMISTD_2;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,DOMAIN_1,RELAT_1,FUNCT_1,CARD_1,FUNCT_2,RECDEF_2,STRUCT_0,ALGSTR_0,FUNCSDOM,MCART_1,CARD_3,FINSEQ_1,NUMBERS,FUNCOP_1,FUNCT_4,FUNCT_7,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,AMI_3,SCMRING1,CKB2,CKB4,CKB6,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
definitions STRUCT_0,AMI_3,FUNCOP_1,SCMRING1,COMPOS_1,EXTPRO_1,CARD_1,NAT_1,AMI_2,MEMSTR_0,CKB2,CKB4,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
theorems AMI_2,AMI_3,AMI_5,CARD_3,FUNCOP_1,ENUMSET1,FUNCT_4,MCART_1,SCMRING1,TARSKI,ZFMISC_1,XBOOLE_0,XBOOLE_1,FUNCT_7,ARYTM_3,NAT_1,FINSEQ_1,FUNCT_1,PARTFUN1,PBOOLE,RELAT_1,RECDEF_2,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB2,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37;
registrations XBOOLE_0,SETFAM_1,ORDINAL1,RELSET_1,FUNCOP_1,FINSEQ_1,CARD_3,STRUCT_0,AMI_3,SCMRING1,AMI_2,FUNCT_1,FUNCT_2,ALGSTR_0,ALGSTR_1,GCD_1,COMPOS_1,EXTPRO_1,MEMSTR_0,CARD_1,CKB1,CKB3,CKB20;
constructors XXREAL_0,FINSEQ_4,REALSET1,CAT_2,AMI_3,SCMRING1,PRE_POLY,RECDEF_2,FUNCT_7,MEMSTR_0,RELSET_1,CKB2,CKB4,CKB6,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve R for  good Ring;
reserve a for (Data-Location of R);
reserve i1 for (Element of ( NAT ));
theorem
Lm6: ( a =0_goto i1 ) is non halting
proof
reconsider i5 = i1 as (Element of ( NAT ));
set s = the (SCM-State of R);
set t = ( s +* ( ( NAT ) .--> ( succ i1 ) ) );
set f = (the Object-Kind of ( SCM R ));
reconsider V = ( a =0_goto i1 ) as (Element of ( SCM-Instr R )) by CKB2:def 1;
A1: { ( NAT ) } c= ( SCM-Memory ) by AMI_2:22,ZFMISC_1:31;
A2: ( dom t ) = ( ( dom s ) \/ ( dom ( ( NAT ) .--> ( succ i1 ) ) ) ) by FUNCT_4:def 1
.= ( ( SCM-Memory ) \/ ( dom ( ( NAT ) .--> ( succ i1 ) ) ) ) by PARTFUN1:def 2
.= ( ( SCM-Memory ) \/ { ( NAT ) } ) by FUNCOP_1:13
.= ( SCM-Memory ) by A1,XBOOLE_1:12;
A3: f = ( SCM-OK R ) by CKB2:def 1;
A4: ( dom ( ( NAT ) .--> ( succ i1 ) ) ) = { ( NAT ) } by FUNCOP_1:13;
then ( NAT ) in ( dom ( ( NAT ) .--> ( succ i1 ) ) ) by TARSKI:def 1;
then A5: ( t . ( NAT ) ) = ( ( ( NAT ) .--> ( succ i1 ) ) . ( NAT ) ) by FUNCT_4:13
.= ( succ i5 ) by FUNCOP_1:72;
A6: ( dom t ) = (the carrier of ( SCM R )) by A2,CKB2:def 1
.= ( dom f ) by PARTFUN1:def 2;
A7: (for x being set holds (x in ( dom t ) implies ( t . x ) in ( f . x )))
proof
let x being set;
assume that
A8: x in ( dom t );
per cases ;
suppose A9: x = ( NAT );

then ( f . x ) = ( NAT ) by A3,AMI_2:22,SCMRING1:2;
hence thesis by A5,A9;
end;
suppose x <> ( NAT );

then (not x in ( dom ( ( NAT ) .--> ( succ i1 ) ) )) by A4,TARSKI:def 1;
then ( t . x ) = ( s . x ) by FUNCT_4:11;
hence thesis by A3,A8,A6,CARD_3:9;
end;
end;
( dom t ) = (the carrier of ( SCM R )) by A2,CKB2:def 1;
then reconsider t as (PartState of ( SCM R )) by A7,FUNCT_1:def 14,RELAT_1:def 18;
( dom t ) = (the carrier of ( SCM R )) by A2,CKB2:def 1;
then reconsider t as (State of ( SCM R )) by PARTFUN1:def 2;
A10: (the Object-Kind of ( SCM R )) = ( SCM-OK R ) by CKB2:def 1;
reconsider w = t as (SCM-State of R) by A10,CARD_3:107;
( dom ( ( NAT ) .--> i1 ) ) = { ( NAT ) } by FUNCOP_1:13;
then ( NAT ) in ( dom ( ( NAT ) .--> i1 ) ) by TARSKI:def 1;
then A11: ( ( w +* ( ( NAT ) .--> i1 ) ) . ( NAT ) ) = ( ( ( NAT ) .--> i1 ) . ( NAT ) ) by FUNCT_4:13
.= i1 by FUNCOP_1:72;
A12: 7 is (Element of ( Segm 8 )) by NAT_1:44;
A13: a is (Element of ( Data-Locations ( SCM ) )) by CKB5:1;
assume A14: ( a =0_goto i1 ) is  halting;
per cases ;
suppose A15: ( w . ( V cond_address ) ) <> ( 0. R );

( IC w ) = ( w . ( NAT ) );
then reconsider e = ( w . ( NAT ) ) as (Element of ( NAT ));
A16: ( IC t ) = ( IC w ) by CKB2:def 1;
then A17: ( ( Exec (( a =0_goto i1 ),t) ) . ( IC ( SCM R ) ) ) = ( w . ( NAT ) ) by A14,EXTPRO_1:def 3;
a is (Element of ( Data-Locations ( SCM ) )) by CKB5:1;
then ( t . a ) <> ( 0. R ) by A12,A15,AMI_3:27,SCMRING1:15;
then ( ( Exec (( a =0_goto i1 ),t) ) . ( IC ( SCM R ) ) ) = ( succ e ) by A16,CKB29:1;
hence contradiction by A17;
end;
suppose A18: ( w . ( V cond_address ) ) = ( 0. R );

( w +* ( ( NAT ) .--> i1 ) ) = ( SCM-Chg (w,i5) )
.= ( SCM-Chg (w,( V cjump_address )) ) by A12,A13,AMI_3:27,SCMRING1:15
.= ( SCM-Chg (w,( IFEQ (( w . ( V cond_address ) ),( 0. R ),( V cjump_address ),( succ ( IC w ) )) )) ) by A18,FUNCOP_1:def 8
.= ( SCM-Exec-Res (V,w) ) by A13,AMI_3:27,SCMRING1:def 14
.= ( Exec (( a =0_goto i1 ),t) ) by CKB23:1
.= t by A14,EXTPRO_1:def 3;
hence contradiction by A5,A11;
end;
end;
