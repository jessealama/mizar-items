environ
vocabularies NUMBERS,SUBSET_1,CARD_1,XBOOLE_0,STRUCT_0,SCMFSA7B,FUNCSDOM,AMI_3,AMI_1,AMI_2,FUNCT_7,TARSKI,RELAT_1,ZFMISC_1,FSM_1,FUNCT_1,CAT_1,FINSEQ_1,GRAPHSP,FUNCT_2,CARD_3,ORDINAL1,ARYTM_3,ARYTM_1,SUPINF_2,FUNCOP_1,SCMRING1,GLIB_000,FUNCT_4,ALGSTR_0,RECDEF_2,COMPOS_1,AMISTD_2;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,DOMAIN_1,RELAT_1,FUNCT_1,CARD_1,FUNCT_2,RECDEF_2,STRUCT_0,ALGSTR_0,FUNCSDOM,MCART_1,CARD_3,FINSEQ_1,NUMBERS,FUNCOP_1,FUNCT_4,FUNCT_7,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,AMI_3,SCMRING1,CKB2,CKB4,CKB6,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
definitions STRUCT_0,AMI_3,FUNCOP_1,SCMRING1,COMPOS_1,EXTPRO_1,CARD_1,NAT_1,AMI_2,MEMSTR_0,CKB2,CKB4,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
theorems AMI_2,AMI_3,AMI_5,CARD_3,FUNCOP_1,ENUMSET1,FUNCT_4,MCART_1,SCMRING1,TARSKI,ZFMISC_1,XBOOLE_0,XBOOLE_1,FUNCT_7,ARYTM_3,NAT_1,FINSEQ_1,FUNCT_1,PARTFUN1,PBOOLE,RELAT_1,RECDEF_2,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB2,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
registrations XBOOLE_0,SETFAM_1,ORDINAL1,RELSET_1,FUNCOP_1,FINSEQ_1,CARD_3,STRUCT_0,AMI_3,SCMRING1,AMI_2,FUNCT_1,FUNCT_2,ALGSTR_0,ALGSTR_1,GCD_1,COMPOS_1,EXTPRO_1,MEMSTR_0,CARD_1,CKB1,CKB3,CKB20,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46;
constructors XXREAL_0,FINSEQ_4,REALSET1,CAT_2,AMI_3,SCMRING1,PRE_POLY,RECDEF_2,FUNCT_7,MEMSTR_0,RELSET_1,CKB2,CKB4,CKB6,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve R for  good Ring;
reserve r for (Element of R);
reserve a for (Data-Location of R);
reserve b for (Data-Location of R);
reserve i1 for (Element of ( NAT ));
theorem
Lm8: (for W being (Instruction of ( SCM R )) holds (W is  halting implies W = [ ( 0 ),( {} ),( {} ) ]))
proof
set I = [ ( 0 ),( {} ),( {} ) ];
let W being (Instruction of ( SCM R ));
assume that
A1: W is  halting;
assume A2: I <> W;
per cases  by CKB19:1;
suppose W = [ ( 0 ),( {} ),( {} ) ];

hence thesis by A2;
end;
suppose (ex a st (ex b st W = ( a := b )));

hence thesis by A1;
end;
suppose (ex a st (ex b st W = ( AddTo (a,b) )));

hence thesis by A1;
end;
suppose (ex a st (ex b st W = ( SubFrom (a,b) )));

hence thesis by A1;
end;
suppose (ex a st (ex b st W = ( MultBy (a,b) )));

hence thesis by A1;
end;
suppose (ex i1 st W = ( goto (i1,R) ));

hence thesis by A1;
end;
suppose (ex a st (ex i1 st W = ( a =0_goto i1 )));

hence thesis by A1;
end;
suppose (ex a st (ex r st W = ( a := r )));

hence thesis by A1;
end;
end;
