environ
vocabularies NUMBERS,STRUCT_0,ALGSTR_0,VECTSP_1,FUNCSDOM,BINOP_1,SUBSET_1,FUNCT_1,ZFMISC_1,XBOOLE_0,CARD_1,FUNCOP_1,RELAT_1,GROUP_1,LATTICES,MESFUNC1,NAT_1,ARYTM_3,SUPINF_2,POLYNOM3,RLVECT_1,ARYTM_1,ALGSTR_1,FINSEQ_1,RFINSEQ,FINSEQ_3,XXREAL_0,ORDINAL4,PARTFUN1,CARD_3,REALSET1,TARSKI,UNIALG_2,RLSUB_1,SETFAM_1,POLYNOM1,ALGSEQ_1,POLYALG1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,NUMBERS,XCMPLX_0,REALSET1,NAT_1,STRUCT_0,ALGSTR_0,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCOP_1,FINSEQ_1,RFINSEQ,BINOP_1,NAT_D,GROUP_1,RLVECT_1,VFUNCT_1,VECTSP_1,NORMSP_1,BHSP_1,POLYNOM1,ALGSTR_1,ALGSEQ_1,POLYNOM3,POLYNOM5,VECTSP_4,XXREAL_0,CKB1,CKB3,CKB5,CKB8;
definitions TARSKI,RLVECT_1,GROUP_1,VECTSP_1,VECTSP_4,BINOP_1,REALSET1,STRUCT_0,ALGSTR_0,CKB3,CKB8;
theorems TARSKI,NAT_1,RLVECT_1,VECTSP_1,FUNCT_1,FUNCT_2,FUNCOP_1,FINSEQ_1,FINSEQ_3,FINSEQ_5,RFINSEQ,BINOP_1,POLYNOM1,POLYNOM3,ZFMISC_1,POLYNOM5,BINOM,RELAT_1,VECTSP_4,SETFAM_1,ALGSTR_1,XBOOLE_0,XBOOLE_1,GROUP_1,XREAL_1,ORDINAL1,NORMSP_1,PARTFUN1,CARD_1,NAT_D,CKB3,CKB6,CKB7,CKB8;
schemes SUBSET_1,BINOP_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,XREAL_0,NAT_1,FINSEQ_1,REALSET1,STRUCT_0,VECTSP_1,FVSUM_1,POLYNOM3,POLYNOM5,BINOM,ORDINAL1,VFUNCT_1,FUNCT_2,CKB1,CKB2,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13;
constructors SETFAM_1,BINOP_1,XXREAL_0,REALSET1,RFINSEQ,NAT_D,ALGSTR_1,VECTSP_4,BHSP_1,POLYNOM1,POLYNOM3,POLYNOM5,SEQ_1,REAL_1,RELSET_1,FUNCOP_1,FVSUM_1,VFUNCT_1,CKB1,CKB3,CKB8;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
registration
let L being  Abelian  add-associative  right_zeroed  right_complementable  well-unital  associative  distributive non  empty doubleLoopStr;
cluster ( Formal-Series L ) ->  associative;
coherence
proof
let p being (Element of ( Formal-Series L ));
let q being (Element of ( Formal-Series L ));
let r being (Element of ( Formal-Series L ));
reconsider p1 = p,q1 = q,r1 = r as (sequence of L) by CKB8:def 1;
A1: ( q * r ) = ( q1 *' r1 ) by CKB8:def 1;
( p * q ) = ( p1 *' q1 ) by CKB8:def 1;
hence ( ( p * q ) * r ) = ( ( p1 *' q1 ) *' r1 ) by CKB8:def 1
.= ( p1 *' ( q1 *' r1 ) ) by POLYNOM3:33
.= ( p * ( q * r ) ) by A1,CKB8:def 1;
end;
end;
