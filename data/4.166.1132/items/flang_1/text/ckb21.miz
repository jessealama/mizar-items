environ
vocabularies NUMBERS,SUBSET_1,AFINSQ_1,NAT_1,ORDINAL4,XBOOLE_0,TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,XXREAL_0,ARYTM_3,CARD_1,FINSEQ_1,PRE_POLY,NEWTON,SETFAM_1,FLANG_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,FUNCT_1,RELSET_1,FUNCT_2,SETFAM_1,XXREAL_0,AFINSQ_1,CATALAN2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB18;
definitions TARSKI,CKB18;
theorems AFINSQ_1,NAT_1,ORDINAL1,SUBSET_1,TARSKI,XBOOLE_0,XBOOLE_1,XREAL_1,ZFMISC_1,XXREAL_0,FUNCT_2,RELAT_1,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
schemes CARD_FIL,DOMAIN_1,NAT_1,RECDEF_1,SUBSET_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,ORDINAL1,XXREAL_0,XREAL_0,NAT_1,AFINSQ_1,CATALAN2,FUNCT_1,RELSET_1;
constructors XXREAL_0,XREAL_0,NAT_1,CATALAN2,RELSET_1,ORDINAL4,CKB1,CKB2,CKB3,CKB4,CKB5,CKB18;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve E for set;
reserve x for set;
reserve A for (Subset of ( E ^omega ));
reserve B for (Subset of ( E ^omega ));
reserve a for (Element of ( E ^omega ));
reserve b for (Element of ( E ^omega ));
theorem
Th15: (( A ^^ B ) = { ( <%> E ) } iff (A = { ( <%> E ) } & B = { ( <%> E ) }))
proof
thus (( A ^^ B ) = { ( <%> E ) } implies (A = { ( <%> E ) } & B = { ( <%> E ) }))
proof
assume that
A1: ( A ^^ B ) = { ( <%> E ) }
and
A2: (A <> { ( <%> E ) } or B <> { ( <%> E ) });
( <%> E ) in ( A ^^ B ) by A1,TARSKI:def 1;
then consider a,b such that A3: a in A and A4: b in B and ( <%> E ) = ( a ^ b ) by CKB18:def 1;
A5:now
let x;
assume that
A6: (x in A or x in B)
and
A7: x <> ( <%> E );
A8:now
assume A9: x in B;
then reconsider xb = x as (Element of ( E ^omega ));
A10: ( a ^ xb ) <> ( <%> E ) by A7,AFINSQ_1:30;
( a ^ xb ) in ( A ^^ B ) by A3,A9,CKB18:def 1;
hence contradiction by A1,A10,TARSKI:def 1;
end;
now
assume A11: x in A;
then reconsider xa = x as (Element of ( E ^omega ));
A12: ( xa ^ b ) <> ( <%> E ) by A7,AFINSQ_1:30;
( xa ^ b ) in ( A ^^ B ) by A4,A11,CKB18:def 1;
hence contradiction by A1,A12,TARSKI:def 1;
end;
hence contradiction by A6,A8;
end;
then A13: (x in B iff x = ( <%> E )) by A4;
(x in A iff x = ( <%> E )) by A3,A5;
hence contradiction by A2,A13,TARSKI:def 1;
end;

assume (A = { ( <%> E ) } & B = { ( <%> E ) });
hence thesis by CKB20:1;
end;
