environ
vocabularies NUMBERS,SUBSET_1,AFINSQ_1,NAT_1,ORDINAL4,XBOOLE_0,TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,XXREAL_0,ARYTM_3,CARD_1,FINSEQ_1,PRE_POLY,NEWTON,SETFAM_1,FLANG_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,FUNCT_1,RELSET_1,FUNCT_2,SETFAM_1,XXREAL_0,AFINSQ_1,CATALAN2,CKB1,CKB2,CKB3,CKB4,CKB5;
definitions TARSKI;
theorems AFINSQ_1,NAT_1,ORDINAL1,SUBSET_1,TARSKI,XBOOLE_0,XBOOLE_1,XREAL_1,ZFMISC_1,XXREAL_0,FUNCT_2,RELAT_1,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11;
schemes CARD_FIL,DOMAIN_1,NAT_1,RECDEF_1,SUBSET_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,ORDINAL1,XXREAL_0,XREAL_0,NAT_1,AFINSQ_1,CATALAN2,FUNCT_1,RELSET_1;
constructors XXREAL_0,XREAL_0,NAT_1,CATALAN2,RELSET_1,ORDINAL4,CKB1,CKB2,CKB3,CKB4,CKB5;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve E for set;
reserve x for set;
reserve b for (Element of ( E ^omega ));
reserve c for (Element of ( E ^omega ));
reserve e for (Element of E);
reserve n for Nat;
theorem
Th7: (( len b ) = ( n + 1 ) implies (ex c st (ex e st (( len c ) = n & b = ( c ^ <% e %> )))))
proof
assume A1: ( len b ) = ( n + 1 );
then b <> ( {} );
then consider c9 being XFinSequence,x such that A2: b = ( c9 ^ <% x %> ) by AFINSQ_1:40;
<% x %> is (Element of ( E ^omega )) by A2,CKB10:1;
then reconsider e = x as (Element of E) by CKB11:1;
reconsider c = c9 as (Element of ( E ^omega )) by A2,CKB10:1;
take c;
take e;
( n + 1 ) = ( ( len c ) + ( len <% x %> ) ) by A1,A2,AFINSQ_1:17
.= ( ( len c ) + 1 ) by AFINSQ_1:33;
hence thesis by A2;
end;
