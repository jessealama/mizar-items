environ
vocabularies NUMBERS,SUBSET_1,AFINSQ_1,NAT_1,ORDINAL4,XBOOLE_0,TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,XXREAL_0,ARYTM_3,CARD_1,FINSEQ_1,PRE_POLY,NEWTON,SETFAM_1,FLANG_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,FUNCT_1,RELSET_1,FUNCT_2,SETFAM_1,XXREAL_0,AFINSQ_1,CATALAN2,CKB1,CKB2,CKB3,CKB4,CKB5;
definitions TARSKI;
theorems AFINSQ_1,NAT_1,ORDINAL1,SUBSET_1,TARSKI,XBOOLE_0,XBOOLE_1,XREAL_1,ZFMISC_1,XXREAL_0,FUNCT_2,RELAT_1,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
schemes CARD_FIL,DOMAIN_1,NAT_1,RECDEF_1,SUBSET_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,ORDINAL1,XXREAL_0,XREAL_0,NAT_1,AFINSQ_1,CATALAN2,FUNCT_1,RELSET_1;
constructors XXREAL_0,XREAL_0,NAT_1,CATALAN2,RELSET_1,ORDINAL4,CKB1,CKB2,CKB3,CKB4,CKB5;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve n for Nat;
theorem
Th8: (for p being XFinSequence holds (p <> ( {} ) implies (ex q being XFinSequence st (ex x st p = ( <% x %> ^ q )))))
proof
let p being XFinSequence;
defpred P[ Nat ]
 means
(for p being XFinSequence holds ((( len p ) = $1 & p <> ( {} )) implies (ex q being XFinSequence st (ex x st p = ( <% x %> ^ q )))));
A1:now
let n;
assume A2: P[ n ];
thus P[ ( n + 1 ) ]
proof
let p being XFinSequence;
assume that
A3: ( len p ) = ( n + 1 )
and
A4: p <> ( {} );
consider q being XFinSequence,x such that A5: p = ( q ^ <% x %> ) by A4,AFINSQ_1:40;
A6: ( n + 1 ) = ( ( len q ) + ( len <% x %> ) ) by A3,A5,AFINSQ_1:17
.= ( ( len q ) + 1 ) by AFINSQ_1:33;
per cases ;
suppose A7: q = ( {} );

then p = <% x %> by A5,AFINSQ_1:29
.= ( <% x %> ^ q ) by A7,AFINSQ_1:29;
hence thesis;
end;
suppose q <> ( {} );

then consider r being XFinSequence,y such that A8: q = ( <% y %> ^ r ) by A2,A6;
p = ( <% y %> ^ ( r ^ <% x %> ) ) by A5,A8,AFINSQ_1:27;
hence thesis;
end;
end;

end;
A9: P[ ( 0 ) ];
A10: (for n holds P[ n ]) from NAT_1:sch 2(A9,A1);
A11: ( len p ) = ( len p );
assume p <> ( {} );
hence thesis by A10,A11;
end;
