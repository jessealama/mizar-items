environ
vocabularies NUMBERS,XBOOLE_0,STRUCT_0,SUBSET_1,FUNCT_2,FINSET_1,FUNCT_1,CARD_1,FUNCOP_1,COMPLEX1,ALGSTR_0,RLVECT_2,TARSKI,NAT_1,CLVECT_1,FINSEQ_1,VALUED_1,RELAT_1,PARTFUN1,XXREAL_0,RLVECT_1,CFUNCT_1,CARD_3,SUPINF_2,RLSUB_1,ARYTM_3,ARYTM_1,QC_LANG1,BINOP_1,ZFMISC_1,RUSUB_4,REAL_1,REALSET1,XREAL_0,ORDINAL1,XCMPLX_0,CONVEX1,SETFAM_1,CSSPACE,PROB_2,CONVEX4,PRE_POLY;
notations TARSKI,XBOOLE_0,DOMAIN_1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PRE_POLY,RELSET_1,FUNCT_2,FINSEQ_1,FINSEQ_4,ALGSTR_0,RLVECT_1,SETFAM_1,STRUCT_0,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,FINSET_1,PARTFUN1,FUNCOP_1,CARD_1,VALUED_1,XCMPLX_0,COMPLEX1,RVSUM_1,RUSUB_4,RUSUB_5,NAT_1,BINOP_1,REAL_1,RLVECT_2,CFUNCT_1,CLVECT_1,CSSPACE,REALSET1,CKB1,CKB2,CKB3,CKB6,CKB9,CKB13,CKB19,CKB28;
definitions FUNCT_1,TARSKI,XBOOLE_0,BINOP_1,RELAT_1,STRUCT_0,REALSET1,FINSEQ_1,CLVECT_1,COMPLEX1,RVSUM_1,XCMPLX_0,ALGSTR_0,RUSUB_4,RUSUB_5,CKB1,CKB3,CKB6,CKB9,CKB13,CKB19,CKB28;
theorems SUBSET_1,STRUCT_0,RVSUM_1,SETFAM_1,ENUMSET1,BINOP_1,CARD_1,CARD_2,FINSEQ_1,FINSEQ_3,FINSEQ_4,FUNCT_1,FUNCT_2,NAT_1,RLVECT_1,RLVECT_2,TARSKI,ZFMISC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,COMPLEX1,XCMPLX_1,FUNCOP_1,XREAL_1,XXREAL_0,FINSOP_1,CLVECT_1,CSSPACE,CONVEX1,PARTFUN1,XREAL_0,VALUED_1,ALGSTR_0,PRE_POLY,CKB1,CKB3,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes DOMAIN_1,BINOP_1,SUBSET_1,FINSEQ_1,FUNCT_2,NAT_1,XBOOLE_0;
registrations STRUCT_0,MEMBERED,XXREAL_0,CSSPACE,RLVECT_1,RELSET_1,FINSET_1,XREAL_0,SUBSET_1,XCMPLX_0,CLVECT_1,XBOOLE_0,NUMBERS,NAT_1,FUNCT_2,VALUED_1,VALUED_0,CARD_1,FINSEQ_1,CKB4,CKB7;
constructors SETFAM_1,BINOP_1,FUNCOP_1,XXREAL_0,REAL_1,FINSEQ_4,COMPLEX1,REALSET1,BINOP_2,FINSOP_1,RVSUM_1,RLVECT_2,RUSUB_5,CSSPACE,RELSET_1,CKB1,CKB3,CKB6,CKB9,CKB13,CKB19,CKB28;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve V for non  empty CLSStruct;
reserve v for (VECTOR of V);
reserve f for (Function of (the carrier of V),( COMPLEX ));
reserve L1 for (C_Linear_Combination of V);
reserve L2 for (C_Linear_Combination of V);
definition
let V being non  empty addLoopStr;
let L1 being (C_Linear_Combination of V);
let L2 being (C_Linear_Combination of V);
redefine func L1 + L2 -> (C_Linear_Combination of V) means 
:Def8: (for v being (Element of V) holds ( it . v ) = ( ( L1 . v ) + ( L2 . v ) ));
coherence
proof
reconsider f = ( L1 + L2 ) as (Element of ( Funcs ((the carrier of V),( COMPLEX )) )) by FUNCT_2:8;
now
let v being (Element of V);
assume A1: (not v in ( ( Carrier L1 ) \/ ( Carrier L2 ) ));
then (not v in ( Carrier L2 )) by XBOOLE_0:def 3;
then A2: ( L2 . v ) = ( 0 );
(not v in ( Carrier L1 )) by A1,XBOOLE_0:def 3;
then ( L1 . v ) = ( 0 );
hence ( f . v ) = ( ( 0 ) + ( 0 ) ) by A2,VALUED_1:1
.= ( 0 );
end;
hence thesis by CKB1:def 1;
end;
compatibility
proof
let f being (C_Linear_Combination of V);
thus (f = ( L1 + L2 ) implies (for v being (Element of V) holds ( f . v ) = ( ( L1 . v ) + ( L2 . v ) ))) by VALUED_1:1;
assume (for v being (Element of V) holds ( f . v ) = ( ( L1 . v ) + ( L2 . v ) ));
then A3: (for c being set holds (c in ( dom f ) implies ( f . c ) = ( ( L1 . c ) + ( L2 . c ) )));
(( dom L1 ) = (the carrier of V) & ( dom L2 ) = (the carrier of V)) by FUNCT_2:92;
then ( dom f ) = ( ( dom L1 ) /\ ( dom L2 ) ) by FUNCT_2:92;
hence f = ( L1 + L2 ) by A3,VALUED_1:def 1;
end;
end;
