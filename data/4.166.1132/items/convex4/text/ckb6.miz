environ
vocabularies NUMBERS,XBOOLE_0,STRUCT_0,SUBSET_1,FUNCT_2,FINSET_1,FUNCT_1,CARD_1,FUNCOP_1,COMPLEX1,ALGSTR_0,RLVECT_2,TARSKI,NAT_1,CLVECT_1,FINSEQ_1,VALUED_1,RELAT_1,PARTFUN1,XXREAL_0,RLVECT_1,CFUNCT_1,CARD_3,SUPINF_2,RLSUB_1,ARYTM_3,ARYTM_1,QC_LANG1,BINOP_1,ZFMISC_1,RUSUB_4,REAL_1,REALSET1,XREAL_0,ORDINAL1,XCMPLX_0,CONVEX1,SETFAM_1,CSSPACE,PROB_2,CONVEX4,PRE_POLY;
notations TARSKI,XBOOLE_0,DOMAIN_1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PRE_POLY,RELSET_1,FUNCT_2,FINSEQ_1,FINSEQ_4,ALGSTR_0,RLVECT_1,SETFAM_1,STRUCT_0,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,FINSET_1,PARTFUN1,FUNCOP_1,CARD_1,VALUED_1,XCMPLX_0,COMPLEX1,RVSUM_1,RUSUB_4,RUSUB_5,NAT_1,BINOP_1,REAL_1,RLVECT_2,CFUNCT_1,CLVECT_1,CSSPACE,REALSET1,CKB1,CKB2,CKB3;
definitions FUNCT_1,TARSKI,XBOOLE_0,BINOP_1,RELAT_1,STRUCT_0,REALSET1,FINSEQ_1,CLVECT_1,COMPLEX1,RVSUM_1,XCMPLX_0,ALGSTR_0,RUSUB_4,RUSUB_5,CKB1,CKB3;
theorems SUBSET_1,STRUCT_0,RVSUM_1,SETFAM_1,ENUMSET1,BINOP_1,CARD_1,CARD_2,FINSEQ_1,FINSEQ_3,FINSEQ_4,FUNCT_1,FUNCT_2,NAT_1,RLVECT_1,RLVECT_2,TARSKI,ZFMISC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,COMPLEX1,XCMPLX_1,FUNCOP_1,XREAL_1,XXREAL_0,FINSOP_1,CLVECT_1,CSSPACE,CONVEX1,PARTFUN1,XREAL_0,VALUED_1,ALGSTR_0,PRE_POLY,CKB1,CKB3,CKB5;
schemes DOMAIN_1,BINOP_1,SUBSET_1,FINSEQ_1,FUNCT_2,NAT_1,XBOOLE_0;
registrations STRUCT_0,MEMBERED,XXREAL_0,CSSPACE,RLVECT_1,RELSET_1,FINSET_1,XREAL_0,SUBSET_1,XCMPLX_0,CLVECT_1,XBOOLE_0,NUMBERS,NAT_1,FUNCT_2,VALUED_1,VALUED_0,CARD_1,FINSEQ_1,CKB4;
constructors SETFAM_1,BINOP_1,FUNCOP_1,XXREAL_0,REAL_1,FINSEQ_4,COMPLEX1,REALSET1,BINOP_2,FINSOP_1,RVSUM_1,RLVECT_2,RUSUB_5,CSSPACE,RELSET_1,CKB1,CKB3;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
definition
let V being non  empty addLoopStr;
func ZeroCLC V -> (C_Linear_Combination of V) means 
:Def3: ( Carrier it ) = ( {} );
existence
proof
reconsider f = ( (the carrier of V) --> ( 0c ) ) as (Element of ( Funcs ((the carrier of V),( COMPLEX )) )) by FUNCT_2:8;
f is (C_Linear_Combination of V)
proof
take ( {} V );
thus thesis by FUNCOP_1:7;
end;
then reconsider f as (C_Linear_Combination of V);
take f;
set C = { v where v is (Element of V): ( f . v ) <> ( 0c ) };
now
set x = the (Element of C);
assume C <> ( {} );
then x in C;
then (ex v being (Element of V) st (x = v & ( f . v ) <> ( 0c )));
hence contradiction by FUNCOP_1:7;
end;
hence thesis;
end;
uniqueness
proof
let L being (C_Linear_Combination of V);
let L9 being (C_Linear_Combination of V);
assume A1: (( Carrier L ) = ( {} ) & ( Carrier L9 ) = ( {} ));
now
let x being set;
assume x in (the carrier of V);
then reconsider v = x as (Element of V);
A2: (( L9 . v ) <> ( 0c ) implies v in { u where u is (Element of V): ( L9 . u ) <> ( 0c ) });
(( L . v ) <> ( 0c ) implies v in { u where u is (Element of V): ( L . u ) <> ( 0c ) });
hence ( L . x ) = ( L9 . x ) by A1,A2;
end;
hence L = L9 by FUNCT_2:12;
end;
end;
