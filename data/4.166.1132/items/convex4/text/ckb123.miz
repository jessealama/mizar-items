environ
vocabularies NUMBERS,XBOOLE_0,STRUCT_0,SUBSET_1,FUNCT_2,FINSET_1,FUNCT_1,CARD_1,FUNCOP_1,COMPLEX1,ALGSTR_0,RLVECT_2,TARSKI,NAT_1,CLVECT_1,FINSEQ_1,VALUED_1,RELAT_1,PARTFUN1,XXREAL_0,RLVECT_1,CFUNCT_1,CARD_3,SUPINF_2,RLSUB_1,ARYTM_3,ARYTM_1,QC_LANG1,BINOP_1,ZFMISC_1,RUSUB_4,REAL_1,REALSET1,XREAL_0,ORDINAL1,XCMPLX_0,CONVEX1,SETFAM_1,CSSPACE,PROB_2,CONVEX4,PRE_POLY;
notations TARSKI,XBOOLE_0,DOMAIN_1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PRE_POLY,RELSET_1,FUNCT_2,FINSEQ_1,FINSEQ_4,ALGSTR_0,RLVECT_1,SETFAM_1,STRUCT_0,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,FINSET_1,PARTFUN1,FUNCOP_1,CARD_1,VALUED_1,XCMPLX_0,COMPLEX1,RVSUM_1,RUSUB_4,RUSUB_5,NAT_1,BINOP_1,REAL_1,RLVECT_2,CFUNCT_1,CLVECT_1,CSSPACE,REALSET1,CKB1,CKB2,CKB3,CKB6,CKB9,CKB13,CKB19,CKB28,CKB29,CKB32,CKB36,CKB44,CKB48,CKB53,CKB55,CKB56,CKB57,CKB58,CKB59,CKB65,CKB66,CKB68,CKB69,CKB77,CKB78,CKB117;
definitions FUNCT_1,TARSKI,XBOOLE_0,BINOP_1,RELAT_1,STRUCT_0,REALSET1,FINSEQ_1,CLVECT_1,COMPLEX1,RVSUM_1,XCMPLX_0,ALGSTR_0,RUSUB_4,RUSUB_5,CKB1,CKB3,CKB6,CKB9,CKB13,CKB19,CKB28,CKB29,CKB36,CKB44,CKB48,CKB53,CKB55,CKB56,CKB57,CKB58,CKB59,CKB65,CKB66,CKB68,CKB69,CKB77,CKB78,CKB117;
theorems SUBSET_1,STRUCT_0,RVSUM_1,SETFAM_1,ENUMSET1,BINOP_1,CARD_1,CARD_2,FINSEQ_1,FINSEQ_3,FINSEQ_4,FUNCT_1,FUNCT_2,NAT_1,RLVECT_1,RLVECT_2,TARSKI,ZFMISC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,COMPLEX1,XCMPLX_1,FUNCOP_1,XREAL_1,XXREAL_0,FINSOP_1,CLVECT_1,CSSPACE,CONVEX1,PARTFUN1,XREAL_0,VALUED_1,ALGSTR_0,PRE_POLY,CKB1,CKB3,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB55,CKB56,CKB57,CKB58,CKB59,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB68,CKB69,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB103,CKB104,CKB107,CKB108,CKB109,CKB110,CKB111,CKB112,CKB113,CKB114,CKB115,CKB116,CKB117,CKB118,CKB119,CKB120,CKB121,CKB122;
schemes DOMAIN_1,BINOP_1,SUBSET_1,FINSEQ_1,FUNCT_2,NAT_1,XBOOLE_0;
registrations STRUCT_0,MEMBERED,XXREAL_0,CSSPACE,RLVECT_1,RELSET_1,FINSET_1,XREAL_0,SUBSET_1,XCMPLX_0,CLVECT_1,XBOOLE_0,NUMBERS,NAT_1,FUNCT_2,VALUED_1,VALUED_0,CARD_1,FINSEQ_1,CKB4,CKB7,CKB54,CKB60,CKB67,CKB70,CKB71,CKB72,CKB73,CKB105,CKB106;
constructors SETFAM_1,BINOP_1,FUNCOP_1,XXREAL_0,REAL_1,FINSEQ_4,COMPLEX1,REALSET1,BINOP_2,FINSOP_1,RVSUM_1,RLVECT_2,RUSUB_5,CSSPACE,RELSET_1,CKB1,CKB3,CKB6,CKB9,CKB13,CKB19,CKB28,CKB29,CKB32,CKB36,CKB44,CKB48,CKB53,CKB55,CKB56,CKB57,CKB58,CKB59,CKB65,CKB66,CKB68,CKB69,CKB77,CKB78,CKB117;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve V for non  empty CLSStruct;
reserve v1 for (VECTOR of V);
reserve v2 for (VECTOR of V);
reserve v3 for (VECTOR of V);
reserve F for (FinSequence of (the carrier of V));
reserve L for (C_Linear_Combination of V);
theorem
Lm3: (for V being ComplexLinearSpace holds (for v1,v2,v3 being (VECTOR of V) holds (for L being (C_Linear_Combination of { v1,v2,v3 }) holds (((v1 <> v2 & v2 <> v3) & v3 <> v1) implies ( Sum L ) = ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( L . v3 ) * v3 ) )))))
proof
let V being ComplexLinearSpace;
let v1 being (VECTOR of V);
let v2 being (VECTOR of V);
let v3 being (VECTOR of V);
let L being (C_Linear_Combination of { v1,v2,v3 });
assume that
A1: v1 <> v2
and
A2: v2 <> v3
and
A3: v3 <> v1;
A4: ( Carrier L ) c= { v1,v2,v3 } by CKB9:def 1;
per cases  by A4,ZFMISC_1:118;
suppose ( Carrier L ) = ( {} );

then A5: L = ( ZeroCLC V ) by CKB6:def 1;
then ( Sum L ) = ( 0. V ) by CKB20:1
.= ( ( 0. V ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( 0. V ) + ( 0. V ) ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( ( 0c ) * v1 ) + ( 0. V ) ) + ( 0. V ) ) by CLVECT_1:1
.= ( ( ( ( 0c ) * v1 ) + ( ( 0c ) * v2 ) ) + ( 0. V ) ) by CLVECT_1:1
.= ( ( ( ( 0c ) * v1 ) + ( ( 0c ) * v2 ) ) + ( ( 0c ) * v3 ) ) by CLVECT_1:1
.= ( ( ( ( L . v1 ) * v1 ) + ( ( 0c ) * v2 ) ) + ( ( 0c ) * v3 ) ) by A5,CKB8:1
.= ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( 0c ) * v3 ) ) by A5,CKB8:1
.= ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) by A5,CKB8:1;
hence thesis;
end;
suppose A6: ( Carrier L ) = { v1 };

then reconsider L as (C_Linear_Combination of { v1 }) by CKB9:def 1;
A7: (not v2 in ( Carrier L )) by A1,A6,TARSKI:def 1;
A8: (not v3 in ( Carrier L )) by A3,A6,TARSKI:def 1;
( Sum L ) = ( ( L . v1 ) * v1 ) by CKB23:1
.= ( ( ( L . v1 ) * v1 ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( ( L . v1 ) * v1 ) + ( 0. V ) ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( ( L . v1 ) * v1 ) + ( ( 0c ) * v2 ) ) + ( 0. V ) ) by CLVECT_1:1
.= ( ( ( ( L . v1 ) * v1 ) + ( ( 0c ) * v2 ) ) + ( ( 0c ) * v3 ) ) by CLVECT_1:1
.= ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( 0c ) * v3 ) ) by A7
.= ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) by A8;
hence thesis;
end;
suppose A9: ( Carrier L ) = { v2 };

then reconsider L as (C_Linear_Combination of { v2 }) by CKB9:def 1;
A10: (not v1 in ( Carrier L )) by A1,A9,TARSKI:def 1;
A11: (not v3 in ( Carrier L )) by A2,A9,TARSKI:def 1;
( Sum L ) = ( ( L . v2 ) * v2 ) by CKB23:1
.= ( ( 0. V ) + ( ( L . v2 ) * v2 ) ) by RLVECT_1:4
.= ( ( ( 0. V ) + ( ( L . v2 ) * v2 ) ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( ( 0c ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( 0. V ) ) by CLVECT_1:1
.= ( ( ( ( 0c ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( 0c ) * v3 ) ) by CLVECT_1:1
.= ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( 0c ) * v3 ) ) by A10
.= ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) by A11;
hence thesis;
end;
suppose A12: ( Carrier L ) = { v3 };

then reconsider L as (C_Linear_Combination of { v3 }) by CKB9:def 1;
A13: (not v1 in ( Carrier L )) by A3,A12,TARSKI:def 1;
A14: (not v2 in ( Carrier L )) by A2,A12,TARSKI:def 1;
( Sum L ) = ( ( L . v3 ) * v3 ) by CKB23:1
.= ( ( 0. V ) + ( ( L . v3 ) * v3 ) ) by RLVECT_1:4
.= ( ( ( 0. V ) + ( 0. V ) ) + ( ( L . v3 ) * v3 ) ) by RLVECT_1:4
.= ( ( ( ( 0c ) * v1 ) + ( 0. V ) ) + ( ( L . v3 ) * v3 ) ) by CLVECT_1:1
.= ( ( ( ( 0c ) * v1 ) + ( ( 0c ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) by CLVECT_1:1
.= ( ( ( ( L . v1 ) * v1 ) + ( ( 0c ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) by A13
.= ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) by A14;
hence thesis;
end;
suppose A15: ( Carrier L ) = { v1,v2 };

then A16: ( Sum L ) = ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) by A1,CKB27:1
.= ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( 0c ) * v3 ) ) by CLVECT_1:1;
(not v3 in ( Carrier L )) by A2,A3,A15,TARSKI:def 2;
hence thesis by A16;
end;
suppose A17: ( Carrier L ) = { v1,v3 };

then A18: ( Sum L ) = ( ( ( L . v1 ) * v1 ) + ( ( L . v3 ) * v3 ) ) by A3,CKB27:1
.= ( ( ( ( L . v1 ) * v1 ) + ( 0. V ) ) + ( ( L . v3 ) * v3 ) ) by RLVECT_1:4
.= ( ( ( ( L . v1 ) * v1 ) + ( ( 0c ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) by CLVECT_1:1;
(not v2 in ( Carrier L )) by A1,A2,A17,TARSKI:def 2;
hence thesis by A18;
end;
suppose A19: ( Carrier L ) = { v2,v3 };

then A20: ( Sum L ) = ( ( ( L . v2 ) * v2 ) + ( ( L . v3 ) * v3 ) ) by A2,CKB27:1
.= ( ( ( 0. V ) + ( ( L . v2 ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) by RLVECT_1:4
.= ( ( ( ( 0c ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) by CLVECT_1:1;
(not v1 in ( Carrier L )) by A1,A3,A19,TARSKI:def 2;
hence thesis by A20;
end;
suppose ( Carrier L ) = { v1,v2,v3 };

then consider F being (FinSequence of (the carrier of V)) such that A21: (F is  one-to-one & ( rng F ) = { v1,v2,v3 }) and A22: ( Sum L ) = ( Sum ( L (#) F ) ) by CKB19:def 1;
(((((F = <* v1,v2,v3 *> or F = <* v1,v3,v2 *>) or F = <* v2,v1,v3 *>) or F = <* v2,v3,v1 *>) or F = <* v3,v1,v2 *>) or F = <* v3,v2,v1 *>) by A1,A2,A3,A21,CONVEX1:31;
then (((((( L (#) F ) = <* ( ( L . v1 ) * v1 ),( ( L . v2 ) * v2 ),( ( L . v3 ) * v3 ) *> or ( L (#) F ) = <* ( ( L . v1 ) * v1 ),( ( L . v3 ) * v3 ),( ( L . v2 ) * v2 ) *>) or ( L (#) F ) = <* ( ( L . v2 ) * v2 ),( ( L . v1 ) * v1 ),( ( L . v3 ) * v3 ) *>) or ( L (#) F ) = <* ( ( L . v2 ) * v2 ),( ( L . v3 ) * v3 ),( ( L . v1 ) * v1 ) *>) or ( L (#) F ) = <* ( ( L . v3 ) * v3 ),( ( L . v1 ) * v1 ),( ( L . v2 ) * v2 ) *>) or ( L (#) F ) = <* ( ( L . v3 ) * v3 ),( ( L . v2 ) * v2 ),( ( L . v1 ) * v1 ) *>) by CKB18:1;
then ((( Sum L ) = ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) or ( Sum L ) = ( ( ( L . v1 ) * v1 ) + ( ( ( L . v2 ) * v2 ) + ( ( L . v3 ) * v3 ) ) )) or ( Sum L ) = ( ( ( L . v2 ) * v2 ) + ( ( ( L . v1 ) * v1 ) + ( ( L . v3 ) * v3 ) ) )) by A22,RLVECT_1:46;
hence thesis by RLVECT_1:def 3;
end;
end;
