environ
vocabularies NUMBERS,NAT_1,INT_1,XXREAL_0,ARYTM_3,RADIX_1,POWER,RELAT_1,RADIX_3,ARYTM_1,SUBSET_1,FINSEQ_1,NEWTON,CARD_1,FINSEQ_2,TARSKI,FUNCT_1,ORDINAL4,PARTFUN1,CARD_3,RADIX_4;
notations TARSKI,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,NAT_1,NAT_D,FUNCT_1,PARTFUN1,NEWTON,POWER,XXREAL_0,FINSEQ_1,FINSEQ_2,GR_CY_1,RADIX_1,RADIX_3;
definitions RADIX_1;
theorems RADIX_1,POWER,NAT_1,INT_1,FINSEQ_1,FINSEQ_2,NEWTON,RVSUM_1,PREPOWER,JORDAN12,EULER_2,RADIX_3,XREAL_1,XXREAL_0,NAT_D,ORDINAL1,PARTFUN1,XREAL_0,CARD_1;
schemes FINSEQ_2,NAT_1;
registrations RELSET_1,NUMBERS,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,FINSEQ_2,CARD_1;
constructors REAL_1,NAT_D,NEWTON,POWER,BINARITH,GR_CY_1,RADIX_3;
requirements REAL,SUBSET,BOOLE,NUMERALS,ARITHM;
begin
reserve k for Nat;
theorem
Th1: (2 <= k implies 2 < ( Radix k ))
proof
defpred P[ Nat ]
 means
2 < ( Radix $1 );
A1: (for kk being Nat holds ((kk >= 2 & P[ kk ]) implies P[ ( kk + 1 ) ]))
proof
let kk being Nat;
assume that
2 <= kk
and
A2: 2 < ( Radix kk );
A3: ( Radix ( kk + 1 ) ) = ( ( 2 to_power 1 ) * ( 2 to_power kk ) ) by POWER:27
.= ( 2 * ( Radix kk ) ) by POWER:25;
( Radix kk ) > 1 by A2,XXREAL_0:2;
hence thesis by A3,XREAL_1:155;
end;
( Radix 2 ) = ( 2 to_power ( 1 + 1 ) )
.= ( ( 2 to_power 1 ) * ( 2 to_power 1 ) ) by POWER:27
.= ( 2 * ( 2 to_power 1 ) ) by POWER:25
.= ( 2 * 2 ) by POWER:25
.= 4;
then A4: P[ 2 ];
(for k being Nat holds (2 <= k implies P[ k ])) from NAT_1:sch 8(A4,A1);
hence thesis;
end;
