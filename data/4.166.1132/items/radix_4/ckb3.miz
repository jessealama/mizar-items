environ
vocabularies NUMBERS,NAT_1,INT_1,XXREAL_0,ARYTM_3,RADIX_1,POWER,RELAT_1,RADIX_3,ARYTM_1,SUBSET_1,FINSEQ_1,NEWTON,CARD_1,FINSEQ_2,TARSKI,FUNCT_1,ORDINAL4,PARTFUN1,CARD_3,RADIX_4;
notations TARSKI,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,NAT_1,NAT_D,FUNCT_1,PARTFUN1,NEWTON,POWER,XXREAL_0,FINSEQ_1,FINSEQ_2,GR_CY_1,RADIX_1,RADIX_3;
definitions RADIX_1;
theorems RADIX_1,POWER,NAT_1,INT_1,FINSEQ_1,FINSEQ_2,NEWTON,RVSUM_1,PREPOWER,JORDAN12,EULER_2,RADIX_3,XREAL_1,XXREAL_0,NAT_D,ORDINAL1,PARTFUN1,XREAL_0,CARD_1,CKB1,CKB2;
schemes FINSEQ_2,NAT_1;
registrations RELSET_1,NUMBERS,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,FINSEQ_2,CARD_1;
constructors REAL_1,NAT_D,NEWTON,POWER,BINARITH,GR_CY_1,RADIX_3;
requirements REAL,SUBSET,BOOLE,NUMERALS,ARITHM;
begin
reserve i for Nat;
reserve n for Nat;
reserve m for Nat;
reserve k for Nat;
theorem
Lm2: (for i holds (i in ( Seg n ) implies ( DigA (( DecSD (m,( n + 1 ),k) ),i) ) = ( DigA (( DecSD (m,n,k) ),i) )))
proof
let i;
assume A1: i in ( Seg n );
then i <= n by FINSEQ_1:1;
then A2: i <= ( n + 1 ) by NAT_1:12;
1 <= i by A1,FINSEQ_1:1;
then A3: i in ( Seg ( n + 1 ) ) by A2,FINSEQ_1:1;
( DigA (( DecSD (m,n,k) ),i) ) = ( DigitDC (m,i,k) ) by A1,RADIX_1:def 9
.= ( DigA (( DecSD (m,( n + 1 ),k) ),i) ) by A3,RADIX_1:def 9;
hence thesis;
end;
