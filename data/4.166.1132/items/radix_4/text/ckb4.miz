environ
vocabularies NUMBERS,NAT_1,INT_1,XXREAL_0,ARYTM_3,RADIX_1,POWER,RELAT_1,RADIX_3,ARYTM_1,SUBSET_1,FINSEQ_1,NEWTON,CARD_1,FINSEQ_2,TARSKI,FUNCT_1,ORDINAL4,PARTFUN1,CARD_3,RADIX_4;
notations TARSKI,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,NAT_1,NAT_D,FUNCT_1,PARTFUN1,NEWTON,POWER,XXREAL_0,FINSEQ_1,FINSEQ_2,GR_CY_1,RADIX_1,RADIX_3;
definitions RADIX_1;
theorems RADIX_1,POWER,NAT_1,INT_1,FINSEQ_1,FINSEQ_2,NEWTON,RVSUM_1,PREPOWER,JORDAN12,EULER_2,RADIX_3,XREAL_1,XXREAL_0,NAT_D,ORDINAL1,PARTFUN1,XREAL_0,CARD_1,CKB1,CKB2,CKB3;
schemes FINSEQ_2,NAT_1;
registrations RELSET_1,NUMBERS,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,FINSEQ_2,CARD_1;
constructors REAL_1,NAT_D,NEWTON,POWER,BINARITH,GR_CY_1,RADIX_3;
requirements REAL,SUBSET,BOOLE,NUMERALS,ARITHM;
begin
theorem
Lm3: (for k,x,n being Nat holds (n >= 1 implies ( DigA (( DecSD (( x mod ( ( Radix k ) |^ n ) ),n,k) ),n) ) = ( DigA (( DecSD (x,n,k) ),n) )))
proof
let k being Nat,x being Nat,n being Nat;
set xn = ( x mod ( ( Radix k ) |^ n ) );
assume n >= 1;
then n <> ( 0 );
then A1: n in ( Seg n ) by FINSEQ_1:3;
then ( DigA (( DecSD (xn,n,k) ),n) ) = ( DigitDC (xn,n,k) ) by RADIX_1:def 9
.= ( DigitDC (x,n,k) ) by EULER_2:5
.= ( DigA (( DecSD (x,n,k) ),n) ) by A1,RADIX_1:def 9;
hence thesis;
end;
