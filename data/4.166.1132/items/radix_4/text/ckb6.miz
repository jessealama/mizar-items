environ
vocabularies NUMBERS,NAT_1,INT_1,XXREAL_0,ARYTM_3,RADIX_1,POWER,RELAT_1,RADIX_3,ARYTM_1,SUBSET_1,FINSEQ_1,NEWTON,CARD_1,FINSEQ_2,TARSKI,FUNCT_1,ORDINAL4,PARTFUN1,CARD_3,RADIX_4;
notations TARSKI,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,NAT_1,NAT_D,FUNCT_1,PARTFUN1,NEWTON,POWER,XXREAL_0,FINSEQ_1,FINSEQ_2,GR_CY_1,RADIX_1,RADIX_3;
definitions RADIX_1;
theorems RADIX_1,POWER,NAT_1,INT_1,FINSEQ_1,FINSEQ_2,NEWTON,RVSUM_1,PREPOWER,JORDAN12,EULER_2,RADIX_3,XREAL_1,XXREAL_0,NAT_D,ORDINAL1,PARTFUN1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5;
schemes FINSEQ_2,NAT_1;
registrations RELSET_1,NUMBERS,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,FINSEQ_2,CARD_1;
constructors REAL_1,NAT_D,NEWTON,POWER,BINARITH,GR_CY_1,RADIX_3;
requirements REAL,SUBSET,BOOLE,NUMERALS,ARITHM;
begin
reserve n for Nat;
reserve m for Nat;
reserve k for Nat;
theorem
Th3: (2 <= k implies ( DigA_SDSub (( SD2SDSub ( DecSD (m,n,k) ) ),( n + 1 )) ) = ( SDSub_Add_Carry (( DigA (( DecSD (m,n,k) ),n) ),k) ))
proof
assume A1: 2 <= k;
( 0 ) <= n by NAT_1:2;
then ( ( 0 ) + 1 ) <= ( n + 1 ) by XREAL_1:7;
then A2: ( n + 1 ) in ( Seg ( n + 1 ) ) by FINSEQ_1:1;
hence ( DigA_SDSub (( SD2SDSub ( DecSD (m,n,k) ) ),( n + 1 )) ) = ( SD2SDSubDigitS (( DecSD (m,n,k) ),( n + 1 ),k) ) by RADIX_3:def 8
.= ( SD2SDSubDigit (( DecSD (m,n,k) ),( n + 1 ),k) ) by A1,A2,RADIX_3:def 7
.= ( SDSub_Add_Carry (( DigA (( DecSD (m,n,k) ),( ( n + 1 ) -' 1 )) ),k) ) by RADIX_3:def 6
.= ( SDSub_Add_Carry (( DigA (( DecSD (m,n,k) ),n) ),k) ) by NAT_D:34;
end;
