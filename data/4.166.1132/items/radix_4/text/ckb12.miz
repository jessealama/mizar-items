environ
vocabularies NUMBERS,NAT_1,INT_1,XXREAL_0,ARYTM_3,RADIX_1,POWER,RELAT_1,RADIX_3,ARYTM_1,SUBSET_1,FINSEQ_1,NEWTON,CARD_1,FINSEQ_2,TARSKI,FUNCT_1,ORDINAL4,PARTFUN1,CARD_3,RADIX_4;
notations TARSKI,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,NAT_1,NAT_D,FUNCT_1,PARTFUN1,NEWTON,POWER,XXREAL_0,FINSEQ_1,FINSEQ_2,GR_CY_1,RADIX_1,RADIX_3,CKB11;
definitions RADIX_1,CKB11;
theorems RADIX_1,POWER,NAT_1,INT_1,FINSEQ_1,FINSEQ_2,NEWTON,RVSUM_1,PREPOWER,JORDAN12,EULER_2,RADIX_3,XREAL_1,XXREAL_0,NAT_D,ORDINAL1,PARTFUN1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11;
schemes FINSEQ_2,NAT_1;
registrations RELSET_1,NUMBERS,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,FINSEQ_2,CARD_1;
constructors REAL_1,NAT_D,NEWTON,POWER,BINARITH,GR_CY_1,RADIX_3,CKB11;
requirements REAL,SUBSET,BOOLE,NUMERALS,ARITHM;
begin
reserve i for Nat;
reserve n for Nat;
reserve k for Nat;
reserve x for Nat;
reserve y for Nat;
definition
let n being Nat;
let k being Nat;
let x being (Tuple of n,( k -SD_Sub ));
let y being (Tuple of n,( k -SD_Sub ));
func x '+' y -> (Tuple of n,( k -SD_Sub )) means 
:Def2: (for i holds (i in ( Seg n ) implies ( DigA_SDSub (it,i) ) = ( SDSubAddDigit (x,y,i,k) )));
existence
proof
deffunc F(Nat) = ( SDSubAddDigit (x,y,$1,k) );
consider z being (FinSequence of ( k -SD_Sub )) such that A1: ( len z ) = n and A2: (for j being Nat holds (j in ( dom z ) implies ( z . j ) = F(j))) from FINSEQ_2:sch 1;
A3: ( dom z ) = ( Seg n ) by A1,FINSEQ_1:def 3;
z is (Element of ( n -tuples_on ( k -SD_Sub ) )) by A1,FINSEQ_2:92;
then reconsider z as (Tuple of n,( k -SD_Sub ));
take z;
let i;
assume A4: i in ( Seg n );
hence ( DigA_SDSub (z,i) ) = ( z . i ) by RADIX_3:def 5
.= ( SDSubAddDigit (x,y,i,k) ) by A2,A3,A4;
end;
uniqueness
proof
let k1 being (Tuple of n,( k -SD_Sub ));
let k2 being (Tuple of n,( k -SD_Sub ));
assume that
A5: (for i being Nat holds (i in ( Seg n ) implies ( DigA_SDSub (k1,i) ) = ( SDSubAddDigit (x,y,i,k) )))
and
A6: (for i being Nat holds (i in ( Seg n ) implies ( DigA_SDSub (k2,i) ) = ( SDSubAddDigit (x,y,i,k) )));
A7: ( len k1 ) = n by CARD_1:def 7;
then A8: ( dom k1 ) = ( Seg n ) by FINSEQ_1:def 3;
A9:now
let j being Nat;
assume A10: j in ( dom k1 );
then ( k1 . j ) = ( DigA_SDSub (k1,j) ) by A8,RADIX_3:def 5
.= ( SDSubAddDigit (x,y,j,k) ) by A5,A8,A10
.= ( DigA_SDSub (k2,j) ) by A6,A8,A10
.= ( k2 . j ) by A8,A10,RADIX_3:def 5;
hence ( k1 . j ) = ( k2 . j );
end;
( len k2 ) = n by CARD_1:def 7;
hence thesis by A7,A9,FINSEQ_2:9;
end;
end;
