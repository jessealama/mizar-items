environ
vocabularies NUMBERS,NAT_1,INT_1,XXREAL_0,ARYTM_3,RADIX_1,POWER,RELAT_1,RADIX_3,ARYTM_1,SUBSET_1,FINSEQ_1,NEWTON,CARD_1,FINSEQ_2,TARSKI,FUNCT_1,ORDINAL4,PARTFUN1,CARD_3,RADIX_4;
notations TARSKI,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,NAT_1,NAT_D,FUNCT_1,PARTFUN1,NEWTON,POWER,XXREAL_0,FINSEQ_1,FINSEQ_2,GR_CY_1,RADIX_1,RADIX_3;
definitions RADIX_1;
theorems RADIX_1,POWER,NAT_1,INT_1,FINSEQ_1,FINSEQ_2,NEWTON,RVSUM_1,PREPOWER,JORDAN12,EULER_2,RADIX_3,XREAL_1,XXREAL_0,NAT_D,ORDINAL1,PARTFUN1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8;
schemes FINSEQ_2,NAT_1;
registrations RELSET_1,NUMBERS,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,FINSEQ_2,CARD_1;
constructors REAL_1,NAT_D,NEWTON,POWER,BINARITH,GR_CY_1,RADIX_3;
requirements REAL,SUBSET,BOOLE,NUMERALS,ARITHM;
begin
reserve m for Nat;
reserve k for Nat;
theorem
Th6: ((2 <= k & m is_represented_by 1,k) implies ( DigA_SDSub (( SD2SDSub ( DecSD (m,1,k) ) ),1) ) = ( m - ( ( SDSub_Add_Carry (m,k) ) * ( Radix k ) ) ))
proof
assume that
A1: 2 <= k
and
A2: m is_represented_by 1,k;
A3: 1 in ( Seg 1 ) by FINSEQ_1:3;
A4: 1 in ( Seg ( 1 + 1 ) ) by FINSEQ_1:1;
then ( DigA_SDSub (( SD2SDSub ( DecSD (m,1,k) ) ),1) ) = ( SD2SDSubDigitS (( DecSD (m,1,k) ),1,k) ) by RADIX_3:def 8
.= ( SD2SDSubDigit (( DecSD (m,1,k) ),1,k) ) by A1,A4,RADIX_3:def 7;
hence ( DigA_SDSub (( SD2SDSub ( DecSD (m,1,k) ) ),1) ) = ( ( SDSub_Add_Data (( DigA (( DecSD (m,1,k) ),1) ),k) ) + ( SDSub_Add_Carry (( DigA (( DecSD (m,1,k) ),( 1 -' 1 )) ),k) ) ) by A3,RADIX_3:def 6
.= ( ( SDSub_Add_Data (( DigA (( DecSD (m,1,k) ),1) ),k) ) + ( SDSub_Add_Carry (( DigA (( DecSD (m,1,k) ),( 0 )) ),k) ) ) by XREAL_1:232
.= ( ( SDSub_Add_Data (( DigA (( DecSD (m,1,k) ),1) ),k) ) + ( SDSub_Add_Carry (( 0 ),k) ) ) by RADIX_1:def 3
.= ( ( SDSub_Add_Data (m,k) ) + ( SDSub_Add_Carry (( 0 ),k) ) ) by A2,RADIX_1:21
.= ( ( SDSub_Add_Data (m,k) ) + ( 0 ) ) by RADIX_3:16
.= ( m - ( ( SDSub_Add_Carry (m,k) ) * ( Radix k ) ) ) by RADIX_3:def 4;
end;
