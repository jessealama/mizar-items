environ
vocabularies XBOOLE_0,TARSKI,RELAT_1,PARTFUN1,MCART_1,ZFMISC_1,FUNCT_1,FUNCT_3,SUBSET_1,WAYBEL_0,ORDERS_2,LATTICES,LATTICE3,YELLOW_0,ORDINAL2,EQREL_1,RELAT_2,WAYBEL_3,WAYBEL_2,STRUCT_0,WELLORD1,WAYBEL11,XXREAL_0,REWRITE1,SETFAM_1,PRE_TOPC,RLVECT_3,CANTOR_1,RCOMP_1,CONNSP_2,TOPS_1,TOPS_2,T_0TOPSP,COMPTS_1,YELLOW_9,FUNCT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,MCART_1,FUNCT_3,DOMAIN_1,STRUCT_0,PRE_TOPC,TOPS_1,TOPS_2,COMPTS_1,CANTOR_1,CONNSP_2,BORSUK_1,BORSUK_2,T_0TOPSP,WELLORD1,ORDERS_2,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_3,YELLOW_4,WAYBEL_2,WAYBEL_3,YELLOW_8,WAYBEL11,YELLOW_9;
definitions TARSKI,FUNCT_1,PRE_TOPC,COMPTS_1,TOPS_2,CONNSP_2,BORSUK_1,T_0TOPSP,LATTICE3,YELLOW_0,WAYBEL_0,WAYBEL_2,WAYBEL_3,WAYBEL11,YELLOW_9,XBOOLE_0,SUBSET_1,BINOP_1,STRUCT_0;
theorems FUNCT_1,FUNCT_2,FUNCT_3,RELAT_1,TOPS_1,TOPS_2,TOPS_3,PRE_TOPC,CONNSP_2,BORSUK_1,ZFMISC_1,TARSKI,ORDERS_2,LATTICE3,YELLOW_0,YELLOW_2,YELLOW_3,YELLOW_4,WAYBEL_0,WAYBEL_1,WAYBEL_2,YELLOW_7,YELLOW_8,YELLOW_9,WAYBEL_8,WAYBEL_3,TEX_2,SETFAM_1,CANTOR_1,BORSUK_2,XBOOLE_0,XBOOLE_1,EQREL_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,BORSUK_1,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_3,YELLOW_4,WAYBEL_2,WAYBEL_3,YELLOW_9,PRE_TOPC,EQREL_1,TOPS_1,BORSUK_2,FUNCT_2,CKB1,CKB9;
constructors SETFAM_1,TOLER_1,TOPS_1,TOPS_2,T_0TOPSP,CANTOR_1,BORSUK_2,ORDERS_3,YELLOW_4,WAYBEL_3,YELLOW_8,WAYBEL11,YELLOW_9,CONNSP_2,DOMAIN_1,COMPTS_1,WAYBEL_2;
requirements SUBSET,BOOLE;
begin
reserve A for set;
theorem
(for L1,L2 being non  empty RelStr holds (for A being (SubRelStr of L1) holds (for J being (SubRelStr of L2) holds (((( the RelStr of L1 ) = ( the RelStr of L2 ) & ( the RelStr of A ) = ( the RelStr of J )) & A is  meet-inheriting) implies J is  meet-inheriting))))
proof
let L1 being non  empty RelStr;
let L2 being non  empty RelStr;
let A being (SubRelStr of L1);
let J being (SubRelStr of L2);
assume that
A1: ( the RelStr of L1 ) = ( the RelStr of L2 )
and
A2: ( the RelStr of A ) = ( the RelStr of J )
and
A3: (for x,y being (Element of L1) holds (((x in (the carrier of A) & y in (the carrier of A)) &  ex_inf_of { x,y },L1) implies ( inf { x,y } ) in (the carrier of A)));
let x being (Element of L2);
let y being (Element of L2);
assume that
A4: (x in (the carrier of J) & y in (the carrier of J))
and
A5:  ex_inf_of { x,y },L2;
reconsider x1 = x,y1 = y as (Element of L1) by A1;
( inf { x1,y1 } ) in (the carrier of A) by A1,A2,A3,A4,A5,YELLOW_0:14;
hence thesis by A1,A2,A5,YELLOW_0:27;
end;
