environ
vocabularies XBOOLE_0,TARSKI,RELAT_1,PARTFUN1,MCART_1,ZFMISC_1,FUNCT_1,FUNCT_3,SUBSET_1,WAYBEL_0,ORDERS_2,LATTICES,LATTICE3,YELLOW_0,ORDINAL2,EQREL_1,RELAT_2,WAYBEL_3,WAYBEL_2,STRUCT_0,WELLORD1,WAYBEL11,XXREAL_0,REWRITE1,SETFAM_1,PRE_TOPC,RLVECT_3,CANTOR_1,RCOMP_1,CONNSP_2,TOPS_1,TOPS_2,T_0TOPSP,COMPTS_1,YELLOW_9,FUNCT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,MCART_1,FUNCT_3,DOMAIN_1,STRUCT_0,PRE_TOPC,TOPS_1,TOPS_2,COMPTS_1,CANTOR_1,CONNSP_2,BORSUK_1,BORSUK_2,T_0TOPSP,WELLORD1,ORDERS_2,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_3,YELLOW_4,WAYBEL_2,WAYBEL_3,YELLOW_8,WAYBEL11,YELLOW_9;
definitions TARSKI,FUNCT_1,PRE_TOPC,COMPTS_1,TOPS_2,CONNSP_2,BORSUK_1,T_0TOPSP,LATTICE3,YELLOW_0,WAYBEL_0,WAYBEL_2,WAYBEL_3,WAYBEL11,YELLOW_9,XBOOLE_0,SUBSET_1,BINOP_1,STRUCT_0;
theorems FUNCT_1,FUNCT_2,FUNCT_3,RELAT_1,TOPS_1,TOPS_2,TOPS_3,PRE_TOPC,CONNSP_2,BORSUK_1,ZFMISC_1,TARSKI,ORDERS_2,LATTICE3,YELLOW_0,YELLOW_2,YELLOW_3,YELLOW_4,WAYBEL_0,WAYBEL_1,WAYBEL_2,YELLOW_7,YELLOW_8,YELLOW_9,WAYBEL_8,WAYBEL_3,TEX_2,SETFAM_1,CANTOR_1,BORSUK_2,XBOOLE_0,XBOOLE_1,EQREL_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,BORSUK_1,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_3,YELLOW_4,WAYBEL_2,WAYBEL_3,YELLOW_9,PRE_TOPC,EQREL_1,TOPS_1,BORSUK_2,FUNCT_2,CKB1,CKB9;
constructors SETFAM_1,TOLER_1,TOPS_1,TOPS_2,T_0TOPSP,CANTOR_1,BORSUK_2,ORDERS_3,YELLOW_4,WAYBEL_3,YELLOW_8,WAYBEL11,YELLOW_9,CONNSP_2,DOMAIN_1,COMPTS_1,WAYBEL_2;
requirements SUBSET,BOOLE;
begin
theorem
(for L1 being  up-complete  antisymmetric non empty  reflexive RelStr holds (for L2 being non empty  reflexive RelStr holds (for X being (Subset of L1) holds (for Y being (Subset of L2) holds (((( the RelStr of L1 ) = ( the RelStr of L2 ) & X = Y) & X is  property(S)) implies Y is  property(S))))))
proof
let L1 being  up-complete  antisymmetric non empty  reflexive RelStr;
let L2 being non empty  reflexive RelStr;
let X being (Subset of L1);
let Y being (Subset of L2);
assume that
A1: ( the RelStr of L1 ) = ( the RelStr of L2 )
and
A2: X = Y
and
A3: (for D being non empty  directed (Subset of L1) holds (( sup D ) in X implies (ex y being (Element of L1) st (y in D & (for x being (Element of L1) holds ((x in D & x >= y) implies x in X))))));
let E being non empty  directed (Subset of L2);
assume that
A4: ( sup E ) in Y;
reconsider D = E as non empty  directed (Subset of L1) by A1,WAYBEL_0:3;
 ex_sup_of D,L1 by WAYBEL_0:75;
then ( sup D ) in X by A1,A2,A4,YELLOW_0:26;
then consider y being (Element of L1) such that A5: y in D and A6: (for x being (Element of L1) holds ((x in D & x >= y) implies x in X)) by A3;
reconsider y2 = y as (Element of L2) by A1;
take y2;
thus y2 in E by A5;
let x2 being (Element of L2);
assume (x2 in E & x2 >= y2);
hence thesis by A1,A2,A6,YELLOW_0:1;
end;
