environ
vocabularies XBOOLE_0,TARSKI,RELAT_1,PARTFUN1,MCART_1,ZFMISC_1,FUNCT_1,FUNCT_3,SUBSET_1,WAYBEL_0,ORDERS_2,LATTICES,LATTICE3,YELLOW_0,ORDINAL2,EQREL_1,RELAT_2,WAYBEL_3,WAYBEL_2,STRUCT_0,WELLORD1,WAYBEL11,XXREAL_0,REWRITE1,SETFAM_1,PRE_TOPC,RLVECT_3,CANTOR_1,RCOMP_1,CONNSP_2,TOPS_1,TOPS_2,T_0TOPSP,COMPTS_1,YELLOW_9,FUNCT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,MCART_1,FUNCT_3,DOMAIN_1,STRUCT_0,PRE_TOPC,TOPS_1,TOPS_2,COMPTS_1,CANTOR_1,CONNSP_2,BORSUK_1,BORSUK_2,T_0TOPSP,WELLORD1,ORDERS_2,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_3,YELLOW_4,WAYBEL_2,WAYBEL_3,YELLOW_8,WAYBEL11,YELLOW_9,CKB26;
definitions TARSKI,FUNCT_1,PRE_TOPC,COMPTS_1,TOPS_2,CONNSP_2,BORSUK_1,T_0TOPSP,LATTICE3,YELLOW_0,WAYBEL_0,WAYBEL_2,WAYBEL_3,WAYBEL11,YELLOW_9,XBOOLE_0,SUBSET_1,BINOP_1,STRUCT_0;
theorems FUNCT_1,FUNCT_2,FUNCT_3,RELAT_1,TOPS_1,TOPS_2,TOPS_3,PRE_TOPC,CONNSP_2,BORSUK_1,ZFMISC_1,TARSKI,ORDERS_2,LATTICE3,YELLOW_0,YELLOW_2,YELLOW_3,YELLOW_4,WAYBEL_0,WAYBEL_1,WAYBEL_2,YELLOW_7,YELLOW_8,YELLOW_9,WAYBEL_8,WAYBEL_3,TEX_2,SETFAM_1,CANTOR_1,BORSUK_2,XBOOLE_0,XBOOLE_1,EQREL_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB27,CKB29,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB57,CKB58,CKB59;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,BORSUK_1,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_3,YELLOW_4,WAYBEL_2,WAYBEL_3,YELLOW_9,PRE_TOPC,EQREL_1,TOPS_1,BORSUK_2,FUNCT_2,CKB1,CKB9,CKB28,CKB30,CKB40,CKB42,CKB54,CKB55,CKB56;
constructors SETFAM_1,TOLER_1,TOPS_1,TOPS_2,T_0TOPSP,CANTOR_1,BORSUK_2,ORDERS_3,YELLOW_4,WAYBEL_3,YELLOW_8,WAYBEL11,YELLOW_9,CONNSP_2,DOMAIN_1,COMPTS_1,WAYBEL_2,CKB26;
requirements SUBSET,BOOLE;
begin
reserve S1 for non  empty TopSpace;
reserve S2 for non  empty TopSpace;
reserve T1 for non  empty TopSpace;
reserve T2 for non  empty TopSpace;
reserve R1 for (Refinement of S1,S2);
reserve R2 for (Refinement of T1,T2);
theorem
(((the carrier of S1) = (the carrier of S2) & (the carrier of T1) = (the carrier of T2)) implies [: R1,R2 :] is (Refinement of [: S1,T1 :],[: S2,T2 :]))
proof
set R = the  strict (Refinement of [: S1,T1 :],[: S2,T2 :]);
assume A1: ((the carrier of S1) = (the carrier of S2) & (the carrier of T1) = (the carrier of T2));
then (the carrier of [: R1,R2 :]) = (the carrier of R) by CKB59:1;
hence thesis by A1,CKB59:1;
end;
