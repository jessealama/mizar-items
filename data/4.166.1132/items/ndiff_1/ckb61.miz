environ
vocabularies NUMBERS,SUBSET_1,REAL_1,NORMSP_1,SEQ_1,NAT_1,PRE_TOPC,RCOMP_1,TARSKI,CARD_1,ARYTM_3,ARYTM_1,XXREAL_0,RELAT_1,FUNCT_1,SEQ_2,ORDINAL2,STRUCT_0,VALUED_0,SUPINF_2,RLVECT_1,VALUED_1,XREAL_0,ORDINAL1,COMPLEX1,XXREAL_2,FDIFF_1,ZFMISC_1,PARTFUN1,FUNCOP_1,FUNCT_2,LOPBAN_1,XBOOLE_0,FCONT_1,RSSPACE,NFCONT_1,CFCONT_1,LOPBAN_2;
notations TARSKI,SUBSET_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,PRE_TOPC,XXREAL_0,XREAL_0,COMPLEX1,ORDINAL1,NUMBERS,REAL_1,NAT_1,RLVECT_1,STRUCT_0,FUNCOP_1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,SQUARE_1,VFUNCT_1,NORMSP_0,NORMSP_1,RSSPACE,LOPBAN_1,LOPBAN_2,NFCONT_1,FDIFF_1,RECDEF_1,CKB6,CKB9,CKB10,CKB21,CKB29,CKB31,CKB39,CKB40,CKB41,CKB45;
definitions TARSKI,XBOOLE_0,NFCONT_1,NORMSP_1,BHSP_3,RLVECT_1,SUBSET_1,VALUED_1,STRUCT_0,CKB6,CKB9,CKB10,CKB21,CKB29,CKB39,CKB40,CKB41,CKB45;
theorems TARSKI,ABSVALUE,XBOOLE_0,XBOOLE_1,SUBSET_1,RELSET_1,RLVECT_1,XCMPLX_0,XCMPLX_1,ZFMISC_1,XREAL_0,FUNCOP_1,SEQ_1,SEQ_2,NAT_1,SEQM_3,RELAT_1,FUNCT_1,VFUNCT_1,FUNCT_2,SEQ_4,NORMSP_1,LOPBAN_1,LOPBAN_2,LOPBAN_3,PARTFUN1,PARTFUN2,NFCONT_1,FDIFF_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,VALUED_1,STRUCT_0,VALUED_0,GRCAT_1,NORMSP_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB29,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60;
schemes NAT_1,SEQ_1,RECDEF_1,FUNCT_2;
registrations FUNCT_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,FDIFF_1,STRUCT_0,LOPBAN_1,LOPBAN_2,VALUED_0,VALUED_1,FUNCT_2,FUNCOP_1,CKB27,CKB28,CKB30,CKB47;
constructors PARTFUN1,REAL_1,SQUARE_1,NAT_1,COMPLEX1,SEQ_2,PARTFUN2,FDIFF_1,BHSP_3,RSSPACE,VFUNCT_1,LOPBAN_3,NFCONT_1,SEQ_1,VALUED_1,RECDEF_1,NORMSP_1,RELSET_1,BINOP_2,RVSUM_1,CKB9,CKB10,CKB21,CKB29,CKB39,CKB40,CKB41,CKB45;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve S for non trivial RealNormSpace;
reserve T for non trivial RealNormSpace;
reserve f for (PartFunc of S,T);
reserve x0 for (Point of S);
reserve R for (REST of S,T);
theorem
(f is_differentiable_in x0 implies (ex N being (Neighbourhood of x0) st (N c= ( dom f ) & (ex R st ((( R /. ( 0. S ) ) = ( 0. T ) & R is_continuous_in ( 0. S )) & (for x being (Point of S) holds (x in N implies ( ( f /. x ) - ( f /. x0 ) ) = ( ( ( diff (f,x0) ) . ( x - x0 ) ) + ( R /. ( x - x0 ) ) ))))))))
proof
assume f is_differentiable_in x0;
then consider N being (Neighbourhood of x0) such that A1: N c= ( dom f ) and A2: (ex R st (for x being (Point of S) holds (x in N implies ( ( f /. x ) - ( f /. x0 ) ) = ( ( ( diff (f,x0) ) . ( x - x0 ) ) + ( R /. ( x - x0 ) ) )))) by CKB40:def 1;
take N;
(ex R st ((( R /. ( 0. S ) ) = ( 0. T ) & R is_continuous_in ( 0. S )) & (for x being (Point of S) holds (x in N implies ( ( f /. x ) - ( f /. x0 ) ) = ( ( ( diff (f,x0) ) . ( x - x0 ) ) + ( R /. ( x - x0 ) ) )))))
proof
( R_NormSpace_of_BoundedLinearOperators (S,T) ) = NORMSTR (# ( BoundedLinearOperators (S,T) ),( Zero_ (( BoundedLinearOperators (S,T) ),( R_VectorSpace_of_LinearOperators (S,T) )) ),( Add_ (( BoundedLinearOperators (S,T) ),( R_VectorSpace_of_LinearOperators (S,T) )) ),( Mult_ (( BoundedLinearOperators (S,T) ),( R_VectorSpace_of_LinearOperators (S,T) )) ),( BoundedLinearOperatorsNorm (S,T) ) #) by LOPBAN_1:def 14;
then reconsider L = ( diff (f,x0) ) as (Element of ( BoundedLinearOperators (S,T) ));
consider R such that A3: (for x being (Point of S) holds (x in N implies ( ( f /. x ) - ( f /. x0 ) ) = ( ( ( diff (f,x0) ) . ( x - x0 ) ) + ( R /. ( x - x0 ) ) ))) by A2;
take R;
( ( f /. x0 ) - ( f /. x0 ) ) = ( ( L . ( x0 - x0 ) ) + ( R /. ( x0 - x0 ) ) ) by A3,NFCONT_1:4;
then ( 0. T ) = ( ( L . ( x0 - x0 ) ) + ( R /. ( x0 - x0 ) ) ) by RLVECT_1:15;
then ( 0. T ) = ( ( L . ( 0. S ) ) + ( R /. ( x0 - x0 ) ) ) by RLVECT_1:15;
then A4: ( 0. T ) = ( ( L . ( 0. S ) ) + ( R /. ( 0. S ) ) ) by RLVECT_1:15;
( L . ( 0. S ) ) = ( ( modetrans (L,S,T) ) . ( 0. S ) ) by LOPBAN_1:def 11
.= ( ( modetrans (L,S,T) ) . ( ( 0 ) * ( 0. S ) ) ) by RLVECT_1:10
.= ( ( 0 ) * ( ( modetrans (L,S,T) ) . ( 0. S ) ) ) by LOPBAN_1:def 5
.= ( 0. T ) by RLVECT_1:10;
hence A5: ( R /. ( 0. S ) ) = ( 0. T ) by A4,RLVECT_1:4;
A6:now
let s1 being (sequence of S);
assume that
( rng s1 ) c= ( dom R )
and
A7: (s1 is  convergent & ( lim s1 ) = ( 0. S ))
and
A8: (for n holds ( s1 . n ) <> ( 0. S ));
s1 is  non-zero by A8,CKB8:1;
then s1 is  convergent_to_0  convergent_to_0 (sequence of S) by A7,CKB21:def 1;
hence (( R /* s1 ) is  convergent & ( lim ( R /* s1 ) ) = ( R /. ( 0. S ) )) by A5,CKB33:1;
end;
R is  total by CKB29:def 1;
then ( dom R ) = (the carrier of S) by PARTFUN1:def 2;
hence thesis by A3,A6,CKB36:1;
end;
hence thesis by A1;
end;
