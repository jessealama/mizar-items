environ
vocabularies NUMBERS,SUBSET_1,XBOOLE_0,RELAT_1,FUNCT_1,FINSEQ_1,FUNCT_4,FINSEQ_3,XXREAL_0,NAT_1,ARYTM_3,CARD_1,FINSEQ_2,PARTFUN1,SETFAM_1,FUNCT_6,TARSKI,MSUALG_6,RFUNCT_3,VALUED_0,UNIALG_1,CARD_3,FUNCOP_1,FUNCT_2,PRALG_3,ORDINAL1,ORDINAL4,ZFMISC_1,FINSET_1,VALUED_2,REALSET1,NEWTON,ARYTM_1,COMPUT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,RELAT_1,RELSET_1,FUNCT_1,FINSEQ_1,FINSEQ_2,SETFAM_1,FUNCT_2,MARGREL1,FUNCOP_1,XXREAL_2,VALUED_0,FUNCT_4,CARD_3,PROB_1,FINSEQ_3,FINSEQ_4,PARTFUN1,RFUNCT_3,FUNCT_6,FUNCT_7,MIDSP_3,FINSET_1,NEWTON,NAT_D,NAT_1,RECDEF_1,CKB11,CKB21,CKB23,CKB45,CKB49,CKB51,CKB59,CKB64,CKB68,CKB80,CKB88,CKB89,CKB96,CKB100,CKB110,CKB111,CKB112,CKB123;
definitions PARTFUN1,RFUNCT_3,FUNCT_1,RELAT_1,TARSKI,FINSEQ_2,FUNCOP_1,CARD_3,MARGREL1,CKB11,CKB23,CKB45,CKB49,CKB51,CKB59,CKB64,CKB68,CKB88,CKB89,CKB96,CKB110,CKB111,CKB112,CKB123;
theorems TARSKI,NAT_1,ZFMISC_1,RELAT_1,RELSET_1,FINSEQ_1,FUNCOP_1,PARTFUN1,FINSEQ_2,FINSEQ_4,FUNCT_6,FUNCT_1,RFUNCT_3,FUNCT_2,GRFUNC_1,FUNCT_7,FUNCT_4,FINSEQ_3,SUBSET_1,SETFAM_1,CARD_5,FUNCT_5,CARD_1,CARD_3,NEWTON,WSIERP_1,XBOOLE_0,XBOOLE_1,ORDINAL1,XXREAL_0,VALUED_0,XXREAL_2,XREAL_0,NAT_D,XREAL_1,MARGREL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB14,CKB16,CKB17,CKB18,CKB20,CKB23,CKB24,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB49,CKB50,CKB51,CKB52,CKB56,CKB57,CKB58,CKB59,CKB60,CKB62,CKB64,CKB65,CKB67,CKB68,CKB69,CKB70,CKB72,CKB73,CKB75,CKB76,CKB77,CKB79,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106,CKB107,CKB108,CKB109,CKB110,CKB111,CKB112,CKB113,CKB115,CKB116,CKB117,CKB118,CKB119,CKB120,CKB121,CKB122,CKB123,CKB124;
schemes NAT_1,FUNCT_2,RECDEF_1,MONOID_1,PARTFUN2;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,FINSEQ_2,FUNCT_7,FUNCT_2,VALUED_0,XXREAL_2,CARD_1,RELSET_1,CARD_3,FINSEQ_3,MARGREL1,CKB12,CKB13,CKB15,CKB19,CKB22,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB46,CKB47,CKB48,CKB53,CKB54,CKB55,CKB61,CKB63,CKB66,CKB71,CKB74,CKB78,CKB81,CKB114;
constructors SETFAM_1,DOMAIN_1,FUNCT_4,REAL_1,PROB_1,FINSEQ_3,FINSEQ_4,NEWTON,RFUNCT_3,NAT_D,RECDEF_1,XXREAL_2,MIDSP_3,RELSET_1,FUNCT_6,MARGREL1,XXREAL_1,CKB11,CKB23,CKB45,CKB49,CKB51,CKB59,CKB64,CKB68,CKB80,CKB88,CKB89,CKB96,CKB100,CKB110,CKB111,CKB112,CKB123;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve i for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve Y for set;
reserve R for Relation;
reserve f for Function;
reserve g for Function;
reserve f1 for non  empty  homogeneous  to-naturals ( ( NAT ) * ) -defined Function;
reserve f2 for non  empty  homogeneous  to-naturals ( ( NAT ) * ) -defined Function;
registration
cluster ( PrimRec ) -> non  empty  primitive-recursively_closed;
coherence
proof
set S = { R where R is (Subset of ( HFuncs ( NAT ) )): R is  primitive-recursively_closed };
A1: { ( HFuncs ( NAT ) ) } c= ( bool ( HFuncs ( NAT ) ) ) by ZFMISC_1:68;
( HFuncs ( NAT ) ) in { ( HFuncs ( NAT ) ) } by TARSKI:def 1;
then A2: ( HFuncs ( NAT ) ) in S by A1,CKB113:1;
A3:now
let Y being set;
assume Y in S;
then (ex R being (Subset of ( HFuncs ( NAT ) )) st (R = Y & R is  primitive-recursively_closed));
hence ( ( 0 ) const ( 0 ) ) in Y by CKB112:def 1;
end;
hence ( PrimRec ) is non  empty by A2,SETFAM_1:def 1;
thus ( PrimRec ) is  primitive-recursively_closed
proof
thus ( ( 0 ) const ( 0 ) ) in ( PrimRec ) by A2,A3,SETFAM_1:def 1;
now
let Y being set;
assume Y in S;
then (ex R being (Subset of ( HFuncs ( NAT ) )) st (R = Y & R is  primitive-recursively_closed));
hence ( 1 succ 1 ) in Y by CKB112:def 1;
end;
hence ( 1 succ 1 ) in ( PrimRec ) by A2,SETFAM_1:def 1;
hereby
let n being (Element of ( NAT ));
let i being (Element of ( NAT ));
assume that
A4: 1 <= i
and
A5: i <= n;
now
let Y being set;
assume Y in S;
then (ex R being (Subset of ( HFuncs ( NAT ) )) st (R = Y & R is  primitive-recursively_closed));
hence ( n proj i ) in Y by A4,A5,CKB112:def 1;
end;
hence ( n proj i ) in ( PrimRec ) by A2,SETFAM_1:def 1;
end;
hereby
let f being (Element of ( HFuncs ( NAT ) ));
let F being  with_the_same_arity (FinSequence of ( HFuncs ( NAT ) ));
assume that
A6: f in ( PrimRec )
and
A7: ( arity f ) = ( len F )
and
A8: ( rng F ) c= ( PrimRec );
now
let Y being set;
assume A9: Y in S;
then consider R being (Subset of ( HFuncs ( NAT ) )) such that A10: R = Y and A11: R is  primitive-recursively_closed;
A12: R is  composition_closed by A11,CKB112:def 1;
A13: ( PrimRec ) c= R by A9,A10,SETFAM_1:3;
then ( rng F ) c= R by A8,XBOOLE_1:1;
hence ( f * <: F :> ) in Y by A6,A7,A10,A12,A13,CKB110:def 1;
end;
hence ( f * <: F :> ) in ( PrimRec ) by A2,SETFAM_1:def 1;
end;
hereby
let g being (Element of ( HFuncs ( NAT ) ));
let f1 being (Element of ( HFuncs ( NAT ) ));
let f2 being (Element of ( HFuncs ( NAT ) ));
let i being (Element of ( NAT ));
assume that
A14: g is_primitive-recursively_expressed_by f1,f2,i
and
A15: f1 in ( PrimRec )
and
A16: f2 in ( PrimRec );
now
let Y being set;
assume A17: Y in S;
then consider R being (Subset of ( HFuncs ( NAT ) )) such that A18: R = Y and A19: R is  primitive-recursively_closed;
A20: f2 in R by A16,A17,A18,SETFAM_1:def 1;
A21: R is  primitive-recursion_closed by A19,CKB112:def 1;
f1 in R by A15,A17,A18,SETFAM_1:def 1;
hence g in Y by A14,A18,A21,A20,CKB111:def 1;
end;
hence g in ( PrimRec ) by A2,SETFAM_1:def 1;
end;
end;

end;
end;
