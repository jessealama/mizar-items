environ
vocabularies NUMBERS,SUBSET_1,XBOOLE_0,RELAT_1,FUNCT_1,FINSEQ_1,FUNCT_4,FINSEQ_3,XXREAL_0,NAT_1,ARYTM_3,CARD_1,FINSEQ_2,PARTFUN1,SETFAM_1,FUNCT_6,TARSKI,MSUALG_6,RFUNCT_3,VALUED_0,UNIALG_1,CARD_3,FUNCOP_1,FUNCT_2,PRALG_3,ORDINAL1,ORDINAL4,ZFMISC_1,FINSET_1,VALUED_2,REALSET1,NEWTON,ARYTM_1,COMPUT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,RELAT_1,RELSET_1,FUNCT_1,FINSEQ_1,FINSEQ_2,SETFAM_1,FUNCT_2,MARGREL1,FUNCOP_1,XXREAL_2,VALUED_0,FUNCT_4,CARD_3,PROB_1,FINSEQ_3,FINSEQ_4,PARTFUN1,RFUNCT_3,FUNCT_6,FUNCT_7,MIDSP_3,FINSET_1,NEWTON,NAT_D,NAT_1,RECDEF_1,CKB11,CKB21,CKB23,CKB45,CKB49,CKB51,CKB59,CKB64,CKB68,CKB80,CKB88,CKB89,CKB96,CKB100,CKB110,CKB111,CKB112;
definitions PARTFUN1,RFUNCT_3,FUNCT_1,RELAT_1,TARSKI,FINSEQ_2,FUNCOP_1,CARD_3,MARGREL1,CKB11,CKB23,CKB45,CKB49,CKB51,CKB59,CKB64,CKB68,CKB88,CKB89,CKB96,CKB110,CKB111,CKB112;
theorems TARSKI,NAT_1,ZFMISC_1,RELAT_1,RELSET_1,FINSEQ_1,FUNCOP_1,PARTFUN1,FINSEQ_2,FINSEQ_4,FUNCT_6,FUNCT_1,RFUNCT_3,FUNCT_2,GRFUNC_1,FUNCT_7,FUNCT_4,FINSEQ_3,SUBSET_1,SETFAM_1,CARD_5,FUNCT_5,CARD_1,CARD_3,NEWTON,WSIERP_1,XBOOLE_0,XBOOLE_1,ORDINAL1,XXREAL_0,VALUED_0,XXREAL_2,XREAL_0,NAT_D,XREAL_1,MARGREL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB14,CKB16,CKB17,CKB18,CKB20,CKB23,CKB24,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB49,CKB50,CKB51,CKB52,CKB56,CKB57,CKB58,CKB59,CKB60,CKB62,CKB64,CKB65,CKB67,CKB68,CKB69,CKB70,CKB72,CKB73,CKB75,CKB76,CKB77,CKB79,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106,CKB107,CKB108,CKB109,CKB110,CKB111,CKB112,CKB113,CKB115,CKB116;
schemes NAT_1,FUNCT_2,RECDEF_1,MONOID_1,PARTFUN2;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,FINSEQ_2,FUNCT_7,FUNCT_2,VALUED_0,XXREAL_2,CARD_1,RELSET_1,CARD_3,FINSEQ_3,MARGREL1,CKB12,CKB13,CKB15,CKB19,CKB22,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB46,CKB47,CKB48,CKB53,CKB54,CKB55,CKB61,CKB63,CKB66,CKB71,CKB74,CKB78,CKB81,CKB114;
constructors SETFAM_1,DOMAIN_1,FUNCT_4,REAL_1,PROB_1,FINSEQ_3,FINSEQ_4,NEWTON,RFUNCT_3,NAT_D,RECDEF_1,XXREAL_2,MIDSP_3,RELSET_1,FUNCT_6,MARGREL1,XXREAL_1,CKB11,CKB23,CKB45,CKB49,CKB51,CKB59,CKB64,CKB68,CKB80,CKB88,CKB89,CKB96,CKB100,CKB110,CKB111,CKB112;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve i for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve x for set;
reserve y for set;
reserve g for Function;
reserve f1 for non  empty  homogeneous  to-naturals ( ( NAT ) * ) -defined Function;
reserve f2 for non  empty  homogeneous  to-naturals ( ( NAT ) * ) -defined Function;
theorem
Th72: (for g being (Element of ( HFuncs ( NAT ) )) holds (for f1,f2 being  quasi_total (Element of ( HFuncs ( NAT ) )) holds (for i being (Element of ( NAT )) holds (g is_primitive-recursively_expressed_by f1,f2,i implies (g is  quasi_total & (f1 is non  empty implies g is non  empty))))))
proof
let g being (Element of ( HFuncs ( NAT ) ));
let f1 being  quasi_total (Element of ( HFuncs ( NAT ) ));
let f2 being  quasi_total (Element of ( HFuncs ( NAT ) ));
let i being (Element of ( NAT ));
assume A1: g is_primitive-recursively_expressed_by f1,f2,i;
then consider n being (Element of ( NAT )) such that A2: ( dom g ) c= ( n -tuples_on ( NAT ) ) and A3: i >= 1 and A4: i <= n and A5: ( ( arity f1 ) + 1 ) = n and A6: ( n + 1 ) = ( arity f2 ) and A7: (for p being (FinSequence of ( NAT )) holds (( len p ) = n implies (((( p +* (i,( 0 )) ) in ( dom g ) iff ( Del (p,i) ) in ( dom f1 )) & (( p +* (i,( 0 )) ) in ( dom g ) implies ( g . ( p +* (i,( 0 )) ) ) = ( f1 . ( Del (p,i) ) ))) & (for n being (Element of ( NAT )) holds ((( p +* (i,( n + 1 )) ) in ( dom g ) iff (( p +* (i,n) ) in ( dom g ) & ( ( p +* (i,n) ) ^ <* ( g . ( p +* (i,n) ) ) *> ) in ( dom f2 ))) & (( p +* (i,( n + 1 )) ) in ( dom g ) implies ( g . ( p +* (i,( n + 1 )) ) ) = ( f2 . ( ( p +* (i,n) ) ^ <* ( g . ( p +* (i,n) ) ) *> ) ))))))) by CKB88:def 1;
reconsider f29 = f2 as non  empty  quasi_total (Element of ( HFuncs ( NAT ) )) by A6,CKB36:1;
per cases ;
suppose f1 is  empty;

hence thesis by A1,CKB116:1;
end;
suppose f1 is non  empty;

then A8: ( dom f1 ) = ( ( arity f1 ) -tuples_on ( NAT ) ) by CKB41:1;
A9: g is  quasi_total
proof
let x being (FinSequence of ( NAT ));
let y being (FinSequence of ( NAT ));
assume that
A10: ( len x ) = ( len y )
and
A11: x in ( dom g );
defpred p[ (Element of ( NAT )) ]
 means
( y +* (i,$1) ) in ( dom g );
A12: ( len x ) = n by A2,A11,CARD_1:def 7;
A13:now
let k being (Element of ( NAT ));
assume that
A14: p[ k ];
A15: ( dom f29 ) = ( ( arity f2 ) -tuples_on ( NAT ) ) by CKB41:1;
( len ( ( y +* (i,k) ) ^ <* ( g . ( y +* (i,k) ) ) *> ) ) = ( ( len ( y +* (i,k) ) ) + ( len <* ( g . ( y +* (i,k) ) ) *> ) ) by FINSEQ_1:22
.= ( n + ( len <* ( g . ( y +* (i,k) ) ) *> ) ) by A10,A12,FUNCT_7:97
.= ( n + 1 ) by FINSEQ_1:39;
then ( ( y +* (i,k) ) ^ <* ( g . ( y +* (i,k) ) ) *> ) is (Element of ( dom f2 )) by A6,A15,FINSEQ_2:92;
then ( ( y +* (i,k) ) ^ <* ( g . ( y +* (i,k) ) ) *> ) in ( dom f29 );
hence p[ ( k + 1 ) ] by A7,A10,A12,A14;
end;
y is (Element of ( ( len y ) -tuples_on ( NAT ) )) by FINSEQ_2:92;
then ( Del (y,i) ) in ( ( arity f1 ) -tuples_on ( NAT ) ) by A3,A4,A5,A10,A12,CKB9:1;
then A16: p[ ( 0 ) ] by A7,A8,A10,A12;
(for k being (Element of ( NAT )) holds p[ k ]) from NAT_1:sch 1(A16,A13);
then A17: ( y +* (i,( y /. i )) ) in ( dom g );
i in ( dom y ) by A3,A4,A10,A12,FINSEQ_3:25;
then ( y . i ) = ( y /. i ) by PARTFUN1:def 6;
hence y in ( dom g ) by A17,FUNCT_7:35;
end;
consider pp being set such that A18: pp in ( n -tuples_on ( NAT ) ) by XBOOLE_0:def 1;
pp is (Element of ( n -tuples_on ( NAT ) )) by A18;
then reconsider p = pp as (FinSequence of ( NAT ));
A19: ( len p ) = n by A18,CARD_1:def 7;
( Del (p,i) ) in ( ( arity f1 ) -tuples_on ( NAT ) ) by A3,A4,A5,A18,CKB9:1;
hence thesis by A7,A19,A8,A9;
end;
end;
