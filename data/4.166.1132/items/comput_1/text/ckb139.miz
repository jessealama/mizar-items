environ
vocabularies NUMBERS,SUBSET_1,XBOOLE_0,RELAT_1,FUNCT_1,FINSEQ_1,FUNCT_4,FINSEQ_3,XXREAL_0,NAT_1,ARYTM_3,CARD_1,FINSEQ_2,PARTFUN1,SETFAM_1,FUNCT_6,TARSKI,MSUALG_6,RFUNCT_3,VALUED_0,UNIALG_1,CARD_3,FUNCOP_1,FUNCT_2,PRALG_3,ORDINAL1,ORDINAL4,ZFMISC_1,FINSET_1,VALUED_2,REALSET1,NEWTON,ARYTM_1,COMPUT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,RELAT_1,RELSET_1,FUNCT_1,FINSEQ_1,FINSEQ_2,SETFAM_1,FUNCT_2,MARGREL1,FUNCOP_1,XXREAL_2,VALUED_0,FUNCT_4,CARD_3,PROB_1,FINSEQ_3,FINSEQ_4,PARTFUN1,RFUNCT_3,FUNCT_6,FUNCT_7,MIDSP_3,FINSET_1,NEWTON,NAT_D,NAT_1,RECDEF_1,CKB11,CKB21,CKB23,CKB45,CKB49,CKB51,CKB59,CKB64,CKB68,CKB80,CKB88,CKB89,CKB96,CKB100,CKB110,CKB111,CKB112,CKB123,CKB127,CKB133,CKB134,CKB135,CKB136;
definitions PARTFUN1,RFUNCT_3,FUNCT_1,RELAT_1,TARSKI,FINSEQ_2,FUNCOP_1,CARD_3,MARGREL1,CKB11,CKB23,CKB45,CKB49,CKB51,CKB59,CKB64,CKB68,CKB88,CKB89,CKB96,CKB110,CKB111,CKB112,CKB123,CKB127,CKB133,CKB134,CKB135,CKB136;
theorems TARSKI,NAT_1,ZFMISC_1,RELAT_1,RELSET_1,FINSEQ_1,FUNCOP_1,PARTFUN1,FINSEQ_2,FINSEQ_4,FUNCT_6,FUNCT_1,RFUNCT_3,FUNCT_2,GRFUNC_1,FUNCT_7,FUNCT_4,FINSEQ_3,SUBSET_1,SETFAM_1,CARD_5,FUNCT_5,CARD_1,CARD_3,NEWTON,WSIERP_1,XBOOLE_0,XBOOLE_1,ORDINAL1,XXREAL_0,VALUED_0,XXREAL_2,XREAL_0,NAT_D,XREAL_1,MARGREL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB14,CKB16,CKB17,CKB18,CKB20,CKB23,CKB24,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB49,CKB50,CKB51,CKB52,CKB56,CKB57,CKB58,CKB59,CKB60,CKB62,CKB64,CKB65,CKB67,CKB68,CKB69,CKB70,CKB72,CKB73,CKB75,CKB76,CKB77,CKB79,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106,CKB107,CKB108,CKB109,CKB110,CKB111,CKB112,CKB113,CKB115,CKB116,CKB117,CKB118,CKB119,CKB120,CKB121,CKB122,CKB123,CKB124,CKB127,CKB133,CKB134,CKB135,CKB136,CKB137,CKB138;
schemes NAT_1,FUNCT_2,RECDEF_1,MONOID_1,PARTFUN2;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,FINSEQ_2,FUNCT_7,FUNCT_2,VALUED_0,XXREAL_2,CARD_1,RELSET_1,CARD_3,FINSEQ_3,MARGREL1,CKB12,CKB13,CKB15,CKB19,CKB22,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB46,CKB47,CKB48,CKB53,CKB54,CKB55,CKB61,CKB63,CKB66,CKB71,CKB74,CKB78,CKB81,CKB114,CKB125,CKB126,CKB128,CKB129,CKB130,CKB131,CKB132;
constructors SETFAM_1,DOMAIN_1,FUNCT_4,REAL_1,PROB_1,FINSEQ_3,FINSEQ_4,NEWTON,RFUNCT_3,NAT_D,RECDEF_1,XXREAL_2,MIDSP_3,RELSET_1,FUNCT_6,MARGREL1,XXREAL_1,CKB11,CKB23,CKB45,CKB49,CKB51,CKB59,CKB64,CKB68,CKB80,CKB88,CKB89,CKB96,CKB100,CKB110,CKB111,CKB112,CKB123,CKB127,CKB133,CKB134,CKB135,CKB136;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve m for (Element of ( NAT ));
reserve x for set;
reserve X for set;
theorem
Th81: ( PrimRec ) = ( Union ( PrimRec-Approximation ) )
proof
set prd = ( PrimRec-Approximation );
defpred p[ (Element of ( NAT )) ]
 means
( prd . $1 ) c= ( PrimRec );
A1:now
let m being (Element of ( NAT ));
assume that
A2: p[ m ];
thus p[ ( m + 1 ) ]
proof
set mcocl = { ( f * <: F :> ) where f is (Element of ( HFuncs ( NAT ) )),F is  with_the_same_arity (Element of ( ( HFuncs ( NAT ) ) * )): ((f in ( prd . m ) & ( arity f ) = ( len F )) & ( rng F ) c= ( prd . m )) };
set mprcl = { g where g is (Element of ( HFuncs ( NAT ) )): (ex f1,f2 being (Element of ( HFuncs ( NAT ) )) st (ex i being (Element of ( NAT )) st ((f1 in ( prd . m ) & f2 in ( prd . m )) & g is_primitive-recursively_expressed_by f1,f2,i))) };
let x being set;
A3: ( prd . ( m + 1 ) ) = ( ( PR-closure ( prd . m ) ) \/ ( composition-closure ( prd . m ) ) ) by CKB136:def 1;
assume A4: x in ( prd . ( m + 1 ) );
per cases  by A4,A3,XBOOLE_0:def 3;
suppose A5: x in ( PR-closure ( prd . m ) );

thus thesis
proof
per cases  by A5,XBOOLE_0:def 3;
suppose x in ( prd . m );

hence thesis by A2;
end;
suppose A6: x in mprcl;

A7: ( PrimRec ) is  primitive-recursion_closed by CKB112:def 1;
(ex g being (Element of ( HFuncs ( NAT ) )) st (x = g & (ex f1,f2 being (Element of ( HFuncs ( NAT ) )) st (ex i being (Element of ( NAT )) st ((f1 in ( prd . m ) & f2 in ( prd . m )) & g is_primitive-recursively_expressed_by f1,f2,i))))) by A6;
hence thesis by A2,A7,CKB111:def 1;
end;
end;

end;
suppose A8: x in ( composition-closure ( prd . m ) );

thus thesis
proof
per cases  by A8,XBOOLE_0:def 3;
suppose x in ( prd . m );

hence thesis by A2;
end;
suppose A9: x in mcocl;

A10: ( PrimRec ) is  composition_closed by CKB112:def 1;
consider f being (Element of ( HFuncs ( NAT ) )),F being  with_the_same_arity (Element of ( ( HFuncs ( NAT ) ) * )) such that A11: x = ( f * <: F :> ) and A12: f in ( prd . m ) and A13: ( arity f ) = ( len F ) and A14: ( rng F ) c= ( prd . m ) by A9;
( rng F ) c= ( PrimRec ) by A2,A14,XBOOLE_1:1;
hence thesis by A2,A11,A12,A13,A10,CKB110:def 1;
end;
end;

end;
end;

end;
A15: p[ ( 0 ) ]
proof
let x being set;
assume A16: x in ( prd . ( 0 ) );
( prd . ( 0 ) ) = ( { ( ( 0 ) const ( 0 ) ),( 1 succ 1 ) } \/ { ( n proj i ) where n is (Element of ( NAT )),i is (Element of ( NAT )): (1 <= i & i <= n) } ) by CKB136:def 1;
then A17: (x in { ( ( 0 ) const ( 0 ) ),( 1 succ 1 ) } or x in { ( n proj i ) where n is (Element of ( NAT )),i is (Element of ( NAT )): (1 <= i & i <= n) }) by A16,XBOOLE_0:def 3;
per cases  by A17,TARSKI:def 2;
suppose x = ( ( 0 ) const ( 0 ) );

hence thesis by CKB112:def 1;
end;
suppose x = ( 1 succ 1 );

hence thesis by CKB112:def 1;
end;
suppose x in { ( n proj i ) where n is (Element of ( NAT )),i is (Element of ( NAT )): (1 <= i & i <= n) };

then (ex n,i being (Element of ( NAT )) st ((x = ( n proj i ) & 1 <= i) & i <= n));
hence thesis by CKB112:def 1;
end;
end;
A18: (for k being (Element of ( NAT )) holds p[ k ]) from NAT_1:sch 1(A15,A1);
A19: ( Union prd ) c= ( PrimRec )
proof
let x being set;
assume that
A20: x in ( Union prd )
and
A21: (not x in ( PrimRec ));
consider X being set such that A22: x in X and A23: X in ( rng prd ) by A20,TARSKI:def 4;
consider m being set such that A24: m in ( dom prd ) and A25: ( prd . m ) = X by A23,FUNCT_1:def 3;
reconsider m as (Element of ( NAT )) by A24;
( prd . m ) c= ( PrimRec ) by A18;
hence contradiction by A21,A22,A25;
end;
( PrimRec ) c= ( Union prd ) by CKB124:1,CKB138:1;
hence thesis by A19,XBOOLE_0:def 10;
end;
