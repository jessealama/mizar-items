environ
vocabularies NUMBERS,SUBSET_1,XBOOLE_0,RELAT_1,FUNCT_1,FINSEQ_1,FUNCT_4,FINSEQ_3,XXREAL_0,NAT_1,ARYTM_3,CARD_1,FINSEQ_2,PARTFUN1,SETFAM_1,FUNCT_6,TARSKI,MSUALG_6,RFUNCT_3,VALUED_0,UNIALG_1,CARD_3,FUNCOP_1,FUNCT_2,PRALG_3,ORDINAL1,ORDINAL4,ZFMISC_1,FINSET_1,VALUED_2,REALSET1,NEWTON,ARYTM_1,COMPUT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,RELAT_1,RELSET_1,FUNCT_1,FINSEQ_1,FINSEQ_2,SETFAM_1,FUNCT_2,MARGREL1,FUNCOP_1,XXREAL_2,VALUED_0,FUNCT_4,CARD_3,PROB_1,FINSEQ_3,FINSEQ_4,PARTFUN1,RFUNCT_3,FUNCT_6,FUNCT_7,MIDSP_3,FINSET_1,NEWTON,NAT_D,NAT_1,RECDEF_1,CKB11,CKB21,CKB23,CKB45,CKB49,CKB51,CKB59;
definitions PARTFUN1,RFUNCT_3,FUNCT_1,RELAT_1,TARSKI,FINSEQ_2,FUNCOP_1,CARD_3,MARGREL1,CKB11,CKB23,CKB45,CKB49,CKB51,CKB59;
theorems TARSKI,NAT_1,ZFMISC_1,RELAT_1,RELSET_1,FINSEQ_1,FUNCOP_1,PARTFUN1,FINSEQ_2,FINSEQ_4,FUNCT_6,FUNCT_1,RFUNCT_3,FUNCT_2,GRFUNC_1,FUNCT_7,FUNCT_4,FINSEQ_3,SUBSET_1,SETFAM_1,CARD_5,FUNCT_5,CARD_1,CARD_3,NEWTON,WSIERP_1,XBOOLE_0,XBOOLE_1,ORDINAL1,XXREAL_0,VALUED_0,XXREAL_2,XREAL_0,NAT_D,XREAL_1,MARGREL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB14,CKB16,CKB17,CKB18,CKB20,CKB23,CKB24,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB49,CKB50,CKB51,CKB52,CKB56,CKB57,CKB58,CKB59,CKB60,CKB62;
schemes NAT_1,FUNCT_2,RECDEF_1,MONOID_1,PARTFUN2;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,FINSEQ_2,FUNCT_7,FUNCT_2,VALUED_0,XXREAL_2,CARD_1,RELSET_1,CARD_3,FINSEQ_3,MARGREL1,CKB12,CKB13,CKB15,CKB19,CKB22,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB46,CKB47,CKB48,CKB53,CKB54,CKB55,CKB61,CKB63;
constructors SETFAM_1,DOMAIN_1,FUNCT_4,REAL_1,PROB_1,FINSEQ_3,FINSEQ_4,NEWTON,RFUNCT_3,NAT_D,RECDEF_1,XXREAL_2,MIDSP_3,RELSET_1,FUNCT_6,MARGREL1,XXREAL_1,CKB11,CKB23,CKB45,CKB49,CKB51,CKB59;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve i for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve x for set;
definition
let n being (Element of ( NAT ));
let i being (Element of ( NAT ));
func n succ i ->  homogeneous  to-naturals ( ( NAT ) * ) -defined Function means 
:Def10: (( dom it ) = ( n -tuples_on ( NAT ) ) & (for p being (Element of ( n -tuples_on ( NAT ) )) holds ( it . p ) = ( ( p /. i ) + 1 )));
existence
proof
deffunc f((Element of ( ( NAT ) * ))) = ( ( $1 /. i ) + 1 );
defpred p[ set ]
 means
$1 in ( n -tuples_on ( NAT ) );
consider f being (PartFunc of ( ( NAT ) * ),( NAT )) such that A1: (for d being (Element of ( ( NAT ) * )) holds (d in ( dom f ) iff p[ d ])) and A2: (for d being (Element of ( ( NAT ) * )) holds (d in ( dom f ) implies ( f /. d ) = f(d))) from PARTFUN2:sch 2;
A3: ( n -tuples_on ( NAT ) ) c= ( ( NAT ) * ) by FINSEQ_2:142;
then A4: (for x being set holds (x in ( dom f ) iff x in ( n -tuples_on ( NAT ) ))) by A1;
then A5: ( dom f ) = ( n -tuples_on ( NAT ) ) by TARSKI:1;
reconsider f as (Element of ( PFuncs (( ( NAT ) * ),( NAT )) )) by PARTFUN1:45;
f is  homogeneous
proof
thus ( dom f ) is  with_common_domain by A5;
end;
then f in { g where g is (Element of ( PFuncs (( ( NAT ) * ),( NAT )) )): g is  homogeneous };
then reconsider f as (Element of ( HFuncs ( NAT ) ));
take f;
thus ( dom f ) = ( n -tuples_on ( NAT ) ) by A4,TARSKI:1;
let p being (Element of ( n -tuples_on ( NAT ) ));
p in ( n -tuples_on ( NAT ) );
then reconsider p9 = p as (Element of ( ( NAT ) * )) by A3;
thus ( f . p ) = ( f /. p9 ) by A5,PARTFUN1:def 6
.= ( ( p /. i ) + 1 ) by A2,A5;
end;
uniqueness
proof
let it1 being  homogeneous  to-naturals ( ( NAT ) * ) -defined Function;
let it2 being  homogeneous  to-naturals ( ( NAT ) * ) -defined Function;
assume that
A6: ( dom it1 ) = ( n -tuples_on ( NAT ) )
and
A7: (for p being (Element of ( n -tuples_on ( NAT ) )) holds ( it1 . p ) = ( ( p /. i ) + 1 ))
and
A8: ( dom it2 ) = ( n -tuples_on ( NAT ) )
and
A9: (for p being (Element of ( n -tuples_on ( NAT ) )) holds ( it2 . p ) = ( ( p /. i ) + 1 ));
now
let x being set;
assume x in ( n -tuples_on ( NAT ) );
then reconsider x9 = x as (Element of ( n -tuples_on ( NAT ) ));
thus ( it1 . x ) = ( ( x9 /. i ) + 1 ) by A7
.= ( it2 . x ) by A9;
end;
hence thesis by A6,A8,FUNCT_1:2;
end;
end;
