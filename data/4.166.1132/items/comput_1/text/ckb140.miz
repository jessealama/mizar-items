environ
vocabularies NUMBERS,SUBSET_1,XBOOLE_0,RELAT_1,FUNCT_1,FINSEQ_1,FUNCT_4,FINSEQ_3,XXREAL_0,NAT_1,ARYTM_3,CARD_1,FINSEQ_2,PARTFUN1,SETFAM_1,FUNCT_6,TARSKI,MSUALG_6,RFUNCT_3,VALUED_0,UNIALG_1,CARD_3,FUNCOP_1,FUNCT_2,PRALG_3,ORDINAL1,ORDINAL4,ZFMISC_1,FINSET_1,VALUED_2,REALSET1,NEWTON,ARYTM_1,COMPUT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,RELAT_1,RELSET_1,FUNCT_1,FINSEQ_1,FINSEQ_2,SETFAM_1,FUNCT_2,MARGREL1,FUNCOP_1,XXREAL_2,VALUED_0,FUNCT_4,CARD_3,PROB_1,FINSEQ_3,FINSEQ_4,PARTFUN1,RFUNCT_3,FUNCT_6,FUNCT_7,MIDSP_3,FINSET_1,NEWTON,NAT_D,NAT_1,RECDEF_1,CKB11,CKB21,CKB23,CKB45,CKB49,CKB51,CKB59,CKB64,CKB68,CKB80,CKB88,CKB89,CKB96,CKB100,CKB110,CKB111,CKB112,CKB123,CKB127,CKB133,CKB134,CKB135,CKB136;
definitions PARTFUN1,RFUNCT_3,FUNCT_1,RELAT_1,TARSKI,FINSEQ_2,FUNCOP_1,CARD_3,MARGREL1,CKB11,CKB23,CKB45,CKB49,CKB51,CKB59,CKB64,CKB68,CKB88,CKB89,CKB96,CKB110,CKB111,CKB112,CKB123,CKB127,CKB133,CKB134,CKB135,CKB136;
theorems TARSKI,NAT_1,ZFMISC_1,RELAT_1,RELSET_1,FINSEQ_1,FUNCOP_1,PARTFUN1,FINSEQ_2,FINSEQ_4,FUNCT_6,FUNCT_1,RFUNCT_3,FUNCT_2,GRFUNC_1,FUNCT_7,FUNCT_4,FINSEQ_3,SUBSET_1,SETFAM_1,CARD_5,FUNCT_5,CARD_1,CARD_3,NEWTON,WSIERP_1,XBOOLE_0,XBOOLE_1,ORDINAL1,XXREAL_0,VALUED_0,XXREAL_2,XREAL_0,NAT_D,XREAL_1,MARGREL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB14,CKB16,CKB17,CKB18,CKB20,CKB23,CKB24,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB49,CKB50,CKB51,CKB52,CKB56,CKB57,CKB58,CKB59,CKB60,CKB62,CKB64,CKB65,CKB67,CKB68,CKB69,CKB70,CKB72,CKB73,CKB75,CKB76,CKB77,CKB79,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106,CKB107,CKB108,CKB109,CKB110,CKB111,CKB112,CKB113,CKB115,CKB116,CKB117,CKB118,CKB119,CKB120,CKB121,CKB122,CKB123,CKB124,CKB127,CKB133,CKB134,CKB135,CKB136,CKB137,CKB138,CKB139;
schemes NAT_1,FUNCT_2,RECDEF_1,MONOID_1,PARTFUN2;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,FINSEQ_2,FUNCT_7,FUNCT_2,VALUED_0,XXREAL_2,CARD_1,RELSET_1,CARD_3,FINSEQ_3,MARGREL1,CKB12,CKB13,CKB15,CKB19,CKB22,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB46,CKB47,CKB48,CKB53,CKB54,CKB55,CKB61,CKB63,CKB66,CKB71,CKB74,CKB78,CKB81,CKB114,CKB125,CKB126,CKB128,CKB129,CKB130,CKB131,CKB132;
constructors SETFAM_1,DOMAIN_1,FUNCT_4,REAL_1,PROB_1,FINSEQ_3,FINSEQ_4,NEWTON,RFUNCT_3,NAT_D,RECDEF_1,XXREAL_2,MIDSP_3,RELSET_1,FUNCT_6,MARGREL1,XXREAL_1,CKB11,CKB23,CKB45,CKB49,CKB51,CKB59,CKB64,CKB68,CKB80,CKB88,CKB89,CKB96,CKB100,CKB110,CKB111,CKB112,CKB123,CKB127,CKB133,CKB134,CKB135,CKB136;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve m for (Element of ( NAT ));
reserve f for Function;
reserve g for Function;
reserve f1 for non  empty  homogeneous  to-naturals ( ( NAT ) * ) -defined Function;
reserve f2 for non  empty  homogeneous  to-naturals ( ( NAT ) * ) -defined Function;
theorem
Th82: (for f being (Element of ( HFuncs ( NAT ) )) holds (f in ( ( PrimRec-Approximation ) . m ) implies f is  quasi_total))
proof
defpred p[ (Element of ( NAT )) ]
 means
(for f being (Element of ( HFuncs ( NAT ) )) holds (f in ( ( PrimRec-Approximation ) . $1 ) implies f is  quasi_total));
set prd = ( PrimRec-Approximation );
A1: (for m being (Element of ( NAT )) holds (p[ m ] implies p[ ( m + 1 ) ]))
proof
let m being (Element of ( NAT ));
assume A2: p[ m ];
let f being (Element of ( HFuncs ( NAT ) ));
assume f in ( prd . ( m + 1 ) );
then A3: f in ( ( PR-closure ( prd . m ) ) \/ ( composition-closure ( prd . m ) ) ) by CKB136:def 1;
per cases  by A3,XBOOLE_0:def 3;
suppose A4: f in ( PR-closure ( prd . m ) );

thus f is  quasi_total
proof
per cases  by A4,XBOOLE_0:def 3;
suppose f in ( prd . m );

hence thesis by A2;
end;
suppose f in { g where g is (Element of ( HFuncs ( NAT ) )): (ex f1,f2 being (Element of ( HFuncs ( NAT ) )) st (ex i being (Element of ( NAT )) st ((f1 in ( prd . m ) & f2 in ( prd . m )) & g is_primitive-recursively_expressed_by f1,f2,i))) };

then consider g being (Element of ( HFuncs ( NAT ) )) such that A5: f = g and A6: (ex f1,f2 being (Element of ( HFuncs ( NAT ) )) st (ex i being (Element of ( NAT )) st ((f1 in ( prd . m ) & f2 in ( prd . m )) & g is_primitive-recursively_expressed_by f1,f2,i)));
consider f1,f2 being (Element of ( HFuncs ( NAT ) )),i being (Element of ( NAT )) such that A7: f1 in ( prd . m ) and A8: f2 in ( prd . m ) and A9: g is_primitive-recursively_expressed_by f1,f2,i by A6;
A10: f2 is  quasi_total by A2,A8;
f1 is  quasi_total by A2,A7;
hence thesis by A5,A9,A10,CKB117:1;
end;
end;

end;
suppose A11: f in ( composition-closure ( prd . m ) );

thus f is  quasi_total
proof
per cases  by A11,XBOOLE_0:def 3;
suppose f in ( prd . m );

hence thesis by A2;
end;
suppose f in { ( h * <: F :> ) where h is (Element of ( HFuncs ( NAT ) )),F is  with_the_same_arity (Element of ( ( HFuncs ( NAT ) ) * )): ((h in ( prd . m ) & ( arity h ) = ( len F )) & ( rng F ) c= ( prd . m )) };

then consider h being (Element of ( HFuncs ( NAT ) )),F being  with_the_same_arity (Element of ( ( HFuncs ( NAT ) ) * )) such that A12: f = ( h * <: F :> ) and A13: h in ( prd . m ) and A14: ( arity h ) = ( len F ) and A15: ( rng F ) c= ( prd . m );
A16: (for h being (Element of ( HFuncs ( NAT ) )) holds (h in ( rng F ) implies h is  quasi_total)) by A2,A15;
h is  quasi_total by A2,A13;
hence thesis by A12,A14,A16,CKB85:1;
end;
end;

end;
end;
A17: p[ ( 0 ) ]
proof
let f being (Element of ( HFuncs ( NAT ) ));
assume f in ( prd . ( 0 ) );
then f in ( initial-funcs ) by CKB136:def 1;
then A18: (f in { ( ( 0 ) const ( 0 ) ),( 1 succ 1 ) } or f in { ( n proj i ) where n is (Element of ( NAT )),i is (Element of ( NAT )): (1 <= i & i <= n) }) by XBOOLE_0:def 3;
per cases  by A18,TARSKI:def 2;
suppose f = ( ( 0 ) const ( 0 ) );

hence thesis by CKB57:1;
end;
suppose f = ( 1 succ 1 );

hence thesis by CKB57:1;
end;
suppose f in { ( n proj i ) where n is (Element of ( NAT )),i is (Element of ( NAT )): (1 <= i & i <= n) };

then (ex n,i being (Element of ( NAT )) st ((f = ( n proj i ) & 1 <= i) & i <= n));
hence thesis by CKB57:1;
end;
end;
(for m being (Element of ( NAT )) holds p[ m ]) from NAT_1:sch 1(A17,A1);
hence thesis;
end;
