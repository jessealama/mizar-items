environ
vocabularies NUMBERS,ZFMISC_1,RELAT_2,REWRITE1,XBOOLE_0,ORDERS_2,PRELAMB,SUBSET_1,IDEAL_1,TARSKI,RELAT_1,STRUCT_0,ARYTM_3,XXREAL_0,WAYBEL_0,LATTICE3,LATTICES,EQREL_1,CARD_FIL,YELLOW_0,ORDINAL2,BINOP_1,FUNCT_1,OPOSET_1,CARD_1,FUNCOP_1,FINSUB_1,YELLOW_1,ARYTM_0,WELLORD2,FINSEQ_1,FUNCT_7,NAT_1,ORDINAL1,ORDINAL4,FINSET_1,FINSEQ_5,ARYTM_1,ABCMIZ_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,RELAT_2,SUBSET_1,ORDINAL1,FINSUB_1,CARD_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,FINSET_1,FINSEQ_1,FUNCT_4,ALG_1,FINSEQ_5,NUMBERS,XCMPLX_0,NAT_1,DOMAIN_1,STRUCT_0,ORDERS_2,LATTICE3,REWRITE1,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_7,XXREAL_0,CKB2,CKB3,CKB5,CKB6,CKB12,CKB13,CKB14,CKB16,CKB18,CKB19,CKB25,CKB29,CKB31,CKB33;
definitions TARSKI,XBOOLE_0,RELAT_2,FUNCT_1,FINSEQ_1,LATTICE3,REWRITE1,YELLOW_0,WAYBEL_0,STRUCT_0,RELSET_1,CKB3,CKB5,CKB6,CKB13,CKB16,CKB18,CKB19,CKB29,CKB31,CKB33;
theorems TARSKI,XBOOLE_0,XBOOLE_1,SUBSET_1,FINSUB_1,NAT_1,FINSEQ_1,CARD_1,TREES_1,FINSEQ_5,FINSEQ_6,RELAT_1,RELSET_1,FUNCT_1,FUNCT_2,FUNCT_4,FUNCOP_1,STRUCT_0,ORDERS_2,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_4,YELLOW_7,WAYBEL_6,WAYBEL_8,ZFMISC_1,FINSEQ_2,FINSEQ_3,HILBERT2,REWRITE1,ORDINAL1,XREAL_1,XXREAL_0,PRE_POLY,CKB3,CKB5,CKB6,CKB11,CKB13,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34;
schemes XBOOLE_0,NAT_1,FUNCT_1,FUNCT_2,RECDEF_1,RELSET_1,ORDERS_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_2,FINSET_1,FINSUB_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,FINSEQ_5,REWRITE1,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_7,YELLOW_9,ORDINAL1,CARD_1,RELSET_1,CKB1,CKB4,CKB7,CKB8,CKB9,CKB10,CKB12,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
constructors FINSUB_1,XXREAL_0,NAT_1,FINSEQ_5,REWRITE1,BORSUK_1,LATTICE3,WAYBEL_0,YELLOW_1,FUNCOP_1,XREAL_0,CKB3,CKB6,CKB12,CKB13,CKB16,CKB18,CKB19,CKB25,CKB29,CKB31,CKB33;
requirements BOOLE,SUBSET,NUMERALS,REAL,ARITHM;
begin
definition
let T being  reflexive  transitive  antisymmetric  with_suprema TA-structure;
redefine attr T is  adj-structured
means
:Def11: (for t1,t2 being (type of T) holds ( adjs ( t1 "\/" t2 ) ) = ( ( adjs t1 ) /\ ( adjs t2 ) ));
compatibility
proof
A1: ( dom (the adj-map of T) ) = (the carrier of T) by FUNCT_2:def 1;
A2: ( Fin (the adjectives of T) ) c= ( bool (the adjectives of T) ) by FINSUB_1:13;
( BoolePoset (the adjectives of T) ) = ( InclPoset ( bool (the adjectives of T) ) ) by YELLOW_1:4
.= RelStr (# ( bool (the adjectives of T) ),( RelIncl ( bool (the adjectives of T) ) ) #) by YELLOW_1:def 1;
then ( rng (the adj-map of T) ) c= (the carrier of ( ( BoolePoset (the adjectives of T) ) opp )) by A2,XBOOLE_1:1;
then reconsider f = (the adj-map of T) as (Function of T,( ( BoolePoset (the adjectives of T) ) opp )) by A1,FUNCT_2:2;
thus (T is  adj-structured implies (for t1,t2 being (type of T) holds ( adjs ( t1 "\/" t2 ) ) = ( ( adjs t1 ) /\ ( adjs t2 ) )))
proof
assume (the adj-map of T) is  join-preserving  join-preserving (Function of T,( ( BoolePoset (the adjectives of T) ) opp ));
then reconsider f = (the adj-map of T) as  join-preserving (Function of T,( ( BoolePoset (the adjectives of T) ) opp ));
let t1 being (type of T),t2 being (type of T);
thus ( adjs ( t1 "\/" t2 ) ) = ( ( f . t1 ) "\/" ( f . t2 ) ) by WAYBEL_6:2
.= ( ( ~ ( f . t1 ) ) "/\" ( ~ ( f . t2 ) ) ) by YELLOW_7:22
.= ( ( adjs t1 ) /\ ( adjs t2 ) ) by YELLOW_1:17;
end;

assume A3: (for t1,t2 being (type of T) holds ( adjs ( t1 "\/" t2 ) ) = ( ( adjs t1 ) /\ ( adjs t2 ) ));
now
let t1 being (type of T),t2 being (type of T);
thus ( f . ( t1 "\/" t2 ) ) = ( adjs ( t1 "\/" t2 ) )
.= ( ( adjs t1 ) /\ ( adjs t2 ) ) by A3
.= ( ( ~ ( f . t1 ) ) "/\" ( ~ ( f . t2 ) ) ) by YELLOW_1:17
.= ( ( f . t1 ) "\/" ( f . t2 ) ) by YELLOW_7:22;
end;
hence (the adj-map of T) is  join-preserving  join-preserving (Function of T,( ( BoolePoset (the adjectives of T) ) opp )) by WAYBEL_6:2;
end;
end;
