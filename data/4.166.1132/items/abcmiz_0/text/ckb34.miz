environ
vocabularies NUMBERS,ZFMISC_1,RELAT_2,REWRITE1,XBOOLE_0,ORDERS_2,PRELAMB,SUBSET_1,IDEAL_1,TARSKI,RELAT_1,STRUCT_0,ARYTM_3,XXREAL_0,WAYBEL_0,LATTICE3,LATTICES,EQREL_1,CARD_FIL,YELLOW_0,ORDINAL2,BINOP_1,FUNCT_1,OPOSET_1,CARD_1,FUNCOP_1,FINSUB_1,YELLOW_1,ARYTM_0,WELLORD2,FINSEQ_1,FUNCT_7,NAT_1,ORDINAL1,ORDINAL4,FINSET_1,FINSEQ_5,ARYTM_1,ABCMIZ_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,RELAT_2,SUBSET_1,ORDINAL1,FINSUB_1,CARD_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,FINSET_1,FINSEQ_1,FUNCT_4,ALG_1,FINSEQ_5,NUMBERS,XCMPLX_0,NAT_1,DOMAIN_1,STRUCT_0,ORDERS_2,LATTICE3,REWRITE1,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_7,XXREAL_0,CKB2,CKB3,CKB5,CKB6,CKB12,CKB13,CKB14,CKB16,CKB18,CKB19,CKB25,CKB29,CKB31,CKB33;
definitions TARSKI,XBOOLE_0,RELAT_2,FUNCT_1,FINSEQ_1,LATTICE3,REWRITE1,YELLOW_0,WAYBEL_0,STRUCT_0,RELSET_1,CKB3,CKB5,CKB6,CKB13,CKB16,CKB18,CKB19,CKB29,CKB31,CKB33;
theorems TARSKI,XBOOLE_0,XBOOLE_1,SUBSET_1,FINSUB_1,NAT_1,FINSEQ_1,CARD_1,TREES_1,FINSEQ_5,FINSEQ_6,RELAT_1,RELSET_1,FUNCT_1,FUNCT_2,FUNCT_4,FUNCOP_1,STRUCT_0,ORDERS_2,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_4,YELLOW_7,WAYBEL_6,WAYBEL_8,ZFMISC_1,FINSEQ_2,FINSEQ_3,HILBERT2,REWRITE1,ORDINAL1,XREAL_1,XXREAL_0,PRE_POLY,CKB3,CKB5,CKB6,CKB11,CKB13,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB29,CKB30,CKB31,CKB32,CKB33;
schemes XBOOLE_0,NAT_1,FUNCT_1,FUNCT_2,RECDEF_1,RELSET_1,ORDERS_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_2,FINSET_1,FINSUB_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,FINSEQ_5,REWRITE1,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_7,YELLOW_9,ORDINAL1,CARD_1,RELSET_1,CKB1,CKB4,CKB7,CKB8,CKB9,CKB10,CKB12,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
constructors FINSUB_1,XXREAL_0,NAT_1,FINSEQ_5,REWRITE1,BORSUK_1,LATTICE3,WAYBEL_0,YELLOW_1,FUNCOP_1,XREAL_0,CKB3,CKB6,CKB12,CKB13,CKB16,CKB18,CKB19,CKB25,CKB29,CKB31,CKB33;
requirements BOOLE,SUBSET,NUMERALS,REAL,ARITHM;
begin
theorem
Th9: (for T1,T2 being non empty TA-structure holds (( the TA-structure of T1 ) = ( the TA-structure of T2 ) implies (T1 is  adj-structured implies T2 is  adj-structured)))
proof
let T1 being non empty TA-structure,T2 being non empty TA-structure;
assume that
A1: ( the TA-structure of T1 ) = ( the TA-structure of T2 );
assume (the adj-map of T1) is  join-preserving  join-preserving (Function of T1,( ( BoolePoset (the adjectives of T1) ) opp ));
then reconsider f = (the adj-map of T1) as  join-preserving (Function of T1,( ( BoolePoset (the adjectives of T1) ) opp ));
reconsider g = f as (Function of T2,( ( BoolePoset (the adjectives of T2) ) opp )) by A1;
A2: ( the RelStr of T1 ) = ( the RelStr of T2 ) by A1;
g is  join-preserving
proof
let x being (type of T2),y being (type of T2);
reconsider x9 = x,y9 = y as (type of T1) by A1;
assume A3:  ex_sup_of { x,y },T2;
then A4:  ex_sup_of { x9,y9 },T1 by A2,YELLOW_0:14;
A5: f preserves_sup_of { x9,y9 } by WAYBEL_0:def 35;
hence  ex_sup_of ( g .: { x,y } ),( ( BoolePoset (the adjectives of T2) ) opp ) by A1,A4,WAYBEL_0:def 31;
( sup ( f .: { x9,y9 } ) ) = ( f . ( sup { x9,y9 } ) ) by A4,A5,WAYBEL_0:def 31;
hence thesis by A1,A2,A3,YELLOW_0:26;
end;
hence (the adj-map of T2) is  join-preserving  join-preserving (Function of T2,( ( BoolePoset (the adjectives of T2) ) opp )) by A1;
end;
