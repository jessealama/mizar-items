environ
vocabularies NUMBERS,ZFMISC_1,RELAT_2,REWRITE1,XBOOLE_0,ORDERS_2,PRELAMB,SUBSET_1,IDEAL_1,TARSKI,RELAT_1,STRUCT_0,ARYTM_3,XXREAL_0,WAYBEL_0,LATTICE3,LATTICES,EQREL_1,CARD_FIL,YELLOW_0,ORDINAL2,BINOP_1,FUNCT_1,OPOSET_1,CARD_1,FUNCOP_1,FINSUB_1,YELLOW_1,ARYTM_0,WELLORD2,FINSEQ_1,FUNCT_7,NAT_1,ORDINAL1,ORDINAL4,FINSET_1,FINSEQ_5,ARYTM_1,ABCMIZ_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,RELAT_2,SUBSET_1,ORDINAL1,FINSUB_1,CARD_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,FINSET_1,FINSEQ_1,FUNCT_4,ALG_1,FINSEQ_5,NUMBERS,XCMPLX_0,NAT_1,DOMAIN_1,STRUCT_0,ORDERS_2,LATTICE3,REWRITE1,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_7,XXREAL_0,CKB2,CKB3,CKB5,CKB6,CKB12,CKB13,CKB14,CKB16,CKB18,CKB19,CKB25,CKB29,CKB31,CKB33,CKB35,CKB37,CKB38,CKB45,CKB51,CKB52,CKB54,CKB62,CKB64,CKB68,CKB77,CKB97,CKB98,CKB100,CKB101,CKB102,CKB103,CKB104,CKB105,CKB111,CKB116;
definitions TARSKI,XBOOLE_0,RELAT_2,FUNCT_1,FINSEQ_1,LATTICE3,REWRITE1,YELLOW_0,WAYBEL_0,STRUCT_0,RELSET_1,CKB3,CKB5,CKB6,CKB13,CKB16,CKB18,CKB19,CKB29,CKB31,CKB33,CKB35,CKB37,CKB38,CKB45,CKB51,CKB52,CKB54,CKB62,CKB64,CKB68,CKB77,CKB97,CKB100,CKB101,CKB102,CKB103,CKB104,CKB105,CKB111,CKB116;
theorems TARSKI,XBOOLE_0,XBOOLE_1,SUBSET_1,FINSUB_1,NAT_1,FINSEQ_1,CARD_1,TREES_1,FINSEQ_5,FINSEQ_6,RELAT_1,RELSET_1,FUNCT_1,FUNCT_2,FUNCT_4,FUNCOP_1,STRUCT_0,ORDERS_2,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_4,YELLOW_7,WAYBEL_6,WAYBEL_8,ZFMISC_1,FINSEQ_2,FINSEQ_3,HILBERT2,REWRITE1,ORDINAL1,XREAL_1,XXREAL_0,PRE_POLY,CKB3,CKB5,CKB6,CKB11,CKB13,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB48,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB100,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106,CKB107,CKB108,CKB109,CKB110,CKB111,CKB112,CKB113,CKB115,CKB116;
schemes XBOOLE_0,NAT_1,FUNCT_1,FUNCT_2,RECDEF_1,RELSET_1,ORDERS_1,CKB114;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_2,FINSET_1,FINSUB_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,FINSEQ_5,REWRITE1,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_7,YELLOW_9,ORDINAL1,CARD_1,RELSET_1,CKB1,CKB4,CKB7,CKB8,CKB9,CKB10,CKB12,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB47,CKB49,CKB50,CKB65,CKB98,CKB99;
constructors FINSUB_1,XXREAL_0,NAT_1,FINSEQ_5,REWRITE1,BORSUK_1,LATTICE3,WAYBEL_0,YELLOW_1,FUNCOP_1,XREAL_0,CKB3,CKB6,CKB12,CKB13,CKB16,CKB18,CKB19,CKB25,CKB29,CKB31,CKB33,CKB37,CKB38,CKB45,CKB51,CKB52,CKB54,CKB62,CKB64,CKB68,CKB77,CKB97,CKB98,CKB100,CKB101,CKB102,CKB104,CKB105,CKB111,CKB116;
requirements BOOLE,SUBSET,NUMERALS,REAL,ARITHM;
begin
registration
cluster  Mizar-widening-like  involutive  without_fixpoints  consistent  adj-structured  adjs-typed  non-absorbing  subjected  commutative for  complete  upper-bounded non  void 1 -element  reflexive  transitive  antisymmetric  strict  complete  upper-bounded non  void 1 -element  reflexive  transitive  antisymmetric  strict TAS-structure;
existence
proof
set P = the non  void  Mizar-widening-like  involutive  without_fixpoints  consistent  adj-structured  adjs-typed 1 -element  reflexive  complete  strict TA-structure;
set T = TAS-structure (# (the carrier of P),(the adjectives of P),(the InternalRel of P),(the non-op of P),(the adj-map of P),( sub P ) #);
XX: (the carrier of P) is 1 -element by STRUCT_0:def 19;
( the RelStr of P ) = ( the RelStr of T );
then reconsider T as non  void 1 -element  reflexive  strict TAS-structure by CKB13:def 1,XX,STRUCT_0:def 19,WAYBEL_8:12;
take T;
thus T is  Mizar-widening-like;
( the AdjectiveStr of P ) = ( the AdjectiveStr of T );
hence T is  involutive  without_fixpoints by CKB21:1,CKB22:1;
thus T is  consistent  adj-structured  adjs-typed by CKB32:1,CKB34:1,CKB46:1;
hereby
let a being (adjective of T);
reconsider b = a as (adjective of P);
thus ( sub ( non- a ) ) = ( sup ( ( types ( non- b ) ) \/ ( types ( non- ( non- b ) ) ) ) ) by CKB97:def 1
.= ( sup ( ( types ( non- b ) ) \/ ( types b ) ) ) by CKB18:def 1
.= ( sub a ) by CKB97:def 1;
end;
A1: ( the RelStr of P ) = ( the RelStr of T );
thus T is  subjected
proof
let a being (adjective of T);
reconsider b = a as (adjective of P);
A2: ( types ( non- a ) ) = ( types ( non- b ) ) by CKB39:1;
( types a ) = ( types b ) by CKB39:1;
then ( sup ( ( types a ) \/ ( types ( non- a ) ) ) ) = ( sup ( ( types b ) \/ ( types ( non- b ) ) ) ) by A1,A2,YELLOW_0:17,YELLOW_0:26;
then ( sup ( ( types a ) \/ ( types ( non- a ) ) ) ) = ( sub a ) by CKB97:def 1;
hence thesis by YELLOW_0:32;
end;

let t1 being (type of T);
let t2 being (type of T);
let a being (adjective of T);
assume that
a is_properly_applicable_to t1
and
( a ast t1 ) <= t2;
take A = ( {} (the adjectives of T) );
thus A is_properly_applicable_to ( t1 "\/" t2 ) by CKB113:1;
thus ( A ast ( t1 "\/" t2 ) ) = t2 by STRUCT_0:def 10;
end;
end;
