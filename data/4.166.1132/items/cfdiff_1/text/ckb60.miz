environ
vocabularies NUMBERS,SUBSET_1,REAL_1,XREAL_0,ORDINAL1,CFUNCT_1,COMSEQ_1,PARTFUN1,ORDINAL2,NAT_1,FDIFF_1,VALUED_0,SEQ_2,CARD_1,SEQ_1,FUNCT_1,COMPLEX1,RELAT_1,ARYTM_3,XXREAL_0,ARYTM_1,FUNCOP_1,VALUED_1,FUNCT_2,TARSKI,RCOMP_1,XBOOLE_0,FCONT_1,CFCONT_1,XXREAL_2,CFDIFF_1;
notations TARSKI,SUBSET_1,ORDINAL1,FUNCT_1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,PARTFUN1,FUNCT_2,FUNCOP_1,VALUED_0,VALUED_1,SEQ_1,RELSET_1,SEQ_2,CFUNCT_1,COMSEQ_1,COMSEQ_2,COMSEQ_3,CFCONT_1,XXREAL_0,CKB1,CKB3,CKB13,CKB15,CKB16,CKB18,CKB29,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB49;
definitions XCMPLX_0,XBOOLE_0,TARSKI,RELAT_1,COMSEQ_2,SEQM_3,CFCONT_1,SUBSET_1,FINSEQ_4,VALUED_0,VALUED_1,SEQ_2,COMPLEX1,FUNCT_2,CKB1,CKB3,CKB13,CKB16,CKB29,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB49;
theorems TARSKI,NAT_1,FUNCT_1,FUNCT_2,ZFMISC_1,COMPLEX1,SEQ_1,SEQ_2,SEQ_4,NUMBERS,COMSEQ_1,COMSEQ_2,COMSEQ_3,CFUNCT_1,CFCONT_1,RELAT_1,XBOOLE_0,XBOOLE_1,PARTFUN1,PARTFUN2,XCMPLX_0,XCMPLX_1,XREAL_1,XXREAL_0,ORDINAL1,ABSVALUE,XREAL_0,FUNCOP_1,SUBSET_1,VALUED_1,VALUED_0,CKB1,CKB2,CKB3,CKB4,CKB6,CKB11,CKB12,CKB13,CKB16,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB47,CKB48,CKB49,CKB50,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59;
schemes SEQ_1,COMSEQ_1,FUNCT_2;
registrations FUNCT_1,RELSET_1,FUNCT_2,MEMBERED,NUMBERS,ORDINAL1,XREAL_0,XXREAL_0,COMSEQ_2,NAT_1,VALUED_0,SEQ_4,VALUED_1,FUNCOP_1,CKB5,CKB7,CKB8,CKB9,CKB10,CKB14,CKB17,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB46,CKB51,CKB52;
constructors PARTFUN1,REAL_1,NAT_1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,FINSEQ_4,SEQM_3,PARTFUN2,SQUARE_1,COMSEQ_2,COMSEQ_3,CFCONT_1,XXREAL_0,CFUNCT_1,RELSET_1,CKB1,CKB3,CKB13,CKB16,CKB29,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB49;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve a for Complex;
reserve x for Complex;
reserve x0 for Complex;
reserve f for (PartFunc of ( COMPLEX ),( COMPLEX ));
reserve R for C_REST;
reserve R1 for C_REST;
reserve L for C_LINEAR;
reserve L1 for C_LINEAR;
theorem
Th25: (for a holds (for f holds (for x0 holds (f is_differentiable_in x0 implies (( a (#) f ) is_differentiable_in x0 & ( diff (( a (#) f ),x0) ) = ( a * ( diff (f,x0) ) ))))))
proof
let a;
let f;
let x0;
assume A1: f is_differentiable_in x0;
then consider N1 being (Neighbourhood of x0) such that A2: N1 c= ( dom f ) and A3: (ex L st (ex R st (for x holds (x in N1 implies ( ( f /. x ) - ( f /. x0 ) ) = ( ( L /. ( x - x0 ) ) + ( R /. ( x - x0 ) ) ))))) by CKB33:def 1;
consider L1,R1 such that A4: (for x holds (x in N1 implies ( ( f /. x ) - ( f /. x0 ) ) = ( ( L1 /. ( x - x0 ) ) + ( R1 /. ( x - x0 ) ) ))) by A3;
reconsider R = ( a (#) R1 ) as C_REST;
reconsider L = ( a (#) L1 ) as C_LINEAR;
A5: N1 c= ( dom ( a (#) f ) ) by A2,VALUED_1:def 5;
A6:now
let x;
A7: x0 in N1 by CKB31:1;
assume A8: x in N1;
hence ( ( ( a (#) f ) /. x ) - ( ( a (#) f ) /. x0 ) ) = ( ( a * ( f /. x ) ) - ( ( a (#) f ) /. x0 ) ) by A5,CFUNCT_1:4
.= ( ( a * ( f /. x ) ) - ( a * ( f /. x0 ) ) ) by A5,A7,CFUNCT_1:4
.= ( a * ( ( f /. x ) - ( f /. x0 ) ) )
.= ( a * ( ( L1 /. ( x - x0 ) ) + ( R1 /. ( x - x0 ) ) ) ) by A4,A8
.= ( ( a * ( L1 /. ( x - x0 ) ) ) + ( a * ( R1 /. ( x - x0 ) ) ) )
.= ( ( L /. ( x - x0 ) ) + ( a * ( R1 /. ( x - x0 ) ) ) ) by CFUNCT_1:65
.= ( ( L /. ( x - x0 ) ) + ( R /. ( x - x0 ) ) ) by CFUNCT_1:65;
end;
hence ( a (#) f ) is_differentiable_in x0 by A5,CKB33:def 1;
hence ( diff (( a (#) f ),x0) ) = ( L /. ( 1r ) ) by A5,A6,CKB34:def 1
.= ( a * ( L1 /. ( 1r ) ) ) by CFUNCT_1:65
.= ( a * ( diff (f,x0) ) ) by A1,A2,A4,CKB34:def 1;
end;
