environ
vocabularies NUMBERS,SUBSET_1,REAL_1,XREAL_0,ORDINAL1,CFUNCT_1,COMSEQ_1,PARTFUN1,ORDINAL2,NAT_1,FDIFF_1,VALUED_0,SEQ_2,CARD_1,SEQ_1,FUNCT_1,COMPLEX1,RELAT_1,ARYTM_3,XXREAL_0,ARYTM_1,FUNCOP_1,VALUED_1,FUNCT_2,TARSKI,RCOMP_1,XBOOLE_0,FCONT_1,CFCONT_1,XXREAL_2,CFDIFF_1;
notations TARSKI,SUBSET_1,ORDINAL1,FUNCT_1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,PARTFUN1,FUNCT_2,FUNCOP_1,VALUED_0,VALUED_1,SEQ_1,RELSET_1,SEQ_2,CFUNCT_1,COMSEQ_1,COMSEQ_2,COMSEQ_3,CFCONT_1,XXREAL_0,CKB1;
definitions XCMPLX_0,XBOOLE_0,TARSKI,RELAT_1,COMSEQ_2,SEQM_3,CFCONT_1,SUBSET_1,FINSEQ_4,VALUED_0,VALUED_1,SEQ_2,COMPLEX1,FUNCT_2,CKB1;
theorems TARSKI,NAT_1,FUNCT_1,FUNCT_2,ZFMISC_1,COMPLEX1,SEQ_1,SEQ_2,SEQ_4,NUMBERS,COMSEQ_1,COMSEQ_2,COMSEQ_3,CFUNCT_1,CFCONT_1,RELAT_1,XBOOLE_0,XBOOLE_1,PARTFUN1,PARTFUN2,XCMPLX_0,XCMPLX_1,XREAL_1,XXREAL_0,ORDINAL1,ABSVALUE,XREAL_0,FUNCOP_1,SUBSET_1,VALUED_1,VALUED_0,CKB1;
schemes SEQ_1,COMSEQ_1,FUNCT_2;
registrations FUNCT_1,RELSET_1,FUNCT_2,MEMBERED,NUMBERS,ORDINAL1,XREAL_0,XXREAL_0,COMSEQ_2,NAT_1,VALUED_0,SEQ_4,VALUED_1,FUNCOP_1;
constructors PARTFUN1,REAL_1,NAT_1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,FINSEQ_4,SEQM_3,PARTFUN2,SQUARE_1,COMSEQ_2,COMSEQ_3,CFCONT_1,XXREAL_0,CFUNCT_1,RELSET_1,CKB1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for (Element of ( NAT ));
theorem
(for rs being Real_Sequence holds (for cs being Complex_Sequence holds ((rs = cs & rs is  convergent) implies cs is  convergent)))
proof
deffunc F(Nat) = ( 0 );
let rs being Real_Sequence;
let cs being Complex_Sequence;
assume that
A1: rs = cs
and
A2: rs is  convergent;
consider bs being Real_Sequence such that A3: (for n holds ( bs . n ) = F(n)) from SEQ_1:sch 1;
(for n being Nat holds ( bs . n ) = F(n))
proof
let n being Nat;
n in ( NAT ) by ORDINAL1:def 12;
hence thesis by A3;
end;
then A4: bs is  constant by VALUED_0:def 18;
(for n holds (( Re ( cs . n ) ) = ( rs . n ) & ( Im ( cs . n ) ) = ( bs . n )))
proof
let n;
thus ( Re ( cs . n ) ) = ( rs . n ) by A1,COMPLEX1:def 1;
( Im ( cs . n ) ) = ( Im ( rs . n ) ) by A1;
then ( Im ( cs . n ) ) = ( 0 ) by COMPLEX1:def 2;
hence thesis by A3;
end;
hence thesis by A2,A4,COMSEQ_3:38;
end;
