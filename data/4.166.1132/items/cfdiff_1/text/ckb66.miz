environ
vocabularies NUMBERS,SUBSET_1,REAL_1,XREAL_0,ORDINAL1,CFUNCT_1,COMSEQ_1,PARTFUN1,ORDINAL2,NAT_1,FDIFF_1,VALUED_0,SEQ_2,CARD_1,SEQ_1,FUNCT_1,COMPLEX1,RELAT_1,ARYTM_3,XXREAL_0,ARYTM_1,FUNCOP_1,VALUED_1,FUNCT_2,TARSKI,RCOMP_1,XBOOLE_0,FCONT_1,CFCONT_1,XXREAL_2,CFDIFF_1;
notations TARSKI,SUBSET_1,ORDINAL1,FUNCT_1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,PARTFUN1,FUNCT_2,FUNCOP_1,VALUED_0,VALUED_1,SEQ_1,RELSET_1,SEQ_2,CFUNCT_1,COMSEQ_1,COMSEQ_2,COMSEQ_3,CFCONT_1,XXREAL_0,CKB1,CKB3,CKB13,CKB15,CKB16,CKB18,CKB29,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB49;
definitions XCMPLX_0,XBOOLE_0,TARSKI,RELAT_1,COMSEQ_2,SEQM_3,CFCONT_1,SUBSET_1,FINSEQ_4,VALUED_0,VALUED_1,SEQ_2,COMPLEX1,FUNCT_2,CKB1,CKB3,CKB13,CKB16,CKB29,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB49;
theorems TARSKI,NAT_1,FUNCT_1,FUNCT_2,ZFMISC_1,COMPLEX1,SEQ_1,SEQ_2,SEQ_4,NUMBERS,COMSEQ_1,COMSEQ_2,COMSEQ_3,CFUNCT_1,CFCONT_1,RELAT_1,XBOOLE_0,XBOOLE_1,PARTFUN1,PARTFUN2,XCMPLX_0,XCMPLX_1,XREAL_1,XXREAL_0,ORDINAL1,ABSVALUE,XREAL_0,FUNCOP_1,SUBSET_1,VALUED_1,VALUED_0,CKB1,CKB2,CKB3,CKB4,CKB6,CKB11,CKB12,CKB13,CKB16,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB47,CKB48,CKB49,CKB50,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
schemes SEQ_1,COMSEQ_1,FUNCT_2;
registrations FUNCT_1,RELSET_1,FUNCT_2,MEMBERED,NUMBERS,ORDINAL1,XREAL_0,XXREAL_0,COMSEQ_2,NAT_1,VALUED_0,SEQ_4,VALUED_1,FUNCOP_1,CKB5,CKB7,CKB8,CKB9,CKB10,CKB14,CKB17,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB46,CKB51,CKB52;
constructors PARTFUN1,REAL_1,NAT_1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,FINSEQ_4,SEQM_3,PARTFUN2,SQUARE_1,COMSEQ_2,COMSEQ_3,CFCONT_1,XXREAL_0,CFUNCT_1,RELSET_1,CKB1,CKB3,CKB13,CKB16,CKB29,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB49;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x for Complex;
reserve x0 for Complex;
reserve f1 for (PartFunc of ( COMPLEX ),( COMPLEX ));
reserve f2 for (PartFunc of ( COMPLEX ),( COMPLEX ));
reserve Z for  open (Subset of ( COMPLEX ));
theorem
(for f1 holds (for f2 holds (for Z holds (((Z c= ( dom ( f1 (#) f2 ) ) & f1 is_differentiable_on Z) & f2 is_differentiable_on Z) implies (( f1 (#) f2 ) is_differentiable_on Z & (for x holds (x in Z implies ( ( ( f1 (#) f2 ) `| Z ) /. x ) = ( ( ( f2 /. x ) * ( diff (f1,x) ) ) + ( ( f1 /. x ) * ( diff (f2,x) ) ) ))))))))
proof
let f1;
let f2;
let Z;
assume that
A1: Z c= ( dom ( f1 (#) f2 ) )
and
A2: (f1 is_differentiable_on Z & f2 is_differentiable_on Z);
now
let x0;
assume x0 in Z;
then (f1 is_differentiable_in x0 & f2 is_differentiable_in x0) by A2,CKB47:1;
hence ( f1 (#) f2 ) is_differentiable_in x0 by CKB61:1;
end;
hence A3: ( f1 (#) f2 ) is_differentiable_on Z by A1,CKB47:1;
now
let x;
assume A4: x in Z;
then A5: (f1 is_differentiable_in x & f2 is_differentiable_in x) by A2,CKB47:1;
thus ( ( ( f1 (#) f2 ) `| Z ) /. x ) = ( diff (( f1 (#) f2 ),x) ) by A3,A4,CKB49:def 1
.= ( ( ( f2 /. x ) * ( diff (f1,x) ) ) + ( ( f1 /. x ) * ( diff (f2,x) ) ) ) by A5,CKB61:1;
end;
hence thesis;
end;
