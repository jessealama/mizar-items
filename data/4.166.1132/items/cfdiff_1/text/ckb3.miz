environ
vocabularies NUMBERS,SUBSET_1,REAL_1,XREAL_0,ORDINAL1,CFUNCT_1,COMSEQ_1,PARTFUN1,ORDINAL2,NAT_1,FDIFF_1,VALUED_0,SEQ_2,CARD_1,SEQ_1,FUNCT_1,COMPLEX1,RELAT_1,ARYTM_3,XXREAL_0,ARYTM_1,FUNCOP_1,VALUED_1,FUNCT_2,TARSKI,RCOMP_1,XBOOLE_0,FCONT_1,CFCONT_1,XXREAL_2,CFDIFF_1;
notations TARSKI,SUBSET_1,ORDINAL1,FUNCT_1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,PARTFUN1,FUNCT_2,FUNCOP_1,VALUED_0,VALUED_1,SEQ_1,RELSET_1,SEQ_2,CFUNCT_1,COMSEQ_1,COMSEQ_2,COMSEQ_3,CFCONT_1,XXREAL_0,CKB1;
definitions XCMPLX_0,XBOOLE_0,TARSKI,RELAT_1,COMSEQ_2,SEQM_3,CFCONT_1,SUBSET_1,FINSEQ_4,VALUED_0,VALUED_1,SEQ_2,COMPLEX1,FUNCT_2,CKB1;
theorems TARSKI,NAT_1,FUNCT_1,FUNCT_2,ZFMISC_1,COMPLEX1,SEQ_1,SEQ_2,SEQ_4,NUMBERS,COMSEQ_1,COMSEQ_2,COMSEQ_3,CFUNCT_1,CFCONT_1,RELAT_1,XBOOLE_0,XBOOLE_1,PARTFUN1,PARTFUN2,XCMPLX_0,XCMPLX_1,XREAL_1,XXREAL_0,ORDINAL1,ABSVALUE,XREAL_0,FUNCOP_1,SUBSET_1,VALUED_1,VALUED_0,CKB1,CKB2;
schemes SEQ_1,COMSEQ_1,FUNCT_2;
registrations FUNCT_1,RELSET_1,FUNCT_2,MEMBERED,NUMBERS,ORDINAL1,XREAL_0,XXREAL_0,COMSEQ_2,NAT_1,VALUED_0,SEQ_4,VALUED_1,FUNCOP_1;
constructors PARTFUN1,REAL_1,NAT_1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,FINSEQ_4,SEQM_3,PARTFUN2,SQUARE_1,COMSEQ_2,COMSEQ_3,CFCONT_1,XXREAL_0,CFUNCT_1,RELSET_1,CKB1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve r for  real number;
reserve seq for Complex_Sequence;
reserve f for (PartFunc of ( COMPLEX ),( COMPLEX ));
definition
let r being  real number;
func InvShift r -> Complex_Sequence means 
:Def2: (for n holds ( it . n ) = ( 1 / ( n + r ) ));
existence
proof
deffunc F( real number) = ( 1 / ( $1 + r ) );
(ex seq st (for n holds ( seq . n ) = F(n))) from COMSEQ_1:sch 1;
hence thesis;
end;
uniqueness
proof
let f being Complex_Sequence;
let g being Complex_Sequence;
assume that
A1: (for n holds ( f . n ) = ( 1 / ( n + r ) ))
and
A2: (for n holds ( g . n ) = ( 1 / ( n + r ) ));
let n;
thus ( f . n ) = ( 1 / ( n + r ) ) by A1
.= ( g . n ) by A2;
end;
end;
