environ
vocabularies GROUP_1,XBOOLE_0,SUBSET_1,GROUP_2,PRE_TOPC,RELAT_1,TARSKI,STRUCT_0;
notations TARSKI,XBOOLE_0,SUBSET_1,STRUCT_0,ALGSTR_0,GROUP_1,GROUP_2,GROUP_3,GROUP_4,CKB12;
definitions XBOOLE_0,GROUP_2,TARSKI,GROUP_4,CKB12;
theorems GROUP_1,GROUP_8,GROUP_2,GROUP_3,XBOOLE_0,XBOOLE_1,GROUP_4,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
registrations XBOOLE_0,STRUCT_0,GROUP_1,GROUP_2,GROUP_3;
constructors REALSET2,GROUP_4,CKB12;
requirements SUBSET,BOOLE;
begin
reserve G for Group;
reserve A for non  empty (Subset of G);
reserve N for (Subgroup of G);
definition
let G being Group;
let A being (Subset of G);
let N being (Subgroup of G);
func N ~ A -> (Subset of G) equals 
{ x where x is (Element of G): ( x * N ) meets A };
correctness
proof
{ x where x is (Element of G): ( x * N ) meets A } c= (the carrier of G)
proof
let y being set;
assume y in { x where x is (Element of G): ( x * N ) meets A };
then (ex x being (Element of G) st (y = x & ( x * N ) meets A));
hence thesis;
end;
hence thesis;
end;
end;
