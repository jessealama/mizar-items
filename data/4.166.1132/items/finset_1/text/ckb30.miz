environ
vocabularies FUNCT_1,RELAT_1,ORDINAL1,XBOOLE_0,FUNCOP_1,ORDINAL3,ORDINAL2,TARSKI,SUBSET_1,SETFAM_1,ZFMISC_1,MCART_1,FUNCT_4,FINSET_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,RELAT_1,FUNCT_1,FUNCOP_1,MCART_1,SETFAM_1,ORDINAL1,ORDINAL2,ORDINAL3,SUBSET_1,DOMAIN_1,RELSET_1,FUNCT_2,FUNCT_3,FUNCT_4,CKB1,CKB2;
definitions TARSKI,XBOOLE_0,FUNCOP_1,RELAT_1,FUNCT_4,CKB1;
theorems FUNCT_1,ENUMSET1,MCART_1,ZFMISC_1,TARSKI,RELAT_1,ORDINAL3,ORDINAL1,XBOOLE_0,XBOOLE_1,FUNCT_3,FUNCOP_1,FUNCT_4,CKB1,CKB3,CKB7,CKB18,CKB19,CKB23,CKB24,CKB26,CKB27,CKB29;
schemes FUNCT_1,PARTFUN1,ORDINAL2,XBOOLE_0,CKB6,CKB28;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,ORDINAL2,RELSET_1,CKB4,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB20,CKB21,CKB22,CKB25;
constructors DOMAIN_1,FUNCT_3,FUNCOP_1,ORDINAL3,FUNCT_4,SETFAM_1,RELSET_1,CKB1;
requirements SUBSET,BOOLE,NUMERALS;
begin
reserve A for set;
reserve B for set;
reserve X for set;
reserve x for set;
reserve y for set;
reserve f for Function;
registration
let A being  finite set;
let B being  finite set;
cluster [: A,B :] ->  finite;
coherence
proof
A1: (for y holds [: A,{ y } :] is  finite)
proof
let y;
deffunc F(set) = [ $1,y ];
consider f such that A2: (( dom f ) = A & (for x holds (x in A implies ( f . x ) = F(x)))) from FUNCT_1:sch 3;
(for x holds (x in ( rng f ) iff x in [: A,{ y } :]))
proof
let x;
thus (x in ( rng f ) implies x in [: A,{ y } :])
proof
assume x in ( rng f );
then consider z being set such that A3: z in ( dom f ) and A4: ( f . z ) = x by FUNCT_1:def 3;
x = [ z,y ] by A2,A3,A4;
hence thesis by A2,A3,ZFMISC_1:106;
end;

thus (x in [: A,{ y } :] implies x in ( rng f ))
proof
assume x in [: A,{ y } :];
then consider x1,x2 being set such that A5: x1 in A and A6: x2 in { y } and A7: x = [ x1,x2 ] by ZFMISC_1:def 2;
x2 = y by A6,TARSKI:def 1;
then x = ( f . x1 ) by A2,A5,A7;
hence thesis by A2,A5,FUNCT_1:def 3;
end;

end;
then ( rng f ) = [: A,{ y } :] by TARSKI:1;
then ( f .: A ) = [: A,{ y } :] by A2,RELAT_1:113;
hence thesis;
end;
defpred P[ set ]
 means
(ex y st (y in B & $1 = [: A,{ y } :]));
consider G being set such that A8: (for x holds (x in G iff (x in ( bool [: A,B :] ) & P[ x ]))) from XBOOLE_0:sch 1;
(for x holds (x in ( union G ) iff x in [: A,B :]))
proof
let x;
thus (x in ( union G ) implies x in [: A,B :])
proof
assume x in ( union G );
then consider X such that A9: x in X and A10: X in G by TARSKI:def 4;
X in ( bool [: A,B :] ) by A8,A10;
hence thesis by A9;
end;

assume x in [: A,B :];
then consider y,z being set such that A11: y in A and A12: z in B and A13: x = [ y,z ] by ZFMISC_1:def 2;
A14: [ y,z ] in [: A,{ z } :] by A11,ZFMISC_1:106;
{ z } c= B by A12,ZFMISC_1:31;
then [: A,{ z } :] c= [: A,B :] by ZFMISC_1:95;
then [: A,{ z } :] in G by A8,A12;
hence thesis by A13,A14,TARSKI:def 4;
end;
then A15: ( union G ) = [: A,B :] by TARSKI:1;
deffunc F(set) = [: A,{ $1 } :];
consider g being Function such that A16: (( dom g ) = B & (for x holds (x in B implies ( g . x ) = F(x)))) from FUNCT_1:sch 3;
(for x holds (x in ( rng g ) iff x in G))
proof
let x;
thus (x in ( rng g ) implies x in G)
proof
assume x in ( rng g );
then consider y such that A17: y in ( dom g ) and A18: ( g . y ) = x by FUNCT_1:def 3;
A19: x = [: A,{ y } :] by A16,A17,A18;
{ y } c= B by A16,A17,ZFMISC_1:31;
then x c= [: A,B :] by A19,ZFMISC_1:95;
hence thesis by A8,A16,A17,A19;
end;

assume x in G;
then consider y such that A20: y in B and A21: x = [: A,{ y } :] by A8;
x = ( g . y ) by A16,A20,A21;
hence thesis by A16,A20,FUNCT_1:def 3;
end;
then ( rng g ) = G by TARSKI:1;
then A22: ( g .: B ) = G by A16,RELAT_1:113;
(for X holds (X in G implies X is  finite))
proof
let X;
assume X in G;
then (ex y st (y in B & X = [: A,{ y } :])) by A8;
hence thesis by A1;
end;
hence thesis by A15,A22,CKB29:1;
end;
end;
