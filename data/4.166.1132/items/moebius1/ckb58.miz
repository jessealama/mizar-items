environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,FUNCT_1,CARD_1,XCMPLX_0,INT_2,ORDINAL1,XXREAL_0,ARYTM_3,FINSEQ_1,RELAT_1,ABIAN,NEWTON,NAT_3,PRE_POLY,NAT_1,UPROOTS,CARD_3,TARSKI,INT_1,FINSET_1,ARYTM_1,PYTHTRIP,ZFMISC_1,SQUARE_1,XREAL_0,REAL_1,SETFAM_1,PBOOLE,VALUED_0,FUNCOP_1,MOEBIUS1;
notations TARSKI,XBOOLE_0,SUBSET_1,FINSET_1,ZFMISC_1,ORDINAL1,CARD_1,NUMBERS,XCMPLX_0,XREAL_0,XXREAL_0,NEWTON,SETFAM_1,RELAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,VALUED_0,SEQ_1,PBOOLE,SQUARE_1,RVSUM_1,BINOP_2,FUNCOP_1,XXREAL_2,NAT_3,DOMAIN_1,ABIAN,PYTHTRIP,UPROOTS,RECDEF_1,PRE_POLY,POLYNOM2,REAL_1,NAT_1,NAT_D,INT_2,CKB25,CKB27,CKB32,CKB42,CKB53;
definitions TARSKI,XBOOLE_0,RVSUM_1,SQUARE_1,CKB25,CKB32,CKB42,CKB53;
theorems XBOOLE_0,NAT_3,BAGORDER,NEWTON,INT_2,NAT_2,WSIERP_1,CARD_1,PEPIN,NAT_1,XCMPLX_1,XREAL_1,PYTHTRIP,ABIAN,ORDINAL1,EULER_1,XREAL_0,FINSEQ_1,XBOOLE_1,TARSKI,ZFMISC_1,RVSUM_1,FINSEQ_2,NUMBERS,INT_1,FUNCT_1,PBOOLE,UPROOTS,CARD_4,FUNCOP_1,RADIX_1,RELAT_1,FINSOP_1,XXREAL_0,NAT_D,VALUED_0,XXREAL_2,FUNCT_2,PARTFUN1,PRE_POLY,MEASURE6,CKB1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29,CKB30,CKB32,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB57;
schemes FUNCT_2,CLASSES1,PRE_CIRC,SUBSET_1,NAT_1,CKB2;
registrations XBOOLE_0,FUNCT_1,ORDINAL1,FINSET_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,NEWTON,NAT_3,VALUED_0,XXREAL_2,CARD_1,FUNCT_2,UPROOTS,RELSET_1,PRE_POLY,REAL_1,CKB3,CKB17,CKB31,CKB33,CKB34,CKB35,CKB47,CKB56;
constructors SETFAM_1,NAT_D,FINSOP_1,ZFMISC_1,BINARITH,WSIERP_1,ABIAN,PEPIN,PYTHTRIP,POLYNOM2,UPROOTS,NAT_3,SEQ_1,RECDEF_1,BINOP_2,XXREAL_2,PRE_POLY,REAL_1,DOMAIN_1,RELSET_1,CKB25,CKB32,CKB42,CKB53;
requirements NUMERALS,SUBSET,ARITHM,REAL,BOOLE;
begin
definition
let X being set;
func SMoebius X -> (ManySortedSet of ( NAT ))
means
:Def5: (( support it ) = ( X /\ ( SCNAT ) ) & (for k being (Element of ( NAT )) holds (k in ( support it ) implies ( it . k ) = ( Moebius k ))));
existence
proof
defpred R[ set ]
 means
$1 in ( X /\ ( SCNAT ) );
deffunc G((Element of ( NAT ))) = ( 0 );
deffunc F((Element of ( NAT ))) = ( Moebius $1 );
(ex f being (ManySortedSet of ( NAT )) st (for i being (Element of ( NAT )) holds (i in ( NAT ) implies ((R[ i ] implies ( f . i ) = F(i)) & ((not R[ i ]) implies ( f . i ) = G(i)))))) from PRE_CIRC:sch 2;
then consider f being (ManySortedSet of ( NAT )) such that A1: (for i being (Element of ( NAT )) holds (i in ( NAT ) implies ((R[ i ] implies ( f . i ) = F(i)) & ((not R[ i ]) implies ( f . i ) = G(i)))));
A2: ( support f ) c= ( SCNAT )
proof
( dom f ) = ( NAT ) by PARTFUN1:def 2;
then A3: ( support f ) c= ( NAT ) by PRE_POLY:37;
let x being set;
assume A4: x in ( support f );
then A5: ( f . x ) <> ( 0 ) by PRE_POLY:def 7;
per cases ;
suppose R[ x ];

hence thesis by XBOOLE_0:def 4;
end;
suppose (not R[ x ]);

hence thesis by A1,A4,A5,A3;
end;
end;
A6: ( support f ) = ( X /\ ( SCNAT ) )
proof
thus ( support f ) c= ( X /\ ( SCNAT ) )
proof
let x being set;
assume A7: x in ( support f );
then x in ( SCNAT ) by A2;
then reconsider i = x as (Element of ( NAT ));
assume (not x in ( X /\ ( SCNAT ) ));
then ( f . i ) = ( 0 ) by A1;
hence contradiction by A7,PRE_POLY:def 7;
end;

let x being set;
assume A8: x in ( X /\ ( SCNAT ) );
then reconsider i = x as (Element of ( NAT ));
x in ( SCNAT ) by A8,XBOOLE_0:def 4;
then A9: ( Moebius i ) <> ( 0 ) by CKB52:1;
( f . i ) = ( Moebius i ) by A1,A8;
hence thesis by A9,PRE_POLY:def 7;
end;
reconsider f as (ManySortedSet of ( NAT ));
take f;
thus ( support f ) = ( X /\ ( SCNAT ) ) by A6;
let k being (Element of ( NAT ));
assume k in ( support f );
hence thesis by A1,A6;
end;
uniqueness
proof
let f being (ManySortedSet of ( NAT )),g being (ManySortedSet of ( NAT ));
assume that
A10: ( support f ) = ( X /\ ( SCNAT ) )
and
A11: (for k being (Element of ( NAT )) holds (k in ( support f ) implies ( f . k ) = ( Moebius k )))
and
A12: ( support g ) = ( X /\ ( SCNAT ) )
and
A13: (for k being (Element of ( NAT )) holds (k in ( support g ) implies ( g . k ) = ( Moebius k )));
(for i being set holds (i in ( NAT ) implies ( f . i ) = ( g . i )))
proof
let i being set;
assume i in ( NAT );
then reconsider j = i as (Element of ( NAT ));
per cases ;
suppose A14: j in ( support f );

hence ( f . i ) = ( Moebius j ) by A11
.= ( g . i ) by A10,A12,A13,A14;
end;
suppose A15: (not j in ( support f ));

hence ( f . i ) = ( 0 ) by PRE_POLY:def 7
.= ( g . i ) by A10,A12,A15,PRE_POLY:def 7;
end;
end;
hence thesis by PBOOLE:3;
end;
end;
