environ
vocabularies NUMBERS,SUBSET_1,FUNCT_1,NAT_1,TARSKI,ORDINAL1,FINSET_1,RELAT_1,AFINSQ_1,ARYTM_1,ARYTM_3,FINSEQ_1,XXREAL_0,CARD_1,XBOOLE_0,ORDINAL4,CARD_3,FINSOP_1,FUNCOP_1,BINOP_2,FUNCT_2,XREAL_0,SEQ_1,SERIES_1,VALUED_1,SQUARE_1,COMPLEX1,PARTFUN3,ZFMISC_1,CARD_FIN,REALSET1,CATALAN1,REAL_1,ORDINAL2,SEQ_2,NEWTON,PREPOWER,FUNCT_3,CATALAN2;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,XREAL_0,NUMBERS,RELAT_1,FUNCT_1,REAL_1,NAT_1,FINSET_1,ORDINAL1,XXREAL_0,NAT_D,AFINSQ_1,SEQ_1,VALUED_1,RELSET_1,DOMAIN_1,FUNCT_2,FUNCOP_1,BINOP_1,BINOP_2,RECDEF_1,SERIES_1,PARTFUN3,AFINSQ_2,ZFMISC_1,SQUARE_1,NEWTON,STIRL2_1,CARD_FIN,CATALAN1,SEQ_2,PREPOWER,COMPLEX1,QUIN_1,CKB2;
definitions TARSKI,XBOOLE_0,FUNCT_1,QUIN_1,SQUARE_1,CKB2;
theorems CATALAN1,AFINSQ_1,TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,XBOOLE_1,NAT_1,FUNCT_2,XCMPLX_1,CARD_2,INT_1,ORDINAL1,WELLORD2,CARD_1,BINOP_2,NEWTON,XREAL_1,FUNCOP_1,STIRL2_1,FUNCT_1,CARD_FIN,SERIES_1,SEQ_1,SEQ_2,COMPLEX1,SQUARE_1,ABSVALUE,RSSPACE2,POWER,PREPOWER,WSIERP_1,FIB_NUM,TIETZE,XREAL_0,SERIES_2,XXREAL_0,NAT_D,AFINSQ_2,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
schemes FUNCT_2,NAT_1,XBOOLE_0,STIRL2_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FUNCOP_1,FINSET_1,FRAENKEL,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,BINOP_2,CARD_1,AFINSQ_1,RELSET_1,VALUED_1,VALUED_0,MEMBERED,NEWTON,AFINSQ_2,CKB5,CKB8,CKB9;
constructors QUIN_1,PREPOWER,SERIES_1,PARTFUN3,BINOM,WELLORD2,DOMAIN_1,SETWISEO,REAL_1,NAT_D,YELLOW20,RECDEF_1,BINOP_2,RELSET_1,ORDINAL4,SEQ_1,AFINSQ_1,SQUARE_1,CATALAN1,STIRL2_1,CARD_FIN,AFINSQ_2,ABIAN,SEQ_2,CKB2;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve y for set;
reserve k for Nat;
reserve N for (Element of ( NAT ));
reserve p for (XFinSequence of ( NAT ));
reserve q for (XFinSequence of ( NAT ));
theorem
Th20: (for p holds (for q holds (for k holds ((((( p | ( ( 2 * k ) + ( len q ) ) ) = ( ( ( k --> ( 0 ) ) ^ q ) ^ ( k --> 1 ) ) & q is  dominated_by_0) & ( 2 * ( Sum q ) ) = ( len q )) & k > ( 0 )) implies ( min* { N: (( 2 * ( Sum ( p | N ) ) ) = N & N > ( 0 )) } ) = ( ( 2 * k ) + ( len q ) )))))
proof
let p;
let q;
let k;
assume that
A1: ( p | ( ( 2 * k ) + ( len q ) ) ) = ( ( ( k --> ( 0 ) ) ^ q ) ^ ( k --> 1 ) )
and
A2: q is  dominated_by_0
and
A3: ( 2 * ( Sum q ) ) = ( len q )
and
A4: k > ( 0 );
set k0 = ( k --> ( 0 ) );
A5: ( Sum k0 ) = ( k * ( 0 ) ) by AFINSQ_2:58;
then A6: ( 2 * k ) > ( 0 ) by A4,XREAL_1:68;
reconsider k1 = ( k --> 1 ) as (XFinSequence of ( NAT ));
set M = { N: (( 2 * ( Sum ( p | N ) ) ) = N & N > ( 0 )) };
set kqk = ( ( k0 ^ q ) ^ k1 );
( Sum kqk ) = ( ( Sum ( k0 ^ q ) ) + ( Sum k1 ) ) by AFINSQ_2:55;
then A7: ( Sum kqk ) = ( ( ( Sum k0 ) + ( Sum q ) ) + ( Sum k1 ) ) by AFINSQ_2:55;
( Sum k1 ) = ( k * 1 ) by AFINSQ_2:58;
then ( 2 * ( Sum ( p | ( ( 2 * k ) + ( len q ) ) ) ) ) = ( ( len q ) + ( 2 * k ) ) by A1,A3,A7,A5;
then A8: ( ( 2 * k ) + ( len q ) ) in M by A6;
M c= ( NAT )
proof
let y;
assume y in M;
then (ex i being (Element of ( NAT )) st ((i = y & ( 2 * ( Sum ( p | i ) ) ) = i) & i > ( 0 )));
hence thesis;
end;
then reconsider M as non empty (Subset of ( NAT )) by A8;
( min* M ) = ( ( 2 * k ) + ( len q ) )
proof
kqk = ( k0 ^ ( q ^ k1 ) ) by AFINSQ_1:27;
then A9: ( len kqk ) = ( ( len k0 ) + ( len ( q ^ k1 ) ) ) by AFINSQ_1:17;
( dom k0 ) = k by FUNCOP_1:13;
then A10: ( len kqk ) = ( k + ( ( len q ) + ( len k1 ) ) ) by A9,AFINSQ_1:17;
assume A11: ( min* M ) <> ( ( 2 * k ) + ( len q ) );
( min* M ) in M by NAT_1:def 1;
then A12: (ex i being (Element of ( NAT )) st ((i = ( min* M ) & ( 2 * ( Sum ( p | i ) ) ) = i) & i > ( 0 )));
A13: ( dom k1 ) = k by FUNCOP_1:13;
A14: ( ( 2 * k ) + ( len q ) ) >= ( min* M ) by A8,NAT_1:def 1;
then A15: ( min* M ) c= ( ( 2 * k ) + ( len q ) ) by NAT_1:39;
then A16: ( p | ( min* M ) ) = ( kqk | ( min* M ) ) by A1,RELAT_1:74;
now
per cases ;
suppose A17: ( min* M ) <= k;

(k = ( dom k0 ) & kqk = ( k0 ^ ( q ^ k1 ) )) by AFINSQ_1:27,FUNCOP_1:13;
then A18: ( kqk | ( min* M ) ) = ( k0 | ( min* M ) ) by A17,AFINSQ_1:58;
A19: ( Sum ( ( min* M ) --> ( 0 ) ) ) = ( ( min* M ) * ( 0 ) ) by AFINSQ_2:58;
( k0 | ( min* M ) ) = ( ( min* M ) --> ( 0 ) ) by A17,CKB6:1;
then ( Sum ( p | ( min* M ) ) ) = ( Sum ( ( min* M ) --> ( 0 ) ) ) by A1,A15,A18,RELAT_1:74;
hence contradiction by A12,A19;
end;
suppose ( min* M ) > k;

then reconsider mk = ( ( min* M ) - k ) as (Element of ( NAT )) by NAT_1:21;
now
per cases ;
suppose A20: ( min* M ) <= ( k + ( len q ) );

A21: ( dom k0 ) = k by FUNCOP_1:13;
( min* M ) = ( mk + k );
then A22: ( ( k0 ^ q ) | ( min* M ) ) = ( k0 ^ ( q | mk ) ) by A21,AFINSQ_1:59;
( dom ( k0 ^ q ) ) = ( ( len k0 ) + ( len q ) ) by AFINSQ_1:def 3;
then ( kqk | ( min* M ) ) = ( ( k0 ^ q ) | ( min* M ) ) by A20,A21,AFINSQ_1:58;
then A23: ( Sum ( p | ( min* M ) ) ) = ( ( Sum k0 ) + ( Sum ( q | mk ) ) ) by A16,A22,AFINSQ_2:55;
A24: 1 <= k by A4,NAT_1:14;
( Sum k0 ) = ( k * ( 0 ) ) by AFINSQ_2:58;
then ( mk + k ) <= mk by A2,A12,A23,CKB3:1;
hence contradiction by A24,NAT_1:19;
end;
suppose ( min* M ) > ( k + ( len q ) );

then reconsider mkL = ( ( min* M ) - ( k + ( len q ) ) ) as (Element of ( NAT )) by NAT_1:21;
A25: ( 2 * ( Sum ( p | ( min* M ) ) ) ) = ( min* M ) by A12;
(( dom ( k0 ^ q ) ) = ( ( len k0 ) + ( len q ) ) & ( dom k0 ) = k) by AFINSQ_1:def 3,FUNCOP_1:13;
then ( min* M ) = ( ( dom ( k0 ^ q ) ) + mkL );
then ( kqk | ( min* M ) ) = ( ( k0 ^ q ) ^ ( k1 | mkL ) ) by AFINSQ_1:59;
then A26: ( Sum ( p | ( min* M ) ) ) = ( ( Sum ( k0 ^ q ) ) + ( Sum ( k1 | mkL ) ) ) by A16,AFINSQ_2:55;
( min* M ) < ( len kqk ) by A11,A10,A13,A14,XXREAL_0:1;
then mkL < ( ( ( 2 * k ) + ( len q ) ) - ( k + ( len q ) ) ) by A10,A13,XREAL_1:9;
then ( k1 | mkL ) = ( mkL --> 1 ) by CKB6:1;
then A27: ( Sum ( k1 | mkL ) ) = ( mkL * 1 ) by AFINSQ_2:58;
(( Sum ( k0 ^ q ) ) = ( ( Sum k0 ) + ( Sum q ) ) & ( Sum k0 ) = ( k * ( 0 ) )) by AFINSQ_2:55,AFINSQ_2:58;
hence contradiction by A3,A11,A26,A27,A25;
end;
end;
hence contradiction;
end;
end;
hence contradiction;
end;
hence thesis;
end;
