environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,VALUED_0,FUNCT_1,XCMPLX_0,ORDINAL1,ARYTM_1,RELAT_1,ARYTM_3,CARD_1,MEMBERED,PARTFUN1,TARSKI,ORDINAL4,VALUED_1,COMPLEX1,XREAL_0,FUNCT_3,XXREAL_2,XXREAL_0,REAL_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,COMPLEX1,MEMBERED,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_3,VALUED_0,VALUED_1,SEQ_2,REAL_1,CKB2,CKB5,CKB6,CKB7,CKB10,CKB11;
definitions TARSKI,PARTFUN1,XBOOLE_0,VALUED_0,VALUED_1,SEQ_2,FUNCT_1,CKB2,CKB7;
theorems TARSKI,FUNCT_1,FUNCT_3,ABSVALUE,PARTFUN1,PARTFUN2,RELSET_1,RELAT_1,XBOOLE_0,XBOOLE_1,XCMPLX_0,XCMPLX_1,XREAL_1,COMPLEX1,XXREAL_0,VALUED_0,VALUED_1,SEQ_2,CKB1,CKB2,CKB7,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60;
schemes FUNCT_1;
registrations XBOOLE_0,FUNCT_1,RELSET_1,NUMBERS,XREAL_0,MEMBERED,VALUED_0,VALUED_1,XCMPLX_0,SEQ_2,XXREAL_0,RELAT_1,CKB3,CKB4,CKB8,CKB9;
constructors PARTFUN1,FUNCT_3,XXREAL_0,REAL_1,COMPLEX1,VALUED_1,PARTFUN2,SEQ_2,SEQ_1,RELSET_1,CKB2,CKB5,CKB6,CKB7,CKB10,CKB11;
requirements NUMERALS,SUBSET,BOOLE,ARITHM,REAL;
begin
reserve C for non  empty set;
reserve f1 for (PartFunc of C,( REAL ));
reserve f2 for (PartFunc of C,( REAL ));
theorem
Th66: ((((f1 is  total & f2 is  total) iff ( f1 + f2 ) is  total) & ((f1 is  total & f2 is  total) iff ( f1 - f2 ) is  total)) & ((f1 is  total & f2 is  total) iff ( f1 (#) f2 ) is  total))
proof
thus ((f1 is  total & f2 is  total) iff ( f1 + f2 ) is  total)
proof
thus ((f1 is  total & f2 is  total) implies ( f1 + f2 ) is  total)
proof
assume that
A1: f1 is  total
and
A2: f2 is  total;
A3: ( dom f2 ) = C by A2,PARTFUN1:def 2;
( dom f1 ) = C by A1,PARTFUN1:def 2;
hence ( dom ( f1 + f2 ) ) = ( C /\ C ) by A3,VALUED_1:def 1
.= C;
end;

assume ( f1 + f2 ) is  total;
then ( dom ( f1 + f2 ) ) = C by PARTFUN1:def 2;
then A4: ( ( dom f1 ) /\ ( dom f2 ) ) = C by VALUED_1:def 1;
then A5: C c= ( dom f2 ) by XBOOLE_1:17;
C c= ( dom f1 ) by A4,XBOOLE_1:17;
hence (( dom f1 ) = C & ( dom f2 ) = C) by A5,XBOOLE_0:def 10;
end;

thus ((f1 is  total & f2 is  total) iff ( f1 - f2 ) is  total)
proof
thus ((f1 is  total & f2 is  total) implies ( f1 - f2 ) is  total)
proof
assume that
A6: f1 is  total
and
A7: f2 is  total;
A8: ( dom f2 ) = C by A7,PARTFUN1:def 2;
( dom f1 ) = C by A6,PARTFUN1:def 2;
hence ( dom ( f1 - f2 ) ) = ( C /\ C ) by A8,VALUED_1:12
.= C;
end;

assume ( f1 - f2 ) is  total;
then ( dom ( f1 - f2 ) ) = C by PARTFUN1:def 2;
then A9: ( ( dom f1 ) /\ ( dom f2 ) ) = C by VALUED_1:12;
then A10: C c= ( dom f2 ) by XBOOLE_1:17;
C c= ( dom f1 ) by A9,XBOOLE_1:17;
hence (( dom f1 ) = C & ( dom f2 ) = C) by A10,XBOOLE_0:def 10;
end;

thus ((f1 is  total & f2 is  total) implies ( f1 (#) f2 ) is  total)
proof
assume that
A11: f1 is  total
and
A12: f2 is  total;
A13: ( dom f2 ) = C by A12,PARTFUN1:def 2;
( dom f1 ) = C by A11,PARTFUN1:def 2;
hence ( dom ( f1 (#) f2 ) ) = ( C /\ C ) by A13,VALUED_1:def 4
.= C;
end;

assume ( f1 (#) f2 ) is  total;
then ( dom ( f1 (#) f2 ) ) = C by PARTFUN1:def 2;
then A14: ( ( dom f1 ) /\ ( dom f2 ) ) = C by VALUED_1:def 4;
then A15: C c= ( dom f2 ) by XBOOLE_1:17;
C c= ( dom f1 ) by A14,XBOOLE_1:17;
hence (( dom f1 ) = C & ( dom f2 ) = C) by A15,XBOOLE_0:def 10;
end;
