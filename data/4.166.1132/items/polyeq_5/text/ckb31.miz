environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,RELAT_1,NEWTON,ARYTM_3,ARYTM_1,SQUARE_1,XREAL_0,POWER,COMPLEX1,SIN_COS,COMPTRIG,SUBSET_1,CARD_1,XXREAL_0,REAL_1,FUNCT_3,PREPOWER,POLYEQ_5;
notations SUBSET_1,NUMBERS,ORDINAL1,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,COMPLEX1,SQUARE_1,NEWTON,QUIN_1,POWER,SIN_COS,PREPOWER,COMPTRIG,CKB7,CKB8,CKB19,CKB20,CKB21;
definitions SQUARE_1,QUIN_1,CKB8,CKB19,CKB20,CKB21;
theorems XCMPLX_1,NEWTON,COMPTRIG,COMPLEX1,POLYEQ_3,ORDINAL1,XREAL_0,SIN_COS,COMPLEX2,POWER,NAT_1,PREPOWER,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30;
registrations ORDINAL1,XCMPLX_0,XXREAL_0,XREAL_0,SQUARE_1,NAT_1,NEWTON,XBOOLE_0,SIN_COS,REAL_1,QUIN_1;
constructors REAL_1,SQUARE_1,NAT_1,QUIN_1,PREPOWER,POWER,POLYEQ_1,SIN_COS,COMPTRIG,NAT_D,XREAL_0,POLYEQ_3,NUMBERS,XCMPLX_0,XXREAL_0,ABIAN,NEWTON,CKB8,CKB19,CKB20,CKB21;
requirements ARITHM,SUBSET,REAL,BOOLE,NUMERALS;
begin
reserve s1 for  complex number;
reserve s2 for  complex number;
reserve q for  complex number;
reserve r for  complex number;
reserve s3 for  complex number;
reserve p for  complex number;
definition
let a0 being  complex number;
let a1 being  complex number;
let a2 being  complex number;
let a3 being  complex number;
func 1_root_of_quartic (a0,a1,a2,a3) ->  complex number
means
:Def5: (ex p st (ex r st (ex s1 st (((p = ( ( ( 8 * a2 ) - ( 3 * ( a3 |^ 2 ) ) ) / 32 ) & r = ( ( ( ( ( 256 * a0 ) - ( ( 64 * a3 ) * a1 ) ) + ( ( 16 * ( a3 |^ 2 ) ) * a2 ) ) - ( 3 * ( a3 |^ 4 ) ) ) / 1024 )) & s1 = ( 2 -root ( ( p |^ 2 ) - r ) )) & it = ( ( 2 -root ( - ( 2 * ( p - s1 ) ) ) ) - ( a3 / 4 ) ))))) if ( ( ( 8 * a1 ) - ( ( 4 * a2 ) * a3 ) ) + ( a3 |^ 3 ) ) = ( 0 ) otherwise (ex p st (ex q st (ex r st (ex s1 st (ex s2 st (ex s3 st ((((((p = ( ( ( 8 * a2 ) - ( 3 * ( a3 |^ 2 ) ) ) / 32 ) & q = ( ( ( ( 8 * a1 ) - ( ( 4 * a2 ) * a3 ) ) + ( a3 |^ 3 ) ) / 64 )) & r = ( ( ( ( ( 256 * a0 ) - ( ( 64 * a3 ) * a1 ) ) + ( ( 16 * ( a3 |^ 2 ) ) * a2 ) ) - ( 3 * ( a3 |^ 4 ) ) ) / 1024 )) & s1 = ( 2 -root ( 1_root_of_cubic (( - ( q |^ 2 ) ),( ( p |^ 2 ) - r ),( 2 * p )) ) )) & s2 = ( 2 -root ( 2_root_of_cubic (( - ( q |^ 2 ) ),( ( p |^ 2 ) - r ),( 2 * p )) ) )) & s3 = ( - ( q / ( s1 * s2 ) ) )) & it = ( ( ( s1 + s2 ) + s3 ) - ( a3 / 4 ) ))))))));
existence
proof
set p = ( ( ( 8 * a2 ) - ( 3 * ( a3 |^ 2 ) ) ) / 32 );
set q = ( ( ( ( 8 * a1 ) - ( ( 4 * a2 ) * a3 ) ) + ( a3 |^ 3 ) ) / 64 );
set r = ( ( ( ( ( 256 * a0 ) - ( ( 64 * a3 ) * a1 ) ) + ( ( 16 * ( a3 |^ 2 ) ) * a2 ) ) - ( 3 * ( a3 |^ 4 ) ) ) / 1024 );
set s1 = ( 2 -root ( 1_root_of_cubic (( - ( q |^ 2 ) ),( ( p |^ 2 ) - r ),( 2 * p )) ) );
set s2 = ( 2 -root ( 2_root_of_cubic (( - ( q |^ 2 ) ),( ( p |^ 2 ) - r ),( 2 * p )) ) );
set s3 = ( - ( q / ( s1 * s2 ) ) );
set IT = ( ( ( s1 + s2 ) + s3 ) - ( a3 / 4 ) );
thus (( ( ( 8 * a1 ) - ( ( 4 * a2 ) * a3 ) ) + ( a3 |^ 3 ) ) = ( 0 ) implies (ex IT,p,r,s1 being  complex number st (((p = ( ( ( 8 * a2 ) - ( 3 * ( a3 |^ 2 ) ) ) / 32 ) & r = ( ( ( ( ( 256 * a0 ) - ( ( 64 * a3 ) * a1 ) ) + ( ( 16 * ( a3 |^ 2 ) ) * a2 ) ) - ( 3 * ( a3 |^ 4 ) ) ) / 1024 )) & s1 = ( 2 -root ( ( p |^ 2 ) - r ) )) & IT = ( ( 2 -root ( - ( 2 * ( p - s1 ) ) ) ) - ( a3 / 4 ) ))))
proof
set p = ( ( ( 8 * a2 ) - ( 3 * ( a3 |^ 2 ) ) ) / 32 );
set r = ( ( ( ( ( 256 * a0 ) - ( ( 64 * a3 ) * a1 ) ) + ( ( 16 * ( a3 |^ 2 ) ) * a2 ) ) - ( 3 * ( a3 |^ 4 ) ) ) / 1024 );
set s1 = ( 2 -root ( ( p |^ 2 ) - r ) );
set IT = ( ( 2 -root ( - ( 2 * ( p - s1 ) ) ) ) - ( a3 / 4 ) );
assume ( ( ( 8 * a1 ) - ( ( 4 * a2 ) * a3 ) ) + ( a3 |^ 3 ) ) = ( 0 );
take IT;
take p;
take r;
take s1;
thus thesis;
end;

assume ( ( ( 8 * a1 ) - ( ( 4 * a2 ) * a3 ) ) + ( a3 |^ 3 ) ) <> ( 0 );
take IT;
take p;
take q;
take r;
take s1;
take s2;
take s3;
thus thesis;
end;
uniqueness;
correctness;
end;
