environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,RELAT_1,NEWTON,ARYTM_3,ARYTM_1,SQUARE_1,XREAL_0,POWER,COMPLEX1,SIN_COS,COMPTRIG,SUBSET_1,CARD_1,XXREAL_0,REAL_1,FUNCT_3,PREPOWER,POLYEQ_5;
notations SUBSET_1,NUMBERS,ORDINAL1,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,COMPLEX1,SQUARE_1,NEWTON,QUIN_1,POWER,SIN_COS,PREPOWER,COMPTRIG,CKB7,CKB8;
definitions SQUARE_1,QUIN_1,CKB8;
theorems XCMPLX_1,NEWTON,COMPTRIG,COMPLEX1,POLYEQ_3,ORDINAL1,XREAL_0,SIN_COS,COMPLEX2,POWER,NAT_1,PREPOWER,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
registrations ORDINAL1,XCMPLX_0,XXREAL_0,XREAL_0,SQUARE_1,NAT_1,NEWTON,XBOOLE_0,SIN_COS,REAL_1,QUIN_1;
constructors REAL_1,SQUARE_1,NAT_1,QUIN_1,PREPOWER,POWER,POLYEQ_1,SIN_COS,COMPTRIG,NAT_D,XREAL_0,POLYEQ_3,NUMBERS,XCMPLX_0,XXREAL_0,ABIAN,NEWTON,CKB8;
requirements ARITHM,SUBSET,REAL,BOOLE,NUMERALS;
begin
reserve s1 for  complex number;
reserve s2 for  complex number;
reserve q for  complex number;
reserve r for  complex number;
reserve s for  complex number;
definition
let a0 being  complex number;
let a1 being  complex number;
let a2 being  complex number;
func 1_root_of_cubic (a0,a1,a2) ->  complex number
means
:Def2: (ex r st (ex s1 st ((r = ( ( ( ( ( 9 * a2 ) * a1 ) - ( 2 * ( a2 |^ 3 ) ) ) - ( 27 * a0 ) ) / 54 ) & s1 = ( 3 -root ( 2 * r ) )) & it = ( s1 - ( a2 / 3 ) )))) if ( ( 3 * a1 ) - ( a2 |^ 2 ) ) = ( 0 ) otherwise (ex q st (ex r st (ex s st (ex s1 st (ex s2 st (((((q = ( ( ( 3 * a1 ) - ( a2 |^ 2 ) ) / 9 ) & r = ( ( ( ( ( 9 * a2 ) * a1 ) - ( 2 * ( a2 |^ 3 ) ) ) - ( 27 * a0 ) ) / 54 )) & s = ( 2 -root ( ( q |^ 3 ) + ( r |^ 2 ) ) )) & s1 = ( 3 -root ( r + s ) )) & s2 = ( - ( q / s1 ) )) & it = ( ( s1 + s2 ) - ( a2 / 3 ) )))))));
existence
proof
set q = ( ( ( 3 * a1 ) - ( a2 |^ 2 ) ) / 9 );
set r = ( ( ( ( ( 9 * a2 ) * a1 ) - ( 2 * ( a2 |^ 3 ) ) ) - ( 27 * a0 ) ) / 54 );
set s = ( 2 -root ( ( q |^ 3 ) + ( r |^ 2 ) ) );
set s1 = ( 3 -root ( r + s ) );
set s2 = ( - ( q / s1 ) );
set IT = ( ( s1 + s2 ) - ( a2 / 3 ) );
thus (( ( 3 * a1 ) - ( a2 |^ 2 ) ) = ( 0 ) implies (ex IT,r,s1 being  complex number st ((r = ( ( ( ( ( 9 * a2 ) * a1 ) - ( 2 * ( a2 |^ 3 ) ) ) - ( 27 * a0 ) ) / 54 ) & s1 = ( 3 -root ( 2 * r ) )) & IT = ( s1 - ( a2 / 3 ) ))))
proof
set r = ( ( ( ( ( 9 * a2 ) * a1 ) - ( 2 * ( a2 |^ 3 ) ) ) - ( 27 * a0 ) ) / 54 );
set s1 = ( 3 -root ( 2 * r ) );
set IT = ( s1 - ( a2 / 3 ) );
assume ( ( 3 * a1 ) - ( a2 |^ 2 ) ) = ( 0 );
take IT;
take r;
take s1;
thus thesis;
end;

assume ( ( 3 * a1 ) - ( a2 |^ 2 ) ) <> ( 0 );
take IT;
take q;
take r;
take s;
take s1;
take s2;
thus thesis;
end;
uniqueness;
correctness;
end;
