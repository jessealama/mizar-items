environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,RELAT_1,NEWTON,ARYTM_3,ARYTM_1,SQUARE_1,XREAL_0,POWER,COMPLEX1,SIN_COS,COMPTRIG,SUBSET_1,CARD_1,XXREAL_0,REAL_1,FUNCT_3,PREPOWER,POLYEQ_5;
notations SUBSET_1,NUMBERS,ORDINAL1,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,COMPLEX1,SQUARE_1,NEWTON,QUIN_1,POWER,SIN_COS,PREPOWER,COMPTRIG,CKB7,CKB8;
definitions SQUARE_1,QUIN_1,CKB8;
theorems XCMPLX_1,NEWTON,COMPTRIG,COMPLEX1,POLYEQ_3,ORDINAL1,XREAL_0,SIN_COS,COMPLEX2,POWER,NAT_1,PREPOWER,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12;
registrations ORDINAL1,XCMPLX_0,XXREAL_0,XREAL_0,SQUARE_1,NAT_1,NEWTON,XBOOLE_0,SIN_COS,REAL_1,QUIN_1;
constructors REAL_1,SQUARE_1,NAT_1,QUIN_1,PREPOWER,POWER,POLYEQ_1,SIN_COS,COMPTRIG,NAT_D,XREAL_0,POLYEQ_3,NUMBERS,XCMPLX_0,XXREAL_0,ABIAN,NEWTON,CKB8;
requirements ARITHM,SUBSET,REAL,BOOLE,NUMERALS;
begin
reserve z for  complex number;
reserve a0 for  complex number;
reserve a1 for  complex number;
reserve s1 for  complex number;
reserve s2 for  complex number;
theorem
Th11: ((a1 = ( - ( s1 + s2 ) ) & a0 = ( s1 * s2 )) implies (( ( ( z |^ 2 ) + ( a1 * z ) ) + a0 ) = ( 0 ) iff (z = s1 or z = s2)))
proof
assume (a1 = ( - ( s1 + s2 ) ) & a0 = ( s1 * s2 ));
then A1: ( ( z - s1 ) * ( z - s2 ) ) = ( ( ( z * z ) + ( a1 * z ) ) + a0 )
.= ( ( ( z |^ 2 ) + ( a1 * z ) ) + a0 ) by CKB1:1;
hereby
assume ( ( ( z |^ 2 ) + ( a1 * z ) ) + a0 ) = ( 0 );
then A2: (( z - s1 ) = ( 0 ) or ( z - s2 ) = ( 0 )) by A1;
assume (not z = s1);
hence z = s2 by A2;
end;
assume (z = s1 or z = s2);
hence ( ( ( z |^ 2 ) + ( a1 * z ) ) + a0 ) = ( 0 ) by A1;
end;
