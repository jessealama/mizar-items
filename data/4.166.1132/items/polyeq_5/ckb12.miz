environ
vocabularies NUMBERS,XCMPLX_0,ORDINAL1,RELAT_1,NEWTON,ARYTM_3,ARYTM_1,SQUARE_1,XREAL_0,POWER,COMPLEX1,SIN_COS,COMPTRIG,SUBSET_1,CARD_1,XXREAL_0,REAL_1,FUNCT_3,PREPOWER,POLYEQ_5;
notations SUBSET_1,NUMBERS,ORDINAL1,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,COMPLEX1,SQUARE_1,NEWTON,QUIN_1,POWER,SIN_COS,PREPOWER,COMPTRIG,CKB7,CKB8;
definitions SQUARE_1,QUIN_1,CKB8;
theorems XCMPLX_1,NEWTON,COMPTRIG,COMPLEX1,POLYEQ_3,ORDINAL1,XREAL_0,SIN_COS,COMPLEX2,POWER,NAT_1,PREPOWER,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11;
registrations ORDINAL1,XCMPLX_0,XXREAL_0,XREAL_0,SQUARE_1,NAT_1,NEWTON,XBOOLE_0,SIN_COS,REAL_1,QUIN_1;
constructors REAL_1,SQUARE_1,NAT_1,QUIN_1,PREPOWER,POWER,POLYEQ_1,SIN_COS,COMPTRIG,NAT_D,XREAL_0,POLYEQ_3,NUMBERS,XCMPLX_0,XXREAL_0,ABIAN,NEWTON,CKB8;
requirements ARITHM,SUBSET,REAL,BOOLE,NUMERALS;
begin
reserve a for  complex number;
reserve z for  complex number;
theorem
Th10: (( z |^ 2 ) = a iff (z = ( 2 -root a ) or z = ( - ( 2 -root a ) )))
proof
A1: a = ( ( 2 -root a ) |^ 2 ) by CKB9:1
.= ( ( 2 -root a ) * ( 2 -root a ) ) by CKB1:1;
hereby
assume ( z |^ 2 ) = a;
then A2: ( z * z ) = a by CKB1:1;
assume (not z = ( 2 -root a ));
then A3: ( z - ( 2 -root a ) ) <> ( 0 );
assume (not z = ( - ( 2 -root a ) ));
then ( z + ( 2 -root a ) ) <> ( 0 );
then ( ( z - ( 2 -root a ) ) * ( z + ( 2 -root a ) ) ) <> ( 0 ) by A3;
hence contradiction by A1,A2;
end;
assume (z = ( 2 -root a ) or z = ( - ( 2 -root a ) ));
then ( ( z * z ) - ( ( 2 -root a ) * ( 2 -root a ) ) ) = ( 0 );
hence ( z |^ 2 ) = a by A1,CKB1:1;
end;
