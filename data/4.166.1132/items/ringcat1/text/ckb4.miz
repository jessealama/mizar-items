environ
vocabularies XBOOLE_0,CLASSES2,ALGSTR_0,FUNCT_1,FDIFF_1,MSSUBFAM,GROUP_1,RELAT_1,VECTSP_1,ARYTM_3,MOD_2,FUNCSDOM,GRCAT_1,GRAPH_1,STRUCT_0,MIDSP_1,XXREAL_0,CAT_1,SUBSET_1,ENS_1,SUPINF_2,MESFUNC1,TARSKI,PARTFUN1,ZFMISC_1,RINGCAT1,RLVECT_1,LATTICES,BINOP_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,STRUCT_0,ALGSTR_0,GROUP_1,RLVECT_1,VECTSP_1,GRCAT_1,FUNCSDOM,GRAPH_1,CAT_1,CLASSES2,MOD_2,GROUP_6,CKB1;
definitions GRCAT_1,STRUCT_0,GROUP_1,GROUP_6,GRAPH_1,CKB1;
theorems CAT_1,FUNCT_2,GRCAT_1,MCART_1,MOD_2,TARSKI,RELAT_1,ZFMISC_1,XBOOLE_0,FUNCT_1,BINOP_1,GROUP_6,GROUP_1,SUBSET_1,CKB1;
schemes FUNCT_2,BINOP_1,TARSKI;
registrations XBOOLE_0,RELSET_1,FUNCT_2,STRUCT_0,VECTSP_2,GRCAT_1,MOD_2,FUNCSDOM,ALGSTR_0,VECTSP_1,CKB2,CKB3;
constructors PARTFUN1,DOMAIN_1,GRCAT_1,GROUP_6,MOD_2,RELSET_1,FUNCSDOM,ALGSTR_0,CKB1;
requirements SUBSET,BOOLE;
begin
theorem
Th3: (for G1,G2,G3 being non empty doubleLoopStr holds (for f being (Function of G1,G2) holds (for g being (Function of G2,G3) holds ((f is  linear & g is  linear) implies ( g * f ) is  linear))))
proof
let G1 being non empty doubleLoopStr,G2 being non empty doubleLoopStr,G3 being non empty doubleLoopStr;
let f being (Function of G1,G2);
let g being (Function of G2,G3);
assume that
A1: f is  additive  multiplicative  unity-preserving
and
A2: g is  additive  multiplicative  unity-preserving;
set h = ( g * f );
thus h is  additive
proof
let x being (Scalar of G1),y being (Scalar of G1);
A3: (( g . ( f . x ) ) = ( h . x ) & ( g . ( f . y ) ) = ( h . y )) by FUNCT_2:15;
thus ( h . ( x + y ) ) = ( g . ( f . ( x + y ) ) ) by FUNCT_2:15
.= ( g . ( ( f . x ) + ( f . y ) ) ) by A1,GRCAT_1:def 8
.= ( ( h . x ) + ( h . y ) ) by A2,A3,GRCAT_1:def 8;
end;

thus h is  multiplicative
proof
let x being (Scalar of G1),y being (Scalar of G1);
A4: (( g . ( f . x ) ) = ( h . x ) & ( g . ( f . y ) ) = ( h . y )) by FUNCT_2:15;
thus ( h . ( x * y ) ) = ( g . ( f . ( x * y ) ) ) by FUNCT_2:15
.= ( g . ( ( f . x ) * ( f . y ) ) ) by A1,GROUP_6:def 6
.= ( ( h . x ) * ( h . y ) ) by A2,A4,GROUP_6:def 6;
end;

thus ( h . ( 1_ G1 ) ) = ( g . ( f . ( 1_ G1 ) ) ) by FUNCT_2:15
.= ( g . ( 1_ G2 ) ) by A1,GROUP_1:def 13
.= ( 1_ G3 ) by A2,GROUP_1:def 13;
end;
