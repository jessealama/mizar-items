environ
vocabularies XBOOLE_0,CLASSES2,ALGSTR_0,FUNCT_1,FDIFF_1,MSSUBFAM,GROUP_1,RELAT_1,VECTSP_1,ARYTM_3,MOD_2,FUNCSDOM,GRCAT_1,GRAPH_1,STRUCT_0,MIDSP_1,XXREAL_0,CAT_1,SUBSET_1,ENS_1,SUPINF_2,MESFUNC1,TARSKI,PARTFUN1,ZFMISC_1,RINGCAT1,RLVECT_1,LATTICES,BINOP_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,STRUCT_0,ALGSTR_0,GROUP_1,RLVECT_1,VECTSP_1,GRCAT_1,FUNCSDOM,GRAPH_1,CAT_1,CLASSES2,MOD_2,GROUP_6,CKB1,CKB5,CKB6,CKB7,CKB8,CKB11,CKB13,CKB14,CKB16,CKB18,CKB20,CKB30,CKB33,CKB39,CKB41,CKB42,CKB44,CKB46,CKB47,CKB50,CKB53,CKB54,CKB56,CKB59;
definitions GRCAT_1,STRUCT_0,GROUP_1,GROUP_6,GRAPH_1,CKB1,CKB6,CKB7,CKB8,CKB11,CKB14,CKB16,CKB18,CKB30,CKB33,CKB39,CKB44,CKB50,CKB53,CKB56,CKB59;
theorems CAT_1,FUNCT_2,GRCAT_1,MCART_1,MOD_2,TARSKI,RELAT_1,ZFMISC_1,XBOOLE_0,FUNCT_1,BINOP_1,GROUP_6,GROUP_1,SUBSET_1,CKB1,CKB4,CKB6,CKB7,CKB8,CKB9,CKB11,CKB14,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB44,CKB49,CKB50,CKB51,CKB52,CKB53,CKB56,CKB57,CKB58,CKB59,CKB60,CKB62;
schemes FUNCT_2,BINOP_1,TARSKI;
registrations XBOOLE_0,RELSET_1,FUNCT_2,STRUCT_0,VECTSP_2,GRCAT_1,MOD_2,FUNCSDOM,ALGSTR_0,VECTSP_1,CKB2,CKB3,CKB5,CKB10,CKB12,CKB15,CKB19,CKB40,CKB43,CKB45,CKB48,CKB55,CKB61,CKB63;
constructors PARTFUN1,DOMAIN_1,GRCAT_1,GROUP_6,MOD_2,RELSET_1,FUNCSDOM,ALGSTR_0,CKB1,CKB5,CKB6,CKB7,CKB8,CKB11,CKB14,CKB16,CKB18,CKB20,CKB30,CKB33,CKB39,CKB42,CKB44,CKB47,CKB50,CKB53,CKB54,CKB56,CKB59;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve G for Ring;
reserve H for Ring;
reserve V for Ring_DOMAIN;
definition
let V;
func Morphs V -> RingMorphism_DOMAIN means 
:Def18: (x in it iff (ex G,H being (Element of V) st (G <= H & x is (Morphism of G,H))));
existence
proof
set G0 = the (Element of V);
set M = ( Morphs (G0,G0) );
set S = { ( Morphs (G,H) ) where G is (Element of V),H is (Element of V): G <= H };
(( ID G0 ) is (Element of M) & M in S) by CKB53:def 1;
then reconsider T = ( union S ) as non  empty set by TARSKI:def 4;
A1: (x in T iff (ex G,H being (Element of V) st (G <= H & x is (Morphism of G,H))))
proof
thus (x in T implies (ex G,H being (Element of V) st (G <= H & x is (Morphism of G,H))))
proof
assume x in T;
then consider Y being set such that A2: x in Y and A3: Y in S by TARSKI:def 4;
consider G,H being (Element of V) such that A4: Y = ( Morphs (G,H) ) and A5: G <= H by A3;
take G;
take H;
x is (Element of ( Morphs (G,H) )) by A2,A4;
hence thesis by A5;
end;

thus ((ex G,H being (Element of V) st (G <= H & x is (Morphism of G,H))) implies x in T)
proof
given G being (Element of V),H being (Element of V) such that
A6: (G <= H & x is (Morphism of G,H));

set M = ( Morphs (G,H) );
(x in M & M in S) by A6,CKB53:def 1;
hence thesis by TARSKI:def 4;
end;

end;
now
let x being set;
assume x in T;
then (ex G,H being (Element of V) st (G <= H & x is (Morphism of G,H))) by A1;
hence x is  strict  strict RingMorphism;
end;
then reconsider T9 = T as RingMorphism_DOMAIN by CKB44:def 1;
take T9;
thus thesis by A1;
end;
uniqueness
proof
let D1 being RingMorphism_DOMAIN;
let D2 being RingMorphism_DOMAIN;
assume that
A7: (x in D1 iff (ex G,H being (Element of V) st (G <= H & x is (Morphism of G,H))))
and
A8: (x in D2 iff (ex G,H being (Element of V) st (G <= H & x is (Morphism of G,H))));
now
let x;
(x in D1 iff (ex G,H being (Element of V) st (G <= H & x is (Morphism of G,H)))) by A7;
hence (x in D1 iff x in D2) by A8;
end;
hence thesis by TARSKI:1;
end;
end;
