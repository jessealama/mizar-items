environ
vocabularies NUMBERS,ORDINAL1,REAL_1,SUBSET_1,CARD_1,ARYTM_3,XREAL_0,TARSKI,RELAT_1,XXREAL_0,XCMPLX_0,ARYTM_1,XBOOLE_0,FINSET_1,FUNCT_1,NAT_1,FUNCOP_1,PBOOLE,PARTFUN1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,FINSET_1,CARD_1,PBOOLE,NUMBERS,XCMPLX_0,XREAL_0,REAL_1,XXREAL_0,RELAT_1,FUNCT_1,PARTFUN1,FUNCOP_1,FUNCT_2,CKB1,CKB4,CKB5,CKB9,CKB10,CKB63,CKB69,CKB83,CKB84,CKB85,CKB88;
definitions TARSKI,XBOOLE_0,CARD_1,RELAT_1,FUNCT_1,CKB63,CKB69,CKB85;
theorems AXIOMS,ORDINAL1,XCMPLX_1,XREAL_1,XXREAL_0,TARSKI,ORDINAL2,XBOOLE_1,XBOOLE_0,CARD_1,FUNCT_2,FUNCT_1,FUNCOP_1,PBOOLE,RELSET_1,RELAT_1,PARTFUN1,CKB2,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB21,CKB22,CKB23,CKB24,CKB28,CKB29,CKB30,CKB31,CKB32,CKB34,CKB35,CKB38,CKB39,CKB40,CKB41,CKB42,CKB46,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB85,CKB86,CKB89,CKB90,CKB91,CKB94,CKB95,CKB96,CKB97,CKB98;
schemes SUBSET_1,ORDINAL2,FUNCT_2,FRAENKEL,PBOOLE,CKB6,CKB7,CKB20,CKB25,CKB26,CKB27,CKB33,CKB47,CKB48,CKB62,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB82;
registrations SUBSET_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,REAL_1,CARD_1,RELSET_1,FUNCT_2,PBOOLE,CKB3,CKB8,CKB17,CKB18,CKB19,CKB36,CKB37,CKB43,CKB44,CKB45,CKB80,CKB81,CKB87,CKB92,CKB93;
constructors NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,CARD_1,WELLORD2,FUNCT_2,PARTFUN1,FUNCOP_1,FUNCT_4,ENUMSET1,RELSET_1,PBOOLE,CKB4,CKB5,CKB9,CKB10,CKB63,CKB83,CKB85,CKB88;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve k for Nat;
scheme MinPred { F((Element of ( NAT ))) -> (Element of ( NAT )),P[set] } : (ex k being (Element of ( NAT )) st (P[ k ] & (for n being (Element of ( NAT )) holds (P[ n ] implies k <= n))))
provided
A1: (for k being (Element of ( NAT )) holds (F(( k + 1 )) < F(k) or P[ k ]))
proof
now
consider f being (Function of ( NAT ),( NAT )) such that A2: (for k being (Element of ( NAT )) holds ( f . k ) = F(k)) from FUNCT_2:sch 4;
A3: ( f . ( 0 ) ) in ( rng f ) by FUNCT_2:4;
( rng f ) c= ( NAT )
proof
let x being set;
assume x in ( rng f );
then consider y being set such that A4: (y in ( dom f ) & x = ( f . y )) by FUNCT_1:def 3;
reconsider y1 = y as (Element of ( NAT )) by A4,FUNCT_2:def 1;
x = F(y1) by A4,A2;
hence thesis;
end;
then reconsider rf = ( rng f ) as non  empty (Subset of ( NAT )) by A3;
set m = ( min* rf );
m in rf by CKB63:def 1;
then consider x being set such that A5: x in ( dom f ) and A6: m = ( f . x ) by FUNCT_1:def 3;
reconsider x as (Element of ( NAT )) by A5,FUNCT_2:def 1;
(( f . x ) = F(x) & ( f . ( x + 1 ) ) = F(( x + 1 ))) by A2;
then A7: (( f . ( x + 1 ) ) < ( f . x ) or P[ x ]) by A1;
assume A8: (for k holds (not P[ k ]));
( f . ( x + 1 ) ) in rf by FUNCT_2:4;
hence contradiction by CKB63:def 1,A8,A6,A7;
end;
then A9: (ex k being Nat st P[ k ]);
consider k being Nat such that A10: P[ k ] and A11: (for n being Nat holds (P[ n ] implies k <= n)) from CKB26:sch 1(A9);
(k in ( NAT ) & (for n being (Element of ( NAT )) holds (P[ n ] implies k <= n))) by A11,ORDINAL1:def 12;
hence thesis by A10;
end;
