environ
vocabularies NUMBERS,ORDINAL1,REAL_1,SUBSET_1,CARD_1,ARYTM_3,XREAL_0,TARSKI,RELAT_1,XXREAL_0,XCMPLX_0,ARYTM_1,XBOOLE_0,FINSET_1,FUNCT_1,NAT_1,FUNCOP_1,PBOOLE,PARTFUN1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,FINSET_1,CARD_1,PBOOLE,NUMBERS,XCMPLX_0,XREAL_0,REAL_1,XXREAL_0,RELAT_1,FUNCT_1,PARTFUN1,FUNCOP_1,FUNCT_2,CKB1,CKB4,CKB5,CKB9,CKB10,CKB63,CKB69;
definitions TARSKI,XBOOLE_0,CARD_1,RELAT_1,FUNCT_1,CKB63,CKB69;
theorems AXIOMS,ORDINAL1,XCMPLX_1,XREAL_1,XXREAL_0,TARSKI,ORDINAL2,XBOOLE_1,XBOOLE_0,CARD_1,FUNCT_2,FUNCT_1,FUNCOP_1,PBOOLE,RELSET_1,RELAT_1,PARTFUN1,CKB2,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB21,CKB22,CKB23,CKB24,CKB28,CKB29,CKB30,CKB31,CKB32,CKB34,CKB35,CKB38,CKB39,CKB40,CKB41,CKB42,CKB46,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73;
schemes SUBSET_1,ORDINAL2,FUNCT_2,FRAENKEL,PBOOLE,CKB6,CKB7,CKB20,CKB25,CKB26,CKB27,CKB33,CKB47,CKB48,CKB62,CKB74,CKB75,CKB76;
registrations SUBSET_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,REAL_1,CARD_1,RELSET_1,FUNCT_2,PBOOLE,CKB3,CKB8,CKB17,CKB18,CKB19,CKB36,CKB37,CKB43,CKB44,CKB45;
constructors NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,CARD_1,WELLORD2,FUNCT_2,PARTFUN1,FUNCOP_1,FUNCT_4,ENUMSET1,RELSET_1,PBOOLE,CKB4,CKB5,CKB9,CKB10,CKB63;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for Nat;
reserve x for set;
scheme RecUnD { D() -> non empty set,A() -> (Element of D()),P[set,set,set],F,G() -> (Function of ( NAT ),D()) } : F() = G()
provided
A1: ( F() . ( 0 ) ) = A()
and
A2: (for n holds P[ n,( F() . n ),( F() . ( n + 1 ) ) ])
and
A3: ( G() . ( 0 ) ) = A()
and
A4: (for n holds P[ n,( G() . n ),( G() . ( n + 1 ) ) ])
and
A5: (for n being Nat holds (for x,y1,y2 being (Element of D()) holds ((P[ n,x,y1 ] & P[ n,x,y2 ]) implies y1 = y2)))
proof
defpred Q[ Nat ]
 means
( F() . $1 ) <> ( G() . $1 );
A6: (( dom F() ) = ( NAT ) & ( dom G() ) = ( NAT )) by FUNCT_2:def 1;
assume F() <> G();
then (ex x st (x in ( NAT ) & ( F() . x ) <> ( G() . x ))) by A6,FUNCT_1:2;
then A7: (ex k being Nat st Q[ k ]);
consider m being Nat such that A8: (Q[ m ] & (for n being Nat holds (Q[ n ] implies m <= n))) from CKB26:sch 1(A7);
now
assume m <> ( 0 );
then consider k being Nat such that A9: m = ( k + 1 ) by CKB15:1;
reconsider k as (Element of ( NAT )) by ORDINAL1:def 12;
k < m by A9,CKB29:1;
then A10: ( F() . k ) = ( G() . k ) by A8;
(P[ k,( F() . k ),( F() . ( k + 1 ) ) ] & P[ k,( G() . k ),( G() . ( k + 1 ) ) ]) by A2,A4;
hence contradiction by A5,A8,A9,A10;
end;
hence contradiction by A1,A3,A8;
end;
