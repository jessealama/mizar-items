environ
vocabularies NUMBERS,ORDINAL1,REAL_1,SUBSET_1,CARD_1,ARYTM_3,XREAL_0,TARSKI,RELAT_1,XXREAL_0,XCMPLX_0,ARYTM_1,XBOOLE_0,FINSET_1,FUNCT_1,NAT_1,FUNCOP_1,PBOOLE,PARTFUN1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,FINSET_1,CARD_1,PBOOLE,NUMBERS,XCMPLX_0,XREAL_0,REAL_1,XXREAL_0,RELAT_1,FUNCT_1,PARTFUN1,FUNCOP_1,FUNCT_2,CKB1,CKB4,CKB5,CKB9,CKB10;
definitions TARSKI,XBOOLE_0,CARD_1,RELAT_1,FUNCT_1;
theorems AXIOMS,ORDINAL1,XCMPLX_1,XREAL_1,XXREAL_0,TARSKI,ORDINAL2,XBOOLE_1,XBOOLE_0,CARD_1,FUNCT_2,FUNCT_1,FUNCOP_1,PBOOLE,RELSET_1,RELAT_1,PARTFUN1,CKB2,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
schemes SUBSET_1,ORDINAL2,FUNCT_2,FRAENKEL,PBOOLE,CKB6,CKB7;
registrations SUBSET_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,REAL_1,CARD_1,RELSET_1,FUNCT_2,PBOOLE,CKB3,CKB8,CKB17,CKB18,CKB19;
constructors NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,CARD_1,WELLORD2,FUNCT_2,PARTFUN1,FUNCOP_1,FUNCT_4,ENUMSET1,RELSET_1,PBOOLE,CKB4,CKB5,CKB9,CKB10;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for Nat;
reserve m for Nat;
reserve n for Nat;
scheme DefbyInd { N() -> Nat,F(Nat,Nat) -> Nat,P[Nat,Nat] } : ((for k being Nat holds (ex n being Nat st P[ k,n ])) & (for k,n,m being Nat holds ((P[ k,n ] & P[ k,m ]) implies n = m)))
provided
A1: (for k,n being Nat holds (P[ k,n ] iff ((k = ( 0 ) & n = N()) or (ex m,l being Nat st ((k = ( m + 1 ) & P[ m,l ]) & n = F(k,l))))))
proof
reconsider N = N() as (Element of ( NAT )) by ORDINAL1:def 12;
defpred P[ Nat ]
 means
(ex n being Nat st P[ $1,n ]);
A2: (for k being Nat holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being Nat;
given n being Nat such that
A3: P[ k,n ];

reconsider F = F(( k + 1 ),n) as (Element of ( NAT )) by ORDINAL1:def 12;
take F;
thus thesis by A1,A3;
end;
P[ ( 0 ),N ] by A1;
then A4: P[ ( 0 ) ];
thus (for k being Nat holds P[ k ]) from CKB7:sch 1(A4,A2);
defpred P[ Nat ]
 means
(for n,m being Nat holds ((P[ $1,n ] & P[ $1,m ]) implies n = m));
A5: (for k being Nat holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being Nat;
assume that
A6: (for n,m being Nat holds ((P[ k,n ] & P[ k,m ]) implies n = m));
let n being Nat;
let m being Nat;
assume (P[ ( k + 1 ),n ] & P[ ( k + 1 ),m ]);
then ((ex l,u being Nat st ((( k + 1 ) = ( l + 1 ) & P[ l,u ]) & n = F(( k + 1 ),u))) & (ex v,w being Nat st ((( k + 1 ) = ( v + 1 ) & P[ v,w ]) & m = F(( k + 1 ),w)))) by A1;
hence thesis by A6;
end;
A7: P[ ( 0 ) ]
proof
let n being Nat;
let m being Nat;
assume that
A8: P[ ( 0 ),n ]
and
A9: P[ ( 0 ),m ];
(not (ex m,l being Nat st ((( 0 ) = ( m + 1 ) & P[ m,l ]) & n = F(( 0 ),l))));
then ((not (ex n,l being Nat st ((( 0 ) = ( n + 1 ) & P[ n,l ]) & m = F(( 0 ),l)))) & n = N()) by A1,A8;
hence thesis by A1,A9;
end;
thus (for k being Nat holds P[ k ]) from CKB7:sch 1(A7,A5);
end;
