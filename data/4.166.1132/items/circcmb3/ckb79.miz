environ
vocabularies NUMBERS,STRUCT_0,MSAFREE2,XBOOLE_0,MSUALG_1,RELAT_1,CIRCUIT1,FSM_1,SUBSET_1,CIRCUIT2,FUNCT_1,ARYTM_3,CARD_1,XXREAL_0,NAT_1,FUNCT_4,PARTFUN1,FINSET_1,CIRCCOMB,FINSEQ_2,TARSKI,PBOOLE,GLIB_000,FINSEQ_1,NET_1,FACIRC_1,FUNCOP_1,CATALG_1,MCART_1,ZFMISC_1,CLASSES1,REWRITE1,ORDINAL2,MARGREL1,VALUED_0,CIRCCMB3;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,ENUMSET1,ZFMISC_1,RELAT_1,FUNCT_1,PBOOLE,FINSET_1,ORDINAL2,CLASSES1,FUNCT_2,XXREAL_0,NAT_1,VALUED_0,PARTFUN1,LIMFUNC1,REWRITE1,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSEQOP,FUNCT_4,STRUCT_0,MSUALG_1,FACIRC_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FUNCOP_1,XXREAL_2,MCART_1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB21,CKB22,CKB31,CKB49,CKB52,CKB53,CKB58,CKB65,CKB66;
definitions TARSKI,XBOOLE_0,RELAT_1,REWRITE1,MSAFREE2,CIRCUIT2,FINSET_1,CIRCCOMB,FACIRC_1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB21,CKB22,CKB31,CKB49,CKB53;
theorems CIRCCOMB,ZFMISC_1,TARSKI,XBOOLE_0,FINSEQ_1,FUNCT_1,FINSEQ_2,CIRCUIT1,CARD_3,CIRCCMB2,FUNCOP_1,PBOOLE,FINSEQ_3,ENUMSET1,FACIRC_1,ORDINAL2,MCART_1,FUNCT_4,FINSET_1,NAT_1,RELAT_1,MSUALG_1,MSAFREE2,FUNCT_2,RELSET_1,CLASSES1,ORDINAL1,CIRCUIT2,XBOOLE_1,XREAL_1,XXREAL_0,FINSEQ_4,VALUED_0,XXREAL_2,PARTFUN1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB31,CKB33,CKB34,CKB35,CKB36,CKB37,CKB39,CKB40,CKB46,CKB47,CKB48,CKB49,CKB50,CKB53,CKB55,CKB59,CKB60,CKB61,CKB62,CKB67,CKB68,CKB73,CKB74;
schemes TARSKI,XBOOLE_0,FUNCT_2,NAT_1,REWRITE1,CLASSES1,RELAT_1,CKB41,CKB42,CKB43,CKB44,CKB45,CKB70,CKB71,CKB72,CKB75,CKB76,CKB77,CKB78;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XREAL_0,MEMBERED,FINSEQ_1,FINSEQ_2,CARD_3,SEQM_3,FINSEQ_4,PBOOLE,STRUCT_0,MSUALG_1,CIRCCOMB,FACIRC_1,XXREAL_2,RELSET_1,CARD_1,CKB5,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB38,CKB51,CKB54,CKB56,CKB57,CKB63,CKB64,CKB69;
constructors DOMAIN_1,ORDINAL2,CLASSES1,FINSEQOP,FINSEQ_4,LIMFUNC1,REWRITE1,CIRCUIT1,CIRCUIT2,FACIRC_1,XXREAL_2,VALUED_0,RELSET_1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB21,CKB22,CKB31,CKB49,CKB52,CKB53,CKB58,CKB65,CKB66;
requirements BOOLE,SUBSET,NUMERALS,REAL;
begin
scheme OneGate5Result { x1,x2,x3,x4,x5() -> set,B() -> non empty  finite set,F(set,set,set,set,set) -> (Element of B()),f() -> (Function of ( 5 -tuples_on B() ),B()) } : (for s being (State of ( 1GateCircuit (<* x1(),x2(),x3(),x4(),x5() *>,f()) )) holds (for a1,a2,a3,a4,a5 being (Element of B()) holds (((((a1 = ( s . x1() ) & a2 = ( s . x2() )) & a3 = ( s . x3() )) & a4 = ( s . x4() )) & a5 = ( s . x5() )) implies ( ( Result s ) . ( Output ( 1GateCircStr (<* x1(),x2(),x3(),x4(),x5() *>,f()) ) ) ) = F(a1,a2,a3,a4,a5))))
provided
A1: (for g being (Function of ( 5 -tuples_on B() ),B()) holds (g = f() iff (for a1,a2,a3,a4,a5 being (Element of B()) holds ( g . <* a1,a2,a3,a4,a5 *> ) = F(a1,a2,a3,a4,a5))))
proof
set S = ( 1GateCircStr (<* x1(),x2(),x3(),x4(),x5() *>,f()) );
let s being (State of ( 1GateCircuit (<* x1(),x2(),x3(),x4(),x5() *>,f()) ));
A2: ( dom s ) = (the carrier of S) by CIRCUIT1:3
.= ( ( rng <* x1(),x2(),x3(),x4(),x5() *> ) \/ { [ <* x1(),x2(),x3(),x4(),x5() *>,f() ] } ) by CIRCCOMB:def 6
.= ( { x1(),x2(),x3(),x4(),x5() } \/ { [ <* x1(),x2(),x3(),x4(),x5() *>,f() ] } ) by CKB20:1
.= { x1(),x2(),x3(),x4(),x5(),[ <* x1(),x2(),x3(),x4(),x5() *>,f() ] } by ENUMSET1:15;
then A3: (x1() in ( dom s ) & x2() in ( dom s )) by ENUMSET1:def 4;
A4: x5() in ( dom s ) by A2,ENUMSET1:def 4;
A5: (x3() in ( dom s ) & x4() in ( dom s )) by A2,ENUMSET1:def 4;
let a1 being (Element of B()),a2 being (Element of B()),a3 being (Element of B()),a4 being (Element of B()),a5 being (Element of B());
assume ((((a1 = ( s . x1() ) & a2 = ( s . x2() )) & a3 = ( s . x3() )) & a4 = ( s . x4() )) & a5 = ( s . x5() ));
then A6: ( s * <* x1(),x2(),x3(),x4(),x5() *> ) = <* a1,a2,a3,a4,a5 *> by A3,A5,A4,CKB74:1;
thus ( ( Result s ) . ( Output S ) ) = ( ( Following s ) . ( Output S ) ) by CKB39:1
.= ( ( Following s ) . [ <* x1(),x2(),x3(),x4(),x5() *>,f() ] ) by CKB33:1
.= ( f() . ( s * <* x1(),x2(),x3(),x4(),x5() *> ) ) by CIRCCOMB:56
.= F(a1,a2,a3,a4,a5) by A1,A6;
end;
