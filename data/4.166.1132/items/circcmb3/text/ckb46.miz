environ
vocabularies NUMBERS,STRUCT_0,MSAFREE2,XBOOLE_0,MSUALG_1,RELAT_1,CIRCUIT1,FSM_1,SUBSET_1,CIRCUIT2,FUNCT_1,ARYTM_3,CARD_1,XXREAL_0,NAT_1,FUNCT_4,PARTFUN1,FINSET_1,CIRCCOMB,FINSEQ_2,TARSKI,PBOOLE,GLIB_000,FINSEQ_1,NET_1,FACIRC_1,FUNCOP_1,CATALG_1,MCART_1,ZFMISC_1,CLASSES1,REWRITE1,ORDINAL2,MARGREL1,VALUED_0,CIRCCMB3;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,ENUMSET1,ZFMISC_1,RELAT_1,FUNCT_1,PBOOLE,FINSET_1,ORDINAL2,CLASSES1,FUNCT_2,XXREAL_0,NAT_1,VALUED_0,PARTFUN1,LIMFUNC1,REWRITE1,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSEQOP,FUNCT_4,STRUCT_0,MSUALG_1,FACIRC_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FUNCOP_1,XXREAL_2,MCART_1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB21,CKB22,CKB31;
definitions TARSKI,XBOOLE_0,RELAT_1,REWRITE1,MSAFREE2,CIRCUIT2,FINSET_1,CIRCCOMB,FACIRC_1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB21,CKB22,CKB31;
theorems CIRCCOMB,ZFMISC_1,TARSKI,XBOOLE_0,FINSEQ_1,FUNCT_1,FINSEQ_2,CIRCUIT1,CARD_3,CIRCCMB2,FUNCOP_1,PBOOLE,FINSEQ_3,ENUMSET1,FACIRC_1,ORDINAL2,MCART_1,FUNCT_4,FINSET_1,NAT_1,RELAT_1,MSUALG_1,MSAFREE2,FUNCT_2,RELSET_1,CLASSES1,ORDINAL1,CIRCUIT2,XBOOLE_1,XREAL_1,XXREAL_0,FINSEQ_4,VALUED_0,XXREAL_2,PARTFUN1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB31,CKB33,CKB34,CKB35,CKB36,CKB37,CKB39,CKB40;
schemes TARSKI,XBOOLE_0,FUNCT_2,NAT_1,REWRITE1,CLASSES1,RELAT_1,CKB41,CKB42,CKB43,CKB44,CKB45;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XREAL_0,MEMBERED,FINSEQ_1,FINSEQ_2,CARD_3,SEQM_3,FINSEQ_4,PBOOLE,STRUCT_0,MSUALG_1,CIRCCOMB,FACIRC_1,XXREAL_2,RELSET_1,CARD_1,CKB5,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB38;
constructors DOMAIN_1,ORDINAL2,CLASSES1,FINSEQOP,FINSEQ_4,LIMFUNC1,REWRITE1,CIRCUIT1,CIRCUIT2,FACIRC_1,XXREAL_2,VALUED_0,RELSET_1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB21,CKB22,CKB31;
requirements BOOLE,SUBSET,NUMERALS,REAL;
begin
theorem
Th24: (for X,Y being non  empty set holds (for n,m being (Element of ( NAT )) holds ((n <> ( 0 ) & ( n -tuples_on X ) = ( m -tuples_on Y )) implies (X = Y & n = m))))
proof
let X being non  empty set;
let Y being non  empty set;
let n being (Element of ( NAT ));
let m being (Element of ( NAT ));
assume that
A1: n <> ( 0 )
and
A2: ( n -tuples_on X ) = ( m -tuples_on Y );
thus X = Y
proof
thus X c= Y
proof
let a being set;
assume a in X;
then ( n |-> a ) is (Element of ( n -tuples_on X )) by FINSEQ_2:112;
then ( n |-> a ) in ( m -tuples_on Y ) by A2;
then ( n |-> a ) in { s where s is (Element of ( Y * )): ( len s ) = m } by FINSEQ_2:def 4;
then (ex s being (Element of ( Y * )) st (s = ( n |-> a ) & ( len s ) = m));
then A3: ( rng ( n |-> a ) ) c= Y by FINSEQ_1:def 4;
( n |-> a ) = ( ( Seg n ) --> a ) by FINSEQ_2:def 2;
then ( rng ( n |-> a ) ) = { a } by A1,FUNCOP_1:8;
then a in ( rng ( n |-> a ) ) by TARSKI:def 1;
hence thesis by A3;
end;

let a being set;
A4: ( m |-> a ) = ( ( Seg m ) --> a ) by FINSEQ_2:def 2;
assume a in Y;
then ( m |-> a ) is (Element of ( m -tuples_on Y )) by FINSEQ_2:112;
then ( m |-> a ) in ( n -tuples_on X ) by A2;
then ( m |-> a ) in { s where s is (Element of ( X * )): ( len s ) = n } by FINSEQ_2:def 4;
then A5: (ex s being (Element of ( X * )) st (s = ( m |-> a ) & ( len s ) = n));
then m = n by CARD_1:def 7;
then ( rng ( m |-> a ) ) = { a } by A1,A4,FUNCOP_1:8;
then A6: a in ( rng ( m |-> a ) ) by TARSKI:def 1;
( rng ( m |-> a ) ) c= X by A5,FINSEQ_1:def 4;
hence thesis by A6;
end;

thus thesis by A2,FINSEQ_2:110;
end;
