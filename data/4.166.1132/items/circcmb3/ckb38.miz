environ
vocabularies NUMBERS,STRUCT_0,MSAFREE2,XBOOLE_0,MSUALG_1,RELAT_1,CIRCUIT1,FSM_1,SUBSET_1,CIRCUIT2,FUNCT_1,ARYTM_3,CARD_1,XXREAL_0,NAT_1,FUNCT_4,PARTFUN1,FINSET_1,CIRCCOMB,FINSEQ_2,TARSKI,PBOOLE,GLIB_000,FINSEQ_1,NET_1,FACIRC_1,FUNCOP_1,CATALG_1,MCART_1,ZFMISC_1,CLASSES1,REWRITE1,ORDINAL2,MARGREL1,VALUED_0,CIRCCMB3;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,ENUMSET1,ZFMISC_1,RELAT_1,FUNCT_1,PBOOLE,FINSET_1,ORDINAL2,CLASSES1,FUNCT_2,XXREAL_0,NAT_1,VALUED_0,PARTFUN1,LIMFUNC1,REWRITE1,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSEQOP,FUNCT_4,STRUCT_0,MSUALG_1,FACIRC_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FUNCOP_1,XXREAL_2,MCART_1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB21,CKB22,CKB31;
definitions TARSKI,XBOOLE_0,RELAT_1,REWRITE1,MSAFREE2,CIRCUIT2,FINSET_1,CIRCCOMB,FACIRC_1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB21,CKB22,CKB31;
theorems CIRCCOMB,ZFMISC_1,TARSKI,XBOOLE_0,FINSEQ_1,FUNCT_1,FINSEQ_2,CIRCUIT1,CARD_3,CIRCCMB2,FUNCOP_1,PBOOLE,FINSEQ_3,ENUMSET1,FACIRC_1,ORDINAL2,MCART_1,FUNCT_4,FINSET_1,NAT_1,RELAT_1,MSUALG_1,MSAFREE2,FUNCT_2,RELSET_1,CLASSES1,ORDINAL1,CIRCUIT2,XBOOLE_1,XREAL_1,XXREAL_0,FINSEQ_4,VALUED_0,XXREAL_2,PARTFUN1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB31,CKB33,CKB34,CKB35,CKB36,CKB37;
schemes TARSKI,XBOOLE_0,FUNCT_2,NAT_1,REWRITE1,CLASSES1,RELAT_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XREAL_0,MEMBERED,FINSEQ_1,FINSEQ_2,CARD_3,SEQM_3,FINSEQ_4,PBOOLE,STRUCT_0,MSUALG_1,CIRCCOMB,FACIRC_1,XXREAL_2,RELSET_1,CARD_1,CKB5,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32;
constructors DOMAIN_1,ORDINAL2,CLASSES1,FINSEQOP,FINSEQ_4,LIMFUNC1,REWRITE1,CIRCUIT1,CIRCUIT2,FACIRC_1,XXREAL_2,VALUED_0,RELSET_1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB21,CKB22,CKB31;
requirements BOOLE,SUBSET,NUMERALS,REAL;
begin
registration
let S being non void  Circuit-like non empty ManySortedSign;
cluster  one-gate ->  with_stabilization-limit for  non-empty  non-empty (Circuit of S);
coherence
proof
let A being  non-empty (Circuit of S);
assume A1: A is  one-gate;
then (ex X being non empty  finite set st (ex n being (Element of ( NAT )) st (ex p being (FinSeqLen of n) st (ex f being (Function of ( n -tuples_on X ),X) st (S = ( 1GateCircStr (p,f) ) & A = ( 1GateCircuit (p,f) )))))) by CKB22:def 1;
then reconsider S1 = S as  one-gate ManySortedSign;
reconsider A1 = A as  one-gate (Circuit of S1) by A1;
take 1;
let s being (State of A);
reconsider s1 = s as (State of A1);
( Following s1 ) is  stable by CKB37:1;
hence thesis by FACIRC_1:14;
end;
end;
