environ
vocabularies NUMBERS,STRUCT_0,MSAFREE2,XBOOLE_0,MSUALG_1,RELAT_1,CIRCUIT1,FSM_1,SUBSET_1,CIRCUIT2,FUNCT_1,ARYTM_3,CARD_1,XXREAL_0,NAT_1,FUNCT_4,PARTFUN1,FINSET_1,CIRCCOMB,FINSEQ_2,TARSKI,PBOOLE,GLIB_000,FINSEQ_1,NET_1,FACIRC_1,FUNCOP_1,CATALG_1,MCART_1,ZFMISC_1,CLASSES1,REWRITE1,ORDINAL2,MARGREL1,VALUED_0,CIRCCMB3;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,ENUMSET1,ZFMISC_1,RELAT_1,FUNCT_1,PBOOLE,FINSET_1,ORDINAL2,CLASSES1,FUNCT_2,XXREAL_0,NAT_1,VALUED_0,PARTFUN1,LIMFUNC1,REWRITE1,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSEQOP,FUNCT_4,STRUCT_0,MSUALG_1,FACIRC_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FUNCOP_1,XXREAL_2,MCART_1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB21,CKB22,CKB31,CKB49,CKB52,CKB53,CKB58,CKB65,CKB66;
definitions TARSKI,XBOOLE_0,RELAT_1,REWRITE1,MSAFREE2,CIRCUIT2,FINSET_1,CIRCCOMB,FACIRC_1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB21,CKB22,CKB31,CKB49,CKB53;
theorems CIRCCOMB,ZFMISC_1,TARSKI,XBOOLE_0,FINSEQ_1,FUNCT_1,FINSEQ_2,CIRCUIT1,CARD_3,CIRCCMB2,FUNCOP_1,PBOOLE,FINSEQ_3,ENUMSET1,FACIRC_1,ORDINAL2,MCART_1,FUNCT_4,FINSET_1,NAT_1,RELAT_1,MSUALG_1,MSAFREE2,FUNCT_2,RELSET_1,CLASSES1,ORDINAL1,CIRCUIT2,XBOOLE_1,XREAL_1,XXREAL_0,FINSEQ_4,VALUED_0,XXREAL_2,PARTFUN1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB31,CKB33,CKB34,CKB35,CKB36,CKB37,CKB39,CKB40,CKB46,CKB47,CKB48,CKB49,CKB50,CKB53,CKB55,CKB59,CKB60,CKB61,CKB62,CKB67;
schemes TARSKI,XBOOLE_0,FUNCT_2,NAT_1,REWRITE1,CLASSES1,RELAT_1,CKB41,CKB42,CKB43,CKB44,CKB45;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XREAL_0,MEMBERED,FINSEQ_1,FINSEQ_2,CARD_3,SEQM_3,FINSEQ_4,PBOOLE,STRUCT_0,MSUALG_1,CIRCCOMB,FACIRC_1,XXREAL_2,RELSET_1,CARD_1,CKB5,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB38,CKB51,CKB54,CKB56,CKB57,CKB63,CKB64;
constructors DOMAIN_1,ORDINAL2,CLASSES1,FINSEQOP,FINSEQ_4,LIMFUNC1,REWRITE1,CIRCUIT1,CIRCUIT2,FACIRC_1,XXREAL_2,VALUED_0,RELSET_1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB21,CKB22,CKB31,CKB49,CKB52,CKB53,CKB58,CKB65,CKB66;
requirements BOOLE,SUBSET,NUMERALS,REAL;
begin
theorem
Th35: (for S being  gate`2=den  finite non void non empty  unsplit  gate`1=arity ManySortedSign holds (for A being  non-empty (Circuit of S) holds (A is  gate`2=den implies A is  with_stabilization-limit)))
proof
let S being  gate`2=den  finite non void non empty  unsplit  gate`1=arity ManySortedSign;
defpred P[ set,set ]
 means
($1 = $2 or ($1 in (the carrier' of S) & $2 in ( proj2 ( $1 `1 ) )));
consider R being Relation such that A1: (for a,b being set holds ([ a,b ] in R iff ((a in (the carrier of S) & b in (the carrier of S)) & P[ a,b ]))) from RELAT_1:sch 1;
let A being  non-empty (Circuit of S);
assume that
A2: A is  gate`2=den;
A3: R is  co-well_founded
proof
defpred P[ set,set ]
 means
$2 = ( the_rank_of $1 );
let Y being set;
assume that
Y c= ( field R )
and
A4: Y <> ( {} );
set y = the (Element of Y);
A5: (for x,y,z being set holds ((P[ x,y ] & P[ x,z ]) implies y = z));
consider B being set such that A6: (for x being set holds (x in B iff (ex y being set st (y in Y & P[ y,x ])))) from TARSKI:sch 1(A5);
( the_rank_of y ) in B by A4,A6;
then ( inf B ) in B by ORDINAL2:17;
then consider y being set such that A7: y in Y and A8: ( inf B ) = ( the_rank_of y ) by A6;
take y;
thus y in Y by A7;
let b being set;
assume that
A9: b in Y
and
A10: (y <> b & [ y,b ] in R);
( the_rank_of b ) in B by A6,A9;
then A11: ( inf B ) c= ( the_rank_of b ) by ORDINAL2:14;
y in (the carrier' of S) by A1,A10;
then y = [ ( y `1 ),( (the Charact of A) . y ) ] by A2,CIRCCOMB:def 10;
then A12: ( the_rank_of ( y `1 ) ) in ( the_rank_of y ) by CKB67:1;
b in ( proj2 ( y `1 ) ) by A1,A10;
then consider c being set such that A13: [ c,b ] in ( y `1 ) by RELAT_1:def 5;
A14: ( the_rank_of b ) in ( the_rank_of [ c,b ] ) by CKB67:1;
( the_rank_of [ c,b ] ) in ( the_rank_of ( y `1 ) ) by A13,CLASSES1:68;
hence contradiction by A8,A14,A12,A11,ORDINAL1:10;
end;
defpred A[ set,set ]
 means
(ex n being (Element of ( NAT )) st ($2 = n & (for s being (State of A) holds (for m being (Element of ( NAT )) holds (m >= n implies ( ( Following (s,m) ) . $1 ) = ( ( Following (s,n) ) . $1 ))))));
defpred P[ set ]
 means
($1 in (the carrier of S) implies (ex n being (Element of ( NAT )) st (for s being (State of A) holds (for m being (Element of ( NAT )) holds (m >= n implies ( ( Following (s,m) ) . $1 ) = ( ( Following (s,n) ) . $1 ))))));
A15: ( rng R ) c= (the carrier of S)
proof
let o being set;
assume o in ( rng R );
then (ex q being set st [ q,o ] in R) by RELAT_1:def 5;
hence thesis by A1;
end;
A16: (the carrier of S) c= ( field R )
proof
let o being set;
assume o in (the carrier of S);
then [ o,o ] in R by A1;
hence thesis by RELAT_1:15;
end;
( dom R ) c= (the carrier of S)
proof
let o being set;
assume o in ( dom R );
then (ex q being set st [ o,q ] in R) by RELAT_1:def 4;
hence thesis by A1;
end;
then A17: ( ( dom R ) \/ ( rng R ) ) c= ( (the carrier of S) \/ (the carrier of S) ) by A15,XBOOLE_1:13;
then A18: (the carrier of S) = ( field R ) by A16,XBOOLE_0:def 10;
A19: (for a being set holds ((for b being set holds (([ a,b ] in R & a <> b) implies P[ b ])) implies P[ a ]))
proof
defpred P[ set,set ]
 means
(ex n being (Element of ( NAT )) st ($2 = n & (for s being (State of A) holds (for m being (Element of ( NAT )) holds (m >= n implies ( ( Following (s,m) ) . $1 ) = ( ( Following (s,n) ) . $1 ))))));
let a being set;
defpred S[ set ]
 means
(a <> $1 & [ a,$1 ] in R);
consider RS being set such that A20: (for b being set holds (b in RS iff (b in ( field R ) & S[ b ]))) from XBOOLE_0:sch 1;
A21: RS c= (the carrier of S)
proof
let o being set;
assume o in RS;
hence thesis by A18,A20;
end;
assume A22: (for b being set holds (([ a,b ] in R & a <> b) implies P[ b ]));
A23: (for b being set holds (b in RS implies (ex z being set st P[ b,z ])))
proof
let b being set;
assume A24: b in RS;
then (a <> b & [ a,b ] in R) by A20;
then (ex n being (Element of ( NAT )) st (for s being (State of A) holds (for m being (Element of ( NAT )) holds (m >= n implies ( ( Following (s,m) ) . b ) = ( ( Following (s,n) ) . b ))))) by A22,A21,A24;
hence thesis;
end;
consider f being Function such that A25: ( dom f ) = RS and A26: (for x being set holds (x in RS implies P[ x,( f . x ) ])) from CLASSES1:sch 1(A23);
assume A27: a in (the carrier of S);
per cases ;
suppose A28: RS <> ( {} );

( rng f ) c= ( NAT )
proof
let o being set;
assume o in ( rng f );
then consider l being set such that A29: l in ( dom f ) and A30: o = ( f . l ) by FUNCT_1:def 3;
(ex n being (Element of ( NAT )) st (( f . l ) = n & (for s being (State of A) holds (for m being (Element of ( NAT )) holds (m >= n implies ( ( Following (s,m) ) . l ) = ( ( Following (s,n) ) . l )))))) by A25,A26,A29;
hence thesis by A30;
end;
then reconsider C = ( rng f ) as  finite non empty (Subset of ( NAT )) by A21,A25,A28,FINSET_1:8,RELAT_1:38,RELAT_1:41;
set b = the (Element of RS);
(a <> b & [ a,b ] in R) by A20,A28;
then reconsider a1 = a as (Gate of S) by A1;
reconsider mC = ( max C ) as (Element of ( NAT )) by ORDINAL1:def 12;
take n = ( mC + 1 );
let s being (State of A);
let m being (Element of ( NAT ));
assume m >= n;
then consider k being Nat such that A31: m = ( n + k ) by NAT_1:10;
reconsider k as (Element of ( NAT )) by ORDINAL1:def 12;
A32: (for x being set holds (x in ( rng ( the_arity_of a1 ) ) implies ( Following (s,mC) ) is_stable_at x))
proof
let x being set;
assume A33: x in ( rng ( the_arity_of a1 ) );
a1 = [ ( (the Arity of S) . a1 ),( a1 `2 ) ] by CIRCCOMB:def 8;
then A34: a1 = [ ( the_arity_of a1 ),( a1 `2 ) ] by MSUALG_1:def 1;
then ( the_rank_of x ) in ( the_rank_of a1 ) by A33,CLASSES1:82;
then A35: x <> a;
(( rng ( the_arity_of a1 ) ) c= (the carrier of S) & x in ( proj2 ( a `1 ) )) by A33,A34,FINSEQ_1:def 4,MCART_1:7;
then A36: [ a1,x ] in R by A1,A27,A33;
then x in ( field R ) by RELAT_1:15;
then A37: x in RS by A20,A35,A36;
then consider l being (Element of ( NAT )) such that A38: ( f . x ) = l and A39: (for s being (State of A) holds (for m being (Element of ( NAT )) holds (m >= l implies ( ( Following (s,m) ) . x ) = ( ( Following (s,l) ) . x )))) by A26;
l in ( rng f ) by A25,A37,A38,FUNCT_1:3;
then A40: ( max C ) >= l by XXREAL_2:def 8;
now
let k being Nat;
A41: ( mC + k ) >= ( max C ) by NAT_1:11;
thus ( ( Following (( Following (s,mC) ),k) ) . x ) = ( ( Following (s,( mC + k )) ) . x ) by FACIRC_1:13
.= ( ( Following (s,l) ) . x ) by A39,A40,A41,XXREAL_0:2
.= ( ( Following (s,mC) ) . x ) by A39,A40;
end;
hence thesis by FACIRC_1:def 9;
end;
( the_result_sort_of a1 ) = ( (the ResultSort of S) . a1 ) by MSUALG_1:def 2
.= a by CIRCCOMB:44;
then ( Following ( Following (s,mC) ) ) is_stable_at a by A32,FACIRC_1:19;
then ( Following (s,n) ) is_stable_at a by FACIRC_1:12;
then ( ( Following (( Following (s,n) ),k) ) . a ) = ( ( Following (s,n) ) . a ) by FACIRC_1:def 9;
hence thesis by A31,FACIRC_1:13;
end;
suppose A42: RS = ( {} );

take n = 1;
let s being (State of A);
let m being (Element of ( NAT ));
assume m >= n;
then consider k being Nat such that A43: m = ( n + k ) by NAT_1:10;
reconsider k as (Element of ( NAT )) by ORDINAL1:def 12;
A44:now
assume a in ( InnerVertices S );
then a in ( rng ( id (the carrier' of S) ) ) by CIRCCOMB:def 7;
then reconsider a1 = a as (Gate of S) by RELAT_1:45;
(for x being set holds (x in ( rng ( the_arity_of a1 ) ) implies s is_stable_at x))
proof
let x being set;
assume A45: x in ( rng ( the_arity_of a1 ) );
a1 = [ ( (the Arity of S) . a1 ),( a1 `2 ) ] by CIRCCOMB:def 8;
then A46: a1 = [ ( the_arity_of a1 ),( a1 `2 ) ] by MSUALG_1:def 1;
then ( the_rank_of x ) in ( the_rank_of a1 ) by A45,CLASSES1:82;
then A47: x <> a;
(( rng ( the_arity_of a1 ) ) c= (the carrier of S) & x in ( proj2 ( a `1 ) )) by A45,A46,FINSEQ_1:def 4,MCART_1:7;
then A48: [ a1,x ] in R by A1,A27,A45;
then x in ( field R ) by RELAT_1:15;
hence thesis by A20,A42,A47,A48;
end;
then A49: ( Following s ) is_stable_at ( the_result_sort_of a1 ) by FACIRC_1:19;
( the_result_sort_of a1 ) = ( (the ResultSort of S) . a1 ) by MSUALG_1:def 2
.= a1 by CIRCCOMB:44;
then ( Following (s,n) ) is_stable_at a1 by A49,FACIRC_1:14;
then ( ( Following (( Following (s,n) ),k) ) . a ) = ( ( Following (s,n) ) . a ) by FACIRC_1:def 9;
hence thesis by A43,FACIRC_1:13;
end;
A50:now
assume a in ( InputVertices S );
then A51: s is_stable_at a by FACIRC_1:18;
hence ( ( Following (s,m) ) . a ) = ( s . a ) by FACIRC_1:def 9
.= ( ( Following (s,n) ) . a ) by A51,FACIRC_1:def 9;
end;
(the carrier of S) = ( ( InputVertices S ) \/ ( InnerVertices S ) ) by XBOOLE_1:45;
hence thesis by A27,A50,A44,XBOOLE_0:def 3;
end;
end;
A52: (for a being set holds (a in ( field R ) implies P[ a ])) from REWRITE1:sch 2(A3,A19);
A53: (for a being set holds (a in ( field R ) implies (ex b being set st A[ a,b ])))
proof
let a being set;
assume a in ( field R );
then (ex n being (Element of ( NAT )) st (for s being (State of A) holds (for m being (Element of ( NAT )) holds (m >= n implies ( ( Following (s,m) ) . a ) = ( ( Following (s,n) ) . a ))))) by A17,A52;
hence thesis;
end;
consider f being Function such that A54: ( dom f ) = ( field R ) and A55: (for x being set holds (x in ( field R ) implies A[ x,( f . x ) ])) from CLASSES1:sch 1(A53);
( rng f ) c= ( NAT )
proof
let o being set;
assume o in ( rng f );
then consider l being set such that A56: l in ( dom f ) and A57: o = ( f . l ) by FUNCT_1:def 3;
(ex n being (Element of ( NAT )) st (( f . l ) = n & (for s being (State of A) holds (for m being (Element of ( NAT )) holds (m >= n implies ( ( Following (s,m) ) . l ) = ( ( Following (s,n) ) . l )))))) by A54,A55,A56;
hence thesis by A57;
end;
then reconsider C = ( rng f ) as  finite non empty (Subset of ( NAT )) by A18,A54,FINSET_1:8,RELAT_1:38,RELAT_1:41;
reconsider N = ( max C ) as (Element of ( NAT )) by ORDINAL1:def 12;
take N;
let s being (State of A);
A58:now
let x being set;
assume A59: x in (the carrier of S);
then consider n being (Element of ( NAT )) such that A60: ( f . x ) = n and A61: (for s being (State of A) holds (for m being (Element of ( NAT )) holds (m >= n implies ( ( Following (s,m) ) . x ) = ( ( Following (s,n) ) . x )))) by A16,A55;
n in C by A16,A54,A59,A60,FUNCT_1:3;
then A62: N >= n by XXREAL_2:def 8;
then A63: ( N + 1 ) >= n by NAT_1:13;
thus ( ( Following (s,N) ) . x ) = ( ( Following (s,n) ) . x ) by A61,A62
.= ( ( Following (s,( N + 1 )) ) . x ) by A61,A63
.= ( ( Following ( Following (s,N) ) ) . x ) by FACIRC_1:12;
end;
(( dom ( Following (s,N) ) ) = (the carrier of S) & ( dom ( Following ( Following (s,N) ) ) ) = (the carrier of S)) by CIRCUIT1:3;
hence ( Following (s,N) ) = ( Following ( Following (s,N) ) ) by A58,FUNCT_1:2;
end;
