environ
vocabularies NUMBERS,FINSET_1,ARYTM_3,CARD_1,SUBSET_1,XBOOLE_0,GLIB_000,RELAT_2,GLIB_001,TREES_1,ZFMISC_1,FUNCT_1,FINSEQ_1,GRAPH_1,ABIAN,XXREAL_0,RELAT_1,RCOMP_1,FUNCOP_1,ARYTM_1,WAYBEL_0,TARSKI,PBOOLE,SETFAM_1,ORDINAL1,NAT_1,GLIB_002;
notations TARSKI,XBOOLE_0,ZFMISC_1,CARD_1,NUMBERS,SUBSET_1,SETFAM_1,DOMAIN_1,XCMPLX_0,ABIAN,XXREAL_0,RELAT_1,FUNCT_1,PBOOLE,FUNCT_2,FINSEQ_1,FINSET_1,NAT_1,FUNCOP_1,GLIB_000,GLIB_001,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB22,CKB26,CKB27,CKB29,CKB30,CKB31,CKB32,CKB56,CKB57,CKB58;
definitions TARSKI,FUNCOP_1,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB22,CKB27,CKB29,CKB31,CKB32,CKB56,CKB57,CKB58;
theorems CARD_1,CARD_2,FUNCOP_1,FINSEQ_1,FINSEQ_3,FUNCT_1,FUNCT_2,GLIB_000,GLIB_001,ABIAN,INT_1,JORDAN12,NAT_1,ORDINAL1,PENCIL_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_1,ZFMISC_1,XREAL_1,XXREAL_0,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB27,CKB29,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB51,CKB52,CKB53,CKB56,CKB57,CKB58,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76;
schemes NAT_1,SUBSET_1,GLIB_000;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XREAL_0,INT_1,CARD_1,GLIB_000,ABIAN,GLIB_001,FUNCT_2,PARTFUN1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB23,CKB24,CKB25,CKB28,CKB50,CKB54,CKB55,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67;
constructors DOMAIN_1,CARD_FIL,GLIB_001,VALUED_1,XXREAL_2,WELLORD2,RELSET_1,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB22,CKB27,CKB29,CKB30,CKB31,CKB56,CKB57,CKB58;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
reserve G for _Graph;
reserve x for set;
reserve v for (Vertex of G);
reserve W for (Walk of G);
theorem
( G .edgesBetween ( G .reachableFrom v ) ) = ( G .edgesInOut ( G .reachableFrom v ) )
proof
set R = ( G .reachableFrom v );
now
let x being set;
set Sx = ( ( the_Source_of G ) . x );
set Tx = ( ( the_Target_of G ) . x );
assume A1: x in ( G .edgesInOut R );
then reconsider Sx,Tx as (Vertex of G) by FUNCT_2:5;
now
per cases  by A1,GLIB_000:28;
suppose A2: Sx in R;

then consider W being (Walk of G) such that A3: W is_Walk_from v,Sx by CKB16:def 1;
now
( W .last() ) = Sx by A3,GLIB_001:def 23;
then A4: x Joins ( W .last() ),Tx,G by A1,GLIB_000:def 13;
assume A5: (not Tx in R);
( W .first() ) = v by A3,GLIB_001:def 23;
then ( W .addEdge x ) is_Walk_from v,Tx by A4,GLIB_001:63;
hence contradiction by A5,CKB16:def 1;
end;
then A6: x in ( G .edgesInto R ) by A1,GLIB_000:def 26;
x in ( G .edgesOutOf R ) by A1,A2,GLIB_000:def 27;
then x in ( ( G .edgesInto R ) /\ ( G .edgesOutOf R ) ) by A6,XBOOLE_0:def 4;
hence x in ( G .edgesBetween R ) by GLIB_000:def 29;
end;
suppose A7: Tx in R;

then consider W being (Walk of G) such that A8: W is_Walk_from v,Tx by CKB16:def 1;
now
( W .last() ) = Tx by A8,GLIB_001:def 23;
then A9: x Joins ( W .last() ),Sx,G by A1,GLIB_000:def 13;
assume A10: (not Sx in R);
( W .first() ) = v by A8,GLIB_001:def 23;
then ( W .addEdge x ) is_Walk_from v,Sx by A9,GLIB_001:63;
hence contradiction by A10,CKB16:def 1;
end;
then A11: x in ( G .edgesOutOf R ) by A1,GLIB_000:def 27;
x in ( G .edgesInto R ) by A1,A7,GLIB_000:def 26;
then x in ( ( G .edgesInto R ) /\ ( G .edgesOutOf R ) ) by A11,XBOOLE_0:def 4;
hence x in ( G .edgesBetween R ) by GLIB_000:def 29;
end;
end;
hence x in ( G .edgesBetween R );
end;
then (( G .edgesBetween R ) c= ( G .edgesInOut R ) & ( G .edgesInOut R ) c= ( G .edgesBetween R )) by GLIB_000:33,TARSKI:def 3;
hence thesis by XBOOLE_0:def 10;
end;
