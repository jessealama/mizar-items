environ
vocabularies NUMBERS,FINSET_1,ARYTM_3,CARD_1,SUBSET_1,XBOOLE_0,GLIB_000,RELAT_2,GLIB_001,TREES_1,ZFMISC_1,FUNCT_1,FINSEQ_1,GRAPH_1,ABIAN,XXREAL_0,RELAT_1,RCOMP_1,FUNCOP_1,ARYTM_1,WAYBEL_0,TARSKI,PBOOLE,SETFAM_1,ORDINAL1,NAT_1,GLIB_002;
notations TARSKI,XBOOLE_0,ZFMISC_1,CARD_1,NUMBERS,SUBSET_1,SETFAM_1,DOMAIN_1,XCMPLX_0,ABIAN,XXREAL_0,RELAT_1,FUNCT_1,PBOOLE,FUNCT_2,FINSEQ_1,FINSET_1,NAT_1,FUNCOP_1,GLIB_000,GLIB_001,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB22,CKB26,CKB27,CKB29,CKB30,CKB31,CKB32;
definitions TARSKI,FUNCOP_1,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB22,CKB27,CKB29,CKB31,CKB32;
theorems CARD_1,CARD_2,FUNCOP_1,FINSEQ_1,FINSEQ_3,FUNCT_1,FUNCT_2,GLIB_000,GLIB_001,ABIAN,INT_1,JORDAN12,NAT_1,ORDINAL1,PENCIL_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_1,ZFMISC_1,XREAL_1,XXREAL_0,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB27,CKB29,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43;
schemes NAT_1,SUBSET_1,GLIB_000;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XREAL_0,INT_1,CARD_1,GLIB_000,ABIAN,GLIB_001,FUNCT_2,PARTFUN1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB23,CKB24,CKB25,CKB28;
constructors DOMAIN_1,CARD_FIL,GLIB_001,VALUED_1,XXREAL_2,WELLORD2,RELSET_1,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB22,CKB27,CKB29,CKB30,CKB31;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Lm16: (for G being _Graph holds (for C being (Component of G) holds (for v being (Vertex of G) holds (v in ( the_Vertices_of C ) iff ( the_Vertices_of C ) = ( G .reachableFrom v )))))
proof
let G being _Graph;
let C being (Component of G);
let v being (Vertex of G);
hereby
assume A1: v in ( the_Vertices_of C );
now
let x being set;
hereby
assume x in ( the_Vertices_of C );
then reconsider x9 = x as (Vertex of C);
consider W being (Walk of C) such that A2: W is_Walk_from v,x9 by A1,CKB2:def 1;
reconsider W as (Walk of G) by GLIB_001:167;
W is_Walk_from v,x by A2,GLIB_001:19;
hence x in ( G .reachableFrom v ) by CKB16:def 1;
end;
assume A3: x in ( G .reachableFrom v );
then reconsider x9 = x as (Vertex of G);
A4: ( G .reachableFrom x9 ) = ( G .reachableFrom v ) by A3,CKB20:1;
set CX = the (inducedSubgraph of G,( G .reachableFrom x9 ));
(not C c< CX) by CKB22:def 1;
then A5: (C == CX or (not C c= CX)) by GLIB_000:def 36;
A6: ( the_Edges_of CX ) = ( G .edgesBetween ( G .reachableFrom x9 ) ) by GLIB_000:def 37;
now
let e being set;
set v1 = ( ( the_Source_of C ) . e );
set v2 = ( ( the_Target_of C ) . e );
assume A7: e in ( the_Edges_of C );
then reconsider v1,v2 as (Vertex of C) by FUNCT_2:5;
e Joins v1,v2,C by A7,GLIB_000:def 13;
then A8: e Joins v1,v2,G by GLIB_000:72;
consider W1 being (Walk of C) such that A9: W1 is_Walk_from v,v1 by A1,CKB2:def 1;
reconsider W1 as (Walk of G) by GLIB_001:167;
consider W2 being (Walk of C) such that A10: W2 is_Walk_from v,v2 by A1,CKB2:def 1;
reconsider W2 as (Walk of G) by GLIB_001:167;
W2 is_Walk_from v,v2 by A10,GLIB_001:19;
then A11: v2 in ( G .reachableFrom x9 ) by A4,CKB16:def 1;
W1 is_Walk_from v,v1 by A9,GLIB_001:19;
then v1 in ( G .reachableFrom x9 ) by A4,CKB16:def 1;
hence e in ( the_Edges_of CX ) by A6,A8,A11,GLIB_000:32;
end;
then A12: ( the_Edges_of C ) c= ( the_Edges_of CX ) by TARSKI:def 3;
A13: ( the_Vertices_of CX ) = ( G .reachableFrom x9 ) by GLIB_000:def 37;
now
let z being set;
assume z in ( the_Vertices_of C );
then consider W being (Walk of C) such that A14: W is_Walk_from v,z by A1,CKB2:def 1;
reconsider W as (Walk of G) by GLIB_001:167;
W is_Walk_from v,z by A14,GLIB_001:19;
hence z in ( the_Vertices_of CX ) by A13,A4,CKB16:def 1;
end;
then ( the_Vertices_of C ) c= ( the_Vertices_of CX ) by TARSKI:def 3;
then A15: C is (Subgraph of CX) by A12,GLIB_000:44;
x in ( the_Vertices_of CX ) by A13,CKB18:1;
hence x in ( the_Vertices_of C ) by A5,A15,GLIB_000:def 34,GLIB_000:def 35;
end;
hence ( the_Vertices_of C ) = ( G .reachableFrom v ) by TARSKI:1;
end;
assume ( the_Vertices_of C ) = ( G .reachableFrom v );
hence thesis by CKB18:1;
end;
