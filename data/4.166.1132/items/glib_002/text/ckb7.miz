environ
vocabularies NUMBERS,FINSET_1,ARYTM_3,CARD_1,SUBSET_1,XBOOLE_0,GLIB_000,RELAT_2,GLIB_001,TREES_1,ZFMISC_1,FUNCT_1,FINSEQ_1,GRAPH_1,ABIAN,XXREAL_0,RELAT_1,RCOMP_1,FUNCOP_1,ARYTM_1,WAYBEL_0,TARSKI,PBOOLE,SETFAM_1,ORDINAL1,NAT_1,GLIB_002;
notations TARSKI,XBOOLE_0,ZFMISC_1,CARD_1,NUMBERS,SUBSET_1,SETFAM_1,DOMAIN_1,XCMPLX_0,ABIAN,XXREAL_0,RELAT_1,FUNCT_1,PBOOLE,FUNCT_2,FINSEQ_1,FINSET_1,NAT_1,FUNCOP_1,GLIB_000,GLIB_001,CKB2,CKB3,CKB4;
definitions TARSKI,FUNCOP_1,CKB2,CKB3,CKB4;
theorems CARD_1,CARD_2,FUNCOP_1,FINSEQ_1,FINSEQ_3,FUNCT_1,FUNCT_2,GLIB_000,GLIB_001,ABIAN,INT_1,JORDAN12,NAT_1,ORDINAL1,PENCIL_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_1,ZFMISC_1,XREAL_1,XXREAL_0,RELSET_1,CKB1,CKB2,CKB3,CKB4;
schemes NAT_1,SUBSET_1,GLIB_000;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XREAL_0,INT_1,CARD_1,GLIB_000,ABIAN,GLIB_001,FUNCT_2,PARTFUN1,CKB5,CKB6;
constructors DOMAIN_1,CARD_FIL,GLIB_001,VALUED_1,XXREAL_2,WELLORD2,RELSET_1,CKB2,CKB3,CKB4;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
registration
cluster  acyclic ->  simple for _Graph;
coherence
proof
let G being _Graph;
assume A1: (not (ex W being (Walk of G) st W is  Cycle-like));
now
given e being set such that
A2: e in ( the_Edges_of G )
and
A3: ( ( the_Source_of G ) . e ) = ( ( the_Target_of G ) . e );

set v1 = ( ( the_Source_of G ) . e );
reconsider v1 as (Vertex of G) by A2,FUNCT_2:5;
set W = ( G .walkOf (v1,e,v1) );
e Joins v1,v1,G by A2,A3,GLIB_000:def 13;
then ( len W ) = 3 by GLIB_001:14;
then W is non trivial by GLIB_001:125;
then W is  Cycle-like by GLIB_001:def 31;
hence contradiction by A1;
end;
then A4: G is  loopless by GLIB_000:def 18;
now
let e1 being set,e2 being set,v1 being set,v2 being set;
assume that
A5: e1 Joins v1,v2,G
and
A6: e2 Joins v1,v2,G;
A7: e2 Joins v2,v1,G by A6,GLIB_000:14;
A8: v1 <> v2 by A4,A5,GLIB_000:18;
now
set W1 = ( G .walkOf (v1,e1,v2) );
set W = ( W1 .addEdge e2 );
assume A9: e1 <> e2;
reconsider W1 as (Path of G);
A10: ( W1 .last() ) = v2 by A5,GLIB_001:15;
then A11: ( W .last() ) = v1 by A7,GLIB_001:63;
A12: ( len W1 ) = 3 by A5,GLIB_001:14;
A13:now
let n being  odd (Element of ( NAT ));
assume that
A14: 1 < n
and
A15: n <= ( len W1 );
( 1 + 1 ) <= n by A14,NAT_1:13;
then ( 2 * 1 ) < n by XXREAL_0:1;
then ( ( 2 * 1 ) + 1 ) <= n by NAT_1:13;
then A16: n = 3 by A12,A15,XXREAL_0:1;
W1 = <* v1,e1,v2 *> by A5,GLIB_001:def 5;
hence ( W1 . n ) <> v1 by A8,A16,FINSEQ_1:45;
end;
(( W1 .first() ) = v1 & ( W1 .last() ) = v2) by A5,GLIB_001:15;
then A17: W1 is  open by A8,GLIB_001:def 24;
( W1 .first() ) = v1 by A5,GLIB_001:15;
then ( W .first() ) = v1 by A7,A10,GLIB_001:63;
then A18: W is  closed by A11,GLIB_001:def 24;
A19: e2 Joins ( W1 .last() ),v1,G by A5,A7,GLIB_001:15;
then A20: W is non trivial by GLIB_001:132;
( W1 .edges() ) = { e1 } by A5,GLIB_001:108;
then (not e2 in ( W1 .edges() )) by A9,TARSKI:def 1;
hence W is  Path-like by A19,A17,A13,GLIB_001:150;
then W is  Cycle-like by A18,A20,GLIB_001:def 31;
hence contradiction by A1;
end;
hence e1 = e2;
end;
then G is  non-multi by GLIB_000:def 20;
hence thesis by A4;
end;
end;
