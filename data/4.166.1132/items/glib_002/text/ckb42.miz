environ
vocabularies NUMBERS,FINSET_1,ARYTM_3,CARD_1,SUBSET_1,XBOOLE_0,GLIB_000,RELAT_2,GLIB_001,TREES_1,ZFMISC_1,FUNCT_1,FINSEQ_1,GRAPH_1,ABIAN,XXREAL_0,RELAT_1,RCOMP_1,FUNCOP_1,ARYTM_1,WAYBEL_0,TARSKI,PBOOLE,SETFAM_1,ORDINAL1,NAT_1,GLIB_002;
notations TARSKI,XBOOLE_0,ZFMISC_1,CARD_1,NUMBERS,SUBSET_1,SETFAM_1,DOMAIN_1,XCMPLX_0,ABIAN,XXREAL_0,RELAT_1,FUNCT_1,PBOOLE,FUNCT_2,FINSEQ_1,FINSET_1,NAT_1,FUNCOP_1,GLIB_000,GLIB_001,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB22,CKB26,CKB27,CKB29,CKB30,CKB31,CKB32;
definitions TARSKI,FUNCOP_1,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB22,CKB27,CKB29,CKB31,CKB32;
theorems CARD_1,CARD_2,FUNCOP_1,FINSEQ_1,FINSEQ_3,FUNCT_1,FUNCT_2,GLIB_000,GLIB_001,ABIAN,INT_1,JORDAN12,NAT_1,ORDINAL1,PENCIL_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_1,ZFMISC_1,XREAL_1,XXREAL_0,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB27,CKB29,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41;
schemes NAT_1,SUBSET_1,GLIB_000;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XREAL_0,INT_1,CARD_1,GLIB_000,ABIAN,GLIB_001,FUNCT_2,PARTFUN1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB23,CKB24,CKB25,CKB28;
constructors DOMAIN_1,CARD_FIL,GLIB_001,VALUED_1,XXREAL_2,WELLORD2,RELSET_1,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB22,CKB27,CKB29,CKB30,CKB31;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Lm14: (for G being _Graph holds (for C being (Component of G) holds ( the_Edges_of C ) = ( G .edgesBetween ( the_Vertices_of C ) )))
proof
let G being _Graph;
let C being (Component of G);
reconsider VC = ( the_Vertices_of C ) as (Subset of ( the_Vertices_of G ));
set EB = ( G .edgesBetween VC );
( C .edgesBetween ( the_Vertices_of C ) ) c= EB by GLIB_000:76;
then A1: ( the_Edges_of C ) c= EB by GLIB_000:34;
now
let e being set;
thus (e in ( the_Edges_of C ) implies e in EB) by A1;
assume A2: e in EB;
now
set GX = the (inducedSubgraph of G,VC,EB);
assume A3: (not e in ( the_Edges_of C ));
A4: ( the_Edges_of GX ) = EB by GLIB_000:def 37;
( the_Vertices_of GX ) = VC by GLIB_000:def 37;
then A5: C is  spanning  spanning (Subgraph of GX) by A1,A4,GLIB_000:44,GLIB_000:def 33;
then GX is  connected by CKB38:1;
then (not C c< GX) by CKB22:def 1;
then (GX == C or (not C c= GX)) by GLIB_000:def 36;
hence contradiction by A2,A3,A4,A5,GLIB_000:def 34,GLIB_000:def 35;
end;
hence e in ( the_Edges_of C );
end;
hence thesis by TARSKI:1;
end;
