environ
vocabularies NUMBERS,FINSET_1,ARYTM_3,CARD_1,SUBSET_1,XBOOLE_0,GLIB_000,RELAT_2,GLIB_001,TREES_1,ZFMISC_1,FUNCT_1,FINSEQ_1,GRAPH_1,ABIAN,XXREAL_0,RELAT_1,RCOMP_1,FUNCOP_1,ARYTM_1,WAYBEL_0,TARSKI,PBOOLE,SETFAM_1,ORDINAL1,NAT_1,GLIB_002;
notations TARSKI,XBOOLE_0,ZFMISC_1,CARD_1,NUMBERS,SUBSET_1,SETFAM_1,DOMAIN_1,XCMPLX_0,ABIAN,XXREAL_0,RELAT_1,FUNCT_1,PBOOLE,FUNCT_2,FINSEQ_1,FINSET_1,NAT_1,FUNCOP_1,GLIB_000,GLIB_001,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17;
definitions TARSKI,FUNCOP_1,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17;
theorems CARD_1,CARD_2,FUNCOP_1,FINSEQ_1,FINSEQ_3,FUNCT_1,FUNCT_2,GLIB_000,GLIB_001,ABIAN,INT_1,JORDAN12,NAT_1,ORDINAL1,PENCIL_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_1,ZFMISC_1,XREAL_1,XXREAL_0,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB18,CKB19,CKB20;
schemes NAT_1,SUBSET_1,GLIB_000;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XREAL_0,INT_1,CARD_1,GLIB_000,ABIAN,GLIB_001,FUNCT_2,PARTFUN1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15;
constructors DOMAIN_1,CARD_FIL,GLIB_001,VALUED_1,XXREAL_2,WELLORD2,RELSET_1,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Lm4: (for G being _Graph holds (for W being (Walk of G) holds (for v being (Vertex of G) holds (v in ( W .vertices() ) implies ( W .vertices() ) c= ( G .reachableFrom v )))))
proof
let G being _Graph;
let W being (Walk of G);
let v being (Vertex of G);
assume v in ( W .vertices() );
then consider m being  odd (Element of ( NAT )) such that A1: m <= ( len W ) and A2: ( W . m ) = v by GLIB_001:87;
let x being set;
assume x in ( W .vertices() );
then consider n being  odd (Element of ( NAT )) such that A3: n <= ( len W ) and A4: ( W . n ) = x by GLIB_001:87;
now
per cases ;
suppose m <= n;

then ( W .cut (m,n) ) is_Walk_from v,x by A2,A3,A4,GLIB_001:37;
hence (ex W2 being (Walk of G) st W2 is_Walk_from v,x);
end;
suppose m > n;

then ( W .cut (n,m) ) is_Walk_from x,v by A1,A2,A4,GLIB_001:37;
then ( ( W .cut (n,m) ) .reverse() ) is_Walk_from v,x by GLIB_001:23;
hence (ex W2 being (Walk of G) st W2 is_Walk_from v,x);
end;
end;
hence thesis by CKB16:def 1;
end;
