environ
vocabularies NUMBERS,FINSET_1,ARYTM_3,CARD_1,SUBSET_1,XBOOLE_0,GLIB_000,RELAT_2,GLIB_001,TREES_1,ZFMISC_1,FUNCT_1,FINSEQ_1,GRAPH_1,ABIAN,XXREAL_0,RELAT_1,RCOMP_1,FUNCOP_1,ARYTM_1,WAYBEL_0,TARSKI,PBOOLE,SETFAM_1,ORDINAL1,NAT_1,GLIB_002;
notations TARSKI,XBOOLE_0,ZFMISC_1,CARD_1,NUMBERS,SUBSET_1,SETFAM_1,DOMAIN_1,XCMPLX_0,ABIAN,XXREAL_0,RELAT_1,FUNCT_1,PBOOLE,FUNCT_2,FINSEQ_1,FINSET_1,NAT_1,FUNCOP_1,GLIB_000,GLIB_001,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB22,CKB26,CKB27,CKB29,CKB30,CKB31,CKB32,CKB56,CKB57,CKB58;
definitions TARSKI,FUNCOP_1,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB22,CKB27,CKB29,CKB31,CKB32,CKB56,CKB57,CKB58;
theorems CARD_1,CARD_2,FUNCOP_1,FINSEQ_1,FINSEQ_3,FUNCT_1,FUNCT_2,GLIB_000,GLIB_001,ABIAN,INT_1,JORDAN12,NAT_1,ORDINAL1,PENCIL_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_1,ZFMISC_1,XREAL_1,XXREAL_0,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB27,CKB29,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB51,CKB52,CKB53,CKB56,CKB57,CKB58,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB103,CKB104;
schemes NAT_1,SUBSET_1,GLIB_000;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XREAL_0,INT_1,CARD_1,GLIB_000,ABIAN,GLIB_001,FUNCT_2,PARTFUN1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB23,CKB24,CKB25,CKB28,CKB50,CKB54,CKB55,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67;
constructors DOMAIN_1,CARD_FIL,GLIB_001,VALUED_1,XXREAL_2,WELLORD2,RELSET_1,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB22,CKB27,CKB29,CKB30,CKB31,CKB56,CKB57,CKB58;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
reserve G for _Graph;
reserve G1 for _Graph;
reserve G2 for _Graph;
reserve v1 for (Vertex of G);
reserve v2 for (Vertex of G);
theorem
(for v1 being (Vertex of G1) holds (for v2 being (Vertex of G2) holds ((G1 == G2 & v1 = v2) implies (v1 is  cut-vertex implies v2 is  cut-vertex))))
proof
let v1 being (Vertex of G1);
let v2 being (Vertex of G2);
assume that
A1: G1 == G2
and
A2: v1 = v2
and
A3: v1 is  cut-vertex;
A4: G1 is non  trivial by A3,CKB104:1;
then A5: G2 is non  trivial by A1,GLIB_000:89;
let G2A being (removeVertex of G2,v2);
set G1A = the (removeVertex of G1,v1);
( G1 .numComponents() ) = ( G2 .numComponents() ) by A1,CKB40:1;
then A6: ( G2 .numComponents() ) in ( G1A .numComponents() ) by A3,CKB31:def 1;
( the_Vertices_of G1A ) = ( ( the_Vertices_of G1 ) \ { v2 } ) by A2,A4,GLIB_000:47
.= ( ( the_Vertices_of G2 ) \ { v2 } ) by A1,GLIB_000:def 34;
then A7: ( the_Vertices_of G2A ) = ( the_Vertices_of G1A ) by A5,GLIB_000:47;
G2 is (Subgraph of G1) by A1,GLIB_000:87;
then A8: G2A is (Subgraph of G1) by GLIB_000:43;
( the_Edges_of G1A ) = ( G1 .edgesBetween ( ( the_Vertices_of G1 ) \ { v1 } ) ) by A4,GLIB_000:47
.= ( G1 .edgesBetween ( ( the_Vertices_of G2 ) \ { v2 } ) ) by A1,A2,GLIB_000:def 34
.= ( G2 .edgesBetween ( ( the_Vertices_of G2 ) \ { v2 } ) ) by A1,GLIB_000:90;
then ( the_Edges_of G2A ) = ( the_Edges_of G1A ) by A5,GLIB_000:47;
hence thesis by A6,A7,A8,CKB40:1,GLIB_000:86;
end;
