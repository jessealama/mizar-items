environ
vocabularies NUMBERS,FINSET_1,ARYTM_3,CARD_1,SUBSET_1,XBOOLE_0,GLIB_000,RELAT_2,GLIB_001,TREES_1,ZFMISC_1,FUNCT_1,FINSEQ_1,GRAPH_1,ABIAN,XXREAL_0,RELAT_1,RCOMP_1,FUNCOP_1,ARYTM_1,WAYBEL_0,TARSKI,PBOOLE,SETFAM_1,ORDINAL1,NAT_1,GLIB_002;
notations TARSKI,XBOOLE_0,ZFMISC_1,CARD_1,NUMBERS,SUBSET_1,SETFAM_1,DOMAIN_1,XCMPLX_0,ABIAN,XXREAL_0,RELAT_1,FUNCT_1,PBOOLE,FUNCT_2,FINSEQ_1,FINSET_1,NAT_1,FUNCOP_1,GLIB_000,GLIB_001,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB22,CKB26,CKB27,CKB29,CKB30,CKB31,CKB32;
definitions TARSKI,FUNCOP_1,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB22,CKB27,CKB29,CKB31,CKB32;
theorems CARD_1,CARD_2,FUNCOP_1,FINSEQ_1,FINSEQ_3,FUNCT_1,FUNCT_2,GLIB_000,GLIB_001,ABIAN,INT_1,JORDAN12,NAT_1,ORDINAL1,PENCIL_1,TARSKI,XBOOLE_0,XBOOLE_1,XCMPLX_1,ZFMISC_1,XREAL_1,XXREAL_0,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB27,CKB29,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49;
schemes NAT_1,SUBSET_1,GLIB_000;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XREAL_0,INT_1,CARD_1,GLIB_000,ABIAN,GLIB_001,FUNCT_2,PARTFUN1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB23,CKB24,CKB25,CKB28,CKB50;
constructors DOMAIN_1,CARD_FIL,GLIB_001,VALUED_1,XXREAL_2,WELLORD2,RELSET_1,CKB2,CKB3,CKB4,CKB11,CKB16,CKB17,CKB22,CKB27,CKB29,CKB30,CKB31;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Lm22: (for G being  acyclic _Graph holds (for W being (Path of G) holds (for e being set holds (((not e in ( W .edges() )) & e in ( ( W .last() ) .edgesInOut() )) implies ( W .addEdge e ) is  Path-like))))
proof
let G being  acyclic _Graph;
let W being (Path of G);
let e being set;
assume that
A1: (not e in ( W .edges() ))
and
A2: e in ( ( W .last() ) .edgesInOut() );
set v = ( ( W .last() ) .adj e );
set W2 = ( W .addEdge e );
A3: e Joins ( W .last() ),( ( W .last() ) .adj e ),G by A2,GLIB_000:67;
then A4: ( len W2 ) = ( ( len W ) + 2 ) by GLIB_001:64;
A5: W2 is  Trail-like by A1,A2,GLIB_001:142;
now
per cases ;
suppose A6: W is  trivial;

then (for n being  odd (Element of ( NAT )) holds ((1 < n & n <= ( len W )) implies ( W . n ) <> v)) by GLIB_001:126;
hence thesis by A1,A3,A6,GLIB_001:150;
end;
suppose A7: W is non trivial;

A8:now
let n being  odd (Element of ( NAT ));
assume that
A9: 1 < n
and
A10: n <= ( len W );
now
set W3 = ( W2 .cut (n,( len W2 )) );
assume A11: ( W . n ) = v;
A12: n <= ( len W2 ) by A4,A10,NAT_1:12;
then A13: ( W3 .first() ) = ( W2 . n ) by GLIB_001:37;
now
assume W3 is  trivial;
then ( len W3 ) = 1 by GLIB_001:126;
then ( 1 + n ) = ( ( len W2 ) + 1 ) by A12,GLIB_001:36;
then ( ( 2 + ( len W ) ) - ( len W ) ) <= ( ( len W ) - ( len W ) ) by A4,A10,XREAL_1:13;
then 2 <= ( 0 );
hence contradiction;
end;
then consider W4 being (Path of W3) such that A14: W4 is non trivial by A5,GLIB_001:166;
( W3 .last() ) = ( W2 . ( len W2 ) ) by A12,GLIB_001:37;
then A15: ( W3 .last() ) = ( W2 .last() ) by GLIB_001:def 7
.= v by A3,GLIB_001:63;
n in ( dom W ) by A9,A10,FINSEQ_3:25;
then ( W3 .first() ) = v by A3,A11,A13,GLIB_001:65;
then W4 is_Walk_from v,v by A15,GLIB_001:def 32;
then W4 is  closed by GLIB_001:119;
then W4 is  Cycle-like by A14,GLIB_001:def 31;
hence contradiction by CKB3:def 1;
end;
hence ( W . n ) <> v;
end;
now
assume W is  closed;
then W is  Cycle-like by A7,GLIB_001:def 31;
hence contradiction by CKB3:def 1;
end;
hence thesis by A1,A3,A8,GLIB_001:150;
end;
end;
hence thesis;
end;
