environ
vocabularies CLASSES2,CLASSES1,ORDINAL1,XBOOLE_0,FUNCT_1,RELAT_1,TARSKI,CARD_3,CARD_1,FUNCT_2,PRALG_1,PBOOLE,SUBSET_1,RLVECT_2,STRUCT_0,FUNCOP_1,WAYBEL_3,YELLOW_1,ORDERS_2,WAYBEL_0,XXREAL_0,EQREL_1,RELAT_2,ZFMISC_1,CAT_1,YELLOW_0,WELLORD1,PRE_TOPC,RCOMP_1,CONNSP_2,COMPTS_1,MCART_1,TOPS_1,SEQ_2,ORDINAL2,SETFAM_1,YELLOW_6;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,MCART_1,RELAT_1,FUNCT_1,PBOOLE,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,CARD_1,CARD_3,FUNCOP_1,ORDINAL1,CLASSES1,CLASSES2,TOLER_1,STRUCT_0,TOPS_1,COMPTS_1,CONNSP_2,PRALG_1,ORDERS_2,LATTICE3,PRE_TOPC,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_3,WAYBEL_3,CKB1,CKB7,CKB8,CKB15,CKB20,CKB26,CKB27,CKB37,CKB41,CKB50,CKB52;
definitions TARSKI,STRUCT_0,WAYBEL_0,PRALG_1,YELLOW_1,COMPTS_1,YELLOW_0,RELAT_1,PRE_TOPC,WAYBEL_3,BINOP_1,SUBSET_1,WELLORD1,CKB1,CKB8,CKB15,CKB26,CKB27,CKB37,CKB41,CKB50,CKB52;
theorems CONNSP_2,TOPS_1,FUNCOP_1,WAYBEL_0,PRE_TOPC,ORDERS_2,RELAT_1,FUNCT_2,ZFMISC_1,FUNCT_1,TARSKI,PBOOLE,YELLOW_1,CARD_3,PRALG_1,YELLOW_3,RELSET_1,DOMAIN_1,YELLOW_0,CLASSES2,CLASSES1,CARD_2,FUNCT_6,LATTICE3,MCART_1,SUBSET_1,WAYBEL_3,XBOOLE_0,XBOOLE_1,ORDINAL1,REALSET1,PARTFUN1,CKB1,CKB4,CKB5,CKB8,CKB15,CKB18,CKB19,CKB24,CKB25,CKB26,CKB27,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB45,CKB46,CKB47,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59;
schemes PBOOLE,FUNCT_7,SUBSET_1,RELSET_1,DOMAIN_1,MSSUBFAM,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,FUNCT_2,FUNCOP_1,CARD_1,CLASSES1,CARD_3,CLASSES2,PBOOLE,STRUCT_0,ORDERS_2,PCOMPS_1,LATTICE3,YELLOW_0,WAYBEL_0,PARTFUN1,YELLOW_1,YELLOW_3,WAYBEL_3,RELSET_1,TOPS_1,CKB2,CKB3,CKB6,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB16,CKB17,CKB21,CKB22,CKB23,CKB28,CKB29,CKB30,CKB31,CKB34,CKB43,CKB44,CKB48,CKB49;
constructors BINOP_1,CLASSES1,TOLER_1,CLASSES2,REALSET1,TOPS_1,COMPTS_1,CONNSP_2,LATTICE3,PRALG_1,YELLOW_3,WAYBEL_3,RELSET_1,PBOOLE,CKB1,CKB20,CKB26,CKB27,CKB37,CKB41,CKB50,CKB52;
requirements BOOLE,SUBSET;
begin
reserve X for set;
definition
let S being 1-sorted;
let N being NetStr over S;
let X;
func N " X ->  strict (SubNetStr of N)
means
:Def13: (it is  full  full (SubRelStr of N) & (the carrier of it) = ( (the mapping of N) " X ));
existence
proof
set c = ( (the mapping of N) " X );
reconsider i = ( (the InternalRel of N) |_2 c ) as (Relation of c,c);
per cases ;
suppose S is non empty;

then reconsider S as non empty 1-sorted;
set c = ( (the mapping of N) " X );
reconsider m = ( (the mapping of N) | c ) as (Function of c,(the carrier of S)) by FUNCT_2:32;
set S = NetStr (# c,i,m #);
A1: i c= (the InternalRel of N) by XBOOLE_1:17;
then S is (SubRelStr of N) by YELLOW_0:def 13;
then reconsider S as  strict (SubNetStr of N) by CKB37:def 1;
take S;
thus thesis by A1,YELLOW_0:def 13,YELLOW_0:def 14;
end;
suppose A2: S is  empty;

then (the mapping of N) = ( {} );
then c = ( {} ) by RELAT_1:137;
then reconsider m = ( {} ) as (Function of c,(the carrier of S)) by RELSET_1:12;
set S = NetStr (# c,i,m #);
A3: (the mapping of S) = ( (the mapping of N) | (the carrier of S) ) by A2;
A4: i c= (the InternalRel of N) by XBOOLE_1:17;
then S is (SubRelStr of N) by YELLOW_0:def 13;
then reconsider S as  strict (SubNetStr of N) by A3,CKB37:def 1;
take S;
thus thesis by A4,YELLOW_0:def 13,YELLOW_0:def 14;
end;
end;
uniqueness
proof
let it1 being  strict (SubNetStr of N),it2 being  strict (SubNetStr of N);
assume that
A5: it1 is  full  full (SubRelStr of N)
and
A6: (the carrier of it1) = ( (the mapping of N) " X )
and
A7: it2 is  full  full (SubRelStr of N)
and
A8: (the carrier of it2) = ( (the mapping of N) " X );
A9: (the mapping of it1) = ( (the mapping of N) | (the carrier of it2) ) by A6,A8,CKB37:def 1
.= (the mapping of it2) by CKB37:def 1;
( the RelStr of it1 ) = ( the RelStr of it2 ) by A5,A6,A7,A8,YELLOW_0:57;
hence thesis by A9;
end;
end;
