environ
vocabularies FUNCT_1,COMPLEX1,XBOOLE_0,XXREAL_0,VALUED_1,NAT_1,PARTFUN1,SEQ_1,ARYTM_1,ORDINAL2,ZFMISC_1,NUMBERS,CARD_1,RELAT_1,SEQFUNC,ARYTM_3,PBOOLE,RLVECT_1,SUPINF_2,RSSPACE,STRUCT_0,ALGSTR_0,VECTSP10,REALSET1,FUNCOP_1,PRE_TOPC,LPSPACE1,BINOP_1,NORMSP_1,PROB_1,MEASURE1,MEASURE2,MEASURE6,MESFUNC1,TARSKI,RFUNCT_3,SETFAM_1,MESFUNC5,MESFUNC8,IDEAL_1,SUBSET_1,FUNCT_7,PREPOWER,POWER,LPSPACE2,RSSPACE3,SEQ_2,SERIES_1,REAL_1,INTEGRA5,ORDINAL1,XREAL_0,VALUED_0,CARD_3,REWRITE1,NEWTON,XXREAL_2,METRIC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,COMPLEX1,XXREAL_0,XREAL_0,SUPINF_2,EXTREAL1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,VALUED_1,RFUNCT_3,BINOP_1,REAL_1,NAT_1,STRUCT_0,ALGSTR_0,RLVECT_1,IDEAL_1,SETFAM_1,PRE_TOPC,NORMSP_0,NORMSP_1,PROB_1,ASYMPT_0,MEASURE1,MEASURE2,MEASURE3,MEASURE6,SEQFUNC,MESFUNC1,MESFUNC2,MESFUNC5,MESFUNC6,FUNCT_7,MESFUNC8,NEWTON,PREPOWER,POWER,MESFUN6C,SEQ_1,SEQ_2,RECDEF_1,SERIES_1,RSSPACE3,LOPBAN_1,MESFUN7C,MESFUN9C,LPSPACE1,CKB3,CKB21,CKB39,CKB43,CKB47,CKB51,CKB65,CKB66,CKB67,CKB68,CKB69;
definitions TARSKI,STRUCT_0,ALGSTR_0,RLVECT_1,NORMSP_1,MEASURE6,MESFUN7C,MESFUNC5,MESFUNC6,SUBSET_1,LPSPACE1,XBOOLE_0,VALUED_1,RELAT_1,XCMPLX_0,NORMSP_0,CKB3,CKB21,CKB39,CKB43,CKB47,CKB51,CKB65,CKB66,CKB67,CKB68,CKB69;
theorems FUNCT_1,FUNCT_2,PARTFUN1,COMPLEX1,MESFUN9C,RINFSUP2,SEQ_2,SETFAM_1,LOPBAN_1,PREPOWER,XBOOLE_0,TARSKI,RELAT_1,SEQM_3,VALUED_1,SERIES_1,IDEAL_1,RLVECT_1,FUNCOP_1,XBOOLE_1,BINOP_1,SUPINF_2,MESFUNC5,MESFUNC2,EXTREAL1,MEASURE1,MESFUNC6,RFUNCT_1,XXREAL_0,ABSVALUE,MESFUNC1,MEASURE2,EXTREAL2,RSSPACE3,NORMSP_1,FUNCT_7,XREAL_1,HOLDER_1,POWER,XREAL_0,SUBSET_1,LPSPACE1,MESFUN6C,MESFUN7C,MESFUNC8,ORDINAL1,NAT_1,XCMPLX_0,XCMPLX_1,VALUED_0,XXREAL_3,SEQFUNC,MESFUNC9,SEQ_4,RELSET_1,COMSEQ_3,SEQ_1,SERIES_3,LOPBAN_3,NAGATA_2,NORMSP_0,CKB1,CKB2,CKB3,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB37,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB46,CKB47,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69;
schemes NAT_1,RECDEF_1,BINOP_1,FUNCT_2,SEQ_1,SEQFUNC;
registrations ORDINAL1,RELSET_1,NUMBERS,MEMBERED,VALUED_0,NAT_1,SUBSET_1,PARTFUN1,RLVECT_1,STRUCT_0,NORMSP_1,MEASURE1,SEQ_4,SEQ_2,MESFUN6C,MESFUNC8,LPSPACE1,XCMPLX_0,XREAL_0,XXREAL_0,VALUED_1,FUNCT_2,MESFUN7C,NORMSP_0,CKB4,CKB5,CKB18,CKB36,CKB38,CKB45,CKB48,CKB70;
constructors EXTREAL1,REAL_1,IDEAL_1,NEWTON,MEASURE3,MEASURE6,MESFUNC2,MESFUNC6,MESFUNC9,SEQ_1,MESFUN6C,MESFUN7C,MESFUN9C,RECDEF_1,SEQ_2,EXTREAL2,RINFSUP2,FUNCT_7,SERIES_1,PREPOWER,ASYMPT_0,LPSPACE1,SUPINF_1,SEQFUNC,MESFUNC5,RSSPACE3,LOPBAN_1,MESFUNC1,RELSET_1,BINOP_2,CKB3,CKB21,CKB39,CKB43,CKB47,CKB51,CKB65,CKB66,CKB67,CKB68,CKB69;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
reserve X for non  empty set;
reserve S for (SigmaField of X);
reserve M for (sigma_Measure of S);
reserve g for (PartFunc of X,( REAL ));
reserve a for Real;
reserve b for Real;
reserve c for Real;
reserve k for  positive Real;
registration
let X being non  empty set;
let S being (SigmaField of X);
let M being (sigma_Measure of S);
let k being  positive Real;
cluster ( Pre-Lp-Space (M,k) ) ->  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital;
coherence
proof
set C = ( CosetSet (M,k) );
set aC = ( addCoset (M,k) );
set lC = ( lmultCoset (M,k) );
set A = ( Pre-Lp-Space (M,k) );
A1: ((((the carrier of A) = ( CosetSet (M,k) ) & (the addF of A) = ( addCoset (M,k) )) & ( 0. A ) = ( zeroCoset (M,k) )) & (the Mult of A) = ( lmultCoset (M,k) )) by CKB69:def 1;
thus A is  Abelian
proof
let A1 being (Element of A);
let A2 being (Element of A);
A1 in C by A1;
then consider a being (PartFunc of X,( REAL )) such that A2: (A1 = ( a.e-eq-class_Lp (a,M,k) ) & a in ( Lp_Functions (M,k) ));
A2 in C by A1;
then consider b being (PartFunc of X,( REAL )) such that A3: (A2 = ( a.e-eq-class_Lp (b,M,k) ) & b in ( Lp_Functions (M,k) ));
A4: (a in A1 & b in A2) by A2,A3,CKB55:1;
then ( A1 + A2 ) = ( a.e-eq-class_Lp (( a + b ),M,k) ) by A1,CKB66:def 1;
hence ( A1 + A2 ) = ( A2 + A1 ) by A1,A4,CKB66:def 1;
end;

thus A is  add-associative
proof
let A1 being (Element of A);
let A2 being (Element of A);
let A3 being (Element of A);
A1 in C by A1;
then consider a being (PartFunc of X,( REAL )) such that A5: (A1 = ( a.e-eq-class_Lp (a,M,k) ) & a in ( Lp_Functions (M,k) ));
A2 in C by A1;
then consider b being (PartFunc of X,( REAL )) such that A6: (A2 = ( a.e-eq-class_Lp (b,M,k) ) & b in ( Lp_Functions (M,k) ));
A3 in C by A1;
then consider c being (PartFunc of X,( REAL )) such that A7: (A3 = ( a.e-eq-class_Lp (c,M,k) ) & c in ( Lp_Functions (M,k) ));
A8: ((a in A1 & b in A2) & c in A3) by A5,A6,A7,CKB55:1;
then (( aC . (A1,A2) ) = ( a.e-eq-class_Lp (( a + b ),M,k) ) & ( aC . (A2,A3) ) = ( a.e-eq-class_Lp (( b + c ),M,k) )) by A1,CKB66:def 1;
then A9: (( a + b ) in ( A1 + A2 ) & ( b + c ) in ( A2 + A3 )) by A1,CKB55:1,CKB31:1,A5,A6,A7;
reconsider a1 = a,b1 = b,c1 = c as (VECTOR of ( RLSp_LpFunct (M,k) )) by A5,A6,A7;
A10: (( a + b ) = ( a1 + b1 ) & ( b + c ) = ( b1 + c1 )) by CKB40:1;
then ( a + ( b + c ) ) = ( a1 + ( b1 + c1 ) ) by CKB40:1;
then ( a + ( b + c ) ) = ( ( a1 + b1 ) + c1 ) by RLVECT_1:def 3;
then ( a + ( b + c ) ) = ( ( a + b ) + c ) by A10,CKB40:1;
then ( ( A1 + A2 ) + A3 ) = ( a.e-eq-class_Lp (( a + ( b + c ) ),M,k) ) by A8,A9,CKB66:def 1,A1;
hence ( ( A1 + A2 ) + A3 ) = ( A1 + ( A2 + A3 ) ) by A8,A9,CKB66:def 1,A1;
end;

thus A is  right_zeroed
proof
let A1 being (Element of A);
A1 in C by A1;
then consider a being (PartFunc of X,( REAL )) such that A11: (A1 = ( a.e-eq-class_Lp (a,M,k) ) & a in ( Lp_Functions (M,k) ));
A12: a in A1 by A11,CKB55:1;
set z = ( X --> ( 0 ) );
A13: z in ( 0. A ) by A1,CKB55:1,CKB29:1;
reconsider a1 = a,z1 = z as (VECTOR of ( RLSp_LpFunct (M,k) )) by A11,CKB29:1;
( a + z ) = ( a1 + z1 ) by CKB40:1
.= ( a1 + ( 0. ( RLSp_LpFunct (M,k) ) ) ) by CKB46:1
.= a by RLVECT_1:def 4;
hence ( A1 + ( 0. A ) ) = A1 by A1,A11,A12,A13,CKB66:def 1;
end;

thus A is  right_complementable
proof
let A1 being (Element of A);
A1 in C by A1;
then consider a being (PartFunc of X,( REAL )) such that A14: (A1 = ( a.e-eq-class_Lp (a,M,k) ) & a in ( Lp_Functions (M,k) ));
A15: a in A1 by A14,CKB55:1;
reconsider a1 = a as (VECTOR of ( RLSp_LpFunct (M,k) )) by A14;
A16: ( ( - 1 ) (#) a ) in ( Lp_Functions (M,k) ) by A14,CKB32:1;
set A2 = ( a.e-eq-class_Lp (( ( - 1 ) (#) a ),M,k) );
A2 in C by A16;
then reconsider A2 as (Element of A) by A1;
take A2;
A17: ( ( - 1 ) (#) a ) in A2 by CKB55:1,A14,CKB32:1;
consider v,g being (PartFunc of X,( REAL )) such that A18: ((((v in ( Lp_Functions (M,k) ) & g in ( Lp_Functions (M,k) )) & v = ( a1 + ( ( - 1 ) * a1 ) )) & g = ( X --> ( 0 ) )) & v a.e.= g,M) by CKB42:1;
( ( - 1 ) (#) a ) = ( ( - 1 ) * a1 ) by CKB41:1;
then ( a + ( ( - 1 ) (#) a ) ) a.e.= g,M by CKB40:1,A18;
then ( 0. A ) = ( a.e-eq-class_Lp (( a + ( ( - 1 ) (#) a ) ),M,k) ) by CKB59:1,A18,A1;
hence ( A1 + A2 ) = ( 0. A ) by A15,A17,CKB66:def 1,A1;
end;

now
let x0 being  real number;
let y0 being  real number;
let A1 being (Element of A);
let A2 being (Element of A);
reconsider x = x0,y = y0 as Real by XREAL_0:def 1;
A1 in C by A1;
then consider a being (PartFunc of X,( REAL )) such that A19: (A1 = ( a.e-eq-class_Lp (a,M,k) ) & a in ( Lp_Functions (M,k) ));
A2 in C by A1;
then consider b being (PartFunc of X,( REAL )) such that A20: (A2 = ( a.e-eq-class_Lp (b,M,k) ) & b in ( Lp_Functions (M,k) ));
A21: (a in A1 & b in A2) by A19,A20,CKB55:1;
then ( aC . (A1,A2) ) = ( a.e-eq-class_Lp (( a + b ),M,k) ) by A1,CKB66:def 1;
then A22: ( a + b ) in ( A1 + A2 ) by CKB55:1,CKB31:1,A19,A20,A1;
reconsider a1 = a,b1 = b as (VECTOR of ( RLSp_LpFunct (M,k) )) by A19,A20;
A23: ((((( y (#) a ) = ( y * a1 ) & ( x (#) a ) = ( x * a1 )) & ( x (#) b ) = ( x * b1 )) & ( ( x + y ) (#) a ) = ( ( x + y ) * a1 )) & ( 1 (#) a ) = ( 1 * a1 )) by CKB41:1;
( a + b ) = ( a1 + b1 ) by CKB40:1;
then ( x (#) ( a + b ) ) = ( x * ( a1 + b1 ) ) by CKB41:1;
then ( x (#) ( a + b ) ) = ( ( x * a1 ) + ( x * b1 ) ) by RLVECT_1:def 5;
then A24: ( x (#) ( a + b ) ) = ( ( x (#) a ) + ( x (#) b ) ) by A23,CKB40:1;
( ( x + y ) (#) a ) = ( ( x * a1 ) + ( y * a1 ) ) by A23,RLVECT_1:def 6;
then A25: ( ( x + y ) (#) a ) = ( ( x (#) a ) + ( y (#) a ) ) by A23,CKB40:1;
( x (#) ( y (#) a ) ) = ( x * ( y * a1 ) ) by A23,CKB41:1
.= ( ( x * y ) * a1 ) by RLVECT_1:def 7;
then A26: ( x (#) ( y (#) a ) ) = ( ( x * y ) (#) a ) by CKB41:1;
((( lC . (x,A1) ) = ( a.e-eq-class_Lp (( x (#) a ),M,k) ) & ( lC . (x,A2) ) = ( a.e-eq-class_Lp (( x (#) b ),M,k) )) & ( lC . (y,A1) ) = ( a.e-eq-class_Lp (( y (#) a ),M,k) )) by A1,A21,CKB68:def 1;
then A27: ((( x (#) a ) in ( x * A1 ) & ( x (#) b ) in ( x * A2 )) & ( y (#) a ) in ( y * A1 )) by A1,CKB55:1,CKB32:1,A19,A20;
( x * ( A1 + A2 ) ) = ( a.e-eq-class_Lp (( ( x (#) a ) + ( x (#) b ) ),M,k) ) by A1,A24,A22,CKB68:def 1;
hence ( x0 * ( A1 + A2 ) ) = ( ( x0 * A1 ) + ( x0 * A2 ) ) by A1,A27,CKB66:def 1;
( ( x + y ) * A1 ) = ( a.e-eq-class_Lp (( ( x (#) a ) + ( y (#) a ) ),M,k) ) by A1,A25,A21,CKB68:def 1;
hence ( ( x0 + y0 ) * A1 ) = ( ( x0 * A1 ) + ( y0 * A1 ) ) by A27,CKB66:def 1,A1;
( ( x0 * y0 ) * A1 ) = ( a.e-eq-class_Lp (( x (#) ( y (#) a ) ),M,k) ) by A1,A26,A21,CKB68:def 1;
hence ( ( x0 * y0 ) * A1 ) = ( x0 * ( y0 * A1 ) ) by A27,CKB68:def 1,A1;
( 1 (#) a ) = a by A23,RLVECT_1:def 8;
hence ( 1 * A1 ) = A1 by A19,A21,CKB68:def 1,A1;
end;
hence thesis by RLVECT_1:def 5,RLVECT_1:def 6,RLVECT_1:def 7,RLVECT_1:def 8;
end;
end;
