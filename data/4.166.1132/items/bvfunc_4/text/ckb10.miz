environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,PARTIT1,BVFUNC_1,XBOOLEAN,FUNCT_1,RELAT_1,TARSKI,EQREL_1,BVFUNC_2;
notations TARSKI,XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,FUNCT_2,EQREL_1,BVFUNC_1,BVFUNC_2;
definitions BVFUNC_1,XBOOLEAN,BVFUNC_2;
theorems FUNCT_1,FUNCT_2,BVFUNC_1,BVFUNC_2,MARGREL1,XBOOLEAN,EQREL_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9;
registrations XBOOLE_0,XBOOLEAN,MARGREL1;
constructors BINARITH,BVFUNC_1,BVFUNC_2;
requirements SUBSET,BOOLE,ARITHM;
begin
reserve Y for non  empty set;
theorem
Th10: (for a,b being (Element of ( Funcs (Y,( BOOLEAN )) )) holds (( a 'eqv' b ) = ( I_el Y ) iff (( a 'imp' b ) = ( I_el Y ) & ( b 'imp' a ) = ( I_el Y ))))
proof
let a being (Element of ( Funcs (Y,( BOOLEAN )) ));
let b being (Element of ( Funcs (Y,( BOOLEAN )) ));
thus (( a 'eqv' b ) = ( I_el Y ) implies (( a 'imp' b ) = ( I_el Y ) & ( b 'imp' a ) = ( I_el Y )))
proof
assume ( a 'eqv' b ) = ( I_el Y );
then a = b by BVFUNC_1:17;
hence thesis by BVFUNC_1:16;
end;

assume (( a 'imp' b ) = ( I_el Y ) & ( b 'imp' a ) = ( I_el Y ));
then ( a 'eqv' b ) = ( ( I_el Y ) '&' ( I_el Y ) ) by CKB7:1;
hence thesis;
end;
