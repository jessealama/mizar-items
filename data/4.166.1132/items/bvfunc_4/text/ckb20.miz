environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,PARTIT1,BVFUNC_1,XBOOLEAN,FUNCT_1,RELAT_1,TARSKI,EQREL_1,BVFUNC_2;
notations TARSKI,XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,FUNCT_2,EQREL_1,BVFUNC_1,BVFUNC_2;
definitions BVFUNC_1,XBOOLEAN,BVFUNC_2;
theorems FUNCT_1,FUNCT_2,BVFUNC_1,BVFUNC_2,MARGREL1,XBOOLEAN,EQREL_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
registrations XBOOLE_0,XBOOLEAN,MARGREL1;
constructors BINARITH,BVFUNC_1,BVFUNC_2;
requirements SUBSET,BOOLE,ARITHM;
begin
reserve Y for non empty set;
theorem
(for u being (Element of ( Funcs (Y,( BOOLEAN )) )) holds (for G being (Subset of ( PARTITIONS Y )) holds (for PA being (a_partition of Y) holds (u is_independent_of PA,G implies u '<' ( All (u,PA,G) )))))
proof
let u being (Element of ( Funcs (Y,( BOOLEAN )) ));
let G being (Subset of ( PARTITIONS Y ));
let PA being (a_partition of Y);
assume u is_independent_of PA,G;
then A1: u is_dependent_of ( CompF (PA,G) ) by BVFUNC_2:def 8;
(for z being (Element of Y) holds ( ( u 'imp' ( All (u,PA,G) ) ) . z ) = ( TRUE ))
proof
let z being (Element of Y);
A2: ( ( u 'imp' ( All (u,PA,G) ) ) . z ) = ( ( 'not' ( u . z ) ) 'or' ( ( All (u,PA,G) ) . z ) ) by BVFUNC_1:def 8;
A3: (z in ( EqClass (z,( CompF (PA,G) )) ) & ( EqClass (z,( CompF (PA,G) )) ) in ( CompF (PA,G) )) by EQREL_1:def 6;
now
per cases  by XBOOLEAN:def 3;
case ( u . z ) = ( FALSE );
hence thesis by A2;
end;
case ( u . z ) = ( TRUE );
then (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( u . x ) = ( TRUE ))) by A1,A3,BVFUNC_1:def 15;
then ( ( All (u,PA,G) ) . z ) = ( TRUE ) by BVFUNC_1:def 16;
hence thesis by A2;
end;
end;
hence thesis;
end;
then ( u 'imp' ( All (u,PA,G) ) ) = ( I_el Y ) by BVFUNC_1:def 11;
hence thesis by BVFUNC_1:16;
end;
