environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,PARTIT1,BVFUNC_1,XBOOLEAN,FUNCT_1,RELAT_1,TARSKI,EQREL_1,BVFUNC_2;
notations TARSKI,XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,FUNCT_2,EQREL_1,BVFUNC_1,BVFUNC_2;
definitions BVFUNC_1,XBOOLEAN,BVFUNC_2;
theorems FUNCT_1,FUNCT_2,BVFUNC_1,BVFUNC_2,MARGREL1,XBOOLEAN,EQREL_1;
registrations XBOOLE_0,XBOOLEAN,MARGREL1;
constructors BINARITH,BVFUNC_1,BVFUNC_2;
requirements SUBSET,BOOLE,ARITHM;
begin
reserve Y for non  empty set;
theorem
(for a,b,c being (Element of ( Funcs (Y,( BOOLEAN )) )) holds (a '<' ( b 'imp' c ) implies ( a '&' b ) '<' c))
proof
let a being (Element of ( Funcs (Y,( BOOLEAN )) ));
let b being (Element of ( Funcs (Y,( BOOLEAN )) ));
let c being (Element of ( Funcs (Y,( BOOLEAN )) ));
assume A1: a '<' ( b 'imp' c );
(for x being (Element of Y) holds ( ( ( a '&' b ) 'imp' c ) . x ) = ( TRUE ))
proof
let x being (Element of Y);
A2: ( ( a 'imp' ( b 'imp' c ) ) . x ) = ( ( 'not' ( a . x ) ) 'or' ( ( b 'imp' c ) . x ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( a . x ) ) 'or' ( ( 'not' ( b . x ) ) 'or' ( c . x ) ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( a . x ) ) 'or' ( 'not' ( b . x ) ) ) 'or' ( c . x ) );
A3: ( ( ( a '&' b ) 'imp' c ) . x ) = ( ( 'not' ( ( a '&' b ) . x ) ) 'or' ( c . x ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( a . x ) ) 'or' ( 'not' ( b . x ) ) ) 'or' ( c . x ) ) by MARGREL1:def 20;
( a 'imp' ( b 'imp' c ) ) = ( I_el Y ) by A1,BVFUNC_1:16;
hence thesis by A2,A3,BVFUNC_1:def 11;
end;
then ( ( a '&' b ) 'imp' c ) = ( I_el Y ) by BVFUNC_1:def 11;
hence thesis by BVFUNC_1:16;
end;
