environ
vocabularies NUMBERS,XBOOLE_0,PROB_1,SETFAM_1,SUBSET_1,RPR_1,FUNCT_1,TARSKI,RELAT_1,REAL_1,CARD_1,ARYTM_1,CARD_3,PROB_3,NAT_1,ARYTM_3,ZFMISC_1,PROB_2,XREAL_0,ORDINAL1,DYNKIN,VALUED_1,XXREAL_0,SERIES_1,ORDINAL2,FUNCOP_1,FINSEQ_1,FINSET_1,FINSUB_1,SETWISEO,ORDINAL4,EQREL_1,KOLMOG01;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,REAL_1,ORDINAL1,XCMPLX_0,XXREAL_0,NAT_1,XREAL_0,NUMBERS,FINSET_1,DYNKIN,FINSUB_1,RELAT_1,CARD_3,SEQ_2,SETFAM_1,FUNCT_1,RELSET_1,VALUED_1,FINSEQ_1,RVSUM_1,PARTFUN1,FUNCT_2,PROB_3,SERIES_1,FUNCOP_1,SETWISEO,FINSEQOP,KURATO_0,PROB_1,PROB_2,CKB4,CKB12,CKB13;
definitions PROB_1,SUBSET_1,TARSKI,XBOOLE_0,PROB_3,CARD_3,CKB4,CKB12,CKB13;
theorems XCMPLX_1,PROB_1,TARSKI,SUBSET_1,XBOOLE_0,DYNKIN,ZFMISC_1,PROB_2,XBOOLE_1,SERIES_1,PROB_3,PROB_4,FUNCT_1,FUNCT_2,SEQ_1,SEQ_2,RELAT_1,SETFAM_1,CARD_5,FINSUB_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,RVSUM_1,ORDINAL1,WELLORD2,FINSEQOP,NAT_1,VALUED_0,FUNCOP_1,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
schemes NAT_1,XBOOLE_0,SETWISEO,PARTFUN1,FUNCT_2;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,VALUED_1,RELSET_1,NUMBERS,XREAL_0,MEMBERED,PROB_1,RELAT_1,FINSET_1,FINSEQ_1,FINSUB_1,FUNCT_1,FUNCT_2,VALUED_0,PROB_3;
constructors SEQ_2,DYNKIN,REAL_1,SEQ_1,PROB_3,SERIES_1,KURATO_0,RINFSUP1,SETFAM_1,BINOP_2,RVSUM_1,WELLORD2,FINSEQOP,SETWISEO,RELSET_1,MEASURE1,CKB4,CKB12,CKB13;
requirements SUBSET,NUMERALS,BOOLE,ARITHM;
begin
reserve y for set;
reserve i for set;
definition
let Omega being non empty set;
let Sigma being (SigmaField of Omega);
let I being set;
let J being (Subset of I);
let F being (ManySortedSigmaField of I,Sigma);
mode SigmaSection of J,F
 -> (Function of J,Sigma)
means :Def4: (for i holds (i in J implies ( it . i ) in ( F . i )));
existence
proof
set f = ( J --> ( {} ) );
A1: (for i holds (i in J implies ( f . i ) in ( F . i )))
proof
let i;
assume A2: i in J;
then ( F . i ) is (SigmaField of Omega) by CKB12:def 1;
then ( {} ) in ( F . i ) by PROB_1:4;
hence thesis by A2,FUNCOP_1:7;
end;
A3: ( dom f ) = J by FUNCOP_1:13;
( rng f ) c= Sigma
proof
let y;
assume y in ( rng f );
then consider i such that A4: (i in J & y = ( f . i )) by A3,FUNCT_1:def 3;
(y in ( F . i ) & ( F . i ) in ( bool Sigma )) by A1,A4,FUNCT_2:5;
hence thesis;
end;
then f is (Function of J,Sigma) by A3,FUNCT_2:2;
hence thesis by A1;
end;
end;
