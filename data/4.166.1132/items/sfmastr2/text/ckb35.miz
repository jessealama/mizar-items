environ
vocabularies NUMBERS,FSM_1,SCMFSA_2,SF_MASTR,AMI_1,SCMFSA7B,SUBSET_1,XBOOLE_0,CARD_1,UNIALG_2,SCMFSA6B,FUNCT_1,FUNCT_4,SCMFSA6A,TARSKI,RELAT_1,ARYTM_3,GRAPHSP,MSUALG_1,SFMASTR1,TURING_1,SCMFSA_9,AMI_3,CARD_3,XXREAL_0,ARYTM_1,SCMFSA9A,COMPLEX1,AOFA_I00,PRE_FF,SFMASTR2,NAT_1,SCMNORM,SCMFSA6C,FUNCOP_1,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,INT_2,XXREAL_0,RELAT_1,FUNCT_1,FUNCT_2,FUNCT_4,PBOOLE,PRE_FF,CARD_3,FUNCOP_1,STRUCT_0,MEMSTR_0,AMISTD_1,COMPOS_1,EXTPRO_1,SCMFSA_2,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA_9,SFMASTR1,SCMFSA9A,NAT_1,CKB8,CKB9,CKB10,CKB14,CKB20,CKB31,CKB34;
definitions SCMFSA9A,SUBSET_1,SCMFSA6A,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB8,CKB9,CKB14,CKB20,CKB31,CKB34;
theorems TARSKI,ZFMISC_1,ABSVALUE,NAT_1,INT_1,FUNCT_4,PRE_FF,SCMFSA_2,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA8C,SCMFSA_9,SFMASTR1,SCMFSA9A,XBOOLE_0,XBOOLE_1,XREAL_1,RELAT_1,XXREAL_0,FUNCT_1,PBOOLE,COMPOS_1,EXTPRO_1,PARTFUN1,MEMSTR_0,CARD_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34;
schemes FUNCT_2,NAT_1;
registrations SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_3,SCMFSA_2,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA_9,SFMASTR1,XBOOLE_0,RELAT_1,FUNCT_2,COMPOS_1,EXTPRO_1,PBOOLE,FUNCT_4,FUNCOP_1,STRUCT_0,SCMFSA6A,MEMSTR_0,CKB13;
constructors XXREAL_0,INT_2,PRE_FF,SCMFSA6A,SCMFSA6B,SCMFSA6C,SCMFSA_9,SFMASTR1,SCMFSA9A,RELSET_1,PRE_POLY,PBOOLE,SCMFSA8A,SCMFSA7B,AMISTD_2,AMISTD_1,SCMFSA_7,FUNCT_4,MEMSTR_0,CKB8,CKB9,CKB14,CKB20,CKB31,CKB34;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve s for (State of ( SCM+FSA ));
reserve p for (Instruction-Sequence of ( SCM+FSA ));
reserve k for (Element of ( NAT ));
theorem
(for N,result being  read-write Int-Location holds (N <> result implies (for n being (Element of ( NAT )) holds (n = ( s . N ) implies (( ( IExec (( Fib-macro (N,result) ),p,s) ) . result ) = ( Fib n ) & ( ( IExec (( Fib-macro (N,result) ),p,s) ) . N ) = ( s . N ))))))
proof
let N being  read-write Int-Location;
let result being  read-write Int-Location;
assume that
A1: N <> result;
let n being (Element of ( NAT ));
set i1 = ( SubFrom (result,result) );
set next = ( 1 -stRWNotIn { N,result } );
set Nsave = ( 1 -stNotUsed ( times (N,( ( AddTo (result,next) ) ';' ( swap (result,next) ) )) ) );
set i0 = ( Nsave := N );
set i2 = ( next := ( intloc ( 0 ) ) );
set i30 = ( AddTo (result,next) );
set I31 = ( swap (result,next) );
set I301 = ( i30 ';' I31 );
set i02 = ( ( i0 ';' i1 ) ';' i2 );
set s1 = ( IExec (i02,p,s) );
set I3 = ( times (N,I301) );
set ST = ( StepTimes (N,I301,p,s1) );
assume A2: n = ( s . N );
A3: (not next in { N,result }) by SFMASTR1:20;
then A4: next <> N by TARSKI:def 2;
A5: ( { N } \/ ( UsedIntLoc I301 ) ) c= ( UsedIntLoc I3 ) by CKB11:1;
A6: Nsave = ( 1 -stRWNotIn ( UsedIntLoc I3 ) ) by SFMASTR1:def 4;
then A7: (not Nsave in ( UsedIntLoc I3 )) by SFMASTR1:20;
N in { N } by TARSKI:def 1;
then N in ( { N } \/ ( UsedIntLoc I301 ) ) by XBOOLE_0:def 3;
then A8: Nsave <> N by A6,A5,SFMASTR1:20;
A9: ( s1 . N ) = ( ( Exec (i2,( IExec (( i0 ';' i1 ),p,s) )) ) . N ) by SCMFSA6C:6
.= ( ( IExec (( i0 ';' i1 ),p,s) ) . N ) by A4,SCMFSA_2:63
.= ( ( Exec (i1,( Exec (i0,( Initialized s )) )) ) . N ) by SCMFSA6C:8
.= ( ( Exec (i0,( Initialized s )) ) . N ) by A1,SCMFSA_2:65
.= ( ( Initialized s ) . N ) by A8,SCMFSA_2:63
.= ( s . N ) by SCMFSA6C:3;
then A10: ( DataPart ( IExec (I3,p,s1) ) ) = ( DataPart ( ST . n ) ) by A2,CKB29:1;
defpred P[ Nat ]
 means
($1 <= ( s1 . N ) implies (( ( ST . $1 ) . result ) = ( Fib $1 ) & ( ( ST . $1 ) . next ) = ( Fib ( $1 + 1 ) )));
set UIFS = ( ( UsedIntLoc I301 ) \/ ( FinSeq-Locations ) );
set i4 = ( N := Nsave );
A11: ( UsedIntLoc I301 ) = ( ( UsedIntLoc i30 ) \/ ( UsedIntLoc I31 ) ) by SF_MASTR:29
.= ( { result,next } \/ ( UsedIntLoc I31 ) ) by SF_MASTR:14;
next in { result,next } by TARSKI:def 2;
then A12: next in ( UsedIntLoc I301 ) by A11,XBOOLE_0:def 3;
then next in ( { N } \/ ( UsedIntLoc I301 ) ) by XBOOLE_0:def 3;
then A13: Nsave <> next by A6,A5,SFMASTR1:20;
result in { result,next } by TARSKI:def 2;
then A14: result in ( UsedIntLoc I301 ) by A11,XBOOLE_0:def 3;
then result in ( { N } \/ ( UsedIntLoc I301 ) ) by XBOOLE_0:def 3;
then A15: Nsave <> result by A6,A5,SFMASTR1:20;
A16: next <> result by A3,TARSKI:def 2;
A17:now
let k being (Element of ( NAT ));
assume that
A18: P[ k ];
thus P[ ( k + 1 ) ]
proof
A19: k < ( k + 1 ) by NAT_1:13;
assume A20: ( k + 1 ) <= ( s1 . N );
then k < ( s1 . N ) by A19,XXREAL_0:2;
then A21: ( ( ST . ( k + 1 ) ) | UIFS ) = ( ( IExec (I301,( p +* ( times* (N,I301) ) ),( ST . k )) ) | UIFS ) by CKB27:1;
hence ( ( ST . ( k + 1 ) ) . result ) = ( ( IExec (I301,( p +* ( times* (N,I301) ) ),( ST . k )) ) . result ) by A14,CKB7:1
.= ( ( IExec (I31,( p +* ( times* (N,I301) ) ),( Exec (i30,( Initialized ( ST . k ) )) )) ) . result ) by SCMFSA8B:9
.= ( ( Exec (i30,( Initialized ( ST . k ) )) ) . next ) by SCMFSA6C:10
.= ( ( Initialized ( ST . k ) ) . next ) by A16,SCMFSA_2:64
.= ( Fib ( k + 1 ) ) by A18,A20,A19,SCMFSA6C:3,XXREAL_0:2;
thus ( ( ST . ( k + 1 ) ) . next ) = ( ( IExec (I301,( p +* ( times* (N,I301) ) ),( ST . k )) ) . next ) by A12,A21,CKB7:1
.= ( ( IExec (I31,( p +* ( times* (N,I301) ) ),( Exec (i30,( Initialized ( ST . k ) )) )) ) . next ) by SCMFSA8B:9
.= ( ( Exec (i30,( Initialized ( ST . k ) )) ) . result ) by SCMFSA6C:10
.= ( ( ( Initialized ( ST . k ) ) . result ) + ( ( Initialized ( ST . k ) ) . next ) ) by SCMFSA_2:64
.= ( ( ( ST . k ) . result ) + ( ( Initialized ( ST . k ) ) . next ) ) by SCMFSA6C:3
.= ( ( ( ST . k ) . result ) + ( ( ST . k ) . next ) ) by SCMFSA6C:3
.= ( Fib ( ( k + 1 ) + 1 ) ) by A18,A20,A19,PRE_FF:1,XXREAL_0:2;
end;

end;
A22: ( s1 . Nsave ) = ( ( Exec (i2,( IExec (( i0 ';' i1 ),p,s) )) ) . Nsave ) by SCMFSA6C:6
.= ( ( IExec (( i0 ';' i1 ),p,s) ) . Nsave ) by A13,SCMFSA_2:63
.= ( ( Exec (i1,( Exec (i0,( Initialized s )) )) ) . Nsave ) by SCMFSA6C:8
.= ( ( Exec (i0,( Initialized s )) ) . Nsave ) by A15,SCMFSA_2:65
.= ( ( Initialized s ) . N ) by SCMFSA_2:63
.= ( s . N ) by SCMFSA6C:3;
A23: (i02 is_halting_on ( Initialized s ),p & i02 is_closed_on ( Initialized s ),p) by SCMFSA7B:18,SCMFSA7B:19;
reconsider i02 as  good (Program of ( SCM+FSA ));
A24: ( s1 . next ) = ( ( Exec (i2,( IExec (( i0 ';' i1 ),p,s) )) ) . next ) by SCMFSA6C:6
.= ( ( IExec (( i0 ';' i1 ),p,s) ) . ( intloc ( 0 ) ) ) by SCMFSA_2:63
.= ( ( Exec (i1,( Exec (i0,( Initialized s )) )) ) . ( intloc ( 0 ) ) ) by SCMFSA6C:8
.= ( ( Exec (i0,( Initialized s )) ) . ( intloc ( 0 ) ) ) by SCMFSA_2:65
.= ( ( Initialized s ) . ( intloc ( 0 ) ) ) by SCMFSA_2:63
.= ( Fib ( ( 0 ) + 1 ) ) by PRE_FF:1,SCMFSA6A:38;
A25: ( s1 . ( intloc ( 0 ) ) ) = ( ( Exec (i2,( IExec (( i0 ';' i1 ),p,s) )) ) . ( intloc ( 0 ) ) ) by SCMFSA6C:6
.= ( ( IExec (( i0 ';' i1 ),p,s) ) . ( intloc ( 0 ) ) ) by SCMFSA_2:63
.= ( ( Exec (i1,( Exec (i0,( Initialized s )) )) ) . ( intloc ( 0 ) ) ) by SCMFSA6C:8
.= ( ( Exec (i0,( Initialized s )) ) . ( intloc ( 0 ) ) ) by SCMFSA_2:65
.= ( ( Initialized s ) . ( intloc ( 0 ) ) ) by SCMFSA_2:63
.= 1 by SCMFSA6A:38;
then A26: I3 is_closed_on s1,p by CKB30:1;
A27: ( s1 . result ) = ( ( Exec (i2,( IExec (( i0 ';' i1 ),p,s) )) ) . result ) by SCMFSA6C:6
.= ( ( IExec (( i0 ';' i1 ),p,s) ) . result ) by A16,SCMFSA_2:63
.= ( ( Exec (i1,( Exec (i0,( Initialized s )) )) ) . result ) by SCMFSA6C:8
.= ( ( ( Exec (i0,( Initialized s )) ) . result ) - ( ( Exec (i0,( Initialized s )) ) . result ) ) by SCMFSA_2:65
.= ( Fib ( 0 ) ) by PRE_FF:1;
A28: P[ ( 0 ) ]
proof
assume ( 0 ) <= ( s1 . N );
A29: ( ( ST . ( 0 ) ) | UIFS ) = ( s1 | UIFS ) by A25,CKB25:1;
hence ( ( ST . ( 0 ) ) . result ) = ( Fib ( 0 ) ) by A14,A27,CKB7:1;
thus thesis by A12,A24,A29,CKB7:1;
end;
A30: (for n being (Element of ( NAT )) holds P[ n ]) from NAT_1:sch 1(A28,A17);
A31: I3 is_halting_on s1,p by A25,CKB30:1;
then A32: (I3 is_closed_on ( Initialized s1 ),p & I3 is_halting_on ( Initialized s1 ),p) by A25,A26,CKB5:1;
A33: ( i02 ';' I3 ) is_closed_on ( Initialized s ),p by A26,A23,SFMASTR1:2;
hence ( ( IExec (( Fib-macro (N,result) ),p,s) ) . result ) = ( ( Exec (i4,( IExec (( i02 ';' I3 ),p,s) )) ) . result ) by A26,A31,A23,SFMASTR1:3,SFMASTR1:11
.= ( ( IExec (( i02 ';' I3 ),p,s) ) . result ) by A1,SCMFSA_2:63
.= ( ( IExec (I3,p,s1) ) . result ) by A26,A31,SFMASTR1:7
.= ( ( ST . n ) . result ) by A10,SCMFSA6A:7
.= ( Fib n ) by A9,A30,A2;
thus ( ( IExec (( Fib-macro (N,result) ),p,s) ) . N ) = ( ( Exec (i4,( IExec (( i02 ';' I3 ),p,s) )) ) . N ) by A26,A31,A23,A33,SFMASTR1:3,SFMASTR1:11
.= ( ( IExec (( i02 ';' I3 ),p,s) ) . Nsave ) by SCMFSA_2:63
.= ( ( IExec (I3,p,s1) ) . Nsave ) by A26,A31,SFMASTR1:7
.= ( s . N ) by A7,A22,A32,CKB3:1;
end;
