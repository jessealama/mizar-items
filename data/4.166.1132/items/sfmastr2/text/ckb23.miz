environ
vocabularies NUMBERS,FSM_1,SCMFSA_2,SF_MASTR,AMI_1,SCMFSA7B,SUBSET_1,XBOOLE_0,CARD_1,UNIALG_2,SCMFSA6B,FUNCT_1,FUNCT_4,SCMFSA6A,TARSKI,RELAT_1,ARYTM_3,GRAPHSP,MSUALG_1,SFMASTR1,TURING_1,SCMFSA_9,AMI_3,CARD_3,XXREAL_0,ARYTM_1,SCMFSA9A,COMPLEX1,AOFA_I00,PRE_FF,SFMASTR2,NAT_1,SCMNORM,SCMFSA6C,FUNCOP_1,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,INT_2,XXREAL_0,RELAT_1,FUNCT_1,FUNCT_2,FUNCT_4,PBOOLE,PRE_FF,CARD_3,FUNCOP_1,STRUCT_0,MEMSTR_0,AMISTD_1,COMPOS_1,EXTPRO_1,SCMFSA_2,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA_9,SFMASTR1,SCMFSA9A,NAT_1,CKB8,CKB9,CKB10,CKB14,CKB20;
definitions SCMFSA9A,SUBSET_1,SCMFSA6A,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB8,CKB9,CKB14,CKB20;
theorems TARSKI,ZFMISC_1,ABSVALUE,NAT_1,INT_1,FUNCT_4,PRE_FF,SCMFSA_2,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA8C,SCMFSA_9,SFMASTR1,SCMFSA9A,XBOOLE_0,XBOOLE_1,XREAL_1,RELAT_1,XXREAL_0,FUNCT_1,PBOOLE,COMPOS_1,EXTPRO_1,PARTFUN1,MEMSTR_0,CARD_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22;
schemes FUNCT_2,NAT_1;
registrations SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_3,SCMFSA_2,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA_9,SFMASTR1,XBOOLE_0,RELAT_1,FUNCT_2,COMPOS_1,EXTPRO_1,PBOOLE,FUNCT_4,FUNCOP_1,STRUCT_0,SCMFSA6A,MEMSTR_0,CKB13;
constructors XXREAL_0,INT_2,PRE_FF,SCMFSA6A,SCMFSA6B,SCMFSA6C,SCMFSA_9,SFMASTR1,SCMFSA9A,RELSET_1,PRE_POLY,PBOOLE,SCMFSA8A,SCMFSA7B,AMISTD_2,AMISTD_1,SCMFSA_7,FUNCT_4,MEMSTR_0,CKB8,CKB9,CKB14,CKB20;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve s for (State of ( SCM+FSA ));
reserve p for (Instruction-Sequence of ( SCM+FSA ));
reserve a for Int-Location;
reserve J for  good (Program of ( SCM+FSA ));
reserve k for (Element of ( NAT ));
theorem
Th17: (((( s . ( intloc ( 0 ) ) ) = 1 or a is  read-write) &  ProperTimesBody a,J,s,p) implies (for k holds (k <= ( s . a ) implies ( ( ( ( StepTimes (a,J,p,s) ) . k ) . ( 1 -stRWNotIn ( { a } \/ ( UsedIntLoc J ) ) ) ) + k ) = ( s . a ))))
proof
set I = J;
assume that
A1: (( s . ( intloc ( 0 ) ) ) = 1 or a is  read-write)
and
A2:  ProperTimesBody a,I,s,p;
set Is = ( Initialized s );
set au = ( 1 -stRWNotIn ( { a } \/ ( UsedIntLoc I ) ) );
set ST = ( StepTimes (a,I,p,s) );
set SW = ( StepWhile>0 (au,( I ';' ( SubFrom (au,( intloc ( 0 ) )) ) ),p,( Exec (( au := a ),Is) )) );
defpred X[ Nat ]
 means
($1 <= ( s . a ) implies ( ( ( ( StepTimes (a,I,p,s) ) . $1 ) . au ) + $1 ) = ( s . a ));
A3: (for k being (Element of ( NAT )) holds (X[ k ] implies X[ ( k + 1 ) ]))
proof
(not au in ( { a } \/ ( UsedIntLoc I ) )) by SFMASTR1:20;
then A4: (not au in ( UsedIntLoc I )) by XBOOLE_0:def 3;
let k being (Element of ( NAT ));
assume that
A5: (k <= ( s . a ) implies ( ( ( ST . k ) . au ) + k ) = ( s . a ))
and
A6: ( k + 1 ) <= ( s . a );
reconsider sa = ( s . a ) as (Element of ( NAT )) by A6,INT_1:3;
A7: k < sa by A6,NAT_1:13;
then A8: ( ( ST . k ) . ( intloc ( 0 ) ) ) = 1 by A2,CKB22:1;
A9:now
assume ( ( SW . k ) . au ) <= ( 0 );
then ( ( ( SW . k ) . au ) + k ) < ( ( s . a ) + ( 0 ) ) by A7,XREAL_1:8;
hence contradiction by A5,A7;
end;
A10: ( Macro ( SubFrom (au,( intloc ( 0 ) )) ) ) is_closed_on ( IExec (I,( p +* ( times* (a,I) ) ),( ST . k )) ),( p +* ( times* (a,I) ) ) by SCMFSA7B:18;
A11: I is_closed_on ( ST . k ),( p +* ( times* (a,I) ) ) by A2,A7,CKB20:def 1;
then A12: I is_closed_on ( Initialized ( ST . k ) ),( p +* ( times* (a,I) ) ) by A8,CKB4:1;
I is_halting_on ( ST . k ),( p +* ( times* (a,I) ) ) by A2,A7,CKB20:def 1;
then A13: I is_halting_on ( Initialized ( ST . k ) ),( p +* ( times* (a,I) ) ) by A8,A11,CKB5:1;
( Macro ( SubFrom (au,( intloc ( 0 ) )) ) ) is_halting_on ( IExec (I,( p +* ( times* (a,I) ) ),( ST . k )) ),( p +* ( times* (a,I) ) ) by SCMFSA7B:19;
then ( I ';' ( SubFrom (au,( intloc ( 0 ) )) ) ) is_halting_on ( Initialized ( ST . k ) ),( p +* ( times* (a,I) ) ) by A12,A13,A10,SFMASTR1:3;
then ( DataPart ( SW . ( k + 1 ) ) ) = ( DataPart ( IExec (( I ';' ( SubFrom (au,( intloc ( 0 ) )) ) ),( p +* ( times* (a,I) ) ),( ST . k )) ) ) by A8,A12,A13,A10,A9,SCMFSA9A:32,SFMASTR1:2;
then ( ( ST . ( k + 1 ) ) . au ) = ( ( IExec (( I ';' ( SubFrom (au,( intloc ( 0 ) )) ) ),( p +* ( times* (a,I) ) ),( ST . k )) ) . au ) by SCMFSA6A:7
.= ( ( Exec (( SubFrom (au,( intloc ( 0 ) )) ),( IExec (I,( p +* ( times* (a,I) ) ),( ST . k )) )) ) . au ) by A12,A13,SFMASTR1:11
.= ( ( ( IExec (I,( p +* ( times* (a,I) ) ),( ST . k )) ) . au ) - ( ( IExec (I,( p +* ( times* (a,I) ) ),( ST . k )) ) . ( intloc ( 0 ) ) ) ) by SCMFSA_2:65
.= ( ( ( IExec (I,( p +* ( times* (a,I) ) ),( ST . k )) ) . au ) - 1 ) by A12,A13,SCMFSA8C:67
.= ( ( ( Initialized ( ST . k ) ) . au ) - 1 ) by A12,A13,A4,CKB1:1
.= ( ( ( ST . k ) . au ) - 1 ) by SCMFSA6C:3;
hence thesis by A5,A7;
end;
A14: (a = ( intloc ( 0 ) ) or a is  read-write) by SF_MASTR:def 5;
A15: X[ ( 0 ) ]
proof
assume ( 0 ) <= ( s . a );
thus ( ( ( ST . ( 0 ) ) . au ) + ( 0 ) ) = ( ( Exec (( au := a ),Is) ) . au ) by SCMFSA_9:def 5
.= ( Is . a ) by SCMFSA_2:63
.= ( s . a ) by A1,A14,SCMFSA6A:38,SCMFSA6C:3;
end;
thus (for k holds X[ k ]) from NAT_1:sch 1(A15,A3);
end;
