environ
vocabularies NUMBERS,FSM_1,SCMFSA_2,SF_MASTR,AMI_1,SCMFSA7B,SUBSET_1,XBOOLE_0,CARD_1,UNIALG_2,SCMFSA6B,FUNCT_1,FUNCT_4,SCMFSA6A,TARSKI,RELAT_1,ARYTM_3,GRAPHSP,MSUALG_1,SFMASTR1,TURING_1,SCMFSA_9,AMI_3,CARD_3,XXREAL_0,ARYTM_1,SCMFSA9A,COMPLEX1,AOFA_I00,PRE_FF,SFMASTR2,NAT_1,SCMNORM,SCMFSA6C,FUNCOP_1,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,INT_2,XXREAL_0,RELAT_1,FUNCT_1,FUNCT_2,FUNCT_4,PBOOLE,PRE_FF,CARD_3,FUNCOP_1,STRUCT_0,MEMSTR_0,AMISTD_1,COMPOS_1,EXTPRO_1,SCMFSA_2,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA_9,SFMASTR1,SCMFSA9A,NAT_1,CKB8,CKB9,CKB10,CKB14,CKB20;
definitions SCMFSA9A,SUBSET_1,SCMFSA6A,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB8,CKB9,CKB14,CKB20;
theorems TARSKI,ZFMISC_1,ABSVALUE,NAT_1,INT_1,FUNCT_4,PRE_FF,SCMFSA_2,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA8C,SCMFSA_9,SFMASTR1,SCMFSA9A,XBOOLE_0,XBOOLE_1,XREAL_1,RELAT_1,XXREAL_0,FUNCT_1,PBOOLE,COMPOS_1,EXTPRO_1,PARTFUN1,MEMSTR_0,CARD_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25;
schemes FUNCT_2,NAT_1;
registrations SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_3,SCMFSA_2,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA_9,SFMASTR1,XBOOLE_0,RELAT_1,FUNCT_2,COMPOS_1,EXTPRO_1,PBOOLE,FUNCT_4,FUNCOP_1,STRUCT_0,SCMFSA6A,MEMSTR_0,CKB13;
constructors XXREAL_0,INT_2,PRE_FF,SCMFSA6A,SCMFSA6B,SCMFSA6C,SCMFSA_9,SFMASTR1,SCMFSA9A,RELSET_1,PRE_POLY,PBOOLE,SCMFSA8A,SCMFSA7B,AMISTD_2,AMISTD_1,SCMFSA_7,FUNCT_4,MEMSTR_0,CKB8,CKB9,CKB14,CKB20;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve s for (State of ( SCM+FSA ));
reserve p for (Instruction-Sequence of ( SCM+FSA ));
reserve a for Int-Location;
reserve J for  good (Program of ( SCM+FSA ));
reserve k for (Element of ( NAT ));
theorem
Th20: ((((( ( ( StepTimes (a,J,p,s) ) . k ) . ( intloc ( 0 ) ) ) = 1 & J is_halting_on ( Initialized ( ( StepTimes (a,J,p,s) ) . k ) ),( p +* ( times* (a,J) ) )) & J is_closed_on ( Initialized ( ( StepTimes (a,J,p,s) ) . k ) ),( p +* ( times* (a,J) ) )) & ( ( ( StepTimes (a,J,p,s) ) . k ) . ( 1 -stRWNotIn ( { a } \/ ( UsedIntLoc J ) ) ) ) > ( 0 )) implies ( ( ( StepTimes (a,J,p,s) ) . ( k + 1 ) ) | ( ( UsedIntLoc J ) \/ ( FinSeq-Locations ) ) ) = ( ( IExec (J,( p +* ( times* (a,J) ) ),( ( StepTimes (a,J,p,s) ) . k )) ) | ( ( UsedIntLoc J ) \/ ( FinSeq-Locations ) ) ))
proof
set UFLI = ( FinSeq-Locations );
set I = J;
set ST = ( StepTimes (a,I,p,s) );
set au = ( 1 -stRWNotIn ( { a } \/ ( UsedIntLoc I ) ) );
set SW = ( StepWhile>0 (au,( I ';' ( SubFrom (au,( intloc ( 0 ) )) ) ),p,( Exec (( au := a ),( Initialized s )) )) );
set UILI = ( UsedIntLoc I );
assume that
A1: ( ( ST . k ) . ( intloc ( 0 ) ) ) = 1
and
A2: (I is_halting_on ( Initialized ( ST . k ) ),( p +* ( times* (a,I) ) ) & I is_closed_on ( Initialized ( ST . k ) ),( p +* ( times* (a,I) ) ))
and
A3: ( ( ST . k ) . au ) > ( 0 );
A4: ( Macro ( SubFrom (au,( intloc ( 0 ) )) ) ) is_closed_on ( IExec (I,( p +* ( times* (a,I) ) ),( ST . k )) ),( p +* ( times* (a,I) ) ) by SCMFSA7B:18;
( Macro ( SubFrom (au,( intloc ( 0 ) )) ) ) is_halting_on ( IExec (I,( p +* ( times* (a,I) ) ),( ST . k )) ),( p +* ( times* (a,I) ) ) by SCMFSA7B:19;
then ( I ';' ( SubFrom (au,( intloc ( 0 ) )) ) ) is_halting_on ( Initialized ( ST . k ) ),( p +* ( times* (a,I) ) ) by A2,A4,SFMASTR1:3;
then A5: ( DataPart ( SW . ( k + 1 ) ) ) = ( DataPart ( IExec (( I ';' ( SubFrom (au,( intloc ( 0 ) )) ) ),( p +* ( times* (a,I) ) ),( ST . k )) ) ) by A1,A2,A3,A4,SCMFSA9A:32,SFMASTR1:2;
A6:now
let x being Int-Location;
A7: (not au in ( { a } \/ UILI )) by SFMASTR1:20;
assume x in UILI;
then A8: au <> x by A7,XBOOLE_0:def 3;
thus ( ( ST . ( k + 1 ) ) . x ) = ( ( IExec (( I ';' ( SubFrom (au,( intloc ( 0 ) )) ) ),( p +* ( times* (a,I) ) ),( ST . k )) ) . x ) by A5,SCMFSA6A:7
.= ( ( Exec (( SubFrom (au,( intloc ( 0 ) )) ),( IExec (I,( p +* ( times* (a,I) ) ),( ST . k )) )) ) . x ) by A2,SFMASTR1:11
.= ( ( IExec (I,( p +* ( times* (a,I) ) ),( ST . k )) ) . x ) by A8,SCMFSA_2:65;
end;
now
let x being FinSeq-Location;
thus ( ( ST . ( k + 1 ) ) . x ) = ( ( IExec (( I ';' ( SubFrom (au,( intloc ( 0 ) )) ) ),( p +* ( times* (a,I) ) ),( ST . k )) ) . x ) by A5,SCMFSA6A:7
.= ( ( Exec (( SubFrom (au,( intloc ( 0 ) )) ),( IExec (I,( p +* ( times* (a,I) ) ),( ST . k )) )) ) . x ) by A2,SFMASTR1:12
.= ( ( IExec (I,( p +* ( times* (a,I) ) ),( ST . k )) ) . x ) by SCMFSA_2:65;
end;
hence thesis by A6,CKB7:1;
end;
