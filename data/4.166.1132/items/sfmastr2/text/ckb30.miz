environ
vocabularies NUMBERS,FSM_1,SCMFSA_2,SF_MASTR,AMI_1,SCMFSA7B,SUBSET_1,XBOOLE_0,CARD_1,UNIALG_2,SCMFSA6B,FUNCT_1,FUNCT_4,SCMFSA6A,TARSKI,RELAT_1,ARYTM_3,GRAPHSP,MSUALG_1,SFMASTR1,TURING_1,SCMFSA_9,AMI_3,CARD_3,XXREAL_0,ARYTM_1,SCMFSA9A,COMPLEX1,AOFA_I00,PRE_FF,SFMASTR2,NAT_1,SCMNORM,SCMFSA6C,FUNCOP_1,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,INT_2,XXREAL_0,RELAT_1,FUNCT_1,FUNCT_2,FUNCT_4,PBOOLE,PRE_FF,CARD_3,FUNCOP_1,STRUCT_0,MEMSTR_0,AMISTD_1,COMPOS_1,EXTPRO_1,SCMFSA_2,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA_9,SFMASTR1,SCMFSA9A,NAT_1,CKB8,CKB9,CKB10,CKB14,CKB20;
definitions SCMFSA9A,SUBSET_1,SCMFSA6A,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB8,CKB9,CKB14,CKB20;
theorems TARSKI,ZFMISC_1,ABSVALUE,NAT_1,INT_1,FUNCT_4,PRE_FF,SCMFSA_2,SCMFSA6A,SCMFSA6B,SF_MASTR,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA8B,SCMFSA8C,SCMFSA_9,SFMASTR1,SCMFSA9A,XBOOLE_0,XBOOLE_1,XREAL_1,RELAT_1,XXREAL_0,FUNCT_1,PBOOLE,COMPOS_1,EXTPRO_1,PARTFUN1,MEMSTR_0,CARD_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
schemes FUNCT_2,NAT_1;
registrations SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_3,SCMFSA_2,SF_MASTR,SCMFSA6B,SCMFSA6C,SCMFSA7B,SCMFSA8A,SCMFSA_9,SFMASTR1,XBOOLE_0,RELAT_1,FUNCT_2,COMPOS_1,EXTPRO_1,PBOOLE,FUNCT_4,FUNCOP_1,STRUCT_0,SCMFSA6A,MEMSTR_0,CKB13;
constructors XXREAL_0,INT_2,PRE_FF,SCMFSA6A,SCMFSA6B,SCMFSA6C,SCMFSA_9,SFMASTR1,SCMFSA9A,RELSET_1,PRE_POLY,PBOOLE,SCMFSA8A,SCMFSA7B,AMISTD_2,AMISTD_1,SCMFSA_7,FUNCT_4,MEMSTR_0,CKB8,CKB9,CKB14,CKB20;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve s for (State of ( SCM+FSA ));
reserve p for (Instruction-Sequence of ( SCM+FSA ));
reserve a for Int-Location;
reserve f for FinSeq-Location;
reserve J for  good (Program of ( SCM+FSA ));
reserve k for (Element of ( NAT ));
theorem
Th24: ((( s . ( intloc ( 0 ) ) ) = 1 & ( ProperTimesBody a,J,s,p or J is  parahalting)) implies (( times (a,J) ) is_closed_on s,p & ( times (a,J) ) is_halting_on s,p))
proof
set I = J;
assume A1: ( s . ( intloc ( 0 ) ) ) = 1;
set taI = ( times (a,I) );
set ST = ( StepTimes (a,I,p,s) );
set au = ( 1 -stRWNotIn ( { a } \/ ( UsedIntLoc I ) ) );
set ISu = ( I ';' ( SubFrom (au,( intloc ( 0 ) )) ) );
set WH = ( while>0 (au,ISu) );
set s1 = ( Exec (( au := a ),( Initialized s )) );
set Is1 = ( Initialized s1 );
set SW = ( StepWhile>0 (au,ISu,p,s1) );
set ISW = ( StepWhile>0 (au,ISu,p,Is1) );
A2: ST = SW;
A3: (s1 = ( IExec (( Macro ( au := a ) ),p,s) ) & ( Macro ( au := a ) ) is_closed_on ( Initialized s ),p) by SCMFSA6C:5,SCMFSA7B:18;
B3: ( Macro ( au := a ) ) is_halting_on ( Initialized s ),p by SCMFSA7B:19;
( s1 . ( intloc ( 0 ) ) ) = ( ( Initialized s ) . ( intloc ( 0 ) ) ) by SCMFSA_2:63
.= 1 by SCMFSA6A:38;
then A4: ( DataPart Is1 ) = ( DataPart s1 ) by SCMFSA8C:7;
assume A5: ( ProperTimesBody a,I,s,p or I is  parahalting);
then A6:  ProperTimesBody a,I,s,p by CKB21:1;
A7: ( Macro ( au := a ) ) is_halting_on ( Initialized s ),p by SCMFSA7B:19;
per cases ;
suppose A8: ( s . a ) < ( 0 );

A9: (a = ( intloc ( 0 ) ) or a is  read-write) by SF_MASTR:def 5;
A10: ( s1 . au ) = ( ( Initialized s ) . a ) by SCMFSA_2:63
.= ( s . a ) by A1,A9,SCMFSA6A:38,SCMFSA6C:3;
then A11: WH is_closed_on s1,p by A8,SCMFSA_9:38;
then A12: taI is_closed_on ( Initialized s ),p by A3,B3,SFMASTR1:2;
hence ( times (a,I) ) is_closed_on s,p by A1,CKB4:1;
WH is_halting_on s1,p by A8,A10,SCMFSA_9:38;
then taI is_halting_on ( Initialized s ),p by A3,A7,A11,SFMASTR1:3;
hence thesis by A1,A12,CKB5:1;
end;
suppose A13: ( 0 ) <= ( s . a );

A14:  ProperBodyWhile>0 au,ISu,s1,p
proof
let k being (Element of ( NAT ));
assume ( ( SW . k ) . au ) > ( 0 );
then A15: k < ( s . a ) by A1,A6,A2,A13,CKB24:1;
then A16: ( ( ST . k ) . ( intloc ( 0 ) ) ) = 1 by A5,CKB21:1,CKB22:1;
then A17: ( DataPart ( ST . k ) ) = ( DataPart ( Initialized ( ST . k ) ) ) by SCMFSA8C:7;
A18: I is_closed_on ( ST . k ),( p +* ( times* (a,I) ) ) by A6,A15,CKB20:def 1;
then A19: I is_closed_on ( Initialized ( ST . k ) ),( p +* ( times* (a,I) ) ) by A16,CKB4:1;
I is_halting_on ( ST . k ),( p +* ( times* (a,I) ) ) by A6,A15,CKB20:def 1;
then A20: I is_halting_on ( Initialized ( ST . k ) ),( p +* ( times* (a,I) ) ) by A18,A16,CKB5:1;
A21: ( Macro ( SubFrom (au,( intloc ( 0 ) )) ) ) is_closed_on ( IExec (I,( p +* ( times* (a,I) ) ),( ST . k )) ),( p +* ( times* (a,I) ) ) by SCMFSA7B:18;
then A22: ISu is_closed_on ( Initialized ( ST . k ) ),( p +* ( times* (a,I) ) ) by A19,A20,SFMASTR1:2;
hence ISu is_closed_on ( SW . k ),( p +* WH ) by A17,SCMFSA8B:3;
( Macro ( SubFrom (au,( intloc ( 0 ) )) ) ) is_halting_on ( IExec (I,( p +* ( times* (a,I) ) ),( ST . k )) ),( p +* ( times* (a,I) ) ) by SCMFSA7B:19;
then ISu is_halting_on ( Initialized ( ST . k ) ),( p +* ( times* (a,I) ) ) by A19,A20,A21,SFMASTR1:3;
hence thesis by A17,A22,SCMFSA8B:5;
end;
A23:  WithVariantWhile>0 au,ISu,Is1,p
proof
reconsider sa = ( s . a ) as (Element of ( NAT )) by A13,INT_1:3;
deffunc U((State of ( SCM+FSA ))) = ( abs ( $1 . au ) );
consider f being (Function of ( product (the Object-Kind of ( SCM+FSA )) ),( NAT )) such that A24: (for x being (Element of ( product (the Object-Kind of ( SCM+FSA )) )) holds ( f . x ) = U(x)) from FUNCT_2:sch 4;
A25: (for x being (State of ( SCM+FSA )) holds ( f . x ) = U(x))
proof
let x being (State of ( SCM+FSA ));
reconsider x as (Element of ( product (the Object-Kind of ( SCM+FSA )) )) by CARD_3:107;
( f . x ) = U(x) by A24;
hence thesis;
end;
take f;
let k being (Element of ( NAT ));
( DataPart ( ISW . k ) ) = ( DataPart ( SW . k ) ) by A4,A14,SCMFSA9A:34;
then A26: ( ( ISW . k ) . au ) = ( ( SW . k ) . au ) by SCMFSA6A:7;
( DataPart ( ISW . ( k + 1 ) ) ) = ( DataPart ( SW . ( k + 1 ) ) ) by A4,A14,SCMFSA9A:34;
then A27: ( ( ISW . ( k + 1 ) ) . au ) = ( ( SW . ( k + 1 ) ) . au ) by SCMFSA6A:7;
per cases ;
suppose A28: k < ( s . a );

then A29: ( k - k ) < ( ( s . a ) - k ) by XREAL_1:9;
A30: ( ( ( ST . k ) . au ) + k ) = ( s . a ) by A1,A6,A28,CKB23:1;
A31: ( k + 1 ) <= sa by A28,NAT_1:13;
then A32: ( ( k + 1 ) - ( k + 1 ) ) <= ( ( s . a ) - ( k + 1 ) ) by XREAL_1:9;
A33: ( ( ( ST . ( k + 1 ) ) . au ) + ( k + 1 ) ) = ( s . a ) by A1,A6,A31,CKB23:1;
then A34: ( s . a ) = ( ( ( ( ST . ( k + 1 ) ) . au ) + 1 ) + k );
A35: ( f . ( ISW . ( k + 1 ) ) ) = ( abs ( ( ISW . ( k + 1 ) ) . au ) ) by A25
.= ( ( SW . ( k + 1 ) ) . au ) by A27,A33,A32,ABSVALUE:def 1;
( f . ( ISW . k ) ) = ( abs ( ( ISW . k ) . au ) ) by A25
.= ( ( SW . k ) . au ) by A26,A30,A29,ABSVALUE:def 1;
hence thesis by A30,A34,A35,NAT_1:13;
end;
suppose k >= ( s . a );

hence thesis by A1,A6,A2,A13,A26,CKB24:1;
end;
end;
A36:  ProperBodyWhile>0 au,ISu,Is1,p
proof
let k being (Element of ( NAT ));
assume A37: ( ( ISW . k ) . au ) > ( 0 );
A38: ( DataPart ( ISW . k ) ) = ( DataPart ( SW . k ) ) by A4,A14,SCMFSA9A:34;
then A39: ( ( SW . k ) . au ) = ( ( ISW . k ) . au ) by SCMFSA6A:7;
then A40: ISu is_closed_on ( SW . k ),( p +* ( while>0 (au,ISu) ) ) by A14,A37,SCMFSA9A:def 4;
hence ISu is_closed_on ( ISW . k ),( p +* WH ) by A38,SCMFSA8B:3;
ISu is_halting_on ( SW . k ),( p +* ( while>0 (au,ISu) ) ) by A14,A37,A39,SCMFSA9A:def 4;
hence thesis by A38,A40,SCMFSA8B:5;
end;
then A41: WH is_closed_on s1,p by A4,A23,SCMFSA8B:3,SCMFSA9A:27;
A42: taI is_closed_on ( Initialized s ),p by A3,A41,B3,SFMASTR1:2;
hence ( times (a,I) ) is_closed_on s,p by A1,CKB4:1;
(WH is_closed_on Is1,p & WH is_halting_on Is1,p) by A36,A23,SCMFSA9A:27;
then WH is_halting_on s1,p by A4,SCMFSA8B:5;
then taI is_halting_on ( Initialized s ),p by A3,A7,A41,SFMASTR1:3;
hence thesis by A1,A42,CKB5:1;
end;
end;
