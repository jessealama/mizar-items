environ
vocabularies STRUCT_0,SUBSET_1,PRE_TOPC,XBOOLE_0,RCOMP_1,TARSKI,TOPS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,STRUCT_0,PRE_TOPC;
definitions TARSKI,XBOOLE_0,PRE_TOPC,SUBSET_1,STRUCT_0;
theorems PRE_TOPC,TARSKI,SUBSET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB4,CKB6,CKB9,CKB10,CKB11,CKB14,CKB15,CKB18,CKB19;
registrations XBOOLE_0,SUBSET_1,STRUCT_0,PRE_TOPC,CKB3,CKB5,CKB7,CKB8,CKB12,CKB13,CKB16,CKB17;
constructors SETFAM_1,PRE_TOPC;
requirements BOOLE,SUBSET;
begin
reserve GX for TopStruct;
reserve x for set;
reserve R for (Subset of GX);
reserve T for (Subset of GX);
theorem
Th39: (for GX being non  empty TopSpace holds (for R being (Subset of GX) holds (for p being (Point of GX) holds (p in ( Cl R ) iff (for T being (Subset of GX) holds ((T is  open & p in T) implies R meets T))))))
proof
let GX being non  empty TopSpace;
let R being (Subset of GX);
let p being (Point of GX);
hereby
assume A1: p in ( Cl R );
given T being (Subset of GX) such that
A2: T is  open
and
A3: p in T
and
A4: R misses T;

A5: ( ( R ` ) \/ ( T ` ) ) = ( ( R /\ T ) ` ) by XBOOLE_1:54;
A6: ( R /\ T ) = ( {} GX ) by A4,XBOOLE_0:def 7;
A7: R c= ( T ` )
proof
let x;
assume A8: x in R;
then (x in ( R ` ) or x in ( T ` )) by A5,A6,XBOOLE_0:def 3;
hence thesis by A8,XBOOLE_0:def 5;
end;
( Cl ( T ` ) ) = ( T ` ) by A2,PRE_TOPC:22;
then ( Cl R ) c= ( T ` ) by A7,PRE_TOPC:19;
hence contradiction by A1,A3,XBOOLE_0:def 5;
end;
assume A9: (for T being (Subset of GX) holds ((T is  open & p in T) implies R meets T));
assume (not p in ( Cl R ));
then p in ( ( Cl R ) ` ) by SUBSET_1:29;
then A10: R meets ( ( Cl R ) ` ) by A9;
R misses ( R ` ) by XBOOLE_1:79;
then A11: ( R /\ ( R ` ) ) = ( {} ) by XBOOLE_0:def 7;
R c= ( Cl R ) by PRE_TOPC:18;
then ( ( Cl R ) ` ) c= ( R ` ) by SUBSET_1:12;
then ( R /\ ( ( Cl R ) ` ) ) = ( {} ) by A11,XBOOLE_1:3,XBOOLE_1:26;
hence contradiction by A10,XBOOLE_0:def 7;
end;
