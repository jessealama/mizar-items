environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_2,MARGREL1,CARD_1,ARYTM_3,INT_2,NAT_1,RELAT_1,XXREAL_0,INT_1,ARYTM_1,GRCAT_1,XBOOLEAN,FINSEQ_1,PARTFUN1,FUNCT_1,POWER,BINARI_3,FUNCOP_1,XBOOLE_0,BINARITH,MATRIX_1,INCSP_1,ORDINAL4,FUNCT_7,FUNCT_2,TARSKI,TREES_1,IDEA_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,INT_2,NAT_1,NAT_D,MARGREL1,RELAT_1,FUNCT_1,FUNCOP_1,MATRIX_1,PARTFUN1,FUNCT_2,FUNCT_7,SERIES_1,FINSEQ_1,FINSEQ_2,RECDEF_1,BINARITH,BINARI_3,XXREAL_0,CKB8,CKB9,CKB12,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41,CKB52,CKB56,CKB57,CKB58,CKB60,CKB62,CKB63,CKB64,CKB65;
definitions TARSKI,FINSEQ_2,XBOOLEAN,CKB8,CKB9,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41,CKB52,CKB56,CKB57,CKB58,CKB60,CKB62,CKB63,CKB64,CKB65;
theorems NAT_1,NAT_2,NEWTON,INT_1,INT_2,FINSEQ_1,FINSEQ_2,FUNCT_1,FUNCT_2,FUNCT_7,FUNCOP_1,POWER,EULER_1,EULER_2,BINARITH,BINARI_3,MATRIX_1,RELSET_1,RELAT_1,XBOOLE_1,XREAL_1,XXREAL_0,XBOOLEAN,NAT_D,PARTFUN1,ORDINAL1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB56,CKB57,CKB58,CKB60,CKB62,CKB63,CKB64,CKB65;
schemes FINSEQ_1,FINSEQ_2,NAT_1,FUNCT_2;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,MARGREL1,FUNCT_7,VALUED_0,CARD_1,FINSEQ_2,RELSET_1,CKB53,CKB54,CKB55,CKB59,CKB61;
constructors PARTFUN1,XXREAL_0,NAT_1,NAT_D,SERIES_1,BINARITH,WSIERP_1,FUNCT_7,MATRIX_1,BINARI_3,RECDEF_1,RELSET_1,CKB8,CKB9,CKB12,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41,CKB52,CKB56,CKB57,CKB58,CKB60,CKB62,CKB63,CKB64,CKB65;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve m for (FinSequence of ( NAT ));
reserve k1 for (FinSequence of ( NAT ));
reserve k2 for (FinSequence of ( NAT ));
theorem
Th34: (for n being non empty (Element of ( NAT )) holds (for m holds (for k1 holds (for k2 holds ((((((((((((((((( ( 2 to_power n ) + 1 ) is  prime & ( len m ) >= 4) & ( m . 1 ) is_expressible_by n) & ( m . 2 ) is_expressible_by n) & ( m . 3 ) is_expressible_by n) & ( m . 4 ) is_expressible_by n) & ( k1 . 1 ) is_expressible_by n) & ( k1 . 2 ) is_expressible_by n) & ( k1 . 3 ) is_expressible_by n) & ( k1 . 4 ) is_expressible_by n) & ( k2 . 1 ) = ( INV_MOD (( k1 . 1 ),n) )) & ( k2 . 2 ) = ( NEG_MOD (( k1 . 3 ),n) )) & ( k2 . 3 ) = ( NEG_MOD (( k1 . 2 ),n) )) & ( k2 . 4 ) = ( INV_MOD (( k1 . 4 ),n) )) & ( k2 . 5 ) = ( k1 . 5 )) & ( k2 . 6 ) = ( k1 . 6 )) implies ( ( ( IDEA_Q (k2,n) ) * ( IDEA_P (k1,n) ) ) . m ) = m)))))
proof
let n being non empty (Element of ( NAT ));
let m;
let k1;
let k2;
assume that
A1: ( ( 2 to_power n ) + 1 ) is  prime
and
A2: ( len m ) >= 4
and
A3: (((( m . 1 ) is_expressible_by n & ( m . 2 ) is_expressible_by n) & ( m . 3 ) is_expressible_by n) & ( m . 4 ) is_expressible_by n)
and
A4: (((((((( k1 . 1 ) is_expressible_by n & ( k1 . 2 ) is_expressible_by n) & ( k1 . 3 ) is_expressible_by n) & ( k1 . 4 ) is_expressible_by n) & ( k2 . 1 ) = ( INV_MOD (( k1 . 1 ),n) )) & ( k2 . 2 ) = ( NEG_MOD (( k1 . 3 ),n) )) & ( k2 . 3 ) = ( NEG_MOD (( k1 . 2 ),n) )) & ( k2 . 4 ) = ( INV_MOD (( k1 . 4 ),n) ))
and
A5: (( k2 . 5 ) = ( k1 . 5 ) & ( k2 . 6 ) = ( k1 . 6 ));
A6: (( ( IDEAoperationB (m,k1,n) ) . 2 ) is_expressible_by n & ( ( IDEAoperationB (m,k1,n) ) . 3 ) is_expressible_by n) by A2,CKB43:1;
A7: ( ( IDEAoperationB (m,k1,n) ) . 4 ) is_expressible_by n by A2,CKB43:1;
A8: (( len ( IDEAoperationB (m,k1,n) ) ) >= 4 & ( ( IDEAoperationB (m,k1,n) ) . 1 ) is_expressible_by n) by A2,CKB40:def 1,CKB43:1;
( dom ( IDEA_P (k1,n) ) ) = ( MESSAGES ) by FUNCT_2:def 1;
then m in ( dom ( IDEA_P (k1,n) ) ) by FINSEQ_1:def 11;
then ( ( ( IDEA_Q (k2,n) ) * ( IDEA_P (k1,n) ) ) . m ) = ( ( IDEA_Q (k2,n) ) . ( ( IDEA_P (k1,n) ) . m ) ) by FUNCT_1:13
.= ( ( IDEA_Q (k2,n) ) . ( IDEAoperationA (( IDEAoperationC ( IDEAoperationB (m,k1,n) ) ),k1,n) ) ) by CKB56:def 1
.= ( IDEAoperationB (( IDEAoperationA (( IDEAoperationC ( IDEAoperationA (( IDEAoperationC ( IDEAoperationB (m,k1,n) ) ),k1,n) ) ),k2,n) ),k2,n) ) by CKB57:def 1
.= ( IDEAoperationB (( IDEAoperationB (m,k1,n) ),k2,n) ) by A1,A4,A8,A6,A7,CKB49:1
.= m by A2,A3,A5,CKB50:1;
hence thesis;
end;
