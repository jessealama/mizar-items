environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_2,MARGREL1,CARD_1,ARYTM_3,INT_2,NAT_1,RELAT_1,XXREAL_0,INT_1,ARYTM_1,GRCAT_1,XBOOLEAN,FINSEQ_1,PARTFUN1,FUNCT_1,POWER,BINARI_3,FUNCOP_1,XBOOLE_0,BINARITH,MATRIX_1,INCSP_1,ORDINAL4,FUNCT_7,FUNCT_2,TARSKI,TREES_1,IDEA_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,INT_2,NAT_1,NAT_D,MARGREL1,RELAT_1,FUNCT_1,FUNCOP_1,MATRIX_1,PARTFUN1,FUNCT_2,FUNCT_7,SERIES_1,FINSEQ_1,FINSEQ_2,RECDEF_1,BINARITH,BINARI_3,XXREAL_0,CKB8;
definitions TARSKI,FINSEQ_2,XBOOLEAN,CKB8;
theorems NAT_1,NAT_2,NEWTON,INT_1,INT_2,FINSEQ_1,FINSEQ_2,FUNCT_1,FUNCT_2,FUNCT_7,FUNCOP_1,POWER,EULER_1,EULER_2,BINARITH,BINARI_3,MATRIX_1,RELSET_1,RELAT_1,XBOOLE_1,XREAL_1,XXREAL_0,XBOOLEAN,NAT_D,PARTFUN1,ORDINAL1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8;
schemes FINSEQ_1,FINSEQ_2,NAT_1,FUNCT_2;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,MARGREL1,FUNCT_7,VALUED_0,CARD_1,FINSEQ_2,RELSET_1;
constructors PARTFUN1,XXREAL_0,NAT_1,NAT_D,SERIES_1,BINARITH,WSIERP_1,FUNCT_7,MATRIX_1,BINARI_3,RECDEF_1,RELSET_1,CKB8;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve i for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
definition
let n;
let x being (Tuple of n,( BOOLEAN ));
let y being (Tuple of n,( BOOLEAN ));
func x 'xor' y -> (Tuple of n,( BOOLEAN ))
means
:Def2: (for i holds (i in ( Seg n ) implies ( it /. i ) = ( ( x /. i ) 'xor' ( y /. i ) )));
existence
proof
deffunc F(Nat) = ( ( x /. $1 ) 'xor' ( y /. $1 ) );
consider z being (FinSequence of ( BOOLEAN )) such that A1: ( len z ) = n and A2: (for j being Nat holds (j in ( dom z ) implies ( z . j ) = F(j))) from FINSEQ_2:sch 1;
A3: ( dom z ) = ( Seg n ) by A1,FINSEQ_1:def 3;
z is (Element of ( n -tuples_on ( BOOLEAN ) )) by A1,FINSEQ_2:92;
then reconsider z as (Tuple of n,( BOOLEAN ));
take z;
let i;
assume A4: i in ( Seg n );
then i in ( dom z ) by A1,FINSEQ_1:def 3;
hence ( z /. i ) = ( z . i ) by PARTFUN1:def 6
.= ( ( x /. i ) 'xor' ( y /. i ) ) by A2,A3,A4;
end;
uniqueness
proof
let z1 being (Tuple of n,( BOOLEAN )),z2 being (Tuple of n,( BOOLEAN ));
assume that
A5: (for i holds (i in ( Seg n ) implies ( z1 /. i ) = ( ( x /. i ) 'xor' ( y /. i ) )))
and
A6: (for i holds (i in ( Seg n ) implies ( z2 /. i ) = ( ( x /. i ) 'xor' ( y /. i ) )));
A7: ( len z1 ) = n by CARD_1:def 7;
then A8: ( dom z1 ) = ( Seg n ) by FINSEQ_1:def 3;
A9: ( len z2 ) = n by CARD_1:def 7;
now
let j being Nat;
assume A10: j in ( dom z1 );
then A11: j in ( dom z2 ) by A9,A8,FINSEQ_1:def 3;
thus ( z1 . j ) = ( z1 /. j ) by A10,PARTFUN1:def 6
.= ( ( x /. j ) 'xor' ( y /. j ) ) by A5,A8,A10
.= ( z2 /. j ) by A6,A8,A10
.= ( z2 . j ) by A11,PARTFUN1:def 6;
end;
hence thesis by A7,A9,FINSEQ_2:9;
end;
end;
