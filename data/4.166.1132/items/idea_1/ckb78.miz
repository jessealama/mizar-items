environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_2,MARGREL1,CARD_1,ARYTM_3,INT_2,NAT_1,RELAT_1,XXREAL_0,INT_1,ARYTM_1,GRCAT_1,XBOOLEAN,FINSEQ_1,PARTFUN1,FUNCT_1,POWER,BINARI_3,FUNCOP_1,XBOOLE_0,BINARITH,MATRIX_1,INCSP_1,ORDINAL4,FUNCT_7,FUNCT_2,TARSKI,TREES_1,IDEA_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,INT_2,NAT_1,NAT_D,MARGREL1,RELAT_1,FUNCT_1,FUNCOP_1,MATRIX_1,PARTFUN1,FUNCT_2,FUNCT_7,SERIES_1,FINSEQ_1,FINSEQ_2,RECDEF_1,BINARITH,BINARI_3,XXREAL_0,CKB8,CKB9,CKB12,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41,CKB52,CKB56,CKB57,CKB58,CKB60,CKB62,CKB63,CKB64,CKB65;
definitions TARSKI,FINSEQ_2,XBOOLEAN,CKB8,CKB9,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41,CKB52,CKB56,CKB57,CKB58,CKB60,CKB62,CKB63,CKB64,CKB65;
theorems NAT_1,NAT_2,NEWTON,INT_1,INT_2,FINSEQ_1,FINSEQ_2,FUNCT_1,FUNCT_2,FUNCT_7,FUNCOP_1,POWER,EULER_1,EULER_2,BINARITH,BINARI_3,MATRIX_1,RELSET_1,RELAT_1,XBOOLE_1,XREAL_1,XXREAL_0,XBOOLEAN,NAT_D,PARTFUN1,ORDINAL1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB56,CKB57,CKB58,CKB60,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77;
schemes FINSEQ_1,FINSEQ_2,NAT_1,FUNCT_2;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,MARGREL1,FUNCT_7,VALUED_0,CARD_1,FINSEQ_2,RELSET_1,CKB53,CKB54,CKB55,CKB59,CKB61;
constructors PARTFUN1,XXREAL_0,NAT_1,NAT_D,SERIES_1,BINARITH,WSIERP_1,FUNCT_7,MATRIX_1,BINARI_3,RECDEF_1,RELSET_1,CKB8,CKB9,CKB12,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41,CKB52,CKB56,CKB57,CKB58,CKB60,CKB62,CKB63,CKB64,CKB65;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve m for (FinSequence of ( NAT ));
theorem
Th47: (for n being non empty (Element of ( NAT )) holds (for lk being (Element of ( NAT )) holds (for Key being (Matrix of lk,6,( NAT )) holds (for r being (Element of ( NAT )) holds (for M being (FinSequence of ( NAT )) holds (for m holds ((((((M = ( ( compose (( IDEA_P_F (Key,n,r) ),( MESSAGES )) ) . m ) & ( len m ) >= 4) & ( m . 1 ) is_expressible_by n) & ( m . 2 ) is_expressible_by n) & ( m . 3 ) is_expressible_by n) & ( m . 4 ) is_expressible_by n) implies ((((( len M ) >= 4 & ( M . 1 ) is_expressible_by n) & ( M . 2 ) is_expressible_by n) & ( M . 3 ) is_expressible_by n) & ( M . 4 ) is_expressible_by n))))))))
proof
let n being non empty (Element of ( NAT ));
let lk being (Element of ( NAT ));
let Key being (Matrix of lk,6,( NAT ));
let r being (Element of ( NAT ));
let M being (FinSequence of ( NAT ));
let m;
assume that
A1: M = ( ( compose (( IDEA_P_F (Key,n,r) ),( MESSAGES )) ) . m )
and
A2: ( len m ) >= 4
and
A3: (((( m . 1 ) is_expressible_by n & ( m . 2 ) is_expressible_by n) & ( m . 3 ) is_expressible_by n) & ( m . 4 ) is_expressible_by n);
A4: m in ( MESSAGES ) by FINSEQ_1:def 11;
per cases ;
suppose r = ( 0 );

then ( len ( IDEA_P_F (Key,n,r) ) ) = ( 0 ) by CKB58:def 1;
then ( IDEA_P_F (Key,n,r) ) = ( {} );
then M = ( ( id ( MESSAGES ) ) . m ) by A1,FUNCT_7:39
.= m by A4,FUNCT_1:18;
hence thesis by A2,A3;
end;
suppose A5: r <> ( 0 );

consider r1 being Integer such that A6: r1 = ( r - 1 );
defpred P[ (Element of ( NAT )) ]
 means
(for M being (FinSequence of ( NAT )) holds (M = ( ( compose (( IDEA_P_F (Key,n,$1) ),( MESSAGES )) ) . m ) implies ( len M ) >= 4));
A7: m in ( MESSAGES ) by FINSEQ_1:def 11;
A8: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being (Element of ( NAT ));
A9: ( dom ( compose (( IDEA_P_F (Key,n,k) ),( MESSAGES )) ) ) = ( MESSAGES ) by CKB76:1;
A10: ( rng ( compose (( IDEA_P_F (Key,n,k) ),( MESSAGES )) ) ) c= ( MESSAGES ) by CKB76:1;
then ( rng ( compose (( IDEA_P_F (Key,n,k) ),( MESSAGES )) ) ) c= ( dom ( IDEA_P (( Line (Key,( k + 1 )) ),n) ) ) by FUNCT_2:def 1;
then A11: ( dom ( ( IDEA_P (( Line (Key,( k + 1 )) ),n) ) * ( compose (( IDEA_P_F (Key,n,k) ),( MESSAGES )) ) ) ) = ( MESSAGES ) by A9,RELAT_1:27;
( ( compose (( IDEA_P_F (Key,n,k) ),( MESSAGES )) ) . m ) in ( rng ( compose (( IDEA_P_F (Key,n,k) ),( MESSAGES )) ) ) by A7,A9,FUNCT_1:def 3;
then reconsider M1 = ( ( compose (( IDEA_P_F (Key,n,k) ),( MESSAGES )) ) . m ) as (FinSequence of ( NAT )) by A10,FINSEQ_1:def 11;
assume P[ k ];
then A12: ( len M1 ) >= 4;
let M being (FinSequence of ( NAT ));
assume M = ( ( compose (( IDEA_P_F (Key,n,( k + 1 )) ),( MESSAGES )) ) . m );
then M = ( ( compose (( ( IDEA_P_F (Key,n,k) ) ^ <* ( IDEA_P (( Line (Key,( k + 1 )) ),n) ) *> ),( MESSAGES )) ) . m ) by CKB69:1;
then M = ( ( ( IDEA_P (( Line (Key,( k + 1 )) ),n) ) * ( compose (( IDEA_P_F (Key,n,k) ),( MESSAGES )) ) ) . m ) by FUNCT_7:41;
then M = ( ( IDEA_P (( Line (Key,( k + 1 )) ),n) ) . ( ( compose (( IDEA_P_F (Key,n,k) ),( MESSAGES )) ) . m ) ) by A7,A11,FUNCT_1:12;
hence thesis by A12,CKB75:1;
end;
1 <= r by A5,NAT_1:14;
then ( 1 - 1 ) <= ( r - 1 ) by XREAL_1:9;
then reconsider r1 as (Element of ( NAT )) by A6,INT_1:3;
( dom ( compose (( IDEA_P_F (Key,n,r1) ),( MESSAGES )) ) ) = ( MESSAGES ) by CKB76:1;
then A13: ( ( compose (( IDEA_P_F (Key,n,r1) ),( MESSAGES )) ) . m ) in ( rng ( compose (( IDEA_P_F (Key,n,r1) ),( MESSAGES )) ) ) by A4,FUNCT_1:def 3;
( rng ( compose (( IDEA_P_F (Key,n,r1) ),( MESSAGES )) ) ) c= ( MESSAGES ) by CKB76:1;
then reconsider M1 = ( ( compose (( IDEA_P_F (Key,n,r1) ),( MESSAGES )) ) . m ) as (FinSequence of ( NAT )) by A13,FINSEQ_1:def 11;
A14: P[ ( 0 ) ]
proof
let M being (FinSequence of ( NAT ));
( len ( IDEA_P_F (Key,n,( 0 )) ) ) = ( 0 ) by CKB58:def 1;
then A15: ( IDEA_P_F (Key,n,( 0 )) ) = ( {} );
assume M = ( ( compose (( IDEA_P_F (Key,n,( 0 )) ),( MESSAGES )) ) . m );
then M = ( ( id ( MESSAGES ) ) . m ) by A15,FUNCT_7:39
.= m by A7,FUNCT_1:18;
hence thesis by A2;
end;
(for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A14,A8);
then A16: ( len M1 ) >= 4;
( IDEA_P_F (Key,n,( r1 + 1 )) ) = ( ( IDEA_P_F (Key,n,r1) ) ^ <* ( IDEA_P (( Line (Key,( r1 + 1 )) ),n) ) *> ) by CKB69:1;
then A17: ( compose (( IDEA_P_F (Key,n,r) ),( MESSAGES )) ) = ( ( IDEA_P (( Line (Key,r) ),n) ) * ( compose (( IDEA_P_F (Key,n,r1) ),( MESSAGES )) ) ) by A6,FUNCT_7:41;
then m in ( dom ( ( IDEA_P (( Line (Key,r) ),n) ) * ( compose (( IDEA_P_F (Key,n,r1) ),( MESSAGES )) ) ) ) by A4,CKB76:1;
then M = ( ( IDEA_P (( Line (Key,r) ),n) ) . ( ( compose (( IDEA_P_F (Key,n,r1) ),( MESSAGES )) ) . m ) ) by A1,A17,FUNCT_1:12;
hence thesis by A16,CKB75:1;
end;
end;
