environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_2,MARGREL1,CARD_1,ARYTM_3,INT_2,NAT_1,RELAT_1,XXREAL_0,INT_1,ARYTM_1,GRCAT_1,XBOOLEAN,FINSEQ_1,PARTFUN1,FUNCT_1,POWER,BINARI_3,FUNCOP_1,XBOOLE_0,BINARITH,MATRIX_1,INCSP_1,ORDINAL4,FUNCT_7,FUNCT_2,TARSKI,TREES_1,IDEA_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,INT_2,NAT_1,NAT_D,MARGREL1,RELAT_1,FUNCT_1,FUNCOP_1,MATRIX_1,PARTFUN1,FUNCT_2,FUNCT_7,SERIES_1,FINSEQ_1,FINSEQ_2,RECDEF_1,BINARITH,BINARI_3,XXREAL_0,CKB8,CKB9,CKB12,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41,CKB52,CKB56,CKB57,CKB58;
definitions TARSKI,FINSEQ_2,XBOOLEAN,CKB8,CKB9,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41,CKB52,CKB56,CKB57,CKB58;
theorems NAT_1,NAT_2,NEWTON,INT_1,INT_2,FINSEQ_1,FINSEQ_2,FUNCT_1,FUNCT_2,FUNCT_7,FUNCOP_1,POWER,EULER_1,EULER_2,BINARITH,BINARI_3,MATRIX_1,RELSET_1,RELAT_1,XBOOLE_1,XREAL_1,XXREAL_0,XBOOLEAN,NAT_D,PARTFUN1,ORDINAL1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB56,CKB57,CKB58;
schemes FINSEQ_1,FINSEQ_2,NAT_1,FUNCT_2;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,MARGREL1,FUNCT_7,VALUED_0,CARD_1,FINSEQ_2,RELSET_1,CKB53,CKB54,CKB55,CKB59;
constructors PARTFUN1,XXREAL_0,NAT_1,NAT_D,SERIES_1,BINARITH,WSIERP_1,FUNCT_7,MATRIX_1,BINARI_3,RECDEF_1,RELSET_1,CKB8,CKB9,CKB12,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41,CKB52,CKB56,CKB57,CKB58;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve i for (Element of ( NAT ));
definition
let r being (Element of ( NAT ));
let lk being (Element of ( NAT ));
let n being non empty (Element of ( NAT ));
let Key being (Matrix of lk,6,( NAT ));
func IDEA_Q_F (Key,n,r) -> FinSequence
means
:Def18: (( len it ) = r & (for i holds (i in ( dom it ) implies ( it . i ) = ( IDEA_Q (( Line (Key,( ( r -' i ) + 1 )) ),n) ))));
existence
proof
deffunc F(Nat) = ( IDEA_Q (( Line (Key,( ( r -' $1 ) + 1 )) ),n) );
consider z being FinSequence such that A1: (( len z ) = r & (for k being Nat holds (k in ( dom z ) implies ( z . k ) = F(k)))) from FINSEQ_1:sch 2;
take z;
thus thesis by A1;
end;
uniqueness
proof
let z1 being FinSequence,z2 being FinSequence;
assume that
A2: ( len z1 ) = r
and
A3: (for i being (Element of ( NAT )) holds (i in ( dom z1 ) implies ( z1 . i ) = ( IDEA_Q (( Line (Key,( ( r -' i ) + 1 )) ),n) )))
and
A4: ( len z2 ) = r
and
A5: (for i being (Element of ( NAT )) holds (i in ( dom z2 ) implies ( z2 . i ) = ( IDEA_Q (( Line (Key,( ( r -' i ) + 1 )) ),n) )));
A6:now
let j being Nat;
assume A7: j in ( Seg r );
then A8: j in ( dom z2 ) by A4,FINSEQ_1:def 3;
j in ( dom z1 ) by A2,A7,FINSEQ_1:def 3;
then ( z1 . j ) = ( IDEA_Q (( Line (Key,( ( r -' j ) + 1 )) ),n) ) by A3
.= ( z2 . j ) by A5,A8;
hence ( z1 . j ) = ( z2 . j );
end;
(( Seg r ) = ( dom z1 ) & ( Seg r ) = ( dom z2 )) by A2,A4,FINSEQ_1:def 3;
hence thesis by A6,FINSEQ_1:13;
end;
end;
