environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_2,MARGREL1,CARD_1,ARYTM_3,INT_2,NAT_1,RELAT_1,XXREAL_0,INT_1,ARYTM_1,GRCAT_1,XBOOLEAN,FINSEQ_1,PARTFUN1,FUNCT_1,POWER,BINARI_3,FUNCOP_1,XBOOLE_0,BINARITH,MATRIX_1,INCSP_1,ORDINAL4,FUNCT_7,FUNCT_2,TARSKI,TREES_1,IDEA_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,INT_2,NAT_1,NAT_D,MARGREL1,RELAT_1,FUNCT_1,FUNCOP_1,MATRIX_1,PARTFUN1,FUNCT_2,FUNCT_7,SERIES_1,FINSEQ_1,FINSEQ_2,RECDEF_1,BINARITH,BINARI_3,XXREAL_0,CKB8,CKB9,CKB12,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41,CKB52,CKB56,CKB57,CKB58,CKB60,CKB62,CKB63,CKB64,CKB65;
definitions TARSKI,FINSEQ_2,XBOOLEAN,CKB8,CKB9,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41,CKB52,CKB56,CKB57,CKB58,CKB60,CKB62,CKB63,CKB64,CKB65;
theorems NAT_1,NAT_2,NEWTON,INT_1,INT_2,FINSEQ_1,FINSEQ_2,FUNCT_1,FUNCT_2,FUNCT_7,FUNCOP_1,POWER,EULER_1,EULER_2,BINARITH,BINARI_3,MATRIX_1,RELSET_1,RELAT_1,XBOOLE_1,XREAL_1,XXREAL_0,XBOOLEAN,NAT_D,PARTFUN1,ORDINAL1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB56,CKB57,CKB58,CKB60,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71;
schemes FINSEQ_1,FINSEQ_2,NAT_1,FUNCT_2;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,MARGREL1,FUNCT_7,VALUED_0,CARD_1,FINSEQ_2,RELSET_1,CKB53,CKB54,CKB55,CKB59,CKB61;
constructors PARTFUN1,XXREAL_0,NAT_1,NAT_D,SERIES_1,BINARITH,WSIERP_1,FUNCT_7,MATRIX_1,BINARI_3,RECDEF_1,RELSET_1,CKB8,CKB9,CKB12,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41,CKB52,CKB56,CKB57,CKB58,CKB60,CKB62,CKB63,CKB64,CKB65;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Th40: (for n being non empty (Element of ( NAT )) holds (for lk being (Element of ( NAT )) holds (for Key being (Matrix of lk,6,( NAT )) holds (for k being (Element of ( NAT )) holds ( IDEA_Q_F (Key,n,k) ) is  FuncSeq-like  FuncSeq-like FinSequence))))
proof
let n being non empty (Element of ( NAT ));
let lk being (Element of ( NAT ));
let Key being (Matrix of lk,6,( NAT ));
let k being (Element of ( NAT ));
set p = ( ( Seg ( k + 1 ) ) --> ( MESSAGES ) );
A1: ( dom p ) = ( Seg ( k + 1 ) ) by FUNCOP_1:13;
reconsider p as FinSequence;
A2: (for i being (Element of ( NAT )) holds (i in ( dom ( IDEA_Q_F (Key,n,k) ) ) implies ( ( IDEA_Q_F (Key,n,k) ) . i ) in ( Funcs (( p . i ),( p . ( i + 1 ) )) )))
proof
let i being (Element of ( NAT ));
assume A3: i in ( dom ( IDEA_Q_F (Key,n,k) ) );
then A4: i in ( Seg ( len ( IDEA_Q_F (Key,n,k) ) ) ) by FINSEQ_1:def 3;
then i in ( Seg k ) by CKB60:def 1;
then A5: i <= k by FINSEQ_1:1;
then A6: i <= ( k + 1 ) by NAT_1:12;
(1 <= ( i + 1 ) & ( i + 1 ) <= ( k + 1 )) by A5,NAT_1:12,XREAL_1:6;
then ( i + 1 ) in ( Seg ( k + 1 ) ) by FINSEQ_1:1;
then A7: ( p . ( i + 1 ) ) = ( MESSAGES ) by FUNCOP_1:7;
1 <= i by A4,FINSEQ_1:1;
then i in ( Seg ( k + 1 ) ) by A6,FINSEQ_1:1;
then A8: ( p . i ) = ( MESSAGES ) by FUNCOP_1:7;
( ( IDEA_Q_F (Key,n,k) ) . i ) = ( IDEA_Q (( Line (Key,( ( k -' i ) + 1 )) ),n) ) by A3,CKB60:def 1;
hence thesis by A8,A7,FUNCT_2:9;
end;
( len p ) = ( k + 1 ) by A1,FINSEQ_1:def 3;
then ( len p ) = ( ( len ( IDEA_Q_F (Key,n,k) ) ) + 1 ) by CKB60:def 1;
hence thesis by A2,FUNCT_7:def 8;
end;
