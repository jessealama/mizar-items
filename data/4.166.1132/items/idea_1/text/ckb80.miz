environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_2,MARGREL1,CARD_1,ARYTM_3,INT_2,NAT_1,RELAT_1,XXREAL_0,INT_1,ARYTM_1,GRCAT_1,XBOOLEAN,FINSEQ_1,PARTFUN1,FUNCT_1,POWER,BINARI_3,FUNCOP_1,XBOOLE_0,BINARITH,MATRIX_1,INCSP_1,ORDINAL4,FUNCT_7,FUNCT_2,TARSKI,TREES_1,IDEA_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,INT_2,NAT_1,NAT_D,MARGREL1,RELAT_1,FUNCT_1,FUNCOP_1,MATRIX_1,PARTFUN1,FUNCT_2,FUNCT_7,SERIES_1,FINSEQ_1,FINSEQ_2,RECDEF_1,BINARITH,BINARI_3,XXREAL_0,CKB8,CKB9,CKB12,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41,CKB52,CKB56,CKB57,CKB58,CKB60,CKB62,CKB63,CKB64,CKB65;
definitions TARSKI,FINSEQ_2,XBOOLEAN,CKB8,CKB9,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41,CKB52,CKB56,CKB57,CKB58,CKB60,CKB62,CKB63,CKB64,CKB65;
theorems NAT_1,NAT_2,NEWTON,INT_1,INT_2,FINSEQ_1,FINSEQ_2,FUNCT_1,FUNCT_2,FUNCT_7,FUNCOP_1,POWER,EULER_1,EULER_2,BINARITH,BINARI_3,MATRIX_1,RELSET_1,RELAT_1,XBOOLE_1,XREAL_1,XXREAL_0,XBOOLEAN,NAT_D,PARTFUN1,ORDINAL1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB56,CKB57,CKB58,CKB60,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79;
schemes FINSEQ_1,FINSEQ_2,NAT_1,FUNCT_2;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,MARGREL1,FUNCT_7,VALUED_0,CARD_1,FINSEQ_2,RELSET_1,CKB53,CKB54,CKB55,CKB59,CKB61;
constructors PARTFUN1,XXREAL_0,NAT_1,NAT_D,SERIES_1,BINARITH,WSIERP_1,FUNCT_7,MATRIX_1,BINARI_3,RECDEF_1,RELSET_1,CKB8,CKB9,CKB12,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41,CKB52,CKB56,CKB57,CKB58,CKB60,CKB62,CKB63,CKB64,CKB65;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve m for (FinSequence of ( NAT ));
theorem
(for n being non empty (Element of ( NAT )) holds (for lk being (Element of ( NAT )) holds (for Key1,Key2 being (Matrix of lk,6,( NAT )) holds (for r being (Element of ( NAT )) holds (for ks1,ks2,ke1,ke2 being (FinSequence of ( NAT )) holds (for m holds ((((((((((((((((((((((((((lk >= r & ( ( 2 to_power n ) + 1 ) is  prime) & ( len m ) >= 4) & ( m . 1 ) is_expressible_by n) & ( m . 2 ) is_expressible_by n) & ( m . 3 ) is_expressible_by n) & ( m . 4 ) is_expressible_by n) & (for i being (Element of ( NAT )) holds (i <= r implies (((((((((((((((((( Key1 * (i,1) ) is_expressible_by n & ( Key1 * (i,2) ) is_expressible_by n) & ( Key1 * (i,3) ) is_expressible_by n) & ( Key1 * (i,4) ) is_expressible_by n) & ( Key1 * (i,5) ) is_expressible_by n) & ( Key1 * (i,6) ) is_expressible_by n) & ( Key2 * (i,1) ) is_expressible_by n) & ( Key2 * (i,2) ) is_expressible_by n) & ( Key2 * (i,3) ) is_expressible_by n) & ( Key2 * (i,4) ) is_expressible_by n) & ( Key2 * (i,5) ) is_expressible_by n) & ( Key2 * (i,6) ) is_expressible_by n) & ( Key2 * (i,1) ) = ( INV_MOD (( Key1 * (i,1) ),n) )) & ( Key2 * (i,2) ) = ( NEG_MOD (( Key1 * (i,3) ),n) )) & ( Key2 * (i,3) ) = ( NEG_MOD (( Key1 * (i,2) ),n) )) & ( Key2 * (i,4) ) = ( INV_MOD (( Key1 * (i,4) ),n) )) & ( Key1 * (i,5) ) = ( Key2 * (i,5) )) & ( Key1 * (i,6) ) = ( Key2 * (i,6) ))))) & ( ks1 . 1 ) is_expressible_by n) & ( ks1 . 2 ) is_expressible_by n) & ( ks1 . 3 ) is_expressible_by n) & ( ks1 . 4 ) is_expressible_by n) & ( ks2 . 1 ) = ( INV_MOD (( ks1 . 1 ),n) )) & ( ks2 . 2 ) = ( NEG_MOD (( ks1 . 2 ),n) )) & ( ks2 . 3 ) = ( NEG_MOD (( ks1 . 3 ),n) )) & ( ks2 . 4 ) = ( INV_MOD (( ks1 . 4 ),n) )) & ( ke1 . 1 ) is_expressible_by n) & ( ke1 . 2 ) is_expressible_by n) & ( ke1 . 3 ) is_expressible_by n) & ( ke1 . 4 ) is_expressible_by n) & ( ke2 . 1 ) = ( INV_MOD (( ke1 . 1 ),n) )) & ( ke2 . 2 ) = ( NEG_MOD (( ke1 . 2 ),n) )) & ( ke2 . 3 ) = ( NEG_MOD (( ke1 . 3 ),n) )) & ( ke2 . 4 ) = ( INV_MOD (( ke1 . 4 ),n) )) & ( ke2 . 5 ) = ( ke1 . 5 )) & ( ke2 . 6 ) = ( ke1 . 6 )) implies ( ( ( IDEA_QS (ks2,n) ) * ( ( compose (( IDEA_Q_F (Key2,n,r) ),( MESSAGES )) ) * ( ( IDEA_QE (ke2,n) ) * ( ( IDEA_PE (ke1,n) ) * ( ( compose (( IDEA_P_F (Key1,n,r) ),( MESSAGES )) ) * ( IDEA_PS (ks1,n) ) ) ) ) ) ) . m ) = m)))))))
proof
let n being non empty (Element of ( NAT ));
let lk being (Element of ( NAT ));
let Key1 being (Matrix of lk,6,( NAT )),Key2 being (Matrix of lk,6,( NAT ));
let r being (Element of ( NAT ));
let ks1 being (FinSequence of ( NAT )),ks2 being (FinSequence of ( NAT )),ke1 being (FinSequence of ( NAT )),ke2 being (FinSequence of ( NAT ));
let m;
assume that
A1: lk >= r
and
A2: ( ( 2 to_power n ) + 1 ) is  prime
and
A3: ( len m ) >= 4
and
A4: (((( m . 1 ) is_expressible_by n & ( m . 2 ) is_expressible_by n) & ( m . 3 ) is_expressible_by n) & ( m . 4 ) is_expressible_by n)
and
A5: (for i being (Element of ( NAT )) holds (i <= r implies (((((((((((((((((( Key1 * (i,1) ) is_expressible_by n & ( Key1 * (i,2) ) is_expressible_by n) & ( Key1 * (i,3) ) is_expressible_by n) & ( Key1 * (i,4) ) is_expressible_by n) & ( Key1 * (i,5) ) is_expressible_by n) & ( Key1 * (i,6) ) is_expressible_by n) & ( Key2 * (i,1) ) is_expressible_by n) & ( Key2 * (i,2) ) is_expressible_by n) & ( Key2 * (i,3) ) is_expressible_by n) & ( Key2 * (i,4) ) is_expressible_by n) & ( Key2 * (i,5) ) is_expressible_by n) & ( Key2 * (i,6) ) is_expressible_by n) & ( Key2 * (i,1) ) = ( INV_MOD (( Key1 * (i,1) ),n) )) & ( Key2 * (i,2) ) = ( NEG_MOD (( Key1 * (i,3) ),n) )) & ( Key2 * (i,3) ) = ( NEG_MOD (( Key1 * (i,2) ),n) )) & ( Key2 * (i,4) ) = ( INV_MOD (( Key1 * (i,4) ),n) )) & ( Key1 * (i,5) ) = ( Key2 * (i,5) )) & ( Key1 * (i,6) ) = ( Key2 * (i,6) ))))
and
A6: (((((((( ks1 . 1 ) is_expressible_by n & ( ks1 . 2 ) is_expressible_by n) & ( ks1 . 3 ) is_expressible_by n) & ( ks1 . 4 ) is_expressible_by n) & ( ks2 . 1 ) = ( INV_MOD (( ks1 . 1 ),n) )) & ( ks2 . 2 ) = ( NEG_MOD (( ks1 . 2 ),n) )) & ( ks2 . 3 ) = ( NEG_MOD (( ks1 . 3 ),n) )) & ( ks2 . 4 ) = ( INV_MOD (( ks1 . 4 ),n) ))
and
A7: (((((((((( ke1 . 1 ) is_expressible_by n & ( ke1 . 2 ) is_expressible_by n) & ( ke1 . 3 ) is_expressible_by n) & ( ke1 . 4 ) is_expressible_by n) & ( ke2 . 1 ) = ( INV_MOD (( ke1 . 1 ),n) )) & ( ke2 . 2 ) = ( NEG_MOD (( ke1 . 2 ),n) )) & ( ke2 . 3 ) = ( NEG_MOD (( ke1 . 3 ),n) )) & ( ke2 . 4 ) = ( INV_MOD (( ke1 . 4 ),n) )) & ( ke2 . 5 ) = ( ke1 . 5 )) & ( ke2 . 6 ) = ( ke1 . 6 ));
A8: m in ( MESSAGES ) by FINSEQ_1:def 11;
then ( ( IDEA_PS (ks1,n) ) . m ) in ( MESSAGES ) by FUNCT_2:5;
then reconsider m1 = ( ( IDEA_PS (ks1,n) ) . m ) as (FinSequence of ( NAT )) by FINSEQ_1:def 11;
A9: m1 in ( MESSAGES ) by FINSEQ_1:def 11;
A10: ( len m1 ) = ( len ( IDEAoperationA (m,ks1,n) ) ) by CKB62:def 1
.= ( len m ) by CKB39:def 1;
( m1 . 4 ) = ( ( IDEAoperationA (m,ks1,n) ) . 4 ) by CKB62:def 1;
then A11: ( m1 . 4 ) is_expressible_by n by A3,CKB42:1;
( m1 . 3 ) = ( ( IDEAoperationA (m,ks1,n) ) . 3 ) by CKB62:def 1;
then A12: ( m1 . 3 ) is_expressible_by n by A3,CKB42:1;
( m1 . 2 ) = ( ( IDEAoperationA (m,ks1,n) ) . 2 ) by CKB62:def 1;
then A13: ( m1 . 2 ) is_expressible_by n by A3,CKB42:1;
( m1 . 1 ) = ( ( IDEAoperationA (m,ks1,n) ) . 1 ) by CKB62:def 1;
then A14: ( m1 . 1 ) is_expressible_by n by A3,CKB42:1;
per cases ;
suppose A15: r = ( 0 );

then ( len ( IDEA_Q_F (Key2,n,r) ) ) = ( 0 ) by CKB60:def 1;
then A16: ( IDEA_Q_F (Key2,n,r) ) = ( {} );
( len ( IDEA_P_F (Key1,n,r) ) ) = ( 0 ) by A15,CKB58:def 1;
then ( IDEA_P_F (Key1,n,r) ) = ( {} );
hence ( ( ( IDEA_QS (ks2,n) ) * ( ( compose (( IDEA_Q_F (Key2,n,r) ),( MESSAGES )) ) * ( ( IDEA_QE (ke2,n) ) * ( ( IDEA_PE (ke1,n) ) * ( ( compose (( IDEA_P_F (Key1,n,r) ),( MESSAGES )) ) * ( IDEA_PS (ks1,n) ) ) ) ) ) ) . m ) = ( ( ( IDEA_QS (ks2,n) ) * ( ( compose (( {} ),( MESSAGES )) ) * ( ( IDEA_QE (ke2,n) ) * ( ( IDEA_PE (ke1,n) ) * ( ( compose (( {} ),( MESSAGES )) ) * ( IDEA_PS (ks1,n) ) ) ) ) ) ) . m ) by A16
.= ( ( ( IDEA_QS (ks2,n) ) * ( ( id ( MESSAGES ) ) * ( ( IDEA_QE (ke2,n) ) * ( ( IDEA_PE (ke1,n) ) * ( ( compose (( {} ),( MESSAGES )) ) * ( IDEA_PS (ks1,n) ) ) ) ) ) ) . m ) by FUNCT_7:39
.= ( ( ( IDEA_QS (ks2,n) ) * ( ( id ( MESSAGES ) ) * ( ( IDEA_QE (ke2,n) ) * ( ( IDEA_PE (ke1,n) ) * ( ( id ( MESSAGES ) ) * ( IDEA_PS (ks1,n) ) ) ) ) ) ) . m ) by FUNCT_7:39
.= ( ( ( IDEA_QS (ks2,n) ) * ( ( IDEA_QE (ke2,n) ) * ( ( IDEA_PE (ke1,n) ) * ( ( id ( MESSAGES ) ) * ( IDEA_PS (ks1,n) ) ) ) ) ) . m ) by FUNCT_2:17
.= ( ( ( IDEA_QS (ks2,n) ) * ( ( IDEA_QE (ke2,n) ) * ( ( IDEA_PE (ke1,n) ) * ( IDEA_PS (ks1,n) ) ) ) ) . m ) by FUNCT_2:17
.= ( ( IDEA_QS (ks2,n) ) . ( ( ( IDEA_QE (ke2,n) ) * ( ( IDEA_PE (ke1,n) ) * ( IDEA_PS (ks1,n) ) ) ) . m ) ) by A8,FUNCT_2:15
.= ( ( IDEA_QS (ks2,n) ) . ( ( IDEA_QE (ke2,n) ) . ( ( ( IDEA_PE (ke1,n) ) * ( IDEA_PS (ks1,n) ) ) . m ) ) ) by A8,FUNCT_2:15
.= ( ( IDEA_QS (ks2,n) ) . ( ( IDEA_QE (ke2,n) ) . ( ( IDEA_PE (ke1,n) ) . m1 ) ) ) by A8,FUNCT_2:15
.= ( ( IDEA_QS (ks2,n) ) . ( ( ( IDEA_QE (ke2,n) ) * ( IDEA_PE (ke1,n) ) ) . m1 ) ) by A9,FUNCT_2:15
.= ( ( IDEA_QS (ks2,n) ) . ( ( IDEA_PS (ks1,n) ) . m ) ) by A2,A3,A7,A10,A14,A13,A12,A11,CKB68:1
.= ( ( ( IDEA_QS (ks2,n) ) * ( IDEA_PS (ks1,n) ) ) . m ) by A8,FUNCT_2:15
.= m by A2,A3,A4,A6,CKB67:1;
end;
suppose A17: r <> ( 0 );

then A18: ( IDEA_P_F (Key1,n,r) ) is (FuncSequence of ( MESSAGES ),( MESSAGES )) by CKB73:1;
then A19: ( firstdom ( IDEA_P_F (Key1,n,r) ) ) = ( MESSAGES ) by FUNCT_7:def 9;
then A20: ( dom ( compose (( IDEA_P_F (Key1,n,r) ),( MESSAGES )) ) ) = ( MESSAGES ) by A18,FUNCT_7:62;
(( IDEA_P_F (Key1,n,r) ) = ( {} ) implies ( rng ( compose (( IDEA_P_F (Key1,n,r) ),( MESSAGES )) ) ) = ( {} )) by A19,FUNCT_7:def 6;
then A21: ( rng ( compose (( IDEA_P_F (Key1,n,r) ),( MESSAGES )) ) ) c= ( lastrng ( IDEA_P_F (Key1,n,r) ) ) by FUNCT_7:59,XBOOLE_1:2;
( lastrng ( IDEA_P_F (Key1,n,r) ) ) c= ( MESSAGES ) by A18,FUNCT_7:def 9;
then ( rng ( compose (( IDEA_P_F (Key1,n,r) ),( MESSAGES )) ) ) c= ( MESSAGES ) by A21,XBOOLE_1:1;
then reconsider PF = ( compose (( IDEA_P_F (Key1,n,r) ),( MESSAGES )) ) as (Function of ( MESSAGES ),( MESSAGES )) by A20,FUNCT_2:def 1,RELSET_1:4;
A22: ( rng PF ) c= ( MESSAGES ) by RELAT_1:def 19;
( PF . m1 ) in ( MESSAGES ) by A9,FUNCT_2:5;
then reconsider m2 = ( PF . m1 ) as (FinSequence of ( NAT )) by FINSEQ_1:def 11;
A23: (( len m2 ) >= 4 & ( m2 . 1 ) is_expressible_by n) by A3,A10,A14,A13,A12,A11,CKB78:1;
A24: ( IDEA_Q_F (Key2,n,r) ) is (FuncSequence of ( MESSAGES ),( MESSAGES )) by A17,CKB74:1;
then A25: ( firstdom ( IDEA_Q_F (Key2,n,r) ) ) = ( MESSAGES ) by FUNCT_7:def 9;
then A26: ( dom ( compose (( IDEA_Q_F (Key2,n,r) ),( MESSAGES )) ) ) = ( MESSAGES ) by A24,FUNCT_7:62;
(( IDEA_Q_F (Key2,n,r) ) = ( {} ) implies ( rng ( compose (( IDEA_Q_F (Key2,n,r) ),( MESSAGES )) ) ) = ( {} )) by A25,FUNCT_7:def 6;
then A27: ( rng ( compose (( IDEA_Q_F (Key2,n,r) ),( MESSAGES )) ) ) c= ( lastrng ( IDEA_Q_F (Key2,n,r) ) ) by FUNCT_7:59,XBOOLE_1:2;
( lastrng ( IDEA_Q_F (Key2,n,r) ) ) c= ( MESSAGES ) by A24,FUNCT_7:def 9;
then ( rng ( compose (( IDEA_Q_F (Key2,n,r) ),( MESSAGES )) ) ) c= ( MESSAGES ) by A27,XBOOLE_1:1;
then reconsider QF = ( compose (( IDEA_Q_F (Key2,n,r) ),( MESSAGES )) ) as (Function of ( MESSAGES ),( MESSAGES )) by A26,FUNCT_2:def 1,RELSET_1:4;
A28: m2 in ( MESSAGES ) by FINSEQ_1:def 11;
A29: ( QF . ( PF . m1 ) ) = ( ( QF * PF ) . m1 ) by A9,FUNCT_2:15
.= ( ( compose (( ( IDEA_P_F (Key1,n,r) ) ^ ( IDEA_Q_F (Key2,n,r) ) ),( MESSAGES )) ) . m1 ) by A22,FUNCT_7:48
.= m1 by A1,A2,A3,A5,A10,A14,A13,A12,A11,CKB79:1;
A30: ( m2 . 4 ) is_expressible_by n by A3,A10,A14,A13,A12,A11,CKB78:1;
A31: (( m2 . 2 ) is_expressible_by n & ( m2 . 3 ) is_expressible_by n) by A3,A10,A14,A13,A12,A11,CKB78:1;
thus ( ( ( IDEA_QS (ks2,n) ) * ( ( compose (( IDEA_Q_F (Key2,n,r) ),( MESSAGES )) ) * ( ( IDEA_QE (ke2,n) ) * ( ( IDEA_PE (ke1,n) ) * ( ( compose (( IDEA_P_F (Key1,n,r) ),( MESSAGES )) ) * ( IDEA_PS (ks1,n) ) ) ) ) ) ) . m ) = ( ( IDEA_QS (ks2,n) ) . ( ( QF * ( ( IDEA_QE (ke2,n) ) * ( ( IDEA_PE (ke1,n) ) * ( PF * ( IDEA_PS (ks1,n) ) ) ) ) ) . m ) ) by A8,FUNCT_2:15
.= ( ( IDEA_QS (ks2,n) ) . ( QF . ( ( ( IDEA_QE (ke2,n) ) * ( ( IDEA_PE (ke1,n) ) * ( PF * ( IDEA_PS (ks1,n) ) ) ) ) . m ) ) ) by A8,FUNCT_2:15
.= ( ( IDEA_QS (ks2,n) ) . ( QF . ( ( IDEA_QE (ke2,n) ) . ( ( ( IDEA_PE (ke1,n) ) * ( PF * ( IDEA_PS (ks1,n) ) ) ) . m ) ) ) ) by A8,FUNCT_2:15
.= ( ( IDEA_QS (ks2,n) ) . ( QF . ( ( IDEA_QE (ke2,n) ) . ( ( IDEA_PE (ke1,n) ) . ( ( PF * ( IDEA_PS (ks1,n) ) ) . m ) ) ) ) ) by A8,FUNCT_2:15
.= ( ( IDEA_QS (ks2,n) ) . ( QF . ( ( IDEA_QE (ke2,n) ) . ( ( IDEA_PE (ke1,n) ) . ( PF . ( ( IDEA_PS (ks1,n) ) . m ) ) ) ) ) ) by A8,FUNCT_2:15
.= ( ( IDEA_QS (ks2,n) ) . ( QF . ( ( ( IDEA_QE (ke2,n) ) * ( IDEA_PE (ke1,n) ) ) . m2 ) ) ) by A28,FUNCT_2:15
.= ( ( IDEA_QS (ks2,n) ) . m1 ) by A2,A7,A23,A31,A30,A29,CKB68:1
.= ( ( ( IDEA_QS (ks2,n) ) * ( IDEA_PS (ks1,n) ) ) . m ) by A8,FUNCT_2:15
.= m by A2,A3,A4,A6,CKB67:1;
end;
end;
