environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_2,MARGREL1,CARD_1,ARYTM_3,INT_2,NAT_1,RELAT_1,XXREAL_0,INT_1,ARYTM_1,GRCAT_1,XBOOLEAN,FINSEQ_1,PARTFUN1,FUNCT_1,POWER,BINARI_3,FUNCOP_1,XBOOLE_0,BINARITH,MATRIX_1,INCSP_1,ORDINAL4,FUNCT_7,FUNCT_2,TARSKI,TREES_1,IDEA_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,INT_2,NAT_1,NAT_D,MARGREL1,RELAT_1,FUNCT_1,FUNCOP_1,MATRIX_1,PARTFUN1,FUNCT_2,FUNCT_7,SERIES_1,FINSEQ_1,FINSEQ_2,RECDEF_1,BINARITH,BINARI_3,XXREAL_0,CKB8,CKB9,CKB12,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41,CKB52;
definitions TARSKI,FINSEQ_2,XBOOLEAN,CKB8,CKB9,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41,CKB52;
theorems NAT_1,NAT_2,NEWTON,INT_1,INT_2,FINSEQ_1,FINSEQ_2,FUNCT_1,FUNCT_2,FUNCT_7,FUNCOP_1,POWER,EULER_1,EULER_2,BINARITH,BINARI_3,MATRIX_1,RELSET_1,RELAT_1,XBOOLE_1,XREAL_1,XXREAL_0,XBOOLEAN,NAT_D,PARTFUN1,ORDINAL1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52;
schemes FINSEQ_1,FINSEQ_2,NAT_1,FUNCT_2;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,MARGREL1,FUNCT_7,VALUED_0,CARD_1,FINSEQ_2,RELSET_1,CKB53,CKB54,CKB55;
constructors PARTFUN1,XXREAL_0,NAT_1,NAT_D,SERIES_1,BINARITH,WSIERP_1,FUNCT_7,MATRIX_1,BINARI_3,RECDEF_1,RELSET_1,CKB8,CKB9,CKB12,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41,CKB52;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve m for (FinSequence of ( NAT ));
reserve k for (FinSequence of ( NAT ));
definition
let n being non empty (Element of ( NAT ));
let k;
func IDEA_P (k,n) -> (Function of ( MESSAGES ),( MESSAGES ))
means
:Def15: (for m holds ( it . m ) = ( IDEAoperationA (( IDEAoperationC ( IDEAoperationB (m,k,n) ) ),k,n) ));
existence
proof
defpred P[ set,set ]
 means
(ex F being (FinSequence of ( NAT )) st ($1 = F & $2 = ( IDEAoperationA (( IDEAoperationC ( IDEAoperationB (F,k,n) ) ),k,n) )));
A1: (for e being (Element of ( MESSAGES )) holds (ex u being (Element of ( MESSAGES )) st P[ e,u ]))
proof
let e being (Element of ( MESSAGES ));
reconsider F = e as (FinSequence of ( NAT )) by FINSEQ_1:def 11;
reconsider u = ( IDEAoperationA (( IDEAoperationC ( IDEAoperationB (F,k,n) ) ),k,n) ) as (Element of ( MESSAGES )) by FINSEQ_1:def 11;
take u;
thus thesis;
end;
consider m1 being (Function of ( MESSAGES ),( MESSAGES )) such that A2: (for e being (Element of ( MESSAGES )) holds P[ e,( m1 . e ) ]) from FUNCT_2:sch 3(A1);
take m1;
let m being (FinSequence of ( NAT ));
m is (Element of ( MESSAGES )) by FINSEQ_1:def 11;
then (ex F being (FinSequence of ( NAT )) st (m = F & ( m1 . m ) = ( IDEAoperationA (( IDEAoperationC ( IDEAoperationB (F,k,n) ) ),k,n) ))) by A2;
hence thesis;
end;
uniqueness
proof
let m1 being (Function of ( MESSAGES ),( MESSAGES )),m2 being (Function of ( MESSAGES ),( MESSAGES ));
assume that
A3: (for m being (FinSequence of ( NAT )) holds ( m1 . m ) = ( IDEAoperationA (( IDEAoperationC ( IDEAoperationB (m,k,n) ) ),k,n) ))
and
A4: (for m being (FinSequence of ( NAT )) holds ( m2 . m ) = ( IDEAoperationA (( IDEAoperationC ( IDEAoperationB (m,k,n) ) ),k,n) ));
A5:now
let j being set;
consider jj being set such that A6: jj = j;
assume j in ( MESSAGES );
then reconsider jj as (FinSequence of ( NAT )) by A6,FINSEQ_1:def 11;
thus ( m1 . j ) = ( IDEAoperationA (( IDEAoperationC ( IDEAoperationB (jj,k,n) ) ),k,n) ) by A3,A6
.= ( m2 . j ) by A4,A6;
end;
(( dom m1 ) = ( MESSAGES ) & ( dom m2 ) = ( MESSAGES )) by FUNCT_2:def 1;
hence thesis by A5,FUNCT_1:2;
end;
end;
