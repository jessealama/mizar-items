environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_2,MARGREL1,CARD_1,ARYTM_3,INT_2,NAT_1,RELAT_1,XXREAL_0,INT_1,ARYTM_1,GRCAT_1,XBOOLEAN,FINSEQ_1,PARTFUN1,FUNCT_1,POWER,BINARI_3,FUNCOP_1,XBOOLE_0,BINARITH,MATRIX_1,INCSP_1,ORDINAL4,FUNCT_7,FUNCT_2,TARSKI,TREES_1,IDEA_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,INT_2,NAT_1,NAT_D,MARGREL1,RELAT_1,FUNCT_1,FUNCOP_1,MATRIX_1,PARTFUN1,FUNCT_2,FUNCT_7,SERIES_1,FINSEQ_1,FINSEQ_2,RECDEF_1,BINARITH,BINARI_3,XXREAL_0,CKB8,CKB9,CKB12,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41;
definitions TARSKI,FINSEQ_2,XBOOLEAN,CKB8,CKB9,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41;
theorems NAT_1,NAT_2,NEWTON,INT_1,INT_2,FINSEQ_1,FINSEQ_2,FUNCT_1,FUNCT_2,FUNCT_7,FUNCOP_1,POWER,EULER_1,EULER_2,BINARITH,BINARI_3,MATRIX_1,RELSET_1,RELAT_1,XBOOLE_1,XREAL_1,XXREAL_0,XBOOLEAN,NAT_D,PARTFUN1,ORDINAL1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47;
schemes FINSEQ_1,FINSEQ_2,NAT_1,FUNCT_2;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,MARGREL1,FUNCT_7,VALUED_0,CARD_1,FINSEQ_2,RELSET_1;
constructors PARTFUN1,XXREAL_0,NAT_1,NAT_D,SERIES_1,BINARITH,WSIERP_1,FUNCT_7,MATRIX_1,BINARI_3,RECDEF_1,RELSET_1,CKB8,CKB9,CKB12,CKB15,CKB17,CKB18,CKB19,CKB26,CKB29,CKB32,CKB33,CKB39,CKB40,CKB41;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve m for (FinSequence of ( NAT ));
reserve k1 for (FinSequence of ( NAT ));
reserve k2 for (FinSequence of ( NAT ));
theorem
Th30: (for n being non empty (Element of ( NAT )) holds (for m holds (for k1 holds (for k2 holds ((((((((((((((( ( 2 to_power n ) + 1 ) is  prime & ( len m ) >= 4) & ( m . 1 ) is_expressible_by n) & ( m . 2 ) is_expressible_by n) & ( m . 3 ) is_expressible_by n) & ( m . 4 ) is_expressible_by n) & ( k1 . 1 ) is_expressible_by n) & ( k1 . 2 ) is_expressible_by n) & ( k1 . 3 ) is_expressible_by n) & ( k1 . 4 ) is_expressible_by n) & ( k2 . 1 ) = ( INV_MOD (( k1 . 1 ),n) )) & ( k2 . 2 ) = ( NEG_MOD (( k1 . 2 ),n) )) & ( k2 . 3 ) = ( NEG_MOD (( k1 . 3 ),n) )) & ( k2 . 4 ) = ( INV_MOD (( k1 . 4 ),n) )) implies ( IDEAoperationA (( IDEAoperationA (m,k1,n) ),k2,n) ) = m)))))
proof
let n being non empty (Element of ( NAT ));
let m being (FinSequence of ( NAT )),k1 being (FinSequence of ( NAT )),k2 being (FinSequence of ( NAT ));
assume that
A1: ( ( 2 to_power n ) + 1 ) is  prime
and
A2: ( len m ) >= 4
and
A3: ( m . 1 ) is_expressible_by n
and
A4: ( m . 2 ) is_expressible_by n
and
A5: ( m . 3 ) is_expressible_by n
and
A6: ( m . 4 ) is_expressible_by n
and
A7: ( k1 . 1 ) is_expressible_by n
and
A8: ( k1 . 2 ) is_expressible_by n
and
A9: ( k1 . 3 ) is_expressible_by n
and
A10: ( k1 . 4 ) is_expressible_by n
and
A11: ( k2 . 1 ) = ( INV_MOD (( k1 . 1 ),n) )
and
A12: ( k2 . 2 ) = ( NEG_MOD (( k1 . 2 ),n) )
and
A13: ( k2 . 3 ) = ( NEG_MOD (( k1 . 3 ),n) )
and
A14: ( k2 . 4 ) = ( INV_MOD (( k1 . 4 ),n) );
A15: ( k2 . 4 ) is_expressible_by n by A1,A10,A14,CKB33:def 1;
2 <= ( len m ) by A2,XXREAL_0:2;
then 2 in ( Seg ( len m ) ) by FINSEQ_1:1;
then A16: 2 in ( dom m ) by FINSEQ_1:def 3;
( Seg ( len m ) ) = ( dom m ) by FINSEQ_1:def 3;
then A17: 4 in ( dom m ) by A2,FINSEQ_1:1;
1 <= ( len m ) by A2,XXREAL_0:2;
then 1 in ( Seg ( len m ) ) by FINSEQ_1:1;
then A18: 1 in ( dom m ) by FINSEQ_1:def 3;
3 <= ( len m ) by A2,XXREAL_0:2;
then 3 in ( Seg ( len m ) ) by FINSEQ_1:1;
then A19: 3 in ( dom m ) by FINSEQ_1:def 3;
consider I1 being (FinSequence of ( NAT )) such that A20: I1 = ( IDEAoperationA (m,k1,n) );
consider I2 being (FinSequence of ( NAT )) such that A21: I2 = ( IDEAoperationA (I1,k2,n) );
A22: ( k2 . 1 ) is_expressible_by n by A1,A7,A11,CKB33:def 1;
A23:now
let j being Nat;
assume A24: j in ( Seg ( len m ) );
then j in ( Seg ( len I1 ) ) by A20,CKB39:def 1;
then A25: j in ( dom I1 ) by FINSEQ_1:def 3;
A26: j in ( dom m ) by A24,FINSEQ_1:def 3;
now
per cases ;
suppose A27: j = 1;

hence ( I2 . j ) = ( MUL_MOD (( I1 . 1 ),( k2 . 1 ),n) ) by A21,A25,CKB39:def 1
.= ( MUL_MOD (( MUL_MOD (( m . 1 ),( k1 . 1 ),n) ),( k2 . 1 ),n) ) by A20,A18,CKB39:def 1
.= ( MUL_MOD (( m . 1 ),( MUL_MOD (( k1 . 1 ),( k2 . 1 ),n) ),n) ) by A1,A3,A7,A22,CKB36:1
.= ( MUL_MOD (1,( m . 1 ),n) ) by A1,A7,A11,CKB33:def 1
.= ( m . j ) by A3,A27,CKB35:1;
end;
suppose A28: j = 2;

hence ( I2 . j ) = ( ADD_MOD (( I1 . 2 ),( k2 . 2 ),n) ) by A21,A25,CKB39:def 1
.= ( ADD_MOD (( ADD_MOD (( m . 2 ),( k1 . 2 ),n) ),( k2 . 2 ),n) ) by A20,A16,CKB39:def 1
.= ( ADD_MOD (( m . 2 ),( ADD_MOD (( k1 . 2 ),( k2 . 2 ),n) ),n) ) by CKB23:1
.= ( ADD_MOD (( 0 ),( m . 2 ),n) ) by A8,A12,CKB20:1
.= ( m . j ) by A4,A28,CKB22:1;
end;
suppose A29: j = 3;

hence ( I2 . j ) = ( ADD_MOD (( I1 . 3 ),( k2 . 3 ),n) ) by A21,A25,CKB39:def 1
.= ( ADD_MOD (( ADD_MOD (( m . 3 ),( k1 . 3 ),n) ),( k2 . 3 ),n) ) by A20,A19,CKB39:def 1
.= ( ADD_MOD (( m . 3 ),( ADD_MOD (( k1 . 3 ),( k2 . 3 ),n) ),n) ) by CKB23:1
.= ( ADD_MOD (( 0 ),( m . 3 ),n) ) by A9,A13,CKB20:1
.= ( m . j ) by A5,A29,CKB22:1;
end;
suppose A30: j = 4;

hence ( I2 . j ) = ( MUL_MOD (( I1 . 4 ),( k2 . 4 ),n) ) by A21,A25,CKB39:def 1
.= ( MUL_MOD (( MUL_MOD (( m . 4 ),( k1 . 4 ),n) ),( k2 . 4 ),n) ) by A20,A17,CKB39:def 1
.= ( MUL_MOD (( m . 4 ),( MUL_MOD (( k1 . 4 ),( k2 . 4 ),n) ),n) ) by A1,A6,A10,A15,CKB36:1
.= ( MUL_MOD (1,( m . 4 ),n) ) by A1,A10,A14,CKB33:def 1
.= ( m . j ) by A6,A30,CKB35:1;
end;
suppose A31: (((j <> 1 & j <> 2) & j <> 3) & j <> 4);

hence ( I2 . j ) = ( I1 . j ) by A21,A25,CKB39:def 1
.= ( m . j ) by A20,A26,A31,CKB39:def 1;
end;
end;
hence ( I2 . j ) = ( m . j );
end;
A32: ( Seg ( len m ) ) = ( dom m ) by FINSEQ_1:def 3;
( Seg ( len m ) ) = ( Seg ( len I1 ) ) by A20,CKB39:def 1
.= ( Seg ( len I2 ) ) by A21,CKB39:def 1
.= ( dom I2 ) by FINSEQ_1:def 3;
hence thesis by A20,A21,A32,A23,FINSEQ_1:13;
end;
