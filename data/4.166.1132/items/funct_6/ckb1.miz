environ
vocabularies FUNCT_1,SUBSET_1,NUMBERS,FUNCT_2,XBOOLE_0,CARD_3,FINSEQ_1,RELAT_1,FINSEQ_2,FUNCOP_1,TARSKI,ZFMISC_1,FUNCT_5,PARTFUN1,SETFAM_1,FINSEQ_4,MCART_1,FUNCT_6,ORDINAL1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,MCART_1,SETFAM_1,FUNCT_2,BINOP_1,PARTFUN1,FUNCT_3,WELLORD2,FUNCOP_1,FUNCT_4,FUNCT_5,ORDINAL1,CARD_3;
definitions TARSKI,FUNCT_1,WELLORD2,XBOOLE_0,BINOP_1,FUNCOP_1;
theorems TARSKI,ENUMSET1,ZFMISC_1,MCART_1,FUNCT_1,SETFAM_1,FUNCT_2,FUNCT_3,FUNCOP_1,CARD_1,CARD_3,FUNCT_4,FUNCT_5,PARTFUN1,WELLORD2,RELAT_1,XBOOLE_0,XBOOLE_1;
schemes FUNCT_1,PARTFUN1,CARD_3,CLASSES1,XBOOLE_0;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,ORDINAL1,RELSET_1;
constructors ENUMSET1,SETFAM_1,PARTFUN1,WELLORD2,BINOP_1,FUNCT_3,FUNCOP_1,FUNCT_4,FUNCT_5,CARD_3,RELSET_1;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve x for set;
reserve y for set;
reserve z for set;
reserve f for Function;
reserve g for Function;
theorem
Th10: ( product f ) c= ( Funcs (( dom f ),( Union f )) )
proof
let x;
assume x in ( product f );
then consider g such that A1: x = g and A2: ( dom g ) = ( dom f ) and A3: (for x holds (x in ( dom f ) implies ( g . x ) in ( f . x ))) by CARD_3:def 5;
( rng g ) c= ( Union f )
proof
let y;
A4: ( Union f ) = ( union ( rng f ) ) by CARD_3:def 4;
assume y in ( rng g );
then consider z such that A5: (z in ( dom g ) & y = ( g . z )) by FUNCT_1:def 3;
(y in ( f . z ) & ( f . z ) in ( rng f )) by A2,A3,A5,FUNCT_1:def 3;
hence thesis by A4,TARSKI:def 4;
end;
hence thesis by A1,A2,FUNCT_2:def 2;
end;
