environ
vocabularies FUNCT_1,SUBSET_1,NUMBERS,FUNCT_2,XBOOLE_0,CARD_3,FINSEQ_1,RELAT_1,FINSEQ_2,FUNCOP_1,TARSKI,ZFMISC_1,FUNCT_5,PARTFUN1,SETFAM_1,FINSEQ_4,MCART_1,FUNCT_6,ORDINAL1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,MCART_1,SETFAM_1,FUNCT_2,BINOP_1,PARTFUN1,FUNCT_3,WELLORD2,FUNCOP_1,FUNCT_4,FUNCT_5,ORDINAL1,CARD_3;
definitions TARSKI,FUNCT_1,WELLORD2,XBOOLE_0,BINOP_1,FUNCOP_1;
theorems TARSKI,ENUMSET1,ZFMISC_1,MCART_1,FUNCT_1,SETFAM_1,FUNCT_2,FUNCT_3,FUNCOP_1,CARD_1,CARD_3,FUNCT_4,FUNCT_5,PARTFUN1,WELLORD2,RELAT_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3;
schemes FUNCT_1,PARTFUN1,CARD_3,CLASSES1,XBOOLE_0;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,ORDINAL1,RELSET_1;
constructors ENUMSET1,SETFAM_1,PARTFUN1,WELLORD2,BINOP_1,FUNCT_3,FUNCOP_1,FUNCT_4,FUNCT_5,CARD_3,RELSET_1;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve x for set;
reserve y for set;
reserve a for set;
reserve b for set;
reserve f for Function;
reserve g for Function;
theorem
Th13: (( curry f ) = ( curry' ( ~ f ) ) & ( uncurry f ) = ( ~ ( uncurry' f ) ))
proof
A1: ( dom ( curry ( ~ ( ~ f ) ) ) ) = ( proj1 ( dom ( ~ ( ~ f ) ) ) ) by FUNCT_5:def 1;
A2: ( dom ( curry f ) ) = ( proj1 ( dom f ) ) by FUNCT_5:def 1;
A3: ( dom ( curry ( ~ ( ~ f ) ) ) ) = ( dom ( curry f ) )
proof
thus ( dom ( curry ( ~ ( ~ f ) ) ) ) c= ( dom ( curry f ) )
proof
let x;
assume x in ( dom ( curry ( ~ ( ~ f ) ) ) );
then consider y such that A4: [ x,y ] in ( dom ( ~ ( ~ f ) ) ) by A1,RELAT_1:def 4;
[ y,x ] in ( dom ( ~ f ) ) by A4,FUNCT_4:42;
then [ x,y ] in ( dom f ) by FUNCT_4:42;
hence thesis by A2,RELAT_1:def 4;
end;

let x;
assume x in ( dom ( curry f ) );
then consider y such that A5: [ x,y ] in ( dom f ) by A2,RELAT_1:def 4;
[ y,x ] in ( dom ( ~ f ) ) by A5,FUNCT_4:42;
then [ x,y ] in ( dom ( ~ ( ~ f ) ) ) by FUNCT_4:42;
hence thesis by A1,RELAT_1:def 4;
end;
A6: ( curry' ( ~ f ) ) = ( curry ( ~ ( ~ f ) ) ) by FUNCT_5:def 3;
now
let x;
assume A7: x in ( dom ( curry f ) );
then reconsider g = ( ( curry f ) . x ),h = ( ( curry' ( ~ f ) ) . x ) as Function by A6,A3,FUNCT_5:30;
A8: ( dom g ) = ( proj2 ( ( dom f ) /\ [: { x },( proj2 ( dom f ) ) :] ) ) by A7,FUNCT_5:31;
A9: ( dom h ) = ( proj1 ( ( dom ( ~ f ) ) /\ [: ( proj1 ( dom ( ~ f ) ) ),{ x } :] ) ) by A6,A3,A7,FUNCT_5:34;
A10: ( dom g ) = ( dom h )
proof
thus ( dom g ) c= ( dom h )
proof
let a;
assume a in ( dom g );
then consider b such that A11: [ b,a ] in ( ( dom f ) /\ [: { x },( proj2 ( dom f ) ) :] ) by A8,RELAT_1:def 5;
[ b,a ] in [: { x },( proj2 ( dom f ) ) :] by A11,XBOOLE_0:def 4;
then A12: [ a,b ] in [: ( proj2 ( dom f ) ),{ x } :] by ZFMISC_1:88;
[ b,a ] in ( dom f ) by A11,XBOOLE_0:def 4;
then A13: [ a,b ] in ( dom ( ~ f ) ) by FUNCT_4:42;
( proj2 ( dom f ) ) = ( proj1 ( dom ( ~ f ) ) ) by FUNCT_5:17;
then [ a,b ] in ( ( dom ( ~ f ) ) /\ [: ( proj1 ( dom ( ~ f ) ) ),{ x } :] ) by A13,A12,XBOOLE_0:def 4;
hence thesis by A9,RELAT_1:def 4;
end;

let a;
assume a in ( dom h );
then consider b such that A14: [ a,b ] in ( ( dom ( ~ f ) ) /\ [: ( proj1 ( dom ( ~ f ) ) ),{ x } :] ) by A9,RELAT_1:def 4;
[ a,b ] in [: ( proj1 ( dom ( ~ f ) ) ),{ x } :] by A14,XBOOLE_0:def 4;
then A15: [ b,a ] in [: { x },( proj1 ( dom ( ~ f ) ) ) :] by ZFMISC_1:88;
[ a,b ] in ( dom ( ~ f ) ) by A14,XBOOLE_0:def 4;
then A16: [ b,a ] in ( dom f ) by FUNCT_4:42;
( proj2 ( dom f ) ) = ( proj1 ( dom ( ~ f ) ) ) by FUNCT_5:17;
then [ b,a ] in ( ( dom f ) /\ [: { x },( proj2 ( dom f ) ) :] ) by A16,A15,XBOOLE_0:def 4;
hence thesis by A8,RELAT_1:def 5;
end;
now
let a;
assume A17: a in ( dom g );
then A18: ([ x,a ] in ( dom f ) & ( g . a ) = ( f . (x,a) )) by A7,FUNCT_5:31;
( h . a ) = ( ( ~ f ) . (a,x) ) by A6,A3,A7,A10,A17,FUNCT_5:34;
hence ( g . a ) = ( h . a ) by A18,FUNCT_4:def 2;
end;
hence ( ( curry f ) . x ) = ( ( curry' ( ~ f ) ) . x ) by A10,FUNCT_1:2;
end;
hence ( curry f ) = ( curry' ( ~ f ) ) by A6,A3,FUNCT_1:2;
A19: ( dom ( uncurry f ) ) = ( dom ( ~ ( ~ ( uncurry f ) ) ) )
proof
thus ( dom ( uncurry f ) ) c= ( dom ( ~ ( ~ ( uncurry f ) ) ) )
proof
let a;
assume A20: a in ( dom ( uncurry f ) );
then consider x,g,y such that A21: a = [ x,y ] and x in ( dom f ) and g = ( f . x ) and y in ( dom g ) by FUNCT_5:def 2;
[ y,x ] in ( dom ( ~ ( uncurry f ) ) ) by A20,A21,FUNCT_4:42;
hence thesis by A21,FUNCT_4:42;
end;

let a;
assume a in ( dom ( ~ ( ~ ( uncurry f ) ) ) );
then (ex x st (ex y st (a = [ y,x ] & [ x,y ] in ( dom ( ~ ( uncurry f ) ) )))) by FUNCT_4:def 2;
hence thesis by FUNCT_4:42;
end;
A22:now
let a;
assume a in ( dom ( ~ ( ~ ( uncurry f ) ) ) );
then consider x,y such that A23: a = [ y,x ] and A24: [ x,y ] in ( dom ( ~ ( uncurry f ) ) ) by FUNCT_4:def 2;
(( ( ~ ( uncurry f ) ) . (x,y) ) = ( ( uncurry f ) . (y,x) ) & ( ( ~ ( uncurry f ) ) . (x,y) ) = ( ( ~ ( ~ ( uncurry f ) ) ) . (y,x) )) by A24,FUNCT_4:43,FUNCT_4:def 2;
hence ( ( uncurry f ) . a ) = ( ( ~ ( ~ ( uncurry f ) ) ) . a ) by A23;
end;
( uncurry' f ) = ( ~ ( uncurry f ) ) by FUNCT_5:def 4;
hence thesis by A19,A22,FUNCT_1:2;
end;
