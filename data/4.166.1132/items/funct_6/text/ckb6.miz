environ
vocabularies FUNCT_1,SUBSET_1,NUMBERS,FUNCT_2,XBOOLE_0,CARD_3,FINSEQ_1,RELAT_1,FINSEQ_2,FUNCOP_1,TARSKI,ZFMISC_1,FUNCT_5,PARTFUN1,SETFAM_1,FINSEQ_4,MCART_1,FUNCT_6,ORDINAL1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,MCART_1,SETFAM_1,FUNCT_2,BINOP_1,PARTFUN1,FUNCT_3,WELLORD2,FUNCOP_1,FUNCT_4,FUNCT_5,ORDINAL1,CARD_3;
definitions TARSKI,FUNCT_1,WELLORD2,XBOOLE_0,BINOP_1,FUNCOP_1;
theorems TARSKI,ENUMSET1,ZFMISC_1,MCART_1,FUNCT_1,SETFAM_1,FUNCT_2,FUNCT_3,FUNCOP_1,CARD_1,CARD_3,FUNCT_4,FUNCT_5,PARTFUN1,WELLORD2,RELAT_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5;
schemes FUNCT_1,PARTFUN1,CARD_3,CLASSES1,XBOOLE_0;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,ORDINAL1,RELSET_1;
constructors ENUMSET1,SETFAM_1,PARTFUN1,WELLORD2,BINOP_1,FUNCT_3,FUNCOP_1,FUNCT_4,FUNCT_5,CARD_3,RELSET_1;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve x for set;
reserve y1 for set;
reserve y2 for set;
reserve z for set;
reserve X for set;
reserve Y for set;
reserve g for Function;
theorem
(( uncurry ( X --> ( Y --> z ) ) ) = ( [: X,Y :] --> z ) & ( uncurry' ( X --> ( Y --> z ) ) ) = ( [: Y,X :] --> z ))
proof
A1: ( dom ( X --> ( Y --> z ) ) ) = X by FUNCOP_1:13;
A2: ( dom ( Y --> z ) ) = Y by FUNCOP_1:13;
( rng ( Y --> z ) ) c= { z } by FUNCOP_1:13;
then ( Y --> z ) in ( Funcs (Y,{ z }) ) by A2,FUNCT_2:def 2;
then (( rng ( X --> ( Y --> z ) ) ) c= { ( Y --> z ) } & { ( Y --> z ) } c= ( Funcs (Y,{ z }) )) by FUNCOP_1:13,ZFMISC_1:31;
then ( rng ( X --> ( Y --> z ) ) ) c= ( Funcs (Y,{ z }) ) by XBOOLE_1:1;
then A3: ( dom ( uncurry ( X --> ( Y --> z ) ) ) ) = [: X,Y :] by A1,FUNCT_5:26;
A4:now
let x;
assume A5: x in [: X,Y :];
then consider y1,g,y2 such that A6: x = [ y1,y2 ] and A7: (y1 in X & g = ( ( X --> ( Y --> z ) ) . y1 )) and A8: y2 in ( dom g ) by A1,A3,FUNCT_5:def 2;
A9: g = ( Y --> z ) by A7,FUNCOP_1:7;
then ( ( Y --> z ) . y2 ) = z by A2,A8,FUNCOP_1:7;
then z = ( ( uncurry ( X --> ( Y --> z ) ) ) . (y1,y2) ) by A1,A7,A8,A9,FUNCT_5:38;
hence ( ( uncurry ( X --> ( Y --> z ) ) ) . x ) = ( ( [: X,Y :] --> z ) . x ) by A5,A6,FUNCOP_1:7;
end;
( dom ( [: X,Y :] --> z ) ) = [: X,Y :] by FUNCOP_1:13;
hence ( uncurry ( X --> ( Y --> z ) ) ) = ( [: X,Y :] --> z ) by A3,A4,FUNCT_1:2;
then ( ~ ( uncurry ( X --> ( Y --> z ) ) ) ) = ( [: Y,X :] --> z ) by CKB3:1;
hence thesis by FUNCT_5:def 4;
end;
