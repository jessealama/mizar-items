environ
vocabularies FUNCT_1,SUBSET_1,NUMBERS,FUNCT_2,XBOOLE_0,CARD_3,FINSEQ_1,RELAT_1,FINSEQ_2,FUNCOP_1,TARSKI,ZFMISC_1,FUNCT_5,PARTFUN1,SETFAM_1,FINSEQ_4,MCART_1,FUNCT_6,ORDINAL1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,MCART_1,SETFAM_1,FUNCT_2,BINOP_1,PARTFUN1,FUNCT_3,WELLORD2,FUNCOP_1,FUNCT_4,FUNCT_5,ORDINAL1,CARD_3,CKB18,CKB24,CKB25,CKB26,CKB33,CKB35,CKB43;
definitions TARSKI,FUNCT_1,WELLORD2,XBOOLE_0,BINOP_1,FUNCOP_1,CKB18,CKB24,CKB25,CKB26,CKB33,CKB35,CKB43;
theorems TARSKI,ENUMSET1,ZFMISC_1,MCART_1,FUNCT_1,SETFAM_1,FUNCT_2,FUNCT_3,FUNCOP_1,CARD_1,CARD_3,FUNCT_4,FUNCT_5,PARTFUN1,WELLORD2,RELAT_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52;
schemes FUNCT_1,PARTFUN1,CARD_3,CLASSES1,XBOOLE_0;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,ORDINAL1,RELSET_1;
constructors ENUMSET1,SETFAM_1,PARTFUN1,WELLORD2,BINOP_1,FUNCT_3,FUNCOP_1,FUNCT_4,FUNCT_5,CARD_3,RELSET_1,CKB18,CKB24,CKB25,CKB26,CKB33,CKB35,CKB43;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve x for set;
reserve y for set;
reserve a for set;
reserve X for set;
reserve f for Function;
reserve g for Function;
reserve h for Function;
reserve f1 for Function;
theorem
Th69: (((( dom f ) = X & ( dom g ) = X) & (for x holds (x in X implies ( f . x ),( g . x ) are_equipotent ))) implies ( product f ),( product g ) are_equipotent )
proof
assume that
A1: ( dom f ) = X
and
A2: ( dom g ) = X
and
A3: (for x holds (x in X implies ( f . x ),( g . x ) are_equipotent ));
defpred P[ set,set ]
 means
(ex f1 st ((($2 = f1 & f1 is  one-to-one) & ( dom f1 ) = ( f . $1 )) & ( rng f1 ) = ( g . $1 )));
A4: (for x holds (x in X implies (ex y st P[ x,y ])))
proof
let x;
assume x in X;
then ( f . x ),( g . x ) are_equipotent  by A3;
then (ex h st ((h is  one-to-one & ( dom h ) = ( f . x )) & ( rng h ) = ( g . x ))) by WELLORD2:def 4;
hence thesis;
end;
consider h such that A5: (( dom h ) = X & (for x holds (x in X implies P[ x,( h . x ) ]))) from CLASSES1:sch 1(A4);
A6:now
let x;
assume A7: x in X;
then (ex f1 st (((( h . x ) = f1 & f1 is  one-to-one) & ( dom f1 ) = ( f . x )) & ( rng f1 ) = ( g . x ))) by A5;
hence ( ( rngs h ) . x ) = ( g . x ) by A5,A7,CKB27:1;
end;
now
let x;
assume x in ( rng h );
then consider a such that A8: (a in X & x = ( h . a )) by A5,FUNCT_1:def 3;
(ex f1 st (((x = f1 & f1 is  one-to-one) & ( dom f1 ) = ( f . a )) & ( rng f1 ) = ( g . a ))) by A5,A8;
hence x is Function;
end;
then ( SubFuncs ( rng h ) ) = ( rng h ) by CKB21:1;
then A9: ( h " ( SubFuncs ( rng h ) ) ) = X by A5,RELAT_1:134;
then ( dom ( rngs h ) ) = X by CKB25:def 1;
then A10: ( rngs h ) = g by A2,A6,FUNCT_1:2;
A11:now
let x;
assume A12: x in X;
then (ex f1 st (((( h . x ) = f1 & f1 is  one-to-one) & ( dom f1 ) = ( f . x )) & ( rng f1 ) = ( g . x ))) by A5;
hence ( ( doms h ) . x ) = ( f . x ) by A5,A12,CKB27:1;
end;
( dom ( doms h ) ) = X by A9,CKB24:def 1;
then A13: ( doms h ) = f by A1,A11,FUNCT_1:2;
now
per cases ;
suppose ( {} ) in ( rng h );

then consider x such that A14: x in X and A15: ( {} ) = ( h . x ) by A5,FUNCT_1:def 3;
A16: (ex f1 st (((( {} ) = f1 & f1 is  one-to-one) & ( dom f1 ) = ( f . x )) & ( rng f1 ) = ( g . x ))) by A5,A14,A15;
then ( {} ) in ( rng f ) by A1,A14,FUNCT_1:def 3,RELAT_1:38;
then A17: ( product f ) = ( {} ) by CARD_3:26;
( {} ) in ( rng g ) by A2,A14,A16,FUNCT_1:def 3,RELAT_1:38;
hence thesis by A17,CARD_3:26;
end;
suppose A18: (not ( {} ) in ( rng h ));

A19:now
let f1;
assume f1 in ( rng h );
then consider x such that A20: x in X and A21: f1 = ( h . x ) by A5,FUNCT_1:def 3;
(ex f1 st (((( h . x ) = f1 & f1 is  one-to-one) & ( dom f1 ) = ( f . x )) & ( rng f1 ) = ( g . x ))) by A5,A20;
hence f1 is  one-to-one by A21;
end;
thus thesis
proof
take ( Frege h );
thus thesis by A13,A10,A18,A19,CKB43:def 1,CKB48:1,CKB49:1;
end;

end;
end;
hence thesis;
end;
