environ
vocabularies NUMBERS,SUBSET_1,EUCLID,FINSEQ_1,PRE_TOPC,XREAL_0,ORDINAL1,NAT_1,ARYTM_3,RLTOPSP1,FINSEQ_5,XXREAL_0,RELAT_1,PARTFUN1,CARD_1,XBOOLE_0,RFINSEQ,ARYTM_1,ORDINAL4,FINSEQ_4,TOPREAL1,STRUCT_0,TARSKI,MCART_1,FUNCT_1,ZFMISC_1,TOPREAL4,XXREAL_1,RCOMP_1,BORSUK_1,TOPS_2,ORDINAL2,SPPOL_2;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,XXREAL_0,NAT_1,FUNCT_1,PARTFUN1,FINSEQ_1,ZFMISC_1,FINSEQ_4,RFINSEQ,STRUCT_0,PRE_TOPC,COMPTS_1,TOPS_2,RLTOPSP1,EUCLID,BORSUK_1,TOPREAL1,TOPREAL4,FINSEQ_5;
definitions TARSKI,TOPREAL1,TOPREAL4,XBOOLE_0;
theorems TARSKI,ENUMSET1,ZFMISC_1,NAT_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,TOPS_2,HEINE,TOPMETR,COMPTS_1,RFINSEQ,EUCLID,TOPREAL1,TOPREAL3,TOPREAL4,GOBOARD1,FINSEQ_5,RELAT_1,PARTFUN2,INT_1,XBOOLE_0,XBOOLE_1,SPPOL_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,CARD_1,RLTOPSP1,SEQ_4,NAT_D,SUBSET_1,CKB1;
schemes FINSEQ_2;
registrations XBOOLE_0,RELAT_1,ORDINAL1,XXREAL_0,XREAL_0,MEMBERED,FINSEQ_1,FINSEQ_5,STRUCT_0,PRE_TOPC,EUCLID,TOPREAL1,NAT_1,INT_1,CARD_1,RLTOPSP1,SPPOL_1;
constructors XXREAL_0,NAT_1,FINSEQ_4,ZFMISC_1,RFINSEQ,BINARITH,FINSEQ_5,TOPS_2,COMPTS_1,TOPMETR,TOPREAL1,TOPREAL4,REAL_1,CONVEX1;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve f for (FinSequence of ( TOP-REAL 2 ));
reserve i for (Element of ( NAT ));
reserve j for (Element of ( NAT ));
theorem
Th2: (for i,j being Nat holds (( i + j ) = ( len f ) implies ( LSeg (f,i) ) = ( LSeg (( Rev f ),j) )))
proof
let i being Nat;
let j being Nat;
assume A1: ( i + j ) = ( len f );
per cases ;
suppose that A2: 1 <= i
and
A3: ( i + 1 ) <= ( len f );
A4: ( i + ( j + 1 ) ) = ( ( len f ) + 1 ) by A1;
A5: i in ( dom f ) by A2,A3,SEQ_4:134;
then ( j + 1 ) in ( dom ( Rev f ) ) by A4,FINSEQ_5:59;
then A6: ( j + 1 ) <= ( len ( Rev f ) ) by FINSEQ_3:25;
A7: ( ( i + 1 ) + j ) = ( ( len f ) + 1 ) by A1;
A8: ( i + 1 ) in ( dom f ) by A2,A3,SEQ_4:134;
then j in ( dom ( Rev f ) ) by A7,FINSEQ_5:59;
then A9: 1 <= j by FINSEQ_3:25;
thus ( LSeg (f,i) ) = ( LSeg (( f /. i ),( f /. ( i + 1 ) )) ) by A2,A3,TOPREAL1:def 3
.= ( LSeg (( ( Rev f ) /. ( j + 1 ) ),( f /. ( i + 1 ) )) ) by A5,A4,FINSEQ_5:66
.= ( LSeg (( ( Rev f ) /. j ),( ( Rev f ) /. ( j + 1 ) )) ) by A8,A7,FINSEQ_5:66
.= ( LSeg (( Rev f ),j) ) by A6,A9,TOPREAL1:def 3;
end;
suppose A10: (not 1 <= i);

then i = ( 0 ) by NAT_1:14;
then (not ( j + 1 ) <= ( len f )) by A1,NAT_1:13;
then A11: (not ( j + 1 ) <= ( len ( Rev f ) )) by FINSEQ_5:def 3;
( LSeg (f,i) ) = ( {} ) by A10,TOPREAL1:def 3;
hence thesis by A11,TOPREAL1:def 3;
end;
suppose A12: (not ( i + 1 ) <= ( len f ));

then A13: ( LSeg (f,i) ) = ( {} ) by TOPREAL1:def 3;
j < 1 by A1,A12,XREAL_1:6;
hence thesis by A13,TOPREAL1:def 3;
end;
end;
