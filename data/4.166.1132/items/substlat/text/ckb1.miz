environ
vocabularies SUBSET_1,FINSUB_1,PARTFUN1,FINSET_1,TARSKI,XBOOLE_0,NORMFORM,FUNCT_1,ORDINAL4,FUNCT_4,STRUCT_0,LATTICES,BINOP_1,EQREL_1,XXREAL_2,SUBSTLAT;
notations TARSKI,XBOOLE_0,SUBSET_1,FINSET_1,FINSUB_1,BINOP_1,STRUCT_0,FUNCT_1,PARTFUN1,LATTICES,FUNCT_4;
definitions TARSKI,LATTICES,XBOOLE_0;
theorems ZFMISC_1,TARSKI,FINSUB_1,FINSET_1,FUNCT_4,PARTFUN1,BINOP_1,LATTICES,LATTICE2,XBOOLE_0,XBOOLE_1,RELSET_1;
schemes FRAENKEL,BINOP_1;
registrations XBOOLE_0,RELSET_1,PARTFUN1,FINSET_1,FINSUB_1,LATTICES,FUNCT_1;
constructors PARTFUN1,BINOP_1,FUNCT_4,FINSET_1,FINSUB_1,LATTICES,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve V for set;
reserve C for set;
definition
let V;
let C;
func SubstitutionSet (V,C) -> (Subset of ( Fin ( PFuncs (V,C) ) )) equals 
{ A where A is (Element of ( Fin ( PFuncs (V,C) ) )): ((for u being set holds (u in A implies u is  finite)) & (for s,t being (Element of ( PFuncs (V,C) )) holds (((s in A & t in A) & s c= t) implies s = t))) };
coherence
proof
set IT = { A where A is (Element of ( Fin ( PFuncs (V,C) ) )): ((for u being set holds (u in A implies u is  finite)) & (for s,t being (Element of ( PFuncs (V,C) )) holds (((s in A & t in A) & s c= t) implies s = t))) };
IT c= ( Fin ( PFuncs (V,C) ) )
proof
let x being set;
assume x in IT;
then (ex B being (Element of ( Fin ( PFuncs (V,C) ) )) st ((B = x & (for u being set holds (u in B implies u is  finite))) & (for s,t being (Element of ( PFuncs (V,C) )) holds (((s in B & t in B) & s c= t) implies s = t))));
hence thesis;
end;
hence thesis;
end;
end;
