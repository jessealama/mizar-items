environ
vocabularies RELAT_2,ALTCAT_1,XBOOLE_0,MSUALG_6,FUNCTOR0,CAT_1,FUNCT_1,PZFMISC1,NATTRA_1,PBOOLE,STRUCT_0,SUBSET_1,REALSET1,RELAT_1,FUNCT_2,CARD_3,CAT_2,ZFMISC_1,TARSKI,FUNCTOR2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCTOR0,MCART_1,DOMAIN_1,RELAT_1,STRUCT_0,CARD_3,FUNCT_1,PBOOLE,FUNCT_2,BINOP_1,MULTOP_1,ALTCAT_1,CKB7,CKB9,CKB10,CKB11,CKB12,CKB18,CKB22,CKB23,CKB24;
definitions ALTCAT_1,BINOP_1,CKB7,CKB9,CKB10,CKB11,CKB12,CKB18,CKB22,CKB24;
theorems MCART_1,MULTOP_1,FUNCT_2,ZFMISC_1,ALTCAT_1,PBOOLE,BINOP_1,TARSKI,ALTCAT_2,FUNCTOR0,CARD_3,XBOOLE_0,PARTFUN1,RELAT_1,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB24,CKB25,CKB26,CKB27;
schemes TARSKI,PBOOLE,MSSUBFAM,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,ALTCAT_1,FUNCTOR0,PBOOLE,FUNCT_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5;
constructors DOMAIN_1,CARD_3,FUNCTOR0,RELSET_1,CKB7,CKB9,CKB10,CKB11,CKB12,CKB18,CKB22,CKB23,CKB24;
requirements SUBSET,BOOLE;
begin
definition
let I being set;
let A being (ManySortedSet of I);
let B being (ManySortedSet of I);
func Funcs (A,B) -> set
means
:Def9: (for x being set holds (x in it iff x is (ManySortedFunction of A,B))) if (for i being set holds (i in I implies (( B . i ) = ( {} ) implies ( A . i ) = ( {} )))) otherwise it = ( {} );
existence
proof
thus ((for i being set holds (i in I implies (( B . i ) = ( {} ) implies ( A . i ) = ( {} )))) implies (ex IT being set st (for x being set holds (x in IT iff x is (ManySortedFunction of A,B)))))
proof
deffunc F(set) = ( Funcs (( A . $1 ),( B . $1 )) );
assume A1: (for i being set holds (i in I implies (( B . i ) = ( {} ) implies ( A . i ) = ( {} ))));
consider F being (ManySortedSet of I) such that A2: (for i being set holds (i in I implies ( F . i ) = F(i))) from PBOOLE:sch 4;
take ( product F );
let x being set;
thus (x in ( product F ) implies x is (ManySortedFunction of A,B))
proof
assume x in ( product F );
then consider g being Function such that A3: x = g and A4: ( dom g ) = ( dom F ) and A5: (for i being set holds (i in ( dom F ) implies ( g . i ) in ( F . i ))) by CARD_3:def 5;
A6: (for i being set holds (i in I implies ( g . i ) is (Function of ( A . i ),( B . i ))))
proof
let i being set;
assume that
A7: i in I;
(( dom F ) = I & ( F . i ) = ( Funcs (( A . i ),( B . i )) )) by A2,A7,PARTFUN1:def 2;
hence thesis by A5,A7,FUNCT_2:66;
end;
( dom F ) = I by PARTFUN1:def 2;
then reconsider g as (ManySortedSet of I) by A4,PARTFUN1:def 2,RELAT_1:def 18;
g is (ManySortedFunction of A,B) by A6,PBOOLE:def 15;
hence thesis by A3;
end;

assume A8: x is (ManySortedFunction of A,B);
then reconsider g = x as (ManySortedSet of I);
A9: (for i being set holds (i in I implies ( g . i ) in ( Funcs (( A . i ),( B . i )) )))
proof
let i being set;
assume A10: i in I;
then A11: (( B . i ) = ( {} ) implies ( A . i ) = ( {} )) by A1;
( g . i ) is (Function of ( A . i ),( B . i )) by A8,A10,PBOOLE:def 15;
hence thesis by A11,FUNCT_2:8;
end;
A12: (for i being set holds (i in I implies ( g . i ) in ( F . i )))
proof
let i being set;
assume A13: i in I;
then ( F . i ) = ( Funcs (( A . i ),( B . i )) ) by A2;
hence thesis by A9,A13;
end;
A14: (for i being set holds (i in ( dom F ) implies ( g . i ) in ( F . i )))
proof
A15: ( dom F ) = I by PARTFUN1:def 2;
let i being set;
assume i in ( dom F );
hence thesis by A12,A15;
end;
( dom g ) = I by PARTFUN1:def 2;
then ( dom g ) = ( dom F ) by PARTFUN1:def 2;
hence thesis by A14,CARD_3:def 5;
end;

thus thesis;
end;
uniqueness
proof
let it1 being set,it2 being set;
hereby
assume (for i being set holds (i in I implies (( B . i ) = ( {} ) implies ( A . i ) = ( {} ))));
assume that
A16: (for x being set holds (x in it1 iff x is (ManySortedFunction of A,B)))
and
A17: (for x being set holds (x in it2 iff x is (ManySortedFunction of A,B)));
now
let x being set;
(x in it1 iff x is (ManySortedFunction of A,B)) by A16;
hence (x in it1 iff x in it2) by A17;
end;
hence it1 = it2 by TARSKI:1;
end;
thus thesis;
end;
consistency;
end;
