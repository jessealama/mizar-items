environ
vocabularies RELAT_2,ALTCAT_1,XBOOLE_0,MSUALG_6,FUNCTOR0,CAT_1,FUNCT_1,PZFMISC1,NATTRA_1,PBOOLE,STRUCT_0,SUBSET_1,REALSET1,RELAT_1,FUNCT_2,CARD_3,CAT_2,ZFMISC_1,TARSKI,FUNCTOR2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCTOR0,MCART_1,DOMAIN_1,RELAT_1,STRUCT_0,CARD_3,FUNCT_1,PBOOLE,FUNCT_2,BINOP_1,MULTOP_1,ALTCAT_1,CKB7,CKB9,CKB10,CKB11,CKB12,CKB18,CKB22,CKB23,CKB24,CKB28;
definitions ALTCAT_1,BINOP_1,CKB7,CKB9,CKB10,CKB11,CKB12,CKB18,CKB22,CKB24,CKB28;
theorems MCART_1,MULTOP_1,FUNCT_2,ZFMISC_1,ALTCAT_1,PBOOLE,BINOP_1,TARSKI,ALTCAT_2,FUNCTOR0,CARD_3,XBOOLE_0,PARTFUN1,RELAT_1,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes TARSKI,PBOOLE,MSSUBFAM,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,ALTCAT_1,FUNCTOR0,PBOOLE,FUNCT_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5;
constructors DOMAIN_1,CARD_3,FUNCTOR0,RELSET_1,CKB7,CKB9,CKB10,CKB11,CKB12,CKB18,CKB22,CKB23,CKB24,CKB28;
requirements SUBSET,BOOLE;
begin
definition
let A being  transitive  with_units non empty AltCatStr;
let B being  transitive  with_units non empty AltCatStr;
func Funct (A,B) -> set
means
:Def10: (for x being set holds (x in it iff x is  covariant  strict  covariant  strict (Functor of A,B)));
existence
proof
set A9 = ( Funcs ([: (the carrier of A),(the carrier of A) :],[: (the carrier of B),(the carrier of B) :]) );
set sAA = { ( (the Arrows of B) * f ) where f is (Element of A9): (not contradiction) };
set f = the (Element of A9);
( (the Arrows of B) * f ) in sAA;
then reconsider sAA as non empty set;
defpred R[ set,set ]
 means
(ex f being  Covariant (bifunction of (the carrier of A),(the carrier of B)) st (ex m being (MSUnTrans of f,(the Arrows of A),(the Arrows of B)) st (($1 = [ f,m ] & $2 = FunctorStr (# f,m #)) & $2 is  covariant  covariant (Functor of A,B))));
defpred P[ set,set ]
 means
(ex AA being (ManySortedSet of [: (the carrier of A),(the carrier of A) :]) st ($1 = AA & $2 = ( Funcs ((the Arrows of A),AA) )));
A1: (for x,y,z being set holds ((P[ x,y ] & P[ x,z ]) implies y = z));
consider XX being set such that A2: (for x being set holds (x in XX iff (ex y being set st (y in sAA & P[ y,x ])))) from TARSKI:sch 1(A1);
A3: (for x,y,z being set holds ((R[ x,y ] & R[ x,z ]) implies y = z))
proof
let x being set,y being set,z being set;
given f being  Covariant (bifunction of (the carrier of A),(the carrier of B)),m being (MSUnTrans of f,(the Arrows of A),(the Arrows of B)) such that
A4: x = [ f,m ]
and
A5: y = FunctorStr (# f,m #)
and
y is  covariant  covariant (Functor of A,B);

given f1 being  Covariant (bifunction of (the carrier of A),(the carrier of B)),m1 being (MSUnTrans of f1,(the Arrows of A),(the Arrows of B)) such that
A6: x = [ f1,m1 ]
and
A7: z = FunctorStr (# f1,m1 #)
and
z is  covariant  covariant (Functor of A,B);

f = f1 by A4,A6,ZFMISC_1:27;
hence thesis by A4,A5,A6,A7,ZFMISC_1:27;
end;
consider X being set such that A8: (for x being set holds (x in X iff (ex y being set st (y in [: A9,( union XX ) :] & R[ y,x ])))) from TARSKI:sch 1(A3);
take X;
let x being set;
thus (x in X implies x is  covariant  strict  covariant  strict (Functor of A,B))
proof
assume x in X;
then (ex y being set st (y in [: A9,( union XX ) :] & (ex f being  Covariant (bifunction of (the carrier of A),(the carrier of B)) st (ex m being (MSUnTrans of f,(the Arrows of A),(the Arrows of B)) st ((y = [ f,m ] & x = FunctorStr (# f,m #)) & x is  covariant  covariant (Functor of A,B)))))) by A8;
hence thesis;
end;

assume x is  covariant  strict  covariant  strict (Functor of A,B);
then reconsider F = x as  covariant  strict (Functor of A,B);
reconsider f = (the ObjectMap of F) as  Covariant (bifunction of (the carrier of A),(the carrier of B)) by FUNCTOR0:def 12;
reconsider m = (the MorphMap of F) as (MSUnTrans of f,(the Arrows of A),(the Arrows of B));
reconsider y = [ f,m ] as set;
A9: (for o1,o2 being (object of A) holds (( (the Arrows of A) . (o1,o2) ) <> ( {} ) implies ( (the Arrows of B) . ( f . (o1,o2) ) ) <> ( {} )))
proof
let o1 being (object of A),o2 being (object of A);
assume that
A10: ( (the Arrows of A) . (o1,o2) ) <> ( {} );
( (the Arrows of A) . (o1,o2) ) = <^ o1,o2 ^>;
hence thesis by A10,FUNCTOR0:def 11;
end;
A11: (for o1,o2 being (object of A) holds (( (the Arrows of A) . (o1,o2) ) <> ( {} ) implies ( (the Arrows of B) . [ ( F . o1 ),( F . o2 ) ] ) <> ( {} )))
proof
let o1 being (object of A),o2 being (object of A);
assume that
A12: ( (the Arrows of A) . (o1,o2) ) <> ( {} );
( f . (o1,o2) ) = [ ( F . o1 ),( F . o2 ) ] by FUNCTOR0:22;
hence thesis by A9,A12;
end;
y in [: A9,( union XX ) :]
proof
set I = [: (the carrier of A),(the carrier of A) :];
reconsider AA = ( (the Arrows of B) * f ) as (ManySortedSet of [: (the carrier of A),(the carrier of A) :]);
A13: (for i being set holds ((i in I & ( (the Arrows of A) . i ) <> ( {} )) implies ( (the Arrows of B) . ( f . i ) ) <> ( {} )))
proof
let i being set;
assume that
A14: i in I
and
A15: ( (the Arrows of A) . i ) <> ( {} );
consider o1 being set,o2 being set such that A16: (o1 in (the carrier of A) & o2 in (the carrier of A)) and A17: i = [ o1,o2 ] by A14,ZFMISC_1:def 2;
reconsider a1 = o1,a2 = o2 as (object of A) by A16;
A18: ( (the Arrows of B) . ( f . i ) ) = ( (the Arrows of B) . ( f . (o1,o2) ) ) by A17
.= ( (the Arrows of B) . [ ( F . a1 ),( F . a2 ) ] ) by FUNCTOR0:22;
( (the Arrows of A) . (o1,o2) ) <> ( {} ) by A15,A17;
hence thesis by A11,A18;
end;
(for i being set holds (i in I implies (( (the Arrows of A) . i ) <> ( {} ) implies ( AA . i ) <> ( {} ))))
proof
let i being set;
assume that
A19: i in I;
assume A20: ( (the Arrows of A) . i ) <> ( {} );
( AA . i ) = ( (the Arrows of B) . ( f . i ) ) by A19,FUNCT_2:15;
hence thesis by A13,A19,A20;
end;
then (m is (ManySortedFunction of (the Arrows of A),AA) & (for i being set holds (i in I implies (( AA . i ) = ( {} ) implies ( (the Arrows of A) . i ) = ( {} ))))) by FUNCTOR0:def 4;
then A21: m in ( Funcs ((the Arrows of A),AA) ) by CKB28:def 1;
A22: f in A9 by FUNCT_2:8;
then ( (the Arrows of B) * f ) in sAA;
then ( Funcs ((the Arrows of A),AA) ) in XX by A2;
then m in ( union XX ) by A21,TARSKI:def 4;
hence thesis by A22,ZFMISC_1:def 2;
end;
hence thesis by A8;
end;
uniqueness
proof
let it1 being set,it2 being set;
assume that
A23: (for x being set holds (x in it1 iff x is  covariant  strict  covariant  strict (Functor of A,B)))
and
A24: (for x being set holds (x in it2 iff x is  covariant  strict  covariant  strict (Functor of A,B)));
now
let x being set;
(x in it1 iff x is  covariant  strict  covariant  strict (Functor of A,B)) by A23;
hence (x in it1 iff x in it2) by A24;
end;
hence thesis by TARSKI:1;
end;
end;
