environ
vocabularies NUMBERS,SUBSET_1,XREAL_0,ORDINAL1,SEQ_1,CARD_1,ARYTM_3,XXREAL_0,ARYTM_1,COMPLEX1,ORDINAL2,REAL_1,SEQ_4,RELAT_1,FUNCT_1,TARSKI,XXREAL_2,XBOOLE_0,SUPINF_2,PARTFUN3,NAT_1,VALUED_1,VALUED_0,SEQ_2,RINFSUP1,MEMBER_1;
notations ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,NAT_1,COMPLEX1,TARSKI,XXREAL_2,VALUED_0,SEQ_4,XBOOLE_0,SUBSET_1,SEQ_2,RELSET_1,FUNCT_2,LIMFUNC1,MEASURE6,VALUED_1,SEQ_1,PARTFUN3,MEMBER_1,CKB3,CKB4;
definitions TARSKI,XBOOLE_0,PARTFUN3,VALUED_1,XXREAL_2,CKB3,CKB4;
theorems FUNCT_1,FUNCT_2,SEQ_1,SEQ_2,NAT_1,TARSKI,XBOOLE_0,XREAL_0,SEQ_4,SEQM_3,SETLIM_1,LIMFUNC1,PREPOWER,PARTFUN3,XREAL_1,XXREAL_0,ORDINAL1,RELAT_1,XXREAL_2,VALUED_0,MEASURE6,MEMBERED,MEMBER_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
schemes FUNCT_2,NAT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,VALUED_0,VALUED_1,FUNCT_2,SEQ_2,SEQ_4,RFUNCT_1,MEASURE6,MEMBER_1;
constructors REAL_1,NAT_1,COMPLEX1,SEQM_3,LIMFUNC1,PARTFUN3,PARTFUN1,SEQ_1,XXREAL_2,SEQ_4,RELSET_1,BINOP_2,SEQ_2,MEASURE6,MEMBER_1,SQUARE_1,CKB3,CKB4;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve r for  real number;
reserve r1 for  real number;
reserve r2 for  real number;
reserve s for  real number;
reserve seq for Real_Sequence;
theorem
Th8: (seq is  bounded_below implies (r = ( lower_bound seq ) iff ((for n holds r <= ( seq . n )) & (for s holds (( 0 ) < s implies (ex k st ( seq . k ) < ( r + s )))))))
proof
set R = ( rng seq );
assume seq is  bounded_below;
then A1: ( rng seq ) is  bounded_below by CKB9:1;
A2: ( rng seq ) <> ( {} ) by RELAT_1:41;
A3: (((for n holds r <= ( seq . n )) & (for s holds (( 0 ) < s implies (ex k st ( seq . k ) < ( r + s ))))) implies r = ( lower_bound seq ))
proof
assume that
A4: (for n holds r <= ( seq . n ))
and
A5: (for s holds (( 0 ) < s implies (ex k st ( seq . k ) < ( r + s ))));
A6:now
let s;
assume ( 0 ) < s;
then consider k such that A7: ( seq . k ) < ( r + s ) by A5;
consider r2 such that A8: (r2 in R & r2 = ( seq . k )) by FUNCT_2:4;
take r2;
thus (r2 in R & r2 < ( r + s )) by A7,A8;
end;
now
let r1;
assume r1 in R;
then (ex n being set st (n in ( dom seq ) & ( seq . n ) = r1)) by FUNCT_1:def 3;
hence r <= r1 by A4;
end;
hence thesis by A1,A2,A6,SEQ_4:def 2;
end;
(r = ( lower_bound seq ) implies ((for n holds r <= ( seq . n )) & (for s holds (( 0 ) < s implies (ex k st ( seq . k ) < ( r + s ))))))
proof
assume A9: r = ( lower_bound seq );
A10:now
let s;
assume ( 0 ) < s;
then consider r2 such that A11: r2 in R and A12: r2 < ( r + s ) by A1,A2,A9,SEQ_4:def 2;
consider k such that A13: r2 = ( seq . k ) by A11,SETLIM_1:4;
take k;
thus ( seq . k ) < ( r + s ) by A12,A13;
end;
now
let n;
( seq . n ) in R by FUNCT_2:4;
hence r <= ( seq . n ) by A1,A9,SEQ_4:def 2;
end;
hence thesis by A10;
end;
hence thesis by A3;
end;
