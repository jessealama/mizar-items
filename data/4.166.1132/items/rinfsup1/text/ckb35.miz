environ
vocabularies NUMBERS,SUBSET_1,XREAL_0,ORDINAL1,SEQ_1,CARD_1,ARYTM_3,XXREAL_0,ARYTM_1,COMPLEX1,ORDINAL2,REAL_1,SEQ_4,RELAT_1,FUNCT_1,TARSKI,XXREAL_2,XBOOLE_0,SUPINF_2,PARTFUN3,NAT_1,VALUED_1,VALUED_0,SEQ_2,RINFSUP1,MEMBER_1;
notations ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,NAT_1,COMPLEX1,TARSKI,XXREAL_2,VALUED_0,SEQ_4,XBOOLE_0,SUBSET_1,SEQ_2,RELSET_1,FUNCT_2,LIMFUNC1,MEASURE6,VALUED_1,SEQ_1,PARTFUN3,MEMBER_1,CKB3,CKB4,CKB20,CKB21;
definitions TARSKI,XBOOLE_0,PARTFUN3,VALUED_1,XXREAL_2,CKB3,CKB4,CKB21;
theorems FUNCT_1,FUNCT_2,SEQ_1,SEQ_2,NAT_1,TARSKI,XBOOLE_0,XREAL_0,SEQ_4,SEQM_3,SETLIM_1,LIMFUNC1,PREPOWER,PARTFUN3,XREAL_1,XXREAL_0,ORDINAL1,RELAT_1,XXREAL_2,VALUED_0,MEASURE6,MEMBERED,MEMBER_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34;
schemes FUNCT_2,NAT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,VALUED_0,VALUED_1,FUNCT_2,SEQ_2,SEQ_4,RFUNCT_1,MEASURE6,MEMBER_1;
constructors REAL_1,NAT_1,COMPLEX1,SEQM_3,LIMFUNC1,PARTFUN3,PARTFUN1,SEQ_1,XXREAL_2,SEQ_4,RELSET_1,BINOP_2,SEQ_2,MEASURE6,MEMBER_1,SQUARE_1,CKB3,CKB4;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve k1 for (Element of ( NAT ));
reserve k2 for (Element of ( NAT ));
reserve seq for Real_Sequence;
reserve x for set;
reserve y for set;
theorem
Th30: ( rng ( seq ^\ k ) ) = { ( seq . n ): k <= n }
proof
set seq1 = ( seq ^\ k );
set Z = { ( seq . m ): k <= m };
now
let x;
assume x in Z;
then consider k1 being (Element of ( NAT )) such that A1: x = ( seq . k1 ) and A2: k <= k1;
consider k2 being Nat such that A3: k1 = ( k + k2 ) by A2,NAT_1:10;
reconsider k2 as (Element of ( NAT )) by ORDINAL1:def 12;
x = ( seq1 . k2 ) by A1,A3,NAT_1:def 3;
hence x in ( rng seq1 ) by FUNCT_2:4;
end;
then A4: Z c= ( rng seq1 ) by TARSKI:def 3;
A5: ( dom seq1 ) = ( NAT ) by FUNCT_2:def 1;
now
let y;
assume y in ( rng seq1 );
then consider m1 being set such that A6: m1 in ( NAT ) and A7: y = ( seq1 . m1 ) by A5,FUNCT_1:def 3;
reconsider m1 as (Element of ( NAT )) by A6;
y = ( seq . ( k + m1 ) ) by A7,NAT_1:def 3;
hence y in Z by SETLIM_1:1;
end;
then ( rng seq1 ) c= Z by TARSKI:def 3;
hence thesis by A4,XBOOLE_0:def 10;
end;
