environ
vocabularies GRAPH_1,STRUCT_0,FUNCT_1,PARTFUN1,ZFMISC_1,SUBSET_1,XBOOLE_0,CARD_1,FUNCOP_1,RELAT_1,TARSKI,ALGSTR_0,WELLORD1,CAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,NUMBERS,BINOP_1,FUNCOP_1,STRUCT_0,GRAPH_1,CKB1,CKB2,CKB3,CKB5,CKB6;
definitions TARSKI,FUNCOP_1,BINOP_1,GRAPH_1,CKB5,CKB6;
theorems TARSKI,FUNCT_1,FUNCT_2,PARTFUN1,FUNCOP_1,SUBSET_1,WELLORD2,RELAT_1,CKB5,CKB6;
schemes FUNCT_2;
registrations XBOOLE_0,FUNCT_1,RELSET_1,FUNCT_2,STRUCT_0,RELAT_1,CKB1,CKB4;
constructors PARTFUN1,WELLORD2,BINOP_1,PBOOLE,GRAPH_1,RELSET_1,CKB1,CKB5,CKB6;
requirements SUBSET,BOOLE;
begin
reserve C for CatStr;
definition
let C being non  void non  empty CatStr;
let a being (Object of C);
let b being (Object of C);
func Hom (a,b) -> (Subset of (the carrier' of C)) equals 
{ f where f is (Morphism of C): (( dom f ) = a & ( cod f ) = b) };
correctness
proof
set M = { f where f is (Morphism of C): (( dom f ) = a & ( cod f ) = b) };
M c= (the carrier' of C)
proof
let x being set;
assume x in M;
then (ex f being (Morphism of C) st ((x = f & ( dom f ) = a) & ( cod f ) = b));
hence thesis;
end;
hence thesis;
end;
end;
