environ
vocabularies GRAPH_1,STRUCT_0,FUNCT_1,PARTFUN1,ZFMISC_1,SUBSET_1,XBOOLE_0,CARD_1,FUNCOP_1,RELAT_1,TARSKI,ALGSTR_0,WELLORD1,CAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,NUMBERS,BINOP_1,FUNCOP_1,STRUCT_0,GRAPH_1,CKB1,CKB2,CKB3,CKB5,CKB6,CKB7,CKB10,CKB18,CKB20,CKB22,CKB35,CKB36,CKB37,CKB40,CKB44;
definitions TARSKI,FUNCOP_1,BINOP_1,GRAPH_1,CKB5,CKB6,CKB7,CKB10,CKB18,CKB22,CKB35,CKB36,CKB37,CKB40;
theorems TARSKI,FUNCT_1,FUNCT_2,PARTFUN1,FUNCOP_1,SUBSET_1,WELLORD2,RELAT_1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB45,CKB46,CKB47;
schemes FUNCT_2;
registrations XBOOLE_0,FUNCT_1,RELSET_1,FUNCT_2,STRUCT_0,RELAT_1,CKB1,CKB4,CKB19;
constructors PARTFUN1,WELLORD2,BINOP_1,PBOOLE,GRAPH_1,RELSET_1,CKB1,CKB5,CKB6,CKB7,CKB10,CKB18,CKB22,CKB35,CKB36,CKB37,CKB40,CKB44;
requirements SUBSET,BOOLE;
begin
reserve C for Category;
reserve a for (Object of C);
reserve b for (Object of C);
reserve c for (Object of C);
reserve f1 for (Morphism of a,b);
reserve f2 for (Morphism of a,b);
reserve g for (Morphism of b,c);
theorem
Th60: (( Hom (b,c) ) <> ( {} ) implies (g is  monic iff (for a holds (for f1,f2 being (Morphism of a,b) holds ((( Hom (a,b) ) <> ( {} ) & ( g * f1 ) = ( g * f2 )) implies f1 = f2)))))
proof
assume A1: ( Hom (b,c) ) <> ( {} );
thus (g is  monic implies (for a holds (for f1,f2 being (Morphism of a,b) holds ((( Hom (a,b) ) <> ( {} ) & ( g * f1 ) = ( g * f2 )) implies f1 = f2))))
proof
assume A2: (for f1,f2 being (Morphism of C) holds ((((( dom f1 ) = ( dom f2 ) & ( cod f1 ) = ( dom g )) & ( cod f2 ) = ( dom g )) & ( g * f1 ) = ( g * f2 )) implies f1 = f2));
let a;
let f1 being (Morphism of a,b);
let f2 being (Morphism of a,b);
assume A3: ( Hom (a,b) ) <> ( {} );
then A4: (( dom f1 ) = a & ( dom f2 ) = a) by CKB13:1;
A5: ( dom g ) = b by A1,CKB13:1;
A6: (( cod f1 ) = b & ( cod f2 ) = b) by A3,CKB13:1;
(( g * f2 ) = ( g * (f2 qua (Morphism of C)) ) & ( g * f1 ) = ( g * (f1 qua (Morphism of C)) )) by A1,A3,CKB40:def 1;
hence thesis by A2,A4,A6,A5;
end;

assume A7: (for f1,f2 being (Morphism of a,b) holds ((( Hom (a,b) ) <> ( {} ) & ( g * f1 ) = ( g * f2 )) implies f1 = f2));
let f1 being (Morphism of C);
let f2 being (Morphism of C);
assume that
A8: ( dom f1 ) = ( dom f2 )
and
A9: ( cod f1 ) = ( dom g )
and
A10: ( cod f2 ) = ( dom g );
set a = ( dom f1 );
A11: ( dom g ) = b by A1,CKB13:1;
then reconsider f1 as (Morphism of a,b) by A9,CKB12:1;
reconsider f2 as (Morphism of a,b) by A8,A10,A11,CKB12:1;
A12: ( Hom (a,b) ) <> ( {} ) by A9,A11,CKB8:1;
then (( g * f2 ) = ( g * (f2 qua (Morphism of C)) ) & ( g * f1 ) = ( g * (f1 qua (Morphism of C)) )) by A1,CKB40:def 1;
hence thesis by A7,A12;
end;
