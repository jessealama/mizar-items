environ
vocabularies PBOOLE,FUNCT_6,RELAT_1,PARTFUN1,FUNCT_1,SETFAM_1,SUBSET_1,FINSET_1,XBOOLE_0,TARSKI,MEMBER_1,PZFMISC1,ZFMISC_1,FUNCT_4,FUNCOP_1,FUNCT_2,ORDINAL1,MSSUBFAM;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,FUNCT_2,FUNCOP_1,FINSET_1,FUNCT_4,FUNCT_6,PBOOLE,MBOOLEAN,PZFMISC1;
definitions XBOOLE_0,PBOOLE,FINSET_1,ORDINAL1,FUNCOP_1;
theorems FUNCOP_1,FINSET_1,ORDERS_1,FRAENKEL,FUNCT_2,FUNCT_4,FUNCT_6,MBOOLEAN,PBOOLE,FUNCT_1,PZFMISC1,SETFAM_1,TARSKI,RELSET_1,XBOOLE_0,XBOOLE_1,RELAT_1,PARTFUN1,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
schemes FUNCT_2,PBOOLE,CKB6;
registrations XBOOLE_0,FUNCT_1,FUNCOP_1,FINSET_1,PBOOLE,PRE_CIRC,MBOOLEAN,PZFMISC1,FUNCT_2,PARTFUN1,CARD_1,RELSET_1,CKB1,CKB2,CKB3,CKB4;
constructors SETFAM_1,FUNCT_4,FUNCT_6,MBOOLEAN,PZFMISC1,PARTFUN1,RELSET_1,ORDINAL1,PBOOLE,FINSET_1;
requirements SUBSET,BOOLE;
begin
reserve I for set;
reserve sf for (Subset-Family of I);
reserve sg for (Subset-Family of I);
reserve sh for (Subset-Family of I);
theorem
(sh = ( sf \/ sg ) implies ( Intersect sh ) = ( ( Intersect sf ) /\ ( Intersect sg ) ))
proof
assume A1: sh = ( sf \/ sg );
per cases ;
suppose (sf = ( {} ) & sg = ( {} ));

hence thesis by A1;
end;
suppose A2: (sf <> ( {} ) & sg = ( {} ));

hence ( Intersect sh ) = ( meet sf ) by A1,SETFAM_1:def 9
.= ( ( meet sf ) /\ I ) by XBOOLE_1:28
.= ( ( Intersect sf ) /\ I ) by A2,SETFAM_1:def 9
.= ( ( Intersect sf ) /\ ( Intersect sg ) ) by A2,SETFAM_1:def 9;
end;
suppose A3: (sf = ( {} ) & sg <> ( {} ));

hence ( Intersect sh ) = ( meet sg ) by A1,SETFAM_1:def 9
.= ( I /\ ( meet sg ) ) by XBOOLE_1:28
.= ( I /\ ( Intersect sg ) ) by A3,SETFAM_1:def 9
.= ( ( Intersect sf ) /\ ( Intersect sg ) ) by A3,SETFAM_1:def 9;
end;
suppose A4: (sf <> ( {} ) & sg <> ( {} ));

then A5: ( Intersect sg ) = ( meet sg ) by SETFAM_1:def 9;
(( Intersect sh ) = ( meet sh ) & ( Intersect sf ) = ( meet sf )) by A1,A4,SETFAM_1:def 9;
hence thesis by A1,A4,A5,SETFAM_1:9;
end;
end;
