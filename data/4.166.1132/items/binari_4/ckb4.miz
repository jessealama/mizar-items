environ
vocabularies NUMBERS,XBOOLE_0,NAT_1,INT_1,XXREAL_0,CARD_1,RELAT_1,ARYTM_3,POWER,EUCLID,FINSEQ_1,BINOP_2,ZFMISC_1,TARSKI,FUNCT_1,FINSEQ_2,MARGREL1,BINARITH,ARYTM_1,SUBSET_1,PARTFUN1,XBOOLEAN,BINARI_2,BINARI_3,FUNCOP_1,ORDINAL4,COMPLEX1,NEWTON,BINARI_4;
notations INT_1,SUBSET_1,XBOOLEAN,MARGREL1,FUNCOP_1,POWER,BINARITH,BINARI_2,BINARI_3,SERIES_1,NUMBERS,XXREAL_0,XBOOLE_0,NAT_1,NAT_D,BINOP_2,EUCLID,TARSKI,PARTFUN1,FUNCT_1,RELAT_1,ZFMISC_1,INT_2,FINSEQOP,NEWTON,FINSEQ_1,FINSEQ_2;
definitions FINSEQ_2,XBOOLEAN,EUCLID;
theorems POWER,NAT_1,PRE_FF,ABSVALUE,BINARI_3,INT_1,BINARITH,NAT_2,BINARI_2,FINSEQ_1,FINSEQ_2,FINSEQ_4,FUNCOP_1,RVSUM_1,FUNCT_2,ZFMISC_1,INT_3,EULER_2,PEPIN,PREPOWER,XREAL_1,XXREAL_0,XBOOLEAN,NAT_D,VALUED_1,XREAL_0,CARD_1,CKB1,CKB2,CKB3;
schemes NAT_1;
registrations XBOOLE_0,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,XBOOLEAN,MARGREL1,VALUED_0,FINSEQ_1,FINSEQ_2,RELAT_1,FUNCT_1,CARD_1;
constructors XXREAL_0,REAL_1,NAT_D,FINSEQOP,NEWTON,SERIES_1,BINARITH,BINARI_2,EUCLID,BINARI_3,RVSUM_1,RELSET_1;
requirements REAL,BOOLE,SUBSET,NUMERALS,ARITHM;
begin
theorem
Th4: (for k,m,l being Nat holds ((k <= l & l <= m) implies (k = l or (( k + 1 ) <= l & l <= m))))
proof
defpred P[ Nat ]
 means
(for m,l being Nat holds (($1 <= l & l <= m) implies ($1 = l or (( $1 + 1 ) <= l & l <= m))));
A1: (for k being Nat holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being Nat;
assume that
P[ k ];
let m being Nat,l being Nat;
assume that
A2: ( k + 1 ) <= l
and
A3: l <= m;
(( k + 1 ) = l or ( k + 1 ) < l) by A2,XXREAL_0:1;
hence thesis by A3,NAT_1:13;
end;
A4: P[ ( 0 ) ] by NAT_1:13;
thus (for k being Nat holds P[ k ]) from NAT_1:sch 2(A4,A1);
end;
