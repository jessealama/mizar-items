environ
vocabularies NUMBERS,XBOOLE_0,NAT_1,INT_1,XXREAL_0,CARD_1,RELAT_1,ARYTM_3,POWER,EUCLID,FINSEQ_1,BINOP_2,ZFMISC_1,TARSKI,FUNCT_1,FINSEQ_2,MARGREL1,BINARITH,ARYTM_1,SUBSET_1,PARTFUN1,XBOOLEAN,BINARI_2,BINARI_3,FUNCOP_1,ORDINAL4,COMPLEX1,NEWTON,BINARI_4;
notations INT_1,SUBSET_1,XBOOLEAN,MARGREL1,FUNCOP_1,POWER,BINARITH,BINARI_2,BINARI_3,SERIES_1,NUMBERS,XXREAL_0,XBOOLE_0,NAT_1,NAT_D,BINOP_2,EUCLID,TARSKI,PARTFUN1,FUNCT_1,RELAT_1,ZFMISC_1,INT_2,FINSEQOP,NEWTON,FINSEQ_1,FINSEQ_2;
definitions FINSEQ_2,XBOOLEAN,EUCLID;
theorems POWER,NAT_1,PRE_FF,ABSVALUE,BINARI_3,INT_1,BINARITH,NAT_2,BINARI_2,FINSEQ_1,FINSEQ_2,FINSEQ_4,FUNCOP_1,RVSUM_1,FUNCT_2,ZFMISC_1,INT_3,EULER_2,PEPIN,PREPOWER,XREAL_1,XXREAL_0,XBOOLEAN,NAT_D,VALUED_1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5;
schemes NAT_1;
registrations XBOOLE_0,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,XBOOLEAN,MARGREL1,VALUED_0,FINSEQ_1,FINSEQ_2,RELAT_1,FUNCT_1,CARD_1;
constructors XXREAL_0,REAL_1,NAT_D,FINSEQOP,NEWTON,SERIES_1,BINARITH,BINARI_2,EUCLID,BINARI_3,RVSUM_1,RELSET_1;
requirements REAL,BOOLE,SUBSET,NUMERALS,ARITHM;
begin
reserve n for non  empty Nat;
reserve k for Nat;
theorem
(for n being non  empty Nat holds (for x,y being (Tuple of n,( BOOLEAN )) holds ((x = ( 0* n ) & y = ( 0* n )) implies ( x + y ) = ( 0* n ))))
proof
let n being non  empty Nat;
let x being (Tuple of n,( BOOLEAN ));
let y being (Tuple of n,( BOOLEAN ));
assume that
A1: x = ( 0* n )
and
A2: y = ( 0* n );
(for k being Nat holds (k in ( Seg n ) implies ( ( x + y ) . k ) = ( ( 0* n ) . k )))
proof
let k being Nat;
assume that
A3: k in ( Seg n );
reconsider k as Nat;
A4: ( ( 0* n ) . k ) = ( FALSE ) by A3,FUNCOP_1:7;
A5: 1 <= k by A3,FINSEQ_1:1;
( len x ) = n by CARD_1:def 7;
then k <= ( len x ) by A3,FINSEQ_1:1;
then A6: ( y /. k ) = ( FALSE ) by A1,A2,A4,A5,FINSEQ_4:15;
( len ( carry (x,y) ) ) = n by CARD_1:def 7;
then k <= ( len ( carry (x,y) ) ) by A3,FINSEQ_1:1;
then A7: ( ( carry (x,y) ) /. k ) = ( ( carry (x,y) ) . k ) by A5,FINSEQ_4:15
.= ( FALSE ) by A1,A2,A4,CKB5:1;
( len ( x + y ) ) = n by CARD_1:def 7;
then k <= ( len ( x + y ) ) by A3,FINSEQ_1:1;
then ( ( x + y ) . k ) = ( ( x + y ) /. k ) by A5,FINSEQ_4:15
.= ( ( FALSE ) 'xor' ( FALSE ) ) by A1,A2,A3,A6,A7,BINARITH:def 5
.= ( FALSE );
hence thesis by A3,FUNCOP_1:7;
end;
hence thesis by A1,FINSEQ_2:119;
end;
