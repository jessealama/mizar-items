environ
vocabularies NUMBERS,XBOOLE_0,NAT_1,INT_1,XXREAL_0,CARD_1,RELAT_1,ARYTM_3,POWER,EUCLID,FINSEQ_1,BINOP_2,ZFMISC_1,TARSKI,FUNCT_1,FINSEQ_2,MARGREL1,BINARITH,ARYTM_1,SUBSET_1,PARTFUN1,XBOOLEAN,BINARI_2,BINARI_3,FUNCOP_1,ORDINAL4,COMPLEX1,NEWTON,BINARI_4;
notations INT_1,SUBSET_1,XBOOLEAN,MARGREL1,FUNCOP_1,POWER,BINARITH,BINARI_2,BINARI_3,SERIES_1,NUMBERS,XXREAL_0,XBOOLE_0,NAT_1,NAT_D,BINOP_2,EUCLID,TARSKI,PARTFUN1,FUNCT_1,RELAT_1,ZFMISC_1,INT_2,FINSEQOP,NEWTON,FINSEQ_1,FINSEQ_2,CKB21,CKB27;
definitions FINSEQ_2,XBOOLEAN,EUCLID,CKB21,CKB27;
theorems POWER,NAT_1,PRE_FF,ABSVALUE,BINARI_3,INT_1,BINARITH,NAT_2,BINARI_2,FINSEQ_1,FINSEQ_2,FINSEQ_4,FUNCOP_1,RVSUM_1,FUNCT_2,ZFMISC_1,INT_3,EULER_2,PEPIN,PREPOWER,XREAL_1,XXREAL_0,XBOOLEAN,NAT_D,VALUED_1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes NAT_1;
registrations XBOOLE_0,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,XBOOLEAN,MARGREL1,VALUED_0,FINSEQ_1,FINSEQ_2,RELAT_1,FUNCT_1,CARD_1;
constructors XXREAL_0,REAL_1,NAT_D,FINSEQOP,NEWTON,SERIES_1,BINARITH,BINARI_2,EUCLID,BINARI_3,RVSUM_1,RELSET_1,CKB21,CKB27;
requirements REAL,BOOLE,SUBSET,NUMERALS,ARITHM;
begin
reserve n for non  empty Nat;
reserve i for Integer;
theorem
(for i being Integer holds ((i <= ( ( 2 to_power ( n -' 1 ) ) - 1 ) & ( - ( 2 to_power ( n -' 1 ) ) ) <= i) implies ( Intval ( 2sComplement (n,i) ) ) = i))
proof
let i;
assume that
A1: i <= ( ( 2 to_power ( n -' 1 ) ) - 1 )
and
A2: ( - ( 2 to_power ( n -' 1 ) ) ) <= i;
A3: n >= 1 by NAT_1:14;
now
per cases ;
suppose i >= ( 0 );

then reconsider i as (Element of ( NAT )) by INT_1:3;
A4: ( 2sComplement (n,i) ) = ( n -BinarySequence ( abs i ) ) by CKB27:def 1
.= ( n -BinarySequence i ) by ABSVALUE:def 1;
( i + 1 ) <= ( ( ( 2 to_power ( n -' 1 ) ) - 1 ) + 1 ) by A1,XREAL_1:6;
then A5: i < ( 2 to_power ( n -' 1 ) ) by NAT_1:13;
n >= 1 by NAT_1:14;
then ( n - 1 ) >= ( 1 - 1 ) by XREAL_1:9;
then ( n -' 1 ) = ( n - 1 ) by XREAL_0:def 2;
then ( 2 to_power ( n -' 1 ) ) < ( 2 to_power n ) by POWER:39,XREAL_1:146;
then i < ( 2 to_power n ) by A5,XXREAL_0:2;
then A6: ( Absval ( n -BinarySequence i ) ) = i by BINARI_3:35;
1 <= n by NAT_1:14;
then n in ( Seg n ) by FINSEQ_1:1;
then ( ( n -BinarySequence i ) /. n ) = ( IFEQ (( ( i div ( 2 to_power ( n -' 1 ) ) ) mod 2 ),( 0 ),( FALSE ),( TRUE )) ) by BINARI_3:def 1
.= ( IFEQ (( ( 0 ) mod 2 ),( 0 ),( FALSE ),( TRUE )) ) by A5,NAT_D:27
.= ( IFEQ (( 0 ),( 0 ),( FALSE ),( TRUE )) ) by NAT_D:26
.= ( FALSE ) by FUNCOP_1:def 8;
hence thesis by A4,A6,BINARI_2:def 3;
end;
suppose A7: i < ( 0 );

A8: ( 2 to_power n ) >= ( 2 to_power ( n -' 1 ) ) by NAT_2:9,POWER:39;
then ( - ( 2 to_power n ) ) <= ( - ( 2 to_power ( n -' 1 ) ) ) by XREAL_1:24;
then ( - ( 2 to_power n ) ) <= i by A2,XXREAL_0:2;
then ( ( - ( 2 to_power n ) ) - i ) <= ( i - i ) by XREAL_1:9;
then ( - ( ( 2 to_power n ) + i ) ) <= ( 0 );
then ( ( 2 to_power n ) + i ) >= ( - ( 0 ) ) by XREAL_1:24;
then reconsider k = ( ( 2 to_power n ) + i ) as (Element of ( NAT )) by INT_1:3;
( abs i ) = ( - i ) by A7,ABSVALUE:def 1;
then ( abs i ) <= ( - ( - ( 2 to_power ( n -' 1 ) ) ) ) by A2,XREAL_1:24;
then ( MajP (n,( abs i )) ) = n by A8,CKB25:1,XXREAL_0:2;
then A9: ( 2sComplement (n,i) ) = ( n -BinarySequence ( abs k ) ) by A7,CKB27:def 1
.= ( n -BinarySequence k ) by ABSVALUE:def 1;
k < ( ( 2 to_power n ) + ( 0 ) ) by A7,XREAL_1:8;
then k < ( ( 2 to_power 1 ) * ( 2 to_power ( n -' 1 ) ) ) by NAT_1:14,NAT_2:10;
then k < ( 2 * ( 2 to_power ( n -' 1 ) ) ) by POWER:25;
then A10: k < ( ( 2 to_power ( n -' 1 ) ) + ( 2 to_power ( n -' 1 ) ) );
A11: ( ( 2 to_power n ) + i ) < ( ( 2 to_power n ) + ( 0 ) ) by A7,XREAL_1:6;
( ( 2 to_power n ) + ( - ( 2 to_power ( n -' 1 ) ) ) ) = ( ( 2 to_power n ) - ( 2 to_power ( n -' 1 ) ) )
.= ( ( ( 2 to_power 1 ) * ( 2 to_power ( n -' 1 ) ) ) - ( 2 to_power ( n -' 1 ) ) ) by NAT_1:14,NAT_2:10
.= ( ( 2 * ( 2 to_power ( n -' 1 ) ) ) - ( 2 to_power ( n -' 1 ) ) ) by POWER:25
.= ( 2 to_power ( n -' 1 ) );
then A12: k >= ( 2 to_power ( n -' 1 ) ) by A2,XREAL_1:6;
n in ( Seg n ) by A3,FINSEQ_1:1;
then ( ( n -BinarySequence k ) /. n ) = ( IFEQ (( ( k div ( 2 to_power ( n -' 1 ) ) ) mod 2 ),( 0 ),( FALSE ),( TRUE )) ) by BINARI_3:def 1
.= ( IFEQ (( 1 mod 2 ),( 0 ),( FALSE ),( TRUE )) ) by A12,A10,NAT_2:20
.= ( IFEQ (1,( 0 ),( FALSE ),( TRUE )) ) by NAT_D:14
.= ( TRUE ) by FUNCOP_1:def 8;
then ( Intval ( 2sComplement (n,i) ) ) = ( ( Absval ( n -BinarySequence k ) ) - ( 2 to_power n ) ) by A9,BINARI_2:def 3
.= ( k - ( 2 to_power n ) ) by A11,BINARI_3:35
.= ( ( 0 ) + i );
hence thesis;
end;
end;
hence thesis;
end;
