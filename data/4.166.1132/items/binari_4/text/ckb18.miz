environ
vocabularies NUMBERS,XBOOLE_0,NAT_1,INT_1,XXREAL_0,CARD_1,RELAT_1,ARYTM_3,POWER,EUCLID,FINSEQ_1,BINOP_2,ZFMISC_1,TARSKI,FUNCT_1,FINSEQ_2,MARGREL1,BINARITH,ARYTM_1,SUBSET_1,PARTFUN1,XBOOLEAN,BINARI_2,BINARI_3,FUNCOP_1,ORDINAL4,COMPLEX1,NEWTON,BINARI_4;
notations INT_1,SUBSET_1,XBOOLEAN,MARGREL1,FUNCOP_1,POWER,BINARITH,BINARI_2,BINARI_3,SERIES_1,NUMBERS,XXREAL_0,XBOOLE_0,NAT_1,NAT_D,BINOP_2,EUCLID,TARSKI,PARTFUN1,FUNCT_1,RELAT_1,ZFMISC_1,INT_2,FINSEQOP,NEWTON,FINSEQ_1,FINSEQ_2;
definitions FINSEQ_2,XBOOLEAN,EUCLID;
theorems POWER,NAT_1,PRE_FF,ABSVALUE,BINARI_3,INT_1,BINARITH,NAT_2,BINARI_2,FINSEQ_1,FINSEQ_2,FINSEQ_4,FUNCOP_1,RVSUM_1,FUNCT_2,ZFMISC_1,INT_3,EULER_2,PEPIN,PREPOWER,XREAL_1,XXREAL_0,XBOOLEAN,NAT_D,VALUED_1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes NAT_1;
registrations XBOOLE_0,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,XBOOLEAN,MARGREL1,VALUED_0,FINSEQ_1,FINSEQ_2,RELAT_1,FUNCT_1,CARD_1;
constructors XXREAL_0,REAL_1,NAT_D,FINSEQOP,NEWTON,SERIES_1,BINARITH,BINARI_2,EUCLID,BINARI_3,RVSUM_1,RELSET_1;
requirements REAL,BOOLE,SUBSET,NUMERALS,ARITHM;
begin
reserve k for Nat;
theorem
(for n being non  empty Nat holds (( 0 ) <= ( ( 2 to_power ( n -' 1 ) ) - 1 ) & ( - ( 2 to_power ( n -' 1 ) ) ) <= ( 0 )))
proof
defpred P[ Nat ]
 means
(( 0 ) <= ( ( 2 to_power ( $1 -' 1 ) ) - 1 ) & ( - ( 2 to_power ( $1 -' 1 ) ) ) <= ( 0 ));
A1: (for k being non  empty Nat holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being non  empty Nat;
assume that
A2: ( 0 ) <= ( ( 2 to_power ( k -' 1 ) ) - 1 )
and
( - ( 2 to_power ( k -' 1 ) ) ) <= ( 0 );
( ( k + 1 ) -' 1 ) = k by NAT_D:34;
then ( 2 to_power ( k -' 1 ) ) < ( 2 to_power ( ( k + 1 ) -' 1 ) ) by NAT_2:9,POWER:39;
hence thesis by A2,XREAL_1:9;
end;
( 1 - 1 ) = ( 0 );
then ( 2 to_power ( 1 -' 1 ) ) = ( 2 to_power ( 0 ) ) by XREAL_0:def 2
.= 1 by POWER:24;
then A3: P[ 1 ];
thus (for n being non  empty Nat holds P[ n ]) from NAT_1:sch 10(A3,A1);
end;
