environ
vocabularies NUMBERS,XBOOLE_0,NAT_1,INT_1,XXREAL_0,CARD_1,RELAT_1,ARYTM_3,POWER,EUCLID,FINSEQ_1,BINOP_2,ZFMISC_1,TARSKI,FUNCT_1,FINSEQ_2,MARGREL1,BINARITH,ARYTM_1,SUBSET_1,PARTFUN1,XBOOLEAN,BINARI_2,BINARI_3,FUNCOP_1,ORDINAL4,COMPLEX1,NEWTON,BINARI_4;
notations INT_1,SUBSET_1,XBOOLEAN,MARGREL1,FUNCOP_1,POWER,BINARITH,BINARI_2,BINARI_3,SERIES_1,NUMBERS,XXREAL_0,XBOOLE_0,NAT_1,NAT_D,BINOP_2,EUCLID,TARSKI,PARTFUN1,FUNCT_1,RELAT_1,ZFMISC_1,INT_2,FINSEQOP,NEWTON,FINSEQ_1,FINSEQ_2,CKB21,CKB27;
definitions FINSEQ_2,XBOOLEAN,EUCLID,CKB21,CKB27;
theorems POWER,NAT_1,PRE_FF,ABSVALUE,BINARI_3,INT_1,BINARITH,NAT_2,BINARI_2,FINSEQ_1,FINSEQ_2,FINSEQ_4,FUNCOP_1,RVSUM_1,FUNCT_2,ZFMISC_1,INT_3,EULER_2,PEPIN,PREPOWER,XREAL_1,XXREAL_0,XBOOLEAN,NAT_D,VALUED_1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44;
schemes NAT_1;
registrations XBOOLE_0,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,XBOOLEAN,MARGREL1,VALUED_0,FINSEQ_1,FINSEQ_2,RELAT_1,FUNCT_1,CARD_1;
constructors XXREAL_0,REAL_1,NAT_D,FINSEQOP,NEWTON,SERIES_1,BINARITH,BINARI_2,EUCLID,BINARI_3,RVSUM_1,RELSET_1,CKB21,CKB27;
requirements REAL,BOOLE,SUBSET,NUMERALS,ARITHM;
begin
reserve n for non  empty Nat;
reserve h for Integer;
reserve i for Integer;
theorem
(for n being non  empty Nat holds (((((( - ( 2 to_power ( ( n + 1 ) -' 1 ) ) ) <= ( h + i ) & h < ( 0 )) & i < ( 0 )) & ( - ( 2 to_power ( n -' 1 ) ) ) <= h) & ( - ( 2 to_power ( n -' 1 ) ) ) <= i) implies ( Intval ( ( 2sComplement (( n + 1 ),h) ) + ( 2sComplement (( n + 1 ),i) ) ) ) = ( h + i )))
proof
let n being non  empty Nat;
assume that
A1: ( - ( 2 to_power ( ( n + 1 ) -' 1 ) ) ) <= ( h + i )
and
A2: h < ( 0 )
and
A3: i < ( 0 )
and
A4: (( - ( 2 to_power ( n -' 1 ) ) ) <= h & ( - ( 2 to_power ( n -' 1 ) ) ) <= i);
A5: ( ( 2 to_power ( n + 1 ) ) + ( - ( 2 to_power n ) ) ) = ( ( - ( 2 to_power n ) ) + ( ( 2 to_power 1 ) * ( 2 to_power n ) ) ) by POWER:27
.= ( ( - ( 2 to_power n ) ) + ( 2 * ( 2 to_power n ) ) ) by POWER:25
.= ( 2 to_power n );
( ( n + 1 ) - 1 ) = n;
then A6: ( - ( 2 to_power n ) ) <= ( h + i ) by A1,XREAL_0:def 2;
then A7: ( - ( 2 to_power n ) ) < h by A2,A3,CKB9:1;
then A8: ( 2 to_power n ) <= ( ( 2 to_power ( n + 1 ) ) + h ) by A5,XREAL_1:6;
A9: ( - ( 2 to_power n ) ) < i by A2,A3,A6,CKB9:1;
then A10: ( 0 ) <= ( ( 2 to_power ( n + 1 ) ) + i ) by A5,XREAL_1:6;
( 0 ) <= ( ( 2 to_power ( n + 1 ) ) + h ) by A7,A5,XREAL_1:6;
then reconsider NH = ( ( 2 to_power ( n + 1 ) ) + h ),NI = ( ( 2 to_power ( n + 1 ) ) + i ) as (Element of ( NAT )) by A10,INT_1:3;
A11: 1 <= ( n + 1 ) by NAT_1:11;
set H = ( 2sComplement (n,h) );
set I = ( 2sComplement (n,i) );
set H1 = ( 2sComplement (( n + 1 ),h) );
set I1 = ( 2sComplement (( n + 1 ),i) );
set F = ( FALSE );
set T = ( TRUE );
n < ( n + 1 ) by XREAL_1:29;
then A12: ( 2 to_power n ) < ( 2 to_power ( n + 1 ) ) by POWER:39;
A13: ((ex a being (Element of ( BOOLEAN )) st H1 = ( H ^ <* a *> )) & (ex a being (Element of ( BOOLEAN )) st I1 = ( I ^ <* a *> ))) by CKB41:1;
A14: ( ( 2 to_power ( n + 1 ) ) + h ) < ( ( 2 to_power ( n + 1 ) ) + ( 0 ) ) by A2,XREAL_1:8;
( - h ) < ( - ( - ( 2 to_power n ) ) ) by A7,XREAL_1:24;
then ( abs h ) < ( 2 to_power n ) by A2,ABSVALUE:def 1;
then A15: ( MajP (( n + 1 ),( abs h )) ) = ( n + 1 ) by A12,CKB25:1,XXREAL_0:2;
then A16: H1 = ( ( n + 1 ) -BinarySequence ( abs ( ( 2 to_power ( n + 1 ) ) + h ) ) ) by A2,CKB27:def 1
.= ( ( n + 1 ) -BinarySequence NH ) by ABSVALUE:def 1;
( len H1 ) = ( n + 1 ) by CARD_1:def 7;
then A17: ( H1 /. ( n + 1 ) ) = ( H1 . ( n + 1 ) ) by A11,FINSEQ_4:15
.= ( ( ( n + 1 ) -BinarySequence ( abs ( ( 2 to_power ( n + 1 ) ) + h ) ) ) . ( n + 1 ) ) by A2,A15,CKB27:def 1
.= ( ( ( n + 1 ) -BinarySequence NH ) . ( n + 1 ) ) by ABSVALUE:def 1
.= T by A14,A8,BINARI_3:29;
A18: ( 2 to_power n ) <= ( ( 2 to_power ( n + 1 ) ) + i ) by A9,A5,XREAL_1:6;
A19: ( ( 2 to_power ( n + 1 ) ) + i ) < ( ( 2 to_power ( n + 1 ) ) + ( 0 ) ) by A3,XREAL_1:8;
( - i ) < ( - ( - ( 2 to_power n ) ) ) by A9,XREAL_1:24;
then ( abs i ) < ( 2 to_power n ) by A3,ABSVALUE:def 1;
then A20: ( MajP (( n + 1 ),( abs i )) ) = ( n + 1 ) by A12,CKB25:1,XXREAL_0:2;
then A21: I1 = ( ( n + 1 ) -BinarySequence ( abs ( ( 2 to_power ( n + 1 ) ) + i ) ) ) by A3,CKB27:def 1
.= ( ( n + 1 ) -BinarySequence NI ) by ABSVALUE:def 1;
( len I1 ) = ( n + 1 ) by CARD_1:def 7;
then A22: ( I1 /. ( n + 1 ) ) = ( I1 . ( n + 1 ) ) by A11,FINSEQ_4:15
.= ( ( ( n + 1 ) -BinarySequence ( abs ( ( 2 to_power ( n + 1 ) ) + i ) ) ) . ( n + 1 ) ) by A3,A20,CKB27:def 1
.= ( ( ( n + 1 ) -BinarySequence NI ) . ( n + 1 ) ) by ABSVALUE:def 1
.= T by A19,A18,BINARI_3:29;
then A23: ( Intval I1 ) = ( ( Absval I1 ) - ( 2 to_power ( n + 1 ) ) ) by BINARI_2:def 3
.= ( NI - ( 2 to_power ( n + 1 ) ) ) by A19,A21,BINARI_3:35
.= i;
A24: ( ( carry (H1,I1) ) /. ( n + 1 ) ) = T by A2,A3,A4,A6,CKB43:1;
then A25: ( Int_add_ovfl (H1,I1) ) = ( ( F '&' ( 'not' T ) ) '&' T ) by A17,A22,BINARI_2:def 4
.= F;
A26: ( Int_add_udfl (H1,I1) ) = ( ( T '&' T ) '&' ( 'not' T ) ) by A17,A22,A24,BINARI_2:def 5
.= F;
( Intval H1 ) = ( ( Absval H1 ) - ( 2 to_power ( n + 1 ) ) ) by A17,BINARI_2:def 3
.= ( NH - ( 2 to_power ( n + 1 ) ) ) by A14,A16,BINARI_3:35
.= h;
then ( Intval ( H1 + I1 ) ) = ( ( ( h + i ) - ( IFEQ (F,F,( 0 ),( 2 to_power ( n + 1 ) )) ) ) + ( IFEQ (F,F,( 0 ),( 2 to_power ( n + 1 ) )) ) ) by A13,A23,A25,A26,BINARI_2:12
.= ( ( ( h + i ) - ( 0 ) ) + ( 0 ) );
hence thesis;
end;
