environ
vocabularies NUMBERS,XBOOLE_0,NAT_1,INT_1,XXREAL_0,CARD_1,RELAT_1,ARYTM_3,POWER,EUCLID,FINSEQ_1,BINOP_2,ZFMISC_1,TARSKI,FUNCT_1,FINSEQ_2,MARGREL1,BINARITH,ARYTM_1,SUBSET_1,PARTFUN1,XBOOLEAN,BINARI_2,BINARI_3,FUNCOP_1,ORDINAL4,COMPLEX1,NEWTON,BINARI_4;
notations INT_1,SUBSET_1,XBOOLEAN,MARGREL1,FUNCOP_1,POWER,BINARITH,BINARI_2,BINARI_3,SERIES_1,NUMBERS,XXREAL_0,XBOOLE_0,NAT_1,NAT_D,BINOP_2,EUCLID,TARSKI,PARTFUN1,FUNCT_1,RELAT_1,ZFMISC_1,INT_2,FINSEQOP,NEWTON,FINSEQ_1,FINSEQ_2,CKB21,CKB27;
definitions FINSEQ_2,XBOOLEAN,EUCLID,CKB21,CKB27;
theorems POWER,NAT_1,PRE_FF,ABSVALUE,BINARI_3,INT_1,BINARITH,NAT_2,BINARI_2,FINSEQ_1,FINSEQ_2,FINSEQ_4,FUNCOP_1,RVSUM_1,FUNCT_2,ZFMISC_1,INT_3,EULER_2,PEPIN,PREPOWER,XREAL_1,XXREAL_0,XBOOLEAN,NAT_D,VALUED_1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33;
schemes NAT_1;
registrations XBOOLE_0,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,XBOOLEAN,MARGREL1,VALUED_0,FINSEQ_1,FINSEQ_2,RELAT_1,FUNCT_1,CARD_1;
constructors XXREAL_0,REAL_1,NAT_D,FINSEQOP,NEWTON,SERIES_1,BINARITH,BINARI_2,EUCLID,BINARI_3,RVSUM_1,RELSET_1,CKB21,CKB27;
requirements REAL,BOOLE,SUBSET,NUMERALS,ARITHM;
begin
reserve n for non  empty Nat;
reserve j for Nat;
reserve h for Integer;
reserve i for Integer;
theorem
Lm5: (for h,i being Integer holds (((h >= ( 0 ) & i >= ( 0 )) & ( h mod ( 2 to_power n ) ) = ( i mod ( 2 to_power n ) )) implies ( 2sComplement (n,h) ) = ( 2sComplement (n,i) )))
proof
let h being Integer;
let i being Integer;
assume that
A1: (h >= ( 0 ) & i >= ( 0 ))
and
A2: ( h mod ( 2 to_power n ) ) = ( i mod ( 2 to_power n ) );
A3: (for j being Nat holds (j in ( Seg n ) implies ( ( n -BinarySequence ( abs h ) ) . j ) = ( ( n -BinarySequence ( abs i ) ) . j )))
proof
A4: (( abs h ) = h & ( abs i ) = i) by A1,ABSVALUE:def 1;
let j being Nat;
assume that
A5: j in ( Seg n );
reconsider j as Nat;
A6: j <= n by A5,FINSEQ_1:1;
A7: 1 <= j by A5,FINSEQ_1:1;
then ( j - 1 ) >= ( 1 - 1 ) by XREAL_1:9;
then ( j -' 1 ) = ( j - 1 ) by XREAL_0:def 2;
then A8: ( j -' 1 ) < n by A6,XREAL_1:146,XXREAL_0:2;
( len ( n -BinarySequence ( abs i ) ) ) = n by CARD_1:def 7;
then A9: ( ( n -BinarySequence ( abs i ) ) . j ) = ( ( n -BinarySequence ( abs i ) ) /. j ) by A7,A6,FINSEQ_4:15
.= ( IFEQ (( ( ( abs i ) div ( 2 to_power ( j -' 1 ) ) ) mod 2 ),( 0 ),( FALSE ),( TRUE )) ) by A5,BINARI_3:def 1;
( len ( n -BinarySequence ( abs h ) ) ) = n by CARD_1:def 7;
then ( ( n -BinarySequence ( abs h ) ) . j ) = ( ( n -BinarySequence ( abs h ) ) /. j ) by A7,A6,FINSEQ_4:15
.= ( IFEQ (( ( ( abs h ) div ( 2 to_power ( j -' 1 ) ) ) mod 2 ),( 0 ),( FALSE ),( TRUE )) ) by A5,BINARI_3:def 1
.= ( IFEQ (( ( ( abs i ) div ( 2 to_power ( j -' 1 ) ) ) mod 2 ),( 0 ),( FALSE ),( TRUE )) ) by A2,A8,A4,CKB32:1;
hence thesis by A9;
end;
(( 2sComplement (n,h) ) = ( n -BinarySequence ( abs h ) ) & ( 2sComplement (n,i) ) = ( n -BinarySequence ( abs i ) )) by A1,CKB27:def 1;
hence thesis by A3,FINSEQ_2:119;
end;
