environ
vocabularies NUMBERS,XBOOLE_0,NAT_1,INT_1,XXREAL_0,CARD_1,RELAT_1,ARYTM_3,POWER,EUCLID,FINSEQ_1,BINOP_2,ZFMISC_1,TARSKI,FUNCT_1,FINSEQ_2,MARGREL1,BINARITH,ARYTM_1,SUBSET_1,PARTFUN1,XBOOLEAN,BINARI_2,BINARI_3,FUNCOP_1,ORDINAL4,COMPLEX1,NEWTON,BINARI_4;
notations INT_1,SUBSET_1,XBOOLEAN,MARGREL1,FUNCOP_1,POWER,BINARITH,BINARI_2,BINARI_3,SERIES_1,NUMBERS,XXREAL_0,XBOOLE_0,NAT_1,NAT_D,BINOP_2,EUCLID,TARSKI,PARTFUN1,FUNCT_1,RELAT_1,ZFMISC_1,INT_2,FINSEQOP,NEWTON,FINSEQ_1,FINSEQ_2,CKB21,CKB27;
definitions FINSEQ_2,XBOOLEAN,EUCLID,CKB21,CKB27;
theorems POWER,NAT_1,PRE_FF,ABSVALUE,BINARI_3,INT_1,BINARITH,NAT_2,BINARI_2,FINSEQ_1,FINSEQ_2,FINSEQ_4,FUNCOP_1,RVSUM_1,FUNCT_2,ZFMISC_1,INT_3,EULER_2,PEPIN,PREPOWER,XREAL_1,XXREAL_0,XBOOLEAN,NAT_D,VALUED_1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
schemes NAT_1;
registrations XBOOLE_0,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,XBOOLEAN,MARGREL1,VALUED_0,FINSEQ_1,FINSEQ_2,RELAT_1,FUNCT_1,CARD_1;
constructors XXREAL_0,REAL_1,NAT_D,FINSEQOP,NEWTON,SERIES_1,BINARITH,BINARI_2,EUCLID,BINARI_3,RVSUM_1,RELSET_1,CKB21,CKB27;
requirements REAL,BOOLE,SUBSET,NUMERALS,ARITHM;
begin
reserve n for non empty Nat;
reserve i for Integer;
theorem
Th32: (for j being Nat holds ((1 <= j & j <= n) implies ( ( 2sComplement (( n + 1 ),i) ) /. j ) = ( ( 2sComplement (n,i) ) /. j )))
proof
let j being Nat;
assume that
A1: 1 <= j
and
A2: j <= n;
A3: j in ( Seg n ) by A1,A2,FINSEQ_1:1;
n <= ( n + 1 ) by NAT_1:11;
then j <= ( n + 1 ) by A2,XXREAL_0:2;
then A4: j in ( Seg ( n + 1 ) ) by A1,FINSEQ_1:1;
set N = ( abs ( ( 2 to_power ( MajP (n,( abs i )) ) ) + i ) );
set M = ( abs ( ( 2 to_power ( MajP (( n + 1 ),( abs i )) ) ) + i ) );
A5: (i < ( 0 ) implies ( ( M div ( 2 to_power ( j -' 1 ) ) ) mod 2 ) = ( ( N div ( 2 to_power ( j -' 1 ) ) ) mod 2 ))
proof
( MajP (( n + 1 ),( abs i )) ) >= ( MajP (n,( abs i )) ) by CKB23:1,NAT_1:11;
then consider m being Nat such that A6: ( MajP (( n + 1 ),( abs i )) ) = ( ( MajP (n,( abs i )) ) + m ) by NAT_1:10;
reconsider m as Nat;
set P = ( MajP (n,( abs i )) );
assume A7: i < ( 0 );
set Q = ( 2 to_power P );
A8: ( (( Q * ( 2 to_power m ) ) qua Integer) mod Q ) = ( 0 ) by NAT_D:13;
( 2 to_power ( MajP (( n + 1 ),( abs i )) ) ) >= ( abs i ) by CKB21:def 1;
then ( 2 to_power ( MajP (( n + 1 ),( abs i )) ) ) >= ( - i ) by A7,ABSVALUE:def 1;
then ( ( 2 to_power ( MajP (( n + 1 ),( abs i )) ) ) + i ) >= ( ( - i ) + i ) by XREAL_1:6;
then M = ( ( 2 to_power ( P + m ) ) + i ) by A6,ABSVALUE:def 1
.= ( ( Q * ( 2 to_power m ) ) + i ) by POWER:27;
then A9: ( M mod Q ) = ( ( ( (( Q * ( 2 to_power m ) ) qua Integer) mod Q ) + ( i mod Q ) ) mod Q ) by NAT_D:66
.= ( ( i mod Q ) mod Q ) by A8;
A10: ( (Q qua Integer) mod Q ) = ( 0 ) by NAT_D:25;
( j + ( - 1 ) ) >= ( 1 + ( - 1 ) ) by A1,XREAL_1:6;
then ( j -' 1 ) = ( j - 1 ) by XREAL_0:def 2;
then A11: ( j -' 1 ) < n by A2,XREAL_1:146,XXREAL_0:2;
P >= n by CKB21:def 1;
then A12: ( j -' 1 ) < P by A11,XXREAL_0:2;
Q >= ( abs i ) by CKB21:def 1;
then Q >= ( - i ) by A7,ABSVALUE:def 1;
then ( Q + i ) >= ( ( - i ) + i ) by XREAL_1:6;
then N = ( Q + i ) by ABSVALUE:def 1;
then ( N mod Q ) = ( ( ( (Q qua Integer) mod Q ) + ( i mod Q ) ) mod Q ) by NAT_D:66
.= ( ( i mod Q ) mod Q ) by A10;
hence thesis by A9,A12,CKB32:1;
end;
per cases ;
suppose i >= ( 0 );

then reconsider i as (Element of ( NAT )) by INT_1:3;
A13: ( ( 2sComplement (n,i) ) /. j ) = ( ( n -BinarySequence ( abs i ) ) /. j ) by CKB27:def 1
.= ( ( n -BinarySequence i ) /. j ) by ABSVALUE:def 1
.= ( IFEQ (( ( i div ( 2 to_power ( j -' 1 ) ) ) mod 2 ),( 0 ),( FALSE ),( TRUE )) ) by A3,BINARI_3:def 1;
( ( 2sComplement (( n + 1 ),i) ) /. j ) = ( ( ( n + 1 ) -BinarySequence ( abs i ) ) /. j ) by CKB27:def 1
.= ( ( ( n + 1 ) -BinarySequence i ) /. j ) by ABSVALUE:def 1
.= ( IFEQ (( ( i div ( 2 to_power ( j -' 1 ) ) ) mod 2 ),( 0 ),( FALSE ),( TRUE )) ) by A4,BINARI_3:def 1;
hence thesis by A13;
end;
suppose A14: i < ( 0 );

then A15: ( ( 2sComplement (n,i) ) /. j ) = ( ( n -BinarySequence N ) /. j ) by CKB27:def 1
.= ( IFEQ (( ( N div ( 2 to_power ( j -' 1 ) ) ) mod 2 ),( 0 ),( FALSE ),( TRUE )) ) by A3,BINARI_3:def 1;
( ( 2sComplement (( n + 1 ),i) ) /. j ) = ( ( ( n + 1 ) -BinarySequence M ) /. j ) by A14,CKB27:def 1
.= ( IFEQ (( ( M div ( 2 to_power ( j -' 1 ) ) ) mod 2 ),( 0 ),( FALSE ),( TRUE )) ) by A4,BINARI_3:def 1;
hence thesis by A5,A14,A15;
end;
end;
