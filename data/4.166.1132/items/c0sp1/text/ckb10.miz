environ
vocabularies NUMBERS,XBOOLE_0,ALGSTR_0,SUBSET_1,ARYTM_1,IDEAL_1,ARYTM_3,FUNCSDOM,STRUCT_0,TARSKI,REALSET1,MESFUNC1,SUPINF_2,BINOP_1,FUNCT_1,ZFMISC_1,RELAT_1,RLVECT_1,VECTSP_1,LATTICES,RSSPACE,GROUP_1,REAL_1,POLYALG1,CARD_1,XREAL_0,ORDINAL1,RSSPACE4,XXREAL_2,FUNCOP_1,FUNCT_2,VALUED_1,LOPBAN_1,COMPLEX1,XXREAL_0,SEQ_4,ORDINAL2,LOPBAN_2,PRE_TOPC,NORMSP_1,NAT_1,RSSPACE3,SEQ_2,SEQ_1,REWRITE1,C0SP1,METRIC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,RELAT_1,XCMPLX_0,XREAL_0,COMPLEX1,XXREAL_0,XXREAL_2,STRUCT_0,ALGSTR_0,REAL_1,REALSET1,FUNCT_1,FUNCT_2,BINOP_1,DOMAIN_1,RELSET_1,PRE_TOPC,RLVECT_1,GROUP_1,VECTSP_1,FUNCSDOM,PARTFUN1,IDEAL_1,RSSPACE3,MEASURE6,VALUED_1,SEQ_1,SEQ_2,SEQ_4,FUNCOP_1,NORMSP_0,NORMSP_1,LOPBAN_1,LOPBAN_2,CKB1,CKB2,CKB9;
definitions PRE_TOPC,MEASURE6,REALSET1,ALGSTR_0,TARSKI,ORDINAL1,XCMPLX_0,FINSET_1,FUNCT_2,MEMBERED,ZFMISC_1,NORMSP_1,FINSEQ_1,SEQM_3,PARTFUN1,SEQ_4,RFUNCT_1,FUNCSDOM,RLVECT_1,RLSUB_1,RSSPACE,RSSPACE3,VECTSP_1,VECTSP_2,STRUCT_0,GROUP_1,BINOP_1,LOPBAN_2,VALUED_1,NORMSP_0,XXREAL_2,CKB1,CKB2,CKB9;
theorems SEQ_4,RFUNCT_1,FUNCT_1,SEQ_1,SEQ_2,ABSVALUE,ALGSTR_0,COMPLEX1,ZFMISC_1,TARSKI,RSSPACE3,RELAT_1,XREAL_0,XXREAL_0,FUNCSDOM,NORMSP_1,LOPBAN_1,FUNCT_2,XBOOLE_0,XREAL_1,XCMPLX_0,RLVECT_1,FUNCOP_1,VECTSP_1,GROUP_1,LOPBAN_2,VALUED_1,RSSPACE2,IDEAL_1,RELSET_1,NORMSP_0,CKB1,CKB2,CKB3,CKB4,CKB9;
schemes SEQ_1,FUNCT_2;
registrations XBOOLE_0,SUBSET_1,STRUCT_0,XREAL_0,REALSET1,ALGSTR_0,NUMBERS,ORDINAL1,MEMBERED,FUNCSDOM,RELAT_1,XXREAL_0,RLVECT_1,VECTSP_1,VECTSP_2,FUNCT_2,VALUED_0,VALUED_1,LOPBAN_2,FUNCOP_1,SEQ_4,RFUNCT_1,NORMSP_0,RELSET_1,CKB5,CKB6,CKB7,CKB8;
constructors REAL_1,REALSET1,PARTFUN2,RSSPACE3,COMPLEX1,RFUNCT_3,MEASURE6,NAT_1,BINOP_2,RCOMP_1,RLSUB_1,LOPBAN_2,ALGSTR_1,FUNCT_2,VALUED_1,SEQ_1,SEQ_2,ALGSTR_0,IDEAL_1,XXREAL_2,SEQ_4,RELSET_1,PRE_TOPC,VECTSP_2,SEQM_3,CKB1,CKB2,CKB9;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
reserve X for non empty set;
reserve d1 for (Element of X);
reserve d2 for (Element of X);
reserve A for (BinOp of X);
reserve M for (Function of [: X,X :],X);
reserve V for Ring;
reserve V1 for (Subset of V);
theorem
Th1: ((((((V1 = X & A = ( (the addF of V) || V1 )) & M = ( (the multF of V) || V1 )) & d1 = ( 1. V )) & d2 = ( 0. V )) & V1 is  having-inverse) implies doubleLoopStr (# X,A,M,d1,d2 #) is (Subring of V))
proof
assume that
A1: V1 = X
and
A2: A = ( (the addF of V) || V1 )
and
A3: M = ( (the multF of V) || V1 )
and
A4: d1 = ( 1. V )
and
A5: d2 = ( 0. V )
and
A6: (for v being (Element of V) holds (v in V1 implies ( - v ) in V1));
reconsider W = doubleLoopStr (# X,A,M,d1,d2 #) as non empty doubleLoopStr;
A7:now
let a being (Element of W),x being (Element of W);
( a * x ) = ( (the multF of V) . [ a,x ] ) by A1,A3,FUNCT_1:49;
hence ( a * x ) = ( (the multF of V) . (a,x) );
end;
A8:now
let x being (Element of W),y being (Element of W);
( x + y ) = ( (the addF of V) . [ x,y ] ) by A1,A2,FUNCT_1:49;
hence ( x + y ) = ( (the addF of V) . (x,y) );
end;
A9: W is  Abelian  add-associative  right_zeroed  right_complementable  associative  well-unital  distributive
proof
set MV = (the multF of V);
set Av = (the addF of V);
hereby
let x being (Element of W),y being (Element of W);
reconsider x1 = x,y1 = y as (Element of V) by A1,TARSKI:def 3;
(( x + y ) = ( x1 + y1 ) & ( y + x ) = ( y1 + x1 )) by A8;
hence ( x + y ) = ( y + x );
end;
hereby
let x being (Element of W),y being (Element of W),z being (Element of W);
reconsider x1 = x,y1 = y,z1 = z as (Element of V) by A1,TARSKI:def 3;
( x + ( y + z ) ) = ( Av . (x1,( y + z )) ) by A8;
then A10: ( x + ( y + z ) ) = ( x1 + ( y1 + z1 ) ) by A8;
( ( x + y ) + z ) = ( Av . (( x + y ),z1) ) by A8;
then ( ( x + y ) + z ) = ( ( x1 + y1 ) + z1 ) by A8;
hence ( ( x + y ) + z ) = ( x + ( y + z ) ) by A10,RLVECT_1:def 3;
end;
hereby
let x being (Element of W);
reconsider y = x as (Element of V) by A1,TARSKI:def 3;
( x + ( 0. W ) ) = ( y + ( 0. V ) ) by A5,A8;
hence ( x + ( 0. W ) ) = x by RLVECT_1:4;
end;
thus W is  right_complementable
proof
let x being (Element of W);
reconsider x1 = x as (Element of V) by A1,TARSKI:def 3;
consider v being (Element of V) such that A11: ( x1 + v ) = ( 0. V ) by ALGSTR_0:def 11;
v = ( - x1 ) by A11,VECTSP_1:16;
then reconsider y = v as (Element of W) by A1,A6;
take y;
thus thesis by A5,A8,A11;
end;

hereby
let a being (Element of W),b being (Element of W),x being (Element of W);
reconsider y = x,a1 = a,b1 = b as (Element of V) by A1,TARSKI:def 3;
( a * ( b * x ) ) = ( MV . (a,( b * x )) ) by A7;
then A12: ( a * ( b * x ) ) = ( a1 * ( b1 * y ) ) by A7;
( a * b ) = ( a1 * b1 ) by A7;
then ( ( a * b ) * x ) = ( ( a1 * b1 ) * y ) by A7;
hence ( ( a * b ) * x ) = ( a * ( b * x ) ) by A12,GROUP_1:def 3;
end;
hereby
let x being (Element of W);
reconsider y = x as (Element of V) by A1,TARSKI:def 3;
(( x * ( 1. W ) ) = ( y * ( 1. V ) ) & ( ( 1. W ) * x ) = ( ( 1. V ) * y )) by A4,A7;
hence (( x * ( 1. W ) ) = x & ( ( 1. W ) * x ) = x) by VECTSP_1:def 6;
end;
hereby
let a being (Element of W),x being (Element of W),y being (Element of W);
reconsider x1 = x,y1 = y,a1 = a as (Element of V) by A1,TARSKI:def 3;
( ( x + y ) * a ) = ( MV . (( x + y ),a) ) by A7;
then ( ( x + y ) * a ) = ( ( x1 + y1 ) * a1 ) by A8;
then ( ( x + y ) * a ) = ( ( x1 * a1 ) + ( y1 * a1 ) ) by VECTSP_1:def 7;
then ( ( x + y ) * a ) = ( Av . (( MV . (x1,a1) ),( y * a )) ) by A7;
then A13: ( ( x + y ) * a ) = ( Av . (( x * a ),( y * a )) ) by A7;
( a * ( x + y ) ) = ( MV . (a,( x + y )) ) by A7;
then ( a * ( x + y ) ) = ( a1 * ( x1 + y1 ) ) by A8;
then ( a * ( x + y ) ) = ( ( a1 * x1 ) + ( a1 * y1 ) ) by VECTSP_1:def 7;
then ( a * ( x + y ) ) = ( Av . (( MV . (a,x1) ),( a * y )) ) by A7;
then ( a * ( x + y ) ) = ( Av . (( a * x ),( a * y )) ) by A7;
hence (( a * ( x + y ) ) = ( ( a * x ) + ( a * y ) ) & ( ( x + y ) * a ) = ( ( x * a ) + ( y * a ) )) by A8,A13;
end;
end;
(( 0. W ) = ( 0. V ) & ( 1. W ) = ( 1. V )) by A4,A5;
hence thesis by A1,A2,A3,A9,CKB9:def 1;
end;
