environ
vocabularies NUMBERS,XBOOLE_0,ALGSTR_0,SUBSET_1,ARYTM_1,IDEAL_1,ARYTM_3,FUNCSDOM,STRUCT_0,TARSKI,REALSET1,MESFUNC1,SUPINF_2,BINOP_1,FUNCT_1,ZFMISC_1,RELAT_1,RLVECT_1,VECTSP_1,LATTICES,RSSPACE,GROUP_1,REAL_1,POLYALG1,CARD_1,XREAL_0,ORDINAL1,RSSPACE4,XXREAL_2,FUNCOP_1,FUNCT_2,VALUED_1,LOPBAN_1,COMPLEX1,XXREAL_0,SEQ_4,ORDINAL2,LOPBAN_2,PRE_TOPC,NORMSP_1,NAT_1,RSSPACE3,SEQ_2,SEQ_1,REWRITE1,C0SP1,METRIC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,RELAT_1,XCMPLX_0,XREAL_0,COMPLEX1,XXREAL_0,XXREAL_2,STRUCT_0,ALGSTR_0,REAL_1,REALSET1,FUNCT_1,FUNCT_2,BINOP_1,DOMAIN_1,RELSET_1,PRE_TOPC,RLVECT_1,GROUP_1,VECTSP_1,FUNCSDOM,PARTFUN1,IDEAL_1,RSSPACE3,MEASURE6,VALUED_1,SEQ_1,SEQ_2,SEQ_4,FUNCOP_1,NORMSP_0,NORMSP_1,LOPBAN_1,LOPBAN_2,CKB1,CKB2,CKB9,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB21,CKB23,CKB24,CKB32,CKB35,CKB43,CKB44,CKB47,CKB50;
definitions PRE_TOPC,MEASURE6,REALSET1,ALGSTR_0,TARSKI,ORDINAL1,XCMPLX_0,FINSET_1,FUNCT_2,MEMBERED,ZFMISC_1,NORMSP_1,FINSEQ_1,SEQM_3,PARTFUN1,SEQ_4,RFUNCT_1,FUNCSDOM,RLVECT_1,RLSUB_1,RSSPACE,RSSPACE3,VECTSP_1,VECTSP_2,STRUCT_0,GROUP_1,BINOP_1,LOPBAN_2,VALUED_1,NORMSP_0,XXREAL_2,CKB1,CKB2,CKB9,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB21,CKB23,CKB24,CKB32,CKB35,CKB43,CKB44,CKB47,CKB50;
theorems SEQ_4,RFUNCT_1,FUNCT_1,SEQ_1,SEQ_2,ABSVALUE,ALGSTR_0,COMPLEX1,ZFMISC_1,TARSKI,RSSPACE3,RELAT_1,XREAL_0,XXREAL_0,FUNCSDOM,NORMSP_1,LOPBAN_1,FUNCT_2,XBOOLE_0,XREAL_1,XCMPLX_0,RLVECT_1,FUNCOP_1,VECTSP_1,GROUP_1,LOPBAN_2,VALUED_1,RSSPACE2,IDEAL_1,RELSET_1,NORMSP_0,CKB1,CKB2,CKB3,CKB4,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB31,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50;
schemes SEQ_1,FUNCT_2;
registrations XBOOLE_0,SUBSET_1,STRUCT_0,XREAL_0,REALSET1,ALGSTR_0,NUMBERS,ORDINAL1,MEMBERED,FUNCSDOM,RELAT_1,XXREAL_0,RLVECT_1,VECTSP_1,VECTSP_2,FUNCT_2,VALUED_0,VALUED_1,LOPBAN_2,FUNCOP_1,SEQ_4,RFUNCT_1,NORMSP_0,RELSET_1,CKB5,CKB6,CKB7,CKB8,CKB11,CKB20,CKB22,CKB29,CKB34,CKB51,CKB52;
constructors REAL_1,REALSET1,PARTFUN2,RSSPACE3,COMPLEX1,RFUNCT_3,MEASURE6,NAT_1,BINOP_2,RCOMP_1,RLSUB_1,LOPBAN_2,ALGSTR_1,FUNCT_2,VALUED_1,SEQ_1,SEQ_2,ALGSTR_0,IDEAL_1,XXREAL_2,SEQ_4,RELSET_1,PRE_TOPC,VECTSP_2,SEQM_3,CKB1,CKB2,CKB9,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB21,CKB23,CKB24,CKB32,CKB35,CKB43,CKB44,CKB47,CKB50;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
reserve X for non  empty set;
reserve x for (Element of X);
reserve V for Algebra;
reserve a for Real;
theorem
Th22: (for W being Normed_AlgebraStr holds (for V being Algebra holds (( the AlgebraStr of W ) = V implies W is Algebra)))
proof
let W being Normed_AlgebraStr;
let V being Algebra;
assume that
A1: ( the AlgebraStr of W ) = V;
reconsider W as non  empty AlgebraStr by A1;
A2: W is  right_unital
proof
let x being (Element of W);
reconsider x1 = x as (Element of V) by A1;
( x * ( 1. W ) ) = ( x1 * ( 1. V ) ) by A1;
hence thesis by VECTSP_1:def 4;
end;
A3: W is  right-distributive
proof
let x being (Element of W);
let y being (Element of W);
let z being (Element of W);
reconsider x1 = x,y1 = y,z1 = z as (Element of V) by A1;
( x * ( y + z ) ) = ( x1 * ( y1 + z1 ) ) by A1;
then ( x * ( y + z ) ) = ( ( x1 * y1 ) + ( x1 * z1 ) ) by VECTSP_1:def 2;
hence thesis by A1;
end;
A4: (for x being (Element of W) holds x is  right_complementable)
proof
let x being (Element of W);
reconsider x1 = x as (Element of V) by A1;
consider v being (Element of V) such that A5: ( x1 + v ) = ( 0. V ) by ALGSTR_0:def 11;
reconsider y = v as (Element of W) by A1;
( x + y ) = ( 0. W ) by A1,A5;
hence thesis by ALGSTR_0:def 11;
end;
A6: (for a,b,x being (Element of W) holds ( ( a * b ) * x ) = ( a * ( b * x ) ))
proof
let a being (Element of W);
let b being (Element of W);
let x being (Element of W);
reconsider y = x,a1 = a,b1 = b as (Element of V) by A1;
( ( a * b ) * x ) = ( ( a1 * b1 ) * y ) by A1;
then ( ( a * b ) * x ) = ( a1 * ( b1 * y ) ) by GROUP_1:def 3;
hence thesis by A1;
end;
A7: (for v,w being (Element of W) holds ( v * w ) = ( w * v ))
proof
let v being (Element of W);
let w being (Element of W);
reconsider v1 = v,w1 = w as (Element of V) by A1;
( v * w ) = ( v1 * w1 ) by A1;
then ( v * w ) = ( w1 * v1 );
hence thesis by A1;
end;
A8: (for x,y,z being (VECTOR of W) holds ( ( x + y ) + z ) = ( x + ( y + z ) ))
proof
let x being (VECTOR of W);
let y being (VECTOR of W);
let z being (VECTOR of W);
reconsider x1 = x,y1 = y,z1 = z as (VECTOR of V) by A1;
( ( x + y ) + z ) = ( ( x1 + y1 ) + z1 ) by A1;
then ( ( x + y ) + z ) = ( x1 + ( y1 + z1 ) ) by RLVECT_1:def 3;
hence thesis by A1;
end;
A9: (for x,y being (VECTOR of W) holds ( x + y ) = ( y + x ))
proof
let x being (VECTOR of W);
let y being (VECTOR of W);
reconsider x1 = x,y1 = y as (VECTOR of V) by A1;
( x + y ) = ( x1 + y1 ) by A1;
then ( x + y ) = ( y1 + x1 );
hence thesis by A1;
end;
A10: W is  vector-distributive
proof
let a being  real number;
let x being (Element of W);
let y being (Element of W);
reconsider x1 = x,y1 = y as (Element of V) by A1;
( a * ( x + y ) ) = ( a * ( x1 + y1 ) ) by A1;
then ( a * ( x + y ) ) = ( ( a * x1 ) + ( a * y1 ) ) by RLVECT_1:def 5;
hence ( a * ( x + y ) ) = ( ( a * x ) + ( a * y ) ) by A1;
end;
A11: W is  scalar-distributive
proof
let a being  real number;
let b being  real number;
let x being (Element of W);
reconsider x1 = x as (Element of V) by A1;
( ( a + b ) * x ) = ( ( a + b ) * x1 ) by A1;
then ( ( a + b ) * x ) = ( ( a * x1 ) + ( b * x1 ) ) by RLVECT_1:def 6;
hence ( ( a + b ) * x ) = ( ( a * x ) + ( b * x ) ) by A1;
thus thesis;
end;
A12: W is  scalar-associative
proof
let a being  real number;
let b being  real number;
let x being (Element of W);
reconsider x1 = x as (Element of V) by A1;
( ( a * b ) * x ) = ( ( a * b ) * x1 ) by A1;
then ( ( a * b ) * x ) = ( a * ( b * x1 ) ) by RLVECT_1:def 7;
hence thesis by A1;
end;
A13: W is  vector-associative
proof
let x being (Element of W);
let y being (Element of W);
reconsider x1 = x,y1 = y as (Element of V) by A1;
let a being Real;
( a * ( x * y ) ) = ( a * ( x1 * y1 ) ) by A1;
then ( a * ( x * y ) ) = ( ( a * x1 ) * y1 ) by FUNCSDOM:def 9;
hence ( a * ( x * y ) ) = ( ( a * x ) * y ) by A1;
end;
(for x being (VECTOR of W) holds ( x + ( 0. W ) ) = x)
proof
let x being (VECTOR of W);
reconsider y = x as (VECTOR of V) by A1;
( x + ( 0. W ) ) = ( y + ( 0. V ) ) by A1;
hence thesis by RLVECT_1:4;
end;
hence thesis by A9,A8,A4,A7,A6,A2,A3,A10,A11,A12,A13,ALGSTR_0:def 16,GROUP_1:def 3,GROUP_1:def 12,RLVECT_1:def 2,RLVECT_1:def 3,RLVECT_1:def 4;
end;
