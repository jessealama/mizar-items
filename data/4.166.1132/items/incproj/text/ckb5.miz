environ
vocabularies SUBSET_1,COLLSP,PRE_TOPC,INCSP_1,TARSKI,STRUCT_0,PARSP_2,XBOOLE_0,RELAT_1,ANPROJ_2,ZFMISC_1,FDIFF_1,ANALOAF,VECTSP_1,AFF_2,INCPROJ;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,RELSET_1,STRUCT_0,PRE_TOPC,INCSP_1,COLLSP,ANPROJ_2,CKB1,CKB2;
definitions INCSP_1,CKB2;
theorems COLLSP,ANPROJ_2,TARSKI,RELAT_1,INCSP_1,ZFMISC_1,CKB2,CKB4;
schemes RELSET_1;
registrations RELSET_1,STRUCT_0,ANPROJ_2,CKB3;
constructors DOMAIN_1,INCSP_1,ANPROJ_2,CKB1,CKB2;
requirements SUBSET,BOOLE;
begin
reserve CPS for  proper CollSp;
reserve x for set;
reserve y for set;
reserve Y for set;
definition
let CPS;
func Proj_Inc CPS -> (Relation of (the carrier of CPS),( ProjectiveLines CPS ))
means
:Def2: (for x holds (for y holds ([ x,y ] in it iff ((x in (the carrier of CPS) & y in ( ProjectiveLines CPS )) & (ex Y st (y = Y & x in Y))))));
existence
proof
defpred P[ set,set ]
 means
(ex Y st ($2 = Y & $1 in Y));
(ex IT being (Relation of (the carrier of CPS),( ProjectiveLines CPS )) st (for x holds (for y holds ([ x,y ] in IT iff ((x in (the carrier of CPS) & y in ( ProjectiveLines CPS )) & P[ x,y ]))))) from RELSET_1:sch 1;
hence thesis;
end;
uniqueness
proof
let R1 being (Relation of (the carrier of CPS),( ProjectiveLines CPS )),R2 being (Relation of (the carrier of CPS),( ProjectiveLines CPS ));
assume that
A1: (for x holds (for y holds ([ x,y ] in R1 iff ((x in (the carrier of CPS) & y in ( ProjectiveLines CPS )) & (ex Y st (y = Y & x in Y))))))
and
A2: (for x holds (for y holds ([ x,y ] in R2 iff ((x in (the carrier of CPS) & y in ( ProjectiveLines CPS )) & (ex Y st (y = Y & x in Y))))));
now
let x being set,y being set;
A3:now
assume A4: [ x,y ] in R2;
then A5: (ex Y st (y = Y & x in Y)) by A2;
(x in (the carrier of CPS) & y in ( ProjectiveLines CPS )) by A2,A4;
hence [ x,y ] in R1 by A1,A5;
end;
now
assume A6: [ x,y ] in R1;
then A7: (ex Y st (y = Y & x in Y)) by A1;
(x in (the carrier of CPS) & y in ( ProjectiveLines CPS )) by A1,A6;
hence [ x,y ] in R2 by A2,A7;
end;
hence ([ x,y ] in R1 iff [ x,y ] in R2) by A3;
end;
hence R1 = R2 by RELAT_1:def 2;
end;
end;
