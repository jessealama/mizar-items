environ
vocabularies SUBSET_1,COLLSP,PRE_TOPC,INCSP_1,TARSKI,STRUCT_0,PARSP_2,XBOOLE_0,RELAT_1,ANPROJ_2,ZFMISC_1,FDIFF_1,ANALOAF,VECTSP_1,AFF_2,INCPROJ;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,RELSET_1,STRUCT_0,PRE_TOPC,INCSP_1,COLLSP,ANPROJ_2,CKB1,CKB2,CKB5,CKB6;
definitions INCSP_1,CKB2,CKB5,CKB6;
theorems COLLSP,ANPROJ_2,TARSKI,RELAT_1,INCSP_1,ZFMISC_1,CKB2,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10;
schemes RELSET_1;
registrations RELSET_1,STRUCT_0,ANPROJ_2,CKB3,CKB7;
constructors DOMAIN_1,INCSP_1,ANPROJ_2,CKB1,CKB2,CKB5,CKB6;
requirements SUBSET,BOOLE;
begin
reserve CPS for  proper CollSp;
reserve Y for set;
reserve p for (POINT of ( IncProjSp_of CPS ));
reserve P for (LINE of ( IncProjSp_of CPS ));
reserve p9 for (Point of CPS);
reserve P9 for (LINE of CPS);
theorem
Th9: ((p = p9 & P = P9) implies (p on P iff p9 in P9))
proof
reconsider P99 = P9 as (LINE of ( IncProjSp_of CPS )) by CKB4:1;
reconsider P999 = P99 as (Element of ( ProjectiveLines CPS ));
assume A1: (p = p9 & P = P9);
hereby
assume p on P;
then [ p9,P9 ] in ( Proj_Inc CPS ) by A1,INCSP_1:def 1;
then (ex Y st (P9 = Y & p9 in Y)) by CKB5:def 1;
hence p9 in P9;
end;
assume p9 in P9;
then [ p9,P999 ] in ( Proj_Inc CPS ) by CKB5:def 1;
hence thesis by A1,INCSP_1:def 1;
end;
