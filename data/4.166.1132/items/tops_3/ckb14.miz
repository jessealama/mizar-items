environ
vocabularies PRE_TOPC,SUBSET_1,XBOOLE_0,STRUCT_0,TOPS_1,TARSKI,RCOMP_1,TOPS_3;
notations TARSKI,XBOOLE_0,SUBSET_1,STRUCT_0,PRE_TOPC,TOPS_1,BORSUK_1,TSEP_1,CKB9;
definitions PRE_TOPC,XBOOLE_0,SUBSET_1,STRUCT_0,CKB9;
theorems PRE_TOPC,TOPS_1,TOPS_2,TSEP_1,TDLAT_3,SUBSET_1,TARSKI,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
registrations STRUCT_0,PRE_TOPC,TOPS_1,BORSUK_1,TSEP_1;
constructors TOPS_1,BORSUK_1,TSEP_1;
requirements BOOLE,SUBSET;
begin
reserve X for TopSpace;
reserve A for (Subset of X);
theorem
(A is  boundary iff (for G being (Subset of X) holds ((G <> ( {} ) & G is  open) implies ( A ` ) meets G)))
proof
thus (A is  boundary implies (for G being (Subset of X) holds ((G <> ( {} ) & G is  open) implies ( A ` ) meets G)))
proof
assume A1: A is  boundary;
let G being (Subset of X);
assume A2: G <> ( {} );
assume A3: G is  open;
assume ( A ` ) misses G;
then G c= A by SUBSET_1:24;
hence contradiction by A1,A2,A3,TOPS_1:50;
end;

assume A4: (for G being (Subset of X) holds ((G <> ( {} ) & G is  open) implies ( A ` ) meets G));
assume ( Int A ) <> ( {} );
then (( Int A ) c= A & ( A ` ) meets ( Int A )) by A4,TOPS_1:16;
hence contradiction by SUBSET_1:24;
end;
