environ
vocabularies UNIALG_1,FUNCT_2,STRUCT_0,FUNCT_1,MSUALG_3,SUBSET_1,RELAT_1,XBOOLE_0,TARSKI,BINOP_1,ALGSTR_0,MESFUNC1,VECTSP_1,GROUP_1,MSUALG_1,AUTALG_1,PBOOLE,CARD_3,PZFMISC1,MEMBER_1,CARD_1,FUNCOP_1,MSUHOM_1,MSSUBFAM,GROUP_6,WELLORD1,ZFMISC_1,ENDALG;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PBOOLE,CARD_3,BINOP_1,PARTFUN1,FUNCT_2,FUNCOP_1,NUMBERS,STRUCT_0,ALGSTR_0,GROUP_1,VECTSP_1,FINSEQ_1,PZFMISC1,UNIALG_1,MSUALG_1,ALG_1,MSUALG_3,MSUHOM_1,AUTALG_1,GROUP_6,CKB1,CKB5,CKB6;
definitions AUTALG_1,FUNCT_1,TARSKI,VECTSP_1,XBOOLE_0,GROUP_1,FUNCOP_1,STRUCT_0,ALGSTR_0,FUNCT_2,CKB1,CKB5,CKB6;
theorems AUTALG_1,ALG_1,BINOP_1,FUNCOP_1,FUNCT_1,FUNCT_2,GROUP_6,MSUALG_1,MSUALG_3,MSUHOM_1,TARSKI,ZFMISC_1,RELAT_1,VECTSP_1,RELSET_1,XBOOLE_0,GROUP_1,PBOOLE,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB9,CKB10;
schemes BINOP_1,FUNCT_1,XBOOLE_0;
registrations XBOOLE_0,FUNCT_1,ORDINAL1,FUNCT_2,PBOOLE,STRUCT_0,VECTSP_1,MSUALG_1,ALGSTR_0,RELSET_1,CKB7,CKB8;
constructors BINOP_1,CARD_3,PZFMISC1,VECTSP_1,GROUP_6,ALG_1,MSUALG_3,MSUHOM_1,AUTALG_1,RELSET_1,CKB1,CKB5,CKB6;
requirements SUBSET,BOOLE;
begin
reserve S for non  void non  empty ManySortedSign;
reserve U1 for  non-empty MSAlgebra over S;
definition
let S;
let U1;
func MSAEnd U1 -> (MSFunctionSet of (the Sorts of U1),(the Sorts of U1)) means 
:Def4: ((for f being (Element of it) holds f is (ManySortedFunction of U1,U1)) & (for h being (ManySortedFunction of U1,U1) holds (h in it iff h is_homomorphism U1,U1)));
existence
proof
defpred P[ set ]
 means
(ex msf being (ManySortedFunction of U1,U1) st ($1 = msf & msf is_homomorphism U1,U1));
set T = (the Sorts of U1);
consider X being set such that A1: (for x being set holds (x in X iff (x in ( product ( MSFuncs (T,T) ) ) & P[ x ]))) from XBOOLE_0:sch 1;
(( id T ) in ( product ( MSFuncs (T,T) ) ) & (ex F being (ManySortedFunction of U1,U1) st (( id T ) = F & F is_homomorphism U1,U1))) by AUTALG_1:19,MSUALG_3:9;
then reconsider X as non  empty set by A1;
X is (MSFunctionSet of T,T)
proof
thus T is_transformable_to T;
let q being set;
assume q in X;
then (ex msf being (ManySortedFunction of U1,U1) st (q = msf & msf is_homomorphism U1,U1)) by A1;
hence thesis;
end;
then reconsider X as (MSFunctionSet of T,T);
take X;
thus (for f being (Element of X) holds f is (ManySortedFunction of U1,U1));
let h being (ManySortedFunction of U1,U1);
hereby
assume h in X;
then (ex msf being (ManySortedFunction of U1,U1) st (h = msf & msf is_homomorphism U1,U1)) by A1;
hence h is_homomorphism U1,U1;
end;
A2: h in ( product ( MSFuncs (T,T) ) ) by AUTALG_1:19;
assume h is_homomorphism U1,U1;
hence thesis by A1,A2;
end;
uniqueness
proof
set T = (the Sorts of U1);
let F1 being (MSFunctionSet of T,T);
let F2 being (MSFunctionSet of T,T);
assume that
A3: (for f being (Element of F1) holds f is (ManySortedFunction of U1,U1))
and
A4: (for h being (ManySortedFunction of U1,U1) holds (h in F1 iff h is_homomorphism U1,U1))
and
A5: (for f being (Element of F2) holds f is (ManySortedFunction of U1,U1))
and
A6: (for h being (ManySortedFunction of U1,U1) holds (h in F2 iff h is_homomorphism U1,U1));
A7: F2 c= F1
proof
let q being set;
assume A8: q in F2;
then reconsider h1 = q as (ManySortedFunction of U1,U1) by A5;
h1 is_homomorphism U1,U1 by A6,A8;
hence thesis by A4;
end;
F1 c= F2
proof
let q being set;
assume A9: q in F1;
then reconsider h1 = q as (ManySortedFunction of U1,U1) by A3;
h1 is_homomorphism U1,U1 by A4,A9;
hence thesis by A6;
end;
hence thesis by A7,XBOOLE_0:def 10;
end;
end;
