environ
vocabularies UNIALG_1,FUNCT_2,STRUCT_0,FUNCT_1,MSUALG_3,SUBSET_1,RELAT_1,XBOOLE_0,TARSKI,BINOP_1,ALGSTR_0,MESFUNC1,VECTSP_1,GROUP_1,MSUALG_1,AUTALG_1,PBOOLE,CARD_3,PZFMISC1,MEMBER_1,CARD_1,FUNCOP_1,MSUHOM_1,MSSUBFAM,GROUP_6,WELLORD1,ZFMISC_1,ENDALG;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PBOOLE,CARD_3,BINOP_1,PARTFUN1,FUNCT_2,FUNCOP_1,NUMBERS,STRUCT_0,ALGSTR_0,GROUP_1,VECTSP_1,FINSEQ_1,PZFMISC1,UNIALG_1,MSUALG_1,ALG_1,MSUALG_3,MSUHOM_1,AUTALG_1,GROUP_6,CKB1;
definitions AUTALG_1,FUNCT_1,TARSKI,VECTSP_1,XBOOLE_0,GROUP_1,FUNCOP_1,STRUCT_0,ALGSTR_0,FUNCT_2,CKB1;
theorems AUTALG_1,ALG_1,BINOP_1,FUNCOP_1,FUNCT_1,FUNCT_2,GROUP_6,MSUALG_1,MSUALG_3,MSUHOM_1,TARSKI,ZFMISC_1,RELAT_1,VECTSP_1,RELSET_1,XBOOLE_0,GROUP_1,PBOOLE,CKB1,CKB2,CKB3,CKB4;
schemes BINOP_1,FUNCT_1,XBOOLE_0;
registrations XBOOLE_0,FUNCT_1,ORDINAL1,FUNCT_2,PBOOLE,STRUCT_0,VECTSP_1,MSUALG_1,ALGSTR_0,RELSET_1;
constructors BINOP_1,CARD_3,PZFMISC1,VECTSP_1,GROUP_6,ALG_1,MSUALG_3,MSUHOM_1,AUTALG_1,RELSET_1,CKB1;
requirements SUBSET,BOOLE;
begin
reserve UA for Universal_Algebra;
definition
let UA;
func UAEndComp UA -> (BinOp of ( UAEnd UA )) means 
:Def2: (for x,y being (Element of ( UAEnd UA )) holds ( it . (x,y) ) = ( y * x ));
existence
proof
defpred P[ (Element of ( UAEnd UA )),(Element of ( UAEnd UA )),set ]
 means
$3 = ( $2 * $1 );
A1: (for x,y being (Element of ( UAEnd UA )) holds (ex m being (Element of ( UAEnd UA )) st P[ x,y,m ]))
proof
let x being (Element of ( UAEnd UA ));
let y being (Element of ( UAEnd UA ));
reconsider xx = x,yy = y as (Function of UA,UA);
reconsider m = ( yy * xx ) as (Element of ( UAEnd UA )) by CKB4:1;
take m;
thus thesis;
end;
(ex B being (BinOp of ( UAEnd UA )) st (for x,y being (Element of ( UAEnd UA )) holds P[ x,y,( B . (x,y) ) ])) from BINOP_1:sch 3(A1);
hence thesis;
end;
uniqueness
proof
let b1 being (BinOp of ( UAEnd UA ));
let b2 being (BinOp of ( UAEnd UA ));
assume that
A2: (for x,y being (Element of ( UAEnd UA )) holds ( b1 . (x,y) ) = ( y * x ))
and
A3: (for x,y being (Element of ( UAEnd UA )) holds ( b2 . (x,y) ) = ( y * x ));
(for x,y being (Element of ( UAEnd UA )) holds ( b1 . (x,y) ) = ( b2 . (x,y) ))
proof
let x being (Element of ( UAEnd UA ));
let y being (Element of ( UAEnd UA ));
thus ( b1 . (x,y) ) = ( y * x ) by A2
.= ( b2 . (x,y) ) by A3;
end;
hence thesis by BINOP_1:2;
end;
end;
