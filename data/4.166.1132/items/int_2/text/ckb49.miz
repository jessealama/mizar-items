environ
vocabularies NUMBERS,INT_1,ORDINAL1,COMPLEX1,SUBSET_1,XXREAL_0,CARD_1,ARYTM_3,ARYTM_1,RELAT_1,NAT_1,XCMPLX_0,INT_2;
notations SUBSET_1,NUMBERS,XCMPLX_0,ORDINAL1,INT_1,NAT_1,COMPLEX1,XXREAL_0,CKB1,CKB13,CKB16,CKB36,CKB41;
definitions INT_1,CKB13,CKB16,CKB36,CKB41;
theorems INT_1,ABSVALUE,NAT_1,XCMPLX_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB47,CKB48;
schemes NAT_1;
registrations XREAL_0,NAT_1,INT_1,ORDINAL1,XBOOLE_0,CKB19,CKB45,CKB46;
constructors XXREAL_0,REAL_1,NAT_1,COMPLEX1,INT_1,CKB1,CKB13,CKB16,CKB36,CKB41;
requirements REAL,NUMERALS,SUBSET,ARITHM,BOOLE;
begin
reserve i for Nat;
reserve j for Nat;
theorem
(for i,j being Integer holds ((i >= ( 0 ) & j >= ( 0 )) implies (( ( abs i ) mod ( abs j ) ) = ( i mod j ) & ( ( abs i ) div ( abs j ) ) = ( i div j ))))
proof
let i being Integer;
let j being Integer;
assume that
A1: i >= ( 0 )
and
A2: j >= ( 0 );
per cases  by A2,XXREAL_0:1;
suppose A3: j > ( 0 );

i = ( abs i ) by A1,ABSVALUE:def 1;
hence thesis by A3,ABSVALUE:def 1;
end;
suppose A4: j = ( 0 );

( abs ( 0 ) ) = ( 0 ) by ABSVALUE:def 1;
then (( ( abs i ) mod ( abs ( 0 ) ) ) = ( 0 ) & ( ( abs i ) div ( abs ( 0 ) ) ) = ( 0 )) by INT_1:48,INT_1:def 10;
hence thesis by A4,INT_1:48,INT_1:def 10;
end;
end;
