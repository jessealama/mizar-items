environ
vocabularies NUMBERS,INT_1,ORDINAL1,COMPLEX1,SUBSET_1,XXREAL_0,CARD_1,ARYTM_3,ARYTM_1,RELAT_1,NAT_1,XCMPLX_0,INT_2;
notations SUBSET_1,NUMBERS,XCMPLX_0,ORDINAL1,INT_1,NAT_1,COMPLEX1,XXREAL_0,CKB1,CKB13,CKB16,CKB36;
definitions INT_1,CKB13,CKB16,CKB36;
theorems INT_1,ABSVALUE,NAT_1,XCMPLX_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36;
schemes NAT_1;
registrations XREAL_0,NAT_1,INT_1,ORDINAL1,XBOOLE_0,CKB19;
constructors XXREAL_0,REAL_1,NAT_1,COMPLEX1,INT_1,CKB1,CKB13,CKB16,CKB36;
requirements REAL,NUMERALS,SUBSET,ARITHM,BOOLE;
begin
reserve a for Integer;
reserve b for Integer;
reserve c for Integer;
reserve a1 for Integer;
reserve b1 for Integer;
reserve a2 for Integer;
reserve b2 for Integer;
theorem
((a <> ( 0 ) or b <> ( 0 )) implies (ex a1 st (ex b1 st ((a = ( ( a gcd b ) * a1 ) & b = ( ( a gcd b ) * b1 )) & a1,b1 are_relative_prime ))))
proof
assume (a <> ( 0 ) or b <> ( 0 ));
then A1: ( a gcd b ) <> ( 0 ) by CKB17:1;
( a gcd b ) divides a by CKB16:def 1;
then consider a1 such that A2: a = ( ( a gcd b ) * a1 ) by INT_1:def 3;
( a gcd b ) divides b by CKB16:def 1;
then consider b1 such that A3: b = ( ( a gcd b ) * b1 ) by INT_1:def 3;
( a1 gcd b1 ) divides b1 by CKB16:def 1;
then consider b2 such that A4: b1 = ( ( a1 gcd b1 ) * b2 ) by INT_1:def 3;
b = ( ( ( a gcd b ) * ( a1 gcd b1 ) ) * b2 ) by A3,A4;
then A5: ( ( a gcd b ) * ( a1 gcd b1 ) ) divides b by INT_1:def 3;
( a1 gcd b1 ) divides a1 by CKB16:def 1;
then consider a2 such that A6: a1 = ( ( a1 gcd b1 ) * a2 ) by INT_1:def 3;
a = ( ( ( a gcd b ) * ( a1 gcd b1 ) ) * a2 ) by A2,A6;
then ( ( a gcd b ) * ( a1 gcd b1 ) ) divides a by INT_1:def 3;
then ( ( a gcd b ) * ( a1 gcd b1 ) ) divides ( a gcd b ) by A5,CKB16:def 1;
then consider c such that A7: ( a gcd b ) = ( ( ( a gcd b ) * ( a1 gcd b1 ) ) * c ) by INT_1:def 3;
( ( a gcd b ) * 1 ) = ( ( a gcd b ) * ( ( a1 gcd b1 ) * c ) ) by A7;
then 1 = ( ( a1 gcd b1 ) * c ) by A1,XCMPLX_1:5;
then (( a1 gcd b1 ) = 1 or ( a1 gcd b1 ) = ( - 1 )) by INT_1:9;
then a1,b1 are_relative_prime  by CKB36:def 1;
hence thesis by A2,A3;
end;
