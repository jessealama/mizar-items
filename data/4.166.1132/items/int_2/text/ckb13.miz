environ
vocabularies NUMBERS,INT_1,ORDINAL1,COMPLEX1,SUBSET_1,XXREAL_0,CARD_1,ARYTM_3,ARYTM_1,RELAT_1,NAT_1,XCMPLX_0,INT_2;
notations SUBSET_1,NUMBERS,XCMPLX_0,ORDINAL1,INT_1,NAT_1,COMPLEX1,XXREAL_0,CKB1;
definitions INT_1;
theorems INT_1,ABSVALUE,NAT_1,XCMPLX_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
schemes NAT_1;
registrations XREAL_0,NAT_1,INT_1,ORDINAL1,XBOOLE_0;
constructors XXREAL_0,REAL_1,NAT_1,COMPLEX1,INT_1,CKB1;
requirements REAL,NUMERALS,SUBSET,ARITHM,BOOLE;
begin
reserve a for Integer;
reserve b for Integer;
reserve k for Nat;
definition
let a being Integer;
let b being Integer;
func a lcm b -> Nat means 
:Def2: ((a divides it & b divides it) & (for m being Integer holds ((a divides m & b divides m) implies it divides m)));
existence
proof
per cases ;
suppose A1: (a = ( 0 ) or b = ( 0 ));

take ( 0 );
thus (a divides ( 0 ) & b divides ( 0 )) by CKB9:1;
thus thesis by A1;
end;
suppose A2: (a <> ( 0 ) & b <> ( 0 ));

defpred P[ Nat ]
 means
((a divides $1 & b divides $1) & $1 <> ( 0 ));
( a * b ) in ( INT ) by INT_1:def 2;
then consider k being (Element of ( NAT )) such that A3: (( a * b ) = k or ( a * b ) = ( - k )) by INT_1:def 1;
b divides ( a * b ) by INT_1:def 3;
then A4: b divides k by A3,CKB7:1;
a divides ( a * b ) by INT_1:def 3;
then A5: a divides k by A3,CKB7:1;
k <> ( 0 ) by A2,A3,XCMPLX_1:6;
then A6: (ex k being Nat st P[ k ]) by A5,A4;
consider k being Nat such that A7: P[ k ] and A8: (for n being Nat holds (P[ n ] implies k <= n)) from NAT_1:sch 5(A6);
take k;
thus (a divides k & b divides k) by A7;
let m being Integer;
m in ( INT ) by INT_1:def 2;
then consider n being (Element of ( NAT )) such that A9: (m = n or m = ( - n )) by INT_1:def 1;
assume that
A10: a divides m
and
A11: b divides m;
b divides n by A9,A11,CKB7:1;
then A12: b divides ( n mod k ) by A7,CKB10:1;
A13: k > ( 0 ) by A7,NAT_1:3;
then ( n mod k ) in ( NAT ) by INT_1:3,INT_1:57;
then reconsider i = ( n mod k ) as Nat;
assume A14: (not k divides m);
A15:now
assume i = ( 0 );
then ( n - ( ( n div k ) * k ) ) = ( 0 ) by A7,INT_1:def 10;
then k divides n by INT_1:def 3;
hence contradiction by A9,A14,CKB7:1;
end;
a divides n by A9,A10,CKB7:1;
then a divides ( n mod k ) by A7,CKB10:1;
then k divides n by A8,A13,A12,A15,INT_1:58;
hence contradiction by A9,A14,CKB7:1;
end;
end;
uniqueness
proof
let IT1 being Nat;
let IT2 being Nat;
assume ((((a divides IT1 & b divides IT1) & (for m being Integer holds ((a divides m & b divides m) implies IT1 divides m))) & a divides IT2) & (b divides IT2 & (for m being Integer holds ((a divides m & b divides m) implies IT2 divides m))));
then (IT1 divides IT2 & IT2 divides IT1);
hence thesis by CKB12:1;
end;
commutativity;
end;
