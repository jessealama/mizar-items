environ
vocabularies NUMBERS,INT_1,ORDINAL1,COMPLEX1,SUBSET_1,XXREAL_0,CARD_1,ARYTM_3,ARYTM_1,RELAT_1,NAT_1,XCMPLX_0,INT_2;
notations SUBSET_1,NUMBERS,XCMPLX_0,ORDINAL1,INT_1,NAT_1,COMPLEX1,XXREAL_0,CKB1,CKB13;
definitions INT_1,CKB13;
theorems INT_1,ABSVALUE,NAT_1,XCMPLX_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15;
schemes NAT_1;
registrations XREAL_0,NAT_1,INT_1,ORDINAL1,XBOOLE_0;
constructors XXREAL_0,REAL_1,NAT_1,COMPLEX1,INT_1,CKB1,CKB13;
requirements REAL,NUMERALS,SUBSET,ARITHM,BOOLE;
begin
reserve a for Integer;
reserve b for Integer;
reserve i for Nat;
reserve k for Nat;
definition
let a being Integer;
let b being Integer;
func a gcd b -> Nat means 
:Def3: ((it divides a & it divides b) & (for m being Integer holds ((m divides a & m divides b) implies m divides it)));
existence
proof
per cases ;
suppose A1: a = ( 0 );

b in ( INT ) by INT_1:def 2;
then consider k being (Element of ( NAT )) such that A2: (b = k or b = ( - k )) by INT_1:def 1;
take k;
thus (k divides a & k divides b) by A1,A2,CKB8:1,CKB9:1;
let m being Integer;
assume that
m divides a
and
A3: m divides b;
thus thesis by A2,A3,CKB7:1;
end;
suppose A4: b = ( 0 );

a in ( INT ) by INT_1:def 2;
then consider k being (Element of ( NAT )) such that A5: (a = k or a = ( - k )) by INT_1:def 1;
take k;
thus (k divides a & k divides b) by A4,A5,CKB8:1,CKB9:1;
let m being Integer;
assume that
A6: m divides a
and
m divides b;
thus thesis by A5,A6,CKB7:1;
end;
suppose A7: (a <> ( 0 ) & b <> ( 0 ));

defpred P[ Nat ]
 means
(($1 divides a & $1 divides b) & $1 <> ( 0 ));
A8: a divides ( a * b ) by INT_1:def 3;
( a * b ) in ( INT ) by INT_1:def 2;
then consider k being (Element of ( NAT )) such that A9: (( a * b ) = k or ( a * b ) = ( - k )) by INT_1:def 1;
k <> ( 0 ) by A7,A9,XCMPLX_1:6;
then A10: k > ( 0 ) by NAT_1:3;
A11: (for i being Nat holds (P[ i ] implies i <= k))
proof
let i being Nat;
assume P[ i ];
then i divides ( a * b ) by A8,CKB6:1;
then i divides k by A9,CKB7:1;
hence thesis by A10,CKB15:1;
end;
(1 divides a & 1 divides b) by CKB9:1;
then A12: (ex k being Nat st P[ k ]);
consider k being Nat such that A13: P[ k ] and A14: (for n being Nat holds (P[ n ] implies n <= k)) from NAT_1:sch 6(A11,A12);
take k;
thus (k divides a & k divides b) by A13;
let m being Integer;
assume that
A15: m divides a
and
A16: m divides b;
m in ( INT ) by INT_1:def 2;
then consider n being (Element of ( NAT )) such that A17: (m = n or m = ( - n )) by INT_1:def 1;
set i = ( n lcm k );
A18: k divides i by CKB13:def 1;
A19:now
assume i = ( 0 );
then (n = ( 0 ) or k = ( 0 )) by CKB14:1;
hence contradiction by A7,A13,A17,A15,CKB4:1;
end;
then ( 0 ) < i by NAT_1:3;
then A20: k <= i by A18,CKB15:1;
n divides b by A17,A16,CKB8:1;
then A21: ( n lcm k ) divides b by A13,CKB13:def 1;
n divides a by A17,A15,CKB8:1;
then ( n lcm k ) divides a by A13,CKB13:def 1;
then k >= ( n lcm k ) by A14,A21,A19;
then k = i by A20,XXREAL_0:1;
then A22: n divides k by CKB13:def 1;
assume (not m divides k);
hence contradiction by A17,A22,CKB8:1;
end;
end;
uniqueness
proof
let IT1 being Nat;
let IT2 being Nat;
assume ((((IT1 divides a & IT1 divides b) & (for m being Integer holds ((m divides a & m divides b) implies m divides IT1))) & IT2 divides a) & (IT2 divides b & (for m being Integer holds ((m divides a & m divides b) implies m divides IT2))));
then (IT1 divides IT2 & IT2 divides IT1);
hence thesis by CKB12:1;
end;
commutativity;
end;
