environ
vocabularies NUMBERS,INT_1,ORDINAL1,COMPLEX1,SUBSET_1,XXREAL_0,CARD_1,ARYTM_3,ARYTM_1,RELAT_1,NAT_1,XCMPLX_0,INT_2;
notations SUBSET_1,NUMBERS,XCMPLX_0,ORDINAL1,INT_1,NAT_1,COMPLEX1,XXREAL_0,CKB1,CKB13,CKB16,CKB36;
definitions INT_1,CKB13,CKB16,CKB36;
theorems INT_1,ABSVALUE,NAT_1,XCMPLX_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37;
schemes NAT_1;
registrations XREAL_0,NAT_1,INT_1,ORDINAL1,XBOOLE_0,CKB19;
constructors XXREAL_0,REAL_1,NAT_1,COMPLEX1,INT_1,CKB1,CKB13,CKB16,CKB36;
requirements REAL,NUMERALS,SUBSET,ARITHM,BOOLE;
begin
reserve a for Integer;
reserve b for Integer;
reserve c for Integer;
reserve d for Integer;
reserve k for Integer;
reserve l for Integer;
theorem
Th39: (a,b are_relative_prime  implies (((( ( c * a ) gcd ( c * b ) ) = ( abs c ) & ( ( c * a ) gcd ( b * c ) ) = ( abs c )) & ( ( a * c ) gcd ( c * b ) ) = ( abs c )) & ( ( a * c ) gcd ( b * c ) ) = ( abs c )))
proof
assume a,b are_relative_prime ;
then A1: ( a gcd b ) = 1 by CKB36:def 1;
thus A2: ( ( c * a ) gcd ( c * b ) ) = ( abs c )
proof
( ( c * a ) gcd ( c * b ) ) divides ( c * b ) by CKB16:def 1;
then consider l such that A3: ( c * b ) = ( ( ( c * a ) gcd ( c * b ) ) * l ) by INT_1:def 3;
( ( c * a ) gcd ( c * b ) ) divides ( c * a ) by CKB16:def 1;
then consider k such that A4: ( c * a ) = ( ( ( c * a ) gcd ( c * b ) ) * k ) by INT_1:def 3;
(c divides ( c * a ) & c divides ( c * b )) by CKB3:1;
then c divides ( ( c * a ) gcd ( c * b ) ) by CKB16:def 1;
then consider d such that A5: ( ( c * a ) gcd ( c * b ) ) = ( c * d ) by INT_1:def 3;
A6: ( c * b ) = ( c * ( d * l ) ) by A5,A3;
A7: ( c * a ) = ( c * ( d * k ) ) by A5,A4;
A8: (c <> ( 0 ) implies ( ( c * a ) gcd ( c * b ) ) = ( abs c ))
proof
assume A9: c <> ( 0 );
then b = ( d * l ) by A6,XCMPLX_1:5;
then A10: d divides b by INT_1:def 3;
a = ( d * k ) by A7,A9,XCMPLX_1:5;
then d divides a by INT_1:def 3;
then d divides 1 by A1,A10,CKB16:def 1;
then (( ( c * a ) gcd ( c * b ) ) = ( c * 1 ) or ( ( c * a ) gcd ( c * b ) ) = ( c * ( - 1 ) )) by A5,CKB26:1;
then (( ( c * a ) gcd ( c * b ) ) = ( c * 1 ) or ( ( c * a ) gcd ( c * b ) ) = ( ( - c ) * 1 ));
then A11: ( abs ( ( c * a ) gcd ( c * b ) ) ) = ( abs c ) by COMPLEX1:52;
( ( c * a ) gcd ( c * b ) ) >= ( 0 ) by NAT_1:2;
hence thesis by A11,ABSVALUE:def 1;
end;
( ( ( 0 ) * a ) gcd ( ( 0 ) * b ) ) = ( 0 ) by CKB17:1
.= ( abs ( 0 ) ) by ABSVALUE:2;
hence thesis by A8;
end;

hence ( ( c * a ) gcd ( b * c ) ) = ( abs c );
thus thesis by A2;
end;
