environ
vocabularies NUMBERS,INT_1,ORDINAL1,COMPLEX1,SUBSET_1,XXREAL_0,CARD_1,ARYTM_3,ARYTM_1,RELAT_1,NAT_1,XCMPLX_0,INT_2;
notations SUBSET_1,NUMBERS,XCMPLX_0,ORDINAL1,INT_1,NAT_1,COMPLEX1,XXREAL_0,CKB1,CKB13,CKB16;
definitions INT_1,CKB13,CKB16;
theorems INT_1,ABSVALUE,NAT_1,XCMPLX_1,XREAL_1,COMPLEX1,XXREAL_0,ORDINAL1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes NAT_1;
registrations XREAL_0,NAT_1,INT_1,ORDINAL1,XBOOLE_0,CKB19;
constructors XXREAL_0,REAL_1,NAT_1,COMPLEX1,INT_1,CKB1,CKB13,CKB16;
requirements REAL,NUMERALS,SUBSET,ARITHM,BOOLE;
begin
reserve a for Integer;
reserve b for Integer;
reserve c for Integer;
theorem
(a divides b iff ( abs a ) divides ( abs b ))
proof
thus (a divides b implies ( abs a ) divides ( abs b ))
proof
assume a divides b;
then consider c such that A1: b = ( a * c ) by INT_1:def 3;
( abs b ) = ( ( abs a ) * ( abs c ) ) by A1,COMPLEX1:65;
hence thesis by INT_1:def 3;
end;

assume ( abs a ) divides ( abs b );
then consider m being Integer such that A2: ( abs b ) = ( ( abs a ) * m ) by INT_1:def 3;
A3: (a >= ( 0 ) implies a divides b)
proof
assume a >= ( 0 );
then A4: ( abs b ) = ( a * m ) by A2,ABSVALUE:def 1;
per cases ;
suppose b < ( 0 );

then ( - b ) = ( a * m ) by A4,ABSVALUE:def 1;
then b = ( a * ( - m ) );
hence thesis by INT_1:def 3;
end;
suppose b >= ( 0 );

then b = ( a * m ) by A4,ABSVALUE:def 1;
hence thesis by INT_1:def 3;
end;
end;
(a < ( 0 ) implies a divides b)
proof
assume a < ( 0 );
then A5: ( abs b ) = ( ( - a ) * m ) by A2,ABSVALUE:def 1;
per cases ;
suppose b < ( 0 );

then ( - b ) = ( - ( a * m ) ) by A5,ABSVALUE:def 1;
hence thesis by INT_1:def 3;
end;
suppose b >= ( 0 );

then b = ( a * ( - m ) ) by A5,ABSVALUE:def 1;
hence thesis by INT_1:def 3;
end;
end;
hence thesis by A3;
end;
