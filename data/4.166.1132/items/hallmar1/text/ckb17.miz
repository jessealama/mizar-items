environ
vocabularies NUMBERS,FINSET_1,CARD_1,XBOOLE_0,ARYTM_3,ARYTM_1,SUBSET_1,XXREAL_0,NAT_1,RELAT_1,FINSEQ_1,ZFMISC_1,FUNCT_1,TARSKI,FUNCT_4,HALLMAR1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FINSET_1,FINSEQ_1,FUNCT_2,FUNCT_7,CKB7;
definitions TARSKI,XBOOLE_0,CKB7;
theorems CARD_2,SPPOL_1,EULER_1,XBOOLE_1,ZFMISC_1,FUNCT_1,PARTFUN1,FINSET_1,PENCIL_1,CARD_1,TARSKI,NAT_1,XBOOLE_0,FINSEQ_1,FUNCT_7,FINSEQ_3,FINSEQ_5,TAXONOM1,RELAT_1,FUNCT_2,ENUMSET1,FINSEQ_2,REALSET1,XREAL_1,XXREAL_0,ORDINAL1,CKB1,CKB5,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
schemes NAT_1,FUNCT_2,XBOOLE_0,CKB2,CKB3;
registrations SUBSET_1,RELAT_1,FUNCT_1,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,CHAIN_1,ORDINAL1,CARD_1,RELSET_1,CKB4,CKB6,CKB10;
constructors XXREAL_0,REAL_1,NAT_1,FUNCT_7,RELSET_1,CKB7;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
definition
let F being  finite set;
let A being (FinSequence of ( bool F ));
let i being (Element of ( NAT ));
let x being set;
func Cut (A,i,x) -> (FinSequence of ( bool F ))
means
:Def2: (( dom it ) = ( dom A ) & (for k being (Element of ( NAT )) holds (k in ( dom it ) implies ((i = k implies ( it . k ) = ( ( A . k ) \ { x } )) & (i <> k implies ( it . k ) = ( A . k ))))));
existence
proof
( A . i ) c= F
proof
per cases ;
suppose i in ( dom A );

then ( A . i ) in ( bool F ) by FINSEQ_2:11;
hence thesis;
end;
suppose (not i in ( dom A ));

then ( A . i ) = ( {} ) by FUNCT_1:def 2;
hence thesis by XBOOLE_1:2;
end;
end;
then reconsider EX = ( ( A . i ) \ { x } ) as (Subset of F) by XBOOLE_1:1;
set XX = ( A +* (i,EX) );
reconsider XX as (FinSequence of ( bool F ));
take XX;
( dom XX ) = ( dom A ) by FUNCT_7:30;
hence thesis by FUNCT_7:31,FUNCT_7:32;
end;
uniqueness
proof
let f1 being (FinSequence of ( bool F )),f2 being (FinSequence of ( bool F ));
assume that
A1: ( dom f1 ) = ( dom A )
and
A2: (for k being (Element of ( NAT )) holds (k in ( dom f1 ) implies ((i = k implies ( f1 . k ) = ( ( A . k ) \ { x } )) & (i <> k implies ( f1 . k ) = ( A . k )))))
and
A3: ( dom f2 ) = ( dom A )
and
A4: (for k being (Element of ( NAT )) holds (k in ( dom f2 ) implies ((i = k implies ( f2 . k ) = ( ( A . k ) \ { x } )) & (i <> k implies ( f2 . k ) = ( A . k )))));
(for z being Nat holds (z in ( dom f1 ) implies ( f1 . z ) = ( f2 . z )))
proof
let z being Nat;
assume A5: z in ( dom f1 );
per cases ;
suppose A6: z = i;

then ( f1 . z ) = ( ( A . i ) \ { x } ) by A2,A5
.= ( f2 . z ) by A1,A3,A4,A5,A6;
hence thesis;
end;
suppose A7: z <> i;

then ( f1 . z ) = ( A . z ) by A2,A5
.= ( f2 . z ) by A1,A3,A4,A5,A7;
hence thesis;
end;
end;
hence thesis by A1,A3,FINSEQ_1:13;
end;
end;
