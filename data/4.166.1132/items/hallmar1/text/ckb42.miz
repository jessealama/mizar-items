environ
vocabularies NUMBERS,FINSET_1,CARD_1,XBOOLE_0,ARYTM_3,ARYTM_1,SUBSET_1,XXREAL_0,NAT_1,RELAT_1,FINSEQ_1,ZFMISC_1,FUNCT_1,TARSKI,FUNCT_4,HALLMAR1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FINSET_1,FINSEQ_1,FUNCT_2,FUNCT_7,CKB7,CKB17,CKB22,CKB23,CKB31,CKB32,CKB33;
definitions TARSKI,XBOOLE_0,CKB7,CKB17,CKB22,CKB23,CKB31,CKB32,CKB33;
theorems CARD_2,SPPOL_1,EULER_1,XBOOLE_1,ZFMISC_1,FUNCT_1,PARTFUN1,FINSET_1,PENCIL_1,CARD_1,TARSKI,NAT_1,XBOOLE_0,FINSEQ_1,FUNCT_7,FINSEQ_3,FINSEQ_5,TAXONOM1,RELAT_1,FUNCT_2,ENUMSET1,FINSEQ_2,REALSET1,XREAL_1,XXREAL_0,ORDINAL1,CKB1,CKB5,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB26,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41;
schemes NAT_1,FUNCT_2,XBOOLE_0,CKB2,CKB3;
registrations SUBSET_1,RELAT_1,FUNCT_1,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,CHAIN_1,ORDINAL1,CARD_1,RELSET_1,CKB4,CKB6,CKB10,CKB24,CKB25,CKB27;
constructors XXREAL_0,REAL_1,NAT_1,FUNCT_7,RELSET_1,CKB7,CKB17,CKB22,CKB23,CKB31,CKB32,CKB33;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
definition
let F being non  empty set;
let A being (FinSequence of ( bool F ));
assume A1: A is  non-empty;
mode Singlification of A
 -> (Reduction of A)
means :Def8: (for i being (Element of ( NAT )) holds (i in ( dom A ) implies ( card ( it . i ) ) = 1));
existence
proof
deffunc F(set) = { ( choose ( A . $1 ) ) };
A2: (for x being set holds (x in ( dom A ) implies F(x) in ( bool F )))
proof
let x being set;
assume A3: x in ( dom A );
then ( A . x ) <> ( {} ) by A1,CKB5:1;
then A4: { ( choose ( A . x ) ) } c= ( A . x ) by ZFMISC_1:31;
( A . x ) in ( bool F ) by A3,PARTFUN1:4;
then { ( choose ( A . x ) ) } c= F by A4,XBOOLE_1:1;
hence thesis;
end;
(ex f being (Function of ( dom A ),( bool F )) st (for x being set holds (x in ( dom A ) implies ( f . x ) = F(x)))) from FUNCT_2:sch 2(A2);
then consider f being (Function of ( dom A ),( bool F )) such that A5: (for x being set holds (x in ( dom A ) implies ( f . x ) = F(x)));
A6: (for i being (Element of ( NAT )) holds (i in ( dom f ) implies ( f . i ) = { ( choose ( A . i ) ) }))
proof
let i being (Element of ( NAT ));
assume i in ( dom f );
then i in ( dom A ) by FUNCT_2:def 1;
hence thesis by A5;
end;
A7: ( dom f ) = ( dom A ) by FUNCT_2:def 1;
A8: (for i being (Element of ( NAT )) holds (i in ( dom A ) implies ( f . i ) c= ( A . i )))
proof
let i being (Element of ( NAT ));
assume A9: i in ( dom A );
then ( A . i ) <> ( {} ) by A1,CKB5:1;
then { ( choose ( A . i ) ) } c= ( A . i ) by ZFMISC_1:31;
hence thesis by A7,A6,A9;
end;
( dom f ) = ( dom A ) by FUNCT_2:def 1
.= ( Seg ( len A ) ) by FINSEQ_1:def 3;
then A10: f is FinSequence by FINSEQ_1:def 2;
( rng f ) c= ( bool F ) by RELAT_1:def 19;
then f is (FinSequence of ( bool F )) by A10,FINSEQ_1:def 4;
then reconsider f as (Reduction of A) by A7,A8,CKB32:def 1;
(for i being (Element of ( NAT )) holds (i in ( dom A ) implies ( card ( f . i ) ) = 1))
proof
let i being (Element of ( NAT ));
assume i in ( dom A );
then i in ( dom f ) by FUNCT_2:def 1;
then ( f . i ) = { ( choose ( A . i ) ) } by A6;
hence thesis by CARD_2:42;
end;
hence thesis;
end;
end;
