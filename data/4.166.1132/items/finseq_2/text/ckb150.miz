environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,SUBSET_1,FINSEQ_1,XXREAL_0,CARD_1,ARYTM_1,ARYTM_3,TARSKI,RELAT_1,FUNCT_1,ORDINAL4,FUNCT_2,FUNCOP_1,ZFMISC_1,PARTFUN1,FINSEQ_2,PBOOLE,CARD_3,VALUED_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,DOMAIN_1,NAT_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_3,FINSEQ_1,BINOP_1,PBOOLE,FUNCOP_1,CARD_3,XXREAL_0,VALUED_1,CKB53,CKB65,CKB102,CKB104,CKB106,CKB108,CKB111,CKB112;
definitions TARSKI,FUNCT_1,FINSEQ_1,CARD_1,PBOOLE,FUNCOP_1,CKB53,CKB65,CKB102,CKB112;
theorems TARSKI,ZFMISC_1,ENUMSET1,NAT_1,FUNCT_1,FUNCT_2,FUNCT_3,FINSEQ_1,FUNCOP_1,RELAT_1,RELSET_1,XBOOLE_1,XREAL_1,GRFUNC_1,XXREAL_0,ORDINAL1,CARD_1,SUBSET_1,PBOOLE,CARD_3,VALUED_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB65,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB105,CKB107,CKB109,CKB112,CKB115,CKB116,CKB117,CKB118,CKB119,CKB120,CKB121,CKB122,CKB123,CKB124,CKB125,CKB126,CKB127,CKB128,CKB129,CKB130,CKB131,CKB132,CKB133,CKB134,CKB135,CKB136,CKB137,CKB138,CKB139,CKB140,CKB141,CKB142,CKB143,CKB144,CKB145,CKB146,CKB147,CKB148,CKB149;
schemes FINSEQ_1,NAT_1,FRAENKEL,PBOOLE,FUNCT_2,CKB26,CKB27;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,FUNCT_2,FUNCOP_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,CARD_1,RELSET_1,PBOOLE,CARD_3,CKB54,CKB55,CKB64,CKB66,CKB103,CKB110,CKB113,CKB114;
constructors RELAT_2,PARTFUN1,BINOP_1,DOMAIN_1,FUNCT_3,FUNCOP_1,SQUARE_1,NAT_1,FINSEQ_1,RELSET_1,PBOOLE,CARD_3,VALUED_1,SETFAM_1,CKB53,CKB65,CKB102,CKB106,CKB108,CKB112;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
theorem
(for f being Function holds (for x,y being set holds ((x in ( dom f ) & y in ( dom f )) implies ( f * <* x,y *> ) = <* ( f . x ),( f . y ) *>)))
proof
let f being Function;
let x being set;
let y being set;
assume that
A1: x in ( dom f )
and
A2: y in ( dom f );
reconsider D = ( dom f ),E = ( rng f ) as non  empty set by A1,FUNCT_1:3;
( rng <* x,y *> ) = { x,y } by CKB13:1;
then ( rng <* x,y *> ) c= D by A1,A2,ZFMISC_1:32;
then reconsider p = <* x,y *> as (FinSequence of D) by FINSEQ_1:def 4;
reconsider g = f as (Function of D,E) by FUNCT_2:def 1,RELSET_1:4;
thus ( f * <* x,y *> ) = ( g * p )
.= <* ( f . x ),( f . y ) *> by CKB40:1;
end;
