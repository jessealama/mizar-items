environ
vocabularies NUMBERS,SEQ_1,XREAL_0,ORDINAL1,SUBSET_1,FUNCT_1,XXREAL_0,ORDINAL2,RELAT_1,XXREAL_2,CSSPACE,RSSPACE,TARSKI,COMSEQ_1,ARYTM_3,REAL_1,CARD_1,COMPLEX1,CFUNCT_1,VALUED_1,XBOOLE_0,RLSUB_1,RLVECT_1,CLVECT_1,ALGSTR_0,SEQ_4,STRUCT_0,SUPINF_2,ARYTM_1,NORMSP_1,ZFMISC_1,REALSET1,PRE_TOPC,MEMBER_1,NAT_1,RSSPACE3,SEQ_2,CLOPBAN1,FUNCOP_1,FUNCT_2,LOPBAN_1,REWRITE1,CSSPACE4,NORMSP_0,METRIC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,PRE_TOPC,DOMAIN_1,RELAT_1,FUNCOP_1,REALSET1,XXREAL_0,XREAL_0,XXREAL_2,COMPLEX1,REAL_1,NAT_1,STRUCT_0,ALGSTR_0,ORDINAL1,NUMBERS,FUNCT_1,RELSET_1,FUNCT_2,INTEGRA2,MEASURE6,RLVECT_1,VALUED_1,COMSEQ_1,CFUNCT_1,COMSEQ_2,NORMSP_0,NORMSP_1,SEQ_1,SEQ_2,CLVECT_1,SEQ_4,PARTFUN1,CSSPACE,CSSPACE3,CLOPBAN1,CKB3,CKB11,CKB18;
definitions TARSKI,XBOOLE_0,SEQ_4,RLVECT_1,REALSET1,CLOPBAN1,BINOP_1,STRUCT_0,ALGSTR_0,VALUED_1,NORMSP_0,XXREAL_2,CKB3,CKB11,CKB18;
theorems RELAT_1,TARSKI,ZFMISC_1,XBOOLE_0,NAT_1,FUNCOP_1,SEQ_1,SEQ_2,SEQ_4,FUNCT_1,FUNCT_2,RLVECT_1,XREAL_0,XCMPLX_0,INTEGRA2,RSSPACE2,CSSPACE,COMSEQ_2,COMPLEX1,CLVECT_1,COMSEQ_1,CSSPACE3,COMSEQ_3,CLOPBAN1,XCMPLX_1,XREAL_1,XXREAL_0,LOPBAN_1,NORMSP_1,VALUED_1,XXREAL_2,MEASURE6,NORMSP_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18;
schemes SEQ_1,FUNCT_2,XBOOLE_0,COMSEQ_1;
registrations SUBSET_1,RELAT_1,ORDINAL1,FUNCT_2,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,REALSET1,STRUCT_0,CLVECT_1,CSSPACE3,VALUED_0,CSSPACE,VALUED_1,FUNCOP_1,SEQ_2,SEQ_4,RFUNCT_1,NORMSP_0,RELSET_1,CKB6,CKB7,CKB9,CKB17;
constructors PARTFUN1,REAL_1,NAT_1,COMPLEX1,SEQM_3,COMSEQ_2,REALSET1,MEASURE6,INTEGRA2,LOPBAN_1,CSSPACE3,CLOPBAN1,SEQ_1,XXREAL_2,RVSUM_1,SEQ_4,RELSET_1,BINOP_2,SEQ_2,SERIES_1,CKB3,CKB11,CKB18;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
theorem
Th3: ((((((((((the carrier of ( Complex_linfty_Space )) = ( the_set_of_BoundedComplexSequences ) & (for x being set holds (x is (VECTOR of ( Complex_linfty_Space )) iff (x is Complex_Sequence & ( seq_id x ) is  bounded)))) & ( 0. ( Complex_linfty_Space ) ) = ( CZeroseq )) & (for u being (VECTOR of ( Complex_linfty_Space )) holds u = ( seq_id u ))) & (for u,v being (VECTOR of ( Complex_linfty_Space )) holds ( u + v ) = ( ( seq_id u ) + ( seq_id v ) ))) & (for c being Complex holds (for u being (VECTOR of ( Complex_linfty_Space )) holds ( c * u ) = ( c (#) ( seq_id u ) )))) & (for u being (VECTOR of ( Complex_linfty_Space )) holds (( - u ) = ( - ( seq_id u ) ) & ( seq_id ( - u ) ) = ( - ( seq_id u ) )))) & (for u,v being (VECTOR of ( Complex_linfty_Space )) holds ( u - v ) = ( ( seq_id u ) - ( seq_id v ) ))) & (for v being (VECTOR of ( Complex_linfty_Space )) holds ( seq_id v ) is  bounded)) & (for v being (VECTOR of ( Complex_linfty_Space )) holds ||. v .|| = ( upper_bound ( rng |. ( seq_id v ) .| ) )))
proof
set l1 = ( Complex_linfty_Space );
A1: (for x being set holds (x is (Element of l1) iff (x is Complex_Sequence & ( seq_id x ) is  bounded)))
proof
let x being set;
(x in ( the_set_of_ComplexSequences ) iff x is Complex_Sequence) by CSSPACE:def 1;
hence thesis by CKB3:def 1;
end;
A2: (for u,v being (VECTOR of l1) holds ( u + v ) = ( ( seq_id u ) + ( seq_id v ) ))
proof
let u being (VECTOR of l1);
let v being (VECTOR of l1);
reconsider u1 = u,v1 = v as (VECTOR of ( Linear_Space_of_ComplexSequences )) by CKB8:1,CLVECT_1:29;
set L1 = ( Linear_Space_of_ComplexSequences );
set W = ( the_set_of_BoundedComplexSequences );
( dom (the addF of L1) ) = [: (the carrier of L1),(the carrier of L1) :] by FUNCT_2:def 1;
then A3: ( dom ( (the addF of ( Linear_Space_of_ComplexSequences )) || W ) ) = [: W,W :] by RELAT_1:62;
( u + v ) = ( ( (the addF of ( Linear_Space_of_ComplexSequences )) || W ) . [ u,v ] ) by CSSPACE:def 8
.= ( u1 + v1 ) by A3,FUNCT_1:47;
hence thesis by CSSPACE:2,CSSPACE:def 7;
end;
A4: (for c being Complex holds (for u being (VECTOR of l1) holds ( c * u ) = ( c (#) ( seq_id u ) )))
proof
let c being Complex;
let u being (VECTOR of l1);
reconsider u1 = u as (VECTOR of ( Linear_Space_of_ComplexSequences )) by CKB8:1,CLVECT_1:29;
set L1 = ( Linear_Space_of_ComplexSequences );
set W = ( the_set_of_BoundedComplexSequences );
( dom (the Mult of L1) ) = [: ( COMPLEX ),(the carrier of L1) :] by FUNCT_2:def 1;
then A5: ( dom ( (the Mult of ( Linear_Space_of_ComplexSequences )) | [: ( COMPLEX ),W :] ) ) = [: ( COMPLEX ),W :] by RELAT_1:62,ZFMISC_1:96;
( c * u ) = ( (the Mult of l1) . [ c,u ] ) by CLVECT_1:def 1
.= ( ( (the Mult of ( Linear_Space_of_ComplexSequences )) | [: ( COMPLEX ),W :] ) . [ c,u ] ) by CSSPACE:def 9
.= ( (the Mult of ( Linear_Space_of_ComplexSequences )) . [ c,u ] ) by A5,FUNCT_1:47
.= ( c * u1 ) by CLVECT_1:def 1;
hence thesis by CSSPACE:3,CSSPACE:def 7;
end;
A6: (for u being (VECTOR of l1) holds u = ( seq_id u ))
proof
let u being (VECTOR of l1);
u is (VECTOR of ( Linear_Space_of_ComplexSequences )) by CKB8:1,CLVECT_1:29;
hence thesis by CSSPACE:def 2,CSSPACE:def 7;
end;
A7: (for u being (VECTOR of l1) holds (( - u ) = ( - ( seq_id u ) ) & ( seq_id ( - u ) ) = ( - ( seq_id u ) )))
proof
let u being (VECTOR of l1);
( - u ) = ( ( - ( 1r ) ) * u ) by CLVECT_1:3
.= ( ( - ( 1r ) ) (#) ( seq_id u ) ) by A4
.= ( - ( seq_id u ) ) by COMSEQ_1:11;
hence thesis by A6;
end;
A8: (for u,v being (VECTOR of l1) holds ( u - v ) = ( ( seq_id u ) - ( seq_id v ) ))
proof
let u being (VECTOR of l1);
let v being (VECTOR of l1);
thus ( u - v ) = ( ( seq_id u ) + ( seq_id ( - v ) ) ) by A2
.= ( ( seq_id u ) - ( seq_id v ) ) by A7;
end;
A9: (for v being (VECTOR of l1) holds ||. v .|| = ( upper_bound ( rng |. ( seq_id v ) .| ) )) by CKB11:def 1;
( 0. l1 ) = ( 0. ( Linear_Space_of_ComplexSequences ) ) by CSSPACE:def 10
.= ( CZeroseq ) by CSSPACE:def 7;
hence thesis by A1,A6,A2,A4,A7,A8,A9;
end;
