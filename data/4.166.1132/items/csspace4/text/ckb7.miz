environ
vocabularies NUMBERS,SEQ_1,XREAL_0,ORDINAL1,SUBSET_1,FUNCT_1,XXREAL_0,ORDINAL2,RELAT_1,XXREAL_2,CSSPACE,RSSPACE,TARSKI,COMSEQ_1,ARYTM_3,REAL_1,CARD_1,COMPLEX1,CFUNCT_1,VALUED_1,XBOOLE_0,RLSUB_1,RLVECT_1,CLVECT_1,ALGSTR_0,SEQ_4,STRUCT_0,SUPINF_2,ARYTM_1,NORMSP_1,ZFMISC_1,REALSET1,PRE_TOPC,MEMBER_1,NAT_1,RSSPACE3,SEQ_2,CLOPBAN1,FUNCOP_1,FUNCT_2,LOPBAN_1,REWRITE1,CSSPACE4,NORMSP_0,METRIC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,PRE_TOPC,DOMAIN_1,RELAT_1,FUNCOP_1,REALSET1,XXREAL_0,XREAL_0,XXREAL_2,COMPLEX1,REAL_1,NAT_1,STRUCT_0,ALGSTR_0,ORDINAL1,NUMBERS,FUNCT_1,RELSET_1,FUNCT_2,INTEGRA2,MEASURE6,RLVECT_1,VALUED_1,COMSEQ_1,CFUNCT_1,COMSEQ_2,NORMSP_0,NORMSP_1,SEQ_1,SEQ_2,CLVECT_1,SEQ_4,PARTFUN1,CSSPACE,CSSPACE3,CLOPBAN1,CKB3;
definitions TARSKI,XBOOLE_0,SEQ_4,RLVECT_1,REALSET1,CLOPBAN1,BINOP_1,STRUCT_0,ALGSTR_0,VALUED_1,NORMSP_0,XXREAL_2,CKB3;
theorems RELAT_1,TARSKI,ZFMISC_1,XBOOLE_0,NAT_1,FUNCOP_1,SEQ_1,SEQ_2,SEQ_4,FUNCT_1,FUNCT_2,RLVECT_1,XREAL_0,XCMPLX_0,INTEGRA2,RSSPACE2,CSSPACE,COMSEQ_2,COMPLEX1,CLVECT_1,COMSEQ_1,CSSPACE3,COMSEQ_3,CLOPBAN1,XCMPLX_1,XREAL_1,XXREAL_0,LOPBAN_1,NORMSP_1,VALUED_1,XXREAL_2,MEASURE6,NORMSP_0,CKB1,CKB2,CKB3,CKB4,CKB5;
schemes SEQ_1,FUNCT_2,XBOOLE_0,COMSEQ_1;
registrations SUBSET_1,RELAT_1,ORDINAL1,FUNCT_2,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,REALSET1,STRUCT_0,CLVECT_1,CSSPACE3,VALUED_0,CSSPACE,VALUED_1,FUNCOP_1,SEQ_2,SEQ_4,RFUNCT_1,NORMSP_0,RELSET_1,CKB6;
constructors PARTFUN1,REAL_1,NAT_1,COMPLEX1,SEQM_3,COMSEQ_2,REALSET1,MEASURE6,INTEGRA2,LOPBAN_1,CSSPACE3,CLOPBAN1,SEQ_1,XXREAL_2,RVSUM_1,SEQ_4,RELSET_1,BINOP_2,SEQ_2,SERIES_1,CKB3;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
registration
cluster ( the_set_of_BoundedComplexSequences ) ->  linearly-closed;
coherence
proof
set W = ( the_set_of_BoundedComplexSequences );
A1: (for c being Complex holds (for v being (VECTOR of ( Linear_Space_of_ComplexSequences )) holds (v in W implies ( c * v ) in W)))
proof
let c being Complex;
let v being (VECTOR of ( Linear_Space_of_ComplexSequences ));
assume v in W;
then A2: ( seq_id v ) is  bounded by CKB3:def 1;
( seq_id ( c * v ) ) = ( seq_id ( c (#) ( seq_id v ) ) ) by CSSPACE:3,CSSPACE:def 7
.= ( c (#) ( seq_id v ) ) by CSSPACE:1;
then ( seq_id ( c * v ) ) is  bounded by A2,CKB5:1;
hence thesis by CKB3:def 1,CSSPACE:def 7;
end;
(for v,u being (VECTOR of ( Linear_Space_of_ComplexSequences )) holds ((v in ( the_set_of_BoundedComplexSequences ) & u in ( the_set_of_BoundedComplexSequences )) implies ( v + u ) in ( the_set_of_BoundedComplexSequences )))
proof
let v being (VECTOR of ( Linear_Space_of_ComplexSequences ));
let u being (VECTOR of ( Linear_Space_of_ComplexSequences ));
assume (v in W & u in W);
then A3: (( seq_id v ) is  bounded & ( seq_id u ) is  bounded) by CKB3:def 1;
( seq_id ( v + u ) ) = ( seq_id ( ( seq_id v ) + ( seq_id u ) ) ) by CSSPACE:2,CSSPACE:def 7
.= ( ( seq_id v ) + ( seq_id u ) ) by CSSPACE:1;
then ( seq_id ( v + u ) ) is  bounded by A3,CKB4:1;
hence thesis by CKB3:def 1,CSSPACE:def 7;
end;
hence thesis by A1,CLVECT_1:def 7;
end;
end;
