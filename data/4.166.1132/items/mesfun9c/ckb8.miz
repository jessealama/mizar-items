environ
vocabularies NUMBERS,XBOOLE_0,PROB_1,MEASURE1,SUBSET_1,SEQFUNC,SEQ_1,PARTFUN1,NAT_1,REALSET1,FUNCT_1,RELAT_1,PBOOLE,SEQ_2,MEASURE6,MESFUNC5,MESFUNC8,TARSKI,CARD_1,ORDINAL2,MESFUNC1,SERIES_1,ARYTM_3,XXREAL_0,MSSUBFAM,SETFAM_1,CARD_3,MESFUNC2,INTEGRA5,COMPLEX1,ORDINAL1,COMSEQ_1,XCMPLX_0,VALUED_1,ARYTM_1,RINFSUP1,XXREAL_2,SUPINF_2,VALUED_0,MESFUN10,XREAL_0,REAL_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,XXREAL_0,VALUED_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,PARTFUN1,NAT_1,PROB_1,SETFAM_1,SUPINF_2,MESFUNC9,SEQ_1,SEQ_2,SEQFUNC,SERIES_1,MEASURE1,EXTREAL1,MESFUNC1,MEASURE6,MESFUNC2,MESFUNC6,MESFUN6C,MESFUN10,MESFUNC8,MESFUN7C,MESFUNC5,COMSEQ_1,COMSEQ_2,COMSEQ_3,RINFSUP2,XXREAL_2,CKB1;
definitions FUNCT_2,MEASURE6,MESFUNC5,SERIES_1,VALUED_1,RINFSUP2,MESFUN7C,MESFUNC6,MESFUNC8,CKB1;
theorems TARSKI,PARTFUN1,FUNCT_1,SUPINF_2,EXTREAL2,MESFUNC1,XBOOLE_0,MESFUNC2,XXREAL_0,MESFUNC5,NAT_1,RELAT_1,FUNCT_2,COMPLEX1,MESFUN10,XCMPLX_0,MESFUNC6,SEQFUNC,ORDINAL1,MESFUNC8,RINFSUP2,RELSET_1,MESFUN7C,SERIES_1,VALUED_1,COMSEQ_3,MESFUN6C,XXREAL_2,MESFUNC9,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7;
schemes FUNCT_2,NAT_1,RECDEF_1,SEQFUNC;
registrations XREAL_0,MEMBERED,ORDINAL1,PARTFUN1,COMSEQ_3,FUNCT_2,RELAT_1,XBOOLE_0,NUMBERS,XXREAL_0,XCMPLX_0,MESFUNC8,VALUED_0,MESFUN7C,RELSET_1;
constructors REAL_1,EXTREAL1,SUPINF_1,MESFUNC9,SEQ_1,SEQ_2,MESFUN10,SEQFUNC,COMSEQ_2,COMSEQ_3,SERIES_1,MESFUNC1,MEASURE6,MESFUNC2,MESFUNC5,MESFUNC6,MESFUN6C,MESFUN7C,RINFSUP2,RELSET_1,CKB1;
requirements NUMERALS,REAL,BOOLE,SUBSET;
begin
definition
let X being non empty set;
let F being (Functional_Sequence of X,( REAL ));
func Partial_Sums F -> (Functional_Sequence of X,( REAL ))
means
:Def2: (( it . ( 0 ) ) = ( F . ( 0 ) ) & (for n being Nat holds ( it . ( n + 1 ) ) = ( ( it . n ) + ( F . ( n + 1 ) ) )));
existence
proof
defpred P[ (Element of ( NAT )),set,set ]
 means
(((not $2 is (PartFunc of X,( REAL ))) & $3 = ( F . $1 )) or ($2 is (PartFunc of X,( REAL )) & (for F2 being (PartFunc of X,( REAL )) holds (F2 = $2 implies $3 = ( F2 + ( F . ( $1 + 1 ) ) )))));
A1: (for n being (Element of ( NAT )) holds (for x being set holds (ex y being set st P[ n,x,y ])))
proof
let n being (Element of ( NAT ));
let x being set;
now
assume x is (PartFunc of X,( REAL ));
then reconsider G2 = x as (PartFunc of X,( REAL ));
take y = ( G2 + ( F . ( n + 1 ) ) );
thus (((not x is (PartFunc of X,( REAL ))) & y = ( F . n )) or (x is (PartFunc of X,( REAL )) & (for F2 being (PartFunc of X,( REAL )) holds (F2 = x implies y = ( F2 + ( F . ( n + 1 ) ) )))));
end;
hence thesis;
end;
consider IT being Function such that A2: ((( dom IT ) = ( NAT ) & ( IT . ( 0 ) ) = ( F . ( 0 ) )) & (for n being (Element of ( NAT )) holds P[ n,( IT . n ),( IT . ( n + 1 ) ) ])) from RECDEF_1:sch 1(A1);
now
defpred IND[ (Element of ( NAT )) ]
 means
( IT . $1 ) is (PartFunc of X,( REAL ));
let f being set;
assume f in ( rng IT );
then consider m being set such that A3: m in ( dom IT ) and A4: f = ( IT . m ) by FUNCT_1:def 3;
reconsider m as (Element of ( NAT )) by A2,A3;
A5: (for n being (Element of ( NAT )) holds (IND[ n ] implies IND[ ( n + 1 ) ]))
proof
let n being (Element of ( NAT ));
assume IND[ n ];
then reconsider F2 = ( IT . n ) as (PartFunc of X,( REAL ));
( IT . ( n + 1 ) ) = ( F2 + ( F . ( n + 1 ) ) ) by A2;
hence IND[ ( n + 1 ) ];
end;
A6: IND[ ( 0 ) ] by A2;
(for n being (Element of ( NAT )) holds IND[ n ]) from NAT_1:sch 1(A6,A5);
then ( IT . m ) is (PartFunc of X,( REAL ));
hence f in ( PFuncs (X,( REAL )) ) by A4,PARTFUN1:45;
end;
then ( rng IT ) c= ( PFuncs (X,( REAL )) ) by TARSKI:def 3;
then reconsider IT as (Functional_Sequence of X,( REAL )) by A2,FUNCT_2:def 1,RELSET_1:4;
take IT;
(for n being Nat holds ( IT . ( n + 1 ) ) = ( ( IT . n ) + ( F . ( n + 1 ) ) ))
proof
let n being Nat;
n is (Element of ( NAT )) by ORDINAL1:def 12;
hence ( IT . ( n + 1 ) ) = ( ( IT . n ) + ( F . ( n + 1 ) ) ) by A2;
end;
hence thesis by A2;
end;
uniqueness
proof
let PS1 being (Functional_Sequence of X,( REAL )),PS2 being (Functional_Sequence of X,( REAL ));
assume that
A7: ( PS1 . ( 0 ) ) = ( F . ( 0 ) )
and
A8: (for n being Nat holds ( PS1 . ( n + 1 ) ) = ( ( PS1 . n ) + ( F . ( n + 1 ) ) ))
and
A9: ( PS2 . ( 0 ) ) = ( F . ( 0 ) )
and
A10: (for n being Nat holds ( PS2 . ( n + 1 ) ) = ( ( PS2 . n ) + ( F . ( n + 1 ) ) ));
defpred IND[ Nat ]
 means
( PS1 . $1 ) = ( PS2 . $1 );
A11: (for n being Nat holds (IND[ n ] implies IND[ ( n + 1 ) ]))
proof
let n being Nat;
assume A12: IND[ n ];
( PS1 . ( n + 1 ) ) = ( ( PS1 . n ) + ( F . ( n + 1 ) ) ) by A8;
hence ( PS1 . ( n + 1 ) ) = ( PS2 . ( n + 1 ) ) by A10,A12;
end;
A13: IND[ ( 0 ) ] by A7,A9;
(for n being Nat holds IND[ n ]) from NAT_1:sch 2(A13,A11);
then (for m being (Element of ( NAT )) holds ( PS1 . m ) = ( PS2 . m ));
hence thesis by FUNCT_2:63;
end;
end;
