environ
vocabularies NUMBERS,XBOOLE_0,PROB_1,MEASURE1,SUBSET_1,SEQFUNC,SEQ_1,PARTFUN1,NAT_1,REALSET1,FUNCT_1,RELAT_1,PBOOLE,SEQ_2,MEASURE6,MESFUNC5,MESFUNC8,TARSKI,CARD_1,ORDINAL2,MESFUNC1,SERIES_1,ARYTM_3,XXREAL_0,MSSUBFAM,SETFAM_1,CARD_3,MESFUNC2,INTEGRA5,COMPLEX1,ORDINAL1,COMSEQ_1,XCMPLX_0,VALUED_1,ARYTM_1,RINFSUP1,XXREAL_2,SUPINF_2,VALUED_0,MESFUN10,XREAL_0,REAL_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,XXREAL_0,VALUED_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,PARTFUN1,NAT_1,PROB_1,SETFAM_1,SUPINF_2,MESFUNC9,SEQ_1,SEQ_2,SEQFUNC,SERIES_1,MEASURE1,EXTREAL1,MESFUNC1,MEASURE6,MESFUNC2,MESFUNC6,MESFUN6C,MESFUN10,MESFUNC8,MESFUN7C,MESFUNC5,COMSEQ_1,COMSEQ_2,COMSEQ_3,RINFSUP2,XXREAL_2,CKB1,CKB8,CKB32;
definitions FUNCT_2,MEASURE6,MESFUNC5,SERIES_1,VALUED_1,RINFSUP2,MESFUN7C,MESFUNC6,MESFUNC8,CKB1,CKB8,CKB32;
theorems TARSKI,PARTFUN1,FUNCT_1,SUPINF_2,EXTREAL2,MESFUNC1,XBOOLE_0,MESFUNC2,XXREAL_0,MESFUNC5,NAT_1,RELAT_1,FUNCT_2,COMPLEX1,MESFUN10,XCMPLX_0,MESFUNC6,SEQFUNC,ORDINAL1,MESFUNC8,RINFSUP2,RELSET_1,MESFUN7C,SERIES_1,VALUED_1,COMSEQ_3,MESFUN6C,XXREAL_2,MESFUNC9,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36;
schemes FUNCT_2,NAT_1,RECDEF_1,SEQFUNC;
registrations XREAL_0,MEMBERED,ORDINAL1,PARTFUN1,COMSEQ_3,FUNCT_2,RELAT_1,XBOOLE_0,NUMBERS,XXREAL_0,XCMPLX_0,MESFUNC8,VALUED_0,MESFUN7C,RELSET_1;
constructors REAL_1,EXTREAL1,SUPINF_1,MESFUNC9,SEQ_1,SEQ_2,MESFUN10,SEQFUNC,COMSEQ_2,COMSEQ_3,SERIES_1,MESFUNC1,MEASURE6,MESFUNC2,MESFUNC5,MESFUNC6,MESFUN6C,MESFUN7C,RINFSUP2,RELSET_1,CKB1,CKB8,CKB32;
requirements NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve X for non empty set;
reserve n for Nat;
reserve x for (Element of X);
reserve D for set;
reserve F for (Functional_Sequence of X,( COMPLEX ));
theorem
(((F is  with_the_same_dom & D c= ( dom ( F . ( 0 ) ) )) & x in D) implies ( ( Partial_Sums ( F # x ) ) . n ) = ( ( ( Partial_Sums F ) # x ) . n ))
proof
assume that
A1: F is  with_the_same_dom
and
A2: D c= ( dom ( F . ( 0 ) ) )
and
A3: x in D;
A4: D c= ( dom ( ( Im F ) . ( 0 ) ) ) by A2,MESFUN7C:def 12;
( dom ( ( Partial_Sums F ) . n ) ) = ( dom ( F . ( 0 ) ) ) by A1,CKB36:1;
then A5: x in ( dom ( ( Partial_Sums F ) . n ) ) by A2,A3;
then A6: x in ( dom ( Re ( ( Partial_Sums F ) . n ) ) ) by COMSEQ_3:def 3;
A7: ( Re F ) is  with_the_same_dom by A1;
then ( Im F ) is  with_the_same_dom by CKB28:1;
then A8: ( ( Partial_Sums ( ( Im F ) # x ) ) . n ) = ( ( ( Partial_Sums ( Im F ) ) # x ) . n ) by A3,A4,CKB14:1;
D c= ( dom ( ( Re F ) . ( 0 ) ) ) by A2,MESFUN7C:def 11;
then A9: ( ( Partial_Sums ( ( Re F ) # x ) ) . n ) = ( ( ( Partial_Sums ( Re F ) ) # x ) . n ) by A3,A7,CKB14:1;
A10: n is (Element of ( NAT )) by ORDINAL1:def 12;
then A11: ( Re ( ( Partial_Sums ( F # x ) ) . n ) ) = ( ( Re ( Partial_Sums ( F # x ) ) ) . n ) by COMSEQ_3:def 5
.= ( ( Partial_Sums ( Re ( F # x ) ) ) . n ) by COMSEQ_3:26
.= ( ( Partial_Sums ( ( Re F ) # x ) ) . n ) by A1,A2,A3,MESFUN7C:23
.= ( ( ( Partial_Sums ( Re F ) ) . n ) . x ) by A9,A10,SEQFUNC:def 10
.= ( ( ( Re ( Partial_Sums F ) ) . n ) . x ) by CKB33:1
.= ( ( Re ( ( Partial_Sums F ) . n ) ) . x ) by MESFUN7C:24
.= ( Re ( ( ( Partial_Sums F ) . n ) . x ) ) by A6,COMSEQ_3:def 3
.= ( Re ( ( ( Partial_Sums F ) # x ) . n ) ) by MESFUN7C:def 9;
A12: x in ( dom ( Im ( ( Partial_Sums F ) . n ) ) ) by A5,COMSEQ_3:def 4;
A13: ( Im ( ( Partial_Sums ( F # x ) ) . n ) ) = ( ( Im ( Partial_Sums ( F # x ) ) ) . n ) by A10,COMSEQ_3:def 6
.= ( ( Partial_Sums ( Im ( F # x ) ) ) . n ) by COMSEQ_3:26
.= ( ( Partial_Sums ( ( Im F ) # x ) ) . n ) by A1,A2,A3,MESFUN7C:23
.= ( ( ( Partial_Sums ( Im F ) ) . n ) . x ) by A8,A10,SEQFUNC:def 10
.= ( ( ( Im ( Partial_Sums F ) ) . n ) . x ) by CKB33:1
.= ( ( Im ( ( Partial_Sums F ) . n ) ) . x ) by MESFUN7C:24
.= ( Im ( ( ( Partial_Sums F ) . n ) . x ) ) by A12,COMSEQ_3:def 4
.= ( Im ( ( ( Partial_Sums F ) # x ) . n ) ) by MESFUN7C:def 9;
thus ( ( Partial_Sums ( F # x ) ) . n ) = ( ( Re ( ( Partial_Sums ( F # x ) ) . n ) ) + ( ( Im ( ( Partial_Sums ( F # x ) ) . n ) ) * ( <i> ) ) ) by COMPLEX1:13
.= ( ( ( Partial_Sums F ) # x ) . n ) by A11,A13,COMPLEX1:13;
end;
