environ
vocabularies NUMBERS,XBOOLE_0,PROB_1,MEASURE1,SUBSET_1,SEQFUNC,SEQ_1,PARTFUN1,NAT_1,REALSET1,FUNCT_1,RELAT_1,PBOOLE,SEQ_2,MEASURE6,MESFUNC5,MESFUNC8,TARSKI,CARD_1,ORDINAL2,MESFUNC1,SERIES_1,ARYTM_3,XXREAL_0,MSSUBFAM,SETFAM_1,CARD_3,MESFUNC2,INTEGRA5,COMPLEX1,ORDINAL1,COMSEQ_1,XCMPLX_0,VALUED_1,ARYTM_1,RINFSUP1,XXREAL_2,SUPINF_2,VALUED_0,MESFUN10,XREAL_0,REAL_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,XXREAL_0,VALUED_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,PARTFUN1,NAT_1,PROB_1,SETFAM_1,SUPINF_2,MESFUNC9,SEQ_1,SEQ_2,SEQFUNC,SERIES_1,MEASURE1,EXTREAL1,MESFUNC1,MEASURE6,MESFUNC2,MESFUNC6,MESFUN6C,MESFUN10,MESFUNC8,MESFUN7C,MESFUNC5,COMSEQ_1,COMSEQ_2,COMSEQ_3,RINFSUP2,XXREAL_2,CKB1;
definitions FUNCT_2,MEASURE6,MESFUNC5,SERIES_1,VALUED_1,RINFSUP2,MESFUN7C,MESFUNC6,MESFUNC8,CKB1;
theorems TARSKI,PARTFUN1,FUNCT_1,SUPINF_2,EXTREAL2,MESFUNC1,XBOOLE_0,MESFUNC2,XXREAL_0,MESFUNC5,NAT_1,RELAT_1,FUNCT_2,COMPLEX1,MESFUN10,XCMPLX_0,MESFUNC6,SEQFUNC,ORDINAL1,MESFUNC8,RINFSUP2,RELSET_1,MESFUN7C,SERIES_1,VALUED_1,COMSEQ_3,MESFUN6C,XXREAL_2,MESFUNC9,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
schemes FUNCT_2,NAT_1,RECDEF_1,SEQFUNC;
registrations XREAL_0,MEMBERED,ORDINAL1,PARTFUN1,COMSEQ_3,FUNCT_2,RELAT_1,XBOOLE_0,NUMBERS,XXREAL_0,XCMPLX_0,MESFUNC8,VALUED_0,MESFUN7C,RELSET_1;
constructors REAL_1,EXTREAL1,SUPINF_1,MESFUNC9,SEQ_1,SEQ_2,MESFUN10,SEQFUNC,COMSEQ_2,COMSEQ_3,SERIES_1,MESFUNC1,MEASURE6,MESFUNC2,MESFUNC5,MESFUNC6,MESFUN6C,MESFUN7C,RINFSUP2,RELSET_1,CKB1;
requirements NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve X for non  empty set;
reserve S for (SigmaField of X);
reserve E for (Element of S);
reserve F for (Functional_Sequence of X,( REAL ));
reserve n for Nat;
reserve x for (Element of X);
theorem
Th6: ((for x being (Element of X) holds (x in E implies ( F # x ) is  summable)) implies (for x being (Element of X) holds (x in E implies ( ( F || E ) # x ) is  summable)))
proof
set G = ( F || E );
assume A1: (for x being (Element of X) holds (x in E implies ( F # x ) is  summable));
let x being (Element of X);
assume A2: x in E;
(for n being (Element of ( NAT )) holds ( ( F # x ) . n ) = ( ( G # x ) . n ))
proof
let n being (Element of ( NAT ));
( ( F # x ) . n ) = ( ( F . n ) . x ) by SEQFUNC:def 10;
then ( ( F # x ) . n ) = ( ( ( F . n ) | E ) . x ) by A2,FUNCT_1:49;
then ( ( F # x ) . n ) = ( ( G . n ) . x ) by CKB1:def 1;
hence ( ( F # x ) . n ) = ( ( G # x ) . n ) by SEQFUNC:def 10;
end;
then A3: ( Partial_Sums ( F # x ) ) = ( Partial_Sums ( G # x ) ) by FUNCT_2:63;
( F # x ) is  summable by A1,A2;
then ( Partial_Sums ( F # x ) ) is  convergent by SERIES_1:def 2;
hence ( G # x ) is  summable by A3,SERIES_1:def 2;
end;
