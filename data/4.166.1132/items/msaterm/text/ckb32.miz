environ
vocabularies FINSEQ_1,RELAT_1,SUBSET_1,NUMBERS,ARYTM_3,XXREAL_0,NAT_1,CARD_1,FUNCT_1,TARSKI,STRUCT_0,XBOOLE_0,MSUALG_1,PBOOLE,TREES_3,MSAFREE,DTCONSTR,LANG1,ZFMISC_1,TREES_4,TDGROUP,CARD_3,TREES_2,FINSET_1,MARGREL1,PARTFUN1,TREES_9,ORDINAL4,ORDINAL1,TREES_1,MCART_1,FUNCT_6,TREES_A,QC_LANG1,MSATERM;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,MCART_1,RELAT_1,STRUCT_0,FUNCT_1,PARTFUN1,FINSEQ_1,FINSEQ_2,FUNCT_2,FINSET_1,TREES_1,TREES_2,CARD_3,FUNCT_6,LANG1,TREES_3,TREES_4,TREES_9,PBOOLE,MSUALG_1,DTCONSTR,MSUALG_3,MSAFREE,XXREAL_0,CKB2,CKB4,CKB5,CKB6,CKB9,CKB10,CKB12,CKB23,CKB24,CKB25,CKB31;
definitions TARSKI,PBOOLE,XBOOLE_0,CKB2,CKB6,CKB23,CKB24,CKB31;
theorems TARSKI,NAT_1,ZFMISC_1,MCART_1,CARD_3,FUNCT_1,FINSEQ_1,FUNCT_2,FINSEQ_3,FINSEQ_4,CARD_5,FUNCT_6,TREES_1,TREES_2,MODAL_1,TREES_3,TREES_4,LANG1,DTCONSTR,TREES_9,PBOOLE,MSUALG_1,MSAFREE,DOMAIN_1,RELAT_1,XBOOLE_0,FINSET_1,XREAL_1,ORDINAL1,PARTFUN1,FINSEQ_2,CKB1,CKB2,CKB6,CKB7,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB27,CKB28,CKB29,CKB30,CKB31;
schemes TREES_2,CLASSES1,DTCONSTR,PBOOLE,CKB8,CKB11,CKB26;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,XREAL_0,FINSEQ_1,PBOOLE,TREES_2,TREES_3,TREES_9,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_2,MSAFREE,FINSET_1,TREES_1,RELSET_1,CKB3,CKB13;
constructors XXREAL_0,NAT_1,NAT_D,TREES_9,MSUALG_3,MSAFREE,RELSET_1,FINSEQ_2,CKB2,CKB5,CKB6,CKB12,CKB23,CKB24,CKB25,CKB31;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve S for non  void non  empty ManySortedSign;
reserve V for  non-empty (ManySortedSet of (the carrier of S));
reserve t for (Term of S,V);
Lm3:now
let S;
let V;
let x being set;
set X = V;
set G = ( DTConMSA X );
A1: ( Terminals G ) = ( Union ( coprod X ) ) by MSAFREE:6;
hereby
assume x in ( Terminals G );
then consider s being set such that A2: s in ( dom ( coprod X ) ) and A3: x in ( ( coprod X ) . s ) by A1,CARD_5:2;
reconsider s as (SortSymbol of S) by A2,PARTFUN1:def 2;
( ( coprod X ) . s ) = ( coprod (s,X) ) by MSAFREE:def 3;
then (ex a being set st (a in ( X . s ) & x = [ a,s ])) by A3,MSAFREE:def 2;
hence (ex s being (SortSymbol of S) st (ex v being (Element of ( V . s )) st x = [ v,s ]));
end;
let s being (SortSymbol of S);
let a being (Element of ( V . s ));
assume x = [ a,s ];
then x in ( coprod (s,X) ) by MSAFREE:def 2;
then A4: x in ( ( coprod X ) . s ) by MSAFREE:def 3;
( dom ( coprod X ) ) = (the carrier of S) by PARTFUN1:def 2;
hence x in ( Terminals G ) by A1,A4,CARD_5:2;
end;
Lm5:now
let S;
let V;
set G = ( DTConMSA V );
let x being set;
( NonTerminals G ) = [: (the carrier' of S),{ (the carrier of S) } :] by MSAFREE:6;
hence (x is (NonTerminal of G) iff x in [: (the carrier' of S),{ (the carrier of S) } :]);
end;
Lm6:now
let G being  with_terminals  with_nonterminals non  empty DTConstrStr;
let s being (Symbol of G);
(the carrier of G) = ( ( Terminals G ) \/ ( NonTerminals G ) ) by LANG1:1;
hence (s is (Terminal of G) or s is (NonTerminal of G)) by XBOOLE_0:def 3;
( Terminals G ) misses ( NonTerminals G ) by DTCONSTR:8;
hence (not (s is (Terminal of G) & s is (NonTerminal of G))) by XBOOLE_0:3;
end;
theorem
Th14: (for s being (SortSymbol of S) holds (for v being (Element of ( V . s )) holds (t = ( root-tree [ v,s ] ) implies ( the_sort_of t ) = s)))
proof
let s being (SortSymbol of S);
let x being (Element of ( V . s ));
set X = V;
set G = ( DTConMSA X );
set tst = ( the_sort_of t );
A1: ( FreeSort (X,tst) ) = { a where a is (Element of ( TS G )): ((ex x being set st (x in ( X . tst ) & a = ( root-tree [ x,tst ] ))) or (ex o being (OperSymbol of S) st ([ o,(the carrier of S) ] = ( a . ( {} ) ) & ( the_result_sort_of o ) = tst))) } by MSAFREE:def 10;
t in ( FreeSort (V,( the_sort_of t )) ) by CKB31:def 1;
then consider a being (Element of ( TS G )) such that A2: t = a and A3: ((ex x being set st (x in ( X . tst ) & a = ( root-tree [ x,tst ] ))) or (ex o being (OperSymbol of S) st ([ o,(the carrier of S) ] = ( a . ( {} ) ) & ( the_result_sort_of o ) = tst))) by A1;
A4: [ x,s ] in ( Terminals G ) by Lm3;
assume A5: t = ( root-tree [ x,s ] );
then ( t . ( {} ) ) = [ x,s ] by TREES_4:3;
then (not ( t . ( {} ) ) is (NonTerminal of G)) by A4,Lm6;
then A6: (not ( t . ( {} ) ) in [: (the carrier' of S),{ (the carrier of S) } :]) by Lm5;
(the carrier of S) in { (the carrier of S) } by TARSKI:def 1;
then consider y being set such that y in ( X . tst ) and A7: a = ( root-tree [ y,tst ] ) by A2,A3,A6,ZFMISC_1:87;
[ y,tst ] = [ x,s ] by A2,A5,A7,TREES_4:4;
hence thesis by ZFMISC_1:27;
end;
