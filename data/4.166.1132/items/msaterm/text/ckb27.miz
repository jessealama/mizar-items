environ
vocabularies FINSEQ_1,RELAT_1,SUBSET_1,NUMBERS,ARYTM_3,XXREAL_0,NAT_1,CARD_1,FUNCT_1,TARSKI,STRUCT_0,XBOOLE_0,MSUALG_1,PBOOLE,TREES_3,MSAFREE,DTCONSTR,LANG1,ZFMISC_1,TREES_4,TDGROUP,CARD_3,TREES_2,FINSET_1,MARGREL1,PARTFUN1,TREES_9,ORDINAL4,ORDINAL1,TREES_1,MCART_1,FUNCT_6,TREES_A,QC_LANG1,MSATERM;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,MCART_1,RELAT_1,STRUCT_0,FUNCT_1,PARTFUN1,FINSEQ_1,FINSEQ_2,FUNCT_2,FINSET_1,TREES_1,TREES_2,CARD_3,FUNCT_6,LANG1,TREES_3,TREES_4,TREES_9,PBOOLE,MSUALG_1,DTCONSTR,MSUALG_3,MSAFREE,XXREAL_0,CKB2,CKB4,CKB5,CKB6,CKB9,CKB10,CKB12,CKB23,CKB24,CKB25;
definitions TARSKI,PBOOLE,XBOOLE_0,CKB2,CKB6,CKB23,CKB24;
theorems TARSKI,NAT_1,ZFMISC_1,MCART_1,CARD_3,FUNCT_1,FINSEQ_1,FUNCT_2,FINSEQ_3,FINSEQ_4,CARD_5,FUNCT_6,TREES_1,TREES_2,MODAL_1,TREES_3,TREES_4,LANG1,DTCONSTR,TREES_9,PBOOLE,MSUALG_1,MSAFREE,DOMAIN_1,RELAT_1,XBOOLE_0,FINSET_1,XREAL_1,ORDINAL1,PARTFUN1,FINSEQ_2,CKB1,CKB2,CKB6,CKB7,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes TREES_2,CLASSES1,DTCONSTR,PBOOLE,CKB8,CKB11,CKB26;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,XREAL_0,FINSEQ_1,PBOOLE,TREES_2,TREES_3,TREES_9,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_2,MSAFREE,FINSET_1,TREES_1,RELSET_1,CKB3,CKB13;
constructors XXREAL_0,NAT_1,NAT_D,TREES_9,MSUALG_3,MSAFREE,RELSET_1,FINSEQ_2,CKB2,CKB5,CKB6,CKB12,CKB23,CKB24,CKB25;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve S for non  void non  empty ManySortedSign;
reserve V for  non-empty (ManySortedSet of (the carrier of S));
reserve t for (Term of S,V);
Lm5:now
let S;
let V;
set G = ( DTConMSA V );
let x being set;
( NonTerminals G ) = [: (the carrier' of S),{ (the carrier of S) } :] by MSAFREE:6;
hence (x is (NonTerminal of G) iff x in [: (the carrier' of S),{ (the carrier of S) } :]);
end;
Lm6:now
let G being  with_terminals  with_nonterminals non  empty DTConstrStr;
let s being (Symbol of G);
(the carrier of G) = ( ( Terminals G ) \/ ( NonTerminals G ) ) by LANG1:1;
hence (s is (Terminal of G) or s is (NonTerminal of G)) by XBOOLE_0:def 3;
( Terminals G ) misses ( NonTerminals G ) by DTCONSTR:8;
hence (not (s is (Terminal of G) & s is (NonTerminal of G))) by XBOOLE_0:3;
end;
theorem
Th11: (for t being (Term of S,V) holds (ex s being (SortSymbol of S) st t in ( FreeSort (V,s) )))
proof
let t being (Term of S,V);
set X = V;
set G = ( DTConMSA X );
reconsider e = ( {} ) as (Node of t) by TREES_1:22;
per cases ;
suppose ( t . ( {} ) ) is (Terminal of G);

then reconsider ts = ( t . ( {} ) ) as (Terminal of G);
consider s being (SortSymbol of S),x being set such that A1: x in ( X . s ) and A2: ts = [ x,s ] by MSAFREE:7;
take s;
t = ( root-tree [ x,s ] ) by A2,DTCONSTR:9;
then t in { a where a is (Element of ( TS G )): ((ex x being set st (x in ( X . s ) & a = ( root-tree [ x,s ] ))) or (ex o being (OperSymbol of S) st ([ o,(the carrier of S) ] = ( a . ( {} ) ) & ( the_result_sort_of o ) = s))) } by A1;
hence thesis by MSAFREE:def 10;
end;
suppose (not ( t . ( {} ) ) is (Terminal of G));

then reconsider nt = ( t . e ) as (NonTerminal of G) by Lm6;
nt in [: (the carrier' of S),{ (the carrier of S) } :] by Lm5;
then consider o being (OperSymbol of S),x2 being (Element of { (the carrier of S) }) such that A3: nt = [ o,x2 ] by DOMAIN_1:1;
take s = ( the_result_sort_of o );
x2 = (the carrier of S) by TARSKI:def 1;
then t in { a where a is (Element of ( TS G )): ((ex x being set st (x in ( X . s ) & a = ( root-tree [ x,s ] ))) or (ex o being (OperSymbol of S) st ([ o,(the carrier of S) ] = ( a . ( {} ) ) & ( the_result_sort_of o ) = s))) } by A3;
hence thesis by MSAFREE:def 10;
end;
end;
