environ
vocabularies FINSEQ_1,RELAT_1,SUBSET_1,NUMBERS,ARYTM_3,XXREAL_0,NAT_1,CARD_1,FUNCT_1,TARSKI,STRUCT_0,XBOOLE_0,MSUALG_1,PBOOLE,TREES_3,MSAFREE,DTCONSTR,LANG1,ZFMISC_1,TREES_4,TDGROUP,CARD_3,TREES_2,FINSET_1,MARGREL1,PARTFUN1,TREES_9,ORDINAL4,ORDINAL1,TREES_1,MCART_1,FUNCT_6,TREES_A,QC_LANG1,MSATERM;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,MCART_1,RELAT_1,STRUCT_0,FUNCT_1,PARTFUN1,FINSEQ_1,FINSEQ_2,FUNCT_2,FINSET_1,TREES_1,TREES_2,CARD_3,FUNCT_6,LANG1,TREES_3,TREES_4,TREES_9,PBOOLE,MSUALG_1,DTCONSTR,MSUALG_3,MSAFREE,XXREAL_0,CKB2,CKB4,CKB5,CKB6,CKB9,CKB10,CKB12,CKB23,CKB24,CKB25;
definitions TARSKI,PBOOLE,XBOOLE_0,CKB2,CKB6,CKB23,CKB24;
theorems TARSKI,NAT_1,ZFMISC_1,MCART_1,CARD_3,FUNCT_1,FINSEQ_1,FUNCT_2,FINSEQ_3,FINSEQ_4,CARD_5,FUNCT_6,TREES_1,TREES_2,MODAL_1,TREES_3,TREES_4,LANG1,DTCONSTR,TREES_9,PBOOLE,MSUALG_1,MSAFREE,DOMAIN_1,RELAT_1,XBOOLE_0,FINSET_1,XREAL_1,ORDINAL1,PARTFUN1,FINSEQ_2,CKB1,CKB2,CKB6,CKB7,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB27,CKB28,CKB29,CKB30;
schemes TREES_2,CLASSES1,DTCONSTR,PBOOLE,CKB8,CKB11,CKB26;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,XREAL_0,FINSEQ_1,PBOOLE,TREES_2,TREES_3,TREES_9,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_2,MSAFREE,FINSET_1,TREES_1,RELSET_1,CKB3,CKB13;
constructors XXREAL_0,NAT_1,NAT_D,TREES_9,MSUALG_3,MSAFREE,RELSET_1,FINSEQ_2,CKB2,CKB5,CKB6,CKB12,CKB23,CKB24,CKB25;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve S for non  void non  empty ManySortedSign;
reserve V for  non-empty (ManySortedSet of (the carrier of S));
reserve t for (Term of S,V);
definition
let S;
let V;
let t;
func the_sort_of t -> (SortSymbol of S) means 
:Def5: t in ( FreeSort (V,it) );
existence by CKB27:1;
uniqueness
proof
set X = V;
let s1 being (SortSymbol of S);
let s2 being (SortSymbol of S);
assume that
A1: t in ( FreeSort (X,s1) )
and
A2: t in ( FreeSort (X,s2) );
( FreeSort (X,s1) ) = { a where a is (Element of ( TS ( DTConMSA X ) )): ((ex x being set st (x in ( X . s1 ) & a = ( root-tree [ x,s1 ] ))) or (ex o being (OperSymbol of S) st ([ o,(the carrier of S) ] = ( a . ( {} ) ) & ( the_result_sort_of o ) = s1))) } by MSAFREE:def 10;
then consider a1 being (Element of ( TS ( DTConMSA X ) )) such that A3: t = a1 and A4: ((ex x being set st (x in ( X . s1 ) & a1 = ( root-tree [ x,s1 ] ))) or (ex o being (OperSymbol of S) st ([ o,(the carrier of S) ] = ( a1 . ( {} ) ) & ( the_result_sort_of o ) = s1))) by A1;
( FreeSort (X,s2) ) = { a where a is (Element of ( TS ( DTConMSA X ) )): ((ex x being set st (x in ( X . s2 ) & a = ( root-tree [ x,s2 ] ))) or (ex o being (OperSymbol of S) st ([ o,(the carrier of S) ] = ( a . ( {} ) ) & ( the_result_sort_of o ) = s2))) } by MSAFREE:def 10;
then consider a2 being (Element of ( TS ( DTConMSA X ) )) such that A5: t = a2 and A6: ((ex x being set st (x in ( X . s2 ) & a2 = ( root-tree [ x,s2 ] ))) or (ex o being (OperSymbol of S) st ([ o,(the carrier of S) ] = ( a2 . ( {} ) ) & ( the_result_sort_of o ) = s2))) by A2;
per cases  by A4;
suppose (ex x being set st (x in ( X . s1 ) & a1 = ( root-tree [ x,s1 ] )));

then consider x1 being set such that x1 in ( X . s1 ) and A7: a1 = ( root-tree [ x1,s1 ] );
now
let o being (OperSymbol of S);
assume [ o,(the carrier of S) ] = [ x1,s1 ];
then (the carrier of S) = s1 by ZFMISC_1:27;
hence contradiction by CKB30:1;
end;
then consider x2 being set such that x2 in ( X . s2 ) and A8: a2 = ( root-tree [ x2,s2 ] ) by A3,A5,A6,A7,TREES_4:3;
[ x1,s1 ] = [ x2,s2 ] by A3,A5,A7,A8,TREES_4:4;
hence thesis by ZFMISC_1:27;
end;
suppose (ex o being (OperSymbol of S) st ([ o,(the carrier of S) ] = ( a1 . ( {} ) ) & ( the_result_sort_of o ) = s1));

then consider o1 being (OperSymbol of S) such that A9: [ o1,(the carrier of S) ] = ( a1 . ( {} ) ) and A10: ( the_result_sort_of o1 ) = s1;
now
given x2 being set such that
x2 in ( X . s2 )
and
A11: a2 = ( root-tree [ x2,s2 ] );

[ o1,(the carrier of S) ] = [ x2,s2 ] by A3,A5,A9,A11,TREES_4:3;
then (the carrier of S) = s2 by ZFMISC_1:27;
hence contradiction by CKB30:1;
end;
hence thesis by A3,A5,A6,A9,A10,ZFMISC_1:27;
end;
end;
end;
