environ
vocabularies NUMBERS,XBOOLE_0,TREES_2,SUBSET_1,FUNCT_1,TREES_4,TREES_3,FINSEQ_1,TREES_1,ORDINAL1,ORDINAL4,CARD_1,XXREAL_0,ARYTM_3,FINSET_1,RELAT_1,TARSKI,TREES_A,LANG1,TDGROUP,DTCONSTR,STRUCT_0,ZFMISC_1,FUNCT_2,BINTREE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,RELAT_1,STRUCT_0,MCART_1,FUNCT_1,RELSET_1,FUNCT_2,FINSEQ_1,FINSET_1,LANG1,TREES_1,TREES_2,TREES_3,TREES_4,DTCONSTR,PRE_POLY,XXREAL_0,CKB1,CKB4,CKB11,CKB20;
definitions DTCONSTR,CKB1,CKB4,CKB11,CKB20;
theorems TARSKI,NAT_1,MCART_1,ZFMISC_1,ENUMSET1,MODAL_1,RELSET_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,LANG1,TREES_1,TREES_2,TREES_3,TREES_4,DTCONSTR,FINSET_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB8,CKB9,CKB11,CKB15,CKB16,CKB17,CKB18,CKB20;
schemes FUNCT_2,DTCONSTR,MULTOP_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,MEMBERED,FINSEQ_1,TREES_2,TREES_3,STRUCT_0,DTCONSTR,FINSET_1,PRE_POLY,TREES_4,TREES_1,RELSET_1,CKB6,CKB7,CKB10,CKB12,CKB13,CKB14,CKB19,CKB21;
constructors DOMAIN_1,XXREAL_0,NAT_1,MEMBERED,FINSEQOP,DTCONSTR,RELSET_1,PRE_POLY,CKB1,CKB4,CKB11,CKB20;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
scheme BinDTConstrStrEx { S() -> non empty set,P[set,set,set] } : (ex G being  binary  strict non empty DTConstrStr st ((the carrier of G) = S() & (for x,y,z being (Symbol of G) holds (x ==> <* y,z *> iff P[ x,y,z ]))))
proof
defpred Q[ set,FinSequence ]
 means
(P[ $1,( $2 . 1 ),( $2 . 2 ) ] & $2 = <* ( $2 . 1 ),( $2 . 2 ) *>);
consider G being  strict non empty DTConstrStr such that A1: (the carrier of G) = S() and A2: (for x being (Symbol of G) holds (for p being (FinSequence of (the carrier of G)) holds (x ==> p iff Q[ x,p ]))) from DTCONSTR:sch 1;
now
let s being (Symbol of G);
let p being FinSequence;
assume A3: s ==> p;
then [ s,p ] in (the Rules of G) by LANG1:def 1;
then p in ( (the carrier of G) * ) by ZFMISC_1:87;
then reconsider pp = p as (FinSequence of (the carrier of G)) by FINSEQ_2:def 3;
pp = <* ( pp . 1 ),( pp . 2 ) *> by A2,A3;
then ( rng pp ) = ( rng ( <* ( pp . 1 ) *> ^ <* ( pp . 2 ) *> ) ) by FINSEQ_1:def 9
.= ( ( rng <* ( pp . 1 ) *> ) \/ ( rng <* ( pp . 2 ) *> ) ) by FINSEQ_1:31
.= ( { ( pp . 1 ) } \/ ( rng <* ( pp . 2 ) *> ) ) by FINSEQ_1:39
.= ( { ( pp . 1 ) } \/ { ( pp . 2 ) } ) by FINSEQ_1:39
.= { ( pp . 1 ),( pp . 2 ) } by ENUMSET1:1;
then (( pp . 1 ) in ( rng pp ) & ( pp . 2 ) in ( rng pp )) by TARSKI:def 2;
then reconsider pp1 = ( pp . 1 ),pp2 = ( pp . 2 ) as (Symbol of G);
take pp1;
take pp2;
thus p = <* pp1,pp2 *> by A2,A3;
end;
then A4: G is  binary by CKB20:def 1;
now
let x being (Symbol of G),y being (Symbol of G),z being (Symbol of G);
reconsider yz = <* y,z *> as (FinSequence of (the carrier of G));
(( yz . 1 ) = y & ( yz . 2 ) = z) by FINSEQ_1:44;
hence (x ==> <* y,z *> iff P[ x,y,z ]) by A2;
end;
hence thesis by A1,A4;
end;
