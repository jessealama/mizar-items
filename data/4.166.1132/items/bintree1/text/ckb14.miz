environ
vocabularies NUMBERS,XBOOLE_0,TREES_2,SUBSET_1,FUNCT_1,TREES_4,TREES_3,FINSEQ_1,TREES_1,ORDINAL1,ORDINAL4,CARD_1,XXREAL_0,ARYTM_3,FINSET_1,RELAT_1,TARSKI,TREES_A,LANG1,TDGROUP,DTCONSTR,STRUCT_0,ZFMISC_1,FUNCT_2,BINTREE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,RELAT_1,STRUCT_0,MCART_1,FUNCT_1,RELSET_1,FUNCT_2,FINSEQ_1,FINSET_1,LANG1,TREES_1,TREES_2,TREES_3,TREES_4,DTCONSTR,PRE_POLY,XXREAL_0,CKB1,CKB4,CKB11;
definitions DTCONSTR,CKB1,CKB4,CKB11;
theorems TARSKI,NAT_1,MCART_1,ZFMISC_1,ENUMSET1,MODAL_1,RELSET_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,LANG1,TREES_1,TREES_2,TREES_3,TREES_4,DTCONSTR,FINSET_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB8,CKB9,CKB11;
schemes FUNCT_2,DTCONSTR,MULTOP_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,MEMBERED,FINSEQ_1,TREES_2,TREES_3,STRUCT_0,DTCONSTR,FINSET_1,PRE_POLY,TREES_4,TREES_1,RELSET_1,CKB6,CKB7,CKB10,CKB12,CKB13;
constructors DOMAIN_1,XXREAL_0,NAT_1,MEMBERED,FINSEQOP,DTCONSTR,RELSET_1,PRE_POLY,CKB1,CKB4,CKB11;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
registration
cluster  binary ->  finite-order for Tree;
coherence
proof
let T being Tree;
assume A1: T is  binary;
now
let t being (Element of T);
assume A2: ( t ^ <* 2 *> ) in T;
then A3: ( t ^ <* ( 0 ) *> ) in T by TREES_1:def 3;
per cases ;
suppose t in ( Leaves T );

hence contradiction by A3,TREES_1:54;
end;
suppose A4: (not t in ( Leaves T ));

A5:now
A6: ( <* 2 *> . 1 ) = 2 by FINSEQ_1:40;
assume <* 2 *> = <* ( 0 ) *>;
hence contradiction by A6,FINSEQ_1:40;
end;
A7:now
A8: ( <* 2 *> . 1 ) = 2 by FINSEQ_1:40;
assume <* 2 *> = <* 1 *>;
hence contradiction by A8,FINSEQ_1:40;
end;
( t ^ <* 2 *> ) in { ( t ^ <* n *> ) where n is (Element of ( NAT )): ( t ^ <* n *> ) in T } by A2;
then A9: ( t ^ <* 2 *> ) in ( succ t ) by TREES_2:def 5;
( succ t ) = { ( t ^ <* ( 0 ) *> ),( t ^ <* 1 *> ) } by A1,A4,CKB4:def 1;
then (( t ^ <* 2 *> ) = ( t ^ <* ( 0 ) *> ) or ( t ^ <* 2 *> ) = ( t ^ <* 1 *> )) by A9,TARSKI:def 2;
hence contradiction by A5,A7,FINSEQ_1:33;
end;
end;
hence thesis by TREES_2:def 2;
end;
end;
