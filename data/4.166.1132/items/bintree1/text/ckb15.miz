environ
vocabularies NUMBERS,XBOOLE_0,TREES_2,SUBSET_1,FUNCT_1,TREES_4,TREES_3,FINSEQ_1,TREES_1,ORDINAL1,ORDINAL4,CARD_1,XXREAL_0,ARYTM_3,FINSET_1,RELAT_1,TARSKI,TREES_A,LANG1,TDGROUP,DTCONSTR,STRUCT_0,ZFMISC_1,FUNCT_2,BINTREE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,RELAT_1,STRUCT_0,MCART_1,FUNCT_1,RELSET_1,FUNCT_2,FINSEQ_1,FINSET_1,LANG1,TREES_1,TREES_2,TREES_3,TREES_4,DTCONSTR,PRE_POLY,XXREAL_0,CKB1,CKB4,CKB11;
definitions DTCONSTR,CKB1,CKB4,CKB11;
theorems TARSKI,NAT_1,MCART_1,ZFMISC_1,ENUMSET1,MODAL_1,RELSET_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,LANG1,TREES_1,TREES_2,TREES_3,TREES_4,DTCONSTR,FINSET_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB8,CKB9,CKB11;
schemes FUNCT_2,DTCONSTR,MULTOP_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,MEMBERED,FINSEQ_1,TREES_2,TREES_3,STRUCT_0,DTCONSTR,FINSET_1,PRE_POLY,TREES_4,TREES_1,RELSET_1,CKB6,CKB7,CKB10,CKB12,CKB13,CKB14;
constructors DOMAIN_1,XXREAL_0,NAT_1,MEMBERED,FINSEQOP,DTCONSTR,RELSET_1,PRE_POLY,CKB1,CKB4,CKB11;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
Th8: (for T0,T1 being Tree holds (for t being (Element of ( tree (T0,T1) )) holds ((for p being (Element of T0) holds (t = ( <* ( 0 ) *> ^ p ) implies (t in ( Leaves ( tree (T0,T1) ) ) iff p in ( Leaves T0 )))) & (for p being (Element of T1) holds (t = ( <* 1 *> ^ p ) implies (t in ( Leaves ( tree (T0,T1) ) ) iff p in ( Leaves T1 )))))))
proof
let T0 being Tree,T1 being Tree;
let t being (Element of ( tree (T0,T1) ));
set RT = ( tree (T0,T1) );
hereby
let p being (Element of T0);
assume A1: t = ( <* ( 0 ) *> ^ p );
hereby
assume A2: t in ( Leaves RT );
assume (not p in ( Leaves T0 ));
then consider n being (Element of ( NAT )) such that A3: ( p ^ <* n *> ) in T0 by TREES_1:55;
( <* ( 0 ) *> ^ ( p ^ <* n *> ) ) in RT by A3,TREES_3:69;
then ( ( <* ( 0 ) *> ^ p ) ^ <* n *> ) in RT by FINSEQ_1:32;
hence contradiction by A1,A2,TREES_1:55;
end;
assume A4: p in ( Leaves T0 );
assume (not t in ( Leaves RT ));
then consider n being (Element of ( NAT )) such that A5: ( t ^ <* n *> ) in RT by TREES_1:55;
( <* ( 0 ) *> ^ ( p ^ <* n *> ) ) in RT by A1,A5,FINSEQ_1:32;
then ( p ^ <* n *> ) in T0 by TREES_3:69;
hence contradiction by A4,TREES_1:55;
end;
let p being (Element of T1);
assume A6: t = ( <* 1 *> ^ p );
hereby
assume A7: t in ( Leaves RT );
assume (not p in ( Leaves T1 ));
then consider n being (Element of ( NAT )) such that A8: ( p ^ <* n *> ) in T1 by TREES_1:55;
( <* 1 *> ^ ( p ^ <* n *> ) ) in RT by A8,TREES_3:70;
then ( ( <* 1 *> ^ p ) ^ <* n *> ) in RT by FINSEQ_1:32;
hence contradiction by A6,A7,TREES_1:55;
end;
assume A9: p in ( Leaves T1 );
assume (not t in ( Leaves RT ));
then consider n being (Element of ( NAT )) such that A10: ( t ^ <* n *> ) in RT by TREES_1:55;
( <* 1 *> ^ ( p ^ <* n *> ) ) in RT by A6,A10,FINSEQ_1:32;
then ( p ^ <* n *> ) in T1 by TREES_3:70;
hence contradiction by A9,TREES_1:55;
end;
