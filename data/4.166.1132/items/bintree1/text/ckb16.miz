environ
vocabularies NUMBERS,XBOOLE_0,TREES_2,SUBSET_1,FUNCT_1,TREES_4,TREES_3,FINSEQ_1,TREES_1,ORDINAL1,ORDINAL4,CARD_1,XXREAL_0,ARYTM_3,FINSET_1,RELAT_1,TARSKI,TREES_A,LANG1,TDGROUP,DTCONSTR,STRUCT_0,ZFMISC_1,FUNCT_2,BINTREE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,RELAT_1,STRUCT_0,MCART_1,FUNCT_1,RELSET_1,FUNCT_2,FINSEQ_1,FINSET_1,LANG1,TREES_1,TREES_2,TREES_3,TREES_4,DTCONSTR,PRE_POLY,XXREAL_0,CKB1,CKB4,CKB11;
definitions DTCONSTR,CKB1,CKB4,CKB11;
theorems TARSKI,NAT_1,MCART_1,ZFMISC_1,ENUMSET1,MODAL_1,RELSET_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,LANG1,TREES_1,TREES_2,TREES_3,TREES_4,DTCONSTR,FINSET_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB8,CKB9,CKB11,CKB15;
schemes FUNCT_2,DTCONSTR,MULTOP_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,MEMBERED,FINSEQ_1,TREES_2,TREES_3,STRUCT_0,DTCONSTR,FINSET_1,PRE_POLY,TREES_4,TREES_1,RELSET_1,CKB6,CKB7,CKB10,CKB12,CKB13,CKB14;
constructors DOMAIN_1,XXREAL_0,NAT_1,MEMBERED,FINSEQOP,DTCONSTR,RELSET_1,PRE_POLY,CKB1,CKB4,CKB11;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
Th9: (for T0,T1 being Tree holds (for t being (Element of ( tree (T0,T1) )) holds (((t = ( {} ) implies ( succ t ) = { ( t ^ <* ( 0 ) *> ),( t ^ <* 1 *> ) }) & (for p being (Element of T0) holds (t = ( <* ( 0 ) *> ^ p ) implies (for sp being FinSequence holds (sp in ( succ p ) iff ( <* ( 0 ) *> ^ sp ) in ( succ t )))))) & (for p being (Element of T1) holds (t = ( <* 1 *> ^ p ) implies (for sp being FinSequence holds (sp in ( succ p ) iff ( <* 1 *> ^ sp ) in ( succ t ))))))))
proof
let T0 being Tree,T1 being Tree;
let t being (Element of ( tree (T0,T1) ));
set RT = ( tree (T0,T1) );
hereby
assume A1: t = ( {} );
(( {} ) in T1 & <* 1 *> = ( <* 1 *> ^ ( {} ) )) by FINSEQ_1:34,TREES_1:22;
then <* 1 *> in RT by TREES_3:68;
then A2: ( t ^ <* 1 *> ) in RT by A1,FINSEQ_1:34;
A3: ( succ t ) = { ( t ^ <* n *> ) where n is (Element of ( NAT )): ( t ^ <* n *> ) in RT } by TREES_2:def 5;
(( {} ) in T0 & <* ( 0 ) *> = ( <* ( 0 ) *> ^ ( {} ) )) by FINSEQ_1:34,TREES_1:22;
then <* ( 0 ) *> in RT by TREES_3:68;
then A4: ( t ^ <* ( 0 ) *> ) in RT by A1,FINSEQ_1:34;
now
let x1 being set;
hereby
assume x1 in ( succ t );
then consider n being (Element of ( NAT )) such that A5: x1 = ( t ^ <* n *> ) and A6: ( t ^ <* n *> ) in RT by A3;
reconsider x = x1 as FinSequence by A5;
(ex p being FinSequence st ((p in T0 & x = ( <* ( 0 ) *> ^ p )) or (p in T1 & x = ( <* 1 *> ^ p )))) by A5,A6,TREES_3:68;
then A7: (( x . 1 ) = ( 0 ) or ( x . 1 ) = 1) by FINSEQ_1:41;
x1 = <* n *> by A1,A5,FINSEQ_1:34;
then (x = <* ( 0 ) *> or x = <* 1 *>) by A7,FINSEQ_1:40;
then (x = ( t ^ <* ( 0 ) *> ) or x = ( t ^ <* 1 *> )) by A1,FINSEQ_1:34;
hence x1 in { ( t ^ <* ( 0 ) *> ),( t ^ <* 1 *> ) } by TARSKI:def 2;
end;
assume x1 in { ( t ^ <* ( 0 ) *> ),( t ^ <* 1 *> ) };
then (x1 = ( t ^ <* ( 0 ) *> ) or x1 = ( t ^ <* 1 *> )) by TARSKI:def 2;
hence x1 in ( succ t ) by A3,A4,A2;
end;
hence ( succ t ) = { ( t ^ <* ( 0 ) *> ),( t ^ <* 1 *> ) } by TARSKI:1;
end;
hereby
let p being (Element of T0);
assume that
A8: t = ( <* ( 0 ) *> ^ p );
let sp being FinSequence;
hereby
assume sp in ( succ p );
then sp in { ( p ^ <* n *> ) where n is (Element of ( NAT )): ( p ^ <* n *> ) in T0 } by TREES_2:def 5;
then consider n being (Element of ( NAT )) such that A9: sp = ( p ^ <* n *> ) and A10: ( p ^ <* n *> ) in T0;
( <* ( 0 ) *> ^ ( p ^ <* n *> ) ) in RT by A10,TREES_3:69;
then ( ( <* ( 0 ) *> ^ p ) ^ <* n *> ) in RT by FINSEQ_1:32;
then ( t ^ <* n *> ) in { ( t ^ <* k *> ) where k is (Element of ( NAT )): ( t ^ <* k *> ) in RT } by A8;
then ( t ^ <* n *> ) in ( succ t ) by TREES_2:def 5;
hence ( <* ( 0 ) *> ^ sp ) in ( succ t ) by A8,A9,FINSEQ_1:32;
end;
set zsp = ( <* ( 0 ) *> ^ sp );
assume zsp in ( succ t );
then zsp in { ( t ^ <* n *> ) where n is (Element of ( NAT )): ( t ^ <* n *> ) in RT } by TREES_2:def 5;
then consider n being (Element of ( NAT )) such that A11: zsp = ( t ^ <* n *> ) and A12: ( t ^ <* n *> ) in RT;
( <* ( 0 ) *> ^ ( p ^ <* n *> ) ) in RT by A8,A12,FINSEQ_1:32;
then ( p ^ <* n *> ) in T0 by TREES_3:69;
then ( p ^ <* n *> ) in { ( p ^ <* k *> ) where k is (Element of ( NAT )): ( p ^ <* k *> ) in T0 };
then A13: ( p ^ <* n *> ) in ( succ p ) by TREES_2:def 5;
( <* ( 0 ) *> ^ sp ) = ( <* ( 0 ) *> ^ ( p ^ <* n *> ) ) by A8,A11,FINSEQ_1:32;
hence sp in ( succ p ) by A13,FINSEQ_1:33;
end;
let p being (Element of T1);
assume that
A14: t = ( <* 1 *> ^ p );
let sp being FinSequence;
hereby
assume sp in ( succ p );
then sp in { ( p ^ <* n *> ) where n is (Element of ( NAT )): ( p ^ <* n *> ) in T1 } by TREES_2:def 5;
then consider n being (Element of ( NAT )) such that A15: sp = ( p ^ <* n *> ) and A16: ( p ^ <* n *> ) in T1;
( <* 1 *> ^ ( p ^ <* n *> ) ) in RT by A16,TREES_3:70;
then ( ( <* 1 *> ^ p ) ^ <* n *> ) in RT by FINSEQ_1:32;
then ( t ^ <* n *> ) in { ( t ^ <* k *> ) where k is (Element of ( NAT )): ( t ^ <* k *> ) in RT } by A14;
then ( t ^ <* n *> ) in ( succ t ) by TREES_2:def 5;
hence ( <* 1 *> ^ sp ) in ( succ t ) by A14,A15,FINSEQ_1:32;
end;
set zsp = ( <* 1 *> ^ sp );
assume zsp in ( succ t );
then zsp in { ( t ^ <* n *> ) where n is (Element of ( NAT )): ( t ^ <* n *> ) in RT } by TREES_2:def 5;
then consider n being (Element of ( NAT )) such that A17: zsp = ( t ^ <* n *> ) and A18: ( t ^ <* n *> ) in RT;
( <* 1 *> ^ ( p ^ <* n *> ) ) in RT by A14,A18,FINSEQ_1:32;
then ( p ^ <* n *> ) in T1 by TREES_3:70;
then ( p ^ <* n *> ) in { ( p ^ <* k *> ) where k is (Element of ( NAT )): ( p ^ <* k *> ) in T1 };
then A19: ( p ^ <* n *> ) in ( succ p ) by TREES_2:def 5;
( <* 1 *> ^ sp ) = ( <* 1 *> ^ ( p ^ <* n *> ) ) by A14,A17,FINSEQ_1:32;
hence thesis by A19,FINSEQ_1:33;
end;
