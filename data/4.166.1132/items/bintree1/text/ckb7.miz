environ
vocabularies NUMBERS,XBOOLE_0,TREES_2,SUBSET_1,FUNCT_1,TREES_4,TREES_3,FINSEQ_1,TREES_1,ORDINAL1,ORDINAL4,CARD_1,XXREAL_0,ARYTM_3,FINSET_1,RELAT_1,TARSKI,TREES_A,LANG1,TDGROUP,DTCONSTR,STRUCT_0,ZFMISC_1,FUNCT_2,BINTREE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,RELAT_1,STRUCT_0,MCART_1,FUNCT_1,RELSET_1,FUNCT_2,FINSEQ_1,FINSET_1,LANG1,TREES_1,TREES_2,TREES_3,TREES_4,DTCONSTR,PRE_POLY,XXREAL_0,CKB1,CKB4;
definitions DTCONSTR,CKB1,CKB4;
theorems TARSKI,NAT_1,MCART_1,ZFMISC_1,ENUMSET1,MODAL_1,RELSET_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,LANG1,TREES_1,TREES_2,TREES_3,TREES_4,DTCONSTR,FINSET_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5;
schemes FUNCT_2,DTCONSTR,MULTOP_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,MEMBERED,FINSEQ_1,TREES_2,TREES_3,STRUCT_0,DTCONSTR,FINSET_1,PRE_POLY,TREES_4,TREES_1,RELSET_1,CKB6;
constructors DOMAIN_1,XXREAL_0,NAT_1,MEMBERED,FINSEQOP,DTCONSTR,RELSET_1,PRE_POLY,CKB1,CKB4;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
registration
cluster ( elementary_tree 2 ) ->  binary;
coherence
proof
set T = ( elementary_tree 2 );
let t being (Element of T);
assume A1: (not t in ( Leaves T ));
per cases  by ENUMSET1:def 1,MODAL_1:7;
suppose A2: t = ( {} );

A3: (for x being set holds (x in { ( t ^ <* n *> ) where n is (Element of ( NAT )): ( t ^ <* n *> ) in T } iff x in { ( t ^ <* ( 0 ) *> ),( t ^ <* 1 *> ) }))
proof
let x being set;
hereby
assume x in { ( t ^ <* n *> ) where n is (Element of ( NAT )): ( t ^ <* n *> ) in T };
then A4: (ex n being (Element of ( NAT )) st (x = ( t ^ <* n *> ) & ( t ^ <* n *> ) in T));
then reconsider x9 = x as FinSequence;
per cases  by A4,ENUMSET1:def 1,MODAL_1:7;
suppose x = ( {} );

hence x in { ( t ^ <* ( 0 ) *> ),( t ^ <* 1 *> ) } by A4;
end;
suppose x = <* ( 0 ) *>;

then x9 = ( t ^ <* ( 0 ) *> ) by A2,FINSEQ_1:34;
hence x in { ( t ^ <* ( 0 ) *> ),( t ^ <* 1 *> ) } by TARSKI:def 2;
end;
suppose x = <* 1 *>;

then x9 = ( t ^ <* 1 *> ) by A2,FINSEQ_1:34;
hence x in { ( t ^ <* ( 0 ) *> ),( t ^ <* 1 *> ) } by TARSKI:def 2;
end;
end;
assume A5: x in { ( t ^ <* ( 0 ) *> ),( t ^ <* 1 *> ) };
then reconsider x9 = x as FinSequence by TARSKI:def 2;
A6: (x = ( t ^ <* ( 0 ) *> ) or x = ( t ^ <* 1 *> )) by A5,TARSKI:def 2;
then (x9 = <* ( 0 ) *> or x9 = <* 1 *>) by A2,FINSEQ_1:34;
then x9 in T by ENUMSET1:def 1,MODAL_1:7;
hence thesis by A6;
end;
( succ t ) = { ( t ^ <* n *> ) where n is (Element of ( NAT )): ( t ^ <* n *> ) in T } by TREES_2:def 5;
hence thesis by A3,TARSKI:1;
end;
suppose A7: t = <* ( 0 ) *>;

now
assume A8: ( t ^ <* ( 0 ) *> ) in T;
per cases  by A8,ENUMSET1:def 1,MODAL_1:7;
suppose ( t ^ <* ( 0 ) *> ) = ( {} );

hence contradiction;
end;
suppose ( t ^ <* ( 0 ) *> ) = <* ( 0 ) *>;

then ( ( len <* ( 0 ) *> ) + ( len <* ( 0 ) *> ) ) = ( len <* ( 0 ) *> ) by A7,FINSEQ_1:22;
hence contradiction by FINSEQ_1:39;
end;
suppose ( t ^ <* ( 0 ) *> ) = <* 1 *>;

then ( ( len <* ( 0 ) *> ) + ( len <* ( 0 ) *> ) ) = ( len <* 1 *> ) by A7,FINSEQ_1:22;
then ( 1 + ( len <* ( 0 ) *> ) ) = ( len <* 1 *> ) by FINSEQ_1:39;
then ( 1 + 1 ) = ( len <* 1 *> ) by FINSEQ_1:39;
hence contradiction by FINSEQ_1:39;
end;
end;
hence thesis by A1,TREES_1:54;
end;
suppose A9: t = <* 1 *>;

now
assume A10: ( t ^ <* ( 0 ) *> ) in T;
per cases  by A10,ENUMSET1:def 1,MODAL_1:7;
suppose ( t ^ <* ( 0 ) *> ) = ( {} );

hence contradiction;
end;
suppose ( t ^ <* ( 0 ) *> ) = <* ( 0 ) *>;

then ( ( len <* 1 *> ) + ( len <* ( 0 ) *> ) ) = ( len <* ( 0 ) *> ) by A9,FINSEQ_1:22;
hence contradiction by FINSEQ_1:39;
end;
suppose ( t ^ <* ( 0 ) *> ) = <* 1 *>;

then ( ( len <* 1 *> ) + ( len <* ( 0 ) *> ) ) = ( len <* 1 *> ) by A9,FINSEQ_1:22;
hence contradiction by FINSEQ_1:39;
end;
end;
hence thesis by A1,TREES_1:54;
end;
end;
end;
