environ
vocabularies POSET_1,ORDERS_1,RELAT_1,RELAT_2,XBOOLE_0,FUNCT_1,FUNCT_2,ORDINAL2,FUNCOP_1,SEQM_3,LATTICES,LATTICE3,YELLOW_0,WAYBEL_0,ABIAN,TARSKI,CARD_1,FUNCT_7,NAT_1,SUBSET_1,ORDERS_2,XXREAL_0,STRUCT_0,ARYTM_3,TREES_2,EQREL_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,ORDERS_1,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,ORDERS_2,ORDERS_3,NUMBERS,NAT_1,FUNCT_7,XXREAL_0,XCMPLX_0,YELLOW_2,LATTICE3,YELLOW_0,WAYBEL_0,ABIAN,CKB6,CKB12,CKB21,CKB24,CKB32,CKB35;
definitions RELAT_1,LATTICE3,STRUCT_0,CKB6,CKB12,CKB21,CKB24,CKB32,CKB35;
theorems RELAT_1,RELSET_1,RELAT_2,ORDERS_2,TARSKI,FUNCT_1,FUNCT_2,XBOOLE_0,XBOOLE_1,ORDERS_1,ORDERS_3,FUNCOP_1,FUNCT_7,NAT_1,LATTICE3,YELLOW_0,ABIAN,YELLOW_2,WAYBEL_0,CKB1,CKB2,CKB3,CKB5,CKB6,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38;
schemes NAT_1,RELSET_1,FUNCT_2;
registrations XBOOLE_0,ORDINAL1,FUNCT_1,PARTFUN1,STRUCT_0,ORDERS_2,XREAL_0,NAT_1,RELAT_1,WAYBEL10,YELLOW_0,WAYBEL24,FUNCT_7,RELSET_1,CKB4,CKB8,CKB9,CKB27,CKB28;
constructors ORDERS_3,NAT_1,DOMAIN_1,XXREAL_0,ABIAN,LATTICE3,YELLOW_2,RELSET_1,CKB6,CKB12,CKB21,CKB24,CKB32,CKB35;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve P for  strict  chain-complete non empty Poset;
reserve Q for  strict  chain-complete non empty Poset;
definition
let P;
let Q;
func ConRelat (P,Q) -> (Relation of ( ConFuncs (P,Q) ))
means
:Def7: (for x holds (for y holds ([ x,y ] in it iff ((x in ( ConFuncs (P,Q) ) & y in ( ConFuncs (P,Q) )) & (ex f,g being (Function of P,Q) st ((x = f & y = g) & f <= g))))));
existence
proof
defpred U[ set,set ]
 means
(ex f,g being (Function of P,Q) st (($1 = f & $2 = g) & f <= g));
set X = ( ConFuncs (P,Q) );
consider IT being (Relation of X,X) such that A1: (for x holds (for y holds ([ x,y ] in IT iff ((x in X & y in X) & U[ x,y ])))) from RELSET_1:sch 1;
take IT;
thus thesis by A1;
end;
uniqueness
proof
set X = ( ConFuncs (P,Q) );
let Y1 being (Relation of X),Y2 being (Relation of X);
defpred P1[ set,set ]
 means
(($1 in X & $2 in X) & (ex f,g being (Function of P,Q) st (($1 = f & $2 = g) & f <= g)));
((for x holds (for y holds (([ x,y ] in Y1 iff P1[ x,y ]) & (for x holds (for y holds ([ x,y ] in Y2 iff P1[ x,y ])))))) implies Y1 = Y2)
proof
assume A2: (for x holds (for y holds (([ x,y ] in Y1 iff P1[ x,y ]) & (for x holds (for y holds ([ x,y ] in Y2 iff P1[ x,y ]))))));
then A3: (for x1 being (Element of X) holds (for y1 being (Element of X) holds ([ x1,y1 ] in Y1 iff P1[ x1,y1 ])));
A4: (for x being (Element of X) holds (for y being (Element of X) holds ([ x,y ] in Y2 iff P1[ x,y ]))) by A2;
thus thesis from RELSET_1:sch 4(A3,A4);
end;
hence thesis;
end;
end;
