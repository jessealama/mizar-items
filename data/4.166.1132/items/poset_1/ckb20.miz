environ
vocabularies POSET_1,ORDERS_1,RELAT_1,RELAT_2,XBOOLE_0,FUNCT_1,FUNCT_2,ORDINAL2,FUNCOP_1,SEQM_3,LATTICES,LATTICE3,YELLOW_0,WAYBEL_0,ABIAN,TARSKI,CARD_1,FUNCT_7,NAT_1,SUBSET_1,ORDERS_2,XXREAL_0,STRUCT_0,ARYTM_3,TREES_2,EQREL_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,ORDERS_1,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,ORDERS_2,ORDERS_3,NUMBERS,NAT_1,FUNCT_7,XXREAL_0,XCMPLX_0,YELLOW_2,LATTICE3,YELLOW_0,WAYBEL_0,ABIAN,CKB6,CKB12;
definitions RELAT_1,LATTICE3,STRUCT_0,CKB6,CKB12;
theorems RELAT_1,RELSET_1,RELAT_2,ORDERS_2,TARSKI,FUNCT_1,FUNCT_2,XBOOLE_0,XBOOLE_1,ORDERS_1,ORDERS_3,FUNCOP_1,FUNCT_7,NAT_1,LATTICE3,YELLOW_0,ABIAN,YELLOW_2,WAYBEL_0,CKB1,CKB2,CKB3,CKB5,CKB6,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes NAT_1,RELSET_1,FUNCT_2;
registrations XBOOLE_0,ORDINAL1,FUNCT_1,PARTFUN1,STRUCT_0,ORDERS_2,XREAL_0,NAT_1,RELAT_1,WAYBEL10,YELLOW_0,WAYBEL24,FUNCT_7,RELSET_1,CKB4,CKB8,CKB9;
constructors ORDERS_3,NAT_1,DOMAIN_1,XXREAL_0,ABIAN,LATTICE3,YELLOW_2,RELSET_1,CKB6,CKB12;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for Nat;
reserve m for Nat;
reserve x for set;
reserve y for set;
reserve P for  strict  chain-complete non empty Poset;
reserve p for (Element of P);
reserve p1 for (Element of P);
reserve g for  monotone (Function of P,P);
theorem
Th3: ( iterSet (g,( Bottom P )) ) is non empty non empty (Chain of P)
proof
set a = ( Bottom P );
set R = (the InternalRel of P);
set L = ( iterSet (g,a) );
A1: (x in L implies x is (Element of P))
proof
assume x in L;
then consider y being (Element of P) such that A2: (x = y & (ex n being Nat st y = ( ( iter (g,n) ) . a )));
thus thesis by A2;
end;
(x in L implies x in (the carrier of P))
proof
assume x in L;
then x is (Element of (the carrier of P)) by A1;
hence thesis;
end;
then reconsider L as (Subset of P) by TARSKI:def 3;
(((x in L & y in L) & x <> y) implies ([ x,y ] in R or [ y,x ] in R))
proof
assume A3: ((x in L & y in L) & x <> y);
then reconsider x,y as (Element of P);
consider p such that A4: (x = p & (ex n st p = ( ( iter (g,n) ) . a ))) by A3;
consider p1 such that A5: (y = p1 & (ex m st p1 = ( ( iter (g,m) ) . a ))) by A3;
consider n such that A6: p = ( ( iter (g,n) ) . a ) by A4;
consider m such that A7: p1 = ( ( iter (g,m) ) . a ) by A5;
(p <= p1 or p1 <= p)
proof
set a1 = ( ( iter (g,1) ) . a );
A8: a1 = ( g . a ) by FUNCT_7:70;
per cases ;
suppose n <= m;

hence thesis by A6,A7,A8,CKB17:1,YELLOW_0:44;
end;
suppose m <= n;

hence thesis by A6,A7,A8,CKB17:1,YELLOW_0:44;
end;
end;
hence thesis by A4,A5,ORDERS_2:def 5;
end;
then A9: R is_connected_in L by RELAT_2:def 6;
(x in L implies [ x,x ] in R)
proof
assume x in L;
then reconsider x as (Element of P);
x <= x;
hence thesis by ORDERS_2:def 5;
end;
then R is_reflexive_in L by RELAT_2:def 1;
then R is_strongly_connected_in L by A9,ORDERS_1:7;
then reconsider L as (Chain of P) by ORDERS_2:def 7;
L is non empty non empty (Chain of P);
hence thesis;
end;
