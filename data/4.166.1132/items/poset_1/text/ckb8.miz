environ
vocabularies POSET_1,ORDERS_1,RELAT_1,RELAT_2,XBOOLE_0,FUNCT_1,FUNCT_2,ORDINAL2,FUNCOP_1,SEQM_3,LATTICES,LATTICE3,YELLOW_0,WAYBEL_0,ABIAN,TARSKI,CARD_1,FUNCT_7,NAT_1,SUBSET_1,ORDERS_2,XXREAL_0,STRUCT_0,ARYTM_3,TREES_2,EQREL_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,ORDERS_1,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,ORDERS_2,ORDERS_3,NUMBERS,NAT_1,FUNCT_7,XXREAL_0,XCMPLX_0,YELLOW_2,LATTICE3,YELLOW_0,WAYBEL_0,ABIAN,CKB6;
definitions RELAT_1,LATTICE3,STRUCT_0,CKB6;
theorems RELAT_1,RELSET_1,RELAT_2,ORDERS_2,TARSKI,FUNCT_1,FUNCT_2,XBOOLE_0,XBOOLE_1,ORDERS_1,ORDERS_3,FUNCOP_1,FUNCT_7,NAT_1,LATTICE3,YELLOW_0,ABIAN,YELLOW_2,WAYBEL_0,CKB1,CKB2,CKB3,CKB5,CKB6,CKB7;
schemes NAT_1,RELSET_1,FUNCT_2;
registrations XBOOLE_0,ORDINAL1,FUNCT_1,PARTFUN1,STRUCT_0,ORDERS_2,XREAL_0,NAT_1,RELAT_1,WAYBEL10,YELLOW_0,WAYBEL24,FUNCT_7,RELSET_1,CKB4;
constructors ORDERS_3,NAT_1,DOMAIN_1,XXREAL_0,ABIAN,LATTICE3,YELLOW_2,RELSET_1,CKB6;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
registration
cluster  strict  chain-complete non empty for Poset;
existence
proof
set z = the set;
set A = { z };
reconsider R = ( id A ) as (Relation of A);
reconsider R as (Order of A);
take IT = RelStr (# A,R #);
reconsider z as (Element of IT) by TARSKI:def 1;
(for L being (Chain of IT) holds (L is non empty implies  ex_sup_of L,IT))
proof
let L being (Chain of IT);
assume L is non empty;
(for x being (Element of IT) holds (x in L implies x <= z)) by TARSKI:def 1;
then A1: L is_<=_than z by LATTICE3:def 9;
(for y being (Element of IT) holds (L is_<=_than y implies z <= y)) by TARSKI:def 1;
hence thesis by A1,YELLOW_0:15;
end;
hence thesis by CKB6:def 1;
end;
end;
