environ
vocabularies POSET_1,ORDERS_1,RELAT_1,RELAT_2,XBOOLE_0,FUNCT_1,FUNCT_2,ORDINAL2,FUNCOP_1,SEQM_3,LATTICES,LATTICE3,YELLOW_0,WAYBEL_0,ABIAN,TARSKI,CARD_1,FUNCT_7,NAT_1,SUBSET_1,ORDERS_2,XXREAL_0,STRUCT_0,ARYTM_3,TREES_2,EQREL_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,ORDERS_1,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,ORDERS_2,ORDERS_3,NUMBERS,NAT_1,FUNCT_7,XXREAL_0,XCMPLX_0,YELLOW_2,LATTICE3,YELLOW_0,WAYBEL_0,ABIAN,CKB6,CKB12,CKB21;
definitions RELAT_1,LATTICE3,STRUCT_0,CKB6,CKB12,CKB21;
theorems RELAT_1,RELSET_1,RELAT_2,ORDERS_2,TARSKI,FUNCT_1,FUNCT_2,XBOOLE_0,XBOOLE_1,ORDERS_1,ORDERS_3,FUNCOP_1,FUNCT_7,NAT_1,LATTICE3,YELLOW_0,ABIAN,YELLOW_2,WAYBEL_0,CKB1,CKB2,CKB3,CKB5,CKB6,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
schemes NAT_1,RELSET_1,FUNCT_2;
registrations XBOOLE_0,ORDINAL1,FUNCT_1,PARTFUN1,STRUCT_0,ORDERS_2,XREAL_0,NAT_1,RELAT_1,WAYBEL10,YELLOW_0,WAYBEL24,FUNCT_7,RELSET_1,CKB4,CKB8,CKB9;
constructors ORDERS_3,NAT_1,DOMAIN_1,XXREAL_0,ABIAN,LATTICE3,YELLOW_2,RELSET_1,CKB6,CKB12,CKB21;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for Nat;
reserve k for Nat;
reserve z for set;
reserve P for  strict  chain-complete non empty Poset;
reserve p for (Element of P);
reserve g for  monotone (Function of P,P);
theorem
Th4: ( sup ( iter_min g ) ) = ( sup ( g .: ( iter_min g ) ) )
proof
reconsider L = ( g .: ( iter_min g ) ) as non empty (Chain of P) by CKB7:1;
A1: ( ex_sup_of ( iter_min g ),P &  ex_sup_of L,P) by CKB6:def 1;
set a = ( Bottom P );
set s1 = ( sup ( iter_min g ) );
set s2 = ( sup L );
A2: ( iter_min g ) is_<=_than s1 by A1,YELLOW_0:def 9;
A3: L is_<=_than s2 by A1,YELLOW_0:def 9;
(for x being (Element of P) holds (x in ( iter_min g ) implies x <= s2))
proof
let x being (Element of P);
assume x in ( iter_min g );
then consider p such that A4: (x = p & (ex n st p = ( ( iter (g,n) ) . a )));
consider n such that A5: p = ( ( iter (g,n) ) . a ) by A4;
A6: (1 <= n implies p in L)
proof
assume 1 <= n;
then consider k such that A7: n = ( 1 + k ) by NAT_1:10;
reconsider z = ( ( iter (g,k) ) . a ) as (Element of P) by CKB13:1;
z in (the carrier of P);
then A8: (z in ( dom g ) & z in ( iter_min g )) by FUNCT_2:def 1;
p = ( ( g * ( iter (g,k) ) ) . a ) by A5,A7,FUNCT_7:71
.= ( g . z ) by CKB14:1;
hence thesis by A8,FUNCT_1:def 6;
end;
(n = ( 0 ) implies p = a) by A5,CKB11:1;
hence thesis by A6,A4,A3,LATTICE3:def 9,NAT_1:14,YELLOW_0:44;
end;
then ( iter_min g ) is_<=_than s2 by LATTICE3:def 9;
then A9: s1 <= s2 by A1,YELLOW_0:30;
(for x being (Element of P) holds (x in L implies x <= s1))
proof
let x being (Element of P);
assume x in L;
then consider z such that A10: ((z in ( dom g ) & z in ( iter_min g )) & x = ( g . z )) by FUNCT_1:def 6;
consider z1 being (Element of P) such that A11: (z = z1 & (ex n st z1 = ( ( iter (g,n) ) . a ))) by A10;
consider n such that A12: z1 = ( ( iter (g,n) ) . a ) by A11;
set n1 = ( n + 1 );
( g . z ) = ( ( g * ( iter (g,n) ) ) . a ) by CKB14:1,A11,A12
.= ( ( iter (g,n1) ) . a ) by FUNCT_7:71;
then x in ( iterSet (g,a) ) by A10;
hence thesis by A2,LATTICE3:def 9;
end;
then L is_<=_than s1 by LATTICE3:def 9;
then s2 <= s1 by A1,YELLOW_0:def 9;
hence thesis by A9,ORDERS_2:2;
end;
