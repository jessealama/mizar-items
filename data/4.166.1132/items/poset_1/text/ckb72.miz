environ
vocabularies POSET_1,ORDERS_1,RELAT_1,RELAT_2,XBOOLE_0,FUNCT_1,FUNCT_2,ORDINAL2,FUNCOP_1,SEQM_3,LATTICES,LATTICE3,YELLOW_0,WAYBEL_0,ABIAN,TARSKI,CARD_1,FUNCT_7,NAT_1,SUBSET_1,ORDERS_2,XXREAL_0,STRUCT_0,ARYTM_3,TREES_2,EQREL_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,ORDERS_1,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,ORDERS_2,ORDERS_3,NUMBERS,NAT_1,FUNCT_7,XXREAL_0,XCMPLX_0,YELLOW_2,LATTICE3,YELLOW_0,WAYBEL_0,ABIAN,CKB6,CKB12,CKB21,CKB24,CKB32,CKB35,CKB39,CKB47,CKB48,CKB49,CKB58,CKB65;
definitions RELAT_1,LATTICE3,STRUCT_0,CKB6,CKB12,CKB21,CKB24,CKB32,CKB35,CKB39,CKB47,CKB48,CKB49,CKB58,CKB65;
theorems RELAT_1,RELSET_1,RELAT_2,ORDERS_2,TARSKI,FUNCT_1,FUNCT_2,XBOOLE_0,XBOOLE_1,ORDERS_1,ORDERS_3,FUNCOP_1,FUNCT_7,NAT_1,LATTICE3,YELLOW_0,ABIAN,YELLOW_2,WAYBEL_0,CKB1,CKB2,CKB3,CKB5,CKB6,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB55,CKB56,CKB57,CKB58,CKB60,CKB61,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71;
schemes NAT_1,RELSET_1,FUNCT_2;
registrations XBOOLE_0,ORDINAL1,FUNCT_1,PARTFUN1,STRUCT_0,ORDERS_2,XREAL_0,NAT_1,RELAT_1,WAYBEL10,YELLOW_0,WAYBEL24,FUNCT_7,RELSET_1,CKB4,CKB8,CKB9,CKB27,CKB28,CKB44,CKB45,CKB46,CKB54,CKB59,CKB62;
constructors ORDERS_3,NAT_1,DOMAIN_1,XXREAL_0,ABIAN,LATTICE3,YELLOW_2,RELSET_1,CKB6,CKB12,CKB21,CKB24,CKB32,CKB35,CKB39,CKB47,CKB48,CKB49,CKB58,CKB65;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for Nat;
reserve x for set;
reserve y for set;
reserve X for set;
reserve P for  strict  chain-complete non  empty Poset;
reserve p1 for (Element of P);
reserve p2 for (Element of P);
reserve g1 for  monotone (Function of P,P);
reserve g2 for  monotone (Function of P,P);
theorem
Lm37: (for G being non  empty (Chain of ( ConPoset (P,P) )) holds (for n holds (for X holds (X = { p where p is (Element of P): (ex g being (Element of ( ConPoset (P,P) )) st (ex h being  continuous (Function of P,P) st ((h = g & g in G) & p = ( ( iter (h,n) ) . ( Bottom P ) )))) } implies X is non  empty non  empty (Chain of P)))))
proof
let G being non  empty (Chain of ( ConPoset (P,P) ));
let n;
let X;
assume A1: X = { p where p is (Element of P): (ex g being (Element of ( ConPoset (P,P) )) st (ex h being  continuous (Function of P,P) st ((h = g & g in G) & p = ( ( iter (h,n) ) . ( Bottom P ) )))) };
set R = (the InternalRel of P);
reconsider X as non  empty (Subset of P) by A1,CKB70:1;
(((x in X & y in X) & x <> y) implies ([ x,y ] in R or [ y,x ] in R))
proof
assume A2: ((x in X & y in X) & x <> y);
then consider p1 being (Element of P),g1 being  continuous (Function of P,P) such that A3: ((x = p1 & g1 in G) & p1 = ( ( iter (g1,n) ) . ( Bottom P ) )) by A1,CKB68:1;
consider p2 being (Element of P),g2 being  continuous (Function of P,P) such that A4: ((y = p2 & g2 in G) & p2 = ( ( iter (g2,n) ) . ( Bottom P ) )) by A1,A2,CKB68:1;
per cases  by A3,A4,CKB71:1;
suppose g1 <= g2;

then p1 <= p2 by CKB19:1,A3,A4;
hence thesis by A3,A4,ORDERS_2:def 5;
end;
suppose g2 <= g1;

then p2 <= p1 by CKB19:1,A3,A4;
hence thesis by A3,A4,ORDERS_2:def 5;
end;
end;
then A5: R is_connected_in X by RELAT_2:def 6;
(x in X implies [ x,x ] in R)
proof
assume x in X;
then reconsider x as (Element of P);
x <= x;
hence thesis by ORDERS_2:def 5;
end;
then R is_reflexive_in X by RELAT_2:def 1;
then R is_strongly_connected_in X by A5,ORDERS_1:7;
hence thesis by ORDERS_2:def 7;
end;
