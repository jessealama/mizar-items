environ
vocabularies POSET_1,ORDERS_1,RELAT_1,RELAT_2,XBOOLE_0,FUNCT_1,FUNCT_2,ORDINAL2,FUNCOP_1,SEQM_3,LATTICES,LATTICE3,YELLOW_0,WAYBEL_0,ABIAN,TARSKI,CARD_1,FUNCT_7,NAT_1,SUBSET_1,ORDERS_2,XXREAL_0,STRUCT_0,ARYTM_3,TREES_2,EQREL_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,ORDERS_1,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,ORDERS_2,ORDERS_3,NUMBERS,NAT_1,FUNCT_7,XXREAL_0,XCMPLX_0,YELLOW_2,LATTICE3,YELLOW_0,WAYBEL_0,ABIAN,CKB6;
definitions RELAT_1,LATTICE3,STRUCT_0,CKB6;
theorems RELAT_1,RELSET_1,RELAT_2,ORDERS_2,TARSKI,FUNCT_1,FUNCT_2,XBOOLE_0,XBOOLE_1,ORDERS_1,ORDERS_3,FUNCOP_1,FUNCT_7,NAT_1,LATTICE3,YELLOW_0,ABIAN,YELLOW_2,WAYBEL_0,CKB1,CKB2,CKB3,CKB5,CKB6,CKB7,CKB10,CKB11;
schemes NAT_1,RELSET_1,FUNCT_2;
registrations XBOOLE_0,ORDINAL1,FUNCT_1,PARTFUN1,STRUCT_0,ORDERS_2,XREAL_0,NAT_1,RELAT_1,WAYBEL10,YELLOW_0,WAYBEL24,FUNCT_7,RELSET_1,CKB4,CKB8,CKB9;
constructors ORDERS_3,NAT_1,DOMAIN_1,XXREAL_0,ABIAN,LATTICE3,YELLOW_2,RELSET_1,CKB6;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve P for  strict  chain-complete non  empty Poset;
reserve p for (Element of P);
reserve g for  monotone (Function of P,P);
definition
let P being non  empty Poset;
let g being  monotone (Function of P,P);
let p being (Element of P);
func iterSet (g,p) -> non  empty set equals 
{ x where x is (Element of P): (ex n being Nat st x = ( ( iter (g,n) ) . p )) };
correctness
proof
set IT = { x where x is (Element of P): (ex n being Nat st x = ( ( iter (g,n) ) . p )) };
IT is non  empty
proof
( ( iter (g,( 0 )) ) . p ) = p by CKB11:1;
then p in IT;
hence thesis;
end;
hence thesis;
end;
end;
