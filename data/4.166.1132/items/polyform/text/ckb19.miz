environ
vocabularies NUMBERS,TARSKI,FUNCT_1,CARD_1,RELAT_1,NAT_1,INT_1,XXREAL_0,SUBSET_1,ABIAN,ARYTM_3,ARYTM_1,NEWTON,POWER,FINSEQ_1,ORDINAL4,CARD_3,XBOOLE_0,BSPACE,FUNCT_2,ZFMISC_1,SUPINF_2,MESFUNC1,FUNCOP_1,PRE_POLY,RLVECT_5,FINSET_1,VECTSP_1,QC_LANG1,RLVECT_3,STRUCT_0,FINSEQ_2,RANKNULL,RLSUB_1,VECTSP10,ORDINAL2,POLYFORM,MSSUBFAM,UNIALG_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,BINOP_1,CARD_1,NUMBERS,FUNCOP_1,FINSET_1,XCMPLX_0,XXREAL_0,NAT_1,INT_1,CARD_2,FINSEQ_1,FINSEQ_2,POWER,RVSUM_1,NEWTON,ABIAN,STRUCT_0,RLVECT_1,GROUP_1,VECTSP_1,VECTSP_4,VECTSP_5,VECTSP_7,FVSUM_1,MATRLIN,VECTSP_9,RANKNULL,BSPACE,PRE_POLY,GRCAT_1,MOD_2,CKB4,CKB12;
definitions XBOOLE_0,BINOP_1,STRUCT_0,TARSKI,FVSUM_1,FINSEQ_1,BSPACE,RANKNULL,ALGSTR_0;
theorems XBOOLE_0,FUNCT_1,RELAT_1,XBOOLE_1,TARSKI,ZFMISC_1,FUNCT_2,GROUP_1,RLVECT_1,VECTSP_1,FVSUM_1,FINSEQ_2,CARD_1,FINSEQ_1,NAT_1,FINSOP_1,VECTSP_4,BSPACE,RANKNULL,VECTSP_9,ORDINAL1,NEWTON,RVSUM_1,GR_CY_1,FUNCOP_1,XREAL_1,XXREAL_0,INT_1,POWER,FIB_NUM2,NUMBERS,CARD_2,FINSEQ_3,SUBSET_1,MOD_2,MATRIX_3,CALCUL_1,RELSET_1,GRCAT_1,CKB1,CKB2,CKB3,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes FUNCT_2,FINSEQ_1,FINSEQ_2;
registrations FINSET_1,XBOOLE_0,FUNCT_1,FUNCT_2,RELAT_1,SUBSET_1,NAT_1,INT_1,VECTSP_1,STRUCT_0,FINSEQ_1,FINSEQ_2,CARD_1,MATRLIN,BSPACE,ORDINAL1,NEWTON,FUNCOP_1,ABIAN,XREAL_0,NUMBERS,JORDAN23,PRE_POLY,XCMPLX_0,XXREAL_0,VALUED_0,PARTFUN1,RELSET_1,CKB18;
constructors VECTSP_9,REALSET1,FINSOP_1,XXREAL_0,FVSUM_1,WELLORD2,BSPACE,REAL_1,BINOP_2,RANKNULL,VECTSP_7,VECTSP_5,NEWTON,GR_CY_1,ABIAN,POWER,CARD_2,RELSET_1,CKB4,CKB12;
requirements NUMERALS,BOOLE,ARITHM,SUBSET,REAL;
begin
reserve n for Nat;
theorem
Th15: (for a,b,s being (FinSequence of ( INT )) holds (((((( len s ) > ( 0 ) & ( len a ) = ( len s )) & ( len b ) = ( len s )) & (for n being Nat holds ((1 <= n & n <= ( len s )) implies ( s . n ) = ( ( a . n ) + ( b . n ) )))) & (for k being Nat holds ((1 <= k & k < ( len s )) implies ( b . k ) = ( - ( a . ( k + 1 ) ) )))) implies ( Sum s ) = ( ( a . 1 ) + ( b . ( len s ) ) )))
proof
defpred P[ (FinSequence of ( INT )) ]
 means
(( len $1 ) > ( 0 ) implies (for a,b being (FinSequence of ( INT )) holds ((((( len a ) = ( len $1 ) & ( len b ) = ( len $1 )) & (for n being Nat holds ((1 <= n & n <= ( len $1 )) implies ( $1 . n ) = ( ( a . n ) + ( b . n ) )))) & (for k being Nat holds ((1 <= k & k < ( len $1 )) implies ( b . k ) = ( - ( a . ( k + 1 ) ) )))) implies ( Sum $1 ) = ( ( a . 1 ) + ( b . ( len $1 ) ) ))));
A1: (for p being (FinSequence of ( INT )) holds (for x being (Element of ( INT )) holds (P[ p ] implies P[ ( p ^ <* x *> ) ])))
proof
let p being (FinSequence of ( INT ));
let x being (Element of ( INT ));
assume that
A2: P[ p ];
set t = ( p ^ <* x *> );
assume ( len t ) > ( 0 );
let a being (FinSequence of ( INT ));
let b being (FinSequence of ( INT ));
assume that
A3: ( len a ) = ( len t )
and
A4: ( len b ) = ( len t )
and
A5: (for n being Nat holds ((1 <= n & n <= ( len t )) implies ( t . n ) = ( ( a . n ) + ( b . n ) )))
and
A6: (for k being Nat holds ((1 <= k & k < ( len t )) implies ( b . k ) = ( - ( a . ( k + 1 ) ) )));
A7: ( Sum t ) = ( ( Sum p ) + x ) by RVSUM_1:74;
per cases ;
suppose A8: ( len p ) = ( 0 );

reconsider egy = 1 as Nat;
p = ( {} ) by A8;
then A9: t = <* x *> by FINSEQ_1:34;
then egy <= ( len t ) by FINSEQ_1:39;
then A10: ( t . egy ) = ( ( a . egy ) + ( b . egy ) ) by A5;
A11: p = ( {} ) by A8;
( len t ) = 1 by A9,FINSEQ_1:39;
hence thesis by A7,A11,A9,A10,FINSEQ_1:40,GR_CY_1:3;
end;
suppose A12: ( len p ) > ( 0 );

set m = ( len p );
set a9 = ( a | m );
A13: ( a9 . 1 ) = ( a . 1 )
proof
reconsider egy = 1 as (Element of ( NAT ));
( (( 0 ) qua Nat) + 1 ) = 1;
then egy <= ( len p ) by A12,INT_1:7;
hence thesis by FINSEQ_3:112;
end;
set b9 = ( b | m );
A14: ( b . ( len p ) ) = ( b9 . ( len p ) ) by FINSEQ_3:112;
A15: (for n being Nat holds ((1 <= n & n < ( len p )) implies ( b9 . n ) = ( - ( a9 . ( n + 1 ) ) )))
proof
let n being Nat;
assume that
A16: 1 <= n
and
A17: n < ( len p );
reconsider n as (Element of ( NAT )) by ORDINAL1:def 12;
A18: ( b9 . n ) = ( b . n ) by A17,FINSEQ_3:112;
( n + 1 ) <= ( len p ) by A17,INT_1:7;
then A19: ( a9 . ( n + 1 ) ) = ( a . ( n + 1 ) ) by FINSEQ_3:112;
( len p ) <= ( len t ) by CALCUL_1:6;
then n < ( len t ) by A17,XXREAL_0:2;
hence thesis by A6,A16,A18,A19;
end;
A20: (for n being Nat holds ((1 <= n & n <= ( len p )) implies ( p . n ) = ( ( a9 . n ) + ( b9 . n ) )))
proof
let n being Nat;
assume that
A21: 1 <= n
and
A22: n <= ( len p );
( dom p ) = ( Seg ( len p ) ) by FINSEQ_1:def 3;
then A23: n in ( dom p ) by A21,A22,FINSEQ_1:1;
( len p ) <= ( len t ) by CALCUL_1:6;
then A24: n <= ( len t ) by A22,XXREAL_0:2;
reconsider n as (Element of ( NAT )) by ORDINAL1:def 12;
( p . n ) = ( t . n ) by A23,FINSEQ_1:def 7
.= ( ( a . n ) + ( b . n ) ) by A5,A21,A24
.= ( ( a9 . n ) + ( b . n ) ) by A22,FINSEQ_3:112
.= ( ( a9 . n ) + ( b9 . n ) ) by A22,FINSEQ_3:112;
hence thesis;
end;
A25: 1 <= ( len p ) by A12,CKB13:1;
( len <* x *> ) = 1 by FINSEQ_1:39;
then A26: ( len t ) = ( ( len p ) + 1 ) by FINSEQ_1:22;
( (( 0 ) qua Nat) + ( len p ) ) = ( len p );
then ( len p ) < ( len t ) by A26,XREAL_1:6;
then A27: ( b . ( len p ) ) = ( - ( a . ( ( len p ) + 1 ) ) ) by A6,A25;
( (( 0 ) qua Nat) + 1 ) = 1;
then A28: 1 <= ( len t ) by A26,XREAL_1:6;
A29: x = ( t . ( ( len p ) + 1 ) ) by FINSEQ_1:42
.= ( ( - ( b9 . ( len p ) ) ) + ( b . ( len t ) ) ) by A5,A26,A28,A27,A14;
m <= ( len b ) by A4,CALCUL_1:6;
then A30: ( len b9 ) = ( len p ) by FINSEQ_1:59;
m <= ( len a ) by A3,CALCUL_1:6;
then ( len a9 ) = ( len p ) by FINSEQ_1:59;
then ( Sum p ) = ( ( a9 . 1 ) + ( b9 . ( len p ) ) ) by A2,A12,A30,A20,A15;
hence thesis by A7,A13,A29;
end;
end;
A31: P[ ( <*> ( INT ) ) ];
A32: (for p being (FinSequence of ( INT )) holds P[ p ]) from FINSEQ_2:sch 2(A31,A1);
let a being (FinSequence of ( INT ));
let b being (FinSequence of ( INT ));
let s being (FinSequence of ( INT ));
assume (((( len s ) > ( 0 ) & ( len a ) = ( len s )) & (( len b ) = ( len s ) & (for n being Nat holds ((1 <= n & n <= ( len s )) implies ( s . n ) = ( ( a . n ) + ( b . n ) ))))) & (for k being Nat holds ((1 <= k & k < ( len s )) implies ( b . k ) = ( - ( a . ( k + 1 ) ) ))));
hence thesis by A32;
end;
