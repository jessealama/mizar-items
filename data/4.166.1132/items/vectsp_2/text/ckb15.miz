environ
vocabularies XBOOLE_0,ALGSTR_0,VECTSP_1,MESFUNC1,GROUP_1,SUBSET_1,RELAT_1,STRUCT_0,RLVECT_1,LATTICES,FUNCSDOM,BINOP_1,SUPINF_2,ARYTM_3,ARYTM_1,FUNCT_1,ZFMISC_1,FUNCT_5,MCART_1,VECTSP_2;
notations XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCT_2,BINOP_1,FUNCT_5,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,FUNCSDOM,FUNCT_3,CKB3,CKB5,CKB6,CKB8;
definitions VECTSP_1,RLVECT_1,STRUCT_0,GROUP_1,ALGSTR_0,CKB3;
theorems VECTSP_1,TARSKI,RLVECT_1,GROUP_1,CARD_1,ALGSTR_0,CKB1,CKB3,CKB7,CKB11,CKB12,CKB13,CKB14;
registrations XBOOLE_0,STRUCT_0,VECTSP_1,ALGSTR_0,CKB2,CKB4,CKB9,CKB10;
constructors FUNCT_3,VECTSP_1,FUNCSDOM,FUNCT_5,CKB3;
requirements SUBSET,BOOLE;
begin
theorem
(for R being  add-associative  right_zeroed  Abelian  right_complementable non empty addLoopStr holds (for x,y being (Element of R) holds (ex z being (Element of R) st (x = ( y + z ) & x = ( z + y )))))
proof
let R being  add-associative  right_zeroed  Abelian  right_complementable non empty addLoopStr;
let x being (Element of R),y being (Element of R);
take z = ( ( - y ) + x );
( z + y ) = ( x + ( ( - y ) + y ) ) by RLVECT_1:def 3
.= ( x + ( 0. R ) ) by RLVECT_1:5
.= x by RLVECT_1:4;
hence thesis;
end;
