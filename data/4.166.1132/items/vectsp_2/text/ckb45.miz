environ
vocabularies XBOOLE_0,ALGSTR_0,VECTSP_1,MESFUNC1,GROUP_1,SUBSET_1,RELAT_1,STRUCT_0,RLVECT_1,LATTICES,FUNCSDOM,BINOP_1,SUPINF_2,ARYTM_3,ARYTM_1,FUNCT_1,ZFMISC_1,FUNCT_5,MCART_1,VECTSP_2;
notations XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCT_2,BINOP_1,FUNCT_5,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,FUNCSDOM,FUNCT_3,CKB3,CKB5,CKB6,CKB8,CKB20,CKB21,CKB36,CKB39,CKB40,CKB41,CKB44;
definitions VECTSP_1,RLVECT_1,STRUCT_0,GROUP_1,ALGSTR_0,CKB3,CKB20,CKB21,CKB44;
theorems VECTSP_1,TARSKI,RLVECT_1,GROUP_1,CARD_1,ALGSTR_0,CKB1,CKB3,CKB7,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB44;
registrations XBOOLE_0,STRUCT_0,VECTSP_1,ALGSTR_0,CKB2,CKB4,CKB9,CKB10,CKB36,CKB37,CKB38,CKB41,CKB42,CKB43;
constructors FUNCT_3,VECTSP_1,FUNCSDOM,FUNCT_5,CKB3,CKB21,CKB36,CKB41,CKB44;
requirements SUBSET,BOOLE;
begin
reserve R for Ring;
theorem
Lm4: VectSpStr (# (the carrier of R),(the addF of R),( 0. R ),(the multF of R) #) is  Abelian  add-associative  right_zeroed  right_complementable
proof
deffunc LEFTMODULE(Ring) = VectSpStr (# (the carrier of $1),(the addF of $1),( 0. $1 ),(the multF of $1) #);
A1: (for x,y,z being (Scalar of R) holds (for x9,y9,z9 being (Element of LEFTMODULE(R)) holds (((x = x9 & y = y9) & z = z9) implies ( x + y ) = ( x9 + y9 ))));
thus LEFTMODULE(R) is  Abelian
proof
let x being (Element of LEFTMODULE(R)),y being (Element of LEFTMODULE(R));
reconsider x9 = x,y9 = y as (Scalar of R);
thus ( x + y ) = ( y9 + x9 ) by A1
.= ( y + x );
end;

thus LEFTMODULE(R) is  add-associative
proof
let x being (Element of LEFTMODULE(R)),y being (Element of LEFTMODULE(R)),z being (Element of LEFTMODULE(R));
reconsider x9 = x,y9 = y,z9 = z as (Scalar of R);
thus ( ( x + y ) + z ) = ( ( x9 + y9 ) + z9 )
.= ( x9 + ( y9 + z9 ) ) by RLVECT_1:def 3
.= ( x + ( y + z ) );
end;

thus LEFTMODULE(R) is  right_zeroed
proof
let x being (Element of LEFTMODULE(R));
reconsider x9 = x as (Scalar of R);
thus ( x + ( 0. LEFTMODULE(R) ) ) = ( x9 + ( 0. R ) )
.= x by RLVECT_1:4;
end;

let x being (Element of LEFTMODULE(R));
reconsider x9 = x as (Scalar of R);
consider b9 being (Scalar of R) such that A2: ( x9 + b9 ) = ( 0. R ) by ALGSTR_0:def 11;
reconsider b = b9 as (Element of LEFTMODULE(R));
take b;
thus thesis by A2;
end;
