environ
vocabularies XBOOLE_0,ALGSTR_0,VECTSP_1,MESFUNC1,GROUP_1,SUBSET_1,RELAT_1,STRUCT_0,RLVECT_1,LATTICES,FUNCSDOM,BINOP_1,SUPINF_2,ARYTM_3,ARYTM_1,FUNCT_1,ZFMISC_1,FUNCT_5,MCART_1,VECTSP_2;
notations XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCT_2,BINOP_1,FUNCT_5,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,FUNCSDOM,FUNCT_3,CKB3,CKB5,CKB6,CKB8,CKB20,CKB21;
definitions VECTSP_1,RLVECT_1,STRUCT_0,GROUP_1,ALGSTR_0,CKB3,CKB20,CKB21;
theorems VECTSP_1,TARSKI,RLVECT_1,GROUP_1,CARD_1,ALGSTR_0,CKB1,CKB3,CKB7,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22;
registrations XBOOLE_0,STRUCT_0,VECTSP_1,ALGSTR_0,CKB2,CKB4,CKB9,CKB10;
constructors FUNCT_3,VECTSP_1,FUNCSDOM,FUNCT_5,CKB3,CKB21;
requirements SUBSET,BOOLE;
begin
reserve SF for Skew-Field;
reserve x for (Scalar of SF);
reserve y for (Scalar of SF);
theorem
Th45: (( y * x ) = ( 1_ SF ) implies (x = ( y " ) & y = ( x " )))
proof
A1: (( y * x ) = ( 1_ SF ) implies y = ( x " ))
proof
assume A2: ( y * x ) = ( 1_ SF );
then x <> ( 0. SF ) by VECTSP_1:6;
hence thesis by A2,CKB20:def 1;
end;
(( y * x ) = ( 1_ SF ) implies x = ( y " ))
proof
assume ( y * x ) = ( 1_ SF );
then (y <> ( 0. SF ) & ( x * y ) = ( 1_ SF )) by CKB18:1,VECTSP_1:7;
hence thesis by CKB20:def 1;
end;
hence thesis by A1;
end;
