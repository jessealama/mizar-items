environ
vocabularies XBOOLE_0,ALGSTR_0,VECTSP_1,MESFUNC1,GROUP_1,SUBSET_1,RELAT_1,STRUCT_0,RLVECT_1,LATTICES,FUNCSDOM,BINOP_1,SUPINF_2,ARYTM_3,ARYTM_1,FUNCT_1,ZFMISC_1,FUNCT_5,MCART_1,VECTSP_2;
notations XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCT_2,BINOP_1,FUNCT_5,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,FUNCSDOM,FUNCT_3,CKB3,CKB5,CKB6,CKB8;
definitions VECTSP_1,RLVECT_1,STRUCT_0,GROUP_1,ALGSTR_0,CKB3;
theorems VECTSP_1,TARSKI,RLVECT_1,GROUP_1,CARD_1,ALGSTR_0,CKB1,CKB3,CKB7,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
registrations XBOOLE_0,STRUCT_0,VECTSP_1,ALGSTR_0,CKB2,CKB4,CKB9,CKB10;
constructors FUNCT_3,VECTSP_1,FUNCSDOM,FUNCT_5,CKB3;
requirements SUBSET,BOOLE;
begin
definition
let SF being non degenerated  almost_left_invertible  associative  add-associative  right_zeroed  right_complementable  well-unital  distributive non empty doubleLoopStr;
let x being (Element of SF);
assume A1: x <> ( 0. SF );
redefine func x "
means
:Def7: ( it * x ) = ( 1. SF );
compatibility
proof
let IT being (Element of SF);
A2: x is  left_invertible by A1,ALGSTR_0:def 39;
then consider y being (Element of SF) such that A3: ( y * x ) = ( 1. SF ) by ALGSTR_0:def 27;
x is  right_invertible
proof
take y;
thus thesis by A3,CKB18:1;
end;
then consider x1 being (Element of SF) such that A4: ( x * x1 ) = ( 1. SF ) by ALGSTR_0:def 28;
x is  right_mult-cancelable
proof
let y being (Element of SF),z being (Element of SF);
assume A5: ( y * x ) = ( z * x );
thus y = ( y * ( 1. SF ) ) by VECTSP_1:def 6
.= ( ( z * x ) * x1 ) by A4,A5,GROUP_1:def 3
.= ( z * ( 1. SF ) ) by A4,GROUP_1:def 3
.= z by VECTSP_1:def 6;
end;
hence thesis by A2,ALGSTR_0:def 35;
end;
end;
