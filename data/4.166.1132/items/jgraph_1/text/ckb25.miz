environ
vocabularies NUMBERS,GRAPH_1,FINSEQ_1,STRUCT_0,TREES_2,SUBSET_1,REAL_1,GRAPH_4,XXREAL_0,ARYTM_3,FUNCT_1,XBOOLE_0,CARD_1,ZFMISC_1,MCART_1,ARYTM_1,NAT_1,RELAT_1,TARSKI,PARTFUN1,GLIB_000,FINSET_1,EUCLID,RLTOPSP1,TOPREAL1,GOBOARD5,PRE_TOPC,SUPINF_2,GOBOARD1,GOBOARD4,COMPLEX1,METRIC_1,SQUARE_1,RVSUM_1,CARD_3,PCOMPS_1,RCOMP_1,WEIERSTR,INT_1,BORSUK_1,TOPS_2,ORDINAL2,XXREAL_1,MEASURE5,PSCOMP_1,XXREAL_2,XREAL_0,ORDINAL1,JGRAPH_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,COMPLEX1,REAL_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FINSEQ_1,FINSET_1,NAT_1,NAT_D,SEQ_1,SEQM_3,GRAPH_1,STRUCT_0,GRAPH_2,GRAPH_4,TOPREAL1,GOBOARD5,PRE_TOPC,GOBOARD1,GOBOARD4,TOPMETR,PCOMPS_1,COMPTS_1,WEIERSTR,TOPS_2,METRIC_1,TBSP_1,RCOMP_1,SQUARE_1,PSCOMP_1,RVSUM_1,RLVECT_1,RLTOPSP1,EUCLID,FUNCT_3,CKB2,CKB4,CKB8,CKB11,CKB13,CKB18;
definitions TARSKI,XBOOLE_0,FUNCT_1,EUCLID,SQUARE_1,BINOP_1,VALUED_1,STRUCT_0,ALGSTR_0,RLTOPSP1,CKB2,CKB4,CKB13,CKB18;
theorems TARSKI,FUNCT_1,FINSEQ_1,NAT_1,ZFMISC_1,SPPOL_1,FINSEQ_4,GRAPH_1,FUNCT_3,RELAT_1,GRAPH_4,FINSEQ_3,TOPREAL1,GOBOARD1,GOBOARD5,GOBOARD4,TOPREAL3,SQUARE_1,EUCLID,JORDAN7,UNIFORM1,WEIERSTR,JORDAN5A,TOPS_2,PRE_TOPC,TBSP_1,HEINE,COMPTS_1,TOPMETR,PSCOMP_1,BORSUK_1,ABSVALUE,METRIC_1,RVSUM_1,FUNCT_2,JORDAN6,XBOOLE_0,XBOOLE_1,TOPRNS_1,XCMPLX_0,COMPLEX1,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,PARTFUN1,XXREAL_1,XXREAL_2,SEQM_3,XREAL_0,VALUED_1,RLTOPSP1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes FINSEQ_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,STRUCT_0,PRE_TOPC,METRIC_1,BORSUK_1,MONOID_0,EUCLID,GRAPH_2,GRAPH_4,FINSET_1,VALUED_0,FUNCT_2,CARD_1,XXREAL_2,TOPREAL1,RELSET_1,CKB5;
constructors FUNCT_3,REAL_1,SQUARE_1,NAT_1,NAT_D,RCOMP_1,BINARITH,TOPS_2,COMPTS_1,TBSP_1,MONOID_0,GOBOARD1,GOBOARD4,GOBOARD5,PSCOMP_1,GRAPH_2,WEIERSTR,GRAPH_4,SEQ_1,SEQM_3,XXREAL_2,FUNCSDOM,CKB2,CKB4,CKB8,CKB11,CKB13,CKB18;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve G for Graph;
reserve vs for (FinSequence of (the carrier of G));
reserve n for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve X for non  empty set;
theorem
Th22: (for f being (FinSequence of X) holds ((( PairF f ) is  Simple & ( f . 1 ) <> ( f . ( len f ) )) implies (f is  one-to-one & ( len f ) <> 1)))
proof
let f being (FinSequence of X);
thus ((( PairF f ) is  Simple & ( f . 1 ) <> ( f . ( len f ) )) implies (f is  one-to-one & ( len f ) <> 1))
proof
reconsider f1 = f as (FinSequence of (the carrier of ( PGraph X )));
assume that
A1: ( PairF f ) is  Simple
and
A2: ( f . 1 ) <> ( f . ( len f ) );
consider vs being (FinSequence of (the carrier of ( PGraph X ))) such that A3: vs is_oriented_vertex_seq_of ( PairF f ) and A4: (for n holds (for m holds ((((1 <= n & n < m) & m <= ( len vs )) & ( vs . n ) = ( vs . m )) implies (n = 1 & m = ( len vs ))))) by A1,GRAPH_4:def 7;
now
per cases ;
case A5: ( len f ) >= 1;
now
per cases  by A5,XXREAL_0:1;
case A6: ( len f ) > 1;
A7: f1 is_oriented_vertex_seq_of ( PairF f ) by A5,CKB12:1;
then ( len f1 ) = ( ( len ( PairF f ) ) + 1 ) by GRAPH_4:def 5;
then ( 1 - 1 ) < ( ( ( len ( PairF f ) ) + 1 ) - 1 ) by A6,XREAL_1:9;
then ( PairF f ) <> ( {} );
then A8: vs = f1 by A3,A7,GRAPH_4:10;
(for x holds (for y holds (((x in ( dom f ) & y in ( dom f )) & ( f . x ) = ( f . y )) implies x = y)))
proof
let x;
let y;
assume that
A9: x in ( dom f )
and
A10: y in ( dom f )
and
A11: ( f . x ) = ( f . y );
reconsider i = x,j = y as (Element of ( NAT )) by A9,A10;
A12: ( dom f ) = ( Seg ( len f ) ) by FINSEQ_1:def 3;
then A13: i <= ( len f ) by A9,FINSEQ_1:1;
A14: j <= ( len f ) by A10,A12,FINSEQ_1:1;
A15: 1 <= j by A10,A12,FINSEQ_1:1;
A16: 1 <= i by A9,A12,FINSEQ_1:1;
now
assume A17: i <> j;
now
per cases  by A17,XXREAL_0:1;
case A18: i < j;
then i = 1 by A4,A8,A11,A16,A14;
hence contradiction by A2,A4,A8,A11,A14,A18;
end;
case A19: j < i;
then j = 1 by A4,A8,A11,A13,A15;
hence contradiction by A2,A4,A8,A11,A13,A19;
end;
end;
hence contradiction;
end;
hence thesis;
end;
hence f is  one-to-one by FUNCT_1:def 4;
end;
case ( len f ) = 1;
hence f is  one-to-one by A2;
end;
end;
hence f is  one-to-one;
end;
case ( len f ) < 1;
then ( ( len f ) + 1 ) <= 1 by NAT_1:13;
then ( ( ( len f ) + 1 ) - 1 ) <= ( 1 - 1 ) by XREAL_1:9;
then ( len f ) = ( 0 );
then ( Seg ( len f ) ) = ( {} );
then (for x holds (for y holds (((x in ( dom f ) & y in ( dom f )) & ( f . x ) = ( f . y )) implies x = y))) by FINSEQ_1:def 3;
hence f is  one-to-one by FUNCT_1:def 4;
end;
end;
hence thesis by A2;
end;

end;
