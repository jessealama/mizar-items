environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,ZFMISC_1,TARSKI,XXREAL_0,MARGREL1,MCART_1,ARYTM_3,NAT_1,FINSEQ_1,RELAT_1,ORDINAL4,CARD_1,REALSET1,XBOOLEAN,BVFUNC_2,ZF_LANG,CLASSES2,FUNCT_1,FUNCOP_1,RCOMP_1,QC_LANG1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XXREAL_0,MCART_1,NAT_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCOP_1,FINSEQ_1,CKB3,CKB6,CKB7,CKB8,CKB9,CKB10,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB25,CKB26;
definitions TARSKI,XBOOLE_0,FINSEQ_1,CARD_1,CKB3,CKB7,CKB8,CKB9,CKB10,CKB17,CKB18,CKB26;
theorems ZFMISC_1,SUBSET_1,TARSKI,ENUMSET1,FINSEQ_1,MCART_1,NAT_1,FUNCT_1,FUNCT_2,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,XXREAL_0,ORDINAL1,CARD_1,CKB1,CKB2,CKB3,CKB5,CKB7,CKB8,CKB9,CKB10,CKB15,CKB17,CKB18,CKB26,CKB27,CKB28,CKB29;
schemes NAT_1,FUNCT_2,CLASSES1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,XREAL_0,FINSEQ_1,CARD_1,CKB4,CKB11,CKB12,CKB13,CKB14,CKB19,CKB24;
constructors ENUMSET1,FUNCOP_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,RELSET_1,CKB3,CKB7,CKB8,CKB9,CKB10,CKB17,CKB18,CKB26;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve k for (Element of ( NAT ));
definition
func QC-WFF -> non  empty set means 
:Def10: (it is  QC-closed & (for D being non  empty set holds (D is  QC-closed implies it c= D)));
existence
proof
<* [ ( 0 ),( 0 ) ] *> is (FinSequence of [: ( NAT ),( NAT ) :]) by CKB27:1;
then A1: <* [ ( 0 ),( 0 ) ] *> in ( [: ( NAT ),( NAT ) :] * ) by FINSEQ_1:def 11;
defpred P[ set ]
 means
(for D being non  empty set holds (D is  QC-closed implies $1 in D));
consider D0 being set such that A2: (for x being set holds (x in D0 iff (x in ( [: ( NAT ),( NAT ) :] * ) & P[ x ]))) from XBOOLE_0:sch 1;
A3: (for D being non  empty set holds (D is  QC-closed implies <* [ ( 0 ),( 0 ) ] *> in D)) by CKB26:def 1;
then reconsider D0 as non  empty set by A2,A1;
take D0;
D0 c= ( [: ( NAT ),( NAT ) :] * )
proof
let x being set;
thus thesis by A2;
end;
hence D0 is (Subset of ( [: ( NAT ),( NAT ) :] * ));
thus (for k being (Element of ( NAT )) holds (for p being (QC-pred_symbol of k) holds (for ll being (QC-variable_list of k) holds ( <* p *> ^ ll ) in D0)))
proof
let k being (Element of ( NAT ));
let p being (QC-pred_symbol of k);
let ll being (QC-variable_list of k);
( <* p *> ^ ll ) is (FinSequence of [: ( NAT ),( NAT ) :]) by CKB28:1;
then A4: ( <* p *> ^ ll ) in ( [: ( NAT ),( NAT ) :] * ) by FINSEQ_1:def 11;
(for D being non  empty set holds (D is  QC-closed implies ( <* p *> ^ ll ) in D)) by CKB26:def 1;
hence thesis by A2,A4;
end;

thus <* [ ( 0 ),( 0 ) ] *> in D0 by A2,A1,A3;
thus (for p being (FinSequence of [: ( NAT ),( NAT ) :]) holds (p in D0 implies ( <* [ 1,( 0 ) ] *> ^ p ) in D0))
proof
reconsider h = <* [ 1,( 0 ) ] *> as (FinSequence of [: ( NAT ),( NAT ) :]) by CKB27:1;
let p being (FinSequence of [: ( NAT ),( NAT ) :]);
assume A5: p in D0;
A6: (for D being non  empty set holds (D is  QC-closed implies ( <* [ 1,( 0 ) ] *> ^ p ) in D))
proof
let D being non  empty set;
assume A7: D is  QC-closed;
then p in D by A2,A5;
hence thesis by A7,CKB26:def 1;
end;
( h ^ p ) is (FinSequence of [: ( NAT ),( NAT ) :]);
then ( <* [ 1,( 0 ) ] *> ^ p ) in ( [: ( NAT ),( NAT ) :] * ) by FINSEQ_1:def 11;
hence thesis by A2,A6;
end;

thus (for p,q being (FinSequence of [: ( NAT ),( NAT ) :]) holds ((p in D0 & q in D0) implies ( ( <* [ 2,( 0 ) ] *> ^ p ) ^ q ) in D0))
proof
reconsider h = <* [ 2,( 0 ) ] *> as (FinSequence of [: ( NAT ),( NAT ) :]) by CKB27:1;
let p being (FinSequence of [: ( NAT ),( NAT ) :]);
let q being (FinSequence of [: ( NAT ),( NAT ) :]);
assume that
A8: (p in D0 & q in D0);
A9: (for D being non  empty set holds (D is  QC-closed implies ( ( <* [ 2,( 0 ) ] *> ^ p ) ^ q ) in D))
proof
let D being non  empty set;
assume A10: D is  QC-closed;
then (p in D & q in D) by A2,A8;
hence thesis by A10,CKB26:def 1;
end;
( ( h ^ p ) ^ q ) is (FinSequence of [: ( NAT ),( NAT ) :]);
then ( ( <* [ 2,( 0 ) ] *> ^ p ) ^ q ) in ( [: ( NAT ),( NAT ) :] * ) by FINSEQ_1:def 11;
hence thesis by A2,A9;
end;

thus (for x being bound_QC-variable holds (for p being (FinSequence of [: ( NAT ),( NAT ) :]) holds (p in D0 implies ( ( <* [ 3,( 0 ) ] *> ^ <* x *> ) ^ p ) in D0)))
proof
let x being bound_QC-variable;
let p being (FinSequence of [: ( NAT ),( NAT ) :]);
assume A11: p in D0;
A12: (for D being non  empty set holds (D is  QC-closed implies ( ( <* [ 3,( 0 ) ] *> ^ <* x *> ) ^ p ) in D))
proof
let D being non  empty set;
assume A13: D is  QC-closed;
then p in D by A2,A11;
hence thesis by A13,CKB26:def 1;
end;
( ( <* [ 3,( 0 ) ] *> ^ <* x *> ) ^ p ) is (FinSequence of [: ( NAT ),( NAT ) :]) by CKB29:1;
then ( ( <* [ 3,( 0 ) ] *> ^ <* x *> ) ^ p ) in ( [: ( NAT ),( NAT ) :] * ) by FINSEQ_1:def 11;
hence thesis by A2,A12;
end;

let D being non  empty set;
assume that
A14: D is  QC-closed;
let x being set;
assume x in D0;
hence thesis by A2,A14;
end;
uniqueness
proof
let D1 being non  empty set;
let D2 being non  empty set;
assume (((D1 is  QC-closed & (for D being non  empty set holds (D is  QC-closed implies D1 c= D))) & D2 is  QC-closed) & (for D being non  empty set holds (D is  QC-closed implies D2 c= D)));
then (D1 c= D2 & D2 c= D1);
hence thesis by XBOOLE_0:def 10;
end;
end;
