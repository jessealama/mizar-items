environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,ZFMISC_1,TARSKI,XXREAL_0,MARGREL1,MCART_1,ARYTM_3,NAT_1,FINSEQ_1,RELAT_1,ORDINAL4,CARD_1,REALSET1,XBOOLEAN,BVFUNC_2,ZF_LANG,CLASSES2,FUNCT_1,FUNCOP_1,RCOMP_1,QC_LANG1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XXREAL_0,MCART_1,NAT_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCOP_1,FINSEQ_1,CKB3,CKB6,CKB7,CKB8,CKB9,CKB10,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB25,CKB26,CKB30,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB66;
definitions TARSKI,XBOOLE_0,FINSEQ_1,CARD_1,CKB3,CKB7,CKB8,CKB9,CKB10,CKB17,CKB18,CKB26,CKB30,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB66;
theorems ZFMISC_1,SUBSET_1,TARSKI,ENUMSET1,FINSEQ_1,MCART_1,NAT_1,FUNCT_1,FUNCT_2,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,XXREAL_0,ORDINAL1,CARD_1,CKB1,CKB2,CKB3,CKB5,CKB7,CKB8,CKB9,CKB10,CKB15,CKB17,CKB18,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB61,CKB62,CKB63,CKB64,CKB66;
schemes NAT_1,FUNCT_2,CLASSES1,XBOOLE_0,CKB40,CKB60,CKB65;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,XREAL_0,FINSEQ_1,CARD_1,CKB4,CKB11,CKB12,CKB13,CKB14,CKB19,CKB24;
constructors ENUMSET1,FUNCOP_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,RELSET_1,CKB3,CKB7,CKB8,CKB9,CKB10,CKB17,CKB18,CKB26,CKB30,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB66;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve P for QC-pred_symbol;
reserve F for (Element of ( QC-WFF ));
reserve p for (Element of ( QC-WFF ));
reserve j for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
definition
let p being QC-formula;
func still_not-bound_in p -> (Subset of ( bound_QC-variables )) means 
(ex F being (Function of ( QC-WFF ),( bool ( bound_QC-variables ) )) st (it = ( F . p ) & (for p being (Element of ( QC-WFF )) holds ((((( F . ( VERUM ) ) = ( {} ) & (p is  atomic implies ( F . p ) = { ( ( the_arguments_of p ) . k ): ((1 <= k & k <= ( len ( the_arguments_of p ) )) & ( ( the_arguments_of p ) . k ) in ( bound_QC-variables )) })) & (p is  negative implies ( F . p ) = ( F . ( the_argument_of p ) ))) & (p is  conjunctive implies ( F . p ) = ( ( F . ( the_left_argument_of p ) ) \/ ( F . ( the_right_argument_of p ) ) ))) & (p is  universal implies ( F . p ) = ( ( F . ( the_scope_of p ) ) \ { ( bound_in p ) } ))))));
existence
proof
deffunc Q((Element of ( QC-WFF )),(Subset of ( bound_QC-variables ))) = ( $2 \ { ( bound_in $1 ) } );
deffunc C((Subset of ( bound_QC-variables )),(Subset of ( bound_QC-variables ))) = ( $1 \/ $2 );
deffunc N((Subset of ( bound_QC-variables ))) = $1;
deffunc A((Element of ( QC-WFF ))) = ( still_not-bound_in ( the_arguments_of $1 ) );
reconsider Emp = ( {} ) as (Subset of ( bound_QC-variables )) by XBOOLE_1:2;
consider F being (Function of ( QC-WFF ),( bool ( bound_QC-variables ) )) such that A1: (( F . ( VERUM ) ) = Emp & (for p being (Element of ( QC-WFF )) holds ((((p is  atomic implies ( F . p ) = A(p)) & (p is  negative implies ( F . p ) = N(( F . ( the_argument_of p ) )))) & (p is  conjunctive implies ( F . p ) = C(( F . ( the_left_argument_of p ) ),( F . ( the_right_argument_of p ) )))) & (p is  universal implies ( F . p ) = Q(p,( F . ( the_scope_of p ) )))))) from CKB65:sch 1;
take ( F . p );
take F;
thus ( F . p ) = ( F . p );
let p being (Element of ( QC-WFF ));
thus ( F . ( VERUM ) ) = ( {} ) by A1;
thus (p is  atomic implies ( F . p ) = { ( ( the_arguments_of p ) . k ): ((1 <= k & k <= ( len ( the_arguments_of p ) )) & ( ( the_arguments_of p ) . k ) in ( bound_QC-variables )) })
proof
assume p is  atomic;
then ( F . p ) = ( still_not-bound_in ( the_arguments_of p ) ) by A1;
hence thesis;
end;

thus (p is  negative implies ( F . p ) = ( F . ( the_argument_of p ) )) by A1;
thus (p is  conjunctive implies ( F . p ) = ( ( F . ( the_left_argument_of p ) ) \/ ( F . ( the_right_argument_of p ) ) )) by A1;
assume p is  universal;
hence thesis by A1;
end;
uniqueness
proof
let IT being (Subset of ( bound_QC-variables ));
let IT9 being (Subset of ( bound_QC-variables ));
given F1 being (Function of ( QC-WFF ),( bool ( bound_QC-variables ) )) such that
A2: IT = ( F1 . p )
and
A3: (for p being (Element of ( QC-WFF )) holds ((((( F1 . ( VERUM ) ) = ( {} ) & (p is  atomic implies ( F1 . p ) = { ( ( the_arguments_of p ) . k ): ((1 <= k & k <= ( len ( the_arguments_of p ) )) & ( ( the_arguments_of p ) . k ) in ( bound_QC-variables )) })) & (p is  negative implies ( F1 . p ) = ( F1 . ( the_argument_of p ) ))) & (p is  conjunctive implies ( F1 . p ) = ( ( F1 . ( the_left_argument_of p ) ) \/ ( F1 . ( the_right_argument_of p ) ) ))) & (p is  universal implies ( F1 . p ) = ( ( F1 . ( the_scope_of p ) ) \ { ( bound_in p ) } ))));

given F2 being (Function of ( QC-WFF ),( bool ( bound_QC-variables ) )) such that
A4: IT9 = ( F2 . p )
and
A5: (for p being (Element of ( QC-WFF )) holds ((((( F2 . ( VERUM ) ) = ( {} ) & (p is  atomic implies ( F2 . p ) = { ( ( the_arguments_of p ) . k ): ((1 <= k & k <= ( len ( the_arguments_of p ) )) & ( ( the_arguments_of p ) . k ) in ( bound_QC-variables )) })) & (p is  negative implies ( F2 . p ) = ( F2 . ( the_argument_of p ) ))) & (p is  conjunctive implies ( F2 . p ) = ( ( F2 . ( the_left_argument_of p ) ) \/ ( F2 . ( the_right_argument_of p ) ) ))) & (p is  universal implies ( F2 . p ) = ( ( F2 . ( the_scope_of p ) ) \ { ( bound_in p ) } ))));

defpred Prop[ (Element of ( QC-WFF )) ]
 means
( F1 . $1 ) = ( F2 . $1 );
A6: (for k being (Element of ( NAT )) holds (for P being (QC-pred_symbol of k) holds (for ll being (QC-variable_list of k) holds Prop[ ( P ! ll ) ])))
proof
let k being (Element of ( NAT ));
let P being (QC-pred_symbol of k);
let ll being (QC-variable_list of k);
A7: ( P ! ll ) is  atomic by CKB41:def 1;
then A8: ( the_arguments_of ( P ! ll ) ) = ll by CKB51:def 1;
hence ( F1 . ( P ! ll ) ) = { ( ll . j ): ((1 <= j & j <= ( len ll )) & ( ll . j ) in ( bound_QC-variables )) } by A3,A7
.= ( F2 . ( P ! ll ) ) by A5,A7,A8;
end;
A9: (for p being (Element of ( QC-WFF )) holds (Prop[ p ] implies Prop[ ( 'not' p ) ]))
proof
let p being (Element of ( QC-WFF ));
assume that
A10: ( F1 . p ) = ( F2 . p );
A11: ( 'not' p ) is  negative by CKB42:def 1;
then A12: ( the_argument_of ( 'not' p ) ) = p by CKB52:def 1;
hence ( F1 . ( 'not' p ) ) = ( F2 . p ) by A3,A10,A11
.= ( F2 . ( 'not' p ) ) by A5,A11,A12;
end;
A13: (for x being bound_QC-variable holds (for p being (Element of ( QC-WFF )) holds (Prop[ p ] implies Prop[ ( All (x,p) ) ])))
proof
let x being bound_QC-variable;
let p being (Element of ( QC-WFF ));
assume that
A14: ( F1 . p ) = ( F2 . p );
A15: ( All (x,p) ) is  universal by CKB44:def 1;
then A16: (( the_scope_of ( All (x,p) ) ) = p & ( bound_in ( All (x,p) ) ) = x) by CKB55:def 1,CKB56:def 1;
hence ( F1 . ( All (x,p) ) ) = ( ( F2 . p ) \ { x } ) by A3,A14,A15
.= ( F2 . ( All (x,p) ) ) by A5,A15,A16;
end;
A17: (for p,q being (Element of ( QC-WFF )) holds ((Prop[ p ] & Prop[ q ]) implies Prop[ ( p '&' q ) ]))
proof
let p being (Element of ( QC-WFF ));
let q being (Element of ( QC-WFF ));
assume that
A18: (( F1 . p ) = ( F2 . p ) & ( F1 . q ) = ( F2 . q ));
A19: ( p '&' q ) is  conjunctive by CKB43:def 1;
then A20: (( the_left_argument_of ( p '&' q ) ) = p & ( the_right_argument_of ( p '&' q ) ) = q) by CKB53:def 1,CKB54:def 1;
hence ( F1 . ( p '&' q ) ) = ( ( F2 . p ) \/ ( F2 . q ) ) by A3,A18,A19
.= ( F2 . ( p '&' q ) ) by A5,A19,A20;
end;
A21: Prop[ ( VERUM ) ] by A3,A5;
(for p being (Element of ( QC-WFF )) holds Prop[ p ]) from CKB40:sch 1(A6,A21,A9,A17,A13);
hence thesis by A2,A4;
end;
end;
