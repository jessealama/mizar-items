environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,ZFMISC_1,TARSKI,XXREAL_0,MARGREL1,MCART_1,ARYTM_3,NAT_1,FINSEQ_1,RELAT_1,ORDINAL4,CARD_1,REALSET1,XBOOLEAN,BVFUNC_2,ZF_LANG,CLASSES2,FUNCT_1,FUNCOP_1,RCOMP_1,QC_LANG1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XXREAL_0,MCART_1,NAT_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCOP_1,FINSEQ_1,CKB3,CKB6,CKB7,CKB8,CKB9,CKB10,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB25,CKB26,CKB30,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56;
definitions TARSKI,XBOOLE_0,FINSEQ_1,CARD_1,CKB3,CKB7,CKB8,CKB9,CKB10,CKB17,CKB18,CKB26,CKB30,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56;
theorems ZFMISC_1,SUBSET_1,TARSKI,ENUMSET1,FINSEQ_1,MCART_1,NAT_1,FUNCT_1,FUNCT_2,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,XXREAL_0,ORDINAL1,CARD_1,CKB1,CKB2,CKB3,CKB5,CKB7,CKB8,CKB9,CKB10,CKB15,CKB17,CKB18,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59;
schemes NAT_1,FUNCT_2,CLASSES1,XBOOLE_0,CKB40;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,XREAL_0,FINSEQ_1,CARD_1,CKB4,CKB11,CKB12,CKB13,CKB14,CKB19,CKB24;
constructors ENUMSET1,FUNCOP_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,RELSET_1,CKB3,CKB7,CKB8,CKB9,CKB10,CKB17,CKB18,CKB26,CKB30,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve k for (Element of ( NAT ));
reserve P for QC-pred_symbol;
reserve p for (Element of ( QC-WFF ));
scheme QCInd2 { P[(Element of ( QC-WFF ))] } : (for p being (Element of ( QC-WFF )) holds P[ p ])
provided
A1: (for p being (Element of ( QC-WFF )) holds (((((p is  atomic implies P[ p ]) & P[ ( VERUM ) ]) & ((p is  negative & P[ ( the_argument_of p ) ]) implies P[ p ])) & (((p is  conjunctive & P[ ( the_left_argument_of p ) ]) & P[ ( the_right_argument_of p ) ]) implies P[ p ])) & ((p is  universal & P[ ( the_scope_of p ) ]) implies P[ p ])))
proof
A2:now
let x being bound_QC-variable;
let p being (Element of ( QC-WFF ));
assume that
A3: P[ p ];
A4: ( All (x,p) ) is  universal by CKB44:def 1;
then p = ( the_scope_of ( All (x,p) ) ) by CKB56:def 1;
hence P[ ( All (x,p) ) ] by A1,A3,A4;
end;
A5:now
let p being (Element of ( QC-WFF ));
assume that
A6: P[ p ];
A7: ( 'not' p ) is  negative by CKB42:def 1;
then p = ( the_argument_of ( 'not' p ) ) by CKB52:def 1;
hence P[ ( 'not' p ) ] by A1,A6,A7;
end;
A8:now
let p being (Element of ( QC-WFF ));
let q being (Element of ( QC-WFF ));
assume that
A9: (P[ p ] & P[ q ]);
A10: ( p '&' q ) is  conjunctive by CKB43:def 1;
then (p = ( the_left_argument_of ( p '&' q ) ) & q = ( the_right_argument_of ( p '&' q ) )) by CKB53:def 1,CKB54:def 1;
hence P[ ( p '&' q ) ] by A1,A9,A10;
end;
A11:now
let k being (Element of ( NAT ));
let P being (QC-pred_symbol of k);
let ll being (QC-variable_list of k);
( P ! ll ) is  atomic by CKB41:def 1;
hence P[ ( P ! ll ) ] by A1;
end;
A12: P[ ( VERUM ) ] by A1;
thus (for p being (Element of ( QC-WFF )) holds P[ p ]) from CKB40:sch 1(A11,A12,A5,A8,A2);
end;
