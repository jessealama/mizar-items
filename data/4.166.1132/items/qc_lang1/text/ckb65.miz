environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,ZFMISC_1,TARSKI,XXREAL_0,MARGREL1,MCART_1,ARYTM_3,NAT_1,FINSEQ_1,RELAT_1,ORDINAL4,CARD_1,REALSET1,XBOOLEAN,BVFUNC_2,ZF_LANG,CLASSES2,FUNCT_1,FUNCOP_1,RCOMP_1,QC_LANG1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XXREAL_0,MCART_1,NAT_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,FUNCOP_1,FINSEQ_1,CKB3,CKB6,CKB7,CKB8,CKB9,CKB10,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB23,CKB25,CKB26,CKB30,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56;
definitions TARSKI,XBOOLE_0,FINSEQ_1,CARD_1,CKB3,CKB7,CKB8,CKB9,CKB10,CKB17,CKB18,CKB26,CKB30,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56;
theorems ZFMISC_1,SUBSET_1,TARSKI,ENUMSET1,FINSEQ_1,MCART_1,NAT_1,FUNCT_1,FUNCT_2,RELSET_1,XBOOLE_0,XBOOLE_1,FUNCOP_1,XXREAL_0,ORDINAL1,CARD_1,CKB1,CKB2,CKB3,CKB5,CKB7,CKB8,CKB9,CKB10,CKB15,CKB17,CKB18,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB61,CKB62,CKB63,CKB64;
schemes NAT_1,FUNCT_2,CLASSES1,XBOOLE_0,CKB40,CKB60;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,XREAL_0,FINSEQ_1,CARD_1,CKB4,CKB11,CKB12,CKB13,CKB14,CKB19,CKB24;
constructors ENUMSET1,FUNCOP_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,RELSET_1,CKB3,CKB7,CKB8,CKB9,CKB10,CKB17,CKB18,CKB26,CKB30,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve F for (Element of ( QC-WFF ));
scheme QCFuncEx { D() -> non empty set,V() -> (Element of D()),A((Element of ( QC-WFF ))) -> (Element of D()),N((Element of D())) -> (Element of D()),C((Element of D()),(Element of D())) -> (Element of D()),Q((Element of ( QC-WFF )),(Element of D())) -> (Element of D()) } : (ex F being (Function of ( QC-WFF ),D()) st (( F . ( VERUM ) ) = V() & (for p being (Element of ( QC-WFF )) holds ((((p is  atomic implies ( F . p ) = A(p)) & (p is  negative implies ( F . p ) = N(( F . ( the_argument_of p ) )))) & (p is  conjunctive implies ( F . p ) = C(( F . ( the_left_argument_of p ) ),( F . ( the_right_argument_of p ) )))) & (p is  universal implies ( F . p ) = Q(p,( F . ( the_scope_of p ) )))))))
proof
defpred Pfn[ (Function of ( QC-WFF ),D()),(Element of ( NAT )) ]
 means
(( $1 . ( VERUM ) ) = V() & (for p being (Element of ( QC-WFF )) holds (( len ( @ p ) ) <= $2 implies ((((p is  atomic implies ( $1 . p ) = A(p)) & (p is  negative implies ( $1 . p ) = N(( $1 . ( the_argument_of p ) )))) & (p is  conjunctive implies ( $1 . p ) = C(( $1 . ( the_left_argument_of p ) ),( $1 . ( the_right_argument_of p ) )))) & (p is  universal implies ( $1 . p ) = Q(p,( $1 . ( the_scope_of p ) )))))));
defpred Pfgp[ (Element of D()),(Function of ( QC-WFF ),D()),(Element of ( QC-WFF )) ]
 means
((((($3 = ( VERUM ) implies $1 = V()) & ($3 is  atomic implies $1 = A($3))) & ($3 is  negative implies $1 = N(( $2 . ( the_argument_of $3 ) )))) & ($3 is  conjunctive implies $1 = C(( $2 . ( the_left_argument_of $3 ) ),( $2 . ( the_right_argument_of $3 ) )))) & ($3 is  universal implies $1 = Q($3,( $2 . ( the_scope_of $3 ) ))));
defpred S[ (Element of ( NAT )) ]
 means
(ex F being (Function of ( QC-WFF ),D()) st Pfn[ F,$1 ]);
defpred Qfn[ set,set ]
 means
(ex p being (Element of ( QC-WFF )) st (p = $1 & (for g being (Function of ( QC-WFF ),D()) holds (Pfn[ g,(( len ( @ p ) ) qua (Element of ( NAT ))) ] implies $2 = ( g . p )))));
A1: (for n being (Element of ( NAT )) holds (S[ n ] implies S[ ( n + 1 ) ]))
proof
let n being (Element of ( NAT ));
given F being (Function of ( QC-WFF ),D()) such that
A2: Pfn[ F,n ];

defpred R[ (Element of ( QC-WFF )),(Element of D()) ]
 means
((( len ( @ $1 ) ) <> ( n + 1 ) implies $2 = ( F . $1 )) & (( len ( @ $1 ) ) = ( n + 1 ) implies Pfgp[ $2,F,$1 ]));
A3: (for p being (Element of ( QC-WFF )) holds (ex y being (Element of D()) st R[ p,y ]))
proof
let p being (Element of ( QC-WFF ));
now
per cases  by CKB45:1;
case ( len ( @ p ) ) <> ( n + 1 );
take y = ( F . p );
thus y = ( F . p );
end;
case A4: (( len ( @ p ) ) = ( n + 1 ) & p = ( VERUM ));
take y = V();
thus Pfgp[ y,F,p ] by A4,CKB64:1;
end;
case A5: (( len ( @ p ) ) = ( n + 1 ) & p is  atomic);
take y = A(p);
thus Pfgp[ y,F,p ] by A5,CKB64:1;
end;
case A6: (( len ( @ p ) ) = ( n + 1 ) & p is  negative);
take y = N(( F . ( the_argument_of p ) ));
thus Pfgp[ y,F,p ] by A6,CKB64:1;
end;
case A7: (( len ( @ p ) ) = ( n + 1 ) & p is  conjunctive);
take y = C(( F . ( the_left_argument_of p ) ),( F . ( the_right_argument_of p ) ));
thus Pfgp[ y,F,p ] by A7,CKB64:1;
end;
case A8: (( len ( @ p ) ) = ( n + 1 ) & p is  universal);
take y = Q(p,( F . ( the_scope_of p ) ));
thus Pfgp[ y,F,p ] by A8,CKB64:1;
end;
end;
hence thesis;
end;
consider G being (Function of ( QC-WFF ),D()) such that A9: (for p being (Element of ( QC-WFF )) holds R[ p,( G . p ) ]) from FUNCT_2:sch 3(A3);
take H = G;
thus Pfn[ H,( n + 1 ) ]
proof
thus ( H . ( VERUM ) ) = V()
proof
per cases ;
suppose ( len ( @ ( VERUM ) ) ) <> ( n + 1 );

hence thesis by A2,A9;
end;
suppose ( len ( @ ( VERUM ) ) ) = ( n + 1 );

hence thesis by A9;
end;
end;

let p being (Element of ( QC-WFF ));
assume that
A10: ( len ( @ p ) ) <= ( n + 1 );
thus (p is  atomic implies ( H . p ) = A(p))
proof
now
per cases ;
suppose ( len ( @ p ) ) <> ( n + 1 );

then (( len ( @ p ) ) <= n & ( H . p ) = ( F . p )) by A9,A10,NAT_1:8;
hence thesis by A2;
end;
suppose ( len ( @ p ) ) = ( n + 1 );

hence thesis by A9;
end;
end;
hence thesis;
end;

thus (p is  negative implies ( H . p ) = N(( H . ( the_argument_of p ) )))
proof
assume A11: p is  negative;
then ( len ( @ ( the_argument_of p ) ) ) <> ( n + 1 ) by A10,CKB57:1;
then A12: ( H . ( the_argument_of p ) ) = ( F . ( the_argument_of p ) ) by A9;
now
per cases ;
suppose ( len ( @ p ) ) <> ( n + 1 );

then (( len ( @ p ) ) <= n & ( H . p ) = ( F . p )) by A9,A10,NAT_1:8;
hence thesis by A2,A11,A12;
end;
suppose ( len ( @ p ) ) = ( n + 1 );

hence thesis by A9,A11,A12;
end;
end;
hence thesis;
end;

thus (p is  conjunctive implies ( H . p ) = C(( H . ( the_left_argument_of p ) ),( H . ( the_right_argument_of p ) )))
proof
assume A13: p is  conjunctive;
then ( len ( @ ( the_right_argument_of p ) ) ) <> ( n + 1 ) by A10,CKB58:1;
then A14: ( H . ( the_right_argument_of p ) ) = ( F . ( the_right_argument_of p ) ) by A9;
( len ( @ ( the_left_argument_of p ) ) ) <> ( n + 1 ) by A10,A13,CKB58:1;
then A15: ( H . ( the_left_argument_of p ) ) = ( F . ( the_left_argument_of p ) ) by A9;
now
per cases ;
suppose ( len ( @ p ) ) <> ( n + 1 );

then (( len ( @ p ) ) <= n & ( H . p ) = ( F . p )) by A9,A10,NAT_1:8;
hence thesis by A2,A13,A15,A14;
end;
suppose ( len ( @ p ) ) = ( n + 1 );

hence thesis by A9,A13,A15,A14;
end;
end;
hence thesis;
end;

thus (p is  universal implies ( H . p ) = Q(p,( H . ( the_scope_of p ) )))
proof
assume A16: p is  universal;
then ( len ( @ ( the_scope_of p ) ) ) <> ( n + 1 ) by A10,CKB59:1;
then A17: ( H . ( the_scope_of p ) ) = ( F . ( the_scope_of p ) ) by A9;
now
per cases ;
suppose ( len ( @ p ) ) <> ( n + 1 );

then (( len ( @ p ) ) <= n & ( H . p ) = ( F . p )) by A9,A10,NAT_1:8;
hence thesis by A2,A16,A17;
end;
suppose ( len ( @ p ) ) = ( n + 1 );

hence thesis by A9,A16,A17;
end;
end;
hence thesis;
end;

end;

end;
A18: S[ ( 0 ) ]
proof
reconsider F = ( ( QC-WFF ) --> V() ) as (Function of ( QC-WFF ),D());
take F;
thus ( F . ( VERUM ) ) = V() by FUNCOP_1:7;
let p being (Element of ( QC-WFF ));
assume that
A19: ( len ( @ p ) ) <= ( 0 );
1 <= ( len ( @ p ) ) by CKB46:1;
hence thesis by A19,XXREAL_0:2;
end;
A20: (for n being (Element of ( NAT )) holds S[ n ]) from NAT_1:sch 1(A18,A1);
then A21: (ex G being (Function of ( QC-WFF ),D()) st Pfn[ G,(( len ( @ ( VERUM ) ) ) qua (Element of ( NAT ))) ]);
A22: (for x being set holds (x in ( QC-WFF ) implies (ex y being set st Qfn[ x,y ])))
proof
let x being set;
assume x in ( QC-WFF );
then reconsider x9 = x as (Element of ( QC-WFF ));
consider F being (Function of ( QC-WFF ),D()) such that A23: Pfn[ F,(( len ( @ x9 ) ) qua (Element of ( NAT ))) ] by A20;
take ( F . x );
take x9;
thus x = x9;
let G being (Function of ( QC-WFF ),D());
assume that
A24: Pfn[ G,(( len ( @ x9 ) ) qua (Element of ( NAT ))) ];
defpred Prop[ (Element of ( QC-WFF )) ]
 means
(( len ( @ $1 ) ) <= ( len ( @ x9 ) ) implies ( F . $1 ) = ( G . $1 ));
A25:now
let p being (Element of ( QC-WFF ));
thus (p is  atomic implies Prop[ p ])
proof
assume A26: (p is  atomic & ( len ( @ p ) ) <= ( len ( @ x9 ) ));
hence ( F . p ) = A(p) by A23
.= ( G . p ) by A24,A26;
end;

thus Prop[ ( VERUM ) ] by A23,A24;
thus ((p is  negative & Prop[ ( the_argument_of p ) ]) implies Prop[ p ])
proof
assume that
A27: p is  negative
and
A28: Prop[ ( the_argument_of p ) ]
and
A29: ( len ( @ p ) ) <= ( len ( @ x9 ) );
( len ( @ ( the_argument_of p ) ) ) < ( len ( @ p ) ) by A27,CKB57:1;
hence ( F . p ) = N(( G . ( the_argument_of p ) )) by A23,A27,A28,A29,XXREAL_0:2
.= ( G . p ) by A24,A27,A29;
end;

thus (((p is  conjunctive & Prop[ ( the_left_argument_of p ) ]) & Prop[ ( the_right_argument_of p ) ]) implies Prop[ p ])
proof
assume that
A30: p is  conjunctive
and
A31: (Prop[ ( the_left_argument_of p ) ] & Prop[ ( the_right_argument_of p ) ])
and
A32: ( len ( @ p ) ) <= ( len ( @ x9 ) );
(( len ( @ ( the_left_argument_of p ) ) ) < ( len ( @ p ) ) & ( len ( @ ( the_right_argument_of p ) ) ) < ( len ( @ p ) )) by A30,CKB58:1;
hence ( F . p ) = C(( G . ( the_left_argument_of p ) ),( G . ( the_right_argument_of p ) )) by A23,A30,A31,A32,XXREAL_0:2
.= ( G . p ) by A24,A30,A32;
end;

thus ((p is  universal & Prop[ ( the_scope_of p ) ]) implies Prop[ p ])
proof
assume that
A33: p is  universal
and
A34: Prop[ ( the_scope_of p ) ]
and
A35: ( len ( @ p ) ) <= ( len ( @ x9 ) );
( len ( @ ( the_scope_of p ) ) ) < ( len ( @ p ) ) by A33,CKB59:1;
hence ( F . p ) = Q(p,( G . ( the_scope_of p ) )) by A23,A33,A34,A35,XXREAL_0:2
.= ( G . p ) by A24,A33,A35;
end;

end;
(for p being (Element of ( QC-WFF )) holds Prop[ p ]) from CKB60:sch 1(A25);
hence thesis;
end;
consider F being Function such that A36: ( dom F ) = ( QC-WFF ) and A37: (for x being set holds (x in ( QC-WFF ) implies Qfn[ x,( F . x ) ])) from CLASSES1:sch 1(A22);
( rng F ) c= D()
proof
let y being set;
assume y in ( rng F );
then consider x being set such that A38: (x in ( QC-WFF ) & y = ( F . x )) by A36,FUNCT_1:def 3;
consider p being (Element of ( QC-WFF )) such that p = x and A39: (for g being (Function of ( QC-WFF ),D()) holds (Pfn[ g,(( len ( @ p ) ) qua (Element of ( NAT ))) ] implies y = ( g . p ))) by A37,A38;
consider G being (Function of ( QC-WFF ),D()) such that A40: Pfn[ G,(( len ( @ p ) ) qua (Element of ( NAT ))) ] by A20;
y = ( G . p ) by A39,A40;
hence thesis;
end;
then reconsider F as (Function of ( QC-WFF ),D()) by A36,FUNCT_2:def 1,RELSET_1:4;
take F;
Qfn[ ( VERUM ),( F . ( VERUM ) ) ] by A37;
hence ( F . ( VERUM ) ) = V() by A21;
let p being (Element of ( QC-WFF ));
consider p1 being (Element of ( QC-WFF )) such that A41: p1 = p and A42: (for g being (Function of ( QC-WFF ),D()) holds (Pfn[ g,(( len ( @ p1 ) ) qua (Element of ( NAT ))) ] implies ( F . p ) = ( g . p1 ))) by A37;
consider G being (Function of ( QC-WFF ),D()) such that A43: Pfn[ G,(( len ( @ p1 ) ) qua (Element of ( NAT ))) ] by A20;
set p9 = ( the_scope_of p );
A44: (ex p1 being (Element of ( QC-WFF )) st (p1 = p9 & (for g being (Function of ( QC-WFF ),D()) holds (Pfn[ g,(( len ( @ p1 ) ) qua (Element of ( NAT ))) ] implies ( F . p9 ) = ( g . p1 ))))) by A37;
A45: ( F . p ) = ( G . p ) by A41,A42,A43;
hence (p is  atomic implies ( F . p ) = A(p)) by A41,A43;
A46: (for k being (Element of ( NAT )) holds (k < ( len ( @ p ) ) implies Pfn[ G,k ]))
proof
let k being (Element of ( NAT ));
assume A47: k < ( len ( @ p ) );
thus ( G . ( VERUM ) ) = V() by A43;
let p9 being (Element of ( QC-WFF ));
assume ( len ( @ p9 ) ) <= k;
then ( len ( @ p9 ) ) <= ( len ( @ p ) ) by A47,XXREAL_0:2;
hence thesis by A41,A43;
end;
thus (p is  negative implies ( F . p ) = N(( F . ( the_argument_of p ) )))
proof
set p9 = ( the_argument_of p );
set k = ( len ( @ p9 ) );
A48: (ex p1 being (Element of ( QC-WFF )) st (p1 = p9 & (for g being (Function of ( QC-WFF ),D()) holds (Pfn[ g,(( len ( @ p1 ) ) qua (Element of ( NAT ))) ] implies ( F . p9 ) = ( g . p1 ))))) by A37;
assume A49: p is  negative;
then k < ( len ( @ p ) ) by CKB57:1;
then Pfn[ G,(k qua (Element of ( NAT ))) ] by A46;
then ( F . p9 ) = ( G . p9 ) by A48;
hence thesis by A41,A43,A45,A49;
end;

thus (p is  conjunctive implies ( F . p ) = C(( F . ( the_left_argument_of p ) ),( F . ( the_right_argument_of p ) )))
proof
set p99 = ( the_right_argument_of p );
set p9 = ( the_left_argument_of p );
set k9 = ( len ( @ p9 ) );
set k99 = ( len ( @ p99 ) );
A50: (ex p2 being (Element of ( QC-WFF )) st (p2 = p99 & (for g being (Function of ( QC-WFF ),D()) holds (Pfn[ g,(( len ( @ p2 ) ) qua (Element of ( NAT ))) ] implies ( F . p99 ) = ( g . p2 ))))) by A37;
assume A51: p is  conjunctive;
then k9 < ( len ( @ p ) ) by CKB58:1;
then A52: Pfn[ G,(k9 qua (Element of ( NAT ))) ] by A46;
k99 < ( len ( @ p ) ) by A51,CKB58:1;
then Pfn[ G,(k99 qua (Element of ( NAT ))) ] by A46;
then A53: ( F . p99 ) = ( G . p99 ) by A50;
(ex p1 being (Element of ( QC-WFF )) st (p1 = p9 & (for g being (Function of ( QC-WFF ),D()) holds (Pfn[ g,(( len ( @ p1 ) ) qua (Element of ( NAT ))) ] implies ( F . p9 ) = ( g . p1 ))))) by A37;
then ( F . p9 ) = ( G . p9 ) by A52;
hence thesis by A41,A43,A45,A51,A53;
end;

set k = ( len ( @ p9 ) );
assume A54: p is  universal;
then k < ( len ( @ p ) ) by CKB59:1;
then Pfn[ G,(k qua (Element of ( NAT ))) ] by A46;
then ( F . p9 ) = ( G . p9 ) by A44;
hence thesis by A41,A43,A45,A54;
end;
