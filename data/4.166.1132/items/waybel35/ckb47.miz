environ
vocabularies XBOOLE_0,ZFMISC_1,SUBSET_1,STRUCT_0,ORDERS_2,WAYBEL_4,RELAT_1,RELAT_2,LATTICE3,LATTICES,FUNCT_1,YELLOW_1,LATTICE7,WAYBEL_0,SEQM_3,XXREAL_0,TARSKI,ARYTM_3,GROUP_4,ORDERS_1,WELLORD2,WELLORD1,YELLOW_0,EQREL_1,REWRITE1,WAYBEL_1,ORDINAL2,NUMBERS,CARD_1,NAT_1,WAYBEL35;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,NAT_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,FUNCT_2,DOMAIN_1,STRUCT_0,WELLORD1,ORDERS_2,ORDERS_1,LATTICE3,YELLOW_0,YELLOW_1,ALG_1,WAYBEL_0,WAYBEL_1,WAYBEL_4,LATTICE7,CKB6,CKB12,CKB14,CKB21,CKB22,CKB24,CKB33,CKB34,CKB39,CKB41,CKB45;
definitions TARSKI,XBOOLE_0,ORDERS_1,LATTICE3,WAYBEL_1,CKB6,CKB12,CKB14,CKB21,CKB22,CKB33,CKB34,CKB39,CKB45;
theorems WAYBEL_4,YELLOW_8,FUNCT_2,YELLOW_1,TARSKI,ORDERS_2,YELLOW_0,LATTICE3,YELLOW_4,WAYBEL_0,XBOOLE_0,LATTICE7,WAYBEL_1,XBOOLE_1,RELAT_1,WELLORD2,ORDERS_1,RELAT_2,ZFMISC_1,FUNCT_1,ORDINAL1,SUBSET_1,CKB1,CKB6,CKB12,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB38,CKB39,CKB40,CKB42,CKB43,CKB44,CKB45,CKB46;
schemes XBOOLE_0,FUNCT_2,RECDEF_1,NAT_1;
registrations SUBSET_1,ORDINAL1,RELSET_1,REALSET1,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,WAYBEL_4,FUNCT_1,ZFMISC_1,CARD_1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB16,CKB23,CKB36,CKB37;
constructors WELLORD1,NAT_1,REALSET1,ORDERS_3,WAYBEL_1,WAYBEL_4,LATTICE7,RELSET_1,CKB6,CKB12,CKB14,CKB21,CKB22,CKB33,CKB34,CKB39,CKB41,CKB45;
requirements SUBSET,BOOLE,NUMERALS;
begin
theorem
(for L being  lower-bounded non empty Poset holds (for R being  extra-order (Relation of L) holds (for C being non empty (strict_chain of R) holds (((C is  sup-closed & (for c being (Element of L) holds (c in C implies  ex_sup_of ( SetBelow (R,C,c) ),L))) & R satisfies_SIC_on C) implies (for c being (Element of L) holds (c in C implies c = ( sup ( SetBelow (R,C,c) ) )))))))
proof
let L being  lower-bounded non empty Poset;
let R being  extra-order (Relation of L);
let C being non empty (strict_chain of R);
assume that
A1: C is  sup-closed
and
A2: (for c being (Element of L) holds (c in C implies  ex_sup_of ( SetBelow (R,C,c) ),L));
assume A3: R satisfies_SIC_on C;
let c being (Element of L);
assume that
A4: c in C;
A5:  ex_sup_of ( SetBelow (R,C,c) ),L by A2,A4;
set d = ( sup ( SetBelow (R,C,c) ) );
( SetBelow (R,C,c) ) c= C by XBOOLE_1:17;
then d = ( "\/" (( SetBelow (R,C,c) ),( subrelstr C )) ) by A1,A5,CKB45:def 1;
then d in (the carrier of ( subrelstr C ));
then A6: d in C by YELLOW_0:def 15;
per cases ;
suppose c = d;

hence thesis;
end;
suppose A7: c <> d;

A8:now
assume A9: c < d;
A10: (for a being (Element of L) holds (( SetBelow (R,C,c) ) is_<=_than a implies c <= a))
proof
let a being (Element of L);
assume ( SetBelow (R,C,c) ) is_<=_than a;
then A11: d <= a by A5,YELLOW_0:def 9;
c <= d by A9,ORDERS_2:def 6;
hence thesis by A11,ORDERS_2:3;
end;
( SetBelow (R,C,c) ) is_<=_than c by CKB42:1;
hence thesis by A10,A5,YELLOW_0:def 9;
end;
([ c,d ] in R or [ d,c ] in R) by A7,A4,A6,CKB14:def 1;
then (c <= d or [ d,c ] in R) by WAYBEL_4:def 3;
then consider y being (Element of L) such that A12: y in C and [ d,y ] in R and A13: [ y,c ] in R and A14: d < y by A8,A3,A4,A6,A7,CKB35:1,ORDERS_2:def 6;
y in ( SetBelow (R,C,c) ) by A12,A13,CKB40:1;
hence thesis by A5,A14,ORDERS_2:6,YELLOW_4:1;
end;
end;
