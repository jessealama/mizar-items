environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,BVFUNC_1,XBOOLEAN,FUNCT_1,RELAT_1,TARSKI;
notations TARSKI,XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,FUNCT_2,BVFUNC_1;
definitions XBOOLEAN;
theorems FUNCT_1,FUNCT_2,MARGREL1,BINARITH,BVFUNC_1,XBOOLEAN,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22;
registrations XBOOLE_0,XBOOLEAN,MARGREL1;
constructors BVFUNC_1;
requirements SUBSET,BOOLE;
begin
reserve Y for non empty set;
theorem
(for a,b,c being (Element of ( Funcs (Y,( BOOLEAN )) )) holds (( c 'imp' ( b 'imp' a ) ) = ( I_el Y ) implies ( b 'imp' ( c 'imp' a ) ) = ( I_el Y )))
proof
let a being (Element of ( Funcs (Y,( BOOLEAN )) )),b being (Element of ( Funcs (Y,( BOOLEAN )) )),c being (Element of ( Funcs (Y,( BOOLEAN )) ));
assume A1: ( c 'imp' ( b 'imp' a ) ) = ( I_el Y );
(for x being (Element of Y) holds ( ( b 'imp' ( c 'imp' a ) ) . x ) = ( TRUE ))
proof
let x being (Element of Y);
( ( c 'imp' ( b 'imp' a ) ) . x ) = ( TRUE ) by A1,BVFUNC_1:def 11;
then ( ( 'not' ( c . x ) ) 'or' ( ( b 'imp' a ) . x ) ) = ( TRUE ) by BVFUNC_1:def 8;
then A2: ( ( 'not' ( c . x ) ) 'or' ( ( 'not' ( b . x ) ) 'or' ( a . x ) ) ) = ( TRUE ) by BVFUNC_1:def 8;
( ( b 'imp' ( c 'imp' a ) ) . x ) = ( ( 'not' ( b . x ) ) 'or' ( ( c 'imp' a ) . x ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( b . x ) ) 'or' ( ( 'not' ( c . x ) ) 'or' ( a . x ) ) ) by BVFUNC_1:def 8
.= ( TRUE ) by A2,BINARITH:11;
hence thesis;
end;
hence thesis by BVFUNC_1:def 11;
end;
