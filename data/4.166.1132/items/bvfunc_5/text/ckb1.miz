environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,BVFUNC_1,XBOOLEAN,FUNCT_1,RELAT_1,TARSKI;
notations TARSKI,XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,FUNCT_2,BVFUNC_1;
definitions XBOOLEAN;
theorems FUNCT_1,FUNCT_2,MARGREL1,BINARITH,BVFUNC_1,XBOOLEAN;
registrations XBOOLE_0,XBOOLEAN,MARGREL1;
constructors BVFUNC_1;
requirements SUBSET,BOOLE;
begin
reserve Y for non  empty set;
theorem
(for a,b being (Element of ( Funcs (Y,( BOOLEAN )) )) holds ((a = ( I_el Y ) & b = ( I_el Y )) iff ( a '&' b ) = ( I_el Y )))
proof
let a being (Element of ( Funcs (Y,( BOOLEAN )) ));
let b being (Element of ( Funcs (Y,( BOOLEAN )) ));
now
assume A1: ( a '&' b ) = ( I_el Y );
per cases ;
suppose (a = ( I_el Y ) & b = ( I_el Y ));

hence (a = ( I_el Y ) & b = ( I_el Y ));
end;
suppose (a = ( I_el Y ) & b <> ( I_el Y ));

hence (a = ( I_el Y ) & b = ( I_el Y )) by A1,BVFUNC_1:6;
end;
suppose (a <> ( I_el Y ) & b = ( I_el Y ));

hence (a = ( I_el Y ) & b = ( I_el Y )) by A1,BVFUNC_1:6;
end;
suppose A2: (a <> ( I_el Y ) & b <> ( I_el Y ));

(for x being (Element of Y) holds ( a . x ) = ( TRUE ))
proof
let x being (Element of Y);
( ( a '&' b ) . x ) = ( TRUE ) by A1,BVFUNC_1:def 11;
then ( ( a . x ) '&' ( b . x ) ) = ( TRUE ) by MARGREL1:def 20;
hence thesis by MARGREL1:12;
end;
hence (a = ( I_el Y ) & b = ( I_el Y )) by A2,BVFUNC_1:def 11;
end;
end;
hence thesis;
end;
