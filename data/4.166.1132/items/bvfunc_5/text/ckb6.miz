environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,BVFUNC_1,XBOOLEAN,FUNCT_1,RELAT_1,TARSKI;
notations TARSKI,XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,FUNCT_2,BVFUNC_1;
definitions XBOOLEAN;
theorems FUNCT_1,FUNCT_2,MARGREL1,BINARITH,BVFUNC_1,XBOOLEAN,CKB1,CKB2,CKB3,CKB4,CKB5;
registrations XBOOLE_0,XBOOLEAN,MARGREL1;
constructors BVFUNC_1;
requirements SUBSET,BOOLE;
begin
reserve Y for non empty set;
theorem
(for a being (Element of ( Funcs (Y,( BOOLEAN )) )) holds ( 'not' ( a '&' ( 'not' a ) ) ) = ( I_el Y ))
proof
let a being (Element of ( Funcs (Y,( BOOLEAN )) ));
consider k3 being Function such that A1: ( a '&' ( 'not' a ) ) = k3 and A2: ( dom k3 ) = Y and ( rng k3 ) c= ( BOOLEAN ) by FUNCT_2:def 2;
consider k4 being Function such that A3: ( O_el Y ) = k4 and A4: ( dom k4 ) = Y and ( rng k4 ) c= ( BOOLEAN ) by FUNCT_2:def 2;
(for x being (Element of Y) holds ( ( a '&' ( 'not' a ) ) . x ) = ( ( O_el Y ) . x ))
proof
let x being (Element of Y);
A5: ( ( a '&' ( 'not' a ) ) . x ) = ( ( a . x ) '&' ( ( 'not' a ) . x ) ) by MARGREL1:def 20
.= ( ( a . x ) '&' ( 'not' ( a . x ) ) ) by MARGREL1:def 19;
A6: ( ( O_el Y ) . x ) = ( FALSE ) by BVFUNC_1:def 10;
A7: ( 'not' ( FALSE ) ) = ( TRUE ) by MARGREL1:11;
now
per cases  by XBOOLEAN:def 3;
case ( a . x ) = ( TRUE );
hence thesis by A5,A7,A6,MARGREL1:12;
end;
case ( a . x ) = ( FALSE );
hence thesis by A5,A6,MARGREL1:12;
end;
end;
hence thesis;
end;
then (for u being set holds (u in Y implies ( k3 . u ) = ( k4 . u ))) by A1,A3;
then ( a '&' ( 'not' a ) ) = ( O_el Y ) by A1,A2,A3,A4,FUNCT_1:2;
hence thesis by BVFUNC_1:2;
end;
