environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,BVFUNC_1,XBOOLEAN,FUNCT_1,RELAT_1,TARSKI;
notations TARSKI,XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,FUNCT_2,BVFUNC_1;
definitions XBOOLEAN;
theorems FUNCT_1,FUNCT_2,MARGREL1,BINARITH,BVFUNC_1,XBOOLEAN,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
registrations XBOOLE_0,XBOOLEAN,MARGREL1;
constructors BVFUNC_1;
requirements SUBSET,BOOLE;
begin
reserve Y for non empty set;
theorem
(for a,b,c being (Element of ( Funcs (Y,( BOOLEAN )) )) holds (( a 'imp' ( b 'imp' c ) ) = ( I_el Y ) implies ( ( a 'imp' b ) 'imp' ( a 'imp' c ) ) = ( I_el Y )))
proof
let a being (Element of ( Funcs (Y,( BOOLEAN )) )),b being (Element of ( Funcs (Y,( BOOLEAN )) )),c being (Element of ( Funcs (Y,( BOOLEAN )) ));
assume A1: ( a 'imp' ( b 'imp' c ) ) = ( I_el Y );
(for x being (Element of Y) holds ( ( ( a 'imp' b ) 'imp' ( a 'imp' c ) ) . x ) = ( TRUE ))
proof
let x being (Element of Y);
A2:now
per cases  by XBOOLEAN:def 3;
case ( a . x ) = ( TRUE );
hence ( ( 'not' ( a . x ) ) 'or' ( a . x ) ) = ( TRUE ) by BINARITH:10;
end;
case ( a . x ) = ( FALSE );
then ( ( 'not' ( a . x ) ) 'or' ( a . x ) ) = ( ( TRUE ) 'or' ( FALSE ) ) by MARGREL1:11
.= ( TRUE ) by BINARITH:10;
hence ( ( 'not' ( a . x ) ) 'or' ( a . x ) ) = ( TRUE );
end;
end;
( ( a 'imp' ( b 'imp' c ) ) . x ) = ( TRUE ) by A1,BVFUNC_1:def 11;
then ( ( 'not' ( a . x ) ) 'or' ( ( b 'imp' c ) . x ) ) = ( TRUE ) by BVFUNC_1:def 8;
then A3: ( ( 'not' ( a . x ) ) 'or' ( ( 'not' ( b . x ) ) 'or' ( c . x ) ) ) = ( TRUE ) by BVFUNC_1:def 8;
( ( ( a 'imp' b ) 'imp' ( a 'imp' c ) ) . x ) = ( ( 'not' ( ( a 'imp' b ) . x ) ) 'or' ( ( a 'imp' c ) . x ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( ( 'not' ( a . x ) ) 'or' ( b . x ) ) ) 'or' ( ( a 'imp' c ) . x ) ) by BVFUNC_1:def 8
.= ( ( ( 'not' ( 'not' ( a . x ) ) ) '&' ( 'not' ( b . x ) ) ) 'or' ( ( 'not' ( a . x ) ) 'or' ( c . x ) ) ) by BVFUNC_1:def 8
.= ( ( ( ( 'not' ( a . x ) ) 'or' ( c . x ) ) 'or' ( a . x ) ) '&' ( ( ( 'not' ( a . x ) ) 'or' ( c . x ) ) 'or' ( 'not' ( b . x ) ) ) ) by XBOOLEAN:9
.= ( ( TRUE ) '&' ( ( ( 'not' ( a . x ) ) 'or' ( c . x ) ) 'or' ( a . x ) ) ) by A3,BINARITH:11
.= ( ( ( c . x ) 'or' ( 'not' ( a . x ) ) ) 'or' ( a . x ) ) by MARGREL1:14
.= ( ( c . x ) 'or' ( TRUE ) ) by A2,BINARITH:11
.= ( TRUE ) by BINARITH:10;
hence thesis;
end;
hence thesis by BVFUNC_1:def 11;
end;
