environ
vocabularies NUMBERS,COMSEQ_1,ARYTM_3,FUNCT_1,SUBSET_1,COMPLEX1,ARYTM_1,RELAT_1,XCMPLX_0,SERIES_1,CARD_1,REAL_1,XXREAL_0,SQUARE_1,CFUNCT_1,CARD_3,ORDINAL2,SEQ_2,VALUED_1,CSSPACE,RSSPACE,SUPINF_2,RLVECT_1,ALGSTR_0,ZFMISC_1,STRUCT_0,REALSET1,PROB_2,BHSP_1,SEQ_1,PRE_TOPC,FUNCOP_1,NAT_1,BHSP_3,NORMSP_1,XXREAL_2,REWRITE1,CSSPACE2;
notations SUBSET_1,ZFMISC_1,XCMPLX_0,XXREAL_0,NUMBERS,COMPLEX1,REAL_1,NAT_1,STRUCT_0,ALGSTR_0,RELAT_1,DOMAIN_1,PARTFUN1,FUNCT_1,FUNCT_2,BINOP_1,FUNCOP_1,REALSET1,PRE_TOPC,SQUARE_1,VALUED_1,SEQ_1,SEQ_2,SERIES_1,COMSEQ_1,CFUNCT_1,COMSEQ_2,COMSEQ_3,CLVECT_1,CLVECT_2,CSSPACE;
definitions SQUARE_1,REALSET1,BINOP_1,STRUCT_0,ALGSTR_0,VALUED_1,CLVECT_2;
theorems RELAT_1,SQUARE_1,ABSVALUE,ZFMISC_1,SEQ_1,SEQ_2,SEQM_3,SERIES_1,INT_1,FUNCT_1,NAT_1,FUNCT_2,RLVECT_1,SEQ_4,RSSPACE,XCMPLX_1,CSSPACE,CLVECT_1,COMSEQ_1,COMSEQ_2,COMSEQ_3,COMPLEX1,CLVECT_2,RSSPACE2,FUNCOP_1,XREAL_1,XXREAL_0,VALUED_1,CKB1,CKB2,CKB3,CKB4;
schemes NAT_1,SEQ_1,FUNCT_2,COMSEQ_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,NUMBERS,XCMPLX_0,XXREAL_0,MEMBERED,COMSEQ_2,COMSEQ_3,REALSET1,STRUCT_0,CSSPACE,VALUED_1,VALUED_0;
constructors BINOP_1,FUNCOP_1,REAL_1,SQUARE_1,COMSEQ_2,COMSEQ_3,REALSET1,CLVECT_2,SEQ_1,VALUED_1,SERIES_1,SEQ_2,RELSET_1;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
theorem
Lm5: (for seq being Complex_Sequence holds (for n being (Element of ( NAT )) holds ((for i being (Element of ( NAT )) holds (( ( Re seq ) . i ) >= ( 0 ) & ( ( Im seq ) . i ) = ( 0 ))) implies ( |. ( Partial_Sums seq ) .| . n ) = ( ( Partial_Sums |. seq .| ) . n ))))
proof
let seq being Complex_Sequence;
let n being (Element of ( NAT ));
defpred P[ (Element of ( NAT )) ]
 means
( |. ( Partial_Sums seq ) .| . $1 ) = ( ( Partial_Sums |. seq .| ) . $1 );
assume A1: (for i being (Element of ( NAT )) holds (( ( Re seq ) . i ) >= ( 0 ) & ( ( Im seq ) . i ) = ( 0 )));
A2:now
let m being (Element of ( NAT ));
assume A3: P[ m ];
thus P[ ( m + 1 ) ]
proof
(for i being (Element of ( NAT )) holds ( ( Partial_Sums ( Re seq ) ) . i ) >= ( 0 ))
proof
defpred Q1[ (Element of ( NAT )) ]
 means
( ( Partial_Sums ( Re seq ) ) . $1 ) >= ( 0 );
let i being (Element of ( NAT ));
A4:now
let k being (Element of ( NAT ));
assume A5: Q1[ k ];
(( ( Partial_Sums ( Re seq ) ) . ( k + 1 ) ) = ( ( ( Partial_Sums ( Re seq ) ) . k ) + ( ( Re seq ) . ( k + 1 ) ) ) & ( ( Re seq ) . ( k + 1 ) ) >= ( 0 )) by A1,SERIES_1:def 1;
then ( ( Partial_Sums ( Re seq ) ) . ( k + 1 ) ) >= ( ( 0 ) + ( 0 ) ) by A5,XREAL_1:7;
hence Q1[ ( k + 1 ) ];
end;
( ( Partial_Sums ( Re seq ) ) . ( 0 ) ) = ( ( Re seq ) . ( 0 ) ) by SERIES_1:def 1;
then A6: Q1[ ( 0 ) ] by A1;
(for i being (Element of ( NAT )) holds Q1[ i ]) from NAT_1:sch 1(A6,A4);
hence thesis;
end;
then ( ( Partial_Sums ( Re seq ) ) . m ) >= ( 0 );
then ( ( Re ( Partial_Sums seq ) ) . m ) >= ( 0 ) by COMSEQ_3:26;
then A7: ( Re ( ( Partial_Sums seq ) . m ) ) >= ( 0 ) by COMSEQ_3:def 5;
set z2 = ( seq . ( m + 1 ) );
set z1 = ( ( Partial_Sums seq ) . m );
A8: ( |. ( Partial_Sums seq ) .| . ( m + 1 ) ) = |. ( ( Partial_Sums seq ) . ( m + 1 ) ) .| by VALUED_1:18
.= |. ( ( ( Partial_Sums seq ) . m ) + ( seq . ( m + 1 ) ) ) .| by SERIES_1:def 1;
(for i being (Element of ( NAT )) holds ( ( Partial_Sums ( Im seq ) ) . i ) = ( 0 ))
proof
defpred Q2[ (Element of ( NAT )) ]
 means
( ( Partial_Sums ( Im seq ) ) . $1 ) = ( 0 );
let i being (Element of ( NAT ));
A9:now
let k being (Element of ( NAT ));
A10: ( ( Partial_Sums ( Im seq ) ) . ( k + 1 ) ) = ( ( ( Partial_Sums ( Im seq ) ) . k ) + ( ( Im seq ) . ( k + 1 ) ) ) by SERIES_1:def 1;
assume Q2[ k ];
hence Q2[ ( k + 1 ) ] by A1,A10;
end;
( ( Partial_Sums ( Im seq ) ) . ( 0 ) ) = ( ( Im seq ) . ( 0 ) ) by SERIES_1:def 1;
then A11: Q2[ ( 0 ) ] by A1;
(for i being (Element of ( NAT )) holds Q2[ i ]) from NAT_1:sch 1(A11,A9);
hence thesis;
end;
then ( ( Partial_Sums ( Im seq ) ) . m ) = ( 0 );
then ( ( Im ( Partial_Sums seq ) ) . m ) = ( 0 ) by COMSEQ_3:26;
then A12: ( Im ( ( Partial_Sums seq ) . m ) ) = ( 0 ) by COMSEQ_3:def 6;
( ( Im seq ) . ( m + 1 ) ) = ( 0 ) by A1;
then ( Im ( seq . ( m + 1 ) ) ) = ( 0 ) by COMSEQ_3:def 6;
then A13: ( ( Re z1 ) * ( Im z2 ) ) = ( ( Re z2 ) * ( Im z1 ) ) by A12;
( ( Re seq ) . ( m + 1 ) ) >= ( 0 ) by A1;
then ( Re ( seq . ( m + 1 ) ) ) >= ( 0 ) by COMSEQ_3:def 5;
then ( ( ( Re z1 ) * ( Re z2 ) ) + ( ( Im z1 ) * ( Im z2 ) ) ) >= ( 0 ) by A7,A12,XREAL_1:127;
then ( |. ( Partial_Sums seq ) .| . ( m + 1 ) ) = ( |. ( ( Partial_Sums seq ) . m ) .| + |. ( seq . ( m + 1 ) ) .| ) by A8,A13,CKB4:1
.= ( ( |. ( Partial_Sums seq ) .| . m ) + |. ( seq . ( m + 1 ) ) .| ) by VALUED_1:18
.= ( ( ( Partial_Sums |. seq .| ) . m ) + ( |. seq .| . ( m + 1 ) ) ) by A3,VALUED_1:18;
hence thesis by SERIES_1:def 1;
end;

end;
( |. ( Partial_Sums seq ) .| . ( 0 ) ) = |. ( ( Partial_Sums seq ) . ( 0 ) ) .| by VALUED_1:18
.= |. ( seq . ( 0 ) ) .| by SERIES_1:def 1
.= ( |. seq .| . ( 0 ) ) by VALUED_1:18;
then A14: P[ ( 0 ) ] by SERIES_1:def 1;
(for m being (Element of ( NAT )) holds P[ m ]) from NAT_1:sch 1(A14,A2);
hence thesis;
end;
