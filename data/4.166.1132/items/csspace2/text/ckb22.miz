environ
vocabularies NUMBERS,COMSEQ_1,ARYTM_3,FUNCT_1,SUBSET_1,COMPLEX1,ARYTM_1,RELAT_1,XCMPLX_0,SERIES_1,CARD_1,REAL_1,XXREAL_0,SQUARE_1,CFUNCT_1,CARD_3,ORDINAL2,SEQ_2,VALUED_1,CSSPACE,RSSPACE,SUPINF_2,RLVECT_1,ALGSTR_0,ZFMISC_1,STRUCT_0,REALSET1,PROB_2,BHSP_1,SEQ_1,PRE_TOPC,FUNCOP_1,NAT_1,BHSP_3,NORMSP_1,XXREAL_2,REWRITE1,CSSPACE2;
notations SUBSET_1,ZFMISC_1,XCMPLX_0,XXREAL_0,NUMBERS,COMPLEX1,REAL_1,NAT_1,STRUCT_0,ALGSTR_0,RELAT_1,DOMAIN_1,PARTFUN1,FUNCT_1,FUNCT_2,BINOP_1,FUNCOP_1,REALSET1,PRE_TOPC,SQUARE_1,VALUED_1,SEQ_1,SEQ_2,SERIES_1,COMSEQ_1,CFUNCT_1,COMSEQ_2,COMSEQ_3,CLVECT_1,CLVECT_2,CSSPACE;
definitions SQUARE_1,REALSET1,BINOP_1,STRUCT_0,ALGSTR_0,VALUED_1,CLVECT_2;
theorems RELAT_1,SQUARE_1,ABSVALUE,ZFMISC_1,SEQ_1,SEQ_2,SEQM_3,SERIES_1,INT_1,FUNCT_1,NAT_1,FUNCT_2,RLVECT_1,SEQ_4,RSSPACE,XCMPLX_1,CSSPACE,CLVECT_1,COMSEQ_1,COMSEQ_2,COMSEQ_3,COMPLEX1,CLVECT_2,RSSPACE2,FUNCOP_1,XREAL_1,XXREAL_0,VALUED_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
schemes NAT_1,SEQ_1,FUNCT_2,COMSEQ_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FUNCT_2,NUMBERS,XCMPLX_0,XXREAL_0,MEMBERED,COMSEQ_2,COMSEQ_3,REALSET1,STRUCT_0,CSSPACE,VALUED_1,VALUED_0;
constructors BINOP_1,FUNCOP_1,REAL_1,SQUARE_1,COMSEQ_2,COMSEQ_3,REALSET1,CLVECT_2,SEQ_1,VALUED_1,SERIES_1,SEQ_2,RELSET_1;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
theorem
Th2: (for x,y,z being (Point of ( Complex_l2_Space )) holds (for a being Complex holds ((((((( x .|. x ) = ( 0 ) iff x = ( 0. ( Complex_l2_Space ) )) & ( Re ( x .|. x ) ) >= ( 0 )) & ( Im ( x .|. x ) ) = ( 0 )) & ( x .|. y ) = ( ( y .|. x ) *' )) & ( ( x + y ) .|. z ) = ( ( x .|. z ) + ( y .|. z ) )) & ( ( a * x ) .|. y ) = ( a * ( x .|. y ) ))))
proof
let x being (Point of ( Complex_l2_Space ));
let y being (Point of ( Complex_l2_Space ));
let z being (Point of ( Complex_l2_Space ));
let a being Complex;
set seqx = ( seq_id x );
A1: ( x .|. x ) = ( (the scalar of ( Complex_l2_Space )) . (x,x) ) by CSSPACE:def 12
.= ( Sum ( seqx (#) ( seqx *' ) ) ) by CSSPACE:def 17,CSSPACE:def 18;
A2: ( seqx (#) ( seqx *' ) ) is  absolutely_summable by CKB20:1;
then ( Sum ( seqx (#) ( seqx *' ) ) ) = ( ( Sum ( Re ( seqx (#) ( seqx *' ) ) ) ) + ( ( Sum ( Im ( seqx (#) ( seqx *' ) ) ) ) * ( <i> ) ) ) by COMSEQ_3:53;
then A3: (( Re ( x .|. x ) ) = ( Sum ( Re ( seqx (#) ( seqx *' ) ) ) ) & ( Im ( x .|. x ) ) = ( Sum ( Im ( seqx (#) ( seqx *' ) ) ) )) by A1,COMPLEX1:12;
A4:now
set seq = ( seq_id x );
A5: ( x .|. x ) = ( (the scalar of ( Complex_l2_Space )) . (x,x) ) by CSSPACE:def 12
.= ( Sum ( ( seq_id x ) (#) ( ( seq_id x ) *' ) ) ) by CSSPACE:def 17,CSSPACE:def 18;
set rseq = ( Re ( seq (#) ( seq *' ) ) );
A6: (for n being (Element of ( NAT )) holds ( rseq . n ) = ( ( ( Re ( seq . n ) ) ^2 ) + ( ( Im ( seq . n ) ) ^2 ) ))
proof
let n being (Element of ( NAT ));
( rseq . n ) = ( ( ( ( Re seq ) (#) ( Re ( seq *' ) ) ) - ( ( Im seq ) (#) ( Im ( seq *' ) ) ) ) . n ) by COMSEQ_3:21
.= ( ( ( ( Re seq ) (#) ( Re ( seq *' ) ) ) . n ) + ( ( - ( ( Im seq ) (#) ( Im ( seq *' ) ) ) ) . n ) ) by SEQ_1:7
.= ( ( ( ( Re seq ) (#) ( Re ( seq *' ) ) ) . n ) + ( - ( ( ( Im seq ) (#) ( Im ( seq *' ) ) ) . n ) ) ) by SEQ_1:10
.= ( ( ( ( Re seq ) (#) ( Re ( seq *' ) ) ) . n ) - ( ( ( Im seq ) (#) ( Im ( seq *' ) ) ) . n ) )
.= ( ( ( ( Re seq ) . n ) * ( ( Re ( seq *' ) ) . n ) ) - ( ( ( Im seq ) (#) ( Im ( seq *' ) ) ) . n ) ) by SEQ_1:8
.= ( ( ( ( Re seq ) . n ) * ( ( Re ( seq *' ) ) . n ) ) - ( ( ( Im seq ) . n ) * ( ( Im ( seq *' ) ) . n ) ) ) by SEQ_1:8
.= ( ( ( Re ( seq . n ) ) * ( ( Re ( seq *' ) ) . n ) ) - ( ( ( Im seq ) . n ) * ( ( Im ( seq *' ) ) . n ) ) ) by COMSEQ_3:def 5
.= ( ( ( Re ( seq . n ) ) * ( Re ( ( seq *' ) . n ) ) ) - ( ( ( Im seq ) . n ) * ( ( Im ( seq *' ) ) . n ) ) ) by COMSEQ_3:def 5
.= ( ( ( Re ( seq . n ) ) * ( Re ( ( seq *' ) . n ) ) ) - ( ( Im ( seq . n ) ) * ( ( Im ( seq *' ) ) . n ) ) ) by COMSEQ_3:def 6
.= ( ( ( Re ( seq . n ) ) * ( Re ( ( seq *' ) . n ) ) ) - ( ( Im ( seq . n ) ) * ( Im ( ( seq *' ) . n ) ) ) ) by COMSEQ_3:def 6
.= ( ( ( Re ( seq . n ) ) * ( Re ( ( seq . n ) *' ) ) ) - ( ( Im ( seq . n ) ) * ( Im ( ( seq *' ) . n ) ) ) ) by COMSEQ_2:def 2
.= ( ( ( Re ( seq . n ) ) * ( Re ( ( seq . n ) *' ) ) ) - ( ( Im ( seq . n ) ) * ( Im ( ( seq . n ) *' ) ) ) ) by COMSEQ_2:def 2
.= ( ( ( Re ( seq . n ) ) * ( Re ( seq . n ) ) ) - ( ( Im ( seq . n ) ) * ( Im ( ( seq . n ) *' ) ) ) ) by COMPLEX1:27
.= ( ( ( Re ( seq . n ) ) * ( Re ( seq . n ) ) ) - ( ( Im ( seq . n ) ) * ( - ( Im ( seq . n ) ) ) ) ) by COMPLEX1:27
.= ( ( ( Re ( seq . n ) ) ^2 ) + ( ( Im ( seq . n ) ) * ( Im ( seq . n ) ) ) );
hence thesis;
end;
A7: (for n being (Element of ( NAT )) holds ( 0 ) <= ( rseq . n ))
proof
let n being (Element of ( NAT ));
A8: ( ( Im ( seq . n ) ) ^2 ) >= ( 0 ) by XREAL_1:63;
(( rseq . n ) = ( ( ( Re ( seq . n ) ) ^2 ) + ( ( Im ( seq . n ) ) ^2 ) ) & ( ( Re ( seq . n ) ) ^2 ) >= ( 0 )) by A6,XREAL_1:63;
then ( rseq . n ) >= ( ( 0 ) + ( 0 ) ) by A8,XREAL_1:7;
hence thesis;
end;
A9: ( ( seq_id x ) (#) ( ( seq_id x ) *' ) ) is  absolutely_summable by CKB20:1;
assume ( x .|. x ) = ( 0 );
then ( ( Sum ( Re ( ( seq_id x ) (#) ( ( seq_id x ) *' ) ) ) ) + ( ( Sum ( Im ( ( seq_id x ) (#) ( ( seq_id x ) *' ) ) ) ) * ( <i> ) ) ) = ( 0 ) by A5,A9,COMSEQ_3:53;
then A10: ( Sum ( Re ( ( seq_id x ) (#) ( ( seq_id x ) *' ) ) ) ) = ( 0 ) by COMPLEX1:4,COMPLEX1:12;
A11: (for n being (Element of ( NAT )) holds ( ( seq_id x ) . n ) = ( 0 ))
proof
let n being (Element of ( NAT ));
( rseq . n ) = ( ( ( Re ( seq . n ) ) ^2 ) + ( ( Im ( seq . n ) ) ^2 ) ) by A6;
then ( ( ( Re ( seq . n ) ) ^2 ) + ( ( Im ( seq . n ) ) ^2 ) ) = ( 0 ) by A9,A10,A7,RSSPACE:17;
hence thesis by COMPLEX1:5;
end;
x is (Element of ( the_set_of_ComplexSequences )) by CSSPACE:def 11,CSSPACE:def 18;
hence x = ( 0. ( Complex_l2_Space ) ) by A11,CKB11:1,CSSPACE:def 6;
end;
A12:now
assume A13: x = ( 0. ( Complex_l2_Space ) );
A14: (for n being (Element of ( NAT )) holds ( ( ( seq_id x ) (#) ( ( seq_id x ) *' ) ) . n ) = ( 0 ))
proof
let n being (Element of ( NAT ));
thus ( ( ( seq_id x ) (#) ( ( seq_id x ) *' ) ) . n ) = ( ( ( seq_id x ) . n ) * ( ( ( seq_id x ) *' ) . n ) ) by VALUED_1:5
.= ( ( 0c ) * ( ( ( seq_id x ) *' ) . n ) ) by A13,CKB11:1,CSSPACE:def 6
.= ( 0 );
end;
thus ( x .|. x ) = ( (the scalar of ( Complex_l2_Space )) . (x,x) ) by CSSPACE:def 12
.= ( Sum ( ( seq_id x ) (#) ( ( seq_id x ) *' ) ) ) by CSSPACE:def 17,CSSPACE:def 18
.= ( 0 ) by A14,CSSPACE:80;
end;
set seqy = ( seq_id y );
A15: (for n being (Element of ( NAT )) holds ( 0 ) <= ( ( Re ( seqx (#) ( seqx *' ) ) ) . n ))
proof
let n being (Element of ( NAT ));
A16: (( ( Re ( seqx . n ) ) ^2 ) >= ( 0 ) & ( ( Im ( seqx . n ) ) ^2 ) >= ( 0 )) by XREAL_1:63;
( ( Re ( seqx (#) ( seqx *' ) ) ) . n ) = ( Re ( ( seqx (#) ( seqx *' ) ) . n ) ) by COMSEQ_3:def 5
.= ( Re ( ( seqx . n ) * ( ( seqx *' ) . n ) ) ) by VALUED_1:5
.= ( Re ( ( seqx . n ) * ( ( seqx . n ) *' ) ) ) by COMSEQ_2:def 2
.= ( ( ( Re ( seqx . n ) ) ^2 ) + ( ( Im ( seqx . n ) ) ^2 ) ) by COMPLEX1:40;
then ( ( Re ( seqx (#) ( seqx *' ) ) ) . n ) >= ( ( 0 ) + ( 0 ) ) by A16,XREAL_1:7;
hence thesis;
end;
( |. seqx .| (#) |. seqy .| ) is  summable by CKB17:1;
then ( |. ( seqx *' ) .| (#) |. seqy .| ) is  summable by CKB19:1;
then |. ( ( seqx *' ) (#) seqy ) .| is  summable by COMSEQ_1:46;
then A17: ( ( seqx *' ) (#) seqy ) is  absolutely_summable by COMSEQ_3:def 9;
set seqz = ( seq_id z );
A18: (for n being (Element of ( NAT )) holds ( ( Im ( seqx (#) ( seqx *' ) ) ) . n ) = ( 0 ))
proof
let n being (Element of ( NAT ));
( ( Im ( seqx (#) ( seqx *' ) ) ) . n ) = ( Im ( ( seqx (#) ( seqx *' ) ) . n ) ) by COMSEQ_3:def 6
.= ( Im ( ( seqx . n ) * ( ( seqx *' ) . n ) ) ) by VALUED_1:5
.= ( Im ( ( seqx . n ) * ( ( seqx . n ) *' ) ) ) by COMSEQ_2:def 2;
hence thesis by COMPLEX1:40;
end;
( |. seqx .| (#) |. seqz .| ) is  summable by CKB17:1;
then ( |. seqx .| (#) |. ( seqz *' ) .| ) is  summable by CKB19:1;
then |. ( seqx (#) ( seqz *' ) ) .| is  summable by COMSEQ_1:46;
then A19: ( seqx (#) ( seqz *' ) ) is  absolutely_summable by COMSEQ_3:def 9;
( |. seqy .| (#) |. seqz .| ) is  summable by CKB17:1;
then ( |. seqy .| (#) |. ( seqz *' ) .| ) is  summable by CKB19:1;
then |. ( seqy (#) ( seqz *' ) ) .| is  summable by COMSEQ_1:46;
then A20: ( seqy (#) ( seqz *' ) ) is  absolutely_summable by COMSEQ_3:def 9;
A21: ( ( x + y ) .|. z ) = ( (the scalar of ( Complex_l2_Space )) . (( x + y ),z) ) by CSSPACE:def 12
.= ( Sum ( ( seq_id ( x + y ) ) (#) ( seqz *' ) ) ) by CSSPACE:def 17,CSSPACE:def 18
.= ( Sum ( ( seq_id ( seqx + seqy ) ) (#) ( seqz *' ) ) ) by CKB13:1
.= ( Sum ( ( seqx + seqy ) (#) ( seqz *' ) ) ) by CSSPACE:1
.= ( Sum ( ( seqx (#) ( seqz *' ) ) + ( seqy (#) ( seqz *' ) ) ) ) by COMSEQ_1:10
.= ( ( Sum ( seqx (#) ( seqz *' ) ) ) + ( Sum ( seqy (#) ( seqz *' ) ) ) ) by A19,A20,COMSEQ_3:54
.= ( ( (the scalar of ( Complex_l2_Space )) . (x,z) ) + ( Sum ( seqy (#) ( seqz *' ) ) ) ) by CSSPACE:def 17,CSSPACE:def 18
.= ( ( (the scalar of ( Complex_l2_Space )) . (x,z) ) + ( (the scalar of ( Complex_l2_Space )) . (y,z) ) ) by CSSPACE:def 17,CSSPACE:def 18
.= ( ( x .|. z ) + ( (the scalar of ( Complex_l2_Space )) . (y,z) ) ) by CSSPACE:def 12
.= ( ( x .|. z ) + ( y .|. z ) ) by CSSPACE:def 12;
( |. seqx .| (#) |. seqy .| ) is  summable by CKB17:1;
then ( |. seqx .| (#) |. ( seqy *' ) .| ) is  summable by CKB19:1;
then |. ( seqx (#) ( seqy *' ) ) .| is  summable by COMSEQ_1:46;
then A22: ( seqx (#) ( seqy *' ) ) is  absolutely_summable by COMSEQ_3:def 9;
A23: ( ( a * x ) .|. y ) = ( (the scalar of ( Complex_l2_Space )) . (( a * x ),y) ) by CSSPACE:def 12
.= ( Sum ( ( seq_id ( a * x ) ) (#) ( seqy *' ) ) ) by CSSPACE:def 17,CSSPACE:def 18
.= ( Sum ( ( seq_id ( a (#) seqx ) ) (#) ( seqy *' ) ) ) by CKB14:1
.= ( Sum ( ( a (#) seqx ) (#) ( seqy *' ) ) ) by CSSPACE:1
.= ( Sum ( a (#) ( seqx (#) ( seqy *' ) ) ) ) by COMSEQ_1:12
.= ( a * ( Sum ( seqx (#) ( seqy *' ) ) ) ) by A22,COMSEQ_3:56
.= ( a * ( (the scalar of ( Complex_l2_Space )) . (x,y) ) ) by CSSPACE:def 17,CSSPACE:def 18
.= ( a * ( x .|. y ) ) by CSSPACE:def 12;
( x .|. y ) = ( (the scalar of ( Complex_l2_Space )) . (x,y) ) by CSSPACE:def 12
.= ( Sum ( seqx (#) ( seqy *' ) ) ) by CSSPACE:def 17,CSSPACE:def 18
.= ( Sum ( ( ( seqx *' ) *' ) (#) ( seqy *' ) ) ) by CKB1:1
.= ( Sum ( ( ( seqx *' ) (#) seqy ) *' ) ) by COMSEQ_2:5
.= ( ( Sum ( ( seqx *' ) (#) seqy ) ) *' ) by A17,CKB6:1
.= ( ( (the scalar of ( Complex_l2_Space )) . (y,x) ) *' ) by CSSPACE:def 17,CSSPACE:def 18
.= ( ( y .|. x ) *' ) by CSSPACE:def 12;
hence thesis by A4,A12,A2,A3,A15,A18,A21,A23,RSSPACE:16,SERIES_1:18;
end;
