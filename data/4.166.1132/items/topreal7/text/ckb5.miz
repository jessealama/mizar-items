environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_1,XBOOLE_0,METRIC_1,REAL_1,XXREAL_0,ARYTM_3,RELAT_1,TARSKI,ORDINAL4,NAT_1,ARYTM_1,FUNCT_1,FINSEQ_2,RVSUM_1,COMPLEX1,EUCLID,SQUARE_1,STRUCT_0,ZFMISC_1,PRE_TOPC,MCART_1,CARD_1,RELAT_2,PCOMPS_1,SETFAM_1,BORSUK_1,RCOMP_1,T_0TOPSP,CARD_3,ORDINAL2,TOPREAL7,TOPS_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCT_1,RELSET_1,FUNCT_2,COMPLEX1,BINOP_1,MCART_1,NUMBERS,XXREAL_0,DOMAIN_1,REAL_1,SQUARE_1,NAT_1,FINSEQ_1,SEQ_1,RVSUM_1,FINSEQOP,STRUCT_0,PRE_TOPC,TOPS_2,PCOMPS_1,BORSUK_1,METRIC_1,EUCLID,FINSEQ_2,T_0TOPSP;
definitions TARSKI,FUNCT_1,STRUCT_0,METRIC_1,PRE_TOPC,TOPS_2,T_0TOPSP,XBOOLE_0,EUCLID,BINOP_1;
theorems BINOP_1,BORSUK_1,EUCLID,FINSEQ_1,FINSEQ_2,FINSEQ_3,FUNCT_1,FUNCT_2,INT_1,MCART_1,METRIC_1,NAT_1,PCOMPS_1,PRE_TOPC,RVSUM_1,SQUARE_1,TARSKI,TBSP_1,TOPMETR,TOPREAL3,TOPREAL6,TOPS_2,ZFMISC_1,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,VALUED_1,CARD_1,CKB1,CKB2,CKB3,CKB4;
schemes BINOP_1;
registrations SUBSET_1,RELSET_1,NUMBERS,XREAL_0,MEMBERED,STRUCT_0,METRIC_1,PCOMPS_1,EUCLID,INT_1,VALUED_0,FINSEQ_2,RELAT_1,CARD_1,FINSEQ_1;
constructors SETFAM_1,REAL_1,SQUARE_1,NAT_1,COMPLEX1,FINSEQOP,TOPS_2,BORSUK_1,T_0TOPSP,GOBOARD1,SEQ_1,RVSUM_1,BINOP_2,PCOMPS_1;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve i for (Element of ( NAT ));
reserve f for (FinSequence of ( REAL ));
reserve g for (FinSequence of ( REAL ));
reserve h for (FinSequence of ( REAL ));
reserve k for (FinSequence of ( REAL ));
theorem
Th6: (for f,g,h,k being FinSequence holds (((( f ^ g ) = ( h ^ k ) & ( len f ) = ( len h )) & ( len g ) = ( len k )) implies (f = h & g = k)))
proof
let f being FinSequence;
let g being FinSequence;
let h being FinSequence;
let k being FinSequence;
assume that
A1: ( f ^ g ) = ( h ^ k )
and
A2: ( len f ) = ( len h )
and
A3: ( len g ) = ( len k );
A4: (for i being Nat holds ((1 <= i & i <= ( len f )) implies ( f . i ) = ( h . i )))
proof
let i being Nat;
assume A5: (1 <= i & i <= ( len f ));
then A6: i in ( dom h ) by A2,FINSEQ_3:25;
i in ( dom f ) by A5,FINSEQ_3:25;
hence ( f . i ) = ( ( f ^ g ) . i ) by FINSEQ_1:def 7
.= ( h . i ) by A1,A6,FINSEQ_1:def 7;
end;
(for i being Nat holds ((1 <= i & i <= ( len g )) implies ( g . i ) = ( k . i )))
proof
let i being Nat;
assume A7: (1 <= i & i <= ( len g ));
then A8: i in ( dom k ) by A3,FINSEQ_3:25;
i in ( dom g ) by A7,FINSEQ_3:25;
hence ( g . i ) = ( ( f ^ g ) . ( ( len f ) + i ) ) by FINSEQ_1:def 7
.= ( k . i ) by A1,A2,A8,FINSEQ_1:def 7;
end;
hence thesis by A2,A3,A4,FINSEQ_1:14;
end;
