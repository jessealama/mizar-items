environ
vocabularies NUMBERS,SCMPDS_2,SUBSET_1,FINSEQ_1,FSM_1,XXREAL_0,FUNCT_1,SCMP_GCD,ARYTM_3,GRAPH_2,NAT_1,RELAT_1,CLASSES1,AMI_2,AMI_1,SCMFSA6B,SCMPDS_4,UNIALG_2,SCMFSA7B,TURING_1,SCMFSA_7,INT_1,CARD_1,SCMPDS_7,AMI_3,ARYTM_1,VALUED_1,TARSKI,FUNCT_4,CIRCUIT2,GRAPHSP,MSUALG_1,XBOOLE_0,SCMISORT,SCMFSA_9,SCMFSA8B,COMPLEX1,SCPISORT,ORDINAL1,SCMNORM,SCMFSA6C,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FUNCT_1,PARTFUN1,VALUED_1,XCMPLX_0,FUNCT_4,INT_1,NAT_1,COMPLEX1,MEMSTR_0,EXTPRO_1,COMPOS_1,AMI_2,SCMPDS_2,SCMPDS_4,SCMPDS_5,SCMPDS_6,SCMP_GCD,DOMAIN_1,FINSEQ_1,SCMPDS_7,SCMPDS_8,GRAPH_2,CLASSES1,XXREAL_0,CKB1,CKB21;
definitions SCMPDS_2,SCMP_GCD,AMI_3,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB1,CKB21;
theorems AMI_3,NAT_1,TARSKI,FUNCT_4,INT_1,SCMPDS_2,GRFUNC_1,SCMPDS_4,SCMPDS_5,SCMPDS_6,ENUMSET1,SCMP_GCD,SCMPDS_7,SCMPDS_8,ABSVALUE,FINSEQ_1,FINSEQ_2,RFINSEQ,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,GRAPH_2,ZFMISC_1,FINSEQ_3,CLASSES1,AFINSQ_1,COMPOS_1,EXTPRO_1,PBOOLE,MEMSTR_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23;
schemes NAT_1,FINSEQ_1,CKB15,CKB16,CKB17;
registrations SETFAM_1,RELAT_1,FUNCT_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,SCMPDS_2,SCMPDS_4,SCMPDS_5,SCMPDS_6,SCMPDS_7,SCMPDS_8,XBOOLE_0,VALUED_0,ORDINAL1,CARD_1,VALUED_1,GRFUNC_1,COMPOS_1,AFINSQ_1,EXTPRO_1,FUNCT_4,MEMSTR_0,RELSET_1;
constructors DOMAIN_1,XXREAL_0,REAL_1,INT_2,SCM_1,SCMPDS_4,SCMPDS_5,SCMPDS_6,SCMP_GCD,SCMPDS_7,SCMPDS_8,CLASSES1,PRE_POLY,GRAPH_2,AMI_2,MEMSTR_0,RELSET_1,CKB1,CKB21;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve x for Int_position;
reserve n for (Element of ( NAT ));
reserve P for (Instruction-Sequence of ( SCMPDS ));
reserve Q for (Instruction-Sequence of ( SCMPDS ));
set k1 = ( (( GBP ),5) := (( intpos 4 ),( - 1 )) );
set k2 = ( SubFrom (( GBP ),5,( intpos 4 ),( 0 )) );
set k3 = ( (( GBP ),5) := (( intpos 4 ),( - 1 )) );
set k4 = ( (( intpos 4 ),( - 1 )) := (( intpos 4 ),( 0 )) );
set k5 = ( (( intpos 4 ),( 0 )) := (( GBP ),5) );
set k6 = ( AddTo (( GBP ),4,( - 1 )) );
set k7 = ( AddTo (( GBP ),6,( - 1 )) );
set FA = ( Load ( (( GBP ),6) := ( 0 ) ) );
set TR = ( ( ( ( ( (( GBP ),5) := (( intpos 4 ),( - 1 )) ) ';' ( (( intpos 4 ),( - 1 )) := (( intpos 4 ),( 0 )) ) ) ';' ( (( intpos 4 ),( 0 )) := (( GBP ),5) ) ) ';' ( AddTo (( GBP ),4,( - 1 )) ) ) ';' ( AddTo (( GBP ),6,( - 1 )) ) );
set IF = ( if>0 (( GBP ),5,TR,FA) );
set B1 = ( ( ( (( GBP ),5) := (( intpos 4 ),( - 1 )) ) ';' ( SubFrom (( GBP ),5,( intpos 4 ),( 0 )) ) ) ';' ( if>0 (( GBP ),5,TR,FA) ) );
set WH = ( while>0 (( GBP ),6,B1) );
set a1 = ( intpos 1 );
set a2 = ( intpos 2 );
set a3 = ( intpos 3 );
set a4 = ( intpos 4 );
set a5 = ( intpos 5 );
set a6 = ( intpos 6 );
Lm7: (for s being ( 0 ) -started (State of ( SCMPDS )) holds (((( s . a4 ) >= ( 7 + ( s . a6 ) ) & ( s . ( GBP ) ) = ( 0 )) & ( s . a6 ) > ( 0 )) implies (( ( IExec (B1,P,s) ) . ( GBP ) ) = ( 0 ) & ( ( IExec (B1,P,s) ) . a1 ) = ( s . a1 ))))
proof
let s being ( 0 ) -started (State of ( SCMPDS ));
set a = ( GBP );
set x = ( DataLoc (( s . a4 ),( - 1 )) );
set y = ( DataLoc (( s . a4 ),( 0 )) );
assume that
A1: ( s . a4 ) >= ( 7 + ( s . a6 ) )
and
A2: ( s . a ) = ( 0 )
and
A3: ( s . a6 ) > ( 0 );
A4: ( 7 + ( s . a6 ) ) > ( 7 + ( 0 ) ) by A3,XREAL_1:6;
set t0 = s;
set t1 = ( Exec (k1,t0) );
set t2 = ( IExec (( k1 ';' k2 ),P,s) );
set Q2 = P;
A6: ( DataLoc (( t0 . a ),5) ) = ( intpos ( ( 0 ) + 5 ) ) by A2,SCMP_GCD:1;
then A7: ( t1 . a ) = ( 0 ) by A2,AMI_3:10,SCMPDS_2:47;
then A8: ( DataLoc (( t1 . a ),5) ) = ( intpos ( ( 0 ) + 5 ) ) by SCMP_GCD:1;
A9: ( t1 . a4 ) = ( s . a4 ) by A6,AMI_3:10,SCMPDS_2:47;
A10: ( s . a4 ) >= ( 1 + ( 6 + ( s . a6 ) ) ) by A1;
then A11: ( ( s . a4 ) - 1 ) >= ( 6 + ( s . a6 ) ) by XREAL_1:19;
set Fi = ( (a,6) := ( 0 ) );
set t02 = ( Initialize t2 );
set Q02 = Q2;
set t3 = ( IExec (( ( ( k3 ';' k4 ) ';' k5 ) ';' k6 ),Q2,( Initialize t2 )) );
set t4 = ( IExec (( ( k3 ';' k4 ) ';' k5 ),Q2,( Initialize t2 )) );
set t5 = ( IExec (( k3 ';' k4 ),Q2,( Initialize t2 )) );
set t6 = ( Exec (k3,t02) );
( t2 . a ) = ( ( Exec (k2,t1) ) . a ) by SCMPDS_5:42
.= ( 0 ) by A7,A8,AMI_3:10,SCMPDS_2:50;
then A15: ( t02 . a ) = ( 0 ) by SCMPDS_5:15;
then A16: ( DataLoc (( t02 . a ),5) ) = ( intpos ( ( 0 ) + 5 ) ) by SCMP_GCD:1;
then A17: ( t6 . a ) = ( 0 ) by A15,AMI_3:10,SCMPDS_2:47;
( t2 . a4 ) = ( ( Exec (k2,t1) ) . a4 ) by SCMPDS_5:42
.= ( s . a4 ) by A9,A8,AMI_3:10,SCMPDS_2:50;
then ( t02 . a4 ) = ( s . a4 ) by SCMPDS_5:15;
then A18: ( t6 . a4 ) = ( s . a4 ) by A16,AMI_3:10,SCMPDS_2:47;
A19: ( 6 + ( s . a6 ) ) > ( 6 + ( 0 ) ) by A3,XREAL_1:6;
then ( 0 ) <> ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by A11,A18,ABSVALUE:def 1;
then A20: a <> ( DataLoc (( t6 . a4 ),( - 1 )) ) by ZFMISC_1:27;
( ( s . a4 ) - 1 ) > ( 0 ) by A3,A10,XREAL_1:19;
then A21: ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) = ( ( s . a4 ) - 1 ) by A18,ABSVALUE:def 1;
then 4 <> ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by A11,A19,XXREAL_0:2;
then A22: a4 <> ( DataLoc (( t6 . a4 ),( - 1 )) ) by ZFMISC_1:27;
A24: ( t5 . a4 ) = ( ( Exec (k4,t6) ) . a4 ) by SCMPDS_5:42
.= ( s . a4 ) by A18,A22,SCMPDS_2:47;
then ( 0 ) <> ( abs ( ( t5 . a4 ) + ( 0 ) ) ) by A1,A4,ABSVALUE:def 1;
then A25: a <> ( DataLoc (( t5 . a4 ),( 0 )) ) by ZFMISC_1:27;
A26: ( t5 . a ) = ( ( Exec (k4,t6) ) . a ) by SCMPDS_5:42
.= ( 0 ) by A17,A20,SCMPDS_2:47;
A27: ( t4 . a ) = ( ( Exec (k5,t5) ) . a ) by SCMPDS_5:41
.= ( 0 ) by A26,A25,SCMPDS_2:47;
then A28: a <> ( DataLoc (( t4 . a ),4) ) by AMI_3:10,SCMP_GCD:1;
A29: ( t1 . a1 ) = ( s . a1 ) by A6,AMI_3:10,SCMPDS_2:47;
( t2 . a1 ) = ( ( Exec (k2,t1) ) . a1 ) by SCMPDS_5:42
.= ( s . a1 ) by A29,A8,AMI_3:10,SCMPDS_2:50;
then A30: ( t02 . a1 ) = ( s . a1 ) by SCMPDS_5:15;
then A31: ( t6 . a1 ) = ( s . a1 ) by A16,AMI_3:10,SCMPDS_2:47;
A32: ( t3 . a ) = ( ( Exec (k6,t4) ) . a ) by SCMPDS_5:41
.= ( 0 ) by A27,A28,SCMPDS_2:48;
then A33: ( DataLoc (( t3 . a ),6) ) = ( intpos ( ( 0 ) + 6 ) ) by SCMP_GCD:1;
A34: ( DataLoc (( t02 . a ),6) ) = ( intpos ( ( 0 ) + 6 ) ) by A15,SCMP_GCD:1;
now
per cases ;
suppose ( ( Initialize t2 ) . ( DataLoc (( ( Initialize t2 ) . a ),5) ) ) <= ( 0 );

hence ( ( IExec (IF,Q2,( Initialize t2 )) ) . a ) = ( ( IExec (FA,Q2,( Initialize t2 )) ) . a ) by SCMPDS_6:74
.= ( ( Exec (Fi,t02) ) . a ) by SCMPDS_5:40
.= ( 0 ) by A15,A34,AMI_3:10,SCMPDS_2:46;
end;
suppose ( ( Initialize t2 ) . ( DataLoc (( ( Initialize t2 ) . a ),5) ) ) > ( 0 );

hence ( ( IExec (IF,Q2,( Initialize t2 )) ) . a ) = ( ( IExec (TR,Q2,( Initialize t2 )) ) . a ) by SCMPDS_6:73
.= ( ( Exec (k7,t3) ) . a ) by SCMPDS_5:41
.= ( 0 ) by A32,A33,AMI_3:10,SCMPDS_2:48;
end;
end;
hence ( ( IExec (B1,P,s) ) . a ) = ( 0 ) by SCMPDS_5:35;
A36: a1 <> ( DataLoc (( t4 . a ),4) ) by A27,AMI_3:10,SCMP_GCD:1;
( abs ( ( t5 . a4 ) + ( 0 ) ) ) = ( s . a4 ) by A1,A4,A24,ABSVALUE:def 1;
then 1 <> ( abs ( ( t5 . a4 ) + ( 0 ) ) ) by A1,A4,XXREAL_0:2;
then A37: a1 <> ( DataLoc (( t5 . a4 ),( 0 )) ) by ZFMISC_1:27;
1 <> ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by A11,A19,A21,XXREAL_0:2;
then A38: a1 <> ( DataLoc (( t6 . a4 ),( - 1 )) ) by ZFMISC_1:27;
A39: ( t5 . a1 ) = ( ( Exec (k4,t6) ) . a1 ) by SCMPDS_5:42
.= ( s . a1 ) by A31,A38,SCMPDS_2:47;
A40: ( t4 . a1 ) = ( ( Exec (k5,t5) ) . a1 ) by SCMPDS_5:41
.= ( s . a1 ) by A39,A37,SCMPDS_2:47;
A41: ( t3 . a1 ) = ( ( Exec (k6,t4) ) . a1 ) by SCMPDS_5:41
.= ( s . a1 ) by A40,A36,SCMPDS_2:48;
now
per cases ;
suppose ( ( Initialize t2 ) . ( DataLoc (( ( Initialize t2 ) . a ),5) ) ) <= ( 0 );

hence ( ( IExec (IF,Q2,( Initialize t2 )) ) . a1 ) = ( ( IExec (FA,Q2,( Initialize t2 )) ) . a1 ) by SCMPDS_6:74
.= ( ( Exec (Fi,t02) ) . a1 ) by SCMPDS_5:40
.= ( s . a1 ) by A30,A34,AMI_3:10,SCMPDS_2:46;
end;
suppose ( ( Initialize t2 ) . ( DataLoc (( ( Initialize t2 ) . a ),5) ) ) > ( 0 );

hence ( ( IExec (IF,Q2,( Initialize t2 )) ) . a1 ) = ( ( IExec (TR,Q2,( Initialize t2 )) ) . a1 ) by SCMPDS_6:73
.= ( ( Exec (k7,t3) ) . a1 ) by SCMPDS_5:41
.= ( s . a1 ) by A41,A33,AMI_3:10,SCMPDS_2:48;
end;
end;
hence thesis by SCMPDS_5:35;
end;
Lm8: (for s being ( 0 ) -started (State of ( SCMPDS )) holds (((( s . a4 ) >= ( 7 + ( s . a6 ) ) & ( s . ( GBP ) ) = ( 0 )) & ( s . a6 ) > ( 0 )) implies ((((((( ( IExec (B1,P,s) ) . a2 ) = ( s . a2 ) & ( ( IExec (B1,P,s) ) . a3 ) = ( s . a3 )) & ( ( IExec (B1,P,s) ) . a6 ) < ( s . a6 )) & ( ( IExec (B1,P,s) ) . a4 ) >= ( 7 + ( ( IExec (B1,P,s) ) . a6 ) )) & (for i being Nat holds (((i >= 7 & i <> ( ( s . a4 ) - 1 )) & i <> ( s . a4 )) implies ( ( IExec (B1,P,s) ) . ( intpos i ) ) = ( s . ( intpos i ) )))) & (( s . ( DataLoc (( s . a4 ),( - 1 )) ) ) > ( s . ( DataLoc (( s . a4 ),( 0 )) ) ) implies (((( ( IExec (B1,P,s) ) . ( DataLoc (( s . a4 ),( - 1 )) ) ) = ( s . ( DataLoc (( s . a4 ),( 0 )) ) ) & ( ( IExec (B1,P,s) ) . ( DataLoc (( s . a4 ),( 0 )) ) ) = ( s . ( DataLoc (( s . a4 ),( - 1 )) ) )) & ( ( IExec (B1,P,s) ) . a6 ) = ( ( s . a6 ) - 1 )) & ( ( IExec (B1,P,s) ) . a4 ) = ( ( s . a4 ) - 1 )))) & (( s . ( DataLoc (( s . a4 ),( - 1 )) ) ) <= ( s . ( DataLoc (( s . a4 ),( 0 )) ) ) implies ((( ( IExec (B1,P,s) ) . ( DataLoc (( s . a4 ),( - 1 )) ) ) = ( s . ( DataLoc (( s . a4 ),( - 1 )) ) ) & ( ( IExec (B1,P,s) ) . ( DataLoc (( s . a4 ),( 0 )) ) ) = ( s . ( DataLoc (( s . a4 ),( 0 )) ) )) & ( ( IExec (B1,P,s) ) . a6 ) = ( 0 ))))))
proof
let s being ( 0 ) -started (State of ( SCMPDS ));
set a = ( GBP );
set x = ( DataLoc (( s . a4 ),( - 1 )) );
set y = ( DataLoc (( s . a4 ),( 0 )) );
assume that
A1: ( s . a4 ) >= ( 7 + ( s . a6 ) )
and
A2: ( s . a ) = ( 0 )
and
A3: ( s . a6 ) > ( 0 );
set t0 = s;
set t1 = ( Exec (k1,t0) );
set t2 = ( IExec (( k1 ';' k2 ),P,s) );
set Q2 = P;
A4: ( 7 + ( s . a6 ) ) > ( 7 + ( 0 ) ) by A3,XREAL_1:6;
then A5: ( abs ( s . a4 ) ) = ( s . a4 ) by A1,ABSVALUE:def 1;
set Fi = ( (a,6) := ( 0 ) );
set t02 = ( Initialize t2 );
set Q02 = Q2;
set t3 = ( IExec (( ( ( k3 ';' k4 ) ';' k5 ) ';' k6 ),Q2,( Initialize t2 )) );
set t4 = ( IExec (( ( k3 ';' k4 ) ';' k5 ),Q2,( Initialize t2 )) );
set t5 = ( IExec (( k3 ';' k4 ),Q2,( Initialize t2 )) );
set t6 = ( Exec (k3,t02) );
A12: ( DataLoc (( t0 . a ),5) ) = ( intpos ( ( 0 ) + 5 ) ) by A2,SCMP_GCD:1;
then A13: ( t1 . a ) = ( 0 ) by A2,AMI_3:10,SCMPDS_2:47;
then A14: ( DataLoc (( t1 . a ),5) ) = ( intpos ( ( 0 ) + 5 ) ) by SCMP_GCD:1;
then A15: ( abs ( ( t1 . a ) + 5 ) ) = ( ( 0 ) + 5 ) by ZFMISC_1:27;
then ( abs ( ( s . a4 ) + ( 0 ) ) ) <> ( abs ( ( t1 . a ) + 5 ) ) by A1,A4,A5,XXREAL_0:2;
then A16: y <> ( DataLoc (( t1 . a ),5) ) by ZFMISC_1:27;
A17: ( abs ( ( t0 . a ) + 5 ) ) = ( ( 0 ) + 5 ) by A12,ZFMISC_1:27;
then ( abs ( ( s . a4 ) + ( 0 ) ) ) <> ( abs ( ( t0 . a ) + 5 ) ) by A1,A4,A5,XXREAL_0:2;
then (( t0 . y ) = ( s . y ) & y <> ( DataLoc (( t0 . a ),5) )) by ZFMISC_1:27;
then A18: ( t1 . y ) = ( s . y ) by SCMPDS_2:47;
A20: ( t1 . a5 ) = ( s . x ) by A12,SCMPDS_2:47;
A21: ( t1 . a4 ) = ( s . a4 ) by A12,AMI_3:10,SCMPDS_2:47;
( t2 . y ) = ( ( Exec (k2,t1) ) . y ) by SCMPDS_5:42
.= ( s . y ) by A18,A16,SCMPDS_2:50;
then A22: ( t02 . y ) = ( s . y ) by SCMPDS_5:15;
A23: ( t02 . a ) = ( t2 . a ) by SCMPDS_5:15
.= ( ( Exec (k2,t1) ) . a ) by SCMPDS_5:42
.= ( 0 ) by A13,A14,AMI_3:10,SCMPDS_2:50;
A25: ( DataLoc (( t02 . a ),5) ) = ( intpos ( ( 0 ) + 5 ) ) by A23,SCMP_GCD:1;
then A26: ( t6 . a ) = ( 0 ) by A23,AMI_3:10,SCMPDS_2:47;
( abs ( ( t02 . a ) + 5 ) ) = ( ( 0 ) + 5 ) by A25,ZFMISC_1:27;
then ( abs ( ( s . a4 ) + ( 0 ) ) ) <> ( abs ( ( t02 . a ) + 5 ) ) by A1,A4,A5,XXREAL_0:2;
then y <> ( DataLoc (( t02 . a ),5) ) by ZFMISC_1:27;
then A27: ( t6 . y ) = ( s . y ) by A22,SCMPDS_2:47;
( t2 . a4 ) = ( ( Exec (k2,t1) ) . a4 ) by SCMPDS_5:42
.= ( s . a4 ) by A21,A14,AMI_3:10,SCMPDS_2:50;
then A28: ( t02 . a4 ) = ( s . a4 ) by SCMPDS_5:15;
then A29: ( t6 . a4 ) = ( s . a4 ) by A25,AMI_3:10,SCMPDS_2:47;
then A30: ( t5 . x ) = ( ( Exec (k4,t6) ) . ( DataLoc (( t6 . a4 ),( - 1 )) ) ) by SCMPDS_5:42
.= ( s . y ) by A29,A27,SCMPDS_2:47;
A31: ( t1 . a3 ) = ( s . a3 ) by A12,AMI_3:10,SCMPDS_2:47;
( t2 . a3 ) = ( ( Exec (k2,t1) ) . a3 ) by SCMPDS_5:42
.= ( s . a3 ) by A31,A14,AMI_3:10,SCMPDS_2:50;
then A32: ( t02 . a3 ) = ( s . a3 ) by SCMPDS_5:15;
then A33: ( t6 . a3 ) = ( s . a3 ) by A25,AMI_3:10,SCMPDS_2:47;
A34: ( s . a4 ) >= ( 1 + ( 6 + ( s . a6 ) ) ) by A1;
then A35: ( ( s . a4 ) - 1 ) >= ( 6 + ( s . a6 ) ) by XREAL_1:19;
A36: ( t1 . a2 ) = ( s . a2 ) by A12,AMI_3:10,SCMPDS_2:47;
( t2 . a2 ) = ( ( Exec (k2,t1) ) . a2 ) by SCMPDS_5:42
.= ( s . a2 ) by A36,A14,AMI_3:10,SCMPDS_2:50;
then A37: ( t02 . a2 ) = ( s . a2 ) by SCMPDS_5:15;
then A38: ( t6 . a2 ) = ( s . a2 ) by A25,AMI_3:10,SCMPDS_2:47;
A39: ( t1 . a6 ) = ( s . a6 ) by A12,AMI_3:10,SCMPDS_2:47;
( t2 . a6 ) = ( ( Exec (k2,t1) ) . a6 ) by SCMPDS_5:42
.= ( s . a6 ) by A39,A14,AMI_3:10,SCMPDS_2:50;
then ( t02 . a6 ) = ( s . a6 ) by SCMPDS_5:15;
then A40: ( t6 . a6 ) = ( s . a6 ) by A25,AMI_3:10,SCMPDS_2:47;
A41: ( DataLoc (( t02 . a ),6) ) = ( intpos ( ( 0 ) + 6 ) ) by A23,SCMP_GCD:1;
A42:now
assume ( t02 . ( DataLoc (( t02 . a ),5) ) ) <= ( 0 );
then ( ( IExec (IF,Q2,( Initialize t2 )) ) . a6 ) = ( ( IExec (FA,Q2,( Initialize t2 )) ) . a6 ) by SCMPDS_6:74
.= ( ( Exec (Fi,t02) ) . a6 ) by SCMPDS_5:40
.= ( 0 ) by A41,SCMPDS_2:46;
hence ( ( IExec (B1,P,s) ) . a6 ) = ( 0 ) by SCMPDS_5:35;
end;
A43: ( 6 + ( s . a6 ) ) > ( 6 + ( 0 ) ) by A3,XREAL_1:6;
then ( 0 ) <> ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by A35,A29,ABSVALUE:def 1;
then A44: a <> ( DataLoc (( t6 . a4 ),( - 1 )) ) by ZFMISC_1:27;
A45: ( ( s . a4 ) - 1 ) > ( 0 ) by A3,A34,XREAL_1:19;
then A46: ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) = ( ( s . a4 ) - 1 ) by A29,ABSVALUE:def 1;
then 4 <> ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by A35,A43,XXREAL_0:2;
then A47: a4 <> ( DataLoc (( t6 . a4 ),( - 1 )) ) by ZFMISC_1:27;
A48: ( t5 . a4 ) = ( ( Exec (k4,t6) ) . a4 ) by SCMPDS_5:42
.= ( s . a4 ) by A29,A47,SCMPDS_2:47;
then A49: ( abs ( ( t5 . a4 ) + ( 0 ) ) ) = ( s . a4 ) by A1,A4,ABSVALUE:def 1;
then 4 <> ( abs ( ( t5 . a4 ) + ( 0 ) ) ) by A1,A4,XXREAL_0:2;
then A50: a4 <> ( DataLoc (( t5 . a4 ),( 0 )) ) by ZFMISC_1:27;
3 <> ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by A35,A43,A46,XXREAL_0:2;
then A51: a3 <> ( DataLoc (( t6 . a4 ),( - 1 )) ) by ZFMISC_1:27;
3 <> ( abs ( ( t5 . a4 ) + ( 0 ) ) ) by A1,A4,A49,XXREAL_0:2;
then A52: a3 <> ( DataLoc (( t5 . a4 ),( 0 )) ) by ZFMISC_1:27;
A53: ( t5 . a3 ) = ( ( Exec (k4,t6) ) . a3 ) by SCMPDS_5:42
.= ( s . a3 ) by A33,A51,SCMPDS_2:47;
A54: ( t4 . a3 ) = ( ( Exec (k5,t5) ) . a3 ) by SCMPDS_5:41
.= ( s . a3 ) by A53,A52,SCMPDS_2:47;
2 <> ( abs ( ( t5 . a4 ) + ( 0 ) ) ) by A1,A4,A49,XXREAL_0:2;
then A55: a2 <> ( DataLoc (( t5 . a4 ),( 0 )) ) by ZFMISC_1:27;
A56: ( t4 . a4 ) = ( ( Exec (k5,t5) ) . a4 ) by SCMPDS_5:41
.= ( s . a4 ) by A48,A50,SCMPDS_2:47;
A57: ( t5 . a ) = ( ( Exec (k4,t6) ) . a ) by SCMPDS_5:42
.= ( 0 ) by A26,A44,SCMPDS_2:47;
A58: ( ( 2 * ( abs ( ( s . a4 ) + ( - 1 ) ) ) ) + 1 ) = ( ( 2 * ( ( s . a4 ) - 1 ) ) + 1 ) by A35,A43,ABSVALUE:def 1;
then ( abs ( ( s . a4 ) + ( - 1 ) ) ) <> ( abs ( ( t1 . a ) + 5 ) ) by A3,A35,A15,XREAL_1:6;
then A59: x <> ( DataLoc (( t1 . a ),5) ) by ZFMISC_1:27;
( 0 ) <> ( abs ( ( t5 . a4 ) + ( 0 ) ) ) by A1,A4,A48,ABSVALUE:def 1;
then A60: a <> ( DataLoc (( t5 . a4 ),( 0 )) ) by ZFMISC_1:27;
A61: ( t4 . a ) = ( ( Exec (k5,t5) ) . a ) by SCMPDS_5:41
.= ( 0 ) by A57,A60,SCMPDS_2:47;
then A62: a <> ( DataLoc (( t4 . a ),4) ) by AMI_3:10,SCMP_GCD:1;
2 <> ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by A35,A43,A46,XXREAL_0:2;
then A63: a2 <> ( DataLoc (( t6 . a4 ),( - 1 )) ) by ZFMISC_1:27;
A64: ( t5 . a2 ) = ( ( Exec (k4,t6) ) . a2 ) by SCMPDS_5:42
.= ( s . a2 ) by A38,A63,SCMPDS_2:47;
A65: ( t4 . a2 ) = ( ( Exec (k5,t5) ) . a2 ) by SCMPDS_5:41
.= ( s . a2 ) by A64,A55,SCMPDS_2:47;
A66: a2 <> ( DataLoc (( t4 . a ),4) ) by A61,AMI_3:10,SCMP_GCD:1;
( t3 . a ) = ( ( Exec (k6,t4) ) . a ) by SCMPDS_5:41
.= ( 0 ) by A61,A62,SCMPDS_2:48;
then A67: ( DataLoc (( t3 . a ),6) ) = ( intpos ( ( 0 ) + 6 ) ) by SCMP_GCD:1;
then A68: ( abs ( ( t3 . a ) + 6 ) ) = ( ( 0 ) + 6 ) by ZFMISC_1:27;
A69: ( DataLoc (( t4 . a ),4) ) = ( intpos ( ( 0 ) + 4 ) ) by A61,SCMP_GCD:1;
then A70: ( abs ( ( t4 . a ) + 4 ) ) = ( ( 0 ) + 4 ) by ZFMISC_1:27;
then ( abs ( ( s . a4 ) + ( - 1 ) ) ) <> ( abs ( ( t4 . a ) + 4 ) ) by A35,A43,A58,XXREAL_0:2;
then A71: x <> ( DataLoc (( t4 . a ),4) ) by ZFMISC_1:27;
A72: ( t3 . a2 ) = ( ( Exec (k6,t4) ) . a2 ) by SCMPDS_5:41
.= ( s . a2 ) by A65,A66,SCMPDS_2:48;
now
per cases ;
suppose ( t02 . ( DataLoc (( t02 . a ),5) ) ) <= ( 0 );

hence ( ( IExec (IF,Q2,( Initialize t2 )) ) . a2 ) = ( ( IExec (FA,Q2,( Initialize t2 )) ) . a2 ) by SCMPDS_6:74
.= ( ( Exec (Fi,t02) ) . a2 ) by SCMPDS_5:40
.= ( s . a2 ) by A37,A41,AMI_3:10,SCMPDS_2:46;
end;
suppose ( t02 . ( DataLoc (( t02 . a ),5) ) ) > ( 0 );

hence ( ( IExec (IF,Q2,( Initialize t2 )) ) . a2 ) = ( ( IExec (TR,Q2,( Initialize t2 )) ) . a2 ) by SCMPDS_6:73
.= ( ( Exec (k7,t3) ) . a2 ) by SCMPDS_5:41
.= ( s . a2 ) by A72,A67,AMI_3:10,SCMPDS_2:48;
end;
end;
hence ( ( IExec (B1,P,s) ) . a2 ) = ( s . a2 ) by SCMPDS_5:35;
A74: a3 <> ( DataLoc (( t4 . a ),4) ) by A61,AMI_3:10,SCMP_GCD:1;
A75: ( t3 . a3 ) = ( ( Exec (k6,t4) ) . a3 ) by SCMPDS_5:41
.= ( s . a3 ) by A54,A74,SCMPDS_2:48;
now
per cases ;
suppose ( t02 . ( DataLoc (( t02 . a ),5) ) ) <= ( 0 );

hence ( ( IExec (IF,Q2,( Initialize t2 )) ) . a3 ) = ( ( IExec (FA,Q2,( Initialize t2 )) ) . a3 ) by SCMPDS_6:74
.= ( ( Exec (Fi,t02) ) . a3 ) by SCMPDS_5:40
.= ( s . a3 ) by A32,A41,AMI_3:10,SCMPDS_2:46;
end;
suppose ( t02 . ( DataLoc (( t02 . a ),5) ) ) > ( 0 );

hence ( ( IExec (IF,Q2,( Initialize t2 )) ) . a3 ) = ( ( IExec (TR,Q2,( Initialize t2 )) ) . a3 ) by SCMPDS_6:73
.= ( ( Exec (k7,t3) ) . a3 ) by SCMPDS_5:41
.= ( s . a3 ) by A75,A67,AMI_3:10,SCMPDS_2:48;
end;
end;
hence ( ( IExec (B1,P,s) ) . a3 ) = ( s . a3 ) by SCMPDS_5:35;
A76: a6 <> ( DataLoc (( t4 . a ),4) ) by A61,AMI_3:10,SCMP_GCD:1;
6 <> ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by A34,A43,A46,XREAL_1:19;
then A77: a6 <> ( DataLoc (( t6 . a4 ),( - 1 )) ) by ZFMISC_1:27;
A78: ( t5 . a6 ) = ( ( Exec (k4,t6) ) . a6 ) by SCMPDS_5:42
.= ( s . a6 ) by A40,A77,SCMPDS_2:47;
6 <> ( abs ( ( t5 . a4 ) + ( 0 ) ) ) by A1,A4,A49,XXREAL_0:2;
then A79: a6 <> ( DataLoc (( t5 . a4 ),( 0 )) ) by ZFMISC_1:27;
A80: ( t4 . a6 ) = ( ( Exec (k5,t5) ) . a6 ) by SCMPDS_5:41
.= ( s . a6 ) by A78,A79,SCMPDS_2:47;
A81: ( t3 . a6 ) = ( ( Exec (k6,t4) ) . a6 ) by SCMPDS_5:41
.= ( s . a6 ) by A80,A76,SCMPDS_2:48;
A82: ( t3 . a4 ) = ( ( Exec (k6,t4) ) . a4 ) by SCMPDS_5:41
.= ( ( t4 . a4 ) + ( - 1 ) ) by A69,SCMPDS_2:48
.= ( ( s . a4 ) - 1 ) by A56;
A83:now
assume A84: ( t02 . ( DataLoc (( t02 . a ),5) ) ) > ( 0 );
then ( ( IExec (IF,Q2,( Initialize t2 )) ) . a6 ) = ( ( IExec (TR,Q2,( Initialize t2 )) ) . a6 ) by SCMPDS_6:73
.= ( ( Exec (k7,t3) ) . a6 ) by SCMPDS_5:41
.= ( ( s . a6 ) + ( - 1 ) ) by A81,A67,SCMPDS_2:48
.= ( ( s . a6 ) - 1 );
hence ( ( IExec (B1,P,s) ) . a6 ) = ( ( s . a6 ) - 1 ) by SCMPDS_5:35;
( ( IExec (IF,Q2,( Initialize t2 )) ) . a4 ) = ( ( IExec (TR,Q2,( Initialize t2 )) ) . a4 ) by A84,SCMPDS_6:73
.= ( ( Exec (k7,t3) ) . a4 ) by SCMPDS_5:41
.= ( ( s . a4 ) - 1 ) by A82,A67,AMI_3:10,SCMPDS_2:48;
hence ( ( IExec (B1,P,s) ) . a4 ) = ( ( s . a4 ) - 1 ) by SCMPDS_5:35;
end;
hereby
per cases ;
suppose ( t02 . ( DataLoc (( t02 . a ),5) ) ) <= ( 0 );

hence ( ( IExec (B1,P,s) ) . a6 ) < ( s . a6 ) by A3,A42;
end;
suppose ( t02 . ( DataLoc (( t02 . a ),5) ) ) > ( 0 );

hence ( ( IExec (B1,P,s) ) . a6 ) < ( s . a6 ) by A83,XREAL_1:146;
end;
end;
hereby
per cases ;
suppose A85: ( t02 . ( DataLoc (( t02 . ( GBP ) ),5) ) ) <= ( 0 );

then ( ( IExec (IF,Q2,( Initialize t2 )) ) . a4 ) = ( ( IExec (FA,Q2,( Initialize t2 )) ) . a4 ) by SCMPDS_6:74
.= ( ( Exec (Fi,t02) ) . a4 ) by SCMPDS_5:40
.= ( s . a4 ) by A28,A41,AMI_3:10,SCMPDS_2:46;
then ( ( IExec (B1,P,s) ) . a4 ) = ( s . a4 ) by SCMPDS_5:35;
hence ( ( IExec (B1,P,s) ) . a4 ) >= ( 7 + ( ( IExec (B1,P,s) ) . a6 ) ) by A1,A4,A42,A85,XXREAL_0:2;
end;
suppose A86: ( t02 . ( DataLoc (( t02 . a ),5) ) ) > ( 0 );

( ( s . a4 ) - 1 ) >= ( ( 7 + ( s . a6 ) ) - 1 ) by A1,XREAL_1:9;
hence ( ( IExec (B1,P,s) ) . a4 ) >= ( 7 + ( ( IExec (B1,P,s) ) . a6 ) ) by A83,A86;
end;
end;
A87:now
let i being (Element of ( NAT ));
assume that
A88: i >= 7
and
i <> ( ( s . a4 ) - 1 )
and
i <> ( s . a4 );
i > 5 by A88,XXREAL_0:2;
hence ( t1 . ( intpos i ) ) = ( s . ( intpos i ) ) by A12,AMI_3:10,SCMPDS_2:47;
end;
A89:now
let i being (Element of ( NAT ));
assume that
A90: i >= 7
and
A91: (i <> ( ( s . a4 ) - 1 ) & i <> ( s . a4 ));
A92: i > 5 by A90,XXREAL_0:2;
thus ( t2 . ( intpos i ) ) = ( ( Exec (k2,t1) ) . ( intpos i ) ) by SCMPDS_5:42
.= ( t1 . ( intpos i ) ) by A14,A92,AMI_3:10,SCMPDS_2:50
.= ( s . ( intpos i ) ) by A87,A90,A91;
end;
A93:now
let i being (Element of ( NAT ));
assume that
A94: i >= 7
and
A95: (i <> ( ( s . a4 ) - 1 ) & i <> ( s . a4 ));
i > 5 by A94,XXREAL_0:2;
hence ( t6 . ( intpos i ) ) = ( t02 . ( intpos i ) ) by A25,AMI_3:10,SCMPDS_2:47
.= ( t2 . ( intpos i ) ) by SCMPDS_5:15
.= ( s . ( intpos i ) ) by A89,A94,A95;
end;
A96:now
let i being (Element of ( NAT ));
assume that
A97: i >= 7
and
A98: i <> ( ( s . a4 ) - 1 )
and
A99: i <> ( s . a4 );
A100: ( intpos i ) <> ( DataLoc (( t6 . a4 ),( - 1 )) )
proof
assume ( intpos i ) = ( DataLoc (( t6 . a4 ),( - 1 )) );
then i = ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by ZFMISC_1:27;
hence contradiction by A45,A29,A98,ABSVALUE:def 1;
end;
thus ( t5 . ( intpos i ) ) = ( ( Exec (k4,t6) ) . ( intpos i ) ) by SCMPDS_5:42
.= ( t6 . ( intpos i ) ) by A100,SCMPDS_2:47
.= ( s . ( intpos i ) ) by A93,A97,A98,A99;
end;
A101:now
let i being (Element of ( NAT ));
assume that
A102: (i >= 7 & i <> ( ( s . a4 ) - 1 ))
and
A103: i <> ( s . a4 );
A104: ( intpos i ) <> ( DataLoc (( t5 . a4 ),( 0 )) )
proof
assume ( intpos i ) = ( DataLoc (( t5 . a4 ),( 0 )) );
then i = ( abs ( ( t5 . a4 ) + ( 0 ) ) ) by ZFMISC_1:27;
hence contradiction by A1,A4,A48,A103,ABSVALUE:def 1;
end;
thus ( t4 . ( intpos i ) ) = ( ( Exec (k5,t5) ) . ( intpos i ) ) by SCMPDS_5:41
.= ( t5 . ( intpos i ) ) by A104,SCMPDS_2:47
.= ( s . ( intpos i ) ) by A96,A102,A103;
end;
A105:now
let i being (Element of ( NAT ));
assume that
A106: i >= 7
and
A107: (i <> ( ( s . a4 ) - 1 ) & i <> ( s . a4 ));
i > 4 by A106,XXREAL_0:2;
then A108: ( intpos i ) <> ( DataLoc (( t4 . a ),4) ) by A61,AMI_3:10,SCMP_GCD:1;
thus ( t3 . ( intpos i ) ) = ( ( Exec (k6,t4) ) . ( intpos i ) ) by SCMPDS_5:41
.= ( t4 . ( intpos i ) ) by A108,SCMPDS_2:48
.= ( s . ( intpos i ) ) by A101,A106,A107;
end;
hereby
let i being Nat;
A109: i in ( NAT ) by ORDINAL1:def 12;
set xi = ( intpos i );
assume that
A110: i >= 7
and
A111: (i <> ( ( s . a4 ) - 1 ) & i <> ( s . a4 ));
A112: i > 6 by A110,XXREAL_0:2;
per cases ;
suppose ( t02 . ( DataLoc (( t02 . a ),5) ) ) <= ( 0 );

then ( ( IExec (IF,Q2,( Initialize t2 )) ) . xi ) = ( ( IExec (FA,Q2,( Initialize t2 )) ) . xi ) by SCMPDS_6:74
.= ( ( Exec (Fi,t02) ) . xi ) by SCMPDS_5:40
.= ( t02 . xi ) by A41,A112,AMI_3:10,SCMPDS_2:46
.= ( t2 . xi ) by SCMPDS_5:15
.= ( s . xi ) by A89,A109,A110,A111;
hence ( ( IExec (B1,P,s) ) . xi ) = ( s . xi ) by SCMPDS_5:35;
end;
suppose ( t02 . ( DataLoc (( t02 . a ),5) ) ) > ( 0 );

then ( ( IExec (IF,Q2,( Initialize t2 )) ) . xi ) = ( ( IExec (TR,Q2,( Initialize t2 )) ) . xi ) by SCMPDS_6:73
.= ( ( Exec (k7,t3) ) . xi ) by SCMPDS_5:41
.= ( t3 . xi ) by A67,A112,AMI_3:10,SCMPDS_2:48
.= ( s . xi ) by A105,A109,A110,A111;
hence ( ( IExec (B1,P,s) ) . xi ) = ( s . xi ) by SCMPDS_5:35;
end;
end;
A113: ( t02 . a5 ) = ( t2 . a5 ) by SCMPDS_5:15
.= ( ( Exec (k2,t1) ) . a5 ) by SCMPDS_5:42
.= ( ( s . x ) - ( s . y ) ) by A21,A20,A18,A14,SCMPDS_2:50;
then A114: ( t02 . ( DataLoc (( t02 . a ),5) ) ) = ( ( s . x ) - ( s . y ) ) by A23,SCMP_GCD:1;
( abs ( ( s . a4 ) + ( - 1 ) ) ) <> ( abs ( ( t0 . a ) + 5 ) ) by A3,A35,A58,A17,XREAL_1:6;
then x <> ( DataLoc (( t0 . a ),5) ) by ZFMISC_1:27;
then A115: ( t1 . x ) = ( s . x ) by SCMPDS_2:47;
( t2 . x ) = ( ( Exec (k2,t1) ) . x ) by SCMPDS_5:42
.= ( s . x ) by A115,A59,SCMPDS_2:50;
then A116: ( t02 . x ) = ( s . x ) by SCMPDS_5:15;
then A117: ( t6 . a5 ) = ( s . x ) by A28,A25,SCMPDS_2:47;
5 <> ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by A35,A43,A46,XXREAL_0:2;
then A118: a5 <> ( DataLoc (( t6 . a4 ),( - 1 )) ) by ZFMISC_1:27;
A119: ( t5 . a5 ) = ( ( Exec (k4,t6) ) . a5 ) by SCMPDS_5:42
.= ( s . x ) by A117,A118,SCMPDS_2:47;
( abs ( ( s . a4 ) + ( 0 ) ) ) <> ( abs ( ( t4 . a ) + 4 ) ) by A1,A4,A5,A70,XXREAL_0:2;
then A120: y <> ( DataLoc (( t4 . a ),4) ) by ZFMISC_1:27;
A121: ( t4 . y ) = ( ( Exec (k5,t5) ) . ( DataLoc (( t5 . a4 ),( 0 )) ) ) by A48,SCMPDS_5:41
.= ( t5 . ( DataLoc (( t5 . a ),5) ) ) by SCMPDS_2:47
.= ( s . x ) by A57,A119,SCMP_GCD:1;
A122: ( t3 . y ) = ( ( Exec (k6,t4) ) . y ) by SCMPDS_5:41
.= ( s . x ) by A121,A120,SCMPDS_2:48;
( abs ( ( s . a4 ) + ( - 1 ) ) ) <> ( abs ( ( t5 . a4 ) + ( 0 ) ) ) by A58,A49;
then A123: x <> ( DataLoc (( t5 . a4 ),( 0 )) ) by ZFMISC_1:27;
A124: ( t4 . x ) = ( ( Exec (k5,t5) ) . x ) by SCMPDS_5:41
.= ( s . y ) by A30,A123,SCMPDS_2:47;
A125: ( t3 . x ) = ( ( Exec (k6,t4) ) . x ) by SCMPDS_5:41
.= ( s . y ) by A124,A71,SCMPDS_2:48;
hereby
A126: x <> ( DataLoc (( t3 . a ),6) ) by A35,A43,A58,A67,ZFMISC_1:27;
assume ( s . x ) > ( s . y );
then A127: ( ( s . x ) - ( s . y ) ) > ( ( s . y ) - ( s . y ) ) by XREAL_1:9;
then ( ( IExec (IF,Q2,( Initialize t2 )) ) . x ) = ( ( IExec (TR,Q2,( Initialize t2 )) ) . x ) by A114,SCMPDS_6:73
.= ( ( Exec (k7,t3) ) . x ) by SCMPDS_5:41
.= ( s . y ) by A125,A126,SCMPDS_2:48;
hence ( ( IExec (B1,P,s) ) . x ) = ( s . y ) by SCMPDS_5:35;
( abs ( ( s . a4 ) + ( 0 ) ) ) <> ( abs ( ( t3 . a ) + 6 ) ) by A1,A4,A5,A68,XXREAL_0:2;
then A128: y <> ( DataLoc (( t3 . a ),6) ) by ZFMISC_1:27;
( ( IExec (IF,Q2,( Initialize t2 )) ) . y ) = ( ( IExec (TR,Q2,( Initialize t2 )) ) . y ) by A114,A127,SCMPDS_6:73
.= ( ( Exec (k7,t3) ) . y ) by SCMPDS_5:41
.= ( s . x ) by A122,A128,SCMPDS_2:48;
hence ( ( IExec (B1,P,s) ) . y ) = ( s . x ) by SCMPDS_5:35;
thus (( ( IExec (B1,P,s) ) . a6 ) = ( ( s . a6 ) - 1 ) & ( ( IExec (B1,P,s) ) . a4 ) = ( ( s . a4 ) - 1 )) by A23,A113,A83,A127,SCMP_GCD:1;
end;
A129: ( abs ( ( t02 . a ) + 6 ) ) = ( ( 0 ) + 6 ) by A41,ZFMISC_1:27;
hereby
A130: x <> ( DataLoc (( t02 . a ),6) ) by A35,A43,A58,A41,ZFMISC_1:27;
assume ( s . x ) <= ( s . y );
then A131: ( ( s . x ) - ( s . y ) ) <= ( ( s . y ) - ( s . y ) ) by XREAL_1:9;
then ( ( IExec (IF,Q2,( Initialize t2 )) ) . x ) = ( ( IExec (FA,Q2,( Initialize t2 )) ) . x ) by A114,SCMPDS_6:74
.= ( ( Exec (Fi,t02) ) . x ) by SCMPDS_5:40
.= ( s . x ) by A116,A130,SCMPDS_2:46;
hence ( ( IExec (B1,P,s) ) . x ) = ( s . x ) by SCMPDS_5:35;
( abs ( ( s . a4 ) + ( 0 ) ) ) <> ( abs ( ( t02 . a ) + 6 ) ) by A1,A4,A5,A129,XXREAL_0:2;
then A132: y <> ( DataLoc (( t02 . a ),6) ) by ZFMISC_1:27;
( ( IExec (IF,Q2,( Initialize t2 )) ) . y ) = ( ( IExec (FA,Q2,( Initialize t2 )) ) . y ) by A114,A131,SCMPDS_6:74
.= ( ( Exec (Fi,t02) ) . y ) by SCMPDS_5:40
.= ( s . y ) by A22,A132,SCMPDS_2:46;
hence ( ( IExec (B1,P,s) ) . y ) = ( s . y ) by SCMPDS_5:35;
thus ( ( IExec (B1,P,s) ) . a6 ) = ( 0 ) by A23,A113,A42,A131,SCMP_GCD:1;
end;
end;
Lm15: (for s being ( 0 ) -started (State of ( SCMPDS )) holds (((( s . a4 ) >= ( 7 + ( s . a6 ) ) & ( s . ( GBP ) ) = ( 0 )) & ( s . a6 ) > ( 0 )) implies ( IExec (WH,P,s) ) = ( IExec (WH,P,( Initialize ( IExec (B1,P,s) ) )) )))
proof
let s being ( 0 ) -started (State of ( SCMPDS ));
set a = ( GBP );
set b = ( DataLoc (( s . a ),6) );
assume that
A1: ( s . a4 ) >= ( 7 + ( s . a6 ) )
and
A2: ( s . a ) = ( 0 )
and
A3: ( s . a6 ) > ( 0 );
A4: b = ( intpos ( ( 0 ) + 6 ) ) by A2,SCMP_GCD:1;
A5:now
let t being ( 0 ) -started (State of ( SCMPDS ));
let Q;
T: ( Initialize t ) = t by MEMSTR_0:44;
assume that
A6: (for x holds (x in { a4 } implies ( t . x ) >= ( 7 + ( t . b ) )))
and
A7: (( t . a ) = ( s . a ) & ( t . b ) > ( 0 ));
set Bt = ( IExec (B1,Q,( Initialize t )) );
A12: a4 in { a4 } by TARSKI:def 1;
then A13: ( t . a4 ) >= ( 7 + ( t . a6 ) ) by A4,A6;
hence ( ( IExec (B1,Q,t) ) . a ) = ( t . a ) by A2,A4,A7,Lm7;
thus (B1 is_closed_on t,Q & B1 is_halting_on t,Q) by SCMPDS_6:20,SCMPDS_6:21;
thus ( ( IExec (B1,Q,t) ) . b ) < ( t . b ) by A2,A4,A7,A13,Lm8;
( t . a4 ) >= ( 7 + ( t . b ) ) by A6,A12;
then ( Bt . a4 ) >= ( 7 + ( Bt . a6 ) ) by A2,A4,A7,Lm8,T;
hence (for x holds (x in { a4 } implies ( ( IExec (B1,Q,t) ) . x ) >= ( 7 + ( ( IExec (B1,Q,t) ) . b ) ))) by A4,T,TARSKI:def 1;
end;
(for x holds (x in { a4 } implies ( s . x ) >= ( 7 + ( s . b ) ))) by A1,A4,TARSKI:def 1;
hence thesis by A3,A4,A5,SCMPDS_8:29;
end;
theorem
Th17: (for s being ( 0 ) -started (State of ( SCMPDS )) holds (for f,g being (FinSequence of ( INT )) holds (for k0,k being (Element of ( NAT )) holds (((((((((( s . ( intpos 4 ) ) >= ( 7 + ( s . ( intpos 6 ) ) ) & ( s . ( GBP ) ) = ( 0 )) & k = ( s . ( intpos 6 ) )) & k0 = ( ( ( s . ( intpos 4 ) ) - ( s . ( intpos 6 ) ) ) - 1 )) & f is_FinSequence_on s,k0) & g is_FinSequence_on ( IExec (( while>0 (( GBP ),6,( ( ( (( GBP ),5) := (( intpos 4 ),( - 1 )) ) ';' ( SubFrom (( GBP ),5,( intpos 4 ),( 0 )) ) ) ';' ( if>0 (( GBP ),5,( ( ( ( ( (( GBP ),5) := (( intpos 4 ),( - 1 )) ) ';' ( (( intpos 4 ),( - 1 )) := (( intpos 4 ),( 0 )) ) ) ';' ( (( intpos 4 ),( 0 )) := (( GBP ),5) ) ) ';' ( AddTo (( GBP ),4,( - 1 )) ) ) ';' ( AddTo (( GBP ),6,( - 1 )) ) ),( Load ( (( GBP ),6) := ( 0 ) ) )) ) )) ),P,s) ),k0) & ( len f ) = ( len g )) & ( len f ) > k) & f is_non_decreasing_on 1,k) implies (((f,g are_fiberwise_equipotent  & g is_non_decreasing_on 1,( k + 1 )) & (for i being (Element of ( NAT )) holds ((i > ( k + 1 ) & i <= ( len f )) implies ( f . i ) = ( g . i )))) & (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( k + 1 )) implies (ex j being (Element of ( NAT )) st ((1 <= j & j <= ( k + 1 )) & ( g . i ) = ( f . j ))))))))))
proof
set a = ( GBP );
let s being ( 0 ) -started (State of ( SCMPDS ));
let f being (FinSequence of ( INT ));
let g being (FinSequence of ( INT ));
let m being (Element of ( NAT ));
let n being (Element of ( NAT ));
assume A1: (((( s . a4 ) >= ( 7 + ( s . a6 ) ) & ( s . a ) = ( 0 )) & n = ( s . a6 )) & m = ( ( ( s . a4 ) - ( s . a6 ) ) - 1 ));
defpred P[ (Element of ( NAT )) ]
 means
(for t being ( 0 ) -started (State of ( SCMPDS )) holds (for Q holds (for f1,f2 being (FinSequence of ( INT )) holds (((((((((( t . a4 ) >= ( 7 + ( t . a6 ) ) & ( t . a ) = ( 0 )) & $1 = ( t . a6 )) & m = ( ( ( t . a4 ) - ( t . a6 ) ) - 1 )) & f1 is_FinSequence_on t,m) & f2 is_FinSequence_on ( IExec (WH,Q,t) ),m) & ( len f1 ) = ( len f2 )) & ( len f1 ) > $1) & f1 is_non_decreasing_on 1,$1) implies (((f1,f2 are_fiberwise_equipotent  & f2 is_non_decreasing_on 1,( $1 + 1 )) & (for i being (Element of ( NAT )) holds ((i > ( $1 + 1 ) & i <= ( len f1 )) implies ( f1 . i ) = ( f2 . i )))) & (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( $1 + 1 )) implies (ex j being (Element of ( NAT )) st ((1 <= j & j <= ( $1 + 1 )) & ( f2 . i ) = ( f1 . j ))))))))));
assume A2: (f is_FinSequence_on s,m & g is_FinSequence_on ( IExec (WH,P,s) ),m);
A3:now
let k being (Element of ( NAT ));
assume A4: P[ k ];
thus P[ (( k + 1 ) qua (Element of ( NAT ))) ]
proof
let t being ( 0 ) -started (State of ( SCMPDS ));
let Q;
let f1 being (FinSequence of ( INT ));
let f2 being (FinSequence of ( INT ));
T: ( Initialize t ) = t by MEMSTR_0:44;
assume that
A5: ( t . a4 ) >= ( 7 + ( t . a6 ) )
and
A6: ( t . a ) = ( 0 )
and
A7: ( k + 1 ) = ( t . a6 )
and
A8: m = ( ( ( t . a4 ) - ( t . a6 ) ) - 1 )
and
A9: f1 is_FinSequence_on t,m
and
A10: f2 is_FinSequence_on ( IExec (WH,Q,t) ),m
and
A11: ( len f1 ) = ( len f2 )
and
A12: ( len f1 ) > ( k + 1 )
and
A13: f1 is_non_decreasing_on 1,( k + 1 );
set Bt = ( IExec (B1,Q,t) );
set x = ( DataLoc (( t . a4 ),( - 1 )) );
set y = ( DataLoc (( t . a4 ),( 0 )) );
A20: ( Bt . a ) = ( 0 ) by A5,A6,A7,Lm7;
( ( m + 1 ) + ( k + 1 ) ) >= ( 7 + ( t . a6 ) ) by A5,A7,A8;
then A21: ( m + 1 ) >= 7 by A7,XREAL_1:6;
A22: x = ( DataLoc (m,( k + 1 )) ) by A7,A8
.= ( intpos ( m + ( k + 1 ) ) ) by SCMP_GCD:1;
X3: ( Bt . a6 ) = ( ( Initialize Bt ) . a6 ) by SCMPDS_5:15;
X4: ( Bt . a4 ) = ( ( Initialize Bt ) . a4 ) by SCMPDS_5:15;
X5: ( ( Initialize Bt ) . a ) = ( Bt . a ) by SCMPDS_5:15;
A23: (( t . x ) > ( t . y ) implies (((( Bt . x ) = ( t . y ) & ( Bt . y ) = ( t . x )) & ( Bt . a6 ) = ( ( t . a6 ) - 1 )) & ( Bt . a4 ) = ( ( t . a4 ) - 1 ))) by A5,A6,A7,Lm8;
A24: (( t . x ) <= ( t . y ) implies ((( Bt . x ) = ( t . x ) & ( Bt . y ) = ( t . y )) & ( Bt . a6 ) = ( 0 ))) by A5,A6,A7,Lm8;
A25: y = ( intpos ( m + ( k + 2 ) ) ) by A7,A8,SCMP_GCD:1;
A26: ( Bt . a4 ) >= ( 7 + ( Bt . a6 ) ) by A5,A6,A7,Lm8;
per cases ;
suppose A27: ( t . x ) > ( t . y );

now
let i being (Element of ( NAT ));
assume (1 <= i & i <= ( len f2 ));
hence ( f2 . i ) = ( ( IExec (WH,Q,t) ) . ( intpos ( m + i ) ) ) by A10,CKB1:def 1
.= ( ( IExec (WH,Q,( Initialize Bt )) ) . ( intpos ( m + i ) ) ) by A5,A6,A7,Lm15;
end;
then A28: f2 is_FinSequence_on ( IExec (WH,Q,( Initialize Bt )) ),m by CKB1:def 1;
A29: ( k + 1 ) < ( k + 2 ) by XREAL_1:6;
consider h being (FinSequence of ( INT )) such that A30: ( len h ) = ( len f1 ) and A31: (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len h )) implies ( h . i ) = ( Bt . ( intpos ( m + i ) ) ))) by CKB2:1;
( k + 1 ) > k by XREAL_1:29;
then A32: ( len h ) > k by A12,A30,XXREAL_0:2;
A33:now
let i being (Element of ( NAT ));
assume that
A34: (i <> ( k + 1 ) & i <> ( k + 2 ))
and
A35: 1 <= i
and
A36: i <= ( len f1 );
A37: (( m + i ) <> ( ( t . a4 ) - 1 ) & ( m + i ) <> ( t . a4 )) by A7,A8,A34;
( m + i ) >= ( m + 1 ) by A35,XREAL_1:6;
then A38: ( m + i ) >= 7 by A21,XXREAL_0:2;
thus ( h . i ) = ( Bt . ( intpos ( m + i ) ) ) by A30,A31,A35,A36
.= ( t . ( intpos ( m + i ) ) ) by A5,A6,A7,A38,A37,Lm8
.= ( f1 . i ) by A9,A35,A36,CKB1:def 1;
end;
now
let i being (Element of ( NAT ));
let j being (Element of ( NAT ));
assume that
A40: 1 <= i
and
A41: i <= j
and
A42: j <= k;
A43: j <= ( len f1 ) by A30,A32,A42,XXREAL_0:2;
then A44: i <= ( len f1 ) by A41,XXREAL_0:2;
A45: k < ( k + 1 ) by XREAL_1:29;
then A46: j < ( k + 1 ) by A42,XXREAL_0:2;
( k + 1 ) < ( ( k + 1 ) + 1 ) by XREAL_1:29;
then A47: k < ( ( k + 1 ) + 1 ) by A45,XXREAL_0:2;
j >= 1 by A40,A41,XXREAL_0:2;
then A48: ( h . j ) = ( f1 . j ) by A33,A42,A45,A47,A43;
j < ( k + 2 ) by A42,A47,XXREAL_0:2;
then ( h . i ) = ( f1 . i ) by A33,A40,A41,A46,A44;
hence ( h . i ) <= ( h . j ) by A13,A40,A41,A46,A48,GRAPH_2:def 12;
end;
then A49: h is_non_decreasing_on 1,k by GRAPH_2:def 12;
A50: ( len f1 ) >= ( ( k + 1 ) + 1 ) by A12,INT_1:7;
A51: 1 <= ( k + 1 ) by NAT_1:11;
then A52: 1 <= ( k + 2 ) by A29,XXREAL_0:2;
then A53: ( h . ( k + 2 ) ) = ( t . x ) by A25,A23,A27,A30,A31,A50;
then A54: ( h . ( k + 2 ) ) = ( f1 . ( k + 1 ) ) by A9,A12,A22,A51,CKB1:def 1;
A55: ( ( ( Bt . a4 ) - ( Bt . a6 ) ) - 1 ) = m by A8,A23,A27;
A56: ( h . ( k + 1 ) ) = ( t . y ) by A12,A22,A23,A27,A30,A31,NAT_1:11;
then ( h . ( k + 1 ) ) = ( f1 . ( k + 2 ) ) by A9,A25,A52,A50,CKB1:def 1;
then A57: f1,h are_fiberwise_equipotent  by A12,A30,A33,A51,A52,A50,A54,CKB4:1;
A58: h is_FinSequence_on ( Initialize Bt ),m
proof
let i being (Element of ( NAT ));
assume (1 <= i & i <= ( len h ));
then ( h . i ) = ( Bt . ( intpos ( m + i ) ) ) by A31;
hence thesis by SCMPDS_5:15;
end;
h,f2 are_fiberwise_equipotent  by A4,A7,A11,A20,A26,A23,A27,A30,A55,A28,A32,A49,A58,X3,X4,X5;
hence f1,f2 are_fiberwise_equipotent  by A57,CLASSES1:76;
A59: f2 is_non_decreasing_on 1,( k + 1 ) by A4,A7,A11,A20,A26,A23,A27,A30,A55,A58,X3,X4,X5,A28,A32,A49;
now
let i being (Element of ( NAT ));
let j being (Element of ( NAT ));
assume that
A60: 1 <= i
and
A61: i <= j
and
A62: j <= ( ( k + 1 ) + 1 );
per cases  by A62,NAT_1:8;
suppose j <= ( k + 1 );

hence ( f2 . i ) <= ( f2 . j ) by A59,A60,A61,GRAPH_2:def 12;
end;
suppose A63: j = ( ( k + 1 ) + 1 );

hereby
per cases ;
suppose i = j;

hence ( f2 . i ) <= ( f2 . j );
end;
suppose i <> j;

then i < j by A61,XXREAL_0:1;
then i <= ( k + 1 ) by A63,NAT_1:13;
then consider mm being (Element of ( NAT )) such that A64: 1 <= mm and A65: mm <= ( k + 1 ) and A66: ( f2 . i ) = ( h . mm ) by A4,A7,A11,A20,A26,A23,A27,A30,A55,A58,A28,A32,A49,A60,X3,X4,X5;
A67: ( f2 . j ) = ( h . ( k + 2 ) ) by A4,A7,A11,A20,A26,A23,A27,A30,A55,A58,A28,A32,A49,A29,A50,A63,X3,X4,X5;
hereby
per cases ;
suppose mm = ( k + 1 );

hence ( f2 . i ) <= ( f2 . j ) by A12,A22,A23,A24,A30,A31,A53,A64,A66,A67;
end;
suppose A68: mm <> ( k + 1 );

mm < ( k + 2 ) by A29,A65,XXREAL_0:2;
then mm < ( len h ) by A30,A50,XXREAL_0:2;
then A69: ( h . mm ) = ( f1 . mm ) by A30,A33,A29,A64,A65,A68;
( f2 . j ) = ( f1 . ( k + 1 ) ) by A9,A12,A22,A51,A53,A67,CKB1:def 1;
hence ( f2 . i ) <= ( f2 . j ) by A13,A64,A65,A66,A69,GRAPH_2:def 12;
end;
end;
end;
end;
end;
end;
hence f2 is_non_decreasing_on 1,( ( k + 1 ) + 1 ) by GRAPH_2:def 12;
hereby
let i being (Element of ( NAT ));
assume that
A70: i > ( ( k + 1 ) + 1 )
and
A71: i <= ( len f1 );
A72: ( k + 1 ) < ( ( k + 1 ) + 1 ) by XREAL_1:29;
then A73: i > ( k + 1 ) by A70,XXREAL_0:2;
1 <= ( k + 1 ) by NAT_1:11;
then A74: 1 <= i by A73,XXREAL_0:2;
thus ( f2 . i ) = ( h . i ) by A4,A7,A11,A20,A26,A23,A27,A30,A55,A58,A28,A32,A49,A71,A73,X3,X4,X5
.= ( f1 . i ) by A33,A70,A71,A72,A74;
end;
hereby
let i being (Element of ( NAT ));
assume that
A75: 1 <= i
and
A76: i <= ( ( k + 1 ) + 1 );
per cases ;
suppose A77: i = ( ( k + 1 ) + 1 );

take j = ( k + 1 );
thus 1 <= j by NAT_1:11;
thus j <= ( ( k + 1 ) + 1 ) by NAT_1:11;
thus ( f2 . i ) = ( f1 . j ) by A4,A7,A11,A20,A26,A23,A27,A30,A55,A58,A28,A32,A49,A29,A50,A54,A77,X3,X4,X5;
end;
suppose i <> ( ( k + 1 ) + 1 );

then i < ( ( k + 1 ) + 1 ) by A76,XXREAL_0:1;
then i <= ( k + 1 ) by NAT_1:13;
then consider mm being (Element of ( NAT )) such that A78: 1 <= mm and A79: mm <= ( k + 1 ) and A80: ( f2 . i ) = ( h . mm ) by A4,A7,A11,A20,A26,A23,A27,A30,A55,A58,A28,A32,A49,A75,X3,X4,X5;
hereby
A81: ( k + 2 ) = ( ( k + 1 ) + 1 );
per cases ;
suppose A82: mm = ( k + 1 );

take j = ( k + 2 );
thus 1 <= j by A81,NAT_1:11;
thus j <= ( ( k + 1 ) + 1 );
thus ( f2 . i ) = ( f1 . j ) by A9,A25,A52,A50,A56,A80,A82,CKB1:def 1;
end;
suppose A83: mm <> ( k + 1 );

take mm;
thus 1 <= mm by A78;
thus mm <= ( ( k + 1 ) + 1 ) by A29,A79,XXREAL_0:2;
mm < ( k + 2 ) by A29,A79,XXREAL_0:2;
then mm < ( len f1 ) by A50,XXREAL_0:2;
hence ( f2 . i ) = ( f1 . mm ) by A33,A29,A78,A79,A80,A83;
end;
end;
end;
end;
end;
suppose A84: ( t . x ) <= ( t . y );

A85:now
let i being Nat;
assume that
A86: i >= 1
and
A87: i <= ( len f1 );
A88: i in ( NAT ) by ORDINAL1:def 12;
then A89: ( f1 . i ) = ( t . ( intpos ( m + i ) ) ) by A9,A86,A87,CKB1:def 1;
( Bt . ( DataLoc (( Bt . a ),6) ) ) = ( 0 ) by A20,A24,A84,SCMP_GCD:1;
then B90: ( ( Initialize Bt ) . ( DataLoc (( Bt . a ),6) ) ) = ( 0 ) by SCMPDS_5:15;
( m + i ) >= ( m + 1 ) by A86,XREAL_1:6;
then A91: ( m + i ) >= 7 by A21,XXREAL_0:2;
H2: ( ( Initialize Bt ) . ( intpos ( m + i ) ) ) = ( Bt . ( intpos ( m + i ) ) ) by SCMPDS_5:15;
H3: ( ( Initialize Bt ) . ( DataLoc (( ( Initialize Bt ) . ( GBP ) ),6) ) ) <= ( 0 ) by B90,SCMPDS_5:15;
per cases ;
suppose A93: ( m + i ) = ( ( t . a4 ) - 1 );

hence ( f1 . i ) = ( ( IExec (WH,Q,( Initialize Bt )) ) . x ) by A7,A8,A22,A24,A84,A89,H2,H3,SCMPDS_8:23
.= ( ( IExec (WH,Q,( Initialize t )) ) . x ) by A5,A6,A7,Lm15,T
.= ( f2 . i ) by A7,A8,A10,A11,A12,A22,A86,A93,CKB1:def 1,T;
end;
suppose A94: ( m + i ) = ( t . a4 );

hence ( f1 . i ) = ( ( IExec (WH,Q,( Initialize Bt )) ) . y ) by A7,A8,A25,A24,A84,A89,H2,H3,SCMPDS_8:23
.= ( ( IExec (WH,Q,( Initialize t )) ) . y ) by A5,A6,A7,Lm15,T
.= ( f2 . i ) by A7,A8,A10,A11,A25,A86,A87,A94,CKB1:def 1,T;
end;
suppose (( m + i ) <> ( ( t . a4 ) - 1 ) & ( m + i ) <> ( t . a4 ));

hence ( f1 . i ) = ( Bt . ( intpos ( m + i ) ) ) by A5,A6,A7,A91,A89,Lm8
.= ( ( IExec (WH,Q,( Initialize Bt )) ) . ( intpos ( m + i ) ) ) by H2,H3,SCMPDS_8:23
.= ( ( IExec (WH,Q,( Initialize t )) ) . ( intpos ( m + i ) ) ) by A5,A6,A7,Lm15,T
.= ( f2 . i ) by A10,A11,A88,A86,A87,CKB1:def 1,T;
end;
end;
then A95: f1 = f2 by A11,FINSEQ_1:14;
thus f1,f2 are_fiberwise_equipotent  by A11,A85,FINSEQ_1:14;
now
let i being (Element of ( NAT ));
let j being (Element of ( NAT ));
assume that
A96: 1 <= i
and
A97: i <= j
and
A98: j <= ( ( k + 1 ) + 1 );
per cases  by A98,NAT_1:8;
suppose j <= ( k + 1 );

hence ( f1 . i ) <= ( f1 . j ) by A13,A96,A97,GRAPH_2:def 12;
end;
suppose A99: j = ( ( k + 1 ) + 1 );

hereby
per cases ;
suppose i = j;

hence ( f1 . i ) <= ( f1 . j );
end;
suppose i <> j;

then i < j by A97,XXREAL_0:1;
then i <= ( k + 1 ) by A99,NAT_1:13;
then A100: ( f1 . i ) <= ( f1 . ( k + 1 ) ) by A13,A96,GRAPH_2:def 12;
1 <= ( k + 1 ) by NAT_1:11;
then A101: ( f1 . ( k + 1 ) ) = ( t . x ) by A9,A12,A22,CKB1:def 1;
(1 <= ( ( k + 1 ) + 1 ) & j <= ( len f1 )) by A12,A99,INT_1:7,NAT_1:11;
then ( f1 . j ) = ( t . y ) by A9,A25,A99,CKB1:def 1;
hence ( f1 . i ) <= ( f1 . j ) by A84,A100,A101,XXREAL_0:2;
end;
end;
end;
end;
hence f2 is_non_decreasing_on 1,( ( k + 1 ) + 1 ) by A95,GRAPH_2:def 12;
thus (for i being (Element of ( NAT )) holds ((i > ( ( k + 1 ) + 1 ) & i <= ( len f1 )) implies ( f1 . i ) = ( f2 . i ))) by A11,A85,FINSEQ_1:14;
thus (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( ( k + 1 ) + 1 )) implies (ex j being (Element of ( NAT )) st ((1 <= j & j <= ( ( k + 1 ) + 1 )) & ( f2 . i ) = ( f1 . j ))))) by A95;
end;
end;

end;
A102: P[ (( 0 ) qua (Element of ( NAT ))) ]
proof
let t being ( 0 ) -started (State of ( SCMPDS ));
let Q;
let f1 being (FinSequence of ( INT ));
let f2 being (FinSequence of ( INT ));
T: ( Initialize t ) = t by MEMSTR_0:44;
assume that
( t . a4 ) >= ( 7 + ( t . a6 ) )
and
A103: (( t . a ) = ( 0 ) & ( 0 ) = ( t . a6 ))
and
m = ( ( ( t . a4 ) - ( t . a6 ) ) - 1 )
and
A104: f1 is_FinSequence_on t,m
and
A105: f2 is_FinSequence_on ( IExec (WH,Q,t) ),m
and
A106: ( len f1 ) = ( len f2 )
and
( len f1 ) > ( 0 )
and
f1 is_non_decreasing_on 1,( 0 );
A107: ( t . ( DataLoc (( t . a ),6) ) ) = ( 0 ) by A103,SCMP_GCD:1;
A108:now
let i being Nat;
assume A109: (1 <= i & i <= ( len f1 ));
A110: i in ( NAT ) by ORDINAL1:def 12;
hence ( f1 . i ) = ( t . ( intpos ( m + i ) ) ) by A104,A109,CKB1:def 1
.= ( ( IExec (WH,Q,( Initialize t )) ) . ( intpos ( m + i ) ) ) by A107,T,SCMPDS_8:23
.= ( f2 . i ) by A105,A106,A110,A109,CKB1:def 1,T;
end;
hence f1,f2 are_fiberwise_equipotent  by A106,FINSEQ_1:14;
thus f2 is_non_decreasing_on 1,( ( 0 ) + 1 ) by GRAPH_2:63;
thus (for i being (Element of ( NAT )) holds ((i > ( ( 0 ) + 1 ) & i <= ( len f1 )) implies ( f1 . i ) = ( f2 . i ))) by A108;
f1 = f2 by A106,A108,FINSEQ_1:14;
hence thesis;
end;
A111: (for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A102,A3);
assume ((( len f ) = ( len g ) & ( len f ) > n) & f is_non_decreasing_on 1,n);
hence thesis by A1,A2,A111;
end;
