environ
vocabularies NUMBERS,SCMPDS_2,SUBSET_1,FINSEQ_1,FSM_1,XXREAL_0,FUNCT_1,SCMP_GCD,ARYTM_3,GRAPH_2,NAT_1,RELAT_1,CLASSES1,AMI_2,AMI_1,SCMFSA6B,SCMPDS_4,UNIALG_2,SCMFSA7B,TURING_1,SCMFSA_7,INT_1,CARD_1,SCMPDS_7,AMI_3,ARYTM_1,VALUED_1,TARSKI,FUNCT_4,CIRCUIT2,GRAPHSP,MSUALG_1,XBOOLE_0,SCMISORT,SCMFSA_9,SCMFSA8B,COMPLEX1,SCPISORT,ORDINAL1,SCMNORM,SCMFSA6C,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FUNCT_1,PARTFUN1,VALUED_1,XCMPLX_0,FUNCT_4,INT_1,NAT_1,COMPLEX1,MEMSTR_0,EXTPRO_1,COMPOS_1,AMI_2,SCMPDS_2,SCMPDS_4,SCMPDS_5,SCMPDS_6,SCMP_GCD,DOMAIN_1,FINSEQ_1,SCMPDS_7,SCMPDS_8,GRAPH_2,CLASSES1,XXREAL_0,CKB1;
definitions SCMPDS_2,SCMP_GCD,AMI_3,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB1;
theorems AMI_3,NAT_1,TARSKI,FUNCT_4,INT_1,SCMPDS_2,GRFUNC_1,SCMPDS_4,SCMPDS_5,SCMPDS_6,ENUMSET1,SCMP_GCD,SCMPDS_7,SCMPDS_8,ABSVALUE,FINSEQ_1,FINSEQ_2,RFINSEQ,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,GRAPH_2,ZFMISC_1,FINSEQ_3,CLASSES1,AFINSQ_1,COMPOS_1,EXTPRO_1,PBOOLE,MEMSTR_0,CKB1,CKB2,CKB3;
schemes NAT_1,FINSEQ_1;
registrations SETFAM_1,RELAT_1,FUNCT_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,SCMPDS_2,SCMPDS_4,SCMPDS_5,SCMPDS_6,SCMPDS_7,SCMPDS_8,XBOOLE_0,VALUED_0,ORDINAL1,CARD_1,VALUED_1,GRFUNC_1,COMPOS_1,AFINSQ_1,EXTPRO_1,FUNCT_4,MEMSTR_0,RELSET_1;
constructors DOMAIN_1,XXREAL_0,REAL_1,INT_2,SCM_1,SCMPDS_4,SCMPDS_5,SCMPDS_6,SCMP_GCD,SCMPDS_7,SCMPDS_8,CLASSES1,PRE_POLY,GRAPH_2,AMI_2,MEMSTR_0,RELSET_1,CKB1;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve n for (Element of ( NAT ));
theorem
Th4: (for f,g being (FinSequence of ( INT )) holds (for m,n being (Element of ( NAT )) holds ((((((((1 <= n & n <= ( len f )) & 1 <= m) & m <= ( len f )) & ( len f ) = ( len g )) & ( f . m ) = ( g . n )) & ( f . n ) = ( g . m )) & (for k being (Element of ( NAT )) holds ((((k <> m & k <> n) & 1 <= k) & k <= ( len f )) implies ( f . k ) = ( g . k )))) implies f,g are_fiberwise_equipotent )))
proof
let f being (FinSequence of ( INT ));
let g being (FinSequence of ( INT ));
let m being (Element of ( NAT ));
let n being (Element of ( NAT ));
assume that
A1: (1 <= n & n <= ( len f ))
and
A2: (1 <= m & m <= ( len f ))
and
A3: ( len f ) = ( len g )
and
A4: (( f . m ) = ( g . n ) & ( f . n ) = ( g . m ))
and
A5: (for k being (Element of ( NAT )) holds ((((k <> m & k <> n) & 1 <= k) & k <= ( len f )) implies ( f . k ) = ( g . k )));
A6: m in ( Seg ( len f ) ) by A2,FINSEQ_1:1;
A7: ( Seg ( len f ) ) = ( dom f ) by FINSEQ_1:def 3;
A8:now
let k being set;
assume that
A9: (k <> m & k <> n)
and
A10: k in ( dom f );
reconsider i = k as (Element of ( NAT )) by A10;
(1 <= i & i <= ( len f )) by A7,A10,FINSEQ_1:1;
hence ( f . k ) = ( g . k ) by A5,A9;
end;
(n in ( dom f ) & ( dom f ) = ( dom g )) by A1,A3,A7,FINSEQ_1:1,FINSEQ_1:def 3;
hence thesis by A4,A7,A6,A8,RFINSEQ:28;
end;
