environ
vocabularies NUMBERS,SCMPDS_2,SUBSET_1,FINSEQ_1,FSM_1,XXREAL_0,FUNCT_1,SCMP_GCD,ARYTM_3,GRAPH_2,NAT_1,RELAT_1,CLASSES1,AMI_2,AMI_1,SCMFSA6B,SCMPDS_4,UNIALG_2,SCMFSA7B,TURING_1,SCMFSA_7,INT_1,CARD_1,SCMPDS_7,AMI_3,ARYTM_1,VALUED_1,TARSKI,FUNCT_4,CIRCUIT2,GRAPHSP,MSUALG_1,XBOOLE_0,SCMISORT,SCMFSA_9,SCMFSA8B,COMPLEX1,SCPISORT,ORDINAL1,SCMNORM,SCMFSA6C,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FUNCT_1,PARTFUN1,VALUED_1,XCMPLX_0,FUNCT_4,INT_1,NAT_1,COMPLEX1,MEMSTR_0,EXTPRO_1,COMPOS_1,AMI_2,SCMPDS_2,SCMPDS_4,SCMPDS_5,SCMPDS_6,SCMP_GCD,DOMAIN_1,FINSEQ_1,SCMPDS_7,SCMPDS_8,GRAPH_2,CLASSES1,XXREAL_0,CKB1,CKB21;
definitions SCMPDS_2,SCMP_GCD,AMI_3,COMPOS_1,EXTPRO_1,MEMSTR_0,CKB1,CKB21;
theorems AMI_3,NAT_1,TARSKI,FUNCT_4,INT_1,SCMPDS_2,GRFUNC_1,SCMPDS_4,SCMPDS_5,SCMPDS_6,ENUMSET1,SCMP_GCD,SCMPDS_7,SCMPDS_8,ABSVALUE,FINSEQ_1,FINSEQ_2,RFINSEQ,XBOOLE_1,XREAL_1,ORDINAL1,XXREAL_0,GRAPH_2,ZFMISC_1,FINSEQ_3,CLASSES1,AFINSQ_1,COMPOS_1,EXTPRO_1,PBOOLE,MEMSTR_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes NAT_1,FINSEQ_1,CKB15,CKB16,CKB17;
registrations SETFAM_1,RELAT_1,FUNCT_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,SCMPDS_2,SCMPDS_4,SCMPDS_5,SCMPDS_6,SCMPDS_7,SCMPDS_8,XBOOLE_0,VALUED_0,ORDINAL1,CARD_1,VALUED_1,GRFUNC_1,COMPOS_1,AFINSQ_1,EXTPRO_1,FUNCT_4,MEMSTR_0,RELSET_1;
constructors DOMAIN_1,XXREAL_0,REAL_1,INT_2,SCM_1,SCMPDS_4,SCMPDS_5,SCMPDS_6,SCMP_GCD,SCMPDS_7,SCMPDS_8,CLASSES1,PRE_POLY,GRAPH_2,AMI_2,MEMSTR_0,RELSET_1,CKB1,CKB21;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve x for Int_position;
reserve n for (Element of ( NAT ));
reserve p0 for (Element of ( NAT ));
reserve P for (Instruction-Sequence of ( SCMPDS ));
reserve Q for (Instruction-Sequence of ( SCMPDS ));
reserve V for (Instruction-Sequence of ( SCMPDS ));
set j1 = ( AddTo (( GBP ),3,1) );
set j2 = ( (( GBP ),4) := (( GBP ),3) );
set j3 = ( AddTo (( GBP ),1,1) );
set j4 = ( (( GBP ),6) := (( GBP ),1) );
set k1 = ( (( GBP ),5) := (( intpos 4 ),( - 1 )) );
set k2 = ( SubFrom (( GBP ),5,( intpos 4 ),( 0 )) );
set k3 = ( (( GBP ),5) := (( intpos 4 ),( - 1 )) );
set k4 = ( (( intpos 4 ),( - 1 )) := (( intpos 4 ),( 0 )) );
set k5 = ( (( intpos 4 ),( 0 )) := (( GBP ),5) );
set k6 = ( AddTo (( GBP ),4,( - 1 )) );
set k7 = ( AddTo (( GBP ),6,( - 1 )) );
set FA = ( Load ( (( GBP ),6) := ( 0 ) ) );
set TR = ( ( ( ( ( (( GBP ),5) := (( intpos 4 ),( - 1 )) ) ';' ( (( intpos 4 ),( - 1 )) := (( intpos 4 ),( 0 )) ) ) ';' ( (( intpos 4 ),( 0 )) := (( GBP ),5) ) ) ';' ( AddTo (( GBP ),4,( - 1 )) ) ) ';' ( AddTo (( GBP ),6,( - 1 )) ) );
set IF = ( if>0 (( GBP ),5,TR,FA) );
set B1 = ( ( ( (( GBP ),5) := (( intpos 4 ),( - 1 )) ) ';' ( SubFrom (( GBP ),5,( intpos 4 ),( 0 )) ) ) ';' ( if>0 (( GBP ),5,TR,FA) ) );
set WH = ( while>0 (( GBP ),6,B1) );
set J4 = ( ( ( j1 ';' j2 ) ';' j3 ) ';' j4 );
set B2 = ( J4 ';' WH );
set FR = ( for-down (( GBP ),2,1,B2) );
set a1 = ( intpos 1 );
set a2 = ( intpos 2 );
set a3 = ( intpos 3 );
set a4 = ( intpos 4 );
set a5 = ( intpos 5 );
set a6 = ( intpos 6 );
Lm7: (for s being ( 0 ) -started (State of ( SCMPDS )) holds (((( s . a4 ) >= ( 7 + ( s . a6 ) ) & ( s . ( GBP ) ) = ( 0 )) & ( s . a6 ) > ( 0 )) implies (( ( IExec (B1,P,s) ) . ( GBP ) ) = ( 0 ) & ( ( IExec (B1,P,s) ) . a1 ) = ( s . a1 ))))
proof
let s being ( 0 ) -started (State of ( SCMPDS ));
set a = ( GBP );
set x = ( DataLoc (( s . a4 ),( - 1 )) );
set y = ( DataLoc (( s . a4 ),( 0 )) );
assume that
A1: ( s . a4 ) >= ( 7 + ( s . a6 ) )
and
A2: ( s . a ) = ( 0 )
and
A3: ( s . a6 ) > ( 0 );
A4: ( 7 + ( s . a6 ) ) > ( 7 + ( 0 ) ) by A3,XREAL_1:6;
set t0 = s;
set t1 = ( Exec (k1,t0) );
set t2 = ( IExec (( k1 ';' k2 ),P,s) );
set Q2 = P;
A6: ( DataLoc (( t0 . a ),5) ) = ( intpos ( ( 0 ) + 5 ) ) by A2,SCMP_GCD:1;
then A7: ( t1 . a ) = ( 0 ) by A2,AMI_3:10,SCMPDS_2:47;
then A8: ( DataLoc (( t1 . a ),5) ) = ( intpos ( ( 0 ) + 5 ) ) by SCMP_GCD:1;
A9: ( t1 . a4 ) = ( s . a4 ) by A6,AMI_3:10,SCMPDS_2:47;
A10: ( s . a4 ) >= ( 1 + ( 6 + ( s . a6 ) ) ) by A1;
then A11: ( ( s . a4 ) - 1 ) >= ( 6 + ( s . a6 ) ) by XREAL_1:19;
set Fi = ( (a,6) := ( 0 ) );
set t02 = ( Initialize t2 );
set Q02 = Q2;
set t3 = ( IExec (( ( ( k3 ';' k4 ) ';' k5 ) ';' k6 ),Q2,( Initialize t2 )) );
set t4 = ( IExec (( ( k3 ';' k4 ) ';' k5 ),Q2,( Initialize t2 )) );
set t5 = ( IExec (( k3 ';' k4 ),Q2,( Initialize t2 )) );
set t6 = ( Exec (k3,t02) );
( t2 . a ) = ( ( Exec (k2,t1) ) . a ) by SCMPDS_5:42
.= ( 0 ) by A7,A8,AMI_3:10,SCMPDS_2:50;
then A15: ( t02 . a ) = ( 0 ) by SCMPDS_5:15;
then A16: ( DataLoc (( t02 . a ),5) ) = ( intpos ( ( 0 ) + 5 ) ) by SCMP_GCD:1;
then A17: ( t6 . a ) = ( 0 ) by A15,AMI_3:10,SCMPDS_2:47;
( t2 . a4 ) = ( ( Exec (k2,t1) ) . a4 ) by SCMPDS_5:42
.= ( s . a4 ) by A9,A8,AMI_3:10,SCMPDS_2:50;
then ( t02 . a4 ) = ( s . a4 ) by SCMPDS_5:15;
then A18: ( t6 . a4 ) = ( s . a4 ) by A16,AMI_3:10,SCMPDS_2:47;
A19: ( 6 + ( s . a6 ) ) > ( 6 + ( 0 ) ) by A3,XREAL_1:6;
then ( 0 ) <> ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by A11,A18,ABSVALUE:def 1;
then A20: a <> ( DataLoc (( t6 . a4 ),( - 1 )) ) by ZFMISC_1:27;
( ( s . a4 ) - 1 ) > ( 0 ) by A3,A10,XREAL_1:19;
then A21: ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) = ( ( s . a4 ) - 1 ) by A18,ABSVALUE:def 1;
then 4 <> ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by A11,A19,XXREAL_0:2;
then A22: a4 <> ( DataLoc (( t6 . a4 ),( - 1 )) ) by ZFMISC_1:27;
A24: ( t5 . a4 ) = ( ( Exec (k4,t6) ) . a4 ) by SCMPDS_5:42
.= ( s . a4 ) by A18,A22,SCMPDS_2:47;
then ( 0 ) <> ( abs ( ( t5 . a4 ) + ( 0 ) ) ) by A1,A4,ABSVALUE:def 1;
then A25: a <> ( DataLoc (( t5 . a4 ),( 0 )) ) by ZFMISC_1:27;
A26: ( t5 . a ) = ( ( Exec (k4,t6) ) . a ) by SCMPDS_5:42
.= ( 0 ) by A17,A20,SCMPDS_2:47;
A27: ( t4 . a ) = ( ( Exec (k5,t5) ) . a ) by SCMPDS_5:41
.= ( 0 ) by A26,A25,SCMPDS_2:47;
then A28: a <> ( DataLoc (( t4 . a ),4) ) by AMI_3:10,SCMP_GCD:1;
A29: ( t1 . a1 ) = ( s . a1 ) by A6,AMI_3:10,SCMPDS_2:47;
( t2 . a1 ) = ( ( Exec (k2,t1) ) . a1 ) by SCMPDS_5:42
.= ( s . a1 ) by A29,A8,AMI_3:10,SCMPDS_2:50;
then A30: ( t02 . a1 ) = ( s . a1 ) by SCMPDS_5:15;
then A31: ( t6 . a1 ) = ( s . a1 ) by A16,AMI_3:10,SCMPDS_2:47;
A32: ( t3 . a ) = ( ( Exec (k6,t4) ) . a ) by SCMPDS_5:41
.= ( 0 ) by A27,A28,SCMPDS_2:48;
then A33: ( DataLoc (( t3 . a ),6) ) = ( intpos ( ( 0 ) + 6 ) ) by SCMP_GCD:1;
A34: ( DataLoc (( t02 . a ),6) ) = ( intpos ( ( 0 ) + 6 ) ) by A15,SCMP_GCD:1;
now
per cases ;
suppose ( ( Initialize t2 ) . ( DataLoc (( ( Initialize t2 ) . a ),5) ) ) <= ( 0 );

hence ( ( IExec (IF,Q2,( Initialize t2 )) ) . a ) = ( ( IExec (FA,Q2,( Initialize t2 )) ) . a ) by SCMPDS_6:74
.= ( ( Exec (Fi,t02) ) . a ) by SCMPDS_5:40
.= ( 0 ) by A15,A34,AMI_3:10,SCMPDS_2:46;
end;
suppose ( ( Initialize t2 ) . ( DataLoc (( ( Initialize t2 ) . a ),5) ) ) > ( 0 );

hence ( ( IExec (IF,Q2,( Initialize t2 )) ) . a ) = ( ( IExec (TR,Q2,( Initialize t2 )) ) . a ) by SCMPDS_6:73
.= ( ( Exec (k7,t3) ) . a ) by SCMPDS_5:41
.= ( 0 ) by A32,A33,AMI_3:10,SCMPDS_2:48;
end;
end;
hence ( ( IExec (B1,P,s) ) . a ) = ( 0 ) by SCMPDS_5:35;
A36: a1 <> ( DataLoc (( t4 . a ),4) ) by A27,AMI_3:10,SCMP_GCD:1;
( abs ( ( t5 . a4 ) + ( 0 ) ) ) = ( s . a4 ) by A1,A4,A24,ABSVALUE:def 1;
then 1 <> ( abs ( ( t5 . a4 ) + ( 0 ) ) ) by A1,A4,XXREAL_0:2;
then A37: a1 <> ( DataLoc (( t5 . a4 ),( 0 )) ) by ZFMISC_1:27;
1 <> ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by A11,A19,A21,XXREAL_0:2;
then A38: a1 <> ( DataLoc (( t6 . a4 ),( - 1 )) ) by ZFMISC_1:27;
A39: ( t5 . a1 ) = ( ( Exec (k4,t6) ) . a1 ) by SCMPDS_5:42
.= ( s . a1 ) by A31,A38,SCMPDS_2:47;
A40: ( t4 . a1 ) = ( ( Exec (k5,t5) ) . a1 ) by SCMPDS_5:41
.= ( s . a1 ) by A39,A37,SCMPDS_2:47;
A41: ( t3 . a1 ) = ( ( Exec (k6,t4) ) . a1 ) by SCMPDS_5:41
.= ( s . a1 ) by A40,A36,SCMPDS_2:48;
now
per cases ;
suppose ( ( Initialize t2 ) . ( DataLoc (( ( Initialize t2 ) . a ),5) ) ) <= ( 0 );

hence ( ( IExec (IF,Q2,( Initialize t2 )) ) . a1 ) = ( ( IExec (FA,Q2,( Initialize t2 )) ) . a1 ) by SCMPDS_6:74
.= ( ( Exec (Fi,t02) ) . a1 ) by SCMPDS_5:40
.= ( s . a1 ) by A30,A34,AMI_3:10,SCMPDS_2:46;
end;
suppose ( ( Initialize t2 ) . ( DataLoc (( ( Initialize t2 ) . a ),5) ) ) > ( 0 );

hence ( ( IExec (IF,Q2,( Initialize t2 )) ) . a1 ) = ( ( IExec (TR,Q2,( Initialize t2 )) ) . a1 ) by SCMPDS_6:73
.= ( ( Exec (k7,t3) ) . a1 ) by SCMPDS_5:41
.= ( s . a1 ) by A41,A33,AMI_3:10,SCMPDS_2:48;
end;
end;
hence thesis by SCMPDS_5:35;
end;
Lm8: (for s being ( 0 ) -started (State of ( SCMPDS )) holds (((( s . a4 ) >= ( 7 + ( s . a6 ) ) & ( s . ( GBP ) ) = ( 0 )) & ( s . a6 ) > ( 0 )) implies ((((((( ( IExec (B1,P,s) ) . a2 ) = ( s . a2 ) & ( ( IExec (B1,P,s) ) . a3 ) = ( s . a3 )) & ( ( IExec (B1,P,s) ) . a6 ) < ( s . a6 )) & ( ( IExec (B1,P,s) ) . a4 ) >= ( 7 + ( ( IExec (B1,P,s) ) . a6 ) )) & (for i being Nat holds (((i >= 7 & i <> ( ( s . a4 ) - 1 )) & i <> ( s . a4 )) implies ( ( IExec (B1,P,s) ) . ( intpos i ) ) = ( s . ( intpos i ) )))) & (( s . ( DataLoc (( s . a4 ),( - 1 )) ) ) > ( s . ( DataLoc (( s . a4 ),( 0 )) ) ) implies (((( ( IExec (B1,P,s) ) . ( DataLoc (( s . a4 ),( - 1 )) ) ) = ( s . ( DataLoc (( s . a4 ),( 0 )) ) ) & ( ( IExec (B1,P,s) ) . ( DataLoc (( s . a4 ),( 0 )) ) ) = ( s . ( DataLoc (( s . a4 ),( - 1 )) ) )) & ( ( IExec (B1,P,s) ) . a6 ) = ( ( s . a6 ) - 1 )) & ( ( IExec (B1,P,s) ) . a4 ) = ( ( s . a4 ) - 1 )))) & (( s . ( DataLoc (( s . a4 ),( - 1 )) ) ) <= ( s . ( DataLoc (( s . a4 ),( 0 )) ) ) implies ((( ( IExec (B1,P,s) ) . ( DataLoc (( s . a4 ),( - 1 )) ) ) = ( s . ( DataLoc (( s . a4 ),( - 1 )) ) ) & ( ( IExec (B1,P,s) ) . ( DataLoc (( s . a4 ),( 0 )) ) ) = ( s . ( DataLoc (( s . a4 ),( 0 )) ) )) & ( ( IExec (B1,P,s) ) . a6 ) = ( 0 ))))))
proof
let s being ( 0 ) -started (State of ( SCMPDS ));
set a = ( GBP );
set x = ( DataLoc (( s . a4 ),( - 1 )) );
set y = ( DataLoc (( s . a4 ),( 0 )) );
assume that
A1: ( s . a4 ) >= ( 7 + ( s . a6 ) )
and
A2: ( s . a ) = ( 0 )
and
A3: ( s . a6 ) > ( 0 );
set t0 = s;
set t1 = ( Exec (k1,t0) );
set t2 = ( IExec (( k1 ';' k2 ),P,s) );
set Q2 = P;
A4: ( 7 + ( s . a6 ) ) > ( 7 + ( 0 ) ) by A3,XREAL_1:6;
then A5: ( abs ( s . a4 ) ) = ( s . a4 ) by A1,ABSVALUE:def 1;
set Fi = ( (a,6) := ( 0 ) );
set t02 = ( Initialize t2 );
set Q02 = Q2;
set t3 = ( IExec (( ( ( k3 ';' k4 ) ';' k5 ) ';' k6 ),Q2,( Initialize t2 )) );
set t4 = ( IExec (( ( k3 ';' k4 ) ';' k5 ),Q2,( Initialize t2 )) );
set t5 = ( IExec (( k3 ';' k4 ),Q2,( Initialize t2 )) );
set t6 = ( Exec (k3,t02) );
A12: ( DataLoc (( t0 . a ),5) ) = ( intpos ( ( 0 ) + 5 ) ) by A2,SCMP_GCD:1;
then A13: ( t1 . a ) = ( 0 ) by A2,AMI_3:10,SCMPDS_2:47;
then A14: ( DataLoc (( t1 . a ),5) ) = ( intpos ( ( 0 ) + 5 ) ) by SCMP_GCD:1;
then A15: ( abs ( ( t1 . a ) + 5 ) ) = ( ( 0 ) + 5 ) by ZFMISC_1:27;
then ( abs ( ( s . a4 ) + ( 0 ) ) ) <> ( abs ( ( t1 . a ) + 5 ) ) by A1,A4,A5,XXREAL_0:2;
then A16: y <> ( DataLoc (( t1 . a ),5) ) by ZFMISC_1:27;
A17: ( abs ( ( t0 . a ) + 5 ) ) = ( ( 0 ) + 5 ) by A12,ZFMISC_1:27;
then ( abs ( ( s . a4 ) + ( 0 ) ) ) <> ( abs ( ( t0 . a ) + 5 ) ) by A1,A4,A5,XXREAL_0:2;
then (( t0 . y ) = ( s . y ) & y <> ( DataLoc (( t0 . a ),5) )) by ZFMISC_1:27;
then A18: ( t1 . y ) = ( s . y ) by SCMPDS_2:47;
A20: ( t1 . a5 ) = ( s . x ) by A12,SCMPDS_2:47;
A21: ( t1 . a4 ) = ( s . a4 ) by A12,AMI_3:10,SCMPDS_2:47;
( t2 . y ) = ( ( Exec (k2,t1) ) . y ) by SCMPDS_5:42
.= ( s . y ) by A18,A16,SCMPDS_2:50;
then A22: ( t02 . y ) = ( s . y ) by SCMPDS_5:15;
A23: ( t02 . a ) = ( t2 . a ) by SCMPDS_5:15
.= ( ( Exec (k2,t1) ) . a ) by SCMPDS_5:42
.= ( 0 ) by A13,A14,AMI_3:10,SCMPDS_2:50;
A25: ( DataLoc (( t02 . a ),5) ) = ( intpos ( ( 0 ) + 5 ) ) by A23,SCMP_GCD:1;
then A26: ( t6 . a ) = ( 0 ) by A23,AMI_3:10,SCMPDS_2:47;
( abs ( ( t02 . a ) + 5 ) ) = ( ( 0 ) + 5 ) by A25,ZFMISC_1:27;
then ( abs ( ( s . a4 ) + ( 0 ) ) ) <> ( abs ( ( t02 . a ) + 5 ) ) by A1,A4,A5,XXREAL_0:2;
then y <> ( DataLoc (( t02 . a ),5) ) by ZFMISC_1:27;
then A27: ( t6 . y ) = ( s . y ) by A22,SCMPDS_2:47;
( t2 . a4 ) = ( ( Exec (k2,t1) ) . a4 ) by SCMPDS_5:42
.= ( s . a4 ) by A21,A14,AMI_3:10,SCMPDS_2:50;
then A28: ( t02 . a4 ) = ( s . a4 ) by SCMPDS_5:15;
then A29: ( t6 . a4 ) = ( s . a4 ) by A25,AMI_3:10,SCMPDS_2:47;
then A30: ( t5 . x ) = ( ( Exec (k4,t6) ) . ( DataLoc (( t6 . a4 ),( - 1 )) ) ) by SCMPDS_5:42
.= ( s . y ) by A29,A27,SCMPDS_2:47;
A31: ( t1 . a3 ) = ( s . a3 ) by A12,AMI_3:10,SCMPDS_2:47;
( t2 . a3 ) = ( ( Exec (k2,t1) ) . a3 ) by SCMPDS_5:42
.= ( s . a3 ) by A31,A14,AMI_3:10,SCMPDS_2:50;
then A32: ( t02 . a3 ) = ( s . a3 ) by SCMPDS_5:15;
then A33: ( t6 . a3 ) = ( s . a3 ) by A25,AMI_3:10,SCMPDS_2:47;
A34: ( s . a4 ) >= ( 1 + ( 6 + ( s . a6 ) ) ) by A1;
then A35: ( ( s . a4 ) - 1 ) >= ( 6 + ( s . a6 ) ) by XREAL_1:19;
A36: ( t1 . a2 ) = ( s . a2 ) by A12,AMI_3:10,SCMPDS_2:47;
( t2 . a2 ) = ( ( Exec (k2,t1) ) . a2 ) by SCMPDS_5:42
.= ( s . a2 ) by A36,A14,AMI_3:10,SCMPDS_2:50;
then A37: ( t02 . a2 ) = ( s . a2 ) by SCMPDS_5:15;
then A38: ( t6 . a2 ) = ( s . a2 ) by A25,AMI_3:10,SCMPDS_2:47;
A39: ( t1 . a6 ) = ( s . a6 ) by A12,AMI_3:10,SCMPDS_2:47;
( t2 . a6 ) = ( ( Exec (k2,t1) ) . a6 ) by SCMPDS_5:42
.= ( s . a6 ) by A39,A14,AMI_3:10,SCMPDS_2:50;
then ( t02 . a6 ) = ( s . a6 ) by SCMPDS_5:15;
then A40: ( t6 . a6 ) = ( s . a6 ) by A25,AMI_3:10,SCMPDS_2:47;
A41: ( DataLoc (( t02 . a ),6) ) = ( intpos ( ( 0 ) + 6 ) ) by A23,SCMP_GCD:1;
A42:now
assume ( t02 . ( DataLoc (( t02 . a ),5) ) ) <= ( 0 );
then ( ( IExec (IF,Q2,( Initialize t2 )) ) . a6 ) = ( ( IExec (FA,Q2,( Initialize t2 )) ) . a6 ) by SCMPDS_6:74
.= ( ( Exec (Fi,t02) ) . a6 ) by SCMPDS_5:40
.= ( 0 ) by A41,SCMPDS_2:46;
hence ( ( IExec (B1,P,s) ) . a6 ) = ( 0 ) by SCMPDS_5:35;
end;
A43: ( 6 + ( s . a6 ) ) > ( 6 + ( 0 ) ) by A3,XREAL_1:6;
then ( 0 ) <> ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by A35,A29,ABSVALUE:def 1;
then A44: a <> ( DataLoc (( t6 . a4 ),( - 1 )) ) by ZFMISC_1:27;
A45: ( ( s . a4 ) - 1 ) > ( 0 ) by A3,A34,XREAL_1:19;
then A46: ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) = ( ( s . a4 ) - 1 ) by A29,ABSVALUE:def 1;
then 4 <> ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by A35,A43,XXREAL_0:2;
then A47: a4 <> ( DataLoc (( t6 . a4 ),( - 1 )) ) by ZFMISC_1:27;
A48: ( t5 . a4 ) = ( ( Exec (k4,t6) ) . a4 ) by SCMPDS_5:42
.= ( s . a4 ) by A29,A47,SCMPDS_2:47;
then A49: ( abs ( ( t5 . a4 ) + ( 0 ) ) ) = ( s . a4 ) by A1,A4,ABSVALUE:def 1;
then 4 <> ( abs ( ( t5 . a4 ) + ( 0 ) ) ) by A1,A4,XXREAL_0:2;
then A50: a4 <> ( DataLoc (( t5 . a4 ),( 0 )) ) by ZFMISC_1:27;
3 <> ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by A35,A43,A46,XXREAL_0:2;
then A51: a3 <> ( DataLoc (( t6 . a4 ),( - 1 )) ) by ZFMISC_1:27;
3 <> ( abs ( ( t5 . a4 ) + ( 0 ) ) ) by A1,A4,A49,XXREAL_0:2;
then A52: a3 <> ( DataLoc (( t5 . a4 ),( 0 )) ) by ZFMISC_1:27;
A53: ( t5 . a3 ) = ( ( Exec (k4,t6) ) . a3 ) by SCMPDS_5:42
.= ( s . a3 ) by A33,A51,SCMPDS_2:47;
A54: ( t4 . a3 ) = ( ( Exec (k5,t5) ) . a3 ) by SCMPDS_5:41
.= ( s . a3 ) by A53,A52,SCMPDS_2:47;
2 <> ( abs ( ( t5 . a4 ) + ( 0 ) ) ) by A1,A4,A49,XXREAL_0:2;
then A55: a2 <> ( DataLoc (( t5 . a4 ),( 0 )) ) by ZFMISC_1:27;
A56: ( t4 . a4 ) = ( ( Exec (k5,t5) ) . a4 ) by SCMPDS_5:41
.= ( s . a4 ) by A48,A50,SCMPDS_2:47;
A57: ( t5 . a ) = ( ( Exec (k4,t6) ) . a ) by SCMPDS_5:42
.= ( 0 ) by A26,A44,SCMPDS_2:47;
A58: ( ( 2 * ( abs ( ( s . a4 ) + ( - 1 ) ) ) ) + 1 ) = ( ( 2 * ( ( s . a4 ) - 1 ) ) + 1 ) by A35,A43,ABSVALUE:def 1;
then ( abs ( ( s . a4 ) + ( - 1 ) ) ) <> ( abs ( ( t1 . a ) + 5 ) ) by A3,A35,A15,XREAL_1:6;
then A59: x <> ( DataLoc (( t1 . a ),5) ) by ZFMISC_1:27;
( 0 ) <> ( abs ( ( t5 . a4 ) + ( 0 ) ) ) by A1,A4,A48,ABSVALUE:def 1;
then A60: a <> ( DataLoc (( t5 . a4 ),( 0 )) ) by ZFMISC_1:27;
A61: ( t4 . a ) = ( ( Exec (k5,t5) ) . a ) by SCMPDS_5:41
.= ( 0 ) by A57,A60,SCMPDS_2:47;
then A62: a <> ( DataLoc (( t4 . a ),4) ) by AMI_3:10,SCMP_GCD:1;
2 <> ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by A35,A43,A46,XXREAL_0:2;
then A63: a2 <> ( DataLoc (( t6 . a4 ),( - 1 )) ) by ZFMISC_1:27;
A64: ( t5 . a2 ) = ( ( Exec (k4,t6) ) . a2 ) by SCMPDS_5:42
.= ( s . a2 ) by A38,A63,SCMPDS_2:47;
A65: ( t4 . a2 ) = ( ( Exec (k5,t5) ) . a2 ) by SCMPDS_5:41
.= ( s . a2 ) by A64,A55,SCMPDS_2:47;
A66: a2 <> ( DataLoc (( t4 . a ),4) ) by A61,AMI_3:10,SCMP_GCD:1;
( t3 . a ) = ( ( Exec (k6,t4) ) . a ) by SCMPDS_5:41
.= ( 0 ) by A61,A62,SCMPDS_2:48;
then A67: ( DataLoc (( t3 . a ),6) ) = ( intpos ( ( 0 ) + 6 ) ) by SCMP_GCD:1;
then A68: ( abs ( ( t3 . a ) + 6 ) ) = ( ( 0 ) + 6 ) by ZFMISC_1:27;
A69: ( DataLoc (( t4 . a ),4) ) = ( intpos ( ( 0 ) + 4 ) ) by A61,SCMP_GCD:1;
then A70: ( abs ( ( t4 . a ) + 4 ) ) = ( ( 0 ) + 4 ) by ZFMISC_1:27;
then ( abs ( ( s . a4 ) + ( - 1 ) ) ) <> ( abs ( ( t4 . a ) + 4 ) ) by A35,A43,A58,XXREAL_0:2;
then A71: x <> ( DataLoc (( t4 . a ),4) ) by ZFMISC_1:27;
A72: ( t3 . a2 ) = ( ( Exec (k6,t4) ) . a2 ) by SCMPDS_5:41
.= ( s . a2 ) by A65,A66,SCMPDS_2:48;
now
per cases ;
suppose ( t02 . ( DataLoc (( t02 . a ),5) ) ) <= ( 0 );

hence ( ( IExec (IF,Q2,( Initialize t2 )) ) . a2 ) = ( ( IExec (FA,Q2,( Initialize t2 )) ) . a2 ) by SCMPDS_6:74
.= ( ( Exec (Fi,t02) ) . a2 ) by SCMPDS_5:40
.= ( s . a2 ) by A37,A41,AMI_3:10,SCMPDS_2:46;
end;
suppose ( t02 . ( DataLoc (( t02 . a ),5) ) ) > ( 0 );

hence ( ( IExec (IF,Q2,( Initialize t2 )) ) . a2 ) = ( ( IExec (TR,Q2,( Initialize t2 )) ) . a2 ) by SCMPDS_6:73
.= ( ( Exec (k7,t3) ) . a2 ) by SCMPDS_5:41
.= ( s . a2 ) by A72,A67,AMI_3:10,SCMPDS_2:48;
end;
end;
hence ( ( IExec (B1,P,s) ) . a2 ) = ( s . a2 ) by SCMPDS_5:35;
A74: a3 <> ( DataLoc (( t4 . a ),4) ) by A61,AMI_3:10,SCMP_GCD:1;
A75: ( t3 . a3 ) = ( ( Exec (k6,t4) ) . a3 ) by SCMPDS_5:41
.= ( s . a3 ) by A54,A74,SCMPDS_2:48;
now
per cases ;
suppose ( t02 . ( DataLoc (( t02 . a ),5) ) ) <= ( 0 );

hence ( ( IExec (IF,Q2,( Initialize t2 )) ) . a3 ) = ( ( IExec (FA,Q2,( Initialize t2 )) ) . a3 ) by SCMPDS_6:74
.= ( ( Exec (Fi,t02) ) . a3 ) by SCMPDS_5:40
.= ( s . a3 ) by A32,A41,AMI_3:10,SCMPDS_2:46;
end;
suppose ( t02 . ( DataLoc (( t02 . a ),5) ) ) > ( 0 );

hence ( ( IExec (IF,Q2,( Initialize t2 )) ) . a3 ) = ( ( IExec (TR,Q2,( Initialize t2 )) ) . a3 ) by SCMPDS_6:73
.= ( ( Exec (k7,t3) ) . a3 ) by SCMPDS_5:41
.= ( s . a3 ) by A75,A67,AMI_3:10,SCMPDS_2:48;
end;
end;
hence ( ( IExec (B1,P,s) ) . a3 ) = ( s . a3 ) by SCMPDS_5:35;
A76: a6 <> ( DataLoc (( t4 . a ),4) ) by A61,AMI_3:10,SCMP_GCD:1;
6 <> ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by A34,A43,A46,XREAL_1:19;
then A77: a6 <> ( DataLoc (( t6 . a4 ),( - 1 )) ) by ZFMISC_1:27;
A78: ( t5 . a6 ) = ( ( Exec (k4,t6) ) . a6 ) by SCMPDS_5:42
.= ( s . a6 ) by A40,A77,SCMPDS_2:47;
6 <> ( abs ( ( t5 . a4 ) + ( 0 ) ) ) by A1,A4,A49,XXREAL_0:2;
then A79: a6 <> ( DataLoc (( t5 . a4 ),( 0 )) ) by ZFMISC_1:27;
A80: ( t4 . a6 ) = ( ( Exec (k5,t5) ) . a6 ) by SCMPDS_5:41
.= ( s . a6 ) by A78,A79,SCMPDS_2:47;
A81: ( t3 . a6 ) = ( ( Exec (k6,t4) ) . a6 ) by SCMPDS_5:41
.= ( s . a6 ) by A80,A76,SCMPDS_2:48;
A82: ( t3 . a4 ) = ( ( Exec (k6,t4) ) . a4 ) by SCMPDS_5:41
.= ( ( t4 . a4 ) + ( - 1 ) ) by A69,SCMPDS_2:48
.= ( ( s . a4 ) - 1 ) by A56;
A83:now
assume A84: ( t02 . ( DataLoc (( t02 . a ),5) ) ) > ( 0 );
then ( ( IExec (IF,Q2,( Initialize t2 )) ) . a6 ) = ( ( IExec (TR,Q2,( Initialize t2 )) ) . a6 ) by SCMPDS_6:73
.= ( ( Exec (k7,t3) ) . a6 ) by SCMPDS_5:41
.= ( ( s . a6 ) + ( - 1 ) ) by A81,A67,SCMPDS_2:48
.= ( ( s . a6 ) - 1 );
hence ( ( IExec (B1,P,s) ) . a6 ) = ( ( s . a6 ) - 1 ) by SCMPDS_5:35;
( ( IExec (IF,Q2,( Initialize t2 )) ) . a4 ) = ( ( IExec (TR,Q2,( Initialize t2 )) ) . a4 ) by A84,SCMPDS_6:73
.= ( ( Exec (k7,t3) ) . a4 ) by SCMPDS_5:41
.= ( ( s . a4 ) - 1 ) by A82,A67,AMI_3:10,SCMPDS_2:48;
hence ( ( IExec (B1,P,s) ) . a4 ) = ( ( s . a4 ) - 1 ) by SCMPDS_5:35;
end;
hereby
per cases ;
suppose ( t02 . ( DataLoc (( t02 . a ),5) ) ) <= ( 0 );

hence ( ( IExec (B1,P,s) ) . a6 ) < ( s . a6 ) by A3,A42;
end;
suppose ( t02 . ( DataLoc (( t02 . a ),5) ) ) > ( 0 );

hence ( ( IExec (B1,P,s) ) . a6 ) < ( s . a6 ) by A83,XREAL_1:146;
end;
end;
hereby
per cases ;
suppose A85: ( t02 . ( DataLoc (( t02 . ( GBP ) ),5) ) ) <= ( 0 );

then ( ( IExec (IF,Q2,( Initialize t2 )) ) . a4 ) = ( ( IExec (FA,Q2,( Initialize t2 )) ) . a4 ) by SCMPDS_6:74
.= ( ( Exec (Fi,t02) ) . a4 ) by SCMPDS_5:40
.= ( s . a4 ) by A28,A41,AMI_3:10,SCMPDS_2:46;
then ( ( IExec (B1,P,s) ) . a4 ) = ( s . a4 ) by SCMPDS_5:35;
hence ( ( IExec (B1,P,s) ) . a4 ) >= ( 7 + ( ( IExec (B1,P,s) ) . a6 ) ) by A1,A4,A42,A85,XXREAL_0:2;
end;
suppose A86: ( t02 . ( DataLoc (( t02 . a ),5) ) ) > ( 0 );

( ( s . a4 ) - 1 ) >= ( ( 7 + ( s . a6 ) ) - 1 ) by A1,XREAL_1:9;
hence ( ( IExec (B1,P,s) ) . a4 ) >= ( 7 + ( ( IExec (B1,P,s) ) . a6 ) ) by A83,A86;
end;
end;
A87:now
let i being (Element of ( NAT ));
assume that
A88: i >= 7
and
i <> ( ( s . a4 ) - 1 )
and
i <> ( s . a4 );
i > 5 by A88,XXREAL_0:2;
hence ( t1 . ( intpos i ) ) = ( s . ( intpos i ) ) by A12,AMI_3:10,SCMPDS_2:47;
end;
A89:now
let i being (Element of ( NAT ));
assume that
A90: i >= 7
and
A91: (i <> ( ( s . a4 ) - 1 ) & i <> ( s . a4 ));
A92: i > 5 by A90,XXREAL_0:2;
thus ( t2 . ( intpos i ) ) = ( ( Exec (k2,t1) ) . ( intpos i ) ) by SCMPDS_5:42
.= ( t1 . ( intpos i ) ) by A14,A92,AMI_3:10,SCMPDS_2:50
.= ( s . ( intpos i ) ) by A87,A90,A91;
end;
A93:now
let i being (Element of ( NAT ));
assume that
A94: i >= 7
and
A95: (i <> ( ( s . a4 ) - 1 ) & i <> ( s . a4 ));
i > 5 by A94,XXREAL_0:2;
hence ( t6 . ( intpos i ) ) = ( t02 . ( intpos i ) ) by A25,AMI_3:10,SCMPDS_2:47
.= ( t2 . ( intpos i ) ) by SCMPDS_5:15
.= ( s . ( intpos i ) ) by A89,A94,A95;
end;
A96:now
let i being (Element of ( NAT ));
assume that
A97: i >= 7
and
A98: i <> ( ( s . a4 ) - 1 )
and
A99: i <> ( s . a4 );
A100: ( intpos i ) <> ( DataLoc (( t6 . a4 ),( - 1 )) )
proof
assume ( intpos i ) = ( DataLoc (( t6 . a4 ),( - 1 )) );
then i = ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by ZFMISC_1:27;
hence contradiction by A45,A29,A98,ABSVALUE:def 1;
end;
thus ( t5 . ( intpos i ) ) = ( ( Exec (k4,t6) ) . ( intpos i ) ) by SCMPDS_5:42
.= ( t6 . ( intpos i ) ) by A100,SCMPDS_2:47
.= ( s . ( intpos i ) ) by A93,A97,A98,A99;
end;
A101:now
let i being (Element of ( NAT ));
assume that
A102: (i >= 7 & i <> ( ( s . a4 ) - 1 ))
and
A103: i <> ( s . a4 );
A104: ( intpos i ) <> ( DataLoc (( t5 . a4 ),( 0 )) )
proof
assume ( intpos i ) = ( DataLoc (( t5 . a4 ),( 0 )) );
then i = ( abs ( ( t5 . a4 ) + ( 0 ) ) ) by ZFMISC_1:27;
hence contradiction by A1,A4,A48,A103,ABSVALUE:def 1;
end;
thus ( t4 . ( intpos i ) ) = ( ( Exec (k5,t5) ) . ( intpos i ) ) by SCMPDS_5:41
.= ( t5 . ( intpos i ) ) by A104,SCMPDS_2:47
.= ( s . ( intpos i ) ) by A96,A102,A103;
end;
A105:now
let i being (Element of ( NAT ));
assume that
A106: i >= 7
and
A107: (i <> ( ( s . a4 ) - 1 ) & i <> ( s . a4 ));
i > 4 by A106,XXREAL_0:2;
then A108: ( intpos i ) <> ( DataLoc (( t4 . a ),4) ) by A61,AMI_3:10,SCMP_GCD:1;
thus ( t3 . ( intpos i ) ) = ( ( Exec (k6,t4) ) . ( intpos i ) ) by SCMPDS_5:41
.= ( t4 . ( intpos i ) ) by A108,SCMPDS_2:48
.= ( s . ( intpos i ) ) by A101,A106,A107;
end;
hereby
let i being Nat;
A109: i in ( NAT ) by ORDINAL1:def 12;
set xi = ( intpos i );
assume that
A110: i >= 7
and
A111: (i <> ( ( s . a4 ) - 1 ) & i <> ( s . a4 ));
A112: i > 6 by A110,XXREAL_0:2;
per cases ;
suppose ( t02 . ( DataLoc (( t02 . a ),5) ) ) <= ( 0 );

then ( ( IExec (IF,Q2,( Initialize t2 )) ) . xi ) = ( ( IExec (FA,Q2,( Initialize t2 )) ) . xi ) by SCMPDS_6:74
.= ( ( Exec (Fi,t02) ) . xi ) by SCMPDS_5:40
.= ( t02 . xi ) by A41,A112,AMI_3:10,SCMPDS_2:46
.= ( t2 . xi ) by SCMPDS_5:15
.= ( s . xi ) by A89,A109,A110,A111;
hence ( ( IExec (B1,P,s) ) . xi ) = ( s . xi ) by SCMPDS_5:35;
end;
suppose ( t02 . ( DataLoc (( t02 . a ),5) ) ) > ( 0 );

then ( ( IExec (IF,Q2,( Initialize t2 )) ) . xi ) = ( ( IExec (TR,Q2,( Initialize t2 )) ) . xi ) by SCMPDS_6:73
.= ( ( Exec (k7,t3) ) . xi ) by SCMPDS_5:41
.= ( t3 . xi ) by A67,A112,AMI_3:10,SCMPDS_2:48
.= ( s . xi ) by A105,A109,A110,A111;
hence ( ( IExec (B1,P,s) ) . xi ) = ( s . xi ) by SCMPDS_5:35;
end;
end;
A113: ( t02 . a5 ) = ( t2 . a5 ) by SCMPDS_5:15
.= ( ( Exec (k2,t1) ) . a5 ) by SCMPDS_5:42
.= ( ( s . x ) - ( s . y ) ) by A21,A20,A18,A14,SCMPDS_2:50;
then A114: ( t02 . ( DataLoc (( t02 . a ),5) ) ) = ( ( s . x ) - ( s . y ) ) by A23,SCMP_GCD:1;
( abs ( ( s . a4 ) + ( - 1 ) ) ) <> ( abs ( ( t0 . a ) + 5 ) ) by A3,A35,A58,A17,XREAL_1:6;
then x <> ( DataLoc (( t0 . a ),5) ) by ZFMISC_1:27;
then A115: ( t1 . x ) = ( s . x ) by SCMPDS_2:47;
( t2 . x ) = ( ( Exec (k2,t1) ) . x ) by SCMPDS_5:42
.= ( s . x ) by A115,A59,SCMPDS_2:50;
then A116: ( t02 . x ) = ( s . x ) by SCMPDS_5:15;
then A117: ( t6 . a5 ) = ( s . x ) by A28,A25,SCMPDS_2:47;
5 <> ( abs ( ( t6 . a4 ) + ( - 1 ) ) ) by A35,A43,A46,XXREAL_0:2;
then A118: a5 <> ( DataLoc (( t6 . a4 ),( - 1 )) ) by ZFMISC_1:27;
A119: ( t5 . a5 ) = ( ( Exec (k4,t6) ) . a5 ) by SCMPDS_5:42
.= ( s . x ) by A117,A118,SCMPDS_2:47;
( abs ( ( s . a4 ) + ( 0 ) ) ) <> ( abs ( ( t4 . a ) + 4 ) ) by A1,A4,A5,A70,XXREAL_0:2;
then A120: y <> ( DataLoc (( t4 . a ),4) ) by ZFMISC_1:27;
A121: ( t4 . y ) = ( ( Exec (k5,t5) ) . ( DataLoc (( t5 . a4 ),( 0 )) ) ) by A48,SCMPDS_5:41
.= ( t5 . ( DataLoc (( t5 . a ),5) ) ) by SCMPDS_2:47
.= ( s . x ) by A57,A119,SCMP_GCD:1;
A122: ( t3 . y ) = ( ( Exec (k6,t4) ) . y ) by SCMPDS_5:41
.= ( s . x ) by A121,A120,SCMPDS_2:48;
( abs ( ( s . a4 ) + ( - 1 ) ) ) <> ( abs ( ( t5 . a4 ) + ( 0 ) ) ) by A58,A49;
then A123: x <> ( DataLoc (( t5 . a4 ),( 0 )) ) by ZFMISC_1:27;
A124: ( t4 . x ) = ( ( Exec (k5,t5) ) . x ) by SCMPDS_5:41
.= ( s . y ) by A30,A123,SCMPDS_2:47;
A125: ( t3 . x ) = ( ( Exec (k6,t4) ) . x ) by SCMPDS_5:41
.= ( s . y ) by A124,A71,SCMPDS_2:48;
hereby
A126: x <> ( DataLoc (( t3 . a ),6) ) by A35,A43,A58,A67,ZFMISC_1:27;
assume ( s . x ) > ( s . y );
then A127: ( ( s . x ) - ( s . y ) ) > ( ( s . y ) - ( s . y ) ) by XREAL_1:9;
then ( ( IExec (IF,Q2,( Initialize t2 )) ) . x ) = ( ( IExec (TR,Q2,( Initialize t2 )) ) . x ) by A114,SCMPDS_6:73
.= ( ( Exec (k7,t3) ) . x ) by SCMPDS_5:41
.= ( s . y ) by A125,A126,SCMPDS_2:48;
hence ( ( IExec (B1,P,s) ) . x ) = ( s . y ) by SCMPDS_5:35;
( abs ( ( s . a4 ) + ( 0 ) ) ) <> ( abs ( ( t3 . a ) + 6 ) ) by A1,A4,A5,A68,XXREAL_0:2;
then A128: y <> ( DataLoc (( t3 . a ),6) ) by ZFMISC_1:27;
( ( IExec (IF,Q2,( Initialize t2 )) ) . y ) = ( ( IExec (TR,Q2,( Initialize t2 )) ) . y ) by A114,A127,SCMPDS_6:73
.= ( ( Exec (k7,t3) ) . y ) by SCMPDS_5:41
.= ( s . x ) by A122,A128,SCMPDS_2:48;
hence ( ( IExec (B1,P,s) ) . y ) = ( s . x ) by SCMPDS_5:35;
thus (( ( IExec (B1,P,s) ) . a6 ) = ( ( s . a6 ) - 1 ) & ( ( IExec (B1,P,s) ) . a4 ) = ( ( s . a4 ) - 1 )) by A23,A113,A83,A127,SCMP_GCD:1;
end;
A129: ( abs ( ( t02 . a ) + 6 ) ) = ( ( 0 ) + 6 ) by A41,ZFMISC_1:27;
hereby
A130: x <> ( DataLoc (( t02 . a ),6) ) by A35,A43,A58,A41,ZFMISC_1:27;
assume ( s . x ) <= ( s . y );
then A131: ( ( s . x ) - ( s . y ) ) <= ( ( s . y ) - ( s . y ) ) by XREAL_1:9;
then ( ( IExec (IF,Q2,( Initialize t2 )) ) . x ) = ( ( IExec (FA,Q2,( Initialize t2 )) ) . x ) by A114,SCMPDS_6:74
.= ( ( Exec (Fi,t02) ) . x ) by SCMPDS_5:40
.= ( s . x ) by A116,A130,SCMPDS_2:46;
hence ( ( IExec (B1,P,s) ) . x ) = ( s . x ) by SCMPDS_5:35;
( abs ( ( s . a4 ) + ( 0 ) ) ) <> ( abs ( ( t02 . a ) + 6 ) ) by A1,A4,A5,A129,XXREAL_0:2;
then A132: y <> ( DataLoc (( t02 . a ),6) ) by ZFMISC_1:27;
( ( IExec (IF,Q2,( Initialize t2 )) ) . y ) = ( ( IExec (FA,Q2,( Initialize t2 )) ) . y ) by A114,A131,SCMPDS_6:74
.= ( ( Exec (Fi,t02) ) . y ) by SCMPDS_5:40
.= ( s . y ) by A22,A132,SCMPDS_2:46;
hence ( ( IExec (B1,P,s) ) . y ) = ( s . y ) by SCMPDS_5:35;
thus ( ( IExec (B1,P,s) ) . a6 ) = ( 0 ) by A23,A113,A42,A131,SCMP_GCD:1;
end;
end;
Lm9: (for s being ( 0 ) -started (State of ( SCMPDS )) holds ((( s . a4 ) >= ( 7 + ( s . ( DataLoc (( s . ( GBP ) ),6) ) ) ) & ( s . ( GBP ) ) = ( 0 )) implies (WH is_closed_on s,P & WH is_halting_on s,P)))
proof
let s being ( 0 ) -started (State of ( SCMPDS ));
set a = ( GBP );
set b = ( DataLoc (( s . a ),6) );
assume that
A1: ( s . a4 ) >= ( 7 + ( s . b ) )
and
A2: ( s . a ) = ( 0 );
A3: b = ( intpos ( ( 0 ) + 6 ) ) by A2,SCMP_GCD:1;
A4:now
let t being ( 0 ) -started (State of ( SCMPDS ));
let Q;
assume that
A5: (for x holds (x in { a4 } implies ( t . x ) >= ( 7 + ( t . b ) )))
and
A6: (( t . a ) = ( s . a ) & ( t . b ) > ( 0 ));
set Bt = ( IExec (B1,Q,t) );
A11: a4 in { a4 } by TARSKI:def 1;
then A12: ( t . a4 ) >= ( 7 + ( t . a6 ) ) by A3,A5;
hence ( ( IExec (B1,Q,t) ) . a ) = ( t . a ) by A2,A3,A6,Lm7;
thus (B1 is_closed_on t,Q & B1 is_halting_on t,Q) by SCMPDS_6:20,SCMPDS_6:21;
thus ( ( IExec (B1,Q,t) ) . b ) < ( t . b ) by A2,A3,A6,A12,Lm8;
( t . a4 ) >= ( 7 + ( t . b ) ) by A5,A11;
then ( Bt . a4 ) >= ( 7 + ( Bt . a6 ) ) by A2,A3,A6,Lm8;
hence (for x holds (x in { a4 } implies ( ( IExec (B1,Q,t) ) . x ) >= ( 7 + ( ( IExec (B1,Q,t) ) . b ) ))) by A3,TARSKI:def 1;
end;
(for x holds (x in { a4 } implies ( s . x ) >= ( 7 + ( s . b ) ))) by A1,TARSKI:def 1;
hence thesis by A4,SCMPDS_8:29;
end;
Lm10: (for s being ( 0 ) -started (State of ( SCMPDS )) holds ((( s . a4 ) >= ( 7 + ( s . ( DataLoc (( s . ( GBP ) ),6) ) ) ) & ( s . ( GBP ) ) = ( 0 )) implies (((( ( IExec (WH,P,s) ) . ( GBP ) ) = ( 0 ) & ( ( IExec (WH,P,s) ) . a1 ) = ( s . a1 )) & ( ( IExec (WH,P,s) ) . a2 ) = ( s . a2 )) & ( ( IExec (WH,P,s) ) . a3 ) = ( s . a3 ))))
proof
let s being ( 0 ) -started (State of ( SCMPDS ));
set b = ( DataLoc (( s . ( GBP ) ),6) );
set a = ( GBP );
assume that
A1: ( s . a4 ) >= ( 7 + ( s . b ) )
and
A2: ( s . a ) = ( 0 );
A3: b = ( intpos ( ( 0 ) + 6 ) ) by A2,SCMP_GCD:1;
defpred P[ Nat ]
 means
(for t being ( 0 ) -started (State of ( SCMPDS )) holds (for Q holds (((( t . a6 ) <= $1 & ( t . a4 ) >= ( 7 + ( t . a6 ) )) & ( t . a ) = ( 0 )) implies (((( ( IExec (WH,Q,t) ) . a ) = ( 0 ) & ( ( IExec (WH,Q,t) ) . a1 ) = ( t . a1 )) & ( ( IExec (WH,Q,t) ) . a2 ) = ( t . a2 )) & ( ( IExec (WH,Q,t) ) . a3 ) = ( t . a3 )))));
A4: P[ (( 0 ) qua Nat) ]
proof
let t being ( 0 ) -started (State of ( SCMPDS ));
let Q;
assume that
A5: ( t . a6 ) <= ( 0 )
and
( t . a4 ) >= ( 7 + ( t . a6 ) )
and
A6: ( t . a ) = ( 0 );
A7: ( DataLoc (( t . a ),6) ) = ( intpos ( ( 0 ) + 6 ) ) by A6,SCMP_GCD:1;
hence ( ( IExec (WH,Q,t) ) . a ) = ( 0 ) by A5,A6,SCMPDS_8:23;
thus thesis by A5,A7,SCMPDS_8:23;
end;
A8: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being (Element of ( NAT ));
assume A9: P[ k ];
thus P[ ( k + 1 ) ]
proof
let t being ( 0 ) -started (State of ( SCMPDS ));
let Q;
set bt = ( DataLoc (( t . a ),6) );
assume that
A10: ( t . a6 ) <= ( k + 1 )
and
A11: ( t . a4 ) >= ( 7 + ( t . a6 ) )
and
A12: ( t . a ) = ( 0 );
A13: bt = ( intpos ( ( 0 ) + 6 ) ) by A12,SCMP_GCD:1;
per cases ;
suppose ( t . bt ) <= ( 0 );

hence thesis by A12,SCMPDS_8:23;
end;
suppose A14: ( t . bt ) > ( 0 );

A15: (for v being ( 0 ) -started (State of ( SCMPDS )) holds (for Q holds ((((for x holds (x in { a4 } implies ( v . x ) >= ( 7 + ( v . ( DataLoc (( t . ( GBP ) ),6) ) ) ))) & ( v . ( GBP ) ) = ( t . ( GBP ) )) & ( v . ( DataLoc (( t . ( GBP ) ),6) ) ) > ( 0 )) implies ((((( ( IExec (B1,Q,v) ) . ( GBP ) ) = ( v . ( GBP ) ) & B1 is_closed_on v,Q) & B1 is_halting_on v,Q) & ( ( IExec (B1,Q,v) ) . ( DataLoc (( t . ( GBP ) ),6) ) ) < ( v . ( DataLoc (( t . ( GBP ) ),6) ) )) & (for x holds (x in { a4 } implies ( ( IExec (B1,Q,v) ) . x ) >= ( 7 + ( ( IExec (B1,Q,v) ) . ( DataLoc (( t . ( GBP ) ),6) ) ) )))))))
proof
let v being ( 0 ) -started (State of ( SCMPDS ));
let V;
V: ( Initialize v ) = v by MEMSTR_0:44;
assume that
A16: (for x holds (x in { a4 } implies ( v . x ) >= ( 7 + ( v . bt ) )))
and
A17: (( v . a ) = ( t . a ) & ( v . bt ) > ( 0 ));
set Iv = ( IExec (B1,V,( Initialize ( Initialize v ) )) );
A19: ( v . a ) = ( ( Initialize v ) . a ) by SCMPDS_5:15;
A20: ( v . a4 ) = ( ( Initialize v ) . a4 ) by SCMPDS_5:15;
A21: ( v . a6 ) = ( ( Initialize v ) . a6 ) by SCMPDS_5:15;
A22: a4 in { a4 } by TARSKI:def 1;
then A23: ( v . a4 ) >= ( 7 + ( v . a6 ) ) by A13,A16;
hence ( ( IExec (B1,V,v) ) . a ) = ( v . a ) by A12,A13,A17,Lm7;
thus (B1 is_closed_on v,V & B1 is_halting_on v,V) by SCMPDS_6:20,SCMPDS_6:21;
thus ( ( IExec (B1,V,v) ) . bt ) < ( v . bt ) by A12,A13,A17,A23,Lm8;
( v . a4 ) >= ( 7 + ( v . bt ) ) by A16,A22;
then ( Iv . a4 ) >= ( 7 + ( Iv . a6 ) ) by A12,A13,A17,Lm8,A19,A20,A21;
hence (for x holds (x in { a4 } implies ( ( IExec (B1,V,v) ) . x ) >= ( 7 + ( ( IExec (B1,V,v) ) . bt ) ))) by A13,V,TARSKI:def 1;
end;
set It = ( IExec (B1,Q,t) );
set IT = Q;
A25: ( It . a1 ) = ( ( Initialize It ) . a1 ) by SCMPDS_5:15;
A26: ( It . a6 ) = ( ( Initialize It ) . a6 ) by SCMPDS_5:15;
A27: ( It . a4 ) = ( ( Initialize It ) . a4 ) by SCMPDS_5:15;
A28: ( It . ( GBP ) ) = ( ( Initialize It ) . ( GBP ) ) by SCMPDS_5:15;
A29: ( It . a2 ) = ( ( Initialize It ) . a2 ) by SCMPDS_5:15;
A30: ( It . a3 ) = ( ( Initialize It ) . a3 ) by SCMPDS_5:15;
( It . a6 ) < ( t . a6 ) by A11,A12,A13,A14,Lm8;
then ( ( It . a6 ) + 1 ) <= ( t . a6 ) by INT_1:7;
then ( ( It . a6 ) + 1 ) <= ( k + 1 ) by A10,XXREAL_0:2;
then A31: ( It . a6 ) <= k by XREAL_1:6;
A32: (( It . ( GBP ) ) = ( 0 ) & ( It . a4 ) >= ( 7 + ( It . a6 ) )) by A11,A12,A13,A14,Lm7,Lm8;
then A33: ( ( IExec (WH,IT,( Initialize It )) ) . a1 ) = ( It . a1 ) by A9,A31,A25,A26,A27,A28;
A34: ( ( IExec (WH,IT,( Initialize It )) ) . a3 ) = ( It . a3 ) by A9,A32,A31,A26,A27,A28,A30;
A35: ( ( IExec (WH,IT,( Initialize It )) ) . a2 ) = ( It . a2 ) by A9,A32,A31,A26,A27,A28,A29;
A36: (for x holds (x in { a4 } implies ( t . x ) >= ( 7 + ( t . bt ) ))) by A11,A13,TARSKI:def 1;
( ( IExec (WH,IT,( Initialize It )) ) . a ) = ( 0 ) by A9,A32,A31,A26,A27,A28;
hence ( ( IExec (WH,Q,t) ) . a ) = ( 0 ) by A14,A36,A15,SCMPDS_8:29;
( It . a1 ) = ( t . a1 ) by A11,A12,A13,A14,Lm7;
hence ( ( IExec (WH,Q,t) ) . a1 ) = ( t . a1 ) by A14,A36,A15,A33,SCMPDS_8:29;
( It . a2 ) = ( t . a2 ) by A11,A12,A13,A14,Lm8;
hence ( ( IExec (WH,Q,t) ) . a2 ) = ( t . a2 ) by A14,A36,A15,A35,SCMPDS_8:29;
( It . a3 ) = ( t . a3 ) by A11,A12,A13,A14,Lm8;
hence thesis by A14,A36,A15,A34,SCMPDS_8:29;
end;
end;

end;
per cases ;
suppose ( s . a6 ) <= ( 0 );

hence thesis by A2,A3,SCMPDS_8:23;
end;
suppose ( s . a6 ) > ( 0 );

then reconsider m = ( s . a6 ) as (Element of ( NAT )) by INT_1:3;
(for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A4,A8);
then P[ m ];
hence thesis by A1,A2,A3;
end;
end;
Lm11: (for s being ( 0 ) -started (State of ( SCMPDS )) holds (( s . ( GBP ) ) = ( 0 ) implies ((((((( ( IExec (J4,P,s) ) . ( GBP ) ) = ( 0 ) & ( ( IExec (J4,P,s) ) . a1 ) = ( ( s . a1 ) + 1 )) & ( ( IExec (J4,P,s) ) . a2 ) = ( s . a2 )) & ( ( IExec (J4,P,s) ) . a3 ) = ( ( s . a3 ) + 1 )) & ( ( IExec (J4,P,s) ) . a4 ) = ( ( s . a3 ) + 1 )) & ( ( IExec (J4,P,s) ) . a6 ) = ( ( s . a1 ) + 1 )) & (for i being (Element of ( NAT )) holds (i >= 7 implies ( ( IExec (J4,P,s) ) . ( intpos i ) ) = ( s . ( intpos i ) ))))))
proof
set a = ( GBP );
let s being ( 0 ) -started (State of ( SCMPDS ));
UU: ( Initialize s ) = s by MEMSTR_0:44;
set t0 = ( Initialize s );
set t1 = ( IExec (J4,P,s) );
set t2 = ( IExec (( ( j1 ';' j2 ) ';' j3 ),P,s) );
set t3 = ( IExec (( j1 ';' j2 ),P,s) );
set t4 = ( Exec (j1,s) );
assume Z: ( s . a ) = ( 0 );
then A1: ( t0 . a ) = ( 0 ) by SCMPDS_5:15;
then A2: ( DataLoc (( t0 . a ),3) ) = ( intpos ( ( 0 ) + 3 ) ) by SCMP_GCD:1;
then A3: ( t4 . a ) = ( 0 ) by A1,Z,AMI_3:10,SCMPDS_2:48;
then A4: ( DataLoc (( t4 . a ),4) ) = ( intpos ( ( 0 ) + 4 ) ) by SCMP_GCD:1;
A5: ( t4 . a2 ) = ( s . a2 ) by A2,Z,A1,AMI_3:10,SCMPDS_2:48;
A6: ( t3 . a2 ) = ( ( Exec (j2,t4) ) . a2 ) by SCMPDS_5:42
.= ( s . a2 ) by A5,A4,AMI_3:10,SCMPDS_2:47;
A7: ( t4 . a1 ) = ( s . a1 ) by A2,Z,A1,AMI_3:10,SCMPDS_2:48;
A8: ( t3 . a1 ) = ( ( Exec (j2,t4) ) . a1 ) by SCMPDS_5:42
.= ( s . a1 ) by A7,A4,AMI_3:10,SCMPDS_2:47;
A9: ( t4 . a3 ) = ( ( s . a3 ) + 1 ) by A2,UU,SCMPDS_2:48;
A10: ( t3 . a ) = ( ( Exec (j2,t4) ) . a ) by SCMPDS_5:42
.= ( 0 ) by A3,A4,AMI_3:10,SCMPDS_2:47;
then A11: ( DataLoc (( t3 . a ),1) ) = ( intpos ( ( 0 ) + 1 ) ) by SCMP_GCD:1;
A12: ( DataLoc (( t4 . a ),3) ) = ( intpos ( ( 0 ) + 3 ) ) by A3,SCMP_GCD:1;
A13: ( t3 . a4 ) = ( ( Exec (j2,t4) ) . a4 ) by SCMPDS_5:42
.= ( ( s . a3 ) + 1 ) by A9,A4,A12,SCMPDS_2:47;
A14: ( t2 . a4 ) = ( ( Exec (j3,t3) ) . a4 ) by SCMPDS_5:41
.= ( ( s . a3 ) + 1 ) by A13,A11,AMI_3:10,SCMPDS_2:48;
A15: ( t2 . a2 ) = ( ( Exec (j3,t3) ) . a2 ) by SCMPDS_5:41
.= ( s . a2 ) by A6,A11,AMI_3:10,SCMPDS_2:48;
A16: ( t2 . a1 ) = ( ( Exec (j3,t3) ) . a1 ) by SCMPDS_5:41
.= ( ( s . a1 ) + 1 ) by A8,A11,SCMPDS_2:48;
A17: ( t3 . a3 ) = ( ( Exec (j2,t4) ) . a3 ) by SCMPDS_5:42
.= ( ( s . a3 ) + 1 ) by A9,A4,AMI_3:10,SCMPDS_2:47;
A18: ( t2 . a3 ) = ( ( Exec (j3,t3) ) . a3 ) by SCMPDS_5:41
.= ( ( s . a3 ) + 1 ) by A17,A11,AMI_3:10,SCMPDS_2:48;
A19: ( t2 . a ) = ( ( Exec (j3,t3) ) . a ) by SCMPDS_5:41
.= ( 0 ) by A10,A11,AMI_3:10,SCMPDS_2:48;
then A20: ( DataLoc (( t2 . a ),6) ) = ( intpos ( ( 0 ) + 6 ) ) by SCMP_GCD:1;
thus ( t1 . a ) = ( ( Exec (j4,t2) ) . a ) by SCMPDS_5:41
.= ( 0 ) by A19,A20,AMI_3:10,SCMPDS_2:47;
thus ( t1 . a1 ) = ( ( Exec (j4,t2) ) . a1 ) by SCMPDS_5:41
.= ( ( s . a1 ) + 1 ) by A16,A20,AMI_3:10,SCMPDS_2:47;
thus ( t1 . a2 ) = ( ( Exec (j4,t2) ) . a2 ) by SCMPDS_5:41
.= ( s . a2 ) by A15,A20,AMI_3:10,SCMPDS_2:47;
A21: ( DataLoc (( t2 . a ),1) ) = ( intpos ( ( 0 ) + 1 ) ) by A19,SCMP_GCD:1;
thus ( t1 . a3 ) = ( ( Exec (j4,t2) ) . a3 ) by SCMPDS_5:41
.= ( ( s . a3 ) + 1 ) by A18,A20,AMI_3:10,SCMPDS_2:47;
thus ( t1 . a4 ) = ( ( Exec (j4,t2) ) . a4 ) by SCMPDS_5:41
.= ( ( s . a3 ) + 1 ) by A14,A20,AMI_3:10,SCMPDS_2:47;
thus ( t1 . a6 ) = ( ( Exec (j4,t2) ) . a6 ) by SCMPDS_5:41
.= ( ( s . a1 ) + 1 ) by A16,A20,A21,SCMPDS_2:47;
A22:now
let i being (Element of ( NAT ));
assume i >= 7;
then i > 3 by XXREAL_0:2;
hence ( t4 . ( intpos i ) ) = ( t0 . ( intpos i ) ) by A2,UU,AMI_3:10,SCMPDS_2:48
.= ( s . ( intpos i ) ) by SCMPDS_5:15;
end;
A23:now
let i being (Element of ( NAT ));
assume A24: i >= 7;
then A25: i > 4 by XXREAL_0:2;
thus ( t3 . ( intpos i ) ) = ( ( Exec (j2,t4) ) . ( intpos i ) ) by SCMPDS_5:42
.= ( t4 . ( intpos i ) ) by A4,A25,AMI_3:10,SCMPDS_2:47
.= ( s . ( intpos i ) ) by A22,A24;
end;
A26:now
let i being (Element of ( NAT ));
assume A27: i >= 7;
then A28: i > 1 by XXREAL_0:2;
thus ( t2 . ( intpos i ) ) = ( ( Exec (j3,t3) ) . ( intpos i ) ) by SCMPDS_5:41
.= ( t3 . ( intpos i ) ) by A11,A28,AMI_3:10,SCMPDS_2:48
.= ( s . ( intpos i ) ) by A23,A27;
end;
hereby
let i being (Element of ( NAT ));
assume A29: i >= 7;
then A30: i > 6 by XXREAL_0:2;
thus ( t1 . ( intpos i ) ) = ( ( Exec (j4,t2) ) . ( intpos i ) ) by SCMPDS_5:41
.= ( t2 . ( intpos i ) ) by A20,A30,AMI_3:10,SCMPDS_2:47
.= ( s . ( intpos i ) ) by A26,A29;
end;
end;
set jf = ( AddTo (( GBP ),2,( - 1 )) );
set B3 = ( B2 ';' jf );
Lm12: (for s being ( 0 ) -started (State of ( SCMPDS )) holds ((( s . a3 ) >= ( ( s . a1 ) + 7 ) & ( s . ( GBP ) ) = ( 0 )) implies ((((( ( IExec (B3,P,s) ) . ( GBP ) ) = ( 0 ) & ( ( IExec (B3,P,s) ) . a2 ) = ( ( s . a2 ) - 1 )) & ( ( IExec (B3,P,s) ) . a3 ) = ( ( s . a3 ) + 1 )) & ( ( IExec (B3,P,s) ) . a1 ) = ( ( s . a1 ) + 1 )) & (for i being (Element of ( NAT )) holds (i <> 2 implies ( ( IExec (B3,P,s) ) . ( intpos i ) ) = ( ( IExec (WH,P,( Initialize ( IExec (J4,P,s) ) )) ) . ( intpos i ) ))))))
proof
set a = ( GBP );
let s being ( 0 ) -started (State of ( SCMPDS ));
set s1 = ( IExec (J4,P,s) );
set Bt = ( IExec (B2,P,s) );
set P1 = P;
I: ( Initialize s ) = s by MEMSTR_0:44;
A1: ( s1 . a ) = ( ( Initialize s1 ) . a ) by SCMPDS_5:15;
A2: ( s1 . a4 ) = ( ( Initialize s1 ) . a4 ) by SCMPDS_5:15;
A3: ( s1 . a6 ) = ( ( Initialize s1 ) . a6 ) by SCMPDS_5:15;
A4: ( s1 . a3 ) = ( ( Initialize s1 ) . a3 ) by SCMPDS_5:15;
A5: ( s1 . a1 ) = ( ( Initialize s1 ) . a1 ) by SCMPDS_5:15;
A6: ( s1 . a2 ) = ( ( Initialize s1 ) . a2 ) by SCMPDS_5:15;
assume that
A8: ( s . a3 ) >= ( ( s . a1 ) + 7 )
and
A9: ( s . a ) = ( 0 );
A10: ( s1 . a1 ) = ( ( s . a1 ) + 1 ) by A9,Lm11;
A11: ( s1 . a3 ) = ( ( s . a3 ) + 1 ) by A9,Lm11;
A12: ( s1 . a2 ) = ( s . a2 ) by A9,Lm11;
(( s1 . a6 ) = ( ( s . a1 ) + 1 ) & ( ( s . a3 ) + 1 ) >= ( ( 7 + ( s . a1 ) ) + 1 )) by A8,A9,Lm11,XREAL_1:6;
then A13: ( s1 . a4 ) >= ( 7 + ( s1 . a6 ) ) by A9,Lm11;
A14: ( s1 . ( GBP ) ) = ( 0 ) by A9,Lm11;
then A15: ( DataLoc (( s1 . a ),6) ) = ( intpos ( ( 0 ) + 6 ) ) by SCMP_GCD:1;
then (WH is_closed_on ( Initialize s1 ),P1 & WH is_halting_on ( Initialize s1 ),P1) by A14,A13,Lm9,A1,A2,A3;
then A16: (WH is_closed_on s1,P1 & WH is_halting_on s1,P1) by SCMPDS_6:125,SCMPDS_6:126;
A17: (J4 is_closed_on s,P & J4 is_halting_on s,P) by SCMPDS_6:20,SCMPDS_6:21;
then A18: ( Bt . a ) = ( ( IExec (WH,P1,( Initialize s1 )) ) . a ) by A16,SCMPDS_7:30
.= ( 0 ) by A14,A15,A13,Lm10,A1,A2,A3;
then A19: ( DataLoc (( Bt . a ),2) ) = ( intpos ( ( 0 ) + 2 ) ) by SCMP_GCD:1;
A20: (B2 is_closed_on s,P & B2 is_halting_on s,P) by A16,A17,I,SCMPDS_7:24;
hence ( ( IExec (B3,P,s) ) . a ) = ( ( Exec (jf,Bt) ) . a ) by SCMPDS_7:31
.= ( 0 ) by A18,A19,AMI_3:10,SCMPDS_2:48;
thus ( ( IExec (B3,P,s) ) . a2 ) = ( ( Exec (jf,Bt) ) . a2 ) by A20,SCMPDS_7:31
.= ( ( Bt . a2 ) + ( - 1 ) ) by A19,SCMPDS_2:48
.= ( ( Bt . a2 ) - 1 )
.= ( ( ( IExec (WH,P1,( Initialize s1 )) ) . a2 ) - 1 ) by A16,A17,SCMPDS_7:30
.= ( ( s . a2 ) - 1 ) by A14,A12,A15,A13,Lm10,A1,A2,A3,A6;
thus ( ( IExec (B3,P,s) ) . a3 ) = ( ( Exec (jf,Bt) ) . a3 ) by A20,SCMPDS_7:31
.= ( Bt . a3 ) by A19,AMI_3:10,SCMPDS_2:48
.= ( ( IExec (WH,P1,( Initialize s1 )) ) . a3 ) by A16,A17,SCMPDS_7:30
.= ( ( s . a3 ) + 1 ) by A14,A11,A15,A13,Lm10,A1,A2,A3,A4;
thus ( ( IExec (B3,P,s) ) . a1 ) = ( ( Exec (jf,Bt) ) . a1 ) by A20,SCMPDS_7:31
.= ( Bt . a1 ) by A19,AMI_3:10,SCMPDS_2:48
.= ( ( IExec (WH,P1,( Initialize s1 )) ) . a1 ) by A16,A17,SCMPDS_7:30
.= ( ( s . a1 ) + 1 ) by A14,A10,A15,A13,Lm10,A1,A2,A3,A5;
hereby
let i being (Element of ( NAT ));
assume A21: i <> 2;
thus ( ( IExec (B3,P,s) ) . ( intpos i ) ) = ( ( Exec (jf,Bt) ) . ( intpos i ) ) by A20,SCMPDS_7:31
.= ( Bt . ( intpos i ) ) by A19,A21,AMI_3:10,SCMPDS_2:48
.= ( ( IExec (WH,P1,( Initialize s1 )) ) . ( intpos i ) ) by A16,A17,SCMPDS_7:30;
end;
end;
Lm13: (for s being ( 0 ) -started (State of ( SCMPDS )) holds ((( s . a3 ) >= ( ( s . a1 ) + 7 ) & ( s . ( GBP ) ) = ( 0 )) implies (FR is_closed_on s,P & FR is_halting_on s,P)))
proof
let s being ( 0 ) -started (State of ( SCMPDS ));
set a = ( GBP );
set b = ( DataLoc (( s . a ),2) );
assume that
A1: ( s . a3 ) >= ( ( s . a1 ) + 7 )
and
A2: ( s . a ) = ( 0 );
A3: b = ( intpos ( ( 0 ) + 2 ) ) by A2,SCMP_GCD:1;
now
let t being ( 0 ) -started (State of ( SCMPDS ));
let Q;
T: ( Initialize t ) = t by MEMSTR_0:44;
assume that
A4: ( t . a3 ) >= ( ( t . a1 ) + 7 )
and
A5: ( t . a ) = ( s . a )
and
( t . b ) > ( 0 );
set t1 = ( IExec (J4,Q,t) );
set Q1 = Q;
A11: ( t1 . a ) = ( ( Initialize t1 ) . a ) by SCMPDS_5:15;
A12: ( t1 . a4 ) = ( ( Initialize t1 ) . a4 ) by SCMPDS_5:15;
A13: ( t1 . a6 ) = ( ( Initialize t1 ) . a6 ) by SCMPDS_5:15;
A15: ( ( t . a3 ) + 1 ) >= ( ( 7 + ( t . a1 ) ) + 1 ) by A4,XREAL_1:6;
thus ( ( IExec (B3,Q,t) ) . a ) = ( t . a ) by A2,A4,A5,Lm12;
thus ( ( IExec (B3,Q,t) ) . b ) = ( ( t . b ) - 1 ) by A2,A3,A4,A5,Lm12;
A16: (J4 is_closed_on t,Q & J4 is_halting_on t,Q) by SCMPDS_6:20,SCMPDS_6:21;
( t1 . a6 ) = ( ( t . a1 ) + 1 ) by A2,A5,Lm11;
then A17: ( t1 . a4 ) >= ( 7 + ( t1 . a6 ) ) by A2,A5,A15,Lm11;
A18: ( t1 . a ) = ( 0 ) by A2,A5,Lm11;
then ( DataLoc (( t1 . a ),6) ) = ( intpos ( ( 0 ) + 6 ) ) by SCMP_GCD:1;
then (WH is_closed_on ( Initialize t1 ),Q1 & WH is_halting_on ( Initialize t1 ),Q1) by A18,A17,Lm9,A12,A13,A11;
then (WH is_closed_on t1,Q1 & WH is_halting_on t1,Q1) by SCMPDS_6:125,SCMPDS_6:126;
hence (B2 is_closed_on t,Q & B2 is_halting_on t,Q) by A16,T,SCMPDS_7:24;
( ( IExec (B3,Q,t) ) . a1 ) = ( ( t . a1 ) + 1 ) by A2,A4,A5,Lm12;
hence ( ( IExec (B3,Q,t) ) . a3 ) >= ( ( ( IExec (B3,Q,t) ) . a1 ) + 7 ) by A2,A4,A5,A15,Lm12;
end;
hence thesis by A1,CKB18:1;
end;
Lm14: (for s being ( 0 ) -started (State of ( SCMPDS )) holds (((( s . a3 ) >= ( ( s . a1 ) + 7 ) & ( s . ( GBP ) ) = ( 0 )) & ( s . a2 ) > ( 0 )) implies ( IExec (FR,P,s) ) = ( IExec (FR,P,( Initialize ( IExec (B3,P,s) ) )) )))
proof
let s being ( 0 ) -started (State of ( SCMPDS ));
set a = ( GBP );
set b = ( DataLoc (( s . a ),2) );
assume that
A1: ( s . a3 ) >= ( ( s . a1 ) + 7 )
and
A2: ( s . a ) = ( 0 )
and
A3: ( s . a2 ) > ( 0 );
A4: b = ( intpos ( ( 0 ) + 2 ) ) by A2,SCMP_GCD:1;
now
let t being ( 0 ) -started (State of ( SCMPDS ));
let Q;
T: ( Initialize t ) = t by MEMSTR_0:44;
assume that
A5: ( t . a3 ) >= ( ( t . a1 ) + 7 )
and
A6: ( t . a ) = ( s . a )
and
( t . b ) > ( 0 );
set t1 = ( IExec (J4,Q,t) );
set Q1 = Q;
A13: ( ( t . a3 ) + 1 ) >= ( ( 7 + ( t . a1 ) ) + 1 ) by A5,XREAL_1:6;
thus ( ( IExec (B3,Q,t) ) . a ) = ( t . a ) by A2,A5,A6,Lm12;
thus ( ( IExec (B3,Q,t) ) . b ) = ( ( t . b ) - 1 ) by A2,A4,A5,A6,Lm12;
A14: (J4 is_closed_on t,Q & J4 is_halting_on t,Q) by SCMPDS_6:20,SCMPDS_6:21;
( t1 . a6 ) = ( ( t . a1 ) + 1 ) by A2,A6,Lm11;
then A15: ( t1 . a4 ) >= ( 7 + ( t1 . a6 ) ) by A2,A6,A13,Lm11;
A16: ( t1 . a ) = ( ( Initialize t1 ) . a ) by SCMPDS_5:15;
A17: ( t1 . a4 ) = ( ( Initialize t1 ) . a4 ) by SCMPDS_5:15;
A18: ( t1 . a6 ) = ( ( Initialize t1 ) . a6 ) by SCMPDS_5:15;
A19: ( t1 . a ) = ( 0 ) by A2,A6,Lm11;
then ( DataLoc (( t1 . a ),6) ) = ( intpos ( ( 0 ) + 6 ) ) by SCMP_GCD:1;
then (WH is_closed_on ( Initialize t1 ),Q1 & WH is_halting_on ( Initialize t1 ),Q1) by A19,A15,Lm9,A16,A17,A18;
then (WH is_closed_on t1,Q1 & WH is_halting_on t1,Q1) by SCMPDS_6:125,SCMPDS_6:126;
hence (B2 is_closed_on t,Q & B2 is_halting_on t,Q) by A14,T,SCMPDS_7:24;
( ( IExec (B3,Q,t) ) . a1 ) = ( ( t . a1 ) + 1 ) by A2,A5,A6,Lm12;
hence ( ( IExec (B3,Q,t) ) . a3 ) >= ( ( ( IExec (B3,Q,t) ) . a1 ) + 7 ) by A2,A5,A6,A13,Lm12;
end;
hence thesis by A1,A3,A4,CKB19:1;
end;
Lm16: (for s being ( 0 ) -started (State of ( SCMPDS )) holds (for f,g being (FinSequence of ( INT )) holds (for p0,n being (Element of ( NAT )) holds (((((((((( s . ( GBP ) ) = ( 0 ) & ( s . a2 ) = ( n - 1 )) & ( s . a3 ) = ( p0 + 1 )) & ( s . a1 ) = ( 0 )) & p0 >= 6) & f is_FinSequence_on s,p0) & g is_FinSequence_on ( IExec (FR,P,s) ),p0) & ( len f ) = n) & ( len g ) = n) implies (f,g are_fiberwise_equipotent  & g is_non_decreasing_on 1,n)))))
proof
set a = ( GBP );
let s being ( 0 ) -started (State of ( SCMPDS ));
let f being (FinSequence of ( INT ));
let g being (FinSequence of ( INT ));
let p0 being (Element of ( NAT ));
let n being (Element of ( NAT ));
assume that
A1: ( s . a ) = ( 0 )
and
A2: ( s . a2 ) = ( n - 1 )
and
A3: ( s . a3 ) = ( p0 + 1 )
and
A4: ( s . a1 ) = ( 0 )
and
A5: p0 >= 6
and
A6: (f is_FinSequence_on s,p0 & g is_FinSequence_on ( IExec (FR,P,s) ),p0)
and
A7: ( len f ) = n
and
A8: ( len g ) = n;
per cases ;
suppose A9: n = ( 0 );

then g = ( {} ) by A8;
hence f,g are_fiberwise_equipotent  by A7,A9;
thus thesis by A9,GRAPH_2:63;
end;
suppose n <> ( 0 );

then n >= ( 1 + ( 0 ) ) by INT_1:7;
then ( n - 1 ) >= ( 0 ) by XREAL_1:19;
then reconsider n1 = ( n - 1 ) as (Element of ( NAT )) by INT_1:3;
defpred P[ Nat ]
 means
(for t being ( 0 ) -started (State of ( SCMPDS )) holds (for Q holds (for f1,f2 being (FinSequence of ( INT )) holds (for m being (Element of ( NAT )) holds ((((((((((( t . a ) = ( 0 ) & ( ( t . a2 ) + ( t . a1 ) ) = ( n - 1 )) & ( t . a2 ) = $1) & m = ( n - ( t . a2 ) )) & p0 = ( ( ( t . a3 ) - ( t . a1 ) ) - 1 )) & f1 is_FinSequence_on t,p0) & f2 is_FinSequence_on ( IExec (FR,Q,t) ),p0) & f1 is_non_decreasing_on 1,m) & ( len f1 ) = n) & ( len f2 ) = n) implies (f1,f2 are_fiberwise_equipotent  & f2 is_non_decreasing_on 1,n))))));
A10: (( ( s . a2 ) + ( s . a1 ) ) = ( ( n - 1 ) + ( 0 ) ) & 1 = ( n - ( s . a2 ) )) by A2,A4;
A11:now
let k being (Element of ( NAT ));
assume A12: P[ k ];
now
let t being ( 0 ) -started (State of ( SCMPDS ));
let f1 being (FinSequence of ( INT ));
let f2 being (FinSequence of ( INT ));
let m being (Element of ( NAT ));
let Q;
assume that
A13: ( t . a ) = ( 0 )
and
A14: ( ( t . a2 ) + ( t . a1 ) ) = ( n - 1 )
and
A15: ( t . a2 ) = ( k + 1 )
and
A16: m = ( n - ( t . a2 ) )
and
A17: p0 = ( ( ( t . a3 ) - ( t . a1 ) ) - 1 )
and
A18: f1 is_FinSequence_on t,p0
and
A19: f2 is_FinSequence_on ( IExec (FR,Q,t) ),p0
and
A20: (f1 is_non_decreasing_on 1,m & ( len f1 ) = n)
and
A21: ( len f2 ) = n;
set t1 = ( IExec (J4,Q,t) );
set Bt = ( IExec (B3,Q,t) );
set Q1 = Q;
A28: ( t1 . a ) = ( ( Initialize t1 ) . a ) by SCMPDS_5:15;
A29: ( t1 . a4 ) = ( ( Initialize t1 ) . a4 ) by SCMPDS_5:15;
A30: ( t1 . a6 ) = ( ( Initialize t1 ) . a6 ) by SCMPDS_5:15;
A31: ( t1 . a4 ) = ( ( t . a3 ) + 1 ) by A13,Lm11;
( p0 + ( ( t . a1 ) + 1 ) ) = ( t . a3 ) by A17;
then ( t . a3 ) >= ( 6 + ( ( t . a1 ) + 1 ) ) by A5,XREAL_1:6;
then A32: ( t . a3 ) >= ( ( 6 + 1 ) + ( t . a1 ) );
then A33: ( Bt . a ) = ( 0 ) by A13,Lm12;
A34: ( Bt . a2 ) = ( ( t . a2 ) - 1 ) by A13,A32,Lm12;
then A35: ( n - ( Bt . a2 ) ) = ( m + 1 ) by A16;
A36: ( Bt . a1 ) = ( ( t . a1 ) + 1 ) by A13,A32,Lm12;
then A37: ( ( Bt . a2 ) + ( Bt . a1 ) ) = ( n - 1 ) by A14,A34;
( Bt . a3 ) = ( ( t . a3 ) + 1 ) by A13,A32,Lm12;
then A38: ( ( ( Bt . a3 ) - ( Bt . a1 ) ) - 1 ) = p0 by A17,A36;
A39: ( t1 . a6 ) = ( ( t . a1 ) + 1 ) by A13,Lm11;
then A40: p0 = ( ( ( t1 . a4 ) - ( t1 . a6 ) ) - 1 ) by A17,A31;
now
let i being (Element of ( NAT ));
assume (1 <= i & i <= ( len f2 ));
hence ( f2 . i ) = ( ( IExec (FR,Q,t) ) . ( intpos ( p0 + i ) ) ) by A19,CKB1:def 1
.= ( ( IExec (FR,Q,( Initialize Bt )) ) . ( intpos ( p0 + i ) ) ) by A13,A15,A32,Lm14;
end;
then A42: f2 is_FinSequence_on ( IExec (FR,Q,( Initialize Bt )) ),p0 by CKB1:def 1;
B48:now
A43: ( p0 + 1 ) >= ( 6 + 1 ) by A5,XREAL_1:6;
let i being (Element of ( NAT ));
assume that
A44: 1 <= i
and
A45: i <= ( len f1 );
( p0 + 1 ) <= ( p0 + i ) by A44,XREAL_1:6;
then A46: ( p0 + i ) >= 7 by A43,XXREAL_0:2;
thus ( f1 . i ) = ( t . ( intpos ( p0 + i ) ) ) by A18,A44,A45,CKB1:def 1
.= ( t1 . ( intpos ( p0 + i ) ) ) by A13,A46,Lm11;
end;
( t1 . a4 ) = ( p0 + ( ( t1 . a6 ) + 1 ) ) by A17,A31,A39;
then ( t1 . a4 ) >= ( 6 + ( ( t1 . a6 ) + 1 ) ) by A5,XREAL_1:6;
then A49: ( t1 . a4 ) >= ( ( 6 + 1 ) + ( t1 . a6 ) );
( m + ( k + 1 ) ) = n by A15,A16;
then A50: n > ( ( 0 ) + m ) by XREAL_1:6;
consider h being (FinSequence of ( INT )) such that A51: ( len h ) = n and A52: (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len h )) implies ( h . i ) = ( ( IExec (WH,Q1,( Initialize t1 )) ) . ( intpos ( p0 + i ) ) ))) by CKB2:1;
A54: h is_FinSequence_on ( IExec (WH,Q1,( Initialize t1 )) ),p0 by A52,CKB1:def 1;
B59:now
A55: ( p0 + 1 ) >= ( 6 + 1 ) by A5,XREAL_1:6;
let i being (Element of ( NAT ));
assume that
A56: 1 <= i
and
A57: i <= ( len h );
( p0 + 1 ) <= ( p0 + i ) by A56,XREAL_1:6;
then ( p0 + i ) >= 7 by A55,XXREAL_0:2;
then A58: ( p0 + i ) > 2 by XXREAL_0:2;
thus ( h . i ) = ( ( IExec (WH,Q1,( Initialize t1 )) ) . ( intpos ( p0 + i ) ) ) by A52,A56,A57
.= ( Bt . ( intpos ( p0 + i ) ) ) by A13,A32,A58,Lm12;
end;
A60: f1 is_FinSequence_on ( Initialize t1 ),p0
proof
let i being (Element of ( NAT ));
assume (1 <= i & i <= ( len f1 ));
then ( f1 . i ) = ( t1 . ( intpos ( p0 + i ) ) ) by B48;
hence thesis by SCMPDS_5:15;
end;
A61: ( t1 . a ) = ( 0 ) by A13,Lm11;
then A62: f1,h are_fiberwise_equipotent  by A14,A16,A17,A20,A31,A51,A40,A49,A54,A50,CKB24:1,A29,A30,A28,A60;
A63: h is_non_decreasing_on 1,( m + 1 ) by A14,A16,A17,A20,A31,A51,A40,A49,A54,A50,CKB24:1,A29,A30,A28,A60,A61;
X1: ( ( Initialize Bt ) . a ) = ( Bt . a ) by SCMPDS_5:15;
X2: ( ( Initialize Bt ) . a1 ) = ( Bt . a1 ) by SCMPDS_5:15;
X3: ( ( Initialize Bt ) . a2 ) = ( Bt . a2 ) by SCMPDS_5:15;
X4: ( ( Initialize Bt ) . a3 ) = ( Bt . a3 ) by SCMPDS_5:15;
X5: h is_FinSequence_on ( Initialize Bt ),p0
proof
let i being (Element of ( NAT ));
assume that
Z: (1 <= i & i <= ( len h ));
thus ( h . i ) = ( Bt . ( intpos ( p0 + i ) ) ) by Z,B59
.= ( ( Initialize Bt ) . ( intpos ( p0 + i ) ) ) by SCMPDS_5:15;
end;
then h,f2 are_fiberwise_equipotent  by A12,A15,A16,A21,A51,A33,A37,A35,A38,A42,A63,X1,X2,X3,X4;
hence f1,f2 are_fiberwise_equipotent  by A62,CLASSES1:76;
thus f2 is_non_decreasing_on 1,n by A12,A15,A16,A21,A51,A63,A33,A37,A35,A38,A42,X1,X2,X3,X4,X5;
end;
hence P[ ( k + 1 ) ];
end;
A64: P[ (( 0 ) qua Nat) ]
proof
let t being ( 0 ) -started (State of ( SCMPDS ));
let Q;
let f1 being (FinSequence of ( INT ));
let f2 being (FinSequence of ( INT ));
let m being (Element of ( NAT ));
T: ( Initialize t ) = t by MEMSTR_0:44;
assume that
A65: ( t . a ) = ( 0 )
and
( ( t . a2 ) + ( t . a1 ) ) = ( n - 1 )
and
A66: ( t . a2 ) = ( 0 )
and
A67: m = ( n - ( t . a2 ) )
and
p0 = ( ( ( t . a3 ) - ( t . a1 ) ) - 1 )
and
A68: f1 is_FinSequence_on t,p0
and
A69: f2 is_FinSequence_on ( IExec (FR,Q,t) ),p0
and
A70: f1 is_non_decreasing_on 1,m
and
A71: (( len f1 ) = n & ( len f2 ) = n);
A72: ( t . ( DataLoc (( t . a ),2) ) ) = ( 0 ) by A65,A66,SCMP_GCD:1;
A73:now
let i being Nat;
assume A74: (1 <= i & i <= ( len f2 ));
A75: i in ( NAT ) by ORDINAL1:def 12;
hence ( f2 . i ) = ( ( IExec (FR,Q,( Initialize t )) ) . ( intpos ( p0 + i ) ) ) by A69,A74,CKB1:def 1,T
.= ( t . ( intpos ( p0 + i ) ) ) by A72,SCMPDS_7:47
.= ( f1 . i ) by A68,A71,A75,A74,CKB1:def 1;
end;
hence f1,f2 are_fiberwise_equipotent  by A71,FINSEQ_1:14;
thus thesis by A66,A67,A70,A71,A73,FINSEQ_1:14;
end;
(for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A64,A11);
then A76: P[ n1 ];
(p0 = ( ( ( s . a3 ) - ( s . a1 ) ) - 1 ) & f is_non_decreasing_on 1,1) by A3,A4,GRAPH_2:63;
hence thesis by A1,A6,A7,A8,A10,A76;
end;
end;
theorem
(for s being ( 0 ) -started (State of ( SCMPDS )) holds (for f,g being (FinSequence of ( INT )) holds (for p0,n being (Element of ( NAT )) holds (((((p0 >= 6 & ( len f ) = n) & ( len g ) = n) & f is_FinSequence_on s,p0) & g is_FinSequence_on ( IExec (( insert-sort (n,( p0 + 1 )) ),P,s) ),p0) implies (f,g are_fiberwise_equipotent  & g is_non_decreasing_on 1,n)))))
proof
set a = ( GBP );
let s being ( 0 ) -started (State of ( SCMPDS ));
let f being (FinSequence of ( INT ));
let g being (FinSequence of ( INT ));
let p0 being (Element of ( NAT ));
let n being (Element of ( NAT ));
assume that
A1: p0 >= 6
and
A2: (( len f ) = n & ( len g ) = n)
and
A3: f is_FinSequence_on s,p0
and
A4: g is_FinSequence_on ( IExec (( insert-sort (n,( p0 + 1 )) ),P,s) ),p0;
A5: ( p0 + 1 ) >= ( 6 + 1 ) by A1,XREAL_1:6;
set i1 = ( ( GBP ) := ( 0 ) );
set i2 = ( (( GBP ),1) := ( 0 ) );
set i3 = ( (( GBP ),2) := ( n - 1 ) );
set i4 = ( (( GBP ),3) := ( p0 + 1 ) );
set I4 = ( ( ( i1 ';' i2 ) ';' i3 ) ';' i4 );
set t1 = ( IExec (I4,P,s) );
set t2 = ( IExec (( ( i1 ';' i2 ) ';' i3 ),P,s) );
set t3 = ( IExec (( i1 ';' i2 ),P,s) );
set t4 = ( Exec (i1,s) );
A6: ( t4 . a ) = ( 0 ) by SCMPDS_2:45;
then A7: ( DataLoc (( t4 . a ),1) ) = ( intpos ( ( 0 ) + 1 ) ) by SCMP_GCD:1;
A8: ( t3 . a ) = ( ( Exec (i2,t4) ) . a ) by SCMPDS_5:42
.= ( 0 ) by A6,A7,AMI_3:10,SCMPDS_2:46;
then A9: ( DataLoc (( t3 . a ),2) ) = ( intpos ( ( 0 ) + 2 ) ) by SCMP_GCD:1;
A10: ( t2 . a ) = ( ( Exec (i3,t3) ) . a ) by SCMPDS_5:41
.= ( 0 ) by A8,A9,AMI_3:10,SCMPDS_2:46;
then A11: ( DataLoc (( t2 . a ),3) ) = ( intpos ( ( 0 ) + 3 ) ) by SCMP_GCD:1;
A13:now
let i being (Element of ( NAT ));
assume A14: i > 3;
then A15: i > 1 by XXREAL_0:2;
thus ( t3 . ( intpos i ) ) = ( ( Exec (i2,t4) ) . ( intpos i ) ) by SCMPDS_5:42
.= ( t4 . ( intpos i ) ) by A7,A15,AMI_3:10,SCMPDS_2:46
.= ( s . ( intpos i ) ) by A14,AMI_3:10,SCMPDS_2:45;
end;
A16:now
let i being (Element of ( NAT ));
assume A17: i > 3;
then A18: i > 2 by XXREAL_0:2;
thus ( t2 . ( intpos i ) ) = ( ( Exec (i3,t3) ) . ( intpos i ) ) by SCMPDS_5:41
.= ( t3 . ( intpos i ) ) by A9,A18,AMI_3:10,SCMPDS_2:46
.= ( s . ( intpos i ) ) by A13,A17;
end;
now
let i being (Element of ( NAT ));
assume that
A19: 1 <= i
and
A20: i <= ( len f );
set pi = ( p0 + i );
pi >= ( p0 + 1 ) by A19,XREAL_1:6;
then pi >= 7 by A5,XXREAL_0:2;
then A21: pi > 3 by XXREAL_0:2;
thus ( ( Initialize t1 ) . ( intpos pi ) ) = ( t1 . ( intpos pi ) ) by SCMPDS_5:15
.= ( ( Exec (i4,t2) ) . ( intpos pi ) ) by SCMPDS_5:41
.= ( t2 . ( intpos pi ) ) by A11,A21,AMI_3:10,SCMPDS_2:46
.= ( s . ( intpos pi ) ) by A16,A21
.= ( f . i ) by A3,A19,A20,CKB1:def 1;
end;
then A22: f is_FinSequence_on ( Initialize t1 ),p0 by CKB1:def 1;
A23: ( t3 . a1 ) = ( ( Exec (i2,t4) ) . a1 ) by SCMPDS_5:42
.= ( 0 ) by A7,SCMPDS_2:46;
A24: ( t2 . a1 ) = ( ( Exec (i3,t3) ) . a1 ) by SCMPDS_5:41
.= ( 0 ) by A23,A9,AMI_3:10,SCMPDS_2:46;
A25: (I4 is_closed_on s,P & I4 is_halting_on s,P) by SCMPDS_6:20,SCMPDS_6:21;
A26: ( t1 . a ) = ( ( Exec (i4,t2) ) . a ) by SCMPDS_5:41
.= ( 0 ) by A10,A11,AMI_3:10,SCMPDS_2:46;
A27: ( t2 . a2 ) = ( ( Exec (i3,t3) ) . a2 ) by SCMPDS_5:41
.= ( n - 1 ) by A9,SCMPDS_2:46;
A28: ( t1 . a3 ) = ( ( Exec (i4,t2) ) . a3 ) by SCMPDS_5:41
.= ( p0 + 1 ) by A11,SCMPDS_2:46;
A29: ( t1 . a3 ) = ( ( Initialize t1 ) . a3 ) by SCMPDS_5:15;
A30: ( t1 . a1 ) = ( ( Initialize t1 ) . a1 ) by SCMPDS_5:15;
A31: ( t1 . a ) = ( ( Initialize t1 ) . a ) by SCMPDS_5:15;
A32: ( t1 . a2 ) = ( ( Initialize t1 ) . a2 ) by SCMPDS_5:15;
A33: ( t1 . a1 ) = ( ( Exec (i4,t2) ) . a1 ) by SCMPDS_5:41
.= ( 0 ) by A24,A11,AMI_3:10,SCMPDS_2:46;
then ( t1 . a3 ) >= ( ( t1 . a1 ) + 7 ) by A28,A5;
then (FR is_closed_on ( Initialize t1 ),P & FR is_halting_on ( Initialize t1 ),P) by A26,Lm13,A29,A30,A31;
then A34: (FR is_closed_on t1,P & FR is_halting_on t1,P) by SCMPDS_6:125,SCMPDS_6:126;
now
let i being (Element of ( NAT ));
assume (1 <= i & i <= ( len g ));
hence ( g . i ) = ( ( IExec (( I4 ';' FR ),P,s) ) . ( intpos ( p0 + i ) ) ) by A4,CKB1:def 1
.= ( ( IExec (FR,P,( Initialize t1 )) ) . ( intpos ( p0 + i ) ) ) by A25,A34,SCMPDS_7:30;
end;
then A35: g is_FinSequence_on ( IExec (FR,P,( Initialize t1 )) ),p0 by CKB1:def 1;
( t1 . a2 ) = ( ( Exec (i4,t2) ) . a2 ) by SCMPDS_5:41
.= ( n - 1 ) by A27,A11,AMI_3:10,SCMPDS_2:46;
hence thesis by A1,A2,A26,A33,A28,A22,A35,Lm16,A29,A30,A31,A32;
end;
