environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,VECTSP_1,FINSEQ_1,SUBSET_1,FUNCOP_1,MATRIX_1,FINSEQ_2,RELAT_1,XXREAL_0,CARD_1,TREES_1,FUNCT_1,ARYTM_3,ZFMISC_1,SUPINF_2,INCSP_1,FINSEQ_3,STRUCT_0,QC_LANG1,TARSKI,FUNCT_2,ALGSTR_0,BINOP_1,GROUP_1,ABIAN,INT_1,CARD_3,ARYTM_1,FINSET_1,FINSUB_1,MATRIX_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FINSEQ_1,FUNCT_2,STRUCT_0,ALGSTR_0,NAT_1,NAT_D,GROUP_1,GROUP_4,BINOP_1,VECTSP_1,MATRIX_1,FINSET_1,FINSUB_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,NUMBERS,XXREAL_0,CKB1,CKB2,CKB5,CKB8,CKB9,CKB11,CKB13,CKB14,CKB17,CKB18,CKB22;
definitions STRUCT_0,FINSEQ_2,MATRIX_1,TARSKI,ALGSTR_0,CKB1,CKB5,CKB13,CKB14,CKB22;
theorems FINSEQ_1,FINSEQ_2,FINSEQ_3,TARSKI,GROUP_1,FUNCT_1,FUNCT_2,ZFMISC_1,NAT_1,BINOP_1,FINSUB_1,FINSET_1,GROUP_4,FRAENKEL,MATRIX_1,RELAT_1,XBOOLE_0,FUNCOP_1,ORDINAL1,NAT_D,CARD_1,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB10,CKB12,CKB13,CKB14,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25;
schemes BINOP_1,MATRIX_1,XBOOLE_0;
registrations XBOOLE_0,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,XXREAL_0,NAT_1,FINSEQ_1,FINSEQ_2,STRUCT_0,GROUP_1,MATRIX_1,ORDINAL1,CARD_1,CKB15,CKB16;
constructors RELAT_2,PARTFUN1,BINOP_1,FINSUB_1,XXREAL_0,NAT_1,NAT_D,FINSEQOP,FINSEQ_4,GROUP_4,MATRIX_1,VECTSP_1,RELSET_1,CKB1,CKB2,CKB5,CKB8,CKB9,CKB11,CKB13,CKB14,CKB22;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve i for Nat;
reserve j for Nat;
reserve D for non  empty set;
theorem
(for M1,M2 being (Matrix of D) holds ((( width M1 ) > ( 0 ) & ( width M2 ) > ( 0 )) implies (M1 = M2 iff (( M1 @ ) = ( M2 @ ) & ( width M1 ) = ( width M2 )))))
proof
let M1 being (Matrix of D);
let M2 being (Matrix of D);
assume that
A1: ( width M1 ) > ( 0 )
and
A2: ( width M2 ) > ( 0 );
thus (M1 = M2 implies (( M1 @ ) = ( M2 @ ) & ( width M1 ) = ( width M2 )));
assume that
A3: ( M1 @ ) = ( M2 @ )
and
A4: ( width M1 ) = ( width M2 );
( len M1 ) = ( width ( M1 @ ) ) by A1,CKB24:1;
then A5: ( len M1 ) = ( len M2 ) by A2,A3,CKB24:1;
A6: ( Indices M2 ) = [: ( dom M2 ),( Seg ( width M2 ) ) :];
(for i holds (for j holds ([ i,j ] in ( Indices M1 ) implies ( M1 * (i,j) ) = ( M2 * (i,j) ))))
proof
let i;
let j;
assume A7: [ i,j ] in ( Indices M1 );
( dom M1 ) = ( Seg ( len M2 ) ) by A5,FINSEQ_1:def 3
.= ( dom M2 ) by FINSEQ_1:def 3;
then ( ( M2 @ ) * (j,i) ) = ( M2 * (i,j) ) by A4,A6,A7,MATRIX_1:def 6;
hence thesis by A3,A7,MATRIX_1:def 6;
end;
hence thesis by A4,A5,MATRIX_1:21;
end;
