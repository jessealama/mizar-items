environ
vocabularies NUMBERS,RLVECT_1,STRUCT_0,SUBSET_1,ALGSTR_0,BINOP_1,FUNCT_1,ZFMISC_1,XBOOLE_0,REAL_1,PRE_TOPC,SUPINF_2,PROB_2,RLSUB_1,FUNCOP_1,CARD_1,ARYTM_3,RELAT_1,XXREAL_0,XREAL_0,ORDINAL1,ARYTM_1,COMPLEX1,SQUARE_1,FUNCT_3,RVSUM_1,NORMSP_1,METRIC_1,NAT_1,BHSP_1,PARTFUN1,CKB6;
notations XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCOP_1,BINOP_1,NAT_1,STRUCT_0,ALGSTR_0,DOMAIN_1,PRE_TOPC,RLVECT_1,RLSUB_1,SQUARE_1,VFUNCT_1,NORMSP_1,QUIN_1,XXREAL_0,CKB1,CKB4,CKB6,CKB12,CKB14,CKB15,CKB35,CKB42,CKB51,CKB62,CKB64;
definitions NORMSP_1,STRUCT_0,SQUARE_1,ALGSTR_0,RLVECT_1,VALUED_0,FUNCT_2,CKB4,CKB6,CKB12,CKB35,CKB42,CKB51,CKB62;
theorems TARSKI,SQUARE_1,ABSVALUE,RLVECT_1,RLSUB_1,QUIN_1,FUNCT_2,NORMSP_1,XREAL_0,COMPLEX1,FUNCOP_1,XREAL_1,XXREAL_0,ALGSTR_0,VALUED_0,ORDINAL1,VFUNCT_1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71;
schemes FUNCT_2;
registrations SUBSET_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,SQUARE_1,MEMBERED,STRUCT_0,XBOOLE_0,ALGSTR_0,FUNCT_2,VFUNCT_1,CKB1,CKB2,CKB3,CKB13;
constructors BINOP_1,DOMAIN_1,FUNCOP_1,REAL_1,SQUARE_1,NAT_1,MEMBERED,COMPLEX1,SEQ_1,QUIN_1,RLSUB_1,NORMSP_1,RELSET_1,VFUNCT_1,CKB1,CKB4,CKB6,CKB12,CKB15,CKB35,CKB42,CKB51,CKB62,CKB64;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve a for Real;
reserve b for Real;
reserve X for RealUnitarySpace;
reserve seq for (sequence of X);
reserve n for (Element of ( NAT ));
theorem
( ( a + b ) * seq ) = ( ( a * seq ) + ( b * seq ) )
proof
let n;
thus ( ( ( a + b ) * seq ) . n ) = ( ( a + b ) * ( seq . n ) ) by NORMSP_1:def 5
.= ( ( a * ( seq . n ) ) + ( b * ( seq . n ) ) ) by RLVECT_1:def 6
.= ( ( ( a * seq ) . n ) + ( b * ( seq . n ) ) ) by NORMSP_1:def 5
.= ( ( ( a * seq ) . n ) + ( ( b * seq ) . n ) ) by NORMSP_1:def 5
.= ( ( ( a * seq ) + ( b * seq ) ) . n ) by NORMSP_1:def 2;
end;
