environ
vocabularies NUMBERS,RLVECT_1,REAL_1,PARSP_1,ANALOAF,ANALMETR,RELAT_1,ARYTM_3,SUPINF_2,CARD_1,SUBSET_1,STRUCT_0,DIRAF,ARYTM_1,PBOOLE,SYMSP_1,MCART_1,ZFMISC_1,BINOP_1,FUNCT_1,MIDSP_1,XBOOLE_0,GEOMTRAP;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,NUMBERS,XXREAL_0,REAL_1,STRUCT_0,DIRAF,RELSET_1,RLVECT_1,MIDSP_1,AFF_1,ANALOAF,BINOP_1,ANALMETR,CKB1,CKB6;
definitions STRUCT_0,RLVECT_1,CKB1,CKB6;
theorems RLVECT_1,RELAT_1,DIRAF,ANALOAF,ANALMETR,AFF_1,ZFMISC_1,RLSUB_2,XCMPLX_0,XCMPLX_1,XREAL_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7;
schemes RELSET_1,BINOP_1,BINOP_2;
registrations SUBSET_1,RELSET_1,MEMBERED,STRUCT_0,ANALOAF,DIRAF,ANALMETR;
constructors BINOP_1,DOMAIN_1,XXREAL_0,REAL_1,MEMBERED,MIDSP_1,AFF_1,ANALMETR,CKB1,CKB6;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve V for RealLinearSpace;
reserve u for (VECTOR of V);
reserve u1 for (VECTOR of V);
reserve v for (VECTOR of V);
reserve v1 for (VECTOR of V);
reserve w for (VECTOR of V);
theorem
Th8: ( ( u # u1 ) # ( v # v1 ) ) = ( ( u # v ) # ( u1 # v1 ) )
proof
set p = ( u # u1 );
set q = ( v # v1 );
set r = ( u # v );
set s = ( u1 # v1 );
set x = ( p # q );
set y = ( r # s );
A1:now
let w;
w = ( 1 * w ) by RLVECT_1:def 8;
then ( ( w + w ) + ( w + w ) ) = ( ( ( 1 + 1 ) * w ) + ( ( 1 * w ) + ( 1 * w ) ) ) by RLVECT_1:def 6
.= ( ( ( 1 + 1 ) * w ) + ( ( 1 + 1 ) * w ) ) by RLVECT_1:def 6
.= ( ( ( 1 + 1 ) + ( 1 + 1 ) ) * w ) by RLVECT_1:def 6;
hence ( ( w + w ) + ( w + w ) ) = ( 4 * w );
end;
( ( x + x ) + ( x + x ) ) = ( ( x + x ) + ( p + q ) ) by CKB6:def 1
.= ( ( p + q ) + ( p + q ) ) by CKB6:def 1
.= ( p + ( q + ( p + q ) ) ) by RLVECT_1:def 3
.= ( p + ( p + ( q + q ) ) ) by RLVECT_1:def 3
.= ( ( p + p ) + ( q + q ) ) by RLVECT_1:def 3
.= ( ( p + p ) + ( v + v1 ) ) by CKB6:def 1
.= ( ( u + u1 ) + ( v + v1 ) ) by CKB6:def 1
.= ( u + ( u1 + ( v + v1 ) ) ) by RLVECT_1:def 3
.= ( u + ( v + ( v1 + u1 ) ) ) by RLVECT_1:def 3
.= ( ( u + v ) + ( v1 + u1 ) ) by RLVECT_1:def 3
.= ( ( u + v ) + ( s + s ) ) by CKB6:def 1
.= ( ( r + r ) + ( s + s ) ) by CKB6:def 1
.= ( r + ( r + ( s + s ) ) ) by RLVECT_1:def 3
.= ( r + ( s + ( s + r ) ) ) by RLVECT_1:def 3
.= ( ( r + s ) + ( s + r ) ) by RLVECT_1:def 3
.= ( ( y + y ) + ( r + s ) ) by CKB6:def 1
.= ( ( y + y ) + ( y + y ) ) by CKB6:def 1;
then ( 4 * x ) = ( ( y + y ) + ( y + y ) ) by A1
.= ( 4 * y ) by A1;
hence thesis by RLVECT_1:36;
end;
