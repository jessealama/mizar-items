environ
vocabularies NUMBERS,RLVECT_1,REAL_1,PARSP_1,ANALOAF,ANALMETR,RELAT_1,ARYTM_3,SUPINF_2,CARD_1,SUBSET_1,STRUCT_0,DIRAF,ARYTM_1,PBOOLE,SYMSP_1,MCART_1,ZFMISC_1,BINOP_1,FUNCT_1,MIDSP_1,XBOOLE_0,GEOMTRAP;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,NUMBERS,XXREAL_0,REAL_1,STRUCT_0,DIRAF,RELSET_1,RLVECT_1,MIDSP_1,AFF_1,ANALOAF,BINOP_1,ANALMETR,CKB1,CKB6,CKB27,CKB46,CKB47,CKB54,CKB69,CKB71,CKB72,CKB74,CKB76,CKB78,CKB96,CKB98,CKB100,CKB102,CKB112,CKB115,CKB117;
definitions STRUCT_0,RLVECT_1,CKB1,CKB6,CKB27,CKB46,CKB47,CKB54,CKB69,CKB71,CKB74,CKB76,CKB78,CKB96,CKB100,CKB112,CKB117;
theorems RLVECT_1,RELAT_1,DIRAF,ANALOAF,ANALMETR,AFF_1,ZFMISC_1,RLSUB_2,XCMPLX_0,XCMPLX_1,XREAL_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB74,CKB76,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB99,CKB100,CKB104,CKB105,CKB106,CKB107,CKB108,CKB109,CKB110,CKB111,CKB112,CKB113,CKB117;
schemes RELSET_1,BINOP_1,BINOP_2;
registrations SUBSET_1,RELSET_1,MEMBERED,STRUCT_0,ANALOAF,DIRAF,ANALMETR,CKB72,CKB73,CKB75,CKB77,CKB97,CKB101,CKB103,CKB114,CKB116;
constructors BINOP_1,DOMAIN_1,XXREAL_0,REAL_1,MEMBERED,MIDSP_1,AFF_1,ANALMETR,CKB1,CKB6,CKB27,CKB46,CKB47,CKB54,CKB69,CKB71,CKB72,CKB74,CKB76,CKB78,CKB96,CKB100,CKB112,CKB117;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve V for RealLinearSpace;
reserve w for (VECTOR of V);
reserve y for (VECTOR of V);
reserve a1 for (Element of ( DTrSpace (V,w,y) ));
reserve b1 for (Element of ( DTrSpace (V,w,y) ));
reserve c1 for (Element of ( DTrSpace (V,w,y) ));
reserve d1 for (Element of ( DTrSpace (V,w,y) ));
reserve p for (Element of ( DTrSpace (V,w,y) ));
reserve q for (Element of ( DTrSpace (V,w,y) ));
reserve OTS for OrdTrapSpace;
reserve a for (Element of OTS);
reserve b for (Element of OTS);
reserve c for (Element of OTS);
reserve d for (Element of OTS);
reserve a9 for (Element of ( Lambda OTS ));
reserve b9 for (Element of ( Lambda OTS ));
reserve c9 for (Element of ( Lambda OTS ));
reserve d9 for (Element of ( Lambda OTS ));
registration
cluster  strict  Regular for non  empty non  empty OrdTrapSpace;
existence
proof
set MOTS = the MidOrdTrapSpace;
set X = ( Af MOTS );
A1:now
let a being (Element of X);
let b being (Element of X);
let c being (Element of X);
let d being (Element of X);
let a9 being (Element of (the carrier of MOTS));
let b9 being (Element of (the carrier of MOTS));
let c9 being (Element of (the carrier of MOTS));
let d9 being (Element of (the carrier of MOTS));
assume that
A2: (((a = a9 & b = b9) & c = c9) & d = d9);
hereby
assume a,b // c,d;
then [ [ a,b ],[ c,d ] ] in (the CONGR of MOTS) by ANALOAF:def 2;
hence a9,b9 // c9,d9 by A2,ANALOAF:def 2;
end;
assume a9,b9 // c9,d9;
then [ [ a,b ],[ c,d ] ] in (the CONGR of MOTS) by A2,ANALOAF:def 2;
hence a,b // c,d by ANALOAF:def 2;
end;
X is  Regular
proof
let p being (Element of X);
let q being (Element of X);
let a being (Element of X);
let a1 being (Element of X);
let b being (Element of X);
let b1 being (Element of X);
let c being (Element of X);
let c1 being (Element of X);
let d being (Element of X);
let d1 being (Element of X);
assume that
A3: p <> q
and
A4: (p,q // a,a1 & p,q // b,b1)
and
A5: (p,q // c,c1 & p,q // d,d1)
and
A6: a,b // c,d;
reconsider a9 = a,b9 = b,c9 = c,d9 = d,a19 = a1,b19 = b1,c19 = c1,d19 = d1,p9 = p,q9 = q as (Element of MOTS);
A7: (p9,q9 // c9,c19 & p9,q9 // d9,d19) by A1,A5;
A8: a9,b9 // c9,d9 by A1,A6;
(p9,q9 // a9,a19 & p9,q9 // b9,b19) by A1,A4;
then a19,b19 // c19,d19 by A3,A7,A8,CKB96:def 1;
hence a1,b1 // c1,d1 by A1;
end;
hence thesis;
end;
end;
