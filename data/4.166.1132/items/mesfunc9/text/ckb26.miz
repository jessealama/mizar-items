environ
vocabularies NUMBERS,XBOOLE_0,PROB_1,MEASURE1,SUBSET_1,SEQFUNC,MESFUNC5,PARTFUN1,XXREAL_0,ORDINAL1,NAT_1,RELAT_1,ARYTM_3,ARYTM_1,FUNCT_1,XREAL_0,ORDINAL2,CARD_1,COMPLEX1,SEQ_2,SUPINF_2,XXREAL_2,RINFSUP1,TARSKI,MEASURE6,REAL_1,PBOOLE,MESFUNC1,VALUED_1,FUNCT_3,MESFUNC2,SUPINF_1,VALUED_0,RFUNCT_3,SERIES_1,CARD_3,MESFUNC8,MSSUBFAM,SETFAM_1,INTEGRA5,FUNCOP_1,ZFMISC_1,FUNCT_2,MEASURE2,MESFUNC9;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,XXREAL_0,VALUED_0,RELAT_1,FUNCT_1,RELSET_1,BINOP_1,FUNCT_2,PARTFUN1,NAT_1,PROB_1,SETFAM_1,SUPINF_1,SUPINF_2,XXREAL_2,MEASURE1,MEASURE2,EXTREAL1,MESFUNC1,MEASURE6,MESFUNC2,SEQFUNC,MESFUNC5,MESFUNC8,RINFSUP2,FUNCOP_1,CKB16,CKB17,CKB18,CKB19;
definitions MESFUNC1,MEASURE6,MESFUNC5,BINOP_1,RINFSUP2,MESFUNC8,TARSKI,VALUED_0,XXREAL_3,CKB17,CKB18,CKB19;
theorems TARSKI,PARTFUN1,FUNCT_1,SUPINF_2,EXTREAL1,EXTREAL2,MESFUNC1,XREAL_0,XBOOLE_0,XBOOLE_1,XCMPLX_1,MESFUNC2,XREAL_1,XXREAL_0,MESFUNC5,PROB_1,NAT_1,RELAT_1,FUNCT_3,ZFMISC_1,FUNCT_2,MEASURE1,MESFUNC6,SEQFUNC,ORDINAL1,SETFAM_1,MESFUNC8,RINFSUP2,MESFUNC7,SEQ_4,RELSET_1,MEASURE2,XXREAL_2,VALUED_0,FUNCOP_1,XXREAL_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25;
schemes FUNCT_2,NAT_1,BINOP_1,RECDEF_1,SEQFUNC,FUNCT_1;
registrations SUBSET_1,NAT_1,XREAL_0,MEMBERED,ORDINAL1,PARTFUN1,MEASURE1,FUNCT_2,RELAT_1,XBOOLE_0,NUMBERS,XXREAL_0,XCMPLX_0,MESFUNC8,FUNCT_1,VALUED_0,XXREAL_3,RELSET_1;
constructors REAL_1,EXTREAL1,EXTREAL2,BINOP_1,NEWTON,MESFUNC1,MEASURE2,MEASURE6,MESFUNC2,MESFUNC5,MESFUNC8,RINFSUP2,SUPINF_1,SEQFUNC,RELSET_1,BINOP_2,CKB16,CKB17,CKB18,CKB19;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
definition
let X being non empty set;
let F being (Functional_Sequence of X,( ExtREAL ));
func Partial_Sums F -> (Functional_Sequence of X,( ExtREAL ))
means
:Def4: (( it . ( 0 ) ) = ( F . ( 0 ) ) & (for n being Nat holds ( it . ( n + 1 ) ) = ( ( it . n ) + ( F . ( n + 1 ) ) )));
existence
proof
defpred P[ (Element of ( NAT )),set,set ]
 means
(((not $2 is (PartFunc of X,( ExtREAL ))) & $3 = ( F . $1 )) or ($2 is (PartFunc of X,( ExtREAL )) & (for F2 being (PartFunc of X,( ExtREAL )) holds (F2 = $2 implies $3 = ( F2 + ( F . ( $1 + 1 ) ) )))));
A1: (for n being (Element of ( NAT )) holds (for x being set holds (ex y being set st P[ n,x,y ])))
proof
let n being (Element of ( NAT ));
let x being set;
thus (ex y being set st P[ n,x,y ])
proof
per cases ;
suppose A2: (not x is (PartFunc of X,( ExtREAL )));

take y = ( F . n );
thus (((not x is (PartFunc of X,( ExtREAL ))) & y = ( F . n )) or (x is (PartFunc of X,( ExtREAL )) & (for F2 being (PartFunc of X,( ExtREAL )) holds (F2 = x implies y = ( F2 + ( F . ( n + 1 ) ) ))))) by A2;
end;
suppose x is (PartFunc of X,( ExtREAL ));

then reconsider G2 = x as (PartFunc of X,( ExtREAL ));
take y = ( G2 + ( F . ( n + 1 ) ) );
thus (((not x is (PartFunc of X,( ExtREAL ))) & y = ( F . n )) or (x is (PartFunc of X,( ExtREAL )) & (for F2 being (PartFunc of X,( ExtREAL )) holds (F2 = x implies y = ( F2 + ( F . ( n + 1 ) ) )))));
end;
end;

end;
consider IT being Function such that A3: ((( dom IT ) = ( NAT ) & ( IT . ( 0 ) ) = ( F . ( 0 ) )) & (for n being (Element of ( NAT )) holds P[ n,( IT . n ),( IT . ( n + 1 ) ) ])) from RECDEF_1:sch 1(A1);
now
defpred IND[ (Element of ( NAT )) ]
 means
( IT . $1 ) is (PartFunc of X,( ExtREAL ));
let f being set;
assume f in ( rng IT );
then consider m being set such that A4: m in ( dom IT ) and A5: f = ( IT . m ) by FUNCT_1:def 3;
reconsider m as (Element of ( NAT )) by A3,A4;
A6: (for n being (Element of ( NAT )) holds (IND[ n ] implies IND[ ( n + 1 ) ]))
proof
let n being (Element of ( NAT ));
assume IND[ n ];
then reconsider F2 = ( IT . n ) as (PartFunc of X,( ExtREAL ));
( IT . ( n + 1 ) ) = ( F2 + ( F . ( n + 1 ) ) ) by A3;
hence thesis;
end;
A7: IND[ ( 0 ) ] by A3;
(for n being (Element of ( NAT )) holds IND[ n ]) from NAT_1:sch 1(A7,A6);
then ( IT . m ) is (PartFunc of X,( ExtREAL ));
hence f in ( PFuncs (X,( ExtREAL )) ) by A5,PARTFUN1:45;
end;
then ( rng IT ) c= ( PFuncs (X,( ExtREAL )) ) by TARSKI:def 3;
then reconsider IT as (Functional_Sequence of X,( ExtREAL )) by A3,FUNCT_2:def 1,RELSET_1:4;
take IT;
(for n being Nat holds ( IT . ( n + 1 ) ) = ( ( IT . n ) + ( F . ( n + 1 ) ) ))
proof
let n being Nat;
reconsider m = n as (Element of ( NAT )) by ORDINAL1:def 12;
( IT . ( m + 1 ) ) = ( ( IT . m ) + ( F . ( m + 1 ) ) ) by A3;
hence thesis;
end;
hence thesis by A3;
end;
uniqueness
proof
let PS1 being (Functional_Sequence of X,( ExtREAL )),PS2 being (Functional_Sequence of X,( ExtREAL ));
assume that
A8: ( PS1 . ( 0 ) ) = ( F . ( 0 ) )
and
A9: (for n being Nat holds ( PS1 . ( n + 1 ) ) = ( ( PS1 . n ) + ( F . ( n + 1 ) ) ))
and
A10: ( PS2 . ( 0 ) ) = ( F . ( 0 ) )
and
A11: (for n being Nat holds ( PS2 . ( n + 1 ) ) = ( ( PS2 . n ) + ( F . ( n + 1 ) ) ));
defpred IND[ Nat ]
 means
( PS1 . $1 ) = ( PS2 . $1 );
A12: (for n being Nat holds (IND[ n ] implies IND[ ( n + 1 ) ]))
proof
let n being Nat;
assume A13: IND[ n ];
( PS1 . ( n + 1 ) ) = ( ( PS1 . n ) + ( F . ( n + 1 ) ) ) by A9;
hence thesis by A11,A13;
end;
A14: IND[ ( 0 ) ] by A8,A10;
(for n being Nat holds IND[ n ]) from NAT_1:sch 2(A14,A12);
then (for m being (Element of ( NAT )) holds ( PS1 . m ) = ( PS2 . m ));
hence thesis by FUNCT_2:63;
end;
end;
