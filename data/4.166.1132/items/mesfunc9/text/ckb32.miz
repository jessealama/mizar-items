environ
vocabularies NUMBERS,XBOOLE_0,PROB_1,MEASURE1,SUBSET_1,SEQFUNC,MESFUNC5,PARTFUN1,XXREAL_0,ORDINAL1,NAT_1,RELAT_1,ARYTM_3,ARYTM_1,FUNCT_1,XREAL_0,ORDINAL2,CARD_1,COMPLEX1,SEQ_2,SUPINF_2,XXREAL_2,RINFSUP1,TARSKI,MEASURE6,REAL_1,PBOOLE,MESFUNC1,VALUED_1,FUNCT_3,MESFUNC2,SUPINF_1,VALUED_0,RFUNCT_3,SERIES_1,CARD_3,MESFUNC8,MSSUBFAM,SETFAM_1,INTEGRA5,FUNCOP_1,ZFMISC_1,FUNCT_2,MEASURE2,MESFUNC9;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,XXREAL_0,VALUED_0,RELAT_1,FUNCT_1,RELSET_1,BINOP_1,FUNCT_2,PARTFUN1,NAT_1,PROB_1,SETFAM_1,SUPINF_1,SUPINF_2,XXREAL_2,MEASURE1,MEASURE2,EXTREAL1,MESFUNC1,MEASURE6,MESFUNC2,SEQFUNC,MESFUNC5,MESFUNC8,RINFSUP2,FUNCOP_1,CKB16,CKB17,CKB18,CKB19,CKB26,CKB27;
definitions MESFUNC1,MEASURE6,MESFUNC5,BINOP_1,RINFSUP2,MESFUNC8,TARSKI,VALUED_0,XXREAL_3,CKB17,CKB18,CKB19,CKB26,CKB27;
theorems TARSKI,PARTFUN1,FUNCT_1,SUPINF_2,EXTREAL1,EXTREAL2,MESFUNC1,XREAL_0,XBOOLE_0,XBOOLE_1,XCMPLX_1,MESFUNC2,XREAL_1,XXREAL_0,MESFUNC5,PROB_1,NAT_1,RELAT_1,FUNCT_3,ZFMISC_1,FUNCT_2,MEASURE1,MESFUNC6,SEQFUNC,ORDINAL1,SETFAM_1,MESFUNC8,RINFSUP2,MESFUNC7,SEQ_4,RELSET_1,MEASURE2,XXREAL_2,VALUED_0,FUNCOP_1,XXREAL_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31;
schemes FUNCT_2,NAT_1,BINOP_1,RECDEF_1,SEQFUNC,FUNCT_1;
registrations SUBSET_1,NAT_1,XREAL_0,MEMBERED,ORDINAL1,PARTFUN1,MEASURE1,FUNCT_2,RELAT_1,XBOOLE_0,NUMBERS,XXREAL_0,XCMPLX_0,MESFUNC8,FUNCT_1,VALUED_0,XXREAL_3,RELSET_1;
constructors REAL_1,EXTREAL1,EXTREAL2,BINOP_1,NEWTON,MESFUNC1,MEASURE2,MEASURE6,MESFUNC2,MESFUNC5,MESFUNC8,RINFSUP2,SUPINF_1,SEQFUNC,RELSET_1,BINOP_2,CKB16,CKB17,CKB18,CKB19,CKB26,CKB27;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve X for non empty set;
reserve F for (Functional_Sequence of X,( ExtREAL ));
reserve n for Nat;
reserve z for set;
theorem
Th25: ((z in ( dom ( ( Partial_Sums F ) . n ) ) & ( ( ( Partial_Sums F ) . n ) . z ) = ( -infty )) implies (ex m being Nat st (m <= n & ( ( F . m ) . z ) = ( -infty ))))
proof
set PF = ( Partial_Sums F );
assume that
A1: z in ( dom ( PF . n ) )
and
A2: ( ( PF . n ) . z ) = ( -infty );
now
defpred P[ Nat ]
 means
($1 <= n implies ( ( PF . $1 ) . z ) <> ( -infty ));
assume A3: (for m being Nat holds (m <= n implies ( ( F . m ) . z ) <> ( -infty )));
A4: (for k being Nat holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being Nat;
assume A5: P[ k ];
assume A6: ( k + 1 ) <= n;
then k <= n by NAT_1:13;
then A7: z in ( dom ( PF . k ) ) by A1,CKB29:1;
(not ( ( PF . k ) . z ) in { ( -infty ) }) by A5,A6,NAT_1:13,TARSKI:def 1;
then (not z in ( ( PF . k ) " { ( -infty ) } )) by FUNCT_1:def 7;
then A8: (not z in ( ( ( PF . k ) " { ( -infty ) } ) /\ ( ( F . ( k + 1 ) ) " { ( +infty ) } ) )) by XBOOLE_0:def 4;
z in ( dom ( F . ( k + 1 ) ) ) by A1,A6,CKB29:1;
then A9: z in ( ( dom ( PF . k ) ) /\ ( dom ( F . ( k + 1 ) ) ) ) by A7,XBOOLE_0:def 4;
A10: ( PF . ( k + 1 ) ) = ( ( PF . k ) + ( F . ( k + 1 ) ) ) by CKB26:def 1;
A11: ( ( F . ( k + 1 ) ) . z ) <> ( -infty ) by A3,A6;
then (not ( ( F . ( k + 1 ) ) . z ) in { ( -infty ) }) by TARSKI:def 1;
then (not z in ( ( F . ( k + 1 ) ) " { ( -infty ) } )) by FUNCT_1:def 7;
then (not z in ( ( ( PF . k ) " { ( +infty ) } ) /\ ( ( F . ( k + 1 ) ) " { ( -infty ) } ) )) by XBOOLE_0:def 4;
then (not z in ( ( ( ( PF . k ) " { ( -infty ) } ) /\ ( ( F . ( k + 1 ) ) " { ( +infty ) } ) ) \/ ( ( ( PF . k ) " { ( +infty ) } ) /\ ( ( F . ( k + 1 ) ) " { ( -infty ) } ) ) )) by A8,XBOOLE_0:def 3;
then z in ( ( ( dom ( PF . k ) ) /\ ( dom ( F . ( k + 1 ) ) ) ) \ ( ( ( ( PF . k ) " { ( -infty ) } ) /\ ( ( F . ( k + 1 ) ) " { ( +infty ) } ) ) \/ ( ( ( PF . k ) " { ( +infty ) } ) /\ ( ( F . ( k + 1 ) ) " { ( -infty ) } ) ) ) ) by A9,XBOOLE_0:def 5;
then z in ( dom ( PF . ( k + 1 ) ) ) by A10,MESFUNC1:def 3;
then ( ( PF . ( k + 1 ) ) . z ) = ( ( ( PF . k ) . z ) + ( ( F . ( k + 1 ) ) . z ) ) by A10,MESFUNC1:def 3;
hence thesis by A5,A6,A11,NAT_1:13,XXREAL_3:17;
end;
( PF . ( 0 ) ) = ( F . ( 0 ) ) by CKB26:def 1;
then A12: P[ ( 0 ) ] by A3;
(for k being Nat holds P[ k ]) from NAT_1:sch 2(A12,A4);
hence contradiction by A2;
end;
hence thesis;
end;
