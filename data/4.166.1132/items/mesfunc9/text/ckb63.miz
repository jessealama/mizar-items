environ
vocabularies NUMBERS,XBOOLE_0,PROB_1,MEASURE1,SUBSET_1,SEQFUNC,MESFUNC5,PARTFUN1,XXREAL_0,ORDINAL1,NAT_1,RELAT_1,ARYTM_3,ARYTM_1,FUNCT_1,XREAL_0,ORDINAL2,CARD_1,COMPLEX1,SEQ_2,SUPINF_2,XXREAL_2,RINFSUP1,TARSKI,MEASURE6,REAL_1,PBOOLE,MESFUNC1,VALUED_1,FUNCT_3,MESFUNC2,SUPINF_1,VALUED_0,RFUNCT_3,SERIES_1,CARD_3,MESFUNC8,MSSUBFAM,SETFAM_1,INTEGRA5,FUNCOP_1,ZFMISC_1,FUNCT_2,MEASURE2,MESFUNC9;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,XXREAL_0,VALUED_0,RELAT_1,FUNCT_1,RELSET_1,BINOP_1,FUNCT_2,PARTFUN1,NAT_1,PROB_1,SETFAM_1,SUPINF_1,SUPINF_2,XXREAL_2,MEASURE1,MEASURE2,EXTREAL1,MESFUNC1,MEASURE6,MESFUNC2,SEQFUNC,MESFUNC5,MESFUNC8,RINFSUP2,FUNCOP_1,CKB16,CKB17,CKB18,CKB19,CKB26,CKB27,CKB59,CKB60,CKB61,CKB62;
definitions MESFUNC1,MEASURE6,MESFUNC5,BINOP_1,RINFSUP2,MESFUNC8,TARSKI,VALUED_0,XXREAL_3,CKB17,CKB18,CKB19,CKB26,CKB27,CKB60,CKB61,CKB62;
theorems TARSKI,PARTFUN1,FUNCT_1,SUPINF_2,EXTREAL1,EXTREAL2,MESFUNC1,XREAL_0,XBOOLE_0,XBOOLE_1,XCMPLX_1,MESFUNC2,XREAL_1,XXREAL_0,MESFUNC5,PROB_1,NAT_1,RELAT_1,FUNCT_3,ZFMISC_1,FUNCT_2,MEASURE1,MESFUNC6,SEQFUNC,ORDINAL1,SETFAM_1,MESFUNC8,RINFSUP2,MESFUNC7,SEQ_4,RELSET_1,MEASURE2,XXREAL_2,VALUED_0,FUNCOP_1,XXREAL_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB60,CKB61,CKB62;
schemes FUNCT_2,NAT_1,BINOP_1,RECDEF_1,SEQFUNC,FUNCT_1;
registrations SUBSET_1,NAT_1,XREAL_0,MEMBERED,ORDINAL1,PARTFUN1,MEASURE1,FUNCT_2,RELAT_1,XBOOLE_0,NUMBERS,XXREAL_0,XCMPLX_0,MESFUNC8,FUNCT_1,VALUED_0,XXREAL_3,RELSET_1,CKB58;
constructors REAL_1,EXTREAL1,EXTREAL2,BINOP_1,NEWTON,MESFUNC1,MEASURE2,MEASURE6,MESFUNC2,MESFUNC5,MESFUNC8,RINFSUP2,SUPINF_1,SEQFUNC,RELSET_1,BINOP_2,CKB16,CKB17,CKB18,CKB19,CKB26,CKB27,CKB59,CKB60,CKB61,CKB62;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve X for non  empty set;
reserve F for (Functional_Sequence of X,( ExtREAL ));
reserve n for Nat;
reserve m for Nat;
definition
let X being set;
let Y being set;
let F being (Function of [: ( NAT ),( NAT ) :],( PFuncs (X,Y) ));
let n being Nat;
func ProjMap2 (F,n) -> (Functional_Sequence of X,Y) means 
:Def9: (for m being Nat holds ( it . m ) = ( F . (m,n) ));
existence
proof
deffunc P2((Element of ( NAT ))) = ( F . ($1,n) );
consider IT being Function such that A6: (( dom IT ) = ( NAT ) & (for m being (Element of ( NAT )) holds ( IT . m ) = P2(m))) from FUNCT_1:sch 4;
now
reconsider n1 = n as (Element of ( NAT )) by ORDINAL1:def 12;
let y being set;
assume y in ( rng IT );
then consider k being set such that A7: k in ( dom IT ) and A8: y = ( IT . k ) by FUNCT_1:def 3;
reconsider k as (Element of ( NAT )) by A6,A7;
y = ( F . (k,n1) ) by A6,A8;
hence y in ( PFuncs (X,Y) );
end;
then ( rng IT ) c= ( PFuncs (X,Y) ) by TARSKI:def 3;
then reconsider IT as (Functional_Sequence of X,Y) by A6,FUNCT_2:def 1,RELSET_1:4;
take IT;
thus (for m being Nat holds ( IT . m ) = ( F . (m,n) ))
proof
let m being Nat;
reconsider n1 = n,m1 = m as (Element of ( NAT )) by ORDINAL1:def 12;
( IT . m ) = ( F . (m1,n1) ) by A6;
hence thesis;
end;

end;
uniqueness
proof
let G1 being (Functional_Sequence of X,Y);
let G2 being (Functional_Sequence of X,Y);
assume that
A9: (for m being Nat holds ( G1 . m ) = ( F . (m,n) ))
and
A10: (for m being Nat holds ( G2 . m ) = ( F . (m,n) ));
(for m being (Element of ( NAT )) holds ( G1 . m ) = ( G2 . m ))
proof
let m being (Element of ( NAT ));
reconsider m1 = m as Nat;
( G1 . m ) = ( F . (m1,n) ) by A9;
hence thesis by A10;
end;
hence thesis by FUNCT_2:63;
end;
end;
