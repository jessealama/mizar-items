environ
vocabularies NUMBERS,XBOOLE_0,PROB_1,MEASURE1,SUBSET_1,SEQFUNC,MESFUNC5,PARTFUN1,XXREAL_0,ORDINAL1,NAT_1,RELAT_1,ARYTM_3,ARYTM_1,FUNCT_1,XREAL_0,ORDINAL2,CARD_1,COMPLEX1,SEQ_2,SUPINF_2,XXREAL_2,RINFSUP1,TARSKI,MEASURE6,REAL_1,PBOOLE,MESFUNC1,VALUED_1,FUNCT_3,MESFUNC2,SUPINF_1,VALUED_0,RFUNCT_3,SERIES_1,CARD_3,MESFUNC8,MSSUBFAM,SETFAM_1,INTEGRA5,FUNCOP_1,ZFMISC_1,FUNCT_2,MEASURE2,MESFUNC9;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,XXREAL_0,VALUED_0,RELAT_1,FUNCT_1,RELSET_1,BINOP_1,FUNCT_2,PARTFUN1,NAT_1,PROB_1,SETFAM_1,SUPINF_1,SUPINF_2,XXREAL_2,MEASURE1,MEASURE2,EXTREAL1,MESFUNC1,MEASURE6,MESFUNC2,SEQFUNC,MESFUNC5,MESFUNC8,RINFSUP2,FUNCOP_1,CKB16,CKB17,CKB18,CKB19,CKB26,CKB27;
definitions MESFUNC1,MEASURE6,MESFUNC5,BINOP_1,RINFSUP2,MESFUNC8,TARSKI,VALUED_0,XXREAL_3,CKB17,CKB18,CKB19,CKB26,CKB27;
theorems TARSKI,PARTFUN1,FUNCT_1,SUPINF_2,EXTREAL1,EXTREAL2,MESFUNC1,XREAL_0,XBOOLE_0,XBOOLE_1,XCMPLX_1,MESFUNC2,XREAL_1,XXREAL_0,MESFUNC5,PROB_1,NAT_1,RELAT_1,FUNCT_3,ZFMISC_1,FUNCT_2,MEASURE1,MESFUNC6,SEQFUNC,ORDINAL1,SETFAM_1,MESFUNC8,RINFSUP2,MESFUNC7,SEQ_4,RELSET_1,MEASURE2,XXREAL_2,VALUED_0,FUNCOP_1,XXREAL_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40;
schemes FUNCT_2,NAT_1,BINOP_1,RECDEF_1,SEQFUNC,FUNCT_1;
registrations SUBSET_1,NAT_1,XREAL_0,MEMBERED,ORDINAL1,PARTFUN1,MEASURE1,FUNCT_2,RELAT_1,XBOOLE_0,NUMBERS,XXREAL_0,XCMPLX_0,MESFUNC8,FUNCT_1,VALUED_0,XXREAL_3,RELSET_1;
constructors REAL_1,EXTREAL1,EXTREAL2,BINOP_1,NEWTON,MESFUNC1,MEASURE2,MEASURE6,MESFUNC2,MESFUNC5,MESFUNC8,RINFSUP2,SUPINF_1,SEQFUNC,RELSET_1,BINOP_2,CKB16,CKB17,CKB18,CKB19,CKB26,CKB27;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve X for non empty set;
reserve F for (Functional_Sequence of X,( ExtREAL ));
reserve f for (PartFunc of X,( ExtREAL ));
reserve x for (Element of X);
theorem
Th34: ((((((F is  additive & F is  with_the_same_dom) & ( dom f ) c= ( dom ( F . ( 0 ) ) )) & x in ( dom f )) & ( F # x ) is  summable) & ( f . x ) = ( Sum ( F # x ) )) implies ( f . x ) = ( lim ( ( Partial_Sums F ) # x ) ))
proof
set PF = ( Partial_Sums F );
assume that
A1: F is  additive
and
A2: F is  with_the_same_dom
and
A3: ( dom f ) c= ( dom ( F . ( 0 ) ) )
and
A4: x in ( dom f )
and
A5: ( F # x ) is  summable
and
A6: ( f . x ) = ( Sum ( F # x ) );
set PFx = ( Partial_Sums ( F # x ) );
PFx is  convergent by A5,CKB18:def 1;
then A7: ( PF # x ) is  convergent by A1,A2,A3,A4,CKB40:1;
per cases  by A7,MESFUNC5:def 12;
suppose A8: (ex g being  real number st ((( lim ( PF # x ) ) = g & (for p being  real number holds (( 0 ) < p implies (ex n being Nat st (for m being Nat holds (n <= m implies |. ( ( ( PF # x ) . m ) - ( lim ( PF # x ) ) ) .| < p)))))) & ( PF # x ) is  convergent_to_finite_number));

then A9: PFx is  convergent_to_finite_number by A1,A2,A3,A4,CKB40:1;
then A10: (not PFx is  convergent_to_+infty) by MESFUNC5:50;
A11: (not PFx is  convergent_to_-infty) by A9,MESFUNC5:51;
PFx is  convergent by A9,MESFUNC5:def 11;
then A12: (ex g being  real number st ((( f . x ) = g & (for p being  real number holds (( 0 ) < p implies (ex n being Nat st (for m being Nat holds (n <= m implies |. ( ( PFx . m ) - ( f . x ) ) .| < p)))))) & PFx is  convergent_to_finite_number)) by A6,A10,A11,MESFUNC5:def 12;
now
let p being  real number;
assume ( 0 ) < p;
then consider n being Nat such that A13: (for m being Nat holds (n <= m implies |. ( ( PFx . m ) - ( f . x ) ) .| < p)) by A12;
take n;
let m being Nat;
assume A14: n <= m;
( PFx . m ) = ( ( PF # x ) . m ) by A1,A2,A3,A4,CKB39:1;
hence |. ( ( ( PF # x ) . m ) - ( f . x ) ) .| < p by A13,A14;
end;
hence thesis by A7,A8,A12,MESFUNC5:def 12;
end;
suppose A15: (( lim ( PF # x ) ) = ( +infty ) & ( PF # x ) is  convergent_to_+infty);

then A16: PFx is  convergent_to_+infty by A1,A2,A3,A4,CKB40:1;
then PFx is  convergent by MESFUNC5:def 11;
hence thesis by A6,A15,A16,MESFUNC5:def 12;
end;
suppose A17: (( lim ( PF # x ) ) = ( -infty ) & ( PF # x ) is  convergent_to_-infty);

then A18: PFx is  convergent_to_-infty by A1,A2,A3,A4,CKB40:1;
then PFx is  convergent by MESFUNC5:def 11;
hence thesis by A6,A17,A18,MESFUNC5:def 12;
end;
end;
