environ
vocabularies NUMBERS,XBOOLE_0,PROB_1,MEASURE1,SUBSET_1,SEQFUNC,MESFUNC5,PARTFUN1,XXREAL_0,ORDINAL1,NAT_1,RELAT_1,ARYTM_3,ARYTM_1,FUNCT_1,XREAL_0,ORDINAL2,CARD_1,COMPLEX1,SEQ_2,SUPINF_2,XXREAL_2,RINFSUP1,TARSKI,MEASURE6,REAL_1,PBOOLE,MESFUNC1,VALUED_1,FUNCT_3,MESFUNC2,SUPINF_1,VALUED_0,RFUNCT_3,SERIES_1,CARD_3,MESFUNC8,MSSUBFAM,SETFAM_1,INTEGRA5,FUNCOP_1,ZFMISC_1,FUNCT_2,MEASURE2,MESFUNC9;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,XXREAL_0,VALUED_0,RELAT_1,FUNCT_1,RELSET_1,BINOP_1,FUNCT_2,PARTFUN1,NAT_1,PROB_1,SETFAM_1,SUPINF_1,SUPINF_2,XXREAL_2,MEASURE1,MEASURE2,EXTREAL1,MESFUNC1,MEASURE6,MESFUNC2,SEQFUNC,MESFUNC5,MESFUNC8,RINFSUP2,FUNCOP_1,CKB16,CKB17,CKB18,CKB19,CKB26,CKB27,CKB59,CKB60;
definitions MESFUNC1,MEASURE6,MESFUNC5,BINOP_1,RINFSUP2,MESFUNC8,TARSKI,VALUED_0,XXREAL_3,CKB17,CKB18,CKB19,CKB26,CKB27,CKB60;
theorems TARSKI,PARTFUN1,FUNCT_1,SUPINF_2,EXTREAL1,EXTREAL2,MESFUNC1,XREAL_0,XBOOLE_0,XBOOLE_1,XCMPLX_1,MESFUNC2,XREAL_1,XXREAL_0,MESFUNC5,PROB_1,NAT_1,RELAT_1,FUNCT_3,ZFMISC_1,FUNCT_2,MEASURE1,MESFUNC6,SEQFUNC,ORDINAL1,SETFAM_1,MESFUNC8,RINFSUP2,MESFUNC7,SEQ_4,RELSET_1,MEASURE2,XXREAL_2,VALUED_0,FUNCOP_1,XXREAL_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB60;
schemes FUNCT_2,NAT_1,BINOP_1,RECDEF_1,SEQFUNC,FUNCT_1;
registrations SUBSET_1,NAT_1,XREAL_0,MEMBERED,ORDINAL1,PARTFUN1,MEASURE1,FUNCT_2,RELAT_1,XBOOLE_0,NUMBERS,XXREAL_0,XCMPLX_0,MESFUNC8,FUNCT_1,VALUED_0,XXREAL_3,RELSET_1,CKB58;
constructors REAL_1,EXTREAL1,EXTREAL2,BINOP_1,NEWTON,MESFUNC1,MEASURE2,MEASURE6,MESFUNC2,MESFUNC5,MESFUNC8,RINFSUP2,SUPINF_1,SEQFUNC,RELSET_1,BINOP_2,CKB16,CKB17,CKB18,CKB19,CKB26,CKB27,CKB59,CKB60;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
definition
let C being non empty set;
let D being non empty set;
let X being non empty set;
let F being (Function of [: C,D :],X);
let d being (Element of D);
func ProjMap2 (F,d) -> (Function of C,X)
means
(for c being (Element of C) holds ( it . c ) = ( F . (c,d) ));
existence
proof
deffunc F((Element of C)) = ( F . ($1,d) );
consider IT being Function such that A1: (( dom IT ) = C & (for c being (Element of C) holds ( IT . c ) = F(c))) from FUNCT_1:sch 4;
now
let c being set;
assume A2: c in C;
then A3: [ c,d ] in [: C,D :] by ZFMISC_1:87;
( IT . c ) = ( F . (c,d) ) by A1,A2
.= ( F . [ c,d ] );
hence ( IT . c ) in X by A3,FUNCT_2:5;
end;
then reconsider IT as (Function of C,X) by A1,FUNCT_2:3;
take IT;
let c being (Element of C);
thus thesis by A1;
end;
uniqueness
proof
let P1 being (Function of C,X),P2 being (Function of C,X);
assume that
A4: (for c being (Element of C) holds ( P1 . c ) = ( F . (c,d) ))
and
A5: (for c being (Element of C) holds ( P2 . c ) = ( F . (c,d) ));
now
let c being set;
assume c in C;
then reconsider c1 = c as (Element of C);
( P1 . c1 ) = ( F . (c1,d) ) by A4;
hence ( P1 . c ) = ( P2 . c ) by A5;
end;
hence thesis by FUNCT_2:12;
end;
end;
