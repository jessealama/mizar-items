environ
vocabularies XBOOLE_0,ORDERS_2,SUBSET_1,WAYBEL_8,WAYBEL_3,STRUCT_0,TARSKI,WAYBEL_0,XXREAL_0,RCOMP_1,RELAT_2,YELLOW_1,CARD_FIL,YELLOW_0,ORDINAL2,LATTICE3,EQREL_1,FINSET_1,CAT_1,REWRITE1,LATTICES,PRE_TOPC,CARD_1,SETFAM_1,RLVECT_3,ORDINAL1,XXREAL_2,ZFMISC_1,FUNCT_1,WELLORD2,RELAT_1,SEQM_3,YELLOW_2,WAYBEL_1,WELLORD1,FUNCT_2,WAYBEL23;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,DOMAIN_1,STRUCT_0,FINSET_1,ORDINAL1,CARD_1,PRE_TOPC,ORDERS_2,CANTOR_1,LATTICE3,YELLOW_0,YELLOW_1,YELLOW_2,WAYBEL_0,WAYBEL_1,WAYBEL_3,WAYBEL_8,CKB2,CKB17,CKB18,CKB19,CKB20,CKB62,CKB63,CKB64,CKB65,CKB66,CKB88;
definitions TARSKI,LATTICE3,YELLOW_0,XBOOLE_0,STRUCT_0,CKB17,CKB18,CKB19,CKB20,CKB62,CKB63,CKB64,CKB65,CKB66,CKB88;
theorems TARSKI,SETFAM_1,ZFMISC_1,FUNCT_1,FUNCT_2,CANTOR_1,LATTICE3,YELLOW_0,YELLOW_1,YELLOW_2,YELLOW_3,YELLOW_5,YELLOW12,WAYBEL_0,WAYBEL_1,WAYBEL_3,WAYBEL_7,WAYBEL_8,WAYBEL10,WAYBEL13,WAYBEL20,WAYBEL21,XBOOLE_0,XBOOLE_1,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB38,CKB39,CKB40,CKB41,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB56,CKB57,CKB58,CKB62,CKB63,CKB64,CKB65,CKB66,CKB73,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88;
schemes ORDINAL1,FUNCT_2,MONOID_1;
registrations RELSET_1,FINSET_1,CARD_1,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,WAYBEL_3,WAYBEL_7,WAYBEL_8,WAYBEL14,SUBSET_1,CKB21,CKB22,CKB23,CKB36,CKB37,CKB42,CKB43,CKB52,CKB53,CKB54,CKB55,CKB59,CKB60,CKB61,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB74,CKB75,CKB76,CKB77;
constructors SETFAM_1,DOMAIN_1,LATTICE3,CANTOR_1,ORDERS_3,WAYBEL_1,WAYBEL_3,WAYBEL_8,RELSET_1,WAYBEL20,TOPS_2,CKB2,CKB17,CKB18,CKB19,CKB20,CKB62,CKB63,CKB64,CKB65,CKB66,CKB88;
requirements SUBSET,BOOLE;
begin
definition
let L being non  empty  reflexive  transitive RelStr;
let S being non  empty  full (SubRelStr of L);
func idsMap S -> (Function of ( InclPoset ( Ids S ) ),( InclPoset ( Ids L ) )) means 
:Def11: (for I being (Ideal of S) holds (ex J being (Subset of L) st (I = J & ( it . I ) = ( downarrow J ))));
existence
proof
defpred P[ set,set ]
 means
(ex J being (Subset of L) st ($1 = J & $2 = ( downarrow J )));
set R = ( InclPoset ( Ids L ) );
set P = ( InclPoset ( Ids S ) );
A1: (for I being (Element of P) holds (ex K being (Element of R) st P[ I,K ]))
proof
let I being (Element of P);
I in (the carrier of P);
then I in ( Ids S ) by YELLOW_1:1;
then I in { X where X is (Ideal of S): (not contradiction) } by WAYBEL_0:def 23;
then consider J being (Ideal of S) such that A2: J = I;
reconsider J as non  empty  directed (Subset of L) by YELLOW_2:7;
( downarrow J ) in { X where X is (Ideal of L): (not contradiction) };
then ( downarrow J ) in ( Ids L ) by WAYBEL_0:def 23;
then reconsider K = ( downarrow J ) as (Element of R) by YELLOW_1:1;
take K;
take J;
thus thesis by A2;
end;
(ex f being (Function of (the carrier of P),(the carrier of R)) st (for I being (Element of P) holds P[ I,( f . I ) ])) from FUNCT_2:sch 3(A1);
then consider f being (Function of (the carrier of P),(the carrier of R)) such that A3: (for I being (Element of P) holds (ex J being (Subset of L) st (I = J & ( f . I ) = ( downarrow J ))));
reconsider f as (Function of P,R);
take f;
(for I being (Ideal of S) holds (ex J being (Subset of L) st (I = J & ( f . I ) = ( downarrow J ))))
proof
let I being (Ideal of S);
I in { X where X is (Ideal of S): (not contradiction) };
then I in (the carrier of RelStr (# ( Ids S ),( RelIncl ( Ids S ) ) #)) by WAYBEL_0:def 23;
then I in (the carrier of P) by YELLOW_1:def 1;
then consider J being (Subset of L) such that A4: I = J and A5: ( f . I ) = ( downarrow J ) by A3;
reconsider J as (Subset of L);
take J;
thus thesis by A4,A5;
end;
hence thesis;
end;
uniqueness
proof
set P = ( InclPoset ( Ids S ) );
let f being (Function of ( InclPoset ( Ids S ) ),( InclPoset ( Ids L ) ));
let g being (Function of ( InclPoset ( Ids S ) ),( InclPoset ( Ids L ) ));
assume that
A6: (for I being (Ideal of S) holds (ex J being (Subset of L) st (I = J & ( f . I ) = ( downarrow J ))))
and
A7: (for I being (Ideal of S) holds (ex J being (Subset of L) st (I = J & ( g . I ) = ( downarrow J ))));
A8: (the carrier of P) = (the carrier of RelStr (# ( Ids S ),( RelIncl ( Ids S ) ) #)) by YELLOW_1:def 1
.= ( Ids S );
A9:now
let x being set;
assume x in (the carrier of P);
then x in { X where X is (Ideal of S): (not contradiction) } by A8,WAYBEL_0:def 23;
then (ex I being (Ideal of S) st x = I);
then reconsider I = x as (Ideal of S);
A10: (ex J2 being (Subset of L) st (I = J2 & ( g . I ) = ( downarrow J2 ))) by A7;
(ex J1 being (Subset of L) st (I = J1 & ( f . I ) = ( downarrow J1 ))) by A6;
hence ( f . x ) = ( g . x ) by A10;
end;
A11: ( dom g ) = (the carrier of P) by FUNCT_2:def 1;
( dom f ) = (the carrier of P) by FUNCT_2:def 1;
hence f = g by A11,A9,FUNCT_1:2;
end;
end;
