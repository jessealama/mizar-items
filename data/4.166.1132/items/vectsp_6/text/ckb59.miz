environ
vocabularies NUMBERS,FINSEQ_1,SUBSET_1,RLVECT_1,ALGSTR_0,BINOP_1,VECTSP_1,LATTICES,XBOOLE_0,STRUCT_0,FUNCT_1,RLVECT_2,FUNCT_2,FINSET_1,SUPINF_2,FUNCOP_1,TARSKI,VALUED_1,NAT_1,RELAT_1,PARTFUN1,XXREAL_0,CARD_1,ORDINAL4,ARYTM_3,CARD_3,MESFUNC1,RLSUB_1,ARYTM_1,FINSEQ_4;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,FINSET_1,PARTFUN1,FINSEQ_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,NAT_1,DOMAIN_1,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,FINSEQ_4,VFUNCT_1,VECTSP_4,CKB1,CKB2,CKB5,CKB7,CKB12,CKB19,CKB29,CKB30,CKB37,CKB46,CKB53;
definitions FUNCT_1,TARSKI,VECTSP_4,XBOOLE_0,RELAT_1,CKB1,CKB2,CKB5,CKB7,CKB12,CKB19,CKB29,CKB30,CKB37,CKB46,CKB53;
theorems CARD_1,CARD_2,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FUNCT_1,FUNCT_2,RLVECT_1,RLVECT_2,TARSKI,VECTSP_1,VFUNCT_1,VECTSP_4,ZFMISC_1,NAT_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,GROUP_1,FUNCOP_1,XREAL_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58;
schemes FINSEQ_1,FUNCT_2,NAT_1;
registrations SUBSET_1,FUNCT_1,RELSET_1,FINSET_1,NUMBERS,MEMBERED,STRUCT_0,VECTSP_1,XXREAL_0,CARD_1,FINSEQ_1;
constructors PARTFUN1,DOMAIN_1,FUNCOP_1,XXREAL_0,NAT_1,MEMBERED,FINSEQ_4,VECTSP_4,RELSET_1,VFUNCT_1,CKB1,CKB2,CKB5,CKB7,CKB12,CKB19,CKB29,CKB30,CKB37,CKB46,CKB53;
requirements NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve x for set;
reserve y for set;
reserve k for (Element of ( NAT ));
reserve GF for  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
reserve V for  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over GF;
reserve v for (Element of V);
reserve a for (Element of GF);
reserve F for (FinSequence of V);
reserve G for (FinSequence of V);
reserve L for (Linear_Combination of V);
theorem
(for GF being Field holds (for V being (VectSp of GF) holds (for L being (Linear_Combination of V) holds (for a being (Element of GF) holds ( Sum ( a * L ) ) = ( a * ( Sum L ) )))))
proof
let GF being Field;
let V being (VectSp of GF);
let L being (Linear_Combination of V);
let a being (Element of GF);
per cases ;
suppose A1: a <> ( 0. GF );

set l = ( a * L );
consider F being (FinSequence of (the carrier of V)) such that A2: F is  one-to-one and A3: ( rng F ) = ( Carrier ( a * L ) ) and A4: ( Sum ( a * L ) ) = ( Sum ( ( a * L ) (#) F ) ) by CKB19:def 1;
consider G being (FinSequence of (the carrier of V)) such that A5: G is  one-to-one and A6: ( rng G ) = ( Carrier L ) and A7: ( Sum L ) = ( Sum ( L (#) G ) ) by CKB19:def 1;
A8: ( len G ) = ( len F ) by A1,A2,A3,A5,A6,CKB39:1,FINSEQ_1:48;
set f = ( ( a * L ) (#) F );
set g = ( L (#) G );
deffunc F(Nat) = ( F <- ( G . $1 ) );
consider P being FinSequence such that A9: ( len P ) = ( len F ) and A10: (for k being Nat holds (k in ( dom P ) implies ( P . k ) = F(k))) from FINSEQ_1:sch 2;
A11: ( Carrier l ) = ( Carrier L ) by A1,CKB39:1;
A12: ( rng P ) c= ( Seg ( len F ) )
proof
let x;
assume x in ( rng P );
then consider y such that A13: y in ( dom P ) and A14: ( P . y ) = x by FUNCT_1:def 3;
reconsider y as (Element of ( NAT )) by A13,FINSEQ_3:23;
y in ( Seg ( len F ) ) by A9,A13,FINSEQ_1:def 3;
then y in ( dom G ) by A8,FINSEQ_1:def 3;
then ( G . y ) in ( rng F ) by A3,A6,A11,FUNCT_1:def 3;
then A15: F just_once_values ( G . y ) by A2,FINSEQ_4:8;
( P . y ) = ( F <- ( G . y ) ) by A10,A13;
then ( P . y ) in ( dom F ) by A15,FINSEQ_4:def 3;
hence thesis by A14,FINSEQ_1:def 3;
end;
A16:now
let x;
thus (x in ( dom G ) implies (x in ( dom P ) & ( P . x ) in ( dom F )))
proof
assume x in ( dom G );
then x in ( Seg ( len P ) ) by A9,A8,FINSEQ_1:def 3;
hence x in ( dom P ) by FINSEQ_1:def 3;
then ( P . x ) in ( rng P ) by FUNCT_1:def 3;
then ( P . x ) in ( Seg ( len F ) ) by A12;
hence thesis by FINSEQ_1:def 3;
end;

assume that
A17: x in ( dom P )
and
( P . x ) in ( dom F );
x in ( Seg ( len P ) ) by A17,FINSEQ_1:def 3;
hence x in ( dom G ) by A9,A8,FINSEQ_1:def 3;
end;
A18: ( dom P ) = ( Seg ( len F ) ) by A9,FINSEQ_1:def 3;
now
let x;
assume A19: x in ( dom G );
then reconsider n = x as (Element of ( NAT )) by FINSEQ_3:23;
( G . n ) in ( rng F ) by A3,A6,A11,A19,FUNCT_1:def 3;
then A20: F just_once_values ( G . n ) by A2,FINSEQ_4:8;
n in ( Seg ( len F ) ) by A8,A19,FINSEQ_1:def 3;
then ( F . ( P . n ) ) = ( F . ( F <- ( G . n ) ) ) by A10,A18
.= ( G . n ) by A20,FINSEQ_4:def 3;
hence ( G . x ) = ( F . ( P . x ) );
end;
then A21: G = ( F * P ) by A16,FUNCT_1:10;
( Seg ( len F ) ) c= ( rng P )
proof
set f = ( ( F " ) * G );
let x;
assume A22: x in ( Seg ( len F ) );
( dom ( F " ) ) = ( rng G ) by A2,A3,A6,A11,FUNCT_1:33;
then A23: ( rng f ) = ( rng ( F " ) ) by RELAT_1:28
.= ( dom F ) by A2,FUNCT_1:33;
A24: ( rng P ) c= ( dom F ) by A12,FINSEQ_1:def 3;
f = ( ( ( F " ) * F ) * P ) by A21,RELAT_1:36
.= ( ( id ( dom F ) ) * P ) by A2,FUNCT_1:39
.= P by A24,RELAT_1:53;
hence thesis by A22,A23,FINSEQ_1:def 3;
end;
then A25: ( Seg ( len F ) ) = ( rng P ) by A12,XBOOLE_0:def 10;
A26: ( dom P ) = ( Seg ( len F ) ) by A9,FINSEQ_1:def 3;
then A27: P is  one-to-one by A25,FINSEQ_4:60;
(( Seg ( len F ) ) = ( {} ) implies ( Seg ( len F ) ) = ( {} ));
then reconsider P as (Function of ( Seg ( len F ) ),( Seg ( len F ) )) by A12,A26,FUNCT_2:def 1,RELSET_1:4;
reconsider P as (Permutation of ( Seg ( len F ) )) by A25,A27,FUNCT_2:57;
A28: ( len f ) = ( len F ) by CKB12:def 1;
then ( dom f ) = ( Seg ( len F ) ) by FINSEQ_1:def 3;
then reconsider P as (Permutation of ( dom f ));
reconsider Fp = ( f * P ) as (FinSequence of (the carrier of V)) by FINSEQ_2:47;
A29: ( len Fp ) = ( len f ) by FINSEQ_2:44;
then A30: ( len Fp ) = ( len g ) by A8,A28,CKB12:def 1;
A31:now
let k;
let v being (Vector of V);
assume that
A32: k in ( dom g )
and
A33: v = ( g . k );
A34: k in ( Seg ( len g ) ) by A32,FINSEQ_1:def 3;
then A35: k in ( dom P ) by A9,A28,A29,A30,FINSEQ_1:def 3;
A36: k in ( dom G ) by A8,A28,A29,A30,A34,FINSEQ_1:def 3;
then ( G . k ) in ( rng G ) by FUNCT_1:def 3;
then F just_once_values ( G . k ) by A2,A3,A6,A11,FINSEQ_4:8;
then A37: ( F <- ( G . k ) ) in ( dom F ) by FINSEQ_4:def 3;
then reconsider i = ( F <- ( G . k ) ) as (Element of ( NAT )) by FINSEQ_3:23;
A38: ( G /. k ) = ( G . k ) by A36,PARTFUN1:def 6
.= ( F . ( P . k ) ) by A21,A35,FUNCT_1:13
.= ( F . i ) by A10,A18,A28,A29,A30,A34
.= ( F /. i ) by A37,PARTFUN1:def 6;
i in ( Seg ( len f ) ) by A28,A37,FINSEQ_1:def 3;
then A39: i in ( dom f ) by FINSEQ_1:def 3;
thus ( Fp . k ) = ( f . ( P . k ) ) by A35,FUNCT_1:13
.= ( f . ( F <- ( G . k ) ) ) by A10,A18,A28,A29,A30,A34
.= ( ( l . ( F /. i ) ) * ( F /. i ) ) by A39,CKB12:def 1
.= ( ( a * ( L . ( F /. i ) ) ) * ( F /. i ) ) by CKB37:def 1
.= ( a * ( ( L . ( F /. i ) ) * ( F /. i ) ) ) by VECTSP_1:def 16
.= ( a * v ) by A32,A33,A38,CKB12:def 1;
end;
(( Sum Fp ) = ( Sum f ) & ( dom Fp ) = ( dom g )) by A30,FINSEQ_3:29,RLVECT_2:7;
hence thesis by A4,A7,A30,A31,RLVECT_2:66;
end;
suppose A40: a = ( 0. GF );

hence ( Sum ( a * L ) ) = ( Sum ( ZeroLC V ) ) by CKB40:1
.= ( 0. V ) by CKB20:1
.= ( a * ( Sum L ) ) by A40,VECTSP_1:14;
end;
end;
