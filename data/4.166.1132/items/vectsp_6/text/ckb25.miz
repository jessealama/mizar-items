environ
vocabularies NUMBERS,FINSEQ_1,SUBSET_1,RLVECT_1,ALGSTR_0,BINOP_1,VECTSP_1,LATTICES,XBOOLE_0,STRUCT_0,FUNCT_1,RLVECT_2,FUNCT_2,FINSET_1,SUPINF_2,FUNCOP_1,TARSKI,VALUED_1,NAT_1,RELAT_1,PARTFUN1,XXREAL_0,CARD_1,ORDINAL4,ARYTM_3,CARD_3,MESFUNC1,RLSUB_1,ARYTM_1,FINSEQ_4;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,FINSET_1,PARTFUN1,FINSEQ_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,NAT_1,DOMAIN_1,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,FINSEQ_4,VFUNCT_1,VECTSP_4,CKB1,CKB2,CKB5,CKB7,CKB12,CKB19;
definitions FUNCT_1,TARSKI,VECTSP_4,XBOOLE_0,RELAT_1,CKB1,CKB2,CKB5,CKB7,CKB12,CKB19;
theorems CARD_1,CARD_2,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FUNCT_1,FUNCT_2,RLVECT_1,RLVECT_2,TARSKI,VECTSP_1,VFUNCT_1,VECTSP_4,ZFMISC_1,NAT_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,GROUP_1,FUNCOP_1,XREAL_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes FINSEQ_1,FUNCT_2,NAT_1;
registrations SUBSET_1,FUNCT_1,RELSET_1,FINSET_1,NUMBERS,MEMBERED,STRUCT_0,VECTSP_1,XXREAL_0,CARD_1,FINSEQ_1;
constructors PARTFUN1,DOMAIN_1,FUNCOP_1,XXREAL_0,NAT_1,MEMBERED,FINSEQ_4,VECTSP_4,RELSET_1,VFUNCT_1,CKB1,CKB2,CKB5,CKB7,CKB12,CKB19;
requirements NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve GF for  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
reserve V for  Abelian  add-associative  right_zeroed  right_complementable  vector-distributive  scalar-distributive  scalar-associative  scalar-unital non  empty VectSpStr over GF;
reserve v1 for (Element of V);
reserve v2 for (Element of V);
reserve F for (FinSequence of V);
reserve A for (Subset of V);
reserve l for (Linear_Combination of A);
theorem
Th44: (v1 <> v2 implies (for l being (Linear_Combination of { v1,v2 }) holds ( Sum l ) = ( ( ( l . v1 ) * v1 ) + ( ( l . v2 ) * v2 ) )))
proof
assume A1: v1 <> v2;
let l being (Linear_Combination of { v1,v2 });
A2: ( Carrier l ) c= { v1,v2 } by CKB7:def 1;
now
per cases  by A2,ZFMISC_1:36;
suppose ( Carrier l ) = ( {} );

then A3: l = ( ZeroLC V ) by CKB5:def 1;
hence ( Sum l ) = ( 0. V ) by CKB20:1
.= ( ( 0. V ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( 0. GF ) * v1 ) + ( 0. V ) ) by VECTSP_1:14
.= ( ( ( 0. GF ) * v1 ) + ( ( 0. GF ) * v2 ) ) by VECTSP_1:14
.= ( ( ( l . v1 ) * v1 ) + ( ( 0. GF ) * v2 ) ) by A3,CKB6:1
.= ( ( ( l . v1 ) * v1 ) + ( ( l . v2 ) * v2 ) ) by A3,CKB6:1;
end;
suppose A4: ( Carrier l ) = { v1 };

then reconsider L = l as (Linear_Combination of { v1 }) by CKB7:def 1;
A5: (not v2 in ( Carrier l )) by A1,A4,TARSKI:def 1;
thus ( Sum l ) = ( Sum L )
.= ( ( l . v1 ) * v1 ) by CKB24:1
.= ( ( ( l . v1 ) * v1 ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( l . v1 ) * v1 ) + ( ( 0. GF ) * v2 ) ) by VECTSP_1:14
.= ( ( ( l . v1 ) * v1 ) + ( ( l . v2 ) * v2 ) ) by A5;
end;
suppose A6: ( Carrier l ) = { v2 };

then reconsider L = l as (Linear_Combination of { v2 }) by CKB7:def 1;
A7: (not v1 in ( Carrier l )) by A1,A6,TARSKI:def 1;
thus ( Sum l ) = ( Sum L )
.= ( ( l . v2 ) * v2 ) by CKB24:1
.= ( ( 0. V ) + ( ( l . v2 ) * v2 ) ) by RLVECT_1:4
.= ( ( ( 0. GF ) * v1 ) + ( ( l . v2 ) * v2 ) ) by VECTSP_1:14
.= ( ( ( l . v1 ) * v1 ) + ( ( l . v2 ) * v2 ) ) by A7;
end;
suppose ( Carrier l ) = { v1,v2 };

then consider F such that A8: (F is  one-to-one & ( rng F ) = { v1,v2 }) and A9: ( Sum l ) = ( Sum ( l (#) F ) ) by CKB19:def 1;
(F = <* v1,v2 *> or F = <* v2,v1 *>) by A1,A8,FINSEQ_3:99;
then (( l (#) F ) = <* ( ( l . v1 ) * v1 ),( ( l . v2 ) * v2 ) *> or ( l (#) F ) = <* ( ( l . v2 ) * v2 ),( ( l . v1 ) * v1 ) *>) by CKB16:1;
hence thesis by A9,RLVECT_1:45;
end;
end;
hence thesis;
end;
