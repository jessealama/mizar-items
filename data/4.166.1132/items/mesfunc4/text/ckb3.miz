environ
vocabularies NUMBERS,FINSEQ_1,NAT_1,RELAT_1,SUPINF_2,XXREAL_0,FUNCT_1,ARYTM_3,CARD_3,SUBSET_1,XBOOLE_0,CARD_1,PROB_1,MEASURE1,PARTFUN1,MESFUNC2,MESFUNC3,INTEGRA1,VALUED_0,TARSKI,COMPLEX1,MESFUNC1,ORDINAL4,ARYTM_1,INT_1,ORDINAL1,SUPINF_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,NAT_1,NAT_D,PROB_1,SUPINF_1,SUPINF_2,MEASURE1,EXTREAL1,MESFUNC1,MESFUNC2,MESFUNC3;
definitions MESFUNC3,TARSKI,XBOOLE_0;
theorems MEASURE1,TARSKI,FUNCT_1,NAT_1,EXTREAL2,MESFUNC1,ZFMISC_1,FINSEQ_1,FINSEQ_2,FINSEQ_5,PROB_2,XBOOLE_0,XBOOLE_1,RELAT_1,MESFUNC2,EXTREAL1,MESFUNC3,XREAL_1,NAT_2,FINSEQ_3,XXREAL_0,PROB_1,FINSUB_1,ORDINAL1,NAT_D,VALUED_0,XXREAL_3,CKB1,CKB2;
schemes FINSEQ_1,FINSEQ_2,NAT_1;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,MEASURE1,VALUED_0,MEMBERED,CARD_1,XXREAL_3,FUNCT_1;
constructors PARTFUN1,REAL_1,NAT_1,NAT_D,FINSEQOP,EXTREAL1,MESFUNC1,BINARITH,MESFUNC2,MESFUNC3,SEQ_1,SUPINF_1,RELSET_1;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
Th3: (for X being non  empty set holds (for S being (SigmaField of X) holds (for f being (PartFunc of X,( ExtREAL )) holds (for M being (sigma_Measure of S) holds (for F being (Finite_Sep_Sequence of S) holds (for a,x being (FinSequence of ( ExtREAL )) holds ((((((f is_simple_func_in S & ( dom f ) <> ( {} )) & (for x being set holds (x in ( dom f ) implies ( 0. ) <= ( f . x )))) & F,a are_Re-presentation_of f) & ( dom x ) = ( dom F )) & (for n being Nat holds (n in ( dom x ) implies ( x . n ) = ( ( a . n ) * ( ( M * F ) . n ) )))) implies ( integral (X,S,M,f) ) = ( Sum x ))))))))
proof
let X being non  empty set;
let S being (SigmaField of X);
let f being (PartFunc of X,( ExtREAL ));
let M being (sigma_Measure of S);
let F being (Finite_Sep_Sequence of S);
let a being (FinSequence of ( ExtREAL ));
let x being (FinSequence of ( ExtREAL ));
A1: ( len F ) = ( len F );
assume ((((f is_simple_func_in S & ( dom f ) <> ( {} )) & (for x being set holds (x in ( dom f ) implies ( 0. ) <= ( f . x )))) & F,a are_Re-presentation_of f) & (( dom x ) = ( dom F ) & (for n being Nat holds (n in ( dom x ) implies ( x . n ) = ( ( a . n ) * ( ( M * F ) . n ) )))));
hence thesis by A1,CKB2:1;
end;
