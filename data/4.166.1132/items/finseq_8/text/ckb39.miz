environ
vocabularies FINSEQ_8,ARYTM_1,RELAT_1,FINSEQ_1,FUNCT_1,FINSEQ_5,RFINSEQ,JORDAN3,ARYTM_3,NUMBERS,ORDINAL4,TARSKI,XBOOLE_0,XXREAL_0,CARD_1,SUBSET_1,NAT_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,NAT_D,RELAT_1,RFINSEQ,FINSEQ_1,FUNCT_1,FINSEQ_6,FINSEQ_5,CKB1,CKB5,CKB6,CKB13,CKB15,CKB17,CKB18,CKB24,CKB26,CKB30,CKB31,CKB33;
definitions FINSEQ_1,CKB5,CKB13,CKB15,CKB17,CKB18,CKB24,CKB26,CKB31,CKB33;
theorems NAT_1,NAT_2,FINSEQ_1,FINSEQ_3,FINSEQ_5,FINSEQ_6,RFINSEQ,RELAT_1,XREAL_1,XBOOLE_1,XXREAL_0,ORDINAL1,XREAL_0,NAT_D,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38;
schemes NAT_1;
registrations RELSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,ORDINAL1,XBOOLE_0,CARD_1;
constructors SQUARE_1,NAT_1,RFINSEQ,NAT_D,FINSEQ_5,FINSEQ_6,REAL_1,CKB1,CKB5,CKB6,CKB13,CKB15,CKB17,CKB18,CKB24,CKB26,CKB31,CKB33;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
Th27: (for D being non  empty set holds (for f,g being (FinSequence of D) holds (for n being (Element of ( NAT )) holds ((not g is_substring_of f,n) implies (for i being (Element of ( NAT )) holds ((n <= i & ( 0 ) < i) implies ( mid (f,i,( ( i -' 1 ) + ( len g ) )) ) <> g))))))
proof
let D being non  empty set;
let f being (FinSequence of D);
let g being (FinSequence of D);
let n being (Element of ( NAT ));
assume A1: (not g is_substring_of f,n);
now
let i being (Element of ( NAT ));
assume that
A2: n <= i
and
A3: ( 0 ) < i;
now
per cases ;
case i <= ( len f );
hence ( mid (f,i,( ( i -' 1 ) + ( len g ) )) ) <> g by A1,A2,CKB26:def 1;
end;
case A4: i > ( len f );
now
per cases ;
case A5: i <= ( ( i -' 1 ) + ( len g ) );
then A6: ( mid (f,i,( ( i -' 1 ) + ( len g ) )) ) = ( ( f /^ ( i -' 1 ) ) | ( ( ( ( i -' 1 ) + ( len g ) ) -' i ) + 1 ) ) by FINSEQ_6:def 3;
A7:now
per cases ;
case A8: ( i -' 1 ) <= ( len f );
i >= ( ( len f ) + 1 ) by A4,NAT_1:13;
then A9: ( i - 1 ) >= ( ( ( len f ) + 1 ) - 1 ) by XREAL_1:9;
( ( 0 ) + 1 ) <= i by A3,NAT_1:13;
then ( 0 ) <= ( i - 1 ) by XREAL_1:48;
then ( i -' 1 ) = ( i - 1 ) by XREAL_0:def 2;
then A10: ( i -' 1 ) = ( len f ) by A8,A9,XXREAL_0:1;
( len ( f /^ ( i -' 1 ) ) ) = ( ( len f ) - ( i -' 1 ) ) by A8,RFINSEQ:def 1;
hence ( len ( f /^ ( i -' 1 ) ) ) = ( 0 ) by A10;
end;
case ( i -' 1 ) > ( len f );
then ( f /^ ( i -' 1 ) ) = ( <*> D ) by RFINSEQ:def 1;
hence ( len ( f /^ ( i -' 1 ) ) ) = ( 0 );
end;
end;
then ( f /^ ( i -' 1 ) ) = ( <*> D );
then A11: ( ( f /^ ( i -' 1 ) ) | ( ( ( ( i -' 1 ) + ( len g ) ) -' i ) + 1 ) ) = ( <*> D ) by A7,FINSEQ_1:58;
now
assume A12: ( mid (f,i,( ( i -' 1 ) + ( len g ) )) ) = g;
( ( 0 ) + 1 ) <= i by A3,NAT_1:13;
then A13: ( 0 ) <= ( i - 1 ) by XREAL_1:48;
i < ( i + 1 ) by XREAL_1:29;
then ( i - 1 ) < ( ( i + 1 ) - 1 ) by XREAL_1:9;
hence contradiction by A5,A6,A7,A11,A12,A13,XREAL_0:def 2;
end;
hence ( mid (f,i,( ( i -' 1 ) + ( len g ) )) ) <> g;
end;
case A14: i > ( ( i -' 1 ) + ( len g ) );
now
assume ( len g ) > ( 0 );
then ( len g ) >= ( ( 0 ) + 1 ) by NAT_1:13;
then A15: ( ( i -' 1 ) + ( len g ) ) >= ( ( i -' 1 ) + 1 ) by XREAL_1:7;
( ( 0 ) + 1 ) <= i by A3,NAT_1:13;
then ( 0 ) <= ( i - 1 ) by XREAL_1:48;
then ( i -' 1 ) = ( i - 1 ) by XREAL_0:def 2;
hence contradiction by A14,A15;
end;
hence contradiction by A1,CKB26:def 1;
end;
end;
hence ( mid (f,i,( ( i -' 1 ) + ( len g ) )) ) <> g;
end;
end;
hence ( mid (f,i,( ( i -' 1 ) + ( len g ) )) ) <> g;
end;
hence thesis;
end;
