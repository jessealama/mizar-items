environ
vocabularies FINSEQ_8,ARYTM_1,RELAT_1,FINSEQ_1,FUNCT_1,FINSEQ_5,RFINSEQ,JORDAN3,ARYTM_3,NUMBERS,ORDINAL4,TARSKI,XBOOLE_0,XXREAL_0,CARD_1,SUBSET_1,NAT_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,NAT_D,RELAT_1,RFINSEQ,FINSEQ_1,FUNCT_1,FINSEQ_6,FINSEQ_5,CKB1;
definitions FINSEQ_1;
theorems NAT_1,NAT_2,FINSEQ_1,FINSEQ_3,FINSEQ_5,FINSEQ_6,RFINSEQ,RELAT_1,XREAL_1,XBOOLE_1,XXREAL_0,ORDINAL1,XREAL_0,NAT_D,CKB2;
schemes NAT_1;
registrations RELSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,ORDINAL1,XBOOLE_0,CARD_1;
constructors SQUARE_1,NAT_1,RFINSEQ,NAT_D,FINSEQ_5,FINSEQ_6,REAL_1,CKB1;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
Th2: (for D being set holds (for f being (FinSequence of D) holds (for i being (Element of ( NAT )) holds (i >= ( len f ) implies ( f /^ i ) = ( <*> D )))))
proof
let D being set;
let f being (FinSequence of D);
let i being (Element of ( NAT ));
assume A1: i >= ( len f );
per cases  by A1,XXREAL_0:1;
suppose i > ( len f );

hence thesis by RFINSEQ:def 1;
end;
suppose A2: i = ( len f );

then ( len ( f /^ i ) ) = ( ( len f ) - i ) by RFINSEQ:def 1
.= ( 0 ) by A2;
hence thesis;
end;
end;
