environ
vocabularies FINSEQ_8,ARYTM_1,RELAT_1,FINSEQ_1,FUNCT_1,FINSEQ_5,RFINSEQ,JORDAN3,ARYTM_3,NUMBERS,ORDINAL4,TARSKI,XBOOLE_0,XXREAL_0,CARD_1,SUBSET_1,NAT_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,NAT_D,RELAT_1,RFINSEQ,FINSEQ_1,FUNCT_1,FINSEQ_6,FINSEQ_5,CKB1,CKB5,CKB6,CKB13,CKB15,CKB17,CKB18,CKB24,CKB26;
definitions FINSEQ_1,CKB5,CKB13,CKB15,CKB17,CKB18,CKB24,CKB26;
theorems NAT_1,NAT_2,FINSEQ_1,FINSEQ_3,FINSEQ_5,FINSEQ_6,RFINSEQ,RELAT_1,XREAL_1,XBOOLE_1,XXREAL_0,ORDINAL1,XREAL_0,NAT_D,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes NAT_1;
registrations RELSET_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,ORDINAL1,XBOOLE_0,CARD_1;
constructors SQUARE_1,NAT_1,RFINSEQ,NAT_D,FINSEQ_5,FINSEQ_6,REAL_1,CKB1,CKB5,CKB6,CKB13,CKB15,CKB17,CKB18,CKB24,CKB26;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
Th20: (for D being non empty set holds (for f,g being (FinSequence of D) holds (g is_substring_of f,( 0 ) implies g is_substring_of f,1)))
proof
let D being non empty set;
let f being (FinSequence of D),g being (FinSequence of D);
assume A1: g is_substring_of f,( 0 );
now
per cases ;
case A2: ( len g ) > ( 0 );
then consider i being (Element of ( NAT )) such that ( 0 ) <= i and A3: i <= ( len f ) and A4: ( mid (f,i,( ( i -' 1 ) + ( len g ) )) ) = g by A1,CKB26:def 1;
A5: ( len g ) >= ( ( 0 ) + 1 ) by A2,NAT_1:13;
now
per cases ;
case A6: i = ( 0 );
( ( 0 ) - 1 ) < ( 0 );
then A7: ( i -' 1 ) = ( 0 ) by A6,XREAL_0:def 2;
then A8: ( ( f /^ ( ( 0 ) -' 1 ) ) | ( ( ( len g ) -' ( 0 ) ) + 1 ) ) = g by A4,A6,FINSEQ_6:def 3;
( ( len g ) -' ( 0 ) ) = ( ( len g ) - ( 0 ) ) by XREAL_0:def 2
.= ( len g );
then A9: ( f | ( ( len g ) + 1 ) ) = g by A6,A7,A8,FINSEQ_5:28;
now
per cases ;
case ( ( len g ) + 1 ) >= ( len f );
then f = g by A9,FINSEQ_1:58;
hence thesis by A5,CKB28:1;
end;
case A10: ( ( len g ) + 1 ) < ( len f );
( dom ( f | ( Seg ( ( len g ) + 1 ) ) ) ) = ( ( dom f ) /\ ( Seg ( ( len g ) + 1 ) ) ) by RELAT_1:61
.= ( ( Seg ( len f ) ) /\ ( Seg ( ( len g ) + 1 ) ) ) by FINSEQ_1:def 3
.= ( Seg ( ( len g ) + 1 ) ) by A10,FINSEQ_1:7;
then ( len g ) = ( ( len g ) + 1 ) by A9,FINSEQ_1:def 3;
hence contradiction;
end;
end;
hence thesis;
end;
case i <> ( 0 );
then i >= ( ( 0 ) + 1 ) by NAT_1:13;
hence thesis by A3,A4,CKB26:def 1;
end;
end;
hence thesis;
end;
case ( len g ) <= ( 0 );
hence thesis by CKB26:def 1;
end;
end;
hence thesis;
end;
