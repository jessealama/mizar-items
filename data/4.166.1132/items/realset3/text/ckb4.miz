environ
vocabularies VECTSP_1,REALSET2,FUNCT_1,MESFUNC1,SUBSET_1,STRUCT_0,RELAT_1,ARYTM_1,ARYTM_3,SUPINF_2,ALGSTR_0,BINOP_1,ZFMISC_1,REALSET3;
notations TARSKI,ZFMISC_1,SUBSET_1,FUNCT_1,FUNCT_2,BINOP_1,STRUCT_0,ALGSTR_0,GROUP_1,RLVECT_1,VECTSP_1,REALSET2;
definitions BINOP_1,RLVECT_1,REALSET2,ALGSTR_0,STRUCT_0;
theorems FUNCT_2,ZFMISC_1,REALSET2,XBOOLE_0,RLVECT_1,VECTSP_1,STRUCT_0,CKB1,CKB2,CKB3;
schemes BINOP_1;
registrations RELSET_1,STRUCT_0,REALSET2;
constructors BINOP_1,REALSET2,RELSET_1;
requirements SUBSET,BOOLE;
begin
theorem
Th7: (for F being Field holds (for a,b,c,d being (Element of F) holds (( a - b ) = ( c - d ) iff ( a + d ) = ( b + c ))))
proof
let F being Field;
let a being (Element of F),b being (Element of F),c being (Element of F),d being (Element of F);
hereby
assume ( a - b ) = ( c - d );
then ( ( c - d ) + b ) = ( ( a + ( - b ) ) + b )
.= ( a + ( b - b ) ) by RLVECT_1:def 3
.= ( a + ( 0. F ) ) by RLVECT_1:5
.= a by RLVECT_1:4;
hence ( a + d ) = ( ( ( c + b ) + ( - d ) ) + d ) by RLVECT_1:def 3
.= ( ( c + b ) + ( d - d ) ) by RLVECT_1:def 3
.= ( ( c + b ) + ( 0. F ) ) by RLVECT_1:5
.= ( b + c ) by RLVECT_1:4;
end;
assume ( a + d ) = ( b + c );
then ( ( b + c ) - d ) = ( a + ( d - d ) ) by RLVECT_1:def 3
.= ( a + ( 0. F ) ) by RLVECT_1:5
.= a by RLVECT_1:4;
hence ( a - b ) = ( ( ( c - d ) + b ) - b ) by RLVECT_1:def 3
.= ( ( c - d ) + ( b - b ) ) by RLVECT_1:def 3
.= ( ( c - d ) + ( 0. F ) ) by RLVECT_1:5
.= ( c - d ) by RLVECT_1:4;
end;
