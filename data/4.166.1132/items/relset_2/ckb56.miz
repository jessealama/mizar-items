environ
vocabularies RELAT_1,EQREL_1,XBOOLE_0,SUBSET_1,TARSKI,SETFAM_1,ZFMISC_1,FUNCT_1,RELSET_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,EQREL_1,CKB1,CKB15,CKB16,CKB22,CKB23,CKB27,CKB29,CKB30;
definitions XBOOLE_0,TARSKI,EQREL_1,SUBSET_1,RELAT_1,CKB22,CKB29;
theorems RELAT_1,TARSKI,SETFAM_1,ZFMISC_1,XBOOLE_1,SUBSET_1,RELSET_1,XBOOLE_0,FUNCT_1,FUNCT_2,MSSUBFAM,EQREL_1,SYSREL,ORDERS_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB24,CKB25,CKB26,CKB28,CKB29,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55;
schemes CLASSES1,DOMAIN_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,RELSET_1;
constructors SETFAM_1,FUNCT_2,EQREL_1,RELSET_1,DOMAIN_1,CKB15,CKB16,CKB22,CKB27,CKB29,CKB30;
requirements SUBSET,BOOLE;
begin
reserve A for set;
reserve B for set;
reserve X for (Subset of A);
reserve R for (Subset of [: A,B :]);
theorem
Th49: ( ( R .:^ X ) ` ) = ( ( R ` ) .: X )
proof
thus ( ( R .:^ X ) ` ) c= ( ( R ` ) .: X )
proof
let a being set;
assume A1: a in ( ( R .:^ X ) ` );
then (not a in ( R .:^ X )) by XBOOLE_0:def 5;
then consider x being set such that A2: x in X and A3: (not a in ( Im (R,x) )) by A1,CKB33:1;
A4: (not [ x,a ] in R) by A3,CKB10:1;
[ x,a ] in [: A,B :] by A1,A2,ZFMISC_1:87;
then [ x,a ] in ( [: A,B :] \ R ) by A4,XBOOLE_0:def 5;
hence thesis by A2,RELAT_1:def 13;
end;

let a being set;
assume a in ( ( R ` ) .: X );
then consider x being set such that A5: [ x,a ] in ( R ` ) and A6: x in X by RELAT_1:def 13;
A7: (not [ x,a ] in R) by A5,XBOOLE_0:def 5;
assume (not thesis);
then A8: ((not a in B) or a in ( R .:^ X )) by XBOOLE_0:def 5;
(a in ( R .:^ X ) implies (for x being set holds (x in X implies [ x,a ] in R)))
proof
assume A9: a in ( R .:^ X );
let x being set;
assume x in X;
then a in ( Im (R,x) ) by A9,CKB32:1;
hence thesis by CKB10:1;
end;
hence contradiction by A5,A6,A7,A8,ZFMISC_1:87;
end;
