environ
vocabularies RELAT_1,EQREL_1,XBOOLE_0,SUBSET_1,TARSKI,SETFAM_1,ZFMISC_1,FUNCT_1,RELSET_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,EQREL_1,CKB1,CKB15,CKB16,CKB22,CKB23,CKB27,CKB29,CKB30;
definitions XBOOLE_0,TARSKI,EQREL_1,SUBSET_1,RELAT_1,CKB22,CKB29;
theorems RELAT_1,TARSKI,SETFAM_1,ZFMISC_1,XBOOLE_1,SUBSET_1,RELSET_1,XBOOLE_0,FUNCT_1,FUNCT_2,MSSUBFAM,EQREL_1,SYSREL,ORDERS_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB24,CKB25,CKB26,CKB28,CKB29;
schemes CLASSES1,DOMAIN_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,RELSET_1;
constructors SETFAM_1,FUNCT_2,EQREL_1,RELSET_1,DOMAIN_1,CKB15,CKB16,CKB22,CKB27,CKB29,CKB30;
requirements SUBSET,BOOLE;
begin
reserve A for set;
reserve B for set;
reserve X for (Subset of A);
reserve R for (Subset of [: A,B :]);
theorem
Th23: (( ( .: R ) .: {_{ X }_} ) = ( {} ) iff X = ( {} ))
proof
thus (( ( .: R ) .: {_{ X }_} ) = ( {} ) implies X = ( {} ))
proof
assume ( ( .: R ) .: {_{ X }_} ) = ( {} );
then ( dom ( .: R ) ) misses {_{ X }_} by RELAT_1:118;
then A1: ( bool A ) misses {_{ X }_} by CKB22:def 1;
{_{ X }_} c= ( bool A )
proof
let y being set;
assume y in {_{ X }_};
then consider x being set such that A2: y = { x } and A3: x in X by CKB2:1;
A4: x in A by A3;
y c= A
proof
let x1 being set;
assume x1 in y;
hence thesis by A2,A4,TARSKI:def 1;
end;
hence thesis;
end;
then A5: ( ( bool A ) /\ {_{ X }_} ) = {_{ X }_} by XBOOLE_1:28;
assume X <> ( {} );
then {_{ X }_} <> ( {} ) by CKB3:1;
hence thesis by A1,A5,XBOOLE_0:def 7;
end;

assume X = ( {} );
then {_{ X }_} = ( {} ) by CKB3:1;
hence thesis by RELAT_1:116;
end;
