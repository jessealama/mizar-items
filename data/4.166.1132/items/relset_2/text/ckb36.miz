environ
vocabularies RELAT_1,EQREL_1,XBOOLE_0,SUBSET_1,TARSKI,SETFAM_1,ZFMISC_1,FUNCT_1,RELSET_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,EQREL_1,CKB1,CKB15,CKB16,CKB22,CKB23,CKB27,CKB29,CKB30;
definitions XBOOLE_0,TARSKI,EQREL_1,SUBSET_1,RELAT_1,CKB22,CKB29;
theorems RELAT_1,TARSKI,SETFAM_1,ZFMISC_1,XBOOLE_1,SUBSET_1,RELSET_1,XBOOLE_0,FUNCT_1,FUNCT_2,MSSUBFAM,EQREL_1,SYSREL,ORDERS_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB24,CKB25,CKB26,CKB28,CKB29,CKB31,CKB32,CKB33,CKB34,CKB35;
schemes CLASSES1,DOMAIN_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,RELSET_1;
constructors SETFAM_1,FUNCT_2,EQREL_1,RELSET_1,DOMAIN_1,CKB15,CKB16,CKB22,CKB27,CKB29,CKB30;
requirements SUBSET,BOOLE;
begin
reserve A for set;
reserve B for set;
reserve R for (Subset of [: A,B :]);
theorem
(for A being non  empty set holds (for B being set holds (for F being (Subset-Family of A) holds (for R being (Relation of A,B) holds { ( R .:^ X ) where X is (Subset of A): X in F } is (Subset-Family of B)))))
proof
let A being non  empty set;
let B being set;
let F being (Subset-Family of A);
let R being (Relation of A,B);
deffunc F((Subset of A)) = ( R .:^ $1 );
defpred P[ set ]
 means
$1 in F;
set Y = { F(X) where X is (Subset of A): P[ X ] };
thus Y is (Subset-Family of B) from DOMAIN_1:sch 8;
end;
