environ
vocabularies RELAT_1,EQREL_1,XBOOLE_0,SUBSET_1,TARSKI,SETFAM_1,ZFMISC_1,FUNCT_1,RELSET_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,EQREL_1,CKB1,CKB15,CKB16,CKB22,CKB23,CKB27,CKB29,CKB30;
definitions XBOOLE_0,TARSKI,EQREL_1,SUBSET_1,RELAT_1,CKB22,CKB29;
theorems RELAT_1,TARSKI,SETFAM_1,ZFMISC_1,XBOOLE_1,SUBSET_1,RELSET_1,XBOOLE_0,FUNCT_1,FUNCT_2,MSSUBFAM,EQREL_1,SYSREL,ORDERS_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB24,CKB25,CKB26,CKB28,CKB29,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48;
schemes CLASSES1,DOMAIN_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,RELSET_1;
constructors SETFAM_1,FUNCT_2,EQREL_1,RELSET_1,DOMAIN_1,CKB15,CKB16,CKB22,CKB27,CKB29,CKB30;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve A for set;
reserve B for set;
reserve R for (Subset of [: A,B :]);
theorem
Th42: (y in ( Im (( R ` ),x) ) iff (((not [ x,y ] in R) & x in A) & y in B))
proof
thus (y in ( Im (( R ` ),x) ) implies (((not [ x,y ] in R) & x in A) & y in B))
proof
assume y in ( Im (( R ` ),x) );
then (ex a being set st ([ a,y ] in ( R ` ) & a in { x })) by RELAT_1:def 13;
then [ x,y ] in ( [: A,B :] \ R ) by TARSKI:def 1;
hence thesis by XBOOLE_0:def 5,ZFMISC_1:87;
end;

assume that
A1: (not [ x,y ] in R)
and
A2: x in A
and
A3: y in B;
A4: x in { x } by TARSKI:def 1;
[ x,y ] in [: A,B :] by A2,A3,ZFMISC_1:87;
then [ x,y ] in ( [: A,B :] \ R ) by A1,XBOOLE_0:def 5;
hence thesis by A4,RELAT_1:def 13;
end;
