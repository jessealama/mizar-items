environ
vocabularies ARYTM_1,ARYTM_3,XBOOLE_0,CARD_1,CARD_2,CLASSES1,COHSP_1,COMPLEX1,CONVEX1,CONVEX2,CONVEX3,FINSEQ_1,FINSET_1,FUNCT_1,MATROID0,MCART_1,ORDERS_1,PARTFUN1,PRE_TOPC,QC_LANG1,RELAT_1,RLVECT_1,RLVECT_2,SEMI_AF1,SETFAM_1,SGRAPH1,SUBSET_1,TARSKI,TOPS_1,ZFMISC_1,RLAFFIN1,RLAFFIN2,SIMPLEX0,SIMPLEX1,REAL_1,FUNCOP_1,NAT_1,FUNCT_2,STRUCT_0,XXREAL_0,NUMBERS,ORDINAL1,CARD_3,GLIB_000,FINSEQ_4;
notations TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,ORDINAL1,NUMBERS,NAT_1,XXREAL_3,XXREAL_0,ORDERS_1,CARD_1,REAL_1,FINSET_1,SETFAM_1,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,RELSET_1,FINSEQ_1,STRUCT_0,CLASSES1,RVSUM_1,RLVECT_1,RLVECT_2,CONVEX1,CONVEX2,CONVEX3,PRE_TOPC,RLAFFIN1,FUNCOP_1,PENCIL_1,MATROID0,MCART_1,CARD_2,COHSP_1,SIMPLEX0,RLAFFIN2,CKB3,CKB4,CKB5,CKB6;
definitions MATROID0,ORDERS_1,ORDINAL1,RLAFFIN2,RLVECT_2,SETFAM_1,STRUCT_0,SIMPLEX0,TARSKI,TOPS_2,XBOOLE_0,XXREAL_3,CKB5,CKB6;
theorems BORSUK_5,CARD_1,CARD_2,CARD_FIN,CLASSES1,COHSP_1,CONVEX1,CONVEX3,FINSEQ_1,FINSEQ_3,FUNCOP_1,FUNCT_1,FUNCT_2,INT_1,MATROID0,MCART_1,NAT_1,ORDINAL1,PENCIL_1,PRE_TOPC,RELAT_1,RELSET_2,RLTOPSP1,RLVECT_1,RLVECT_2,RVSUM_1,SETFAM_1,STIRL2_1,TARSKI,TOPS_2,WELLORD2,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,XXREAL_3,ZFMISC_1,RLAFFIN1,RLAFFIN2,SIMPLEX0,CKB1,CKB2,CKB5,CKB6,CKB7;
schemes CLASSES1,FUNCT_1,FUNCT_2,NAT_1,RELAT_1;
registrations CARD_1,FINSET_1,FUNCT_1,MEMBERED,NAT_1,RELAT_1,RLVECT_1,STRUCT_0,SUBSET_1,VALUED_0,XCMPLX_0,XREAL_0,XXREAL_0,XBOOLE_0,RLAFFIN1,SIMPLEX0,FUNCOP_1,INT_1,XXREAL_3,MATROID0,REALSET1,SETFAM_1,COHSP_1,RLAFFIN2,RELSET_1,ZFMISC_1,DILWORTH,RLVECT_2;
constructors BINOP_2,CONVEX1,CONVEX3,REAL_1,RVSUM_1,SEQ_1,SETFAM_1,RLAFFIN1,SIMPLEX0,TOPS_2,LEXBFS,XXREAL_2,BORSUK_1,COHSP_1,CARD_2,REARRAN1,RLAFFIN2,CKB5,CKB6;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve RLS for non  empty RLSStruct;
reserve Kr for (SimplicialComplexStr of RLS);
definition
let RLS;
let Kr;
func |.Kr .| -> (Subset of RLS) means 
:Def3: (x in it iff (ex A being (Subset of Kr) st (A is  simplex-like & x in ( conv ( @ A ) ))));
existence
proof
set KC = { ( conv ( @ A ) ) where A is (Subset of Kr): A is  simplex-like };
KC c= ( bool (the carrier of RLS) )
proof
let x;
assume x in KC;
then (ex A being (Subset of Kr) st (x = ( conv ( @ A ) ) & A is  simplex-like));
hence thesis;
end;
then reconsider KC as (Subset-Family of RLS);
take IT = ( union KC );
let x;
hereby
assume x in IT;
then consider y such that A1: x in y and A2: y in KC by TARSKI:def 4;
consider A being (Subset of Kr) such that A3: (y = ( conv ( @ A ) ) & A is  simplex-like) by A2;
take A;
thus (A is  simplex-like & x in ( conv ( @ A ) )) by A1,A3;
end;
given A being (Subset of Kr) such that
A4: A is  simplex-like
and
A5: x in ( conv ( @ A ) );

( conv ( @ A ) ) in KC by A4;
hence thesis by A5,TARSKI:def 4;
end;
uniqueness
proof
let S1 being (Subset of RLS);
let S2 being (Subset of RLS);
assume that
A6: (x in S1 iff (ex A being (Subset of Kr) st (A is  simplex-like & x in ( conv ( @ A ) ))))
and
A7: (x in S2 iff (ex A being (Subset of Kr) st (A is  simplex-like & x in ( conv ( @ A ) ))));
now
let x;
(x in S1 iff (ex A being (Subset of Kr) st (A is  simplex-like & x in ( conv ( @ A ) )))) by A6;
hence (x in S1 iff x in S2) by A7;
end;
hence thesis by TARSKI:1;
end;
end;
