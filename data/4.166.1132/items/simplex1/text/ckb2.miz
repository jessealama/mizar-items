environ
vocabularies ARYTM_1,ARYTM_3,XBOOLE_0,CARD_1,CARD_2,CLASSES1,COHSP_1,COMPLEX1,CONVEX1,CONVEX2,CONVEX3,FINSEQ_1,FINSET_1,FUNCT_1,MATROID0,MCART_1,ORDERS_1,PARTFUN1,PRE_TOPC,QC_LANG1,RELAT_1,RLVECT_1,RLVECT_2,SEMI_AF1,SETFAM_1,SGRAPH1,SUBSET_1,TARSKI,TOPS_1,ZFMISC_1,RLAFFIN1,RLAFFIN2,SIMPLEX0,SIMPLEX1,REAL_1,FUNCOP_1,NAT_1,FUNCT_2,STRUCT_0,XXREAL_0,NUMBERS,ORDINAL1,CARD_3,GLIB_000,FINSEQ_4;
notations TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,ORDINAL1,NUMBERS,NAT_1,XXREAL_3,XXREAL_0,ORDERS_1,CARD_1,REAL_1,FINSET_1,SETFAM_1,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,RELSET_1,FINSEQ_1,STRUCT_0,CLASSES1,RVSUM_1,RLVECT_1,RLVECT_2,CONVEX1,CONVEX2,CONVEX3,PRE_TOPC,RLAFFIN1,FUNCOP_1,PENCIL_1,MATROID0,MCART_1,CARD_2,COHSP_1,SIMPLEX0,RLAFFIN2;
definitions MATROID0,ORDERS_1,ORDINAL1,RLAFFIN2,RLVECT_2,SETFAM_1,STRUCT_0,SIMPLEX0,TARSKI,TOPS_2,XBOOLE_0,XXREAL_3;
theorems BORSUK_5,CARD_1,CARD_2,CARD_FIN,CLASSES1,COHSP_1,CONVEX1,CONVEX3,FINSEQ_1,FINSEQ_3,FUNCOP_1,FUNCT_1,FUNCT_2,INT_1,MATROID0,MCART_1,NAT_1,ORDINAL1,PENCIL_1,PRE_TOPC,RELAT_1,RELSET_2,RLTOPSP1,RLVECT_1,RLVECT_2,RVSUM_1,SETFAM_1,STIRL2_1,TARSKI,TOPS_2,WELLORD2,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,XXREAL_3,ZFMISC_1,RLAFFIN1,RLAFFIN2,SIMPLEX0,CKB1;
schemes CLASSES1,FUNCT_1,FUNCT_2,NAT_1,RELAT_1;
registrations CARD_1,FINSET_1,FUNCT_1,MEMBERED,NAT_1,RELAT_1,RLVECT_1,STRUCT_0,SUBSET_1,VALUED_0,XCMPLX_0,XREAL_0,XXREAL_0,XBOOLE_0,RLAFFIN1,SIMPLEX0,FUNCOP_1,INT_1,XXREAL_3,MATROID0,REALSET1,SETFAM_1,COHSP_1,RLAFFIN2,RELSET_1,ZFMISC_1,DILWORTH,RLVECT_2;
constructors BINOP_2,CONVEX1,CONVEX3,REAL_1,RVSUM_1,SEQ_1,SETFAM_1,RLAFFIN1,SIMPLEX0,TOPS_2,LEXBFS,XXREAL_2,BORSUK_1,COHSP_1,CARD_2,REARRAN1,RLAFFIN2;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve X for set;
theorem
Th2: (for Y being non empty  finite set holds (( card X ) = ( ( card Y ) + 1 ) implies (for f being (Function of X,Y) holds (f is  onto implies (ex y st ((y in Y & ( card ( f " { y } ) ) = 2) & (for x holds ((x in Y & x <> y) implies ( card ( f " { x } ) ) = 1))))))))
proof
let Y being non empty  finite set;
assume that
A1: ( card X ) = ( ( card Y ) + 1 );
reconsider XX = X as non empty  finite set by A1;
( card Y ) > ( 0 );
then reconsider c1 = ( ( card Y ) - 1 ) as (Element of ( NAT )) by NAT_1:20;
let f being (Function of X,Y);
assume that
A2: f is  onto;
A3: ( rng f ) = Y by A2,FUNCT_2:def 3;
reconsider F = f as (Function of XX,Y);
A4: ( dom f ) = X by FUNCT_2:def 1;
(ex y st (y in Y & ( card ( F " { y } ) ) > 1))
proof
assume A5: (for y holds (y in Y implies ( card ( F " { y } ) ) <= 1));
now
let y;
set fy = ( F " { y } );
assume A6: y in Y;
then fy <> ( {} ) by A3,FUNCT_1:72;
then ( card fy ) = 1 by A5,A6,NAT_1:25;
hence (ex x st fy = { x }) by CARD_2:42;
end;
then f is  one-to-one by A3,FUNCT_1:74;
then X,Y are_equipotent  by A3,A4,WELLORD2:def 4;
then ( card X ) = ( card Y ) by CARD_1:5;
hence contradiction by A1;
end;
then consider y such that A7: y in Y and A8: ( card ( F " { y } ) ) > 1;
set fy = ( F " { y } );
set fD = ( F | ( ( dom f ) \ fy ) );
take y;
A9: ( 1 + 1 ) <= ( card fy ) by A8,NAT_1:13;
( dom fD ) = ( ( dom f ) \ fy ) by RELAT_1:62,XBOOLE_1:36;
then A10: ( card ( dom fD ) ) = ( ( card XX ) - ( card fy ) ) by A4,CARD_2:44;
set Yy = ( Y \ { y } );
A11: ( rng fD ) = Yy by A3,STIRL2_1:54;
then reconsider FD = fD as (Function of ( dom fD ),Yy) by FUNCT_2:1;
( card Y ) = ( c1 + 1 );
then A12: ( card Yy ) = c1 by A7,STIRL2_1:55;
then c1 c= ( card ( dom fD ) ) by A11,CARD_1:12;
then ( ( card Y ) + ( - 1 ) ) <= ( ( card Y ) + ( 1 - ( card fy ) ) ) by A1,A10,NAT_1:39;
then ( - 1 ) <= ( 1 - ( card fy ) ) by XREAL_1:6;
then ( card fy ) <= ( 1 - ( - 1 ) ) by XREAL_1:11;
hence A13: (y in Y & ( card ( f " { y } ) ) = 2) by A7,A9,XXREAL_0:1;
let x;
assume that
A14: x in Y
and
A15: x <> y;
A16: x in ( rng FD ) by A11,A14,A15,ZFMISC_1:56;
FD is  onto by A11,FUNCT_2:def 3;
then FD is  one-to-one by A1,A10,A12,A13,STIRL2_1:60;
then A17: (ex z being set st ( FD " { x } ) = { z }) by A16,FUNCT_1:74;
( FD " { x } ) = ( f " { x } ) by A15,STIRL2_1:54;
hence thesis by A17,CARD_1:30;
end;
