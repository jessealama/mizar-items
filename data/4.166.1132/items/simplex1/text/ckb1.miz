environ
vocabularies ARYTM_1,ARYTM_3,XBOOLE_0,CARD_1,CARD_2,CLASSES1,COHSP_1,COMPLEX1,CONVEX1,CONVEX2,CONVEX3,FINSEQ_1,FINSET_1,FUNCT_1,MATROID0,MCART_1,ORDERS_1,PARTFUN1,PRE_TOPC,QC_LANG1,RELAT_1,RLVECT_1,RLVECT_2,SEMI_AF1,SETFAM_1,SGRAPH1,SUBSET_1,TARSKI,TOPS_1,ZFMISC_1,RLAFFIN1,RLAFFIN2,SIMPLEX0,SIMPLEX1,REAL_1,FUNCOP_1,NAT_1,FUNCT_2,STRUCT_0,XXREAL_0,NUMBERS,ORDINAL1,CARD_3,GLIB_000,FINSEQ_4;
notations TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,ORDINAL1,NUMBERS,NAT_1,XXREAL_3,XXREAL_0,ORDERS_1,CARD_1,REAL_1,FINSET_1,SETFAM_1,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,RELSET_1,FINSEQ_1,STRUCT_0,CLASSES1,RVSUM_1,RLVECT_1,RLVECT_2,CONVEX1,CONVEX2,CONVEX3,PRE_TOPC,RLAFFIN1,FUNCOP_1,PENCIL_1,MATROID0,MCART_1,CARD_2,COHSP_1,SIMPLEX0,RLAFFIN2;
definitions MATROID0,ORDERS_1,ORDINAL1,RLAFFIN2,RLVECT_2,SETFAM_1,STRUCT_0,SIMPLEX0,TARSKI,TOPS_2,XBOOLE_0,XXREAL_3;
theorems BORSUK_5,CARD_1,CARD_2,CARD_FIN,CLASSES1,COHSP_1,CONVEX1,CONVEX3,FINSEQ_1,FINSEQ_3,FUNCOP_1,FUNCT_1,FUNCT_2,INT_1,MATROID0,MCART_1,NAT_1,ORDINAL1,PENCIL_1,PRE_TOPC,RELAT_1,RELSET_2,RLTOPSP1,RLVECT_1,RLVECT_2,RVSUM_1,SETFAM_1,STIRL2_1,TARSKI,TOPS_2,WELLORD2,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,XXREAL_3,ZFMISC_1,RLAFFIN1,RLAFFIN2,SIMPLEX0;
schemes CLASSES1,FUNCT_1,FUNCT_2,NAT_1,RELAT_1;
registrations CARD_1,FINSET_1,FUNCT_1,MEMBERED,NAT_1,RELAT_1,RLVECT_1,STRUCT_0,SUBSET_1,VALUED_0,XCMPLX_0,XREAL_0,XXREAL_0,XBOOLE_0,RLAFFIN1,SIMPLEX0,FUNCOP_1,INT_1,XXREAL_3,MATROID0,REALSET1,SETFAM_1,COHSP_1,RLAFFIN2,RELSET_1,ZFMISC_1,DILWORTH,RLVECT_2;
constructors BINOP_2,CONVEX1,CONVEX3,REAL_1,RVSUM_1,SEQ_1,SETFAM_1,RLAFFIN1,SIMPLEX0,TOPS_2,LEXBFS,XXREAL_2,BORSUK_1,COHSP_1,CARD_2,REARRAN1,RLAFFIN2;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve X for set;
theorem
Th1: (for R being Relation holds (for C being Cardinal holds ((for x holds (x in X implies ( card ( Im (R,x) ) ) = C)) implies ( card R ) = ( ( card ( R | ( ( dom R ) \ X ) ) ) +` ( C *` ( card X ) ) ))))
proof
let R being Relation;
let C being Cardinal;
assume that
A1: (for x holds (x in X implies ( card ( Im (R,x) ) ) = C));
set DA = ( ( dom R ) \ X );
per cases ;
suppose A2: X c= ( dom R );

deffunc F(set) = ( Im (R,$1) );
consider f being Function such that A3: (( dom f ) = X & (for x holds (x in X implies ( f . x ) = F(x)))) from FUNCT_1:sch 3;
defpred P[ set,set ]
 means
(ex g being Function st (((g = $2 & ( dom g ) = ( f . $1 )) & ( rng g ) = C) & g is  one-to-one));
A4: (for x holds (x in X implies (ex y st P[ x,y ])))
proof
let x;
assume x in X;
then (( f . x ) = ( Im (R,x) ) & ( card ( Im (R,x) ) ) = C) by A1,A3;
then ( f . x ),C are_equipotent  by CARD_1:def 2;
then consider g being Function such that A5: ((g is  one-to-one & ( dom g ) = ( f . x )) & ( rng g ) = C) by WELLORD2:def 4;
take g;
thus thesis by A5;
end;
consider ff being Function such that A6: (( dom ff ) = X & (for x holds (x in X implies P[ x,( ff . x ) ]))) from CLASSES1:sch 1(A4);
now
let x;
assume x in ( dom ff );
then (ex g being Function st (((g = ( ff . x ) & ( dom g ) = ( f . x )) & ( rng g ) = C) & g is  one-to-one)) by A6;
hence ( ff . x ) is Function;
end;
then reconsider ff as  Function-yielding Function by FUNCOP_1:def 6;
deffunc G(set) = [ ( $1 `1 ),( ( ff . ( $1 `1 ) ) . ( $1 `2 ) ) ];
consider p being Function such that A7: (( dom p ) = ( R | X ) & (for x holds (x in ( R | X ) implies ( p . x ) = G(x)))) from FUNCT_1:sch 3;
A8: ( rng p ) = [: X,C :]
proof
hereby
let y;
assume y in ( rng p );
then consider x such that A9: x in ( dom p ) and A10: ( p . x ) = y by FUNCT_1:def 3;
A11: ( p . x ) = [ ( x `1 ),( ( ff . ( x `1 ) ) . ( x `2 ) ) ] by A7,A9;
A12: x = [ ( x `1 ),( x `2 ) ] by A7,A9,MCART_1:21;
then (( x `1 ) in { ( x `1 ) } & x in R) by A7,A9,RELAT_1:def 11,TARSKI:def 1;
then A13: ( x `2 ) in ( R .: { ( x `1 ) } ) by A12,RELAT_1:def 13;
A14: ( x `1 ) in X by A7,A9,A12,RELAT_1:def 11;
then consider g being Function such that A15: g = ( ff . ( x `1 ) ) and A16: ( dom g ) = ( f . ( x `1 ) ) and A17: ( rng g ) = C and g is  one-to-one by A6;
( f . ( x `1 ) ) = ( Im (R,( x `1 )) ) by A3,A14;
then ( x `2 ) in ( dom g ) by A13,A16,RELAT_1:def 16;
then ( g . ( x `2 ) ) in C by A17,FUNCT_1:def 3;
hence y in [: X,C :] by A10,A11,A14,A15,ZFMISC_1:87;
end;
let y;
assume y in [: X,C :];
then consider y1 being set,y2 being set such that A18: y1 in X and A19: y2 in C and A20: y = [ y1,y2 ] by ZFMISC_1:def 2;
consider g being Function such that A21: g = ( ff . y1 ) and A22: ( dom g ) = ( f . y1 ) and A23: ( rng g ) = C and g is  one-to-one by A6,A18;
consider x2 being set such that A24: x2 in ( dom g ) and A25: ( g . x2 ) = y2 by A19,A23,FUNCT_1:def 3;
( [ y1,x2 ] `1 ) = y1 by MCART_1:7;
then A26: G([ y1,x2 ]) = y by A20,A21,A25,MCART_1:7;
( f . y1 ) = ( Im (R,y1) ) by A3,A18;
then [ y1,x2 ] in R by A22,A24,RELSET_2:9;
then A27: [ y1,x2 ] in ( R | X ) by A18,RELAT_1:def 11;
then ( p . [ y1,x2 ] ) = G([ y1,x2 ]) by A7;
hence thesis by A7,A26,A27,FUNCT_1:def 3;
end;
now
let x1 being set,x2 being set;
assume that
A28: x1 in ( dom p )
and
A29: x2 in ( dom p )
and
A30: ( p . x1 ) = ( p . x2 );
A31: (( p . x1 ) = G(x1) & ( p . x2 ) = G(x2)) by A7,A28,A29;
then A32: ( x1 `1 ) = ( x2 `1 ) by A30,ZFMISC_1:27;
A33: x1 = [ ( x1 `1 ),( x1 `2 ) ] by A7,A28,MCART_1:21;
then x1 in R by A7,A28,RELAT_1:def 11;
then A34: ( x1 `2 ) in ( Im (R,( x1 `1 )) ) by A33,RELSET_2:9;
A35: x2 = [ ( x2 `1 ),( x2 `2 ) ] by A7,A29,MCART_1:21;
then x2 in R by A7,A29,RELAT_1:def 11;
then A36: ( x2 `2 ) in ( Im (R,( x2 `1 )) ) by A35,RELSET_2:9;
( x2 `1 ) in X by A7,A29,A35,RELAT_1:def 11;
then consider g2 being Function such that A37: g2 = ( ff . ( x2 `1 ) ) and ( dom g2 ) = ( f . ( x2 `1 ) ) and ( rng g2 ) = C and g2 is  one-to-one by A6;
A38: ( x1 `1 ) in X by A7,A28,A33,RELAT_1:def 11;
then consider g1 being Function such that A39: g1 = ( ff . ( x1 `1 ) ) and A40: ( dom g1 ) = ( f . ( x1 `1 ) ) and ( rng g1 ) = C and A41: g1 is  one-to-one by A6;
A42: ( f . ( x1 `1 ) ) = ( Im (R,( x1 `1 )) ) by A3,A38;
( g1 . ( x1 `2 ) ) = ( g2 . ( x2 `2 ) ) by A30,A31,A37,A39,ZFMISC_1:27;
hence x1 = x2 by A32,A35,A36,A33,A34,A37,A39,A40,A41,A42,FUNCT_1:def 4;
end;
then p is  one-to-one by FUNCT_1:def 4;
then ( R | X ),[: X,C :] are_equipotent  by A7,A8,WELLORD2:def 4;
then A43: ( card ( R | X ) ) = ( card [: X,C :] ) by CARD_1:5
.= ( card [: ( card X ),C :] ) by CARD_2:7
.= ( C *` ( card X ) ) by CARD_2:def 2;
A44: ( R | X ) misses ( R | DA )
proof
assume ( R | X ) meets ( R | DA );
then consider x such that A45: x in ( R | X ) and A46: x in ( R | DA ) by XBOOLE_0:3;
consider x1 being set,x2 being set such that A47: x = [ x1,x2 ] by A45,RELAT_1:def 1;
(x1 in X & x1 in DA) by A45,A46,A47,RELAT_1:def 11;
hence contradiction by XBOOLE_0:def 5;
end;
( DA \/ X ) = ( ( dom R ) \/ X ) by XBOOLE_1:39
.= ( dom R ) by A2,XBOOLE_1:12;
then ( ( R | X ) \/ ( R | DA ) ) = ( R | ( dom R ) ) by RELAT_1:78
.= R by RELAT_1:69;
hence ( card R ) = ( ( card ( R | DA ) ) +` ( C *` ( card X ) ) ) by A43,A44,CARD_2:35;
end;
suppose (not X c= ( dom R ));

then consider x such that A48: x in X and A49: (not x in ( dom R )) by TARSKI:def 3;
( Im (R,x) ) = ( {} )
proof
assume ( Im (R,x) ) <> ( {} );
then consider y such that A50: y in ( Im (R,x) ) by XBOOLE_0:def 1;
[ x,y ] in R by A50,RELSET_2:9;
hence contradiction by A49,RELAT_1:6;
end;
then A51: C = ( card ( {} ) ) by A1,A48;
( dom R ) misses X
proof
assume ( dom R ) meets X;
then consider x such that A52: x in ( dom R ) and A53: x in X by XBOOLE_0:3;
( card ( Im (R,x) ) ) = C by A1,A53;
then A54: ( Im (R,x) ) is  empty by A51;
(ex y st [ x,y ] in R) by A52,RELAT_1:def 4;
hence contradiction by A54,RELSET_2:9;
end;
then A55: DA = ( dom R ) by XBOOLE_1:83;
( C *` ( card X ) ) = ( 0 ) by A51,CARD_2:20;
then ( ( card ( R | DA ) ) +` ( C *` ( card X ) ) ) = ( card ( R | DA ) ) by CARD_2:18;
hence thesis by A55,RELAT_1:69;
end;
end;
