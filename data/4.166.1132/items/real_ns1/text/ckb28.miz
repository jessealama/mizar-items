environ
vocabularies NUMBERS,SUBSET_1,NAT_1,BINOP_1,FUNCT_1,ARYTM_3,FINSEQ_2,ZFMISC_1,RELAT_1,XREAL_0,ORDINAL1,COMPLEX1,STRUCT_0,XBOOLE_0,NORMSP_1,SUPINF_2,EUCLID,ALGSTR_0,RLVECT_1,PRE_TOPC,REAL_1,CARD_1,XXREAL_0,ARYTM_1,FINSEQ_1,CARD_3,ORDINAL4,TARSKI,RVSUM_1,SQUARE_1,SEQ_2,ORDINAL2,SEQ_1,VALUED_1,RSSPACE3,LOPBAN_1,REWRITE1,BHSP_1,PROB_2,BINOP_2,METRIC_1,BHSP_3,REAL_NS1,RELAT_2,NORMSP_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,XCMPLX_0,PRE_TOPC,NAT_1,FINSEQ_1,FINSEQ_2,STRUCT_0,ALGSTR_0,FUNCOP_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,SQUARE_1,COMPLEX1,REAL_1,RLVECT_1,BHSP_1,BHSP_2,BINOP_2,VALUED_1,SEQ_1,SEQ_2,RVSUM_1,NORMSP_0,NORMSP_1,EUCLID,RSSPACE3,LOPBAN_1,BHSP_3,CKB2,CKB4,CKB5,CKB6,CKB19,CKB24,CKB25;
definitions RLVECT_1,BINOP_1,BHSP_1,RSSPACE3,BHSP_3,SQUARE_1,STRUCT_0,ALGSTR_0,VALUED_1,NORMSP_0,CKB2,CKB4,CKB5,CKB6,CKB24,CKB25;
theorems TARSKI,XREAL_0,NORMSP_1,EUCLID,RLVECT_1,SEQ_2,SEQ_4,BINOP_1,COMPLEX1,ABSVALUE,RSSPACE3,FINSEQ_1,FINSEQ_2,RVSUM_1,FUNCT_2,LOPBAN_1,ZFMISC_1,FUNCOP_1,SEQ_1,NAT_1,SQUARE_1,FUNCT_1,FINSEQ_5,XREAL_1,RFUNCT_4,JORDAN2C,BHSP_2,BHSP_1,EUCLID_2,EUCLID_4,EUCLIDLP,BHSP_3,XXREAL_0,VALUED_1,NORMSP_0,ORDINAL1,CARD_1,CKB1,CKB2,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB22,CKB24,CKB25;
schemes NAT_1,SEQ_1,BINOP_1,BINOP_2,FUNCT_2,FINSEQ_1;
registrations XBOOLE_0,FUNCT_1,ORDINAL1,RELSET_1,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_2,STRUCT_0,NORMSP_1,BHSP_1,REVROT_1,RSSPACE3,VALUED_0,VALUED_1,FUNCT_2,EUCLID,FINSEQ_1,NORMSP_0,CARD_1,CKB3,CKB7,CKB11,CKB23,CKB26,CKB27;
constructors REAL_1,SQUARE_1,NAT_1,BINOP_2,COMPLEX1,SUPINF_1,SEQ_2,FINSEQOP,REALSET2,BHSP_2,BHSP_3,RSSPACE3,LOPBAN_1,PARTFUN1,SEQ_1,BINOP_1,VALUED_1,RVSUM_1,EUCLID,NORMSP_1,RELSET_1,SEQ_4,CKB2,CKB4,CKB5,CKB6,CKB19,CKB24,CKB25;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
theorem
Th13: (for n being Nat holds (for a being Real holds (for x1,y1 being (Point of ( REAL-NS n )) holds (for x2,y2 being (Point of ( REAL-US n )) holds ((x1 = x2 & y1 = y2) implies ((( x1 + y1 ) = ( x2 + y2 ) & ( - x1 ) = ( - x2 )) & ( a * x1 ) = ( a * x2 )))))))
proof
let n being Nat;
let a being Real;
let x1 being (Point of ( REAL-NS n )),y1 being (Point of ( REAL-NS n ));
reconsider x = x1,y = y1 as (Element of ( REAL n )) by CKB6:def 1;
let x2 being (Point of ( REAL-US n )),y2 being (Point of ( REAL-US n ));
assume that
A1: x1 = x2
and
A2: y1 = y2;
thus ( x1 + y1 ) = ( ( Euclid_add n ) . (x,y) ) by CKB6:def 1
.= ( x2 + y2 ) by A1,A2,CKB25:def 1;
thus ( - x1 ) = ( ( - 1 ) * x1 ) by RLVECT_1:16
.= ( ( Euclid_mult n ) . (( - 1 ),x) ) by CKB6:def 1
.= ( ( - 1 ) * x2 ) by A1,CKB25:def 1
.= ( - x2 ) by RLVECT_1:16;
thus ( a * x1 ) = ( ( Euclid_mult n ) . (a,x) ) by CKB6:def 1
.= ( a * x2 ) by A1,CKB25:def 1;
end;
