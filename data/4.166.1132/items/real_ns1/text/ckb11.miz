environ
vocabularies NUMBERS,SUBSET_1,NAT_1,BINOP_1,FUNCT_1,ARYTM_3,FINSEQ_2,ZFMISC_1,RELAT_1,XREAL_0,ORDINAL1,COMPLEX1,STRUCT_0,XBOOLE_0,NORMSP_1,SUPINF_2,EUCLID,ALGSTR_0,RLVECT_1,PRE_TOPC,REAL_1,CARD_1,XXREAL_0,ARYTM_1,FINSEQ_1,CARD_3,ORDINAL4,TARSKI,RVSUM_1,SQUARE_1,SEQ_2,ORDINAL2,SEQ_1,VALUED_1,RSSPACE3,LOPBAN_1,REWRITE1,BHSP_1,PROB_2,BINOP_2,METRIC_1,BHSP_3,REAL_NS1,RELAT_2,NORMSP_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,XCMPLX_0,PRE_TOPC,NAT_1,FINSEQ_1,FINSEQ_2,STRUCT_0,ALGSTR_0,FUNCOP_1,ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,SQUARE_1,COMPLEX1,REAL_1,RLVECT_1,BHSP_1,BHSP_2,BINOP_2,VALUED_1,SEQ_1,SEQ_2,RVSUM_1,NORMSP_0,NORMSP_1,EUCLID,RSSPACE3,LOPBAN_1,BHSP_3,CKB2,CKB4,CKB5,CKB6;
definitions RLVECT_1,BINOP_1,BHSP_1,RSSPACE3,BHSP_3,SQUARE_1,STRUCT_0,ALGSTR_0,VALUED_1,NORMSP_0,CKB2,CKB4,CKB5,CKB6;
theorems TARSKI,XREAL_0,NORMSP_1,EUCLID,RLVECT_1,SEQ_2,SEQ_4,BINOP_1,COMPLEX1,ABSVALUE,RSSPACE3,FINSEQ_1,FINSEQ_2,RVSUM_1,FUNCT_2,LOPBAN_1,ZFMISC_1,FUNCOP_1,SEQ_1,NAT_1,SQUARE_1,FUNCT_1,FINSEQ_5,XREAL_1,RFUNCT_4,JORDAN2C,BHSP_2,BHSP_1,EUCLID_2,EUCLID_4,EUCLIDLP,BHSP_3,XXREAL_0,VALUED_1,NORMSP_0,ORDINAL1,CARD_1,CKB1,CKB2,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10;
schemes NAT_1,SEQ_1,BINOP_1,BINOP_2,FUNCT_2,FINSEQ_1;
registrations XBOOLE_0,FUNCT_1,ORDINAL1,RELSET_1,FUNCOP_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_2,STRUCT_0,NORMSP_1,BHSP_1,REVROT_1,RSSPACE3,VALUED_0,VALUED_1,FUNCT_2,EUCLID,FINSEQ_1,NORMSP_0,CARD_1,CKB3,CKB7;
constructors REAL_1,SQUARE_1,NAT_1,BINOP_2,COMPLEX1,SUPINF_1,SEQ_2,FINSEQOP,REALSET2,BHSP_2,BHSP_3,RSSPACE3,LOPBAN_1,PARTFUN1,SEQ_1,BINOP_1,VALUED_1,RVSUM_1,EUCLID,NORMSP_1,RELSET_1,SEQ_4,CKB2,CKB4,CKB5,CKB6;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve n for Nat;
registration
let n being Nat;
cluster ( REAL-NS n ) ->  reflexive  discerning  RealNormSpace-like  vector-distributive  scalar-distributive  scalar-associative  scalar-unital  Abelian  add-associative  right_zeroed  right_complementable;
coherence
proof
reconsider x1 = ( 0. ( REAL-NS n ) ) as (Element of ( REAL n )) by CKB6:def 1;
(|. x1 .| = ( 0 ) iff x1 = ( 0* n )) by EUCLID:7,EUCLID:8;
hence ||. ( 0. ( REAL-NS n ) ) .|| = ( 0 ) by CKB6:def 1,CKB8:1;
(for x,y being (Point of ( REAL-NS n )) holds (for a being Real holds (((||. x .|| = ( 0 ) iff x = ( 0. ( REAL-NS n ) )) & ||. ( a * x ) .|| = ( ( abs a ) * ||. x .|| )) & ||. ( x + y ) .|| <= ( ||. x .|| + ||. y .|| ))))
proof
let x being (Point of ( REAL-NS n ));
let y being (Point of ( REAL-NS n ));
let a being Real;
thus (||. x .|| = ( 0 ) iff x = ( 0. ( REAL-NS n ) ))
proof
reconsider x1 = x as (Element of ( REAL n )) by CKB6:def 1;
(|. x1 .| = ( 0 ) iff x1 = ( 0* n )) by EUCLID:7,EUCLID:8;
hence thesis by CKB6:def 1,CKB8:1;
end;

thus ||. ( a * x ) .|| = ( ( abs a ) * ||. x .|| )
proof
reconsider x1 = x as (Element of ( REAL n )) by CKB6:def 1;
thus ||. ( a * x ) .|| = |. ( a * x1 ) .| by CKB8:1,CKB10:1
.= ( ( abs a ) * |. x1 .| ) by EUCLID:11
.= ( ( abs a ) * ||. x .|| ) by CKB8:1;
end;

thus ||. ( x + y ) .|| <= ( ||. x .|| + ||. y .|| )
proof
reconsider x1 = x,y1 = y as (Element of ( REAL n )) by CKB6:def 1;
|. ( x1 + y1 ) .| <= ( |. x1 .| + |. y1 .| ) by EUCLID:12;
then A1: |. ( x1 + y1 ) .| <= ( ||. x .|| + |. y1 .| ) by CKB8:1;
||. ( x + y ) .|| = |. ( x1 + y1 ) .| by CKB8:1,CKB9:1;
hence thesis by A1,CKB8:1;
end;

end;
hence ( REAL-NS n ) is  discerning  RealNormSpace-like by NORMSP_0:def 5,NORMSP_1:def 1;
A2: (for a,b being  real number holds (for v being (VECTOR of ( REAL-NS n )) holds ( ( a + b ) * v ) = ( ( a * v ) + ( b * v ) )))
proof
let a being  real number;
let b being  real number;
reconsider a,b as Real by XREAL_0:def 1;
let v being (VECTOR of ( REAL-NS n ));
( ( a + b ) * v ) = ( ( a * v ) + ( b * v ) )
proof
reconsider v1 = v as (Element of ( REAL n )) by CKB6:def 1;
reconsider v2 = v1 as (Element of ( n -tuples_on ( REAL ) )) by EUCLID:def 1;
A3: (( a * v ) = ( a * v1 ) & ( b * v ) = ( b * v1 )) by CKB10:1;
thus ( ( a + b ) * v ) = ( ( Euclid_mult n ) . (( a + b ),v) ) by CKB6:def 1
.= ( ( a + b ) * v2 ) by CKB4:def 1
.= ( ( a * v2 ) + ( b * v2 ) ) by RVSUM_1:50
.= ( ( a * v ) + ( b * v ) ) by A3,CKB9:1;
end;
hence thesis;
end;
A4: (for a being  real number holds (for v,w being (VECTOR of ( REAL-NS n )) holds ( a * ( v + w ) ) = ( ( a * v ) + ( a * w ) )))
proof
let a being  real number;
reconsider a as Real by XREAL_0:def 1;
let v being (VECTOR of ( REAL-NS n ));
let w being (VECTOR of ( REAL-NS n ));
( a * ( v + w ) ) = ( ( a * v ) + ( a * w ) )
proof
reconsider v1 = v,w1 = w as (Element of ( REAL n )) by CKB6:def 1;
reconsider v2 = v1,w2 = w1 as (Element of ( n -tuples_on ( REAL ) )) by EUCLID:def 1;
A5: (( a * v ) = ( a * v1 ) & ( a * w ) = ( a * w1 )) by CKB10:1;
thus ( a * ( v + w ) ) = ( ( Euclid_mult n ) . (a,( v + w )) ) by CKB6:def 1
.= ( ( Euclid_mult n ) . (a,( v1 + w1 )) ) by CKB9:1
.= ( a * ( v2 + w2 ) ) by CKB4:def 1
.= ( ( a * v2 ) + ( a * w2 ) ) by RVSUM_1:51
.= ( ( a * v ) + ( a * w ) ) by A5,CKB9:1;
end;
hence thesis;
end;
A6: (for a,b being  real number holds (for v being (VECTOR of ( REAL-NS n )) holds ( ( a * b ) * v ) = ( a * ( b * v ) )))
proof
let a being  real number;
let b being  real number;
reconsider a,b as Real by XREAL_0:def 1;
let v being (VECTOR of ( REAL-NS n ));
( ( a * b ) * v ) = ( a * ( b * v ) )
proof
reconsider v1 = v as (Element of ( REAL n )) by CKB6:def 1;
reconsider v2 = v1 as (Element of ( n -tuples_on ( REAL ) )) by EUCLID:def 1;
A7: ( b * v ) = ( b * v1 ) by CKB10:1;
( ( a * b ) * v ) = ( ( Euclid_mult n ) . (( a * b ),v) ) by CKB6:def 1
.= ( ( a * b ) * v1 ) by CKB4:def 1
.= ( a * ( b * v2 ) ) by RVSUM_1:49;
hence thesis by A7,CKB10:1;
end;
hence thesis;
end;
(for v being (VECTOR of ( REAL-NS n )) holds ( 1 * v ) = v)
proof
let v being (VECTOR of ( REAL-NS n ));
thus ( 1 * v ) = v
proof
reconsider v1 = v as (Element of ( REAL n )) by CKB6:def 1;
reconsider v2 = v1 as (Element of ( n -tuples_on ( REAL ) )) by EUCLID:def 1;
thus ( 1 * v ) = ( ( Euclid_mult n ) . (1,v) ) by CKB6:def 1
.= ( 1 * v2 ) by CKB4:def 1
.= v by RVSUM_1:52;
end;

end;
hence ( REAL-NS n ) is  vector-distributive  scalar-distributive  scalar-associative  scalar-unital by A4,A2,A6,RLVECT_1:def 5,RLVECT_1:def 6,RLVECT_1:def 7,RLVECT_1:def 8;
(for v,w being (VECTOR of ( REAL-NS n )) holds ( v + w ) = ( w + v ))
proof
let v being (VECTOR of ( REAL-NS n ));
let w being (VECTOR of ( REAL-NS n ));
thus ( v + w ) = ( w + v )
proof
reconsider v1 = v,w1 = w as (Element of ( REAL n )) by CKB6:def 1;
thus ( v + w ) = ( ( Euclid_add n ) . (v,w) ) by CKB6:def 1
.= ( ( Euclid_add n ) . (w1,v1) ) by BINOP_1:def 2
.= ( w + v ) by CKB6:def 1;
end;

end;
hence ( REAL-NS n ) is  Abelian by RLVECT_1:def 2;
(for u,v,w being (VECTOR of ( REAL-NS n )) holds ( ( u + v ) + w ) = ( u + ( v + w ) ))
proof
let u being (VECTOR of ( REAL-NS n ));
let v being (VECTOR of ( REAL-NS n ));
let w being (VECTOR of ( REAL-NS n ));
thus ( ( u + v ) + w ) = ( u + ( v + w ) )
proof
reconsider u1 = u,v1 = v,w1 = w as (Element of ( REAL n )) by CKB6:def 1;
A8: ( v + w ) = ( v1 + w1 ) by CKB9:1;
thus ( ( u + v ) + w ) = ( ( Euclid_add n ) . (( (the addF of ( REAL-NS n )) . (u,v) ),w) ) by CKB6:def 1
.= ( ( Euclid_add n ) . (( ( Euclid_add n ) . (u1,v1) ),w1) ) by CKB6:def 1
.= ( ( Euclid_add n ) . (u1,( ( Euclid_add n ) . (v1,w1) )) ) by BINOP_1:def 3
.= ( ( Euclid_add n ) . (u1,( v1 + w1 )) ) by CKB2:def 1
.= ( u1 + ( v1 + w1 ) ) by CKB2:def 1
.= ( u + ( v + w ) ) by A8,CKB9:1;
end;

end;
hence ( REAL-NS n ) is  add-associative by RLVECT_1:def 3;
(for v being (VECTOR of ( REAL-NS n )) holds ( v + ( 0. ( REAL-NS n ) ) ) = v)
proof
let v being (VECTOR of ( REAL-NS n ));
thus ( v + ( 0. ( REAL-NS n ) ) ) = v
proof
reconsider v1 = v as (Element of ( REAL n )) by CKB6:def 1;
reconsider v2 = v1 as (Element of ( n -tuples_on ( REAL ) )) by EUCLID:def 1;
reconsider zero = ( n |-> ( 0 ) ) as (Element of ( n -tuples_on ( REAL ) )) by FINSEQ_2:112;
( 0. ( REAL-NS n ) ) = ( 0* n ) by CKB6:def 1;
hence ( v + ( 0. ( REAL-NS n ) ) ) = ( v1 + ( 0* n ) ) by CKB9:1
.= ( v2 + zero ) by EUCLID:def 4
.= v by RVSUM_1:16;
end;

end;
hence ( REAL-NS n ) is  right_zeroed by RLVECT_1:def 4;
( REAL-NS n ) is  right_complementable
proof
let v being (VECTOR of ( REAL-NS n ));
thus (ex w being (VECTOR of ( REAL-NS n )) st ( v + w ) = ( 0. ( REAL-NS n ) ))
proof
reconsider v1 = v as (Element of ( REAL n )) by CKB6:def 1;
reconsider v2 = v1 as (Element of ( n -tuples_on ( REAL ) )) by EUCLID:def 1;
A9: ( 0. ( REAL-NS n ) ) = ( 0* n ) by CKB6:def 1
.= ( n |-> ( 0 ) ) by EUCLID:def 4;
reconsider w = ( - v1 ) as (VECTOR of ( REAL-NS n )) by CKB6:def 1;
take w;
thus ( v + w ) = ( v2 + ( - v2 ) ) by CKB9:1
.= ( 0. ( REAL-NS n ) ) by A9,RVSUM_1:22;
end;

end;
hence thesis;
end;
end;
