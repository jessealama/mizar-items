environ
vocabularies XBOOLE_0,RELAT_2,ORDERS_2,SUBSET_1,XXREAL_0,WAYBEL_8,TARSKI,RCOMP_1,STRUCT_0,YELLOW_0,LATTICE3,CARD_FIL,LATTICES,WAYBEL_0,WAYBEL_5,GROUP_6,WAYBEL10,YELLOW_1,FINSET_1,SETFAM_1,REWRITE1,RELAT_1,FUNCT_1,ZFMISC_1,CAT_1,EQREL_1,WELLORD2,ORDINAL2,WAYBEL_3,SEQM_3,PBOOLE,CARD_3,WELLORD1,WAYBEL_1,YELLOW_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,SETFAM_1,FINSET_1,RELAT_1,ORDERS_2,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,PBOOLE,LATTICE3,YELLOW_0,YELLOW_1,YELLOW_2,WAYBEL_0,WAYBEL_1,WAYBEL_3,WAYBEL_5,WAYBEL_8,WAYBEL10;
definitions TARSKI,YELLOW_2,STRUCT_0;
theorems TARSKI,ZFMISC_1,SETFAM_1,ORDERS_2,FUNCT_1,FUNCT_2,LATTICE3,YELLOW_0,YELLOW_1,YELLOW_2,WAYBEL_0,CARD_3,WAYBEL_1,WAYBEL_3,WAYBEL_4,WAYBEL_5,WAYBEL_8,WAYBEL10,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33;
schemes FUNCT_2,PARTFUN1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,FUNCT_2,FINSET_1,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,WAYBEL_1,WAYBEL_3,WAYBEL_8,WAYBEL10,CKB9,CKB22;
constructors DOMAIN_1,GRCAT_1,QUANTAL1,ORDERS_3,WAYBEL_1,WAYBEL_3,WAYBEL_8,WAYBEL10,RELSET_1;
requirements SUBSET,BOOLE;
begin
theorem
Th28: (for L1,L2 being  up-complete non empty Poset holds (for f being (Function of L1,L2) holds (f is  isomorphic implies (for x being (Element of L1) holds (x is  compact iff ( f . x ) is  compact)))))
proof
let L1 being  up-complete non empty Poset,L2 being  up-complete non empty Poset;
let f being (Function of L1,L2);
assume A1: f is  isomorphic;
let x being (Element of L1);
thus (x is  compact implies ( f . x ) is  compact)
proof
assume x is  compact;
then x << x by WAYBEL_3:def 2;
then ( f . x ) << ( f . x ) by A1,CKB33:1;
hence thesis by WAYBEL_3:def 2;
end;

thus (( f . x ) is  compact implies x is  compact)
proof
assume ( f . x ) is  compact;
then ( f . x ) << ( f . x ) by WAYBEL_3:def 2;
then x << x by A1,CKB33:1;
hence thesis by WAYBEL_3:def 2;
end;

end;
