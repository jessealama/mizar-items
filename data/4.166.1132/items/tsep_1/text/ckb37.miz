environ
vocabularies SUBSET_1,XBOOLE_0,TARSKI,PRE_TOPC,STRUCT_0,RELAT_1,RCOMP_1,SETFAM_1,CONNSP_1,TSEP_1;
notations TARSKI,XBOOLE_0,SUBSET_1,STRUCT_0,PRE_TOPC,CONNSP_1,BORSUK_1,CKB19,CKB28,CKB34,CKB35,CKB36;
definitions PRE_TOPC,SUBSET_1,STRUCT_0,CKB19,CKB28,CKB34,CKB36;
theorems PRE_TOPC,TOPS_1,TOPS_2,CONNSP_1,BORSUK_1,SUBSET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36;
registrations XBOOLE_0,STRUCT_0,PRE_TOPC,TOPS_1,BORSUK_1,CKB21,CKB22;
constructors CONNSP_1,BORSUK_1,CKB19,CKB28,CKB34,CKB36;
requirements BOOLE,SUBSET;
begin
reserve X for non empty TopSpace;
reserve X1 for non empty (SubSpace of X);
reserve X2 for non empty (SubSpace of X);
reserve X3 for non empty (SubSpace of X);
theorem
Th29: ((X1 meets X2 implies ( X1 meet X2 ) = ( X2 meet X1 )) & (((X1 meets X2 & ( X1 meet X2 ) meets X3) or (X2 meets X3 & X1 meets ( X2 meet X3 ))) implies ( ( X1 meet X2 ) meet X3 ) = ( X1 meet ( X2 meet X3 ) )))
proof
thus (X1 meets X2 implies ( X1 meet X2 ) = ( X2 meet X1 ))
proof
assume A1: X1 meets X2;
then (the carrier of ( X1 meet X2 )) = ( (the carrier of X2) /\ (the carrier of X1) ) by CKB36:def 1
.= (the carrier of ( X2 meet X1 )) by A1,CKB36:def 1;
hence thesis by CKB8:1;
end;

now
A2:now
assume that
A3: X1 meets X2
and
A4: ( X1 meet X2 ) meets X3;
(the carrier of ( X1 meet X2 )) meets (the carrier of X3) by A4,CKB34:def 1;
then ( (the carrier of ( X1 meet X2 )) /\ (the carrier of X3) ) <> ( {} ) by XBOOLE_0:def 7;
then ( ( (the carrier of X1) /\ (the carrier of X2) ) /\ (the carrier of X3) ) <> ( {} ) by A3,CKB36:def 1;
then A5: ( (the carrier of X1) /\ ( (the carrier of X2) /\ (the carrier of X3) ) ) <> ( {} ) by XBOOLE_1:16;
then ( (the carrier of X2) /\ (the carrier of X3) ) <> ( {} );
then A6: (the carrier of X2) meets (the carrier of X3) by XBOOLE_0:def 7;
then X2 meets X3 by CKB34:def 1;
then ( (the carrier of X1) /\ (the carrier of ( X2 meet X3 )) ) <> ( {} ) by A5,CKB36:def 1;
then (the carrier of X1) meets (the carrier of ( X2 meet X3 )) by XBOOLE_0:def 7;
hence (((X1 meets X2 & ( X1 meet X2 ) meets X3) & X2 meets X3) & X1 meets ( X2 meet X3 )) by A3,A4,A6,CKB34:def 1;
end;
assume A7: ((X1 meets X2 & ( X1 meet X2 ) meets X3) or (X2 meets X3 & X1 meets ( X2 meet X3 )));
A8:now
assume that
A9: X2 meets X3
and
A10: X1 meets ( X2 meet X3 );
(the carrier of X1) meets (the carrier of ( X2 meet X3 )) by A10,CKB34:def 1;
then ( (the carrier of X1) /\ (the carrier of ( X2 meet X3 )) ) <> ( {} ) by XBOOLE_0:def 7;
then ( (the carrier of X1) /\ ( (the carrier of X2) /\ (the carrier of X3) ) ) <> ( {} ) by A9,CKB36:def 1;
then A11: ( ( (the carrier of X1) /\ (the carrier of X2) ) /\ (the carrier of X3) ) <> ( {} ) by XBOOLE_1:16;
then ( (the carrier of X1) /\ (the carrier of X2) ) <> ( {} );
then A12: (the carrier of X1) meets (the carrier of X2) by XBOOLE_0:def 7;
then X1 meets X2 by CKB34:def 1;
then ( (the carrier of ( X1 meet X2 )) /\ (the carrier of X3) ) <> ( {} ) by A11,CKB36:def 1;
then (the carrier of ( X1 meet X2 )) meets (the carrier of X3) by XBOOLE_0:def 7;
hence (((X1 meets X2 & ( X1 meet X2 ) meets X3) & X2 meets X3) & X1 meets ( X2 meet X3 )) by A9,A10,A12,CKB34:def 1;
end;
then (the carrier of ( ( X1 meet X2 ) meet X3 )) = ( (the carrier of ( X1 meet X2 )) /\ (the carrier of X3) ) by A7,CKB36:def 1
.= ( ( (the carrier of X1) /\ (the carrier of X2) ) /\ (the carrier of X3) ) by A7,A8,CKB36:def 1
.= ( (the carrier of X1) /\ ( (the carrier of X2) /\ (the carrier of X3) ) ) by XBOOLE_1:16
.= ( (the carrier of X1) /\ (the carrier of ( X2 meet X3 )) ) by A7,A2,CKB36:def 1
.= (the carrier of ( X1 meet ( X2 meet X3 ) )) by A7,A2,CKB36:def 1;
hence ( ( X1 meet X2 ) meet X3 ) = ( X1 meet ( X2 meet X3 ) ) by CKB8:1;
end;
hence thesis;
end;
