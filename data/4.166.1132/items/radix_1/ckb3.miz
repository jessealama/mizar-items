environ
vocabularies NUMBERS,NAT_1,INT_1,ARYTM_1,ARYTM_3,CARD_1,XXREAL_0,SUBSET_1,RELAT_1,NEWTON,POWER,TARSKI,XBOOLE_0,FINSEQ_2,FINSEQ_1,FUNCT_1,PARTFUN1,CARD_3,ORDINAL4,RADIX_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,NAT_1,NAT_D,FUNCT_1,PARTFUN1,NEWTON,POWER,FINSEQ_1,FINSEQ_2,TREES_4,GR_CY_1,XXREAL_0,MESFUNC1;
definitions TARSKI,RVSUM_1;
theorems NAT_1,NAT_2,INT_1,FINSEQ_1,EULER_1,PREPOWER,POWER,RVSUM_1,FINSEQ_2,FINSEQ_4,TARSKI,FUNCT_1,PEPIN,FINSEQ_5,NEWTON,XCMPLX_1,XREAL_1,XXREAL_0,FINSOP_1,ORDINAL1,NAT_D,PARTFUN1,CARD_1,CKB1,CKB2;
schemes NAT_1,FINSEQ_2;
registrations RELSET_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,POWER,CARD_1,FINSEQ_1;
constructors REAL_1,NAT_D,FINSOP_1,NEWTON,POWER,MESFUNC1,WSIERP_1,GR_CY_1,BINOP_2;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for Nat;
reserve m for Nat;
reserve n for Nat;
theorem
Th4: (m <> ( 0 ) implies ( ( k mod ( m * n ) ) mod n ) = ( k mod n ))
proof
assume A1: m <> ( 0 );
per cases ;
suppose A2: n <> ( 0 );

reconsider k9 = k,m9 = m,n9 = n as Integer;
( m9 * n9 ) <> ( 0 ) by A1,A2,XCMPLX_1:6;
hence ( ( k mod ( m * n ) ) mod n ) = ( ( k9 - ( ( k9 div ( m9 * n9 ) ) * ( m9 * n9 ) ) ) mod n9 ) by INT_1:def 10
.= ( ( k9 + ( ( - ( m9 * ( k9 div ( m9 * n9 ) ) ) ) * n9 ) ) mod n9 )
.= ( k mod n ) by EULER_1:12;
end;
suppose A3: n = ( 0 );

hence ( ( k mod ( m * n ) ) mod n ) = ( 0 ) by NAT_D:def 2
.= ( k mod n ) by A3,NAT_D:def 2;
end;
end;
