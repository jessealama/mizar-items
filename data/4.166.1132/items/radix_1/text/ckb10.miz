environ
vocabularies NUMBERS,NAT_1,INT_1,ARYTM_1,ARYTM_3,CARD_1,XXREAL_0,SUBSET_1,RELAT_1,NEWTON,POWER,TARSKI,XBOOLE_0,FINSEQ_2,FINSEQ_1,FUNCT_1,PARTFUN1,CARD_3,ORDINAL4,RADIX_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,NAT_1,NAT_D,FUNCT_1,PARTFUN1,NEWTON,POWER,FINSEQ_1,FINSEQ_2,TREES_4,GR_CY_1,XXREAL_0,MESFUNC1,CKB8,CKB9;
definitions TARSKI,RVSUM_1,CKB8,CKB9;
theorems NAT_1,NAT_2,INT_1,FINSEQ_1,EULER_1,PREPOWER,POWER,RVSUM_1,FINSEQ_2,FINSEQ_4,TARSKI,FUNCT_1,PEPIN,FINSEQ_5,NEWTON,XCMPLX_1,XREAL_1,XXREAL_0,FINSOP_1,ORDINAL1,NAT_D,PARTFUN1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9;
schemes NAT_1,FINSEQ_2;
registrations RELSET_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,POWER,CARD_1,FINSEQ_1;
constructors REAL_1,NAT_D,FINSOP_1,NEWTON,POWER,MESFUNC1,WSIERP_1,GR_CY_1,BINOP_2,CKB8,CKB9;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for Nat;
theorem
Lm1: (for k being Nat holds (k >= 2 implies ( Radix k ) >= ( 2 + 2 )))
proof
defpred P[ Nat ]
 means
( Radix $1 ) >= ( 2 + 2 );
let k;
A1: (for kk being Nat holds ((kk >= 2 & P[ kk ]) implies P[ ( kk + 1 ) ]))
proof
let kk being Nat;
assume kk >= 2;
( Radix ( kk + 1 ) ) = ( ( 2 to_power kk ) * ( 2 to_power 1 ) ) by POWER:27
.= ( ( Radix kk ) * 2 ) by POWER:25;
then A2: ( Radix ( kk + 1 ) ) >= ( Radix kk ) by XREAL_1:155;
assume ( Radix kk ) >= ( 2 + 2 );
hence thesis by A2,XXREAL_0:2;
end;
( Radix 2 ) = ( 2 to_power ( 1 + 1 ) )
.= ( ( 2 to_power 1 ) * ( 2 to_power 1 ) ) by POWER:27
.= ( 2 * ( 2 to_power 1 ) ) by POWER:25
.= ( 2 * 2 ) by POWER:25;
then A3: P[ 2 ];
(for k being Nat holds (k >= 2 implies P[ k ])) from NAT_1:sch 8(A3,A1);
hence thesis;
end;
