environ
vocabularies NUMBERS,NAT_1,INT_1,ARYTM_1,ARYTM_3,CARD_1,XXREAL_0,SUBSET_1,RELAT_1,NEWTON,POWER,TARSKI,XBOOLE_0,FINSEQ_2,FINSEQ_1,FUNCT_1,PARTFUN1,CARD_3,ORDINAL4,RADIX_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,NAT_1,NAT_D,FUNCT_1,PARTFUN1,NEWTON,POWER,FINSEQ_1,FINSEQ_2,TREES_4,GR_CY_1,XXREAL_0,MESFUNC1,CKB8,CKB9,CKB19,CKB21,CKB22,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB33,CKB36;
definitions TARSKI,RVSUM_1,CKB8,CKB9,CKB21,CKB22,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB33,CKB36;
theorems NAT_1,NAT_2,INT_1,FINSEQ_1,EULER_1,PREPOWER,POWER,RVSUM_1,FINSEQ_2,FINSEQ_4,TARSKI,FUNCT_1,PEPIN,FINSEQ_5,NEWTON,XCMPLX_1,XREAL_1,XXREAL_0,FINSOP_1,ORDINAL1,NAT_D,PARTFUN1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41;
schemes NAT_1,FINSEQ_2;
registrations RELSET_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,POWER,CARD_1,FINSEQ_1,CKB18;
constructors REAL_1,NAT_D,FINSOP_1,NEWTON,POWER,MESFUNC1,WSIERP_1,GR_CY_1,BINOP_2,CKB8,CKB9,CKB19,CKB21,CKB22,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB33,CKB36;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
definition
let k being Nat;
let i being Nat;
let n being Nat;
let x being (Tuple of n,( k -SD ));
let y being (Tuple of n,( k -SD ));
assume that
A1: i in ( Seg n )
and
A2: k >= 2;
func Add (x,y,i,k) -> (Element of ( k -SD ))
equals
:Def13: ( ( SD_Add_Data (( ( DigA (x,i) ) + ( DigA (y,i) ) ),k) ) + ( SD_Add_Carry ( ( DigA (x,( i -' 1 )) ) + ( DigA (y,( i -' 1 )) ) ) ) );
coherence
proof
set SDC = ( SD_Add_Carry ( ( DigA (x,( i -' 1 )) ) + ( DigA (y,( i -' 1 )) ) ) );
set SDD = ( SD_Add_Data (( ( DigA (x,i) ) + ( DigA (y,i) ) ),k) );
A3: ( - 1 ) <= SDC by CKB32:1;
A4: SDC <= 1 by CKB32:1;
A5: (( DigA (x,i) ) is (Element of ( k -SD )) & ( DigA (y,i) ) is (Element of ( k -SD ))) by A1,CKB23:1;
then SDD <= ( ( Radix k ) - 2 ) by A2,CKB35:1;
then A6: ( SDD + SDC ) <= ( ( ( Radix k ) - 2 ) + 1 ) by A4,XREAL_1:7;
( ( - ( Radix k ) ) + 2 ) <= SDD by A2,A5,CKB35:1;
then (( SDD + SDC ) is (Element of ( INT )) & ( ( ( - ( Radix k ) ) + 2 ) + ( - 1 ) ) <= ( SDD + SDC )) by A3,INT_1:def 2,XREAL_1:7;
then ( SDD + SDC ) in ( k -SD ) by A6;
hence thesis;
end;
end;
