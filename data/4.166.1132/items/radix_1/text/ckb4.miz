environ
vocabularies NUMBERS,NAT_1,INT_1,ARYTM_1,ARYTM_3,CARD_1,XXREAL_0,SUBSET_1,RELAT_1,NEWTON,POWER,TARSKI,XBOOLE_0,FINSEQ_2,FINSEQ_1,FUNCT_1,PARTFUN1,CARD_3,ORDINAL4,RADIX_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,INT_1,NAT_1,NAT_D,FUNCT_1,PARTFUN1,NEWTON,POWER,FINSEQ_1,FINSEQ_2,TREES_4,GR_CY_1,XXREAL_0,MESFUNC1;
definitions TARSKI,RVSUM_1;
theorems NAT_1,NAT_2,INT_1,FINSEQ_1,EULER_1,PREPOWER,POWER,RVSUM_1,FINSEQ_2,FINSEQ_4,TARSKI,FUNCT_1,PEPIN,FINSEQ_5,NEWTON,XCMPLX_1,XREAL_1,XXREAL_0,FINSOP_1,ORDINAL1,NAT_D,PARTFUN1,CARD_1,CKB1,CKB2,CKB3;
schemes NAT_1,FINSEQ_2;
registrations RELSET_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,POWER,CARD_1,FINSEQ_1;
constructors REAL_1,NAT_D,FINSOP_1,NEWTON,POWER,MESFUNC1,WSIERP_1,GR_CY_1,BINOP_2;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for Nat;
reserve n for Nat;
theorem
(k <> ( 0 ) implies (( ( n + 1 ) mod k ) = ( 0 ) or ( ( n + 1 ) mod k ) = ( ( n mod k ) + 1 )))
proof
assume A1: k <> ( 0 );
then k >= 1 by NAT_1:14;
then reconsider K = ( k - 1 ) as (Element of ( NAT )) by INT_1:3,XREAL_1:48;
( n mod k ) < ( ( k - 1 ) + 1 ) by A1,NAT_D:1;
then A2: ( n mod k ) <= K by NAT_1:13;
per cases  by A2,XXREAL_0:1;
suppose ( n mod k ) < ( k - 1 );

hence thesis by CKB2:1;
end;
suppose ( n mod k ) = ( k - 1 );

hence thesis by CKB1:1;
end;
end;
