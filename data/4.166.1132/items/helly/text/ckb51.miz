environ
vocabularies NUMBERS,XBOOLE_0,FINSEQ_1,FUNCT_1,GRAPH_2,ARYTM_3,NAT_1,XXREAL_0,SUBSET_1,TREES_1,TARSKI,CARD_1,ORDINAL1,FINSET_1,MEMBERED,RELAT_1,ORDINAL4,GLIB_000,GLIB_001,ABIAN,ZFMISC_1,ARYTM_1,GRAPH_1,RCOMP_1,SETFAM_1,HELLY;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,FINSET_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,SETFAM_1,FUNCT_1,FINSEQ_1,MEMBERED,NAT_1,TREES_1,XXREAL_2,ABIAN,GRAPH_2,GLIB_000,GLIB_001,GLIB_002,CKB2,CKB27,CKB28,CKB34;
definitions TARSKI,XBOOLE_0,GLIB_001,CKB2,CKB34;
theorems TARSKI,NAT_1,GRAPH_5,SETFAM_1,XBOOLE_0,XBOOLE_1,GRFUNC_1,FUNCT_1,ZFMISC_1,ORDINAL1,FINSEQ_1,FINSEQ_2,FINSEQ_3,INT_1,EULER_1,CARD_1,XREAL_1,XXREAL_0,CHORD,ABIAN,GLIB_000,GLIB_001,GLIB_002,MSSCYC_1,MEMBERED,GRAPH_2,XXREAL_2,FINSEQ_4,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50;
schemes NAT_1,FINSEQ_1;
registrations FINSET_1,XREAL_0,XXREAL_0,NAT_1,INT_1,RELAT_1,FINSEQ_1,ABIAN,MEMBERED,GLIB_000,GLIB_001,GLIB_002,XXREAL_2,CARD_1,FUNCT_1,XBOOLE_0,CKB14,CKB29,CKB31,CKB37,CKB38;
constructors DOMAIN_1,SETFAM_1,NAT_1,GRAPH_2,GLIB_001,GLIB_002,XXREAL_2,RELSET_1,RAT_1,CKB2,CKB34;
requirements BOOLE,SUBSET,NUMERALS,ARITHM,REAL;
begin
theorem
Lm2: (for T being _Tree holds (for a,b,c being (Vertex of T) holds (for P1,P4 being (Path of T) holds ((((P1 = ( T .pathBetween (a,b) ) & P4 = ( T .pathBetween (a,c) )) & (not P1 c= P4)) & (not P4 c= P1)) implies ( ( ( P1 .vertices() ) /\ ( ( T .pathBetween (b,c) ) .vertices() ) ) /\ ( ( T .pathBetween (c,a) ) .vertices() ) ) = { ( P1 . ( len ( maxPrefix (P1,P4) ) ) ) }))))
proof
let T being _Tree;
let a being (Vertex of T);
let b being (Vertex of T);
let c being (Vertex of T);
let P1 being (Path of T);
let P4 being (Path of T);
assume that
A1: P1 = ( T .pathBetween (a,b) )
and
A2: P4 = ( T .pathBetween (a,c) )
and
A3: (not P1 c= P4)
and
A4: (not P4 c= P1);
set P3 = ( T .pathBetween (c,a) );
A5: ( P3 .vertices() ) = ( P4 .vertices() ) by A2,CKB41:1;
set i = ( len ( maxPrefix (P1,P4) ) );
( P1 .first() ) = a by A1,CKB35:1;
then A6: ( P1 .first() ) = ( P4 .first() ) by A2,CKB35:1;
then reconsider i9 = i as  odd (Element of ( NAT )) by CKB24:1;
set x = ( P1 . i9 );
A7: i <= ( i + 2 ) by NAT_1:11;
A8:now
assume b in ( P3 .vertices() );
then b in ( P4 .vertices() ) by A2,CKB41:1;
then P4 = ( ( T .pathBetween (a,b) ) .append ( T .pathBetween (b,c) ) ) by A2,CKB45:1;
hence contradiction by A1,A3,CKB17:1;
end;
( i + 2 ) <= ( len P4 ) by A4,A6,CKB25:1;
then A9: i <= ( len P4 ) by A7,XXREAL_0:2;
A10: ( i + 2 ) <= ( len P1 ) by A3,A6,CKB25:1;
then reconsider x as (Vertex of T) by A7,GLIB_001:7,XXREAL_0:2;
set P1b = ( P1 .cut (i9,( len P1 )) );
set P1br = ( P1b .reverse() );
set j = ( len P1br );
set P4c = ( P4 .cut (i9,( len P4 )) );
set Pbc = ( P1br .append P4c );
A11: i <= ( len P1 ) by A7,A10,XXREAL_0:2;
then ( P1b .first() ) = ( P1 . i9 ) by GLIB_001:37;
then A12: ( P1br .last() ) = x by GLIB_001:22;
1 <= j by CHORD:2;
then j in ( dom P1br ) by FINSEQ_3:25;
then A13: ( Pbc . j ) = x by A12,GLIB_001:32;
set P2 = ( T .pathBetween (b,c) );
A14: x in ( P1 .vertices() ) by A11,GLIB_001:87;
A15: ( P1 . ( len P1 ) ) = ( P1 .last() )
.= b by A1,CKB35:1;
then ( P1b .last() ) = b by A11,GLIB_001:37;
then A16: ( P1br .first() ) = b by GLIB_001:22;
A17: x = ( P4 . i9 ) by CKB8:1;
then x <> b by A8,A5,A9,GLIB_001:87;
then A18: P1br is  open by A12,A16,GLIB_001:def 24;
( P4 . ( len P4 ) ) = ( P4 .last() )
.= c by A2,CKB35:1;
then P4c is_Walk_from x,c by A9,A17,GLIB_001:37;
then A19: P4c = ( T .pathBetween (x,c) ) by CKB34:def 1;
then A20: ( P4c .first() ) = x by CKB35:1;
then A21: j <= ( len Pbc ) by A12,GLIB_001:29;
P1b is_Walk_from x,b by A11,A15,GLIB_001:37;
then P1b = ( T .pathBetween (x,b) ) by CKB34:def 1;
then (( P1br .vertices() ) = ( P1b .vertices() ) & ( ( P1b .vertices() ) /\ ( P4c .vertices() ) ) = { x }) by A1,A2,A3,A4,A19,CKB49:1,GLIB_001:92;
then A22: ( ( P1br .vertices() ) /\ ( P4c .vertices() ) ) c= { ( P1br .first() ),( P1br .last() ) } by A12,ZFMISC_1:7;
A23: ( P4c .vertices() ) c= ( P4 .vertices() ) by A9,GLIB_001:94;
A24: ( P1br .edges() ) misses ( P4c .edges() )
proof
assume (not thesis);
then ( ( P1br .edges() ) /\ ( P4c .edges() ) ) <> ( {} ) by XBOOLE_0:def 7;
then consider e being set such that A25: e in ( ( P1br .edges() ) /\ ( P4c .edges() ) ) by XBOOLE_0:def 1;
e in ( P1br .edges() ) by A25,XBOOLE_0:def 4;
then consider v1br,v2br being (Vertex of T),n being  odd (Element of ( NAT )) such that A26: ( n + 2 ) <= ( len P1br ) and A27: v1br = ( P1br . n ) and e = ( P1br . ( n + 1 ) ) and A28: v2br = ( P1br . ( n + 2 ) ) and A29: e Joins v1br,v2br,T by GLIB_001:103;
n <= ( n + 2 ) by NAT_1:11;
then n <= ( len P1br ) by A26,XXREAL_0:2;
then A30: v1br in ( P1br .vertices() ) by A27,GLIB_001:87;
v2br in ( P1br .vertices() ) by A26,A28,GLIB_001:87;
then A31: { v1br,v2br } c= ( P1br .vertices() ) by A30,ZFMISC_1:32;
e in ( P4c .edges() ) by A25,XBOOLE_0:def 4;
then consider v1c,v2c being (Vertex of T),m being  odd (Element of ( NAT )) such that A32: ( m + 2 ) <= ( len P4c ) and A33: v1c = ( P4c . m ) and e = ( P4c . ( m + 1 ) ) and A34: v2c = ( P4c . ( m + 2 ) ) and A35: e Joins v1c,v2c,T by GLIB_001:103;
m <= ( m + 2 ) by NAT_1:11;
then m <= ( len P4c ) by A32,XXREAL_0:2;
then A36: v1c in ( P4c .vertices() ) by A33,GLIB_001:87;
A37: ((v1br = v1c & v2br = v2c) or (v1br = v2c & v2br = v1c)) by A29,A35,GLIB_000:15;
A38: v2c in ( P4c .vertices() ) by A32,A34,GLIB_001:87;
then { v1c,v2c } c= ( P4c .vertices() ) by A36,ZFMISC_1:32;
then A39: { v1c,v2c } c= ( ( P1br .vertices() ) /\ ( P4c .vertices() ) ) by A37,A31,XBOOLE_1:19;
then A40: (v2c = b or v2c = x) by A12,A16,A22,XBOOLE_1:1,ZFMISC_1:22;
(v1c = b or v1c = x) by A12,A16,A22,A39,XBOOLE_1:1,ZFMISC_1:22;
hence contradiction by A8,A5,A23,A35,A36,A38,A40,GLIB_000:18;
end;
A41: ( P4c .last() ) = c by A19,CKB35:1;
then A42: Pbc is_Walk_from b,c by A12,A20,A16,GLIB_001:30;
now
assume c in ( P1 .vertices() );
then P1 = ( ( T .pathBetween (a,c) ) .append ( T .pathBetween (c,b) ) ) by A1,CKB45:1;
hence contradiction by A2,A4,CKB17:1;
end;
then x <> c by A11,GLIB_001:87;
then A43: P4c is  open by A20,A41,GLIB_001:def 24;
(not ( P1br .first() ) in ( P4c .vertices() )) by A8,A5,A23,A16;
then Pbc is (Path of T) by A12,A20,A18,A43,A22,A24,CKB20:1;
then Pbc = P2 by A42,CKB34:def 1;
then A44: x in ( P2 .vertices() ) by A21,A13,GLIB_001:87;
A45: x in ( P4 .vertices() ) by A9,A17,GLIB_001:87;
A46: ( ( ( P1 .vertices() ) /\ ( P2 .vertices() ) ) /\ ( P3 .vertices() ) ) c= { x }
proof
set Pcx = ( T .pathBetween (c,x) );
set Pxa = ( T .pathBetween (x,a) );
set Pbx = ( T .pathBetween (b,x) );
set Pxc = ( T .pathBetween (x,c) );
set Pax = ( T .pathBetween (a,x) );
set Pxb = ( T .pathBetween (x,b) );
let z being set;
A47: ( Pbx .vertices() ) = ( Pxb .vertices() ) by CKB41:1;
A48: ( Pcx .vertices() ) = ( Pxc .vertices() ) by CKB41:1;
A49: ( Pcx .last() ) = x by CKB35:1
.= ( Pxa .first() ) by CKB35:1;
P3 = ( Pcx .append Pxa ) by A5,A45,CKB45:1;
then A50: ( P3 .vertices() ) = ( ( Pcx .vertices() ) \/ ( Pxa .vertices() ) ) by A49,GLIB_001:93;
A51: ( Pbx .last() ) = x by CKB35:1
.= ( Pxc .first() ) by CKB35:1;
P2 = ( Pbx .append Pxc ) by A44,CKB45:1;
then A52: ( P2 .vertices() ) = ( ( Pbx .vertices() ) \/ ( Pxc .vertices() ) ) by A51,GLIB_001:93;
A53: ( Pax .last() ) = x by CKB35:1
.= ( Pxb .first() ) by CKB35:1;
P1 = ( Pax .append Pxb ) by A1,A14,CKB45:1;
then A54: ( P1 .vertices() ) = ( ( Pax .vertices() ) \/ ( Pxb .vertices() ) ) by A53,GLIB_001:93;
assume A55: z in ( ( ( P1 .vertices() ) /\ ( P2 .vertices() ) ) /\ ( P3 .vertices() ) );
then A56: z in ( ( P1 .vertices() ) /\ ( P2 .vertices() ) ) by XBOOLE_0:def 4;
then z in ( P1 .vertices() ) by XBOOLE_0:def 4;
then A57: (z in ( Pax .vertices() ) or z in ( Pxb .vertices() )) by A54,XBOOLE_0:def 3;
z in ( P3 .vertices() ) by A55,XBOOLE_0:def 4;
then A58: (z in ( Pcx .vertices() ) or z in ( Pxa .vertices() )) by A50,XBOOLE_0:def 3;
z in ( P2 .vertices() ) by A56,XBOOLE_0:def 4;
then A59: (z in ( Pbx .vertices() ) or z in ( Pxc .vertices() )) by A52,XBOOLE_0:def 3;
per cases  by A57,A59,A58,CKB41:1;
suppose (z in ( Pax .vertices() ) & z in ( Pbx .vertices() ));

then z in ( ( Pax .vertices() ) /\ ( Pxb .vertices() ) ) by A47,XBOOLE_0:def 4;
hence thesis by A1,A14,CKB48:1;
end;
suppose (z in ( Pax .vertices() ) & z in ( Pcx .vertices() ));

then z in ( ( Pax .vertices() ) /\ ( Pxc .vertices() ) ) by A48,XBOOLE_0:def 4;
hence thesis by A2,A45,CKB48:1;
end;
suppose (z in ( Pbx .vertices() ) & z in ( Pcx .vertices() ));

then z in ( ( Pbx .vertices() ) /\ ( Pxc .vertices() ) ) by A48,XBOOLE_0:def 4;
hence thesis by A44,CKB48:1;
end;
end;
x in ( ( P1 .vertices() ) /\ ( P2 .vertices() ) ) by A14,A44,XBOOLE_0:def 4;
then x in ( ( ( P1 .vertices() ) /\ ( P2 .vertices() ) ) /\ ( P3 .vertices() ) ) by A5,A45,XBOOLE_0:def 4;
then { x } c= ( ( ( P1 .vertices() ) /\ ( P2 .vertices() ) ) /\ ( P3 .vertices() ) ) by ZFMISC_1:31;
hence thesis by A46,XBOOLE_0:def 10;
end;
