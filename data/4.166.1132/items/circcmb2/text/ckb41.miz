environ
vocabularies NAT_1,FUNCT_1,FINSEQ_2,MARGREL1,CIRCCOMB,LATTICES,FINSET_1,XBOOLE_0,MSUALG_1,FSM_1,CIRCUIT1,RELAT_1,CIRCUIT2,STRUCT_0,MSAFREE2,GLIB_000,ARYTM_3,CARD_1,XXREAL_0,PBOOLE,NUMBERS,MCART_1,FUNCT_4,PARTFUN1,FACIRC_1,TARSKI;
notations TARSKI,XBOOLE_0,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,MCART_1,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_2,FUNCT_4,PBOOLE,MARGREL1,STRUCT_0,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,CKB29;
definitions CIRCUIT2,MSAFREE2,CKB29;
theorems TARSKI,FUNCT_1,RELAT_1,ZFMISC_1,NAT_1,MCART_1,PBOOLE,CIRCCOMB,FACIRC_1,FUNCT_4,FRECHET,CIRCUIT1,CIRCUIT2,XBOOLE_0,XBOOLE_1,XXREAL_0,ORDINAL1,CKB2,CKB3,CKB4,CKB5,CKB15,CKB16,CKB17,CKB18,CKB29,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40;
schemes NAT_1,PBOOLE,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB31;
registrations RELAT_1,FUNCT_1,ORDINAL1,XREAL_0,CARD_3,STRUCT_0,CIRCCOMB,FACIRC_1,NAT_1,MARGREL1,CKB1;
constructors LIMFUNC1,CIRCUIT1,CIRCUIT2,FACIRC_1,NAT_1,RELSET_1,MARGREL1,DOMAIN_1,ENUMSET1,BINOP_1,CKB29;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Th19: (for S1,S2,S being non  void  Circuit-like non  empty ManySortedSign holds ((( InputVertices S1 ) misses ( InnerVertices S2 ) & S = ( S1 +* S2 )) implies (for A1 being  non-empty (Circuit of S1) holds (for A2 being  non-empty (Circuit of S2) holds (for A being  non-empty (Circuit of S) holds ((A1 tolerates A2 & A = ( A1 +* A2 )) implies (for s1 being (State of A1) holds (for s2 being (State of A2) holds (for s being (State of A) holds (((s1 = ( s | (the carrier of S1) ) & s2 = ( s | (the carrier of S2) )) & s1 is  stable) implies (for n being Nat holds ( ( Following (s,n) ) | (the carrier of S2) ) = ( Following (s2,n) ))))))))))))
proof
let S1 being non  void  Circuit-like non  empty ManySortedSign;
let S2 being non  void  Circuit-like non  empty ManySortedSign;
let S being non  void  Circuit-like non  empty ManySortedSign;
assume that
A1: (( InputVertices S1 ) misses ( InnerVertices S2 ) & S = ( S1 +* S2 ));
let A1 being  non-empty (Circuit of S1);
let A2 being  non-empty (Circuit of S2);
let A being  non-empty (Circuit of S);
assume that
A2: A1 tolerates A2
and
A3: A = ( A1 +* A2 );
let s1 being (State of A1);
let s2 being (State of A2);
let s being (State of A);
assume that
A4: s1 = ( s | (the carrier of S1) )
and
A5: s2 = ( s | (the carrier of S2) )
and
A6: s1 is  stable;
defpred P[ Nat ]
 means
( ( Following (s,$1) ) | (the carrier of S2) ) = ( Following (s2,$1) );
A7:now
let n being Nat;
A8: (( Following (s,( n + 1 )) ) = ( Following ( Following (s,n) ) ) & ( Following ( Following (s2,n) ) ) = ( Following (s2,( n + 1 )) )) by FACIRC_1:12;
(the Sorts of A1) tolerates (the Sorts of A2) by A2,CIRCCOMB:def 3;
then reconsider Fs1 = ( ( Following (s,n) ) | (the carrier of S1) ) as (State of A1) by A3,CIRCCOMB:26;
( Following (s1,n) ) = Fs1 by A1,A2,A3,A4,CKB36:1;
then A9: Fs1 is  stable by A6,CKB4:1;
assume P[ n ];
hence P[ ( n + 1 ) ] by A1,A2,A3,A8,A9,CKB38:1;
end;
( ( Following (s,( 0 )) ) | (the carrier of S2) ) = s2 by A5,FACIRC_1:11
.= ( Following (s2,( 0 )) ) by FACIRC_1:11;
then A10: P[ ( 0 ) ];
thus (for n being Nat holds P[ n ]) from NAT_1:sch 2(A10,A7);
end;
