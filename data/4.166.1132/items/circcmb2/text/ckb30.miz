environ
vocabularies NAT_1,FUNCT_1,FINSEQ_2,MARGREL1,CIRCCOMB,LATTICES,FINSET_1,XBOOLE_0,MSUALG_1,FSM_1,CIRCUIT1,RELAT_1,CIRCUIT2,STRUCT_0,MSAFREE2,GLIB_000,ARYTM_3,CARD_1,XXREAL_0,PBOOLE,NUMBERS,MCART_1,FUNCT_4,PARTFUN1,FACIRC_1,TARSKI;
notations TARSKI,XBOOLE_0,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,MCART_1,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_2,FUNCT_4,PBOOLE,MARGREL1,STRUCT_0,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,CKB29;
definitions CIRCUIT2,MSAFREE2,CKB29;
theorems TARSKI,FUNCT_1,RELAT_1,ZFMISC_1,NAT_1,MCART_1,PBOOLE,CIRCCOMB,FACIRC_1,FUNCT_4,FRECHET,CIRCUIT1,CIRCUIT2,XBOOLE_0,XBOOLE_1,XXREAL_0,ORDINAL1,CKB2,CKB3,CKB4,CKB5,CKB15,CKB16,CKB17,CKB18,CKB29;
schemes NAT_1,PBOOLE,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
registrations RELAT_1,FUNCT_1,ORDINAL1,XREAL_0,CARD_3,STRUCT_0,CIRCCOMB,FACIRC_1,NAT_1,MARGREL1,CKB1;
constructors LIMFUNC1,CIRCUIT1,CIRCUIT2,FACIRC_1,NAT_1,RELSET_1,MARGREL1,DOMAIN_1,ENUMSET1,BINOP_1,CKB29;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
defpred Pl[ set,set,set ]
 means
(not contradiction);
defpred R[ set,set,set,set ]
 means
(not contradiction);
scheme CIRCCMB29sch20 { S0,Sn() ->  unsplit  gate`1=arity  gate`2isBoolean non  void  strict non  empty ManySortedSign,A0() ->  Boolean  gate`2=den  strict (Circuit of S0()),S(set,set) ->  unsplit  gate`1=arity  gate`2isBoolean non  void non  empty ManySortedSign,A(set,set) -> set,o0() -> set,o(set,set) -> set,n() -> Nat } : (ex A being  Boolean  gate`2=den  strict (Circuit of Sn()) st (ex f,g,h being (ManySortedSet of ( NAT )) st (((((Sn() = ( f . n() ) & A = ( g . n() )) & ( f . ( 0 ) ) = S0()) & ( g . ( 0 ) ) = A0()) & ( h . ( 0 ) ) = o0()) & (for n being Nat holds (for S being non  empty ManySortedSign holds (for A1 being  non-empty MSAlgebra over S holds (for x being set holds (for A2 being  non-empty MSAlgebra over S(x,n) holds ((((S = ( f . n ) & A1 = ( g . n )) & x = ( h . n )) & A2 = A(x,n)) implies ((( f . ( n + 1 ) ) = ( S +* S(x,n) ) & ( g . ( n + 1 ) ) = ( A1 +* A2 )) & ( h . ( n + 1 ) ) = o(x,n)))))))))))
provided
A1: (ex f,h being (ManySortedSet of ( NAT )) st (((Sn() = ( f . n() ) & ( f . ( 0 ) ) = S0()) & ( h . ( 0 ) ) = o0()) & (for n being Nat holds (for S being non  empty ManySortedSign holds (for x being set holds ((S = ( f . n ) & x = ( h . n )) implies (( f . ( n + 1 ) ) = ( S +* S(x,n) ) & ( h . ( n + 1 ) ) = o(x,n))))))))
and
A2: (for x being set holds (for n being Nat holds A(x,n) is  Boolean  gate`2=den  strict  Boolean  gate`2=den  strict (Circuit of S(x,n))))
proof
deffunc Sl(non  empty ManySortedSign,set,set) = ( $1 +* S($2,$3) );
consider f1,h1 being (ManySortedSet of ( NAT )) such that A3: Sn() = ( f1 . n() ) and A4: ( f1 . ( 0 ) ) = S0() and A5: ( h1 . ( 0 ) ) = o0() and A6: (for n being Nat holds (for S being non  empty ManySortedSign holds (for x being set holds ((S = ( f1 . n ) & x = ( h1 . n )) implies (( f1 . ( n + 1 ) ) = Sl(S,x,n) & ( h1 . ( n + 1 ) ) = o(x,n)))))) by A1;
defpred P[ set,set,Nat ]
 means
($3 <> ( 0 ) implies (ex S being  unsplit  gate`1=arity  gate`2isBoolean non  void  strict non  empty ManySortedSign st (ex A being  Boolean  gate`2=den  strict (Circuit of S) st (S = $1 & A = $2))));
deffunc Al(non  empty ManySortedSign, non-empty MSAlgebra over $1,set,set) = ( $2 +* ( MSAlg (A($3,$4),S($3,$4)) ) );
A7: (for S being non  empty ManySortedSign holds (for A being  non-empty MSAlgebra over S holds (for x being set holds (for n being Nat holds Al(S,A,x,n) is  non-empty  non-empty MSAlgebra over Sl(S,x,n)))));
A8: (for n being Nat holds (for S being non  empty ManySortedSign holds (for x being set holds (((S = ( f1 . n ) & x = ( h1 . n )) & Pl[ S,x,n ]) implies Pl[ Sl(S,x,n),o(x,n),( n + 1 ) ]))));
consider f,g,h being (ManySortedSet of ( NAT )) such that A9: ((( f . ( 0 ) ) = S0() & ( g . ( 0 ) ) = A0()) & ( h . ( 0 ) ) = o0()) and A10: (for n being Nat holds (for S being non  empty ManySortedSign holds (for A being  non-empty MSAlgebra over S holds (for x being set holds (((S = ( f . n ) & A = ( g . n )) & x = ( h . n )) implies ((( f . ( n + 1 ) ) = Sl(S,x,n) & ( g . ( n + 1 ) ) = Al(S,A,x,n)) & ( h . ( n + 1 ) ) = o(x,n))))))) from CKB21:sch 1;
A11: (for n being Nat holds (for S being non  empty ManySortedSign holds (for A being  non-empty MSAlgebra over S holds (for x being set holds ((((S = ( f . n ) & A = ( g . n )) & x = ( h . n )) & R[ S,A,x,n ]) implies R[ Sl(S,x,n),Al(S,A,x,n),o(x,n),( n + 1 ) ])))));
A12: (ex S being non  empty ManySortedSign st (ex A being  non-empty MSAlgebra over S st (ex x being set st (((S = ( f . ( 0 ) ) & A = ( g . ( 0 ) )) & x = ( h . ( 0 ) )) & R[ S,A,x,( 0 ) ])))) by A9;
A13: (for n being Nat holds (ex S being non  empty ManySortedSign st (ex A being  non-empty MSAlgebra over S st ((S = ( f . n ) & A = ( g . n )) & R[ S,A,( h . n ),n ])))) from CKB22:sch 1(A12,A10,A11,A7);
defpred P[ Nat ]
 means
( h1 . $1 ) = ( h . $1 );
A14: (ex S being non  empty ManySortedSign st (ex x being set st ((S = ( f1 . ( 0 ) ) & x = ( h1 . ( 0 ) )) & Pl[ S,x,( 0 ) ]))) by A4;
A15: (for n being Nat holds (ex S being non  empty ManySortedSign st (S = ( f1 . n ) & Pl[ S,( h1 . n ),n ]))) from CKB7:sch 1(A14,A6,A8);
A16:now
let n being Nat;
assume A17: P[ n ];
(ex S being non  empty ManySortedSign st S = ( f1 . n )) by A15;
then A18: ( h1 . ( n + 1 ) ) = o(( h1 . n ),n) by A6;
(ex S being non  empty ManySortedSign st (ex A being  non-empty MSAlgebra over S st (S = ( f . n ) & A = ( g . n )))) by A13;
hence P[ ( n + 1 ) ] by A10,A17,A18;
end;
A19: P[ ( 0 ) ] by A9,A5;
A20: (for i being Nat holds P[ i ]) from NAT_1:sch 2(A19,A16);
defpred P[ Nat ]
 means
( f1 . $1 ) = ( f . $1 );
(for i being set holds (i in ( NAT ) implies ( h1 . i ) = ( h . i ))) by A20;
then A21: h1 = h by PBOOLE:3;
A22:now
let n being Nat;
consider S being non  empty ManySortedSign,A being  non-empty MSAlgebra over S such that A23: S = ( f . n ) and A24: A = ( g . n ) by A13;
assume P[ n ];
then ( f1 . ( n + 1 ) ) = ( S +* S(( h1 . n ),n) ) by A6,A23
.= ( f . ( n + 1 ) ) by A10,A21,A23,A24;
hence P[ ( n + 1 ) ];
end;
defpred R[ set,set,set,Nat ]
 means
P[ $1,$2,$4 ];
A25: (for n being Nat holds (for S being non  empty ManySortedSign holds (for A being  non-empty MSAlgebra over S holds (for x being set holds ((((S = ( f . n ) & A = ( g . n )) & x = ( h . n )) & R[ S,A,x,n ]) implies R[ Sl(S,x,n),Al(S,A,x,n),o(x,n),( n + 1 ) ])))))
proof
let n being Nat;
let S being non  empty ManySortedSign;
let A being  non-empty MSAlgebra over S;
let x being set;
assume that
A26: (S = ( f . n ) & A = ( g . n ))
and
x = ( h . n )
and
A27: P[ S,A,n ]
and
( n + 1 ) <> ( 0 );
per cases ;
suppose A28: n = ( 0 );

reconsider A2 = A(x,( 0 )) as  Boolean  gate`2=den  strict (Circuit of S(x,( 0 ))) by A2;
( A0() +* ( MSAlg (A(x,( 0 )),S(x,( 0 ))) ) ) = ( A0() +* A2 ) by CKB29:def 1;
hence thesis by A9,A26,A28;
end;
suppose A29: n <> ( 0 );

then reconsider S as  unsplit  gate`1=arity  gate`2isBoolean non  void non  empty  strict non  empty ManySortedSign by A27;
reconsider A as  Boolean  gate`2=den  strict (Circuit of S) by A27,A29;
reconsider A9 = A(x,n) as  Boolean  gate`2=den  strict (Circuit of S(x,n)) by A2;
( A +* ( MSAlg (A(x,n),S(x,n)) ) ) = ( A +* A9 ) by CKB29:def 1;
hence thesis;
end;
end;
A30: (ex S being non  empty ManySortedSign st (ex A being  non-empty MSAlgebra over S st (ex x being set st (((S = ( f . ( 0 ) ) & A = ( g . ( 0 ) )) & x = ( h . ( 0 ) )) & R[ S,A,x,( 0 ) ])))) by A9;
(for n being Nat holds (ex S being non  empty ManySortedSign st (ex A being  non-empty MSAlgebra over S st ((S = ( f . n ) & A = ( g . n )) & R[ S,A,( h . n ),n ])))) from CKB22:sch 1(A30,A10,A25,A7);
then consider S being non  empty ManySortedSign,A being  non-empty MSAlgebra over S such that A31: S = ( f . n() ) and A32: A = ( g . n() ) and A33: P[ S,A,n() ];
A34: P[ ( 0 ) ] by A9,A4;
A35: (for i being Nat holds P[ i ]) from NAT_1:sch 2(A34,A22);
then (for i being set holds (i in ( NAT ) implies ( f1 . i ) = ( f . i )));
then f1 = f by PBOOLE:3;
then reconsider A as  Boolean  gate`2=den  strict (Circuit of Sn()) by A9,A3,A31,A32,A33;
take A;
take f;
take g;
take h;
thus ((((Sn() = ( f . n() ) & A = ( g . n() )) & ( f . ( 0 ) ) = S0()) & ( g . ( 0 ) ) = A0()) & ( h . ( 0 ) ) = o0()) by A9,A3,A35,A32;
let n being Nat;
let S being non  empty ManySortedSign;
let A1 being  non-empty MSAlgebra over S;
let x being set;
let A2 being  non-empty MSAlgebra over S(x,n);
assume A36: (((S = ( f . n ) & A1 = ( g . n )) & x = ( h . n )) & A2 = A(x,n));
A2 = ( MSAlg (A2,S(x,n)) ) by CKB29:def 1;
hence thesis by A10,A36;
end;
