environ
vocabularies NAT_1,FUNCT_1,FINSEQ_2,MARGREL1,CIRCCOMB,LATTICES,FINSET_1,XBOOLE_0,MSUALG_1,FSM_1,CIRCUIT1,RELAT_1,CIRCUIT2,STRUCT_0,MSAFREE2,GLIB_000,ARYTM_3,CARD_1,XXREAL_0,PBOOLE,NUMBERS,MCART_1,FUNCT_4,PARTFUN1,FACIRC_1,TARSKI;
notations TARSKI,XBOOLE_0,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,MCART_1,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_2,FUNCT_4,PBOOLE,MARGREL1,STRUCT_0,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,CKB29;
definitions CIRCUIT2,MSAFREE2,CKB29;
theorems TARSKI,FUNCT_1,RELAT_1,ZFMISC_1,NAT_1,MCART_1,PBOOLE,CIRCCOMB,FACIRC_1,FUNCT_4,FRECHET,CIRCUIT1,CIRCUIT2,XBOOLE_0,XBOOLE_1,XXREAL_0,ORDINAL1,CKB2,CKB3,CKB4,CKB5,CKB15,CKB16,CKB17,CKB18,CKB29;
schemes NAT_1,PBOOLE,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB31;
registrations RELAT_1,FUNCT_1,ORDINAL1,XREAL_0,CARD_3,STRUCT_0,CIRCCOMB,FACIRC_1,NAT_1,MARGREL1,CKB1;
constructors LIMFUNC1,CIRCUIT1,CIRCUIT2,FACIRC_1,NAT_1,RELSET_1,MARGREL1,DOMAIN_1,ENUMSET1,BINOP_1,CKB29;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
(for S1,S2,S being non  void  Circuit-like non  empty ManySortedSign holds ((( InnerVertices S1 ) misses ( InputVertices S2 ) & S = ( S1 +* S2 )) implies (for C1 being  non-empty (Circuit of S1) holds (for C2 being  non-empty (Circuit of S2) holds (for C being  non-empty (Circuit of S) holds ((C1 tolerates C2 & C = ( C1 +* C2 )) implies (for s2 being (State of C2) holds (for s being (State of C) holds (s2 = ( s | (the carrier of S2) ) implies ( Following s2 ) = ( ( Following s ) | (the carrier of S2) ))))))))))
proof
let S1 being non  void  Circuit-like non  empty ManySortedSign;
let S2 being non  void  Circuit-like non  empty ManySortedSign;
let S being non  void  Circuit-like non  empty ManySortedSign;
assume that
A1: (( InnerVertices S1 ) misses ( InputVertices S2 ) & S = ( S1 +* S2 ));
let C1 being  non-empty (Circuit of S1);
let C2 being  non-empty (Circuit of S2);
let C being  non-empty (Circuit of S);
assume that
A2: C1 tolerates C2
and
A3: C = ( C1 +* C2 );
let s2 being (State of C2);
let s being (State of C);
assume that
A4: s2 = ( s | (the carrier of S2) );
(the Sorts of C1) tolerates (the Sorts of C2) by A2,CIRCCOMB:def 3;
then reconsider s1 = ( s | (the carrier of S1) ) as (State of C1) by A3,CIRCCOMB:26;
(( dom ( Following s2 ) ) = (the carrier of S2) & ( Following s ) = ( ( Following s1 ) +* ( Following s2 ) )) by A1,A2,A3,A4,CIRCCOMB:32,CIRCUIT1:3;
hence thesis by FUNCT_4:23;
end;
