environ
vocabularies NAT_1,FUNCT_1,FINSEQ_2,MARGREL1,CIRCCOMB,LATTICES,FINSET_1,XBOOLE_0,MSUALG_1,FSM_1,CIRCUIT1,RELAT_1,CIRCUIT2,STRUCT_0,MSAFREE2,GLIB_000,ARYTM_3,CARD_1,XXREAL_0,PBOOLE,NUMBERS,MCART_1,FUNCT_4,PARTFUN1,FACIRC_1,TARSKI;
notations TARSKI,XBOOLE_0,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,MCART_1,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_2,FUNCT_4,PBOOLE,MARGREL1,STRUCT_0,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,CKB29;
definitions CIRCUIT2,MSAFREE2,CKB29;
theorems TARSKI,FUNCT_1,RELAT_1,ZFMISC_1,NAT_1,MCART_1,PBOOLE,CIRCCOMB,FACIRC_1,FUNCT_4,FRECHET,CIRCUIT1,CIRCUIT2,XBOOLE_0,XBOOLE_1,XXREAL_0,ORDINAL1,CKB2,CKB3,CKB4,CKB5,CKB15,CKB16,CKB17,CKB18,CKB29,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38;
schemes NAT_1,PBOOLE,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB31;
registrations RELAT_1,FUNCT_1,ORDINAL1,XREAL_0,CARD_3,STRUCT_0,CIRCCOMB,FACIRC_1,NAT_1,MARGREL1,CKB1;
constructors LIMFUNC1,CIRCUIT1,CIRCUIT2,FACIRC_1,NAT_1,RELSET_1,MARGREL1,DOMAIN_1,ENUMSET1,BINOP_1,CKB29;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
(for S1,S2,S being non  void  Circuit-like non  empty ManySortedSign holds (S = ( S1 +* S2 ) implies (for A1 being  non-empty (Circuit of S1) holds (for A2 being  non-empty (Circuit of S2) holds (for A being  non-empty (Circuit of S) holds ((A1 tolerates A2 & A = ( A1 +* A2 )) implies (for s being (State of A) holds (for s1 being (State of A1) holds ((s1 = ( s | (the carrier of S1) ) & s1 is  stable) implies (for s2 being (State of A2) holds ((s2 = ( s | (the carrier of S2) ) & s2 is  stable) implies s is  stable)))))))))))
proof
let S1 being non  void  Circuit-like non  empty ManySortedSign;
let S2 being non  void  Circuit-like non  empty ManySortedSign;
let S being non  void  Circuit-like non  empty ManySortedSign;
assume that
A1: S = ( S1 +* S2 );
let A1 being  non-empty (Circuit of S1);
let A2 being  non-empty (Circuit of S2);
let A being  non-empty (Circuit of S);
assume that
A2: A1 tolerates A2
and
A3: A = ( A1 +* A2 );
S1 tolerates S2 by A2,CIRCCOMB:def 3;
then A4: ( InnerVertices S ) = ( ( InnerVertices S1 ) \/ ( InnerVertices S2 ) ) by A1,CIRCCOMB:11;
let s being (State of A);
let s1 being (State of A1);
assume that
A5: s1 = ( s | (the carrier of S1) )
and
A6: s1 = ( Following s1 );
let s2 being (State of A2);
assume that
A7: s2 = ( s | (the carrier of S2) )
and
A8: s2 = ( Following s2 );
A9: (the carrier of S) = ( (the carrier of S1) \/ (the carrier of S2) ) by A1,CIRCCOMB:def 2;
A10:now
let x being set;
assume x in (the carrier of S);
then reconsider v = x as (Vertex of S);
(the carrier of S) = ( ( InputVertices S ) \/ ( InnerVertices S ) ) by XBOOLE_1:45;
then (v in ( InputVertices S ) or v in ( InnerVertices S )) by XBOOLE_0:def 3;
then ((((v in ( InputVertices S ) & v in (the carrier of S1)) or (v in ( InputVertices S ) & v in (the carrier of S2))) or v in ( InnerVertices S1 )) or v in ( InnerVertices S2 )) by A4,A9,XBOOLE_0:def 3;
then ((( ( Following s ) . v ) = ( s1 . v ) & v in (the carrier of S1)) or (( ( Following s ) . v ) = ( s2 . v ) & v in (the carrier of S2))) by A1,A2,A3,A5,A6,A7,A8,CIRCCOMB:31;
hence ( s . x ) = ( ( Following s ) . x ) by A5,A7,FUNCT_1:49;
end;
(( dom ( Following s ) ) = (the carrier of S) & ( dom s ) = (the carrier of S)) by CIRCUIT1:3;
hence s = ( Following s ) by A10,FUNCT_1:2;
end;
