environ
vocabularies NAT_1,FUNCT_1,FINSEQ_2,MARGREL1,CIRCCOMB,LATTICES,FINSET_1,XBOOLE_0,MSUALG_1,FSM_1,CIRCUIT1,RELAT_1,CIRCUIT2,STRUCT_0,MSAFREE2,GLIB_000,ARYTM_3,CARD_1,XXREAL_0,PBOOLE,NUMBERS,MCART_1,FUNCT_4,PARTFUN1,FACIRC_1,TARSKI;
notations TARSKI,XBOOLE_0,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,MCART_1,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_2,FUNCT_4,PBOOLE,MARGREL1,STRUCT_0,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1;
definitions CIRCUIT2,MSAFREE2;
theorems TARSKI,FUNCT_1,RELAT_1,ZFMISC_1,NAT_1,MCART_1,PBOOLE,CIRCCOMB,FACIRC_1,FUNCT_4,FRECHET,CIRCUIT1,CIRCUIT2,XBOOLE_0,XBOOLE_1,XXREAL_0,ORDINAL1,CKB2,CKB3,CKB4,CKB5;
schemes NAT_1,PBOOLE;
registrations RELAT_1,FUNCT_1,ORDINAL1,XREAL_0,CARD_3,STRUCT_0,CIRCCOMB,FACIRC_1,NAT_1,MARGREL1,CKB1;
constructors LIMFUNC1,CIRCUIT1,CIRCUIT2,FACIRC_1,NAT_1,RELSET_1,MARGREL1,DOMAIN_1,ENUMSET1,BINOP_1;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
scheme CIRCCMB29sch1 { S0() -> non  empty ManySortedSign,o0() -> set,S(set,set,set) -> non  empty ManySortedSign,o(set,set) -> set } : (ex f,h being (ManySortedSet of ( NAT )) st ((( f . ( 0 ) ) = S0() & ( h . ( 0 ) ) = o0()) & (for n being Nat holds (for S being non  empty ManySortedSign holds (for x being set holds ((S = ( f . n ) & x = ( h . n )) implies (( f . ( n + 1 ) ) = S(S,x,n) & ( h . ( n + 1 ) ) = o(x,n))))))))
proof
deffunc f(set,set) = [ S(( $2 `1 ),( $2 `2 ),$1),o(( $2 `2 ),$1) ];
consider F being Function such that A1: (( dom F ) = ( NAT ) & ( F . ( 0 ) ) = [ S0(),o0() ]) and A2: (for n being Nat holds ( F . ( n + 1 ) ) = f(n,( F . n ))) from NAT_1:sch 11;
deffunc h(set) = ( ( F . $1 ) `2 );
deffunc f(set) = ( ( F . $1 ) `1 );
consider f being (ManySortedSet of ( NAT )) such that A3: (for n being set holds (n in ( NAT ) implies ( f . n ) = f(n))) from PBOOLE:sch 4;
consider h being (ManySortedSet of ( NAT )) such that A4: (for n being set holds (n in ( NAT ) implies ( h . n ) = h(n))) from PBOOLE:sch 4;
take f;
take h;
(( ( F . ( 0 ) ) `1 ) = S0() & ( ( F . ( 0 ) ) `2 ) = o0()) by A1,MCART_1:7;
hence (( f . ( 0 ) ) = S0() & ( h . ( 0 ) ) = o0()) by A3,A4;
let n being Nat;
let S being non  empty ManySortedSign;
let x being set;
set x = ( F . n );
A5: n in ( NAT ) by ORDINAL1:def 12;
then A6: ( h . n ) = ( x `2 ) by A4;
assume S = ( f . n );
then S = ( x `1 ) by A3,A5;
then ( F . ( n + 1 ) ) = [ S(S,( h . n ),n),o(( h . n ),n) ] by A2,A6;
then (( ( F . ( n + 1 ) ) `1 ) = S(S,( h . n ),n) & ( ( F . ( n + 1 ) ) `2 ) = o(( h . n ),n)) by MCART_1:7;
hence thesis by A3,A4;
end;
