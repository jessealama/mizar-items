environ
vocabularies NUMBERS,SUBSET_1,AMI_1,AMI_3,SCMFSA_2,AMISTD_2,CARD_1,GRAPHSP,ARYTM_3,SCMNORM,RELAT_1,FUNCT_1,FUNCT_4,XBOOLE_0,FSM_1,ARYTM_1,INT_1,COMPLEX1,PARTFUN1,FINSEQ_1,FINSEQ_2,NAT_1,COMPOS_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,NUMBERS,CARD_3,XXREAL_0,XCMPLX_0,MCART_1,NAT_1,NAT_D,VALUED_1,INT_1,INT_2,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_4,FUNCOP_1,FUNCT_7,FINSEQ_1,FINSEQ_2,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_3,SCMFSA_2,AMISTD_2,AMISTD_5;
definitions TARSKI,COMPOS_1,EXTPRO_1,AMI_3,SCMFSA_2,FUNCOP_1,RELAT_1,AMISTD_2,FUNCT_1,AMISTD_5,MEMSTR_0;
theorems SCMFSA_2,ENUMSET1,NAT_1,TARSKI,SCMFSA_3,VALUED_1,AMISTD_2,RECDEF_2,SCMFSA10,FINSEQ_1,ORDINAL1,COMPOS_1,EXTPRO_1,MEMSTR_0;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,FUNCOP_1,NUMBERS,XREAL_0,INT_1,CARD_3,SCMFSA_2,FINSET_1,VALUED_1,FUNCT_4,RELAT_1,AMI_3,AMI_6,RELOC,XXREAL_0,SCMFSA10,AMISTD_2,VALUED_0,COMPOS_1,EXTPRO_1,AMISTD_5,MEMSTR_0,CKB1,CKB2,CKB3,CKB4,CKB5;
constructors DOMAIN_1,XXREAL_0,AMI_3,SCMFSA_2,NAT_D,RELSET_1,VALUED_1,AMISTD_2,AMISTD_5,PBOOLE,FUNCT_7,MEMSTR_0;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve k for (Element of ( NAT ));
theorem
Th14: (for k,loc being (Element of ( NAT )) holds ( IncAddr (( goto loc ),k) ) = ( goto ( loc + k ) ))
proof
let k being (Element of ( NAT ));
let loc being (Element of ( NAT ));
A1: ( InsCode ( IncAddr (( goto loc ),k) ) ) = ( InsCode ( goto loc ) ) by COMPOS_1:def 17
.= 6 by RECDEF_2:def 1
.= ( InsCode ( goto ( loc + k ) ) ) by RECDEF_2:def 1;
A2: ( AddressPart ( IncAddr (( goto loc ),k) ) ) = ( AddressPart ( goto loc ) ) by COMPOS_1:def 17
.= ( {} ) by RECDEF_2:def 3
.= ( AddressPart ( goto ( loc + k ) ) ) by RECDEF_2:def 3;
A3: ( JumpPart ( IncAddr (( goto loc ),k) ) ) = ( k + ( JumpPart ( goto loc ) ) ) by COMPOS_1:def 17;
( JumpPart ( IncAddr (( goto loc ),k) ) ) = ( JumpPart ( goto ( loc + k ) ) )
proof
thus A4: ( dom ( JumpPart ( IncAddr (( goto loc ),k) ) ) ) = ( dom ( JumpPart ( goto ( loc + k ) ) ) ) by A1,COMPOS_1:def 12;
A5: ( JumpPart ( goto loc ) ) = <* loc *> by RECDEF_2:def 2;
A6: ( JumpPart ( goto ( loc + k ) ) ) = <* ( loc + k ) *> by RECDEF_2:def 2;
let x being set;
assume A7: x in ( dom ( JumpPart ( IncAddr (( goto loc ),k) ) ) );
( dom <* ( loc + k ) *> ) = { 1 } by FINSEQ_1:2,FINSEQ_1:38;
then A8: x = 1 by A7,A4,A6,TARSKI:def 1;
thus ( ( JumpPart ( IncAddr (( goto loc ),k) ) ) . x ) = ( k + ( ( JumpPart ( goto loc ) ) . x ) ) by A3,A7,VALUED_1:def 2
.= ( loc + k ) by A5,A8,FINSEQ_1:40
.= ( ( JumpPart ( goto ( loc + k ) ) ) . x ) by A6,A8,FINSEQ_1:40;
end;
hence thesis by A1,A2,COMPOS_1:1;
end;
