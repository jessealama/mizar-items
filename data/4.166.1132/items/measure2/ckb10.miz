environ
vocabularies PROB_1,MEASURE1,FUNCT_1,NUMBERS,RELAT_1,SUPINF_2,TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,CARD_1,ARYTM_3,XXREAL_0,NAT_1,ZFMISC_1,VALUED_0,ORDINAL2,MEASURE2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XXREAL_0,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,NAT_1,SETFAM_1,PROB_1,SUPINF_2,MEASURE1,CKB2,CKB4,CKB5;
definitions TARSKI,XBOOLE_0,SUPINF_2,CKB2;
theorems TARSKI,FUNCT_1,FUNCT_2,ZFMISC_1,NAT_1,SETFAM_1,SUPINF_2,MEASURE1,ENUMSET1,PROB_2,XBOOLE_0,XBOOLE_1,PROB_1,ORDINAL1,XXREAL_0,RELAT_1,CKB1,CKB2,CKB3,CKB6,CKB7,CKB8,CKB9;
schemes NAT_1,RECDEF_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,FUNCT_2,NUMBERS,XXREAL_0,MEASURE1,MEMBERED,RELSET_1;
constructors PARTFUN1,NAT_1,PROB_2,MEASURE1,SUPINF_1,XREAL_0,RELSET_1,CKB2,CKB4,CKB5;
requirements NUMERALS,SUBSET,BOOLE;
begin
reserve X for set;
theorem
Th8: (for S being non empty (Subset-Family of X) holds (for N,G,F being (Function of ( NAT ),S) holds ((((( G . ( 0 ) ) = ( N . ( 0 ) ) & (for n being (Element of ( NAT )) holds ( G . ( n + 1 ) ) = ( ( N . ( n + 1 ) ) \/ ( G . n ) ))) & ( F . ( 0 ) ) = ( N . ( 0 ) )) & (for n being (Element of ( NAT )) holds ( F . ( n + 1 ) ) = ( ( N . ( n + 1 ) ) \ ( G . n ) ))) implies (for n,m being (Element of ( NAT )) holds (n <= m implies ( F . n ) c= ( G . m ))))))
proof
let S being non empty (Subset-Family of X);
let N being (Function of ( NAT ),S),G being (Function of ( NAT ),S),F being (Function of ( NAT ),S);
assume that
A1: ( G . ( 0 ) ) = ( N . ( 0 ) )
and
A2: (for n being (Element of ( NAT )) holds ( G . ( n + 1 ) ) = ( ( N . ( n + 1 ) ) \/ ( G . n ) ))
and
A3: ( F . ( 0 ) ) = ( N . ( 0 ) )
and
A4: (for n being (Element of ( NAT )) holds ( F . ( n + 1 ) ) = ( ( N . ( n + 1 ) ) \ ( G . n ) ));
let n being (Element of ( NAT )),m being (Element of ( NAT ));
A5: (for n being (Element of ( NAT )) holds ( F . n ) c= ( G . n ))
proof
defpred P[ (Element of ( NAT )) ]
 means
( F . $1 ) c= ( G . $1 );
A6: (for n being (Element of ( NAT )) holds (P[ n ] implies P[ ( n + 1 ) ]))
proof
let n being (Element of ( NAT ));
assume ( F . n ) c= ( G . n );
( G . ( n + 1 ) ) = ( ( N . ( n + 1 ) ) \/ ( G . n ) ) by A2;
then A7: ( N . ( n + 1 ) ) c= ( G . ( n + 1 ) ) by XBOOLE_1:7;
( F . ( n + 1 ) ) = ( ( N . ( n + 1 ) ) \ ( G . n ) ) by A4;
hence thesis by A7,XBOOLE_1:1;
end;
A8: P[ ( 0 ) ] by A1,A3;
thus (for n being (Element of ( NAT )) holds P[ n ]) from NAT_1:sch 1(A8,A6);
end;
A9: (n < m implies ( F . n ) c= ( G . m ))
proof
assume n < m;
then A10: ( G . n ) c= ( G . m ) by A1,A2,CKB9:1;
( F . n ) c= ( G . n ) by A5;
hence thesis by A10,XBOOLE_1:1;
end;
assume n <= m;
then (n = m or n < m) by XXREAL_0:1;
hence thesis by A5,A9;
end;
