environ
vocabularies PROB_1,MEASURE1,FUNCT_1,NUMBERS,RELAT_1,SUPINF_2,TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,CARD_1,ARYTM_3,XXREAL_0,NAT_1,ZFMISC_1,VALUED_0,ORDINAL2,MEASURE2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XXREAL_0,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,NAT_1,SETFAM_1,PROB_1,SUPINF_2,MEASURE1,CKB2,CKB4,CKB5;
definitions TARSKI,XBOOLE_0,SUPINF_2,CKB2;
theorems TARSKI,FUNCT_1,FUNCT_2,ZFMISC_1,NAT_1,SETFAM_1,SUPINF_2,MEASURE1,ENUMSET1,PROB_2,XBOOLE_0,XBOOLE_1,PROB_1,ORDINAL1,XXREAL_0,RELAT_1,CKB1,CKB2,CKB3,CKB6,CKB7,CKB8;
schemes NAT_1,RECDEF_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,FUNCT_2,NUMBERS,XXREAL_0,MEASURE1,MEMBERED,RELSET_1;
constructors PARTFUN1,NAT_1,PROB_2,MEASURE1,SUPINF_1,XREAL_0,RELSET_1,CKB2,CKB4,CKB5;
requirements NUMERALS,SUBSET,BOOLE;
begin
reserve X for set;
theorem
Th7: (for S being non  empty (Subset-Family of X) holds (for N,F being (Function of ( NAT ),S) holds ((( F . ( 0 ) ) = ( N . ( 0 ) ) & (for n being (Element of ( NAT )) holds ( F . ( n + 1 ) ) = ( ( N . ( n + 1 ) ) \/ ( F . n ) ))) implies (for n,m being (Element of ( NAT )) holds (n < m implies ( F . n ) c= ( F . m ))))))
proof
let S being non  empty (Subset-Family of X);
let N being (Function of ( NAT ),S);
let F being (Function of ( NAT ),S);
assume that
A1: ( F . ( 0 ) ) = ( N . ( 0 ) )
and
A2: (for n being (Element of ( NAT )) holds ( F . ( n + 1 ) ) = ( ( N . ( n + 1 ) ) \/ ( F . n ) ));
defpred X[ (Element of ( NAT )) ]
 means
(for m being (Element of ( NAT )) holds ($1 < m implies ( F . $1 ) c= ( F . m )));
A3: X[ ( 0 ) ]
proof
A4: (for k being (Element of ( NAT )) holds (( 0 ) < ( k + 1 ) implies ( F . ( 0 ) ) c= ( F . ( k + 1 ) )))
proof
defpred P[ (Element of ( NAT )) ]
 means
(( 0 ) < ( $1 + 1 ) implies ( F . ( 0 ) ) c= ( F . ( $1 + 1 ) ));
A5: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being (Element of ( NAT ));
A6: ( 0 ) <= k by NAT_1:2;
( F . ( ( k + 1 ) + 1 ) ) = ( ( N . ( ( k + 1 ) + 1 ) ) \/ ( F . ( k + 1 ) ) ) by A2;
then A7: ( F . ( k + 1 ) ) c= ( F . ( ( k + 1 ) + 1 ) ) by XBOOLE_1:7;
assume (( 0 ) < ( k + 1 ) implies ( F . ( 0 ) ) c= ( F . ( k + 1 ) ));
hence thesis by A7,A6,NAT_1:13,XBOOLE_1:1;
end;
( F . ( ( 0 ) + 1 ) ) = ( ( N . ( ( 0 ) + 1 ) ) \/ ( F . ( 0 ) ) ) by A2;
then A8: P[ ( 0 ) ] by XBOOLE_1:7;
thus (for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A8,A5);
end;
let m being (Element of ( NAT ));
assume A9: ( 0 ) < m;
then consider k being Nat such that A10: m = ( k + 1 ) by NAT_1:6;
reconsider k as (Element of ( NAT )) by ORDINAL1:def 12;
m = ( k + 1 ) by A10;
hence thesis by A9,A4;
end;
A11: (for n being (Element of ( NAT )) holds (X[ n ] implies X[ ( n + 1 ) ]))
proof
let n being (Element of ( NAT ));
assume A12: (for m being (Element of ( NAT )) holds (n < m implies ( F . n ) c= ( F . m )));
let m being (Element of ( NAT ));
assume A13: ( n + 1 ) < m;
let r being set;
A14: (r in ( F . n ) implies r in ( F . m ))
proof
assume A15: r in ( F . n );
(n < m implies r in ( F . m ))
proof
assume n < m;
then ( F . n ) c= ( F . m ) by A12;
hence thesis by A15;
end;
hence thesis by A13,NAT_1:13;
end;
assume A16: r in ( F . ( n + 1 ) );
A17: ( F . ( n + 1 ) ) = ( ( N . ( n + 1 ) ) \/ ( F . n ) ) by A2;
(r in ( N . ( n + 1 ) ) implies r in ( F . m )) by A1,A2,A13,CKB8:1;
hence thesis by A16,A17,A14,XBOOLE_0:def 3;
end;
thus (for n being (Element of ( NAT )) holds X[ n ]) from NAT_1:sch 1(A3,A11);
end;
