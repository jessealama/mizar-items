environ
vocabularies SUBSET_1,NUMBERS,CQC_LANG,QC_LANG1,XBOOLE_0,VALUAT_1,FUNCT_1,FINSEQ_1,SUBSTUT1,RELAT_1,TARSKI,FUNCT_4,FUNCOP_1,PARTFUN1,FUNCT_2,MCART_1,REALSET1,XBOOLEAN,ZF_MODEL,ORDINAL4,ZF_LANG,ARYTM_3,NAT_1,XXREAL_0,ZFMISC_1,BVFUNC_2,CLASSES2,ZF_LANG1,SUBLEMMA,CARD_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSEQ_1,FUNCT_1,NAT_1,QC_LANG1,QC_LANG3,PARTFUN1,CARD_1,NUMBERS,XXREAL_0,FUNCOP_1,CQC_LANG,RELAT_1,FUNCT_4,SEQ_4,VALUAT_1,RELSET_1,FUNCT_2,MARGREL1,DOMAIN_1,MCART_1,SUBSTUT1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB14,CKB25,CKB29,CKB37,CKB39,CKB40,CKB41,CKB43,CKB44;
definitions TARSKI,XBOOLE_0,FUNCOP_1,CKB7,CKB9,CKB29,CKB37,CKB41,CKB43,CKB44;
theorems TARSKI,FINSEQ_1,FUNCT_1,MCART_1,VALUAT_1,XBOOLE_0,XBOOLE_1,FINSEQ_2,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,FUNCOP_1,FUNCT_2,RELSET_1,QC_LANG2,SUBSTUT1,FUNCT_4,FUNCT_7,ORDINAL1,XXREAL_2,CARD_1,CKB1,CKB2,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57;
schemes CQC_LANG,XBOOLE_0,SUBSTUT1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,MEMBERED,QC_LANG1,CQC_LANG,SUBSTUT1,XXREAL_0,XXREAL_2,CARD_1,RELSET_1,CKB18,CKB38;
constructors DOMAIN_1,FUNCT_4,XXREAL_0,SEQ_4,QC_LANG3,VALUAT_1,SUBSTUT1,RELSET_1,CKB5,CKB6,CKB7,CKB9,CKB14,CKB25,CKB29,CKB37,CKB39,CKB40,CKB41,CKB43,CKB44;
requirements NUMERALS,SUBSET,BOOLE;
begin
reserve b for set;
reserve x for bound_QC-variable;
reserve Sub1 for CQC_Substitution;
reserve S for (Element of ( CQC-Sub-WFF ));
reserve xSQ for (second_Q_comp of [ S,x ]);
theorem
Th42: ([ S,x ] is  quantifiable implies ( S `2 ) = ( ExpandSub (x,( S `1 ),( RestrictSub (x,( All (x,( S `1 )) ),xSQ) )) ))
proof
set Z = [ ( All (x,( S `1 )) ),xSQ ];
set q = ( All (x,( S `1 )) );
assume [ S,x ] is  quantifiable;
then A1: ( ( [ S,x ] `1 ) `2 ) = ( ( QSub ) . [ ( All (( [ S,x ] `2 ),( ( [ S,x ] `1 ) `1 )) ),xSQ ] ) by SUBSTUT1:def 23;
[ ( All (( [ S,x ] `2 ),( ( [ S,x ] `1 ) `1 )) ),xSQ ] = [ ( All (x,( ( [ S,x ] `1 ) `1 )) ),xSQ ] by MCART_1:7;
then A2: [ ( All (( [ S,x ] `2 ),( ( [ S,x ] `1 ) `1 )) ),xSQ ] = [ ( All (x,( S `1 )) ),xSQ ] by MCART_1:7;
Z in [: ( QC-WFF ),( vSUB ) :] by ZFMISC_1:def 2;
then [ Z,( ( [ S,x ] `1 ) `2 ) ] in ( QSub ) by A1,A2,CKB51:1,FUNCT_1:1;
then [ Z,( S `2 ) ] in ( QSub ) by MCART_1:7;
then consider p being QC-formula,Sub1,b such that A3: [ Z,( S `2 ) ] = [ [ p,Sub1 ],b ] and A4: p,Sub1 PQSub b by SUBSTUT1:def 15;
Z = [ p,Sub1 ] by A3,ZFMISC_1:27;
then A5: (( All (x,( S `1 )) ) = p & xSQ = Sub1) by ZFMISC_1:27;
A6: q is  universal by QC_LANG1:def 19;
then A7: ( bound_in q ) = x by QC_LANG1:def 25;
( S `2 ) = b by A3,ZFMISC_1:27;
then ( S `2 ) = ( ExpandSub (( bound_in q ),( the_scope_of q ),( RestrictSub (( bound_in q ),q,xSQ) )) ) by A4,A5,A6,SUBSTUT1:def 14;
hence thesis by A6,A7,QC_LANG1:def 26;
end;
