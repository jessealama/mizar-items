environ
vocabularies SUBSET_1,NUMBERS,CQC_LANG,QC_LANG1,XBOOLE_0,VALUAT_1,FUNCT_1,FINSEQ_1,SUBSTUT1,RELAT_1,TARSKI,FUNCT_4,FUNCOP_1,PARTFUN1,FUNCT_2,MCART_1,REALSET1,XBOOLEAN,ZF_MODEL,ORDINAL4,ZF_LANG,ARYTM_3,NAT_1,XXREAL_0,ZFMISC_1,BVFUNC_2,CLASSES2,ZF_LANG1,SUBLEMMA,CARD_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSEQ_1,FUNCT_1,NAT_1,QC_LANG1,QC_LANG3,PARTFUN1,CARD_1,NUMBERS,XXREAL_0,FUNCOP_1,CQC_LANG,RELAT_1,FUNCT_4,SEQ_4,VALUAT_1,RELSET_1,FUNCT_2,MARGREL1,DOMAIN_1,MCART_1,SUBSTUT1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB14,CKB25,CKB29,CKB37,CKB39,CKB40,CKB41,CKB43,CKB44,CKB65,CKB66,CKB70,CKB71;
definitions TARSKI,XBOOLE_0,FUNCOP_1,CKB7,CKB9,CKB29,CKB37,CKB41,CKB43,CKB44,CKB70;
theorems TARSKI,FINSEQ_1,FUNCT_1,MCART_1,VALUAT_1,XBOOLE_0,XBOOLE_1,FINSEQ_2,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,FUNCOP_1,FUNCT_2,RELSET_1,QC_LANG2,SUBSTUT1,FUNCT_4,FUNCT_7,ORDINAL1,XXREAL_2,CARD_1,CKB1,CKB2,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB67,CKB68,CKB69,CKB70,CKB72,CKB73,CKB74,CKB75;
schemes CQC_LANG,XBOOLE_0,SUBSTUT1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,MEMBERED,QC_LANG1,CQC_LANG,SUBSTUT1,XXREAL_0,XXREAL_2,CARD_1,RELSET_1,CKB18,CKB38;
constructors DOMAIN_1,FUNCT_4,XXREAL_0,SEQ_4,QC_LANG3,VALUAT_1,SUBSTUT1,RELSET_1,CKB5,CKB6,CKB7,CKB9,CKB14,CKB25,CKB29,CKB37,CKB39,CKB40,CKB41,CKB43,CKB44,CKB66,CKB70,CKB71;
requirements NUMERALS,SUBSET,BOOLE;
begin
reserve b for set;
reserve x for bound_QC-variable;
reserve A for non empty set;
reserve v for (Element of ( Valuations_in A ));
reserve f for Function;
reserve S for (Element of ( CQC-Sub-WFF ));
reserve xSQ for (second_Q_comp of [ S,x ]);
reserve a for (Element of A);
theorem
Th56: ([ S,x ] is  quantifiable implies (for a holds ( NEx_Val (( v . ( ( S_Bound ( @ ( CQCSub_All ([ S,x ],xSQ) ) ) ) | a ) ),S,x,xSQ) ) = ( NEx_Val (v,S,x,xSQ) )))
proof
assume A1: [ S,x ] is  quantifiable;
set finSub = ( RestrictSub (x,( All (x,( S `1 )) ),xSQ) );
set NF1 = ( NEx_Val (v,S,x,xSQ) );
set S1 = ( CQCSub_All ([ S,x ],xSQ) );
let a;
set z = ( S_Bound ( @ S1 ) );
set NF = ( NEx_Val (( v . ( z | a ) ),S,x,xSQ) );
v is (Element of ( Funcs (( bound_QC-variables ),A) )) by VALUAT_1:def 1;
then (ex f st ((v = f & ( dom f ) = ( bound_QC-variables )) & ( rng f ) c= A)) by FUNCT_2:def 2;
then ( rng ( @ finSub ) ) c= ( dom v );
then A2: ( dom NF1 ) = ( dom ( @ finSub ) ) by RELAT_1:27;
( v . ( z | a ) ) is (Element of ( Funcs (( bound_QC-variables ),A) )) by VALUAT_1:def 1;
then (ex f st ((( v . ( z | a ) ) = f & ( dom f ) = ( bound_QC-variables )) & ( rng f ) c= A)) by FUNCT_2:def 2;
then A3: ( rng ( @ finSub ) ) c= ( dom ( v . ( z | a ) ) );
then A4: ( dom NF ) = ( dom ( @ finSub ) ) by RELAT_1:27;
(for b holds (b in ( dom NF ) implies ( NF . b ) = ( NF1 . b )))
proof
let b;
assume that
A5: b in ( dom NF );
A6: ( ( @ finSub ) . b ) in ( rng ( @ finSub ) ) by A4,A5,FUNCT_1:3;
then reconsider x = ( ( @ finSub ) . b ) as bound_QC-variable;
(not z in ( rng finSub )) by A1,CKB57:1;
then z <> x by A6,SUBSTUT1:def 2;
then A7: ( ( v . ( z | a ) ) . x ) = ( v . x ) by CKB67:1;
( NF . b ) = ( ( v . ( z | a ) ) . x ) by A5,FUNCT_1:12;
hence thesis by A4,A2,A5,A7,FUNCT_1:12;
end;
hence thesis by A3,A2,FUNCT_1:2,RELAT_1:27;
end;
