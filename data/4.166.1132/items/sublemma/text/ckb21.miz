environ
vocabularies SUBSET_1,NUMBERS,CQC_LANG,QC_LANG1,XBOOLE_0,VALUAT_1,FUNCT_1,FINSEQ_1,SUBSTUT1,RELAT_1,TARSKI,FUNCT_4,FUNCOP_1,PARTFUN1,FUNCT_2,MCART_1,REALSET1,XBOOLEAN,ZF_MODEL,ORDINAL4,ZF_LANG,ARYTM_3,NAT_1,XXREAL_0,ZFMISC_1,BVFUNC_2,CLASSES2,ZF_LANG1,SUBLEMMA,CARD_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSEQ_1,FUNCT_1,NAT_1,QC_LANG1,QC_LANG3,PARTFUN1,CARD_1,NUMBERS,XXREAL_0,FUNCOP_1,CQC_LANG,RELAT_1,FUNCT_4,SEQ_4,VALUAT_1,RELSET_1,FUNCT_2,MARGREL1,DOMAIN_1,MCART_1,SUBSTUT1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB14;
definitions TARSKI,XBOOLE_0,FUNCOP_1,CKB7,CKB9;
theorems TARSKI,FINSEQ_1,FUNCT_1,MCART_1,VALUAT_1,XBOOLE_0,XBOOLE_1,FINSEQ_2,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,FUNCOP_1,FUNCT_2,RELSET_1,QC_LANG2,SUBSTUT1,FUNCT_4,FUNCT_7,ORDINAL1,XXREAL_2,CARD_1,CKB1,CKB2,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB19,CKB20;
schemes CQC_LANG,XBOOLE_0,SUBSTUT1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,MEMBERED,QC_LANG1,CQC_LANG,SUBSTUT1,XXREAL_0,XXREAL_2,CARD_1,RELSET_1,CKB18;
constructors DOMAIN_1,FUNCT_4,XXREAL_0,SEQ_4,QC_LANG3,VALUAT_1,SUBSTUT1,RELSET_1,CKB5,CKB6,CKB7,CKB9,CKB14;
requirements NUMERALS,SUBSET,BOOLE;
begin
reserve k for (Element of ( NAT ));
reserve A for non empty set;
reserve v for (Element of ( Valuations_in A ));
reserve P for (QC-pred_symbol of k);
reserve ll for (CQC-variable_list of k);
reserve Sub for CQC_Substitution;
theorem
Th14: ( ( v . ( Val_S (v,( Sub_P (P,ll,Sub) )) ) ) *' ll ) = ( v *' ( CQC_Subst (ll,Sub) ) )
proof
set S9 = ( Sub_P (P,ll,Sub) );
set ll9 = ( CQC_Subst (ll,Sub) );
A1: ( len ll ) = k by CARD_1:def 7;
S9 = [ ( P ! ll ),Sub ] by SUBSTUT1:9;
then A2: ( S9 `2 ) = Sub by MCART_1:7;
A3: ( len ( ( v . ( Val_S (v,S9) ) ) *' ll ) ) = k by VALUAT_1:def 3;
then A4: ( dom ( ( v . ( Val_S (v,S9) ) ) *' ll ) ) = ( Seg k ) by FINSEQ_1:def 3;
A5: (for j being Nat holds (j in ( dom ( ( v . ( Val_S (v,S9) ) ) *' ll ) ) implies ( ( ( v . ( Val_S (v,S9) ) ) *' ll ) . j ) = ( ( v *' ( CQC_Subst (ll,Sub) ) ) . j )))
proof
let j being Nat;
assume that
A6: j in ( dom ( ( v . ( Val_S (v,S9) ) ) *' ll ) );
A7: (1 <= j & j <= k) by A4,A6,FINSEQ_1:1;
reconsider j as (Element of ( NAT )) by ORDINAL1:def 12;
j in ( Seg ( len ll ) ) by A4,A6,CARD_1:def 7;
then j in ( dom ll ) by FINSEQ_1:def 3;
then reconsider x = ( ll . j ) as bound_QC-variable by CKB11:1;
A8:now
assume A9: ( ll . j ) in ( dom Sub );
then (( ( v . ( Val_S (v,S9) ) ) . ( ll . j ) ) = ( ( Val_S (v,S9) ) . x ) & ( ll . j ) in ( dom ( @ ( S9 `2 ) ) )) by A2,CKB20:1,SUBSTUT1:def 2;
then ( ( v . ( Val_S (v,S9) ) ) . ( ll . j ) ) = ( v . ( ( @ ( S9 `2 ) ) . ( ll . j ) ) ) by FUNCT_1:13;
then A10: ( ( v . ( Val_S (v,S9) ) ) . ( ll . j ) ) = ( v . ( ( S9 `2 ) . ( ll . j ) ) ) by SUBSTUT1:def 2;
A11: ( ( ( v . ( Val_S (v,S9) ) ) *' ll ) . j ) = ( ( v . ( Val_S (v,S9) ) ) . ( ll . j ) ) by A7,VALUAT_1:def 3;
( v . ( ll9 . j ) ) = ( v . ( ( S9 `2 ) . ( ll . j ) ) ) by A2,A1,A7,A9,SUBSTUT1:def 3;
hence thesis by A7,A10,A11,VALUAT_1:def 3;
end;
now
assume (not ( ll . j ) in ( dom Sub ));
then A12: (( v . ( ll9 . j ) ) = ( v . ( ll . j ) ) & ( ( v . ( Val_S (v,S9) ) ) . ( ll . j ) ) = ( v . x )) by A2,A1,A7,CKB19:1,SUBSTUT1:def 3;
( ( v *' ll9 ) . j ) = ( v . ( ll9 . j ) ) by A7,VALUAT_1:def 3;
hence thesis by A7,A12,VALUAT_1:def 3;
end;
hence thesis by A8;
end;
( len ( v *' ll9 ) ) = k by VALUAT_1:def 3;
hence thesis by A3,A5,FINSEQ_2:9;
end;
