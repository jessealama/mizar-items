environ
vocabularies SUBSET_1,NUMBERS,CQC_LANG,QC_LANG1,XBOOLE_0,VALUAT_1,FUNCT_1,FINSEQ_1,SUBSTUT1,RELAT_1,TARSKI,FUNCT_4,FUNCOP_1,PARTFUN1,FUNCT_2,MCART_1,REALSET1,XBOOLEAN,ZF_MODEL,ORDINAL4,ZF_LANG,ARYTM_3,NAT_1,XXREAL_0,ZFMISC_1,BVFUNC_2,CLASSES2,ZF_LANG1,SUBLEMMA,CARD_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSEQ_1,FUNCT_1,NAT_1,QC_LANG1,QC_LANG3,PARTFUN1,CARD_1,NUMBERS,XXREAL_0,FUNCOP_1,CQC_LANG,RELAT_1,FUNCT_4,SEQ_4,VALUAT_1,RELSET_1,FUNCT_2,MARGREL1,DOMAIN_1,MCART_1,SUBSTUT1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB14,CKB25,CKB29,CKB37,CKB39,CKB40,CKB41,CKB43,CKB44,CKB65,CKB66,CKB70,CKB71;
definitions TARSKI,XBOOLE_0,FUNCOP_1,CKB7,CKB9,CKB29,CKB37,CKB41,CKB43,CKB44,CKB70;
theorems TARSKI,FINSEQ_1,FUNCT_1,MCART_1,VALUAT_1,XBOOLE_0,XBOOLE_1,FINSEQ_2,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,FUNCOP_1,FUNCT_2,RELSET_1,QC_LANG2,SUBSTUT1,FUNCT_4,FUNCT_7,ORDINAL1,XXREAL_2,CARD_1,CKB1,CKB2,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB67,CKB68,CKB69,CKB70,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97;
schemes CQC_LANG,XBOOLE_0,SUBSTUT1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,MEMBERED,QC_LANG1,CQC_LANG,SUBSTUT1,XXREAL_0,XXREAL_2,CARD_1,RELSET_1,CKB18,CKB38;
constructors DOMAIN_1,FUNCT_4,XXREAL_0,SEQ_4,QC_LANG3,VALUAT_1,SUBSTUT1,RELSET_1,CKB5,CKB6,CKB7,CKB9,CKB14,CKB25,CKB29,CKB37,CKB39,CKB40,CKB41,CKB43,CKB44,CKB66,CKB70,CKB71;
requirements NUMERALS,SUBSET,BOOLE;
begin
reserve p for (Element of ( CQC-WFF ));
reserve q for (Element of ( CQC-WFF ));
reserve y for bound_QC-variable;
reserve A for non  empty set;
reserve J for (interpretation of A);
reserve v for (Element of ( Valuations_in A ));
reserve vS for (Val_Sub of A);
reserve vS1 for (Val_Sub of A);
reserve vS2 for (Val_Sub of A);
theorem
Th81: (((for v holds (for vS holds (for vS1 holds (for vS2 holds ((((for y holds (y in ( dom vS1 ) implies (not y in ( still_not-bound_in p )))) & (for y holds (y in ( dom vS2 ) implies ( vS2 . y ) = ( v . y )))) & ( dom vS ) misses ( dom vS2 )) implies (J,( v . vS ) |= p iff J,( v . ( ( vS +* vS1 ) +* vS2 ) ) |= p)))))) & (for v holds (for vS holds (for vS1 holds (for vS2 holds ((((for y holds (y in ( dom vS1 ) implies (not y in ( still_not-bound_in q )))) & (for y holds (y in ( dom vS2 ) implies ( vS2 . y ) = ( v . y )))) & ( dom vS ) misses ( dom vS2 )) implies (J,( v . vS ) |= q iff J,( v . ( ( vS +* vS1 ) +* vS2 ) ) |= q))))))) implies (for v holds (for vS holds (for vS1 holds (for vS2 holds ((((for y holds (y in ( dom vS1 ) implies (not y in ( still_not-bound_in ( p '&' q ) )))) & (for y holds (y in ( dom vS2 ) implies ( vS2 . y ) = ( v . y )))) & ( dom vS ) misses ( dom vS2 )) implies (J,( v . vS ) |= ( p '&' q ) iff J,( v . ( ( vS +* vS1 ) +* vS2 ) ) |= ( p '&' q ))))))))
proof
assume A1: ((for v holds (for vS holds (for vS1 holds (for vS2 holds ((((for y holds (y in ( dom vS1 ) implies (not y in ( still_not-bound_in p )))) & (for y holds (y in ( dom vS2 ) implies ( vS2 . y ) = ( v . y )))) & ( dom vS ) misses ( dom vS2 )) implies (J,( v . vS ) |= p iff J,( v . ( ( vS +* vS1 ) +* vS2 ) ) |= p)))))) & (for v holds (for vS holds (for vS1 holds (for vS2 holds ((((for y holds (y in ( dom vS1 ) implies (not y in ( still_not-bound_in q )))) & (for y holds (y in ( dom vS2 ) implies ( vS2 . y ) = ( v . y )))) & ( dom vS ) misses ( dom vS2 )) implies (J,( v . vS ) |= q iff J,( v . ( ( vS +* vS1 ) +* vS2 ) ) |= q)))))));
let v;
let vS;
let vS1;
let vS2;
assume that
A2: (for y holds (y in ( dom vS1 ) implies (not y in ( still_not-bound_in ( p '&' q ) ))))
and
A3: ((for y holds (y in ( dom vS2 ) implies ( vS2 . y ) = ( v . y ))) & ( dom vS ) misses ( dom vS2 ));
A4: (for y holds (y in ( dom vS1 ) implies ((not y in ( still_not-bound_in p )) & (not y in ( still_not-bound_in q )))))
proof
let y;
assume y in ( dom vS1 );
then (not y in ( still_not-bound_in ( p '&' q ) )) by A2;
then (not y in ( ( still_not-bound_in p ) \/ ( still_not-bound_in q ) )) by QC_LANG3:10;
hence thesis by XBOOLE_0:def 3;
end;
A5: ((J,( v . ( ( vS +* vS1 ) +* vS2 ) ) |= p & J,( v . ( ( vS +* vS1 ) +* vS2 ) ) |= q) implies (J,( v . vS ) |= p & J,( v . vS ) |= q))
proof
assume A6: (J,( v . ( ( vS +* vS1 ) +* vS2 ) ) |= p & J,( v . ( ( vS +* vS1 ) +* vS2 ) ) |= q);
((for y holds (y in ( dom vS1 ) implies (not y in ( still_not-bound_in p )))) & (for y holds (y in ( dom vS1 ) implies (not y in ( still_not-bound_in q ))))) by A4;
hence thesis by A1,A3,A6;
end;
((J,( v . vS ) |= p & J,( v . vS ) |= q) implies (J,( v . ( ( vS +* vS1 ) +* vS2 ) ) |= p & J,( v . ( ( vS +* vS1 ) +* vS2 ) ) |= q))
proof
assume A7: (J,( v . vS ) |= p & J,( v . vS ) |= q);
((for y holds (y in ( dom vS1 ) implies (not y in ( still_not-bound_in p )))) & (for y holds (y in ( dom vS1 ) implies (not y in ( still_not-bound_in q ))))) by A4;
hence thesis by A1,A3,A7;
end;
hence thesis by A5,VALUAT_1:18;
end;
