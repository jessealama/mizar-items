environ
vocabularies SUBSET_1,NUMBERS,CQC_LANG,QC_LANG1,XBOOLE_0,VALUAT_1,FUNCT_1,FINSEQ_1,SUBSTUT1,RELAT_1,TARSKI,FUNCT_4,FUNCOP_1,PARTFUN1,FUNCT_2,MCART_1,REALSET1,XBOOLEAN,ZF_MODEL,ORDINAL4,ZF_LANG,ARYTM_3,NAT_1,XXREAL_0,ZFMISC_1,BVFUNC_2,CLASSES2,ZF_LANG1,SUBLEMMA,CARD_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSEQ_1,FUNCT_1,NAT_1,QC_LANG1,QC_LANG3,PARTFUN1,CARD_1,NUMBERS,XXREAL_0,FUNCOP_1,CQC_LANG,RELAT_1,FUNCT_4,SEQ_4,VALUAT_1,RELSET_1,FUNCT_2,MARGREL1,DOMAIN_1,MCART_1,SUBSTUT1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB14,CKB25,CKB29,CKB37,CKB39,CKB40,CKB41,CKB43,CKB44;
definitions TARSKI,XBOOLE_0,FUNCOP_1,CKB7,CKB9,CKB29,CKB37,CKB41,CKB43,CKB44;
theorems TARSKI,FINSEQ_1,FUNCT_1,MCART_1,VALUAT_1,XBOOLE_0,XBOOLE_1,FINSEQ_2,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,FUNCOP_1,FUNCT_2,RELSET_1,QC_LANG2,SUBSTUT1,FUNCT_4,FUNCT_7,ORDINAL1,XXREAL_2,CARD_1,CKB1,CKB2,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47;
schemes CQC_LANG,XBOOLE_0,SUBSTUT1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,MEMBERED,QC_LANG1,CQC_LANG,SUBSTUT1,XXREAL_0,XXREAL_2,CARD_1,RELSET_1,CKB18,CKB38;
constructors DOMAIN_1,FUNCT_4,XXREAL_0,SEQ_4,QC_LANG3,VALUAT_1,SUBSTUT1,RELSET_1,CKB5,CKB6,CKB7,CKB9,CKB14,CKB25,CKB29,CKB37,CKB39,CKB40,CKB41,CKB43,CKB44;
requirements NUMERALS,SUBSET,BOOLE;
begin
reserve x for bound_QC-variable;
reserve S for (Element of ( CQC-Sub-WFF ));
reserve xSQ for (second_Q_comp of [ S,x ]);
theorem
Th32: ([ S,x ] is  quantifiable implies ( CQCQuant (( CQCSub_All ([ S,x ],xSQ) ),( CQC_Sub S )) ) = ( All (( S_Bound ( @ ( CQCSub_All ([ S,x ],xSQ) ) ) ),( CQC_Sub S )) ))
proof
set S1 = ( CQCSub_All ([ S,x ],xSQ) );
set p = ( CQC_Sub ( CQCSub_the_scope_of S1 ) );
A1: ( Quant (S1,p) ) = ( All (( S_Bound ( @ S1 ) ),p) ) by SUBSTUT1:def 37;
assume A2: [ S,x ] is  quantifiable;
then ( CQCSub_All ([ S,x ],xSQ) ) = ( Sub_All ([ S,x ],xSQ) ) by CKB41:def 1;
then ( CQCSub_All ([ S,x ],xSQ) ) is  Sub_universal by A2,SUBSTUT1:14;
then A3: ( CQCQuant (S1,p) ) = ( Quant (S1,p) ) by CKB44:def 1;
( CQCQuant (S1,( CQC_Sub S )) ) = ( CQCQuant (S1,p) ) by A2,CKB47:1;
hence thesis by A2,A3,A1,CKB47:1;
end;
