environ
vocabularies NUMBERS,NAT_1,REAL_1,SUBSET_1,VECTSP_1,ARYTM_3,RELAT_1,FINSEQ_1,ARYTM_1,EUCLID,FINSEQ_2,CARD_1,XBOOLE_0,ALGSTR_0,STRUCT_0,XXREAL_0,FUNCT_1,MATRIX_1,TREES_1,INCSP_1,FVSUM_1,CARD_3,RVSUM_1,XREAL_0,ORDINAL1,QC_LANG1,GROUP_1,SUPINF_2,MATRIXR1;
notations TARSKI,SUBSET_1,XXREAL_0,XREAL_0,REAL_1,NAT_1,FUNCT_1,MATRIX_1,NUMBERS,ORDINAL1,VECTSP_1,RELSET_1,FINSEQ_1,SEQ_1,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,MATRIX_4,MATRIX_3,RVSUM_1,FINSEQ_2,FVSUM_1,EUCLID,CKB23,CKB24,CKB27,CKB30,CKB31,CKB32,CKB33,CKB42,CKB53,CKB57,CKB62,CKB63;
definitions VECTSP_1,MATRIX_1,STRUCT_0,VALUED_1,CKB23,CKB24,CKB27,CKB30,CKB31,CKB32,CKB33,CKB42,CKB53,CKB57,CKB62,CKB63;
theorems MATRIX_3,MATRIX_1,MATRIX_4,MATRIX_5,XREAL_0,FUNCT_1,FINSEQ_1,MATRIX_2,FINSEQ_2,TARSKI,FVSUM_1,ZFMISC_1,RVSUM_1,EUCLID,FINSEQ_3,XXREAL_0,ORDINAL1,VALUED_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75;
schemes FINSEQ_1,MATRIX_1;
registrations RELSET_1,NUMBERS,XXREAL_0,NAT_1,MEMBERED,FINSEQ_1,FINSEQ_2,STRUCT_0,VECTSP_1,XBOOLE_0,VALUED_0;
constructors XXREAL_0,REAL_1,BINOP_2,FVSUM_1,GOBOARD1,MATRIX_3,MATRIX_4,SEQ_1,RVSUM_1,RELSET_1,CKB23,CKB24,CKB27,CKB30,CKB31,CKB32,CKB33,CKB42,CKB53,CKB57,CKB62,CKB63;
requirements NUMERALS,BOOLE,SUBSET,ARITHM,REAL;
begin
theorem
Th64: (for x being (FinSequence of ( REAL )) holds (for A,B being (Matrix of ( REAL )) holds ((((( len A ) = ( len B ) & ( width A ) = ( width B )) & ( len A ) = ( len x )) & ( len x ) > ( 0 )) implies ( x * ( A + B ) ) = ( ( x * A ) + ( x * B ) ))))
proof
let x being (FinSequence of ( REAL ));
let A being (Matrix of ( REAL )),B being (Matrix of ( REAL ));
assume that
A1: (( len A ) = ( len B ) & ( width A ) = ( width B ))
and
A2: ( len A ) = ( len x )
and
A3: ( len x ) > ( 0 );
A4: ( width ( LineVec2Mx x ) ) = ( len x ) by CKB57:def 1;
then A5: ( len ( ( LineVec2Mx x ) * A ) ) = ( len ( LineVec2Mx x ) ) by A2,MATRIX_3:def 4
.= 1 by CKB57:def 1;
A6: ( width ( ( LineVec2Mx x ) * A ) ) = ( width A ) by A2,A4,MATRIX_3:def 4
.= ( width ( ( LineVec2Mx x ) * B ) ) by A1,A2,A4,MATRIX_3:def 4;
( len ( LineVec2Mx x ) ) = 1 by CKB57:def 1;
hence ( x * ( A + B ) ) = ( Line (( ( ( LineVec2Mx x ) * A ) + ( ( LineVec2Mx x ) * B ) ),1) ) by A1,A2,A3,A4,MATRIX_4:62
.= ( ( x * A ) + ( x * B ) ) by A6,A5,CKB67:1;
end;
