environ
vocabularies XBOOLE_0,RELAT_1,SUBSET_1,ZFMISC_1,MCART_1,ARYTM_3,TARSKI,PETRI,STRUCT_0,PNPROC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,MCART_1,DOMAIN_1,PARTIT_2,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
definitions TARSKI,XBOOLE_0,STRUCT_0,PARTIT_2,CKB3,CKB4,CKB5,CKB21;
theorems SUBSET_1,MCART_1,TARSKI,ZFMISC_1,RELAT_1,XBOOLE_0,CKB3,CKB4,CKB5,CKB21;
schemes DOMAIN_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,PARTIT_2,RELAT_1,CKB2,CKB6,CKB7,CKB8,CKB9;
constructors RELSET_1,DOMAIN_1,STRUCT_0,PARTIT_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB17,CKB18,CKB19,CKB20,CKB21;
requirements SUBSET,BOOLE;
begin
reserve PTN for Petri_net;
reserve S0 for (Subset of (the carrier of PTN));
definition
let PTN;
let S0;
func S0 *' -> (Subset of (the carrier' of PTN))
equals
{ t where t is (transition of PTN): (ex f being (S-T_arc of PTN) st (ex s being (place of PTN) st (s in S0 & f = [ s,t ]))) };
coherence
proof
defpred P[ set ]
 means
(ex f being (S-T_arc of PTN) st (ex s being (place of PTN) st (s in S0 & f = [ s,$1 ])));
{ t where t is (transition of PTN): P[ t ] } is (Subset of (the carrier' of PTN)) from DOMAIN_1:sch 7;
hence thesis;
end;
correctness;
end;
