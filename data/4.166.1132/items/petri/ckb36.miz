environ
vocabularies XBOOLE_0,RELAT_1,SUBSET_1,ZFMISC_1,MCART_1,ARYTM_3,TARSKI,PETRI,STRUCT_0,PNPROC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,MCART_1,DOMAIN_1,PARTIT_2,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB27,CKB28;
definitions TARSKI,XBOOLE_0,STRUCT_0,PARTIT_2,CKB3,CKB4,CKB5,CKB21,CKB22,CKB27,CKB28;
theorems SUBSET_1,MCART_1,TARSKI,ZFMISC_1,RELAT_1,XBOOLE_0,CKB3,CKB4,CKB5,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35;
schemes DOMAIN_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,PARTIT_2,RELAT_1,CKB2,CKB6,CKB7,CKB8,CKB9;
constructors RELSET_1,DOMAIN_1,STRUCT_0,PARTIT_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB27,CKB28;
requirements SUBSET,BOOLE;
begin
reserve PTN for Petri_net;
theorem
( ( {} (the carrier' of PTN) ) *' ) = ( {} )
proof
set x = the (Element of ( ( {} (the carrier' of PTN) ) *' ));
assume (not thesis);
then x in ( ( {} (the carrier' of PTN) ) *' );
then (ex s being (place of PTN) st (x = s & (ex f being (T-S_arc of PTN) st (ex t being (transition of PTN) st (t in ( {} (the carrier' of PTN) ) & f = [ t,s ])))));
hence contradiction;
end;
