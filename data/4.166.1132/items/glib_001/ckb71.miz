environ
vocabularies NUMBERS,ABIAN,SUBSET_1,ARYTM_3,XXREAL_0,ARYTM_1,CARD_1,TARSKI,FINSEQ_1,RELAT_1,FUNCT_1,NAT_1,XBOOLE_0,GLIB_000,FINSEQ_5,GRAPH_2,INT_1,FINSET_1,RCOMP_1,WAYBEL_0,ZFMISC_1,MSAFREE2,ORDINAL4,GRAPH_1,FUNCT_4,FUNCOP_1,MCART_1,GLIB_001;
notations TARSKI,XBOOLE_0,CARD_1,NUMBERS,SUBSET_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FINSEQ_1,GRAPH_2,FINSEQ_5,RELSET_1,MCART_1,FINSET_1,NAT_1,NAT_D,FUNCOP_1,FUNCT_4,GLIB_000,ABIAN,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
definitions FUNCOP_1,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39;
theorems CARD_1,CARD_2,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,FINSEQ_6,FINSET_1,FUNCT_1,FUNCT_4,GLIB_000,GRAPH_2,GRAPH_5,INT_1,JORDAN12,MCART_1,NAT_1,NAT_2,PEPIN,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XREAL_1,PRE_CIRC,XXREAL_0,ABIAN,ORDINAL1,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70;
schemes FINSEQ_1,FUNCT_1,NAT_1,RECDEF_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GRAPH_3,CARD_1,SUBSET_1,CKB10;
constructors DOMAIN_1,FUNCT_4,NAT_D,RECDEF_1,FINSEQ_5,GLIB_000,ABIAN,GRAPH_2,XXREAL_2,RELSET_1,FINSEQ_2,RAT_1,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Lm32: (for G being _Graph holds (for W being (Walk of G) holds (for m being (Element of ( NAT )) holds (( W .first() ) = ( W . m ) implies ( W .remove (1,m) ) = ( W .cut (m,( len W )) )))))
proof
let G being _Graph;
let W being (Walk of G);
let m being (Element of ( NAT ));
assume A1: ( W .first() ) = ( W . m );
now
per cases ;
suppose A2: (m is  odd & m <= ( len W ));

then 1 <= m by ABIAN:12;
then A3: ( W .remove (1,m) ) = ( ( W .cut (1,1) ) .append ( W .cut (m,( len W )) ) ) by A1,A2,CKB19:def 1,JORDAN12:2;
A4: 1 <= ( len W ) by ABIAN:12;
then A5: ( ( W .cut (1,1) ) .last() ) = ( W . m ) by A1,CKB55:1,JORDAN12:2
.= ( ( W .cut (m,( len W )) ) .first() ) by A2,CKB55:1;
A6:now
let n being Nat;
assume that
A7: 1 <= n
and
A8: n <= ( len ( W .remove (1,m) ) );
A9: n in ( dom ( W .remove (1,m) ) ) by A7,A8,FINSEQ_3:25;
now
per cases  by A3,A9,CKB53:1;
suppose A10: n in ( dom ( W .cut (1,1) ) );

then n <= ( len ( W .cut (1,1) ) ) by FINSEQ_3:25;
then A11: n <= 1 by A4,CKB61:1,JORDAN12:2;
A12: 1 <= n by A10,FINSEQ_3:25;
then A13: n = 1 by A11,XXREAL_0:1;
( ( W .remove (1,m) ) . n ) = ( ( W .cut (1,1) ) . n ) by A3,A10,CKB51:1
.= ( <* ( W .vertexAt 1 ) *> . 1 ) by A4,A13,CKB58:1,JORDAN12:2
.= ( W .vertexAt 1 ) by FINSEQ_1:def 8
.= ( W . m ) by A1,A4,CKB15:def 1,JORDAN12:2
.= ( ( W .cut (m,( len W )) ) .first() ) by A2,CKB55:1
.= ( ( W .cut (m,( len W )) ) . 1 );
hence ( ( W .remove (1,m) ) . n ) = ( ( W .cut (m,( len W )) ) . n ) by A12,A11,XXREAL_0:1;
end;
suppose (ex k being (Element of ( NAT )) st (k < ( len ( W .cut (m,( len W )) ) ) & n = ( ( len ( W .cut (1,1) ) ) + k )));

then consider k being (Element of ( NAT )) such that A14: k < ( len ( W .cut (m,( len W )) ) ) and A15: n = ( ( len ( W .cut (1,1) ) ) + k );
n = ( k + 1 ) by A14,A15,CKB61:1,ABIAN:12,JORDAN12:2;
hence ( ( W .remove (1,m) ) . n ) = ( ( W .cut (m,( len W )) ) . n ) by A3,A5,A14,A15,CKB52:1;
end;
end;
hence ( ( W .remove (1,m) ) . n ) = ( ( W .cut (m,( len W )) ) . n );
end;
( ( len ( W .remove (1,m) ) ) + 1 ) = ( ( len ( W .cut (1,1) ) ) + ( len ( W .cut (m,( len W )) ) ) ) by A3,A5,CKB48:1;
then ( ( len ( W .remove (1,m) ) ) + 1 ) = ( ( len ( W .cut (m,( len W )) ) ) + 1 ) by CKB61:1,ABIAN:12,JORDAN12:2;
hence thesis by A6,FINSEQ_1:14;
end;
suppose A16: (not (m is  odd & m <= ( len W )));

then ( W .cut (m,( len W )) ) = W by CKB18:def 1;
hence thesis by A16,CKB19:def 1;
end;
end;
hence thesis;
end;
