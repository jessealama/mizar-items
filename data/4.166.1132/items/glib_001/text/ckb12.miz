environ
vocabularies NUMBERS,ABIAN,SUBSET_1,ARYTM_3,XXREAL_0,ARYTM_1,CARD_1,TARSKI,FINSEQ_1,RELAT_1,FUNCT_1,NAT_1,XBOOLE_0,GLIB_000,FINSEQ_5,GRAPH_2,INT_1,FINSET_1,RCOMP_1,WAYBEL_0,ZFMISC_1,MSAFREE2,ORDINAL4,GRAPH_1,FUNCT_4,FUNCOP_1,MCART_1,GLIB_001;
notations TARSKI,XBOOLE_0,CARD_1,NUMBERS,SUBSET_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FINSEQ_1,GRAPH_2,FINSEQ_5,RELSET_1,MCART_1,FINSET_1,NAT_1,NAT_D,FUNCOP_1,FUNCT_4,GLIB_000,ABIAN,CKB7,CKB8,CKB9,CKB11;
definitions FUNCOP_1,CKB7,CKB8,CKB9,CKB11;
theorems CARD_1,CARD_2,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,FINSEQ_6,FINSET_1,FUNCT_1,FUNCT_4,GLIB_000,GRAPH_2,GRAPH_5,INT_1,JORDAN12,MCART_1,NAT_1,NAT_2,PEPIN,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XREAL_1,PRE_CIRC,XXREAL_0,ABIAN,ORDINAL1,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11;
schemes FINSEQ_1,FUNCT_1,NAT_1,RECDEF_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GRAPH_3,CARD_1,SUBSET_1,CKB10;
constructors DOMAIN_1,FUNCT_4,NAT_D,RECDEF_1,FINSEQ_5,GLIB_000,ABIAN,GRAPH_2,XXREAL_2,RELSET_1,FINSEQ_2,RAT_1,CKB7,CKB8,CKB9,CKB11;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
definition
let G being _Graph;
let x being set;
let y being set;
let e being set;
func G .walkOf (x,e,y) -> (Walk of G) equals 
:Def5: <* x,e,y *> if e Joins x,y,G otherwise ( G .walkOf ( choose ( the_Vertices_of G ) ) );
coherence
proof
set VE = ( ( the_Vertices_of G ) \/ ( the_Edges_of G ) );
hereby
set W = <* x,e,y *>;
assume A1: e Joins x,y,G;
then y is (Vertex of G) by GLIB_000:13;
then A2: y is (Element of VE) by XBOOLE_0:def 3;
e in ( the_Edges_of G ) by A1,GLIB_000:def 13;
then A3: e is (Element of VE) by XBOOLE_0:def 3;
x is (Vertex of G) by A1,GLIB_000:13;
then x is (Element of VE) by XBOOLE_0:def 3;
then reconsider W as (FinSequence of VE) by A2,A3,FINSEQ_2:14;
A4: ( W . 1 ) = x by FINSEQ_1:45;
A5: ( W . 2 ) = e by FINSEQ_1:45;
now
reconsider aa1 = 1 as  odd (Element of ( NAT )) by JORDAN12:2;
( aa1 + 2 ) is  odd;
hence ( len W ) is  odd by FINSEQ_1:45;
thus ( W . 1 ) in ( the_Vertices_of G ) by A1,A4,GLIB_000:13;
let n being  odd (Element of ( NAT ));
assume n < ( len W );
then n < ( 2 + 1 ) by FINSEQ_1:45;
then n <= ( 2 * 1 ) by NAT_1:13;
then ((n = ( 2 * ( 0 ) ) or n = 1) or n = ( 2 * 1 )) by NAT_1:26;
hence ( W . ( n + 1 ) ) Joins ( W . n ),( W . ( n + 2 ) ),G by A1,A4,A5,FINSEQ_1:45;
end;
hence <* x,e,y *> is (Walk of G) by CKB9:def 1;
end;
thus thesis;
end;
consistency;
end;
