environ
vocabularies NUMBERS,ABIAN,SUBSET_1,ARYTM_3,XXREAL_0,ARYTM_1,CARD_1,TARSKI,FINSEQ_1,RELAT_1,FUNCT_1,NAT_1,XBOOLE_0,GLIB_000,FINSEQ_5,GRAPH_2,INT_1,FINSET_1,RCOMP_1,WAYBEL_0,ZFMISC_1,MSAFREE2,ORDINAL4,GRAPH_1,FUNCT_4,FUNCOP_1,MCART_1,GLIB_001;
notations TARSKI,XBOOLE_0,CARD_1,NUMBERS,SUBSET_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FINSEQ_1,GRAPH_2,FINSEQ_5,RELSET_1,MCART_1,FINSET_1,NAT_1,NAT_D,FUNCOP_1,FUNCT_4,GLIB_000,ABIAN,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
definitions FUNCOP_1,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
theorems CARD_1,CARD_2,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,FINSEQ_6,FINSET_1,FUNCT_1,FUNCT_4,GLIB_000,GRAPH_2,GRAPH_5,INT_1,JORDAN12,MCART_1,NAT_1,NAT_2,PEPIN,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XREAL_1,PRE_CIRC,XXREAL_0,ABIAN,ORDINAL1,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
schemes FINSEQ_1,FUNCT_1,NAT_1,RECDEF_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GRAPH_3,CARD_1,SUBSET_1,CKB10;
constructors DOMAIN_1,FUNCT_4,NAT_D,RECDEF_1,FINSEQ_5,GLIB_000,ABIAN,GRAPH_2,XXREAL_2,RELSET_1,FINSEQ_2,RAT_1,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
definition
let G being _Graph;
let W being (Walk of G);
func W .edgeSeq() -> (EdgeSeq of G) means 
:Def15: (( len W ) = ( ( 2 * ( len it ) ) + 1 ) & (for n being Nat holds ((1 <= n & n <= ( len it )) implies ( it . n ) = ( W . ( 2 * n ) ))));
existence
proof
deffunc F(Nat) = ( W . ( 2 * $1 ) );
reconsider lenWaa1 = ( ( len W ) - 1 ) as  even (Element of ( NAT )) by ABIAN:12,INT_1:5;
set lenIT = ( lenWaa1 div 2 );
reconsider lenIT as (Element of ( NAT ));
consider IT being FinSequence such that A1: (( len IT ) = lenIT & (for n being Nat holds (n in ( dom IT ) implies ( IT . n ) = F(n)))) from FINSEQ_1:sch 2;
now
let y being set;
A2: 2 divides lenWaa1 by PEPIN:22;
assume y in ( rng IT );
then consider x being set such that A3: x in ( dom IT ) and A4: y = ( IT . x ) by FUNCT_1:def 3;
A5: x in ( Seg lenIT ) by A1,A3,FINSEQ_1:def 3;
reconsider x as (Element of ( NAT )) by A3;
reconsider 2x = ( 2 * x ) as  even (Element of ( NAT ));
x <= lenIT by A5,FINSEQ_1:1;
then ( x * 2 ) <= ( lenIT * 2 ) by XREAL_1:64;
then 2x <= lenWaa1 by A2,NAT_D:3;
then A6: ( 2x + 1 ) <= ( lenWaa1 + 1 ) by XREAL_1:7;
1 <= x by A5,FINSEQ_1:1;
then ( 1 * 2 ) <= ( 2 * x ) by XREAL_1:64;
then reconsider 2xaa1 = ( 2x - 1 ) as  odd (Element of ( NAT )) by INT_1:5,XXREAL_0:2;
2x <= ( 2x + 1 ) by NAT_1:11;
then 2x <= ( len W ) by A6,XXREAL_0:2;
then 2xaa1 < ( len W ) by XREAL_1:147;
then A7: ( W . ( 2xaa1 + 1 ) ) Joins ( W . 2xaa1 ),( W . ( 2xaa1 + 2 ) ),G by CKB9:def 1;
y = ( W . ( 2 * x ) ) by A1,A3,A4;
hence y in ( the_Edges_of G ) by A7,GLIB_000:def 13;
end;
then ( rng IT ) c= ( the_Edges_of G ) by TARSKI:def 3;
then reconsider IT as (FinSequence of ( the_Edges_of G )) by FINSEQ_1:def 4;
2 divides lenWaa1 by PEPIN:22;
then A8: lenWaa1 = ( 2 * lenIT ) by NAT_D:3;
then A9: ( len W ) = ( ( 2 * lenIT ) + 1 );
now
set vs = ( W .vertexSeq() );
take vs;
A10: ( ( ( 2 * ( len IT ) ) + 1 ) + 1 ) = ( 2 * ( len vs ) ) by A8,A1,CKB21:def 1;
then A11: ( 2 * ( ( len IT ) + 1 ) ) = ( 2 * ( len vs ) );
thus ( len vs ) = ( ( len IT ) + 1 ) by A10;
let n being (Element of ( NAT ));
set v1 = ( vs . n );
set v2 = ( vs . ( n + 1 ) );
assume that
A12: 1 <= n
and
A13: n <= ( len IT );
set 2n = ( 2 * n );
reconsider 2n as  even (Element of ( NAT ));
set 2naa1 = ( 2n - 1 );
1 <= ( n + n ) by A12,NAT_1:12;
then reconsider 2naa1 as  odd (Element of ( NAT )) by INT_1:5;
A14: 1 <= ( n + 1 ) by NAT_1:12;
( n * 2 ) <= ( ( len IT ) * 2 ) by A13,XREAL_1:64;
then ( n * 2 ) <= ( len W ) by A9,A1,NAT_1:12;
then A15: 2naa1 < ( ( len W ) - ( 0 ) ) by XREAL_1:15;
( n + 1 ) <= ( len vs ) by A11,A13,XREAL_1:7;
then v2 = ( W . ( ( 2 * ( n + 1 ) ) - 1 ) ) by A14,CKB21:def 1;
then A16: v2 = ( W . ( 2naa1 + 2 ) );
n in ( dom IT ) by A12,A13,FINSEQ_3:25;
then A17: ( IT . n ) = ( W . ( 2naa1 + 1 ) ) by A1;
n <= ( len vs ) by A11,A13,NAT_1:12;
then v1 = ( W . ( ( 2 * n ) - 1 ) ) by A12,CKB21:def 1;
hence ( IT . n ) Joins ( vs . n ),( vs . ( n + 1 ) ),G by A17,A16,A15,CKB9:def 1;
end;
then reconsider IT as (EdgeSeq of G) by CKB8:def 1;
take IT;
thus ( len W ) = ( ( 2 * ( len IT ) ) + 1 ) by A8,A1;
let n being Nat;
assume that
A18: 1 <= n
and
A19: n <= ( len IT );
n in ( dom IT ) by A18,A19,FINSEQ_3:25;
hence thesis by A1;
end;
uniqueness
proof
let IT1 being (EdgeSeq of G);
let IT2 being (EdgeSeq of G);
assume that
A20: ( len W ) = ( ( 2 * ( len IT1 ) ) + 1 )
and
A21: (for n being Nat holds ((1 <= n & n <= ( len IT1 )) implies ( IT1 . n ) = ( W . ( 2 * n ) )))
and
A22: ( len W ) = ( ( 2 * ( len IT2 ) ) + 1 )
and
A23: (for n being Nat holds ((1 <= n & n <= ( len IT2 )) implies ( IT2 . n ) = ( W . ( 2 * n ) )));
A24:now
let n being Nat;
assume A25: n in ( dom IT1 );
then A26: 1 <= n by FINSEQ_3:25;
A27: n <= ( len IT2 ) by A20,A22,A25,FINSEQ_3:25;
n <= ( len IT1 ) by A25,FINSEQ_3:25;
hence ( IT1 . n ) = ( W . ( 2 * n ) ) by A21,A26
.= ( IT2 . n ) by A23,A26,A27;
end;
( dom IT1 ) = ( Seg ( len IT2 ) ) by A20,A22,FINSEQ_1:def 3
.= ( dom IT2 ) by FINSEQ_1:def 3;
hence IT1 = IT2 by A24,FINSEQ_1:13;
end;
end;
