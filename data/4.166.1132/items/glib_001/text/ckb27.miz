environ
vocabularies NUMBERS,ABIAN,SUBSET_1,ARYTM_3,XXREAL_0,ARYTM_1,CARD_1,TARSKI,FINSEQ_1,RELAT_1,FUNCT_1,NAT_1,XBOOLE_0,GLIB_000,FINSEQ_5,GRAPH_2,INT_1,FINSET_1,RCOMP_1,WAYBEL_0,ZFMISC_1,MSAFREE2,ORDINAL4,GRAPH_1,FUNCT_4,FUNCOP_1,MCART_1,GLIB_001;
notations TARSKI,XBOOLE_0,CARD_1,NUMBERS,SUBSET_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FINSEQ_1,GRAPH_2,FINSEQ_5,RELSET_1,MCART_1,FINSET_1,NAT_1,NAT_D,FUNCOP_1,FUNCT_4,GLIB_000,ABIAN,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
definitions FUNCOP_1,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
theorems CARD_1,CARD_2,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,FINSEQ_6,FINSET_1,FUNCT_1,FUNCT_4,GLIB_000,GRAPH_2,GRAPH_5,INT_1,JORDAN12,MCART_1,NAT_1,NAT_2,PEPIN,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XREAL_1,PRE_CIRC,XXREAL_0,ABIAN,ORDINAL1,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
schemes FINSEQ_1,FUNCT_1,NAT_1,RECDEF_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GRAPH_3,CARD_1,SUBSET_1,CKB10;
constructors DOMAIN_1,FUNCT_4,NAT_D,RECDEF_1,FINSEQ_5,GLIB_000,ABIAN,GRAPH_2,XXREAL_2,RELSET_1,FINSEQ_2,RAT_1,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
definition
let G being _Graph;
let W being (Walk of G);
let n being (Element of ( NAT ));
func W .find n ->  odd (Element of ( NAT )) means 
:Def20: ((it <= ( len W ) & ( W . it ) = ( W . n )) & (for k being  odd Nat holds ((k <= ( len W ) & ( W . k ) = ( W . n )) implies it <= k))) if (n is  odd & n <= ( len W )) otherwise it = ( len W );
existence
proof
defpred P[ Nat ]
 means
(($1 is  odd & $1 <= ( len W )) & ( W . $1 ) = ( W . n ));
hereby
assume that
A1: n is  odd
and
A2: n <= ( len W );
A3: (ex n being Nat st P[ n ]) by A1,A2;
consider IT being Nat such that A4: (P[ IT ] & (for k being Nat holds (P[ k ] implies IT <= k))) from NAT_1:sch 5(A3);
reconsider IT as  odd (Element of ( NAT )) by A4,ORDINAL1:def 12;
take IT;
thus (IT <= ( len W ) & ( W . IT ) = ( W . n )) by A4;
let k being  odd Nat;
thus ((k <= ( len W ) & ( W . k ) = ( W . n )) implies IT <= k) by A4;
end;
thus thesis;
end;
uniqueness
proof
let IT1 being  odd (Element of ( NAT ));
let IT2 being  odd (Element of ( NAT ));
hereby
assume that
n is  odd
and
n <= ( len W );
assume that
A5: IT1 <= ( len W )
and
A6: ( W . IT1 ) = ( W . n )
and
A7: (for k being  odd Nat holds ((k <= ( len W ) & ( W . k ) = ( W . n )) implies IT1 <= k));
assume that
A8: IT2 <= ( len W )
and
A9: ( W . IT2 ) = ( W . n )
and
A10: (for k being  odd Nat holds ((k <= ( len W ) & ( W . k ) = ( W . n )) implies IT2 <= k));
A11: IT2 <= IT1 by A5,A6,A10;
IT1 <= IT2 by A7,A8,A9;
hence IT1 = IT2 by A11,XXREAL_0:1;
end;
thus thesis;
end;
consistency;
end;
