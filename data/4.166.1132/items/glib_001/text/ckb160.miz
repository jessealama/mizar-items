environ
vocabularies NUMBERS,ABIAN,SUBSET_1,ARYTM_3,XXREAL_0,ARYTM_1,CARD_1,TARSKI,FINSEQ_1,RELAT_1,FUNCT_1,NAT_1,XBOOLE_0,GLIB_000,FINSEQ_5,GRAPH_2,INT_1,FINSET_1,RCOMP_1,WAYBEL_0,ZFMISC_1,MSAFREE2,ORDINAL4,GRAPH_1,FUNCT_4,FUNCOP_1,MCART_1,GLIB_001;
notations TARSKI,XBOOLE_0,CARD_1,NUMBERS,SUBSET_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FINSEQ_1,GRAPH_2,FINSEQ_5,RELSET_1,MCART_1,FINSET_1,NAT_1,NAT_D,FUNCOP_1,FUNCT_4,GLIB_000,ABIAN,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB117,CKB118,CKB119,CKB120,CKB121,CKB142,CKB146,CKB148,CKB149,CKB151,CKB152,CKB153,CKB154,CKB155,CKB156,CKB157,CKB158,CKB159;
definitions FUNCOP_1,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB142,CKB154,CKB155,CKB156,CKB157,CKB158,CKB159;
theorems CARD_1,CARD_2,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,FINSEQ_6,FINSET_1,FUNCT_1,FUNCT_4,GLIB_000,GRAPH_2,GRAPH_5,INT_1,JORDAN12,MCART_1,NAT_1,NAT_2,PEPIN,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XREAL_1,PRE_CIRC,XXREAL_0,ABIAN,ORDINAL1,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106,CKB107,CKB108,CKB142,CKB143,CKB144,CKB145,CKB154,CKB155,CKB156,CKB157,CKB158,CKB159;
schemes FINSEQ_1,FUNCT_1,NAT_1,RECDEF_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GRAPH_3,CARD_1,SUBSET_1,CKB10,CKB109,CKB110,CKB111,CKB112,CKB113,CKB114,CKB115,CKB116,CKB122,CKB123,CKB124,CKB125,CKB126,CKB127,CKB128,CKB129,CKB130,CKB131,CKB132,CKB133,CKB134,CKB135,CKB136,CKB137,CKB138,CKB139,CKB140,CKB141,CKB147,CKB150;
constructors DOMAIN_1,FUNCT_4,NAT_D,RECDEF_1,FINSEQ_5,GLIB_000,ABIAN,GRAPH_2,XXREAL_2,RELSET_1,FINSEQ_2,RAT_1,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB142,CKB146,CKB154,CKB155,CKB156,CKB157,CKB158,CKB159;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
registration
let G being  finite _Graph;
cluster ( G .allTrails() ) ->  finite;
correctness
proof
set D = ( ( the_Vertices_of G ) \/ ( the_Edges_of G ) );
set X = { x where x is (Element of ( D * )): ( len x ) <= ( ( 2 * ( G .size() ) ) + 1 ) };
A1:now
let W being (Trail of G);
consider f being Function such that A2: (( dom f ) = ( W .edgeSeq() ) & (for x being set holds (x in ( W .edgeSeq() ) implies ( f . x ) = ( x `2 )))) from FUNCT_1:sch 3;
now
A3: ( W .edgeSeq() ) is  one-to-one by CKB34:def 1;
let x1 being set;
let x2 being set;
assume that
A4: x1 in ( dom f )
and
A5: x2 in ( dom f )
and
A6: ( f . x1 ) = ( f . x2 );
consider a1,b1 being set such that A7: x1 = [ a1,b1 ] by A2,A4,RELAT_1:def 1;
A8: a1 in ( dom ( W .edgeSeq() ) ) by A2,A4,A7,FUNCT_1:1;
A9: ( f . x2 ) = ( x2 `2 ) by A2,A5;
A10: ( ( W .edgeSeq() ) . a1 ) = b1 by A2,A4,A7,FUNCT_1:1;
consider a2,b2 being set such that A11: x2 = [ a2,b2 ] by A2,A5,RELAT_1:def 1;
A12: a2 in ( dom ( W .edgeSeq() ) ) by A2,A5,A11,FUNCT_1:1;
( f . x1 ) = ( x1 `2 ) by A2,A4;
then A13: b1 = ( f . x1 ) by A7,MCART_1:def 2
.= b2 by A6,A9,A11,MCART_1:def 2;
then ( ( W .edgeSeq() ) . a2 ) = b1 by A2,A5,A11,FUNCT_1:1;
hence x1 = x2 by A7,A11,A13,A3,A8,A10,A12,FUNCT_1:def 4;
end;
then A14: f is  one-to-one by FUNCT_1:def 4;
now
let y being set;
assume y in ( rng f );
then consider x being set such that A15: x in ( dom f ) and A16: ( f . x ) = y by FUNCT_1:def 3;
consider a,b being set such that A17: x = [ a,b ] by A2,A15,RELAT_1:def 1;
y = ( x `2 ) by A2,A15,A16;
then y = b by A17,MCART_1:def 2;
then y in ( rng ( W .edgeSeq() ) ) by A2,A15,A17,RELAT_1:def 5;
hence y in ( the_Edges_of G );
end;
then ( rng f ) c= ( the_Edges_of G ) by TARSKI:def 3;
then ( card ( W .edgeSeq() ) ) c= ( card ( the_Edges_of G ) ) by A2,A14,CARD_1:10;
then ( len ( W .edgeSeq() ) ) <= ( card ( the_Edges_of G ) ) by NAT_1:39;
then ( len ( W .edgeSeq() ) ) <= ( G .size() ) by GLIB_000:def 25;
then ( 2 * ( len ( W .edgeSeq() ) ) ) <= ( 2 * ( G .size() ) ) by XREAL_1:64;
then ( ( 2 * ( len ( W .edgeSeq() ) ) ) + 1 ) <= ( ( 2 * ( G .size() ) ) + 1 ) by XREAL_1:7;
hence ( len W ) <= ( ( 2 * ( G .size() ) ) + 1 ) by CKB22:def 1;
end;
now
let e being set;
assume e in ( G .allTrails() );
then consider W being (Trail of G) such that A18: W = e;
A19: ( len W ) <= ( ( 2 * ( G .size() ) ) + 1 ) by A1;
e is (Element of ( D * )) by A18,FINSEQ_1:def 11;
hence e in X by A18,A19;
end;
then ( G .allTrails() ) c= X by TARSKI:def 3;
hence thesis by FINSET_1:1,GRAPH_5:3;
end;
end;
