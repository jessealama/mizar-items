environ
vocabularies NUMBERS,ABIAN,SUBSET_1,ARYTM_3,XXREAL_0,ARYTM_1,CARD_1,TARSKI,FINSEQ_1,RELAT_1,FUNCT_1,NAT_1,XBOOLE_0,GLIB_000,FINSEQ_5,GRAPH_2,INT_1,FINSET_1,RCOMP_1,WAYBEL_0,ZFMISC_1,MSAFREE2,ORDINAL4,GRAPH_1,FUNCT_4,FUNCOP_1,MCART_1,GLIB_001;
notations TARSKI,XBOOLE_0,CARD_1,NUMBERS,SUBSET_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FINSEQ_1,GRAPH_2,FINSEQ_5,RELSET_1,MCART_1,FINSET_1,NAT_1,NAT_D,FUNCOP_1,FUNCT_4,GLIB_000,ABIAN;
definitions FUNCOP_1;
theorems CARD_1,CARD_2,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,FINSEQ_6,FINSET_1,FUNCT_1,FUNCT_4,GLIB_000,GRAPH_2,GRAPH_5,INT_1,JORDAN12,MCART_1,NAT_1,NAT_2,PEPIN,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XREAL_1,PRE_CIRC,XXREAL_0,ABIAN,ORDINAL1,NAT_D,CKB1;
schemes FINSEQ_1,FUNCT_1,NAT_1,RECDEF_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GRAPH_3,CARD_1,SUBSET_1;
constructors DOMAIN_1,FUNCT_4,NAT_D,RECDEF_1,FINSEQ_5,GLIB_000,ABIAN,GRAPH_2,XXREAL_2,RELSET_1,FINSEQ_2,RAT_1;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
theorem
Th2: (for X being set holds (for k being (Element of ( NAT )) holds (X c= ( Seg k ) implies (for m,n being (Element of ( NAT )) holds ((m in ( dom ( Sgm X ) ) & n = ( ( Sgm X ) . m )) implies m <= n)))))
proof
let X being set;
let k being (Element of ( NAT ));
defpred P[ Nat ]
 means
(($1 in ( dom ( Sgm X ) ) & (ex n being (Element of ( NAT )) st (n = ( ( Sgm X ) . $1 ) & $1 <= n))) or (not $1 in ( dom ( Sgm X ) )));
assume A1: X c= ( Seg k );
now
let x being non  empty Nat;
assume A2: P[ x ];
now
per cases  by A2;
suppose A3: (x in ( dom ( Sgm X ) ) & (ex n being (Element of ( NAT )) st (n = ( ( Sgm X ) . x ) & x <= n)));

A4: ( x + ( 0 ) ) < ( x + 1 ) by XREAL_1:8;
consider n being (Element of ( NAT )) such that A5: n = ( ( Sgm X ) . x ) and A6: x <= n by A3;
A7: 1 <= x by A3,FINSEQ_3:25;
now
set n1 = ( ( Sgm X ) . ( x + 1 ) );
assume A8: ( x + 1 ) in ( dom ( Sgm X ) );
then ( ( Sgm X ) . ( x + 1 ) ) in ( rng ( Sgm X ) ) by FUNCT_1:3;
then reconsider n1 as (Element of ( NAT ));
take n1;
thus n1 = ( ( Sgm X ) . ( x + 1 ) );
( x + 1 ) <= ( len ( Sgm X ) ) by A8,FINSEQ_3:25;
then n < n1 by A1,A7,A4,A5,FINSEQ_1:def 13;
then x < n1 by A6,XXREAL_0:2;
hence ( x + 1 ) <= n1 by NAT_1:13;
end;
hence P[ ( x + 1 ) ];
end;
suppose (not x in ( dom ( Sgm X ) ));

then (x < ( ( 0 ) + 1 ) or x > ( len ( Sgm X ) )) by FINSEQ_3:25;
then ( x + 1 ) > ( ( len ( Sgm X ) ) + ( 0 ) ) by NAT_1:13;
hence P[ ( x + 1 ) ] by FINSEQ_3:25;
end;
end;
hence P[ ( x + 1 ) ];
end;
then A9: (for x being non  empty Nat holds (P[ x ] implies P[ ( x + 1 ) ]));
let m being (Element of ( NAT ));
let n being (Element of ( NAT ));
assume that
A10: m in ( dom ( Sgm X ) )
and
A11: n = ( ( Sgm X ) . m );
reconsider m9 = m as non  empty (Element of ( NAT )) by A10,FINSEQ_3:25;
now
set n = ( ( Sgm X ) . 1 );
A12: m <= ( len ( Sgm X ) ) by A10,FINSEQ_3:25;
1 <= m by A10,FINSEQ_3:25;
then 1 <= ( len ( Sgm X ) ) by A12,XXREAL_0:2;
hence 1 in ( dom ( Sgm X ) ) by FINSEQ_3:25;
then A13: ( ( Sgm X ) . 1 ) in ( rng ( Sgm X ) ) by FUNCT_1:3;
then reconsider n as (Element of ( NAT ));
take n;
thus n = ( ( Sgm X ) . 1 );
( rng ( Sgm X ) ) = X by A1,FINSEQ_1:def 13;
hence 1 <= n by A1,A13,FINSEQ_1:1;
end;
then A14: P[ 1 ];
(for x being non  empty Nat holds P[ x ]) from NAT_1:sch 10(A14,A9);
then P[ m9 ];
hence thesis by A10,A11;
end;
