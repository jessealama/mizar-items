environ
vocabularies NUMBERS,ABIAN,SUBSET_1,ARYTM_3,XXREAL_0,ARYTM_1,CARD_1,TARSKI,FINSEQ_1,RELAT_1,FUNCT_1,NAT_1,XBOOLE_0,GLIB_000,FINSEQ_5,GRAPH_2,INT_1,FINSET_1,RCOMP_1,WAYBEL_0,ZFMISC_1,MSAFREE2,ORDINAL4,GRAPH_1,FUNCT_4,FUNCOP_1,MCART_1,GLIB_001;
notations TARSKI,XBOOLE_0,CARD_1,NUMBERS,SUBSET_1,XCMPLX_0,XXREAL_0,DOMAIN_1,RELAT_1,FUNCT_1,FINSEQ_1,GRAPH_2,FINSEQ_5,RELSET_1,MCART_1,FINSET_1,NAT_1,NAT_D,FUNCOP_1,FUNCT_4,GLIB_000,ABIAN,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
definitions FUNCOP_1,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
theorems CARD_1,CARD_2,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,FINSEQ_6,FINSET_1,FUNCT_1,FUNCT_4,GLIB_000,GRAPH_2,GRAPH_5,INT_1,JORDAN12,MCART_1,NAT_1,NAT_2,PEPIN,RELAT_1,TARSKI,XBOOLE_0,XBOOLE_1,XREAL_1,PRE_CIRC,XXREAL_0,ABIAN,ORDINAL1,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes FINSEQ_1,FUNCT_1,NAT_1,RECDEF_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,GLIB_000,ABIAN,GRAPH_2,GRAPH_3,CARD_1,SUBSET_1,CKB10;
constructors DOMAIN_1,FUNCT_4,NAT_D,RECDEF_1,FINSEQ_5,GLIB_000,ABIAN,GRAPH_2,XXREAL_2,RELSET_1,FINSEQ_2,RAT_1,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
definition
let G being _Graph;
let W being (Walk of G);
let m being Nat;
let n being Nat;
func W .cut (m,n) -> (Walk of G)
equals
:Def11: ( (m,n) -cut W ) if (((m is  odd & n is  odd) & m <= n) & n <= ( len W )) otherwise W;
correctness
proof
hereby
set W2 = ( (m,n) -cut W );
set VG = ( the_Vertices_of G );
assume that
A1: m is  odd
and
A2: n is  odd
and
A3: m <= n
and
A4: n <= ( len W );
reconsider m4 = m,n4 = n as  odd Nat by A1,A2;
A5: 1 <= m by A1,ABIAN:12;
then ( ( ( len W2 ) + m4 ) - m4 ) = ( ( n4 + 1 ) - m4 ) by A3,A4,GRAPH_2:def 1;
then reconsider lenW2 = ( len W2 ) as  odd (Element of ( NAT ));
now
reconsider lenW2aa1 = ( lenW2 - 1 ) as (Element of ( NAT )) by ABIAN:12,INT_1:5;
lenW2 is  odd;
hence ( len W2 ) is  odd;
( 0 ) < ( lenW2aa1 + 1 );
then A6: ( W2 . ( ( 0 ) + 1 ) ) = ( W . ( m + ( 0 ) ) ) by A3,A4,A5,GRAPH_2:def 1;
m <= ( len W ) by A3,A4,XXREAL_0:2;
then ( W . m ) = ( W .vertexAt m ) by A1,CKB15:def 1;
hence ( W2 . 1 ) in VG by A6;
let i being  odd (Element of ( NAT ));
reconsider x = ( ( m4 + i ) - 1 ) as  odd (Element of ( NAT )) by A5,INT_1:5,NAT_1:12;
reconsider iaa1 = ( i - 1 ) as  even (Element of ( NAT )) by ABIAN:12,INT_1:5;
assume A7: i < ( len W2 );
then ( i + 1 ) <= lenW2 by NAT_1:13;
then ( i + 1 ) < ( len W2 ) by XXREAL_0:1;
then A8: ( W2 . ( ( i + 1 ) + 1 ) ) = ( W . ( m + ( i + 1 ) ) ) by A3,A4,A5,GRAPH_2:def 1;
( i + m ) < ( ( len W2 ) + m ) by A7,XREAL_1:8;
then ( i + m ) < ( n + 1 ) by A3,A4,A5,GRAPH_2:def 1;
then ( i + m4 ) <= n4 by NAT_1:13;
then ( m4 + i ) < n4 by XXREAL_0:1;
then ( m + i ) < ( len W ) by A4,XXREAL_0:2;
then ( ( m + i ) - 1 ) < ( ( len W ) - ( 0 ) ) by XREAL_1:14;
then A9: ( W . ( x + 1 ) ) Joins ( W . x ),( W . ( x + 2 ) ),G by CKB9:def 1;
iaa1 < ( ( len W2 ) - ( 0 ) ) by A7,XREAL_1:14;
then ( W2 . ( iaa1 + 1 ) ) = ( W . ( m + iaa1 ) ) by A3,A4,A5,GRAPH_2:def 1;
hence ( W2 . ( i + 1 ) ) Joins ( W2 . i ),( W2 . ( i + 2 ) ),G by A3,A4,A5,A7,A8,A9,GRAPH_2:def 1;
end;
hence ( (m,n) -cut W ) is (Walk of G) by CKB9:def 1;
end;
thus thesis;
end;
end;
