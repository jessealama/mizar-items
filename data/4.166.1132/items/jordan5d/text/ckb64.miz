environ
vocabularies NUMBERS,PRE_TOPC,EUCLID,REAL_1,FUNCT_1,GOBOARD5,FINSEQ_1,XBOOLE_0,SUBSET_1,XXREAL_0,PARTFUN1,RLTOPSP1,ARYTM_1,ARYTM_3,INT_1,RELAT_1,JORDAN4,GOBOARD2,TREES_1,MCART_1,GOBOARD1,MATRIX_1,NAT_1,ZFMISC_1,PSCOMP_1,TOPREAL1,STRUCT_0,TARSKI,SEQ_4,ORDINAL2,XREAL_0,ORDINAL1,FINSET_1,SPPOL_1,XXREAL_2,CARD_1,JORDAN5D;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XREAL_0,MCART_1,REAL_1,NAT_1,NAT_D,RELAT_1,FINSEQ_1,FUNCT_1,PARTFUN1,FINSET_1,MATRIX_1,XXREAL_2,STRUCT_0,TOPREAL1,SPPOL_1,GOBOARD1,GOBOARD2,GOBOARD5,PRE_TOPC,RLTOPSP1,EUCLID,JORDAN4,PSCOMP_1,XXREAL_0,SEQ_4,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61;
definitions TARSKI,XBOOLE_0,PSCOMP_1,STRUCT_0,XXREAL_2,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61;
theorems EUCLID,FINSEQ_3,FINSEQ_6,FUNCT_1,FUNCT_2,GOBOARD1,GOBOARD2,GOBOARD5,GOBOARD7,NAT_1,PRE_TOPC,SEQ_4,SPPOL_1,SPPOL_2,TOPREAL1,MATRIX_1,FINSEQ_1,ZFMISC_1,JORDAN4,PSCOMP_1,SPRECT_2,FINSEQ_2,XBOOLE_0,XBOOLE_1,ORDINAL1,XREAL_1,XXREAL_0,PARTFUN1,XXREAL_2,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63;
schemes DOMAIN_1;
registrations ORDINAL1,RELSET_1,FINSET_1,NUMBERS,XREAL_0,MEMBERED,FINSEQ_1,STRUCT_0,EUCLID,GOBOARD2,GOBOARD5,SPRECT_1,VALUED_0,XXREAL_2,FUNCT_1,SEQ_4;
constructors PARTFUN1,XXREAL_0,REAL_1,NAT_1,NAT_D,REALSET1,BINARITH,COMPTS_1,GOBOARD2,SPPOL_1,PSCOMP_1,JORDAN4,SEQ_1,XXREAL_2,GOBOARD1,SEQ_4,RELSET_1,RVSUM_1,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve h for non  constant  standard special_circular_sequence;
reserve i1 for (Element of ( NAT ));
theorem
Lm10: (for i1,i2 being (Element of ( NAT )) holds (((((1 <= i1 & ( i1 + 1 ) <= ( len h )) & 1 <= i2) & ( i2 + 1 ) <= ( len h )) & ( h . i1 ) = ( h . i2 )) implies i1 = i2))
proof
let i1 being (Element of ( NAT ));
let i2 being (Element of ( NAT ));
assume that
A1: 1 <= i1
and
A2: ( i1 + 1 ) <= ( len h );
A3: i1 < ( len h ) by A2,NAT_1:13;
assume that
A4: 1 <= i2
and
A5: ( i2 + 1 ) <= ( len h )
and
A6: ( h . i1 ) = ( h . i2 );
A7: i2 < ( len h ) by A5,NAT_1:13;
then A8: i2 in ( dom h ) by A4,FINSEQ_3:25;
assume A9: i1 <> i2;
A10:now
per cases  by A9,XXREAL_0:1;
suppose i1 < i2;

hence ( h /. i1 ) <> ( h /. i2 ) by A1,A7,GOBOARD7:36;
end;
suppose i2 < i1;

hence ( h /. i1 ) <> ( h /. i2 ) by A4,A3,GOBOARD7:36;
end;
end;
i1 in ( dom h ) by A1,A3,FINSEQ_3:25;
then ( h /. i1 ) = ( h . i2 ) by A6,PARTFUN1:def 6
.= ( h /. i2 ) by A8,PARTFUN1:def 6;
hence thesis by A10;
end;
