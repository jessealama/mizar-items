environ
vocabularies NUMBERS,ORDINAL1,XBOOLE_0,ALGSTR_0,WELLORD1,QUOFIELD,RELAT_1,FUNCT_1,SUBSET_1,STRUCT_0,ORDINAL2,TARSKI,ORDINAL3,PRE_POLY,ARYTM_3,CARD_1,PBOOLE,FINSET_1,VALUED_0,FUNCOP_1,RLVECT_1,LATTICES,BINOP_1,POLYNOM1,FINSEQ_1,CARD_3,PARTFUN1,FINSEQ_2,NAT_1,VECTSP_1,ZFMISC_1,GROUP_1,SUPINF_2,XXREAL_0,FINSEQ_3,ORDINAL4,ARYTM_1,ORDERS_1,MSSUBFAM,POLYNOM6;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,VALUED_0,VECTSP_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCOP_1,POLYNOM1,STRUCT_0,ALGSTR_0,NAT_1,NAT_D,ORDERS_1,PBOOLE,RLVECT_1,FINSET_1,FINSEQ_1,FINSEQ_2,ORDINAL1,ORDINAL2,ORDINAL3,GROUP_1,QUOFIELD,GRCAT_1,WSIERP_1,PRE_POLY,FVSUM_1,POLYNOM3,GROUP_6,XXREAL_0,MATRLIN,CKB1,CKB2,CKB7;
definitions VECTSP_1,QUOFIELD,GRCAT_1,FUNCT_1,TARSKI,XBOOLE_0,STRUCT_0,VALUED_0,CKB7;
theorems POLYNOM1,TOPGRP_1,FUNCT_2,PBOOLE,FUNCT_1,ORDINAL3,ORDINAL1,ORDINAL2,FINSEQ_3,FINSEQ_2,FVSUM_1,FINSEQ_1,RELAT_1,FUNCOP_1,POLYALG1,FINSEQ_5,VECTSP_1,FINSEQ_4,FINSET_1,TARSKI,POLYNOM2,MATRLIN,RLVECT_1,NAT_1,SUBSET_1,CARD_3,POLYNOM3,ORDERS_1,RVSUM_1,XBOOLE_0,XBOOLE_1,XREAL_1,GROUP_6,XXREAL_0,GROUP_1,PARTFUN1,NAT_D,PRE_POLY,CKB3,CKB6,CKB7,CKB8,CKB9;
schemes PBOOLE,FUNCT_2,FRAENKEL,FUNCT_1,RECDEF_1;
registrations FUNCT_1,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XREAL_0,FINSEQ_1,FINSEQ_2,STRUCT_0,VECTSP_1,QUOFIELD,PRE_POLY,POLYNOM1,POLYNOM2,VALUED_0,CARD_1,CKB4,CKB5;
constructors ORDINAL3,XXREAL_0,BINARITH,WSIERP_1,GRCAT_1,GROUP_6,TRIANG_1,QUOFIELD,POLYNOM1,POLYNOM3,NAT_D,RELSET_1,MATRLIN,FVSUM_1,VFUNCT_1,CKB2,CKB7;
requirements BOOLE,SUBSET,NUMERALS,REAL;
begin
reserve o1 for Ordinal;
reserve o2 for Ordinal;
theorem
Th5: (for b1 being (Element of ( Bags o1 )) holds (for b2 being (Element of ( Bags o2 )) holds (( b1 +^ b2 ) = ( EmptyBag ( o1 +^ o2 ) ) iff (b1 = ( EmptyBag o1 ) & b2 = ( EmptyBag o2 )))))
proof
let b1 being (Element of ( Bags o1 ));
let b2 being (Element of ( Bags o2 ));
hereby
assume A1: ( b1 +^ b2 ) = ( EmptyBag ( o1 +^ o2 ) );
A2: (for z being set holds (z in ( dom b1 ) implies ( b1 . z ) = ( 0 )))
proof
let z being set;
A3: ( dom b1 ) = o1 by PARTFUN1:def 2;
assume A4: z in ( dom b1 );
then reconsider o = z as Ordinal by A3;
( b1 . o ) = ( ( b1 +^ b2 ) . o ) by A4,A3,CKB7:def 1
.= ( 0 ) by A1,PRE_POLY:52;
hence thesis;
end;
( dom b1 ) = o1 by PARTFUN1:def 2;
then b1 = ( o1 --> ( 0 ) ) by A2,FUNCOP_1:11;
hence b1 = ( EmptyBag o1 ) by PRE_POLY:def 13;
A5: (for z being set holds (z in ( dom b2 ) implies ( b2 . z ) = ( 0 )))
proof
let z being set;
A6: ( dom b2 ) = o2 by PARTFUN1:def 2;
assume A7: z in ( dom b2 );
then reconsider o = z as Ordinal by A6;
o1 c= ( o1 +^ o ) by ORDINAL3:24;
then A8: (not ( o1 +^ o ) in o1) by ORDINAL1:5;
( o1 +^ o ) in ( o1 +^ o2 ) by A7,A6,ORDINAL2:32;
then ( o1 +^ o ) in ( ( o1 +^ o2 ) \ o1 ) by A8,XBOOLE_0:def 5;
then ( ( b1 +^ b2 ) . ( o1 +^ o ) ) = ( b2 . ( ( o1 +^ o ) -^ o1 ) ) by CKB7:def 1;
then ( b2 . ( ( o1 +^ o ) -^ o1 ) ) = ( 0 ) by A1,PRE_POLY:52;
hence thesis by ORDINAL3:52;
end;
( dom b2 ) = o2 by PARTFUN1:def 2;
then b2 = ( o2 --> ( 0 ) ) by A5,FUNCOP_1:11;
hence b2 = ( EmptyBag o2 ) by PRE_POLY:def 13;
end;
thus ((b1 = ( EmptyBag o1 ) & b2 = ( EmptyBag o2 )) implies ( b1 +^ b2 ) = ( EmptyBag ( o1 +^ o2 ) ))
proof
assume that
A9: b1 = ( EmptyBag o1 )
and
A10: b2 = ( EmptyBag o2 );
A11: (for z being set holds (z in ( dom ( b1 +^ b2 ) ) implies ( ( b1 +^ b2 ) . z ) = ( 0 )))
proof
let z being set;
A12: ( dom ( b1 +^ b2 ) ) = ( o1 +^ o2 ) by PARTFUN1:def 2;
assume A13: z in ( dom ( b1 +^ b2 ) );
then reconsider o = z as Ordinal by A12;
A14: (o in ( ( o1 +^ o2 ) \ o1 ) implies (( b2 . ( o -^ o1 ) ) = ( 0 ) & ( ( b1 +^ b2 ) . o ) = ( b2 . ( o -^ o1 ) ))) by A10,CKB7:def 1,PRE_POLY:52;
(o in o1 implies (( b1 . o ) = ( 0 ) & ( ( b1 +^ b2 ) . o ) = ( b1 . o ))) by A9,CKB7:def 1,PRE_POLY:52;
hence thesis by A13,A12,A14,XBOOLE_0:def 5;
end;
( dom ( b1 +^ b2 ) ) = ( o1 +^ o2 ) by PARTFUN1:def 2;
then ( b1 +^ b2 ) = ( ( o1 +^ o2 ) --> ( 0 ) ) by A11,FUNCOP_1:11;
hence thesis by PRE_POLY:def 13;
end;

end;
