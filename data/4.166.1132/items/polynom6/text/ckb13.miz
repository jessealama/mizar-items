environ
vocabularies NUMBERS,ORDINAL1,XBOOLE_0,ALGSTR_0,WELLORD1,QUOFIELD,RELAT_1,FUNCT_1,SUBSET_1,STRUCT_0,ORDINAL2,TARSKI,ORDINAL3,PRE_POLY,ARYTM_3,CARD_1,PBOOLE,FINSET_1,VALUED_0,FUNCOP_1,RLVECT_1,LATTICES,BINOP_1,POLYNOM1,FINSEQ_1,CARD_3,PARTFUN1,FINSEQ_2,NAT_1,VECTSP_1,ZFMISC_1,GROUP_1,SUPINF_2,XXREAL_0,FINSEQ_3,ORDINAL4,ARYTM_1,ORDERS_1,MSSUBFAM,POLYNOM6;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,VALUED_0,VECTSP_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCOP_1,POLYNOM1,STRUCT_0,ALGSTR_0,NAT_1,NAT_D,ORDERS_1,PBOOLE,RLVECT_1,FINSET_1,FINSEQ_1,FINSEQ_2,ORDINAL1,ORDINAL2,ORDINAL3,GROUP_1,QUOFIELD,GRCAT_1,WSIERP_1,PRE_POLY,FVSUM_1,POLYNOM3,GROUP_6,XXREAL_0,MATRLIN,CKB1,CKB2,CKB7;
definitions VECTSP_1,QUOFIELD,GRCAT_1,FUNCT_1,TARSKI,XBOOLE_0,STRUCT_0,VALUED_0,CKB7;
theorems POLYNOM1,TOPGRP_1,FUNCT_2,PBOOLE,FUNCT_1,ORDINAL3,ORDINAL1,ORDINAL2,FINSEQ_3,FINSEQ_2,FVSUM_1,FINSEQ_1,RELAT_1,FUNCOP_1,POLYALG1,FINSEQ_5,VECTSP_1,FINSEQ_4,FINSET_1,TARSKI,POLYNOM2,MATRLIN,RLVECT_1,NAT_1,SUBSET_1,CARD_3,POLYNOM3,ORDERS_1,RVSUM_1,XBOOLE_0,XBOOLE_1,XREAL_1,GROUP_6,XXREAL_0,GROUP_1,PARTFUN1,NAT_D,PRE_POLY,CKB3,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
schemes PBOOLE,FUNCT_2,FRAENKEL,FUNCT_1,RECDEF_1;
registrations FUNCT_1,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XREAL_0,FINSEQ_1,FINSEQ_2,STRUCT_0,VECTSP_1,QUOFIELD,PRE_POLY,POLYNOM1,POLYNOM2,VALUED_0,CARD_1,CKB4,CKB5;
constructors ORDINAL3,XXREAL_0,BINARITH,WSIERP_1,GRCAT_1,GROUP_6,TRIANG_1,QUOFIELD,POLYNOM1,POLYNOM3,NAT_D,RELSET_1,MATRLIN,FVSUM_1,VFUNCT_1,CKB2,CKB7;
requirements BOOLE,SUBSET,NUMERALS,REAL;
begin
theorem
Th8: (for n being Ordinal holds (for L being  Abelian  add-associative  right_zeroed  right_complementable  distributive  associative non empty doubleLoopStr holds (for p,q,r being (Series of n,L) holds ( ( p + q ) *' r ) = ( ( p *' r ) + ( q *' r ) ))))
proof
let n being Ordinal;
let L being  Abelian  add-associative  right_zeroed  right_complementable  distributive  associative non empty doubleLoopStr;
let p being (Series of n,L),q being (Series of n,L),r being (Series of n,L);
set cL = (the carrier of L);
now
let b being (Element of ( Bags n ));
consider s being (FinSequence of cL) such that A1: ( ( ( p + q ) *' r ) . b ) = ( Sum s ) and A2: ( len s ) = ( len ( decomp b ) ) and A3: (for k being (Element of ( NAT )) holds (k in ( dom s ) implies (ex b1,b2 being (bag of n) st (( ( decomp b ) /. k ) = <* b1,b2 *> & ( s /. k ) = ( ( ( p + q ) . b1 ) * ( r . b2 ) ))))) by POLYNOM1:def 9;
consider u being (FinSequence of cL) such that A4: ( ( q *' r ) . b ) = ( Sum u ) and A5: ( len u ) = ( len ( decomp b ) ) and A6: (for k being (Element of ( NAT )) holds (k in ( dom u ) implies (ex b1,b2 being (bag of n) st (( ( decomp b ) /. k ) = <* b1,b2 *> & ( u /. k ) = ( ( q . b1 ) * ( r . b2 ) ))))) by POLYNOM1:def 9;
consider t being (FinSequence of cL) such that A7: ( ( p *' r ) . b ) = ( Sum t ) and A8: ( len t ) = ( len ( decomp b ) ) and A9: (for k being (Element of ( NAT )) holds (k in ( dom t ) implies (ex b1,b2 being (bag of n) st (( ( decomp b ) /. k ) = <* b1,b2 *> & ( t /. k ) = ( ( p . b1 ) * ( r . b2 ) ))))) by POLYNOM1:def 9;
reconsider t,u as (Element of ( ( len s ) -tuples_on cL )) by A2,A8,A5,FINSEQ_2:92;
A10: ( dom u ) = ( dom s ) by A2,A5,FINSEQ_3:29;
A11: ( dom t ) = ( dom s ) by A2,A8,FINSEQ_3:29;
then A12: ( dom ( t + u ) ) = ( dom s ) by A10,POLYNOM1:1;
A13:now
let i being Nat;
assume A14: i in ( dom s );
then consider sb1 being (bag of n),sb2 being (bag of n) such that A15: ( ( decomp b ) /. i ) = <* sb1,sb2 *> and A16: ( s /. i ) = ( ( ( p + q ) . sb1 ) * ( r . sb2 ) ) by A3;
A17: (( t /. i ) = ( t . i ) & ( u /. i ) = ( u . i )) by A11,A10,A14,PARTFUN1:def 6;
consider ub1 being (bag of n),ub2 being (bag of n) such that A18: ( ( decomp b ) /. i ) = <* ub1,ub2 *> and A19: ( u /. i ) = ( ( q . ub1 ) * ( r . ub2 ) ) by A6,A10,A14;
A20: (sb1 = ub1 & sb2 = ub2) by A15,A18,FINSEQ_1:77;
consider tb1 being (bag of n),tb2 being (bag of n) such that A21: ( ( decomp b ) /. i ) = <* tb1,tb2 *> and A22: ( t /. i ) = ( ( p . tb1 ) * ( r . tb2 ) ) by A9,A11,A14;
A23: (sb1 = tb1 & sb2 = tb2) by A15,A21,FINSEQ_1:77;
( s /. i ) = ( s . i ) by A14,PARTFUN1:def 6;
hence ( s . i ) = ( ( ( p . sb1 ) + ( q . sb1 ) ) * ( r . sb2 ) ) by A16,POLYNOM1:15
.= ( ( ( p . sb1 ) * ( r . sb2 ) ) + ( ( q . sb1 ) * ( r . sb2 ) ) ) by VECTSP_1:def 7
.= ( ( t + u ) . i ) by A12,A14,A22,A19,A23,A20,A17,FVSUM_1:17;
end;
( len ( t + u ) ) = ( len s ) by A12,FINSEQ_3:29;
then s = ( t + u ) by A13,FINSEQ_2:9;
hence ( ( ( p + q ) *' r ) . b ) = ( ( Sum t ) + ( Sum u ) ) by A1,FVSUM_1:76
.= ( ( ( p *' r ) + ( q *' r ) ) . b ) by A7,A4,POLYNOM1:15;
end;
hence thesis by FUNCT_2:63;
end;
