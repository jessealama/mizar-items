environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,FINSEQ_1,RELAT_1,PARTFUN1,CARD_1,FUNCT_1,TARSKI,XXREAL_0,ARYTM_1,ARYTM_3,NAT_1,ORDERS_1,RELAT_2,GROUP_1,BINOP_1,ALGSTR_0,RLVECT_1,VECTSP_1,LATTICES,ZFMISC_1,FINSET_1,ALGSTR_1,STRUCT_0,SUPINF_2,CARD_3,FINSOP_1,ORDINAL4,PRE_POLY,FINSEQ_5,FUNCT_4,FUNCOP_1,ORDINAL1,WELLORD2,MESFUNC1,RFINSEQ,POLYNOM1,ALGSEQ_1,QC_LANG1,MSSUBFAM,QUOFIELD,POLYNOM2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FINSOP_1,RELAT_2,RELSET_1,FUNCT_1,FINSET_1,ORDINAL1,PARTFUN1,FUNCT_2,BINOP_1,FUNCT_4,FUNCT_7,REAL_1,NAT_1,ALGSTR_1,ORDERS_1,FINSEQ_1,STRUCT_0,ALGSTR_0,RLVECT_1,FUNCOP_1,VFUNCT_1,VECTSP_1,GROUP_1,GROUP_4,QUOFIELD,FINSEQ_5,GRCAT_1,RFINSEQ,YELLOW_1,GROUP_6,XXREAL_0,RECDEF_1,PRE_POLY,POLYNOM1,CKB20,CKB22,CKB24,CKB25,CKB36,CKB37;
definitions QUOFIELD,GROUP_1,BINOP_1,FUNCOP_1,ALGSTR_0,CKB20,CKB25,CKB36,CKB37;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,ORDINAL1,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,RELAT_2,WELLORD2,FUNCT_7,FUNCT_4,FUNCOP_1,ORDERS_1,NAT_1,FINSEQ_4,GRCAT_1,INT_1,FINSEQ_3,RLVECT_1,GROUP_4,PARTFUN2,CARD_1,RFINSEQ,FINSOP_1,FINSEQ_5,CARD_2,FINSEQ_2,ALGSTR_1,GROUP_1,XBOOLE_0,XBOOLE_1,PARTFUN1,XREAL_1,GROUP_6,XXREAL_0,VALUED_0,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB35,CKB36,CKB37;
schemes FUNCT_2,NAT_1,RECDEF_1,INT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,STRUCT_0,VECTSP_1,ALGSTR_1,MONOID_0,POLYNOM1,VALUED_0,CARD_1,SUBSET_1,PRE_POLY,RELAT_1,VFUNCT_1,FUNCT_2,FUNCT_1,CKB5,CKB21,CKB32,CKB34;
constructors XXREAL_0,REAL_1,FINSOP_1,RFINSEQ,BINARITH,FINSEQ_5,GROUP_4,GRCAT_1,GROUP_6,MONOID_0,TRIANG_1,YELLOW_1,QUOFIELD,POLYNOM1,RECDEF_1,ALGSTR_1,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1,CKB20,CKB22,CKB24,CKB25,CKB36,CKB37;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
theorem
Th21: (for n being Ordinal holds (for L being  right_zeroed  add-associative  right_complementable  well-unital  distributive non trivial doubleLoopStr holds (for p being (Polynomial of n,L) holds (for b being (bag of n) holds (( Support p ) = { b } implies (for x being (Function of n,L) holds ( eval (p,x) ) = ( ( p . b ) * ( eval (b,x) ) )))))))
proof
let n being Ordinal;
let L being  right_zeroed  add-associative  right_complementable  well-unital  distributive non trivial doubleLoopStr;
let p being (Polynomial of n,L);
let b being (bag of n);
reconsider sp = ( Support p ) as  finite (Subset of ( Bags n ));
set sg = ( SgmX (( BagOrder n ),sp) );
A1: b in ( Bags n ) by PRE_POLY:def 12;
A2: ( dom p ) = ( Bags n ) by FUNCT_2:def 1;
A3: ( BagOrder n ) linearly_orders sp by CKB35:1;
assume ( Support p ) = { b };
then A4: ( rng sg ) = { b } by A3,PRE_POLY:def 2;
then A5: b in ( rng sg ) by TARSKI:def 1;
then A6: 1 in ( dom sg ) by FINSEQ_3:31;
then A7: ( sg /. 1 ) = ( sg . 1 ) by PARTFUN1:def 6;
A8: (for u being set holds (u in ( dom sg ) implies u in { 1 }))
proof
let u being set;
assume A9: u in ( dom sg );
assume A10: (not u in { 1 });
reconsider u as (Element of ( NAT )) by A9;
( sg /. u ) = ( sg . u ) by A9,PARTFUN1:def 6;
then A11: ( sg /. u ) in ( rng sg ) by A9,FUNCT_1:def 3;
A12: u <> 1 by A10,TARSKI:def 1;
A13: 1 < u
proof
consider k being Nat such that A14: ( dom sg ) = ( Seg k ) by FINSEQ_1:def 2;
( Seg k ) = { l where l is (Element of ( NAT )): (1 <= l & l <= k) } by FINSEQ_1:def 1;
then (ex m9 being (Element of ( NAT )) st ((m9 = u & 1 <= m9) & m9 <= k)) by A9,A14;
hence thesis by A12,XXREAL_0:1;
end;
( sg /. 1 ) = ( sg . 1 ) by A5,A9,FINSEQ_3:31,PARTFUN1:def 6;
then ( sg /. 1 ) in ( rng sg ) by A6,FUNCT_1:def 3;
then ( sg /. 1 ) = b by A4,TARSKI:def 1
.= ( sg /. u ) by A4,A11,TARSKI:def 1;
hence thesis by A3,A6,A9,A13,PRE_POLY:def 2;
end;
(for u being set holds (u in { 1 } implies u in ( dom sg ))) by A6,TARSKI:def 1;
then A15: ( dom sg ) = ( Seg 1 ) by A8,FINSEQ_1:2,TARSKI:1;
then A16: ( len sg ) = 1 by FINSEQ_1:def 3;
A17: ( sg . 1 ) in ( rng sg ) by A6,FUNCT_1:def 3;
then ( sg . 1 ) = b by A4,TARSKI:def 1;
then 1 in ( dom ( p * sg ) ) by A6,A1,A2,FUNCT_1:11;
then A18: ( ( p * sg ) /. 1 ) = ( ( p * sg ) . 1 ) by PARTFUN1:def 6
.= ( p . ( sg . 1 ) ) by A6,FUNCT_1:13
.= ( p . b ) by A4,A17,TARSKI:def 1;
1 in ( dom sg ) by A15,FINSEQ_1:2,TARSKI:def 1;
then A19: ( sg /. 1 ) in ( rng sg ) by A7,FUNCT_1:def 3;
let x being (Function of n,L);
consider y being (FinSequence of (the carrier of L)) such that A20: ( len y ) = ( len ( SgmX (( BagOrder n ),( Support p )) ) ) and A21: ( eval (p,x) ) = ( Sum y ) and A22: (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len y )) implies ( y /. i ) = ( ( ( p * ( SgmX (( BagOrder n ),( Support p )) ) ) /. i ) * ( eval (( ( ( SgmX (( BagOrder n ),( Support p )) ) /. i ) @ ),x) ) ))) by CKB37:def 1;
( y . 1 ) = ( y /. 1 ) by A20,A16,FINSEQ_4:15
.= ( ( ( p * sg ) /. 1 ) * ( eval (( ( sg /. 1 ) @ ),x) ) ) by A20,A22,A16
.= ( ( ( p * sg ) /. 1 ) * ( eval (b,x) ) ) by A4,A19,TARSKI:def 1;
then y = <* ( ( p . b ) * ( eval (b,x) ) ) *> by A20,A16,A18,FINSEQ_1:40;
hence thesis by A21,RLVECT_1:44;
end;
