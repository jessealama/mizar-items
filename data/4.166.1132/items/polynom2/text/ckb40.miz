environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,FINSEQ_1,RELAT_1,PARTFUN1,CARD_1,FUNCT_1,TARSKI,XXREAL_0,ARYTM_1,ARYTM_3,NAT_1,ORDERS_1,RELAT_2,GROUP_1,BINOP_1,ALGSTR_0,RLVECT_1,VECTSP_1,LATTICES,ZFMISC_1,FINSET_1,ALGSTR_1,STRUCT_0,SUPINF_2,CARD_3,FINSOP_1,ORDINAL4,PRE_POLY,FINSEQ_5,FUNCT_4,FUNCOP_1,ORDINAL1,WELLORD2,MESFUNC1,RFINSEQ,POLYNOM1,ALGSEQ_1,QC_LANG1,MSSUBFAM,QUOFIELD,POLYNOM2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FINSOP_1,RELAT_2,RELSET_1,FUNCT_1,FINSET_1,ORDINAL1,PARTFUN1,FUNCT_2,BINOP_1,FUNCT_4,FUNCT_7,REAL_1,NAT_1,ALGSTR_1,ORDERS_1,FINSEQ_1,STRUCT_0,ALGSTR_0,RLVECT_1,FUNCOP_1,VFUNCT_1,VECTSP_1,GROUP_1,GROUP_4,QUOFIELD,FINSEQ_5,GRCAT_1,RFINSEQ,YELLOW_1,GROUP_6,XXREAL_0,RECDEF_1,PRE_POLY,POLYNOM1,CKB20,CKB22,CKB24,CKB25,CKB36,CKB37;
definitions QUOFIELD,GROUP_1,BINOP_1,FUNCOP_1,ALGSTR_0,CKB20,CKB25,CKB36,CKB37;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,ORDINAL1,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,RELAT_2,WELLORD2,FUNCT_7,FUNCT_4,FUNCOP_1,ORDERS_1,NAT_1,FINSEQ_4,GRCAT_1,INT_1,FINSEQ_3,RLVECT_1,GROUP_4,PARTFUN2,CARD_1,RFINSEQ,FINSOP_1,FINSEQ_5,CARD_2,FINSEQ_2,ALGSTR_1,GROUP_1,XBOOLE_0,XBOOLE_1,PARTFUN1,XREAL_1,GROUP_6,XXREAL_0,VALUED_0,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39;
schemes FUNCT_2,NAT_1,RECDEF_1,INT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,STRUCT_0,VECTSP_1,ALGSTR_1,MONOID_0,POLYNOM1,VALUED_0,CARD_1,SUBSET_1,PRE_POLY,RELAT_1,VFUNCT_1,FUNCT_2,FUNCT_1,CKB5,CKB21,CKB32,CKB34;
constructors XXREAL_0,REAL_1,FINSOP_1,RFINSEQ,BINARITH,FINSEQ_5,GROUP_4,GRCAT_1,GROUP_6,MONOID_0,TRIANG_1,YELLOW_1,QUOFIELD,POLYNOM1,RECDEF_1,ALGSTR_1,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1,CKB20,CKB22,CKB24,CKB25,CKB36,CKB37;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
theorem
Th23: (for n being Ordinal holds (for L being  right_zeroed  add-associative  right_complementable  well-unital  distributive non trivial doubleLoopStr holds (for x being (Function of n,L) holds ( eval (( 1_ (n,L) ),x) ) = ( 1. L ))))
proof
let n being Ordinal;
let L being  right_zeroed  add-associative  right_complementable  well-unital  distributive non trivial doubleLoopStr;
let x being (Function of n,L);
set 1p = ( 1_ (n,L) );
A1: (for u being set holds (u in { ( EmptyBag n ) } implies u in ( Support 1p )))
proof
let u being set;
assume A2: u in { ( EmptyBag n ) };
then A3: u = ( EmptyBag n ) by TARSKI:def 1;
reconsider u as (Element of ( Bags n )) by A2,TARSKI:def 1;
( 1p . u ) = ( 1. L ) by A3,POLYNOM1:25;
then ( 1p . u ) <> ( 0. L );
hence thesis by POLYNOM1:def 3;
end;
reconsider s1p = ( Support 1p ) as  finite (Subset of ( Bags n ));
set sg1p = ( SgmX (( BagOrder n ),s1p) );
A4: ( BagOrder n ) linearly_orders ( Support 1p ) by CKB35:1;
(for u being set holds (u in ( Support 1p ) implies u in { ( EmptyBag n ) }))
proof
let u being set;
assume A5: u in ( Support 1p );
then reconsider u as (Element of ( Bags n ));
( 1p . u ) <> ( 0. L ) by A5,POLYNOM1:def 3;
then u = ( EmptyBag n ) by POLYNOM1:25;
hence thesis by TARSKI:def 1;
end;
then A6: ( Support 1p ) = { ( EmptyBag n ) } by A1,TARSKI:1;
then A7: ( rng sg1p ) = { ( EmptyBag n ) } by A4,PRE_POLY:def 2;
then A8: ( EmptyBag n ) in ( rng sg1p ) by TARSKI:def 1;
then A9: 1 in ( dom sg1p ) by FINSEQ_3:31;
then ( sg1p /. 1 ) = ( sg1p . 1 ) by PARTFUN1:def 6;
then ( sg1p /. 1 ) in ( rng sg1p ) by A9,FUNCT_1:def 3;
then A10: ( sg1p /. 1 ) = ( EmptyBag n ) by A7,TARSKI:def 1;
A11: (for u being set holds (u in ( dom sg1p ) implies u in { 1 }))
proof
let u being set;
assume A12: u in ( dom sg1p );
assume A13: (not u in { 1 });
reconsider u as (Element of ( NAT )) by A12;
( sg1p /. u ) = ( sg1p . u ) by A12,PARTFUN1:def 6;
then A14: ( sg1p /. u ) in ( rng sg1p ) by A12,FUNCT_1:def 3;
A15: u <> 1 by A13,TARSKI:def 1;
A16: 1 < u
proof
consider k being Nat such that A17: ( dom sg1p ) = ( Seg k ) by FINSEQ_1:def 2;
( Seg k ) = { m where m is (Element of ( NAT )): (1 <= m & m <= k) } by FINSEQ_1:def 1;
then (ex m9 being (Element of ( NAT )) st ((m9 = u & 1 <= m9) & m9 <= k)) by A12,A17;
hence thesis by A15,XXREAL_0:1;
end;
( sg1p /. 1 ) = ( sg1p . 1 ) by A8,A12,FINSEQ_3:31,PARTFUN1:def 6;
then ( sg1p /. 1 ) in ( rng sg1p ) by A9,FUNCT_1:def 3;
then ( sg1p /. 1 ) = ( EmptyBag n ) by A7,TARSKI:def 1
.= ( sg1p /. u ) by A7,A14,TARSKI:def 1;
hence thesis by A4,A9,A12,A16,PRE_POLY:def 2;
end;
A18: ( dom 1p ) = ( Bags n ) by FUNCT_2:def 1;
A19: 1 in ( dom sg1p ) by A8,FINSEQ_3:31;
A20: ( sg1p . 1 ) in ( rng sg1p ) by A9,FUNCT_1:def 3;
then ( sg1p . 1 ) in { ( EmptyBag n ) } by A6,A4,PRE_POLY:def 2;
then ( sg1p . 1 ) = ( EmptyBag n ) by TARSKI:def 1;
then 1 in ( dom ( 1p * sg1p ) ) by A19,A18,FUNCT_1:11;
then A21: ( ( 1p * sg1p ) /. 1 ) = ( ( 1p * sg1p ) . 1 ) by PARTFUN1:def 6
.= ( 1p . ( sg1p . 1 ) ) by A9,FUNCT_1:13
.= ( 1p . ( EmptyBag n ) ) by A7,A20,TARSKI:def 1
.= ( 1. L ) by POLYNOM1:25;
consider y being (FinSequence of (the carrier of L)) such that A22: ( len y ) = ( len sg1p ) and A23: ( Sum y ) = ( eval (1p,x) ) and A24: (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len y )) implies ( y /. i ) = ( ( ( 1p * sg1p ) /. i ) * ( eval (( ( sg1p /. i ) @ ),x) ) ))) by CKB37:def 1;
(for u being set holds (u in { 1 } implies u in ( dom sg1p ))) by A9,TARSKI:def 1;
then ( dom sg1p ) = ( Seg 1 ) by A11,FINSEQ_1:2,TARSKI:1;
then A25: ( len sg1p ) = 1 by FINSEQ_1:def 3;
then ( y . 1 ) = ( y /. 1 ) by A22,FINSEQ_4:15
.= ( ( ( 1p * sg1p ) /. 1 ) * ( eval (( ( sg1p /. 1 ) @ ),x) ) ) by A25,A22,A24
.= ( ( ( 1p * sg1p ) /. 1 ) * ( 1. L ) ) by A10,CKB27:1
.= ( ( 1p * sg1p ) /. 1 ) by VECTSP_1:def 6;
then y = <* ( 1. L ) *> by A25,A22,A21,FINSEQ_1:40;
hence thesis by A23,RLVECT_1:44;
end;
