environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,FINSEQ_1,RELAT_1,PARTFUN1,CARD_1,FUNCT_1,TARSKI,XXREAL_0,ARYTM_1,ARYTM_3,NAT_1,ORDERS_1,RELAT_2,GROUP_1,BINOP_1,ALGSTR_0,RLVECT_1,VECTSP_1,LATTICES,ZFMISC_1,FINSET_1,ALGSTR_1,STRUCT_0,SUPINF_2,CARD_3,FINSOP_1,ORDINAL4,PRE_POLY,FINSEQ_5,FUNCT_4,FUNCOP_1,ORDINAL1,WELLORD2,MESFUNC1,RFINSEQ,POLYNOM1,ALGSEQ_1,QC_LANG1,MSSUBFAM,QUOFIELD,POLYNOM2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FINSOP_1,RELAT_2,RELSET_1,FUNCT_1,FINSET_1,ORDINAL1,PARTFUN1,FUNCT_2,BINOP_1,FUNCT_4,FUNCT_7,REAL_1,NAT_1,ALGSTR_1,ORDERS_1,FINSEQ_1,STRUCT_0,ALGSTR_0,RLVECT_1,FUNCOP_1,VFUNCT_1,VECTSP_1,GROUP_1,GROUP_4,QUOFIELD,FINSEQ_5,GRCAT_1,RFINSEQ,YELLOW_1,GROUP_6,XXREAL_0,RECDEF_1,PRE_POLY,POLYNOM1;
definitions QUOFIELD,GROUP_1,BINOP_1,FUNCOP_1,ALGSTR_0;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,ORDINAL1,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,RELAT_2,WELLORD2,FUNCT_7,FUNCT_4,FUNCOP_1,ORDERS_1,NAT_1,FINSEQ_4,GRCAT_1,INT_1,FINSEQ_3,RLVECT_1,GROUP_4,PARTFUN2,CARD_1,RFINSEQ,FINSOP_1,FINSEQ_5,CARD_2,FINSEQ_2,ALGSTR_1,GROUP_1,XBOOLE_0,XBOOLE_1,PARTFUN1,XREAL_1,GROUP_6,XXREAL_0,VALUED_0,PRE_POLY,CKB1,CKB2;
schemes FUNCT_2,NAT_1,RECDEF_1,INT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,STRUCT_0,VECTSP_1,ALGSTR_1,MONOID_0,POLYNOM1,VALUED_0,CARD_1,SUBSET_1,PRE_POLY,RELAT_1,VFUNCT_1,FUNCT_2,FUNCT_1;
constructors XXREAL_0,REAL_1,FINSOP_1,RFINSEQ,BINARITH,FINSEQ_5,GROUP_4,GRCAT_1,GROUP_6,MONOID_0,TRIANG_1,YELLOW_1,QUOFIELD,POLYNOM1,RECDEF_1,ALGSTR_1,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
theorem
Lm3: (for X being set holds (for S being (Subset of X) holds (for R being (Order of X) holds (R is  being_linear-order implies R linearly_orders S))))
proof
let X being set;
let S being (Subset of X);
let R being (Order of X);
A1: ( field R ) = X by ORDERS_1:12;
then A2: R is_reflexive_in X by RELAT_2:def 9;
R is_transitive_in X by A1,RELAT_2:def 16;
then (for x,y,z being set holds (((((x in S & y in S) & z in S) & [ x,y ] in R) & [ y,z ] in R) implies [ x,z ] in R)) by RELAT_2:def 8;
then A3: R is_transitive_in S by RELAT_2:def 8;
R is_antisymmetric_in X by A1,RELAT_2:def 12;
then (for x,y being set holds ((((x in S & y in S) & [ x,y ] in R) & [ y,x ] in R) implies x = y)) by RELAT_2:def 4;
then A4: R is_antisymmetric_in S by RELAT_2:def 4;
assume R is  being_linear-order;
then R is  connected by ORDERS_1:def 5;
then A5: R is_connected_in ( field R ) by RELAT_2:def 14;
(for x,y being set holds (((x in S & y in S) & x <> y) implies ([ x,y ] in R or [ y,x ] in R)))
proof
let x being set;
let y being set;
assume that
A6: x in S
and
A7: y in S
and
A8: x <> y;
A9: ( field R ) = ( ( dom R ) \/ ( rng R ) ) by RELAT_1:def 6;
[ y,y ] in R by A2,A7,RELAT_2:def 1;
then y in ( dom R ) by RELAT_1:def 4;
then A10: y in ( field R ) by A9,XBOOLE_0:def 3;
[ x,x ] in R by A2,A6,RELAT_2:def 1;
then x in ( dom R ) by RELAT_1:def 4;
then x in ( field R ) by A9,XBOOLE_0:def 3;
hence thesis by A5,A8,A10,RELAT_2:def 6;
end;
then A11: R is_connected_in S by RELAT_2:def 6;
(for x being set holds (x in S implies [ x,x ] in R)) by A2,RELAT_2:def 1;
then R is_reflexive_in S by RELAT_2:def 1;
hence thesis by A4,A3,A11,ORDERS_1:def 8;
end;
