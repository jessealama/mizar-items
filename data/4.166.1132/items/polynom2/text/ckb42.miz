environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,FINSEQ_1,RELAT_1,PARTFUN1,CARD_1,FUNCT_1,TARSKI,XXREAL_0,ARYTM_1,ARYTM_3,NAT_1,ORDERS_1,RELAT_2,GROUP_1,BINOP_1,ALGSTR_0,RLVECT_1,VECTSP_1,LATTICES,ZFMISC_1,FINSET_1,ALGSTR_1,STRUCT_0,SUPINF_2,CARD_3,FINSOP_1,ORDINAL4,PRE_POLY,FINSEQ_5,FUNCT_4,FUNCOP_1,ORDINAL1,WELLORD2,MESFUNC1,RFINSEQ,POLYNOM1,ALGSEQ_1,QC_LANG1,MSSUBFAM,QUOFIELD,POLYNOM2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FINSOP_1,RELAT_2,RELSET_1,FUNCT_1,FINSET_1,ORDINAL1,PARTFUN1,FUNCT_2,BINOP_1,FUNCT_4,FUNCT_7,REAL_1,NAT_1,ALGSTR_1,ORDERS_1,FINSEQ_1,STRUCT_0,ALGSTR_0,RLVECT_1,FUNCOP_1,VFUNCT_1,VECTSP_1,GROUP_1,GROUP_4,QUOFIELD,FINSEQ_5,GRCAT_1,RFINSEQ,YELLOW_1,GROUP_6,XXREAL_0,RECDEF_1,PRE_POLY,POLYNOM1,CKB20,CKB22,CKB24,CKB25,CKB36,CKB37;
definitions QUOFIELD,GROUP_1,BINOP_1,FUNCOP_1,ALGSTR_0,CKB20,CKB25,CKB36,CKB37;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,ORDINAL1,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,RELAT_2,WELLORD2,FUNCT_7,FUNCT_4,FUNCOP_1,ORDERS_1,NAT_1,FINSEQ_4,GRCAT_1,INT_1,FINSEQ_3,RLVECT_1,GROUP_4,PARTFUN2,CARD_1,RFINSEQ,FINSOP_1,FINSEQ_5,CARD_2,FINSEQ_2,ALGSTR_1,GROUP_1,XBOOLE_0,XBOOLE_1,PARTFUN1,XREAL_1,GROUP_6,XXREAL_0,VALUED_0,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41;
schemes FUNCT_2,NAT_1,RECDEF_1,INT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,STRUCT_0,VECTSP_1,ALGSTR_1,MONOID_0,POLYNOM1,VALUED_0,CARD_1,SUBSET_1,PRE_POLY,RELAT_1,VFUNCT_1,FUNCT_2,FUNCT_1,CKB5,CKB21,CKB32,CKB34;
constructors XXREAL_0,REAL_1,FINSOP_1,RFINSEQ,BINARITH,FINSEQ_5,GROUP_4,GRCAT_1,GROUP_6,MONOID_0,TRIANG_1,YELLOW_1,QUOFIELD,POLYNOM1,RECDEF_1,ALGSTR_1,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1,CKB20,CKB22,CKB24,CKB25,CKB36,CKB37;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
theorem
Lm10: (for n being Ordinal holds (for L being  right_zeroed  add-associative  right_complementable  Abelian  well-unital  distributive non trivial doubleLoopStr holds (for p,q being (Polynomial of n,L) holds (for x being (Function of n,L) holds (for b being (bag of n) holds ((((not b in ( Support p )) & ( Support q ) = ( ( Support p ) \/ { b } )) & (for b9 being (bag of n) holds (b9 <> b implies ( q . b9 ) = ( p . b9 )))) implies ( eval (q,x) ) = ( ( eval (p,x) ) + ( ( q . b ) * ( eval (b,x) ) ) )))))))
proof
let n being Ordinal;
let L being  right_zeroed  add-associative  right_complementable  Abelian  well-unital  distributive non trivial doubleLoopStr;
let p being (Polynomial of n,L),q being (Polynomial of n,L);
let x being (Function of n,L);
let b being (bag of n);
assume that
A1: (not b in ( Support p ))
and
A2: ( Support q ) = ( ( Support p ) \/ { b } )
and
A3: (for b9 being (bag of n) holds (b9 <> b implies ( q . b9 ) = ( p . b9 )));
set sq = ( SgmX (( BagOrder n ),( Support q )) );
set sp = ( SgmX (( BagOrder n ),( Support p )) );
A4: ( BagOrder n ) linearly_orders ( Support q ) by CKB35:1;
b in { b } by TARSKI:def 1;
then b in ( Support q ) by A2,XBOOLE_0:def 3;
then b in ( rng sq ) by A4,PRE_POLY:def 2;
then consider k being Nat such that A5: k in ( dom sq ) and A6: ( sq . k ) = b by FINSEQ_2:10;
A7: ( sq /. k ) = b by A5,A6,PARTFUN1:def 6;
reconsider b as (Element of ( Bags n )) by PRE_POLY:def 12;
A8: ( dom sq ) = ( Seg ( len sq ) ) by FINSEQ_1:def 3;
then A9: k <= ( len sq ) by A5,FINSEQ_1:1;
1 <= k by A5,A8,FINSEQ_1:1;
then ( 1 - 1 ) <= ( k - 1 ) by XREAL_1:9;
then reconsider k9 = ( k - 1 ) as (Element of ( NAT )) by INT_1:3;
A10: ( k9 + 1 ) = ( k + ( 0 ) );
then A11: sq = ( Ins (sp,k9,b) ) by A1,A2,A5,A7,CKB17:1,CKB35:1;
consider yp being (FinSequence of (the carrier of L)) such that A12: ( len yp ) = ( len sp ) and A13: ( Sum yp ) = ( eval (p,x) ) and A14: (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len yp )) implies ( yp /. i ) = ( ( ( p * sp ) /. i ) * ( eval (( ( sp /. i ) @ ),x) ) ))) by CKB37:def 1;
consider yq being (FinSequence of (the carrier of L)) such that A15: ( len yq ) = ( len sq ) and A16: ( Sum yq ) = ( eval (q,x) ) and A17: (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len yq )) implies ( yq /. i ) = ( ( ( q * sq ) /. i ) * ( eval (( ( sq /. i ) @ ),x) ) ))) by CKB37:def 1;
reconsider b as (Element of ( Bags n ));
set ytmp = ( Ins (yp,k9,( ( q . b ) * ( eval (b,x) ) )) );
A18: ( ( len sp ) + 1 ) = ( ( card ( Support p ) ) + 1 ) by CKB35:1,PRE_POLY:11
.= ( card ( Support q ) ) by A1,A2,CARD_2:41
.= ( len sq ) by CKB35:1,PRE_POLY:11;
then A19: ( len yq ) = ( len ytmp ) by A15,A12,FINSEQ_5:69;
A20: ( BagOrder n ) linearly_orders ( Support p ) by CKB35:1;
A21: (for i being Nat holds ((1 <= i & i <= ( len yq )) implies ( yq . i ) = ( ytmp . i )))
proof
let i being Nat;
assume that
A22: 1 <= i
and
A23: i <= ( len yq );
i in ( Seg ( len yq ) ) by A22,A23,FINSEQ_1:1;
then A24: i in ( dom yq ) by FINSEQ_1:def 3;
i in ( Seg ( len ytmp ) ) by A19,A22,A23,FINSEQ_1:1;
then A25: i in ( dom ytmp ) by FINSEQ_1:def 3;
per cases ;
suppose A26: i = k;

( dom q ) = ( Bags n ) by FUNCT_2:def 1;
then ( sq . k ) in ( dom q ) by A6,PRE_POLY:def 12;
then A27: k in ( dom ( q * sq ) ) by A5,FUNCT_1:11;
then A28: ( ( q * sq ) /. k ) = ( ( q * sq ) . k ) by PARTFUN1:def 6
.= ( q . b ) by A6,A27,FUNCT_1:12;
A29: ( yq /. i ) = ( ( ( q * sq ) /. k ) * ( eval (( ( sq /. k ) @ ),x) ) ) by A5,A17,A22,A23,A26
.= ( ( q . b ) * ( eval (b,x) ) ) by A5,A6,A28,PARTFUN1:def 6;
A30: k9 <= ( len yp ) by A9,A10,A12,A18,XREAL_1:6;
thus ( ytmp . i ) = ( ytmp /. i ) by A25,PARTFUN1:def 6
.= ( ( q . b ) * ( eval (b,x) ) ) by A10,A26,A30,FINSEQ_5:73
.= ( yq . i ) by A24,A29,PARTFUN1:def 6;
end;
suppose A31: i <> k;

( len ( Ins (sp,k9,b) ) ) = ( ( len sp ) + 1 ) by FINSEQ_5:69;
then A32: ( dom ( Ins (sp,k9,b) ) ) = ( Seg ( ( len sp ) + 1 ) ) by FINSEQ_1:def 3;
now
per cases  by A31,XXREAL_0:1;
case A33: i < k;
k9 < k by A10,NAT_1:19;
then k9 < ( len yq ) by A9,A15,XXREAL_0:2;
then A34: k9 <= ( len yp ) by A15,A12,A18,NAT_1:13;
A35: ( yp | ( Seg k9 ) ) is FinSequence by FINSEQ_1:15;
A36: i <= k9 by A10,A33,NAT_1:13;
then i in ( Seg k9 ) by A22,FINSEQ_1:1;
then i in ( dom ( yp | ( Seg k9 ) ) ) by A34,A35,FINSEQ_1:17;
then A37: i in ( dom ( yp | k9 ) ) by FINSEQ_1:def 15;
A38: ( k - 1 ) <= ( ( ( len sp ) + 1 ) - 1 ) by A9,A18,XREAL_1:9;
then A39: i <= ( len sp ) by A36,XXREAL_0:2;
then i in ( Seg ( len sp ) ) by A22,FINSEQ_1:1;
then A40: i in ( dom sp ) by FINSEQ_1:def 3;
A41:now
assume ( sp /. i ) = b;
then ( sp . i ) = b by A40,PARTFUN1:def 6;
then b in ( rng sp ) by A40,FUNCT_1:def 3;
hence contradiction by A1,A20,PRE_POLY:def 2;
end;
i < ( len yq ) by A9,A15,A33,XXREAL_0:2;
then A42: i <= ( len yp ) by A15,A12,A18,NAT_1:13;
A43: ( sp | ( Seg k9 ) ) is FinSequence by FINSEQ_1:15;
A44: ( rng ( Ins (sp,k9,b) ) ) c= ( Bags n ) by FINSEQ_1:def 4;
A45: ( dom q ) = ( Bags n ) by FUNCT_2:def 1;
A46: ( rng sp ) c= ( Bags n ) by FINSEQ_1:def 4;
i in ( Seg k9 ) by A22,A36,FINSEQ_1:1;
then i in ( dom ( sp | ( Seg k9 ) ) ) by A38,A43,FINSEQ_1:17;
then A47: i in ( dom ( sp | k9 ) ) by FINSEQ_1:def 15;
( sp . i ) in ( rng sp ) by A40,FUNCT_1:def 3;
then ( sp . i ) in ( Bags n ) by A46;
then ( sp . i ) in ( dom p ) by FUNCT_2:def 1;
then A48: i in ( dom ( p * sp ) ) by A40,FUNCT_1:11;
( len sp ) <= ( ( len sp ) + 1 ) by XREAL_1:29;
then i <= ( ( len sp ) + 1 ) by A39,XXREAL_0:2;
then A49: i in ( dom ( Ins (sp,k9,b) ) ) by A22,A32,FINSEQ_1:1;
then ( ( Ins (sp,k9,b) ) . i ) in ( rng ( Ins (sp,k9,b) ) ) by FUNCT_1:def 3;
then A50: i in ( dom ( q * ( Ins (sp,k9,b) ) ) ) by A49,A44,A45,FUNCT_1:11;
then A51: ( ( q * ( Ins (sp,k9,b) ) ) /. i ) = ( ( q * ( Ins (sp,k9,b) ) ) . i ) by PARTFUN1:def 6
.= ( q . ( ( Ins (sp,k9,b) ) . i ) ) by A50,FUNCT_1:12
.= ( q . ( ( Ins (sp,k9,b) ) /. i ) ) by A49,PARTFUN1:def 6
.= ( q . ( sp /. i ) ) by A47,FINSEQ_5:72
.= ( p . ( sp /. i ) ) by A3,A41
.= ( p . ( sp . i ) ) by A40,PARTFUN1:def 6
.= ( ( p * sp ) . i ) by A48,FUNCT_1:12
.= ( ( p * sp ) /. i ) by A48,PARTFUN1:def 6;
A52: ( yq /. i ) = ( ( ( q * sq ) /. i ) * ( eval (( ( sq /. i ) @ ),x) ) ) by A17,A22,A23,A49
.= ( ( ( p * sp ) /. i ) * ( eval (( ( sp /. i ) @ ),x) ) ) by A11,A47,A51,FINSEQ_5:72
.= ( yp /. i ) by A14,A22,A49,A42
.= ( ytmp /. i ) by A37,FINSEQ_5:72;
thus ( yq . i ) = ( yq /. i ) by A24,PARTFUN1:def 6
.= ( ytmp . i ) by A25,A52,PARTFUN1:def 6;
end;
case A53: i > k;
then ( i - 1 ) > k9 by XREAL_1:9;
then reconsider i1 = ( i - 1 ) as (Element of ( NAT )) by INT_1:3;
A54: ( ( i - 1 ) + 1 ) = ( i + ( 0 ) );
then A55: ( k9 + 1 ) <= i1 by A53,NAT_1:13;
A56: ( dom q ) = ( Bags n ) by FUNCT_2:def 1;
A57: ( rng ( Ins (sp,k9,b) ) ) c= ( Bags n ) by FINSEQ_1:def 4;
A58: ( dom p ) = ( Bags n ) by FUNCT_2:def 1;
A59: ( rng sp ) c= ( Bags n ) by FINSEQ_1:def 4;
A60: ( i - 1 ) <= ( ( ( len yp ) + 1 ) - 1 ) by A15,A12,A18,A23,XREAL_1:9;
( ( 0 ) + 1 ) <= ( k9 + 1 ) by XREAL_1:6;
then 1 < i by A53,XXREAL_0:2;
then A61: 1 <= i1 by A54,NAT_1:13;
then i1 in ( Seg ( len sp ) ) by A12,A60,FINSEQ_1:1;
then A62: i1 in ( dom sp ) by FINSEQ_1:def 3;
A63:now
assume ( sp /. i1 ) = b;
then ( sp . i1 ) = b by A62,PARTFUN1:def 6;
then b in ( rng sp ) by A62,FUNCT_1:def 3;
hence contradiction by A1,A20,PRE_POLY:def 2;
end;
( sp . i1 ) in ( rng sp ) by A62,FUNCT_1:def 3;
then A64: i1 in ( dom ( p * sp ) ) by A62,A59,A58,FUNCT_1:11;
A65: i = ( i1 + 1 );
A66: i in ( dom ( Ins (sp,k9,b) ) ) by A15,A18,A22,A23,A32,FINSEQ_1:1;
then ( ( Ins (sp,k9,b) ) . i ) in ( rng ( Ins (sp,k9,b) ) ) by FUNCT_1:def 3;
then A67: i in ( dom ( q * ( Ins (sp,k9,b) ) ) ) by A66,A57,A56,FUNCT_1:11;
then A68: ( ( q * ( Ins (sp,k9,b) ) ) /. i ) = ( ( q * ( Ins (sp,k9,b) ) ) . i ) by PARTFUN1:def 6
.= ( q . ( ( Ins (sp,k9,b) ) . i ) ) by A67,FUNCT_1:12
.= ( q . ( ( Ins (sp,k9,b) ) /. i ) ) by A66,PARTFUN1:def 6
.= ( q . ( sp /. i1 ) ) by A12,A60,A65,A55,FINSEQ_5:74
.= ( p . ( sp /. i1 ) ) by A3,A63
.= ( p . ( sp . i1 ) ) by A62,PARTFUN1:def 6
.= ( ( p * sp ) . i1 ) by A64,FUNCT_1:12
.= ( ( p * sp ) /. i1 ) by A64,PARTFUN1:def 6;
A69: ( yq /. i ) = ( ( ( q * sq ) /. i ) * ( eval (( ( sq /. i ) @ ),x) ) ) by A17,A22,A23,A66
.= ( ( ( p * sp ) /. i1 ) * ( eval (( ( sp /. i1 ) @ ),x) ) ) by A11,A12,A60,A65,A55,A68,FINSEQ_5:74
.= ( yp /. i1 ) by A14,A60,A61
.= ( ytmp /. i ) by A60,A65,A55,FINSEQ_5:74;
thus ( yq . i ) = ( yq /. i ) by A24,PARTFUN1:def 6
.= ( ytmp . i ) by A25,A69,PARTFUN1:def 6;
end;
end;
hence thesis;
end;
end;
( Sum ( ( ( yp | k9 ) ^ <* ( ( q . b ) * ( eval (b,x) ) ) *> ) ^ ( yp /^ k9 ) ) ) = ( ( Sum ( ( yp | k9 ) ^ <* ( ( q . b ) * ( eval (b,x) ) ) *> ) ) + ( Sum ( yp /^ k9 ) ) ) by RLVECT_1:41
.= ( ( ( Sum ( yp | k9 ) ) + ( Sum <* ( ( q . b ) * ( eval (b,x) ) ) *> ) ) + ( Sum ( yp /^ k9 ) ) ) by RLVECT_1:41
.= ( ( ( Sum ( yp | k9 ) ) + ( Sum ( yp /^ k9 ) ) ) + ( Sum <* ( ( q . b ) * ( eval (b,x) ) ) *> ) ) by RLVECT_1:def 3
.= ( ( Sum ( ( yp | k9 ) ^ ( yp /^ k9 ) ) ) + ( Sum <* ( ( q . b ) * ( eval (b,x) ) ) *> ) ) by RLVECT_1:41
.= ( ( Sum yp ) + ( Sum <* ( ( q . b ) * ( eval (b,x) ) ) *> ) ) by RFINSEQ:8
.= ( ( eval (p,x) ) + ( ( q . b ) * ( eval (b,x) ) ) ) by A13,RLVECT_1:44;
then ( Sum ytmp ) = ( ( eval (p,x) ) + ( ( q . b ) * ( eval (b,x) ) ) ) by FINSEQ_5:def 4;
hence thesis by A16,A19,A21,FINSEQ_1:14;
end;
