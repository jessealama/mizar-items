environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,FINSEQ_1,RELAT_1,PARTFUN1,CARD_1,FUNCT_1,TARSKI,XXREAL_0,ARYTM_1,ARYTM_3,NAT_1,ORDERS_1,RELAT_2,GROUP_1,BINOP_1,ALGSTR_0,RLVECT_1,VECTSP_1,LATTICES,ZFMISC_1,FINSET_1,ALGSTR_1,STRUCT_0,SUPINF_2,CARD_3,FINSOP_1,ORDINAL4,PRE_POLY,FINSEQ_5,FUNCT_4,FUNCOP_1,ORDINAL1,WELLORD2,MESFUNC1,RFINSEQ,POLYNOM1,ALGSEQ_1,QC_LANG1,MSSUBFAM,QUOFIELD,POLYNOM2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FINSOP_1,RELAT_2,RELSET_1,FUNCT_1,FINSET_1,ORDINAL1,PARTFUN1,FUNCT_2,BINOP_1,FUNCT_4,FUNCT_7,REAL_1,NAT_1,ALGSTR_1,ORDERS_1,FINSEQ_1,STRUCT_0,ALGSTR_0,RLVECT_1,FUNCOP_1,VFUNCT_1,VECTSP_1,GROUP_1,GROUP_4,QUOFIELD,FINSEQ_5,GRCAT_1,RFINSEQ,YELLOW_1,GROUP_6,XXREAL_0,RECDEF_1,PRE_POLY,POLYNOM1,CKB20,CKB22,CKB24,CKB25;
definitions QUOFIELD,GROUP_1,BINOP_1,FUNCOP_1,ALGSTR_0,CKB20,CKB25;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,ORDINAL1,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,RELAT_2,WELLORD2,FUNCT_7,FUNCT_4,FUNCOP_1,ORDERS_1,NAT_1,FINSEQ_4,GRCAT_1,INT_1,FINSEQ_3,RLVECT_1,GROUP_4,PARTFUN2,CARD_1,RFINSEQ,FINSOP_1,FINSEQ_5,CARD_2,FINSEQ_2,ALGSTR_1,GROUP_1,XBOOLE_0,XBOOLE_1,PARTFUN1,XREAL_1,GROUP_6,XXREAL_0,VALUED_0,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30;
schemes FUNCT_2,NAT_1,RECDEF_1,INT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,STRUCT_0,VECTSP_1,ALGSTR_1,MONOID_0,POLYNOM1,VALUED_0,CARD_1,SUBSET_1,PRE_POLY,RELAT_1,VFUNCT_1,FUNCT_2,FUNCT_1,CKB5,CKB21;
constructors XXREAL_0,REAL_1,FINSOP_1,RFINSEQ,BINARITH,FINSEQ_5,GROUP_4,GRCAT_1,GROUP_6,MONOID_0,TRIANG_1,YELLOW_1,QUOFIELD,POLYNOM1,RECDEF_1,ALGSTR_1,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1,CKB20,CKB22,CKB24,CKB25;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
theorem
Th18: (for n being Ordinal holds (for L being  right_zeroed  add-associative  right_complementable  well-unital  distributive  Abelian non  trivial  commutative  associative non  empty doubleLoopStr holds (for b1,b2 being (bag of n) holds (for x being (Function of n,L) holds ( eval (( b1 + b2 ),x) ) = ( ( eval (b1,x) ) * ( eval (b2,x) ) )))))
proof
let n being Ordinal;
let L being  right_zeroed  add-associative  right_complementable  well-unital  distributive  Abelian  commutative  associative non  trivial doubleLoopStr;
let b1 being (bag of n);
let b2 being (bag of n);
let x being (Function of n,L);
defpred P[ (Element of ( NAT )) ]
 means
(for b1 being (bag of n) holds (( card ( support b1 ) ) = $1 implies ( eval (( b1 + b2 ),x) ) = ( ( eval (b1,x) ) * ( eval (b2,x) ) )));
A1: (ex k being (Element of ( NAT )) st ( card ( support b1 ) ) = k);
A2: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being (Element of ( NAT ));
assume A3: P[ k ];
let b1 being (bag of n);
assume A4: ( card ( support b1 ) ) = ( k + 1 );
set sgb1 = ( SgmX (( RelIncl n ),( support b1 )) );
set bg = ( sgb1 /. ( len sgb1 ) );
A5: ( RelIncl n ) linearly_orders ( support b1 ) by CKB23:1;
then sgb1 <> ( {} ) by A4,CARD_1:27,PRE_POLY:def 2,RELAT_1:38;
then 1 <= ( len sgb1 ) by NAT_1:14;
then ( len sgb1 ) in ( Seg ( len sgb1 ) ) by FINSEQ_1:1;
then A6: ( len sgb1 ) in ( dom sgb1 ) by FINSEQ_1:def 3;
then ( sgb1 /. ( len sgb1 ) ) = ( sgb1 . ( len sgb1 ) ) by PARTFUN1:def 6;
then bg in ( rng sgb1 ) by A6,FUNCT_1:def 3;
then A7: bg in ( support b1 ) by A5,PRE_POLY:def 2;
set b19 = ( b1 +* (bg,( 0 )) );
( support b1 ) c= ( dom b1 ) by PRE_POLY:37;
then A8: b19 = ( b1 +* ( bg .--> ( 0 ) ) ) by A7,FUNCT_7:def 3;
A9: (for u being set holds (u in ( support b1 ) implies u in ( ( support b19 ) \/ { bg } )))
proof
let u being set;
assume u in ( support b1 );
then A10: ( b1 . u ) <> ( 0 ) by PRE_POLY:def 7;
per cases ;
suppose u = bg;

then u in { bg } by TARSKI:def 1;
hence thesis by XBOOLE_0:def 3;
end;
suppose u <> bg;

then (not u in { bg }) by TARSKI:def 1;
then (not u in ( dom ( bg .--> ( 0 ) ) )) by FUNCOP_1:13;
then ( b19 . u ) = ( b1 . u ) by A8,FUNCT_4:11;
then u in ( support b19 ) by A10,PRE_POLY:def 7;
hence thesis by XBOOLE_0:def 3;
end;
end;
bg in { bg } by TARSKI:def 1;
then bg in ( dom ( bg .--> ( 0 ) ) ) by FUNCOP_1:13;
then ( b19 . bg ) = ( ( bg .--> ( 0 ) ) . bg ) by A8,FUNCT_4:13;
then A11: ( b19 . bg ) = ( 0 ) by FUNCOP_1:72;
then A12: (not bg in ( support b19 )) by PRE_POLY:def 7;
(for u being set holds (u in ( ( support b19 ) \/ { bg } ) implies u in ( support b1 )))
proof
let u being set;
assume A13: u in ( ( support b19 ) \/ { bg } );
per cases  by A13,XBOOLE_0:def 3;
suppose A14: u in ( support b19 );

then u <> bg by A11,PRE_POLY:def 7;
then (not u in { bg }) by TARSKI:def 1;
then (not u in ( dom ( bg .--> ( 0 ) ) )) by FUNCOP_1:13;
then A15: ( b19 . u ) = ( b1 . u ) by A8,FUNCT_4:11;
( b19 . u ) <> ( 0 ) by A14,PRE_POLY:def 7;
hence thesis by A15,PRE_POLY:def 7;
end;
suppose u in { bg };

hence thesis by A7,TARSKI:def 1;
end;
end;
then ( support b1 ) = ( ( support b19 ) \/ { bg } ) by A9,TARSKI:1;
then A16: ( k + 1 ) = ( ( card ( support b19 ) ) + 1 ) by A4,A12,CARD_2:41;
set m = ( ( EmptyBag n ) +* (bg,( b1 . bg )) );
A17: ( dom b1 ) = n by PARTFUN1:def 2;
( dom ( EmptyBag n ) ) = n by PARTFUN1:def 2;
then A18: m = ( ( EmptyBag n ) +* ( bg .--> ( b1 . bg ) ) ) by A7,FUNCT_7:def 3;
A19: (for u being set holds (u in ( support m ) implies u in { bg }))
proof
let u being set;
assume u in ( support m );
then A20: ( m . u ) <> ( 0 ) by PRE_POLY:def 7;
now
assume u <> bg;
then (not u in { bg }) by TARSKI:def 1;
then (not u in ( dom ( bg .--> ( b1 . bg ) ) )) by FUNCOP_1:13;
then ( m . u ) = ( ( EmptyBag n ) . u ) by A18,FUNCT_4:11;
hence contradiction by A20,PRE_POLY:52;
end;
hence thesis by TARSKI:def 1;
end;
A21: ( b1 . bg ) <> ( 0 ) by A7,PRE_POLY:def 7;
(for u being set holds (u in { bg } implies u in ( support m )))
proof
let u being set;
bg in { bg } by TARSKI:def 1;
then bg in ( dom ( bg .--> ( b1 . bg ) ) ) by FUNCOP_1:13;
then ( m . bg ) = ( ( bg .--> ( b1 . bg ) ) . bg ) by A18,FUNCT_4:13;
then A22: ( m . bg ) = ( b1 . bg ) by FUNCOP_1:72;
assume u in { bg };
then u = bg by TARSKI:def 1;
hence thesis by A21,A22,PRE_POLY:def 7;
end;
then A23: ( support m ) = { bg } by A19,TARSKI:1;
A24: (for u being set holds (u in n implies ( ( b19 + m ) . u ) = ( b1 . u )))
proof
let u being set;
assume u in n;
per cases ;
suppose A25: u = bg;

bg in { bg } by TARSKI:def 1;
then bg in ( dom ( bg .--> ( b1 . bg ) ) ) by FUNCOP_1:13;
then ( m . bg ) = ( ( bg .--> ( b1 . bg ) ) . bg ) by A18,FUNCT_4:13;
then A26: ( m . bg ) = ( b1 . bg ) by FUNCOP_1:72;
u in { bg } by A25,TARSKI:def 1;
then u in ( dom ( bg .--> ( 0 ) ) ) by FUNCOP_1:13;
then A27: ( b19 . u ) = ( ( bg .--> ( 0 ) ) . bg ) by A8,A25,FUNCT_4:13;
( ( b19 + m ) . u ) = ( ( b19 . u ) + ( m . u ) ) by PRE_POLY:def 5
.= ( ( 0 ) + ( b1 . bg ) ) by A25,A27,A26,FUNCOP_1:72
.= ( b1 . bg );
hence thesis by A25;
end;
suppose u <> bg;

then A28: (not u in { bg }) by TARSKI:def 1;
then A29: (not u in ( dom ( bg .--> ( 0 ) ) )) by FUNCOP_1:13;
(not u in ( dom ( bg .--> ( b1 . bg ) ) )) by A28,FUNCOP_1:13;
then ( m . u ) = ( ( EmptyBag n ) . u ) by A18,FUNCT_4:11;
then A30: ( m . u ) = ( 0 ) by PRE_POLY:52;
( ( b19 + m ) . u ) = ( ( b19 . u ) + ( m . u ) ) by PRE_POLY:def 5
.= ( b1 . u ) by A8,A29,A30,FUNCT_4:11;
hence thesis;
end;
end;
A31: ( dom ( b19 + m ) ) = n by PARTFUN1:def 2;
then ( eval (b1,x) ) = ( eval (( m + b19 ),x) ) by A17,A24,FUNCT_1:2
.= ( ( eval (b19,x) ) * ( eval (m,x) ) ) by A23,CKB30:1;
hence ( ( eval (b1,x) ) * ( eval (b2,x) ) ) = ( ( ( eval (b19,x) ) * ( eval (b2,x) ) ) * ( eval (m,x) ) ) by GROUP_1:def 3
.= ( ( eval (( b19 + b2 ),x) ) * ( eval (m,x) ) ) by A3,A16
.= ( eval (( m + ( b19 + b2 ) ),x) ) by A23,CKB30:1
.= ( eval (( ( b19 + m ) + b2 ),x) ) by PRE_POLY:35
.= ( eval (( b1 + b2 ),x) ) by A31,A17,A24,FUNCT_1:2;
end;
A32: P[ ( 0 ) ]
proof
let b1 being (bag of n);
assume ( card ( support b1 ) ) = ( 0 );
then ( support b1 ) = ( {} );
then A33: b1 = ( EmptyBag n ) by CKB18:1;
hence ( eval (( b1 + b2 ),x) ) = ( eval (b2,x) ) by PRE_POLY:53
.= ( ( 1. L ) * ( eval (b2,x) ) ) by VECTSP_1:def 6
.= ( ( eval (b1,x) ) * ( eval (b2,x) ) ) by A33,CKB27:1;
end;
(for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A32,A2);
hence thesis by A1;
end;
