environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,FINSEQ_1,RELAT_1,PARTFUN1,CARD_1,FUNCT_1,TARSKI,XXREAL_0,ARYTM_1,ARYTM_3,NAT_1,ORDERS_1,RELAT_2,GROUP_1,BINOP_1,ALGSTR_0,RLVECT_1,VECTSP_1,LATTICES,ZFMISC_1,FINSET_1,ALGSTR_1,STRUCT_0,SUPINF_2,CARD_3,FINSOP_1,ORDINAL4,PRE_POLY,FINSEQ_5,FUNCT_4,FUNCOP_1,ORDINAL1,WELLORD2,MESFUNC1,RFINSEQ,POLYNOM1,ALGSEQ_1,QC_LANG1,MSSUBFAM,QUOFIELD,POLYNOM2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FINSOP_1,RELAT_2,RELSET_1,FUNCT_1,FINSET_1,ORDINAL1,PARTFUN1,FUNCT_2,BINOP_1,FUNCT_4,FUNCT_7,REAL_1,NAT_1,ALGSTR_1,ORDERS_1,FINSEQ_1,STRUCT_0,ALGSTR_0,RLVECT_1,FUNCOP_1,VFUNCT_1,VECTSP_1,GROUP_1,GROUP_4,QUOFIELD,FINSEQ_5,GRCAT_1,RFINSEQ,YELLOW_1,GROUP_6,XXREAL_0,RECDEF_1,PRE_POLY,POLYNOM1,CKB20,CKB22,CKB24,CKB25,CKB36,CKB37;
definitions QUOFIELD,GROUP_1,BINOP_1,FUNCOP_1,ALGSTR_0,CKB20,CKB25,CKB36,CKB37;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,ORDINAL1,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,RELAT_2,WELLORD2,FUNCT_7,FUNCT_4,FUNCOP_1,ORDERS_1,NAT_1,FINSEQ_4,GRCAT_1,INT_1,FINSEQ_3,RLVECT_1,GROUP_4,PARTFUN2,CARD_1,RFINSEQ,FINSOP_1,FINSEQ_5,CARD_2,FINSEQ_2,ALGSTR_1,GROUP_1,XBOOLE_0,XBOOLE_1,PARTFUN1,XREAL_1,GROUP_6,XXREAL_0,VALUED_0,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40;
schemes FUNCT_2,NAT_1,RECDEF_1,INT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,STRUCT_0,VECTSP_1,ALGSTR_1,MONOID_0,POLYNOM1,VALUED_0,CARD_1,SUBSET_1,PRE_POLY,RELAT_1,VFUNCT_1,FUNCT_2,FUNCT_1,CKB5,CKB21,CKB32,CKB34;
constructors XXREAL_0,REAL_1,FINSOP_1,RFINSEQ,BINARITH,FINSEQ_5,GROUP_4,GRCAT_1,GROUP_6,MONOID_0,TRIANG_1,YELLOW_1,QUOFIELD,POLYNOM1,RECDEF_1,ALGSTR_1,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1,CKB20,CKB22,CKB24,CKB25,CKB36,CKB37;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
theorem
Th24: (for n being Ordinal holds (for L being  right_zeroed  add-associative  right_complementable  well-unital  distributive non  trivial doubleLoopStr holds (for p being (Polynomial of n,L) holds (for x being (Function of n,L) holds ( eval (( - p ),x) ) = ( - ( eval (p,x) ) )))))
proof
let n being Ordinal;
let L being  right_zeroed  add-associative  right_complementable  well-unital  distributive non  trivial doubleLoopStr;
let p being (Polynomial of n,L);
let x being (Function of n,L);
set mp = ( - p );
A1: (for u being set holds (u in ( Support p ) implies u in ( Support mp )))
proof
let u being set;
assume A2: u in ( Support p );
then reconsider u as (Element of ( Bags n ));
reconsider u as (bag of n);
A3: ( p . u ) <> ( 0. L ) by A2,POLYNOM1:def 3;
( mp . u ) <> ( 0. L )
proof
assume ( mp . u ) = ( 0. L );
then ( - ( - ( p . u ) ) ) = ( - ( 0. L ) ) by POLYNOM1:17;
then ( p . u ) = ( - ( 0. L ) ) by RLVECT_1:17;
hence thesis by A3,RLVECT_1:12;
end;
hence thesis by POLYNOM1:def 3;
end;
consider ymp being (FinSequence of (the carrier of L)) such that A4: ( len ymp ) = ( len ( SgmX (( BagOrder n ),( Support mp )) ) ) and A5: ( Sum ymp ) = ( eval (mp,x) ) and A6: (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len ymp )) implies ( ymp /. i ) = ( ( ( mp * ( SgmX (( BagOrder n ),( Support mp )) ) ) /. i ) * ( eval (( ( ( SgmX (( BagOrder n ),( Support mp )) ) /. i ) @ ),x) ) ))) by CKB37:def 1;
consider yp being (FinSequence of (the carrier of L)) such that A7: ( len yp ) = ( len ( SgmX (( BagOrder n ),( Support p )) ) ) and A8: ( Sum yp ) = ( eval (p,x) ) and A9: (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len yp )) implies ( yp /. i ) = ( ( ( p * ( SgmX (( BagOrder n ),( Support p )) ) ) /. i ) * ( eval (( ( ( SgmX (( BagOrder n ),( Support p )) ) /. i ) @ ),x) ) ))) by CKB37:def 1;
A10: (for u being set holds (u in ( Support mp ) implies u in ( Support p )))
proof
let u being set;
assume A11: u in ( Support mp );
then reconsider u as (Element of ( Bags n ));
reconsider u as (bag of n);
( mp . u ) <> ( 0. L ) by A11,POLYNOM1:def 3;
then ( - ( p . u ) ) <> ( 0. L ) by POLYNOM1:17;
then ( p . u ) <> ( 0. L ) by RLVECT_1:12;
hence thesis by POLYNOM1:def 3;
end;
then A12: ( len ymp ) = ( len yp ) by A1,A7,A4,TARSKI:1;
A13: ( dom ( ( - ( 1. L ) ) * yp ) ) = ( dom yp ) by POLYNOM1:def 1;
consider k being (Element of ( NAT )) such that A14: k = ( len ( ( - ( 1. L ) ) * yp ) );
consider l being (Element of ( NAT )) such that A15: l = ( len yp );
A16: ( dom ( ( - ( 1. L ) ) * yp ) ) = ( Seg k ) by A14,FINSEQ_1:def 3;
A17: ( SgmX (( BagOrder n ),( Support p )) ) = ( SgmX (( BagOrder n ),( Support mp )) ) by A1,A10,TARSKI:1;
A18: (for k being Nat holds ((1 <= k & k <= ( len ymp )) implies ( ymp . k ) = ( ( ( - ( 1. L ) ) * yp ) . k )))
proof
let k being Nat;
assume that
A19: 1 <= k
and
A20: k <= ( len ymp );
A21: k <= ( len ( ( - ( 1. L ) ) * yp ) ) by A12,A13,A14,A16,A20,FINSEQ_1:def 3;
A22: ( ( mp * ( SgmX (( BagOrder n ),( Support p )) ) ) /. k ) = ( ( - ( 1. L ) ) * ( ( p * ( SgmX (( BagOrder n ),( Support p )) ) ) /. k ) )
proof
reconsider b = ( ( SgmX (( BagOrder n ),( Support p )) ) /. k ) as (bag of n);
k in ( Seg ( len ( SgmX (( BagOrder n ),( Support p )) ) ) ) by A7,A12,A19,A20,FINSEQ_1:1;
then A23: k in ( dom ( SgmX (( BagOrder n ),( Support p )) ) ) by FINSEQ_1:def 3;
A24: ( dom p ) = ( Bags n ) by FUNCT_2:def 1;
then b in ( dom p );
then A25: k in ( dom ( p * ( SgmX (( BagOrder n ),( Support p )) ) ) ) by A23,PARTFUN2:3;
A26: ( dom mp ) = ( Bags n ) by FUNCT_2:def 1;
then b in ( dom mp );
then k in ( dom ( mp * ( SgmX (( BagOrder n ),( Support p )) ) ) ) by A23,PARTFUN2:3;
hence ( ( mp * ( SgmX (( BagOrder n ),( Support p )) ) ) /. k ) = ( mp /. b ) by PARTFUN2:3
.= ( mp . b ) by A26,PARTFUN1:def 6
.= ( - ( p . b ) ) by POLYNOM1:17
.= ( - ( p /. b ) ) by A24,PARTFUN1:def 6
.= ( - ( ( 1. L ) * ( p /. b ) ) ) by VECTSP_1:def 6
.= ( ( - ( 1. L ) ) * ( p /. b ) ) by VECTSP_1:9
.= ( ( - ( 1. L ) ) * ( ( p * ( SgmX (( BagOrder n ),( Support p )) ) ) /. k ) ) by A25,PARTFUN2:3;
end;
A27: k in ( Seg l ) by A12,A15,A19,A20,FINSEQ_1:1;
then A28: k in ( dom yp ) by A15,FINSEQ_1:def 3;
thus ( ymp . k ) = ( ymp /. k ) by A19,A20,FINSEQ_4:15
.= ( ( ( - ( 1. L ) ) * ( ( p * ( SgmX (( BagOrder n ),( Support p )) ) ) /. k ) ) * ( eval (( ( ( SgmX (( BagOrder n ),( Support p )) ) /. k ) @ ),x) ) ) by A17,A6,A19,A20,A27,A22
.= ( ( - ( ( 1. L ) * ( ( p * ( SgmX (( BagOrder n ),( Support p )) ) ) /. k ) ) ) * ( eval (( ( ( SgmX (( BagOrder n ),( Support p )) ) /. k ) @ ),x) ) ) by VECTSP_1:9
.= ( ( - ( ( p * ( SgmX (( BagOrder n ),( Support p )) ) ) /. k ) ) * ( eval (( ( ( SgmX (( BagOrder n ),( Support p )) ) /. k ) @ ),x) ) ) by VECTSP_1:def 6
.= ( - ( ( ( p * ( SgmX (( BagOrder n ),( Support p )) ) ) /. k ) * ( eval (( ( ( SgmX (( BagOrder n ),( Support p )) ) /. k ) @ ),x) ) ) ) by VECTSP_1:9
.= ( - ( yp /. k ) ) by A9,A12,A19,A20,A27
.= ( - ( ( 1. L ) * ( yp /. k ) ) ) by VECTSP_1:def 6
.= ( ( - ( 1. L ) ) * ( yp /. k ) ) by VECTSP_1:9
.= ( ( ( - ( 1. L ) ) * yp ) /. k ) by A28,POLYNOM1:def 1
.= ( ( ( - ( 1. L ) ) * yp ) . k ) by A19,A21,FINSEQ_4:15;
end;
( dom yp ) = ( Seg l ) by A15,FINSEQ_1:def 3;
hence ( eval (mp,x) ) = ( Sum ( ( - ( 1. L ) ) * yp ) ) by A5,A12,A13,A14,A15,A16,A18,FINSEQ_1:6,FINSEQ_1:14
.= ( ( - ( 1. L ) ) * ( Sum yp ) ) by POLYNOM1:12
.= ( ( - ( 1. L ) ) * ( eval (p,x) ) ) by A8
.= ( - ( ( 1. L ) * ( eval (p,x) ) ) ) by VECTSP_1:9
.= ( - ( eval (p,x) ) ) by VECTSP_1:def 6;
end;
