environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,FINSEQ_1,RELAT_1,PARTFUN1,CARD_1,FUNCT_1,TARSKI,XXREAL_0,ARYTM_1,ARYTM_3,NAT_1,ORDERS_1,RELAT_2,GROUP_1,BINOP_1,ALGSTR_0,RLVECT_1,VECTSP_1,LATTICES,ZFMISC_1,FINSET_1,ALGSTR_1,STRUCT_0,SUPINF_2,CARD_3,FINSOP_1,ORDINAL4,PRE_POLY,FINSEQ_5,FUNCT_4,FUNCOP_1,ORDINAL1,WELLORD2,MESFUNC1,RFINSEQ,POLYNOM1,ALGSEQ_1,QC_LANG1,MSSUBFAM,QUOFIELD,POLYNOM2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FINSOP_1,RELAT_2,RELSET_1,FUNCT_1,FINSET_1,ORDINAL1,PARTFUN1,FUNCT_2,BINOP_1,FUNCT_4,FUNCT_7,REAL_1,NAT_1,ALGSTR_1,ORDERS_1,FINSEQ_1,STRUCT_0,ALGSTR_0,RLVECT_1,FUNCOP_1,VFUNCT_1,VECTSP_1,GROUP_1,GROUP_4,QUOFIELD,FINSEQ_5,GRCAT_1,RFINSEQ,YELLOW_1,GROUP_6,XXREAL_0,RECDEF_1,PRE_POLY,POLYNOM1,CKB20,CKB22,CKB24,CKB25,CKB36,CKB37;
definitions QUOFIELD,GROUP_1,BINOP_1,FUNCOP_1,ALGSTR_0,CKB20,CKB25,CKB36,CKB37;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,ORDINAL1,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,RELAT_2,WELLORD2,FUNCT_7,FUNCT_4,FUNCOP_1,ORDERS_1,NAT_1,FINSEQ_4,GRCAT_1,INT_1,FINSEQ_3,RLVECT_1,GROUP_4,PARTFUN2,CARD_1,RFINSEQ,FINSOP_1,FINSEQ_5,CARD_2,FINSEQ_2,ALGSTR_1,GROUP_1,XBOOLE_0,XBOOLE_1,PARTFUN1,XREAL_1,GROUP_6,XXREAL_0,VALUED_0,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB35,CKB36,CKB37,CKB38;
schemes FUNCT_2,NAT_1,RECDEF_1,INT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,STRUCT_0,VECTSP_1,ALGSTR_1,MONOID_0,POLYNOM1,VALUED_0,CARD_1,SUBSET_1,PRE_POLY,RELAT_1,VFUNCT_1,FUNCT_2,FUNCT_1,CKB5,CKB21,CKB32,CKB34;
constructors XXREAL_0,REAL_1,FINSOP_1,RFINSEQ,BINARITH,FINSEQ_5,GROUP_4,GRCAT_1,GROUP_6,MONOID_0,TRIANG_1,YELLOW_1,QUOFIELD,POLYNOM1,RECDEF_1,ALGSTR_1,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1,CKB20,CKB22,CKB24,CKB25,CKB36,CKB37;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
theorem
Th22: (for n being Ordinal holds (for L being  right_zeroed  add-associative  right_complementable  well-unital  distributive non trivial doubleLoopStr holds (for x being (Function of n,L) holds ( eval (( 0_ (n,L) ),x) ) = ( 0. L ))))
proof
let n being Ordinal;
let L being  right_zeroed  add-associative  right_complementable  well-unital  distributive non trivial doubleLoopStr;
let x being (Function of n,L);
set 0p = ( 0_ (n,L) );
consider y being (FinSequence of (the carrier of L)) such that A1: ( len y ) = ( len ( SgmX (( BagOrder n ),( Support 0p )) ) ) and A2: ( Sum y ) = ( eval (0p,x) ) and (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len y )) implies ( y /. i ) = ( ( ( 0p * ( SgmX (( BagOrder n ),( Support 0p )) ) ) /. i ) * ( eval (( ( ( SgmX (( BagOrder n ),( Support 0p )) ) /. i ) @ ),x) ) ))) by CKB37:def 1;
( Support 0p ) = ( {} )
proof
set u = the (Element of ( Support 0p ));
assume ( Support 0p ) <> ( {} );
then A3: u in ( Support 0p );
then A4: u is (Element of ( Bags n ));
( 0p . u ) <> ( 0. L ) by A3,POLYNOM1:def 3;
hence thesis by A4,POLYNOM1:22;
end;
then ( SgmX (( BagOrder n ),( Support 0p )) ) = ( {} ) by CKB12:1,CKB35:1;
then y = ( <*> (the carrier of L) ) by A1;
hence thesis by A2,RLVECT_1:43;
end;
