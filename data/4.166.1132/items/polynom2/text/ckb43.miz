environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,FINSEQ_1,RELAT_1,PARTFUN1,CARD_1,FUNCT_1,TARSKI,XXREAL_0,ARYTM_1,ARYTM_3,NAT_1,ORDERS_1,RELAT_2,GROUP_1,BINOP_1,ALGSTR_0,RLVECT_1,VECTSP_1,LATTICES,ZFMISC_1,FINSET_1,ALGSTR_1,STRUCT_0,SUPINF_2,CARD_3,FINSOP_1,ORDINAL4,PRE_POLY,FINSEQ_5,FUNCT_4,FUNCOP_1,ORDINAL1,WELLORD2,MESFUNC1,RFINSEQ,POLYNOM1,ALGSEQ_1,QC_LANG1,MSSUBFAM,QUOFIELD,POLYNOM2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FINSOP_1,RELAT_2,RELSET_1,FUNCT_1,FINSET_1,ORDINAL1,PARTFUN1,FUNCT_2,BINOP_1,FUNCT_4,FUNCT_7,REAL_1,NAT_1,ALGSTR_1,ORDERS_1,FINSEQ_1,STRUCT_0,ALGSTR_0,RLVECT_1,FUNCOP_1,VFUNCT_1,VECTSP_1,GROUP_1,GROUP_4,QUOFIELD,FINSEQ_5,GRCAT_1,RFINSEQ,YELLOW_1,GROUP_6,XXREAL_0,RECDEF_1,PRE_POLY,POLYNOM1,CKB20,CKB22,CKB24,CKB25,CKB36,CKB37;
definitions QUOFIELD,GROUP_1,BINOP_1,FUNCOP_1,ALGSTR_0,CKB20,CKB25,CKB36,CKB37;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,ORDINAL1,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,RELAT_2,WELLORD2,FUNCT_7,FUNCT_4,FUNCOP_1,ORDERS_1,NAT_1,FINSEQ_4,GRCAT_1,INT_1,FINSEQ_3,RLVECT_1,GROUP_4,PARTFUN2,CARD_1,RFINSEQ,FINSOP_1,FINSEQ_5,CARD_2,FINSEQ_2,ALGSTR_1,GROUP_1,XBOOLE_0,XBOOLE_1,PARTFUN1,XREAL_1,GROUP_6,XXREAL_0,VALUED_0,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42;
schemes FUNCT_2,NAT_1,RECDEF_1,INT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,STRUCT_0,VECTSP_1,ALGSTR_1,MONOID_0,POLYNOM1,VALUED_0,CARD_1,SUBSET_1,PRE_POLY,RELAT_1,VFUNCT_1,FUNCT_2,FUNCT_1,CKB5,CKB21,CKB32,CKB34;
constructors XXREAL_0,REAL_1,FINSOP_1,RFINSEQ,BINARITH,FINSEQ_5,GROUP_4,GRCAT_1,GROUP_6,MONOID_0,TRIANG_1,YELLOW_1,QUOFIELD,POLYNOM1,RECDEF_1,ALGSTR_1,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1,CKB20,CKB22,CKB24,CKB25,CKB36,CKB37;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
theorem
Lm11: (for n being Ordinal holds (for L being  right_zeroed  add-associative  right_complementable  Abelian  well-unital  distributive non  trivial doubleLoopStr holds (for p being (Polynomial of n,L) holds ((ex b being (bag of n) st ( Support p ) = { b }) implies (for q being (Polynomial of n,L) holds (for x being (Function of n,L) holds ( eval (( p + q ),x) ) = ( ( eval (p,x) ) + ( eval (q,x) ) )))))))
proof
let n being Ordinal;
let L being  right_zeroed  add-associative  right_complementable  well-unital  distributive  Abelian non  trivial doubleLoopStr;
let p being (Polynomial of n,L);
assume (ex b being (bag of n) st ( Support p ) = { b });
then consider b being (bag of n) such that A1: ( Support p ) = { b };
b in ( Support p ) by A1,TARSKI:def 1;
then A2: ( p . b ) <> ( 0. L ) by POLYNOM1:def 3;
let q being (Polynomial of n,L);
let x being (Function of n,L);
A3: (for b9 being (bag of n) holds (b9 <> b implies ( ( p + q ) . b9 ) = ( q . b9 )))
proof
let b9 being (bag of n);
A4: b9 is (Element of ( Bags n )) by PRE_POLY:def 12;
assume b9 <> b;
then A5: (not b9 in ( Support p )) by A1,TARSKI:def 1;
thus ( ( p + q ) . b9 ) = ( ( p . b9 ) + ( q . b9 ) ) by POLYNOM1:15
.= ( ( 0. L ) + ( q . b9 ) ) by A5,A4,POLYNOM1:def 3
.= ( q . b9 ) by RLVECT_1:def 4;
end;
set sq = ( SgmX (( BagOrder n ),( Support q )) );
set spq = ( SgmX (( BagOrder n ),( Support ( p + q ) )) );
A6: b is (Element of ( Bags n )) by PRE_POLY:def 12;
A7: ( Support ( p + q ) ) c= ( ( Support p ) \/ ( Support q ) ) by POLYNOM1:20;
consider yq being (FinSequence of (the carrier of L)) such that A8: ( len yq ) = ( len sq ) and A9: ( eval (q,x) ) = ( Sum yq ) and A10: (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len yq )) implies ( yq /. i ) = ( ( ( q * sq ) /. i ) * ( eval (( ( sq /. i ) @ ),x) ) ))) by CKB37:def 1;
consider ypq being (FinSequence of (the carrier of L)) such that A11: ( len ypq ) = ( len spq ) and A12: ( eval (( p + q ),x) ) = ( Sum ypq ) and A13: (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len ypq )) implies ( ypq /. i ) = ( ( ( ( p + q ) * spq ) /. i ) * ( eval (( ( spq /. i ) @ ),x) ) ))) by CKB37:def 1;
A14: ( BagOrder n ) linearly_orders ( Support q ) by CKB35:1;
now
per cases ;
case A15: b in ( Support q );
now
per cases ;
case A16: ( p . b ) = ( - ( q . b ) );
A17: (for u being set holds (u in ( Support q ) implies u in ( ( Support ( p + q ) ) \/ { b } )))
proof
let u being set;
assume A18: u in ( Support q );
then reconsider u as (bag of n);
per cases ;
suppose u = b;

then u in { b } by TARSKI:def 1;
hence thesis by XBOOLE_0:def 3;
end;
suppose u <> b;

then ( ( p + q ) . u ) = ( q . u ) by A3;
then A19: ( ( p + q ) . u ) <> ( 0. L ) by A18,POLYNOM1:def 3;
u is (Element of ( Bags n )) by PRE_POLY:def 12;
then u in ( Support ( p + q ) ) by A19,POLYNOM1:def 3;
hence thesis by XBOOLE_0:def 3;
end;
end;
( ( p + q ) . b ) = ( ( p . b ) + ( q . b ) ) by POLYNOM1:15
.= ( 0. L ) by A16,RLVECT_1:5;
then A20: (not b in ( Support ( p + q ) )) by POLYNOM1:def 3;
(for u being set holds (u in ( ( Support ( p + q ) ) \/ { b } ) implies u in ( Support q )))
proof
let u being set;
assume A21: u in ( ( Support ( p + q ) ) \/ { b } );
per cases  by A21,XBOOLE_0:def 3;
suppose A22: u in ( Support ( p + q ) );

then (not u in { b }) by A20,TARSKI:def 1;
hence thesis by A1,A7,A22,XBOOLE_0:def 3;
end;
suppose u in { b };

hence thesis by A15,TARSKI:def 1;
end;
end;
then A23: ( ( Support ( p + q ) ) \/ { b } ) = ( Support q ) by A17,TARSKI:1;
thus ( eval (( p + q ),x) ) = ( ( eval (( p + q ),x) ) + ( 0. L ) ) by RLVECT_1:def 4
.= ( ( eval (( p + q ),x) ) + ( ( ( q . b ) * ( eval (b,x) ) ) + ( - ( ( q . b ) * ( eval (b,x) ) ) ) ) ) by RLVECT_1:5
.= ( ( ( eval (( p + q ),x) ) + ( ( q . b ) * ( eval (b,x) ) ) ) + ( - ( ( q . b ) * ( eval (b,x) ) ) ) ) by RLVECT_1:def 3
.= ( ( eval (q,x) ) + ( - ( ( q . b ) * ( eval (b,x) ) ) ) ) by A3,A20,A23,CKB42:1
.= ( ( eval (q,x) ) + ( ( p . b ) * ( eval (b,x) ) ) ) by A16,VECTSP_1:9
.= ( ( eval (q,x) ) + ( eval (p,x) ) ) by A1,CKB38:1;
end;
case A24: ( p . b ) <> ( - ( q . b ) );
( ( p . b ) + ( q . b ) ) <> ( ( - ( q . b ) ) + ( q . b ) )
proof
assume A25: ( ( p . b ) + ( q . b ) ) = ( ( - ( q . b ) ) + ( q . b ) );
( p . b ) = ( ( p . b ) + ( 0. L ) ) by RLVECT_1:def 4
.= ( ( p . b ) + ( ( q . b ) + ( - ( q . b ) ) ) ) by RLVECT_1:5
.= ( ( ( - ( q . b ) ) + ( q . b ) ) + ( - ( q . b ) ) ) by A25,RLVECT_1:def 3
.= ( ( 0. L ) + ( - ( q . b ) ) ) by RLVECT_1:5
.= ( - ( q . b ) ) by RLVECT_1:def 4;
hence thesis by A24;
end;
then ( ( p . b ) + ( q . b ) ) <> ( 0. L ) by RLVECT_1:5;
then A26: ( ( p + q ) . b ) <> ( 0. L ) by POLYNOM1:15;
A27: (for u being set holds (u in ( Support q ) implies u in ( Support ( p + q ) )))
proof
let u being set;
assume A28: u in ( Support q );
then reconsider u as (bag of n);
per cases ;
suppose u = b;

hence thesis by A6,A26,POLYNOM1:def 3;
end;
suppose u <> b;

then ( ( p + q ) . u ) = ( q . u ) by A3;
then A29: ( ( p + q ) . u ) <> ( 0. L ) by A28,POLYNOM1:def 3;
u is (Element of ( Bags n )) by PRE_POLY:def 12;
hence thesis by A29,POLYNOM1:def 3;
end;
end;
A30: (for u being set holds (u in ( Support ( p + q ) ) implies u in ( Support q )))
proof
let u being set;
assume A31: u in ( Support ( p + q ) );
then reconsider u as (bag of n);
per cases  by A7,A31,XBOOLE_0:def 3;
suppose u in ( Support p );

hence thesis by A1,A15,TARSKI:def 1;
end;
suppose u in ( Support q );

hence thesis;
end;
end;
then A32: ( Support ( p + q ) ) = ( Support q ) by A27,TARSKI:1;
A33: ( len ypq ) = ( len yq ) by A11,A8,A30,A27,TARSKI:1;
consider spqk being Nat such that A34: ( dom spq ) = ( Seg spqk ) by FINSEQ_1:def 2;
b in ( rng sq ) by A14,A15,PRE_POLY:def 2;
then consider k being Nat such that A35: k in ( dom sq ) and A36: ( sq . k ) = b by FINSEQ_2:10;
consider sqk being Nat such that A37: ( dom sq ) = ( Seg sqk ) by FINSEQ_1:def 2;
reconsider k as (Element of ( NAT )) by ORDINAL1:def 12;
reconsider k,sqk,spqk as (Element of ( NAT )) by ORDINAL1:def 12;
A38: 1 <= k by A35,A37,FINSEQ_1:1;
A39: ( dom ( p + q ) ) = ( Bags n ) by FUNCT_2:def 1;
then ( sq . k ) in ( dom ( p + q ) ) by A36,PRE_POLY:def 12;
then A40: k in ( dom ( ( p + q ) * sq ) ) by A35,FUNCT_1:11;
then A41: ( ( ( p + q ) * sq ) /. k ) = ( ( ( p + q ) * sq ) . k ) by PARTFUN1:def 6
.= ( ( p + q ) . b ) by A36,A40,FUNCT_1:12;
A42: k <= sqk by A35,A37,FINSEQ_1:1;
A43: ( dom q ) = ( Bags n ) by FUNCT_2:def 1;
then ( sq . k ) in ( dom q ) by A36,PRE_POLY:def 12;
then A44: k in ( dom ( q * sq ) ) by A35,FUNCT_1:11;
then A45: ( ( q * sq ) /. k ) = ( ( q * sq ) . k ) by PARTFUN1:def 6
.= ( q . b ) by A36,A44,FUNCT_1:12;
consider i being Nat such that A46: ( dom yq ) = ( Seg i ) by FINSEQ_1:def 2;
A47: sqk = ( len sq ) by A37,FINSEQ_1:def 3
.= ( len spq ) by A30,A27,TARSKI:1
.= spqk by A34,FINSEQ_1:def 3;
A48: i in ( NAT ) by ORDINAL1:def 12;
then A49: ( len yq ) = i by A46,FINSEQ_1:def 3;
A50: (for i9 being (Element of ( NAT )) holds ((i9 in ( dom yq ) & i9 <> k) implies ( ypq /. i9 ) = ( yq /. i9 )))
proof
let i9 being (Element of ( NAT ));
assume that
A51: i9 in ( dom yq )
and
A52: i9 <> k;
A53: 1 <= i9 by A46,A51,FINSEQ_1:1;
i9 in ( Seg ( len spq ) ) by A11,A33,A51,FINSEQ_1:def 3;
then A54: i9 in ( dom spq ) by FINSEQ_1:def 3;
then ( spq /. i9 ) = ( spq . i9 ) by PARTFUN1:def 6;
then A55: i9 in ( dom ( ( p + q ) * spq ) ) by A39,A54,FUNCT_1:11;
then A56: ( ( ( p + q ) * spq ) /. i9 ) = ( ( ( p + q ) * spq ) . i9 ) by PARTFUN1:def 6
.= ( ( p + q ) . ( spq . i9 ) ) by A55,FUNCT_1:12
.= ( ( p + q ) . ( spq /. i9 ) ) by A54,PARTFUN1:def 6;
A57: ( spq /. i9 ) <> b
proof
assume ( spq /. i9 ) = b;
then A58: ( spq . i9 ) = b by A54,PARTFUN1:def 6;
A59: spq is  one-to-one by CKB35:1,PRE_POLY:10;
( spq . k ) = b by A30,A27,A36,TARSKI:1;
hence thesis by A35,A37,A34,A47,A52,A54,A58,A59,FUNCT_1:def 4;
end;
A60: i9 in ( dom sq ) by A8,A46,A49,A51,FINSEQ_1:def 3;
( sq /. i9 ) = ( sq . i9 ) by A37,A34,A47,A54,PARTFUN1:def 6;
then A61: i9 in ( dom ( q * sq ) ) by A43,A60,FUNCT_1:11;
then A62: ( ( q * sq ) /. i9 ) = ( ( q * sq ) . i9 ) by PARTFUN1:def 6
.= ( q . ( sq . i9 ) ) by A61,FUNCT_1:12
.= ( q . ( sq /. i9 ) ) by A60,PARTFUN1:def 6;
A63: i9 <= ( len yq ) by A46,A49,A51,FINSEQ_1:1;
hence ( ypq /. i9 ) = ( ( ( ( p + q ) * spq ) /. i9 ) * ( eval (( ( spq /. i9 ) @ ),x) ) ) by A13,A33,A53
.= ( ( q . ( sq /. i9 ) ) * ( eval (( ( sq /. i9 ) @ ),x) ) ) by A3,A32,A57,A56
.= ( yq /. i9 ) by A10,A53,A63,A62;
end;
A64: ( sq /. k ) = b by A35,A36,PARTFUN1:def 6;
A65: sqk = ( len yq ) by A8,A37,FINSEQ_1:def 3;
then k <= i by A42,A46,A48,FINSEQ_1:def 3;
then A66: k in ( dom yq ) by A38,A46,FINSEQ_1:1;
( len ypq ) = sqk by A11,A34,A47,FINSEQ_1:def 3;
then ( ypq /. k ) = ( ( ( ( p + q ) * spq ) /. k ) * ( eval (( ( spq /. k ) @ ),x) ) ) by A13,A38,A42
.= ( ( ( p . b ) + ( q . b ) ) * ( eval (b,x) ) ) by A32,A64,A41,POLYNOM1:15
.= ( ( ( p . b ) * ( eval (b,x) ) ) + ( ( ( q * sq ) /. k ) * ( eval (( ( sq /. k ) @ ),x) ) ) ) by A64,A45,VECTSP_1:def 7
.= ( ( ( p . b ) * ( eval (b,x) ) ) + ( yq /. k ) ) by A10,A38,A42,A65;
hence ( eval (( p + q ),x) ) = ( ( ( p . b ) * ( eval (b,x) ) ) + ( Sum yq ) ) by A12,A33,A66,A50,CKB10:1
.= ( ( eval (p,x) ) + ( eval (q,x) ) ) by A1,A9,CKB38:1;
end;
end;
hence thesis;
end;
case A67: (not b in ( Support q ));
A68: ( ( p + q ) . b ) = ( ( p . b ) + ( q . b ) ) by POLYNOM1:15
.= ( ( p . b ) + ( 0. L ) ) by A6,A67,POLYNOM1:def 3
.= ( p . b ) by RLVECT_1:def 4;
A69: (for u being set holds (u in ( ( Support p ) \/ ( Support q ) ) implies u in ( Support ( p + q ) )))
proof
let u being set;
assume A70: u in ( ( Support p ) \/ ( Support q ) );
per cases  by A70,XBOOLE_0:def 3;
suppose u in ( Support p );

then u = b by A1,TARSKI:def 1;
hence thesis by A6,A2,A68,POLYNOM1:def 3;
end;
suppose A71: u in ( Support q );

then reconsider u as (bag of n);
A72: ( q . u ) <> ( 0. L ) by A71,POLYNOM1:def 3;
( ( p + q ) . u ) = ( q . u ) by A3,A67,A71;
hence thesis by A71,A72,POLYNOM1:def 3;
end;
end;
(for u being set holds (u in ( Support ( p + q ) ) implies u in ( ( Support p ) \/ ( Support q ) ))) by A7;
then ( Support ( p + q ) ) = ( { b } \/ ( Support q ) ) by A1,A69,TARSKI:1;
hence ( eval (( p + q ),x) ) = ( ( eval (q,x) ) + ( ( ( p + q ) . b ) * ( eval (b,x) ) ) ) by A3,A67,CKB42:1
.= ( ( eval (q,x) ) + ( eval (p,x) ) ) by A1,A68,CKB38:1;
end;
end;
hence thesis;
end;
