environ
vocabularies CAT_1,STRUCT_0,FUNCT_1,XBOOLE_0,SUBSET_1,ZFMISC_1,TARSKI,MCART_1,RELAT_1,GRAPH_1,PARTFUN1,CAT_2,FUNCOP_1,FUNCT_3,COMMACAT;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,STRUCT_0,GRAPH_1,CAT_1,CAT_2,MCART_1,DOMAIN_1,CKB1,CKB3,CKB4,CKB5;
definitions TARSKI,XBOOLE_0,CAT_1,BINOP_1,FUNCOP_1,GRAPH_1,CKB1,CKB3;
theorems TARSKI,ZFMISC_1,MCART_1,FUNCT_1,FUNCT_2,CAT_1,CAT_2,GRFUNC_1,RELSET_1,FUNCOP_1,CKB1,CKB2,CKB3,CKB6;
schemes FUNCT_2,CLASSES1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,CAT_1,CAT_2,STRUCT_0;
constructors DOMAIN_1,CAT_2,FUNCOP_1,RELSET_1,CKB1,CKB3,CKB4,CKB5;
requirements SUBSET,BOOLE;
begin
reserve C for Category;
reserve D for Category;
reserve E for Category;
reserve c1 for (Object of C);
reserve d1 for (Object of D);
reserve f1 for (Morphism of E);
reserve g for (Morphism of C);
reserve h for (Morphism of D);
reserve F for (Functor of C,E);
reserve G for (Functor of D,E);
reserve o1 for (Element of ( commaObjs (F,G) ));
reserve o2 for (Element of ( commaObjs (F,G) ));
reserve k1 for (Element of ( commaMorphs (F,G) ));
reserve k2 for (Element of ( commaMorphs (F,G) ));
definition
let C;
let D;
let E;
let F;
let G;
let k1;
let k2;
given c1,d1,f1 such that
A1: f1 in ( Hom (( F . c1 ),( G . d1 )) );

assume A2: ( k1 `12 ) = ( k2 `11 );
func k2 * k1 -> (Element of ( commaMorphs (F,G) ))
equals
:Def7: [ [ ( k1 `11 ),( k2 `12 ) ],[ ( ( k2 `21 ) * ( k1 `21 ) ),( ( k2 `22 ) * ( k1 `22 ) ) ] ];
coherence
proof
set k22 = ( ( k2 `22 ) * ( k1 `22 ) );
set k21 = ( ( k2 `21 ) * ( k1 `21 ) );
A3: (( F . ( cod ( k2 `21 ) ) ) = ( cod ( F . ( k2 `21 ) ) ) & ( dom ( F . ( k2 `21 ) ) ) = ( F . ( dom ( k2 `21 ) ) )) by CAT_1:72;
A4: ( cod ( F . ( k1 `21 ) ) ) = ( F . ( cod ( k1 `21 ) ) ) by CAT_1:72;
A5: ( cod ( ( k1 `12 ) `2 ) ) = ( G . ( ( k1 `12 ) `12 ) ) by A1,CKB2:1;
A6: ( dom ( k1 `22 ) ) = ( ( k1 `11 ) `12 ) by A1,CKB6:1;
A7: (( ( ( k2 `12 ) `2 ) * ( F . ( k2 `21 ) ) ) = ( ( G . ( k2 `22 ) ) * ( ( k2 `11 ) `2 ) ) & ( dom ( ( k2 `12 ) `2 ) ) = ( F . ( ( k2 `12 ) `11 ) )) by A1,CKB2:1,CKB6:1;
A8: ( cod ( G . ( k1 `22 ) ) ) = ( G . ( cod ( k1 `22 ) ) ) by CAT_1:72;
A9: (( ( ( k1 `12 ) `2 ) * ( F . ( k1 `21 ) ) ) = ( ( G . ( k1 `22 ) ) * ( ( k1 `11 ) `2 ) ) & ( dom ( ( k1 `12 ) `2 ) ) = ( F . ( ( k1 `12 ) `11 ) )) by A1,CKB2:1,CKB6:1;
A10: ( dom ( G . ( k2 `22 ) ) ) = ( G . ( dom ( k2 `22 ) ) ) by CAT_1:72;
A11: (( cod ( ( k1 `11 ) `2 ) ) = ( G . ( ( k1 `11 ) `12 ) ) & ( dom ( G . ( k1 `22 ) ) ) = ( G . ( dom ( k1 `22 ) ) )) by A1,CKB2:1,CAT_1:72;
A12: ( cod ( k2 `21 ) ) = ( ( k2 `12 ) `11 ) by A1,CKB6:1;
A13: ( commaMorphs (F,G) ) = { [ [ o1,o2 ],[ g,h ] ]: ((((( dom g ) = ( o1 `11 ) & ( cod g ) = ( o2 `11 )) & ( dom h ) = ( o1 `12 )) & ( cod h ) = ( o2 `12 )) & ( ( o2 `2 ) * ( F . g ) ) = ( ( G . h ) * ( o1 `2 ) )) } by A1,CKB3:def 1;
A14: ( dom ( k2 `22 ) ) = ( ( k2 `11 ) `12 ) by A1,CKB6:1;
A15: ( cod ( k1 `22 ) ) = ( ( k1 `12 ) `12 ) by A1,CKB6:1;
then A16: (( dom k22 ) = ( dom ( k1 `22 ) ) & ( cod k22 ) = ( cod ( k2 `22 ) )) by A2,A14,CAT_1:17;
A17: (( dom ( k1 `21 ) ) = ( ( k1 `11 ) `11 ) & ( cod ( k2 `22 ) ) = ( ( k2 `12 ) `12 )) by A1,CKB6:1;
A18: ( cod ( k1 `21 ) ) = ( ( k1 `12 ) `11 ) by A1,CKB6:1;
A19: ( dom ( k2 `21 ) ) = ( ( k2 `11 ) `11 ) by A1,CKB6:1;
then A20: (( dom k21 ) = ( dom ( k1 `21 ) ) & ( cod k21 ) = ( cod ( k2 `21 ) )) by A2,A18,CAT_1:17;
( ( ( k2 `12 ) `2 ) * ( F . k21 ) ) = ( ( ( k2 `12 ) `2 ) * ( ( F . ( k2 `21 ) ) * ( F . ( k1 `21 ) ) ) ) by A2,A18,A19,CAT_1:64
.= ( ( ( G . ( k2 `22 ) ) * ( ( k2 `11 ) `2 ) ) * ( F . ( k1 `21 ) ) ) by A2,A18,A19,A12,A7,A3,A4,CAT_1:18
.= ( ( G . ( k2 `22 ) ) * ( ( G . ( k1 `22 ) ) * ( ( k1 `11 ) `2 ) ) ) by A2,A18,A14,A9,A5,A4,A10,CAT_1:18
.= ( ( ( G . ( k2 `22 ) ) * ( G . ( k1 `22 ) ) ) * ( ( k1 `11 ) `2 ) ) by A2,A6,A15,A14,A10,A11,A8,CAT_1:18
.= ( ( G . k22 ) * ( ( k1 `11 ) `2 ) ) by A2,A15,A14,CAT_1:64;
then [ [ ( k1 `11 ),( k2 `12 ) ],[ ( ( k2 `21 ) * ( k1 `21 ) ),( ( k2 `22 ) * ( k1 `22 ) ) ] ] in ( commaMorphs (F,G) ) by A6,A12,A17,A13,A20,A16;
hence thesis;
end;
end;
