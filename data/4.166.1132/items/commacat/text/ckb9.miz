environ
vocabularies CAT_1,STRUCT_0,FUNCT_1,XBOOLE_0,SUBSET_1,ZFMISC_1,TARSKI,MCART_1,RELAT_1,GRAPH_1,PARTFUN1,CAT_2,FUNCOP_1,FUNCT_3,COMMACAT;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,STRUCT_0,GRAPH_1,CAT_1,CAT_2,MCART_1,DOMAIN_1,CKB1,CKB3,CKB4,CKB5,CKB7,CKB8;
definitions TARSKI,XBOOLE_0,CAT_1,BINOP_1,FUNCOP_1,GRAPH_1,CKB1,CKB3,CKB7,CKB8;
theorems TARSKI,ZFMISC_1,MCART_1,FUNCT_1,FUNCT_2,CAT_1,CAT_2,GRFUNC_1,RELSET_1,FUNCOP_1,CKB1,CKB2,CKB3,CKB6,CKB7,CKB8;
schemes FUNCT_2,CLASSES1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,CAT_1,CAT_2,STRUCT_0;
constructors DOMAIN_1,CAT_2,FUNCOP_1,RELSET_1,CKB1,CKB3,CKB4,CKB5,CKB7,CKB8;
requirements SUBSET,BOOLE;
begin
reserve C for Category;
reserve D for Category;
reserve E for Category;
reserve c1 for (Object of C);
reserve d1 for (Object of D);
reserve f1 for (Morphism of E);
reserve g for (Morphism of C);
reserve h for (Morphism of D);
reserve F for (Functor of C,E);
reserve G for (Functor of D,E);
reserve o for (Element of ( commaObjs (F,G) ));
reserve o1 for (Element of ( commaObjs (F,G) ));
reserve o2 for (Element of ( commaObjs (F,G) ));
reserve k for (Element of ( commaMorphs (F,G) ));
reserve k1 for (Element of ( commaMorphs (F,G) ));
reserve k2 for (Element of ( commaMorphs (F,G) ));
definition
let C;
let D;
let E;
let F;
let G;
given c1,d1,f1 such that
A1: f1 in ( Hom (( F . c1 ),( G . d1 )) );

func F comma G ->  strict Category
means
((((((the carrier of it) = ( commaObjs (F,G) ) & (the carrier' of it) = ( commaMorphs (F,G) )) & (for k holds ( (the Source of it) . k ) = ( k `11 ))) & (for k holds ( (the Target of it) . k ) = ( k `12 ))) & (for o holds ( (the Id of it) . o ) = [ [ o,o ],[ ( id ( o `11 ) ),( id ( o `12 ) ) ] ])) & (the Comp of it) = ( commaComp (F,G) ));
existence
proof
reconsider O = ( commaObjs (F,G) ),M = ( commaMorphs (F,G) ) as non empty set;
defpred P[ (Element of ( commaObjs (F,G) )),set ]
 means
$2 = [ [ $1,$1 ],[ ( id ( $1 `11 ) ),( id ( $1 `12 ) ) ] ];
deffunc G((Element of ( commaMorphs (F,G) ))) = ( $1 `12 );
deffunc F((Element of ( commaMorphs (F,G) ))) = ( $1 `11 );
consider D9 being (Function of ( commaMorphs (F,G) ),( commaObjs (F,G) )) such that A2: ( D9 . k ) = F(k) from FUNCT_2:sch 4;
A3: ( commaMorphs (F,G) ) = { [ [ o1,o2 ],[ g,h ] ]: ((((( dom g ) = ( o1 `11 ) & ( cod g ) = ( o2 `11 )) & ( dom h ) = ( o1 `12 )) & ( cod h ) = ( o2 `12 )) & ( ( o2 `2 ) * ( F . g ) ) = ( ( G . h ) * ( o1 `2 ) )) } by A1,CKB3:def 1;
A4: (ex k st P[ o,k ])
proof
A5: (( dom ( id ( o `12 ) ) ) = ( o `12 ) & ( cod ( id ( o `12 ) ) ) = ( o `12 )) by CAT_1:19;
(( dom ( o `2 ) ) = ( F . ( o `11 ) ) & ( F . ( id ( o `11 ) ) ) = ( id ( F . ( o `11 ) ) )) by A1,CKB2:1,CAT_1:71;
then A6: ( ( o `2 ) * ( F . ( id ( o `11 ) ) ) ) = ( o `2 ) by CAT_1:22;
(( cod ( o `2 ) ) = ( G . ( o `12 ) ) & ( G . ( id ( o `12 ) ) ) = ( id ( G . ( o `12 ) ) )) by A1,CKB2:1,CAT_1:71;
then A7: ( ( G . ( id ( o `12 ) ) ) * ( o `2 ) ) = ( o `2 ) by CAT_1:21;
(( dom ( id ( o `11 ) ) ) = ( o `11 ) & ( cod ( id ( o `11 ) ) ) = ( o `11 )) by CAT_1:19;
then [ [ o,o ],[ ( id ( o `11 ) ),( id ( o `12 ) ) ] ] in ( commaMorphs (F,G) ) by A3,A5,A6,A7;
hence thesis;
end;
consider I being (Function of ( commaObjs (F,G) ),( commaMorphs (F,G) )) such that A8: P[ o,( I . o ) ] from FUNCT_2:sch 3(A4);
reconsider I as (Function of O,M);
reconsider a9 = ( commaComp (F,G) ) as (PartFunc of [: M,M :],M);
consider C9 being (Function of ( commaMorphs (F,G) ),( commaObjs (F,G) )) such that A9: ( C9 . k ) = G(k) from FUNCT_2:sch 4;
reconsider D9,C9 as (Function of M,O);
set FG = CatStr (# O,M,D9,C9,a9,I #);
A10: ( dom (the Comp of FG) ) = { [ k1,k2 ]: ( k1 `11 ) = ( k2 `12 ) } by CKB8:def 1;
A11: (for f,g being (Morphism of FG) holds (for k1 holds (for k2 holds (((f = k1 & g = k2) & ( dom g ) = ( cod f )) implies ( g * f ) = [ [ ( k1 `11 ),( k2 `12 ) ],[ ( ( k2 `21 ) * ( k1 `21 ) ),( ( k2 `22 ) * ( k1 `22 ) ) ] ]))))
proof
let f being (Morphism of FG),g being (Morphism of FG);
let k1;
let k2;
assume that
A12: (f = k1 & g = k2)
and
A13: ( dom g ) = ( cod f );
A14: (( dom g ) = ( k2 `11 ) & ( cod f ) = ( k1 `12 )) by A2,A9,A12;
then A15: [ k2,k1 ] in ( dom a9 ) by A10,A13;
then A16: ( a9 . (k2,k1) ) = ( k2 * k1 ) by CKB8:def 1;
( g * f ) = ( a9 . (g,f) ) by A12,A15,CAT_1:def 1;
hence thesis by A1,A12,A13,A14,A16,CKB7:def 1;
end;
A17: (for b being (Object of FG) holds (((( dom ( id b ) ) = b & ( cod ( id b ) ) = b) & (for f being (Morphism of FG) holds (( cod f ) = b implies ( ( id b ) * f ) = f))) & (for g being (Morphism of FG) holds (( dom g ) = b implies ( g * ( id b ) ) = g))))
proof
let b being (Object of FG);
reconsider b9 = b as (Element of ( commaObjs (F,G) ));
reconsider i = ( id b ) as (Element of ( commaMorphs (F,G) ));
A18: ( I . b9 ) = [ [ b9,b9 ],[ ( id ( b9 `11 ) ),( id ( b9 `12 ) ) ] ] by A8;
then A19: ( ( I . b9 ) `11 ) = b9 by MCART_1:85;
A20: ( ( I . b9 ) `12 ) = b9 by A18,MCART_1:85;
hence (( dom ( id b ) ) = b & ( cod ( id b ) ) = b) by A2,A9,A19;
A21: (( ( I . b9 ) `21 ) = ( id ( b9 `11 ) ) & ( ( I . b9 ) `22 ) = ( id ( b9 `12 ) )) by A18,MCART_1:85;
thus (for f being (Morphism of FG) holds (( cod f ) = b implies ( ( id b ) * f ) = f))
proof
let f being (Morphism of FG);
reconsider f9 = f as (Element of ( commaMorphs (F,G) ));
assume A22: ( cod f ) = b;
then A23: b = ( f `12 ) by A9;
( cod ( f9 `22 ) ) = ( ( f9 `12 ) `12 ) by A1,CKB6:1;
then A24: ( ( id ( b9 `12 ) ) * ( f9 `22 ) ) = ( f9 `22 ) by A23,CAT_1:21;
( cod ( f9 `21 ) ) = ( ( f9 `12 ) `11 ) by A1,CKB6:1;
then A25: ( ( id ( b9 `11 ) ) * ( f9 `21 ) ) = ( f9 `21 ) by A23,CAT_1:21;
( cod f ) = ( dom ( id b ) ) by A2,A19,A22;
hence ( ( id b ) * f ) = [ [ ( f9 `11 ),( i `12 ) ],[ ( ( i `21 ) * ( f9 `21 ) ),( ( i `22 ) * ( f9 `22 ) ) ] ] by A11
.= f by A1,A20,A21,A23,A25,A24,CKB6:1;
end;

let g being (Morphism of FG);
reconsider g9 = g as (Element of ( commaMorphs (F,G) ));
assume A26: ( dom g ) = b;
then A27: b = ( g `11 ) by A2;
( dom ( g9 `22 ) ) = ( ( g9 `11 ) `12 ) by A1,CKB6:1;
then A28: ( ( g9 `22 ) * ( id ( b9 `12 ) ) ) = ( g9 `22 ) by A27,CAT_1:22;
( dom ( g9 `21 ) ) = ( ( g9 `11 ) `11 ) by A1,CKB6:1;
then A29: ( ( g9 `21 ) * ( id ( b9 `11 ) ) ) = ( g9 `21 ) by A27,CAT_1:22;
( dom g ) = ( cod ( id b ) ) by A9,A20,A26;
hence ( g * ( id b ) ) = [ [ ( i `11 ),( g9 `12 ) ],[ ( ( g9 `21 ) * ( i `21 ) ),( ( g9 `22 ) * ( i `22 ) ) ] ] by A11
.= g by A1,A19,A21,A27,A29,A28,CKB6:1;
end;
A30: (for f,g being (Morphism of FG) holds (( dom g ) = ( cod f ) implies (( dom ( g * f ) ) = ( dom f ) & ( cod ( g * f ) ) = ( cod g ))))
proof
let f being (Morphism of FG),g being (Morphism of FG);
assume that
A31: ( dom g ) = ( cod f );
reconsider f1 = f,g1 = g as (Element of ( commaMorphs (F,G) ));
A32: (( dom g ) = ( g1 `11 ) & ( cod f ) = ( f1 `12 )) by A2,A9;
then [ g1,f1 ] in ( dom a9 ) by A10,A31;
then A33: (( g * f ) = ( a9 . (g,f) ) & ( a9 . (g1,f1) ) = ( g1 * f1 )) by CKB8:def 1,CAT_1:def 1;
A34: (( dom f ) = ( f `11 ) & ( cod g ) = ( g `12 )) by A2,A9;
A35: (( dom ( g * f ) ) = ( ( g * f ) `11 ) & ( cod ( g * f ) ) = ( ( g * f ) `12 )) by A2,A9;
( g1 * f1 ) = [ [ ( f1 `11 ),( g1 `12 ) ],[ ( ( g1 `21 ) * ( f1 `21 ) ),( ( g1 `22 ) * ( f1 `22 ) ) ] ] by A1,A31,A32,CKB7:def 1;
hence thesis by A35,A34,A33,MCART_1:85;
end;
A36: (for f,g,h being (Morphism of FG) holds ((( dom h ) = ( cod g ) & ( dom g ) = ( cod f )) implies ( h * ( g * f ) ) = ( ( h * g ) * f )))
proof
let f being (Morphism of FG),g being (Morphism of FG),h being (Morphism of FG);
reconsider f1 = f,g1 = g,h1 = h,gf = ( g * f ),hg = ( h * g ) as (Element of ( commaMorphs (F,G) ));
assume that
A37: ( dom h ) = ( cod g )
and
A38: ( dom g ) = ( cod f );
A39: (( dom g ) = ( g `11 ) & ( cod g ) = ( g `12 )) by A2,A9;
( dom ( h * g ) ) = ( dom g ) by A30,A37;
then A40: ( ( h * g ) * f ) = [ [ ( f `11 ),( hg `12 ) ],[ ( ( hg `21 ) * ( f1 `21 ) ),( ( hg `22 ) * ( f1 `22 ) ) ] ] by A11,A38;
A41: (( dom h ) = ( h `11 ) & ( cod f ) = ( f `12 )) by A2,A9;
( cod ( g * f ) ) = ( cod g ) by A30,A38;
then A42: ( h * ( g * f ) ) = [ [ ( gf `11 ),( h `12 ) ],[ ( ( h1 `21 ) * ( gf `21 ) ),( ( h1 `22 ) * ( gf `22 ) ) ] ] by A11,A37;
A43: (( dom ( h1 `21 ) ) = ( ( h1 `11 ) `11 ) & ( cod ( f1 `21 ) ) = ( ( f1 `12 ) `11 )) by A1,CKB6:1;
A44: (( dom ( h1 `22 ) ) = ( ( h1 `11 ) `12 ) & ( cod ( f1 `22 ) ) = ( ( f1 `12 ) `12 )) by A1,CKB6:1;
A45: (( dom ( g1 `22 ) ) = ( ( g1 `11 ) `12 ) & ( cod ( g1 `22 ) ) = ( ( g1 `12 ) `12 )) by A1,CKB6:1;
A46: ( h * g ) = [ [ ( g `11 ),( h `12 ) ],[ ( ( h1 `21 ) * ( g1 `21 ) ),( ( h1 `22 ) * ( g1 `22 ) ) ] ] by A11,A37;
then A47: (( ( h * g ) `12 ) = ( h `12 ) & ( hg `21 ) = ( ( h1 `21 ) * ( g1 `21 ) )) by MCART_1:85;
A48: ( g * f ) = [ [ ( f `11 ),( g `12 ) ],[ ( ( g1 `21 ) * ( f1 `21 ) ),( ( g1 `22 ) * ( f1 `22 ) ) ] ] by A11,A38;
then A49: (( ( g * f ) `11 ) = ( f `11 ) & ( gf `21 ) = ( ( g1 `21 ) * ( f1 `21 ) )) by MCART_1:85;
A50: ( gf `22 ) = ( ( g1 `22 ) * ( f1 `22 ) ) by A48,MCART_1:85;
A51: ( hg `22 ) = ( ( h1 `22 ) * ( g1 `22 ) ) by A46,MCART_1:85;
(( dom ( g1 `21 ) ) = ( ( g1 `11 ) `11 ) & ( cod ( g1 `21 ) ) = ( ( g1 `12 ) `11 )) by A1,CKB6:1;
then ( ( ( h1 `21 ) * ( g1 `21 ) ) * ( f1 `21 ) ) = ( ( h1 `21 ) * ( ( g1 `21 ) * ( f1 `21 ) ) ) by A37,A38,A39,A43,A41,CAT_1:18;
hence thesis by A37,A38,A39,A41,A45,A44,A42,A40,A47,A49,A51,A50,CAT_1:18;
end;
(for f,g being (Morphism of FG) holds ([ g,f ] in ( dom (the Comp of FG) ) iff ( dom g ) = ( cod f )))
proof
let f being (Morphism of FG),g being (Morphism of FG);
reconsider f1 = f,g1 = g as (Element of ( commaMorphs (F,G) ));
A52: (( dom g ) = ( g1 `11 ) & ( cod f ) = ( f1 `12 )) by A2,A9;
thus ([ g,f ] in ( dom (the Comp of FG) ) implies ( dom g ) = ( cod f ))
proof
assume [ g,f ] in ( dom (the Comp of FG) );
then consider k1,k2 such that A53: [ g,f ] = [ k1,k2 ] and A54: ( k1 `11 ) = ( k2 `12 ) by A10;
g = k1 by A53,ZFMISC_1:27;
hence thesis by A52,A53,A54,ZFMISC_1:27;
end;

thus thesis by A10,A52;
end;
then reconsider FG as  strict Category by A30,A36,A17,CAT_1:10;
take FG;
thus thesis by A2,A9,A8;
end;
uniqueness
proof
let E1 being  strict Category,E2 being  strict Category;
assume that
A55: (the carrier of E1) = ( commaObjs (F,G) )
and
A56: (the carrier' of E1) = ( commaMorphs (F,G) )
and
A57: (for k holds ( (the Source of E1) . k ) = ( k `11 ))
and
A58: (for k holds ( (the Target of E1) . k ) = ( k `12 ))
and
A59: (for o holds ( (the Id of E1) . o ) = [ [ o,o ],[ ( id ( o `11 ) ),( id ( o `12 ) ) ] ])
and
A60: (the Comp of E1) = ( commaComp (F,G) )
and
A61: ((the carrier of E2) = ( commaObjs (F,G) ) & (the carrier' of E2) = ( commaMorphs (F,G) ))
and
A62: (for k holds ( (the Source of E2) . k ) = ( k `11 ))
and
A63: (for k holds ( (the Target of E2) . k ) = ( k `12 ))
and
A64: (for o holds ( (the Id of E2) . o ) = [ [ o,o ],[ ( id ( o `11 ) ),( id ( o `12 ) ) ] ])
and
A65: (the Comp of E2) = ( commaComp (F,G) );
now
let x being (Element of (the carrier' of E1));
thus ( (the Target of E1) . x ) = ( x `12 ) by A56,A58
.= ( (the Target of E2) . x ) by A56,A63;
end;
then A66: (the Target of E1) = (the Target of E2) by A55,A56,A61,FUNCT_2:63;
A67:now
let x being (Object of E1);
reconsider o = x as (Element of ( commaObjs (F,G) )) by A55;
thus ( (the Id of E1) . x ) = [ [ o,o ],[ ( id ( o `11 ) ),( id ( o `12 ) ) ] ] by A59
.= ( (the Id of E2) . x ) by A64;
end;
now
let x being (Element of (the carrier' of E1));
thus ( (the Source of E1) . x ) = ( x `11 ) by A56,A57
.= ( (the Source of E2) . x ) by A56,A62;
end;
then (the Source of E1) = (the Source of E2) by A55,A56,A61,FUNCT_2:63;
hence thesis by A55,A56,A60,A61,A65,A66,A67,FUNCT_2:63;
end;
end;
