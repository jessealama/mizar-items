environ
vocabularies CAT_1,STRUCT_0,FUNCT_1,XBOOLE_0,SUBSET_1,ZFMISC_1,TARSKI,MCART_1,RELAT_1,GRAPH_1,PARTFUN1,CAT_2,FUNCOP_1,FUNCT_3,COMMACAT;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,STRUCT_0,GRAPH_1,CAT_1,CAT_2,MCART_1,DOMAIN_1,CKB1,CKB3,CKB4;
definitions TARSKI,XBOOLE_0,CAT_1,BINOP_1,FUNCOP_1,GRAPH_1,CKB1,CKB3;
theorems TARSKI,ZFMISC_1,MCART_1,FUNCT_1,FUNCT_2,CAT_1,CAT_2,GRFUNC_1,RELSET_1,FUNCOP_1,CKB1,CKB2,CKB3;
schemes FUNCT_2,CLASSES1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,CAT_1,CAT_2,STRUCT_0;
constructors DOMAIN_1,CAT_2,FUNCOP_1,RELSET_1,CKB1,CKB3,CKB4;
requirements SUBSET,BOOLE;
begin
reserve C for Category;
reserve D for Category;
reserve E for Category;
reserve F for (Functor of C,E);
reserve G for (Functor of D,E);
reserve k for (Element of ( commaMorphs (F,G) ));
definition
let C;
let D;
let E;
let F;
let G;
let k;
redefine func k `12 -> (Element of ( commaObjs (F,G) ));

coherence
proof
thus ( k `12 ) is (Element of ( commaObjs (F,G) ));
end;
end;
