environ
vocabularies NUMBERS,ORDINAL1,XCMPLX_0,INT_2,NAT_3,XXREAL_0,XBOOLE_0,NEWTON,ARYTM_3,ARYTM_1,NAT_1,RELAT_1,CARD_1,ABIAN,SUBSET_1,FINSET_1,FINSEQ_1,FUNCT_1,FINSEQ_3,TARSKI,CARD_3,ORDINAL4,FUNCT_2,FINSEQ_2,FUNCOP_1,MOEBIUS1,COMPLEX1,INT_1,REALSET1,SQUARE_1,INT_5,ZFMISC_1,POWER,REAL_1,PRE_POLY,UPROOTS,BHSP_5,CLASSES1,XXREAL_2,MEMBERED,PARTFUN1,RFUNCT_3,BINOP_2,PROB_1,WAYBEL29,MSSUBFAM,TOPGEN_1,EULER_1,NAT_5;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,FUNCOP_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,MCART_1,FUNCT_2,ORDINAL1,CARD_1,NUMBERS,FINSEQ_1,FINSEQ_3,INT_1,INT_2,NAT_1,NAT_D,RVSUM_1,REAL_1,SQUARE_1,XXREAL_0,NEWTON,ABIAN,PEPIN,INT_5,MEMBERED,FINSEQOP,ENUMSET1,FINSET_1,COMPLEX1,NAT_3,DOMAIN_1,POWER,MOEBIUS1,BHSP_5,EULER_1,WSIERP_1,BINOP_1,RECDEF_1,EXTREAL1,UPROOTS,BINOP_2,FUNCT_3,RFUNCT_3,XXREAL_2,CLASSES1,PRE_POLY;
definitions TARSKI,NEWTON,FINSEQ_1,FINSEQ_3,EULER_1,MOEBIUS1;
theorems XBOOLE_0,XBOOLE_1,XXREAL_0,XREAL_1,XCMPLX_1,NAT_1,NAT_D,RELAT_1,FUNCT_1,INT_1,INT_2,INT_4,INT_5,NEWTON,EULER_1,EULER_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_5,RVSUM_1,WSIERP_1,ORDINAL1,IDEA_1,INT_6,INT_3,FIB_NUM3,POWER,PEPIN,SQUARE_1,CARD_1,CARD_2,ZFMISC_1,ALGSEQ_1,FINSEQ_4,JGRAPH_1,TARSKI,COMPLEX1,ABSVALUE,MOEBIUS1,CARD_3,MESFUNC3,FUNCT_2,EXTREAL1,FINSEQOP,FUNCOP_1,BAGORDER,RELSET_1,WELLORD2,PARTFUN1,BHSP_5,UPROOTS,RFINSEQ,BINOP_2,BINOP_1,FUNCT_3,RFUNCT_3,NAT_4,NAT_3,RADIX_1,XREAL_0,ABIAN,ENUMSET1,MONOID_1,CLASSES1,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes NAT_1,FUNCT_1,FUNCT_2,BINOP_2,FINSEQ_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FINSET_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,RVSUM_1,VALUED_0,NEWTON,ABIAN,FUNCT_1,ZFMISC_1,SUBSET_1,MOEBIUS1,FUNCT_2,PRE_CIRC,DYNKIN,RELAT_1,SQUARE_1,CARD_1,PREPOWER,NAT_3,UPROOTS,XXREAL_2,PRE_POLY;
constructors WELLORD2,REAL_1,NAT_D,BINOP_2,WSIERP_1,ABIAN,EULER_1,PEPIN,INT_5,RECDEF_1,MOEBIUS1,FINSEQOP,EXTREAL1,UPROOTS,NAT_3,REALSET1,POWER,BHSP_5,CALCUL_2,PROB_3,SUPINF_1,RFUNCT_3,XXREAL_2,CLASSES1,PBOOLE,BINOP_1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for  natural number;
reserve n0 for non zero  natural number;
reserve m0 for non zero  natural number;
theorem
Th17: (n0,m0 are_relative_prime  implies ( k gcd ( n0 * m0 ) ) = ( ( k gcd n0 ) * ( k gcd m0 ) ))
proof
assume A1: n0,m0 are_relative_prime ;
per cases ;
suppose A2: k = ( 0 );

hence ( k gcd ( n0 * m0 ) ) = ( abs ( n0 * m0 ) ) by WSIERP_1:8
.= ( ( abs n0 ) * ( abs m0 ) ) by COMPLEX1:65
.= ( ( k gcd n0 ) * ( abs m0 ) ) by A2,WSIERP_1:8
.= ( ( k gcd n0 ) * ( k gcd m0 ) ) by A2,WSIERP_1:8;
end;
suppose k <> ( 0 );

then reconsider k9 = k as non zero  natural number;
reconsider a = ( k gcd ( n0 * m0 ) ) as non empty Nat by INT_2:5;
reconsider b1 = ( k gcd n0 ),b2 = ( k gcd m0 ) as non empty Nat by INT_2:5;
(( k gcd n0 ) <> ( 0 ) & ( k gcd m0 ) <> ( 0 )) by INT_2:5;
then reconsider b = ( ( k gcd n0 ) * ( k gcd m0 ) ) as non empty Nat;
(for p being (Element of ( NAT )) holds (p is  prime implies ( p |-count a ) = ( p |-count b )))
proof
let p being (Element of ( NAT ));
assume p is  prime;
then reconsider p9 = p as Prime;
A3: ( p9 |-count a ) = ( min (( p9 |-count k9 ),( p9 |-count ( n0 * m0 ) )) ) by CKB1:1
.= ( min (( p9 |-count k ),( ( p9 |-count n0 ) + ( p9 |-count m0 ) )) ) by NAT_3:28;
( n0 gcd m0 ) = 1 by A1,INT_2:def 3;
then (p9 > 1 & ( p9 |-count 1 ) = ( min (( p9 |-count n0 ),( p9 |-count m0 )) )) by CKB1:1,INT_2:def 4;
then A4: ( min (( p9 |-count n0 ),( p9 |-count m0 )) ) = ( 0 ) by NAT_3:21;
A5: ( p9 |-count b ) = ( ( p9 |-count b1 ) + ( p9 |-count b2 ) ) by NAT_3:28
.= ( ( min (( p9 |-count k9 ),( p9 |-count n0 )) ) + ( p9 |-count b2 ) ) by CKB1:1
.= ( ( min (( p9 |-count k9 ),( p9 |-count n0 )) ) + ( min (( p9 |-count k9 ),( p9 |-count m0 )) ) ) by CKB1:1;
per cases  by A4,XXREAL_0:15;
suppose A6: ( p9 |-count n0 ) = ( 0 );

then ( min (( p9 |-count k ),( p9 |-count n0 )) ) = ( p9 |-count n0 ) by XXREAL_0:def 9;
hence ( p |-count a ) = ( p |-count b ) by A3,A5,A6;
end;
suppose A7: ( p9 |-count m0 ) = ( 0 );

then ( min (( p9 |-count k ),( p9 |-count m0 )) ) = ( p9 |-count m0 ) by XXREAL_0:def 9;
hence ( p |-count a ) = ( p |-count b ) by A3,A5,A7;
end;
end;
hence ( k gcd ( n0 * m0 ) ) = ( ( k gcd n0 ) * ( k gcd m0 ) ) by NAT_4:21;
end;
end;
