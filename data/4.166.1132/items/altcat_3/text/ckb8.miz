environ
vocabularies ALTCAT_1,XBOOLE_0,CAT_1,RELAT_1,CAT_3,BINOP_1,RELAT_2,FUNCT_1,FUNCOP_1,TARSKI,FUNCT_2,SUBSET_1,SETFAM_1,ZFMISC_1,ALTCAT_3;
notations TARSKI,ZFMISC_1,XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,STRUCT_0,ALTCAT_1,CKB1,CKB2,CKB3,CKB4,CKB6;
definitions TARSKI,CKB1,CKB3,CKB4,CKB6;
theorems FUNCOP_1,RELAT_1,FUNCT_2,ZFMISC_1,ALTCAT_1,TARSKI,FUNCT_1,REALSET1,XBOOLE_0,XBOOLE_1,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7;
schemes FUNCT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,RELSET_1,ALTCAT_1,ZFMISC_1;
constructors SETFAM_1,REALSET1,ALTCAT_1,RELSET_1,CKB1,CKB3,CKB4,CKB6;
requirements SUBSET,BOOLE;
begin
theorem
Th3: (for C being category holds (for o1,o2 being (object of C) holds ((<^ o1,o2 ^> <> ( {} ) & <^ o2,o1 ^> <> ( {} )) implies (for A being (Morphism of o1,o2) holds ((A is  retraction & A is  coretraction) implies ( ( A " ) " ) = A)))))
proof
let C being category;
let o1 being (object of C);
let o2 being (object of C);
assume that
A1: <^ o1,o2 ^> <> ( {} )
and
A2: <^ o2,o1 ^> <> ( {} );
let A being (Morphism of o1,o2);
assume A3: (A is  retraction & A is  coretraction);
then ( A " ) is_left_inverse_of A by A1,A2,CKB6:def 1;
then A4: ( A " ) is  retraction by CKB3:def 1;
A5: ( A " ) is_right_inverse_of A by A1,A2,A3,CKB6:def 1;
then ( A " ) is  coretraction by CKB4:def 1;
then A6: ( ( A " ) " ) is_right_inverse_of ( A " ) by A1,A2,A4,CKB6:def 1;
thus ( ( A " ) " ) = ( ( idm o2 ) * ( ( A " ) " ) ) by A1,ALTCAT_1:20
.= ( ( A * ( A " ) ) * ( ( A " ) " ) ) by A5,CKB1:def 1
.= ( A * ( ( A " ) * ( ( A " ) " ) ) ) by A1,A2,ALTCAT_1:21
.= ( A * ( idm o1 ) ) by A6,CKB1:def 1
.= A by A1,ALTCAT_1:def 17;
end;
