environ
vocabularies ALTCAT_1,XBOOLE_0,CAT_1,RELAT_1,CAT_3,BINOP_1,RELAT_2,FUNCT_1,FUNCOP_1,TARSKI,FUNCT_2,SUBSET_1,SETFAM_1,ZFMISC_1,ALTCAT_3;
notations TARSKI,ZFMISC_1,XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,STRUCT_0,ALTCAT_1,CKB1,CKB2,CKB3,CKB4;
definitions TARSKI,CKB1,CKB3,CKB4;
theorems FUNCOP_1,RELAT_1,FUNCT_2,ZFMISC_1,ALTCAT_1,TARSKI,FUNCT_1,REALSET1,XBOOLE_0,XBOOLE_1,CKB1,CKB3,CKB4,CKB5;
schemes FUNCT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,RELSET_1,ALTCAT_1,ZFMISC_1;
constructors SETFAM_1,REALSET1,ALTCAT_1,RELSET_1,CKB1,CKB3,CKB4;
requirements SUBSET,BOOLE;
begin
definition
let C being category;
let o1 being (object of C);
let o2 being (object of C);
let A being (Morphism of o1,o2);
assume that
A1: <^ o1,o2 ^> <> ( {} )
and
A2: <^ o2,o1 ^> <> ( {} );
assume that
A3: A is  retraction  coretraction;
func A " -> (Morphism of o2,o1) means 
:Def4: (it is_left_inverse_of A & it is_right_inverse_of A);
existence
proof
consider B1 being (Morphism of o2,o1) such that A4: B1 is_right_inverse_of A by A3,CKB3:def 1;
take B1;
consider B2 being (Morphism of o2,o1) such that A5: B2 is_left_inverse_of A by A3,CKB4:def 1;
B1 = ( ( idm o1 ) * B1 ) by A2,ALTCAT_1:20
.= ( ( B2 * A ) * B1 ) by A5,CKB1:def 1
.= ( B2 * ( A * B1 ) ) by A1,A2,ALTCAT_1:21
.= ( B2 * ( idm o2 ) ) by A4,CKB1:def 1
.= B2 by A2,ALTCAT_1:def 17;
hence thesis by A4,A5;
end;
uniqueness
proof
let M1 being (Morphism of o2,o1);
let M2 being (Morphism of o2,o1);
assume that
A6: M1 is_left_inverse_of A
and
M1 is_right_inverse_of A
and
M2 is_left_inverse_of A
and
A7: M2 is_right_inverse_of A;
thus M1 = ( M1 * ( idm o2 ) ) by A2,ALTCAT_1:def 17
.= ( M1 * ( A * M2 ) ) by A7,CKB1:def 1
.= ( ( M1 * A ) * M2 ) by A1,A2,ALTCAT_1:21
.= ( ( idm o1 ) * M2 ) by A6,CKB1:def 1
.= M2 by A2,ALTCAT_1:20;
end;
end;
