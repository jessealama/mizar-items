environ
vocabularies ALTCAT_1,XBOOLE_0,CAT_1,RELAT_1,CAT_3,BINOP_1,RELAT_2,FUNCT_1,FUNCOP_1,TARSKI,FUNCT_2,SUBSET_1,SETFAM_1,ZFMISC_1,ALTCAT_3;
notations TARSKI,ZFMISC_1,XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,STRUCT_0,ALTCAT_1,CKB1,CKB2,CKB3,CKB4,CKB6,CKB10,CKB14,CKB16,CKB17;
definitions TARSKI,CKB1,CKB3,CKB4,CKB6,CKB10,CKB14,CKB16,CKB17;
theorems FUNCOP_1,RELAT_1,FUNCT_2,ZFMISC_1,ALTCAT_1,TARSKI,FUNCT_1,REALSET1,XBOOLE_0,XBOOLE_1,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes FUNCT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,RELSET_1,ALTCAT_1,ZFMISC_1;
constructors SETFAM_1,REALSET1,ALTCAT_1,RELSET_1,CKB1,CKB3,CKB4,CKB6,CKB10,CKB14,CKB16,CKB17;
requirements SUBSET,BOOLE;
begin
theorem
Th20: (for C being category holds (for o1,o2 being (object of C) holds (for A being (Morphism of o1,o2) holds ((((A is  retraction & A is  mono) & <^ o1,o2 ^> <> ( {} )) & <^ o2,o1 ^> <> ( {} )) implies A is  iso))))
proof
let C being category;
let o1 being (object of C);
let o2 being (object of C);
let A being (Morphism of o1,o2);
assume that
A1: A is  retraction
and
A2: A is  mono
and
A3: <^ o1,o2 ^> <> ( {} )
and
A4: <^ o2,o1 ^> <> ( {} );
consider B being (Morphism of o2,o1) such that A5: B is_right_inverse_of A by A1,CKB3:def 1;
( ( A * B ) * A ) = ( ( idm o2 ) * A ) by A5,CKB1:def 1;
then ( A * ( B * A ) ) = ( ( idm o2 ) * A ) by A3,A4,ALTCAT_1:21;
then ( A * ( B * A ) ) = A by A3,ALTCAT_1:20;
then A6: (<^ o1,o1 ^> <> ( {} ) & ( A * ( B * A ) ) = ( A * ( idm o1 ) )) by A3,ALTCAT_1:19,ALTCAT_1:def 17;
then ( B * A ) = ( idm o1 ) by A2,CKB16:def 1;
then A7: B is_left_inverse_of A by CKB1:def 1;
then A8: A is  coretraction by CKB4:def 1;
then A9: ( A * ( A " ) ) = ( A * B ) by A1,A3,A4,A5,A7,CKB6:def 1
.= ( idm o2 ) by A5,CKB1:def 1;
( ( A " ) * A ) = ( B * A ) by A1,A3,A4,A5,A7,A8,CKB6:def 1
.= ( idm o1 ) by A2,A6,CKB16:def 1;
hence thesis by A9,CKB10:def 1;
end;
