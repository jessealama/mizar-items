environ
vocabularies ALTCAT_1,XBOOLE_0,CAT_1,RELAT_1,CAT_3,BINOP_1,RELAT_2,FUNCT_1,FUNCOP_1,TARSKI,FUNCT_2,SUBSET_1,SETFAM_1,ZFMISC_1,ALTCAT_3;
notations TARSKI,ZFMISC_1,XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,STRUCT_0,ALTCAT_1,CKB1,CKB2,CKB3,CKB4,CKB6,CKB10,CKB14,CKB16,CKB17,CKB41,CKB44;
definitions TARSKI,CKB1,CKB3,CKB4,CKB6,CKB10,CKB14,CKB16,CKB17,CKB41,CKB44;
theorems FUNCOP_1,RELAT_1,FUNCT_2,ZFMISC_1,ALTCAT_1,TARSKI,FUNCT_1,REALSET1,XBOOLE_0,XBOOLE_1,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB41,CKB42,CKB43,CKB44;
schemes FUNCT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,RELSET_1,ALTCAT_1,ZFMISC_1,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40;
constructors SETFAM_1,REALSET1,ALTCAT_1,RELSET_1,CKB1,CKB3,CKB4,CKB6,CKB10,CKB14,CKB16,CKB17,CKB41,CKB44;
requirements SUBSET,BOOLE;
begin
theorem
(for C being AltGraph holds (for o being (object of C) holds (o is  terminal iff (for o1 being (object of C) holds (ex M being (Morphism of o1,o) st (M in <^ o1,o ^> & (for M1 being (Morphism of o1,o) holds (M1 in <^ o1,o ^> implies M = M1))))))))
proof
let C being AltGraph;
let o being (object of C);
thus (o is  terminal implies (for o1 being (object of C) holds (ex M being (Morphism of o1,o) st (M in <^ o1,o ^> & (for M1 being (Morphism of o1,o) holds (M1 in <^ o1,o ^> implies M = M1))))))
proof
assume A1: o is  terminal;
let o1 being (object of C);
consider M being (Morphism of o1,o) such that A2: M in <^ o1,o ^> and A3: <^ o1,o ^> is  trivial by A1,CKB44:def 1;
(ex i being set st <^ o1,o ^> = { i }) by A2,A3,ZFMISC_1:131;
then <^ o1,o ^> = { M } by TARSKI:def 1;
then (for M1 being (Morphism of o1,o) holds (M1 in <^ o1,o ^> implies M = M1)) by TARSKI:def 1;
hence thesis by A2;
end;

assume A4: (for o1 being (object of C) holds (ex M being (Morphism of o1,o) st (M in <^ o1,o ^> & (for M1 being (Morphism of o1,o) holds (M1 in <^ o1,o ^> implies M = M1)))));
let o1 being (object of C);
consider M being (Morphism of o1,o) such that A5: M in <^ o1,o ^> and A6: (for M1 being (Morphism of o1,o) holds (M1 in <^ o1,o ^> implies M = M1)) by A4;
A7: <^ o1,o ^> c= { M }
proof
let x being set;
assume A8: x in <^ o1,o ^>;
then reconsider M1 = x as (Morphism of o1,o);
M1 = M by A6,A8;
hence thesis by TARSKI:def 1;
end;
{ M } c= <^ o1,o ^>
proof
let x being set;
assume x in { M };
hence thesis by A5,TARSKI:def 1;
end;
then <^ o1,o ^> = { M } by A7,XBOOLE_0:def 10;
hence thesis;
end;
