environ
vocabularies ALTCAT_1,XBOOLE_0,CAT_1,RELAT_1,CAT_3,BINOP_1,RELAT_2,FUNCT_1,FUNCOP_1,TARSKI,FUNCT_2,SUBSET_1,SETFAM_1,ZFMISC_1,ALTCAT_3;
notations TARSKI,ZFMISC_1,XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,STRUCT_0,ALTCAT_1,CKB1,CKB2,CKB3,CKB4,CKB6,CKB10,CKB14,CKB16,CKB17;
definitions TARSKI,CKB1,CKB3,CKB4,CKB6,CKB10,CKB14,CKB16,CKB17;
theorems FUNCOP_1,RELAT_1,FUNCT_2,ZFMISC_1,ALTCAT_1,TARSKI,FUNCT_1,REALSET1,XBOOLE_0,XBOOLE_1,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes FUNCT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,RELSET_1,ALTCAT_1,ZFMISC_1;
constructors SETFAM_1,REALSET1,ALTCAT_1,RELSET_1,CKB1,CKB3,CKB4,CKB6,CKB10,CKB14,CKB16,CKB17;
requirements SUBSET,BOOLE;
begin
theorem
(for C being  associative  transitive non  empty AltCatStr holds (for o1,o2,o3 being (object of C) holds ((<^ o1,o2 ^> <> ( {} ) & <^ o2,o3 ^> <> ( {} )) implies (for A being (Morphism of o1,o2) holds (for B being (Morphism of o2,o3) holds (( B * A ) is  mono implies A is  mono))))))
proof
let C being  associative  transitive non  empty AltCatStr;
let o1 being (object of C);
let o2 being (object of C);
let o3 being (object of C);
assume A1: (<^ o1,o2 ^> <> ( {} ) & <^ o2,o3 ^> <> ( {} ));
let A being (Morphism of o1,o2);
let B being (Morphism of o2,o3);
assume A2: ( B * A ) is  mono;
let o being (object of C);
assume A3: <^ o,o1 ^> <> ( {} );
let M1 being (Morphism of o,o1);
let M2 being (Morphism of o,o1);
assume A4: ( A * M1 ) = ( A * M2 );
(( ( B * A ) * M1 ) = ( B * ( A * M1 ) ) & ( ( B * A ) * M2 ) = ( B * ( A * M2 ) )) by A1,A3,ALTCAT_1:21;
hence thesis by A2,A3,A4,CKB16:def 1;
end;
