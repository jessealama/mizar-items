environ
vocabularies CONLAT_1,STRUCT_0,QC_LANG1,SUBSET_1,LATTICES,XXREAL_2,PBOOLE,EQREL_1,XBOOLE_0,SETFAM_1,FUNCT_1,TARSKI,CAT_1,LATTICE3,ZFMISC_1,RELAT_1,FUNCT_3,LATTICE6,REWRITE1,GROUP_6,WELLORD1,FUNCT_2,MCART_1,FILTER_1,XXREAL_0,ORDERS_2,CONLAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,MCART_1,FUNCT_1,DOMAIN_1,RELSET_1,ORDERS_2,STRUCT_0,LATTICE2,LATTICE3,LATTICE6,PARTFUN1,FUNCT_2,LATTICES,LATTICE4,CONLAT_1,CKB1,CKB7,CKB8;
definitions TARSKI,LATTICE3,VECTSP_8,LATTICE6,FUNCT_1,XBOOLE_0,SUBSET_1,CKB1,CKB7,CKB8;
theorems TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,LATTICE4,LATTICES,LATTICE3,LATTICE6,MCART_1,SETFAM_1,FUNCT_2,FILTER_1,LATTICE2,ORDERS_2,CONLAT_1,XBOOLE_0,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11;
schemes FUNCT_2;
registrations SUBSET_1,FUNCT_1,FUNCT_2,STRUCT_0,LATTICES,LATTICE2,LATTICE3,CONLAT_1,RELSET_1,CKB2;
constructors SETFAM_1,DOMAIN_1,LATTICE2,LATTICE4,CONLAT_1,LATTICE6,RELSET_1,CKB1,CKB7,CKB8;
requirements SUBSET,BOOLE;
begin
theorem
(for C being FormalContext holds (for D being non empty (Subset of ( ConceptLattice C )) holds ((the Extent of ( "/\" (D,C) )) = ( meet { (the Extent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } ) & (the Intent of ( "/\" (D,C) )) = ( ( ObjectDerivation C ) . ( ( AttributeDerivation C ) . ( union { (the Intent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } ) ) ))))
proof
let C being FormalContext;
let D being non empty (Subset of ( ConceptLattice C ));
set A = ( ( ObjectDerivation C ) . ( ( AttributeDerivation C ) . ( union { (the Intent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } ) ) );
set O9 = ( ( AttributeDerivation C ) . ( union { (the Intent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } ) );
set y = the (Element of D);
{ (the Intent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } c= ( bool (the carrier' of C) )
proof
let x being set;
assume x in { (the Intent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D };
then (ex E being (Subset of (the carrier of C)) st (ex I being (Subset of (the carrier' of C)) st (x = (the Intent of ConceptStr (# E,I #)) & ConceptStr (# E,I #) in D)));
hence thesis;
end;
then reconsider AA = { (the Intent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } as (Subset-Family of (the carrier' of C));
A c= (the carrier' of C)
proof
set u = ( union { (the Intent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } );
u c= (the carrier' of C)
proof
let x being set;
assume x in u;
then consider Y being set such that A1: x in Y and A2: Y in { (the Intent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } by TARSKI:def 4;
(ex E being (Subset of (the carrier of C)) st (ex I being (Subset of (the carrier' of C)) st (Y = (the Intent of ConceptStr (# E,I #)) & ConceptStr (# E,I #) in D))) by A2;
hence thesis by A1;
end;
then reconsider u as (Subset of (the carrier' of C));
let x being set;
A3: ( ( ObjectDerivation C ) . ( ( AttributeDerivation C ) . u ) ) is (Element of ( bool (the carrier' of C) ));
assume x in A;
hence thesis by A3;
end;
then reconsider a = A as (Subset of (the carrier' of C));
A4: ( ConceptLattice C ) = LattStr (# ( B-carrier C ),( B-join C ),( B-meet C ) #) by CONLAT_1:def 20;
A5: (for x being set holds (x in D implies (x is  strict  strict (FormalConcept of C) & (ex E being (Subset of (the carrier of C)) st (ex I being (Subset of (the carrier' of C)) st x = ConceptStr (# E,I #))))))
proof
let x being set;
assume x in D;
then x is  strict  strict (FormalConcept of C) by A4,CONLAT_1:31;
hence thesis;
end;
then (ex E9 being (Subset of (the carrier of C)) st (ex I9 being (Subset of (the carrier' of C)) st y = ConceptStr (# E9,I9 #)));
then (the Intent of y) in { (the Intent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D };
then reconsider AA as non empty (Subset-Family of (the carrier' of C));
A6: { (the Extent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } c= { ( ( AttributeDerivation C ) . A9 ) where A9 is (Subset of (the carrier' of C)): A9 in { (the Intent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } }
proof
let x being set;
assume x in { (the Extent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D };
then consider E being (Subset of (the carrier of C)),I being (Subset of (the carrier' of C)) such that A7: x = (the Extent of ConceptStr (# E,I #)) and A8: ConceptStr (# E,I #) in D;
ConceptStr (# E,I #) is (FormalConcept of C) by A5,A8;
then A9: x = ( ( AttributeDerivation C ) . (the Intent of ConceptStr (# E,I #)) ) by A7,CONLAT_1:def 10;
(the Intent of ConceptStr (# E,I #)) in { (the Intent of ConceptStr (# EE,II #)) where EE is (Subset of (the carrier of C)),II is (Subset of (the carrier' of C)): ConceptStr (# EE,II #) in D } by A8;
hence thesis by A9;
end;
{ ( ( AttributeDerivation C ) . A9 ) where A9 is (Subset of (the carrier' of C)): A9 in { (the Intent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } } c= { (the Extent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D }
proof
let x being set;
assume x in { ( ( AttributeDerivation C ) . A9 ) where A9 is (Subset of (the carrier' of C)): A9 in { (the Intent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } };
then consider A9 being (Subset of (the carrier' of C)) such that A10: x = ( ( AttributeDerivation C ) . A9 ) and A11: A9 in { (the Intent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D };
consider E being (Subset of (the carrier of C)),I being (Subset of (the carrier' of C)) such that A12: A9 = (the Intent of ConceptStr (# E,I #)) and A13: ConceptStr (# E,I #) in D by A11;
ConceptStr (# E,I #) is (FormalConcept of C) by A5,A13;
then x = (the Extent of ConceptStr (# E,I #)) by A10,A12,CONLAT_1:def 10;
hence thesis by A13;
end;
then A14: { ( ( AttributeDerivation C ) . A9 ) where A9 is (Subset of (the carrier' of C)): A9 in { (the Intent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } } = { (the Extent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } by A6,XBOOLE_0:def 10;
A15: O9 = ( meet { ( ( AttributeDerivation C ) . A9 ) where A9 is (Subset of (the carrier' of C)): A9 in AA } ) by CKB5:1;
O9 c= (the carrier of C)
proof
set y = the (Element of D);
set Y = the (Element of { (the Extent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D });
let x being set;
(ex E9 being (Subset of (the carrier of C)) st (ex I9 being (Subset of (the carrier' of C)) st y = ConceptStr (# E9,I9 #))) by A5;
then A16: (the Extent of y) in { (the Extent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D };
then Y in { (the Extent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D };
then A17: (ex E1 being (Subset of (the carrier of C)) st (ex I1 being (Subset of (the carrier' of C)) st (Y = (the Extent of ConceptStr (# E1,I1 #)) & ConceptStr (# E1,I1 #) in D)));
assume x in O9;
then x in Y by A15,A14,A16,SETFAM_1:def 1;
hence thesis by A17;
end;
then reconsider o = O9 as (Subset of (the carrier of C));
( union { (the Intent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } ) c= (the carrier' of C)
proof
let x being set;
assume x in ( union { (the Intent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } );
then consider Y being set such that A18: x in Y and A19: Y in { (the Intent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } by TARSKI:def 4;
(ex E being (Subset of (the carrier of C)) st (ex I being (Subset of (the carrier' of C)) st (Y = (the Intent of ConceptStr (# E,I #)) & ConceptStr (# E,I #) in D))) by A19;
hence thesis by A18;
end;
then reconsider CP9 = ConceptStr (# o,a #) as  strict (FormalConcept of C) by CONLAT_1:21;
reconsider CP = CP9 as (Element of ( ConceptLattice C )) by A4,CONLAT_1:31;
A20: (the Extent of ( CP @ )) = ( meet { (the Extent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } ) by A15,A14,CONLAT_1:def 21;
A21: (for r being (Element of ( ConceptLattice C )) holds (r is_less_than D implies r [= CP))
proof
let r being (Element of ( ConceptLattice C ));
assume A22: r is_less_than D;
A23: (for q being (Element of ( ConceptLattice C )) holds (q in D implies (the Extent of ( r @ )) c= (the Extent of ( q @ ))))
proof
let q being (Element of ( ConceptLattice C ));
assume q in D;
then r [= q by A22,LATTICE3:def 16;
then ( r @ ) is-SubConcept-of ( q @ ) by CONLAT_1:43;
hence thesis by CONLAT_1:def 16;
end;
(the Extent of ( r @ )) c= ( meet { (the Extent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } )
proof
set y = the (Element of D);
let x being set;
assume A24: x in (the Extent of ( r @ ));
A25: (for Y being set holds (Y in { (the Extent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D } implies x in Y))
proof
let Y being set;
assume Y in { (the Extent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D };
then consider Ey being (Subset of (the carrier of C)),Iy being (Subset of (the carrier' of C)) such that A26: Y = (the Extent of ConceptStr (# Ey,Iy #)) and A27: ConceptStr (# Ey,Iy #) in D;
reconsider C1 = ConceptStr (# Ey,Iy #) as (Element of ( ConceptLattice C )) by A27;
(the Extent of ( r @ )) c= (the Extent of ( C1 @ )) by A23,A27;
then x in (the Extent of ( C1 @ )) by A24;
hence thesis by A26,CONLAT_1:def 21;
end;
(ex E9 being (Subset of (the carrier of C)) st (ex I9 being (Subset of (the carrier' of C)) st y = ConceptStr (# E9,I9 #))) by A5;
then (the Extent of y) in { (the Extent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D };
hence thesis by A25,SETFAM_1:def 1;
end;
then ( r @ ) is-SubConcept-of ( CP @ ) by A20,CONLAT_1:def 16;
hence thesis by CONLAT_1:43;
end;
CP is_less_than D
proof
let q being (Element of ( ConceptLattice C ));
assume q in D;
then ( q @ ) in D by CONLAT_1:def 21;
then (the Extent of ( q @ )) in { (the Extent of ConceptStr (# E,I #)) where E is (Subset of (the carrier of C)),I is (Subset of (the carrier' of C)): ConceptStr (# E,I #) in D };
then (the Extent of ( CP @ )) c= (the Extent of ( q @ )) by A20,SETFAM_1:3;
then ( CP @ ) is-SubConcept-of ( q @ ) by CONLAT_1:def 16;
hence thesis by CONLAT_1:43;
end;
hence thesis by A15,A14,A21,LATTICE3:34;
end;
