environ
vocabularies CONLAT_1,STRUCT_0,QC_LANG1,SUBSET_1,LATTICES,XXREAL_2,PBOOLE,EQREL_1,XBOOLE_0,SETFAM_1,FUNCT_1,TARSKI,CAT_1,LATTICE3,ZFMISC_1,RELAT_1,FUNCT_3,LATTICE6,REWRITE1,GROUP_6,WELLORD1,FUNCT_2,MCART_1,FILTER_1,XXREAL_0,ORDERS_2,CONLAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,MCART_1,FUNCT_1,DOMAIN_1,RELSET_1,ORDERS_2,STRUCT_0,LATTICE2,LATTICE3,LATTICE6,PARTFUN1,FUNCT_2,LATTICES,LATTICE4,CONLAT_1,CKB1,CKB7,CKB8;
definitions TARSKI,LATTICE3,VECTSP_8,LATTICE6,FUNCT_1,XBOOLE_0,SUBSET_1,CKB1,CKB7,CKB8;
theorems TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,LATTICE4,LATTICES,LATTICE3,LATTICE6,MCART_1,SETFAM_1,FUNCT_2,FILTER_1,LATTICE2,ORDERS_2,CONLAT_1,XBOOLE_0,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
schemes FUNCT_2;
registrations SUBSET_1,FUNCT_1,FUNCT_2,STRUCT_0,LATTICES,LATTICE2,LATTICE3,CONLAT_1,RELSET_1,CKB2;
constructors SETFAM_1,DOMAIN_1,LATTICE2,LATTICE4,CONLAT_1,LATTICE6,RELSET_1,CKB1,CKB7,CKB8;
requirements SUBSET,BOOLE;
begin
definition
let C being FormalContext;
func gamma C -> (Function of (the carrier of C),(the carrier of ( ConceptLattice C ))) means 
:Def4: (for o being (Element of C) holds (ex O being (Subset of (the carrier of C)) st (ex A being (Subset of (the carrier' of C)) st ((( it . o ) = ConceptStr (# O,A #) & O = ( ( AttributeDerivation C ) . ( ( ObjectDerivation C ) . { o } ) )) & A = ( ( ObjectDerivation C ) . { o } )))));
existence
proof
defpred P[ set,set ]
 means
(ex O being (Subset of (the carrier of C)) st (ex A being (Subset of (the carrier' of C)) st (($2 = ConceptStr (# O,A #) & O = ( ( AttributeDerivation C ) . ( ( ObjectDerivation C ) . { $1 } ) )) & A = ( ( ObjectDerivation C ) . { $1 } ))));
A1: (for e being set holds (e in (the carrier of C) implies (ex u being set st (u in (the carrier of ( ConceptLattice C )) & P[ e,u ]))))
proof
let e being set;
assume e in (the carrier of C);
then reconsider se = { e } as (Subset of (the carrier of C)) by ZFMISC_1:31;
set A = ( ( ObjectDerivation C ) . se );
set O = ( ( AttributeDerivation C ) . ( ( ObjectDerivation C ) . se ) );
take ConceptStr (# O,A #);
(( ConceptLattice C ) = LattStr (# ( B-carrier C ),( B-join C ),( B-meet C ) #) & ConceptStr (# O,A #) is (FormalConcept of C)) by CONLAT_1:19,CONLAT_1:def 20;
hence thesis by CONLAT_1:31;
end;
consider f being (Function of (the carrier of C),(the carrier of ( ConceptLattice C ))) such that A2: (for e being set holds (e in (the carrier of C) implies P[ e,( f . e ) ])) from FUNCT_2:sch 1(A1);
take f;
let o being (Element of C);
thus thesis by A2;
end;
uniqueness
proof
let F1 being (Function of (the carrier of C),(the carrier of ( ConceptLattice C )));
let F2 being (Function of (the carrier of C),(the carrier of ( ConceptLattice C )));
assume A3: (for o being (Element of C) holds (ex O being (Subset of (the carrier of C)) st (ex A being (Subset of (the carrier' of C)) st ((( F1 . o ) = ConceptStr (# O,A #) & O = ( ( AttributeDerivation C ) . ( ( ObjectDerivation C ) . { o } ) )) & A = ( ( ObjectDerivation C ) . { o } )))));
assume A4: (for o being (Element of C) holds (ex O being (Subset of (the carrier of C)) st (ex A being (Subset of (the carrier' of C)) st ((( F2 . o ) = ConceptStr (# O,A #) & O = ( ( AttributeDerivation C ) . ( ( ObjectDerivation C ) . { o } ) )) & A = ( ( ObjectDerivation C ) . { o } )))));
A5: (for o being set holds (o in (the carrier of C) implies ( F1 . o ) = ( F2 . o )))
proof
let o being set;
assume o in (the carrier of C);
then reconsider o as (Element of C);
((ex O being (Subset of (the carrier of C)) st (ex A being (Subset of (the carrier' of C)) st ((( F1 . o ) = ConceptStr (# O,A #) & O = ( ( AttributeDerivation C ) . ( ( ObjectDerivation C ) . { o } ) )) & A = ( ( ObjectDerivation C ) . { o } )))) & (ex O9 being (Subset of (the carrier of C)) st (ex A9 being (Subset of (the carrier' of C)) st ((( F2 . o ) = ConceptStr (# O9,A9 #) & O9 = ( ( AttributeDerivation C ) . ( ( ObjectDerivation C ) . { o } ) )) & A9 = ( ( ObjectDerivation C ) . { o } ))))) by A3,A4;
hence thesis;
end;
(( dom F1 ) = (the carrier of C) & ( dom F2 ) = (the carrier of C)) by FUNCT_2:def 1;
hence thesis by A5,FUNCT_1:2;
end;
end;
