environ
vocabularies CONLAT_1,STRUCT_0,QC_LANG1,SUBSET_1,LATTICES,XXREAL_2,PBOOLE,EQREL_1,XBOOLE_0,SETFAM_1,FUNCT_1,TARSKI,CAT_1,LATTICE3,ZFMISC_1,RELAT_1,FUNCT_3,LATTICE6,REWRITE1,GROUP_6,WELLORD1,FUNCT_2,MCART_1,FILTER_1,XXREAL_0,ORDERS_2,CONLAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,MCART_1,FUNCT_1,DOMAIN_1,RELSET_1,ORDERS_2,STRUCT_0,LATTICE2,LATTICE3,LATTICE6,PARTFUN1,FUNCT_2,LATTICES,LATTICE4,CONLAT_1,CKB1,CKB7,CKB8,CKB15,CKB16,CKB24,CKB28,CKB32;
definitions TARSKI,LATTICE3,VECTSP_8,LATTICE6,FUNCT_1,XBOOLE_0,SUBSET_1,CKB1,CKB7,CKB8,CKB15,CKB16,CKB24,CKB28,CKB32;
theorems TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,LATTICE4,LATTICES,LATTICE3,LATTICE6,MCART_1,SETFAM_1,FUNCT_2,FILTER_1,LATTICE2,ORDERS_2,CONLAT_1,XBOOLE_0,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29,CKB30,CKB31,CKB32,CKB34;
schemes FUNCT_2;
registrations SUBSET_1,FUNCT_1,FUNCT_2,STRUCT_0,LATTICES,LATTICE2,LATTICE3,CONLAT_1,RELSET_1,CKB2,CKB27,CKB33;
constructors SETFAM_1,DOMAIN_1,LATTICE2,LATTICE4,CONLAT_1,LATTICE6,RELSET_1,CKB1,CKB7,CKB8,CKB15,CKB16,CKB24,CKB28,CKB32;
requirements SUBSET,BOOLE;
begin
definition
let C being FormalContext;
func DualHomomorphism C -> (Homomorphism of ( ( ConceptLattice C ) .: ),( ConceptLattice ( C .: ) )) means 
:Def9: (for CP being  strict (FormalConcept of C) holds ( it . CP ) = ( CP .: ));
existence
proof
set f = { [ ConceptStr (# O,A #),( ConceptStr (# O,A #) .: ) ] where O is (Subset of (the carrier of C)),A is (Subset of (the carrier' of C)): ConceptStr (# O,A #) is (FormalConcept of C) };
A1: ( ConceptLattice ( C .: ) ) = LattStr (# ( B-carrier ( C .: ) ),( B-join ( C .: ) ),( B-meet ( C .: ) ) #) by CONLAT_1:def 20;
A2: ( ConceptLattice C ) = LattStr (# ( B-carrier C ),( B-join C ),( B-meet C ) #) by CONLAT_1:def 20;
then A3: ( ( ConceptLattice C ) .: ) = LattStr (# ( B-carrier C ),( B-meet C ),( B-join C ) #) by LATTICE2:def 2;
f c= [: (the carrier of ( ( ConceptLattice C ) .: )),(the carrier of ( ConceptLattice ( C .: ) )) :]
proof
let y being set;
assume y in f;
then consider O being (Subset of (the carrier of C)),A being (Subset of (the carrier' of C)) such that A4: y = [ ConceptStr (# O,A #),( ConceptStr (# O,A #) .: ) ] and A5: ConceptStr (# O,A #) is (FormalConcept of C);
( ConceptStr (# O,A #) .: ) is  strict  strict (FormalConcept of ( C .: )) by A5;
then A6: ( ConceptStr (# O,A #) .: ) in (the carrier of ( ConceptLattice ( C .: ) )) by A1,CONLAT_1:31;
ConceptStr (# O,A #) in (the carrier of ( ( ConceptLattice C ) .: )) by A3,A5,CONLAT_1:31;
hence thesis by A4,A6,ZFMISC_1:def 2;
end;
then reconsider f as (Relation of (the carrier of ( ( ConceptLattice C ) .: )),(the carrier of ( ConceptLattice ( C .: ) )));
(the carrier of ( ( ConceptLattice C ) .: )) c= ( dom f )
proof
let y being set;
assume y in (the carrier of ( ( ConceptLattice C ) .: ));
then A7: y is  strict  strict (FormalConcept of C) by A3,CONLAT_1:31;
then consider O9 being (Subset of (the carrier of C)),A9 being (Subset of (the carrier' of C)) such that A8: y = ConceptStr (# O9,A9 #);
set z = ( ConceptStr (# O9,A9 #) .: );
( ConceptStr (# O9,A9 #) .: ) is  strict  strict (FormalConcept of ( C .: )) by A7,A8;
then reconsider z as (Element of ( ConceptLattice ( C .: ) )) by A1,CONLAT_1:31;
[ y,z ] in f by A7,A8;
hence thesis by RELAT_1:def 4;
end;
then A9: (the carrier of ( ( ConceptLattice C ) .: )) = ( dom f ) by XBOOLE_0:def 10;
(for x,y1,y2 being set holds (([ x,y1 ] in f & [ x,y2 ] in f) implies y1 = y2))
proof
let x being set;
let y1 being set;
let y2 being set;
assume that
A10: [ x,y1 ] in f
and
A11: [ x,y2 ] in f;
consider O9 being (Subset of (the carrier of C)),A9 being (Subset of (the carrier' of C)) such that A12: [ x,y2 ] = [ ConceptStr (# O9,A9 #),( ConceptStr (# O9,A9 #) .: ) ] and ConceptStr (# O9,A9 #) is (FormalConcept of C) by A11;
consider O being (Subset of (the carrier of C)),A being (Subset of (the carrier' of C)) such that A13: [ x,y1 ] = [ ConceptStr (# O,A #),( ConceptStr (# O,A #) .: ) ] and ConceptStr (# O,A #) is (FormalConcept of C) by A10;
ConceptStr (# O,A #) = ( [ x,y1 ] `1 ) by A13,MCART_1:def 1
.= x by MCART_1:def 1
.= ( [ x,y2 ] `1 ) by MCART_1:def 1
.= ConceptStr (# O9,A9 #) by A12,MCART_1:def 1;
hence y1 = ( [ x,y2 ] `2 ) by A13,A12,MCART_1:def 2
.= y2 by MCART_1:def 2;
end;
then reconsider f as (Function of (the carrier of ( ( ConceptLattice C ) .: )),(the carrier of ( ConceptLattice ( C .: ) ))) by A9,FUNCT_1:def 1,FUNCT_2:def 1;
A14: ( ( ConceptLattice C ) .: ) = LattStr (# (the carrier of ( ConceptLattice C )),(the L_meet of ( ConceptLattice C )),(the L_join of ( ConceptLattice C )) #) by LATTICE2:def 2;
A15: (for a,b being (Element of ( ( ConceptLattice C ) .: )) holds (a [= b implies ( f . a ) [= ( f . b )))
proof
let a being (Element of ( ( ConceptLattice C ) .: ));
let b being (Element of ( ( ConceptLattice C ) .: ));
reconsider aa = ( a % ),bb = ( b % ) as (Element of ( LattPOSet ( ConceptLattice C ) )) by A14;
reconsider a9 = a,b9 = b as (Element of ( ConceptLattice C )) by A14;
A16: ( dom f ) = (the carrier of ( ( ConceptLattice C ) .: )) by FUNCT_2:def 1;
then consider fa being set such that A17: [ a,fa ] in f by RELAT_1:def 4;
assume a [= b;
then ( a % ) <= ( b % ) by LATTICE3:7;
then [ ( a % ),( b % ) ] in (the InternalRel of ( LattPOSet ( ( ConceptLattice C ) .: ) )) by ORDERS_2:def 5;
then [ ( a % ),( b % ) ] in ( (the InternalRel of ( LattPOSet ( ConceptLattice C ) )) ~ ) by LATTICE3:20;
then [ ( b % ),( a % ) ] in (the InternalRel of ( LattPOSet ( ConceptLattice C ) )) by RELAT_1:def 7;
then A18: bb <= aa by ORDERS_2:def 5;
(( ( % aa ) % ) = aa & ( ( % bb ) % ) = bb);
then ( % bb ) [= ( % aa ) by A18,LATTICE3:7;
then A19: ( ( % bb ) @ ) is-SubConcept-of ( ( % aa ) @ ) by CONLAT_1:43;
consider fb being set such that A20: [ b,fb ] in f by A16,RELAT_1:def 4;
A21: fb in ( rng f ) by A20,RELAT_1:def 5;
A22: ( f . b ) = fb by A20,FUNCT_1:1;
consider O9 being (Subset of (the carrier of C)),A9 being (Subset of (the carrier' of C)) such that A23: [ b,fb ] = [ ConceptStr (# O9,A9 #),( ConceptStr (# O9,A9 #) .: ) ] and ConceptStr (# O9,A9 #) is (FormalConcept of C) by A20;
A24: b = ( [ ConceptStr (# O9,A9 #),( ConceptStr (# O9,A9 #) .: ) ] `1 ) by A23,MCART_1:def 1
.= ConceptStr (# O9,A9 #) by MCART_1:def 1;
A25: fa in ( rng f ) by A17,RELAT_1:def 5;
A26: ( f . a ) = fa by A17,FUNCT_1:1;
consider O being (Subset of (the carrier of C)),A being (Subset of (the carrier' of C)) such that A27: [ a,fa ] = [ ConceptStr (# O,A #),( ConceptStr (# O,A #) .: ) ] and ConceptStr (# O,A #) is (FormalConcept of C) by A17;
reconsider fa as (Element of ( ConceptLattice ( C .: ) )) by A25;
A28: a = ( [ ConceptStr (# O,A #),( ConceptStr (# O,A #) .: ) ] `1 ) by A27,MCART_1:def 1
.= ConceptStr (# O,A #) by MCART_1:def 1;
reconsider fb as (Element of ( ConceptLattice ( C .: ) )) by A21;
fb = ( [ ConceptStr (# O9,A9 #),( ConceptStr (# O9,A9 #) .: ) ] `2 ) by A23,MCART_1:def 2
.= ( ConceptStr (# O9,A9 #) .: ) by MCART_1:def 2;
then A29: (the Intent of ( fb @ )) = (the Intent of ( ConceptStr (# O9,A9 #) .: )) by CONLAT_1:def 21
.= (the Extent of ConceptStr (# O9,A9 #)) by CKB32:def 1
.= (the Extent of ( b9 @ )) by A24,CONLAT_1:def 21;
fa = ( [ ConceptStr (# O,A #),( ConceptStr (# O,A #) .: ) ] `2 ) by A27,MCART_1:def 2
.= ( ConceptStr (# O,A #) .: ) by MCART_1:def 2;
then (the Intent of ( fa @ )) = (the Intent of ( ConceptStr (# O,A #) .: )) by CONLAT_1:def 21
.= (the Extent of ConceptStr (# O,A #)) by CKB32:def 1
.= (the Extent of ( a9 @ )) by A28,CONLAT_1:def 21;
then (the Intent of ( fb @ )) c= (the Intent of ( fa @ )) by A19,A29,CONLAT_1:def 16;
then ( fa @ ) is-SubConcept-of ( fb @ ) by CONLAT_1:28;
hence thesis by A26,A22,CONLAT_1:43;
end;
(the carrier of ( ConceptLattice ( C .: ) )) c= ( rng f )
proof
let u being set;
A30: ( dom f ) = (the carrier of ( ( ConceptLattice C ) .: )) by FUNCT_2:def 1;
assume u in (the carrier of ( ConceptLattice ( C .: ) ));
then reconsider u as (Element of ( ConceptLattice ( C .: ) ));
reconsider A9 = (the Intent of ( u @ )) as (Subset of (the carrier of C));
reconsider O9 = (the Extent of ( u @ )) as (Subset of (the carrier' of C));
set CP = ConceptStr (# A9,O9 #);
A31: (not ((the Extent of ( u @ )) is  empty & (the Intent of ( u @ )) is  empty)) by CONLAT_1:def 8;
A32: ( ( AttributeDerivation C ) . (the Intent of CP) ) = ( ( ObjectDerivation ( C .: ) ) . (the Extent of ( u @ )) ) by CKB31:1
.= (the Extent of CP) by CONLAT_1:def 10;
( ( ObjectDerivation C ) . (the Extent of CP) ) = ( ( AttributeDerivation ( C .: ) ) . (the Intent of ( u @ )) ) by CKB30:1
.= (the Intent of CP) by CONLAT_1:def 10;
then CP is (FormalConcept of C) by A32,A31,CONLAT_1:def 8,CONLAT_1:def 10;
then CP in ( dom f ) by A14,A2,A30,CONLAT_1:31;
then consider v being set such that A33: [ CP,v ] in f by RELAT_1:def 4;
consider Ov being (Subset of (the carrier of C)),Av being (Subset of (the carrier' of C)) such that A34: [ CP,v ] = [ ConceptStr (# Ov,Av #),( ConceptStr (# Ov,Av #) .: ) ] and ConceptStr (# Ov,Av #) is (FormalConcept of C) by A33;
A35: CP = ( [ ConceptStr (# Ov,Av #),( ConceptStr (# Ov,Av #) .: ) ] `1 ) by A34,MCART_1:def 1
.= ConceptStr (# Ov,Av #) by MCART_1:def 1;
A36: v in ( rng f ) by A33,RELAT_1:def 5;
then reconsider v as  strict (FormalConcept of ( C .: )) by A1,CONLAT_1:31;
v = ( [ ConceptStr (# Ov,Av #),( ConceptStr (# Ov,Av #) .: ) ] `2 ) by A34,MCART_1:def 2
.= ( ConceptStr (# Ov,Av #) .: ) by MCART_1:def 2;
then ((the Extent of v) = (the Extent of ( u @ )) & (the Intent of v) = (the Intent of ( u @ ))) by A35,CKB32:def 1;
hence thesis by A36,CONLAT_1:def 21;
end;
then A37: ( rng f ) = (the carrier of ( ConceptLattice ( C .: ) )) by XBOOLE_0:def 10;
A38: f is  one-to-one
proof
let a being set;
let b being set;
assume that
A39: a in ( dom f )
and
A40: b in ( dom f )
and
A41: ( f . a ) = ( f . b );
reconsider a,b as (Element of ( ( ConceptLattice C ) .: )) by A39,A40;
consider fa being set such that A42: [ a,fa ] in f by A39,RELAT_1:def 4;
consider fb being set such that A43: [ b,fb ] in f by A40,RELAT_1:def 4;
A44: ( f . b ) = fb by A43,FUNCT_1:1;
consider O being (Subset of (the carrier of C)),A being (Subset of (the carrier' of C)) such that A45: [ a,fa ] = [ ConceptStr (# O,A #),( ConceptStr (# O,A #) .: ) ] and ConceptStr (# O,A #) is (FormalConcept of C) by A42;
A46: a = ( [ ConceptStr (# O,A #),( ConceptStr (# O,A #) .: ) ] `1 ) by A45,MCART_1:def 1
.= ConceptStr (# O,A #) by MCART_1:def 1;
consider O9 being (Subset of (the carrier of C)),A9 being (Subset of (the carrier' of C)) such that A47: [ b,fb ] = [ ConceptStr (# O9,A9 #),( ConceptStr (# O9,A9 #) .: ) ] and ConceptStr (# O9,A9 #) is (FormalConcept of C) by A43;
A48: b = ( [ ConceptStr (# O9,A9 #),( ConceptStr (# O9,A9 #) .: ) ] `1 ) by A47,MCART_1:def 1
.= ConceptStr (# O9,A9 #) by MCART_1:def 1;
A49: ( ConceptStr (# O9,A9 #) .: ) = ( [ b,fb ] `2 ) by A47,MCART_1:def 2
.= fb by MCART_1:def 2
.= fa by A41,A42,A44,FUNCT_1:1
.= ( [ a,fa ] `2 ) by MCART_1:def 2
.= ( ConceptStr (# O,A #) .: ) by A45,MCART_1:def 2;
then A50: (the Intent of ConceptStr (# O9,A9 #)) = (the Extent of ( ConceptStr (# O,A #) .: )) by CKB32:def 1
.= (the Intent of ConceptStr (# O,A #)) by CKB32:def 1;
(the Extent of ConceptStr (# O9,A9 #)) = (the Intent of ( ConceptStr (# O,A #) .: )) by A49,CKB32:def 1
.= (the Extent of ConceptStr (# O,A #)) by CKB32:def 1;
hence thesis by A46,A48,A50;
end;
(for a,b being (Element of ( ( ConceptLattice C ) .: )) holds (( f . a ) [= ( f . b ) implies a [= b))
proof
let a being (Element of ( ( ConceptLattice C ) .: ));
let b being (Element of ( ( ConceptLattice C ) .: ));
A51: ( dom f ) = (the carrier of ( ( ConceptLattice C ) .: )) by FUNCT_2:def 1;
then consider fa being set such that A52: [ a,fa ] in f by RELAT_1:def 4;
reconsider a9 = a,b9 = b as (Element of ( ConceptLattice C )) by A14;
assume ( f . a ) [= ( f . b );
then A53: ( ( f . a ) @ ) is-SubConcept-of ( ( f . b ) @ ) by CONLAT_1:43;
consider O being (Subset of (the carrier of C)),A being (Subset of (the carrier' of C)) such that A54: [ a,fa ] = [ ConceptStr (# O,A #),( ConceptStr (# O,A #) .: ) ] and ConceptStr (# O,A #) is (FormalConcept of C) by A52;
A55: a = ( [ ConceptStr (# O,A #),( ConceptStr (# O,A #) .: ) ] `1 ) by A54,MCART_1:def 1
.= ConceptStr (# O,A #) by MCART_1:def 1;
A56: fa in ( rng f ) by A52,RELAT_1:def 5;
consider fb being set such that A57: [ b,fb ] in f by A51,RELAT_1:def 4;
A58: fb in ( rng f ) by A57,RELAT_1:def 5;
consider O9 being (Subset of (the carrier of C)),A9 being (Subset of (the carrier' of C)) such that A59: [ b,fb ] = [ ConceptStr (# O9,A9 #),( ConceptStr (# O9,A9 #) .: ) ] and ConceptStr (# O9,A9 #) is (FormalConcept of C) by A57;
A60: b = ( [ ConceptStr (# O9,A9 #),( ConceptStr (# O9,A9 #) .: ) ] `1 ) by A59,MCART_1:def 1
.= ConceptStr (# O9,A9 #) by MCART_1:def 1;
reconsider fb as (Element of ( ConceptLattice ( C .: ) )) by A58;
A61: fb = ( [ ConceptStr (# O9,A9 #),( ConceptStr (# O9,A9 #) .: ) ] `2 ) by A59,MCART_1:def 2
.= ( ConceptStr (# O9,A9 #) .: ) by MCART_1:def 2;
A62: (the Intent of ( ( f . b ) @ )) = (the Intent of ( fb @ )) by A57,FUNCT_1:1
.= (the Intent of ( ConceptStr (# O9,A9 #) .: )) by A61,CONLAT_1:def 21
.= (the Extent of ConceptStr (# O9,A9 #)) by CKB32:def 1
.= (the Extent of ( b9 @ )) by A60,CONLAT_1:def 21;
reconsider fa as (Element of ( ConceptLattice ( C .: ) )) by A56;
A63: fa = ( [ ConceptStr (# O,A #),( ConceptStr (# O,A #) .: ) ] `2 ) by A54,MCART_1:def 2
.= ( ConceptStr (# O,A #) .: ) by MCART_1:def 2;
(the Intent of ( ( f . a ) @ )) = (the Intent of ( fa @ )) by A52,FUNCT_1:1
.= (the Intent of ( ConceptStr (# O,A #) .: )) by A63,CONLAT_1:def 21
.= (the Extent of ConceptStr (# O,A #)) by CKB32:def 1
.= (the Extent of ( a9 @ )) by A55,CONLAT_1:def 21;
then (the Extent of ( b9 @ )) c= (the Extent of ( a9 @ )) by A53,A62,CONLAT_1:28;
then ( b9 @ ) is-SubConcept-of ( a9 @ ) by CONLAT_1:def 16;
then b9 [= a9 by CONLAT_1:43;
then ( b9 % ) <= ( a9 % ) by LATTICE3:7;
then [ ( b9 % ),( a9 % ) ] in (the InternalRel of ( LattPOSet ( ConceptLattice C ) )) by ORDERS_2:def 5;
then [ ( a % ),( b % ) ] in (the InternalRel of ( ( LattPOSet ( ConceptLattice C ) ) ~ )) by RELAT_1:def 7;
then [ ( a % ),( b % ) ] in (the InternalRel of ( LattPOSet ( ( ConceptLattice C ) .: ) )) by LATTICE3:20;
then ( a % ) <= ( b % ) by ORDERS_2:def 5;
hence thesis by LATTICE3:7;
end;
then reconsider f as (Homomorphism of ( ( ConceptLattice C ) .: ),( ConceptLattice ( C .: ) )) by A15,A37,A38,CKB21:1;
(for CP being  strict (FormalConcept of C) holds ( f . CP ) = ( CP .: ))
proof
let CP being  strict (FormalConcept of C);
CP in ( B-carrier C ) by CONLAT_1:31;
then CP in ( dom f ) by A3,FUNCT_2:def 1;
then consider v being set such that A64: [ CP,v ] in f by RELAT_1:def 4;
A65: v in ( rng f ) by A64,RELAT_1:def 5;
consider Ov being (Subset of (the carrier of C)),Av being (Subset of (the carrier' of C)) such that A66: [ CP,v ] = [ ConceptStr (# Ov,Av #),( ConceptStr (# Ov,Av #) .: ) ] and ConceptStr (# Ov,Av #) is (FormalConcept of C) by A64;
reconsider v as  strict (FormalConcept of ( C .: )) by A1,A65,CONLAT_1:31;
A67: CP = ( [ ConceptStr (# Ov,Av #),( ConceptStr (# Ov,Av #) .: ) ] `1 ) by A66,MCART_1:def 1
.= ConceptStr (# Ov,Av #) by MCART_1:def 1;
v = ( [ ConceptStr (# Ov,Av #),( ConceptStr (# Ov,Av #) .: ) ] `2 ) by A66,MCART_1:def 2
.= ( ConceptStr (# Ov,Av #) .: ) by MCART_1:def 2;
hence thesis by A64,A67,FUNCT_1:1;
end;
hence thesis;
end;
uniqueness
proof
let F1 being (Homomorphism of ( ( ConceptLattice C ) .: ),( ConceptLattice ( C .: ) ));
let F2 being (Homomorphism of ( ( ConceptLattice C ) .: ),( ConceptLattice ( C .: ) ));
assume A68: (for CP being  strict (FormalConcept of C) holds ( F1 . CP ) = ( CP .: ));
assume A69: (for CP being  strict (FormalConcept of C) holds ( F2 . CP ) = ( CP .: ));
A70: (for u being set holds (u in (the carrier of ( ( ConceptLattice C ) .: )) implies ( F1 . u ) = ( F2 . u )))
proof
let u being set;
( ConceptLattice C ) = LattStr (# ( B-carrier C ),( B-join C ),( B-meet C ) #) by CONLAT_1:def 20;
then A71: ( ( ConceptLattice C ) .: ) = LattStr (# ( B-carrier C ),( B-meet C ),( B-join C ) #) by LATTICE2:def 2;
assume u in (the carrier of ( ( ConceptLattice C ) .: ));
then reconsider u as  strict (FormalConcept of C) by A71,CONLAT_1:31;
( F1 . u ) = ( u .: ) by A68
.= ( F2 . u ) by A69;
hence thesis;
end;
(( dom F1 ) = (the carrier of ( ( ConceptLattice C ) .: )) & ( dom F2 ) = (the carrier of ( ( ConceptLattice C ) .: ))) by FUNCT_2:def 1;
hence thesis by A70,FUNCT_1:2;
end;
end;
