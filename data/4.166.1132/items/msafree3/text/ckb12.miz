environ
vocabularies XBOOLE_0,STRUCT_0,MSUALG_1,CARD_3,RELAT_1,FUNCT_1,SUBSET_1,PBOOLE,MSUALG_3,TARSKI,FUNCT_6,MEMBER_1,CATALG_1,ZF_MODEL,MSUALG_2,MSAFREE,FUNCOP_1,CARD_1,LANG1,ZFMISC_1,TREES_4,MCART_1,MARGREL1,FINSEQ_1,MSATERM,UNIALG_2,DTCONSTR,FINSET_1,TREES_2,TREES_9,ZF_LANG1,TREES_3,TREES_A,NUMBERS,ARYTM_3,ORDINAL4,XXREAL_0,NAT_1,PARTFUN1,MSUALG_6,PRELAMB;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,RELAT_1,FUNCT_1,RELSET_1,STRUCT_0,NUMBERS,NAT_1,MCART_1,FINSET_1,CARD_3,FINSEQ_1,FINSEQ_2,TREES_1,TREES_2,FUNCT_6,TREES_3,TREES_4,DTCONSTR,LANG1,PBOOLE,TREES_9,MSUALG_1,MSUALG_2,MSAFREE,FUNCOP_1,MSUALG_3,EQUATION,MSATERM,MSUALG_6,CATALG_1,XXREAL_0,CKB2,CKB4;
definitions TARSKI,XBOOLE_0,PBOOLE,MSUALG_2,MSUALG_6,CATALG_1,CKB4;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_3,NAT_1,MCART_1,PBOOLE,RELAT_1,CARD_3,CARD_5,FUNCT_6,TREES_3,MSUALG_1,INSTALG1,TREES_4,PRE_CIRC,TREES_1,TREES_2,MSUALG_2,MSUALG_3,MSAFREE,MSATERM,EQUATION,MSUALG_6,XBOOLE_0,XBOOLE_1,ORDINAL1,PARTFUN1,TREES_9,FINSEQ_2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11;
schemes PBOOLE,MSATERM;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,XREAL_0,FINSEQ_1,TREES_2,TREES_3,TREES_9,STRUCT_0,RELSET_1,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSATERM,INDEX_1,MSUALG_6,MSUALG_9,INSTALG1,CATALG_1,PRE_CIRC,MSSUBFAM,PBOOLE,CKB1,CKB9;
constructors DOMAIN_1,XXREAL_0,NAT_1,TREES_9,MSSUBFAM,MSUALG_3,MSATERM,MSUALG_6,CATALG_1,EQUATION,SEQ_4,RELSET_1,FINSEQ_2,CKB4;
requirements BOOLE,SUBSET,NUMERALS;
begin
reserve x for set;
reserve y for set;
theorem
Th9: (for S being non  void Signature holds (for X being non  empty-yielding (ManySortedSet of (the carrier of S)) holds (for x being (Element of ( Free (S,X) )) holds x is (Term of S,( X \/ ( (the carrier of S) --> { ( 0 ) } ) )))))
proof
let S being non  void Signature;
let X being non  empty-yielding (ManySortedSet of (the carrier of S));
set Y = ( X \/ ( (the carrier of S) --> { ( 0 ) } ) );
let x being (Element of ( Free (S,X) ));
A1: ( S -Terms Y ) = ( TS ( DTConMSA Y ) ) by MSATERM:def 1
.= ( union ( rng ( FreeSort Y ) ) ) by MSAFREE:11
.= ( Union ( FreeSort Y ) ) by CARD_3:def 4;
A2: ( dom (the Sorts of ( Free (S,X) )) ) = (the carrier of S) by PARTFUN1:def 2;
A3: (( FreeMSA Y ) = MSAlgebra (# ( FreeSort Y ),( FreeOper Y ) #) & ( dom (the Sorts of ( FreeMSA Y )) ) = (the carrier of S)) by MSAFREE:def 14,PARTFUN1:def 2;
consider y such that A4: y in ( dom (the Sorts of ( Free (S,X) )) ) and A5: x in ( (the Sorts of ( Free (S,X) )) . y ) by CARD_5:2;
(ex A being (MSSubset of ( FreeMSA Y )) st (( Free (S,X) ) = ( GenMSAlg A ) & A = ( ( Reverse Y ) "" X ))) by CKB4:def 1;
then (the Sorts of ( Free (S,X) )) is (MSSubset of ( FreeMSA Y )) by MSUALG_2:def 9;
then (the Sorts of ( Free (S,X) )) c= (the Sorts of ( FreeMSA Y )) by PBOOLE:def 18;
then ( (the Sorts of ( Free (S,X) )) . y ) c= ( (the Sorts of ( FreeMSA Y )) . y ) by A4,A2,PBOOLE:def 2;
hence thesis by A1,A4,A5,A2,A3,CARD_5:2;
end;
