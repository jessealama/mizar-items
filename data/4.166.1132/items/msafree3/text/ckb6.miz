environ
vocabularies XBOOLE_0,STRUCT_0,MSUALG_1,CARD_3,RELAT_1,FUNCT_1,SUBSET_1,PBOOLE,MSUALG_3,TARSKI,FUNCT_6,MEMBER_1,CATALG_1,ZF_MODEL,MSUALG_2,MSAFREE,FUNCOP_1,CARD_1,LANG1,ZFMISC_1,TREES_4,MCART_1,MARGREL1,FINSEQ_1,MSATERM,UNIALG_2,DTCONSTR,FINSET_1,TREES_2,TREES_9,ZF_LANG1,TREES_3,TREES_A,NUMBERS,ARYTM_3,ORDINAL4,XXREAL_0,NAT_1,PARTFUN1,MSUALG_6,PRELAMB;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,RELAT_1,FUNCT_1,RELSET_1,STRUCT_0,NUMBERS,NAT_1,MCART_1,FINSET_1,CARD_3,FINSEQ_1,FINSEQ_2,TREES_1,TREES_2,FUNCT_6,TREES_3,TREES_4,DTCONSTR,LANG1,PBOOLE,TREES_9,MSUALG_1,MSUALG_2,MSAFREE,FUNCOP_1,MSUALG_3,EQUATION,MSATERM,MSUALG_6,CATALG_1,XXREAL_0,CKB2,CKB4;
definitions TARSKI,XBOOLE_0,PBOOLE,MSUALG_2,MSUALG_6,CATALG_1,CKB4;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_3,NAT_1,MCART_1,PBOOLE,RELAT_1,CARD_3,CARD_5,FUNCT_6,TREES_3,MSUALG_1,INSTALG1,TREES_4,PRE_CIRC,TREES_1,TREES_2,MSUALG_2,MSUALG_3,MSAFREE,MSATERM,EQUATION,MSUALG_6,XBOOLE_0,XBOOLE_1,ORDINAL1,PARTFUN1,TREES_9,FINSEQ_2,CKB3,CKB4,CKB5;
schemes PBOOLE,MSATERM;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,XREAL_0,FINSEQ_1,TREES_2,TREES_3,TREES_9,STRUCT_0,RELSET_1,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSATERM,INDEX_1,MSUALG_6,MSUALG_9,INSTALG1,CATALG_1,PRE_CIRC,MSSUBFAM,PBOOLE,CKB1;
constructors DOMAIN_1,XXREAL_0,NAT_1,TREES_9,MSSUBFAM,MSUALG_3,MSATERM,MSUALG_6,CATALG_1,EQUATION,SEQ_4,RELSET_1,FINSEQ_2,CKB4;
requirements BOOLE,SUBSET,NUMERALS;
begin
reserve x for set;
reserve z for set;
theorem
Th4: (for S being non  void Signature holds (for Y being  non-empty (ManySortedSet of (the carrier of S)) holds (for X being (ManySortedSet of (the carrier of S)) holds (for s being (SortSymbol of S) holds ((x in ( X . s ) & x in ( Y . s )) iff ( root-tree [ x,s ] ) in ( ( ( Reverse Y ) "" X ) . s ))))))
proof
let S being non  void Signature;
let Y being  non-empty (ManySortedSet of (the carrier of S));
let X being (ManySortedSet of (the carrier of S));
let s being (SortSymbol of S);
A1: ( ( Reverse Y ) . s ) = ( Reverse (s,Y) ) by MSAFREE:def 18;
A2: ( dom ( Reverse (s,Y) ) ) = ( FreeGen (s,Y) ) by FUNCT_2:def 1;
hereby
assume that
A3: x in ( X . s )
and
A4: x in ( Y . s );
A5: ( root-tree [ x,s ] ) in ( FreeGen (s,Y) ) by A4,MSAFREE:def 15;
[ x,s ] in (the carrier of ( DTConMSA Y )) by A4,CKB5:1;
then ( ( ( Reverse Y ) . s ) . ( root-tree [ x,s ] ) ) = ( [ x,s ] `1 ) by A1,A5,MSAFREE:def 17
.= x by MCART_1:7;
then ( root-tree [ x,s ] ) in ( ( ( Reverse Y ) . s ) " ( X . s ) ) by A1,A2,A3,A5,FUNCT_1:def 7;
hence ( root-tree [ x,s ] ) in ( ( ( Reverse Y ) "" X ) . s ) by EQUATION:def 1;
end;
assume ( root-tree [ x,s ] ) in ( ( ( Reverse Y ) "" X ) . s );
then A6: ( root-tree [ x,s ] ) in ( ( ( Reverse Y ) . s ) " ( X . s ) ) by EQUATION:def 1;
then A7: ( ( Reverse (s,Y) ) . ( root-tree [ x,s ] ) ) in ( X . s ) by A1,FUNCT_1:def 7;
A8: ( root-tree [ x,s ] ) in ( FreeGen (s,Y) ) by A1,A2,A6,FUNCT_1:def 7;
then consider z such that A9: z in ( Y . s ) and A10: ( root-tree [ x,s ] ) = ( root-tree [ z,s ] ) by MSAFREE:def 15;
A11: [ x,s ] = [ z,s ] by A10,TREES_4:4;
then [ x,s ] in (the carrier of ( DTConMSA Y )) by A9,CKB5:1;
then ( [ x,s ] `1 ) in ( X . s ) by A8,A7,MSAFREE:def 17;
hence thesis by A9,A11,MCART_1:7,ZFMISC_1:27;
end;
