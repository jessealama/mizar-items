environ
vocabularies XBOOLE_0,STRUCT_0,MSUALG_1,CARD_3,RELAT_1,FUNCT_1,SUBSET_1,PBOOLE,MSUALG_3,TARSKI,FUNCT_6,MEMBER_1,CATALG_1,ZF_MODEL,MSUALG_2,MSAFREE,FUNCOP_1,CARD_1,LANG1,ZFMISC_1,TREES_4,MCART_1,MARGREL1,FINSEQ_1,MSATERM,UNIALG_2,DTCONSTR,FINSET_1,TREES_2,TREES_9,ZF_LANG1,TREES_3,TREES_A,NUMBERS,ARYTM_3,ORDINAL4,XXREAL_0,NAT_1,PARTFUN1,MSUALG_6,PRELAMB;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,RELAT_1,FUNCT_1,RELSET_1,STRUCT_0,NUMBERS,NAT_1,MCART_1,FINSET_1,CARD_3,FINSEQ_1,FINSEQ_2,TREES_1,TREES_2,FUNCT_6,TREES_3,TREES_4,DTCONSTR,LANG1,PBOOLE,TREES_9,MSUALG_1,MSUALG_2,MSAFREE,FUNCOP_1,MSUALG_3,EQUATION,MSATERM,MSUALG_6,CATALG_1,XXREAL_0,CKB2,CKB4,CKB17,CKB18,CKB25,CKB27;
definitions TARSKI,XBOOLE_0,PBOOLE,MSUALG_2,MSUALG_6,CATALG_1,CKB4,CKB17,CKB18,CKB25,CKB27;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_3,NAT_1,MCART_1,PBOOLE,RELAT_1,CARD_3,CARD_5,FUNCT_6,TREES_3,MSUALG_1,INSTALG1,TREES_4,PRE_CIRC,TREES_1,TREES_2,MSUALG_2,MSUALG_3,MSAFREE,MSATERM,EQUATION,MSUALG_6,XBOOLE_0,XBOOLE_1,ORDINAL1,PARTFUN1,TREES_9,FINSEQ_2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
schemes PBOOLE,MSATERM;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,XREAL_0,FINSEQ_1,TREES_2,TREES_3,TREES_9,STRUCT_0,RELSET_1,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSATERM,INDEX_1,MSUALG_6,MSUALG_9,INSTALG1,CATALG_1,PRE_CIRC,MSSUBFAM,PBOOLE,CKB1,CKB9,CKB13,CKB14,CKB15,CKB16;
constructors DOMAIN_1,XXREAL_0,NAT_1,TREES_9,MSSUBFAM,MSUALG_3,MSATERM,MSUALG_6,CATALG_1,EQUATION,SEQ_4,RELSET_1,FINSEQ_2,CKB4,CKB17,CKB18,CKB25,CKB27;
requirements BOOLE,SUBSET,NUMERALS;
begin
reserve x for set;
reserve y for set;
theorem
Th29: (for S being non void Signature holds (for X being  non-empty (ManySortedSet of (the carrier of S)) holds (for t being (Term of S,X) holds ( variables_in t ) c= X)))
proof
let S being non void Signature;
let X being  non-empty (ManySortedSet of (the carrier of S));
defpred P[ DecoratedTree ]
 means
( S variables_in $1 ) c= X;
let t being (Term of S,X);
A1: (for o being (OperSymbol of S) holds (for p being (ArgumentSeq of ( Sym (o,X) )) holds ((for t being (Term of S,X) holds (t in ( rng p ) implies P[ t ])) implies P[ ( [ o,(the carrier of S) ] -tree p ) ])))
proof
let o being (OperSymbol of S);
let p being (ArgumentSeq of ( Sym (o,X) ));
assume that
A2: (for t being (Term of S,X) holds (t in ( rng p ) implies ( S variables_in t ) c= X));
thus ( S variables_in ( [ o,(the carrier of S) ] -tree p ) ) c= X
proof
let s being set;
assume A3: s in (the carrier of S);
let x;
assume x in ( ( S variables_in ( [ o,(the carrier of S) ] -tree p ) ) . s );
then consider t being DecoratedTree such that A4: t in ( rng p ) and A5: x in ( ( S variables_in t ) . s ) by A3,CKB21:1;
consider i being set such that A6: i in ( dom p ) and A7: t = ( p . i ) by A4,FUNCT_1:def 3;
reconsider i as Nat by A6;
reconsider t = ( p . i ) as (Term of S,X) by A6,MSATERM:22;
( S variables_in t ) c= X by A2,A4,A7;
then ( ( S variables_in t ) . s ) c= ( X . s ) by A3,PBOOLE:def 2;
hence thesis by A5,A7;
end;

end;
A8: (for s being (SortSymbol of S) holds (for v being (Element of ( X . s )) holds P[ ( root-tree [ v,s ] ) ]))
proof
let s being (SortSymbol of S);
let x being (Element of ( X . s ));
thus ( S variables_in ( root-tree [ x,s ] ) ) c= X
proof
let y;
assume y in (the carrier of S);
A9: (y <> s implies ( ( S variables_in ( root-tree [ x,s ] ) ) . y ) = ( {} )) by CKB20:1;
( ( S variables_in ( root-tree [ x,s ] ) ) . s ) = { x } by CKB20:1;
hence thesis by A9,XBOOLE_1:2;
end;

end;
(for t being (Term of S,X) holds P[ t ]) from MSATERM:sch 1(A8,A1);
hence thesis;
end;
