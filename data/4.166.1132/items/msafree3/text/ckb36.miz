environ
vocabularies XBOOLE_0,STRUCT_0,MSUALG_1,CARD_3,RELAT_1,FUNCT_1,SUBSET_1,PBOOLE,MSUALG_3,TARSKI,FUNCT_6,MEMBER_1,CATALG_1,ZF_MODEL,MSUALG_2,MSAFREE,FUNCOP_1,CARD_1,LANG1,ZFMISC_1,TREES_4,MCART_1,MARGREL1,FINSEQ_1,MSATERM,UNIALG_2,DTCONSTR,FINSET_1,TREES_2,TREES_9,ZF_LANG1,TREES_3,TREES_A,NUMBERS,ARYTM_3,ORDINAL4,XXREAL_0,NAT_1,PARTFUN1,MSUALG_6,PRELAMB;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,RELAT_1,FUNCT_1,RELSET_1,STRUCT_0,NUMBERS,NAT_1,MCART_1,FINSET_1,CARD_3,FINSEQ_1,FINSEQ_2,TREES_1,TREES_2,FUNCT_6,TREES_3,TREES_4,DTCONSTR,LANG1,PBOOLE,TREES_9,MSUALG_1,MSUALG_2,MSAFREE,FUNCOP_1,MSUALG_3,EQUATION,MSATERM,MSUALG_6,CATALG_1,XXREAL_0,CKB2,CKB4,CKB17,CKB18,CKB25,CKB27;
definitions TARSKI,XBOOLE_0,PBOOLE,MSUALG_2,MSUALG_6,CATALG_1,CKB4,CKB17,CKB18,CKB25,CKB27;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_3,NAT_1,MCART_1,PBOOLE,RELAT_1,CARD_3,CARD_5,FUNCT_6,TREES_3,MSUALG_1,INSTALG1,TREES_4,PRE_CIRC,TREES_1,TREES_2,MSUALG_2,MSUALG_3,MSAFREE,MSATERM,EQUATION,MSUALG_6,XBOOLE_0,XBOOLE_1,ORDINAL1,PARTFUN1,TREES_9,FINSEQ_2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35;
schemes PBOOLE,MSATERM;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,XREAL_0,FINSEQ_1,TREES_2,TREES_3,TREES_9,STRUCT_0,RELSET_1,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSATERM,INDEX_1,MSUALG_6,MSUALG_9,INSTALG1,CATALG_1,PRE_CIRC,MSSUBFAM,PBOOLE,CKB1,CKB9,CKB13,CKB14,CKB15,CKB16;
constructors DOMAIN_1,XXREAL_0,NAT_1,TREES_9,MSSUBFAM,MSUALG_3,MSATERM,MSUALG_6,CATALG_1,EQUATION,SEQ_4,RELSET_1,FINSEQ_2,CKB4,CKB17,CKB18,CKB25,CKB27;
requirements BOOLE,SUBSET,NUMERALS;
begin
reserve x for set;
theorem
Th25: (for S being non void Signature holds (for X being (ManySortedSet of (the carrier of S)) holds (the Sorts of ( Free (S,X) )) = ( S -Terms (X,( X \/ ( (the carrier of S) --> { ( 0 ) } ) )) )))
proof
let S being non void Signature;
let X being (ManySortedSet of (the carrier of S));
set Y = ( X \/ ( (the carrier of S) --> { ( 0 ) } ) );
set B = MSAlgebra (# ( S -Terms (X,Y) ),( Opers (( FreeMSA Y ),( S -Terms (X,Y) )) ) #);
(for Z being (MSSubset of ( FreeMSA Y )) holds (Z = (the Sorts of B) implies (Z is  opers_closed & (the Charact of B) = ( Opers (( FreeMSA Y ),Z) )))) by CKB33:1;
then reconsider B as (MSSubAlgebra of ( FreeMSA Y )) by MSUALG_2:def 9;
A1: (( FreeMSA Y ) = MSAlgebra (# ( FreeSort Y ),( FreeOper Y ) #) & ( dom ( FreeSort Y ) ) = (the carrier of S)) by MSAFREE:def 14,PARTFUN1:def 2;
( ( Reverse Y ) "" X ) c= ( S -Terms (X,Y) ) by CKB34:1;
then A2: ( ( Reverse Y ) "" X ) is (MSSubset of B) by PBOOLE:def 18;
(ex A being (MSSubset of ( FreeMSA Y )) st (( Free (S,X) ) = ( GenMSAlg A ) & A = ( ( Reverse Y ) "" X ))) by CKB4:def 1;
then ( Free (S,X) ) is (MSSubAlgebra of B) by A2,MSUALG_2:def 17;
then (the Sorts of ( Free (S,X) )) is (MSSubset of B) by MSUALG_2:def 9;
hence (the Sorts of ( Free (S,X) )) c= ( S -Terms (X,Y) ) by PBOOLE:def 18;
let s being set;
assume A3: s in (the carrier of S);
let x;
assume A4: x in ( ( S -Terms (X,Y) ) . s );
( S -Terms (X,Y) ) c= (the Sorts of ( FreeMSA Y )) by PBOOLE:def 18;
then ( ( S -Terms (X,Y) ) . s ) c= ( (the Sorts of ( FreeMSA Y )) . s ) by A3,PBOOLE:def 2;
then x in ( Union ( FreeSort Y ) ) by A3,A4,A1,CARD_5:2;
then x is (Term of S,Y) by MSATERM:13;
hence thesis by A3,A4,CKB35:1;
end;
