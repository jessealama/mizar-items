environ
vocabularies XBOOLE_0,STRUCT_0,MSUALG_1,CARD_3,RELAT_1,FUNCT_1,SUBSET_1,PBOOLE,MSUALG_3,TARSKI,FUNCT_6,MEMBER_1,CATALG_1,ZF_MODEL,MSUALG_2,MSAFREE,FUNCOP_1,CARD_1,LANG1,ZFMISC_1,TREES_4,MCART_1,MARGREL1,FINSEQ_1,MSATERM,UNIALG_2,DTCONSTR,FINSET_1,TREES_2,TREES_9,ZF_LANG1,TREES_3,TREES_A,NUMBERS,ARYTM_3,ORDINAL4,XXREAL_0,NAT_1,PARTFUN1,MSUALG_6,PRELAMB;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,RELAT_1,FUNCT_1,RELSET_1,STRUCT_0,NUMBERS,NAT_1,MCART_1,FINSET_1,CARD_3,FINSEQ_1,FINSEQ_2,TREES_1,TREES_2,FUNCT_6,TREES_3,TREES_4,DTCONSTR,LANG1,PBOOLE,TREES_9,MSUALG_1,MSUALG_2,MSAFREE,FUNCOP_1,MSUALG_3,EQUATION,MSATERM,MSUALG_6,CATALG_1,XXREAL_0,CKB2,CKB4;
definitions TARSKI,XBOOLE_0,PBOOLE,MSUALG_2,MSUALG_6,CATALG_1,CKB4;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_3,NAT_1,MCART_1,PBOOLE,RELAT_1,CARD_3,CARD_5,FUNCT_6,TREES_3,MSUALG_1,INSTALG1,TREES_4,PRE_CIRC,TREES_1,TREES_2,MSUALG_2,MSUALG_3,MSAFREE,MSATERM,EQUATION,MSUALG_6,XBOOLE_0,XBOOLE_1,ORDINAL1,PARTFUN1,TREES_9,FINSEQ_2,CKB3,CKB4;
schemes PBOOLE,MSATERM;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,XREAL_0,FINSEQ_1,TREES_2,TREES_3,TREES_9,STRUCT_0,RELSET_1,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSATERM,INDEX_1,MSUALG_6,MSUALG_9,INSTALG1,CATALG_1,PRE_CIRC,MSSUBFAM,PBOOLE,CKB1;
constructors DOMAIN_1,XXREAL_0,NAT_1,TREES_9,MSSUBFAM,MSUALG_3,MSATERM,MSUALG_6,CATALG_1,EQUATION,SEQ_4,RELSET_1,FINSEQ_2,CKB4;
requirements BOOLE,SUBSET,NUMERALS;
begin
reserve x for set;
reserve y for set;
reserve z for set;
theorem
Th3: (for S being non void Signature holds (for X being (ManySortedSet of (the carrier of S)) holds (for s being (SortSymbol of S) holds ([ x,s ] in (the carrier of ( DTConMSA X )) iff x in ( X . s )))))
proof
let S being non void Signature;
let X being (ManySortedSet of (the carrier of S));
let s being (SortSymbol of S);
A1: ( DTConMSA X ) = DTConstrStr (# ( [: (the carrier' of S),{ (the carrier of S) } :] \/ ( Union ( coprod X ) ) ),( REL X ) #) by MSAFREE:def 8;
A2: ( dom ( coprod X ) ) = (the carrier of S) by PARTFUN1:def 2;
s in (the carrier of S);
then s <> (the carrier of S);
then (not s in { (the carrier of S) }) by TARSKI:def 1;
then A3: (not [ x,s ] in [: (the carrier' of S),{ (the carrier of S) } :]) by ZFMISC_1:87;
hereby
assume [ x,s ] in (the carrier of ( DTConMSA X ));
then [ x,s ] in ( Union ( coprod X ) ) by A1,A3,XBOOLE_0:def 3;
then consider y such that A4: y in ( dom ( coprod X ) ) and A5: [ x,s ] in ( ( coprod X ) . y ) by CARD_5:2;
( ( coprod X ) . y ) = ( coprod (y,X) ) by A2,A4,MSAFREE:def 3;
then consider z such that A6: z in ( X . y ) and A7: [ x,s ] = [ z,y ] by A2,A4,A5,MSAFREE:def 2;
x = z by A7,ZFMISC_1:27;
hence x in ( X . s ) by A6,A7,ZFMISC_1:27;
end;
assume x in ( X . s );
then [ x,s ] in ( coprod (s,X) ) by MSAFREE:def 2;
then [ x,s ] in ( ( coprod X ) . s ) by MSAFREE:def 3;
then [ x,s ] in ( Union ( coprod X ) ) by A2,CARD_5:2;
hence thesis by A1,XBOOLE_0:def 3;
end;
