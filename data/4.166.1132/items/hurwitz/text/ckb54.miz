environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_0,XBOOLE_0,FINSEQ_1,NAT_1,RELAT_1,ARYTM_3,TARSKI,ORDINAL4,PARTFUN1,XXREAL_0,FUNCT_1,SUBSET_1,STRUCT_0,BINOP_1,VECTSP_1,LATTICES,SUPINF_2,ARYTM_1,GROUP_1,CARD_1,MESFUNC1,COMPLFLD,COMPLEX1,CARD_3,POLYNOM1,POLYNOM3,SGRAPH1,INT_1,ALGSEQ_1,VECTSP_2,POLYNOM5,AFINSQ_1,POLYNOM2,FUNCT_4,FUNCOP_1,XCMPLX_0,SQUARE_1,HURWITZ;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,NUMBERS,XCMPLX_0,ALGSTR_0,VECTSP_2,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,NAT_1,NAT_D,XXREAL_0,FINSEQ_1,INT_1,FUNCOP_1,STRUCT_0,RLVECT_1,VFUNCT_1,GROUP_1,POLYNOM1,COMPLEX1,COMPLFLD,BINOP_1,NORMSP_1,BHSP_1,ALGSEQ_1,FUNCT_4,POLYNOM3,POLYNOM4,POLYNOM5,VECTSP_1,SQUARE_1,CKB18,CKB27,CKB28,CKB40,CKB47,CKB51,CKB52,CKB53;
definitions FINSEQ_1,POLYNOM3,COMPLEX1,SQUARE_1,FUNCOP_1,CKB18,CKB27,CKB40,CKB47,CKB51,CKB52,CKB53;
theorems GROUP_1,VECTSP_1,ALGSEQ_1,NAT_1,FUNCT_1,FUNCT_2,XREAL_1,SQUARE_1,VECTSP_2,INT_1,FINSEQ_1,RLVECT_1,POLYNOM4,TARSKI,FUNCT_4,POLYNOM3,XBOOLE_1,POLYNOM2,FUNCOP_1,XCMPLX_1,XCMPLX_0,COMPLFLD,POLYNOM5,XXREAL_0,ALGSTR_1,COMPLEX1,FINSEQ_2,POLYNOM1,FINSEQ_3,BHSP_1,NORMSP_1,ORDINAL1,PARTFUN1,XREAL_0,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53;
schemes NAT_1,FUNCT_2,FINSEQ_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,XCMPLX_0,XXREAL_0,XREAL_0,SQUARE_1,NAT_1,INT_1,MEMBERED,FINSEQ_1,STRUCT_0,VECTSP_1,COMPLFLD,ALGSTR_1,GCD_1,POLYNOM3,POLYNOM4,POLYNOM5,FUNCOP_1,CARD_1,VFUNCT_1,FUNCT_2;
constructors BINOP_1,REAL_1,SQUARE_1,FINSOP_1,BINARITH,VECTSP_2,ALGSTR_1,BHSP_1,POLYNOM1,POLYNOM4,POLYNOM5,SEQ_1,BINOP_2,NAT_D,RELSET_1,FVSUM_1,VFUNCT_1,CKB18,CKB27,CKB40,CKB47,CKB51,CKB52,CKB53;
requirements NUMERALS,SUBSET,REAL,BOOLE,ARITHM;
begin
theorem
Th34: (for L being  Abelian  add-associative  right_zeroed  right_complementable  well-unital  associative  commutative  distributive  almost_left_invertible non  empty doubleLoopStr holds (for p,s being (Polynomial of L) holds (s <> ( 0_. L ) implies (s divides p iff (ex t being (Polynomial of L) st ( t *' s ) = p)))))
proof
let L being  Abelian  add-associative  right_zeroed  right_complementable  well-unital  associative  commutative  distributive  almost_left_invertible non  empty doubleLoopStr;
let p being (Polynomial of L);
let s being (Polynomial of L);
assume A1: s <> ( 0_. L );
A2:now
( ( deg s ) - ( 0 ) ) > ( ( 0 ) - 1 ) by A1,CKB32:1;
then A3: ( deg ( 0_. L ) ) < ( deg s ) by CKB30:1;
given t being (Polynomial of L) such that
A4: ( t *' s ) = p;

p = ( ( t *' s ) + ( 0_. L ) ) by A4,POLYNOM3:28;
then ( p div s ) = t by A3,CKB51:def 1;
then ( p mod s ) = ( 0_. L ) by A4,POLYNOM3:29;
hence s divides p by CKB53:def 1;
end;
now
assume A5: s divides p;
consider t being (Polynomial of L) such that A6: p = ( ( ( p div s ) *' s ) + t ) and ( deg t ) < ( deg s ) by A1,CKB51:def 1;
( p mod s ) = ( t + ( ( ( p div s ) *' s ) - ( ( p div s ) *' s ) ) ) by A6,POLYNOM3:26
.= ( t + ( 0_. L ) ) by POLYNOM3:29
.= t by POLYNOM3:28;
then t = ( 0_. L ) by A5,CKB53:def 1;
then p = ( ( p div s ) *' s ) by A6,POLYNOM3:28;
hence (ex t being (Polynomial of L) st ( t *' s ) = p);
end;
hence thesis by A2;
end;
