environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_0,XBOOLE_0,FINSEQ_1,NAT_1,RELAT_1,ARYTM_3,TARSKI,ORDINAL4,PARTFUN1,XXREAL_0,FUNCT_1,SUBSET_1,STRUCT_0,BINOP_1,VECTSP_1,LATTICES,SUPINF_2,ARYTM_1,GROUP_1,CARD_1,MESFUNC1,COMPLFLD,COMPLEX1,CARD_3,POLYNOM1,POLYNOM3,SGRAPH1,INT_1,ALGSEQ_1,VECTSP_2,POLYNOM5,AFINSQ_1,POLYNOM2,FUNCT_4,FUNCOP_1,XCMPLX_0,SQUARE_1,HURWITZ;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,NUMBERS,XCMPLX_0,ALGSTR_0,VECTSP_2,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,NAT_1,NAT_D,XXREAL_0,FINSEQ_1,INT_1,FUNCOP_1,STRUCT_0,RLVECT_1,VFUNCT_1,GROUP_1,POLYNOM1,COMPLEX1,COMPLFLD,BINOP_1,NORMSP_1,BHSP_1,ALGSEQ_1,FUNCT_4,POLYNOM3,POLYNOM4,POLYNOM5,VECTSP_1,SQUARE_1;
definitions FINSEQ_1,POLYNOM3,COMPLEX1,SQUARE_1,FUNCOP_1;
theorems GROUP_1,VECTSP_1,ALGSEQ_1,NAT_1,FUNCT_1,FUNCT_2,XREAL_1,SQUARE_1,VECTSP_2,INT_1,FINSEQ_1,RLVECT_1,POLYNOM4,TARSKI,FUNCT_4,POLYNOM3,XBOOLE_1,POLYNOM2,FUNCOP_1,XCMPLX_1,XCMPLX_0,COMPLFLD,POLYNOM5,XXREAL_0,ALGSTR_1,COMPLEX1,FINSEQ_2,POLYNOM1,FINSEQ_3,BHSP_1,NORMSP_1,ORDINAL1,PARTFUN1,XREAL_0,NAT_D;
schemes NAT_1,FUNCT_2,FINSEQ_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,XCMPLX_0,XXREAL_0,XREAL_0,SQUARE_1,NAT_1,INT_1,MEMBERED,FINSEQ_1,STRUCT_0,VECTSP_1,COMPLFLD,ALGSTR_1,GCD_1,POLYNOM3,POLYNOM4,POLYNOM5,FUNCOP_1,CARD_1,VFUNCT_1,FUNCT_2;
constructors BINOP_1,REAL_1,SQUARE_1,FINSOP_1,BINARITH,VECTSP_2,ALGSTR_1,BHSP_1,POLYNOM1,POLYNOM4,POLYNOM5,SEQ_1,BINOP_2,NAT_D,RELSET_1,FVSUM_1,VFUNCT_1;
requirements NUMERALS,SUBSET,REAL,BOOLE,ARITHM;
begin
theorem
Lm1: (for L being  add-associative  right_zeroed  right_complementable non  empty addLoopStr holds (for F being (FinSequence of L) holds (for G being FinSequence holds (for k being Nat holds ((G = ( F | ( Seg k ) ) & ( len F ) = ( k + 1 )) implies (((G is (FinSequence of L) & ( dom G ) c= ( dom F )) & ( len G ) = k) & F = ( G ^ <* ( F /. ( k + 1 ) ) *> )))))))
proof
let L being  add-associative  right_zeroed  right_complementable non  empty addLoopStr;
let F being (FinSequence of L);
let G1 being FinSequence;
let k being Nat;
assume that
A1: G1 = ( F | ( Seg k ) )
and
A2: ( len F ) = ( k + 1 );
reconsider G = G1 as FinSequence;
A3: k <= ( len F ) by A2,NAT_1:13;
then A4: ( len G ) = k by A1,FINSEQ_1:17;
now
let u being set;
assume u in ( rng G );
then consider x being set such that A5: x in ( dom G ) and A6: ( G . x ) = u by FUNCT_1:def 3;
reconsider x9 = x as (Element of ( NAT )) by A5;
x9 <= ( len G ) by A5,FINSEQ_3:25;
then A7: x9 <= ( len F ) by A2,A4,NAT_1:12;
1 <= x9 by A5,FINSEQ_3:25;
then A8: x in ( dom F ) by A7,FINSEQ_3:25;
( G . x ) = ( F . x ) by A1,A5,FUNCT_1:47
.= ( F /. x ) by A8,PARTFUN1:def 6;
hence u in (the carrier of L) by A6;
end;
then A9: ( rng G ) c= (the carrier of L) by TARSKI:def 3;
hence G1 is (FinSequence of L) by FINSEQ_1:def 4;
reconsider G as (FinSequence of L) by A9,FINSEQ_1:def 4;
A10: ( dom ( G ^ <* ( F /. ( k + 1 ) ) *> ) ) = ( Seg ( ( len G ) + ( len <* ( F /. ( k + 1 ) ) *> ) ) ) by FINSEQ_1:def 7
.= ( Seg ( k + 1 ) ) by A4,FINSEQ_1:40
.= ( dom F ) by A2,FINSEQ_1:def 3;
hence ( dom G1 ) c= ( dom F ) by FINSEQ_1:26;
thus ( len G1 ) = k by A1,A3,FINSEQ_1:17;
now
let j being Nat;
assume A11: j in ( dom F );
per cases ;
suppose A12: j in ( dom G );

hence ( F . j ) = ( G . j ) by A1,FUNCT_1:47
.= ( ( G ^ <* ( F /. ( k + 1 ) ) *> ) . j ) by A12,FINSEQ_1:def 7;
end;
suppose A13: (not j in ( dom G ));

A14: ( dom F ) = ( Seg ( len F ) ) by FINSEQ_1:def 3;
then A15: 1 <= j by A11,FINSEQ_1:1;
A16:now
assume j < ( k + 1 );
then j <= k by NAT_1:13;
then j in ( Seg k ) by A11,A15;
hence contradiction by A1,A3,A13,FINSEQ_1:17;
end;
j <= ( k + 1 ) by A2,A11,A14,FINSEQ_1:1;
then A17: j = ( k + 1 ) by A16,XXREAL_0:1;
( dom <* ( F /. ( k + 1 ) ) *> ) = { 1 } by FINSEQ_1:2,FINSEQ_1:38;
then 1 in ( dom <* ( F /. ( k + 1 ) ) *> ) by TARSKI:def 1;
hence ( ( G ^ <* ( F /. ( k + 1 ) ) *> ) . j ) = ( <* ( F /. ( k + 1 ) ) *> . 1 ) by A4,A17,FINSEQ_1:def 7
.= ( F /. ( k + 1 ) ) by FINSEQ_1:40
.= ( F . j ) by A11,A17,PARTFUN1:def 6;
end;
end;
hence thesis by A10,FINSEQ_1:13;
end;
