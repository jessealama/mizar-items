environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_0,XBOOLE_0,FINSEQ_1,NAT_1,RELAT_1,ARYTM_3,TARSKI,ORDINAL4,PARTFUN1,XXREAL_0,FUNCT_1,SUBSET_1,STRUCT_0,BINOP_1,VECTSP_1,LATTICES,SUPINF_2,ARYTM_1,GROUP_1,CARD_1,MESFUNC1,COMPLFLD,COMPLEX1,CARD_3,POLYNOM1,POLYNOM3,SGRAPH1,INT_1,ALGSEQ_1,VECTSP_2,POLYNOM5,AFINSQ_1,POLYNOM2,FUNCT_4,FUNCOP_1,XCMPLX_0,SQUARE_1,HURWITZ;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,NUMBERS,XCMPLX_0,ALGSTR_0,VECTSP_2,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,NAT_1,NAT_D,XXREAL_0,FINSEQ_1,INT_1,FUNCOP_1,STRUCT_0,RLVECT_1,VFUNCT_1,GROUP_1,POLYNOM1,COMPLEX1,COMPLFLD,BINOP_1,NORMSP_1,BHSP_1,ALGSEQ_1,FUNCT_4,POLYNOM3,POLYNOM4,POLYNOM5,VECTSP_1,SQUARE_1;
definitions FINSEQ_1,POLYNOM3,COMPLEX1,SQUARE_1,FUNCOP_1;
theorems GROUP_1,VECTSP_1,ALGSEQ_1,NAT_1,FUNCT_1,FUNCT_2,XREAL_1,SQUARE_1,VECTSP_2,INT_1,FINSEQ_1,RLVECT_1,POLYNOM4,TARSKI,FUNCT_4,POLYNOM3,XBOOLE_1,POLYNOM2,FUNCOP_1,XCMPLX_1,XCMPLX_0,COMPLFLD,POLYNOM5,XXREAL_0,ALGSTR_1,COMPLEX1,FINSEQ_2,POLYNOM1,FINSEQ_3,BHSP_1,NORMSP_1,ORDINAL1,PARTFUN1,XREAL_0,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8;
schemes NAT_1,FUNCT_2,FINSEQ_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,XCMPLX_0,XXREAL_0,XREAL_0,SQUARE_1,NAT_1,INT_1,MEMBERED,FINSEQ_1,STRUCT_0,VECTSP_1,COMPLFLD,ALGSTR_1,GCD_1,POLYNOM3,POLYNOM4,POLYNOM5,FUNCOP_1,CARD_1,VFUNCT_1,FUNCT_2;
constructors BINOP_1,REAL_1,SQUARE_1,FINSOP_1,BINARITH,VECTSP_2,ALGSTR_1,BHSP_1,POLYNOM1,POLYNOM4,POLYNOM5,SEQ_1,BINOP_2,NAT_D,RELSET_1,FVSUM_1,VFUNCT_1;
requirements NUMERALS,SUBSET,REAL,BOOLE,ARITHM;
begin
theorem
Th6: (for F,G being (FinSequence of ( F_Complex )) holds ((( len G ) = ( len F ) & (for i being (Element of ( NAT )) holds (i in ( dom G ) implies ( G /. i ) = ( ( F /. i ) *' )))) implies ( Sum G ) = ( ( Sum F ) *' )))
proof
defpred P[ Nat ]
 means
(for F,G being (FinSequence of ( F_Complex )) holds (((( len G ) = ( len F ) & ( len F ) = $1) & (for i being (Element of ( NAT )) holds (i in ( dom G ) implies ( G /. i ) = ( ( F /. i ) *' )))) implies ( Sum G ) = ( ( Sum F ) *' )));
let F being (FinSequence of ( F_Complex ));
let G being (FinSequence of ( F_Complex ));
assume that
A1: ( len G ) = ( len F )
and
A2: (for i being (Element of ( NAT )) holds (i in ( dom G ) implies ( G /. i ) = ( ( F /. i ) *' )));
A3:now
let k being (Element of ( NAT ));
assume A4: P[ k ];
now
let F being (FinSequence of ( F_Complex ));
let G being (FinSequence of ( F_Complex ));
assume that
A5: ( len F ) = ( len G )
and
A6: ( len F ) = ( k + 1 )
and
A7: (for i being (Element of ( NAT )) holds (i in ( dom G ) implies ( G /. i ) = ( ( F /. i ) *' )));
set G1 = ( G | ( Seg k ) );
reconsider G1 as FinSequence by FINSEQ_1:15;
reconsider G1 as (FinSequence of ( F_Complex )) by A5,A6,CKB1:1;
A8: G = ( G1 ^ <* ( G /. ( k + 1 ) ) *> ) by A5,A6,CKB1:1;
set F1 = ( F | ( Seg k ) );
reconsider F1 as FinSequence by FINSEQ_1:15;
reconsider F1 as (FinSequence of ( F_Complex )) by A6,CKB1:1;
A9: ( len F1 ) = k by A6,CKB1:1;
A10: ( len G1 ) = k by A5,A6,CKB1:1;
then A11: ( dom G1 ) = ( Seg ( len F1 ) ) by A9,FINSEQ_1:def 3
.= ( dom F1 ) by FINSEQ_1:def 3;
1 <= ( k + 1 ) by NAT_1:11;
then A12: ( k + 1 ) in ( dom G ) by A5,A6,FINSEQ_3:25;
A13: F = ( F1 ^ <* ( F /. ( k + 1 ) ) *> ) by A6,CKB1:1;
A14: ( dom G ) = ( Seg ( len F ) ) by A5,FINSEQ_1:def 3
.= ( dom F ) by FINSEQ_1:def 3;
A15:now
let i being (Element of ( NAT ));
assume A16: i in ( dom G1 );
A17: ( dom G1 ) c= ( dom G ) by A5,A6,CKB1:1;
then A18: ( F /. i ) = ( F . i ) by A14,A16,PARTFUN1:def 6
.= ( F1 . i ) by A13,A11,A16,FINSEQ_1:def 7
.= ( F1 /. i ) by A11,A16,PARTFUN1:def 6;
thus ( G1 /. i ) = ( G1 . i ) by A16,PARTFUN1:def 6
.= ( G . i ) by A8,A16,FINSEQ_1:def 7
.= ( G /. i ) by A16,A17,PARTFUN1:def 6
.= ( ( F1 /. i ) *' ) by A7,A16,A17,A18;
end;
thus ( ( Sum F ) *' ) = ( ( ( Sum F1 ) + ( Sum <* ( F /. ( k + 1 ) ) *> ) ) *' ) by A13,RLVECT_1:41
.= ( ( ( Sum F1 ) *' ) + ( ( Sum <* ( F /. ( k + 1 ) ) *> ) *' ) ) by COMPLFLD:51
.= ( ( Sum G1 ) + ( ( Sum <* ( F /. ( k + 1 ) ) *> ) *' ) ) by A4,A10,A9,A15
.= ( ( Sum G1 ) + ( ( F /. ( k + 1 ) ) *' ) ) by RLVECT_1:44
.= ( ( Sum G1 ) + ( G /. ( k + 1 ) ) ) by A7,A12
.= ( ( Sum G1 ) + ( Sum <* ( G /. ( k + 1 ) ) *> ) ) by RLVECT_1:44
.= ( Sum G ) by A8,RLVECT_1:41;
end;
hence P[ ( k + 1 ) ];
end;
now
let F being (FinSequence of ( F_Complex ));
let G being (FinSequence of ( F_Complex ));
assume that
A19: ( len F ) = ( len G )
and
A20: ( len F ) = ( 0 )
and
(for i being (Element of ( NAT )) holds (i in ( dom G ) implies ( G /. i ) = ( ( F /. i ) *' )));
F = ( <*> (the carrier of ( F_Complex )) ) by A20;
then ( Sum F ) = ( 0. ( F_Complex ) ) by RLVECT_1:43;
then A21: ( Sum F ) = ( ( 0. ( F_Complex ) ) *' ) by CKB5:1,CKB6:1;
G = ( <*> (the carrier of ( F_Complex )) ) by A19,A20;
hence ( Sum G ) = ( ( Sum F ) *' ) by A21,RLVECT_1:43;
end;
then A22: P[ ( 0 ) ];
(for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A22,A3);
hence thesis by A1,A2;
end;
