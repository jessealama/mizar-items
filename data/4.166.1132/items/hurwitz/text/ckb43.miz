environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_0,XBOOLE_0,FINSEQ_1,NAT_1,RELAT_1,ARYTM_3,TARSKI,ORDINAL4,PARTFUN1,XXREAL_0,FUNCT_1,SUBSET_1,STRUCT_0,BINOP_1,VECTSP_1,LATTICES,SUPINF_2,ARYTM_1,GROUP_1,CARD_1,MESFUNC1,COMPLFLD,COMPLEX1,CARD_3,POLYNOM1,POLYNOM3,SGRAPH1,INT_1,ALGSEQ_1,VECTSP_2,POLYNOM5,AFINSQ_1,POLYNOM2,FUNCT_4,FUNCOP_1,XCMPLX_0,SQUARE_1,HURWITZ;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,NUMBERS,XCMPLX_0,ALGSTR_0,VECTSP_2,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,NAT_1,NAT_D,XXREAL_0,FINSEQ_1,INT_1,FUNCOP_1,STRUCT_0,RLVECT_1,VFUNCT_1,GROUP_1,POLYNOM1,COMPLEX1,COMPLFLD,BINOP_1,NORMSP_1,BHSP_1,ALGSEQ_1,FUNCT_4,POLYNOM3,POLYNOM4,POLYNOM5,VECTSP_1,SQUARE_1,CKB18,CKB27,CKB28,CKB40;
definitions FINSEQ_1,POLYNOM3,COMPLEX1,SQUARE_1,FUNCOP_1,CKB18,CKB27,CKB40;
theorems GROUP_1,VECTSP_1,ALGSEQ_1,NAT_1,FUNCT_1,FUNCT_2,XREAL_1,SQUARE_1,VECTSP_2,INT_1,FINSEQ_1,RLVECT_1,POLYNOM4,TARSKI,FUNCT_4,POLYNOM3,XBOOLE_1,POLYNOM2,FUNCOP_1,XCMPLX_1,XCMPLX_0,COMPLFLD,POLYNOM5,XXREAL_0,ALGSTR_1,COMPLEX1,FINSEQ_2,POLYNOM1,FINSEQ_3,BHSP_1,NORMSP_1,ORDINAL1,PARTFUN1,XREAL_0,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42;
schemes NAT_1,FUNCT_2,FINSEQ_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,XCMPLX_0,XXREAL_0,XREAL_0,SQUARE_1,NAT_1,INT_1,MEMBERED,FINSEQ_1,STRUCT_0,VECTSP_1,COMPLFLD,ALGSTR_1,GCD_1,POLYNOM3,POLYNOM4,POLYNOM5,FUNCOP_1,CARD_1,VFUNCT_1,FUNCT_2;
constructors BINOP_1,REAL_1,SQUARE_1,FINSOP_1,BINARITH,VECTSP_2,ALGSTR_1,BHSP_1,POLYNOM1,POLYNOM4,POLYNOM5,SEQ_1,BINOP_2,NAT_D,RELSET_1,FVSUM_1,VFUNCT_1,CKB18,CKB27,CKB40;
requirements NUMERALS,SUBSET,REAL,BOOLE,ARITHM;
begin
theorem
Th27: (for L being  well-unital non degenerated non empty doubleLoopStr holds (for z being (Element of L) holds (for k being (Element of ( NAT )) holds ( deg ( rpoly (k,z) ) ) = k)))
proof
let L being  well-unital non degenerated non empty doubleLoopStr;
let z being (Element of L);
let k being (Element of ( NAT ));
set t = ( rpoly (k,z) );
set f = ( (( 0 ),k) --> (( - ( ( power L ) . (z,k) ) ),( 1_ L )) );
set a = ( - ( ( power L ) . (z,k) ) );
per cases ;
suppose A1: k = ( 0 );

A2:now
let m being Nat;
assume A3: m is_at_least_length_of t;
now
assume m < 1;
then A4: m = ( 0 ) by NAT_1:14;
A5: k in { k } by TARSKI:def 1;
then A6: k in ( dom ( { k } --> ( 1_ L ) ) ) by FUNCOP_1:13;
( dom f ) = { ( 0 ),k } by FUNCT_4:62;
then ( 0 ) in ( dom f ) by TARSKI:def 2;
then ( t . ( 0 ) ) = ( f . ( 0 ) ) by FUNCT_4:13
.= ( ( ( ( 0 ) .--> a ) +* ( k .--> ( 1_ L ) ) ) . ( 0 ) ) by FUNCT_4:def 4
.= ( ( ( 0 ) .--> ( 1_ L ) ) . ( 0 ) ) by A1,A6,FUNCT_4:13
.= ( 1_ L ) by A1,A5,FUNCOP_1:7;
hence contradiction by A3,A4,ALGSEQ_1:def 2;
end;
hence 1 <= m;
end;
now
let i being Nat;
A7: i in ( NAT ) by ORDINAL1:def 12;
assume i >= 1;
then (not i in ( dom f )) by A1,TARSKI:def 2;
hence ( t . i ) = ( ( 0_. L ) . i ) by FUNCT_4:11
.= ( 0. L ) by A7,FUNCOP_1:7;
end;
then 1 is_at_least_length_of t by ALGSEQ_1:def 2;
then ( len ( rpoly (k,z) ) ) = 1 by A2,ALGSEQ_1:def 3;
hence thesis by A1;
end;
suppose A8: k <> ( 0 );

A9:now
let m being Nat;
assume A10: m is_at_least_length_of t;
now
assume m < ( k + 1 );
then A11: m <= k by NAT_1:13;
( t . k ) = ( 1_ L ) by A8,CKB38:1;
hence contradiction by A10,A11,ALGSEQ_1:def 2;
end;
hence ( k + 1 ) <= m;
end;
now
let i being Nat;
assume i >= ( k + 1 );
then i > k by NAT_1:13;
hence ( t . i ) = ( 0. L ) by CKB39:1;
end;
then ( k + 1 ) is_at_least_length_of t by ALGSEQ_1:def 2;
then ( len ( rpoly (k,z) ) ) = ( k + 1 ) by A9,ALGSEQ_1:def 3;
hence thesis;
end;
end;
