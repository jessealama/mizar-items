environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_0,XBOOLE_0,FINSEQ_1,NAT_1,RELAT_1,ARYTM_3,TARSKI,ORDINAL4,PARTFUN1,XXREAL_0,FUNCT_1,SUBSET_1,STRUCT_0,BINOP_1,VECTSP_1,LATTICES,SUPINF_2,ARYTM_1,GROUP_1,CARD_1,MESFUNC1,COMPLFLD,COMPLEX1,CARD_3,POLYNOM1,POLYNOM3,SGRAPH1,INT_1,ALGSEQ_1,VECTSP_2,POLYNOM5,AFINSQ_1,POLYNOM2,FUNCT_4,FUNCOP_1,XCMPLX_0,SQUARE_1,HURWITZ;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,NUMBERS,XCMPLX_0,ALGSTR_0,VECTSP_2,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,NAT_1,NAT_D,XXREAL_0,FINSEQ_1,INT_1,FUNCOP_1,STRUCT_0,RLVECT_1,VFUNCT_1,GROUP_1,POLYNOM1,COMPLEX1,COMPLFLD,BINOP_1,NORMSP_1,BHSP_1,ALGSEQ_1,FUNCT_4,POLYNOM3,POLYNOM4,POLYNOM5,VECTSP_1,SQUARE_1,CKB18,CKB27,CKB28;
definitions FINSEQ_1,POLYNOM3,COMPLEX1,SQUARE_1,FUNCOP_1,CKB18,CKB27;
theorems GROUP_1,VECTSP_1,ALGSEQ_1,NAT_1,FUNCT_1,FUNCT_2,XREAL_1,SQUARE_1,VECTSP_2,INT_1,FINSEQ_1,RLVECT_1,POLYNOM4,TARSKI,FUNCT_4,POLYNOM3,XBOOLE_1,POLYNOM2,FUNCOP_1,XCMPLX_1,XCMPLX_0,COMPLFLD,POLYNOM5,XXREAL_0,ALGSTR_1,COMPLEX1,FINSEQ_2,POLYNOM1,FINSEQ_3,BHSP_1,NORMSP_1,ORDINAL1,PARTFUN1,XREAL_0,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
schemes NAT_1,FUNCT_2,FINSEQ_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,XCMPLX_0,XXREAL_0,XREAL_0,SQUARE_1,NAT_1,INT_1,MEMBERED,FINSEQ_1,STRUCT_0,VECTSP_1,COMPLFLD,ALGSTR_1,GCD_1,POLYNOM3,POLYNOM4,POLYNOM5,FUNCOP_1,CARD_1,VFUNCT_1,FUNCT_2;
constructors BINOP_1,REAL_1,SQUARE_1,FINSOP_1,BINARITH,VECTSP_2,ALGSTR_1,BHSP_1,POLYNOM1,POLYNOM4,POLYNOM5,SEQ_1,BINOP_2,NAT_D,RELSET_1,FVSUM_1,VFUNCT_1,CKB18,CKB27;
requirements NUMERALS,SUBSET,REAL,BOOLE,ARITHM;
begin
definition
let L being  unital non  empty doubleLoopStr;
let z being (Element of L);
let k being (Element of ( NAT ));
func rpoly (k,z) -> (Polynomial of L) equals 
( ( 0_. L ) +* ( (( 0 ),k) --> (( - ( ( power L ) . (z,k) ) ),( 1_ L )) ) );
coherence
proof
now
let u being set;
assume u in { ( 0 ),k };
then (u = ( 0 ) or u = k) by TARSKI:def 2;
hence u in ( NAT );
end;
then A1: { ( 0 ),k } c= ( NAT ) by TARSKI:def 3;
set a = ( - ( ( power L ) . (z,k) ) );
set p = ( ( 0_. L ) +* ( (( 0 ),k) --> (( - ( ( power L ) . (z,k) ) ),( 1_ L )) ) );
set f = ( (( 0 ),k) --> (( - ( ( power L ) . (z,k) ) ),( 1_ L )) );
A2: ( dom f ) = { ( 0 ),k } by FUNCT_4:62;
A3: k in { k } by TARSKI:def 1;
then A4: k in ( dom ( { k } --> ( 1_ L ) ) ) by FUNCOP_1:13;
A5:now
let x9 being set;
assume x9 in ( NAT );
then reconsider x = x9 as (Element of ( NAT ));
per cases ;
suppose A6: (k = ( 0 ) & x = ( 0 ));

then x in ( dom f ) by A2,TARSKI:def 2;
then ( p . x ) = ( f . x ) by FUNCT_4:13
.= ( ( ( ( 0 ) .--> a ) +* ( k .--> ( 1_ L ) ) ) . x ) by FUNCT_4:def 4
.= ( ( k .--> ( 1_ L ) ) . x ) by A4,A6,FUNCT_4:13
.= ( 1_ L ) by A3,A6,FUNCOP_1:7;
hence ( p . x9 ) in (the carrier of L);
end;
suppose (x = ( 0 ) & k <> ( 0 ));

then ( p . x ) = ( - ( ( power L ) . (z,k) ) ) by CKB38:1;
hence ( p . x9 ) in (the carrier of L);
end;
suppose (x = k & k <> ( 0 ));

then ( p . x ) = ( 1_ L ) by CKB38:1;
hence ( p . x9 ) in (the carrier of L);
end;
suppose (x <> ( 0 ) & x <> k);

then ( p . x ) = ( 0. L ) by CKB39:1;
hence ( p . x9 ) in (the carrier of L);
end;
end;
( dom ( 0_. L ) ) = ( NAT ) by FUNCT_2:def 1;
then ( ( dom ( 0_. L ) ) \/ ( dom f ) ) = ( NAT ) by A2,A1,XBOOLE_1:12;
then ( dom p ) = ( NAT ) by FUNCT_4:def 1;
then reconsider p as (Function of ( NAT ),(the carrier of L)) by A5,FUNCT_2:3;
reconsider p as (sequence of L);
now
let i being Nat;
assume A7: i >= ( k + 1 );
then i <> k by NAT_1:13;
hence ( p . i ) = ( 0. L ) by A7,CKB39:1;
end;
then reconsider p as (AlgSequence of L) by ALGSEQ_1:def 1;
p is (Polynomial of L);
hence thesis;
end;
end;
