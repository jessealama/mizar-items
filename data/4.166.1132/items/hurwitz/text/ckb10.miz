environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_0,XBOOLE_0,FINSEQ_1,NAT_1,RELAT_1,ARYTM_3,TARSKI,ORDINAL4,PARTFUN1,XXREAL_0,FUNCT_1,SUBSET_1,STRUCT_0,BINOP_1,VECTSP_1,LATTICES,SUPINF_2,ARYTM_1,GROUP_1,CARD_1,MESFUNC1,COMPLFLD,COMPLEX1,CARD_3,POLYNOM1,POLYNOM3,SGRAPH1,INT_1,ALGSEQ_1,VECTSP_2,POLYNOM5,AFINSQ_1,POLYNOM2,FUNCT_4,FUNCOP_1,XCMPLX_0,SQUARE_1,HURWITZ;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,NUMBERS,XCMPLX_0,ALGSTR_0,VECTSP_2,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,NAT_1,NAT_D,XXREAL_0,FINSEQ_1,INT_1,FUNCOP_1,STRUCT_0,RLVECT_1,VFUNCT_1,GROUP_1,POLYNOM1,COMPLEX1,COMPLFLD,BINOP_1,NORMSP_1,BHSP_1,ALGSEQ_1,FUNCT_4,POLYNOM3,POLYNOM4,POLYNOM5,VECTSP_1,SQUARE_1;
definitions FINSEQ_1,POLYNOM3,COMPLEX1,SQUARE_1,FUNCOP_1;
theorems GROUP_1,VECTSP_1,ALGSEQ_1,NAT_1,FUNCT_1,FUNCT_2,XREAL_1,SQUARE_1,VECTSP_2,INT_1,FINSEQ_1,RLVECT_1,POLYNOM4,TARSKI,FUNCT_4,POLYNOM3,XBOOLE_1,POLYNOM2,FUNCOP_1,XCMPLX_1,XCMPLX_0,COMPLFLD,POLYNOM5,XXREAL_0,ALGSTR_1,COMPLEX1,FINSEQ_2,POLYNOM1,FINSEQ_3,BHSP_1,NORMSP_1,ORDINAL1,PARTFUN1,XREAL_0,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9;
schemes NAT_1,FUNCT_2,FINSEQ_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,XCMPLX_0,XXREAL_0,XREAL_0,SQUARE_1,NAT_1,INT_1,MEMBERED,FINSEQ_1,STRUCT_0,VECTSP_1,COMPLFLD,ALGSTR_1,GCD_1,POLYNOM3,POLYNOM4,POLYNOM5,FUNCOP_1,CARD_1,VFUNCT_1,FUNCT_2;
constructors BINOP_1,REAL_1,SQUARE_1,FINSOP_1,BINARITH,VECTSP_2,ALGSTR_1,BHSP_1,POLYNOM1,POLYNOM4,POLYNOM5,SEQ_1,BINOP_2,NAT_D,RELSET_1,FVSUM_1,VFUNCT_1;
requirements NUMERALS,SUBSET,REAL,BOOLE,ARITHM;
begin
theorem
Th7: (for L being  add-associative  right_zeroed  right_complementable  Abelian non  empty addLoopStr holds (for F1,F2 being (FinSequence of L) holds ((( len F1 ) = ( len F2 ) & (for i being (Element of ( NAT )) holds (i in ( dom F1 ) implies ( F1 /. i ) = ( - ( F2 /. i ) )))) implies ( Sum F1 ) = ( - ( Sum F2 ) ))))
proof
let L being  add-associative  right_zeroed  right_complementable  Abelian non  empty addLoopStr;
let F1 being (FinSequence of L);
let F2 being (FinSequence of L);
assume that
A1: ( len F1 ) = ( len F2 )
and
A2: (for i being (Element of ( NAT )) holds (i in ( dom F1 ) implies ( F1 /. i ) = ( - ( F2 /. i ) )));
defpred P[ Nat ]
 means
(for F1,F2 being (FinSequence of L) holds (((( len F1 ) = $1 & ( len F1 ) = ( len F2 )) & (for i being (Element of ( NAT )) holds (i in ( dom F1 ) implies ( F1 /. i ) = ( - ( F2 /. i ) )))) implies ( Sum F1 ) = ( - ( Sum F2 ) )));
A3:now
let k being (Element of ( NAT ));
assume A4: P[ k ];
now
let f being (FinSequence of L);
let g being (FinSequence of L);
assume that
A5: ( len f ) = ( k + 1 )
and
A6: ( len f ) = ( len g )
and
A7: (for i being (Element of ( NAT )) holds (i in ( dom f ) implies ( f /. i ) = ( - ( g /. i ) )));
set f1 = ( f | ( Seg k ) );
set g1 = ( g | ( Seg k ) );
reconsider f1,g1 as FinSequence by FINSEQ_1:15;
reconsider f1,g1 as (FinSequence of L) by A5,A6,CKB1:1;
A8: ( len f1 ) = k by A5,CKB1:1;
A9: ( len g1 ) = k by A5,A6,CKB1:1;
then A10: ( dom f1 ) = ( Seg ( len g1 ) ) by A8,FINSEQ_1:def 3
.= ( dom g1 ) by FINSEQ_1:def 3;
A11: f = ( f1 ^ <* ( f /. ( k + 1 ) ) *> ) by A5,CKB1:1;
A12: g = ( g1 ^ <* ( g /. ( k + 1 ) ) *> ) by A5,A6,CKB1:1;
A13:now
A14: ( dom f1 ) c= ( dom f ) by A5,CKB1:1;
let i being (Element of ( NAT ));
assume A15: i in ( dom f1 );
( dom g1 ) c= ( dom g ) by A5,A6,CKB1:1;
then A16: ( g /. i ) = ( g . i ) by A10,A15,PARTFUN1:def 6
.= ( g1 . i ) by A12,A10,A15,FINSEQ_1:def 7
.= ( g1 /. i ) by A10,A15,PARTFUN1:def 6;
thus ( f1 /. i ) = ( f1 . i ) by A15,PARTFUN1:def 6
.= ( f . i ) by A11,A15,FINSEQ_1:def 7
.= ( f /. i ) by A15,A14,PARTFUN1:def 6
.= ( - ( g1 /. i ) ) by A7,A15,A14,A16;
end;
1 <= ( k + 1 ) by NAT_1:11;
then A17: ( k + 1 ) in ( dom f ) by A5,FINSEQ_3:25;
thus ( Sum f ) = ( ( Sum f1 ) + ( Sum <* ( f /. ( k + 1 ) ) *> ) ) by A11,RLVECT_1:41
.= ( ( - ( Sum g1 ) ) + ( Sum <* ( f /. ( k + 1 ) ) *> ) ) by A4,A8,A9,A13
.= ( ( - ( Sum g1 ) ) + ( f /. ( k + 1 ) ) ) by RLVECT_1:44
.= ( ( - ( Sum g1 ) ) + ( - ( g /. ( k + 1 ) ) ) ) by A7,A17
.= ( - ( ( Sum g1 ) + ( g /. ( k + 1 ) ) ) ) by RLVECT_1:31
.= ( - ( ( Sum g1 ) + ( Sum <* ( g /. ( k + 1 ) ) *> ) ) ) by RLVECT_1:44
.= ( - ( Sum g ) ) by A12,RLVECT_1:41;
end;
hence P[ ( k + 1 ) ];
end;
now
let f being (FinSequence of L);
let g being (FinSequence of L);
assume that
A18: ( len f ) = ( 0 )
and
A19: ( len f ) = ( len g )
and
(for i being (Element of ( NAT )) holds (i in ( dom f ) implies ( f /. i ) = ( - ( g /. i ) )));
A20: g = ( <*> (the carrier of L) ) by A18,A19;
f = ( <*> (the carrier of L) ) by A18;
hence ( Sum f ) = ( 0. L ) by RLVECT_1:43
.= ( - ( 0. L ) ) by RLVECT_1:12
.= ( - ( Sum g ) ) by A20,RLVECT_1:43;
end;
then A21: P[ ( 0 ) ];
(for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A21,A3);
hence thesis by A1,A2;
end;
