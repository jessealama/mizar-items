environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_0,XBOOLE_0,FINSEQ_1,NAT_1,RELAT_1,ARYTM_3,TARSKI,ORDINAL4,PARTFUN1,XXREAL_0,FUNCT_1,SUBSET_1,STRUCT_0,BINOP_1,VECTSP_1,LATTICES,SUPINF_2,ARYTM_1,GROUP_1,CARD_1,MESFUNC1,COMPLFLD,COMPLEX1,CARD_3,POLYNOM1,POLYNOM3,SGRAPH1,INT_1,ALGSEQ_1,VECTSP_2,POLYNOM5,AFINSQ_1,POLYNOM2,FUNCT_4,FUNCOP_1,XCMPLX_0,SQUARE_1,HURWITZ;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,NUMBERS,XCMPLX_0,ALGSTR_0,VECTSP_2,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,NAT_1,NAT_D,XXREAL_0,FINSEQ_1,INT_1,FUNCOP_1,STRUCT_0,RLVECT_1,VFUNCT_1,GROUP_1,POLYNOM1,COMPLEX1,COMPLFLD,BINOP_1,NORMSP_1,BHSP_1,ALGSEQ_1,FUNCT_4,POLYNOM3,POLYNOM4,POLYNOM5,VECTSP_1,SQUARE_1,CKB18;
definitions FINSEQ_1,POLYNOM3,COMPLEX1,SQUARE_1,FUNCOP_1,CKB18;
theorems GROUP_1,VECTSP_1,ALGSEQ_1,NAT_1,FUNCT_1,FUNCT_2,XREAL_1,SQUARE_1,VECTSP_2,INT_1,FINSEQ_1,RLVECT_1,POLYNOM4,TARSKI,FUNCT_4,POLYNOM3,XBOOLE_1,POLYNOM2,FUNCOP_1,XCMPLX_1,XCMPLX_0,COMPLFLD,POLYNOM5,XXREAL_0,ALGSTR_1,COMPLEX1,FINSEQ_2,POLYNOM1,FINSEQ_3,BHSP_1,NORMSP_1,ORDINAL1,PARTFUN1,XREAL_0,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25;
schemes NAT_1,FUNCT_2,FINSEQ_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,XCMPLX_0,XXREAL_0,XREAL_0,SQUARE_1,NAT_1,INT_1,MEMBERED,FINSEQ_1,STRUCT_0,VECTSP_1,COMPLFLD,ALGSTR_1,GCD_1,POLYNOM3,POLYNOM4,POLYNOM5,FUNCOP_1,CARD_1,VFUNCT_1,FUNCT_2;
constructors BINOP_1,REAL_1,SQUARE_1,FINSOP_1,BINARITH,VECTSP_2,ALGSTR_1,BHSP_1,POLYNOM1,POLYNOM4,POLYNOM5,SEQ_1,BINOP_2,NAT_D,RELSET_1,FVSUM_1,VFUNCT_1,CKB18;
requirements NUMERALS,SUBSET,REAL,BOOLE,ARITHM;
begin
theorem
Th19: (for L being  add-associative  right_zeroed  right_complementable  distributive  commutative  associative non empty doubleLoopStr holds (for p1,p2 being (Polynomial of L) holds (for x being (Element of L) holds ( p1 *' ( x * p2 ) ) = ( x * ( p1 *' p2 ) ))))
proof
let L being  add-associative  right_zeroed  right_complementable  distributive  commutative  associative non empty doubleLoopStr;
let p1 being (Polynomial of L),p2 being (Polynomial of L);
let x being (Element of L);
set f = ( p1 *' ( x * p2 ) );
set g = ( x * ( p1 *' p2 ) );
A1:now
let i9 being set;
assume i9 in ( dom f );
then reconsider i = i9 as (Element of ( NAT ));
consider rf being (FinSequence of L) such that A2: ( len rf ) = ( i + 1 ) and A3: ( f . i ) = ( Sum rf ) and A4: (for k being (Element of ( NAT )) holds (k in ( dom rf ) implies ( rf . k ) = ( ( p1 . ( k -' 1 ) ) * ( ( x * p2 ) . ( ( i + 1 ) -' k ) ) ))) by POLYNOM3:def 9;
consider rp being (FinSequence of L) such that A5: ( len rp ) = ( i + 1 ) and A6: ( ( p1 *' p2 ) . i ) = ( Sum rp ) and A7: (for k being (Element of ( NAT )) holds (k in ( dom rp ) implies ( rp . k ) = ( ( p1 . ( k -' 1 ) ) * ( p2 . ( ( i + 1 ) -' k ) ) ))) by POLYNOM3:def 9;
A8: ( Seg ( len ( x * rp ) ) ) = ( dom ( x * rp ) ) by FINSEQ_1:def 3
.= ( dom rp ) by POLYNOM1:def 1
.= ( Seg ( len rp ) ) by FINSEQ_1:def 3;
then A9: ( dom ( x * rp ) ) = ( Seg ( len rf ) ) by A2,A5,FINSEQ_1:def 3
.= ( dom rf ) by FINSEQ_1:def 3;
A10: ( dom ( x * rp ) ) = ( dom rp ) by POLYNOM1:def 1;
A11:now
let j being Nat;
assume that
A12: 1 <= j
and
A13: j <= ( len rf );
A14: j in ( dom rf ) by A12,A13,FINSEQ_3:25;
then A15: ( rp /. j ) = ( rp . j ) by A9,A10,PARTFUN1:def 6;
thus ( ( x * rp ) . j ) = ( ( x * rp ) /. j ) by A9,A14,PARTFUN1:def 6
.= ( x * ( rp /. j ) ) by A9,A10,A14,POLYNOM1:def 1
.= ( x * ( ( p1 . ( j -' 1 ) ) * ( p2 . ( ( i + 1 ) -' j ) ) ) ) by A7,A9,A10,A14,A15
.= ( ( p1 . ( j -' 1 ) ) * ( x * ( p2 . ( ( i + 1 ) -' j ) ) ) ) by GROUP_1:def 3
.= ( ( p1 . ( j -' 1 ) ) * ( ( x * p2 ) . ( ( i + 1 ) -' j ) ) ) by POLYNOM5:def 3
.= ( rf . j ) by A4,A14;
end;
( g . i ) = ( x * ( Sum rp ) ) by A6,POLYNOM5:def 3
.= ( Sum ( x * rp ) ) by CKB11:1
.= ( f . i ) by A2,A3,A5,A8,A11,FINSEQ_1:6,FINSEQ_1:14;
hence ( f . i9 ) = ( g . i9 );
end;
( dom f ) = ( NAT ) by FUNCT_2:def 1
.= ( dom g ) by FUNCT_2:def 1;
hence thesis by A1,FUNCT_1:2;
end;
