environ
vocabularies NUMBERS,NAT_1,VECTSP_1,FREEALG,FINSET_1,SUBSET_1,MATRIX_1,TREES_1,FINSEQ_1,RELAT_1,XXREAL_0,INCSP_1,FVSUM_1,CARD_3,RVSUM_1,GROUP_1,ARYTM_1,SUPINF_2,FUNCT_1,ARYTM_3,CARD_1,XBOOLE_0,ALGSTR_0,ORDINAL4,STRUCT_0,FINSEQ_2,TARSKI,RLVECT_1,PARTFUN1,VALUED_1,ZFMISC_1,CLASSES1,XCMPLX_0,MATRIX_3,MATRIX13,LAPLACE,PRVECT_1,RLVECT_3,LMOD_7,QC_LANG1,RLSUB_1,MESFUNC1,PRE_POLY,MATRIX11,MATRIXR1,AFINSQ_1,MATRIX_2,FINSEQ_3,FUNCT_2,SETWISEO,FINSOP_1,RLVECT_2,RLVECT_5,FUNCOP_1,FUNCT_4,MATRIX_6,MATRIX15;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,CARD_1,XCMPLX_0,ALGSTR_0,XXREAL_0,NAT_1,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,SETWOP_2,FINSEQ_1,STRUCT_0,FUNCOP_1,RLVECT_1,GROUP_1,VECTSP_1,FINSEQ_2,MATRIX_1,MATRIX_2,FVSUM_1,FINSOP_1,NAT_D,BINARITH,GROUP_4,MATRIX_3,MATRIX_6,MATRIX_7,FINSEQ_7,FUNCT_4,DOMAIN_1,MATRIX11,MEASURE6,PSCOMP_1,VECTSP_4,VECTSP_6,VECTSP_7,VECTSP_9,FINSEQOP,PRVECT_1,MATRIX13,PRE_POLY,MATRLIN,FUNCT_7,PNPROC_1,LAPLACE,CKB17,CKB28,CKB29,CKB38;
definitions TARSKI,XBOOLE_0,RLVECT_1,FINSEQ_1,FINSEQ_2,MATRIX_1,GROUP_4,MATRIX_3,MATRIX_7,VECTSP_4,RELAT_1,LAPLACE,MATRIX13,FVSUM_1,ALGSTR_0,CKB28,CKB29,CKB38;
theorems CARD_1,CARD_2,CARD_FIN,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQOP,FINSOP_1,FRECHET,FUNCT_1,FUNCT_2,FUNCT_7,FUNCOP_1,FVSUM_1,GROUP_1,LAPLACE,MATRIX_1,MATRIX_2,MATRIX_3,MATRIX_4,MATRIX_5,MATRIX_6,MATRIX_7,MATRIX11,MATRIX13,MATRIXR1,MATRIXR2,MATRLIN,NAT_1,ORDINAL1,PARTFUN1,PNPROC_1,RELAT_1,RLVECT_1,STIRL2_1,STRUCT_0,TARSKI,WELLORD2,VECTSP_1,VECTSP_4,VECTSP_6,VECTSP_7,VECTSP_9,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ZFMISC_1,NAT_D,PRE_POLY,MEASURE6,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43;
schemes FINSEQ_2,NAT_1,MATRIX_1;
registrations XBOOLE_0,FUNCT_1,FINSET_1,STRUCT_0,FVSUM_1,VECTSP_1,FUNCT_2,ORDINAL1,XXREAL_0,NAT_1,FINSEQ_1,RELAT_1,CARD_1,FUNCOP_1,SETFAM_1,FINSEQ_2,MATRLIN,MATRIX13,XREAL_0,PNPROC_1,VECTSP_9,VALUED_0,RELSET_1,PRVECT_1;
constructors SETWISEO,FINSOP_1,ALGSTR_1,FVSUM_1,XXREAL_0,GROUP_4,FINSEQ_7,WELLORD2,VECTSP_6,VECTSP_7,VECTSP_9,MATRIX_6,MATRIX_7,MATRIX11,MATRIX13,PNPROC_1,REALSET1,LAPLACE,BINOP_2,NAT_D,BINARITH,RELSET_1,PRE_POLY,PSCOMP_1,CKB17,CKB28,CKB29,CKB38;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve K for Field;
reserve A for (Matrix of K);
reserve B1 for (Matrix of K);
reserve B2 for (Matrix of K);
reserve X1 for (Matrix of K);
reserve X2 for (Matrix of K);
theorem
Th37: (((X1 in ( Solutions_of (A,B1) ) & X2 in ( Solutions_of (A,B2) )) & ( width B1 ) = ( width B2 )) implies ( X1 + X2 ) in ( Solutions_of (A,( B1 + B2 )) ))
proof
assume that
A1: X1 in ( Solutions_of (A,B1) )
and
A2: X2 in ( Solutions_of (A,B2) )
and
A3: ( width B1 ) = ( width B2 );
A4: (ex Y1 being (Matrix of K) st (((Y1 = X1 & ( len Y1 ) = ( width A )) & ( width Y1 ) = ( width B1 )) & ( A * Y1 ) = B1)) by A1;
A5: ( width ( X1 + X2 ) ) = ( width X1 ) by MATRIX_3:def 3;
A6: ( len ( X1 + X2 ) ) = ( len X1 ) by MATRIX_3:def 3;
A7: (ex Y2 being (Matrix of K) st (((Y2 = X2 & ( len Y2 ) = ( width A )) & ( width Y2 ) = ( width B2 )) & ( A * Y2 ) = B2)) by A2;
A8:now
per cases ;
suppose A9: ( len A ) = ( 0 );

then ( len ( A * X1 ) ) = ( 0 ) by A4,MATRIX_3:def 4;
then A10: ( len ( ( A * X1 ) + ( A * X2 ) ) ) = ( 0 ) by MATRIX_3:def 3;
( len ( A * ( X1 + X2 ) ) ) = ( 0 ) by A4,A6,A9,MATRIX_3:def 4;
hence ( A * ( X1 + X2 ) ) = ( ( A * X1 ) + ( A * X2 ) ) by A10,CARD_2:64;
end;
suppose ( len X1 ) = ( 0 );

then ( width ( A * X1 ) ) = ( 0 ) by A4,MATRIX_1:def 3;
then A11: (( width ( ( A * X1 ) + ( A * X2 ) ) ) = ( 0 ) & ( width ( A * ( X1 + X2 ) ) ) = ( 0 )) by A4,A6,A5,MATRIX_3:def 3,MATRIX_3:def 4;
( len ( A * X1 ) ) = ( len A ) by A4,MATRIX_3:def 4;
then A12: ( len ( ( A * X1 ) + ( A * X2 ) ) ) = ( len A ) by MATRIX_3:def 3;
( len ( A * ( X1 + X2 ) ) ) = ( len A ) by A4,A6,MATRIX_3:def 4;
hence ( A * ( X1 + X2 ) ) = ( ( A * X1 ) + ( A * X2 ) ) by A12,A11,CKB43:1;
end;
suppose (( len A ) > ( 0 ) & ( len X1 ) > ( 0 ));

hence ( A * ( X1 + X2 ) ) = ( ( A * X1 ) + ( A * X2 ) ) by A3,A4,A7,MATRIX_4:62;
end;
end;
( width ( B1 + B2 ) ) = ( width B1 ) by MATRIX_3:def 3;
hence thesis by A4,A7,A6,A5,A8;
end;
