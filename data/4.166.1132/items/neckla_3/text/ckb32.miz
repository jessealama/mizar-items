environ
vocabularies NUMBERS,RELAT_1,XBOOLE_0,ZFMISC_1,TARSKI,RELAT_2,STRUCT_0,FINSET_1,ORDERS_2,CARD_1,CAT_1,YELLOW_0,WELLORD1,NECKLA_2,NECKLACE,SUBSET_1,FUNCT_1,XXREAL_0,SEQM_3,REWRITE1,FINSEQ_1,NAT_1,ARYTM_3,FINSEQ_5,EQREL_1,MSUALG_5,CLASSES2,FUNCOP_1,FUNCT_4,ARYTM_1,NECKLA_3;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,ZFMISC_1,RELAT_1,RELAT_2,RELSET_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,DOMAIN_1,STRUCT_0,ORDERS_2,WAYBEL_1,FUNCOP_1,CLASSES2,NECKLACE,WAYBEL_0,FUNCT_4,REWRITE1,FINSEQ_1,FINSEQ_5,EQREL_1,MSUALG_5,YELLOW_0,NECKLA_2,WELLORD1;
definitions XBOOLE_0,TARSKI,NECKLACE,RELAT_2,FUNCOP_1,WELLORD1,STRUCT_0;
theorems RELSET_1,NECKLACE,XBOOLE_0,WAYBEL_0,YELLOW_0,FUNCT_1,FUNCT_2,ORDERS_2,RELAT_2,SUBSET_1,ZFMISC_1,XBOOLE_1,TARSKI,MCART_1,CLASSES2,CLASSES1,NECKLA_2,FUNCOP_1,ENUMSET1,RELAT_1,SYSREL,PARTFUN1,GROUP_6,CARD_2,REWRITE1,FINSEQ_1,FINSEQ_3,FINSEQ_5,NAT_1,EQREL_1,MSUALG_6,MSUALG_5,CARD_1,NAT_2,FUNCT_4,FUNCT_3,WAYBEL_1,YELLOW_6,REALSET1,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,STRUCT_0,CKB1,CKB2,CKB3,CKB5,CKB7,CKB11,CKB21,CKB22,CKB23,CKB24,CKB25,CKB28,CKB29,CKB30,CKB31;
schemes NAT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,FINSEQ_1,REALSET1,STRUCT_0,ORDERS_2,YELLOW_0,NECKLACE,NECKLA_2,ORDINAL1,FUNCT_4,RELSET_1,ZFMISC_1,CKB4,CKB6,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB26,CKB27;
constructors XXREAL_0,NAT_1,EQREL_1,CLASSES1,TOLER_1,CLASSES2,FINSEQ_5,REWRITE1,REALSET2,MSUALG_5,ORDERS_3,WAYBEL_1,NECKLACE,NECKLA_2,RELSET_1;
requirements BOOLE,SUBSET,REAL,NUMERALS,ARITHM;
begin
theorem
Th16: (for G being  strict  irreflexive RelStr holds ( ComplRelStr ( ComplRelStr G ) ) = G)
proof
let G being  strict  irreflexive RelStr;
set CCmpG = ( ComplRelStr ( ComplRelStr G ) );
set CmpG = ( ComplRelStr G );
set cG = (the carrier of G);
set IG = (the InternalRel of G);
set ICmpG = (the InternalRel of CmpG);
set ICCmpG = (the InternalRel of CCmpG);
A1: cG = (the carrier of CmpG) by NECKLACE:def 8
.= (the carrier of CCmpG) by NECKLACE:def 8;
A2: cG = (the carrier of CmpG) by NECKLACE:def 8;
A3: ( id cG ) misses IG
proof
assume (not thesis);
then ( ( id cG ) /\ IG ) <> ( {} ) by XBOOLE_0:def 7;
then consider a being set such that A4: a in ( ( id cG ) /\ IG ) by XBOOLE_0:def 1;
A5: a in IG by A4,XBOOLE_0:def 4;
consider x being set,y being set such that A6: a = [ x,y ] and A7: x in cG and y in cG by A4,RELSET_1:2;
a in ( id cG ) by A4,XBOOLE_0:def 4;
then x = y by A6,RELAT_1:def 10;
hence contradiction by A5,A6,A7,NECKLACE:def 5;
end;
ICCmpG = ( ( ICmpG ` ) \ ( id (the carrier of CmpG) ) ) by NECKLACE:def 8
.= ( ( [: (the carrier of CmpG),(the carrier of CmpG) :] \ ICmpG ) \ ( id (the carrier of CmpG) ) ) by SUBSET_1:def 4
.= ( ( [: cG,cG :] \ ( ( IG ` ) \ ( id cG ) ) ) \ ( id cG ) ) by A2,NECKLACE:def 8
.= ( ( ( [: cG,cG :] \ ( IG ` ) ) \/ ( [: cG,cG :] /\ ( id cG ) ) ) \ ( id cG ) ) by XBOOLE_1:52
.= ( ( ( [: cG,cG :] \ ( IG ` ) ) \/ ( id cG ) ) \ ( id cG ) ) by XBOOLE_1:28
.= ( ( [: cG,cG :] \ ( IG ` ) ) \ ( id cG ) ) by XBOOLE_1:40
.= ( ( [: cG,cG :] \ ( [: cG,cG :] \ IG ) ) \ ( id cG ) ) by SUBSET_1:def 4
.= ( ( [: cG,cG :] /\ IG ) \ ( id cG ) ) by XBOOLE_1:48
.= ( IG \ ( id cG ) ) by XBOOLE_1:28
.= IG by A3,XBOOLE_1:83;
hence thesis by A1;
end;
