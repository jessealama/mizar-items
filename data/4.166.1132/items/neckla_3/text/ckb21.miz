environ
vocabularies NUMBERS,RELAT_1,XBOOLE_0,ZFMISC_1,TARSKI,RELAT_2,STRUCT_0,FINSET_1,ORDERS_2,CARD_1,CAT_1,YELLOW_0,WELLORD1,NECKLA_2,NECKLACE,SUBSET_1,FUNCT_1,XXREAL_0,SEQM_3,REWRITE1,FINSEQ_1,NAT_1,ARYTM_3,FINSEQ_5,EQREL_1,MSUALG_5,CLASSES2,FUNCOP_1,FUNCT_4,ARYTM_1,NECKLA_3;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,ZFMISC_1,RELAT_1,RELAT_2,RELSET_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,DOMAIN_1,STRUCT_0,ORDERS_2,WAYBEL_1,FUNCOP_1,CLASSES2,NECKLACE,WAYBEL_0,FUNCT_4,REWRITE1,FINSEQ_1,FINSEQ_5,EQREL_1,MSUALG_5,YELLOW_0,NECKLA_2,WELLORD1;
definitions XBOOLE_0,TARSKI,NECKLACE,RELAT_2,FUNCOP_1,WELLORD1,STRUCT_0;
theorems RELSET_1,NECKLACE,XBOOLE_0,WAYBEL_0,YELLOW_0,FUNCT_1,FUNCT_2,ORDERS_2,RELAT_2,SUBSET_1,ZFMISC_1,XBOOLE_1,TARSKI,MCART_1,CLASSES2,CLASSES1,NECKLA_2,FUNCOP_1,ENUMSET1,RELAT_1,SYSREL,PARTFUN1,GROUP_6,CARD_2,REWRITE1,FINSEQ_1,FINSEQ_3,FINSEQ_5,NAT_1,EQREL_1,MSUALG_6,MSUALG_5,CARD_1,NAT_2,FUNCT_4,FUNCT_3,WAYBEL_1,YELLOW_6,REALSET1,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,STRUCT_0,CKB1,CKB2,CKB3,CKB5,CKB7,CKB11;
schemes NAT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,FINSEQ_1,REALSET1,STRUCT_0,ORDERS_2,YELLOW_0,NECKLACE,NECKLA_2,ORDINAL1,FUNCT_4,RELSET_1,ZFMISC_1,CKB4,CKB6,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
constructors XXREAL_0,NAT_1,EQREL_1,CLASSES1,TOLER_1,CLASSES2,FINSEQ_5,REWRITE1,REALSET2,MSUALG_5,ORDERS_3,WAYBEL_1,NECKLACE,NECKLA_2,RELSET_1;
requirements BOOLE,SUBSET,REAL,NUMERALS,ARITHM;
begin
theorem
(for R,S being  irreflexive RelStr holds ((the carrier of R) misses (the carrier of S) implies ( sum_of (R,S) ) is  irreflexive))
proof
let R being  irreflexive RelStr;
let S being  irreflexive RelStr;
assume that
A1: (the carrier of R) misses (the carrier of S);
(for x being set holds (x in (the carrier of ( sum_of (R,S) )) implies (not [ x,x ] in (the InternalRel of ( sum_of (R,S) )))))
proof
set IR = (the InternalRel of R);
set IS = (the InternalRel of S);
set RS = [: (the carrier of R),(the carrier of S) :];
set SR = [: (the carrier of S),(the carrier of R) :];
let x being set;
assume x in (the carrier of ( sum_of (R,S) ));
assume (not thesis);
then [ x,x ] in ( ( ( IR \/ IS ) \/ RS ) \/ SR ) by NECKLA_2:def 3;
then ([ x,x ] in ( ( IR \/ IS ) \/ RS ) or [ x,x ] in SR) by XBOOLE_0:def 3;
then A2: (([ x,x ] in ( IR \/ IS ) or [ x,x ] in RS) or [ x,x ] in SR) by XBOOLE_0:def 3;
per cases  by A2,XBOOLE_0:def 3;
suppose A3: [ x,x ] in IR;

then x in (the carrier of R) by ZFMISC_1:87;
hence thesis by A3,NECKLACE:def 5;
end;
suppose A4: [ x,x ] in IS;

then x in (the carrier of S) by ZFMISC_1:87;
hence thesis by A4,NECKLACE:def 5;
end;
suppose [ x,x ] in RS;

then (x in (the carrier of R) & x in (the carrier of S)) by ZFMISC_1:87;
hence thesis by A1,XBOOLE_0:3;
end;
suppose [ x,x ] in SR;

then (x in (the carrier of S) & x in (the carrier of R)) by ZFMISC_1:87;
hence thesis by A1,XBOOLE_0:3;
end;
end;
hence thesis by NECKLACE:def 5;
end;
