environ
vocabularies NUMBERS,RELAT_1,XBOOLE_0,ZFMISC_1,TARSKI,RELAT_2,STRUCT_0,FINSET_1,ORDERS_2,CARD_1,CAT_1,YELLOW_0,WELLORD1,NECKLA_2,NECKLACE,SUBSET_1,FUNCT_1,XXREAL_0,SEQM_3,REWRITE1,FINSEQ_1,NAT_1,ARYTM_3,FINSEQ_5,EQREL_1,MSUALG_5,CLASSES2,FUNCOP_1,FUNCT_4,ARYTM_1,NECKLA_3;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,ZFMISC_1,RELAT_1,RELAT_2,RELSET_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,DOMAIN_1,STRUCT_0,ORDERS_2,WAYBEL_1,FUNCOP_1,CLASSES2,NECKLACE,WAYBEL_0,FUNCT_4,REWRITE1,FINSEQ_1,FINSEQ_5,EQREL_1,MSUALG_5,YELLOW_0,NECKLA_2,WELLORD1,CKB43,CKB44,CKB50,CKB51;
definitions XBOOLE_0,TARSKI,NECKLACE,RELAT_2,FUNCOP_1,WELLORD1,STRUCT_0,CKB44,CKB50,CKB51;
theorems RELSET_1,NECKLACE,XBOOLE_0,WAYBEL_0,YELLOW_0,FUNCT_1,FUNCT_2,ORDERS_2,RELAT_2,SUBSET_1,ZFMISC_1,XBOOLE_1,TARSKI,MCART_1,CLASSES2,CLASSES1,NECKLA_2,FUNCOP_1,ENUMSET1,RELAT_1,SYSREL,PARTFUN1,GROUP_6,CARD_2,REWRITE1,FINSEQ_1,FINSEQ_3,FINSEQ_5,NAT_1,EQREL_1,MSUALG_6,MSUALG_5,CARD_1,NAT_2,FUNCT_4,FUNCT_3,WAYBEL_1,YELLOW_6,REALSET1,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,STRUCT_0,CKB1,CKB2,CKB3,CKB5,CKB7,CKB11,CKB21,CKB22,CKB23,CKB24,CKB25,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB40,CKB41,CKB42,CKB44,CKB47,CKB49,CKB50,CKB51,CKB53,CKB54,CKB55,CKB56,CKB57;
schemes NAT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,FINSEQ_1,REALSET1,STRUCT_0,ORDERS_2,YELLOW_0,NECKLACE,NECKLA_2,ORDINAL1,FUNCT_4,RELSET_1,ZFMISC_1,CKB4,CKB6,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB26,CKB27,CKB37,CKB45,CKB46,CKB48,CKB52;
constructors XXREAL_0,NAT_1,EQREL_1,CLASSES1,TOLER_1,CLASSES2,FINSEQ_5,REWRITE1,REALSET2,MSUALG_5,ORDERS_3,WAYBEL_1,NECKLACE,NECKLA_2,RELSET_1,CKB44,CKB51;
requirements BOOLE,SUBSET,REAL,NUMERALS,ARITHM;
begin
theorem
(for G being  irreflexive RelStr holds (G in ( fin_RelStr_sp ) implies ( ComplRelStr G ) in ( fin_RelStr_sp )))
proof
defpred P[ Nat ]
 means
(for G being  irreflexive RelStr holds ((( card (the carrier of G) ) = $1 & G in ( fin_RelStr_sp )) implies ( ComplRelStr G ) in ( fin_RelStr_sp )));
let G being  irreflexive RelStr;
A1: (for k being Nat holds ((for n being Nat holds (n < k implies P[ n ])) implies P[ k ]))
proof
let k being Nat;
assume that
A2: (for n being Nat holds (n < k implies P[ n ]));
let G being  irreflexive RelStr;
assume that
A3: ( card (the carrier of G) ) = k
and
A4: G in ( fin_RelStr_sp );
per cases  by A4,NECKLA_2:6;
suppose G is  strict 1 -element  strict 1 -element RelStr;

hence thesis by A4,CKB31:1;
end;
suppose (ex G1,G2 being  strict RelStr st ((((the carrier of G1) misses (the carrier of G2) & G1 in ( fin_RelStr_sp )) & G2 in ( fin_RelStr_sp )) & (G = ( union_of (G1,G2) ) or G = ( sum_of (G1,G2) ))));

then consider G1,G2 being  strict RelStr such that A5: (the carrier of G1) misses (the carrier of G2) and A6: G1 in ( fin_RelStr_sp ) and A7: G2 in ( fin_RelStr_sp ) and A8: (G = ( union_of (G1,G2) ) or G = ( sum_of (G1,G2) ));
A9: G2 is non  empty  finite by A7,NECKLA_2:4;
then reconsider n2 = ( card (the carrier of G2) ) as Nat;
A10: G1 is non  empty  finite by A6,NECKLA_2:4;
then reconsider n1 = ( card (the carrier of G1) ) as Nat;
thus thesis
proof
per cases  by A8;
suppose A11: G = ( union_of (G1,G2) );

then reconsider G2 as  irreflexive RelStr by CKB23:1;
reconsider G1 as  irreflexive RelStr by A11,CKB23:1;
reconsider cG1 = (the carrier of G1) as non  empty  finite set by A10;
reconsider cG2 = (the carrier of G2) as non  empty  finite set by A9;
(the carrier of G) = ( (the carrier of G1) \/ (the carrier of G2) ) by A11,NECKLA_2:def 2;
then A12: ( card (the carrier of G) ) = ( ( card cG1 ) + ( card cG2 ) ) by A5,CARD_2:40;
A13: ( card cG1 ) = n1;
n2 < k
proof
assume (not thesis);
then ( k + ( 0 ) ) < ( n1 + n2 ) by A13,XREAL_1:8;
hence thesis by A3,A12;
end;
then A14: ( ComplRelStr G2 ) in ( fin_RelStr_sp ) by A2,A7;
A15: ((the carrier of ( ComplRelStr G1 )) = (the carrier of G1) & (the carrier of ( ComplRelStr G2 )) = (the carrier of G2)) by NECKLACE:def 8;
A16: ( card cG2 ) = n2;
n1 < k
proof
assume (not thesis);
then ( k + ( 0 ) ) < ( n2 + n1 ) by A16,XREAL_1:8;
hence thesis by A3,A12;
end;
then A17: ( ComplRelStr G1 ) in ( fin_RelStr_sp ) by A2,A6;
( ComplRelStr G ) = ( sum_of (( ComplRelStr G1 ),( ComplRelStr G2 )) ) by A5,A11,CKB33:1;
hence thesis by A5,A17,A14,A15,NECKLA_2:def 5;
end;
suppose A18: G = ( sum_of (G1,G2) );

then reconsider G2 as  irreflexive RelStr by CKB23:1;
reconsider G1 as  irreflexive RelStr by A18,CKB23:1;
reconsider cG1 = (the carrier of G1) as non  empty  finite set by A10;
reconsider cG2 = (the carrier of G2) as non  empty  finite set by A9;
(the carrier of G) = ( (the carrier of G1) \/ (the carrier of G2) ) by A18,NECKLA_2:def 3;
then A19: ( card (the carrier of G) ) = ( ( card cG1 ) + ( card cG2 ) ) by A5,CARD_2:40;
A20: ( card cG1 ) = n1;
n2 < k
proof
assume (not thesis);
then ( k + ( 0 ) ) < ( n1 + n2 ) by A20,XREAL_1:8;
hence thesis by A3,A19;
end;
then A21: ( ComplRelStr G2 ) in ( fin_RelStr_sp ) by A2,A7;
A22: ((the carrier of ( ComplRelStr G1 )) = (the carrier of G1) & (the carrier of ( ComplRelStr G2 )) = (the carrier of G2)) by NECKLACE:def 8;
A23: ( card cG2 ) = n2;
n1 < k
proof
assume (not thesis);
then ( k + ( 0 ) ) < ( n2 + n1 ) by A23,XREAL_1:8;
hence thesis by A3,A19;
end;
then A24: ( ComplRelStr G1 ) in ( fin_RelStr_sp ) by A2,A6;
( ComplRelStr G ) = ( union_of (( ComplRelStr G1 ),( ComplRelStr G2 )) ) by A5,A18,CKB34:1;
hence thesis by A5,A24,A21,A22,NECKLA_2:def 5;
end;
end;

end;
end;
A25: (for k being Nat holds P[ k ]) from NAT_1:sch 4(A1);
assume A26: G in ( fin_RelStr_sp );
then G is  finite by NECKLA_2:4;
then ( card (the carrier of G) ) is Nat;
hence thesis by A26,A25;
end;
