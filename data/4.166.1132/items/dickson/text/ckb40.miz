environ
vocabularies FUNCT_1,RELAT_1,FUNCOP_1,NAT_1,TARSKI,ARYTM_3,XBOOLE_0,SUBSET_1,NUMBERS,XXREAL_0,FINSET_1,CARD_1,ORDERS_2,REARRAN1,RELAT_2,STRUCT_0,WELLORD1,WAYBEL_4,WAYBEL20,EQREL_1,ORDERS_1,ZFMISC_1,WELLFND1,SETFAM_1,VALUED_0,ORDINAL2,MCART_1,CAT_1,YELLOW_1,PBOOLE,CARD_3,RLVECT_2,YELLOW_6,WAYBEL_3,FUNCT_4,YELLOW_3,DICKSON;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,PBOOLE,RELSET_1,XXREAL_2,SEQ_4,PARTFUN1,FUNCT_2,CARD_3,NAT_1,STRUCT_0,RELAT_2,XXREAL_0,FUNCT_4,FUNCOP_1,DOMAIN_1,FINSET_1,MCART_1,WELLORD1,ORDERS_2,ORDERS_1,EQREL_1,WELLFND1,WAYBEL_0,CARD_1,NUMBERS,WAYBEL_4,VALUED_0,PRALG_1,YELLOW_3,WAYBEL_1,YELLOW_1,WAYBEL_3,YELLOW_6,CKB5,CKB6,CKB11,CKB12,CKB14,CKB17,CKB19,CKB20,CKB32,CKB39;
definitions TARSKI,RELAT_2,ORDERS_2,ORDERS_1,FUNCOP_1,CKB5,CKB6,CKB11,CKB12,CKB14,CKB17,CKB20,CKB32,CKB39;
theorems WELLORD1,ORDERS_1,SUBSET_1,TARSKI,RELAT_1,RELAT_2,RELSET_1,ZFMISC_1,EQREL_1,WAYBEL_0,ORDERS_2,NAT_1,FUNCT_1,FUNCT_2,CARD_2,CARD_1,NORMSP_1,SEQM_3,FINSET_1,AXIOMS,YELLOW_3,WAYBEL_1,WAYBEL20,YELLOW_1,CARD_3,FUNCOP_1,WAYBEL_3,MCART_1,FUNCT_4,WELLFND1,WAYBEL_4,PRALG_1,YELLOW_6,AFINSQ_1,XBOOLE_0,XBOOLE_1,PARTFUN1,XXREAL_0,ORDINAL1,XXREAL_2,VALUED_0,CKB1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB20,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
schemes PRE_CIRC,RECDEF_1,NAT_1,FUNCT_2,DOMAIN_1,FRAENKEL,FINSEQ_1,FUNCT_1,RELSET_1,CKB3;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCOP_1,FINSET_1,XXREAL_0,NAT_1,MEMBERED,EQREL_1,CARD_5,PRE_CIRC,STRUCT_0,ORDERS_2,YELLOW_1,YELLOW_3,WAYBEL18,WAYBEL_3,VALUED_0,CARD_1,XXREAL_2,CARD_3,ZFMISC_1,RELSET_1,CKB18,CKB21,CKB22,CKB23;
constructors WELLORD1,DOMAIN_1,NAT_1,BINOP_2,BHSP_3,PRALG_1,ORDERS_3,WAYBEL_1,YELLOW_3,WAYBEL_3,WAYBEL_4,WELLFND1,SEQ_1,RECDEF_1,SEQ_4,XXREAL_2,RELSET_1,PBOOLE,YELLOW_6,CKB5,CKB6,CKB11,CKB12,CKB14,CKB17,CKB19,CKB20,CKB32,CKB39;
requirements BOOLE,SUBSET,NUMERALS;
begin
theorem
Th26: (for R being RelStr holds ( {} ) is_Dickson-basis_of ( {} (the carrier of R) ),R)
proof
let R being RelStr;
set N = ( {} (the carrier of R) );
thus ( {} ) c= N;
thus thesis;
end;
