environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,EQREL_1,TARSKI,SETFAM_1,FUNCOP_1,RELAT_1,ZFMISC_1,FUNCT_1,FUNCT_4,BVFUNC_2;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,SETFAM_1,EQREL_1,FUNCOP_1,PARTIT1,BVFUNC_1,BVFUNC_2,FUNCT_4;
definitions TARSKI,FUNCOP_1;
theorems TARSKI,FUNCT_1,SETFAM_1,EQREL_1,ZFMISC_1,PARTIT1,BVFUNC_2,BVFUNC11,ENUMSET1,FUNCOP_1,FUNCT_4,XBOOLE_0,XBOOLE_1,FUNCT_7,CKB1,CKB2,CKB3;
registrations XBOOLE_0,SUBSET_1,FUNCOP_1,FUNCT_4,EQREL_1;
constructors ENUMSET1,SETFAM_1,FUNCT_4,BVFUNC_1,BVFUNC_2;
requirements SUBSET,BOOLE;
begin
reserve Y for non  empty set;
reserve C for (a_partition of Y);
reserve D for (a_partition of Y);
theorem
Lm2: (for f being Function holds (for C,D,c,d being set holds (C <> D implies ( ( ( f +* ( C .--> c ) ) +* ( D .--> d ) ) . C ) = c)))
proof
let f being Function;
let C being set;
let D being set;
let c being set;
let d being set;
set h = ( ( f +* ( C .--> c ) ) +* ( D .--> d ) );
A1: ( dom ( D .--> d ) ) = { D } by FUNCOP_1:13;
assume C <> D;
then (not C in ( dom ( D .--> d ) )) by A1,TARSKI:def 1;
then A2: ( h . C ) = ( ( f +* ( C .--> c ) ) . C ) by FUNCT_4:11;
( dom ( C .--> c ) ) = { C } by FUNCOP_1:13;
then C in ( dom ( C .--> c ) ) by TARSKI:def 1;
hence ( h . C ) = ( ( C .--> c ) . C ) by A2,FUNCT_4:13
.= c by FUNCOP_1:72;
end;
