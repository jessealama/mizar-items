environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,EQREL_1,TARSKI,SETFAM_1,FUNCOP_1,RELAT_1,ZFMISC_1,FUNCT_1,FUNCT_4,BVFUNC_2;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,SETFAM_1,EQREL_1,FUNCOP_1,PARTIT1,BVFUNC_1,BVFUNC_2,FUNCT_4;
definitions TARSKI,FUNCOP_1;
theorems TARSKI,FUNCT_1,SETFAM_1,EQREL_1,ZFMISC_1,PARTIT1,BVFUNC_2,BVFUNC11,ENUMSET1,FUNCOP_1,FUNCT_4,XBOOLE_0,XBOOLE_1,FUNCT_7,CKB1,CKB2,CKB3,CKB4;
registrations XBOOLE_0,SUBSET_1,FUNCOP_1,FUNCT_4,EQREL_1;
constructors ENUMSET1,SETFAM_1,FUNCT_4,BVFUNC_1,BVFUNC_2;
requirements SUBSET,BOOLE;
begin
reserve Y for non  empty set;
reserve B for (a_partition of Y);
reserve C for (a_partition of Y);
reserve D for (a_partition of Y);
theorem
Lm3: (for B,C,D,b,c,d being set holds ((B <> C & D <> B) implies ( ( ( ( B .--> b ) +* ( C .--> c ) ) +* ( D .--> d ) ) . B ) = b))
proof
let B being set;
let C being set;
let D being set;
let b being set;
let c being set;
let d being set;
assume that
A1: B <> C
and
A2: D <> B;
set h = ( ( ( B .--> b ) +* ( C .--> c ) ) +* ( D .--> d ) );
( dom ( D .--> d ) ) = { D } by FUNCOP_1:13;
then (not B in ( dom ( D .--> d ) )) by A2,TARSKI:def 1;
then A3: ( h . B ) = ( ( ( B .--> b ) +* ( C .--> c ) ) . B ) by FUNCT_4:11;
( dom ( C .--> c ) ) = { C } by FUNCOP_1:13;
then (not B in ( dom ( C .--> c ) )) by A1,TARSKI:def 1;
hence ( h . B ) = ( ( B .--> b ) . B ) by A3,FUNCT_4:11
.= b by FUNCOP_1:72;
end;
