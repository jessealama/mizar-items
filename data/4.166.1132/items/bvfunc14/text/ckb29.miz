environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,EQREL_1,TARSKI,SETFAM_1,FUNCOP_1,RELAT_1,ZFMISC_1,FUNCT_1,FUNCT_4,BVFUNC_2;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,SETFAM_1,EQREL_1,FUNCOP_1,PARTIT1,BVFUNC_1,BVFUNC_2,FUNCT_4;
definitions TARSKI,FUNCOP_1;
theorems TARSKI,FUNCT_1,SETFAM_1,EQREL_1,ZFMISC_1,PARTIT1,BVFUNC_2,BVFUNC11,ENUMSET1,FUNCOP_1,FUNCT_4,XBOOLE_0,XBOOLE_1,FUNCT_7,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
registrations XBOOLE_0,SUBSET_1,FUNCOP_1,FUNCT_4,EQREL_1;
constructors ENUMSET1,SETFAM_1,FUNCT_4,BVFUNC_1,BVFUNC_2;
requirements SUBSET,BOOLE;
begin
reserve Y for non  empty set;
reserve G for (Subset of ( PARTITIONS Y ));
reserve A for (a_partition of Y);
reserve B for (a_partition of Y);
reserve C for (a_partition of Y);
reserve D for (a_partition of Y);
reserve E for (a_partition of Y);
theorem
(((((G = { A,B,C,D,E } & A <> E) & B <> E) & C <> E) & D <> E) implies ( CompF (E,G) ) = ( ( ( A '/\' B ) '/\' C ) '/\' D ))
proof
assume that
A1: G = { A,B,C,D,E }
and
A2: (((A <> E & B <> E) & C <> E) & D <> E);
{ A,B,C,D,E } = ( { A,B,C } \/ { D,E } ) by ENUMSET1:9;
then G = { A,B,C,E,D } by A1,ENUMSET1:9;
hence thesis by A2,CKB28:1;
end;
