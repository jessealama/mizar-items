environ
vocabularies NUMBERS,PROB_1,MEASURE1,SUBSET_1,MESFUNC5,ORDINAL1,SUPINF_2,SERIES_1,FUNCT_1,NAT_1,ARYTM_3,CARD_1,CARD_3,VALUED_0,SEQ_2,ORDINAL2,XXREAL_0,RELAT_1,PROB_2,XBOOLE_0,TARSKI,FINSEQ_1,ZFMISC_1,FUNCOP_1,FUNCT_2,MEASURE7,SUPINF_1,NAGATA_2,MCART_1,FUNCT_7,XXREAL_2,XREAL_0,REAL_1,MEASURE4,PROB_3,SETLIM_2,ARYTM_1,SETLIM_1,EQREL_1,LATTICE5,MEASURE2,MEASURE8;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,XXREAL_0,XXREAL_2,XREAL_0,VALUED_0,REAL_1,RELAT_1,FUNCOP_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,NUMBERS,FINSEQ_1,SETFAM_1,RINFSUP2,MEASURE1,MEASURE2,MEASURE4,MESFUNC5,SUPINF_2,XXREAL_3,NAT_1,MESFUNC9,SUPINF_1,RECDEF_1,PROB_1,PROB_2,PROB_3,SETLIM_1,SETLIM_2,NAGATA_2,FUNCT_7,CKB5;
definitions SUPINF_2,TARSKI,PROB_2,RINFSUP2,MESFUNC9,PROB_3,ALTCAT_2,CKB5;
theorems ZFMISC_1,TARSKI,XBOOLE_0,PROB_1,MEASURE1,FUNCT_2,FUNCT_1,XBOOLE_1,PROB_3,FINSEQ_1,RELAT_1,MEASURE4,ORDINAL1,NAT_1,FUNCOP_1,SUPINF_2,XXREAL_2,PROB_4,MEASURE7,XXREAL_0,MEASURE6,FINSUB_1,CARD_3,RINFSUP2,MESFUNC9,VALUED_0,MESFUNC5,MONOID_1,MEASURE2,SETLIM_1,SETLIM_2,ABCMIZ_1,PROB_2,NAGATA_2,FUNCTOR1,FUNCT_7,XXREAL_3,XREAL_0,PARTFUN1,CKB1,CKB2,CKB3,CKB5;
schemes FUNCT_2,NAT_1,BINOP_2,XBOOLE_0,SUBSET_1;
registrations MEMBERED,ORDINAL1,MEASURE1,XBOOLE_0,NUMBERS,XXREAL_0,VALUED_0,FUNCT_1,FUNCT_2,SUBSET_1,RELSET_1,MEASURE4,NAT_1,XXREAL_3,XREAL_0,PROB_3,CKB4;
constructors REAL_1,DOMAIN_1,KURATO_0,MESFUNC5,RINFSUP2,MESFUNC9,SUPINF_1,PROB_3,MEASURE7,RECDEF_1,SETLIM_2,SETLIM_1,NAGATA_2,FUNCT_7,ALTCAT_2,CKB5;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve X for set;
reserve F for (Field_Subset of X);
reserve n for  natural number;
reserve k for  natural number;
registration
let X;
let F;
cluster  disjoint_valued for (FinSequence of F);
existence
proof
( {} ) c= X by XBOOLE_1:2;
then reconsider f = <* ( {} ) *> as (FinSequence of ( bool X )) by FINSEQ_1:74;
(for k being Nat holds (k in ( dom f ) implies ( f . k ) in F))
proof
let k being Nat;
assume k in ( dom f );
then k in ( Seg 1 ) by FINSEQ_1:def 8;
then k = 1 by FINSEQ_1:2,TARSKI:def 1;
then ( f . k ) = ( {} ) by FINSEQ_1:def 8;
hence ( f . k ) in F by PROB_1:4;
end;
then reconsider f = <* ( {} ) *> as (FinSequence of F) by CKB5:def 1;
take f;
A1: (for n being set holds ( f . n ) = ( {} ))
proof
let n being set;
now
assume n in ( dom f );
then n in ( Seg 1 ) by FINSEQ_1:def 8;
then n = 1 by FINSEQ_1:2,TARSKI:def 1;
hence ( f . n ) = ( {} ) by FINSEQ_1:def 8;
end;
hence thesis by FUNCT_1:def 2;
end;
thus (for x,y being set holds (x <> y implies ( f . x ) misses ( f . y )))
proof
let x being set;
let y being set;
( f . x ) = ( {} ) by A1;
hence thesis by XBOOLE_1:65;
end;

end;
end;
