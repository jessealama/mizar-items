environ
vocabularies NUMBERS,PROB_1,MEASURE1,SUBSET_1,MESFUNC5,ORDINAL1,SUPINF_2,SERIES_1,FUNCT_1,NAT_1,ARYTM_3,CARD_1,CARD_3,VALUED_0,SEQ_2,ORDINAL2,XXREAL_0,RELAT_1,PROB_2,XBOOLE_0,TARSKI,FINSEQ_1,ZFMISC_1,FUNCOP_1,FUNCT_2,MEASURE7,SUPINF_1,NAGATA_2,MCART_1,FUNCT_7,XXREAL_2,XREAL_0,REAL_1,MEASURE4,PROB_3,SETLIM_2,ARYTM_1,SETLIM_1,EQREL_1,LATTICE5,MEASURE2,MEASURE8;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,XXREAL_0,XXREAL_2,XREAL_0,VALUED_0,REAL_1,RELAT_1,FUNCOP_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,NUMBERS,FINSEQ_1,SETFAM_1,RINFSUP2,MEASURE1,MEASURE2,MEASURE4,MESFUNC5,SUPINF_2,XXREAL_3,NAT_1,MESFUNC9,SUPINF_1,RECDEF_1,PROB_1,PROB_2,PROB_3,SETLIM_1,SETLIM_2,NAGATA_2,FUNCT_7,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB16,CKB17,CKB19,CKB21,CKB22,CKB23,CKB34,CKB35,CKB43,CKB45,CKB55;
definitions SUPINF_2,TARSKI,PROB_2,RINFSUP2,MESFUNC9,PROB_3,ALTCAT_2,CKB5,CKB9,CKB10,CKB13,CKB14,CKB17,CKB19,CKB21,CKB22,CKB23,CKB35,CKB55;
theorems ZFMISC_1,TARSKI,XBOOLE_0,PROB_1,MEASURE1,FUNCT_2,FUNCT_1,XBOOLE_1,PROB_3,FINSEQ_1,RELAT_1,MEASURE4,ORDINAL1,NAT_1,FUNCOP_1,SUPINF_2,XXREAL_2,PROB_4,MEASURE7,XXREAL_0,MEASURE6,FINSUB_1,CARD_3,RINFSUP2,MESFUNC9,VALUED_0,MESFUNC5,MONOID_1,MEASURE2,SETLIM_1,SETLIM_2,ABCMIZ_1,PROB_2,NAGATA_2,FUNCTOR1,FUNCT_7,XXREAL_3,XREAL_0,PARTFUN1,CKB1,CKB2,CKB3,CKB5,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB17,CKB18,CKB19,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB44,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55;
schemes FUNCT_2,NAT_1,BINOP_2,XBOOLE_0,SUBSET_1;
registrations MEMBERED,ORDINAL1,MEASURE1,XBOOLE_0,NUMBERS,XXREAL_0,VALUED_0,FUNCT_1,FUNCT_2,SUBSET_1,RELSET_1,MEASURE4,NAT_1,XXREAL_3,XREAL_0,PROB_3,CKB4,CKB6,CKB20;
constructors REAL_1,DOMAIN_1,KURATO_0,MESFUNC5,RINFSUP2,MESFUNC9,SUPINF_1,PROB_3,MEASURE7,RECDEF_1,SETLIM_2,SETLIM_1,NAGATA_2,FUNCT_7,ALTCAT_2,CKB5,CKB9,CKB10,CKB11,CKB13,CKB14,CKB16,CKB17,CKB19,CKB21,CKB22,CKB23,CKB34,CKB35,CKB43,CKB45,CKB55;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve X for set;
reserve F for (Field_Subset of X);
reserve M for (Measure of F);
reserve n for  natural number;
theorem
(for X being non  empty set holds (for F being (Field_Subset of X) holds (for m being (Measure of F) holds ((ex M being (sigma_Measure of ( sigma F )) st M is_extension_of m) implies m is  completely-additive))))
proof
let X being non  empty set;
let F being (Field_Subset of X);
let m being (Measure of F);
given M being (sigma_Measure of ( sigma F )) such that
A1: M is_extension_of m;

A2: F c= ( sigma F ) by PROB_1:def 9;
(for Aseq being (Sep_Sequence of F) holds (( union ( rng Aseq ) ) in F implies ( SUM ( m * Aseq ) ) = ( m . ( union ( rng Aseq ) ) )))
proof
let Aseq being (Sep_Sequence of F);
reconsider Bseq = Aseq as (Function of ( NAT ),( sigma F )) by A2,FUNCT_2:7;
reconsider Bseq as (Sep_Sequence of ( sigma F ));
A3:now
let n being set;
assume n in ( NAT );
then reconsider n9 = n as (Element of ( NAT ));
( ( M * Bseq ) . n ) = ( M . ( Bseq . n9 ) ) by FUNCT_2:15;
then ( ( M * Bseq ) . n ) = ( m . ( Aseq . n9 ) ) by A1,CKB55:def 1;
hence ( ( M * Bseq ) . n ) = ( ( m * Aseq ) . n ) by FUNCT_2:15;
end;
assume ( union ( rng Aseq ) ) in F;
then ( m . ( union ( rng Aseq ) ) ) = ( M . ( union ( rng Aseq ) ) ) by A1,CKB55:def 1;
then ( m . ( union ( rng Aseq ) ) ) = ( SUM ( M * Bseq ) ) by MEASURE1:def 6;
hence thesis by A3,FUNCT_2:12;
end;
hence m is  completely-additive by CKB35:def 1;
end;
