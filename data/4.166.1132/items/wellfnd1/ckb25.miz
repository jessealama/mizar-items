environ
vocabularies FUNCT_1,PARTFUN1,TARSKI,RELAT_1,SUBSET_1,CARD_1,XBOOLE_0,CARD_5,ORDINAL2,ORDERS_2,WELLORD1,STRUCT_0,WAYBEL_0,XXREAL_0,ZFMISC_1,SETFAM_1,ORDINAL1,CARD_2,FINSET_1,FUNCOP_1,FUNCT_4,NAT_1,ARYTM_3,NUMBERS,WELLFND1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FUNCT_1,BINOP_1,SETFAM_1,DOMAIN_1,NAT_1,STRUCT_0,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_4,FUNCOP_1,ORDINAL1,WELLORD1,ORDINAL2,FINSET_1,CARD_2,ORDERS_2,CARD_5,RFUNCT_3,WAYBEL_0,CKB7,CKB10,CKB12,CKB14,CKB23;
definitions TARSKI,RELAT_1,FUNCT_1,WELLORD1,WAYBEL_0,XBOOLE_0,BINOP_1,FUNCOP_1,CKB7,CKB10,CKB12,CKB14,CKB23;
theorems TARSKI,ENUMSET1,ZFMISC_1,RELAT_1,RELSET_1,FUNCT_1,ORDINAL1,WELLORD1,GRFUNC_1,PARTFUN1,FUNCT_2,ORDINAL2,FUNCOP_1,CARD_1,ORDERS_2,FUNCT_4,CARD_5,WAYBEL_0,XBOOLE_0,XBOOLE_1,REALSET1,BINOP_1,CARD_2,CKB1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB12,CKB14,CKB16,CKB17,CKB18,CKB19,CKB21,CKB23,CKB24;
schemes NAT_1,SUBSET_1,DOMAIN_1,FUNCT_7,BINOP_1,CKB2,CKB20,CKB22;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,PARTFUN1,FUNCOP_1,CARD_1,REALSET1,CARD_5,STRUCT_0,WAYBEL_0,FUNCT_1,ZFMISC_1,CKB3,CKB4,CKB11,CKB13,CKB15;
constructors SETFAM_1,WELLORD1,BINOP_1,FUNCT_4,ORDINAL2,NAT_1,CARD_2,REALSET1,CARD_5,RFUNCT_3,WAYBEL_0,RELSET_1,CKB10,CKB12,CKB14,CKB23;
requirements NUMERALS,SUBSET,BOOLE;
begin
theorem
(for R being non empty RelStr holds (for V being non trivial set holds ((for H being (Function of [: (the carrier of R),( PFuncs ((the carrier of R),V) ) :],V) holds (for F1,F2 being (Function of (the carrier of R),V) holds ((F1 is_recursively_expressed_by H & F2 is_recursively_expressed_by H) implies F1 = F2))) implies R is  well_founded)))
proof
let R being non empty RelStr;
let V being non trivial set;
set c = (the carrier of R);
set r = (the InternalRel of R);
set PF = ( PFuncs (c,V) );
set wfp = ( well_founded-Part R );
consider a0 being set,a1 being set such that A1: a0 in V and A2: a1 in V and A3: a0 <> a1 by ZFMISC_1:def 10;
set F3 = ( c --> a1 );
set F4 = ( wfp --> a0 );
set F2 = ( F3 +* F4 );
A4: ( dom F3 ) = c by FUNCOP_1:13;
defpred P[ set,Function,set ]
 means
((ex x being set st (x in ( dom $2 ) & ( $2 . x ) = a1)) iff $3 = a1);
set a01 = { a0,a1 };
A5:now
reconsider u = a1,v = a0 as (Element of a01) by TARSKI:def 2;
let x being (Element of c);
let y being (Element of PF);
per cases ;
suppose A6: (ex x being set st (x in ( dom y ) & ( y . x ) = a1));

take u;
thus P[ x,y,u ] by A6;
end;
suppose A7: (not (ex x being set st (x in ( dom y ) & ( y . x ) = a1)));

take v;
thus P[ x,y,v ] by A3,A7;
end;
end;
consider H being (Function of [: c,PF :],a01) such that A8: (for x being (Element of c) holds (for y being (Element of PF) holds P[ x,y,( H . (x,y) ) ])) from BINOP_1:sch 3(A5);
A9: a01 c= V by A1,A2,ZFMISC_1:32;
then A10: ( rng H ) c= V by XBOOLE_1:1;
( ( rng F3 ) \/ ( rng F4 ) ) c= ( { a0 } \/ { a1 } ) by XBOOLE_1:13;
then A11: ( ( rng F3 ) \/ ( rng F4 ) ) c= a01 by ENUMSET1:1;
( rng F2 ) c= ( ( rng F3 ) \/ ( rng F4 ) ) by FUNCT_4:17;
then ( rng F2 ) c= a01 by A11,XBOOLE_1:1;
then A12: ( rng F2 ) c= V by A9,XBOOLE_1:1;
A13: ( rng H ) c= a01;
A14: ( dom H ) = [: c,PF :] by FUNCT_2:def 1;
then reconsider H as (Function of [: c,PF :],V) by A10,FUNCT_2:def 1,RELSET_1:4;
A15: ( dom F4 ) = wfp by FUNCOP_1:13;
A16: ( dom F2 ) = ( ( dom F3 ) \/ ( dom F4 ) ) by FUNCT_4:def 1
.= c by A4,A15,XBOOLE_1:12;
then reconsider F2 as (Function of c,V) by A12,FUNCT_2:def 1,RELSET_1:4;
A17: F2 is_recursively_expressed_by H
proof
let x being (Element of c);
reconsider F2r = ( F2 | ( r -Seg x ) ) as (Element of PF) by PARTFUN1:45;
per cases ;
suppose A18: x in wfp;

now
let z being set;
A19: ( r -Seg x ) c= wfp by A18,CKB8:1;
assume z in ( dom F2r );
then A20: z in ( r -Seg x ) by RELAT_1:57;
then ( F2r . z ) = ( F2 . z ) by FUNCT_1:49
.= ( F4 . z ) by A15,A20,A19,FUNCT_4:13
.= a0 by A20,A19,FUNCOP_1:7;
hence ( F2r . z ) <> a1 by A3;
end;
then A21: ( H . (x,F2r) ) <> a1 by A8;
A22: ( H . [ x,F2r ] ) in ( rng H ) by A14,FUNCT_1:def 3;
( F4 . x ) = a0 by A18,FUNCOP_1:7;
hence ( F2 . x ) = a0 by A15,A18,FUNCT_4:13
.= ( H . (x,( F2 | ( r -Seg x ) )) ) by A13,A21,A22,TARSKI:def 2;
end;
suppose A23: (not x in wfp);

then (not ( r -Seg x ) c= wfp) by CKB19:1;
then consider z being set such that A24: z in ( r -Seg x ) and A25: (not z in wfp) by TARSKI:def 3;
A26: ( r -Seg x ) c= c by CKB6:1;
then A27: z in ( dom F2r ) by A16,A24,RELAT_1:57;
A28: ( F2r . z ) = ( F2 . z ) by A24,FUNCT_1:49
.= ( F3 . z ) by A15,A25,FUNCT_4:11
.= a1 by A24,A26,FUNCOP_1:7;
thus ( F2 . x ) = ( F3 . x ) by A15,A23,FUNCT_4:11
.= a1 by FUNCOP_1:7
.= ( H . (x,( F2 | ( r -Seg x ) )) ) by A8,A27,A28;
end;
end;
reconsider F1 = ( c --> a0 ) as (Function of c,V) by A1,FUNCOP_1:45;
assume A29: (for H being (Function of [: c,PF :],V) holds (for F1,F2 being (Function of c,V) holds ((F1 is_recursively_expressed_by H & F2 is_recursively_expressed_by H) implies F1 = F2)));
assume (not R is  well_founded);
then wfp <> c by CKB18:1;
then consider x being set such that A30: (not (x in wfp iff x in c)) by TARSKI:1;
A31: F1 is_recursively_expressed_by H
proof
let x being (Element of c);
reconsider F1r = ( F1 | ( r -Seg x ) ) as (Element of PF) by PARTFUN1:45;
A32: ( H . [ x,F1r ] ) in ( rng H ) by A14,FUNCT_1:def 3;
now
let z being set;
assume A33: z in ( dom F1r );
then z in ( r -Seg x ) by RELAT_1:57;
then ( F1r . z ) = ( F1 . z ) by FUNCT_1:49
.= a0 by A33,FUNCOP_1:7;
hence ( F1r . z ) <> a1 by A3;
end;
then A34: ( H . (x,F1r) ) <> a1 by A8;
thus ( F1 . x ) = a0 by FUNCOP_1:7
.= ( H . (x,( F1 | ( r -Seg x ) )) ) by A13,A34,A32,TARSKI:def 2;
end;
A35: ( F1 . x ) = a0 by A30,FUNCOP_1:7;
( F2 . x ) = ( F3 . x ) by A15,A30,FUNCT_4:11
.= a1 by A30,FUNCOP_1:7;
hence contradiction by A3,A31,A17,A29,A35;
end;
