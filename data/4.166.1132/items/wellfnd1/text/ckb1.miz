environ
vocabularies FUNCT_1,PARTFUN1,TARSKI,RELAT_1,SUBSET_1,CARD_1,XBOOLE_0,CARD_5,ORDINAL2,ORDERS_2,WELLORD1,STRUCT_0,WAYBEL_0,XXREAL_0,ZFMISC_1,SETFAM_1,ORDINAL1,CARD_2,FINSET_1,FUNCOP_1,FUNCT_4,NAT_1,ARYTM_3,NUMBERS,WELLFND1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FUNCT_1,BINOP_1,SETFAM_1,DOMAIN_1,NAT_1,STRUCT_0,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_4,FUNCOP_1,ORDINAL1,WELLORD1,ORDINAL2,FINSET_1,CARD_2,ORDERS_2,CARD_5,RFUNCT_3,WAYBEL_0;
definitions TARSKI,RELAT_1,FUNCT_1,WELLORD1,WAYBEL_0,XBOOLE_0,BINOP_1,FUNCOP_1;
theorems TARSKI,ENUMSET1,ZFMISC_1,RELAT_1,RELSET_1,FUNCT_1,ORDINAL1,WELLORD1,GRFUNC_1,PARTFUN1,FUNCT_2,ORDINAL2,FUNCOP_1,CARD_1,ORDERS_2,FUNCT_4,CARD_5,WAYBEL_0,XBOOLE_0,XBOOLE_1,REALSET1,BINOP_1,CARD_2;
schemes NAT_1,SUBSET_1,DOMAIN_1,FUNCT_7,BINOP_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,PARTFUN1,FUNCOP_1,CARD_1,REALSET1,CARD_5,STRUCT_0,WAYBEL_0,FUNCT_1,ZFMISC_1;
constructors SETFAM_1,WELLORD1,BINOP_1,FUNCT_4,ORDINAL2,NAT_1,CARD_2,REALSET1,CARD_5,RFUNCT_3,WAYBEL_0,RELSET_1;
requirements NUMERALS,SUBSET,BOOLE;
begin
theorem
Th2: (for X being  functional set holds ((for f,g being Function holds ((f in X & g in X) implies f tolerates g)) implies ( union X ) is Function))
proof
let X being  functional set;
assume A1: (for f,g being Function holds ((f in X & g in X) implies f tolerates g));
A2: ( union X ) is  Function-like
proof
let x being set;
let y1 being set;
let y2 being set;
assume that
A3: [ x,y1 ] in ( union X )
and
A4: [ x,y2 ] in ( union X )
and
A5: y1 <> y2;
consider gx being set such that A6: [ x,y2 ] in gx and A7: gx in X by A4,TARSKI:def 4;
consider fx being set such that A8: [ x,y1 ] in fx and A9: fx in X by A3,TARSKI:def 4;
reconsider fx,gx as Function by A9,A7;
fx tolerates gx by A1,A9,A7;
then (ex h being Function st (fx c= h & gx c= h)) by PARTFUN1:52;
hence contradiction by A5,A8,A6,FUNCT_1:def 1;
end;
( union X ) is  Relation-like
proof
let x being set;
assume x in ( union X );
then (ex ux being set st (x in ux & ux in X)) by TARSKI:def 4;
hence thesis by RELAT_1:def 1;
end;
hence thesis by A2;
end;
