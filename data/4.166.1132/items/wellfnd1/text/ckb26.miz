environ
vocabularies FUNCT_1,PARTFUN1,TARSKI,RELAT_1,SUBSET_1,CARD_1,XBOOLE_0,CARD_5,ORDINAL2,ORDERS_2,WELLORD1,STRUCT_0,WAYBEL_0,XXREAL_0,ZFMISC_1,SETFAM_1,ORDINAL1,CARD_2,FINSET_1,FUNCOP_1,FUNCT_4,NAT_1,ARYTM_3,NUMBERS,WELLFND1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FUNCT_1,BINOP_1,SETFAM_1,DOMAIN_1,NAT_1,STRUCT_0,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_4,FUNCOP_1,ORDINAL1,WELLORD1,ORDINAL2,FINSET_1,CARD_2,ORDERS_2,CARD_5,RFUNCT_3,WAYBEL_0,CKB7,CKB10,CKB12,CKB14,CKB23;
definitions TARSKI,RELAT_1,FUNCT_1,WELLORD1,WAYBEL_0,XBOOLE_0,BINOP_1,FUNCOP_1,CKB7,CKB10,CKB12,CKB14,CKB23;
theorems TARSKI,ENUMSET1,ZFMISC_1,RELAT_1,RELSET_1,FUNCT_1,ORDINAL1,WELLORD1,GRFUNC_1,PARTFUN1,FUNCT_2,ORDINAL2,FUNCOP_1,CARD_1,ORDERS_2,FUNCT_4,CARD_5,WAYBEL_0,XBOOLE_0,XBOOLE_1,REALSET1,BINOP_1,CARD_2,CKB1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB12,CKB14,CKB16,CKB17,CKB18,CKB19,CKB21,CKB23,CKB24,CKB25;
schemes NAT_1,SUBSET_1,DOMAIN_1,FUNCT_7,BINOP_1,CKB2,CKB20,CKB22;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,PARTFUN1,FUNCOP_1,CARD_1,REALSET1,CARD_5,STRUCT_0,WAYBEL_0,FUNCT_1,ZFMISC_1,CKB3,CKB4,CKB11,CKB13,CKB15;
constructors SETFAM_1,WELLORD1,BINOP_1,FUNCT_4,ORDINAL2,NAT_1,CARD_2,REALSET1,CARD_5,RFUNCT_3,WAYBEL_0,RELSET_1,CKB10,CKB12,CKB14,CKB23;
requirements NUMERALS,SUBSET,BOOLE;
begin
theorem
(for R being non  empty  well_founded RelStr holds (for V being non  empty set holds (for H being (Function of [: (the carrier of R),( PFuncs ((the carrier of R),V) ) :],V) holds (for F1,F2 being (Function of (the carrier of R),V) holds ((F1 is_recursively_expressed_by H & F2 is_recursively_expressed_by H) implies F1 = F2)))))
proof
let R being non  empty  well_founded RelStr;
let V being non  empty set;
set c = (the carrier of R);
set r = (the InternalRel of R);
let H being (Function of [: c,( PFuncs (c,V) ) :],V);
let F1 being (Function of c,V);
let F2 being (Function of c,V);
assume that
A1: F1 is_recursively_expressed_by H
and
A2: F2 is_recursively_expressed_by H;
defpred P[ set ]
 means
( F1 . $1 ) <> ( F2 . $1 );
A3: ( dom F2 ) = c by FUNCT_2:def 1;
assume F1 <> F2;
then consider x being (Element of c) such that A4: ( F1 . x ) <> ( F2 . x ) by FUNCT_2:63;
reconsider x as (Element of R);
A5: R is  well_founded;
A6: P[ x ] by A4;
consider x0 being (Element of R) such that A7: P[ x0 ] and A8: (not (ex y being (Element of R) st ((x0 <> y & P[ y ]) & [ y,x0 ] in r))) from CKB20:sch 1(A6,A5);
A9: ( dom F1 ) = c by FUNCT_2:def 1;
( F1 | ( r -Seg x0 ) ) = ( F2 | ( r -Seg x0 ) )
proof
set fr = ( F1 | ( r -Seg x0 ) );
set gr = ( F2 | ( r -Seg x0 ) );
assume A10: (not thesis);
A11: ( dom fr ) = ( r -Seg x0 ) by A9,CKB6:1,RELAT_1:62;
( dom gr ) = ( r -Seg x0 ) by A3,CKB6:1,RELAT_1:62;
then consider x1 being set such that A12: x1 in ( dom fr ) and A13: ( fr . x1 ) <> ( gr . x1 ) by A11,A10,FUNCT_1:2;
A14: [ x1,x0 ] in r by A11,A12,WELLORD1:1;
reconsider x1 as (Element of R) by A12;
A15: x1 <> x0 by A11,A12,WELLORD1:1;
(( fr . x1 ) = ( F1 . x1 ) & ( gr . x1 ) = ( F2 . x1 )) by A11,A12,FUNCT_1:49;
hence contradiction by A8,A13,A14,A15;
end;
then ( F1 . x0 ) = ( H . (x0,( F2 | ( r -Seg x0 ) )) ) by A1,CKB23:def 1
.= ( F2 . x0 ) by A2,CKB23:def 1;
hence contradiction by A7;
end;
