environ
vocabularies TARSKI,QC_LANG3,PBOOLE,MSUALG_1,CATALG_1,FINSEQ_1,XBOOLE_0,ZFMISC_1,ARYTM_3,CARD_1,NAT_1,NUMBERS,XXREAL_0,ZF_LANG1,ORDINAL1,TREES_A,ABIAN,CARD_3,MEMBER_1,FINSET_1,FUNCOP_1,FUNCT_1,TREES_4,TREES_2,MSATERM,RELAT_1,MCART_1,MSAFREE,ZF_MODEL,AOFA_000,FINSEQ_2,PARTFUN1,QC_LANG1,FUNCT_2,ORDINAL4,CAT_3,TREES_3,ABCMIZ_0,ABCMIZ_1,ABCMIZ_A,STRUCT_0,FACIRC_1,INSTALG1,MSUALG_2,COMPUT_1,BINTREE1,TREES_9,ARYTM_1,FUNCT_6,SUBSET_1,MARGREL1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FACIRC_1,ENUMSET1,FUNCOP_1,XCMPLX_0,XXREAL_0,NAT_1,NAT_D,MCART_1,FINSET_1,CARD_1,NUMBERS,CARD_3,FINSEQ_1,FINSEQ_2,FINSEQ_4,FUNCT_6,TREES_1,TREES_2,TREES_3,TREES_4,TREES_9,PBOOLE,STRUCT_0,ORDINAL1,MSUALG_1,MSUALG_2,MSAFREE,EQUATION,MSATERM,INSTALG1,CATALG_1,MSAFREE3,AOFA_000,ABCMIZ_1,CKB8,CKB12;
definitions TARSKI,XBOOLE_0,RELAT_1,FUNCT_1,SUBSET_1,FINSEQ_1,MSAFREE,MSAFREE3,PBOOLE,MSUALG_1,ABCMIZ_1,CKB8,CKB12;
theorems TARSKI,XBOOLE_0,XBOOLE_1,TREES_1,XXREAL_0,XREAL_1,ZFMISC_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,ENUMSET1,FUNCT_6,INSTALG1,NAT_1,MCART_1,PBOOLE,RELAT_1,RELSET_1,CARD_1,CARD_5,ORDINAL1,MSUALG_2,TREES_3,TREES_4,FINSEQ_3,FUNCOP_1,MSAFREE,MSATERM,MSAFREE3,YELLOW11,PARTFUN1,WELLORD2,ABCMIZ_1,TREES_9,FACIRC_1,REALSET1,CKB1,CKB5,CKB6,CKB8,CKB9,CKB12,CKB16,CKB17,CKB20,CKB21,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34;
schemes FUNCT_1,NAT_1,RECDEF_1,CLASSES1,FINSEQ_1,CKB2,CKB3,CKB4;
registrations XBOOLE_0,SUBSET_1,XREAL_0,ORDINAL1,FUNCT_1,FINSET_1,STRUCT_0,PBOOLE,MSUALG_2,FINSEQ_1,NAT_1,CARD_1,MSAFREE,TREES_3,TREES_2,FUNCOP_1,RELAT_1,INDEX_1,INSTALG1,MSAFREE3,WAYBEL26,FACIRC_1,ABCMIZ_1,REALSET1,MSATERM,ZFMISC_1,RELSET_1,CKB7,CKB10,CKB11,CKB13,CKB14,CKB15,CKB18,CKB19,CKB25;
constructors RELSET_1,DOMAIN_1,WELLORD2,MSAFREE1,TREES_9,EQUATION,NAT_D,FINSEQ_4,CATALG_1,FACIRC_1,ABCMIZ_1,PRE_POLY,CKB8,CKB12;
requirements BOOLE,SUBSET,NUMERALS,ARITHM,REAL;
begin
theorem
Th21: (for C being  initialized  standardized ConstructorSignature holds (for t being (quasi-term of C) holds (t is  compound iff (( ( t . ( {} ) ) `1 ) in ( Constructors ) & ( ( ( t . ( {} ) ) `1 ) `1 ) = ( a_Term )))))
proof
let C being  initialized  standardized ConstructorSignature;
set X = ( MSVars C );
set V = ( X \/ ( (the carrier of C) --> { ( 0 ) } ) );
let t being (quasi-term of C);
(( C -Terms (X,V) ) c= (the Sorts of ( FreeMSA V )) & (the Sorts of ( Free (C,X) )) = ( C -Terms (X,V) )) by MSAFREE3:24,PBOOLE:def 18;
then A1: ((( FreeMSA V ) = MSAlgebra (# ( FreeSort V ),( FreeOper V ) #) & ( ( C -Terms (X,V) ) . ( a_Term C ) ) c= ( (the Sorts of ( FreeMSA V )) . ( a_Term C ) )) & t in ( ( C -Terms (X,V) ) . ( a_Term C ) )) by ABCMIZ_1:def 28,PBOOLE:def 2;
then t in ( ( FreeSort V ) . ( a_Term C ) );
then A2: t in ( FreeSort (V,( a_Term C )) ) by MSAFREE:def 11;
A3: ((( ( MSVars C ) . ( a_Term ) ) = ( Vars ) & ( a_Term C ) = ( a_Term )) & ( a_Term ) = 2) by ABCMIZ_1:def 25;
reconsider q = t as (Term of C,V) by MSAFREE3:8;
per cases  by MSATERM:2;
suppose (ex s being (SortSymbol of C) st (ex v being (Element of ( V . s )) st ( q . ( {} ) ) = [ v,s ]));

then consider s being (SortSymbol of C),v being (Element of ( V . s )) such that A4: ( t . ( {} ) ) = [ v,s ];
A5: (q = ( root-tree [ v,s ] ) & ( the_sort_of q ) = ( a_Term C )) by A2,A4,MSATERM:5,MSATERM:def 5;
then A6: (( a_Term C ) = s & ( ( t . ( {} ) ) `1 ) = v) by A4,MCART_1:7,MSATERM:14;
then reconsider x = v as (Element of ( Vars )) by A3,A5,A1,MSAFREE3:18;
(q = ( x -term C ) & ( vars x ) <> 2) by A5,A6,CKB20:1;
hence thesis by A6;
end;
suppose ( q . ( {} ) ) in [: (the carrier' of C),{ (the carrier of C) } :];

then consider o,k being set such that A7: ((o in (the carrier' of C) & k in { (the carrier of C) }) & ( q . ( {} ) ) = [ o,k ]) by ZFMISC_1:def 2;
reconsider o as (OperSymbol of C) by A7;
k = (the carrier of C) by A7,TARSKI:def 1;
then A8: ( the_result_sort_of o ) = ( the_sort_of q ) by A7,MSATERM:17
.= ( a_Term C ) by A1,MSAFREE3:17;
then (o <> ( ast C ) & o <> ( non_op C )) by ABCMIZ_1:38;
then A9: o is  constructor by ABCMIZ_1:def 11;
then A10: ( a_Term C ) = ( o `1 ) by A8,CKB8:def 1
.= ( ( ( q . ( {} ) ) `1 ) `1 ) by A7,MCART_1:7;
A11: ( ( q . ( {} ) ) `1 ) = o by A7,MCART_1:7;
now
given x being (Element of ( Vars )) such that
A12: q = ( x -term C );

( q . ( {} ) ) = [ x,( a_Term ) ] by A12,TREES_4:3;
then k = ( a_Term ) by A7,ZFMISC_1:27;
then 2 = (the carrier of C) by A7,TARSKI:def 1;
hence contradiction by ABCMIZ_1:def 9,YELLOW11:1;
end;
hence thesis by A9,A10,A11,CKB6:1,CKB8:def 1;
end;
end;
