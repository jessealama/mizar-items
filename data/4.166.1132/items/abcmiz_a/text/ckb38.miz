environ
vocabularies TARSKI,QC_LANG3,PBOOLE,MSUALG_1,CATALG_1,FINSEQ_1,XBOOLE_0,ZFMISC_1,ARYTM_3,CARD_1,NAT_1,NUMBERS,XXREAL_0,ZF_LANG1,ORDINAL1,TREES_A,ABIAN,CARD_3,MEMBER_1,FINSET_1,FUNCOP_1,FUNCT_1,TREES_4,TREES_2,MSATERM,RELAT_1,MCART_1,MSAFREE,ZF_MODEL,AOFA_000,FINSEQ_2,PARTFUN1,QC_LANG1,FUNCT_2,ORDINAL4,CAT_3,TREES_3,ABCMIZ_0,ABCMIZ_1,ABCMIZ_A,STRUCT_0,FACIRC_1,INSTALG1,MSUALG_2,COMPUT_1,BINTREE1,TREES_9,ARYTM_1,FUNCT_6,SUBSET_1,MARGREL1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FACIRC_1,ENUMSET1,FUNCOP_1,XCMPLX_0,XXREAL_0,NAT_1,NAT_D,MCART_1,FINSET_1,CARD_1,NUMBERS,CARD_3,FINSEQ_1,FINSEQ_2,FINSEQ_4,FUNCT_6,TREES_1,TREES_2,TREES_3,TREES_4,TREES_9,PBOOLE,STRUCT_0,ORDINAL1,MSUALG_1,MSUALG_2,MSAFREE,EQUATION,MSATERM,INSTALG1,CATALG_1,MSAFREE3,AOFA_000,ABCMIZ_1,CKB8,CKB12;
definitions TARSKI,XBOOLE_0,RELAT_1,FUNCT_1,SUBSET_1,FINSEQ_1,MSAFREE,MSAFREE3,PBOOLE,MSUALG_1,ABCMIZ_1,CKB8,CKB12;
theorems TARSKI,XBOOLE_0,XBOOLE_1,TREES_1,XXREAL_0,XREAL_1,ZFMISC_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,ENUMSET1,FUNCT_6,INSTALG1,NAT_1,MCART_1,PBOOLE,RELAT_1,RELSET_1,CARD_1,CARD_5,ORDINAL1,MSUALG_2,TREES_3,TREES_4,FINSEQ_3,FUNCOP_1,MSAFREE,MSATERM,MSAFREE3,YELLOW11,PARTFUN1,WELLORD2,ABCMIZ_1,TREES_9,FACIRC_1,REALSET1,CKB1,CKB5,CKB6,CKB8,CKB9,CKB12,CKB16,CKB17,CKB20,CKB21,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37;
schemes FUNCT_1,NAT_1,RECDEF_1,CLASSES1,FINSEQ_1,CKB2,CKB3,CKB4;
registrations XBOOLE_0,SUBSET_1,XREAL_0,ORDINAL1,FUNCT_1,FINSET_1,STRUCT_0,PBOOLE,MSUALG_2,FINSEQ_1,NAT_1,CARD_1,MSAFREE,TREES_3,TREES_2,FUNCOP_1,RELAT_1,INDEX_1,INSTALG1,MSAFREE3,WAYBEL26,FACIRC_1,ABCMIZ_1,REALSET1,MSATERM,ZFMISC_1,RELSET_1,CKB7,CKB10,CKB11,CKB13,CKB14,CKB15,CKB18,CKB19,CKB25;
constructors RELSET_1,DOMAIN_1,WELLORD2,MSAFREE1,TREES_9,EQUATION,NAT_D,FINSEQ_4,CATALG_1,FACIRC_1,ABCMIZ_1,PRE_POLY,CKB8,CKB12;
requirements BOOLE,SUBSET,NUMERALS,ARITHM,REAL;
begin
theorem
Th24: (for C being  initialized  standardized ConstructorSignature holds (for a being (expression of C) holds (a is  positive  positive (quasi-adjective of C) iff (( ( a . ( {} ) ) `1 ) in ( Constructors ) & ( ( ( a . ( {} ) ) `1 ) `1 ) = ( an_Adj )))))
proof
let C being  initialized  standardized ConstructorSignature;
set X = ( MSVars C );
set V = ( X \/ ( (the carrier of C) --> { ( 0 ) } ) );
let t being (expression of C);
consider A being (MSSubset of ( FreeMSA V )) such that A1: (( Free (C,X) ) = ( GenMSAlg A ) & A = ( ( Reverse V ) "" X )) by MSAFREE3:def 1;
(the Sorts of ( Free (C,X) )) is (MSSubset of ( FreeMSA V )) by A1,MSUALG_2:def 9;
then (the Sorts of ( Free (C,X) )) c= (the Sorts of ( FreeMSA V )) by PBOOLE:def 18;
then A2: ( (the Sorts of ( Free (C,( MSVars C )) )) . ( an_Adj C ) ) c= ( (the Sorts of ( FreeMSA V )) . ( an_Adj C ) ) by PBOOLE:def 2;
per cases  by CKB28:1;
suppose ((( ( t . ( {} ) ) `1 ) in ( Vars ) & ( ( t . ( {} ) ) `2 ) = ( a_Term )) & t is (quasi-term of C));

hence thesis by CKB21:1,ABCMIZ_1:77,XBOOLE_0:3;
end;
suppose that A3: ( ( t . ( {} ) ) `2 ) = (the carrier of C)
and
A4: ( ( t . ( {} ) ) `1 ) in ( Constructors )
and
A5: ( ( t . ( {} ) ) `1 ) in (the carrier' of C);
reconsider o = ( ( t . ( {} ) ) `1 ) as (OperSymbol of C) by A5;
reconsider tt = t as (Term of C,V) by MSAFREE3:8;
(not o in { ( * ),( non_op ) }) by A4,ABCMIZ_1:39,XBOOLE_0:3;
then (o <> ( * ) & o <> ( non_op )) by TARSKI:def 2;
then o is  constructor by ABCMIZ_1:def 11;
then A6: ( o `1 ) = ( the_result_sort_of o ) by CKB8:def 1;
A7: ( t . ( {} ) ) = [ o,( ( t . ( {} ) ) `2 ) ] by CKB1:1;
then A8: ( the_sort_of tt ) = ( the_result_sort_of o ) by A3,MSATERM:17;
hereby
assume t is  positive  positive (quasi-adjective of C);
then A9: t in ( (the Sorts of ( Free (C,( MSVars C )) )) . ( an_Adj C ) ) by ABCMIZ_1:def 28;
thus ( ( t . ( {} ) ) `1 ) in ( Constructors ) by A4;
assume ( ( ( t . ( {} ) ) `1 ) `1 ) <> ( an_Adj );
hence contradiction by A2,A9,A6,A8,MSAFREE3:7;
end;
assume ( ( t . ( {} ) ) `1 ) in ( Constructors );
assume ( ( ( t . ( {} ) ) `1 ) `1 ) = ( an_Adj );
then reconsider t as (expression of C,( an_Adj C )) by A3,A6,A7,CKB26:1;
t is  positive
proof
given a being (expression of C,( an_Adj C )) such that
A10: t = ( ( non_op C ) term a );

t = ( [ ( non_op ),(the carrier of C) ] -tree <* a *> ) by A10,ABCMIZ_1:43;
then ( t . ( {} ) ) = [ ( non_op ),(the carrier of C) ] by TREES_4:def 4;
then ( ( t . ( {} ) ) `1 ) = ( non_op ) by MCART_1:7;
then ( ( t . ( {} ) ) `1 ) in { ( * ),( non_op ) } by TARSKI:def 2;
hence thesis by A4,ABCMIZ_1:39,XBOOLE_0:3;
end;
hence thesis;
end;
suppose A11: ( ( t . ( {} ) ) `1 ) = ( * );

then ( ( t . ( {} ) ) `1 ) in { ( * ),( non_op ) } by TARSKI:def 2;
then A12: (not ( ( t . ( {} ) ) `1 ) in ( Constructors )) by ABCMIZ_1:39,XBOOLE_0:3;
consider a being (expression of C,( an_Adj C )),q being (expression of C,( a_Type C )) such that A13: t = ( [ ( * ),3 ] -tree (a,q) ) by A11,CKB32:1;
t = ( [ ( * ),3 ] -tree <* a,q *> ) by A13,TREES_4:def 6;
then ( t . ( {} ) ) = [ ( * ),3 ] by TREES_4:def 4;
then ( ( t . ( {} ) ) `1 ) = ( * ) by MCART_1:7;
then ((((t is (expression of C,( a_Type C )) & ( a_Type C ) = ( a_Type )) & ( a_Type ) = ( 0 )) & ( an_Adj C ) = ( an_Adj )) & ( an_Adj ) = 1) by CKB27:1;
hence thesis by A12,ABCMIZ_1:48;
end;
suppose A14: ( ( t . ( {} ) ) `1 ) = ( non_op );

then ( ( t . ( {} ) ) `1 ) in { ( * ),( non_op ) } by TARSKI:def 2;
then A15: (not ( ( t . ( {} ) ) `1 ) in ( Constructors )) by ABCMIZ_1:39,XBOOLE_0:3;
consider a being (expression of C,( an_Adj C )) such that A16: t = ( [ ( non_op ),3 ] -tree a ) by A14,CKB33:1;
t = ( [ ( non_op ),3 ] -tree <* a *> ) by A16,TREES_4:def 5
.= ( [ ( non_op ),(the carrier of C) ] -tree <* a *> ) by ABCMIZ_1:def 9,YELLOW11:1
.= ( ( non_op C ) term a ) by ABCMIZ_1:43;
hence thesis by A15,ABCMIZ_1:def 37;
end;
end;
