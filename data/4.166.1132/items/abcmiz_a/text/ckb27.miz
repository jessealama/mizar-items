environ
vocabularies TARSKI,QC_LANG3,PBOOLE,MSUALG_1,CATALG_1,FINSEQ_1,XBOOLE_0,ZFMISC_1,ARYTM_3,CARD_1,NAT_1,NUMBERS,XXREAL_0,ZF_LANG1,ORDINAL1,TREES_A,ABIAN,CARD_3,MEMBER_1,FINSET_1,FUNCOP_1,FUNCT_1,TREES_4,TREES_2,MSATERM,RELAT_1,MCART_1,MSAFREE,ZF_MODEL,AOFA_000,FINSEQ_2,PARTFUN1,QC_LANG1,FUNCT_2,ORDINAL4,CAT_3,TREES_3,ABCMIZ_0,ABCMIZ_1,ABCMIZ_A,STRUCT_0,FACIRC_1,INSTALG1,MSUALG_2,COMPUT_1,BINTREE1,TREES_9,ARYTM_1,FUNCT_6,SUBSET_1,MARGREL1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FACIRC_1,ENUMSET1,FUNCOP_1,XCMPLX_0,XXREAL_0,NAT_1,NAT_D,MCART_1,FINSET_1,CARD_1,NUMBERS,CARD_3,FINSEQ_1,FINSEQ_2,FINSEQ_4,FUNCT_6,TREES_1,TREES_2,TREES_3,TREES_4,TREES_9,PBOOLE,STRUCT_0,ORDINAL1,MSUALG_1,MSUALG_2,MSAFREE,EQUATION,MSATERM,INSTALG1,CATALG_1,MSAFREE3,AOFA_000,ABCMIZ_1,CKB8,CKB12;
definitions TARSKI,XBOOLE_0,RELAT_1,FUNCT_1,SUBSET_1,FINSEQ_1,MSAFREE,MSAFREE3,PBOOLE,MSUALG_1,ABCMIZ_1,CKB8,CKB12;
theorems TARSKI,XBOOLE_0,XBOOLE_1,TREES_1,XXREAL_0,XREAL_1,ZFMISC_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,ENUMSET1,FUNCT_6,INSTALG1,NAT_1,MCART_1,PBOOLE,RELAT_1,RELSET_1,CARD_1,CARD_5,ORDINAL1,MSUALG_2,TREES_3,TREES_4,FINSEQ_3,FUNCOP_1,MSAFREE,MSATERM,MSAFREE3,YELLOW11,PARTFUN1,WELLORD2,ABCMIZ_1,TREES_9,FACIRC_1,REALSET1,CKB1,CKB5,CKB6,CKB8,CKB9,CKB12,CKB16,CKB17,CKB20,CKB21,CKB22,CKB23,CKB24,CKB26;
schemes FUNCT_1,NAT_1,RECDEF_1,CLASSES1,FINSEQ_1,CKB2,CKB3,CKB4;
registrations XBOOLE_0,SUBSET_1,XREAL_0,ORDINAL1,FUNCT_1,FINSET_1,STRUCT_0,PBOOLE,MSUALG_2,FINSEQ_1,NAT_1,CARD_1,MSAFREE,TREES_3,TREES_2,FUNCOP_1,RELAT_1,INDEX_1,INSTALG1,MSAFREE3,WAYBEL26,FACIRC_1,ABCMIZ_1,REALSET1,MSATERM,ZFMISC_1,RELSET_1,CKB7,CKB10,CKB11,CKB13,CKB14,CKB15,CKB18,CKB19,CKB25;
constructors RELSET_1,DOMAIN_1,WELLORD2,MSAFREE1,TREES_9,EQUATION,NAT_D,FINSEQ_4,CATALG_1,FACIRC_1,ABCMIZ_1,PRE_POLY,CKB8,CKB12;
requirements BOOLE,SUBSET,NUMERALS,ARITHM,REAL;
begin
theorem
Th13: (for C being  initialized  standardized ConstructorSignature holds (for e being (expression of C) holds ((( ( e . ( {} ) ) `1 ) = ( * ) implies e is (expression of C,( a_Type C ))) & (( ( e . ( {} ) ) `1 ) = ( non_op ) implies e is (expression of C,( an_Adj C ))))))
proof
let C being  initialized  standardized ConstructorSignature;
let e being (expression of C);
per cases  by CKB24:1;
suppose (ex x being (Element of ( Vars )) st (e = ( x -term C ) & ( e . ( {} ) ) = [ x,( a_Term ) ]));

then consider x being (Element of ( Vars )) such that A1: (e = ( x -term C ) & ( e . ( {} ) ) = [ x,( a_Term ) ]);
thus thesis by A1,MCART_1:7;
end;
suppose (ex o being (OperSymbol of C) st (( e . ( {} ) ) = [ o,(the carrier of C) ] & ((o in ( Constructors ) or o = ( * )) or o = ( non_op ))));

then consider o being (OperSymbol of C) such that A2: ( e . ( {} ) ) = [ o,(the carrier of C) ];
set X = ( MSVars C );
set Y = ( X \/ ( (the carrier of C) --> { ( 0 ) } ) );
reconsider t = e as (Term of C,Y) by MSAFREE3:8;
( variables_in t ) c= X by MSAFREE3:27;
then e in { t1 where t1 is (Term of C,Y): (( the_sort_of t1 ) = ( the_sort_of t ) & ( variables_in t1 ) c= X) };
then e in ( ( C -Terms (X,Y) ) . ( the_sort_of t ) ) by MSAFREE3:def 5;
then A3: e in ( (the Sorts of ( Free (C,X) )) . ( the_sort_of t ) ) by MSAFREE3:24;
A4: (( the_result_sort_of ( non_op C ) ) = ( an_Adj C ) & ( the_result_sort_of ( ast C ) ) = ( a_Type C )) by ABCMIZ_1:38;
A5: ((( ( e . ( {} ) ) `1 ) = o & ( non_op C ) = ( non_op )) & ( ast C ) = ( * )) by A2,MCART_1:7;
( the_sort_of t ) = ( the_result_sort_of o ) by A2,MSATERM:17;
hence thesis by A3,A4,A5,ABCMIZ_1:def 28;
end;
end;
