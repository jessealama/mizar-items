environ
vocabularies TARSKI,QC_LANG3,PBOOLE,MSUALG_1,CATALG_1,FINSEQ_1,XBOOLE_0,ZFMISC_1,ARYTM_3,CARD_1,NAT_1,NUMBERS,XXREAL_0,ZF_LANG1,ORDINAL1,TREES_A,ABIAN,CARD_3,MEMBER_1,FINSET_1,FUNCOP_1,FUNCT_1,TREES_4,TREES_2,MSATERM,RELAT_1,MCART_1,MSAFREE,ZF_MODEL,AOFA_000,FINSEQ_2,PARTFUN1,QC_LANG1,FUNCT_2,ORDINAL4,CAT_3,TREES_3,ABCMIZ_0,ABCMIZ_1,ABCMIZ_A,STRUCT_0,FACIRC_1,INSTALG1,MSUALG_2,COMPUT_1,BINTREE1,TREES_9,ARYTM_1,FUNCT_6,SUBSET_1,MARGREL1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FACIRC_1,ENUMSET1,FUNCOP_1,XCMPLX_0,XXREAL_0,NAT_1,NAT_D,MCART_1,FINSET_1,CARD_1,NUMBERS,CARD_3,FINSEQ_1,FINSEQ_2,FINSEQ_4,FUNCT_6,TREES_1,TREES_2,TREES_3,TREES_4,TREES_9,PBOOLE,STRUCT_0,ORDINAL1,MSUALG_1,MSUALG_2,MSAFREE,EQUATION,MSATERM,INSTALG1,CATALG_1,MSAFREE3,AOFA_000,ABCMIZ_1,CKB8,CKB12;
definitions TARSKI,XBOOLE_0,RELAT_1,FUNCT_1,SUBSET_1,FINSEQ_1,MSAFREE,MSAFREE3,PBOOLE,MSUALG_1,ABCMIZ_1,CKB8,CKB12;
theorems TARSKI,XBOOLE_0,XBOOLE_1,TREES_1,XXREAL_0,XREAL_1,ZFMISC_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,ENUMSET1,FUNCT_6,INSTALG1,NAT_1,MCART_1,PBOOLE,RELAT_1,RELSET_1,CARD_1,CARD_5,ORDINAL1,MSUALG_2,TREES_3,TREES_4,FINSEQ_3,FUNCOP_1,MSAFREE,MSATERM,MSAFREE3,YELLOW11,PARTFUN1,WELLORD2,ABCMIZ_1,TREES_9,FACIRC_1,REALSET1,CKB1,CKB5,CKB6,CKB8,CKB9,CKB12,CKB16;
schemes FUNCT_1,NAT_1,RECDEF_1,CLASSES1,FINSEQ_1,CKB2,CKB3,CKB4;
registrations XBOOLE_0,SUBSET_1,XREAL_0,ORDINAL1,FUNCT_1,FINSET_1,STRUCT_0,PBOOLE,MSUALG_2,FINSEQ_1,NAT_1,CARD_1,MSAFREE,TREES_3,TREES_2,FUNCOP_1,RELAT_1,INDEX_1,INSTALG1,MSAFREE3,WAYBEL26,FACIRC_1,ABCMIZ_1,REALSET1,MSATERM,ZFMISC_1,RELSET_1,CKB7,CKB10,CKB11,CKB13,CKB14,CKB15;
constructors RELSET_1,DOMAIN_1,WELLORD2,MSAFREE1,TREES_9,EQUATION,NAT_D,FINSEQ_4,CATALG_1,FACIRC_1,ABCMIZ_1,PRE_POLY,CKB8,CKB12;
requirements BOOLE,SUBSET,NUMERALS,ARITHM,REAL;
begin
theorem
(for C being ConstructorSignature holds (C is  standardized iff C is (Subsignature of ( MaxConstrSign ))))
proof
let C being ConstructorSignature;
A1: (the carrier' of ( MaxConstrSign )) = ( { ( * ),( non_op ) } \/ ( Constructors ) ) by ABCMIZ_1:def 24;
A2: ( dom (the Arity of ( MaxConstrSign )) ) = (the carrier' of ( MaxConstrSign )) by FUNCT_2:def 1;
A3: ( dom (the ResultSort of ( MaxConstrSign )) ) = (the carrier' of ( MaxConstrSign )) by FUNCT_2:def 1;
thus (C is  standardized implies C is (Subsignature of ( MaxConstrSign )))
proof
assume A4: (for o being (OperSymbol of C) holds (o is  constructor implies ((o in ( Constructors ) & ( o `1 ) = ( the_result_sort_of o )) & ( card ( ( o `2 ) `1 ) ) = ( len ( the_arity_of o ) ))));
A5: ((the carrier of C) = 3 & (the carrier of ( MaxConstrSign )) = 3) by ABCMIZ_1:def 9,YELLOW11:1;
A6: (the Arity of C) c= (the Arity of ( MaxConstrSign ))
proof
let x being set;
let y being set;
assume A7: [ x,y ] in (the Arity of C);
then reconsider x as (OperSymbol of C) by ZFMISC_1:87;
((x = ( * ) or x = ( non_op )) or x is  constructor) by ABCMIZ_1:def 11;
then (x in { ( * ),( non_op ) } or x in ( Constructors )) by A4,TARSKI:def 2;
then reconsider c = x as (OperSymbol of ( MaxConstrSign )) by A1,XBOOLE_0:def 3;
A8: y = ( (the Arity of C) . x ) by A7,FUNCT_1:1;
per cases  by ABCMIZ_1:def 11;
suppose (x = ( * ) or x = ( non_op ));

then ((c = ( * ) & y = <* ( an_Adj ),( a_Type ) *>) or (c = ( non_op ) & y = <* ( an_Adj ) *>)) by A8,ABCMIZ_1:def 9;
then y = ( (the Arity of ( MaxConstrSign )) . c ) by ABCMIZ_1:def 9;
hence thesis by A2,FUNCT_1:def 2;
end;
suppose A9: x is  constructor;

then A10: (x <> ( * ) & x <> ( non_op )) by ABCMIZ_1:def 11;
then A11: c is  constructor by ABCMIZ_1:def 11;
( card ( ( x `2 ) `1 ) ) = ( len ( the_arity_of x ) ) by A4,A9
.= ( card y ) by A7,FUNCT_1:1;
then A12: ( card y ) = ( card ( (the Arity of ( MaxConstrSign )) . c ) ) by A11,ABCMIZ_1:def 24;
(y in ( { ( a_Term ) } * ) & ( (the Arity of ( MaxConstrSign )) . c ) in ( { ( a_Term ) } * )) by A8,A10,ABCMIZ_1:def 9;
then y = ( (the Arity of ( MaxConstrSign )) . c ) by A12,ABCMIZ_1:6;
hence thesis by A2,FUNCT_1:def 2;
end;
end;
(the ResultSort of C) c= (the ResultSort of ( MaxConstrSign ))
proof
let x being set;
let y being set;
assume A13: [ x,y ] in (the ResultSort of C);
then reconsider x as (OperSymbol of C) by ZFMISC_1:87;
((x is  constructor or x = ( * )) or x = ( non_op )) by ABCMIZ_1:def 11;
then (x in { ( * ),( non_op ) } or x in ( Constructors )) by A4,TARSKI:def 2;
then reconsider c = x as (OperSymbol of ( MaxConstrSign )) by A1,XBOOLE_0:def 3;
A14: y = ( (the ResultSort of C) . x ) by A13,FUNCT_1:1;
per cases  by ABCMIZ_1:def 11;
suppose (x = ( * ) or x = ( non_op ));

then ((c = ( * ) & y = ( a_Type )) or (c = ( non_op ) & y = ( an_Adj ))) by A14,ABCMIZ_1:def 9;
then y = ( (the ResultSort of ( MaxConstrSign )) . c ) by ABCMIZ_1:def 9;
hence thesis by A3,FUNCT_1:def 2;
end;
suppose A15: (x is  constructor & c is  constructor);

then ( x `1 ) = ( the_result_sort_of x ) by A4
.= y by A13,FUNCT_1:1;
then y = ( the_result_sort_of c ) by A15,CKB8:def 1
.= ( (the ResultSort of ( MaxConstrSign )) . c );
hence thesis by A3,FUNCT_1:def 2;
end;
end;
hence thesis by A5,A6,INSTALG1:13;
end;

assume A16: C is (Subsignature of ( MaxConstrSign ));
let o being (OperSymbol of C);
assume that
A17: (o <> ( * ) & o <> ( non_op ));
((the carrier' of C) c= (the carrier' of ( MaxConstrSign )) & o in (the carrier' of C)) by A16,INSTALG1:10;
then reconsider c = o as (OperSymbol of ( MaxConstrSign ));
A18: c is  constructor by A17,ABCMIZ_1:def 11;
(not c in { ( * ),( non_op ) }) by A17,TARSKI:def 2;
hence o in ( Constructors ) by A1,XBOOLE_0:def 3;
thus ( o `1 ) = ( (the ResultSort of ( MaxConstrSign )) . c ) by A18,ABCMIZ_1:def 24
.= ( ( (the ResultSort of ( MaxConstrSign )) | (the carrier' of C) ) . o ) by FUNCT_1:49
.= ( (the ResultSort of C) . o ) by A16,INSTALG1:12
.= ( the_result_sort_of o );
thus ( card ( ( o `2 ) `1 ) ) = ( card ( (the Arity of ( MaxConstrSign )) . c ) ) by A18,ABCMIZ_1:def 24
.= ( card ( ( (the Arity of ( MaxConstrSign )) | (the carrier' of C) ) . o ) ) by FUNCT_1:49
.= ( card ( (the Arity of C) . o ) ) by A16,INSTALG1:12
.= ( len ( the_arity_of o ) );
end;
