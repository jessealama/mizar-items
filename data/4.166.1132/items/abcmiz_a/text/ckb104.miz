environ
vocabularies TARSKI,QC_LANG3,PBOOLE,MSUALG_1,CATALG_1,FINSEQ_1,XBOOLE_0,ZFMISC_1,ARYTM_3,CARD_1,NAT_1,NUMBERS,XXREAL_0,ZF_LANG1,ORDINAL1,TREES_A,ABIAN,CARD_3,MEMBER_1,FINSET_1,FUNCOP_1,FUNCT_1,TREES_4,TREES_2,MSATERM,RELAT_1,MCART_1,MSAFREE,ZF_MODEL,AOFA_000,FINSEQ_2,PARTFUN1,QC_LANG1,FUNCT_2,ORDINAL4,CAT_3,TREES_3,ABCMIZ_0,ABCMIZ_1,ABCMIZ_A,STRUCT_0,FACIRC_1,INSTALG1,MSUALG_2,COMPUT_1,BINTREE1,TREES_9,ARYTM_1,FUNCT_6,SUBSET_1,MARGREL1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FACIRC_1,ENUMSET1,FUNCOP_1,XCMPLX_0,XXREAL_0,NAT_1,NAT_D,MCART_1,FINSET_1,CARD_1,NUMBERS,CARD_3,FINSEQ_1,FINSEQ_2,FINSEQ_4,FUNCT_6,TREES_1,TREES_2,TREES_3,TREES_4,TREES_9,PBOOLE,STRUCT_0,ORDINAL1,MSUALG_1,MSUALG_2,MSAFREE,EQUATION,MSATERM,INSTALG1,CATALG_1,MSAFREE3,AOFA_000,ABCMIZ_1,CKB8,CKB12,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB52,CKB53,CKB54,CKB55,CKB62,CKB63,CKB64,CKB65,CKB69,CKB75,CKB76,CKB77,CKB78,CKB97,CKB98,CKB99,CKB102;
definitions TARSKI,XBOOLE_0,RELAT_1,FUNCT_1,SUBSET_1,FINSEQ_1,MSAFREE,MSAFREE3,PBOOLE,MSUALG_1,ABCMIZ_1,CKB8,CKB12,CKB44,CKB46,CKB48,CKB55,CKB62,CKB63,CKB64,CKB65,CKB69,CKB75,CKB76,CKB77,CKB78,CKB98,CKB102;
theorems TARSKI,XBOOLE_0,XBOOLE_1,TREES_1,XXREAL_0,XREAL_1,ZFMISC_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,ENUMSET1,FUNCT_6,INSTALG1,NAT_1,MCART_1,PBOOLE,RELAT_1,RELSET_1,CARD_1,CARD_5,ORDINAL1,MSUALG_2,TREES_3,TREES_4,FINSEQ_3,FUNCOP_1,MSAFREE,MSATERM,MSAFREE3,YELLOW11,PARTFUN1,WELLORD2,ABCMIZ_1,TREES_9,FACIRC_1,REALSET1,CKB1,CKB5,CKB6,CKB8,CKB9,CKB12,CKB16,CKB17,CKB20,CKB21,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB44,CKB46,CKB48,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB83,CKB96,CKB98,CKB101,CKB102,CKB103;
schemes FUNCT_1,NAT_1,RECDEF_1,CLASSES1,FINSEQ_1,CKB2,CKB3,CKB4;
registrations XBOOLE_0,SUBSET_1,XREAL_0,ORDINAL1,FUNCT_1,FINSET_1,STRUCT_0,PBOOLE,MSUALG_2,FINSEQ_1,NAT_1,CARD_1,MSAFREE,TREES_3,TREES_2,FUNCOP_1,RELAT_1,INDEX_1,INSTALG1,MSAFREE3,WAYBEL26,FACIRC_1,ABCMIZ_1,REALSET1,MSATERM,ZFMISC_1,RELSET_1,CKB7,CKB10,CKB11,CKB13,CKB14,CKB15,CKB18,CKB19,CKB25,CKB49,CKB50,CKB51,CKB70,CKB71,CKB72,CKB73,CKB80,CKB81,CKB82,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB100;
constructors RELSET_1,DOMAIN_1,WELLORD2,MSAFREE1,TREES_9,EQUATION,NAT_D,FINSEQ_4,CATALG_1,FACIRC_1,ABCMIZ_1,PRE_POLY,CKB8,CKB12,CKB44,CKB46,CKB48,CKB52,CKB53,CKB54,CKB55,CKB62,CKB63,CKB64,CKB65,CKB69,CKB75,CKB76,CKB77,CKB78,CKB97,CKB98,CKB99,CKB102;
requirements BOOLE,SUBSET,NUMERALS,ARITHM,REAL;
begin
reserve i for Nat;
reserve j for Nat;
reserve l for quasi-loci;
definition
let l being (FinSequence of ( Vars ));
func args l -> (FinSequence of ( QuasiTerms ( MaxConstrSign ) )) means 
:Def18: (( len it ) = ( len l ) & (for i holds (i in ( dom l ) implies ( it . i ) = ( ( l /. i ) -term ( MaxConstrSign ) ))));
existence
proof
deffunc F(Nat) = ( ( l /. $1 ) -term ( MaxConstrSign ) );
consider g being FinSequence such that A1: ( len g ) = ( len l ) and A2: (for i holds (i in ( dom g ) implies ( g . i ) = F(i))) from FINSEQ_1:sch 2;
A3: ( dom g ) = ( dom l ) by A1,FINSEQ_3:29;
( rng g ) c= ( QuasiTerms ( MaxConstrSign ) )
proof
let j being set;
assume j in ( rng g );
then consider z being set such that A4: (z in ( dom g ) & j = ( g . z )) by FUNCT_1:def 3;
reconsider z as Nat by A4;
j = F(z) by A2,A4;
hence thesis by ABCMIZ_1:49;
end;
then reconsider g as (FinSequence of ( QuasiTerms ( MaxConstrSign ) )) by FINSEQ_1:def 4;
take g;
thus thesis by A1,A2,A3;
end;
uniqueness
proof
let a1 being (FinSequence of ( QuasiTerms ( MaxConstrSign ) ));
let a2 being (FinSequence of ( QuasiTerms ( MaxConstrSign ) ));
assume that
A5: ( len a1 ) = ( len l )
and
A6: (for i holds (i in ( dom l ) implies ( a1 . i ) = ( ( l /. i ) -term ( MaxConstrSign ) )))
and
A7: ( len a2 ) = ( len l )
and
A8: (for i holds (i in ( dom l ) implies ( a2 . i ) = ( ( l /. i ) -term ( MaxConstrSign ) )));
A9: (( dom a1 ) = ( dom l ) & ( dom a2 ) = ( dom l )) by A5,A7,FINSEQ_3:29;
now
let i;
assume i in ( dom a1 );
then (( a1 . i ) = ( ( l /. i ) -term ( MaxConstrSign ) ) & ( a2 . i ) = ( ( l /. i ) -term ( MaxConstrSign ) )) by A6,A8,A9;
hence ( a1 . i ) = ( a2 . i );
end;
hence thesis by A9,FINSEQ_1:13;
end;
end;
