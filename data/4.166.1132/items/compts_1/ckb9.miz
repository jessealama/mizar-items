environ
vocabularies PRE_TOPC,SUBSET_1,RCOMP_1,SETFAM_1,TARSKI,FINSET_1,XBOOLE_0,CARD_5,RELAT_1,ZFMISC_1,FUNCT_1,STRUCT_0,ORDINAL2,TOPS_2,FUNCT_4,COMPTS_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_3,SETFAM_1,FINSET_1,DOMAIN_1,FUNCT_4,STRUCT_0,PRE_TOPC,TOPS_2,CKB1,CKB2,CKB3,CKB4,CKB5;
definitions TARSKI,TOPS_2,XBOOLE_0,SUBSET_1,STRUCT_0,PRE_TOPC,CKB1,CKB2,CKB3,CKB5;
theorems TARSKI,SETFAM_1,FUNCT_1,FUNCT_3,ZFMISC_1,ORDERS_1,PRE_TOPC,TOPS_1,TOPS_2,RELAT_1,XBOOLE_0,XBOOLE_1,SUBSET_1,FUNCT_2,STRUCT_0,FUNCT_4,RELSET_1,FINSET_1,CKB1,CKB2,CKB3,CKB5,CKB7,CKB8;
schemes MCART_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FINSET_1,STRUCT_0,PRE_TOPC,TOPS_1,CKB6;
constructors SETFAM_1,DOMAIN_1,FUNCT_3,FINSET_1,TOPS_2,FUNCT_4,RELSET_1,CKB1,CKB5;
requirements SUBSET,BOOLE;
begin
reserve T for TopStruct;
reserve P for (Subset of T);
theorem
Th12: ((P = ( {} ) implies (P is  compact iff ( T | P ) is  compact)) & ((T is  TopSpace-like & P <> ( {} )) implies (P is  compact iff ( T | P ) is  compact)))
proof
A1: ( [#] ( T | P ) ) = P by PRE_TOPC:def 5;
hence (P = ( {} ) implies (P is  compact iff ( T | P ) is  compact)) by CKB7:1;
assume that
A2: T is  TopSpace-like
and
A3: P <> ( {} );
reconsider T9 = T as non empty TopSpace by A2,A3;
reconsider P9 = P as non empty (Subset of T9) by A3;
A4: (( [#] ( T9 | P9 ) ) is  compact iff ( T9 | P9 ) is  compact) by CKB7:1;
hence (P is  compact implies ( T | P ) is  compact) by A1,CKB8:1;
assume ( T | P ) is  compact;
then (for Q being (Subset of ( T | P )) holds (Q = P implies Q is  compact)) by A4,PRE_TOPC:def 5;
hence thesis by A1,CKB8:1;
end;
