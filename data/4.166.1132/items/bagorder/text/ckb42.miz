environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,FINSEQ_1,ARYTM_1,ARYTM_3,XXREAL_0,CARD_1,NAT_1,PRE_POLY,FUNCT_1,RELAT_1,TARSKI,CLASSES1,FUNCT_2,CARD_3,FINSEQ_2,PBOOLE,GRAPH_2,VALUED_0,FINSUB_1,FINSET_1,RELAT_2,ORDERS_2,WAYBEL_4,STRUCT_0,WELLFND1,WELLORD1,ORDERS_1,ORDINAL1,WELLORD2,ORDINAL4,REAL_1,FUNCOP_1,FUNCT_4,PARTFUN1,DICKSON,RLVECT_2,ZFMISC_1,MCART_1,BAGORDER;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,RELAT_1,PBOOLE,RELAT_2,RELSET_1,PARTFUN1,FINSET_1,FINSUB_1,ORDINAL1,FUNCT_7,MCART_1,WELLORD1,ORDERS_1,WELLFND1,CARD_1,NUMBERS,VALUED_0,XXREAL_0,REAL_1,FUNCT_1,SEQ_1,PRE_POLY,CARD_3,NAT_D,FINSEQ_1,RVSUM_1,WSIERP_1,FUNCOP_1,FUNCT_2,SEQ_4,DOMAIN_1,FINSEQOP,CLASSES1,RECDEF_1,NAT_1,STRUCT_0,WAYBEL_0,YELLOW_1,WAYBEL_4,PRALG_1,ORDERS_2,DICKSON,POLYNOM2,CKB6,CKB10,CKB15,CKB19,CKB30,CKB31,CKB32,CKB37,CKB41;
definitions TARSKI,RELAT_2,WELLFND1,FINSEQ_2,CKB6,CKB10,CKB15,CKB19,CKB32,CKB37,CKB41;
theorems WELLORD1,TARSKI,RELAT_2,RELSET_1,ZFMISC_1,ORDERS_2,NAT_1,FUNCT_1,AXIOMS,CARD_3,PBOOLE,YELLOW_1,PRALG_1,FUNCOP_1,PARTIT_2,WELLFND1,RELAT_1,DICKSON,FINSEQ_1,INTEGRA5,RVSUM_1,FINSEQ_2,CARD_1,WAYBEL_0,WAYBEL_4,ORDINAL1,FUNCT_2,CARD_2,MCART_1,FINSUB_1,ORDERS_1,FUNCT_7,WELLORD2,FINSEQ_3,FINSEQ_5,FINSEQOP,RFINSEQ,XBOOLE_0,XBOOLE_1,PARTFUN1,XREAL_1,XXREAL_0,VALUED_0,VALUED_1,XXREAL_2,XREAL_0,NAT_D,CLASSES1,PRE_POLY,CKB1,CKB2,CKB4,CKB5,CKB6,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB32,CKB33,CKB36,CKB37,CKB38,CKB40,CKB41;
schemes NAT_1,RELSET_1,FINSET_1,RECDEF_1,FUNCT_2,ORDINAL1,CLASSES1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FINSET_1,FINSUB_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,CARD_1,MEMBERED,FINSEQ_1,CARD_5,STRUCT_0,ORDERS_2,WAYBEL_0,YELLOW_1,DICKSON,VALUED_0,XXREAL_2,RELSET_1,PRE_POLY,CKB3,CKB7,CKB8,CKB11,CKB34,CKB35,CKB39;
constructors DOMAIN_1,FINSEQOP,NAT_D,WSIERP_1,PRALG_1,TRIANG_1,WAYBEL_4,WELLFND1,POLYNOM2,DICKSON,SEQ_1,RECDEF_1,BINOP_2,SEQ_4,CLASSES1,RELSET_1,FUNCT_7,REAL_1,CKB6,CKB10,CKB15,CKB19,CKB32,CKB37,CKB41;
requirements SUBSET,NUMERALS,REAL,BOOLE,ARITHM;
begin
theorem
Th27: (for n being Ordinal holds (for o being (TermOrder of n) holds (((for a,b,c being (bag of n) holds ([ a,b ] in o implies [ ( a + c ),( b + c ) ] in o)) & o is_strongly_connected_in ( Bags n )) implies ( Graded o ) is  admissible)))
proof
let n being Ordinal;
let o being (TermOrder of n);
assume that
A1: (for a,b,c being (bag of n) holds ([ a,b ] in o implies [ ( a + c ),( b + c ) ] in o))
and
A2: o is_strongly_connected_in ( Bags n );
now
let x being set,y being set;
assume that
A3: x in ( Bags n )
and
A4: y in ( Bags n );
reconsider x9 = x,y9 = y as (bag of n) by A3,A4;
assume A5: (not [ x,y ] in ( Graded o ));
then A6: ( TotDegree x9 ) >= ( TotDegree y9 ) by A1,CKB41:def 1;
per cases  by A6,XXREAL_0:1;
suppose ( TotDegree y9 ) < ( TotDegree x9 );

hence [ y,x ] in ( Graded o ) by A1,CKB41:def 1;
end;
suppose A7: ( TotDegree y9 ) = ( TotDegree x9 );

then (not [ x,y ] in o) by A1,A5,CKB41:def 1;
then [ y,x ] in o by A2,A3,A4,RELAT_2:def 7;
hence [ y,x ] in ( Graded o ) by A1,A7,CKB41:def 1;
end;
end;
hence ( Graded o ) is_strongly_connected_in ( Bags n ) by RELAT_2:def 7;
now
let a being (bag of n);
A8: ( TotDegree ( EmptyBag n ) ) = ( 0 ) by CKB23:1;
per cases ;
suppose a = ( EmptyBag n );

hence [ ( EmptyBag n ),a ] in ( Graded o ) by ORDERS_1:3;
end;
suppose a <> ( EmptyBag n );

then ( TotDegree a ) <> ( 0 ) by CKB23:1;
hence [ ( EmptyBag n ),a ] in ( Graded o ) by A1,A8,CKB41:def 1;
end;
end;
hence (for a being (bag of n) holds [ ( EmptyBag n ),a ] in ( Graded o ));
now
let a being (bag of n),b being (bag of n),c being (bag of n);
assume that
A9: [ a,b ] in ( Graded o );
per cases  by A1,A9,CKB41:def 1;
suppose A10: ( TotDegree a ) < ( TotDegree b );

A11: ( TotDegree ( a + c ) ) = ( ( TotDegree a ) + ( TotDegree c ) ) by CKB21:1;
( TotDegree ( b + c ) ) = ( ( TotDegree b ) + ( TotDegree c ) ) by CKB21:1;
then ( TotDegree ( a + c ) ) < ( TotDegree ( b + c ) ) by A10,A11,XREAL_1:8;
hence [ ( a + c ),( b + c ) ] in ( Graded o ) by A1,CKB41:def 1;
end;
suppose A12: (( TotDegree a ) = ( TotDegree b ) & [ a,b ] in o);

then ( TotDegree ( a + c ) ) = ( ( TotDegree b ) + ( TotDegree c ) ) by CKB21:1;
then A13: ( TotDegree ( a + c ) ) = ( TotDegree ( b + c ) ) by CKB21:1;
[ ( a + c ),( b + c ) ] in o by A1,A12;
hence [ ( a + c ),( b + c ) ] in ( Graded o ) by A1,A13,CKB41:def 1;
end;
end;
hence thesis;
end;
