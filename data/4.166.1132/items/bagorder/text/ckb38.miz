environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,FINSEQ_1,ARYTM_1,ARYTM_3,XXREAL_0,CARD_1,NAT_1,PRE_POLY,FUNCT_1,RELAT_1,TARSKI,CLASSES1,FUNCT_2,CARD_3,FINSEQ_2,PBOOLE,GRAPH_2,VALUED_0,FINSUB_1,FINSET_1,RELAT_2,ORDERS_2,WAYBEL_4,STRUCT_0,WELLFND1,WELLORD1,ORDERS_1,ORDINAL1,WELLORD2,ORDINAL4,REAL_1,FUNCOP_1,FUNCT_4,PARTFUN1,DICKSON,RLVECT_2,ZFMISC_1,MCART_1,BAGORDER;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,RELAT_1,PBOOLE,RELAT_2,RELSET_1,PARTFUN1,FINSET_1,FINSUB_1,ORDINAL1,FUNCT_7,MCART_1,WELLORD1,ORDERS_1,WELLFND1,CARD_1,NUMBERS,VALUED_0,XXREAL_0,REAL_1,FUNCT_1,SEQ_1,PRE_POLY,CARD_3,NAT_D,FINSEQ_1,RVSUM_1,WSIERP_1,FUNCOP_1,FUNCT_2,SEQ_4,DOMAIN_1,FINSEQOP,CLASSES1,RECDEF_1,NAT_1,STRUCT_0,WAYBEL_0,YELLOW_1,WAYBEL_4,PRALG_1,ORDERS_2,DICKSON,POLYNOM2,CKB6,CKB10,CKB15,CKB19,CKB30,CKB31,CKB32,CKB37;
definitions TARSKI,RELAT_2,WELLFND1,FINSEQ_2,CKB6,CKB10,CKB15,CKB19,CKB32,CKB37;
theorems WELLORD1,TARSKI,RELAT_2,RELSET_1,ZFMISC_1,ORDERS_2,NAT_1,FUNCT_1,AXIOMS,CARD_3,PBOOLE,YELLOW_1,PRALG_1,FUNCOP_1,PARTIT_2,WELLFND1,RELAT_1,DICKSON,FINSEQ_1,INTEGRA5,RVSUM_1,FINSEQ_2,CARD_1,WAYBEL_0,WAYBEL_4,ORDINAL1,FUNCT_2,CARD_2,MCART_1,FINSUB_1,ORDERS_1,FUNCT_7,WELLORD2,FINSEQ_3,FINSEQ_5,FINSEQOP,RFINSEQ,XBOOLE_0,XBOOLE_1,PARTFUN1,XREAL_1,XXREAL_0,VALUED_0,VALUED_1,XXREAL_2,XREAL_0,NAT_D,CLASSES1,PRE_POLY,CKB1,CKB2,CKB4,CKB5,CKB6,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB32,CKB33,CKB36,CKB37;
schemes NAT_1,RELSET_1,FINSET_1,RECDEF_1,FUNCT_2,ORDINAL1,CLASSES1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FINSET_1,FINSUB_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,CARD_1,MEMBERED,FINSEQ_1,CARD_5,STRUCT_0,ORDERS_2,WAYBEL_0,YELLOW_1,DICKSON,VALUED_0,XXREAL_2,RELSET_1,PRE_POLY,CKB3,CKB7,CKB8,CKB11,CKB34,CKB35;
constructors DOMAIN_1,FINSEQOP,NAT_D,WSIERP_1,PRALG_1,TRIANG_1,WAYBEL_4,WELLFND1,POLYNOM2,DICKSON,SEQ_1,RECDEF_1,BINOP_2,SEQ_4,CLASSES1,RELSET_1,FUNCT_7,REAL_1,CKB6,CKB10,CKB15,CKB19,CKB32,CKB37;
requirements SUBSET,NUMERALS,REAL,BOOLE,ARITHM;
begin
theorem
Th25: (for n being Ordinal holds ( InvLexOrder n ) is  admissible)
proof
let n being Ordinal;
set ILO = ( InvLexOrder n );
now
let x being set;
let y being set;
assume that
A1: x in ( Bags n )
and
A2: y in ( Bags n );
reconsider p = x,q = y as (bag of n) by A1,A2;
now
assume A3: (not [ p,q ] in ILO);
then A4: p <> q by CKB37:def 1;
set s = ( SgmX (( RelIncl n ),( ( support p ) \/ ( support q ) )) );
A5: ( dom p ) = n by PARTFUN1:def 2;
A6: ( dom q ) = n by PARTFUN1:def 2;
A7: ( field ( RelIncl n ) ) = n by WELLORD2:def 1;
( RelIncl n ) is  well-ordering by WELLORD2:6;
then ( RelIncl n ) is  being_linear-order by ORDERS_1:19;
then A8: ( RelIncl n ) linearly_orders ( ( support p ) \/ ( support q ) ) by A7,ORDERS_1:37,ORDERS_1:38;
then A9: ( rng s ) = ( ( support p ) \/ ( support q ) ) by PRE_POLY:def 2;
defpred P[ Nat ]
 means
($1 in ( dom s ) & ( q . ( s . $1 ) ) <> ( p . ( s . $1 ) ));
A10: (for k being Nat holds (P[ k ] implies k <= ( len s ))) by FINSEQ_3:25;
A11: (ex k being Nat st P[ k ])
proof
assume A12: (not thesis);
now
let x being set;
assume x in n;
per cases ;
suppose ( p . x ) <> ( 0 );

then x in ( support p ) by PRE_POLY:def 7;
then x in ( ( support p ) \/ ( support q ) ) by XBOOLE_0:def 3;
then (ex k being Nat st (k in ( dom s ) & ( s . k ) = x)) by A9,FINSEQ_2:10;
hence ( p . x ) = ( q . x ) by A12;
end;
suppose ( q . x ) <> ( 0 );

then x in ( support q ) by PRE_POLY:def 7;
then x in ( ( support p ) \/ ( support q ) ) by XBOOLE_0:def 3;
then (ex k being Nat st (k in ( dom s ) & ( s . k ) = x)) by A9,FINSEQ_2:10;
hence ( p . x ) = ( q . x ) by A12;
end;
suppose (( p . x ) = ( 0 ) & ( q . x ) = ( 0 ));

hence ( p . x ) = ( q . x );
end;
end;
hence contradiction by A4,A5,A6,FUNCT_1:2;
end;
consider j being Nat such that A13: P[ j ] and A14: (for k being Nat holds (P[ k ] implies k <= j)) from NAT_1:sch 6(A10,A11);
A15: ( s . j ) in ( rng s ) by A13,FUNCT_1:3;
then reconsider J = ( s . j ) as Ordinal by A9;
now
take J;
thus J in n by A9,A15;
A16:now
let k being Ordinal;
assume that
A17: J in k
and
A18: k in n
and
A19: ( q . k ) <> ( p . k );
now
assume that
A20: (not k in ( support p ))
and
A21: (not k in ( support q ));
( p . k ) = ( 0 ) by A20,PRE_POLY:def 7;
hence contradiction by A19,A21,PRE_POLY:def 7;
end;
then k in ( ( support p ) \/ ( support q ) ) by XBOOLE_0:def 3;
then consider m being Nat such that A22: m in ( dom s ) and A23: ( s . m ) = k by A9,FINSEQ_2:10;
A24: m <= j by A14,A19,A22,A23;
m <> j by A17,A23;
then m < j by A24,XXREAL_0:1;
then [ ( s /. m ),( s /. j ) ] in ( RelIncl n ) by A8,A13,A22,PRE_POLY:def 2;
then [ ( s . m ),( s /. j ) ] in ( RelIncl n ) by A22,PARTFUN1:def 6;
then [ ( s . m ),( s . j ) ] in ( RelIncl n ) by A13,PARTFUN1:def 6;
then ( s . m ) c= ( s . j ) by A9,A15,A18,A23,WELLORD2:def 1;
hence contradiction by A17,A23,ORDINAL1:5;
end;
then ( q . J ) <= ( p . J ) by A3,A9,A15,CKB37:def 1;
hence ( q . J ) < ( p . J ) by A13,XXREAL_0:1;
thus (for k being Ordinal holds ((J in k & k in n) implies ( q . k ) = ( p . k ))) by A16;
end;
hence [ q,p ] in ILO by CKB37:def 1;
end;
hence ([ x,y ] in ILO or [ y,x ] in ILO);
end;
hence ILO is_strongly_connected_in ( Bags n ) by RELAT_2:def 7;
now
let a being (bag of n);
per cases ;
suppose ( EmptyBag n ) = a;

hence [ ( EmptyBag n ),a ] in ILO by CKB37:def 1;
end;
suppose A25: ( EmptyBag n ) <> a;

set s = ( SgmX (( RelIncl n ),( support a )) );
A26: ( field ( RelIncl n ) ) = n by WELLORD2:def 1;
( RelIncl n ) is  well-ordering by WELLORD2:6;
then ( RelIncl n ) is  being_linear-order by ORDERS_1:19;
then A27: ( RelIncl n ) linearly_orders ( support a ) by A26,ORDERS_1:37,ORDERS_1:38;
then A28: ( rng s ) = ( support a ) by PRE_POLY:def 2;
then ( rng s ) <> ( {} ) by A25,CKB27:1;
then A29: ( len s ) in ( dom s ) by FINSEQ_5:6,RELAT_1:38;
then A30: ( s . ( len s ) ) in ( rng s ) by FUNCT_1:3;
then reconsider j = ( s . ( len s ) ) as Ordinal by A28;
now
take j;
thus j in n by A28,A30;
A31: ( a . j ) <> ( 0 ) by A28,A30,PRE_POLY:def 7;
( ( EmptyBag n ) . j ) = ( 0 ) by PRE_POLY:52;
hence ( ( EmptyBag n ) . j ) < ( a . j ) by A31;
let k being Ordinal;
assume that
A32: j in k
and
A33: k in n;
A34: j c= k by A32,ORDINAL1:def 2;
now
assume ( ( EmptyBag n ) . k ) <> ( a . k );
then ( a . k ) <> ( 0 ) by PRE_POLY:52;
then k in ( support a ) by PRE_POLY:def 7;
then consider i being Nat such that A35: i in ( dom s ) and A36: ( s . i ) = k by A28,FINSEQ_2:10;
A37: i <= ( len s ) by A35,FINSEQ_3:25;
per cases  by A37,XXREAL_0:1;
suppose i = ( len s );

hence contradiction by A32,A36;
end;
suppose i < ( len s );

then [ ( s /. i ),( s /. ( len s ) ) ] in ( RelIncl n ) by A27,A29,A35,PRE_POLY:def 2;
then [ ( s . i ),( s /. ( len s ) ) ] in ( RelIncl n ) by A35,PARTFUN1:def 6;
then [ ( s . i ),( s . ( len s ) ) ] in ( RelIncl n ) by A29,PARTFUN1:def 6;
then k c= j by A28,A30,A33,A36,WELLORD2:def 1;
then j = k by A34,XBOOLE_0:def 10;
hence contradiction by A32;
end;
end;
hence ( ( EmptyBag n ) . k ) = ( a . k );
end;
hence [ ( EmptyBag n ),a ] in ILO by CKB37:def 1;
end;
end;
hence (for a being (bag of n) holds [ ( EmptyBag n ),a ] in ILO);
now
let a being (bag of n);
let b being (bag of n);
let c being (bag of n);
assume that
A38: [ a,b ] in ILO;
per cases ;
suppose A39: a = b;

( a + c ) in ( Bags n ) by PRE_POLY:def 12;
hence [ ( a + c ),( b + c ) ] in ILO by A39,ORDERS_1:3;
end;
suppose a <> b;

then consider i being Ordinal such that A40: i in n and A41: ( a . i ) < ( b . i ) and A42: (for k being Ordinal holds ((i in k & k in n) implies ( a . k ) = ( b . k ))) by A38,CKB37:def 1;
now
take i;
thus i in n by A40;
A43: ( ( a + c ) . i ) = ( ( a . i ) + ( c . i ) ) by PRE_POLY:def 5;
( ( b + c ) . i ) = ( ( b . i ) + ( c . i ) ) by PRE_POLY:def 5;
hence ( ( a + c ) . i ) < ( ( b + c ) . i ) by A41,A43,XREAL_1:6;
let k being Ordinal;
assume that
A44: i in k
and
A45: k in n;
A46: ( ( a + c ) . k ) = ( ( a . k ) + ( c . k ) ) by PRE_POLY:def 5;
( ( b + c ) . k ) = ( ( b . k ) + ( c . k ) ) by PRE_POLY:def 5;
hence ( ( a + c ) . k ) = ( ( b + c ) . k ) by A42,A44,A45,A46;
end;
hence [ ( a + c ),( b + c ) ] in ILO by CKB37:def 1;
end;
end;
hence thesis;
end;
