environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,FINSEQ_1,ARYTM_1,ARYTM_3,XXREAL_0,CARD_1,NAT_1,PRE_POLY,FUNCT_1,RELAT_1,TARSKI,CLASSES1,FUNCT_2,CARD_3,FINSEQ_2,PBOOLE,GRAPH_2,VALUED_0,FINSUB_1,FINSET_1,RELAT_2,ORDERS_2,WAYBEL_4,STRUCT_0,WELLFND1,WELLORD1,ORDERS_1,ORDINAL1,WELLORD2,ORDINAL4,REAL_1,FUNCOP_1,FUNCT_4,PARTFUN1,DICKSON,RLVECT_2,ZFMISC_1,MCART_1,BAGORDER;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,RELAT_1,PBOOLE,RELAT_2,RELSET_1,PARTFUN1,FINSET_1,FINSUB_1,ORDINAL1,FUNCT_7,MCART_1,WELLORD1,ORDERS_1,WELLFND1,CARD_1,NUMBERS,VALUED_0,XXREAL_0,REAL_1,FUNCT_1,SEQ_1,PRE_POLY,CARD_3,NAT_D,FINSEQ_1,RVSUM_1,WSIERP_1,FUNCOP_1,FUNCT_2,SEQ_4,DOMAIN_1,FINSEQOP,CLASSES1,RECDEF_1,NAT_1,STRUCT_0,WAYBEL_0,YELLOW_1,WAYBEL_4,PRALG_1,ORDERS_2,DICKSON,POLYNOM2;
definitions TARSKI,RELAT_2,WELLFND1,FINSEQ_2;
theorems WELLORD1,TARSKI,RELAT_2,RELSET_1,ZFMISC_1,ORDERS_2,NAT_1,FUNCT_1,AXIOMS,CARD_3,PBOOLE,YELLOW_1,PRALG_1,FUNCOP_1,PARTIT_2,WELLFND1,RELAT_1,DICKSON,FINSEQ_1,INTEGRA5,RVSUM_1,FINSEQ_2,CARD_1,WAYBEL_0,WAYBEL_4,ORDINAL1,FUNCT_2,CARD_2,MCART_1,FINSUB_1,ORDERS_1,FUNCT_7,WELLORD2,FINSEQ_3,FINSEQ_5,FINSEQOP,RFINSEQ,XBOOLE_0,XBOOLE_1,PARTFUN1,XREAL_1,XXREAL_0,VALUED_0,VALUED_1,XXREAL_2,XREAL_0,NAT_D,CLASSES1,PRE_POLY,CKB1;
schemes NAT_1,RELSET_1,FINSET_1,RECDEF_1,FUNCT_2,ORDINAL1,CLASSES1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FINSET_1,FINSUB_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,CARD_1,MEMBERED,FINSEQ_1,CARD_5,STRUCT_0,ORDERS_2,WAYBEL_0,YELLOW_1,DICKSON,VALUED_0,XXREAL_2,RELSET_1,PRE_POLY;
constructors DOMAIN_1,FINSEQOP,NAT_D,WSIERP_1,PRALG_1,TRIANG_1,WAYBEL_4,WELLFND1,POLYNOM2,DICKSON,SEQ_1,RECDEF_1,BINOP_2,SEQ_4,CLASSES1,RELSET_1,FUNCT_7,REAL_1;
requirements SUBSET,NUMERALS,REAL,BOOLE,ARITHM;
begin
theorem
(for n,k being (Element of ( NAT )) holds (k in ( Seg n ) iff (( k - 1 ) is (Element of ( NAT )) & ( k - 1 ) < n)))
proof
let n being (Element of ( NAT ));
let k being (Element of ( NAT ));
A1: ( Seg n ) = { x where x is (Element of ( NAT )): (1 <= x & x <= n) } by FINSEQ_1:def 1;
hereby
assume k in ( Seg n );
then consider x being (Element of ( NAT )) such that A2: k = x and A3: 1 <= x and A4: x <= n by A1;
set x1 = ( k - 1 );
set n1 = ( n - 1 );
( 0 ) < x by A3;
then reconsider x1 as (Element of ( NAT )) by A2,NAT_1:20;
x1 = ( k - 1 );
hence ( k - 1 ) is (Element of ( NAT ));
( 0 ) < n by A3,A4;
then reconsider n1 as (Element of ( NAT )) by NAT_1:20;
( k + ( - 1 ) ) <= ( n + ( - 1 ) ) by A2,A4,XREAL_1:6;
then x1 <= n1;
then ( k - 1 ) < ( n1 + 1 ) by NAT_1:13;
hence ( k - 1 ) < n;
end;
assume that
A5: ( k - 1 ) is (Element of ( NAT ))
and
A6: ( k - 1 ) < n;
reconsider k1 = ( k - 1 ) as (Element of ( NAT )) by A5;
( 0 ) <= k1;
then A7: ( (( 0 ) qua Nat) + 1 ) <= ( ( k - 1 ) + 1 ) by XREAL_1:6;
( ( k - 1 ) + 1 ) <= ( ( n - 1 ) + 1 ) by A5,A6,NAT_1:13;
hence thesis by A1,A7;
end;
