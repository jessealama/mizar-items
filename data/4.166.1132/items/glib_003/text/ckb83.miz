environ
vocabularies NUMBERS,FINSEQ_1,SUBSET_1,RELAT_1,FUNCT_1,XXREAL_0,TARSKI,ORDINAL4,ARYTM_3,CARD_1,CARD_3,REAL_1,XBOOLE_0,NAT_1,ARYTM_1,GLIB_000,PBOOLE,PARTFUN1,FINSET_1,ZFMISC_1,RELAT_2,GLIB_002,VALUED_0,GRAPH_5,XREAL_0,ORDINAL1,FUNCOP_1,TREES_1,GLIB_001,FUNCT_4,FINSEQ_5,GLIB_003;
notations TARSKI,XBOOLE_0,CARD_1,NUMBERS,SUBSET_1,XCMPLX_0,XXREAL_0,XREAL_0,DOMAIN_1,REAL_1,RELAT_1,PARTFUN1,FUNCT_1,PBOOLE,RELSET_1,FUNCT_2,VALUED_0,SEQ_1,GRAPH_5,RVSUM_1,FINSEQ_5,ORDINAL1,FINSEQ_1,FINSET_1,NAT_1,FUNCOP_1,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,RECDEF_1,CKB1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB66,CKB67,CKB68,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82;
definitions GLIB_000,FUNCOP_1,RVSUM_1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB18,CKB19,CKB20,CKB66,CKB67,CKB68;
theorems CARD_1,CARD_2,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_5,FINSET_1,FUNCT_1,FUNCT_2,FUNCT_4,GLIB_000,GLIB_001,GLIB_002,GRAPH_2,GRAPH_5,INT_1,NAT_1,POLYNOM3,RELAT_1,RELSET_1,RVSUM_1,TARSKI,XBOOLE_0,XBOOLE_1,XREAL_0,ZFMISC_1,XREAL_1,XXREAL_0,ENUMSET1,ORDERS_1,ORDINAL1,FINSOP_1,VALUED_0,PARTFUN1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB18,CKB19,CKB20,CKB21,CKB22,CKB26,CKB66,CKB67,CKB68;
schemes NAT_1,FINSEQ_1,FUNCT_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,NUMBERS,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,GLIB_000,GRAPH_2,GLIB_002,INT_1,VALUED_0,CARD_1,FUNCT_2,PARTFUN1,RELSET_1,PRE_POLY,CKB10,CKB23,CKB24,CKB25,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75;
constructors DOMAIN_1,XXREAL_0,BINOP_2,FINSOP_1,RVSUM_1,FINSEQ_5,GRAPH_5,GLIB_001,GLIB_002,SEQ_1,RECDEF_1,RELSET_1,CKB1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB18,CKB19,CKB20,CKB66,CKB67,CKB68;
requirements ARITHM,BOOLE,NUMERALS,REAL,SUBSET;
begin
registration
let G being _Graph;
let V being set;
let E being set;
cluster  [Weighted]  [ELabeled]  [VLabeled] for (inducedSubgraph of G,V,E);
existence
proof
now
per cases ;
suppose A1: (V is non  empty non  empty (Subset of ( the_Vertices_of G )) & E c= ( G .edgesBetween V ));

set X = the (inducedSubgraph of G,V,E);
set W = the (ManySortedSet of ( the_Edges_of X ));
set G2 = ( X .set (( WeightSelector ),W) );
set EL = the (PartFunc of ( the_Edges_of G2 ),( REAL ));
set G3 = ( G2 .set (( ELabelSelector ),EL) );
set VL = the (PartFunc of ( the_Vertices_of G3 ),( REAL ));
set G4 = ( G3 .set (( VLabelSelector ),VL) );
(X == G2 & G2 == G3) by CKB26:1;
then A2: X == G3 by GLIB_000:85;
G3 == G4 by CKB26:1;
then A3: X == G4 by A2,GLIB_000:85;
then G4 is (Subgraph of X) by GLIB_000:87;
then reconsider G4 as (Subgraph of G) by GLIB_000:43;
( the_Edges_of X ) = E by A1,GLIB_000:def 37;
then A4: ( the_Edges_of G4 ) = E by A3,GLIB_000:def 34;
( the_Vertices_of X ) = V by A1,GLIB_000:def 37;
then ( the_Vertices_of G4 ) = V by A3,GLIB_000:def 34;
then G4 is (inducedSubgraph of G,V,E) by A1,A4,GLIB_000:def 37;
hence thesis;
end;
suppose A5: (not (V is non  empty non  empty (Subset of ( the_Vertices_of G )) & E c= ( G .edgesBetween V )));

set W = the (ManySortedSet of ( the_Edges_of G ));
set G2 = ( G .set (( WeightSelector ),W) );
set EL = the (PartFunc of ( the_Edges_of G2 ),( REAL ));
set G3 = ( G2 .set (( ELabelSelector ),EL) );
set VL = the (PartFunc of ( the_Vertices_of G3 ),( REAL ));
set G4 = ( G3 .set (( VLabelSelector ),VL) );
(G == G2 & G2 == G3) by CKB26:1;
then A6: G == G3 by GLIB_000:85;
G3 == G4 by CKB26:1;
then A7: G == G4 by A6,GLIB_000:85;
then reconsider G4 as (Subgraph of G) by GLIB_000:87;
G4 is (inducedSubgraph of G,V,E) by A5,A7,GLIB_000:def 37;
hence thesis;
end;
end;
hence thesis;
end;
end;
