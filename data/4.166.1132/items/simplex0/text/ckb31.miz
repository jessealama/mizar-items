environ
vocabularies ARYTM_1,XBOOLE_0,CARD_1,CLASSES1,COHSP_1,FINSET_1,FUNCT_1,GROUP_4,INT_1,MATROID0,ORDERS_1,PARTFUN1,PRE_TOPC,RELAT_1,RELAT_2,NUMBERS,SETFAM_1,SGRAPH1,SUBSET_1,TARSKI,TRIANG_1,WELLORD1,ZFMISC_1,SIMPLEX0,XXREAL_0,NAT_1,ORDINAL1,FUNCOP_1,ARYTM_3,RCOMP_1,STRUCT_0,GLIB_000,XREAL_0;
notations TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,RELAT_1,RELAT_2,FUNCT_1,FUNCT_2,NUMBERS,WELLORD1,ORDINAL1,ORDERS_1,FINSET_1,CARD_1,XREAL_0,XXREAL_0,XXREAL_3,NAT_1,INT_1,SETFAM_1,DOMAIN_1,STRUCT_0,PRE_TOPC,TOPS_2,PENCIL_1,CLASSES1,MATROID0,RELSET_1,COHSP_1,FUNCOP_1,CKB1,CKB18,CKB20;
definitions CLASSES1,COHSP_1,FUNCOP_1,MATROID0,ORDINAL1,SETFAM_1,STRUCT_0,SUBSET_1,TARSKI,TOPS_2,VECTSP_1,XBOOLE_0,XXREAL_3,CKB18;
theorems CARD_1,CARD_2,CARD_3,CLASSES1,COHSP_1,COMBGRAS,COMPL_SP,FINSET_1,FUNCT_1,FUNCT_2,FUNCOP_1,INT_1,MATROID0,NAT_1,NUMBERS,ORDERS_1,ORDINAL1,PENCIL_1,PRE_TOPC,RELAT_1,RELAT_2,SETFAM_1,STIRL2_1,SUBSET_1,WELLORD1,WELLORD2,TARSKI,TOPS_2,XREAL_0,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,XXREAL_3,ZFMISC_1,CKB14,CKB17,CKB18,CKB19,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30;
schemes CLASSES1,FRAENKEL,FUNCT_2,NAT_1;
registrations BORSUK_3,CARD_1,COHSP_1,FIB_NUM2,FINSET_1,FUNCT_1,INT_1,MATROID0,NAT_1,ORDINAL1,PENCIL_1,REALSET1,RELAT_1,SETFAM_1,SUBSET_1,STRUCT_0,XBOOLE_0,XREAL_0,XXREAL_0,XXREAL_3,FUNCOP_1,DILWORTH,RELSET_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB16,CKB21,CKB22,CKB23,CKB24;
constructors SETFAM_1,XXREAL_3,REAL_1,TOPS_2,BORSUK_1,WELLORD1,BINOP_2,CLASSES1,COH_SP,LEXBFS,MATROID0,COHSP_1,FUNCOP_1,CKB18,CKB20;
requirements REAL,SUBSET,NUMERALS,ARITHM,BOOLE;
begin
reserve x for set;
reserve X for set;
reserve Y for set;
reserve n for Nat;
definition
let Y;
let X;
let n being set;
func the_subsets_with_limited_card (n,X,Y) -> (Subset-Family of Y) means 
:Def2: (for A being (Subset of Y) holds (A in it iff (A in X & ( card A ) c= ( card n ))));
existence
proof
set SS = { A where A is (Subset of Y): (A in X & ( card A ) c= ( card n )) };
SS c= ( bool Y )
proof
let x;
assume x in SS;
then (ex A being (Subset of Y) st ((x = A & A in X) & ( card A ) c= ( card n )));
hence thesis;
end;
then reconsider SS as (Subset-Family of Y);
take SS;
let A being (Subset of Y);
hereby
assume A in SS;
then (ex B being (Subset of Y) st ((B = A & B in X) & ( card B ) c= ( card n )));
hence (A in X & ( card A ) c= ( card n ));
end;
assume (A in X & ( card A ) c= ( card n ));
hence thesis;
end;
uniqueness
proof
let S1 being (Subset-Family of Y);
let S2 being (Subset-Family of Y);
assume that
A1: (for A being (Subset of Y) holds (A in S1 iff (A in X & ( card A ) c= ( card n ))))
and
A2: (for A being (Subset of Y) holds (A in S2 iff (A in X & ( card A ) c= ( card n ))));
thus S1 c= S2
proof
let x;
assume A3: x in S1;
then (x in X & ( card x ) c= ( card n )) by A1;
hence thesis by A2,A3;
end;

let x;
assume A4: x in S2;
then (x in X & ( card x ) c= ( card n )) by A2;
hence thesis by A1,A4;
end;
end;
