environ
vocabularies ARYTM_1,XBOOLE_0,CARD_1,CLASSES1,COHSP_1,FINSET_1,FUNCT_1,GROUP_4,INT_1,MATROID0,ORDERS_1,PARTFUN1,PRE_TOPC,RELAT_1,RELAT_2,NUMBERS,SETFAM_1,SGRAPH1,SUBSET_1,TARSKI,TRIANG_1,WELLORD1,ZFMISC_1,SIMPLEX0,XXREAL_0,NAT_1,ORDINAL1,FUNCOP_1,ARYTM_3,RCOMP_1,STRUCT_0,GLIB_000,XREAL_0;
notations TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,RELAT_1,RELAT_2,FUNCT_1,FUNCT_2,NUMBERS,WELLORD1,ORDINAL1,ORDERS_1,FINSET_1,CARD_1,XREAL_0,XXREAL_0,XXREAL_3,NAT_1,INT_1,SETFAM_1,DOMAIN_1,STRUCT_0,PRE_TOPC,TOPS_2,PENCIL_1,CLASSES1,MATROID0,RELSET_1,COHSP_1,FUNCOP_1,CKB1,CKB18,CKB20,CKB31,CKB37,CKB43,CKB44,CKB45,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB84,CKB90,CKB91,CKB95,CKB103,CKB115,CKB121,CKB122,CKB128,CKB134,CKB141,CKB146,CKB148;
definitions CLASSES1,COHSP_1,FUNCOP_1,MATROID0,ORDINAL1,SETFAM_1,STRUCT_0,SUBSET_1,TARSKI,TOPS_2,VECTSP_1,XBOOLE_0,XXREAL_3,CKB18,CKB31,CKB48,CKB49,CKB51,CKB52,CKB53,CKB54,CKB57,CKB58,CKB84,CKB95,CKB103,CKB115,CKB121,CKB122,CKB128,CKB141,CKB146,CKB148;
theorems CARD_1,CARD_2,CARD_3,CLASSES1,COHSP_1,COMBGRAS,COMPL_SP,FINSET_1,FUNCT_1,FUNCT_2,FUNCOP_1,INT_1,MATROID0,NAT_1,NUMBERS,ORDERS_1,ORDINAL1,PENCIL_1,PRE_TOPC,RELAT_1,RELAT_2,SETFAM_1,STIRL2_1,SUBSET_1,WELLORD1,WELLORD2,TARSKI,TOPS_2,XREAL_0,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,XXREAL_3,ZFMISC_1,CKB14,CKB17,CKB18,CKB19,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB38,CKB39,CKB40,CKB41,CKB42,CKB47,CKB48,CKB49,CKB51,CKB52,CKB53,CKB54,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB89,CKB95,CKB98,CKB99,CKB100,CKB101,CKB102,CKB103,CKB109,CKB110,CKB111,CKB112,CKB113,CKB114,CKB115,CKB116,CKB118,CKB119,CKB120,CKB121,CKB122,CKB123,CKB124,CKB125,CKB126,CKB128,CKB133,CKB135,CKB136,CKB137,CKB138,CKB139,CKB140,CKB141,CKB143,CKB144,CKB145,CKB146,CKB147,CKB148,CKB151,CKB152,CKB155,CKB156,CKB157,CKB158,CKB159,CKB160,CKB161,CKB162;
schemes CLASSES1,FRAENKEL,FUNCT_2,NAT_1;
registrations BORSUK_3,CARD_1,COHSP_1,FIB_NUM2,FINSET_1,FUNCT_1,INT_1,MATROID0,NAT_1,ORDINAL1,PENCIL_1,REALSET1,RELAT_1,SETFAM_1,SUBSET_1,STRUCT_0,XBOOLE_0,XREAL_0,XXREAL_0,XXREAL_3,FUNCOP_1,DILWORTH,RELSET_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB16,CKB21,CKB22,CKB23,CKB24,CKB32,CKB33,CKB34,CKB35,CKB36,CKB46,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB85,CKB86,CKB87,CKB88,CKB92,CKB93,CKB94,CKB96,CKB97,CKB104,CKB105,CKB106,CKB107,CKB108,CKB117,CKB127,CKB129,CKB130,CKB131,CKB132,CKB142,CKB149,CKB150,CKB153,CKB154;
constructors SETFAM_1,XXREAL_3,REAL_1,TOPS_2,BORSUK_1,WELLORD1,BINOP_2,CLASSES1,COH_SP,LEXBFS,MATROID0,COHSP_1,FUNCOP_1,CKB18,CKB20,CKB31,CKB48,CKB49,CKB51,CKB52,CKB53,CKB54,CKB57,CKB58,CKB84,CKB95,CKB103,CKB115,CKB121,CKB128,CKB134,CKB141,CKB146,CKB148;
requirements REAL,SUBSET,NUMERALS,ARITHM,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve X for set;
reserve n for Nat;
reserve k for Nat;
reserve KX for (SimplicialComplexStr of X);
reserve SX for (SubSimplicialComplex of KX);
reserve P for Function;
definition
let X;
let KX;
let P;
let n;
func subdivision (n,P,KX) -> (SimplicialComplexStr of X) means 
:Def21: (ex F being Function st (((( F . ( 0 ) ) = KX & ( F . n ) = it) & ( dom F ) = ( NAT )) & (for k holds (for KX1 being (SimplicialComplexStr of X) holds (KX1 = ( F . k ) implies ( F . ( k + 1 ) ) = ( subdivision (P,KX1) ))))));
existence
proof
defpred F[ set,set ]
 means
(for SX being (SimplicialComplexStr of X) holds (((the topology of SX) = $1 & ( [#] SX ) = ( [#] KX )) implies (the topology of ( subdivision (P,SX) )) = $2));
set BBK = ( bool ( bool ( [#] KX ) ) );
A1: (for x holds (x in BBK implies (ex y st (y in BBK & F[ x,y ]))))
proof
let x;
assume A2: x in BBK;
per cases ;
suppose (ex SX being (SimplicialComplexStr of X) st ((the topology of SX) = x & ( [#] SX ) = ( [#] KX )));

then consider SX being (SimplicialComplexStr of X) such that A3: (the topology of SX) = x and A4: ( [#] SX ) = ( [#] KX );
take T = (the topology of ( subdivision (P,SX) ));
( [#] ( subdivision (P,SX) ) ) = ( [#] SX ) by CKB148:def 1;
hence T in BBK by A4;
let SX1 being (SimplicialComplexStr of X);
assume that
A5: ((the topology of SX1) = x & ( [#] SX1 ) = ( [#] KX ));
( the TopStruct of SX ) = ( the TopStruct of SX1 ) by A3,A4,A5;
hence thesis by CKB162:1;
end;
suppose A6: (for SX being (SimplicialComplexStr of X) holds ((the topology of SX) <> x or ( [#] SX ) <> ( [#] KX )));

take x;
thus thesis by A2,A6;
end;
end;
consider f being (Function of BBK,BBK) such that A7: (for x holds (x in BBK implies F[ x,( f . x ) ])) from FUNCT_2:sch 1(A1);
deffunc G(set,set) = ( f . $2 );
consider g being Function such that A8: ((( dom g ) = ( NAT ) & ( g . ( 0 ) ) = (the topology of KX)) & (for n being Nat holds ( g . ( n + 1 ) ) = G(n,( g . n )))) from NAT_1:sch 11;
defpred P[ Nat ]
 means
((ex SX being (SimplicialComplexStr of X) st (((the topology of SX) = ( g . $1 ) & ( [#] SX ) = ( [#] KX )) & ($1 > ( 0 ) implies SX is  strict))) & (for SX being (SimplicialComplexStr of X) holds (((the topology of SX) = ( g . $1 ) & ( [#] SX ) = ( [#] KX )) implies ( g . ( $1 + 1 ) ) = (the topology of ( subdivision (P,SX) )))));
( g . ( ( 0 ) + 1 ) ) = ( f . (the topology of KX) ) by A8;
then A9: ( g . 1 ) = (the topology of ( subdivision (P,KX) )) by A7;
A10: P[ (( 0 ) qua Nat) ]
proof
thus (ex SX being (SimplicialComplexStr of X) st (((the topology of SX) = ( g . ( 0 ) ) & ( [#] SX ) = ( [#] KX )) & (( 0 ) > ( 0 ) implies SX is  strict))) by A8;
let SX being (SimplicialComplexStr of X);
assume ((the topology of SX) = ( g . ( 0 ) ) & ( [#] SX ) = ( [#] KX ));
then ( the TopStruct of SX ) = ( the TopStruct of KX ) by A8;
hence thesis by A9,CKB162:1;
end;
defpred H[ set,set ]
 means
(for k being Nat holds (k = $1 implies ((k = ( 0 ) implies $2 = KX) & (k > ( 0 ) implies (for SF being (Subset-Family of KX) holds (SF = ( g . k ) implies $2 = TopStruct (# (the carrier of KX),SF #)))))));
A11: (for k being Nat holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being Nat;
set k1 = ( k + 1 );
given SX being (SimplicialComplexStr of X) such that
A12: (the topology of SX) = ( g . k )
and
A13: ( [#] SX ) = ( [#] KX )
and
(k > ( 0 ) implies SX is  strict);

assume (for SX being (SimplicialComplexStr of X) holds (((the topology of SX) = ( g . k ) & ( [#] SX ) = ( [#] KX )) implies ( g . k1 ) = (the topology of ( subdivision (P,SX) ))));
then A14: ( g . k1 ) = (the topology of ( subdivision (P,SX) )) by A12,A13;
( [#] ( subdivision (P,SX) ) ) = ( [#] KX ) by A13,CKB148:def 1;
hence (ex SX being (SimplicialComplexStr of X) st (((the topology of SX) = ( g . k1 ) & ( [#] SX ) = ( [#] KX )) & (k1 > ( 0 ) implies SX is  strict))) by A14;
let S1 being (SimplicialComplexStr of X);
assume A15: ((the topology of S1) = ( g . k1 ) & ( [#] S1 ) = ( [#] KX ));
( g . ( k1 + 1 ) ) = ( f . ( g . k1 ) ) by A8;
hence thesis by A7,A15;
end;
A16: (for k being Nat holds P[ k ]) from NAT_1:sch 2(A10,A11);
A17: (for x holds (x in ( NAT ) implies (ex y st H[ x,y ])))
proof
let x;
assume x in ( NAT );
then reconsider m = x as Nat;
per cases ;
suppose A18: m = ( 0 );

take KX;
thus thesis by A18;
end;
suppose A19: m > ( 0 );

consider K1 being (SimplicialComplexStr of X) such that A20: (the topology of K1) = ( g . m ) and A21: ( [#] K1 ) = ( [#] KX ) and (m > ( 0 ) implies K1 is  strict) by A16;
reconsider TOP = (the topology of K1) as (Subset-Family of KX) by A21;
take TopStruct (# (the carrier of KX),TOP #);
thus thesis by A19,A20;
end;
end;
consider h being Function such that A22: (( dom h ) = ( NAT ) & (for x holds (x in ( NAT ) implies H[ x,( h . x ) ]))) from CLASSES1:sch 1(A17);
A23: ( 0 ) in ( NAT ) by ORDINAL1:def 12;
then A24: ( h . ( 0 ) ) = KX by A22;
A25: (for k being Nat holds (for K1 being (SimplicialComplexStr of X) holds (( h . k ) = K1 implies ( h . ( k + 1 ) ) = ( subdivision (P,K1) ))))
proof
let k being Nat;
let KK being (SimplicialComplexStr of X);
assume that
A26: ( h . k ) = KK;
P[ ( k + 1 ) ] by A16;
then consider K1 being (SimplicialComplexStr of X) such that A27: (the topology of K1) = ( g . ( k + 1 ) ) and A28: ( [#] K1 ) = ( [#] KX );
reconsider TOP1 = (the topology of K1) as (Subset-Family of KX) by A28;
A29: k in ( NAT ) by ORDINAL1:def 12;
P[ k ] by A16;
then consider K2 being (SimplicialComplexStr of X) such that A30: (the topology of K2) = ( g . k ) and A31: ( [#] K2 ) = ( [#] KX );
reconsider TOP2 = (the topology of K2) as (Subset-Family of KX) by A31;
A32: ( [#] ( subdivision (P,KK) ) ) = ( [#] KK ) by CKB148:def 1;
per cases ;
suppose A33: k = ( 0 );

then TOP1 = (the topology of ( subdivision (P,KK) )) by A8,A10,A24,A26,A27;
hence thesis by A22,A24,A26,A27,A32,A33;
end;
suppose k > ( 0 );

then A34: KK = TopStruct (# (the carrier of KX),TOP2 #) by A22,A26,A29,A30;
then ( [#] KK ) = ( [#] KX );
then ( g . ( k + 1 ) ) = (the topology of ( subdivision (P,KK) )) by A16,A30,A34;
hence thesis by A22,A32,A34;
end;
end;
per cases ;
suppose A35: n = ( 0 );

take KX;
thus thesis by A22,A24,A25,A35;
end;
suppose A36: n > ( 0 );

consider K1 being (SimplicialComplexStr of X) such that A37: (the topology of K1) = ( g . n ) and A38: ( [#] K1 ) = ( [#] KX ) and A39: (n > ( 0 ) implies K1 is  strict) by A16;
reconsider K1 as  strict (SimplicialComplexStr of X) by A36,A39;
take K1;
take h;
thus ( h . ( 0 ) ) = KX by A22,A23;
n in ( NAT ) by ORDINAL1:def 12;
hence thesis by A22,A25,A36,A37,A38;
end;
end;
uniqueness
proof
let P1 being (SimplicialComplexStr of X);
let P2 being (SimplicialComplexStr of X);
given F1 being Function such that
A40: ( F1 . ( 0 ) ) = KX
and
A41: ( F1 . n ) = P1
and
( dom F1 ) = ( NAT )
and
A42: (for k holds (for KX1 being (SimplicialComplexStr of X) holds (KX1 = ( F1 . k ) implies ( F1 . ( k + 1 ) ) = ( subdivision (P,KX1) ))));

given F2 being Function such that
A43: ( F2 . ( 0 ) ) = KX
and
A44: ( F2 . n ) = P2
and
( dom F2 ) = ( NAT )
and
A45: (for k holds (for KX1 being (SimplicialComplexStr of X) holds (KX1 = ( F2 . k ) implies ( F2 . ( k + 1 ) ) = ( subdivision (P,KX1) ))));

defpred P[ Nat ]
 means
(( F1 . $1 ) = ( F2 . $1 ) & (ex KX1 being (SimplicialComplexStr of X) st KX1 = ( F1 . $1 )));
A46: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume that
A47: P[ k ];
consider KX1 being (SimplicialComplexStr of X) such that A48: KX1 = ( F1 . k ) by A47;
( F1 . ( k + 1 ) ) = ( subdivision (P,KX1) ) by A42,A48;
hence thesis by A45,A47,A48;
end;
A49: P[ (( 0 ) qua Nat) ] by A40,A43;
(for k holds P[ k ]) from NAT_1:sch 2(A49,A46);
hence thesis by A41,A44;
end;
end;
