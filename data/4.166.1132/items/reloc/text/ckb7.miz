environ
vocabularies SUBSET_1,NUMBERS,AMI_1,AMI_3,AMISTD_2,ARYTM_3,GRAPHSP,CARD_1,RELAT_1,FUNCT_1,TARSKI,FUNCT_4,XBOOLE_0,FSM_1,CIRCUIT2,SCMNORM,ARYTM_1,INT_1,XXREAL_0,STRUCT_0,ORDINAL1,RELOC,FINSET_1,FINSEQ_1,NAT_1,AMISTD_5,PBOOLE,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,FINSET_1,NUMBERS,XCMPLX_0,INT_1,NAT_1,VALUED_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_4,PBOOLE,FINSEQ_1,NAT_D,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_3,XXREAL_0,AMISTD_2,AMISTD_5;
definitions FUNCOP_1,COMPOS_1,EXTPRO_1,RELAT_1,TARSKI,AMI_3,AMISTD_2,FUNCT_1,AMISTD_5,MEMSTR_0;
theorems AMI_3,GRFUNC_1,NAT_1,TARSKI,FUNCT_4,FUNCT_1,AMI_5,RELAT_1,XBOOLE_1,PARTFUN1,VALUED_1,RECDEF_2,FINSEQ_1,COMPOS_1,EXTPRO_1,ORDINAL1,AMISTD_2,AMISTD_5,STRUCT_0,MEMSTR_0,CKB6;
schemes NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,NUMBERS,XREAL_0,INT_1,CARD_3,AMI_3,RELAT_1,FUNCT_4,GRFUNC_1,FUNCT_2,AMI_6,VALUED_0,AMISTD_2,COMPOS_1,EXTPRO_1,NAT_1,FINSEQ_1,AMISTD_5,AMI_5,PBOOLE,MEMSTR_0,CKB1,CKB2,CKB3,CKB4,CKB5;
constructors DOMAIN_1,XXREAL_0,AMI_3,NAT_D,PRE_POLY,RECDEF_2,AMISTD_2,VALUED_1,AMI_2,AMISTD_1,AMISTD_5,PBOOLE,MEMSTR_0,RELSET_1;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Th2: (for k,loc being Nat holds (for a being Data-Location holds ( IncAddr (( a =0_goto loc ),k) ) = ( a =0_goto ( loc + k ) )))
proof
let k being Nat,loc being Nat;
let a being Data-Location;
A1: ( InsCode ( IncAddr (( a =0_goto loc ),k) ) ) = ( InsCode ( a =0_goto loc ) ) by COMPOS_1:def 17
.= 7 by RECDEF_2:def 1
.= ( InsCode ( a =0_goto ( loc + k ) ) ) by RECDEF_2:def 1;
A2: ( AddressPart ( IncAddr (( a =0_goto loc ),k) ) ) = ( AddressPart ( a =0_goto loc ) ) by COMPOS_1:def 17
.= <* a *> by RECDEF_2:def 3
.= ( AddressPart ( a =0_goto ( loc + k ) ) ) by RECDEF_2:def 3;
A3: ( JumpPart ( IncAddr (( a =0_goto loc ),k) ) ) = ( k + ( JumpPart ( a =0_goto loc ) ) ) by COMPOS_1:def 17;
( JumpPart ( IncAddr (( a =0_goto loc ),k) ) ) = ( JumpPart ( a =0_goto ( loc + k ) ) )
proof
thus A4: ( dom ( JumpPart ( IncAddr (( a =0_goto loc ),k) ) ) ) = ( dom ( JumpPart ( a =0_goto ( loc + k ) ) ) ) by A1,COMPOS_1:def 12;
A5: ( JumpPart ( a =0_goto loc ) ) = <* loc *> by RECDEF_2:def 2;
A6: ( JumpPart ( a =0_goto ( loc + k ) ) ) = <* ( loc + k ) *> by RECDEF_2:def 2;
let x being set;
assume A7: x in ( dom ( JumpPart ( IncAddr (( a =0_goto loc ),k) ) ) );
( dom <* ( loc + k ) *> ) = { 1 } by FINSEQ_1:2,FINSEQ_1:38;
then A8: x = 1 by A7,A4,A6,TARSKI:def 1;
thus ( ( JumpPart ( IncAddr (( a =0_goto loc ),k) ) ) . x ) = ( k + ( ( JumpPart ( a =0_goto loc ) ) . x ) ) by A3,A7,VALUED_1:def 2
.= ( loc + k ) by A5,A8,FINSEQ_1:40
.= ( ( JumpPart ( a =0_goto ( loc + k ) ) ) . x ) by A6,A8,FINSEQ_1:40;
end;
hence thesis by A1,A2,COMPOS_1:1;
end;
