environ
vocabularies SUBSET_1,NUMBERS,AMI_1,AMI_3,AMISTD_2,ARYTM_3,GRAPHSP,CARD_1,RELAT_1,FUNCT_1,TARSKI,FUNCT_4,XBOOLE_0,FSM_1,CIRCUIT2,SCMNORM,ARYTM_1,INT_1,XXREAL_0,STRUCT_0,ORDINAL1,RELOC,FINSET_1,FINSEQ_1,NAT_1,AMISTD_5,PBOOLE,COMPOS_1;
notations TARSKI,XBOOLE_0,SUBSET_1,FINSET_1,NUMBERS,XCMPLX_0,INT_1,NAT_1,VALUED_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_4,PBOOLE,FINSEQ_1,NAT_D,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_3,XXREAL_0,AMISTD_2,AMISTD_5;
definitions FUNCOP_1,COMPOS_1,EXTPRO_1,RELAT_1,TARSKI,AMI_3,AMISTD_2,FUNCT_1,AMISTD_5,MEMSTR_0;
theorems AMI_3,GRFUNC_1,NAT_1,TARSKI,FUNCT_4,FUNCT_1,AMI_5,RELAT_1,XBOOLE_1,PARTFUN1,VALUED_1,RECDEF_2,FINSEQ_1,COMPOS_1,EXTPRO_1,ORDINAL1,AMISTD_2,AMISTD_5,STRUCT_0,MEMSTR_0,CKB6,CKB7,CKB8,CKB9,CKB10;
schemes NAT_1;
registrations XBOOLE_0,SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,NUMBERS,XREAL_0,INT_1,CARD_3,AMI_3,RELAT_1,FUNCT_4,GRFUNC_1,FUNCT_2,AMI_6,VALUED_0,AMISTD_2,COMPOS_1,EXTPRO_1,NAT_1,FINSEQ_1,AMISTD_5,AMI_5,PBOOLE,MEMSTR_0,CKB1,CKB2,CKB3,CKB4,CKB5;
constructors DOMAIN_1,XXREAL_0,AMI_3,NAT_D,PRE_POLY,RECDEF_2,AMISTD_2,VALUED_1,AMI_2,AMISTD_1,AMISTD_5,PBOOLE,MEMSTR_0,RELSET_1;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
registration
cluster ( SCM ) ->  relocable;
coherence
proof
let INS being (Instruction of ( SCM ));
let j being Nat,k being Nat;
reconsider k as (Element of ( NAT )) by ORDINAL1:def 12;
let s being (State of ( SCM ));
A1: ( IC ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) ) = ( ( IC ( Exec (( IncAddr (INS,j) ),s) ) ) + k ) by MEMSTR_0:53
.= ( IC ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) ) by AMISTD_2:def 3;
per cases  by AMI_5:5,NAT_1:32;
suppose ( InsCode INS ) = ( 0 );

then A3: INS = ( halt ( SCM ) ) by AMI_5:7;
( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) = ( Exec (INS,( IncIC (s,k) )) ) by A3,COMPOS_1:11
.= ( IncIC (s,k) ) by A3,EXTPRO_1:def 3
.= ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) by A3,EXTPRO_1:def 3;
hence thesis;
end;
suppose ( InsCode INS ) = 1;

then consider da being Data-Location,db being Data-Location such that A4: INS = ( da := db ) by AMI_5:8;
now
let d being Data-Location;
per cases ;
suppose A5: da = d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A4,COMPOS_1:11
.= ( ( IncIC (s,k) ) . db ) by A4,A5,AMI_3:2
.= ( s . db ) by AMI_5:16
.= ( ( Exec (INS,s) ) . d ) by A4,A5,AMI_3:2
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A4,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by AMI_5:16;
end;
suppose A6: da <> d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A4,COMPOS_1:11
.= ( ( IncIC (s,k) ) . d ) by A4,A6,AMI_3:2
.= ( s . d ) by AMI_5:16
.= ( ( Exec (INS,s) ) . d ) by A4,A6,AMI_3:2
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A4,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by AMI_5:16;
end;
end;
hence thesis by A1,AMI_5:25;
end;
suppose ( InsCode INS ) = 2;

then consider da being Data-Location,db being Data-Location such that A7: INS = ( AddTo (da,db) ) by AMI_5:9;
now
let d being Data-Location;
per cases ;
suppose A8: da = d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A7,COMPOS_1:11
.= ( ( ( IncIC (s,k) ) . da ) + ( ( IncIC (s,k) ) . db ) ) by A8,A7,AMI_3:3
.= ( ( s . da ) + ( ( IncIC (s,k) ) . db ) ) by AMI_5:16
.= ( ( s . da ) + ( s . db ) ) by AMI_5:16
.= ( ( Exec (INS,s) ) . d ) by A7,A8,AMI_3:3
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A7,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by AMI_5:16;
end;
suppose A9: da <> d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A7,COMPOS_1:11
.= ( ( IncIC (s,k) ) . d ) by A7,A9,AMI_3:3
.= ( s . d ) by AMI_5:16
.= ( ( Exec (INS,s) ) . d ) by A7,A9,AMI_3:3
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A7,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by AMI_5:16;
end;
end;
hence thesis by A1,AMI_5:25;
end;
suppose ( InsCode INS ) = 3;

then consider da being Data-Location,db being Data-Location such that A10: INS = ( SubFrom (da,db) ) by AMI_5:10;
now
let d being Data-Location;
per cases ;
suppose A11: da = d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A10,COMPOS_1:11
.= ( ( ( IncIC (s,k) ) . da ) - ( ( IncIC (s,k) ) . db ) ) by A11,A10,AMI_3:4
.= ( ( s . da ) - ( ( IncIC (s,k) ) . db ) ) by AMI_5:16
.= ( ( s . da ) - ( s . db ) ) by AMI_5:16
.= ( ( Exec (INS,s) ) . d ) by A10,A11,AMI_3:4
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A10,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by AMI_5:16;
end;
suppose A12: da <> d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A10,COMPOS_1:11
.= ( ( IncIC (s,k) ) . d ) by A10,A12,AMI_3:4
.= ( s . d ) by AMI_5:16
.= ( ( Exec (INS,s) ) . d ) by A10,A12,AMI_3:4
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A10,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by AMI_5:16;
end;
end;
hence thesis by A1,AMI_5:25;
end;
suppose ( InsCode INS ) = 4;

then consider da being Data-Location,db being Data-Location such that A13: INS = ( MultBy (da,db) ) by AMI_5:11;
now
let d being Data-Location;
per cases ;
suppose A14: da = d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A13,COMPOS_1:11
.= ( ( ( IncIC (s,k) ) . da ) * ( ( IncIC (s,k) ) . db ) ) by A14,A13,AMI_3:5
.= ( ( s . da ) * ( ( IncIC (s,k) ) . db ) ) by AMI_5:16
.= ( ( s . da ) * ( s . db ) ) by AMI_5:16
.= ( ( Exec (INS,s) ) . d ) by A13,A14,AMI_3:5
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A13,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by AMI_5:16;
end;
suppose A15: da <> d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A13,COMPOS_1:11
.= ( ( IncIC (s,k) ) . d ) by A13,A15,AMI_3:5
.= ( s . d ) by AMI_5:16
.= ( ( Exec (INS,s) ) . d ) by A13,A15,AMI_3:5
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A13,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by AMI_5:16;
end;
end;
hence thesis by A1,AMI_5:25;
end;
suppose ( InsCode INS ) = 5;

then consider da being Data-Location,db being Data-Location such that A16: INS = ( Divide (da,db) ) by AMI_5:12;
now
let d being Data-Location;
per cases ;
suppose A17: da <> db;

hereby
per cases ;
suppose A18: da = d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A16,COMPOS_1:11
.= ( ( ( IncIC (s,k) ) . da ) div ( ( IncIC (s,k) ) . db ) ) by A17,A18,A16,AMI_3:6
.= ( ( s . da ) div ( ( IncIC (s,k) ) . db ) ) by AMI_5:16
.= ( ( s . da ) div ( s . db ) ) by AMI_5:16
.= ( ( Exec (INS,s) ) . d ) by A16,A17,A18,AMI_3:6
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A16,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by AMI_5:16;
end;
suppose A19: db = d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A16,COMPOS_1:11
.= ( ( ( IncIC (s,k) ) . da ) mod ( ( IncIC (s,k) ) . db ) ) by A19,A16,AMI_3:6
.= ( ( s . da ) mod ( ( IncIC (s,k) ) . db ) ) by AMI_5:16
.= ( ( s . da ) mod ( s . db ) ) by AMI_5:16
.= ( ( Exec (INS,s) ) . d ) by A16,A19,AMI_3:6
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A16,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by AMI_5:16;
end;
suppose A20: (da <> d & db <> d);

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A16,COMPOS_1:11
.= ( ( IncIC (s,k) ) . d ) by A16,A20,AMI_3:6
.= ( s . d ) by AMI_5:16
.= ( ( Exec (INS,s) ) . d ) by A16,A20,AMI_3:6
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A16,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by AMI_5:16;
end;
end;
end;
suppose A21: da = db;

per cases ;
suppose A22: da = d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A16,COMPOS_1:11
.= ( ( ( IncIC (s,k) ) . da ) mod ( ( IncIC (s,k) ) . db ) ) by A21,A22,A16,AMI_3:6
.= ( ( s . da ) mod ( ( IncIC (s,k) ) . db ) ) by AMI_5:16
.= ( ( s . da ) mod ( s . db ) ) by AMI_5:16
.= ( ( Exec (INS,s) ) . d ) by A16,A21,A22,AMI_3:6
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A16,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by AMI_5:16;
end;
suppose A23: da <> d;

thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( Exec (INS,( IncIC (s,k) )) ) . d ) by A16,COMPOS_1:11
.= ( ( IncIC (s,k) ) . d ) by A16,A21,A23,AMI_3:6
.= ( s . d ) by AMI_5:16
.= ( ( Exec (INS,s) ) . d ) by A16,A21,A23,AMI_3:6
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A16,COMPOS_1:11
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by AMI_5:16;
end;
end;
end;
hence thesis by A1,AMI_5:25;
end;
suppose ( InsCode INS ) = 6;

then consider loc being (Element of ( NAT )) such that A24: INS = ( SCM-goto loc ) by AMI_5:13;
A25: ( IncAddr (INS,( j + k )) ) = ( SCM-goto ( loc + ( j + k ) ) ) by A24,CKB6:1;
A26: ( IncAddr (INS,j) ) = ( SCM-goto ( loc + j ) ) by A24,CKB6:1;
now
let d being Data-Location;
thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( IncIC (s,k) ) . d ) by A25,AMI_3:7
.= ( s . d ) by AMI_5:16
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A26,AMI_3:7
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by AMI_5:16;
end;
hence thesis by A1,AMI_5:25;
end;
suppose ( InsCode INS ) = 7;

then consider loc being (Element of ( NAT )),da being Data-Location such that A27: INS = ( da =0_goto loc ) by AMI_5:14;
A28: ( IncAddr (INS,( j + k )) ) = ( da =0_goto ( loc + ( j + k ) ) ) by A27,CKB7:1;
A29: ( IncAddr (INS,j) ) = ( da =0_goto ( loc + j ) ) by A27,CKB7:1;
now
let d being Data-Location;
thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( IncIC (s,k) ) . d ) by A28,AMI_3:8
.= ( s . d ) by AMI_5:16
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A29,AMI_3:8
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by AMI_5:16;
end;
hence thesis by A1,AMI_5:25;
end;
suppose ( InsCode INS ) = 8;

then consider loc being (Element of ( NAT )),da being Data-Location such that A30: INS = ( da >0_goto loc ) by AMI_5:15;
A31: ( IncAddr (INS,( j + k )) ) = ( da >0_goto ( loc + ( j + k ) ) ) by A30,CKB8:1;
A32: ( IncAddr (INS,j) ) = ( da >0_goto ( loc + j ) ) by A30,CKB8:1;
now
let d being Data-Location;
thus ( ( Exec (( IncAddr (INS,( j + k )) ),( IncIC (s,k) )) ) . d ) = ( ( IncIC (s,k) ) . d ) by A31,AMI_3:9
.= ( s . d ) by AMI_5:16
.= ( ( Exec (( IncAddr (INS,j) ),s) ) . d ) by A32,AMI_3:9
.= ( ( IncIC (( Exec (( IncAddr (INS,j) ),s) ),k) ) . d ) by AMI_5:16;
end;
hence thesis by A1,AMI_5:25;
end;
end;
end;
