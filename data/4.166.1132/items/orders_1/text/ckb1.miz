environ
vocabularies FUNCT_1,XBOOLE_0,TARSKI,SUBSET_1,MCART_1,ZFMISC_1,RELAT_1,PARTFUN1,RELAT_2,ORDINAL1,WELLORD1,WELLORD2,SETFAM_1,FINSET_1,ORDERS_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,MCART_1,ORDINAL1,WELLORD1,SETFAM_1,WELLORD2,FINSET_1;
definitions RELAT_2,TARSKI,WELLORD1,RELAT_1,ORDINAL1,XBOOLE_0;
theorems FUNCT_1,FUNCT_2,MCART_1,RELAT_1,RELAT_2,RELSET_1,TARSKI,WELLORD1,WELLORD2,ZFMISC_1,XBOOLE_0,XBOOLE_1,PARTFUN1,ORDINAL1,SETFAM_1;
schemes FUNCT_1,XBOOLE_0,ORDINAL1,TARSKI,RELSET_1,RELAT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,ORDINAL1,PARTFUN1,FUNCT_2,FINSET_1,RELSET_1,WELLORD2,FUNCT_1;
constructors SETFAM_1,RELAT_2,WELLORD1,PARTFUN1,WELLORD2,FUNCT_2,FINSET_1,RELSET_1;
requirements BOOLE,SUBSET;
begin
reserve X for set;
reserve Y for set;
theorem
Lm1: ((ex X st (X <> ( {} ) & X in Y)) iff ( union Y ) <> ( {} ))
proof
thus ((ex X st (X <> ( {} ) & X in Y)) implies ( union Y ) <> ( {} ))
proof
given X such that
A1: X <> ( {} )
and
A2: X in Y;

set x = the (Element of X);
x in X by A1;
hence thesis by A2,TARSKI:def 4;
end;

set x = the (Element of ( union Y ));
assume ( union Y ) <> ( {} );
then consider X such that A3: x in X and A4: X in Y by TARSKI:def 4;
take X;
thus thesis by A3,A4;
end;
