environ
vocabularies FUNCT_1,XBOOLE_0,TARSKI,SUBSET_1,MCART_1,ZFMISC_1,RELAT_1,PARTFUN1,RELAT_2,ORDINAL1,WELLORD1,WELLORD2,SETFAM_1,FINSET_1,ORDERS_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,MCART_1,ORDINAL1,WELLORD1,SETFAM_1,WELLORD2,FINSET_1,CKB2,CKB3,CKB7,CKB22,CKB23,CKB24,CKB43,CKB44,CKB45,CKB76,CKB77,CKB83,CKB84,CKB85,CKB86;
definitions RELAT_2,TARSKI,WELLORD1,RELAT_1,ORDINAL1,XBOOLE_0,CKB2,CKB3,CKB22,CKB23,CKB24,CKB43,CKB44,CKB45,CKB76,CKB77,CKB83,CKB84,CKB85,CKB86;
theorems FUNCT_1,FUNCT_2,MCART_1,RELAT_1,RELAT_2,RELSET_1,TARSKI,WELLORD1,WELLORD2,ZFMISC_1,XBOOLE_0,XBOOLE_1,PARTFUN1,ORDINAL1,SETFAM_1,CKB1,CKB2,CKB3,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100;
schemes FUNCT_1,XBOOLE_0,ORDINAL1,TARSKI,RELSET_1,RELAT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,ORDINAL1,PARTFUN1,FUNCT_2,FINSET_1,RELSET_1,WELLORD2,FUNCT_1,CKB4,CKB40,CKB41,CKB42;
constructors SETFAM_1,RELAT_2,WELLORD1,PARTFUN1,WELLORD2,FUNCT_2,FINSET_1,RELSET_1,CKB2,CKB3,CKB22,CKB23,CKB24,CKB43,CKB44,CKB45,CKB76,CKB77,CKB83,CKB84,CKB85,CKB86;
requirements BOOLE,SUBSET;
begin
reserve X for set;
reserve Y for set;
reserve x for set;
reserve y for set;
reserve X for set;
reserve X1 for set;
reserve X2 for set;
reserve Y for set;
reserve Z for set;
reserve x for set;
reserve y for set;
theorem
Th176: (for X holds ((X <> ( {} ) & (for Z holds ((Z c= X & Z is  c=-linear) implies (ex Y st (Y in X & (for X1 holds (X1 in Z implies Y c= X1))))))) implies (ex Y st (Y in X & (for Z holds ((Z in X & Z <> Y) implies (not Z c= Y)))))))
proof
let X;
assume that
A1: X <> ( {} )
and
A2: (for Z holds ((Z c= X & Z is  c=-linear) implies (ex Y st (Y in X & (for X1 holds (X1 in Z implies Y c= X1))))));
reconsider D = X as non  empty set by A1;
set R = ( ( RelIncl D ) ~ );
A3: (x in D implies [ x,x ] in R)
proof
(x in D implies [ x,x ] in ( RelIncl D )) by WELLORD2:def 1;
hence thesis by RELAT_1:def 7;
end;
A4: D has_upper_Zorn_property_wrt R
proof
let Z;
assume that
A5: Z c= D
and
A6: ( R |_2 Z ) is  being_linear-order;
set Q = ( R |_2 Z );
A7: Z c= ( field ( R |_2 Z ) )
proof
let x;
assume A8: x in Z;
then A9: [ x,x ] in [: Z,Z :] by ZFMISC_1:87;
[ x,x ] in R by A3,A5,A8;
then [ x,x ] in ( R |_2 Z ) by A9,XBOOLE_0:def 4;
hence thesis by RELAT_1:15;
end;
( R |_2 Z ) is  connected by A6,CKB24:def 1;
then A10: ( R |_2 Z ) is_connected_in ( field ( R |_2 Z ) ) by RELAT_2:def 14;
Z is  c=-linear
proof
let X1;
let X2;
assume that
A11: X1 in Z
and
A12: X2 in Z;
(X1 <> X2 implies ([ X1,X2 ] in Q or [ X2,X1 ] in Q)) by A10,A7,A11,A12,RELAT_2:def 6;
then (X1 <> X2 implies ([ X1,X2 ] in R or [ X2,X1 ] in R)) by XBOOLE_0:def 4;
then (X1 <> X2 implies ([ X1,X2 ] in ( RelIncl D ) or [ X2,X1 ] in ( RelIncl D ))) by RELAT_1:def 7;
hence (X1 c= X2 or X2 c= X1) by A5,A11,A12,WELLORD2:def 1;
end;
then consider Y such that A13: Y in X and A14: (for X1 holds (X1 in Z implies Y c= X1)) by A2,A5;
take x = Y;
thus x in D by A13;
let y;
assume A15: y in Z;
then Y c= y by A14;
then [ Y,y ] in ( RelIncl D ) by A5,A13,A15,WELLORD2:def 1;
hence thesis by RELAT_1:def 7;
end;
A16: ( field R ) = ( field ( RelIncl D ) ) by RELAT_1:21
.= D by WELLORD2:def 1;
A17: ( field ( RelIncl D ) ) = D by WELLORD2:def 1;
( RelIncl D ) is  antisymmetric by WELLORD2:4;
then ( RelIncl D ) is_antisymmetric_in D by A17,RELAT_2:def 12;
then A18: R is_antisymmetric_in D by CKB65:1;
( RelIncl D ) is  transitive by WELLORD2:2;
then ( RelIncl D ) is_transitive_in D by A17,RELAT_2:def 16;
then A19: R is_transitive_in D by CKB64:1;
( RelIncl D ) is  reflexive by WELLORD2:1;
then ( RelIncl D ) is_reflexive_in D by A17,RELAT_2:def 9;
then R is_reflexive_in D by CKB63:1;
then R partially_orders D by A19,A18,CKB44:def 1;
then consider x such that A20: x is_maximal_in R by A16,A4,CKB98:1;
take Y = x;
A21: Y in ( field R ) by A20,CKB83:def 1;
thus Y in X by A16,A20,CKB83:def 1;
let Z;
assume that
A22: Z in X
and
A23: Z <> Y;
(not [ Y,Z ] in R) by A16,A20,A22,A23,CKB83:def 1;
then (not [ Z,Y ] in ( RelIncl D )) by RELAT_1:def 7;
hence thesis by A16,A21,A22,WELLORD2:def 1;
end;
