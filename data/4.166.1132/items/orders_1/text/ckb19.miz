environ
vocabularies FUNCT_1,XBOOLE_0,TARSKI,SUBSET_1,MCART_1,ZFMISC_1,RELAT_1,PARTFUN1,RELAT_2,ORDINAL1,WELLORD1,WELLORD2,SETFAM_1,FINSET_1,ORDERS_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,MCART_1,ORDINAL1,WELLORD1,SETFAM_1,WELLORD2,FINSET_1,CKB2,CKB3,CKB7;
definitions RELAT_2,TARSKI,WELLORD1,RELAT_1,ORDINAL1,XBOOLE_0,CKB2,CKB3;
theorems FUNCT_1,FUNCT_2,MCART_1,RELAT_1,RELAT_2,RELSET_1,TARSKI,WELLORD1,WELLORD2,ZFMISC_1,XBOOLE_0,XBOOLE_1,PARTFUN1,ORDINAL1,SETFAM_1,CKB1,CKB2,CKB3,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
schemes FUNCT_1,XBOOLE_0,ORDINAL1,TARSKI,RELSET_1,RELAT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,ORDINAL1,PARTFUN1,FUNCT_2,FINSET_1,RELSET_1,WELLORD2,FUNCT_1,CKB4;
constructors SETFAM_1,RELAT_2,WELLORD1,PARTFUN1,WELLORD2,FUNCT_2,FINSET_1,RELSET_1,CKB2,CKB3;
requirements BOOLE,SUBSET;
begin
reserve x for set;
theorem
Th98: (for A being set holds (for R being (Relation of A) holds (R is_reflexive_in A implies (( dom R ) = A & ( field R ) = A))))
proof
let A being set;
let R being (Relation of A);
assume that
A1: R is_reflexive_in A;
A2: A c= ( dom R )
proof
let x;
assume x in A;
then [ x,x ] in R by A1,RELAT_2:def 1;
hence thesis by RELAT_1:def 4;
end;
hence ( dom R ) = A by XBOOLE_0:def 10;
thus ( field R ) = ( A \/ ( rng R ) ) by A2,XBOOLE_0:def 10
.= A by XBOOLE_1:12;
end;
