environ
vocabularies FUNCT_1,XBOOLE_0,TARSKI,SUBSET_1,MCART_1,ZFMISC_1,RELAT_1,PARTFUN1,RELAT_2,ORDINAL1,WELLORD1,WELLORD2,SETFAM_1,FINSET_1,ORDERS_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,MCART_1,ORDINAL1,WELLORD1,SETFAM_1,WELLORD2,FINSET_1,CKB2,CKB3,CKB7,CKB22,CKB23,CKB24,CKB43,CKB44,CKB45,CKB76,CKB77,CKB83,CKB84,CKB85,CKB86;
definitions RELAT_2,TARSKI,WELLORD1,RELAT_1,ORDINAL1,XBOOLE_0,CKB2,CKB3,CKB22,CKB23,CKB24,CKB43,CKB44,CKB45,CKB76,CKB77,CKB83,CKB84,CKB85,CKB86;
theorems FUNCT_1,FUNCT_2,MCART_1,RELAT_1,RELAT_2,RELSET_1,TARSKI,WELLORD1,WELLORD2,ZFMISC_1,XBOOLE_0,XBOOLE_1,PARTFUN1,ORDINAL1,SETFAM_1,CKB1,CKB2,CKB3,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92;
schemes FUNCT_1,XBOOLE_0,ORDINAL1,TARSKI,RELSET_1,RELAT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,ORDINAL1,PARTFUN1,FUNCT_2,FINSET_1,RELSET_1,WELLORD2,FUNCT_1,CKB4,CKB40,CKB41,CKB42;
constructors SETFAM_1,RELAT_2,WELLORD1,PARTFUN1,WELLORD2,FUNCT_2,FINSET_1,RELSET_1,CKB2,CKB3,CKB22,CKB23,CKB24,CKB43,CKB44,CKB45,CKB76,CKB77,CKB83,CKB84,CKB85,CKB86;
requirements BOOLE,SUBSET;
begin
reserve x for set;
reserve y for set;
reserve R for Relation;
reserve x for set;
reserve y for set;
theorem
Th163: (x is_minimal_in R iff x is_maximal_in ( R ~ ))
proof
A1: ( field R ) = ( field ( R ~ ) ) by RELAT_1:21;
thus (x is_minimal_in R implies x is_maximal_in ( R ~ ))
proof
assume that
A2: x in ( field R )
and
A3: (not (ex y st ((y in ( field R ) & y <> x) & [ y,x ] in R)));
thus x in ( field ( R ~ ) ) by A2,RELAT_1:21;
let y;
assume that
A4: y in ( field ( R ~ ) )
and
A5: y <> x;
(not [ y,x ] in R) by A1,A3,A4,A5;
hence thesis by RELAT_1:def 7;
end;

assume that
A6: x in ( field ( R ~ ) )
and
A7: (not (ex y st ((y in ( field ( R ~ ) ) & y <> x) & [ x,y ] in ( R ~ ))));
thus x in ( field R ) by A6,RELAT_1:21;
let y;
assume that
A8: y in ( field R )
and
A9: y <> x;
(not [ x,y ] in ( R ~ )) by A1,A7,A8,A9;
hence thesis by RELAT_1:def 7;
end;
