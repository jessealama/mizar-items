environ
vocabularies ZFMISC_1,FUNCOP_1,RELAT_1,FUNCT_1,PBOOLE,PZFMISC1,MEMBER_1,XBOOLE_0,PARTFUN1,SUBSET_1,TARSKI,CAT_1,MCART_1,GRAPH_1,STRUCT_0,ALTCAT_1,BINOP_1,RELAT_2,REALSET1,ALTCAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,MCART_1,FUNCT_1,PZFMISC1,REALSET1,DOMAIN_1,STRUCT_0,PARTFUN1,FUNCT_2,BINOP_1,MULTOP_1,FUNCT_3,FUNCT_4,GRAPH_1,CAT_1,PBOOLE,FUNCOP_1,ALTCAT_1,CKB10,CKB14,CKB15,CKB24,CKB26,CKB30,CKB36,CKB37,CKB38,CKB39,CKB44,CKB48;
definitions STRUCT_0,ALTCAT_1,FUNCOP_1,FUNCT_1,RELAT_1,TARSKI,PBOOLE,BINOP_1,REALSET1,CKB14,CKB15,CKB24,CKB26,CKB30,CKB36,CKB37,CKB38,CKB39,CKB44,CKB48;
theorems MCART_1,ALTCAT_1,PBOOLE,TARSKI,GRFUNC_1,ZFMISC_1,MULTOP_1,RELAT_1,FUNCT_2,FUNCOP_1,FUNCT_4,FUNCT_1,FUNCT_3,DOMAIN_1,MSSUBFAM,FUNCT_7,CAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,PZFMISC1,PARTFUN1,CKB1,CKB3,CKB4,CKB6,CKB9,CKB11,CKB14,CKB15,CKB16,CKB17,CKB18,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB36,CKB37,CKB38,CKB39,CKB43,CKB44,CKB47,CKB48,CKB49,CKB50,CKB51;
schemes ALTCAT_1,FUNCT_1,CKB19,CKB20,CKB21;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELAT_1,PBOOLE,FUNCOP_1,REALSET1,STRUCT_0,ALTCAT_1,CAT_1,PRALG_1,RELSET_1,CKB2,CKB5,CKB7,CKB8,CKB12,CKB13,CKB34,CKB35,CKB40,CKB41,CKB42,CKB45,CKB46,CKB52;
constructors FUNCT_3,REALSET1,PZFMISC1,CAT_1,PRALG_1,ALTCAT_1,RELSET_1,FUNCT_4,MSSUBFAM,CKB10,CKB14,CKB15,CKB24,CKB26,CKB30,CKB36,CKB44,CKB48;
requirements SUBSET,BOOLE;
begin
definition
let C being non empty AltCatStr;
let o being (object of C);
func ObCat o ->  strict (SubCatStr of C)
means
:Def12: (((the carrier of it) = { o } & (the Arrows of it) = ( (o,o) :-> <^ o,o ^> )) & (the Comp of it) = ( [ o,o,o ] .--> ( (the Comp of C) . (o,o,o) ) ));
existence
proof
set m = ( [ o,o,o ] .--> ( (the Comp of C) . (o,o,o) ) );
( dom m ) = { [ o,o,o ] } by FUNCOP_1:13
.= [: { o },{ o },{ o } :] by MCART_1:35;
then reconsider m as (ManySortedSet of [: { o },{ o },{ o } :]) by PARTFUN1:def 2,RELAT_1:def 18;
set a = ( (o,o) :-> <^ o,o ^> );
( dom a ) = [: { o },{ o } :] by FUNCT_2:def 1;
then reconsider a as (ManySortedSet of [: { o },{ o } :]) by PARTFUN1:def 2;
A1: ( a . (o,o) ) = ( (the Arrows of C) . (o,o) ) by ALTCAT_1:10;
m is (ManySortedFunction of {| a,a |},{| a |})
proof
let i being set;
A2: o in { o } by TARSKI:def 1;
assume i in [: { o },{ o },{ o } :];
then i in { [ o,o,o ] } by MCART_1:35;
then A3: i = [ o,o,o ] by TARSKI:def 1;
then A4: ( {| a |} . i ) = ( {| a |} . (o,o,o) ) by MULTOP_1:def 1
.= ( (the Arrows of C) . (o,o) ) by A1,A2,ALTCAT_1:def 3;
( {| a,a |} . i ) = ( {| a,a |} . (o,o,o) ) by A3,MULTOP_1:def 1
.= [: ( (the Arrows of C) . (o,o) ),( (the Arrows of C) . (o,o) ) :] by A1,A2,ALTCAT_1:def 4;
hence thesis by A3,A4,FUNCOP_1:72;
end;
then reconsider m as (BinComp of a);
set D = AltCatStr (# { o },a,m #);
D is (SubCatStr of C)
proof
thus (the carrier of D) c= (the carrier of C);
thus (the Arrows of D) cc= (the Arrows of C)
proof
thus [: (the carrier of D),(the carrier of D) :] c= [: (the carrier of C),(the carrier of C) :];
let i being set;
assume i in [: (the carrier of D),(the carrier of D) :];
then i in { [ o,o ] } by ZFMISC_1:29;
then i = [ o,o ] by TARSKI:def 1;
hence thesis by A1;
end;

thus [: (the carrier of D),(the carrier of D),(the carrier of D) :] c= [: (the carrier of C),(the carrier of C),(the carrier of C) :];
let i being set;
assume i in [: (the carrier of D),(the carrier of D),(the carrier of D) :];
then i in { [ o,o,o ] } by MCART_1:35;
then A5: i = [ o,o,o ] by TARSKI:def 1;
then ( (the Comp of D) . i ) = ( (the Comp of C) . (o,o,o) ) by FUNCOP_1:72
.= ( (the Comp of C) . i ) by A5,MULTOP_1:def 1;
hence thesis;
end;
then reconsider D as  strict (SubCatStr of C);
take D;
thus thesis;
end;
uniqueness;
end;
