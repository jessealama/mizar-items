environ
vocabularies ZFMISC_1,FUNCOP_1,RELAT_1,FUNCT_1,PBOOLE,PZFMISC1,MEMBER_1,XBOOLE_0,PARTFUN1,SUBSET_1,TARSKI,CAT_1,MCART_1,GRAPH_1,STRUCT_0,ALTCAT_1,BINOP_1,RELAT_2,REALSET1,ALTCAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,MCART_1,FUNCT_1,PZFMISC1,REALSET1,DOMAIN_1,STRUCT_0,PARTFUN1,FUNCT_2,BINOP_1,MULTOP_1,FUNCT_3,FUNCT_4,GRAPH_1,CAT_1,PBOOLE,FUNCOP_1,ALTCAT_1;
definitions STRUCT_0,ALTCAT_1,FUNCOP_1,FUNCT_1,RELAT_1,TARSKI,PBOOLE,BINOP_1,REALSET1;
theorems MCART_1,ALTCAT_1,PBOOLE,TARSKI,GRFUNC_1,ZFMISC_1,MULTOP_1,RELAT_1,FUNCT_2,FUNCOP_1,FUNCT_4,FUNCT_1,FUNCT_3,DOMAIN_1,MSSUBFAM,FUNCT_7,CAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,PZFMISC1,PARTFUN1;
schemes ALTCAT_1,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELAT_1,PBOOLE,FUNCOP_1,REALSET1,STRUCT_0,ALTCAT_1,CAT_1,PRALG_1,RELSET_1;
constructors FUNCT_3,REALSET1,PZFMISC1,CAT_1,PRALG_1,ALTCAT_1,RELSET_1,FUNCT_4,MSSUBFAM;
requirements SUBSET,BOOLE;
begin
theorem
(for X1,X2 being set holds (for a1,a2 being set holds [: ( X1 --> a1 ),( X2 --> a2 ) :] = ( [: X1,X2 :] --> [ a1,a2 ] )))
proof
let X1 being set,X2 being set;
let a1 being set,a2 being set;
A1: (( dom ( X1 --> a1 ) ) = X1 & ( dom ( X2 --> a2 ) ) = X2) by FUNCOP_1:13;
then A2: ( dom ( [: X1,X2 :] --> [ a1,a2 ] ) ) = [: ( dom ( X1 --> a1 ) ),( dom ( X2 --> a2 ) ) :] by FUNCOP_1:13;
now
let x being set,y being set;
assume A3: (x in ( dom ( X1 --> a1 ) ) & y in ( dom ( X2 --> a2 ) ));
then [ x,y ] in ( dom ( [: X1,X2 :] --> [ a1,a2 ] ) ) by A2,ZFMISC_1:87;
then A4: [ x,y ] in [: X1,X2 :] by FUNCOP_1:13;
(( ( X1 --> a1 ) . x ) = a1 & ( ( X2 --> a2 ) . y ) = a2) by A1,A3,FUNCOP_1:7;
hence ( ( [: X1,X2 :] --> [ a1,a2 ] ) . (x,y) ) = [ ( ( X1 --> a1 ) . x ),( ( X2 --> a2 ) . y ) ] by A4,FUNCOP_1:7;
end;
hence thesis by A2,FUNCT_3:def 8;
end;
