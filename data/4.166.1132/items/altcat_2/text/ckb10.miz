environ
vocabularies ZFMISC_1,FUNCOP_1,RELAT_1,FUNCT_1,PBOOLE,PZFMISC1,MEMBER_1,XBOOLE_0,PARTFUN1,SUBSET_1,TARSKI,CAT_1,MCART_1,GRAPH_1,STRUCT_0,ALTCAT_1,BINOP_1,RELAT_2,REALSET1,ALTCAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,MCART_1,FUNCT_1,PZFMISC1,REALSET1,DOMAIN_1,STRUCT_0,PARTFUN1,FUNCT_2,BINOP_1,MULTOP_1,FUNCT_3,FUNCT_4,GRAPH_1,CAT_1,PBOOLE,FUNCOP_1,ALTCAT_1;
definitions STRUCT_0,ALTCAT_1,FUNCOP_1,FUNCT_1,RELAT_1,TARSKI,PBOOLE,BINOP_1,REALSET1;
theorems MCART_1,ALTCAT_1,PBOOLE,TARSKI,GRFUNC_1,ZFMISC_1,MULTOP_1,RELAT_1,FUNCT_2,FUNCOP_1,FUNCT_4,FUNCT_1,FUNCT_3,DOMAIN_1,MSSUBFAM,FUNCT_7,CAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,PZFMISC1,PARTFUN1,CKB1,CKB3,CKB4,CKB6,CKB9;
schemes ALTCAT_1,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELAT_1,PBOOLE,FUNCOP_1,REALSET1,STRUCT_0,ALTCAT_1,CAT_1,PRALG_1,RELSET_1,CKB2,CKB5,CKB7,CKB8;
constructors FUNCT_3,REALSET1,PZFMISC1,CAT_1,PRALG_1,ALTCAT_1,RELSET_1,FUNCT_4,MSSUBFAM;
requirements SUBSET,BOOLE;
begin
definition
let I being set;
let A being (ManySortedSet of [: I,I :]);
let B being (ManySortedSet of [: I,I :]);
let F being (ManySortedFunction of A,B);
redefine func ~ F -> (ManySortedFunction of ( ~ A ),( ~ B ));

coherence
proof
reconsider G = ( ~ F ) as (ManySortedSet of [: I,I :]);
G is (ManySortedFunction of ( ~ A ),( ~ B ))
proof
let ii being set;
assume ii in [: I,I :];
then consider i1 being set,i2 being set such that A1: (i1 in I & i2 in I) and A2: ii = [ i1,i2 ] by ZFMISC_1:84;
A3: [ i2,i1 ] in [: I,I :] by A1,ZFMISC_1:87;
( dom B ) = [: I,I :] by PARTFUN1:def 2;
then A4: ( B . (i2,i1) ) = ( ( ~ B ) . (i1,i2) ) by A3,FUNCT_4:def 2;
( dom A ) = [: I,I :] by PARTFUN1:def 2;
then A5: ( A . (i2,i1) ) = ( ( ~ A ) . (i1,i2) ) by A3,FUNCT_4:def 2;
( dom F ) = [: I,I :] by PARTFUN1:def 2;
then ( F . (i2,i1) ) = ( G . (i1,i2) ) by A3,FUNCT_4:def 2;
hence thesis by A2,A3,A5,A4,PBOOLE:def 15;
end;
hence thesis;
end;
end;
