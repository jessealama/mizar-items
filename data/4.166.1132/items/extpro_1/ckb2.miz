environ
vocabularies STRUCT_0,SUBSET_1,XBOOLE_0,FUNCT_1,NUMBERS,CARD_3,ORDINAL1,CARD_1,FUNCOP_1,FUNCT_4,RELAT_1,TARSKI,CAT_1,FSM_1,SETFAM_1,GLIB_000,FINSET_1,CIRCUIT2,NAT_1,ARYTM_3,XXREAL_0,MSUALG_1,TURING_1,PARTFUN1,MCART_1,ZFMISC_1,GRAPHSP,ARYTM_1,FUNCT_7,AMI_1,PBOOLE,SCMNORM,GROUP_9,RECDEF_2,COMPOS_1,AMISTD_2,CARD_5,UNIALG_1,MEMSTR_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,SUBSET_1,SETFAM_1,ORDINAL1,CARD_1,PBOOLE,NUMBERS,FUNCT_7,CARD_3,XCMPLX_0,RELAT_1,FUNCT_1,PARTFUN1,FINSET_1,NAT_1,FUNCOP_1,FUNCT_4,FINSEQ_1,FUNCT_2,DOMAIN_1,RECDEF_2,STRUCT_0,XXREAL_0,MEMSTR_0,COMPOS_1,CKB1;
definitions TARSKI,STRUCT_0,FUNCOP_1,ORDINAL1,RELAT_1,PBOOLE,FUNCT_1,PARTFUN1,MCART_1,ZFMISC_1,COMPOS_1,MEMSTR_0,CARD_3;
theorems ZFMISC_1,FUNCT_2,TARSKI,NAT_1,CQC_LANG,CARD_3,FINSEQ_1,FUNCT_4,FUNCOP_1,FINSET_1,FUNCT_1,GRFUNC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,ORDINAL1,MCART_1,ENUMSET1,SUBSET_1,XXREAL_0,FUNCT_7,INT_1,PARTFUN1,PBOOLE,RECDEF_2,FUNCT_5,COMPOS_1,MEMSTR_0,STRUCT_0;
schemes NAT_1,FRAENKEL;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FUNCOP_1,FUNCT_4,FINSET_1,XREAL_0,FINSEQ_1,CARD_3,STRUCT_0,INT_1,RELSET_1,GRFUNC_1,PRE_POLY,PBOOLE,COMPOS_1,MEMSTR_0,ZFMISC_1,CARD_1,CKB1;
constructors SETFAM_1,DOMAIN_1,FUNCT_4,XXREAL_0,FUNCT_7,GRAPH_2,RELSET_1,PRE_POLY,PBOOLE,RECDEF_2,COMPOS_1,MEMSTR_0,CKB1;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
definition
let N being set;
func Trivial-AMI N ->  strict AMI-Struct over N
means
:Def1: ((((((the carrier of it) = { ( NAT ) } & (the ZeroF of it) = ( NAT )) & (the Instructions of it) = { [ ( 0 ),( {} ),( {} ) ] }) & (the haltF of it) = [ ( 0 ),( {} ),( {} ) ]) & (the Object-Kind of it) = ( ( NAT ) .--> ( NAT ) )) & (the Execution of it) = ( [ ( 0 ),( {} ),( {} ) ] .--> ( id ( product ( ( NAT ) .--> ( NAT ) ) ) ) ));
existence
proof
reconsider I = { [ ( 0 ),( {} ),( {} ) ] } as non empty set;
reconsider i = [ ( 0 ),( {} ),( {} ) ] as (Element of I) by TARSKI:def 1;
set f = ( ( NAT ) .--> ( NAT ) );
A1: ( dom f ) = ( dom ( ( NAT ) .--> ( NAT ) ) )
.= ( dom ( ( NAT ) .--> ( NAT ) ) )
.= { ( NAT ) } by FUNCOP_1:13;
( rng ( ( NAT ) .--> ( NAT ) ) ) c= { ( NAT ) } by FUNCOP_1:13;
then ( rng ( ( NAT ) .--> ( NAT ) ) ) c= { ( NAT ) };
then (( rng f ) c= ( rng ( ( NAT ) .--> ( NAT ) ) ) & ( rng ( ( NAT ) .--> ( NAT ) ) ) c= { ( NAT ) });
then A2: ( rng f ) c= { ( NAT ) };
{ ( NAT ) } c= ( N \/ { ( NAT ) } ) by XBOOLE_1:7;
then ( rng f ) c= ( N \/ { ( NAT ) } ) by A2,XBOOLE_1:1;
then reconsider f as (Function of { ( NAT ) },( N \/ { ( NAT ) } )) by A1,RELSET_1:4;
reconsider y = ( NAT ) as (Element of { ( NAT ) }) by TARSKI:def 1;
reconsider E = ( I --> ( id ( product f ) ) ) as (Action of I,( product f )) by FUNCOP_1:45,FUNCT_2:9;
take S = AMI-Struct (# { ( NAT ) },y,I,i,f,E #);
thus thesis;
end;
uniqueness;
end;
