environ
vocabularies STRUCT_0,SUBSET_1,XBOOLE_0,FUNCT_1,NUMBERS,CARD_3,ORDINAL1,CARD_1,FUNCOP_1,FUNCT_4,RELAT_1,TARSKI,CAT_1,FSM_1,SETFAM_1,GLIB_000,FINSET_1,CIRCUIT2,NAT_1,ARYTM_3,XXREAL_0,MSUALG_1,TURING_1,PARTFUN1,MCART_1,ZFMISC_1,GRAPHSP,ARYTM_1,FUNCT_7,AMI_1,PBOOLE,SCMNORM,GROUP_9,RECDEF_2,COMPOS_1,AMISTD_2,CARD_5,UNIALG_1,MEMSTR_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,SUBSET_1,SETFAM_1,ORDINAL1,CARD_1,PBOOLE,NUMBERS,FUNCT_7,CARD_3,XCMPLX_0,RELAT_1,FUNCT_1,PARTFUN1,FINSET_1,NAT_1,FUNCOP_1,FUNCT_4,FINSEQ_1,FUNCT_2,DOMAIN_1,RECDEF_2,STRUCT_0,XXREAL_0,MEMSTR_0,COMPOS_1,CKB1,CKB2,CKB5,CKB6,CKB7,CKB16,CKB17,CKB18,CKB19,CKB24,CKB28,CKB29;
definitions TARSKI,STRUCT_0,FUNCOP_1,ORDINAL1,RELAT_1,PBOOLE,FUNCT_1,PARTFUN1,MCART_1,ZFMISC_1,COMPOS_1,MEMSTR_0,CARD_3,CKB2,CKB5,CKB6,CKB7,CKB16,CKB17,CKB18,CKB19,CKB24,CKB28,CKB29;
theorems ZFMISC_1,FUNCT_2,TARSKI,NAT_1,CQC_LANG,CARD_3,FINSEQ_1,FUNCT_4,FUNCOP_1,FINSET_1,FUNCT_1,GRFUNC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,ORDINAL1,MCART_1,ENUMSET1,SUBSET_1,XXREAL_0,FUNCT_7,INT_1,PARTFUN1,PBOOLE,RECDEF_2,FUNCT_5,COMPOS_1,MEMSTR_0,STRUCT_0,CKB2,CKB5,CKB6,CKB7,CKB12,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB31;
schemes NAT_1,FRAENKEL;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FUNCOP_1,FUNCT_4,FINSET_1,XREAL_0,FINSEQ_1,CARD_3,STRUCT_0,INT_1,RELSET_1,GRFUNC_1,PRE_POLY,PBOOLE,COMPOS_1,MEMSTR_0,ZFMISC_1,CARD_1,CKB1,CKB3,CKB4,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB30;
constructors SETFAM_1,DOMAIN_1,FUNCT_4,XXREAL_0,FUNCT_7,GRAPH_2,RELSET_1,PRE_POLY,PBOOLE,RECDEF_2,COMPOS_1,MEMSTR_0,CKB1,CKB2,CKB5,CKB6,CKB7,CKB16,CKB17,CKB18,CKB19,CKB24,CKB28,CKB29;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve N for non empty  with_non-empty_elements set;
theorem
Th11: (for S being  halting  IC-Ins-separated non empty AMI-Struct over N holds (for l being (Element of ( NAT )) holds (for P being ( NAT ) -defined (the Instructions of S) -valued Function holds (( l .--> ( halt S ) ) c= P implies (for p being l -started (PartState of S) holds p is P -halted)))))
proof
let S being  halting  IC-Ins-separated non empty AMI-Struct over N;
let l being (Element of ( NAT ));
let P being ( NAT ) -defined (the Instructions of S) -valued Function;
assume that
A1: ( l .--> ( halt S ) ) c= P;
let p being l -started (PartState of S);
set h = ( halt S );
set I = ( p +* P );
let s being (State of S);
assume that
A2: p c= s;
let Q being (Instruction-Sequence of S);
assume that
A3: P c= Q;
take ( 0 );
( dom Q ) = ( NAT ) by PARTFUN1:def 2;
hence ( IC ( Comput (Q,s,( 0 )) ) ) in ( dom Q );
( Start-At (l,S) ) c= p by MEMSTR_0:29;
then A5: ( Start-At (l,S) ) c= s by A2,XBOOLE_1:1;
A6: ( l .--> h ) c= Q by A1,A3,XBOOLE_1:1;
A7: ( dom ( l .--> h ) ) = { l } by FUNCOP_1:13;
( IC S ) in ( dom ( Start-At (l,S) ) ) by MEMSTR_0:15;
then A8: ( IC s ) = ( IC ( Start-At (l,S) ) ) by A5,GRFUNC_1:2
.= l by FUNCOP_1:72;
A9: ( IC s ) in ( dom ( l .--> h ) ) by A7,A8,TARSKI:def 1;
A10: ( dom ( l .--> h ) ) c= ( dom Q ) by A6,RELAT_1:11;
thus ( CurInstr (Q,( Comput (Q,s,( 0 )) )) ) = ( CurInstr (Q,s) ) by CKB20:1
.= ( Q . ( IC s ) ) by A10,A9,PARTFUN1:def 6
.= ( ( l .--> h ) . ( IC s ) ) by A9,A6,GRFUNC_1:2
.= ( CurInstr (( l .--> h ),s) ) by A9,PARTFUN1:def 6
.= ( halt S ) by A5,CKB31:1;
end;
