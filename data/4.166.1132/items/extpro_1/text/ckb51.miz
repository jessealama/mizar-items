environ
vocabularies STRUCT_0,SUBSET_1,XBOOLE_0,FUNCT_1,NUMBERS,CARD_3,ORDINAL1,CARD_1,FUNCOP_1,FUNCT_4,RELAT_1,TARSKI,CAT_1,FSM_1,SETFAM_1,GLIB_000,FINSET_1,CIRCUIT2,NAT_1,ARYTM_3,XXREAL_0,MSUALG_1,TURING_1,PARTFUN1,MCART_1,ZFMISC_1,GRAPHSP,ARYTM_1,FUNCT_7,AMI_1,PBOOLE,SCMNORM,GROUP_9,RECDEF_2,COMPOS_1,AMISTD_2,CARD_5,UNIALG_1,MEMSTR_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,SUBSET_1,SETFAM_1,ORDINAL1,CARD_1,PBOOLE,NUMBERS,FUNCT_7,CARD_3,XCMPLX_0,RELAT_1,FUNCT_1,PARTFUN1,FINSET_1,NAT_1,FUNCOP_1,FUNCT_4,FINSEQ_1,FUNCT_2,DOMAIN_1,RECDEF_2,STRUCT_0,XXREAL_0,MEMSTR_0,COMPOS_1,CKB1,CKB2,CKB5,CKB6,CKB7,CKB16,CKB17,CKB18,CKB19,CKB24,CKB28,CKB29,CKB36,CKB37,CKB38,CKB50;
definitions TARSKI,STRUCT_0,FUNCOP_1,ORDINAL1,RELAT_1,PBOOLE,FUNCT_1,PARTFUN1,MCART_1,ZFMISC_1,COMPOS_1,MEMSTR_0,CARD_3,CKB2,CKB5,CKB6,CKB7,CKB16,CKB17,CKB18,CKB19,CKB24,CKB28,CKB29,CKB36,CKB37,CKB38,CKB50;
theorems ZFMISC_1,FUNCT_2,TARSKI,NAT_1,CQC_LANG,CARD_3,FINSEQ_1,FUNCT_4,FUNCOP_1,FINSET_1,FUNCT_1,GRFUNC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,ORDINAL1,MCART_1,ENUMSET1,SUBSET_1,XXREAL_0,FUNCT_7,INT_1,PARTFUN1,PBOOLE,RECDEF_2,FUNCT_5,COMPOS_1,MEMSTR_0,STRUCT_0,CKB2,CKB5,CKB6,CKB7,CKB12,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50;
schemes NAT_1,FRAENKEL;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FUNCOP_1,FUNCT_4,FINSET_1,XREAL_0,FINSEQ_1,CARD_3,STRUCT_0,INT_1,RELSET_1,GRFUNC_1,PRE_POLY,PBOOLE,COMPOS_1,MEMSTR_0,ZFMISC_1,CARD_1,CKB1,CKB3,CKB4,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB30,CKB35,CKB42,CKB43;
constructors SETFAM_1,DOMAIN_1,FUNCT_4,XXREAL_0,FUNCT_7,GRAPH_2,RELSET_1,PRE_POLY,PBOOLE,RECDEF_2,COMPOS_1,MEMSTR_0,CKB1,CKB2,CKB5,CKB6,CKB7,CKB16,CKB17,CKB18,CKB19,CKB24,CKB28,CKB29,CKB36,CKB37,CKB38,CKB50;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
theorem
Th23: (for N being non empty  with_non-empty_elements set holds (for S being  IC-Ins-separated  halting non empty AMI-Struct over N holds (for p being ( NAT ) -defined (the Instructions of S) -valued Function holds (for s being (State of S) holds (for m being (Element of ( NAT )) holds (p halts_on s iff p halts_on ( Comput (p,s,m) )))))))
proof
let N being non empty  with_non-empty_elements set;
let S being  IC-Ins-separated  halting non empty AMI-Struct over N;
let p being ( NAT ) -defined (the Instructions of S) -valued Function;
let s being (State of S);
let m being (Element of ( NAT ));
hereby
assume p halts_on s;
then consider n being Nat such that A1: ( IC ( Comput (p,s,n) ) ) in ( dom p ) and A2: ( CurInstr (p,( Comput (p,s,n) )) ) = ( halt S ) by CKB19:def 1;
reconsider n as (Element of ( NAT )) by ORDINAL1:def 12;
per cases ;
suppose n <= m;

then ( Comput (p,s,n) ) = ( Comput (p,s,( m + ( 0 ) )) ) by A2,CKB23:1
.= ( Comput (p,( Comput (p,s,m) ),( 0 )) ) by CKB22:1;
hence p halts_on ( Comput (p,s,m) ) by CKB19:def 1,A2,A1;
end;
suppose n >= m;

then reconsider k = ( n - m ) as (Element of ( NAT )) by INT_1:5;
( Comput (p,( Comput (p,s,m) ),k) ) = ( Comput (p,s,( m + k )) ) by CKB22:1
.= ( Comput (p,s,n) );
hence p halts_on ( Comput (p,s,m) ) by CKB19:def 1,A1,A2;
end;
end;
given n being Nat such that
A3: ( IC ( Comput (p,( Comput (p,s,m) ),n) ) ) in ( dom p )
and
A4: ( CurInstr (p,( Comput (p,( Comput (p,s,m) ),n) )) ) = ( halt S );

reconsider nn = n as (Element of ( NAT )) by ORDINAL1:def 12;
take ( m + nn );
thus (( IC ( Comput (p,s,( m + nn )) ) ) in ( dom p ) & ( CurInstr (p,( Comput (p,s,( m + nn )) )) ) = ( halt S )) by A3,A4,CKB22:1;
end;
