environ
vocabularies STRUCT_0,SUBSET_1,XBOOLE_0,FUNCT_1,NUMBERS,CARD_3,ORDINAL1,CARD_1,FUNCOP_1,FUNCT_4,RELAT_1,TARSKI,CAT_1,FSM_1,SETFAM_1,GLIB_000,FINSET_1,CIRCUIT2,NAT_1,ARYTM_3,XXREAL_0,MSUALG_1,TURING_1,PARTFUN1,MCART_1,ZFMISC_1,GRAPHSP,ARYTM_1,FUNCT_7,AMI_1,PBOOLE,SCMNORM,GROUP_9,RECDEF_2,COMPOS_1,AMISTD_2,CARD_5,UNIALG_1,MEMSTR_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,SUBSET_1,SETFAM_1,ORDINAL1,CARD_1,PBOOLE,NUMBERS,FUNCT_7,CARD_3,XCMPLX_0,RELAT_1,FUNCT_1,PARTFUN1,FINSET_1,NAT_1,FUNCOP_1,FUNCT_4,FINSEQ_1,FUNCT_2,DOMAIN_1,RECDEF_2,STRUCT_0,XXREAL_0,MEMSTR_0,COMPOS_1,CKB1,CKB2,CKB5,CKB6,CKB7,CKB16,CKB17,CKB18,CKB19,CKB24,CKB28,CKB29,CKB36,CKB37,CKB38,CKB50;
definitions TARSKI,STRUCT_0,FUNCOP_1,ORDINAL1,RELAT_1,PBOOLE,FUNCT_1,PARTFUN1,MCART_1,ZFMISC_1,COMPOS_1,MEMSTR_0,CARD_3,CKB2,CKB5,CKB6,CKB7,CKB16,CKB17,CKB18,CKB19,CKB24,CKB28,CKB29,CKB36,CKB37,CKB38,CKB50;
theorems ZFMISC_1,FUNCT_2,TARSKI,NAT_1,CQC_LANG,CARD_3,FINSEQ_1,FUNCT_4,FUNCOP_1,FINSET_1,FUNCT_1,GRFUNC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,ORDINAL1,MCART_1,ENUMSET1,SUBSET_1,XXREAL_0,FUNCT_7,INT_1,PARTFUN1,PBOOLE,RECDEF_2,FUNCT_5,COMPOS_1,MEMSTR_0,STRUCT_0,CKB2,CKB5,CKB6,CKB7,CKB12,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB31,CKB32,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60;
schemes NAT_1,FRAENKEL;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FUNCOP_1,FUNCT_4,FINSET_1,XREAL_0,FINSEQ_1,CARD_3,STRUCT_0,INT_1,RELSET_1,GRFUNC_1,PRE_POLY,PBOOLE,COMPOS_1,MEMSTR_0,ZFMISC_1,CARD_1,CKB1,CKB3,CKB4,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14,CKB15,CKB30,CKB35,CKB42,CKB43;
constructors SETFAM_1,DOMAIN_1,FUNCT_4,XXREAL_0,FUNCT_7,GRAPH_2,RELSET_1,PRE_POLY,PBOOLE,RECDEF_2,COMPOS_1,MEMSTR_0,CKB1,CKB2,CKB5,CKB6,CKB7,CKB16,CKB17,CKB18,CKB19,CKB24,CKB28,CKB29,CKB36,CKB37,CKB38,CKB50;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve N for  with_non-empty_elements non empty set;
reserve S for  IC-Ins-separated  halting non empty AMI-Struct over N;
theorem
Th33: (for F being (Instruction-Sequence of S) holds (for s being (State of S) holds (for k being (Element of ( NAT )) holds ((( F . ( IC ( Comput (F,s,k) ) ) ) <> ( halt S ) & ( F . ( IC ( Comput (F,s,( k + 1 )) ) ) ) = ( halt S )) iff (( LifeSpan (F,s) ) = ( k + 1 ) & F halts_on s)))))
proof
let F being (Instruction-Sequence of S);
let s being (State of S);
let k being (Element of ( NAT ));
A1: ( dom F ) = ( NAT ) by PARTFUN1:def 2;
hereby
assume that
A2: ( F . ( IC ( Comput (F,s,k) ) ) ) <> ( halt S )
and
A3: ( F . ( IC ( Comput (F,s,( k + 1 )) ) ) ) = ( halt S );
A4: ( CurInstr (F,( Comput (F,s,k) )) ) <> ( halt S ) by A2,A1,PARTFUN1:def 6;
A5:now
let i being (Element of ( NAT ));
assume that
A6: ( CurInstr (F,( Comput (F,s,i) )) ) = ( halt S )
and
A7: ( k + 1 ) > i;
i <= k by A7,NAT_1:13;
hence contradiction by A4,A6,CKB23:1;
end;
A8: F halts_on s by A3,CKB59:1;
( CurInstr (F,( Comput (F,s,( k + 1 )) )) ) = ( halt S ) by A3,A1,PARTFUN1:def 6;
hence (( LifeSpan (F,s) ) = ( k + 1 ) & F halts_on s) by A5,CKB50:def 1,A8;
end;
assume A9: (( LifeSpan (F,s) ) = ( k + 1 ) & F halts_on s);
A10:now
assume ( CurInstr (F,( Comput (F,s,k) )) ) = ( halt S );
then ( k + 1 ) <= k by A9,CKB50:def 1;
hence contradiction by NAT_1:13;
end;
( CurInstr (F,( Comput (F,s,( k + 1 )) )) ) = ( halt S ) by A9,CKB50:def 1;
hence thesis by A10,A1,PARTFUN1:def 6;
end;
