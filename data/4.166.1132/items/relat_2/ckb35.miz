environ
vocabularies RELAT_1,TARSKI,XBOOLE_0,ZFMISC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
definitions CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
theorems TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34;
registrations RELAT_1;
constructors TARSKI,SUBSET_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
requirements SUBSET;
begin
reserve x for set;
reserve y for set;
reserve R for Relation;
theorem
(R is  asymmetric implies ( R ~ ) is  asymmetric)
proof
assume R is  asymmetric;
then A1: R is_asymmetric_in ( field R ) by CKB13:def 1;
now
let x;
let y;
assume that
A2: (x in ( field ( R ~ ) ) & y in ( field ( R ~ ) ))
and
A3: [ x,y ] in ( R ~ );
A4: [ y,x ] in R by A3,RELAT_1:def 7;
(x in ( field R ) & y in ( field R )) by A2,RELAT_1:21;
then (not [ x,y ] in R) by A1,A4,CKB5:def 1;
hence (not [ y,x ] in ( R ~ )) by RELAT_1:def 7;
end;
then ( R ~ ) is_asymmetric_in ( field ( R ~ ) ) by CKB5:def 1;
hence thesis by CKB13:def 1;
end;
