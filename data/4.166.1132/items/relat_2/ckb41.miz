environ
vocabularies RELAT_1,TARSKI,XBOOLE_0,ZFMISC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
definitions CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
theorems TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40;
registrations RELAT_1;
constructors TARSKI,SUBSET_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
requirements SUBSET;
begin
reserve x for set;
reserve y for set;
reserve z for set;
reserve R for Relation;
theorem
(R is  transitive implies ( R ~ ) is  transitive)
proof
assume R is  transitive;
then A1: R is_transitive_in ( field R ) by CKB16:def 1;
now
let x;
let y;
let z;
assume that
A2: (x in ( field ( R ~ ) ) & y in ( field ( R ~ ) ))
and
A3: z in ( field ( R ~ ) )
and
A4: [ x,y ] in ( R ~ )
and
A5: [ y,z ] in ( R ~ );
A6: (x in ( field R ) & y in ( field R )) by A2,RELAT_1:21;
A7: [ y,x ] in R by A4,RELAT_1:def 7;
(z in ( field R ) & [ z,y ] in R) by A3,A5,RELAT_1:21,RELAT_1:def 7;
then [ z,x ] in R by A1,A6,A7,CKB8:def 1;
hence [ x,z ] in ( R ~ ) by RELAT_1:def 7;
end;
then ( R ~ ) is_transitive_in ( field ( R ~ ) ) by CKB8:def 1;
hence thesis by CKB16:def 1;
end;
