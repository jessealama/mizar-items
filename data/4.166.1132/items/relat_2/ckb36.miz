environ
vocabularies RELAT_1,TARSKI,XBOOLE_0,ZFMISC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
definitions CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
theorems TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35;
registrations RELAT_1;
constructors TARSKI,SUBSET_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
requirements SUBSET;
begin
reserve a for set;
reserve b for set;
reserve P for Relation;
reserve R for Relation;
theorem
(R is  asymmetric implies ( P /\ R ) is  asymmetric)
proof
assume R is  asymmetric;
then A1: R is_asymmetric_in ( field R ) by CKB13:def 1;
A2: ( field ( P /\ R ) ) c= ( ( field P ) /\ ( field R ) ) by RELAT_1:19;
now
let a;
let b;
assume that
A3: (a in ( field ( P /\ R ) ) & b in ( field ( P /\ R ) ))
and
A4: [ a,b ] in ( P /\ R );
A5: [ a,b ] in R by A4,XBOOLE_0:def 4;
(a in ( field R ) & b in ( field R )) by A2,A3,XBOOLE_0:def 4;
then (not [ b,a ] in R) by A1,A5,CKB5:def 1;
hence (not [ b,a ] in ( P /\ R )) by XBOOLE_0:def 4;
end;
then ( P /\ R ) is_asymmetric_in ( field ( P /\ R ) ) by CKB5:def 1;
hence thesis by CKB13:def 1;
end;
