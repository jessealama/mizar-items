environ
vocabularies RELAT_1,TARSKI,XBOOLE_0,ZFMISC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
definitions CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
theorems TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
registrations RELAT_1;
constructors TARSKI,SUBSET_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
requirements SUBSET;
begin
reserve a for set;
reserve b for set;
reserve R for Relation;
theorem
(R is  reflexive iff ( id ( field R ) ) c= R)
proof
A1:now
assume A2: ( id ( field R ) ) c= R;
now
let a;
assume a in ( field R );
then [ a,a ] in ( id ( field R ) ) by RELAT_1:def 10;
hence [ a,a ] in R by A2;
end;
then R is_reflexive_in ( field R ) by CKB1:def 1;
hence R is  reflexive by CKB9:def 1;
end;
now
assume R is  reflexive;
then A3: R is_reflexive_in ( field R ) by CKB9:def 1;
now
let a;
let b;
assume [ a,b ] in ( id ( field R ) );
then (a in ( field R ) & a = b) by RELAT_1:def 10;
hence [ a,b ] in R by A3,CKB1:def 1;
end;
hence ( id ( field R ) ) c= R by RELAT_1:def 3;
end;
hence thesis by A1;
end;
