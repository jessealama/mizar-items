environ
vocabularies RELAT_1,TARSKI,XBOOLE_0,ZFMISC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
definitions CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
theorems TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43;
registrations RELAT_1;
constructors TARSKI,SUBSET_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
requirements SUBSET;
begin
reserve a for set;
reserve b for set;
reserve x for set;
reserve y for set;
reserve z for set;
reserve R for Relation;
theorem
(R is  connected iff ( [: ( field R ),( field R ) :] \ ( id ( field R ) ) ) c= ( R \/ ( R ~ ) ))
proof
A1:now
assume R is  connected;
then A2: R is_connected_in ( field R ) by CKB14:def 1;
now
let x;
now
assume A3: x in ( [: ( field R ),( field R ) :] \ ( id ( field R ) ) );
then x in [: ( field R ),( field R ) :] by XBOOLE_0:def 5;
then consider y,z such that A4: y in ( field R ) and A5: z in ( field R ) and A6: x = [ y,z ] by ZFMISC_1:def 2;
(not x in ( id ( field R ) )) by A3,XBOOLE_0:def 5;
then y <> z by A4,A6,RELAT_1:def 10;
then ([ y,z ] in R or [ z,y ] in R) by A2,A4,A5,CKB6:def 1;
then ([ y,z ] in R or [ y,z ] in ( R ~ )) by RELAT_1:def 7;
hence x in ( R \/ ( R ~ ) ) by A6,XBOOLE_0:def 3;
end;
hence (x in ( [: ( field R ),( field R ) :] \ ( id ( field R ) ) ) implies x in ( R \/ ( R ~ ) ));
end;
hence ( [: ( field R ),( field R ) :] \ ( id ( field R ) ) ) c= ( R \/ ( R ~ ) ) by TARSKI:def 3;
end;
now
assume A7: ( [: ( field R ),( field R ) :] \ ( id ( field R ) ) ) c= ( R \/ ( R ~ ) );
now
let a;
let b;
([ a,b ] in ( [: ( field R ),( field R ) :] \ ( id ( field R ) ) ) implies [ a,b ] in ( R \/ ( R ~ ) )) by A7;
then (([ a,b ] in [: ( field R ),( field R ) :] & (not [ a,b ] in ( id ( field R ) ))) implies [ a,b ] in ( R \/ ( R ~ ) )) by XBOOLE_0:def 5;
then A8: (((a in ( field R ) & b in ( field R )) & a <> b) implies ([ a,b ] in R or [ a,b ] in ( R ~ ))) by RELAT_1:def 10,XBOOLE_0:def 3,ZFMISC_1:87;
assume ((a in ( field R ) & b in ( field R )) & a <> b);
hence ([ a,b ] in R or [ b,a ] in R) by A8,RELAT_1:def 7;
end;
then R is_connected_in ( field R ) by CKB6:def 1;
hence R is  connected by CKB14:def 1;
end;
hence thesis by A1;
end;
