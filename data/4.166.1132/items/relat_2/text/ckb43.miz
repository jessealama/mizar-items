environ
vocabularies RELAT_1,TARSKI,XBOOLE_0,ZFMISC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
definitions CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
theorems TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42;
registrations RELAT_1;
constructors TARSKI,SUBSET_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
requirements SUBSET;
begin
reserve a for set;
reserve b for set;
reserve c for set;
reserve R for Relation;
theorem
(R is  transitive iff ( R * R ) c= R)
proof
A1:now
assume R is  transitive;
then A2: R is_transitive_in ( field R ) by CKB16:def 1;
now
let a;
let b;
assume [ a,b ] in ( R * R );
then consider c such that A3: [ a,c ] in R and A4: [ c,b ] in R by RELAT_1:def 8;
A5: c in ( field R ) by A3,RELAT_1:15;
(a in ( field R ) & b in ( field R )) by A3,A4,RELAT_1:15;
hence [ a,b ] in R by A2,A3,A4,A5,CKB8:def 1;
end;
hence ( R * R ) c= R by RELAT_1:def 3;
end;
now
assume A6: ( R * R ) c= R;
now
let a;
let b;
let c;
assume that
a in ( field R )
and
b in ( field R )
and
c in ( field R )
and
A7: ([ a,b ] in R & [ b,c ] in R);
[ a,c ] in ( R * R ) by A7,RELAT_1:def 8;
hence [ a,c ] in R by A6;
end;
then R is_transitive_in ( field R ) by CKB8:def 1;
hence R is  transitive by CKB16:def 1;
end;
hence thesis by A1;
end;
