environ
vocabularies RELAT_1,TARSKI,XBOOLE_0,ZFMISC_1,RELAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
definitions CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
theorems TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30;
registrations RELAT_1;
constructors TARSKI,SUBSET_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
requirements SUBSET;
begin
reserve a for set;
reserve P for Relation;
reserve R for Relation;
theorem
((P is  irreflexive & R is  irreflexive) implies (( P \/ R ) is  irreflexive & ( P /\ R ) is  irreflexive))
proof
assume that
A1: P is  irreflexive
and
A2: R is  irreflexive;
A3: P is_irreflexive_in ( field P ) by A1,CKB10:def 1;
A4: R is_irreflexive_in ( field R ) by A2,CKB10:def 1;
now
let a;
A5:now
assume a in ( field P );
then A6: (not [ a,a ] in P) by A3,CKB2:def 1;
A7: ((not a in ( field R )) implies (not [ a,a ] in R)) by RELAT_1:15;
(a in ( field R ) implies (not [ a,a ] in R)) by A4,CKB2:def 1;
hence (not [ a,a ] in ( P \/ R )) by A6,A7,XBOOLE_0:def 3;
end;
A8:now
assume a in ( field R );
then A9: (not [ a,a ] in R) by A4,CKB2:def 1;
A10: ((not a in ( field P )) implies (not [ a,a ] in P)) by RELAT_1:15;
(a in ( field P ) implies (not [ a,a ] in P)) by A3,CKB2:def 1;
hence (not [ a,a ] in ( P \/ R )) by A9,A10,XBOOLE_0:def 3;
end;
assume a in ( field ( P \/ R ) );
then a in ( ( field P ) \/ ( field R ) ) by RELAT_1:18;
hence (not [ a,a ] in ( P \/ R )) by A5,A8,XBOOLE_0:def 3;
end;
then ( P \/ R ) is_irreflexive_in ( field ( P \/ R ) ) by CKB2:def 1;
hence ( P \/ R ) is  irreflexive by CKB10:def 1;
now
let a;
assume A11: a in ( field ( P /\ R ) );
( field ( P /\ R ) ) c= ( ( field P ) /\ ( field R ) ) by RELAT_1:19;
then a in ( field P ) by A11,XBOOLE_0:def 4;
then (not [ a,a ] in P) by A3,CKB2:def 1;
hence (not [ a,a ] in ( P /\ R )) by XBOOLE_0:def 4;
end;
then ( P /\ R ) is_irreflexive_in ( field ( P /\ R ) ) by CKB2:def 1;
hence thesis by CKB10:def 1;
end;
