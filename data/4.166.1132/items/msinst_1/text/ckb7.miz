environ
vocabularies XBOOLE_0,STRUCT_0,MSUALG_1,ALTCAT_1,MSALIMIT,SUBSET_1,FUNCT_1,CAT_1,RELAT_1,PBOOLE,ZFMISC_1,MCART_1,PUA2MSS1,RELAT_2,BINOP_1,TARSKI,MSUALG_6,FUNCT_2,PARTFUN1,NUMBERS,CARD_3,FUNCOP_1,PZFMISC1,MARGREL1,MEMBER_1,FUNCT_6,FINSEQ_4,MSUALG_3,MSINST_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,MCART_1,RELAT_1,FUNCT_1,STRUCT_0,FUNCT_2,MCART_2,RELSET_1,PARTFUN1,FINSEQ_2,CARD_3,BINOP_1,MULTOP_1,FUNCT_6,FUNCOP_1,PBOOLE,PZFMISC1,PRALG_1,MSUALG_1,MSUALG_3,ALTCAT_1,PRALG_2,PUA2MSS1,MSUALG_6,MSALIMIT,CKB1,CKB5;
definitions ALTCAT_1,MSUALG_3,PBOOLE,TARSKI,XBOOLE_0,BINOP_1,CKB1,CKB5;
theorems XBOOLE_0,ALTCAT_1,ALTCAT_2,AUTALG_1,CARD_3,CLOSURE1,FUNCOP_1,FUNCT_1,FUNCT_2,FUNCT_6,FUNCTOR0,MCART_1,MCART_2,MSSUBFAM,MSUALG_1,MSUALG_3,MSUALG_6,MSALIMIT,MULTOP_1,PARTFUN1,PBOOLE,PRALG_2,PUA2MSS1,RELAT_1,TARSKI,ZFMISC_1,PRALG_1,XBOOLE_1,PZFMISC1,FINSEQ_2,CKB1,CKB3,CKB5;
schemes ALTCAT_1,MSSUBFAM,TARSKI;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,FUNCOP_1,RELAT_1,STRUCT_0,MSUALG_1,ALTCAT_1,MSUALG_6,MSALIMIT,MSSUBFAM,PBOOLE,CKB2,CKB4,CKB6;
constructors MCART_2,PZFMISC1,MSUALG_3,ALTCAT_1,PUA2MSS1,CLOSURE1,MSUALG_6,MSALIMIT,RELSET_1,CKB1,CKB5;
requirements SUBSET,BOOLE;
begin
reserve A for non empty set;
reserve S for non void non empty ManySortedSign;
theorem
Th2: (for x being MSAlgebra over S holds (x in ( MSAlg_set (S,A) ) implies ((the Sorts of x) in ( Funcs ((the carrier of S),( bool A )) ) & (the Charact of x) in ( Funcs ((the carrier' of S),( PFuncs (( PFuncs (( NAT ),A) ),A) )) ))))
proof
let x being MSAlgebra over S;
assume x in ( MSAlg_set (S,A) );
then consider M being  strict  feasible MSAlgebra over S such that A1: x = M and A2: (for C being (Component of (the Sorts of M)) holds C c= A) by CKB5:def 1;
A3: ( dom (the Sorts of M) ) = (the carrier of S) by PARTFUN1:def 2;
then reconsider SM = (the Sorts of M) as (Function of (the carrier of S),( rng (the Sorts of M) )) by FUNCT_2:1;
A4: ( rng (the Sorts of M) ) c= ( bool A )
proof
let x being set;
assume x in ( rng (the Sorts of M) );
then reconsider x9 = x as (Component of (the Sorts of M));
x9 c= A by A2;
hence thesis;
end;
then reconsider SM9 = SM as (Function of (the carrier of S),( bool A )) by FUNCT_2:6;
A5: ( dom (the Charact of M) ) = (the carrier' of S) by PARTFUN1:def 2;
A6: ( rng (the Charact of M) ) c= ( PFuncs (( PFuncs (( NAT ),A) ),A) )
proof
reconsider SA = ( ( (the Sorts of M) # ) * (the Arity of S) ),SR = ( (the Sorts of M) * (the ResultSort of S) ) as (ManySortedSet of (the carrier' of S));
let x being set;
reconsider CM = (the Charact of M) as (ManySortedFunction of SA,SR);
assume x in ( rng (the Charact of M) );
then consider x1 being set such that A7: x1 in ( dom (the Charact of M) ) and A8: x = ( (the Charact of M) . x1 ) by FUNCT_1:def 3;
reconsider Cm = ( CM . x1 ) as (Function of ( SA . x1 ),( SR . x1 )) by A5,A7,PBOOLE:def 15;
A9: x1 in (the carrier' of S) by A7,PARTFUN1:def 2;
A10: x1 in ( dom SA ) by A5,A7,PARTFUN1:def 2;
( SA . x1 ) c= ( PFuncs (( NAT ),A) )
proof
reconsider AX = ( (the Arity of S) . x1 ) as (Element of ( (the carrier of S) * )) by A9,FUNCT_2:5;
let a being set;
assume a in ( SA . x1 );
then A11: a in ( ( (the Sorts of M) # ) . ( (the Arity of S) . x1 ) ) by A10,FUNCT_1:12;
( ( (the Sorts of M) # ) . AX ) = ( product ( (the Sorts of M) * AX ) ) by FINSEQ_2:def 5;
then A12: (ex g being Function st ((a = g & ( dom g ) = ( dom ( (the Sorts of M) * AX ) )) & (for x2 being set holds (x2 in ( dom ( (the Sorts of M) * AX ) ) implies ( g . x2 ) in ( ( (the Sorts of M) * AX ) . x2 ))))) by A11,CARD_3:def 5;
then reconsider a9 = a as Function;
( rng AX ) c= ( dom (the Sorts of M) ) by A3;
then A13: ( dom a9 ) = ( dom AX ) by A12,RELAT_1:27;
( rng a9 ) c= A
proof
( rng (the Sorts of M) ) c= ( bool A )
proof
let w being set;
assume w in ( rng (the Sorts of M) );
then reconsider w9 = w as (Component of (the Sorts of M));
w9 c= A by A2;
hence thesis;
end;
then A14: ( union ( rng (the Sorts of M) ) ) c= ( union ( bool A ) ) by ZFMISC_1:77;
let r being set;
assume r in ( rng a9 );
then consider r1 being set such that A15: r1 in ( dom a9 ) and A16: r = ( a9 . r1 ) by FUNCT_1:def 3;
( AX . r1 ) in ( rng AX ) by A13,A15,FUNCT_1:def 3;
then A17: ( (the Sorts of M) . ( AX . r1 ) ) in ( rng (the Sorts of M) ) by A3,FUNCT_1:def 3;
r in ( ( (the Sorts of M) * AX ) . r1 ) by A12,A15,A16;
then r in ( (the Sorts of M) . ( AX . r1 ) ) by A13,A15,FUNCT_1:13;
then r in ( union ( rng (the Sorts of M) ) ) by A17,TARSKI:def 4;
then r in ( union ( bool A ) ) by A14;
hence thesis by ZFMISC_1:81;
end;
hence thesis by A13,PARTFUN1:def 3;
end;
then A18: ( dom Cm ) c= ( PFuncs (( NAT ),A) ) by XBOOLE_1:1;
x1 in ( dom SR ) by A5,A7,PARTFUN1:def 2;
then A19: ( SR . x1 ) = ( (the Sorts of M) . ( (the ResultSort of S) . x1 ) ) by FUNCT_1:12;
( (the ResultSort of S) . x1 ) in (the carrier of S) by A5,A7,FUNCT_2:5;
then ( SR . x1 ) in ( rng (the Sorts of M) ) by A3,A19,FUNCT_1:def 3;
then ( rng Cm ) c= A by A4,XBOOLE_1:1;
hence thesis by A8,A18,PARTFUN1:def 3;
end;
SM9 in ( Funcs ((the carrier of S),( bool A )) ) by FUNCT_2:8;
hence thesis by A1,A5,A6,FUNCT_2:def 2;
end;
