environ
vocabularies XBOOLE_0,STRUCT_0,MSUALG_1,ALTCAT_1,MSALIMIT,SUBSET_1,FUNCT_1,CAT_1,RELAT_1,PBOOLE,ZFMISC_1,MCART_1,PUA2MSS1,RELAT_2,BINOP_1,TARSKI,MSUALG_6,FUNCT_2,PARTFUN1,NUMBERS,CARD_3,FUNCOP_1,PZFMISC1,MARGREL1,MEMBER_1,FUNCT_6,FINSEQ_4,MSUALG_3,MSINST_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,MCART_1,RELAT_1,FUNCT_1,STRUCT_0,FUNCT_2,MCART_2,RELSET_1,PARTFUN1,FINSEQ_2,CARD_3,BINOP_1,MULTOP_1,FUNCT_6,FUNCOP_1,PBOOLE,PZFMISC1,PRALG_1,MSUALG_1,MSUALG_3,ALTCAT_1,PRALG_2,PUA2MSS1,MSUALG_6,MSALIMIT,CKB1,CKB5;
definitions ALTCAT_1,MSUALG_3,PBOOLE,TARSKI,XBOOLE_0,BINOP_1,CKB1,CKB5;
theorems XBOOLE_0,ALTCAT_1,ALTCAT_2,AUTALG_1,CARD_3,CLOSURE1,FUNCOP_1,FUNCT_1,FUNCT_2,FUNCT_6,FUNCTOR0,MCART_1,MCART_2,MSSUBFAM,MSUALG_1,MSUALG_3,MSUALG_6,MSALIMIT,MULTOP_1,PARTFUN1,PBOOLE,PRALG_2,PUA2MSS1,RELAT_1,TARSKI,ZFMISC_1,PRALG_1,XBOOLE_1,PZFMISC1,FINSEQ_2,CKB1,CKB3,CKB5,CKB7,CKB8,CKB9,CKB10;
schemes ALTCAT_1,MSSUBFAM,TARSKI;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,FUNCOP_1,RELAT_1,STRUCT_0,MSUALG_1,ALTCAT_1,MSUALG_6,MSALIMIT,MSSUBFAM,PBOOLE,CKB2,CKB4,CKB6;
constructors MCART_2,PZFMISC1,MSUALG_3,ALTCAT_1,PUA2MSS1,CLOSURE1,MSUALG_6,MSALIMIT,RELSET_1,CKB1,CKB5;
requirements SUBSET,BOOLE;
begin
reserve A for non empty set;
reserve S for non void non empty ManySortedSign;
reserve x for set;
definition
let S;
let A;
let i being set;
let j being set;
assume that
A1: i in ( MSAlg_set (S,A) )
and
A2: j in ( MSAlg_set (S,A) );
func MSAlg_morph (S,A,i,j)
means
:Def3: (x in it iff (ex M,N being  strict  feasible MSAlgebra over S st (ex f being (ManySortedFunction of M,N) st ((((M = i & N = j) & f = x) & (the Sorts of M) is_transformable_to (the Sorts of N)) & f is_homomorphism M,N))));
existence
proof
defpred P[ set,set ]
 means
(ex M,N being  strict  feasible MSAlgebra over S st (ex F being (ManySortedFunction of M,N) st ((((($2 = F & i = M) & j = N) & $1 = [ (the Sorts of M),(the Charact of M),(the Sorts of N),(the Charact of N),F ]) & (the Sorts of M) is_transformable_to (the Sorts of N)) & F is_homomorphism M,N)));
A3: (for x,y,z being set holds ((P[ x,y ] & P[ x,z ]) implies y = z)) by MCART_2:6;
consider X being set such that A4: (x in X iff (ex y being set st (y in [: ( Funcs ((the carrier of S),( bool A )) ),( Funcs ((the carrier' of S),( PFuncs (( PFuncs (( NAT ),A) ),A) )) ),( Funcs ((the carrier of S),( bool A )) ),( Funcs ((the carrier' of S),( PFuncs (( PFuncs (( NAT ),A) ),A) )) ),( Funcs ((the carrier of S),( PFuncs (( union ( bool A ) ),( union ( bool A ) )) )) ) :] & P[ y,x ]))) from TARSKI:sch 1(A3);
take X;
thus (x in X iff (ex M,N being  strict  feasible MSAlgebra over S st (ex F being (ManySortedFunction of M,N) st ((((M = i & N = j) & F = x) & (the Sorts of M) is_transformable_to (the Sorts of N)) & F is_homomorphism M,N))))
proof
hereby
assume x in X;
then (ex y being set st (y in [: ( Funcs ((the carrier of S),( bool A )) ),( Funcs ((the carrier' of S),( PFuncs (( PFuncs (( NAT ),A) ),A) )) ),( Funcs ((the carrier of S),( bool A )) ),( Funcs ((the carrier' of S),( PFuncs (( PFuncs (( NAT ),A) ),A) )) ),( Funcs ((the carrier of S),( PFuncs (( union ( bool A ) ),( union ( bool A ) )) )) ) :] & P[ y,x ])) by A4;
hence (ex M,N being  strict  feasible MSAlgebra over S st (ex F being (ManySortedFunction of M,N) st ((((M = i & N = j) & F = x) & (the Sorts of M) is_transformable_to (the Sorts of N)) & F is_homomorphism M,N)));
end;
given M being  strict  feasible MSAlgebra over S,N being  strict  feasible MSAlgebra over S,F being (ManySortedFunction of M,N) such that
A5: M = i
and
A6: N = j
and
A7: ((F = x & (the Sorts of M) is_transformable_to (the Sorts of N)) & F is_homomorphism M,N);

set y = [ (the Sorts of M),(the Charact of M),(the Sorts of N),(the Charact of N),F ];
A8: ((the Sorts of N) in ( Funcs ((the carrier of S),( bool A )) ) & (the Charact of N) in ( Funcs ((the carrier' of S),( PFuncs (( PFuncs (( NAT ),A) ),A) )) )) by A2,A6,CKB7:1;
A9: ( dom F ) = (the carrier of S) by PARTFUN1:def 2;
( rng F ) c= ( PFuncs (( union ( bool A ) ),( union ( bool A ) )) )
proof
A10: (ex M9 being  strict  feasible MSAlgebra over S st (M9 = M & (for C being (Component of (the Sorts of M9)) holds C c= A))) by A1,A5,CKB5:def 1;
A11: ( rng (the Sorts of M) ) c= ( bool A )
proof
let x being set;
assume x in ( rng (the Sorts of M) );
then reconsider x9 = x as (Component of (the Sorts of M));
x9 c= A by A10;
hence thesis;
end;
let w being set;
assume w in ( rng F );
then consider w1 being set such that A12: w1 in ( dom F ) and A13: w = ( F . w1 ) by FUNCT_1:def 3;
reconsider w9 = w as (Function of ( (the Sorts of M) . w1 ),( (the Sorts of N) . w1 )) by A9,A12,A13,PBOOLE:def 15;
A14: ( dom (the Sorts of M) ) = (the carrier of S) by PARTFUN1:def 2;
A15: ( dom w9 ) c= ( union ( bool A ) )
proof
let s being set;
assume A16: s in ( dom w9 );
( (the Sorts of M) . w1 ) in ( rng (the Sorts of M) ) by A9,A12,A14,FUNCT_1:def 3;
hence thesis by A11,A16,TARSKI:def 4;
end;
A17: (ex N9 being  strict  feasible MSAlgebra over S st (N9 = N & (for C being (Component of (the Sorts of N9)) holds C c= A))) by A2,A6,CKB5:def 1;
A18: ( rng (the Sorts of N) ) c= ( bool A )
proof
let x being set;
assume x in ( rng (the Sorts of N) );
then reconsider x9 = x as (Component of (the Sorts of N));
x9 c= A by A17;
hence thesis;
end;
A19: ( dom (the Sorts of N) ) = (the carrier of S) by PARTFUN1:def 2;
( rng w9 ) c= ( union ( bool A ) )
proof
let r being set;
assume A20: r in ( rng w9 );
( (the Sorts of N) . w1 ) in ( rng (the Sorts of N) ) by A9,A12,A19,FUNCT_1:def 3;
hence thesis by A18,A20,TARSKI:def 4;
end;
hence thesis by A15,PARTFUN1:def 3;
end;
then A21: F in ( Funcs ((the carrier of S),( PFuncs (( union ( bool A ) ),( union ( bool A ) )) )) ) by A9,FUNCT_2:def 2;
((the Sorts of M) in ( Funcs ((the carrier of S),( bool A )) ) & (the Charact of M) in ( Funcs ((the carrier' of S),( PFuncs (( PFuncs (( NAT ),A) ),A) )) )) by A1,A5,CKB7:1;
then y in [: ( Funcs ((the carrier of S),( bool A )) ),( Funcs ((the carrier' of S),( PFuncs (( PFuncs (( NAT ),A) ),A) )) ),( Funcs ((the carrier of S),( bool A )) ),( Funcs ((the carrier' of S),( PFuncs (( PFuncs (( NAT ),A) ),A) )) ),( Funcs ((the carrier of S),( PFuncs (( union ( bool A ) ),( union ( bool A ) )) )) ) :] by A8,A21,MCART_2:29;
hence thesis by A4,A5,A6,A7;
end;

end;
uniqueness
proof
let A1 being set,A2 being set;
assume A22: (x in A1 iff (ex M,N being  strict  feasible MSAlgebra over S st (ex f being (ManySortedFunction of M,N) st ((((M = i & N = j) & f = x) & (the Sorts of M) is_transformable_to (the Sorts of N)) & f is_homomorphism M,N))));
assume A23: (x in A2 iff (ex M,N being  strict  feasible MSAlgebra over S st (ex f being (ManySortedFunction of M,N) st ((((M = i & N = j) & f = x) & (the Sorts of M) is_transformable_to (the Sorts of N)) & f is_homomorphism M,N))));
A24: A2 c= A1
proof
let a being set;
assume a in A2;
then (ex M,N being  strict  feasible MSAlgebra over S st (ex f being (ManySortedFunction of M,N) st ((((M = i & N = j) & f = a) & (the Sorts of M) is_transformable_to (the Sorts of N)) & f is_homomorphism M,N))) by A23;
hence thesis by A22;
end;
A1 c= A2
proof
let a being set;
assume a in A1;
then (ex M,N being  strict  feasible MSAlgebra over S st (ex f being (ManySortedFunction of M,N) st ((((M = i & N = j) & f = a) & (the Sorts of M) is_transformable_to (the Sorts of N)) & f is_homomorphism M,N))) by A22;
hence thesis by A23;
end;
hence A1 = A2 by A24,XBOOLE_0:def 10;
end;
end;
