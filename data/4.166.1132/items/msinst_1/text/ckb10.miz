environ
vocabularies XBOOLE_0,STRUCT_0,MSUALG_1,ALTCAT_1,MSALIMIT,SUBSET_1,FUNCT_1,CAT_1,RELAT_1,PBOOLE,ZFMISC_1,MCART_1,PUA2MSS1,RELAT_2,BINOP_1,TARSKI,MSUALG_6,FUNCT_2,PARTFUN1,NUMBERS,CARD_3,FUNCOP_1,PZFMISC1,MARGREL1,MEMBER_1,FUNCT_6,FINSEQ_4,MSUALG_3,MSINST_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,MCART_1,RELAT_1,FUNCT_1,STRUCT_0,FUNCT_2,MCART_2,RELSET_1,PARTFUN1,FINSEQ_2,CARD_3,BINOP_1,MULTOP_1,FUNCT_6,FUNCOP_1,PBOOLE,PZFMISC1,PRALG_1,MSUALG_1,MSUALG_3,ALTCAT_1,PRALG_2,PUA2MSS1,MSUALG_6,MSALIMIT,CKB1,CKB5;
definitions ALTCAT_1,MSUALG_3,PBOOLE,TARSKI,XBOOLE_0,BINOP_1,CKB1,CKB5;
theorems XBOOLE_0,ALTCAT_1,ALTCAT_2,AUTALG_1,CARD_3,CLOSURE1,FUNCOP_1,FUNCT_1,FUNCT_2,FUNCT_6,FUNCTOR0,MCART_1,MCART_2,MSSUBFAM,MSUALG_1,MSUALG_3,MSUALG_6,MSALIMIT,MULTOP_1,PARTFUN1,PBOOLE,PRALG_2,PUA2MSS1,RELAT_1,TARSKI,ZFMISC_1,PRALG_1,XBOOLE_1,PZFMISC1,FINSEQ_2,CKB1,CKB3,CKB5,CKB7,CKB8,CKB9;
schemes ALTCAT_1,MSSUBFAM,TARSKI;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,FUNCOP_1,RELAT_1,STRUCT_0,MSUALG_1,ALTCAT_1,MSUALG_6,MSALIMIT,MSSUBFAM,PBOOLE,CKB2,CKB4,CKB6;
constructors MCART_2,PZFMISC1,MSUALG_3,ALTCAT_1,PUA2MSS1,CLOSURE1,MSUALG_6,MSALIMIT,RELSET_1,CKB1,CKB5;
requirements SUBSET,BOOLE;
begin
reserve S for non  void non  empty ManySortedSign;
reserve x for set;
reserve o for (OperSymbol of S);
theorem
Th5: (for U1,U2,U3 being  feasible MSAlgebra over S holds (for F being (ManySortedFunction of U1,U2) holds (for G being (ManySortedFunction of U2,U3) holds (((((the Sorts of U1) is_transformable_to (the Sorts of U2) & (the Sorts of U2) is_transformable_to (the Sorts of U3)) & F is_homomorphism U1,U2) & G is_homomorphism U2,U3) implies (ex GF being (ManySortedFunction of U1,U3) st (GF = ( G ** F ) & GF is_homomorphism U1,U3))))))
proof
let U1 being  feasible MSAlgebra over S;
let U2 being  feasible MSAlgebra over S;
let U3 being  feasible MSAlgebra over S;
let F being (ManySortedFunction of U1,U2);
let G being (ManySortedFunction of U2,U3);
assume that
A1: (the Sorts of U1) is_transformable_to (the Sorts of U2)
and
A2: (the Sorts of U2) is_transformable_to (the Sorts of U3)
and
A3: F is_homomorphism U1,U2
and
A4: G is_homomorphism U2,U3;
reconsider GF = ( G ** F ) as (ManySortedFunction of U1,U3) by A1,ALTCAT_2:4;
take GF;
thus GF = ( G ** F );
thus GF is_homomorphism U1,U3
proof
let o being (OperSymbol of S);
assume that
A5: ( Args (o,U1) ) <> ( {} );
let x being (Element of ( Args (o,U1) ));
A6: (ex gf being (ManySortedFunction of U1,U3) st (gf = ( G ** F ) & ( gf # x ) = ( G # ( F # x ) ))) by A1,A2,A5,CKB9:1;
set r = ( the_result_sort_of o );
(( ( F . r ) . ( ( Den (o,U1) ) . x ) ) = ( ( Den (o,U2) ) . ( F # x ) ) & ( Args (o,U2) ) <> ( {} )) by A1,A3,A5,CKB8:1,MSUALG_3:def 7;
then A7: ( ( G . r ) . ( ( F . r ) . ( ( Den (o,U1) ) . x ) ) ) = ( ( Den (o,U3) ) . ( G # ( F # x ) ) ) by A4,MSUALG_3:def 7;
A8: (the Sorts of U1) is_transformable_to (the Sorts of U3) by A1,A2,AUTALG_1:10;
A9: ( dom ( GF . r ) ) = ( (the Sorts of U1) . r )
proof
per cases ;
suppose ( (the Sorts of U1) . r ) <> ( {} );

then ( (the Sorts of U3) . r ) <> ( {} ) by A8,PZFMISC1:def 3;
hence thesis by FUNCT_2:def 1;
end;
suppose ( (the Sorts of U1) . r ) = ( {} );

hence thesis;
end;
end;
o in (the carrier' of S);
then A10: o in ( dom (the ResultSort of S) ) by FUNCT_2:def 1;
( rng (the ResultSort of S) ) c= (the carrier of S);
then ( rng (the ResultSort of S) ) c= ( dom (the Sorts of U1) ) by PARTFUN1:def 2;
then (( Result (o,U1) ) = ( ( (the Sorts of U1) * (the ResultSort of S) ) . o ) & ( dom ( (the Sorts of U1) * (the ResultSort of S) ) ) = ( dom (the ResultSort of S) )) by MSUALG_1:def 5,RELAT_1:27;
then A11: ( Result (o,U1) ) = ( (the Sorts of U1) . ( (the ResultSort of S) . o ) ) by A10,FUNCT_1:12
.= ( (the Sorts of U1) . r ) by MSUALG_1:def 2;
then (( GF . r ) = ( ( G . r ) * ( F . r ) ) & ( (the Sorts of U1) . r ) <> ( {} )) by A5,MSUALG_3:2,MSUALG_6:def 1;
hence thesis by A5,A7,A9,A11,A6,FUNCT_1:12,FUNCT_2:5;
end;

end;
