environ
vocabularies NUMBERS,NAT_1,VECTSP_1,SUBSET_1,FUNCT_1,RELAT_1,FUNCT_4,XBOOLE_0,FUNCOP_1,MATRIX_1,FINSEQ_1,TREES_1,ARYTM_3,GROUP_1,SUPINF_2,ZFMISC_1,MATRIX_2,XXREAL_0,MATRIX_3,FINSEQ_2,ALGSTR_0,SETWISEO,CARD_3,CARD_1,INCSP_1,MESFUNC1,STRUCT_0,FVSUM_1,PARTFUN1,RVSUM_1,ARYTM_1,MATRIX_6,MATRIXJ1,MATHMORP,ORDINAL4,RFINSEQ,BCIALG_2,NEWTON,GRCAT_1,FUNCSDOM,VECTSP_2,RANKNULL,VECTSP10,HURWITZ,TARSKI,RLSUB_1,RLVECT_5,MATRLIN,MATRLIN2,MATRIXR1,FINSEQ_4,RLVECT_3,FINSET_1,RLVECT_2,POLYNOM5,VECTSP11,RLSUB_2,PRVECT_1,MATRIXJ2,UNIALG_1,MSSUBFAM;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,CARD_1,XCMPLX_0,ALGSTR_0,XXREAL_0,NAT_1,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,SETWOP_2,FINSEQ_1,PRVECT_1,FUNCOP_1,STRUCT_0,RLVECT_1,GROUP_1,VECTSP_1,FINSEQ_2,MATRIX_1,MATRIX_2,FVSUM_1,NAT_D,GROUP_4,MATRIX_3,MATRIX_6,FUNCT_4,DOMAIN_1,VECTSP_4,VECTSP_6,VECTSP_7,VECTSP_9,MATRIX13,MATRLIN,FUNCT_7,LAPLACE,MOD_2,RFINSEQ,VECTSP_2,VECTSP_5,MATRIX15,RANKNULL,FUNCSDOM,GRCAT_1,POLYNOM5,WSIERP_1,MATRIXJ1,MATRLIN2,VECTSP11,CKB2,CKB3,CKB13,CKB16,CKB18,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB35,CKB36;
definitions STRUCT_0,TARSKI,RLVECT_1,FINSEQ_1,VECTSP_4,RELAT_1,GROUP_4,FVSUM_1,MATRIX_1,FUNCT_1,FUNCOP_1,MATRIXJ1,MATRLIN2,CKB2,CKB13,CKB18,CKB30,CKB35;
theorems ZFMISC_1,RLVECT_1,MATRIX_1,MATRIX_2,MATRIX_3,VECTSP_1,NAT_1,FINSEQ_2,CARD_1,CARD_2,FINSEQ_1,FINSEQ_3,FRECHET,FUNCT_1,FUNCT_2,FUNCT_7,FUNCOP_1,FVSUM_1,GROUP_1,LAPLACE,MATRIX_6,MATRIX13,MATRIXR1,MATRIXR2,MATRLIN,ORDINAL1,PARTFUN1,RELAT_1,STIRL2_1,STRUCT_0,TARSKI,WELLORD2,VECTSP_4,VECTSP_6,VECTSP_7,VECTSP_9,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,MATRIX15,MOD_2,VECTSP10,RANKNULL,VECTSP_5,FINSEQ_4,FINSEQ_5,RFINSEQ,RVSUM_1,POLYNOM3,POLYNOM4,MATRIXJ1,MATRLIN2,VECTSP11,GRCAT_1,FUNCT_4,NAT_D,CKB1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB17,CKB18,CKB19,CKB20,CKB23,CKB30,CKB31,CKB34,CKB35,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53;
schemes NAT_1,MATRIX_1,FUNCT_2;
registrations XBOOLE_0,FINSET_1,STRUCT_0,VECTSP_1,FUNCT_2,ORDINAL1,XXREAL_0,NAT_1,FINSEQ_1,RELAT_1,CARD_1,FINSEQ_2,XREAL_0,VECTSP_9,VALUED_0,MATRIXJ1,VECTSP11,POLYNOM5,FUNCOP_1,RELSET_1,MOD_2,GRCAT_1,PRVECT_1,MATRIX13,MATRLIN2,CKB14,CKB15,CKB21,CKB22,CKB32,CKB33;
constructors FINSOP_1,XXREAL_0,GROUP_4,WELLORD2,VECTSP_7,VECTSP_9,MATRIX_6,REALSET1,LAPLACE,VECTSP_5,RANKNULL,MATRIX15,POLYNOM1,POLYNOM5,MATRIXJ1,MATRLIN2,VECTSP11,REAL_1,BINARITH,RELSET_1,FUNCT_7,MATRIX13,FVSUM_1,CKB2,CKB3,CKB13,CKB18,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB35;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve i for Nat;
reserve j for Nat;
reserve n for Nat;
reserve x for set;
reserve K for Field;
reserve L for (Element of K);
theorem
Th30: (for V being (VectSp of K) holds (for F being (linear-transformation of V,V) holds (for V1 being  finite-dimensional (Subspace of V) holds (for F1 being (linear-transformation of V1,V1) holds ((V1 = ( ker ( ( F + ( ( - L ) * ( id V ) ) ) |^ n ) ) & ( F | V1 ) = F1) implies (ex J being  non-empty (FinSequence_of_Jordan_block of L,K) st (ex b1 being (OrdBasis of V1) st ( AutMt (F1,b1,b1) ) = ( block_diagonal (J,( 0. K )) ))))))))
proof
let V being (VectSp of K);
let F being (linear-transformation of V,V);
let V1 being  finite-dimensional (Subspace of V);
let F1 being (linear-transformation of V1,V1);
assume that
A1: V1 = ( ker ( ( F + ( ( - L ) * ( id V ) ) ) |^ n ) )
and
A2: ( F | V1 ) = F1;
set FL = ( F + ( ( - L ) * ( id V ) ) );
reconsider FLV = ( FL | V1 ) as  nilpotent (linear-transformation of V1,V1) by A1,CKB34:1;
A3:now
let x;
assume x in ( dom FLV );
then reconsider v1 = x as (Vector of V1) by FUNCT_2:def 1;
reconsider v = v1 as (Vector of V) by VECTSP_4:10;
( ( id V ) . v ) = v by FUNCT_1:18;
then A4: ( ( - L ) * ( ( id V ) . v ) ) = ( ( - L ) * ( ( id V1 ) . v1 ) ) by FUNCT_1:18,VECTSP_4:14;
A5: ( F . v1 ) = ( F1 . v1 ) by A2,FUNCT_1:49;
thus ( FLV . x ) = ( ( F + ( ( - L ) * ( id V ) ) ) . v ) by FUNCT_1:49
.= ( ( F . v ) + ( ( ( - L ) * ( id V ) ) . v ) ) by MATRLIN:def 3
.= ( ( F . v ) + ( ( - L ) * ( ( id V ) . v ) ) ) by MATRLIN:def 4
.= ( ( F1 . v1 ) + ( ( - L ) * ( ( id V1 ) . v1 ) ) ) by A4,A5,VECTSP_4:13
.= ( ( F1 . v1 ) + ( ( ( - L ) * ( id V1 ) ) . v1 ) ) by MATRLIN:def 4
.= ( ( F1 + ( ( - L ) * ( id V1 ) ) ) . x ) by MATRLIN:def 3;
end;
( dom FLV ) = (the carrier of V1) by FUNCT_2:def 1
.= ( dom ( F1 + ( ( - L ) * ( id V1 ) ) ) ) by FUNCT_2:def 1;
then A6: FLV = ( F1 + ( ( - L ) * ( id V1 ) ) ) by A3,FUNCT_1:2;
consider J being  non-empty (FinSequence_of_Jordan_block of ( 0. K ),K),b1 being (OrdBasis of V1) such that A7: ( AutMt (FLV,b1,b1) ) = ( block_diagonal (J,( 0. K )) ) by CKB53:1;
( L + ( 0. K ) ) = L by RLVECT_1:def 4;
then reconsider JM = ( J (+) ( mlt (( ( len J ) |-> L ),( 1. (K,( Len J )) )) ) ) as (FinSequence_of_Jordan_block of L,K) by CKB23:1;
now
let x;
assume that
A8: x in ( dom JM );
reconsider i = x as Nat by A8;
A9: ( JM . i ) = ( ( J . i ) + ( ( mlt (( ( len J ) |-> L ),( 1. (K,( Len J )) )) ) . i ) ) by A8,MATRIXJ1:def 10;
( dom JM ) = ( dom J ) by MATRIXJ1:def 10;
then ( J . i ) <> ( {} ) by A8,FUNCT_1:def 9;
hence ( JM . x ) is non empty by A9,MATRIX_3:def 3;
end;
then reconsider JM as  non-empty (FinSequence_of_Jordan_block of L,K) by FUNCT_1:def 9;
take JM;
take b1;
set Aid = ( AutMt (( id V1 ),b1,b1) );
set AF1 = ( AutMt (F1,b1,b1) );
A10:now
A11: ( Indices Aid ) = ( Indices AF1 ) by MATRIX_1:26;
let i;
let j;
assume that
A12: [ i,j ] in ( Indices AF1 );
( Indices ( AF1 + ( ( - L ) * Aid ) ) ) = ( Indices AF1 ) by MATRIX_1:26;
hence ( ( ( AF1 + ( ( - L ) * Aid ) ) + ( L * Aid ) ) * (i,j) ) = ( ( ( AF1 + ( ( - L ) * Aid ) ) * (i,j) ) + ( ( L * Aid ) * (i,j) ) ) by A12,MATRIX_3:def 3
.= ( ( ( AF1 * (i,j) ) + ( ( ( - L ) * Aid ) * (i,j) ) ) + ( ( L * Aid ) * (i,j) ) ) by A12,MATRIX_3:def 3
.= ( ( AF1 * (i,j) ) + ( ( ( ( - L ) * Aid ) * (i,j) ) + ( ( L * Aid ) * (i,j) ) ) ) by RLVECT_1:def 3
.= ( ( AF1 * (i,j) ) + ( ( ( - L ) * ( Aid * (i,j) ) ) + ( ( L * Aid ) * (i,j) ) ) ) by A12,A11,MATRIX_3:def 5
.= ( ( AF1 * (i,j) ) + ( ( ( - L ) * ( Aid * (i,j) ) ) + ( L * ( Aid * (i,j) ) ) ) ) by A12,A11,MATRIX_3:def 5
.= ( ( AF1 * (i,j) ) + ( ( ( - L ) + L ) * ( Aid * (i,j) ) ) ) by VECTSP_1:def 3
.= ( ( AF1 * (i,j) ) + ( ( 0. K ) * ( Aid * (i,j) ) ) ) by VECTSP_1:16
.= ( ( AF1 * (i,j) ) + ( 0. K ) ) by VECTSP_1:7
.= ( AF1 * (i,j) ) by RLVECT_1:def 4;
end;
A13: ( Len ( mlt (( ( len J ) |-> L ),( 1. (K,( Len J )) )) ) ) = ( Len ( 1. (K,( Len J )) ) ) by MATRIXJ1:62
.= ( Len J ) by MATRIXJ1:56;
( dom ( Len J ) ) = ( dom ( 1. (K,( Len J )) ) ) by MATRIXJ1:def 8;
then A14: ( len ( 1. (K,( Len J )) ) ) = ( len ( Len J ) ) by FINSEQ_3:29
.= ( len J ) by CARD_1:def 7;
A15: ( Sum ( Len J ) ) = ( len ( AutMt (FLV,b1,b1) ) ) by A7,MATRIXJ1:def 5
.= ( len b1 ) by MATRIX_1:def 2;
A16: ( Width ( mlt (( ( len J ) |-> L ),( 1. (K,( Len J )) )) ) ) = ( Width ( 1. (K,( Len J )) ) ) by MATRIXJ1:62
.= ( Len J ) by MATRIXJ1:56
.= ( Width J ) by MATRIXJ1:46;
( Mx2Tran (( AutMt (( ( - L ) * ( id V1 ) ),b1,b1) ),b1,b1) ) = ( ( - L ) * ( id V1 ) ) by MATRLIN2:34
.= ( ( - L ) * ( Mx2Tran (Aid,b1,b1) ) ) by MATRLIN2:34
.= ( Mx2Tran (( ( - L ) * Aid ),b1,b1) ) by MATRLIN2:38;
then ( AutMt (( ( - L ) * ( id V1 ) ),b1,b1) ) = ( ( - L ) * Aid ) by MATRLIN2:39;
then ( ( AutMt (FLV,b1,b1) ) + ( L * Aid ) ) = ( ( AF1 + ( ( - L ) * Aid ) ) + ( L * Aid ) ) by A6,MATRLIN:42
.= AF1 by A10,MATRIX_1:27;
hence AF1 = ( ( block_diagonal (J,( 0. K )) ) + ( L * ( 1. (K,( Sum ( Len J ) )) ) ) ) by A7,A15,MATRLIN2:28
.= ( ( block_diagonal (J,( 0. K )) ) + ( L * ( block_diagonal (( 1. (K,( Len J )) ),( 0. K )) ) ) ) by MATRIXJ1:61
.= ( ( block_diagonal (J,( 0. K )) ) + ( block_diagonal (( mlt (( ( len J ) |-> L ),( 1. (K,( Len J )) )) ),( L * ( 0. K ) )) ) ) by A14,MATRIXJ1:65
.= ( ( block_diagonal (J,( 0. K )) ) + ( block_diagonal (( mlt (( ( len J ) |-> L ),( 1. (K,( Len J )) )) ),( 0. K )) ) ) by VECTSP_1:7
.= ( block_diagonal (JM,( ( 0. K ) + ( 0. K ) )) ) by A13,A16,MATRIXJ1:72
.= ( block_diagonal (JM,( 0. K )) ) by RLVECT_1:def 4;
end;
