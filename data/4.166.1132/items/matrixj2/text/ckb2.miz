environ
vocabularies NUMBERS,NAT_1,VECTSP_1,SUBSET_1,FUNCT_1,RELAT_1,FUNCT_4,XBOOLE_0,FUNCOP_1,MATRIX_1,FINSEQ_1,TREES_1,ARYTM_3,GROUP_1,SUPINF_2,ZFMISC_1,MATRIX_2,XXREAL_0,MATRIX_3,FINSEQ_2,ALGSTR_0,SETWISEO,CARD_3,CARD_1,INCSP_1,MESFUNC1,STRUCT_0,FVSUM_1,PARTFUN1,RVSUM_1,ARYTM_1,MATRIX_6,MATRIXJ1,MATHMORP,ORDINAL4,RFINSEQ,BCIALG_2,NEWTON,GRCAT_1,FUNCSDOM,VECTSP_2,RANKNULL,VECTSP10,HURWITZ,TARSKI,RLSUB_1,RLVECT_5,MATRLIN,MATRLIN2,MATRIXR1,FINSEQ_4,RLVECT_3,FINSET_1,RLVECT_2,POLYNOM5,VECTSP11,RLSUB_2,PRVECT_1,MATRIXJ2,UNIALG_1,MSSUBFAM;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,CARD_1,XCMPLX_0,ALGSTR_0,XXREAL_0,NAT_1,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,SETWOP_2,FINSEQ_1,PRVECT_1,FUNCOP_1,STRUCT_0,RLVECT_1,GROUP_1,VECTSP_1,FINSEQ_2,MATRIX_1,MATRIX_2,FVSUM_1,NAT_D,GROUP_4,MATRIX_3,MATRIX_6,FUNCT_4,DOMAIN_1,VECTSP_4,VECTSP_6,VECTSP_7,VECTSP_9,MATRIX13,MATRLIN,FUNCT_7,LAPLACE,MOD_2,RFINSEQ,VECTSP_2,VECTSP_5,MATRIX15,RANKNULL,FUNCSDOM,GRCAT_1,POLYNOM5,WSIERP_1,MATRIXJ1,MATRLIN2,VECTSP11;
definitions STRUCT_0,TARSKI,RLVECT_1,FINSEQ_1,VECTSP_4,RELAT_1,GROUP_4,FVSUM_1,MATRIX_1,FUNCT_1,FUNCOP_1,MATRIXJ1,MATRLIN2;
theorems ZFMISC_1,RLVECT_1,MATRIX_1,MATRIX_2,MATRIX_3,VECTSP_1,NAT_1,FINSEQ_2,CARD_1,CARD_2,FINSEQ_1,FINSEQ_3,FRECHET,FUNCT_1,FUNCT_2,FUNCT_7,FUNCOP_1,FVSUM_1,GROUP_1,LAPLACE,MATRIX_6,MATRIX13,MATRIXR1,MATRIXR2,MATRLIN,ORDINAL1,PARTFUN1,RELAT_1,STIRL2_1,STRUCT_0,TARSKI,WELLORD2,VECTSP_4,VECTSP_6,VECTSP_7,VECTSP_9,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,MATRIX15,MOD_2,VECTSP10,RANKNULL,VECTSP_5,FINSEQ_4,FINSEQ_5,RFINSEQ,RVSUM_1,POLYNOM3,POLYNOM4,MATRIXJ1,MATRLIN2,VECTSP11,GRCAT_1,FUNCT_4,NAT_D,CKB1;
schemes NAT_1,MATRIX_1,FUNCT_2;
registrations XBOOLE_0,FINSET_1,STRUCT_0,VECTSP_1,FUNCT_2,ORDINAL1,XXREAL_0,NAT_1,FINSEQ_1,RELAT_1,CARD_1,FINSEQ_2,XREAL_0,VECTSP_9,VALUED_0,MATRIXJ1,VECTSP11,POLYNOM5,FUNCOP_1,RELSET_1,MOD_2,GRCAT_1,PRVECT_1,MATRIX13,MATRLIN2;
constructors FINSOP_1,XXREAL_0,GROUP_4,WELLORD2,VECTSP_7,VECTSP_9,MATRIX_6,REALSET1,LAPLACE,VECTSP_5,RANKNULL,MATRIX15,POLYNOM1,POLYNOM5,MATRIXJ1,MATRLIN2,VECTSP11,REAL_1,BINARITH,RELSET_1,FUNCT_7,MATRIX13,FVSUM_1;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve i for Nat;
reserve j for Nat;
reserve n for Nat;
reserve K for Field;
reserve L for (Element of K);
definition
let K;
let L;
let n;
func Jordan_block (L,n) -> (Matrix of K)
means
:Def1: ((( len it ) = n & ( width it ) = n) & (for i holds (for j holds ([ i,j ] in ( Indices it ) implies (((i = j implies ( it * (i,j) ) = L) & (( i + 1 ) = j implies ( it * (i,j) ) = ( 1_ K ))) & ((i <> j & ( i + 1 ) <> j) implies ( it * (i,j) ) = ( 0. K )))))));
existence
proof
defpred P[ Nat,Nat,set ]
 means
((($1 = $2 implies $3 = L) & (( $1 + 1 ) = $2 implies $3 = ( 1_ K ))) & (($1 <> $2 & ( $1 + 1 ) <> $2) implies $3 = ( 0. K )));
reconsider N = n as (Element of ( NAT )) by ORDINAL1:def 12;
A1: (for i holds (for j holds ([ i,j ] in [: ( Seg N ),( Seg N ) :] implies (ex x being (Element of K) st P[ i,j,x ]))))
proof
let i;
let j;
assume that
[ i,j ] in [: ( Seg N ),( Seg N ) :];
per cases ;
suppose A2: i = j;

take L;
thus thesis by A2;
end;
suppose A3: ( i + 1 ) = j;

take ( 1_ K );
thus thesis by A3;
end;
suppose A4: (i <> j & ( i + 1 ) <> j);

take ( 0. K );
thus thesis by A4;
end;
end;
consider M being (Matrix of N,K) such that A6: (for i holds (for j holds ([ i,j ] in ( Indices M ) implies P[ i,j,( M * (i,j) ) ]))) from MATRIX_1:sch 2(A1);
take M;
thus thesis by A6,MATRIX_1:24;
end;
uniqueness
proof
let M1 being (Matrix of K),M2 being (Matrix of K);
assume that
A7: (( len M1 ) = n & ( width M1 ) = n)
and
A8: (for i holds (for j holds ([ i,j ] in ( Indices M1 ) implies (((i = j implies ( M1 * (i,j) ) = L) & (( i + 1 ) = j implies ( M1 * (i,j) ) = ( 1_ K ))) & ((i <> j & ( i + 1 ) <> j) implies ( M1 * (i,j) ) = ( 0. K ))))))
and
A9: (( len M2 ) = n & ( width M2 ) = n)
and
A10: (for i holds (for j holds ([ i,j ] in ( Indices M2 ) implies (((i = j implies ( M2 * (i,j) ) = L) & (( i + 1 ) = j implies ( M2 * (i,j) ) = ( 1_ K ))) & ((i <> j & ( i + 1 ) <> j) implies ( M2 * (i,j) ) = ( 0. K ))))));
now
let i;
let j;
assume that
A11: [ i,j ] in ( Indices M1 );
A12: ( Indices M1 ) = [: ( Seg n ),( Seg n ) :] by A7,FINSEQ_1:def 3
.= ( Indices M2 ) by A9,FINSEQ_1:def 3;
((i = j or ( i + 1 ) = j) or (i <> j & ( i + 1 ) <> j));
then (((( M1 * (i,j) ) = L & ( M2 * (i,j) ) = L) or (( M1 * (i,j) ) = ( 1_ K ) & ( M2 * (i,j) ) = ( 1_ K ))) or (( M1 * (i,j) ) = ( 0. K ) & ( M2 * (i,j) ) = ( 0. K ))) by A8,A10,A11,A12;
hence ( M1 * (i,j) ) = ( M2 * (i,j) );
end;
hence thesis by A7,A9,MATRIX_1:21;
end;
end;
