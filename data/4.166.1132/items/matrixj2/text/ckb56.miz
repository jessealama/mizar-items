environ
vocabularies NUMBERS,NAT_1,VECTSP_1,SUBSET_1,FUNCT_1,RELAT_1,FUNCT_4,XBOOLE_0,FUNCOP_1,MATRIX_1,FINSEQ_1,TREES_1,ARYTM_3,GROUP_1,SUPINF_2,ZFMISC_1,MATRIX_2,XXREAL_0,MATRIX_3,FINSEQ_2,ALGSTR_0,SETWISEO,CARD_3,CARD_1,INCSP_1,MESFUNC1,STRUCT_0,FVSUM_1,PARTFUN1,RVSUM_1,ARYTM_1,MATRIX_6,MATRIXJ1,MATHMORP,ORDINAL4,RFINSEQ,BCIALG_2,NEWTON,GRCAT_1,FUNCSDOM,VECTSP_2,RANKNULL,VECTSP10,HURWITZ,TARSKI,RLSUB_1,RLVECT_5,MATRLIN,MATRLIN2,MATRIXR1,FINSEQ_4,RLVECT_3,FINSET_1,RLVECT_2,POLYNOM5,VECTSP11,RLSUB_2,PRVECT_1,MATRIXJ2,UNIALG_1,MSSUBFAM;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,CARD_1,XCMPLX_0,ALGSTR_0,XXREAL_0,NAT_1,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,SETWOP_2,FINSEQ_1,PRVECT_1,FUNCOP_1,STRUCT_0,RLVECT_1,GROUP_1,VECTSP_1,FINSEQ_2,MATRIX_1,MATRIX_2,FVSUM_1,NAT_D,GROUP_4,MATRIX_3,MATRIX_6,FUNCT_4,DOMAIN_1,VECTSP_4,VECTSP_6,VECTSP_7,VECTSP_9,MATRIX13,MATRLIN,FUNCT_7,LAPLACE,MOD_2,RFINSEQ,VECTSP_2,VECTSP_5,MATRIX15,RANKNULL,FUNCSDOM,GRCAT_1,POLYNOM5,WSIERP_1,MATRIXJ1,MATRLIN2,VECTSP11,CKB2,CKB3,CKB13,CKB16,CKB18,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB35,CKB36;
definitions STRUCT_0,TARSKI,RLVECT_1,FINSEQ_1,VECTSP_4,RELAT_1,GROUP_4,FVSUM_1,MATRIX_1,FUNCT_1,FUNCOP_1,MATRIXJ1,MATRLIN2,CKB2,CKB13,CKB18,CKB30,CKB35;
theorems ZFMISC_1,RLVECT_1,MATRIX_1,MATRIX_2,MATRIX_3,VECTSP_1,NAT_1,FINSEQ_2,CARD_1,CARD_2,FINSEQ_1,FINSEQ_3,FRECHET,FUNCT_1,FUNCT_2,FUNCT_7,FUNCOP_1,FVSUM_1,GROUP_1,LAPLACE,MATRIX_6,MATRIX13,MATRIXR1,MATRIXR2,MATRLIN,ORDINAL1,PARTFUN1,RELAT_1,STIRL2_1,STRUCT_0,TARSKI,WELLORD2,VECTSP_4,VECTSP_6,VECTSP_7,VECTSP_9,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,MATRIX15,MOD_2,VECTSP10,RANKNULL,VECTSP_5,FINSEQ_4,FINSEQ_5,RFINSEQ,RVSUM_1,POLYNOM3,POLYNOM4,MATRIXJ1,MATRLIN2,VECTSP11,GRCAT_1,FUNCT_4,NAT_D,CKB1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB17,CKB18,CKB19,CKB20,CKB23,CKB30,CKB31,CKB34,CKB35,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55;
schemes NAT_1,MATRIX_1,FUNCT_2;
registrations XBOOLE_0,FINSET_1,STRUCT_0,VECTSP_1,FUNCT_2,ORDINAL1,XXREAL_0,NAT_1,FINSEQ_1,RELAT_1,CARD_1,FINSEQ_2,XREAL_0,VECTSP_9,VALUED_0,MATRIXJ1,VECTSP11,POLYNOM5,FUNCOP_1,RELSET_1,MOD_2,GRCAT_1,PRVECT_1,MATRIX13,MATRLIN2,CKB14,CKB15,CKB21,CKB22,CKB32,CKB33;
constructors FINSOP_1,XXREAL_0,GROUP_4,WELLORD2,VECTSP_7,VECTSP_9,MATRIX_6,REALSET1,LAPLACE,VECTSP_5,RANKNULL,MATRIX15,POLYNOM1,POLYNOM5,MATRIXJ1,MATRLIN2,VECTSP11,REAL_1,BINARITH,RELSET_1,FUNCT_7,MATRIX13,FVSUM_1,CKB2,CKB3,CKB13,CKB18,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB35;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve i for Nat;
reserve n for Nat;
reserve K for Field;
reserve V1 for  finite-dimensional (VectSp of K);
reserve b1 for (OrdBasis of V1);
theorem
(for K being  algebraic-closed Field holds (for M being (Matrix of n,K) holds (ex J being  non-empty (FinSequence_of_Jordan_block of K) st (ex P being (Matrix of n,K) st ((( Sum ( Len J ) ) = n & P is  invertible) & M = ( ( P * ( block_diagonal (J,( 0. K )) ) ) * ( P ~ ) ))))))
proof
let K being  algebraic-closed Field;
let M being (Matrix of n,K);
per cases ;
suppose A1: n = ( 0 );

then reconsider P = ( {} ) as (Matrix of n,K) by MATRIX_1:13;
reconsider J = ( {} ) as (FinSequence_of_Jordan_block of K) by CKB17:1;
reconsider J as  non-empty (FinSequence_of_Jordan_block of K);
take J;
take P;
A2: ( Len J ) = ( <*> ( NAT ) ) by CARD_1:27
.= ( <*> ( REAL ) );
hence ( Sum ( Len J ) ) = n by A1,RVSUM_1:72;
A3: ( 1_ K ) <> ( 0. K );
( Det P ) = ( 1_ K ) by A1,MATRIXR2:41;
hence P is  invertible by A3,LAPLACE:34;
reconsider B = ( block_diagonal (J,( 0. K )) ) as (Matrix of n,K) by A1,A2,RVSUM_1:72;
M = ( ( P * B ) * ( P ~ ) ) by A1,MATRIX_1:35;
hence thesis;
end;
suppose A4: n > ( 0 );

set V = ( n -VectSp_over K );
set B = the (OrdBasis of V);
A5: ( len B ) = ( dim V ) by MATRLIN2:21
.= n by MATRIX13:112;
then reconsider M9 = M as (Matrix of ( len B ),K);
set T = ( Mx2Tran (M9,B,B) );
( dim V ) = n by MATRIX13:112;
then V is non  trivial by A4,MATRLIN2:42;
then consider J being  non-empty (FinSequence_of_Jordan_block of K),b1 being (OrdBasis of V) such that A6: ( AutMt (T,b1,b1) ) = ( block_diagonal (J,( 0. K )) ) and (for L being (Scalar of K) holds (L is (eigenvalue of T) iff (ex i st (i in ( dom J ) & ( J . i ) = ( Jordan_block (L,( len ( J . i ) )) ))))) by CKB55:1;
A7: ( dom T ) = ( [#] V ) by FUNCT_2:def 1;
reconsider P = ( AutEqMt (( id V ),B,b1) ) as (Matrix of n,K) by A5;
take J;
take P;
A8: (( width P ) = n & ( len ( P ~ ) ) = n) by A4,MATRIX_1:23;
A9: ( rng T ) c= ( [#] V ) by RELAT_1:def 19;
A10: ( len b1 ) = ( dim V ) by MATRLIN2:21
.= n by MATRIX13:112;
then A11: (( len ( AutMt (T,b1,b1) ) ) = n & ( width ( AutMt (T,b1,b1) ) ) = n) by A4,MATRIX_1:23;
thus ( Sum ( Len J ) ) = ( len ( AutMt (T,b1,b1) ) ) by A6,MATRIXJ1:def 5
.= n by A10,MATRIX_1:def 2;
thus P is  invertible by A5,MATRLIN2:29;
thus M = ( AutMt (T,B,B) ) by MATRLIN2:36
.= ( AutMt (( T * ( id V ) ),B,B) ) by A7,RELAT_1:52
.= ( ( AutMt (( id V ),B,b1) ) * ( AutMt (T,b1,B) ) ) by A4,A5,A10,MATRLIN:41
.= ( P * ( AutMt (T,b1,B) ) ) by A5,A10,MATRLIN2:def 2
.= ( P * ( AutMt (( ( id V ) * T ),b1,B) ) ) by A9,RELAT_1:53
.= ( P * ( ( AutMt (T,b1,b1) ) * ( AutMt (( id V ),b1,B) ) ) ) by A4,A10,MATRLIN:41
.= ( P * ( ( AutMt (T,b1,b1) ) * ( AutEqMt (( id V ),b1,B) ) ) ) by A5,A10,MATRLIN2:def 2
.= ( P * ( ( AutMt (T,b1,b1) ) * ( P ~ ) ) ) by A5,MATRLIN2:29
.= ( ( P * ( block_diagonal (J,( 0. K )) ) ) * ( P ~ ) ) by A6,A8,A11,MATRIX_3:33;
end;
end;
