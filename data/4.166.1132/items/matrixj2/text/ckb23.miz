environ
vocabularies NUMBERS,NAT_1,VECTSP_1,SUBSET_1,FUNCT_1,RELAT_1,FUNCT_4,XBOOLE_0,FUNCOP_1,MATRIX_1,FINSEQ_1,TREES_1,ARYTM_3,GROUP_1,SUPINF_2,ZFMISC_1,MATRIX_2,XXREAL_0,MATRIX_3,FINSEQ_2,ALGSTR_0,SETWISEO,CARD_3,CARD_1,INCSP_1,MESFUNC1,STRUCT_0,FVSUM_1,PARTFUN1,RVSUM_1,ARYTM_1,MATRIX_6,MATRIXJ1,MATHMORP,ORDINAL4,RFINSEQ,BCIALG_2,NEWTON,GRCAT_1,FUNCSDOM,VECTSP_2,RANKNULL,VECTSP10,HURWITZ,TARSKI,RLSUB_1,RLVECT_5,MATRLIN,MATRLIN2,MATRIXR1,FINSEQ_4,RLVECT_3,FINSET_1,RLVECT_2,POLYNOM5,VECTSP11,RLSUB_2,PRVECT_1,MATRIXJ2,UNIALG_1,MSSUBFAM;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,CARD_1,XCMPLX_0,ALGSTR_0,XXREAL_0,NAT_1,FINSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,SETWOP_2,FINSEQ_1,PRVECT_1,FUNCOP_1,STRUCT_0,RLVECT_1,GROUP_1,VECTSP_1,FINSEQ_2,MATRIX_1,MATRIX_2,FVSUM_1,NAT_D,GROUP_4,MATRIX_3,MATRIX_6,FUNCT_4,DOMAIN_1,VECTSP_4,VECTSP_6,VECTSP_7,VECTSP_9,MATRIX13,MATRLIN,FUNCT_7,LAPLACE,MOD_2,RFINSEQ,VECTSP_2,VECTSP_5,MATRIX15,RANKNULL,FUNCSDOM,GRCAT_1,POLYNOM5,WSIERP_1,MATRIXJ1,MATRLIN2,VECTSP11,CKB2,CKB3,CKB13,CKB16,CKB18;
definitions STRUCT_0,TARSKI,RLVECT_1,FINSEQ_1,VECTSP_4,RELAT_1,GROUP_4,FVSUM_1,MATRIX_1,FUNCT_1,FUNCOP_1,MATRIXJ1,MATRLIN2,CKB2,CKB13,CKB18;
theorems ZFMISC_1,RLVECT_1,MATRIX_1,MATRIX_2,MATRIX_3,VECTSP_1,NAT_1,FINSEQ_2,CARD_1,CARD_2,FINSEQ_1,FINSEQ_3,FRECHET,FUNCT_1,FUNCT_2,FUNCT_7,FUNCOP_1,FVSUM_1,GROUP_1,LAPLACE,MATRIX_6,MATRIX13,MATRIXR1,MATRIXR2,MATRLIN,ORDINAL1,PARTFUN1,RELAT_1,STIRL2_1,STRUCT_0,TARSKI,WELLORD2,VECTSP_4,VECTSP_6,VECTSP_7,VECTSP_9,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,MATRIX15,MOD_2,VECTSP10,RANKNULL,VECTSP_5,FINSEQ_4,FINSEQ_5,RFINSEQ,RVSUM_1,POLYNOM3,POLYNOM4,MATRIXJ1,MATRLIN2,VECTSP11,GRCAT_1,FUNCT_4,NAT_D,CKB1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB17,CKB18,CKB19,CKB20;
schemes NAT_1,MATRIX_1,FUNCT_2;
registrations XBOOLE_0,FINSET_1,STRUCT_0,VECTSP_1,FUNCT_2,ORDINAL1,XXREAL_0,NAT_1,FINSEQ_1,RELAT_1,CARD_1,FINSEQ_2,XREAL_0,VECTSP_9,VALUED_0,MATRIXJ1,VECTSP11,POLYNOM5,FUNCOP_1,RELSET_1,MOD_2,GRCAT_1,PRVECT_1,MATRIX13,MATRLIN2,CKB14,CKB15,CKB21,CKB22;
constructors FINSOP_1,XXREAL_0,GROUP_4,WELLORD2,VECTSP_7,VECTSP_9,MATRIX_6,REALSET1,LAPLACE,VECTSP_5,RANKNULL,MATRIX15,POLYNOM1,POLYNOM5,MATRIXJ1,MATRLIN2,VECTSP11,REAL_1,BINARITH,RELSET_1,FUNCT_7,MATRIX13,FVSUM_1,CKB2,CKB3,CKB13,CKB18;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve i for Nat;
reserve n for Nat;
reserve K for Field;
reserve a for (Element of K);
reserve L for (Element of K);
theorem
Th12: (for J being (FinSequence_of_Jordan_block of L,K) holds ( J (+) ( mlt (( ( len J ) |-> a ),( 1. (K,( Len J )) )) ) ) is (FinSequence_of_Jordan_block of ( L + a ),K))
proof
let J being (FinSequence_of_Jordan_block of L,K);
set M = ( mlt (( ( len J ) |-> a ),( 1. (K,( Len J )) )) );
A1: (for i holds (i in ( dom ( J (+) M ) ) implies (ex n st ( ( J (+) M ) . i ) = ( Jordan_block (( L + a ),n) ))))
proof
A2: ( dom M ) = ( dom ( 1. (K,( Len J )) ) ) by MATRIXJ1:def 9;
A3: ( dom J ) = ( Seg ( len J ) ) by FINSEQ_1:def 3;
A4: ( dom ( 1. (K,( Len J )) ) ) = ( dom ( Len J ) ) by MATRIXJ1:def 8;
let i;
assume that
A5: i in ( dom ( J (+) M ) );
A6: i in ( dom J ) by A5,MATRIXJ1:def 10;
then consider n such that A7: ( J . i ) = ( Jordan_block (L,n) ) by CKB18:def 1;
take n;
A8: ( len ( J . i ) ) = n by A7,MATRIX_1:24;
A9: ( dom ( Len J ) ) = ( dom J ) by MATRIXJ1:def 3;
then A10: ( ( Len J ) . i ) = ( len ( J . i ) ) by A6,MATRIXJ1:def 3;
( len ( ( len J ) |-> a ) ) = ( len J ) by CARD_1:def 7;
then ( dom ( ( len J ) |-> a ) ) = ( dom J ) by FINSEQ_3:29;
then ( ( ( len J ) |-> a ) /. i ) = ( ( ( len J ) |-> a ) . i ) by A6,PARTFUN1:def 6
.= a by A6,A3,FINSEQ_2:57;
then ( M . i ) = ( a * ( ( 1. (K,( Len J )) ) . i ) ) by A6,A2,A4,A9,MATRIXJ1:def 9
.= ( a * ( 1. (K,n) ) ) by A6,A4,A9,A10,A8,MATRIXJ1:def 8;
hence ( ( J (+) M ) . i ) = ( ( Jordan_block (L,n) ) + ( a * ( 1. (K,n) ) ) ) by A5,A7,MATRIXJ1:def 10
.= ( Jordan_block (( L + a ),n) ) by CKB12:1;
end;
( J (+) M ) is  Jordan-block-yielding
proof
let i;
assume i in ( dom ( J (+) M ) );
then (ex n st ( ( J (+) M ) . i ) = ( Jordan_block (( L + a ),n) )) by A1;
hence thesis;
end;
then reconsider JM = ( J (+) M ) as (FinSequence_of_Jordan_block of K);
JM is (FinSequence_of_Jordan_block of ( L + a ),K)
proof
let i;
assume i in ( dom JM );
hence thesis by A1;
end;
hence thesis;
end;
