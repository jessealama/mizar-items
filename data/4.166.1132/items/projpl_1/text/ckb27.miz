environ
vocabularies INCSP_1,INCPROJ,ZFMISC_1,ANALOAF,PARSP_2,SUBSET_1,MCART_1,RELAT_1,PROJPL_1;
notations ZFMISC_1,SUBSET_1,MCART_1,DOMAIN_1,INCSP_1,INCPROJ,CKB1,CKB2,CKB3,CKB4,CKB6,CKB10,CKB11,CKB12,CKB15,CKB25,CKB26;
definitions CKB2,CKB3,CKB4,CKB6,CKB11,CKB15,CKB25,CKB26;
theorems INCPROJ,PROJRED1,MCART_1,ZFMISC_1,INCSP_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
registrations XBOOLE_0,INCPROJ;
constructors DOMAIN_1,INCPROJ,CKB2,CKB3,CKB4,CKB6,CKB11,CKB15,CKB25,CKB26;
begin
theorem
Th16: (for G being IncProjSp holds (for a,b being (POINT of G) holds (for L being (LINE of G) holds (a <> b implies (((a on ( a * b ) & b on ( a * b )) & ( a * b ) = ( b * a )) & ((a on L & b on L) implies L = ( a * b )))))))
proof
let G being IncProjSp;
let a being (POINT of G),b being (POINT of G);
let L being (LINE of G);
assume A1: a <> b;
then { a,b } on ( a * b ) by CKB26:def 1;
hence ((a on ( a * b ) & b on ( a * b )) & ( a * b ) = ( b * a )) by A1,CKB26:def 1,INCSP_1:1;
assume (a on L & b on L);
then { a,b } on L by INCSP_1:1;
hence thesis by A1,CKB26:def 1;
end;
