environ
vocabularies XBOOLE_0,ORDERS_2,OSALG_1,PBOOLE,SUBSET_1,XXREAL_0,FUNCT_1,TARSKI,RELAT_1,MSUALG_1,MSUALG_2,SEQM_3,STRUCT_0,UNIALG_2,CARD_3,ZFMISC_1,QC_LANG1,SETFAM_1,BINOP_1,LATTICES,EQREL_1,XXREAL_2,OSALG_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,SETFAM_1,BINOP_1,CARD_3,MBOOLEAN,PBOOLE,FINSEQ_2,STRUCT_0,LATTICES,MSUALG_1,ORDERS_2,MSUALG_2,OSALG_1,CKB3,CKB5,CKB12,CKB16,CKB18,CKB22,CKB29,CKB30,CKB34,CKB37,CKB40,CKB45,CKB56,CKB64;
definitions TARSKI,PBOOLE,LATTICES,OSALG_1,MSUALG_2,CKB3,CKB5,CKB16,CKB18,CKB22,CKB29,CKB30,CKB34,CKB37,CKB40,CKB45,CKB56,CKB64;
theorems TARSKI,XBOOLE_0,XBOOLE_1,FUNCT_1,PBOOLE,CARD_3,MSUALG_1,FUNCT_2,ZFMISC_1,SETFAM_1,BINOP_1,LATTICES,RELAT_1,OSALG_1,ORDERS_2,MSUALG_2,MBOOLEAN,PARTFUN1,CKB1,CKB2,CKB3,CKB5,CKB8,CKB10,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB34,CKB35,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB45,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69;
schemes XBOOLE_0,BINOP_1,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,LATTICES,MSUALG_1,MSUALG_2,ORDERS_3,OSALG_1,FUNCT_1,RELAT_1,PBOOLE,CKB4,CKB6,CKB7,CKB9,CKB11,CKB13,CKB14,CKB33,CKB36,CKB44,CKB46,CKB53,CKB54,CKB55;
constructors SETFAM_1,MBOOLEAN,MSUALG_2,ORDERS_3,OSALG_1,RELSET_1,FINSEQ_2,CARD_3,CKB3,CKB5,CKB16,CKB18,CKB22,CKB29,CKB30,CKB34,CKB37,CKB40,CKB45,CKB56,CKB64;
requirements BOOLE,SUBSET;
begin
reserve x for set;
reserve S1 for OrderSortedSign;
reserve OU0 for (OSAlgebra of S1);
definition
let S1;
let OU0;
func OSSub OU0 -> set
means
:Def15: (for x holds (x in it iff x is  strict  strict (OSSubAlgebra of OU0)));
existence
proof
set X = { ( GenOSAlg ( @ A ) ) where A is (Element of ( OSSubSort OU0 )): (not contradiction) };
take X;
let x;
thus (x in X implies x is  strict  strict (OSSubAlgebra of OU0))
proof
assume x in X;
then (ex A being (Element of ( OSSubSort OU0 )) st x = ( GenOSAlg ( @ A ) ));
hence thesis;
end;

assume x is  strict  strict (OSSubAlgebra of OU0);
then reconsider a = x as  strict (OSSubAlgebra of OU0);
reconsider A = (the Sorts of a) as (OSSubset of OU0) by CKB15:1;
A is  opers_closed by CKB15:1;
then reconsider h = A as (Element of ( OSSubSort OU0 )) by CKB39:1;
a = ( GenOSAlg ( @ h ) ) by CKB62:1;
hence thesis;
end;
uniqueness
proof
defpred P[ set ]
 means
$1 is  strict  strict (OSSubAlgebra of OU0);
thus (for X1,X2 being set holds (((for x being set holds (x in X1 iff P[ x ])) & (for x being set holds (x in X2 iff P[ x ]))) implies X1 = X2)) from XBOOLE_0:sch 3;
end;
end;
