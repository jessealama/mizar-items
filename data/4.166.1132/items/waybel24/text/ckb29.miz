environ
vocabularies WAYBEL_0,WAYBEL11,WAYBEL_9,SUBSET_1,WAYBEL17,EQREL_1,ORDINAL2,FUNCT_1,STRUCT_0,TARSKI,YELLOW_1,XBOOLE_0,ORDERS_2,RELAT_2,SEQM_3,XXREAL_0,RELAT_1,FUNCOP_1,LATTICES,LATTICE3,NEWTON,REWRITE1,YELLOW_0,FUNCT_2,ZFMISC_1,BORSUK_1,FUNCT_5,MCART_1,PRE_TOPC,CAT_1,MONOID_0,WAYBEL_3,PBOOLE,CARD_3,FUNCT_4,WAYBEL24;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,BINOP_1,DOMAIN_1,FUNCT_5,MONOID_0,CARD_3,PBOOLE,FUNCOP_1,STRUCT_0,PRE_TOPC,ORDERS_2,LATTICE3,FUNCT_7,YELLOW_0,ORDERS_3,WAYBEL_0,YELLOW_1,YELLOW_2,WAYBEL_3,WAYBEL_9,WAYBEL11,WAYBEL17,YELLOW_3,CKB11,CKB13;
definitions TARSKI,WAYBEL_0,LATTICE3,ORDERS_2,MONOID_0,XBOOLE_0,BINOP_1,STRUCT_0,CKB11,CKB13;
theorems WAYBEL_0,TARSKI,FUNCT_1,FUNCT_2,YELLOW_0,YELLOW_2,WAYBEL_1,ZFMISC_1,LATTICE3,WAYBEL10,CAT_2,WAYBEL17,YELLOW_3,MCART_1,FUNCT_5,YELLOW_5,YELLOW10,WAYBEL_9,FUNCOP_1,YELLOW_1,ORDERS_2,WAYBEL_3,CARD_3,FUNCT_7,RELAT_1,WAYBEL15,RELSET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB4,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB17,CKB18,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes XBOOLE_0,CKB6,CKB7;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FUNCT_2,STRUCT_0,LATTICE3,YELLOW_0,MONOID_0,WAYBEL_0,YELLOW_1,YELLOW_3,WAYBEL_3,WAYBEL10,WAYBEL11,WAYBEL17,PRE_TOPC,RELAT_1,CKB2,CKB3,CKB16,CKB19,CKB20,CKB21,CKB22;
constructors FUNCT_7,BORSUK_1,MONOID_0,ORDERS_3,WAYBEL_1,WAYBEL_3,WAYBEL17,YELLOW_3,CKB11,CKB13;
requirements SUBSET,BOOLE;
begin
reserve X1 for non  empty RelStr;
reserve X2 for non  empty RelStr;
reserve Y for non  empty RelStr;
reserve f for (Function of [: X1,X2 :],Y);
theorem
(for R,S,T being  complete LATTICE holds (for f being (Function of [: R,S :],T) holds ((for a being (Element of R) holds (for b being (Element of S) holds (( Proj (f,a) ) is  directed-sups-preserving & ( Proj (f,b) ) is  directed-sups-preserving))) implies f is  directed-sups-preserving)))
proof
let R being  complete LATTICE;
let S being  complete LATTICE;
let T being  complete LATTICE;
let f being (Function of [: R,S :],T);
assume A1: (for a being (Element of R) holds (for b being (Element of S) holds (( Proj (f,a) ) is  directed-sups-preserving & ( Proj (f,b) ) is  directed-sups-preserving)));
(for X being (Subset of [: R,S :]) holds (X is non  empty  directed implies f preserves_sup_of X))
proof
let X being (Subset of [: R,S :]);
assume X is non  empty  directed;
then reconsider X as non  empty  directed (Subset of [: R,S :]);
(for a being (Element of R) holds (for b being (Element of S) holds (( Proj (f,a) ) is  monotone & ( Proj (f,b) ) is  monotone))) by A1,WAYBEL17:3;
then A2: f is  monotone by CKB23:1;
f preserves_sup_of X
proof
(( proj1 X ) is  directed non  empty & ( Proj (f,( "\/" (( proj2 X ),S) )) ) is  directed-sups-preserving) by A1,YELLOW_3:21,YELLOW_3:22;
then A3: ( Proj (f,( "\/" (( proj2 X ),S) )) ) preserves_sup_of ( proj1 X ) by WAYBEL_0:def 37;
A4:  ex_sup_of ( ( Proj (f,( sup ( proj2 X ) )) ) .: ( proj1 X ) ),T by YELLOW_0:17;
assume A5:  ex_sup_of X,[: R,S :];
then A6:  ex_sup_of ( proj1 X ),R by YELLOW_3:41;
A7:  ex_sup_of ( proj2 X ),S by A5,YELLOW_3:41;
(for b being (Element of T) holds (b in ( ( Proj (f,( sup ( proj2 X ) )) ) .: ( proj1 X ) ) implies b <= ( sup ( f .: X ) )))
proof
let b being (Element of T);
assume b in ( ( Proj (f,( sup ( proj2 X ) )) ) .: ( proj1 X ) );
then consider b1 being set such that A8: b1 in ( dom ( Proj (f,( sup ( proj2 X ) )) ) ) and A9: b1 in ( proj1 X ) and A10: b = ( ( Proj (f,( sup ( proj2 X ) )) ) . b1 ) by FUNCT_1:def 6;
reconsider b1 as (Element of R) by A8;
A11: ( ( Proj (f,b1) ) .: ( proj2 X ) ) is_<=_than ( sup ( f .: X ) )
proof
let k being (Element of T);
assume k in ( ( Proj (f,b1) ) .: ( proj2 X ) );
then consider k1 being set such that A12: k1 in ( dom ( Proj (f,b1) ) ) and A13: k1 in ( proj2 X ) and A14: k = ( ( Proj (f,b1) ) . k1 ) by FUNCT_1:def 6;
reconsider k1 as (Element of S) by A12;
k = ( f . (b1,k1) ) by A14,CKB12:1;
hence thesis by A2,A9,A13,CKB28:1,YELLOW_0:17;
end;
(( proj2 X ) is non  empty  directed & ( Proj (f,b1) ) is  directed-sups-preserving) by A1,YELLOW_3:21,YELLOW_3:22;
then A15: ( Proj (f,b1) ) preserves_sup_of ( proj2 X ) by WAYBEL_0:def 37;
A16:  ex_sup_of ( ( Proj (f,b1) ) .: ( proj2 X ) ),T by YELLOW_0:17;
b = ( ( Proj (f,b1) ) . ( sup ( proj2 X ) ) ) by A10,CKB15:1
.= ( sup ( ( Proj (f,b1) ) .: ( proj2 X ) ) ) by A7,A15,WAYBEL_0:def 31;
hence thesis by A16,A11,YELLOW_0:def 9;
end;
then A17: ( ( Proj (f,( sup ( proj2 X ) )) ) .: ( proj1 X ) ) is_<=_than ( sup ( f .: X ) ) by LATTICE3:def 9;
A18: ( sup ( f .: X ) ) <= ( f . ( sup X ) ) by A2,WAYBEL17:16;
( f . ( sup X ) ) = ( f . (( sup ( proj1 X ) ),( sup ( proj2 X ) )) ) by YELLOW_3:46
.= ( ( Proj (f,( sup ( proj2 X ) )) ) . ( sup ( proj1 X ) ) ) by CKB14:1
.= ( sup ( ( Proj (f,( sup ( proj2 X ) )) ) .: ( proj1 X ) ) ) by A6,A3,WAYBEL_0:def 31;
then ( f . ( sup X ) ) <= ( sup ( f .: X ) ) by A17,A4,YELLOW_0:def 9;
hence thesis by A18,YELLOW_0:17,YELLOW_0:def 3;
end;
hence thesis;
end;
hence thesis by WAYBEL_0:def 37;
end;
