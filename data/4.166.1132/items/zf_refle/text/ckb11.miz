environ
vocabularies CLASSES2,ZF_LANG,FUNCT_1,SUBSET_1,ZF_MODEL,TARSKI,ORDINAL1,XBOOLE_0,ZFMISC_1,CARD_1,BVFUNC_2,XBOOLEAN,ZFMODEL1,RELAT_1,ORDINAL2,ORDINAL4,CARD_3,CLASSES1,NUMBERS,NAT_1,ARYTM_3,XXREAL_0,REALSET1,FUNCT_2,ZF_REFLE,CARD_FIL,CARD_5;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,NUMBERS,NAT_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,ZF_MODEL,ZFMODEL1,ORDINAL1,ORDINAL2,CARD_3,CLASSES1,CLASSES2,ZF_LANG,ORDINAL4,ZF_LANG1,CARD_5,CARD_FIL,CARD_LAR,XXREAL_0;
definitions TARSKI,FUNCT_1,ZF_LANG,ZF_MODEL,WELLORD2,ORDINAL2,RELAT_1,XBOOLE_0,ORDINAL1,CARD_LAR,CARD_FIL;
theorems TARSKI,ZFMISC_1,NAT_1,FUNCT_1,FUNCT_2,ORDINAL1,ORDINAL2,ORDINAL3,ORDINAL4,CARD_1,CARD_2,CLASSES1,CLASSES2,ZF_LANG,ZF_MODEL,CARD_3,ZFMODEL1,FUNCT_5,ZF_LANG1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,FUNCT_7,CARD_LAR,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8;
schemes CLASSES1,PARTFUN1,ORDINAL1,ORDINAL2,ZF_LANG,CARD_2,NAT_1,CKB7,CKB9,CKB10;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,ORDINAL2,XREAL_0,CARD_1,CLASSES2,ZF_LANG,ZF_LANG1,CLASSES1,ORDINAL4,CARD_5,CARD_FIL,CARD_LAR,CARD_3,RELAT_1;
constructors ENUMSET1,WELLORD2,XXREAL_0,XREAL_0,NAT_1,CLASSES1,CARD_3,ORDINAL4,ZF_MODEL,ZFMODEL1,ZF_LANG1,RELSET_1,CARD_LAR,CARD_FIL,CARD_5;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve W for Universe;
reserve A for Ordinal;
reserve B for Ordinal;
scheme UniverseInd { W() -> Universe,P[Ordinal] } : (for a being (Ordinal of W()) holds P[ a ])
provided
A1: P[ ( 0-element_of W() ) ]
and
A2: (for a being (Ordinal of W()) holds (P[ a ] implies P[ ( succ a ) ]))
and
A3: (for a being (Ordinal of W()) holds (((a <> ( 0-element_of W() ) & a is  limit_ordinal) & (for b being (Ordinal of W()) holds (b in a implies P[ b ]))) implies P[ a ]))
proof
defpred Q[ Ordinal ]
 means
($1 is (Ordinal of W()) implies P[ $1 ]);
A4: (for A holds (((A <> ( {} ) & A is  limit_ordinal) & (for B holds (B in A implies Q[ B ]))) implies Q[ A ]))
proof
let A;
assume that
A5: (A <> ( {} ) & A is  limit_ordinal)
and
A6: (for B holds (B in A implies (B is (Ordinal of W()) implies P[ B ])));
assume A is (Ordinal of W());
then reconsider a = A as (Ordinal of W());
(( {} ) = ( 0-element_of W() ) & (for b being (Ordinal of W()) holds (b in a implies P[ b ]))) by A6,ORDINAL4:33;
hence thesis by A3,A5;
end;
A7: (for A holds (Q[ A ] implies Q[ ( succ A ) ]))
proof
let A;
assume that
A8: (A is (Ordinal of W()) implies P[ A ])
and
A9: ( succ A ) is (Ordinal of W());
(A in ( succ A ) & ( succ A ) in ( On W() )) by A9,ORDINAL1:6,ORDINAL1:def 9;
then A in ( On W() ) by ORDINAL1:10;
then reconsider a = A as (Ordinal of W()) by ORDINAL1:def 9;
P[ ( succ a ) ] by A2,A8;
hence thesis;
end;
A10: Q[ ( {} ) ] by A1,ORDINAL4:33;
Q[ A ] from ORDINAL2:sch 1(A10,A7,A4);
hence thesis;
end;
