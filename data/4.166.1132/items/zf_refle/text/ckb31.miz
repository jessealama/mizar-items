environ
vocabularies CLASSES2,ZF_LANG,FUNCT_1,SUBSET_1,ZF_MODEL,TARSKI,ORDINAL1,XBOOLE_0,ZFMISC_1,CARD_1,BVFUNC_2,XBOOLEAN,ZFMODEL1,RELAT_1,ORDINAL2,ORDINAL4,CARD_3,CLASSES1,NUMBERS,NAT_1,ARYTM_3,XXREAL_0,REALSET1,FUNCT_2,ZF_REFLE,CARD_FIL,CARD_5;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,NUMBERS,NAT_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,ZF_MODEL,ZFMODEL1,ORDINAL1,ORDINAL2,CARD_3,CLASSES1,CLASSES2,ZF_LANG,ORDINAL4,ZF_LANG1,CARD_5,CARD_FIL,CARD_LAR,XXREAL_0,CKB12,CKB19,CKB21,CKB23,CKB24,CKB26,CKB27,CKB28;
definitions TARSKI,FUNCT_1,ZF_LANG,ZF_MODEL,WELLORD2,ORDINAL2,RELAT_1,XBOOLE_0,ORDINAL1,CARD_LAR,CARD_FIL,CKB12,CKB24;
theorems TARSKI,ZFMISC_1,NAT_1,FUNCT_1,FUNCT_2,ORDINAL1,ORDINAL2,ORDINAL3,ORDINAL4,CARD_1,CARD_2,CLASSES1,CLASSES2,ZF_LANG,ZF_MODEL,CARD_3,ZFMODEL1,FUNCT_5,ZF_LANG1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,FUNCT_7,CARD_LAR,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB24,CKB29,CKB30;
schemes CLASSES1,PARTFUN1,ORDINAL1,ORDINAL2,ZF_LANG,CARD_2,NAT_1,CKB7,CKB9,CKB10,CKB11;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,ORDINAL2,XREAL_0,CARD_1,CLASSES2,ZF_LANG,ZF_LANG1,CLASSES1,ORDINAL4,CARD_5,CARD_FIL,CARD_LAR,CARD_3,RELAT_1,CKB22,CKB25;
constructors ENUMSET1,WELLORD2,XXREAL_0,XREAL_0,NAT_1,CLASSES1,CARD_3,ORDINAL4,ZF_MODEL,ZFMODEL1,ZF_LANG1,RELSET_1,CARD_LAR,CARD_FIL,CARD_5,CKB12,CKB19,CKB21,CKB24,CKB27,CKB28;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve W for Universe;
reserve x for set;
reserve y for set;
reserve a for (Ordinal of W);
reserve L for (DOMAIN-Sequence of W);
reserve n for (Element of ( NAT ));
reserve f for (Function of ( VAR ),( L . a ));
theorem
Th25: ( NAT ),( VAR ) are_equipotent 
proof
deffunc F(Nat,set) = ( 5 + ( $1 + 1 ) );
consider f being (Function of ( NAT ),( NAT )) such that A1: (( f . ( 0 ) ) = ( 5 + ( 0 ) ) & (for n being Nat holds ( f . ( n + 1 ) ) = F(n,( f . n )))) from NAT_1:sch 12;
A2:now
let n;
((ex j being Nat st n = ( j + 1 )) implies ( f . n ) = ( 5 + n )) by A1;
then (n = ( 0 ) or ( f . n ) = ( 5 + n )) by NAT_1:6;
hence ( f . n ) = ( 5 + n ) by A1;
end;
A3: ( dom f ) = ( NAT ) by FUNCT_2:def 1;
thus ( NAT ),( VAR ) are_equipotent 
proof
reconsider g = f as Function;
take g;
thus g is  one-to-one
proof
let x;
let y;
assume (x in ( dom g ) & y in ( dom g ));
then reconsider n1 = x,n2 = y as (Element of ( NAT )) by FUNCT_2:def 1;
(( f . n1 ) = ( 5 + n1 ) & ( f . n2 ) = ( 5 + n2 )) by A2;
hence thesis by XCMPLX_1:2;
end;

thus ( dom g ) = ( NAT ) by FUNCT_2:def 1;
thus ( rng g ) c= ( VAR )
proof
let x;
assume x in ( rng g );
then consider y such that A4: y in ( dom f ) and A5: x = ( f . y ) by FUNCT_1:def 3;
reconsider y as (Element of ( NAT )) by A4;
A6: ( 5 + y ) >= 5 by NAT_1:11;
x = ( 5 + y ) by A2,A5;
hence thesis by A6;
end;

let x;
assume x in ( VAR );
then (ex n st (x = n & 5 <= n));
then consider n being Nat such that A7: x = ( 5 + n ) by NAT_1:10;
A8: n in ( NAT ) by ORDINAL1:def 12;
then ( f . n ) = x by A2,A7;
hence thesis by A3,A8,FUNCT_1:def 3;
end;

end;
