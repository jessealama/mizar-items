environ
vocabularies CLASSES2,ZF_LANG,FUNCT_1,SUBSET_1,ZF_MODEL,TARSKI,ORDINAL1,XBOOLE_0,ZFMISC_1,CARD_1,BVFUNC_2,XBOOLEAN,ZFMODEL1,RELAT_1,ORDINAL2,ORDINAL4,CARD_3,CLASSES1,NUMBERS,NAT_1,ARYTM_3,XXREAL_0,REALSET1,FUNCT_2,ZF_REFLE,CARD_FIL,CARD_5;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,NUMBERS,NAT_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,ZF_MODEL,ZFMODEL1,ORDINAL1,ORDINAL2,CARD_3,CLASSES1,CLASSES2,ZF_LANG,ORDINAL4,ZF_LANG1,CARD_5,CARD_FIL,CARD_LAR,XXREAL_0;
definitions TARSKI,FUNCT_1,ZF_LANG,ZF_MODEL,WELLORD2,ORDINAL2,RELAT_1,XBOOLE_0,ORDINAL1,CARD_LAR,CARD_FIL;
theorems TARSKI,ZFMISC_1,NAT_1,FUNCT_1,FUNCT_2,ORDINAL1,ORDINAL2,ORDINAL3,ORDINAL4,CARD_1,CARD_2,CLASSES1,CLASSES2,ZF_LANG,ZF_MODEL,CARD_3,ZFMODEL1,FUNCT_5,ZF_LANG1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,FUNCT_7,CARD_LAR,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8;
schemes CLASSES1,PARTFUN1,ORDINAL1,ORDINAL2,ZF_LANG,CARD_2,NAT_1,CKB7;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,ORDINAL2,XREAL_0,CARD_1,CLASSES2,ZF_LANG,ZF_LANG1,CLASSES1,ORDINAL4,CARD_5,CARD_FIL,CARD_LAR,CARD_3,RELAT_1;
constructors ENUMSET1,WELLORD2,XXREAL_0,XREAL_0,NAT_1,CLASSES1,CARD_3,ORDINAL4,ZF_MODEL,ZFMODEL1,ZF_LANG1,RELSET_1,CARD_LAR,CARD_FIL,CARD_5;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve x for set;
reserve y for set;
scheme OrdSeqOfUnivEx { W() -> Universe,P[set,set] } : (ex phi being (Ordinal-Sequence of W()) st (for a being (Ordinal of W()) holds P[ a,( phi . a ) ]))
provided
A1: (for a being (Ordinal of W()) holds (ex b being (Ordinal of W()) st P[ a,b ]))
proof
defpred Q[ set,set ]
 means
(P[ $1,$2 ] & $2 is (Ordinal of W()));
A2: (for x holds (x in ( On W() ) implies (ex y st Q[ x,y ])))
proof
let x;
assume x in ( On W() );
then reconsider a = x as (Ordinal of W()) by ORDINAL1:def 9;
consider b being (Ordinal of W()) such that A3: P[ a,b ] by A1;
reconsider y = b as set;
take y;
thus thesis by A3;
end;
consider f being Function such that A4: (( dom f ) = ( On W() ) & (for x holds (x in ( On W() ) implies Q[ x,( f . x ) ]))) from CLASSES1:sch 1(A2);
reconsider phi = f as T-Sequence by A4,ORDINAL1:def 7;
A5: ( rng phi ) c= ( On W() )
proof
let x;
assume x in ( rng phi );
then (ex y st (y in ( dom phi ) & x = ( phi . y ))) by FUNCT_1:def 3;
then reconsider x as (Ordinal of W()) by A4;
x in W();
hence thesis by ORDINAL1:def 9;
end;
then reconsider phi as Ordinal-Sequence by ORDINAL2:def 4;
reconsider phi as (Ordinal-Sequence of W()) by A4,A5,FUNCT_2:def 1,RELSET_1:4;
take phi;
let a being (Ordinal of W());
a in ( On W() ) by ORDINAL1:def 9;
hence thesis by A4;
end;
