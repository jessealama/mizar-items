environ
vocabularies CLASSES2,ZF_LANG,FUNCT_1,SUBSET_1,ZF_MODEL,TARSKI,ORDINAL1,XBOOLE_0,ZFMISC_1,CARD_1,BVFUNC_2,XBOOLEAN,ZFMODEL1,RELAT_1,ORDINAL2,ORDINAL4,CARD_3,CLASSES1,NUMBERS,NAT_1,ARYTM_3,XXREAL_0,REALSET1,FUNCT_2,ZF_REFLE,CARD_FIL,CARD_5;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,CARD_1,NUMBERS,NAT_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,ZF_MODEL,ZFMODEL1,ORDINAL1,ORDINAL2,CARD_3,CLASSES1,CLASSES2,ZF_LANG,ORDINAL4,ZF_LANG1,CARD_5,CARD_FIL,CARD_LAR,XXREAL_0;
definitions TARSKI,FUNCT_1,ZF_LANG,ZF_MODEL,WELLORD2,ORDINAL2,RELAT_1,XBOOLE_0,ORDINAL1,CARD_LAR,CARD_FIL;
theorems TARSKI,ZFMISC_1,NAT_1,FUNCT_1,FUNCT_2,ORDINAL1,ORDINAL2,ORDINAL3,ORDINAL4,CARD_1,CARD_2,CLASSES1,CLASSES2,ZF_LANG,ZF_MODEL,CARD_3,ZFMODEL1,FUNCT_5,ZF_LANG1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,FUNCT_7,CARD_LAR,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8;
schemes CLASSES1,PARTFUN1,ORDINAL1,ORDINAL2,ZF_LANG,CARD_2,NAT_1,CKB7,CKB9;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,ORDINAL2,XREAL_0,CARD_1,CLASSES2,ZF_LANG,ZF_LANG1,CLASSES1,ORDINAL4,CARD_5,CARD_FIL,CARD_LAR,CARD_3,RELAT_1;
constructors ENUMSET1,WELLORD2,XXREAL_0,XREAL_0,NAT_1,CLASSES1,CARD_3,ORDINAL4,ZF_MODEL,ZFMODEL1,ZF_LANG1,RELSET_1,CARD_LAR,CARD_FIL,CARD_5;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve x for set;
reserve y for set;
reserve A for Ordinal;
scheme UOSExist { W() -> Universe,a() -> (Ordinal of W()),C(Ordinal,Ordinal) -> (Ordinal of W()),D(Ordinal,T-Sequence) -> (Ordinal of W()) } : (ex phi being (Ordinal-Sequence of W()) st ((( phi . ( 0-element_of W() ) ) = a() & (for a being (Ordinal of W()) holds ( phi . ( succ a ) ) = C(a,( phi . a )))) & (for a being (Ordinal of W()) holds ((a <> ( 0-element_of W() ) & a is  limit_ordinal) implies ( phi . a ) = D(a,( phi | a ))))))
proof
consider phi being Ordinal-Sequence such that A1: ( dom phi ) = ( On W() ) and A2: (( {} ) in ( On W() ) implies ( phi . ( {} ) ) = a()) and A3: (for A holds (( succ A ) in ( On W() ) implies ( phi . ( succ A ) ) = C(A,( phi . A )))) and A4: (for A holds (((A in ( On W() ) & A <> ( {} )) & A is  limit_ordinal) implies ( phi . A ) = D(A,( phi | A )))) from ORDINAL2:sch 11;
( rng phi ) c= ( On W() )
proof
let x;
assume x in ( rng phi );
then consider y such that A5: y in ( dom phi ) and A6: x = ( phi . y ) by FUNCT_1:def 3;
reconsider y as (Ordinal of W()) by A1,A5,ORDINAL1:def 9;
A7:now
assume (not (ex A st y = ( succ A )));
then A8: y is  limit_ordinal by ORDINAL1:29;
assume y <> ( {} );
then x = D(y,( phi | y )) by A1,A4,A5,A6,A8;
hence thesis by ORDINAL1:def 9;
end;
now
given A such that
A9: y = ( succ A );

reconsider B = ( phi . A ) as Ordinal;
x = C(A,B) by A1,A3,A5,A6,A9;
hence thesis by ORDINAL1:def 9;
end;
hence thesis by A2,A6,A7,ORDINAL1:def 9;
end;
then reconsider phi as (Ordinal-Sequence of W()) by A1,FUNCT_2:def 1,RELSET_1:4;
take phi;
( 0-element_of W() ) in ( dom phi ) by ORDINAL4:34;
hence ( phi . ( 0-element_of W() ) ) = a() by A1,A2,ORDINAL4:33;
thus (for a being (Ordinal of W()) holds ( phi . ( succ a ) ) = C(a,( phi . a ))) by A1,A3,ORDINAL4:34;
let a being (Ordinal of W());
(a in ( dom phi ) & ( {} ) = ( 0-element_of W() )) by ORDINAL4:33,ORDINAL4:34;
hence thesis by A4;
end;
