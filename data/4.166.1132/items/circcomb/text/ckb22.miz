environ
vocabularies MSUALG_1,SUBSET_1,STRUCT_0,NUMBERS,XBOOLE_0,CARD_3,FINSEQ_1,FUNCOP_1,FINSEQ_2,PBOOLE,FUNCT_4,RELAT_1,PARTFUN1,FUNCT_1,TARSKI,MSAFREE2,FINSET_1,GLIB_000,MARGREL1,CIRCUIT1,FSM_1,CIRCUIT2,MCART_1,NAT_1,CARD_1,LATTICES,XBOOLEAN,CIRCCOMB;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,NAT_1,MCART_1,RELAT_1,FUNCT_1,FINSEQ_1,FINSEQ_2,FINSET_1,FUNCT_2,FUNCOP_1,PARTFUN1,FUNCT_4,CARD_3,MARGREL1,PBOOLE,STRUCT_0,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CKB1,CKB9,CKB10,CKB11;
definitions TARSKI,PARTFUN1,MSUALG_1,FINSET_1,MSAFREE2,STRUCT_0,RELAT_1,XBOOLE_0,FUNCOP_1,PBOOLE,MARGREL1,CKB10,CKB11;
theorems TARSKI,ZFMISC_1,FINSEQ_1,FINSEQ_2,MSUALG_1,FUNCT_1,FUNCT_2,FUNCT_4,PBOOLE,GRFUNC_1,FUNCOP_1,PARTFUN1,RELAT_1,MSAFREE2,CIRCUIT1,CIRCUIT2,MCART_1,CARD_3,ORDINAL1,MONOID_1,RELSET_1,XBOOLE_0,XBOOLE_1,FINSET_1,CARD_1,FINSEQ_3,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes FUNCT_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,FINSEQ_1,MARGREL1,CARD_3,PBOOLE,STRUCT_0,MSUALG_1,MSUALG_2,MSAFREE2,FUNCT_4,RELSET_1,PRE_CIRC,CARD_1,FINSEQ_2,CKB2,CKB3,CKB4,CKB5,CKB6,CKB20,CKB21;
constructors MARGREL1,CIRCUIT1,CIRCUIT2,RELSET_1,XCMPLX_0,CKB9,CKB10,CKB11;
requirements NUMERALS,BOOLE,SUBSET;
begin
theorem
Th15: (for S1,S2 being non  empty ManySortedSign holds (S1 tolerates S2 implies (( InnerVertices ( S1 +* S2 ) ) = ( ( InnerVertices S1 ) \/ ( InnerVertices S2 ) ) & ( InputVertices ( S1 +* S2 ) ) c= ( ( InputVertices S1 ) \/ ( InputVertices S2 ) ))))
proof
let S1 being non  empty ManySortedSign;
let S2 being non  empty ManySortedSign;
set R1 = (the ResultSort of S1);
set R2 = (the ResultSort of S2);
assume that
(the Arity of S1) tolerates (the Arity of S2)
and
A1: R1 tolerates R2;
set S = ( S1 +* S2 );
set R = (the ResultSort of S);
A2: R = ( R1 +* R2 ) by CKB11:def 1;
then R1 c= R by A1,FUNCT_4:28;
then A3: ( rng R1 ) c= ( rng R ) by RELAT_1:11;
( rng R2 ) c= ( rng R ) by A2,FUNCT_4:18;
then A4: ( ( rng R1 ) \/ ( rng R2 ) ) c= ( rng R ) by A3,XBOOLE_1:8;
A5: ( rng R ) c= ( ( rng R1 ) \/ ( rng R2 ) ) by A2,FUNCT_4:17;
hence ( InnerVertices S ) = ( ( InnerVertices S1 ) \/ ( InnerVertices S2 ) ) by A4,XBOOLE_0:def 10;
let x being set;
assume A6: x in ( InputVertices S );
then A7: (not x in ( rng R )) by XBOOLE_0:def 5;
A8: ( rng R ) = ( ( rng R1 ) \/ ( rng R2 ) ) by A5,A4,XBOOLE_0:def 10;
then A9: (not x in ( rng R2 )) by A7,XBOOLE_0:def 3;
(the carrier of S) = ( (the carrier of S1) \/ (the carrier of S2) ) by CKB11:def 1;
then A10: (x in (the carrier of S1) or x in (the carrier of S2)) by A6,XBOOLE_0:def 3;
(not x in ( rng R1 )) by A8,A7,XBOOLE_0:def 3;
then (x in ( (the carrier of S1) \ ( rng R1 ) ) or x in ( (the carrier of S2) \ ( rng R2 ) )) by A10,A9,XBOOLE_0:def 5;
hence thesis by XBOOLE_0:def 3;
end;
