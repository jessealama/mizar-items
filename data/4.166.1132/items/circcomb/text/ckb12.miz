environ
vocabularies MSUALG_1,SUBSET_1,STRUCT_0,NUMBERS,XBOOLE_0,CARD_3,FINSEQ_1,FUNCOP_1,FINSEQ_2,PBOOLE,FUNCT_4,RELAT_1,PARTFUN1,FUNCT_1,TARSKI,MSAFREE2,FINSET_1,GLIB_000,MARGREL1,CIRCUIT1,FSM_1,CIRCUIT2,MCART_1,NAT_1,CARD_1,LATTICES,XBOOLEAN,CIRCCOMB;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,NAT_1,MCART_1,RELAT_1,FUNCT_1,FINSEQ_1,FINSEQ_2,FINSET_1,FUNCT_2,FUNCOP_1,PARTFUN1,FUNCT_4,CARD_3,MARGREL1,PBOOLE,STRUCT_0,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CKB1,CKB9,CKB10,CKB11;
definitions TARSKI,PARTFUN1,MSUALG_1,FINSET_1,MSAFREE2,STRUCT_0,RELAT_1,XBOOLE_0,FUNCOP_1,PBOOLE,MARGREL1,CKB10,CKB11;
theorems TARSKI,ZFMISC_1,FINSEQ_1,FINSEQ_2,MSUALG_1,FUNCT_1,FUNCT_2,FUNCT_4,PBOOLE,GRFUNC_1,FUNCOP_1,PARTFUN1,RELAT_1,MSAFREE2,CIRCUIT1,CIRCUIT2,MCART_1,CARD_3,ORDINAL1,MONOID_1,RELSET_1,XBOOLE_0,XBOOLE_1,FINSET_1,CARD_1,FINSEQ_3,CKB7,CKB8,CKB10,CKB11;
schemes FUNCT_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,FINSEQ_1,MARGREL1,CARD_3,PBOOLE,STRUCT_0,MSUALG_1,MSUALG_2,MSAFREE2,FUNCT_4,RELSET_1,PRE_CIRC,CARD_1,FINSEQ_2,CKB2,CKB3,CKB4,CKB5,CKB6;
constructors MARGREL1,CIRCUIT1,CIRCUIT2,RELSET_1,XCMPLX_0,CKB9,CKB10,CKB11;
requirements NUMERALS,BOOLE,SUBSET;
begin
theorem
Th7: (for S1,S2,S3 being non  empty ManySortedSign holds (((S1 tolerates S2 & S2 tolerates S3) & S3 tolerates S1) implies ( S1 +* S2 ) tolerates S3))
proof
let S1 being non  empty ManySortedSign;
let S2 being non  empty ManySortedSign;
let S3 being non  empty ManySortedSign;
assume that
A1: (the Arity of S1) tolerates (the Arity of S2)
and
A2: (the ResultSort of S1) tolerates (the ResultSort of S2)
and
A3: (the Arity of S2) tolerates (the Arity of S3)
and
A4: (the ResultSort of S2) tolerates (the ResultSort of S3)
and
A5: (the Arity of S3) tolerates (the Arity of S1)
and
A6: (the ResultSort of S3) tolerates (the ResultSort of S1);
(the Arity of ( S1 +* S2 )) = ( (the Arity of S1) +* (the Arity of S2) ) by CKB11:def 1;
hence (the Arity of ( S1 +* S2 )) tolerates (the Arity of S3) by A1,A3,A5,FUNCT_4:125;
(the ResultSort of ( S1 +* S2 )) = ( (the ResultSort of S1) +* (the ResultSort of S2) ) by CKB11:def 1;
hence thesis by A2,A4,A6,FUNCT_4:125;
end;
