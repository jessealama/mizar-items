environ
vocabularies MSUALG_1,SUBSET_1,STRUCT_0,NUMBERS,XBOOLE_0,CARD_3,FINSEQ_1,FUNCOP_1,FINSEQ_2,PBOOLE,FUNCT_4,RELAT_1,PARTFUN1,FUNCT_1,TARSKI,MSAFREE2,FINSET_1,GLIB_000,MARGREL1,CIRCUIT1,FSM_1,CIRCUIT2,MCART_1,NAT_1,CARD_1,LATTICES,XBOOLEAN,CIRCCOMB;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,NAT_1,MCART_1,RELAT_1,FUNCT_1,FINSEQ_1,FINSEQ_2,FINSET_1,FUNCT_2,FUNCOP_1,PARTFUN1,FUNCT_4,CARD_3,MARGREL1,PBOOLE,STRUCT_0,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CKB1,CKB9,CKB10,CKB11;
definitions TARSKI,PARTFUN1,MSUALG_1,FINSET_1,MSAFREE2,STRUCT_0,RELAT_1,XBOOLE_0,FUNCOP_1,PBOOLE,MARGREL1,CKB10,CKB11;
theorems TARSKI,ZFMISC_1,FINSEQ_1,FINSEQ_2,MSUALG_1,FUNCT_1,FUNCT_2,FUNCT_4,PBOOLE,GRFUNC_1,FUNCOP_1,PARTFUN1,RELAT_1,MSAFREE2,CIRCUIT1,CIRCUIT2,MCART_1,CARD_3,ORDINAL1,MONOID_1,RELSET_1,XBOOLE_0,XBOOLE_1,FINSET_1,CARD_1,FINSEQ_3,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB22,CKB23,CKB24,CKB25;
schemes FUNCT_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,FINSEQ_1,MARGREL1,CARD_3,PBOOLE,STRUCT_0,MSUALG_1,MSUALG_2,MSAFREE2,FUNCT_4,RELSET_1,PRE_CIRC,CARD_1,FINSEQ_2,CKB2,CKB3,CKB4,CKB5,CKB6,CKB20,CKB21;
constructors MARGREL1,CIRCUIT1,CIRCUIT2,RELSET_1,XCMPLX_0,CKB9,CKB10,CKB11;
requirements NUMERALS,BOOLE,SUBSET;
begin
theorem
Th19: (for S1 being non  empty ManySortedSign holds (for S2,S being  Circuit-like non  void non  empty ManySortedSign holds (S = ( S1 +* S2 ) implies (for v2 being (Vertex of S2) holds (v2 in ( InnerVertices S2 ) implies (for v being (Vertex of S) holds (v2 = v implies (v in ( InnerVertices S ) & ( action_at v ) = ( action_at v2 )))))))))
proof
let S1 being non  empty ManySortedSign;
let S2 being  Circuit-like non  void non  empty ManySortedSign;
let S being  Circuit-like non  void non  empty ManySortedSign;
assume that
A1: S = ( S1 +* S2 );
let v2 being (Vertex of S2);
assume that
A2: v2 in ( InnerVertices S2 );
(the carrier' of S) = ( (the carrier' of S1) \/ (the carrier' of S2) ) by A1,CKB11:def 1;
then reconsider o = ( action_at v2 ) as (OperSymbol of S) by XBOOLE_0:def 3;
let v being (Vertex of S);
assume that
A3: v2 = v;
(the ResultSort of S) = ( (the ResultSort of S1) +* (the ResultSort of S2) ) by A1,CKB11:def 1;
then A4: ( InnerVertices S2 ) c= ( InnerVertices S ) by FUNCT_4:18;
hence v in ( InnerVertices S ) by A2,A3;
( the_result_sort_of ( action_at v2 ) ) = v2 by A2,MSAFREE2:def 7;
then v = ( the_result_sort_of o ) by A1,A3,CKB25:1;
hence thesis by A2,A3,A4,MSAFREE2:def 7;
end;
