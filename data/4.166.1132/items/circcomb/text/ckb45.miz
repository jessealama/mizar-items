environ
vocabularies MSUALG_1,SUBSET_1,STRUCT_0,NUMBERS,XBOOLE_0,CARD_3,FINSEQ_1,FUNCOP_1,FINSEQ_2,PBOOLE,FUNCT_4,RELAT_1,PARTFUN1,FUNCT_1,TARSKI,MSAFREE2,FINSET_1,GLIB_000,MARGREL1,CIRCUIT1,FSM_1,CIRCUIT2,MCART_1,NAT_1,CARD_1,LATTICES,XBOOLEAN,CIRCCOMB;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,NAT_1,MCART_1,RELAT_1,FUNCT_1,FINSEQ_1,FINSEQ_2,FINSET_1,FUNCT_2,FUNCOP_1,PARTFUN1,FUNCT_4,CARD_3,MARGREL1,PBOOLE,STRUCT_0,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CKB1,CKB9,CKB10,CKB11,CKB29,CKB30;
definitions TARSKI,PARTFUN1,MSUALG_1,FINSET_1,MSAFREE2,STRUCT_0,RELAT_1,XBOOLE_0,FUNCOP_1,PBOOLE,MARGREL1,CKB10,CKB11,CKB29,CKB30;
theorems TARSKI,ZFMISC_1,FINSEQ_1,FINSEQ_2,MSUALG_1,FUNCT_1,FUNCT_2,FUNCT_4,PBOOLE,GRFUNC_1,FUNCOP_1,PARTFUN1,RELAT_1,MSAFREE2,CIRCUIT1,CIRCUIT2,MCART_1,CARD_3,ORDINAL1,MONOID_1,RELSET_1,XBOOLE_0,XBOOLE_1,FINSET_1,CARD_1,FINSEQ_3,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44;
schemes FUNCT_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,FINSEQ_1,MARGREL1,CARD_3,PBOOLE,STRUCT_0,MSUALG_1,MSUALG_2,MSAFREE2,FUNCT_4,RELSET_1,PRE_CIRC,CARD_1,FINSEQ_2,CKB2,CKB3,CKB4,CKB5,CKB6,CKB20,CKB21;
constructors MARGREL1,CIRCUIT1,CIRCUIT2,RELSET_1,XCMPLX_0,CKB9,CKB10,CKB11,CKB29,CKB30;
requirements NUMERALS,BOOLE,SUBSET;
begin
theorem
Th39: (for S1,S2,S being non  void  Circuit-like non  empty ManySortedSign holds ((( InnerVertices S1 ) misses ( InputVertices S2 ) & S = ( S1 +* S2 )) implies (for A1 being  non-empty (Circuit of S1) holds (for A2 being  non-empty (Circuit of S2) holds (for A being  non-empty (Circuit of S) holds ((A1 tolerates A2 & A = ( A1 +* A2 )) implies (for s being (State of A) holds (for s1 being (State of A1) holds (for s2 being (State of A2) holds ((s1 = ( s | (the carrier of S1) ) & s2 = ( s | (the carrier of S2) )) implies ( Following s ) = ( ( Following s1 ) +* ( Following s2 ) )))))))))))
proof
let S1 being non  void  Circuit-like non  empty ManySortedSign;
let S2 being non  void  Circuit-like non  empty ManySortedSign;
let S being non  void  Circuit-like non  empty ManySortedSign;
assume that
A1: ( InnerVertices S1 ) misses ( InputVertices S2 )
and
A2: S = ( S1 +* S2 );
A3: (the carrier of S) = ( (the carrier of S1) \/ (the carrier of S2) ) by A2,CKB11:def 1;
let A1 being  non-empty (Circuit of S1);
let A2 being  non-empty (Circuit of S2);
let A being  non-empty (Circuit of S);
assume that
A4: A1 tolerates A2
and
A5: A = ( A1 +* A2 );
let s being (State of A);
let s1 being (State of A1);
let s2 being (State of A2);
assume that
A6: s1 = ( s | (the carrier of S1) )
and
A7: s2 = ( s | (the carrier of S2) );
A8: ( dom ( Following s2 ) ) = (the carrier of S2) by CIRCUIT1:3;
A9: ( dom ( Following s1 ) ) = (the carrier of S1) by CIRCUIT1:3;
A10:now
let x being set;
assume x in ( ( dom ( Following s1 ) ) \/ ( dom ( Following s2 ) ) );
then reconsider v = x as (Vertex of S) by A2,A9,A8,CKB11:def 1;
hereby
assume x in ( dom ( Following s2 ) );
then reconsider v2 = x as (Vertex of S2) by CIRCUIT1:3;
A11:now
(the ResultSort of S) = ( (the ResultSort of S1) +* (the ResultSort of S2) ) by A2,CKB11:def 1;
then A12: ( rng (the ResultSort of S) ) c= ( ( rng (the ResultSort of S1) ) \/ ( rng (the ResultSort of S2) ) ) by FUNCT_4:17;
assume A13: v2 in ( InputVertices S2 );
then A14: (not v2 in ( rng (the ResultSort of S2) )) by XBOOLE_0:def 5;
(not v2 in ( rng (the ResultSort of S1) )) by A1,A13,XBOOLE_0:3;
then (not v in ( rng (the ResultSort of S) )) by A14,A12,XBOOLE_0:def 3;
hence v in ( InputVertices S ) by XBOOLE_0:def 5;
end;
( ( InputVertices S2 ) \/ ( InnerVertices S2 ) ) = (the carrier of S2) by XBOOLE_1:45;
then (v2 in ( InnerVertices S2 ) or v2 in ( InputVertices S2 )) by XBOOLE_0:def 3;
then (v in ( InnerVertices S2 ) or (v in (the carrier of S2) & v in ( InputVertices S ))) by A11;
hence ( ( Following s ) . x ) = ( ( Following s2 ) . x ) by A2,A4,A5,A7,CKB44:1;
end;
assume A15: (not x in ( dom ( Following s2 ) ));
then reconsider v1 = v as (Vertex of S1) by A3,A8,XBOOLE_0:def 3;
( rng (the ResultSort of S2) ) c= (the carrier of S2) by RELAT_1:def 19;
then A16: (not v1 in ( rng (the ResultSort of S2) )) by A8,A15;
A17:now
assume v1 in ( InputVertices S1 );
then A18: (not v1 in ( rng (the ResultSort of S1) )) by XBOOLE_0:def 5;
(the ResultSort of S) = ( (the ResultSort of S1) +* (the ResultSort of S2) ) by A2,CKB11:def 1;
then ( rng (the ResultSort of S) ) c= ( ( rng (the ResultSort of S1) ) \/ ( rng (the ResultSort of S2) ) ) by FUNCT_4:17;
then (not v in ( rng (the ResultSort of S) )) by A16,A18,XBOOLE_0:def 3;
hence v in ( InputVertices S ) by XBOOLE_0:def 5;
end;
( ( InputVertices S1 ) \/ ( InnerVertices S1 ) ) = (the carrier of S1) by XBOOLE_1:45;
then (v1 in ( InnerVertices S1 ) or v1 in ( InputVertices S1 )) by XBOOLE_0:def 3;
hence ( ( Following s ) . x ) = ( ( Following s1 ) . x ) by A2,A4,A5,A6,A17,CKB44:1;
end;
( dom ( Following s ) ) = (the carrier of S) by CIRCUIT1:3;
hence thesis by A3,A9,A8,A10,FUNCT_4:def 1;
end;
