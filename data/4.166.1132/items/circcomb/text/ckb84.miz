environ
vocabularies MSUALG_1,SUBSET_1,STRUCT_0,NUMBERS,XBOOLE_0,CARD_3,FINSEQ_1,FUNCOP_1,FINSEQ_2,PBOOLE,FUNCT_4,RELAT_1,PARTFUN1,FUNCT_1,TARSKI,MSAFREE2,FINSET_1,GLIB_000,MARGREL1,CIRCUIT1,FSM_1,CIRCUIT2,MCART_1,NAT_1,CARD_1,LATTICES,XBOOLEAN,CIRCCOMB;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,NAT_1,MCART_1,RELAT_1,FUNCT_1,FINSEQ_1,FINSEQ_2,FINSET_1,FUNCT_2,FUNCOP_1,PARTFUN1,FUNCT_4,CARD_3,MARGREL1,PBOOLE,STRUCT_0,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CKB1,CKB9,CKB10,CKB11,CKB29,CKB30,CKB49,CKB54,CKB61,CKB62,CKB63,CKB64,CKB65,CKB82,CKB83;
definitions TARSKI,PARTFUN1,MSUALG_1,FINSET_1,MSAFREE2,STRUCT_0,RELAT_1,XBOOLE_0,FUNCOP_1,PBOOLE,MARGREL1,CKB10,CKB11,CKB29,CKB30,CKB49,CKB54,CKB61,CKB62,CKB63,CKB64,CKB65,CKB83;
theorems TARSKI,ZFMISC_1,FINSEQ_1,FINSEQ_2,MSUALG_1,FUNCT_1,FUNCT_2,FUNCT_4,PBOOLE,GRFUNC_1,FUNCOP_1,PARTFUN1,RELAT_1,MSAFREE2,CIRCUIT1,CIRCUIT2,MCART_1,CARD_3,ORDINAL1,MONOID_1,RELSET_1,XBOOLE_0,XBOOLE_1,FINSET_1,CARD_1,FINSEQ_3,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB51,CKB52,CKB53,CKB54,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB69,CKB70,CKB72,CKB75,CKB76,CKB77,CKB79,CKB81,CKB83;
schemes FUNCT_1,CKB66,CKB67;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,FINSEQ_1,MARGREL1,CARD_3,PBOOLE,STRUCT_0,MSUALG_1,MSUALG_2,MSAFREE2,FUNCT_4,RELSET_1,PRE_CIRC,CARD_1,FINSEQ_2,CKB2,CKB3,CKB4,CKB5,CKB6,CKB20,CKB21,CKB50,CKB55,CKB68,CKB71,CKB73,CKB74,CKB78,CKB80;
constructors MARGREL1,CIRCUIT1,CIRCUIT2,RELSET_1,XCMPLX_0,CKB9,CKB10,CKB11,CKB29,CKB30,CKB49,CKB54,CKB61,CKB62,CKB63,CKB64,CKB65,CKB83;
requirements NUMERALS,BOOLE,SUBSET;
begin
definition
let n being Nat;
let X being non  empty set;
let f being (Function of ( n -tuples_on X ),X);
let p being (FinSeqLen of n);
func 1GateCircuit (p,f) ->  strict  non-empty MSAlgebra over ( 1GateCircStr (p,f) ) means 
:Def14: ((the Sorts of it) = ( (the carrier of ( 1GateCircStr (p,f) )) --> X ) & ( (the Charact of it) . [ p,f ] ) = f);
existence
proof
set S = ( 1GateCircStr (p,f) );
set SORTS = ( (the carrier of S) --> X );
set CHARACT = ( (the carrier' of S) --> f );
A1: ( len p ) = n by CARD_1:def 7;
A2: ( (the Arity of S) . [ p,f ] ) = p by CKB54:def 1;
A3: ( (the ResultSort of S) . [ p,f ] ) = [ p,f ] by CKB54:def 1;
A4: (the carrier' of S) = { [ p,f ] } by CKB54:def 1;
then A5: ( dom (the ResultSort of S) ) = { [ p,f ] } by FUNCT_2:def 1;
A6: (the carrier of S) = ( ( rng p ) \/ { [ p,f ] } ) by CKB54:def 1;
then ( rng p ) c= (the carrier of S) by XBOOLE_1:7;
then p is (FinSequence of (the carrier of S)) by FINSEQ_1:def 4;
then reconsider pp = p as (Element of ( (the carrier of S) * )) by FINSEQ_1:def 11;
A7: [ p,f ] in { [ p,f ] } by TARSKI:def 1;
then [ p,f ] in (the carrier of S) by A6,XBOOLE_0:def 3;
then A8: ( SORTS . [ p,f ] ) = X by FUNCOP_1:7;
A9: ( dom (the Arity of S) ) = { [ p,f ] } by A4,FUNCT_2:def 1;
now
let i being set;
A10: ( ( SORTS # ) . pp ) = ( n -tuples_on X ) by A1,CKB8:1;
assume A11: i in (the carrier' of S);
then A12: i = [ p,f ] by A4,TARSKI:def 1;
then A13: ( ( ( SORTS # ) * (the Arity of S) ) . i ) = ( ( SORTS # ) . p ) by A4,A2,A9,A11,FUNCT_1:13;
( ( SORTS * (the ResultSort of S) ) . i ) = X by A4,A3,A8,A5,A11,A12,FUNCT_1:13;
hence ( CHARACT . i ) is (Function of ( ( ( SORTS # ) * (the Arity of S) ) . i ),( ( SORTS * (the ResultSort of S) ) . i )) by A11,A13,A10,FUNCOP_1:7;
end;
then reconsider CHARACT as (ManySortedFunction of ( ( SORTS # ) * (the Arity of S) ),( SORTS * (the ResultSort of S) )) by PBOOLE:def 15;
reconsider A = MSAlgebra (# SORTS,CHARACT #) as  non-empty  strict MSAlgebra over ( 1GateCircStr (p,f) ) by MSUALG_1:def 3;
take A;
thus thesis by A4,A7,FUNCOP_1:7;
end;
uniqueness
proof
set S = ( 1GateCircStr (p,f) );
let A1 being  strict  non-empty MSAlgebra over S;
let A2 being  strict  non-empty MSAlgebra over S;
assume that
A14: (not thesis);
A15: (the carrier' of S) = { [ p,f ] } by CKB54:def 1;
then ( dom (the Charact of A1) ) = { [ p,f ] } by PARTFUN1:def 2;
then A16: (the Charact of A1) = { [ [ p,f ],f ] } by A14,GRFUNC_1:7;
( dom (the Charact of A2) ) = { [ p,f ] } by A15,PARTFUN1:def 2;
hence thesis by A14,A16,GRFUNC_1:7;
end;
end;
