environ
vocabularies MSUALG_1,SUBSET_1,STRUCT_0,NUMBERS,XBOOLE_0,CARD_3,FINSEQ_1,FUNCOP_1,FINSEQ_2,PBOOLE,FUNCT_4,RELAT_1,PARTFUN1,FUNCT_1,TARSKI,MSAFREE2,FINSET_1,GLIB_000,MARGREL1,CIRCUIT1,FSM_1,CIRCUIT2,MCART_1,NAT_1,CARD_1,LATTICES,XBOOLEAN,CIRCCOMB;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,NAT_1,MCART_1,RELAT_1,FUNCT_1,FINSEQ_1,FINSEQ_2,FINSET_1,FUNCT_2,FUNCOP_1,PARTFUN1,FUNCT_4,CARD_3,MARGREL1,PBOOLE,STRUCT_0,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CKB1,CKB9,CKB10,CKB11,CKB29,CKB30,CKB49,CKB54,CKB61,CKB62,CKB63,CKB64,CKB65,CKB82,CKB83,CKB84;
definitions TARSKI,PARTFUN1,MSUALG_1,FINSET_1,MSAFREE2,STRUCT_0,RELAT_1,XBOOLE_0,FUNCOP_1,PBOOLE,MARGREL1,CKB10,CKB11,CKB29,CKB30,CKB49,CKB54,CKB61,CKB62,CKB63,CKB64,CKB65,CKB83,CKB84;
theorems TARSKI,ZFMISC_1,FINSEQ_1,FINSEQ_2,MSUALG_1,FUNCT_1,FUNCT_2,FUNCT_4,PBOOLE,GRFUNC_1,FUNCOP_1,PARTFUN1,RELAT_1,MSAFREE2,CIRCUIT1,CIRCUIT2,MCART_1,CARD_3,ORDINAL1,MONOID_1,RELSET_1,XBOOLE_0,XBOOLE_1,FINSET_1,CARD_1,FINSEQ_3,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB51,CKB52,CKB53,CKB54,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB69,CKB70,CKB72,CKB75,CKB76,CKB77,CKB79,CKB81,CKB83,CKB84,CKB85,CKB88,CKB92,CKB94;
schemes FUNCT_1,CKB66,CKB67;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,FINSEQ_1,MARGREL1,CARD_3,PBOOLE,STRUCT_0,MSUALG_1,MSUALG_2,MSAFREE2,FUNCT_4,RELSET_1,PRE_CIRC,CARD_1,FINSEQ_2,CKB2,CKB3,CKB4,CKB5,CKB6,CKB20,CKB21,CKB50,CKB55,CKB68,CKB71,CKB73,CKB74,CKB78,CKB80,CKB86,CKB87,CKB89,CKB90,CKB91,CKB93;
constructors MARGREL1,CIRCUIT1,CIRCUIT2,RELSET_1,XCMPLX_0,CKB9,CKB10,CKB11,CKB29,CKB30,CKB49,CKB54,CKB61,CKB62,CKB63,CKB64,CKB65,CKB83,CKB84;
requirements NUMERALS,BOOLE,SUBSET;
begin
theorem
(for n being Nat holds (for X being  finite non  empty set holds (for f being (Function of ( n -tuples_on X ),X) holds (for p being (FinSeqLen of n) holds (for s being (State of ( 1GateCircuit (p,f) )) holds ( ( Following s ) . [ p,f ] ) = ( f . ( s * p ) ))))))
proof
let n being Nat;
let X being non  empty  finite set;
let f being (Function of ( n -tuples_on X ),X);
let p being (FinSeqLen of n);
let s being (State of ( 1GateCircuit (p,f) ));
set S = ( 1GateCircStr (p,f) );
set A = ( 1GateCircuit (p,f) );
set IV = ( InnerVertices S );
IV = { [ p,f ] } by CKB59:1;
then reconsider v = [ p,f ] as (Element of IV) by TARSKI:def 1;
(the carrier' of S) = { [ p,f ] } by CKB54:def 1;
then reconsider o = [ p,f ] as (Gate of S) by TARSKI:def 1;
( the_result_sort_of o ) = v by CKB54:def 1;
then A1: ( action_at v ) = o by MSAFREE2:def 7;
( the_arity_of o ) = p by CKB54:def 1;
then A2: ( o depends_on_in s ) = ( s * p ) by CIRCUIT1:def 3;
( ( Following s ) . v ) = ( ( Den (( action_at v ),A) ) . ( ( action_at v ) depends_on_in s ) ) by CIRCUIT2:def 5;
hence thesis by A1,A2,CKB84:def 1;
end;
