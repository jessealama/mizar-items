environ
vocabularies RELAT_1,ORDINAL1,TARSKI,RELAT_2,WELLORD1,XBOOLE_0,SUBSET_1,ZFMISC_1,FUNCT_1,MCART_1,WELLORD2;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,WELLORD1,ORDINAL1,CKB1;
definitions TARSKI,XBOOLE_0,FUNCT_1,RELAT_1,RELAT_2,WELLORD1,CKB1;
theorems TARSKI,FUNCT_1,RELAT_1,RELAT_2,ZFMISC_1,WELLORD1,ORDINAL1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5;
schemes FUNCT_1,RELAT_1,ORDINAL1,XBOOLE_0;
registrations RELAT_1,FUNCT_1,ORDINAL1;
constructors RELAT_2,ORDINAL1,WELLORD1,MCART_1,CKB1;
requirements SUBSET,BOOLE;
begin
reserve Y for set;
reserve A for Ordinal;
reserve B for Ordinal;
reserve C for Ordinal;
theorem
Th6: ( RelIncl A ) is  well_founded
proof
let Y;
assume that
A1: Y c= ( field ( RelIncl A ) )
and
A2: Y <> ( {} );
defpred P[ set ]
 means
$1 in Y;
set x = the (Element of Y);
A3: ( field ( RelIncl A ) ) = A by CKB1:def 1;
then x in A by A1,A2,TARSKI:def 3;
then reconsider x as Ordinal;
x in Y by A2;
then A4: (ex B st P[ B ]);
consider B such that A5: (P[ B ] & (for C holds (P[ C ] implies B c= C))) from ORDINAL1:sch 1(A4);
reconsider x = B as set;
take x;
thus x in Y by A5;
set y = the (Element of ( ( ( RelIncl A ) -Seg x ) /\ Y ));
assume A6: ( ( ( RelIncl A ) -Seg x ) /\ Y ) <> ( {} );
then A7: y in Y by XBOOLE_0:def 4;
then reconsider C = y as Ordinal by A1,A3;
A8: y in ( ( RelIncl A ) -Seg x ) by A6,XBOOLE_0:def 4;
then [ y,x ] in ( RelIncl A ) by WELLORD1:1;
then A9: C c= B by A1,A3,A5,A7,CKB1:def 1;
A10: y <> x by A8,WELLORD1:1;
B c= C by A5,A7;
hence contradiction by A10,A9,XBOOLE_0:def 10;
end;
