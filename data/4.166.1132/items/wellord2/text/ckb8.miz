environ
vocabularies RELAT_1,ORDINAL1,TARSKI,RELAT_2,WELLORD1,XBOOLE_0,SUBSET_1,ZFMISC_1,FUNCT_1,MCART_1,WELLORD2;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,WELLORD1,ORDINAL1,CKB1;
definitions TARSKI,XBOOLE_0,FUNCT_1,RELAT_1,RELAT_2,WELLORD1,CKB1;
theorems TARSKI,FUNCT_1,RELAT_1,RELAT_2,ZFMISC_1,WELLORD1,ORDINAL1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7;
schemes FUNCT_1,RELAT_1,ORDINAL1,XBOOLE_0;
registrations RELAT_1,FUNCT_1,ORDINAL1;
constructors RELAT_2,ORDINAL1,WELLORD1,MCART_1,CKB1;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve a for set;
reserve b for set;
theorem
Th8: (Y c= X implies ( ( RelIncl X ) |_2 Y ) = ( RelIncl Y ))
proof
assume A1: Y c= X;
let a;
let b;
thus ([ a,b ] in ( ( RelIncl X ) |_2 Y ) implies [ a,b ] in ( RelIncl Y ))
proof
assume A2: [ a,b ] in ( ( RelIncl X ) |_2 Y );
then [ a,b ] in [: Y,Y :] by XBOOLE_0:def 4;
then A3: (a in Y & b in Y) by ZFMISC_1:87;
[ a,b ] in ( RelIncl X ) by A2,XBOOLE_0:def 4;
then a c= b by A1,A3,CKB1:def 1;
hence thesis by A3,CKB1:def 1;
end;

assume A4: [ a,b ] in ( RelIncl Y );
then A5: (a in ( field ( RelIncl Y ) ) & b in ( field ( RelIncl Y ) )) by RELAT_1:15;
A6: ( field ( RelIncl Y ) ) = Y by CKB1:def 1;
then a c= b by A4,A5,CKB1:def 1;
then A7: [ a,b ] in ( RelIncl X ) by A1,A5,A6,CKB1:def 1;
[ a,b ] in [: Y,Y :] by A5,A6,ZFMISC_1:87;
hence thesis by A7,XBOOLE_0:def 4;
end;
