environ
vocabularies RELAT_1,ORDINAL1,TARSKI,RELAT_2,WELLORD1,XBOOLE_0,SUBSET_1,ZFMISC_1,FUNCT_1,MCART_1,WELLORD2;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,WELLORD1,ORDINAL1,CKB1,CKB15,CKB16,CKB18;
definitions TARSKI,XBOOLE_0,FUNCT_1,RELAT_1,RELAT_2,WELLORD1,CKB1,CKB15,CKB16,CKB18;
theorems TARSKI,FUNCT_1,RELAT_1,RELAT_2,ZFMISC_1,WELLORD1,ORDINAL1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
schemes FUNCT_1,RELAT_1,ORDINAL1,XBOOLE_0;
registrations RELAT_1,FUNCT_1,ORDINAL1;
constructors RELAT_2,ORDINAL1,WELLORD1,MCART_1,CKB1,CKB15,CKB16,CKB18;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve x for set;
reserve y for set;
reserve R for Relation;
reserve f for Function;
theorem
Lm1: ((R is  well-ordering & X,( field R ) are_equipotent ) implies (ex R st R well_orders X))
proof
assume A1: R is  well-ordering;
given f such that
A2: f is  one-to-one
and
A3: ( dom f ) = X
and
A4: ( rng f ) = ( field R );

defpred P[ set,set ]
 means
[ ( f . $1 ),( f . $2 ) ] in R;
consider Q being Relation such that A5: ([ x,y ] in Q iff ((x in X & y in X) & P[ x,y ])) from RELAT_1:sch 1;
take Q;
R is  reflexive by A1,WELLORD1:def 4;
then A6: R is_reflexive_in ( field R ) by RELAT_2:def 9;
A7: ( field Q ) = X
proof
thus ( field Q ) c= X
proof
let x;
assume that
A8: x in ( field Q )
and
A9: (not x in X);
(for y holds (not [ y,x ] in Q)) by A5,A9;
then A10: (not x in ( rng Q )) by RELAT_1:def 5;
(for y holds (not [ x,y ] in Q)) by A5,A9;
then (not x in ( dom Q )) by RELAT_1:def 4;
hence contradiction by A8,A10,XBOOLE_0:def 3;
end;

let x;
assume A11: x in X;
then ( f . x ) in ( rng f ) by A3,FUNCT_1:def 3;
then [ ( f . x ),( f . x ) ] in R by A6,A4,RELAT_2:def 1;
then [ x,x ] in Q by A5,A11;
hence thesis by RELAT_1:15;
end;
f is_isomorphism_of Q,R
proof
thus ((( dom f ) = ( field Q ) & ( rng f ) = ( field R )) & f is  one-to-one) by A2,A3,A4,A7;
let x;
let y;
thus ([ x,y ] in Q implies ((x in ( field Q ) & y in ( field Q )) & [ ( f . x ),( f . y ) ] in R)) by A5,A7;
assume ((x in ( field Q ) & y in ( field Q )) & [ ( f . x ),( f . y ) ] in R);
hence thesis by A5,A7;
end;
then ( f " ) is_isomorphism_of R,Q by WELLORD1:39;
then Q is  well-ordering by A1,WELLORD1:44;
hence thesis by A7,WELLORD1:4;
end;
