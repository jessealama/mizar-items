environ
vocabularies RELAT_1,ORDINAL1,TARSKI,RELAT_2,WELLORD1,XBOOLE_0,SUBSET_1,ZFMISC_1,FUNCT_1,MCART_1,WELLORD2;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,WELLORD1,ORDINAL1,CKB1;
definitions TARSKI,XBOOLE_0,FUNCT_1,RELAT_1,RELAT_2,WELLORD1,CKB1;
theorems TARSKI,FUNCT_1,RELAT_1,RELAT_2,ZFMISC_1,WELLORD1,ORDINAL1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9;
schemes FUNCT_1,RELAT_1,ORDINAL1,XBOOLE_0;
registrations RELAT_1,FUNCT_1,ORDINAL1;
constructors RELAT_2,ORDINAL1,WELLORD1,MCART_1,CKB1;
requirements SUBSET,BOOLE;
begin
reserve a for set;
reserve A for Ordinal;
reserve B for Ordinal;
theorem
Th10: (A in B implies A = ( ( RelIncl B ) -Seg A ))
proof
assume A1: A in B;
thus (a in A implies a in ( ( RelIncl B ) -Seg A ))
proof
assume A2: a in A;
then reconsider C = a as Ordinal;
A3: a <> A by A2;
A4: A c= B by A1,ORDINAL1:def 2;
C c= A by A2,ORDINAL1:def 2;
then [ C,A ] in ( RelIncl B ) by A1,A2,A4,CKB1:def 1;
hence thesis by A3,WELLORD1:1;
end;

let a;
assume A5: a in ( ( RelIncl B ) -Seg A );
then A6: a <> A by WELLORD1:1;
A7: [ a,A ] in ( RelIncl B ) by A5,WELLORD1:1;
then A8: a in ( field ( RelIncl B ) ) by RELAT_1:15;
A9: ( field ( RelIncl B ) ) = B by CKB1:def 1;
then reconsider C = a as Ordinal by A8;
C c= A by A1,A7,A8,A9,CKB1:def 1;
then C c< A by A6,XBOOLE_0:def 8;
hence thesis by ORDINAL1:11;
end;
