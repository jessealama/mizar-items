environ
vocabularies RELAT_1,ORDINAL1,TARSKI,RELAT_2,WELLORD1,XBOOLE_0,SUBSET_1,ZFMISC_1,FUNCT_1,MCART_1,WELLORD2;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,WELLORD1,ORDINAL1,CKB1,CKB15,CKB16,CKB18;
definitions TARSKI,XBOOLE_0,FUNCT_1,RELAT_1,RELAT_2,WELLORD1,CKB1,CKB15,CKB16,CKB18;
theorems TARSKI,FUNCT_1,RELAT_1,RELAT_2,ZFMISC_1,WELLORD1,ORDINAL1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes FUNCT_1,RELAT_1,ORDINAL1,XBOOLE_0;
registrations RELAT_1,FUNCT_1,ORDINAL1;
constructors RELAT_2,ORDINAL1,WELLORD1,MCART_1,CKB1,CKB15,CKB16,CKB18;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve a for set;
reserve x for set;
reserve y for set;
reserve z for set;
reserve R for Relation;
theorem
Th25: (R well_orders X implies (( field ( R |_2 X ) ) = X & ( R |_2 X ) is  well-ordering))
proof
assume that
A1: R is_reflexive_in X
and
A2: R is_transitive_in X
and
A3: R is_antisymmetric_in X
and
A4: R is_connected_in X
and
A5: R is_well_founded_in X;
A6: ( R |_2 X ) is_antisymmetric_in X
proof
let x;
let y;
assume that
A7: (x in X & y in X)
and
A8: ([ x,y ] in ( R |_2 X ) & [ y,x ] in ( R |_2 X ));
([ x,y ] in R & [ y,x ] in R) by A8,XBOOLE_0:def 4;
hence thesis by A3,A7,RELAT_2:def 4;
end;
A9: ( R |_2 X ) is_well_founded_in X
proof
let Y;
assume (Y c= X & Y <> ( {} ));
then consider a such that A10: a in Y and A11: ( R -Seg a ) misses Y by A5,WELLORD1:def 3;
take a;
thus a in Y by A10;
assume (not thesis);
then consider x being set such that A12: x in ( ( R |_2 X ) -Seg a ) and A13: x in Y by XBOOLE_0:3;
[ x,a ] in ( R |_2 X ) by A12,WELLORD1:1;
then A14: [ x,a ] in R by XBOOLE_0:def 4;
x <> a by A12,WELLORD1:1;
then x in ( R -Seg a ) by A14,WELLORD1:1;
hence contradiction by A11,A13,XBOOLE_0:3;
end;
A15: ( R |_2 X ) is_transitive_in X
proof
let x;
let y;
let z;
assume that
A16: x in X
and
A17: y in X
and
A18: z in X
and
A19: ([ x,y ] in ( R |_2 X ) & [ y,z ] in ( R |_2 X ));
([ x,y ] in R & [ y,z ] in R) by A19,XBOOLE_0:def 4;
then A20: [ x,z ] in R by A2,A16,A17,A18,RELAT_2:def 8;
[ x,z ] in [: X,X :] by A16,A18,ZFMISC_1:87;
hence thesis by A20,XBOOLE_0:def 4;
end;
A21: ( R |_2 X ) is_connected_in X
proof
let x;
let y;
assume that
A22: (x in X & y in X)
and
A23: x <> y;
A24: ([ x,y ] in [: X,X :] & [ y,x ] in [: X,X :]) by A22,ZFMISC_1:87;
([ x,y ] in R or [ y,x ] in R) by A4,A22,A23,RELAT_2:def 6;
hence thesis by A24,XBOOLE_0:def 4;
end;
thus A25: ( field ( R |_2 X ) ) = X
proof
thus ( field ( R |_2 X ) ) c= X by WELLORD1:13;
let x;
assume x in X;
then ([ x,x ] in R & [ x,x ] in [: X,X :]) by A1,RELAT_2:def 1,ZFMISC_1:87;
then [ x,x ] in ( R |_2 X ) by XBOOLE_0:def 4;
hence thesis by RELAT_1:15;
end;

( R |_2 X ) is_reflexive_in X
proof
let x;
assume x in X;
then ([ x,x ] in R & [ x,x ] in [: X,X :]) by A1,RELAT_2:def 1,ZFMISC_1:87;
hence thesis by XBOOLE_0:def 4;
end;
then ( R |_2 X ) well_orders X by A15,A6,A21,A9,WELLORD1:def 5;
hence thesis by A25,WELLORD1:4;
end;
