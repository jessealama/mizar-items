environ
vocabularies FUNCT_1,XBOOLE_0,RELAT_1,FUNCT_4,SUBSET_1,NUMBERS,ABIAN,FUNCT_7,ARYTM_3,COHSP_1,TARSKI,FUNCOP_1,ZFMISC_1,SETFAM_1,FUNCT_2,LATTICES,STRUCT_0,ORDINAL1,ORDINAL2,EQREL_1,CARD_1,BINOP_1,LATTICE3,PBOOLE,FILTER_0,FILTER_1,WELLORD1,RELAT_2,ORDERS_1,ORDERS_2,XXREAL_0,REWRITE1,XXREAL_2,SEQM_3,KNASTER;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,NAT_1,RELAT_1,RELAT_2,ORDERS_1,STRUCT_0,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,SETFAM_1,FUNCT_4,WELLORD1,ORDINAL1,ORDINAL2,COHSP_1,LATTICES,LATTICE3,QUANTAL1,ORDERS_2,ABIAN,CKB4,CKB6,CKB7,CKB18,CKB19,CKB28;
definitions TARSKI,RELAT_1,FUNCT_1,COHSP_1,LATTICE3,QUANTAL1,XBOOLE_0,ABIAN,WELLORD1,CKB4,CKB6,CKB7,CKB18,CKB19;
theorems TARSKI,SETFAM_1,ZFMISC_1,RELAT_1,FUNCT_1,FUNCOP_1,FUNCT_2,FUNCT_4,CARD_1,COHSP_1,LATTICES,LATTICE3,QUANTAL1,FILTER_0,FILTER_1,BOOLEALG,WELLORD1,RELSET_1,ORDERS_2,RELAT_2,ORDINAL1,CARD_3,XBOOLE_0,XBOOLE_1,FUNCT_7,PARTFUN1,ORDERS_1,ABIAN,NAT_1,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
schemes NAT_1,FUNCT_1,FUNCT_2,DOMAIN_1,ORDINAL2,CKB13;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,CARD_1,STRUCT_0,LATTICES,LATTICE3,QUANTAL1,CKB5;
constructors SETFAM_1,WELLORD1,WELLORD2,BINOP_1,DOMAIN_1,ORDINAL2,NAT_1,ABIAN,BOOLEALG,QUANTAL1,COHSP_1,RELSET_1,CKB4,CKB6,CKB7,CKB18,CKB19,CKB28;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve O for Ordinal;
reserve O1 for Ordinal;
reserve O2 for Ordinal;
definition
let L being Lattice;
let f being (UnOp of (the carrier of L));
let a being (Element of L);
let O being Ordinal;
redefine func (f,O) -. a -> (Element of L);

coherence
proof
deffunc F(Ordinal) = ( (f,$1) -. a );
defpred P[ Ordinal ]
 means
( (f,$1) -. a ) is (Element of L);
A1:now
let O1;
assume P[ O1 ];
then reconsider fa = ( (f,O1) -. a ) as (Element of L);
( f . fa ) = ( (f,( succ O1 )) -. a ) by CKB23:1;
hence P[ ( succ O1 ) ];
end;
A2:now
let O1;
assume that
A3: (O1 <> ( {} ) & O1 is  limit_ordinal)
and
(for O2 holds (O2 in O1 implies P[ O2 ]));
consider Ls being T-Sequence such that A4: (( dom Ls ) = O1 & (for O2 being Ordinal holds (O2 in O1 implies ( Ls . O2 ) = F(O2)))) from ORDINAL2:sch 2;
( (f,O1) -. a ) = ( "/\" (( rng Ls ),L) ) by A3,A4,CKB25:1;
hence P[ O1 ];
end;
A5: P[ ( {} ) ] by CKB21:1;
(for O holds P[ O ]) from ORDINAL2:sch 1(A5,A1,A2);
hence thesis;
end;
end;
