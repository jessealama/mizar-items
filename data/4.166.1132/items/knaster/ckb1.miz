environ
vocabularies FUNCT_1,XBOOLE_0,RELAT_1,FUNCT_4,SUBSET_1,NUMBERS,ABIAN,FUNCT_7,ARYTM_3,COHSP_1,TARSKI,FUNCOP_1,ZFMISC_1,SETFAM_1,FUNCT_2,LATTICES,STRUCT_0,ORDINAL1,ORDINAL2,EQREL_1,CARD_1,BINOP_1,LATTICE3,PBOOLE,FILTER_0,FILTER_1,WELLORD1,RELAT_2,ORDERS_1,ORDERS_2,XXREAL_0,REWRITE1,XXREAL_2,SEQM_3,KNASTER;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,NAT_1,RELAT_1,RELAT_2,ORDERS_1,STRUCT_0,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,SETFAM_1,FUNCT_4,WELLORD1,ORDINAL1,ORDINAL2,COHSP_1,LATTICES,LATTICE3,QUANTAL1,ORDERS_2,ABIAN;
definitions TARSKI,RELAT_1,FUNCT_1,COHSP_1,LATTICE3,QUANTAL1,XBOOLE_0,ABIAN,WELLORD1;
theorems TARSKI,SETFAM_1,ZFMISC_1,RELAT_1,FUNCT_1,FUNCOP_1,FUNCT_2,FUNCT_4,CARD_1,COHSP_1,LATTICES,LATTICE3,QUANTAL1,FILTER_0,FILTER_1,BOOLEALG,WELLORD1,RELSET_1,ORDERS_2,RELAT_2,ORDINAL1,CARD_3,XBOOLE_0,XBOOLE_1,FUNCT_7,PARTFUN1,ORDERS_1,ABIAN,NAT_1;
schemes NAT_1,FUNCT_1,FUNCT_2,DOMAIN_1,ORDINAL2;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,CARD_1,STRUCT_0,LATTICES,LATTICE3,QUANTAL1;
constructors SETFAM_1,WELLORD1,WELLORD2,BINOP_1,DOMAIN_1,ORDINAL2,NAT_1,ABIAN,BOOLEALG,QUANTAL1,COHSP_1,RELSET_1;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve f for Function;
reserve g for Function;
reserve h for Function;
theorem
((h = ( f \/ g ) & ( dom f ) misses ( dom g )) implies (h is  one-to-one iff ((f is  one-to-one & g is  one-to-one) & ( rng f ) misses ( rng g ))))
proof
assume that
A1: h = ( f \/ g )
and
A2: ( dom f ) misses ( dom g );
A3: ( dom h ) = ( ( dom f ) \/ ( dom g ) ) by A1,RELAT_1:1;
hereby
assume A4: h is  one-to-one;
thus f is  one-to-one
proof
assume (not f is  one-to-one);
then consider x1 being set,x2 being set such that A5: x1 in ( dom f ) and A6: x2 in ( dom f ) and A7: (( f . x1 ) = ( f . x2 ) & x1 <> x2) by FUNCT_1:def 4;
A8: x2 in ( dom h ) by A3,A6,XBOOLE_0:def 3;
[ x2,( f . x2 ) ] in f by A6,FUNCT_1:def 2;
then [ x2,( f . x2 ) ] in h by A1,XBOOLE_0:def 3;
then A9: ( f . x2 ) = ( h . x2 ) by A8,FUNCT_1:def 2;
A10: x1 in ( dom h ) by A3,A5,XBOOLE_0:def 3;
[ x1,( f . x1 ) ] in f by A5,FUNCT_1:def 2;
then [ x1,( f . x1 ) ] in h by A1,XBOOLE_0:def 3;
then ( f . x1 ) = ( h . x1 ) by A10,FUNCT_1:def 2;
hence contradiction by A4,A7,A10,A8,A9,FUNCT_1:def 4;
end;

thus g is  one-to-one
proof
assume (not g is  one-to-one);
then consider x1 being set,x2 being set such that A11: x1 in ( dom g ) and A12: x2 in ( dom g ) and A13: (( g . x1 ) = ( g . x2 ) & x1 <> x2) by FUNCT_1:def 4;
A14: x2 in ( dom h ) by A3,A12,XBOOLE_0:def 3;
[ x2,( g . x2 ) ] in g by A12,FUNCT_1:def 2;
then [ x2,( g . x2 ) ] in h by A1,XBOOLE_0:def 3;
then A15: ( g . x2 ) = ( h . x2 ) by A14,FUNCT_1:def 2;
A16: x1 in ( dom h ) by A3,A11,XBOOLE_0:def 3;
[ x1,( g . x1 ) ] in g by A11,FUNCT_1:def 2;
then [ x1,( g . x1 ) ] in h by A1,XBOOLE_0:def 3;
then ( g . x1 ) = ( h . x1 ) by A16,FUNCT_1:def 2;
hence contradiction by A4,A13,A16,A14,A15,FUNCT_1:def 4;
end;

thus ( rng f ) misses ( rng g )
proof
assume (not thesis);
then consider hx being set such that A17: hx in ( rng f ) and A18: hx in ( rng g ) by XBOOLE_0:3;
consider x1 being set such that A19: x1 in ( dom f ) and A20: hx = ( f . x1 ) by A17,FUNCT_1:def 3;
A21: x1 in ( dom h ) by A3,A19,XBOOLE_0:def 3;
consider x2 being set such that A22: x2 in ( dom g ) and A23: hx = ( g . x2 ) by A18,FUNCT_1:def 3;
A24: x2 in ( dom h ) by A3,A22,XBOOLE_0:def 3;
[ x2,hx ] in g by A22,A23,FUNCT_1:def 2;
then [ x2,hx ] in h by A1,XBOOLE_0:def 3;
then A25: ( h . x2 ) = hx by A24,FUNCT_1:def 2;
A26: x1 <> x2 by A2,A19,A22,XBOOLE_0:3;
[ x1,hx ] in f by A19,A20,FUNCT_1:def 2;
then [ x1,hx ] in h by A1,XBOOLE_0:def 3;
then ( h . x1 ) = hx by A21,FUNCT_1:def 2;
hence contradiction by A4,A26,A21,A24,A25,FUNCT_1:def 4;
end;

end;
assume A27: ((f is  one-to-one & g is  one-to-one) & ( rng f ) misses ( rng g ));
( f \/ g ) = ( f +* g ) by A2,FUNCT_4:31;
hence thesis by A1,A27,FUNCT_4:92;
end;
