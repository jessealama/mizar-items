environ
vocabularies FUNCT_1,XBOOLE_0,RELAT_1,FUNCT_4,SUBSET_1,NUMBERS,ABIAN,FUNCT_7,ARYTM_3,COHSP_1,TARSKI,FUNCOP_1,ZFMISC_1,SETFAM_1,FUNCT_2,LATTICES,STRUCT_0,ORDINAL1,ORDINAL2,EQREL_1,CARD_1,BINOP_1,LATTICE3,PBOOLE,FILTER_0,FILTER_1,WELLORD1,RELAT_2,ORDERS_1,ORDERS_2,XXREAL_0,REWRITE1,XXREAL_2,SEQM_3,KNASTER;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,NAT_1,RELAT_1,RELAT_2,ORDERS_1,STRUCT_0,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,SETFAM_1,FUNCT_4,WELLORD1,ORDINAL1,ORDINAL2,COHSP_1,LATTICES,LATTICE3,QUANTAL1,ORDERS_2,ABIAN,CKB4,CKB6,CKB7;
definitions TARSKI,RELAT_1,FUNCT_1,COHSP_1,LATTICE3,QUANTAL1,XBOOLE_0,ABIAN,WELLORD1,CKB4,CKB6,CKB7;
theorems TARSKI,SETFAM_1,ZFMISC_1,RELAT_1,FUNCT_1,FUNCOP_1,FUNCT_2,FUNCT_4,CARD_1,COHSP_1,LATTICES,LATTICE3,QUANTAL1,FILTER_0,FILTER_1,BOOLEALG,WELLORD1,RELSET_1,ORDERS_2,RELAT_2,ORDINAL1,CARD_3,XBOOLE_0,XBOOLE_1,FUNCT_7,PARTFUN1,ORDERS_1,ABIAN,NAT_1,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17;
schemes NAT_1,FUNCT_1,FUNCT_2,DOMAIN_1,ORDINAL2,CKB13;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,ORDINAL1,RELSET_1,CARD_1,STRUCT_0,LATTICES,LATTICE3,QUANTAL1,CKB5;
constructors SETFAM_1,WELLORD1,WELLORD2,BINOP_1,DOMAIN_1,ORDINAL2,NAT_1,ABIAN,BOOLEALG,QUANTAL1,COHSP_1,RELSET_1,CKB4,CKB6,CKB7;
requirements NUMERALS,BOOLE,SUBSET;
begin
definition
let L being Lattice;
let f being (Function of (the carrier of L),(the carrier of L));
let x being (Element of L);
let O being Ordinal;
func (f,O) +. x
means
:Def6: (ex L0 being T-Sequence st ((((it = ( last L0 ) & ( dom L0 ) = ( succ O )) & ( L0 . ( {} ) ) = x) & (for C being Ordinal holds (( succ C ) in ( succ O ) implies ( L0 . ( succ C ) ) = ( f . ( L0 . C ) )))) & (for C being Ordinal holds (((C in ( succ O ) & C <> ( {} )) & C is  limit_ordinal) implies ( L0 . C ) = ( "\/" (( rng ( L0 | C ) ),L) )))));
correctness
proof
deffunc D(Ordinal,T-Sequence) = ( "\/" (( rng $2 ),L) );
deffunc C(Ordinal,set) = ( f . $2 );
((ex z being set st (ex S being T-Sequence st ((((z = ( last S ) & ( dom S ) = ( succ O )) & ( S . ( {} ) ) = x) & (for C being Ordinal holds (( succ C ) in ( succ O ) implies ( S . ( succ C ) ) = C(C,( S . C ))))) & (for C being Ordinal holds (((C in ( succ O ) & C <> ( {} )) & C is  limit_ordinal) implies ( S . C ) = D(C,( S | C ))))))) & (for x1,x2 being set holds (((ex L0 being T-Sequence st ((((x1 = ( last L0 ) & ( dom L0 ) = ( succ O )) & ( L0 . ( {} ) ) = x) & (for C being Ordinal holds (( succ C ) in ( succ O ) implies ( L0 . ( succ C ) ) = C(C,( L0 . C ))))) & (for C being Ordinal holds (((C in ( succ O ) & C <> ( {} )) & C is  limit_ordinal) implies ( L0 . C ) = D(C,( L0 | C )))))) & (ex L0 being T-Sequence st ((((x2 = ( last L0 ) & ( dom L0 ) = ( succ O )) & ( L0 . ( {} ) ) = x) & (for C being Ordinal holds (( succ C ) in ( succ O ) implies ( L0 . ( succ C ) ) = C(C,( L0 . C ))))) & (for C being Ordinal holds (((C in ( succ O ) & C <> ( {} )) & C is  limit_ordinal) implies ( L0 . C ) = D(C,( L0 | C ))))))) implies x1 = x2))) from ORDINAL2:sch 7;
hence thesis;
end;
end;
