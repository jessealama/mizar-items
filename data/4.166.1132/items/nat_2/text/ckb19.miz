environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,SUBSET_1,FINSEQ_1,PARTFUN1,CARD_1,XXREAL_0,ARYTM_3,FUNCT_1,XREAL_0,ORDINAL1,INT_1,RELAT_1,ARYTM_1,POWER,ABIAN,ZFMISC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,XCMPLX_0,XREAL_0,NUMBERS,INT_1,NAT_1,NAT_D,POWER,ABIAN,FUNCT_1,PARTFUN1,FINSEQ_1,XXREAL_0;
theorems AXIOMS,INT_1,NAT_1,ABIAN,POWER,FINSEQ_1,FINSEQ_4,XREAL_1,TARSKI,XCMPLX_1,ORDINAL1,NAT_D,XXREAL_0,XREAL_0,ZFMISC_1,CARD_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
schemes NAT_1,RECDEF_1,CKB1;
registrations RELSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,ABIAN,SERIES_1,XBOOLE_0,ZFMISC_1,FINSEQ_1;
constructors XXREAL_0,REAL_1,NAT_1,NAT_D,MEMBERED,SERIES_1,BINARITH,ABIAN;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for Nat;
theorem
(n > ( 0 ) implies (( n mod 2 ) = ( 0 ) iff ( ( n -' 1 ) mod 2 ) = 1))
proof
assume A1: n > ( 0 );
thus (( n mod 2 ) = ( 0 ) implies ( ( n -' 1 ) mod 2 ) = 1)
proof
consider t being Nat such that A2: n = ( ( 2 * t ) + ( n mod 2 ) ) and ( n mod 2 ) < 2 by NAT_D:def 2;
assume A3: ( n mod 2 ) = ( 0 );
then t > ( 0 ) by A1,A2;
then A4: t >= ( ( 0 ) + 1 ) by NAT_1:13;
n >= ( ( 0 ) + 1 ) by A1,NAT_1:13;
then ( n -' 1 ) = ( ( 2 * ( ( t - 1 ) + 1 ) ) - 1 ) by A3,A2,XREAL_1:233
.= ( ( 2 * ( t - 1 ) ) + ( ( 1 + 1 ) - 1 ) )
.= ( ( 2 * ( t -' 1 ) ) + 1 ) by A4,XREAL_1:233;
hence thesis by NAT_D:def 2;
end;

assume ( ( n -' 1 ) mod 2 ) = 1;
then consider t being Nat such that A5: ( n -' 1 ) = ( ( 2 * t ) + 1 ) and 1 < 2 by NAT_D:def 2;
n >= ( ( 0 ) + 1 ) by A1,NAT_1:13;
then n = ( ( ( 2 * t ) + 1 ) + 1 ) by A5,XREAL_1:235
.= ( ( 2 * ( t + 1 ) ) + ( 0 ) );
hence thesis by NAT_D:def 2;
end;
