environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,SUBSET_1,FINSEQ_1,PARTFUN1,CARD_1,XXREAL_0,ARYTM_3,FUNCT_1,XREAL_0,ORDINAL1,INT_1,RELAT_1,ARYTM_1,POWER,ABIAN,ZFMISC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,XCMPLX_0,XREAL_0,NUMBERS,INT_1,NAT_1,NAT_D,POWER,ABIAN,FUNCT_1,PARTFUN1,FINSEQ_1,XXREAL_0,CKB29;
definitions CKB29;
theorems AXIOMS,INT_1,NAT_1,ABIAN,POWER,FINSEQ_1,FINSEQ_4,XREAL_1,TARSKI,XCMPLX_1,ORDINAL1,NAT_D,XXREAL_0,XREAL_0,ZFMISC_1,CARD_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB31,CKB32;
schemes NAT_1,RECDEF_1,CKB1,CKB33;
registrations RELSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,ABIAN,SERIES_1,XBOOLE_0,ZFMISC_1,FINSEQ_1,CKB30;
constructors XXREAL_0,REAL_1,NAT_1,NAT_D,MEMBERED,SERIES_1,BINARITH,ABIAN;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve i for Nat;
reserve j for Nat;
reserve k for Nat;
theorem
( ( i -' j ) -' k ) = ( i -' ( j + k ) )
proof
per cases ;
suppose A1: i <= j;

hence ( ( i -' j ) -' k ) = ( ( 0 ) -' k ) by CKB9:1
.= ( 0 ) by CKB9:1
.= ( i -' ( j + k ) ) by A1,CKB9:1,NAT_1:12;
end;
suppose A2: (j <= i & ( i - j ) <= k);

then A3: i <= ( j + k ) by XREAL_1:20;
( i -' j ) = ( i - j ) by A2,XREAL_1:233;
hence ( ( i -' j ) -' k ) = ( 0 ) by A2,CKB9:1
.= ( i -' ( j + k ) ) by A3,CKB9:1;
end;
suppose A4: (j <= i & k <= ( i - j ));

then A5: ( k + j ) <= i by XREAL_1:19;
( i -' j ) = ( i - j ) by A4,XREAL_1:233;
hence ( ( i -' j ) -' k ) = ( ( i - j ) - k ) by A4,XREAL_1:233
.= ( i - ( j + k ) )
.= ( i -' ( j + k ) ) by A5,XREAL_1:233;
end;
end;
