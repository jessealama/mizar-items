environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,SUBSET_1,FINSEQ_1,PARTFUN1,CARD_1,XXREAL_0,ARYTM_3,FUNCT_1,XREAL_0,ORDINAL1,INT_1,RELAT_1,ARYTM_1,POWER,ABIAN,ZFMISC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,XCMPLX_0,XREAL_0,NUMBERS,INT_1,NAT_1,NAT_D,POWER,ABIAN,FUNCT_1,PARTFUN1,FINSEQ_1,XXREAL_0;
theorems AXIOMS,INT_1,NAT_1,ABIAN,POWER,FINSEQ_1,FINSEQ_4,XREAL_1,TARSKI,XCMPLX_1,ORDINAL1,NAT_D,XXREAL_0,XREAL_0,ZFMISC_1,CARD_1,CKB2,CKB3,CKB4,CKB5;
schemes NAT_1,RECDEF_1,CKB1;
registrations RELSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,ABIAN,SERIES_1,XBOOLE_0,ZFMISC_1,FINSEQ_1;
constructors XXREAL_0,REAL_1,NAT_1,NAT_D,MEMBERED,SERIES_1,BINARITH,ABIAN;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve i for Nat;
reserve j for Nat;
reserve k for Nat;
reserve l for Nat;
theorem
(((i <= j & k <= j) & i = ( ( j -' k ) + l )) implies k = ( ( j -' i ) + l ))
proof
assume that
A1: i <= j
and
A2: (k <= j & i = ( ( j -' k ) + l ));
( i - l ) = ( j - k ) by A2,XREAL_1:233;
hence k = ( ( j - i ) + l )
.= ( ( j -' i ) + l ) by A1,XREAL_1:233;
end;
