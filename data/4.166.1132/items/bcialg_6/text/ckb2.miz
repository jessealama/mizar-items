environ
vocabularies NUMBERS,BCIALG_1,SUBSET_1,INT_1,FUNCT_1,NAT_1,XBOOLE_0,ZFMISC_1,STRUCT_0,CARD_1,SUPINF_2,ARYTM_3,RELAT_1,NEWTON,COMPLEX1,XXREAL_0,WAYBEL15,ARYTM_1,GROUP_1,INT_2,UNIALG_2,CARD_FIL,RCOMP_1,BCIALG_2,REALSET1,MSSUBFAM,FUNCOP_1,MOD_4,GROUP_6,TARSKI,FUNCT_2,CHORD,WELLORD1,EQREL_1,ALG_1,CARD_3,BINOP_1,BCIALG_6;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,REALSET1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,STRUCT_0,BCIALG_1,FUNCOP_1,NAT_1,NUMBERS,INT_2,XXREAL_0,BINOP_2,NAT_D,INT_1,BCIALG_2,EQREL_1,CKB1;
definitions TARSKI,REALSET1,BINOP_1,STRUCT_0,BCIALG_1,FUNCT_1,BCIALG_2,XBOOLE_0;
theorems TARSKI,FUNCT_1,FUNCT_2,FUNCOP_1,BINOP_1,ZFMISC_1,RELAT_1,XBOOLE_0,XBOOLE_1,BCIALG_1,GROUP_6,BCIALG_2,EQREL_1,RELSET_1,ABSVALUE,ORDINAL1,NAT_D,XREAL_1,INT_1,XCMPLX_1,INT_2,NAT_1,NEWTON,XXREAL_0;
schemes BINOP_1,FUNCT_2,NAT_1,INT_1,CLASSES1;
registrations XBOOLE_0,RELSET_1,REALSET1,STRUCT_0,BCIALG_1,BCIALG_2,FUNCT_2,PARTFUN1,NAT_1,XREAL_0,ORDINAL1,XXREAL_0,INT_1;
constructors BINOP_1,REALSET1,BCIALG_2,REAL_1,BINOP_2,FINSEQOP,SUPINF_1,SEQ_1,NAT_D,RELSET_1,CKB1;
requirements BOOLE,SUBSET,NUMERALS,ARITHM,REAL;
begin
reserve n for (Element of ( NAT ));
definition
let G being non empty BCIStr_0;
func BCI-power G -> (Function of [: (the carrier of G),( NAT ) :],(the carrier of G))
means
:Def1: (for x being (Element of G) holds (( it . (x,( 0 )) ) = ( 0. G ) & (for n holds ( it . (x,( n + 1 )) ) = ( x \ ( ( it . (x,n) ) ` ) ))));
existence
proof
defpred P[ set,set ]
 means
(ex f being (Function of ( NAT ),(the carrier of G)) st (ex x being (Element of G) st ((($1 = x & f = $2) & ( f . ( 0 ) ) = ( 0. G )) & (for n holds ( f . ( n + 1 ) ) = ( x \ ( ( f . n ) ` ) )))));
A1: (for x being set holds (x in (the carrier of G) implies (ex y being set st P[ x,y ])))
proof
let x being set;
assume x in (the carrier of G);
then reconsider b = x as (Element of G);
deffunc Ff(Nat,(Element of G)) = ( b \ ( $2 ` ) );
consider g0 being (Function of ( NAT ),(the carrier of G)) such that A2: (( g0 . ( 0 ) ) = ( 0. G ) & (for n being Nat holds ( g0 . ( n + 1 ) ) = Ff(n,( g0 . n )))) from NAT_1:sch 12;
reconsider y = g0 as set;
take y;
take g0;
take b;
thus ((x = b & g0 = y) & ( g0 . ( 0 ) ) = ( 0. G )) by A2;
let n;
thus thesis by A2;
end;
consider f being Function such that A3: (( dom f ) = (the carrier of G) & (for x being set holds (x in (the carrier of G) implies P[ x,( f . x ) ]))) from CLASSES1:sch 1(A1);
defpred P[ (Element of G),(Element of ( NAT )),set ]
 means
(ex g0 being (Function of ( NAT ),(the carrier of G)) st (g0 = ( f . $1 ) & $3 = ( g0 . $2 )));
A4: (for a being (Element of G) holds (for n being (Element of ( NAT )) holds (ex b being (Element of G) st P[ a,n,b ])))
proof
let a being (Element of G);
let n being (Element of ( NAT ));
consider g0 being (Function of ( NAT ),(the carrier of G)),h being (Element of G) such that a = h and A5: g0 = ( f . a ) and ( g0 . ( 0 ) ) = ( 0. G ) and (for n holds ( g0 . ( n + 1 ) ) = ( h \ ( ( g0 . n ) ` ) )) by A3;
take ( g0 . n );
take g0;
thus thesis by A5;
end;
consider F being (Function of [: (the carrier of G),( NAT ) :],(the carrier of G)) such that A6: (for a being (Element of G) holds (for n being (Element of ( NAT )) holds P[ a,n,( F . (a,n) ) ])) from BINOP_1:sch 3(A4);
take F;
let h being (Element of G);
A7: (ex g2 being (Function of ( NAT ),(the carrier of G)) st (ex b being (Element of G) st (((h = b & g2 = ( f . h )) & ( g2 . ( 0 ) ) = ( 0. G )) & (for n holds ( g2 . ( n + 1 ) ) = ( b \ ( ( g2 . n ) ` ) ))))) by A3;
(ex g1 being (Function of ( NAT ),(the carrier of G)) st (g1 = ( f . h ) & ( F . (h,( 0 )) ) = ( g1 . ( 0 ) ))) by A6;
hence ( F . (h,( 0 )) ) = ( 0. G ) by A7;
let n;
A8: (ex g2 being (Function of ( NAT ),(the carrier of G)) st (ex b being (Element of G) st (((h = b & g2 = ( f . h )) & ( g2 . ( 0 ) ) = ( 0. G )) & (for n holds ( g2 . ( n + 1 ) ) = ( b \ ( ( g2 . n ) ` ) ))))) by A3;
((ex g0 being (Function of ( NAT ),(the carrier of G)) st (g0 = ( f . h ) & ( F . (h,n) ) = ( g0 . n ))) & (ex g1 being (Function of ( NAT ),(the carrier of G)) st (g1 = ( f . h ) & ( F . (h,( n + 1 )) ) = ( g1 . ( n + 1 ) )))) by A6;
hence thesis by A8;
end;
uniqueness
proof
let f being (Function of [: (the carrier of G),( NAT ) :],(the carrier of G)),g being (Function of [: (the carrier of G),( NAT ) :],(the carrier of G));
assume that
A9: (for h being (Element of G) holds (( f . (h,( 0 )) ) = ( 0. G ) & (for n holds ( f . (h,( n + 1 )) ) = ( h \ ( ( f . (h,n) ) ` ) ))))
and
A10: (for h being (Element of G) holds (( g . (h,( 0 )) ) = ( 0. G ) & (for n holds ( g . (h,( n + 1 )) ) = ( h \ ( ( g . (h,n) ) ` ) ))));
now
let h being (Element of G);
let n being (Element of ( NAT ));
defpred P[ (Element of ( NAT )) ]
 means
( f . [ h,$1 ] ) = ( g . [ h,$1 ] );
A11:now
let n;
assume A12: P[ n ];
A13: ( g . [ h,n ] ) = ( g . (h,n) );
( f . [ h,( n + 1 ) ] ) = ( f . (h,( n + 1 )) )
.= ( h \ ( ( f . (h,n) ) ` ) ) by A9
.= ( g . (h,( n + 1 )) ) by A10,A12,A13
.= ( g . [ h,( n + 1 ) ] );
hence P[ ( n + 1 ) ];
end;
( f . [ h,( 0 ) ] ) = ( f . (h,( 0 )) )
.= ( 0. G ) by A9
.= ( g . (h,( 0 )) ) by A10
.= ( g . [ h,( 0 ) ] );
then A14: P[ ( 0 ) ];
(for n holds P[ n ]) from NAT_1:sch 1(A14,A11);
hence ( f . (h,n) ) = ( g . (h,n) );
end;
hence thesis by BINOP_1:2;
end;
end;
