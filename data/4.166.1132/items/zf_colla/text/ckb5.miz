environ
vocabularies XBOOLE_0,ORDINAL1,FUNCT_1,SUBSET_1,RELAT_1,TARSKI,ZF_LANG,ZF_MODEL,BVFUNC_2,CARD_1,XBOOLEAN,FUNCT_4,ARYTM_3,ZF_COLLA;
notations TARSKI,XBOOLE_0,SUBSET_1,XCMPLX_0,RELAT_1,FUNCT_1,ZF_LANG,NUMBERS,FUNCT_2,FUNCT_7,ORDINAL1,ZF_MODEL,CKB1;
definitions TARSKI,ORDINAL1,XBOOLE_0,CKB1;
theorems TARSKI,FUNCT_1,ZF_LANG,ZF_MODEL,ORDINAL1,ZFMISC_1,RELAT_1,XBOOLE_0,FUNCT_7,CKB1,CKB2,CKB3,CKB4;
schemes TARSKI,CLASSES1,ORDINAL1,XBOOLE_0;
registrations XBOOLE_0,FUNCT_1,ORDINAL1,MEMBERED,ZF_LANG,RELSET_1;
constructors NAT_1,MEMBERED,ZF_MODEL,FUNCT_7,CKB1;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve E for non empty set;
reserve A for Ordinal;
reserve B for Ordinal;
reserve C for Ordinal;
reserve d for (Element of E);
reserve d1 for (Element of E);
reserve d9 for (Element of E);
theorem
Th4: (A c= B implies ( Collapse (E,A) ) c= ( Collapse (E,B) ))
proof
assume A1: A c= B;
let x;
assume x in ( Collapse (E,A) );
then x in { d: (for d1 holds (d1 in d implies (ex B st (B in A & d1 in ( Collapse (E,B) ))))) } by CKB2:1;
then consider d such that A2: d = x and A3: (for d1 holds (d1 in d implies (ex B st (B in A & d1 in ( Collapse (E,B) )))));
(for d1 holds (d1 in d implies (ex C st (C in B & d1 in ( Collapse (E,C) )))))
proof
let d1;
assume d1 in d;
then consider C such that A4: (C in A & d1 in ( Collapse (E,C) )) by A3;
take C;
thus thesis by A1,A4;
end;
then x in { d9: (for d1 holds (d1 in d9 implies (ex C st (C in B & d1 in ( Collapse (E,C) ))))) } by A2;
hence thesis by CKB2:1;
end;
