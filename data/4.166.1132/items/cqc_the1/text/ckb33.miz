environ
vocabularies NUMBERS,ORDINAL1,SUBSET_1,XXREAL_0,ARYTM_3,XBOOLE_0,TARSKI,FINSET_1,CARD_1,MCART_1,ZFMISC_1,CQC_LANG,QC_LANG1,XBOOLEAN,BVFUNC_2,FUNCT_1,FINSEQ_1,NAT_1,RELAT_1,ORDINAL4,ARYTM_1,CQC_THE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,XCMPLX_0,FUNCT_1,NUMBERS,NAT_1,FINSET_1,FINSEQ_1,MCART_1,QC_LANG1,CQC_LANG,XXREAL_0,CKB5,CKB7,CKB24,CKB29,CKB30;
definitions TARSKI,XBOOLE_0,CKB5,CKB7,CKB24,CKB29,CKB30;
theorems TARSKI,ZFMISC_1,FINSET_1,FINSEQ_1,MCART_1,FUNCT_1,NAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32;
schemes NAT_1,FRAENKEL,XBOOLE_0;
registrations SUBSET_1,RELSET_1,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,CQC_LANG,ORDINAL1,CARD_1,CKB25;
constructors XXREAL_0,XREAL_0,NAT_1,CQC_LANG,CKB5,CKB7,CKB24,CKB29,CKB30;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve i for (Element of ( NAT ));
reserve j for (Element of ( NAT ));
reserve X for (Subset of ( CQC-WFF ));
reserve p for (Element of ( CQC-WFF ));
reserve q for (Element of ( CQC-WFF ));
reserve s for QC-formula;
reserve x for bound_QC-variable;
reserve y for bound_QC-variable;
reserve f for (FinSequence of [: ( CQC-WFF ),( Proof_Step_Kinds ) :]);
theorem
(f is_a_proof_wrt X implies ((((((( ( f . 1 ) `2 ) = ( 0 ) or ( ( f . 1 ) `2 ) = 1) or ( ( f . 1 ) `2 ) = 2) or ( ( f . 1 ) `2 ) = 3) or ( ( f . 1 ) `2 ) = 4) or ( ( f . 1 ) `2 ) = 5) or ( ( f . 1 ) `2 ) = 6))
proof
assume A1: f is_a_proof_wrt X;
then A2: 1 <= ( len f ) by CKB32:1;
then A3: f,1 is_a_correct_step_wrt X by A1,CKB30:def 1;
assume A4: (((((((not ( ( f . 1 ) `2 ) = ( 0 )) & (not ( ( f . 1 ) `2 ) = 1)) & (not ( ( f . 1 ) `2 ) = 2)) & (not ( ( f . 1 ) `2 ) = 3)) & (not ( ( f . 1 ) `2 ) = 4)) & (not ( ( f . 1 ) `2 ) = 5)) & (not ( ( f . 1 ) `2 ) = 6));
per cases  by A2,A4,CKB28:1;
suppose ( ( f . 1 ) `2 ) = 7;

then (ex i st (ex j st (ex p st (ex q st ((((((1 <= i & i < 1) & 1 <= j) & j < i) & p = ( ( f . j ) `1 )) & q = ( ( f . 1 ) `1 )) & ( ( f . i ) `1 ) = ( p => q )))))) by A3,CKB29:def 1;
hence contradiction;
end;
suppose ( ( f . 1 ) `2 ) = 8;

then (ex i st (ex p st (ex q st (ex x st ((((1 <= i & i < 1) & ( ( f . i ) `1 ) = ( p => q )) & (not x in ( still_not-bound_in p ))) & ( ( f . 1 ) `1 ) = ( p => ( All (x,q) ) )))))) by A3,CKB29:def 1;
hence contradiction;
end;
suppose ( ( f . 1 ) `2 ) = 9;

then (ex i st (ex x st (ex y st (ex s st ((((((1 <= i & i < 1) & ( s . x ) in ( CQC-WFF )) & ( s . y ) in ( CQC-WFF )) & (not x in ( still_not-bound_in s ))) & ( s . x ) = ( ( f . i ) `1 )) & ( ( f . 1 ) `1 ) = ( s . y )))))) by A3,CKB29:def 1;
hence contradiction;
end;
end;
