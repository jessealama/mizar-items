environ
vocabularies NUMBERS,ORDINAL1,SUBSET_1,XXREAL_0,ARYTM_3,XBOOLE_0,TARSKI,FINSET_1,CARD_1,MCART_1,ZFMISC_1,CQC_LANG,QC_LANG1,XBOOLEAN,BVFUNC_2,FUNCT_1,FINSEQ_1,NAT_1,RELAT_1,ORDINAL4,ARYTM_1,CQC_THE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,XCMPLX_0,FUNCT_1,NUMBERS,NAT_1,FINSET_1,FINSEQ_1,MCART_1,QC_LANG1,CQC_LANG,XXREAL_0;
definitions TARSKI,XBOOLE_0;
theorems TARSKI,ZFMISC_1,FINSET_1,FINSEQ_1,MCART_1,FUNCT_1,NAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,RELAT_1;
schemes NAT_1,FRAENKEL,XBOOLE_0;
registrations SUBSET_1,RELSET_1,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,CQC_LANG,ORDINAL1,CARD_1;
constructors XXREAL_0,XREAL_0,NAT_1,CQC_LANG;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve i for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve a for set;
theorem
Th11: { k: k <= ( n + 1 ) } = ( { i: i <= n } \/ { ( n + 1 ) } )
proof
thus { k: k <= ( n + 1 ) } c= ( { i: i <= n } \/ { ( n + 1 ) } )
proof
let a;
assume a in { k: k <= ( n + 1 ) };
then consider k such that A1: k = a and A2: k <= ( n + 1 );
(k <= n or k = ( n + 1 )) by A2,NAT_1:8;
then (a in { i: i <= n } or a in { ( n + 1 ) }) by A1,TARSKI:def 1;
hence thesis by XBOOLE_0:def 3;
end;

thus ( { i: i <= n } \/ { ( n + 1 ) } ) c= { k: k <= ( n + 1 ) }
proof
let a;
assume a in ( { i: i <= n } \/ { ( n + 1 ) } );
then (a in { i: i <= n } or a in { ( n + 1 ) }) by XBOOLE_0:def 3;
then A3: ((ex i st (a = i & i <= n)) or a = ( n + 1 )) by TARSKI:def 1;
now
given i such that
A4: a = i
and
A5: i <= n;

n <= ( n + 1 ) by NAT_1:11;
then i <= ( n + 1 ) by A5,XXREAL_0:2;
hence thesis by A4;
end;
hence thesis by A3;
end;

end;
