environ
vocabularies NUMBERS,ORDINAL1,SUBSET_1,XXREAL_0,ARYTM_3,XBOOLE_0,TARSKI,FINSET_1,CARD_1,MCART_1,ZFMISC_1,CQC_LANG,QC_LANG1,XBOOLEAN,BVFUNC_2,FUNCT_1,FINSEQ_1,NAT_1,RELAT_1,ORDINAL4,ARYTM_1,CQC_THE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,XCMPLX_0,FUNCT_1,NUMBERS,NAT_1,FINSET_1,FINSEQ_1,MCART_1,QC_LANG1,CQC_LANG,XXREAL_0,CKB5,CKB7,CKB24,CKB29,CKB30,CKB39;
definitions TARSKI,XBOOLE_0,CKB5,CKB7,CKB24,CKB29,CKB30,CKB39;
theorems TARSKI,ZFMISC_1,FINSET_1,FINSEQ_1,MCART_1,FUNCT_1,NAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49;
schemes NAT_1,FRAENKEL,XBOOLE_0;
registrations SUBSET_1,RELSET_1,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,CQC_LANG,ORDINAL1,CARD_1,CKB25;
constructors XXREAL_0,XREAL_0,NAT_1,CQC_LANG,CKB5,CKB7,CKB24,CKB29,CKB30,CKB39;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve X for (Subset of ( CQC-WFF ));
reserve p for (Element of ( CQC-WFF ));
reserve q for (Element of ( CQC-WFF ));
reserve t for (Element of ( CQC-WFF ));
reserve F for (Element of ( CQC-WFF ));
reserve G for (Element of ( CQC-WFF ));
reserve x for bound_QC-variable;
reserve f for (FinSequence of [: ( CQC-WFF ),( Proof_Step_Kinds ) :]);
theorem
Lm10: (for X holds ((( p => q ) in { F: (ex f st (f is_a_proof_wrt X & ( Effect f ) = F)) } & (not x in ( still_not-bound_in p ))) implies ( p => ( All (x,q) ) ) in { G: (ex f st (f is_a_proof_wrt X & ( Effect f ) = G)) }))
proof
let X;
assume that
A1: ( p => q ) in { F: (ex f st (f is_a_proof_wrt X & ( Effect f ) = F)) }
and
A2: (not x in ( still_not-bound_in p ));
(ex t st (t = ( p => q ) & (ex f st (f is_a_proof_wrt X & ( Effect f ) = t)))) by A1;
then consider f such that A3: f is_a_proof_wrt X and A4: ( Effect f ) = ( p => q );
A5: f <> ( {} ) by A3,CKB30:def 1;
reconsider qq = [ ( p => ( All (x,q) ) ),8 ] as (Element of [: ( CQC-WFF ),( Proof_Step_Kinds ) :]) by CKB26:1,ZFMISC_1:87;
set h = ( f ^ <* qq *> );
A6: ( len h ) = ( ( len f ) + ( len <* qq *> ) ) by FINSEQ_1:22
.= ( ( len f ) + 1 ) by FINSEQ_1:39;
((1 <= n & n <= ( len h )) implies h,n is_a_correct_step_wrt X)
proof
assume that
A7: 1 <= n
and
A8: n <= ( len h );
now
per cases  by A6,A8,NAT_1:8;
suppose A9: n <= ( len f );

then f,n is_a_correct_step_wrt X by A3,A7,CKB30:def 1;
hence thesis by A7,A9,CKB34:1;
end;
suppose A10: n = ( len h );

then ( h . n ) = qq by A6,FINSEQ_1:42;
then A11: (( ( h . n ) `2 ) = 8 & ( ( h . n ) `1 ) = ( p => ( All (x,q) ) )) by MCART_1:7;
( len f ) <> ( 0 ) by A3,CKB32:1;
then ( len f ) in ( Seg ( len f ) ) by FINSEQ_1:3;
then ( len f ) in ( dom f ) by FINSEQ_1:def 3;
then A12: ( ( h . ( len f ) ) `1 ) = ( ( f . ( len f ) ) `1 ) by FINSEQ_1:def 7
.= ( p => q ) by A4,A5,CKB39:def 1;
A13: 1 <= ( len f ) by A3,CKB32:1;
( len f ) < n by A6,A10,NAT_1:13;
hence thesis by A2,A11,A12,A13,CKB29:def 1;
end;
end;
hence thesis;
end;
then A14: h is_a_proof_wrt X by CKB30:def 1;
( Effect h ) = ( ( h . ( ( len f ) + 1 ) ) `1 ) by A6,CKB39:def 1
.= ( qq `1 ) by FINSEQ_1:42
.= ( p => ( All (x,q) ) ) by MCART_1:7;
hence thesis by A14;
end;
