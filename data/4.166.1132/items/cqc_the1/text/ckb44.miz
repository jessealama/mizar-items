environ
vocabularies NUMBERS,ORDINAL1,SUBSET_1,XXREAL_0,ARYTM_3,XBOOLE_0,TARSKI,FINSET_1,CARD_1,MCART_1,ZFMISC_1,CQC_LANG,QC_LANG1,XBOOLEAN,BVFUNC_2,FUNCT_1,FINSEQ_1,NAT_1,RELAT_1,ORDINAL4,ARYTM_1,CQC_THE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,XCMPLX_0,FUNCT_1,NUMBERS,NAT_1,FINSET_1,FINSEQ_1,MCART_1,QC_LANG1,CQC_LANG,XXREAL_0,CKB5,CKB7,CKB24,CKB29,CKB30,CKB39;
definitions TARSKI,XBOOLE_0,CKB5,CKB7,CKB24,CKB29,CKB30,CKB39;
theorems TARSKI,ZFMISC_1,FINSET_1,FINSEQ_1,MCART_1,FUNCT_1,NAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43;
schemes NAT_1,FRAENKEL,XBOOLE_0;
registrations SUBSET_1,RELSET_1,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,CQC_LANG,ORDINAL1,CARD_1,CKB25;
constructors XXREAL_0,XREAL_0,NAT_1,CQC_LANG,CKB5,CKB7,CKB24,CKB29,CKB30,CKB39;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve X for (Subset of ( CQC-WFF ));
reserve p for (Element of ( CQC-WFF ));
reserve F for (Element of ( CQC-WFF ));
reserve f for (FinSequence of [: ( CQC-WFF ),( Proof_Step_Kinds ) :]);
theorem
Lm4: (for X holds ( ( ( 'not' p ) => p ) => p ) in { F: (ex f st (f is_a_proof_wrt X & ( Effect f ) = F)) })
proof
let X;
reconsider pp = [ ( ( ( 'not' p ) => p ) => p ),2 ] as (Element of [: ( CQC-WFF ),( Proof_Step_Kinds ) :]) by CKB26:1,ZFMISC_1:87;
set f = <* pp *>;
A1: ( len f ) = 1 by FINSEQ_1:40;
A2: ( f . 1 ) = pp by FINSEQ_1:40;
then ( ( f . ( len f ) ) `1 ) = ( ( ( 'not' p ) => p ) => p ) by A1,MCART_1:7;
then A3: ( Effect f ) = ( ( ( 'not' p ) => p ) => p ) by CKB39:def 1;
((1 <= n & n <= ( len f )) implies f,n is_a_correct_step_wrt X)
proof
assume (1 <= n & n <= ( len f ));
then A4: n = 1 by A1,XXREAL_0:1;
A5: ( ( f . 1 ) `2 ) = 2 by A2,MCART_1:7;
( ( f . n ) `1 ) = ( ( ( 'not' p ) => p ) => p ) by A2,A4,MCART_1:7;
hence thesis by A4,A5,CKB29:def 1;
end;
then f is_a_proof_wrt X by CKB30:def 1;
hence thesis by A3;
end;
