environ
vocabularies NUMBERS,ORDINAL1,SUBSET_1,XXREAL_0,ARYTM_3,XBOOLE_0,TARSKI,FINSET_1,CARD_1,MCART_1,ZFMISC_1,CQC_LANG,QC_LANG1,XBOOLEAN,BVFUNC_2,FUNCT_1,FINSEQ_1,NAT_1,RELAT_1,ORDINAL4,ARYTM_1,CQC_THE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,XCMPLX_0,FUNCT_1,NUMBERS,NAT_1,FINSET_1,FINSEQ_1,MCART_1,QC_LANG1,CQC_LANG,XXREAL_0,CKB5,CKB7,CKB24,CKB29,CKB30;
definitions TARSKI,XBOOLE_0,CKB5,CKB7,CKB24,CKB29,CKB30;
theorems TARSKI,ZFMISC_1,FINSET_1,FINSEQ_1,MCART_1,FUNCT_1,NAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37;
schemes NAT_1,FRAENKEL,XBOOLE_0;
registrations SUBSET_1,RELSET_1,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,CQC_LANG,ORDINAL1,CARD_1,CKB25;
constructors XXREAL_0,XREAL_0,NAT_1,CQC_LANG,CKB5,CKB7,CKB24,CKB29,CKB30;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve i for (Element of ( NAT ));
reserve j for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve l for (Element of ( NAT ));
reserve X for (Subset of ( CQC-WFF ));
reserve p for (Element of ( CQC-WFF ));
reserve q for (Element of ( CQC-WFF ));
reserve r for (Element of ( CQC-WFF ));
reserve s for QC-formula;
reserve x for bound_QC-variable;
reserve y for bound_QC-variable;
reserve f for (FinSequence of [: ( CQC-WFF ),( Proof_Step_Kinds ) :]);
theorem
Th64: (((f is_a_proof_wrt X & 1 <= l) & l <= ( len f )) implies ( ( f . l ) `1 ) in ( Cn X ))
proof
assume that
A1: f is_a_proof_wrt X
and
A2: (1 <= l & l <= ( len f ));
(for n holds ((1 <= n & n <= ( len f )) implies ( ( f . n ) `1 ) in ( Cn X )))
proof
defpred P[ Nat ]
 means
((1 <= $1 & $1 <= ( len f )) implies ( ( f . $1 ) `1 ) in ( Cn X ));
A3: (for n being Nat holds ((for k being Nat holds (k < n implies P[ k ])) implies P[ n ]))
proof
let n being Nat;
assume A4: (for k being Nat holds (k < n implies P[ k ]));
A5: n in ( NAT ) by ORDINAL1:def 12;
assume that
A6: 1 <= n
and
A7: n <= ( len f );
A8: f,n is_a_correct_step_wrt X by A1,A5,A6,A7,CKB30:def 1;
now
per cases  by A6,A7,CKB28:1;
suppose ( ( f . n ) `2 ) = ( 0 );

then A9: ( ( f . n ) `1 ) in X by A8,CKB29:def 1;
X c= ( Cn X ) by CKB19:1;
hence thesis by A9;
end;
suppose ( ( f . n ) `2 ) = 1;

then ( ( f . n ) `1 ) = ( VERUM ) by A8,CKB29:def 1;
hence thesis by CKB8:1;
end;
suppose ( ( f . n ) `2 ) = 2;

then (ex p st ( ( f . n ) `1 ) = ( ( ( 'not' p ) => p ) => p )) by A8,CKB29:def 1;
hence thesis by CKB9:1;
end;
suppose ( ( f . n ) `2 ) = 3;

then (ex p st (ex q st ( ( f . n ) `1 ) = ( p => ( ( 'not' p ) => q ) ))) by A8,CKB29:def 1;
hence thesis by CKB10:1;
end;
suppose ( ( f . n ) `2 ) = 4;

then (ex p st (ex q st (ex r st ( ( f . n ) `1 ) = ( ( p => q ) => ( ( 'not' ( q '&' r ) ) => ( 'not' ( p '&' r ) ) ) )))) by A8,CKB29:def 1;
hence thesis by CKB11:1;
end;
suppose ( ( f . n ) `2 ) = 5;

then (ex p st (ex q st ( ( f . n ) `1 ) = ( ( p '&' q ) => ( q '&' p ) ))) by A8,CKB29:def 1;
hence thesis by CKB12:1;
end;
suppose ( ( f . n ) `2 ) = 6;

then (ex p st (ex x st ( ( f . n ) `1 ) = ( ( All (x,p) ) => p ))) by A8,CKB29:def 1;
hence thesis by CKB14:1;
end;
suppose ( ( f . n ) `2 ) = 7;

then consider i,j,p,q such that A10: 1 <= i and A11: i < n and A12: 1 <= j and A13: j < i and A14: ((p = ( ( f . j ) `1 ) & q = ( ( f . n ) `1 )) & ( ( f . i ) `1 ) = ( p => q )) by A8,CKB29:def 1;
A15: j < n by A11,A13,XXREAL_0:2;
A16: i <= ( len f ) by A7,A11,XXREAL_0:2;
then j <= ( len f ) by A13,XXREAL_0:2;
then A17: ( ( f . j ) `1 ) in ( Cn X ) by A4,A12,A15;
( ( f . i ) `1 ) in ( Cn X ) by A4,A10,A11,A16;
hence thesis by A14,A17,CKB13:1;
end;
suppose ( ( f . n ) `2 ) = 8;

then consider i,p,q,x such that A18: 1 <= i and A19: i < n and A20: ((( ( f . i ) `1 ) = ( p => q ) & (not x in ( still_not-bound_in p ))) & ( ( f . n ) `1 ) = ( p => ( All (x,q) ) )) by A8,CKB29:def 1;
i <= ( len f ) by A7,A19,XXREAL_0:2;
hence thesis by A4,A18,A19,A20,CKB15:1;
end;
suppose ( ( f . n ) `2 ) = 9;

then consider i,x,y,s such that A21: 1 <= i and A22: i < n and A23: ((((( s . x ) in ( CQC-WFF ) & ( s . y ) in ( CQC-WFF )) & (not x in ( still_not-bound_in s ))) & ( s . x ) = ( ( f . i ) `1 )) & ( ( f . n ) `1 ) = ( s . y )) by A8,CKB29:def 1;
i <= ( len f ) by A7,A22,XXREAL_0:2;
hence thesis by A4,A21,A22,A23,CKB16:1;
end;
end;
hence thesis;
end;
(for n being Nat holds P[ n ]) from NAT_1:sch 4(A3);
hence thesis;
end;
hence thesis by A2;
end;
