environ
vocabularies NUMBERS,ORDINAL1,SUBSET_1,XXREAL_0,ARYTM_3,XBOOLE_0,TARSKI,FINSET_1,CARD_1,MCART_1,ZFMISC_1,CQC_LANG,QC_LANG1,XBOOLEAN,BVFUNC_2,FUNCT_1,FINSEQ_1,NAT_1,RELAT_1,ORDINAL4,ARYTM_1,CQC_THE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,XCMPLX_0,FUNCT_1,NUMBERS,NAT_1,FINSET_1,FINSEQ_1,MCART_1,QC_LANG1,CQC_LANG,XXREAL_0,CKB5,CKB7,CKB24;
definitions TARSKI,XBOOLE_0,CKB5,CKB7,CKB24;
theorems TARSKI,ZFMISC_1,FINSET_1,FINSEQ_1,MCART_1,FUNCT_1,NAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28;
schemes NAT_1,FRAENKEL,XBOOLE_0;
registrations SUBSET_1,RELSET_1,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,CQC_LANG,ORDINAL1,CARD_1,CKB25;
constructors XXREAL_0,XREAL_0,NAT_1,CQC_LANG,CKB5,CKB7,CKB24;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve i for (Element of ( NAT ));
reserve j for (Element of ( NAT ));
reserve X for (Subset of ( CQC-WFF ));
reserve p for (Element of ( CQC-WFF ));
reserve q for (Element of ( CQC-WFF ));
reserve r for (Element of ( CQC-WFF ));
reserve s for QC-formula;
reserve x for bound_QC-variable;
reserve y for bound_QC-variable;
definition
let PR being (FinSequence of [: ( CQC-WFF ),( Proof_Step_Kinds ) :]);
let n being Nat;
let X;
pred PR,n is_a_correct_step_wrt X
means
:Def4: ( ( PR . n ) `1 ) in X if ( ( PR . n ) `2 ) = ( 0 ),( ( PR . n ) `1 ) = ( VERUM ) if ( ( PR . n ) `2 ) = 1,(ex p st ( ( PR . n ) `1 ) = ( ( ( 'not' p ) => p ) => p )) if ( ( PR . n ) `2 ) = 2,(ex p st (ex q st ( ( PR . n ) `1 ) = ( p => ( ( 'not' p ) => q ) ))) if ( ( PR . n ) `2 ) = 3,(ex p st (ex q st (ex r st ( ( PR . n ) `1 ) = ( ( p => q ) => ( ( 'not' ( q '&' r ) ) => ( 'not' ( p '&' r ) ) ) )))) if ( ( PR . n ) `2 ) = 4,(ex p st (ex q st ( ( PR . n ) `1 ) = ( ( p '&' q ) => ( q '&' p ) ))) if ( ( PR . n ) `2 ) = 5,(ex p st (ex x st ( ( PR . n ) `1 ) = ( ( All (x,p) ) => p ))) if ( ( PR . n ) `2 ) = 6,(ex i st (ex j st (ex p st (ex q st ((((((1 <= i & i < n) & 1 <= j) & j < i) & p = ( ( PR . j ) `1 )) & q = ( ( PR . n ) `1 )) & ( ( PR . i ) `1 ) = ( p => q )))))) if ( ( PR . n ) `2 ) = 7,(ex i st (ex p st (ex q st (ex x st ((((1 <= i & i < n) & ( ( PR . i ) `1 ) = ( p => q )) & (not x in ( still_not-bound_in p ))) & ( ( PR . n ) `1 ) = ( p => ( All (x,q) ) )))))) if ( ( PR . n ) `2 ) = 8,(ex i st (ex x st (ex y st (ex s st ((((((1 <= i & i < n) & ( s . x ) in ( CQC-WFF )) & ( s . y ) in ( CQC-WFF )) & (not x in ( still_not-bound_in s ))) & ( s . x ) = ( ( PR . i ) `1 )) & ( s . y ) = ( ( PR . n ) `1 )))))) if ( ( PR . n ) `2 ) = 9
;consistency;
end;
