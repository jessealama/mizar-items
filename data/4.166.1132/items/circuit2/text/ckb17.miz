environ
vocabularies MSAFREE2,STRUCT_0,XBOOLE_0,MSUALG_1,RELAT_1,PBOOLE,MSAFREE,FUNCOP_1,FUNCT_1,TREES_3,FINSEQ_1,SUBSET_1,TREES_4,MSUALG_3,MARGREL1,FINSEQ_4,TARSKI,DTCONSTR,NAT_1,NUMBERS,TREES_2,CARD_3,PARTFUN1,ZFMISC_1,TDGROUP,CIRCUIT1,FSM_1,FUNCT_4,GLIB_000,UNIALG_2,MSATERM,PRELAMB,REALSET1,CARD_1,XXREAL_0,ARYTM_3,FUNCT_6,TREES_A,FINSET_1,CIRCUIT2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_4,XXREAL_0,NAT_1,FINSEQ_1,FINSEQ_2,FINSET_1,TREES_2,TREES_3,TREES_4,CARD_3,FUNCT_6,LANG1,DTCONSTR,PBOOLE,FUNCOP_1,XXREAL_2,STRUCT_0,PRALG_1,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSAFREE2,CIRCUIT1,MSATERM,CKB3,CKB4,CKB5,CKB12,CKB15;
definitions PBOOLE,MSAFREE2,CKB4,CKB5,CKB12,CKB15;
theorems TARSKI,NAT_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,RELAT_1,GRFUNC_1,FUNCT_1,FUNCT_2,FUNCT_4,TREES_3,TREES_4,DTCONSTR,FUNCT_6,ZFMISC_1,CARD_3,MSATERM,PARTFUN2,FUNCOP_1,PBOOLE,PRALG_1,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,PRE_CIRC,MSAFREE2,CIRCUIT1,TREES_1,EXTENS_1,RELSET_1,XBOOLE_0,XBOOLE_1,ORDINAL1,XXREAL_0,PARTFUN1,XXREAL_2,CARD_1,CKB1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
schemes NAT_1,FINSEQ_1,PRE_CIRC,PBOOLE;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XREAL_0,MEMBERED,FINSEQ_1,CARD_3,TREES_3,PRE_CIRC,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_3,MSAFREE,MSAFREE2,CIRCUIT1,XXREAL_2,CARD_1,RELSET_1,PBOOLE;
constructors XXREAL_0,NAT_1,PRALG_1,MSUALG_3,MSATERM,CIRCUIT1,SEQ_1,SEQ_4,XXREAL_2,RELSET_1,FUNCT_4,FINSEQ_2,CKB3,CKB4,CKB5,CKB12,CKB15;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve IIG for  monotonic  Circuit-like non void non empty ManySortedSign;
theorem
Th11: (for SCS being  non-empty (Circuit of IIG) holds (for v being (Vertex of IIG) holds (for iv being (InputValues of SCS) holds (v in ( SortsWithConstants IIG ) implies ( IGValue (v,iv) ) = ( ( Set-Constants SCS ) . v )))))
proof
reconsider p = ( {} ) as  DTree-yielding FinSequence;
let SCS being  non-empty (Circuit of IIG);
let v being (Vertex of IIG);
let iv being (InputValues of SCS);
assume A1: v in ( SortsWithConstants IIG );
set e = ( ( ( Eval SCS ) . v ) . ( root-tree [ ( action_at v ),(the carrier of IIG) ] ) );
A2: ( {} ) = ( <*> (the carrier of IIG) );
set X = (the Sorts of SCS);
set F = ( Eval SCS );
A3: ( dom (the Arity of IIG) ) = (the carrier' of IIG) by FUNCT_2:def 1;
A4: ( dom (the ResultSort of IIG) ) = (the carrier' of IIG) by FUNCT_2:def 1;
set o = ( action_at v );
A5: ( SortsWithConstants IIG ) c= ( InnerVertices IIG ) by MSAFREE2:3;
then A6: v = ( the_result_sort_of o ) by A1,MSAFREE2:def 7;
( SortsWithConstants IIG ) = { v1 where v1 is (SortSymbol of IIG): v1 is  with_const_op } by MSAFREE2:def 1;
then consider x9 being (SortSymbol of IIG) such that A7: x9 = v and A8: x9 is  with_const_op by A1;
consider o1 being (OperSymbol of IIG) such that A9: ( (the Arity of IIG) . o1 ) = ( {} ) and A10: ( (the ResultSort of IIG) . o1 ) = x9 by A8,MSUALG_2:def 1;
( (the ResultSort of IIG) . o1 ) = ( the_result_sort_of o1 ) by MSUALG_1:def 2;
then A11: o = o1 by A1,A5,A7,A10,MSAFREE2:def 7;
A12: ( Args (o,( FreeEnv SCS )) ) = ( ( ( (the Sorts of ( FreeEnv SCS )) # ) * (the Arity of IIG) ) . o ) by MSUALG_1:def 4
.= ( ( (the Sorts of ( FreeEnv SCS )) # ) . ( (the Arity of IIG) . o ) ) by A3,FUNCT_1:13
.= { ( {} ) } by A9,A11,A2,PRE_CIRC:2;
then reconsider x = ( {} ) as (Element of ( Args (o,( FreeEnv SCS )) )) by TARSKI:def 1;
reconsider Fx = ( F # x ) as (Element of ( Args (o,SCS) ));
F is_homomorphism ( FreeEnv SCS ),SCS by MSAFREE2:def 9;
then A13: ( ( F . ( the_result_sort_of o ) ) . ( ( Den (o,( FreeEnv SCS )) ) . x ) ) = ( ( Den (o,SCS) ) . Fx ) by MSUALG_3:def 7;
A14: ( FreeMSA X ) = MSAlgebra (# ( FreeSort X ),( FreeOper X ) #) by MSAFREE:def 14;
then A15: ( Den (o,( FreeEnv SCS )) ) = ( ( FreeOper X ) . o ) by MSUALG_1:def 6
.= ( DenOp (o,X) ) by MSAFREE:def 13;
( {} ) in ( Args (o,( FreeEnv SCS )) ) by A12,TARSKI:def 1;
then A16: p in ( ( ( ( FreeSort X ) # ) * (the Arity of IIG) ) . o ) by A14,MSUALG_1:def 4;
then reconsider p9 = ( {} ) as (FinSequence of ( TS ( DTConMSA X ) )) by MSAFREE:8;
( Sym (o,X) ) ==> ( roots p9 ) by A16,MSAFREE:10;
then A17: ( ( Den (o,( FreeEnv SCS )) ) . ( {} ) ) = ( ( Sym (o,X) ) -tree p ) by A15,MSAFREE:def 12
.= ( [ o,(the carrier of IIG) ] -tree ( {} ) ) by MSAFREE:def 9
.= ( root-tree [ o,(the carrier of IIG) ] ) by TREES_4:20;
( dom ( Den (o,SCS) ) ) = ( Args (o,SCS) ) by FUNCT_2:def 1;
then A18: e in ( rng ( Den (o,SCS) ) ) by A6,A17,A13,FUNCT_1:def 3;
( Result (o,SCS) ) = ( ( (the Sorts of SCS) * (the ResultSort of IIG) ) . o ) by MSUALG_1:def 5
.= ( (the Sorts of SCS) . ( (the ResultSort of IIG) . o ) ) by A4,FUNCT_1:13;
then reconsider e as (Element of ( (the Sorts of SCS) . v )) by A6,A17,A13,MSUALG_1:def 2;
(ex A being non empty set st (A = ( (the Sorts of SCS) . v ) & ( Constants (SCS,v) ) = { a where a is (Element of A): (ex o being (OperSymbol of IIG) st ((( (the Arity of IIG) . o ) = ( {} ) & ( (the ResultSort of IIG) . o ) = v) & a in ( rng ( Den (o,SCS) ) ))) })) by MSUALG_2:def 3;
then A19: e in ( Constants (SCS,v) ) by A7,A9,A10,A11,A18;
(ex e being (Element of ( (the Sorts of ( FreeEnv SCS )) . v )) st (( card e ) = ( size (v,SCS) ) & ( IGTree (v,iv) ) = ( ( ( Fix_inp_ext iv ) . v ) . e ))) by CKB12:def 1;
hence ( IGValue (v,iv) ) = e by A1,CKB9:1
.= ( ( Set-Constants SCS ) . v ) by A1,A19,CIRCUIT1:1;
end;
