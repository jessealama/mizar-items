environ
vocabularies MSAFREE2,STRUCT_0,XBOOLE_0,MSUALG_1,RELAT_1,PBOOLE,MSAFREE,FUNCOP_1,FUNCT_1,TREES_3,FINSEQ_1,SUBSET_1,TREES_4,MSUALG_3,MARGREL1,FINSEQ_4,TARSKI,DTCONSTR,NAT_1,NUMBERS,TREES_2,CARD_3,PARTFUN1,ZFMISC_1,TDGROUP,CIRCUIT1,FSM_1,FUNCT_4,GLIB_000,UNIALG_2,MSATERM,PRELAMB,REALSET1,CARD_1,XXREAL_0,ARYTM_3,FUNCT_6,TREES_A,FINSET_1,CIRCUIT2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_4,XXREAL_0,NAT_1,FINSEQ_1,FINSEQ_2,FINSET_1,TREES_2,TREES_3,TREES_4,CARD_3,FUNCT_6,LANG1,DTCONSTR,PBOOLE,FUNCOP_1,XXREAL_2,STRUCT_0,PRALG_1,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSAFREE2,CIRCUIT1,MSATERM,CKB3,CKB4,CKB5;
definitions PBOOLE,MSAFREE2,CKB4,CKB5;
theorems TARSKI,NAT_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,RELAT_1,GRFUNC_1,FUNCT_1,FUNCT_2,FUNCT_4,TREES_3,TREES_4,DTCONSTR,FUNCT_6,ZFMISC_1,CARD_3,MSATERM,PARTFUN2,FUNCOP_1,PBOOLE,PRALG_1,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,PRE_CIRC,MSAFREE2,CIRCUIT1,TREES_1,EXTENS_1,RELSET_1,XBOOLE_0,XBOOLE_1,ORDINAL1,XXREAL_0,PARTFUN1,XXREAL_2,CARD_1,CKB1,CKB2,CKB4,CKB5;
schemes NAT_1,FINSEQ_1,PRE_CIRC,PBOOLE;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XREAL_0,MEMBERED,FINSEQ_1,CARD_3,TREES_3,PRE_CIRC,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_3,MSAFREE,MSAFREE2,CIRCUIT1,XXREAL_2,CARD_1,RELSET_1,PBOOLE;
constructors XXREAL_0,NAT_1,PRALG_1,MSUALG_3,MSATERM,CIRCUIT1,SEQ_1,SEQ_4,XXREAL_2,RELSET_1,FUNCT_4,FINSEQ_2,CKB3,CKB4,CKB5;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve IIG for  monotonic  Circuit-like non  void non  empty ManySortedSign;
theorem
Th2: (for A being  non-empty (Circuit of IIG) holds (for iv being (InputValues of A) holds (for v being (Vertex of IIG) holds (for e being (Element of ( (the Sorts of ( FreeEnv A )) . v )) holds (for x being set holds ((v in ( ( InnerVertices IIG ) \ ( SortsWithConstants IIG ) ) & e = ( root-tree [ x,v ] )) implies ( ( ( Fix_inp_ext iv ) . v ) . e ) = e))))))
proof
let A being  non-empty (Circuit of IIG);
let iv being (InputValues of A);
let v being (Vertex of IIG);
let e being (Element of ( (the Sorts of ( FreeEnv A )) . v ));
let x being set;
assume that
A1: v in ( ( InnerVertices IIG ) \ ( SortsWithConstants IIG ) )
and
A2: e = ( root-tree [ x,v ] );
A3: ( e . ( {} ) ) = [ x,v ] by A2,TREES_4:3;
A4:now
given o being (OperSymbol of IIG) such that
A5: [ o,(the carrier of IIG) ] = ( e . ( {} ) )
and
( the_result_sort_of o ) = v;

v = (the carrier of IIG) by A3,A5,ZFMISC_1:27;
hence contradiction by CKB1:1;
end;
set X = (the Sorts of A);
( FreeEnv A ) = MSAlgebra (# ( FreeSort (the Sorts of A) ),( FreeOper (the Sorts of A) ) #) by MSAFREE:def 14;
then e in ( ( FreeSort X ) . v );
then A6: e in ( FreeSort (X,v) ) by MSAFREE:def 11;
( Fix_inp iv ) c= ( Fix_inp_ext iv ) by CKB5:def 1;
then A7: ( ( Fix_inp iv ) . v ) c= ( ( Fix_inp_ext iv ) . v ) by PBOOLE:def 2;
( FreeSort (X,v) ) = { a where a is (Element of ( TS ( DTConMSA X ) )): ((ex x being set st (x in ( X . v ) & a = ( root-tree [ x,v ] ))) or (ex o being (OperSymbol of IIG) st ([ o,(the carrier of IIG) ] = ( a . ( {} ) ) & ( the_result_sort_of o ) = v))) } by MSAFREE:def 10;
then (ex a being (Element of ( TS ( DTConMSA X ) )) st (a = e & ((ex x being set st (x in ( X . v ) & a = ( root-tree [ x,v ] ))) or (ex o being (OperSymbol of IIG) st ([ o,(the carrier of IIG) ] = ( a . ( {} ) ) & ( the_result_sort_of o ) = v))))) by A6;
then A8: e in ( FreeGen (v,(the Sorts of A)) ) by A4,MSAFREE:def 15;
then e in ( ( FreeGen (the Sorts of A) ) . v ) by MSAFREE:def 16;
then e in ( dom ( ( Fix_inp iv ) . v ) ) by FUNCT_2:def 1;
hence ( ( ( Fix_inp_ext iv ) . v ) . e ) = ( ( ( Fix_inp iv ) . v ) . e ) by A7,GRFUNC_1:2
.= ( ( id ( FreeGen (v,(the Sorts of A)) ) ) . e ) by A1,CKB4:def 1
.= e by A8,FUNCT_1:17;
end;
