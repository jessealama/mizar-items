environ
vocabularies MSAFREE2,STRUCT_0,XBOOLE_0,MSUALG_1,RELAT_1,PBOOLE,MSAFREE,FUNCOP_1,FUNCT_1,TREES_3,FINSEQ_1,SUBSET_1,TREES_4,MSUALG_3,MARGREL1,FINSEQ_4,TARSKI,DTCONSTR,NAT_1,NUMBERS,TREES_2,CARD_3,PARTFUN1,ZFMISC_1,TDGROUP,CIRCUIT1,FSM_1,FUNCT_4,GLIB_000,UNIALG_2,MSATERM,PRELAMB,REALSET1,CARD_1,XXREAL_0,ARYTM_3,FUNCT_6,TREES_A,FINSET_1,CIRCUIT2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_4,XXREAL_0,NAT_1,FINSEQ_1,FINSEQ_2,FINSET_1,TREES_2,TREES_3,TREES_4,CARD_3,FUNCT_6,LANG1,DTCONSTR,PBOOLE,FUNCOP_1,XXREAL_2,STRUCT_0,PRALG_1,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,MSAFREE2,CIRCUIT1,MSATERM,CKB3,CKB4,CKB5,CKB12,CKB15,CKB18,CKB20,CKB21,CKB22,CKB23;
definitions PBOOLE,MSAFREE2,CKB4,CKB5,CKB12,CKB15,CKB18,CKB20,CKB21,CKB22,CKB23;
theorems TARSKI,NAT_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,RELAT_1,GRFUNC_1,FUNCT_1,FUNCT_2,FUNCT_4,TREES_3,TREES_4,DTCONSTR,FUNCT_6,ZFMISC_1,CARD_3,MSATERM,PARTFUN2,FUNCOP_1,PBOOLE,PRALG_1,MSUALG_1,MSUALG_2,MSUALG_3,MSAFREE,PRE_CIRC,MSAFREE2,CIRCUIT1,TREES_1,EXTENS_1,RELSET_1,XBOOLE_0,XBOOLE_1,ORDINAL1,XXREAL_0,PARTFUN1,XXREAL_2,CARD_1,CKB1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes NAT_1,FINSEQ_1,PRE_CIRC,PBOOLE;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,FINSET_1,XREAL_0,MEMBERED,FINSEQ_1,CARD_3,TREES_3,PRE_CIRC,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_3,MSAFREE,MSAFREE2,CIRCUIT1,XXREAL_2,CARD_1,RELSET_1,PBOOLE;
constructors XXREAL_0,NAT_1,PRALG_1,MSUALG_3,MSATERM,CIRCUIT1,SEQ_1,SEQ_4,XXREAL_2,RELSET_1,FUNCT_4,FINSEQ_2,CKB3,CKB4,CKB5,CKB12,CKB15,CKB18,CKB20,CKB21,CKB22,CKB23;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve IIG for  finite  monotonic  Circuit-like non void non empty ManySortedSign;
reserve SCS for  non-empty (Circuit of IIG);
reserve InpFs for (InputFuncs of SCS);
reserve s for (State of SCS);
reserve iv for (InputValues of SCS);
theorem
Th14: ((( commute InpFs ) is  constant & ( InputVertices IIG ) is non empty) implies (for s holds (for iv holds (iv = ( ( commute InpFs ) . ( 0 ) ) implies (for k being (Element of ( NAT )) holds iv c= ( ( Computation (s,InpFs) ) . k ))))))
proof
assume that
A1: ( commute InpFs ) is  constant
and
A2: ( InputVertices IIG ) is non empty;
A3: ( dom ( commute InpFs ) ) = ( NAT ) by A2,PRE_CIRC:5;
let s;
let iv;
assume A4: iv = ( ( commute InpFs ) . ( 0 ) );
let k being (Element of ( NAT ));
IIG is  with_input_V by A2,MSAFREE2:def 4;
then A5: ( k -th_InputValues InpFs ) = ( ( commute InpFs ) . k ) by CIRCUIT1:def 2
.= iv by A1,A4,A3,FUNCT_1:def 10;
set Ck = ( ( Computation (s,InpFs) ) . k );
(( dom iv ) = ( InputVertices IIG ) & ( dom ( Set-Constants SCS ) ) = ( SortsWithConstants IIG )) by PARTFUN1:def 2;
then A6: ( dom iv ) misses ( dom ( Set-Constants SCS ) ) by MSAFREE2:4;
per cases  by NAT_1:6;
suppose A7: k = ( 0 );

then Ck = ( InitialComp (s,InpFs) ) by CKB23:def 1
.= ( ( s +* ( ( 0 ) -th_InputValues InpFs ) ) +* ( Set-Constants SCS ) );
hence thesis by A5,A6,A7,FUNCT_4:25,FUNCT_4:124;
end;
suppose (ex n being Nat st k = ( n + 1 ));

then consider n being Nat such that A8: k = ( n + 1 );
reconsider n as (Element of ( NAT )) by ORDINAL1:def 12;
reconsider Cn = ( ( Computation (s,InpFs) ) . n ) as (State of SCS);
Ck = ( Following (Cn,( k -th_InputValues InpFs )) ) by A8,CKB23:def 1
.= ( Following ( Cn +* iv ) ) by A5;
hence thesis by CKB19:1,FUNCT_4:25;
end;
end;
