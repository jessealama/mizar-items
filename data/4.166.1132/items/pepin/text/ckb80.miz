environ
vocabularies NUMBERS,NAT_1,INT_1,XXREAL_0,RELAT_1,ARYTM_3,CARD_1,NEWTON,ARYTM_1,INT_2,SUBSET_1,SQUARE_1,ORDINAL1,ABIAN,POWER,EULER_1,TARSKI,SETWOP_2,FINSET_1,XBOOLE_0,XREAL_0,PEPIN;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,CARD_1,NUMBERS,XCMPLX_0,XREAL_0,INT_1,INT_2,NAT_1,NAT_D,SETWOP_2,POWER,ABIAN,SQUARE_1,NEWTON,EULER_1,FINSET_1,XXREAL_0,CKB10,CKB51,CKB59,CKB61,CKB66;
definitions TARSKI,INT_1,SQUARE_1,CKB59,CKB61,CKB66;
theorems NAT_1,NAT_2,INT_1,INT_2,FINSEQ_1,EULER_1,EULER_2,PREPOWER,PRE_FF,POWER,NEWTON,XCMPLX_0,XCMPLX_1,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79;
schemes NAT_1;
registrations ORDINAL1,FINSET_1,FINSUB_1,XXREAL_0,XREAL_0,NAT_1,INT_1,NEWTON,ABIAN,SERIES_1,XBOOLE_0,POWER,CARD_1,CKB9;
constructors SQUARE_1,NAT_1,NAT_D,SETWOP_2,NEWTON,SERIES_1,BINARITH,EULER_1,ABIAN,VALUED_1,XXREAL_2,CKB10,CKB51,CKB59,CKB61,CKB66;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve i for Nat;
reserve n for Nat;
reserve p for Nat;
reserve x for Nat;
theorem
Th63: (( 3 |^ ( ( ( Fermat n ) -' 1 ) div 2 ) ),( - 1 ) are_congruent_mod ( Fermat n ) implies ( Fermat n ) is  prime)
proof
per cases ;
suppose n = ( 0 );

hence thesis by CKB55:1,CKB67:1;
end;
suppose A1: n > ( 0 );

( Fermat n ) > 2 by CKB72:1;
then consider p being (Element of ( NAT )) such that A2: p is  prime and A3: p divides ( Fermat n ) by INT_2:31;
set d = ( order (3,p) );
consider i being Nat such that A4: ( Fermat n ) = ( p * i ) by A3,NAT_D:def 3;
A5: p > 2
proof
assume p <= 2;
then (p = 2 or p < ( 1 + 1 )) by XXREAL_0:1;
then A6: (p = 2 or p <= 1) by NAT_1:13;
A7: p <> ( 0 ) by A2,INT_2:def 4;
( Fermat n ) is  odd by CKB77:1;
then ( ( Fermat n ) mod p ) = 1 by A2,A6,INT_2:def 4,NAT_2:22;
hence contradiction by A3,A7,CKB12:1;
end;
A8: ( ( Fermat n ) - 1 ) >= ( 0 );
assume A9: ( 3 |^ ( ( ( Fermat n ) -' 1 ) div 2 ) ),( - 1 ) are_congruent_mod ( Fermat n );
then A10: ( ( 3 |^ ( ( ( Fermat n ) -' 1 ) div 2 ) ) ^2 ),( ( - 1 ) ^2 ) are_congruent_mod ( Fermat n ) by INT_1:18;
( ( ( Fermat n ) -' 1 ) mod 2 ) = ( 0 ) by CKB74:1;
then A11: ( 3 |^ ( ( Fermat n ) -' 1 ) ),( ( - 1 ) ^2 ) are_congruent_mod ( Fermat n ) by A10,CKB37:1;
set 2N = ( 2 |^ ( 2 |^ n ) );
assume A12: (not ( Fermat n ) is  prime);
reconsider i as (Element of ( NAT )) by ORDINAL1:def 12;
A13: 1 < p by A2,INT_2:def 4;
A14: p <> 3
proof
( 1 gcd i ) = 1 by NEWTON:51;
then A15: ( ( 3 * 1 ) gcd ( 3 * i ) ) = 3 by EULER_1:5;
assume p = 3;
then (not 3,( Fermat n ) are_relative_prime ) by A4,A15,INT_2:def 3;
hence contradiction by A1,CKB79:1;
end;
then d divides ( p -' 1 ) by A2,CKB55:1,CKB65:1,INT_2:30;
then consider x being Nat such that A16: ( p -' 1 ) = ( d * x ) by NAT_D:def 3;
A17: ( 3 |^ ( ( ( Fermat n ) -' 1 ) div 2 ) ),( - 1 ) are_congruent_mod p by A9,A4,INT_1:20;
A18: (not d divides ( ( ( Fermat n ) -' 1 ) div 2 ))
proof
assume d divides ( ( ( Fermat n ) -' 1 ) div 2 );
then ( ( 3 |^ ( ( ( Fermat n ) -' 1 ) div 2 ) ) mod p ) = 1 by A2,A14,A13,CKB55:1,CKB64:1,INT_2:30;
then ( 3 |^ ( ( ( Fermat n ) -' 1 ) div 2 ) ),1 are_congruent_mod p by A13,CKB52:1;
then 1,( - 1 ) are_congruent_mod p by A17,CKB54:1;
then p divides ( 1 - ( - 1 ) ) by INT_2:15;
hence contradiction by A5,NAT_D:7;
end;
then A19: (not d divides ( 2N div 2 )) by A8,XREAL_0:def 2;
A20: 3,p are_relative_prime  by A2,A14,CKB55:1,INT_2:30;
then A21: d <> ( 0 ) by A13,CKB61:def 1;
A22: d > 1
proof
assume A23: d <= 1;
now
per cases  by A23,XXREAL_0:1;
suppose d < 1;

hence thesis by A21,NAT_1:14;
end;
suppose d = 1;

hence thesis by A18,NAT_D:6;
end;
end;
hence thesis;
end;
( 3 |^ ( ( Fermat n ) -' 1 ) ) > 1 by CKB75:1,CKB34:1;
then ( ( 3 |^ ( ( Fermat n ) -' 1 ) ) mod p ) = 1 by A4,A13,A11,CKB53:1,INT_1:20;
then d divides ( ( Fermat n ) -' 1 ) by A20,A13,CKB63:1;
then d divides 2N by A8,XREAL_0:def 2;
then d = 2N by A19,A22,CKB50:1,INT_2:28
.= ( ( Fermat n ) -' 1 ) by A8,XREAL_0:def 2;
then A24: d = 2N by A8,XREAL_0:def 2;
A25: ( ( p * i ) mod 2N ) = 1 by A4,CKB76:1;
( p - 1 ) > ( 1 - 1 ) by A13,XREAL_1:9;
then A26: ( p - 1 ) = ( x * d ) by A16,XREAL_0:def 2;
then A27: p = ( ( x * 2N ) + 1 ) by A24;
then ( p mod 2N ) = ( 1 mod 2N ) by NAT_D:21
.= 1 by CKB2:1,NAT_D:24;
then ( ( 1 * i ) mod 2N ) = 1 by A25,EULER_2:8;
then consider y being Nat such that A28: i = ( ( 2N * y ) + 1 ) and 1 < 2N by NAT_D:def 2;
A29: 2N <> ( 0 ) by CKB2:1;
A30: x >= 1
proof
assume x < 1;
then p = ( ( ( 0 ) * 2N ) + 1 ) by A27,NAT_1:14;
hence contradiction by A2,INT_2:def 4;
end;
reconsider y as (Element of ( NAT )) by ORDINAL1:def 12;
( Fermat n ) = ( ( ( x * 2N ) + 1 ) * ( ( y * 2N ) + 1 ) ) by A4,A24,A26,A28
.= ( ( 2N * ( ( ( ( x * y ) * 2N ) + x ) + y ) ) + 1 );
then A31: 1 = ( ( 2N * ( ( ( ( x * y ) * 2N ) + x ) + y ) ) div 2N ) by A29,CKB58:1
.= ( ( ( ( x * y ) * 2N ) + x ) + y ) by A29,NAT_D:18;
2N > 1 by CKB2:1;
then p = ( ( 1 * 2N ) + 1 ) by A27,A30,A31,CKB1:1
.= ( Fermat n );
hence contradiction by A12,A2;
end;
end;
