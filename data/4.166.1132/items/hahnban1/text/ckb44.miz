environ
vocabularies RLVECT_1,ALGSTR_0,VECTSP_1,XBOOLE_0,SUBSET_1,RELAT_1,ARYTM_1,ARYTM_3,SUPINF_2,XCMPLX_0,ORDINAL1,COMPLEX1,XREAL_0,NUMBERS,CARD_1,SQUARE_1,COMPLFLD,GROUP_1,REAL_1,STRUCT_0,HAHNBAN,FUNCT_1,FUNCOP_1,MSSUBFAM,UNIALG_1,BINOP_1,LATTICES,MESFUNC1,ZFMISC_1,XXREAL_0,RLSUB_1,TARSKI,REALSET1,POWER,HAHNBAN1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,REALSET1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,SQUARE_1,POWER,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,RLSUB_1,VECTSP_4,FUNCT_1,FUNCT_2,BINOP_1,RELSET_1,NATTRA_1,FUNCOP_1,HAHNBAN,COMPLFLD,XXREAL_0,GRCAT_1,CKB5,CKB6,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB43;
definitions TARSKI,RLSUB_1,HAHNBAN,SQUARE_1,BINOP_1,RLVECT_1,VECTSP_1,COMPLEX1,STRUCT_0,ALGSTR_0,GRCAT_1,CKB5,CKB6,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22;
theorems TARSKI,ZFMISC_1,ABSVALUE,FUNCT_1,FUNCT_2,COMPLEX1,COMPLFLD,VECTSP_1,FUNCOP_1,RLVECT_1,BINOP_1,HAHNBAN,VECTSP_4,XBOOLE_0,RELAT_1,XCMPLX_1,GROUP_1,XXREAL_0,XCMPLX_0,POWER,ALGSTR_0,XREAL_0,GRCAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36;
schemes FUNCT_2,BINOP_1,NAT_1;
registrations XBOOLE_0,FUNCT_1,RELSET_1,NUMBERS,XCMPLX_0,XREAL_0,MEMBERED,STRUCT_0,RLVECT_1,VECTSP_1,COMPLFLD,HAHNBAN,ALGSTR_0,CKB23,CKB24,CKB25,CKB26,CKB27,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42;
constructors ARYTM_0,REAL_1,SQUARE_1,NAT_1,BINOP_2,POWER,REALSET1,RLSUB_1,COMPLFLD,VECTSP_4,NATTRA_1,BORSUK_1,HAHNBAN,SUPINF_1,FUNCOP_1,GRCAT_1,CKB5,CKB6,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
definition
let K being  Abelian  add-associative  right_zeroed  right_complementable  right-distributive  associative  commutative non empty doubleLoopStr;
let V being non empty VectSpStr over K;
func V *' -> non empty  strict VectSpStr over K
means
:Def14: ((((for x being set holds (x in (the carrier of it) iff x is (linear-Functional of V))) & (for f,g being (linear-Functional of V) holds ( (the addF of it) . (f,g) ) = ( f + g ))) & ( 0. it ) = ( 0Functional V )) & (for f being (linear-Functional of V) holds (for x being (Element of K) holds ( (the lmult of it) . (x,f) ) = ( x * f ))));
existence
proof
defpred P[ set,set,set ]
 means
(ex f,g being (Functional of V) st (($1 = f & $2 = g) & $3 = ( f + g )));
( 0Functional V ) in { x where x is (linear-Functional of V): (not contradiction) };
then reconsider ca = { x where x is (linear-Functional of V): (not contradiction) } as non empty set;
A1:now
let x being set;
thus (x in ca implies x is (linear-Functional of V))
proof
assume x in ca;
then (ex y being (linear-Functional of V) st x = y);
hence thesis;
end;

thus (x is (linear-Functional of V) implies x in ca);
end;
then reconsider 0F = ( 0Functional V ) as (Element of ca);
A2: (for x,y being (Element of ca) holds (ex u being (Element of ca) st P[ x,y,u ]))
proof
let x being (Element of ca),y being (Element of ca);
reconsider f = x,g = y as (linear-Functional of V) by A1;
reconsider u = ( f + g ) as (Element of ca) by A1;
take u;
take f;
take g;
thus thesis;
end;
consider ad being (Function of [: ca,ca :],ca) such that A3: (for x,y being (Element of ca) holds P[ x,y,( ad . (x,y) ) ]) from BINOP_1:sch 3(A2);
defpred P[ (Element of K),set,set ]
 means
(ex f being (Functional of V) st ($2 = f & $3 = ( $1 * f )));
A4: (for x being (Element of K) holds (for y being (Element of ca) holds (ex u being (Element of ca) st P[ x,y,u ])))
proof
let x being (Element of K);
let y being (Element of ca);
reconsider f = y as (linear-Functional of V) by A1;
reconsider u = ( x * f ) as (Element of ca) by A1;
take u;
take f;
thus thesis;
end;
consider lm being (Function of [: (the carrier of K),ca :],ca) such that A5: (for x being (Element of K) holds (for y being (Element of ca) holds P[ x,y,( lm . (x,y) ) ])) from BINOP_1:sch 3(A4);
A6:now
let f being (linear-Functional of V);
reconsider y = f as (Element of ca) by A1;
let x being (Element of K);
(ex f1 being (Functional of V) st (y = f1 & ( lm . (x,y) ) = ( x * f1 ))) by A5;
hence ( lm . (x,f) ) = ( x * f );
end;
reconsider V1 = VectSpStr (# ca,ad,0F,lm #) as non empty  strict VectSpStr over K;
take V1;
now
let f being (linear-Functional of V),g being (linear-Functional of V);
reconsider x = f,y = g as (Element of ca) by A1;
(ex f1,g1 being (Functional of V) st ((x = f1 & y = g1) & ( ad . (x,y) ) = ( f1 + g1 ))) by A3;
hence ( ad . (f,g) ) = ( f + g );
end;
hence thesis by A1,A6;
end;
uniqueness
proof
let V1 being non empty  strict VectSpStr over K,V2 being non empty  strict VectSpStr over K;
assume that
A7: (for x being set holds (x in (the carrier of V1) iff x is (linear-Functional of V)))
and
A8: (for f,g being (linear-Functional of V) holds ( (the addF of V1) . (f,g) ) = ( f + g ))
and
A9: ( 0. V1 ) = ( 0Functional V )
and
A10: (for f being (linear-Functional of V) holds (for x being (Element of K) holds ( (the lmult of V1) . (x,f) ) = ( x * f )))
and
A11: (for x being set holds (x in (the carrier of V2) iff x is (linear-Functional of V)))
and
A12: (for f,g being (linear-Functional of V) holds ( (the addF of V2) . (f,g) ) = ( f + g ))
and
A13: ( 0. V2 ) = ( 0Functional V )
and
A14: (for f being (linear-Functional of V) holds (for x being (Element of K) holds ( (the lmult of V2) . (x,f) ) = ( x * f )));
A15:now
let r being (Element of K);
let x being (Element of V1);
reconsider f = x as (linear-Functional of V) by A7;
thus ( (the lmult of V1) . (r,x) ) = ( r * f ) by A10
.= ( (the lmult of V2) . (r,x) ) by A14;
end;
now
let x being set;
thus (x in (the carrier of V1) implies x in (the carrier of V2))
proof
assume x in (the carrier of V1);
then x is (linear-Functional of V) by A7;
hence thesis by A11;
end;

assume x in (the carrier of V2);
then x is (linear-Functional of V) by A11;
hence x in (the carrier of V1) by A7;
end;
then A16: (the carrier of V1) = (the carrier of V2) by TARSKI:1;
now
let x being (Element of V1),y being (Element of V1);
reconsider f = x,g = y as (linear-Functional of V) by A7;
thus ( (the addF of V1) . (x,y) ) = ( f + g ) by A8
.= ( (the addF of V2) . (x,y) ) by A12;
end;
then (the addF of V1) = (the addF of V2) by A16,BINOP_1:2;
hence thesis by A9,A13,A16,A15,BINOP_1:2;
end;
end;
