environ
vocabularies XBOOLE_0,TARSKI,SUBSET_1,ZFMISC_1,SETFAM_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CKB1,CKB13,CKB14,CKB23,CKB24,CKB25;
definitions TARSKI,XBOOLE_0,SUBSET_1,CKB1,CKB13,CKB14,CKB23,CKB24,CKB25;
theorems TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ENUMSET1,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35;
schemes XBOOLE_0,SUBSET_1;
registrations XBOOLE_0,SUBSET_1;
constructors TARSKI,ENUMSET1,SUBSET_1,CKB1,CKB13,CKB14,CKB23,CKB24,CKB25;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve Z for set;
reserve x for set;
reserve SFX for set;
reserve SFY for set;
theorem
( meet ( DIFFERENCE (SFX,SFY) ) ) c= ( ( meet SFX ) \ ( meet SFY ) )
proof
per cases ;
suppose A1: (SFX = ( {} ) or SFY = ( {} ));

now
assume ( DIFFERENCE (SFX,SFY) ) <> ( {} );
then consider e being set such that A2: e in ( DIFFERENCE (SFX,SFY) ) by XBOOLE_0:def 1;
(ex X st (ex Y st ((X in SFX & Y in SFY) & e = ( X \ Y )))) by A2,CKB25:def 1;
hence contradiction by A1;
end;
then ( meet ( DIFFERENCE (SFX,SFY) ) ) = ( {} ) by CKB1:def 1;
hence thesis by XBOOLE_1:2;
end;
suppose A3: (SFX <> ( {} ) & SFY <> ( {} ));

set z = the (Element of SFX);
set y = the (Element of SFY);
let x;
assume that
A4: x in ( meet ( DIFFERENCE (SFX,SFY) ) );
(for Z holds (Z in SFX implies x in Z))
proof
let Z;
assume Z in SFX;
then ( Z \ y ) in ( DIFFERENCE (SFX,SFY) ) by A3,CKB25:def 1;
then x in ( Z \ y ) by A4,CKB1:def 1;
hence thesis;
end;
then A5: x in ( meet SFX ) by A3,CKB1:def 1;
( z \ y ) in ( DIFFERENCE (SFX,SFY) ) by A3,CKB25:def 1;
then x in ( z \ y ) by A4,CKB1:def 1;
then (not x in y) by XBOOLE_0:def 5;
then (not x in ( meet SFY )) by A3,CKB1:def 1;
hence thesis by A5,XBOOLE_0:def 5;
end;
end;
