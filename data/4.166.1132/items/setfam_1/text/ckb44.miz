environ
vocabularies XBOOLE_0,TARSKI,SUBSET_1,ZFMISC_1,SETFAM_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CKB1,CKB13,CKB14,CKB23,CKB24,CKB25,CKB37,CKB38,CKB39,CKB41;
definitions TARSKI,XBOOLE_0,SUBSET_1,CKB1,CKB13,CKB14,CKB23,CKB24,CKB25,CKB41;
theorems TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ENUMSET1,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB40,CKB41,CKB42,CKB43;
schemes XBOOLE_0,SUBSET_1;
registrations XBOOLE_0,SUBSET_1;
constructors TARSKI,ENUMSET1,SUBSET_1,CKB1,CKB13,CKB14,CKB23,CKB24,CKB25,CKB38,CKB39,CKB41;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve D for set;
reserve x for set;
reserve F for (Subset-Family of D);
theorem
(F <> ( {} ) implies ( union ( COMPLEMENT F ) ) = ( ( [#] D ) \ ( meet F ) ))
proof
assume A1: F <> ( {} );
A2: ( ( [#] D ) \ ( meet F ) ) c= ( union ( COMPLEMENT F ) )
proof
let x;
assume A3: x in ( ( [#] D ) \ ( meet F ) );
then (not x in ( meet F )) by XBOOLE_0:def 5;
then consider X such that A4: X in F and A5: (not x in X) by A1,CKB1:def 1;
reconsider X as (Subset of D) by A4;
reconsider XX = ( X ` ) as set;
A6: ( ( X ` ) ` ) = X;
(ex Y st (x in Y & Y in ( COMPLEMENT F )))
proof
take XX;
thus thesis by A3,A4,A5,A6,CKB41:def 1,XBOOLE_0:def 5;
end;
hence thesis by TARSKI:def 4;
end;
( union ( COMPLEMENT F ) ) c= ( ( [#] D ) \ ( meet F ) )
proof
let x;
assume A7: x in ( union ( COMPLEMENT F ) );
then consider X such that A8: x in X and A9: X in ( COMPLEMENT F ) by TARSKI:def 4;
reconsider X as (Subset of D) by A9;
reconsider XX = ( X ` ) as set;
(ex Y st (Y in F & (not x in Y)))
proof
take Y = XX;
thus Y in F by A9,CKB41:def 1;
thus thesis by A8,XBOOLE_0:def 5;
end;
then (not x in ( meet F )) by CKB1:def 1;
hence thesis by A7,XBOOLE_0:def 5;
end;
hence thesis by A2,XBOOLE_0:def 10;
end;
