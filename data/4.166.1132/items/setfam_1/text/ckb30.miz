environ
vocabularies XBOOLE_0,TARSKI,SUBSET_1,ZFMISC_1,SETFAM_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CKB1,CKB13,CKB14,CKB23,CKB24,CKB25;
definitions TARSKI,XBOOLE_0,SUBSET_1,CKB1,CKB13,CKB14,CKB23,CKB24,CKB25;
theorems TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ENUMSET1,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
schemes XBOOLE_0,SUBSET_1;
registrations XBOOLE_0,SUBSET_1;
constructors TARSKI,ENUMSET1,SUBSET_1,CKB1,CKB13,CKB14,CKB23,CKB24,CKB25;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Z for set;
reserve Z1 for set;
reserve Z2 for set;
reserve x for set;
reserve SFY for set;
theorem
(SFY <> ( {} ) implies ( X \/ ( meet SFY ) ) = ( meet ( UNION ({ X },SFY) ) ))
proof
assume A1: SFY <> ( {} );
set y = the (Element of SFY);
X in { X } by TARSKI:def 1;
then A2: ( X \/ y ) in ( UNION ({ X },SFY) ) by A1,CKB23:def 1;
A3: ( X \/ ( meet SFY ) ) c= ( meet ( UNION ({ X },SFY) ) )
proof
let x;
assume x in ( X \/ ( meet SFY ) );
then A4: (x in X or x in ( meet SFY )) by XBOOLE_0:def 3;
(for Z holds (Z in ( UNION ({ X },SFY) ) implies x in Z))
proof
let Z;
assume Z in ( UNION ({ X },SFY) );
then consider Z1,Z2 such that A5: (Z1 in { X } & Z2 in SFY) and A6: Z = ( Z1 \/ Z2 ) by CKB23:def 1;
(x in Z1 or x in Z2) by A4,A5,CKB1:def 1,TARSKI:def 1;
hence thesis by A6,XBOOLE_0:def 3;
end;
hence thesis by A2,CKB1:def 1;
end;
( meet ( UNION ({ X },SFY) ) ) c= ( X \/ ( meet SFY ) )
proof
let x;
assume A7: x in ( meet ( UNION ({ X },SFY) ) );
assume A8: (not x in ( X \/ ( meet SFY ) ));
then A9: (not x in X) by XBOOLE_0:def 3;
(not x in ( meet SFY )) by A8,XBOOLE_0:def 3;
then consider Z such that A10: Z in SFY and A11: (not x in Z) by A1,CKB1:def 1;
X in { X } by TARSKI:def 1;
then ( X \/ Z ) in ( UNION ({ X },SFY) ) by A10,CKB23:def 1;
then x in ( X \/ Z ) by A7,CKB1:def 1;
hence contradiction by A9,A11,XBOOLE_0:def 3;
end;
hence thesis by A3,XBOOLE_0:def 10;
end;
