environ
vocabularies XBOOLE_0,TARSKI,SUBSET_1,ZFMISC_1,SETFAM_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1;
definitions TARSKI,XBOOLE_0,SUBSET_1;
theorems TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ENUMSET1,XBOOLE_1;
schemes XBOOLE_0,SUBSET_1;
registrations XBOOLE_0,SUBSET_1;
constructors TARSKI,ENUMSET1,SUBSET_1;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve Z for set;
reserve Z1 for set;
reserve Z2 for set;
reserve x for set;
definition
let X;
func meet X means 
:Def1: (for x holds (x in it iff (for Y holds (Y in X implies x in Y)))) if X <> ( {} ) otherwise it = ( {} );
existence
proof
thus (X <> ( {} ) implies (ex Z1 st (for x holds (x in Z1 iff (for Z holds (Z in X implies x in Z))))))
proof
defpred X[ set ]
 means
(for Z holds (Z in X implies $1 in Z));
assume A1: X <> ( {} );
consider Y such that A2: (for x holds (x in Y iff (x in ( union X ) & X[ x ]))) from XBOOLE_0:sch 1;
take Y;
(for x holds ((for Z holds (Z in X implies x in Z)) implies x in Y))
proof
set y = the (Element of X);
let x;
assume that
A3: (for Z holds (Z in X implies x in Z));
x in y by A1,A3;
then x in ( union X ) by A1,TARSKI:def 4;
hence thesis by A2,A3;
end;
hence thesis by A2;
end;

thus thesis;
end;
uniqueness
proof
let Z1;
let Z2;
now
assume that
X <> ( {} )
and
A4: (for x holds (x in Z1 iff (for Y holds (Y in X implies x in Y))))
and
A5: (for x holds (x in Z2 iff (for Y holds (Y in X implies x in Y))));
now
let x;
(x in Z1 iff (for Y holds (Y in X implies x in Y))) by A4;
hence (x in Z1 iff x in Z2) by A5;
end;
hence Z1 = Z2 by TARSKI:1;
end;
hence thesis;
end;
consistency;
end;
