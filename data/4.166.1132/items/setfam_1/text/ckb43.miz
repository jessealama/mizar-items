environ
vocabularies XBOOLE_0,TARSKI,SUBSET_1,ZFMISC_1,SETFAM_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CKB1,CKB13,CKB14,CKB23,CKB24,CKB25,CKB37,CKB38,CKB39,CKB41;
definitions TARSKI,XBOOLE_0,SUBSET_1,CKB1,CKB13,CKB14,CKB23,CKB24,CKB25,CKB41;
theorems TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ENUMSET1,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB40,CKB41,CKB42;
schemes XBOOLE_0,SUBSET_1;
registrations XBOOLE_0,SUBSET_1;
constructors TARSKI,ENUMSET1,SUBSET_1,CKB1,CKB13,CKB14,CKB23,CKB24,CKB25,CKB38,CKB39,CKB41;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve D for set;
reserve x for set;
reserve F for (Subset-Family of D);
theorem
(F <> ( {} ) implies ( ( [#] D ) \ ( union F ) ) = ( meet ( COMPLEMENT F ) ))
proof
A1: (for x holds (x in D implies ((for X holds (X in F implies (not x in X))) iff (for Y holds (Y in ( COMPLEMENT F ) implies x in Y)))))
proof
let x;
assume that
A2: x in D;
thus ((for X holds (X in F implies (not x in X))) implies (for Y holds (Y in ( COMPLEMENT F ) implies x in Y)))
proof
assume A3: (for X holds (X in F implies (not x in X)));
let Y;
assume A4: Y in ( COMPLEMENT F );
then reconsider Y as (Subset of D);
( Y ` ) in F by A4,CKB41:def 1;
then (not x in ( Y ` )) by A3;
hence thesis by A2,XBOOLE_0:def 5;
end;

assume A5: (for Y holds (Y in ( COMPLEMENT F ) implies x in Y));
let X;
assume A6: X in F;
then reconsider X as (Subset of D);
( ( X ` ) ` ) = X;
then ( X ` ) in ( COMPLEMENT F ) by A6,CKB41:def 1;
then x in ( X ` ) by A5;
hence thesis by XBOOLE_0:def 5;
end;
assume F <> ( {} );
then A7: ( COMPLEMENT F ) <> ( {} ) by CKB42:1;
A8: ( ( [#] D ) \ ( union F ) ) c= ( meet ( COMPLEMENT F ) )
proof
let x;
assume A9: x in ( ( [#] D ) \ ( union F ) );
then (not x in ( union F )) by XBOOLE_0:def 5;
then (for X holds (X in F implies (not x in X))) by TARSKI:def 4;
then (for Y holds (Y in ( COMPLEMENT F ) implies x in Y)) by A1,A9;
hence thesis by A7,CKB1:def 1;
end;
( meet ( COMPLEMENT F ) ) c= ( ( [#] D ) \ ( union F ) )
proof
let x;
assume A10: x in ( meet ( COMPLEMENT F ) );
then (for X holds (X in ( COMPLEMENT F ) implies x in X)) by CKB1:def 1;
then (for Y holds (x in Y implies (not Y in F))) by A1;
then (not x in ( union F )) by TARSKI:def 4;
hence thesis by A10,XBOOLE_0:def 5;
end;
hence thesis by A8,XBOOLE_0:def 10;
end;
