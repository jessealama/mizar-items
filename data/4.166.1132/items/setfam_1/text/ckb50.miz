environ
vocabularies XBOOLE_0,TARSKI,SUBSET_1,ZFMISC_1,SETFAM_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CKB1,CKB13,CKB14,CKB23,CKB24,CKB25,CKB37,CKB38,CKB39,CKB41;
definitions TARSKI,XBOOLE_0,SUBSET_1,CKB1,CKB13,CKB14,CKB23,CKB24,CKB25,CKB41;
theorems TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ENUMSET1,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49;
schemes XBOOLE_0,SUBSET_1;
registrations XBOOLE_0,SUBSET_1;
constructors TARSKI,ENUMSET1,SUBSET_1,CKB1,CKB13,CKB14,CKB23,CKB24,CKB25,CKB38,CKB39,CKB41;
requirements SUBSET,BOOLE;
begin
theorem
(for X being set holds (for F being (Subset-Family of X) holds (F = { X } implies ( COMPLEMENT F ) = { ( {} ) })))
proof
let X being set;
let F being (Subset-Family of X);
assume that
A1: F = { X };
( {} ) c= X by XBOOLE_1:2;
then reconsider G = { ( {} ) } as (Subset-Family of X) by ZFMISC_1:31;
reconsider G as (Subset-Family of X);
(for P being (Subset of X) holds (P in G iff ( P ` ) in F))
proof
let P being (Subset of X);
hereby
assume P in G;
then P = ( {} X ) by TARSKI:def 1;
hence ( P ` ) in F by A1,TARSKI:def 1;
end;
assume ( P ` ) in F;
then A2: ( P ` ) = ( [#] X ) by A1,TARSKI:def 1;
P = ( ( P ` ) ` )
.= ( {} ) by A2,XBOOLE_1:37;
hence thesis by TARSKI:def 1;
end;
hence thesis by CKB41:def 1;
end;
