environ
vocabularies NUMBERS,CLVECT_1,LOPBAN_1,RELAT_1,RLVECT_1,CFUNCT_1,FUNCT_1,ARYTM_3,XXREAL_2,NORMSP_1,XXREAL_0,PRE_TOPC,CLOPBAN1,CARD_1,REAL_1,XREAL_0,ORDINAL1,ORDINAL2,SUBSET_1,RSSPACE,LOPBAN_2,BINOP_1,STRUCT_0,COMPLEX1,ALGSTR_0,XBOOLE_0,GROUP_1,SUPINF_2,MESFUNC1,FUNCSDOM,VECTSP_1,LATTICES,CFUNCDOM,CSSPACE3,REWRITE1,NAT_1,RSSPACE3,SEQ_2,ZFMISC_1,XCMPLX_0,PREPOWER,COMSEQ_1,SERIES_1,CSSPACE,ARYTM_1,CLOPBAN2,NORMSP_0,METRIC_1,RELAT_2,SEQ_4;
notations XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCT_1,PARTFUN1,FUNCT_2,PRE_TOPC,BINOP_1,STRUCT_0,ALGSTR_0,XCMPLX_0,XXREAL_0,XREAL_0,ORDINAL1,NUMBERS,XXREAL_2,REAL_1,PSCOMP_1,RLVECT_1,VALUED_1,SEQ_4,FUNCSDOM,COMPLEX1,GROUP_1,VECTSP_1,SERIES_1,CFUNCT_1,COMSEQ_1,COMSEQ_3,NORMSP_0,CLVECT_1,CSSPACE,CSSPACE3,CLOPBAN1,CFUNCDOM,PREPOWER,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB19,CKB25,CKB29,CKB37,CKB39;
definitions STRUCT_0,GROUP_1,VECTSP_1,CLOPBAN1,BINOP_1,RLVECT_1,ALGSTR_0,CLVECT_1,CFUNCDOM,NORMSP_0,CKB4,CKB5,CKB6,CKB7,CKB9,CKB19,CKB25,CKB39;
theorems ABSVALUE,RLVECT_1,VECTSP_1,BINOP_1,XCMPLX_0,SERIES_1,FUNCT_1,FUNCT_2,SEQ_4,PREPOWER,STRUCT_0,CLOPBAN1,CLVECT_1,COMPLEX1,CFUNCDOM,CSSPACE3,COMSEQ_3,CSSPACE,GROUP_1,XREAL_1,XXREAL_0,ALGSTR_0,VALUED_1,GRCAT_1,NORMSP_0,CKB1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB22,CKB23,CKB25,CKB28,CKB31,CKB35,CKB36,CKB39,CKB42;
schemes BINOP_1;
registrations XBOOLE_0,FUNCT_1,ORDINAL1,RELSET_1,FUNCT_2,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,MEMBERED,STRUCT_0,CLVECT_1,CSSPACE3,CLOPBAN1,CFUNCDOM,ALGSTR_0,VALUED_1,VALUED_0,NORMSP_0,CKB20,CKB21,CKB24,CKB26,CKB27,CKB30,CKB32,CKB33,CKB34,CKB37,CKB38,CKB40,CKB41;
constructors PARTFUN1,DOMAIN_1,XXREAL_0,REAL_1,NAT_1,PREPOWER,COMSEQ_3,PSCOMP_1,CSSPACE3,CLOPBAN1,CFUNCDOM,VECTSP_1,SEQ_1,XXREAL_2,SERIES_1,SEQ_4,RELSET_1,BINOP_2,RVSUM_1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB19,CKB25,CKB37,CKB39;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
theorem
Th20: (for X being ComplexNormSpace holds ( C_Normed_Algebra_of_BoundedLinearOperators X ) is  reflexive  discerning  ComplexNormSpace-like  Abelian  add-associative  right_zeroed  right_complementable  associative  right_unital  right-distributive  vector-distributive  scalar-distributive  scalar-associative  vector-associative  vector-distributive  scalar-distributive  scalar-associative  scalar-unital)
proof
let X being ComplexNormSpace;
set C = ( C_Normed_Algebra_of_BoundedLinearOperators X );
set BS = ( C_NormSpace_of_BoundedLinearOperators (X,X) );
thus C is  reflexive
proof
thus ||. ( 0. C ) .|| = ||. ( 0. BS ) .||
.= ( 0 );
end;

thus C is  discerning
proof
let x being (Point of C);
reconsider y = x as (Point of BS);
assume ||. x .|| = ( 0 );
then ||. y .|| = ( 0 );
then y = ( 0. BS ) by NORMSP_0:def 5;
hence x = ( 0. C );
end;

thus C is  ComplexNormSpace-like
proof
let x being (Point of C);
let y being (Point of C);
let a being Complex;
reconsider x1 = x,y1 = y as (Point of BS);
A1: ||. x1 .|| = ||. x .||;
thus ||. ( a * x ) .|| = ||. ( a * x1 ) .||
.= ( |. a .| * ||. x .|| ) by A1,CLVECT_1:def 13;
(||. ( x + y ) .|| = ||. ( x1 + y1 ) .|| & ( ||. x1 .|| + ||. y1 .|| ) = ( ||. x .|| + ||. y .|| ));
hence thesis by CLVECT_1:def 13;
end;

set RBLOP = C;
A2: C is  right_complementable
proof
let x being (Element of C);
thus thesis by CKB42:1;
end;
A3: ((for a,b being Complex holds (for v being (VECTOR of RBLOP) holds ( ( a + b ) * v ) = ( ( a * v ) + ( b * v ) ))) & (for a,b being Complex holds (for v being (VECTOR of RBLOP) holds ( ( a * b ) * v ) = ( a * ( b * v ) )))) by CKB42:1;
((for x,y,z being (Element of C) holds (for a,b being Complex holds ((((((((((((((( x + y ) = ( y + x ) & ( ( x + y ) + z ) = ( x + ( y + z ) )) & ( x + ( 0. C ) ) = x) & x is  right_complementable) & ( ( x * y ) * z ) = ( x * ( y * z ) )) & ( x * ( 1. C ) ) = x) & ( ( 1. C ) * x ) = x) & ( x * ( y + z ) ) = ( ( x * y ) + ( x * z ) )) & ( ( y + z ) * x ) = ( ( y * x ) + ( z * x ) )) & ( a * ( x * y ) ) = ( ( a * x ) * y )) & ( ( a * b ) * ( x * y ) ) = ( ( a * x ) * ( b * y ) )) & ( a * ( x + y ) ) = ( ( a * x ) + ( a * y ) )) & ( ( a + b ) * x ) = ( ( a * x ) + ( b * x ) )) & ( ( a * b ) * x ) = ( a * ( b * x ) )) & ( ( 1r ) * x ) = x))) & (for a being Complex holds (for v,w being (VECTOR of RBLOP) holds ( a * ( v + w ) ) = ( ( a * v ) + ( a * w ) )))) by CKB42:1;
hence thesis by A2,A3,CFUNCDOM:def 9,CLVECT_1:def 2,CLVECT_1:def 3,CLVECT_1:def 4,CLVECT_1:def 5,GROUP_1:def 3,RLVECT_1:def 2,RLVECT_1:def 3,RLVECT_1:def 4,VECTSP_1:def 2,VECTSP_1:def 4;
end;
