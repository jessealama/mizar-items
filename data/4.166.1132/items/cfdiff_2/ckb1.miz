environ
vocabularies NUMBERS,SUBSET_1,PARTFUN1,REAL_1,CFUNCT_1,SEQ_1,COMSEQ_1,SEQ_2,CARD_1,FUNCT_1,COMPLEX1,RELAT_1,NAT_1,XREAL_0,ORDINAL1,ORDINAL2,ARYTM_3,XXREAL_0,ARYTM_1,FDIFF_1,VALUED_0,XCMPLX_0,VALUED_1,FINSEQ_1,PDIFF_1,AFINSQ_1,CARD_3,RCOMP_1,TARSKI,CFDIFF_1,FUNCT_2,XXREAL_1,PRE_TOPC,REAL_NS1,BINOP_2,NORMSP_1,EUCLID,MCART_1,RVSUM_1,SQUARE_1,SUPINF_2,STRUCT_0,LOPBAN_1;
notations TARSKI,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,RELSET_1,PARTFUN1,BINOP_1,BINOP_2,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,VALUED_1,SEQ_1,SEQ_2,RLVECT_1,COMSEQ_1,COMSEQ_2,COMSEQ_3,CFUNCT_1,PRE_TOPC,STRUCT_0,RVSUM_1,FINSEQ_1,FINSEQ_2,FINSEQ_7,SQUARE_1,RCOMP_1,EUCLID,NORMSP_0,NORMSP_1,REAL_NS1,LOPBAN_1,NFCONT_1,FDIFF_1,NDIFF_1,PDIFF_1,CFDIFF_1;
definitions LOPBAN_1,EUCLID,COMPLEX1,PCOMPS_1,PDIFF_1,VALUED_0,VALUED_1,RVSUM_1,XCMPLX_0,NAT_1,ORDINAL1;
theorems TARSKI,ABSVALUE,XBOOLE_1,XREAL_0,EUCLID,XREAL_1,XXREAL_0,RCOMP_1,RLVECT_1,SEQ_4,COMPLEX1,SEQ_1,SEQ_2,FINSEQ_1,XCMPLX_1,VALUED_1,BINOP_2,FINSEQ_2,FINSEQ_7,RVSUM_1,RELAT_1,FUNCT_1,FUNCT_2,NORMSP_1,LOPBAN_1,PARTFUN1,NFCONT_1,FDIFF_1,NDIFF_1,REAL_NS1,NUMBERS,FUNCT_3,SQUARE_1,CFUNCT_1,CFDIFF_1,PDIFF_1,XCMPLX_0,COMSEQ_1,COMSEQ_2,COMSEQ_3,JGRAPH_1,VALUED_0,ORDINAL1,GRCAT_1,NORMSP_0,CARD_1;
schemes SEQ_1,FUNCT_2;
registrations RELSET_1,STRUCT_0,ORDINAL1,MEMBERED,NUMBERS,XBOOLE_0,XREAL_0,XXREAL_0,XCMPLX_0,FUNCT_2,REAL_NS1,COMSEQ_3,VALUED_0,VALUED_1,SEQ_4,FDIFF_1,CFDIFF_1,FINSEQ_2,CARD_1;
constructors REAL_1,SQUARE_1,RSSPACE3,PARTFUN1,PCOMPS_1,SEQ_1,SEQ_2,BINOP_2,FINSEQ_7,REVROT_1,NFCONT_1,RCOMP_1,FDIFF_1,NDIFF_1,PDIFF_1,CFDIFF_1,COMSEQ_2,COMSEQ_3,RVSUM_1,RELSET_1;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve n for (Element of ( NAT ));
theorem
Lm1: (for seq being Real_Sequence holds (for cseq being Complex_Sequence holds (seq = cseq implies (seq is  convergent iff cseq is  convergent))))
proof
deffunc F((Element of ( NAT ))) = ( 0 );
consider bseq being Real_Sequence such that A1: (for n holds ( bseq . n ) = F(n)) from SEQ_1:sch 1;
let seq being Real_Sequence;
let cseq being Complex_Sequence;
assume that
A2: seq = cseq;
A3: (for n holds (( Re ( cseq . n ) ) = ( seq . n ) & ( Im ( cseq . n ) ) = ( bseq . n )))
proof
let n;
thus ( Re ( cseq . n ) ) = ( seq . n ) by A2,COMPLEX1:def 1;
( Im ( cseq . n ) ) = ( Im ( seq . n ) ) by A2;
then ( Im ( cseq . n ) ) = ( 0 ) by COMPLEX1:def 2;
hence ( Im ( cseq . n ) ) = ( bseq . n ) by A1;
end;
now
let n being Nat;
n in ( NAT ) by ORDINAL1:def 12;
hence ( bseq . n ) = ( 0 ) by A1;
end;
then bseq is  constant by VALUED_0:def 18;
hence thesis by A3,COMSEQ_3:38;
end;
