environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,SUBSET_1,ARYTM_1,ARYTM_3,XXREAL_0,ABIAN,INT_1,XREAL_0,ORDINAL1,POWER,RELAT_1,NEWTON,PREPOWER,SQUARE_1,FINSET_1,MEMBERED,SETFAM_1,FUNCT_1,FINSEQ_1,TARSKI,TURING_1,CARD_1,XXREAL_2,FUNCOP_1,VALUED_1,FUNCT_4,ZFMISC_1,PRE_FF,FIB_NUM,INT_2,ORDINAL4,CARD_3,PYTHTRIP,FIB_NUM2;
notations TARSKI,ORDINAL1,SUBSET_1,XBOOLE_0,SETFAM_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,SQUARE_1,INT_1,NAT_1,INT_2,NAT_D,FINSET_1,MEMBERED,RELAT_1,FUNCT_1,FUNCT_2,PRE_FF,RVSUM_1,ZFMISC_1,NEWTON,PREPOWER,POWER,XXREAL_2,ABIAN,DOMAIN_1,FINSEQ_1,FUNCT_4,FIB_NUM,PYTHTRIP,PEPIN,PNPROC_1,TREES_4,CKB18;
definitions TARSKI,XBOOLE_0,SQUARE_1,FINSEQ_1,CKB18;
theorems NAT_1,PRE_FF,INT_2,SQUARE_1,WSIERP_1,PYTHTRIP,POWER,NEWTON,PREPOWER,XCMPLX_1,NAT_2,FINSEQ_1,XBOOLE_1,RELAT_1,ORDINAL1,CARD_2,PNPROC_1,FINSEQ_3,RVSUM_1,XBOOLE_0,FIB_NUM,TARSKI,FUNCT_1,FUNCT_2,ZFMISC_1,PEPIN,GRFUNC_1,FUNCT_4,FINSEQ_2,ENUMSET1,SETFAM_1,XREAL_1,XXREAL_0,NAT_D,XXREAL_2,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB13,CKB14,CKB17,CKB18,CKB19,CKB21,CKB22,CKB27,CKB28,CKB29,CKB30,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47;
schemes NAT_1,FIB_NUM,FUNCT_2,DOMAIN_1,BINOP_2,CKB31,CKB32;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,SQUARE_1,NAT_1,INT_1,MEMBERED,FINSEQ_1,NEWTON,PREPOWER,ABIAN,NAT_2,VALUED_0,XXREAL_2,RELSET_1,CKB11,CKB12,CKB15,CKB16,CKB20,CKB23,CKB24,CKB25,CKB26;
constructors SETFAM_1,REAL_1,NAT_D,FINSOP_1,NEWTON,PREPOWER,POWER,ZFMISC_1,PRE_FF,BINARITH,WSIERP_1,ABIAN,PEPIN,PYTHTRIP,FIB_NUM,PNPROC_1,XXREAL_2,RELSET_1,DOMAIN_1,CKB18;
requirements SUBSET,NUMERALS,REAL,ARITHM,BOOLE;
begin
reserve n for Nat;
theorem
Th37: ( ( - ( tau ) ) to_power ( ( - 1 ) * n ) ) = ( ( ( - ( tau ) ) to_power ( - 1 ) ) to_power n )
proof
( ( - ( tau ) ) to_power ( ( - 1 ) * n ) ) = ( ( - ( tau ) ) #Z ( ( - 1 ) * n ) ) by POWER:def 2
.= ( ( ( - ( tau ) ) #Z ( - 1 ) ) #Z n ) by PREPOWER:45
.= ( ( 1 / ( ( - ( tau ) ) #Z 1 ) ) #Z n ) by PREPOWER:41
.= ( ( 1 / ( - ( tau ) ) ) #Z n ) by PREPOWER:35
.= ( ( 1 / ( - ( tau ) ) ) to_power n ) by POWER:def 2
.= ( ( ( 1 / ( - ( tau ) ) ) to_power 1 ) to_power n ) by POWER:25
.= ( ( ( 1 / ( - ( tau ) ) ) #Z 1 ) to_power n ) by POWER:def 2
.= ( ( 1 / ( ( - ( tau ) ) #Z 1 ) ) to_power n ) by PREPOWER:42
.= ( ( ( - ( tau ) ) #Z ( - 1 ) ) to_power n ) by PREPOWER:41;
hence thesis by POWER:def 2;
end;
