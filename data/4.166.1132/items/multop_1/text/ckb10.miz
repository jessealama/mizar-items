environ
vocabularies FUNCT_1,XBOOLE_0,SUBSET_1,ZFMISC_1,MULTOP_1;
notations XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCT_1,FUNCT_2,MCART_1,DOMAIN_1,CKB1,CKB2,CKB6;
definitions CKB1;
theorems FUNCT_2,MCART_1,CKB1,CKB3,CKB4,CKB5;
schemes FUNCT_2,CKB7,CKB8,CKB9;
registrations XBOOLE_0,SUBSET_1,RELSET_1;
constructors FUNCT_2,DOMAIN_1,RELSET_1,CKB1,CKB2;
requirements SUBSET,BOOLE;
begin
scheme TriOpLambda { A,B,C,D() -> non empty set,O((Element of A()),(Element of B()),(Element of C())) -> (Element of D()) } : (ex o being (Function of [: A(),B(),C() :],D()) st (for a being (Element of A()) holds (for b being (Element of B()) holds (for c being (Element of C()) holds ( o . (a,b,c) ) = O(a,b,c)))))
proof
consider f being (Function of [: A(),B(),C() :],D()) such that A1: (for a being (Element of A()) holds (for b being (Element of B()) holds (for c being (Element of C()) holds ( f . [ a,b,c ] ) = O(a,b,c)))) from CKB9:sch 1;
take f;
let a being (Element of A());
let b being (Element of B());
let c being (Element of C());
thus thesis by A1;
end;
