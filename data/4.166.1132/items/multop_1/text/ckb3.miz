environ
vocabularies FUNCT_1,XBOOLE_0,SUBSET_1,ZFMISC_1,MULTOP_1;
notations XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCT_1,FUNCT_2,MCART_1,DOMAIN_1,CKB1,CKB2;
definitions CKB1;
theorems FUNCT_2,MCART_1,CKB1;
schemes FUNCT_2;
registrations XBOOLE_0,SUBSET_1,RELSET_1;
constructors FUNCT_2,DOMAIN_1,RELSET_1,CKB1,CKB2;
requirements SUBSET,BOOLE;
begin
reserve D for non empty set;
reserve X for set;
reserve Y for set;
reserve Z for set;
reserve x for set;
reserve y for set;
reserve z for set;
reserve t for set;
theorem
Th2: (for f1,f2 being (Function of [: X,Y,Z :],D) holds ((for x holds (for y holds (for z holds (((x in X & y in Y) & z in Z) implies ( f1 . [ x,y,z ] ) = ( f2 . [ x,y,z ] ))))) implies f1 = f2))
proof
let f1 being (Function of [: X,Y,Z :],D),f2 being (Function of [: X,Y,Z :],D);
assume that
A1: (for x holds (for y holds (for z holds (((x in X & y in Y) & z in Z) implies ( f1 . [ x,y,z ] ) = ( f2 . [ x,y,z ] )))));
(for t holds (t in [: X,Y,Z :] implies ( f1 . t ) = ( f2 . t )))
proof
let t;
assume t in [: X,Y,Z :];
then (ex x st (ex y st (ex z st (((x in X & y in Y) & z in Z) & t = [ x,y,z ])))) by MCART_1:68;
hence thesis by A1;
end;
hence thesis by FUNCT_2:12;
end;
