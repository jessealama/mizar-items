environ
vocabularies FUNCT_1,XBOOLE_0,SUBSET_1,ZFMISC_1,MULTOP_1;
notations XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCT_1,FUNCT_2,MCART_1,DOMAIN_1,CKB1,CKB2,CKB6,CKB11,CKB12;
definitions CKB1,CKB11;
theorems FUNCT_2,MCART_1,CKB1,CKB3,CKB4,CKB5,CKB11,CKB13;
schemes FUNCT_2,CKB7,CKB8,CKB9,CKB10;
registrations XBOOLE_0,SUBSET_1,RELSET_1;
constructors FUNCT_2,DOMAIN_1,RELSET_1,CKB1,CKB2,CKB11,CKB12;
requirements SUBSET,BOOLE;
begin
reserve A for non  empty set;
reserve B for non  empty set;
reserve C for non  empty set;
reserve D for non  empty set;
reserve E for non  empty set;
reserve a for (Element of A);
reserve b for (Element of B);
reserve c for (Element of C);
reserve d for (Element of D);
reserve x for set;
reserve y for set;
reserve z for set;
reserve s for set;
theorem
Th7: (for f1,f2 being (Function of [: A,B,C,D :],E) holds ((for a holds (for b holds (for c holds (for d holds ( f1 . [ a,b,c,d ] ) = ( f2 . [ a,b,c,d ] ))))) implies f1 = f2))
proof
let f1 being (Function of [: A,B,C,D :],E);
let f2 being (Function of [: A,B,C,D :],E);
assume (for a holds (for b holds (for c holds (for d holds ( f1 . [ a,b,c,d ] ) = ( f2 . [ a,b,c,d ] )))));
then (for x holds (for y holds (for z holds (for s holds ((((x in A & y in B) & z in C) & s in D) implies ( f1 . [ x,y,z,s ] ) = ( f2 . [ x,y,z,s ] ))))));
hence thesis by CKB13:1;
end;
