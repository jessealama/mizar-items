environ
vocabularies FUNCT_1,XBOOLE_0,SUBSET_1,ZFMISC_1,MULTOP_1;
notations XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCT_1,FUNCT_2,MCART_1,DOMAIN_1,CKB1,CKB2;
definitions CKB1;
theorems FUNCT_2,MCART_1,CKB1,CKB3,CKB4;
schemes FUNCT_2;
registrations XBOOLE_0,SUBSET_1,RELSET_1;
constructors FUNCT_2,DOMAIN_1,RELSET_1,CKB1,CKB2;
requirements SUBSET,BOOLE;
begin
reserve A for non empty set;
reserve B for non empty set;
reserve C for non empty set;
reserve D for non empty set;
theorem
(for f1,f2 being (Function of [: A,B,C :],D) holds ((for a being (Element of A) holds (for b being (Element of B) holds (for c being (Element of C) holds ( f1 . (a,b,c) ) = ( f2 . (a,b,c) )))) implies f1 = f2))
proof
let f1 being (Function of [: A,B,C :],D),f2 being (Function of [: A,B,C :],D);
assume that
A1: (for a being (Element of A) holds (for b being (Element of B) holds (for c being (Element of C) holds ( f1 . (a,b,c) ) = ( f2 . (a,b,c) ))));
(for a being (Element of A) holds (for b being (Element of B) holds (for c being (Element of C) holds ( f1 . [ a,b,c ] ) = ( f2 . [ a,b,c ] ))))
proof
let a being (Element of A);
let b being (Element of B);
let c being (Element of C);
(( f1 . (a,b,c) ) = ( f1 . [ a,b,c ] ) & ( f2 . (a,b,c) ) = ( f2 . [ a,b,c ] ));
hence thesis by A1;
end;
hence thesis by CKB4:1;
end;
