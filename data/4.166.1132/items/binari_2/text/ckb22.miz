environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,FINSEQ_2,MARGREL1,SUBSET_1,FINSEQ_1,PARTFUN1,RELAT_1,FUNCT_1,FUNCOP_1,XBOOLEAN,ARYTM_3,INT_1,BINARITH,ARYTM_1,POWER,ORDINAL4,CARD_1,TARSKI,BINOP_2,SETWISEO,BINARI_2;
notations TARSKI,XBOOLE_0,SUBSET_1,XCMPLX_0,NUMBERS,FUNCT_1,NAT_1,NAT_D,INT_1,PARTFUN1,BINOP_1,SETWOP_2,SERIES_1,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_4,BINOP_2,XBOOLEAN,MARGREL1,BINARITH,CKB2,CKB3,CKB4,CKB5,CKB6;
definitions XBOOLEAN,CKB2,CKB3,CKB4,CKB5,CKB6;
theorems BINARITH,FINSEQ_1,FINSEQ_2,FINSEQ_4,FUNCOP_1,POWER,NAT_1,FINSOP_1,BINOP_2,XBOOLEAN,PARTFUN1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
schemes FINSEQ_2,NAT_1;
registrations ORDINAL1,RELSET_1,XREAL_0,NAT_1,INT_1,BINOP_2,XBOOLEAN,MARGREL1,XBOOLE_0,FINSEQ_2,CARD_1,FINSEQ_1;
constructors PARTFUN1,BINOP_1,SETWISEO,XXREAL_0,NAT_1,INT_1,FINSEQ_4,FINSOP_1,SERIES_1,BINARITH,BINOP_2,NAT_D,RELSET_1,CKB2,CKB3,CKB4,CKB5,CKB6;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve m for non  empty Nat;
reserve d for (Element of ( BOOLEAN ));
theorem
(for m holds (for z being (Tuple of m,( BOOLEAN )) holds (for d being (Element of ( BOOLEAN )) holds ( Neg2 ( Neg2 ( z ^ <* d *> ) ) ) = ( z ^ <* d *> ))))
proof
defpred P[ non  empty Nat ]
 means
(for z being (Tuple of $1,( BOOLEAN )) holds (for d being (Element of ( BOOLEAN )) holds ( Neg2 ( Neg2 ( z ^ <* d *> ) ) ) = ( z ^ <* d *> )));
A1: P[ 1 ]
proof
let z being (Tuple of 1,( BOOLEAN ));
let d being (Element of ( BOOLEAN ));
set NZD = ( ( 'not' d ) 'xor' ( 'not' ( z /. 1 ) ) );
set DPI = ( d '&' ( z /. 1 ) );
set NZ1 = ( ( 'not' z ) /. 1 );
set B1 = ( ( Bin1 1 ) /. 1 );
A2: 1 in ( Seg 1 ) by FINSEQ_1:3;
A3: ( ( ( 'not' d ) 'xor' ( FALSE ) ) 'xor' ( add_ovfl (( 'not' z ),( Bin1 1 )) ) ) = ( ( 'not' d ) 'xor' ( ( ( NZ1 '&' B1 ) 'or' ( NZ1 '&' ( ( carry (( 'not' z ),( Bin1 1 )) ) /. 1 ) ) ) 'or' ( B1 '&' ( ( carry (( 'not' z ),( Bin1 1 )) ) /. 1 ) ) ) ) by BINARITH:def 6
.= ( ( 'not' d ) 'xor' ( ( ( NZ1 '&' B1 ) 'or' ( NZ1 '&' ( FALSE ) ) ) 'or' ( B1 '&' ( ( carry (( 'not' z ),( Bin1 1 )) ) /. 1 ) ) ) ) by BINARITH:def 2
.= ( ( 'not' d ) 'xor' ( ( ( NZ1 '&' B1 ) 'or' ( FALSE ) ) 'or' ( B1 '&' ( FALSE ) ) ) ) by BINARITH:def 2
.= ( ( 'not' d ) 'xor' ( ( TRUE ) '&' NZ1 ) ) by A2,CKB11:1
.= ( ( 'not' d ) 'xor' ( 'not' ( z /. 1 ) ) ) by A2,BINARITH:def 1;
A4: ( ( ( 'not' NZD ) 'xor' ( FALSE ) ) 'xor' ( add_ovfl (( 'not' ( ( 'not' z ) + ( Bin1 1 ) ) ),( Bin1 1 )) ) ) = ( ( 'not' NZD ) 'xor' ( ( ( ( ( 'not' ( ( 'not' z ) + ( Bin1 1 ) ) ) /. 1 ) '&' B1 ) 'or' ( ( ( 'not' ( ( 'not' z ) + ( Bin1 1 ) ) ) /. 1 ) '&' ( ( carry (( 'not' ( ( 'not' z ) + ( Bin1 1 ) ) ),( Bin1 1 )) ) /. 1 ) ) ) 'or' ( B1 '&' ( ( carry (( 'not' ( ( 'not' z ) + ( Bin1 1 ) ) ),( Bin1 1 )) ) /. 1 ) ) ) ) by BINARITH:def 6
.= ( ( 'not' NZD ) 'xor' ( ( ( ( ( 'not' ( ( 'not' z ) + ( Bin1 1 ) ) ) /. 1 ) '&' ( ( Bin1 1 ) /. 1 ) ) 'or' ( ( ( 'not' ( ( 'not' z ) + ( Bin1 1 ) ) ) /. 1 ) '&' ( FALSE ) ) ) 'or' ( ( ( Bin1 1 ) /. 1 ) '&' ( ( carry (( 'not' ( ( 'not' z ) + ( Bin1 1 ) ) ),( Bin1 1 )) ) /. 1 ) ) ) ) by BINARITH:def 2
.= ( ( 'not' NZD ) 'xor' ( ( ( ( ( 'not' ( ( 'not' z ) + ( Bin1 1 ) ) ) /. 1 ) '&' ( ( Bin1 1 ) /. 1 ) ) 'or' ( FALSE ) ) 'or' ( B1 '&' ( FALSE ) ) ) ) by BINARITH:def 2
.= ( ( 'not' NZD ) 'xor' ( ( TRUE ) '&' ( ( 'not' ( ( 'not' z ) + ( Bin1 1 ) ) ) /. 1 ) ) ) by A2,CKB11:1
.= ( ( 'not' NZD ) 'xor' ( 'not' ( ( ( 'not' z ) + ( Bin1 1 ) ) /. 1 ) ) ) by A2,BINARITH:def 1
.= ( ( 'not' NZD ) 'xor' ( 'not' ( ( ( ( 'not' z ) /. 1 ) 'xor' ( ( Bin1 1 ) /. 1 ) ) 'xor' ( ( carry (( 'not' z ),( Bin1 1 )) ) /. 1 ) ) ) ) by A2,BINARITH:def 5
.= ( ( 'not' NZD ) 'xor' ( 'not' ( ( ( ( 'not' z ) /. 1 ) 'xor' ( ( Bin1 1 ) /. 1 ) ) 'xor' ( FALSE ) ) ) ) by BINARITH:def 2
.= ( ( 'not' NZD ) 'xor' ( 'not' ( NZ1 'xor' ( TRUE ) ) ) ) by A2,CKB11:1
.= ( ( 'not' NZD ) 'xor' ( 'not' ( z /. 1 ) ) ) by A2,BINARITH:def 1;
A5: ( Neg2 ( Neg2 ( z ^ <* d *> ) ) ) = ( ( 'not' ( ( ( 'not' z ) ^ <* ( 'not' d ) *> ) + ( Bin1 ( 1 + 1 ) ) ) ) + ( Bin1 ( 1 + 1 ) ) ) by CKB15:1
.= ( ( 'not' ( ( ( 'not' z ) ^ <* ( 'not' d ) *> ) + ( ( Bin1 1 ) ^ <* ( FALSE ) *> ) ) ) + ( Bin1 ( 1 + 1 ) ) ) by CKB13:1
.= ( ( 'not' ( ( ( 'not' z ) + ( Bin1 1 ) ) ^ <* ( ( ( 'not' d ) 'xor' ( FALSE ) ) 'xor' ( add_ovfl (( 'not' z ),( Bin1 1 )) ) ) *> ) ) + ( Bin1 ( 1 + 1 ) ) ) by BINARITH:19
.= ( ( ( 'not' ( ( 'not' z ) + ( Bin1 1 ) ) ) ^ <* ( 'not' NZD ) *> ) + ( Bin1 ( 1 + 1 ) ) ) by A3,CKB15:1
.= ( ( ( 'not' ( ( 'not' z ) + ( Bin1 1 ) ) ) ^ <* ( 'not' NZD ) *> ) + ( ( Bin1 1 ) ^ <* ( FALSE ) *> ) ) by CKB13:1
.= ( ( ( 'not' ( ( 'not' z ) + ( Bin1 1 ) ) ) + ( Bin1 1 ) ) ^ <* ( ( 'not' NZD ) 'xor' ( 'not' ( z /. 1 ) ) ) *> ) by A4,BINARITH:19;
then A6: ( ( Neg2 ( Neg2 ( z ^ <* d *> ) ) ) /. 1 ) = ( ( ( 'not' ( ( 'not' z ) + ( Bin1 1 ) ) ) + ( Bin1 1 ) ) /. 1 ) by A2,BINARITH:1
.= ( ( ( ( 'not' ( ( 'not' z ) + ( Bin1 1 ) ) ) /. 1 ) 'xor' ( ( Bin1 1 ) /. 1 ) ) 'xor' ( ( carry (( 'not' ( ( 'not' z ) + ( Bin1 1 ) ) ),( Bin1 1 )) ) /. 1 ) ) by A2,BINARITH:def 5
.= ( ( ( ( 'not' ( ( 'not' z ) + ( Bin1 1 ) ) ) /. 1 ) 'xor' ( ( Bin1 1 ) /. 1 ) ) 'xor' ( FALSE ) ) by BINARITH:def 2
.= ( ( ( 'not' ( ( 'not' z ) + ( Bin1 1 ) ) ) /. 1 ) 'xor' ( TRUE ) ) by A2,CKB11:1
.= ( 'not' ( 'not' ( ( ( 'not' z ) + ( Bin1 1 ) ) /. 1 ) ) ) by A2,BINARITH:def 1
.= ( ( ( ( 'not' z ) /. 1 ) 'xor' ( ( Bin1 1 ) /. 1 ) ) 'xor' ( ( carry (( 'not' z ),( Bin1 1 )) ) /. 1 ) ) by A2,BINARITH:def 5
.= ( ( NZ1 'xor' ( ( Bin1 1 ) /. 1 ) ) 'xor' ( FALSE ) ) by BINARITH:def 2
.= ( NZ1 'xor' ( TRUE ) ) by A2,CKB11:1
.= ( 'not' ( 'not' ( z /. 1 ) ) ) by A2,BINARITH:def 1
.= ( z /. 1 );
reconsider p = d,q = ( z /. 1 ) as  boolean set;
A7: ( ( Neg2 ( Neg2 ( z ^ <* d *> ) ) ) /. 2 ) = ( ( ( ( 'not' d ) 'or' ( 'not' ( 'not' ( z /. 1 ) ) ) ) '&' ( ( 'not' ( 'not' d ) ) 'or' ( 'not' ( z /. 1 ) ) ) ) 'xor' ( 'not' ( z /. 1 ) ) ) by A5,BINARITH:2
.= ( ( ( ( ( 'not' p ) 'or' q ) '&' p ) 'or' ( ( ( 'not' p ) 'or' q ) '&' ( 'not' q ) ) ) 'xor' ( 'not' ( z /. 1 ) ) ) by XBOOLEAN:8
.= ( ( ( ( p '&' ( 'not' p ) ) 'or' ( p '&' q ) ) 'or' ( ( 'not' q ) '&' ( ( 'not' p ) 'or' q ) ) ) 'xor' ( 'not' ( z /. 1 ) ) ) by XBOOLEAN:8
.= ( ( ( ( d '&' ( 'not' d ) ) 'or' ( d '&' ( z /. 1 ) ) ) 'or' ( ( ( 'not' ( z /. 1 ) ) '&' ( 'not' d ) ) 'or' ( ( 'not' ( z /. 1 ) ) '&' ( z /. 1 ) ) ) ) 'xor' ( 'not' ( z /. 1 ) ) ) by XBOOLEAN:8
.= ( ( ( ( FALSE ) 'or' ( d '&' ( z /. 1 ) ) ) 'or' ( ( ( 'not' ( z /. 1 ) ) '&' ( 'not' d ) ) 'or' ( ( 'not' ( z /. 1 ) ) '&' ( z /. 1 ) ) ) ) 'xor' ( 'not' ( z /. 1 ) ) ) by XBOOLEAN:138
.= ( ( DPI 'or' ( ( ( 'not' ( z /. 1 ) ) '&' ( 'not' d ) ) 'or' ( FALSE ) ) ) 'xor' ( 'not' ( z /. 1 ) ) ) by XBOOLEAN:138
.= ( ( ( ( 'not' d ) 'or' ( 'not' ( z /. 1 ) ) ) '&' ( ( 'not' ( z /. 1 ) ) '&' ( ( z /. 1 ) 'or' d ) ) ) 'or' ( ( DPI 'or' ( ( 'not' ( z /. 1 ) ) '&' ( 'not' d ) ) ) '&' ( 'not' ( 'not' ( z /. 1 ) ) ) ) )
.= ( ( ( ( 'not' d ) 'or' ( 'not' ( z /. 1 ) ) ) '&' ( ( ( 'not' ( z /. 1 ) ) '&' ( z /. 1 ) ) 'or' ( ( 'not' ( z /. 1 ) ) '&' d ) ) ) 'or' ( ( DPI 'or' ( ( 'not' ( z /. 1 ) ) '&' ( 'not' d ) ) ) '&' ( 'not' ( 'not' ( z /. 1 ) ) ) ) ) by XBOOLEAN:8
.= ( ( ( ( 'not' d ) 'or' ( 'not' ( z /. 1 ) ) ) '&' ( ( FALSE ) 'or' ( ( 'not' ( z /. 1 ) ) '&' d ) ) ) 'or' ( ( ( d '&' ( z /. 1 ) ) 'or' ( ( 'not' ( z /. 1 ) ) '&' ( 'not' d ) ) ) '&' ( 'not' ( 'not' ( z /. 1 ) ) ) ) ) by XBOOLEAN:138
.= ( ( ( ( ( 'not' ( z /. 1 ) ) '&' d ) '&' ( 'not' d ) ) 'or' ( ( ( 'not' ( z /. 1 ) ) '&' d ) '&' ( 'not' ( z /. 1 ) ) ) ) 'or' ( ( DPI 'or' ( ( 'not' ( z /. 1 ) ) '&' ( 'not' d ) ) ) '&' ( 'not' ( 'not' ( z /. 1 ) ) ) ) ) by XBOOLEAN:8
.= ( ( ( ( 'not' ( z /. 1 ) ) '&' ( d '&' ( 'not' d ) ) ) 'or' ( ( ( 'not' ( z /. 1 ) ) '&' d ) '&' ( 'not' ( z /. 1 ) ) ) ) 'or' ( ( DPI 'or' ( ( 'not' ( z /. 1 ) ) '&' ( 'not' d ) ) ) '&' ( 'not' ( 'not' ( z /. 1 ) ) ) ) )
.= ( ( ( ( 'not' ( z /. 1 ) ) '&' ( FALSE ) ) 'or' ( ( ( 'not' ( z /. 1 ) ) '&' d ) '&' ( 'not' ( z /. 1 ) ) ) ) 'or' ( ( DPI 'or' ( ( 'not' ( z /. 1 ) ) '&' ( 'not' d ) ) ) '&' ( 'not' ( 'not' ( z /. 1 ) ) ) ) ) by XBOOLEAN:138
.= ( ( d '&' ( ( 'not' ( z /. 1 ) ) '&' ( 'not' ( z /. 1 ) ) ) ) 'or' ( ( DPI 'or' ( ( 'not' ( z /. 1 ) ) '&' ( 'not' d ) ) ) '&' ( 'not' ( 'not' ( z /. 1 ) ) ) ) )
.= ( ( d '&' ( 'not' ( z /. 1 ) ) ) 'or' ( ( ( z /. 1 ) '&' ( ( z /. 1 ) '&' d ) ) 'or' ( ( z /. 1 ) '&' ( ( 'not' ( z /. 1 ) ) '&' ( 'not' d ) ) ) ) ) by XBOOLEAN:8
.= ( ( d '&' ( 'not' ( z /. 1 ) ) ) 'or' ( ( ( ( z /. 1 ) '&' ( z /. 1 ) ) '&' d ) 'or' ( ( z /. 1 ) '&' ( ( 'not' ( z /. 1 ) ) '&' ( 'not' d ) ) ) ) )
.= ( ( d '&' ( 'not' ( z /. 1 ) ) ) 'or' ( ( ( z /. 1 ) '&' d ) 'or' ( ( ( z /. 1 ) '&' ( 'not' ( z /. 1 ) ) ) '&' ( 'not' d ) ) ) )
.= ( ( d '&' ( 'not' ( z /. 1 ) ) ) 'or' ( ( ( z /. 1 ) '&' d ) 'or' ( ( FALSE ) '&' ( 'not' d ) ) ) ) by XBOOLEAN:138
.= ( d '&' ( ( 'not' ( z /. 1 ) ) 'or' ( z /. 1 ) ) ) by XBOOLEAN:8
.= ( ( TRUE ) '&' d ) by XBOOLEAN:102
.= d;
consider k1,k2 being (Element of ( BOOLEAN )) such that A8: ( Neg2 ( Neg2 ( z ^ <* d *> ) ) ) = <* k1,k2 *> by FINSEQ_2:100;
A9: (( ( Neg2 ( Neg2 ( z ^ <* d *> ) ) ) /. 1 ) = k1 & ( ( Neg2 ( Neg2 ( z ^ <* d *> ) ) ) /. 2 ) = k2) by A8,FINSEQ_4:17;
consider k being (Element of ( BOOLEAN )) such that A10: z = <* k *> by FINSEQ_2:97;
( Neg2 ( Neg2 ( z ^ <* d *> ) ) ) = <* k,d *> by A6,A7,A8,A9,A10,FINSEQ_4:16;
hence thesis by A10,FINSEQ_1:def 9;
end;
A11:now
let m;
assume A12: P[ m ];
now
let z being (Tuple of ( m + 1 ),( BOOLEAN ));
let d being (Element of ( BOOLEAN ));
consider t being (Element of ( m -tuples_on ( BOOLEAN ) )),k being (Element of ( BOOLEAN )) such that A13: z = ( t ^ <* k *> ) by FINSEQ_2:117;
set A = ( add_ovfl (( 'not' t ),( Bin1 m )) );
set B = ( add_ovfl (( 'not' ( Neg2 t ) ),( Bin1 m )) );
( Neg2 ( Neg2 ( t ^ <* k *> ) ) ) = ( Neg2 ( ( Neg2 t ) ^ <* ( ( 'not' k ) 'xor' ( add_ovfl (( 'not' t ),( Bin1 m )) ) ) *> ) ) by CKB20:1
.= ( ( Neg2 ( Neg2 t ) ) ^ <* ( ( 'not' ( ( 'not' k ) 'xor' ( add_ovfl (( 'not' t ),( Bin1 m )) ) ) ) 'xor' ( add_ovfl (( 'not' ( Neg2 t ) ),( Bin1 m )) ) ) *> ) by CKB20:1;
then A14: ( ( Neg2 ( Neg2 ( t ^ <* k *> ) ) ) /. ( m + 1 ) ) = ( ( 'not' ( ( 'not' k ) 'xor' ( add_ovfl (( 'not' t ),( Bin1 m )) ) ) ) 'xor' ( add_ovfl (( 'not' ( Neg2 t ) ),( Bin1 m )) ) ) by BINARITH:2;
A15: ( ( t ^ <* k *> ) /. ( m + 1 ) ) = k by BINARITH:2;
reconsider p = k,q = A as  boolean set;
( ( 'not' ( ( 'not' k ) 'xor' A ) ) 'xor' B ) = ( ( ( p '&' ( ( 'not' p ) 'or' ( 'not' q ) ) ) 'or' ( ( ( 'not' p ) 'or' ( 'not' q ) ) '&' q ) ) 'xor' B ) by XBOOLEAN:8
.= ( ( ( k '&' ( 'not' A ) ) 'or' ( A '&' ( ( 'not' k ) 'or' ( 'not' A ) ) ) ) 'xor' B ) by XBOOLEAN:11
.= ( ( A 'xor' k ) 'xor' B ) by XBOOLEAN:11
.= ( k 'xor' ( A 'xor' B ) ) by XBOOLEAN:73;
then A16: ( k 'xor' ( A 'xor' B ) ) = ( k 'xor' ( FALSE ) ) by A12,A14,A15;
A17: ( k 'xor' ( k 'xor' ( A 'xor' B ) ) ) = ( ( k 'xor' k ) 'xor' ( A 'xor' B ) ) by XBOOLEAN:73
.= ( ( FALSE ) 'xor' ( A 'xor' B ) ) by XBOOLEAN:138
.= ( A 'xor' B );
A18: ( k 'xor' ( k 'xor' ( FALSE ) ) ) = ( FALSE ) by XBOOLEAN:138;
A19: ( A 'xor' ( A 'xor' B ) ) = ( ( A 'xor' A ) 'xor' B ) by XBOOLEAN:73
.= ( ( FALSE ) 'xor' B ) by XBOOLEAN:138
.= B;
A20: ( m + 1 ) in ( Seg ( m + 1 ) ) by FINSEQ_1:3;
A21: ( add_ovfl (( 'not' z ),( Bin1 ( m + 1 ) )) ) = ( add_ovfl (( ( 'not' t ) ^ <* ( 'not' k ) *> ),( Bin1 ( m + 1 ) )) ) by A13,CKB15:1
.= ( add_ovfl (( ( 'not' t ) ^ <* ( 'not' k ) *> ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) by CKB13:1
.= ( ( ( ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) /. ( m + 1 ) ) '&' ( ( ( Bin1 m ) ^ <* ( FALSE ) *> ) /. ( m + 1 ) ) ) 'or' ( ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) /. ( m + 1 ) ) '&' ( ( carry (( ( 'not' t ) ^ <* ( 'not' k ) *> ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) ) 'or' ( ( ( ( Bin1 m ) ^ <* ( FALSE ) *> ) /. ( m + 1 ) ) '&' ( ( carry (( ( 'not' t ) ^ <* ( 'not' k ) *> ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) ) by BINARITH:def 6
.= ( ( ( ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) /. ( m + 1 ) ) '&' ( FALSE ) ) 'or' ( ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) /. ( m + 1 ) ) '&' ( ( carry (( ( 'not' t ) ^ <* ( 'not' k ) *> ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) ) 'or' ( ( ( ( Bin1 m ) ^ <* ( FALSE ) *> ) /. ( m + 1 ) ) '&' ( ( carry (( ( 'not' t ) ^ <* ( 'not' k ) *> ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) ) by BINARITH:2
.= ( ( ( FALSE ) 'or' ( ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) /. ( m + 1 ) ) '&' ( ( carry (( ( 'not' t ) ^ <* ( 'not' k ) *> ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) ) 'or' ( ( FALSE ) '&' ( ( carry (( ( 'not' t ) ^ <* ( 'not' k ) *> ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) ) by BINARITH:2
.= ( ( 'not' k ) '&' ( ( carry (( ( 'not' t ) ^ <* ( 'not' k ) *> ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) by BINARITH:2
.= ( ( 'not' k ) '&' A ) by BINARITH:18;
A22: ( add_ovfl (( 'not' ( Neg2 z ) ),( Bin1 ( m + 1 ) )) ) = ( add_ovfl (( 'not' ( Neg2 z ) ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) by CKB13:1
.= ( ( ( ( ( 'not' ( Neg2 z ) ) /. ( m + 1 ) ) '&' ( ( ( Bin1 m ) ^ <* ( FALSE ) *> ) /. ( m + 1 ) ) ) 'or' ( ( ( 'not' ( Neg2 z ) ) /. ( m + 1 ) ) '&' ( ( carry (( 'not' ( Neg2 z ) ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) ) 'or' ( ( ( ( Bin1 m ) ^ <* ( FALSE ) *> ) /. ( m + 1 ) ) '&' ( ( carry (( 'not' ( Neg2 z ) ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) ) by BINARITH:def 6
.= ( ( ( ( ( 'not' ( Neg2 z ) ) /. ( m + 1 ) ) '&' ( FALSE ) ) 'or' ( ( ( 'not' ( Neg2 z ) ) /. ( m + 1 ) ) '&' ( ( carry (( 'not' ( Neg2 z ) ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) ) 'or' ( ( ( ( Bin1 m ) ^ <* ( FALSE ) *> ) /. ( m + 1 ) ) '&' ( ( carry (( 'not' ( Neg2 z ) ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) ) by BINARITH:2
.= ( ( ( FALSE ) 'or' ( ( ( 'not' ( Neg2 z ) ) /. ( m + 1 ) ) '&' ( ( carry (( 'not' ( Neg2 z ) ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) ) 'or' ( ( FALSE ) '&' ( ( carry (( 'not' ( Neg2 z ) ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) ) by BINARITH:2
.= ( ( ( 'not' ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) + ( Bin1 ( m + 1 ) ) ) ) /. ( m + 1 ) ) '&' ( ( carry (( 'not' ( ( 'not' ( t ^ <* k *> ) ) + ( Bin1 ( m + 1 ) ) ) ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) by A13,CKB15:1
.= ( ( ( 'not' ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) + ( Bin1 ( m + 1 ) ) ) ) /. ( m + 1 ) ) '&' ( ( carry (( 'not' ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) + ( Bin1 ( m + 1 ) ) ) ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) by CKB15:1
.= ( ( ( 'not' ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) + ( ( Bin1 m ) ^ <* ( FALSE ) *> ) ) ) /. ( m + 1 ) ) '&' ( ( carry (( 'not' ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) + ( Bin1 ( m + 1 ) ) ) ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) by CKB13:1
.= ( ( ( 'not' ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) + ( ( Bin1 m ) ^ <* ( FALSE ) *> ) ) ) /. ( m + 1 ) ) '&' ( ( carry (( 'not' ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) + ( ( Bin1 m ) ^ <* ( FALSE ) *> ) ) ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) by CKB13:1
.= ( ( 'not' ( ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) + ( ( Bin1 m ) ^ <* ( FALSE ) *> ) ) /. ( m + 1 ) ) ) '&' ( ( carry (( 'not' ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) + ( ( Bin1 m ) ^ <* ( FALSE ) *> ) ) ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) by A20,BINARITH:def 1
.= ( ( 'not' ( ( ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) /. ( m + 1 ) ) 'xor' ( ( ( Bin1 m ) ^ <* ( FALSE ) *> ) /. ( m + 1 ) ) ) 'xor' ( ( carry (( ( 'not' t ) ^ <* ( 'not' k ) *> ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) ) '&' ( ( carry (( 'not' ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) + ( ( Bin1 m ) ^ <* ( FALSE ) *> ) ) ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) by A20,BINARITH:def 5
.= ( ( 'not' ( ( ( 'not' k ) 'xor' ( ( ( Bin1 m ) ^ <* ( FALSE ) *> ) /. ( m + 1 ) ) ) 'xor' ( ( carry (( ( 'not' t ) ^ <* ( 'not' k ) *> ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) ) '&' ( ( carry (( 'not' ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) + ( ( Bin1 m ) ^ <* ( FALSE ) *> ) ) ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) by BINARITH:2
.= ( ( 'not' ( ( ( 'not' k ) 'xor' ( FALSE ) ) 'xor' ( ( carry (( ( 'not' t ) ^ <* ( 'not' k ) *> ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) ) '&' ( ( carry (( 'not' ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) + ( ( Bin1 m ) ^ <* ( FALSE ) *> ) ) ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) by BINARITH:2
.= ( ( 'not' ( ( ( 'not' k ) 'xor' ( FALSE ) ) 'xor' ( add_ovfl (( 'not' t ),( Bin1 m )) ) ) ) '&' ( ( carry (( 'not' ( ( ( 'not' t ) ^ <* ( 'not' k ) *> ) + ( ( Bin1 m ) ^ <* ( FALSE ) *> ) ) ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) by BINARITH:18
.= ( ( 'not' ( ( 'not' k ) 'xor' ( add_ovfl (( 'not' t ),( Bin1 m )) ) ) ) '&' ( ( carry (( 'not' ( ( ( 'not' t ) + ( Bin1 m ) ) ^ <* ( ( ( 'not' k ) 'xor' ( FALSE ) ) 'xor' ( add_ovfl (( 'not' t ),( Bin1 m )) ) ) *> ) ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) by BINARITH:19
.= ( ( 'not' ( ( 'not' k ) 'xor' ( add_ovfl (( 'not' t ),( Bin1 m )) ) ) ) '&' ( ( carry (( ( 'not' ( ( 'not' t ) + ( Bin1 m ) ) ) ^ <* ( 'not' ( ( ( 'not' k ) 'xor' ( FALSE ) ) 'xor' ( add_ovfl (( 'not' t ),( Bin1 m )) ) ) ) *> ),( ( Bin1 m ) ^ <* ( FALSE ) *> )) ) /. ( m + 1 ) ) ) by CKB15:1
.= ( ( ( ( 'not' k ) 'or' ( 'not' A ) ) '&' ( k 'or' ( 'not' ( 'not' A ) ) ) ) '&' A ) by A16,A17,A18,A19,BINARITH:18
.= ( ( ( 'not' k ) 'or' ( 'not' A ) ) '&' ( A '&' ( k 'or' A ) ) )
.= ( A '&' ( ( 'not' A ) 'or' ( 'not' k ) ) ) by XBOOLEAN:6
.= ( A '&' ( 'not' k ) ) by XBOOLEAN:11;
set C = ( ( 'not' k ) '&' A );
reconsider p = d,q = C as  boolean set;
A23: ( ( 'not' ( ( 'not' d ) 'xor' C ) ) 'xor' C ) = ( ( ( p '&' ( ( 'not' p ) 'or' ( 'not' q ) ) ) 'or' ( ( ( 'not' p ) 'or' ( 'not' q ) ) '&' q ) ) 'xor' C ) by XBOOLEAN:8
.= ( ( ( d '&' ( 'not' C ) ) 'or' ( C '&' ( ( 'not' d ) 'or' ( 'not' C ) ) ) ) 'xor' C ) by XBOOLEAN:11
.= ( ( C 'xor' d ) 'xor' C ) by XBOOLEAN:11
.= ( d 'xor' ( C 'xor' C ) ) by XBOOLEAN:73
.= ( d 'xor' ( FALSE ) ) by XBOOLEAN:138
.= d;
thus ( Neg2 ( Neg2 ( z ^ <* d *> ) ) ) = ( Neg2 ( ( Neg2 z ) ^ <* ( ( 'not' d ) 'xor' ( add_ovfl (( 'not' z ),( Bin1 ( m + 1 ) )) ) ) *> ) ) by CKB20:1
.= ( ( Neg2 ( Neg2 z ) ) ^ <* ( ( 'not' ( ( 'not' d ) 'xor' ( add_ovfl (( 'not' z ),( Bin1 ( m + 1 ) )) ) ) ) 'xor' ( add_ovfl (( 'not' ( Neg2 z ) ),( Bin1 ( m + 1 ) )) ) ) *> ) by CKB20:1
.= ( z ^ <* d *> ) by A12,A13,A21,A22,A23;
end;
hence P[ ( m + 1 ) ];
end;
thus (for m holds P[ m ]) from NAT_1:sch 10(A1,A11);
end;
