environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,FINSEQ_2,MARGREL1,SUBSET_1,FINSEQ_1,PARTFUN1,RELAT_1,FUNCT_1,FUNCOP_1,XBOOLEAN,ARYTM_3,INT_1,BINARITH,ARYTM_1,POWER,ORDINAL4,CARD_1,TARSKI,BINOP_2,SETWISEO,BINARI_2;
notations TARSKI,XBOOLE_0,SUBSET_1,XCMPLX_0,NUMBERS,FUNCT_1,NAT_1,NAT_D,INT_1,PARTFUN1,BINOP_1,SETWOP_2,SERIES_1,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_4,BINOP_2,XBOOLEAN,MARGREL1,BINARITH,CKB2,CKB3,CKB4,CKB5,CKB6;
definitions XBOOLEAN,CKB2,CKB3,CKB4,CKB5,CKB6;
theorems BINARITH,FINSEQ_1,FINSEQ_2,FINSEQ_4,FUNCOP_1,POWER,NAT_1,FINSOP_1,BINOP_2,XBOOLEAN,PARTFUN1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15;
schemes FINSEQ_2,NAT_1;
registrations ORDINAL1,RELSET_1,XREAL_0,NAT_1,INT_1,BINOP_2,XBOOLEAN,MARGREL1,XBOOLE_0,FINSEQ_2,CARD_1,FINSEQ_1;
constructors PARTFUN1,BINOP_1,SETWISEO,XXREAL_0,NAT_1,INT_1,FINSEQ_4,FINSOP_1,SERIES_1,BINARITH,BINOP_2,NAT_D,RELSET_1,CKB2,CKB3,CKB4,CKB5,CKB6;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve m for non  empty Nat;
reserve d for (Element of ( BOOLEAN ));
theorem
Th12: (for z being (Tuple of m,( BOOLEAN )) holds (for d being (Element of ( BOOLEAN )) holds ( Intval ( z ^ <* d *> ) ) = ( ( Absval z ) - (( IFEQ (d,( FALSE ),( 0 ),( 2 to_power m )) ) qua Nat) )))
proof
let z being (Tuple of m,( BOOLEAN ));
let d;
per cases  by XBOOLEAN:def 3;
suppose A1: d = ( FALSE );

then ( ( z ^ <* d *> ) /. ( m + 1 ) ) = ( FALSE ) by BINARITH:2;
then A2: ( Intval ( z ^ <* d *> ) ) = ( Absval ( z ^ <* d *> ) ) by CKB4:def 1
.= ( ( Absval z ) + ( IFEQ (d,( FALSE ),( 0 ),( 2 to_power m )) ) ) by BINARITH:20
.= ( ( Absval z ) + ( 0 ) ) by A1,FUNCOP_1:def 8
.= ( Absval z );
( ( Absval z ) - (( IFEQ (d,( FALSE ),( 0 ),( 2 to_power m )) ) qua Nat) ) = ( ( Absval z ) - ( 0 ) ) by A1,FUNCOP_1:def 8
.= ( Absval z );
hence thesis by A2;
end;
suppose A3: d = ( TRUE );

then ( ( z ^ <* d *> ) /. ( m + 1 ) ) <> ( FALSE ) by BINARITH:2;
then ( Intval ( z ^ <* d *> ) ) = ( ( Absval ( z ^ <* d *> ) ) - ( 2 to_power ( m + 1 ) ) ) by CKB4:def 1
.= ( ( ( Absval z ) + ( IFEQ (d,( FALSE ),( 0 ),( 2 to_power m )) ) ) - ( 2 to_power ( m + 1 ) ) ) by BINARITH:20
.= ( ( ( Absval z ) + ( 2 to_power m ) ) - ( 2 to_power ( m + 1 ) ) ) by A3,FUNCOP_1:def 8
.= ( ( ( Absval z ) + ( 2 to_power m ) ) - ( ( 2 to_power m ) * ( 2 to_power 1 ) ) ) by POWER:27
.= ( ( ( Absval z ) + ( 2 to_power m ) ) - ( 2 * ( 2 to_power m ) ) ) by POWER:25
.= ( ( Absval z ) - ( 2 to_power m ) );
hence thesis by A3,FUNCOP_1:def 8;
end;
end;
