environ
vocabularies XBOOLE_0,SUBSET_1,TARSKI,FUNCT_1,RELAT_1,FUNCT_2,ZFMISC_1,PARTFUN1,FINSET_1,MCART_1,FINSUB_1,SETWISEO;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELAT_1,FINSET_1,FINSUB_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,DOMAIN_1,SETWISEO;
definitions TARSKI,XBOOLE_0,FUNCT_1,BINOP_1;
theorems FINSET_1,ZFMISC_1,MCART_1,FUNCT_1,FUNCT_2,SETWISEO,FINSUB_1,RELAT_1,RELSET_1,WELLORD2,XBOOLE_0,XBOOLE_1;
schemes FUNCT_1,FUNCT_2,SETWISEO,DOMAIN_1,PARTFUN1,CKB1,CKB2,CKB3;
registrations SUBSET_1,RELAT_1,FINSET_1,FINSUB_1,RELSET_1;
constructors PARTFUN1,BINOP_1,DOMAIN_1,FINSET_1,SETWISEO,RELSET_1;
requirements BOOLE,SUBSET;
begin
reserve B for non  empty set;
reserve A for set;
scheme Fraenkel699 { A,B() -> set,F(set,set) -> set,P,Q[set,set] } : { F(u1,v1) where u1 is (Element of A()),v1 is (Element of B()): P[ u1,v1 ] } = { F(u2,v2) where u2 is (Element of A()),v2 is (Element of B()): Q[ u2,v2 ] }
provided
A1: (for u being (Element of A()) holds (for v being (Element of B()) holds (P[ u,v ] iff Q[ u,v ])))
proof
set B = { F(u2,v2) where u2 is (Element of A()),v2 is (Element of B()): Q[ u2,v2 ] };
set A = { F(u1,v1) where u1 is (Element of A()),v1 is (Element of B()): P[ u1,v1 ] };
A2: (for u being (Element of A()) holds (for v being (Element of B()) holds (P[ u,v ] implies Q[ u,v ]))) by A1;
thus A c= B from CKB2:sch 1(A2);
A3: (for u being (Element of A()) holds (for v being (Element of B()) holds (Q[ u,v ] implies P[ u,v ]))) by A1;
thus B c= A from CKB2:sch 1(A3);
end;
