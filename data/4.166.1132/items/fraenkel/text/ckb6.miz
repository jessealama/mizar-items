environ
vocabularies XBOOLE_0,SUBSET_1,TARSKI,FUNCT_1,RELAT_1,FUNCT_2,ZFMISC_1,PARTFUN1,FINSET_1,MCART_1,FINSUB_1,SETWISEO;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELAT_1,FINSET_1,FINSUB_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,DOMAIN_1,SETWISEO;
definitions TARSKI,XBOOLE_0,FUNCT_1,BINOP_1;
theorems FINSET_1,ZFMISC_1,MCART_1,FUNCT_1,FUNCT_2,SETWISEO,FINSUB_1,RELAT_1,RELSET_1,WELLORD2,XBOOLE_0,XBOOLE_1;
schemes FUNCT_1,FUNCT_2,SETWISEO,DOMAIN_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5;
registrations SUBSET_1,RELAT_1,FINSET_1,FINSUB_1,RELSET_1;
constructors PARTFUN1,BINOP_1,DOMAIN_1,FINSET_1,SETWISEO,RELSET_1;
requirements BOOLE,SUBSET;
begin
scheme FraenkelF9R { B() -> set,F,G(set) -> set,P[set] } : { F(v1) where v1 is (Element of B()): P[ v1 ] } = { G(v2) where v2 is (Element of B()): P[ v2 ] }
provided
A1: (for v being (Element of B()) holds (P[ v ] implies F(v) = G(v)))
proof
set X = { F(v1) where v1 is (Element of B()): P[ v1 ] };
set Y = { G(v2) where v2 is (Element of B()): P[ v2 ] };
A2: Y c= X
proof
let x being set;
assume x in Y;
then consider v1 being (Element of B()) such that A3: x = G(v1) and A4: P[ v1 ];
x = F(v1) by A1,A3,A4;
hence thesis by A4;
end;
X c= Y
proof
let x being set;
assume x in X;
then consider v1 being (Element of B()) such that A5: x = F(v1) and A6: P[ v1 ];
x = G(v1) by A1,A5,A6;
hence thesis by A6;
end;
hence thesis by A2,XBOOLE_0:def 10;
end;
