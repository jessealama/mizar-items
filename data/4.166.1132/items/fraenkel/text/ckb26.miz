environ
vocabularies XBOOLE_0,SUBSET_1,TARSKI,FUNCT_1,RELAT_1,FUNCT_2,ZFMISC_1,PARTFUN1,FINSET_1,MCART_1,FINSUB_1,SETWISEO;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELAT_1,FINSET_1,FINSUB_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,DOMAIN_1,SETWISEO;
definitions TARSKI,XBOOLE_0,FUNCT_1,BINOP_1;
theorems FINSET_1,ZFMISC_1,MCART_1,FUNCT_1,FUNCT_2,SETWISEO,FINSUB_1,RELAT_1,RELSET_1,WELLORD2,XBOOLE_0,XBOOLE_1,CKB9,CKB10,CKB11,CKB24,CKB25;
schemes FUNCT_1,FUNCT_2,SETWISEO,DOMAIN_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23;
registrations SUBSET_1,RELAT_1,FINSET_1,FINSUB_1,RELSET_1;
constructors PARTFUN1,BINOP_1,DOMAIN_1,FINSET_1,SETWISEO,RELSET_1;
requirements BOOLE,SUBSET;
begin
scheme FraenkelFin { A() -> non empty set,X() -> set,F(set) -> set } : { F(w) where w is (Element of A()): w in X() } is  finite
provided
A1: X() is  finite
proof
set M = { F(w) where w is (Element of A()): w in X() };
consider f being Function such that A2: ( dom f ) = ( X() /\ A() ) and A3: (for y being set holds (y in ( X() /\ A() ) implies ( f . y ) = F(y))) from FUNCT_1:sch 3;
M = ( f .: X() )
proof
thus M c= ( f .: X() )
proof
let x being set;
assume x in M;
then consider u being (Element of A()) such that A4: x = F(u) and A5: u in X();
A6: u in ( dom f ) by A2,A5,XBOOLE_0:def 4;
then ( f . u ) = F(u) by A2,A3;
hence thesis by A4,A5,A6,FUNCT_1:def 6;
end;

let x being set;
assume x in ( f .: X() );
then consider y being set such that A7: y in ( dom f ) and A8: y in X() and A9: x = ( f . y ) by FUNCT_1:def 6;
reconsider y as (Element of A()) by A2,A7,XBOOLE_0:def 4;
x = F(y) by A2,A3,A7,A9;
hence thesis by A8;
end;
hence thesis by A1;
end;
