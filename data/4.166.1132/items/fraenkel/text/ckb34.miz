environ
vocabularies XBOOLE_0,SUBSET_1,TARSKI,FUNCT_1,RELAT_1,FUNCT_2,ZFMISC_1,PARTFUN1,FINSET_1,MCART_1,FINSUB_1,SETWISEO;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,RELAT_1,FINSET_1,FINSUB_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,DOMAIN_1,SETWISEO;
definitions TARSKI,XBOOLE_0,FUNCT_1,BINOP_1;
theorems FINSET_1,ZFMISC_1,MCART_1,FUNCT_1,FUNCT_2,SETWISEO,FINSUB_1,RELAT_1,RELSET_1,WELLORD2,XBOOLE_0,XBOOLE_1,CKB9,CKB10,CKB11,CKB24,CKB25,CKB30;
schemes FUNCT_1,FUNCT_2,SETWISEO,DOMAIN_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB26,CKB27,CKB28,CKB29,CKB32,CKB33;
registrations SUBSET_1,RELAT_1,FINSET_1,FINSUB_1,RELSET_1,CKB31;
constructors PARTFUN1,BINOP_1,DOMAIN_1,FINSET_1,SETWISEO,RELSET_1;
requirements BOOLE,SUBSET;
begin
reserve B for non  empty set;
reserve A for set;
reserve x for set;
scheme FuncsChoice { A() -> non  empty set,B() -> non  empty set,P[(Element of A()),(Element of B())],x() -> (Element of ( Fin A() )) } : (ex ff being (Element of ( Funcs (A(),B()) )) st (for t being (Element of A()) holds (t in x() implies P[ t,( ff . t ) ])))
provided
A1: (for t being (Element of A()) holds (t in x() implies (ex ff being (Element of B()) st P[ t,ff ])))
proof
A2: (for t being (Element of A()) holds (t in x() implies (ex ff being (Element of B()) st P[ t,ff ]))) by A1;
consider ff being (Function of A(),B()) such that A3: (for t being (Element of A()) holds (t in x() implies P[ t,( ff . t ) ])) from CKB33:sch 1(A2);
reconsider ff as (Element of ( Funcs (A(),B()) )) by FUNCT_2:8;
take ff;
thus thesis by A3;
end;
