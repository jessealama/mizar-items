environ
vocabularies REWRITE1,WAYBEL_0,TARSKI,ZFMISC_1,STRUCT_0,LATTICES,ORDINAL2,SUBSET_1,EQREL_1,XBOOLE_0,YELLOW_1,ARYTM_0,ORDERS_2,WAYBEL16,RELAT_1,YELLOW_0,LATTICE3,WAYBEL_5,WELLORD2,CARD_FIL,WELLORD1,CAT_1,SETFAM_1,XXREAL_0,FUNCT_1,CARD_1,SEQM_3,PBOOLE,FUNCOP_1,YELLOW_2,CARD_3,FUNCT_6,WAYBEL22,FUNCT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,PBOOLE,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_6,STRUCT_0,WELLORD1,CARD_1,CARD_3,ORDERS_2,LATTICE3,FUNCOP_1,YELLOW_0,YELLOW_1,YELLOW_2,YELLOW_7,WAYBEL_0,WAYBEL_1,WAYBEL_3,WAYBEL_5,WAYBEL16;
definitions TARSKI,FUNCT_1,ORDERS_3,LATTICE3,WELLORD2,YELLOW_0,WAYBEL_0,STRUCT_0;
theorems TARSKI,CARD_1,ZFMISC_1,SETFAM_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCT_3,FUNCT_4,FUNCT_6,FUNCOP_1,WELLORD1,WELLORD2,CARD_3,LATTICE3,PBOOLE,YELLOW_0,YELLOW_1,YELLOW_2,WAYBEL_0,WAYBEL_1,WAYBEL_5,WAYBEL11,WAYBEL13,WAYBEL14,WAYBEL15,WAYBEL16,WAYBEL17,RELSET_1,WAYBEL_4,WAYBEL20,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7;
schemes CLASSES1,FUNCT_2,MSSUBFAM,YELLOW_3;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FUNCT_2,FUNCOP_1,CARD_3,PBOOLE,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,WAYBEL_5,YELLOW_7,WAYBEL_8,WAYBEL16,FUNCT_1;
constructors SETFAM_1,DOMAIN_1,TOLER_1,ORDERS_3,PRALG_3,WAYBEL_1,WAYBEL_5,WAYBEL_8,WAYBEL16,RELSET_1,WAYBEL20;
requirements SUBSET,BOOLE;
begin
theorem
Th6: (for L being  upper-bounded  with_infima non  empty Poset holds ( InclPoset ( Filt L ) ) is (CLSubFrame of ( BoolePoset (the carrier of L) )))
proof
let L being  upper-bounded  with_infima non  empty Poset;
set cL = (the carrier of L);
set BP = ( BoolePoset cL );
set cBP = (the carrier of BP);
set rBP = (the InternalRel of BP);
set IP = ( InclPoset ( Filt L ) );
set cIP = (the carrier of IP);
set rIP = (the InternalRel of IP);
A1: ( InclPoset ( bool cL ) ) = RelStr (# ( bool cL ),( RelIncl ( bool cL ) ) #) by YELLOW_1:def 1;
A2: ( InclPoset ( Filt L ) ) = RelStr (# ( Filt L ),( RelIncl ( Filt L ) ) #) by YELLOW_1:def 1;
A3: ( BoolePoset cL ) = ( InclPoset ( bool cL ) ) by YELLOW_1:4;
A4: cIP c= cBP
proof
let x being set;
assume x in cIP;
then (ex X being (Filter of L) st x = X) by A2;
hence thesis by A3,A1;
end;
A5: ( field rIP ) = ( Filt L ) by A2,WELLORD2:def 1;
rIP c= rBP
proof
let p being set;
assume A6: p in rIP;
then consider x,y being set such that A7: p = [ x,y ] by RELAT_1:def 1;
A8: y in ( field rIP ) by A6,A7,RELAT_1:15;
then consider Y being (Filter of L) such that A9: y = Y by A5;
A10: x in ( field rIP ) by A6,A7,RELAT_1:15;
then consider X being (Filter of L) such that A11: x = X by A5;
X c= Y by A2,A5,A6,A7,A10,A8,A11,A9,WELLORD2:def 1;
hence thesis by A3,A1,A7,A11,A9,WELLORD2:def 1;
end;
then reconsider IP as (SubRelStr of BP) by A4,YELLOW_0:def 13;
now
let p being set;
A12: ( rBP |_2 cIP ) = ( rBP /\ [: cIP,cIP :] ) by WELLORD1:def 6;
hereby
assume A13: p in rIP;
then consider x,y being set such that A14: p = [ x,y ] by RELAT_1:def 1;
A15: y in ( field rIP ) by A13,A14,RELAT_1:15;
then consider Y being (Filter of L) such that A16: y = Y by A5;
A17: x in ( field rIP ) by A13,A14,RELAT_1:15;
then consider X being (Filter of L) such that A18: x = X by A5;
X c= Y by A2,A5,A13,A14,A17,A15,A18,A16,WELLORD2:def 1;
then p in rBP by A3,A1,A14,A18,A16,WELLORD2:def 1;
hence p in ( rBP |_2 cIP ) by A12,A13,XBOOLE_0:def 4;
end;
assume A19: p in ( rBP |_2 cIP );
then A20: p in rBP by A12,XBOOLE_0:def 4;
p in [: cIP,cIP :] by A12,A19,XBOOLE_0:def 4;
then consider x,y being set such that A21: (x in cIP & y in cIP) and A22: p = [ x,y ] by ZFMISC_1:def 2;
((ex X being (Filter of L) st x = X) & (ex Y being (Filter of L) st y = Y)) by A2,A21;
then x c= y by A3,A1,A20,A22,WELLORD2:def 1;
hence p in rIP by A2,A21,A22,WELLORD2:def 1;
end;
then rIP = ( rBP |_2 cIP ) by TARSKI:1;
then reconsider IP as  full (SubRelStr of BP) by YELLOW_0:def 14;
A23: ( Filt L ) c= ( bool cL )
proof
let x being set;
assume x in ( Filt L );
then (ex X being (Filter of L) st x = X);
hence thesis;
end;
A24: IP is  directed-sups-inheriting
proof
let X being  directed (Subset of IP);
assume that
A25: X <> ( {} )
and
 ex_sup_of X,BP;
consider Y being set such that A26: Y in X by A25,XBOOLE_0:def 1;
reconsider F = X as (Subset-Family of cL) by A2,A23,XBOOLE_1:1;
A27: (for P,R being (Subset of L) holds ((P in F & R in F) implies (ex Z being (Subset of L) st (Z in F & ( P \/ R ) c= Z))))
proof
let P being (Subset of L);
let R being (Subset of L);
assume A28: (P in F & R in F);
then reconsider P9 = P,R9 = R as (Element of IP);
consider Z being (Element of IP) such that A29: Z in X and A30: (P9 <= Z & R9 <= Z) by A28,WAYBEL_0:def 1;
Z in (the carrier of IP) by A29;
then consider Z9 being (Filter of L) such that A31: Z9 = Z by A2;
take Z9;
thus Z9 in F by A29,A31;
(P9 c= Z & R9 c= Z) by A30,YELLOW_1:3;
hence thesis by A31,XBOOLE_1:8;
end;
reconsider X9 = X as (Subset of BP) by A3,A1,A2,A23,XBOOLE_1:1;
set sX = ( "\/" (X,BP) );
A32: ( sup X9 ) = ( union X ) by YELLOW_1:21;
reconsider sX as (Subset of L) by A1,YELLOW_1:4;
A33: (for X being (Subset of L) holds (X in F implies X is  upper  filtered))
proof
let X being (Subset of L);
assume X in F;
then X in ( Filt L ) by A2;
then (ex Y being (Filter of L) st X = Y);
hence thesis;
end;
then (for X being (Subset of L) holds (X in F implies X is  upper));
then A34: sX is  upper by A32,WAYBEL_0:28;
(for X being (Subset of L) holds (X in F implies X is  filtered)) by A33;
then A35: sX is  filtered by A32,A27,WAYBEL_0:47;
Y in ( Filt L ) by A2,A26;
then (ex Z being (Filter of L) st Y = Z);
then ( Top L ) in Y by WAYBEL_4:22;
then sX is non  empty by A32,A26,TARSKI:def 4;
hence thesis by A2,A34,A35;
end;
IP is  infs-inheriting
proof
let X being (Subset of IP);
assume that
 ex_inf_of X,BP;
set sX = ( "/\" (X,BP) );
per cases ;
suppose A36: X is  empty;

A37: ( [#] L ) = cL;
( "/\" (X,BP) ) = ( Top BP ) by A36
.= cL by YELLOW_1:19;
hence thesis by A2,A37;
end;
suppose A38: X is non  empty;

reconsider F = X as (Subset-Family of cL) by A2,A23,XBOOLE_1:1;
reconsider sX as (Subset of L) by A1,YELLOW_1:4;
reconsider X9 = X as (Subset of BP) by A3,A1,A2,A23,XBOOLE_1:1;
A39: ( inf X9 ) = ( meet X ) by A38,YELLOW_1:20;
A40: (for X being (Subset of L) holds (X in F implies X is  upper  filtered))
proof
let X being (Subset of L);
assume X in F;
then X in ( Filt L ) by A2;
then (ex Y being (Filter of L) st X = Y);
hence thesis;
end;
then A41: sX is  filtered by A39,YELLOW_2:39;
(for X being (Subset of L) holds (X in F implies X is  upper)) by A40;
then A42: sX is  upper by A39,YELLOW_2:37;
(for Y being set holds (Y in X implies ( Top L ) in Y))
proof
let Y being set;
assume Y in X;
then Y in ( Filt L ) by A2;
then (ex Z being (Filter of L) st Y = Z);
hence thesis by WAYBEL_4:22;
end;
then sX is non  empty by A38,A39,SETFAM_1:def 1;
hence thesis by A2,A42,A41;
end;
end;
hence thesis by A24;
end;
