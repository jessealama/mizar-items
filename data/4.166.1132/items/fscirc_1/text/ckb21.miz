environ
vocabularies SUBSET_1,MSAFREE2,FACIRC_1,XBOOLEAN,STRUCT_0,LATTICES,CIRCCOMB,CIRCUIT1,XBOOLE_0,MSUALG_1,FINSEQ_1,TWOSCOMP,FUNCT_4,RELAT_1,PARTFUN1,FSM_1,MARGREL1,FUNCT_1,CIRCUIT2,GLIB_000,ARYTM_3,FSCIRC_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,RELAT_1,FUNCT_1,FINSEQ_1,STRUCT_0,MARGREL1,NAT_1,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,TWOSCOMP,FACIRC_1,BINARITH,CKB1,CKB2,CKB3,CKB4,CKB5,CKB11,CKB12;
definitions CIRCUIT2,FACIRC_1,MSAFREE2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB11,CKB12;
theorems TARSKI,ENUMSET1,RELAT_1,FUNCT_1,FINSEQ_2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
registrations RELSET_1,CARD_3,STRUCT_0,CIRCCOMB,FACIRC_1,ORDINAL1,FINSEQ_1,FUNCT_1,MSAFREE2;
constructors ENUMSET1,BINARITH,CIRCUIT1,CIRCUIT2,FACIRC_1,TWOSCOMP,NAT_1,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB11,CKB12;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Th13: (for x,y,c being non pair set holds (for s being (State of ( BorrowCirc (x,y,c) )) holds (for a1,a2,a3 being (Element of ( BOOLEAN )) holds (((a1 = ( s . [ <* x,y *>,( and2a ) ] ) & a2 = ( s . [ <* y,c *>,( and2 ) ] )) & a3 = ( s . [ <* x,c *>,( and2a ) ] )) implies ( ( Following s ) . ( BorrowOutput (x,y,c) ) ) = ( ( a1 'or' a2 ) 'or' a3 )))))
proof
let x being non pair set,y being non pair set,c being non pair set;
set xy = <* x,y *>;
set yc = <* y,c *>;
set xc = <* x,c *>;
set xy1 = [ xy,( and2a ) ];
set yc1 = [ yc,( and2 ) ];
set xc1 = [ xc,( and2a ) ];
set S = ( BorrowStr (x,y,c) );
reconsider xy1,yc1,xc1 as (Element of ( InnerVertices S )) by CKB14:1;
let s being (State of ( BorrowCirc (x,y,c) ));
let a1 being (Element of ( BOOLEAN )),a2 being (Element of ( BOOLEAN )),a3 being (Element of ( BOOLEAN ));
assume that
A1: ((a1 = ( s . [ <* x,y *>,( and2a ) ] ) & a2 = ( s . [ <* y,c *>,( and2 ) ] )) & a3 = ( s . [ <* x,c *>,( and2a ) ] ));
A2: ( dom s ) = (the carrier of S) by CIRCUIT1:3;
( InnerVertices S ) = (the carrier' of S) by FACIRC_1:37;
hence ( ( Following s ) . ( BorrowOutput (x,y,c) ) ) = ( ( or3 ) . ( s * <* xy1,yc1,xc1 *> ) ) by FACIRC_1:35
.= ( ( or3 ) . <* a1,a2,a3 *> ) by A1,A2,FINSEQ_2:126
.= ( ( a1 'or' a2 ) 'or' a3 ) by FACIRC_1:def 7;
end;
