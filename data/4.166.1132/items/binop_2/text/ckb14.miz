environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_1,BINOP_1,XCMPLX_0,ORDINAL1,NUMBERS,XREAL_0,RAT_1,INT_1,ZFMISC_1,ARYTM_1,RELAT_1,ARYTM_3,CARD_1,SETWISEO,BINOP_2;
notations XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCT_1,FUNCT_2,BINOP_1,SETWISEO,ORDINAL1,XCMPLX_0,XREAL_0,INT_1,NUMBERS,RAT_1;
definitions BINOP_1;
theorems BINOP_1,FUNCT_2,XCMPLX_0,XREAL_0,INT_1,RAT_1,SETWISEO,NUMBERS,ORDINAL1;
schemes BINOP_1,FUNCT_2,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
registrations ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,REAL_1,NAT_1,INT_1,RAT_1,RELSET_1,CKB5;
constructors BINOP_1,SETWISEO,XCMPLX_0,RAT_1,RELSET_1;
requirements BOOLE,SUBSET,ARITHM,NUMERALS;
begin
scheme CLambda2D { F( complex number, complex number) ->  complex number } : (ex f being (Function of [: ( COMPLEX ),( COMPLEX ) :],( COMPLEX )) st (for x,y being  complex number holds ( f . (x,y) ) = F(x,y)))
proof
defpred P[  complex number, complex number,set ]
 means
$3 = F($1,$2);
A1: (for x,y being (Element of ( COMPLEX )) holds (ex z being (Element of ( COMPLEX )) st P[ x,y,z ]))
proof
let x being (Element of ( COMPLEX ));
let y being (Element of ( COMPLEX ));
reconsider z = F(x,y) as (Element of ( COMPLEX )) by XCMPLX_0:def 2;
take z;
thus P[ x,y,z ];
end;
consider f being (Function of [: ( COMPLEX ),( COMPLEX ) :],( COMPLEX )) such that A2: (for x,y being (Element of ( COMPLEX )) holds P[ x,y,( f . (x,y) ) ]) from BINOP_1:sch 3(A1);
take f;
let x being  complex number;
let y being  complex number;
reconsider x,y as (Element of ( COMPLEX )) by XCMPLX_0:def 2;
P[ x,y,( f . (x,y) ) ] by A2;
then ( f . (x,y) ) = F(x,y);
hence thesis;
end;
