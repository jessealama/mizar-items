environ
vocabularies NUMBERS,SUBSET_1,ORDINAL1,CARD_1,FUNCT_1,ORDINAL2,TARSKI,CARD_3,RELAT_1,FINSET_1,XBOOLE_0,ARYTM_3,WELLORD1,WELLORD2,ORDINAL4,CARD_2,ORDINAL3,ZFMISC_1,FUNCT_2,FUNCOP_1,MCART_1,CARD_5,MEMBERED;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,NAT_1,MEMBERED,RELAT_1,FUNCT_1,FINSET_1,ORDINAL1,FUNCT_2,WELLORD1,WELLORD2,MCART_1,FUNCOP_1,ORDINAL2,ORDINAL3,CARD_2,CARD_3,ORDINAL4,CKB21;
definitions TARSKI,FUNCT_1,ORDINAL2,CARD_1,CARD_3,XBOOLE_0;
theorems TARSKI,FUNCT_1,FUNCT_2,FUNCOP_1,NAT_1,FINSET_1,MCART_1,ORDINAL1,ORDINAL2,ORDINAL3,ORDINAL4,WELLORD1,WELLORD2,CARD_1,CARD_2,CARD_3,CARD_4,ZFMISC_1,FUNCT_4,FUNCT_5,RELAT_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
schemes FUNCT_1,ORDINAL1,PARTFUN1,CARD_1,CARD_3,ORDINAL2,CLASSES1,XBOOLE_0,CARD_2;
registrations XBOOLE_0,FUNCT_1,ORDINAL1,FUNCOP_1,ORDINAL2,ORDINAL3,NAT_1,CARD_1,CARD_3,ORDINAL4,WELLORD2,MEMBERED,ORDERS_1,FINSET_1,CARD_2,CKB7,CKB19,CKB20;
constructors WELLORD1,WELLORD2,FUNCOP_1,ORDINAL3,XXREAL_0,NAT_1,FINSEQ_1,CARD_2,CARD_3,ORDINAL4,RELSET_1,MEMBERED,ORDERS_1,XREAL_0;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve A for Ordinal;
reserve B for Ordinal;
reserve M for Cardinal;
reserve N for Cardinal;
definition
let M;
func cf M -> Cardinal
means
:Def2: (M is_cofinal_with it & (for N holds (M is_cofinal_with N implies it c= N)));
existence
proof
defpred P[ Ordinal ]
 means
(M is_cofinal_with $1 & $1 is Cardinal);
A1: (ex A st P[ A ]);
consider A such that A2: (P[ A ] & (for B holds (P[ B ] implies A c= B))) from ORDINAL1:sch 1(A1);
reconsider K = A as Cardinal by A2;
take K;
thus M is_cofinal_with K by A2;
let N;
assume M is_cofinal_with N;
hence thesis by A2;
end;
uniqueness
proof
let K1 being Cardinal,K2 being Cardinal;
assume (((M is_cofinal_with K1 & (for N holds (M is_cofinal_with N implies K1 c= N))) & M is_cofinal_with K2) & (for N holds (M is_cofinal_with N implies K2 c= N)));
then (K1 c= K2 & K2 c= K1);
hence thesis by XBOOLE_0:def 10;
end;
end;
