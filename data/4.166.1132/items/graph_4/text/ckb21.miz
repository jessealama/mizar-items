environ
vocabularies NUMBERS,FINSEQ_1,SUBSET_1,GRAPH_1,FUNCT_1,STRUCT_0,TREES_2,XBOOLE_0,ARYTM_3,XXREAL_0,PARTFUN1,GRAPH_2,RELAT_1,TARSKI,CARD_1,NAT_1,ARYTM_1,ORDINAL4,GLIB_000,FINSET_1,FINSEQ_2,GRAPH_4;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FINSEQ_1,FINSEQ_2,CARD_1,FINSET_1,NUMBERS,XCMPLX_0,NAT_1,NAT_D,STRUCT_0,GRAPH_1,GRAPH_2,XXREAL_0,CKB1,CKB3,CKB5,CKB6,CKB8,CKB16;
definitions TARSKI,FINSEQ_2,CKB1,CKB3,CKB5,CKB6,CKB8,CKB16;
theorems TARSKI,NAT_1,FINSEQ_1,FINSEQ_2,GRAPH_1,RELAT_1,FUNCT_1,GRFUNC_1,FUNCT_2,FINSET_1,FINSEQ_3,FINSEQ_4,GRAPH_2,XBOOLE_0,XBOOLE_1,XREAL_1,CARD_1,XXREAL_0,ORDINAL1,NAT_D,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
schemes NAT_1,FINSEQ_1,FUNCT_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,GRAPH_2,ORDINAL1,CARD_1,STRUCT_0,GRAPH_1;
constructors PARTFUN1,XXREAL_0,XREAL_0,NAT_1,RECDEF_1,BINARITH,GRAPH_2,NAT_D,FINSEQ_2,RELSET_1,CKB1,CKB3,CKB5,CKB6,CKB8,CKB16;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve j for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve G for Graph;
reserve vs for (FinSequence of (the carrier of G));
reserve vs1 for (FinSequence of (the carrier of G));
reserve vs2 for (FinSequence of (the carrier of G));
reserve c for  oriented (Chain of G);
reserve c1 for  oriented (Chain of G);
reserve c2 for  oriented (Chain of G);
theorem
Th16: (((((vs1 is_oriented_vertex_seq_of c1 & vs2 is_oriented_vertex_seq_of c2) & ( vs1 . ( len vs1 ) ) = ( vs2 . 1 )) & c = ( c1 ^ c2 )) & vs = ( vs1 ^' vs2 )) implies vs is_oriented_vertex_seq_of c)
proof
assume that
A1: vs1 is_oriented_vertex_seq_of c1
and
A2: vs2 is_oriented_vertex_seq_of c2
and
A3: ( vs1 . ( len vs1 ) ) = ( vs2 . 1 );
assume that
A4: c = ( c1 ^ c2 )
and
A5: vs = ( vs1 ^' vs2 );
A6: ( len vs1 ) = ( ( len c1 ) + 1 ) by A1,CKB8:def 1;
A7: ( len vs2 ) = ( ( len c2 ) + 1 ) by A2,CKB8:def 1;
then A8: vs2 <> ( {} );
set q = ( c1 ^ c2 );
set p = ( vs1 ^' vs2 );
( ( len p ) + 1 ) = ( ( len vs1 ) + ( len vs2 ) ) by A8,GRAPH_2:13;
then A9: ( len p ) = ( ( ( len c1 ) + ( len c2 ) ) + 1 ) by A6,A7
.= ( ( len q ) + 1 ) by FINSEQ_1:22;
reconsider p as (FinSequence of (the carrier of G));
now
let n being (Element of ( NAT ));
assume that
A10: 1 <= n
and
A11: n <= ( len q );
A12: n <= ( len p ) by A9,A11,NAT_1:12;
A13: 1 <= ( n + 1 ) by NAT_1:12;
A14: ( p /. n ) = ( p . n ) by A10,A12,FINSEQ_4:15;
A15: ( p /. ( n + 1 ) ) = ( p . ( n + 1 ) ) by A9,A11,A13,FINSEQ_4:15,XREAL_1:7;
A16: n in ( dom q ) by A10,A11,FINSEQ_3:25;
per cases  by A16,FINSEQ_1:25;
suppose A17: n in ( dom c1 );

set v1 = ( vs1 /. n );
set v2 = ( vs1 /. ( n + 1 ) );
A18: 1 <= n by A17,FINSEQ_3:25;
A19: n <= ( len c1 ) by A17,FINSEQ_3:25;
then A20: ( c1 . n ) orientedly_joins v1,v2 by A1,A18,CKB8:def 1;
A21: n <= ( len vs1 ) by A6,A19,NAT_1:12;
( n + 1 ) <= ( ( len c1 ) + 1 ) by A19,XREAL_1:6;
then A22: ( n + 1 ) <= ( len vs1 ) by A1,CKB8:def 1;
A23: ( vs1 /. n ) = ( vs1 . n ) by A18,A21,FINSEQ_4:15;
A24: ( vs1 /. ( n + 1 ) ) = ( vs1 . ( n + 1 ) ) by A22,FINSEQ_4:15,NAT_1:12;
A25: ( p . n ) = ( vs1 . n ) by A18,A21,GRAPH_2:14;
( p . ( n + 1 ) ) = ( vs1 . ( n + 1 ) ) by A22,GRAPH_2:14,NAT_1:12;
hence ( q . n ) orientedly_joins ( p /. n ),( p /. ( n + 1 ) ) by A14,A15,A17,A20,A23,A24,A25,FINSEQ_1:def 7;
end;
suppose (ex k being Nat st (k in ( dom c2 ) & n = ( ( len c1 ) + k )));

then consider k being Nat such that A26: k in ( dom c2 ) and A27: n = ( ( len c1 ) + k );
reconsider k as (Element of ( NAT )) by ORDINAL1:def 12;
A28: ( q . n ) = ( c2 . k ) by A26,A27,FINSEQ_1:def 7;
A29: 1 <= k by A26,FINSEQ_3:25;
A30: k <= ( len c2 ) by A26,FINSEQ_3:25;
A31: 1 <= ( k + 1 ) by NAT_1:12;
k <= ( len vs2 ) by A7,A30,NAT_1:12;
then A32: ( vs2 /. k ) = ( vs2 . k ) by A29,FINSEQ_4:15;
A33: ( vs2 /. ( k + 1 ) ) = ( vs2 . ( k + 1 ) ) by A7,A30,A31,FINSEQ_4:15,XREAL_1:7;
A34: k <= ( len vs2 ) by A7,A30,NAT_1:12;
( ( 0 ) + 1 ) <= k by A26,FINSEQ_3:25;
then consider j such that ( 0 ) <= j and A35: j < ( len vs2 ) and A36: k = ( j + 1 ) by A34,GRAPH_2:1;
A37: ( p . n ) = ( vs2 . k )
proof
per cases  by A29,XXREAL_0:1;
suppose A38: 1 = k;

A39: ( ( 0 ) + 1 ) <= ( len vs1 ) by A6,NAT_1:13;
thus ( p . n ) = ( p . ( len vs1 ) ) by A1,A27,A38,CKB8:def 1
.= ( vs2 . k ) by A3,A38,A39,GRAPH_2:14;
end;
suppose 1 < k;

then A40: 1 <= j by A36,NAT_1:13;
thus ( p . n ) = ( p . ( ( ( len c1 ) + 1 ) + j ) ) by A27,A36
.= ( p . ( ( len vs1 ) + j ) ) by A1,CKB8:def 1
.= ( vs2 . k ) by A35,A36,A40,GRAPH_2:15;
end;
end;
A41: k < ( len vs2 ) by A7,A30,NAT_1:13;
( p . ( n + 1 ) ) = ( p . ( ( ( len c1 ) + 1 ) + k ) ) by A27
.= ( p . ( ( len vs1 ) + k ) ) by A1,CKB8:def 1
.= ( vs2 . ( k + 1 ) ) by A29,A41,GRAPH_2:15;
hence ( q . n ) orientedly_joins ( p /. n ),( p /. ( n + 1 ) ) by A2,A14,A15,A28,A29,A30,A32,A33,A37,CKB8:def 1;
end;
end;
hence thesis by A4,A5,A9,CKB8:def 1;
end;
