environ
vocabularies NUMBERS,FINSEQ_1,SUBSET_1,GRAPH_1,FUNCT_1,STRUCT_0,TREES_2,XBOOLE_0,ARYTM_3,XXREAL_0,PARTFUN1,GRAPH_2,RELAT_1,TARSKI,CARD_1,NAT_1,ARYTM_1,ORDINAL4,GLIB_000,FINSET_1,FINSEQ_2,GRAPH_4;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FINSEQ_1,FINSEQ_2,CARD_1,FINSET_1,NUMBERS,XCMPLX_0,NAT_1,NAT_D,STRUCT_0,GRAPH_1,GRAPH_2,XXREAL_0,CKB1,CKB3,CKB5,CKB6,CKB8,CKB16;
definitions TARSKI,FINSEQ_2,CKB1,CKB3,CKB5,CKB6,CKB8,CKB16;
theorems TARSKI,NAT_1,FINSEQ_1,FINSEQ_2,GRAPH_1,RELAT_1,FUNCT_1,GRFUNC_1,FUNCT_2,FINSET_1,FINSEQ_3,FINSEQ_4,GRAPH_2,XBOOLE_0,XBOOLE_1,XREAL_1,CARD_1,XXREAL_0,ORDINAL1,NAT_D,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes NAT_1,FINSEQ_1,FUNCT_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,GRAPH_2,ORDINAL1,CARD_1,STRUCT_0,GRAPH_1;
constructors PARTFUN1,XXREAL_0,XREAL_0,NAT_1,RECDEF_1,BINARITH,GRAPH_2,NAT_D,FINSEQ_2,RELSET_1,CKB1,CKB3,CKB5,CKB6,CKB8,CKB16;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve q for FinSequence;
reserve j for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve G for Graph;
reserve vs for (FinSequence of (the carrier of G));
reserve c for  oriented (Chain of G);
theorem
Th13: ((((1 <= m & m <= n) & n <= ( len c )) & q = ( (m,n) -cut c )) implies q is  oriented  oriented (Chain of G))
proof
assume that
A1: 1 <= m
and
A2: m <= n
and
A3: n <= ( len c )
and
A4: q = ( (m,n) -cut c );
consider vs such that A5: vs is_oriented_vertex_seq_of c by CKB14:1;
A6: ( ( ( len q ) + m ) - m ) = ( ( n + 1 ) - m ) by A1,A2,A3,A4,GRAPH_2:def 1;
reconsider qq = q as (Chain of G) by A1,A2,A3,A4,GRAPH_2:41;
(for n holds ((1 <= n & n < ( len q )) implies ( (the Source of G) . ( q . ( n + 1 ) ) ) = ( (the Target of G) . ( q . n ) )))
proof
let k being (Element of ( NAT ));
assume that
A7: 1 <= k
and
A8: k < ( len q );
( 1 - 1 ) <= ( m - 1 ) by A1,XREAL_1:9;
then ( m - 1 ) = ( m -' 1 ) by XREAL_0:def 2;
then reconsider m1 = ( m - 1 ) as (Element of ( NAT ));
reconsider i = ( m1 + k ) as (Element of ( NAT ));
set v1 = ( vs /. i );
set v2 = ( vs /. ( i + 1 ) );
( ( 0 ) + 1 ) <= k by A7;
then consider j such that ( 0 ) <= j and A9: j < ( len q ) and A10: k = ( j + 1 ) by A8,GRAPH_2:1;
A11: i = ( m + j ) by A10;
( i + 1 ) = ( m + ( j + 1 ) ) by A10;
then A12: ( c . ( i + 1 ) ) = ( q . ( k + 1 ) ) by A1,A2,A3,A4,A8,GRAPH_2:def 1;
A13: ( c . i ) = ( q . k ) by A1,A2,A3,A4,A9,A10,A11,GRAPH_2:def 1;
( 1 - 1 ) <= ( m - 1 ) by A1,XREAL_1:9;
then A14: ( ( 0 ) + 1 ) <= ( ( m - 1 ) + k ) by A7,XREAL_1:7;
i <= ( ( m - 1 ) + ( n - ( m - 1 ) ) ) by A6,A8,XREAL_1:6;
then i <= ( len c ) by A3,XXREAL_0:2;
then ( c . i ) orientedly_joins v1,v2 by A5,A14,CKB8:def 1;
then A15: ( (the Target of G) . ( c . i ) ) = v2 by CKB1:def 1;
A16: 1 < ( i + 1 ) by A14,NAT_1:13;
( k + m ) < ( n + 1 ) by A6,A8,XREAL_1:6;
then ( k + m ) <= n by NAT_1:13;
then ( m + k ) <= ( len c ) by A3,XXREAL_0:2;
then ( c . ( i + 1 ) ) orientedly_joins v2,( vs /. ( ( i + 1 ) + 1 ) ) by A5,A16,CKB8:def 1;
hence thesis by A12,A13,A15,CKB1:def 1;
end;
then qq is  oriented by GRAPH_1:def 13;
hence thesis;
end;
