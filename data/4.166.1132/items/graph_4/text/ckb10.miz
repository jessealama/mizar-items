environ
vocabularies NUMBERS,FINSEQ_1,SUBSET_1,GRAPH_1,FUNCT_1,STRUCT_0,TREES_2,XBOOLE_0,ARYTM_3,XXREAL_0,PARTFUN1,GRAPH_2,RELAT_1,TARSKI,CARD_1,NAT_1,ARYTM_1,ORDINAL4,GLIB_000,FINSET_1,FINSEQ_2,GRAPH_4;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FINSEQ_1,FINSEQ_2,CARD_1,FINSET_1,NUMBERS,XCMPLX_0,NAT_1,NAT_D,STRUCT_0,GRAPH_1,GRAPH_2,XXREAL_0,CKB1,CKB3,CKB5,CKB6,CKB8;
definitions TARSKI,FINSEQ_2,CKB1,CKB3,CKB5,CKB6,CKB8;
theorems TARSKI,NAT_1,FINSEQ_1,FINSEQ_2,GRAPH_1,RELAT_1,FUNCT_1,GRFUNC_1,FUNCT_2,FINSET_1,FINSEQ_3,FINSEQ_4,GRAPH_2,XBOOLE_0,XBOOLE_1,XREAL_1,CARD_1,XXREAL_0,ORDINAL1,NAT_D,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9;
schemes NAT_1,FINSEQ_1,FUNCT_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_1,GRAPH_2,ORDINAL1,CARD_1,STRUCT_0,GRAPH_1;
constructors PARTFUN1,XXREAL_0,XREAL_0,NAT_1,RECDEF_1,BINARITH,GRAPH_2,NAT_D,FINSEQ_2,RELSET_1,CKB1,CKB3,CKB5,CKB6,CKB8;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve e for set;
reserve G for Graph;
reserve x for (Element of G);
reserve y for (Element of G);
reserve v for (Element of G);
reserve vs for (FinSequence of (the carrier of G));
reserve c for  oriented (Chain of G);
theorem
(vs is_oriented_vertex_seq_of c implies ( G -SVSet ( rng c ) ) c= ( rng vs ))
proof
assume A1: vs is_oriented_vertex_seq_of c;
then A2: ( len vs ) = ( ( len c ) + 1 ) by CKB8:def 1;
( G -SVSet ( rng c ) ) c= ( rng vs )
proof
let y being set;
assume y in ( G -SVSet ( rng c ) );
then consider v being (Element of G) such that A3: v = y and A4: (ex e being (Element of (the carrier' of G)) st (e in ( rng c ) & v = ( (the Source of G) . e )));
consider e being (Element of (the carrier' of G)) such that A5: e in ( rng c ) and A6: v = ( (the Source of G) . e ) by A4;
consider x being set such that A7: x in ( dom c ) and A8: e = ( c . x ) by A5,FUNCT_1:def 3;
reconsider x as (Element of ( NAT )) by A7;
A9: 1 <= x by A7,FINSEQ_3:25;
A10: x <= ( len c ) by A7,FINSEQ_3:25;
then A11: x <= ( len vs ) by A2,NAT_1:12;
set v1 = ( vs /. x );
set v2 = ( vs /. ( x + 1 ) );
A12: v1 = ( vs . x ) by A9,A11,FINSEQ_4:15;
( c . x ) orientedly_joins v1,v2 by A1,A9,A10,CKB8:def 1;
then A13: v = v1 by A6,A8,CKB1:def 1;
x in ( dom vs ) by A9,A11,FINSEQ_3:25;
hence thesis by A3,A12,A13,FUNCT_1:def 3;
end;
hence thesis;
end;
