environ
vocabularies NUMBERS,SUBSET_1,ARYTM_3,XXREAL_0,ARYTM_1,CARD_1,FINSEQ_2,FINSEQ_1,FUNCT_1,RELAT_1,PARTFUN1,NAT_1,TARSKI,ORDINAL4,MATRIX_1,ZFMISC_1,GOBRD10;
notations TARSKI,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,NAT_D,RELAT_1,FUNCT_1,PARTFUN1,FINSEQ_1,FINSEQ_2,MATRIX_1,XXREAL_0,CKB1,CKB4;
definitions TARSKI,FINSEQ_2,CKB1,CKB4;
theorems TARSKI,NAT_1,FINSEQ_1,FINSEQ_4,FUNCT_1,FINSEQ_2,FUNCOP_1,FINSEQ_3,ZFMISC_1,XREAL_1,XXREAL_0,PARTFUN1,XREAL_0,NAT_D,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5;
schemes NAT_1,FINSEQ_1,FINSEQ_2;
registrations SUBSET_1,ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,XBOOLE_0,FINSEQ_1,FINSEQ_2,CARD_1;
constructors PARTFUN1,XXREAL_0,NAT_1,NAT_D,MATRIX_1,INT_1,FUNCOP_1,RELSET_1,CKB1,CKB4;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve i1 for (Element of ( NAT ));
reserve i2 for (Element of ( NAT ));
reserve j1 for (Element of ( NAT ));
reserve j2 for (Element of ( NAT ));
theorem
(for i1 holds (for i2 holds (for j1 holds (for j2 holds (((((i1,j1,i2,j2 are_adjacent2  & 1 <= i1) & 1 <= i2) & 1 <= j1) & 1 <= j2) implies ( i1 -' 1 ),( j1 -' 1 ),( i2 -' 1 ),( j2 -' 1 ) are_adjacent2 )))))
proof
let i1;
let i2;
let j1;
let j2;
assume that
A1: i1,j1,i2,j2 are_adjacent2 
and
A2: (((1 <= i1 & 1 <= i2) & 1 <= j1) & 1 <= j2);
((i1,i2 are_adjacent1  & j1 = j2) or (i1 = i2 & j1,j2 are_adjacent1 )) by A1,CKB4:def 1;
then ((( i1 -' 1 ),( i2 -' 1 ) are_adjacent1  & ( j1 -' 1 ) = ( j2 -' 1 )) or (( i1 -' 1 ) = ( i2 -' 1 ) & ( j1 -' 1 ),( j2 -' 1 ) are_adjacent1 )) by A2,CKB3:1;
hence thesis by CKB4:def 1;
end;
