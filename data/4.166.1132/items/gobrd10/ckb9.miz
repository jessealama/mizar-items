environ
vocabularies NUMBERS,SUBSET_1,ARYTM_3,XXREAL_0,ARYTM_1,CARD_1,FINSEQ_2,FINSEQ_1,FUNCT_1,RELAT_1,PARTFUN1,NAT_1,TARSKI,ORDINAL4,MATRIX_1,ZFMISC_1,GOBRD10;
notations TARSKI,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,NAT_D,RELAT_1,FUNCT_1,PARTFUN1,FINSEQ_1,FINSEQ_2,MATRIX_1,XXREAL_0,CKB1,CKB4,CKB7;
definitions TARSKI,FINSEQ_2,CKB1,CKB4,CKB7;
theorems TARSKI,NAT_1,FINSEQ_1,FINSEQ_4,FUNCT_1,FINSEQ_2,FUNCOP_1,FINSEQ_3,ZFMISC_1,XREAL_1,XXREAL_0,PARTFUN1,XREAL_0,NAT_D,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8;
schemes NAT_1,FINSEQ_1,FINSEQ_2;
registrations SUBSET_1,ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,XBOOLE_0,FINSEQ_1,FINSEQ_2,CARD_1;
constructors PARTFUN1,XXREAL_0,NAT_1,NAT_D,MATRIX_1,INT_1,FUNCOP_1,RELSET_1,CKB1,CKB4,CKB7;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve i for (Element of ( NAT ));
reserve j for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve k1 for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve i1 for (Element of ( NAT ));
theorem
Th7: (for n holds (for i holds (for j holds ((i <= n & j <= n) implies (ex fs1 being (FinSequence of ( NAT )) st ((((( fs1 . 1 ) = i & ( fs1 . ( len fs1 ) ) = j) & ( len fs1 ) = ( ( ( i -' j ) + ( j -' i ) ) + 1 )) & (for k holds (for k1 holds (((1 <= k & k <= ( len fs1 )) & k1 = ( fs1 . k )) implies k1 <= n)))) & (for i1 holds ((1 <= i1 & i1 < ( len fs1 )) implies ( fs1 /. i1 ),( fs1 /. ( i1 + 1 ) ) are_adjacent1 ))))))))
proof
let n;
let i;
let j;
assume (i <= n & j <= n);
then consider fs1 being (FinSequence of ( NAT )) such that A1: ((( fs1 . 1 ) = i & ( fs1 . ( len fs1 ) ) = j) & (( len fs1 ) = ( ( ( i -' j ) + ( j -' i ) ) + 1 ) & (for k holds (for k1 holds (((1 <= k & k <= ( len fs1 )) & k1 = ( fs1 . k )) implies k1 <= n))))) and A2: (for i1 holds ((1 <= i1 & i1 < ( len fs1 )) implies (( fs1 . ( i1 + 1 ) ) = ( ( fs1 /. i1 ) + 1 ) or ( fs1 . i1 ) = ( ( fs1 /. ( i1 + 1 ) ) + 1 )))) by CKB8:1;
(for i1 holds ((1 <= i1 & i1 < ( len fs1 )) implies ( fs1 /. i1 ),( fs1 /. ( i1 + 1 ) ) are_adjacent1 ))
proof
let i1;
assume A3: (1 <= i1 & i1 < ( len fs1 ));
then A4: ( fs1 . i1 ) = ( fs1 /. i1 ) by FINSEQ_4:15;
(1 <= ( i1 + 1 ) & ( i1 + 1 ) <= ( len fs1 )) by A3,NAT_1:13;
then A5: ( fs1 . ( i1 + 1 ) ) = ( fs1 /. ( i1 + 1 ) ) by FINSEQ_4:15;
(( fs1 . ( i1 + 1 ) ) = ( ( fs1 /. i1 ) + 1 ) or ( fs1 . i1 ) = ( ( fs1 /. ( i1 + 1 ) ) + 1 )) by A2,A3;
hence thesis by A5,A4,CKB1:def 1;
end;
hence thesis by A1;
end;
