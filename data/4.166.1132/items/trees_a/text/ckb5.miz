environ
vocabularies TREES_1,FINSEQ_1,NUMBERS,SUBSET_1,ORDINAL4,XBOOLE_0,TARSKI,RELAT_1,XXREAL_0,ARYTM_3,TREES_2,FUNCT_1,TREES_A;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,FINSEQ_1,TREES_1,TREES_2,CKB2;
definitions TARSKI,XBOOLE_0,TREES_1,TREES_2,RELAT_1,CKB2;
theorems TARSKI,FUNCT_1,FINSEQ_1,TREES_1,TREES_2,XBOOLE_0,XBOOLE_1,RELAT_1,CKB1,CKB2,CKB3,CKB4;
schemes TREES_2;
registrations XBOOLE_0,RELSET_1,MEMBERED,FINSEQ_1,TREES_2;
constructors XXREAL_0,NAT_1,MEMBERED,TREES_2,RELSET_1,FINSEQ_2,CKB2;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve T for Tree;
reserve P for (AntiChain_of_Prefixes of T);
reserve p for (FinSequence of ( NAT ));
theorem
Th4: P c= { t1 where t1 is (Element of T): (for p holds (p in P implies (not p is_a_proper_prefix_of t1))) }
proof
let x being set;
assume A1: x in P;
(ex t1 being (Element of T) st (x = t1 & (for p holds (p in P implies (not p is_a_proper_prefix_of t1)))))
proof
P c= T by TREES_1:def 11;
then consider t9 being (Element of T) such that A2: t9 = x by A1;
now
let p;
assume that
A3: p in P;
per cases ;
suppose t9 = p;

hence (not p is_a_proper_prefix_of t9);
end;
suppose t9 <> p;

then (not t9,p are_c=-comparable ) by A1,A2,A3,TREES_1:def 10;
hence (not p is_a_proper_prefix_of t9) by XBOOLE_1:104;
end;
end;
hence thesis by A2;
end;
hence thesis;
end;
