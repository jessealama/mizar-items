environ
vocabularies TREES_1,FINSEQ_1,NUMBERS,SUBSET_1,ORDINAL4,XBOOLE_0,TARSKI,RELAT_1,XXREAL_0,ARYTM_3,TREES_2,FUNCT_1,TREES_A;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,FINSEQ_1,TREES_1,TREES_2,CKB2,CKB11,CKB13;
definitions TARSKI,XBOOLE_0,TREES_1,TREES_2,RELAT_1,CKB2,CKB13;
theorems TARSKI,FUNCT_1,FINSEQ_1,TREES_1,TREES_2,XBOOLE_0,XBOOLE_1,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
schemes TREES_2;
registrations XBOOLE_0,RELSET_1,MEMBERED,FINSEQ_1,TREES_2,CKB10;
constructors XXREAL_0,NAT_1,MEMBERED,TREES_2,RELSET_1,FINSEQ_2,CKB2,CKB11,CKB13;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve p for (FinSequence of ( NAT ));
reserve x for set;
reserve D for non  empty set;
reserve T for (DecoratedTree of D);
reserve T1 for (DecoratedTree of D);
reserve P for (AntiChain_of_Prefixes of ( dom T ));
definition
let D;
let T;
let P;
let T1;
assume A1: P <> ( {} );
func tree (T,P,T1) -> (DecoratedTree of D) equals 
( tree (T,P,T1) );
coherence
proof
set T2 = ( tree (T,P,T1) );
T2 is D -valued
proof
let y being set;
assume y in ( rng T2 );
then consider x being set such that A2: x in ( dom T2 ) and A3: y = ( T2 . x ) by FUNCT_1:def 3;
x is (Element of ( dom T2 )) by A2;
then reconsider q = x as (FinSequence of ( NAT ));
( dom T2 ) = ( tree (( dom T ),P,( dom T1 )) ) by A1,CKB13:def 1;
then A4: ( dom T2 ) = ( { t1 where t1 is (Element of ( dom T )): (for p holds (p in P implies (not p is_a_prefix_of t1))) } \/ { ( p ^ s ) where p is (Element of ( dom T )),s is (Element of ( dom T1 )): p in P } ) by A1,CKB8:1;
per cases  by A2,A4,XBOOLE_0:def 3;
suppose A5: q in { t1 where t1 is (Element of ( dom T )): (for p holds (p in P implies (not p is_a_prefix_of t1))) };

then A6: ( ( tree (T,P,T1) ) . q ) = ( T . q ) by A1,A2,CKB16:1;
now
(ex t9 being (Element of ( dom T )) st (q = t9 & (for p holds (p in P implies (not p is_a_prefix_of t9))))) by A5;
hence q in ( dom T );
end;
then A7: y in ( rng T ) by A3,A6,FUNCT_1:def 3;
( rng T ) c= D by RELAT_1:def 19;
hence thesis by A7;
end;
suppose q in { ( p ^ s ) where p is (Element of ( dom T )),s is (Element of ( dom T1 )): p in P };

then (ex p being (Element of ( dom T )) st (ex r being (Element of ( dom T1 )) st ((q = ( p ^ r ) & p in P) & ( ( tree (T,P,T1) ) . q ) = ( T1 . r )))) by A2,CKB18:1;
hence thesis by A3;
end;
end;
hence thesis;
end;
end;
