environ
vocabularies TREES_1,FINSEQ_1,NUMBERS,SUBSET_1,ORDINAL4,XBOOLE_0,TARSKI,RELAT_1,XXREAL_0,ARYTM_3,TREES_2,FUNCT_1,TREES_A;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,FINSEQ_1,TREES_1,TREES_2,CKB2;
definitions TARSKI,XBOOLE_0,TREES_1,TREES_2,RELAT_1,CKB2;
theorems TARSKI,FUNCT_1,FINSEQ_1,TREES_1,TREES_2,XBOOLE_0,XBOOLE_1,RELAT_1,CKB1,CKB2;
schemes TREES_2;
registrations XBOOLE_0,RELSET_1,MEMBERED,FINSEQ_1,TREES_2;
constructors XXREAL_0,NAT_1,MEMBERED,TREES_2,RELSET_1,FINSEQ_2,CKB2;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve T for Tree;
reserve T1 for Tree;
reserve P for (AntiChain_of_Prefixes of T);
reserve p for (FinSequence of ( NAT ));
reserve r for (FinSequence of ( NAT ));
reserve t for (Element of T);
theorem
Th2: (P <> ( {} ) implies ( tree (T,P,T1) ) = ( { t1 where t1 is (Element of T): (for p holds (p in P implies (not p is_a_proper_prefix_of t1))) } \/ { ( p ^ s ) where p is (Element of T),s is (Element of T1): p in P } ))
proof
assume A1: P <> ( {} );
thus ( tree (T,P,T1) ) c= ( { t: (for p holds (p in P implies (not p is_a_proper_prefix_of t))) } \/ { ( p ^ s ) where p is (Element of T),s is (Element of T1): p in P } )
proof
let x being set;
assume A2: x in ( tree (T,P,T1) );
then reconsider q = x as (FinSequence of ( NAT )) by TREES_1:19;
A3:now
given p,r such that
A4: ((p in P & r in T1) & q = ( p ^ r ));

P c= T by TREES_1:def 11;
hence x in { ( p9 ^ s ) where p9 is (Element of T),s is (Element of T1): p9 in P } by A4;
end;
((q in T & (for p holds (p in P implies (not p is_a_proper_prefix_of q)))) implies x in { t: (for p holds (p in P implies (not p is_a_proper_prefix_of t))) });
hence thesis by A1,A2,A3,CKB2:def 1,XBOOLE_0:def 3;
end;

let x being set;
assume that
A5: x in ( { t: (for p holds (p in P implies (not p is_a_proper_prefix_of t))) } \/ { ( p ^ s ) where p is (Element of T),s is (Element of T1): p in P } );
A6:now
assume x in { ( p ^ s ) where p is (Element of T),s is (Element of T1): p in P };
then (ex p being (Element of T) st (ex s being (Element of T1) st (x = ( p ^ s ) & p in P)));
hence thesis by CKB2:def 1;
end;
now
assume x in { t: (for p holds (p in P implies (not p is_a_proper_prefix_of t))) };
then (ex t st (x = t & (for p holds (p in P implies (not p is_a_proper_prefix_of t)))));
hence thesis by A1,CKB2:def 1;
end;
hence thesis by A5,A6,XBOOLE_0:def 3;
end;
