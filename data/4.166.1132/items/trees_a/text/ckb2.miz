environ
vocabularies TREES_1,FINSEQ_1,NUMBERS,SUBSET_1,ORDINAL4,XBOOLE_0,TARSKI,RELAT_1,XXREAL_0,ARYTM_3,TREES_2,FUNCT_1,TREES_A;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,FINSEQ_1,TREES_1,TREES_2;
definitions TARSKI,XBOOLE_0,TREES_1,TREES_2,RELAT_1;
theorems TARSKI,FUNCT_1,FINSEQ_1,TREES_1,TREES_2,XBOOLE_0,XBOOLE_1,RELAT_1,CKB1;
schemes TREES_2;
registrations XBOOLE_0,RELSET_1,MEMBERED,FINSEQ_1,TREES_2;
constructors XXREAL_0,NAT_1,MEMBERED,TREES_2,RELSET_1,FINSEQ_2;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve T for Tree;
reserve T1 for Tree;
reserve P for (AntiChain_of_Prefixes of T);
reserve p1 for FinSequence;
reserve p for (FinSequence of ( NAT ));
reserve q for (FinSequence of ( NAT ));
reserve r for (FinSequence of ( NAT ));
reserve s for (FinSequence of ( NAT ));
reserve p9 for (FinSequence of ( NAT ));
reserve x for set;
reserve Z for set;
reserve t for (Element of T);
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
definition
let T;
let T1;
let P;
assume that
A1: P <> ( {} );
func tree (T,P,T1) -> Tree means 
:Def1: (q in it iff ((q in T & (for p holds (p in P implies (not p is_a_proper_prefix_of q)))) or (ex p st (ex r st ((p in P & r in T1) & q = ( p ^ r ))))));
existence
proof
reconsider P9 = P as (Subset of T) by TREES_1:def 11;
now
let x;
assume A2: x in P9;
then reconsider x9 = x as FinSequence by TREES_1:def 10;
reconsider x9 as (Element of T) by A2;
now
let p;
assume that
A3: p in P;
per cases ;
suppose p <> x9;

then (not p,x9 are_c=-comparable ) by A2,A3,TREES_1:def 10;
hence (not p is_a_proper_prefix_of x9) by XBOOLE_1:104;
end;
suppose p = x9;

hence (not p is_a_proper_prefix_of x9);
end;
end;
hence x in { t: (for p holds (p in P implies (not p is_a_proper_prefix_of t))) };
end;
then P c= { t: (for p holds (p in P implies (not p is_a_proper_prefix_of t))) } by TARSKI:def 3;
then reconsider Y = { t: (for p holds (p in P implies (not p is_a_proper_prefix_of t))) } as non  empty set by A1,XBOOLE_1:3;
consider Z such that A4: Z = { ( p ^ s ) where p is (Element of T),s is (Element of T1): p in P };
reconsider X = ( Y \/ Z ) as non  empty set;
A5: (x in { t: (for p holds (p in P implies (not p is_a_proper_prefix_of t))) } implies ((x is (FinSequence of ( NAT )) & x in ( ( NAT ) * )) & x in T))
proof
assume x in { t: (for p holds (p in P implies (not p is_a_proper_prefix_of t))) };
then A6: (ex t st (x = t & (for p holds (p in P implies (not p is_a_proper_prefix_of t)))));
hence x is (FinSequence of ( NAT ));
thus thesis by A6,FINSEQ_1:def 11;
end;
X is  Tree-like
proof
thus X c= ( ( NAT ) * )
proof
let x;
assume x in X;
then A7: (x in { t: (for p holds (p in P implies (not p is_a_proper_prefix_of t))) } or x in { ( p ^ s ) where p is (Element of T),s is (Element of T1): p in P }) by A4,XBOOLE_0:def 3;
now
assume x in { ( p ^ s ) where p is (Element of T),s is (Element of T1): p in P };
then (ex p being (Element of T) st (ex s being (Element of T1) st (x = ( p ^ s ) & p in P)));
hence x is (FinSequence of ( NAT ));
end;
hence thesis by A5,A7,FINSEQ_1:def 11;
end;

thus (for q holds (q in X implies ( ProperPrefixes q ) c= X))
proof
let q;
assume that
A8: q in X;
A9:now
assume A10: q in { t: (for p holds (p in P implies (not p is_a_proper_prefix_of t))) };
then (ex t st (q = t & (for p holds (p in P implies (not p is_a_proper_prefix_of t)))));
then A11: ( ProperPrefixes q ) c= T by TREES_1:def 3;
thus ( ProperPrefixes q ) c= X
proof
let x;
assume A12: x in ( ProperPrefixes q );
then consider p1 such that A13: x = p1 and A14: p1 is_a_proper_prefix_of q by TREES_1:def 2;
reconsider p1 as (Element of T) by A11,A12,A13;
(for p holds (p in P implies (not p is_a_proper_prefix_of p1)))
proof
let p;
assume that
A15: p in P;
(ex t st (q = t & (for p holds (p in P implies (not p is_a_proper_prefix_of t))))) by A10;
hence thesis by A14,A15,XBOOLE_1:56;
end;
then x in { s1 where s1 is (Element of T): (for p holds (p in P implies (not p is_a_proper_prefix_of s1))) } by A13;
hence thesis by XBOOLE_0:def 3;
end;

end;
now
assume q in Z;
then consider p being (Element of T),s being (Element of T1) such that A16: q = ( p ^ s ) and A17: p in P by A4;
thus ( ProperPrefixes q ) c= X
proof
let x;
assume A18: x in ( ProperPrefixes q );
then reconsider r = x as FinSequence by TREES_1:11;
r is_a_proper_prefix_of ( p ^ s ) by A16,A18,TREES_1:12;
then r is_a_prefix_of ( p ^ s ) by XBOOLE_0:def 8;
then consider r1 being FinSequence such that A19: ( p ^ s ) = ( r ^ r1 ) by TREES_1:1;
A20:now
assume ( len p ) <= ( len r );
then consider r2 being FinSequence such that A21: ( p ^ r2 ) = r by A19,FINSEQ_1:47;
( p ^ s ) = ( p ^ ( r2 ^ r1 ) ) by A19,A21,FINSEQ_1:32;
then s = ( r2 ^ r1 ) by FINSEQ_1:33;
then ( s | ( dom r2 ) ) = r2 by FINSEQ_1:21;
then A22: ( s | ( Seg ( len r2 ) ) ) = r2 by FINSEQ_1:def 3;
then reconsider r2 as (FinSequence of ( NAT )) by FINSEQ_1:18;
r2 is_a_prefix_of s by A22,TREES_1:def 1;
then reconsider r2 as (Element of T1) by TREES_1:20;
r = ( p ^ r2 ) by A21;
then r in { ( w ^ v ) where w is (Element of T),v is (Element of T1): w in P } by A17;
hence r in X by A4,XBOOLE_0:def 3;
end;
now
assume ( len r ) <= ( len p );
then (ex r2 being FinSequence st ( r ^ r2 ) = p) by A19,FINSEQ_1:47;
then ( p | ( dom r ) ) = r by FINSEQ_1:21;
then A23: ( p | ( Seg ( len r ) ) ) = r by FINSEQ_1:def 3;
then reconsider r3 = r as (FinSequence of ( NAT )) by FINSEQ_1:18;
A24: r3 is_a_prefix_of p by A23,TREES_1:def 1;
then reconsider r3 as (Element of T) by TREES_1:20;
(for p9 holds (p9 in P implies (not p9 is_a_proper_prefix_of r3)))
proof
let p9;
assume A25: p9 in P;
assume A26: p9 is_a_proper_prefix_of r3;
then p9 is_a_prefix_of r3 by XBOOLE_0:def 8;
then p9 is_a_prefix_of p by A24,XBOOLE_1:1;
then A27: p,p9 are_c=-comparable  by XBOOLE_0:def 9;
per cases ;
suppose p <> p9;

hence contradiction by A17,A25,A27,TREES_1:def 10;
end;
suppose p = p9;

hence contradiction by A24,A26,XBOOLE_0:def 8;
end;
end;
then r3 in { t: (for p9 holds (p9 in P implies (not p9 is_a_proper_prefix_of t))) };
hence r in X by XBOOLE_0:def 3;
end;
hence thesis by A20;
end;

end;
hence thesis by A8,A9,XBOOLE_0:def 3;
end;

let q;
let k;
let n;
assume that
A28: ( q ^ <* k *> ) in X
and
A29: n <= k;
A30:now
assume A31: ( q ^ <* k *> ) in { t: (for p holds (p in P implies (not p is_a_proper_prefix_of t))) };
then (ex s being (Element of T) st (( q ^ <* k *> ) = s & (for p holds (p in P implies (not p is_a_proper_prefix_of s)))));
then reconsider u = ( q ^ <* n *> ) as (Element of T) by A29,TREES_1:def 3;
now
let p;
assume that
A32: p in P;
assume p is_a_proper_prefix_of u;
then A33: p is_a_prefix_of q by TREES_1:9;
(ex s being (Element of T) st (( q ^ <* k *> ) = s & (for p holds (p in P implies (not p is_a_proper_prefix_of s))))) by A31;
hence contradiction by A32,A33,TREES_1:8;
end;
then ( q ^ <* n *> ) in { t: (for p holds (p in P implies (not p is_a_proper_prefix_of t))) };
hence ( q ^ <* n *> ) in X by XBOOLE_0:def 3;
end;
now
assume ( q ^ <* k *> ) in Z;
then consider p being (Element of T),s being (Element of T1) such that A34: ( q ^ <* k *> ) = ( p ^ s ) and A35: p in P by A4;
A36:now
assume ( len q ) <= ( len p );
then consider r being FinSequence such that A37: ( q ^ r ) = p by A34,FINSEQ_1:47;
( q ^ <* k *> ) = ( q ^ ( r ^ s ) ) by A34,A37,FINSEQ_1:32;
then A38: <* k *> = ( r ^ s ) by FINSEQ_1:33;
A39:now
assume A40: r = <* k *>;
then reconsider s9 = ( q ^ <* n *> ) as (Element of T) by A29,A37,TREES_1:def 3;
now
let p9;
assume that
A41: p9 in P;
assume A42: p9 is_a_proper_prefix_of s9;
then A43: p9 is_a_prefix_of s9 by XBOOLE_0:def 8;
A44: ( len p ) = ( ( len q ) + ( len <* k *> ) ) by A37,A40,FINSEQ_1:22
.= ( ( len q ) + 1 ) by FINSEQ_1:40
.= ( ( len q ) + ( len <* n *> ) ) by FINSEQ_1:40
.= ( len s9 ) by FINSEQ_1:22;
per cases ;
suppose p9 = p;

hence contradiction by A42,A43,A44,TREES_1:2;
end;
suppose A45: p9 <> p;

(q is_a_prefix_of p & p9 is_a_prefix_of q) by A37,A42,TREES_1:1,TREES_1:9;
then p9 is_a_prefix_of p by XBOOLE_1:1;
then p,p9 are_c=-comparable  by XBOOLE_0:def 9;
hence contradiction by A35,A41,A45,TREES_1:def 10;
end;
end;
hence ( q ^ <* n *> ) in { t: (for p holds (p in P implies (not p is_a_proper_prefix_of t))) };
end;
now
assume that
A46: s = <* k *>
and
A47: r = ( {} );
s = ( ( <*> ( NAT ) ) ^ s ) by FINSEQ_1:34;
then ( ( <*> ( NAT ) ) ^ <* n *> ) in T1 by A29,A46,TREES_1:def 3;
then reconsider t = <* n *> as (Element of T1) by FINSEQ_1:34;
( q ^ <* n *> ) = ( p ^ t ) by A37,A47,FINSEQ_1:34;
hence ( q ^ <* n *> ) in Z by A4,A35;
end;
hence ( q ^ <* n *> ) in X by A38,A39,FINSEQ_1:88,XBOOLE_0:def 3;
end;
now
assume ( len p ) <= ( len q );
then consider r being FinSequence such that A48: ( p ^ r ) = q by A34,FINSEQ_1:47;
( p ^ ( r ^ <* k *> ) ) = ( p ^ s ) by A34,A48,FINSEQ_1:32;
then A49: ( r ^ <* k *> ) = s by FINSEQ_1:33;
then ( s | ( dom r ) ) = r by FINSEQ_1:21;
then ( s | ( Seg ( len r ) ) ) = r by FINSEQ_1:def 3;
then reconsider r as (FinSequence of ( NAT )) by FINSEQ_1:18;
reconsider t = ( r ^ <* n *> ) as (Element of T1) by A29,A49,TREES_1:def 3;
( q ^ <* n *> ) = ( p ^ t ) by A48,FINSEQ_1:32;
then ( q ^ <* n *> ) in { ( p9 ^ v ) where p9 is (Element of T),v is (Element of T1): p9 in P } by A35;
hence ( q ^ <* n *> ) in X by A4,XBOOLE_0:def 3;
end;
hence ( q ^ <* n *> ) in X by A36;
end;
hence ( q ^ <* n *> ) in X by A28,A30,XBOOLE_0:def 3;
end;
then reconsider X as Tree;
take X;
let q;
thus (q in X implies ((q in T & (for p holds (p in P implies (not p is_a_proper_prefix_of q)))) or (ex p st (ex r st ((p in P & r in T1) & q = ( p ^ r ))))))
proof
assume A50: q in X;
A51:now
assume q in Y;
then (ex s being (Element of T) st (q = s & (for p holds (p in P implies (not p is_a_proper_prefix_of s)))));
hence thesis;
end;
now
assume q in Z;
then (ex p being (Element of T) st (ex s being (Element of T1) st (q = ( p ^ s ) & p in P))) by A4;
hence (ex p st (ex r st ((p in P & r in T1) & q = ( p ^ r ))));
end;
hence thesis by A50,A51,XBOOLE_0:def 3;
end;

assume A52: ((q in T & (for p holds (p in P implies (not p is_a_proper_prefix_of q)))) or (ex p st (ex r st ((p in P & r in T1) & q = ( p ^ r )))));
A53: ((q in T & (for p holds (p in P implies (not p is_a_proper_prefix_of q)))) implies q in { t: (for p holds (p in P implies (not p is_a_proper_prefix_of t))) });
now
given p,r such that
A54: ((p in P & r in T1) & q = ( p ^ r ));

P c= T by TREES_1:def 11;
hence q in Z by A4,A54;
end;
hence thesis by A52,A53,XBOOLE_0:def 3;
end;
uniqueness
proof
let S1 being Tree;
let S2 being Tree;
assume that
A55: (q in S1 iff ((q in T & (for p holds (p in P implies (not p is_a_proper_prefix_of q)))) or (ex p st (ex r st ((p in P & r in T1) & q = ( p ^ r ))))))
and
A56: (q in S2 iff ((q in T & (for p holds (p in P implies (not p is_a_proper_prefix_of q)))) or (ex p st (ex r st ((p in P & r in T1) & q = ( p ^ r ))))));
let x being (FinSequence of ( NAT ));
thus (x in S1 implies x in S2)
proof
assume A57: x in S1;
reconsider q = x as (FinSequence of ( NAT ));
((q in T & (for p holds (p in P implies (not p is_a_proper_prefix_of q)))) or (ex p st (ex r st ((p in P & r in T1) & q = ( p ^ r ))))) by A55,A57;
hence thesis by A56;
end;

assume A58: x in S2;
reconsider q = x as (FinSequence of ( NAT ));
((q in T & (for p holds (p in P implies (not p is_a_proper_prefix_of q)))) or (ex p st (ex r st ((p in P & r in T1) & q = ( p ^ r ))))) by A56,A58;
hence thesis by A55;
end;
end;
