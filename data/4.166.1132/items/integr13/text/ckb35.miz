environ
vocabularies RELAT_1,FUNCT_1,ARYTM_1,SIN_COS,INTEGRA1,FDIFF_1,XBOOLE_0,SQUARE_1,ARYTM_3,ORDINAL2,RCOMP_1,PREPOWER,LIMFUNC1,PARTFUN1,TAYLOR_1,SIN_COS9,SUBSET_1,TARSKI,NUMBERS,REAL_1,CARD_1,INTEGRA5,XXREAL_2,ORDINAL4,VALUED_1,XXREAL_1,XXREAL_0,SEQ_4,MEASURE5;
notations TARSKI,XBOOLE_0,SEQ_1,SIN_COS,SUBSET_1,NUMBERS,VALUED_1,NAT_1,XXREAL_0,REAL_1,RELAT_1,RELSET_1,PARTFUN1,PARTFUN2,RCOMP_1,RFUNCT_1,MEASURE5,MEASURE6,INTEGRA1,FCONT_1,SQUARE_1,INTEGRA5,PREPOWER,TAYLOR_1,FDIFF_1,SEQ_2,SIN_COS4,SIN_COS9,BINOP_2,LIMFUNC1,XREAL_0,INT_1,SEQ_4;
definitions SIN_COS,VALUED_1,SUBSET_1,SQUARE_1,SIN_COS4,SIN_COS6,TARSKI,FCONT_1,FDIFF_9,XBOOLE_0,SIN_COS9,RCOMP_1,LIMFUNC1,NAT_1,XCMPLX_0,FDIFF_1;
theorems PARTFUN1,RFUNCT_1,FUNCT_1,FDIFF_1,XCMPLX_1,INTEGRA5,SIN_COS,TAYLOR_1,VALUED_1,XREAL_0,XBOOLE_0,XXREAL_1,XBOOLE_1,FDIFF_5,FDIFF_7,FDIFF_8,SIN_COS9,PREPOWER,TARSKI,RELAT_1,FDIFF_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34;
registrations VALUED_1,NAT_1,XBOOLE_0,NUMBERS,MEMBERED,VALUED_0,INTEGRA1,INT_1,RELAT_1,ORDINAL1,FUNCT_2,RCOMP_1,FCONT_1,TOPREALB,RELSET_1,RFUNCT_1,XREAL_0,NEWTON,SQUARE_1,FUNCT_1,XXREAL_0,SEQM_3,SIN_COS9,FINSET_1,TAYLOR_1,FCONT_3,MEASURE5;
constructors SIN_COS,TAYLOR_1,SEQ_1,REAL_1,FDIFF_1,FCONT_1,MEASURE6,BINOP_2,SQUARE_1,PREPOWER,INTEGRA5,SIN_COS2,SEQ_4,SEQ_2,SIN_COS9,PARTFUN1,PARTFUN2,FUNCT_1,RCOMP_1,RELAT_1,SIN_COS6,RFUNCT_1,VALUED_1,FDIFF_9,SIN_COS4,LIMFUNC1,NAT_1,POWER,RELSET_1,INTEGRA1;
requirements NUMERALS,BOOLE,SUBSET,ARITHM,REAL;
begin
reserve x for Real;
reserve A for non  empty  closed_interval (Subset of ( REAL ));
reserve f for (PartFunc of ( REAL ),( REAL ));
reserve Z for  open (Subset of ( REAL ));
theorem
(((((A c= Z & f = ( ( exp_R ) / ( ( ( sin ) * ( exp_R ) ) ^2 ) )) & Z c= ( dom ( ( cot ) * ( exp_R ) ) )) & Z = ( dom f )) & ( f | A ) is  continuous) implies ( integral (f,A) ) = ( ( ( - ( ( cot ) * ( exp_R ) ) ) . ( upper_bound A ) ) - ( ( - ( ( cot ) * ( exp_R ) ) ) . ( lower_bound A ) ) ))
proof
assume A1: ((((A c= Z & f = ( ( exp_R ) / ( ( ( sin ) * ( exp_R ) ) ^2 ) )) & Z c= ( dom ( ( cot ) * ( exp_R ) ) )) & Z = ( dom f )) & ( f | A ) is  continuous);
then A2: (f is_integrable_on A & ( f | A ) is  bounded) by INTEGRA5:10,INTEGRA5:11;
A3: ( - ( ( cot ) * ( exp_R ) ) ) is_differentiable_on Z by A1,CKB34:1;
Z c= ( ( dom ( exp_R ) ) /\ ( ( dom ( ( ( sin ) * ( exp_R ) ) ^2 ) ) \ ( ( ( ( sin ) * ( exp_R ) ) ^2 ) " { ( 0 ) } ) ) ) by A1,RFUNCT_1:def 1;
then Z c= ( ( dom ( ( ( sin ) * ( exp_R ) ) ^2 ) ) \ ( ( ( ( sin ) * ( exp_R ) ) ^2 ) " { ( 0 ) } ) ) by XBOOLE_1:18;
then A4: Z c= ( dom ( ( ( ( sin ) * ( exp_R ) ) ^2 ) ^ ) ) by RFUNCT_1:def 2;
( dom ( ( ( ( sin ) * ( exp_R ) ) ^2 ) ^ ) ) c= ( dom ( ( ( sin ) * ( exp_R ) ) ^2 ) ) by RFUNCT_1:1;
then Z c= ( dom ( ( ( sin ) * ( exp_R ) ) ^2 ) ) by A4,XBOOLE_1:1;
then A5: Z c= ( dom ( ( sin ) * ( exp_R ) ) ) by VALUED_1:11;
A6: (for x holds (x in Z implies ( f . x ) = ( ( ( exp_R ) . x ) / ( ( ( sin ) . ( ( exp_R ) . x ) ) ^2 ) )))
proof
let x;
assume A7: x in Z;
then ( ( ( exp_R ) / ( ( ( sin ) * ( exp_R ) ) ^2 ) ) . x ) = ( ( ( exp_R ) . x ) / ( ( ( ( sin ) * ( exp_R ) ) ^2 ) . x ) ) by A1,RFUNCT_1:def 1
.= ( ( ( exp_R ) . x ) / ( ( ( ( sin ) * ( exp_R ) ) . x ) ^2 ) ) by VALUED_1:11
.= ( ( ( exp_R ) . x ) / ( ( ( sin ) . ( ( exp_R ) . x ) ) ^2 ) ) by A5,A7,FUNCT_1:12;
hence thesis by A1;
end;
A8: (for x holds (x in ( dom ( ( - ( ( cot ) * ( exp_R ) ) ) `| Z ) ) implies ( ( ( - ( ( cot ) * ( exp_R ) ) ) `| Z ) . x ) = ( f . x )))
proof
let x;
assume x in ( dom ( ( - ( ( cot ) * ( exp_R ) ) ) `| Z ) );
then A9: x in Z by A3,FDIFF_1:def 7;
then ( ( ( - ( ( cot ) * ( exp_R ) ) ) `| Z ) . x ) = ( ( ( exp_R ) . x ) / ( ( ( sin ) . ( ( exp_R ) . x ) ) ^2 ) ) by A1,CKB34:1
.= ( f . x ) by A6,A9;
hence thesis;
end;
( dom ( ( - ( ( cot ) * ( exp_R ) ) ) `| Z ) ) = ( dom f ) by A1,A3,FDIFF_1:def 7;
then ( ( - ( ( cot ) * ( exp_R ) ) ) `| Z ) = f by A8,PARTFUN1:5;
hence thesis by A1,A2,CKB34:1,INTEGRA5:13;
end;
