environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_1,XBOOLE_0,ALGSTR_0,STRUCT_0,VECTSP_2,VECTSP_1,BINOP_1,LATTICES,ZFMISC_1,SUBSET_1,CARD_3,FINSEQ_1,ARYTM_3,ORDINAL4,RELAT_1,CARD_FIL,SUPINF_2,TARSKI,ARYTM_1,MESFUNC1,CARD_1,NEWTON,NAT_1,XXREAL_0,REALSET1,FUNCT_1,FUNCT_7,GROUP_1,PARTFUN1,PRELAMB,MCART_1,SETFAM_1,RLVECT_3,GCD_1,LATTICE3,SQUARE_1,FINSET_1,INT_3,XCMPLX_0,ORDINAL1,IDEAL_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSET_1,RELAT_1,FUNCT_1,FINSEQ_1,ORDINAL1,REALSET1,INT_3,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,RELSET_1,PARTFUN1,FUNCT_2,ALGSTR_1,XXREAL_2,MCART_1,POLYNOM1,SETFAM_1,DOMAIN_1,FINSEQ_4,STRUCT_0,ALGSTR_0,RLVECT_1,VECTSP_1,GROUP_1,BINOP_1,VECTSP_2,FUNCT_7,GCD_1,BINOM,CKB4,CKB5,CKB6,CKB15,CKB16,CKB17,CKB32,CKB40,CKB41,CKB42,CKB52,CKB53,CKB54,CKB58,CKB62,CKB66,CKB73,CKB76,CKB79,CKB85,CKB86,CKB87,CKB91,CKB116,CKB122,CKB124,CKB133,CKB139,CKB141,CKB150,CKB153;
definitions CARD_1,TARSKI,XBOOLE_0,BINOP_1,REALSET1,STRUCT_0,ALGSTR_0,CKB4,CKB5,CKB6,CKB32,CKB40,CKB41,CKB42,CKB52,CKB53,CKB54,CKB73,CKB76,CKB79,CKB85,CKB86,CKB87,CKB91,CKB116,CKB122,CKB133,CKB139,CKB150,CKB153;
theorems INT_3,TARSKI,ZFMISC_1,RLVECT_1,VECTSP_1,GCD_1,FUNCT_1,FUNCT_2,POLYNOM1,RELAT_1,FINSET_1,NAT_1,ALGSTR_1,MCART_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,SETFAM_1,INT_1,FUNCT_7,FINSEQ_4,FINSEQ_5,POLYNOM2,BINOM,XBOOLE_0,XBOOLE_1,ORDINAL1,REALSET1,GROUP_1,XREAL_1,DOMAIN_1,XXREAL_0,PARTFUN1,XXREAL_2,SUBSET_1,CARD_1,CKB3,CKB4,CKB5,CKB6,CKB18,CKB19,CKB20,CKB21,CKB22,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB59,CKB60,CKB61,CKB63,CKB64,CKB65,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106,CKB107,CKB108,CKB109,CKB110,CKB111,CKB112,CKB113,CKB114,CKB115,CKB116,CKB120,CKB121,CKB122,CKB128,CKB129,CKB130,CKB131,CKB132,CKB133,CKB138,CKB139,CKB145,CKB146,CKB147,CKB148,CKB149,CKB150,CKB151,CKB152,CKB153,CKB158,CKB159,CKB160;
schemes NAT_1,RECDEF_1,FUNCT_2,FINSEQ_2,DOMAIN_1,INT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_2,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,REALSET1,STRUCT_0,VECTSP_1,ALGSTR_1,INT_3,VALUED_0,ALGSTR_0,XXREAL_2,CARD_1,ZFMISC_1,RELSET_1,CKB1,CKB2,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB23,CKB24,CKB25,CKB33,CKB43,CKB44,CKB45,CKB46,CKB55,CKB56,CKB57,CKB117,CKB118,CKB119,CKB123,CKB125,CKB126,CKB127,CKB134,CKB135,CKB136,CKB137,CKB140,CKB142,CKB143,CKB144,CKB154,CKB155,CKB156,CKB157;
constructors SETFAM_1,BINOP_1,REALSET2,ALGSTR_1,GCD_1,INT_3,POLYNOM1,BINOM,XXREAL_2,RELSET_1,FUNCT_7,FVSUM_1,FINSEQ_4,CKB4,CKB5,CKB6,CKB32,CKB40,CKB41,CKB42,CKB52,CKB53,CKB54,CKB58,CKB62,CKB66,CKB73,CKB76,CKB79,CKB85,CKB86,CKB87,CKB91,CKB116,CKB122,CKB124,CKB133,CKB139,CKB141,CKB150,CKB153;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
(for R being  left_zeroed  right_add-cancelable  right-distributive  commutative  associative non empty doubleLoopStr holds (for I being  add-closed  right-ideal non empty (Subset of R) holds (for J,K being (Subset of R) holds ( ( I % J ) % K ) = ( I % ( J *' K ) ))))
proof
let R being  left_zeroed  right_add-cancelable  right-distributive  commutative  associative non empty doubleLoopStr;
let I being  add-closed  right-ideal non empty (Subset of R);
let J being (Subset of R),K being (Subset of R);
A1:now
let u being set;
assume u in ( ( I % J ) % K );
then consider a being (Element of R) such that A2: u = a and A3: ( a * K ) c= ( I % J );
now
let v being set;
assume v in ( a * ( J *' K ) );
then consider b being (Element of R) such that A4: v = ( a * b ) and A5: b in ( J *' K );
consider s being (FinSequence of (the carrier of R)) such that A6: ( Sum s ) = b and A7: (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len s )) implies (ex a,b being (Element of R) st ((( s . i ) = ( a * b ) & a in J) & b in K)))) by A5;
set q = ( a * s );
A8: ( dom q ) = ( dom s ) by POLYNOM1:def 1;
A9: ( Seg ( len q ) ) = ( dom q ) by FINSEQ_1:def 3
.= ( dom s ) by POLYNOM1:def 1
.= ( Seg ( len s ) ) by FINSEQ_1:def 3;
then A10: ( len q ) = ( len s ) by FINSEQ_1:6;
(for j being (Element of ( NAT )) holds ((1 <= j & j <= ( len q )) implies (ex c,d being (Element of R) st ((( q . j ) = ( c * d ) & c in ( I % J )) & d in J))))
proof
let j being (Element of ( NAT ));
assume A11: (1 <= j & j <= ( len q ));
then consider c being (Element of R),d being (Element of R) such that A12: ( s . j ) = ( c * d ) and A13: c in J and A14: d in K by A7,A10;
A15: ( a * d ) in { ( a * b9 ) where b9 is (Element of R): b9 in K } by A14;
j in ( Seg ( len s ) ) by A9,A11,FINSEQ_1:1;
then A16: j in ( dom s ) by FINSEQ_1:def 3;
then A17: ( s /. j ) = ( c * d ) by A12,PARTFUN1:def 6;
( q . j ) = ( q /. j ) by A8,A16,PARTFUN1:def 6
.= ( a * ( c * d ) ) by A16,A17,POLYNOM1:def 1
.= ( ( a * d ) * c ) by GROUP_1:def 3;
hence thesis by A3,A13,A15;
end;
then A18: ( Sum q ) in { ( Sum t ) where t is (FinSequence of (the carrier of R)): (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len t )) implies (ex a,b being (Element of R) st ((( t . i ) = ( a * b ) & a in ( I % J )) & b in J)))) };
A19: ( ( I % J ) *' J ) c= I by CKB160:1;
( Sum q ) = v by A4,A6,BINOM:4;
hence v in I by A18,A19;
end;
then ( a * ( J *' K ) ) c= I by TARSKI:def 3;
hence u in ( I % ( J *' K ) ) by A2;
end;
now
let u being set;
assume u in ( I % ( J *' K ) );
then consider a being (Element of R) such that A20: u = a and A21: ( a * ( J *' K ) ) c= I;
now
let v being set;
assume v in ( a * K );
then consider b being (Element of R) such that A22: v = ( a * b ) and A23: b in K;
now
let z being set;
assume z in ( ( a * b ) * J );
then consider c being (Element of R) such that A24: z = ( ( a * b ) * c ) and A25: c in J;
A26: z = ( a * ( c * b ) ) by A24,GROUP_1:def 3;
set q = <* ( c * b ) *>;
A27: ( len q ) = 1 by FINSEQ_1:40;
A28: (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len q )) implies (ex x,y being (Element of R) st ((( q . i ) = ( x * y ) & x in J) & y in K))))
proof
let i being (Element of ( NAT ));
assume (1 <= i & i <= ( len q ));
then ( q . i ) = ( q . 1 ) by A27,XXREAL_0:1
.= ( c * b ) by FINSEQ_1:40;
hence thesis by A23,A25;
end;
( Sum q ) = ( c * b ) by BINOM:3;
then ( c * b ) in { ( Sum t ) where t is (FinSequence of (the carrier of R)): (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len t )) implies (ex a,b being (Element of R) st ((( t . i ) = ( a * b ) & a in J) & b in K)))) } by A28;
then z in { ( a * f ) where f is (Element of R): f in ( J *' K ) } by A26;
hence z in I by A21;
end;
then ( ( a * b ) * J ) c= I by TARSKI:def 3;
hence v in ( I % J ) by A22;
end;
then ( a * K ) c= ( I % J ) by TARSKI:def 3;
hence u in ( ( I % J ) % K ) by A20;
end;
hence thesis by A1,TARSKI:1;
end;
