environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_1,XBOOLE_0,ALGSTR_0,STRUCT_0,VECTSP_2,VECTSP_1,BINOP_1,LATTICES,ZFMISC_1,SUBSET_1,CARD_3,FINSEQ_1,ARYTM_3,ORDINAL4,RELAT_1,CARD_FIL,SUPINF_2,TARSKI,ARYTM_1,MESFUNC1,CARD_1,NEWTON,NAT_1,XXREAL_0,REALSET1,FUNCT_1,FUNCT_7,GROUP_1,PARTFUN1,PRELAMB,MCART_1,SETFAM_1,RLVECT_3,GCD_1,LATTICE3,SQUARE_1,FINSET_1,INT_3,XCMPLX_0,ORDINAL1,IDEAL_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSET_1,RELAT_1,FUNCT_1,FINSEQ_1,ORDINAL1,REALSET1,INT_3,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,RELSET_1,PARTFUN1,FUNCT_2,ALGSTR_1,XXREAL_2,MCART_1,POLYNOM1,SETFAM_1,DOMAIN_1,FINSEQ_4,STRUCT_0,ALGSTR_0,RLVECT_1,VECTSP_1,GROUP_1,BINOP_1,VECTSP_2,FUNCT_7,GCD_1,BINOM,CKB4,CKB5,CKB6,CKB15,CKB16,CKB17,CKB32,CKB40,CKB41,CKB42,CKB52,CKB53,CKB54,CKB58,CKB62,CKB66,CKB73,CKB76,CKB79,CKB85,CKB86,CKB87,CKB91,CKB116,CKB122,CKB124,CKB133,CKB139,CKB141;
definitions CARD_1,TARSKI,XBOOLE_0,BINOP_1,REALSET1,STRUCT_0,ALGSTR_0,CKB4,CKB5,CKB6,CKB32,CKB40,CKB41,CKB42,CKB52,CKB53,CKB54,CKB73,CKB76,CKB79,CKB85,CKB86,CKB87,CKB91,CKB116,CKB122,CKB133,CKB139;
theorems INT_3,TARSKI,ZFMISC_1,RLVECT_1,VECTSP_1,GCD_1,FUNCT_1,FUNCT_2,POLYNOM1,RELAT_1,FINSET_1,NAT_1,ALGSTR_1,MCART_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,SETFAM_1,INT_1,FUNCT_7,FINSEQ_4,FINSEQ_5,POLYNOM2,BINOM,XBOOLE_0,XBOOLE_1,ORDINAL1,REALSET1,GROUP_1,XREAL_1,DOMAIN_1,XXREAL_0,PARTFUN1,XXREAL_2,SUBSET_1,CARD_1,CKB3,CKB4,CKB5,CKB6,CKB18,CKB19,CKB20,CKB21,CKB22,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB59,CKB60,CKB61,CKB63,CKB64,CKB65,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106,CKB107,CKB108,CKB109,CKB110,CKB111,CKB112,CKB113,CKB114,CKB115,CKB116,CKB120,CKB121,CKB122,CKB128,CKB129,CKB130,CKB131,CKB132,CKB133,CKB138,CKB139;
schemes NAT_1,RECDEF_1,FUNCT_2,FINSEQ_2,DOMAIN_1,INT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_2,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,REALSET1,STRUCT_0,VECTSP_1,ALGSTR_1,INT_3,VALUED_0,ALGSTR_0,XXREAL_2,CARD_1,ZFMISC_1,RELSET_1,CKB1,CKB2,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB23,CKB24,CKB25,CKB33,CKB43,CKB44,CKB45,CKB46,CKB55,CKB56,CKB57,CKB117,CKB118,CKB119,CKB123,CKB125,CKB126,CKB127,CKB134,CKB135,CKB136,CKB137,CKB140,CKB142,CKB143,CKB144;
constructors SETFAM_1,BINOP_1,REALSET2,ALGSTR_1,GCD_1,INT_3,POLYNOM1,BINOM,XXREAL_2,RELSET_1,FUNCT_7,FVSUM_1,FINSEQ_4,CKB4,CKB5,CKB6,CKB32,CKB40,CKB41,CKB42,CKB52,CKB53,CKB54,CKB58,CKB62,CKB66,CKB73,CKB76,CKB79,CKB85,CKB86,CKB87,CKB91,CKB116,CKB122,CKB124,CKB133,CKB139,CKB141;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
(for R being  left_zeroed  right_zeroed  left_add-cancelable  left-distributive non  empty doubleLoopStr holds (for I being non  empty (Subset of R) holds ( { ( 0. R ) } *' I ) = { ( 0. R ) }))
proof
let R being  left_zeroed  right_zeroed  left_add-cancelable  left-distributive non  empty doubleLoopStr;
let I being non  empty (Subset of R);
A1:now
let u being set;
assume u in ( { ( 0. R ) } *' I );
then consider s being (FinSequence of (the carrier of R)) such that A2: ( Sum s ) = u and A3: (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len s )) implies (ex a,b being (Element of R) st ((( s . i ) = ( a * b ) & a in { ( 0. R ) }) & b in I))));
now
per cases ;
case ( len s ) = ( 0 );
then s = ( <*> (the carrier of R) );
hence ( Sum s ) = ( 0. R ) by RLVECT_1:43;
end;
case ( len s ) <> ( 0 );
then 1 <= ( len s ) by NAT_1:14;
then 1 in ( Seg ( len s ) ) by FINSEQ_1:1;
then A4: 1 in ( dom s ) by FINSEQ_1:def 3;
A5: (for i being (Element of ( NAT )) holds (i in ( dom s ) implies ( s /. i ) = ( 0. R )))
proof
let i being (Element of ( NAT ));
assume A6: i in ( dom s );
then i in ( Seg ( len s ) ) by FINSEQ_1:def 3;
then (1 <= i & i <= ( len s )) by FINSEQ_1:1;
then consider a,b being (Element of R) such that A7: ( s . i ) = ( a * b ) and A8: a in { ( 0. R ) } and b in I by A3;
A9: a = ( 0. R ) by A8,TARSKI:def 1;
( s /. i ) = ( a * b ) by A6,A7,PARTFUN1:def 6;
hence thesis by A9,BINOM:1;
end;
then (for i being (Element of ( NAT )) holds ((i in ( dom s ) & i <> 1) implies ( s /. i ) = ( 0. R )));
hence ( Sum s ) = ( s /. 1 ) by A4,POLYNOM2:3
.= ( 0. R ) by A4,A5;
end;
end;
hence u in { ( 0. R ) } by A2,TARSKI:def 1;
end;
now
reconsider o = ( 0. R ) as (Element of { ( 0. R ) }) by TARSKI:def 1;
set a = the (Element of I);
let u being set;
assume A10: u in { ( 0. R ) };
set q = <* ( ( 0. R ) * a ) *>;
A11: (( len q ) = 1 & ( q . 1 ) = ( ( 0. R ) * a )) by FINSEQ_1:40;
A12: (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len q )) implies (ex b,r being (Element of R) st ((( q . i ) = ( b * r ) & b in { ( 0. R ) }) & r in I))))
proof
let i being (Element of ( NAT ));
assume (1 <= i & i <= ( len q ));
then ( q . i ) = ( o * a ) by A11,XXREAL_0:1;
hence thesis;
end;
( Sum q ) = ( ( 0. R ) * a ) by BINOM:3
.= ( 0. R ) by BINOM:1
.= u by A10,TARSKI:def 1;
hence u in ( { ( 0. R ) } *' I ) by A12;
end;
hence thesis by A1,TARSKI:1;
end;
