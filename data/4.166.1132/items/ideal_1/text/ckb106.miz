environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_1,XBOOLE_0,ALGSTR_0,STRUCT_0,VECTSP_2,VECTSP_1,BINOP_1,LATTICES,ZFMISC_1,SUBSET_1,CARD_3,FINSEQ_1,ARYTM_3,ORDINAL4,RELAT_1,CARD_FIL,SUPINF_2,TARSKI,ARYTM_1,MESFUNC1,CARD_1,NEWTON,NAT_1,XXREAL_0,REALSET1,FUNCT_1,FUNCT_7,GROUP_1,PARTFUN1,PRELAMB,MCART_1,SETFAM_1,RLVECT_3,GCD_1,LATTICE3,SQUARE_1,FINSET_1,INT_3,XCMPLX_0,ORDINAL1,IDEAL_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSET_1,RELAT_1,FUNCT_1,FINSEQ_1,ORDINAL1,REALSET1,INT_3,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,RELSET_1,PARTFUN1,FUNCT_2,ALGSTR_1,XXREAL_2,MCART_1,POLYNOM1,SETFAM_1,DOMAIN_1,FINSEQ_4,STRUCT_0,ALGSTR_0,RLVECT_1,VECTSP_1,GROUP_1,BINOP_1,VECTSP_2,FUNCT_7,GCD_1,BINOM,CKB4,CKB5,CKB6,CKB15,CKB16,CKB17,CKB32,CKB40,CKB41,CKB42,CKB52,CKB53,CKB54,CKB58,CKB62,CKB66,CKB73,CKB76,CKB79,CKB85,CKB86,CKB87,CKB91;
definitions CARD_1,TARSKI,XBOOLE_0,BINOP_1,REALSET1,STRUCT_0,ALGSTR_0,CKB4,CKB5,CKB6,CKB32,CKB40,CKB41,CKB42,CKB52,CKB53,CKB54,CKB73,CKB76,CKB79,CKB85,CKB86,CKB87,CKB91;
theorems INT_3,TARSKI,ZFMISC_1,RLVECT_1,VECTSP_1,GCD_1,FUNCT_1,FUNCT_2,POLYNOM1,RELAT_1,FINSET_1,NAT_1,ALGSTR_1,MCART_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,SETFAM_1,INT_1,FUNCT_7,FINSEQ_4,FINSEQ_5,POLYNOM2,BINOM,XBOOLE_0,XBOOLE_1,ORDINAL1,REALSET1,GROUP_1,XREAL_1,DOMAIN_1,XXREAL_0,PARTFUN1,XXREAL_2,SUBSET_1,CARD_1,CKB3,CKB4,CKB5,CKB6,CKB18,CKB19,CKB20,CKB21,CKB22,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB59,CKB60,CKB61,CKB63,CKB64,CKB65,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB103,CKB104,CKB105;
schemes NAT_1,RECDEF_1,FUNCT_2,FINSEQ_2,DOMAIN_1,INT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_2,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,REALSET1,STRUCT_0,VECTSP_1,ALGSTR_1,INT_3,VALUED_0,ALGSTR_0,XXREAL_2,CARD_1,ZFMISC_1,RELSET_1,CKB1,CKB2,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB23,CKB24,CKB25,CKB33,CKB43,CKB44,CKB45,CKB46,CKB55,CKB56,CKB57;
constructors SETFAM_1,BINOP_1,REALSET2,ALGSTR_1,GCD_1,INT_3,POLYNOM1,BINOM,XXREAL_2,RELSET_1,FUNCT_7,FVSUM_1,FINSEQ_4,CKB4,CKB5,CKB6,CKB32,CKB40,CKB41,CKB42,CKB52,CKB53,CKB54,CKB58,CKB62,CKB66,CKB73,CKB76,CKB79,CKB85,CKB86,CKB87,CKB91;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
Th61: (for L being  add-associative  left_zeroed  right_zeroed  add-cancelable  associative  distributive  well-unital non  empty doubleLoopStr holds (for F being non  empty (Subset of L) holds (for x being set holds (x in ( F -LeftIdeal ) iff (ex f being (LeftLinearCombination of F) st x = ( Sum f ))))))
proof
let L being  add-associative  right_zeroed  add-cancelable  left_zeroed  associative  distributive  well-unital non  empty doubleLoopStr;
let F being non  empty (Subset of L);
set I = { x where x is (Element of L): (ex lc being (LeftLinearCombination of F) st ( Sum lc ) = x) };
A1: I c= (the carrier of L)
proof
let x being set;
assume x in I;
then (ex x9 being (Element of L) st (x9 = x & (ex lc being (LeftLinearCombination of F) st ( Sum lc ) = x9)));
hence thesis;
end;
let x being set;
A2: F c= I
proof
let x being set;
assume A3: x in F;
then reconsider x as (Element of L);
set lc = <* x *>;
now
let i being set;
assume A4: i in ( dom lc );
( dom lc ) = { 1 } by FINSEQ_1:2,FINSEQ_1:38;
then i = 1 by A4,TARSKI:def 1;
then ( lc . i ) = x by FINSEQ_1:40
.= ( ( 1. L ) * x ) by VECTSP_1:def 8;
hence (ex u being (Element of L) st (ex a being (Element of F) st ( lc /. i ) = ( u * a ))) by A3,A4,PARTFUN1:def 6;
end;
then reconsider lc as (LeftLinearCombination of F) by CKB53:def 1;
( Sum lc ) = x by BINOM:3;
hence thesis;
end;
A5: I c= ( F -LeftIdeal )
proof
defpred P[ Nat ]
 means
(for lc being (LeftLinearCombination of F) holds (( len lc ) <= $1 implies ( Sum lc ) in ( F -LeftIdeal )));
let x being set;
assume x in I;
then consider x9 being (Element of L) such that A6: x9 = x and A7: (ex lc being (LeftLinearCombination of F) st ( Sum lc ) = x9);
consider lc being (LeftLinearCombination of F) such that A8: ( Sum lc ) = x9 by A7;
A9: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being (Element of ( NAT ));
assume A10: P[ k ];
thus P[ ( k + 1 ) ]
proof
let lc being (LeftLinearCombination of F);
assume A11: ( len lc ) <= ( k + 1 );
per cases  by A11,NAT_1:8;
suppose ( len lc ) <= k;

hence thesis by A10;
end;
suppose A12: ( len lc ) = ( k + 1 );

then lc is non  empty;
then consider q being (LeftLinearCombination of F),r being (Element of L) such that A13: lc = ( q ^ <* r *> ) and A14: <* r *> is (LeftLinearCombination of F) by CKB71:1;
( k + 1 ) = ( ( len q ) + ( len <* r *> ) ) by A12,A13,FINSEQ_1:22
.= ( ( len q ) + 1 ) by FINSEQ_1:39;
then A15: ( Sum q ) in ( F -LeftIdeal ) by A10;
( dom <* r *> ) = { 1 } by FINSEQ_1:2,FINSEQ_1:38;
then A16: 1 in ( dom <* r *> ) by TARSKI:def 1;
then consider u being (Element of L),a being (Element of F) such that A17: ( <* r *> /. 1 ) = ( u * a ) by A14,CKB53:def 1;
F c= ( F -LeftIdeal ) by CKB86:def 1;
then A18: a in ( F -LeftIdeal ) by TARSKI:def 3;
A19: ( <* r *> /. 1 ) = ( <* r *> . 1 ) by A16,PARTFUN1:def 6;
( Sum <* r *> ) = r by BINOM:3
.= ( u * a ) by A17,A19,FINSEQ_1:40;
then A20: ( Sum <* r *> ) in ( F -LeftIdeal ) by A18,CKB5:def 1;
( Sum lc ) = ( ( Sum q ) + ( Sum <* r *> ) ) by A13,RLVECT_1:41;
hence thesis by A15,A20,CKB4:def 1;
end;
end;

end;
A21: P[ ( 0 ) ]
proof
set y = the (Element of F);
let lc being (LeftLinearCombination of F);
assume ( len lc ) <= ( 0 );
then lc = ( <*> (the carrier of L) );
then A22: ( Sum lc ) = ( 0. L ) by RLVECT_1:43;
F c= ( F -LeftIdeal ) by CKB86:def 1;
then A23: y in ( F -LeftIdeal ) by TARSKI:def 3;
( ( 0. L ) * y ) = ( 0. L ) by BINOM:1;
hence thesis by A22,A23,CKB5:def 1;
end;
(for k being (Element of ( NAT )) holds P[ k ]) from NAT_1:sch 1(A21,A9);
then P[ ( len lc ) ];
hence thesis by A6,A8;
end;
reconsider I as non  empty (Subset of L) by A2,A1;
reconsider I9 = I as non  empty (Subset of L);
A24: I9 is  add-closed
proof
let x being (Element of L);
let y being (Element of L);
assume that
A25: x in I9
and
A26: y in I9;
consider x9 being (Element of L) such that A27: x9 = x and A28: (ex lc being (LeftLinearCombination of F) st ( Sum lc ) = x9) by A25;
consider lcx being (LeftLinearCombination of F) such that A29: ( Sum lcx ) = x9 by A28;
consider y9 being (Element of L) such that A30: y9 = y and A31: (ex lc being (LeftLinearCombination of F) st ( Sum lc ) = y9) by A26;
consider lcy being (LeftLinearCombination of F) such that A32: ( Sum lcy ) = y9 by A31;
( Sum ( lcx ^ lcy ) ) = ( x9 + y9 ) by A29,A32,RLVECT_1:41;
hence thesis by A27,A30;
end;
I9 is  left-ideal
proof
let p being (Element of L);
let x being (Element of L);
assume x in I9;
then consider x9 being (Element of L) such that A33: x9 = x and A34: (ex lc being (LeftLinearCombination of F) st ( Sum lc ) = x9);
consider lcx being (LeftLinearCombination of F) such that A35: ( Sum lcx ) = x9 by A34;
reconsider plcx = ( p * lcx ) as (LeftLinearCombination of F) by CKB63:1;
( p * x ) = ( Sum plcx ) by A33,A35,BINOM:4;
hence thesis;
end;
then ( F -LeftIdeal ) c= I by A2,A24,CKB86:def 1;
then A36: I = ( F -LeftIdeal ) by A5,XBOOLE_0:def 10;
hereby
assume x in ( F -LeftIdeal );
then (ex x9 being (Element of L) st (x9 = x & (ex lc being (LeftLinearCombination of F) st ( Sum lc ) = x9))) by A36;
hence (ex f being (LeftLinearCombination of F) st x = ( Sum f ));
end;
assume (ex f being (LeftLinearCombination of F) st x = ( Sum f ));
hence thesis by A36;
end;
