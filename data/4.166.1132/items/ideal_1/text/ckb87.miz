environ
vocabularies NUMBERS,RLVECT_1,ALGSTR_1,XBOOLE_0,ALGSTR_0,STRUCT_0,VECTSP_2,VECTSP_1,BINOP_1,LATTICES,ZFMISC_1,SUBSET_1,CARD_3,FINSEQ_1,ARYTM_3,ORDINAL4,RELAT_1,CARD_FIL,SUPINF_2,TARSKI,ARYTM_1,MESFUNC1,CARD_1,NEWTON,NAT_1,XXREAL_0,REALSET1,FUNCT_1,FUNCT_7,GROUP_1,PARTFUN1,PRELAMB,MCART_1,SETFAM_1,RLVECT_3,GCD_1,LATTICE3,SQUARE_1,FINSET_1,INT_3,XCMPLX_0,ORDINAL1,IDEAL_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,FINSET_1,RELAT_1,FUNCT_1,FINSEQ_1,ORDINAL1,REALSET1,INT_3,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,RELSET_1,PARTFUN1,FUNCT_2,ALGSTR_1,XXREAL_2,MCART_1,POLYNOM1,SETFAM_1,DOMAIN_1,FINSEQ_4,STRUCT_0,ALGSTR_0,RLVECT_1,VECTSP_1,GROUP_1,BINOP_1,VECTSP_2,FUNCT_7,GCD_1,BINOM,CKB4,CKB5,CKB6,CKB15,CKB16,CKB17,CKB32,CKB40,CKB41,CKB42,CKB52,CKB53,CKB54,CKB58,CKB62,CKB66,CKB73,CKB76,CKB79,CKB85,CKB86;
definitions CARD_1,TARSKI,XBOOLE_0,BINOP_1,REALSET1,STRUCT_0,ALGSTR_0,CKB4,CKB5,CKB6,CKB32,CKB40,CKB41,CKB42,CKB52,CKB53,CKB54,CKB73,CKB76,CKB79,CKB85,CKB86;
theorems INT_3,TARSKI,ZFMISC_1,RLVECT_1,VECTSP_1,GCD_1,FUNCT_1,FUNCT_2,POLYNOM1,RELAT_1,FINSET_1,NAT_1,ALGSTR_1,MCART_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,SETFAM_1,INT_1,FUNCT_7,FINSEQ_4,FINSEQ_5,POLYNOM2,BINOM,XBOOLE_0,XBOOLE_1,ORDINAL1,REALSET1,GROUP_1,XREAL_1,DOMAIN_1,XXREAL_0,PARTFUN1,XXREAL_2,SUBSET_1,CARD_1,CKB3,CKB4,CKB5,CKB6,CKB18,CKB19,CKB20,CKB21,CKB22,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB59,CKB60,CKB61,CKB63,CKB64,CKB65,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86;
schemes NAT_1,RECDEF_1,FUNCT_2,FINSEQ_2,DOMAIN_1,INT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_2,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FINSEQ_1,REALSET1,STRUCT_0,VECTSP_1,ALGSTR_1,INT_3,VALUED_0,ALGSTR_0,XXREAL_2,CARD_1,ZFMISC_1,RELSET_1,CKB1,CKB2,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB23,CKB24,CKB25,CKB33,CKB43,CKB44,CKB45,CKB46,CKB55,CKB56,CKB57;
constructors SETFAM_1,BINOP_1,REALSET2,ALGSTR_1,GCD_1,INT_3,POLYNOM1,BINOM,XXREAL_2,RELSET_1,FUNCT_7,FVSUM_1,FINSEQ_4,CKB4,CKB5,CKB6,CKB32,CKB40,CKB41,CKB42,CKB52,CKB53,CKB54,CKB58,CKB62,CKB66,CKB73,CKB76,CKB79,CKB85,CKB86;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
definition
let L being non empty doubleLoopStr;
let F being (Subset of L);
assume A1: F is non empty;
func F -RightIdeal -> (RightIdeal of L)
means
:Def17: (F c= it & (for I being (RightIdeal of L) holds (F c= I implies it c= I)));
existence
proof
set Id = { I where I is (Subset of L): (F c= I & I is (RightIdeal of L)) };
set I = ( meet Id );
(the carrier of L) is (RightIdeal of L) by CKB31:1;
then A29: (the carrier of L) in Id;
A30:now
let X being set;
assume X in Id;
then (ex X9 being (Subset of L) st ((X9 = X & F c= X9) & X9 is (RightIdeal of L)));
hence F c= X;
end;
then F c= I by A29,SETFAM_1:5;
then reconsider I as non empty (Subset of L) by A1,A29,SETFAM_1:3;
A31: I is  add-closed
proof
let x being (Element of L),y being (Element of L);
assume A32: (x in I & y in I);
now
let X being set;
assume A33: X in Id;
then consider X9 being (Subset of L) such that A34: X9 = X and F c= X9 and A35: X9 is (RightIdeal of L);
(x in X & y in X) by A32,A33,SETFAM_1:def 1;
then ( x + y ) in X9 by A34,A35,CKB4:def 1;
hence { ( x + y ) } c= X by A34,ZFMISC_1:31;
end;
then { ( x + y ) } c= I by A29,SETFAM_1:5;
hence thesis by ZFMISC_1:31;
end;
I is  right-ideal
proof
let p being (Element of L),x being (Element of L);
assume A36: x in I;
now
let X being set;
assume A37: X in Id;
then consider X9 being (Subset of L) such that A38: X9 = X and F c= X9 and A39: X9 is (RightIdeal of L);
x in X by A36,A37,SETFAM_1:def 1;
then ( x * p ) in X9 by A38,A39,CKB6:def 1;
hence { ( x * p ) } c= X by A38,ZFMISC_1:31;
end;
then { ( x * p ) } c= I by A29,SETFAM_1:5;
hence thesis by ZFMISC_1:31;
end;
then reconsider I as (RightIdeal of L) by A31;
take I;
now
let X being (RightIdeal of L);
assume F c= X;
then X in Id;
hence I c= X by SETFAM_1:3;
end;
hence thesis by A29,A30,SETFAM_1:5;
end;
uniqueness
proof
let X being (RightIdeal of L),Y being (RightIdeal of L);
assume (((F c= X & (for I being (RightIdeal of L) holds (F c= I implies X c= I))) & F c= Y) & (for I being (RightIdeal of L) holds (F c= I implies Y c= I)));
then (X c= Y & Y c= X);
hence thesis by XBOOLE_0:def 10;
end;
end;
