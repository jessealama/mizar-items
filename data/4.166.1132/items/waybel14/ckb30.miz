environ
vocabularies FINSET_1,SETFAM_1,TARSKI,SUBSET_1,XBOOLE_0,NAT_1,CARD_1,ARYTM_3,STRUCT_0,RELAT_2,LATTICE3,ORDERS_2,WAYBEL_0,LATTICES,XXREAL_0,EQREL_1,REWRITE1,ORDINAL2,WAYBEL_3,WAYBEL_6,RELAT_1,INT_2,ZFMISC_1,WAYBEL_8,RCOMP_1,PRE_TOPC,YELLOW_8,YELLOW_1,WAYBEL_9,RLVECT_3,WAYBEL11,PROB_1,YELLOW_6,FUNCT_1,WAYBEL_2,TMAP_1,CONNSP_2,TOPS_1,CARD_FIL,YELLOW_0,WAYBEL_5,ARYTM_0,WAYBEL14;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NAT_1,SETFAM_1,FINSET_1,DOMAIN_1,FUNCT_1,RELSET_1,BINOP_1,FUNCT_2,ORDERS_2,LATTICE3,CARD_1,STRUCT_0,PRE_TOPC,TOPS_1,TOPS_2,CONNSP_2,BORSUK_1,TMAP_1,CANTOR_1,COMPTS_1,YELLOW_0,YELLOW_1,YELLOW_3,YELLOW_4,YELLOW_6,YELLOW_7,YELLOW_8,WAYBEL_0,WAYBEL_1,WAYBEL_2,WAYBEL_3,WAYBEL_5,WAYBEL_6,WAYBEL_8,WAYBEL_9,WAYBEL11;
definitions TARSKI,WAYBEL_0,WAYBEL_6,TMAP_1,YELLOW_8,COMPTS_1,WAYBEL_3,WAYBEL_1,WAYBEL_8,TOPS_2,XBOOLE_0,SUBSET_1,BINOP_1,STRUCT_0,SETFAM_1;
theorems TARSKI,ZFMISC_1,SUBSET_1,RELAT_1,DOMAIN_1,FUNCT_1,FUNCT_2,SETFAM_1,LATTICE3,CARD_2,ORDERS_2,PRE_TOPC,TOPS_1,TOPS_2,BORSUK_1,TMAP_1,CONNSP_2,COMPTS_1,YELLOW_0,YELLOW_1,YELLOW_2,YELLOW_3,YELLOW_4,YELLOW_6,YELLOW_7,YELLOW_8,WAYBEL_0,WAYBEL_2,WAYBEL_3,WAYBEL_4,WAYBEL_6,WAYBEL_8,WAYBEL11,WAYBEL12,XBOOLE_0,XBOOLE_1,XCMPLX_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB21,CKB22,CKB24,CKB25,CKB27,CKB28,CKB29;
schemes NAT_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FINSET_1,XCMPLX_0,STRUCT_0,PRE_TOPC,BORSUK_1,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_4,WAYBEL_3,YELLOW_6,WAYBEL_6,WAYBEL_8,YELLOW_8,WAYBEL11,ORDINAL1,CARD_1,TOPS_1,CKB18,CKB23,CKB26;
constructors SETFAM_1,FINSUB_1,NAT_1,TOPS_1,TOPS_2,BORSUK_1,TMAP_1,T_0TOPSP,CANTOR_1,WAYBEL_1,YELLOW_4,WAYBEL_3,WAYBEL_5,WAYBEL_6,WAYBEL_8,YELLOW_8,WAYBEL11,COMPTS_1,BINOP_1,WAYBEL_2;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve L for  complete  Scott TopLattice;
reserve x for (Element of L);
reserve VV for (Subset of ( InclPoset ( sigma L ) ));
theorem
Th25: (for X being  filtered (Subset of L) holds (VV = { ( ( downarrow x ) ` ): x in X } implies VV is  directed))
proof
let V being  filtered (Subset of L);
set F = { ( downarrow u ) where u is (Element of L): u in V };
F c= ( bool (the carrier of L) )
proof
let x being set;
assume x in F;
then (ex u being (Element of L) st (x = ( downarrow u ) & u in V));
hence thesis;
end;
then reconsider F as (Subset-Family of L);
reconsider F as (Subset-Family of L);
assume A1: VV = { ( ( downarrow x ) ` ): x in V };
VV c= ( bool (the carrier of L) )
proof
let x being set;
assume x in VV;
then (ex u being (Element of L) st (x = ( ( downarrow u ) ` ) & u in V)) by A1;
hence thesis;
end;
then reconsider VV as (Subset-Family of L);
reconsider VV as (Subset-Family of L);
now
let x being set;
hereby
assume x in VV;
then consider u being (Element of L) such that A2: x = ( ( downarrow u ) ` ) and A3: u in V by A1;
( downarrow u ) in F by A3;
hence x in ( COMPLEMENT F ) by A2,YELLOW_8:5;
end;
assume A4: x in ( COMPLEMENT F );
then reconsider X = x as (Subset of L);
( X ` ) in F by A4,SETFAM_1:def 7;
then consider u being (Element of L) such that A5: ( X ` ) = ( downarrow u ) and A6: u in V;
X = ( ( downarrow u ) ` ) by A5;
hence x in VV by A1,A6;
end;
then VV = ( COMPLEMENT F ) by TARSKI:1;
hence thesis by CKB29:1;
end;
