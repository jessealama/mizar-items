environ
vocabularies FINSET_1,LATTICES,LATTICE3,XBOOLE_0,STRUCT_0,ZFMISC_1,SUBSET_1,XXREAL_0,NUMBERS,FINSEQ_1,RELAT_1,ARYTM_3,CARD_1,FUNCT_1,TARSKI,ORDERS_2,FILTER_1,EQREL_1,PBOOLE,REWRITE1,WELLORD1,WAYBEL_6,RELAT_2,ZF_LANG,BINOP_1,LATTICE6;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XXREAL_0,RELAT_1,FUNCT_1,NAT_1,BINOP_1,FINSET_1,WELLORD1,WAYBEL_6,STRUCT_0,LATTICES,LATTICE3,ORDERS_2,FINSEQ_1,WELLFND1,YELLOW_0,LATTICE2,CKB8,CKB9,CKB12,CKB13,CKB20,CKB21;
definitions WELLFND1,WELLORD1,CKB8,CKB9,CKB12,CKB13,CKB20;
theorems TARSKI,FUNCT_1,LATTICES,LATTICE3,ORDERS_2,VECTSP_8,FINSEQ_1,WAYBEL_6,NAT_1,INT_1,RELAT_1,YELLOW_0,WELLORD1,WELLFND1,REALSET1,XBOOLE_0,XXREAL_0,STRUCT_0,CARD_1,ZFMISC_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB11,CKB12,CKB13,CKB16,CKB17,CKB20;
schemes NAT_1,WELLFND1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FINSET_1,XREAL_0,INT_1,FINSEQ_1,FINSEQ_6,STRUCT_0,LATTICES,ORDERS_2,LATTICE2,LATTICE3,WAYBEL_0,KNASTER,YELLOW_1,ORDINAL1,ZFMISC_1,CARD_1,CKB1,CKB7,CKB10,CKB14,CKB15,CKB18,CKB19;
constructors WELLORD1,BINOP_1,REAL_1,REALSET2,LATTICE2,WAYBEL_0,WAYBEL_6,WELLFND1,RELSET_1,CKB8,CKB9,CKB12,CKB13,CKB20;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th2: (for L being Lattice holds (for a being (Element of L) holds (for b,c being (Element of L) holds (b <> c implies (((b is-upper-neighbour-of a & c is-upper-neighbour-of a) implies a = ( c "/\" b )) & ((b is-lower-neighbour-of a & c is-lower-neighbour-of a) implies a = ( c "\/" b )))))))
proof
let L being Lattice;
let a being (Element of L);
let b being (Element of L);
let c being (Element of L);
assume A1: b <> c;
A2:now
assume that
A3: b is-lower-neighbour-of a
and
A4: c is-lower-neighbour-of a;
A5: b [= a by A3,CKB20:def 1;
A6: c [= a by A4,CKB20:def 1;
A7: (not ( b "\/" c ) = c)
proof
assume ( b "\/" c ) = c;
then b [= c by LATTICES:def 3;
then (c = a or c = b) by A3,A6,CKB20:def 1;
hence contradiction by A1,A4,CKB20:def 1;
end;
a = ( a "\/" a ) by LATTICES:1
.= ( ( b "\/" a ) "\/" a ) by A5,LATTICES:def 3
.= ( ( b "\/" a ) "\/" ( c "\/" a ) ) by A6,LATTICES:def 3
.= ( b "\/" ( a "\/" ( a "\/" c ) ) ) by LATTICES:def 5
.= ( b "\/" ( ( a "\/" a ) "\/" c ) ) by LATTICES:def 5
.= ( b "\/" ( a "\/" c ) ) by LATTICES:1
.= ( ( b "\/" c ) "\/" a ) by LATTICES:def 5;
then A8: ( b "\/" c ) [= a by LATTICES:def 3;
c [= ( b "\/" c ) by LATTICES:5;
hence ( b "\/" c ) = a by A4,A8,A7,CKB20:def 1;
end;
now
assume that
A9: b is-upper-neighbour-of a
and
A10: c is-upper-neighbour-of a;
A11: a [= b by A9,CKB20:def 1;
A12: a [= c by A10,CKB20:def 1;
A13: (not ( b "/\" c ) = c)
proof
assume ( b "/\" c ) = c;
then c [= b by LATTICES:4;
then (c = a or c = b) by A9,A12,CKB20:def 1;
hence contradiction by A1,A10,CKB20:def 1;
end;
a = ( a "/\" a ) by LATTICES:2
.= ( ( b "/\" a ) "/\" a ) by A11,LATTICES:4
.= ( ( b "/\" a ) "/\" ( c "/\" a ) ) by A12,LATTICES:4
.= ( b "/\" ( a "/\" ( c "/\" a ) ) ) by LATTICES:def 7
.= ( b "/\" ( ( a "/\" a ) "/\" c ) ) by LATTICES:def 7
.= ( b "/\" ( a "/\" c ) ) by LATTICES:2
.= ( ( b "/\" c ) "/\" a ) by LATTICES:def 7;
then A14: a [= ( b "/\" c ) by LATTICES:4;
( b "/\" c ) [= c by LATTICES:6;
hence ( b "/\" c ) = a by A10,A14,A13,CKB20:def 1;
end;
hence thesis by A2;
end;
