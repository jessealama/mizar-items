environ
vocabularies LATTICES,ROBBINS1,XBOOLE_0,SUBSET_1,ARYTM_3,EQREL_1,ZFMISC_1,PBOOLE,STRUCT_0,BINOP_1,FUNCT_5,RELAT_1,FUNCT_1,SHEFFER1,CARD_1;
notations TARSKI,XBOOLE_0,FUNCT_5,CARD_1,STRUCT_0,LATTICES,BINOP_1,ROBBINS1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9;
definitions LATTICES,ROBBINS1,STRUCT_0,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9;
theorems STRUCT_0,ROBBINS1,LATTICES,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15;
registrations LATTICES,LATTICE6,ROBBINS1,XBOOLE_0,ZFMISC_1,CARD_1,ORDINAL1,STRUCT_0,CKB10;
constructors BINOP_1,ROBBINS1,FUNCT_5,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9;
requirements SUBSET,NUMERALS;
begin
theorem
Th8: (for L being  join-commutative  meet-absorbing  meet-commutative  join-absorbing  join-idempotent  distributive' non  empty LattStr holds (for x,y,z being (Element of L) holds ( ( ( x "/\" y ) "/\" z ) "\/" x ) = x))
proof
let L being  join-commutative  meet-absorbing  meet-commutative  join-absorbing  join-idempotent  distributive' non  empty LattStr;
let x being (Element of L);
let y being (Element of L);
let z being (Element of L);
( ( ( x "/\" y ) "/\" z ) "\/" x ) = ( ( x "\/" ( x "/\" y ) ) "/\" ( x "\/" z ) ) by CKB6:def 1
.= ( ( ( x "\/" x ) "/\" ( x "\/" y ) ) "/\" ( x "\/" z ) ) by CKB6:def 1
.= ( ( x "/\" ( x "\/" y ) ) "/\" ( x "\/" z ) ) by LATTICES:1
.= ( x "/\" ( x "\/" z ) ) by LATTICES:def 9
.= x by LATTICES:def 9;
hence thesis;
end;
