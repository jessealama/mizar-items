environ
vocabularies NUMBERS,SUBSET_1,XBOOLE_0,XXREAL_2,ORDINAL2,XREAL_0,ORDINAL1,XXREAL_0,SEQ_4,MESFUNC5,RELAT_1,FUNCT_1,RINFSUP1,VALUED_0,SEQ_1,ARYTM_3,TARSKI,CARD_1,ARYTM_1,SEQ_2,COMPLEX1,NAT_1,MEASURE6,REAL_1,MESFUNC1,SUPINF_2;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XREAL_0,COMPLEX1,REAL_1,XXREAL_0,RELSET_1,FUNCT_2,NAT_1,XXREAL_2,SUPINF_1,VALUED_0,SUPINF_2,SEQ_1,SEQ_2,SEQ_4,LIMFUNC1,RINFSUP1,MEASURE6,EXTREAL1,MESFUNC1,MESFUNC5,CKB5,CKB6,CKB7,CKB8,CKB9;
definitions TARSKI,SUPINF_2,MESFUNC1,RINFSUP1,MEASURE6,VALUED_0,XXREAL_3,CKB5,CKB6,CKB7,CKB8,CKB9;
theorems NAT_1,TARSKI,FUNCT_1,FUNCT_2,SUPINF_2,INT_1,EXTREAL2,SEQ_2,SEQ_4,RINFSUP1,XREAL_0,XBOOLE_0,MESFUNC2,XREAL_1,XXREAL_0,ORDINAL1,MESFUNC5,XXREAL_2,VALUED_0,XXREAL_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
schemes FUNCT_2,DOMAIN_1;
registrations SUBSET_1,RELSET_1,XREAL_0,MEMBERED,ORDINAL1,INT_1,NUMBERS,XBOOLE_0,VALUED_0,SEQ_2,SEQ_4,XXREAL_3,FUNCT_2;
constructors REAL_1,NAT_1,DOMAIN_1,EXTREAL1,COMPLEX1,MEASURE6,MESFUNC1,PARTFUN3,LIMFUNC1,RINFSUP1,MESFUNC5,SEQ_1,SUPINF_1,SEQ_4,RELSET_1,BINOP_2,RVSUM_1,CKB5,CKB6,CKB7,CKB8,CKB9;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
definition
let seq being ExtREAL_sequence;
func inferior_realsequence seq -> ExtREAL_sequence
means
:Def6: (for n being (Element of ( NAT )) holds (ex Y being non empty (Subset of ( ExtREAL )) st (Y = { ( seq . k ) where k is (Element of ( NAT )): n <= k } & ( it . n ) = ( inf Y ))));
existence
proof
defpred P[ (Element of ( NAT )),(Element of ( ExtREAL )) ]
 means
(ex Y being non empty (Subset of ( ExtREAL )) st (Y = { ( seq . k ) where k is (Element of ( NAT )): $1 <= k } & $2 = ( inf Y )));
A1: (for n being (Element of ( NAT )) holds (ex y being (Element of ( ExtREAL )) st P[ n,y ]))
proof
let n being (Element of ( NAT ));
reconsider Y = { ( seq . k ) where k is (Element of ( NAT )): n <= k } as non empty (Subset of ( ExtREAL )) by CKB10:1;
reconsider y = ( inf Y ) as (Element of ( ExtREAL ));
take y;
thus thesis;
end;
thus (ex f being (Function of ( NAT ),( ExtREAL )) st (for n being (Element of ( NAT )) holds P[ n,( f . n ) ])) from FUNCT_2:sch 3(A1);
end;
uniqueness
proof
let seq1 being ExtREAL_sequence,seq2 being ExtREAL_sequence;
assume that
A2: (for n being (Element of ( NAT )) holds (ex Y being non empty (Subset of ( ExtREAL )) st (Y = { ( seq . k ) where k is (Element of ( NAT )): n <= k } & ( seq1 . n ) = ( inf Y ))))
and
A3: (for n being (Element of ( NAT )) holds (ex Y being non empty (Subset of ( ExtREAL )) st (Y = { ( seq . k ) where k is (Element of ( NAT )): n <= k } & ( seq2 . n ) = ( inf Y ))));
A4: (for y being set holds (y in ( NAT ) implies ( seq1 . y ) = ( seq2 . y )))
proof
let y being set;
assume y in ( NAT );
then reconsider n = y as (Element of ( NAT ));
A5: (ex Z being non empty (Subset of ( ExtREAL )) st (Z = { ( seq . k ) where k is (Element of ( NAT )): n <= k } & ( seq2 . n ) = ( inf Z ))) by A3;
(ex Y being non empty (Subset of ( ExtREAL )) st (Y = { ( seq . k ) where k is (Element of ( NAT )): n <= k } & ( seq1 . n ) = ( inf Y ))) by A2;
hence thesis by A5;
end;
A6: ( NAT ) = ( dom seq2 ) by FUNCT_2:def 1;
( NAT ) = ( dom seq1 ) by FUNCT_2:def 1;
hence thesis by A4,A6,FUNCT_1:2;
end;
end;
