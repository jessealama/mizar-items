environ
vocabularies NUMBERS,SUBSET_1,XBOOLE_0,XXREAL_2,ORDINAL2,XREAL_0,ORDINAL1,XXREAL_0,SEQ_4,MESFUNC5,RELAT_1,FUNCT_1,RINFSUP1,VALUED_0,SEQ_1,ARYTM_3,TARSKI,CARD_1,ARYTM_1,SEQ_2,COMPLEX1,NAT_1,MEASURE6,REAL_1,MESFUNC1,SUPINF_2;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XREAL_0,COMPLEX1,REAL_1,XXREAL_0,RELSET_1,FUNCT_2,NAT_1,XXREAL_2,SUPINF_1,VALUED_0,SUPINF_2,SEQ_1,SEQ_2,SEQ_4,LIMFUNC1,RINFSUP1,MEASURE6,EXTREAL1,MESFUNC1,MESFUNC5,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB20,CKB21;
definitions TARSKI,SUPINF_2,MESFUNC1,RINFSUP1,MEASURE6,VALUED_0,XXREAL_3,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB20,CKB21;
theorems NAT_1,TARSKI,FUNCT_1,FUNCT_2,SUPINF_2,INT_1,EXTREAL2,SEQ_2,SEQ_4,RINFSUP1,XREAL_0,XBOOLE_0,MESFUNC2,XREAL_1,XXREAL_0,ORDINAL1,MESFUNC5,XXREAL_2,VALUED_0,XXREAL_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes FUNCT_2,DOMAIN_1;
registrations SUBSET_1,RELSET_1,XREAL_0,MEMBERED,ORDINAL1,INT_1,NUMBERS,XBOOLE_0,VALUED_0,SEQ_2,SEQ_4,XXREAL_3,FUNCT_2,CKB18,CKB19;
constructors REAL_1,NAT_1,DOMAIN_1,EXTREAL1,COMPLEX1,MEASURE6,MESFUNC1,PARTFUN3,LIMFUNC1,RINFSUP1,MESFUNC5,SEQ_1,SUPINF_1,SEQ_4,RELSET_1,BINOP_2,RVSUM_1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB20,CKB21;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve seq for ExtREAL_sequence;
reserve rseq for Real_Sequence;
theorem
Th12: (seq = rseq implies (seq is  bounded_above iff rseq is  bounded_above))
proof
assume A1: seq = rseq;
hereby
assume seq is  bounded_above;
then ( rng rseq ) is  bounded_above by A1,CKB8:def 1;
then consider p being  real number such that A2: p is (UpperBound of ( rng rseq )) by XXREAL_2:def 10;
A3: (for y being  real number holds (y in ( rng rseq ) implies y <= p)) by A2,XXREAL_2:def 1;
now
let n being (Element of ( NAT ));
( rseq . n ) in ( rng rseq ) by FUNCT_2:4;
then ( ( 0 ) + ( rseq . n ) ) < ( 1 + p ) by A3,XREAL_1:8;
hence ( rseq . n ) < ( p + 1 );
end;
hence rseq is  bounded_above by SEQ_2:def 3;
end;
assume rseq is  bounded_above;
then consider q being  real number such that A4: (for n being (Element of ( NAT )) holds ( rseq . n ) < q) by SEQ_2:def 3;
now
let r being  ext-real number;
assume r in ( rng seq );
then (ex x being set st (x in ( dom rseq ) & r = ( rseq . x ))) by A1,FUNCT_1:def 3;
hence r <= q by A4;
end;
then q is (UpperBound of ( rng seq )) by XXREAL_2:def 1;
hence ( rng seq ) is  bounded_above by XXREAL_2:def 10;
end;
