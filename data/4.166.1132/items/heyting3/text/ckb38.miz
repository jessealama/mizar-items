environ
vocabularies NUMBERS,ABIAN,RELAT_1,CARD_1,ARYTM_3,ORDERS_2,SUBSET_1,TARSKI,ZFMISC_1,FUNCT_1,XXREAL_0,FINSET_1,XBOOLE_0,FINSEQ_1,MCART_1,LATTICES,LATTICE3,PBOOLE,EQREL_1,FINSUB_1,PARTFUN1,HEYTING1,SUBSTLAT,NORMFORM,REALSET1,STRUCT_0,BINOP_1,RELAT_2,ORDINAL4,CAT_1,YELLOW_0,WELLORD1,HEYTING2,REWRITE1,HEYTING3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,RELAT_1,FUNCT_1,ORDERS_2,NAT_1,FINSEQ_1,BINOP_1,FINSET_1,FINSUB_1,PARTFUN1,LATTICES,DOMAIN_1,REALSET1,STRUCT_0,SUBSTLAT,MCART_1,WELLORD1,YELLOW_0,ABIAN,XXREAL_2,LATTICE3,HEYTING2,XXREAL_0,CKB17,CKB22,CKB24;
definitions TARSKI,LATTICE3,FUNCT_1,XBOOLE_0,BINOP_1,REALSET1,WELLORD1,CKB17,CKB22,CKB24;
theorems HEYTING2,ZFMISC_1,PARTFUN1,YELLOW_0,LATTICE3,TARSKI,NAT_1,LATTICE5,FINSEQ_1,MCART_1,FUNCT_5,ORDERS_2,YELLOW_5,SUBSTLAT,FINSUB_1,WAYBEL15,LATTICES,GRFUNC_1,RELAT_1,SYSREL,BINOP_1,FUNCT_1,FUNCT_2,XBOOLE_0,XBOOLE_1,ORDINAL1,XREAL_1,XXREAL_0,XXREAL_2,PRE_POLY,ABIAN,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB20,CKB21,CKB22,CKB24,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36,CKB37;
schemes LMOD_7,XBOOLE_0,CKB1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,PARTFUN1,FINSET_1,FINSUB_1,XXREAL_0,NAT_1,MEMBERED,FINSEQ_1,REALSET1,ABIAN,STRUCT_0,LATTICES,LATTICE3,YELLOW_0,YELLOW_1,SUBSTLAT,XXREAL_2,RELAT_1,HEYTING2,CKB3,CKB18,CKB19,CKB23,CKB25,CKB32;
constructors BINOP_1,TOLER_1,REALSET1,ABIAN,LATTICE3,YELLOW_0,HEYTING2,VALUED_1,XXREAL_2,RELSET_1,CKB17,CKB22,CKB24;
requirements SUBSET,BOOLE,NUMERALS,REAL,ARITHM;
begin
definition
let n being (Element of ( NAT ));
let k being (Element of ( NAT ));
func PFBrt (n,k) -> (Element of ( Fin ( PFuncs (( NAT ),{ k }) ) )) means 
:Def4: (for x being set holds (x in it iff ((ex m being non  empty (Element of ( NAT )) st (m <= n & x = ( PFArt (m,k) ))) or x = ( PFCrt (n,k) ))));
existence
proof
defpred P[ set ]
 means
((ex m being non  empty (Element of ( NAT )) st (m <= n & $1 = ( PFArt (m,k) ))) or $1 = ( PFCrt (n,k) ));
consider X being set such that A1: (for x being set holds (x in X iff (x in ( PFuncs (( NAT ),{ k }) ) & P[ x ]))) from XBOOLE_0:sch 1;
A2: X c= ( bool [: ( Seg ( ( 2 * n ) + 1 ) ),{ k } :] )
proof
let x being set;
assume A3: x in X;
per cases  by A1,A3;
suppose A4: (ex m being non  empty (Element of ( NAT )) st (m <= n & x = ( PFArt (m,k) )));

A5: ( 2 * n ) <= ( ( 2 * n ) + 1 ) by NAT_1:11;
consider m being non  empty (Element of ( NAT )) such that A6: m <= n and A7: x = ( PFArt (m,k) ) by A4;
( 2 * m ) <= ( 2 * n ) by A6,NAT_1:4;
then A8: ( 2 * m ) <= ( ( 2 * n ) + 1 ) by A5,XXREAL_0:2;
x c= [: ( Seg ( ( 2 * n ) + 1 ) ),{ k } :]
proof
let t being set;
assume A9: t in x;
per cases  by A7,A9,CKB22:def 1;
suppose (ex m1 being  odd (Element of ( NAT )) st (m1 <= ( 2 * m ) & [ m1,k ] = t));

then consider m1 being  odd (Element of ( NAT )) such that A10: m1 <= ( 2 * m ) and A11: [ m1,k ] = t;
A12: 1 <= m1 by ABIAN:12;
m1 <= ( ( 2 * n ) + 1 ) by A8,A10,XXREAL_0:2;
then m1 in ( Seg ( ( 2 * n ) + 1 ) ) by A12,FINSEQ_1:1;
hence thesis by A11,ZFMISC_1:106;
end;
suppose A13: [ ( 2 * m ),k ] = t;

m <= ( 2 * m ) by XREAL_1:151;
then 1 <= ( 2 * m ) by NAT_1:14;
then ( 2 * m ) in ( Seg ( ( 2 * n ) + 1 ) ) by A8,FINSEQ_1:1;
hence thesis by A13,ZFMISC_1:106;
end;
end;
hence thesis;
end;
suppose A14: x = ( PFCrt (n,k) );

x c= [: ( Seg ( ( 2 * n ) + 1 ) ),{ k } :]
proof
let t being set;
assume t in x;
then consider m being  odd (Element of ( NAT )) such that A15: m <= ( ( 2 * n ) + 1 ) and A16: [ m,k ] = t by A14,CKB24:def 1;
1 <= m by ABIAN:12;
then m in ( Seg ( ( 2 * n ) + 1 ) ) by A15,FINSEQ_1:1;
hence thesis by A16,ZFMISC_1:106;
end;
hence thesis;
end;
end;
X c= ( PFuncs (( NAT ),{ k }) )
proof
let x being set;
assume x in X;
hence thesis by A1;
end;
then reconsider X as (Element of ( Fin ( PFuncs (( NAT ),{ k }) ) )) by A2,FINSUB_1:def 5;
take X;
let x being set;
thus (x in X implies ((ex m being non  empty (Element of ( NAT )) st (m <= n & x = ( PFArt (m,k) ))) or x = ( PFCrt (n,k) ))) by A1;
assume ((ex m being non  empty (Element of ( NAT )) st (m <= n & x = ( PFArt (m,k) ))) or x = ( PFCrt (n,k) ));
hence thesis by A1;
end;
uniqueness
proof
defpred P[ set ]
 means
((ex m being non  empty (Element of ( NAT )) st (m <= n & $1 = ( PFArt (m,k) ))) or $1 = ( PFCrt (n,k) ));
A17: (for X1,X2 being (Element of ( Fin ( PFuncs (( NAT ),{ k }) ) )) holds (((for x being set holds (x in X1 iff P[ x ])) & (for x being set holds (x in X2 iff P[ x ]))) implies X1 = X2)) from LMOD_7:sch 1;
let X1 being (Element of ( Fin ( PFuncs (( NAT ),{ k }) ) ));
let X2 being (Element of ( Fin ( PFuncs (( NAT ),{ k }) ) ));
assume ((for x being set holds (x in X1 iff P[ x ])) & (for x being set holds (x in X2 iff P[ x ])));
hence thesis by A17;
end;
end;
