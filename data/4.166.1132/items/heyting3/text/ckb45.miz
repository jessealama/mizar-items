environ
vocabularies NUMBERS,ABIAN,RELAT_1,CARD_1,ARYTM_3,ORDERS_2,SUBSET_1,TARSKI,ZFMISC_1,FUNCT_1,XXREAL_0,FINSET_1,XBOOLE_0,FINSEQ_1,MCART_1,LATTICES,LATTICE3,PBOOLE,EQREL_1,FINSUB_1,PARTFUN1,HEYTING1,SUBSTLAT,NORMFORM,REALSET1,STRUCT_0,BINOP_1,RELAT_2,ORDINAL4,CAT_1,YELLOW_0,WELLORD1,HEYTING2,REWRITE1,HEYTING3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,RELAT_1,FUNCT_1,ORDERS_2,NAT_1,FINSEQ_1,BINOP_1,FINSET_1,FINSUB_1,PARTFUN1,LATTICES,DOMAIN_1,REALSET1,STRUCT_0,SUBSTLAT,MCART_1,WELLORD1,YELLOW_0,ABIAN,XXREAL_2,LATTICE3,HEYTING2,XXREAL_0,CKB17,CKB22,CKB24,CKB38;
definitions TARSKI,LATTICE3,FUNCT_1,XBOOLE_0,BINOP_1,REALSET1,WELLORD1,CKB17,CKB22,CKB24,CKB38;
theorems HEYTING2,ZFMISC_1,PARTFUN1,YELLOW_0,LATTICE3,TARSKI,NAT_1,LATTICE5,FINSEQ_1,MCART_1,FUNCT_5,ORDERS_2,YELLOW_5,SUBSTLAT,FINSUB_1,WAYBEL15,LATTICES,GRFUNC_1,RELAT_1,SYSREL,BINOP_1,FUNCT_1,FUNCT_2,XBOOLE_0,XBOOLE_1,ORDINAL1,XREAL_1,XXREAL_0,XXREAL_2,PRE_POLY,ABIAN,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB20,CKB21,CKB22,CKB24,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44;
schemes LMOD_7,XBOOLE_0,CKB1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,PARTFUN1,FINSET_1,FINSUB_1,XXREAL_0,NAT_1,MEMBERED,FINSEQ_1,REALSET1,ABIAN,STRUCT_0,LATTICES,LATTICE3,YELLOW_0,YELLOW_1,SUBSTLAT,XXREAL_2,RELAT_1,HEYTING2,CKB3,CKB18,CKB19,CKB23,CKB25,CKB32;
constructors BINOP_1,TOLER_1,REALSET1,ABIAN,LATTICE3,YELLOW_0,HEYTING2,VALUED_1,XXREAL_2,RELSET_1,CKB17,CKB22,CKB24,CKB38;
requirements SUBSET,BOOLE,NUMERALS,REAL,ARITHM;
begin
definition
let k being (Element of ( NAT ));
func PFDrt k -> (Subset of ( SubstPoset (( NAT ),{ k }) )) means 
:Def5: (for x being set holds (x in it iff (ex n being non  empty (Element of ( NAT )) st x = ( PFBrt (n,k) ))));
existence
proof
defpred P[ set ]
 means
(ex n being non  empty (Element of ( NAT )) st $1 = ( PFBrt (n,k) ));
consider X being set such that A1: (for x being set holds (x in X iff (x in (the carrier of ( SubstPoset (( NAT ),{ k }) )) & P[ x ]))) from XBOOLE_0:sch 1;
X c= (the carrier of ( SubstPoset (( NAT ),{ k }) ))
proof
let x being set;
assume x in X;
hence thesis by A1;
end;
then reconsider X9 = X as (Subset of ( SubstPoset (( NAT ),{ k }) ));
take X9;
let x being set;
thus (x in X9 implies (ex n being non  empty (Element of ( NAT )) st x = ( PFBrt (n,k) ))) by A1;
given n being non  empty (Element of ( NAT )) such that
A2: x = ( PFBrt (n,k) );

x is (Element of ( SubstPoset (( NAT ),{ k }) )) by A2,CKB44:1;
hence thesis by A1,A2;
end;
uniqueness
proof
defpred P[ set ]
 means
(ex n being non  empty (Element of ( NAT )) st $1 = ( PFBrt (n,k) ));
A3: (for A1,A2 being (Subset of ( SubstPoset (( NAT ),{ k }) )) holds (((for x being set holds (x in A1 iff P[ x ])) & (for x being set holds (x in A2 iff P[ x ]))) implies A1 = A2)) from CKB1:sch 1;
let A1 being (Subset of ( SubstPoset (( NAT ),{ k }) ));
let A2 being (Subset of ( SubstPoset (( NAT ),{ k }) ));
assume ((for x being set holds (x in A1 iff P[ x ])) & (for x being set holds (x in A2 iff P[ x ])));
hence thesis by A3;
end;
end;
