environ
vocabularies BOR_CANT,REALSET1,ABIAN,SIN_COS,ARYTM_3,CARD_3,XREAL_0,EQREL_1,COMPLEX1,NUMBERS,ORDINAL1,ZFMISC_1,CARD_1,XXREAL_0,NEWTON,REAL_1,RELAT_1,PROB_1,SEQ_1,SEQ_2,ARYTM_1,ORDINAL2,RPR_1,XBOOLE_0,SUBSET_1,PROB_2,SERIES_1,NAT_1,FUNCT_1,PROB_3,SERIES_3,LIMFUNC1,SETLIM_1,XXREAL_2,FUNCOP_1;
notations XXREAL_0,XCMPLX_0,XREAL_0,ORDINAL1,REAL_1,XBOOLE_0,SUBSET_1,NUMBERS,NAT_1,COMPLEX1,SEQ_1,SEQ_2,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,PROB_1,PROB_2,SETLIM_1,SERIES_1,PROB_3,VALUED_0,VALUED_1,ZFMISC_1,LIMFUNC1,SERIES_3,NEWTON,ABIAN,SIN_COS,CKB1,CKB4;
definitions FUNCT_1,FUNCT_2,SIN_COS,PROB_1,SETLIM_1,NEWTON,CKB4;
theorems XCMPLX_0,SIN_COS,SERIES_1,PROB_1,SEQ_2,PROB_3,SUBSET_1,XBOOLE_0,XBOOLE_1,ABIAN,NAT_1,FUNCT_1,FUNCT_2,XXREAL_0,ORDINAL1,TARSKI,XREAL_1,PROB_2,ABSVALUE,VALUED_1,SEQ_4,LIMFUNC1,SETLIM_1,SERIES_3,NEWTON,POWER,FUNCOP_1,CKB2,CKB3,CKB4,CKB5;
schemes NAT_1,RECDEF_1,FUNCT_2;
registrations FUNCT_2,FINSEQ_2,XCMPLX_0,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XREAL_0,NAT_1,MEMBERED,VALUED_0,VALUED_1,ABIAN,XXREAL_0,RELAT_1,SEQ_4,FINSEQ_1,NEWTON,FUNCOP_1,PROB_2,PROB_3,SETLIM_1,RELSET_1;
constructors RELSET_1,BINARITH,SQUARE_1,COMSEQ_3,RVSUM_1,SIN_COS,REAL_1,LIMFUNC1,SETLIM_1,SEQ_2,SERIES_1,KURATO_0,RINFSUP1,SEQ_1,PROB_3,SERIES_3,ABIAN,NEWTON,NUMBERS,NAT_D,SEQ_4,RFUNCT_1,RCOMP_1,SEQM_3,FUNCT_4,CKB1,CKB4;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve Omega for non  empty set;
reserve Sigma for (SigmaField of Omega);
reserve Prob for (Probability of Sigma);
reserve A for (SetSequence of Sigma);
reserve n for (Element of ( NAT ));
theorem
Th4: ( ( Partial_Product ( Prob * ( Complement A ) ) ) . n ) <= ( ( Partial_Product ( JSum ( Prob * A ) ) ) . n )
proof
defpred J[ (Element of ( NAT )) ]
 means
( ( Partial_Product ( Prob * ( Complement A ) ) ) . $1 ) <= ( ( Partial_Product ( JSum ( Prob * A ) ) ) . $1 );
A1: ( ( Partial_Product ( Prob * ( Complement A ) ) ) . ( 0 ) ) = ( ( Prob * ( Complement A ) ) . ( 0 ) ) by SERIES_3:def 1;
( dom ( Prob * ( Complement A ) ) ) = ( NAT ) by FUNCT_2:def 1;
then A2: ( ( Prob * ( Complement A ) ) . ( 0 ) ) = ( Prob . ( ( Complement A ) . ( 0 ) ) ) by FUNCT_1:12;
A3: ( ( Partial_Product ( Prob * ( Complement A ) ) ) . ( 0 ) ) = ( Prob . ( ( A . ( 0 ) ) ` ) ) by A2,A1,PROB_1:def 2;
( Prob . ( ( A . ( 0 ) ) ` ) ) = ( Prob . ( ( [#] Sigma ) \ ( A . ( 0 ) ) ) ) by SUBSET_1:def 4;
then A4: ( ( Partial_Product ( Prob * ( Complement A ) ) ) . ( 0 ) ) = ( 1 - ( Prob . ( A . ( 0 ) ) ) ) by A3,PROB_1:32;
( ( Partial_Product ( JSum ( Prob * A ) ) ) . ( 0 ) ) = ( ( JSum ( Prob * A ) ) . ( 0 ) ) by SERIES_3:def 1;
then ( ( Partial_Product ( JSum ( Prob * A ) ) ) . ( 0 ) ) = ( Sum ( ( - ( ( Prob * A ) . ( 0 ) ) ) rExpSeq ) ) by CKB4:def 1;
then A5: ( ( Partial_Product ( JSum ( Prob * A ) ) ) . ( 0 ) ) = ( ( exp_R ) . ( - ( ( Prob * A ) . ( 0 ) ) ) ) by SIN_COS:def 22;
A6: ( dom ( Prob * A ) ) = ( NAT ) by FUNCT_2:def 1;
( 1 + ( - ( Prob . ( A . ( 0 ) ) ) ) ) <= ( ( exp_R ) . ( - ( Prob . ( A . ( 0 ) ) ) ) ) by CKB3:1;
then A7: J[ ( 0 ) ] by A4,A6,A5,FUNCT_1:12;
A8: (for k being (Element of ( NAT )) holds (J[ k ] implies J[ ( k + 1 ) ]))
proof
let k being (Element of ( NAT ));
assume A9: J[ k ];
(( Prob . ( ( Complement A ) . ( k + 1 ) ) ) = ( Prob . ( ( A . ( k + 1 ) ) ` ) ) & ( ( A . ( k + 1 ) ) ` ) = ( ( [#] Sigma ) \ ( A . ( k + 1 ) ) )) by PROB_1:def 2,SUBSET_1:def 4;
then A10: ( Prob . ( ( Complement A ) . ( k + 1 ) ) ) = ( 1 - ( Prob . ( A . ( k + 1 ) ) ) ) by PROB_1:32;
A11: ( 1 + ( - ( Prob . ( A . ( k + 1 ) ) ) ) ) <= ( ( exp_R ) . ( - ( Prob . ( A . ( k + 1 ) ) ) ) ) by CKB3:1;
( dom ( Prob * ( Complement A ) ) ) = ( NAT ) by FUNCT_2:def 1;
then A12: ( ( Prob * ( Complement A ) ) . ( k + 1 ) ) <= ( ( exp_R ) . ( - ( Prob . ( A . ( k + 1 ) ) ) ) ) by A11,A10,FUNCT_1:12;
A13: ( ( ( Prob * ( Complement A ) ) . ( k + 1 ) ) * ( ( Partial_Product ( JSum ( Prob * A ) ) ) . k ) ) <= ( ( ( exp_R ) . ( - ( Prob . ( A . ( k + 1 ) ) ) ) ) * ( ( Partial_Product ( JSum ( Prob * A ) ) ) . k ) )
proof
(for n being (Element of ( NAT )) holds ( ( JSum ( Prob * A ) ) . n ) > ( 0 ))
proof
let n being (Element of ( NAT ));
A14: ( ( exp_R ) . ( - ( ( Prob * A ) . n ) ) ) > ( 0 ) by SIN_COS:54;
( ( JSum ( Prob * A ) ) . n ) = ( Sum ( ( - ( ( Prob * A ) . n ) ) rExpSeq ) ) by CKB4:def 1;
hence thesis by A14,SIN_COS:def 22;
end;
then ( ( Partial_Product ( JSum ( Prob * A ) ) ) . k ) > ( 0 ) by SERIES_3:43;
hence thesis by A12,XREAL_1:64;
end;
A15: ( ( ( Partial_Product ( Prob * ( Complement A ) ) ) . k ) * ( ( Prob * ( Complement A ) ) . ( k + 1 ) ) ) <= ( ( ( Partial_Product ( JSum ( Prob * A ) ) ) . k ) * ( ( Prob * ( Complement A ) ) . ( k + 1 ) ) )
proof
(for n being (Element of ( NAT )) holds ( ( Prob * ( Complement A ) ) . n ) >= ( 0 ))
proof
let n being (Element of ( NAT ));
A16: ( Prob . ( ( Complement A ) . n ) ) >= ( 0 ) by PROB_1:def 8;
( dom ( Prob * ( Complement A ) ) ) = ( NAT ) by FUNCT_2:def 1;
hence thesis by A16,FUNCT_1:12;
end;
then ( ( Prob * ( Complement A ) ) . ( k + 1 ) ) >= ( 0 );
hence thesis by A9,XREAL_1:64;
end;
( ( ( Partial_Product ( Prob * ( Complement A ) ) ) . k ) * ( ( Prob * ( Complement A ) ) . ( k + 1 ) ) ) <= ( ( ( exp_R ) . ( - ( Prob . ( A . ( k + 1 ) ) ) ) ) * ( ( Partial_Product ( JSum ( Prob * A ) ) ) . k ) ) by A15,A13,XXREAL_0:2;
then ( ( Partial_Product ( Prob * ( Complement A ) ) ) . ( k + 1 ) ) <= ( ( ( exp_R ) . ( - ( Prob . ( A . ( k + 1 ) ) ) ) ) * ( ( Partial_Product ( JSum ( Prob * A ) ) ) . k ) ) by SERIES_3:def 1;
then ( ( Partial_Product ( Prob * ( Complement A ) ) ) . ( k + 1 ) ) <= ( ( Sum ( ( - ( Prob . ( A . ( k + 1 ) ) ) ) rExpSeq ) ) * ( ( Partial_Product ( JSum ( Prob * A ) ) ) . k ) ) by SIN_COS:def 22;
then ( ( Partial_Product ( Prob * ( Complement A ) ) ) . ( k + 1 ) ) <= ( ( Sum ( ( - ( Prob . ( A . ( k + 1 ) ) ) ) rExpSeq ) ) * ( ( exp_R ) . ( - ( ( Partial_Sums ( Prob * A ) ) . k ) ) ) ) by CKB5:1;
then ( ( Partial_Product ( Prob * ( Complement A ) ) ) . ( k + 1 ) ) <= ( ( exp_R ( - ( Prob . ( A . ( k + 1 ) ) ) ) ) * ( exp_R ( - ( ( Partial_Sums ( Prob * A ) ) . k ) ) ) ) by SIN_COS:def 22;
then A17: ( ( Partial_Product ( Prob * ( Complement A ) ) ) . ( k + 1 ) ) <= ( exp_R ( ( - ( Prob . ( A . ( k + 1 ) ) ) ) + ( - ( ( Partial_Sums ( Prob * A ) ) . k ) ) ) ) by SIN_COS:50;
( dom ( Prob * A ) ) = ( NAT ) by FUNCT_2:def 1;
then ( ( Prob * A ) . ( k + 1 ) ) = ( Prob . ( A . ( k + 1 ) ) ) by FUNCT_1:12;
then ( ( - ( Prob . ( A . ( k + 1 ) ) ) ) + ( - ( ( Partial_Sums ( Prob * A ) ) . k ) ) ) = ( - ( ( ( Prob * A ) . ( k + 1 ) ) + ( ( Partial_Sums ( Prob * A ) ) . k ) ) );
then ( ( Partial_Product ( Prob * ( Complement A ) ) ) . ( k + 1 ) ) <= ( ( exp_R ) . ( - ( ( Partial_Sums ( Prob * A ) ) . ( k + 1 ) ) ) ) by A17,SERIES_1:def 1;
hence thesis by CKB5:1;
end;
(for k being (Element of ( NAT )) holds J[ k ]) from NAT_1:sch 1(A7,A8);
hence thesis;
end;
