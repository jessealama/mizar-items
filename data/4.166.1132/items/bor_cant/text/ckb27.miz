environ
vocabularies BOR_CANT,REALSET1,ABIAN,SIN_COS,ARYTM_3,CARD_3,XREAL_0,EQREL_1,COMPLEX1,NUMBERS,ORDINAL1,ZFMISC_1,CARD_1,XXREAL_0,NEWTON,REAL_1,RELAT_1,PROB_1,SEQ_1,SEQ_2,ARYTM_1,ORDINAL2,RPR_1,XBOOLE_0,SUBSET_1,PROB_2,SERIES_1,NAT_1,FUNCT_1,PROB_3,SERIES_3,LIMFUNC1,SETLIM_1,XXREAL_2,FUNCOP_1;
notations XXREAL_0,XCMPLX_0,XREAL_0,ORDINAL1,REAL_1,XBOOLE_0,SUBSET_1,NUMBERS,NAT_1,COMPLEX1,SEQ_1,SEQ_2,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,PROB_1,PROB_2,SETLIM_1,SERIES_1,PROB_3,VALUED_0,VALUED_1,ZFMISC_1,LIMFUNC1,SERIES_3,NEWTON,ABIAN,SIN_COS,CKB1,CKB4,CKB7,CKB8,CKB9,CKB10,CKB16,CKB20,CKB22,CKB23,CKB25;
definitions FUNCT_1,FUNCT_2,SIN_COS,PROB_1,SETLIM_1,NEWTON,CKB4,CKB7,CKB8,CKB9,CKB10,CKB16,CKB20,CKB22,CKB23,CKB25;
theorems XCMPLX_0,SIN_COS,SERIES_1,PROB_1,SEQ_2,PROB_3,SUBSET_1,XBOOLE_0,XBOOLE_1,ABIAN,NAT_1,FUNCT_1,FUNCT_2,XXREAL_0,ORDINAL1,TARSKI,XREAL_1,PROB_2,ABSVALUE,VALUED_1,SEQ_4,LIMFUNC1,SETLIM_1,SERIES_3,NEWTON,POWER,FUNCOP_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB25,CKB26;
schemes NAT_1,RECDEF_1,FUNCT_2;
registrations FUNCT_2,FINSEQ_2,XCMPLX_0,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XREAL_0,NAT_1,MEMBERED,VALUED_0,VALUED_1,ABIAN,XXREAL_0,RELAT_1,SEQ_4,FINSEQ_1,NEWTON,FUNCOP_1,PROB_2,PROB_3,SETLIM_1,RELSET_1,CKB11,CKB12,CKB13,CKB14,CKB21,CKB24;
constructors RELSET_1,BINARITH,SQUARE_1,COMSEQ_3,RVSUM_1,SIN_COS,REAL_1,LIMFUNC1,SETLIM_1,SEQ_2,SERIES_1,KURATO_0,RINFSUP1,SEQ_1,PROB_3,SERIES_3,ABIAN,NEWTON,NUMBERS,NAT_D,SEQ_4,RFUNCT_1,RCOMP_1,SEQM_3,FUNCT_4,CKB1,CKB4,CKB7,CKB8,CKB9,CKB10,CKB16,CKB20,CKB22,CKB23,CKB25;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve Omega for non empty set;
reserve Sigma for (SigmaField of Omega);
reserve Prob for (Probability of Sigma);
reserve A for (SetSequence of Sigma);
reserve n for (Element of ( NAT ));
theorem
Th10: (A is_all_independent_wrt Prob implies ( Prob . ( ( Partial_Intersection ( Complement A ) ) . n ) ) = ( ( Partial_Product ( Prob * ( Complement A ) ) ) . n ))
proof
assume A1: A is_all_independent_wrt Prob;
defpred J[ (Element of ( NAT )) ]
 means
( Prob . ( ( Partial_Intersection ( Complement A ) ) . $1 ) ) = ( ( Partial_Product ( Prob * ( Complement A ) ) ) . $1 );
( dom ( Prob * ( Complement A ) ) ) = ( NAT ) by FUNCT_2:def 1;
then A2: ( ( Prob * ( Complement A ) ) . ( 0 ) ) = ( Prob . ( ( Complement A ) . ( 0 ) ) ) by FUNCT_1:12;
A3: ( ( Partial_Product ( Prob * ( Complement A ) ) ) . ( 0 ) ) = ( ( Prob * ( Complement A ) ) . ( 0 ) ) by SERIES_3:def 1;
A4: J[ ( 0 ) ] by A2,A3,PROB_3:21;
A5: (for k being (Element of ( NAT )) holds (J[ k ] implies J[ ( k + 1 ) ]))
proof
let k being (Element of ( NAT ));
assume A6: J[ k ];
( ( ( ( Partial_Intersection ( Complement A ) ) . k ) /\ ( ( Partial_Intersection ( Complement A ) ) . k ) ) /\ ( ( Complement A ) . ( k + 1 ) ) ) = ( ( ( Partial_Intersection ( Complement A ) ) . k ) /\ ( ( A . ( k + 1 ) ) ` ) ) by PROB_1:def 2;
then ( ( ( ( Partial_Intersection ( Complement A ) ) . k ) /\ ( ( Partial_Intersection ( Complement A ) ) . k ) ) /\ ( ( Complement A ) . ( k + 1 ) ) ) = ( ( ( Partial_Intersection ( Complement A ) ) . k ) /\ ( Omega \ ( A . ( k + 1 ) ) ) ) by SUBSET_1:def 4;
then A7: ( ( ( ( Partial_Intersection ( Complement A ) ) . k ) /\ ( ( Partial_Intersection ( Complement A ) ) . k ) ) /\ ( ( Complement A ) . ( k + 1 ) ) ) = ( ( ( ( Partial_Intersection ( Complement A ) ) . k ) /\ Omega ) \ ( ( ( Partial_Intersection ( Complement A ) ) . k ) /\ ( A . ( k + 1 ) ) ) ) by XBOOLE_1:50;
A8: ( ( ( Partial_Intersection ( Complement A ) ) . k ) /\ Omega ) = ( ( Partial_Intersection ( Complement A ) ) . k ) by XBOOLE_1:28;
A9: ( Prob . ( ( ( Partial_Intersection ( Complement A ) ) . k ) \ ( ( ( Partial_Intersection ( Complement A ) ) . k ) /\ ( A . ( k + 1 ) ) ) ) ) = ( ( Prob . ( ( Partial_Intersection ( Complement A ) ) . k ) ) - ( Prob . ( ( ( Partial_Intersection ( Complement A ) ) . k ) /\ ( A . ( k + 1 ) ) ) ) ) by PROB_1:33,XBOOLE_1:17;
A10: ( Prob . ( ( Partial_Intersection ( Complement A ) ) . ( k + 1 ) ) ) = ( ( Prob . ( ( Partial_Intersection ( Complement A ) ) . k ) ) - ( Prob . ( ( ( Partial_Intersection ( Complement A ) ) . k ) /\ ( A . ( k + 1 ) ) ) ) ) by A7,A8,A9,PROB_3:21;
(for A being (SetSequence of Sigma) holds (for k being (Element of ( NAT )) holds (A is_all_independent_wrt Prob implies ( Prob . ( ( ( Partial_Intersection ( Complement A ) ) . k ) /\ ( A . ( k + 1 ) ) ) ) = ( ( ( Partial_Product ( Prob * ( Complement A ) ) ) . k ) * ( ( Prob * A ) . ( k + 1 ) ) ))))
proof
let A being (SetSequence of Sigma);
let k being (Element of ( NAT ));
assume that
A11: A is_all_independent_wrt Prob;
consider n being (Element of ( NAT )) such that A12: n = ( k + 1 );
consider n1 being (Element of ( NAT )) such that A13: n1 = k;
n1 < ( k + 1 ) by A13,NAT_1:13;
then ( Prob . ( ( ( Partial_Intersection ( Complement A ) ) . k ) /\ ( ( Partial_Intersection ( A ^\ ( ( k + ( 0 ) ) + 1 ) ) ) . ( ( n - k ) - 1 ) ) ) ) = ( ( ( Partial_Product ( Prob * ( Complement A ) ) ) . k ) * ( ( Partial_Product ( Prob * ( A ^\ ( ( k + ( 0 ) ) + 1 ) ) ) ) . ( ( n - k ) - 1 ) ) ) by A12,A11,CKB17:1,A13;
then A14: ( Prob . ( ( ( Partial_Intersection ( Complement A ) ) . k ) /\ ( ( A ^\ ( k + 1 ) ) . ( 0 ) ) ) ) = ( ( ( Partial_Product ( Prob * ( Complement A ) ) ) . k ) * ( ( Partial_Product ( Prob * ( A ^\ ( k + 1 ) ) ) ) . ( 0 ) ) ) by A12,PROB_3:21;
A15: ( ( A ^\ ( k + 1 ) ) . ( 0 ) ) = ( A . ( ( 0 ) + ( k + 1 ) ) ) by NAT_1:def 3;
then A16: ( Prob . ( ( ( Partial_Intersection ( Complement A ) ) . k ) /\ ( A . ( k + 1 ) ) ) ) = ( ( ( Partial_Product ( Prob * ( Complement A ) ) ) . k ) * ( ( Prob * ( A ^\ ( k + 1 ) ) ) . ( 0 ) ) ) by A14,SERIES_3:def 1;
( dom ( Prob * ( A ^\ ( k + 1 ) ) ) ) = ( NAT ) by FUNCT_2:def 1;
then A17: ( Prob . ( ( ( Partial_Intersection ( Complement A ) ) . k ) /\ ( A . ( k + 1 ) ) ) ) = ( ( ( Partial_Product ( Prob * ( Complement A ) ) ) . k ) * ( Prob . ( A . ( k + 1 ) ) ) ) by A15,A16,FUNCT_1:12;
( dom ( Prob * A ) ) = ( NAT ) by FUNCT_2:def 1;
hence thesis by A17,FUNCT_1:12;
end;
then A18: ( Prob . ( ( Partial_Intersection ( Complement A ) ) . ( k + 1 ) ) ) = ( ( ( Partial_Product ( Prob * ( Complement A ) ) ) . k ) - ( ( ( Partial_Product ( Prob * ( Complement A ) ) ) . k ) * ( ( Prob * A ) . ( k + 1 ) ) ) ) by A6,A10,A1;
(( A . ( k + 1 ) ) = ( ( ( A . ( k + 1 ) ) ` ) ` ) & ( ( ( A . ( k + 1 ) ) ` ) ` ) = ( Omega \ ( ( A . ( k + 1 ) ) ` ) )) by SUBSET_1:def 4;
then (( Prob . ( A . ( k + 1 ) ) ) = ( Prob . ( ( [#] Sigma ) \ ( ( A . ( k + 1 ) ) ` ) ) ) & ( ( A . ( k + 1 ) ) ` ) is (Event of Sigma)) by PROB_1:20;
then A19: ( Prob . ( A . ( k + 1 ) ) ) = ( 1 - ( Prob . ( ( A . ( k + 1 ) ) ` ) ) ) by PROB_1:32;
( dom ( Prob * A ) ) = ( NAT ) by FUNCT_2:def 1;
then A20: ( ( Prob * A ) . ( k + 1 ) ) = ( 1 - ( Prob . ( ( A . ( k + 1 ) ) ` ) ) ) by A19,FUNCT_1:12;
( dom ( Prob * ( Complement A ) ) ) = ( NAT ) by FUNCT_2:def 1;
then A21: ( ( Prob * ( Complement A ) ) . ( k + 1 ) ) = ( Prob . ( ( Complement A ) . ( k + 1 ) ) ) by FUNCT_1:12;
( ( Prob * A ) . ( k + 1 ) ) = ( 1 - ( ( Prob * ( Complement A ) ) . ( k + 1 ) ) ) by A21,A20,PROB_1:def 2;
then ( Prob . ( ( Partial_Intersection ( Complement A ) ) . ( k + 1 ) ) ) = ( ( ( ( Partial_Product ( Prob * ( Complement A ) ) ) . k ) - ( ( Partial_Product ( Prob * ( Complement A ) ) ) . k ) ) + ( ( ( Partial_Product ( Prob * ( Complement A ) ) ) . k ) * ( ( Prob * ( Complement A ) ) . ( k + 1 ) ) ) ) by A18;
hence thesis by SERIES_3:def 1;
end;
(for k being (Element of ( NAT )) holds J[ k ]) from NAT_1:sch 1(A4,A5);
hence thesis;
end;
