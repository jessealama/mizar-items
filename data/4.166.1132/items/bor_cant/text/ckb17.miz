environ
vocabularies BOR_CANT,REALSET1,ABIAN,SIN_COS,ARYTM_3,CARD_3,XREAL_0,EQREL_1,COMPLEX1,NUMBERS,ORDINAL1,ZFMISC_1,CARD_1,XXREAL_0,NEWTON,REAL_1,RELAT_1,PROB_1,SEQ_1,SEQ_2,ARYTM_1,ORDINAL2,RPR_1,XBOOLE_0,SUBSET_1,PROB_2,SERIES_1,NAT_1,FUNCT_1,PROB_3,SERIES_3,LIMFUNC1,SETLIM_1,XXREAL_2,FUNCOP_1;
notations XXREAL_0,XCMPLX_0,XREAL_0,ORDINAL1,REAL_1,XBOOLE_0,SUBSET_1,NUMBERS,NAT_1,COMPLEX1,SEQ_1,SEQ_2,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,PROB_1,PROB_2,SETLIM_1,SERIES_1,PROB_3,VALUED_0,VALUED_1,ZFMISC_1,LIMFUNC1,SERIES_3,NEWTON,ABIAN,SIN_COS,CKB1,CKB4,CKB7,CKB8,CKB9,CKB10,CKB16;
definitions FUNCT_1,FUNCT_2,SIN_COS,PROB_1,SETLIM_1,NEWTON,CKB4,CKB7,CKB8,CKB9,CKB10,CKB16;
theorems XCMPLX_0,SIN_COS,SERIES_1,PROB_1,SEQ_2,PROB_3,SUBSET_1,XBOOLE_0,XBOOLE_1,ABIAN,NAT_1,FUNCT_1,FUNCT_2,XXREAL_0,ORDINAL1,TARSKI,XREAL_1,PROB_2,ABSVALUE,VALUED_1,SEQ_4,LIMFUNC1,SETLIM_1,SERIES_3,NEWTON,POWER,FUNCOP_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB15,CKB16;
schemes NAT_1,RECDEF_1,FUNCT_2;
registrations FUNCT_2,FINSEQ_2,XCMPLX_0,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XREAL_0,NAT_1,MEMBERED,VALUED_0,VALUED_1,ABIAN,XXREAL_0,RELAT_1,SEQ_4,FINSEQ_1,NEWTON,FUNCOP_1,PROB_2,PROB_3,SETLIM_1,RELSET_1,CKB11,CKB12,CKB13,CKB14;
constructors RELSET_1,BINARITH,SQUARE_1,COMSEQ_3,RVSUM_1,SIN_COS,REAL_1,LIMFUNC1,SETLIM_1,SEQ_2,SERIES_1,KURATO_0,RINFSUP1,SEQ_1,PROB_3,SERIES_3,ABIAN,NEWTON,NUMBERS,NAT_D,SEQ_4,RFUNCT_1,RCOMP_1,SEQM_3,FUNCT_4,CKB1,CKB4,CKB7,CKB8,CKB9,CKB10,CKB16;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve Omega for non empty set;
reserve Sigma for (SigmaField of Omega);
reserve Prob for (Probability of Sigma);
reserve A for (SetSequence of Sigma);
reserve n for (Element of ( NAT ));
reserve n1 for (Element of ( NAT ));
reserve n2 for (Element of ( NAT ));
theorem
Th6: ((n > n1 & A is_all_independent_wrt Prob) implies ( Prob . ( ( ( Partial_Intersection ( Complement A ) ) . n1 ) /\ ( ( Partial_Intersection ( A ^\ ( ( n1 + n2 ) + 1 ) ) ) . ( ( n - n1 ) - 1 ) ) ) ) = ( ( ( Partial_Product ( Prob * ( Complement A ) ) ) . n1 ) * ( ( Partial_Product ( Prob * ( A ^\ ( ( n1 + n2 ) + 1 ) ) ) ) . ( ( n - n1 ) - 1 ) ) ))
proof
assume that
A1: n > n1
and
A2: A is_all_independent_wrt Prob;
A3: (for A,B being (SetSequence of Sigma) holds (for k,n being (Element of ( NAT )) holds (B = ( A * ( Special_Function2 k ) ) implies ( ( Partial_Product ( Prob * ( A ^\ k ) ) ) . n ) = ( ( Partial_Product ( Prob * B ) ) . n ))))
proof
let A being (SetSequence of Sigma),B being (SetSequence of Sigma);
let k being (Element of ( NAT )),n being (Element of ( NAT ));
assume A4: B = ( A * ( Special_Function2 k ) );
defpred J[ (Element of ( NAT )) ]
 means
( ( Partial_Product ( Prob * ( A ^\ k ) ) ) . $1 ) = ( ( Partial_Product ( Prob * B ) ) . $1 );
( dom ( Prob * ( A ^\ k ) ) ) = ( NAT ) by FUNCT_2:def 1;
then A5: ( ( Prob * ( A ^\ k ) ) . ( 0 ) ) = ( Prob . ( ( A ^\ k ) . ( 0 ) ) ) by FUNCT_1:12;
( ( Prob * ( A ^\ k ) ) . ( 0 ) ) = ( Prob . ( A . ( ( 0 ) + k ) ) ) by A5,NAT_1:def 3;
then A6: ( ( Partial_Product ( Prob * ( A ^\ k ) ) ) . ( 0 ) ) = ( Prob . ( A . k ) ) by SERIES_3:def 1;
A7: ( ( Partial_Product ( Prob * B ) ) . ( 0 ) ) = ( ( Prob * B ) . ( 0 ) ) by SERIES_3:def 1;
A8: ( ( Special_Function2 k ) . ( 0 ) ) = ( ( 0 ) + k ) by CKB8:def 1;
( dom ( A * ( Special_Function2 k ) ) ) = ( NAT ) by FUNCT_2:def 1;
then A9: ( Prob . ( B . ( 0 ) ) ) = ( Prob . ( A . k ) ) by A8,A4,FUNCT_1:12;
( dom ( Prob * B ) ) = ( NAT ) by FUNCT_2:def 1;
then A10: J[ ( 0 ) ] by A9,A7,A6,FUNCT_1:12;
A11: (for q being (Element of ( NAT )) holds (J[ q ] implies J[ ( q + 1 ) ]))
proof
let q being (Element of ( NAT ));
assume A12: J[ q ];
A13: ( ( Partial_Product ( Prob * ( A ^\ k ) ) ) . ( q + 1 ) ) = ( ( ( Partial_Product ( Prob * B ) ) . q ) * ( ( Prob * ( A ^\ k ) ) . ( q + 1 ) ) ) by A12,SERIES_3:def 1;
( ( Prob * ( A ^\ k ) ) . ( q + 1 ) ) = ( ( Prob * B ) . ( q + 1 ) )
proof
( dom ( Prob * ( A ^\ k ) ) ) = ( NAT ) by FUNCT_2:def 1;
then A14: ( ( Prob * ( A ^\ k ) ) . ( q + 1 ) ) = ( Prob . ( ( A ^\ k ) . ( q + 1 ) ) ) by FUNCT_1:12;
( dom ( Prob * B ) ) = ( NAT ) by FUNCT_2:def 1;
then A15: ( ( Prob * B ) . ( q + 1 ) ) = ( Prob . ( B . ( q + 1 ) ) ) by FUNCT_1:12;
( dom ( A * ( Special_Function2 k ) ) ) = ( NAT ) by FUNCT_2:def 1;
then A16: ( B . ( q + 1 ) ) = ( A . ( ( Special_Function2 k ) . ( q + 1 ) ) ) by A4,FUNCT_1:12;
(( ( Special_Function2 k ) . ( q + 1 ) ) = ( ( q + 1 ) + k ) & ( ( q + 1 ) + k ) = ( ( q + 1 ) + k )) by CKB8:def 1;
hence thesis by A16,A15,A14,NAT_1:def 3;
end;
hence thesis by A13,SERIES_3:def 1;
end;
(for k being (Element of ( NAT )) holds J[ k ]) from NAT_1:sch 1(A10,A11);
hence thesis;
end;
A17: (for m,m1,m2 being (Element of ( NAT )) holds (for e being (sequence of ( NAT )) holds (for C,B being (SetSequence of Sigma) holds ((((m1 < m & e is  one-to-one) & C = ( A * e )) & B = ( C * ( Special_Function (m1,m2) ) )) implies ( Prob . ( ( Partial_Intersection B ) . m ) ) = ( ( ( Partial_Product ( Prob * C ) ) . m1 ) * ( ( Partial_Product ( Prob * ( C ^\ ( ( m1 + m2 ) + 1 ) ) ) ) . ( ( m - m1 ) - 1 ) ) )))))
proof
let m being (Element of ( NAT )),m1 being (Element of ( NAT )),m2 being (Element of ( NAT ));
let e being (sequence of ( NAT ));
let C being (SetSequence of Sigma),B being (SetSequence of Sigma);
assume that
A18: m1 < m
and
A19: e is  one-to-one
and
A20: C = ( A * e )
and
A21: B = ( C * ( Special_Function (m1,m2) ) );
(((B is (SetSequence of Sigma) & ( e * ( Special_Function (m1,m2) ) ) is (sequence of ( NAT ))) & ( e * ( Special_Function (m1,m2) ) ) is  one-to-one) & (for n being (Element of ( NAT )) holds ( A . ( ( e * ( Special_Function (m1,m2) ) ) . n ) ) = ( B . n )))
proof
(for n being (Element of ( NAT )) holds ( A . ( ( e * ( Special_Function (m1,m2) ) ) . n ) ) = ( B . n ))
proof
let n being (Element of ( NAT ));
A22: ( dom ( ( A * e ) * ( Special_Function (m1,m2) ) ) ) = ( NAT ) by FUNCT_2:def 1;
A23: ( B . n ) = ( ( A * e ) . ( ( Special_Function (m1,m2) ) . n ) ) by A21,A20,A22,FUNCT_1:12;
( dom ( A * e ) ) = ( NAT ) by FUNCT_2:def 1;
then A24: ( B . n ) = ( A . ( e . ( ( Special_Function (m1,m2) ) . n ) ) ) by A23,FUNCT_1:12;
( dom ( e * ( Special_Function (m1,m2) ) ) ) = ( NAT ) by FUNCT_2:def 1;
hence thesis by A24,FUNCT_1:12;
end;
hence thesis by A19,FUNCT_1:24;
end;
then ( Prob . ( ( Partial_Intersection B ) . m ) ) = ( ( Partial_Product ( Prob * B ) ) . m ) by A2,CKB16:def 1;
hence thesis by A18,A21,CKB15:1;
end;
A25: (for m,m1 being (Element of ( NAT )) holds (for e being (sequence of ( NAT )) holds (for C,B being (SetSequence of Sigma) holds (((C = ( A * e ) & e is  one-to-one) & B = ( C * ( Special_Function2 m1 ) )) implies ( Prob . ( ( Partial_Intersection B ) . m ) ) = ( ( Partial_Product ( Prob * ( C ^\ m1 ) ) ) . m )))))
proof
let m being (Element of ( NAT )),m1 being (Element of ( NAT ));
let e being (sequence of ( NAT ));
let C being (SetSequence of Sigma),B being (SetSequence of Sigma);
assume that
A26: C = ( A * e )
and
A27: e is  one-to-one
and
A28: B = ( C * ( Special_Function2 m1 ) );
A29: ((((B is (SetSequence of Sigma) & ( Special_Function2 m1 ) is (sequence of ( NAT ))) & ( dom ( e * ( Special_Function2 m1 ) ) ) <> ( {} )) & ( e * ( Special_Function2 m1 ) ) is  one-to-one) & (for n being (Element of ( NAT )) holds ( A . ( ( e * ( Special_Function2 m1 ) ) . n ) ) = ( B . n )))
proof
A30: (for n being (Element of ( NAT )) holds ( A . ( ( e * ( Special_Function2 m1 ) ) . n ) ) = ( B . n ))
proof
let n being (Element of ( NAT ));
( dom ( A * ( e * ( Special_Function2 m1 ) ) ) ) = ( NAT ) by FUNCT_2:def 1;
then A31: ( ( A * ( e * ( Special_Function2 m1 ) ) ) . n ) = ( A . ( ( e * ( Special_Function2 m1 ) ) . n ) ) by FUNCT_1:12;
( dom ( A * e ) ) = ( NAT ) by FUNCT_2:def 1;
then A32: ( ( A * e ) . ( ( Special_Function2 m1 ) . n ) ) = ( A . ( e . ( ( Special_Function2 m1 ) . n ) ) ) by FUNCT_1:12;
( dom ( e * ( Special_Function2 m1 ) ) ) = ( NAT ) by FUNCT_2:def 1;
then A33: ( ( A * e ) . ( ( Special_Function2 m1 ) . n ) ) = ( ( A * ( e * ( Special_Function2 m1 ) ) ) . n ) by A32,A31,FUNCT_1:12;
( dom ( ( A * e ) * ( Special_Function2 m1 ) ) ) = ( NAT ) by FUNCT_2:def 1;
then A34: ( B . n ) = ( ( A * ( e * ( Special_Function2 m1 ) ) ) . n ) by A33,A28,A26,FUNCT_1:12;
( dom ( A * ( e * ( Special_Function2 m1 ) ) ) ) = ( NAT ) by FUNCT_2:def 1;
hence thesis by A34,FUNCT_1:12;
end;
thus thesis by A27,A30,FUNCT_1:24;
end;
( Prob . ( ( Partial_Intersection B ) . m ) ) = ( ( Partial_Product ( Prob * B ) ) . m ) by A2,A29,CKB16:def 1;
hence thesis by A28,A3;
end;
A35: (for q being (Element of ( NAT )) holds ( Prob . ( ( ( Partial_Intersection ( Complement A ) ) . n1 ) /\ ( ( Partial_Intersection ( A ^\ ( ( n1 + n2 ) + 1 ) ) ) . q ) ) ) = ( ( ( Partial_Product ( Prob * ( Complement A ) ) ) . n1 ) * ( ( Partial_Product ( Prob * ( A ^\ ( ( n1 + n2 ) + 1 ) ) ) ) . q ) ))
proof
let q being (Element of ( NAT ));
defpred J[ (Element of ( NAT )) ]
 means
(for e being (sequence of ( NAT )) holds (for q,n2 being (Element of ( NAT )) holds (for C being (SetSequence of Sigma) holds ((e is  one-to-one & C = ( A * e )) implies ( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . $1 ) /\ ( ( Partial_Intersection ( C ^\ ( ( $1 + n2 ) + 1 ) ) ) . q ) ) ) = ( ( ( Partial_Product ( Prob * ( Complement C ) ) ) . $1 ) * ( ( Partial_Product ( Prob * ( C ^\ ( ( $1 + n2 ) + 1 ) ) ) ) . q ) )))));
A36: J[ ( 0 ) ]
proof
let e being (sequence of ( NAT ));
let q being (Element of ( NAT )),n2 being (Element of ( NAT ));
let C being (SetSequence of Sigma);
assume A37: e is  one-to-one;
assume A38: C = ( A * e );
( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . ( 0 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) ) = ( Prob . ( ( ( Complement C ) . ( 0 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) ) by PROB_3:21;
then ( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . ( 0 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) ) = ( Prob . ( ( ( C . ( 0 ) ) ` ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) ) by PROB_1:def 2;
then ( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . ( 0 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) ) = ( Prob . ( ( Omega \ ( C . ( 0 ) ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) ) by SUBSET_1:def 4;
then A39: ( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . ( 0 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) ) = ( Prob . ( ( Omega /\ ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) \ ( ( C . ( 0 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) ) ) by XBOOLE_1:111;
A40: ( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . ( 0 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) ) = ( Prob . ( ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) \ ( ( C . ( 0 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) ) ) by A39,XBOOLE_1:28;
A41: ( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . ( 0 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) ) = ( ( Prob . ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) - ( Prob . ( ( C . ( 0 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) ) ) by A40,PROB_1:33,XBOOLE_1:17;
consider m1 being (Element of ( NAT )) such that A42: m1 = ( 0 );
consider m being (Element of ( NAT )) such that A43: m = ( ( m1 + 1 ) + q );
consider m2 being (Element of ( NAT )) such that A44: m2 = n2;
consider B being (SetSequence of Omega) such that A45: B = ( C * ( Special_Function (m1,m2) ) );
reconsider B as (SetSequence of Sigma) by A45;
A46: ((m1 < m & C = ( A * e )) & B = ( C * ( Special_Function (m1,m2) ) ))
proof
(m1 < ( m1 + 1 ) & ( m1 + 1 ) <= ( ( m1 + 1 ) + q )) by NAT_1:13,XREAL_1:31;
hence thesis by A43,A38,A45,XXREAL_0:2;
end;
then ( Prob . ( ( Partial_Intersection B ) . m ) ) = ( Prob . ( ( ( Partial_Intersection C ) . m1 ) /\ ( ( Partial_Intersection ( C ^\ ( ( m1 + m2 ) + 1 ) ) ) . ( ( m - m1 ) - 1 ) ) ) ) by CKB15:1;
then ( ( ( Partial_Product ( Prob * C ) ) . ( 0 ) ) * ( ( Partial_Product ( Prob * ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) ) . q ) ) = ( Prob . ( ( ( Partial_Intersection C ) . ( 0 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) ) by A46,A37,A17,A42,A44,A43;
then ( ( Prob . ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) - ( ( ( Partial_Product ( Prob * C ) ) . ( 0 ) ) * ( ( Partial_Product ( Prob * ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) ) . q ) ) ) = ( ( Prob . ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) - ( Prob . ( ( C . ( 0 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) ) ) by PROB_3:21;
then A47: ( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . ( 0 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) ) = ( ( Prob . ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) - ( ( ( Prob * C ) . ( 0 ) ) * ( ( Partial_Product ( Prob * ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) ) . q ) ) ) by A41,SERIES_3:def 1;
( ( Prob * C ) . ( 0 ) ) = ( 1 - ( ( Prob * ( Complement C ) ) . ( 0 ) ) )
proof
(( C . ( 0 ) ) = ( ( ( C . ( 0 ) ) ` ) ` ) & ( ( ( C . ( 0 ) ) ` ) ` ) = ( Omega \ ( ( C . ( 0 ) ) ` ) )) by SUBSET_1:def 4;
then (( Prob . ( C . ( 0 ) ) ) = ( Prob . ( ( [#] Sigma ) \ ( ( C . ( 0 ) ) ` ) ) ) & ( ( C . ( 0 ) ) ` ) is (Event of Sigma)) by PROB_1:20;
then A48: ( Prob . ( C . ( 0 ) ) ) = ( 1 - ( Prob . ( ( C . ( 0 ) ) ` ) ) ) by PROB_1:32;
( dom ( Prob * C ) ) = ( NAT ) by FUNCT_2:def 1;
then A49: ( ( Prob * C ) . ( 0 ) ) = ( 1 - ( Prob . ( ( C . ( 0 ) ) ` ) ) ) by A48,FUNCT_1:12;
( dom ( Prob * ( Complement C ) ) ) = ( NAT ) by FUNCT_2:def 1;
then ( ( Prob * ( Complement C ) ) . ( 0 ) ) = ( Prob . ( ( Complement C ) . ( 0 ) ) ) by FUNCT_1:12;
hence thesis by A49,PROB_1:def 2;
end;
then A50: ( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . ( 0 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) ) = ( ( Prob . ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) - ( ( ( Partial_Product ( Prob * ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) ) . q ) - ( ( ( Prob * ( Complement C ) ) . ( 0 ) ) * ( ( Partial_Product ( Prob * ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) ) . q ) ) ) ) by A47;
set m1 = ( ( ( 0 ) + n2 ) + 1 );
set m = q;
set B = ( C * ( Special_Function2 m1 ) );
reconsider B as (SetSequence of Sigma);
A51: (for A,B,C being (SetSequence of Sigma) holds (for k,n being (Element of ( NAT )) holds (for e being (sequence of ( NAT )) holds ((C = ( A * e ) & B = ( C * ( Special_Function2 k ) )) implies ( ( Partial_Intersection ( C ^\ k ) ) . n ) = ( ( Partial_Intersection B ) . n )))))
proof
let A being (SetSequence of Sigma),B being (SetSequence of Sigma),C being (SetSequence of Sigma);
let k being (Element of ( NAT )),n being (Element of ( NAT ));
let e being (sequence of ( NAT ));
assume C = ( A * e );
assume A52: B = ( C * ( Special_Function2 k ) );
A53: (for x being set holds ((for knat being Nat holds (knat <= n implies x in ( ( C ^\ k ) . knat ))) iff (for knat being Nat holds (knat <= n implies x in ( B . knat )))))
proof
let x being set;
hereby
assume A54: (for knat being Nat holds (knat <= n implies x in ( ( C ^\ k ) . knat )));
thus (for knat being Nat holds (knat <= n implies x in ( B . knat )))
proof
let knat being Nat;
assume A55: knat <= n;
reconsider knat as (Element of ( NAT )) by ORDINAL1:def 12;
( dom ( C * ( Special_Function2 k ) ) ) = ( NAT ) by FUNCT_2:def 1;
then A56: ( ( C * ( Special_Function2 k ) ) . knat ) = ( C . ( ( Special_Function2 k ) . knat ) ) by FUNCT_1:12;
(( ( Special_Function2 k ) . knat ) = ( knat + k ) & ( knat + k ) = ( knat + k )) by CKB8:def 1;
then (x in ( B . knat ) iff x in ( ( C ^\ k ) . knat )) by A52,A56,NAT_1:def 3;
hence thesis by A55,A54;
end;

end;
assume A57: (for knat being Nat holds (knat <= n implies x in ( B . knat )));
thus (for knat being Nat holds (knat <= n implies x in ( ( C ^\ k ) . knat )))
proof
let knat being Nat;
assume A58: knat <= n;
reconsider knat as (Element of ( NAT )) by ORDINAL1:def 12;
( dom ( C * ( Special_Function2 k ) ) ) = ( NAT ) by FUNCT_2:def 1;
then A59: ( ( C * ( Special_Function2 k ) ) . knat ) = ( C . ( ( Special_Function2 k ) . knat ) ) by FUNCT_1:12;
(( ( Special_Function2 k ) . knat ) = ( knat + k ) & ( knat + k ) = ( knat + k )) by CKB8:def 1;
then (x in ( B . knat ) iff x in ( ( C ^\ k ) . knat )) by A52,A59,NAT_1:def 3;
hence thesis by A57,A58;
end;

end;
(for x being set holds (x in ( ( Partial_Intersection ( C ^\ k ) ) . n ) iff x in ( ( Partial_Intersection B ) . n )))
proof
let x being set;
((x in ( ( Partial_Intersection ( C ^\ k ) ) . n ) iff (for knat being Nat holds (knat <= n implies x in ( ( C ^\ k ) . knat )))) & (x in ( ( Partial_Intersection B ) . n ) iff (for knat being Nat holds (knat <= n implies x in ( B . knat ))))) by PROB_3:25;
hence thesis by A53;
end;
hence thesis by TARSKI:1;
end;
A60: ( Prob . ( ( Partial_Intersection B ) . m ) ) = ( ( Partial_Product ( Prob * ( C ^\ m1 ) ) ) . m ) by A38,A37,A25;
( Prob . ( ( Partial_Intersection ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) . q ) ) = ( ( Partial_Product ( Prob * ( C ^\ ( ( ( 0 ) + n2 ) + 1 ) ) ) ) . q ) by A38,A51,A60;
hence thesis by A50,SERIES_3:def 1;
end;
A61: (for k being (Element of ( NAT )) holds (J[ k ] implies J[ ( k + 1 ) ]))
proof
let k being (Element of ( NAT ));
assume A62: J[ k ];
let e being (sequence of ( NAT ));
let q being (Element of ( NAT )),n2 being (Element of ( NAT ));
let C being (SetSequence of Sigma);
assume A63: e is  one-to-one;
assume A64: C = ( A * e );
( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . ( k + 1 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) = ( Prob . ( ( ( ( Partial_Intersection ( Complement C ) ) . k ) /\ ( ( Complement C ) . ( k + 1 ) ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) by PROB_3:21;
then ( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . ( k + 1 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) = ( Prob . ( ( ( ( C . ( k + 1 ) ) ` ) /\ ( ( Partial_Intersection ( Complement C ) ) . k ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) by PROB_1:def 2;
then ( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . ( k + 1 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) = ( Prob . ( ( ( C . ( k + 1 ) ) ` ) /\ ( ( ( Partial_Intersection ( Complement C ) ) . k ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) ) by XBOOLE_1:16;
then ( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . ( k + 1 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) = ( Prob . ( ( Omega \ ( C . ( k + 1 ) ) ) /\ ( ( ( Partial_Intersection ( Complement C ) ) . k ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) ) by SUBSET_1:def 4;
then A65: ( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . ( k + 1 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) = ( Prob . ( ( Omega /\ ( ( ( Partial_Intersection ( Complement C ) ) . k ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) \ ( ( C . ( k + 1 ) ) /\ ( ( ( Partial_Intersection ( Complement C ) ) . k ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) ) ) by XBOOLE_1:50;
A66: ( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . ( k + 1 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) = ( Prob . ( ( ( ( Partial_Intersection ( Complement C ) ) . k ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) \ ( ( C . ( k + 1 ) ) /\ ( ( ( Partial_Intersection ( Complement C ) ) . k ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) ) ) by A65,XBOOLE_1:28;
A67: ( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . k ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) = ( ( ( Partial_Product ( Prob * ( Complement C ) ) ) . k ) * ( ( Partial_Product ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) ) . q ) )
proof
( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . k ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) = ( ( ( Partial_Product ( Prob * ( Complement C ) ) ) . k ) * ( ( Partial_Product ( Prob * ( C ^\ ( ( k + ( 1 + n2 ) ) + 1 ) ) ) ) . q ) ) by A63,A64,A62;
hence thesis;
end;
A68: ( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . ( k + 1 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) = ( ( ( ( Partial_Product ( Prob * ( Complement C ) ) ) . k ) * ( ( Partial_Product ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) ) . q ) ) - ( ( ( ( Prob * C ) . ( k + 1 ) ) * ( ( Partial_Product ( Prob * ( Complement C ) ) ) . k ) ) * ( ( Partial_Product ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) ) . q ) ) )
proof
( ( ( ( Prob * C ) . ( k + 1 ) ) * ( ( Partial_Product ( Prob * ( Complement C ) ) ) . k ) ) * ( ( Partial_Product ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) ) . q ) ) = ( Prob . ( ( C . ( k + 1 ) ) /\ ( ( ( Partial_Intersection ( Complement C ) ) . k ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) )
proof
consider F being (SetSequence of Omega) such that A69: F = ( C * ( Special_Function4 (k,n2) ) );
F is (SetSequence of Sigma)
proof
(for n being (Element of ( NAT )) holds ( F . n ) is (Event of Sigma))
proof
let n being (Element of ( NAT ));
A70: ( dom ( C * ( Special_Function4 (k,n2) ) ) ) = ( NAT ) by FUNCT_2:def 1;
( F . n ) = ( C . ( ( Special_Function4 (k,n2) ) . n ) ) by A69,A70,FUNCT_1:12;
hence thesis;
end;
hence thesis by PROB_1:25;
end;
then reconsider F as (SetSequence of Sigma);
(( e * ( Special_Function4 (k,n2) ) ) is  one-to-one & ( dom ( e * ( Special_Function4 (k,n2) ) ) ) <> ( {} )) by A63,FUNCT_1:24;
then consider f being (sequence of ( NAT )) such that A71: ((f = ( e * ( Special_Function4 (k,n2) ) ) & f is  one-to-one) & ( dom f ) <> ( {} ));
A72: (for q being set holds (q in ( NAT ) implies ( F . q ) = ( ( A * f ) . q )))
proof
let q being set;
assume q in ( NAT );
then reconsider q as (Element of ( NAT ));
( dom ( A * e ) ) = ( NAT ) by FUNCT_2:def 1;
then A73: ( ( A * e ) . ( ( Special_Function4 (k,n2) ) . q ) ) = ( A . ( e . ( ( Special_Function4 (k,n2) ) . q ) ) ) by FUNCT_1:12;
( dom ( ( A * e ) * ( Special_Function4 (k,n2) ) ) ) = ( NAT ) by FUNCT_2:def 1;
then A74: ( ( ( A * e ) * ( Special_Function4 (k,n2) ) ) . q ) = ( A . ( e . ( ( Special_Function4 (k,n2) ) . q ) ) ) by A73,FUNCT_1:12;
( dom ( e * ( Special_Function4 (k,n2) ) ) ) = ( NAT ) by FUNCT_2:def 1;
then A75: ( ( ( A * e ) * ( Special_Function4 (k,n2) ) ) . q ) = ( A . ( ( e * ( Special_Function4 (k,n2) ) ) . q ) ) by A74,FUNCT_1:12;
( dom ( A * f ) ) = ( NAT ) by FUNCT_2:def 1;
hence thesis by A71,A75,A64,A69,FUNCT_1:12;
end;
A76: ( Prob . ( ( ( Partial_Intersection ( Complement F ) ) . k ) /\ ( ( Partial_Intersection ( F ^\ ( ( k + ( 0 ) ) + 1 ) ) ) . ( q + 1 ) ) ) ) = ( ( ( Partial_Product ( Prob * ( Complement F ) ) ) . k ) * ( ( Partial_Product ( Prob * ( F ^\ ( ( k + ( 0 ) ) + 1 ) ) ) ) . ( q + 1 ) ) ) by A71,A72,A62,FUNCT_2:12;
A77: ( ( Partial_Intersection ( Complement C ) ) . k ) = ( ( Partial_Intersection ( Complement F ) ) . k )
proof
A78: (for x being set holds (for knat being Nat holds (knat <= k implies (x in ( ( Complement C ) . knat ) iff x in ( ( Complement F ) . knat )))))
proof
let x being set;
let knat being Nat;
assume knat <= k;
then A79: knat <= ( k + 1 ) by NAT_1:13;
reconsider knat as (Element of ( NAT )) by ORDINAL1:def 12;
( dom ( C * ( Special_Function4 (k,n2) ) ) ) = ( NAT ) by FUNCT_2:def 1;
then A80: ( ( C * ( Special_Function4 (k,n2) ) ) . knat ) = ( C . ( ( Special_Function4 (k,n2) ) . knat ) ) by FUNCT_1:12;
(( ( Special_Function4 (k,n2) ) . knat ) = ( IFGT (knat,( k + 1 ),( knat + n2 ),knat) ) & ( IFGT (knat,( k + 1 ),( knat + n2 ),knat) ) = knat) by CKB10:def 1,A79,XXREAL_0:def 11;
then ( ( Complement F ) . knat ) = ( ( C . knat ) ` ) by A69,A80,PROB_1:def 2;
hence thesis by PROB_1:def 2;
end;
A81: (for x being set holds ((for knat being Nat holds (knat <= k implies x in ( ( Complement C ) . knat ))) iff (for knat being Nat holds (knat <= k implies x in ( ( Complement F ) . knat )))))
proof
let x being set;
hereby
assume A82: (for knat being Nat holds (knat <= k implies x in ( ( Complement C ) . knat )));
thus (for knat being Nat holds (knat <= k implies x in ( ( Complement F ) . knat )))
proof
let knat being Nat;
assume A83: knat <= k;
then (x in ( ( Complement C ) . knat ) iff x in ( ( Complement F ) . knat )) by A78;
hence thesis by A83,A82;
end;

end;
assume A84: (for knat being Nat holds (knat <= k implies x in ( ( Complement F ) . knat )));
thus (for knat being Nat holds (knat <= k implies x in ( ( Complement C ) . knat )))
proof
let knat being Nat;
assume A85: knat <= k;
then (x in ( ( Complement C ) . knat ) iff x in ( ( Complement F ) . knat )) by A78;
hence thesis by A85,A84;
end;

end;
(for x being set holds (x in ( ( Partial_Intersection ( Complement C ) ) . k ) iff x in ( ( Partial_Intersection ( Complement F ) ) . k )))
proof
let x being set;
(x in ( ( Partial_Intersection ( Complement C ) ) . k ) iff (for knat being Nat holds (knat <= k implies x in ( ( Complement C ) . knat )))) by PROB_3:25;
then (x in ( ( Partial_Intersection ( Complement C ) ) . k ) iff (for knat being Nat holds (knat <= k implies x in ( ( Complement F ) . knat )))) by A81;
hence thesis by PROB_3:25;
end;
hence thesis by TARSKI:1;
end;
A86: ( ( Partial_Intersection ( F ^\ ( k + 1 ) ) ) . ( q + 1 ) ) = ( ( C . ( k + 1 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) )
proof
A87: (for x being set holds (for knat being Nat holds (knat <= q implies (x in ( ( F ^\ ( ( k + 1 ) + 1 ) ) . knat ) iff x in ( ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) . knat )))))
proof
let x being set;
let knat being Nat;
assume knat <= q;
reconsider knat as (Element of ( NAT )) by ORDINAL1:def 12;
A88: ( dom ( C * ( Special_Function4 (k,n2) ) ) ) = ( NAT ) by FUNCT_2:def 1;
set j = ( ( ( knat + k ) + 1 ) + 1 );
j > ( k + 1 )
proof
(( k + 1 ) < ( ( k + 1 ) + 1 ) & ( k + 2 ) <= ( ( k + 2 ) + knat )) by NAT_1:12,NAT_1:13;
hence thesis by XXREAL_0:2;
end;
then (( ( Special_Function4 (k,n2) ) . j ) = ( IFGT (j,( k + 1 ),( j + n2 ),j) ) & ( IFGT (j,( k + 1 ),( j + n2 ),j) ) = ( j + n2 )) by CKB10:def 1,XXREAL_0:def 11;
then ( F . ( knat + ( ( k + 1 ) + 1 ) ) ) = ( C . ( knat + ( ( ( k + 1 ) + n2 ) + 1 ) ) ) by A69,A88,FUNCT_1:12;
then ( ( F ^\ ( ( k + 1 ) + 1 ) ) . knat ) = ( C . ( knat + ( ( ( k + 1 ) + n2 ) + 1 ) ) ) by NAT_1:def 3;
hence thesis by NAT_1:def 3;
end;
A89: (for x being set holds ((for knat being Nat holds (knat <= q implies x in ( ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) . knat ))) iff (for knat being Nat holds (knat <= q implies x in ( ( F ^\ ( ( k + 1 ) + 1 ) ) . knat )))))
proof
let x being set;
hereby
assume A90: (for knat being Nat holds (knat <= q implies x in ( ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) . knat )));
thus (for knat being Nat holds (knat <= q implies x in ( ( F ^\ ( ( k + 1 ) + 1 ) ) . knat )))
proof
let knat being Nat;
assume A91: knat <= q;
then (x in ( ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) . knat ) iff x in ( ( F ^\ ( ( k + 1 ) + 1 ) ) . knat )) by A87;
hence thesis by A91,A90;
end;

end;
assume A92: (for knat being Nat holds (knat <= q implies x in ( ( F ^\ ( ( k + 1 ) + 1 ) ) . knat )));
thus (for knat being Nat holds (knat <= q implies x in ( ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) . knat )))
proof
let knat being Nat;
assume A93: knat <= q;
then (x in ( ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) . knat ) iff x in ( ( F ^\ ( ( k + 1 ) + 1 ) ) . knat )) by A87;
hence thesis by A93,A92;
end;

end;
A94: (for x being set holds (x in ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) iff x in ( ( Partial_Intersection ( F ^\ ( ( k + 1 ) + 1 ) ) ) . q )))
proof
let x being set;
(x in ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) iff (for knat being Nat holds (knat <= q implies x in ( ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) . knat )))) by PROB_3:25;
then (x in ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) iff (for knat being Nat holds (knat <= q implies x in ( ( F ^\ ( ( k + 1 ) + 1 ) ) . knat )))) by A89;
hence thesis by PROB_3:25;
end;
( ( ( Partial_Intersection ( F ^\ ( ( k + 1 ) + 1 ) ) ) . q ) /\ ( C . ( k + 1 ) ) ) = ( ( Partial_Intersection ( F ^\ ( k + 1 ) ) ) . ( q + 1 ) )
proof
defpred J[ (Element of ( NAT )) ]
 means
( ( ( Partial_Intersection ( F ^\ ( ( k + 1 ) + 1 ) ) ) . $1 ) /\ ( C . ( k + 1 ) ) ) = ( ( Partial_Intersection ( F ^\ ( k + 1 ) ) ) . ( $1 + 1 ) );
A95: J[ ( 0 ) ]
proof
( ( ( Partial_Intersection ( F ^\ ( ( k + 1 ) + 1 ) ) ) . ( 0 ) ) /\ ( C . ( k + 1 ) ) ) = ( ( ( F ^\ ( ( k + 1 ) + 1 ) ) . ( 0 ) ) /\ ( C . ( k + 1 ) ) ) by PROB_3:21;
then ( ( ( Partial_Intersection ( F ^\ ( ( k + 1 ) + 1 ) ) ) . ( 0 ) ) /\ ( C . ( k + 1 ) ) ) = ( ( F . ( ( 0 ) + ( ( k + 1 ) + 1 ) ) ) /\ ( C . ( k + 1 ) ) ) by NAT_1:def 3;
then A96: ( ( ( Partial_Intersection ( F ^\ ( ( k + 1 ) + 1 ) ) ) . ( 0 ) ) /\ ( C . ( k + 1 ) ) ) = ( ( ( F ^\ ( k + 1 ) ) . ( ( 0 ) + 1 ) ) /\ ( C . ( k + 1 ) ) ) by NAT_1:def 3;
A97: ( dom ( C * ( Special_Function4 (k,n2) ) ) ) = ( NAT ) by FUNCT_2:def 1;
(( ( Special_Function4 (k,n2) ) . ( k + 1 ) ) = ( IFGT (( k + 1 ),( k + 1 ),( ( k + 1 ) + n2 ),( k + 1 )) ) & ( IFGT (( k + 1 ),( k + 1 ),( ( k + 1 ) + n2 ),( k + 1 )) ) = ( k + 1 )) by CKB10:def 1,XXREAL_0:def 11;
then ( ( ( Partial_Intersection ( F ^\ ( ( k + 1 ) + 1 ) ) ) . ( 0 ) ) /\ ( C . ( k + 1 ) ) ) = ( ( ( F ^\ ( k + 1 ) ) . ( ( 0 ) + 1 ) ) /\ ( F . ( ( 0 ) + ( k + 1 ) ) ) ) by A69,A97,A96,FUNCT_1:12;
then ( ( ( Partial_Intersection ( F ^\ ( ( k + 1 ) + 1 ) ) ) . ( 0 ) ) /\ ( C . ( k + 1 ) ) ) = ( ( ( F ^\ ( k + 1 ) ) . ( ( 0 ) + 1 ) ) /\ ( ( F ^\ ( k + 1 ) ) . ( 0 ) ) ) by NAT_1:def 3;
then ( ( ( Partial_Intersection ( F ^\ ( ( k + 1 ) + 1 ) ) ) . ( 0 ) ) /\ ( C . ( k + 1 ) ) ) = ( ( ( Partial_Intersection ( F ^\ ( k + 1 ) ) ) . ( 0 ) ) /\ ( ( F ^\ ( k + 1 ) ) . ( ( 0 ) + 1 ) ) ) by PROB_3:21;
hence thesis by PROB_3:21;
end;
A98: (for q being (Element of ( NAT )) holds (J[ q ] implies J[ ( q + 1 ) ]))
proof
let q being (Element of ( NAT ));
assume A99: J[ q ];
( ( ( Partial_Intersection ( F ^\ ( ( k + 1 ) + 1 ) ) ) . ( q + 1 ) ) /\ ( C . ( k + 1 ) ) ) = ( ( ( ( Partial_Intersection ( F ^\ ( ( k + 1 ) + 1 ) ) ) . q ) /\ ( ( F ^\ ( ( k + 1 ) + 1 ) ) . ( q + 1 ) ) ) /\ ( C . ( k + 1 ) ) ) by PROB_3:21;
then A100: ( ( ( Partial_Intersection ( F ^\ ( ( k + 1 ) + 1 ) ) ) . ( q + 1 ) ) /\ ( C . ( k + 1 ) ) ) = ( ( ( Partial_Intersection ( F ^\ ( k + 1 ) ) ) . ( q + 1 ) ) /\ ( ( F ^\ ( ( k + 1 ) + 1 ) ) . ( q + 1 ) ) ) by A99,XBOOLE_1:16;
( ( F ^\ ( ( k + 1 ) + 1 ) ) . ( q + 1 ) ) = ( ( F ^\ ( k + 1 ) ) . ( ( q + 1 ) + 1 ) )
proof
( ( F ^\ ( ( k + 1 ) + 1 ) ) . ( q + 1 ) ) = ( F . ( ( q + 1 ) + ( ( k + 1 ) + 1 ) ) ) by NAT_1:def 3;
then ( ( F ^\ ( ( k + 1 ) + 1 ) ) . ( q + 1 ) ) = ( F . ( ( ( q + 1 ) + 1 ) + ( k + 1 ) ) );
hence thesis by NAT_1:def 3;
end;
hence thesis by A100,PROB_3:21;
end;
(for k being (Element of ( NAT )) holds J[ k ]) from NAT_1:sch 1(A95,A98);
hence thesis;
end;
hence thesis by A94,TARSKI:1;
end;
A101: ( ( Partial_Product ( Prob * ( F ^\ ( k + 1 ) ) ) ) . ( q + 1 ) ) = ( ( ( Prob * C ) . ( k + 1 ) ) * ( ( Partial_Product ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) ) . q ) )
proof
defpred J[ (Element of ( NAT )) ]
 means
( ( Partial_Product ( Prob * ( F ^\ ( k + 1 ) ) ) ) . ( $1 + 1 ) ) = ( ( ( Prob * C ) . ( k + 1 ) ) * ( ( Partial_Product ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) ) . $1 ) );
A102: J[ ( 0 ) ]
proof
A103: ( ( F ^\ ( k + 1 ) ) . ( ( 0 ) + 1 ) ) = ( ( C * ( Special_Function4 (k,n2) ) ) . ( ( k + 1 ) + 1 ) ) by A69,NAT_1:def 3;
A104: ( dom ( C * ( Special_Function4 (k,n2) ) ) ) = ( NAT ) by FUNCT_2:def 1;
set j = ( ( k + 1 ) + 1 );
j > ( k + 1 ) by NAT_1:13;
then (( ( Special_Function4 (k,n2) ) . j ) = ( IFGT (j,( k + 1 ),( j + n2 ),j) ) & ( IFGT (j,( k + 1 ),( j + n2 ),j) ) = ( j + n2 )) by CKB10:def 1,XXREAL_0:def 11;
then ( ( F ^\ ( k + 1 ) ) . ( ( 0 ) + 1 ) ) = ( C . ( ( 0 ) + ( ( ( k + 1 ) + n2 ) + 1 ) ) ) by A104,A103,FUNCT_1:12;
then A105: ( Prob . ( ( F ^\ ( k + 1 ) ) . ( ( 0 ) + 1 ) ) ) = ( Prob . ( ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) . ( 0 ) ) ) by NAT_1:def 3;
(( dom ( Prob * ( F ^\ ( k + 1 ) ) ) ) = ( NAT ) & ( dom ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) ) = ( NAT )) by FUNCT_2:def 1;
then ((( ( Prob * ( F ^\ ( k + 1 ) ) ) . ( ( 0 ) + 1 ) ) = ( Prob . ( ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) . ( 0 ) ) ) & ( Prob . ( ( F ^\ ( k + 1 ) ) . ( ( 0 ) + 1 ) ) ) = ( ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . ( 0 ) )) & ( Prob . ( ( F ^\ ( k + 1 ) ) . ( ( 0 ) + 1 ) ) ) = ( Prob . ( ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) . ( 0 ) ) )) by A105,FUNCT_1:12;
then A106: ( ( ( Partial_Product ( Prob * ( F ^\ ( k + 1 ) ) ) ) . ( 0 ) ) * ( ( Prob * ( F ^\ ( k + 1 ) ) ) . ( ( 0 ) + 1 ) ) ) = ( ( ( Prob * ( F ^\ ( k + 1 ) ) ) . ( 0 ) ) * ( ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . ( 0 ) ) ) by SERIES_3:def 1;
( ( Prob * ( F ^\ ( k + 1 ) ) ) . ( 0 ) ) = ( ( Prob * C ) . ( k + 1 ) )
proof
A107: ( ( F ^\ ( k + 1 ) ) . ( 0 ) ) = ( F . ( ( 0 ) + ( k + 1 ) ) ) by NAT_1:def 3;
A108: ( dom ( C * ( Special_Function4 (k,n2) ) ) ) = ( NAT ) by FUNCT_2:def 1;
A109: ( F . ( k + 1 ) ) = ( C . ( ( Special_Function4 (k,n2) ) . ( k + 1 ) ) ) by A69,A108,FUNCT_1:12;
A110: (( ( Special_Function4 (k,n2) ) . ( k + 1 ) ) = ( IFGT (( k + 1 ),( k + 1 ),( ( k + 1 ) + n2 ),( k + 1 )) ) & ( IFGT (( k + 1 ),( k + 1 ),( ( k + 1 ) + n2 ),( k + 1 )) ) = ( k + 1 )) by CKB10:def 1,XXREAL_0:def 11;
( dom ( Prob * C ) ) = ( NAT ) by FUNCT_2:def 1;
then A111: ( Prob . ( ( F ^\ ( k + 1 ) ) . ( 0 ) ) ) = ( ( Prob * C ) . ( k + 1 ) ) by A110,A109,A107,FUNCT_1:12;
( dom ( Prob * ( F ^\ ( k + 1 ) ) ) ) = ( NAT ) by FUNCT_2:def 1;
hence thesis by A111,FUNCT_1:12;
end;
then ( ( Partial_Product ( Prob * ( F ^\ ( k + 1 ) ) ) ) . ( ( 0 ) + 1 ) ) = ( ( ( Prob * C ) . ( k + 1 ) ) * ( ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . ( 0 ) ) ) by A106,SERIES_3:def 1;
hence thesis by SERIES_3:def 1;
end;
A112: (for q being (Element of ( NAT )) holds (J[ q ] implies J[ ( q + 1 ) ]))
proof
let q being (Element of ( NAT ));
assume A113: J[ q ];
A114: ( ( Prob * ( F ^\ ( k + 1 ) ) ) . ( ( q + 1 ) + 1 ) ) = ( ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . ( q + 1 ) )
proof
A115: ( ( F ^\ ( k + 1 ) ) . ( ( q + 1 ) + 1 ) ) = ( ( C * ( Special_Function4 (k,n2) ) ) . ( ( ( q + 1 ) + 1 ) + ( k + 1 ) ) ) by A69,NAT_1:def 3;
A116: ( dom ( C * ( Special_Function4 (k,n2) ) ) ) = ( NAT ) by FUNCT_2:def 1;
set j = ( ( ( q + 1 ) + 1 ) + ( k + 1 ) );
j > ( k + 1 )
proof
(( k + 1 ) < ( ( k + 1 ) + 1 ) & ( ( k + 1 ) + 1 ) <= ( ( ( k + 1 ) + 1 ) + ( q + 1 ) )) by NAT_1:13,XREAL_1:31;
hence thesis by XXREAL_0:2;
end;
then (( ( Special_Function4 (k,n2) ) . j ) = ( IFGT (j,( k + 1 ),( j + n2 ),j) ) & ( IFGT (j,( k + 1 ),( j + n2 ),j) ) = ( j + n2 )) by CKB10:def 1,XXREAL_0:def 11;
then ( ( F ^\ ( k + 1 ) ) . ( ( q + 1 ) + 1 ) ) = ( C . ( ( q + 1 ) + ( ( ( k + 1 ) + n2 ) + 1 ) ) ) by A116,A115,FUNCT_1:12;
then A117: ( Prob . ( ( F ^\ ( k + 1 ) ) . ( ( q + 1 ) + 1 ) ) ) = ( Prob . ( ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) . ( q + 1 ) ) ) by NAT_1:def 3;
(( dom ( Prob * ( F ^\ ( k + 1 ) ) ) ) = ( NAT ) & ( dom ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) ) = ( NAT )) by FUNCT_2:def 1;
then ((( ( Prob * ( F ^\ ( k + 1 ) ) ) . ( ( q + 1 ) + 1 ) ) = ( Prob . ( ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) . ( q + 1 ) ) ) & ( Prob . ( ( F ^\ ( k + 1 ) ) . ( ( q + 1 ) + 1 ) ) ) = ( ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . ( q + 1 ) )) & ( Prob . ( ( F ^\ ( k + 1 ) ) . ( ( q + 1 ) + 1 ) ) ) = ( Prob . ( ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) . ( q + 1 ) ) )) by A117,FUNCT_1:12;
hence thesis;
end;
( ( Partial_Product ( Prob * ( F ^\ ( k + 1 ) ) ) ) . ( ( q + 1 ) + 1 ) ) = ( ( ( ( Prob * C ) . ( k + 1 ) ) * ( ( Partial_Product ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) ) . q ) ) * ( ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . ( q + 1 ) ) ) by A113,A114,SERIES_3:def 1;
then ( ( Partial_Product ( Prob * ( F ^\ ( k + 1 ) ) ) ) . ( ( q + 1 ) + 1 ) ) = ( ( ( Prob * C ) . ( k + 1 ) ) * ( ( ( Partial_Product ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) ) . q ) * ( ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . ( q + 1 ) ) ) );
hence thesis by SERIES_3:def 1;
end;
(for k being (Element of ( NAT )) holds J[ k ]) from NAT_1:sch 1(A102,A112);
hence thesis;
end;
defpred J[ (Element of ( NAT )) ]
 means
((for k being (Element of ( NAT )) holds (k <= $1 implies ( C . k ) = ( F . k ))) implies ( ( Partial_Product ( Prob * ( Complement F ) ) ) . $1 ) = ( ( Partial_Product ( Prob * ( Complement C ) ) ) . $1 ));
( dom ( C * ( Special_Function4 (k,n2) ) ) ) = ( NAT ) by FUNCT_2:def 1;
then A118: ( ( C * ( Special_Function4 (k,n2) ) ) . ( 0 ) ) = ( C . ( ( Special_Function4 (k,n2) ) . ( 0 ) ) ) by FUNCT_1:12;
A119: ( IFGT (( 0 ),( k + 1 ),( ( 0 ) + n2 ),( 0 )) ) = ( 0 ) by XXREAL_0:def 11;
then ( ( F . ( 0 ) ) ` ) = ( ( C . ( 0 ) ) ` ) by CKB10:def 1,A118,A69;
then ( ( Complement F ) . ( 0 ) ) = ( ( C . ( 0 ) ) ` ) by PROB_1:def 2;
then ((( Prob . ( ( Complement F ) . ( 0 ) ) ) = ( Prob . ( ( Complement C ) . ( 0 ) ) ) & ( dom ( Prob * ( Complement F ) ) ) = ( NAT )) & ( dom ( Prob * ( Complement C ) ) ) = ( NAT )) by FUNCT_2:def 1,PROB_1:def 2;
then ((( Prob . ( ( Complement F ) . ( 0 ) ) ) = ( Prob . ( ( Complement C ) . ( 0 ) ) ) & ( ( Prob * ( Complement F ) ) . ( 0 ) ) = ( Prob . ( ( Complement F ) . ( 0 ) ) )) & ( ( Prob * ( Complement C ) ) . ( 0 ) ) = ( Prob . ( ( Complement C ) . ( 0 ) ) )) by FUNCT_1:12;
then A120: (( ( Partial_Product ( Prob * ( Complement F ) ) ) . ( 0 ) ) = ( ( Prob * ( Complement C ) ) . ( 0 ) ) & ( F . ( 0 ) ) = ( C . ( 0 ) )) by A119,CKB10:def 1,A118,A69,SERIES_3:def 1;
A121: J[ ( 0 ) ] by A120,SERIES_3:def 1;
A122: (for q being (Element of ( NAT )) holds (J[ q ] implies J[ ( q + 1 ) ]))
proof
let q being (Element of ( NAT ));
assume A123: J[ q ];
A124: ((for k being (Element of ( NAT )) holds (k <= ( q + 1 ) implies ( C . k ) = ( F . k ))) implies (for k being (Element of ( NAT )) holds (k <= q implies ( C . k ) = ( F . k ))))
proof
assume A125: (for k being (Element of ( NAT )) holds (k <= ( q + 1 ) implies ( C . k ) = ( F . k )));
let k being (Element of ( NAT ));
assume k <= q;
then k <= ( q + 1 ) by NAT_1:13;
hence thesis by A125;
end;
((for k being (Element of ( NAT )) holds (k <= ( q + 1 ) implies ( C . k ) = ( F . k ))) implies ( ( Partial_Product ( Prob * ( Complement F ) ) ) . ( q + 1 ) ) = ( ( Partial_Product ( Prob * ( Complement C ) ) ) . ( q + 1 ) ))
proof
assume A126: (for k being (Element of ( NAT )) holds (k <= ( q + 1 ) implies ( C . k ) = ( F . k )));
then (( q + 1 ) <= ( q + 1 ) implies ( ( C . ( q + 1 ) ) ` ) = ( ( F . ( q + 1 ) ) ` ));
then (( q + 1 ) <= ( q + 1 ) implies ( ( Complement C ) . ( q + 1 ) ) = ( ( F . ( q + 1 ) ) ` )) by PROB_1:def 2;
then A127: ( ( ( Partial_Product ( Prob * ( Complement F ) ) ) . q ) * ( Prob . ( ( Complement F ) . ( q + 1 ) ) ) ) = ( ( ( Partial_Product ( Prob * ( Complement C ) ) ) . q ) * ( Prob . ( ( Complement C ) . ( q + 1 ) ) ) ) by A126,A124,A123,PROB_1:def 2;
(( dom ( Prob * ( Complement C ) ) ) = ( NAT ) & ( dom ( Prob * ( Complement F ) ) ) = ( NAT )) by FUNCT_2:def 1;
then (( ( Prob * ( Complement C ) ) . ( q + 1 ) ) = ( Prob . ( ( Complement C ) . ( q + 1 ) ) ) & ( ( Prob * ( Complement F ) ) . ( q + 1 ) ) = ( Prob . ( ( Complement F ) . ( q + 1 ) ) )) by FUNCT_1:12;
then ( ( Partial_Product ( Prob * ( Complement F ) ) ) . ( q + 1 ) ) = ( ( ( Partial_Product ( Prob * ( Complement C ) ) ) . q ) * ( ( Prob * ( Complement C ) ) . ( q + 1 ) ) ) by A127,SERIES_3:def 1;
hence thesis by SERIES_3:def 1;
end;
hence thesis;
end;
A128: (for k being (Element of ( NAT )) holds J[ k ]) from NAT_1:sch 1(A121,A122);
(for q being (Element of ( NAT )) holds (q <= k implies ( C . q ) = ( F . q )))
proof
let q being (Element of ( NAT ));
assume q <= k;
then A129: q <= ( k + 1 ) by NAT_1:13;
A130: ( dom ( C * ( Special_Function4 (k,n2) ) ) ) = ( NAT ) by FUNCT_2:def 1;
(( ( Special_Function4 (k,n2) ) . q ) = ( IFGT (q,( k + 1 ),( q + n2 ),q) ) & ( IFGT (q,( k + 1 ),( q + n2 ),q) ) = q) by CKB10:def 1,A129,XXREAL_0:def 11;
hence thesis by A130,A69,FUNCT_1:12;
end;
then ( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . k ) /\ ( ( C . ( k + 1 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) ) = ( ( ( Partial_Product ( Prob * ( Complement C ) ) ) . k ) * ( ( ( Prob * C ) . ( k + 1 ) ) * ( ( Partial_Product ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) ) . q ) ) ) by A128,A101,A86,A77,A76;
hence thesis by XBOOLE_1:16;
end;
hence thesis by A67,A66,PROB_1:33,XBOOLE_1:17;
end;
( ( Prob * C ) . ( k + 1 ) ) = ( 1 - ( ( Prob * ( Complement C ) ) . ( k + 1 ) ) )
proof
(( C . ( k + 1 ) ) = ( ( ( C . ( k + 1 ) ) ` ) ` ) & ( ( ( C . ( k + 1 ) ) ` ) ` ) = ( Omega \ ( ( C . ( k + 1 ) ) ` ) )) by SUBSET_1:def 4;
then (( Prob . ( C . ( k + 1 ) ) ) = ( Prob . ( ( [#] Sigma ) \ ( ( C . ( k + 1 ) ) ` ) ) ) & ( ( C . ( k + 1 ) ) ` ) is (Event of Sigma)) by PROB_1:20;
then A131: ( Prob . ( C . ( k + 1 ) ) ) = ( 1 - ( Prob . ( ( C . ( k + 1 ) ) ` ) ) ) by PROB_1:32;
( dom ( Prob * C ) ) = ( NAT ) by FUNCT_2:def 1;
then A132: ( ( Prob * C ) . ( k + 1 ) ) = ( 1 - ( Prob . ( ( C . ( k + 1 ) ) ` ) ) ) by A131,FUNCT_1:12;
( dom ( Prob * ( Complement C ) ) ) = ( NAT ) by FUNCT_2:def 1;
then ( ( Prob * ( Complement C ) ) . ( k + 1 ) ) = ( Prob . ( ( Complement C ) . ( k + 1 ) ) ) by FUNCT_1:12;
hence thesis by A132,PROB_1:def 2;
end;
then ( Prob . ( ( ( Partial_Intersection ( Complement C ) ) . ( k + 1 ) ) /\ ( ( Partial_Intersection ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) . q ) ) ) = ( ( ( ( Prob * ( Complement C ) ) . ( k + 1 ) ) * ( ( Partial_Product ( Prob * ( Complement C ) ) ) . k ) ) * ( ( Partial_Product ( Prob * ( C ^\ ( ( ( k + 1 ) + n2 ) + 1 ) ) ) ) . q ) ) by A68;
hence thesis by SERIES_3:def 1;
end;
A133: (for k being (Element of ( NAT )) holds J[ k ]) from NAT_1:sch 1(A36,A61);
(ex e being (sequence of ( NAT )) st ((( A * e ) = A & e is  one-to-one) & ( dom e ) <> ( {} )))
proof
set e = ( Special_Function2 ( 0 ) );
A134: ( dom e ) <> ( {} );
((A is (sequence of ( bool Omega )) & ( A * e ) is (sequence of ( bool Omega ))) & (for n being set holds (n in ( NAT ) implies ( ( A * e ) . n ) = ( A . n ))))
proof
A135: (for n being set holds (n in ( NAT ) implies (( ( A * e ) . n ) = ( A . n ) & ( A . ( e . n ) ) = ( A . n ))))
proof
let n being set;
assume n in ( NAT );
then reconsider n as (Element of ( NAT ));
A136: ( e . n ) = ( n + ( 0 ) ) by CKB8:def 1;
( dom ( A * e ) ) = ( NAT ) by FUNCT_2:def 1;
hence thesis by A136,FUNCT_1:12;
end;
thus thesis by A135;
end;
hence thesis by A134,FUNCT_2:12;
end;
hence thesis by A133;
end;
( ( n - n1 ) - 1 ) is (Element of ( NAT ))
proof
( n1 + 1 ) <= n by A1,NAT_1:13;
then ( ( n1 + 1 ) - 1 ) <= ( n - 1 ) by XREAL_1:9;
then (n1 <= ( n - 1 ) & ( n - 1 ) is (Element of ( NAT ))) by A1,NAT_1:20;
then ( ( n - 1 ) - n1 ) is (Element of ( NAT )) by NAT_1:21;
hence thesis;
end;
hence thesis by A35;
end;
