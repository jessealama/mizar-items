environ
vocabularies BOR_CANT,REALSET1,ABIAN,SIN_COS,ARYTM_3,CARD_3,XREAL_0,EQREL_1,COMPLEX1,NUMBERS,ORDINAL1,ZFMISC_1,CARD_1,XXREAL_0,NEWTON,REAL_1,RELAT_1,PROB_1,SEQ_1,SEQ_2,ARYTM_1,ORDINAL2,RPR_1,XBOOLE_0,SUBSET_1,PROB_2,SERIES_1,NAT_1,FUNCT_1,PROB_3,SERIES_3,LIMFUNC1,SETLIM_1,XXREAL_2,FUNCOP_1;
notations XXREAL_0,XCMPLX_0,XREAL_0,ORDINAL1,REAL_1,XBOOLE_0,SUBSET_1,NUMBERS,NAT_1,COMPLEX1,SEQ_1,SEQ_2,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,PROB_1,PROB_2,SETLIM_1,SERIES_1,PROB_3,VALUED_0,VALUED_1,ZFMISC_1,LIMFUNC1,SERIES_3,NEWTON,ABIAN,SIN_COS,CKB1,CKB4,CKB7,CKB8,CKB9,CKB10,CKB16,CKB20,CKB22,CKB23,CKB25,CKB30;
definitions FUNCT_1,FUNCT_2,SIN_COS,PROB_1,SETLIM_1,NEWTON,CKB4,CKB7,CKB8,CKB9,CKB10,CKB16,CKB20,CKB22,CKB23,CKB25,CKB30;
theorems XCMPLX_0,SIN_COS,SERIES_1,PROB_1,SEQ_2,PROB_3,SUBSET_1,XBOOLE_0,XBOOLE_1,ABIAN,NAT_1,FUNCT_1,FUNCT_2,XXREAL_0,ORDINAL1,TARSKI,XREAL_1,PROB_2,ABSVALUE,VALUED_1,SEQ_4,LIMFUNC1,SETLIM_1,SERIES_3,NEWTON,POWER,FUNCOP_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34;
schemes NAT_1,RECDEF_1,FUNCT_2;
registrations FUNCT_2,FINSEQ_2,XCMPLX_0,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XREAL_0,NAT_1,MEMBERED,VALUED_0,VALUED_1,ABIAN,XXREAL_0,RELAT_1,SEQ_4,FINSEQ_1,NEWTON,FUNCOP_1,PROB_2,PROB_3,SETLIM_1,RELSET_1,CKB11,CKB12,CKB13,CKB14,CKB21,CKB24;
constructors RELSET_1,BINARITH,SQUARE_1,COMSEQ_3,RVSUM_1,SIN_COS,REAL_1,LIMFUNC1,SETLIM_1,SEQ_2,SERIES_1,KURATO_0,RINFSUP1,SEQ_1,PROB_3,SERIES_3,ABIAN,NEWTON,NUMBERS,NAT_D,SEQ_4,RFUNCT_1,RCOMP_1,SEQM_3,FUNCT_4,CKB1,CKB4,CKB7,CKB8,CKB9,CKB10,CKB16,CKB20,CKB22,CKB23,CKB25,CKB30;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve Omega for non empty set;
reserve Sigma for (SigmaField of Omega);
reserve Prob for (Probability of Sigma);
reserve A for (SetSequence of Sigma);
theorem
Th17: (((not ( Partial_Sums ( Prob * A ) ) is  convergent) & A is_all_independent_wrt Prob) implies (( Prob . ( lim_inf ( Complement A ) ) ) = ( 0 ) & ( Prob . ( lim_sup A ) ) = 1))
proof
assume A1: (not ( Partial_Sums ( Prob * A ) ) is  convergent);
assume A2: A is_all_independent_wrt Prob;
A3: (for n being (Element of ( NAT )) holds ( ( Prob * A ) . n ) >= ( 0 ))
proof
let n being (Element of ( NAT ));
( dom ( Prob * A ) ) = ( NAT ) by FUNCT_2:def 1;
then ( ( Prob * A ) . n ) = ( Prob . ( A . n ) ) by FUNCT_1:12;
hence thesis by PROB_1:def 8;
end;
A4: (((not ( Prob * A ) is  summable) implies (not ( Partial_Sums ( Prob * A ) ) is  bounded_above)) & (not ( Prob * A ) is  summable)) by A3,A1,SERIES_1:17,SERIES_1:def 2;
( Partial_Sums ( Prob * A ) ) is  divergent_to+infty by A4,A3,LIMFUNC1:29,SERIES_1:16;
hence thesis by A2,CKB34:1;
end;
