environ
vocabularies BOR_CANT,REALSET1,ABIAN,SIN_COS,ARYTM_3,CARD_3,XREAL_0,EQREL_1,COMPLEX1,NUMBERS,ORDINAL1,ZFMISC_1,CARD_1,XXREAL_0,NEWTON,REAL_1,RELAT_1,PROB_1,SEQ_1,SEQ_2,ARYTM_1,ORDINAL2,RPR_1,XBOOLE_0,SUBSET_1,PROB_2,SERIES_1,NAT_1,FUNCT_1,PROB_3,SERIES_3,LIMFUNC1,SETLIM_1,XXREAL_2,FUNCOP_1;
notations XXREAL_0,XCMPLX_0,XREAL_0,ORDINAL1,REAL_1,XBOOLE_0,SUBSET_1,NUMBERS,NAT_1,COMPLEX1,SEQ_1,SEQ_2,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,PROB_1,PROB_2,SETLIM_1,SERIES_1,PROB_3,VALUED_0,VALUED_1,ZFMISC_1,LIMFUNC1,SERIES_3,NEWTON,ABIAN,SIN_COS,CKB1,CKB4,CKB7,CKB8,CKB9,CKB10,CKB16,CKB20,CKB22,CKB23,CKB25,CKB30;
definitions FUNCT_1,FUNCT_2,SIN_COS,PROB_1,SETLIM_1,NEWTON,CKB4,CKB7,CKB8,CKB9,CKB10,CKB16,CKB20,CKB22,CKB23,CKB25,CKB30;
theorems XCMPLX_0,SIN_COS,SERIES_1,PROB_1,SEQ_2,PROB_3,SUBSET_1,XBOOLE_0,XBOOLE_1,ABIAN,NAT_1,FUNCT_1,FUNCT_2,XXREAL_0,ORDINAL1,TARSKI,XREAL_1,PROB_2,ABSVALUE,VALUED_1,SEQ_4,LIMFUNC1,SETLIM_1,SERIES_3,NEWTON,POWER,FUNCOP_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31;
schemes NAT_1,RECDEF_1,FUNCT_2;
registrations FUNCT_2,FINSEQ_2,XCMPLX_0,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XREAL_0,NAT_1,MEMBERED,VALUED_0,VALUED_1,ABIAN,XXREAL_0,RELAT_1,SEQ_4,FINSEQ_1,NEWTON,FUNCOP_1,PROB_2,PROB_3,SETLIM_1,RELSET_1,CKB11,CKB12,CKB13,CKB14,CKB21,CKB24;
constructors RELSET_1,BINARITH,SQUARE_1,COMSEQ_3,RVSUM_1,SIN_COS,REAL_1,LIMFUNC1,SETLIM_1,SEQ_2,SERIES_1,KURATO_0,RINFSUP1,SEQ_1,PROB_3,SERIES_3,ABIAN,NEWTON,NUMBERS,NAT_D,SEQ_4,RFUNCT_1,RCOMP_1,SEQM_3,FUNCT_4,CKB1,CKB4,CKB7,CKB8,CKB9,CKB10,CKB16,CKB20,CKB22,CKB23,CKB25,CKB30;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve Omega for non  empty set;
reserve Sigma for (SigmaField of Omega);
reserve A for (SetSequence of Sigma);
reserve n for (Element of ( NAT ));
theorem
Th14: ((((((for X being set holds (for A being (SetSequence of X) holds (for n being (Element of ( NAT )) holds (for x being set holds ((ex k being (Element of ( NAT )) st x in ( ( A ^\ n ) . k )) iff (ex k being (Element of ( NAT )) st (k >= n & x in ( A . k )))))))) & (for X being set holds (for A being (SetSequence of X) holds (for x being set holds (x in ( Intersection ( Union_Shift_Seq A ) ) iff (for m being (Element of ( NAT )) holds (ex n being (Element of ( NAT )) st (n >= m & x in ( A . n ))))))))) & (for A being (SetSequence of Sigma) holds (for x being set holds (x in ( @Intersection ( Union_Shift_Seq A ) ) iff (for m being (Element of ( NAT )) holds (ex n being (Element of ( NAT )) st (n >= m & x in ( A . n )))))))) & (for X being set holds (for A being (SetSequence of X) holds (for x being set holds (x in ( Union ( Intersect_Shift_Seq A ) ) iff (ex n being (Element of ( NAT )) st (for k being (Element of ( NAT )) holds (k >= n implies x in ( A . k ))))))))) & (for A being (SetSequence of Sigma) holds (for x being set holds (x in ( Union ( Intersect_Shift_Seq A ) ) iff (ex n being (Element of ( NAT )) st (for k being (Element of ( NAT )) holds (k >= n implies x in ( A . k )))))))) & (for A being (SetSequence of Sigma) holds (for x being (Element of Omega) holds (x in ( Union ( Intersect_Shift_Seq ( Complement A ) ) ) iff (ex n being (Element of ( NAT )) st (for k being (Element of ( NAT )) holds (k >= n implies (not x in ( A . k )))))))))
proof
A1: (for X being set holds (for A being (SetSequence of X) holds (for n being (Element of ( NAT )) holds (for x being set holds ((ex k being (Element of ( NAT )) st x in ( ( A ^\ n ) . k )) iff (ex k being (Element of ( NAT )) st (k >= n & x in ( A . k ))))))))
proof
let X being set;
let A being (SetSequence of X);
let n being (Element of ( NAT ));
let x being set;
hereby
assume (ex k being (Element of ( NAT )) st x in ( ( A ^\ n ) . k ));
then consider k being (Element of ( NAT )) such that A2: x in ( ( A ^\ n ) . k );
A3: x in ( A . ( k + n ) ) by A2,NAT_1:def 3;
consider k being (Element of ( NAT )) such that A4: x in ( A . ( k + n ) ) by A3;
consider k being (Element of ( NAT )) such that A5: (k >= n & x in ( A . k )) by A4,NAT_1:11;
thus (ex k being (Element of ( NAT )) st (k >= n & x in ( A . k ))) by A5;
end;
assume (ex k being (Element of ( NAT )) st (k >= n & x in ( A . k )));
then consider k being (Element of ( NAT )) such that A6: (k >= n & x in ( A . k ));
consider knat being Nat such that A7: k = ( n + knat ) by A6,NAT_1:10;
reconsider knat as (Element of ( NAT )) by ORDINAL1:def 12;
(x in ( A . k ) implies x in ( ( A ^\ n ) . knat )) by A7,NAT_1:def 3;
hence thesis by A6;
end;
A8: (for X being set holds (for A being (SetSequence of X) holds (for x being set holds (x in ( Intersection ( Union_Shift_Seq A ) ) iff (for m being (Element of ( NAT )) holds (ex n being (Element of ( NAT )) st (n >= m & x in ( A . n ))))))))
proof
let X being set;
let A being (SetSequence of X);
let x being set;
hereby
assume A9: x in ( Intersection ( Union_Shift_Seq A ) );
A10: (for n being (Element of ( NAT )) holds (x in ( ( Union_Shift_Seq A ) . n ) implies (ex k being (Element of ( NAT )) st (k >= n & x in ( A . k )))))
proof
let n being (Element of ( NAT ));
assume A11: x in ( ( Union_Shift_Seq A ) . n );
A12: (x in ( ( Union_Shift_Seq A ) . n ) implies x in ( Union ( A ^\ n ) )) by CKB20:def 1;
A13: (ex k being (Element of ( NAT )) st x in ( ( A ^\ n ) . k )) by A11,A12,PROB_1:12;
consider k being (Element of ( NAT )) such that A14: (k >= n & x in ( A . k )) by A13,A1;
take k;
thus thesis by A14;
end;
A15: (for m being (Element of ( NAT )) holds (ex n being (Element of ( NAT )) st (n >= m & x in ( A . n ))))
proof
let m being (Element of ( NAT ));
x in ( ( Union_Shift_Seq A ) . m ) by A9,PROB_1:13;
hence thesis by A10;
end;
thus (for m being (Element of ( NAT )) holds (ex n being (Element of ( NAT )) st (n >= m & x in ( A . n )))) by A15;
end;
assume A16: (for m being (Element of ( NAT )) holds (ex n being (Element of ( NAT )) st (n >= m & x in ( A . n ))));
A17: (for m being (Element of ( NAT )) holds ((ex n being (Element of ( NAT )) st (n >= m & x in ( A . n ))) implies x in ( ( Union_Shift_Seq A ) . m )))
proof
let m being (Element of ( NAT ));
assume (ex n being (Element of ( NAT )) st (n >= m & x in ( A . n )));
then consider n being (Element of ( NAT )) such that A18: (n >= m & x in ( A . n ));
(ex k being (Element of ( NAT )) st x in ( ( A ^\ m ) . k )) by A18,A1;
then x in ( Union ( A ^\ m ) ) by PROB_1:12;
hence thesis by CKB20:def 1;
end;
(for m being (Element of ( NAT )) holds x in ( ( Union_Shift_Seq A ) . m ))
proof
let m being (Element of ( NAT ));
(ex n being (Element of ( NAT )) st (n >= m & x in ( A . n ))) by A16;
hence thesis by A17;
end;
hence thesis by PROB_1:13;
end;
A19: (for A being (SetSequence of Sigma) holds (for x being set holds (x in ( @Intersection ( Union_Shift_Seq A ) ) iff (for m being (Element of ( NAT )) holds (ex n being (Element of ( NAT )) st (n >= m & x in ( A . n )))))))
proof
let A being (SetSequence of Sigma);
let x being set;
( @Intersection ( Union_Shift_Seq A ) ) = ( Intersection ( Union_Shift_Seq A ) ) by PROB_2:def 1;
hence thesis by A8;
end;
A20: (for X being set holds (for A being (SetSequence of X) holds (for x being set holds (x in ( Union ( Intersect_Shift_Seq A ) ) iff (ex n being (Element of ( NAT )) st (for k being (Element of ( NAT )) holds (k >= n implies x in ( A . k ))))))))
proof
let X being set;
let A being (SetSequence of X);
let x being set;
hereby
assume x in ( Union ( Intersect_Shift_Seq A ) );
then consider n being (Element of ( NAT )) such that A21: x in ( ( Intersect_Shift_Seq A ) . n ) by PROB_1:12;
A22: ( ( Intersect_Shift_Seq A ) . n ) = ( Intersection ( A ^\ n ) ) by CKB23:def 1;
(for k being (Element of ( NAT )) holds (k >= n implies x in ( A . k )))
proof
let k being (Element of ( NAT ));
assume A23: n <= k;
consider knat being Nat such that A24: k = ( n + knat ) by A23,NAT_1:10;
reconsider knat as (Element of ( NAT )) by ORDINAL1:def 12;
A25: (x in ( A . k ) iff x in ( ( A ^\ n ) . knat )) by A24,NAT_1:def 3;
thus thesis by A22,A21,A25,PROB_1:13;
end;
hence (ex n being (Element of ( NAT )) st (for k being (Element of ( NAT )) holds (k >= n implies x in ( A . k ))));
end;
assume (ex n being (Element of ( NAT )) st (for k being (Element of ( NAT )) holds (k >= n implies x in ( A . k ))));
then consider n being (Element of ( NAT )) such that A26: (for k being (Element of ( NAT )) holds (k >= n implies x in ( A . k )));
set knat = the Nat;
(for s being (Element of ( NAT )) holds x in ( ( A ^\ n ) . s ))
proof
let s being (Element of ( NAT ));
(x in ( ( A ^\ n ) . s ) iff x in ( A . ( n + s ) )) by NAT_1:def 3;
hence thesis by A26,NAT_1:12;
end;
then x in ( Intersection ( A ^\ n ) ) by PROB_1:13;
then x in ( ( Intersect_Shift_Seq A ) . n ) by CKB23:def 1;
hence thesis by PROB_1:12;
end;
(for A being (SetSequence of Sigma) holds (for x being (Element of Omega) holds (x in ( Union ( Intersect_Shift_Seq ( Complement A ) ) ) iff (ex n being (Element of ( NAT )) st (for k being (Element of ( NAT )) holds (k >= n implies (not x in ( A . k ))))))))
proof
let A being (SetSequence of Sigma);
let x being (Element of Omega);
hereby
assume x in ( Union ( Intersect_Shift_Seq ( Complement A ) ) );
then consider n being (Element of ( NAT )) such that A27: x in ( ( Intersect_Shift_Seq ( Complement A ) ) . n ) by PROB_1:12;
A28: ( ( Intersect_Shift_Seq ( Complement A ) ) . n ) = ( Intersection ( ( Complement A ) ^\ n ) ) by CKB23:def 1;
set m = the (Element of ( NAT ));
(for k being (Element of ( NAT )) holds (k >= n implies (not x in ( A . k ))))
proof
let k being (Element of ( NAT ));
assume A29: n <= k;
consider knat being Nat such that A30: k = ( n + knat ) by A29,NAT_1:10;
reconsider knat as (Element of ( NAT )) by ORDINAL1:def 12;
A31: (x in ( ( Complement A ) . k ) iff x in ( ( ( Complement A ) ^\ n ) . knat )) by A30,NAT_1:def 3;
x in ( ( A . k ) ` ) by A28,A27,A31,PROB_1:13,PROB_1:def 2;
then x in ( Omega \ ( A . k ) ) by SUBSET_1:def 4;
hence thesis by XBOOLE_0:def 5;
end;
hence (ex n being (Element of ( NAT )) st (for k being (Element of ( NAT )) holds (k >= n implies (not x in ( A . k )))));
end;
assume (ex n being (Element of ( NAT )) st (for k being (Element of ( NAT )) holds (k >= n implies (not x in ( A . k )))));
then consider n being (Element of ( NAT )) such that A32: (for k being (Element of ( NAT )) holds (k >= n implies (not x in ( A . k ))));
set k = the (Element of ( NAT ));
A33: (for k being (Element of ( NAT )) holds (n <= k implies x in ( ( Complement A ) . k )))
proof
let k being (Element of ( NAT ));
assume A34: n <= k;
A35: (not x in ( A . k )) by A34,A32;
x in ( Omega \ ( A . k ) ) by A35,XBOOLE_0:def 5;
then x in ( ( A . k ) ` ) by SUBSET_1:def 4;
hence thesis by PROB_1:def 2;
end;
(for s being (Element of ( NAT )) holds x in ( ( ( Complement A ) ^\ n ) . s ))
proof
let s being (Element of ( NAT ));
(x in ( ( ( Complement A ) ^\ n ) . s ) iff x in ( ( Complement A ) . ( n + s ) )) by NAT_1:def 3;
hence thesis by A33,NAT_1:12;
end;
then x in ( Intersection ( ( Complement A ) ^\ n ) ) by PROB_1:13;
then x in ( ( Intersect_Shift_Seq ( Complement A ) ) . n ) by CKB23:def 1;
hence x in ( Union ( Intersect_Shift_Seq ( Complement A ) ) ) by PROB_1:12;
end;
hence thesis by A1,A8,A19,A20;
end;
