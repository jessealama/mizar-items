environ
vocabularies BOR_CANT,REALSET1,ABIAN,SIN_COS,ARYTM_3,CARD_3,XREAL_0,EQREL_1,COMPLEX1,NUMBERS,ORDINAL1,ZFMISC_1,CARD_1,XXREAL_0,NEWTON,REAL_1,RELAT_1,PROB_1,SEQ_1,SEQ_2,ARYTM_1,ORDINAL2,RPR_1,XBOOLE_0,SUBSET_1,PROB_2,SERIES_1,NAT_1,FUNCT_1,PROB_3,SERIES_3,LIMFUNC1,SETLIM_1,XXREAL_2,FUNCOP_1;
notations XXREAL_0,XCMPLX_0,XREAL_0,ORDINAL1,REAL_1,XBOOLE_0,SUBSET_1,NUMBERS,NAT_1,COMPLEX1,SEQ_1,SEQ_2,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,PROB_1,PROB_2,SETLIM_1,SERIES_1,PROB_3,VALUED_0,VALUED_1,ZFMISC_1,LIMFUNC1,SERIES_3,NEWTON,ABIAN,SIN_COS,CKB1,CKB4,CKB7,CKB8,CKB9,CKB10,CKB16;
definitions FUNCT_1,FUNCT_2,SIN_COS,PROB_1,SETLIM_1,NEWTON,CKB4,CKB7,CKB8,CKB9,CKB10,CKB16;
theorems XCMPLX_0,SIN_COS,SERIES_1,PROB_1,SEQ_2,PROB_3,SUBSET_1,XBOOLE_0,XBOOLE_1,ABIAN,NAT_1,FUNCT_1,FUNCT_2,XXREAL_0,ORDINAL1,TARSKI,XREAL_1,PROB_2,ABSVALUE,VALUED_1,SEQ_4,LIMFUNC1,SETLIM_1,SERIES_3,NEWTON,POWER,FUNCOP_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB15,CKB16,CKB17;
schemes NAT_1,RECDEF_1,FUNCT_2;
registrations FUNCT_2,FINSEQ_2,XCMPLX_0,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XREAL_0,NAT_1,MEMBERED,VALUED_0,VALUED_1,ABIAN,XXREAL_0,RELAT_1,SEQ_4,FINSEQ_1,NEWTON,FUNCOP_1,PROB_2,PROB_3,SETLIM_1,RELSET_1,CKB11,CKB12,CKB13,CKB14;
constructors RELSET_1,BINARITH,SQUARE_1,COMSEQ_3,RVSUM_1,SIN_COS,REAL_1,LIMFUNC1,SETLIM_1,SEQ_2,SERIES_1,KURATO_0,RINFSUP1,SEQ_1,PROB_3,SERIES_3,ABIAN,NEWTON,NUMBERS,NAT_D,SEQ_4,RFUNCT_1,RCOMP_1,SEQM_3,FUNCT_4,CKB1,CKB4,CKB7,CKB8,CKB9,CKB10,CKB16;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve Omega for non empty set;
reserve Sigma for (SigmaField of Omega);
reserve A for (SetSequence of Sigma);
reserve n for (Element of ( NAT ));
theorem
Th7: ( ( Partial_Intersection ( Complement A ) ) . n ) = ( ( ( Partial_Union A ) . n ) ` )
proof
(for x being set holds (x in ( ( Partial_Intersection ( Complement A ) ) . n ) iff x in ( ( ( Partial_Union A ) . n ) ` )))
proof
let x being set;
hereby
assume A1: x in ( ( Partial_Intersection ( Complement A ) ) . n );
(for knat being Nat holds (knat <= n implies (not x in ( A . knat ))))
proof
let knat being Nat;
assume knat <= n;
then A2: x in ( ( Complement A ) . knat ) by A1,PROB_3:25;
reconsider knat as (Element of ( NAT )) by ORDINAL1:def 12;
( ( Complement A ) . knat ) = ( ( A . knat ) ` ) by PROB_1:def 2;
then ( ( Complement A ) . knat ) = ( Omega \ ( A . knat ) ) by SUBSET_1:def 4;
hence thesis by A2,XBOOLE_0:def 5;
end;
then A3: (not x in ( ( Partial_Union A ) . n )) by PROB_3:26;
x in ( Omega \ ( ( Partial_Union A ) . n ) ) by A1,A3,XBOOLE_0:def 5;
hence x in ( ( ( Partial_Union A ) . n ) ` ) by SUBSET_1:def 4;
end;
assume A4: x in ( ( ( Partial_Union A ) . n ) ` );
x in ( Omega \ ( ( Partial_Union A ) . n ) ) by A4,SUBSET_1:def 4;
then A5: (x in Omega & (not x in ( ( Partial_Union A ) . n ))) by XBOOLE_0:def 5;
(for knat being Nat holds (knat <= n implies x in ( ( Complement A ) . knat )))
proof
let knat being Nat;
assume knat <= n;
then (x in Omega & (not x in ( A . knat ))) by A5,PROB_3:26;
then A6: x in ( Omega \ ( A . knat ) ) by XBOOLE_0:def 5;
reconsider knat as (Element of ( NAT )) by ORDINAL1:def 12;
x in ( ( A . knat ) ` ) by A6,SUBSET_1:def 4;
hence thesis by PROB_1:def 2;
end;
hence x in ( ( Partial_Intersection ( Complement A ) ) . n ) by PROB_3:25;
end;
hence thesis by TARSKI:1;
end;
