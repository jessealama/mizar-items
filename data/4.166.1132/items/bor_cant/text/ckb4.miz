environ
vocabularies BOR_CANT,REALSET1,ABIAN,SIN_COS,ARYTM_3,CARD_3,XREAL_0,EQREL_1,COMPLEX1,NUMBERS,ORDINAL1,ZFMISC_1,CARD_1,XXREAL_0,NEWTON,REAL_1,RELAT_1,PROB_1,SEQ_1,SEQ_2,ARYTM_1,ORDINAL2,RPR_1,XBOOLE_0,SUBSET_1,PROB_2,SERIES_1,NAT_1,FUNCT_1,PROB_3,SERIES_3,LIMFUNC1,SETLIM_1,XXREAL_2,FUNCOP_1;
notations XXREAL_0,XCMPLX_0,XREAL_0,ORDINAL1,REAL_1,XBOOLE_0,SUBSET_1,NUMBERS,NAT_1,COMPLEX1,SEQ_1,SEQ_2,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,PROB_1,PROB_2,SETLIM_1,SERIES_1,PROB_3,VALUED_0,VALUED_1,ZFMISC_1,LIMFUNC1,SERIES_3,NEWTON,ABIAN,SIN_COS,CKB1;
definitions FUNCT_1,FUNCT_2,SIN_COS,PROB_1,SETLIM_1,NEWTON;
theorems XCMPLX_0,SIN_COS,SERIES_1,PROB_1,SEQ_2,PROB_3,SUBSET_1,XBOOLE_0,XBOOLE_1,ABIAN,NAT_1,FUNCT_1,FUNCT_2,XXREAL_0,ORDINAL1,TARSKI,XREAL_1,PROB_2,ABSVALUE,VALUED_1,SEQ_4,LIMFUNC1,SETLIM_1,SERIES_3,NEWTON,POWER,FUNCOP_1,CKB2,CKB3;
schemes NAT_1,RECDEF_1,FUNCT_2;
registrations FUNCT_2,FINSEQ_2,XCMPLX_0,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XREAL_0,NAT_1,MEMBERED,VALUED_0,VALUED_1,ABIAN,XXREAL_0,RELAT_1,SEQ_4,FINSEQ_1,NEWTON,FUNCOP_1,PROB_2,PROB_3,SETLIM_1,RELSET_1;
constructors RELSET_1,BINARITH,SQUARE_1,COMSEQ_3,RVSUM_1,SIN_COS,REAL_1,LIMFUNC1,SETLIM_1,SEQ_2,SERIES_1,KURATO_0,RINFSUP1,SEQ_1,PROB_3,SERIES_3,ABIAN,NEWTON,NUMBERS,NAT_D,SEQ_4,RFUNCT_1,RCOMP_1,SEQM_3,FUNCT_4,CKB1;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
definition
let s being Real_Sequence;
func JSum s -> Real_Sequence
means
:Def1: (for d being Nat holds ( it . d ) = ( Sum ( ( - ( s . d ) ) rExpSeq ) ));
existence
proof
deffunc U((Element of ( NAT ))) = ( Sum ( ( - ( s . $1 ) ) rExpSeq ) );
consider f being Real_Sequence such that A1: (for d being (Element of ( NAT )) holds ( f . d ) = U(d)) from FUNCT_2:sch 4;
take f;
let d being Nat;
d in ( NAT ) by ORDINAL1:def 12;
hence thesis by A1;
end;
uniqueness
proof
let f1 being Real_Sequence,f2 being Real_Sequence;
assume that
A2: (for d being Nat holds ( f1 . d ) = ( Sum ( ( - ( s . d ) ) rExpSeq ) ))
and
A3: (for d being Nat holds ( f2 . d ) = ( Sum ( ( - ( s . d ) ) rExpSeq ) ));
let d being (Element of ( NAT ));
( f1 . d ) = ( Sum ( ( - ( s . d ) ) rExpSeq ) ) by A2;
hence thesis by A3;
end;
end;
