environ
vocabularies LATTICES,SUBSET_1,XBOOLE_0,PBOOLE,EQREL_1,CARD_FIL,STRUCT_0,TARSKI,ORDINAL1,ZFMISC_1,SETFAM_1,INT_2,XBOOLEAN,BINOP_1,REALSET1,FUNCT_1,RELAT_1,MCART_1,XXREAL_2,RELAT_2,FILTER_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,FUNCT_1,MCART_1,ORDINAL1,RELAT_2,FUNCT_2,BINOP_1,REALSET1,STRUCT_0,LATTICES,DOMAIN_1,RELAT_1,RELSET_1,EQREL_1,CKB8,CKB16,CKB17,CKB21,CKB25,CKB32,CKB34,CKB36,CKB37,CKB45,CKB65,CKB81;
definitions TARSKI,XBOOLE_0,LATTICES,RELAT_1,RELAT_2,BINOP_1,REALSET1,STRUCT_0,CKB16,CKB17,CKB21,CKB25,CKB32,CKB34,CKB37,CKB45,CKB65,CKB81;
theorems TARSKI,ZFMISC_1,SETFAM_1,FUNCT_1,MCART_1,FUNCT_2,LATTICES,RELAT_1,ORDERS_1,RLSUB_2,WELLSET1,RELSET_1,ORDINAL1,XBOOLE_0,XBOOLE_1,PARTFUN1,RELAT_2,SUBSET_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB37,CKB39,CKB43,CKB44,CKB45,CKB47,CKB48,CKB49,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83;
schemes RELAT_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,LATTICES,CKB35,CKB38,CKB40,CKB41,CKB42,CKB46,CKB50,CKB66,CKB75;
constructors SETFAM_1,RELAT_2,ORDINAL1,PARTFUN1,BINOP_1,REALSET1,LATTICES,RELSET_1,CKB16,CKB17,CKB21,CKB25,CKB32,CKB34,CKB37,CKB45,CKB65,CKB81;
requirements SUBSET,BOOLE;
begin
reserve L for Lattice;
reserve p for (Element of L);
reserve p1 for (Element of L);
reserve q for (Element of L);
reserve q1 for (Element of L);
reserve x for set;
reserve y for set;
reserve F for (Filter of L);
definition
let L;
let F;
func equivalence_wrt F -> Relation
means
:Def12: (( field it ) c= (the carrier of L) & (for p holds (for q holds ([ p,q ] in it iff ( p <=> q ) in F))));
existence
proof
defpred P[ set,set ]
 means
(ex p st (ex q st (($1 = p & $2 = q) & ( p <=> q ) in F)));
consider R being Relation such that A1: (for x holds (for y holds ([ x,y ] in R iff ((x in (the carrier of L) & y in (the carrier of L)) & P[ x,y ])))) from RELAT_1:sch 1;
take R;
thus ( field R ) c= (the carrier of L)
proof
let x;
assume x in ( field R );
then (ex y st ([ x,y ] in R or [ y,x ] in R)) by WELLSET1:1;
hence thesis by A1;
end;

let p;
let q;
thus ([ p,q ] in R implies ( p <=> q ) in F)
proof
assume [ p,q ] in R;
then (ex p1 st (ex q1 st ((p = p1 & q = q1) & ( p1 <=> q1 ) in F))) by A1;
hence thesis;
end;

thus thesis by A1;
end;
uniqueness
proof
let R1 being Relation,R2 being Relation;
assume that
A2: ( field R1 ) c= (the carrier of L)
and
A3: (for p holds (for q holds ([ p,q ] in R1 iff ( p <=> q ) in F)))
and
A4: ( field R2 ) c= (the carrier of L)
and
A5: (for p holds (for q holds ([ p,q ] in R2 iff ( p <=> q ) in F)));
let x;
let y;
thus ([ x,y ] in R1 implies [ x,y ] in R2)
proof
assume A6: [ x,y ] in R1;
then (x in ( field R1 ) & y in ( field R1 )) by RELAT_1:15;
then reconsider p = x,q = y as (Element of L) by A2;
( p <=> q ) in F by A3,A6;
hence thesis by A5;
end;

assume A7: [ x,y ] in R2;
then (x in ( field R2 ) & y in ( field R2 )) by RELAT_1:15;
then reconsider p = x,q = y as (Element of L) by A4;
( p <=> q ) in F by A5,A7;
hence thesis by A3;
end;
end;
