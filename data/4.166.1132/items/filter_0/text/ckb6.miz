environ
vocabularies LATTICES,SUBSET_1,XBOOLE_0,PBOOLE,EQREL_1,CARD_FIL,STRUCT_0,TARSKI,ORDINAL1,ZFMISC_1,SETFAM_1,INT_2,XBOOLEAN,BINOP_1,REALSET1,FUNCT_1,RELAT_1,MCART_1,XXREAL_2,RELAT_2,FILTER_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,FUNCT_1,MCART_1,ORDINAL1,RELAT_2,FUNCT_2,BINOP_1,REALSET1,STRUCT_0,LATTICES,DOMAIN_1,RELAT_1,RELSET_1,EQREL_1;
definitions TARSKI,XBOOLE_0,LATTICES,RELAT_1,RELAT_2,BINOP_1,REALSET1,STRUCT_0;
theorems TARSKI,ZFMISC_1,SETFAM_1,FUNCT_1,MCART_1,FUNCT_2,LATTICES,RELAT_1,ORDERS_1,RLSUB_2,WELLSET1,RELSET_1,ORDINAL1,XBOOLE_0,XBOOLE_1,PARTFUN1,RELAT_2,SUBSET_1,CKB1,CKB2,CKB3,CKB4,CKB5;
schemes RELAT_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,LATTICES;
constructors SETFAM_1,RELAT_2,ORDINAL1,PARTFUN1,BINOP_1,REALSET1,LATTICES,RELSET_1;
requirements SUBSET,BOOLE;
begin
theorem
Th6: (for L being  join-absorbing  join-commutative  join-associative  meet-absorbing  meet-commutative non empty LattStr holds (for a,b,c being (Element of L) holds ((a [= c & b [= c) implies ( a "\/" b ) [= c)))
proof
let L being  join-absorbing  join-commutative  join-associative  meet-absorbing  meet-commutative non empty LattStr;
let a being (Element of L),b being (Element of L),c being (Element of L);
( c "\/" c ) = c by LATTICES:1;
hence thesis by CKB4:1;
end;
