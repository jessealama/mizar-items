environ
vocabularies LATTICES,SUBSET_1,XBOOLE_0,PBOOLE,EQREL_1,CARD_FIL,STRUCT_0,TARSKI,ORDINAL1,ZFMISC_1,SETFAM_1,INT_2,XBOOLEAN,BINOP_1,REALSET1,FUNCT_1,RELAT_1,MCART_1,XXREAL_2,RELAT_2,FILTER_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,FUNCT_1,MCART_1,ORDINAL1,RELAT_2,FUNCT_2,BINOP_1,REALSET1,STRUCT_0,LATTICES,DOMAIN_1,RELAT_1,RELSET_1,EQREL_1,CKB8,CKB16,CKB17,CKB21;
definitions TARSKI,XBOOLE_0,LATTICES,RELAT_1,RELAT_2,BINOP_1,REALSET1,STRUCT_0,CKB16,CKB17,CKB21;
theorems TARSKI,ZFMISC_1,SETFAM_1,FUNCT_1,MCART_1,FUNCT_2,LATTICES,RELAT_1,ORDERS_1,RLSUB_2,WELLSET1,RELSET_1,ORDINAL1,XBOOLE_0,XBOOLE_1,PARTFUN1,RELAT_2,SUBSET_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes RELAT_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,LATTICES;
constructors SETFAM_1,RELAT_2,ORDINAL1,PARTFUN1,BINOP_1,REALSET1,LATTICES,RELSET_1,CKB16,CKB17,CKB21;
requirements SUBSET,BOOLE;
begin
reserve L for Lattice;
reserve p for (Element of L);
reserve q for (Element of L);
reserve x for set;
reserve X for set;
reserve Z for set;
reserve H for (Filter of L);
reserve F for (Filter of L);
reserve D for non  empty (Subset of L);
definition
let L;
let D;
func <.D .) -> (Filter of L) means 
:Def5: (D c= it & (for F holds (D c= F implies it c= F)));
existence
proof
set x = the (Element of D);
defpred P[ set ]
 means
($1 is (Filter of L) & D c= $1);
consider X such that A1: (Z in X iff (Z in ( bool (the carrier of L) ) & P[ Z ])) from XBOOLE_0:sch 1;
reconsider x as (Element of L);
<. L .) = (the carrier of L);
then A2: X <> ( {} ) by A1;
now
let Z;
assume Z in X;
then D c= Z by A1;
hence x in Z by TARSKI:def 3;
end;
then reconsider F = ( meet X ) as non  empty set by A2,SETFAM_1:def 1;
A3: <. L .) in X by A1;
F c= (the carrier of L)
proof
let x;
thus thesis by A3,SETFAM_1:def 1;
end;
then reconsider F as non  empty (Subset of L);
now
let p;
let q;
thus ((p in F & q in F) implies ( p "/\" q ) in F)
proof
assume A4: (p in F & q in F);
(for Z holds (Z in X implies ( p "/\" q ) in Z))
proof
let Z;
assume A5: Z in X;
then reconsider Z9 = Z as (Filter of L) by A1;
(p in Z9 & q in Z9) by A4,A5,SETFAM_1:def 1;
hence thesis by CKB9:1;
end;
hence thesis by A2,SETFAM_1:def 1;
end;

assume A6: ( p "/\" q ) in F;
now
let Z;
assume A7: Z in X;
then reconsider Z9 = Z as (Filter of L) by A1;
( p "/\" q ) in Z9 by A6,A7,SETFAM_1:def 1;
hence p in Z by CKB9:1;
end;
hence p in F by A2,SETFAM_1:def 1;
now
let Z;
assume A8: Z in X;
then reconsider Z9 = Z as (Filter of L) by A1;
( p "/\" q ) in Z9 by A6,A8,SETFAM_1:def 1;
hence q in Z by CKB9:1;
end;
hence q in F by A2,SETFAM_1:def 1;
end;
then reconsider F as (Filter of L) by CKB9:1;
take F;
(for Z holds (Z in X implies D c= Z)) by A1;
hence D c= F by A2,SETFAM_1:5;
let H;
assume D c= H;
then H in X by A1;
hence thesis by SETFAM_1:3;
end;
uniqueness
proof
let F1 being (Filter of L);
let F2 being (Filter of L);
assume ((D c= F1 & (for F holds (D c= F implies F1 c= F))) & (D c= F2 & (for F holds (D c= F implies F2 c= F))));
hence (F1 c= F2 & F2 c= F1);
end;
end;
