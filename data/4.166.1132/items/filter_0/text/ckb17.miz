environ
vocabularies LATTICES,SUBSET_1,XBOOLE_0,PBOOLE,EQREL_1,CARD_FIL,STRUCT_0,TARSKI,ORDINAL1,ZFMISC_1,SETFAM_1,INT_2,XBOOLEAN,BINOP_1,REALSET1,FUNCT_1,RELAT_1,MCART_1,XXREAL_2,RELAT_2,FILTER_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,FUNCT_1,MCART_1,ORDINAL1,RELAT_2,FUNCT_2,BINOP_1,REALSET1,STRUCT_0,LATTICES,DOMAIN_1,RELAT_1,RELSET_1,EQREL_1,CKB8,CKB16;
definitions TARSKI,XBOOLE_0,LATTICES,RELAT_1,RELAT_2,BINOP_1,REALSET1,STRUCT_0,CKB16;
theorems TARSKI,ZFMISC_1,SETFAM_1,FUNCT_1,MCART_1,FUNCT_2,LATTICES,RELAT_1,ORDERS_1,RLSUB_2,WELLSET1,RELSET_1,ORDINAL1,XBOOLE_0,XBOOLE_1,PARTFUN1,RELAT_2,SUBSET_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
schemes RELAT_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,STRUCT_0,LATTICES;
constructors SETFAM_1,RELAT_2,ORDINAL1,PARTFUN1,BINOP_1,REALSET1,LATTICES,RELSET_1,CKB16;
requirements SUBSET,BOOLE;
begin
reserve L for Lattice;
reserve p for (Element of L);
reserve q for (Element of L);
reserve q1 for (Element of L);
reserve r for (Element of L);
reserve r1 for (Element of L);
reserve x for set;
definition
let L;
let p;
func <.p .) -> (Filter of L) equals 
{ q: p [= q };
coherence
proof
set D = { q: p [= q };
p in D;
then reconsider F = D as non  empty set;
F c= (the carrier of L)
proof
let x;
assume x in F;
then (ex q st (x = q & p [= q));
hence thesis;
end;
then reconsider F as non  empty (Subset of L);
A1:now
let r;
let q;
assume r in F;
then (ex r1 st (r = r1 & p [= r1));
then A2: ( p "/\" p ) [= ( r "/\" p ) by LATTICES:9;
assume q in F;
then (ex q1 st (q = q1 & p [= q1));
then A3: ( p "/\" r ) [= ( q "/\" r ) by LATTICES:9;
( p "/\" p ) = p by LATTICES:2;
then p [= ( r "/\" q ) by A3,A2,LATTICES:7;
hence ( r "/\" q ) in F;
end;
now
let r;
let q;
assume r in F;
then A4: (ex r1 st (r = r1 & p [= r1));
assume r [= q;
then p [= q by A4,LATTICES:7;
hence q in F;
end;
hence thesis by A1,CKB10:1;
end;
end;
