environ
vocabularies BINOP_1,VECTSP_1,XBOOLE_0,ALGSTR_0,SUBSET_1,MESFUNC1,RELAT_1,LATTICES,ARYTM_3,FUNCSDOM,VECTSP_2,REAL_1,SUPINF_2,CARD_1,STRUCT_0,RLVECT_1,ARYTM_1,GROUP_1,EQREL_1,TARSKI,SETFAM_1,MSSUBFAM,INT_2,GCD_1;
notations TARSKI,XBOOLE_0,SUBSET_1,REAL_1,NUMBERS,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_2,VECTSP_1,FUNCSDOM,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
definitions VECTSP_1,VECTSP_2,XBOOLE_0,CKB8,CKB10,CKB11,CKB14;
theorems TARSKI,WELLORD2,SUBSET_1,VECTSP_1,VECTSP_2,RLVECT_1,XBOOLE_0,XCMPLX_1,GROUP_1,STRUCT_0,CKB7,CKB8,CKB10,CKB11,CKB14,CKB15;
schemes SUBSET_1;
registrations XBOOLE_0,SUBSET_1,MEMBERED,STRUCT_0,VECTSP_1,MONOID_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
constructors BINOP_2,VECTSP_2,MONOID_0,CKB8,CKB9,CKB10,CKB11,CKB13,CKB14;
requirements SUBSET,BOOLE;
begin
reserve R for  domRing-like  commutative Ring;
reserve c for (Element of R);
theorem
Th3: (for R being  commutative  associative non  empty multLoopStr holds (for a,b,c,d being (Element of R) holds ((b divides a & d divides c) implies ( b * d ) divides ( a * c ))))
proof
let R being  commutative  associative non  empty multLoopStr;
let a being (Element of R);
let b being (Element of R);
let c being (Element of R);
let d being (Element of R);
assume that
A1: b divides a
and
A2: d divides c;
consider x being (Element of R) such that A3: ( b * x ) = a by A1,CKB8:def 1;
consider y being (Element of R) such that A4: ( d * y ) = c by A2,CKB8:def 1;
( ( b * d ) * ( y * x ) ) = ( ( ( b * d ) * y ) * x ) by GROUP_1:def 3
.= ( ( b * c ) * x ) by A4,GROUP_1:def 3
.= ( a * c ) by A3,GROUP_1:def 3;
hence thesis by CKB8:def 1;
end;
