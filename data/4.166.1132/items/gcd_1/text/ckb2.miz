environ
vocabularies BINOP_1,VECTSP_1,XBOOLE_0,ALGSTR_0,SUBSET_1,MESFUNC1,RELAT_1,LATTICES,ARYTM_3,FUNCSDOM,VECTSP_2,REAL_1,SUPINF_2,CARD_1,STRUCT_0,RLVECT_1,ARYTM_1,GROUP_1,EQREL_1,TARSKI,SETFAM_1,MSSUBFAM,INT_2,GCD_1;
notations TARSKI,XBOOLE_0,SUBSET_1,REAL_1,NUMBERS,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_2,VECTSP_1,FUNCSDOM;
definitions VECTSP_1,VECTSP_2,XBOOLE_0;
theorems TARSKI,WELLORD2,SUBSET_1,VECTSP_1,VECTSP_2,RLVECT_1,XBOOLE_0,XCMPLX_1,GROUP_1,STRUCT_0;
schemes SUBSET_1;
registrations XBOOLE_0,SUBSET_1,MEMBERED,STRUCT_0,VECTSP_1,MONOID_0,CKB1;
constructors BINOP_2,VECTSP_2,MONOID_0;
requirements SUBSET,BOOLE;
begin
registration
cluster  commutative  right-distributive ->  distributive for non  empty non  empty doubleLoopStr;
coherence
proof
let R being non  empty doubleLoopStr;
assume that
A1: R is  commutative
and
A2: R is  right-distributive;
let x being (Element of R);
let y being (Element of R);
let z being (Element of R);
thus ( x * ( y + z ) ) = ( ( x * y ) + ( x * z ) ) by A2,VECTSP_1:def 2;
thus ( ( y + z ) * x ) = ( x * ( y + z ) ) by A1,GROUP_1:def 12
.= ( ( x * y ) + ( x * z ) ) by A2,VECTSP_1:def 2
.= ( ( y * x ) + ( x * z ) ) by A1,GROUP_1:def 12
.= ( ( y * x ) + ( z * x ) ) by A1,GROUP_1:def 12;
end;
end;
