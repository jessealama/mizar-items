environ
vocabularies PBOOLE,FUNCT_1,RELAT_1,TARSKI,FUNCT_4,FUNCOP_1,XBOOLE_0,SUBSET_1,FINSEQ_4,PARTFUN1,FUNCT_6,MEMBER_1,MSUALG_3,FINSET_1,ZFMISC_1,RELAT_2,MSAFREE2,BINOP_1,YELLOW_6,STRUCT_0,MSUALG_1,CLOSURE2,MSSUBFAM,SETFAM_1,CLOSURE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,STRUCT_0,SETFAM_1,RELAT_1,FUNCT_1,FINSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,FUNCT_4,PBOOLE,FUNCT_6,MSUALG_1,MSUALG_3,PRALG_1,MSSUBFAM,CKB5,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB32;
definitions XBOOLE_0,FUNCT_1,MSSUBFAM,MSUALG_1,MSUALG_3,PBOOLE,FINSET_1,TARSKI,FUNCOP_1,CKB14,CKB15,CKB16,CKB17;
theorems FUNCOP_1,FUNCT_1,FUNCT_2,FUNCT_4,MBOOLEAN,MSSUBFAM,MSUALG_1,MSUALG_3,PBOOLE,PZFMISC1,TARSKI,ZFMISC_1,PRALG_1,XBOOLE_0,XBOOLE_1,PARTFUN1,RELAT_1,CKB2,CKB3,CKB6,CKB7,CKB8,CKB9,CKB10,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB31,CKB33,CKB34,CKB35,CKB36,CKB37;
schemes MSSUBFAM,PBOOLE,XBOOLE_0,CKB1;
registrations SUBSET_1,FUNCT_1,RELSET_1,FUNCOP_1,FINSET_1,PBOOLE,MSSUBFAM,MSUALG_1,RELAT_1,PRE_CIRC,PRALG_1,CKB4,CKB11,CKB22,CKB30;
constructors SETFAM_1,PZFMISC1,MSSUBFAM,PRALG_1,MSUALG_3,RELSET_1,FUNCT_4,FUNCT_6,CKB5,CKB13,CKB14,CKB15,CKB16,CKB17,CKB32;
requirements SUBSET,BOOLE;
begin
reserve i for set;
reserve x for set;
reserve I for set;
reserve M for (ManySortedSet of I);
reserve f for Function;
reserve P for (MSSetOp of M);
Lm2:now
let I;
let M;
let i;
let a being (ManySortedSet of I);
let b being (Element of ( bool ( M . i ) ));
assume that
A1: a = ( ( [[0]] I ) +* ( i .--> b ) );
A2: ( dom ( i .--> b ) ) = { i } by FUNCOP_1:13;
( [[0]] I ) c= M by MBOOLEAN:5;
then A3: ( [[0]] I ) in ( bool M ) by MBOOLEAN:1;
thus a in ( bool M )
proof
let j being set;
assume that
A4: j in I;
i in { i } by TARSKI:def 1;
then A5: ( a . i ) = ( ( i .--> b ) . i ) by A1,A2,FUNCT_4:13
.= b by FUNCOP_1:72;
now
per cases ;
case A6: j = i;
then b in ( bool ( M . j ) );
hence thesis by A4,A5,A6,MBOOLEAN:def 1;
end;
case j <> i;
then (not j in ( dom ( i .--> b ) )) by A2,TARSKI:def 1;
then ( a . j ) = ( ( [[0]] I ) . j ) by A1,FUNCT_4:11;
hence thesis by A3,A4,PBOOLE:def 1;
end;
end;
hence thesis;
end;

end;
theorem
Th25: (((P is  monotonic & i in I) & f = ( P . i )) implies (for x,y being (Element of ( bool ( M . i ) )) holds (x c= y implies ( f . x ) c= ( f . y ))))
proof
assume that
A1: P is  monotonic
and
A2: i in I
and
A3: f = ( P . i );
let x being (Element of ( bool ( M . i ) ));
let y being (Element of ( bool ( M . i ) ));
assume that
A4: x c= y;
( dom ( ( [[0]] I ) +* ( i .--> y ) ) ) = I by A2,PZFMISC1:1;
then reconsider Y = ( ( [[0]] I ) +* ( i .--> y ) ) as (ManySortedSet of I) by PARTFUN1:def 2,RELAT_1:def 18;
( dom ( ( [[0]] I ) +* ( i .--> x ) ) ) = I by A2,PZFMISC1:1;
then reconsider X = ( ( [[0]] I ) +* ( i .--> x ) ) as (ManySortedSet of I) by PARTFUN1:def 2,RELAT_1:def 18;
A5: i in { i } by TARSKI:def 1;
A6: ( dom ( i .--> y ) ) = { i } by FUNCOP_1:13;
then A7: ( Y . i ) = ( ( i .--> y ) . i ) by A5,FUNCT_4:13
.= y by FUNCOP_1:72;
A8: ( dom ( i .--> x ) ) = { i } by FUNCOP_1:13;
then A9: ( X . i ) = ( ( i .--> x ) . i ) by A5,FUNCT_4:13
.= x by FUNCOP_1:72;
A10: X c= Y
proof
let s being set;
assume that
s in I;
per cases ;
suppose s = i;

hence thesis by A4,A9,A7;
end;
suppose A11: s <> i;

then (not s in ( dom ( i .--> x ) )) by A8,TARSKI:def 1;
then A12: ( X . s ) = ( ( [[0]] I ) . s ) by FUNCT_4:11;
(not s in ( dom ( i .--> y ) )) by A6,A11,TARSKI:def 1;
hence thesis by A12,FUNCT_4:11;
end;
end;
A13: i in ( dom P ) by A2,PARTFUN1:def 2;
(X is (Element of ( bool M )) & Y is (Element of ( bool M ))) by Lm2,MSSUBFAM:11;
then ( P .. X ) c= ( P .. Y ) by A1,A10,CKB15:def 1;
then ( ( P .. X ) . i ) c= ( ( P .. Y ) . i ) by A2,PBOOLE:def 2;
then ( f . ( X . i ) ) c= ( ( P .. Y ) . i ) by A3,A13,PRALG_1:def 17;
hence thesis by A3,A9,A7,A13,PRALG_1:def 17;
end;
