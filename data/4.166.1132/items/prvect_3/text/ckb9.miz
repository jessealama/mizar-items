environ
vocabularies NUMBERS,SUBSET_1,CARD_3,FUNCT_1,RELAT_1,FUNCT_2,FINSEQ_1,PRE_TOPC,XBOOLE_0,NORMSP_0,STRUCT_0,RLVECT_1,NORMSP_1,COMPLEX1,ARYTM_3,REAL_1,PRVECT_3,RFINSEQ,ARYTM_1,SQUARE_1,RVSUM_1,XXREAL_0,CARD_1,SUPINF_2,SEQ_2,ORDINAL2,XREAL_0,ORDINAL1,TARSKI,NAT_1,PRVECT_1,PRVECT_2,ZFMISC_1,ORDINAL4,GROUP_2,ALGSTR_0,BINOP_1,EUCLID,REWRITE1,RSSPACE3,RELAT_2,METRIC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,DOMAIN_1,FUNCOP_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,SQUARE_1,NAT_1,VALUED_0,COMPLEX1,CARD_3,FINSEQ_1,FINSEQ_2,FINSEQ_4,RVSUM_1,RFINSEQ,STRUCT_0,ALGSTR_0,PRE_TOPC,RLVECT_1,NORMSP_0,NORMSP_1,EUCLID,RSSPACE3,LOPBAN_1,PRVECT_1,PRVECT_2;
definitions EUCLID,PRVECT_2,BINOP_1,RLVECT_1,VALUED_1,ALGSTR_0,NORMSP_0,STRUCT_0;
theorems TARSKI,XBOOLE_0,XREAL_0,RLVECT_1,FINSEQ_1,FINSEQ_2,RVSUM_1,NORMSP_0,RFINSEQ,NAT_1,TOPREAL6,SQUARE_1,RELSET_1,RELAT_1,FUNCT_1,FUNCT_2,NORMSP_1,LOPBAN_1,BINOP_1,CARD_3,ALGSTR_0,EUCLID,RSSPACE3,XXREAL_0,PRVECT_1,PRVECT_2,ZFMISC_1,FINSEQ_3,SUBSET_1,TOPREAL7,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8;
schemes FUNCT_2,BINOP_1;
registrations RELSET_1,STRUCT_0,ORDINAL1,XREAL_0,MEMBERED,FUNCT_1,FUNCT_2,NUMBERS,XBOOLE_0,VALUED_0,EUCLID,PRVECT_2,ALGSTR_0,FINSEQ_2,FINSEQ_1,CARD_3,NORMSP_0,LOPBAN_1,RLVECT_1,NORMSP_1,RELAT_1,SUBSET_1,CKB5;
constructors REAL_1,SQUARE_1,RSSPACE3,COMPLEX1,LOPBAN_1,SEQ_1,RVSUM_1,BINOP_2,PRVECT_2,FINSEQ_4,RFINSEQ,FINSEQOP,TOPMETR;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve G for RealLinearSpace;
reserve F for RealLinearSpace;
definition
let G being non  empty addLoopStr;
let F being non  empty addLoopStr;
func prod_ADD (G,F) -> (BinOp of [: (the carrier of G),(the carrier of F) :]) means 
:Def1: (for g1,g2 being (Point of G) holds (for f1,f2 being (Point of F) holds ( it . ([ g1,f1 ],[ g2,f2 ]) ) = [ ( g1 + g2 ),( f1 + f2 ) ]));
existence
proof
defpred ADP[ set,set,set ]
 means
(ex g1,g2 being (Point of G) st (ex f1,f2 being (Point of F) st (($1 = [ g1,f1 ] & $2 = [ g2,f2 ]) & $3 = [ ( g1 + g2 ),( f1 + f2 ) ])));
A1: (for x,y being set holds ((x in [: (the carrier of G),(the carrier of F) :] & y in [: (the carrier of G),(the carrier of F) :]) implies (ex z being set st (z in [: (the carrier of G),(the carrier of F) :] & ADP[ x,y,z ]))))
proof
let x being set;
let y being set;
assume A2: (x in [: (the carrier of G),(the carrier of F) :] & y in [: (the carrier of G),(the carrier of F) :]);
then consider x1 being (Point of G),x2 being (Point of F) such that A3: x = [ x1,x2 ] by CKB8:1;
consider y1 being (Point of G),y2 being (Point of F) such that A4: y = [ y1,y2 ] by CKB8:1,A2;
reconsider z = [ ( x1 + y1 ),( x2 + y2 ) ] as (Element of [: (the carrier of G),(the carrier of F) :]);
(z in [: (the carrier of G),(the carrier of F) :] & ADP[ x,y,z ]) by A3,A4;
hence thesis;
end;
consider ADGF being (Function of [: [: (the carrier of G),(the carrier of F) :],[: (the carrier of G),(the carrier of F) :] :],[: (the carrier of G),(the carrier of F) :]) such that A5: (for x,y being set holds ((x in [: (the carrier of G),(the carrier of F) :] & y in [: (the carrier of G),(the carrier of F) :]) implies ADP[ x,y,( ADGF . (x,y) ) ])) from BINOP_1:sch 1(A1);
now
let g1 being (Point of G);
let g2 being (Point of G);
let f1 being (Point of F);
let f2 being (Point of F);
consider gg1,gg2 being (Point of G),ff1,ff2 being (Point of F) such that A6: (([ g1,f1 ] = [ gg1,ff1 ] & [ g2,f2 ] = [ gg2,ff2 ]) & ( ADGF . ([ g1,f1 ],[ g2,f2 ]) ) = [ ( gg1 + gg2 ),( ff1 + ff2 ) ]) by A5;
(((g1 = gg1 & f1 = ff1) & g2 = gg2) & f2 = ff2) by A6,ZFMISC_1:27;
hence ( ADGF . ([ g1,f1 ],[ g2,f2 ]) ) = [ ( g1 + g2 ),( f1 + f2 ) ] by A6;
end;
hence thesis;
end;
uniqueness
proof
let H1 being (BinOp of [: (the carrier of G),(the carrier of F) :]);
let H2 being (BinOp of [: (the carrier of G),(the carrier of F) :]);
assume A1: (for g1,g2 being (Point of G) holds (for f1,f2 being (Point of F) holds ( H1 . ([ g1,f1 ],[ g2,f2 ]) ) = [ ( g1 + g2 ),( f1 + f2 ) ]));
assume A2: (for g1,g2 being (Point of G) holds (for f1,f2 being (Point of F) holds ( H2 . ([ g1,f1 ],[ g2,f2 ]) ) = [ ( g1 + g2 ),( f1 + f2 ) ]));
now
let x being (Element of [: (the carrier of G),(the carrier of F) :]);
let y being (Element of [: (the carrier of G),(the carrier of F) :]);
consider x1 being (Point of G),x2 being (Point of F) such that A3: x = [ x1,x2 ] by CKB8:1;
consider y1 being (Point of G),y2 being (Point of F) such that A4: y = [ y1,y2 ] by CKB8:1;
thus ( H1 . (x,y) ) = [ ( x1 + y1 ),( x2 + y2 ) ] by A1,A3,A4
.= ( H2 . (x,y) ) by A2,A3,A4;
end;
hence H1 = H2 by BINOP_1:2;
end;
end;
