environ
vocabularies UNIALG_1,NAT_1,XBOOLE_0,FINSEQ_1,ZFMISC_1,MCART_1,RELAT_1,FUNCT_1,FUNCT_2,PARTFUN1,FINSEQ_2,SUBSET_1,TARSKI,NUMBERS,STRUCT_0,CQC_SIM1,UNIALG_2,ORDINAL1,PBOOLE,FUNCOP_1,RLVECT_2,CARD_3,CARD_1,FINSEQ_4,FUNCT_5,PRALG_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,NAT_1,STRUCT_0,RELAT_1,FUNCT_1,FINSEQ_1,FUNCT_2,BINOP_1,FUNCOP_1,MCART_1,DOMAIN_1,PARTFUN1,FINSEQ_2,FUNCT_4,FUNCT_5,CARD_3,MARGREL1,DTCONSTR,UNIALG_1,UNIALG_2,PBOOLE,CKB1,CKB2,CKB3,CKB4,CKB6;
definitions TARSKI,UNIALG_1,UNIALG_2,FUNCT_1,PBOOLE,XBOOLE_0,BINOP_1,FINSEQ_2,FUNCOP_1,PARTFUN1,MARGREL1,CKB1,CKB2,CKB3,CKB4,CKB6;
theorems TARSKI,FUNCT_1,PARTFUN1,FINSEQ_1,FINSEQ_2,FUNCOP_1,UNIALG_1,DOMAIN_1,ZFMISC_1,MCART_1,UNIALG_2,FUNCT_2,PBOOLE,FUNCT_5,CARD_3,FUNCT_4,FINSEQ_3,RELAT_1,RELSET_1,ORDINAL1,XBOOLE_0,XBOOLE_1,MARGREL1,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
schemes FINSEQ_1,PARTFUN1,FUNCT_2,FUNCT_1,CLASSES1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,FUNCOP_1,FINSEQ_1,FINSEQ_2,CARD_3,PBOOLE,STRUCT_0,UNIALG_1,CARD_1,RELSET_1,MARGREL1;
constructors BINOP_1,DOMAIN_1,FUNCT_4,FUNCT_5,CARD_3,PBOOLE,UNIALG_2,DTCONSTR,STRUCT_0,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB6;
requirements BOOLE,SUBSET;
begin
reserve A for non  empty set;
reserve B for non  empty set;
definition
let A being non  empty set;
let B being non  empty set;
func Inv (A,B) -> (Function of [: A,B :],[: B,A :]) means 
:Def6: (for a being (Element of [: A,B :]) holds ( it . a ) = [ ( a `2 ),( a `1 ) ]);
existence
proof
deffunc F((Element of [: A,B :])) = [ ( $1 `2 ),( $1 `1 ) ];
thus (ex I being (Function of [: A,B :],[: B,A :]) st (for a being (Element of [: A,B :]) holds ( I . a ) = F(a))) from FUNCT_2:sch 4;
end;
uniqueness
proof
let f being (Function of [: A,B :],[: B,A :]);
let g being (Function of [: A,B :],[: B,A :]);
assume that
A1: (for a being (Element of [: A,B :]) holds ( f . a ) = [ ( a `2 ),( a `1 ) ])
and
A2: (for a being (Element of [: A,B :]) holds ( g . a ) = [ ( a `2 ),( a `1 ) ]);
now
let a being (Element of [: A,B :]);
( f . a ) = [ ( a `2 ),( a `1 ) ] by A1;
hence ( f . a ) = ( g . a ) by A2;
end;
hence thesis by FUNCT_2:63;
end;
end;
