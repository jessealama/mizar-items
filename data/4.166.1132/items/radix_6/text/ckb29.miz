environ
vocabularies NUMBERS,NAT_1,XXREAL_0,ARYTM_3,RADIX_1,RADIX_5,FINSEQ_1,CARD_1,FUNCT_1,NEWTON,RELAT_1,PARTFUN1,ARYTM_1,CARD_3,FINSEQ_2,SUBSET_1,INT_1,RADIX_6;
notations SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,INT_1,NAT_1,NAT_D,NEWTON,RADIX_1,FINSEQ_1,FINSEQ_2,FUNCT_1,RELSET_1,PARTFUN1,GR_CY_1,RADIX_5,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12,CKB25,CKB26;
definitions CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12,CKB25,CKB26;
theorems RADIX_1,RADIX_2,RADIX_4,RADIX_5,INT_1,NAT_1,NAT_2,FINSEQ_1,FINSEQ_2,RVSUM_1,NEWTON,PREPOWER,FUNCT_1,FINSEQ_3,XREAL_1,XXREAL_0,NAT_D,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes FINSEQ_2,NAT_1;
registrations RELSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,ORDINAL1,NEWTON,XBOOLE_0,FINSEQ_2,CARD_1;
constructors REAL_1,NAT_D,NEWTON,GR_CY_1,RADIX_5,SEQ_1,RELSET_1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12,CKB25,CKB26;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
definition
let i being Nat;
let m being Nat;
let k being Nat;
assume A1: k >= 2;
func FSDMinDigit (m,k,i) -> (Element of ( k -SD )) equals 
:Def10: ( 0 ) if i > m,1 if i = m otherwise ( ( - ( Radix k ) ) + 1 );
coherence
proof
( Radix k ) > 2 by A1,RADIX_4:1;
then ( Radix k ) > 1 by XXREAL_0:2;
then ( ( Radix k ) + ( Radix k ) ) > ( 1 + 1 ) by XREAL_1:8;
then A2: ( ( Radix k ) - 1 ) > ( 1 - ( Radix k ) ) by XREAL_1:21;
A3: ( k -SD ) = { w where w is (Element of ( INT )): (w <= ( ( Radix k ) - 1 ) & w >= ( ( - ( Radix k ) ) + 1 )) } by RADIX_1:def 2;
A4: ( Radix k ) > 2 by A1,RADIX_4:1;
then ( - ( Radix k ) ) < ( - 2 ) by XREAL_1:24;
then A5: ( ( - ( Radix k ) ) + 1 ) < ( ( - 2 ) + 1 ) by XREAL_1:6;
( ( - ( Radix k ) ) + 1 ) is (Element of ( INT )) by INT_1:def 2;
then A6: ( ( - ( Radix k ) ) + 1 ) in ( k -SD ) by A3,A2;
A7: 1 is (Element of ( INT )) by INT_1:def 2;
( ( Radix k ) + ( - 1 ) ) > ( 2 + ( - 1 ) ) by A4,XREAL_1:6;
then 1 in ( k -SD ) by A3,A5,A7;
hence thesis by A6,RADIX_1:14;
end;
consistency;
end;
