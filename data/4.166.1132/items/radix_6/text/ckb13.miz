environ
vocabularies NUMBERS,NAT_1,XXREAL_0,ARYTM_3,RADIX_1,RADIX_5,FINSEQ_1,CARD_1,FUNCT_1,NEWTON,RELAT_1,PARTFUN1,ARYTM_1,CARD_3,FINSEQ_2,SUBSET_1,INT_1,RADIX_6;
notations SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,INT_1,NAT_1,NAT_D,NEWTON,RADIX_1,FINSEQ_1,FINSEQ_2,FUNCT_1,RELSET_1,PARTFUN1,GR_CY_1,RADIX_5,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12;
definitions CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12;
theorems RADIX_1,RADIX_2,RADIX_4,RADIX_5,INT_1,NAT_1,NAT_2,FINSEQ_1,FINSEQ_2,RVSUM_1,NEWTON,PREPOWER,FUNCT_1,FINSEQ_3,XREAL_1,XXREAL_0,NAT_D,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
schemes FINSEQ_2,NAT_1;
registrations RELSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,ORDINAL1,NEWTON,XBOOLE_0,FINSEQ_2,CARD_1;
constructors REAL_1,NAT_D,NEWTON,GR_CY_1,RADIX_5,SEQ_1,RELSET_1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Th5: (for x,n,k,i being Nat holds (i in ( Seg n ) implies ( DigA (( DecSD (x,n,k) ),i) ) >= ( 0 )))
proof
let x being Nat;
let n being Nat;
let k being Nat;
let i being Nat;
assume A1: i in ( Seg n );
then A2: i >= 1 by FINSEQ_1:1;
( DigA (( DecSD (x,n,k) ),i) ) = ( DigitDC (x,i,k) ) by A1,RADIX_1:def 9
.= ( ( x mod ( ( Radix k ) |^ i ) ) div ( ( Radix k ) |^ ( i -' 1 ) ) ) by RADIX_1:def 8
.= ( ( x div ( ( Radix k ) |^ ( i -' 1 ) ) ) mod ( Radix k ) ) by A2,RADIX_2:4,RADIX_2:6;
hence thesis;
end;
