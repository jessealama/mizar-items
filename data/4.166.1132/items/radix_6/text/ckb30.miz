environ
vocabularies NUMBERS,NAT_1,XXREAL_0,ARYTM_3,RADIX_1,RADIX_5,FINSEQ_1,CARD_1,FUNCT_1,NEWTON,RELAT_1,PARTFUN1,ARYTM_1,CARD_3,FINSEQ_2,SUBSET_1,INT_1,RADIX_6;
notations SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,INT_1,NAT_1,NAT_D,NEWTON,RADIX_1,FINSEQ_1,FINSEQ_2,FUNCT_1,RELSET_1,PARTFUN1,GR_CY_1,RADIX_5,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12,CKB25,CKB26,CKB29;
definitions CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12,CKB25,CKB26,CKB29;
theorems RADIX_1,RADIX_2,RADIX_4,RADIX_5,INT_1,NAT_1,NAT_2,FINSEQ_1,FINSEQ_2,RVSUM_1,NEWTON,PREPOWER,FUNCT_1,FINSEQ_3,XREAL_1,XXREAL_0,NAT_D,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29;
schemes FINSEQ_2,NAT_1;
registrations RELSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,ORDINAL1,NEWTON,XBOOLE_0,FINSEQ_2,CARD_1;
constructors REAL_1,NAT_D,NEWTON,GR_CY_1,RADIX_5,SEQ_1,RELSET_1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12,CKB25,CKB26,CKB29;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
definition
let n being Nat;
let m being Nat;
let k being Nat;
func FSDMin (n,m,k) -> (Tuple of n,( k -SD ))
means
:Def11: (for i being Nat holds (i in ( Seg n ) implies ( DigA (it,i) ) = ( FSDMinDigit (m,k,i) )));
existence
proof
deffunc F(Nat) = ( FSDMinDigit (m,k,$1) );
consider z being (FinSequence of ( k -SD )) such that A1: ( len z ) = n and A2: (for j being Nat holds (j in ( dom z ) implies ( z . j ) = F(j))) from FINSEQ_2:sch 1;
A3: ( dom z ) = ( Seg n ) by A1,FINSEQ_1:def 3;
z is (Element of ( n -tuples_on ( k -SD ) )) by A1,FINSEQ_2:92;
then reconsider z as (Tuple of n,( k -SD ));
take z;
let i being Nat;
assume A4: i in ( Seg n );
then ( DigA (z,i) ) = ( z . i ) by RADIX_1:def 3;
hence thesis by A2,A3,A4;
end;
uniqueness
proof
let k1 being (Tuple of n,( k -SD )),k2 being (Tuple of n,( k -SD ));
assume that
A5: (for i being Nat holds (i in ( Seg n ) implies ( DigA (k1,i) ) = ( FSDMinDigit (m,k,i) )))
and
A6: (for i being Nat holds (i in ( Seg n ) implies ( DigA (k2,i) ) = ( FSDMinDigit (m,k,i) )));
A7: ( len k1 ) = n by CARD_1:def 7;
then A8: ( dom k1 ) = ( Seg n ) by FINSEQ_1:def 3;
A9:now
let j being Nat;
assume A10: j in ( dom k1 );
then ( k1 . j ) = ( DigA (k1,j) ) by A8,RADIX_1:def 3
.= ( FSDMinDigit (m,k,j) ) by A5,A8,A10
.= ( DigA (k2,j) ) by A6,A8,A10
.= ( k2 . j ) by A8,A10,RADIX_1:def 3;
hence ( k1 . j ) = ( k2 . j );
end;
( len k2 ) = n by CARD_1:def 7;
hence k1 = k2 by A7,A9,FINSEQ_2:9;
end;
end;
