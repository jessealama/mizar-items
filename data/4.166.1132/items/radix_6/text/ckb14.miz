environ
vocabularies NUMBERS,NAT_1,XXREAL_0,ARYTM_3,RADIX_1,RADIX_5,FINSEQ_1,CARD_1,FUNCT_1,NEWTON,RELAT_1,PARTFUN1,ARYTM_1,CARD_3,FINSEQ_2,SUBSET_1,INT_1,RADIX_6;
notations SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,INT_1,NAT_1,NAT_D,NEWTON,RADIX_1,FINSEQ_1,FINSEQ_2,FUNCT_1,RELSET_1,PARTFUN1,GR_CY_1,RADIX_5,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12;
definitions CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12;
theorems RADIX_1,RADIX_2,RADIX_4,RADIX_5,INT_1,NAT_1,NAT_2,FINSEQ_1,FINSEQ_2,RVSUM_1,NEWTON,PREPOWER,FUNCT_1,FINSEQ_3,XREAL_1,XXREAL_0,NAT_D,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
schemes FINSEQ_2,NAT_1;
registrations RELSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,ORDINAL1,NEWTON,XBOOLE_0,FINSEQ_2,CARD_1;
constructors REAL_1,NAT_D,NEWTON,GR_CY_1,RADIX_5,SEQ_1,RELSET_1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB12;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Th6: (for n,k,x being Nat holds ((n >= 1 & x needs_digits_of n,k) implies ( DigA (( DecSD (x,n,k) ),n) ) > ( 0 )))
proof
let n being Nat;
let k being Nat;
let x being Nat;
assume that
A1: n >= 1
and
A2: x needs_digits_of n,k;
x < ( ( Radix k ) |^ n ) by A2,CKB12:def 1;
then A3: ( x mod ( ( Radix k ) |^ n ) ) = x by NAT_D:24;
n in ( Seg n ) by A1,FINSEQ_1:3;
then A4: ( DigA (( DecSD (x,n,k) ),n) ) = ( DigitDC (x,n,k) ) by RADIX_1:def 9
.= ( x div ( ( Radix k ) |^ ( n -' 1 ) ) ) by A3,RADIX_1:def 8;
A5: ( ( Radix k ) |^ ( n -' 1 ) ) > ( 0 ) by PREPOWER:6,RADIX_2:6;
x >= ( ( Radix k ) |^ ( n -' 1 ) ) by A2,CKB12:def 1;
hence thesis by A4,A5,NAT_2:13;
end;
