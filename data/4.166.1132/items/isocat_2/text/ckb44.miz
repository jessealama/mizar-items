environ
vocabularies XBOOLE_0,FUNCT_1,FUNCT_2,FUNCT_5,ZFMISC_1,RELAT_1,TARSKI,SUBSET_1,MCART_1,CAT_1,GRAPH_1,NATTRA_1,STRUCT_0,CAT_2,FINSEQ_2,PZFMISC1,FUNCOP_1,PARTFUN1,BORSUK_1,ISOCAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,BINOP_1,FUNCT_3,FUNCT_5,STRUCT_0,GRAPH_1,CAT_1,CAT_2,NATTRA_1,ISOCAT_1,CKB1,CKB10,CKB16,CKB19,CKB24,CKB30,CKB36,CKB40,CKB41,CKB42;
definitions TARSKI,FUNCT_1,CAT_1,NATTRA_1,ISOCAT_1,XBOOLE_0,BINOP_1,GRAPH_1,CKB10,CKB16,CKB19,CKB24,CKB30,CKB36,CKB41,CKB42;
theorems FUNCT_2,CAT_1,TARSKI,ZFMISC_1,FUNCT_1,DOMAIN_1,CAT_2,FUNCT_3,FUNCOP_1,NATTRA_1,ISOCAT_1,FUNCT_5,RELSET_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB41,CKB42,CKB43;
schemes FUNCT_2;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FUNCT_2,STRUCT_0,CKB37;
constructors PARTFUN1,DOMAIN_1,ISOCAT_1,FUNCOP_1,RELSET_1,CKB1,CKB10,CKB16,CKB19,CKB24,CKB30,CKB36,CKB40,CKB41,CKB42;
requirements SUBSET,BOOLE;
begin
reserve A for Category;
reserve B for Category;
reserve C for Category;
theorem
Th37: (for F,G being (Functor of A,[: B,C :]) holds ((( Pr1 F ) = ( Pr1 G ) & ( Pr2 F ) = ( Pr2 G )) implies F = G))
proof
let F being (Functor of A,[: B,C :]),G being (Functor of A,[: B,C :]);
reconsider f = F,g = G as (Function of (the carrier' of A),[: (the carrier' of B),(the carrier' of C) :]) by CAT_2:23;
assume ( Pr1 F ) = ( Pr1 G );
then A1: ( ( pr1 ((the carrier' of B),(the carrier' of C)) ) * f ) = ( Pr1 G ) by CAT_2:def 10
.= ( ( pr1 ((the carrier' of B),(the carrier' of C)) ) * g ) by CAT_2:def 10;
assume ( Pr2 F ) = ( Pr2 G );
then ( ( pr2 ((the carrier' of B),(the carrier' of C)) ) * f ) = ( Pr2 G ) by CAT_2:def 11
.= ( ( pr2 ((the carrier' of B),(the carrier' of C)) ) * g ) by CAT_2:def 11;
hence thesis by A1,CKB5:1;
end;
