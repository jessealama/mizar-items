environ
vocabularies XBOOLE_0,FUNCT_1,FUNCT_2,FUNCT_5,ZFMISC_1,RELAT_1,TARSKI,SUBSET_1,MCART_1,CAT_1,GRAPH_1,NATTRA_1,STRUCT_0,CAT_2,FINSEQ_2,PZFMISC1,FUNCOP_1,PARTFUN1,BORSUK_1,ISOCAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,BINOP_1,FUNCT_3,FUNCT_5,STRUCT_0,GRAPH_1,CAT_1,CAT_2,NATTRA_1,ISOCAT_1,CKB1,CKB10,CKB16,CKB19;
definitions TARSKI,FUNCT_1,CAT_1,NATTRA_1,ISOCAT_1,XBOOLE_0,BINOP_1,GRAPH_1,CKB10,CKB16,CKB19;
theorems FUNCT_2,CAT_1,TARSKI,ZFMISC_1,FUNCT_1,DOMAIN_1,CAT_2,FUNCT_3,FUNCOP_1,NATTRA_1,ISOCAT_1,FUNCT_5,RELSET_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23;
schemes FUNCT_2;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FUNCT_2,STRUCT_0;
constructors PARTFUN1,DOMAIN_1,ISOCAT_1,FUNCOP_1,RELSET_1,CKB1,CKB10,CKB16,CKB19;
requirements SUBSET,BOOLE;
begin
reserve A for Category;
reserve B for Category;
reserve C for Category;
reserve F for (Functor of A,B);
reserve o for set;
reserve m for set;
definition
let A;
let B;
let C;
let F being (Functor of [: A,B :],C);
func export F -> (Functor of A,( Functors (B,C) )) means 
:Def4: (for f being (Morphism of A) holds ( it . f ) = [ [ ( F ?- ( dom f ) ),( F ?- ( cod f ) ) ],( F ?- f ) ]);
existence
proof
defpred P[ set,set ]
 means
(for f being (Morphism of A) holds ($1 = f implies $2 = [ [ ( F ?- ( dom f ) ),( F ?- ( cod f ) ) ],( F ?- f ) ]));
A1:now
let m;
assume m in (the carrier' of A);
then reconsider g = m as (Morphism of A);
take o = [ [ ( F ?- ( dom g ) ),( F ?- ( cod g ) ) ],( F ?- g ) ];
( F ?- ( dom g ) ) is_naturally_transformable_to ( F ?- ( cod g ) ) by CKB20:1;
then o in ( NatTrans (B,C) ) by NATTRA_1:32;
hence o in (the carrier' of ( Functors (B,C) )) by NATTRA_1:def 17;
thus P[ m,o ];
end;
consider G being (Function of (the carrier' of A),(the carrier' of ( Functors (B,C) ))) such that A2: (for m holds (m in (the carrier' of A) implies P[ m,( G . m ) ])) from FUNCT_2:sch 1(A1);
G is (Functor of A,( Functors (B,C) ))
proof
thus (for c being (Object of A) holds (ex d being (Object of ( Functors (B,C) )) st ( G . ( id c ) ) = ( id d )))
proof
let c being (Object of A);
reconsider d = ( F ?- c ) as (Object of ( Functors (B,C) )) by CKB8:1;
take d;
(( dom ( id c ) ) = c & ( cod ( id c ) ) = c) by CAT_1:19;
hence ( G . ( id c ) ) = [ [ ( F ?- c ),( F ?- c ) ],( F ?- ( id c ) ) ] by A2
.= [ [ ( F ?- c ),( F ?- c ) ],( id ( F ?- c ) ) ] by CKB22:1
.= ( id d ) by NATTRA_1:def 17;
end;

thus (for f being (Morphism of A) holds (( G . ( id ( dom f ) ) ) = ( id ( dom ( G . f ) ) ) & ( G . ( id ( cod f ) ) ) = ( id ( cod ( G . f ) ) )))
proof
let f being (Element of (the carrier' of A));
reconsider d = ( F ?- ( dom f ) ),c = ( F ?- ( cod f ) ) as (Object of ( Functors (B,C) )) by CKB8:1;
A3: ( G . f ) = [ [ ( F ?- ( dom f ) ),( F ?- ( cod f ) ) ],( F ?- f ) ] by A2;
(( dom ( id ( dom f ) ) ) = ( dom f ) & ( cod ( id ( dom f ) ) ) = ( dom f )) by CAT_1:19;
hence ( G . ( id ( dom f ) ) ) = [ [ ( F ?- ( dom f ) ),( F ?- ( dom f ) ) ],( F ?- ( id ( dom f ) ) ) ] by A2
.= [ [ ( F ?- ( dom f ) ),( F ?- ( dom f ) ) ],( id ( F ?- ( dom f ) ) ) ] by CKB22:1
.= ( id d ) by NATTRA_1:def 17
.= ( id ( dom ( G . f ) ) ) by A3,NATTRA_1:33;
(( dom ( id ( cod f ) ) ) = ( cod f ) & ( cod ( id ( cod f ) ) ) = ( cod f )) by CAT_1:19;
hence ( G . ( id ( cod f ) ) ) = [ [ ( F ?- ( cod f ) ),( F ?- ( cod f ) ) ],( F ?- ( id ( cod f ) ) ) ] by A2
.= [ [ ( F ?- ( cod f ) ),( F ?- ( cod f ) ) ],( id ( F ?- ( cod f ) ) ) ] by CKB22:1
.= ( id c ) by NATTRA_1:def 17
.= ( id ( cod ( G . f ) ) ) by A3,NATTRA_1:33;
end;

let f being (Morphism of A);
let g being (Morphism of A);
assume A4: ( dom g ) = ( cod f );
then reconsider t = ( F ?- f ) as (natural_transformation of ( F ?- ( dom f ) ),( F ?- ( dom g ) ));
A5: (( cod ( g * f ) ) = ( cod g ) & ( dom ( g * f ) ) = ( dom f )) by A4,CAT_1:17;
A6: ( F ?- ( dom g ) ) is_naturally_transformable_to ( F ?- ( cod g ) ) by CKB20:1;
((the carrier' of ( Functors (B,C) )) = ( NatTrans (B,C) ) & ( F ?- ( dom f ) ) is_naturally_transformable_to ( F ?- ( cod f ) )) by CKB20:1,NATTRA_1:def 17;
then reconsider gg = [ [ ( F ?- ( dom g ) ),( F ?- ( cod g ) ) ],( F ?- g ) ],ff = [ [ ( F ?- ( dom f ) ),( F ?- ( cod f ) ) ],( F ?- f ) ] as (Morphism of ( Functors (B,C) )) by A6,NATTRA_1:32;
A7: ( G . f ) = ff by A2;
thus ( G . ( g * f ) ) = [ [ ( F ?- ( dom ( g * f ) ) ),( F ?- ( cod ( g * f ) ) ) ],( F ?- ( g * f ) ) ] by A2
.= [ [ ( F ?- ( dom ( g * f ) ) ),( F ?- ( cod ( g * f ) ) ) ],( ( F ?- g ) `*` t ) ] by A4,CKB23:1
.= ( gg * ff ) by A4,A5,NATTRA_1:36
.= ( ( G . g ) * ( G . f ) ) by A2,A7;
end;
then reconsider G as (Functor of A,( Functors (B,C) ));
take G;
thus thesis by A2;
end;
uniqueness
proof
let G1 being (Functor of A,( Functors (B,C) ));
let G2 being (Functor of A,( Functors (B,C) ));
assume that
A8: (for f being (Morphism of A) holds ( G1 . f ) = [ [ ( F ?- ( dom f ) ),( F ?- ( cod f ) ) ],( F ?- f ) ])
and
A9: (for f being (Morphism of A) holds ( G2 . f ) = [ [ ( F ?- ( dom f ) ),( F ?- ( cod f ) ) ],( F ?- f ) ]);
now
let f being (Morphism of A);
thus ( G1 . f ) = [ [ ( F ?- ( dom f ) ),( F ?- ( cod f ) ) ],( F ?- f ) ] by A8
.= ( G2 . f ) by A9;
end;
hence thesis by FUNCT_2:63;
end;
end;
