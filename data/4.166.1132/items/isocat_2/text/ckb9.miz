environ
vocabularies XBOOLE_0,FUNCT_1,FUNCT_2,FUNCT_5,ZFMISC_1,RELAT_1,TARSKI,SUBSET_1,MCART_1,CAT_1,GRAPH_1,NATTRA_1,STRUCT_0,CAT_2,FINSEQ_2,PZFMISC1,FUNCOP_1,PARTFUN1,BORSUK_1,ISOCAT_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,BINOP_1,FUNCT_3,FUNCT_5,STRUCT_0,GRAPH_1,CAT_1,CAT_2,NATTRA_1,ISOCAT_1,CKB1;
definitions TARSKI,FUNCT_1,CAT_1,NATTRA_1,ISOCAT_1,XBOOLE_0,BINOP_1,GRAPH_1;
theorems FUNCT_2,CAT_1,TARSKI,ZFMISC_1,FUNCT_1,DOMAIN_1,CAT_2,FUNCT_3,FUNCOP_1,NATTRA_1,ISOCAT_1,FUNCT_5,RELSET_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8;
schemes FUNCT_2;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FUNCT_2,STRUCT_0;
constructors PARTFUN1,DOMAIN_1,ISOCAT_1,FUNCOP_1,RELSET_1,CKB1;
requirements SUBSET,BOOLE;
begin
reserve A for Category;
reserve B for Category;
reserve F for (Functor of A,B);
reserve F1 for (Functor of A,B);
reserve m for set;
reserve t for (natural_transformation of F,F1);
theorem
Th9: (for f being (Morphism of ( Functors (A,B) )) holds (ex F1,F2 being (Functor of A,B) st (ex t being (natural_transformation of F1,F2) st (((F1 is_naturally_transformable_to F2 & ( dom f ) = F1) & ( cod f ) = F2) & f = [ [ F1,F2 ],t ]))))
proof
let m being (Morphism of ( Functors (A,B) ));
(( Hom (( dom m ),( cod m )) ) <> ( {} ) & m is (Morphism of ( dom m ),( cod m ))) by CAT_1:2,CAT_1:4;
then consider F,F1,t such that A1: (( dom m ) = F & ( cod m ) = F1) and A2: m = [ [ F,F1 ],t ] by NATTRA_1:34;
take F;
take F1;
take t;
(the carrier' of ( Functors (A,B) )) = ( NatTrans (A,B) ) by NATTRA_1:def 17;
hence F is_naturally_transformable_to F1 by A2,NATTRA_1:32;
thus thesis by A1,A2;
end;
