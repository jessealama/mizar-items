environ
vocabularies ORDERS_2,SUBSET_1,YELLOW_0,XXREAL_0,EQREL_1,LATTICE3,LATTICES,SETFAM_1,XBOOLE_0,RELAT_2,WAYBEL_0,TARSKI,STRUCT_0,ORDINAL2,REWRITE1,YELLOW_1,ZFMISC_1,RELAT_1;
notations TARSKI,XBOOLE_0,SUBSET_1,LATTICE3,YELLOW_0,DOMAIN_1,STRUCT_0,ORDERS_2,YELLOW_1,WAYBEL_0,YELLOW_3,CKB3,CKB4,CKB5,CKB6,CKB13,CKB14;
definitions LATTICE3,TARSKI,WAYBEL_0,XBOOLE_0,CKB3,CKB4,CKB13;
theorems LATTICE3,ORDERS_2,TARSKI,WAYBEL_0,YELLOW_0,YELLOW_1,YELLOW_2,YELLOW_3,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
registrations STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,CKB21,CKB22,CKB23,CKB24;
constructors DOMAIN_1,LATTICE3,YELLOW_1,YELLOW_3,CKB3,CKB4,CKB5,CKB6,CKB13,CKB14;
requirements SUBSET,BOOLE;
begin
theorem
Th15: (for L being non empty RelStr holds (for Y being (Subset of L) holds (for x being (Element of L) holds ( { x } "\/" Y ) = { ( x "\/" y ) where y is (Element of L): y in Y })))
proof
let L being non empty RelStr;
let Y being (Subset of L);
let x being (Element of L);
thus ( { x } "\/" Y ) c= { ( x "\/" y ) where y is (Element of L): y in Y }
proof
let q being set;
assume q in ( { x } "\/" Y );
then consider s being (Element of L),t being (Element of L) such that A1: q = ( s "\/" t ) and A2: s in { x } and A3: t in Y;
s = x by A2,TARSKI:def 1;
hence thesis by A1,A3;
end;

let q being set;
assume q in { ( x "\/" y ) where y is (Element of L): y in Y };
then A4: (ex y being (Element of L) st (q = ( x "\/" y ) & y in Y));
x in { x } by TARSKI:def 1;
hence thesis by A4;
end;
