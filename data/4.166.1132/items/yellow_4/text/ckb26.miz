environ
vocabularies ORDERS_2,SUBSET_1,YELLOW_0,XXREAL_0,EQREL_1,LATTICE3,LATTICES,SETFAM_1,XBOOLE_0,RELAT_2,WAYBEL_0,TARSKI,STRUCT_0,ORDINAL2,REWRITE1,YELLOW_1,ZFMISC_1,RELAT_1;
notations TARSKI,XBOOLE_0,SUBSET_1,LATTICE3,YELLOW_0,DOMAIN_1,STRUCT_0,ORDERS_2,YELLOW_1,WAYBEL_0,YELLOW_3,CKB3,CKB4,CKB5,CKB6,CKB13,CKB14;
definitions LATTICE3,TARSKI,WAYBEL_0,XBOOLE_0,CKB3,CKB4,CKB13;
theorems LATTICE3,ORDERS_2,TARSKI,WAYBEL_0,YELLOW_0,YELLOW_1,YELLOW_2,YELLOW_3,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB25;
registrations STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,CKB21,CKB22,CKB23,CKB24;
constructors DOMAIN_1,LATTICE3,YELLOW_1,YELLOW_3,CKB3,CKB4,CKB5,CKB6,CKB13,CKB14;
requirements SUBSET,BOOLE;
begin
theorem
(for L being non  empty RelStr holds (for A,B,C being (Subset of L) holds ( A "\/" ( B \/ C ) ) = ( ( A "\/" B ) \/ ( A "\/" C ) )))
proof
let L being non  empty RelStr;
let A being (Subset of L);
let B being (Subset of L);
let C being (Subset of L);
thus ( A "\/" ( B \/ C ) ) c= ( ( A "\/" B ) \/ ( A "\/" C ) )
proof
let q being set;
assume q in ( A "\/" ( B \/ C ) );
then consider a,y being (Element of L) such that A1: (q = ( a "\/" y ) & a in A) and A2: y in ( B \/ C );
(y in B or y in C) by A2,XBOOLE_0:def 3;
then (q in ( A "\/" B ) or q in ( A "\/" C )) by A1;
hence thesis by XBOOLE_0:def 3;
end;

let q being set;
assume that
A3: q in ( ( A "\/" B ) \/ ( A "\/" C ) );
per cases  by A3,XBOOLE_0:def 3;
suppose q in ( A "\/" B );

then consider a,b being (Element of L) such that A4: (q = ( a "\/" b ) & a in A) and A5: b in B;
b in ( B \/ C ) by A5,XBOOLE_0:def 3;
hence thesis by A4;
end;
suppose q in ( A "\/" C );

then consider a,b being (Element of L) such that A6: (q = ( a "\/" b ) & a in A) and A7: b in C;
b in ( B \/ C ) by A7,XBOOLE_0:def 3;
hence thesis by A6;
end;
end;
