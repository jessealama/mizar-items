environ
vocabularies ORDERS_2,SUBSET_1,YELLOW_0,XXREAL_0,EQREL_1,LATTICE3,LATTICES,SETFAM_1,XBOOLE_0,RELAT_2,WAYBEL_0,TARSKI,STRUCT_0,ORDINAL2,REWRITE1,YELLOW_1,ZFMISC_1,RELAT_1;
notations TARSKI,XBOOLE_0,SUBSET_1,LATTICE3,YELLOW_0,DOMAIN_1,STRUCT_0,ORDERS_2,YELLOW_1,WAYBEL_0,YELLOW_3,CKB3,CKB4,CKB5,CKB6,CKB13,CKB14;
definitions LATTICE3,TARSKI,WAYBEL_0,XBOOLE_0,CKB3,CKB4,CKB13;
theorems LATTICE3,ORDERS_2,TARSKI,WAYBEL_0,YELLOW_0,YELLOW_1,YELLOW_2,YELLOW_3,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB25,CKB26,CKB27,CKB28,CKB29;
registrations STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,CKB21,CKB22,CKB23,CKB24;
constructors DOMAIN_1,LATTICE3,YELLOW_1,YELLOW_3,CKB3,CKB4,CKB5,CKB6,CKB13,CKB14;
requirements SUBSET,BOOLE;
begin
Lm2:now
let L being non  empty RelStr;
let x being (Element of L);
let y being (Element of L);
let z being (Element of L);
thus { ( a "\/" b ) where a is (Element of L),b is (Element of L): (a in { x } & b in { y,z }) } = { ( x "\/" y ),( x "\/" z ) }
proof
thus { ( a "\/" b ) where a is (Element of L),b is (Element of L): (a in { x } & b in { y,z }) } c= { ( x "\/" y ),( x "\/" z ) }
proof
let q being set;
assume q in { ( a "\/" b ) where a is (Element of L),b is (Element of L): (a in { x } & b in { y,z }) };
then consider u,v being (Element of L) such that A1: q = ( u "\/" v ) and A2: u in { x } and A3: v in { y,z };
A4: (v = y or v = z) by A3,TARSKI:def 2;
u = x by A2,TARSKI:def 1;
hence thesis by A1,A4,TARSKI:def 2;
end;

let q being set;
A5: z in { y,z } by TARSKI:def 2;
assume q in { ( x "\/" y ),( x "\/" z ) };
then A6: (q = ( x "\/" y ) or q = ( x "\/" z )) by TARSKI:def 2;
(x in { x } & y in { y,z }) by TARSKI:def 1,TARSKI:def 2;
hence thesis by A6,A5;
end;

end;
theorem
(for L being non  empty RelStr holds (for x,y,z being (Element of L) holds ( { x } "\/" { y,z } ) = { ( x "\/" y ),( x "\/" z ) })) by Lm2;
