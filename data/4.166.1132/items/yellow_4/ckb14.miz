environ
vocabularies ORDERS_2,SUBSET_1,YELLOW_0,XXREAL_0,EQREL_1,LATTICE3,LATTICES,SETFAM_1,XBOOLE_0,RELAT_2,WAYBEL_0,TARSKI,STRUCT_0,ORDINAL2,REWRITE1,YELLOW_1,ZFMISC_1,RELAT_1;
notations TARSKI,XBOOLE_0,SUBSET_1,LATTICE3,YELLOW_0,DOMAIN_1,STRUCT_0,ORDERS_2,YELLOW_1,WAYBEL_0,YELLOW_3,CKB3,CKB4,CKB5,CKB6,CKB13;
definitions LATTICE3,TARSKI,WAYBEL_0,XBOOLE_0,CKB3,CKB4,CKB13;
theorems LATTICE3,ORDERS_2,TARSKI,WAYBEL_0,YELLOW_0,YELLOW_1,YELLOW_2,YELLOW_3,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
registrations STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2;
constructors DOMAIN_1,LATTICE3,YELLOW_1,YELLOW_3,CKB3,CKB4,CKB5,CKB6,CKB13;
requirements SUBSET,BOOLE;
begin
definition
let L being  with_suprema  antisymmetric RelStr;
let D1 being (Subset of L);
let D2 being (Subset of L);
redefine func D1 "\/" D2;

commutativity
proof
let D1 being (Subset of L),D2 being (Subset of L);
thus ( D1 "\/" D2 ) c= ( D2 "\/" D1 )
proof
let q being set;
assume q in ( D1 "\/" D2 );
then (ex x,y being (Element of L) st ((q = ( x "\/" y ) & x in D1) & y in D2));
hence thesis;
end;

let q being set;
assume q in ( D2 "\/" D1 );
then (ex x,y being (Element of L) st ((q = ( x "\/" y ) & x in D2) & y in D1));
hence thesis;
end;
end;
