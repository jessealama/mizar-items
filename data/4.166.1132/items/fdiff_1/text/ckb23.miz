environ
vocabularies NUMBERS,REAL_1,SUBSET_1,RCOMP_1,SEQ_1,PARTFUN1,VALUED_0,SEQ_2,ORDINAL2,CARD_1,ARYTM_3,FUNCT_1,RELAT_1,FUNCOP_1,VALUED_1,FUNCT_2,NAT_1,TARSKI,ARYTM_1,XREAL_0,ORDINAL1,XXREAL_1,XBOOLE_0,XXREAL_0,COMPLEX1,FCONT_1,XXREAL_2,FDIFF_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,FUNCT_2,FUNCOP_1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,RELSET_1,PARTFUN1,PARTFUN2,RCOMP_1,FCONT_1,XXREAL_0,CKB2,CKB4,CKB6,CKB7,CKB9,CKB16,CKB17,CKB18,CKB22;
definitions TARSKI,FCONT_1,XBOOLE_0,VALUED_1,RCOMP_1,SUBSET_1,CKB2,CKB4,CKB7,CKB16,CKB17,CKB18,CKB22;
theorems TARSKI,NAT_1,FUNCT_1,ABSVALUE,ZFMISC_1,SEQ_1,SEQ_2,SEQM_3,SEQ_4,PARTFUN1,PARTFUN2,RFUNCT_1,RFUNCT_2,RCOMP_1,FCONT_1,FUNCT_2,RELAT_1,XREAL_0,XBOOLE_0,XBOOLE_1,XCMPLX_0,XCMPLX_1,FUNCOP_1,XREAL_1,COMPLEX1,VALUED_1,VALUED_0,ORDINAL1,CKB1,CKB2,CKB4,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22;
schemes SEQ_1;
registrations FUNCT_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,RCOMP_1,VALUED_0,VALUED_1,FUNCT_2,FUNCOP_1,SEQ_4,REALSET1,SETFAM_1,RELAT_1,ZFMISC_1,CARD_1,FINSET_1,CKB3,CKB5,CKB8;
constructors PARTFUN1,REAL_1,NAT_1,COMPLEX1,SEQ_2,SEQM_3,RCOMP_1,PARTFUN2,RFUNCT_2,FCONT_1,VALUED_1,SEQ_1,REALSET1,FINSET_1,SETFAM_1,RELSET_1,BINOP_2,RVSUM_1,CKB2,CKB4,CKB7,CKB16,CKB17,CKB18,CKB22;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x for Real;
reserve x0 for Real;
reserve r for Real;
reserve p for Real;
reserve n for (Element of ( NAT ));
reserve Z for  open (Subset of ( REAL ));
reserve f for (PartFunc of ( REAL ),( REAL ));
reserve h for  convergent_to_0 Real_Sequence;
reconsider cf = ( ( REAL ) --> ( 0 ) ) as (Function of ( REAL ),( REAL )) by FUNCOP_1:45;
reserve R for REST;
reserve L for LINEAR;
theorem
((Z c= ( dom f ) & (ex r st ( rng f ) = { r })) implies (f is_differentiable_on Z & (for x holds (x in Z implies ( ( f `| Z ) . x ) = ( 0 )))))
proof
set R = cf;
A1: ( dom R ) = ( REAL ) by FUNCOP_1:13;
now
let h;
A2:now
let n being Nat;
A3: ( rng h ) c= ( dom R ) by A1;
A4: n in ( NAT ) by ORDINAL1:def 12;
hence ( ( ( h " ) (#) ( R /* h ) ) . n ) = ( ( ( h " ) . n ) * ( ( R /* h ) . n ) ) by SEQ_1:8
.= ( ( ( h " ) . n ) * ( R . ( h . n ) ) ) by A4,A3,FUNCT_2:108
.= ( ( ( h " ) . n ) * ( 0 ) ) by FUNCOP_1:7
.= ( 0 );
end;
then A5: ( ( h " ) (#) ( R /* h ) ) is  constant by VALUED_0:def 18;
hence ( ( h " ) (#) ( R /* h ) ) is  convergent;
( ( ( h " ) (#) ( R /* h ) ) . ( 0 ) ) = ( 0 ) by A2;
hence ( lim ( ( h " ) (#) ( R /* h ) ) ) = ( 0 ) by A5,SEQ_4:25;
end;
then reconsider R as REST by CKB4:def 1;
set L = cf;
(for p holds ( L . p ) = ( ( 0 ) * p )) by FUNCOP_1:7;
then reconsider L as LINEAR by CKB7:def 1;
assume A6: Z c= ( dom f );
given r such that
A7: ( rng f ) = { r };

A8:now
let x0;
assume x0 in ( dom f );
then ( f . x0 ) in { r } by A7,FUNCT_1:def 3;
hence ( f . x0 ) = r by TARSKI:def 1;
end;
A9:now
let x0;
assume A10: x0 in Z;
then consider N being (Neighbourhood of x0) such that A11: N c= Z by RCOMP_1:18;
A12: N c= ( dom f ) by A6,A11,XBOOLE_1:1;
(for x holds (x in N implies ( ( f . x ) - ( f . x0 ) ) = ( ( L . ( x - x0 ) ) + ( R . ( x - x0 ) ) )))
proof
let x;
assume x in N;
hence ( ( f . x ) - ( f . x0 ) ) = ( r - ( f . x0 ) ) by A8,A12
.= ( r - r ) by A6,A8,A10
.= ( ( L . ( x - x0 ) ) + ( 0 ) ) by FUNCOP_1:7
.= ( ( L . ( x - x0 ) ) + ( R . ( x - x0 ) ) ) by FUNCOP_1:7;
end;
hence f is_differentiable_in x0 by A12,CKB16:def 1;
end;
hence A13: f is_differentiable_on Z by A6,CKB20:1;
let x0;
assume A14: x0 in Z;
then A15: f is_differentiable_in x0 by A9;
then (ex N being (Neighbourhood of x0) st (N c= ( dom f ) & (ex L st (ex R st (for x holds (x in N implies ( ( f . x ) - ( f . x0 ) ) = ( ( L . ( x - x0 ) ) + ( R . ( x - x0 ) ) ))))))) by CKB16:def 1;
then consider N being (Neighbourhood of x0) such that A16: N c= ( dom f );
A17: (for x holds (x in N implies ( ( f . x ) - ( f . x0 ) ) = ( ( L . ( x - x0 ) ) + ( R . ( x - x0 ) ) )))
proof
let x;
assume x in N;
hence ( ( f . x ) - ( f . x0 ) ) = ( r - ( f . x0 ) ) by A8,A16
.= ( r - r ) by A6,A8,A14
.= ( ( L . ( x - x0 ) ) + ( 0 ) ) by FUNCOP_1:7
.= ( ( L . ( x - x0 ) ) + ( R . ( x - x0 ) ) ) by FUNCOP_1:7;
end;
thus ( ( f `| Z ) . x0 ) = ( diff (f,x0) ) by A13,A14,CKB22:def 1
.= ( L . 1 ) by A15,A16,A17,CKB17:def 1
.= ( 0 ) by FUNCOP_1:7;
end;
