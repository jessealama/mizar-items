environ
vocabularies NUMBERS,XBOOLE_0,SEQ_1,FUNCT_2,TARSKI,REAL_1,BINOP_1,SUBSET_1,FUNCT_1,ARYTM_3,ZFMISC_1,VALUED_1,CARD_1,FUNCOP_1,NAT_1,RLVECT_1,RELAT_1,SUPINF_2,ARYTM_1,STRUCT_0,ALGSTR_0,XREAL_0,ORDINAL1,RLSUB_1,REALSET1,SERIES_1,XXREAL_0,SQUARE_1,CARD_3,BHSP_1,COMPLEX1,SEQ_2,ORDINAL2,XXREAL_2,VALUED_0,RSSPACE;
notations TARSKI,SUBSET_1,XBOOLE_0,ZFMISC_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,COMPLEX1,STRUCT_0,ALGSTR_0,REAL_1,NAT_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,REALSET1,FUNCOP_1,RLVECT_1,RLSUB_1,BHSP_1,SQUARE_1,VALUED_1,SEQ_1,SEQ_2,SERIES_1,BINOP_1;
definitions SQUARE_1,BINOP_1,TARSKI,RLVECT_1,XBOOLE_0,REALSET1,STRUCT_0,ALGSTR_0;
theorems XBOOLE_0,RELAT_1,TARSKI,ABSVALUE,ZFMISC_1,SEQ_1,SEQ_2,SEQM_3,SERIES_1,COMSEQ_3,INT_1,FUNCT_1,NAT_1,FUNCT_2,RLVECT_1,RLSUB_1,SEQ_4,BINOP_1,FUNCOP_1,XREAL_1,ORDINAL1,ALGSTR_0,XREAL_0;
schemes NAT_1,BINOP_1,XBOOLE_0,BINOP_2;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,REALSET1,STRUCT_0,RLVECT_1,BHSP_1,ALGSTR_0,VALUED_1,FUNCT_2,VALUED_0;
constructors PARTFUN1,BINOP_1,FUNCOP_1,REAL_1,SQUARE_1,NAT_1,NAT_D,SEQ_2,SEQM_3,SERIES_1,REALSET1,RLSUB_1,BHSP_1,SEQ_1,VALUED_1,RELSET_1;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
definition
func the_set_of_RealSequences -> non empty set
means
:Def1: (for x being set holds (x in it iff x is Real_Sequence));
existence
proof
defpred P[ set ]
 means
$1 is Real_Sequence;
consider IT being set such that A1: (for x being set holds (x in IT iff (x in ( Funcs (( NAT ),( REAL )) ) & P[ x ]))) from XBOOLE_0:sch 1;
IT is non empty
proof
set zeroseq = the Real_Sequence;
zeroseq in ( Funcs (( NAT ),( REAL )) ) by FUNCT_2:8;
hence thesis by A1;
end;
then reconsider IT as non empty set;
take IT;
(for x being set holds (x is Real_Sequence implies x in IT))
proof
let x being set;
assume A2: x is Real_Sequence;
then x in ( Funcs (( NAT ),( REAL )) ) by FUNCT_2:8;
hence thesis by A1,A2;
end;
hence thesis by A1;
end;
uniqueness
proof
let X1 being non empty set,X2 being non empty set;
assume that
A3: (for x being set holds (x in X1 iff x is Real_Sequence))
and
A4: (for x being set holds (x in X2 iff x is Real_Sequence));
A5: X2 c= X1
proof
let x being set;
assume x in X2;
then x is Real_Sequence by A4;
hence thesis by A3;
end;
X1 c= X2
proof
let x being set;
assume x in X1;
then x is Real_Sequence by A3;
hence thesis by A4;
end;
hence thesis by A5,XBOOLE_0:def 10;
end;
end;
