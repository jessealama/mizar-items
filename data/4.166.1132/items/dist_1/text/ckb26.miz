environ
vocabularies NUMBERS,XBOOLE_0,FINSET_1,FINSEQ_1,RELAT_1,TARSKI,RPR_1,NAT_1,CARD_1,SUBSET_1,FUNCT_1,REAL_1,ARYTM_3,UPROOTS,SETFAM_1,MATRPROB,VALUED_1,CARD_3,PROB_2,XXREAL_0,ORDINAL4,PARTFUN1,DIST_1;
notations TARSKI,XBOOLE_0,SUBSET_1,FINSET_1,CARD_1,CARD_3,NUMBERS,XXREAL_0,BINOP_2,REAL_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FINSEQ_1,FINSEQ_2,VALUED_1,FUNCT_2,NAT_1,SETFAM_1,RPR_1,PROB_2,RVSUM_1,UPROOTS,MATRPROB,CKB1,CKB4,CKB5,CKB6,CKB9,CKB11,CKB13,CKB15,CKB19,CKB22;
definitions TARSKI,RPR_1,FINSEQ_1,RELAT_1,FUNCT_1,CARD_3,CKB6,CKB9,CKB11,CKB13,CKB15,CKB19,CKB22;
theorems TARSKI,FINSEQ_2,CARD_2,FINSEQ_4,FUNCT_1,FINSEQ_1,XBOOLE_0,XBOOLE_1,XXREAL_0,PROB_2,NAT_1,RELAT_1,ZFMISC_1,FUNCT_2,XCMPLX_1,VALUED_1,UPROOTS,FINSEQ_5,CARD_1,RVSUM_1,MATRPROB,CKB3,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes NAT_1,FINSEQ_1,FUNCT_2,SUBSET_1,CLASSES1;
registrations FUNCT_1,SUBSET_1,NAT_1,XREAL_0,XXREAL_0,ORDINAL1,UPROOTS,FINSEQ_1,FUNCT_2,RELAT_1,XBOOLE_0,FINSET_1,NUMBERS,VALUED_0,VALUED_1,CARD_1,MATRPROB,ENTROPY1,CKB2,CKB25;
constructors RPR_1,RVSUM_1,SEQ_1,BINOP_2,PARTFUN3,PROB_2,UPROOTS,MATRPROB,RELSET_1,REAL_1,CKB5,CKB6,CKB9,CKB11,CKB13,CKB15,CKB19,CKB22;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
definition
let S being non  empty  finite set;
let p being  ProbFinS (FinSequence of ( REAL ));
assume A1: (ex s being (FinSequence of S) st ( FDprobSEQ s ) = p);
func distribution (p,S) -> (Element of ( distribution_family S )) means 
:Def8: ( ( GenProbSEQ S ) . it ) = p;
existence
proof
consider s being (FinSequence of S) such that A2: ( FDprobSEQ s ) = p by A1;
consider CS being non  empty (Subset of ( S * )) such that A3: CS = ( Finseq-EQclass s );
reconsider CS as (Element of ( distribution_family S )) by A3,CKB19:def 1;
take CS;
thus thesis by A2,A3,CKB23:1;
end;
uniqueness
proof
let CS1 being (Element of ( distribution_family S ));
let CS2 being (Element of ( distribution_family S ));
assume A4: ( ( GenProbSEQ S ) . CS1 ) = p;
then A5: CS1 in ( dom ( GenProbSEQ S ) ) by FUNCT_1:def 2;
assume A6: ( ( GenProbSEQ S ) . CS2 ) = p;
then CS2 in ( dom ( GenProbSEQ S ) ) by FUNCT_1:def 2;
hence thesis by A4,A6,A5,FUNCT_1:def 4;
end;
end;
