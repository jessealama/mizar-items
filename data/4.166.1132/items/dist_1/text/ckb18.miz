environ
vocabularies NUMBERS,XBOOLE_0,FINSET_1,FINSEQ_1,RELAT_1,TARSKI,RPR_1,NAT_1,CARD_1,SUBSET_1,FUNCT_1,REAL_1,ARYTM_3,UPROOTS,SETFAM_1,MATRPROB,VALUED_1,CARD_3,PROB_2,XXREAL_0,ORDINAL4,PARTFUN1,DIST_1;
notations TARSKI,XBOOLE_0,SUBSET_1,FINSET_1,CARD_1,CARD_3,NUMBERS,XXREAL_0,BINOP_2,REAL_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FINSEQ_1,FINSEQ_2,VALUED_1,FUNCT_2,NAT_1,SETFAM_1,RPR_1,PROB_2,RVSUM_1,UPROOTS,MATRPROB,CKB1,CKB4,CKB5,CKB6,CKB9,CKB11,CKB13,CKB15;
definitions TARSKI,RPR_1,FINSEQ_1,RELAT_1,FUNCT_1,CARD_3,CKB6,CKB9,CKB11,CKB13,CKB15;
theorems TARSKI,FINSEQ_2,CARD_2,FINSEQ_4,FUNCT_1,FINSEQ_1,XBOOLE_0,XBOOLE_1,XXREAL_0,PROB_2,NAT_1,RELAT_1,ZFMISC_1,FUNCT_2,XCMPLX_1,VALUED_1,UPROOTS,FINSEQ_5,CARD_1,RVSUM_1,MATRPROB,CKB3,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes NAT_1,FINSEQ_1,FUNCT_2,SUBSET_1,CLASSES1;
registrations FUNCT_1,SUBSET_1,NAT_1,XREAL_0,XXREAL_0,ORDINAL1,UPROOTS,FINSEQ_1,FUNCT_2,RELAT_1,XBOOLE_0,FINSET_1,NUMBERS,VALUED_0,VALUED_1,CARD_1,MATRPROB,ENTROPY1,CKB2;
constructors RPR_1,RVSUM_1,SEQ_1,BINOP_2,PARTFUN3,PROB_2,UPROOTS,MATRPROB,RELSET_1,REAL_1,CKB5,CKB6,CKB9,CKB11,CKB13,CKB15;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
Th9: (for S being non empty  finite set holds (for s,t being (FinSequence of S) holds (s,t -are_prob_equivalent  iff ( Finseq-EQclass s ) = ( Finseq-EQclass t ))))
proof
let S being non empty  finite set;
let s being (FinSequence of S),t being (FinSequence of S);
A1:now
assume A2: s,t -are_prob_equivalent ;
now
let x being set;
assume x in ( Finseq-EQclass t );
then consider u being (FinSequence of S) such that A3: x = u and A4: t,u -are_prob_equivalent ;
s,u -are_prob_equivalent  by A2,A4,CKB14:1;
hence x in ( Finseq-EQclass s ) by A3;
end;
then A5: ( Finseq-EQclass t ) c= ( Finseq-EQclass s ) by TARSKI:def 3;
now
let x being set;
assume x in ( Finseq-EQclass s );
then consider u being (FinSequence of S) such that A6: x = u and A7: s,u -are_prob_equivalent ;
t,u -are_prob_equivalent  by A2,A7,CKB14:1;
hence x in ( Finseq-EQclass t ) by A6;
end;
then ( Finseq-EQclass s ) c= ( Finseq-EQclass t ) by TARSKI:def 3;
hence ( Finseq-EQclass t ) = ( Finseq-EQclass s ) by A5,XBOOLE_0:def 10;
end;
now
assume ( Finseq-EQclass s ) = ( Finseq-EQclass t );
then s in ( Finseq-EQclass t );
hence s,t -are_prob_equivalent  by CKB16:1;
end;
hence thesis by A1;
end;
