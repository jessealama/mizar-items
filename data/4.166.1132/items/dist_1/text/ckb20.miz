environ
vocabularies NUMBERS,XBOOLE_0,FINSET_1,FINSEQ_1,RELAT_1,TARSKI,RPR_1,NAT_1,CARD_1,SUBSET_1,FUNCT_1,REAL_1,ARYTM_3,UPROOTS,SETFAM_1,MATRPROB,VALUED_1,CARD_3,PROB_2,XXREAL_0,ORDINAL4,PARTFUN1,DIST_1;
notations TARSKI,XBOOLE_0,SUBSET_1,FINSET_1,CARD_1,CARD_3,NUMBERS,XXREAL_0,BINOP_2,REAL_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FINSEQ_1,FINSEQ_2,VALUED_1,FUNCT_2,NAT_1,SETFAM_1,RPR_1,PROB_2,RVSUM_1,UPROOTS,MATRPROB,CKB1,CKB4,CKB5,CKB6,CKB9,CKB11,CKB13,CKB15,CKB19;
definitions TARSKI,RPR_1,FINSEQ_1,RELAT_1,FUNCT_1,CARD_3,CKB6,CKB9,CKB11,CKB13,CKB15,CKB19;
theorems TARSKI,FINSEQ_2,CARD_2,FINSEQ_4,FUNCT_1,FINSEQ_1,XBOOLE_0,XBOOLE_1,XXREAL_0,PROB_2,NAT_1,RELAT_1,ZFMISC_1,FUNCT_2,XCMPLX_1,VALUED_1,UPROOTS,FINSEQ_5,CARD_1,RVSUM_1,MATRPROB,CKB3,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes NAT_1,FINSEQ_1,FUNCT_2,SUBSET_1,CLASSES1;
registrations FUNCT_1,SUBSET_1,NAT_1,XREAL_0,XXREAL_0,ORDINAL1,UPROOTS,FINSEQ_1,FUNCT_2,RELAT_1,XBOOLE_0,FINSET_1,NUMBERS,VALUED_0,VALUED_1,CARD_1,MATRPROB,ENTROPY1,CKB2;
constructors RPR_1,RVSUM_1,SEQ_1,BINOP_2,PARTFUN3,PROB_2,UPROOTS,MATRPROB,RELSET_1,REAL_1,CKB5,CKB6,CKB9,CKB11,CKB13,CKB15,CKB19;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
Th10: (for S being non  empty  finite set holds (for s,t being (FinSequence of S) holds (s,t -are_prob_equivalent  iff ( FDprobSEQ s ) = ( FDprobSEQ t ))))
proof
let S being non  empty  finite set;
let s being (FinSequence of S);
let t being (FinSequence of S);
A1:now
assume A2: ( FDprobSEQ s ) = ( FDprobSEQ t );
(for x being set holds ( FDprobability (x,t) ) = ( FDprobability (x,s) ))
proof
let x being set;
per cases ;
suppose x in S;

then x in ( rng ( canFS S ) ) by FUNCT_2:def 3;
then consider n being set such that A3: n in ( dom ( canFS S ) ) and A4: x = ( ( canFS S ) . n ) by FUNCT_1:def 3;
reconsider n as (Element of ( NAT )) by A3;
( len ( canFS S ) ) = ( card S ) by UPROOTS:3;
then A5: n in ( Seg ( card S ) ) by A3,FINSEQ_1:def 3;
then A6: n in ( dom ( FDprobSEQ t ) ) by CKB11:def 1;
n in ( dom ( FDprobSEQ s ) ) by A5,CKB11:def 1;
hence ( FDprobability (x,s) ) = ( ( FDprobSEQ s ) . n ) by A4,CKB11:def 1
.= ( FDprobability (x,t) ) by A2,A4,A6,CKB11:def 1;
end;
suppose A7: (not x in S);

A8: ( t " { x } ) = ( {} )
proof
assume ( t " { x } ) <> ( {} );
then consider y being set such that A9: y in ( t " { x } ) by XBOOLE_0:def 1;
y in ( dom t ) by A9,FUNCT_1:def 7;
then ( t . y ) in ( rng t ) by FUNCT_1:3;
then A10: ( t . y ) in S;
( t . y ) in { x } by A9,FUNCT_1:def 7;
hence contradiction by A7,A10,TARSKI:def 1;
end;
( s " { x } ) = ( {} )
proof
assume ( s " { x } ) <> ( {} );
then consider y being set such that A11: y in ( s " { x } ) by XBOOLE_0:def 1;
y in ( dom s ) by A11,FUNCT_1:def 7;
then ( s . y ) in ( rng s ) by FUNCT_1:3;
then A12: ( s . y ) in S;
( s . y ) in { x } by A11,FUNCT_1:def 7;
hence contradiction by A7,A12,TARSKI:def 1;
end;
hence ( FDprobability (x,s) ) = ( 0 )
.= ( FDprobability (x,t) ) by A8;
end;
end;
hence s,t -are_prob_equivalent  by CKB13:def 1;
end;
now
assume A13: s,t -are_prob_equivalent ;
A14:now
let n being Nat;
assume n in ( dom ( FDprobSEQ t ) );
hence ( ( FDprobSEQ t ) . n ) = ( FDprobability (( ( canFS S ) . n ),t) ) by CKB11:def 1
.= ( FDprobability (( ( canFS S ) . n ),s) ) by A13,CKB13:def 1;
end;
( dom ( FDprobSEQ t ) ) = ( Seg ( card S ) ) by CKB11:def 1;
hence ( FDprobSEQ s ) = ( FDprobSEQ t ) by A14,CKB11:def 1;
end;
hence thesis by A1;
end;
