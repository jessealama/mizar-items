environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,XBOOLEAN,FUNCT_1,PARTIT1,BVFUNC_1;
notations XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,FUNCT_2,BVFUNC_1;
definitions BVFUNC_1,XBOOLEAN;
theorems MARGREL1,BVFUNC_1,BVFUNC_4,BVFUNC_5,BVFUNC_6,BVFUNC_7,XBOOLEAN,CKB1,CKB2,CKB3;
registrations XBOOLE_0,XBOOLEAN,MARGREL1;
constructors BINARITH,BVFUNC_1;
requirements ARITHM,BOOLE;
begin
reserve Y for non empty set;
theorem
Lm2: (for a,b,c being (Element of ( Funcs (Y,( BOOLEAN )) )) holds ( ( ( a 'or' ( 'not' b ) ) '&' ( b 'or' ( 'not' c ) ) ) '&' ( c 'or' ( 'not' a ) ) ) '<' ( ( ( b 'or' ( 'not' a ) ) '&' ( c 'or' ( 'not' b ) ) ) '&' ( a 'or' ( 'not' c ) ) ))
proof
let a being (Element of ( Funcs (Y,( BOOLEAN )) )),b being (Element of ( Funcs (Y,( BOOLEAN )) )),c being (Element of ( Funcs (Y,( BOOLEAN )) ));
let z being (Element of Y);
A1: ( ( ( ( a 'or' ( 'not' b ) ) '&' ( b 'or' ( 'not' c ) ) ) '&' ( c 'or' ( 'not' a ) ) ) . z ) = ( ( ( ( a 'or' ( 'not' b ) ) '&' ( b 'or' ( 'not' c ) ) ) . z ) '&' ( ( c 'or' ( 'not' a ) ) . z ) ) by MARGREL1:def 20
.= ( ( ( ( a 'or' ( 'not' b ) ) . z ) '&' ( ( b 'or' ( 'not' c ) ) . z ) ) '&' ( ( c 'or' ( 'not' a ) ) . z ) ) by MARGREL1:def 20
.= ( ( ( ( a . z ) 'or' ( ( 'not' b ) . z ) ) '&' ( ( b 'or' ( 'not' c ) ) . z ) ) '&' ( ( c 'or' ( 'not' a ) ) . z ) ) by BVFUNC_1:def 4
.= ( ( ( ( a . z ) 'or' ( ( 'not' b ) . z ) ) '&' ( ( b . z ) 'or' ( ( 'not' c ) . z ) ) ) '&' ( ( c 'or' ( 'not' a ) ) . z ) ) by BVFUNC_1:def 4
.= ( ( ( ( a . z ) 'or' ( ( 'not' b ) . z ) ) '&' ( ( b . z ) 'or' ( ( 'not' c ) . z ) ) ) '&' ( ( c . z ) 'or' ( ( 'not' a ) . z ) ) ) by BVFUNC_1:def 4
.= ( ( ( ( a . z ) 'or' ( 'not' ( b . z ) ) ) '&' ( ( b . z ) 'or' ( ( 'not' c ) . z ) ) ) '&' ( ( c . z ) 'or' ( ( 'not' a ) . z ) ) ) by MARGREL1:def 19
.= ( ( ( ( a . z ) 'or' ( 'not' ( b . z ) ) ) '&' ( ( b . z ) 'or' ( 'not' ( c . z ) ) ) ) '&' ( ( c . z ) 'or' ( ( 'not' a ) . z ) ) ) by MARGREL1:def 19
.= ( ( ( ( a . z ) 'or' ( 'not' ( b . z ) ) ) '&' ( ( b . z ) 'or' ( 'not' ( c . z ) ) ) ) '&' ( ( c . z ) 'or' ( 'not' ( a . z ) ) ) ) by MARGREL1:def 19;
assume A2: ( ( ( ( a 'or' ( 'not' b ) ) '&' ( b 'or' ( 'not' c ) ) ) '&' ( c 'or' ( 'not' a ) ) ) . z ) = ( TRUE );
now
A3: ( ( ( ( b 'or' ( 'not' a ) ) '&' ( c 'or' ( 'not' b ) ) ) '&' ( a 'or' ( 'not' c ) ) ) . z ) = ( ( ( ( b 'or' ( 'not' a ) ) '&' ( c 'or' ( 'not' b ) ) ) . z ) '&' ( ( a 'or' ( 'not' c ) ) . z ) ) by MARGREL1:def 20
.= ( ( ( ( b 'or' ( 'not' a ) ) . z ) '&' ( ( c 'or' ( 'not' b ) ) . z ) ) '&' ( ( a 'or' ( 'not' c ) ) . z ) ) by MARGREL1:def 20
.= ( ( ( ( b . z ) 'or' ( ( 'not' a ) . z ) ) '&' ( ( c 'or' ( 'not' b ) ) . z ) ) '&' ( ( a 'or' ( 'not' c ) ) . z ) ) by BVFUNC_1:def 4
.= ( ( ( ( b . z ) 'or' ( ( 'not' a ) . z ) ) '&' ( ( c . z ) 'or' ( ( 'not' b ) . z ) ) ) '&' ( ( a 'or' ( 'not' c ) ) . z ) ) by BVFUNC_1:def 4
.= ( ( ( ( b . z ) 'or' ( ( 'not' a ) . z ) ) '&' ( ( c . z ) 'or' ( ( 'not' b ) . z ) ) ) '&' ( ( a . z ) 'or' ( ( 'not' c ) . z ) ) ) by BVFUNC_1:def 4;
assume ( ( ( ( b 'or' ( 'not' a ) ) '&' ( c 'or' ( 'not' b ) ) ) '&' ( a 'or' ( 'not' c ) ) ) . z ) <> ( TRUE );
then A4: ( ( ( ( b . z ) 'or' ( ( 'not' a ) . z ) ) '&' ( ( c . z ) 'or' ( ( 'not' b ) . z ) ) ) '&' ( ( a . z ) 'or' ( ( 'not' c ) . z ) ) ) = ( FALSE ) by A3,XBOOLEAN:def 3;
now
per cases  by A4,MARGREL1:12;
case A5: ( ( ( b . z ) 'or' ( ( 'not' a ) . z ) ) '&' ( ( c . z ) 'or' ( ( 'not' b ) . z ) ) ) = ( FALSE );
now
per cases  by A5,MARGREL1:12;
case A6: ( ( b . z ) 'or' ( ( 'not' a ) . z ) ) = ( FALSE );
A7: (( ( 'not' a ) . z ) = ( TRUE ) or ( ( 'not' a ) . z ) = ( FALSE )) by XBOOLEAN:def 3;
then ( 'not' ( a . z ) ) = ( FALSE ) by A6,MARGREL1:def 19;
hence thesis by A2,A1,A6,A7,XBOOLEAN:138;
end;
case A8: ( ( c . z ) 'or' ( ( 'not' b ) . z ) ) = ( FALSE );
A9: (( ( 'not' b ) . z ) = ( TRUE ) or ( ( 'not' b ) . z ) = ( FALSE )) by XBOOLEAN:def 3;
then ( 'not' ( b . z ) ) = ( FALSE ) by A8,MARGREL1:def 19;
hence thesis by A2,A1,A8,A9,XBOOLEAN:138;
end;
end;
hence thesis;
end;
case A10: ( ( a . z ) 'or' ( ( 'not' c ) . z ) ) = ( FALSE );
A11: (( ( 'not' c ) . z ) = ( TRUE ) or ( ( 'not' c ) . z ) = ( FALSE )) by XBOOLEAN:def 3;
then ( 'not' ( c . z ) ) = ( FALSE ) by A10,MARGREL1:def 19;
hence thesis by A2,A1,A10,A11,XBOOLEAN:138;
end;
end;
hence thesis;
end;
hence thesis;
end;
