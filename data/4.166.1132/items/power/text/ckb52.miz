environ
vocabularies NUMBERS,XREAL_0,ORDINAL1,SUBSET_1,INT_1,RAT_1,RELAT_1,ARYTM_1,NEWTON,ARYTM_3,CARD_1,PREPOWER,FUNCT_1,XXREAL_0,NAT_1,REAL_1,SEQ_1,SEQ_2,ORDINAL2,SQUARE_1,XXREAL_2,SEQ_4,COMPLEX1,VALUED_0,POWER,ABIAN;
notations SUBSET_1,NEWTON,ORDINAL1,XCMPLX_0,XREAL_0,XXREAL_0,COMPLEX1,INT_1,RAT_1,REAL_1,NUMBERS,NAT_1,SEQ_1,SEQ_2,SEQM_3,SQUARE_1,SEQ_4,PREPOWER,ABIAN,XXREAL_2,CKB4,CKB5,CKB26,CKB27;
definitions SQUARE_1,XCMPLX_0,INT_1,ABIAN,XXREAL_2,CKB4,CKB26;
theorems ABSVALUE,NAT_1,SEQ_2,SEQM_3,INT_1,SEQ_4,NEWTON,PREPOWER,TARSKI,FUNCT_2,XREAL_0,XCMPLX_1,XREAL_1,XXREAL_0,ABIAN,CKB1,CKB2,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51;
schemes SEQ_1;
registrations NUMBERS,XXREAL_0,XREAL_0,SQUARE_1,NAT_1,INT_1,RAT_1,MEMBERED,NEWTON,PREPOWER,XBOOLE_0,SEQ_4,ABIAN,CKB45;
constructors REAL_1,SQUARE_1,NAT_1,SEQ_2,SEQM_3,SEQ_4,NEWTON,PREPOWER,SEQ_1,XXREAL_2,RELSET_1,ABIAN,BINOP_2,CKB4,CKB5,CKB26,CKB27;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve a for  real number;
reserve k for Integer;
reserve l for Integer;
theorem
Th54: (k is  even implies ( ( - a ) to_power k ) = ( a to_power k ))
proof
given l such that
A1: k = ( 2 * l );

per cases ;
suppose a = ( 0 );

hence thesis;
end;
suppose a > ( 0 );

hence ( a to_power k ) = ( ( a to_power 2 ) to_power l ) by A1,CKB37:1
.= ( ( a ^2 ) to_power l ) by CKB51:1
.= ( ( ( - a ) ^2 ) to_power l )
.= ( ( ( - a ) to_power 2 ) to_power l ) by CKB51:1
.= ( ( ( - a ) #Z 2 ) to_power l ) by CKB26:def 1
.= ( ( ( - a ) #Z 2 ) #Z l ) by CKB26:def 1
.= ( ( - a ) #Z ( 2 * l ) ) by PREPOWER:45
.= ( ( - a ) to_power k ) by A1,CKB26:def 1;
end;
suppose a < ( 0 );

then ( - a ) > ( 0 ) by XREAL_1:58;
hence ( ( - a ) to_power k ) = ( ( ( - a ) to_power 2 ) to_power l ) by A1,CKB37:1
.= ( ( ( - a ) ^2 ) to_power l ) by CKB51:1
.= ( ( a ^2 ) to_power l )
.= ( ( a to_power 2 ) to_power l ) by CKB51:1
.= ( ( a #Z 2 ) to_power l ) by CKB26:def 1
.= ( ( a #Z 2 ) #Z l ) by CKB26:def 1
.= ( a #Z ( 2 * l ) ) by PREPOWER:45
.= ( a to_power k ) by A1,CKB26:def 1;
end;
end;
