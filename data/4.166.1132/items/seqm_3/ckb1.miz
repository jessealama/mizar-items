environ
vocabularies NUMBERS,SUBSET_1,XREAL_0,ORDINAL1,SEQ_1,ARYTM_3,NAT_1,CARD_1,FUNCT_1,XXREAL_0,PARTFUN1,ORDINAL2,RELAT_1,TARSKI,VALUED_0,FUNCT_3,ARYTM_1,VALUED_1,XXREAL_2,REAL_1,COMPLEX1,FINSEQ_1,SEQM_3,XBOOLE_0,FINSEQ_3;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XREAL_0,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_3,FINSEQ_1,FINSEQ_3,VALUED_1,SEQ_1,SEQ_2,REAL_1,COMPLEX1,NAT_1,VALUED_0,XXREAL_0;
definitions TARSKI,SEQ_2,FUNCT_1,VALUED_0,VALUED_1;
theorems FUNCT_1,SEQ_1,SEQ_2,ABSVALUE,NAT_1,FUNCT_2,XREAL_1,XXREAL_0,ORDINAL1,VALUED_0,VALUED_1,RELAT_1,COMPLEX1,INT_1,FINSEQ_1,FINSEQ_3,XBOOLE_1,TARSKI;
schemes NAT_1;
registrations XBOOLE_0,FUNCT_1,ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,VALUED_0,FUNCT_2,VALUED_1,SEQ_2,RFUNCT_1,RELAT_1,NAT_1,FINSEQ_1,CARD_1;
constructors PARTFUN1,FUNCT_3,FUNCOP_1,XXREAL_0,REAL_1,NAT_1,COMPLEX1,VALUED_1,SEQ_1,SEQ_2,FINSEQ_1,RECDEF_1,RELSET_1,FINSEQ_3;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
theorem
Lm1: (n < m implies (ex k st m = ( ( n + 1 ) + k )))
proof
assume A1: n < m;
then consider k1 being Nat such that A2: m = ( n + k1 ) by NAT_1:10;
k1 <> ( 0 ) by A1,A2;
then consider n1 being Nat such that A3: k1 = ( n1 + 1 ) by NAT_1:6;
reconsider n1 as (Element of ( NAT )) by ORDINAL1:def 12;
take n1;
thus thesis by A2,A3;
end;
