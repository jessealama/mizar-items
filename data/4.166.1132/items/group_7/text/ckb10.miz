environ
vocabularies FUNCT_1,PBOOLE,RELAT_1,XBOOLE_0,ALGSTR_0,PRALG_1,FUNCOP_1,SUBSET_1,RLVECT_2,STRUCT_0,CARD_3,TARSKI,BINOP_1,ZFMISC_1,MONOID_0,GROUP_1,SEMI_AF1,GROUP_2,FINSET_1,FUNCT_4,REALSET1,FINSEQ_1,NAT_1,XXREAL_0,NUMBERS,GROUP_6,FUNCT_2,WELLORD1,GROUP_7,PARTFUN1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,NUMBERS,NAT_1,FINSEQ_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_4,FINSET_1,BINOP_1,REALSET1,XXREAL_0,PBOOLE,FUNCOP_1,STRUCT_0,ALGSTR_0,MONOID_0,GROUP_1,GROUP_2,GROUP_6,CARD_3,PRALG_1,CKB1,CKB5,CKB6,CKB8;
definitions STRUCT_0,GROUP_1,TARSKI,GROUP_2,GROUP_6,FINSEQ_1,XBOOLE_0,PRALG_1,FUNCT_1,PBOOLE,BINOP_1,REALSET1,ALGSTR_0,CKB1,CKB8;
theorems PRALG_1,FUNCT_1,CARD_3,FUNCT_2,BINOP_1,TARSKI,ZFMISC_1,GROUP_1,GROUP_2,GROUP_6,FUNCT_4,FINSEQ_1,FINSEQ_3,ENUMSET1,RELSET_1,XBOOLE_0,XBOOLE_1,RELAT_1,FUNCOP_1,MONOID_0,ORDINAL1,PARTFUN1,CKB1,CKB8;
schemes BINOP_1,FUNCT_1,PBOOLE,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FINSET_1,XREAL_0,FINSEQ_1,REALSET1,STRUCT_0,GROUP_1,GROUP_2,MONOID_0,ORDINAL1,CARD_3,PRE_CIRC,FUNCOP_1,RELSET_1,CKB2,CKB3,CKB4,CKB7,CKB9;
constructors BINOP_1,XXREAL_0,REALSET1,GROUP_6,MONOID_0,PRALG_1,PRALG_2,RELSET_1,FUNCT_4,CKB1,CKB6,CKB8;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve i for set;
reserve I for set;
reserve f for Function;
reserve g for Function;
reserve h for Function;
theorem
Th4: (for F being (multMagma-Family of I) holds (for G being non  empty multMagma holds (for p,q being (Element of ( product F )) holds (for x,y being (Element of G) holds (((((((i in I & G = ( F . i )) & f = p) & g = q) & h = ( p * q )) & ( f . i ) = x) & ( g . i ) = y) implies ( x * y ) = ( h . i ))))))
proof
let F being (multMagma-Family of I);
let G being non  empty multMagma;
let p being (Element of ( product F ));
let q being (Element of ( product F ));
let x being (Element of G);
let y being (Element of G);
assume that
A1: i in I
and
A2: G = ( F . i )
and
A3: f = p
and
A4: g = q
and
A5: h = ( p * q )
and
A6: ( f . i ) = x
and
A7: ( g . i ) = y;
set GP = ( product F );
q in (the carrier of GP);
then A8: g in ( product ( Carrier F ) ) by A4,CKB8:def 1;
p in (the carrier of GP);
then f in ( product ( Carrier F ) ) by A3,CKB8:def 1;
then (ex Fi being non  empty multMagma st (ex m being Function st ((Fi = ( F . i ) & m = ( (the multF of GP) . (f,g) )) & ( m . i ) = ( (the multF of Fi) . (( f . i ),( g . i )) )))) by A1,A8,CKB8:def 1;
hence thesis by A2,A3,A4,A5,A6,A7;
end;
