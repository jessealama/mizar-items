environ
vocabularies FUNCT_1,PBOOLE,RELAT_1,XBOOLE_0,ALGSTR_0,PRALG_1,FUNCOP_1,SUBSET_1,RLVECT_2,STRUCT_0,CARD_3,TARSKI,BINOP_1,ZFMISC_1,MONOID_0,GROUP_1,SEMI_AF1,GROUP_2,FINSET_1,FUNCT_4,REALSET1,FINSEQ_1,NAT_1,XXREAL_0,NUMBERS,GROUP_6,FUNCT_2,WELLORD1,GROUP_7,PARTFUN1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,NUMBERS,NAT_1,FINSEQ_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_4,FINSET_1,BINOP_1,REALSET1,XXREAL_0,PBOOLE,FUNCOP_1,STRUCT_0,ALGSTR_0,MONOID_0,GROUP_1,GROUP_2,GROUP_6,CARD_3,PRALG_1,CKB1,CKB5,CKB6,CKB8,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
definitions STRUCT_0,GROUP_1,TARSKI,GROUP_2,GROUP_6,FINSEQ_1,XBOOLE_0,PRALG_1,FUNCT_1,PBOOLE,BINOP_1,REALSET1,ALGSTR_0,CKB1,CKB8,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
theorems PRALG_1,FUNCT_1,CARD_3,FUNCT_2,BINOP_1,TARSKI,ZFMISC_1,GROUP_1,GROUP_2,GROUP_6,FUNCT_4,FINSEQ_1,FINSEQ_3,ENUMSET1,RELSET_1,XBOOLE_0,XBOOLE_1,RELAT_1,FUNCOP_1,MONOID_0,ORDINAL1,PARTFUN1,CKB1,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB21,CKB22,CKB23,CKB24;
schemes BINOP_1,FUNCT_1,PBOOLE,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FINSET_1,XREAL_0,FINSEQ_1,REALSET1,STRUCT_0,GROUP_1,GROUP_2,MONOID_0,ORDINAL1,CARD_3,PRE_CIRC,FUNCOP_1,RELSET_1,CKB2,CKB3,CKB4,CKB7,CKB9,CKB17,CKB18,CKB19,CKB20;
constructors BINOP_1,XXREAL_0,REALSET1,GROUP_6,MONOID_0,PRALG_1,PRALG_2,RELSET_1,FUNCT_4,CKB1,CKB6,CKB8,CKB11,CKB12,CKB13;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve i for set;
reserve I for set;
reserve f for Function;
reserve g for Function;
reserve h for Function;
Lm1:now
let I being non  empty set;
let i being (Element of I);
let F being  multMagma-yielding (ManySortedSet of I);
let f being (Element of ( product ( Carrier F ) ));
A1: ( dom ( Carrier F ) ) = I by PARTFUN1:def 2;
(ex R being 1-sorted st (R = ( F . i ) & ( ( Carrier F ) . i ) = (the carrier of R))) by PRALG_1:def 13;
hence ( f . i ) in (the carrier of ( F . i )) by A1,CARD_3:9;
end;
theorem
Th9: (for F being  Group-like (multMagma-Family of I) holds (for G being  Group-like non  empty multMagma holds (((i in I & G = ( F . i )) & f = ( 1_ ( product F ) )) implies ( f . i ) = ( 1_ G ))))
proof
let F being  Group-like (multMagma-Family of I);
let G being  Group-like non  empty multMagma;
assume that
A1: i in I
and
A2: G = ( F . i )
and
A3: f = ( 1_ ( product F ) );
set GP = ( product F );
f in (the carrier of GP) by A3;
then A4: f in ( product ( Carrier F ) ) by CKB8:def 1;
then reconsider e = ( f . i ) as (Element of G) by A1,A2,Lm1;
now
let h being (Element of G);
defpred P[ set,set ]
 means
(($1 = i implies $2 = h) & ($1 <> i implies (ex H being  Group-like non  empty multMagma st (H = ( F . $1 ) & $2 = ( 1_ H )))));
A5: (for j being set holds (j in I implies (ex k being set st P[ j,k ])))
proof
let j being set;
assume that
A6: j in I;
per cases ;
suppose j = i;

hence thesis;
end;
suppose A7: j <> i;

consider Fj being  Group-like non  empty multMagma such that A8: Fj = ( F . j ) by A6,CKB11:def 1;
take ( 1_ Fj );
thus (j = i implies ( 1_ Fj ) = h) by A7;
thus thesis by A8;
end;
end;
consider g being (ManySortedSet of I) such that A9: (for j being set holds (j in I implies P[ j,( g . j ) ])) from PBOOLE:sch 3(A5);
A10: ( dom g ) = I by PARTFUN1:def 2;
A11:now
let j being set;
assume A12: j in ( dom g );
then A13: (ex R being 1-sorted st (R = ( F . j ) & ( ( Carrier F ) . j ) = (the carrier of R))) by A10,PRALG_1:def 13;
per cases ;
suppose A14: i = j;

then ( g . j ) = h by A9,A10,A12;
hence ( g . j ) in ( ( Carrier F ) . j ) by A2,A13,A14;
end;
suppose j <> i;

then (ex H being  Group-like non  empty multMagma st (H = ( F . j ) & ( g . j ) = ( 1_ H ))) by A9,A10,A12;
hence ( g . j ) in ( ( Carrier F ) . j ) by A13;
end;
end;
( dom ( Carrier F ) ) = I by PARTFUN1:def 2;
then A15: g in ( product ( Carrier F ) ) by A10,A11,CARD_3:9;
then reconsider g1 = g as (Element of GP) by CKB8:def 1;
A16: ( g1 * ( 1_ ( product F ) ) ) = g1 by GROUP_1:def 4;
A17: ( g . i ) = h by A1,A9;
A18: ( g . i ) = h by A1,A9;
(ex Fi being non  empty multMagma st (ex m being Function st ((Fi = ( F . i ) & m = ( (the multF of GP) . (g,f) )) & ( m . i ) = ( (the multF of Fi) . (( g . i ),( f . i )) )))) by A1,A4,A15,CKB8:def 1;
hence ( h * e ) = h by A2,A3,A16,A18;
A19: ( ( 1_ ( product F ) ) * g1 ) = g1 by GROUP_1:def 4;
(ex Fi being non  empty multMagma st (ex m being Function st ((Fi = ( F . i ) & m = ( (the multF of GP) . (f,g) )) & ( m . i ) = ( (the multF of Fi) . (( f . i ),( g . i )) )))) by A1,A4,A15,CKB8:def 1;
hence ( e * h ) = h by A2,A3,A19,A17;
end;
hence thesis by GROUP_1:4;
end;
