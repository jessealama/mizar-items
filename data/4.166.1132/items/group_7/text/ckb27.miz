environ
vocabularies FUNCT_1,PBOOLE,RELAT_1,XBOOLE_0,ALGSTR_0,PRALG_1,FUNCOP_1,SUBSET_1,RLVECT_2,STRUCT_0,CARD_3,TARSKI,BINOP_1,ZFMISC_1,MONOID_0,GROUP_1,SEMI_AF1,GROUP_2,FINSET_1,FUNCT_4,REALSET1,FINSEQ_1,NAT_1,XXREAL_0,NUMBERS,GROUP_6,FUNCT_2,WELLORD1,GROUP_7,PARTFUN1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,NUMBERS,NAT_1,FINSEQ_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_4,FINSET_1,BINOP_1,REALSET1,XXREAL_0,PBOOLE,FUNCOP_1,STRUCT_0,ALGSTR_0,MONOID_0,GROUP_1,GROUP_2,GROUP_6,CARD_3,PRALG_1,CKB1,CKB5,CKB6,CKB8,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
definitions STRUCT_0,GROUP_1,TARSKI,GROUP_2,GROUP_6,FINSEQ_1,XBOOLE_0,PRALG_1,FUNCT_1,PBOOLE,BINOP_1,REALSET1,ALGSTR_0,CKB1,CKB8,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
theorems PRALG_1,FUNCT_1,CARD_3,FUNCT_2,BINOP_1,TARSKI,ZFMISC_1,GROUP_1,GROUP_2,GROUP_6,FUNCT_4,FINSEQ_1,FINSEQ_3,ENUMSET1,RELSET_1,XBOOLE_0,XBOOLE_1,RELAT_1,FUNCOP_1,MONOID_0,ORDINAL1,PARTFUN1,CKB1,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
schemes BINOP_1,FUNCT_1,PBOOLE,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FINSET_1,XREAL_0,FINSEQ_1,REALSET1,STRUCT_0,GROUP_1,GROUP_2,MONOID_0,ORDINAL1,CARD_3,PRE_CIRC,FUNCOP_1,RELSET_1,CKB2,CKB3,CKB4,CKB7,CKB9,CKB17,CKB18,CKB19,CKB20;
constructors BINOP_1,XXREAL_0,REALSET1,GROUP_6,MONOID_0,PRALG_1,PRALG_2,RELSET_1,FUNCT_4,CKB1,CKB6,CKB8,CKB11,CKB12,CKB13;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve i for set;
reserve I for set;
reserve f for Function;
reserve g for Function;
Lm1:now
let I being non  empty set;
let i being (Element of I);
let F being  multMagma-yielding (ManySortedSet of I);
let f being (Element of ( product ( Carrier F ) ));
A1: ( dom ( Carrier F ) ) = I by PARTFUN1:def 2;
(ex R being 1-sorted st (R = ( F . i ) & ( ( Carrier F ) . i ) = (the carrier of R))) by PRALG_1:def 13;
hence ( f . i ) in (the carrier of ( F . i )) by A1,CARD_3:9;
end;
theorem
Th11: (for F being  associative  Group-like (multMagma-Family of I) holds (for x being (Element of ( product F )) holds (for G being Group holds (for y being (Element of G) holds (((((i in I & G = ( F . i )) & f = x) & g = ( x " )) & ( f . i ) = y) implies ( g . i ) = ( y " ))))))
proof
let F being  associative  Group-like (multMagma-Family of I);
let x being (Element of ( product F ));
let G being Group;
let y being (Element of G);
assume that
A1: i in I
and
A2: G = ( F . i )
and
A3: f = x
and
A4: g = ( x " )
and
A5: ( f . i ) = y;
set GP = ( product F );
A6: ( (the multF of GP) . (g,f) ) = ( ( x " ) * x ) by A3,A4
.= ( 1_ GP ) by GROUP_1:def 5;
( x " ) in (the carrier of GP);
then A7: g in ( product ( Carrier F ) ) by A4,CKB8:def 1;
then reconsider gi = ( g . i ) as (Element of G) by A1,A2,Lm1;
x in (the carrier of GP);
then A8: f in ( product ( Carrier F ) ) by A3,CKB8:def 1;
then (ex Fi being non  empty multMagma st (ex h being Function st ((Fi = ( F . i ) & h = ( (the multF of GP) . (g,f) )) & ( h . i ) = ( (the multF of Fi) . (( g . i ),( f . i )) )))) by A1,A7,CKB8:def 1;
then A9: ( gi * y ) = ( 1_ G ) by A1,A2,A5,A6,CKB25:1;
A10: ( (the multF of GP) . (f,g) ) = ( x * ( x " ) ) by A3,A4
.= ( 1_ GP ) by GROUP_1:def 5;
(ex Fi being non  empty multMagma st (ex h being Function st ((Fi = ( F . i ) & h = ( (the multF of GP) . (f,g) )) & ( h . i ) = ( (the multF of Fi) . (( f . i ),( g . i )) )))) by A1,A8,A7,CKB8:def 1;
then ( y * gi ) = ( 1_ G ) by A1,A2,A5,A10,CKB25:1;
hence thesis by A9,GROUP_1:def 5;
end;
