environ
vocabularies FUNCT_1,PBOOLE,RELAT_1,XBOOLE_0,ALGSTR_0,PRALG_1,FUNCOP_1,SUBSET_1,RLVECT_2,STRUCT_0,CARD_3,TARSKI,BINOP_1,ZFMISC_1,MONOID_0,GROUP_1,SEMI_AF1,GROUP_2,FINSET_1,FUNCT_4,REALSET1,FINSEQ_1,NAT_1,XXREAL_0,NUMBERS,GROUP_6,FUNCT_2,WELLORD1,GROUP_7,PARTFUN1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,NUMBERS,NAT_1,FINSEQ_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCT_4,FINSET_1,BINOP_1,REALSET1,XXREAL_0,PBOOLE,FUNCOP_1,STRUCT_0,ALGSTR_0,MONOID_0,GROUP_1,GROUP_2,GROUP_6,CARD_3,PRALG_1,CKB1,CKB5,CKB6,CKB8,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
definitions STRUCT_0,GROUP_1,TARSKI,GROUP_2,GROUP_6,FINSEQ_1,XBOOLE_0,PRALG_1,FUNCT_1,PBOOLE,BINOP_1,REALSET1,ALGSTR_0,CKB1,CKB8,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
theorems PRALG_1,FUNCT_1,CARD_3,FUNCT_2,BINOP_1,TARSKI,ZFMISC_1,GROUP_1,GROUP_2,GROUP_6,FUNCT_4,FINSEQ_1,FINSEQ_3,ENUMSET1,RELSET_1,XBOOLE_0,XBOOLE_1,RELAT_1,FUNCOP_1,MONOID_0,ORDINAL1,PARTFUN1,CKB1,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB21,CKB22,CKB23;
schemes BINOP_1,FUNCT_1,PBOOLE,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FINSET_1,XREAL_0,FINSEQ_1,REALSET1,STRUCT_0,GROUP_1,GROUP_2,MONOID_0,ORDINAL1,CARD_3,PRE_CIRC,FUNCOP_1,RELSET_1,CKB2,CKB3,CKB4,CKB7,CKB9,CKB17,CKB18,CKB19,CKB20;
constructors BINOP_1,XXREAL_0,REALSET1,GROUP_6,MONOID_0,PRALG_1,PRALG_2,RELSET_1,FUNCT_4,CKB1,CKB6,CKB8,CKB11,CKB12,CKB13;
requirements NUMERALS,BOOLE,SUBSET;
begin
reserve i for set;
reserve I for set;
reserve f for Function;
reserve h for Function;
reserve s for (ManySortedSet of I);
Lm1:now
let I being non  empty set;
let i being (Element of I);
let F being  multMagma-yielding (ManySortedSet of I);
let f being (Element of ( product ( Carrier F ) ));
A1: ( dom ( Carrier F ) ) = I by PARTFUN1:def 2;
(ex R being 1-sorted st (R = ( F . i ) & ( ( Carrier F ) . i ) = (the carrier of R))) by PRALG_1:def 13;
hence ( f . i ) in (the carrier of ( F . i )) by A1,CARD_3:9;
end;
theorem
Th8: (for F being  Group-like (multMagma-Family of I) holds ((for i being set holds (i in I implies (ex G being  Group-like non  empty multMagma st (G = ( F . i ) & ( s . i ) = ( 1_ G ))))) implies s = ( 1_ ( product F ) )))
proof
let F being  Group-like (multMagma-Family of I);
assume that
A1: (for i being set holds (i in I implies (ex G being  Group-like non  empty multMagma st (G = ( F . i ) & ( s . i ) = ( 1_ G )))));
set GP = ( product F );
A2: ( dom ( Carrier F ) ) = I by PARTFUN1:def 2;
A3: ( dom s ) = I by PARTFUN1:def 2;
now
let i being set;
assume A4: i in ( dom s );
then A5: (ex R being 1-sorted st (R = ( F . i ) & ( ( Carrier F ) . i ) = (the carrier of R))) by A3,PRALG_1:def 13;
(ex G being  Group-like non  empty multMagma st (G = ( F . i ) & ( s . i ) = ( 1_ G ))) by A1,A3,A4;
hence ( s . i ) in ( ( Carrier F ) . i ) by A5;
end;
then A6: s in ( product ( Carrier F ) ) by A3,A2,CARD_3:9;
then reconsider e = s as (Element of GP) by CKB8:def 1;
now
let h being (Element of GP);
reconsider h1 = h,he = ( h * e ),eh = ( e * h ) as (Element of ( product ( Carrier F ) )) by CKB8:def 1;
A7: ( dom h1 ) = I by A2,CARD_3:9;
A8:now
let i being set;
assume A9: i in I;
then consider G being  Group-like non  empty multMagma such that A10: G = ( F . i ) and A11: ( s . i ) = ( 1_ G ) by A1;
reconsider b = ( h1 . i ),c = ( s . i ) as (Element of G) by A9,A10,A11,Lm1;
A12: (ex Fi being non  empty multMagma st (ex m being Function st ((Fi = ( F . i ) & m = ( (the multF of GP) . (h,s) )) & ( m . i ) = ( (the multF of Fi) . (( h1 . i ),( s . i )) )))) by A6,A9,CKB8:def 1;
( b * c ) = b by A11,GROUP_1:def 4;
hence ( he . i ) = ( h1 . i ) by A12,A10;
end;
( dom he ) = I by A2,CARD_3:9;
hence ( h * e ) = h by A7,A8,FUNCT_1:2;
A13:now
let i being set;
assume A14: i in I;
then consider G being  Group-like non  empty multMagma such that A15: G = ( F . i ) and A16: ( s . i ) = ( 1_ G ) by A1;
reconsider b = ( h1 . i ),c = ( s . i ) as (Element of G) by A14,A15,A16,Lm1;
A17: (ex Fi being non  empty multMagma st (ex m being Function st ((Fi = ( F . i ) & m = ( (the multF of GP) . (s,h) )) & ( m . i ) = ( (the multF of Fi) . (( s . i ),( h1 . i )) )))) by A6,A14,CKB8:def 1;
( c * b ) = b by A16,GROUP_1:def 4;
hence ( eh . i ) = ( h1 . i ) by A17,A15;
end;
( dom eh ) = I by A2,CARD_3:9;
hence ( e * h ) = h by A7,A13,FUNCT_1:2;
end;
hence thesis by GROUP_1:4;
end;
