environ
vocabularies NUMBERS,STRUCT_0,FINSEQ_1,SUBSET_1,RELAT_1,FUNCT_1,NAT_1,ORDINAL4,VECTSP_1,INT_3,CARD_1,SUPINF_2,MESFUNC1,ARYTM_3,INT_1,QC_LANG1,XBOOLE_0,TARSKI,BINOP_1,ZFMISC_1,RLVECT_1,ALGSTR_0,GROUP_1,RLVECT_2,XXREAL_0,CARD_3,RLVECT_3,REALSET1,VALUED_1,FINSEQ_2,PARTFUN1,FINSET_1,FUNCT_4,RLVECT_5,ORDINAL2,BSPACE;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,DOMAIN_1,RELSET_1,FUNCT_1,NUMBERS,NAT_1,INT_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCT_7,XXREAL_0,CARD_1,FINSET_1,FINSEQ_1,FINSEQOP,CARD_2,STRUCT_0,ALGSTR_0,GROUP_1,RLVECT_1,VECTSP_1,VECTSP_6,VECTSP_7,MATRLIN,VECTSP_9,INT_3,RANKNULL,CKB1,CKB5,CKB12,CKB21;
definitions TARSKI,FUNCT_1,FINSEQ_1,CARD_1,XBOOLE_0,VECTSP_1,RLVECT_1,STRUCT_0,FINSEQ_2,BINOP_1,INT_3,ALGSTR_0,CKB1,CKB5,CKB12,CKB21;
theorems TARSKI,ZFMISC_1,FINSEQ_1,FUNCT_1,VECTSP_7,CARD_2,XBOOLE_1,FUNCT_2,SUBSET_1,XBOOLE_0,VECTSP_1,RLVECT_1,VECTSP_4,VECTSP_6,STRUCT_0,CARD_1,FUNCOP_1,FUNCT_7,FINSEQ_2,NAT_1,WELLORD2,RANKNULL,MATRIX_3,INT_2,INT_3,GR_CY_1,NAT_D,REALSET1,ORDINAL1,PARTFUN1,FINSEQ_3,MATRLIN,CKB1,CKB2,CKB3,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
schemes FINSEQ_1,FINSET_1,BINOP_1,FINSEQ_2,CLASSES1,CKB4;
registrations RELAT_1,STRUCT_0,CARD_1,FINSET_1,FINSEQ_1,SUBSET_1,XBOOLE_0,VECTSP_1,ORDINAL1,XREAL_0,INT_1,VECTSP_7,ZFMISC_1,RELSET_1;
constructors FINSEQOP,VECTSP_7,VECTSP_9,REALSET1,WELLORD2,NAT_D,FUNCT_7,CARD_2,RANKNULL,INT_3,GR_CY_1,XXREAL_0,RELSET_1,BINOP_2,CKB1,CKB5,CKB12,CKB21;
requirements NUMERALS,BOOLE,ARITHM,SUBSET,REAL;
begin
reserve X for set;
definition
let X being set;
func bspace-sum X -> (BinOp of ( bool X )) means 
:Def5: (for c,d being (Subset of X) holds ( it . (c,d) ) = ( c \+\ d ));
existence
proof
defpred P[ set,set,set ]
 means
(ex a,b being (Subset of X) st (($1 = a & $2 = b) & $3 = ( a \+\ b )));
A1: (for x,y being set holds ((x in ( bool X ) & y in ( bool X )) implies (ex z being set st (z in ( bool X ) & P[ x,y,z ]))))
proof
let x being set;
let y being set;
assume (x in ( bool X ) & y in ( bool X ));
then reconsider x,y as (Subset of X);
set z = ( x \+\ y );
take z;
thus thesis;
end;
consider f being (Function of [: ( bool X ),( bool X ) :],( bool X )) such that A2: (for x,y being set holds ((x in ( bool X ) & y in ( bool X )) implies P[ x,y,( f . (x,y) ) ])) from BINOP_1:sch 1(A1);
reconsider f as (BinOp of ( bool X ));
take f;
(for c,d being (Subset of X) holds ( f . (c,d) ) = ( c \+\ d ))
proof
let c being (Subset of X);
let d being (Subset of X);
(ex a,b being (Subset of X) st ((c = a & d = b) & ( f . (c,d) ) = ( a \+\ b ))) by A2;
hence thesis;
end;
hence thesis;
end;
uniqueness
proof
let f being (BinOp of ( bool X ));
let g being (BinOp of ( bool X ));
assume that
A3: ((for c,d being (Subset of X) holds ( f . (c,d) ) = ( c \+\ d )) & (for c,d being (Subset of X) holds ( g . (c,d) ) = ( c \+\ d )));
A4: (for x being set holds (x in ( dom f ) implies ( f . x ) = ( g . x )))
proof
let x being set;
assume x in ( dom f );
then consider y,z being set such that A5: y in ( bool X ) and A6: z in ( bool X ) and A7: x = [ y,z ] by ZFMISC_1:def 2;
reconsider z as (Subset of X) by A6;
reconsider y as (Subset of X) by A5;
(( f . (y,z) ) = ( y \+\ z ) & ( g . (y,z) ) = ( y \+\ z )) by A3;
hence thesis by A7;
end;
( dom f ) = [: ( bool X ),( bool X ) :] by FUNCT_2:def 1;
then ( dom f ) = ( dom g ) by FUNCT_2:def 1;
hence thesis by A4,FUNCT_1:2;
end;
end;
