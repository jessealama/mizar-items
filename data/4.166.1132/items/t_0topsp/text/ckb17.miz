environ
vocabularies XBOOLE_0,FUNCT_1,SUBSET_1,RELAT_1,TARSKI,PRE_TOPC,TOPS_2,RCOMP_1,EQREL_1,STRUCT_0,RELAT_2,BORSUK_1,ORDINAL2,CARD_3,CLASSES1,T_0TOPSP,FUNCT_2;
notations TARSKI,XBOOLE_0,SUBSET_1,CLASSES1,RELAT_2,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,STRUCT_0,PRE_TOPC,TOPS_2,BORSUK_1,EQREL_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8;
definitions TOPS_2,RELAT_2,RELSET_1,STRUCT_0,PRE_TOPC,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8;
theorems FUNCT_1,FUNCT_2,EQREL_1,RELAT_1,TOPS_2,PRE_TOPC,BORSUK_1,TARSKI,RELSET_1,XBOOLE_0,RELAT_2,PARTFUN1,ORDERS_1,SUBSET_1,CLASSES1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
schemes FUNCT_2,RELSET_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,STRUCT_0,PRE_TOPC,BORSUK_1,EQREL_1,RELSET_1,CKB7;
constructors SETFAM_1,RFINSEQ,TOPS_2,BORSUK_1,CLASSES1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8;
requirements SUBSET,BOOLE;
begin
definition
let T being TopStruct;
redefine attr T is  T_0
means
:Def7: (T is  empty or (for x,y being (Point of T) holds (x <> y implies (ex V being (Subset of T) st (V is  open & ((x in V & (not y in V)) or (y in V & (not x in V))))))));
compatibility
proof
thus (T is  T_0 implies (T is  empty or (for x,y being (Point of T) holds (x <> y implies (ex V being (Subset of T) st (V is  open & ((x in V & (not y in V)) or (y in V & (not x in V))))))))) by PRE_TOPC:def 8;
assume A1: (T is  empty or (for x,y being (Point of T) holds (x <> y implies (ex V being (Subset of T) st (V is  open & ((x in V & (not y in V)) or (y in V & (not x in V))))))));
let x being (Point of T);
let y being (Point of T);
assume that
A2: (for G being (Subset of T) holds (G is  open implies (x in G iff y in G)));
per cases  by A1;
suppose A3: T is  empty;

then x = ( {} ) by SUBSET_1:def 1;
hence thesis by A3,SUBSET_1:def 1;
end;
suppose (for x,y being (Point of T) holds (x <> y implies (ex V being (Subset of T) st (V is  open & ((x in V & (not y in V)) or (y in V & (not x in V)))))));

hence thesis by A2;
end;
end;
end;
