environ
vocabularies SUBSET_1,RELAT_1,XBOOLE_0,FUNCT_1,ZFMISC_1,EQREL_1,RELAT_2,ORDERS_2,STRUCT_0,TARSKI,YELLOW_0,LATTICES,LATTICE3,ORDINAL2,WAYBEL_0,WELLORD1,CAT_1,XXREAL_0,REWRITE1,WAYBEL_1,GROUP_6,SEQM_3,YELLOW_1,WAYBEL_3,PBOOLE,CARD_3,FINSET_1,FUNCT_4,WAYBEL16,WAYBEL_5,BINOP_1,SETFAM_1,WAYBEL20;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,SETFAM_1,RELAT_2,FUNCT_1,PBOOLE,RELSET_1,PARTFUN1,BINOP_1,FUNCT_2,FINSET_1,DOMAIN_1,EQREL_1,FUNCT_3,FUNCT_7,STRUCT_0,ORDERS_2,LATTICE3,QUANTAL1,YELLOW_0,YELLOW_1,YELLOW_2,YELLOW_3,WAYBEL_0,WAYBEL_1,WAYBEL_3,WAYBEL_5,WAYBEL16,CKB3,CKB36,CKB37,CKB39,CKB44,CKB47;
definitions TARSKI,RELAT_2,LATTICE3,LATTICE5,YELLOW_0,WAYBEL_0,WAYBEL_1,WAYBEL_3,YELLOW_2,BINOP_1,STRUCT_0,CKB36,CKB37,CKB39,CKB44,CKB47;
theorems TARSKI,ZFMISC_1,RELAT_1,RELAT_2,FUNCT_1,FUNCT_2,FUNCT_3,FUNCT_5,FUNCT_7,CARD_3,ORDERS_2,LATTICE3,LATTICE5,QUANTAL1,EQREL_1,YELLOW_0,YELLOW_2,YELLOW_3,YELLOW10,WAYBEL_0,WAYBEL_1,WAYBEL_3,WAYBEL_5,WAYBEL13,WAYBEL15,WAYBEL16,WAYBEL17,XBOOLE_0,XBOOLE_1,PARTFUN1,ORDERS_1,CKB1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49;
schemes YELLOW_0,FUNCT_2,PBOOLE;
registrations XBOOLE_0,SUBSET_1,RELAT_1,PARTFUN1,FUNCT_2,FINSET_1,STRUCT_0,LATTICE3,YELLOW_0,MONOID_0,WAYBEL_0,YELLOW_2,WAYBEL_1,YELLOW_3,WAYBEL_3,WAYBEL10,YELLOW_9,RELSET_1,CKB43;
constructors DOMAIN_1,FUNCT_7,MONOID_0,QUANTAL1,ORDERS_3,WAYBEL_1,YELLOW_3,WAYBEL16,RELSET_1,CKB3,CKB36,CKB37,CKB39,CKB44,CKB47;
requirements SUBSET,BOOLE;
begin
theorem
(for L being  continuous  complete LATTICE holds (for k being  directed-sups-preserving  kernel (Function of L,L) holds k = ( kernel_op ( kernel_congruence k ) )))
proof
let L being  continuous  complete LATTICE;
let k being  directed-sups-preserving  kernel (Function of L,L);
set kc = ( kernel_congruence k );
set cL = (the carrier of L);
set km = ( kernel_op kc );
A1: ( dom k ) = cL by FUNCT_2:def 1;
A2: km <= ( id L ) by WAYBEL_1:def 15;
A3: k <= ( id L ) by WAYBEL_1:def 15;
A4: kc is  CLCongruence by CKB46:1;
then A5: kc = ( [: km,km :] " ( id cL ) ) by CKB40:1;
reconsider kc9 = kc as (Equivalence_Relation of cL) by A4,CKB37:def 1;
( field kc9 ) = cL by ORDERS_1:12;
then A6: kc9 is_transitive_in cL by RELAT_2:def 16;
A7: ( dom [: km,km :] ) = [: ( dom km ),( dom km ) :] by FUNCT_3:def 8;
A8: ( dom km ) = cL by FUNCT_2:def 1;
A9: ( dom [: k,k :] ) = [: ( dom k ),( dom k ) :] by FUNCT_3:def 8;
now
let x being set;
assume x in cL;
then reconsider x9 = x as (Element of L);
A10: ( k . ( k . x9 ) ) = ( ( k * k ) . x9 ) by A1,FUNCT_1:13
.= ( k . x9 ) by QUANTAL1:def 9;
A11: ([ ( k . x9 ),( k . x9 ) ] in ( id cL ) & ( [: k,k :] . (( k . x9 ),x9) ) = [ ( k . ( k . x9 ) ),( k . x9 ) ]) by A1,FUNCT_3:def 8,RELAT_1:def 10;
[ ( k . x9 ),x9 ] in ( dom [: k,k :] ) by A1,A9,ZFMISC_1:def 2;
then A12: [ ( k . x9 ),x9 ] in kc by A10,A11,FUNCT_1:def 7;
A13: ( km . ( km . x9 ) ) = ( ( km * km ) . x9 ) by A8,FUNCT_1:13
.= ( km . x9 ) by QUANTAL1:def 9;
( km . ( k . x9 ) ) <= ( ( id L ) . ( k . x9 ) ) by A2,YELLOW_2:9;
then A14: ( km . ( k . x9 ) ) <= ( k . x9 ) by FUNCT_1:18;
A15: ([ ( km . x9 ),( km . x9 ) ] in ( id cL ) & ( [: km,km :] . (x9,( km . x9 )) ) = [ ( km . x9 ),( km . ( km . x9 ) ) ]) by A8,FUNCT_3:def 8,RELAT_1:def 10;
[ x9,( km . x9 ) ] in ( dom [: km,km :] ) by A8,A7,ZFMISC_1:def 2;
then [ x9,( km . x9 ) ] in kc by A5,A13,A15,FUNCT_1:def 7;
then A16: [ ( k . x9 ),( km . x9 ) ] in kc by A6,A12,RELAT_2:def 8;
then ( [: k,k :] . (( k . x9 ),( km . x9 )) ) in ( id cL ) by FUNCT_1:def 7;
then [ ( k . ( k . x9 ) ),( k . ( km . x9 ) ) ] in ( id cL ) by A1,FUNCT_3:def 8;
then A17: ( k . ( km . x9 ) ) = ( k . ( k . x9 ) ) by RELAT_1:def 10
.= ( ( k * k ) . x9 ) by A1,FUNCT_1:13
.= ( k . x9 ) by QUANTAL1:def 9;
( [: km,km :] . (( k . x9 ),( km . x9 )) ) in ( id cL ) by A5,A16,FUNCT_1:def 7;
then [ ( km . ( k . x9 ) ),( km . ( km . x9 ) ) ] in ( id cL ) by A8,FUNCT_3:def 8;
then A18: ( km . ( k . x9 ) ) = ( km . ( km . x9 ) ) by RELAT_1:def 10
.= ( ( km * km ) . x9 ) by A8,FUNCT_1:13
.= ( km . x9 ) by QUANTAL1:def 9;
( k . ( km . x9 ) ) <= ( ( id L ) . ( km . x9 ) ) by A3,YELLOW_2:9;
then ( k . ( km . x9 ) ) <= ( km . x9 ) by FUNCT_1:18;
hence ( k . x ) = ( km . x ) by A17,A18,A14,YELLOW_0:def 3;
end;
hence thesis by FUNCT_2:12;
end;
