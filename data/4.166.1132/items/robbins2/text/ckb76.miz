environ
vocabularies XBOOLE_0,ROBBINS1,SUBSET_1,ARYTM_3,LATTICES,ROBBINS2;
notations STRUCT_0,LATTICES,ROBBINS1,CKB1,CKB74,CKB75;
definitions CKB1,CKB74,CKB75;
theorems ROBBINS1,LATTICES,STRUCT_0,CKB1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB68,CKB69,CKB74,CKB75;
registrations LATTICES,ROBBINS1,STRUCT_0,CKB2,CKB3,CKB4,CKB33,CKB66,CKB67,CKB70,CKB71,CKB72,CKB73;
constructors ROBBINS1,CKB1,CKB74,CKB75;
begin
reserve L for  satisfying_DN_1 non empty ComplLLattStr;
reserve x for (Element of L);
reserve y for (Element of L);
reserve z for (Element of L);
Lm4:now
let L being non empty ComplLLattStr;
assume A1: L is  satisfying_MD_1  satisfying_MD_2;
A2: (for x,y being (Element of L) holds ( ( x ` ) + ( ( x ` ) + y ) ) = ( ( x ` ) + y ))
proof
let x being (Element of L),y being (Element of L);
set X = ( ( x ` ) + y );
( ( X ` ) + x ) = x by A1,CKB74:def 1;
hence thesis by A1,CKB74:def 1;
end;
A3: (for x,y being (Element of L) holds ( ( ( ( x ` ) + y ) ` ) + y ) = ( y + x ))
proof
let x being (Element of L),y being (Element of L);
set X = ( ( x ` ) + y );
A4: ( ( X ` ) + ( ( X ` ) + y ) ) = ( y + ( ( X ` ) + x ) ) by A1,CKB75:def 1;
( ( ( ( x ` ) + y ) ` ) + y ) = ( ( X ` ) + ( ( X ` ) + y ) ) by A2
.= ( y + x ) by A1,A4,CKB74:def 1;
hence thesis;
end;
A5: (for x being (Element of L) holds ( x + x ) = x)
proof
let x being (Element of L);
( x + x ) = ( ( ( ( x ` ) + x ) ` ) + x ) by A3
.= x by A1,CKB74:def 1;
hence thesis;
end;
A6: (for x,y being (Element of L) holds ( x + ( x + y ) ) = ( x + y ))
proof
let x being (Element of L),y being (Element of L);
( x + ( x + y ) ) = ( ( ( ( y ` ) + x ) ` ) + ( x + x ) ) by A1,CKB75:def 1
.= ( ( ( ( y ` ) + x ) ` ) + x ) by A5
.= ( x + y ) by A3;
hence thesis;
end;
A7: (for x,y being (Element of L) holds ( ( x + y ) + y ) = ( x + y ))
proof
let x being (Element of L),y being (Element of L);
set Y = ( x + y );
( ( x + y ) + y ) = ( ( ( ( y ` ) + ( x + y ) ) ` ) + ( x + y ) ) by A3
.= ( ( ( ( y ` ) + ( x + y ) ) ` ) + ( x + ( x + y ) ) ) by A6
.= ( Y + ( x + y ) ) by A1,CKB75:def 1
.= ( x + y ) by A5;
hence thesis;
end;
A8: (for x,y being (Element of L) holds ( ( x + y ) + x ) = ( x + y ))
proof
let x being (Element of L),y being (Element of L);
( ( x + y ) + x ) = ( ( ( ( ( y ` ) + x ) ` ) + x ) + x ) by A3
.= ( ( ( ( y ` ) + x ) ` ) + x ) by A7
.= ( x + y ) by A3;
hence thesis;
end;
A9: (for x,y being (Element of L) holds ( x + ( y + ( y + x ) ) ) = ( y + x ))
proof
let x being (Element of L),y being (Element of L);
set Z = ( y + x );
( x + ( y + ( y + x ) ) ) = ( ( ( ( Z ` ) + x ) ` ) + ( y + x ) ) by A1,CKB75:def 1
.= ( y + x ) by A1,CKB74:def 1;
hence thesis;
end;
A10: (for x,y being (Element of L) holds ( x + ( y + x ) ) = ( y + x ))
proof
let x being (Element of L),y being (Element of L);
( x + ( y + x ) ) = ( x + ( y + ( y + x ) ) ) by A6
.= ( y + x ) by A9;
hence thesis;
end;
A11: (for x,y being (Element of L) holds ( ( ( x + ( y ` ) ) ` ) + y ) = y)
proof
let x being (Element of L),y being (Element of L);
( ( ( x + ( y ` ) ) ` ) + y ) = ( ( ( ( y ` ) + ( x + ( y ` ) ) ) ` ) + y ) by A10
.= y by A1,CKB74:def 1;
hence thesis;
end;
A12: (for x being (Element of L) holds ( ( ( x ` ) ` ) + x ) = x)
proof
let x being (Element of L);
( ( ( ( x ` ) + ( x ` ) ) ` ) + x ) = x by A1,CKB74:def 1;
hence thesis by A5;
end;
A13: (for x being (Element of L) holds ( x + ( ( x ` ) ` ) ) = x)
proof
let x being (Element of L);
( x + ( ( x ` ) ` ) ) = ( ( ( ( x ` ) ` ) + x ) + ( ( x ` ) ` ) ) by A12
.= ( ( ( x ` ) ` ) + x ) by A8
.= x by A12;
hence thesis;
end;
A14: (for x,y being (Element of L) holds ( x + ( ( ( x ` ) ` ) + y ) ) = ( x + y ))
proof
let x being (Element of L),y being (Element of L);
( x + ( ( ( x ` ) ` ) + y ) ) = ( ( ( ( y ` ) + x ) ` ) + ( ( ( x ` ) ` ) + x ) ) by A1,CKB75:def 1
.= ( ( ( ( y ` ) + x ) ` ) + x ) by A12
.= ( x + y ) by A3;
hence thesis;
end;
A15: (for x being (Element of L) holds ( x + ( ( ( ( x ` ) ` ) ` ) ` ) ) = x)
proof
let x being (Element of L);
( x + ( ( ( ( x ` ) ` ) ` ) ` ) ) = ( x + ( ( ( x ` ) ` ) + ( ( ( ( x ` ) ` ) ` ) ` ) ) ) by A14
.= ( x + ( ( x ` ) ` ) ) by A13
.= x by A13;
hence thesis;
end;
A16: (for x being (Element of L) holds ( ( ( x ` ) ` ) ` ) = ( x ` ))
proof
let x being (Element of L);
( ( ( x ` ) ` ) ` ) = ( ( ( x + ( ( ( ( x ` ) ` ) ` ) ` ) ) ` ) + ( ( ( x ` ) ` ) ` ) ) by A11
.= ( ( x ` ) + ( ( ( x ` ) ` ) ` ) ) by A15
.= ( x ` ) by A13;
hence thesis;
end;
A17: (for x,y,z being (Element of L) holds ( ( ( ( x ` ) + y ) ` ) + ( ( ( ( x ` ) + z ) ` ) + y ) ) = ( y + x ))
proof
let x being (Element of L),y being (Element of L),z being (Element of L);
( ( ( ( x ` ) + y ) ` ) + ( ( ( ( x ` ) + z ) ` ) + y ) ) = ( y + ( ( ( ( x ` ) + z ) ` ) + x ) ) by A1,CKB75:def 1
.= ( y + x ) by A1,CKB74:def 1;
hence thesis;
end;
A18: (for x,y being (Element of L) holds ( x + ( ( y ` ) ` ) ) = ( x + y ))
proof
let x being (Element of L),y being (Element of L);
( x + y ) = ( ( ( ( y ` ) + x ) ` ) + ( ( ( ( y ` ) + x ) ` ) + x ) ) by A17
.= ( ( ( ( y ` ) + x ) ` ) + ( ( ( ( ( ( y ` ) ` ) ` ) + x ) ` ) + x ) ) by A16
.= ( ( ( ( ( ( y ` ) ` ) ` ) + x ) ` ) + ( ( ( ( ( ( y ` ) ` ) ` ) + x ) ` ) + x ) ) by A16
.= ( x + ( ( y ` ) ` ) ) by A17;
hence thesis;
end;
A19: (for x being (Element of L) holds ( ( x ` ) ` ) = x)
proof
let x being (Element of L);
( ( x ` ) ` ) = ( ( ( ( ( ( x ` ) ` ) ` ) + ( ( x ` ) ` ) ) ` ) + ( ( x ` ) ` ) ) by A1,CKB74:def 1
.= ( ( ( ( x ` ) + ( ( x ` ) ` ) ) ` ) + ( ( x ` ) ` ) ) by A16
.= ( ( ( ( x ` ) + ( ( x ` ) ` ) ) ` ) + x ) by A18
.= x by A1,CKB74:def 1;
hence thesis;
end;
A20: (for x,y,z being (Element of L) holds ( ( ( ( x ` ) + ( ( ( ( y + x ) ` ) + z ) ` ) ) ` ) + ( y + ( ( ( ( y + x ) ` ) + z ) ` ) ) ) = ( y + x ))
proof
let x being (Element of L),y being (Element of L),z being (Element of L);
set P = ( ( ( ( y + x ) ` ) + z ) ` );
( ( ( ( x ` ) + P ) ` ) + ( y + P ) ) = ( P + ( y + x ) ) by A1,CKB75:def 1
.= ( y + x ) by A1,CKB74:def 1;
hence thesis;
end;
A21: (for x,y being (Element of L) holds ( ( ( ( x ` ) + ( ( x + y ) ` ) ) ` ) + ( ( y ` ) + ( ( x + y ) ` ) ) ) = ( ( y ` ) + x ))
proof
let x being (Element of L),y being (Element of L);
( ( ( ( x ` ) + ( ( x + y ) ` ) ) ` ) + ( ( y ` ) + ( ( x + y ) ` ) ) ) = ( ( ( ( x ` ) + ( ( x + y ) ` ) ) ` ) + ( ( y ` ) + ( ( ( ( ( y ` ) + x ) ` ) + x ) ` ) ) ) by A3
.= ( ( ( ( x ` ) + ( ( ( ( ( y ` ) + x ) ` ) + x ) ` ) ) ` ) + ( ( y ` ) + ( ( ( ( ( y ` ) + x ) ` ) + x ) ` ) ) ) by A3
.= ( ( y ` ) + x ) by A20;
hence thesis;
end;
A22: (for x,y being (Element of L) holds ( x + ( ( ( x ` ) + y ) ` ) ) = x)
proof
let x being (Element of L),y being (Element of L);
( x + ( ( ( x ` ) + y ) ` ) ) = ( ( ( ( ( x ` ) + y ) ` ) + x ) + ( ( ( x ` ) + y ) ` ) ) by A1,CKB74:def 1
.= ( ( ( ( x ` ) + y ) ` ) + x ) by A8
.= x by A1,CKB74:def 1;
hence thesis;
end;
A23: (for x,y being (Element of L) holds ( ( x ` ) + ( ( x + y ) ` ) ) = ( x ` ))
proof
let x being (Element of L),y being (Element of L);
( x ` ) = ( ( x ` ) + ( ( ( ( x ` ) ` ) + y ) ` ) ) by A22
.= ( ( x ` ) + ( ( x + y ) ` ) ) by A19;
hence thesis;
end;
A24: (for x,y being (Element of L) holds ( x + ( ( y + ( x ` ) ) ` ) ) = x)
proof
let x being (Element of L),y being (Element of L);
( x + ( ( y + ( x ` ) ) ` ) ) = ( ( ( ( y + ( x ` ) ) ` ) + x ) + ( ( y + ( x ` ) ) ` ) ) by A11
.= ( ( ( y + ( x ` ) ) ` ) + x ) by A8
.= x by A11;
hence thesis;
end;
A25: (for x,y being (Element of L) holds ( ( x ` ) + ( ( y + x ) ` ) ) = ( x ` ))
proof
let x being (Element of L),y being (Element of L);
( x ` ) = ( ( x ` ) + ( ( y + ( ( x ` ) ` ) ) ` ) ) by A24
.= ( ( x ` ) + ( ( y + x ) ` ) ) by A19;
hence thesis;
end;
A26: (for x,y being (Element of L) holds ( x + ( y ` ) ) = ( ( y ` ) + x ))
proof
let x being (Element of L),y being (Element of L);
( ( y ` ) + x ) = ( ( ( ( x ` ) + ( ( x + y ) ` ) ) ` ) + ( ( y ` ) + ( ( x + y ) ` ) ) ) by A21
.= ( ( ( x ` ) ` ) + ( ( y ` ) + ( ( x + y ) ` ) ) ) by A23
.= ( ( ( x ` ) ` ) + ( y ` ) ) by A25
.= ( x + ( y ` ) ) by A19;
hence thesis;
end;
A27: (for x,y being (Element of L) holds ( x + y ) = ( y + x ))
proof
let x being (Element of L),y being (Element of L);
( ( y ` ) ` ) = y by A19;
hence thesis by A26;
end;
hence L is  join-commutative by LATTICES:def 4;
A28: (for x,y,z being (Element of L) holds ( ( ( ( ( ( x ` ) + y ) ` ) + z ) ` ) + ( ( x ` ) + z ) ) = ( z + ( ( x ` ) + y ) ))
proof
let x being (Element of L),y being (Element of L),z being (Element of L);
( ( ( ( ( ( x ` ) + y ) ` ) + z ) ` ) + ( ( x ` ) + z ) ) = ( z + ( ( x ` ) + ( ( x ` ) + y ) ) ) by A1,CKB75:def 1
.= ( z + ( ( x ` ) + y ) ) by A2;
hence thesis;
end;
A29: (for x,y being (Element of L) holds ( x + ( ( y ` ) + x ) ) = ( ( y ` ) + x ))
proof
let x being (Element of L),y being (Element of L);
( x + ( ( y ` ) + x ) ) = ( ( ( ( ( ( y ` ) + x ) ` ) + x ) ` ) + ( ( y ` ) + x ) ) by A28
.= ( ( y ` ) + x ) by A1,CKB74:def 1;
hence thesis;
end;
A30: (for x,y being (Element of L) holds ( ( ( x + y ) ` ) + x ) = ( ( y ` ) + x ))
proof
let x being (Element of L),y being (Element of L);
set Y = ( ( y ` ) + x );
( ( y ` ) + x ) = ( x + ( ( y ` ) + x ) ) by A29
.= ( ( ( ( Y ` ) + x ) ` ) + x ) by A3
.= ( ( ( x + y ) ` ) + x ) by A3;
hence thesis;
end;
A31: (for x,y being (Element of L) holds ( ( ( x + y ) ` ) + ( ( ( y ` ) + x ) ` ) ) = ( ( x ` ) + ( ( ( y ` ) + x ) ` ) ))
proof
let x being (Element of L),y being (Element of L);
( ( ( x + y ) ` ) + ( ( ( y ` ) + x ) ` ) ) = ( ( ( ( ( ( y ` ) + x ) ` ) + x ) ` ) + ( ( ( y ` ) + x ) ` ) ) by A3
.= ( ( x ` ) + ( ( ( y ` ) + x ) ` ) ) by A30;
hence thesis;
end;
(for x,y being (Element of L) holds ( ( ( ( x ` ) + ( y ` ) ) ` ) + ( ( ( x ` ) + y ) ` ) ) = x)
proof
let x being (Element of L),y being (Element of L);
( ( ( ( x ` ) + ( y ` ) ) ` ) + ( ( ( x ` ) + y ) ` ) ) = ( ( ( ( y ` ) + ( x ` ) ) ` ) + ( ( ( x ` ) + y ) ` ) ) by A27
.= ( ( ( ( x ` ) + y ) ` ) + ( ( ( y ` ) + ( x ` ) ) ` ) ) by A27
.= ( ( ( x ` ) ` ) + ( ( ( y ` ) + ( x ` ) ) ` ) ) by A31
.= ( x + ( ( ( y ` ) + ( x ` ) ) ` ) ) by A19
.= x by A24;
hence thesis;
end;
hence L is  Huntington by ROBBINS1:def 6;
A32: (for x,y,z being (Element of L) holds ( ( x + y ) + ( y + z ) ) = ( ( x + y ) + z ))
proof
let x being (Element of L),y being (Element of L),z being (Element of L);
set Y = ( x + y );
( ( x + y ) + z ) = ( ( ( ( z ` ) + Y ) ` ) + Y ) by A3
.= ( ( ( ( z ` ) + Y ) ` ) + ( y + Y ) ) by A10
.= ( Y + ( y + z ) ) by A1,CKB75:def 1;
hence thesis;
end;
(for x,y,z being (Element of L) holds ( ( x + y ) + z ) = ( x + ( y + z ) ))
proof
let x being (Element of L),y being (Element of L),z being (Element of L);
(for x,y,z being (Element of L) holds ( ( x + y ) + ( z + x ) ) = ( y + ( x + z ) ))
proof
let x being (Element of L),y being (Element of L),z being (Element of L);
( ( x + y ) + ( z + x ) ) = ( ( z + x ) + ( x + y ) ) by A27
.= ( ( z + x ) + y ) by A32
.= ( ( x + z ) + y ) by A27
.= ( y + ( x + z ) ) by A27;
hence thesis;
end;
then ( ( y + x ) + ( z + y ) ) = ( x + ( y + z ) );
then A33: ( ( x + y ) + ( z + y ) ) = ( x + ( y + z ) ) by A27;
( ( x + y ) + z ) = ( ( x + y ) + ( y + z ) ) by A32
.= ( x + ( y + z ) ) by A27,A33;
hence thesis;
end;
hence L is  join-associative by LATTICES:def 5;
end;
registration
cluster  satisfying_MD_1  satisfying_MD_2 ->  join-commutative  join-associative  Huntington for non empty non empty ComplLLattStr;
coherence by Lm4;
end;
