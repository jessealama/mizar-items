environ
vocabularies NUMBERS,XREAL_0,ORDINAL1,XXREAL_0,SUBSET_1,TARSKI,ARYTM_3,XCMPLX_0,RELAT_1,ARYTM_1,CARD_1,SQUARE_1;
notations TARSKI,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,XXREAL_0,CKB2,CKB3,CKB6,CKB9,CKB10;
definitions TARSKI,XCMPLX_0,CKB6;
theorems AXIOMS,XREAL_0,XCMPLX_0,XCMPLX_1,XREAL_1,XXREAL_0,CKB4,CKB5,CKB6,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
schemes CKB1;
registrations NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,ORDINAL1,XBOOLE_0,CKB7,CKB8;
constructors NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,CKB2,CKB3,CKB6,CKB9,CKB10;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve a for  real number;
reserve c for  real number;
reserve x for  real number;
reserve y for  real number;
reserve z for  real number;
definition
let a;
assume A1: ( 0 ) <= a;
func sqrt a ->  real number
means
:Def4: (( 0 ) <= it & ( it ^2 ) = a);
existence
proof
defpred Y[  real number ]
 means
(( 0 ) <= $1 & a <= ( $1 ^2 ));
defpred X[  real number ]
 means
($1 <= ( 0 ) or ( $1 ^2 ) <= a);
a <= ( a + 1 ) by XREAL_1:29;
then A2: ( ( 0 ) + a ) <= ( ( ( a ^2 ) + a ) + ( a + 1 ) ) by A1,XREAL_1:7;
A3:now
let x;
let y;
assume that
A4: X[ x ]
and
A5: Y[ y ];
per cases ;
suppose x <= ( 0 );

hence x <= y by A5;
end;
suppose (not x <= ( 0 ));

then ( x ^2 ) <= ( y ^2 ) by A4,A5,XXREAL_0:2;
hence x <= y by A5,CKB25:1;
end;
end;
consider z such that A6: (for x holds (for y holds ((X[ x ] & Y[ y ]) implies (x <= z & z <= y)))) from CKB1:sch 1(A3);
take z;
A7: ( ( a + 1 ) ^2 ) = ( ( ( a ^2 ) + a ) + ( a + 1 ) );
hence ( 0 ) <= z by A1,A2,A6;
assume A8: ( z ^2 ) <> a;
now
per cases  by A8,XXREAL_0:1;
suppose A9: z <= ( 0 );

then z = ( 0 ) by A1,A7,A2,A6;
then (ex c st (( 0 ) < c & ( c ^2 ) < a)) by A1,A8,CKB23:1;
hence contradiction by A1,A7,A2,A6,A9;
end;
suppose A10: (( z ^2 ) < a & (not z <= ( 0 )));

set b = ( a - ( z ^2 ) );
A11: ( 0 ) < b by A10,XREAL_1:50;
then consider c such that A12: ( 0 ) < c and A13: ( c ^2 ) < ( b / 2 ) by CKB23:1;
set eps = ( min (c,( b / ( 4 * z ) )) );
A14: ( 0 ) < eps by A10,A11,A12,XXREAL_0:15;
then A15: z < ( z + eps ) by XREAL_1:29;
( eps * ( 2 * z ) ) <= ( ( b / ( 2 * ( 2 * z ) ) ) * ( 2 * z ) ) by A10,XREAL_1:64,XXREAL_0:17;
then ( eps * ( 2 * z ) ) <= ( ( ( b / 2 ) / ( 2 * z ) ) * ( 2 * z ) ) by XCMPLX_1:78;
then A16: ( ( 2 * z ) * eps ) <= ( b / 2 ) by A10,XCMPLX_1:87;
( eps ^2 ) <= ( c ^2 ) by A14,CKB24:1,XXREAL_0:17;
then ( eps ^2 ) <= ( b / 2 ) by A13,XXREAL_0:2;
then A17: ( ( ( 2 * z ) * eps ) + ( eps ^2 ) ) <= ( ( b / 2 ) + ( b / 2 ) ) by A16,XREAL_1:7;
A18: ( ( z + eps ) ^2 ) = ( ( z ^2 ) + ( ( ( 2 * z ) * eps ) + ( eps ^2 ) ) );
a = ( ( z ^2 ) + b );
then ( ( z + eps ) ^2 ) <= a by A18,A17,XREAL_1:6;
hence contradiction by A1,A7,A2,A6,A15;
end;
suppose A19: (a < ( z ^2 ) & (not z <= ( 0 )));

set b = ( ( z ^2 ) - a );
set eps = ( min (( b / ( 2 * z ) ),z) );
A20: ( ( z - eps ) ^2 ) = ( ( z ^2 ) - ( ( ( 2 * z ) * eps ) - ( eps ^2 ) ) );
( 0 ) < b by A19,XREAL_1:50;
then ( 0 ) < eps by A19,XXREAL_0:15;
then A21: ( z - eps ) < z by XREAL_1:44;
( 0 ) <= ( eps ^2 ) by XREAL_1:63;
then A22: ( ( ( 2 * z ) * eps ) - ( eps ^2 ) ) <= ( ( ( 2 * z ) * eps ) - ( 0 ) ) by XREAL_1:13;
( eps * ( 2 * z ) ) <= ( ( b / ( 2 * z ) ) * ( 2 * z ) ) by A19,XREAL_1:64,XXREAL_0:17;
then ( ( 2 * z ) * eps ) <= b by A19,XCMPLX_1:87;
then A23: ( ( ( 2 * z ) * eps ) - ( eps ^2 ) ) <= b by A22,XXREAL_0:2;
A24: ( 0 ) <= ( z - eps ) by XREAL_1:48,XXREAL_0:17;
a = ( ( z ^2 ) - b );
then a <= ( ( z - eps ) ^2 ) by A20,A23,XREAL_1:13;
hence contradiction by A6,A24,A21;
end;
end;
hence contradiction;
end;
uniqueness by CKB26:1;
end;
