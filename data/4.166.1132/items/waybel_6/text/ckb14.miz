environ
vocabularies WAYBEL_0,SUBSET_1,XBOOLE_0,ORDERS_2,FUNCT_1,RELAT_1,TARSKI,NUMBERS,FUNCT_7,TREES_2,RELAT_2,XXREAL_0,STRUCT_0,ORDINAL2,LATTICES,ORDERS_1,ZFMISC_1,YELLOW_0,EQREL_1,REWRITE1,FUNCOP_1,LATTICE3,SEQM_3,WAYBEL_2,WAYBEL_3,CARD_FIL,SETFAM_1,ARYTM_3,CARD_1,NAT_1,ORDINAL1,YELLOW_8,FINSET_1,INT_2,YELLOW_1,FUNCT_3,LATTICE2,ARYTM_0,WAYBEL_5,PBOOLE,YELLOW_2,FUNCT_6,CARD_3,WAYBEL_6;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,FINSET_1,RELAT_1,ORDINAL1,RELAT_2,ORDERS_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,DOMAIN_1,FUNCOP_1,STRUCT_0,ORDERS_2,CARD_3,LATTICE3,FUNCT_3,FUNCT_6,PBOOLE,YELLOW_0,YELLOW_1,WAYBEL_0,WAYBEL_1,YELLOW_2,YELLOW_4,WAYBEL_2,WAYBEL_3,WAYBEL_4,WAYBEL_5,YELLOW_7,FUNCT_7,XXREAL_0,CKB2,CKB3,CKB12;
definitions TARSKI,RELAT_1,RELAT_2,LATTICE3,WAYBEL_0,WAYBEL_1,WAYBEL_2,WAYBEL_5,FUNCT_1,ORDERS_3,XBOOLE_0,SUBSET_1,STRUCT_0,CKB12;
theorems WAYBEL_3,TARSKI,YELLOW_0,ZFMISC_1,WAYBEL_0,ORDERS_2,WAYBEL_4,FUNCT_2,FUNCT_1,LATTICE3,NAT_1,WAYBEL_1,YELLOW_1,YELLOW_5,WAYBEL_2,YELLOW_2,WAYBEL_5,CARD_3,FUNCT_6,YELLOW_7,ORDERS_1,RELAT_2,FUNCT_3,YELLOW_4,YELLOW_3,FUNCOP_1,RELAT_1,RELSET_1,ORDINAL1,XBOOLE_0,XBOOLE_1,FUNCT_7,CARD_1,PARTFUN1,CKB6,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13;
schemes FUNCT_1,FINSET_1,CLASSES1,NAT_1,FUNCT_2,YELLOW_3,SUBSET_1,CKB1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,FUNCOP_1,FINSET_1,XREAL_0,PBOOLE,STRUCT_0,ORDERS_2,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,WAYBEL_1,YELLOW_4,WAYBEL_2,WAYBEL_3,WAYBEL_5,YELLOW_7,ORDINAL1,RELSET_1,XXREAL_0,CARD_1,CKB4,CKB5,CKB9;
constructors SETFAM_1,XXREAL_0,NAT_1,FUNCT_7,BORSUK_1,PRALG_2,ORDERS_3,WAYBEL_1,YELLOW_4,WAYBEL_2,WAYBEL_3,WAYBEL_4,WAYBEL_5,RELSET_1,CKB2,CKB3,CKB12;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve Y for set;
reserve L for LATTICE;
theorem
(for L being  up-complete LATTICE holds (for X being  upper (Subset of L) holds (X is  Open iff X = ( union { ( wayabove x ) where x is (Element of L): x in X } ))))
proof
let L being  up-complete LATTICE;
let X being  upper (Subset of L);
hereby
assume A1: X is  Open;
A2: X c= ( union { ( wayabove x ) where x is (Element of L): x in X } )
proof
let z being set;
assume A3: z in X;
then reconsider x1 = z as (Element of X);
reconsider x1 as (Element of L) by A3;
consider y being (Element of L) such that A4: y in X and A5: y << x1 by A1,A3,CKB12:def 1;
x1 in { y1 where y1 is (Element of L): y1 >> y } by A5;
then A6: x1 in ( wayabove y ) by WAYBEL_3:def 4;
( wayabove y ) in { ( wayabove x ) where x is (Element of L): x in X } by A4;
hence thesis by A6,TARSKI:def 4;
end;
( union { ( wayabove x ) where x is (Element of L): x in X } ) c= X
proof
let z being set;
assume z in ( union { ( wayabove x ) where x is (Element of L): x in X } );
then consider Y being set such that A7: z in Y and A8: Y in { ( wayabove x ) where x is (Element of L): x in X } by TARSKI:def 4;
consider x being (Element of L) such that A9: Y = ( wayabove x ) and A10: x in X by A8;
z in { y where y is (Element of L): y >> x } by A7,A9,WAYBEL_3:def 4;
then consider z1 being (Element of L) such that A11: z1 = z and A12: z1 >> x;
x <= z1 by A12,WAYBEL_3:1;
hence thesis by A10,A11,WAYBEL_0:def 20;
end;
hence X = ( union { ( wayabove x ) where x is (Element of L): x in X } ) by A2,XBOOLE_0:def 10;
end;
assume A13: X = ( union { ( wayabove x ) where x is (Element of L): x in X } );
now
let x1 being (Element of L);
assume x1 in X;
then consider Y being set such that A14: x1 in Y and A15: Y in { ( wayabove x ) where x is (Element of L): x in X } by A13,TARSKI:def 4;
consider x being (Element of L) such that A16: Y = ( wayabove x ) and A17: x in X by A15;
x1 in { y where y is (Element of L): y >> x } by A14,A16,WAYBEL_3:def 4;
then (ex z1 being (Element of L) st (z1 = x1 & z1 >> x));
hence (ex x being (Element of L) st (x in X & x << x1)) by A17;
end;
hence thesis by CKB12:def 1;
end;
