environ
vocabularies DIRAF,SUBSET_1,ANALOAF,INCSP_1,STRUCT_0,TARSKI,AFF_1;
notations TARSKI,STRUCT_0,ANALOAF,DIRAF,CKB1,CKB20,CKB22,CKB26,CKB33,CKB34;
definitions CKB1,CKB20,CKB26,CKB33,CKB34;
theorems DIRAF,TARSKI,XBOOLE_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49;
schemes SUBSET_1;
registrations STRUCT_0,CKB27;
constructors DIRAF,CKB1,CKB20,CKB22,CKB26,CKB33,CKB34;
requirements SUBSET,BOOLE;
begin
reserve AS for AffinSpace;
reserve a for (Element of AS);
reserve b for (Element of AS);
reserve c for (Element of AS);
reserve d for (Element of AS);
reserve A for (Subset of AS);
reserve C for (Subset of AS);
theorem
Th51: (A // C iff (ex a st (ex b st (ex c st (ex d st ((((a <> b & c <> d) & a,b // c,d) & A = ( Line (a,b) )) & C = ( Line (c,d) )))))))
proof
thus (A // C implies (ex a st (ex b st (ex c st (ex d st ((((a <> b & c <> d) & a,b // c,d) & A = ( Line (a,b) )) & C = ( Line (c,d) )))))))
proof
assume A // C;
then consider a,b such that A1: A = ( Line (a,b) ) and A2: a <> b and A3: a,b // C by CKB34:def 1;
(ex c st (ex d st ((c <> d & C = ( Line (c,d) )) & a,b // c,d))) by A3,CKB33:def 1;
hence thesis by A1,A2;
end;

given a,b,c,d such that
A4: a <> b
and
A5: c <> d
and
A6: a,b // c,d
and
A7: A = ( Line (a,b) )
and
A8: C = ( Line (c,d) );

a,b // C by A5,A6,A8,CKB33:def 1;
hence thesis by A4,A7,CKB34:def 1;
end;
