environ
vocabularies DIRAF,SUBSET_1,ANALOAF,INCSP_1,STRUCT_0,TARSKI,AFF_1;
notations TARSKI,STRUCT_0,ANALOAF,DIRAF,CKB1,CKB20,CKB22,CKB26,CKB33,CKB34;
definitions CKB1,CKB20,CKB26,CKB33,CKB34;
theorems DIRAF,TARSKI,XBOOLE_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42;
schemes SUBSET_1;
registrations STRUCT_0,CKB27;
constructors DIRAF,CKB1,CKB20,CKB22,CKB26,CKB33,CKB34;
requirements SUBSET,BOOLE;
begin
reserve AS for AffinSpace;
reserve a for (Element of AS);
reserve b for (Element of AS);
reserve c for (Element of AS);
reserve d for (Element of AS);
reserve A for (Subset of AS);
theorem
Th44: (for A being  being_line (Subset of AS) holds (a,b // A iff (ex c st (ex d st (((c <> d & c in A) & d in A) & a,b // c,d)))))
proof
A1: (a,b // A implies (ex c st (ex d st (((c <> d & c in A) & d in A) & a,b // c,d)))) by CKB41:1;
let A being  being_line (Subset of AS);
((ex c st (ex d st (((c <> d & c in A) & d in A) & a,b // c,d))) implies a,b // A)
proof
assume (ex c st (ex d st (((c <> d & c in A) & d in A) & a,b // c,d)));
then consider c,d such that A2: c <> d and A3: c in A and A4: d in A and A5: a,b // c,d;
A = ( Line (c,d) ) by A2,A3,A4,CKB28:1;
hence thesis by A2,A5,CKB33:def 1;
end;
hence thesis by A1;
end;
