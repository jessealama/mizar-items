environ
vocabularies DIRAF,SUBSET_1,ANALOAF,INCSP_1,STRUCT_0,TARSKI,AFF_1;
notations TARSKI,STRUCT_0,ANALOAF,DIRAF,CKB1,CKB20,CKB22,CKB26,CKB33,CKB34,CKB55,CKB57;
definitions CKB1,CKB20,CKB26,CKB33,CKB34;
theorems DIRAF,TARSKI,XBOOLE_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB56,CKB58,CKB59,CKB60;
schemes SUBSET_1;
registrations STRUCT_0,CKB27;
constructors DIRAF,CKB1,CKB20,CKB22,CKB26,CKB33,CKB34,CKB55,CKB57;
requirements SUBSET,BOOLE;
begin
reserve AS for AffinSpace;
reserve p for (Element of AS);
reserve q for (Element of AS);
reserve A for (Subset of AS);
reserve C for (Subset of AS);
theorem
Th59: (((A // C & p in A) & p in C) implies A = C)
proof
assume that
A1: A // C
and
A2: p in A
and
A3: p in C;
A4: (for A holds (for C holds (for p holds (((A // C & p in A) & p in C) implies A c= C))))
proof
let A;
let C;
let p;
assume that
A5: A // C
and
A6: p in A
and
A7: p in C;
A8: C is  being_line by A5,CKB49:1;
A9: A is  being_line by A5,CKB49:1;
now
let x being set;
assume A10: x in A;
then reconsider x9 = x as (Element of AS);
now
consider q such that A11: p <> q and A12: q in C by A8,CKB31:1;
assume A13: x9 <> p;
then A = ( Line (p,x9) ) by A6,A9,A10,CKB28:1;
then p,x9 // C by A5,A13,CKB42:1,CKB58:1;
then p,x9 // p,q by A7,A8,A11,A12,CKB40:1;
then p,q // p,x9 by CKB8:1;
then A14:  LIN p,q,x9 by CKB1:def 1;
C = ( Line (p,q) ) by A7,A8,A11,A12,CKB28:1;
hence x in C by A14,CKB20:def 1;
end;
hence x in C by A7;
end;
hence thesis by TARSKI:def 3;
end;
then A15: C c= A by A1,A2,A3;
A c= C by A1,A2,A3,A4;
hence thesis by A15,XBOOLE_0:def 10;
end;
