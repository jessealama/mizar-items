environ
vocabularies DIRAF,SUBSET_1,ANALOAF,INCSP_1,STRUCT_0,TARSKI,AFF_1;
notations TARSKI,STRUCT_0,ANALOAF,DIRAF,CKB1,CKB20,CKB22,CKB26,CKB33,CKB34,CKB55,CKB57;
definitions CKB1,CKB20,CKB26,CKB33,CKB34;
theorems DIRAF,TARSKI,XBOOLE_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB56,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74;
schemes SUBSET_1;
registrations STRUCT_0,CKB27;
constructors DIRAF,CKB1,CKB20,CKB22,CKB26,CKB33,CKB34,CKB55,CKB57;
requirements SUBSET,BOOLE;
begin
reserve AP for AffinPlane;
reserve a for (Element of AP);
reserve b for (Element of AP);
reserve x for (Element of AP);
reserve p for (Element of AP);
reserve q for (Element of AP);
reserve A for (Subset of AP);
theorem
((A is  being_line & (not a,b // A)) implies (ex x st (x in A &  LIN a,b,x)))
proof
assume that
A1: A is  being_line
and
A2: (not a,b // A);
set C = ( Line (a,b) );
A3: (not C // A)
proof
A4: b in C by CKB23:1;
assume C // A;
then consider p,q such that A5: C = ( Line (p,q) ) and A6: p <> q and A7: p,q // A by CKB34:def 1;
a in C by CKB23:1;
then p,q // a,b by A5,A6,A4,CKB35:1;
hence contradiction by A2,A6,A7,CKB45:1;
end;
a <> b by A1,A2,CKB46:1;
then C is  being_line by CKB26:def 1;
then consider x such that A8: x in C and A9: x in A by A1,A3,CKB74:1;
 LIN a,b,x by A8,CKB20:def 1;
hence thesis by A9;
end;
