environ
vocabularies DIRAF,SUBSET_1,ANALOAF,INCSP_1,STRUCT_0,TARSKI,AFF_1;
notations TARSKI,STRUCT_0,ANALOAF,DIRAF,CKB1,CKB20,CKB22,CKB26;
definitions CKB1,CKB20,CKB26;
theorems DIRAF,TARSKI,XBOOLE_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29,CKB30,CKB31;
schemes SUBSET_1;
registrations STRUCT_0,CKB27;
constructors DIRAF,CKB1,CKB20,CKB22,CKB26;
requirements SUBSET,BOOLE;
begin
reserve AS for AffinSpace;
reserve a for (Element of AS);
reserve b for (Element of AS);
reserve c for (Element of AS);
reserve p for (Element of AS);
reserve q for (Element of AS);
reserve x for (Element of AS);
reserve A for (Subset of AS);
theorem
Th33: ( LIN a,b,c iff (ex A st (((A is  being_line & a in A) & b in A) & c in A)))
proof
A1: ( LIN a,b,c implies (ex A st (((A is  being_line & a in A) & b in A) & c in A)))
proof
assume A2:  LIN a,b,c;
A3:now
set A = ( Line (a,b) );
A4: a in A by CKB23:1;
A5: b in A by CKB23:1;
assume a <> b;
then A6: A is  being_line by CKB26:def 1;
c in A by A2,CKB20:def 1;
hence thesis by A6,A4,A5;
end;
A7:now
set A = ( Line (a,c) );
A8: c in A by CKB23:1;
assume a <> c;
then A9: A is  being_line by CKB26:def 1;
 LIN a,c,b by A2,CKB11:1;
then A10: b in A by CKB20:def 1;
a in A by CKB23:1;
hence thesis by A9,A10,A8;
end;
now
consider x such that A11: a <> x by CKB2:1;
set A = ( Line (a,x) );
A12: a in A by CKB23:1;
assume that
A13: a = b
and
A14: a = c;
A is  being_line by A11,CKB26:def 1;
hence thesis by A13,A14,A12;
end;
hence thesis by A3,A7;
end;
((ex A st (((A is  being_line & a in A) & b in A) & c in A)) implies  LIN a,b,c)
proof
given A such that
A15: A is  being_line
and
A16: a in A
and
A17: b in A
and
A18: c in A;

consider p,q such that A19: p <> q and A20: A = ( Line (p,q) ) by A15,CKB26:def 1;
A21:  LIN p,q,b by A17,A20,CKB20:def 1;
A22:  LIN p,q,c by A18,A20,CKB20:def 1;
 LIN p,q,a by A16,A20,CKB20:def 1;
hence thesis by A19,A21,A22,CKB13:1;
end;
hence thesis by A1;
end;
