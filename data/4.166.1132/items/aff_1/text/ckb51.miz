environ
vocabularies DIRAF,SUBSET_1,ANALOAF,INCSP_1,STRUCT_0,TARSKI,AFF_1;
notations TARSKI,STRUCT_0,ANALOAF,DIRAF,CKB1,CKB20,CKB22,CKB26,CKB33,CKB34;
definitions CKB1,CKB20,CKB26,CKB33,CKB34;
theorems DIRAF,TARSKI,XBOOLE_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50;
schemes SUBSET_1;
registrations STRUCT_0,CKB27;
constructors DIRAF,CKB1,CKB20,CKB22,CKB26,CKB33,CKB34;
requirements SUBSET,BOOLE;
begin
reserve AS for AffinSpace;
reserve a for (Element of AS);
reserve b for (Element of AS);
reserve c for (Element of AS);
reserve d for (Element of AS);
reserve p for (Element of AS);
reserve q for (Element of AS);
reserve r for (Element of AS);
reserve s for (Element of AS);
theorem
Th52: (for A,C being  being_line (Subset of AS) holds ((((((a in A & b in A) & c in C) & d in C) & a <> b) & c <> d) implies (A // C iff a,b // c,d)))
proof
let A being  being_line (Subset of AS),C being  being_line (Subset of AS);
assume that
A1: a in A
and
A2: b in A
and
A3: c in C
and
A4: d in C
and
A5: a <> b
and
A6: c <> d;
thus (A // C implies a,b // c,d)
proof
assume A // C;
then consider p,q,r,s such that A7: p <> q and A8: r <> s and A9: p,q // r,s and A10: A = ( Line (p,q) ) and A11: C = ( Line (r,s) ) by CKB50:1;
p,q // a,b by A1,A2,A7,A10,CKB35:1;
then A12: a,b // r,s by A7,A9,CKB9:1;
r,s // c,d by A3,A4,A8,A11,CKB35:1;
hence thesis by A8,A12,CKB9:1;
end;

A13: C = ( Line (c,d) ) by A3,A4,A6,CKB28:1;
assume A14: a,b // c,d;
A = ( Line (a,b) ) by A1,A2,A5,CKB28:1;
hence thesis by A5,A6,A14,A13,CKB50:1;
end;
