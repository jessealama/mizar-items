environ
vocabularies DIRAF,SUBSET_1,ANALOAF,INCSP_1,STRUCT_0,TARSKI,AFF_1;
notations TARSKI,STRUCT_0,ANALOAF,DIRAF,CKB1,CKB20,CKB22,CKB26,CKB33,CKB34,CKB55,CKB57;
definitions CKB1,CKB20,CKB26,CKB33,CKB34;
theorems DIRAF,TARSKI,XBOOLE_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB56,CKB58,CKB59,CKB60,CKB61;
schemes SUBSET_1;
registrations STRUCT_0,CKB27;
constructors DIRAF,CKB1,CKB20,CKB22,CKB26,CKB33,CKB34,CKB55,CKB57;
requirements SUBSET,BOOLE;
begin
reserve AS for AffinSpace;
reserve a for (Element of AS);
reserve b for (Element of AS);
reserve x for (Element of AS);
reserve K for (Subset of AS);
theorem
(((x in K & (not a in K)) & a,b // K) implies (a = b or (not  LIN x,a,b)))
proof
assume that
A1: x in K
and
A2: (not a in K)
and
A3: a,b // K;
set A = ( Line (a,b) );
assume that
A4: a <> b
and
A5:  LIN x,a,b;
 LIN a,b,x by A5,CKB11:1;
then A6: x in A by CKB20:def 1;
A7: a in A by CKB23:1;
A // K by A3,A4,CKB34:def 1;
hence contradiction by A1,A2,A6,A7,CKB61:1;
end;
