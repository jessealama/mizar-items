environ
vocabularies XBOOLE_0,WAYBEL_9,WAYBEL_0,SUBSET_1,CANTOR_1,WAYBEL11,STRUCT_0,REWRITE1,PRELAMB,YELLOW_9,PRE_TOPC,RELAT_2,ORDINAL2,CONNSP_2,ZFMISC_1,TARSKI,SETFAM_1,XXREAL_0,RLVECT_3,WAYBEL19,RCOMP_1,FINSET_1,YELLOW_2,RELAT_1,TOPS_1,LATTICE3,YELLOW_0,FUNCT_1,ORDERS_2,LATTICES,SEQM_3,YELLOW_6,CARD_FIL,EQREL_1,PROB_1,T_0TOPSP,ARYTM_3,WAYBEL_7,WAYBEL32,CARD_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,FINSET_1,SETFAM_1,FUNCT_2,DOMAIN_1,STRUCT_0,ORDERS_2,LATTICE3,PRE_TOPC,TOPS_1,CONNSP_2,T_0TOPSP,YELLOW_0,WAYBEL_0,CANTOR_1,YELLOW_2,WAYBEL_2,YELLOW_6,WAYBEL_9,RELSET_1,WAYBEL11,WAYBEL19,YELLOW_9,CKB1,CKB3;
definitions TARSKI,WAYBEL_0,WAYBEL11,LATTICE3,WAYBEL_9,XBOOLE_0,SUBSET_1,STRUCT_0,CKB1,CKB3;
theorems YELLOW_9,CANTOR_1,PRE_TOPC,WAYBEL_0,CONNSP_2,WAYBEL11,ZFMISC_1,TARSKI,YELLOW_6,ORDERS_2,TOPS_2,TOPS_1,YELLOW_8,YELLOW_0,RELAT_1,FUNCT_1,YELLOW_2,SUBSET_1,LATTICE3,FINSET_1,WAYBEL_2,SETFAM_1,TSP_1,WAYBEL_9,WAYBEL21,WAYBEL_8,FUNCT_2,RELSET_1,XBOOLE_0,XBOOLE_1,STRUCT_0,CKB1,CKB3,CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29;
schemes FRAENKEL,DOMAIN_1,FUNCT_1,FUNCT_2;
registrations SUBSET_1,RELAT_1,FUNCT_1,FINSET_1,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,WAYBEL_3,YELLOW_6,WAYBEL11,YELLOW_9,WAYBEL21,YELLOW14,WAYBEL29,TOPS_1,CARD_1,ORDINAL1,RELSET_1,CKB2,CKB4,CKB5,CKB10,CKB11,CKB19,CKB22,CKB27;
constructors SETFAM_1,DOMAIN_1,TOPS_1,TOPS_2,CONNSP_2,LATTICE3,CANTOR_1,WAYBEL_1,WAYBEL11,YELLOW_9,RELSET_1,WAYBEL_2,CKB1,CKB3;
requirements SUBSET,BOOLE,NUMERALS;
begin
theorem
(for R being  complete  connected LATTICE holds (for T being  Scott (TopAugmentation of R) holds (for S being (Subset of T) holds (S is  open iff (S = (the carrier of T) or S in { ( ( downarrow x ) ` ) where x is (Element of T): (not contradiction) })))))
proof
let R being  complete  connected LATTICE;
let T being  Scott (TopAugmentation of R);
let S being (Subset of T);
set DD = { ( ( downarrow x ) ` ) where x is (Element of T): (not contradiction) };
thus (S is  open implies (S = (the carrier of T) or S in DD))
proof
assume A1: S is  open;
assume that
A2: S <> (the carrier of T)
and
A3: (not S in DD);
A4: ( ( [#] T ) \ S ) <> ( {} ) by A2,PRE_TOPC:4;
A5: ( the RelStr of T ) = ( the RelStr of R ) by YELLOW_9:def 4;
then reconsider K = ( S ` ) as (Subset of R);
reconsider D = K as non empty  directed (Subset of T) by A4,A5,WAYBEL_0:3;
A6: D misses S by SUBSET_1:23;
reconsider x = ( sup D ) as (Element of T);
( S ` ) = ( downarrow x )
proof
thus ( S ` ) c= ( downarrow x )
proof
let a being set;
assume A7: a in ( S ` );
then reconsider A = a as (Element of T);
x is_>=_than ( S ` ) by YELLOW_0:32;
then A <= x by A7,LATTICE3:def 9;
hence thesis by WAYBEL_0:17;
end;

let a being set;
assume A8: a in ( downarrow x );
then reconsider A = a as (Element of T);
A9: A <= x by A8,WAYBEL_0:17;
(not x in S) by A1,A6,WAYBEL11:def 1;
then (not A in S) by A1,A9,WAYBEL_0:def 20;
hence thesis by XBOOLE_0:def 5;
end;
then ( ( downarrow x ) ` ) = S;
hence contradiction by A3;
end;

assume A10: (S = (the carrier of T) or S in DD);
per cases  by A10;
suppose A11: S = (the carrier of T);

A12: ( the RelStr of T ) = ( the RelStr of R ) by YELLOW_9:def 4;
then S = ( [#] R ) by A11;
then A13: S is  inaccessible by A12,YELLOW_9:47;
S is  upper
proof
let x being (Element of T),y being (Element of T);
assume that
x in S
and
x <= y;
thus thesis by A11;
end;
hence thesis by A13;
end;
suppose S in DD;

then (ex x being (Element of T) st S = ( ( downarrow x ) ` ));
hence thesis by CKB29:1;
end;
end;
