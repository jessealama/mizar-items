environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,TARSKI,FUNCT_1,RELAT_1,ZFMISC_1,MCART_1,GRAPH_1,PARTFUN1,CAT_1,STRUCT_0,QC_LANG1,CLASSES2,FUNCOP_1,FUNCT_4,CAT_2,OPPCAT_1,FUNCT_5,ARYTM_0,ENS_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,PARTFUN1,FUNCT_4,FUNCT_5,CLASSES2,FUNCOP_1,STRUCT_0,GRAPH_1,CAT_1,CAT_2,OPPCAT_1,CKB1,CKB6;
definitions TARSKI,FUNCT_1,CAT_1,CAT_2,BINOP_1,RELAT_1,GRAPH_1,CKB1,CKB6;
theorems TARSKI,ENUMSET1,ZFMISC_1,MCART_1,DOMAIN_1,FUNCT_1,FUNCT_2,PARTFUN1,FUNCOP_1,FUNCT_4,CLASSES2,CAT_1,CAT_2,OPPCAT_1,GRFUNC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,BINOP_1,CKB1,CKB3,CKB4,CKB5,CKB6;
schemes FUNCT_2,BINOP_1,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,FUNCT_2,RELSET_1,STRUCT_0,PARTFUN1,CKB2,CKB7;
constructors PARTFUN1,DOMAIN_1,CLASSES2,CAT_2,OPPCAT_1,FUNCOP_1,RELSET_1,CKB1,CKB6;
requirements SUBSET,BOOLE;
begin
reserve V for non  empty set;
reserve A for (Element of V);
reserve B for (Element of V);
reserve f for (Element of ( Funcs V ));
reserve m for (Element of ( Maps V ));
theorem
Th4: (ex f st (ex A st (ex B st ((m = [ [ A,B ],f ] & (B = ( {} ) implies A = ( {} ))) & f is (Function of A,B)))))
proof
m in { [ [ A,B ],f ]: ((B = ( {} ) implies A = ( {} )) & f is (Function of A,B)) };
then (ex A st (ex B st (ex f st ((m = [ [ A,B ],f ] & (B = ( {} ) implies A = ( {} ))) & f is (Function of A,B)))));
hence thesis;
end;
