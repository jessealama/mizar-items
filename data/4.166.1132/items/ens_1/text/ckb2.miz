environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,TARSKI,FUNCT_1,RELAT_1,ZFMISC_1,MCART_1,GRAPH_1,PARTFUN1,CAT_1,STRUCT_0,QC_LANG1,CLASSES2,FUNCOP_1,FUNCT_4,CAT_2,OPPCAT_1,FUNCT_5,ARYTM_0,ENS_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,PARTFUN1,FUNCT_4,FUNCT_5,CLASSES2,FUNCOP_1,STRUCT_0,GRAPH_1,CAT_1,CAT_2,OPPCAT_1,CKB1;
definitions TARSKI,FUNCT_1,CAT_1,CAT_2,BINOP_1,RELAT_1,GRAPH_1,CKB1;
theorems TARSKI,ENUMSET1,ZFMISC_1,MCART_1,DOMAIN_1,FUNCT_1,FUNCT_2,PARTFUN1,FUNCOP_1,FUNCT_4,CLASSES2,CAT_1,CAT_2,OPPCAT_1,GRFUNC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,BINOP_1,CKB1;
schemes FUNCT_2,BINOP_1,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,FUNCT_2,RELSET_1,STRUCT_0,PARTFUN1;
constructors PARTFUN1,DOMAIN_1,CLASSES2,CAT_2,OPPCAT_1,FUNCOP_1,RELSET_1,CKB1;
requirements SUBSET,BOOLE;
begin
reserve V for non empty set;
reserve A for (Element of V);
reserve B for (Element of V);
registration
let V;
cluster ( Funcs V ) ->  functional non empty;
coherence
proof
set F = { ( Funcs (A,B) ): (not contradiction) };
set A = the (Element of V);
(( id A ) in ( Funcs (A,A) ) & ( Funcs (A,A) ) in F) by FUNCT_2:9;
then reconsider UF = ( union F ) as non empty set by TARSKI:def 4;
now
let f being set;
assume f in UF;
then consider C being set such that A1: f in C and A2: C in F by TARSKI:def 4;
(ex A st (ex B st C = ( Funcs (A,B) ))) by A2;
hence f is Function by A1;
end;
hence thesis by FUNCT_1:def 13;
end;
end;
