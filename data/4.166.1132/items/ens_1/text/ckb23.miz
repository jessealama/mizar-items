environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,TARSKI,FUNCT_1,RELAT_1,ZFMISC_1,MCART_1,GRAPH_1,PARTFUN1,CAT_1,STRUCT_0,QC_LANG1,CLASSES2,FUNCOP_1,FUNCT_4,CAT_2,OPPCAT_1,FUNCT_5,ARYTM_0,ENS_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,PARTFUN1,FUNCT_4,FUNCT_5,CLASSES2,FUNCOP_1,STRUCT_0,GRAPH_1,CAT_1,CAT_2,OPPCAT_1,CKB1,CKB6,CKB14,CKB15,CKB21;
definitions TARSKI,FUNCT_1,CAT_1,CAT_2,BINOP_1,RELAT_1,GRAPH_1,CKB1,CKB6,CKB14,CKB15,CKB21;
theorems TARSKI,ENUMSET1,ZFMISC_1,MCART_1,DOMAIN_1,FUNCT_1,FUNCT_2,PARTFUN1,FUNCOP_1,FUNCT_4,CLASSES2,CAT_1,CAT_2,OPPCAT_1,GRFUNC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,BINOP_1,CKB1,CKB3,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22;
schemes FUNCT_2,BINOP_1,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,FUNCT_2,RELSET_1,STRUCT_0,PARTFUN1,CKB2,CKB7,CKB13;
constructors PARTFUN1,DOMAIN_1,CLASSES2,CAT_2,OPPCAT_1,FUNCOP_1,RELSET_1,CKB1,CKB6,CKB14,CKB15,CKB21;
requirements SUBSET,BOOLE;
begin
reserve V for non empty set;
reserve m1 for (Element of ( Maps V ));
reserve m2 for (Element of ( Maps V ));
definition
let V;
let m1;
let m2;
assume A1: ( cod m1 ) = ( dom m2 );
func m2 * m1 -> (Element of ( Maps V ))
equals
:Def7: [ [ ( dom m1 ),( cod m2 ) ],( ( m2 `2 ) * ( m1 `2 ) ) ];
coherence
proof
A2: (( cod m2 ) <> ( {} ) or ( dom m2 ) = ( {} )) by CKB18:1;
A3: (( cod m1 ) <> ( {} ) or ( dom m1 ) = ( {} )) by CKB18:1;
(( m1 `2 ) is (Function of ( dom m1 ),( cod m1 )) & ( m2 `2 ) is (Function of ( dom m2 ),( cod m2 ))) by CKB18:1;
then ( ( m2 `2 ) * ( m1 `2 ) ) is (Function of ( dom m1 ),( cod m2 )) by A1,A3,FUNCT_2:13;
hence thesis by A1,A3,A2,CKB9:1;
end;
end;
