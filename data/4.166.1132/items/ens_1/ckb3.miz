environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,TARSKI,FUNCT_1,RELAT_1,ZFMISC_1,MCART_1,GRAPH_1,PARTFUN1,CAT_1,STRUCT_0,QC_LANG1,CLASSES2,FUNCOP_1,FUNCT_4,CAT_2,OPPCAT_1,FUNCT_5,ARYTM_0,ENS_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,DOMAIN_1,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,PARTFUN1,FUNCT_4,FUNCT_5,CLASSES2,FUNCOP_1,STRUCT_0,GRAPH_1,CAT_1,CAT_2,OPPCAT_1,CKB1;
definitions TARSKI,FUNCT_1,CAT_1,CAT_2,BINOP_1,RELAT_1,GRAPH_1,CKB1;
theorems TARSKI,ENUMSET1,ZFMISC_1,MCART_1,DOMAIN_1,FUNCT_1,FUNCT_2,PARTFUN1,FUNCOP_1,FUNCT_4,CLASSES2,CAT_1,CAT_2,OPPCAT_1,GRFUNC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,BINOP_1,CKB1;
schemes FUNCT_2,BINOP_1,FUNCT_1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,FUNCT_2,RELSET_1,STRUCT_0,PARTFUN1,CKB2;
constructors PARTFUN1,DOMAIN_1,CLASSES2,CAT_2,OPPCAT_1,FUNCOP_1,RELSET_1,CKB1;
requirements SUBSET,BOOLE;
begin
reserve V for non empty set;
reserve A for (Element of V);
reserve B for (Element of V);
theorem
Th1: (for f being set holds (f in ( Funcs V ) iff (ex A st (ex B st ((B = ( {} ) implies A = ( {} )) & f is (Function of A,B))))))
proof
let f being set;
set F = { ( Funcs (A,B) ): (not contradiction) };
thus (f in ( Funcs V ) implies (ex A st (ex B st ((B = ( {} ) implies A = ( {} )) & f is (Function of A,B)))))
proof
assume f in ( Funcs V );
then consider C being set such that A1: f in C and A2: C in F by TARSKI:def 4;
consider A,B such that A3: C = ( Funcs (A,B) ) by A2;
take A;
take B;
thus thesis by A1,A3,FUNCT_2:66;
end;

given A,B such that
A4: ((B = ( {} ) implies A = ( {} )) & f is (Function of A,B));

A5: ( Funcs (A,B) ) in F;
f in ( Funcs (A,B) ) by A4,FUNCT_2:8;
hence thesis by A5,TARSKI:def 4;
end;
