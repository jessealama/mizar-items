environ
vocabularies TARSKI,XBOOLE_0,CLASSES1,ZFMISC_1,EQREL_1,TOLER_1,SETFAM_1,SUBSET_1,FUNCT_2,FUNCT_1,RELAT_1,MCART_1,GRAPH_1,ENS_1,PARTFUN1,CAT_1,COH_SP;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,RELSET_1,MCART_1,FUNCT_1,PARTFUN1,CLASSES1,FUNCT_2,BINOP_1,EQREL_1,TOLER_1,CAT_1,CKB1,CKB3,CKB8,CKB16,CKB21,CKB25,CKB28,CKB33,CKB34,CKB37,CKB40,CKB45,CKB46,CKB47,CKB48,CKB50,CKB51,CKB53,CKB62,CKB69,CKB70,CKB71,CKB74,CKB79,CKB80,CKB83,CKB85,CKB90;
definitions TARSKI,CLASSES1,XBOOLE_0,BINOP_1,RELAT_1,CKB1,CKB8,CKB16,CKB21,CKB25,CKB28,CKB33,CKB34,CKB37,CKB40,CKB45,CKB46,CKB47,CKB48,CKB50,CKB51,CKB53,CKB62,CKB71,CKB74,CKB79,CKB80,CKB83,CKB85,CKB90;
theorems TARSKI,ZFMISC_1,TOLER_1,ENUMSET1,RELAT_1,FUNCT_2,CLASSES1,PARTFUN1,MCART_1,FUNCT_1,DOMAIN_1,CAT_1,XBOOLE_0,XBOOLE_1,EQREL_1,CKB1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB24,CKB25,CKB27,CKB28,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB53,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB64,CKB65,CKB66,CKB67,CKB68,CKB71,CKB73,CKB74,CKB76,CKB77,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90;
schemes TOLER_1,TARSKI,FUNCT_2,BINOP_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,EQREL_1,CAT_2,CKB2,CKB22,CKB23,CKB26,CKB29,CKB32,CKB52,CKB54,CKB63,CKB72,CKB75,CKB78;
constructors BINOP_1,EQREL_1,CLASSES1,TOLER_1,CAT_1,RELSET_1,CKB1,CKB8,CKB16,CKB21,CKB25,CKB28,CKB33,CKB34,CKB37,CKB40,CKB45,CKB46,CKB47,CKB48,CKB50,CKB51,CKB53,CKB62,CKB69,CKB70,CKB71,CKB74,CKB79,CKB80,CKB83,CKB85,CKB90;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve m for (Element of ( MapsT X ));
definition
let X;
func fCod X -> (Function of ( MapsT X ),( TOL X )) means 
:Def30: (for m holds ( it . m ) = ( cod m ));
existence
proof
deffunc F((Element of ( MapsT X ))) = ( cod $1 );
thus (ex f being (Function of ( MapsT X ),( TOL X )) st (for x being (Element of ( MapsT X )) holds ( f . x ) = F(x))) from FUNCT_2:sch 4;
end;
uniqueness
proof
let h1 being (Function of ( MapsT X ),( TOL X ));
let h2 being (Function of ( MapsT X ),( TOL X ));
assume that
A3: (for m holds ( h1 . m ) = ( cod m ))
and
A4: (for m holds ( h2 . m ) = ( cod m ));
now
let m;
thus ( h1 . m ) = ( cod m ) by A3
.= ( h2 . m ) by A4;
end;
hence thesis by FUNCT_2:63;
end;
end;
