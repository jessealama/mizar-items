environ
vocabularies TARSKI,XBOOLE_0,CLASSES1,ZFMISC_1,EQREL_1,TOLER_1,SETFAM_1,SUBSET_1,FUNCT_2,FUNCT_1,RELAT_1,MCART_1,GRAPH_1,ENS_1,PARTFUN1,CAT_1,COH_SP;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,RELSET_1,MCART_1,FUNCT_1,PARTFUN1,CLASSES1,FUNCT_2,BINOP_1,EQREL_1,TOLER_1,CAT_1,CKB1,CKB3,CKB8,CKB16,CKB21,CKB25,CKB28,CKB33,CKB34,CKB37,CKB40,CKB45,CKB46,CKB47,CKB48,CKB50,CKB51,CKB53,CKB62,CKB69,CKB70,CKB71;
definitions TARSKI,CLASSES1,XBOOLE_0,BINOP_1,RELAT_1,CKB1,CKB8,CKB16,CKB21,CKB25,CKB28,CKB33,CKB34,CKB37,CKB40,CKB45,CKB46,CKB47,CKB48,CKB50,CKB51,CKB53,CKB62,CKB71;
theorems TARSKI,ZFMISC_1,TOLER_1,ENUMSET1,RELAT_1,FUNCT_2,CLASSES1,PARTFUN1,MCART_1,FUNCT_1,DOMAIN_1,CAT_1,XBOOLE_0,XBOOLE_1,EQREL_1,CKB1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB24,CKB25,CKB27,CKB28,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB53,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB64,CKB65,CKB66,CKB67,CKB68,CKB71;
schemes TOLER_1,TARSKI,FUNCT_2,BINOP_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,EQREL_1,CAT_2,CKB2,CKB22,CKB23,CKB26,CKB29,CKB32,CKB52,CKB54,CKB63,CKB72;
constructors BINOP_1,EQREL_1,CLASSES1,TOLER_1,CAT_1,RELSET_1,CKB1,CKB8,CKB16,CKB21,CKB25,CKB28,CKB33,CKB34,CKB37,CKB40,CKB45,CKB46,CKB47,CKB48,CKB50,CKB51,CKB53,CKB62,CKB69,CKB70,CKB71;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve X for set;
reserve A for set;
reserve C for (Element of ( CSp X ));
reserve T1 for (Element of ( TOL X ));
reserve T2 for (Element of ( TOL X ));
theorem
Th40: (x in ( FuncsT X ) iff (ex T1 st (ex T2 st ((( T2 `2 ) = ( {} ) implies ( T1 `2 ) = ( {} )) & x is (Function of ( T1 `2 ),( T2 `2 ))))))
proof
set F = { ( Funcs (( T `2 ),( TT `2 )) ) where T is (Element of ( TOL X )),TT is (Element of ( TOL X )): (not contradiction) };
thus (x in ( FuncsT X ) implies (ex A,B being (Element of ( TOL X )) st ((( B `2 ) = ( {} ) implies ( A `2 ) = ( {} )) & x is (Function of ( A `2 ),( B `2 )))))
proof
assume x in ( FuncsT X );
then consider C being set such that A1: x in C and A2: C in F by TARSKI:def 4;
consider A,B being (Element of ( TOL X )) such that A3: C = ( Funcs (( A `2 ),( B `2 )) ) by A2;
take A;
take B;
thus thesis by A1,A3,FUNCT_2:66;
end;

given A being (Element of ( TOL X )),B being (Element of ( TOL X )) such that
A4: ((( B `2 ) = ( {} ) implies ( A `2 ) = ( {} )) & x is (Function of ( A `2 ),( B `2 )));

A5: ( Funcs (( A `2 ),( B `2 )) ) in F;
x in ( Funcs (( A `2 ),( B `2 )) ) by A4,FUNCT_2:8;
hence thesis by A5,TARSKI:def 4;
end;
