environ
vocabularies TARSKI,XBOOLE_0,CLASSES1,ZFMISC_1,EQREL_1,TOLER_1,SETFAM_1,SUBSET_1,FUNCT_2,FUNCT_1,RELAT_1,MCART_1,GRAPH_1,ENS_1,PARTFUN1,CAT_1,COH_SP;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,RELSET_1,MCART_1,FUNCT_1,PARTFUN1,CLASSES1,FUNCT_2,BINOP_1,EQREL_1,TOLER_1,CAT_1,CKB1,CKB3,CKB8,CKB16,CKB21,CKB25,CKB28,CKB33,CKB34,CKB37;
definitions TARSKI,CLASSES1,XBOOLE_0,BINOP_1,RELAT_1,CKB1,CKB8,CKB16,CKB21,CKB25,CKB28,CKB33,CKB34,CKB37;
theorems TARSKI,ZFMISC_1,TOLER_1,ENUMSET1,RELAT_1,FUNCT_2,CLASSES1,PARTFUN1,MCART_1,FUNCT_1,DOMAIN_1,CAT_1,XBOOLE_0,XBOOLE_1,EQREL_1,CKB1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB24,CKB25,CKB27,CKB28,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38;
schemes TOLER_1,TARSKI,FUNCT_2,BINOP_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,EQREL_1,CAT_2,CKB2,CKB22,CKB23,CKB26,CKB29,CKB32;
constructors BINOP_1,EQREL_1,CLASSES1,TOLER_1,CAT_1,RELSET_1,CKB1,CKB8,CKB16,CKB21,CKB25,CKB28,CKB33,CKB34,CKB37;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve X for set;
reserve C1 for (Element of ( CSp X ));
reserve C2 for (Element of ( CSp X ));
reserve g for (Element of ( FuncsC X ));
reserve l for (Element of ( MapsC X ));
theorem
Th21: (((( union ( cod l ) ) <> ( {} ) or ( union ( dom l ) ) = ( {} )) & ( l `2 ) is (Function of ( union ( dom l ) ),( union ( cod l ) ))) & (for x holds (for y holds ({ x,y } in ( dom l ) implies { ( ( l `2 ) . x ),( ( l `2 ) . y ) } in ( cod l )))))
proof
consider g,C1,C2 such that A1: l = [ [ C1,C2 ],g ] and A2: ((( union C2 ) = ( {} ) implies ( union C1 ) = ( {} )) & g is (Function of ( union C1 ),( union C2 ))) and A3: (for x holds (for y holds ({ x,y } in C1 implies { ( g . x ),( g . y ) } in C2))) by CKB30:1;
A4: l = [ [ ( dom l ),( cod l ) ],( l `2 ) ] by CKB35:1;
then A5: C2 = ( cod l ) by A1,CKB38:1;
A6: (g = ( l `2 ) & C1 = ( dom l )) by A1,A4,CKB38:1,ZFMISC_1:27;
hence ((( union ( cod l ) ) <> ( {} ) or ( union ( dom l ) ) = ( {} )) & ( l `2 ) is (Function of ( union ( dom l ) ),( union ( cod l ) ))) by A1,A2,A4,CKB38:1;
let x;
let y;
assume { x,y } in ( dom l );
hence thesis by A3,A6,A5;
end;
