environ
vocabularies TARSKI,XBOOLE_0,CLASSES1,ZFMISC_1,EQREL_1,TOLER_1,SETFAM_1,SUBSET_1,FUNCT_2,FUNCT_1,RELAT_1,MCART_1,GRAPH_1,ENS_1,PARTFUN1,CAT_1,COH_SP;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,RELSET_1,MCART_1,FUNCT_1,PARTFUN1,CLASSES1,FUNCT_2,BINOP_1,EQREL_1,TOLER_1,CAT_1,CKB1,CKB3,CKB8,CKB16,CKB21,CKB25,CKB28,CKB33,CKB34,CKB37;
definitions TARSKI,CLASSES1,XBOOLE_0,BINOP_1,RELAT_1,CKB1,CKB8,CKB16,CKB21,CKB25,CKB28,CKB33,CKB34,CKB37;
theorems TARSKI,ZFMISC_1,TOLER_1,ENUMSET1,RELAT_1,FUNCT_2,CLASSES1,PARTFUN1,MCART_1,FUNCT_1,DOMAIN_1,CAT_1,XBOOLE_0,XBOOLE_1,EQREL_1,CKB1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB24,CKB25,CKB27,CKB28,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
schemes TOLER_1,TARSKI,FUNCT_2,BINOP_1,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,EQREL_1,CAT_2,CKB2,CKB22,CKB23,CKB26,CKB29,CKB32;
constructors BINOP_1,EQREL_1,CLASSES1,TOLER_1,CAT_1,RELSET_1,CKB1,CKB8,CKB16,CKB21,CKB25,CKB28,CKB33,CKB34,CKB37;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve X for set;
reserve l1 for (Element of ( MapsC X ));
reserve l2 for (Element of ( MapsC X ));
definition
let X;
let l1;
let l2;
assume A1: ( cod l1 ) = ( dom l2 );
func l2 * l1 -> (Element of ( MapsC X )) equals 
:Def13: [ [ ( dom l1 ),( cod l2 ) ],( ( l2 `2 ) * ( l1 `2 ) ) ];
coherence
proof
A2: (( union ( cod l2 ) ) <> ( {} ) or ( union ( dom l2 ) ) = ( {} )) by CKB39:1;
A3: (( union ( cod l1 ) ) <> ( {} ) or ( union ( dom l1 ) ) = ( {} )) by CKB39:1;
A4: ( l1 `2 ) is (Function of ( union ( dom l1 ) ),( union ( cod l1 ) )) by CKB39:1;
A5:now
let x;
let y;
assume A6: { x,y } in ( dom l1 );
then x in ( union ( dom l1 ) ) by CKB24:1;
then A7: x in ( dom ( l1 `2 ) ) by A3,A4,FUNCT_2:def 1;
y in ( union ( dom l1 ) ) by A6,CKB24:1;
then A8: y in ( dom ( l1 `2 ) ) by A3,A4,FUNCT_2:def 1;
{ ( ( l1 `2 ) . x ),( ( l1 `2 ) . y ) } in ( cod l1 ) by A6,CKB39:1;
then { ( ( l2 `2 ) . ( ( l1 `2 ) . x ) ),( ( l2 `2 ) . ( ( l1 `2 ) . y ) ) } in ( cod l2 ) by A1,CKB39:1;
then { ( ( ( l2 `2 ) * ( l1 `2 ) ) . x ),( ( l2 `2 ) . ( ( l1 `2 ) . y ) ) } in ( cod l2 ) by A7,FUNCT_1:13;
hence { ( ( ( l2 `2 ) * ( l1 `2 ) ) . x ),( ( ( l2 `2 ) * ( l1 `2 ) ) . y ) } in ( cod l2 ) by A8,FUNCT_1:13;
end;
( l2 `2 ) is (Function of ( union ( dom l2 ) ),( union ( cod l2 ) )) by CKB39:1;
then ( ( l2 `2 ) * ( l1 `2 ) ) is (Function of ( union ( dom l1 ) ),( union ( cod l2 ) )) by A1,A3,A4,FUNCT_2:13;
hence thesis by A1,A3,A2,A5,CKB31:1;
end;
end;
