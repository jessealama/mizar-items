environ
vocabularies NUMBERS,SUBSET_1,XBOOLE_0,FINSEQ_1,XXREAL_0,FUNCT_1,RELAT_1,TARSKI,VALUED_0,CARD_1,ARYTM_3,ORDINAL1,CLASSES1,ZFMISC_1,ORDINAL2,FUNCOP_1,MCART_1,NAT_1,ORDINAL4,ARYTM_1,REAL_1,PARTFUN1;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,SUBSET_1,NUMBERS,XXREAL_0,REAL_1,NAT_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCOP_1,ORDINAL1,ORDINAL2,CLASSES1,FINSEQ_1,FUNCT_2,BINOP_1,DOMAIN_1,VALUED_0,CKB2;
definitions TARSKI,BINOP_1;
theorems TARSKI,NAT_1,FUNCT_1,FINSEQ_1,FUNCT_2,RELAT_1,XBOOLE_1,FUNCOP_1,XREAL_1,XXREAL_0,ORDINAL1,CLASSES1,ORDINAL2,XBOOLE_0,ZFMISC_1,MCART_1,PARTFUN1,CKB1;
schemes NAT_1,FUNCT_1,FINSEQ_1,BINOP_1,CLASSES1,ORDINAL1,FUNCT_2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,NUMBERS,RELSET_1,INT_1,XCMPLX_0,FINSEQ_1,VALUED_0;
constructors BINOP_1,DOMAIN_1,FUNCOP_1,XXREAL_0,REAL_1,NAT_1,FINSEQ_1,VALUED_0,CLASSES1,ORDINAL2,RELSET_1,CKB2;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve x for set;
reserve y for set;
reserve y1 for set;
reserve y2 for set;
scheme DefRec { A() -> set,n() -> Nat,P[set,set,set] } : ((ex y being set st (ex f being Function st (((y = ( f . n() ) & ( dom f ) = ( NAT )) & ( f . ( 0 ) ) = A()) & (for n holds P[ n,( f . n ),( f . ( n + 1 ) ) ])))) & (for y1,y2 being set holds (((ex f being Function st (((y1 = ( f . n() ) & ( dom f ) = ( NAT )) & ( f . ( 0 ) ) = A()) & (for n holds P[ n,( f . n ),( f . ( n + 1 ) ) ]))) & (ex f being Function st (((y2 = ( f . n() ) & ( dom f ) = ( NAT )) & ( f . ( 0 ) ) = A()) & (for n holds P[ n,( f . n ),( f . ( n + 1 ) ) ])))) implies y1 = y2)))
provided
A1: (for n holds (for x holds (ex y st P[ n,x,y ])))
and
A2: (for n holds (for x holds (for y1 holds (for y2 holds ((P[ n,x,y1 ] & P[ n,x,y2 ]) implies y1 = y2)))))
proof
A3: (for n holds (for x holds (ex y st P[ n,x,y ]))) by A1;
consider f being Function such that A4: ((( dom f ) = ( NAT ) & ( f . ( 0 ) ) = A()) & (for n being (Element of ( NAT )) holds P[ n,( f . n ),( f . ( n + 1 ) ) ])) from CKB3:sch 1(A3);
A5: (for n being Nat holds (for x holds (for y1 holds (for y2 holds ((P[ n,x,y1 ] & P[ n,x,y2 ]) implies y1 = y2)))))
proof
let n being Nat;
n in ( NAT ) by ORDINAL1:def 12;
hence thesis by A2;
end;
thus (ex y being set st (ex f being Function st (((y = ( f . n() ) & ( dom f ) = ( NAT )) & ( f . ( 0 ) ) = A()) & (for n holds P[ n,( f . n ),( f . ( n + 1 ) ) ]))))
proof
take ( f . n() );
take f;
thus thesis by A4;
end;

let y1 being set,y2 being set;
given f1 being Function such that
A6: y1 = ( f1 . n() )
and
A7: ( dom f1 ) = ( NAT )
and
A8: ( f1 . ( 0 ) ) = A()
and
A9: (for n holds P[ n,( f1 . n ),( f1 . ( n + 1 ) ) ]);

A10: (for n being Nat holds P[ n,( f1 . n ),( f1 . ( n + 1 ) ) ])
proof
let n being Nat;
n in ( NAT ) by ORDINAL1:def 12;
hence thesis by A9;
end;
given f2 being Function such that
A11: y2 = ( f2 . n() )
and
A12: ( dom f2 ) = ( NAT )
and
A13: ( f2 . ( 0 ) ) = A()
and
A14: (for n holds P[ n,( f2 . n ),( f2 . ( n + 1 ) ) ]);

A15: (for n being Nat holds P[ n,( f2 . n ),( f2 . ( n + 1 ) ) ])
proof
let n being Nat;
n in ( NAT ) by ORDINAL1:def 12;
hence thesis by A14;
end;
f1 = f2 from NAT_1:sch 13(A7,A8,A10,A12,A13,A15,A5);
hence thesis by A6,A11;
end;
