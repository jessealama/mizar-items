environ
vocabularies NUMBERS,SUBSET_1,XBOOLE_0,FINSEQ_1,XXREAL_0,FUNCT_1,RELAT_1,TARSKI,VALUED_0,CARD_1,ARYTM_3,ORDINAL1,CLASSES1,ZFMISC_1,ORDINAL2,FUNCOP_1,MCART_1,NAT_1,ORDINAL4,ARYTM_1,REAL_1,PARTFUN1;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,SUBSET_1,NUMBERS,XXREAL_0,REAL_1,NAT_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCOP_1,ORDINAL1,ORDINAL2,CLASSES1,FINSEQ_1,FUNCT_2,BINOP_1,DOMAIN_1,VALUED_0,CKB2;
definitions TARSKI,BINOP_1;
theorems TARSKI,NAT_1,FUNCT_1,FINSEQ_1,FUNCT_2,RELAT_1,XBOOLE_1,FUNCOP_1,XREAL_1,XXREAL_0,ORDINAL1,CLASSES1,ORDINAL2,XBOOLE_0,ZFMISC_1,MCART_1,PARTFUN1,CKB1;
schemes NAT_1,FUNCT_1,FINSEQ_1,BINOP_1,CLASSES1,ORDINAL1,FUNCT_2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,NUMBERS,RELSET_1,INT_1,XCMPLX_0,FINSEQ_1,VALUED_0;
constructors BINOP_1,DOMAIN_1,FUNCOP_1,XXREAL_0,REAL_1,NAT_1,FINSEQ_1,VALUED_0,CLASSES1,ORDINAL2,RELSET_1,CKB2;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for (Element of ( NAT ));
reserve x for set;
reserve y for set;
reserve z for set;
reserve y1 for set;
reserve y2 for set;
scheme SeqBinOpDef { S() -> FinSequence,P[set,set,set] } : ((ex x st (ex p being FinSequence st (((x = ( p . ( len p ) ) & ( len p ) = ( len S() )) & ( p . 1 ) = ( S() . 1 )) & (for k holds ((1 <= k & k < ( len S() )) implies P[ ( S() . ( k + 1 ) ),( p . k ),( p . ( k + 1 ) ) ]))))) & (for x holds (for y holds (((ex p being FinSequence st (((x = ( p . ( len p ) ) & ( len p ) = ( len S() )) & ( p . 1 ) = ( S() . 1 )) & (for k holds ((1 <= k & k < ( len S() )) implies P[ ( S() . ( k + 1 ) ),( p . k ),( p . ( k + 1 ) ) ])))) & (ex p being FinSequence st (((y = ( p . ( len p ) ) & ( len p ) = ( len S() )) & ( p . 1 ) = ( S() . 1 )) & (for k holds ((1 <= k & k < ( len S() )) implies P[ ( S() . ( k + 1 ) ),( p . k ),( p . ( k + 1 ) ) ]))))) implies x = y))))
provided
A1: (for k holds (for y holds ((1 <= k & k < ( len S() )) implies (ex z st P[ ( S() . ( k + 1 ) ),y,z ]))))
and
A2: (for k holds (for x holds (for y1 holds (for y2 holds (for z holds (((((1 <= k & k < ( len S() )) & z = ( S() . ( k + 1 ) )) & P[ z,x,y1 ]) & P[ z,x,y2 ]) implies y1 = y2))))))
proof
A3: (for k holds (for x holds (for y1 holds (for y2 holds (for z holds (((((1 <= k & k < ( len S() )) & z = ( S() . ( k + 1 ) )) & P[ z,x,y1 ]) & P[ z,x,y2 ]) implies y1 = y2)))))) by A2;
A4: (for k holds (for y holds ((1 <= k & k < ( len S() )) implies (ex z st P[ ( S() . ( k + 1 ) ),y,z ])))) by A1;
thus (ex x st (ex p being FinSequence st (((x = ( p . ( len p ) ) & ( len p ) = ( len S() )) & ( p . 1 ) = ( S() . 1 )) & (for k holds ((1 <= k & k < ( len S() )) implies P[ ( S() . ( k + 1 ) ),( p . k ),( p . ( k + 1 ) ) ]))))) from CKB7:sch 1(A4);
let x;
let y;
assume A5: (ex p being FinSequence st (((x = ( p . ( len p ) ) & ( len p ) = ( len S() )) & ( p . 1 ) = ( S() . 1 )) & (for k holds ((1 <= k & k < ( len S() )) implies P[ ( S() . ( k + 1 ) ),( p . k ),( p . ( k + 1 ) ) ]))));
assume A6: (ex p being FinSequence st (((y = ( p . ( len p ) ) & ( len p ) = ( len S() )) & ( p . 1 ) = ( S() . 1 )) & (for k holds ((1 <= k & k < ( len S() )) implies P[ ( S() . ( k + 1 ) ),( p . k ),( p . ( k + 1 ) ) ]))));
thus x = y from CKB11:sch 1(A3,A5,A6);
end;
