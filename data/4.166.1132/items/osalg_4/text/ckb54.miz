environ
vocabularies NUMBERS,XBOOLE_0,ORDERS_2,MSUALG_4,OSALG_1,RELAT_1,STRUCT_0,FUNCOP_1,PBOOLE,SUBSET_1,XXREAL_0,FUNCT_1,MSUALG_1,TARSKI,EQREL_1,NAT_1,MARGREL1,PARTFUN1,FINSEQ_1,ARYTM_3,ARYTM_1,ZFMISC_1,FINSEQ_5,CARD_1,RELAT_2,ORDINAL4,NATTRA_1,YELLOW15,SETFAM_1,COH_SP,YELLOW18,WAYBEL_0,CARD_3,MSUALG_3,WELLORD1,SEQM_3,OSALG_4;
notations ZFMISC_1,TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,PARTFUN1,EQREL_1,SETFAM_1,XCMPLX_0,ORDERS_2,ORDERS_3,NUMBERS,NAT_1,FUNCT_2,FINSEQ_1,CARD_3,FINSEQ_2,FINSEQ_4,FINSEQ_5,FUNCOP_1,PBOOLE,STRUCT_0,WAYBEL_0,MSUALG_1,MSUALG_3,OSALG_1,OSALG_3,MSUALG_4,XXREAL_0,CKB2,CKB4,CKB7,CKB8,CKB11,CKB12,CKB14,CKB16,CKB18,CKB19,CKB21,CKB23,CKB32,CKB33,CKB36,CKB38,CKB42,CKB43,CKB44,CKB45,CKB46,CKB48,CKB49,CKB50,CKB52,CKB53;
definitions TARSKI,MSUALG_3,XBOOLE_0,OSALG_1,OSALG_3,CKB2,CKB8,CKB12,CKB14,CKB16,CKB19,CKB21,CKB23,CKB32,CKB33,CKB36,CKB38,CKB42,CKB43,CKB44,CKB45,CKB46,CKB48,CKB49,CKB50,CKB52,CKB53;
theorems XBOOLE_0,XBOOLE_1,FUNCT_1,FUNCT_2,PBOOLE,CARD_3,MSUALG_1,MSUALG_5,OSALG_1,OSALG_3,RELAT_2,ZFMISC_1,RELAT_1,RELSET_1,EQREL_1,MSUALG_3,MSUALG_6,MSAFREE,TARSKI,SYSREL,ORDERS_2,FINSEQ_1,FINSEQ_3,ENUMSET1,FINSEQ_5,INT_1,ORDERS_3,PARTFUN1,WAYBEL_0,GRFUNC_1,MSUALG_9,MSUALG_4,FINSEQ_2,ORDERS_1,FUNCOP_1,XREAL_1,XXREAL_0,CKB2,CKB5,CKB8,CKB12,CKB13,CKB14,CKB15,CKB16,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB31,CKB32,CKB33,CKB35,CKB36,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB52,CKB53;
schemes FUNCT_1,CLASSES1,NAT_1,FUNCT_2;
registrations SUBSET_1,RELAT_1,PARTFUN1,FUNCOP_1,XREAL_0,INT_1,FINSEQ_1,EQREL_1,FUNCT_1,PBOOLE,STRUCT_0,MSUALG_1,MSUALG_3,MSUALG_4,ORDERS_3,OSALG_1,ORDINAL1,CARD_3,TOLER_1,RELSET_1,FINSEQ_2,CKB1,CKB3,CKB6,CKB9,CKB10,CKB17,CKB27,CKB28,CKB29,CKB30,CKB34,CKB37,CKB51;
constructors XXREAL_0,REAL_1,NAT_1,NAT_D,EQREL_1,FINSEQ_4,FINSEQ_5,MSUALG_3,MSUALG_4,ORDERS_3,WAYBEL_0,OSALG_3,RELSET_1,CKB2,CKB8,CKB12,CKB14,CKB16,CKB19,CKB21,CKB23,CKB32,CKB33,CKB36,CKB38,CKB42,CKB43,CKB44,CKB45,CKB46,CKB48,CKB49,CKB50,CKB52,CKB53;
requirements BOOLE,SUBSET,NUMERALS,REAL,ARITHM;
begin
reserve S for  locally_directed OrderSortedSign;
reserve o for (Element of (the carrier' of S));
theorem
(for U1 being  non-empty (OSAlgebra of S) holds (for R being (OSCongruence of U1) holds (( OSNat_Hom (U1,R) ) is_epimorphism U1,( QuotOSAlg (U1,R) ) & ( OSNat_Hom (U1,R) ) is  order-sorted)))
proof
let U1 being  non-empty (OSAlgebra of S);
let R being (OSCongruence of U1);
set F = ( OSNat_Hom (U1,R) );
set QA = ( QuotOSAlg (U1,R) );
set S1 = (the Sorts of U1);
(for o being (Element of (the carrier' of S)) holds (( Args (o,U1) ) <> ( {} ) implies (for x being (Element of ( Args (o,U1) )) holds ( ( F . ( the_result_sort_of o ) ) . ( ( Den (o,U1) ) . x ) ) = ( ( Den (o,QA) ) . ( F # x ) ))))
proof
let o being (Element of (the carrier' of S));
assume that
( Args (o,U1) ) <> ( {} );
let x being (Element of ( Args (o,U1) ));
set ro = ( the_result_sort_of o );
set ar = ( the_arity_of o );
( (the Arity of S) . o ) = ar by MSUALG_1:def 1;
then A1: ( ( ( ( OSClass R ) # ) * (the Arity of S) ) . o ) = ( product ( ( OSClass R ) * ar ) ) by MSAFREE:1;
A2: ( dom x ) = ( dom ar ) by MSUALG_3:6;
A3: (for a being set holds (a in ( dom ar ) implies ( ( F # x ) . a ) = ( ( R #_os x ) . a )))
proof
let a being set;
assume A4: a in ( dom ar );
then reconsider n = a as Nat;
set Fo = ( OSNat_Hom (U1,R,( ar /. n )) );
set s = ( ar /. n );
A5: (ex z being (Element of ( S1 . s )) st (z = ( x . n ) & ( ( R #_os x ) . n ) = ( OSClass (R,z) ))) by A4,CKB42:def 1;
A6: n in ( dom ( (the Sorts of U1) * ar ) ) by A4,PARTFUN1:def 2;
then ( ( (the Sorts of U1) * ar ) . n ) = ( (the Sorts of U1) . ( ar . n ) ) by FUNCT_1:12
.= ( S1 . s ) by A4,PARTFUN1:def 6;
then reconsider xn = ( x . n ) as (Element of ( S1 . s )) by A6,MSUALG_3:6;
thus ( ( F # x ) . a ) = ( ( F . ( ar /. n ) ) . ( x . n ) ) by A2,A4,MSUALG_3:def 6
.= ( Fo . xn ) by CKB53:def 1
.= ( ( R #_os x ) . a ) by A5,CKB52:def 1;
end;
( dom (the Sorts of U1) ) = (the carrier of S) by PARTFUN1:def 2;
then ( rng (the ResultSort of S) ) c= ( dom (the Sorts of U1) );
then (( dom (the ResultSort of S) ) = (the carrier' of S) & ( dom ( (the Sorts of U1) * (the ResultSort of S) ) ) = ( dom (the ResultSort of S) )) by FUNCT_2:def 1,RELAT_1:27;
then A7: ( ( (the Sorts of U1) * (the ResultSort of S) ) . o ) = ( (the Sorts of U1) . ( (the ResultSort of S) . o ) ) by FUNCT_1:12
.= ( (the Sorts of U1) . ro ) by MSUALG_1:def 2;
then reconsider dx = ( ( Den (o,U1) ) . x ) as (Element of ( S1 . ro )) by MSUALG_1:def 5;
(( rng ( Den (o,U1) ) ) c= ( Result (o,U1) ) & ( Result (o,U1) ) = ( S1 . ro )) by A7,MSUALG_1:def 5;
then ( rng ( Den (o,U1) ) ) c= ( dom ( OSQuotRes (R,o) ) ) by A7,FUNCT_2:def 1;
then A8: (( dom ( Den (o,U1) ) ) = ( Args (o,U1) ) & ( dom ( ( OSQuotRes (R,o) ) * ( Den (o,U1) ) ) ) = ( dom ( Den (o,U1) ) )) by FUNCT_2:def 1,RELAT_1:27;
( dom ( OSClass R ) ) = (the carrier of S) by PARTFUN1:def 2;
then (( dom ( R #_os x ) ) = ( dom ( ( OSClass R ) * ( the_arity_of o ) ) ) & ( rng ar ) c= ( dom ( OSClass R ) )) by CARD_3:9;
then (( dom ( F # x ) ) = ( dom ar ) & ( dom ( R #_os x ) ) = ( dom ar )) by MSUALG_3:6,RELAT_1:27;
then A9: ( F # x ) = ( R #_os x ) by A3,FUNCT_1:2;
( Den (o,QA) ) = ( ( OSQuotCharact R ) . o ) by MSUALG_1:def 6
.= ( OSQuotCharact (R,o) ) by CKB49:def 1;
then ( ( Den (o,QA) ) . ( F # x ) ) = ( ( ( OSQuotRes (R,o) ) * ( Den (o,U1) ) ) . x ) by A1,A9,CKB48:def 1
.= ( ( OSQuotRes (R,o) ) . dx ) by A8,FUNCT_1:12
.= ( OSClass (R,dx) ) by CKB43:def 1
.= ( ( OSNat_Hom (U1,R,ro) ) . dx ) by CKB52:def 1
.= ( ( F . ro ) . ( ( Den (o,U1) ) . x ) ) by CKB53:def 1;
hence thesis;
end;
hence F is_homomorphism U1,QA by MSUALG_3:def 7;
(for i being set holds (i in (the carrier of S) implies ( rng ( F . i ) ) = ( (the Sorts of QA) . i )))
proof
let i being set;
assume i in (the carrier of S);
then reconsider s = i as (Element of S);
reconsider f = ( F . i ) as (Function of ( S1 . s ),( (the Sorts of QA) . s )) by PBOOLE:def 15;
A10: ( dom f ) = ( S1 . s ) by FUNCT_2:def 1;
A11: ( (the Sorts of QA) . s ) = ( OSClass (R,s) ) by CKB36:def 1;
(for x being set holds (x in ( (the Sorts of QA) . i ) implies x in ( rng f )))
proof
let x being set;
A12: f = ( OSNat_Hom (U1,R,s) ) by CKB53:def 1;
assume x in ( (the Sorts of QA) . i );
then consider a1 being set such that A13: a1 in ( S1 . s ) and A14: x = ( Class (( CompClass (R,( CComp s )) ),a1) ) by A11,CKB33:def 1;
reconsider a2 = a1 as (Element of ( S1 . s )) by A13;
(( OSClass (R,a2) ) = x & ( f . a1 ) in ( rng f )) by A10,A13,A14,FUNCT_1:def 3;
hence thesis by A12,CKB52:def 1;
end;
then ( (the Sorts of QA) . i ) c= ( rng f ) by TARSKI:def 3;
hence thesis by XBOOLE_0:def 10;
end;
hence F is  "onto" by MSUALG_3:def 3;
thus F is  order-sorted
proof
reconsider S2 = S1 as (OrderSortedSet of S) by OSALG_1:17;
let s1 being (Element of S);
let s2 being (Element of S);
assume that
A15: s1 <= s2;
A16: ( S2 . s1 ) c= ( S2 . s2 ) by A15,OSALG_1:def 16;
let a1 being set;
assume that
A17: a1 in ( dom ( F . s1 ) );
A18: a1 in ( S1 . s1 ) by A17;
then reconsider b2 = a1 as (Element of ( S1 . s2 )) by A16;
( dom ( F . s2 ) ) = ( S1 . s2 ) by FUNCT_2:def 1;
hence a1 in ( dom ( F . s2 ) ) by A16,A18;
reconsider b1 = a1 as (Element of ( S1 . s1 )) by A17;
thus ( ( F . s1 ) . a1 ) = ( ( OSNat_Hom (U1,R,s1) ) . b1 ) by CKB53:def 1
.= ( OSClass (R,b1) ) by CKB52:def 1
.= ( OSClass (R,b2) ) by A15,CKB20:1
.= ( ( OSNat_Hom (U1,R,s2) ) . b2 ) by CKB52:def 1
.= ( ( F . s2 ) . a1 ) by CKB53:def 1;
end;

end;
