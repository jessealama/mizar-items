environ
vocabularies NUMBERS,XBOOLE_0,ORDERS_2,MSUALG_4,OSALG_1,RELAT_1,STRUCT_0,FUNCOP_1,PBOOLE,SUBSET_1,XXREAL_0,FUNCT_1,MSUALG_1,TARSKI,EQREL_1,NAT_1,MARGREL1,PARTFUN1,FINSEQ_1,ARYTM_3,ARYTM_1,ZFMISC_1,FINSEQ_5,CARD_1,RELAT_2,ORDINAL4,NATTRA_1,YELLOW15,SETFAM_1,COH_SP,YELLOW18,WAYBEL_0,CARD_3,MSUALG_3,WELLORD1,SEQM_3,OSALG_4;
notations ZFMISC_1,TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,PARTFUN1,EQREL_1,SETFAM_1,XCMPLX_0,ORDERS_2,ORDERS_3,NUMBERS,NAT_1,FUNCT_2,FINSEQ_1,CARD_3,FINSEQ_2,FINSEQ_4,FINSEQ_5,FUNCOP_1,PBOOLE,STRUCT_0,WAYBEL_0,MSUALG_1,MSUALG_3,OSALG_1,OSALG_3,MSUALG_4,XXREAL_0,CKB2,CKB4,CKB7,CKB8,CKB11,CKB12,CKB14,CKB16,CKB18,CKB19,CKB21,CKB23,CKB32,CKB33,CKB36,CKB38;
definitions TARSKI,MSUALG_3,XBOOLE_0,OSALG_1,OSALG_3,CKB2,CKB8,CKB12,CKB14,CKB16,CKB19,CKB21,CKB23,CKB32,CKB33,CKB36,CKB38;
theorems XBOOLE_0,XBOOLE_1,FUNCT_1,FUNCT_2,PBOOLE,CARD_3,MSUALG_1,MSUALG_5,OSALG_1,OSALG_3,RELAT_2,ZFMISC_1,RELAT_1,RELSET_1,EQREL_1,MSUALG_3,MSUALG_6,MSAFREE,TARSKI,SYSREL,ORDERS_2,FINSEQ_1,FINSEQ_3,ENUMSET1,FINSEQ_5,INT_1,ORDERS_3,PARTFUN1,WAYBEL_0,GRFUNC_1,MSUALG_9,MSUALG_4,FINSEQ_2,ORDERS_1,FUNCOP_1,XREAL_1,XXREAL_0,CKB2,CKB5,CKB8,CKB12,CKB13,CKB14,CKB15,CKB16,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB31,CKB32,CKB33,CKB35,CKB36,CKB38,CKB39,CKB40,CKB41;
schemes FUNCT_1,CLASSES1,NAT_1,FUNCT_2;
registrations SUBSET_1,RELAT_1,PARTFUN1,FUNCOP_1,XREAL_0,INT_1,FINSEQ_1,EQREL_1,FUNCT_1,PBOOLE,STRUCT_0,MSUALG_1,MSUALG_3,MSUALG_4,ORDERS_3,OSALG_1,ORDINAL1,CARD_3,TOLER_1,RELSET_1,FINSEQ_2,CKB1,CKB3,CKB6,CKB9,CKB10,CKB17,CKB27,CKB28,CKB29,CKB30,CKB34,CKB37;
constructors XXREAL_0,REAL_1,NAT_1,NAT_D,EQREL_1,FINSEQ_4,FINSEQ_5,MSUALG_3,MSUALG_4,ORDERS_3,WAYBEL_0,OSALG_3,RELSET_1,CKB2,CKB8,CKB12,CKB14,CKB16,CKB19,CKB21,CKB23,CKB32,CKB33,CKB36,CKB38;
requirements BOOLE,SUBSET,NUMERALS,REAL,ARITHM;
begin
reserve S for  locally_directed OrderSortedSign;
reserve o for (Element of (the carrier' of S));
definition
let S;
let o;
let A being  non-empty (OSAlgebra of S);
let R being (OSCongruence of A);
let x being (Element of ( Args (o,A) ));
func R #_os x -> (Element of ( product ( ( OSClass R ) * ( the_arity_of o ) ) ))
means
:Def15: (for n being Nat holds (n in ( dom ( the_arity_of o ) ) implies (ex y being (Element of ( (the Sorts of A) . ( ( the_arity_of o ) /. n ) )) st (y = ( x . n ) & ( it . n ) = ( OSClass (R,y) )))));
existence
proof
defpred P[ set,set ]
 means
(for n being Nat holds (n = $1 implies (ex y being (Element of ( (the Sorts of A) . ( ( the_arity_of o ) /. n ) )) st (y = ( x . n ) & $2 = ( OSClass (R,y) )))));
set ar = ( the_arity_of o );
set da = ( dom ar );
A1: (for k being set holds (k in da implies (ex u being set st P[ k,u ])))
proof
let k being set;
assume A2: k in da;
then reconsider n = k as Nat;
reconsider y = ( x . n ) as (Element of ( (the Sorts of A) . ( ( the_arity_of o ) /. n ) )) by A2,MSUALG_6:2;
take ( OSClass (R,y) );
thus thesis;
end;
consider f being Function such that A3: (( dom f ) = da & (for x being set holds (x in da implies P[ x,( f . x ) ]))) from CLASSES1:sch 1(A1);
A4: ( dom ( ( OSClass R ) * ar ) ) = da by PARTFUN1:def 2;
(for y being set holds (y in ( dom ( ( OSClass R ) * ar ) ) implies ( f . y ) in ( ( ( OSClass R ) * ar ) . y )))
proof
let y being set;
assume A5: y in ( dom ( ( OSClass R ) * ar ) );
then reconsider n = y as Nat;
( ar . y ) in ( rng ar ) by A4,A5,FUNCT_1:def 3;
then reconsider s = ( ar . y ) as (Element of S);
((ex z being (Element of ( (the Sorts of A) . ( ( the_arity_of o ) /. n ) )) st (z = ( x . n ) & ( f . n ) = ( OSClass (R,z) ))) & ( ar /. n ) = ( ar . n )) by A3,A4,A5,PARTFUN1:def 6;
then A6: ( f . y ) in ( OSClass (R,s) );
( ( ( OSClass R ) * ar ) . y ) = ( ( OSClass R ) . ( ar . y ) ) by A5,FUNCT_1:12;
hence thesis by A6,CKB36:def 1;
end;
then reconsider f as (Element of ( product ( ( OSClass R ) * ar ) )) by A3,A4,CARD_3:9;
take f;
let n being Nat;
assume n in da;
hence thesis by A3;
end;
uniqueness
proof
let F being (Element of ( product ( ( OSClass R ) * ( the_arity_of o ) ) )),G being (Element of ( product ( ( OSClass R ) * ( the_arity_of o ) ) ));
assume A7: ((for n being Nat holds (n in ( dom ( the_arity_of o ) ) implies (ex y being (Element of ( (the Sorts of A) . ( ( the_arity_of o ) /. n ) )) st (y = ( x . n ) & ( F . n ) = ( OSClass (R,y) ))))) & (for n being Nat holds (n in ( dom ( the_arity_of o ) ) implies (ex y being (Element of ( (the Sorts of A) . ( ( the_arity_of o ) /. n ) )) st (y = ( x . n ) & ( G . n ) = ( OSClass (R,y) ))))));
A8: (for y being set holds (y in ( dom ( the_arity_of o ) ) implies ( F . y ) = ( G . y )))
proof
let y being set;
assume A9: y in ( dom ( the_arity_of o ) );
then reconsider n = y as Nat;
((ex z being (Element of ( (the Sorts of A) . ( ( the_arity_of o ) /. n ) )) st (z = ( x . n ) & ( F . n ) = ( OSClass (R,z) ))) & (ex z1 being (Element of ( (the Sorts of A) . ( ( the_arity_of o ) /. n ) )) st (z1 = ( x . n ) & ( G . n ) = ( OSClass (R,z1) )))) by A7,A9;
hence thesis;
end;
A10: ( dom G ) = ( dom ( the_arity_of o ) ) by PARTFUN1:def 2;
( dom F ) = ( dom ( the_arity_of o ) ) by PARTFUN1:def 2;
hence thesis by A10,A8,FUNCT_1:2;
end;
end;
