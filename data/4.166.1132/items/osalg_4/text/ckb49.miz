environ
vocabularies NUMBERS,XBOOLE_0,ORDERS_2,MSUALG_4,OSALG_1,RELAT_1,STRUCT_0,FUNCOP_1,PBOOLE,SUBSET_1,XXREAL_0,FUNCT_1,MSUALG_1,TARSKI,EQREL_1,NAT_1,MARGREL1,PARTFUN1,FINSEQ_1,ARYTM_3,ARYTM_1,ZFMISC_1,FINSEQ_5,CARD_1,RELAT_2,ORDINAL4,NATTRA_1,YELLOW15,SETFAM_1,COH_SP,YELLOW18,WAYBEL_0,CARD_3,MSUALG_3,WELLORD1,SEQM_3,OSALG_4;
notations ZFMISC_1,TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,PARTFUN1,EQREL_1,SETFAM_1,XCMPLX_0,ORDERS_2,ORDERS_3,NUMBERS,NAT_1,FUNCT_2,FINSEQ_1,CARD_3,FINSEQ_2,FINSEQ_4,FINSEQ_5,FUNCOP_1,PBOOLE,STRUCT_0,WAYBEL_0,MSUALG_1,MSUALG_3,OSALG_1,OSALG_3,MSUALG_4,XXREAL_0,CKB2,CKB4,CKB7,CKB8,CKB11,CKB12,CKB14,CKB16,CKB18,CKB19,CKB21,CKB23,CKB32,CKB33,CKB36,CKB38,CKB42,CKB43,CKB44,CKB45,CKB46,CKB48;
definitions TARSKI,MSUALG_3,XBOOLE_0,OSALG_1,OSALG_3,CKB2,CKB8,CKB12,CKB14,CKB16,CKB19,CKB21,CKB23,CKB32,CKB33,CKB36,CKB38,CKB42,CKB43,CKB44,CKB45,CKB46,CKB48;
theorems XBOOLE_0,XBOOLE_1,FUNCT_1,FUNCT_2,PBOOLE,CARD_3,MSUALG_1,MSUALG_5,OSALG_1,OSALG_3,RELAT_2,ZFMISC_1,RELAT_1,RELSET_1,EQREL_1,MSUALG_3,MSUALG_6,MSAFREE,TARSKI,SYSREL,ORDERS_2,FINSEQ_1,FINSEQ_3,ENUMSET1,FINSEQ_5,INT_1,ORDERS_3,PARTFUN1,WAYBEL_0,GRFUNC_1,MSUALG_9,MSUALG_4,FINSEQ_2,ORDERS_1,FUNCOP_1,XREAL_1,XXREAL_0,CKB2,CKB5,CKB8,CKB12,CKB13,CKB14,CKB15,CKB16,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB31,CKB32,CKB33,CKB35,CKB36,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48;
schemes FUNCT_1,CLASSES1,NAT_1,FUNCT_2;
registrations SUBSET_1,RELAT_1,PARTFUN1,FUNCOP_1,XREAL_0,INT_1,FINSEQ_1,EQREL_1,FUNCT_1,PBOOLE,STRUCT_0,MSUALG_1,MSUALG_3,MSUALG_4,ORDERS_3,OSALG_1,ORDINAL1,CARD_3,TOLER_1,RELSET_1,FINSEQ_2,CKB1,CKB3,CKB6,CKB9,CKB10,CKB17,CKB27,CKB28,CKB29,CKB30,CKB34,CKB37;
constructors XXREAL_0,REAL_1,NAT_1,NAT_D,EQREL_1,FINSEQ_4,FINSEQ_5,MSUALG_3,MSUALG_4,ORDERS_3,WAYBEL_0,OSALG_3,RELSET_1,CKB2,CKB8,CKB12,CKB14,CKB16,CKB19,CKB21,CKB23,CKB32,CKB33,CKB36,CKB38,CKB42,CKB43,CKB44,CKB45,CKB46,CKB48;
requirements BOOLE,SUBSET,NUMERALS,REAL,ARITHM;
begin
reserve S for  locally_directed OrderSortedSign;
definition
let S;
let A being  non-empty (OSAlgebra of S);
let R being (OSCongruence of A);
func OSQuotCharact R -> (ManySortedFunction of ( ( ( OSClass R ) # ) * (the Arity of S) ),( ( OSClass R ) * (the ResultSort of S) )) means 
:Def21: (for o being (OperSymbol of S) holds ( it . o ) = ( OSQuotCharact (R,o) ));
existence
proof
defpred P[ set,set ]
 means
(for o being (OperSymbol of S) holds (o = $1 implies $2 = ( OSQuotCharact (R,o) )));
set O = (the carrier' of S);
A1: (for x being set holds (x in O implies (ex y being set st P[ x,y ])))
proof
let x being set;
assume x in O;
then reconsider x1 = x as (OperSymbol of S);
take ( OSQuotCharact (R,x1) );
thus thesis;
end;
consider f being Function such that A2: (( dom f ) = O & (for x being set holds (x in O implies P[ x,( f . x ) ]))) from CLASSES1:sch 1(A1);
reconsider f as (ManySortedSet of O) by A2,PARTFUN1:def 2,RELAT_1:def 18;
(for x being set holds (x in ( dom f ) implies ( f . x ) is Function))
proof
let x being set;
assume x in ( dom f );
then reconsider x1 = x as (OperSymbol of S) by A2;
( f . x1 ) = ( OSQuotCharact (R,x1) ) by A2;
hence thesis;
end;
then reconsider f as (ManySortedFunction of O) by FUNCOP_1:def 6;
(for i being set holds (i in O implies ( f . i ) is (Function of ( ( ( ( OSClass R ) # ) * (the Arity of S) ) . i ),( ( ( OSClass R ) * (the ResultSort of S) ) . i ))))
proof
let i being set;
assume i in O;
then reconsider i1 = i as (OperSymbol of S);
( f . i1 ) = ( OSQuotCharact (R,i1) ) by A2;
hence thesis;
end;
then reconsider f as (ManySortedFunction of ( ( ( OSClass R ) # ) * (the Arity of S) ),( ( OSClass R ) * (the ResultSort of S) )) by PBOOLE:def 15;
take f;
thus thesis by A2;
end;
uniqueness
proof
let f being (ManySortedFunction of ( ( ( OSClass R ) # ) * (the Arity of S) ),( ( OSClass R ) * (the ResultSort of S) ));
let g being (ManySortedFunction of ( ( ( OSClass R ) # ) * (the Arity of S) ),( ( OSClass R ) * (the ResultSort of S) ));
assume that
A3: (for o being (OperSymbol of S) holds ( f . o ) = ( OSQuotCharact (R,o) ))
and
A4: (for o being (OperSymbol of S) holds ( g . o ) = ( OSQuotCharact (R,o) ));
now
let i being set;
assume i in (the carrier' of S);
then reconsider i1 = i as (OperSymbol of S);
( f . i1 ) = ( OSQuotCharact (R,i1) ) by A3;
hence ( f . i ) = ( g . i ) by A4;
end;
hence thesis by PBOOLE:3;
end;
end;
