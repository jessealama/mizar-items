environ
vocabularies NUMBERS,XBOOLE_0,ORDERS_2,MSUALG_4,OSALG_1,RELAT_1,STRUCT_0,FUNCOP_1,PBOOLE,SUBSET_1,XXREAL_0,FUNCT_1,MSUALG_1,TARSKI,EQREL_1,NAT_1,MARGREL1,PARTFUN1,FINSEQ_1,ARYTM_3,ARYTM_1,ZFMISC_1,FINSEQ_5,CARD_1,RELAT_2,ORDINAL4,NATTRA_1,YELLOW15,SETFAM_1,COH_SP,YELLOW18,WAYBEL_0,CARD_3,MSUALG_3,WELLORD1,SEQM_3,OSALG_4;
notations ZFMISC_1,TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,PARTFUN1,EQREL_1,SETFAM_1,XCMPLX_0,ORDERS_2,ORDERS_3,NUMBERS,NAT_1,FUNCT_2,FINSEQ_1,CARD_3,FINSEQ_2,FINSEQ_4,FINSEQ_5,FUNCOP_1,PBOOLE,STRUCT_0,WAYBEL_0,MSUALG_1,MSUALG_3,OSALG_1,OSALG_3,MSUALG_4,XXREAL_0,CKB2,CKB4,CKB7,CKB8,CKB11,CKB12,CKB14,CKB16,CKB18,CKB19,CKB21,CKB23;
definitions TARSKI,MSUALG_3,XBOOLE_0,OSALG_1,OSALG_3,CKB2,CKB8,CKB12,CKB14,CKB16,CKB19,CKB21,CKB23;
theorems XBOOLE_0,XBOOLE_1,FUNCT_1,FUNCT_2,PBOOLE,CARD_3,MSUALG_1,MSUALG_5,OSALG_1,OSALG_3,RELAT_2,ZFMISC_1,RELAT_1,RELSET_1,EQREL_1,MSUALG_3,MSUALG_6,MSAFREE,TARSKI,SYSREL,ORDERS_2,FINSEQ_1,FINSEQ_3,ENUMSET1,FINSEQ_5,INT_1,ORDERS_3,PARTFUN1,WAYBEL_0,GRFUNC_1,MSUALG_9,MSUALG_4,FINSEQ_2,ORDERS_1,FUNCOP_1,XREAL_1,XXREAL_0,CKB2,CKB5,CKB8,CKB12,CKB13,CKB14,CKB15,CKB16,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB31;
schemes FUNCT_1,CLASSES1,NAT_1,FUNCT_2;
registrations SUBSET_1,RELAT_1,PARTFUN1,FUNCOP_1,XREAL_0,INT_1,FINSEQ_1,EQREL_1,FUNCT_1,PBOOLE,STRUCT_0,MSUALG_1,MSUALG_3,MSUALG_4,ORDERS_3,OSALG_1,ORDINAL1,CARD_3,TOLER_1,RELSET_1,FINSEQ_2,CKB1,CKB3,CKB6,CKB9,CKB10,CKB17,CKB27,CKB28,CKB29,CKB30;
constructors XXREAL_0,REAL_1,NAT_1,NAT_D,EQREL_1,FINSEQ_4,FINSEQ_5,MSUALG_3,MSUALG_4,ORDERS_3,WAYBEL_0,OSALG_3,RELSET_1,CKB2,CKB8,CKB12,CKB14,CKB16,CKB19,CKB21,CKB23;
requirements BOOLE,SUBSET,NUMERALS,REAL,ARITHM;
begin
definition
let S being  locally_directed OrderSortedSign;
let A being (OSAlgebra of S);
let E being  MSEquivalence-like (OrderSortedRelation of A);
let C being (Component of S);
func CompClass (E,C) -> (Equivalence_Relation of ( (the Sorts of A) -carrier_of C ))
means
:Def11: (for x,y being set holds ([ x,y ] in it iff (ex s1 being (Element of S) st (s1 in C & [ x,y ] in ( E . s1 )))));
existence
proof
defpred CC1[ set,set ]
 means
(ex s1 being (Element of S) st (s1 in C & [ $1,$2 ] in ( E . s1 )));
A1: E is  os-compatible by CKB8:def 1;
per cases ;
suppose A2: ( (the Sorts of A) -carrier_of C ) is  empty;

(for x,y being set holds ([ x,y ] in ( {} ) iff (ex s1 being (Element of S) st (s1 in C & [ x,y ] in ( E . s1 )))))
proof
let x being set,y being set;
thus ([ x,y ] in ( {} ) implies (ex s1 being (Element of S) st (s1 in C & [ x,y ] in ( E . s1 ))));
assume (ex s1 being (Element of S) st (s1 in C & [ x,y ] in ( E . s1 )));
then consider s1 being (Element of S) such that A3: (s1 in C & [ x,y ] in ( E . s1 ));
(x in ( (the Sorts of A) . s1 ) & ( (the Sorts of A) . s1 ) in { ( (the Sorts of A) . s ) where s is (Element of S): s in C }) by A3,ZFMISC_1:87;
hence thesis by A2,TARSKI:def 4;
end;
hence thesis by A2,CKB31:1;
end;
suppose ( (the Sorts of A) -carrier_of C ) is non empty;

then reconsider SAC = ( (the Sorts of A) -carrier_of C ) as non empty set;
set CC = { [ x,y ] where x is (Element of SAC),y is (Element of SAC): CC1[ x,y ] };
CC c= [: SAC,SAC :]
proof
let z being set;
assume z in CC;
then (ex x,y being (Element of SAC) st (z = [ x,y ] & CC1[ x,y ]));
hence thesis by ZFMISC_1:87;
end;
then reconsider P1 = CC as (Relation of SAC);
now
let x being set,y being set;
assume that
A4: (x in SAC & y in SAC)
and
A5: [ x,y ] in P1;
reconsider x1 = x,y1 = y as (Element of SAC) by A4;
consider x2 being (Element of SAC),y2 being (Element of SAC) such that A6: [ x,y ] = [ x2,y2 ] and A7: CC1[ x2,y2 ] by A5;
A8: (x = x2 & y = y2) by A6,ZFMISC_1:27;
consider s5 being (Element of S) such that A9: s5 in C and A10: [ x2,y2 ] in ( E . s5 ) by A7;
( field ( E . s5 ) ) = ( (the Sorts of A) . s5 ) by ORDERS_1:12;
then A11: ( E . s5 ) is_symmetric_in ( (the Sorts of A) . s5 ) by RELAT_2:def 11;
(x2 in ( (the Sorts of A) . s5 ) & y2 in ( (the Sorts of A) . s5 )) by A10,ZFMISC_1:87;
then [ y,x ] in ( E . s5 ) by A8,A10,A11,RELAT_2:def 3;
then [ y1,x1 ] in CC by A9;
hence [ y,x ] in P1;
end;
then A12: P1 is_symmetric_in SAC by RELAT_2:def 3;
now
let x being set;
assume that
A13: x in SAC;
reconsider x1 = x as (Element of SAC) by A13;
consider X being set such that A14: x in X and A15: X in { ( (the Sorts of A) . s ) where s is (Element of S): s in C } by A13,TARSKI:def 4;
consider s being (Element of S) such that A16: X = ( (the Sorts of A) . s ) and A17: s in C by A15;
( field ( E . s ) ) = ( (the Sorts of A) . s ) by ORDERS_1:12;
then ( E . s ) is_reflexive_in ( (the Sorts of A) . s ) by RELAT_2:def 9;
then [ x,x ] in ( E . s ) by A14,A16,RELAT_2:def 1;
then [ x1,x1 ] in CC by A17;
hence [ x,x ] in P1;
end;
then P1 is_reflexive_in SAC by RELAT_2:def 1;
then A18: (( dom P1 ) = SAC & ( field P1 ) = SAC) by ORDERS_1:13;
now
let x being set,y being set,z being set;
assume that
x in SAC
and
y in SAC
and
z in SAC
and
A19: [ x,y ] in P1
and
A20: [ y,z ] in P1;
consider x2 being (Element of SAC),y2 being (Element of SAC) such that A21: [ x,y ] = [ x2,y2 ] and A22: CC1[ x2,y2 ] by A19;
A23: x = x2 by A21,ZFMISC_1:27;
consider y3 being (Element of SAC),z3 being (Element of SAC) such that A24: [ y,z ] = [ y3,z3 ] and A25: CC1[ y3,z3 ] by A20;
A26: y = y3 by A24,ZFMISC_1:27;
consider s5 being (Element of S) such that A27: s5 in C and A28: [ x2,y2 ] in ( E . s5 ) by A22;
consider s6 being (Element of S) such that A29: s6 in C and A30: [ y3,z3 ] in ( E . s6 ) by A25;
reconsider s51 = s5,s61 = s6 as (Element of S);
consider su being (Element of S) such that A31: su in C and A32: s51 <= su and A33: s61 <= su by A27,A29,WAYBEL_0:def 1;
(y3 in ( (the Sorts of A) . s6 ) & z3 in ( (the Sorts of A) . s6 )) by A30,ZFMISC_1:87;
then A34: [ y3,z3 ] in ( E . su ) by A1,A30,A33,CKB2:def 1;
then A35: z3 in ( (the Sorts of A) . su ) by ZFMISC_1:87;
A36: z = z3 by A24,ZFMISC_1:27;
A37: y = y2 by A21,ZFMISC_1:27;
( field ( E . su ) ) = ( (the Sorts of A) . su ) by ORDERS_1:12;
then A38: ( E . su ) is_transitive_in ( (the Sorts of A) . su ) by RELAT_2:def 16;
(x2 in ( (the Sorts of A) . s5 ) & y2 in ( (the Sorts of A) . s5 )) by A28,ZFMISC_1:87;
then A39: [ x2,y2 ] in ( E . su ) by A1,A28,A32,CKB2:def 1;
then (x2 in ( (the Sorts of A) . su ) & y2 in ( (the Sorts of A) . su )) by ZFMISC_1:87;
then [ x2,z3 ] in ( E . su ) by A37,A26,A39,A34,A35,A38,RELAT_2:def 8;
hence [ x,z ] in P1 by A23,A36,A31;
end;
then P1 is_transitive_in SAC by RELAT_2:def 8;
then reconsider P1 as (Equivalence_Relation of ( (the Sorts of A) -carrier_of C )) by A18,A12,PARTFUN1:def 2,RELAT_2:def 11,RELAT_2:def 16;
take P1;
(for x,y being set holds ([ x,y ] in CC iff CC1[ x,y ]))
proof
let x being set,y being set;
hereby
assume [ x,y ] in CC;
then (ex x1,y1 being (Element of SAC) st ([ x,y ] = [ x1,y1 ] & CC1[ x1,y1 ]));
hence CC1[ x,y ];
end;
assume A40: CC1[ x,y ];
then consider s1 being (Element of S) such that A41: s1 in C and A42: [ x,y ] in ( E . s1 );
A43: y in ( (the Sorts of A) . s1 ) by A42,ZFMISC_1:87;
(( (the Sorts of A) . s1 ) in { ( (the Sorts of A) . s ) where s is (Element of S): s in C } & x in ( (the Sorts of A) . s1 )) by A41,A42,ZFMISC_1:87;
then reconsider x1 = x,y1 = y as (Element of SAC) by A43,TARSKI:def 4;
[ x1,y1 ] in CC by A40;
hence thesis;
end;
hence thesis;
end;
end;
uniqueness
proof
let X being (Equivalence_Relation of ( (the Sorts of A) -carrier_of C )),Y being (Equivalence_Relation of ( (the Sorts of A) -carrier_of C ));
defpred CC1[ set,set ]
 means
(ex s1 being (Element of S) st (s1 in C & [ $1,$2 ] in ( E . s1 )));
assume A44: (for x,y being set holds ([ x,y ] in X iff CC1[ x,y ]));
assume A45: (for x,y being set holds ([ x,y ] in Y iff CC1[ x,y ]));
(for x,y being set holds ([ x,y ] in X iff [ x,y ] in Y))
proof
let x being set,y being set;
hereby
assume [ x,y ] in X;
then CC1[ x,y ] by A44;
hence [ x,y ] in Y by A45;
end;
assume [ x,y ] in Y;
then CC1[ x,y ] by A45;
hence thesis by A44;
end;
hence thesis by RELAT_1:def 2;
end;
end;
