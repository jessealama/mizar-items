environ
vocabularies TARSKI,XBOOLE_0;
notations TARSKI,XBOOLE_0,CKB2,CKB3,CKB4,CKB5;
definitions TARSKI,XBOOLE_0,CKB2,CKB3,CKB4,CKB5;
theorems TARSKI,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5;
schemes XBOOLE_0;
constructors TARSKI,XBOOLE_0,CKB2,CKB3,CKB4,CKB5;
begin
reserve x for set;
reserve x1 for set;
reserve x2 for set;
reserve x3 for set;
reserve x4 for set;
reserve x5 for set;
reserve x6 for set;
reserve x7 for set;
definition
let x1;
let x2;
let x3;
let x4;
let x5;
let x6;
let x7;
func {x1,x2,x3,x4,x5,x6,x7 } -> set means 
:Def5: (x in it iff ((((((x = x1 or x = x2) or x = x3) or x = x4) or x = x5) or x = x6) or x = x7));
existence
proof
take ( union { { x1,x2,x3,x4,x5,x6 },{ x7 } } );
let x;
(x in { x1,x2,x3,x4,x5,x6 } iff (((((x = x1 or x = x2) or x = x3) or x = x4) or x = x5) or x = x6)) by CKB5:def 1;
hence thesis by CKB1:1;
end;
uniqueness
proof
defpred P[ set ]
 means
(((((($1 = x1 or $1 = x2) or $1 = x3) or $1 = x4) or $1 = x5) or $1 = x6) or $1 = x7);
(for X1,X2 being set holds (((for x being set holds (x in X1 iff P[ x ])) & (for x being set holds (x in X2 iff P[ x ]))) implies X1 = X2)) from XBOOLE_0:sch 3;
hence thesis;
end;
end;
