environ
vocabularies NUMBERS,SUBSET_1,TREES_2,ZFMISC_1,FINSEQ_1,XBOOLE_0,TREES_1,FUNCT_1,RELAT_1,ORDINAL4,NAT_1,CARD_1,XXREAL_0,PARTFUN1,TARSKI,ORDINAL1,ARYTM_3,FINSET_1,FUNCOP_1,MARGREL1,MCART_1,QC_LANG1,XBOOLEAN,VALUED_1,ZF_LANG,MODAL_1,TREES_3;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,WELLORD2,NAT_1,DOMAIN_1,MCART_1,RELAT_1,FUNCT_1,RELSET_1,FINSEQ_1,FUNCOP_1,FINSEQ_2,FUNCT_2,FINSET_1,PARTFUN1,TREES_1,TREES_2,XXREAL_0,TREES_3,CKB2,CKB3;
definitions TARSKI,XBOOLE_0,FUNCT_1,CKB2,CKB3;
theorems TARSKI,FUNCT_1,NAT_1,ENUMSET1,TREES_1,TREES_2,FUNCOP_1,MCART_1,DOMAIN_1,PARTFUN1,FINSEQ_1,FINSET_1,CARD_1,WELLORD2,CARD_2,ZFMISC_1,FINSEQ_2,RELAT_1,FUNCT_2,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,TREES_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
schemes TREES_2,CLASSES1,NAT_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,TREES_1,TREES_2,CARD_1,RELSET_1,TREES_3;
constructors PARTFUN1,WELLORD2,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,TREES_2,RELSET_1,FUNCOP_1,TREES_3,CKB2,CKB3;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve n for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
theorem
Th24: (for Z being  finite Tree holds (( branchdeg ( Root Z ) ) = 2 implies ( succ ( Root Z ) ) = { <* ( 0 ) *>,<* 1 *> }))
proof
let Z being  finite Tree;
assume ( branchdeg ( Root Z ) ) = 2;
then ( card ( succ ( Root Z ) ) ) = 2 by TREES_2:def 12;
then consider x,y such that A1: x <> y and A2: ( succ ( Root Z ) ) = { x,y } by CARD_2:60;
A3: x in ( succ ( Root Z ) ) by A2,TARSKI:def 2;
then reconsider x9 = x as (Element of Z);
x9 in { ( ( Root Z ) ^ <* n *> ): ( ( Root Z ) ^ <* n *> ) in Z } by A3,TREES_2:def 5;
then consider m such that A4: x9 = ( ( Root Z ) ^ <* m *> ) and ( ( Root Z ) ^ <* m *> ) in Z;
A5: x9 = <* m *> by A4,FINSEQ_1:34;
A6: y in ( succ ( Root Z ) ) by A2,TARSKI:def 2;
then reconsider y9 = y as (Element of Z);
y9 in { ( ( Root Z ) ^ <* n *> ): ( ( Root Z ) ^ <* n *> ) in Z } by A6,TREES_2:def 5;
then consider k such that A7: y9 = ( ( Root Z ) ^ <* k *> ) and ( ( Root Z ) ^ <* k *> ) in Z;
A8: y9 = <* k *> by A7,FINSEQ_1:34;
per cases ;
suppose A9: m = ( 0 );

now
A10: <* 1 *> = ( ( Root Z ) ^ <* 1 *> ) by FINSEQ_1:34;
assume A11: k <> 1;
then 2 <= k by A1,A5,A8,A9,NAT_1:26;
then <* 1 *> in Z by A8,CKB11:1,XXREAL_0:2;
then <* 1 *> in ( succ ( Root Z ) ) by A10,TREES_2:12;
then (<* 1 *> = <* ( 0 ) *> or <* 1 *> = <* k *>) by A2,A5,A8,A9,TARSKI:def 2;
hence contradiction by A11,TREES_1:3;
end;
hence thesis by A2,A4,A8,A9,FINSEQ_1:34;
end;
suppose A12: m <> ( 0 );

(<* ( 0 ) *> in Z & <* ( 0 ) *> = ( ( Root Z ) ^ <* ( 0 ) *> )) by A5,CKB11:1,FINSEQ_1:34,NAT_1:2;
then <* ( 0 ) *> in ( succ ( Root Z ) ) by TREES_2:12;
then A13: (<* ( 0 ) *> = <* m *> or <* ( 0 ) *> = <* k *>) by A2,A5,A8,TARSKI:def 2;
now
A14: <* 1 *> = ( ( Root Z ) ^ <* 1 *> ) by FINSEQ_1:34;
assume A15: m <> 1;
then 2 <= m by A12,NAT_1:26;
then <* 1 *> in Z by A5,CKB11:1,XXREAL_0:2;
then <* 1 *> in ( succ ( Root Z ) ) by A14,TREES_2:12;
then (<* 1 *> = <* ( 0 ) *> or <* 1 *> = <* m *>) by A2,A5,A8,A12,A13,TARSKI:def 2,TREES_1:3;
hence contradiction by A15,TREES_1:3;
end;
hence thesis by A2,A4,A8,A13,FINSEQ_1:34,TREES_1:3;
end;
end;
