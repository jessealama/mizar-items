environ
vocabularies NUMBERS,SUBSET_1,TREES_2,ZFMISC_1,FINSEQ_1,XBOOLE_0,TREES_1,FUNCT_1,RELAT_1,ORDINAL4,NAT_1,CARD_1,XXREAL_0,PARTFUN1,TARSKI,ORDINAL1,ARYTM_3,FINSET_1,FUNCOP_1,MARGREL1,MCART_1,QC_LANG1,XBOOLEAN,VALUED_1,ZF_LANG,MODAL_1,TREES_3;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,WELLORD2,NAT_1,DOMAIN_1,MCART_1,RELAT_1,FUNCT_1,RELSET_1,FINSEQ_1,FUNCOP_1,FINSEQ_2,FUNCT_2,FINSET_1,PARTFUN1,TREES_1,TREES_2,XXREAL_0,TREES_3,CKB2,CKB3;
definitions TARSKI,XBOOLE_0,FUNCT_1,CKB2,CKB3;
theorems TARSKI,FUNCT_1,NAT_1,ENUMSET1,TREES_1,TREES_2,FUNCOP_1,MCART_1,DOMAIN_1,PARTFUN1,FINSEQ_1,FINSET_1,CARD_1,WELLORD2,CARD_2,ZFMISC_1,FINSEQ_2,RELAT_1,FUNCT_2,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,TREES_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes TREES_2,CLASSES1,NAT_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,TREES_1,TREES_2,CARD_1,RELSET_1,TREES_3;
constructors PARTFUN1,WELLORD2,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,TREES_2,RELSET_1,FUNCOP_1,TREES_3,CKB2,CKB3;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x1 for set;
reserve x2 for set;
reserve w for (FinSequence of ( NAT ));
reserve s for (FinSequence of ( NAT ));
reserve u for (FinSequence of ( NAT ));
reserve D for non  empty set;
theorem
Th30: (for Z being (DecoratedTree of D) holds (for x1,x2 being (Element of ( dom Z )) holds (((x1 = <* ( 0 ) *> & x2 = <* 1 *>) & ( succ ( Root ( dom Z ) ) ) = { x1,x2 }) implies Z = ( ( ( ( elementary_tree 2 ) --> ( Root Z ) ) with-replacement (<* ( 0 ) *>,( Z | x1 )) ) with-replacement (<* 1 *>,( Z | x2 )) ))))
proof
A1: (not <* ( 0 ) *> is_a_proper_prefix_of <* 1 *>) by TREES_1:52;
set e = ( elementary_tree 2 );
let Z being (DecoratedTree of D);
let x1 being (Element of ( dom Z ));
let x2 being (Element of ( dom Z ));
assume that
A2: x1 = <* ( 0 ) *>
and
A3: x2 = <* 1 *>
and
A4: ( succ ( Root ( dom Z ) ) ) = { x1,x2 };
A5: ( dom ( Z | x2 ) ) = ( ( dom Z ) | x2 ) by TREES_2:def 10;
set T1 = ( ( ( elementary_tree 2 ) --> ( Root Z ) ) with-replacement (<* ( 0 ) *>,( Z | x1 )) );
set E = ( ( elementary_tree 2 ) --> ( Root Z ) );
A6: ( dom ( Z | x1 ) ) = ( ( dom Z ) | x1 ) by TREES_2:def 10;
set T = ( T1 with-replacement (<* 1 *>,( Z | x2 )) );
A7: <* ( 0 ) *> in e by ENUMSET1:def 1,TREES_1:53;
then A8: <* ( 0 ) *> in ( dom E ) by FUNCOP_1:13;
then A9: ( dom T1 ) = ( ( dom E ) with-replacement (<* ( 0 ) *>,( dom ( Z | x1 ) )) ) by TREES_2:def 11;
<* 1 *> in e by ENUMSET1:def 1,TREES_1:53;
then <* 1 *> in ( dom E ) by FUNCOP_1:13;
then A10: <* 1 *> in ( dom T1 ) by A8,A9,A1,TREES_1:def 9;
then A11: ( dom T ) = ( ( dom T1 ) with-replacement (<* 1 *>,( dom ( Z | x2 ) )) ) by TREES_2:def 11;
A12: ( dom E ) = e by FUNCOP_1:13;
then A13: ( dom T1 ) = ( e with-replacement (<* ( 0 ) *>,( ( dom Z ) | x1 )) ) by A7,A6,TREES_2:def 11;
A14: (for s holds (s in ( dom T ) implies ( T . s ) = ( Z . s )))
proof
let s;
assume A15: s in ( dom T );
then A16: (((not <* 1 *> is_a_prefix_of s) & ( T . s ) = ( T1 . s )) or (ex u st ((u in ( dom ( Z | x2 ) ) & s = ( <* 1 *> ^ u )) & ( T . s ) = ( ( Z | x2 ) . u )))) by A10,A11,TREES_2:def 11;
now
per cases  by A10,A11,A15,TREES_1:def 9;
suppose A17: (s in ( dom T1 ) & (not <* 1 *> is_a_proper_prefix_of s));

then A18: (((not <* ( 0 ) *> is_a_prefix_of s) & ( T1 . s ) = ( E . s )) or (ex u st ((u in ( dom ( Z | x1 ) ) & s = ( <* ( 0 ) *> ^ u )) & ( T1 . s ) = ( ( Z | x1 ) . u )))) by A8,A9,TREES_2:def 11;
now
per cases  by A7,A13,A17,TREES_1:def 9;
suppose A19: (s in e & (not <* ( 0 ) *> is_a_proper_prefix_of s));

now
per cases  by A19,ENUMSET1:def 1,TREES_1:53;
suppose A20: s = ( {} );

then ((not (ex u st ((u in ( dom ( Z | x2 ) ) & s = ( <* 1 *> ^ u )) & ( T . s ) = ( ( Z | x2 ) . u )))) & ( E . s ) = ( Z . s )) by A19,FUNCOP_1:7;
hence thesis by A10,A11,A15,A18,A20,TREES_2:def 11;
end;
suppose s = <* ( 0 ) *>;

hence thesis by A2,A3,A6,A5,A16,A18,TREES_2:def 10;
end;
suppose s = <* 1 *>;

hence thesis by A3,A5,A16,TREES_2:def 10;
end;
end;
hence thesis;
end;
suppose (ex w st (w in ( ( dom Z ) | x1 ) & s = ( <* ( 0 ) *> ^ w )));

hence thesis by A2,A3,A6,A5,A16,A18,TREES_1:1,TREES_2:def 10;
end;
end;
hence thesis;
end;
suppose (ex w st (w in ( dom ( Z | x2 ) ) & s = ( <* 1 *> ^ w )));

hence thesis by A3,A5,A16,TREES_1:1,TREES_2:def 10;
end;
end;
hence thesis;
end;
( dom Z ) = ( dom T ) by A2,A3,A4,A12,A6,A5,A9,A11,CKB28:1;
hence thesis by A14,TREES_2:31;
end;
