environ
vocabularies NUMBERS,SUBSET_1,TREES_2,ZFMISC_1,FINSEQ_1,XBOOLE_0,TREES_1,FUNCT_1,RELAT_1,ORDINAL4,NAT_1,CARD_1,XXREAL_0,PARTFUN1,TARSKI,ORDINAL1,ARYTM_3,FINSET_1,FUNCOP_1,MARGREL1,MCART_1,QC_LANG1,XBOOLEAN,VALUED_1,ZF_LANG,MODAL_1,TREES_3;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,WELLORD2,NAT_1,DOMAIN_1,MCART_1,RELAT_1,FUNCT_1,RELSET_1,FINSEQ_1,FUNCOP_1,FINSEQ_2,FUNCT_2,FINSET_1,PARTFUN1,TREES_1,TREES_2,XXREAL_0,TREES_3,CKB2,CKB3;
definitions TARSKI,XBOOLE_0,FUNCT_1,CKB2,CKB3;
theorems TARSKI,FUNCT_1,NAT_1,ENUMSET1,TREES_1,TREES_2,FUNCOP_1,MCART_1,DOMAIN_1,PARTFUN1,FINSEQ_1,FINSET_1,CARD_1,WELLORD2,CARD_2,ZFMISC_1,FINSEQ_2,RELAT_1,FUNCT_2,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,TREES_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes TREES_2,CLASSES1,NAT_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,TREES_1,TREES_2,CARD_1,RELSET_1,TREES_3;
constructors PARTFUN1,WELLORD2,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,TREES_2,RELSET_1,FUNCOP_1,TREES_3,CKB2,CKB3;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve s for (FinSequence of ( NAT ));
theorem
Th27: (for Z being  finite Tree holds (for z being (Element of Z) holds (( succ ( Root Z ) ) = { z } implies Z = ( ( elementary_tree 1 ) with-replacement (<* ( 0 ) *>,( Z | z )) ))))
proof
let Z being  finite Tree;
let z being (Element of Z);
set e = ( elementary_tree 1 );
A1: <* ( 0 ) *> in e by TARSKI:def 2,TREES_1:51;
A2: ( {} ) in Z by TREES_1:22;
assume A3: ( succ ( Root Z ) ) = { z };
then ( card ( succ ( Root Z ) ) ) = 1 by CARD_1:30;
then ( branchdeg ( Root Z ) ) = 1 by TREES_2:def 12;
then { z } = { <* ( 0 ) *> } by A3,CKB21:1;
then z in { <* ( 0 ) *> } by TARSKI:def 1;
then A4: z = <* ( 0 ) *> by TARSKI:def 1;
then A5: <* ( 0 ) *> in Z;
now
let x;
thus (x in Z implies x in ( e with-replacement (<* ( 0 ) *>,( Z | z )) ))
proof
assume x in Z;
then reconsider x9 = x as (Element of Z);
per cases ;
suppose x9 = ( {} );

hence thesis by TREES_1:22;
end;
suppose x9 <> ( {} );

then consider w being (FinSequence of ( NAT )),n being (Element of ( NAT )) such that A6: x9 = ( <* n *> ^ w ) by FINSEQ_2:130;
<* n *> is_a_prefix_of x9 by A6,TREES_1:1;
then A7: <* n *> in Z by TREES_1:20;
<* n *> = ( ( Root Z ) ^ <* n *> ) by FINSEQ_1:34;
then A8: <* n *> in ( succ ( Root Z ) ) by A7,TREES_2:12;
then <* n *> = z by A3,TARSKI:def 1;
then A9: w in ( Z | z ) by A6,TREES_1:def 6;
<* n *> = <* ( 0 ) *> by A3,A4,A8,TARSKI:def 1;
hence thesis by A1,A6,A9,TREES_1:def 9;
end;
end;

assume x in ( e with-replacement (<* ( 0 ) *>,( Z | z )) );
then reconsider x9 = x as (Element of ( e with-replacement (<* ( 0 ) *>,( Z | z )) ));
per cases  by A1,TREES_1:def 9;
suppose (x9 in e & (not <* ( 0 ) *> is_a_proper_prefix_of x9));

hence x in Z by A5,A2,TARSKI:def 2,TREES_1:51;
end;
suppose (ex s st (s in ( Z | z ) & x9 = ( <* ( 0 ) *> ^ s )));

hence x in Z by A4,TREES_1:def 6;
end;
end;
hence thesis by TARSKI:1;
end;
