environ
vocabularies NUMBERS,SUBSET_1,TREES_2,ZFMISC_1,FINSEQ_1,XBOOLE_0,TREES_1,FUNCT_1,RELAT_1,ORDINAL4,NAT_1,CARD_1,XXREAL_0,PARTFUN1,TARSKI,ORDINAL1,ARYTM_3,FINSET_1,FUNCOP_1,MARGREL1,MCART_1,QC_LANG1,XBOOLEAN,VALUED_1,ZF_LANG,MODAL_1,TREES_3;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,WELLORD2,NAT_1,DOMAIN_1,MCART_1,RELAT_1,FUNCT_1,RELSET_1,FINSEQ_1,FUNCOP_1,FINSEQ_2,FUNCT_2,FINSET_1,PARTFUN1,TREES_1,TREES_2,XXREAL_0,TREES_3,CKB2,CKB3,CKB30,CKB32,CKB33,CKB35,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB55,CKB61,CKB67,CKB68,CKB69,CKB70;
definitions TARSKI,XBOOLE_0,FUNCT_1,CKB2,CKB3,CKB30,CKB33,CKB38,CKB42,CKB43,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB55,CKB61,CKB67,CKB68,CKB69,CKB70;
theorems TARSKI,FUNCT_1,NAT_1,ENUMSET1,TREES_1,TREES_2,FUNCOP_1,MCART_1,DOMAIN_1,PARTFUN1,FINSEQ_1,FINSET_1,CARD_1,WELLORD2,CARD_2,ZFMISC_1,FINSEQ_2,RELAT_1,FUNCT_2,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,TREES_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB33,CKB36,CKB38,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB76,CKB77,CKB78;
schemes TREES_2,CLASSES1,NAT_1,FUNCT_2,XBOOLE_0,CKB75;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,TREES_1,TREES_2,CARD_1,RELSET_1,TREES_3,CKB31,CKB34,CKB40,CKB71,CKB72,CKB73,CKB74;
constructors PARTFUN1,WELLORD2,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,TREES_2,RELSET_1,FUNCOP_1,TREES_3,CKB2,CKB3,CKB30,CKB33,CKB37,CKB38,CKB41,CKB42,CKB43,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB55,CKB61,CKB67,CKB68,CKB69,CKB70;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve s for (FinSequence of ( NAT ));
reserve u for (FinSequence of ( NAT ));
reserve A for MP-wff;
reserve B for MP-wff;
reserve C for MP-wff;
theorem
Th50: (( 'not' A ) <> ( (#) B ) & ( 'not' A ) <> ( B '&' C ))
proof
set e2 = ( elementary_tree 2 );
set e1 = ( elementary_tree 1 );
set E = ( e1 --> [ 1,( 0 ) ] );
set F = ( e1 --> [ 1,1 ] );
reconsider e = ( {} ) as (Element of ( dom ( 'not' A ) )) by TREES_1:22;
A1: (( {} ) in ( dom ( (#) B ) ) & (not (ex u st ((u in ( dom B ) & e = ( <* ( 0 ) *> ^ u )) & ( ( (#) B ) . e ) = ( B . u ))))) by TREES_1:22;
A2: <* ( 0 ) *> in e1 by TARSKI:def 2,TREES_1:51;
then A3: <* ( 0 ) *> in ( dom E ) by FUNCOP_1:13;
then A4: ( dom ( 'not' A ) ) = ( ( dom E ) with-replacement (<* ( 0 ) *>,( dom A )) ) by TREES_2:def 11;
A5: <* ( 0 ) *> in ( dom F ) by A2,FUNCOP_1:13;
then ( dom ( (#) B ) ) = ( ( dom F ) with-replacement (<* ( 0 ) *>,( dom B )) ) by TREES_2:def 11;
then A6: ( ( (#) B ) . e ) = ( F . e ) by A5,A1,TREES_2:def 11;
e in e1 by TREES_1:22;
then A7: (( E . e ) = [ 1,( 0 ) ] & ( F . e ) = [ 1,1 ]) by FUNCOP_1:7;
((not (ex u st ((u in ( dom A ) & e = ( <* ( 0 ) *> ^ u )) & ( ( 'not' A ) . e ) = ( A . u )))) & [ 1,( 0 ) ] <> [ 1,1 ]) by ZFMISC_1:27;
hence ( 'not' A ) <> ( (#) B ) by A3,A4,A6,A7,TREES_2:def 11;
set y = ( ( e2 --> [ 2,( 0 ) ] ) with-replacement (<* ( 0 ) *>,B) );
A8: (<* 1 *> in e2 & (not <* ( 0 ) *> is_a_proper_prefix_of <* 1 *>)) by TREES_1:28,TREES_1:52;
A9: (<* ( 0 ) *> in e2 & ( dom ( e2 --> [ 2,( 0 ) ] ) ) = e2) by FUNCOP_1:13,TREES_1:28;
then ( dom y ) = ( ( dom ( e2 --> [ 2,( 0 ) ] ) ) with-replacement (<* ( 0 ) *>,( dom B )) ) by TREES_2:def 11;
then A10: <* 1 *> in ( dom y ) by A9,A8,TREES_1:def 9;
then ( dom ( B '&' C ) ) = ( ( dom y ) with-replacement (<* 1 *>,( dom C )) ) by TREES_2:def 11;
then A11: <* 1 *> in ( dom ( B '&' C ) ) by A10,TREES_1:def 9;
A12:now
assume <* 1 *> in ( dom E );
then (<* 1 *> = ( {} ) or <* 1 *> = <* ( 0 ) *>) by TARSKI:def 2,TREES_1:51;
hence contradiction by TREES_1:3;
end;
assume (not thesis);
then (ex s st (s in ( dom A ) & <* 1 *> = ( <* ( 0 ) *> ^ s ))) by A3,A4,A11,A12,TREES_1:def 9;
then <* ( 0 ) *> is_a_prefix_of <* 1 *> by TREES_1:1;
hence contradiction by TREES_1:3;
end;
