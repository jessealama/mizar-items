environ
vocabularies NUMBERS,SUBSET_1,TREES_2,ZFMISC_1,FINSEQ_1,XBOOLE_0,TREES_1,FUNCT_1,RELAT_1,ORDINAL4,NAT_1,CARD_1,XXREAL_0,PARTFUN1,TARSKI,ORDINAL1,ARYTM_3,FINSET_1,FUNCOP_1,MARGREL1,MCART_1,QC_LANG1,XBOOLEAN,VALUED_1,ZF_LANG,MODAL_1,TREES_3;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,WELLORD2,NAT_1,DOMAIN_1,MCART_1,RELAT_1,FUNCT_1,RELSET_1,FINSEQ_1,FUNCOP_1,FINSEQ_2,FUNCT_2,FINSET_1,PARTFUN1,TREES_1,TREES_2,XXREAL_0,TREES_3,CKB2,CKB3,CKB30,CKB32,CKB33,CKB35,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB55,CKB61,CKB67,CKB68,CKB69,CKB70;
definitions TARSKI,XBOOLE_0,FUNCT_1,CKB2,CKB3,CKB30,CKB33,CKB38,CKB42,CKB43,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB55,CKB61,CKB67,CKB68,CKB69,CKB70;
theorems TARSKI,FUNCT_1,NAT_1,ENUMSET1,TREES_1,TREES_2,FUNCOP_1,MCART_1,DOMAIN_1,PARTFUN1,FINSEQ_1,FINSET_1,CARD_1,WELLORD2,CARD_2,ZFMISC_1,FINSEQ_2,RELAT_1,FUNCT_2,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,TREES_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB33,CKB36,CKB38,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84;
schemes TREES_2,CLASSES1,NAT_1,FUNCT_2,XBOOLE_0,CKB75;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,TREES_1,TREES_2,CARD_1,RELSET_1,TREES_3,CKB31,CKB34,CKB40,CKB71,CKB72,CKB73,CKB74;
constructors PARTFUN1,WELLORD2,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,TREES_2,RELSET_1,FUNCOP_1,TREES_3,CKB2,CKB3,CKB30,CKB33,CKB37,CKB38,CKB41,CKB42,CKB43,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB55,CKB61,CKB67,CKB68,CKB69,CKB70;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve n for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve p for MP-variable;
reserve q for MP-variable;
reserve A for MP-wff;
reserve A1 for MP-wff;
reserve B for MP-wff;
reserve B1 for MP-wff;
reserve C for MP-wff;
reserve C1 for MP-wff;
scheme MPFuncEx { D() -> non empty set,d() -> (Element of D()),F((Element of ( MP-variables ))) -> (Element of D()),N,H((Element of D())) -> (Element of D()),C((Element of D()),(Element of D())) -> (Element of D()) } : (ex f being (Function of ( MP-WFF ),D()) st ((((( f . ( VERUM ) ) = d() & (for p being MP-variable holds ( f . ( @ p ) ) = F(p))) & (for A being (Element of ( MP-WFF )) holds ( f . ( 'not' A ) ) = N(( f . A )))) & (for A being (Element of ( MP-WFF )) holds ( f . ( (#) A ) ) = H(( f . A )))) & (for A,B being (Element of ( MP-WFF )) holds ( f . ( A '&' B ) ) = C(( f . A ),( f . B )))))
proof
defpred Pfn[ (Function of ( MP-WFF ),D()),(Element of ( NAT )) ]
 means
(for A holds (( card ( dom A ) ) <= $2 implies (((((A = ( VERUM ) implies ( $1 . A ) = d()) & (for p holds (A = ( @ p ) implies ( $1 . A ) = F(p)))) & (for B holds (A = ( 'not' B ) implies ( $1 . A ) = N(( $1 . B ))))) & (for B holds (A = ( (#) B ) implies ( $1 . A ) = H(( $1 . B ))))) & (for B holds (for C holds (A = ( B '&' C ) implies ( $1 . A ) = C(( $1 . B ),( $1 . C ))))))));
defpred Pfgp[ (Element of D()),(Function of ( MP-WFF ),D()),(Element of ( MP-WFF )) ]
 means
((((($3 = ( VERUM ) implies $1 = d()) & (for p holds ($3 = ( @ p ) implies $1 = F(p)))) & (for A holds ($3 = ( 'not' A ) implies $1 = N(( $2 . A ))))) & (for A holds ($3 = ( (#) A ) implies $1 = H(( $2 . A ))))) & (for A holds (for B holds ($3 = ( A '&' B ) implies $1 = C(( $2 . A ),( $2 . B ))))));
defpred P[ (Element of ( NAT )) ]
 means
(ex F being (Function of ( MP-WFF ),D()) st Pfn[ F,$1 ]);
defpred Qfn[ set,set ]
 means
(ex A being (Element of ( MP-WFF )) st (A = $1 & (for g being (Function of ( MP-WFF ),D()) holds (Pfn[ g,( card ( dom A ) ) ] implies $2 = ( g . A )))));
A1: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
given F being (Function of ( MP-WFF ),D()) such that
A2: Pfn[ F,k ];

defpred Q[ (Element of ( MP-WFF )),(Element of D()) ]
 means
((( card ( dom $1 ) ) <> ( k + 1 ) implies $2 = ( F . $1 )) & (( card ( dom $1 ) ) = ( k + 1 ) implies Pfgp[ $2,F,$1 ]));
A3: (for x being (Element of ( MP-WFF )) holds (ex y being (Element of D()) st Q[ x,y ]))
proof
let A being (Element of ( MP-WFF ));
now
per cases  by CKB77:1;
case ( card ( dom A ) ) <> ( k + 1 );
take y = ( F . A );
end;
case A4: (( card ( dom A ) ) = ( k + 1 ) & A = ( VERUM ));
take y = d();
thus Pfgp[ y,F,A ] by A4,CKB81:1,CKB83:1;
end;
case (( card ( dom A ) ) = ( k + 1 ) & (ex p st A = ( @ p )));
then consider p such that A5: A = ( @ p );
take y = F(p);
thus Pfgp[ y,F,A ] by A5,CKB83:1,CKB56:1,CKB78:1;
end;
case (( card ( dom A ) ) = ( k + 1 ) & (ex B st A = ( 'not' B )));
then consider B such that A6: A = ( 'not' B );
take y = N(( F . B ));
thus Pfgp[ y,F,A ] by A6,CKB81:1,CKB58:1,CKB78:1,CKB79:1;
end;
case (( card ( dom A ) ) = ( k + 1 ) & (ex B st A = ( (#) B )));
then consider B such that A7: A = ( (#) B );
take y = H(( F . B ));
thus Pfgp[ y,F,A ] by A7,CKB81:1,CKB59:1,CKB78:1,CKB79:1,CKB80:1;
end;
case (( card ( dom A ) ) = ( k + 1 ) & (ex B st (ex C st A = ( B '&' C ))));
then consider B,C such that A8: A = ( B '&' C );
take y = C(( F . B ),( F . C ));
now
let B1;
let C1;
assume A9: A = ( B1 '&' C1 );
then B = B1 by A8,CKB60:1;
hence y = C(( F . B1 ),( F . C1 )) by A8,A9,CKB60:1;
end;
hence Pfgp[ y,F,A ] by A8,CKB81:1,CKB78:1,CKB79:1,CKB80:1;
end;
end;
hence thesis;
end;
consider G being (Function of ( MP-WFF ),D()) such that A10: (for p being (Element of ( MP-WFF )) holds Q[ p,( G . p ) ]) from FUNCT_2:sch 3(A3);
take H = G;
thus Pfn[ H,( k + 1 ) ]
proof
let A being (Element of ( MP-WFF ));
set p = ( card ( dom A ) );
assume A11: p <= ( k + 1 );
thus (A = ( VERUM ) implies ( H . A ) = d())
proof
per cases ;
suppose p <> ( k + 1 );

then (p <= k & ( H . A ) = ( F . A )) by A10,A11,NAT_1:8;
hence thesis by A2;
end;
suppose p = ( k + 1 );

hence thesis by A10;
end;
end;

thus (for p holds (A = ( @ p ) implies ( H . A ) = F(p)))
proof
let q;
assume that
A12: A = ( @ q );
per cases ;
suppose p <> ( k + 1 );

then (p <= k & ( H . A ) = ( F . A )) by A10,A11,NAT_1:8;
hence thesis by A2,A12;
end;
suppose p = ( k + 1 );

hence thesis by A10,A12;
end;
end;

thus (for B holds (A = ( 'not' B ) implies ( H . A ) = N(( H . B ))))
proof
let B;
assume A13: A = ( 'not' B );
then ( card ( dom B ) ) <> ( k + 1 ) by A11,CKB64:1;
then A14: ( H . B ) = ( F . B ) by A10;
per cases ;
suppose p <> ( k + 1 );

then (p <= k & ( H . A ) = ( F . A )) by A10,A11,NAT_1:8;
hence thesis by A2,A13,A14;
end;
suppose p = ( k + 1 );

hence thesis by A10,A13,A14;
end;
end;

thus (for B holds (A = ( (#) B ) implies ( H . A ) = H(( H . B ))))
proof
let B;
assume A15: A = ( (#) B );
then ( card ( dom B ) ) <> ( k + 1 ) by A11,CKB65:1;
then A16: ( H . B ) = ( F . B ) by A10;
per cases ;
suppose p <> ( k + 1 );

then (p <= k & ( H . A ) = ( F . A )) by A10,A11,NAT_1:8;
hence thesis by A2,A15,A16;
end;
suppose p = ( k + 1 );

hence thesis by A10,A15,A16;
end;
end;

thus (for B holds (for C holds (A = ( B '&' C ) implies ( H . A ) = C(( H . B ),( H . C )))))
proof
let B;
let C;
assume A17: A = ( B '&' C );
then ( card ( dom B ) ) <> ( k + 1 ) by A11,CKB66:1;
then A18: ( H . B ) = ( F . B ) by A10;
( card ( dom C ) ) <> ( k + 1 ) by A11,A17,CKB66:1;
then A19: ( H . C ) = ( F . C ) by A10;
per cases ;
suppose p <> ( k + 1 );

then (p <= k & ( H . A ) = ( F . A )) by A10,A11,NAT_1:8;
hence thesis by A2,A17,A18,A19;
end;
suppose p = ( k + 1 );

hence thesis by A10,A17,A18,A19;
end;
end;

end;

end;
A20: P[ ( 0 ) ]
proof
set F = the (Function of ( MP-WFF ),D());
take F;
let A;
assume ( card ( dom A ) ) <= ( 0 );
hence thesis by NAT_1:2;
end;
A21: (for n holds P[ n ]) from NAT_1:sch 1(A20,A1);
A22: (for x holds (x in ( MP-WFF ) implies (ex y st Qfn[ x,y ])))
proof
let x;
assume x in ( MP-WFF );
then reconsider x9 = x as (Element of ( MP-WFF ));
consider F being (Function of ( MP-WFF ),D()) such that A23: Pfn[ F,( card ( dom x9 ) ) ] by A21;
take ( F . x );
take x9;
thus x = x9;
let G being (Function of ( MP-WFF ),D());
defpred Prop[ (Element of ( MP-WFF )) ]
 means
(( card ( dom $1 ) ) <= ( card ( dom x9 ) ) implies ( F . $1 ) = ( G . $1 ));
assume A24: Pfn[ G,( card ( dom x9 ) ) ];
A25: (for p holds Prop[ ( @ p ) ])
proof
let p;
assume A26: ( card ( dom ( @ p ) ) ) <= ( card ( dom x9 ) );
hence ( F . ( @ p ) ) = F(p) by A23
.= ( G . ( @ p ) ) by A24,A26;
end;
A27: (for A,B being (Element of ( MP-WFF )) holds ((Prop[ A ] & Prop[ B ]) implies Prop[ ( A '&' B ) ]))
proof
let A;
let B;
assume that
A28: (Prop[ A ] & Prop[ B ])
and
A29: ( card ( dom ( A '&' B ) ) ) <= ( card ( dom x9 ) );
(( card ( dom A ) ) < ( card ( dom ( A '&' B ) ) ) & ( card ( dom B ) ) < ( card ( dom ( A '&' B ) ) )) by CKB66:1;
hence ( F . ( A '&' B ) ) = C(( G . A ),( G . B )) by A23,A28,A29,XXREAL_0:2
.= ( G . ( A '&' B ) ) by A24,A29;
end;
A30: (for A being (Element of ( MP-WFF )) holds (Prop[ A ] implies Prop[ ( (#) A ) ]))
proof
let A;
assume that
A31: Prop[ A ];
assume A32: ( card ( dom ( (#) A ) ) ) <= ( card ( dom x9 ) );
( card ( dom A ) ) < ( card ( dom ( (#) A ) ) ) by CKB65:1;
hence ( F . ( (#) A ) ) = H(( G . A )) by A23,A31,A32,XXREAL_0:2
.= ( G . ( (#) A ) ) by A24,A32;
end;
A33: (for A being (Element of ( MP-WFF )) holds (Prop[ A ] implies Prop[ ( 'not' A ) ]))
proof
let A;
assume that
A34: Prop[ A ];
assume A35: ( card ( dom ( 'not' A ) ) ) <= ( card ( dom x9 ) );
( card ( dom A ) ) < ( card ( dom ( 'not' A ) ) ) by CKB64:1;
hence ( F . ( 'not' A ) ) = N(( G . A )) by A23,A34,A35,XXREAL_0:2
.= ( G . ( 'not' A ) ) by A24,A35;
end;
A36: Prop[ ( VERUM ) ]
proof
assume A37: ( card ( dom ( VERUM ) ) ) <= ( card ( dom x9 ) );
hence ( F . ( VERUM ) ) = d() by A23
.= ( G . ( VERUM ) ) by A24,A37;
end;
(for p being (Element of ( MP-WFF )) holds Prop[ p ]) from CKB75:sch 1(A36,A25,A33,A30,A27);
hence thesis;
end;
consider F being Function such that A38: ( dom F ) = ( MP-WFF ) and A39: (for x holds (x in ( MP-WFF ) implies Qfn[ x,( F . x ) ])) from CLASSES1:sch 1(A22);
( rng F ) c= D()
proof
let y;
assume y in ( rng F );
then consider x being set such that A40: (x in ( MP-WFF ) & y = ( F . x )) by A38,FUNCT_1:def 3;
consider p being (Element of ( MP-WFF )) such that p = x and A41: (for g being (Function of ( MP-WFF ),D()) holds (Pfn[ g,( card ( dom p ) ) ] implies y = ( g . p ))) by A39,A40;
consider G being (Function of ( MP-WFF ),D()) such that A42: Pfn[ G,( card ( dom p ) ) ] by A21;
y = ( G . p ) by A41,A42;
hence thesis;
end;
then reconsider F as (Function of ( MP-WFF ),D()) by A38,FUNCT_2:def 1,RELSET_1:4;
consider A such that A43: A = ( VERUM ) and A44: (for g being (Function of ( MP-WFF ),D()) holds (Pfn[ g,( card ( dom A ) ) ] implies ( F . ( VERUM ) ) = ( g . A ))) by A39;
take F;
consider G being (Function of ( MP-WFF ),D()) such that A45: Pfn[ G,( card ( dom A ) ) ] by A21;
( F . ( VERUM ) ) = ( G . ( VERUM ) ) by A43,A44,A45;
hence ( F . ( VERUM ) ) = d() by A43,A45;
thus (for p being MP-variable holds ( F . ( @ p ) ) = F(p))
proof
let p being MP-variable;
consider A such that A46: A = ( @ p ) and A47: (for g being (Function of ( MP-WFF ),D()) holds (Pfn[ g,( card ( dom A ) ) ] implies ( F . ( @ p ) ) = ( g . A ))) by A39;
consider G being (Function of ( MP-WFF ),D()) such that A48: Pfn[ G,( card ( dom A ) ) ] by A21;
( F . ( @ p ) ) = ( G . ( @ p ) ) by A46,A47,A48;
hence thesis by A46,A48;
end;

thus (for A being (Element of ( MP-WFF )) holds ( F . ( 'not' A ) ) = N(( F . A )))
proof
let A being (Element of ( MP-WFF ));
consider A1 such that A49: A1 = ( 'not' A ) and A50: (for g being (Function of ( MP-WFF ),D()) holds (Pfn[ g,( card ( dom A1 ) ) ] implies ( F . ( 'not' A ) ) = ( g . A1 ))) by A39;
consider G being (Function of ( MP-WFF ),D()) such that A51: Pfn[ G,( card ( dom A1 ) ) ] by A21;
A52: (for k holds (k < ( card ( dom ( 'not' A ) ) ) implies Pfn[ G,k ]))
proof
let k;
assume A53: k < ( card ( dom ( 'not' A ) ) );
let a being (Element of ( MP-WFF ));
assume ( card ( dom a ) ) <= k;
then ( card ( dom a ) ) <= ( card ( dom ( 'not' A ) ) ) by A53,XXREAL_0:2;
hence thesis by A49,A51;
end;
A54: (ex B st (B = A & (for g being (Function of ( MP-WFF ),D()) holds (Pfn[ g,( card ( dom B ) ) ] implies ( F . A ) = ( g . B ))))) by A39;
set k = ( card ( dom A ) );
k < ( card ( dom ( 'not' A ) ) ) by CKB64:1;
then Pfn[ G,k ] by A52;
then A55: ( F . A ) = ( G . A ) by A54;
( F . ( 'not' A ) ) = ( G . ( 'not' A ) ) by A49,A50,A51;
hence thesis by A49,A51,A55;
end;

thus (for A being (Element of ( MP-WFF )) holds ( F . ( (#) A ) ) = H(( F . A )))
proof
let A being (Element of ( MP-WFF ));
consider A1 such that A56: A1 = ( (#) A ) and A57: (for g being (Function of ( MP-WFF ),D()) holds (Pfn[ g,( card ( dom A1 ) ) ] implies ( F . ( (#) A ) ) = ( g . A1 ))) by A39;
consider G being (Function of ( MP-WFF ),D()) such that A58: Pfn[ G,( card ( dom A1 ) ) ] by A21;
A59: (for k holds (k < ( card ( dom ( (#) A ) ) ) implies Pfn[ G,k ]))
proof
let k;
assume A60: k < ( card ( dom ( (#) A ) ) );
let a being (Element of ( MP-WFF ));
assume ( card ( dom a ) ) <= k;
then ( card ( dom a ) ) <= ( card ( dom ( (#) A ) ) ) by A60,XXREAL_0:2;
hence thesis by A56,A58;
end;
A61: (ex B st (B = A & (for g being (Function of ( MP-WFF ),D()) holds (Pfn[ g,( card ( dom B ) ) ] implies ( F . A ) = ( g . B ))))) by A39;
set k = ( card ( dom A ) );
k < ( card ( dom ( (#) A ) ) ) by CKB65:1;
then Pfn[ G,k ] by A59;
then A62: ( F . A ) = ( G . A ) by A61;
( F . ( (#) A ) ) = ( G . ( (#) A ) ) by A56,A57,A58;
hence thesis by A56,A58,A62;
end;

thus (for A,B being (Element of ( MP-WFF )) holds ( F . ( A '&' B ) ) = C(( F . A ),( F . B )))
proof
let A being (Element of ( MP-WFF )),B being (Element of ( MP-WFF ));
set k1 = ( card ( dom A ) );
set k2 = ( card ( dom B ) );
consider A1 such that A63: A1 = ( A '&' B ) and A64: (for g being (Function of ( MP-WFF ),D()) holds (Pfn[ g,( card ( dom A1 ) ) ] implies ( F . ( A '&' B ) ) = ( g . A1 ))) by A39;
consider G being (Function of ( MP-WFF ),D()) such that A65: Pfn[ G,( card ( dom A1 ) ) ] by A21;
A66: (for k holds (k < ( card ( dom ( A '&' B ) ) ) implies Pfn[ G,k ]))
proof
let k;
assume A67: k < ( card ( dom ( A '&' B ) ) );
let a being (Element of ( MP-WFF ));
assume ( card ( dom a ) ) <= k;
then ( card ( dom a ) ) <= ( card ( dom ( A '&' B ) ) ) by A67,XXREAL_0:2;
hence thesis by A63,A65;
end;
A68: (ex B1 st (B1 = A & (for g being (Function of ( MP-WFF ),D()) holds (Pfn[ g,( card ( dom B1 ) ) ] implies ( F . A ) = ( g . B1 ))))) by A39;
k1 < ( card ( dom ( A '&' B ) ) ) by CKB66:1;
then Pfn[ G,k1 ] by A66;
then A69: ( F . A ) = ( G . A ) by A68;
A70: (ex C st (C = B & (for g being (Function of ( MP-WFF ),D()) holds (Pfn[ g,( card ( dom C ) ) ] implies ( F . B ) = ( g . C ))))) by A39;
k2 < ( card ( dom ( A '&' B ) ) ) by CKB66:1;
then Pfn[ G,k2 ] by A66;
then A71: ( F . B ) = ( G . B ) by A70;
( F . ( A '&' B ) ) = ( G . ( A '&' B ) ) by A63,A64,A65;
hence thesis by A63,A65,A69,A71;
end;

end;
