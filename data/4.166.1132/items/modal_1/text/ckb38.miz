environ
vocabularies NUMBERS,SUBSET_1,TREES_2,ZFMISC_1,FINSEQ_1,XBOOLE_0,TREES_1,FUNCT_1,RELAT_1,ORDINAL4,NAT_1,CARD_1,XXREAL_0,PARTFUN1,TARSKI,ORDINAL1,ARYTM_3,FINSET_1,FUNCOP_1,MARGREL1,MCART_1,QC_LANG1,XBOOLEAN,VALUED_1,ZF_LANG,MODAL_1,TREES_3;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,WELLORD2,NAT_1,DOMAIN_1,MCART_1,RELAT_1,FUNCT_1,RELSET_1,FINSEQ_1,FUNCOP_1,FINSEQ_2,FUNCT_2,FINSET_1,PARTFUN1,TREES_1,TREES_2,XXREAL_0,TREES_3,CKB2,CKB3,CKB30,CKB32,CKB33,CKB35,CKB37;
definitions TARSKI,XBOOLE_0,FUNCT_1,CKB2,CKB3,CKB30,CKB33;
theorems TARSKI,FUNCT_1,NAT_1,ENUMSET1,TREES_1,TREES_2,FUNCOP_1,MCART_1,DOMAIN_1,PARTFUN1,FINSEQ_1,FINSET_1,CARD_1,WELLORD2,CARD_2,ZFMISC_1,FINSEQ_2,RELAT_1,FUNCT_2,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,TREES_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB33,CKB36;
schemes TREES_2,CLASSES1,NAT_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,TREES_1,TREES_2,CARD_1,RELSET_1,TREES_3,CKB31,CKB34;
constructors PARTFUN1,WELLORD2,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,TREES_2,RELSET_1,FUNCOP_1,TREES_3,CKB2,CKB3,CKB30,CKB33,CKB37;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve n for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
definition
func MP-WFF -> (DTree-set of [: ( NAT ),( NAT ) :])
means
:Def6: ((for x being (DecoratedTree of [: ( NAT ),( NAT ) :]) holds (x in it implies x is  finite)) & (for x being  finite (DecoratedTree of [: ( NAT ),( NAT ) :]) holds (x in it iff (for v being (Element of ( dom x )) holds (((( branchdeg v ) <= 2 & (( branchdeg v ) = ( 0 ) implies (( x . v ) = [ ( 0 ),( 0 ) ] or (ex k st ( x . v ) = [ 3,k ])))) & (( branchdeg v ) = 1 implies (( x . v ) = [ 1,( 0 ) ] or ( x . v ) = [ 1,1 ]))) & (( branchdeg v ) = 2 implies ( x . v ) = [ 2,( 0 ) ]))))));
existence
proof
deffunc F(set) = [ ( 0 ),( 0 ) ];
set t = ( elementary_tree ( 0 ) );
set A = [: ( NAT ),( NAT ) :];
defpred P[ set ]
 means
($1 is  finite  finite (DecoratedTree of A) & (for y being  finite (DecoratedTree of A) holds (y = $1 implies (( dom y ) is  finite & (for v being (Element of ( dom y )) holds (((( branchdeg v ) <= 2 & (( branchdeg v ) = ( 0 ) implies (( y . v ) = [ ( 0 ),( 0 ) ] or (ex k st ( y . v ) = [ 3,k ])))) & (( branchdeg v ) = 1 implies (( y . v ) = [ 1,( 0 ) ] or ( y . v ) = [ 1,1 ]))) & (( branchdeg v ) = 2 implies ( y . v ) = [ 2,( 0 ) ])))))));
consider Y being set such that A1: (for x holds (x in Y iff (x in ( PFuncs (( ( NAT ) * ),A) ) & P[ x ]))) from XBOOLE_0:sch 1;
A2: (for x being  finite (DecoratedTree of A) holds (x in Y iff (( dom x ) is  finite & (for v being (Element of ( dom x )) holds (((( branchdeg v ) <= 2 & (( branchdeg v ) = ( 0 ) implies (( x . v ) = [ ( 0 ),( 0 ) ] or (ex k st ( x . v ) = [ 3,k ])))) & (( branchdeg v ) = 1 implies (( x . v ) = [ 1,( 0 ) ] or ( x . v ) = [ 1,1 ]))) & (( branchdeg v ) = 2 implies ( x . v ) = [ 2,( 0 ) ]))))))
proof
let x being  finite (DecoratedTree of A);
thus (x in Y implies (( dom x ) is  finite & (for v being (Element of ( dom x )) holds (((( branchdeg v ) <= 2 & (( branchdeg v ) = ( 0 ) implies (( x . v ) = [ ( 0 ),( 0 ) ] or (ex k st ( x . v ) = [ 3,k ])))) & (( branchdeg v ) = 1 implies (( x . v ) = [ 1,( 0 ) ] or ( x . v ) = [ 1,1 ]))) & (( branchdeg v ) = 2 implies ( x . v ) = [ 2,( 0 ) ]))))) by A1;
assume that
( dom x ) is  finite
and
A3: (for v being (Element of ( dom x )) holds (((( branchdeg v ) <= 2 & (( branchdeg v ) = ( 0 ) implies (( x . v ) = [ ( 0 ),( 0 ) ] or (ex k st ( x . v ) = [ 3,k ])))) & (( branchdeg v ) = 1 implies (( x . v ) = [ 1,( 0 ) ] or ( x . v ) = [ 1,1 ]))) & (( branchdeg v ) = 2 implies ( x . v ) = [ 2,( 0 ) ])));
A4: x in ( PFuncs (( ( NAT ) * ),A) ) by CKB13:1;
(for y being  finite (DecoratedTree of A) holds (y = x implies (( dom y ) is  finite & (for v being (Element of ( dom y )) holds (((( branchdeg v ) <= 2 & (( branchdeg v ) = ( 0 ) implies (( y . v ) = [ ( 0 ),( 0 ) ] or (ex k st ( y . v ) = [ 3,k ])))) & (( branchdeg v ) = 1 implies (( y . v ) = [ 1,( 0 ) ] or ( y . v ) = [ 1,1 ]))) & (( branchdeg v ) = 2 implies ( y . v ) = [ 2,( 0 ) ])))))) by A3;
hence thesis by A1,A4;
end;
consider T being DecoratedTree such that A5: (( dom T ) = t & (for p being (FinSequence of ( NAT )) holds (p in t implies ( T . p ) = F(p)))) from TREES_2:sch 7;
( rng T ) c= A
proof
let x;
assume x in ( rng T );
then consider z being set such that A6: z in ( dom T ) and A7: x = ( T . z ) by FUNCT_1:def 3;
z = ( <*> ( NAT ) ) by A5,A6,TARSKI:def 1,TREES_1:29;
then reconsider z as (FinSequence of ( NAT ));
( T . z ) = [ ( 0 ),( 0 ) ] by A5,A6;
hence thesis by A7;
end;
then reconsider T as  finite (DecoratedTree of A) by A5,CKB26:1,RELAT_1:def 19;
A8: (for y being  finite (DecoratedTree of A) holds (y = T implies (( dom y ) is  finite & (for v being (Element of ( dom y )) holds (((( branchdeg v ) <= 2 & (( branchdeg v ) = ( 0 ) implies (( y . v ) = [ ( 0 ),( 0 ) ] or (ex k st ( y . v ) = [ 3,k ])))) & (( branchdeg v ) = 1 implies (( y . v ) = [ 1,( 0 ) ] or ( y . v ) = [ 1,1 ]))) & (( branchdeg v ) = 2 implies ( y . v ) = [ 2,( 0 ) ]))))))
proof
let y being  finite (DecoratedTree of A);
assume A9: y = T;
thus ( dom y ) is  finite;
let v being (Element of ( dom y ));
A10: ( succ v ) = ( {} )
proof
set x = the (Element of ( succ v ));
assume (not thesis);
then A11: x in ( succ v );
( succ v ) = { ( v ^ <* n *> ): ( v ^ <* n *> ) in ( dom y ) } by TREES_2:def 5;
then (ex n st (x = ( v ^ <* n *> ) & ( v ^ <* n *> ) in ( dom y ))) by A11;
hence contradiction by A5,A9,TARSKI:def 1,TREES_1:29;
end;
hence ( branchdeg v ) <= 2 by CARD_1:27,TREES_2:def 12;
thus thesis by A5,A9,A10,CARD_1:27,TREES_2:def 12;
end;
T in ( PFuncs (( ( NAT ) * ),A) ) by CKB13:1;
then reconsider Y as non empty set by A1,A8;
(for x holds (x in Y implies x is (DecoratedTree of A))) by A1;
then reconsider Y as (DTree-set of A) by TREES_3:def 6;
take Y;
thus thesis by A1,A2;
end;
uniqueness
proof
let D1 being (DTree-set of [: ( NAT ),( NAT ) :]),D2 being (DTree-set of [: ( NAT ),( NAT ) :]);
assume that
A12: (for x being (DecoratedTree of [: ( NAT ),( NAT ) :]) holds (x in D1 implies x is  finite))
and
A13: (for x being  finite (DecoratedTree of [: ( NAT ),( NAT ) :]) holds (x in D1 iff (for v being (Element of ( dom x )) holds (((( branchdeg v ) <= 2 & (( branchdeg v ) = ( 0 ) implies (( x . v ) = [ ( 0 ),( 0 ) ] or (ex k st ( x . v ) = [ 3,k ])))) & (( branchdeg v ) = 1 implies (( x . v ) = [ 1,( 0 ) ] or ( x . v ) = [ 1,1 ]))) & (( branchdeg v ) = 2 implies ( x . v ) = [ 2,( 0 ) ])))))
and
A14: (for x being (DecoratedTree of [: ( NAT ),( NAT ) :]) holds (x in D2 implies x is  finite))
and
A15: (for x being  finite (DecoratedTree of [: ( NAT ),( NAT ) :]) holds (x in D2 iff (for v being (Element of ( dom x )) holds (((( branchdeg v ) <= 2 & (( branchdeg v ) = ( 0 ) implies (( x . v ) = [ ( 0 ),( 0 ) ] or (ex k st ( x . v ) = [ 3,k ])))) & (( branchdeg v ) = 1 implies (( x . v ) = [ 1,( 0 ) ] or ( x . v ) = [ 1,1 ]))) & (( branchdeg v ) = 2 implies ( x . v ) = [ 2,( 0 ) ])))));
thus D1 c= D2
proof
let x;
assume A16: x in D1;
reconsider y = x as  finite (DecoratedTree of [: ( NAT ),( NAT ) :]) by A12,A16;
(for v being (Element of ( dom y )) holds (((( branchdeg v ) <= 2 & (( branchdeg v ) = ( 0 ) implies (( y . v ) = [ ( 0 ),( 0 ) ] or (ex k st ( y . v ) = [ 3,k ])))) & (( branchdeg v ) = 1 implies (( y . v ) = [ 1,( 0 ) ] or ( y . v ) = [ 1,1 ]))) & (( branchdeg v ) = 2 implies ( y . v ) = [ 2,( 0 ) ]))) by A13,A16;
hence thesis by A15;
end;

let x;
assume A17: x in D2;
reconsider y = x as  finite (DecoratedTree of [: ( NAT ),( NAT ) :]) by A14,A17;
(for v being (Element of ( dom y )) holds (((( branchdeg v ) <= 2 & (( branchdeg v ) = ( 0 ) implies (( y . v ) = [ ( 0 ),( 0 ) ] or (ex k st ( y . v ) = [ 3,k ])))) & (( branchdeg v ) = 1 implies (( y . v ) = [ 1,( 0 ) ] or ( y . v ) = [ 1,1 ]))) & (( branchdeg v ) = 2 implies ( y . v ) = [ 2,( 0 ) ]))) by A15,A17;
hence thesis by A13;
end;
end;
