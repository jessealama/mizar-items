environ
vocabularies NUMBERS,SUBSET_1,TREES_2,ZFMISC_1,FINSEQ_1,XBOOLE_0,TREES_1,FUNCT_1,RELAT_1,ORDINAL4,NAT_1,CARD_1,XXREAL_0,PARTFUN1,TARSKI,ORDINAL1,ARYTM_3,FINSET_1,FUNCOP_1,MARGREL1,MCART_1,QC_LANG1,XBOOLEAN,VALUED_1,ZF_LANG,MODAL_1,TREES_3;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,WELLORD2,NAT_1,DOMAIN_1,MCART_1,RELAT_1,FUNCT_1,RELSET_1,FINSEQ_1,FUNCOP_1,FINSEQ_2,FUNCT_2,FINSET_1,PARTFUN1,TREES_1,TREES_2,XXREAL_0,TREES_3,CKB2,CKB3;
definitions TARSKI,XBOOLE_0,FUNCT_1,CKB2,CKB3;
theorems TARSKI,FUNCT_1,NAT_1,ENUMSET1,TREES_1,TREES_2,FUNCOP_1,MCART_1,DOMAIN_1,PARTFUN1,FINSEQ_1,FINSET_1,CARD_1,WELLORD2,CARD_2,ZFMISC_1,FINSEQ_2,RELAT_1,FUNCT_2,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,TREES_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22;
schemes TREES_2,CLASSES1,NAT_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,TREES_1,TREES_2,CARD_1,RELSET_1,TREES_3;
constructors PARTFUN1,WELLORD2,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,TREES_2,RELSET_1,FUNCOP_1,TREES_3,CKB2,CKB3;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve x1 for set;
reserve x2 for set;
reserve w for (FinSequence of ( NAT ));
reserve s for (FinSequence of ( NAT ));
reserve s9 for (Element of ( ( NAT ) * ));
reserve w9 for (Element of ( ( NAT ) * ));
reserve v9 for (Element of ( ( NAT ) * ));
theorem
Th25: (for Z being Tree holds (for o being (Element of Z) holds (o <> ( Root Z ) implies (( Z | o ),{ ( o ^ s9 ): ( o ^ s9 ) in Z } are_equipotent  & (not ( Root Z ) in { ( o ^ w9 ): ( o ^ w9 ) in Z })))))
proof
let Z being Tree;
let o being (Element of Z);
assume that
A1: o <> ( Root Z );
set A = { ( o ^ s9 ): ( o ^ s9 ) in Z };
thus ( Z | o ),A are_equipotent 
proof
defpred P[ set,set ]
 means
(for s holds ($1 = s implies $2 = ( o ^ s )));
A2: (for x holds (x in ( Z | o ) implies (ex y st P[ x,y ])))
proof
let x;
assume x in ( Z | o );
then reconsider s = x as (FinSequence of ( NAT )) by TREES_1:19;
take ( o ^ s );
let w;
assume x = w;
hence thesis;
end;
(ex f being Function st (( dom f ) = ( Z | o ) & (for x holds (x in ( Z | o ) implies P[ x,( f . x ) ])))) from CLASSES1:sch 1(A2);
then consider f being Function such that A3: ( dom f ) = ( Z | o ) and A4: (for x holds (x in ( Z | o ) implies (for s holds (x = s implies ( f . x ) = ( o ^ s )))));
now
let x;
thus (x in ( rng f ) implies x in A)
proof
assume x in ( rng f );
then consider x1 such that A5: x1 in ( dom f ) and A6: x = ( f . x1 ) by FUNCT_1:def 3;
reconsider x1 as (FinSequence of ( NAT )) by A3,A5,TREES_1:19;
reconsider x1 as (Element of ( ( NAT ) * )) by FINSEQ_1:def 11;
(( o ^ x1 ) in Z & x = ( o ^ x1 )) by A3,A4,A5,A6,TREES_1:def 6;
hence thesis;
end;

assume x in A;
then consider v9 such that A7: x = ( o ^ v9 ) and A8: ( o ^ v9 ) in Z;
v9 in ( Z | o ) by A8,TREES_1:def 6;
then A9: x = ( f . v9 ) by A4,A7;
v9 in ( dom f ) by A3,A8,TREES_1:def 6;
hence x in ( rng f ) by A9,FUNCT_1:def 3;
end;
then A10: ( rng f ) = A by TARSKI:1;
now
let x1;
let x2;
assume that
A11: x1 in ( dom f )
and
A12: x2 in ( dom f )
and
A13: ( f . x1 ) = ( f . x2 );
reconsider s1 = x1,s2 = x2 as (FinSequence of ( NAT )) by A3,A11,A12,TREES_1:19;
( o ^ s1 ) = ( f . x2 ) by A3,A4,A11,A13
.= ( o ^ s2 ) by A3,A4,A12;
hence x1 = x2 by FINSEQ_1:33;
end;
then f is  one-to-one by FUNCT_1:def 4;
hence thesis by A3,A10,WELLORD2:def 4;
end;

assume (not thesis);
then (ex v9 st (( Root Z ) = ( o ^ v9 ) & ( o ^ v9 ) in Z));
hence contradiction by A1;
end;
