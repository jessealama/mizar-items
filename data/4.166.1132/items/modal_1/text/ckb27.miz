environ
vocabularies NUMBERS,SUBSET_1,TREES_2,ZFMISC_1,FINSEQ_1,XBOOLE_0,TREES_1,FUNCT_1,RELAT_1,ORDINAL4,NAT_1,CARD_1,XXREAL_0,PARTFUN1,TARSKI,ORDINAL1,ARYTM_3,FINSET_1,FUNCOP_1,MARGREL1,MCART_1,QC_LANG1,XBOOLEAN,VALUED_1,ZF_LANG,MODAL_1,TREES_3;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,WELLORD2,NAT_1,DOMAIN_1,MCART_1,RELAT_1,FUNCT_1,RELSET_1,FINSEQ_1,FUNCOP_1,FINSEQ_2,FUNCT_2,FINSET_1,PARTFUN1,TREES_1,TREES_2,XXREAL_0,TREES_3,CKB2,CKB3;
definitions TARSKI,XBOOLE_0,FUNCT_1,CKB2,CKB3;
theorems TARSKI,FUNCT_1,NAT_1,ENUMSET1,TREES_1,TREES_2,FUNCOP_1,MCART_1,DOMAIN_1,PARTFUN1,FINSEQ_1,FINSET_1,CARD_1,WELLORD2,CARD_2,ZFMISC_1,FINSEQ_2,RELAT_1,FUNCT_2,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,TREES_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
schemes TREES_2,CLASSES1,NAT_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,TREES_1,TREES_2,CARD_1,RELSET_1,TREES_3;
constructors PARTFUN1,WELLORD2,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,TREES_2,RELSET_1,FUNCOP_1,TREES_3,CKB2,CKB3;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve z for set;
reserve w for (FinSequence of ( NAT ));
reserve s for (FinSequence of ( NAT ));
reserve D for non  empty set;
theorem
Th28: (for Z being  finite (DecoratedTree of D) holds (for z being (Element of ( dom Z )) holds (( succ ( Root ( dom Z ) ) ) = { z } implies Z = ( ( ( elementary_tree 1 ) --> ( Root Z ) ) with-replacement (<* ( 0 ) *>,( Z | z )) ))))
proof
set e = ( elementary_tree 1 );
let Z being  finite (DecoratedTree of D);
let z being (Element of ( dom Z ));
set E = ( ( elementary_tree 1 ) --> ( Root Z ) );
A1: ( dom E ) = e by FUNCOP_1:13;
A2: ( dom ( Z | z ) ) = ( ( dom Z ) | z ) by TREES_2:def 10;
A3: <* ( 0 ) *> in e by TARSKI:def 2,TREES_1:51;
then A4: <* ( 0 ) *> in ( dom E ) by FUNCOP_1:13;
assume A5: ( succ ( Root ( dom Z ) ) ) = { z };
then ( card ( succ ( Root ( dom Z ) ) ) ) = 1 by CARD_1:30;
then ( branchdeg ( Root ( dom Z ) ) ) = 1 by TREES_2:def 12;
then { z } = { <* ( 0 ) *> } by A5,CKB21:1;
then z in { <* ( 0 ) *> } by TARSKI:def 1;
then A6: z = <* ( 0 ) *> by TARSKI:def 1;
A7: (for s holds (s in ( dom ( E with-replacement (<* ( 0 ) *>,( Z | z )) ) ) implies ( ( E with-replacement (<* ( 0 ) *>,( Z | z )) ) . s ) = ( Z . s )))
proof
let s;
assume A8: s in ( dom ( E with-replacement (<* ( 0 ) *>,( Z | z )) ) );
A9: ( dom ( E with-replacement (<* ( 0 ) *>,( Z | z )) ) ) = ( ( dom E ) with-replacement (<* ( 0 ) *>,( dom ( Z | z ) )) ) by A4,TREES_2:def 11;
then A10: (((not <* ( 0 ) *> is_a_prefix_of s) & ( ( E with-replacement (<* ( 0 ) *>,( Z | z )) ) . s ) = ( E . s )) or (ex w st ((w in ( dom ( Z | z ) ) & s = ( <* ( 0 ) *> ^ w )) & ( ( E with-replacement (<* ( 0 ) *>,( Z | z )) ) . s ) = ( ( Z | z ) . w )))) by A4,A8,TREES_2:def 11;
now
per cases  by A4,A9,A8,TREES_1:def 9;
suppose A11: (s in ( dom E ) & (not <* ( 0 ) *> is_a_proper_prefix_of s));

now
per cases  by A11,TARSKI:def 2,TREES_1:51;
suppose A12: s = ( {} );

then s in e by TREES_1:22;
then A13: ( E . s ) = ( Z . s ) by A12,FUNCOP_1:7;
(not (ex w st ((w in ( dom ( Z | z ) ) & s = ( <* ( 0 ) *> ^ w )) & ( ( E with-replacement (<* ( 0 ) *>,( Z | z )) ) . s ) = ( ( Z | z ) . w )))) by A12;
hence thesis by A4,A9,A8,A13,TREES_2:def 11;
end;
suppose s = <* ( 0 ) *>;

hence thesis by A6,A2,A10,TREES_2:def 10;
end;
end;
hence thesis;
end;
suppose (ex w st (w in ( dom ( Z | z ) ) & s = ( <* ( 0 ) *> ^ w )));

hence thesis by A6,A2,A10,TREES_1:1,TREES_2:def 10;
end;
end;
hence thesis;
end;
( dom ( E with-replacement (<* ( 0 ) *>,( Z | z )) ) ) = ( e with-replacement (<* ( 0 ) *>,( ( dom Z ) | z )) ) by A3,A1,A2,TREES_2:def 11;
then ( dom ( E with-replacement (<* ( 0 ) *>,( Z | z )) ) ) = ( dom Z ) by A5,CKB25:1;
hence thesis by A7,TREES_2:31;
end;
