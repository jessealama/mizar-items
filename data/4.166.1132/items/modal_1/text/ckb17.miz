environ
vocabularies NUMBERS,SUBSET_1,TREES_2,ZFMISC_1,FINSEQ_1,XBOOLE_0,TREES_1,FUNCT_1,RELAT_1,ORDINAL4,NAT_1,CARD_1,XXREAL_0,PARTFUN1,TARSKI,ORDINAL1,ARYTM_3,FINSET_1,FUNCOP_1,MARGREL1,MCART_1,QC_LANG1,XBOOLEAN,VALUED_1,ZF_LANG,MODAL_1,TREES_3;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,WELLORD2,NAT_1,DOMAIN_1,MCART_1,RELAT_1,FUNCT_1,RELSET_1,FINSEQ_1,FUNCOP_1,FINSEQ_2,FUNCT_2,FINSET_1,PARTFUN1,TREES_1,TREES_2,XXREAL_0,TREES_3,CKB2,CKB3;
definitions TARSKI,XBOOLE_0,FUNCT_1,CKB2,CKB3;
theorems TARSKI,FUNCT_1,NAT_1,ENUMSET1,TREES_1,TREES_2,FUNCOP_1,MCART_1,DOMAIN_1,PARTFUN1,FINSEQ_1,FINSET_1,CARD_1,WELLORD2,CARD_2,ZFMISC_1,FINSEQ_2,RELAT_1,FUNCT_2,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,TREES_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
schemes TREES_2,CLASSES1,NAT_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,TREES_1,TREES_2,CARD_1,RELSET_1,TREES_3;
constructors PARTFUN1,WELLORD2,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,TREES_2,RELSET_1,FUNCOP_1,TREES_3,CKB2,CKB3;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve n for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve w for (FinSequence of ( NAT ));
reserve t for (FinSequence of ( NAT ));
theorem
Th18: (for Z1,Z2 being Tree holds (for p being (FinSequence of ( NAT )) holds (p in Z1 implies (for v being (Element of ( Z1 with-replacement (p,Z2) )) holds (for w being (Element of Z1) holds ((v = w & (not p,w are_c=-comparable )) implies ( succ v ) = ( succ w )))))))
proof
let Z1 being Tree;
let Z2 being Tree;
let p being (FinSequence of ( NAT ));
assume A1: p in Z1;
set Z = ( Z1 with-replacement (p,Z2) );
let v being (Element of Z);
let w being (Element of Z1);
assume that
A2: v = w
and
A3: (not p,w are_c=-comparable );
A4: (not p is_a_prefix_of w) by A3,XBOOLE_0:def 9;
now
let x;
thus (x in ( succ v ) implies x in ( succ w ))
proof
assume x in ( succ v );
then x in { ( v ^ <* n *> ): ( v ^ <* n *> ) in Z } by TREES_2:def 5;
then consider n such that A5: x = ( v ^ <* n *> ) and A6: ( v ^ <* n *> ) in Z;
reconsider x9 = x as (FinSequence of ( NAT )) by A5;
( v ^ <* n *> ) in Z1
proof
assume A7: (not ( v ^ <* n *> ) in Z1);
then (ex t st (t in Z2 & x9 = ( p ^ t ))) by A1,A5,A6,TREES_1:def 9;
then A8: p is_a_prefix_of ( v ^ <* n *> ) by A5,TREES_1:1;
per cases  by A8,XBOOLE_0:def 8;
suppose p is_a_proper_prefix_of ( v ^ <* n *> );

hence contradiction by A2,A4,TREES_1:9;
end;
suppose p = ( v ^ <* n *> );

hence contradiction by A1,A7;
end;
end;
then x in { ( w ^ <* m *> ): ( w ^ <* m *> ) in Z1 } by A2,A5;
hence thesis by TREES_2:def 5;
end;

assume x in ( succ w );
then x in { ( w ^ <* n *> ): ( w ^ <* n *> ) in Z1 } by TREES_2:def 5;
then consider n such that A9: x = ( w ^ <* n *> ) and A10: ( w ^ <* n *> ) in Z1;
(not p is_a_proper_prefix_of ( w ^ <* n *> )) by A4,TREES_1:9;
then ( v ^ <* n *> ) in Z by A1,A2,A10,TREES_1:def 9;
then x in { ( v ^ <* m *> ): ( v ^ <* m *> ) in Z } by A2,A9;
hence x in ( succ v ) by TREES_2:def 5;
end;
hence thesis by TARSKI:1;
end;
