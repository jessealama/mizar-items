environ
vocabularies NUMBERS,SUBSET_1,TREES_2,ZFMISC_1,FINSEQ_1,XBOOLE_0,TREES_1,FUNCT_1,RELAT_1,ORDINAL4,NAT_1,CARD_1,XXREAL_0,PARTFUN1,TARSKI,ORDINAL1,ARYTM_3,FINSET_1,FUNCOP_1,MARGREL1,MCART_1,QC_LANG1,XBOOLEAN,VALUED_1,ZF_LANG,MODAL_1,TREES_3;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,WELLORD2,NAT_1,DOMAIN_1,MCART_1,RELAT_1,FUNCT_1,RELSET_1,FINSEQ_1,FUNCOP_1,FINSEQ_2,FUNCT_2,FINSET_1,PARTFUN1,TREES_1,TREES_2,XXREAL_0,TREES_3,CKB2,CKB3,CKB30,CKB32,CKB33,CKB35,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB55,CKB61;
definitions TARSKI,XBOOLE_0,FUNCT_1,CKB2,CKB3,CKB30,CKB33,CKB38,CKB42,CKB43,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB55,CKB61;
theorems TARSKI,FUNCT_1,NAT_1,ENUMSET1,TREES_1,TREES_2,FUNCOP_1,MCART_1,DOMAIN_1,PARTFUN1,FINSEQ_1,FINSET_1,CARD_1,WELLORD2,CARD_2,ZFMISC_1,FINSEQ_2,RELAT_1,FUNCT_2,RELSET_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,TREES_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB33,CKB36,CKB38,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62;
schemes TREES_2,CLASSES1,NAT_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,TREES_1,TREES_2,CARD_1,RELSET_1,TREES_3,CKB31,CKB34,CKB40;
constructors PARTFUN1,WELLORD2,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,TREES_2,RELSET_1,FUNCOP_1,TREES_3,CKB2,CKB3,CKB30,CKB33,CKB37,CKB38,CKB41,CKB42,CKB43,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB55,CKB61;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve A for MP-wff;
reserve B for MP-wff;
reserve C for MP-wff;
theorem
Th43: (( card ( dom A ) ) >= 2 implies ((ex B st (A = ( 'not' B ) or A = ( (#) B ))) or (ex B st (ex C st A = ( B '&' C )))))
proof
set b = ( branchdeg ( Root ( dom A ) ) );
set a = ( Root ( dom A ) );
assume A1: ( card ( dom A ) ) >= 2;
A2:now
assume b = ( 0 );
then ( card ( dom A ) ) = 1 by CKB20:1;
hence contradiction by A1;
end;
A3: b <= 2 by CKB38:def 1;
now
per cases  by A3,A2,NAT_1:26;
case A4: b = 1;
then ( card ( succ a ) ) = 1 by TREES_2:def 12;
then consider x such that A5: ( succ a ) = { x } by CARD_2:42;
x in ( succ a ) by A5,TARSKI:def 1;
then reconsider x9 = x as (Element of ( dom A ));
take B = ( A | x9 );
now
per cases  by A4,CKB38:def 1;
suppose ( A . a ) = [ 1,( 0 ) ];

then ( Root A ) = [ 1,( 0 ) ];
hence (A = ( 'not' B ) or A = ( (#) B )) by A5,CKB27:1;
end;
suppose ( A . a ) = [ 1,1 ];

then ( Root A ) = [ 1,1 ];
hence (A = ( 'not' B ) or A = ( (#) B )) by A5,CKB27:1;
end;
end;
hence thesis;
end;
case A6: b = 2;
then A7: ( succ a ) = { <* ( 0 ) *>,<* 1 *> } by CKB22:1;
then (<* ( 0 ) *> in ( succ a ) & <* 1 *> in ( succ a )) by TARSKI:def 2;
then reconsider x = <* ( 0 ) *>,y = <* 1 *> as (Element of ( dom A ));
take B = ( A | x );
take C = ( A | y );
( Root A ) = [ 2,( 0 ) ] by A6,CKB38:def 1;
then A = ( B '&' C ) by A7,CKB29:1;
hence thesis;
end;
end;
hence thesis;
end;
