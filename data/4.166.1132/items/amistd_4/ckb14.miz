environ
vocabularies SETFAM_1,XBOOLE_0,AMI_1,FSM_1,CAT_1,FUNCT_1,RELAT_1,STRUCT_0,SUBSET_1,FUNCT_4,FUNCOP_1,GOBOARD5,FRECHET,AMISTD_1,ZFMISC_1,NUMBERS,CARD_1,GLIB_000,AMISTD_2,CARD_5,NET_1,TARSKI,AMI_7,ORDINAL1,UNIALG_1;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,ZFMISC_1,MCART_1,NUMBERS,FUNCOP_1,FUNCT_4,NAT_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,FUNCT_7,AMISTD_1,AMISTD_2,CKB1,CKB4,CKB5,CKB13;
definitions EXTPRO_1,COMPOS_1,AMISTD_1,XBOOLE_0,FUNCOP_1,MEMSTR_0,CKB4,CKB5,CKB13;
theorems FUNCT_7,TARSKI,AMISTD_1,SUBSET_1,FUNCOP_1,FUNCT_4,ZFMISC_1,YELLOW_8,FUNCT_1,YELLOW15,XBOOLE_0,XBOOLE_1,RELAT_1,PARTFUN1,MCART_1,ORDINAL1,COMPOS_1,STRUCT_0,MEMSTR_0,CKB2,CKB3,CKB4,CKB5,CKB13;
schemes SUBSET_1;
registrations SETFAM_1,FUNCOP_1,STRUCT_0,AMISTD_1,AMISTD_2,ZFMISC_1,CARD_1,RELSET_1,ORDINAL1,COMPOS_1,EXTPRO_1,ORDINAL6,FUNCT_7,FUNCT_4,MEMSTR_0,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
constructors ZFMISC_1,AMISTD_2,NAT_1,PRE_POLY,EXTPRO_1,AMISTD_1,DOMAIN_1,FUNCT_7,FUNCT_4,MEMSTR_0,RELSET_1,CKB1,CKB4,CKB5,CKB13;
requirements SUBSET,BOOLE;
begin
definition
let N being  with_non-empty_elements non empty set;
let A being  IC-Ins-separated non empty AMI-Struct over N;
let I being (Instruction of A);
func Out_\_Inp I -> (Subset of A)
means
:Def4: (for o being (Object of A) holds (o in it iff (for s being (State of A) holds (for a being (Element of ( ObjectKind o )) holds ( Exec (I,s) ) = ( Exec (I,( s +* (o,a) )) )))));
existence
proof
defpred P[ set ]
 means
(ex l being (Object of A) st (l = $1 & (for s being (State of A) holds (for a being (Element of ( ObjectKind l )) holds ( Exec (I,s) ) = ( Exec (I,( s +* (l,a) )) )))));
consider X being (Subset of A) such that A1: (for x being set holds (x in X iff (x in (the carrier of A) & P[ x ]))) from SUBSET_1:sch 1;
take X;
let l being (Object of A);
hereby
assume l in X;
then P[ l ] by A1;
hence (for s being (State of A) holds (for a being (Element of ( ObjectKind l )) holds ( Exec (I,s) ) = ( Exec (I,( s +* (l,a) )) )));
end;
thus thesis by A1;
end;
uniqueness
proof
defpred P[ (Object of A) ]
 means
(for s being (State of A) holds (for a being (Element of ( ObjectKind $1 )) holds ( Exec (I,s) ) = ( Exec (I,( s +* ($1,a) )) )));
let a being (Subset of A),b being (Subset of A);
assume that
A2: (for o being (Object of A) holds (o in a iff P[ o ]))
and
A3: (for o being (Object of A) holds (o in b iff P[ o ]));
thus a = b from SUBSET_1:sch 2(A2,A3);
end;
end;
