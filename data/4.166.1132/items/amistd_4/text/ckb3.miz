environ
vocabularies SETFAM_1,XBOOLE_0,AMI_1,FSM_1,CAT_1,FUNCT_1,RELAT_1,STRUCT_0,SUBSET_1,FUNCT_4,FUNCOP_1,GOBOARD5,FRECHET,AMISTD_1,ZFMISC_1,NUMBERS,CARD_1,GLIB_000,AMISTD_2,CARD_5,NET_1,TARSKI,AMI_7,ORDINAL1,UNIALG_1;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,ZFMISC_1,MCART_1,NUMBERS,FUNCOP_1,FUNCT_4,NAT_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,FUNCT_7,AMISTD_1,AMISTD_2,CKB1;
definitions EXTPRO_1,COMPOS_1,AMISTD_1,XBOOLE_0,FUNCOP_1,MEMSTR_0;
theorems FUNCT_7,TARSKI,AMISTD_1,SUBSET_1,FUNCOP_1,FUNCT_4,ZFMISC_1,YELLOW_8,FUNCT_1,YELLOW15,XBOOLE_0,XBOOLE_1,RELAT_1,PARTFUN1,MCART_1,ORDINAL1,COMPOS_1,STRUCT_0,MEMSTR_0,CKB2;
schemes SUBSET_1;
registrations SETFAM_1,FUNCOP_1,STRUCT_0,AMISTD_1,AMISTD_2,ZFMISC_1,CARD_1,RELSET_1,ORDINAL1,COMPOS_1,EXTPRO_1,ORDINAL6,FUNCT_7,FUNCT_4,MEMSTR_0;
constructors ZFMISC_1,AMISTD_2,NAT_1,PRE_POLY,EXTPRO_1,AMISTD_1,DOMAIN_1,FUNCT_7,FUNCT_4,MEMSTR_0,RELSET_1,CKB1;
requirements SUBSET,BOOLE;
begin
reserve N for  with_non-empty_elements non  empty set;
theorem
(for A being  standard  IC-Ins-separated non  empty AMI-Struct over N holds (for I being (Instruction of A) holds (for s being (State of A) holds (for o being (Object of A) holds (for w being (Element of ( ObjectKind o )) holds ((I is  sequential & o <> ( IC A )) implies ( IC ( Exec (I,( s +* (o,w) )) ) ) = ( IC ( ( Exec (I,s) ) +* (o,w) ) )))))))
proof
let A being  standard  IC-Ins-separated non  empty AMI-Struct over N;
let I being (Instruction of A);
let s being (State of A);
let o being (Object of A);
let w being (Element of ( ObjectKind o ));
assume that
A1: I is  sequential
and
A2: o <> ( IC A );
thus ( IC ( Exec (I,( s +* (o,w) )) ) ) = ( IC ( Exec (I,s) ) ) by A1,A2,CKB2:1
.= ( IC ( ( Exec (I,s) ) +* (o,w) ) ) by A2,FUNCT_7:32;
end;
