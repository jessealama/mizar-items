environ
vocabularies RELAT_1,SUBSET_1,ZFMISC_1,TARSKI,XBOOLE_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,CKB1,CKB4,CKB5,CKB19,CKB20,CKB24,CKB25;
definitions TARSKI,XBOOLE_0,RELAT_1,CKB4,CKB5;
theorems TARSKI,ZFMISC_1,RELAT_1,XBOOLE_0,XBOOLE_1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB21,CKB22,CKB23;
schemes RELAT_1;
registrations XBOOLE_0,RELAT_1,SUBSET_1,CKB2,CKB3,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
constructors TARSKI,SUBSET_1,RELAT_1,CKB4,CKB5,CKB19,CKB20,CKB24,CKB25;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve x for set;
reserve y for set;
reserve R for (Relation of X,Y);
theorem
(( dom ( R ~ ) ) = ( rng R ) & ( rng ( R ~ ) ) = ( dom R ))
proof
now
let x;
A1:now
assume x in ( rng R );
then consider y such that A2: [ y,x ] in R by RELAT_1:def 5;
[ x,y ] in ( R ~ ) by A2,RELAT_1:def 7;
hence x in ( dom ( R ~ ) ) by RELAT_1:6;
end;
now
assume x in ( dom ( R ~ ) );
then consider y such that A3: [ x,y ] in ( R ~ ) by RELAT_1:def 4;
[ y,x ] in R by A3,RELAT_1:def 7;
hence x in ( rng R ) by RELAT_1:6;
end;
hence (x in ( dom ( R ~ ) ) iff x in ( rng R )) by A1;
end;
hence ( dom ( R ~ ) ) = ( rng R ) by TARSKI:1;
now
let x;
A4:now
assume x in ( dom R );
then consider y such that A5: [ x,y ] in R by RELAT_1:def 4;
[ y,x ] in ( R ~ ) by A5,RELAT_1:def 7;
hence x in ( rng ( R ~ ) ) by RELAT_1:6;
end;
now
assume x in ( rng ( R ~ ) );
then consider y such that A6: [ y,x ] in ( R ~ ) by RELAT_1:def 5;
[ x,y ] in R by A6,RELAT_1:def 7;
hence x in ( dom R ) by RELAT_1:6;
end;
hence (x in ( rng ( R ~ ) ) iff x in ( dom R )) by A4;
end;
hence thesis by TARSKI:1;
end;
