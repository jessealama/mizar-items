environ
vocabularies RELAT_1,SUBSET_1,ZFMISC_1,TARSKI,XBOOLE_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,CKB1,CKB4,CKB5,CKB19,CKB20,CKB24,CKB25,CKB35;
definitions TARSKI,XBOOLE_0,RELAT_1,CKB4,CKB5;
theorems TARSKI,ZFMISC_1,RELAT_1,XBOOLE_0,XBOOLE_1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB21,CKB22,CKB23,CKB26,CKB27,CKB30,CKB31,CKB32,CKB33,CKB34;
schemes RELAT_1;
registrations XBOOLE_0,RELAT_1,SUBSET_1,CKB2,CKB3,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB28,CKB29;
constructors TARSKI,SUBSET_1,RELAT_1,CKB4,CKB5,CKB19,CKB20,CKB24,CKB25,CKB35;
requirements SUBSET,BOOLE;
begin
reserve B for set;
reserve X for set;
reserve Y for set;
reserve x for set;
reserve y for set;
reserve R for (Relation of X,Y);
definition
let X;
let Y;
let B;
let R;
redefine func B | R -> (Relation of X,Y);

coherence
proof
now
let x;
let y;
assume [ x,y ] in ( B | R );
then [ x,y ] in R by RELAT_1:def 12;
hence [ x,y ] in [: X,Y :];
end;
hence thesis by RELAT_1:def 3;
end;
end;
