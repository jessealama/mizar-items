environ
vocabularies RELAT_1,SUBSET_1,ZFMISC_1,TARSKI,XBOOLE_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,CKB1,CKB4,CKB5,CKB19,CKB20,CKB24,CKB25,CKB35,CKB36,CKB41,CKB42;
definitions TARSKI,XBOOLE_0,RELAT_1,CKB4,CKB5;
theorems TARSKI,ZFMISC_1,RELAT_1,XBOOLE_0,XBOOLE_1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB21,CKB22,CKB23,CKB26,CKB27,CKB30,CKB31,CKB32,CKB33,CKB34,CKB37,CKB38,CKB39,CKB40,CKB43,CKB44;
schemes RELAT_1;
registrations XBOOLE_0,RELAT_1,SUBSET_1,CKB2,CKB3,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB28,CKB29;
constructors TARSKI,SUBSET_1,RELAT_1,CKB4,CKB5,CKB19,CKB20,CKB24,CKB25,CKB35,CKB36,CKB41,CKB42;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
scheme RelOnSetEx { A() -> set,B() -> set,P[set,set] } : (ex R being (Relation of A(),B()) st (for x holds (for y holds ([ x,y ] in R iff ((x in A() & y in B()) & P[ x,y ])))))
proof
consider R being Relation such that A1: (for x holds (for y holds ([ x,y ] in R iff ((x in A() & y in B()) & P[ x,y ])))) from RELAT_1:sch 1;
R c= [: A(),B() :]
proof
let x1 being set,x2 being set;
assume [ x1,x2 ] in R;
then (x1 in A() & x2 in B()) by A1;
hence thesis by ZFMISC_1:87;
end;
then reconsider R as (Relation of A(),B());
take R;
thus thesis by A1;
end;
