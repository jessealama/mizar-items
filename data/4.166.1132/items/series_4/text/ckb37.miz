environ
vocabularies NUMBERS,SUBSET_1,XREAL_0,ORDINAL1,SEQ_1,NEWTON,ARYTM_3,RELAT_1,ARYTM_1,CARD_1,PREPOWER,XXREAL_0,FUNCT_1,SERIES_1,REALSET1,NAT_1,SERIES_3;
notations SUBSET_1,NUMBERS,ORDINAL1,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,SERIES_3,SEQ_1,NEWTON,PREPOWER,SERIES_1;
theorems SERIES_3,NAT_1,PREPOWER,NEWTON,XCMPLX_1,SERIES_1,XREAL_1,WSIERP_1,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36;
schemes NAT_1;
registrations XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,MEMBERED,NEWTON,XBOOLE_0,NUMBERS;
constructors XXREAL_0,REAL_1,NAT_1,BINOP_2,SEQ_1,NEWTON,PREPOWER,SERIES_1,SERIES_3,VALUED_1;
requirements REAL,NUMERALS,SUBSET,ARITHM,BOOLE;
begin
reserve n for (Element of ( NAT ));
reserve s for Real_Sequence;
theorem
((for n holds (n >= 2 implies ((( s . n ) = ( 1 - ( 1 / ( n |^ 2 ) ) ) & ( s . ( 0 ) ) = 1) & ( s . 1 ) = 1))) implies (for n holds (n >= 2 implies ( ( Partial_Product s ) . n ) = ( ( n + 1 ) / ( 2 * n ) ))))
proof
defpred X[ Nat ]
 means
( ( Partial_Product s ) . $1 ) = ( ( $1 + 1 ) / ( 2 * $1 ) );
assume A1: (for n holds (n >= 2 implies ((( s . n ) = ( 1 - ( 1 / ( n |^ 2 ) ) ) & ( s . ( 0 ) ) = 1) & ( s . 1 ) = 1)));
A2: (for n being Nat holds ((n >= 2 & X[ n ]) implies X[ ( n + 1 ) ]))
proof
let n being Nat;
assume that
A3: n >= 2
and
A4: ( ( Partial_Product s ) . n ) = ( ( n + 1 ) / ( 2 * n ) );
A5: ( n + 1 ) > ( 1 + 1 ) by A3,NAT_1:13;
( ( n + 1 ) * ( n + 1 ) ) <> ( 0 );
then A6: ( ( n + 1 ) |^ 2 ) <> ( 0 ) by WSIERP_1:1;
n in ( NAT ) by ORDINAL1:def 12;
then ( ( Partial_Product s ) . ( n + 1 ) ) = ( ( ( Partial_Product s ) . n ) * ( s . ( n + 1 ) ) ) by SERIES_3:def 1
.= ( ( ( n + 1 ) / ( 2 * n ) ) * ( 1 - ( 1 / ( ( n + 1 ) |^ 2 ) ) ) ) by A1,A4,A5
.= ( ( ( n + 1 ) / ( 2 * n ) ) * ( ( ( ( n + 1 ) |^ 2 ) / ( ( n + 1 ) |^ 2 ) ) - ( 1 / ( ( n + 1 ) |^ 2 ) ) ) ) by A6,XCMPLX_1:60
.= ( ( ( n + 1 ) / ( 2 * n ) ) * ( ( ( ( n + 1 ) |^ 2 ) - 1 ) / ( ( n + 1 ) |^ 2 ) ) ) by XCMPLX_1:120
.= ( ( ( n + 1 ) / ( 2 * n ) ) * ( ( ( ( n + 1 ) |^ 2 ) - ( 1 |^ 2 ) ) / ( ( n + 1 ) |^ 2 ) ) ) by NEWTON:10
.= ( ( ( n + 1 ) / ( 2 * n ) ) * ( ( ( ( n + 1 ) - 1 ) * ( ( n + 1 ) + 1 ) ) / ( ( n + 1 ) |^ 2 ) ) ) by CKB4:1
.= ( ( ( n + 1 ) * ( n * ( n + 2 ) ) ) / ( ( 2 * n ) * ( ( n + 1 ) |^ 2 ) ) ) by XCMPLX_1:76
.= ( ( ( ( n + 1 ) * n ) * ( n + 2 ) ) / ( ( 2 * n ) * ( ( n + 1 ) * ( n + 1 ) ) ) ) by WSIERP_1:1
.= ( ( ( ( n + 1 ) * n ) * ( n + 2 ) ) / ( ( n * ( n + 1 ) ) * ( 2 * ( n + 1 ) ) ) )
.= ( ( ( ( n + 1 ) * n ) / ( n * ( n + 1 ) ) ) * ( ( n + 2 ) / ( 2 * ( n + 1 ) ) ) ) by XCMPLX_1:76
.= ( ( ( ( n + 1 ) / ( n + 1 ) ) * ( n / n ) ) * ( ( n + 2 ) / ( 2 * ( n + 1 ) ) ) ) by XCMPLX_1:76
.= ( ( 1 * ( n / n ) ) * ( ( n + 2 ) / ( 2 * ( n + 1 ) ) ) ) by XCMPLX_1:60
.= ( ( 1 * 1 ) * ( ( n + 2 ) / ( 2 * ( n + 1 ) ) ) ) by A3,XCMPLX_1:60
.= ( ( n + 2 ) / ( 2 * ( n + 1 ) ) );
hence thesis;
end;
( ( Partial_Product s ) . ( 1 + 1 ) ) = ( ( ( Partial_Product s ) . ( 1 + ( 0 ) ) ) * ( s . 2 ) ) by SERIES_3:def 1
.= ( ( ( ( Partial_Product s ) . ( 0 ) ) * ( s . 1 ) ) * ( s . 2 ) ) by SERIES_3:def 1
.= ( ( ( s . ( 0 ) ) * ( s . 1 ) ) * ( s . 2 ) ) by SERIES_3:def 1
.= ( ( 1 * ( s . 1 ) ) * ( s . 2 ) ) by A1
.= ( ( 1 * 1 ) * ( s . 2 ) ) by A1
.= ( 1 - ( 1 / 4 ) ) by A1,CKB1:1
.= ( ( 2 + 1 ) / ( 2 * 2 ) );
then A7: X[ 2 ];
(for n being Nat holds (n >= 2 implies X[ n ])) from NAT_1:sch 8(A7,A2);
hence thesis;
end;
