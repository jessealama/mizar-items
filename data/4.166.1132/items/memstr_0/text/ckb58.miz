environ
vocabularies STRUCT_0,SUBSET_1,XBOOLE_0,FUNCT_1,NUMBERS,CARD_3,CARD_1,FUNCOP_1,FUNCT_4,RELAT_1,TARSKI,CAT_1,FSM_1,SETFAM_1,FINSET_1,NAT_1,ARYTM_1,PARTFUN1,ZFMISC_1,AMI_1,ARYTM_3,COMPOS_1,SCMFSA6C,XXREAL_0,SUPINF_2,MEMSTR_0;
notations TARSKI,XBOOLE_0,ZFMISC_1,MCART_1,SUBSET_1,SETFAM_1,ORDINAL1,PBOOLE,FUNCT_7,CARD_1,CARD_3,XCMPLX_0,RELAT_1,FUNCT_1,PARTFUN1,FINSET_1,NUMBERS,INT_1,NAT_1,NAT_D,FUNCOP_1,FUNCT_4,AFINSQ_1,FINSEQ_1,FUNCT_2,DOMAIN_1,VALUED_0,VALUED_1,STRUCT_0,XXREAL_0,CKB1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB14,CKB20,CKB21,CKB38,CKB39,CKB45;
definitions RELAT_1,FUNCOP_1,ORDINAL1,PBOOLE,PARTFUN1,MCART_1,ZFMISC_1,TARSKI,STRUCT_0,FUNCT_1,XBOOLE_0,NAT_1,FUNCT_4,NAT_D,AFINSQ_1,VALUED_1,CARD_3,CKB2,CKB10,CKB11,CKB14,CKB20,CKB21,CKB38,CKB39,CKB45;
theorems ZFMISC_1,FUNCT_2,TARSKI,CARD_3,FUNCT_4,FUNCOP_1,FUNCT_1,GRFUNC_1,RELAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,ORDINAL1,SUBSET_1,FUNCT_7,PARTFUN1,PBOOLE,XREAL_1,NAT_D,NAT_2,STRUCT_0,CKB2,CKB10,CKB11,CKB14,CKB15,CKB19,CKB20,CKB21,CKB24,CKB25,CKB26,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB38,CKB39,CKB41,CKB42,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57;
schemes FRAENKEL;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FUNCOP_1,FUNCT_4,FINSET_1,XREAL_0,FINSEQ_1,CARD_3,STRUCT_0,INT_1,RELSET_1,GRFUNC_1,PRE_POLY,PBOOLE,AFINSQ_1,VALUED_1,XCMPLX_0,PARTFUN1,NUMBERS,NAT_1,MEMBERED,FUNCT_7,CARD_1,XXREAL_2,ZFMISC_1,SUBSET_1,VALUED_0,XXREAL_0,ORDINAL4,ORDINAL5,CKB1,CKB3,CKB4,CKB12,CKB13,CKB16,CKB17,CKB18,CKB22,CKB23,CKB27,CKB37,CKB40,CKB43,CKB44;
constructors SETFAM_1,DOMAIN_1,FUNCT_4,XXREAL_0,RELSET_1,FUNCT_7,PRE_POLY,PBOOLE,RECDEF_2,AFINSQ_1,NAT_D,WELLORD2,STRUCT_0,CKB1,CKB2,CKB10,CKB11,CKB14,CKB20,CKB21,CKB38,CKB39;
requirements NUMERALS,BOOLE,SUBSET,ARITHM,REAL;
begin
reserve x for set;
theorem
Th151: (for N being  with_non-empty_elements set holds (for S being  IC-Ins-separated non empty Mem-Struct over N holds (for l being Nat holds (for p being (PartState of S) holds (p is l -started iff ( Start-At (l,S) ) c= p)))))
proof
let N being  with_non-empty_elements set;
let S being  IC-Ins-separated non empty Mem-Struct over N;
let l being Nat;
let p being (PartState of S);
A1: ( dom ( Start-At (l,S) ) ) = { ( IC S ) } by FUNCOP_1:13;
thus (p is l -started implies ( Start-At (l,S) ) c= p)
proof
assume A2: p is l -started;
( IC S ) in ( dom p ) by A2,CKB39:def 1;
then A3: ( dom ( Start-At (l,S) ) ) c= ( dom p ) by A1,ZFMISC_1:31;
(for x holds (x in ( dom ( Start-At (l,S) ) ) implies ( ( Start-At (l,S) ) . x ) = ( p . x )))
proof
let x;
assume Z: x in ( dom ( Start-At (l,S) ) );
hence ( ( Start-At (l,S) ) . x ) = ( IC ( Start-At (l,S) ) ) by A1,TARSKI:def 1
.= l by FUNCOP_1:72
.= ( IC p ) by A2,CKB39:def 1
.= ( p . x ) by A1,Z,TARSKI:def 1;
end;
hence ( Start-At (l,S) ) c= p by A3,GRFUNC_1:2;
end;

assume A5: ( Start-At (l,S) ) c= p;
then A6: ( dom ( Start-At (l,S) ) ) c= ( dom p ) by RELAT_1:11;
A7: ( IC S ) in ( dom ( Start-At (l,S) ) ) by A1,TARSKI:def 1;
hence ( IC S ) in ( dom p ) by A6;
thus ( IC p ) = ( IC ( Start-At (l,S) ) ) by A5,A7,GRFUNC_1:2
.= l by FUNCOP_1:72;
end;
