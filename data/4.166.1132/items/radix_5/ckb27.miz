environ
vocabularies NUMBERS,NAT_1,XXREAL_0,RADIX_1,ARYTM_1,ARYTM_3,CARD_1,SUBSET_1,FINSEQ_1,POWER,RELAT_1,FINSEQ_2,PARTFUN1,NEWTON,FUNCT_1,CARD_3,INT_1,TARSKI,RADIX_5;
notations TARSKI,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,NAT_D,NEWTON,RADIX_1,POWER,FUNCT_1,PARTFUN1,FINSEQ_1,FINSEQ_2,GR_CY_1,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25;
definitions TARSKI,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25;
theorems RADIX_1,RADIX_4,INT_1,NAT_1,FINSEQ_1,POWER,FINSEQ_2,NEWTON,RADIX_2,NAT_2,PREPOWER,PEPIN,JORDAN5B,FUNCT_1,RVSUM_1,XREAL_1,XXREAL_0,NAT_D,PARTFUN1,ORDINAL1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
schemes NAT_1,FINSEQ_2;
registrations RELSET_1,NUMBERS,XXREAL_0,XREAL_0,REAL_1,NAT_1,INT_1,ORDINAL1,NEWTON,XBOOLE_0,FINSEQ_2,CARD_1;
constructors REAL_1,NAT_D,NEWTON,POWER,GR_CY_1,RADIX_1,SEQ_1,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
(for n being Nat holds (n >= 1 implies (for m,k being Nat holds (k >= 2 implies ( ( SDDec ( SDMax (n,m,k) ) ) + ( SDDec ( SDMin (n,m,k) ) ) ) = ( SDDec ( DecSD (( 0 ),n,k) ) )))))
proof
let n being Nat;
assume A1: n >= 1;
then A2: n in ( Seg n ) by FINSEQ_1:1;
let m being Nat,k being Nat;
assume A3: k >= 2;
A4: (for i being Nat holds (i in ( Seg n ) implies ( DigA (( DecSD (( 0 ),n,k) ),i) ) = ( DigA (( ( SDMax (n,m,k) ) '+' ( SDMin (n,m,k) ) ),i) )))
proof
let i being Nat;
assume A5: i in ( Seg n );
then A6: ( DigA (( ( SDMax (n,m,k) ) '+' ( SDMin (n,m,k) ) ),i) ) = ( Add (( SDMax (n,m,k) ),( SDMin (n,m,k) ),i,k) ) by RADIX_1:def 14
.= ( ( SD_Add_Data (( ( DigA (( SDMax (n,m,k) ),i) ) + ( DigA (( SDMin (n,m,k) ),i) ) ),k) ) + ( SD_Add_Carry ( ( DigA (( SDMax (n,m,k) ),( i -' 1 )) ) + ( DigA (( SDMin (n,m,k) ),( i -' 1 )) ) ) ) ) by A3,A5,RADIX_1:def 13
.= ( ( SD_Add_Data (( 0 ),k) ) + ( SD_Add_Carry ( ( DigA (( SDMax (n,m,k) ),( i -' 1 )) ) + ( DigA (( SDMin (n,m,k) ),( i -' 1 )) ) ) ) ) by A3,A5,CKB26:1
.= ( ( 0 ) + ( SD_Add_Carry ( ( DigA (( SDMax (n,m,k) ),( i -' 1 )) ) + ( DigA (( SDMin (n,m,k) ),( i -' 1 )) ) ) ) ) by RADIX_1:19;
A7: ( DigA (( DecSD (( 0 ),n,k) ),i) ) = ( 0 ) by A5,CKB5:1;
A8: i >= 1 by A5,FINSEQ_1:1;
now
per cases  by A8,XXREAL_0:1;
suppose A9: i = 1;

then ( DigA (( SDMin (n,m,k) ),( i -' 1 )) ) = ( 0 ) by NAT_2:8,RADIX_1:def 3;
then ( DigA (( ( SDMax (n,m,k) ) '+' ( SDMin (n,m,k) ) ),i) ) = ( SD_Add_Carry ( ( 0 ) + ( 0 ) ) ) by A6,A9,NAT_2:8,RADIX_1:def 3;
hence thesis by A7,RADIX_1:def 10;
end;
suppose i > 1;

then ( i -' 1 ) in ( Seg n ) by A5,CKB2:1;
then ( DigA (( ( SDMax (n,m,k) ) '+' ( SDMin (n,m,k) ) ),i) ) = ( SD_Add_Carry ( 0 ) ) by A3,A6,CKB26:1;
hence thesis by A7,RADIX_1:def 10;
end;
end;
hence thesis;
end;
( ( SDDec ( SDMax (n,m,k) ) ) + ( SDDec ( SDMin (n,m,k) ) ) ) = ( ( SDDec ( ( SDMax (n,m,k) ) '+' ( SDMin (n,m,k) ) ) ) + ( ( SD_Add_Carry ( ( DigA (( SDMax (n,m,k) ),n) ) + ( DigA (( SDMin (n,m,k) ),n) ) ) ) * ( ( Radix k ) |^ n ) ) ) by A1,A3,RADIX_2:11
.= ( ( SDDec ( ( SDMax (n,m,k) ) '+' ( SDMin (n,m,k) ) ) ) + ( ( SD_Add_Carry ( 0 ) ) * ( ( Radix k ) |^ n ) ) ) by A3,A2,CKB26:1
.= ( ( SDDec ( ( SDMax (n,m,k) ) '+' ( SDMin (n,m,k) ) ) ) + ( ( 0 ) * ( ( Radix k ) |^ n ) ) ) by RADIX_1:def 10;
hence thesis by A1,A4,CKB14:1;
end;
