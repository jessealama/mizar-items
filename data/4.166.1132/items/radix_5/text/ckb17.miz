environ
vocabularies NUMBERS,NAT_1,XXREAL_0,RADIX_1,ARYTM_1,ARYTM_3,CARD_1,SUBSET_1,FINSEQ_1,POWER,RELAT_1,FINSEQ_2,PARTFUN1,NEWTON,FUNCT_1,CARD_3,INT_1,TARSKI,RADIX_5;
notations TARSKI,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,NAT_D,NEWTON,RADIX_1,POWER,FUNCT_1,PARTFUN1,FINSEQ_1,FINSEQ_2,GR_CY_1;
definitions TARSKI;
theorems RADIX_1,RADIX_4,INT_1,NAT_1,FINSEQ_1,POWER,FINSEQ_2,NEWTON,RADIX_2,NAT_2,PREPOWER,PEPIN,JORDAN5B,FUNCT_1,RVSUM_1,XREAL_1,XXREAL_0,NAT_D,PARTFUN1,ORDINAL1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
schemes NAT_1,FINSEQ_2;
registrations RELSET_1,NUMBERS,XXREAL_0,XREAL_0,REAL_1,NAT_1,INT_1,ORDINAL1,NEWTON,XBOOLE_0,FINSEQ_2,CARD_1;
constructors REAL_1,NAT_D,NEWTON,POWER,GR_CY_1,RADIX_1,SEQ_1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
(for n,k being Nat holds ((n >= 1 & k >= 2) implies (for tx,ty,tz being (Tuple of n,( k -SD )) holds ((for i being Nat holds (i in ( Seg n ) implies ((( DigA (tx,i) ) = ( DigA (tz,i) ) & ( DigA (ty,i) ) = ( 0 )) or (( DigA (ty,i) ) = ( DigA (tz,i) ) & ( DigA (tx,i) ) = ( 0 ))))) implies ( ( SDDec tz ) + ( SDDec ( DecSD (( 0 ),n,k) ) ) ) = ( ( SDDec tx ) + ( SDDec ty ) )))))
proof
let n being Nat;
let k being Nat;
assume A1: (n >= 1 & k >= 2);
let tx being (Tuple of n,( k -SD ));
let ty being (Tuple of n,( k -SD ));
let tz being (Tuple of n,( k -SD ));
assume A2: (for i being Nat holds (i in ( Seg n ) implies ((( DigA (tx,i) ) = ( DigA (tz,i) ) & ( DigA (ty,i) ) = ( 0 )) or (( DigA (ty,i) ) = ( DigA (tz,i) ) & ( DigA (tx,i) ) = ( 0 )))));
(for i being Nat holds (i in ( Seg n ) implies ((( DigA (tx,i) ) = ( DigA (tz,i) ) & ( DigA (ty,i) ) = ( DigA (( DecSD (( 0 ),n,k) ),i) )) or (( DigA (ty,i) ) = ( DigA (tz,i) ) & ( DigA (tx,i) ) = ( DigA (( DecSD (( 0 ),n,k) ),i) )))))
proof
let i being Nat;
assume A3: i in ( Seg n );
then ( DigA (( DecSD (( 0 ),n,k) ),i) ) = ( 0 ) by CKB5:1;
hence thesis by A2,A3;
end;
hence thesis by A1,CKB16:1;
end;
