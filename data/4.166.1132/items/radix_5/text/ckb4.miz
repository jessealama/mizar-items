environ
vocabularies NUMBERS,NAT_1,XXREAL_0,RADIX_1,ARYTM_1,ARYTM_3,CARD_1,SUBSET_1,FINSEQ_1,POWER,RELAT_1,FINSEQ_2,PARTFUN1,NEWTON,FUNCT_1,CARD_3,INT_1,TARSKI,RADIX_5;
notations TARSKI,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,NAT_D,NEWTON,RADIX_1,POWER,FUNCT_1,PARTFUN1,FINSEQ_1,FINSEQ_2,GR_CY_1;
definitions TARSKI;
theorems RADIX_1,RADIX_4,INT_1,NAT_1,FINSEQ_1,POWER,FINSEQ_2,NEWTON,RADIX_2,NAT_2,PREPOWER,PEPIN,JORDAN5B,FUNCT_1,RVSUM_1,XREAL_1,XXREAL_0,NAT_D,PARTFUN1,ORDINAL1,XREAL_0,CARD_1,CKB1,CKB2,CKB3;
schemes NAT_1,FINSEQ_2;
registrations RELSET_1,NUMBERS,XXREAL_0,XREAL_0,REAL_1,NAT_1,INT_1,ORDINAL1,NEWTON,XBOOLE_0,FINSEQ_2,CARD_1;
constructors REAL_1,NAT_D,NEWTON,POWER,GR_CY_1,RADIX_1,SEQ_1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Th4: (for k being Nat holds (for tx being (Tuple of 1,( k -SD )) holds ( SDDec tx ) = ( DigA (tx,1) )))
proof
let k being Nat;
let tx being (Tuple of 1,( k -SD ));
reconsider w = ( DigA (tx,1) ) as (Element of ( INT )) by INT_1:def 2;
A1: 1 in ( Seg 1 ) by FINSEQ_1:1;
then A2: ( ( DigitSD tx ) /. 1 ) = ( SubDigit (tx,1,k) ) by RADIX_1:def 6
.= ( ( ( Radix k ) |^ ( 1 -' 1 ) ) * ( DigB (tx,1) ) ) by RADIX_1:def 5
.= ( ( ( Radix k ) |^ ( 1 -' 1 ) ) * ( DigA (tx,1) ) ) by RADIX_1:def 4
.= ( ( ( Radix k ) |^ ( 0 ) ) * ( DigA (tx,1) ) ) by XREAL_1:232
.= ( 1 * ( DigA (tx,1) ) ) by NEWTON:4;
A3: ( len ( DigitSD tx ) ) = 1 by CARD_1:def 7;
then 1 in ( dom ( DigitSD tx ) ) by A1,FINSEQ_1:def 3;
then A4: ( ( DigitSD tx ) . 1 ) = ( DigA (tx,1) ) by A2,PARTFUN1:def 6;
( SDDec tx ) = ( Sum ( DigitSD tx ) ) by RADIX_1:def 7
.= ( Sum <* w *> ) by A3,A4,FINSEQ_1:40
.= ( DigA (tx,1) ) by RVSUM_1:73;
hence thesis;
end;
