environ
vocabularies NUMBERS,NAT_1,XXREAL_0,RADIX_1,ARYTM_1,ARYTM_3,CARD_1,SUBSET_1,FINSEQ_1,POWER,RELAT_1,FINSEQ_2,PARTFUN1,NEWTON,FUNCT_1,CARD_3,INT_1,TARSKI,RADIX_5;
notations TARSKI,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,NAT_D,NEWTON,RADIX_1,POWER,FUNCT_1,PARTFUN1,FINSEQ_1,FINSEQ_2,GR_CY_1;
definitions TARSKI;
theorems RADIX_1,RADIX_4,INT_1,NAT_1,FINSEQ_1,POWER,FINSEQ_2,NEWTON,RADIX_2,NAT_2,PREPOWER,PEPIN,JORDAN5B,FUNCT_1,RVSUM_1,XREAL_1,XXREAL_0,NAT_D,PARTFUN1,ORDINAL1,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
schemes NAT_1,FINSEQ_2;
registrations RELSET_1,NUMBERS,XXREAL_0,XREAL_0,REAL_1,NAT_1,INT_1,ORDINAL1,NEWTON,XBOOLE_0,FINSEQ_2,CARD_1;
constructors REAL_1,NAT_D,NEWTON,POWER,GR_CY_1,RADIX_1,SEQ_1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Lm2: (for n,k,i being Nat holds ((k >= 2 & i in ( Seg n )) implies ( SD_Add_Carry ( DigA (( DecSD (1,n,k) ),i) ) ) = ( 0 )))
proof
let n being Nat,k being Nat,i being Nat;
assume that
A1: k >= 2
and
A2: i in ( Seg n );
A3: i >= 1 by A2,FINSEQ_1:1;
now
per cases  by A3,XXREAL_0:1;
suppose i = 1;

then ( SD_Add_Carry ( DigA (( DecSD (1,n,k) ),i) ) ) = ( SD_Add_Carry 1 ) by A1,A2,CKB7:1;
hence thesis by RADIX_1:def 10;
end;
suppose i > 1;

then ( SD_Add_Carry ( DigA (( DecSD (1,n,k) ),i) ) ) = ( SD_Add_Carry ( 0 ) ) by A1,A2,CKB8:1;
hence thesis by RADIX_1:def 10;
end;
end;
hence thesis;
end;
