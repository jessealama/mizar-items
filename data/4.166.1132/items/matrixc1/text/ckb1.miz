environ
vocabularies NUMBERS,NAT_1,SUBSET_1,FINSEQ_2,MATRIX_1,ARYTM_3,FINSEQ_1,TREES_1,RELAT_1,CARD_1,XXREAL_0,ZFMISC_1,XCMPLX_0,ORDINAL1,COMPLFLD,MATRIX_5,ARYTM_1,COMPLEX1,QC_LANG1,FUNCT_1,RVSUM_1,BINOP_2,TARSKI,XBOOLE_0,CARD_3,INCSP_1,FUNCOP_1,SETWISEO,ORDINAL4,PARTFUN1,MATRIXC1;
notations TARSKI,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,ZFMISC_1,NAT_1,NAT_D,PARTFUN1,BINOP_1,FUNCOP_1,FINSEQ_1,FINSEQOP,SEQ_4,COMPLEX1,RVSUM_1,FINSEQ_2,BINOP_2,ORDINAL1,MATRIX_5,MATRIX_1,MATRIX_3,MATRIX_4,RLVECT_1,COMPLSP2,SETWOP_2,COMPLFLD,STRUCT_0,GROUP_1,SEQ_1;
definitions MATRIX_1,RVSUM_1,VALUED_1;
theorems FINSEQ_1,FUNCT_1,NAT_1,MATRIX_1,FINSEQ_2,COMPLEX1,BINOP_2,FINSEQ_3,XCMPLX_0,ZFMISC_1,SEQ_4,MATRIX_2,FINSEQOP,COMPLSP2,FUNCOP_1,FUNCT_2,FINSOP_1,SETWOP_2,FINSEQ_5,XREAL_1,MATRIX_3,COMPLFLD,MATRIX_4,MATRIX_5,NUMBERS,XBOOLE_1,ORDINAL1,PARTFUN1,XXREAL_0,XREAL_0,CARD_1;
schemes MATRIX_1,FINSEQ_2,FINSEQ_1,FUNCT_2,NAT_1;
registrations XBOOLE_0,FUNCT_1,FUNCT_2,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,BINOP_2,MEMBERED,FINSEQ_2,COMPLFLD,MATRIX_1,VALUED_0,RELSET_1,CARD_1,FINSEQ_1;
constructors PARTFUN1,SETWISEO,XXREAL_0,NAT_1,FINSOP_1,BINARITH,MATRIX_3,MATRIX_4,MATRIX_5,SEQ_4,SEQ_1,BINOP_2,BINOP_1,RVSUM_1,NAT_D,RELSET_1,COMPLSP2;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
reserve i for Nat;
reserve j for Nat;
definition
let M being (Matrix of ( COMPLEX ));
func M *' -> (Matrix of ( COMPLEX )) means 
:Def1: ((( len it ) = ( len M ) & ( width it ) = ( width M )) & (for i,j being Nat holds ([ i,j ] in ( Indices M ) implies ( it * (i,j) ) = ( ( M * (i,j) ) *' ))));
existence
proof
deffunc F(Nat,Nat) = ( ( M * ($1,$2) ) *' );
consider M1 being (Matrix of ( len M ),( width M ),( COMPLEX )) such that A1: (for i holds (for j holds ([ i,j ] in ( Indices M1 ) implies ( M1 * (i,j) ) = F(i,j)))) from MATRIX_1:sch 1;
take M1;
A2: ( len M1 ) = ( len M ) by MATRIX_1:def 2;
A3:now
per cases ;
case A4: ( len M ) = ( 0 );
then ( width M1 ) = ( 0 ) by A2,MATRIX_1:def 3;
hence ( width M1 ) = ( width M ) by A4,MATRIX_1:def 3;
end;
case ( len M ) > ( 0 );
hence ( width M1 ) = ( width M ) by MATRIX_1:23;
end;
end;
( dom M ) = ( dom M1 ) by A2,FINSEQ_3:29;
hence thesis by A1,A3,MATRIX_1:def 2;
end;
uniqueness
proof
let M1 being (Matrix of ( COMPLEX ));
let M2 being (Matrix of ( COMPLEX ));
assume that
A5: ( len M1 ) = ( len M )
and
A6: ( width M1 ) = ( width M )
and
A7: (for i holds (for j holds ([ i,j ] in ( Indices M ) implies ( M1 * (i,j) ) = ( ( M * (i,j) ) *' ))))
and
A8: ( len M2 ) = ( len M )
and
A9: ( width M2 ) = ( width M )
and
A10: (for i holds (for j holds ([ i,j ] in ( Indices M ) implies ( M2 * (i,j) ) = ( ( M * (i,j) ) *' ))));
now
let i;
let j;
assume A11: [ i,j ] in ( Indices M1 );
A12: ( dom M1 ) = ( dom M ) by A5,FINSEQ_3:29;
hence ( M1 * (i,j) ) = ( ( M * (i,j) ) *' ) by A6,A7,A11
.= ( M2 * (i,j) ) by A6,A10,A11,A12;
end;
hence thesis by A5,A6,A8,A9,MATRIX_1:21;
end;
end;
