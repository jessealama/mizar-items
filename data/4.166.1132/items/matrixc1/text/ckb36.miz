environ
vocabularies NUMBERS,NAT_1,SUBSET_1,FINSEQ_2,MATRIX_1,ARYTM_3,FINSEQ_1,TREES_1,RELAT_1,CARD_1,XXREAL_0,ZFMISC_1,XCMPLX_0,ORDINAL1,COMPLFLD,MATRIX_5,ARYTM_1,COMPLEX1,QC_LANG1,FUNCT_1,RVSUM_1,BINOP_2,TARSKI,XBOOLE_0,CARD_3,INCSP_1,FUNCOP_1,SETWISEO,ORDINAL4,PARTFUN1,MATRIXC1;
notations TARSKI,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,ZFMISC_1,NAT_1,NAT_D,PARTFUN1,BINOP_1,FUNCOP_1,FINSEQ_1,FINSEQOP,SEQ_4,COMPLEX1,RVSUM_1,FINSEQ_2,BINOP_2,ORDINAL1,MATRIX_5,MATRIX_1,MATRIX_3,MATRIX_4,RLVECT_1,COMPLSP2,SETWOP_2,COMPLFLD,STRUCT_0,GROUP_1,SEQ_1,CKB1,CKB17,CKB18,CKB19,CKB20,CKB21,CKB24,CKB27;
definitions MATRIX_1,RVSUM_1,VALUED_1,CKB1,CKB17,CKB18,CKB19,CKB20,CKB21,CKB24;
theorems FINSEQ_1,FUNCT_1,NAT_1,MATRIX_1,FINSEQ_2,COMPLEX1,BINOP_2,FINSEQ_3,XCMPLX_0,ZFMISC_1,SEQ_4,MATRIX_2,FINSEQOP,COMPLSP2,FUNCOP_1,FUNCT_2,FINSOP_1,SETWOP_2,FINSEQ_5,XREAL_1,MATRIX_3,COMPLFLD,MATRIX_4,MATRIX_5,NUMBERS,XBOOLE_1,ORDINAL1,PARTFUN1,XXREAL_0,XREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35;
schemes MATRIX_1,FINSEQ_2,FINSEQ_1,FUNCT_2,NAT_1;
registrations XBOOLE_0,FUNCT_1,FUNCT_2,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,BINOP_2,MEMBERED,FINSEQ_2,COMPLFLD,MATRIX_1,VALUED_0,RELSET_1,CARD_1,FINSEQ_1;
constructors PARTFUN1,SETWISEO,XXREAL_0,NAT_1,FINSOP_1,BINARITH,MATRIX_3,MATRIX_4,MATRIX_5,SEQ_4,SEQ_1,BINOP_2,BINOP_1,RVSUM_1,NAT_D,RELSET_1,COMPLSP2,CKB1,CKB17,CKB18,CKB19,CKB20,CKB21,CKB24,CKB27;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
theorem
Th28: (for x,y being (FinSequence of ( COMPLEX )) holds (( len x ) = ( len y ) implies ( ( mlt (x,y) ) *' ) = ( mlt (( x *' ),( y *' )) )))
proof
let x being (FinSequence of ( COMPLEX )),y being (FinSequence of ( COMPLEX ));
A1: ( len ( ( mlt (x,y) ) *' ) ) = ( len ( mlt (x,y) ) ) by COMPLSP2:def 1;
A2: ( len ( x *' ) ) = ( len x ) by COMPLSP2:def 1;
assume A3: ( len x ) = ( len y );
A4: (for i being Nat holds ((1 <= i & i <= ( len ( ( mlt (x,y) ) *' ) )) implies ( ( ( mlt (x,y) ) *' ) . i ) = ( ( mlt (( x *' ),( y *' )) ) . i )))
proof
let i being Nat;
( ( ( mlt (x,y) ) *' ) . i ) = ( ( ( mlt (y,( ( x *' ) *' )) ) *' ) . i ) by COMPLSP2:22
.= ( ( mlt (( x *' ),( y *' )) ) . i ) by A3,A2,CKB33:1;
hence thesis;
end;
( len ( y *' ) ) = ( len y ) by COMPLSP2:def 1;
then ( len ( mlt (( x *' ),( y *' )) ) ) = ( len ( x *' ) ) by A3,A2,FINSEQ_2:72;
then ( len ( ( mlt (x,y) ) *' ) ) = ( len ( mlt (( x *' ),( y *' )) ) ) by A3,A1,A2,FINSEQ_2:72;
hence thesis by A4,FINSEQ_1:14;
end;
