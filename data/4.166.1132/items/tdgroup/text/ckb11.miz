environ
vocabularies SUBSET_1,VECTSP_1,ARYTM_3,NUMBERS,REAL_1,SUPINF_2,XBOOLE_0,ALGSTR_0,STRUCT_0,RLVECT_1,PBOOLE,RELAT_1,ZFMISC_1,ANALOAF,CARD_1,ARYTM_1,TDGROUP;
notations TARSKI,ZFMISC_1,SUBSET_1,NUMBERS,REAL_1,STRUCT_0,ALGSTR_0,ANALOAF,RELSET_1,BINOP_2,RLVECT_1,VECTSP_1,CKB3,CKB7,CKB8,CKB10;
definitions VECTSP_1,STRUCT_0,CKB3;
theorems VECTSP_1,RELAT_1,ZFMISC_1,DOMAIN_1,RLVECT_1,ANALOAF,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB9;
schemes RELSET_1;
registrations RELSET_1,STRUCT_0,VECTSP_1,ANALOAF,REAL_1,MEMBERED,CKB5,CKB6;
constructors BINOP_2,ANALOAF,REAL_1,DOMAIN_1,VECTSP_1,MEMBERED,CKB3;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve ADG for Uniquely_Two_Divisible_Group;
reserve a for (Element of ADG);
reserve b for (Element of ADG);
reserve c for (Element of ADG);
reserve d for (Element of ADG);
reserve a9 for (Element of ADG);
reserve b9 for (Element of ADG);
reserve c9 for (Element of ADG);
reserve x for set;
reserve y for set;
definition
let ADG being non  empty addLoopStr;
func CONGRD ADG -> (Relation of [: (the carrier of ADG),(the carrier of ADG) :]) means 
:Def4: (for a,b,c,d being (Element of ADG) holds ([ [ a,b ],[ c,d ] ] in it iff ( a # d ) = ( b # c )));
existence
proof
set X = (the carrier of ADG);
set XX = [: X,X :];
defpred X[ set,set ]
 means
(ex a,b,c,d being (Element of X) st (($1 = [ a,b ] & $2 = [ c,d ]) & ( a # d ) = ( b # c )));
consider P being (Relation of XX,XX) such that A1: (for x holds (for y holds ([ x,y ] in P iff ((x in XX & y in XX) & X[ x,y ])))) from RELSET_1:sch 1;
take P;
let a being (Element of X);
let b being (Element of X);
let c being (Element of X);
let d being (Element of X);
A2: ([ [ a,b ],[ c,d ] ] in P implies ( a # d ) = ( b # c ))
proof
assume [ [ a,b ],[ c,d ] ] in P;
then consider a9,b9,c9,d9 being (Element of X) such that A3: [ a,b ] = [ a9,b9 ] and A4: [ c,d ] = [ c9,d9 ] and A5: ( a9 # d9 ) = ( b9 # c9 ) by A1;
A6: c = c9 by A4,ZFMISC_1:27;
(a = a9 & b = b9) by A3,ZFMISC_1:27;
hence thesis by A4,A5,A6,ZFMISC_1:27;
end;
([ a,b ] in XX & [ c,d ] in XX) by ZFMISC_1:def 2;
hence thesis by A1,A2;
end;
uniqueness
proof
set X = (the carrier of ADG);
set XX = [: X,X :];
let P being (Relation of [: X,X :]);
let Q being (Relation of [: X,X :]);
assume that
A7: (for a,b,c,d being (Element of X) holds ([ [ a,b ],[ c,d ] ] in P iff ( a # d ) = ( b # c )))
and
A8: (for a,b,c,d being (Element of X) holds ([ [ a,b ],[ c,d ] ] in Q iff ( a # d ) = ( b # c )));
(for x,y being set holds ([ x,y ] in P iff [ x,y ] in Q))
proof
let x;
let y;
A9:now
assume A10: [ x,y ] in Q;
then x in XX by ZFMISC_1:87;
then consider a,b being (Element of ADG) such that A11: x = [ a,b ] by DOMAIN_1:1;
y in XX by A10,ZFMISC_1:87;
then consider c,d being (Element of ADG) such that A12: y = [ c,d ] by DOMAIN_1:1;
([ x,y ] in Q iff ( a # d ) = ( b # c )) by A8,A11,A12;
hence [ x,y ] in P by A7,A10,A11,A12;
end;
now
assume A13: [ x,y ] in P;
then x in XX by ZFMISC_1:87;
then consider a,b being (Element of ADG) such that A14: x = [ a,b ] by DOMAIN_1:1;
y in XX by A13,ZFMISC_1:87;
then consider c,d being (Element of ADG) such that A15: y = [ c,d ] by DOMAIN_1:1;
([ x,y ] in P iff ( a # d ) = ( b # c )) by A7,A14,A15;
hence [ x,y ] in Q by A8,A13,A14,A15;
end;
hence thesis by A9;
end;
hence thesis by RELAT_1:def 2;
end;
end;
