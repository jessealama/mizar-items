environ
vocabularies SUBSET_1,VECTSP_1,ARYTM_3,NUMBERS,REAL_1,SUPINF_2,XBOOLE_0,ALGSTR_0,STRUCT_0,RLVECT_1,PBOOLE,RELAT_1,ZFMISC_1,ANALOAF,CARD_1,ARYTM_1,TDGROUP;
notations TARSKI,ZFMISC_1,SUBSET_1,NUMBERS,REAL_1,STRUCT_0,ALGSTR_0,ANALOAF,RELSET_1,BINOP_2,RLVECT_1,VECTSP_1,CKB3,CKB7,CKB8,CKB10,CKB11,CKB12,CKB15;
definitions VECTSP_1,STRUCT_0,CKB3,CKB11,CKB12,CKB15;
theorems VECTSP_1,RELAT_1,ZFMISC_1,DOMAIN_1,RLVECT_1,ANALOAF,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB9,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23;
schemes RELSET_1;
registrations RELSET_1,STRUCT_0,VECTSP_1,ANALOAF,REAL_1,MEMBERED,CKB5,CKB6,CKB13;
constructors BINOP_2,ANALOAF,REAL_1,DOMAIN_1,VECTSP_1,MEMBERED,CKB3,CKB11,CKB12,CKB15;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve ADG for Uniquely_Two_Divisible_Group;
reserve a for (Element of ADG);
reserve b for (Element of ADG);
reserve c for (Element of ADG);
reserve b9 for (Element of ADG);
theorem
Th18: ((a,b ==> b,c & a,b9 ==> b9,c) implies b = b9)
proof
assume (a,b ==> b,c & a,b9 ==> b9,c);
then (( a + c ) = ( b + b ) & ( a + c ) = ( b9 + b9 )) by CKB16:1;
then ( ( b + ( - b9 ) ) + b ) = ( ( b9 + b9 ) + ( - b9 ) ) by RLVECT_1:def 3
.= ( b9 + ( b9 + ( - b9 ) ) ) by RLVECT_1:def 3
.= ( b9 + ( 0. ADG ) ) by RLVECT_1:5
.= b9 by RLVECT_1:4;
then A1: ( ( b + ( - b9 ) ) + ( b + ( - b9 ) ) ) = ( b9 + ( - b9 ) ) by RLVECT_1:def 3
.= ( 0. ADG ) by RLVECT_1:5;
b9 = ( ( 0. ADG ) + b9 ) by RLVECT_1:4
.= ( ( b + ( - b9 ) ) + b9 ) by A1,VECTSP_1:def 18
.= ( b + ( ( - b9 ) + b9 ) ) by RLVECT_1:def 3
.= ( b + ( 0. ADG ) ) by RLVECT_1:5
.= b by RLVECT_1:4;
hence thesis;
end;
