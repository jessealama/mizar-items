environ
vocabularies SUBSET_1,VECTSP_1,ARYTM_3,NUMBERS,REAL_1,SUPINF_2,XBOOLE_0,ALGSTR_0,STRUCT_0,RLVECT_1,PBOOLE,RELAT_1,ZFMISC_1,ANALOAF,CARD_1,ARYTM_1,TDGROUP;
notations TARSKI,ZFMISC_1,SUBSET_1,NUMBERS,REAL_1,STRUCT_0,ALGSTR_0,ANALOAF,RELSET_1,BINOP_2,RLVECT_1,VECTSP_1,CKB3,CKB7,CKB8,CKB10,CKB11,CKB12,CKB15;
definitions VECTSP_1,STRUCT_0,CKB3,CKB11,CKB12,CKB15;
theorems VECTSP_1,RELAT_1,ZFMISC_1,DOMAIN_1,RLVECT_1,ANALOAF,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB9,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
schemes RELSET_1;
registrations RELSET_1,STRUCT_0,VECTSP_1,ANALOAF,REAL_1,MEMBERED,CKB5,CKB6,CKB13;
constructors BINOP_2,ANALOAF,REAL_1,DOMAIN_1,VECTSP_1,MEMBERED,CKB3,CKB11,CKB12,CKB15;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve ADG for Uniquely_Two_Divisible_Group;
reserve a for (Element of ADG);
reserve b for (Element of ADG);
reserve c for (Element of ADG);
reserve a9 for (Element of ADG);
reserve b9 for (Element of ADG);
reserve c9 for (Element of ADG);
theorem
Th16: ((a,b ==> a9,b9 & a,c ==> a9,c9) implies b,c ==> b9,c9)
proof
assume (a,b ==> a9,b9 & a,c ==> a9,c9);
then (( a + b9 ) = ( b + a9 ) & ( a + c9 ) = ( c + a9 )) by CKB16:1;
then ( b + ( a9 + ( a + c9 ) ) ) = ( ( c + a9 ) + ( a + b9 ) ) by RLVECT_1:def 3
.= ( c + ( a9 + ( a + b9 ) ) ) by RLVECT_1:def 3;
then ( b + ( ( a9 + a ) + c9 ) ) = ( c + ( a9 + ( a + b9 ) ) ) by RLVECT_1:def 3
.= ( c + ( ( a9 + a ) + b9 ) ) by RLVECT_1:def 3;
then ( ( b + c9 ) + ( a9 + a ) ) = ( c + ( b9 + ( a9 + a ) ) ) by RLVECT_1:def 3
.= ( ( c + b9 ) + ( a9 + a ) ) by RLVECT_1:def 3;
then ( b + c9 ) = ( c + b9 ) by RLVECT_1:8;
hence thesis by CKB16:1;
end;
