environ
vocabularies NUMBERS,SUBSET_1,XBOOLE_0,ORDERS_1,ORDERS_2,WELLORD1,FINSET_1,XXREAL_0,TARSKI,STRUCT_0,FINSUB_1,SETFAM_1,RELAT_2,RELAT_1,CARD_1,PRE_POLY,FINSEQ_1,PROB_1,PBOOLE,NAT_1,FUNCT_1,ARYTM_3,FUNCOP_1,FUNCT_2,QC_LANG1,ORDINAL2,FINSEQ_2,PARTFUN1,TRIANG_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,RELAT_1,RELAT_2,SETFAM_1,ORDERS_1,DOMAIN_1,NAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,FINSEQ_1,FINSEQ_2,FINSUB_1,STRUCT_0,WELLORD1,SEQM_3,PBOOLE,ORDERS_2,FINSEQOP,FUNCOP_1,XXREAL_0,PRE_POLY;
definitions RELAT_2,TARSKI,SETFAM_1,FUNCT_1,SEQM_3,WELLORD1,ORDERS_2,FINSEQ_2,SUBSET_1;
theorems RELAT_1,ORDERS_2,RELAT_2,ZFMISC_1,TARSKI,SUBSET_1,ORDERS_1,FINSUB_1,NAT_1,FUNCT_2,PBOOLE,FUNCT_1,FINSEQ_1,CARD_2,FINSEQ_4,FINSEQ_2,FUNCOP_1,SEQM_3,SETFAM_1,XBOOLE_0,XBOOLE_1,XXREAL_0,ORDINAL1,PARTFUN1,PRE_POLY,CKB2;
schemes PBOOLE,CLASSES1,MSSUBFAM,PRE_POLY;
registrations XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,ORDINAL1,FINSET_1,FINSUB_1,NUMBERS,XXREAL_0,NAT_1,FINSEQ_1,STRUCT_0,ORDERS_2,MEMBERED,VALUED_0,CARD_1,RELSET_1,FUNCT_1,FUNCT_2,PRE_POLY,CKB1;
constructors SETFAM_1,WELLORD2,DOMAIN_1,FUNCT_3,FINSUB_1,XXREAL_0,NAT_1,TOLER_1,FINSEQOP,PBOOLE,ORDERS_2,SEQM_3,SEQ_1,XREAL_0,MEMBERED,RELSET_1,PRE_POLY;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
(for F being non empty Poset holds (for A being (Subset of F) holds (((A is  finite & A <> ( {} )) & (for B,C being (Element of F) holds ((B in A & C in A) implies (B <= C or C <= B)))) implies (ex m being (Element of F) st (m in A & (for C being (Element of F) holds (C in A implies m <= C)))))))
proof
let F being non empty Poset;
defpred P[ set ]
 means
($1 <> ( {} ) implies (ex m being (Element of F) st (m in $1 & (for C being (Element of F) holds (C in $1 implies m <= C)))));
let A being (Subset of F);
assume that
A1: A is  finite
and
A2: A <> ( {} )
and
A3: (for B,C being (Element of F) holds ((B in A & C in A) implies (B <= C or C <= B)));
A4:now
let x being (Element of F);
let B being (Subset of F);
assume that
A5: x in A
and
A6: B c= A
and
A7: P[ B ];
reconsider x9 = x as (Element of F);
now
per cases ;
suppose A8: (not (ex y being (Element of F) st (y in B & y <= x9)));

assume ( B \/ { x } ) <> ( {} );
take m = x9;
x in { x } by TARSKI:def 1;
hence m in ( B \/ { x } ) by XBOOLE_0:def 3;
let C being (Element of F);
assume C in ( B \/ { x } );
then A9: (C in B or C in { x }) by XBOOLE_0:def 3;
then ((not C <= x9) or C = x) by A8,TARSKI:def 1;
hence m <= C by A3,A5,A6,A9,TARSKI:def 1;
end;
suppose A10: (ex y being (Element of F) st (y in B & y <= x9));

assume ( B \/ { x } ) <> ( {} );
consider y being (Element of F) such that A11: y in B and A12: y <= x9 by A10;
consider m being (Element of F) such that A13: m in B and A14: (for C being (Element of F) holds (C in B implies m <= C)) by A7,A11;
take m;
thus m in ( B \/ { x } ) by A13,XBOOLE_0:def 3;
let C being (Element of F);
assume C in ( B \/ { x } );
then A15: (C in B or C in { x }) by XBOOLE_0:def 3;
m <= y by A11,A14;
then m <= x9 by A12,ORDERS_2:3;
hence m <= C by A14,A15,TARSKI:def 1;
end;
end;
hence P[ ( B \/ { x } ) ];
end;
A16: P[ ( {} (the carrier of F) ) ];
P[ A ] from PRE_POLY:sch 2(A1,A16,A4);
hence thesis by A2;
end;
