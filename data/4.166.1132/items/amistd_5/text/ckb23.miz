environ
vocabularies NUMBERS,ORDINAL1,SETFAM_1,ARYTM_1,ARYTM_3,CARD_1,SUBSET_1,AMI_1,XBOOLE_0,RELAT_1,TARSKI,FUNCOP_1,GLIB_000,GOBOARD5,AMISTD_1,UNIALG_1,FUNCT_1,CARD_5,STRUCT_0,VALUED_1,FSM_1,FUNCT_4,TURING_1,CIRCUIT2,AMISTD_2,PARTFUN1,SCMNORM,NAT_1,RELOC,PBOOLE,AMISTD_5,COMPOS_1,MSUALG_1,FINSET_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,MCART_1,SETFAM_1,MEMBERED,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_4,PBOOLE,FINSET_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,CARD_3,FINSEQ_1,FUNCOP_1,NAT_D,FUNCT_7,VALUED_0,VALUED_1,AFINSQ_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,CKB3,CKB5,CKB7,CKB19;
definitions RELAT_1,FUNCT_1,WELLORD2,FUNCT_7,COMPOS_1,EXTPRO_1,AMISTD_1,XBOOLE_0,FUNCOP_1,CARD_3,NAT_1,AFINSQ_1,MCART_1,VALUED_1,TARSKI,AMISTD_2,STRUCT_0,MEMSTR_0,CKB3,CKB5,CKB7,CKB19;
theorems AMISTD_1,FUNCOP_1,FUNCT_1,FUNCT_4,GRFUNC_1,RELAT_1,TARSKI,ZFMISC_1,XBOOLE_0,XBOOLE_1,PBOOLE,PARTFUN1,RECDEF_2,VALUED_1,COMPOS_1,EXTPRO_1,ORDINAL1,NAT_D,AMISTD_2,RELSET_1,PRE_CIRC,MEMSTR_0,CKB1,CKB3,CKB5,CKB6,CKB7,CKB8,CKB15,CKB16,CKB18,CKB19,CKB21,CKB22;
schemes NAT_1;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,CARD_3,REALSET1,FUNCT_7,STRUCT_0,AMISTD_1,CARD_1,FUNCT_4,XXREAL_2,RELSET_1,GRFUNC_1,FUNCT_2,ORDINAL1,AFINSQ_1,VALUED_1,VALUED_0,COMPOS_1,EXTPRO_1,XCMPLX_0,REAL_1,PBOOLE,AMISTD_2,MEMSTR_0,CKB2,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB17,CKB20;
constructors WELLORD2,REALSET1,NAT_D,AMISTD_1,XXREAL_2,PRE_POLY,AFINSQ_1,ORDINAL4,RECDEF_2,VALUED_1,AMISTD_2,PBOOLE,RELSET_1,FUNCT_7,FUNCT_4,MEMSTR_0,CKB3,CKB5,CKB7,CKB19;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
reserve N for  with_non-empty_elements non empty set;
reserve S for  relocable  IC-recognized  proper-halt  regular  homogeneous  J/A-independent  halting  standard-ins  IC-Ins-separated non empty AMI-Struct over N;
theorem
Th9: (S is  CurIns-recognized implies (for k being (Element of ( NAT )) holds (for q being non halt-free  finite (the Instructions of S) -valued ( NAT ) -defined Function holds (for p being q -autonomic (FinPartState of S) holds (( IC S ) in ( dom p ) implies (for s being (State of S) holds (( IncIC (p,k) ) c= s implies (for P being (Instruction-Sequence of S) holds (( Reloc (q,k) ) c= P implies (for i being (Element of ( NAT )) holds ( Comput (P,s,i) ) = ( IncIC (( Comput (( P +* q ),( s +* p ),i) ),k) )))))))))))
proof
assume A1: S is  CurIns-recognized;
let k being (Element of ( NAT ));
let q being non halt-free  finite (the Instructions of S) -valued ( NAT ) -defined Function;
let p being q -autonomic (FinPartState of S);
assume that
A2: ( IC S ) in ( dom p );
B2: ( IC S ) in ( dom p ) by A2;
let s being (State of S);
assume that
A4: ( IncIC (p,k) ) c= s;
let P being (Instruction-Sequence of S);
assume that
A5: ( Reloc (q,k) ) c= P;
defpred Z[ (Element of ( NAT )) ]
 means
( Comput (P,s,$1) ) = ( IncIC (( Comput (( P +* q ),( s +* p ),$1) ),k) );
A6: (for i being (Element of ( NAT )) holds (Z[ i ] implies Z[ ( i + 1 ) ]))
proof
let i being (Element of ( NAT ));
assume that
A7: ( Comput (P,s,i) ) = ( IncIC (( Comput (( P +* q ),( s +* p ),i) ),k) );
reconsider kk = ( IC ( Comput (( P +* q ),( s +* p ),i) ) ) as (Element of ( NAT ));
( dom ( Start-At (( ( IC ( Comput (( P +* q ),( s +* p ),i) ) ) + k ),S) ) ) = { ( IC S ) } by FUNCOP_1:13;
then A8: ( IC S ) in ( dom ( Start-At (( ( IC ( Comput (( P +* q ),( s +* p ),i) ) ) + k ),S) ) ) by TARSKI:def 1;
A10: p c= ( s +* p ) by FUNCT_4:25;
A11: q c= ( P +* q ) by FUNCT_4:25;
(not p is  empty) by A2;
then A12: ( IC ( Comput (( P +* q ),( s +* p ),i) ) ) in ( dom q ) by A1,CKB19:def 1,A10,A11;
then A13: ( IC ( Comput (( P +* q ),( s +* p ),i) ) ) in ( dom ( IncAddr (q,k) ) ) by COMPOS_1:def 19;
A14: ( ( IC ( Comput (( P +* q ),( s +* p ),i) ) ) + k ) in ( dom ( Reloc (q,k) ) ) by A12,COMPOS_1:46;
reconsider kk = ( IC ( Comput (( P +* q ),( s +* p ),i) ) ) as (Element of ( NAT ));
A15: ( IC ( Comput (P,s,i) ) ) = ( IC ( Comput (P,s,i) ) )
.= ( IC ( IncIC (( Comput (( P +* q ),( s +* p ),i) ),k) ) ) by A7
.= ( IC ( Start-At (( ( IC ( Comput (( P +* q ),( s +* p ),i) ) ) + k ),S) ) ) by A8,FUNCT_4:13
.= ( ( IC ( Comput (( P +* q ),( s +* p ),i) ) ) + k ) by FUNCOP_1:72;
A16: q c= ( P +* q ) by FUNCT_4:25;
A17: ( q /. kk ) = ( q . kk ) by A12,PARTFUN1:def 6;
A18: ( dom ( P +* q ) ) = ( NAT ) by PARTFUN1:def 2;
( dom P ) = ( NAT ) by PARTFUN1:def 2;
then A19: ( CurInstr (P,( Comput (P,s,i) )) ) = ( P . ( IC ( Comput (P,s,i) ) ) ) by PARTFUN1:def 6
.= ( ( Reloc (q,k) ) . ( IC ( Comput (P,s,i) ) ) ) by A5,A14,A15,GRFUNC_1:2
.= ( ( Shift (( IncAddr (q,k) ),k) ) . ( ( IC ( Comput (( P +* q ),( s +* p ),i) ) ) + k ) ) by A15,COMPOS_1:34
.= ( ( IncAddr (q,k) ) . kk ) by A13,VALUED_1:def 12
.= ( IncAddr (( q /. kk ),k) ) by A12,COMPOS_1:def 19
.= ( IncAddr (( ( P +* q ) . ( IC ( Comput (( P +* q ),( s +* p ),i) ) ) ),k) ) by A12,A17,A16,GRFUNC_1:2
.= ( IncAddr (( CurInstr (( P +* q ),( Comput (( P +* q ),( s +* p ),i) )) ),k) ) by A18,PARTFUN1:def 6;
thus ( Comput (P,s,( i + 1 )) ) = ( Following (P,( Comput (P,s,i) )) ) by EXTPRO_1:3
.= ( Exec (( IncAddr (( CurInstr (( P +* q ),( Comput (( P +* q ),( s +* p ),i) )) ),k) ),( IncIC (( Comput (( P +* q ),( s +* p ),i) ),k) )) ) by A7,A19
.= ( IncIC (( Following (( P +* q ),( Comput (( P +* q ),( s +* p ),i) )) ),k) ) by CKB15:1
.= ( IncIC (( Comput (( P +* q ),( s +* p ),( i + 1 )) ),k) ) by EXTPRO_1:3;
end;
set IP = ( Start-At (( IC p ),S) );
A21: ( dom ( Start-At (( IC p ),S) ) ) = { ( IC S ) } by FUNCOP_1:13;
B22: ( Start-At (( ( IC p ) + k ),S) ) c= ( IncIC (p,k) ) by MEMSTR_0:55;
B23: ( IC ( Comput (( P +* q ),( s +* p ),( 0 )) ) ) = ( ( s +* p ) . ( IC S ) ) by EXTPRO_1:2
.= ( IC p ) by B2,FUNCT_4:13
.= ( IC p );
set DP = ( DataPart p );
( DataPart ( IncIC (p,k) ) ) c= ( IncIC (p,k) ) by RELAT_1:59;
then ( DataPart ( IncIC (p,k) ) ) c= s by A4,XBOOLE_1:1;
then A29: ( DataPart p ) c= s by MEMSTR_0:51;
set PR = ( Reloc (q,k) );
set IS = ( Start-At (( ( IC ( Comput (( P +* q ),( s +* p ),( 0 )) ) ) + k ),S) );
A30: ( dom ( Start-At (( ( IC ( Comput (( P +* q ),( s +* p ),( 0 )) ) ) + k ),S) ) ) = { ( IC S ) } by FUNCOP_1:13;
( Comput (P,s,( 0 )) ) = s by EXTPRO_1:2
.= ( s +* IS ) by B23,A4,B22,FUNCT_4:98,XBOOLE_1:1
.= ( ( s +* DP ) +* IS ) by A29,FUNCT_4:98
.= ( ( ( s +* DP ) +* IP ) +* IS ) by A30,A21,FUNCT_4:74
.= ( ( s +* ( DP +* IP ) ) +* IS ) by FUNCT_4:14
.= ( ( s +* p ) +* IS ) by A2,MEMSTR_0:26
.= ( IncIC (( Comput (( P +* q ),( s +* p ),( 0 )) ),k) ) by EXTPRO_1:2;
then A31: Z[ ( 0 ) ];
thus (for i being (Element of ( NAT )) holds Z[ i ]) from NAT_1:sch 1(A31,A6);
end;
