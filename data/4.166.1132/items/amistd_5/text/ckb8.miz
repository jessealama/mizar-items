environ
vocabularies NUMBERS,ORDINAL1,SETFAM_1,ARYTM_1,ARYTM_3,CARD_1,SUBSET_1,AMI_1,XBOOLE_0,RELAT_1,TARSKI,FUNCOP_1,GLIB_000,GOBOARD5,AMISTD_1,UNIALG_1,FUNCT_1,CARD_5,STRUCT_0,VALUED_1,FSM_1,FUNCT_4,TURING_1,CIRCUIT2,AMISTD_2,PARTFUN1,SCMNORM,NAT_1,RELOC,PBOOLE,AMISTD_5,COMPOS_1,MSUALG_1,FINSET_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,MCART_1,SETFAM_1,MEMBERED,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_4,PBOOLE,FINSET_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,CARD_3,FINSEQ_1,FUNCOP_1,NAT_D,FUNCT_7,VALUED_0,VALUED_1,AFINSQ_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,CKB3,CKB5,CKB7;
definitions RELAT_1,FUNCT_1,WELLORD2,FUNCT_7,COMPOS_1,EXTPRO_1,AMISTD_1,XBOOLE_0,FUNCOP_1,CARD_3,NAT_1,AFINSQ_1,MCART_1,VALUED_1,TARSKI,AMISTD_2,STRUCT_0,MEMSTR_0,CKB3,CKB5,CKB7;
theorems AMISTD_1,FUNCOP_1,FUNCT_1,FUNCT_4,GRFUNC_1,RELAT_1,TARSKI,ZFMISC_1,XBOOLE_0,XBOOLE_1,PBOOLE,PARTFUN1,RECDEF_2,VALUED_1,COMPOS_1,EXTPRO_1,ORDINAL1,NAT_D,AMISTD_2,RELSET_1,PRE_CIRC,MEMSTR_0,CKB1,CKB3,CKB5,CKB6,CKB7;
schemes NAT_1;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,CARD_3,REALSET1,FUNCT_7,STRUCT_0,AMISTD_1,CARD_1,FUNCT_4,XXREAL_2,RELSET_1,GRFUNC_1,FUNCT_2,ORDINAL1,AFINSQ_1,VALUED_1,VALUED_0,COMPOS_1,EXTPRO_1,XCMPLX_0,REAL_1,PBOOLE,AMISTD_2,MEMSTR_0,CKB2,CKB4;
constructors WELLORD2,REALSET1,NAT_D,AMISTD_1,XXREAL_2,PRE_POLY,AFINSQ_1,ORDINAL4,RECDEF_2,VALUED_1,AMISTD_2,PBOOLE,RELSET_1,FUNCT_7,FUNCT_4,MEMSTR_0,CKB3,CKB5,CKB7;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
theorem
Th3: (for N being  with_non-empty_elements non  empty set holds (for S being  halting  IC-Ins-separated non  empty AMI-Struct over N holds (S is  IC-recognized iff (for q being non  halt-free  finite (the Instructions of S) -valued ( NAT ) -defined Function holds (for p being q -autonomic (FinPartState of S) holds (( DataPart p ) <> ( {} ) implies ( IC S ) in ( dom p )))))))
proof
let N being  with_non-empty_elements non  empty set;
let S being  halting  IC-Ins-separated non  empty AMI-Struct over N;
thus (S is  IC-recognized implies (for q being non  halt-free  finite (the Instructions of S) -valued ( NAT ) -defined Function holds (for p being q -autonomic (FinPartState of S) holds (( DataPart p ) <> ( {} ) implies ( IC S ) in ( dom p )))))
proof
assume A1: S is  IC-recognized;
let q being non  halt-free  finite (the Instructions of S) -valued ( NAT ) -defined Function;
let p being q -autonomic (FinPartState of S);
assume ( DataPart p ) <> ( {} );
then p is non  empty;
hence thesis by A1,CKB7:def 1;
end;

assume A2: (for q being non  halt-free  finite (the Instructions of S) -valued ( NAT ) -defined Function holds (for p being q -autonomic (FinPartState of S) holds (( DataPart p ) <> ( {} ) implies ( IC S ) in ( dom p ))));
let q being non  halt-free  finite (the Instructions of S) -valued ( NAT ) -defined Function;
let p being q -autonomic (FinPartState of S);
A3: ( dom p ) c= ( { ( IC S ) } \/ ( dom ( DataPart p ) ) ) by MEMSTR_0:32;
assume A4: p is non  empty;
per cases ;
suppose A5: ( IC S ) in ( dom p );

thus ( IC S ) in ( dom p ) by A5;
end;
suppose (not ( IC S ) in ( dom p ));

then { ( IC S ) } misses ( dom p ) by ZFMISC_1:50;
then ( dom ( DataPart p ) ) is non  empty by A4,A3,XBOOLE_1:3,XBOOLE_1:73;
then ( DataPart p ) is non  empty;
hence ( IC S ) in ( dom p ) by A2;
end;
end;
