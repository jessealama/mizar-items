environ
vocabularies NUMBERS,ORDINAL1,SETFAM_1,ARYTM_1,ARYTM_3,CARD_1,SUBSET_1,AMI_1,XBOOLE_0,RELAT_1,TARSKI,FUNCOP_1,GLIB_000,GOBOARD5,AMISTD_1,UNIALG_1,FUNCT_1,CARD_5,STRUCT_0,VALUED_1,FSM_1,FUNCT_4,TURING_1,CIRCUIT2,AMISTD_2,PARTFUN1,SCMNORM,NAT_1,RELOC,PBOOLE,AMISTD_5,COMPOS_1,MSUALG_1,FINSET_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,MCART_1,SETFAM_1,MEMBERED,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_4,PBOOLE,FINSET_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,CARD_3,FINSEQ_1,FUNCOP_1,NAT_D,FUNCT_7,VALUED_0,VALUED_1,AFINSQ_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMISTD_1,AMISTD_2,CKB3,CKB5,CKB7,CKB19;
definitions RELAT_1,FUNCT_1,WELLORD2,FUNCT_7,COMPOS_1,EXTPRO_1,AMISTD_1,XBOOLE_0,FUNCOP_1,CARD_3,NAT_1,AFINSQ_1,MCART_1,VALUED_1,TARSKI,AMISTD_2,STRUCT_0,MEMSTR_0,CKB3,CKB5,CKB7,CKB19;
theorems AMISTD_1,FUNCOP_1,FUNCT_1,FUNCT_4,GRFUNC_1,RELAT_1,TARSKI,ZFMISC_1,XBOOLE_0,XBOOLE_1,PBOOLE,PARTFUN1,RECDEF_2,VALUED_1,COMPOS_1,EXTPRO_1,ORDINAL1,NAT_D,AMISTD_2,RELSET_1,PRE_CIRC,MEMSTR_0,CKB1,CKB3,CKB5,CKB6,CKB7,CKB8,CKB15,CKB16,CKB18,CKB19,CKB21,CKB22,CKB23;
schemes NAT_1;
registrations XBOOLE_0,SETFAM_1,RELAT_1,FUNCT_1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,CARD_3,REALSET1,FUNCT_7,STRUCT_0,AMISTD_1,CARD_1,FUNCT_4,XXREAL_2,RELSET_1,GRFUNC_1,FUNCT_2,ORDINAL1,AFINSQ_1,VALUED_1,VALUED_0,COMPOS_1,EXTPRO_1,XCMPLX_0,REAL_1,PBOOLE,AMISTD_2,MEMSTR_0,CKB2,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB17,CKB20;
constructors WELLORD2,REALSET1,NAT_D,AMISTD_1,XXREAL_2,PRE_POLY,AFINSQ_1,ORDINAL4,RECDEF_2,VALUED_1,AMISTD_2,PBOOLE,RELSET_1,FUNCT_7,FUNCT_4,MEMSTR_0,CKB3,CKB5,CKB7,CKB19;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
reserve N for  with_non-empty_elements non empty set;
reserve S for  relocable  IC-recognized  proper-halt  regular  homogeneous  J/A-independent  halting  standard-ins  IC-Ins-separated non empty AMI-Struct over N;
reserve m for (Element of ( NAT ));
reserve j for (Element of ( NAT ));
theorem
Th10: (S is  CurIns-recognized implies (for k being (Element of ( NAT )) holds (for q being non halt-free  finite (the Instructions of S) -valued ( NAT ) -defined Function holds (for p being non empty (FinPartState of S) holds (( IC S ) in ( dom p ) implies (for s being (State of S) holds ((p c= s & ( IncIC (p,k) ) is ( Reloc (q,k) ) -autonomic) implies (for P being (Instruction-Sequence of S) holds (q c= P implies (for i being (Element of ( NAT )) holds ( Comput (P,s,i) ) = ( DecIC (( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),i) ),k) )))))))))))
proof
assume A1: S is  CurIns-recognized;
let k being (Element of ( NAT ));
let q being non halt-free  finite (the Instructions of S) -valued ( NAT ) -defined Function;
let p being non empty (FinPartState of S);
assume A3: ( IC S ) in ( dom p );
then B4: ( Start-At (( IC p ),S) ) c= p by FUNCOP_1:84;
let s being (State of S);
assume that
A5: p c= s
and
A6: ( IncIC (p,k) ) is ( Reloc (q,k) ) -autonomic;
let P being (Instruction-Sequence of S);
assume that
A7: q c= P;
defpred Z[ (Element of ( NAT )) ]
 means
( Comput (P,s,$1) ) = ( DecIC (( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),$1) ),k) );
A9: (for i being (Element of ( NAT )) holds (Z[ i ] implies Z[ ( i + 1 ) ]))
proof
reconsider pp = q as (preProgram of S);
let i being (Element of ( NAT ));
assume that
A10: ( Comput (P,s,i) ) = ( DecIC (( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),i) ),k) );
reconsider kk = ( IC ( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),i) ) ) as (Element of ( NAT ));
reconsider jk = ( IC ( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),i) ) ) as (Element of ( NAT ));
A11: ( IncIC (p,k) ) c= ( s +* ( IncIC (p,k) ) ) by FUNCT_4:25;
A12: ( Reloc (q,k) ) c= ( P +* ( Reloc (q,k) ) ) by FUNCT_4:25;
A13: ( IC ( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),i) ) ) in ( dom ( Reloc (q,k) ) ) by A6,A1,CKB19:def 1,A11,A12;
then A14: jk in { ( j + k ): j in ( dom q ) } by COMPOS_1:33;
( dom ( Start-At (( ( IC ( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),i) ) ) -' k ),S) ) ) = { ( IC S ) } by FUNCOP_1:13;
then A16: ( IC S ) in ( dom ( Start-At (( ( IC ( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),i) ) ) -' k ),S) ) ) by TARSKI:def 1;
consider j being (Element of ( NAT )) such that A17: jk = ( j + k ) and A18: j in ( dom q ) by A14;
A19: ( dom ( P +* ( Reloc (q,k) ) ) ) = ( NAT ) by PARTFUN1:def 2;
A20: ( Reloc (q,k) ) c= ( P +* ( Reloc (q,k) ) ) by FUNCT_4:25;
( dom ( Shift (pp,k) ) ) = { ( m + k ): m in ( dom pp ) } by VALUED_1:def 12;
then A21: ( j + k ) in ( dom ( Shift (q,k) ) ) by A18;
then A22: ( IncAddr (( ( Shift (q,k) ) /. kk ),k) ) = ( ( Reloc (q,k) ) . ( IC ( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),i) ) ) ) by A17,COMPOS_1:def 19
.= ( ( P +* ( Reloc (q,k) ) ) . ( IC ( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),i) ) ) ) by A13,A20,GRFUNC_1:2
.= ( CurInstr (( P +* ( Reloc (q,k) ) ),( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),i) )) ) by A19,PARTFUN1:def 6;
A23: ( ( j + k ) -' k ) = j by NAT_D:34;
A24: ( dom P ) = ( NAT ) by PARTFUN1:def 2;
A25: ( IC ( DecIC (( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),i) ),k) ) ) = ( ( Start-At (( ( IC ( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),i) ) ) -' k ),S) ) . ( IC S ) ) by A16,FUNCT_4:13
.= ( ( IC ( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),i) ) ) -' k ) by FUNCOP_1:72;
( CurInstr (P,( Comput (P,s,i) )) ) = ( P . ( IC ( Comput (P,s,i) ) ) ) by A24,PARTFUN1:def 6
.= ( q . ( IC ( Comput (P,s,i) ) ) ) by A10,A17,A18,A23,A7,A25,GRFUNC_1:2
.= ( ( Shift (q,k) ) . ( IC ( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),i) ) ) ) by A17,A18,A23,A10,A25,VALUED_1:def 12
.= ( ( Shift (q,k) ) /. kk ) by A17,A21,PARTFUN1:def 6;
then A26: (( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),( i + 1 )) ) = ( Following (( P +* ( Reloc (q,k) ) ),( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),i) )) ) & ( Exec (( CurInstr (P,( Comput (P,s,i) )) ),( DecIC (( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),i) ),k) )) ) = ( DecIC (( Following (( P +* ( Reloc (q,k) ) ),( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),i) )) ),k) )) by A17,A22,CKB16:1,EXTPRO_1:3;
thus ( Comput (P,s,( i + 1 )) ) = ( Following (P,( Comput (P,s,i) )) ) by EXTPRO_1:3
.= ( DecIC (( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),( i + 1 )) ),k) ) by A10,A26;
end;
B27: ( IC S ) in ( dom ( IncIC (p,k) ) ) by MEMSTR_0:52;
A28: ( IC ( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),( 0 )) ) ) = ( IC ( s +* ( IncIC (p,k) ) ) ) by EXTPRO_1:2
.= ( IC ( IncIC (p,k) ) ) by B27,FUNCT_4:13;
B29: ( DataPart p ) c= p by RELAT_1:59;
set DP = ( DataPart p );
set IP = ( Start-At (( ( IC p ) + k ),S) );
set PP = q;
set IS = ( Start-At (( ( IC ( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),( 0 )) ) ) -' k ),S) );
A32: ( dom ( Start-At (( ( IC p ) + k ),S) ) ) = { ( IC S ) } by FUNCOP_1:13;
set PR = ( Reloc (q,k) );
set SD = ( s | ( dom ( Reloc (q,k) ) ) );
A33: { ( IC S ) } misses ( dom ( DataPart p ) ) by MEMSTR_0:4;
A36: ( dom ( Start-At (( ( IC ( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),( 0 )) ) ) -' k ),S) ) ) = { ( IC S ) } by FUNCOP_1:13;
A41: ( dom IP ) misses ( dom DP ) by A33,FUNCOP_1:13;
A42: ( IP +* DP ) = ( DP +* IP ) by A41,FUNCT_4:35
.= ( IncIC (p,k) ) by A3,MEMSTR_0:56
.= ( IncIC (p,k) );
( Comput (P,s,( 0 )) ) = s by EXTPRO_1:2
.= ( s +* ( Start-At (( IC p ),S) ) ) by A5,B4,FUNCT_4:98,XBOOLE_1:1
.= ( s +* ( Start-At (( ( ( IC p ) + k ) -' k ),S) ) ) by NAT_D:34
.= ( s +* IS ) by A28,MEMSTR_0:53
.= ( ( s +* DP ) +* IS ) by B29,A5,FUNCT_4:98,XBOOLE_1:1
.= ( ( ( s +* DP ) +* IP ) +* IS ) by A36,A32,FUNCT_4:74
.= ( ( s +* ( DP +* IP ) ) +* IS ) by FUNCT_4:14
.= ( ( s +* ( IP +* DP ) ) +* IS ) by A32,A33,FUNCT_4:35
.= ( DecIC (( Comput (( P +* ( Reloc (q,k) ) ),( s +* ( IncIC (p,k) ) ),( 0 )) ),k) ) by A42,EXTPRO_1:2;
then A43: Z[ ( 0 ) ];
thus (for i being (Element of ( NAT )) holds Z[ i ]) from NAT_1:sch 1(A43,A9);
end;
