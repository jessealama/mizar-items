environ
vocabularies NUMBERS,FUNCT_1,RELAT_1,SETFAM_1,TARSKI,XBOOLE_0,ZFMISC_1,PROB_1,SUBSET_1,FUNCOP_1,STRUCT_0,CARD_3,ORDINAL2,NAT_1,ARYTM_3,CARD_1,XXREAL_0,SEQ_2,FINSEQ_1,EUCLID,TOPREAL1,RCOMP_1,PRE_TOPC,XREAL_0,ORDINAL1,METRIC_1,REAL_1,COMPLEX1,ARYTM_1,SEQ_1,INT_1,PCOMPS_1,FRECHET,RLVECT_3,YELLOW_8,CONNSP_2,TOPS_1,JORDAN2C,XXREAL_2,VALUED_0,MCART_1,TOPREAL2,JORDAN9,GOBOARD9,WAYBEL_7,KURATO_2;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,ZFMISC_1,XXREAL_0,XREAL_0,REAL_1,NAT_1,SETFAM_1,MCART_1,DOMAIN_1,RELAT_1,FUNCT_1,INT_1,FINSEQ_1,RELSET_1,FUNCT_2,FUNCOP_1,CARD_3,PROB_1,LIMFUNC1,VALUED_0,FUNCT_6,CKB5,CKB6,CKB7;
definitions XBOOLE_0,TARSKI,SUBSET_1,XCMPLX_0,CKB7;
theorems SETFAM_1,XBOOLE_1,SUBSET_1,NAT_1,FUNCT_2,RELSET_1,XBOOLE_0,FUNCT_1,INT_1,XREAL_0,ZFMISC_1,RELAT_1,FUNCT_6,SEQM_3,MCART_1,PROB_1,MEASURE2,XREAL_1,XXREAL_0,ORDINAL1,VALUED_0,CKB1,CKB2,CKB7;
schemes XBOOLE_0,FUNCT_2,NAT_1,SUBSET_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,ORDINAL1,FUNCT_2,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FUNCOP_1,VALUED_0,RELSET_1,CKB3,CKB4;
constructors SETFAM_1,REAL_1,PROB_1,LIMFUNC1,FUNCT_6,FINSEQ_1,DOMAIN_1,NAT_1,RELSET_1,CKB5,CKB6,CKB7;
requirements REAL,SUBSET,BOOLE,NUMERALS,ARITHM;
begin
definition
let X being set;
let F being (SetSequence of X);
func lim_sup F -> (Subset of X) means 
:Def4: (ex f being (SetSequence of X) st (it = ( meet f ) & (for n being (Element of ( NAT )) holds ( f . n ) = ( Union ( F ^\ n ) ))));
existence
proof
deffunc F((Element of ( NAT ))) = ( Union ( F ^\ $1 ) );
consider f being (SetSequence of X) such that A6: (for n being (Element of ( NAT )) holds ( f . n ) = F(n)) from FUNCT_2:sch 4;
take ( meet f );
thus thesis by A6;
end;
uniqueness
proof
let A1 being (Subset of X);
let A2 being (Subset of X);
given f1 being (SetSequence of X) such that
A7: A1 = ( meet f1 )
and
A8: (for n being (Element of ( NAT )) holds ( f1 . n ) = ( Union ( F ^\ n ) ));

given f2 being (SetSequence of X) such that
A9: A2 = ( meet f2 )
and
A10: (for n being (Element of ( NAT )) holds ( f2 . n ) = ( Union ( F ^\ n ) ));

(for n being (Element of ( NAT )) holds ( f1 . n ) = ( f2 . n ))
proof
let n being (Element of ( NAT ));
( f1 . n ) = ( Union ( F ^\ n ) ) by A8
.= ( f2 . n ) by A10;
hence thesis;
end;
hence thesis by A7,A9,FUNCT_2:63;
end;
end;
