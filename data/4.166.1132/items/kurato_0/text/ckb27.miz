environ
vocabularies NUMBERS,FUNCT_1,RELAT_1,SETFAM_1,TARSKI,XBOOLE_0,ZFMISC_1,PROB_1,SUBSET_1,FUNCOP_1,STRUCT_0,CARD_3,ORDINAL2,NAT_1,ARYTM_3,CARD_1,XXREAL_0,SEQ_2,FINSEQ_1,EUCLID,TOPREAL1,RCOMP_1,PRE_TOPC,XREAL_0,ORDINAL1,METRIC_1,REAL_1,COMPLEX1,ARYTM_1,SEQ_1,INT_1,PCOMPS_1,FRECHET,RLVECT_3,YELLOW_8,CONNSP_2,TOPS_1,JORDAN2C,XXREAL_2,VALUED_0,MCART_1,TOPREAL2,JORDAN9,GOBOARD9,WAYBEL_7,KURATO_2;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,ZFMISC_1,XXREAL_0,XREAL_0,REAL_1,NAT_1,SETFAM_1,MCART_1,DOMAIN_1,RELAT_1,FUNCT_1,INT_1,FINSEQ_1,RELSET_1,FUNCT_2,FUNCOP_1,CARD_3,PROB_1,LIMFUNC1,VALUED_0,FUNCT_6,CKB5,CKB6,CKB7,CKB8,CKB25,CKB26;
definitions XBOOLE_0,TARSKI,SUBSET_1,XCMPLX_0,CKB7,CKB8,CKB25,CKB26;
theorems SETFAM_1,XBOOLE_1,SUBSET_1,NAT_1,FUNCT_2,RELSET_1,XBOOLE_0,FUNCT_1,INT_1,XREAL_0,ZFMISC_1,RELAT_1,FUNCT_6,SEQM_3,MCART_1,PROB_1,MEASURE2,XREAL_1,XXREAL_0,ORDINAL1,VALUED_0,CKB1,CKB2,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
schemes XBOOLE_0,FUNCT_2,NAT_1,SUBSET_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,ORDINAL1,FUNCT_2,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,FUNCOP_1,VALUED_0,RELSET_1,CKB3,CKB4;
constructors SETFAM_1,REAL_1,PROB_1,LIMFUNC1,FUNCT_6,FINSEQ_1,DOMAIN_1,NAT_1,RELSET_1,CKB5,CKB6,CKB7,CKB8,CKB25,CKB26;
requirements REAL,SUBSET,BOOLE,NUMERALS,ARITHM;
begin
theorem
Th24: (for T being set holds (for F being (SetSequence of T) holds (for x being set holds ((F is  non-ascending & (ex k being (Element of ( NAT )) st (for n being (Element of ( NAT )) holds (n > k implies x in ( F . n ))))) implies x in ( meet F )))))
proof
let T being set;
let F being (SetSequence of T);
let x being set;
assume A1: F is  non-ascending;
given k being (Element of ( NAT )) such that
A2: (for n being (Element of ( NAT )) holds (n > k implies x in ( F . n )));

( k + 1 ) > k by NAT_1:13;
then A3: x in ( F . ( k + 1 ) ) by A2;
assume (not x in ( meet F ));
then (not x in ( meet ( rng F ) )) by FUNCT_6:def 4;
then consider Y being set such that A4: Y in ( rng F ) and A5: (not x in Y) by SETFAM_1:def 1;
consider y being set such that A6: y in ( dom F ) and A7: Y = ( F . y ) by A4,FUNCT_1:def 3;
reconsider y as (Element of ( NAT )) by A6;
per cases ;
suppose y > k;

hence thesis by A2,A5,A7;
end;
suppose y <= k;

then ( F . k ) c= ( F . y ) by A1,PROB_1:def 4;
then A8: (not x in ( F . k )) by A5,A7;
( F . ( k + 1 ) ) c= ( F . k ) by A1,CKB25:def 1;
hence thesis by A3,A8;
end;
end;
