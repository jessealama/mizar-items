environ
vocabularies XBOOLE_0,TARSKI,ORDINAL1,SUBSET_1,LATTICES,CARD_FIL,FILTER_0,INT_2,PBOOLE,GROUP_6,FUNCT_1,STRUCT_0,EQREL_1,FUNCT_2,RELAT_1,WELLORD1,FILTER_1,XBOOLEAN,FINSUB_1,LATTICE2,SETWISEO,BINOP_1,FUNCOP_1,XXREAL_2,VECTSP_1,ZFMISC_1,SETFAM_1,LATTICE4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,ORDINAL1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,FINSUB_1,STRUCT_0,LATTICES,LATTICE2,FILTER_0,FUNCOP_1,SETWISEO,WELLORD1,FILTER_1,CKB5,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB18,CKB19,CKB46;
definitions TARSKI,FILTER_0,LATTICES,XBOOLE_0,STRUCT_0,CKB5,CKB9,CKB10,CKB11,CKB12,CKB13,CKB18,CKB19,CKB46;
theorems LATTICES,ZFMISC_1,FUNCT_2,FILTER_0,SETFAM_1,ORDERS_1,TARSKI,SETWISEO,LATTICE2,FUNCOP_1,FILTER_1,WELLORD1,RELAT_1,XBOOLE_1,FUNCT_1,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50;
schemes FUNCT_2,SETWISEO,BINOP_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FUNCT_2,STRUCT_0,LATTICES,FILTER_0,LATTICE2,CKB2,CKB16;
constructors WELLORD1,DOMAIN_1,SETWISEO,LATTICE2,FILTER_1,GRCAT_1,FUNCOP_1,RELSET_1,FILTER_0,CKB5,CKB10,CKB11,CKB12,CKB13,CKB18,CKB19,CKB46;
requirements BOOLE,SUBSET;
begin
reserve x for set;
reserve X for set;
reserve Z for set;
reserve BL for  Boolean Lattice;
reserve A for non empty (Subset of BL);
reserve a for (Element of BL);
reserve b for (Element of BL);
reserve F for (Field of BL);
reserve H for (Field of BL);
definition
let BL;
let A;
func field_by A -> (Field of BL)
means
:Def15: (A c= it & (for F holds (A c= F implies it c= F)));
existence
proof
set x = the (Element of A);
defpred X[ set ]
 means
($1 is (Field of BL) & A c= $1);
consider X such that A1: (Z in X iff (Z in ( bool (the carrier of BL) ) & X[ Z ])) from XBOOLE_0:sch 1;
reconsider x as (Element of BL);
A2: (the carrier of BL) is (Field of BL) by CKB49:1;
then A3: X <> ( {} ) by A1;
now
let Z;
assume Z in X;
then A c= Z by A1;
hence x in Z by TARSKI:def 3;
end;
then reconsider F1 = ( meet X ) as non empty set by A3,SETFAM_1:def 1;
A4: (the carrier of BL) in X by A1,A2;
F1 c= (the carrier of BL)
proof
let x;
thus thesis by A4,SETFAM_1:def 1;
end;
then reconsider F1 as non empty (Subset of BL);
F1 is (Field of BL)
proof
let a;
let b;
assume that
A5: a in F1
and
A6: b in F1;
A7: (for Z holds (Z in X implies ( a "/\" b ) in Z))
proof
let Z;
assume A8: Z in X;
then A9: b in Z by A6,SETFAM_1:def 1;
(Z is (Field of BL) & a in Z) by A1,A5,A8,SETFAM_1:def 1;
hence thesis by A9,CKB46:def 1;
end;
(for Z holds (Z in X implies ( a ` ) in Z))
proof
let Z;
assume Z in X;
then (Z is (Field of BL) & a in Z) by A1,A5,SETFAM_1:def 1;
hence thesis by CKB46:def 1;
end;
hence thesis by A3,A7,SETFAM_1:def 1;
end;
then reconsider F = F1 as (Field of BL);
take F;
(for Z holds (Z in X implies A c= Z)) by A1;
hence A c= F by A4,SETFAM_1:5;
let H;
assume A c= H;
then H in X by A1;
hence thesis by SETFAM_1:3;
end;
uniqueness
proof
let F1 being (Field of BL),F2 being (Field of BL);
assume ((A c= F1 & (for F holds (A c= F implies F1 c= F))) & (A c= F2 & (for F holds (A c= F implies F2 c= F))));
hence (F1 c= F2 & F2 c= F1);
end;
end;
