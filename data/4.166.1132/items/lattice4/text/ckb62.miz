environ
vocabularies XBOOLE_0,TARSKI,ORDINAL1,SUBSET_1,LATTICES,CARD_FIL,FILTER_0,INT_2,PBOOLE,GROUP_6,FUNCT_1,STRUCT_0,EQREL_1,FUNCT_2,RELAT_1,WELLORD1,FILTER_1,XBOOLEAN,FINSUB_1,LATTICE2,SETWISEO,BINOP_1,FUNCOP_1,XXREAL_2,VECTSP_1,ZFMISC_1,SETFAM_1,LATTICE4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,ORDINAL1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,FINSUB_1,STRUCT_0,LATTICES,LATTICE2,FILTER_0,FUNCOP_1,SETWISEO,WELLORD1,FILTER_1,CKB5,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB18,CKB19,CKB46,CKB51,CKB52,CKB56;
definitions TARSKI,FILTER_0,LATTICES,XBOOLE_0,STRUCT_0,CKB5,CKB9,CKB10,CKB11,CKB12,CKB13,CKB18,CKB19,CKB46,CKB51,CKB52,CKB56;
theorems LATTICES,ZFMISC_1,FUNCT_2,FILTER_0,SETFAM_1,ORDERS_1,TARSKI,SETWISEO,LATTICE2,FUNCOP_1,FILTER_1,WELLORD1,RELAT_1,XBOOLE_1,FUNCT_1,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61;
schemes FUNCT_2,SETWISEO,BINOP_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FUNCT_2,STRUCT_0,LATTICES,FILTER_0,LATTICE2,CKB2,CKB16,CKB53;
constructors WELLORD1,DOMAIN_1,SETWISEO,LATTICE2,FILTER_1,GRCAT_1,FUNCOP_1,RELSET_1,FILTER_0,CKB5,CKB10,CKB11,CKB12,CKB13,CKB18,CKB19,CKB46,CKB51,CKB52,CKB56;
requirements BOOLE,SUBSET;
begin
reserve x for set;
reserve y for set;
reserve BL for  Boolean Lattice;
reserve p for (Element of BL);
reserve q for (Element of BL);
reserve B for (Finite_Subset of (the carrier of BL));
reserve B0 for (Finite_Subset of (the carrier of BL));
reserve B1 for (Finite_Subset of (the carrier of BL));
reserve B2 for (Finite_Subset of (the carrier of BL));
reserve F for (Field of BL);
theorem
(for AF being non empty (ClosedSubset of BL) holds ((( Bottom BL ) in AF & ( Top BL ) in AF) implies { ( FinMeet B ): B c= ( SetImp AF ) } = ( field_by AF )))
proof
let AF being non empty (ClosedSubset of BL);
assume that
A1: ( Bottom BL ) in AF
and
A2: ( Top BL ) in AF;
set A1 = { ( FinMeet B ): B c= ( SetImp AF ) };
A3: AF c= A1
proof
let x;
assume A4: x in AF;
then reconsider b = x as (Element of BL);
reconsider B = {. b .} as (Finite_Subset of (the carrier of BL));
b = ( ( Bottom BL ) "\/" b ) by LATTICES:14
.= ( ( ( Top BL ) ` ) "\/" b ) by CKB43:1;
then b in ( SetImp AF ) by A2,A4,CKB55:1;
then A5: B c= ( SetImp AF ) by ZFMISC_1:31;
x = ( FinMeet B ) by CKB21:1;
hence thesis by A5;
end;
A1 c= (the carrier of BL)
proof
let x;
assume x in A1;
then (ex B st (x = ( FinMeet B ) & B c= ( SetImp AF )));
hence thesis;
end;
then reconsider A1 as non empty (Subset of BL) by A3;
A6:now
let F;
assume A7: AF c= F;
thus A1 c= F
proof
reconsider F1 = F as (ClosedSubset of BL) by CKB50:1;
let x;
assume x in A1;
then consider B such that A8: x = ( FinMeet B ) and A9: B c= ( SetImp AF );
( SetImp AF ) c= F
proof
let y;
assume y in ( SetImp AF );
then (ex p st (ex q st ((y = ( p => q ) & p in AF) & q in AF)));
hence thesis by A7,CKB48:1;
end;
then B c= F1 by A9,XBOOLE_1:1;
hence thesis by A2,A7,A8,CKB37:1;
end;

end;
A1 is (Field of BL)
proof
let p;
let q;
assume that
A10: p in A1
and
A11: q in A1;
thus ( p "/\" q ) in A1
proof
consider B2 such that A12: (q = ( FinMeet B2 ) & B2 c= ( SetImp AF )) by A11;
consider B1 such that A13: (p = ( FinMeet B1 ) & B1 c= ( SetImp AF )) by A10;
consider B0 such that A14: B0 = ( B1 \/ B2 );
(B0 c= ( SetImp AF ) & ( p "/\" q ) = ( FinMeet B0 )) by A13,A12,A14,CKB36:1,XBOOLE_1:8;
hence thesis;
end;

thus ( p ` ) in A1
proof
consider B such that A15: p = ( FinMeet B ) and A16: B c= ( SetImp AF ) by A10;
( p ` ) = ( FinJoin (B,( comp BL )) ) by A15,CKB60:1;
then (ex B0 st (B0 c= ( SetImp AF ) & ( p ` ) = ( FinMeet B0 ))) by A1,A2,A16,CKB61:1;
hence thesis;
end;

end;
hence thesis by A3,A6,CKB51:def 1;
end;
