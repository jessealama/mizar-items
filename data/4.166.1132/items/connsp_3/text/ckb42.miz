environ
vocabularies XBOOLE_0,PRE_TOPC,SUBSET_1,CONNSP_1,SETFAM_1,RELAT_2,TARSKI,STRUCT_0,ZFMISC_1,RELAT_1,RUSUB_4,RCOMP_1,CONNSP_3;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,ZFMISC_1,STRUCT_0,PRE_TOPC,CONNSP_1,CKB1,CKB20,CKB28,CKB29,CKB30,CKB31,CKB32;
definitions TARSKI,XBOOLE_0,STRUCT_0,CKB1,CKB20,CKB28,CKB29,CKB30,CKB31,CKB32;
theorems TARSKI,ZFMISC_1,SETFAM_1,PRE_TOPC,SUBSET_1,CONNSP_1,XBOOLE_0,XBOOLE_1,ORDERS_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40;
schemes SUBSET_1;
registrations SUBSET_1,STRUCT_0,PRE_TOPC,CONNSP_1,CKB41;
constructors SETFAM_1,CONNSP_1,CKB1,CKB20,CKB28,CKB29,CKB30,CKB31,CKB32;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve X for set;
theorem
(for T being non  empty TopSpace holds (for A being non  empty (a_union_of_components of T) holds (A is  connected implies A is  a_component)))
proof
let T being non  empty TopSpace;
let A being non  empty (a_union_of_components of T);
consider F being (Subset-Family of T) such that A1: (for B being (Subset of T) holds (B in F implies B is  a_component)) and A2: A = ( union F ) by CKB20:def 1;
consider X being set such that X <> ( {} ) and A3: X in F by A2,ORDERS_1:6;
reconsider X as (Subset of T) by A3;
assume A4: A is  connected;
F = { X }
proof
thus F c= { X }
proof
let x being set;
assume A5: x in F;
then reconsider Y = x as (Subset of T);
A6: (X is  a_component & X c= A) by A1,A2,A3,ZFMISC_1:74;
(Y is  a_component & Y c= A) by A1,A2,A5,ZFMISC_1:74;
then Y = A by A4,CONNSP_1:def 5
.= X by A4,A6,CONNSP_1:def 5;
hence thesis by TARSKI:def 1;
end;

let x being set;
assume x in { X };
hence thesis by A3,TARSKI:def 1;
end;
then A = X by A2,ZFMISC_1:25;
hence thesis by A1,A3;
end;
