environ
vocabularies XBOOLE_0,PRE_TOPC,SUBSET_1,CONNSP_1,SETFAM_1,RELAT_2,TARSKI,STRUCT_0,ZFMISC_1,RELAT_1,RUSUB_4,RCOMP_1,CONNSP_3;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,ZFMISC_1,STRUCT_0,PRE_TOPC,CONNSP_1,CKB1;
definitions TARSKI,XBOOLE_0,STRUCT_0,CKB1;
theorems TARSKI,ZFMISC_1,SETFAM_1,PRE_TOPC,SUBSET_1,CONNSP_1,XBOOLE_0,XBOOLE_1,ORDERS_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8;
schemes SUBSET_1;
registrations SUBSET_1,STRUCT_0,PRE_TOPC,CONNSP_1;
constructors SETFAM_1,CONNSP_1,CKB1;
requirements SUBSET,BOOLE;
begin
reserve GX for non  empty TopSpace;
theorem
Th8: (for A being (Subset of GX) holds (A is  a_component iff (ex V being (Subset of GX) st ((V is  connected & V <> ( {} )) & A = ( Component_of V )))))
proof
let A being (Subset of GX);
A1:now
assume A2: A is  a_component;
take V = A;
thus ((V is  connected & V <> ( {} )) & A = ( Component_of V )) by A2,CKB8:1;
end;
now
given V being (Subset of GX) such that
A3: ((V is  connected & V <> ( {} )) & A = ( Component_of V ));

(A is  connected & (for B being (Subset of GX) holds (B is  connected implies (A c= B implies A = B)))) by A3,CKB6:1,CKB7:1;
hence A is  a_component by CONNSP_1:def 5;
end;
hence thesis by A1;
end;
