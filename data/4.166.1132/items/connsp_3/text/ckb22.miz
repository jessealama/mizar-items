environ
vocabularies XBOOLE_0,PRE_TOPC,SUBSET_1,CONNSP_1,SETFAM_1,RELAT_2,TARSKI,STRUCT_0,ZFMISC_1,RELAT_1,RUSUB_4,RCOMP_1,CONNSP_3;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,ZFMISC_1,STRUCT_0,PRE_TOPC,CONNSP_1,CKB1,CKB20;
definitions TARSKI,XBOOLE_0,STRUCT_0,CKB1,CKB20;
theorems TARSKI,ZFMISC_1,SETFAM_1,PRE_TOPC,SUBSET_1,CONNSP_1,XBOOLE_0,XBOOLE_1,ORDERS_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
schemes SUBSET_1;
registrations SUBSET_1,STRUCT_0,PRE_TOPC,CONNSP_1;
constructors SETFAM_1,CONNSP_1,CKB1,CKB20;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve GX for non  empty TopSpace;
reserve B for (Subset of GX);
theorem
Th20: (for A being (Subset of GX) holds (A = (the carrier of GX) implies A is (a_union_of_components of GX)))
proof
let A being (Subset of GX);
{ B: B is  a_component } c= ( bool (the carrier of GX) )
proof
let x;
assume x in { B: B is  a_component };
then (ex B being (Subset of GX) st (x = B & B is  a_component));
hence thesis;
end;
then reconsider S = { B: B is  a_component } as (Subset-Family of GX);
A1: (for B being (Subset of GX) holds (B in S implies B is  a_component))
proof
let B being (Subset of GX);
assume B in S;
then (ex B2 being (Subset of GX) st (B = B2 & B2 is  a_component));
hence thesis;
end;
(the carrier of GX) c= ( union S )
proof
let x;
assume x in (the carrier of GX);
then reconsider p = x as (Point of GX);
set B3 = ( Component_of p );
B3 is  a_component by CONNSP_1:40;
then (p in ( Component_of p ) & B3 in S) by CONNSP_1:38;
hence thesis by TARSKI:def 4;
end;
then A2: (the carrier of GX) = ( union S ) by XBOOLE_0:def 10;
assume A = (the carrier of GX);
hence thesis by A2,A1,CKB20:def 1;
end;
