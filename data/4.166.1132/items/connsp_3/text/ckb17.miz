environ
vocabularies XBOOLE_0,PRE_TOPC,SUBSET_1,CONNSP_1,SETFAM_1,RELAT_2,TARSKI,STRUCT_0,ZFMISC_1,RELAT_1,RUSUB_4,RCOMP_1,CONNSP_3;
notations TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,ZFMISC_1,STRUCT_0,PRE_TOPC,CONNSP_1,CKB1;
definitions TARSKI,XBOOLE_0,STRUCT_0,CKB1;
theorems TARSKI,ZFMISC_1,SETFAM_1,PRE_TOPC,SUBSET_1,CONNSP_1,XBOOLE_0,XBOOLE_1,ORDERS_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
schemes SUBSET_1;
registrations SUBSET_1,STRUCT_0,PRE_TOPC,CONNSP_1;
constructors SETFAM_1,CONNSP_1,CKB1;
requirements SUBSET,BOOLE;
begin
reserve GX for non  empty TopSpace;
reserve B for (Subset of GX);
theorem
(for A,B being (Subset of GX) holds (((A is  connected & B is  connected) & A meets B) implies (((( A \/ B ) c= ( Component_of A ) & ( A \/ B ) c= ( Component_of B )) & A c= ( Component_of B )) & B c= ( Component_of A ))))
proof
let A being (Subset of GX);
let B being (Subset of GX);
A1: (A c= ( A \/ B ) & B c= ( A \/ B )) by XBOOLE_1:7;
A2: (for C,D being (Subset of GX) holds (((C is  connected & D is  connected) & ( C /\ D ) <> ( {} )) implies ( C \/ D ) c= ( Component_of C )))
proof
let C being (Subset of GX);
let D being (Subset of GX);
assume that
A3: C is  connected
and
A4: D is  connected
and
A5: ( C /\ D ) <> ( {} );
C meets D by A5,XBOOLE_0:def 7;
then A6: ( C \/ D ) is  connected by A3,A4,CONNSP_1:1,CONNSP_1:17;
C <> ( {} ) by A5;
hence thesis by A3,A6,CKB15:1;
end;
assume ((A is  connected & B is  connected) & ( A /\ B ) <> ( {} ));
then (( A \/ B ) c= ( Component_of A ) & ( A \/ B ) c= ( Component_of B )) by A2;
hence thesis by A1,XBOOLE_1:1;
end;
