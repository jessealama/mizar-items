environ
vocabularies NUMBERS,SUBSET_1,AFINSQ_1,NAT_1,XREAL_0,ORDINAL1,ARYTM_3,XXREAL_0,ARYTM_1,CARD_1,ORDINAL4,XBOOLE_0,FINSEQ_1,PRE_POLY,NEWTON,TARSKI,RELAT_1,SETFAM_1,MODAL_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,ORDINAL1,SETFAM_1,XREAL_0,XXREAL_0,AFINSQ_1,CATALAN2,FLANG_1;
definitions TARSKI;
theorems AFINSQ_1,NAT_1,SUBSET_1,TARSKI,XBOOLE_0,XBOOLE_1,XREAL_1,ZFMISC_1,FLANG_1,XXREAL_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8;
schemes CARD_FIL,DOMAIN_1,NAT_1;
registrations SUBSET_1,NAT_1,ORDINAL1,AFINSQ_1,XREAL_0,XBOOLE_0,XXREAL_0,FUNCT_1,CATALAN2;
constructors XXREAL_0,NAT_1,XREAL_0,FLANG_1;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve E for set;
reserve x for set;
reserve A for (Subset of ( E ^omega ));
reserve a for (Element of ( E ^omega ));
reserve b for (Element of ( E ^omega ));
reserve m for Nat;
reserve n for Nat;
theorem
Th9: (<% x %> in ( A |^ n ) iff (<% x %> in A & ((( <%> E ) in A & n > 1) or n = 1)))
proof
thus (<% x %> in ( A |^ n ) implies (<% x %> in A & ((( <%> E ) in A & n > 1) or n = 1)))
proof
assume A1: <% x %> in ( A |^ n );
( A |^ n ) c= ( A * ) by FLANG_1:42;
hence <% x %> in A by A1,FLANG_1:72;
assume A2: (((not ( <%> E ) in A) or n <= 1) & n <> 1);
per cases  by A2;
suppose A3: ((not ( <%> E ) in A) & n <> 1);

per cases  by A3,NAT_1:25;
suppose n = ( 0 );

then ( A |^ n ) = { ( <%> E ) } by FLANG_1:24;
hence contradiction by A1,TARSKI:def 1;
end;
suppose A4: n > 1;

then consider m such that A5: ( m + 1 ) = n by NAT_1:6;
<% x %> in ( ( A |^ m ) ^^ A ) by A1,A5,FLANG_1:23;
then consider a,b such that A6: a in ( A |^ m ) and A7: b in A and A8: <% x %> = ( a ^ b ) by FLANG_1:def 1;
per cases  by A8,FLANG_1:4;
suppose A9: (a = ( <%> E ) & b = <% x %>);

( m + 1 ) > ( ( 0 ) + 1 ) by A4,A5;
then m > ( 0 );
hence contradiction by A3,A6,A9,FLANG_1:31;
end;
suppose (b = ( <%> E ) & a = <% x %>);

hence contradiction by A3,A7;
end;
end;
end;
suppose (n <= 1 & n <> 1);

then n = ( 0 ) by NAT_1:25;
then ( A |^ n ) = { ( <%> E ) } by FLANG_1:24;
hence contradiction by A1,TARSKI:def 1;
end;
end;

assume that
A10: <% x %> in A
and
A11: ((( <%> E ) in A & n > 1) or n = 1);
per cases  by A11;
suppose (( <%> E ) in A & n > 1);

then A c= ( A |^ n ) by FLANG_1:35;
hence thesis by A10;
end;
suppose n = 1;

hence thesis by A10,FLANG_1:25;
end;
end;
