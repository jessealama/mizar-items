environ
vocabularies NUMBERS,LOPBAN_2,SUBSET_1,NAT_1,SEQ_1,XBOOLE_0,ALGSTR_0,RELAT_1,COMSEQ_3,ARYTM_3,CARD_1,PREPOWER,FUNCT_1,MESFUNC1,SEQ_2,ORDINAL2,ARYTM_1,SUPINF_2,REAL_1,XXREAL_0,NORMSP_1,PRE_TOPC,XXREAL_2,XREAL_0,ORDINAL1,SERIES_1,COMPLEX1,SIN_COS,REALSET1,STRUCT_0,VALUED_1,NEWTON,LOPBAN_3,CARD_3,VALUED_0,RSSPACE3,LOPBAN_4;
notations SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,XXREAL_0,XREAL_0,VALUED_0,PRE_TOPC,ALGSTR_0,ORDINAL1,NUMBERS,COMPLEX1,SQUARE_1,NORMSP_0,NORMSP_1,RSSPACE3,SEQ_1,SEQ_2,NEWTON,REAL_1,NAT_1,STRUCT_0,SERIES_1,NAT_D,SIN_COS,RLVECT_1,BHSP_4,LOPBAN_2,LOPBAN_3,CKB1,CKB16,CKB19,CKB20;
definitions NORMSP_1,LOPBAN_3,VALUED_0,CKB1,CKB16,CKB19,CKB20;
theorems ABSVALUE,RLVECT_1,XCMPLX_0,XCMPLX_1,XREAL_0,SEQ_2,SEQM_3,COMSEQ_3,SIN_COS,SERIES_1,NAT_1,INT_1,NEWTON,FUNCT_2,NORMSP_1,SEQ_4,RSSPACE3,LOPBAN_3,XREAL_1,XXREAL_0,ORDINAL1,BHSP_4,NORMSP_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20;
schemes SEQ_1,NAT_1,SIN_COS,FUNCT_2,CLASSES1,CKB17;
registrations ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,MEMBERED,SIN_COS,STRUCT_0,GROUP_1,LOPBAN_2,LOPBAN_3,XBOOLE_0,VALUED_0,SEQ_2,SEQ_4,NUMBERS;
constructors ARYTM_0,REAL_1,SQUARE_1,NAT_1,SEQ_2,COMSEQ_3,NAT_D,SIN_COS,BHSP_4,RSSPACE3,LOPBAN_3,SEQ_1,SERIES_1,SEQ_4,NORMSP_1,PARTFUN1,VALUED_0,SETFAM_1,RAT_1,XBOOLE_0,HAHNBAN,FCONT_1,SEQM_3,RELSET_1,CKB1,CKB16,CKB19,CKB20;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve n for (Element of ( NAT ));
definition
let X being non empty ZeroStr;
let seq being (sequence of X);
func Shift seq -> (sequence of X)
means
:Def5: (( it . ( 0 ) ) = ( 0. X ) & (for k being (Element of ( NAT )) holds ( it . ( k + 1 ) ) = ( seq . k )));
existence
proof
deffunc U(Nat,set) = ( seq . $1 );
consider f being (Function of ( NAT ),(the carrier of X)) such that A1: (( f . ( 0 ) ) = ( 0. X ) & (for n being Nat holds ( f . ( n + 1 ) ) = U(n,( f . n )))) from NAT_1:sch 12;
take f;
thus thesis by A1;
end;
uniqueness
proof
let seq1 being (sequence of X),seq2 being (sequence of X);
assume that
A2: ( seq1 . ( 0 ) ) = ( 0. X )
and
A3: (for n holds ( seq1 . ( n + 1 ) ) = ( seq . n ))
and
A4: ( seq2 . ( 0 ) ) = ( 0. X )
and
A5: (for n holds ( seq2 . ( n + 1 ) ) = ( seq . n ));
defpred X[ (Element of ( NAT )) ]
 means
( seq1 . $1 ) = ( seq2 . $1 );
A6: (for k being (Element of ( NAT )) holds (X[ k ] implies X[ ( k + 1 ) ]))
proof
let k being (Element of ( NAT ));
assume ( seq1 . k ) = ( seq2 . k );
thus ( seq1 . ( k + 1 ) ) = ( seq . k ) by A3
.= ( seq2 . ( k + 1 ) ) by A5;
end;
A7: X[ ( 0 ) ] by A2,A4;
(for n holds X[ n ]) from NAT_1:sch 1(A7,A6);
hence seq1 = seq2 by FUNCT_2:63;
end;
end;
