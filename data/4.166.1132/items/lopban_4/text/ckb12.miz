environ
vocabularies NUMBERS,LOPBAN_2,SUBSET_1,NAT_1,SEQ_1,XBOOLE_0,ALGSTR_0,RELAT_1,COMSEQ_3,ARYTM_3,CARD_1,PREPOWER,FUNCT_1,MESFUNC1,SEQ_2,ORDINAL2,ARYTM_1,SUPINF_2,REAL_1,XXREAL_0,NORMSP_1,PRE_TOPC,XXREAL_2,XREAL_0,ORDINAL1,SERIES_1,COMPLEX1,SIN_COS,REALSET1,STRUCT_0,VALUED_1,NEWTON,LOPBAN_3,CARD_3,VALUED_0,RSSPACE3,LOPBAN_4;
notations SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,XXREAL_0,XREAL_0,VALUED_0,PRE_TOPC,ALGSTR_0,ORDINAL1,NUMBERS,COMPLEX1,SQUARE_1,NORMSP_0,NORMSP_1,RSSPACE3,SEQ_1,SEQ_2,NEWTON,REAL_1,NAT_1,STRUCT_0,SERIES_1,NAT_D,SIN_COS,RLVECT_1,BHSP_4,LOPBAN_2,LOPBAN_3,CKB1;
definitions NORMSP_1,LOPBAN_3,VALUED_0,CKB1;
theorems ABSVALUE,RLVECT_1,XCMPLX_0,XCMPLX_1,XREAL_0,SEQ_2,SEQM_3,COMSEQ_3,SIN_COS,SERIES_1,NAT_1,INT_1,NEWTON,FUNCT_2,NORMSP_1,SEQ_4,RSSPACE3,LOPBAN_3,XREAL_1,XXREAL_0,ORDINAL1,BHSP_4,NORMSP_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11;
schemes SEQ_1,NAT_1,SIN_COS,FUNCT_2,CLASSES1;
registrations ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,MEMBERED,SIN_COS,STRUCT_0,GROUP_1,LOPBAN_2,LOPBAN_3,XBOOLE_0,VALUED_0,SEQ_2,SEQ_4,NUMBERS;
constructors ARYTM_0,REAL_1,SQUARE_1,NAT_1,SEQ_2,COMSEQ_3,NAT_D,SIN_COS,BHSP_4,RSSPACE3,LOPBAN_3,SEQ_1,SERIES_1,SEQ_4,NORMSP_1,PARTFUN1,VALUED_0,SETFAM_1,RAT_1,XBOOLE_0,HAHNBAN,FCONT_1,SEQM_3,RELSET_1,CKB1;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve X for Banach_Algebra;
reserve z for (Element of X);
reserve n for (Element of ( NAT ));
reserve seq for (sequence of X);
theorem
Th9: (( Partial_Sums ( z * seq ) ) = ( z * ( Partial_Sums seq ) ) & ( Partial_Sums ( seq * z ) ) = ( ( Partial_Sums seq ) * z ))
proof
A1: ( Partial_Sums ( seq * z ) ) = ( ( Partial_Sums seq ) * z )
proof
defpred P[ (Element of ( NAT )) ]
 means
( ( Partial_Sums ( seq * z ) ) . $1 ) = ( ( ( Partial_Sums seq ) * z ) . $1 );
A2:now
let n;
assume A3: P[ n ];
( ( Partial_Sums ( seq * z ) ) . ( n + 1 ) ) = ( ( ( Partial_Sums ( seq * z ) ) . n ) + ( ( seq * z ) . ( n + 1 ) ) ) by BHSP_4:def 1
.= ( ( ( ( Partial_Sums seq ) . n ) * z ) + ( ( seq * z ) . ( n + 1 ) ) ) by A3,LOPBAN_3:def 6
.= ( ( ( ( Partial_Sums seq ) . n ) * z ) + ( ( seq . ( n + 1 ) ) * z ) ) by LOPBAN_3:def 6
.= ( ( ( ( Partial_Sums seq ) . n ) + ( seq . ( n + 1 ) ) ) * z ) by LOPBAN_3:38
.= ( ( ( Partial_Sums seq ) . ( n + 1 ) ) * z ) by BHSP_4:def 1
.= ( ( ( Partial_Sums seq ) * z ) . ( n + 1 ) ) by LOPBAN_3:def 6;
hence P[ ( n + 1 ) ];
end;
( ( Partial_Sums ( seq * z ) ) . ( 0 ) ) = ( ( seq * z ) . ( 0 ) ) by BHSP_4:def 1
.= ( ( seq . ( 0 ) ) * z ) by LOPBAN_3:def 6
.= ( ( ( Partial_Sums seq ) . ( 0 ) ) * z ) by BHSP_4:def 1
.= ( ( ( Partial_Sums seq ) * z ) . ( 0 ) ) by LOPBAN_3:def 6;
then A4: P[ ( 0 ) ];
(for n holds P[ n ]) from NAT_1:sch 1(A4,A2);
hence thesis by FUNCT_2:63;
end;
( Partial_Sums ( z * seq ) ) = ( z * ( Partial_Sums seq ) )
proof
defpred P[ (Element of ( NAT )) ]
 means
( ( Partial_Sums ( z * seq ) ) . $1 ) = ( ( z * ( Partial_Sums seq ) ) . $1 );
A5:now
let n;
assume A6: P[ n ];
( ( Partial_Sums ( z * seq ) ) . ( n + 1 ) ) = ( ( ( Partial_Sums ( z * seq ) ) . n ) + ( ( z * seq ) . ( n + 1 ) ) ) by BHSP_4:def 1
.= ( ( z * ( ( Partial_Sums seq ) . n ) ) + ( ( z * seq ) . ( n + 1 ) ) ) by A6,LOPBAN_3:def 5
.= ( ( z * ( ( Partial_Sums seq ) . n ) ) + ( z * ( seq . ( n + 1 ) ) ) ) by LOPBAN_3:def 5
.= ( z * ( ( ( Partial_Sums seq ) . n ) + ( seq . ( n + 1 ) ) ) ) by LOPBAN_3:38
.= ( z * ( ( Partial_Sums seq ) . ( n + 1 ) ) ) by BHSP_4:def 1
.= ( ( z * ( Partial_Sums seq ) ) . ( n + 1 ) ) by LOPBAN_3:def 5;
hence P[ ( n + 1 ) ];
end;
( ( Partial_Sums ( z * seq ) ) . ( 0 ) ) = ( ( z * seq ) . ( 0 ) ) by BHSP_4:def 1
.= ( z * ( seq . ( 0 ) ) ) by LOPBAN_3:def 5
.= ( z * ( ( Partial_Sums seq ) . ( 0 ) ) ) by BHSP_4:def 1
.= ( ( z * ( Partial_Sums seq ) ) . ( 0 ) ) by LOPBAN_3:def 5;
then A7: P[ ( 0 ) ];
(for n holds P[ n ]) from NAT_1:sch 1(A7,A5);
hence thesis by FUNCT_2:63;
end;
hence thesis by A1;
end;
