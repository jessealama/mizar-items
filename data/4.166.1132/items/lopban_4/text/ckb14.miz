environ
vocabularies NUMBERS,LOPBAN_2,SUBSET_1,NAT_1,SEQ_1,XBOOLE_0,ALGSTR_0,RELAT_1,COMSEQ_3,ARYTM_3,CARD_1,PREPOWER,FUNCT_1,MESFUNC1,SEQ_2,ORDINAL2,ARYTM_1,SUPINF_2,REAL_1,XXREAL_0,NORMSP_1,PRE_TOPC,XXREAL_2,XREAL_0,ORDINAL1,SERIES_1,COMPLEX1,SIN_COS,REALSET1,STRUCT_0,VALUED_1,NEWTON,LOPBAN_3,CARD_3,VALUED_0,RSSPACE3,LOPBAN_4;
notations SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,XXREAL_0,XREAL_0,VALUED_0,PRE_TOPC,ALGSTR_0,ORDINAL1,NUMBERS,COMPLEX1,SQUARE_1,NORMSP_0,NORMSP_1,RSSPACE3,SEQ_1,SEQ_2,NEWTON,REAL_1,NAT_1,STRUCT_0,SERIES_1,NAT_D,SIN_COS,RLVECT_1,BHSP_4,LOPBAN_2,LOPBAN_3,CKB1;
definitions NORMSP_1,LOPBAN_3,VALUED_0,CKB1;
theorems ABSVALUE,RLVECT_1,XCMPLX_0,XCMPLX_1,XREAL_0,SEQ_2,SEQM_3,COMSEQ_3,SIN_COS,SERIES_1,NAT_1,INT_1,NEWTON,FUNCT_2,NORMSP_1,SEQ_4,RSSPACE3,LOPBAN_3,XREAL_1,XXREAL_0,ORDINAL1,BHSP_4,NORMSP_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
schemes SEQ_1,NAT_1,SIN_COS,FUNCT_2,CLASSES1;
registrations ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,MEMBERED,SIN_COS,STRUCT_0,GROUP_1,LOPBAN_2,LOPBAN_3,XBOOLE_0,VALUED_0,SEQ_2,SEQ_4,NUMBERS;
constructors ARYTM_0,REAL_1,SQUARE_1,NAT_1,SEQ_2,COMSEQ_3,NAT_D,SIN_COS,BHSP_4,RSSPACE3,LOPBAN_3,SEQ_1,SERIES_1,SEQ_4,NORMSP_1,PARTFUN1,VALUED_0,SETFAM_1,RAT_1,XBOOLE_0,HAHNBAN,FCONT_1,SEQM_3,RELSET_1,CKB1;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve X for Banach_Algebra;
reserve k for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve seq1 for (sequence of X);
reserve seq2 for (sequence of X);
theorem
Th11: ((for n holds (n <= m implies ( seq1 . n ) = ( seq2 . n ))) implies ( ( Partial_Sums seq1 ) . m ) = ( ( Partial_Sums seq2 ) . m ))
proof
defpred P[ (Element of ( NAT )) ]
 means
($1 <= m implies ( ( Partial_Sums seq1 ) . $1 ) = ( ( Partial_Sums seq2 ) . $1 ));
assume A1: (for n holds (n <= m implies ( seq1 . n ) = ( seq2 . n )));
A2: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being (Element of ( NAT ));
assume that
A3: P[ k ];
assume A4: ( k + 1 ) <= m;
k < ( k + 1 ) by XREAL_1:29;
hence ( ( Partial_Sums seq1 ) . ( k + 1 ) ) = ( ( ( Partial_Sums seq2 ) . k ) + ( seq1 . ( k + 1 ) ) ) by A3,A4,BHSP_4:def 1,XXREAL_0:2
.= ( ( ( Partial_Sums seq2 ) . k ) + ( seq2 . ( k + 1 ) ) ) by A1,A4
.= ( ( Partial_Sums seq2 ) . ( k + 1 ) ) by BHSP_4:def 1;
end;
A5: P[ ( 0 ) ]
proof
assume ( 0 ) <= m;
thus ( ( Partial_Sums seq1 ) . ( 0 ) ) = ( seq1 . ( 0 ) ) by BHSP_4:def 1
.= ( seq2 . ( 0 ) ) by A1
.= ( ( Partial_Sums seq2 ) . ( 0 ) ) by BHSP_4:def 1;
end;
(for k holds P[ k ]) from NAT_1:sch 1(A5,A2);
hence thesis;
end;
