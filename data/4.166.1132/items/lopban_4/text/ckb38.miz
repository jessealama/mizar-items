environ
vocabularies NUMBERS,LOPBAN_2,SUBSET_1,NAT_1,SEQ_1,XBOOLE_0,ALGSTR_0,RELAT_1,COMSEQ_3,ARYTM_3,CARD_1,PREPOWER,FUNCT_1,MESFUNC1,SEQ_2,ORDINAL2,ARYTM_1,SUPINF_2,REAL_1,XXREAL_0,NORMSP_1,PRE_TOPC,XXREAL_2,XREAL_0,ORDINAL1,SERIES_1,COMPLEX1,SIN_COS,REALSET1,STRUCT_0,VALUED_1,NEWTON,LOPBAN_3,CARD_3,VALUED_0,RSSPACE3,LOPBAN_4;
notations SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,XXREAL_0,XREAL_0,VALUED_0,PRE_TOPC,ALGSTR_0,ORDINAL1,NUMBERS,COMPLEX1,SQUARE_1,NORMSP_0,NORMSP_1,RSSPACE3,SEQ_1,SEQ_2,NEWTON,REAL_1,NAT_1,STRUCT_0,SERIES_1,NAT_D,SIN_COS,RLVECT_1,BHSP_4,LOPBAN_2,LOPBAN_3,CKB1,CKB16,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25;
definitions NORMSP_1,LOPBAN_3,VALUED_0,CKB1,CKB16,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25;
theorems ABSVALUE,RLVECT_1,XCMPLX_0,XCMPLX_1,XREAL_0,SEQ_2,SEQM_3,COMSEQ_3,SIN_COS,SERIES_1,NAT_1,INT_1,NEWTON,FUNCT_2,NORMSP_1,SEQ_4,RSSPACE3,LOPBAN_3,XREAL_1,XXREAL_0,ORDINAL1,BHSP_4,NORMSP_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB34,CKB35,CKB36,CKB37;
schemes SEQ_1,NAT_1,SIN_COS,FUNCT_2,CLASSES1,CKB17;
registrations ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,MEMBERED,SIN_COS,STRUCT_0,GROUP_1,LOPBAN_2,LOPBAN_3,XBOOLE_0,VALUED_0,SEQ_2,SEQ_4,NUMBERS,CKB33;
constructors ARYTM_0,REAL_1,SQUARE_1,NAT_1,SEQ_2,COMSEQ_3,NAT_D,SIN_COS,BHSP_4,RSSPACE3,LOPBAN_3,SEQ_1,SERIES_1,SEQ_4,NORMSP_1,PARTFUN1,VALUED_0,SETFAM_1,RAT_1,XBOOLE_0,HAHNBAN,FCONT_1,SEQM_3,RELSET_1,CKB1,CKB16,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve X for Banach_Algebra;
reserve w for (Element of X);
reserve z for (Element of X);
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
theorem
Th25: (for z holds (for w holds (z,w are_commutative  implies ( ( Partial_Sums ( ( z + w ) rExpSeq ) ) . n ) = ( ( Partial_Sums ( Alfa (n,z,w) ) ) . n ))))
proof
let z;
let w;
assume that
A1: z,w are_commutative ;
defpred X[ (Element of ( NAT )) ]
 means
( ( Partial_Sums ( ( z + w ) rExpSeq ) ) . $1 ) = ( ( Partial_Sums ( Alfa ($1,z,w) ) ) . $1 );
A2: (for k holds (X[ k ] implies X[ ( k + 1 ) ]))
proof
let k;
assume that
A3: ( ( Partial_Sums ( ( z + w ) rExpSeq ) ) . k ) = ( ( Partial_Sums ( Alfa (k,z,w) ) ) . k );
( ( k + 1 ) -' ( k + 1 ) ) = ( 0 ) by XREAL_1:232;
then ( ( Alfa (( k + 1 ),z,w) ) . ( k + 1 ) ) = ( ( ( z rExpSeq ) . ( k + 1 ) ) * ( ( Partial_Sums ( w rExpSeq ) ) . ( 0 ) ) ) by CKB24:def 1
.= ( ( ( z rExpSeq ) . ( k + 1 ) ) * ( ( w rExpSeq ) . ( 0 ) ) ) by BHSP_4:def 1
.= ( ( ( z rExpSeq ) . ( k + 1 ) ) * ( 1. X ) ) by CKB34:1
.= ( ( z rExpSeq ) . ( k + 1 ) ) by LOPBAN_3:38
.= ( ( Expan_e (( k + 1 ),z,w) ) . ( k + 1 ) ) by CKB37:1;
then A4: ( ( ( Partial_Sums ( Expan_e (( k + 1 ),z,w) ) ) . k ) + ( ( Alfa (( k + 1 ),z,w) ) . ( k + 1 ) ) ) = ( ( Partial_Sums ( Expan_e (( k + 1 ),z,w) ) ) . ( k + 1 ) ) by BHSP_4:def 1
.= ( ( 1 / ( ( k + 1 ) ! ) ) * ( ( z + w ) #N ( k + 1 ) ) ) by A1,CKB31:1;
( ( Partial_Sums ( Alfa (( k + 1 ),z,w) ) ) . ( k + 1 ) ) = ( ( ( Partial_Sums ( Alfa (( k + 1 ),z,w) ) ) . k ) + ( ( Alfa (( k + 1 ),z,w) ) . ( k + 1 ) ) ) by BHSP_4:def 1
.= ( ( ( ( Partial_Sums ( Alfa (k,z,w) ) ) . k ) + ( ( Partial_Sums ( Expan_e (( k + 1 ),z,w) ) ) . k ) ) + ( ( Alfa (( k + 1 ),z,w) ) . ( k + 1 ) ) ) by CKB36:1
.= ( ( ( Partial_Sums ( ( z + w ) rExpSeq ) ) . k ) + ( ( ( Partial_Sums ( Expan_e (( k + 1 ),z,w) ) ) . k ) + ( ( Alfa (( k + 1 ),z,w) ) . ( k + 1 ) ) ) ) by A3,LOPBAN_3:38;
then ( ( Partial_Sums ( Alfa (( k + 1 ),z,w) ) ) . ( k + 1 ) ) = ( ( ( Partial_Sums ( ( z + w ) rExpSeq ) ) . k ) + ( ( ( z + w ) rExpSeq ) . ( k + 1 ) ) ) by A4,CKB16:def 1
.= ( ( Partial_Sums ( ( z + w ) rExpSeq ) ) . ( k + 1 ) ) by BHSP_4:def 1;
hence ( ( Partial_Sums ( ( z + w ) rExpSeq ) ) . ( k + 1 ) ) = ( ( Partial_Sums ( Alfa (( k + 1 ),z,w) ) ) . ( k + 1 ) );
end;
A5: ( ( Partial_Sums ( ( z + w ) rExpSeq ) ) . ( 0 ) ) = ( ( ( z + w ) rExpSeq ) . ( 0 ) ) by BHSP_4:def 1
.= ( 1. X ) by CKB34:1;
A6: ( ( 0 ) -' ( 0 ) ) = ( 0 ) by XREAL_1:232;
( ( Partial_Sums ( Alfa (( 0 ),z,w) ) ) . ( 0 ) ) = ( ( Alfa (( 0 ),z,w) ) . ( 0 ) ) by BHSP_4:def 1
.= ( ( ( z rExpSeq ) . ( 0 ) ) * ( ( Partial_Sums ( w rExpSeq ) ) . ( 0 ) ) ) by A6,CKB24:def 1
.= ( ( ( z rExpSeq ) . ( 0 ) ) * ( ( w rExpSeq ) . ( 0 ) ) ) by BHSP_4:def 1
.= ( ( 1. X ) * ( ( w rExpSeq ) . ( 0 ) ) ) by CKB34:1
.= ( ( 1. X ) * ( 1. X ) ) by CKB34:1
.= ( 1. X ) by LOPBAN_3:38;
then A7: X[ ( 0 ) ] by A5;
(for n holds X[ n ]) from NAT_1:sch 1(A7,A2);
hence thesis;
end;
