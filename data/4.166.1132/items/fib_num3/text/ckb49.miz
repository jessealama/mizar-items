environ
vocabularies NUMBERS,SUBSET_1,XREAL_0,ORDINAL1,POWER,CARD_1,NEWTON,XXREAL_0,SQUARE_1,RELAT_1,XBOOLE_0,ARYTM_1,ABIAN,NAT_1,ARYTM_3,PREPOWER,FIB_NUM,FUNCT_1,ZFMISC_1,MCART_1,PRE_FF,FIB_NUM3;
notations TARSKI,XBOOLE_0,SUBSET_1,SQUARE_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,ORDINAL1,NEWTON,NAT_1,MCART_1,DOMAIN_1,PREPOWER,POWER,FUNCT_2,NAT_D,PRE_FF,FIB_NUM,ABIAN,CKB13,CKB36,CKB37;
definitions SQUARE_1,CKB13,CKB37;
theorems NAT_1,MCART_1,POWER,PREPOWER,XCMPLX_1,PRE_FF,FIB_NUM,SQUARE_1,WSIERP_1,NAT_2,ABIAN,FIB_NUM2,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48;
schemes FIB_NUM,FIB_NUM2,NAT_1;
registrations SUBSET_1,ORDINAL1,XXREAL_0,XREAL_0,SQUARE_1,NAT_1,MEMBERED,XBOOLE_0,XCMPLX_0,CKB9,CKB10,CKB22;
constructors DOMAIN_1,SQUARE_1,MEMBERED,NEWTON,PREPOWER,POWER,PRE_FF,NAT_D,ABIAN,FIB_NUM,CKB13,CKB36,CKB37;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for (Element of ( NAT ));
theorem
(for n,m being Nat holds ( ( ( Fib m ) * ( Lucas n ) ) + ( ( Lucas m ) * ( Fib n ) ) ) = ( GenFib (( Fib ( 0 ) ),( Lucas ( 0 ) ),( n + m )) ))
proof
let n being Nat;
let m being Nat;
defpred P[ Nat ]
 means
( ( ( Fib $1 ) * ( Lucas n ) ) + ( ( Lucas $1 ) * ( Fib n ) ) ) = ( GenFib (( Fib ( 0 ) ),( Lucas ( 0 ) ),( n + $1 )) );
( 2 * ( Fib n ) ) = ( GenFib (( 0 ),2,n) )
proof
defpred R[ Nat ]
 means
( 2 * ( Fib $1 ) ) = ( GenFib (( 0 ),2,$1) );
A1: R[ 1 ] by CKB38:1,PRE_FF:1;
A2: (for i being Nat holds ((R[ i ] & R[ ( i + 1 ) ]) implies R[ ( i + 2 ) ]))
proof
let i being Nat;
assume A3: (R[ i ] & R[ ( i + 1 ) ]);
( 2 * ( Fib ( i + 2 ) ) ) = ( 2 * ( ( Fib i ) + ( Fib ( i + 1 ) ) ) ) by FIB_NUM2:24
.= ( ( 2 * ( Fib i ) ) + ( 2 * ( Fib ( i + 1 ) ) ) )
.= ( GenFib (( 0 ),2,( i + 2 )) ) by A3,CKB40:1;
hence thesis;
end;
A4: R[ ( 0 ) ] by CKB38:1,PRE_FF:1;
(for i being Nat holds R[ i ]) from FIB_NUM:sch 1(A4,A1,A2);
hence thesis;
end;
then A5: P[ ( 0 ) ] by CKB14:1,PRE_FF:1;
( ( Lucas n ) + ( Fib n ) ) = ( GenFib (( 0 ),2,( n + 1 )) )
proof
defpred Q[ Nat ]
 means
( ( Lucas $1 ) + ( Fib $1 ) ) = ( GenFib (( 0 ),2,( $1 + 1 )) );
A6: (for j being Nat holds ((Q[ j ] & Q[ ( j + 1 ) ]) implies Q[ ( j + 2 ) ]))
proof
let j being Nat;
assume A7: (Q[ j ] & Q[ ( j + 1 ) ]);
( ( Lucas ( j + 2 ) ) + ( Fib ( j + 2 ) ) ) = ( ( ( Lucas j ) + ( Lucas ( j + 1 ) ) ) + ( Fib ( j + 2 ) ) ) by CKB15:1
.= ( ( ( Lucas j ) + ( Lucas ( j + 1 ) ) ) + ( ( Fib j ) + ( Fib ( j + 1 ) ) ) ) by FIB_NUM2:24
.= ( ( GenFib (( 0 ),2,( j + 1 )) ) + ( GenFib (( 0 ),2,( j + 2 )) ) ) by A7
.= ( GenFib (( 0 ),2,( j + 3 )) ) by CKB41:1
.= ( GenFib (( 0 ),2,( ( j + 2 ) + 1 )) );
hence thesis;
end;
( ( Lucas 1 ) + ( Fib 1 ) ) = ( ( 0 ) + ( GenFib (( 0 ),2,1) ) ) by CKB14:1,CKB38:1,PRE_FF:1
.= ( ( GenFib (( 0 ),2,( ( 0 ) + ( 0 ) )) ) + ( GenFib (( 0 ),2,( ( 0 ) + 1 )) ) ) by CKB38:1
.= ( GenFib (( 0 ),2,( ( 0 ) + 2 )) ) by CKB40:1
.= ( GenFib (( 0 ),2,( 1 + 1 )) );
then A8: Q[ 1 ];
A9: Q[ ( 0 ) ] by CKB14:1,CKB38:1,PRE_FF:1;
(for j being Nat holds Q[ j ]) from FIB_NUM:sch 1(A9,A8,A6);
hence thesis;
end;
then A10: P[ 1 ] by CKB14:1,PRE_FF:1;
A11: (for k being Nat holds ((P[ k ] & P[ ( k + 1 ) ]) implies P[ ( k + 2 ) ]))
proof
let k being Nat;
assume A12: (P[ k ] & P[ ( k + 1 ) ]);
( ( ( Fib ( k + 2 ) ) * ( Lucas n ) ) + ( ( Lucas ( k + 2 ) ) * ( Fib n ) ) ) = ( ( ( ( Fib k ) + ( Fib ( k + 1 ) ) ) * ( Lucas n ) ) + ( ( Lucas ( k + 2 ) ) * ( Fib n ) ) ) by FIB_NUM2:24
.= ( ( ( ( Fib k ) * ( Lucas n ) ) + ( ( Fib ( k + 1 ) ) * ( Lucas n ) ) ) + ( ( ( Lucas k ) + ( Lucas ( k + 1 ) ) ) * ( Fib n ) ) ) by CKB15:1
.= ( ( GenFib (( 0 ),2,( n + k )) ) + ( GenFib (( 0 ),2,( ( n + k ) + 1 )) ) ) by A12,CKB14:1,PRE_FF:1
.= ( GenFib (( 0 ),2,( ( n + k ) + 2 )) ) by CKB40:1
.= ( GenFib (( Fib ( 0 ) ),( Lucas ( 0 ) ),( n + ( k + 2 ) )) ) by CKB14:1,PRE_FF:1;
hence thesis;
end;
(for k being Nat holds P[ k ]) from FIB_NUM:sch 1(A5,A10,A11);
hence thesis;
end;
