environ
vocabularies NUMBERS,SUBSET_1,XREAL_0,ORDINAL1,POWER,CARD_1,NEWTON,XXREAL_0,SQUARE_1,RELAT_1,XBOOLE_0,ARYTM_1,ABIAN,NAT_1,ARYTM_3,PREPOWER,FIB_NUM,FUNCT_1,ZFMISC_1,MCART_1,PRE_FF,FIB_NUM3;
notations TARSKI,XBOOLE_0,SUBSET_1,SQUARE_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,ORDINAL1,NEWTON,NAT_1,MCART_1,DOMAIN_1,PREPOWER,POWER,FUNCT_2,NAT_D,PRE_FF,FIB_NUM,ABIAN;
definitions SQUARE_1;
theorems NAT_1,MCART_1,POWER,PREPOWER,XCMPLX_1,PRE_FF,FIB_NUM,SQUARE_1,WSIERP_1,NAT_2,ABIAN,FIB_NUM2,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8;
schemes FIB_NUM,FIB_NUM2,NAT_1;
registrations SUBSET_1,ORDINAL1,XXREAL_0,XREAL_0,SQUARE_1,NAT_1,MEMBERED,XBOOLE_0,XCMPLX_0,CKB9,CKB10;
constructors DOMAIN_1,SQUARE_1,MEMBERED,NEWTON,PREPOWER,POWER,PRE_FF,NAT_D,ABIAN,FIB_NUM;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Th9: (for n being Nat holds ( ( ( tau ) to_power n ) + ( ( tau ) to_power ( n + 1 ) ) ) = ( ( tau ) to_power ( n + 2 ) ))
proof
defpred P[ Nat ]
 means
( ( ( tau ) to_power $1 ) + ( ( tau ) to_power ( $1 + 1 ) ) ) = ( ( tau ) to_power ( $1 + 2 ) );
let n being Nat;
A1: ( ( ( tau ) to_power ( 0 ) ) + ( ( tau ) to_power ( ( 0 ) + 1 ) ) ) = ( 1 + ( ( tau ) to_power 1 ) ) by POWER:24
.= ( 1 + ( ( 1 + ( sqrt 5 ) ) / 2 ) ) by FIB_NUM:def 1,POWER:25
.= ( ( ( ( 1 + ( sqrt 5 ) ) + ( sqrt 5 ) ) + 5 ) / 4 )
.= ( ( ( ( 1 + ( sqrt 5 ) ) + ( sqrt 5 ) ) + ( sqrt ( 5 ^2 ) ) ) / 4 ) by SQUARE_1:22
.= ( ( ( ( 1 + ( 1 * ( sqrt 5 ) ) ) + ( ( sqrt 5 ) * 1 ) ) + ( ( sqrt 5 ) * ( sqrt 5 ) ) ) / 4 ) by SQUARE_1:29
.= ( ( tau ) * ( tau ) ) by FIB_NUM:def 1
.= ( ( ( tau ) to_power 1 ) * ( tau ) ) by POWER:25
.= ( ( ( tau ) to_power 1 ) * ( ( tau ) to_power 1 ) ) by POWER:25
.= ( ( tau ) to_power ( 1 + 1 ) ) by POWER:27
.= ( ( tau ) to_power ( ( 0 ) + 2 ) );
A2: ( 1 + ( tau ) ) = ( 1 + ( ( tau ) to_power 1 ) ) by POWER:25
.= ( ( tau ) to_power ( ( 0 ) + 2 ) ) by A1,POWER:24;
A3: (for k being Nat holds ((P[ k ] & P[ ( k + 1 ) ]) implies P[ ( k + 2 ) ]))
proof
let k being Nat;
assume that
P[ k ]
and
P[ ( k + 1 ) ];
( ( ( tau ) to_power ( k + 2 ) ) + ( ( tau ) to_power ( ( k + 2 ) + 1 ) ) ) = ( ( ( tau ) to_power ( k + 2 ) ) + ( ( ( tau ) to_power ( k + 2 ) ) * ( ( tau ) to_power 1 ) ) ) by POWER:27
.= ( ( ( tau ) to_power ( k + 2 ) ) * ( 1 + ( ( tau ) to_power 1 ) ) )
.= ( ( ( tau ) to_power ( k + 2 ) ) * ( ( tau ) to_power 2 ) ) by A2,POWER:25
.= ( ( tau ) to_power ( ( k + 2 ) + 2 ) ) by POWER:27;
hence thesis;
end;
( ( ( tau ) to_power 1 ) + ( ( tau ) to_power ( 1 + 1 ) ) ) = ( ( tau ) + ( ( tau ) to_power ( 1 + 1 ) ) ) by POWER:25
.= ( ( tau ) + ( ( ( tau ) to_power 1 ) * ( ( tau ) to_power 1 ) ) ) by POWER:27
.= ( ( tau ) + ( ( ( tau ) to_power 1 ) * ( tau ) ) ) by POWER:25
.= ( ( tau ) + ( ( tau ) * ( tau ) ) ) by POWER:25
.= ( ( tau ) * ( 1 + ( tau ) ) )
.= ( ( ( tau ) to_power 1 ) * ( ( tau ) to_power 2 ) ) by A2,POWER:25
.= ( ( tau ) to_power ( 1 + 2 ) ) by POWER:27;
then A4: P[ 1 ];
A5: P[ ( 0 ) ] by A1;
(for k being Nat holds P[ k ]) from FIB_NUM:sch 1(A5,A4,A3);
hence thesis;
end;
