environ
vocabularies NUMBERS,SUBSET_1,XREAL_0,ORDINAL1,POWER,CARD_1,NEWTON,XXREAL_0,SQUARE_1,RELAT_1,XBOOLE_0,ARYTM_1,ABIAN,NAT_1,ARYTM_3,PREPOWER,FIB_NUM,FUNCT_1,ZFMISC_1,MCART_1,PRE_FF,FIB_NUM3;
notations TARSKI,XBOOLE_0,SUBSET_1,SQUARE_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,ORDINAL1,NEWTON,NAT_1,MCART_1,DOMAIN_1,PREPOWER,POWER,FUNCT_2,NAT_D,PRE_FF,FIB_NUM,ABIAN,CKB13,CKB36,CKB37;
definitions SQUARE_1,CKB13,CKB37;
theorems NAT_1,MCART_1,POWER,PREPOWER,XCMPLX_1,PRE_FF,FIB_NUM,SQUARE_1,WSIERP_1,NAT_2,ABIAN,FIB_NUM2,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47;
schemes FIB_NUM,FIB_NUM2,NAT_1;
registrations SUBSET_1,ORDINAL1,XXREAL_0,XREAL_0,SQUARE_1,NAT_1,MEMBERED,XBOOLE_0,XCMPLX_0,CKB9,CKB10,CKB22;
constructors DOMAIN_1,SQUARE_1,MEMBERED,NEWTON,PREPOWER,POWER,PRE_FF,NAT_D,ABIAN,FIB_NUM,CKB13,CKB36,CKB37;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
(for a,b,n being non empty (Element of ( NAT )) holds ( GenFib (a,b,n) ) = ( ( ( GenFib (a,b,( 0 )) ) * ( Fib ( n -' 1 ) ) ) + ( ( GenFib (a,b,1) ) * ( Fib n ) ) ))
proof
let a being non empty (Element of ( NAT )),b being non empty (Element of ( NAT )),n being non empty (Element of ( NAT ));
thus ( GenFib (a,b,n) ) = ( ( ( GenFib (a,b,( 0 )) ) * ( Fib ( n -' 1 ) ) ) + ( ( GenFib (a,b,1) ) * ( Fib n ) ) )
proof
defpred P[ Nat ]
 means
( GenFib (a,b,$1) ) = ( ( ( GenFib (a,b,( 0 )) ) * ( Fib ( $1 -' 1 ) ) ) + ( ( GenFib (a,b,1) ) * ( Fib $1 ) ) );
( GenFib (a,b,1) ) = ( ( ( GenFib (a,b,( 0 )) ) * ( Fib ( 0 ) ) ) + ( ( GenFib (a,b,1) ) * ( Fib 1 ) ) ) by PRE_FF:1
.= ( ( ( GenFib (a,b,( 0 )) ) * ( Fib ( 1 -' 1 ) ) ) + ( ( GenFib (a,b,1) ) * ( Fib 1 ) ) ) by XREAL_1:232;
then A1: P[ 1 ];
A2: (for k being non empty Nat holds ((P[ k ] & P[ ( k + 1 ) ]) implies P[ ( k + 2 ) ]))
proof
let k being non empty Nat;
assume that
A3: P[ k ]
and
A4: P[ ( k + 1 ) ];
1 <= k by NAT_2:19;
then A5: ( ( Fib ( k -' 1 ) ) + ( Fib ( ( k + 1 ) -' 1 ) ) ) = ( ( Fib ( k -' 1 ) ) + ( Fib ( ( k -' 1 ) + 1 ) ) ) by NAT_D:38
.= ( Fib ( ( ( k -' 1 ) + 1 ) + 1 ) ) by PRE_FF:1
.= ( Fib ( ( k -' 1 ) + 2 ) )
.= ( Fib ( ( k + 2 ) -' 1 ) ) by CKB4:1;
( GenFib (a,b,( k + 2 )) ) = ( ( ( ( GenFib (a,b,( 0 )) ) * ( Fib ( k -' 1 ) ) ) + ( ( GenFib (a,b,1) ) * ( Fib k ) ) ) + ( GenFib (a,b,( k + 1 )) ) ) by A3,CKB40:1
.= ( ( ( a * ( Fib ( k -' 1 ) ) ) + ( ( GenFib (a,b,1) ) * ( Fib k ) ) ) + ( GenFib (a,b,( k + 1 )) ) ) by CKB38:1
.= ( ( ( a * ( Fib ( k -' 1 ) ) ) + ( b * ( Fib k ) ) ) + ( GenFib (a,b,( k + 1 )) ) ) by CKB38:1
.= ( ( ( ( a * ( Fib ( k -' 1 ) ) ) + ( b * ( Fib k ) ) ) + ( ( GenFib (a,b,( 0 )) ) * ( Fib ( ( k + 1 ) -' 1 ) ) ) ) + ( ( GenFib (a,b,1) ) * ( Fib ( k + 1 ) ) ) ) by A4
.= ( ( ( ( a * ( Fib ( k -' 1 ) ) ) + ( b * ( Fib k ) ) ) + ( a * ( Fib ( ( k + 1 ) -' 1 ) ) ) ) + ( ( GenFib (a,b,1) ) * ( Fib ( k + 1 ) ) ) ) by CKB38:1
.= ( ( ( ( a * ( Fib ( k -' 1 ) ) ) + ( b * ( Fib k ) ) ) + ( a * ( Fib ( ( k + 1 ) -' 1 ) ) ) ) + ( b * ( Fib ( k + 1 ) ) ) ) by CKB38:1
.= ( ( a * ( ( Fib ( k -' 1 ) ) + ( Fib ( ( k + 1 ) -' 1 ) ) ) ) + ( b * ( ( Fib k ) + ( Fib ( k + 1 ) ) ) ) )
.= ( ( a * ( Fib ( ( k + 2 ) -' 1 ) ) ) + ( b * ( Fib ( k + 2 ) ) ) ) by A5,FIB_NUM2:24
.= ( ( a * ( Fib ( ( k + 2 ) -' 1 ) ) ) + ( ( GenFib (a,b,1) ) * ( Fib ( k + 2 ) ) ) ) by CKB38:1
.= ( ( ( GenFib (a,b,( 0 )) ) * ( Fib ( ( k + 2 ) -' 1 ) ) ) + ( ( GenFib (a,b,1) ) * ( Fib ( k + 2 ) ) ) ) by CKB38:1;
hence thesis;
end;
( ( ( 0 ) + 1 ) + 1 ) = 2;
then A6: ( Fib 2 ) = 1 by PRE_FF:1;
( GenFib (a,b,2) ) = ( GenFib (a,b,( ( 0 ) + 2 )) )
.= ( ( ( GenFib (a,b,( 0 )) ) * ( Fib ( 1 + ( 0 ) ) ) ) + ( ( GenFib (a,b,1) ) * ( Fib 2 ) ) ) by A6,CKB40:1,PRE_FF:1
.= ( ( ( GenFib (a,b,( 0 )) ) * ( Fib ( 1 + ( 1 -' 1 ) ) ) ) + ( ( GenFib (a,b,1) ) * ( Fib 2 ) ) ) by XREAL_1:232
.= ( ( ( GenFib (a,b,( 0 )) ) * ( Fib ( ( 1 + 1 ) -' 1 ) ) ) + ( ( GenFib (a,b,1) ) * ( Fib 2 ) ) ) by NAT_D:38
.= ( ( ( GenFib (a,b,( 0 )) ) * ( Fib ( 2 -' 1 ) ) ) + ( ( GenFib (a,b,1) ) * ( Fib 2 ) ) );
then A7: P[ 2 ];
(for k being non empty Nat holds P[ k ]) from FIB_NUM2:sch 1(A1,A7,A2);
hence thesis;
end;

end;
