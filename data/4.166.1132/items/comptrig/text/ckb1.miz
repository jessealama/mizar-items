environ
vocabularies NUMBERS,XREAL_0,ORDINAL1,NAT_1,XBOOLE_0,ARYTM_3,CARD_1,SUBSET_1,XXREAL_0,XCMPLX_0,COMPLEX1,ARYTM_1,RELAT_1,SQUARE_1,POWER,NEWTON,SIN_COS,XXREAL_1,FUNCT_1,ORDINAL2,REAL_1,FDIFF_1,RCOMP_1,VALUED_0,TARSKI,PARTFUN1,COMPTRIG;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,SQUARE_1,NAT_1,NEWTON,POWER,RELAT_1,FUNCT_1,RFUNCT_2,FCONT_1,FDIFF_1,SEQ_1,PARTFUN1,PARTFUN2,RCOMP_1,SIN_COS,XXREAL_0;
definitions RFUNCT_2,SQUARE_1,COMPLEX1,XCMPLX_0;
theorems NAT_1,SQUARE_1,POWER,ABSVALUE,RELAT_1,FUNCT_1,RFUNCT_2,PARTFUN1,FCONT_2,RCOMP_1,FDIFF_1,ROLLE,COMPLEX1,SIN_COS,SIN_COS2,XBOOLE_0,XCMPLX_1,XREAL_1,XXREAL_0,NEWTON,XCMPLX_0,XXREAL_1,XBOOLE_1;
schemes NAT_1;
registrations RELSET_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,NAT_1,MEMBERED,NEWTON,SIN_COS,XBOOLE_0,VALUED_0,FCONT_1,FUNCT_1;
constructors PARTFUN1,ARYTM_0,REAL_1,SQUARE_1,NAT_1,RCOMP_1,PARTFUN2,RFUNCT_2,FCONT_1,FDIFF_1,COMSEQ_3,BINARITH,SIN_COS,SEQ_1,BINOP_2,POWER,RVSUM_1,RELSET_1,ABIAN;
requirements NUMERALS,BOOLE,SUBSET,REAL,ARITHM;
begin
scheme Regrwithout0 { P[Nat] } : P[ 1 ]
provided
A1: (ex k being non  empty Nat st P[ k ])
and
A2: (for k being non  empty Nat holds ((k <> 1 & P[ k ]) implies (ex n being non  empty Nat st (n < k & P[ n ]))))
proof
consider t being non  empty Nat such that A3: P[ t ] by A1;
defpred R[ Nat ]
 means
P[ ( $1 + 1 ) ];
A4:now
let k being Nat;
assume that
A5: k <> ( 0 )
and
A6: R[ k ];
reconsider k1 = ( k + 1 ) as non  empty (Element of ( NAT ));
( k + 1 ) > ( ( 0 ) + 1 ) by A5,XREAL_1:6;
then consider n being non  empty Nat such that A7: n < k1 and A8: P[ n ] by A2,A6;
consider l being Nat such that A9: n = ( l + 1 ) by NAT_1:6;
take l;
thus l < k by A7,A9,XREAL_1:6;
thus R[ l ] by A8,A9;
end;
(ex s being Nat st t = ( s + 1 )) by NAT_1:6;
then A10: (ex k being Nat st R[ k ]) by A3;
R[ ( 0 ) ] from NAT_1:sch 7(A10,A4);
hence thesis;
end;
