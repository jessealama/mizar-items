environ
vocabularies NUMBERS,NAT_1,FINSEQ_1,VALUED_0,FINSEQ_2,CARD_1,RELAT_1,SUBSET_1,XBOOLE_0,FUNCT_1,TARSKI,XREAL_0,ORDINAL1,ORDINAL4,BINOP_1,BINOP_2,ARYTM_1,ARYTM_3,SQUARE_1,FUNCOP_1,REAL_1,FINSEQOP,ZFMISC_1,VALUED_1,XXREAL_0,CARD_3,XCMPLX_0,SETWISEO,SETWOP_2,FINSOP_1,RVSUM_1;
notations TARSKI,SUBSET_1,ZFMISC_1,ORDINAL1,CARD_1,NUMBERS,VALUED_0,XBOOLE_0,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,SQUARE_1,RELAT_1,FUNCT_1,PARTFUN1,BINOP_2,SETWISEO,FUNCT_2,BINOP_1,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_4,VALUED_1,NAT_1,SEQ_1,FINSOP_1,FINSEQOP,SETWOP_2,CKB3,CKB12,CKB13;
definitions BINOP_1,FINSEQOP,FINSEQ_1,SQUARE_1,FINSEQ_2,TARSKI,VALUED_1,FINSEQ_4,CKB12,CKB13;
theorems SQUARE_1,FUNCT_1,FUNCT_2,BINOP_1,FINSEQ_1,FUNCOP_1,FINSEQ_2,FINSEQOP,SETWOP_2,RELAT_1,FINSOP_1,XREAL_0,ZFMISC_1,XCMPLX_0,BINOP_2,SETWISEO,XREAL_1,NUMBERS,XBOOLE_1,FINSEQ_3,ORDINAL1,VALUED_0,VALUED_1,CARD_1,RFUNCT_1,CKB11,CKB12,CKB13,CKB14;
schemes NAT_1,FUNCT_2;
registrations XBOOLE_0,FUNCT_1,ORDINAL1,FUNCT_2,FUNCOP_1,NUMBERS,XCMPLX_0,XREAL_0,SQUARE_1,NAT_1,BINOP_2,MEMBERED,FINSEQ_1,FINSEQ_2,VALUED_0,VALUED_1,RELAT_1,XXREAL_0,REAL_1,FINSEQ_4,CARD_1,CKB1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
constructors PARTFUN1,BINOP_1,SETWISEO,SQUARE_1,NAT_1,BINOP_2,VALUED_1,SEQ_1,FINSEQOP,FINSEQ_4,FINSOP_1,SETWOP_2,RELSET_1,XXREAL_1,REAL_1,CKB3,CKB13;
requirements NUMERALS,SUBSET,BOOLE,ARITHM,REAL;
begin
reserve x1 for (Element of ( REAL ));
reserve x2 for (Element of ( REAL ));
reserve x3 for (Element of ( REAL ));
theorem
Th16: ( multreal ) is_distributive_wrt ( addreal )
proof
now
let x1;
let x2;
let x3;
thus ( ( multreal ) . (x1,( ( addreal ) . (x2,x3) )) ) = ( ( multreal ) . (x1,( x2 + x3 )) ) by BINOP_2:def 9
.= ( x1 * ( x2 + x3 ) ) by BINOP_2:def 11
.= ( ( x1 * x2 ) + ( x1 * x3 ) )
.= ( ( addreal ) . (( x1 * x2 ),( x1 * x3 )) ) by BINOP_2:def 9
.= ( ( addreal ) . (( ( multreal ) . (x1,x2) ),( x1 * x3 )) ) by BINOP_2:def 11
.= ( ( addreal ) . (( ( multreal ) . (x1,x2) ),( ( multreal ) . (x1,x3) )) ) by BINOP_2:def 11;
thus ( ( multreal ) . (( ( addreal ) . (x1,x2) ),x3) ) = ( ( multreal ) . (( x1 + x2 ),x3) ) by BINOP_2:def 9
.= ( ( x1 + x2 ) * x3 ) by BINOP_2:def 11
.= ( ( x1 * x3 ) + ( x2 * x3 ) )
.= ( ( addreal ) . (( x1 * x3 ),( x2 * x3 )) ) by BINOP_2:def 9
.= ( ( addreal ) . (( ( multreal ) . (x1,x3) ),( x2 * x3 )) ) by BINOP_2:def 11
.= ( ( addreal ) . (( ( multreal ) . (x1,x3) ),( ( multreal ) . (x2,x3) )) ) by BINOP_2:def 11;
end;
hence thesis by BINOP_1:11;
end;
