environ
vocabularies NUMBERS,NAT_1,FINSEQ_1,VALUED_0,FINSEQ_2,CARD_1,RELAT_1,SUBSET_1,XBOOLE_0,FUNCT_1,TARSKI,XREAL_0,ORDINAL1,ORDINAL4,BINOP_1,BINOP_2,ARYTM_1,ARYTM_3,SQUARE_1,FUNCOP_1,REAL_1,FINSEQOP,ZFMISC_1,VALUED_1,XXREAL_0,CARD_3,XCMPLX_0,SETWISEO,SETWOP_2,FINSOP_1,RVSUM_1;
notations TARSKI,SUBSET_1,ZFMISC_1,ORDINAL1,CARD_1,NUMBERS,VALUED_0,XBOOLE_0,XCMPLX_0,XXREAL_0,XREAL_0,REAL_1,SQUARE_1,RELAT_1,FUNCT_1,PARTFUN1,BINOP_2,SETWISEO,FUNCT_2,BINOP_1,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_4,VALUED_1,NAT_1,SEQ_1,FINSOP_1,FINSEQOP,SETWOP_2,CKB3,CKB12,CKB13,CKB17;
definitions BINOP_1,FINSEQOP,FINSEQ_1,SQUARE_1,FINSEQ_2,TARSKI,VALUED_1,FINSEQ_4,CKB12,CKB13,CKB17;
theorems SQUARE_1,FUNCT_1,FUNCT_2,BINOP_1,FINSEQ_1,FUNCOP_1,FINSEQ_2,FINSEQOP,SETWOP_2,RELAT_1,FINSOP_1,XREAL_0,ZFMISC_1,XCMPLX_0,BINOP_2,SETWISEO,XREAL_1,NUMBERS,XBOOLE_1,FINSEQ_3,ORDINAL1,VALUED_0,VALUED_1,CARD_1,RFUNCT_1,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25;
schemes NAT_1,FUNCT_2;
registrations XBOOLE_0,FUNCT_1,ORDINAL1,FUNCT_2,FUNCOP_1,NUMBERS,XCMPLX_0,XREAL_0,SQUARE_1,NAT_1,BINOP_2,MEMBERED,FINSEQ_1,FINSEQ_2,VALUED_0,VALUED_1,RELAT_1,XXREAL_0,REAL_1,FINSEQ_4,CARD_1,CKB1,CKB2,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
constructors PARTFUN1,BINOP_1,SETWISEO,SQUARE_1,NAT_1,BINOP_2,VALUED_1,SEQ_1,FINSEQOP,FINSEQ_4,FINSOP_1,SETWOP_2,RELSET_1,XXREAL_1,REAL_1,CKB3,CKB13,CKB17;
requirements NUMERALS,SUBSET,BOOLE,ARITHM,REAL;
begin
reserve F1 for  real-valued FinSequence;
reserve F2 for  real-valued FinSequence;
definition
let F1;
let F2;
redefine func F1 + F2 -> (FinSequence of ( REAL ))
equals
( ( addreal ) .: (F1,F2) );
coherence by CKB25:1;
compatibility
proof
reconsider F3 = F1,F4 = F2 as (FinSequence of ( REAL )) by CKB25:1;
let F being (FinSequence of ( REAL ));
( dom ( addreal ) ) = [: ( REAL ),( REAL ) :] by FUNCT_2:def 1;
then [: ( rng F3 ),( rng F4 ) :] c= ( dom ( addreal ) ) by ZFMISC_1:96;
then A1: ( dom ( ( addreal ) .: (F1,F2) ) ) = ( ( dom F1 ) /\ ( dom F2 ) ) by FUNCOP_1:69;
A2: ( dom ( F1 + F2 ) ) = ( ( dom F1 ) /\ ( dom F2 ) ) by VALUED_1:def 1;
thus (F = ( F1 + F2 ) implies F = ( ( addreal ) .: (F1,F2) ))
proof
assume A3: F = ( F1 + F2 );
(for z being set holds (z in ( dom ( ( addreal ) .: (F1,F2) ) ) implies ( F . z ) = ( ( addreal ) . (( F1 . z ),( F2 . z )) )))
proof
let z being set;
assume z in ( dom ( ( addreal ) .: (F1,F2) ) );
hence ( F . z ) = ( ( F1 . z ) + ( F2 . z ) ) by A2,A1,A3,VALUED_1:def 1
.= ( ( addreal ) . (( F1 . z ),( F2 . z )) ) by BINOP_2:def 9;
end;
hence thesis by A2,A1,A3,FUNCOP_1:21;
end;

assume A4: F = ( ( addreal ) .: (F1,F2) );
now
let c being set;
assume c in ( dom F );
hence ( F . c ) = ( ( addreal ) . (( F1 . c ),( F2 . c )) ) by A4,FUNCOP_1:22
.= ( ( F1 . c ) + ( F2 . c ) ) by BINOP_2:def 9;
end;
hence thesis by A1,A4,VALUED_1:def 1;
end;
commutativity
proof
let F being (FinSequence of ( REAL ));
let F1;
let F2;
assume A5: F = ( ( addreal ) .: (F1,F2) );
reconsider F1,F2 as (FinSequence of ( REAL )) by CKB25:1;
A6: ( dom ( addreal ) ) = [: ( REAL ),( REAL ) :] by FUNCT_2:def 1;
then A7: [: ( rng F2 ),( rng F1 ) :] c= ( dom ( addreal ) ) by ZFMISC_1:96;
[: ( rng F1 ),( rng F2 ) :] c= ( dom ( addreal ) ) by A6,ZFMISC_1:96;
then A8: ( dom ( ( addreal ) .: (F1,F2) ) ) = ( ( dom F1 ) /\ ( dom F2 ) ) by FUNCOP_1:69
.= ( dom ( ( addreal ) .: (F2,F1) ) ) by A7,FUNCOP_1:69;
(for z being set holds (z in ( dom ( ( addreal ) .: (F2,F1) ) ) implies ( F . z ) = ( ( addreal ) . (( F2 . z ),( F1 . z )) )))
proof
let z being set;
assume z in ( dom ( ( addreal ) .: (F2,F1) ) );
hence ( F . z ) = ( ( addreal ) . (( F1 . z ),( F2 . z )) ) by A5,A8,FUNCOP_1:22
.= ( ( F1 . z ) + ( F2 . z ) ) by BINOP_2:def 9
.= ( ( addreal ) . (( F2 . z ),( F1 . z )) ) by BINOP_2:def 9;
end;
hence thesis by A5,A8,FUNCOP_1:21;
end;
end;
