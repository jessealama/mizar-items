environ
vocabularies NUMBERS,SUBSET_1,FUNCT_1,NAT_1,TARSKI,MEMBERED,ORDINAL1,FINSET_1,RELAT_1,AFINSQ_1,ARYTM_1,ARYTM_3,FINSEQ_1,XXREAL_0,CARD_1,XBOOLE_0,ORDINAL4,FINSEQ_5,RFINSEQ,JORDAN3,CARD_3,XCMPLX_0,AFINSQ_2,BINOP_1,SETWISEO,FINSOP_1,FUNCOP_1,BINOP_2,VALUED_0,FUNCT_2,INT_1,PRGCOR_2,XREAL_0,SEQ_1,SERIES_1,VALUED_1,RAT_1,SQUARE_1,COMPLEX1,PARTFUN3,PRE_POLY,AMISTD_1,AMISTD_2;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,XREAL_0,NUMBERS,RELAT_1,FUNCT_1,XCMPLX_0,NAT_1,FINSET_1,ORDINAL1,XXREAL_0,NAT_D,AFINSQ_1,SEQ_1,MEMBERED,VALUED_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,INT_1,BINOP_1,BINOP_2,SETWISEO,FINSOP_1,FINSEQ_1,RECDEF_1,VALUED_0,SERIES_1,RAT_1,PARTFUN3,CKB33,CKB36,CKB47,CKB55,CKB60,CKB61,CKB75,CKB82;
definitions TARSKI,XBOOLE_0,FUNCT_1,VALUED_1,CKB33,CKB36,CKB47,CKB55,CKB60,CKB61,CKB75,CKB82;
theorems TARSKI,FUNCT_1,NAT_1,ZFMISC_1,RELAT_1,CARD_2,XBOOLE_0,XBOOLE_1,FINSET_1,ORDINAL1,CARD_1,XREAL_1,AFINSQ_1,XXREAL_0,NAT_2,FINSEQ_2,WELLORD2,MEMBERED,VALUED_0,VALUED_1,XREAL_0,NAT_D,SERIES_1,PARTFUN3,BINOP_1,BINOP_2,SETWISEO,FUNCOP_1,FINSOP_1,FINSEQ_1,FUNCT_2,XCMPLX_0,GRFUNC_1,CKB1,CKB2,CKB3,CKB5,CKB6,CKB7,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB55,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89;
schemes NAT_1,AFINSQ_1,FUNCT_2,BINOP_1,CKB8,CKB81;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,BINOP_2,CARD_1,FINSEQ_1,AFINSQ_1,RELSET_1,ORDINAL3,VALUED_1,VALUED_0,MEMBERED,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB35,CKB40,CKB46,CKB54,CKB56,CKB77,CKB78,CKB79,CKB80;
constructors SERIES_1,PARTFUN3,WELLORD2,SETWISEO,REAL_1,FINSOP_1,NAT_D,RECDEF_1,BINOP_2,RELSET_1,ORDINAL4,AFINSQ_1,MATRIX_7,SQUARE_1,FINSEQ_4,BINOP_1,CKB33,CKB36,CKB47,CKB55,CKB60,CKB61,CKB75,CKB82;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for Nat;
reserve D for non empty set;
reserve F for (XFinSequence of D);
reserve b for (BinOp of D);
theorem
Th56: ((b is  having_a_unity or ( len F ) >= 1) implies ( b "**" F ) = ( b "**" ( XFS2FS F ) ))
proof
assume A1: (b is  having_a_unity or ( len F ) >= 1);
per cases  by A1;
suppose A2: ( len F ) >= 1;

set FS = ( XFS2FS F );
( len F ) = ( len FS ) by AFINSQ_1:def 9;
then consider f being (Function of ( NAT ),D) such that A3: ( f . 1 ) = ( FS . 1 ) and A4: (for n being (Element of ( NAT )) holds ((( 0 ) <> n & n < ( len F )) implies ( f . ( n + 1 ) ) = ( b . (( f . n ),( FS . ( n + 1 ) )) ))) and A5: ( b "**" FS ) = ( f . ( len F ) ) by A2,FINSOP_1:def 1;
consider xf being (Function of ( NAT ),D) such that A6: ( xf . ( 0 ) ) = ( F . ( 0 ) ) and A7: (for n holds (( n + 1 ) < ( len F ) implies ( xf . ( n + 1 ) ) = ( b . (( xf . n ),( F . ( n + 1 ) )) ))) and A8: ( b "**" F ) = ( xf . ( ( len F ) - 1 ) ) by A2,CKB82:def 1;
defpred P[ Nat ]
 means
($1 < ( len F ) implies ( xf . $1 ) = ( f . ( $1 + 1 ) ));
A9: (for n holds (P[ n ] implies P[ ( n + 1 ) ]))
proof
let n;
assume that
A10: P[ n ];
set n1 = ( n + 1 );
set n2 = ( n1 + 1 );
assume A11: n1 < ( len F );
then (( ( 0 ) + 1 ) <= n2 & n2 <= ( len F )) by NAT_1:13;
then A12: ( F . ( n2 -' 1 ) ) = ( FS . n2 ) by AFINSQ_1:def 9;
(( xf . n1 ) = ( b . (( xf . n ),( F . n1 )) ) & ( f . ( n1 + 1 ) ) = ( b . (( f . n1 ),( FS . ( n1 + 1 ) )) )) by A7,A4,A11;
hence thesis by A10,A11,A12,NAT_1:13,NAT_D:34;
end;
reconsider L1 = ( ( len F ) - 1 ) as (Element of ( NAT )) by A2,NAT_1:21;
A13: L1 < ( L1 + 1 ) by NAT_1:13;
A14: P[ ( 0 ) ]
proof
assume ( 0 ) < ( len F );
then ( ( 0 ) + 1 ) <= ( len F ) by NAT_1:13;
then ( F . ( 1 -' 1 ) ) = ( FS . 1 ) by AFINSQ_1:def 9;
hence thesis by A6,A3,XREAL_1:232;
end;
(for n holds P[ n ]) from NAT_1:sch 2(A14,A9);
hence thesis by A8,A5,A13;
end;
suppose A15: (b is  having_a_unity & ( len F ) < 1);

then ( len F ) <= ( ( 0 ) + 1 );
then A16: ( len F ) = ( 0 ) by A15,NAT_1:8;
then (( len F ) = ( len ( XFS2FS F ) ) & ( b "**" F ) = ( the_unity_wrt b )) by A15,CKB82:def 1,AFINSQ_1:def 9;
hence thesis by A15,A16,FINSOP_1:def 1;
end;
end;
