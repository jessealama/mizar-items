environ
vocabularies NUMBERS,SUBSET_1,FUNCT_1,NAT_1,TARSKI,MEMBERED,ORDINAL1,FINSET_1,RELAT_1,AFINSQ_1,ARYTM_1,ARYTM_3,FINSEQ_1,XXREAL_0,CARD_1,XBOOLE_0,ORDINAL4,FINSEQ_5,RFINSEQ,JORDAN3,CARD_3,XCMPLX_0,AFINSQ_2,BINOP_1,SETWISEO,FINSOP_1,FUNCOP_1,BINOP_2,VALUED_0,FUNCT_2,INT_1,PRGCOR_2,XREAL_0,SEQ_1,SERIES_1,VALUED_1,RAT_1,SQUARE_1,COMPLEX1,PARTFUN3,PRE_POLY,AMISTD_1,AMISTD_2;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,XREAL_0,NUMBERS,RELAT_1,FUNCT_1,XCMPLX_0,NAT_1,FINSET_1,ORDINAL1,XXREAL_0,NAT_D,AFINSQ_1,SEQ_1,MEMBERED,VALUED_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,INT_1,BINOP_1,BINOP_2,SETWISEO,FINSOP_1,FINSEQ_1,RECDEF_1,VALUED_0,SERIES_1,RAT_1,PARTFUN3;
definitions TARSKI,XBOOLE_0,FUNCT_1,VALUED_1;
theorems TARSKI,FUNCT_1,NAT_1,ZFMISC_1,RELAT_1,CARD_2,XBOOLE_0,XBOOLE_1,FINSET_1,ORDINAL1,CARD_1,XREAL_1,AFINSQ_1,XXREAL_0,NAT_2,FINSEQ_2,WELLORD2,MEMBERED,VALUED_0,VALUED_1,XREAL_0,NAT_D,SERIES_1,PARTFUN3,BINOP_1,BINOP_2,SETWISEO,FUNCOP_1,FINSOP_1,FINSEQ_1,FUNCT_2,XCMPLX_0,GRFUNC_1,CKB1;
schemes NAT_1,AFINSQ_1,FUNCT_2,BINOP_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,BINOP_2,CARD_1,FINSEQ_1,AFINSQ_1,RELSET_1,ORDINAL3,VALUED_1,VALUED_0,MEMBERED;
constructors SERIES_1,PARTFUN3,WELLORD2,SETWISEO,REAL_1,FINSOP_1,NAT_D,RECDEF_1,BINOP_2,RELSET_1,ORDINAL4,AFINSQ_1,MATRIX_7,SQUARE_1,FINSEQ_4,BINOP_1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve y for set;
theorem
Lm2: (for X,Y being  finite set holds (for F being (Function of X,Y) holds (( card X ) = ( card Y ) implies (F is  onto iff F is  one-to-one))))
proof
let X being  finite set,Y being  finite set;
let F being (Function of X,Y);
assume that
A1: ( card X ) = ( card Y );
thus (F is  onto implies F is  one-to-one)
proof
assume A2: F is  onto;
assume (not F is  one-to-one);
then consider x1 being set,x2 being set such that A3: x1 in ( dom F ) and A4: x2 in ( dom F ) and A5: ( F . x1 ) = ( F . x2 ) and A6: x1 <> x2 by FUNCT_1:def 4;
reconsider Xx = ( X \ { x1 } ) as  finite set;
Y c= ( F .: Xx )
proof
let Fy being set;
assume Fy in Y;
then Fy in ( rng F ) by A2,FUNCT_2:def 3;
then consider y such that A7: y in ( dom F ) and A8: ( F . y ) = Fy by FUNCT_1:def 3;
now
per cases ;
suppose A9: y = x1;

x2 in Xx by A4,A6,ZFMISC_1:56;
hence thesis by A4,A5,A8,A9,FUNCT_1:def 6;
end;
suppose y <> x1;

then y in Xx by A7,ZFMISC_1:56;
hence thesis by A7,A8,FUNCT_1:def 6;
end;
end;
hence thesis;
end;
then A10: ( card Y ) c= ( card Xx ) by CARD_1:66;
{ x1 } meets X by A3,ZFMISC_1:48;
then A11: Xx <> X by XBOOLE_1:83;
Xx c< X by A11,XBOOLE_0:def 8;
then ( card Xx ) < ( card X ) by CARD_2:48;
hence thesis by A1,A10,NAT_1:39;
end;

thus (F is  one-to-one implies F is  onto)
proof
assume F is  one-to-one;
then ( dom F ),( F .: ( dom F ) ) are_equipotent  by CARD_1:33;
then A12: ( card ( dom F ) ) = ( card ( F .: ( dom F ) ) ) by CARD_1:5;
assume (not F is  onto);
then (not ( rng F ) = Y) by FUNCT_2:def 3;
then (not Y c= ( rng F )) by XBOOLE_0:def 10;
then consider y such that A13: y in Y and A14: (not y in ( rng F )) by TARSKI:def 3;
A15: ( card ( rng F ) ) <= ( card ( Y \ { y } ) ) by A14,NAT_1:43,ZFMISC_1:34;
A16: ( F .: ( dom F ) ) = ( rng F ) by RELAT_1:113;
{ y } meets Y by A13,ZFMISC_1:48;
then A17: ( Y \ { y } ) <> Y by XBOOLE_1:83;
( Y \ { y } ) c< Y by A17,XBOOLE_0:def 8;
then ( card ( Y \ { y } ) ) < ( card Y ) by CARD_2:48;
hence thesis by A1,A13,A15,A12,A16,FUNCT_2:def 1;
end;

end;
