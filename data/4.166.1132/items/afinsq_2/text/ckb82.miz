environ
vocabularies NUMBERS,SUBSET_1,FUNCT_1,NAT_1,TARSKI,MEMBERED,ORDINAL1,FINSET_1,RELAT_1,AFINSQ_1,ARYTM_1,ARYTM_3,FINSEQ_1,XXREAL_0,CARD_1,XBOOLE_0,ORDINAL4,FINSEQ_5,RFINSEQ,JORDAN3,CARD_3,XCMPLX_0,AFINSQ_2,BINOP_1,SETWISEO,FINSOP_1,FUNCOP_1,BINOP_2,VALUED_0,FUNCT_2,INT_1,PRGCOR_2,XREAL_0,SEQ_1,SERIES_1,VALUED_1,RAT_1,SQUARE_1,COMPLEX1,PARTFUN3,PRE_POLY,AMISTD_1,AMISTD_2;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,XREAL_0,NUMBERS,RELAT_1,FUNCT_1,XCMPLX_0,NAT_1,FINSET_1,ORDINAL1,XXREAL_0,NAT_D,AFINSQ_1,SEQ_1,MEMBERED,VALUED_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,INT_1,BINOP_1,BINOP_2,SETWISEO,FINSOP_1,FINSEQ_1,RECDEF_1,VALUED_0,SERIES_1,RAT_1,PARTFUN3,CKB33,CKB36,CKB47,CKB55,CKB60,CKB61,CKB75;
definitions TARSKI,XBOOLE_0,FUNCT_1,VALUED_1,CKB33,CKB36,CKB47,CKB55,CKB60,CKB61,CKB75;
theorems TARSKI,FUNCT_1,NAT_1,ZFMISC_1,RELAT_1,CARD_2,XBOOLE_0,XBOOLE_1,FINSET_1,ORDINAL1,CARD_1,XREAL_1,AFINSQ_1,XXREAL_0,NAT_2,FINSEQ_2,WELLORD2,MEMBERED,VALUED_0,VALUED_1,XREAL_0,NAT_D,SERIES_1,PARTFUN3,BINOP_1,BINOP_2,SETWISEO,FUNCOP_1,FINSOP_1,FINSEQ_1,FUNCT_2,XCMPLX_0,GRFUNC_1,CKB1,CKB2,CKB3,CKB5,CKB6,CKB7,CKB33,CKB34,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB55,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76;
schemes NAT_1,AFINSQ_1,FUNCT_2,BINOP_1,CKB8,CKB81;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FUNCOP_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,BINOP_2,CARD_1,FINSEQ_1,AFINSQ_1,RELSET_1,ORDINAL3,VALUED_1,VALUED_0,MEMBERED,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB35,CKB40,CKB46,CKB54,CKB56,CKB77,CKB78,CKB79,CKB80;
constructors SERIES_1,PARTFUN3,WELLORD2,SETWISEO,REAL_1,FINSOP_1,NAT_D,RECDEF_1,BINOP_2,RELSET_1,ORDINAL4,AFINSQ_1,MATRIX_7,SQUARE_1,FINSEQ_4,BINOP_1,CKB33,CKB36,CKB47,CKB55,CKB60,CKB61,CKB75;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for Nat;
reserve n for Nat;
reserve D for non  empty set;
reserve F for (XFinSequence of D);
reserve b for (BinOp of D);
reserve d for (Element of D);
reserve d1 for (Element of D);
reserve d2 for (Element of D);
definition
let D;
let F being XFinSequence;
let b;
assume A1: F is D -valued;
assume A2: (b is  having_a_unity or ( len F ) >= 1);
func b "**" F -> (Element of D) means 
:Def9: it = ( the_unity_wrt b ) if (b is  having_a_unity & ( len F ) = ( 0 )) otherwise (ex f being (Function of ( NAT ),D) st ((( f . ( 0 ) ) = ( F . ( 0 ) ) & (for n holds (( n + 1 ) < ( len F ) implies ( f . ( n + 1 ) ) = ( b . (( f . n ),( F . ( n + 1 ) )) )))) & it = ( f . ( ( len F ) - 1 ) )));
existence
proof
now
per cases ;
suppose ( len F ) = ( 0 );

hence thesis by A2;
end;
suppose A3: ( len F ) <> ( 0 );

defpred P[ Nat ]
 means
(for F holds ((( len F ) = $1 & ( len F ) <> ( 0 )) implies (ex d being (Element of D) st (ex f being (Function of ( NAT ),D) st ((( f . ( 0 ) ) = ( F . ( 0 ) ) & (for n holds (( n + 1 ) < ( len F ) implies ( f . ( n + 1 ) ) = ( b . (( f . n ),( F . ( n + 1 ) )) )))) & d = ( f . ( ( len F ) - 1 ) ))))));
A4: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume that
A5: P[ k ];
let F;
assume that
A6: ( len F ) = ( k + 1 )
and
( len F ) <> ( 0 );
set G = ( F | k );
A7: k < ( k + 1 ) by NAT_1:13;
then A8: ( len G ) = k by A6,AFINSQ_1:11;
now
per cases ;
suppose A9: ( len G ) = ( 0 );

then ( 0 ) in ( dom F ) by A6,A8,CARD_1:49,TARSKI:def 1;
then A10: ( F . ( 0 ) ) in ( rng F ) by FUNCT_1:def 3;
( rng F ) c= D by RELAT_1:def 19;
then reconsider f = ( ( NAT ) --> ( F . ( 0 ) ) ) as (Function of ( NAT ),D) by A10,FUNCOP_1:45;
take d = ( f . ( 0 ) );
take f;
thus ( f . ( 0 ) ) = ( F . ( 0 ) ) by FUNCOP_1:7;
thus (for n holds (( n + 1 ) < ( len F ) implies ( f . ( n + 1 ) ) = ( b . (( f . n ),( F . ( n + 1 ) )) ))) by A6,A8,A9,NAT_1:14;
k < ( k + 1 ) by NAT_1:13;
hence d = ( f . ( ( len F ) - 1 ) ) by A6,A9,AFINSQ_1:11;
end;
suppose A11: ( len G ) <> ( 0 );

k < ( len F ) by A6,NAT_1:13;
then k in ( dom F ) by NAT_1:44;
then A12: ( F . k ) in ( rng F ) by FUNCT_1:def 3;
( rng F ) c= D by RELAT_1:def 19;
then reconsider d1 = ( F . k ) as (Element of D) by A12;
A13: ( 0 ) in ( len G ) by A11,NAT_1:44;
consider d being (Element of D),f being (Function of ( NAT ),D) such that A14: ( f . ( 0 ) ) = ( G . ( 0 ) ) and A15: (for n holds (( n + 1 ) < ( len G ) implies ( f . ( n + 1 ) ) = ( b . (( f . n ),( G . ( n + 1 ) )) ))) and A16: d = ( f . ( ( len G ) - 1 ) ) by A5,A6,A7,A11,AFINSQ_1:11;
deffunc F((Element of ( NAT ))) = ( f . $1 );
reconsider K = k as (Element of ( NAT )) by ORDINAL1:def 12;
consider h being (Function of ( NAT ),D) such that A17: ( h . K ) = ( b . (d,d1) ) and A18: (for n being (Element of ( NAT )) holds (n <> K implies ( h . n ) = F(n))) from FUNCT_2:sch 6;
take a = ( h . k );
take h;
( h . ( 0 ) ) = ( f . ( 0 ) ) by A8,A11,A18;
hence ( h . ( 0 ) ) = ( F . ( 0 ) ) by A14,A13,FUNCT_1:47;
thus (for n holds (( n + 1 ) < ( len F ) implies ( h . ( n + 1 ) ) = ( b . (( h . n ),( F . ( n + 1 ) )) )))
proof
let n;
assume ( n + 1 ) < ( len F );
then A19: ( n + 1 ) <= ( len G ) by A6,A8,NAT_1:13;
now
per cases  by A19,XXREAL_0:1;
suppose A20: ( n + 1 ) = ( len G );

then A21: n < k by A8,NAT_1:13;
(( n + 1 ) = k & n in ( NAT )) by A6,A7,A20,AFINSQ_1:11,ORDINAL1:def 12;
hence thesis by A16,A17,A18,A20,A21;
end;
suppose A22: ( n + 1 ) < ( len G );

then ( n + 1 ) in ( dom G ) by NAT_1:44;
then A23: ( G . ( n + 1 ) ) = ( F . ( n + 1 ) ) by FUNCT_1:47;
(n <= ( n + 1 ) & n in ( NAT )) by NAT_1:11,ORDINAL1:def 12;
then A24: ( f . n ) = ( h . n ) by A8,A18,A22;
( f . ( n + 1 ) ) = ( h . ( n + 1 ) ) by A8,A18,A22;
hence thesis by A15,A22,A23,A24;
end;
end;
hence thesis;
end;

thus a = ( h . ( ( len F ) - 1 ) ) by A6;
end;
end;
hence thesis;
end;
A25: P[ ( 0 ) ];
(for k holds P[ k ]) from NAT_1:sch 2(A25,A4);
hence thesis by A1,A3;
end;
end;
hence thesis;
end;
uniqueness
proof
let d1 being (Element of D);
let d2 being (Element of D);
thus ((((b is  having_a_unity & ( len F ) = ( 0 )) & d1 = ( the_unity_wrt b )) & d2 = ( the_unity_wrt b )) implies d1 = d2);
A26: ( ( ( len F ) - 1 ) + 1 ) = ( len F );
assume ((not b is  having_a_unity) or ( len F ) <> ( 0 ));
then ( 0 ) < ( len F ) by A2;
then A27: ( ( len F ) - 1 ) is (Element of ( NAT )) by NAT_1:20;
given f1 being (Function of ( NAT ),D) such that
A28: ( f1 . ( 0 ) ) = ( F . ( 0 ) )
and
A29: (for n holds (( n + 1 ) < ( len F ) implies ( f1 . ( n + 1 ) ) = ( b . (( f1 . n ),( F . ( n + 1 ) )) )))
and
A30: d1 = ( f1 . ( ( len F ) - 1 ) );

given f2 being (Function of ( NAT ),D) such that
A31: ( f2 . ( 0 ) ) = ( F . ( 0 ) )
and
A32: (for n holds (( n + 1 ) < ( len F ) implies ( f2 . ( n + 1 ) ) = ( b . (( f2 . n ),( F . ( n + 1 ) )) )))
and
A33: d2 = ( f2 . ( ( len F ) - 1 ) );

defpred P[ Nat ]
 means
(( $1 + 1 ) <= ( len F ) implies ( f1 . $1 ) = ( f2 . $1 ));
A34: (P[ n ] implies P[ ( n + 1 ) ])
proof
assume A35: P[ n ];
assume ( ( n + 1 ) + 1 ) <= ( len F );
then A36: ( n + 1 ) < ( len F ) by NAT_1:13;
then ( f2 . ( n + 1 ) ) = ( b . (( f2 . n ),( F . ( n + 1 ) )) ) by A32;
hence thesis by A29,A35,A36;
end;
A37: P[ ( 0 ) ] by A28,A31;
(for n holds P[ n ]) from NAT_1:sch 2(A37,A34);
hence thesis by A30,A33,A26,A27;
end;
consistency;
end;
