environ
vocabularies NUMBERS,SUBSET_1,RLVECT_1,XBOOLE_0,ALGSTR_0,BINOP_1,FUNCT_1,ARYTM_3,RELAT_1,VECTSP_1,MESFUNC1,ALGSTR_1,SUPINF_2,SETWISEO,LATTICES,STRUCT_0,FUNCOP_1,ARYTM_1,FINSEQOP,FINSEQ_1,FINSEQ_2,TARSKI,RVSUM_1,ORDINAL4,XXREAL_0,NAT_1,CARD_3,FINSUB_1,FINSEQ_4,SETWOP_2,FINSET_1,CARD_1,ORDINAL1,PARTFUN1,FINSOP_1,GROUP_1,FVSUM_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,ORDINAL1,NAT_1,RELAT_1,FUNCT_1,STRUCT_0,ALGSTR_0,PARTFUN1,FUNCT_2,FINSEQ_1,FINSEQ_4,BINOP_1,FUNCOP_1,RLVECT_1,SETWISEO,FINSOP_1,FINSEQ_2,FINSEQOP,SETWOP_2,GROUP_1,ALGSTR_1,GROUP_4,VECTSP_1,FINSET_1,FINSUB_1,MATRIX_2,XXREAL_0,CKB14,CKB15,CKB23,CKB25,CKB31,CKB33,CKB45,CKB47,CKB65,CKB67,CKB77,CKB79,CKB92;
definitions SETWISEO,ALGSTR_1,GROUP_4,RLVECT_1,ALGSTR_0,CKB14,CKB15,CKB23,CKB31,CKB45,CKB65,CKB77,CKB92;
theorems FINSEQ_1,FINSEQ_2,TARSKI,FUNCT_1,FUNCT_2,NAT_1,BINOP_1,FINSEQOP,VECTSP_1,FUNCOP_1,SETWOP_2,RLVECT_1,RELAT_1,SETWISEO,FINSEQ_3,ZFMISC_1,FINSEQ_4,ALGSTR_1,FINSOP_1,GROUP_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,ORDINAL1,GROUP_4,XXREAL_0,PARTFUN1,CARD_1,CKB1,CKB2,CKB3,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB103;
schemes NAT_1,FUNCT_2;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FUNCT_2,FINSET_1,FINSUB_1,XREAL_0,NAT_1,FINSEQ_1,FINSEQ_2,STRUCT_0,VECTSP_1,ALGSTR_1,CARD_1,GROUP_1,CKB4,CKB5,CKB6,CKB91;
constructors PARTFUN1,BINOP_1,SETWISEO,SQUARE_1,NAT_1,FINSEQOP,FINSEQ_4,FINSOP_1,SETWOP_2,ALGSTR_1,GROUP_4,MATRIX_2,RELSET_1,CKB14,CKB15,CKB23,CKB25,CKB31,CKB33,CKB45,CKB47,CKB65,CKB67,CKB77,CKB79;
requirements NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve i for (Element of ( NAT ));
reserve K for non  empty addLoopStr;
reserve K for non  empty multMagma;
reserve K for  Abelian  add-associative  right_zeroed  right_complementable non  empty addLoopStr;
reserve K for  commutative  associative  well-unital non  empty doubleLoopStr;
theorem
( Product ( i |-> ( 1_ K ) ) ) = ( 1_ K )
proof
( the_unity_wrt (the multF of K) ) = ( 1_ K ) by CKB8:1;
hence thesis by SETWOP_2:25;
end;
