environ
vocabularies RELAT_1,XBOOLE_0,PARTFUN1,FUNCT_1,TARSKI,SUBSET_1,ZFMISC_1,RELAT_2,MCART_1,SETFAM_1,FUNCT_2,GROUP_9;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,MCART_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,PARTFUN1,CKB1,CKB4,CKB14,CKB33;
definitions TARSKI,XBOOLE_0,PARTFUN1,FUNCT_1,SUBSET_1,CKB1,CKB14,CKB33;
theorems TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,PARTFUN1,GRFUNC_1,RELSET_1,SUBSET_1,XBOOLE_0,XBOOLE_1,RELAT_2,MCART_1,SETFAM_1,CKB1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35;
schemes FUNCT_1,PARTFUN1,XBOOLE_0,RELSET_1,SUBSET_1,CKB12,CKB13;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,RELSET_1,GRFUNC_1,CKB2,CKB3,CKB17,CKB18,CKB19;
constructors RELAT_2,PARTFUN1,MCART_1,SETFAM_1,RELSET_1,CKB1,CKB14,CKB33;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve x for set;
theorem
Th31: (for f being (Function of X,Y) holds ((f is  one-to-one & ( rng f ) = Y) implies ( f " ) is (Function of Y,X)))
proof
let f being (Function of X,Y);
assume that
A1: f is  one-to-one
and
A2: ( rng f ) = Y;
A3: ( rng ( f " ) ) c= X
proof
let x;
assume x in ( rng ( f " ) );
then x in ( dom f ) by A1,FUNCT_1:33;
hence thesis;
end;
( dom ( f " ) ) = Y by A1,A2,FUNCT_1:33;
then reconsider R = ( f " ) as (Relation of Y,X) by A3,RELSET_1:4;
R is  quasi_total
proof
per cases ;
case (X = ( {} ) implies Y = ( {} ));
thus thesis by A1,A2,FUNCT_1:33;
end;
case (X = ( {} ) & Y <> ( {} ));
then ( rng f ) = ( {} );
then ( dom ( f " ) ) = ( {} ) by A1,FUNCT_1:32;
hence thesis;
end;
end;
hence thesis;
end;
