environ
vocabularies RELAT_1,XBOOLE_0,PARTFUN1,FUNCT_1,TARSKI,SUBSET_1,ZFMISC_1,RELAT_2,MCART_1,SETFAM_1,FUNCT_2,GROUP_9;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,MCART_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,PARTFUN1,CKB1,CKB4,CKB14;
definitions TARSKI,XBOOLE_0,PARTFUN1,FUNCT_1,SUBSET_1,CKB1,CKB14;
theorems TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,PARTFUN1,GRFUNC_1,RELSET_1,SUBSET_1,XBOOLE_0,XBOOLE_1,RELAT_2,MCART_1,SETFAM_1,CKB1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22;
schemes FUNCT_1,PARTFUN1,XBOOLE_0,RELSET_1,SUBSET_1,CKB12,CKB13;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,RELSET_1,GRFUNC_1,CKB2,CKB3,CKB17,CKB18,CKB19;
constructors RELAT_2,PARTFUN1,MCART_1,SETFAM_1,RELSET_1,CKB1,CKB14;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve Z for set;
theorem
Th19: (for f being  quasi_total (Relation of X,Y) holds (for g being  quasi_total (Relation of Y,Z) holds ((Y = ( {} ) implies (Z = ( {} ) or X = ( {} ))) implies ( f * g ) is  quasi_total)))
proof
let f being  quasi_total (Relation of X,Y);
let g being  quasi_total (Relation of Y,Z);
assume that
A1: (Y = ( {} ) implies (Z = ( {} ) or X = ( {} )));
per cases ;
case A2: (Z <> ( {} ) or X = ( {} ));
per cases ;
suppose Z <> ( {} );

then A3: ( dom g ) = Y by CKB1:def 1;
(( dom f ) = X & ( rng f ) c= Y) by A1,A2,CKB1:def 1;
hence thesis by A3,RELAT_1:27;
end;
suppose Z = ( {} );

hence thesis by A2;
end;
end;
case (Z = ( {} ) & X <> ( {} ));
hence thesis;
end;
end;
