environ
vocabularies RELAT_1,XBOOLE_0,PARTFUN1,FUNCT_1,TARSKI,SUBSET_1,ZFMISC_1,RELAT_2,MCART_1,SETFAM_1,FUNCT_2,GROUP_9;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,MCART_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,PARTFUN1,CKB1,CKB4;
definitions TARSKI,XBOOLE_0,PARTFUN1,FUNCT_1,SUBSET_1,CKB1;
theorems TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,PARTFUN1,GRFUNC_1,RELSET_1,SUBSET_1,XBOOLE_0,XBOOLE_1,RELAT_2,MCART_1,SETFAM_1,CKB1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11;
schemes FUNCT_1,PARTFUN1,XBOOLE_0,RELSET_1,SUBSET_1,CKB12;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,RELSET_1,GRFUNC_1,CKB2,CKB3;
constructors RELAT_2,PARTFUN1,MCART_1,SETFAM_1,RELSET_1,CKB1;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
scheme Lambda1 { X,Y() -> set,F(set) -> set } : (ex f being (Function of X(),Y()) st (for x holds (x in X() implies ( f . x ) = F(x))))
provided
A1: (for x holds (x in X() implies F(x) in Y()))
proof
defpred P[ set,set ]
 means
$2 = F($1);
A2: (for x holds (x in X() implies (ex y st (y in Y() & P[ x,y ])))) by A1;
thus (ex f being (Function of X(),Y()) st (for x holds (x in X() implies P[ x,( f . x ) ]))) from CKB12:sch 1(A2);
end;
