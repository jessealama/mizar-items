environ
vocabularies RELAT_1,XBOOLE_0,PARTFUN1,FUNCT_1,TARSKI,SUBSET_1,ZFMISC_1,RELAT_2,MCART_1,SETFAM_1,FUNCT_2,GROUP_9;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,MCART_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,PARTFUN1,CKB1,CKB4,CKB14;
definitions TARSKI,XBOOLE_0,PARTFUN1,FUNCT_1,SUBSET_1,CKB1,CKB14;
theorems TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,PARTFUN1,GRFUNC_1,RELSET_1,SUBSET_1,XBOOLE_0,XBOOLE_1,RELAT_2,MCART_1,SETFAM_1,CKB1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes FUNCT_1,PARTFUN1,XBOOLE_0,RELSET_1,SUBSET_1,CKB12,CKB13;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,RELSET_1,GRFUNC_1,CKB2,CKB3,CKB17,CKB18,CKB19;
constructors RELAT_2,PARTFUN1,MCART_1,SETFAM_1,RELSET_1,CKB1,CKB14;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve x1 for set;
reserve x2 for set;
theorem
(for f being (Function of X,Y) holds ((Y = ( {} ) implies X = ( {} )) implies (f is  one-to-one iff (for x1 holds (for x2 holds (((x1 in X & x2 in X) & ( f . x1 ) = ( f . x2 )) implies x1 = x2))))))
proof
let f being (Function of X,Y);
assume (Y = ( {} ) implies X = ( {} ));
then ( dom f ) = X by CKB1:def 1;
hence thesis by FUNCT_1:def 4;
end;
