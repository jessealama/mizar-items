environ
vocabularies RELAT_1,XBOOLE_0,PARTFUN1,FUNCT_1,TARSKI,SUBSET_1,ZFMISC_1,RELAT_2,MCART_1,SETFAM_1,FUNCT_2,GROUP_9;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,MCART_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,PARTFUN1,CKB1,CKB4;
definitions TARSKI,XBOOLE_0,PARTFUN1,FUNCT_1,SUBSET_1,CKB1;
theorems TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,PARTFUN1,GRFUNC_1,RELSET_1,SUBSET_1,XBOOLE_0,XBOOLE_1,RELAT_2,MCART_1,SETFAM_1,CKB1,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
schemes FUNCT_1,PARTFUN1,XBOOLE_0,RELSET_1,SUBSET_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,RELSET_1,GRFUNC_1,CKB2,CKB3;
constructors RELAT_2,PARTFUN1,MCART_1,SETFAM_1,RELSET_1,CKB1;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve Z for set;
theorem
(for f being (Function of X,Y) holds (((Y = ( {} ) implies X = ( {} )) & Y c= Z) implies f is (Function of X,Z)))
proof
let f being (Function of X,Y);
assume that
A1: (Y <> ( {} ) or X = ( {} ))
and
A2: Y c= Z;
reconsider R = f as (Relation of X,Z) by A2,RELSET_1:7;
R is  quasi_total
proof
per cases ;
case (Z = ( {} ) implies X = ( {} ));
thus thesis by A1,CKB1:def 1;
end;
case (Z = ( {} ) & X <> ( {} ));
hence thesis;
end;
end;
hence thesis;
end;
