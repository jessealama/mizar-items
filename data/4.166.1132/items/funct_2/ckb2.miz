environ
vocabularies RELAT_1,XBOOLE_0,PARTFUN1,FUNCT_1,TARSKI,SUBSET_1,ZFMISC_1,RELAT_2,MCART_1,SETFAM_1,FUNCT_2,GROUP_9;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,MCART_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,PARTFUN1,CKB1;
definitions TARSKI,XBOOLE_0,PARTFUN1,FUNCT_1,SUBSET_1,CKB1;
theorems TARSKI,RELAT_1,FUNCT_1,ZFMISC_1,PARTFUN1,GRFUNC_1,RELSET_1,SUBSET_1,XBOOLE_0,XBOOLE_1,RELAT_2,MCART_1,SETFAM_1,CKB1;
schemes FUNCT_1,PARTFUN1,XBOOLE_0,RELSET_1,SUBSET_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,RELSET_1,GRFUNC_1;
constructors RELAT_2,PARTFUN1,MCART_1,SETFAM_1,RELSET_1,CKB1;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
registration
let X;
let Y;
cluster  quasi_total for (PartFunc of X,Y);
existence
proof
per cases ;
suppose A1: (Y = ( {} ) & X <> ( {} ));

reconsider R = ( {} ) as (PartFunc of X,Y) by RELSET_1:12;
take R;
thus thesis by A1,CKB1:def 1;
end;
suppose A2: (Y <> ( {} ) or X = ( {} ));

then consider f being Function such that A3: X = ( dom f ) and A4: ( rng f ) c= Y by FUNCT_1:8;
reconsider R = f as (PartFunc of X,Y) by A3,A4,RELSET_1:4;
take R;
thus thesis by A2,A3,CKB1:def 1;
end;
end;
end;
