environ
vocabularies DIRAF,AFF_2,SUBSET_1,ANALOAF,AFF_1,INCSP_1,VECTSP_1;
notations STRUCT_0,ANALOAF,DIRAF,AFF_1,AFF_2,PAPDESAF;
theorems AFF_1,AFF_2,PAPDESAF,DIRAF,CKB1,CKB2,CKB3,CKB4;
registrations STRUCT_0,PAPDESAF;
constructors AFF_1,AFF_2,TRANSLAC;
begin
reserve SAS for AffinPlane;
theorem
(for o,a being (Element of SAS) holds (ex p being (Element of SAS) st (for b,c being (Element of SAS) holds (o,a // o,p & (ex d being (Element of SAS) st (o,p // o,b implies (o,c // o,d & p,c // b,d)))))))
proof
let o being (Element of SAS),a being (Element of SAS);
(ex p being (Element of SAS) st (o <> p & o,a // o,p))
proof
consider x being (Element of SAS),y being (Element of SAS) such that A1: x <> y by DIRAF:40;
now
assume a = o;
then A2: (o,a // o,x & o,a // o,y) by AFF_1:3;
(o <> x or o <> y) by A1;
hence thesis by A2;
end;
hence thesis by AFF_1:2;
end;
then consider p being (Element of SAS) such that A3: o <> p and A4: o,a // o,p;
take p;
thus (for b,c being (Element of SAS) holds (o,a // o,p & (ex d being (Element of SAS) st (o,p // o,b implies (o,c // o,d & p,c // b,d)))))
proof
let b being (Element of SAS),c being (Element of SAS);
(ex d being (Element of SAS) st (o,p // o,b implies (o,c // o,d & p,c // b,d)))
proof
now
assume o,p // o,b;
then p,o // o,b by AFF_1:4;
then consider d being (Element of SAS) such that A5: (c,o // o,d & c,p // b,d) by A3,DIRAF:40;
(o,c // o,d & p,c // b,d) by A5,AFF_1:4;
hence thesis;
end;
hence thesis;
end;
hence thesis by A4;
end;

end;
