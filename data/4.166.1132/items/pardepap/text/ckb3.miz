environ
vocabularies DIRAF,AFF_2,SUBSET_1,ANALOAF,AFF_1,INCSP_1,VECTSP_1;
notations STRUCT_0,ANALOAF,DIRAF,AFF_1,AFF_2,PAPDESAF;
theorems AFF_1,AFF_2,PAPDESAF,DIRAF,CKB1,CKB2;
registrations STRUCT_0,PAPDESAF;
constructors AFF_1,AFF_2,TRANSLAC;
begin
reserve SAS for AffinPlane;
theorem
Th3: (SAS is  translational implies (for a,a9,b,b9,c,c9 being (Element of SAS) holds (((((((not a,a9 // a,b) & (not a,a9 // a,c)) & a,a9 // b,b9) & a,a9 // c,c9) & a,b // a9,b9) & a,c // a9,c9) implies b,c // b9,c9)))
proof
assume A1: SAS is  translational;
let a being (Element of SAS);
let a9 being (Element of SAS);
let b being (Element of SAS);
let b9 being (Element of SAS);
let c being (Element of SAS);
let c9 being (Element of SAS);
assume that
A2: (not a,a9 // a,b)
and
A3: (not a,a9 // a,c)
and
A4: a,a9 // b,b9
and
A5: a,a9 // c,c9
and
A6: (a,b // a9,b9 & a,c // a9,c9);
set A = ( Line (a,a9) );
A7: a <> a9 by A2,AFF_1:3;
then A8: A is  being_line by AFF_1:def 3;
then consider C being (Subset of SAS) such that A9: c in C and A10: A // C by AFF_1:49;
A11: C is  being_line by A10,AFF_1:36;
A12: (a in A & a9 in A) by AFF_1:15;
then A13: A <> C by A3,A8,A9,AFF_1:51;
A14: a,a9 // A by A8,A12,AFF_1:23;
then a,a9 // C by A10,AFF_1:43;
then c,c9 // C by A5,A7,AFF_1:32;
then A15: c9 in C by A9,A11,AFF_1:23;
consider P being (Subset of SAS) such that A16: b in P and A17: A // P by A8,AFF_1:49;
A18: P is  being_line by A17,AFF_1:36;
a,a9 // P by A14,A17,AFF_1:43;
then b,b9 // P by A4,A7,AFF_1:32;
then A19: b9 in P by A16,A18,AFF_1:23;
A <> P by A2,A8,A12,A16,AFF_1:51;
hence thesis by A1,A6,A8,A12,A16,A17,A9,A10,A18,A11,A19,A15,A13,AFF_2:def 11;
end;
