environ
vocabularies NUMBERS,SUBSET_1,CQC_LANG,QC_LANG1,XBOOLE_0,VALUAT_1,FINSEQ_1,HENMODEL,CQC_THE1,XBOOLEAN,BVFUNC_2,FUNCT_1,ORDINAL4,CALCUL_1,ARYTM_3,RELAT_1,CARD_1,XXREAL_0,TARSKI,ZF_MODEL,CQC_SIM1,REALSET1,SUBSTUT1,SUBSTUT2,ZF_LANG,ARYTM_1,CARD_3,ZFMISC_1,FINSET_1,MCART_1,NAT_1,GOEDELCP;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,XXREAL_0,NAT_1,CARD_3,FINSEQ_1,FUNCT_1,QC_LANG1,QC_LANG2,QC_LANG3,NUMBERS,CQC_LANG,RELAT_1,FINSET_1,VALUAT_1,RELSET_1,FUNCT_2,CQC_SIM1,DOMAIN_1,MCART_1,SUBSTUT1,SUBLEMMA,SUBSTUT2,CALCUL_1,HENMODEL,CKB1,CKB2;
definitions TARSKI,XBOOLE_0,CKB1,CKB2;
theorems TARSKI,FUNCT_1,MCART_1,XBOOLE_0,XBOOLE_1,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,QC_LANG2,HENMODEL,CALCUL_1,SUBLEMMA,NAT_1,FINSEQ_1,VALUAT_1,FUNCT_2,SUBSTUT2,CQC_SIM1,CARD_4,CALCUL_2,SUPINF_2,XREAL_1,XXREAL_0,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7;
schemes XBOOLE_0,NAT_1,FUNCT_1,SUBSTUT2,RECDEF_1;
registrations SUBSET_1,RELAT_1,ORDINAL1,XXREAL_0,XREAL_0,CQC_LANG,HENMODEL,FINSEQ_1,FINSET_1,CARD_3,RELSET_1;
constructors SETFAM_1,DOMAIN_1,XXREAL_0,NAT_1,NAT_D,FINSEQ_2,QC_LANG3,CQC_SIM1,SUBSTUT2,CALCUL_1,HENMODEL,CARD_3,RELSET_1,CKB1,CKB2;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve X for (Subset of ( CQC-WFF ));
reserve p for (Element of ( CQC-WFF ));
reserve q for (Element of ( CQC-WFF ));
reserve f1 for (FinSequence of ( CQC-WFF ));
reserve f2 for (FinSequence of ( CQC-WFF ));
theorem
Th6: ((X |- p & X |- q) iff X |- ( p '&' q ))
proof
thus ((X |- p & X |- q) implies X |- ( p '&' q ))
proof
assume that
A1: X |- p
and
A2: X |- q;
consider f1 such that A3: ( rng f1 ) c= X and A4:  |- ( f1 ^ <* p *> ) by A1,HENMODEL:def 1;
consider f2 such that A5: ( rng f2 ) c= X and A6:  |- ( f2 ^ <* q *> ) by A2,HENMODEL:def 1;
A7:  |- ( ( f1 ^ f2 ) ^ <* p *> ) by A4,HENMODEL:5;
 |- ( ( f1 ^ f2 ) ^ <* q *> ) by A6,CALCUL_2:20;
then A8:  |- ( ( f1 ^ f2 ) ^ <* ( p '&' q ) *> ) by A7,CKB7:1;
( rng ( f1 ^ f2 ) ) = ( ( rng f1 ) \/ ( rng f2 ) ) by FINSEQ_1:31;
then ( rng ( f1 ^ f2 ) ) c= X by A3,A5,XBOOLE_1:8;
hence thesis by A8,HENMODEL:def 1;
end;

thus (X |- ( p '&' q ) implies (X |- p & X |- q))
proof
assume X |- ( p '&' q );
then consider f1 such that A9: ( rng f1 ) c= X and A10:  |- ( f1 ^ <* ( p '&' q ) *> ) by HENMODEL:def 1;
A11:  |- ( f1 ^ <* p *> ) by A10,CALCUL_2:22;
 |- ( f1 ^ <* q *> ) by A10,CALCUL_2:23;
hence thesis by A9,A11,HENMODEL:def 1;
end;

end;
