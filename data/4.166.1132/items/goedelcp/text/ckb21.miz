environ
vocabularies NUMBERS,SUBSET_1,CQC_LANG,QC_LANG1,XBOOLE_0,VALUAT_1,FINSEQ_1,HENMODEL,CQC_THE1,XBOOLEAN,BVFUNC_2,FUNCT_1,ORDINAL4,CALCUL_1,ARYTM_3,RELAT_1,CARD_1,XXREAL_0,TARSKI,ZF_MODEL,CQC_SIM1,REALSET1,SUBSTUT1,SUBSTUT2,ZF_LANG,ARYTM_1,CARD_3,ZFMISC_1,FINSET_1,MCART_1,NAT_1,GOEDELCP;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,XXREAL_0,NAT_1,CARD_3,FINSEQ_1,FUNCT_1,QC_LANG1,QC_LANG2,QC_LANG3,NUMBERS,CQC_LANG,RELAT_1,FINSET_1,VALUAT_1,RELSET_1,FUNCT_2,CQC_SIM1,DOMAIN_1,MCART_1,SUBSTUT1,SUBLEMMA,SUBSTUT2,CALCUL_1,HENMODEL,CKB1,CKB2;
definitions TARSKI,XBOOLE_0,CKB1,CKB2;
theorems TARSKI,FUNCT_1,MCART_1,XBOOLE_0,XBOOLE_1,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,QC_LANG2,HENMODEL,CALCUL_1,SUBLEMMA,NAT_1,FINSEQ_1,VALUAT_1,FUNCT_2,SUBSTUT2,CQC_SIM1,CARD_4,CALCUL_2,SUPINF_2,XREAL_1,XXREAL_0,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
schemes XBOOLE_0,NAT_1,FUNCT_1,SUBSTUT2,RECDEF_1;
registrations SUBSET_1,RELAT_1,ORDINAL1,XXREAL_0,XREAL_0,CQC_LANG,HENMODEL,FINSEQ_1,FINSET_1,CARD_3,RELSET_1;
constructors SETFAM_1,DOMAIN_1,XXREAL_0,NAT_1,NAT_D,FINSEQ_2,QC_LANG3,CQC_SIM1,SUBSTUT2,CALCUL_1,HENMODEL,CARD_3,RELSET_1,CKB1,CKB2;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve X for (Subset of ( CQC-WFF ));
reserve p for (Element of ( CQC-WFF ));
reserve x for bound_QC-variable;
reserve a for set;
definition
func ExCl -> (Subset of ( CQC-WFF )) means 
:Def3: (a in it iff (ex x st (ex p st a = ( Ex (x,p) ))));
existence
proof
defpred P[ set ]
 means
(ex x st (ex p st $1 = ( Ex (x,p) )));
consider X being set such that A1: (for a holds (a in X iff (a in ( CQC-WFF ) & P[ a ]))) from XBOOLE_0:sch 1;
(for a holds (a in X implies a in ( CQC-WFF ))) by A1;
then reconsider X as (Subset of ( CQC-WFF )) by TARSKI:def 3;
take X;
thus thesis by A1;
end;
uniqueness
proof
defpred P[ set ]
 means
(ex x st (ex p st $1 = ( Ex (x,p) )));
let A1 being (Subset of ( CQC-WFF ));
let A2 being (Subset of ( CQC-WFF ));
assume that
A2: (a in A1 iff P[ a ])
and
A3: (a in A2 iff P[ a ]);
now
let a;
(a in A1 iff P[ a ]) by A2;
hence (a in A1 iff a in A2) by A3;
end;
hence thesis by TARSKI:1;
end;
end;
