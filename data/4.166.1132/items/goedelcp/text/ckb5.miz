environ
vocabularies NUMBERS,SUBSET_1,CQC_LANG,QC_LANG1,XBOOLE_0,VALUAT_1,FINSEQ_1,HENMODEL,CQC_THE1,XBOOLEAN,BVFUNC_2,FUNCT_1,ORDINAL4,CALCUL_1,ARYTM_3,RELAT_1,CARD_1,XXREAL_0,TARSKI,ZF_MODEL,CQC_SIM1,REALSET1,SUBSTUT1,SUBSTUT2,ZF_LANG,ARYTM_1,CARD_3,ZFMISC_1,FINSET_1,MCART_1,NAT_1,GOEDELCP;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,XXREAL_0,NAT_1,CARD_3,FINSEQ_1,FUNCT_1,QC_LANG1,QC_LANG2,QC_LANG3,NUMBERS,CQC_LANG,RELAT_1,FINSET_1,VALUAT_1,RELSET_1,FUNCT_2,CQC_SIM1,DOMAIN_1,MCART_1,SUBSTUT1,SUBLEMMA,SUBSTUT2,CALCUL_1,HENMODEL,CKB1,CKB2;
definitions TARSKI,XBOOLE_0,CKB1,CKB2;
theorems TARSKI,FUNCT_1,MCART_1,XBOOLE_0,XBOOLE_1,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,QC_LANG2,HENMODEL,CALCUL_1,SUBLEMMA,NAT_1,FINSEQ_1,VALUAT_1,FUNCT_2,SUBSTUT2,CQC_SIM1,CARD_4,CALCUL_2,SUPINF_2,XREAL_1,XXREAL_0,ORDINAL1,CKB1,CKB2,CKB3,CKB4;
schemes XBOOLE_0,NAT_1,FUNCT_1,SUBSTUT2,RECDEF_1;
registrations SUBSET_1,RELAT_1,ORDINAL1,XXREAL_0,XREAL_0,CQC_LANG,HENMODEL,FINSEQ_1,FINSET_1,CARD_3,RELSET_1;
constructors SETFAM_1,DOMAIN_1,XXREAL_0,NAT_1,NAT_D,FINSEQ_2,QC_LANG3,CQC_SIM1,SUBSTUT2,CALCUL_1,HENMODEL,CARD_3,RELSET_1,CKB1,CKB2;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve X for (Subset of ( CQC-WFF ));
reserve p for (Element of ( CQC-WFF ));
reserve x for bound_QC-variable;
reserve y for bound_QC-variable;
reserve f1 for (FinSequence of ( CQC-WFF ));
reserve f2 for (FinSequence of ( CQC-WFF ));
theorem
Th3: (X is  with_examples implies (X |- ( Ex (x,p) ) iff (ex y st X |- ( p . (x,y) ))))
proof
assume A1: X is  with_examples;
thus (X |- ( Ex (x,p) ) implies (ex y st X |- ( p . (x,y) )))
proof
assume X |- ( Ex (x,p) );
then consider f1 such that A2: ( rng f1 ) c= X and A3:  |- ( f1 ^ <* ( Ex (x,p) ) *> ) by HENMODEL:def 1;
consider y such that A4: X |- ( ( 'not' ( Ex (x,p) ) ) 'or' ( p . (x,y) ) ) by A1,CKB2:def 1;
consider f2 such that A5: ( rng f2 ) c= X and A6:  |- ( f2 ^ <* ( ( 'not' ( Ex (x,p) ) ) 'or' ( p . (x,y) ) ) *> ) by A4,HENMODEL:def 1;
take y;
A7:  |- ( ( f1 ^ f2 ) ^ <* ( Ex (x,p) ) *> ) by A3,HENMODEL:5;
 |- ( ( f1 ^ f2 ) ^ <* ( ( 'not' ( Ex (x,p) ) ) 'or' ( p . (x,y) ) ) *> ) by A6,CALCUL_2:20;
then A8:  |- ( ( f1 ^ f2 ) ^ <* ( p . (x,y) ) *> ) by A7,CKB4:1;
( rng ( f1 ^ f2 ) ) = ( ( rng f1 ) \/ ( rng f2 ) ) by FINSEQ_1:31;
then ( rng ( f1 ^ f2 ) ) c= X by A2,A5,XBOOLE_1:8;
hence thesis by A8,HENMODEL:def 1;
end;

thus ((ex y st X |- ( p . (x,y) )) implies X |- ( Ex (x,p) ))
proof
given y such that
A9: X |- ( p . (x,y) );

consider f1 such that A10: ( rng f1 ) c= X and A11:  |- ( f1 ^ <* ( p . (x,y) ) *> ) by A9,HENMODEL:def 1;
 |- ( f1 ^ <* ( Ex (x,p) ) *> ) by A11,CALCUL_1:58;
hence thesis by A10,HENMODEL:def 1;
end;

end;
