environ
vocabularies NUMBERS,SUBSET_1,CQC_LANG,QC_LANG1,XBOOLE_0,VALUAT_1,FINSEQ_1,HENMODEL,CQC_THE1,XBOOLEAN,BVFUNC_2,FUNCT_1,ORDINAL4,CALCUL_1,ARYTM_3,RELAT_1,CARD_1,XXREAL_0,TARSKI,ZF_MODEL,CQC_SIM1,REALSET1,SUBSTUT1,SUBSTUT2,ZF_LANG,ARYTM_1,CARD_3,ZFMISC_1,FINSET_1,MCART_1,NAT_1,GOEDELCP;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,XXREAL_0,NAT_1,CARD_3,FINSEQ_1,FUNCT_1,QC_LANG1,QC_LANG2,QC_LANG3,NUMBERS,CQC_LANG,RELAT_1,FINSET_1,VALUAT_1,RELSET_1,FUNCT_2,CQC_SIM1,DOMAIN_1,MCART_1,SUBSTUT1,SUBLEMMA,SUBSTUT2,CALCUL_1,HENMODEL,CKB1,CKB2,CKB21,CKB25,CKB26,CKB27,CKB28,CKB29;
definitions TARSKI,XBOOLE_0,CKB1,CKB2,CKB21,CKB25,CKB26,CKB27,CKB28,CKB29;
theorems TARSKI,FUNCT_1,MCART_1,XBOOLE_0,XBOOLE_1,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,QC_LANG2,HENMODEL,CALCUL_1,SUBLEMMA,NAT_1,FINSEQ_1,VALUAT_1,FUNCT_2,SUBSTUT2,CQC_SIM1,CARD_4,CALCUL_2,SUPINF_2,XREAL_1,XXREAL_0,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
schemes XBOOLE_0,NAT_1,FUNCT_1,SUBSTUT2,RECDEF_1;
registrations SUBSET_1,RELAT_1,ORDINAL1,XXREAL_0,XREAL_0,CQC_LANG,HENMODEL,FINSEQ_1,FINSET_1,CARD_3,RELSET_1;
constructors SETFAM_1,DOMAIN_1,XXREAL_0,NAT_1,NAT_D,FINSEQ_2,QC_LANG3,CQC_SIM1,SUBSTUT2,CALCUL_1,HENMODEL,CARD_3,RELSET_1,CKB1,CKB2,CKB21,CKB25,CKB26,CKB27,CKB28,CKB29;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve b for set;
reserve c for set;
reserve d for set;
reserve i for (Element of ( NAT ));
reserve j for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve p for (Element of ( CQC-WFF ));
reserve s1 for (Element of ( CQC-WFF ));
reserve x for bound_QC-variable;
reserve y for bound_QC-variable;
reserve y1 for bound_QC-variable;
reserve f1 for (FinSequence of ( CQC-WFF ));
reserve CX for  Consistent (Subset of ( CQC-WFF ));
reserve CY for  Consistent (Subset of ( CQC-WFF ));
reserve a for set;
reserve C for (Element of [: ( CQC-WFF ),( bool ( bound_QC-variables ) ) :]);
reserve D for (Element of [: ( CQC-WFF ),( bool ( bound_QC-variables ) ) :]);
reserve K for (Subset of ( bound_QC-variables ));
reserve L for (Subset of ( bound_QC-variables ));
theorem
Th31: (( still_not-bound_in CX ) is  finite implies (ex CY st (CX c= CY & CY is  with_examples)))
proof
assume A1: ( still_not-bound_in CX ) is  finite;
consider f being Function such that A2: ( dom f ) = ( NAT ) and A3: ( ExCl ) = ( rng f ) by CKB24:1,CKB23:1;
reconsider f as (Function of ( NAT ),( CQC-WFF )) by A2,A3,FUNCT_2:2;
defpred P[ (Element of ( NAT )),set,set ]
 means
(ex K st (ex L st ((K = ( $2 `2 ) & L = ( K \/ ( still_not-bound_in { ( f . ( $1 + 1 ) ) } ) )) & $3 = [ ( ( 'not' ( f . ( $1 + 1 ) ) ) 'or' ( ( the_scope_of (f,( $1 + 1 )) ) . (( bound_in (f,( $1 + 1 )) ),( x. ( min* { i: (not ( x. i ) in L) } ) )) ) ),( K \/ ( still_not-bound_in ( ( 'not' ( f . ( $1 + 1 ) ) ) 'or' ( ( the_scope_of (f,( $1 + 1 )) ) . (( bound_in (f,( $1 + 1 )) ),( x. ( min* { j: (not ( x. j ) in L) } ) )) ) ) ) ) ])));
A4: (for n holds (for C holds (ex D st P[ n,C,D ])))
proof
let n;
let C;
set K = ( C `2 );
(ex a st (ex b st ((a in ( CQC-WFF ) & b in ( bool ( bound_QC-variables ) )) & C = [ a,b ]))) by ZFMISC_1:def 2;
then reconsider K as (Subset of ( bound_QC-variables )) by MCART_1:7;
set L = ( K \/ ( still_not-bound_in { ( f . ( n + 1 ) ) } ) );
set D = [ ( ( 'not' ( f . ( n + 1 ) ) ) 'or' ( ( the_scope_of (f,( n + 1 )) ) . (( bound_in (f,( n + 1 )) ),( x. ( min* { i: (not ( x. i ) in L) } ) )) ) ),( K \/ ( still_not-bound_in ( ( 'not' ( f . ( n + 1 ) ) ) 'or' ( ( the_scope_of (f,( n + 1 )) ) . (( bound_in (f,( n + 1 )) ),( x. ( min* { j: (not ( x. j ) in L) } ) )) ) ) ) ) ];
take D;
thus thesis;
end;
reconsider A = [ ( ( 'not' ( f . ( 0 ) ) ) 'or' ( ( the_scope_of (f,( 0 )) ) . (( bound_in (f,( 0 )) ),( x. ( min* { i: (not ( x. i ) in ( still_not-bound_in ( CX \/ { ( f . ( 0 ) ) } ) )) } ) )) ) ),( still_not-bound_in ( CX \/ { ( ( 'not' ( f . ( 0 ) ) ) 'or' ( ( the_scope_of (f,( 0 )) ) . (( bound_in (f,( 0 )) ),( x. ( min* { j: (not ( x. j ) in ( still_not-bound_in ( CX \/ { ( f . ( 0 ) ) } ) )) } ) )) ) ) } ) ) ] as (Element of [: ( CQC-WFF ),( bool ( bound_QC-variables ) ) :]);
consider h being (Function of ( NAT ),[: ( CQC-WFF ),( bool ( bound_QC-variables ) ) :]) such that A5: (( h . ( 0 ) ) = A & (for n holds P[ n,( h . n ),( h . ( n + 1 ) ) ])) from RECDEF_1:sch 2(A4);
set CY = ( CX \/ { ( ( h . n ) `1 ): (not contradiction) } );
now
let a;
assume that
A6: a in CY;
now
assume (not a in CX);
then a in { ( ( h . n ) `1 ): (not contradiction) } by A6,XBOOLE_0:def 3;
then consider n such that A7: a = ( ( h . n ) `1 );
(ex c st (ex d st ((c in ( CQC-WFF ) & d in ( bool ( bound_QC-variables ) )) & ( h . n ) = [ c,d ]))) by ZFMISC_1:def 2;
hence a in ( CQC-WFF ) by A7,MCART_1:7;
end;
hence a in ( CQC-WFF );
end;
then reconsider CY as (Subset of ( CQC-WFF )) by TARSKI:def 3;
A8:now
let x;
let p;
( Ex (x,p) ) in ( ExCl ) by CKB21:def 1;
then consider a such that A9: a in ( dom f ) and A10: ( f . a ) = ( Ex (x,p) ) by A3,FUNCT_1:def 3;
reconsider a as (Element of ( NAT )) by A9;
reconsider r9 = ( f . a ) as (Element of ( CQC-WFF ));
A11: ( Ex-bound_in r9 ) = x by A10,CKB31:1;
A12: ( Ex-the_scope_of r9 ) = p by A10,CKB31:1;
A13: ( bound_in (f,a) ) = x by A11,CKB27:def 1;
A14: ( the_scope_of (f,a) ) = p by A12,CKB28:def 1;
A15: ( ( h . a ) `1 ) in { ( ( h . n ) `1 ): (not contradiction) };
A16: { ( ( h . n ) `1 ): (not contradiction) } c= CY by XBOOLE_1:7;
A17:now
assume A18: a = ( 0 );
take y = ( x. ( min* { i: (not ( x. i ) in ( still_not-bound_in ( CX \/ { r9 } ) )) } ) );
( ( h . a ) `1 ) = ( ( 'not' r9 ) 'or' ( ( the_scope_of (f,a) ) . (( bound_in (f,a) ),y) ) ) by A5,A18,MCART_1:7;
hence CY |- ( ( 'not' ( Ex (x,p) ) ) 'or' ( p . (x,y) ) ) by A10,A13,A14,A15,A16,CKB30:1;
end;
now
assume a <> ( 0 );
then consider m being Nat such that A19: a = ( m + 1 ) by NAT_1:6;
reconsider m as (Element of ( NAT )) by ORDINAL1:def 12;
A20: (ex K st (ex L st ((K = ( ( h . m ) `2 ) & L = ( K \/ ( still_not-bound_in { r9 } ) )) & ( h . a ) = [ ( ( 'not' r9 ) 'or' ( ( the_scope_of (f,a) ) . (( bound_in (f,a) ),( x. ( min* { i: (not ( x. i ) in L) } ) )) ) ),( K \/ ( still_not-bound_in ( ( 'not' r9 ) 'or' ( ( the_scope_of (f,a) ) . (( bound_in (f,a) ),( x. ( min* { j: (not ( x. j ) in L) } ) )) ) ) ) ) ]))) by A5,A19;
set K = ( ( h . m ) `2 );
set L = ( ( still_not-bound_in { r9 } ) \/ K );
take y = ( x. ( min* { i: (not ( x. i ) in L) } ) );
( ( h . a ) `1 ) = ( ( 'not' r9 ) 'or' ( ( the_scope_of (f,a) ) . (( bound_in (f,a) ),y) ) ) by A20,MCART_1:7;
hence CY |- ( ( 'not' ( Ex (x,p) ) ) 'or' ( p . (x,y) ) ) by A10,A13,A14,A15,A16,CKB30:1;
end;
hence (ex y st CY |- ( ( 'not' ( Ex (x,p) ) ) 'or' ( p . (x,y) ) )) by A17;
end;
deffunc G(set) = ( CX \/ { ( ( h . n ) `1 ): n in $1 } );
consider F being Function such that A21: (( dom F ) = ( NAT ) & (for a holds (a in ( NAT ) implies ( F . a ) = G(a)))) from FUNCT_1:sch 3;
A22: CY c= ( union ( rng F ) )
proof
let a;
assume A23: a in CY;
A24:now
assume A25: a in CX;
A26: ( F . ( 0 ) ) = ( CX \/ { ( ( h . n ) `1 ): n in ( 0 ) } ) by A21;
now
let b;
assume b in { ( ( h . n ) `1 ): n in ( 0 ) };
then (ex n st (b = ( ( h . n ) `1 ) & n in ( 0 )));
hence contradiction;
end;
then A27: { ( ( h . n ) `1 ): n in ( 0 ) } = ( {} ) by XBOOLE_0:def 1;
( F . ( 0 ) ) in ( rng F ) by A21,FUNCT_1:3;
hence thesis by A25,A26,A27,TARSKI:def 4;
end;
now
assume a in { ( ( h . n ) `1 ): (not contradiction) };
then consider n such that A28: a = ( ( h . n ) `1 );
n < ( n + 1 ) by NAT_1:13;
then n in ( n + 1 ) by NAT_1:44;
then A29: a in { ( ( h . m ) `1 ): m in ( n + 1 ) } by A28;
( F . ( n + 1 ) ) = ( CX \/ { ( ( h . m ) `1 ): m in ( n + 1 ) } ) by A21;
then A30: { ( ( h . m ) `1 ): m in ( n + 1 ) } c= ( F . ( n + 1 ) ) by XBOOLE_1:7;
( F . ( n + 1 ) ) in ( rng F ) by A21,FUNCT_1:3;
hence thesis by A29,A30,TARSKI:def 4;
end;
hence thesis by A23,A24,XBOOLE_0:def 3;
end;
( union ( rng F ) ) c= CY
proof
let a;
assume a in ( union ( rng F ) );
then consider b such that A31: a in b and A32: b in ( rng F ) by TARSKI:def 4;
consider c such that A33: c in ( dom F ) and A34: ( F . c ) = b by A32,FUNCT_1:def 3;
reconsider n = c as (Element of ( NAT )) by A21,A33;
A35: a in ( CX \/ { ( ( h . m ) `1 ): m in n } ) by A21,A31,A34;
A36:now
assume A37: a in CX;
CX c= CY by XBOOLE_1:7;
hence thesis by A37;
end;
now
assume a in { ( ( h . m ) `1 ): m in n };
then (ex m st (a = ( ( h . m ) `1 ) & m in n));
then A38: a in { ( ( h . i ) `1 ): (not contradiction) };
{ ( ( h . i ) `1 ): (not contradiction) } c= CY by XBOOLE_1:7;
hence thesis by A38;
end;
hence thesis by A35,A36,XBOOLE_0:def 3;
end;
then A39: CY = ( union ( rng F ) ) by A22,XBOOLE_0:def 10;
A40: (for n holds (for m holds (((m in ( dom F ) & n in ( dom F )) & n < m) implies ( F . n ) c= ( F . m ))))
proof
let n;
let m;
assume that
m in ( dom F )
and
n in ( dom F )
and
A41: n < m;
A42: ( F . n ) = ( CX \/ { ( ( h . i ) `1 ): i in n } ) by A21;
A43: ( F . m ) = ( CX \/ { ( ( h . i ) `1 ): i in m } ) by A21;
now
let a;
assume that
A44: a in ( F . n );
A45:now
assume A46: a in CX;
CX c= ( F . m ) by A43,XBOOLE_1:7;
hence a in ( F . m ) by A46;
end;
now
assume a in { ( ( h . i ) `1 ): i in n };
then consider i such that A47: ( ( h . i ) `1 ) = a and A48: i in n;
i < n by A48,NAT_1:44;
then i < m by A41,XXREAL_0:2;
then i in m by NAT_1:44;
then A49: a in { ( ( h . j ) `1 ): j in m } by A47;
{ ( ( h . j ) `1 ): j in m } c= ( F . m ) by A43,XBOOLE_1:7;
hence a in ( F . m ) by A49;
end;
hence a in ( F . m ) by A42,A44,A45,XBOOLE_0:def 3;
end;
hence thesis by TARSKI:def 3;
end;
( rng F ) c= ( bool ( CQC-WFF ) )
proof
let a;
assume a in ( rng F );
then consider b such that A50: b in ( dom F ) and A51: ( F . b ) = a by FUNCT_1:def 3;
reconsider b as (Element of ( NAT )) by A21,A50;
A52: ( F . b ) = ( CX \/ { ( ( h . i ) `1 ): i in b } ) by A21;
now
let c;
assume c in { ( ( h . i ) `1 ): i in b };
then (ex i st (( ( h . i ) `1 ) = c & i in b));
hence c in ( CQC-WFF ) by MCART_1:10;
end;
then { ( ( h . i ) `1 ): i in b } c= ( CQC-WFF ) by TARSKI:def 3;
then ( F . b ) c= ( CQC-WFF ) by A52,XBOOLE_1:8;
hence thesis by A51;
end;
then reconsider F as (Function of ( NAT ),( bool ( CQC-WFF ) )) by A21,FUNCT_2:2;
A53: (for n holds ( F . ( n + 1 ) ) = ( ( F . n ) \/ { ( ( h . n ) `1 ) } ))
proof
let n;
now
let a;
assume a in { ( ( h . i ) `1 ): i in ( n + 1 ) };
then consider j such that A54: a = ( ( h . j ) `1 ) and A55: j in ( n + 1 );
j < ( n + 1 ) by A55,NAT_1:44;
then A56: ( j + 1 ) <= ( n + 1 ) by NAT_1:13;
A57:now
assume ( j + 1 ) = ( n + 1 );
then A58: a in { ( ( h . n ) `1 ) } by A54,TARSKI:def 1;
{ ( ( h . n ) `1 ) } c= ( { ( ( h . i ) `1 ): i in n } \/ { ( ( h . n ) `1 ) } ) by XBOOLE_1:7;
hence a in ( { ( ( h . i ) `1 ): i in n } \/ { ( ( h . n ) `1 ) } ) by A58;
end;
now
assume ( j + 1 ) <= n;
then j < n by NAT_1:13;
then j in n by NAT_1:44;
then A59: a in { ( ( h . k ) `1 ): k in n } by A54;
{ ( ( h . k ) `1 ): k in n } c= ( { ( ( h . i ) `1 ): i in n } \/ { ( ( h . n ) `1 ) } ) by XBOOLE_1:7;
hence a in ( { ( ( h . i ) `1 ): i in n } \/ { ( ( h . n ) `1 ) } ) by A59;
end;
hence a in ( { ( ( h . i ) `1 ): i in n } \/ { ( ( h . n ) `1 ) } ) by A56,A57,NAT_1:8;
end;
then A60: { ( ( h . k ) `1 ): k in ( n + 1 ) } c= ( { ( ( h . i ) `1 ): i in n } \/ { ( ( h . n ) `1 ) } ) by TARSKI:def 3;
now
let a;
assume A61: a in ( { ( ( h . i ) `1 ): i in n } \/ { ( ( h . n ) `1 ) } );
A62:now
assume a in { ( ( h . i ) `1 ): i in n };
then consider j such that A63: ( ( h . j ) `1 ) = a and A64: j in n;
A65: n <= ( n + 1 ) by NAT_1:11;
j < n by A64,NAT_1:44;
then j < ( n + 1 ) by A65,XXREAL_0:2;
then j in ( n + 1 ) by NAT_1:44;
hence a in { ( ( h . i ) `1 ): i in ( n + 1 ) } by A63;
end;
now
assume a in { ( ( h . n ) `1 ) };
then A66: a = ( ( h . n ) `1 ) by TARSKI:def 1;
n < ( n + 1 ) by NAT_1:13;
then n in ( n + 1 ) by NAT_1:44;
hence a in { ( ( h . i ) `1 ): i in ( n + 1 ) } by A66;
end;
hence a in { ( ( h . i ) `1 ): i in ( n + 1 ) } by A61,A62,XBOOLE_0:def 3;
end;
then ( { ( ( h . i ) `1 ): i in n } \/ { ( ( h . n ) `1 ) } ) c= { ( ( h . k ) `1 ): k in ( n + 1 ) } by TARSKI:def 3;
then ( { ( ( h . i ) `1 ): i in n } \/ { ( ( h . n ) `1 ) } ) = { ( ( h . k ) `1 ): k in ( n + 1 ) } by A60,XBOOLE_0:def 10;
then ( F . ( n + 1 ) ) = ( CX \/ ( { ( ( h . k ) `1 ): k in n } \/ { ( ( h . n ) `1 ) } ) ) by A21;
then ( F . ( n + 1 ) ) = ( ( CX \/ { ( ( h . k ) `1 ): k in n } ) \/ { ( ( h . n ) `1 ) } ) by XBOOLE_1:4;
hence thesis by A21;
end;
defpred P[ (Element of ( NAT )) ]
 means
(( ( h . $1 ) `2 ) is  finite & ( ( h . $1 ) `2 ) is (Subset of ( bound_QC-variables )));
A67: P[ ( 0 ) ]
proof
A68: ( ( h . ( 0 ) ) `2 ) = ( still_not-bound_in ( CX \/ { ( ( 'not' ( f . ( 0 ) ) ) 'or' ( ( the_scope_of (f,( 0 )) ) . (( bound_in (f,( 0 )) ),( x. ( min* { j: (not ( x. j ) in ( still_not-bound_in ( CX \/ { ( f . ( 0 ) ) } ) )) } ) )) ) ) } ) ) by A5,MCART_1:7;
reconsider s = ( ( 'not' ( f . ( 0 ) ) ) 'or' ( ( the_scope_of (f,( 0 )) ) . (( bound_in (f,( 0 )) ),( x. ( min* { j: (not ( x. j ) in ( still_not-bound_in ( CX \/ { ( f . ( 0 ) ) } ) )) } ) )) ) ) as (Element of ( CQC-WFF ));
( still_not-bound_in s ) is  finite by CQC_SIM1:19;
then ( still_not-bound_in { s } ) is  finite by CKB35:1;
then ( ( still_not-bound_in { s } ) \/ ( still_not-bound_in CX ) ) is  finite by A1;
hence thesis by A68,CKB36:1;
end;
A69: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume that
A70: P[ k ];
A71: (ex K st (ex L st ((K = ( ( h . k ) `2 ) & L = ( K \/ ( still_not-bound_in { ( f . ( k + 1 ) ) } ) )) & ( h . ( k + 1 ) ) = [ ( ( 'not' ( f . ( k + 1 ) ) ) 'or' ( ( the_scope_of (f,( k + 1 )) ) . (( bound_in (f,( k + 1 )) ),( x. ( min* { i: (not ( x. i ) in L) } ) )) ) ),( K \/ ( still_not-bound_in ( ( 'not' ( f . ( k + 1 ) ) ) 'or' ( ( the_scope_of (f,( k + 1 )) ) . (( bound_in (f,( k + 1 )) ),( x. ( min* { j: (not ( x. j ) in L) } ) )) ) ) ) ) ]))) by A5;
set K = ( ( h . k ) `2 );
reconsider K as (Subset of ( bound_QC-variables )) by A70;
set L = ( K \/ ( still_not-bound_in { ( f . ( k + 1 ) ) } ) );
set s = ( ( 'not' ( f . ( k + 1 ) ) ) 'or' ( ( the_scope_of (f,( k + 1 )) ) . (( bound_in (f,( k + 1 )) ),( x. ( min* { j: (not ( x. j ) in L) } ) )) ) );
( still_not-bound_in s ) is  finite by CQC_SIM1:19;
hence thesis by A70,A71,MCART_1:7;
end;
A72: (for k holds P[ k ]) from NAT_1:sch 1(A67,A69);
defpred P[ (Element of ( NAT )) ]
 means
(( still_not-bound_in ( F . ( $1 + 1 ) ) ) c= ( ( h . $1 ) `2 ) & (not ( x. ( min* { i: (not ( x. i ) in ( ( still_not-bound_in { ( f . ( $1 + 1 ) ) } ) \/ ( ( h . $1 ) `2 ) )) } ) ) in ( still_not-bound_in ( ( F . ( $1 + 1 ) ) \/ { ( f . ( $1 + 1 ) ) } ) )));
A73: (for k holds (( still_not-bound_in ( F . ( k + 1 ) ) ) c= ( ( h . k ) `2 ) & (not ( x. ( min* { i: (not ( x. i ) in ( ( still_not-bound_in { ( f . ( k + 1 ) ) } ) \/ ( ( h . k ) `2 ) )) } ) ) in ( still_not-bound_in ( ( F . ( k + 1 ) ) \/ { ( f . ( k + 1 ) ) } ) ))))
proof
A74: P[ ( 0 ) ]
proof
set r = ( ( 'not' ( f . ( 0 ) ) ) 'or' ( ( the_scope_of (f,( 0 )) ) . (( bound_in (f,( 0 )) ),( x. ( min* { k: (not ( x. k ) in ( still_not-bound_in ( CX \/ { ( f . ( 0 ) ) } ) )) } ) )) ) );
set A1 = { r };
reconsider s = ( f . 1 ) as (Element of ( CQC-WFF ));
A75: ( ( h . ( 0 ) ) `2 ) = ( still_not-bound_in ( CX \/ A1 ) ) by A5,MCART_1:7;
reconsider B = ( ( h . ( 0 ) ) `2 ) as (Subset of ( bound_QC-variables )) by A5,MCART_1:7;
reconsider C = ( ( still_not-bound_in { s } ) \/ B ) as (Element of ( bool ( bound_QC-variables ) ));
( still_not-bound_in s ) is  finite by CQC_SIM1:19;
then ( still_not-bound_in { s } ) is  finite by CKB35:1;
then consider x such that A76: (not x in C) by A67,CKB37:1;
consider l being (Element of ( NAT )) such that A77: ( x. l ) = x by QC_LANG3:30;
l in { i: (not ( x. i ) in C) } by A76,A77;
then reconsider A = { i: (not ( x. i ) in C) } as non  empty set;
now
let a;
assume a in A;
then (ex i st (a = i & (not ( x. i ) in C)));
hence a in ( NAT );
end;
then reconsider A = { i: (not ( x. i ) in C) } as non  empty (Subset of ( NAT )) by TARSKI:def 3;
set j = ( min* A );
j in A by NAT_1:def 1;
then A78: (ex i st (i = j & (not ( x. i ) in C)));
A79: ( F . ( 0 ) ) = ( CX \/ { ( ( h . n ) `1 ): n in ( 0 ) } ) by A21;
now
let b;
assume b in { ( ( h . n ) `1 ): n in ( 0 ) };
then (ex n st (b = ( ( h . n ) `1 ) & n in ( 0 )));
hence contradiction;
end;
then A80: { ( ( h . n ) `1 ): n in ( 0 ) } = ( {} ) by XBOOLE_0:def 1;
( ( h . ( 0 ) ) `1 ) = r by A5,MCART_1:7;
then ( F . ( ( 0 ) + 1 ) ) = ( CX \/ { r } ) by A53,A79,A80;
hence thesis by A75,A78,CKB36:1;
end;
A81: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume that
A82: P[ k ];
reconsider s = ( f . ( k + 2 ) ) as (Element of ( CQC-WFF ));
A83: (ex K st (ex L st ((K = ( ( h . k ) `2 ) & L = ( K \/ ( still_not-bound_in { ( f . ( k + 1 ) ) } ) )) & ( h . ( k + 1 ) ) = [ ( ( 'not' ( f . ( k + 1 ) ) ) 'or' ( ( the_scope_of (f,( k + 1 )) ) . (( bound_in (f,( k + 1 )) ),( x. ( min* { i: (not ( x. i ) in L) } ) )) ) ),( K \/ ( still_not-bound_in ( ( 'not' ( f . ( k + 1 ) ) ) 'or' ( ( the_scope_of (f,( k + 1 )) ) . (( bound_in (f,( k + 1 )) ),( x. ( min* { j: (not ( x. j ) in L) } ) )) ) ) ) ) ]))) by A5;
set K = ( ( h . k ) `2 );
reconsider K as (Subset of ( bound_QC-variables )) by A72;
set L = ( K \/ ( still_not-bound_in { ( f . ( k + 1 ) ) } ) );
set r = ( ( 'not' ( f . ( k + 1 ) ) ) 'or' ( ( the_scope_of (f,( k + 1 )) ) . (( bound_in (f,( k + 1 )) ),( x. ( min* { i: (not ( x. i ) in L) } ) )) ) );
A84: ( ( h . ( k + 1 ) ) `1 ) = r by A83,MCART_1:7;
A85: ( ( h . ( k + 1 ) ) `2 ) = ( K \/ ( still_not-bound_in r ) ) by A83,MCART_1:7;
reconsider B = ( ( h . ( k + 1 ) ) `2 ) as (Subset of ( bound_QC-variables )) by A83,MCART_1:7;
reconsider C = ( ( still_not-bound_in { s } ) \/ B ) as (Element of ( bool ( bound_QC-variables ) ));
( still_not-bound_in s ) is  finite by CQC_SIM1:19;
then A86: ( still_not-bound_in { s } ) is  finite by CKB35:1;
( ( h . ( k + 1 ) ) `2 ) is  finite by A72;
then consider x such that A87: (not x in C) by A86,CKB37:1;
consider l being (Element of ( NAT )) such that A88: ( x. l ) = x by QC_LANG3:30;
l in { i: (not ( x. i ) in ( ( still_not-bound_in { s } ) \/ B )) } by A87,A88;
then reconsider A = { i: (not ( x. i ) in ( ( still_not-bound_in { s } ) \/ B )) } as non  empty set;
now
let a;
assume a in A;
then (ex i st (a = i & (not ( x. i ) in C)));
hence a in ( NAT );
end;
then reconsider A = { i: (not ( x. i ) in ( ( still_not-bound_in { s } ) \/ B )) } as non  empty (Subset of ( NAT )) by TARSKI:def 3;
set j = ( min* A );
j in A by NAT_1:def 1;
then A89: (ex i st (i = j & (not ( x. i ) in C)));
then A90: (not ( x. j ) in ( still_not-bound_in { s } )) by XBOOLE_0:def 3;
( ( still_not-bound_in ( F . ( k + 1 ) ) ) \/ ( still_not-bound_in r ) ) c= B by A82,A85,XBOOLE_1:9;
then ( ( still_not-bound_in ( F . ( k + 1 ) ) ) \/ ( still_not-bound_in { r } ) ) c= B by CKB35:1;
then A91: ( still_not-bound_in ( ( F . ( k + 1 ) ) \/ { r } ) ) c= B by CKB36:1;
then ( still_not-bound_in ( F . ( ( k + 1 ) + 1 ) ) ) c= B by A53,A84;
then (not ( x. j ) in ( still_not-bound_in ( F . ( ( k + 1 ) + 1 ) ) )) by A89,XBOOLE_0:def 3;
then (not ( x. j ) in ( ( still_not-bound_in ( F . ( ( k + 1 ) + 1 ) ) ) \/ ( still_not-bound_in { s } ) )) by A90,XBOOLE_0:def 3;
hence thesis by A53,A84,A91,CKB36:1;
end;
(for k holds P[ k ]) from NAT_1:sch 1(A74,A81);
hence thesis;
end;
defpred P[ (Element of ( NAT )) ]
 means
( F . $1 ) is  Consistent;
now
let a;
assume a in { ( ( h . i ) `1 ): i in ( 0 ) };
then (ex j st (a = ( ( h . j ) `1 ) & j in ( 0 )));
hence contradiction;
end;
then { ( ( h . i ) `1 ): i in ( 0 ) } = ( {} ) by XBOOLE_0:def 1;
then A92: ( F . ( 0 ) ) = ( CX \/ ( {} ) ) by A21;
then A93: P[ ( 0 ) ];
A94: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume that
A95: P[ k ];
(ex c st (ex d st ((c in ( CQC-WFF ) & d in ( bool ( bound_QC-variables ) )) & ( h . k ) = [ c,d ]))) by ZFMISC_1:def 2;
then reconsider r = ( ( h . k ) `1 ) as (Element of ( CQC-WFF )) by MCART_1:7;
now
assume ( F . ( k + 1 ) ) is  Inconsistent;
then ( F . ( k + 1 ) ) |- ( 'not' ( VERUM ) ) by HENMODEL:6;
then ( ( F . k ) \/ { r } ) |- ( 'not' ( VERUM ) ) by A53;
then consider f1 being (FinSequence of ( CQC-WFF )) such that A96: ( rng f1 ) c= ( F . k ) and A97:  |- ( ( f1 ^ <* r *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by HENMODEL:8;
A98:  |- ( ( f1 ^ <* ( 'not' ( f . k ) ) *> ) ^ <* ( 'not' ( f . k ) ) *> ) by CALCUL_2:21;
A99:now
assume A100: k = ( 0 );
then A101: r = ( ( 'not' ( f . ( 0 ) ) ) 'or' ( ( the_scope_of (f,( 0 )) ) . (( bound_in (f,( 0 )) ),( x. ( min* { i: (not ( x. i ) in ( still_not-bound_in ( CX \/ { ( f . ( 0 ) ) } ) )) } ) )) ) ) by A5,MCART_1:7;
reconsider s = ( ( the_scope_of (f,( 0 )) ) . (( bound_in (f,( 0 )) ),( x. ( min* { i: (not ( x. i ) in ( still_not-bound_in ( CX \/ { ( f . ( 0 ) ) } ) )) } ) )) ) as (Element of ( CQC-WFF ));
A102:  |- ( ( f1 ^ <* ( 'not' ( f . k ) ) *> ) ^ <* ( ( 'not' ( f . k ) ) 'or' s ) *> ) by A98,CALCUL_1:51;
( ( 0 ) + 1 ) <= ( len ( f1 ^ <* r *> ) ) by CALCUL_1:10;
then  |- ( ( ( ( Ant ( f1 ^ <* r *> ) ) ^ <* ( 'not' ( f . k ) ) *> ) ^ <* ( Suc ( f1 ^ <* r *> ) ) *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by A97,CKB34:1;
then  |- ( ( ( f1 ^ <* ( 'not' ( f . k ) ) *> ) ^ <* ( Suc ( f1 ^ <* r *> ) ) *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by CALCUL_1:5;
then  |- ( ( ( f1 ^ <* ( 'not' ( f . k ) ) *> ) ^ <* r *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by CALCUL_1:5;
then A103:  |- ( ( f1 ^ <* ( 'not' ( f . k ) ) *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by A100,A101,A102,CALCUL_2:24;
 |- ( ( f1 ^ <* s *> ) ^ <* s *> ) by CALCUL_2:21;
then A104:  |- ( ( f1 ^ <* s *> ) ^ <* ( ( 'not' ( f . k ) ) 'or' s ) *> ) by CALCUL_1:52;
( ( 0 ) + 1 ) <= ( len ( f1 ^ <* r *> ) ) by CALCUL_1:10;
then  |- ( ( ( ( Ant ( f1 ^ <* r *> ) ) ^ <* s *> ) ^ <* ( Suc ( f1 ^ <* r *> ) ) *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by A97,CKB34:1;
then  |- ( ( ( f1 ^ <* s *> ) ^ <* ( Suc ( f1 ^ <* r *> ) ) *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by CALCUL_1:5;
then  |- ( ( ( f1 ^ <* s *> ) ^ <* r *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by CALCUL_1:5;
then A105:  |- ( ( f1 ^ <* s *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by A100,A101,A104,CALCUL_2:24;
reconsider r1 = ( f . ( 0 ) ) as (Element of ( CQC-WFF ));
set C = ( still_not-bound_in ( CX \/ { r1 } ) );
( still_not-bound_in r1 ) is  finite by CQC_SIM1:19;
then ( still_not-bound_in { r1 } ) is  finite by CKB35:1;
then ( ( still_not-bound_in { r1 } ) \/ ( still_not-bound_in CX ) ) is  finite by A1;
then C is  finite by CKB36:1;
then consider x such that A106: (not x in C) by CKB37:1;
consider l being (Element of ( NAT )) such that A107: ( x. l ) = x by QC_LANG3:30;
l in { i: (not ( x. i ) in C) } by A106,A107;
then reconsider A = { i: (not ( x. i ) in C) } as non  empty set;
now
let a;
assume a in A;
then (ex i st (a = i & (not ( x. i ) in C)));
hence a in ( NAT );
end;
then reconsider A = { i: (not ( x. i ) in C) } as non  empty (Subset of ( NAT )) by TARSKI:def 3;
set j = ( min* A );
j in A by NAT_1:def 1;
then consider i such that A108: i = j and A109: (not ( x. i ) in C);
A110: (not ( x. i ) in ( ( still_not-bound_in CX ) \/ ( still_not-bound_in { r1 } ) )) by A109,CKB36:1;
then A111: (not ( x. i ) in ( still_not-bound_in { r1 } )) by XBOOLE_0:def 3;
A112: ( F . ( 0 ) ) = ( CX \/ { ( ( h . n ) `1 ): n in ( 0 ) } ) by A21;
now
let b;
assume b in { ( ( h . n ) `1 ): n in ( 0 ) };
then (ex n st (b = ( ( h . n ) `1 ) & n in ( 0 )));
hence contradiction;
end;
then { ( ( h . n ) `1 ): n in ( 0 ) } = ( {} ) by XBOOLE_0:def 1;
then ( still_not-bound_in ( rng f1 ) ) c= ( still_not-bound_in CX ) by A96,A100,A112,CKB38:1;
then (not ( x. i ) in ( still_not-bound_in ( rng f1 ) )) by A110,XBOOLE_0:def 3;
then A113: (not ( x. j ) in ( still_not-bound_in f1 )) by A108,CKB39:1;
reconsider r2 = ( the_scope_of (f,( 0 )) ) as (Element of ( CQC-WFF ));
reconsider y2 = ( bound_in (f,( 0 )) ) as bound_QC-variable;
r1 in ( ExCl ) by A2,A3,FUNCT_1:3;
then consider y1,s1 such that A114: r1 = ( Ex (y1,s1) ) by CKB21:def 1;
A115: s1 = ( Ex-the_scope_of r1 ) by A114,CKB31:1;
A116: r2 = ( Ex-the_scope_of r1 ) by CKB28:def 1;
A117: y1 = ( Ex-bound_in r1 ) by A114,CKB31:1;
A118: y2 = ( Ex-bound_in r1 ) by CKB27:def 1;
(not ( x. j ) in ( still_not-bound_in r1 )) by A108,A111,CKB35:1;
then (not ( x. j ) in ( still_not-bound_in <* r1 *> )) by CALCUL_1:60;
then (not ( x. j ) in ( ( still_not-bound_in f1 ) \/ ( still_not-bound_in <* r1 *> ) )) by A113,XBOOLE_0:def 3;
then A119: (not ( x. j ) in ( still_not-bound_in ( f1 ^ <* r1 *> ) )) by CALCUL_1:59;
(not ( x. j ) in ( still_not-bound_in ( 'not' ( VERUM ) ) )) by QC_LANG3:3,QC_LANG3:7;
then (not ( x. j ) in ( still_not-bound_in <* ( 'not' ( VERUM ) ) *> )) by CALCUL_1:60;
then (not ( x. j ) in ( ( still_not-bound_in ( f1 ^ <* r1 *> ) ) \/ ( still_not-bound_in <* ( 'not' ( VERUM ) ) *> ) )) by A119,XBOOLE_0:def 3;
then (not ( x. j ) in ( still_not-bound_in ( ( f1 ^ <* r1 *> ) ^ <* ( 'not' ( VERUM ) ) *> ) )) by CALCUL_1:59;
then  |- ( ( f1 ^ <* r1 *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by A105,A114,A115,A116,A117,A118,CALCUL_1:61;
then  |- ( f1 ^ <* ( 'not' ( VERUM ) ) *> ) by A100,A103,CALCUL_2:26;
then ( F . k ) |- ( 'not' ( VERUM ) ) by A96,HENMODEL:def 1;
hence contradiction by A92,A100,CKB33:1;
end;
now
assume k <> ( 0 );
then consider k1 being Nat such that A120: k = ( k1 + 1 ) by NAT_1:6;
reconsider k1 as (Element of ( NAT )) by ORDINAL1:def 12;
A121: (ex K st (ex L st ((K = ( ( h . k1 ) `2 ) & L = ( K \/ ( still_not-bound_in { ( f . ( k1 + 1 ) ) } ) )) & ( h . ( k1 + 1 ) ) = [ ( ( 'not' ( f . ( k1 + 1 ) ) ) 'or' ( ( the_scope_of (f,( k1 + 1 )) ) . (( bound_in (f,( k1 + 1 )) ),( x. ( min* { i: (not ( x. i ) in L) } ) )) ) ),( K \/ ( still_not-bound_in ( ( 'not' ( f . ( k1 + 1 ) ) ) 'or' ( ( the_scope_of (f,( k1 + 1 )) ) . (( bound_in (f,( k1 + 1 )) ),( x. ( min* { j: (not ( x. j ) in L) } ) )) ) ) ) ) ]))) by A5;
set K = ( ( h . k1 ) `2 );
set r1 = ( f . ( k1 + 1 ) );
set L = ( K \/ ( still_not-bound_in { r1 } ) );
set p1 = ( ( 'not' r1 ) 'or' ( ( the_scope_of (f,( k1 + 1 )) ) . (( bound_in (f,( k1 + 1 )) ),( x. ( min* { i: (not ( x. i ) in L) } ) )) ) );
A122: r = p1 by A120,A121,MCART_1:7;
reconsider s = ( ( the_scope_of (f,( k1 + 1 )) ) . (( bound_in (f,( k1 + 1 )) ),( x. ( min* { i: (not ( x. i ) in L) } ) )) ) as (Element of ( CQC-WFF ));
A123:  |- ( ( f1 ^ <* ( 'not' r1 ) *> ) ^ <* p1 *> ) by A98,A120,CALCUL_1:51;
( ( 0 ) + 1 ) <= ( len ( f1 ^ <* r *> ) ) by CALCUL_1:10;
then  |- ( ( ( ( Ant ( f1 ^ <* r *> ) ) ^ <* ( 'not' r1 ) *> ) ^ <* ( Suc ( f1 ^ <* r *> ) ) *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by A97,CKB34:1;
then  |- ( ( ( f1 ^ <* ( 'not' r1 ) *> ) ^ <* ( Suc ( f1 ^ <* r *> ) ) *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by CALCUL_1:5;
then  |- ( ( ( f1 ^ <* ( 'not' r1 ) *> ) ^ <* r *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by CALCUL_1:5;
then A124:  |- ( ( f1 ^ <* ( 'not' r1 ) *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by A122,A123,CALCUL_2:24;
 |- ( ( f1 ^ <* s *> ) ^ <* s *> ) by CALCUL_2:21;
then A125:  |- ( ( f1 ^ <* s *> ) ^ <* p1 *> ) by CALCUL_1:52;
( ( 0 ) + 1 ) <= ( len ( f1 ^ <* r *> ) ) by CALCUL_1:10;
then  |- ( ( ( ( Ant ( f1 ^ <* r *> ) ) ^ <* s *> ) ^ <* ( Suc ( f1 ^ <* r *> ) ) *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by A97,CKB34:1;
then  |- ( ( ( f1 ^ <* s *> ) ^ <* ( Suc ( f1 ^ <* r *> ) ) *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by CALCUL_1:5;
then  |- ( ( ( f1 ^ <* s *> ) ^ <* p1 *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by A122,CALCUL_1:5;
then A126:  |- ( ( f1 ^ <* s *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by A125,CALCUL_2:24;
set y = ( x. ( min* { i: (not ( x. i ) in L) } ) );
set j = ( min* { i: (not ( x. i ) in L) } );
reconsider r2 = ( the_scope_of (f,( k1 + 1 )) ) as (Element of ( CQC-WFF ));
reconsider y2 = ( bound_in (f,( k1 + 1 )) ) as bound_QC-variable;
reconsider r1 as (Element of ( CQC-WFF ));
r1 in ( ExCl ) by A2,A3,FUNCT_1:3;
then consider y1,s1 such that A127: r1 = ( Ex (y1,s1) ) by CKB21:def 1;
A128: s1 = ( Ex-the_scope_of r1 ) by A127,CKB31:1;
A129: r2 = ( Ex-the_scope_of r1 ) by CKB28:def 1;
A130: y1 = ( Ex-bound_in r1 ) by A127,CKB31:1;
A131: y2 = ( Ex-bound_in r1 ) by CKB27:def 1;
reconsider Z = ( F . k ) as (Subset of ( CQC-WFF ));
(not y in ( still_not-bound_in ( Z \/ { r1 } ) )) by A73,A120;
then A132: (not y in ( ( still_not-bound_in Z ) \/ ( still_not-bound_in { r1 } ) )) by CKB36:1;
then A133: (not y in ( still_not-bound_in { r1 } )) by XBOOLE_0:def 3;
( still_not-bound_in ( rng f1 ) ) c= ( still_not-bound_in Z ) by A96,CKB38:1;
then (not y in ( still_not-bound_in ( rng f1 ) )) by A132,XBOOLE_0:def 3;
then A134: (not y in ( still_not-bound_in f1 )) by CKB39:1;
(not y in ( still_not-bound_in r1 )) by A133,CKB35:1;
then (not y in ( still_not-bound_in <* r1 *> )) by CALCUL_1:60;
then (not y in ( ( still_not-bound_in f1 ) \/ ( still_not-bound_in <* r1 *> ) )) by A134,XBOOLE_0:def 3;
then A135: (not y in ( still_not-bound_in ( f1 ^ <* r1 *> ) )) by CALCUL_1:59;
(not ( x. j ) in ( still_not-bound_in ( 'not' ( VERUM ) ) )) by QC_LANG3:3,QC_LANG3:7;
then (not ( x. j ) in ( still_not-bound_in <* ( 'not' ( VERUM ) ) *> )) by CALCUL_1:60;
then (not ( x. j ) in ( ( still_not-bound_in ( f1 ^ <* r1 *> ) ) \/ ( still_not-bound_in <* ( 'not' ( VERUM ) ) *> ) )) by A135,XBOOLE_0:def 3;
then (not ( x. j ) in ( still_not-bound_in ( ( f1 ^ <* r1 *> ) ^ <* ( 'not' ( VERUM ) ) *> ) )) by CALCUL_1:59;
then  |- ( ( f1 ^ <* r1 *> ) ^ <* ( 'not' ( VERUM ) ) *> ) by A126,A127,A128,A129,A130,A131,CALCUL_1:61;
then  |- ( f1 ^ <* ( 'not' ( VERUM ) ) *> ) by A124,CALCUL_2:26;
then ( F . k ) |- ( 'not' ( VERUM ) ) by A96,HENMODEL:def 1;
hence contradiction by A95,CKB33:1;
end;
hence contradiction by A99;
end;
hence thesis;
end;
(for n holds P[ n ]) from NAT_1:sch 1(A93,A94);
then (for n holds (for m holds (((m in ( dom F ) & n in ( dom F )) & n < m) implies (( F . n ) is  Consistent & ( F . n ) c= ( F . m ))))) by A40;
then reconsider CY as  Consistent (Subset of ( CQC-WFF )) by A39,HENMODEL:11;
take CY;
thus thesis by A8,CKB2:def 1,XBOOLE_1:7;
end;
