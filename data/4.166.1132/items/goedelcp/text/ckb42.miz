environ
vocabularies NUMBERS,SUBSET_1,CQC_LANG,QC_LANG1,XBOOLE_0,VALUAT_1,FINSEQ_1,HENMODEL,CQC_THE1,XBOOLEAN,BVFUNC_2,FUNCT_1,ORDINAL4,CALCUL_1,ARYTM_3,RELAT_1,CARD_1,XXREAL_0,TARSKI,ZF_MODEL,CQC_SIM1,REALSET1,SUBSTUT1,SUBSTUT2,ZF_LANG,ARYTM_1,CARD_3,ZFMISC_1,FINSET_1,MCART_1,NAT_1,GOEDELCP;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,XXREAL_0,NAT_1,CARD_3,FINSEQ_1,FUNCT_1,QC_LANG1,QC_LANG2,QC_LANG3,NUMBERS,CQC_LANG,RELAT_1,FINSET_1,VALUAT_1,RELSET_1,FUNCT_2,CQC_SIM1,DOMAIN_1,MCART_1,SUBSTUT1,SUBLEMMA,SUBSTUT2,CALCUL_1,HENMODEL,CKB1,CKB2,CKB21,CKB25,CKB26,CKB27,CKB28,CKB29;
definitions TARSKI,XBOOLE_0,CKB1,CKB2,CKB21,CKB25,CKB26,CKB27,CKB28,CKB29;
theorems TARSKI,FUNCT_1,MCART_1,XBOOLE_0,XBOOLE_1,CQC_LANG,QC_LANG1,ZFMISC_1,RELAT_1,QC_LANG3,QC_LANG2,HENMODEL,CALCUL_1,SUBLEMMA,NAT_1,FINSEQ_1,VALUAT_1,FUNCT_2,SUBSTUT2,CQC_SIM1,CARD_4,CALCUL_2,SUPINF_2,XREAL_1,XXREAL_0,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41;
schemes XBOOLE_0,NAT_1,FUNCT_1,SUBSTUT2,RECDEF_1;
registrations SUBSET_1,RELAT_1,ORDINAL1,XXREAL_0,XREAL_0,CQC_LANG,HENMODEL,FINSEQ_1,FINSET_1,CARD_3,RELSET_1;
constructors SETFAM_1,DOMAIN_1,XXREAL_0,NAT_1,NAT_D,FINSEQ_2,QC_LANG3,CQC_SIM1,SUBSTUT2,CALCUL_1,HENMODEL,CARD_3,RELSET_1,CKB1,CKB2,CKB21,CKB25,CKB26,CKB27,CKB28,CKB29;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve X for (Subset of ( CQC-WFF ));
reserve Y for (Subset of ( CQC-WFF ));
reserve k for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve p for (Element of ( CQC-WFF ));
reserve x for bound_QC-variable;
reserve y for bound_QC-variable;
reserve CX for  Consistent (Subset of ( CQC-WFF ));
reserve CY for  Consistent (Subset of ( CQC-WFF ));
reserve a for set;
reserve C for (Subset of ( CQC-WFF ));
reserve D for (Subset of ( CQC-WFF ));
theorem
Th33: (CX is  with_examples implies (ex CY st ((CX c= CY & CY is  negation_faithful) & CY is  with_examples)))
proof
assume A1: CX is  with_examples;
consider f being Function such that A2: ( dom f ) = ( NAT ) and A3: ( CQC-WFF ) = ( rng f ) by CKB24:1,CKB20:1;
reconsider f as (Function of ( NAT ),( CQC-WFF )) by A2,A3,FUNCT_2:2;
defpred P[ set,set,set ]
 means
(ex X st ((X = ( $2 \/ { ( f . $1 ) } ) & (X is  Consistent implies $3 = X)) & ((not X is  Consistent) implies $3 = $2)));
A4: (for n holds (for C holds (ex D st P[ n,C,D ])))
proof
let n;
reconsider p = ( f . n ) as (Element of ( CQC-WFF ));
let C;
set X = ( C \/ { p } );
reconsider X as (Subset of ( CQC-WFF ));
((not X is  Consistent) implies (ex D st (D = C & (ex X st ((X = ( C \/ { p } ) & (X is  Consistent implies D = X)) & ((not X is  Consistent) implies D = C))))));
hence thesis;
end;
consider h being (Function of ( NAT ),( bool ( CQC-WFF ) )) such that A5: (( h . ( 0 ) ) = CX & (for n holds P[ n,( h . n ),( h . ( n + 1 ) ) ])) from RECDEF_1:sch 2(A4);
set CY = ( union ( rng h ) );
A6:now
let a;
assume that
A7: a in CX;
( dom h ) = ( NAT ) by FUNCT_2:def 1;
then ( h . ( 0 ) ) in ( rng h ) by FUNCT_1:3;
hence a in ( union ( rng h ) ) by A5,A7,TARSKI:def 4;
end;
then A8: CX c= CY by TARSKI:def 3;
A9: (for n holds ( h . n ) c= ( h . ( n + 1 ) ))
proof
let n;
let a;
assume that
A10: a in ( h . n );
reconsider p = ( f . n ) as (Element of ( CQC-WFF ));
set X = ( ( h . n ) \/ { p } );
reconsider X as (Subset of ( CQC-WFF ));
A11: ( h . n ) c= X by XBOOLE_1:7;
(ex Y st ((Y = ( ( h . n ) \/ { ( f . n ) } ) & (Y is  Consistent implies ( h . ( n + 1 ) ) = Y)) & ((not Y is  Consistent) implies ( h . ( n + 1 ) ) = ( h . n )))) by A5;
hence thesis by A10,A11;
end;
A12: (for n holds (for m holds (((m in ( dom h ) & n in ( dom h )) & n < m) implies ( h . n ) c= ( h . m ))))
proof
let n;
let m;
assume that
m in ( dom h )
and
n in ( dom h )
and
A13: n < m;
defpred P[ (Element of ( NAT )) ]
 means
(n <= $1 implies ( h . n ) c= ( h . $1 ));
A14: P[ ( 0 ) ]
proof
assume n <= ( 0 );
then n = ( 0 ) by NAT_1:2;
hence thesis;
end;
A15: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume that
A16: P[ k ];
assume A17: n <= ( k + 1 );
now
assume A18: n <= k;
( h . k ) c= ( h . ( k + 1 ) ) by A9;
hence thesis by A16,A18,XBOOLE_1:1;
end;
hence thesis by A17,NAT_1:8;
end;
(for k holds P[ k ]) from NAT_1:sch 1(A14,A15);
hence thesis by A13;
end;
defpred P[ (Element of ( NAT )) ]
 means
( h . $1 ) is  Consistent;
A19: P[ ( 0 ) ] by A5;
A20: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let n;
assume that
A21: P[ n ];
(ex Y st ((Y = ( ( h . n ) \/ { ( f . n ) } ) & (Y is  Consistent implies ( h . ( n + 1 ) ) = Y)) & ((not Y is  Consistent) implies ( h . ( n + 1 ) ) = ( h . n )))) by A5;
hence thesis by A21;
end;
set CY = ( union ( rng h ) );
(for n holds P[ n ]) from NAT_1:sch 1(A19,A20);
then (for n holds (for m holds (((m in ( dom h ) & n in ( dom h )) & n < m) implies (( h . n ) is  Consistent & ( h . n ) c= ( h . m ))))) by A12;
then reconsider CY as  Consistent (Subset of ( CQC-WFF )) by HENMODEL:11;
A22: CY is  negation_faithful
proof
let p;
consider a such that A23: a in ( dom f ) and A24: ( f . a ) = p by A3,FUNCT_1:def 3;
reconsider n = a as (Element of ( NAT )) by A23;
now
assume (not CY |- ( 'not' p ));
then A25: (not ( CY \/ { p } ) is  Inconsistent) by HENMODEL:10;
A26:now
assume ( ( h . n ) \/ { p } ) is  Inconsistent;
then A27: ( ( h . n ) \/ { p } ) |- ( 'not' ( VERUM ) ) by CKB33:1;
now
let a;
assume that
A28: a in ( h . n );
( dom h ) = ( NAT ) by FUNCT_2:def 1;
then ( h . n ) in ( rng h ) by FUNCT_1:3;
hence a in CY by A28,TARSKI:def 4;
end;
then ( h . n ) c= CY by TARSKI:def 3;
then ( CY \/ { p } ) |- ( 'not' ( VERUM ) ) by A27,CKB41:1,XBOOLE_1:9;
hence contradiction by A25,CKB33:1;
end;
A29: (ex Y st ((Y = ( ( h . n ) \/ { ( f . n ) } ) & (Y is  Consistent implies ( h . ( n + 1 ) ) = Y)) & ((not Y is  Consistent) implies ( h . ( n + 1 ) ) = ( h . n )))) by A5;
now
let a;
assume that
A30: a in ( h . ( n + 1 ) );
( dom h ) = ( NAT ) by FUNCT_2:def 1;
then ( h . ( n + 1 ) ) in ( rng h ) by FUNCT_1:3;
hence a in CY by A30,TARSKI:def 4;
end;
then A31: ( h . ( n + 1 ) ) c= CY by TARSKI:def 3;
{ p } c= ( h . ( n + 1 ) ) by A24,A26,A29,XBOOLE_1:7;
then { p } c= CY by A31,XBOOLE_1:1;
then p in CY by ZFMISC_1:31;
hence CY |- p by CKB30:1;
end;
hence thesis;
end;
A32: CY is  with_examples
proof
let x;
let p;
consider y such that A33: CX |- ( ( 'not' ( Ex (x,p) ) ) 'or' ( p . (x,y) ) ) by A1,CKB2:def 1;
take y;
thus thesis by A8,A33,CKB41:1;
end;
take CY;
thus thesis by A6,A22,A32,TARSKI:def 3;
end;
