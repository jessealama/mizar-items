environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,ALGSTR_0,FINSEQ_1,SUBSET_1,RLVECT_1,RELAT_1,CARD_1,FINSEQ_2,TARSKI,STRUCT_0,TREES_1,XXREAL_0,ZFMISC_1,FUNCT_1,QC_LANG1,INCSP_1,SUPINF_2,MESFUNC1,ARYTM_1,ARYTM_3,VECTSP_1,BINOP_1,MATRIX_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,FUNCT_1,FUNCT_2,FINSEQ_1,FINSEQ_2,STRUCT_0,ALGSTR_0,BINOP_1,FINSEQOP,RLVECT_1,VECTSP_1,XXREAL_0,CKB1,CKB12,CKB15,CKB16,CKB17,CKB18,CKB19,CKB30,CKB32,CKB33,CKB44,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB60,CKB62;
definitions TARSKI,RLVECT_1,BINOP_1,FINSEQ_2,STRUCT_0,ALGSTR_0,CKB1,CKB15,CKB30,CKB32,CKB33,CKB44,CKB48,CKB49,CKB52,CKB53,CKB54,CKB55,CKB56,CKB60;
theorems FINSEQ_1,FINSEQ_2,FINSEQ_3,TARSKI,FUNCOP_1,FUNCT_1,FUNCT_2,ZFMISC_1,NAT_1,BINOP_1,RLVECT_1,RELAT_1,ORDINAL1,CARD_1,CARD_2,XXREAL_0,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB14,CKB15,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB48,CKB49,CKB52,CKB53,CKB54,CKB55,CKB56,CKB58,CKB59,CKB60,CKB63,CKB64,CKB65,CKB66;
schemes FINSEQ_1,BINOP_1,FINSEQ_2,CKB35,CKB36;
registrations XBOOLE_0,RELAT_1,FUNCT_1,XREAL_0,FINSEQ_1,FINSEQ_2,STRUCT_0,VECTSP_1,ORDINAL1,CARD_1,CKB2,CKB11,CKB13,CKB57,CKB61;
constructors BINOP_1,XXREAL_0,FINSEQOP,VECTSP_1,RLVECT_1,RELSET_1,CKB1,CKB15,CKB30,CKB32,CKB33,CKB44,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB60;
requirements NUMERALS,SUBSET,BOOLE,REAL;
begin
reserve n for Nat;
reserve D for non  empty set;
reserve a for (Element of D);
reserve F for  add-associative  right_zeroed  right_complementable  Abelian non  empty doubleLoopStr;
reserve A for (Matrix of n,F);
reserve A9 for (Matrix of n,F);
reserve B for (Matrix of n,F);
reserve B9 for (Matrix of n,F);
definition
let F;
let n;
func n -G_Matrix_over F ->  strict AbGroup means 
(((the carrier of it) = ( n -Matrices_over F ) & (for A holds (for B holds ( (the addF of it) . (A,B) ) = ( A + B )))) & ( 0. it ) = ( 0. (F,n) ));
existence
proof
reconsider A0 = ( 0. (F,n) ) as (Element of ( n -Matrices_over F ));
defpred P[ (Element of ( n -Matrices_over F )),(Element of ( n -Matrices_over F )),(Element of ( n -Matrices_over F )) ]
 means
(ex A st (ex B st (($1 = A & $2 = B) & $3 = ( A + B ))));
A1: (for a,b being (Element of ( n -Matrices_over F )) holds (ex c being (Element of ( n -Matrices_over F )) st P[ a,b,c ]))
proof
let a being (Element of ( n -Matrices_over F ));
let b being (Element of ( n -Matrices_over F ));
reconsider B = b as (Matrix of n,F) by CKB59:1;
reconsider A = a as (Matrix of n,F) by CKB59:1;
reconsider c = ( A + B ) as (Element of ( n -Matrices_over F )) by CKB59:1;
take c;
thus thesis;
end;
consider h being (BinOp of ( n -Matrices_over F )) such that A2: (for a,b being (Element of ( n -Matrices_over F )) holds P[ a,b,( h . (a,b) ) ]) from BINOP_1:sch 3(A1);
set G = addLoopStr (# ( n -Matrices_over F ),h,A0 #);
A3: ( h . (A,B) ) = ( A + B )
proof
(A is (Element of ( n -Matrices_over F )) & B is (Element of ( n -Matrices_over F ))) by CKB59:1;
then (ex A9 st (ex B9 st ((A = A9 & B = B9) & ( h . (A,B) ) = ( A9 + B9 )))) by A2;
hence thesis;
end;
A4: (for a being (Element of ( n -Matrices_over F )) holds (ex b being (Element of ( n -Matrices_over F )) st (ex A st (a = A & b = ( - A )))))
proof
let a being (Element of ( n -Matrices_over F ));
reconsider A = a as (Matrix of n,F) by CKB59:1;
reconsider b = ( - A ) as (Element of ( n -Matrices_over F )) by CKB59:1;
take b;
thus thesis;
end;
G is  Abelian  add-associative  right_zeroed  right_complementable
proof
thus G is  Abelian
proof
let a being (Element of G);
let b being (Element of G);
reconsider A = a,B = b as (Matrix of n,F) by CKB59:1;
thus ( a + b ) = ( A + B ) by A3
.= ( B + A ) by CKB63:1
.= ( b + a ) by A3;
end;

hereby
let a being (Element of G);
let b being (Element of G);
let c being (Element of G);
reconsider A = a,B = b,C = c as (Matrix of n,F) by CKB59:1;
thus ( ( a + b ) + c ) = ( h . (( A + B ),C) ) by A3
.= ( ( A + B ) + C ) by A3
.= ( A + ( B + C ) ) by CKB64:1
.= ( h . (A,( B + C )) ) by A3
.= ( a + ( b + c ) ) by A3;
end;
hereby
let a being (Element of G);
reconsider A = a as (Matrix of n,F) by CKB59:1;
thus ( a + ( 0. G ) ) = ( A + ( 0. (F,n) ) ) by A3
.= a by CKB65:1;
end;
let a being (Element of G);
consider b being (Element of ( n -Matrices_over F )) such that A5: (ex A st (a = A & b = ( - A ))) by A4;
consider A such that A6: a = A and A7: b = ( - A ) by A5;
reconsider b = ( - A ) as (Element of G) by A7;
take b;
thus ( a + b ) = ( A + ( - A ) ) by A3,A6
.= ( 0. G ) by CKB66:1;
end;
then reconsider G as  strict AbGroup;
take G;
thus thesis by A3;
end;
uniqueness
proof
thus (for G1,G2 being  strict AbGroup holds (((((((the carrier of G1) = ( n -Matrices_over F ) & (for A holds (for B holds ( (the addF of G1) . (A,B) ) = ( A + B )))) & ( 0. G1 ) = ( 0. (F,n) )) & (the carrier of G2) = ( n -Matrices_over F )) & (for A holds (for B holds ( (the addF of G2) . (A,B) ) = ( A + B )))) & ( 0. G2 ) = ( 0. (F,n) )) implies G1 = G2))
proof
let G1 being  strict AbGroup;
let G2 being  strict AbGroup;
assume that
A8: (the carrier of G1) = ( n -Matrices_over F )
and
A9: (for A holds (for B holds ( (the addF of G1) . (A,B) ) = ( A + B )))
and
A10: (( 0. G1 ) = ( 0. (F,n) ) & (the carrier of G2) = ( n -Matrices_over F ))
and
A11: (for A holds (for B holds ( (the addF of G2) . (A,B) ) = ( A + B )))
and
A12: ( 0. G2 ) = ( 0. (F,n) );
now
let a being (Element of G1);
let b being (Element of G1);
reconsider A = a,B = b as (Matrix of n,F) by A8,CKB59:1;
thus ( (the addF of G1) . (a,b) ) = ( A + B ) by A9
.= ( (the addF of G2) . (a,b) ) by A11;
end;
hence thesis by A8,A10,A12,BINOP_1:2;
end;

end;
end;
