environ
vocabularies NUMBERS,SUBSET_1,INT_1,XREAL_0,ORDINAL1,SEQ_1,FINSEQ_1,RAT_1,ORDINAL4,POWER,INT_2,SQUARE_1,XXREAL_0,CARD_1,ARYTM_3,RELAT_1,NAT_1,FUNCT_1,ARYTM_1,REALSET1,SEQ_2,ORDINAL2,COMPLEX1,VALUED_1,FUNCOP_1,SERIES_1,CARD_3,XBOOLE_0,RFINSEQ,PARTFUN1,FINSEQ_2,NEWTON,SIN_COS,IRRAT_1;
notations XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,INT_1,COMPLEX1,NAT_1,FUNCT_1,PARTFUN1,FUNCOP_1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,POWER,FINSEQ_1,RVSUM_1,SERIES_1,FINSEQ_2,RFINSEQ,SIN_COS,RAT_1,SQUARE_1,LIMFUNC1,INT_2,PEPIN,NEWTON,CKB1,CKB2,CKB6,CKB7,CKB8,CKB10,CKB11;
definitions SEQ_2,SQUARE_1,XCMPLX_0,CKB6,CKB7,CKB8,CKB10,CKB11;
theorems SEQ_1,POWER,NEWTON,NAT_1,SEQ_2,SEQ_4,ABSVALUE,RVSUM_1,FINSEQ_2,SERIES_1,RFINSEQ,FINSEQ_3,FINSEQ_5,SIN_COS,SQUARE_1,INT_1,RAT_1,INT_2,FUNCT_2,XCMPLX_0,XCMPLX_1,FUNCOP_1,XREAL_1,COMPLEX1,XXREAL_0,NAT_D,PARTFUN1,CARD_1,VALUED_0,ORDINAL1,XREAL_0,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25;
schemes SEQ_1,NAT_1,CKB5;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,VALUED_1,FUNCT_2,POWER,SEQ_4,FINSEQ_1;
constructors ARYTM_0,REAL_1,NAT_1,NAT_D,SEQ_2,PARTFUN1,RVSUM_1,LIMFUNC1,COMSEQ_3,RFINSEQ,BINARITH,SIN_COS,PEPIN,SEQ_1,SERIES_1,POWER,RELSET_1,CKB6,CKB7,CKB8,CKB10,CKB11;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve seq for Real_Sequence;
reserve sq for (FinSequence of ( REAL ));
theorem
Th19: (for n holds (for seq holds (for sq holds (((( len sq ) = n & (for k holds (k < n implies ( seq . k ) = ( sq . ( k + 1 ) )))) & (for k holds (k >= n implies ( seq . k ) = ( 0 )))) implies (seq is  summable & ( Sum seq ) = ( Sum sq ))))))
proof
defpred P[ (Element of ( NAT )) ]
 means
(for seq holds (for sq holds (((( len sq ) = $1 & (for k holds (k < $1 implies ( seq . k ) = ( sq . ( k + 1 ) )))) & (for k holds (k >= $1 implies ( seq . k ) = ( 0 )))) implies (seq is  summable & ( Sum seq ) = ( Sum sq )))));
now
let n;
assume A1: (for seq holds (for sq holds (((( len sq ) = n & (for k holds (k < n implies ( seq . k ) = ( sq . ( k + 1 ) )))) & (for k holds (k >= n implies ( seq . k ) = ( 0 )))) implies (seq is  summable & ( Sum seq ) = ( Sum sq )))));
let seq;
let sq;
assume that
A2: ( len sq ) = ( n + 1 )
and
A3: (for k holds (k < ( n + 1 ) implies ( seq . k ) = ( sq . ( k + 1 ) )))
and
A4: (for k holds (k >= ( n + 1 ) implies ( seq . k ) = ( 0 )));
A5:now
let k;
A6: ( k + 1 ) >= ( ( 0 ) + 1 ) by XREAL_1:6;
assume k < n;
then A7: ( k + 1 ) < ( n + 1 ) by XREAL_1:6;
thus ( ( seq ^\ 1 ) . k ) = ( seq . ( k + 1 ) ) by NAT_1:def 3
.= ( sq . ( ( k + 1 ) + 1 ) ) by A3,A7
.= ( ( sq /^ 1 ) . ( k + 1 ) ) by A2,A7,A6,CKB24:1;
end;
A8:now
let k;
assume k >= n;
then A9: ( k + 1 ) >= ( n + 1 ) by XREAL_1:6;
thus ( ( seq ^\ 1 ) . k ) = ( seq . ( k + 1 ) ) by NAT_1:def 3
.= ( 0 ) by A4,A9;
end;
( n + 1 ) >= ( ( 0 ) + 1 ) by XREAL_1:6;
then A10: ( len ( sq /^ 1 ) ) = ( ( len sq ) - 1 ) by A2,RFINSEQ:def 1
.= n by A2;
then A11: ( Sum ( seq ^\ 1 ) ) = ( Sum ( sq /^ 1 ) ) by A1,A5,A8;
A12: ( seq ^\ 1 ) is  summable by A1,A10,A5,A8;
hence seq is  summable by CKB23:1;
thus ( Sum seq ) = ( ( seq . ( 0 ) ) + ( Sum ( seq ^\ 1 ) ) ) by A12,CKB23:1
.= ( ( sq . ( ( 0 ) + 1 ) ) + ( Sum ( seq ^\ 1 ) ) ) by A3
.= ( Sum sq ) by A2,A11,CKB25:1;
end;
then A13: (P[ k ] implies P[ ( k + 1 ) ]);
now
let seq;
let sq;
assume that
A14: ( len sq ) = ( 0 )
and
(for k holds (k < ( 0 ) implies ( seq . k ) = ( sq . ( k + 1 ) )))
and
A15: (for k holds (k >= ( 0 ) implies ( seq . k ) = ( 0 )));
sq is (Element of ( ( 0 ) -tuples_on ( REAL ) )) by A14,FINSEQ_2:92;
then A16: ( Sum sq ) = ( 0 ) by RVSUM_1:79;
defpred P[ Nat ]
 means
( ( Partial_Sums seq ) . $1 ) = ( 0 );
A17:now
let k being Nat;
k in ( NAT ) by ORDINAL1:def 12;
then A18: ( ( Partial_Sums seq ) . ( k + 1 ) ) = ( ( ( Partial_Sums seq ) . k ) + ( seq . ( k + 1 ) ) ) by SERIES_1:def 1;
assume P[ k ];
hence P[ ( k + 1 ) ] by A15,A18;
end;
( seq . ( 0 ) ) = ( 0 ) by A15;
then A19: P[ ( 0 ) ] by SERIES_1:def 1;
A20: (for k being Nat holds P[ k ]) from NAT_1:sch 2(A19,A17);
then ( Partial_Sums seq ) is  convergent by CKB17:1;
hence seq is  summable by SERIES_1:def 2;
( lim ( Partial_Sums seq ) ) = ( 0 ) by A20,CKB17:1;
hence ( Sum seq ) = ( Sum sq ) by A16,SERIES_1:def 3;
end;
then A21: P[ ( 0 ) ];
thus P[ n ] from NAT_1:sch 1(A21,A13);
end;
