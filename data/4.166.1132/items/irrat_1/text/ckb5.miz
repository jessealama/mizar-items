environ
vocabularies NUMBERS,SUBSET_1,INT_1,XREAL_0,ORDINAL1,SEQ_1,FINSEQ_1,RAT_1,ORDINAL4,POWER,INT_2,SQUARE_1,XXREAL_0,CARD_1,ARYTM_3,RELAT_1,NAT_1,FUNCT_1,ARYTM_1,REALSET1,SEQ_2,ORDINAL2,COMPLEX1,VALUED_1,FUNCOP_1,SERIES_1,CARD_3,XBOOLE_0,RFINSEQ,PARTFUN1,FINSEQ_2,NEWTON,SIN_COS,IRRAT_1;
notations XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,INT_1,COMPLEX1,NAT_1,FUNCT_1,PARTFUN1,FUNCOP_1,VALUED_0,VALUED_1,SEQ_1,SEQ_2,POWER,FINSEQ_1,RVSUM_1,SERIES_1,FINSEQ_2,RFINSEQ,SIN_COS,RAT_1,SQUARE_1,LIMFUNC1,INT_2,PEPIN,NEWTON,CKB1,CKB2;
definitions SEQ_2,SQUARE_1,XCMPLX_0;
theorems SEQ_1,POWER,NEWTON,NAT_1,SEQ_2,SEQ_4,ABSVALUE,RVSUM_1,FINSEQ_2,SERIES_1,RFINSEQ,FINSEQ_3,FINSEQ_5,SIN_COS,SQUARE_1,INT_1,RAT_1,INT_2,FUNCT_2,XCMPLX_0,XCMPLX_1,FUNCOP_1,XREAL_1,COMPLEX1,XXREAL_0,NAT_D,PARTFUN1,CARD_1,VALUED_0,ORDINAL1,XREAL_0,CKB3,CKB4;
schemes SEQ_1,NAT_1;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,MEMBERED,NEWTON,XBOOLE_0,VALUED_0,VALUED_1,FUNCT_2,POWER,SEQ_4,FINSEQ_1;
constructors ARYTM_0,REAL_1,NAT_1,NAT_D,SEQ_2,PARTFUN1,RVSUM_1,LIMFUNC1,COMSEQ_3,RFINSEQ,BINARITH,SIN_COS,PEPIN,SEQ_1,SERIES_1,POWER,RELSET_1;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve seq for Real_Sequence;
reserve seq1 for Real_Sequence;
reserve seq2 for Real_Sequence;
scheme LambdaRealSeq { F(set) ->  real number } : ((ex seq st (for n holds ( seq . n ) = F(n))) & (for seq1 holds (for seq2 holds (((for n holds ( seq1 . n ) = F(n)) & (for n holds ( seq2 . n ) = F(n))) implies seq1 = seq2))))
proof
thus (ex seq st (for n holds ( seq . n ) = F(n))) from SEQ_1:sch 1;
let seq1;
let seq2;
assume A1: (for n holds ( seq1 . n ) = F(n));
assume A2: (for n holds ( seq2 . n ) = F(n));
now
let n;
thus ( seq1 . n ) = F(n) by A1
.= ( seq2 . n ) by A2;
end;
hence thesis by FUNCT_2:63;
end;
