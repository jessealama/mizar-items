environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,VECTSP_1,STRUCT_0,EUCLID,FINSEQ_1,FINSEQ_2,SUPINF_2,RELAT_1,ALGSTR_0,ARYTM_3,ARYTM_1,RVSUM_1,FUNCT_1,PARTFUN1,TARSKI,ZFMISC_1,NAT_1,XXREAL_0,GROUP_1,ORDINAL4,CARD_1,FVSUM_1,CARD_3,MATRIX_1,PRALG_1,MESFUNC1,MATRIX_6,TREES_1,MATRIXR2,AFINSQ_1,FUNCOP_1,QC_LANG1,FINSOP_1,INCSP_1,FUNCT_7,RFINSEQ,MATRIX_3,MATRIX14;
notations TARSKI,XBOOLE_0,SUBSET_1,XXREAL_0,RELAT_1,FUNCT_1,BINOP_1,ALGSTR_0,ZFMISC_1,MATRIX_1,FVSUM_1,PARTFUN1,FUNCT_3,NUMBERS,FINSEQ_7,FUNCT_2,FUNCOP_1,FINSEQ_1,STRUCT_0,GROUP_1,MATRIX_3,MATRIX_6,XCMPLX_0,NAT_1,NAT_D,VECTSP_1,FINSEQ_2,FINSOP_1,RFINSEQ,CKB1,CKB2,CKB10,CKB17,CKB27,CKB28;
definitions XBOOLE_0,MATRIX_1,ALGSTR_0,CKB1,CKB28;
theorems MATRIX_3,VECTSP_1,MATRIX_1,MATRIX_4,GROUP_1,FUNCT_1,FINSEQ_1,NAT_1,FINSEQ_7,FINSEQ_2,TARSKI,FINSOP_1,FVSUM_1,FUNCT_2,XBOOLE_0,ZFMISC_1,MATRIX_7,MATRIXR1,FINSEQ_3,XXREAL_0,ORDINAL1,FINSEQ_4,MATRIXR2,XREAL_1,FUNCOP_1,RLVECT_1,MATRIX_6,MATRIX12,POLYNOM1,PARTFUN1,NAT_D,CARD_1,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37;
schemes NAT_1,MATRIX_1;
registrations FINSEQ_2,XREAL_0,NAT_1,FUNCOP_1,STRUCT_0,VECTSP_1,ORDINAL1,XXREAL_0,RELAT_1,CARD_1,FINSEQ_1;
constructors FUNCT_3,FINSEQ_7,SETWISEO,FINSOP_1,JORDAN3,RFINSEQ,INTEGRA2,MATRIX_6,POLYNOM1,NAT_D,RELSET_1,FVSUM_1,CKB1,CKB2,CKB27,CKB28;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve i for (Element of ( NAT ));
reserve j for (Element of ( NAT ));
reserve K for Field;
theorem
Th32: (for x being (FinSequence of K) holds (for a being (Element of K) holds ((ex i st (((1 <= i & i <= ( len x )) & ( x . i ) = a) & (for j holds (((j <> i & 1 <= j) & j <= ( len x )) implies ( x . j ) = ( 0. K ))))) implies ( Sum x ) = a)))
proof
let x being (FinSequence of K);
let a being (Element of K);
given i such that
A1: 1 <= i
and
A2: i <= ( len x )
and
A3: ( x . i ) = a
and
A4: (for j holds (((j <> i & 1 <= j) & j <= ( len x )) implies ( x . j ) = ( 0. K )));

1 <= ( len x ) by A1,A2,XXREAL_0:2;
then consider f being (Function of ( NAT ),(the carrier of K)) such that A5: ( f . 1 ) = ( x . 1 ) and A6: (for n holds ((( 0 ) <> n & n < ( len x )) implies ( f . ( n + 1 ) ) = ( (the addF of K) . (( f . n ),( x . ( n + 1 ) )) ))) and A7: ( (the addF of K) "**" x ) = ( f . ( len x ) ) by FINSOP_1:def 1;
A8: (for j holds ((1 <= j & j < i) implies ( f . j ) = ( 0. K )))
proof
defpred P[ Nat ]
 means
((1 <= $1 & $1 < i) implies ( f . $1 ) = ( 0. K ));
let j;
assume A9: (1 <= j & j < i);
A10: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume A11: P[ k ];
per cases ;
suppose A12: (not (1 <= k & k < i));

now
per cases  by A12;
suppose A13: 1 > k;

A14: 1 <= ( 1 + k ) by NAT_1:12;
1 >= ( k + 1 ) by A13,NAT_1:13;
then A15: ( k + 1 ) = 1 by A14,XXREAL_0:1;
now
per cases ;
suppose ( k + 1 ) < i;

then ( k + 1 ) < ( len x ) by A2,XXREAL_0:2;
hence thesis by A4,A5,A15;
end;
suppose ( k + 1 ) >= i;

hence thesis;
end;
end;
hence thesis;
end;
suppose k >= i;

hence thesis by NAT_1:12;
end;
end;
hence thesis;
end;
suppose A16: (1 <= k & k < i);

then A17: ( k + 1 ) <= i by NAT_1:13;
A18: k < ( len x ) by A2,A16,XXREAL_0:2;
now
per cases  by A17,XXREAL_0:1;
suppose A19: ( k + 1 ) < i;

then A20: ( k + 1 ) < ( len x ) by A2,XXREAL_0:2;
( f . ( k + 1 ) ) = ( (the addF of K) . (( f . k ),( x . ( k + 1 ) )) ) by A6,A16,A18
.= ( ( 0. K ) + ( 0. K ) ) by A4,A11,A16,A19,A20,NAT_1:12
.= ( 0. K ) by RLVECT_1:4;
hence thesis;
end;
suppose ( k + 1 ) = i;

hence thesis;
end;
end;
hence thesis;
end;
end;
A21: P[ ( 0 ) ];
(for l being (Element of ( NAT )) holds P[ l ]) from NAT_1:sch 1(A21,A10);
hence thesis by A9;
end;
(for j holds ((i <= j & j <= ( len x )) implies ( f . j ) = a))
proof
defpred P[ Nat ]
 means
((i <= $1 & $1 <= ( len x )) implies ( f . $1 ) = a);
let j;
assume A22: (i <= j & j <= ( len x ));
A23: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume A24: P[ k ];
per cases ;
suppose (not (i <= ( k + 1 ) & ( k + 1 ) <= ( len x )));

hence thesis;
end;
suppose A25: (i <= ( k + 1 ) & ( k + 1 ) <= ( len x ));

then A26: k < ( len x ) by NAT_1:13;
A27: 1 <= ( k + 1 ) by A1,A25,XXREAL_0:2;
now
per cases  by A25,XXREAL_0:1;
suppose A28: i < ( k + 1 );

A29: k < ( len x ) by A25,NAT_1:13;
i <= k by A28,NAT_1:13;
then ( f . ( k + 1 ) ) = ( (the addF of K) . (( f . k ),( x . ( k + 1 ) )) ) by A1,A6,A29
.= ( a + ( 0. K ) ) by A4,A24,A25,A27,A28,NAT_1:13
.= a by RLVECT_1:4;
hence thesis;
end;
suppose A30: i = ( k + 1 );

then A31: k < i by NAT_1:13;
now
per cases ;
suppose A32: 1 <= k;

then ( f . ( k + 1 ) ) = ( (the addF of K) . (( f . k ),( x . ( k + 1 ) )) ) by A6,A26
.= ( ( 0. K ) + a ) by A3,A8,A30,A31,A32
.= a by RLVECT_1:4;
hence thesis;
end;
suppose k < 1;

then A33: ( k + 1 ) <= 1 by NAT_1:13;
1 <= ( 1 + k ) by NAT_1:12;
then i = 1 by A30,A33,XXREAL_0:1;
hence thesis by A3,A5,A33,XXREAL_0:1;
end;
end;
hence thesis;
end;
end;
hence thesis;
end;
end;
A34: P[ ( 0 ) ] by A1;
(for l being (Element of ( NAT )) holds P[ l ]) from NAT_1:sch 1(A34,A23);
hence thesis by A22;
end;
then ( f . ( len x ) ) = a by A2;
hence thesis by A7,FVSUM_1:def 8;
end;
