environ
vocabularies FUNCT_1,CARD_3,RELAT_1,TARSKI,XBOOLE_0,LANG1,SUBSET_1,DTCONSTR,TREES_4,FINSEQ_1,TDGROUP,TREES_3,TREES_2,STRUCT_0,MSUALG_1,PBOOLE,MSAFREE,ZFMISC_1,MARGREL1,PROB_2,NAT_1,PARTFUN1,MCART_1,MSUALG_3,MSAFREE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NAT_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_2,STRUCT_0,MCART_1,FINSEQ_1,MULTOP_1,PROB_2,CARD_3,TREES_2,TREES_3,TREES_4,LANG1,DTCONSTR,PBOOLE,MSUALG_1,MSAFREE,MSUALG_3;
definitions TARSKI,MSUALG_1,PBOOLE,PROB_2;
theorems MSAFREE,MSUALG_3,LANG1,FINSEQ_1,CARD_3,PBOOLE,FUNCT_1,FUNCT_2,DTCONSTR,TARSKI,ZFMISC_1,PROB_2,CARD_5,RELAT_1,DOMAIN_1,MCART_1,XBOOLE_0,XBOOLE_1,PARTFUN1,FINSEQ_2,CKB1,CKB3,CKB4;
schemes DTCONSTR,FUNCT_2,MULTOP_1,PBOOLE,CKB2;
registrations XBOOLE_0,FUNCT_1,RELSET_1,FINSEQ_1,RELAT_1,TREES_3,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_3,MSAFREE,ORDINAL1,PBOOLE,PRE_POLY,CKB5,CKB6,CKB7;
constructors MULTOP_1,PROB_2,MSUALG_3,MSAFREE,RELSET_1,CAT_3,FINSEQ_2;
requirements BOOLE,SUBSET;
begin
definition
let I being non empty set;
let X being  disjoint_valued (ManySortedSet of I);
let D being  non-empty (ManySortedSet of I);
let F being (ManySortedFunction of X,D);
func Flatten F -> (Function of ( Union X ),( Union D ))
means
:Def1: (for i being (Element of I) holds (for x being set holds (x in ( X . i ) implies ( it . x ) = ( ( F . i ) . x ))));
existence
proof
defpred P[ set,set ]
 means
(for i being (Element of I) holds ($1 in ( X . i ) implies $2 = ( ( F . i ) . $1 )));
A1: (for x being set holds (x in ( Union X ) implies (ex y being set st (y in ( Union D ) & P[ x,y ]))))
proof
let e being set;
assume e in ( Union X );
then consider i being set such that A2: i in ( dom X ) and A3: e in ( X . i ) by CARD_5:2;
reconsider i as (Element of I) by A2,PARTFUN1:def 2;
take u = ( ( F . i ) . e );
i in I;
then A4: i in ( dom D ) by PARTFUN1:def 2;
( ( F . i ) . e ) in ( D . i ) by A3,FUNCT_2:5;
hence u in ( Union D ) by A4,CARD_5:2;
let i9 being (Element of I);
assume e in ( X . i9 );
then ( X . i9 ) meets ( X . i ) by A3,XBOOLE_0:3;
hence thesis by PROB_2:def 2;
end;
consider f being (Function of ( Union X ),( Union D )) such that A5: (for e being set holds (e in ( Union X ) implies P[ e,( f . e ) ])) from FUNCT_2:sch 1(A1);
take f;
let i being (Element of I);
let x being set;
assume A6: x in ( X . i );
i in I;
then i in ( dom X ) by PARTFUN1:def 2;
then x in ( Union X ) by A6,CARD_5:2;
hence thesis by A5,A6;
end;
correctness
proof
let F1 being (Function of ( Union X ),( Union D )),F2 being (Function of ( Union X ),( Union D ));
assume that
A7: (for i being (Element of I) holds (for x being set holds (x in ( X . i ) implies ( F1 . x ) = ( ( F . i ) . x ))))
and
A8: (for i being (Element of I) holds (for x being set holds (x in ( X . i ) implies ( F2 . x ) = ( ( F . i ) . x ))));
now
let x being set;
assume x in ( Union X );
then consider i being set such that A9: i in ( dom X ) and A10: x in ( X . i ) by CARD_5:2;
reconsider i as (Element of I) by A9,PARTFUN1:def 2;
thus ( F1 . x ) = ( ( F . i ) . x ) by A7,A10
.= ( F2 . x ) by A8,A10;
end;
hence F1 = F2 by FUNCT_2:12;
end;
end;
