environ
vocabularies FUNCT_1,CARD_3,RELAT_1,TARSKI,XBOOLE_0,LANG1,SUBSET_1,DTCONSTR,TREES_4,FINSEQ_1,TDGROUP,TREES_3,TREES_2,STRUCT_0,MSUALG_1,PBOOLE,MSAFREE,ZFMISC_1,MARGREL1,PROB_2,NAT_1,PARTFUN1,MCART_1,MSUALG_3,MSAFREE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NAT_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_2,STRUCT_0,MCART_1,FINSEQ_1,MULTOP_1,PROB_2,CARD_3,TREES_2,TREES_3,TREES_4,LANG1,DTCONSTR,PBOOLE,MSUALG_1,MSAFREE,MSUALG_3,CKB8,CKB10,CKB11;
definitions TARSKI,MSUALG_1,PBOOLE,PROB_2,CKB8,CKB10,CKB11;
theorems MSAFREE,MSUALG_3,LANG1,FINSEQ_1,CARD_3,PBOOLE,FUNCT_1,FUNCT_2,DTCONSTR,TARSKI,ZFMISC_1,PROB_2,CARD_5,RELAT_1,DOMAIN_1,MCART_1,XBOOLE_0,XBOOLE_1,PARTFUN1,FINSEQ_2,CKB1,CKB3,CKB4,CKB8,CKB9,CKB10,CKB11,CKB12,CKB16;
schemes DTCONSTR,FUNCT_2,MULTOP_1,PBOOLE,CKB2;
registrations XBOOLE_0,FUNCT_1,RELSET_1,FINSEQ_1,RELAT_1,TREES_3,STRUCT_0,DTCONSTR,MSUALG_1,MSUALG_3,MSAFREE,ORDINAL1,PBOOLE,PRE_POLY,CKB5,CKB6,CKB7,CKB13,CKB14,CKB15,CKB17;
constructors MULTOP_1,PROB_2,MSUALG_3,MSAFREE,RELSET_1,CAT_3,FINSEQ_2,CKB8,CKB10,CKB11;
requirements BOOLE,SUBSET;
begin
scheme FreeSortUniq { S() -> non void non empty ManySortedSign,X,D() ->  non-empty (ManySortedSet of (the carrier of S())),G(set) -> (Element of ( Union D() )),H(set,set,set) -> (Element of ( Union D() )),f1,f2() -> (ManySortedFunction of ( FreeSort X() ),D()) } : f1() = f2()
provided
A1: (for o being (OperSymbol of S()) holds (for ts being (Element of ( Args (o,( FreeMSA X() )) )) holds (for x being (Element of ( ( Union D() ) * )) holds (x = ( ( Flatten f1() ) * ts ) implies ( ( f1() . ( the_result_sort_of o ) ) . ( ( Den (o,( FreeMSA X() )) ) . ts ) ) = H(o,ts,x)))))
and
A2: (for s being (SortSymbol of S()) holds (for y being set holds (y in ( FreeGen (s,X()) ) implies ( ( f1() . s ) . y ) = G(y))))
and
A3: (for o being (OperSymbol of S()) holds (for ts being (Element of ( Args (o,( FreeMSA X() )) )) holds (for x being (Element of ( ( Union D() ) * )) holds (x = ( ( Flatten f2() ) * ts ) implies ( ( f2() . ( the_result_sort_of o ) ) . ( ( Den (o,( FreeMSA X() )) ) . ts ) ) = H(o,ts,x)))))
and
A4: (for s being (SortSymbol of S()) holds (for y being set holds (y in ( FreeGen (s,X()) ) implies ( ( f2() . s ) . y ) = G(y))))
proof
reconsider D = ( Union D() ) as non empty set;
( TS ( DTConMSA X() ) ) = ( union ( rng ( FreeSort X() ) ) ) by MSAFREE:11
.= ( Union ( FreeSort X() ) ) by CARD_3:def 4;
then reconsider f1 = ( Flatten f1() ),f2 = ( Flatten f2() ) as (Function of ( TS ( DTConMSA X() ) ),D);
deffunc O((Element of ( DTConMSA X() )),(Element of ( ( TS ( DTConMSA X() ) ) * )),(Element of ( ( Union D() ) * ))) = H(( $1 `1 ),$2,$3);
consider H being (Function of [: (the carrier of ( DTConMSA X() )),( ( TS ( DTConMSA X() ) ) * ),( ( Union D() ) * ) :],( Union D() )) such that A5: (for nt being (Element of ( DTConMSA X() )) holds (for ts being (Element of ( ( TS ( DTConMSA X() ) ) * )) holds (for x being (Element of ( ( Union D() ) * )) holds ( H . (nt,ts,x) ) = O(nt,ts,x)))) from MULTOP_1:sch 4;
reconsider H as (Function of [: (the carrier of ( DTConMSA X() )),( ( TS ( DTConMSA X() ) ) * ),( D * ) :],D);
deffunc Hf((Element of ( DTConMSA X() )),(Element of ( ( TS ( DTConMSA X() ) ) * )),(Element of ( D * ))) = ( H . ($1,$2,$3) );
A6: ( DTConMSA X() ) = DTConstrStr (# ( [: (the carrier' of S()),{ (the carrier of S()) } :] \/ ( Union ( coprod X() ) ) ),( REL X() ) #) by MSAFREE:def 8;
A7:now
let f being (ManySortedFunction of ( FreeSort X() ),D());
assume that
A8: (for o being (OperSymbol of S()) holds (for ts being (Element of ( Args (o,( FreeMSA X() )) )) holds (for x being (Element of ( D * )) holds (x = ( ( Flatten f ) * ts ) implies ( ( f . ( the_result_sort_of o ) ) . ( ( Den (o,( FreeMSA X() )) ) . ts ) ) = H(o,ts,x)))));
let nt being (Element of ( DTConMSA X() ));
let ts being (Element of ( ( TS ( DTConMSA X() ) ) * ));
assume A9: nt ==> ( roots ts );
then [ nt,( roots ts ) ] in ( REL X() ) by A6,LANG1:def 1;
then consider o being (OperSymbol of S()),x2 being (Element of { (the carrier of S()) }) such that A10: nt = [ o,x2 ] by CKB3:1,DOMAIN_1:1;
let x being (Element of ( D * ));
assume A11: x = ( ( Flatten f ) * ts );
A12: ( FreeMSA X() ) = MSAlgebra (# ( FreeSort X() ),( FreeOper X() ) #) by MSAFREE:def 14;
reconsider tss = ts as (FinSequence of ( TS ( DTConMSA X() ) )) by FINSEQ_1:def 11;
reconsider xx = x as (Element of ( ( Union D() ) * ));
A13: x2 = (the carrier of S()) by TARSKI:def 1;
then A14: nt = ( Sym (o,X()) ) by A10,MSAFREE:def 9;
then A15: tss in ( ( ( ( FreeSort X() ) # ) * (the Arity of S()) ) . o ) by A9,MSAFREE:10;
( ( ( FreeSort X() ) * (the ResultSort of S()) ) . o ) = ( ( FreeSort X() ) . ( the_result_sort_of o ) ) by FUNCT_2:15;
then A16: ( ( DenOp (o,X()) ) . ts ) in ( ( FreeSort X() ) . ( the_result_sort_of o ) ) by A15,FUNCT_2:5;
( ( Flatten f ) . ( [ o,(the carrier of S()) ] -tree ts ) ) = ( ( Flatten f ) . ( ( DenOp (o,X()) ) . tss ) ) by A9,A10,A13,A14,MSAFREE:def 12
.= ( ( f . ( the_result_sort_of o ) ) . ( ( DenOp (o,X()) ) . ts ) ) by A16,CKB8:def 1
.= ( ( f . ( the_result_sort_of o ) ) . ( ( Den (o,( FreeMSA X() )) ) . ts ) ) by A12,MSAFREE:def 13
.= H(o,ts,x) by A8,A12,A15,A11
.= H(( nt `1 ),ts,x) by A10,MCART_1:7;
hence ( ( Flatten f ) . ( nt -tree ts ) ) = O(nt,ts,xx) by A10,A13
.= ( H . (nt,ts,x) ) by A5;
end;
then A17: (for nt being (Symbol of ( DTConMSA X() )) holds (for ts being (Element of ( ( TS ( DTConMSA X() ) ) * )) holds (nt ==> ( roots ts ) implies (for x being (Element of ( D * )) holds (x = ( f1 * ts ) implies ( f1 . ( nt -tree ts ) ) = Hf(nt,ts,x)))))) by A1;
deffunc F((Element of ( DTConMSA X() ))) = G(( root-tree $1 ));
A18: ( Terminals ( DTConMSA X() ) ) = ( Union ( coprod X() ) ) by MSAFREE:6;
consider G being (Function of (the carrier of ( DTConMSA X() )),( Union D() )) such that A19: (for t being (Element of ( DTConMSA X() )) holds ( G . t ) = F(t)) from FUNCT_2:sch 4;
reconsider G as (Function of (the carrier of ( DTConMSA X() )),D);
deffunc Gf((Element of ( DTConMSA X() ))) = ( G . $1 );
A20: ( dom X() ) = (the carrier of S()) by PARTFUN1:def 2;
A21:now
let f being (ManySortedFunction of ( FreeSort X() ),D());
assume that
A22: (for s being (SortSymbol of S()) holds (for y being set holds (y in ( FreeGen (s,X()) ) implies ( ( f . s ) . y ) = G(y))));
let t being (Element of ( DTConMSA X() ));
assume A23: t in ( Terminals ( DTConMSA X() ) );
then reconsider s = ( t `2 ) as (SortSymbol of S()) by A18,A20,CARD_3:22;
( t `1 ) in ( X() . ( t `2 ) ) by A18,A23,CARD_3:22;
then A24: ( root-tree [ ( t `1 ),s ] ) in ( FreeGen (s,X()) ) by MSAFREE:def 15;
A25: t = [ ( t `1 ),( t `2 ) ] by A18,A23,CARD_3:22;
hence ( ( Flatten f ) . ( root-tree t ) ) = ( ( f . s ) . ( root-tree [ ( t `1 ),s ] ) ) by A24,CKB8:def 1
.= G(( root-tree t )) by A22,A25,A24
.= ( G . t ) by A19;
end;
then A26: (for t being (Symbol of ( DTConMSA X() )) holds (t in ( Terminals ( DTConMSA X() ) ) implies ( f2 . ( root-tree t ) ) = Gf(t))) by A4;
A27: (for nt being (Symbol of ( DTConMSA X() )) holds (for ts being (Element of ( ( TS ( DTConMSA X() ) ) * )) holds (nt ==> ( roots ts ) implies (for x being (Element of ( D * )) holds (x = ( f2 * ts ) implies ( f2 . ( nt -tree ts ) ) = (Hf(nt,ts,x) qua (Element of D))))))) by A3,A7;
A28: (for t being (Element of ( DTConMSA X() )) holds (t in ( Terminals ( DTConMSA X() ) ) implies ( f1 . ( root-tree t ) ) = Gf(t))) by A2,A21;
f1 = f2 from CKB2:sch 1(A28,A17,A26,A27);
hence thesis by CKB9:1;
end;
