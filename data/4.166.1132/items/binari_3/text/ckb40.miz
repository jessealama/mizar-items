environ
vocabularies NUMBERS,XBOOLE_0,NAT_1,FINSEQ_2,MARGREL1,BINARITH,ARYTM_3,POWER,SUBSET_1,ORDINAL4,FINSEQ_1,FUNCOP_1,XBOOLEAN,CARD_1,RELAT_1,REAL_1,FINSEQ_5,EUCLID,XXREAL_0,FUNCT_1,PARTFUN1,ARYTM_1,BINARI_2,ZFMISC_1,INT_1,ABIAN,BINARI_3;
notations XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,REAL_1,XXREAL_0,NAT_1,NAT_D,POWER,ABIAN,SERIES_1,MARGREL1,FUNCT_1,PARTFUN1,FUNCOP_1,FINSEQ_1,FINSEQ_5,FINSEQOP,ZFMISC_1,FINSEQ_2,BINARITH,BINARI_2,EUCLID,CKB25;
definitions FINSEQ_2,EUCLID,XBOOLEAN,CKB25;
theorems TARSKI,NAT_1,NAT_2,MARGREL1,POWER,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSEQ_5,FINSEQ_6,BINARITH,BINARI_2,XREAL_1,XCMPLX_1,XBOOLEAN,NAT_D,PARTFUN1,XXREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
schemes NAT_1,NAT_2,FINSEQ_2;
registrations RELSET_1,XREAL_0,NAT_1,XBOOLEAN,MARGREL1,ZFMISC_1,NAT_2,ORDINAL1,XBOOLE_0,FINSEQ_2,INT_1,CARD_1,FINSEQ_1;
constructors XXREAL_0,NAT_1,NAT_D,FINSEQOP,SERIES_1,ZFMISC_1,BINARITH,FINSEQ_5,BINARI_2,ABIAN,EUCLID,BINOP_2,RELSET_1,CKB25;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Th36: (for n being non  empty Nat holds (for k being Nat holds (k < ( 2 to_power n ) implies ( Absval ( n -BinarySequence k ) ) = k)))
proof
let n being non  empty Nat;
defpred P[ Nat ]
 means
($1 < ( 2 to_power n ) implies ( Absval ( n -BinarySequence $1 ) ) = $1);
A1: (for k being Nat holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
( 0* n ) in ( ( BOOLEAN ) * ) by CKB4:1;
then ( 0* n ) is (FinSequence of ( BOOLEAN )) by FINSEQ_1:def 11;
then reconsider 0n = ( 0* n ) as (Tuple of n,( BOOLEAN ));
let k being Nat;
assume A2: (k < ( 2 to_power n ) implies ( Absval ( n -BinarySequence k ) ) = k);
assume A3: ( k + 1 ) < ( 2 to_power n );
then A4: ( ( k + 1 ) - 1 ) < ( ( 2 to_power n ) - 1 ) by XREAL_1:9;
k < ( 2 to_power n ) by A3,NAT_1:13;
then ( n -BinarySequence k ) <> ( 'not' 0n ) by A4,CKB32:1;
then ( add_ovfl (( n -BinarySequence k ),( Bin1 n )) ) <> ( TRUE ) by CKB23:1;
then ( add_ovfl (( n -BinarySequence k ),( Bin1 n )) ) = ( FALSE ) by XBOOLEAN:def 3;
then A5: ( n -BinarySequence k ),( Bin1 n ) are_summable  by BINARITH:def 7;
thus ( Absval ( n -BinarySequence ( k + 1 ) ) ) = ( Absval ( ( n -BinarySequence k ) + ( Bin1 n ) ) ) by A3,CKB38:1
.= ( ( Absval ( n -BinarySequence k ) ) + ( Absval ( Bin1 n ) ) ) by A5,BINARITH:22
.= ( k + 1 ) by A2,A3,CKB11:1,NAT_1:13;
end;
A6: P[ ( 0 ) ]
proof
assume ( 0 ) < ( 2 to_power n );
( n -BinarySequence ( 0 ) ) = ( 0* n ) by CKB26:1;
hence thesis by CKB6:1;
end;
thus (for n being Nat holds P[ n ]) from NAT_1:sch 2(A6,A1);
end;
