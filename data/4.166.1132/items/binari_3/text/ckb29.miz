environ
vocabularies NUMBERS,XBOOLE_0,NAT_1,FINSEQ_2,MARGREL1,BINARITH,ARYTM_3,POWER,SUBSET_1,ORDINAL4,FINSEQ_1,FUNCOP_1,XBOOLEAN,CARD_1,RELAT_1,REAL_1,FINSEQ_5,EUCLID,XXREAL_0,FUNCT_1,PARTFUN1,ARYTM_1,BINARI_2,ZFMISC_1,INT_1,ABIAN,BINARI_3;
notations XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,REAL_1,XXREAL_0,NAT_1,NAT_D,POWER,ABIAN,SERIES_1,MARGREL1,FUNCT_1,PARTFUN1,FUNCOP_1,FINSEQ_1,FINSEQ_5,FINSEQOP,ZFMISC_1,FINSEQ_2,BINARITH,BINARI_2,EUCLID,CKB25;
definitions FINSEQ_2,EUCLID,XBOOLEAN,CKB25;
theorems TARSKI,NAT_1,NAT_2,MARGREL1,POWER,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSEQ_5,FINSEQ_6,BINARITH,BINARI_2,XREAL_1,XCMPLX_1,XBOOLEAN,NAT_D,PARTFUN1,XXREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes NAT_1,NAT_2,FINSEQ_2;
registrations RELSET_1,XREAL_0,NAT_1,XBOOLEAN,MARGREL1,ZFMISC_1,NAT_2,ORDINAL1,XBOOLE_0,FINSEQ_2,INT_1,CARD_1,FINSEQ_1;
constructors XXREAL_0,NAT_1,NAT_D,FINSEQOP,SERIES_1,ZFMISC_1,BINARITH,FINSEQ_5,BINARI_2,ABIAN,EUCLID,BINOP_2,RELSET_1,CKB25;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Lm1: (for n being non empty Nat holds ( ( n + 1 ) -BinarySequence ( 2 to_power n ) ) = ( ( 0* n ) ^ <* ( TRUE ) *> ))
proof
let n being non empty Nat;
( 0* n ) in ( ( BOOLEAN ) * ) by CKB4:1;
then ( 0* n ) is (FinSequence of ( BOOLEAN )) by FINSEQ_1:def 11;
then reconsider 0n = ( 0* n ) as (Tuple of n,( BOOLEAN ));
now
let i being Nat;
assume A1: i in ( Seg ( n + 1 ) );
now
per cases  by A1,FINSEQ_2:7;
suppose A2: i in ( Seg n );

then A3: i >= 1 by FINSEQ_1:1;
i <= ( n + 1 ) by A1,FINSEQ_1:1;
then ( i - 1 ) <= ( ( n + 1 ) - 1 ) by XREAL_1:9;
then A4: ( i -' 1 ) <= ( ( n + 1 ) - 1 ) by A3,XREAL_1:233;
n = ( ( n - ( i -' 1 ) ) + ( i -' 1 ) )
.= ( ( n -' ( i -' 1 ) ) + ( i -' 1 ) ) by A4,XREAL_1:233;
then A5: ( 2 to_power n ) = ( ( 2 to_power ( n -' ( i -' 1 ) ) ) * ( 2 to_power ( i -' 1 ) ) ) by POWER:27;
i in ( Seg ( len 0n ) ) by A2,CARD_1:def 7;
then A6: i in ( dom 0n ) by FINSEQ_1:def 3;
n >= i by A2,FINSEQ_1:1;
then ( n + 1 ) > i by NAT_1:13;
then n > ( i - 1 ) by XREAL_1:19;
then ( n - ( i - 1 ) ) > ( 0 ) by XREAL_1:50;
then ( n - ( i -' 1 ) ) > ( 0 ) by A3,XREAL_1:233;
then ( n -' ( i -' 1 ) ) > ( 0 ) by A4,XREAL_1:233;
then consider n1 being Nat such that A7: ( n -' ( i -' 1 ) ) = ( n1 + 1 ) by NAT_1:6;
reconsider n1 as Nat;
A8: ( 2 to_power ( n -' ( i -' 1 ) ) ) = ( ( 2 to_power n1 ) * ( 2 to_power 1 ) ) by A7,POWER:27
.= ( ( 2 to_power n1 ) * 2 ) by POWER:25;
( 2 to_power ( i -' 1 ) ) > ( 0 ) by POWER:34;
then A9: ( ( ( 2 to_power n ) div ( 2 to_power ( i -' 1 ) ) ) mod 2 ) = ( ( 2 to_power ( n -' ( i -' 1 ) ) ) mod 2 ) by A5,NAT_D:20
.= ( 0 ) by A8,NAT_D:13;
i in ( Seg ( len ( ( n + 1 ) -BinarySequence ( 2 to_power n ) ) ) ) by A1,CARD_1:def 7;
then i in ( dom ( ( n + 1 ) -BinarySequence ( 2 to_power n ) ) ) by FINSEQ_1:def 3;
hence ( ( ( n + 1 ) -BinarySequence ( 2 to_power n ) ) . i ) = ( ( ( n + 1 ) -BinarySequence ( 2 to_power n ) ) /. i ) by PARTFUN1:def 6
.= ( IFEQ (( ( ( 2 to_power n ) div ( 2 to_power ( i -' 1 ) ) ) mod 2 ),( 0 ),( FALSE ),( TRUE )) ) by A1,CKB25:def 1
.= ( 0 ) by A9,FUNCOP_1:def 8
.= ( 0n . i ) by A2,FUNCOP_1:7
.= ( ( 0n ^ <* ( TRUE ) *> ) . i ) by A6,FINSEQ_1:def 7;
end;
suppose A10: i = ( n + 1 );

A11: ( 2 to_power n ) > ( 0 ) by POWER:34;
( i -' 1 ) = ( ( n + 1 ) - 1 ) by A10,NAT_D:37
.= n;
then A12: ( ( ( 2 to_power n ) div ( 2 to_power ( i -' 1 ) ) ) mod 2 ) = ( 1 mod 2 ) by A11,NAT_2:3
.= 1 by NAT_D:14;
( n + 1 ) in ( Seg ( n + 1 ) ) by FINSEQ_1:4;
then ( n + 1 ) in ( Seg ( len ( ( n + 1 ) -BinarySequence ( 2 to_power n ) ) ) ) by CARD_1:def 7;
then ( n + 1 ) in ( dom ( ( n + 1 ) -BinarySequence ( 2 to_power n ) ) ) by FINSEQ_1:def 3;
hence ( ( ( n + 1 ) -BinarySequence ( 2 to_power n ) ) . i ) = ( ( ( n + 1 ) -BinarySequence ( 2 to_power n ) ) /. i ) by A10,PARTFUN1:def 6
.= ( IFEQ (( ( ( 2 to_power n ) div ( 2 to_power ( i -' 1 ) ) ) mod 2 ),( 0 ),( FALSE ),( TRUE )) ) by A1,CKB25:def 1
.= ( TRUE ) by A12,FUNCOP_1:def 8
.= ( ( 0n ^ <* ( TRUE ) *> ) . i ) by A10,FINSEQ_2:116;
end;
end;
hence ( ( ( n + 1 ) -BinarySequence ( 2 to_power n ) ) . i ) = ( ( 0n ^ <* ( TRUE ) *> ) . i );
end;
hence thesis by FINSEQ_2:119;
end;
