environ
vocabularies NUMBERS,XBOOLE_0,NAT_1,FINSEQ_2,MARGREL1,BINARITH,ARYTM_3,POWER,SUBSET_1,ORDINAL4,FINSEQ_1,FUNCOP_1,XBOOLEAN,CARD_1,RELAT_1,REAL_1,FINSEQ_5,EUCLID,XXREAL_0,FUNCT_1,PARTFUN1,ARYTM_1,BINARI_2,ZFMISC_1,INT_1,ABIAN,BINARI_3;
notations XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,REAL_1,XXREAL_0,NAT_1,NAT_D,POWER,ABIAN,SERIES_1,MARGREL1,FUNCT_1,PARTFUN1,FUNCOP_1,FINSEQ_1,FINSEQ_5,FINSEQOP,ZFMISC_1,FINSEQ_2,BINARITH,BINARI_2,EUCLID,CKB25;
definitions FINSEQ_2,EUCLID,XBOOLEAN,CKB25;
theorems TARSKI,NAT_1,NAT_2,MARGREL1,POWER,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSEQ_5,FINSEQ_6,BINARITH,BINARI_2,XREAL_1,XCMPLX_1,XBOOLEAN,NAT_D,PARTFUN1,XXREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31;
schemes NAT_1,NAT_2,FINSEQ_2;
registrations RELSET_1,XREAL_0,NAT_1,XBOOLEAN,MARGREL1,ZFMISC_1,NAT_2,ORDINAL1,XBOOLE_0,FINSEQ_2,INT_1,CARD_1,FINSEQ_1;
constructors XXREAL_0,NAT_1,NAT_D,FINSEQOP,SERIES_1,ZFMISC_1,BINARITH,FINSEQ_5,BINARI_2,ABIAN,EUCLID,BINOP_2,RELSET_1,CKB25;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Lm4: (for n being non empty Nat holds (for k being Nat holds (k < ( 2 to_power n ) implies (for x being (Tuple of n,( BOOLEAN )) holds (x = ( 0* n ) implies (( n -BinarySequence k ) = ( 'not' x ) iff k = ( ( 2 to_power n ) - 1 )))))))
proof
let n being non empty Nat;
let k being Nat;
assume A1: k < ( 2 to_power n );
let x being (Tuple of n,( BOOLEAN ));
assume A2: x = ( 0* n );
thus (( n -BinarySequence k ) = ( 'not' x ) implies k = ( ( 2 to_power n ) - 1 ))
proof
defpred P[ Nat ]
 means
(for k being Nat holds (k < ( 2 to_power $1 ) implies (for y being (Tuple of $1,( BOOLEAN )) holds (y = ( 0* $1 ) implies (( $1 -BinarySequence k ) = ( 'not' y ) implies k = ( ( 2 to_power $1 ) - 1 ))))));
assume A3: ( n -BinarySequence k ) = ( 'not' x );
A4: (for m being non empty Nat holds (P[ m ] implies P[ ( m + 1 ) ]))
proof
let m being non empty Nat;
assume A5: P[ m ];
A6: ( m + 1 ) in ( Seg ( m + 1 ) ) by FINSEQ_1:4;
( 0 ) <= m by NAT_1:2;
then A7: ( ( 0 ) + 1 ) <= ( m + 1 ) by XREAL_1:6;
( 0* m ) in ( ( BOOLEAN ) * ) by CKB4:1;
then ( 0* m ) is (FinSequence of ( BOOLEAN )) by FINSEQ_1:def 11;
then reconsider y1 = ( 0* m ) as (Tuple of m,( BOOLEAN ));
let k being Nat;
assume A8: k < ( 2 to_power ( m + 1 ) );
let y being (Tuple of ( m + 1 ),( BOOLEAN ));
assume that
A9: y = ( 0* ( m + 1 ) )
and
A10: ( ( m + 1 ) -BinarySequence k ) = ( 'not' y );
A11: ( y . ( m + 1 ) ) = ( FALSE ) by A9,FINSEQ_1:4,FUNCOP_1:7;
A12: y = ( y1 ^ <* ( 0 ) *> ) by A9,FINSEQ_2:60;
A13: ( len y ) = ( m + 1 ) by CARD_1:def 7;
( len ( 'not' y ) ) = ( m + 1 ) by CARD_1:def 7;
then A14: ( ( ( m + 1 ) -BinarySequence k ) . ( m + 1 ) ) = ( ( 'not' y ) /. ( m + 1 ) ) by A10,A7,FINSEQ_4:15
.= ( 'not' ( y /. ( m + 1 ) ) ) by A6,BINARITH:def 1
.= ( 'not' ( FALSE ) ) by A13,A7,A11,FINSEQ_4:15
.= ( TRUE );
then ( ( m + 1 ) -BinarySequence k ) = ( ( m -BinarySequence ( k -' ( 2 to_power m ) ) ) ^ <* ( TRUE ) *> ) by A8,CKB31:1,CKB27:1;
then ( ( m -BinarySequence ( k -' ( 2 to_power m ) ) ) ^ <* ( TRUE ) *> ) = ( ( 'not' y1 ) ^ <* ( 'not' ( FALSE ) ) *> ) by A10,A12,BINARI_2:9;
then A15: ( m -BinarySequence ( k -' ( 2 to_power m ) ) ) = ( 'not' y1 ) by FINSEQ_2:17;
k < ( ( 2 to_power m ) * ( 2 to_power 1 ) ) by A8,POWER:27;
then k < ( 2 * ( 2 to_power m ) ) by POWER:25;
then k < ( ( 2 to_power m ) + ( 2 to_power m ) );
then ( k - ( 2 to_power m ) ) < ( 2 to_power m ) by XREAL_1:19;
then ( k -' ( 2 to_power m ) ) < ( 2 to_power m ) by A14,CKB27:1,XREAL_1:233;
then ( k -' ( 2 to_power m ) ) = ( ( 2 to_power m ) - 1 ) by A5,A15;
then ( k - ( 2 to_power m ) ) = ( ( 2 to_power m ) - 1 ) by A14,CKB27:1,XREAL_1:233;
hence k = ( ( ( 2 to_power m ) * 2 ) - 1 )
.= ( ( ( 2 to_power m ) * ( 2 to_power 1 ) ) - 1 ) by POWER:25
.= ( ( 2 to_power ( m + 1 ) ) - 1 ) by POWER:27;
end;
A16: P[ 1 ]
proof
let k being Nat;
A17: 1 <= ( len ( 1 -BinarySequence k ) ) by CARD_1:def 7;
assume k < ( 2 to_power 1 );
then A18: k < 2 by POWER:25;
let y being (Tuple of 1,( BOOLEAN ));
assume y = ( 0* 1 );
then A19: y = <* ( FALSE ) *> by FINSEQ_2:59;
assume A20: ( 1 -BinarySequence k ) = ( 'not' y );
A21: 1 in ( Seg 1 ) by FINSEQ_1:3;
A22: 1 = ( <* 1 *> . 1 ) by FINSEQ_1:40
.= ( ( 1 -BinarySequence k ) /. 1 ) by A19,A20,A17,CKB14:1,FINSEQ_4:15
.= ( IFEQ (( ( k div ( 2 to_power ( 1 -' 1 ) ) ) mod 2 ),( 0 ),( FALSE ),( TRUE )) ) by A21,CKB25:def 1;
k = 1
proof
assume k <> 1;
then k = ( 0 ) by A18,NAT_1:23;
then ( k div ( 2 to_power ( 1 -' 1 ) ) ) = ( 0 ) by NAT_D:27,POWER:34;
then ( ( k div ( 2 to_power ( 1 -' 1 ) ) ) mod 2 ) = ( 0 ) by NAT_D:26;
hence contradiction by A22,FUNCOP_1:def 8;
end;
hence k = ( ( 1 + 1 ) - 1 )
.= ( ( 2 to_power 1 ) - 1 ) by POWER:25;
end;
(for m being non empty Nat holds P[ m ]) from NAT_1:sch 10(A16,A4);
hence thesis by A1,A2,A3;
end;

assume A23: k = ( ( 2 to_power n ) - 1 );
now
let i being Nat;
A24: ( len x ) = n by CARD_1:def 7;
( 2 to_power ( i -' 1 ) ) > ( 0 ) by POWER:34;
then A25: ( 2 to_power ( i -' 1 ) ) >= ( ( 0 ) + 1 ) by NAT_1:13;
A26: ( len ( 'not' x ) ) = n by CARD_1:def 7;
A27: ( 2 to_power ( n -' ( i -' 1 ) ) ) > ( 0 ) by POWER:34;
then A28: ( 2 to_power ( n -' ( i -' 1 ) ) ) >= ( ( 0 ) + 1 ) by NAT_1:13;
reconsider z = i as Nat;
assume A29: i in ( Seg n );
then A30: 1 <= i by FINSEQ_1:1;
i <= n by A29,FINSEQ_1:1;
then i < ( n + 1 ) by NAT_1:13;
then A31: ( i - 1 ) < ( ( n + 1 ) - 1 ) by XREAL_1:9;
1 <= i by A29,FINSEQ_1:1;
then A32: ( ( 0 ) + ( i -' 1 ) ) < n by A31,XREAL_1:233;
then ( n - ( i -' 1 ) ) > ( 0 ) by XREAL_1:20;
then ( n -' ( i -' 1 ) ) > ( 0 ) by A32,XREAL_1:233;
then A33: ( ( 2 to_power ( n -' ( i -' 1 ) ) ) mod 2 ) = ( 0 ) by NAT_2:17;
( 2 to_power n ) > ( 0 ) by POWER:34;
then A34: ( 2 to_power n ) >= ( ( 0 ) + 1 ) by NAT_1:13;
then ( k div ( 2 to_power ( i -' 1 ) ) ) = ( ( ( 2 to_power n ) -' 1 ) div ( 2 to_power ( i -' 1 ) ) ) by A23,XREAL_1:233
.= ( ( ( 2 to_power n ) div ( 2 to_power ( i -' 1 ) ) ) - 1 ) by A25,A32,A34,NAT_2:11,NAT_2:15
.= ( ( 2 to_power ( n -' ( i -' 1 ) ) ) - 1 ) by A32,NAT_2:16
.= ( ( 2 to_power ( n -' ( i -' 1 ) ) ) -' 1 ) by A28,XREAL_1:233;
then A35: ( ( k div ( 2 to_power ( i -' 1 ) ) ) mod 2 ) = 1 by A33,A27,NAT_2:18;
A36: ( x . i ) = ( FALSE ) by A2,A29,FUNCOP_1:7;
A37: i <= n by A29,FINSEQ_1:1;
i in ( Seg ( len ( n -BinarySequence k ) ) ) by A29,CARD_1:def 7;
then i in ( dom ( n -BinarySequence k ) ) by FINSEQ_1:def 3;
hence ( ( n -BinarySequence k ) . i ) = ( ( n -BinarySequence k ) /. i ) by PARTFUN1:def 6
.= ( IFEQ (( ( k div ( 2 to_power ( i -' 1 ) ) ) mod 2 ),( 0 ),( FALSE ),( TRUE )) ) by A29,CKB25:def 1
.= ( 'not' ( FALSE ) ) by A35,FUNCOP_1:def 8
.= ( 'not' ( x /. z ) ) by A24,A30,A37,A36,FINSEQ_4:15
.= ( ( 'not' x ) /. z ) by A29,BINARITH:def 1
.= ( ( 'not' x ) . i ) by A26,A30,A37,FINSEQ_4:15;
end;
hence thesis by FINSEQ_2:119;
end;
