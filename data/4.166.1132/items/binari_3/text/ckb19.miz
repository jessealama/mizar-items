environ
vocabularies NUMBERS,XBOOLE_0,NAT_1,FINSEQ_2,MARGREL1,BINARITH,ARYTM_3,POWER,SUBSET_1,ORDINAL4,FINSEQ_1,FUNCOP_1,XBOOLEAN,CARD_1,RELAT_1,REAL_1,FINSEQ_5,EUCLID,XXREAL_0,FUNCT_1,PARTFUN1,ARYTM_1,BINARI_2,ZFMISC_1,INT_1,ABIAN,BINARI_3;
notations XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,REAL_1,XXREAL_0,NAT_1,NAT_D,POWER,ABIAN,SERIES_1,MARGREL1,FUNCT_1,PARTFUN1,FUNCOP_1,FINSEQ_1,FINSEQ_5,FINSEQOP,ZFMISC_1,FINSEQ_2,BINARITH,BINARI_2,EUCLID;
definitions FINSEQ_2,EUCLID,XBOOLEAN;
theorems TARSKI,NAT_1,NAT_2,MARGREL1,POWER,FUNCOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_4,FINSEQ_5,FINSEQ_6,BINARITH,BINARI_2,XREAL_1,XCMPLX_1,XBOOLEAN,NAT_D,PARTFUN1,XXREAL_0,CARD_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18;
schemes NAT_1,NAT_2,FINSEQ_2;
registrations RELSET_1,XREAL_0,NAT_1,XBOOLEAN,MARGREL1,ZFMISC_1,NAT_2,ORDINAL1,XBOOLE_0,FINSEQ_2,INT_1,CARD_1,FINSEQ_1;
constructors XXREAL_0,NAT_1,NAT_D,FINSEQOP,SERIES_1,ZFMISC_1,BINARITH,FINSEQ_5,BINARI_2,ABIAN,EUCLID,BINOP_2,RELSET_1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Th20: (for n being non  empty Nat holds (for x,y being (Tuple of n,( BOOLEAN )) holds ((( x /. n ) = ( TRUE ) & ( ( carry (x,( Bin1 n )) ) /. n ) = ( TRUE )) implies (for k being non  empty Nat holds ((k <> 1 & k <= n) implies (( x /. k ) = ( TRUE ) & ( ( carry (x,( Bin1 n )) ) /. k ) = ( TRUE )))))))
proof
let n being non  empty Nat;
let x being (Tuple of n,( BOOLEAN ));
let y being (Tuple of n,( BOOLEAN ));
assume that
A1: ( x /. n ) = ( TRUE )
and
A2: ( ( carry (x,( Bin1 n )) ) /. n ) = ( TRUE );
defpred P[ Nat ]
 means
($1 in ( Seg ( n -' 1 ) ) implies (( x /. ( ( n -' $1 ) + 1 ) ) = ( TRUE ) & ( ( carry (x,( Bin1 n )) ) /. ( ( n -' $1 ) + 1 ) ) = ( TRUE )));
let k being non  empty Nat;
assume that
A3: k <> 1
and
A4: k <= n;
set i = ( ( n -' k ) + 1 );
1 < k by A3,NAT_2:19;
then ( 1 + 1 ) <= k by NAT_1:13;
then A5: 1 <= ( k - 1 ) by XREAL_1:19;
A6: (for j being non  empty Nat holds (P[ j ] implies P[ ( j + 1 ) ]))
proof
let j being non  empty Nat;
assume that
A7: P[ j ]
and
A8: ( j + 1 ) in ( Seg ( n -' 1 ) );
A9: ( j + 1 ) <= ( n -' 1 ) by A8,FINSEQ_1:1;
then A10: j < ( n -' 1 ) by NAT_1:13;
then j < ( n - 1 ) by NAT_1:14,XREAL_1:233;
then ( j + 1 ) < n by XREAL_1:20;
then A11: j < n by NAT_1:13;
( j + 1 ) <= ( n - 1 ) by A9,NAT_1:14,XREAL_1:233;
then 1 <= ( ( n - 1 ) - j ) by XREAL_1:19;
then 1 <= ( ( n - j ) - 1 );
then ( 1 + 1 ) <= ( n - j ) by XREAL_1:19;
then ( 1 + 1 ) <= ( n -' j ) by A11,XREAL_1:233;
then A12: ( n -' j ) > 1 by NAT_1:13;
A13: 1 <= j by NAT_1:14;
A14: ( n -' j ) < n by NAT_2:9;
then ( n -' j ) in ( Seg n ) by A12,FINSEQ_1:1;
then A15: ( ( Bin1 n ) /. ( n -' j ) ) = ( FALSE ) by A12,BINARI_2:6;
then ( ( ( Bin1 n ) /. ( n -' j ) ) '&' ( ( carry (x,( Bin1 n )) ) /. ( n -' j ) ) ) = ( FALSE );
then A16: ( TRUE ) = ( ( ( x /. ( n -' j ) ) '&' ( ( Bin1 n ) /. ( n -' j ) ) ) 'or' ( ( x /. ( n -' j ) ) '&' ( ( carry (x,( Bin1 n )) ) /. ( n -' j ) ) ) ) by A7,A13,A10,A14,A12,A15,BINARITH:def 2,FINSEQ_1:1
.= ( ( x /. ( n -' j ) ) '&' ( ( carry (x,( Bin1 n )) ) /. ( n -' j ) ) ) by A15;
then ( x /. ( n -' j ) ) = ( TRUE ) by MARGREL1:12;
hence ( x /. ( ( n -' ( j + 1 ) ) + 1 ) ) = ( TRUE ) by A11,NAT_2:7;
( ( carry (x,( Bin1 n )) ) /. ( n -' j ) ) = ( TRUE ) by A16,MARGREL1:12;
hence thesis by A11,NAT_2:7;
end;
A17: 1 <= i by NAT_1:11;
i = ( ( n - k ) + 1 ) by A4,XREAL_1:233
.= ( n - ( k - 1 ) );
then A18: i <= ( n - 1 ) by A5,XREAL_1:13;
then ( i + 1 ) <= n by XREAL_1:19;
then i < n by NAT_1:13;
then A19: k = ( ( n -' i ) + 1 ) by A4,NAT_2:5;
i <= ( n -' 1 ) by A18,NAT_1:14,XREAL_1:233;
then A20: i in ( Seg ( n -' 1 ) ) by A17,FINSEQ_1:1;
A21: P[ 1 ] by A1,A2,NAT_1:14,XREAL_1:235;
(for j being non  empty Nat holds P[ j ]) from NAT_1:sch 10(A21,A6);
hence thesis by A19,A20;
end;
