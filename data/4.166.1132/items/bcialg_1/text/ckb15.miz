environ
vocabularies STRUCT_0,BINOP_1,XBOOLE_0,SUBSET_1,FUNCT_1,SUPINF_2,FUNCT_5,ZFMISC_1,UNIALG_2,TARSKI,REALSET1,RELAT_1,XXREAL_0,WAYBEL15,CARD_FIL,RCOMP_1,FILTER_0,BCIALG_1,CARD_1;
notations TARSKI,ZFMISC_1,XBOOLE_0,SUBSET_1,BINOP_1,FUNCT_5,REALSET1,CARD_1,STRUCT_0,RELAT_1,CKB1,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
definitions REALSET1,TARSKI,XBOOLE_0,STRUCT_0,CKB3,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
theorems TARSKI,ZFMISC_1,XBOOLE_0,STRUCT_0,FUNCT_2,RELAT_1,CARD_1,CKB3,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
registrations XBOOLE_0,RELAT_1,STRUCT_0,ZFMISC_1,CARD_1,ORDINAL1,CKB1,CKB2,CKB4,CKB5,CKB14;
constructors BINOP_1,REALSET1,MIDSP_1,FUNCT_5,RELSET_1,CKB1,CKB3,CKB4,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
requirements SUBSET,BOOLE,NUMERALS;
begin
registration
cluster ( BCI-EXAMPLE ) ->  being_B  being_C  being_I  being_BCI-4  being_BCK-5;
coherence
proof
thus ( BCI-EXAMPLE ) is  being_B
proof
let x being (Element of ( BCI-EXAMPLE )),y being (Element of ( BCI-EXAMPLE )),z being (Element of ( BCI-EXAMPLE ));
thus thesis by STRUCT_0:def 10;
end;

thus ( BCI-EXAMPLE ) is  being_C
proof
let x being (Element of ( BCI-EXAMPLE )),y being (Element of ( BCI-EXAMPLE )),z being (Element of ( BCI-EXAMPLE ));
thus thesis by STRUCT_0:def 10;
end;

thus ( BCI-EXAMPLE ) is  being_I
proof
let x being (Element of ( BCI-EXAMPLE ));
thus thesis by STRUCT_0:def 10;
end;

thus ( BCI-EXAMPLE ) is  being_BCI-4
proof
let x being (Element of ( BCI-EXAMPLE )),y being (Element of ( BCI-EXAMPLE ));
thus thesis by STRUCT_0:def 10;
end;

(for x being (Element of ( BCI-EXAMPLE )) holds ( x ` ) = ( 0. ( BCI-EXAMPLE ) )) by STRUCT_0:def 10;
hence thesis by CKB12:def 1;
end;
end;
