environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,SUBSET_1,FINSEQ_2,FINSEQ_1,ORDINAL4,PARTFUN1,RELAT_1,ARYTM_3,CARD_1,MARGREL1,XBOOLEAN,XCMPLX_0,FUNCT_1,XXREAL_0,ARYTM_1,FUNCOP_1,POWER,BINOP_2,SETWISEO,REAL_1,BINARITH;
notations XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,REAL_1,XBOOLEAN,MARGREL1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,BINOP_2,SETWISEO,FUNCOP_1,SETWOP_2,SERIES_1,FINSEQ_1,FINSEQ_2,XXREAL_0,NAT_1,NAT_D,CKB3,CKB4,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB26,CKB27;
definitions FINSEQ_1,TARSKI,XBOOLEAN,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22;
theorems NAT_1,INT_1,FINSEQ_1,FINSEQ_2,FINSEQ_4,FUNCT_1,TARSKI,POWER,FINSOP_1,XBOOLE_0,BINOP_2,XREAL_1,XXREAL_0,XBOOLEAN,FUNCOP_1,PARTFUN1,FINSEQ_3,XREAL_0,NAT_D,CARD_1,CKB1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB28,CKB29,CKB30;
schemes FINSEQ_1,FINSEQ_2,NAT_1;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,BINOP_2,XBOOLEAN,MARGREL1,FINSEQ_2,XBOOLE_0,REAL_1,CARD_1,FINSEQ_1;
constructors BINOP_1,SETWISEO,XXREAL_0,NAT_1,INT_1,BINOP_2,MARGREL1,PARTFUN1,FINSOP_1,SERIES_1,RFINSEQ,SEQ_1,REAL_1,NAT_D,RELSET_1,FINSEQ_2,CKB3,CKB4,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB26,CKB27;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve i for Nat;
reserve n for non zero Nat;
theorem
Th46: (for z being (Tuple of n,( BOOLEAN )) holds (for d being (Element of ( BOOLEAN )) holds ( Absval ( z ^ <* d *> ) ) = ( ( Absval z ) + ( IFEQ (d,( FALSE ),( 0 ),( 2 to_power n )) ) )))
proof
let z being (Tuple of n,( BOOLEAN ));
let d being (Element of ( BOOLEAN ));
(for i holds (i in ( Seg ( n + 1 ) ) implies ( ( ( Binary z ) ^ <* ( IFEQ (d,( FALSE ),( 0 ),( 2 to_power n )) ) *> ) /. i ) = ( IFEQ (( ( z ^ <* d *> ) /. i ),( FALSE ),( 0 ),( 2 to_power ( i -' 1 ) )) )))
proof
A1: ( Seg ( n + 1 ) ) = ( ( Seg n ) \/ {. ( n + 1 ) .} ) by FINSEQ_1:9;
let i;
assume that
A2: i in ( Seg ( n + 1 ) );
per cases  by A2,A1,XBOOLE_0:def 3;
suppose A3: i in ( Seg n );

hence ( ( ( Binary z ) ^ <* ( IFEQ (d,( FALSE ),( 0 ),( 2 to_power n )) ) *> ) /. i ) = ( ( Binary z ) /. i ) by CKB1:1
.= ( IFEQ (( z /. i ),( FALSE ),( 0 ),( 2 to_power ( i -' 1 ) )) ) by A3,CKB18:def 1
.= ( IFEQ (( ( z ^ <* d *> ) /. i ),( FALSE ),( 0 ),( 2 to_power ( i -' 1 ) )) ) by A3,CKB1:1;
end;
suppose i in {. ( n + 1 ) .};

then A4: i = ( n + 1 ) by TARSKI:def 1;
hence ( ( ( Binary z ) ^ <* ( IFEQ (d,( FALSE ),( 0 ),( 2 to_power n )) ) *> ) /. i ) = ( IFEQ (d,( FALSE ),( 0 ),( 2 to_power n )) ) by CKB2:1
.= ( IFEQ (( ( z ^ <* d *> ) /. i ),( FALSE ),( 0 ),( 2 to_power n )) ) by A4,CKB2:1
.= ( IFEQ (( ( z ^ <* d *> ) /. i ),( FALSE ),( 0 ),( 2 to_power ( i -' 1 ) )) ) by A4,NAT_D:34;
end;
end;
hence ( Absval ( z ^ <* d *> ) ) = ( ( addnat ) $$ ( ( Binary z ) ^ <* ( IFEQ (d,( FALSE ),( 0 ),( 2 to_power n )) ) *> ) ) by CKB18:def 1
.= ( ( addnat ) . (( ( addnat ) $$ ( Binary z ) ),( IFEQ (d,( FALSE ),( 0 ),( 2 to_power n )) )) ) by FINSOP_1:4
.= ( ( Absval z ) + ( IFEQ (d,( FALSE ),( 0 ),( 2 to_power n )) ) ) by BINOP_2:def 23;
end;
