environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,SUBSET_1,FINSEQ_2,FINSEQ_1,ORDINAL4,PARTFUN1,RELAT_1,ARYTM_3,CARD_1,MARGREL1,XBOOLEAN,XCMPLX_0,FUNCT_1,XXREAL_0,ARYTM_1,FUNCOP_1,POWER,BINOP_2,SETWISEO,REAL_1,BINARITH;
notations XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,REAL_1,XBOOLEAN,MARGREL1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,BINOP_2,SETWISEO,FUNCOP_1,SETWOP_2,SERIES_1,FINSEQ_1,FINSEQ_2,XXREAL_0,NAT_1,NAT_D,CKB3,CKB4,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB26,CKB27;
definitions FINSEQ_1,TARSKI,XBOOLEAN,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22;
theorems NAT_1,INT_1,FINSEQ_1,FINSEQ_2,FINSEQ_4,FUNCT_1,TARSKI,POWER,FINSOP_1,XBOOLE_0,BINOP_2,XREAL_1,XXREAL_0,XBOOLEAN,FUNCOP_1,PARTFUN1,FINSEQ_3,XREAL_0,NAT_D,CARD_1,CKB1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB28,CKB29,CKB30,CKB31,CKB32;
schemes FINSEQ_1,FINSEQ_2,NAT_1;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,BINOP_2,XBOOLEAN,MARGREL1,FINSEQ_2,XBOOLE_0,REAL_1,CARD_1,FINSEQ_1;
constructors BINOP_1,SETWISEO,XXREAL_0,NAT_1,INT_1,BINOP_2,MARGREL1,PARTFUN1,FINSOP_1,SERIES_1,RFINSEQ,SEQ_1,REAL_1,NAT_D,RELSET_1,FINSEQ_2,CKB3,CKB4,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB26,CKB27;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve n for non  zero Nat;
reserve z1 for (Tuple of n,( BOOLEAN ));
reserve z2 for (Tuple of n,( BOOLEAN ));
theorem
(for z1,z2 being (Tuple of n,( BOOLEAN )) holds (z1,z2 are_summable  implies ( Absval ( z1 + z2 ) ) = ( ( Absval z1 ) + ( Absval z2 ) )))
proof
let z1 being (Tuple of n,( BOOLEAN ));
let z2 being (Tuple of n,( BOOLEAN ));
assume z1,z2 are_summable ;
then ( add_ovfl (z1,z2) ) = ( FALSE ) by CKB22:def 1;
then ( IFEQ (( add_ovfl (z1,z2) ),( FALSE ),( 0 ),( 2 to_power n )) ) = ( 0 ) by FUNCOP_1:def 8;
hence ( Absval ( z1 + z2 ) ) = ( ( Absval ( z1 + z2 ) ) + ( IFEQ (( add_ovfl (z1,z2) ),( FALSE ),( 0 ),( 2 to_power n )) ) )
.= ( ( Absval z1 ) + ( Absval z2 ) ) by CKB32:1;
end;
