environ
vocabularies NUMBERS,NAT_1,XBOOLE_0,SUBSET_1,FINSEQ_2,FINSEQ_1,ORDINAL4,PARTFUN1,RELAT_1,ARYTM_3,CARD_1,MARGREL1,XBOOLEAN,XCMPLX_0,FUNCT_1,XXREAL_0,ARYTM_1,FUNCOP_1,POWER,BINOP_2,SETWISEO,REAL_1,BINARITH;
notations XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,REAL_1,XBOOLEAN,MARGREL1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,BINOP_2,SETWISEO,FUNCOP_1,SETWOP_2,SERIES_1,FINSEQ_1,FINSEQ_2,XXREAL_0,NAT_1,NAT_D,CKB3,CKB4,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB26,CKB27;
definitions FINSEQ_1,TARSKI,XBOOLEAN,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22;
theorems NAT_1,INT_1,FINSEQ_1,FINSEQ_2,FINSEQ_4,FUNCT_1,TARSKI,POWER,FINSOP_1,XBOOLE_0,BINOP_2,XREAL_1,XXREAL_0,XBOOLEAN,FUNCOP_1,PARTFUN1,FINSEQ_3,XREAL_0,NAT_D,CARD_1,CKB1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB28,CKB29,CKB30,CKB31;
schemes FINSEQ_1,FINSEQ_2,NAT_1;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,INT_1,BINOP_2,XBOOLEAN,MARGREL1,FINSEQ_2,XBOOLE_0,REAL_1,CARD_1,FINSEQ_1;
constructors BINOP_1,SETWISEO,XXREAL_0,NAT_1,INT_1,BINOP_2,MARGREL1,PARTFUN1,FINSOP_1,SERIES_1,RFINSEQ,SEQ_1,REAL_1,NAT_D,RELSET_1,FINSEQ_2,CKB3,CKB4,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB26,CKB27;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve i for Nat;
reserve n for non  zero Nat;
reserve z1 for (Tuple of n,( BOOLEAN ));
reserve z2 for (Tuple of n,( BOOLEAN ));
theorem
Th47: (for n holds (for z1,z2 being (Tuple of n,( BOOLEAN )) holds ( ( Absval ( z1 + z2 ) ) + ( IFEQ (( add_ovfl (z1,z2) ),( FALSE ),( 0 ),( 2 to_power n )) ) ) = ( ( Absval z1 ) + ( Absval z2 ) )))
proof
defpred P[ non  zero Nat ]
 means
(for z1,z2 being (Tuple of $1,( BOOLEAN )) holds ( ( Absval ( z1 + z2 ) ) + ( IFEQ (( add_ovfl (z1,z2) ),( FALSE ),( 0 ),( 2 to_power $1 )) ) ) = ( ( Absval z1 ) + ( Absval z2 ) ));
set f = ( FALSE );
set t = ( TRUE );
A1: (for n being non  zero Nat holds (P[ n ] implies P[ ( n + 1 ) ]))
proof
let n;
assume A2: P[ n ];
let z1 being (Tuple of ( n + 1 ),( BOOLEAN ));
let z2 being (Tuple of ( n + 1 ),( BOOLEAN ));
consider t1 being (Element of ( n -tuples_on ( BOOLEAN ) )),d1 being (Element of ( BOOLEAN )) such that A3: z1 = ( t1 ^ <* d1 *> ) by FINSEQ_2:117;
consider t2 being (Element of ( n -tuples_on ( BOOLEAN ) )),d2 being (Element of ( BOOLEAN )) such that A4: z2 = ( t2 ^ <* d2 *> ) by FINSEQ_2:117;
A5: ( IFEQ (( add_ovfl (t1,t2) ),( FALSE ),( 0 ),( 2 to_power n )) ) is (Element of ( NAT ));
A6: (( IFEQ (d1,( FALSE ),( 0 ),( 2 to_power n )) ) is (Element of ( NAT )) & ( IFEQ (d2,( FALSE ),( 0 ),( 2 to_power n )) ) is (Element of ( NAT )));
(( IFEQ (( add_ovfl (z1,z2) ),( FALSE ),( 0 ),( 2 to_power ( n + 1 ) )) ) is (Element of ( NAT )) & ( IFEQ (( ( d1 'xor' d2 ) 'xor' ( add_ovfl (t1,t2) ) ),( FALSE ),( 0 ),( 2 to_power n )) ) is (Element of ( NAT )));
then reconsider C1 = ( IFEQ (( add_ovfl (z1,z2) ),( FALSE ),( 0 ),( 2 to_power ( n + 1 ) )) ),C2 = ( IFEQ (( ( d1 'xor' d2 ) 'xor' ( add_ovfl (t1,t2) ) ),( FALSE ),( 0 ),( 2 to_power n )) ),C3 = ( IFEQ (d1,( FALSE ),( 0 ),( 2 to_power n )) ),C4 = ( IFEQ (d2,( FALSE ),( 0 ),( 2 to_power n )) ),C5 = ( IFEQ (( add_ovfl (t1,t2) ),( FALSE ),( 0 ),( 2 to_power n )) ) as Real by A6,A5;
A7: ( add_ovfl (z1,z2) ) = ( ( ( d1 '&' ( ( t2 ^ <* d2 *> ) /. ( n + 1 ) ) ) 'or' ( ( ( t1 ^ <* d1 *> ) /. ( n + 1 ) ) '&' ( ( carry (( t1 ^ <* d1 *> ),( t2 ^ <* d2 *> )) ) /. ( n + 1 ) ) ) ) 'or' ( ( ( t2 ^ <* d2 *> ) /. ( n + 1 ) ) '&' ( ( carry (( t1 ^ <* d1 *> ),( t2 ^ <* d2 *> )) ) /. ( n + 1 ) ) ) ) by A3,A4,CKB2:1
.= ( ( ( d1 '&' d2 ) 'or' ( ( ( t1 ^ <* d1 *> ) /. ( n + 1 ) ) '&' ( ( carry (( t1 ^ <* d1 *> ),( t2 ^ <* d2 *> )) ) /. ( n + 1 ) ) ) ) 'or' ( ( ( t2 ^ <* d2 *> ) /. ( n + 1 ) ) '&' ( ( carry (( t1 ^ <* d1 *> ),( t2 ^ <* d2 *> )) ) /. ( n + 1 ) ) ) ) by CKB2:1
.= ( ( ( d1 '&' d2 ) 'or' ( d1 '&' ( ( carry (( t1 ^ <* d1 *> ),( t2 ^ <* d2 *> )) ) /. ( n + 1 ) ) ) ) 'or' ( ( ( t2 ^ <* d2 *> ) /. ( n + 1 ) ) '&' ( ( carry (( t1 ^ <* d1 *> ),( t2 ^ <* d2 *> )) ) /. ( n + 1 ) ) ) ) by CKB2:1
.= ( ( ( d1 '&' d2 ) 'or' ( d1 '&' ( ( carry (( t1 ^ <* d1 *> ),( t2 ^ <* d2 *> )) ) /. ( n + 1 ) ) ) ) 'or' ( d2 '&' ( ( carry (( t1 ^ <* d1 *> ),( t2 ^ <* d2 *> )) ) /. ( n + 1 ) ) ) ) by CKB2:1
.= ( ( ( d1 '&' d2 ) 'or' ( d1 '&' ( add_ovfl (t1,t2) ) ) ) 'or' ( d2 '&' ( ( carry (( t1 ^ <* d1 *> ),( t2 ^ <* d2 *> )) ) /. ( n + 1 ) ) ) ) by CKB29:1
.= ( ( ( d1 '&' d2 ) 'or' ( d1 '&' ( add_ovfl (t1,t2) ) ) ) 'or' ( d2 '&' ( add_ovfl (t1,t2) ) ) ) by CKB29:1;
A8: ( C2 + C1 ) = ( ( C5 + C3 ) + C4 )
proof
now
per cases ;
suppose A9: d1 = f;

then A10: C3 = ( 0 ) by FUNCOP_1:def 8;
now
per cases ;
suppose A11: d2 = f;

then C4 = ( 0 ) by FUNCOP_1:def 8;
hence thesis by A7,A9,A11,FUNCOP_1:def 8;
end;
suppose A12: d2 <> f;

then A13: C4 = ( 2 to_power n ) by FUNCOP_1:def 8;
now
per cases ;
suppose A14: ( add_ovfl (t1,t2) ) = f;

then C5 = ( 0 ) by FUNCOP_1:def 8;
hence thesis by A7,A9,A14,FUNCOP_1:def 8;
end;
suppose A15: ( add_ovfl (t1,t2) ) <> f;

( ( d1 'xor' d2 ) 'xor' ( add_ovfl (t1,t2) ) ) = ( t 'xor' ( add_ovfl (t1,t2) ) ) by A9,A12,XBOOLEAN:def 3
.= f by A15,XBOOLEAN:def 3;
then A16: C2 = ( 0 ) by FUNCOP_1:def 8;
A17: C5 = ( 2 to_power n ) by A15,FUNCOP_1:def 8;
( ( ( d1 '&' d2 ) 'or' ( d1 '&' ( add_ovfl (t1,t2) ) ) ) 'or' ( d2 '&' ( add_ovfl (t1,t2) ) ) ) = ( ( f 'or' f ) 'or' ( t '&' ( add_ovfl (t1,t2) ) ) ) by A9,A12,XBOOLEAN:def 3
.= t by A15,XBOOLEAN:def 3;
then C1 = ( 2 to_power ( n + 1 ) ) by A7,FUNCOP_1:def 8;
hence ( C2 + C1 ) = ( ( 2 to_power n ) * ( 2 to_power 1 ) ) by A16,POWER:27
.= ( 2 * ( 2 to_power n ) ) by POWER:25
.= ( ( C5 + C3 ) + C4 ) by A10,A13,A17;
end;
end;
hence thesis;
end;
end;
hence thesis;
end;
suppose A18: d1 <> f;

then A19: C3 = ( 2 to_power n ) by FUNCOP_1:def 8;
now
per cases ;
suppose A20: d2 = f;

then A21: C4 = ( 0 ) by FUNCOP_1:def 8;
now
per cases ;
suppose ( add_ovfl (t1,t2) ) = f;

hence thesis by A7,A20,A21,FUNCOP_1:def 8;
end;
suppose A22: ( add_ovfl (t1,t2) ) <> f;

( ( d1 'xor' d2 ) 'xor' ( add_ovfl (t1,t2) ) ) = ( t 'xor' ( add_ovfl (t1,t2) ) ) by A18,A20,XBOOLEAN:def 3
.= f by A22,XBOOLEAN:def 3;
then A23: C2 = ( 0 ) by FUNCOP_1:def 8;
A24: C5 = ( 2 to_power n ) by A22,FUNCOP_1:def 8;
( ( ( d1 '&' d2 ) 'or' ( d1 '&' ( add_ovfl (t1,t2) ) ) ) 'or' ( d2 '&' ( add_ovfl (t1,t2) ) ) ) = ( ( f 'or' ( t '&' ( add_ovfl (t1,t2) ) ) ) 'or' ( d2 '&' ( add_ovfl (t1,t2) ) ) ) by A18,A20,XBOOLEAN:def 3
.= ( ( f 'or' ( t '&' t ) ) 'or' ( d2 '&' ( add_ovfl (t1,t2) ) ) ) by A22,XBOOLEAN:def 3
.= t;
then C1 = ( 2 to_power ( n + 1 ) ) by A7,FUNCOP_1:def 8;
hence ( C2 + C1 ) = ( ( 2 to_power n ) * ( 2 to_power 1 ) ) by A23,POWER:27
.= ( 2 * ( 2 to_power n ) ) by POWER:25
.= ( ( C5 + C3 ) + C4 ) by A19,A21,A24;
end;
end;
hence thesis;
end;
suppose A25: d2 <> f;

then A26: C4 = ( 2 to_power n ) by FUNCOP_1:def 8;
now
per cases ;
suppose A27: ( add_ovfl (t1,t2) ) = f;

( ( d1 'xor' d2 ) 'xor' ( add_ovfl (t1,t2) ) ) = ( ( t 'xor' d2 ) 'xor' ( add_ovfl (t1,t2) ) ) by A18,XBOOLEAN:def 3
.= f by A25,A27,XBOOLEAN:def 3;
then A28: C2 = ( 0 ) by FUNCOP_1:def 8;
A29: C5 = ( 0 ) by A27,FUNCOP_1:def 8;
( ( ( d1 '&' d2 ) 'or' ( d1 '&' ( add_ovfl (t1,t2) ) ) ) 'or' ( d2 '&' ( add_ovfl (t1,t2) ) ) ) = ( ( ( t '&' d2 ) 'or' ( d1 '&' ( add_ovfl (t1,t2) ) ) ) 'or' ( d2 '&' ( add_ovfl (t1,t2) ) ) ) by A18,XBOOLEAN:def 3
.= ( ( ( t '&' t ) 'or' ( d1 '&' ( add_ovfl (t1,t2) ) ) ) 'or' ( d2 '&' ( add_ovfl (t1,t2) ) ) ) by A25,XBOOLEAN:def 3
.= t;
then C1 = ( 2 to_power ( n + 1 ) ) by A7,FUNCOP_1:def 8;
hence ( C2 + C1 ) = ( ( 2 to_power n ) * ( 2 to_power 1 ) ) by A28,POWER:27
.= ( 2 * ( 2 to_power n ) ) by POWER:25
.= ( ( C5 + C3 ) + C4 ) by A19,A26,A29;
end;
suppose A30: ( add_ovfl (t1,t2) ) <> f;

( ( d1 'xor' d2 ) 'xor' ( add_ovfl (t1,t2) ) ) = ( ( t 'xor' d2 ) 'xor' ( add_ovfl (t1,t2) ) ) by A18,XBOOLEAN:def 3
.= ( f 'xor' ( add_ovfl (t1,t2) ) ) by A25,XBOOLEAN:def 3
.= t by A30,XBOOLEAN:def 3;
then A31: C2 = ( 2 to_power n ) by FUNCOP_1:def 8;
( ( ( d1 '&' d2 ) 'or' ( d1 '&' ( add_ovfl (t1,t2) ) ) ) 'or' ( d2 '&' ( add_ovfl (t1,t2) ) ) ) = ( ( ( t '&' d2 ) 'or' ( d1 '&' ( add_ovfl (t1,t2) ) ) ) 'or' ( d2 '&' ( add_ovfl (t1,t2) ) ) ) by A18,XBOOLEAN:def 3
.= ( ( ( t '&' t ) 'or' ( d1 '&' ( add_ovfl (t1,t2) ) ) ) 'or' ( d2 '&' ( add_ovfl (t1,t2) ) ) ) by A25,XBOOLEAN:def 3
.= t;
then C1 = ( 2 to_power ( n + 1 ) ) by A7,FUNCOP_1:def 8;
hence ( C2 + C1 ) = ( ( 2 to_power n ) + ( ( 2 to_power n ) * ( 2 to_power 1 ) ) ) by A31,POWER:27
.= ( ( 2 to_power n ) + ( 2 * ( 2 to_power n ) ) ) by POWER:25
.= ( ( ( 2 to_power n ) + ( 2 to_power n ) ) + ( 2 to_power n ) )
.= ( ( C5 + C3 ) + C4 ) by A19,A26,A30,FUNCOP_1:def 8;
end;
end;
hence thesis;
end;
end;
hence thesis;
end;
end;
hence thesis;
end;
thus ( ( Absval ( z1 + z2 ) ) + ( IFEQ (( add_ovfl (z1,z2) ),( FALSE ),( 0 ),( 2 to_power ( n + 1 ) )) ) ) = ( ( Absval ( ( t1 + t2 ) ^ <* ( ( d1 'xor' d2 ) 'xor' ( add_ovfl (t1,t2) ) ) *> ) ) + ( IFEQ (( add_ovfl (z1,z2) ),( FALSE ),( 0 ),( 2 to_power ( n + 1 ) )) ) ) by A3,A4,CKB30:1
.= ( ( ( Absval ( t1 + t2 ) ) + C2 ) + C1 ) by CKB31:1
.= ( ( ( ( Absval ( t1 + t2 ) ) + C5 ) + C3 ) + C4 ) by A8
.= ( ( ( ( Absval t1 ) + ( Absval t2 ) ) + C3 ) + C4 ) by A2
.= ( ( ( Absval t1 ) + C3 ) + ( ( Absval t2 ) + C4 ) )
.= ( ( ( Absval t1 ) + ( IFEQ (d1,( FALSE ),( 0 ),( 2 to_power n )) ) ) + ( Absval ( t2 ^ <* d2 *> ) ) ) by CKB31:1
.= ( ( Absval z1 ) + ( Absval z2 ) ) by A3,A4,CKB31:1;
end;
A32: P[ 1 ]
proof
reconsider T = <* t *>,F = <* f *> as (Tuple of 1,( BOOLEAN ));
let z1 being (Tuple of 1,( BOOLEAN ));
let z2 being (Tuple of 1,( BOOLEAN ));
A33: ( ( carry (z1,z2) ) /. 1 ) = f by CKB17:def 1;
A34: ( Absval T ) = 1 by CKB25:1;
A35: ( Absval F ) = ( 0 ) by CKB24:1;
per cases  by CKB23:1;
suppose A36: (z1 = <* f *> & z2 = <* f *>);

A37:now
let i;
assume A38: i in ( Seg 1 );
then A39: i = 1 by FINSEQ_1:2,TARSKI:def 1;
thus ( F /. i ) = ( ( ( z1 /. 1 ) 'xor' f ) 'xor' f ) by A36,A38,FINSEQ_1:2,TARSKI:def 1
.= ( ( ( z1 /. 1 ) 'xor' ( z2 /. 1 ) ) 'xor' f ) by A36,FINSEQ_4:16
.= ( ( ( z1 /. i ) 'xor' ( z2 /. i ) ) 'xor' ( ( carry (z1,z2) ) /. i ) ) by A39,CKB17:def 1;
end;
( add_ovfl (z1,z2) ) = f by A33,A36,FINSEQ_4:16;
then ( IFEQ (( add_ovfl (z1,z2) ),( FALSE ),( 0 ),( 2 to_power 1 )) ) = ( 0 ) by FUNCOP_1:def 8;
hence thesis by A35,A36,A37,CKB20:def 1;
end;
suppose A40: (z1 = <* t *> & z2 = <* f *>);

A41:now
let i;
assume A42: i in ( Seg 1 );
then A43: i = 1 by FINSEQ_1:2,TARSKI:def 1;
thus ( T /. i ) = ( ( ( z1 /. 1 ) 'xor' f ) 'xor' f ) by A40,A42,FINSEQ_1:2,TARSKI:def 1
.= ( ( ( z1 /. 1 ) 'xor' ( z2 /. 1 ) ) 'xor' f ) by A40,FINSEQ_4:16
.= ( ( ( z1 /. i ) 'xor' ( z2 /. i ) ) 'xor' ( ( carry (z1,z2) ) /. i ) ) by A43,CKB17:def 1;
end;
( add_ovfl (z1,z2) ) = f by A33,A40,FINSEQ_4:16;
then ( IFEQ (( add_ovfl (z1,z2) ),( FALSE ),( 0 ),( 2 to_power 1 )) ) = ( 0 ) by FUNCOP_1:def 8;
hence thesis by A35,A40,A41,CKB20:def 1;
end;
suppose A44: (z1 = <* f *> & z2 = <* t *>);

A45:now
let i;
assume i in ( Seg 1 );
then A46: i = 1 by FINSEQ_1:2,TARSKI:def 1;
hence ( T /. i ) = ( ( ( 'not' t ) 'xor' t ) 'xor' f ) by FINSEQ_4:16
.= ( ( ( z1 /. 1 ) 'xor' t ) 'xor' f ) by A44,FINSEQ_4:16
.= ( ( ( z1 /. 1 ) 'xor' ( z2 /. 1 ) ) 'xor' f ) by A44,FINSEQ_4:16
.= ( ( ( z1 /. i ) 'xor' ( z2 /. i ) ) 'xor' ( ( carry (z1,z2) ) /. i ) ) by A46,CKB17:def 1;
end;
( add_ovfl (z1,z2) ) = f by A33,A44,FINSEQ_4:16;
then ( IFEQ (( add_ovfl (z1,z2) ),( FALSE ),( 0 ),( 2 to_power 1 )) ) = ( 0 ) by FUNCOP_1:def 8;
hence thesis by A35,A44,A45,CKB20:def 1;
end;
suppose A47: (z1 = <* t *> & z2 = <* t *>);

now
let i;
assume i in ( Seg 1 );
then A48: i = 1 by FINSEQ_1:2,TARSKI:def 1;
hence ( F /. i ) = ( ( t 'xor' t ) 'xor' ( 'not' t ) ) by FINSEQ_4:16
.= ( ( ( z1 /. 1 ) 'xor' t ) 'xor' f ) by A47,FINSEQ_4:16
.= ( ( ( z1 /. 1 ) 'xor' ( z2 /. 1 ) ) 'xor' f ) by A47,FINSEQ_4:16
.= ( ( ( z1 /. i ) 'xor' ( z2 /. i ) ) 'xor' ( ( carry (z1,z2) ) /. i ) ) by A48,CKB17:def 1;
end;
then A49: ( z1 + z2 ) = <* f *> by CKB20:def 1;
( add_ovfl (z1,z2) ) = t by A33,A47,FINSEQ_4:16;
then ( IFEQ (( add_ovfl (z1,z2) ),( FALSE ),( 0 ),( 2 to_power 1 )) ) = ( 2 to_power 1 ) by FUNCOP_1:def 8
.= 2 by POWER:25;
hence thesis by A34,A35,A47,A49;
end;
end;
thus (for n being non  zero Nat holds P[ n ]) from NAT_1:sch 10(A32,A1);
end;
