environ
vocabularies CIRCCOMB,STRUCT_0,XBOOLE_0,MSUALG_1,GFACIRC1,FUNCT_4,LATTICES,CIRCUIT1,MSAFREE2,FINSEQ_1,TWOSCOMP,PARTFUN1,RELAT_1,MCART_1,FACIRC_1,SUBSET_1,FSM_1,MARGREL1,FUNCT_1,CIRCUIT2,XBOOLEAN,ARYTM_3,FTACELL1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,NAT_1,MCART_1,RELAT_1,STRUCT_0,FUNCT_1,PARTFUN1,FINSEQ_1,MARGREL1,BINARITH,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,GFACIRC1,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28,CKB37,CKB38,CKB39,CKB40;
definitions FACIRC_1,GFACIRC1,XBOOLEAN,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28,CKB37,CKB38,CKB39,CKB40;
theorems XBOOLE_0,XBOOLE_1,ZFMISC_1,ENUMSET1,MCART_1,FUNCT_1,FINSEQ_2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,CIRCCMB2,GFACIRC1,XBOOLEAN,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49;
registrations RELAT_1,MARGREL1,CARD_3,CIRCCOMB,FACIRC_1,ORDINAL1,FINSEQ_1,FUNCT_1;
constructors ENUMSET1,BINARITH,CIRCUIT1,CIRCUIT2,FACIRC_1,TWOSCOMP,NAT_1,GFACIRC1,RELSET_1,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28,CKB37,CKB38,CKB39,CKB40;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Lm20: (for ap,bm,cp,dm being non pair set holds (for cin being set holds ((cin <> [ <* dm,( GFA1AdderOutput (ap,bm,cp) ) *>,( and2b ) ] & (not cin in ( InnerVertices ( BitGFA1Str (ap,bm,cp) ) ))) implies (for s being (State of ( BitFTA1Circ (ap,bm,cp,dm,cin) )) holds (for a1,a2,a3,a4,a5 being (Element of ( BOOLEAN )) holds (((((a1 = ( s . ap ) & a2 = ( s . bm )) & a3 = ( s . cp )) & a4 = ( s . dm )) & a5 = ( s . cin )) implies (((((( ( Following (s,4) ) . ( GFA2AdderOutput (( GFA1AdderOutput (ap,bm,cp) ),cin,dm) ) ) = ( ( ( ( a1 'xor' ( 'not' a2 ) ) 'xor' a3 ) 'xor' ( 'not' a4 ) ) 'xor' a5 ) & ( ( Following (s,4) ) . ap ) = a1) & ( ( Following (s,4) ) . bm ) = a2) & ( ( Following (s,4) ) . cp ) = a3) & ( ( Following (s,4) ) . dm ) = a4) & ( ( Following (s,4) ) . cin ) = a5)))))))
proof
let ap being non pair set,bm being non pair set,cp being non pair set,dm being non pair set;
let cin being set;
assume that
A1: (cin <> [ <* dm,( GFA1AdderOutput (ap,bm,cp) ) *>,( and2b ) ] & (not cin in ( InnerVertices ( BitGFA1Str (ap,bm,cp) ) )));
set S = ( BitFTA1Str (ap,bm,cp,dm,cin) );
A2: (ap in ( InputVertices S ) & bm in ( InputVertices S )) by A1,CKB36:1;
A3: (cp in ( InputVertices S ) & dm in ( InputVertices S )) by A1,CKB36:1;
let s being (State of ( BitFTA1Circ (ap,bm,cp,dm,cin) ));
let a1 being (Element of ( BOOLEAN )),a2 being (Element of ( BOOLEAN )),a3 being (Element of ( BOOLEAN )),a4 being (Element of ( BOOLEAN )),a5 being (Element of ( BOOLEAN ));
assume that
A4: ((((a1 = ( s . ap ) & a2 = ( s . bm )) & a3 = ( s . cp )) & a4 = ( s . dm )) & a5 = ( s . cin ));
A5: (( ( Following (s,3) ) . cp ) = a3 & ( ( Following (s,3) ) . dm ) = a4) by A1,A4,CKB46:1;
set A1 = ( GFA1AdderOutput (ap,bm,cp) );
set A2 = ( GFA2AdderOutput (A1,cin,dm) );
set A1cin = [ <* A1,cin *>,( xor2c ) ];
A6: ( Following (s,( 3 + 1 )) ) = ( Following ( Following (s,3) ) ) by FACIRC_1:12;
(( ( Following (s,3) ) . A1cin ) = ( ( 'not' ( ( a1 'xor' ( 'not' a2 ) ) 'xor' a3 ) ) 'xor' ( 'not' a5 ) ) & ( ( Following (s,3) ) . dm ) = a4) by A1,A4,CKB46:1;
hence ( ( Following (s,4) ) . A2 ) = ( ( ( ( a1 'xor' ( 'not' a2 ) ) 'xor' a3 ) 'xor' a5 ) 'xor' ( 'not' a4 ) ) by A6,CKB48:1
.= ( ( ( ( a1 'xor' ( 'not' a2 ) ) 'xor' a3 ) 'xor' ( 'not' a4 ) ) 'xor' a5 ) by XBOOLEAN:73;
A7: ( ( Following (s,3) ) . cin ) = a5 by A1,A4,CKB46:1;
A8: cin in ( InputVertices S ) by A1,CKB36:1;
(( ( Following (s,3) ) . ap ) = a1 & ( ( Following (s,3) ) . bm ) = a2) by A1,A4,CKB46:1;
hence thesis by A6,A2,A3,A8,A5,A7,CIRCUIT2:def 5;
end;
