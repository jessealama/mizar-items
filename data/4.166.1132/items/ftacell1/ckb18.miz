environ
vocabularies CIRCCOMB,STRUCT_0,XBOOLE_0,MSUALG_1,GFACIRC1,FUNCT_4,LATTICES,CIRCUIT1,MSAFREE2,FINSEQ_1,TWOSCOMP,PARTFUN1,RELAT_1,MCART_1,FACIRC_1,SUBSET_1,FSM_1,MARGREL1,FUNCT_1,CIRCUIT2,XBOOLEAN,ARYTM_3,FTACELL1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,NAT_1,MCART_1,RELAT_1,STRUCT_0,FUNCT_1,PARTFUN1,FINSEQ_1,MARGREL1,BINARITH,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,GFACIRC1,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14;
definitions FACIRC_1,GFACIRC1,XBOOLEAN,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14;
theorems XBOOLE_0,XBOOLE_1,ZFMISC_1,ENUMSET1,MCART_1,FUNCT_1,FINSEQ_2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,CIRCCMB2,GFACIRC1,XBOOLEAN,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
registrations RELAT_1,MARGREL1,CARD_3,CIRCCOMB,FACIRC_1,ORDINAL1,FINSEQ_1,FUNCT_1;
constructors ENUMSET1,BINARITH,CIRCUIT1,CIRCUIT2,FACIRC_1,TWOSCOMP,NAT_1,GFACIRC1,RELSET_1,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Lm4: (for ap,bp,cp,dp being non pair set holds (for cin being set holds (for s being (State of ( BitFTA0Circ (ap,bp,cp,dp,cin) )) holds (for a123,a5 being (Element of ( BOOLEAN )) holds ((a123 = ( s . ( GFA0AdderOutput (ap,bp,cp) ) ) & a5 = ( s . cin )) implies ( ( Following s ) . [ <* ( GFA0AdderOutput (ap,bp,cp) ),cin *>,( xor2 ) ] ) = ( a123 'xor' a5 ))))))
proof
let ap being non pair set,bp being non pair set,cp being non pair set,dp being non pair set;
let cin being set;
set S = ( BitFTA0Str (ap,bp,cp,dp,cin) );
set C = ( BitFTA0Circ (ap,bp,cp,dp,cin) );
set A1 = ( GFA0AdderOutput (ap,bp,cp) );
set A1cin = [ <* A1,cin *>,( xor2 ) ];
let s being (State of C);
let a123 being (Element of ( BOOLEAN )),a5 being (Element of ( BOOLEAN ));
assume that
A1: (a123 = ( s . A1 ) & a5 = ( s . cin ));
A2: ( dom s ) = (the carrier of S) by CIRCUIT1:3;
A3: (A1 in (the carrier of S) & cin in (the carrier of S)) by CKB8:1;
( InnerVertices S ) = (the carrier' of S) by FACIRC_1:37;
then A1cin in (the carrier' of S) by CKB9:1;
hence ( ( Following s ) . A1cin ) = ( ( xor2 ) . ( s * <* A1,cin *> ) ) by FACIRC_1:35
.= ( ( xor2 ) . <* a123,a5 *> ) by A1,A3,A2,FINSEQ_2:125
.= ( a123 'xor' a5 ) by TWOSCOMP:def 13;
end;
