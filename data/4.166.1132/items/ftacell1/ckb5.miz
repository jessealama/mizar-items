environ
vocabularies CIRCCOMB,STRUCT_0,XBOOLE_0,MSUALG_1,GFACIRC1,FUNCT_4,LATTICES,CIRCUIT1,MSAFREE2,FINSEQ_1,TWOSCOMP,PARTFUN1,RELAT_1,MCART_1,FACIRC_1,SUBSET_1,FSM_1,MARGREL1,FUNCT_1,CIRCUIT2,XBOOLEAN,ARYTM_3,FTACELL1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,NAT_1,MCART_1,RELAT_1,STRUCT_0,FUNCT_1,PARTFUN1,FINSEQ_1,MARGREL1,BINARITH,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,GFACIRC1,CKB1,CKB2;
definitions FACIRC_1,GFACIRC1,XBOOLEAN,CKB1,CKB2;
theorems XBOOLE_0,XBOOLE_1,ZFMISC_1,ENUMSET1,MCART_1,FUNCT_1,FINSEQ_2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,CIRCCMB2,GFACIRC1,XBOOLEAN,CKB1,CKB2,CKB3,CKB4;
registrations RELAT_1,MARGREL1,CARD_3,CIRCCOMB,FACIRC_1,ORDINAL1,FINSEQ_1,FUNCT_1;
constructors ENUMSET1,BINARITH,CIRCUIT1,CIRCUIT2,FACIRC_1,TWOSCOMP,NAT_1,GFACIRC1,RELSET_1,CKB1,CKB2;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Lm1: (for x,y,z being set holds (for p being set holds ( GFA0AdderOutput (x,y,z) ) <> [ p,( and2 ) ]))
proof
let x being set,y being set,z being set;
let p being set;
set A1 = ( GFA0AdderOutput (x,y,z) );
now
assume ( [ p,( and2 ) ] `2 ) = ( A1 `2 );
then A1: ( [ p,( and2 ) ] `2 ) = ( xor2 ) by MCART_1:7;
( [ p,( and2 ) ] `2 ) = ( and2 ) by MCART_1:7;
hence contradiction by A1,TWOSCOMP:9,TWOSCOMP:11;
end;
hence thesis;
end;
