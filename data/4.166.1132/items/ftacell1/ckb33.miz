environ
vocabularies CIRCCOMB,STRUCT_0,XBOOLE_0,MSUALG_1,GFACIRC1,FUNCT_4,LATTICES,CIRCUIT1,MSAFREE2,FINSEQ_1,TWOSCOMP,PARTFUN1,RELAT_1,MCART_1,FACIRC_1,SUBSET_1,FSM_1,MARGREL1,FUNCT_1,CIRCUIT2,XBOOLEAN,ARYTM_3,FTACELL1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,NAT_1,MCART_1,RELAT_1,STRUCT_0,FUNCT_1,PARTFUN1,FINSEQ_1,MARGREL1,BINARITH,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,GFACIRC1,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28;
definitions FACIRC_1,GFACIRC1,XBOOLEAN,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28;
theorems XBOOLE_0,XBOOLE_1,ZFMISC_1,ENUMSET1,MCART_1,FUNCT_1,FINSEQ_2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,CIRCCMB2,GFACIRC1,XBOOLEAN,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32;
registrations RELAT_1,MARGREL1,CARD_3,CIRCCOMB,FACIRC_1,ORDINAL1,FINSEQ_1,FUNCT_1;
constructors ENUMSET1,BINARITH,CIRCUIT1,CIRCUIT2,FACIRC_1,TWOSCOMP,NAT_1,GFACIRC1,RELSET_1,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th13: (for ap,bm,cp,dm being non pair set holds (for cin being set holds ((cin <> [ <* dm,( GFA1AdderOutput (ap,bm,cp) ) *>,( and2b ) ] & (not cin in ( InnerVertices ( BitGFA1Str (ap,bm,cp) ) ))) implies ( InputVertices ( BitFTA1Str (ap,bm,cp,dm,cin) ) ) = { ap,bm,cp,dm,cin })))
proof
let ap being non pair set,bm being non pair set,cp being non pair set,dm being non pair set;
let cin being set;
set S = ( BitFTA1Str (ap,bm,cp,dm,cin) );
set S1 = ( BitGFA1Str (ap,bm,cp) );
set A1 = ( GFA1AdderOutput (ap,bm,cp) );
set C1 = ( GFA1CarryOutput (ap,bm,cp) );
set S2 = ( BitGFA2Str (A1,cin,dm) );
set apbm0 = [ <* ap,bm *>,( xor2c ) ];
set apbm = [ <* ap,bm *>,( and2c ) ];
set bmcp = [ <* bm,cp *>,( and2a ) ];
set cpap = [ <* cp,ap *>,( and2 ) ];
set dmA1 = [ <* dm,A1 *>,( and2b ) ];
assume that
A1: cin <> dmA1
and
A2: (not cin in ( InnerVertices S1 ));
A3: (not dm in { A1,apbm0,apbm,bmcp,cpap,C1 }) by ENUMSET1:def 4;
A1 in { A1,apbm0,apbm,bmcp,cpap,C1 } by ENUMSET1:def 4;
then A4: ( { A1 } \ { A1,apbm0,apbm,bmcp,cpap,C1 } ) = ( {} ) by ZFMISC_1:60;
A5: ( InnerVertices S1 ) = ( ( ( { apbm0 } \/ { A1 } ) \/ { apbm,bmcp,cpap } ) \/ { C1 } ) by GFACIRC1:63
.= ( ( { apbm0,A1 } \/ { apbm,bmcp,cpap } ) \/ { C1 } ) by ENUMSET1:1
.= ( { apbm0,A1 } \/ ( { apbm,bmcp,cpap } \/ { C1 } ) ) by XBOOLE_1:4
.= ( { A1,apbm0 } \/ { apbm,bmcp,cpap,C1 } ) by ENUMSET1:6
.= { A1,apbm0,apbm,bmcp,cpap,C1 } by ENUMSET1:12;
then A6: ( { A1,cin,dm } \ ( InnerVertices S1 ) ) = ( ( { A1 } \/ { cin,dm } ) \ { A1,apbm0,apbm,bmcp,cpap,C1 } ) by ENUMSET1:2
.= ( ( { A1 } \ { A1,apbm0,apbm,bmcp,cpap,C1 } ) \/ ( { cin,dm } \ { A1,apbm0,apbm,bmcp,cpap,C1 } ) ) by XBOOLE_1:42
.= ( ( { cin } \/ { dm } ) \ { A1,apbm0,apbm,bmcp,cpap,C1 } ) by A4,ENUMSET1:1
.= ( ( { cin } \ { A1,apbm0,apbm,bmcp,cpap,C1 } ) \/ ( { dm } \ { A1,apbm0,apbm,bmcp,cpap,C1 } ) ) by XBOOLE_1:42
.= ( { cin } \/ ( { dm } \ { A1,apbm0,apbm,bmcp,cpap,C1 } ) ) by A2,A5,ZFMISC_1:59
.= ( { cin } \/ { dm } ) by A3,ZFMISC_1:59
.= { cin,dm } by ENUMSET1:1;
(( InnerVertices S2 ) misses ( InputVertices S1 ) & S1 tolerates S2) by CKB32:1,CIRCCOMB:47;
hence ( InputVertices S ) = ( ( InputVertices S1 ) \/ ( ( InputVertices S2 ) \ ( InnerVertices S1 ) ) ) by FACIRC_1:4
.= ( { ap,bm,cp } \/ ( ( InputVertices S2 ) \ ( InnerVertices S1 ) ) ) by GFACIRC1:66
.= ( { ap,bm,cp } \/ ( { A1,cin,dm } \ ( InnerVertices S1 ) ) ) by A1,CKB31:1,GFACIRC1:97
.= { ap,bm,cp,dm,cin } by A6,ENUMSET1:9;
end;
