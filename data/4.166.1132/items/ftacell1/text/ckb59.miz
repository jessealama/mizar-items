environ
vocabularies CIRCCOMB,STRUCT_0,XBOOLE_0,MSUALG_1,GFACIRC1,FUNCT_4,LATTICES,CIRCUIT1,MSAFREE2,FINSEQ_1,TWOSCOMP,PARTFUN1,RELAT_1,MCART_1,FACIRC_1,SUBSET_1,FSM_1,MARGREL1,FUNCT_1,CIRCUIT2,XBOOLEAN,ARYTM_3,FTACELL1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,NAT_1,MCART_1,RELAT_1,STRUCT_0,FUNCT_1,PARTFUN1,FINSEQ_1,MARGREL1,BINARITH,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,GFACIRC1,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28,CKB37,CKB38,CKB39,CKB40,CKB53,CKB54;
definitions FACIRC_1,GFACIRC1,XBOOLEAN,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28,CKB37,CKB38,CKB39,CKB40,CKB53,CKB54;
theorems XBOOLE_0,XBOOLE_1,ZFMISC_1,ENUMSET1,MCART_1,FUNCT_1,FINSEQ_2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,CIRCCMB2,GFACIRC1,XBOOLEAN,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58;
registrations RELAT_1,MARGREL1,CARD_3,CIRCCOMB,FACIRC_1,ORDINAL1,FINSEQ_1,FUNCT_1;
constructors ENUMSET1,BINARITH,CIRCUIT1,CIRCUIT2,FACIRC_1,TWOSCOMP,NAT_1,GFACIRC1,RELSET_1,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28,CKB37,CKB38,CKB39,CKB40,CKB53,CKB54;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th23: (for am,bp,cm,dp being non pair set holds (for cin being set holds ((cin <> [ <* dp,( GFA2AdderOutput (am,bp,cm) ) *>,( and2 ) ] & (not cin in ( InnerVertices ( BitGFA2Str (am,bp,cm) ) ))) implies ( InputVertices ( BitFTA2Str (am,bp,cm,dp,cin) ) ) = { am,bp,cm,dp,cin })))
proof
let am being non pair set,bp being non pair set,cm being non pair set,dp being non pair set;
let cin being set;
set S = ( BitFTA2Str (am,bp,cm,dp,cin) );
set S1 = ( BitGFA2Str (am,bp,cm) );
set A1 = ( GFA2AdderOutput (am,bp,cm) );
set C1 = ( GFA2CarryOutput (am,bp,cm) );
set S2 = ( BitGFA1Str (A1,cin,dp) );
set ambp0 = [ <* am,bp *>,( xor2c ) ];
set ambp = [ <* am,bp *>,( and2a ) ];
set bpcm = [ <* bp,cm *>,( and2c ) ];
set cmam = [ <* cm,am *>,( and2b ) ];
set dpA1 = [ <* dp,A1 *>,( and2 ) ];
assume that
A1: cin <> dpA1
and
A2: (not cin in ( InnerVertices S1 ));
A3: (not dp in { A1,ambp0,ambp,bpcm,cmam,C1 }) by ENUMSET1:def 4;
A1 in { A1,ambp0,ambp,bpcm,cmam,C1 } by ENUMSET1:def 4;
then A4: ( { A1 } \ { A1,ambp0,ambp,bpcm,cmam,C1 } ) = ( {} ) by ZFMISC_1:60;
A5: ( InnerVertices S1 ) = ( ( ( { ambp0 } \/ { A1 } ) \/ { ambp,bpcm,cmam } ) \/ { C1 } ) by GFACIRC1:95
.= ( ( { ambp0,A1 } \/ { ambp,bpcm,cmam } ) \/ { C1 } ) by ENUMSET1:1
.= ( { ambp0,A1 } \/ ( { ambp,bpcm,cmam } \/ { C1 } ) ) by XBOOLE_1:4
.= ( { A1,ambp0 } \/ { ambp,bpcm,cmam,C1 } ) by ENUMSET1:6
.= { A1,ambp0,ambp,bpcm,cmam,C1 } by ENUMSET1:12;
then A6: ( { A1,cin,dp } \ ( InnerVertices S1 ) ) = ( ( { A1 } \/ { cin,dp } ) \ { A1,ambp0,ambp,bpcm,cmam,C1 } ) by ENUMSET1:2
.= ( ( { A1 } \ { A1,ambp0,ambp,bpcm,cmam,C1 } ) \/ ( { cin,dp } \ { A1,ambp0,ambp,bpcm,cmam,C1 } ) ) by XBOOLE_1:42
.= ( ( { cin } \/ { dp } ) \ { A1,ambp0,ambp,bpcm,cmam,C1 } ) by A4,ENUMSET1:1
.= ( ( { cin } \ { A1,ambp0,ambp,bpcm,cmam,C1 } ) \/ ( { dp } \ { A1,ambp0,ambp,bpcm,cmam,C1 } ) ) by XBOOLE_1:42
.= ( { cin } \/ ( { dp } \ { A1,ambp0,ambp,bpcm,cmam,C1 } ) ) by A2,A5,ZFMISC_1:59
.= ( { cin } \/ { dp } ) by A3,ZFMISC_1:59
.= { cin,dp } by ENUMSET1:1;
(( InnerVertices S2 ) misses ( InputVertices S1 ) & S1 tolerates S2) by CKB58:1,CIRCCOMB:47;
hence ( InputVertices S ) = ( ( InputVertices S1 ) \/ ( ( InputVertices S2 ) \ ( InnerVertices S1 ) ) ) by FACIRC_1:4
.= ( { am,bp,cm } \/ ( ( InputVertices S2 ) \ ( InnerVertices S1 ) ) ) by GFACIRC1:98
.= ( { am,bp,cm } \/ ( { A1,cin,dp } \ ( InnerVertices S1 ) ) ) by A1,CKB57:1,GFACIRC1:65
.= { am,bp,cm,dp,cin } by A6,ENUMSET1:9;
end;
