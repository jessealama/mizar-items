environ
vocabularies CIRCCOMB,STRUCT_0,XBOOLE_0,MSUALG_1,GFACIRC1,FUNCT_4,LATTICES,CIRCUIT1,MSAFREE2,FINSEQ_1,TWOSCOMP,PARTFUN1,RELAT_1,MCART_1,FACIRC_1,SUBSET_1,FSM_1,MARGREL1,FUNCT_1,CIRCUIT2,XBOOLEAN,ARYTM_3,FTACELL1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,NAT_1,MCART_1,RELAT_1,STRUCT_0,FUNCT_1,PARTFUN1,FINSEQ_1,MARGREL1,BINARITH,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,GFACIRC1,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14;
definitions FACIRC_1,GFACIRC1,XBOOLEAN,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14;
theorems XBOOLE_0,XBOOLE_1,ZFMISC_1,ENUMSET1,MCART_1,FUNCT_1,FINSEQ_2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,CIRCCMB2,GFACIRC1,XBOOLEAN,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
registrations RELAT_1,MARGREL1,CARD_3,CIRCCOMB,FACIRC_1,ORDINAL1,FINSEQ_1,FUNCT_1;
constructors ENUMSET1,BINARITH,CIRCUIT1,CIRCUIT2,FACIRC_1,TWOSCOMP,NAT_1,GFACIRC1,RELSET_1,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Lm7: (for ap,bp,cp,dp being non  pair set holds (for cin being set holds (for s being (State of ( BitFTA0Circ (ap,bp,cp,dp,cin) )) holds (for a123x,a123y,a123z being (Element of ( BOOLEAN )) holds (((a123x = ( s . [ <* ( GFA0AdderOutput (ap,bp,cp) ),cin *>,( and2 ) ] ) & a123y = ( s . [ <* cin,dp *>,( and2 ) ] )) & a123z = ( s . [ <* dp,( GFA0AdderOutput (ap,bp,cp) ) *>,( and2 ) ] )) implies ( ( Following s ) . ( GFA0CarryOutput (( GFA0AdderOutput (ap,bp,cp) ),cin,dp) ) ) = ( ( a123x 'or' a123y ) 'or' a123z ))))))
proof
let ap being non  pair set;
let bp being non  pair set;
let cp being non  pair set;
let dp being non  pair set;
let cin being set;
set S = ( BitFTA0Str (ap,bp,cp,dp,cin) );
set C = ( BitFTA0Circ (ap,bp,cp,dp,cin) );
set A1 = ( GFA0AdderOutput (ap,bp,cp) );
set A2 = ( GFA0CarryOutput (A1,cin,dp) );
set A1cin = [ <* A1,cin *>,( and2 ) ];
set cindp = [ <* cin,dp *>,( and2 ) ];
set dpA1 = [ <* dp,A1 *>,( and2 ) ];
let s being (State of C);
let a123x being (Element of ( BOOLEAN ));
let a123y being (Element of ( BOOLEAN ));
let a123z being (Element of ( BOOLEAN ));
assume that
A1: ((a123x = ( s . A1cin ) & a123y = ( s . cindp )) & a123z = ( s . dpA1 ));
A2: (A1cin in (the carrier of S) & cindp in (the carrier of S)) by CKB8:1;
A3: (dpA1 in (the carrier of S) & ( dom s ) = (the carrier of S)) by CKB8:1,CIRCUIT1:3;
( InnerVertices S ) = (the carrier' of S) by FACIRC_1:37;
then A2 in (the carrier' of S) by CKB9:1;
hence ( ( Following s ) . A2 ) = ( ( or3 ) . ( s * <* A1cin,cindp,dpA1 *> ) ) by FACIRC_1:35
.= ( ( or3 ) . <* a123x,a123y,a123z *> ) by A1,A2,A3,FINSEQ_2:126
.= ( ( a123x 'or' a123y ) 'or' a123z ) by TWOSCOMP:def 24;
end;
