environ
vocabularies CIRCCOMB,STRUCT_0,XBOOLE_0,MSUALG_1,GFACIRC1,FUNCT_4,LATTICES,CIRCUIT1,MSAFREE2,FINSEQ_1,TWOSCOMP,PARTFUN1,RELAT_1,MCART_1,FACIRC_1,SUBSET_1,FSM_1,MARGREL1,FUNCT_1,CIRCUIT2,XBOOLEAN,ARYTM_3,FTACELL1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,NAT_1,MCART_1,RELAT_1,STRUCT_0,FUNCT_1,PARTFUN1,FINSEQ_1,MARGREL1,BINARITH,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,GFACIRC1,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28,CKB37,CKB38,CKB39,CKB40,CKB53,CKB54,CKB63,CKB64,CKB65,CKB66,CKB79,CKB80;
definitions FACIRC_1,GFACIRC1,XBOOLEAN,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28,CKB37,CKB38,CKB39,CKB40,CKB53,CKB54,CKB63,CKB64,CKB65,CKB66,CKB79,CKB80;
theorems XBOOLE_0,XBOOLE_1,ZFMISC_1,ENUMSET1,MCART_1,FUNCT_1,FINSEQ_2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,CIRCCMB2,GFACIRC1,XBOOLEAN,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85;
registrations RELAT_1,MARGREL1,CARD_3,CIRCCOMB,FACIRC_1,ORDINAL1,FINSEQ_1,FUNCT_1;
constructors ENUMSET1,BINARITH,CIRCUIT1,CIRCUIT2,FACIRC_1,TWOSCOMP,NAT_1,GFACIRC1,RELSET_1,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28,CKB37,CKB38,CKB39,CKB40,CKB53,CKB54,CKB63,CKB64,CKB65,CKB66,CKB79,CKB80;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th34: (for am,bm,cm,dm,cin being set holds ((((((((((((((((am in (the carrier of ( BitFTA3Str (am,bm,cm,dm,cin) )) & bm in (the carrier of ( BitFTA3Str (am,bm,cm,dm,cin) ))) & cm in (the carrier of ( BitFTA3Str (am,bm,cm,dm,cin) ))) & dm in (the carrier of ( BitFTA3Str (am,bm,cm,dm,cin) ))) & cin in (the carrier of ( BitFTA3Str (am,bm,cm,dm,cin) ))) & [ <* am,bm *>,( xor2 ) ] in (the carrier of ( BitFTA3Str (am,bm,cm,dm,cin) ))) & ( GFA3AdderOutput (am,bm,cm) ) in (the carrier of ( BitFTA3Str (am,bm,cm,dm,cin) ))) & [ <* am,bm *>,( and2b ) ] in (the carrier of ( BitFTA3Str (am,bm,cm,dm,cin) ))) & [ <* bm,cm *>,( and2b ) ] in (the carrier of ( BitFTA3Str (am,bm,cm,dm,cin) ))) & [ <* cm,am *>,( and2b ) ] in (the carrier of ( BitFTA3Str (am,bm,cm,dm,cin) ))) & ( GFA3CarryOutput (am,bm,cm) ) in (the carrier of ( BitFTA3Str (am,bm,cm,dm,cin) ))) & [ <* ( GFA3AdderOutput (am,bm,cm) ),cin *>,( xor2 ) ] in (the carrier of ( BitFTA3Str (am,bm,cm,dm,cin) ))) & ( GFA3AdderOutput (( GFA3AdderOutput (am,bm,cm) ),cin,dm) ) in (the carrier of ( BitFTA3Str (am,bm,cm,dm,cin) ))) & [ <* ( GFA3AdderOutput (am,bm,cm) ),cin *>,( and2b ) ] in (the carrier of ( BitFTA3Str (am,bm,cm,dm,cin) ))) & [ <* cin,dm *>,( and2b ) ] in (the carrier of ( BitFTA3Str (am,bm,cm,dm,cin) ))) & [ <* dm,( GFA3AdderOutput (am,bm,cm) ) *>,( and2b ) ] in (the carrier of ( BitFTA3Str (am,bm,cm,dm,cin) ))) & ( GFA3CarryOutput (( GFA3AdderOutput (am,bm,cm) ),cin,dm) ) in (the carrier of ( BitFTA3Str (am,bm,cm,dm,cin) ))))
proof
let am being set;
let bm being set;
let cm being set;
let dm being set;
let cin being set;
set S1 = ( BitGFA3Str (am,bm,cm) );
set A1 = ( GFA3AdderOutput (am,bm,cm) );
set C1 = ( GFA3CarryOutput (am,bm,cm) );
set S2 = ( BitGFA3Str (A1,cin,dm) );
set A2 = ( GFA3AdderOutput (A1,cin,dm) );
set C2 = ( GFA3CarryOutput (A1,cin,dm) );
set ambm0 = [ <* am,bm *>,( xor2 ) ];
set ambm = [ <* am,bm *>,( and2b ) ];
set bmcm = [ <* bm,cm *>,( and2b ) ];
set cmam = [ <* cm,am *>,( and2b ) ];
set A1cin0 = [ <* A1,cin *>,( xor2 ) ];
set A1cin = [ <* A1,cin *>,( and2b ) ];
set cindm = [ <* cin,dm *>,( and2b ) ];
set dmA1 = [ <* dm,A1 *>,( and2b ) ];
A1: (cm in (the carrier of S1) & ambm0 in (the carrier of S1)) by GFACIRC1:132;
A2: (ambm in (the carrier of S1) & bmcm in (the carrier of S1)) by GFACIRC1:132;
A3: (A1 in (the carrier of S2) & cin in (the carrier of S2)) by GFACIRC1:132;
A4: (cmam in (the carrier of S1) & C1 in (the carrier of S1)) by GFACIRC1:132;
A5: C2 in (the carrier of S2) by GFACIRC1:132;
A6: (cindm in (the carrier of S2) & dmA1 in (the carrier of S2)) by GFACIRC1:132;
A7: (A2 in (the carrier of S2) & A1cin in (the carrier of S2)) by GFACIRC1:132;
A8: (dm in (the carrier of S2) & A1cin0 in (the carrier of S2)) by GFACIRC1:132;
(am in (the carrier of S1) & bm in (the carrier of S1)) by GFACIRC1:132;
hence thesis by A1,A2,A4,A3,A8,A7,A6,A5,FACIRC_1:20;
end;
