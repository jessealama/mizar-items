environ
vocabularies CIRCCOMB,STRUCT_0,XBOOLE_0,MSUALG_1,GFACIRC1,FUNCT_4,LATTICES,CIRCUIT1,MSAFREE2,FINSEQ_1,TWOSCOMP,PARTFUN1,RELAT_1,MCART_1,FACIRC_1,SUBSET_1,FSM_1,MARGREL1,FUNCT_1,CIRCUIT2,XBOOLEAN,ARYTM_3,FTACELL1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,NAT_1,MCART_1,RELAT_1,STRUCT_0,FUNCT_1,PARTFUN1,FINSEQ_1,MARGREL1,BINARITH,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,GFACIRC1,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28,CKB37,CKB38,CKB39,CKB40,CKB53,CKB54;
definitions FACIRC_1,GFACIRC1,XBOOLEAN,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28,CKB37,CKB38,CKB39,CKB40,CKB53,CKB54;
theorems XBOOLE_0,XBOOLE_1,ZFMISC_1,ENUMSET1,MCART_1,FUNCT_1,FINSEQ_2,CIRCUIT1,CIRCUIT2,CIRCCOMB,FACIRC_1,TWOSCOMP,CIRCCMB2,GFACIRC1,XBOOLEAN,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60;
registrations RELAT_1,MARGREL1,CARD_3,CIRCCOMB,FACIRC_1,ORDINAL1,FINSEQ_1,FUNCT_1;
constructors ENUMSET1,BINARITH,CIRCUIT1,CIRCUIT2,FACIRC_1,TWOSCOMP,NAT_1,GFACIRC1,RELSET_1,CKB1,CKB2,CKB11,CKB12,CKB13,CKB14,CKB27,CKB28,CKB37,CKB38,CKB39,CKB40,CKB53,CKB54;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th25: (for am,bp,cm,dp,cin being set holds ((((((((((([ <* am,bp *>,( xor2c ) ] in ( InnerVertices ( BitFTA2Str (am,bp,cm,dp,cin) ) ) & ( GFA2AdderOutput (am,bp,cm) ) in ( InnerVertices ( BitFTA2Str (am,bp,cm,dp,cin) ) )) & [ <* am,bp *>,( and2a ) ] in ( InnerVertices ( BitFTA2Str (am,bp,cm,dp,cin) ) )) & [ <* bp,cm *>,( and2c ) ] in ( InnerVertices ( BitFTA2Str (am,bp,cm,dp,cin) ) )) & [ <* cm,am *>,( and2b ) ] in ( InnerVertices ( BitFTA2Str (am,bp,cm,dp,cin) ) )) & ( GFA2CarryOutput (am,bp,cm) ) in ( InnerVertices ( BitFTA2Str (am,bp,cm,dp,cin) ) )) & [ <* ( GFA2AdderOutput (am,bp,cm) ),cin *>,( xor2c ) ] in ( InnerVertices ( BitFTA2Str (am,bp,cm,dp,cin) ) )) & ( GFA1AdderOutput (( GFA2AdderOutput (am,bp,cm) ),cin,dp) ) in ( InnerVertices ( BitFTA2Str (am,bp,cm,dp,cin) ) )) & [ <* ( GFA2AdderOutput (am,bp,cm) ),cin *>,( and2c ) ] in ( InnerVertices ( BitFTA2Str (am,bp,cm,dp,cin) ) )) & [ <* cin,dp *>,( and2a ) ] in ( InnerVertices ( BitFTA2Str (am,bp,cm,dp,cin) ) )) & [ <* dp,( GFA2AdderOutput (am,bp,cm) ) *>,( and2 ) ] in ( InnerVertices ( BitFTA2Str (am,bp,cm,dp,cin) ) )) & ( GFA1CarryOutput (( GFA2AdderOutput (am,bp,cm) ),cin,dp) ) in ( InnerVertices ( BitFTA2Str (am,bp,cm,dp,cin) ) )))
proof
let am being set,bp being set,cm being set,dp being set,cin being set;
set S = ( BitFTA2Str (am,bp,cm,dp,cin) );
set A1 = ( GFA2AdderOutput (am,bp,cm) );
set C1 = ( GFA2CarryOutput (am,bp,cm) );
set A2 = ( GFA1AdderOutput (A1,cin,dp) );
set C2 = ( GFA1CarryOutput (A1,cin,dp) );
set ambp0 = [ <* am,bp *>,( xor2c ) ];
set ambp = [ <* am,bp *>,( and2a ) ];
set bpcm = [ <* bp,cm *>,( and2c ) ];
set cmam = [ <* cm,am *>,( and2b ) ];
set A1cin0 = [ <* A1,cin *>,( xor2c ) ];
set A1cin = [ <* A1,cin *>,( and2c ) ];
set cindp = [ <* cin,dp *>,( and2a ) ];
set dpA1 = [ <* dp,A1 *>,( and2 ) ];
set p1 = { ambp0,A1,ambp,bpcm,cmam,C1 };
set p2 = { A1cin0,A2,A1cin,cindp,dpA1,C2 };
A1: (ambp0 in p1 & A1 in p1) by ENUMSET1:def 4;
A2: (ambp in p1 & bpcm in p1) by ENUMSET1:def 4;
A3: (A1cin0 in p2 & A2 in p2) by ENUMSET1:def 4;
A4: (cmam in p1 & C1 in p1) by ENUMSET1:def 4;
A5: (dpA1 in p2 & C2 in p2) by ENUMSET1:def 4;
A6: (A1cin in p2 & cindp in p2) by ENUMSET1:def 4;
( InnerVertices S ) = ( ( ( { ambp0,A1 } \/ { ambp,bpcm,cmam,C1 } ) \/ { A1cin0,A2 } ) \/ { A1cin,cindp,dpA1,C2 } ) by CKB55:1
.= ( ( p1 \/ { A1cin0,A2 } ) \/ { A1cin,cindp,dpA1,C2 } ) by ENUMSET1:12
.= ( p1 \/ ( { A1cin0,A2 } \/ { A1cin,cindp,dpA1,C2 } ) ) by XBOOLE_1:4
.= ( p1 \/ p2 ) by ENUMSET1:12;
hence thesis by A1,A2,A4,A3,A6,A5,XBOOLE_0:def 3;
end;
