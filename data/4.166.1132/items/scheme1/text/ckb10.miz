environ
vocabularies NUMBERS,SUBSET_1,REAL_1,RELAT_1,ARYTM_3,INT_1,CARD_1,XXREAL_0,SEQ_1,VALUED_0,FUNCT_1,NAT_1,TARSKI,ORDINAL2,ARYTM_1,XBOOLE_0,PARTFUN1,ZFMISC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,REAL_1,NAT_1,NAT_D,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,VALUED_0,SEQ_1,XXREAL_0,RECDEF_1;
definitions TARSKI,XBOOLE_0;
theorems ZFMISC_1,NAT_1,FUNCT_1,FUNCT_2,SEQM_3,PARTFUN1,RELSET_1,XBOOLE_1,NAT_D,ORDINAL1,XXREAL_0,CKB1,CKB2,CKB3,CKB4;
schemes NAT_1,FUNCT_2,RECDEF_1,SUBSET_1,CLASSES1,XBOOLE_0,CKB5,CKB6,CKB7,CKB8,CKB9;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,SEQM_3,VALUED_0;
constructors PARTFUN1,XXREAL_0,NAT_1,NAT_D,SEQ_1,SEQM_3,RECDEF_1,MEMBERED,RELSET_1;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve y for set;
scheme PartFuncExD2 { C,D() -> non  empty set,P,Q[set],F,G(set) -> (Element of D()) } : (ex f being (PartFunc of C(),D()) st ((for c being (Element of C()) holds (c in ( dom f ) iff (P[ c ] or Q[ c ]))) & (for c being (Element of C()) holds (c in ( dom f ) implies ((P[ c ] implies ( f . c ) = F(c)) & (Q[ c ] implies ( f . c ) = G(c)))))))
provided
A1: (for c being (Element of C()) holds (P[ c ] implies (not Q[ c ])))
proof
defpred X[ set,set ]
 means
((P[ $1 ] implies $2 = F($1)) & (Q[ $1 ] implies $2 = G($1)));
defpred X[ set ]
 means
(P[ $1 ] or Q[ $1 ]);
consider X being set such that A2: (for x holds (x in X iff (x in C() & X[ x ]))) from XBOOLE_0:sch 1;
A3: (for x holds (x in X implies (ex y st X[ x,y ])))
proof
let x;
assume A4: x in X;
then reconsider x9 = x as (Element of C()) by A2;
now
per cases  by A2,A4;
suppose A5: P[ x ];

take y = F(x);
(not Q[ x9 ]) by A1,A5;
hence thesis;
end;
suppose A6: Q[ x ];

take y = G(x);
(not P[ x9 ]) by A1,A6;
hence thesis;
end;
end;
hence thesis;
end;
consider f being Function such that A7: (( dom f ) = X & (for x holds (x in X implies X[ x,( f . x ) ]))) from CLASSES1:sch 1(A3);
A8: X c= C()
proof
let x;
assume x in X;
hence thesis by A2;
end;
( rng f ) c= D()
proof
let x;
assume x in ( rng f );
then consider y such that A9: y in ( dom f ) and A10: x = ( f . y ) by FUNCT_1:def 3;
now
per cases  by A2,A7,A9;
suppose P[ y ];

then ( f . y ) = F(y) by A7,A9;
hence thesis by A10;
end;
suppose Q[ y ];

then ( f . y ) = G(y) by A7,A9;
hence thesis by A10;
end;
end;
hence thesis;
end;
then reconsider q = f as (PartFunc of C(),D()) by A8,A7,RELSET_1:4;
take q;
thus (for c being (Element of C()) holds (c in ( dom q ) iff (P[ c ] or Q[ c ]))) by A2,A7;
let b being (Element of C());
assume b in ( dom q );
hence thesis by A7;
end;
