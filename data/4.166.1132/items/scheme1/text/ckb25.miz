environ
vocabularies NUMBERS,SUBSET_1,REAL_1,RELAT_1,ARYTM_3,INT_1,CARD_1,XXREAL_0,SEQ_1,VALUED_0,FUNCT_1,NAT_1,TARSKI,ORDINAL2,ARYTM_1,XBOOLE_0,PARTFUN1,ZFMISC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,REAL_1,NAT_1,NAT_D,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,VALUED_0,SEQ_1,XXREAL_0,RECDEF_1;
definitions TARSKI,XBOOLE_0;
theorems ZFMISC_1,NAT_1,FUNCT_1,FUNCT_2,SEQM_3,PARTFUN1,RELSET_1,XBOOLE_1,NAT_D,ORDINAL1,XXREAL_0,CKB1,CKB2,CKB3,CKB4;
schemes NAT_1,FUNCT_2,RECDEF_1,SUBSET_1,CLASSES1,XBOOLE_0,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,SEQM_3,VALUED_0;
constructors PARTFUN1,XXREAL_0,NAT_1,NAT_D,SEQ_1,SEQM_3,RECDEF_1,MEMBERED,RELSET_1;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve z for set;
scheme FuncExCD2 { C,D,E() -> non  empty set,P[set,set],F,G(set,set) -> (Element of E()) } : (ex f being (Function of [: C(),D() :],E()) st (for c being (Element of C()) holds (for d being (Element of D()) holds ([ c,d ] in ( dom f ) implies ((P[ c,d ] implies ( f . [ c,d ] ) = F(c,d)) & ((not P[ c,d ]) implies ( f . [ c,d ] ) = G(c,d)))))))
proof
defpred Y[ set,set ]
 means
(not P[ $1,$2 ]);
A1: (for c being (Element of C()) holds (for f being (Element of D()) holds (P[ c,f ] implies (not Y[ c,f ]))));
consider f being (PartFunc of [: C(),D() :],E()) such that A2: ((for c being (Element of C()) holds (for e being (Element of D()) holds ([ c,e ] in ( dom f ) iff (P[ c,e ] or Y[ c,e ])))) & (for c being (Element of C()) holds (for g being (Element of D()) holds ([ c,g ] in ( dom f ) implies ((P[ c,g ] implies ( f . [ c,g ] ) = F(c,g)) & (Y[ c,g ] implies ( f . [ c,g ] ) = G(c,g))))))) from CKB19:sch 1(A1);
consider g being Function such that A3: g = f;
( dom f ) = [: C(),D() :]
proof
thus ( dom f ) c= [: C(),D() :];
let x;
assume x in [: C(),D() :];
then consider y,z such that A4: y in C() and A5: z in D() and A6: x = [ y,z ] by ZFMISC_1:def 2;
reconsider z as (Element of D()) by A5;
reconsider y as (Element of C()) by A4;
(P[ y,z ] or (not P[ y,z ]));
hence thesis by A2,A6;
end;
then reconsider g as (Function of [: C(),D() :],E()) by A3,FUNCT_2:def 1;
take g;
thus thesis by A2,A3;
end;
