environ
vocabularies NUMBERS,SUBSET_1,REAL_1,RELAT_1,ARYTM_3,INT_1,CARD_1,XXREAL_0,SEQ_1,VALUED_0,FUNCT_1,NAT_1,TARSKI,ORDINAL2,ARYTM_1,XBOOLE_0,PARTFUN1,ZFMISC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,REAL_1,NAT_1,NAT_D,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,VALUED_0,SEQ_1,XXREAL_0,RECDEF_1;
definitions TARSKI,XBOOLE_0;
theorems ZFMISC_1,NAT_1,FUNCT_1,FUNCT_2,SEQM_3,PARTFUN1,RELSET_1,XBOOLE_1,NAT_D,ORDINAL1,XXREAL_0,CKB1,CKB2,CKB3,CKB4;
schemes NAT_1,FUNCT_2,RECDEF_1,SUBSET_1,CLASSES1,XBOOLE_0,CKB5,CKB6;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,SEQM_3,VALUED_0;
constructors PARTFUN1,XXREAL_0,NAT_1,NAT_D,SEQ_1,SEQM_3,RECDEF_1,MEMBERED,RELSET_1;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve m for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve r for Real;
scheme ExRealSeq3 { F,G,H(set) -> Real } : (ex s being Real_Sequence st (for n holds ((( s . ( 3 * n ) ) = F(n) & ( s . ( ( 3 * n ) + 1 ) ) = G(n)) & ( s . ( ( 3 * n ) + 2 ) ) = H(n))))
proof
defpred X[ set ]
 means
(ex m st $1 = ( 3 * m ));
consider E being (Subset of ( NAT )) such that A1: (for n holds (n in E iff X[ n ])) from SUBSET_1:sch 3;
defpred X[ set ]
 means
(ex m st $1 = ( ( 3 * m ) + 1 ));
consider G being (Subset of ( NAT )) such that A2: (for n holds (n in G iff X[ n ])) from SUBSET_1:sch 3;
defpred X[ set ]
 means
(ex m st $1 = ( ( 3 * m ) + 2 ));
consider K being (Subset of ( NAT )) such that A3: (for n holds (n in K iff X[ n ])) from SUBSET_1:sch 3;
defpred X[ (Element of ( NAT )),set ]
 means
((($1 in E implies $2 = F(( $1 / 3 ))) & ($1 in G implies $2 = G(( ( $1 - 1 ) / 3 )))) & ($1 in K implies $2 = H(( ( $1 - 2 ) / 3 ))));
A4: (for n holds (ex r st X[ n,r ]))
proof
let n;
consider m such that A5: ((n = ( 3 * m ) or n = ( ( 3 * m ) + 1 )) or n = ( ( 3 * m ) + 2 )) by CKB2:1;
now
per cases  by A5;
suppose A6: n = ( 3 * m );

take r = F(( n / 3 ));
A7: n = ( ( 3 * m ) + ( 0 ) ) by A6;
A8:now
assume n in K;
then (ex k st n = ( ( 3 * k ) + 2 )) by A3;
hence contradiction by A7,NAT_1:18;
end;
now
assume n in G;
then (ex k st n = ( ( 3 * k ) + 1 )) by A2;
hence contradiction by A7,NAT_1:18;
end;
hence thesis by A8;
end;
suppose A9: n = ( ( 3 * m ) + 1 );

take r = G(( ( n - 1 ) / 3 ));
A10:now
assume n in E;
then consider k such that A11: n = ( 3 * k ) by A1;
n = ( ( 3 * k ) + ( 0 ) ) by A11;
hence contradiction by A9,NAT_1:18;
end;
now
assume n in K;
then (ex k st n = ( ( 3 * k ) + 2 )) by A3;
hence contradiction by A9,NAT_1:18;
end;
hence thesis by A10;
end;
suppose A12: n = ( ( 3 * m ) + 2 );

take r = H(( ( n - 2 ) / 3 ));
A13:now
assume n in E;
then consider k such that A14: n = ( 3 * k ) by A1;
n = ( ( 3 * k ) + ( 0 ) ) by A14;
hence contradiction by A12,NAT_1:18;
end;
now
assume n in G;
then (ex k st n = ( ( 3 * k ) + 1 )) by A2;
hence contradiction by A12,NAT_1:18;
end;
hence thesis by A13;
end;
end;
hence thesis;
end;
consider f being (Function of ( NAT ),( REAL )) such that A15: (for n holds X[ n,( f . n ) ]) from FUNCT_2:sch 3(A4);
reconsider f as Real_Sequence;
take f;
let n;
( 3 * n ) in E by A1;
hence ( f . ( 3 * n ) ) = F(( ( 3 * n ) / 3 )) by A15
.= F(n);
( ( 3 * n ) + 1 ) in G by A2;
hence ( f . ( ( 3 * n ) + 1 ) ) = G(( ( ( ( 3 * n ) + 1 ) - 1 ) / 3 )) by A15
.= G(n);
( ( 3 * n ) + 2 ) in K by A3;
hence ( f . ( ( 3 * n ) + 2 ) ) = H(( ( ( ( 3 * n ) + 2 ) - 2 ) / 3 )) by A15
.= H(n);
end;
