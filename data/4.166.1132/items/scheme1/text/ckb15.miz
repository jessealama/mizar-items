environ
vocabularies NUMBERS,SUBSET_1,REAL_1,RELAT_1,ARYTM_3,INT_1,CARD_1,XXREAL_0,SEQ_1,VALUED_0,FUNCT_1,NAT_1,TARSKI,ORDINAL2,ARYTM_1,XBOOLE_0,PARTFUN1,ZFMISC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,REAL_1,NAT_1,NAT_D,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,VALUED_0,SEQ_1,XXREAL_0,RECDEF_1;
definitions TARSKI,XBOOLE_0;
theorems ZFMISC_1,NAT_1,FUNCT_1,FUNCT_2,SEQM_3,PARTFUN1,RELSET_1,XBOOLE_1,NAT_D,ORDINAL1,XXREAL_0,CKB1,CKB2,CKB3,CKB4;
schemes NAT_1,FUNCT_2,RECDEF_1,SUBSET_1,CLASSES1,XBOOLE_0,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,SEQM_3,VALUED_0;
constructors PARTFUN1,XXREAL_0,NAT_1,NAT_D,SEQ_1,SEQM_3,RECDEF_1,MEMBERED,RELSET_1;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve y for set;
scheme PartFuncExD4 { C,D() -> non empty set,P,Q,R,S[set],F,G,H,I(set) -> (Element of D()) } : (ex f being (PartFunc of C(),D()) st ((for c being (Element of C()) holds (c in ( dom f ) iff (((P[ c ] or Q[ c ]) or R[ c ]) or S[ c ]))) & (for c being (Element of C()) holds (c in ( dom f ) implies ((((P[ c ] implies ( f . c ) = F(c)) & (Q[ c ] implies ( f . c ) = G(c))) & (R[ c ] implies ( f . c ) = H(c))) & (S[ c ] implies ( f . c ) = I(c)))))))
provided
A1: (for c being (Element of C()) holds ((((((P[ c ] implies (not Q[ c ])) & (P[ c ] implies (not R[ c ]))) & (P[ c ] implies (not S[ c ]))) & (Q[ c ] implies (not R[ c ]))) & (Q[ c ] implies (not S[ c ]))) & (R[ c ] implies (not S[ c ]))))
proof
defpred X[ set,set ]
 means
((((P[ $1 ] implies $2 = F($1)) & (Q[ $1 ] implies $2 = G($1))) & (R[ $1 ] implies $2 = H($1))) & (S[ $1 ] implies $2 = I($1)));
defpred X[ set ]
 means
(((P[ $1 ] or Q[ $1 ]) or R[ $1 ]) or S[ $1 ]);
consider B being set such that A2: (for x holds (x in B iff (x in C() & X[ x ]))) from XBOOLE_0:sch 1;
A3: (for x holds (x in B implies (ex y st X[ x,y ])))
proof
let x;
assume A4: x in B;
then reconsider e9 = x as (Element of C()) by A2;
now
per cases  by A2,A4;
suppose A5: P[ x ];

take y = F(x);
A6: (not S[ e9 ]) by A1,A5;
((not Q[ e9 ]) & (not R[ e9 ])) by A1,A5;
hence thesis by A6;
end;
suppose A7: Q[ x ];

take y = G(x);
A8: (not S[ e9 ]) by A1,A7;
((not P[ e9 ]) & (not R[ e9 ])) by A1,A7;
hence thesis by A8;
end;
suppose A9: R[ x ];

take y = H(x);
A10: (not S[ e9 ]) by A1,A9;
((not P[ e9 ]) & (not Q[ e9 ])) by A1,A9;
hence thesis by A10;
end;
suppose A11: S[ x ];

take y = I(x);
A12: (not R[ e9 ]) by A1,A11;
((not P[ e9 ]) & (not Q[ e9 ])) by A1,A11;
hence thesis by A12;
end;
end;
hence thesis;
end;
consider f being Function such that A13: (( dom f ) = B & (for y holds (y in B implies X[ y,( f . y ) ]))) from CLASSES1:sch 1(A3);
A14: ( rng f ) c= D()
proof
let x;
assume x in ( rng f );
then consider y such that A15: y in ( dom f ) and A16: x = ( f . y ) by FUNCT_1:def 3;
now
per cases  by A2,A13,A15;
suppose P[ y ];

then ( f . y ) = F(y) by A13,A15;
hence thesis by A16;
end;
suppose Q[ y ];

then ( f . y ) = G(y) by A13,A15;
hence thesis by A16;
end;
suppose R[ y ];

then ( f . y ) = H(y) by A13,A15;
hence thesis by A16;
end;
suppose S[ y ];

then ( f . y ) = I(y) by A13,A15;
hence thesis by A16;
end;
end;
hence thesis;
end;
B c= C()
proof
let x;
assume x in B;
hence thesis by A2;
end;
then reconsider q = f as (PartFunc of C(),D()) by A13,A14,RELSET_1:4;
take q;
thus (for c being (Element of C()) holds (c in ( dom q ) iff (((P[ c ] or Q[ c ]) or R[ c ]) or S[ c ]))) by A2,A13;
let o being (Element of C());
assume o in ( dom q );
hence thesis by A13;
end;
