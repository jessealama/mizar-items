environ
vocabularies NUMBERS,SUBSET_1,REAL_1,RELAT_1,ARYTM_3,INT_1,CARD_1,XXREAL_0,SEQ_1,VALUED_0,FUNCT_1,NAT_1,TARSKI,ORDINAL2,ARYTM_1,XBOOLE_0,PARTFUN1,ZFMISC_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,XCMPLX_0,REAL_1,NAT_1,NAT_D,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,VALUED_0,SEQ_1,XXREAL_0,RECDEF_1;
definitions TARSKI,XBOOLE_0;
theorems ZFMISC_1,NAT_1,FUNCT_1,FUNCT_2,SEQM_3,PARTFUN1,RELSET_1,XBOOLE_1,NAT_D,ORDINAL1,XXREAL_0,CKB1,CKB2,CKB3,CKB4;
schemes NAT_1,FUNCT_2,RECDEF_1,SUBSET_1,CLASSES1,XBOOLE_0,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23;
registrations ORDINAL1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,SEQM_3,VALUED_0;
constructors PARTFUN1,XXREAL_0,NAT_1,NAT_D,SEQ_1,SEQM_3,RECDEF_1,MEMBERED,RELSET_1;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
scheme ExFuncD4 { C,D() -> non  empty set,P,Q,R,S[set],F,G,H,I(set) -> (Element of D()) } : (ex f being (Function of C(),D()) st (for c being (Element of C()) holds ((((P[ c ] implies ( f . c ) = F(c)) & (Q[ c ] implies ( f . c ) = G(c))) & (R[ c ] implies ( f . c ) = H(c))) & (S[ c ] implies ( f . c ) = I(c)))))
provided
A1: (for c being (Element of C()) holds ((((((P[ c ] implies (not Q[ c ])) & (P[ c ] implies (not R[ c ]))) & (P[ c ] implies (not S[ c ]))) & (Q[ c ] implies (not R[ c ]))) & (Q[ c ] implies (not S[ c ]))) & (R[ c ] implies (not S[ c ]))))
and
A2: (for c being (Element of C()) holds (((P[ c ] or Q[ c ]) or R[ c ]) or S[ c ]))
proof
A3: (for c being (Element of C()) holds ((((((P[ c ] implies (not Q[ c ])) & (P[ c ] implies (not R[ c ]))) & (P[ c ] implies (not S[ c ]))) & (Q[ c ] implies (not R[ c ]))) & (Q[ c ] implies (not S[ c ]))) & (R[ c ] implies (not S[ c ])))) by A1;
consider f being (PartFunc of C(),D()) such that A4: (for r being (Element of C()) holds (r in ( dom f ) iff (((P[ r ] or Q[ r ]) or R[ r ]) or S[ r ]))) and A5: (for o being (Element of C()) holds (o in ( dom f ) implies ((((P[ o ] implies ( f . o ) = F(o)) & (Q[ o ] implies ( f . o ) = G(o))) & (R[ o ] implies ( f . o ) = H(o))) & (S[ o ] implies ( f . o ) = I(o))))) from CKB15:sch 1(A3);
set q = f;
A6: ( dom q ) = C()
proof
thus ( dom q ) c= C();
let x;
assume x in C();
then reconsider w9 = x as (Element of C());
(((P[ w9 ] or Q[ w9 ]) or R[ w9 ]) or S[ w9 ]) by A2;
hence thesis by A4;
end;
then reconsider q as (Function of C(),D()) by FUNCT_2:def 1;
take q;
let e being (Element of C());
thus thesis by A5,A6;
end;
