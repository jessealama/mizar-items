environ
vocabularies NUMBERS,SUBSET_1,CARD_1,AMI_2,XBOOLE_0,STRUCT_0,ZFMISC_1,ARYTM_3,SUPINF_2,RELAT_1,FINSEQ_1,SCMFSA7B,FUNCSDOM,FUNCT_1,CARD_3,AMI_1,NAT_1,FUNCT_4,FUNCOP_1,MCART_1,PARTFUN1,ORDINAL1,ARYTM_1,FUNCT_2,FUNCT_5,TARSKI,SCMRING1,GROUP_9,RECDEF_2;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,CARD_1,NAT_1,RECDEF_2,NUMBERS,STRUCT_0,ALGSTR_0,FUNCSDOM,MCART_1,CARD_3,FINSEQ_1,FINSEQ_4,FUNCOP_1,FUNCT_4,CAT_2,AMI_2,CKB2,CKB4,CKB6,CKB7,CKB14;
definitions TARSKI,FINSEQ_1,FUNCOP_1,CARD_1,AMI_2,MCART_1,CKB2,CKB4,CKB6,CKB14;
theorems AMI_2,CAT_2,CARD_3,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_3,FINSEQ_4,FUNCT_1,FUNCT_2,FUNCT_4,MCART_1,TARSKI,SUBSET_1,ZFMISC_1,XBOOLE_0,XBOOLE_1,ORDINAL1,NAT_1,RELAT_1,FUNCT_7,RECDEF_2,CKB2,CKB4,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
schemes FUNCT_2,BINOP_1;
registrations XBOOLE_0,SETFAM_1,RELAT_1,ORDINAL1,FUNCOP_1,FINSEQ_1,CARD_3,STRUCT_0,GR_CY_1,GCD_1,AMI_2,CARD_1,ORDINAL2,FUNCT_1,CARD_2,ALGSTR_0,ALGSTR_1,FUNCT_2,RELSET_1,FINSET_1,CKB1,CKB3,CKB5;
constructors XXREAL_0,FINSEQ_4,REALSET2,CAT_2,RELSET_1,AMI_2,FUNCOP_1,SETFAM_1,FINSEQ_2,RECDEF_2,CKB2,CKB4,CKB6,CKB14;
requirements NUMERALS,REAL,SUBSET,BOOLE;
begin
definition
let R being  good non  empty 1-sorted;
let s being (SCM-State of R);
let u being Nat;
func SCM-Chg (s,u) -> (SCM-State of R) equals 
( s +* ( ( NAT ) .--> u ) );
coherence
proof
A1:now
let x being set;
assume A2: x in ( dom ( SCM-OK R ) );
then A3: x in ( SCM-Memory ) by FUNCT_2:def 1;
now
per cases ;
suppose A4: x = ( NAT );

{ ( NAT ) } = ( dom ( ( NAT ) .--> u ) ) by FUNCOP_1:13;
then ( NAT ) in ( dom ( ( NAT ) .--> u ) ) by TARSKI:def 1;
then ( ( s +* ( ( NAT ) .--> u ) ) . ( NAT ) ) = ( ( ( NAT ) .--> u ) . ( NAT ) ) by FUNCT_4:13
.= u by FUNCOP_1:72;
then ( ( s +* ( ( NAT ) .--> u ) ) . ( NAT ) ) in ( NAT ) by ORDINAL1:def 12;
hence ( ( s +* ( ( NAT ) .--> u ) ) . x ) in ( ( SCM-OK R ) . x ) by A3,A4,CKB9:1;
end;
suppose A5: x <> ( NAT );

{ ( NAT ) } = ( dom ( ( NAT ) .--> u ) ) by FUNCOP_1:13;
then (not x in ( dom ( ( NAT ) .--> u ) )) by A5,TARSKI:def 1;
then ( ( s +* ( ( NAT ) .--> u ) ) . x ) = ( s . x ) by FUNCT_4:11;
hence ( ( s +* ( ( NAT ) .--> u ) ) . x ) in ( ( SCM-OK R ) . x ) by A2,CARD_3:9;
end;
end;
hence ( ( s +* ( ( NAT ) .--> u ) ) . x ) in ( ( SCM-OK R ) . x );
end;
A6: ( dom ( SCM-OK R ) ) = ( SCM-Memory ) by FUNCT_2:def 1;
then ( dom s ) = ( SCM-Memory ) by CARD_3:9;
then ( dom ( s +* ( ( NAT ) .--> u ) ) ) = ( ( SCM-Memory ) \/ ( dom ( ( NAT ) .--> u ) ) ) by FUNCT_4:def 1
.= ( ( SCM-Memory ) \/ { ( NAT ) } ) by FUNCOP_1:13
.= ( dom ( SCM-OK R ) ) by A6,AMI_2:22,ZFMISC_1:40;
hence thesis by A1,CARD_3:9;
end;
end;
