environ
vocabularies NUMBERS,SUBSET_1,CARD_1,AMI_2,XBOOLE_0,STRUCT_0,ZFMISC_1,ARYTM_3,SUPINF_2,RELAT_1,FINSEQ_1,SCMFSA7B,FUNCSDOM,FUNCT_1,CARD_3,AMI_1,NAT_1,FUNCT_4,FUNCOP_1,MCART_1,PARTFUN1,ORDINAL1,ARYTM_1,FUNCT_2,FUNCT_5,TARSKI,SCMRING1,GROUP_9,RECDEF_2;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,CARD_1,NAT_1,RECDEF_2,NUMBERS,STRUCT_0,ALGSTR_0,FUNCSDOM,MCART_1,CARD_3,FINSEQ_1,FINSEQ_4,FUNCOP_1,FUNCT_4,CAT_2,AMI_2,CKB2,CKB4,CKB6,CKB7;
definitions TARSKI,FINSEQ_1,FUNCOP_1,CARD_1,AMI_2,MCART_1,CKB2,CKB4,CKB6;
theorems AMI_2,CAT_2,CARD_3,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_3,FINSEQ_4,FUNCT_1,FUNCT_2,FUNCT_4,MCART_1,TARSKI,SUBSET_1,ZFMISC_1,XBOOLE_0,XBOOLE_1,ORDINAL1,NAT_1,RELAT_1,FUNCT_7,RECDEF_2,CKB2,CKB4,CKB6,CKB8;
schemes FUNCT_2,BINOP_1;
registrations XBOOLE_0,SETFAM_1,RELAT_1,ORDINAL1,FUNCOP_1,FINSEQ_1,CARD_3,STRUCT_0,GR_CY_1,GCD_1,AMI_2,CARD_1,ORDINAL2,FUNCT_1,CARD_2,ALGSTR_0,ALGSTR_1,FUNCT_2,RELSET_1,FINSET_1,CKB1,CKB3,CKB5;
constructors XXREAL_0,FINSEQ_4,REALSET2,CAT_2,RELSET_1,AMI_2,FUNCOP_1,SETFAM_1,FINSEQ_2,RECDEF_2,CKB2,CKB4,CKB6;
requirements NUMERALS,REAL,SUBSET,BOOLE;
begin
reserve i for (Element of ( NAT ));
reserve k for (Element of ( NAT ));
reserve G for  good non  empty 1-sorted;
Lm1:now
let k being (Element of ( SCM-Memory ));
k in ( { ( NAT ) } \/ ( SCM-Data-Loc ) ) by XBOOLE_0:def 3;
then (k in { ( NAT ) } or k in ( SCM-Data-Loc )) by XBOOLE_0:def 3;
hence (k = ( NAT ) or k in ( SCM-Data-Loc )) by TARSKI:def 1;
end;
theorem
Th2: (for i being (Element of ( SCM-Memory )) holds (( ( SCM-OK G ) . i ) = ( NAT ) iff i = ( NAT )))
proof
let i being (Element of ( SCM-Memory ));
thus (( ( SCM-OK G ) . i ) = ( NAT ) implies i = ( NAT ))
proof
assume A1: ( ( SCM-OK G ) . i ) = ( NAT );
assume A2: i <> ( NAT );
per cases  by A2,Lm1;
suppose i in ( SCM-Data-Loc );

then ( ( SCM-OK G ) . i ) = (the carrier of G) by CKB6:def 1;
hence contradiction by A1,CKB4:def 1;
end;
end;

thus thesis by CKB6:def 1;
end;
