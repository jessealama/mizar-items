environ
vocabularies NUMBERS,SUBSET_1,CARD_1,AMI_2,XBOOLE_0,STRUCT_0,ZFMISC_1,ARYTM_3,SUPINF_2,RELAT_1,FINSEQ_1,SCMFSA7B,FUNCSDOM,FUNCT_1,CARD_3,AMI_1,NAT_1,FUNCT_4,FUNCOP_1,MCART_1,PARTFUN1,ORDINAL1,ARYTM_1,FUNCT_2,FUNCT_5,TARSKI,SCMRING1,GROUP_9,RECDEF_2;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PARTFUN1,FUNCT_2,BINOP_1,CARD_1,NAT_1,RECDEF_2,NUMBERS,STRUCT_0,ALGSTR_0,FUNCSDOM,MCART_1,CARD_3,FINSEQ_1,FINSEQ_4,FUNCOP_1,FUNCT_4,CAT_2,AMI_2,CKB2,CKB4,CKB6,CKB7;
definitions TARSKI,FINSEQ_1,FUNCOP_1,CARD_1,AMI_2,MCART_1,CKB2,CKB4,CKB6;
theorems AMI_2,CAT_2,CARD_3,FUNCOP_1,ENUMSET1,FINSEQ_1,FINSEQ_3,FINSEQ_4,FUNCT_1,FUNCT_2,FUNCT_4,MCART_1,TARSKI,SUBSET_1,ZFMISC_1,XBOOLE_0,XBOOLE_1,ORDINAL1,NAT_1,RELAT_1,FUNCT_7,RECDEF_2,CKB2,CKB4,CKB6;
schemes FUNCT_2,BINOP_1;
registrations XBOOLE_0,SETFAM_1,RELAT_1,ORDINAL1,FUNCOP_1,FINSEQ_1,CARD_3,STRUCT_0,GR_CY_1,GCD_1,AMI_2,CARD_1,ORDINAL2,FUNCT_1,CARD_2,ALGSTR_0,ALGSTR_1,FUNCT_2,RELSET_1,FINSET_1,CKB1,CKB3,CKB5;
constructors XXREAL_0,FINSEQ_4,REALSET2,CAT_2,RELSET_1,AMI_2,FUNCOP_1,SETFAM_1,FINSEQ_2,RECDEF_2,CKB2,CKB4,CKB6;
requirements NUMERALS,REAL,SUBSET,BOOLE;
begin
reserve I for (Element of ( Segm 8 ));
reserve i1 for (Element of ( NAT ));
reserve i2 for (Element of ( NAT ));
reserve d1 for (Element of ( SCM-Data-Loc ));
reserve d2 for (Element of ( SCM-Data-Loc ));
reserve d3 for (Element of ( SCM-Data-Loc ));
reserve d4 for (Element of ( SCM-Data-Loc ));
reserve S for non  empty 1-sorted;
theorem
Th1: ( NAT ) <> ( SCM-Instr S )
proof
now
assume 2 in ( SCM-Instr S );
then (2 in ( ( ( { [ ( 0 ),( {} ),( {} ) ] } \/ { [ I,( {} ),<* a,b *> ] where a is (Element of ( SCM-Data-Loc )),b is (Element of ( SCM-Data-Loc )): I in { 1,2,3,4 } } ) \/ { [ 6,<* i *>,( {} ) ] where i is (Element of ( NAT )): (not contradiction) } ) \/ { [ 7,<* i *>,<* a *> ] where i is (Element of ( NAT )),a is (Element of ( SCM-Data-Loc )): (not contradiction) } ) or 2 in { [ 5,( {} ),<* i,r *> ] where i is (Element of ( SCM-Data-Loc )),r is (Element of S): (not contradiction) }) by XBOOLE_0:def 3;
then ((2 in ( ( { [ ( 0 ),( {} ),( {} ) ] } \/ { [ I,( {} ),<* a,b *> ] where a is (Element of ( SCM-Data-Loc )),b is (Element of ( SCM-Data-Loc )): I in { 1,2,3,4 } } ) \/ { [ 6,<* i *>,( {} ) ] where i is (Element of ( NAT )): (not contradiction) } ) or 2 in { [ 7,<* i *>,<* a *> ] where i is (Element of ( NAT )),a is (Element of ( SCM-Data-Loc )): (not contradiction) }) or 2 in { [ 5,( {} ),<* i,r *> ] where i is (Element of ( SCM-Data-Loc )),r is (Element of S): (not contradiction) }) by XBOOLE_0:def 3;
then (((2 in ( { [ ( 0 ),( {} ),( {} ) ] } \/ { [ I,( {} ),<* a,b *> ] where a is (Element of ( SCM-Data-Loc )),b is (Element of ( SCM-Data-Loc )): I in { 1,2,3,4 } } ) or 2 in { [ 6,<* i *>,( {} ) ] where i is (Element of ( NAT )): (not contradiction) }) or 2 in { [ 7,<* i *>,<* a *> ] where i is (Element of ( NAT )),a is (Element of ( SCM-Data-Loc )): (not contradiction) }) or 2 in { [ 5,( {} ),<* i,r *> ] where i is (Element of ( SCM-Data-Loc )),r is (Element of S): (not contradiction) }) by XBOOLE_0:def 3;
then ((((2 in { [ ( 0 ),( {} ),( {} ) ] } or 2 in { [ I,( {} ),<* a,b *> ] where a is (Element of ( SCM-Data-Loc )),b is (Element of ( SCM-Data-Loc )): I in { 1,2,3,4 } }) or 2 in { [ 6,<* i *>,( {} ) ] where i is (Element of ( NAT )): (not contradiction) }) or 2 in { [ 7,<* i *>,<* a *> ] where i is (Element of ( NAT )),a is (Element of ( SCM-Data-Loc )): (not contradiction) }) or 2 in { [ 5,( {} ),<* i,r *> ] where i is (Element of ( SCM-Data-Loc )),r is (Element of S): (not contradiction) }) by XBOOLE_0:def 3;
then ((((2 = [ ( 0 ),( {} ),( {} ) ] or (ex I st (ex d1 st (ex d2 st (2 = [ I,( {} ),<* d1,d2 *> ] & I in { 1,2,3,4 }))))) or (ex i1 st (2 = [ 6,<* i1 *>,( {} ) ] & (not contradiction)))) or (ex i2 st (ex d3 st (2 = [ 7,<* i2 *>,<* d3 *> ] & (not contradiction))))) or (ex d4 st (ex r being (Element of S) st (2 = [ 5,( {} ),<* d4,r *> ] & (not contradiction))))) by TARSKI:def 1;
hence contradiction;
end;
hence thesis;
end;
