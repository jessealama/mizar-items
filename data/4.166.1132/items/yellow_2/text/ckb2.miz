environ
vocabularies XBOOLE_0,ORDERS_2,SUBSET_1,TARSKI,WAYBEL_0,LATTICE3,XXREAL_0,RELAT_2,YELLOW_0,EQREL_1,LATTICES,RELAT_1,WELLORD1,CAT_1,STRUCT_0,FUNCT_1,GROUP_6,SEQM_3,ORDINAL2,BINOP_1,REWRITE1,SETFAM_1,CARD_FIL,YELLOW_1,ZFMISC_1,WELLORD2,YELLOW_2;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,SETFAM_1,LATTICE3,WELLORD1,DOMAIN_1,STRUCT_0,ORDERS_2,QUANTAL1,ORDERS_3,YELLOW_0,YELLOW_1,WAYBEL_0;
definitions TARSKI,LATTICE3,QUANTAL1,ORDERS_3,WAYBEL_0,STRUCT_0;
theorems TARSKI,RELAT_1,FUNCT_1,FUNCT_2,SETFAM_1,LATTICE3,WELLORD1,ORDERS_2,ORDERS_3,YELLOW_0,YELLOW_1,WAYBEL_0,XBOOLE_0,XBOOLE_1,CKB1;
schemes FUNCT_2,DOMAIN_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FUNCT_2,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1;
constructors SETFAM_1,DOMAIN_1,TOLER_1,QUANTAL1,ORDERS_3,WAYBEL_0,YELLOW_1,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve X for set;
theorem
(for L being non  empty RelStr holds (for x being (Element of L) holds (for X being (Subset of L) holds (X c= ( uparrow x ) iff x is_<=_than X))))
proof
let L being non  empty RelStr;
let x being (Element of L);
let X being (Subset of L);
hereby
assume A1: X c= ( uparrow x );
thus x is_<=_than X
proof
let a being (Element of L);
assume a in X;
hence thesis by A1,WAYBEL_0:18;
end;

end;
assume A2: (for a being (Element of L) holds (a in X implies x <= a));
let a being set;
assume A3: a in X;
then reconsider a as (Element of L);
x <= a by A2,A3;
hence thesis by WAYBEL_0:18;
end;
