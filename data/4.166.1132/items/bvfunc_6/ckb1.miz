environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,BVFUNC_1,XBOOLEAN,FUNCT_1;
notations XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,FUNCT_2,BVFUNC_1;
definitions XBOOLEAN;
theorems MARGREL1,BINARITH,BVFUNC_1,XBOOLEAN;
registrations XBOOLE_0,XBOOLEAN,MARGREL1;
constructors BINARITH,BVFUNC_1;
requirements ARITHM;
begin
reserve Y for non empty set;
theorem
(for a,b being (Element of ( Funcs (Y,( BOOLEAN )) )) holds ( a 'imp' ( b 'imp' ( a '&' b ) ) ) = ( I_el Y ))
proof
let a being (Element of ( Funcs (Y,( BOOLEAN )) )),b being (Element of ( Funcs (Y,( BOOLEAN )) ));
(for x being (Element of Y) holds ( ( a 'imp' ( b 'imp' ( a '&' b ) ) ) . x ) = ( TRUE ))
proof
let x being (Element of Y);
( ( a 'imp' ( b 'imp' ( a '&' b ) ) ) . x ) = ( ( 'not' ( a . x ) ) 'or' ( ( b 'imp' ( a '&' b ) ) . x ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( a . x ) ) 'or' ( ( 'not' ( b . x ) ) 'or' ( ( a '&' b ) . x ) ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( a . x ) ) 'or' ( ( 'not' ( b . x ) ) 'or' ( ( a . x ) '&' ( b . x ) ) ) ) by MARGREL1:def 20
.= ( ( 'not' ( a . x ) ) 'or' ( ( ( 'not' ( b . x ) ) 'or' ( a . x ) ) '&' ( ( 'not' ( b . x ) ) 'or' ( b . x ) ) ) ) by XBOOLEAN:9
.= ( ( 'not' ( a . x ) ) 'or' ( ( TRUE ) '&' ( ( 'not' ( b . x ) ) 'or' ( a . x ) ) ) ) by XBOOLEAN:102
.= ( ( ( 'not' ( a . x ) ) 'or' ( a . x ) ) 'or' ( 'not' ( b . x ) ) )
.= ( ( TRUE ) 'or' ( 'not' ( b . x ) ) ) by XBOOLEAN:102
.= ( TRUE );
hence thesis;
end;
hence thesis by BVFUNC_1:def 11;
end;
