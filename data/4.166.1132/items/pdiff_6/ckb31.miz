environ
vocabularies PRE_TOPC,RLVECT_1,FUNCT_1,ARYTM_3,ARYTM_1,FINSEQ_1,VALUED_1,MSSUBFAM,FINSEQ_2,CARD_3,RVSUM_1,RELAT_1,COMPLEX1,SQUARE_1,RCOMP_1,PARTFUN1,NORMSP_1,XBOOLE_0,LOPBAN_1,FDIFF_1,REAL_NS1,BORSUK_1,EUCLID,NUMBERS,FUNCOP_1,STRUCT_0,UNIALG_1,EUCLID_7,MATRIXR2,RFINSEQ2,REAL_1,SUBSET_1,CARD_1,TARSKI,XXREAL_0,XXREAL_2,NAT_1,ORDINAL4,SUPINF_2,VALUED_2;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,COMPLEX1,REAL_1,NAT_1,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,FUNCT_2,FUNCOP_1,SEQ_1,STRUCT_0,RLVECT_1,FINSEQ_1,FINSEQ_2,SQUARE_1,VALUED_0,VALUED_1,VALUED_2,RVSUM_1,GRCAT_1,PRE_TOPC,VFUNCT_1,NORMSP_0,NORMSP_1,EUCLID,LOPBAN_1,NFCONT_1,NDIFF_1,REAL_NS1,PDIFF_1,INTEGR15,EUCLID_7,RFINSEQ2,CKB11,CKB12,CKB18,CKB20,CKB21;
definitions LOPBAN_1,RVSUM_1,EUCLID,VALUED_1,FINSEQ_1,XCMPLX_0,RFINSEQ2,VALUED_2,SQUARE_1,CKB11,CKB12,CKB21;
theorems TARSKI,ABSVALUE,XBOOLE_0,XBOOLE_1,EUCLID,XREAL_1,XCMPLX_0,RLVECT_1,COMPLEX1,FINSEQ_1,FINSEQ_2,ORDINAL1,NAT_1,XXREAL_0,RVSUM_1,RELAT_1,FUNCT_1,VFUNCT_1,FUNCT_2,SQUARE_1,INTEGR15,FUNCOP_1,EUCLID_7,FINSEQ_4,FINSEQ_5,NORMSP_1,LOPBAN_1,PARTFUN1,PARTFUN2,NFCONT_1,NDIFF_1,REAL_NS1,VALUED_1,PDIFF_1,RFINSEQ2,RLVECT_4,JORDAN2C,GRCAT_1,NORMSP_0,VALUED_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB19,CKB21,CKB22,CKB23,CKB24,CKB27,CKB28,CKB29,CKB30;
schemes FUNCT_2,NAT_1,FINSEQ_1,RECDEF_1;
registrations RELSET_1,STRUCT_0,XREAL_0,MEMBERED,LOPBAN_1,FUNCT_2,NAT_1,REAL_NS1,NUMBERS,XBOOLE_0,XXREAL_0,VALUED_0,EUCLID,FINSEQ_2,CARD_1,VALUED_1,VALUED_2,CKB16,CKB17,CKB25,CKB26;
constructors REAL_1,SQUARE_1,RSSPACE3,FINSEQOP,VFUNCT_1,COMPLEX1,NFCONT_1,NDIFF_1,SEQ_1,PDIFF_1,BINOP_2,MONOID_0,INTEGR15,RELSET_1,EUCLID_7,RFINSEQ2,GRCAT_1,JORDAN2B,VALUED_2,CKB11,CKB12,CKB20,CKB21;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
theorem
(for n,m being non empty (Element of ( NAT )) holds (for g being (PartFunc of ( REAL m ),( REAL n )) holds (for y0 being (Element of ( REAL m )) holds (for r being Real holds (g is_differentiable_in y0 implies (( r (#) g ) is_differentiable_in y0 & ( diff (( r (#) g ),y0) ) = ( r (#) ( diff (g,y0) ) )))))))
proof
let n being non empty (Element of ( NAT )),m being non empty (Element of ( NAT ));
let g being (PartFunc of ( REAL m ),( REAL n ));
let y0 being (Element of ( REAL m ));
let r being Real;
assume A1: g is_differentiable_in y0;
reconsider f = g as (PartFunc of ( REAL-NS m ),( REAL-NS n )) by CKB1:1;
reconsider x0 = y0 as (Point of ( REAL-NS m )) by REAL_NS1:def 4;
f is_differentiable_in x0 by A1,CKB2:1;
then A2: (( r (#) f ) is_differentiable_in x0 & ( diff (( r (#) f ),x0) ) = ( r * ( diff (f,x0) ) )) by NDIFF_1:37;
( r (#) f ) = ( r (#) g ) by CKB6:1;
hence ( r (#) g ) is_differentiable_in y0 by A2,CKB2:1;
then ( diff (( r (#) g ),y0) ) = ( diff (( r (#) f ),x0) ) by CKB3:1,CKB6:1;
hence ( diff (( r (#) g ),y0) ) = ( r (#) ( diff (g,y0) ) ) by A2,CKB9:1,CKB3:1,A1;
end;
