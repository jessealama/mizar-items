environ
vocabularies FUNCT_1,RELAT_1,TARSKI,STRUCT_0,SUBSET_1,XBOOLE_0,VECTSP_1,RLVECT_5,FINSET_1,RLVECT_3,LOPBAN_1,ARYTM_3,SUPINF_2,CARD_1,RLSUB_1,FUNCT_2,ARYTM_1,MESFUNC1,VECTSP10,RLVECT_2,FUNCT_4,REALSET1,FUNCOP_1,QC_LANG1,CARD_3,RLSUB_2,FINSEQ_1,VALUED_1,NAT_1,XXREAL_0,PARTFUN1,NUMBERS,PBOOLE,RANKNULL,MSSUBFAM,UNIALG_1;
notations TARSKI,XBOOLE_0,SUBSET_1,DOMAIN_1,RELAT_1,RELSET_1,FUNCT_1,NAT_1,NUMBERS,FUNCOP_1,PARTFUN1,FUNCT_2,FUNCT_4,XCMPLX_0,XXREAL_0,CARD_1,FINSET_1,FINSEQ_1,FINSEQOP,STRUCT_0,RLVECT_1,RLVECT_2,VECTSP_1,FUNCT_7,VECTSP_4,VECTSP_5,VECTSP_6,VECTSP_7,MOD_2,MATRLIN,VECTSP_9,GRCAT_1,LOPBAN_1;
definitions TARSKI,RELAT_1,FUNCT_1,FINSEQ_1,VECTSP_4,VECTSP_6,XBOOLE_0,RLVECT_1,STRUCT_0,MOD_2,MATRLIN,FUNCOP_1,LOPBAN_1,FUNCT_2;
theorems TARSKI,ZFMISC_1,RELAT_1,FINSET_1,FINSEQ_1,FUNCT_1,VECTSP_7,VECTSP_9,CARD_2,XBOOLE_1,FUNCT_2,SUBSET_1,XBOOLE_0,VECTSP_1,RLVECT_1,VECTSP_4,VECTSP_6,STRUCT_0,RLVECT_2,MOD_2,MATRLIN,CARD_1,FUNCOP_1,VECTSP_5,FUNCT_7,FINSEQ_2,FUNCT_4,ENUMSET1,ORDINAL1,PARTFUN1,GRCAT_1,CKB1,CKB2,CKB3,CKB6,CKB7;
schemes CLASSES1;
registrations RELAT_1,FUNCT_1,STRUCT_0,CARD_1,FINSET_1,VECTSP_9,XBOOLE_0,MATRLIN,FUNCOP_1,ORDINAL1,XREAL_0,SUBSET_1,FINSEQ_1,MOD_2,GRCAT_1,RELSET_1,CKB4,CKB5;
constructors NAT_1,FINSEQOP,HAHNBAN,VECTSP_6,VECTSP_7,MOD_2,VECTSP_9,REALSET1,RLVECT_2,WELLORD2,LOPBAN_1,VECTSP_5,FUNCT_7,FUNCT_4,XXREAL_0,MATRLIN,RELSET_1;
requirements BOOLE,SUBSET,NUMERALS,ARITHM;
begin
reserve F for Field;
reserve V for (VectSp of F);
theorem
(( card ( [#] V ) ) = 2 implies ( dim V ) = 1)
proof
assume A1: ( card ( [#] V ) ) = 2;
then A2: ( [#] V ) is  finite;
reconsider C = ( [#] V ) as  finite set by A1;
A3: ( card ( [#] V ) ) = ( card C );
reconsider V as  finite-dimensional (VectSp of F) by A2,CKB6:1;
(ex v being (Vector of V) st (v <> ( 0. V ) & ( (Omega). V ) = ( Lin { v } )))
proof
consider x being set,y being set such that A4: x <> y and A5: ( [#] V ) = { x,y } by A1,A3,CARD_2:60;
per cases  by A5,TARSKI:def 2;
suppose A6: x = ( 0. V );

then reconsider x as (Element of V);
reconsider y as (Element of V) by A5,TARSKI:def 2;
set L = ( Lin { y } );
take y;
(for v being (Element of V) holds (v in ( (Omega). V ) iff v in L))
proof
let v being (Element of V);
(v in ( (Omega). V ) implies v in L)
proof
assume v in ( (Omega). V );
A7: y in { y } by TARSKI:def 1;
A8: ( 0. L ) in L by STRUCT_0:def 5;
per cases  by A5,TARSKI:def 2;
suppose v = x;

hence thesis by A6,A8,VECTSP_4:def 2;
end;
suppose v = y;

hence thesis by A7,VECTSP_7:8;
end;
end;
hence thesis by STRUCT_0:def 5;
end;
hence thesis by A4,A6,VECTSP_4:30;
end;
suppose A9: y = ( 0. V );

reconsider x as (Element of V) by A5,TARSKI:def 2;
reconsider y as (Element of V) by A9;
set L = ( Lin { x } );
take x;
(for v being (Element of V) holds (v in ( (Omega). V ) iff v in L))
proof
let v being (Element of V);
(v in ( (Omega). V ) implies v in L)
proof
assume v in ( (Omega). V );
A10: x in { x } by TARSKI:def 1;
A11: ( 0. L ) in L by STRUCT_0:def 5;
per cases  by A5,TARSKI:def 2;
suppose v = y;

hence thesis by A9,A11,VECTSP_4:def 2;
end;
suppose v = x;

hence thesis by A10,VECTSP_7:8;
end;
end;
hence thesis by STRUCT_0:def 5;
end;
hence thesis by A4,A9,VECTSP_4:30;
end;
end;
hence thesis by VECTSP_9:30;
end;
