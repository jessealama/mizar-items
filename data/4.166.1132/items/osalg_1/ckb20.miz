environ
vocabularies PBOOLE,FINSEQ_1,RELAT_1,TARSKI,XBOOLE_0,MSUALG_1,SUBSET_1,STRUCT_0,EQREL_1,FUNCT_1,ORDERS_2,ORDERS_1,RELAT_2,NATTRA_1,MARGREL1,XXREAL_0,SEQM_3,CARD_5,CARD_LAR,FUNCOP_1,CARD_3,SETFAM_1,OSALG_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,ORDERS_1,FUNCT_2,EQREL_1,SETFAM_1,PARTFUN1,FINSEQ_1,FUNCOP_1,FINSEQ_2,CARD_3,PBOOLE,ORDERS_2,STRUCT_0,MSUALG_1,ORDERS_3,CKB3,CKB4,CKB5,CKB6,CKB7,CKB10,CKB14,CKB16,CKB17;
definitions TARSKI,CKB10,CKB14,CKB16,CKB17;
theorems FUNCT_1,PARTFUN1,FINSEQ_1,FUNCOP_1,PBOOLE,FUNCT_2,CARD_3,FINSEQ_3,FINSEQ_2,RELAT_1,RELSET_1,EQREL_1,ZFMISC_1,ORDERS_3,MSUALG_1,ORDERS_2,RELAT_2,GRFUNC_1,FUNCT_4,ORDERS_1,CKB2,CKB8,CKB10,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes FUNCT_1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,PARTFUN1,EQREL_1,STRUCT_0,MSUALG_1,ORDERS_3,ORDINAL1,RELAT_1,PBOOLE,CKB1,CKB5,CKB6,CKB7,CKB9,CKB11,CKB12,CKB13;
constructors EQREL_1,ORDERS_3,RELSET_1,MSAFREE,CKB5,CKB6,CKB7,CKB10,CKB14,CKB16,CKB17;
requirements BOOLE,SUBSET;
begin
reserve S0 for non empty non void ManySortedSign;
definition
let S0;
func OSSign S0 ->  strict non empty non void  order-sorted OverloadedRSSign
means
:Def6: ((((((the carrier of S0) = (the carrier of it) & ( id (the carrier of S0) ) = (the InternalRel of it)) & (the carrier' of S0) = (the carrier' of it)) & ( id (the carrier' of S0) ) = (the Overloading of it)) & (the Arity of S0) = (the Arity of it)) & (the ResultSort of S0) = (the ResultSort of it));
existence
proof
set s = OverloadedRSSign (# (the carrier of S0),( id (the carrier of S0) ),(the carrier' of S0),( id (the carrier' of S0) ),(the Arity of S0),(the ResultSort of S0) #);
reconsider s1 = s as  strict non empty non void  order-sorted OverloadedRSSign by CKB10:def 1;
take s1;
thus thesis;
end;
uniqueness;
end;
