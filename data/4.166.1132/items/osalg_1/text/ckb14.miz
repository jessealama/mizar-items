environ
vocabularies PBOOLE,FINSEQ_1,RELAT_1,TARSKI,XBOOLE_0,MSUALG_1,SUBSET_1,STRUCT_0,EQREL_1,FUNCT_1,ORDERS_2,ORDERS_1,RELAT_2,NATTRA_1,MARGREL1,XXREAL_0,SEQM_3,CARD_5,CARD_LAR,FUNCOP_1,CARD_3,SETFAM_1,OSALG_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,ORDERS_1,FUNCT_2,EQREL_1,SETFAM_1,PARTFUN1,FINSEQ_1,FUNCOP_1,FINSEQ_2,CARD_3,PBOOLE,ORDERS_2,STRUCT_0,MSUALG_1,ORDERS_3,CKB3,CKB4,CKB5,CKB6,CKB7,CKB10;
definitions TARSKI,CKB10;
theorems FUNCT_1,PARTFUN1,FINSEQ_1,FUNCOP_1,PBOOLE,FUNCT_2,CARD_3,FINSEQ_3,FINSEQ_2,RELAT_1,RELSET_1,EQREL_1,ZFMISC_1,ORDERS_3,MSUALG_1,ORDERS_2,RELAT_2,GRFUNC_1,FUNCT_4,ORDERS_1,CKB2,CKB8,CKB10;
schemes FUNCT_1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,PARTFUN1,EQREL_1,STRUCT_0,MSUALG_1,ORDERS_3,ORDINAL1,RELAT_1,PBOOLE,CKB1,CKB5,CKB6,CKB7,CKB9,CKB11,CKB12,CKB13;
constructors EQREL_1,ORDERS_3,RELSET_1,MSAFREE,CKB5,CKB6,CKB7,CKB10;
requirements BOOLE,SUBSET;
begin
definition
let S being non empty non void OverloadedMSSign;
let x being (OperSymbol of S);
let y being (OperSymbol of S);
pred x ~= y
means
:Def3: [ x,y ] in (the Overloading of S)
;symmetry
proof
let x being (OperSymbol of S),y being (OperSymbol of S);
( field (the Overloading of S) ) = (the carrier' of S) by ORDERS_1:12;
then (the Overloading of S) is_symmetric_in (the carrier' of S) by RELAT_2:def 11;
hence thesis by RELAT_2:def 3;
end;
reflexivity
proof
let x being (OperSymbol of S);
( field (the Overloading of S) ) = (the carrier' of S) by ORDERS_1:12;
then (the Overloading of S) is_reflexive_in (the carrier' of S) by RELAT_2:def 9;
hence thesis by RELAT_2:def 1;
end;
end;
