environ
vocabularies PBOOLE,FINSEQ_1,RELAT_1,TARSKI,XBOOLE_0,MSUALG_1,SUBSET_1,STRUCT_0,EQREL_1,FUNCT_1,ORDERS_2,ORDERS_1,RELAT_2,NATTRA_1,MARGREL1,XXREAL_0,SEQM_3,CARD_5,CARD_LAR,FUNCOP_1,CARD_3,SETFAM_1,OSALG_1;
notations TARSKI,XBOOLE_0,SUBSET_1,RELAT_1,RELAT_2,FUNCT_1,RELSET_1,ORDERS_1,FUNCT_2,EQREL_1,SETFAM_1,PARTFUN1,FINSEQ_1,FUNCOP_1,FINSEQ_2,CARD_3,PBOOLE,ORDERS_2,STRUCT_0,MSUALG_1,ORDERS_3,CKB3,CKB4,CKB5,CKB6,CKB7,CKB10,CKB14,CKB16,CKB17,CKB20,CKB25,CKB26,CKB30,CKB31,CKB38,CKB39,CKB40,CKB41,CKB42,CKB49,CKB51,CKB53,CKB57,CKB59,CKB61,CKB65,CKB69,CKB71,CKB77,CKB80,CKB84,CKB86,CKB87,CKB91;
definitions TARSKI,CKB10,CKB14,CKB16,CKB17,CKB20,CKB26,CKB30,CKB31,CKB38,CKB39,CKB40,CKB41,CKB42,CKB49,CKB51,CKB53,CKB59,CKB61,CKB69,CKB71,CKB77,CKB80,CKB84,CKB87;
theorems FUNCT_1,PARTFUN1,FINSEQ_1,FUNCOP_1,PBOOLE,FUNCT_2,CARD_3,FINSEQ_3,FINSEQ_2,RELAT_1,RELSET_1,EQREL_1,ZFMISC_1,ORDERS_3,MSUALG_1,ORDERS_2,RELAT_2,GRFUNC_1,FUNCT_4,ORDERS_1,CKB2,CKB8,CKB10,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB59,CKB60,CKB61,CKB62,CKB66,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB84,CKB87,CKB88,CKB89,CKB90,CKB92,CKB93;
schemes FUNCT_1;
registrations XBOOLE_0,SUBSET_1,FUNCT_1,RELSET_1,PARTFUN1,EQREL_1,STRUCT_0,MSUALG_1,ORDERS_3,ORDINAL1,RELAT_1,PBOOLE,CKB1,CKB5,CKB6,CKB7,CKB9,CKB11,CKB12,CKB13,CKB22,CKB23,CKB24,CKB33,CKB34,CKB35,CKB36,CKB45,CKB46,CKB47,CKB55,CKB56,CKB58,CKB63,CKB64,CKB67,CKB82,CKB83,CKB85;
constructors EQREL_1,ORDERS_3,RELSET_1,MSAFREE,CKB5,CKB6,CKB7,CKB10,CKB14,CKB16,CKB17,CKB20,CKB26,CKB30,CKB31,CKB38,CKB39,CKB40,CKB41,CKB42,CKB49,CKB51,CKB53,CKB59,CKB61,CKB69,CKB71,CKB77,CKB80,CKB84,CKB87,CKB91;
requirements BOOLE,SUBSET;
begin
definition
let SR being  regular  monotone OrderSortedSign;
let on being (OperName of SR);
let w being (Element of ( (the carrier of SR) * ));
assume A1: (ex op being (Element of on) st w <= ( the_arity_of op ));
func LBound (on,w) -> (Element of on)
means
(for op being (Element of on) holds (w <= ( the_arity_of op ) implies it = ( LBound (op,w) )));
existence
proof
consider op being (Element of on) such that A2: w <= ( the_arity_of op ) by A1;
set Lo = ( LBound (op,w) );
( LBound (op,w) ) has_least_args_for op,w by A2,CKB49:def 1;
then op ~= Lo by CKB38:def 1;
then A3: ( Name op ) = ( Name Lo ) by CKB89:1;
then A4: ( Name Lo ) = on by CKB92:1;
then reconsider Lo as (Element of on) by CKB92:1;
take Lo;
let op1 being (Element of on);
assume that
A5: w <= ( the_arity_of op1 );
( Name op1 ) = on by CKB92:1;
then op1 ~= op by A3,A4,CKB89:1;
hence thesis by A2,A5,CKB93:1;
end;
uniqueness
proof
let op1 being (Element of on),op2 being (Element of on);
assume that
A6: (for op3 being (Element of on) holds (w <= ( the_arity_of op3 ) implies op1 = ( LBound (op3,w) )))
and
A7: (for op3 being (Element of on) holds (w <= ( the_arity_of op3 ) implies op2 = ( LBound (op3,w) )));
consider op being (Element of on) such that A8: w <= ( the_arity_of op ) by A1;
op1 = ( LBound (op,w) ) by A8,A6;
hence thesis by A8,A7;
end;
end;
