environ
vocabularies NUMBERS,XBOOLE_0,FINSEQ_1,ARYTM_1,GROUP_1,STRUCT_0,GROUP_2,SETFAM_1,SUBSET_1,RELAT_1,INT_1,TARSKI,GROUP_3,QC_LANG1,NEWTON,ARYTM_3,CARD_1,XXREAL_0,COMPLEX1,ALGSTR_0,CARD_3,FINSOP_1,BINOP_1,ORDINAL4,SETWISEO,FINSEQ_2,NAT_1,FUNCT_1,PARTFUN1,FUNCT_2,ZFMISC_1,RLSUB_1,BVFUNC_2,EQREL_1,PRE_TOPC,RLSUB_2,LATTICES,GROUP_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,FINSOP_1,NUMBERS,INT_1,SETWISEO,SETFAM_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,FINSEQ_3,FINSEQ_4,BINOP_1,STRUCT_0,ALGSTR_0,GROUP_2,GROUP_3,LATTICES,GROUP_1,DOMAIN_1,XXREAL_0,NAT_1,INT_2,CKB1,CKB4,CKB9;
definitions TARSKI,XBOOLE_0,GROUP_2,SUBSET_1,ALGSTR_0,CKB4,CKB9;
theorems BINOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSOP_1,FUNCT_1,GROUP_1,GROUP_2,GROUP_3,INT_1,LATTICES,NAT_1,RLSUB_2,SETFAM_1,SUBSET_1,TARSKI,ZFMISC_1,RELAT_1,XBOOLE_0,XBOOLE_1,ORDERS_1,XREAL_1,XXREAL_0,NAT_D,STRUCT_0,PARTFUN1,ABSVALUE,CARD_1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes BINOP_1,DOMAIN_1,FINSEQ_1,FINSEQ_2,NAT_1,ORDERS_1,XBOOLE_0,CKB2,CKB3;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,NUMBERS,XREAL_0,INT_1,FINSEQ_1,STRUCT_0,LATTICES,GROUP_1,GROUP_2,GROUP_3,ORDINAL1,CARD_1,FINSEQ_2;
constructors PARTFUN1,SETFAM_1,BINOP_1,SETWISEO,XXREAL_0,NAT_1,NAT_D,FINSEQ_3,FINSEQ_4,FINSOP_1,REALSET1,REAL_1,LATTICES,GROUP_3,RELSET_1,FINSEQ_2,BINOP_2,CKB1,CKB4,CKB9;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
reserve G for Group;
reserve F1 for (FinSequence of (the carrier of G));
reserve F2 for (FinSequence of (the carrier of G));
theorem
Th17: ((( len F1 ) = ( len F2 ) & (for k holds (k in ( dom F1 ) implies ( F2 . ( ( ( len F1 ) - k ) + 1 ) ) = ( ( F1 /. k ) " )))) implies ( Product F1 ) = ( ( Product F2 ) " ))
proof
defpred P[ (Element of ( NAT )) ]
 means
(for F1 holds (for F2 holds (((( len F1 ) = $1 & ( len F1 ) = ( len F2 )) & (for k holds (k in ( dom F1 ) implies ( F2 . ( ( ( len F1 ) - k ) + 1 ) ) = ( ( F1 /. k ) " )))) implies ( Product F1 ) = ( ( Product F2 ) " ))));
A1: (for n holds (P[ n ] implies P[ ( n + 1 ) ]))
proof
let n;
assume A2: P[ n ];
let F1;
let F2;
assume that
A3: ( len F1 ) = ( n + 1 )
and
A4: ( len F1 ) = ( len F2 )
and
A5: (for k holds (k in ( dom F1 ) implies ( F2 . ( ( ( len F1 ) - k ) + 1 ) ) = ( ( F1 /. k ) " )));
reconsider p = ( F1 | ( Seg n ) ) as (FinSequence of (the carrier of G)) by FINSEQ_1:18;
deffunc F(Nat) = ( F2 . ( $1 + 1 ) );
consider q being FinSequence such that A6: ( len q ) = ( len p ) and A7: (for k being Nat holds (k in ( dom q ) implies ( q . k ) = F(k))) from FINSEQ_1:sch 2;
A8: ( dom q ) = ( dom p ) by A6,FINSEQ_3:29;
A9: ( len p ) = n by A3,FINSEQ_3:53;
A10: ( rng q ) c= (the carrier of G)
proof
let x;
assume x in ( rng q );
then consider y such that A11: y in ( dom q ) and A12: x = ( q . y ) by FUNCT_1:def 3;
reconsider y as (Element of ( NAT )) by A11;
y <= ( len p ) by A6,A11,FINSEQ_3:25;
then (1 <= ( y + 1 ) & ( y + 1 ) <= ( len F2 )) by A3,A4,A9,NAT_1:12,XREAL_1:7;
then A13: ( y + 1 ) in ( dom F2 ) by FINSEQ_3:25;
x = ( F2 . ( y + 1 ) ) by A7,A11,A12;
then A14: x in ( rng F2 ) by A13,FUNCT_1:def 3;
( rng F2 ) c= (the carrier of G) by FINSEQ_1:def 4;
hence thesis by A14;
end;
A15: ( rng F1 ) c= (the carrier of G) by FINSEQ_1:def 4;
1 <= ( n + 1 ) by NAT_1:12;
then ( n + 1 ) in ( dom F1 ) by A3,FINSEQ_3:25;
then ( F1 . ( n + 1 ) ) in ( rng F1 ) by FUNCT_1:def 3;
then reconsider a = ( F1 . ( n + 1 ) ) as (Element of G) by A15;
A16: F1 = ( p ^ <* a *> ) by A3,FINSEQ_3:55;
A17:now
let k;
assume k in ( dom <* ( a " ) *> );
then A18: k in { 1 } by FINSEQ_1:2,FINSEQ_1:def 8;
( len F2 ) >= 1 by A3,A4,NAT_1:12;
then A19: ( len F2 ) in ( dom F1 ) by A4,FINSEQ_3:25;
then ( F2 . ( ( ( len F1 ) - ( len F1 ) ) + 1 ) ) = ( ( F1 /. ( len F1 ) ) " ) by A4,A5;
then ( ( F1 /. ( len F1 ) ) " ) = ( F2 . k ) by A18,TARSKI:def 1;
then A20: ( F2 . k ) = ( a " ) by A3,A4,A19,PARTFUN1:def 6;
k = 1 by A18,TARSKI:def 1;
hence ( <* ( a " ) *> . k ) = ( F2 . k ) by A20,FINSEQ_1:def 8;
end;
reconsider q as (FinSequence of (the carrier of G)) by A10,FINSEQ_1:def 4;
now
let k;
assume A21: k in ( dom p );
then reconsider i = ( ( ( len p ) - k ) + 1 ) as (Element of ( NAT )) by CKB19:1;
A22: ( i + 1 ) = ( ( ( len F1 ) - k ) + 1 ) by A3,A9;
(1 <= i & i <= ( len p )) by A21,CKB19:1;
then i in ( dom p ) by FINSEQ_3:25;
then A23: ( q . i ) = ( F2 . ( i + 1 ) ) by A7,A8;
k <= ( len p ) by A21,FINSEQ_3:25;
then A24: k <= ( len F1 ) by A3,A9,NAT_1:12;
1 <= k by A21,FINSEQ_3:25;
then A25: k in ( dom F1 ) by A24,FINSEQ_3:25;
then ( F1 /. k ) = ( F1 . k ) by PARTFUN1:def 6
.= ( p . k ) by A21,FUNCT_1:47
.= ( p /. k ) by A21,PARTFUN1:def 6;
hence ( q . ( ( ( len p ) - k ) + 1 ) ) = ( ( p /. k ) " ) by A5,A23,A25,A22;
end;
then A26: ( Product p ) = ( ( Product q ) " ) by A2,A9,A6;
A27:now
let k;
A28: ( len <* ( a " ) *> ) = 1 by FINSEQ_1:39;
assume k in ( dom q );
hence ( F2 . ( ( len <* ( a " ) *> ) + k ) ) = ( q . k ) by A7,A28;
end;
( len F2 ) = ( ( len <* ( a " ) *> ) + ( len q ) ) by A3,A4,A9,A6,FINSEQ_1:39;
then F2 = ( <* ( a " ) *> ^ q ) by A17,A27,FINSEQ_3:38;
then ( Product F2 ) = ( ( a " ) * ( Product q ) ) by FINSOP_1:6
.= ( ( a " ) * ( ( Product p ) " ) ) by A26
.= ( ( ( Product p ) * a ) " ) by GROUP_1:17;
hence thesis by A16,FINSOP_1:4;
end;
A29: P[ ( 0 ) ]
proof
let F1;
let F2;
assume that
A30: ( len F1 ) = ( 0 )
and
A31: ( len F1 ) = ( len F2 );
F1 = ( <*> (the carrier of G) ) by A30;
then A32: ( Product F1 ) = ( 1_ G ) by CKB13:1;
F2 = ( <*> (the carrier of G) ) by A30,A31;
then ( Product F2 ) = ( 1_ G ) by CKB13:1;
hence thesis by A32,GROUP_1:8;
end;
(for k holds P[ k ]) from NAT_1:sch 1(A29,A1);
hence thesis;
end;
