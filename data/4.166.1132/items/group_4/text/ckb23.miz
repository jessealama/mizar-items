environ
vocabularies NUMBERS,XBOOLE_0,FINSEQ_1,ARYTM_1,GROUP_1,STRUCT_0,GROUP_2,SETFAM_1,SUBSET_1,RELAT_1,INT_1,TARSKI,GROUP_3,QC_LANG1,NEWTON,ARYTM_3,CARD_1,XXREAL_0,COMPLEX1,ALGSTR_0,CARD_3,FINSOP_1,BINOP_1,ORDINAL4,SETWISEO,FINSEQ_2,NAT_1,FUNCT_1,PARTFUN1,FUNCT_2,ZFMISC_1,RLSUB_1,BVFUNC_2,EQREL_1,PRE_TOPC,RLSUB_2,LATTICES,GROUP_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,XCMPLX_0,FINSOP_1,NUMBERS,INT_1,SETWISEO,SETFAM_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSEQ_1,FINSEQ_3,FINSEQ_4,BINOP_1,STRUCT_0,ALGSTR_0,GROUP_2,GROUP_3,LATTICES,GROUP_1,DOMAIN_1,XXREAL_0,NAT_1,INT_2,CKB1,CKB4,CKB9;
definitions TARSKI,XBOOLE_0,GROUP_2,SUBSET_1,ALGSTR_0,CKB4,CKB9;
theorems BINOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSOP_1,FUNCT_1,GROUP_1,GROUP_2,GROUP_3,INT_1,LATTICES,NAT_1,RLSUB_2,SETFAM_1,SUBSET_1,TARSKI,ZFMISC_1,RELAT_1,XBOOLE_0,XBOOLE_1,ORDERS_1,XREAL_1,XXREAL_0,NAT_D,STRUCT_0,PARTFUN1,ABSVALUE,CARD_1,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22;
schemes BINOP_1,DOMAIN_1,FINSEQ_1,FINSEQ_2,NAT_1,ORDERS_1,XBOOLE_0,CKB2,CKB3;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,NUMBERS,XREAL_0,INT_1,FINSEQ_1,STRUCT_0,LATTICES,GROUP_1,GROUP_2,GROUP_3,ORDINAL1,CARD_1,FINSEQ_2;
constructors PARTFUN1,SETFAM_1,BINOP_1,SETWISEO,XXREAL_0,NAT_1,NAT_D,FINSEQ_3,FINSEQ_4,FINSOP_1,REALSET1,REAL_1,LATTICES,GROUP_3,RELSET_1,FINSEQ_2,BINOP_2,CKB1,CKB4,CKB9;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve k for (Element of ( NAT ));
reserve G for Group;
reserve F for (FinSequence of (the carrier of G));
reserve F1 for (FinSequence of (the carrier of G));
reserve F2 for (FinSequence of (the carrier of G));
theorem
((((G is  commutative  commutative Group & ( len F ) = ( len F1 )) & ( len F ) = ( len F2 )) & (for k holds (k in ( dom F ) implies ( F . k ) = ( ( F1 /. k ) * ( F2 /. k ) )))) implies ( Product F ) = ( ( Product F1 ) * ( Product F2 ) ))
proof
set g = (the multF of G);
assume G is  commutative  commutative Group;
then A1: g is  commutative by GROUP_3:2;
assume that
A2: ( len F ) = ( len F1 )
and
A3: ( len F ) = ( len F2 );
assume A4: (for k holds (k in ( dom F ) implies ( F . k ) = ( ( F1 /. k ) * ( F2 /. k ) )));
now
A5: ( dom F2 ) = ( Seg ( len F2 ) ) by FINSEQ_1:def 3;
A6: ( dom F1 ) = ( Seg ( len F1 ) ) by FINSEQ_1:def 3;
let k;
A7: ( dom F ) = ( Seg ( len F ) ) by FINSEQ_1:def 3;
assume A8: k in ( dom F );
hence ( F . k ) = ( ( F1 /. k ) * ( F2 /. k ) ) by A4
.= ( g . (( F1 . k ),( F2 /. k )) ) by A2,A8,A7,A6,PARTFUN1:def 6
.= ( g . (( F1 . k ),( F2 . k )) ) by A3,A8,A7,A5,PARTFUN1:def 6;
end;
hence thesis by A1,A2,A3,FINSOP_1:9;
end;
