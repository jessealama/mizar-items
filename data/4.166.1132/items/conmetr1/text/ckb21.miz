environ
vocabularies DIRAF,SUBSET_1,ANALOAF,AFF_1,AFF_2,ANALMETR,CONMETR,CONAFFM,CONMETR1;
notations STRUCT_0,ANALOAF,DIRAF,AFF_1,ANALMETR,AFF_2,CONAFFM,CONMETR,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
definitions CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
theorems AFF_1,AFF_2,ANALMETR,CONAFFM,CONMETR,TRANSLAC,DIRAF,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
registrations STRUCT_0,ANALMETR;
constructors AFF_1,AFF_2,CONAFFM,CONMETR,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
requirements SUBSET;
begin
reserve X for OrtAfPl;
reserve a for (Element of ( Af X ));
reserve a1 for (Element of ( Af X ));
reserve b for (Element of ( Af X ));
reserve b1 for (Element of ( Af X ));
reserve c for (Element of ( Af X ));
reserve c1 for (Element of ( Af X ));
reserve A for (Subset of ( Af X ));
reserve M for (Subset of ( Af X ));
reserve N for (Subset of ( Af X ));
theorem
(( Af X ) is  translational iff X is  satisfying_des)
proof
(X is  satisfying_des implies ( Af X ) is  translational)
proof
assume A1: X is  satisfying_des;
now
let A;
let M;
let N;
let a;
let b;
let c;
let a1;
let b1;
let c1;
assume that
A2: A // M
and
A3: A // N
and
A4: a in A
and
A5: a1 in A
and
A6: b in M
and
A7: b1 in M
and
A8: c in N
and
A9: c1 in N
and
A10: A is  being_line
and
A11: M is  being_line
and
A12: N is  being_line
and
A13: A <> M
and
A14: A <> N
and
A15: a,b // a1,b1
and
A16: a,c // a1,c1;
reconsider a9 = a,a19 = a1,b9 = b,b19 = b1,c9 = c,c19 = c1 as (Element of X) by ANALMETR:35;
b,c // b1,c1
proof
assume A17: (not b,c // b1,c1);
A18: a <> a1
proof
assume A19: a = a1;
A20: c = c1
proof
 LIN a,c,c1 by A16,A19,AFF_1:def 1;
then A21:  LIN c,c1,a by AFF_1:6;
assume c <> c1;
then a in N by A8,A9,A12,A21,AFF_1:25;
hence contradiction by A3,A4,A14,AFF_1:45;
end;
b = b1
proof
 LIN a,b,b1 by A15,A19,AFF_1:def 1;
then A22:  LIN b,b1,a by AFF_1:6;
assume b <> b1;
then a in M by A6,A7,A11,A22,AFF_1:25;
hence contradiction by A2,A4,A13,AFF_1:45;
end;
hence contradiction by A17,A20,AFF_1:2;
end;
A23: ((not  LIN a9,a19,b9) & (not  LIN a9,a19,c9))
proof
assume ( LIN a9,a19,b9 or  LIN a9,a19,c9);
then ( LIN a,a1,b or  LIN a,a1,c) by ANALMETR:40;
then (b in A or c in A) by A4,A5,A10,A18,AFF_1:25;
hence contradiction by A2,A3,A6,A8,A13,A14,AFF_1:45;
end;
a,a1 // c,c1 by A3,A4,A5,A8,A9,AFF_1:39;
then A24: a9,a19 // c9,c19 by ANALMETR:36;
a,a1 // b,b1 by A2,A4,A5,A6,A7,AFF_1:39;
then A25: a9,a19 // b9,b19 by ANALMETR:36;
A26: a9,c9 // a19,c19 by A16,ANALMETR:36;
a9,b9 // a19,b19 by A15,ANALMETR:36;
then b9,c9 // b19,c19 by A1,A23,A25,A24,A26,CONMETR:def 8;
hence contradiction by A17,ANALMETR:36;
end;
hence b,c // b1,c1;
end;
hence thesis by AFF_2:def 11;
end;
hence thesis by CONMETR:8;
end;
