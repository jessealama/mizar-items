environ
vocabularies NUMBERS,FINSEQ_1,FUNCT_1,RELAT_1,XBOOLE_0,TARSKI,ORDINAL4,NAT_1,XXREAL_0,ARYTM_3,PRE_POLY,CARD_1,FUNCOP_1,PARTFUN1,SUBSET_1,ARYTM_1,FUNCT_4,ORDINAL1,PBOOLE,FINSET_1,ORDERS_1,VECTSP_1,ZFMISC_1,ALGSTR_0,POLYNOM2,GROUP_1,POLYNOM1,SUPINF_2,RLVECT_1,ALGSEQ_1,LATTICES,POLYNOM3,STRUCT_0,CARD_3,CARD_FIL,QUOFIELD,MSSUBFAM,IDEAL_1,PRELAMB,MCART_1,BINOP_1,FUNCT_2,HILBASIS;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,PBOOLE,RELAT_1,FINSET_1,FUNCT_1,PARTFUN1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,RELSET_1,FUNCT_2,FUNCOP_1,FINSEQ_1,FUNCT_4,BINOP_1,XXREAL_2,MCART_1,FINSEQOP,FINSEQ_2,FUNCT_7,PRE_POLY,DOMAIN_1,STRUCT_0,ALGSTR_0,RLVECT_1,VFUNCT_1,BHSP_1,GROUP_1,VECTSP_1,NORMSP_1,POLYNOM1,POLYNOM2,POLYNOM3,ALGSEQ_1,NAT_D,IDEAL_1,TOPS_2,GRCAT_1,ORDINAL1,WSIERP_1,ORDERS_1,GROUP_6,QUOFIELD,RECDEF_1,MATRLIN,CKB6,CKB9,CKB14,CKB21,CKB23;
definitions TARSKI,IDEAL_1,GRCAT_1,GROUP_6,FUNCOP_1,POLYNOM3,CARD_1,STRUCT_0,CKB6,CKB9,CKB14,CKB21,CKB23;
theorems TARSKI,ZFMISC_1,RLVECT_1,FUNCT_1,FUNCT_2,POLYNOM1,NAT_1,AXIOMS,FVSUM_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,POLYNOM3,FUNCOP_1,ALGSEQ_1,INT_1,FUNCT_7,IDEAL_1,POLYNOM4,GRCAT_1,QUOFIELD,FUNCT_4,RELAT_1,CARD_1,MATRLIN,CARD_3,ORDINAL1,WAYBEL_1,ORDERS_1,FINSET_1,FINSEQOP,POLYNOM2,TOPS_2,FINSEQ_5,GROUP_1,XBOOLE_0,XBOOLE_1,RLVECT_2,VECTSP_1,XREAL_1,GROUP_6,XXREAL_0,NORMSP_1,PARTFUN1,XXREAL_2,NAT_D,XREAL_0,PRE_POLY,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
schemes NAT_1,RECDEF_1,FUNCT_1,FUNCT_2,FINSEQ_2,FUNCT_7;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCOP_1,FINSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,CARD_1,MEMBERED,FINSEQ_1,CARD_5,PRE_CIRC,STRUCT_0,VECTSP_1,ALGSTR_1,GR_CY_1,WAYBEL_2,GCD_1,PRE_POLY,POLYNOM1,POLYNOM2,POLYNOM3,IDEAL_1,VALUED_0,ALGSTR_0,XXREAL_2,VFUNCT_1,FUNCT_2,RELSET_1,CKB17;
constructors FINSEQOP,RFUNCT_3,NAT_D,REAL_1,WSIERP_1,TOPS_2,ALGSEQ_1,BHSP_1,GRCAT_1,GROUP_6,MATRIX_2,DTCONSTR,TRIANG_1,QUOFIELD,POLYNOM2,POLYNOM3,IDEAL_1,SEQ_1,RECDEF_1,SEQ_4,XXREAL_2,DOMAIN_1,BINARITH,RELSET_1,FUNCT_7,PRE_POLY,MATRLIN,VFUNCT_1,CKB6,CKB9,CKB14,CKB21,CKB23;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
Th21: (for L being  right_zeroed  add-associative  right_complementable  well-unital  distributive non  empty doubleLoopStr holds (for p,q being (Polynomial of L) holds ( len ( p *' q ) ) <= ( ( ( len p ) + ( len q ) ) -' 1 )))
proof
let L being  right_zeroed  add-associative  right_complementable  well-unital  distributive non  empty doubleLoopStr;
let p being (Polynomial of L);
let q being (Polynomial of L);
now
let i being Nat;
A1: ( ( ( len p ) + ( len q ) ) -' 1 ) >= ( ( ( len p ) + ( len q ) ) - 1 ) by XREAL_0:def 2;
i in ( NAT ) by ORDINAL1:def 12;
then consider r being (FinSequence of (the carrier of L)) such that A2: ( len r ) = ( i + 1 ) and A3: ( ( p *' q ) . i ) = ( Sum r ) and A4: (for k being (Element of ( NAT )) holds (k in ( dom r ) implies ( r . k ) = ( ( p . ( k -' 1 ) ) * ( q . ( ( i + 1 ) -' k ) ) ))) by POLYNOM3:def 9;
assume i >= ( ( ( len p ) + ( len q ) ) -' 1 );
then i >= ( ( len p ) + ( ( len q ) - 1 ) ) by A1,XXREAL_0:2;
then ( len p ) <= ( i - ( ( len q ) - 1 ) ) by XREAL_1:19;
then A5: ( - ( len p ) ) >= ( - ( ( i - ( len q ) ) + 1 ) ) by XREAL_1:24;
now
let k being (Element of ( NAT ));
assume A6: k in ( dom r );
then A7: ( r . k ) = ( ( p . ( k -' 1 ) ) * ( q . ( ( i + 1 ) -' k ) ) ) by A4;
k in ( Seg ( len r ) ) by A6,FINSEQ_1:def 3;
then k <= ( i + 1 ) by A2,FINSEQ_1:1;
then A8: ( ( i + 1 ) - k ) >= ( 0 ) by XREAL_1:48;
per cases ;
suppose ( k -' 1 ) < ( len p );

then ( k - 1 ) < ( len p ) by XREAL_0:def 2;
then ( - ( k - 1 ) ) > ( - ( len p ) ) by XREAL_1:24;
then ( 1 - k ) > ( ( ( len q ) - 1 ) - i ) by A5,XXREAL_0:2;
then ( i + ( 1 - k ) ) > ( ( len q ) - 1 ) by XREAL_1:19;
then ( ( i + 1 ) -' k ) > ( ( len q ) - 1 ) by A8,XREAL_0:def 2;
then ( ( i + 1 ) -' k ) >= ( ( ( len q ) - 1 ) + 1 ) by INT_1:7;
then ( q . ( ( i + 1 ) -' k ) ) = ( 0. L ) by ALGSEQ_1:8;
hence ( r . k ) = ( 0. L ) by A7,VECTSP_1:6;
end;
suppose ( k -' 1 ) >= ( len p );

then ( p . ( k -' 1 ) ) = ( 0. L ) by ALGSEQ_1:8;
hence ( r . k ) = ( 0. L ) by A7,VECTSP_1:7;
end;
end;
hence ( ( p *' q ) . i ) = ( 0. L ) by A3,POLYNOM3:1;
end;
then ( ( ( len p ) + ( len q ) ) -' 1 ) is_at_least_length_of ( p *' q ) by ALGSEQ_1:def 2;
hence thesis by ALGSEQ_1:def 3;
end;
