environ
vocabularies STACKS_1,XBOOLE_0,STRUCT_0,ZFMISC_1,SUBSET_1,FUNCT_1,NUMBERS,NAT_1,TARSKI,ARYTM_3,RELAT_1,FINSEQ_1,FINSEQ_3,ORDINAL4,FUNCOP_1,PARTFUN1,CARD_1,XXREAL_0,COMPLEX1,GLIB_000,RELAT_2,EQREL_1,FILTER_1,BINOP_1,MCART_1,ORDERS_1,WELLORD1,ARYTM_1,SETFAM_1,FUNCT_2,AOFA_000,PBOOLE,FUNCT_4,MATRIX_7,REWRITE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,RELAT_2,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,DOMAIN_1,FUNCT_3,FUNCOP_1,ORDERS_1,FUNCT_4,NUMBERS,XXREAL_0,NAT_1,NAT_D,FINSEQ_1,FINSEQ_2,EQREL_1,FINSEQ_3,PBOOLE,FUNCT_7,STRUCT_0,FILTER_1,REWRITE1,ABCMIZ_1,AOFA_000,CKB1,CKB2,CKB5,CKB7,CKB8,CKB9,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB32;
definitions TARSKI,XBOOLE_0,RELAT_1,FUNCT_1,RELAT_2,PARTFUN1,FUNCT_2,FINSEQ_1,BINOP_1,FILTER_1,REWRITE1,CKB5,CKB7,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25;
theorems TARSKI,XBOOLE_1,FINSEQ_1,FINSEQ_3,FINSEQ_5,NAT_1,NAT_D,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_3,FUNCOP_1,WSIERP_1,BINOP_1,POLYALG1,EQREL_1,WELLORD2,RELSET_1,ORDINAL1,XREAL_1,NAT_2,ZFMISC_1,SETFAM_1,RELAT_1,XBOOLE_0,ORDERS_1,MATRIX_7,FUNCT_7,FILTER_1,FUNCT_4,REWRITE1,XXREAL_0,MSUALG_8,HILBERT2,RLVECT_3,FINSEQOP,FINSEQ_2,CKB3,CKB5,CKB7,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB33,CKB35,CKB36;
schemes XBOOLE_0,RELSET_1,NAT_1,FUNCT_2,BINOP_1,RECDEF_1,ALTCAT_1,FUNCT_1,FINSEQ_1,FINSEQ_2,CKB4,CKB6;
registrations XBOOLE_0,RELSET_1,STRUCT_0,RELAT_1,FUNCT_1,FINSEQ_1,PARTFUN1,FUNCT_2,NAT_1,ORDINAL1,XXREAL_0,XREAL_0,CARD_1,EQREL_1,SUBSET_1,REWRITE1,CKB9,CKB10,CKB11,CKB12,CKB19,CKB20,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB34;
constructors BINOP_1,DOMAIN_1,XXREAL_0,RELSET_1,FILTER_1,FUNCT_7,REWRITE1,ABCMIZ_1,POLYNOM3,NAT_D,CKB1,CKB2,CKB5,CKB7,CKB8,CKB9,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25;
requirements BOOLE,SUBSET,NUMERALS,ARITHM,REAL;
begin
scheme INDsch { X() -> StackAlgebra,s() -> (stack of X()),P[set] } : P[ s() ]
provided
P1: (for s being (stack of X()) holds ( emp s implies P[ s ]))
and
P2: (for s being (stack of X()) holds (for e being (Element of X()) holds (P[ s ] implies P[ ( push (e,s) ) ])))
proof
defpred Q[ set,(stack of X()),(stack of X()) ]
 means
$3 = ( pop $2 );
A1: (for n being (Element of ( NAT )) holds (for x being (stack of X()) holds (ex y being (stack of X()) st Q[ n,x,y ])));
consider f being (Function of ( NAT ),(the carrier' of X())) such that A2: (( f . ( 0 ) ) = s() & (for n being (Element of ( NAT )) holds Q[ n,( f . n ),( f . ( n + 1 ) ) ])) from RECDEF_1:sch 2(A1);
consider i being Nat,s being (stack of X()) such that A3: (( f . i ) = s & ((not  emp s) implies ( f . ( i + 1 ) ) <> ( pop s ))) by CKB21:def 1;
defpred R[ Nat ]
 means
P[ ( f . ( i -' $1 ) ) ];
( i -' ( 0 ) ) = i by NAT_D:40;
then A5: R[ ( 0 ) ] by A3,A2,P1;
A6:now
let j being Nat;
assume B1: R[ j ];
B2: ( i -' ( j + 1 ) ) = ( ( i -' j ) -' 1 ) by NAT_2:30;
per cases ;
suppose ( i -' j ) >= 1;

then ( ( i -' ( j + 1 ) ) + 1 ) = ( i -' j ) by B2,XREAL_1:235;
then ( f . ( i -' j ) ) = ( pop ( f . ( i -' ( j + 1 ) ) ) ) by A2;
then ((not  emp ( f . ( i -' ( j + 1 ) ) )) implies ( f . ( i -' ( j + 1 ) ) ) = ( push (( top ( f . ( i -' ( j + 1 ) ) ) ),( f . ( i -' j ) )) )) by CKB22:def 1;
hence R[ ( j + 1 ) ] by P1,P2,B1;
end;
suppose B7: ( i -' j ) < ( ( 0 ) + 1 );

then B6: ( i -' j ) <= ( 0 ) by NAT_1:13;
B4: ( i -' j ) = ( 0 ) by B7,NAT_1:13;
( i -' ( j + 1 ) ) = ( ( 0 ) -' 1 ) by B4,NAT_2:30
.= ( 0 ) by NAT_2:8;
hence R[ ( j + 1 ) ] by B1,B6;
end;
end;
(for j being Nat holds R[ j ]) from NAT_1:sch 2(A5,A6);
then R[ i ];
hence thesis by A2,XREAL_1:232;
end;
