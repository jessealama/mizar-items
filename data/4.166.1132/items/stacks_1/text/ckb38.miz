environ
vocabularies STACKS_1,XBOOLE_0,STRUCT_0,ZFMISC_1,SUBSET_1,FUNCT_1,NUMBERS,NAT_1,TARSKI,ARYTM_3,RELAT_1,FINSEQ_1,FINSEQ_3,ORDINAL4,FUNCOP_1,PARTFUN1,CARD_1,XXREAL_0,COMPLEX1,GLIB_000,RELAT_2,EQREL_1,FILTER_1,BINOP_1,MCART_1,ORDERS_1,WELLORD1,ARYTM_1,SETFAM_1,FUNCT_2,AOFA_000,PBOOLE,FUNCT_4,MATRIX_7,REWRITE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,RELAT_2,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,DOMAIN_1,FUNCT_3,FUNCOP_1,ORDERS_1,FUNCT_4,NUMBERS,XXREAL_0,NAT_1,NAT_D,FINSEQ_1,FINSEQ_2,EQREL_1,FINSEQ_3,PBOOLE,FUNCT_7,STRUCT_0,FILTER_1,REWRITE1,ABCMIZ_1,AOFA_000,CKB1,CKB2,CKB5,CKB7,CKB8,CKB9,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB32;
definitions TARSKI,XBOOLE_0,RELAT_1,FUNCT_1,RELAT_2,PARTFUN1,FUNCT_2,FINSEQ_1,BINOP_1,FILTER_1,REWRITE1,CKB5,CKB7,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25;
theorems TARSKI,XBOOLE_1,FINSEQ_1,FINSEQ_3,FINSEQ_5,NAT_1,NAT_D,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_3,FUNCOP_1,WSIERP_1,BINOP_1,POLYALG1,EQREL_1,WELLORD2,RELSET_1,ORDINAL1,XREAL_1,NAT_2,ZFMISC_1,SETFAM_1,RELAT_1,XBOOLE_0,ORDERS_1,MATRIX_7,FUNCT_7,FILTER_1,FUNCT_4,REWRITE1,XXREAL_0,MSUALG_8,HILBERT2,RLVECT_3,FINSEQOP,FINSEQ_2,CKB3,CKB5,CKB7,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB33,CKB35,CKB36;
schemes XBOOLE_0,RELSET_1,NAT_1,FUNCT_2,BINOP_1,RECDEF_1,ALTCAT_1,FUNCT_1,FINSEQ_1,FINSEQ_2,CKB4,CKB6,CKB37;
registrations XBOOLE_0,RELSET_1,STRUCT_0,RELAT_1,FUNCT_1,FINSEQ_1,PARTFUN1,FUNCT_2,NAT_1,ORDINAL1,XXREAL_0,XREAL_0,CARD_1,EQREL_1,SUBSET_1,REWRITE1,CKB9,CKB10,CKB11,CKB12,CKB19,CKB20,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB34;
constructors BINOP_1,DOMAIN_1,XXREAL_0,RELSET_1,FILTER_1,FUNCT_7,REWRITE1,ABCMIZ_1,POLYNOM3,NAT_D,CKB1,CKB2,CKB5,CKB7,CKB8,CKB9,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25;
requirements BOOLE,SUBSET,NUMERALS,ARITHM,REAL;
begin
reserve x for set;
reserve y for set;
reserve A for non  empty set;
reserve X for non  empty non  void StackSystem;
reserve s for (stack of X);
reserve s1 for (stack of X);
reserve e for (Element of X);
scheme EXsch { X() -> StackAlgebra,s() -> (stack of X()),A() -> non  empty set,e() -> (Element of A()),d(set,set) -> (Element of A()) } : (ex a being (Element of A()) st (ex F being (Function of (the carrier' of X()),A()) st ((a = ( F . s() ) & (for s1 being (stack of X()) holds ( emp s1 implies ( F . s1 ) = e()))) & (for s1 being (stack of X()) holds (for e being (Element of X()) holds ( F . ( push (e,s1) ) ) = d(e,( F . s1 )))))))
proof
defpred G[ set ]
 means
((for s being (stack of X()) holds ( emp s implies [ s,e() ] in $1)) & (for s being (stack of X()) holds (for a being (Element of X()) holds (for v being (Element of A()) holds ([ s,v ] in $1 implies [ ( push (a,s) ),d(a,v) ] in $1)))));
consider M being set such that A1: (x in M iff (x in ( bool [: (the carrier' of X()),A() :] ) & G[ x ])) from XBOOLE_0:sch 1;
B1: (G[ [: (the carrier' of X()),A() :] ] & [: (the carrier' of X()),A() :] in ( bool [: (the carrier' of X()),A() :] )) by ZFMISC_1:def 1;
then A2: [: (the carrier' of X()),A() :] in M by A1;
reconsider M as non  empty set by A1,B1;
set F = ( meet M );
reconsider F as (Subset of [: (the carrier' of X()),A() :]) by A2,SETFAM_1:3;
defpred P[ (stack of X()) ]
 means
(for y1,y2 being set holds (([ $1,y1 ] in F & [ $1,y2 ] in F) implies y1 = y2));
A8: G[ F ]
proof
hereby
let s being (stack of X());
assume  emp s;
then (for Y being set holds (Y in M implies [ s,e() ] in Y)) by A1;
hence [ s,e() ] in F by SETFAM_1:def 1;
end;
let s being (stack of X());
let a being (Element of X());
let v being (Element of A());
assume S1: [ s,v ] in F;
now
let Y being set;
assume Y in M;
then (G[ Y ] & [ s,v ] in Y) by S1,A1,SETFAM_1:def 1;
hence [ ( push (a,s) ),d(a,v) ] in Y;
end;
hence [ ( push (a,s) ),d(a,v) ] in F by SETFAM_1:def 1;
end;
defpred Q[ (stack of X()) ]
 means
(ex y being set st [ $1,y ] in F);
A6: (for s being (stack of X()) holds ( emp s implies Q[ s ]))
proof
let s being (stack of X());
assume Z0:  emp s;
take y = e();
(for Y being set holds (Y in M implies [ s,e() ] in Y)) by Z0,A1;
hence thesis by SETFAM_1:def 1;
end;
A7: (for s being (stack of X()) holds (for e being (Element of X()) holds (Q[ s ] implies Q[ ( push (e,s) ) ])))
proof
let s being (stack of X());
let e being (Element of X());
given y being set such that
M1: [ s,y ] in F;

reconsider y as (Element of A()) by M1,ZFMISC_1:87;
take z = d(e,y);
now
let Y being set;
assume M2: Y in M;
then [ s,y ] in Y by M1,SETFAM_1:def 1;
hence [ ( push (e,s) ),z ] in Y by M2,A1;
end;
hence thesis by SETFAM_1:def 1;
end;
A3: (for s being (stack of X()) holds ( emp s implies P[ s ]))
proof
let s being (stack of X());
assume B1:  emp s;
let y1 being set;
let y2 being set;
assume B2: ([ s,y1 ] in F & [ s,y2 ] in F);
set Y1 = ( F \ { [ s,y1 ] } );
set Y2 = ( F \ { [ s,y2 ] } );
B8:now
assume B4: y1 <> e();
G[ Y1 ]
proof
hereby
let s1 being (stack of X());
assume  emp s1;
then B5: [ s1,e() ] in F by A8;
[ s,y1 ] <> [ s1,e() ] by B4,ZFMISC_1:27;
then [ s1,e() ] nin { [ s,y1 ] } by TARSKI:def 1;
hence [ s1,e() ] in Y1 by B5,XBOOLE_0:def 5;
end;
let s1 being (stack of X());
let a being (Element of X());
let v being (Element of A());
assume [ s1,v ] in Y1;
then [ s1,v ] in F by XBOOLE_0:def 5;
then B6: [ ( push (a,s1) ),d(a,v) ] in F by A8;
( push (a,s1) ) <> s by B1,CKB25:def 1;
then [ s,y1 ] <> [ ( push (a,s1) ),d(a,v) ] by ZFMISC_1:27;
then [ ( push (a,s1) ),d(a,v) ] nin { [ s,y1 ] } by TARSKI:def 1;
hence [ ( push (a,s1) ),d(a,v) ] in Y1 by B6,XBOOLE_0:def 5;
end;
then Y1 in M by A1;
then F c= Y1 by SETFAM_1:3;
then ([ s,y1 ] in Y1 & [ s,y1 ] in { [ s,y1 ] }) by B2,TARSKI:def 1;
hence contradiction by XBOOLE_0:def 5;
end;
now
assume B4: y2 <> e();
G[ Y2 ]
proof
hereby
let s1 being (stack of X());
assume  emp s1;
then B5: [ s1,e() ] in F by A8;
[ s,y2 ] <> [ s1,e() ] by B4,ZFMISC_1:27;
then [ s1,e() ] nin { [ s,y2 ] } by TARSKI:def 1;
hence [ s1,e() ] in Y2 by B5,XBOOLE_0:def 5;
end;
let s1 being (stack of X());
let a being (Element of X());
let v being (Element of A());
assume [ s1,v ] in Y2;
then [ s1,v ] in F by XBOOLE_0:def 5;
then B6: [ ( push (a,s1) ),d(a,v) ] in F by A8;
( push (a,s1) ) <> s by B1,CKB25:def 1;
then [ s,y2 ] <> [ ( push (a,s1) ),d(a,v) ] by ZFMISC_1:27;
then [ ( push (a,s1) ),d(a,v) ] nin { [ s,y2 ] } by TARSKI:def 1;
hence [ ( push (a,s1) ),d(a,v) ] in Y2 by B6,XBOOLE_0:def 5;
end;
then Y2 in M by A1;
then F c= Y2 by SETFAM_1:3;
then ([ s,y2 ] in Y2 & [ s,y2 ] in { [ s,y2 ] }) by B2,TARSKI:def 1;
hence contradiction by XBOOLE_0:def 5;
end;
hence y1 = y2 by B8;
end;
A4: (for s being (stack of X()) holds (for e being (Element of X()) holds (P[ s ] implies P[ ( push (e,s) ) ])))
proof
let s being (stack of X());
let e being (Element of X());
assume C1: P[ s ];
let y1 being set;
let y2 being set;
assume C2: ([ ( push (e,s) ),y1 ] in F & [ ( push (e,s) ),y2 ] in F);
Q[ s ] from CKB37:sch 1(A6,A7);
then consider y being set such that C9: [ s,y ] in F;
reconsider y as (Element of A()) by C9,ZFMISC_1:87;
set Y1 = ( F \ { [ ( push (e,s) ),y1 ] } );
set Y2 = ( F \ { [ ( push (e,s) ),y2 ] } );
C8:now
assume C4: y1 <> d(e,y);
G[ Y1 ]
proof
hereby
let s1 being (stack of X());
assume C11:  emp s1;
then C5: [ s1,e() ] in F by A8;
(not  emp ( push (e,s) )) by CKB25:def 1;
then [ ( push (e,s) ),y1 ] <> [ s1,e() ] by C11,ZFMISC_1:27;
then [ s1,e() ] nin { [ ( push (e,s) ),y1 ] } by TARSKI:def 1;
hence [ s1,e() ] in Y1 by C5,XBOOLE_0:def 5;
end;
let s1 being (stack of X());
let a being (Element of X());
let v being (Element of A());
assume [ s1,v ] in Y1;
then C10: [ s1,v ] in F by XBOOLE_0:def 5;
then C6: [ ( push (a,s1) ),d(a,v) ] in F by A8;
now
assume [ ( push (e,s) ),y1 ] = [ ( push (a,s1) ),d(a,v) ];
then C12: (( push (e,s) ) = ( push (a,s1) ) & y1 = d(a,v)) by ZFMISC_1:27;
then (e = a & s = s1) by CKB35:1;
hence contradiction by C1,C9,C10,C4,C12;
end;
then [ ( push (a,s1) ),d(a,v) ] nin { [ ( push (e,s) ),y1 ] } by TARSKI:def 1;
hence [ ( push (a,s1) ),d(a,v) ] in Y1 by C6,XBOOLE_0:def 5;
end;
then Y1 in M by A1;
then F c= Y1 by SETFAM_1:3;
then ([ ( push (e,s) ),y1 ] in Y1 & [ ( push (e,s) ),y1 ] in { [ ( push (e,s) ),y1 ] }) by C2,TARSKI:def 1;
hence contradiction by XBOOLE_0:def 5;
end;
now
assume C4: y2 <> d(e,y);
G[ Y2 ]
proof
hereby
let s1 being (stack of X());
assume C11:  emp s1;
then C5: [ s1,e() ] in F by A8;
(not  emp ( push (e,s) )) by CKB25:def 1;
then [ ( push (e,s) ),y2 ] <> [ s1,e() ] by C11,ZFMISC_1:27;
then [ s1,e() ] nin { [ ( push (e,s) ),y2 ] } by TARSKI:def 1;
hence [ s1,e() ] in Y2 by C5,XBOOLE_0:def 5;
end;
let s1 being (stack of X());
let a being (Element of X());
let v being (Element of A());
assume [ s1,v ] in Y2;
then C10: [ s1,v ] in F by XBOOLE_0:def 5;
then C6: [ ( push (a,s1) ),d(a,v) ] in F by A8;
now
assume [ ( push (e,s) ),y2 ] = [ ( push (a,s1) ),d(a,v) ];
then C12: (( push (e,s) ) = ( push (a,s1) ) & y2 = d(a,v)) by ZFMISC_1:27;
then (e = a & s = s1) by CKB35:1;
hence contradiction by C1,C9,C10,C4,C12;
end;
then [ ( push (a,s1) ),d(a,v) ] nin { [ ( push (e,s) ),y2 ] } by TARSKI:def 1;
hence [ ( push (a,s1) ),d(a,v) ] in Y2 by C6,XBOOLE_0:def 5;
end;
then Y2 in M by A1;
then F c= Y2 by SETFAM_1:3;
then ([ ( push (e,s) ),y2 ] in Y2 & [ ( push (e,s) ),y2 ] in { [ ( push (e,s) ),y2 ] }) by C2,TARSKI:def 1;
hence contradiction by XBOOLE_0:def 5;
end;
hence y1 = y2 by C8;
end;
A5: F is  Function-like
proof
let x being set;
let y1 being set;
let y2 being set;
assume B1: ([ x,y1 ] in F & [ x,y2 ] in F);
then reconsider x as (stack of X()) by ZFMISC_1:87;
P[ x ] from CKB37:sch 1(A3,A4);
hence thesis by B1;
end;
F is  quasi_total
proof
per cases ;
case (A() = ( {} ) implies (the carrier' of X()) = ( {} ));
thus (the carrier' of X()) c= ( dom F )
proof
let x;
assume x in (the carrier' of X());
then reconsider x as (stack of X());
Q[ x ] from CKB37:sch 1(A6,A7);
hence thesis by RELAT_1:def 4;
end;

thus thesis;
end;
case (A() = ( {} ) & (the carrier' of X()) <> ( {} ));
hence thesis;
end;
end;
then reconsider F as (Function of (the carrier' of X()),A()) by A5;
take a = ( F . s() );
take F;
thus a = ( F . s() );
hereby
let s1 being (stack of X());
assume  emp s1;
then [ s1,e() ] in F by A8;
hence ( F . s1 ) = e() by FUNCT_1:1;
end;
let s1 being (stack of X());
let e being (Element of X());
( dom F ) = (the carrier' of X()) by FUNCT_2:def 1;
then [ s1,( F . s1 ) ] in F by FUNCT_1:def 2;
then [ ( push (e,s1) ),d(e,( F . s1 )) ] in F by A8;
hence ( F . ( push (e,s1) ) ) = d(e,( F . s1 )) by FUNCT_1:1;
end;
