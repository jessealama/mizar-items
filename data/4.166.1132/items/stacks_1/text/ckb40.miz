environ
vocabularies STACKS_1,XBOOLE_0,STRUCT_0,ZFMISC_1,SUBSET_1,FUNCT_1,NUMBERS,NAT_1,TARSKI,ARYTM_3,RELAT_1,FINSEQ_1,FINSEQ_3,ORDINAL4,FUNCOP_1,PARTFUN1,CARD_1,XXREAL_0,COMPLEX1,GLIB_000,RELAT_2,EQREL_1,FILTER_1,BINOP_1,MCART_1,ORDERS_1,WELLORD1,ARYTM_1,SETFAM_1,FUNCT_2,AOFA_000,PBOOLE,FUNCT_4,MATRIX_7,REWRITE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,RELAT_2,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,DOMAIN_1,FUNCT_3,FUNCOP_1,ORDERS_1,FUNCT_4,NUMBERS,XXREAL_0,NAT_1,NAT_D,FINSEQ_1,FINSEQ_2,EQREL_1,FINSEQ_3,PBOOLE,FUNCT_7,STRUCT_0,FILTER_1,REWRITE1,ABCMIZ_1,AOFA_000,CKB1,CKB2,CKB5,CKB7,CKB8,CKB9,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB32;
definitions TARSKI,XBOOLE_0,RELAT_1,FUNCT_1,RELAT_2,PARTFUN1,FUNCT_2,FINSEQ_1,BINOP_1,FILTER_1,REWRITE1,CKB5,CKB7,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25;
theorems TARSKI,XBOOLE_1,FINSEQ_1,FINSEQ_3,FINSEQ_5,NAT_1,NAT_D,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_3,FUNCOP_1,WSIERP_1,BINOP_1,POLYALG1,EQREL_1,WELLORD2,RELSET_1,ORDINAL1,XREAL_1,NAT_2,ZFMISC_1,SETFAM_1,RELAT_1,XBOOLE_0,ORDERS_1,MATRIX_7,FUNCT_7,FILTER_1,FUNCT_4,REWRITE1,XXREAL_0,MSUALG_8,HILBERT2,RLVECT_3,FINSEQOP,FINSEQ_2,CKB3,CKB5,CKB7,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB33,CKB35,CKB36;
schemes XBOOLE_0,RELSET_1,NAT_1,FUNCT_2,BINOP_1,RECDEF_1,ALTCAT_1,FUNCT_1,FINSEQ_1,FINSEQ_2,CKB4,CKB6,CKB37,CKB38,CKB39;
registrations XBOOLE_0,RELSET_1,STRUCT_0,RELAT_1,FUNCT_1,FINSEQ_1,PARTFUN1,FUNCT_2,NAT_1,ORDINAL1,XXREAL_0,XREAL_0,CARD_1,EQREL_1,SUBSET_1,REWRITE1,CKB9,CKB10,CKB11,CKB12,CKB19,CKB20,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB34;
constructors BINOP_1,DOMAIN_1,XXREAL_0,RELSET_1,FILTER_1,FUNCT_7,REWRITE1,ABCMIZ_1,POLYNOM3,NAT_D,CKB1,CKB2,CKB5,CKB7,CKB8,CKB9,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25;
requirements BOOLE,SUBSET,NUMERALS,ARITHM,REAL;
begin
reserve X for StackAlgebra;
reserve s for (stack of X);
reserve s1 for (stack of X);
reserve e for (Element of X);
definition
let X;
let s;
func |.s .| -> (Element of ( (the carrier of X) * ))
means
:MOD: (ex F being (Function of (the carrier' of X),( (the carrier of X) * )) st ((it = ( F . s ) & (for s1 holds ( emp s1 implies ( F . s1 ) = ( {} )))) & (for s1 holds (for e holds ( F . ( push (e,s1) ) ) = ( <* e *> ^ ( F . s1 ) )))));
existence
proof
deffunc d((Element of X),(Element of ( (the carrier of X) * ))) = ( <* $1 *> ^ $2 );
reconsider w = ( <*> (the carrier of X) ) as (Element of ( (the carrier of X) * )) by FINSEQ_1:def 11;
(ex a being (Element of ( (the carrier of X) * )) st (ex F being (Function of (the carrier' of X),( (the carrier of X) * )) st ((a = ( F . s ) & (for s1 holds ( emp s1 implies ( F . s1 ) = w))) & (for s1 holds (for e holds ( F . ( push (e,s1) ) ) = d(e,(( F . s1 ) qua (Element of ( (the carrier of X) * ))))))))) from CKB38:sch 1;
hence thesis;
end;
uniqueness
proof
deffunc d((Element of X),(Element of ( (the carrier of X) * ))) = ( <* $1 *> ^ $2 );
reconsider w = ( <*> (the carrier of X) ) as (Element of ( (the carrier of X) * )) by FINSEQ_1:def 11;
(for a1,a2 being (Element of ( (the carrier of X) * )) holds (((ex F being (Function of (the carrier' of X),( (the carrier of X) * )) st ((a1 = ( F . s ) & (for s1 holds ( emp s1 implies ( F . s1 ) = w))) & (for s1 holds (for e holds ( F . ( push (e,s1) ) ) = d(e,(( F . s1 ) qua (Element of ( (the carrier of X) * )))))))) & (ex F being (Function of (the carrier' of X),( (the carrier of X) * )) st ((a2 = ( F . s ) & (for s1 holds ( emp s1 implies ( F . s1 ) = w))) & (for s1 holds (for e holds ( F . ( push (e,s1) ) ) = d(e,(( F . s1 ) qua (Element of ( (the carrier of X) * ))))))))) implies a1 = a2)) from CKB39:sch 1;
hence thesis;
end;
end;
