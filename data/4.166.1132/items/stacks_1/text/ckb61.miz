environ
vocabularies STACKS_1,XBOOLE_0,STRUCT_0,ZFMISC_1,SUBSET_1,FUNCT_1,NUMBERS,NAT_1,TARSKI,ARYTM_3,RELAT_1,FINSEQ_1,FINSEQ_3,ORDINAL4,FUNCOP_1,PARTFUN1,CARD_1,XXREAL_0,COMPLEX1,GLIB_000,RELAT_2,EQREL_1,FILTER_1,BINOP_1,MCART_1,ORDERS_1,WELLORD1,ARYTM_1,SETFAM_1,FUNCT_2,AOFA_000,PBOOLE,FUNCT_4,MATRIX_7,REWRITE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,RELAT_2,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,DOMAIN_1,FUNCT_3,FUNCOP_1,ORDERS_1,FUNCT_4,NUMBERS,XXREAL_0,NAT_1,NAT_D,FINSEQ_1,FINSEQ_2,EQREL_1,FINSEQ_3,PBOOLE,FUNCT_7,STRUCT_0,FILTER_1,REWRITE1,ABCMIZ_1,AOFA_000,CKB1,CKB2,CKB5,CKB7,CKB8,CKB9,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB32,CKB40,CKB49,CKB56,CKB58;
definitions TARSKI,XBOOLE_0,RELAT_1,FUNCT_1,RELAT_2,PARTFUN1,FUNCT_2,FINSEQ_1,BINOP_1,FILTER_1,REWRITE1,CKB5,CKB7,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB40,CKB49,CKB56,CKB58;
theorems TARSKI,XBOOLE_1,FINSEQ_1,FINSEQ_3,FINSEQ_5,NAT_1,NAT_D,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_3,FUNCOP_1,WSIERP_1,BINOP_1,POLYALG1,EQREL_1,WELLORD2,RELSET_1,ORDINAL1,XREAL_1,NAT_2,ZFMISC_1,SETFAM_1,RELAT_1,XBOOLE_0,ORDERS_1,MATRIX_7,FUNCT_7,FILTER_1,FUNCT_4,REWRITE1,XXREAL_0,MSUALG_8,HILBERT2,RLVECT_3,FINSEQOP,FINSEQ_2,CKB3,CKB5,CKB7,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB33,CKB35,CKB36,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB58,CKB60;
schemes XBOOLE_0,RELSET_1,NAT_1,FUNCT_2,BINOP_1,RECDEF_1,ALTCAT_1,FUNCT_1,FINSEQ_1,FINSEQ_2,CKB4,CKB6,CKB37,CKB38,CKB39;
registrations XBOOLE_0,RELSET_1,STRUCT_0,RELAT_1,FUNCT_1,FINSEQ_1,PARTFUN1,FUNCT_2,NAT_1,ORDINAL1,XXREAL_0,XREAL_0,CARD_1,EQREL_1,SUBSET_1,REWRITE1,CKB9,CKB10,CKB11,CKB12,CKB19,CKB20,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB34,CKB57,CKB59;
constructors BINOP_1,DOMAIN_1,XXREAL_0,RELSET_1,FILTER_1,FUNCT_7,REWRITE1,ABCMIZ_1,POLYNOM3,NAT_D,CKB1,CKB2,CKB5,CKB7,CKB8,CKB9,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB40,CKB49,CKB56,CKB58;
requirements BOOLE,SUBSET,NUMERALS,ARITHM,REAL;
begin
reserve x for set;
reserve A for non  empty set;
reserve X for StackAlgebra;
reserve s for (stack of X);
reserve s1 for (stack of X);
reserve e for (Element of X);
definition
let X;
let s;
func coset s -> (Subset of (the carrier' of X)) means 
:COSET: ((s in it & (for e holds (for s1 holds (s1 in it implies (( push (e,s1) ) in it & ((not  emp s1) implies ( pop s1 ) in it)))))) & (for A being (Subset of (the carrier' of X)) holds ((s in A & (for e holds (for s1 holds (s1 in A implies (( push (e,s1) ) in A & ((not  emp s1) implies ( pop s1 ) in A)))))) implies it c= A)));
existence
proof
defpred P[ set ]
 means
(s in $1 & (for e holds (for s1 holds (s1 in $1 implies (( push (e,s1) ) in $1 & ((not  emp s1) implies ( pop s1 ) in $1))))));
consider Y being set such that A1: (x in Y iff (x in ( bool (the carrier' of X) ) & P[ x ])) from XBOOLE_0:sch 1;
set S = (the carrier' of X);
B1: (P[ (the carrier' of X) ] & S in ( bool S )) by ZFMISC_1:def 1;
then A2: (the carrier' of X) in Y by A1;
reconsider Y as non  empty set by B1,A1;
reconsider C = ( meet Y ) as (Subset of S) by A2,SETFAM_1:3;
take C;
(for x holds (x in Y implies s in x)) by A1;
hence s in C by SETFAM_1:def 1;
hereby
let e;
let s1;
assume A3: s1 in C;
now
let x;
assume A6: x in Y;
then s1 in x by A3,SETFAM_1:def 1;
hence ( push (e,s1) ) in x by A1,A6;
end;
hence ( push (e,s1) ) in C by SETFAM_1:def 1;
assume A4: (not  emp s1);
now
let x;
assume A5: x in Y;
then s1 in x by A3,SETFAM_1:def 1;
hence ( pop s1 ) in x by A1,A4,A5;
end;
hence ( pop s1 ) in C by SETFAM_1:def 1;
end;
let A being (Subset of (the carrier' of X));
assume P[ A ];
then A in Y by A1;
hence C c= A by SETFAM_1:3;
end;
uniqueness
proof
let C1 being (Subset of (the carrier' of X));
let C2 being (Subset of (the carrier' of X));
assume A1: (not thesis);
C1 = C2
proof
thus (C1 c= C2 & C2 c= C1) by A1;
end;
hence thesis by A1;
end;
end;
