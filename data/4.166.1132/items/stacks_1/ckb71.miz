environ
vocabularies STACKS_1,XBOOLE_0,STRUCT_0,ZFMISC_1,SUBSET_1,FUNCT_1,NUMBERS,NAT_1,TARSKI,ARYTM_3,RELAT_1,FINSEQ_1,FINSEQ_3,ORDINAL4,FUNCOP_1,PARTFUN1,CARD_1,XXREAL_0,COMPLEX1,GLIB_000,RELAT_2,EQREL_1,FILTER_1,BINOP_1,MCART_1,ORDERS_1,WELLORD1,ARYTM_1,SETFAM_1,FUNCT_2,AOFA_000,PBOOLE,FUNCT_4,MATRIX_7,REWRITE1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,RELAT_2,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,DOMAIN_1,FUNCT_3,FUNCOP_1,ORDERS_1,FUNCT_4,NUMBERS,XXREAL_0,NAT_1,NAT_D,FINSEQ_1,FINSEQ_2,EQREL_1,FINSEQ_3,PBOOLE,FUNCT_7,STRUCT_0,FILTER_1,REWRITE1,ABCMIZ_1,AOFA_000,CKB1,CKB2,CKB5,CKB7,CKB8,CKB9,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB32,CKB40,CKB49,CKB56,CKB58,CKB61,CKB66;
definitions TARSKI,XBOOLE_0,RELAT_1,FUNCT_1,RELAT_2,PARTFUN1,FUNCT_2,FINSEQ_1,BINOP_1,FILTER_1,REWRITE1,CKB5,CKB7,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB40,CKB49,CKB56,CKB58,CKB61,CKB66;
theorems TARSKI,XBOOLE_1,FINSEQ_1,FINSEQ_3,FINSEQ_5,NAT_1,NAT_D,FUNCT_1,PARTFUN1,FUNCT_2,FUNCT_3,FUNCOP_1,WSIERP_1,BINOP_1,POLYALG1,EQREL_1,WELLORD2,RELSET_1,ORDINAL1,XREAL_1,NAT_2,ZFMISC_1,SETFAM_1,RELAT_1,XBOOLE_0,ORDERS_1,MATRIX_7,FUNCT_7,FILTER_1,FUNCT_4,REWRITE1,XXREAL_0,MSUALG_8,HILBERT2,RLVECT_3,FINSEQOP,FINSEQ_2,CKB3,CKB5,CKB7,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB33,CKB35,CKB36,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB58,CKB60,CKB61,CKB62,CKB63,CKB64,CKB66,CKB67,CKB69,CKB70;
schemes XBOOLE_0,RELSET_1,NAT_1,FUNCT_2,BINOP_1,RECDEF_1,ALTCAT_1,FUNCT_1,FINSEQ_1,FINSEQ_2,CKB4,CKB6,CKB37,CKB38,CKB39,CKB68;
registrations XBOOLE_0,RELSET_1,STRUCT_0,RELAT_1,FUNCT_1,FINSEQ_1,PARTFUN1,FUNCT_2,NAT_1,ORDINAL1,XXREAL_0,XREAL_0,CARD_1,EQREL_1,SUBSET_1,REWRITE1,CKB9,CKB10,CKB11,CKB12,CKB19,CKB20,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB34,CKB57,CKB59,CKB65;
constructors BINOP_1,DOMAIN_1,XXREAL_0,RELSET_1,FILTER_1,FUNCT_7,REWRITE1,ABCMIZ_1,POLYNOM3,NAT_D,CKB1,CKB2,CKB5,CKB7,CKB8,CKB9,CKB14,CKB15,CKB16,CKB17,CKB18,CKB21,CKB22,CKB23,CKB24,CKB25,CKB40,CKB49,CKB56,CKB58,CKB61,CKB66;
requirements BOOLE,SUBSET,NUMERALS,ARITHM,REAL;
begin
reserve i for Nat;
reserve j for Nat;
reserve x for set;
reserve X for StackAlgebra;
reserve s for (stack of X);
reserve s1 for (stack of X);
definition
let X;
let s;
func core s -> (stack of X)
means
:CORE: ( emp it & (ex t being (the carrier' of X) -valued (RedSequence of ( ConstructionRed X )) st ((( t . 1 ) = s & ( t . ( len t ) ) = it) & (for i holds ((1 <= i & i < ( len t )) implies ((not  emp ( t /. i )) & ( t /. ( i + 1 ) ) = ( pop ( t /. i ) )))))));
existence
proof
set R = ( ConstructionRed X );
deffunc F((stack of X)) = ( pop $1 );
defpred P[ set,(stack of X),set ]
 means
$3 = ( IFIN ($2,(the s_empty of X),s,( pop $2 )) );
A0: (for n being (Element of ( NAT )) holds (for x being (stack of X) holds (ex y being (stack of X) st P[ n,x,y ])));
consider f being (Function of ( NAT ),(the carrier' of X)) such that A1: (( f . ( 0 ) ) = s & (for i being (Element of ( NAT )) holds P[ i,( f . i ),( f . ( i + 1 ) ) ])) from RECDEF_1:sch 2(A0);
defpred R[ Nat ]
 means
(ex s1 st (( f . $1 ) = s1 & ((not  emp s1) implies ( f . ( $1 + 1 ) ) <> ( pop s1 ))));
A5: (ex i st R[ i ]) by CKB21:def 1;
consider i such that A6: (R[ i ] & (for j being Nat holds (R[ j ] implies i <= j))) from NAT_1:sch 5(A5);
deffunc F(Nat) = ( f . ( $1 -' 1 ) );
consider t being FinSequence such that A7: (( len t ) = ( i + 1 ) & (for j being Nat holds (j in ( dom t ) implies ( t . j ) = F(j)))) from FINSEQ_1:sch 2;
consider s1 such that A8: (( f . i ) = s1 & ((not  emp s1) implies ( f . ( i + 1 ) ) <> ( pop s1 ))) by A6;
take s1;
i in ( NAT ) by ORDINAL1:def 12;
then ( f . ( i + 1 ) ) = ( IFIN (( f . i ),(the s_empty of X),s,( pop ( f . i ) )) ) by A1;
then ((( f . i ) in (the s_empty of X) implies ( f . ( i + 1 ) ) = s) & (( f . i ) nin (the s_empty of X) implies ( f . ( i + 1 ) ) = ( pop ( f . i ) ))) by MATRIX_7:def 1;
hence  emp s1 by A8,CKB14:def 1;
A9: t is (RedSequence of R)
proof
thus ( len t ) > ( 0 ) by A7;
let j being (Element of ( NAT ));
assume B1: (j in ( dom t ) & ( j + 1 ) in ( dom t ));
then ((j >= 1 & j <= ( i + 1 )) & ( j + 1 ) <= ( i + 1 )) by A7,FINSEQ_3:25;
then B2: ((( ( j -' 1 ) + 1 ) = j & ( ( j + 1 ) -' 1 ) = j) & j <= i) by NAT_D:34,XREAL_1:6,XREAL_1:235;
( j -' 1 ) < i by B2,NAT_1:13;
then B7: (not  emp ( f . ( j -' 1 ) )) by A6;
then B4: ( f . ( j -' 1 ) ) nin (the s_empty of X) by CKB14:def 1;
B5: (( t . j ) = ( f . ( j -' 1 ) ) & ( t . ( j + 1 ) ) = ( f . j )) by A7,B1,B2;
then P[ ( j -' 1 ),( f . ( j -' 1 ) ),( t . ( j + 1 ) ) ] by A1,B2;
then ( t . ( j + 1 ) ) = ( pop ( f . ( j -' 1 ) ) ) by B4,MATRIX_7:def 1;
hence [ ( t . j ),( t . ( j + 1 ) ) ] in R by B5,B7,CKB66:def 1;
end;
then 1 in ( dom t ) by FINSEQ_5:6;
then C1: ( t . 1 ) = ( f . ( 1 -' 1 ) ) by A7
.= s by A1,XREAL_1:232;
then reconsider t as (the carrier' of X) -valued (RedSequence of R) by A9,CKB67:1;
take t;
thus ( t . 1 ) = s by C1;
( len t ) in ( dom t ) by FINSEQ_5:6;
hence ( t . ( len t ) ) = ( f . ( ( i + 1 ) -' 1 ) ) by A7
.= s1 by A8,NAT_D:34;
let k being Nat;
assume C2: (1 <= k & k < ( len t ));
then k in ( dom t ) by FINSEQ_3:25;
then C3: (( t . k ) = ( f . ( k -' 1 ) ) & ( t . k ) = ( t /. k )) by A7,PARTFUN1:def 6;
(1 <= ( k + 1 ) & ( k + 1 ) <= ( len t )) by C2,NAT_1:13;
then ( k + 1 ) in ( dom t ) by FINSEQ_3:25;
then C4: (( t . ( k + 1 ) ) = ( f . ( ( k + 1 ) -' 1 ) ) & ( t . ( k + 1 ) ) = ( t /. ( k + 1 ) )) by A7,PARTFUN1:def 6;
C6: (( ( k -' 1 ) + 1 ) = k & ( ( k + 1 ) -' 1 ) = k) by C2,NAT_D:34,XREAL_1:235;
then ( k -' 1 ) < i by A7,C2,XREAL_1:6;
hence (not  emp ( t /. k )) by A6,C3;
then C5: ( t /. k ) nin (the s_empty of X) by CKB14:def 1;
( f . k ) = ( IFIN (( f . ( k -' 1 ) ),(the s_empty of X),s,( pop ( f . ( k -' 1 ) ) )) ) by A1,C6;
hence ( t /. ( k + 1 ) ) = ( pop ( t /. k ) ) by C3,C4,C6,C5,MATRIX_7:def 1;
end;
uniqueness
proof
let x1 being (stack of X),x2 being (stack of X);
assume that
A1:  emp x1;
given t1 being (the carrier' of X) -valued (RedSequence of ( ConstructionRed X )) such that
A2: (( t1 . 1 ) = s & ( t1 . ( len t1 ) ) = x1)
and
A3: (for i holds ((1 <= i & i < ( len t1 )) implies ((not  emp ( t1 /. i )) & ( t1 /. ( i + 1 ) ) = ( pop ( t1 /. i ) ))));

assume B1:  emp x2;
given t2 being (the carrier' of X) -valued (RedSequence of ( ConstructionRed X )) such that
B2: (( t2 . 1 ) = s & ( t2 . ( len t2 ) ) = x2)
and
B3: (for i holds ((1 <= i & i < ( len t2 )) implies ((not  emp ( t2 /. i )) & ( t2 /. ( i + 1 ) ) = ( pop ( t2 /. i ) ))));

A4: (((( len t1 ) in ( dom t1 ) & ( len t2 ) in ( dom t2 )) & 1 in ( dom t1 )) & 1 in ( dom t2 )) by FINSEQ_5:6;
defpred P[ Nat ]
 means
(($1 in ( dom t1 ) iff $1 in ( dom t2 )) & ($1 in ( dom t1 ) implies ( t1 . $1 ) = ( t2 . $1 )));
I1: P[ ( 0 ) ] by FINSEQ_3:24;
I2: (P[ i ] implies P[ ( i + 1 ) ])
proof
assume J1: P[ i ];
per cases  by NAT_1:6;
suppose i = ( 0 );

hence thesis by A2,B2,FINSEQ_5:6;
end;
suppose (ex j st i = ( j + 1 ));

then consider j such that J2: i = ( j + 1 );
J4: i >= 1 by J2,NAT_1:11;
thus JJ:now
assume ( i + 1 ) in ( dom t1 );
then ( i + 1 ) <= ( len t1 ) by FINSEQ_3:25;
then i < ( len t1 ) by NAT_1:13;
then (i in ( dom t1 ) & (not  emp ( t1 /. i ))) by A3,J4,FINSEQ_3:25;
then (( len t2 ) <> i & i <= ( len t2 )) by B1,B2,J1,FINSEQ_3:25,PARTFUN1:def 6;
then i < ( len t2 ) by XXREAL_0:1;
then (1 <= ( i + 1 ) & ( i + 1 ) <= ( len t2 )) by NAT_1:11,NAT_1:13;
hence ( i + 1 ) in ( dom t2 ) by FINSEQ_3:25;
end;
hereby
assume ( i + 1 ) in ( dom t2 );
then ( i + 1 ) <= ( len t2 ) by FINSEQ_3:25;
then i < ( len t2 ) by NAT_1:13;
then (i in ( dom t2 ) & (not  emp ( t2 /. i ))) by B3,J4,FINSEQ_3:25;
then (( len t1 ) <> i & i <= ( len t1 )) by A1,A2,J1,FINSEQ_3:25,PARTFUN1:def 6;
then i < ( len t1 ) by XXREAL_0:1;
then (1 <= ( i + 1 ) & ( i + 1 ) <= ( len t1 )) by NAT_1:11,NAT_1:13;
hence ( i + 1 ) in ( dom t1 ) by FINSEQ_3:25;
end;
assume J3: ( i + 1 ) in ( dom t1 );
then (( i + 1 ) <= ( len t1 ) & ( i + 1 ) <= ( len t2 )) by JJ,FINSEQ_3:25;
then (i < ( len t1 ) & i < ( len t2 )) by NAT_1:13;
then J5: (((i in ( dom t1 ) & ( t1 /. ( i + 1 ) ) = ( pop ( t1 /. i ) )) & i in ( dom t2 )) & ( t2 /. ( i + 1 ) ) = ( pop ( t2 /. i ) )) by A3,B3,J4,FINSEQ_3:25;
then (((( t1 /. i ) = ( t1 . i ) & ( t2 /. i ) = ( t2 . i )) & ( t1 /. ( i + 1 ) ) = ( t1 . ( i + 1 ) )) & ( t2 /. ( i + 1 ) ) = ( t2 . ( i + 1 ) )) by J3,JJ,PARTFUN1:def 6;
hence thesis by J1,J5;
end;
end;
II: P[ i ] from NAT_1:sch 2(I1,I2);
( dom t1 ) = ( dom t2 )
proof
thus ( dom t1 ) c= ( dom t2 )
proof
let x;
thus thesis by II;
end;

let x;
thus thesis by II;
end;
then ( len t1 ) = ( len t2 ) by FINSEQ_3:29;
hence thesis by A2,B2,A4,II;
end;
end;
