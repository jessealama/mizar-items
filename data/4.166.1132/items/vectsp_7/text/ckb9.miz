environ
vocabularies VECTSP_1,SUBSET_1,FINSET_1,RLVECT_2,FUNCT_1,STRUCT_0,RLVECT_3,CARD_3,SUPINF_2,XBOOLE_0,TARSKI,GROUP_1,FUNCT_2,RELAT_1,ARYTM_1,ARYTM_3,MESFUNC1,RLSUB_1,ZFMISC_1,ORDINAL1,ORDERS_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FINSET_1,ORDERS_1,DOMAIN_1,STRUCT_0,ORDINAL1,RLVECT_1,GROUP_1,VECTSP_1,VECTSP_4,VECTSP_5,VECTSP_6,CKB1,CKB2;
definitions XBOOLE_0,VECTSP_4,VECTSP_6,TARSKI,CKB1;
theorems FUNCT_1,FINSET_1,ORDERS_1,RLVECT_3,TARSKI,VECTSP_1,VECTSP_2,VECTSP_4,VECTSP_5,VECTSP_6,ZFMISC_1,RLVECT_1,FUNCT_2,RELAT_1,ORDINAL1,XBOOLE_0,XBOOLE_1,CARD_2,STRUCT_0,CKB1,CKB3,CKB4,CKB7,CKB8;
schemes FUNCT_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FINSET_1,STRUCT_0,VECTSP_1,VECTSP_4,CKB5,CKB6;
constructors ORDERS_1,REALSET1,VECTSP_5,VECTSP_6,CKB1;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve GF for Field;
reserve a for (Element of GF);
reserve V for (VectSp of GF);
reserve v for (Vector of V);
reserve v1 for (Vector of V);
reserve v2 for (Vector of V);
reserve u for (Vector of V);
reserve A for (Subset of V);
reserve l for (Linear_Combination of A);
reserve f for (Function of (the carrier of V),(the carrier of GF));
theorem
Th8: ((v1 <> v2 & { v1,v2 } is  linearly-independent) iff (v2 <> ( 0. V ) & (for a holds v1 <> ( a * v2 ))))
proof
thus ((v1 <> v2 & { v1,v2 } is  linearly-independent) implies (v2 <> ( 0. V ) & (for a holds v1 <> ( a * v2 ))))
proof
deffunc F(set) = ( 0. GF );
assume that
A1: v1 <> v2
and
A2: { v1,v2 } is  linearly-independent;
thus v2 <> ( 0. V ) by A2,CKB8:1;
let a;
consider f such that A3: (( f . v1 ) = ( - ( 1_ GF ) ) & ( f . v2 ) = a) and A4: (for v being (Element of V) holds ((v <> v1 & v <> v2) implies ( f . v ) = F(v))) from FUNCT_2:sch 7(A1);
reconsider f as (Element of ( Funcs ((the carrier of V),(the carrier of GF)) )) by FUNCT_2:8;
now
let v;
assume (not v in { v1,v2 });
then (v <> v1 & v <> v2) by TARSKI:def 2;
hence ( f . v ) = ( 0. GF ) by A4;
end;
then reconsider f as (Linear_Combination of V) by VECTSP_6:def 1;
( Carrier f ) c= { v1,v2 }
proof
let x;
assume x in ( Carrier f );
then A5: (ex u st (x = u & ( f . u ) <> ( 0. GF )));
assume (not x in { v1,v2 });
then (x <> v1 & x <> v2) by TARSKI:def 2;
hence thesis by A4,A5;
end;
then reconsider f as (Linear_Combination of { v1,v2 }) by VECTSP_6:def 4;
A6:now
assume (not v1 in ( Carrier f ));
then ( 0. GF ) = ( - ( 1_ GF ) ) by A3;
hence contradiction by VECTSP_6:49;
end;
set w = ( a * v2 );
assume v1 = ( a * v2 );
then ( Sum f ) = ( ( ( - ( 1_ GF ) ) * w ) + w ) by A1,A3,VECTSP_6:18
.= ( ( - w ) + w ) by VECTSP_1:14
.= ( - ( w - w ) ) by VECTSP_1:17
.= ( - ( 0. V ) ) by VECTSP_1:19
.= ( 0. V ) by RLVECT_1:12;
hence thesis by A2,A6,CKB1:def 1;
end;

assume A7: v2 <> ( 0. V );
assume A8: (for a holds v1 <> ( a * v2 ));
A9: ( ( 1_ GF ) * v2 ) = v2 by VECTSP_1:def 17;
hence v1 <> v2 by A8;
let l being (Linear_Combination of { v1,v2 });
assume that
A10: ( Sum l ) = ( 0. V )
and
A11: ( Carrier l ) <> ( {} );
A12: ( 0. V ) = ( ( ( l . v1 ) * v1 ) + ( ( l . v2 ) * v2 ) ) by A8,A9,A10,VECTSP_6:18;
set x = the (Element of ( Carrier l ));
( Carrier l ) c= { v1,v2 } by VECTSP_6:def 4;
then A13: x in { v1,v2 } by A11,TARSKI:def 3;
x in ( Carrier l ) by A11;
then A14: (ex u st (x = u & ( l . u ) <> ( 0. GF )));
now
per cases  by A14,A13,TARSKI:def 2;
suppose A15: ( l . v1 ) <> ( 0. GF );

( 0. V ) = ( ( ( l . v1 ) " ) * ( ( ( l . v1 ) * v1 ) + ( ( l . v2 ) * v2 ) ) ) by A12,VECTSP_1:15
.= ( ( ( ( l . v1 ) " ) * ( ( l . v1 ) * v1 ) ) + ( ( ( l . v1 ) " ) * ( ( l . v2 ) * v2 ) ) ) by VECTSP_1:def 14
.= ( ( ( ( ( l . v1 ) " ) * ( l . v1 ) ) * v1 ) + ( ( ( l . v1 ) " ) * ( ( l . v2 ) * v2 ) ) ) by VECTSP_1:def 16
.= ( ( ( ( ( l . v1 ) " ) * ( l . v1 ) ) * v1 ) + ( ( ( ( l . v1 ) " ) * ( l . v2 ) ) * v2 ) ) by VECTSP_1:def 16
.= ( ( ( 1_ GF ) * v1 ) + ( ( ( ( l . v1 ) " ) * ( l . v2 ) ) * v2 ) ) by A15,VECTSP_1:def 10
.= ( v1 + ( ( ( ( l . v1 ) " ) * ( l . v2 ) ) * v2 ) ) by VECTSP_1:def 17;
then v1 = ( - ( ( ( ( l . v1 ) " ) * ( l . v2 ) ) * v2 ) ) by VECTSP_1:16
.= ( ( - ( 1_ GF ) ) * ( ( ( ( l . v1 ) " ) * ( l . v2 ) ) * v2 ) ) by VECTSP_1:14
.= ( ( ( - ( 1_ GF ) ) * ( ( ( l . v1 ) " ) * ( l . v2 ) ) ) * v2 ) by VECTSP_1:def 16;
hence thesis by A8;
end;
suppose A16: (( l . v2 ) <> ( 0. GF ) & ( l . v1 ) = ( 0. GF ));

( 0. V ) = ( ( ( l . v2 ) " ) * ( ( ( l . v1 ) * v1 ) + ( ( l . v2 ) * v2 ) ) ) by A12,VECTSP_1:15
.= ( ( ( ( l . v2 ) " ) * ( ( l . v1 ) * v1 ) ) + ( ( ( l . v2 ) " ) * ( ( l . v2 ) * v2 ) ) ) by VECTSP_1:def 14
.= ( ( ( ( ( l . v2 ) " ) * ( l . v1 ) ) * v1 ) + ( ( ( l . v2 ) " ) * ( ( l . v2 ) * v2 ) ) ) by VECTSP_1:def 16
.= ( ( ( ( ( l . v2 ) " ) * ( l . v1 ) ) * v1 ) + ( ( ( ( l . v2 ) " ) * ( l . v2 ) ) * v2 ) ) by VECTSP_1:def 16
.= ( ( ( ( ( l . v2 ) " ) * ( l . v1 ) ) * v1 ) + ( ( 1_ GF ) * v2 ) ) by A16,VECTSP_1:def 10
.= ( ( ( ( ( l . v2 ) " ) * ( l . v1 ) ) * v1 ) + v2 ) by VECTSP_1:def 17
.= ( ( ( 0. GF ) * v1 ) + v2 ) by A16,VECTSP_1:12
.= ( ( 0. V ) + v2 ) by VECTSP_1:15
.= v2 by RLVECT_1:4;
hence thesis by A7;
end;
end;
hence thesis;
end;
