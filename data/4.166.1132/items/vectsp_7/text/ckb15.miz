environ
vocabularies VECTSP_1,SUBSET_1,FINSET_1,RLVECT_2,FUNCT_1,STRUCT_0,RLVECT_3,CARD_3,SUPINF_2,XBOOLE_0,TARSKI,GROUP_1,FUNCT_2,RELAT_1,ARYTM_1,ARYTM_3,MESFUNC1,RLSUB_1,ZFMISC_1,ORDINAL1,ORDERS_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FINSET_1,ORDERS_1,DOMAIN_1,STRUCT_0,ORDINAL1,RLVECT_1,GROUP_1,VECTSP_1,VECTSP_4,VECTSP_5,VECTSP_6,CKB1,CKB2,CKB11;
definitions XBOOLE_0,VECTSP_4,VECTSP_6,TARSKI,CKB1,CKB11;
theorems FUNCT_1,FINSET_1,ORDERS_1,RLVECT_3,TARSKI,VECTSP_1,VECTSP_2,VECTSP_4,VECTSP_5,VECTSP_6,ZFMISC_1,RLVECT_1,FUNCT_2,RELAT_1,ORDINAL1,XBOOLE_0,XBOOLE_1,CARD_2,STRUCT_0,CKB1,CKB3,CKB4,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
schemes FUNCT_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FINSET_1,STRUCT_0,VECTSP_1,VECTSP_4,CKB5,CKB6;
constructors ORDERS_1,REALSET1,VECTSP_5,VECTSP_6,CKB1,CKB11;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve GF for Field;
reserve V for (VectSp of GF);
reserve A for (Subset of V);
theorem
(( Lin A ) = ( (0). V ) implies (A = ( {} ) or A = { ( 0. V ) }))
proof
assume that
A1: ( Lin A ) = ( (0). V )
and
A2: A <> ( {} );
thus A c= { ( 0. V ) }
proof
let x;
assume x in A;
then x in ( Lin A ) by CKB13:1;
then x = ( 0. V ) by A1,VECTSP_4:35;
hence thesis by TARSKI:def 1;
end;

set y = the (Element of A);
let x;
assume x in { ( 0. V ) };
then A3: x = ( 0. V ) by TARSKI:def 1;
(y in A & y in ( Lin A )) by A2,CKB13:1;
hence thesis by A1,A3,VECTSP_4:35;
end;
