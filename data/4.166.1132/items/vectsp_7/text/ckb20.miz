environ
vocabularies VECTSP_1,SUBSET_1,FINSET_1,RLVECT_2,FUNCT_1,STRUCT_0,RLVECT_3,CARD_3,SUPINF_2,XBOOLE_0,TARSKI,GROUP_1,FUNCT_2,RELAT_1,ARYTM_1,ARYTM_3,MESFUNC1,RLSUB_1,ZFMISC_1,ORDINAL1,ORDERS_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FINSET_1,ORDERS_1,DOMAIN_1,STRUCT_0,ORDINAL1,RLVECT_1,GROUP_1,VECTSP_1,VECTSP_4,VECTSP_5,VECTSP_6,CKB1,CKB2,CKB11;
definitions XBOOLE_0,VECTSP_4,VECTSP_6,TARSKI,CKB1,CKB11;
theorems FUNCT_1,FINSET_1,ORDERS_1,RLVECT_3,TARSKI,VECTSP_1,VECTSP_2,VECTSP_4,VECTSP_5,VECTSP_6,ZFMISC_1,RLVECT_1,FUNCT_2,RELAT_1,ORDINAL1,XBOOLE_0,XBOOLE_1,CARD_2,STRUCT_0,CKB1,CKB3,CKB4,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes FUNCT_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FINSET_1,STRUCT_0,VECTSP_1,VECTSP_4,CKB5,CKB6;
constructors ORDERS_1,REALSET1,VECTSP_5,VECTSP_6,CKB1,CKB11;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve GF for Field;
reserve V for (VectSp of GF);
reserve v for (Vector of V);
reserve u for (Vector of V);
reserve A for (Subset of V);
reserve B for (Subset of V);
reserve l for (Linear_Combination of A);
reserve f for (Function of (the carrier of V),(the carrier of GF));
reserve g for (Function of (the carrier of V),(the carrier of GF));
theorem
( Lin ( A \/ B ) ) = ( ( Lin A ) + ( Lin B ) )
proof
now
deffunc F(set) = ( 0. GF );
let v;
assume v in ( Lin ( A \/ B ) );
then consider l being (Linear_Combination of ( A \/ B )) such that A1: v = ( Sum l ) by CKB12:1;
deffunc G(set) = ( l . $1 );
set D = ( ( Carrier l ) \ A );
set C = ( ( Carrier l ) /\ A );
defpred P[ set ]
 means
$1 in C;
A2:now
let x;
assume x in (the carrier of V);
then reconsider v = x as (Vector of V);
( f . v ) in (the carrier of GF);
hence (P[ x ] implies G(x) in (the carrier of GF));
assume (not P[ x ]);
thus F(x) in (the carrier of GF);
end;
reconsider C as  finite (Subset of V);
defpred C[ set ]
 means
$1 in D;
reconsider D as  finite (Subset of V);
A3: D c= B
proof
let x;
assume x in D;
then A4: (x in ( Carrier l ) & (not x in A)) by XBOOLE_0:def 5;
( Carrier l ) c= ( A \/ B ) by VECTSP_6:def 4;
hence thesis by A4,XBOOLE_0:def 3;
end;
consider f being (Function of (the carrier of V),(the carrier of GF)) such that A5: (for x holds (x in (the carrier of V) implies ((P[ x ] implies ( f . x ) = G(x)) & ((not P[ x ]) implies ( f . x ) = F(x))))) from FUNCT_2:sch 5(A2);
reconsider f as (Element of ( Funcs ((the carrier of V),(the carrier of GF)) )) by FUNCT_2:8;
(for u holds ((not u in C) implies ( f . u ) = ( 0. GF ))) by A5;
then reconsider f as (Linear_Combination of V) by VECTSP_6:def 1;
A6: ( Carrier f ) c= C
proof
let x;
assume x in ( Carrier f );
then A7: (ex u st (x = u & ( f . u ) <> ( 0. GF )));
assume (not x in C);
hence thesis by A5,A7;
end;
C c= A by XBOOLE_1:17;
then ( Carrier f ) c= A by A6,XBOOLE_1:1;
then reconsider f as (Linear_Combination of A) by VECTSP_6:def 4;
deffunc G(set) = ( l . $1 );
A8:now
let x;
assume x in (the carrier of V);
then reconsider v = x as (Vector of V);
( g . v ) in (the carrier of GF);
hence (C[ x ] implies G(x) in (the carrier of GF));
assume (not C[ x ]);
thus F(x) in (the carrier of GF);
end;
consider g being (Function of (the carrier of V),(the carrier of GF)) such that A9: (for x holds (x in (the carrier of V) implies ((C[ x ] implies ( g . x ) = G(x)) & ((not C[ x ]) implies ( g . x ) = F(x))))) from FUNCT_2:sch 5(A8);
reconsider g as (Element of ( Funcs ((the carrier of V),(the carrier of GF)) )) by FUNCT_2:8;
(for u holds ((not u in D) implies ( g . u ) = ( 0. GF ))) by A9;
then reconsider g as (Linear_Combination of V) by VECTSP_6:def 1;
( Carrier g ) c= D
proof
let x;
assume x in ( Carrier g );
then A10: (ex u st (x = u & ( g . u ) <> ( 0. GF )));
assume (not x in D);
hence thesis by A9,A10;
end;
then ( Carrier g ) c= B by A3,XBOOLE_1:1;
then reconsider g as (Linear_Combination of B) by VECTSP_6:def 4;
l = ( f + g )
proof
let v;
now
per cases ;
suppose A11: v in C;

A12:now
assume v in D;
then (not v in A) by XBOOLE_0:def 5;
hence contradiction by A11,XBOOLE_0:def 4;
end;
thus ( ( f + g ) . v ) = ( ( f . v ) + ( g . v ) ) by VECTSP_6:22
.= ( ( l . v ) + ( g . v ) ) by A5,A11
.= ( ( l . v ) + ( 0. GF ) ) by A9,A12
.= ( l . v ) by RLVECT_1:4;
end;
suppose A13: (not v in C);

now
per cases ;
suppose A14: v in ( Carrier l );

A15:now
assume (not v in D);
then ((not v in ( Carrier l )) or v in A) by XBOOLE_0:def 5;
hence contradiction by A13,A14,XBOOLE_0:def 4;
end;
thus ( ( f + g ) . v ) = ( ( f . v ) + ( g . v ) ) by VECTSP_6:22
.= ( ( g . v ) + ( 0. GF ) ) by A5,A13
.= ( g . v ) by RLVECT_1:4
.= ( l . v ) by A9,A15;
end;
suppose A16: (not v in ( Carrier l ));

then A17: (not v in D) by XBOOLE_0:def 5;
A18: (not v in C) by A16,XBOOLE_0:def 4;
thus ( ( f + g ) . v ) = ( ( f . v ) + ( g . v ) ) by VECTSP_6:22
.= ( ( 0. GF ) + ( g . v ) ) by A5,A18
.= ( ( 0. GF ) + ( 0. GF ) ) by A9,A17
.= ( 0. GF ) by RLVECT_1:4
.= ( l . v ) by A16;
end;
end;
hence thesis;
end;
end;
hence thesis;
end;
then A19: v = ( ( Sum f ) + ( Sum g ) ) by A1,VECTSP_6:44;
(( Sum f ) in ( Lin A ) & ( Sum g ) in ( Lin B )) by CKB12:1;
hence v in ( ( Lin A ) + ( Lin B ) ) by A19,VECTSP_5:1;
end;
then A20: ( Lin ( A \/ B ) ) is (Subspace of ( ( Lin A ) + ( Lin B ) )) by VECTSP_4:28;
(( Lin A ) is (Subspace of ( Lin ( A \/ B ) )) & ( Lin B ) is (Subspace of ( Lin ( A \/ B ) ))) by CKB18:1,XBOOLE_1:7;
then ( ( Lin A ) + ( Lin B ) ) is (Subspace of ( Lin ( A \/ B ) )) by VECTSP_5:34;
hence thesis by A20,VECTSP_4:25;
end;
