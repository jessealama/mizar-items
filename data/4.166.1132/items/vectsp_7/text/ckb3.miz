environ
vocabularies VECTSP_1,SUBSET_1,FINSET_1,RLVECT_2,FUNCT_1,STRUCT_0,RLVECT_3,CARD_3,SUPINF_2,XBOOLE_0,TARSKI,GROUP_1,FUNCT_2,RELAT_1,ARYTM_1,ARYTM_3,MESFUNC1,RLSUB_1,ZFMISC_1,ORDINAL1,ORDERS_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FINSET_1,ORDERS_1,DOMAIN_1,STRUCT_0,ORDINAL1,RLVECT_1,GROUP_1,VECTSP_1,VECTSP_4,VECTSP_5,VECTSP_6,CKB1,CKB2;
definitions XBOOLE_0,VECTSP_4,VECTSP_6,TARSKI,CKB1;
theorems FUNCT_1,FINSET_1,ORDERS_1,RLVECT_3,TARSKI,VECTSP_1,VECTSP_2,VECTSP_4,VECTSP_5,VECTSP_6,ZFMISC_1,RLVECT_1,FUNCT_2,RELAT_1,ORDINAL1,XBOOLE_0,XBOOLE_1,CARD_2,STRUCT_0,CKB1;
schemes FUNCT_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FINSET_1,STRUCT_0,VECTSP_1,VECTSP_4;
constructors ORDERS_1,REALSET1,VECTSP_5,VECTSP_6,CKB1;
requirements SUBSET,BOOLE;
begin
reserve GF for Field;
reserve V for (VectSp of GF);
reserve A for (Subset of V);
reserve B for (Subset of V);
reserve l for (Linear_Combination of A);
theorem
((A c= B & B is  linearly-independent) implies A is  linearly-independent)
proof
assume that
A1: A c= B
and
A2: B is  linearly-independent;
let l being (Linear_Combination of A);
reconsider L = l as (Linear_Combination of B) by A1,VECTSP_6:4;
assume ( Sum l ) = ( 0. V );
then ( Carrier L ) = ( {} ) by A2,CKB1:def 1;
hence thesis;
end;
