environ
vocabularies VECTSP_1,SUBSET_1,FINSET_1,RLVECT_2,FUNCT_1,STRUCT_0,RLVECT_3,CARD_3,SUPINF_2,XBOOLE_0,TARSKI,GROUP_1,FUNCT_2,RELAT_1,ARYTM_1,ARYTM_3,MESFUNC1,RLSUB_1,ZFMISC_1,ORDINAL1,ORDERS_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FINSET_1,ORDERS_1,DOMAIN_1,STRUCT_0,ORDINAL1,RLVECT_1,GROUP_1,VECTSP_1,VECTSP_4,VECTSP_5,VECTSP_6,CKB1,CKB2;
definitions XBOOLE_0,VECTSP_4,VECTSP_6,TARSKI,CKB1;
theorems FUNCT_1,FINSET_1,ORDERS_1,RLVECT_3,TARSKI,VECTSP_1,VECTSP_2,VECTSP_4,VECTSP_5,VECTSP_6,ZFMISC_1,RLVECT_1,FUNCT_2,RELAT_1,ORDINAL1,XBOOLE_0,XBOOLE_1,CARD_2,STRUCT_0,CKB1,CKB3;
schemes FUNCT_1,FUNCT_2,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,RELSET_1,FINSET_1,STRUCT_0,VECTSP_1,VECTSP_4;
constructors ORDERS_1,REALSET1,VECTSP_5,VECTSP_6,CKB1;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve GF for Field;
reserve V for (VectSp of GF);
reserve v for (Vector of V);
reserve A for (Subset of V);
reserve T for  finite (Subset of V);
reserve f for (Function of (the carrier of V),(the carrier of GF));
theorem
Th3: (A is  linearly-independent implies (not ( 0. V ) in A))
proof
assume that
A1: A is  linearly-independent
and
A2: ( 0. V ) in A;
deffunc F(set) = ( 0. GF );
consider f such that A3: ( f . ( 0. V ) ) = ( 1_ GF ) and A4: (for v being (Element of V) holds (v <> ( 0. V ) implies ( f . v ) = F(v))) from FUNCT_2:sch 6;
reconsider f as (Element of ( Funcs ((the carrier of V),(the carrier of GF)) )) by FUNCT_2:8;
(ex T st (for v holds ((not v in T) implies ( f . v ) = ( 0. GF ))))
proof
take T = { ( 0. V ) };
let v;
assume (not v in T);
then v <> ( 0. V ) by TARSKI:def 1;
hence thesis by A4;
end;
then reconsider f as (Linear_Combination of V) by VECTSP_6:def 1;
A5: ( Carrier f ) = { ( 0. V ) }
proof
thus ( Carrier f ) c= { ( 0. V ) }
proof
let x;
assume x in ( Carrier f );
then consider v such that A6: v = x and A7: ( f . v ) <> ( 0. GF );
v = ( 0. V ) by A4,A7;
hence thesis by A6,TARSKI:def 1;
end;

let x;
assume x in { ( 0. V ) };
then x = ( 0. V ) by TARSKI:def 1;
hence thesis by A3;
end;
then ( Carrier f ) c= A by A2,ZFMISC_1:31;
then reconsider f as (Linear_Combination of A) by VECTSP_6:def 4;
( Sum f ) = ( ( f . ( 0. V ) ) * ( 0. V ) ) by A5,VECTSP_6:20
.= ( 0. V ) by VECTSP_1:15;
hence contradiction by A1,A5,CKB1:def 1;
end;
