environ
vocabularies NUMBERS,SUBSET_1,CQC_LANG,QC_LANG1,CQC_THE1,TARSKI,XBOOLE_0,XBOOLEAN,BVFUNC_2,RCOMP_1,XXREAL_0,FINSEQ_1,FUNCT_1,ARYTM_3,CARD_1,ZFREFLE1,FUNCOP_1,REALSET1,QC_LANG3,CQC_THE3;
notations TARSKI,XBOOLE_0,SUBSET_1,DOMAIN_1,NUMBERS,NAT_1,FUNCT_1,FINSEQ_1,QC_LANG1,QC_LANG3,CQC_LANG,CQC_THE1,XXREAL_0,CKB5,CKB8,CKB17,CKB21,CKB33,CKB47,CKB60;
definitions TARSKI,CKB5,CKB8,CKB17,CKB21,CKB33,CKB47,CKB60;
theorems TARSKI,ZFMISC_1,SUBSET_1,CQC_THE1,CQC_THE2,LUKASI_1,NAT_1,QC_LANG1,QC_LANG2,QC_LANG3,PROCAL_1,CQC_LANG,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72;
schemes NAT_1,QC_LANG1;
registrations SUBSET_1,RELSET_1,MEMBERED,CQC_LANG,LUKASI_1;
constructors DOMAIN_1,XXREAL_0,NAT_1,MEMBERED,QC_LANG3,CQC_THE1,CKB5,CKB8,CKB17,CKB21,CKB33,CKB47,CKB60;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve n for (Element of ( NAT ));
theorem
Th61: (for k being (Element of ( NAT )) holds (for l being (QC-variable_list of k) holds (for a being free_QC-variable holds (for x being bound_QC-variable holds ( still_not-bound_in l ) c= ( still_not-bound_in ( Subst (l,( a .--> x )) ) )))))
proof
let k being (Element of ( NAT ));
let l being (QC-variable_list of k);
let a being free_QC-variable;
let x being bound_QC-variable;
now
let y being set;
A1: ( still_not-bound_in l ) = { ( l . n ): ((1 <= n & n <= ( len l )) & ( l . n ) in ( bound_QC-variables )) } by QC_LANG1:def 27;
assume A2: y in ( still_not-bound_in l );
then reconsider y9 = y as (Element of ( still_not-bound_in l ));
A3: ( still_not-bound_in ( Subst (l,( a .--> x )) ) ) = { ( ( Subst (l,( a .--> x )) ) . n ): ((1 <= n & n <= ( len ( Subst (l,( a .--> x )) ) )) & ( ( Subst (l,( a .--> x )) ) . n ) in ( bound_QC-variables )) } by QC_LANG1:def 27;
consider n such that A4: y9 = ( l . n ) and A5: 1 <= n and A6: n <= ( len l ) and A7: ( l . n ) in ( bound_QC-variables ) by A1,A2;
( l . n ) <> a by A7,QC_LANG3:34;
then A8: ( l . n ) = ( ( Subst (l,( a .--> x )) ) . n ) by A5,A6,CQC_LANG:3;
n <= ( len ( Subst (l,( a .--> x )) ) ) by A6,CQC_LANG:def 1;
hence y in ( still_not-bound_in ( Subst (l,( a .--> x )) ) ) by A3,A4,A5,A7,A8;
end;
hence thesis by TARSKI:def 3;
end;
