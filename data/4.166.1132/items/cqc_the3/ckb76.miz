environ
vocabularies NUMBERS,SUBSET_1,CQC_LANG,QC_LANG1,CQC_THE1,TARSKI,XBOOLE_0,XBOOLEAN,BVFUNC_2,RCOMP_1,XXREAL_0,FINSEQ_1,FUNCT_1,ARYTM_3,CARD_1,ZFREFLE1,FUNCOP_1,REALSET1,QC_LANG3,CQC_THE3;
notations TARSKI,XBOOLE_0,SUBSET_1,DOMAIN_1,NUMBERS,NAT_1,FUNCT_1,FINSEQ_1,QC_LANG1,QC_LANG3,CQC_LANG,CQC_THE1,XXREAL_0,CKB5,CKB8,CKB17,CKB21,CKB33,CKB47,CKB60;
definitions TARSKI,CKB5,CKB8,CKB17,CKB21,CKB33,CKB47,CKB60;
theorems TARSKI,ZFMISC_1,SUBSET_1,CQC_THE1,CQC_THE2,LUKASI_1,NAT_1,QC_LANG1,QC_LANG2,QC_LANG3,PROCAL_1,CQC_LANG,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75;
schemes NAT_1,QC_LANG1;
registrations SUBSET_1,RELSET_1,MEMBERED,CQC_LANG,LUKASI_1;
constructors DOMAIN_1,XXREAL_0,NAT_1,MEMBERED,QC_LANG3,CQC_THE1,CKB5,CKB8,CKB17,CKB21,CKB33,CKB47,CKB60;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve h for QC-formula;
reserve x for bound_QC-variable;
theorem
Th64: (for h holds ( still_not-bound_in ( h . x ) ) c= ( ( still_not-bound_in h ) \/ { x } ))
proof
defpred P[ QC-formula ]
 means
( still_not-bound_in ( $1 . x ) ) c= ( ( still_not-bound_in $1 ) \/ { x } );
A1: (for p being (Element of ( QC-WFF )) holds (P[ p ] implies P[ ( 'not' p ) ]))
proof
let p being (Element of ( QC-WFF ));
( still_not-bound_in ( ( 'not' p ) . x ) ) = ( still_not-bound_in ( 'not' ( p . x ) ) ) by CQC_LANG:19
.= ( still_not-bound_in ( p . x ) ) by QC_LANG3:7;
hence thesis by QC_LANG3:7;
end;
A2: (for p,q being (Element of ( QC-WFF )) holds ((P[ p ] & P[ q ]) implies P[ ( p '&' q ) ]))
proof
let p being (Element of ( QC-WFF )),q being (Element of ( QC-WFF ));
assume that
A3: P[ p ]
and
A4: P[ q ];
A5: ( still_not-bound_in ( ( p '&' q ) . x ) ) = ( still_not-bound_in ( ( p . x ) '&' ( q . x ) ) ) by CQC_LANG:21
.= ( ( still_not-bound_in ( p . x ) ) \/ ( still_not-bound_in ( q . x ) ) ) by QC_LANG3:10;
A6: ( ( ( still_not-bound_in p ) \/ { x } ) \/ ( ( still_not-bound_in q ) \/ { x } ) ) = ( ( ( still_not-bound_in p ) \/ ( { x } \/ ( still_not-bound_in q ) ) ) \/ { x } ) by XBOOLE_1:4
.= ( ( ( ( still_not-bound_in p ) \/ ( still_not-bound_in q ) ) \/ { x } ) \/ { x } ) by XBOOLE_1:4
.= ( ( ( still_not-bound_in p ) \/ ( still_not-bound_in q ) ) \/ ( { x } \/ { x } ) ) by XBOOLE_1:4
.= ( ( ( still_not-bound_in p ) \/ ( still_not-bound_in q ) ) \/ { x } );
( ( still_not-bound_in ( p . x ) ) \/ ( still_not-bound_in ( q . x ) ) ) c= ( ( ( still_not-bound_in p ) \/ { x } ) \/ ( ( still_not-bound_in q ) \/ { x } ) ) by A3,A4,XBOOLE_1:13;
hence thesis by A5,A6,QC_LANG3:10;
end;
A7: (for x being bound_QC-variable holds (for p being (Element of ( QC-WFF )) holds (P[ p ] implies P[ ( All (x,p) ) ])))
proof
let y being bound_QC-variable;
let p being (Element of ( QC-WFF ));
assume that
A8: P[ p ];
per cases ;
suppose A9: y = x;

A10: ( ( still_not-bound_in p ) \ { x } ) c= ( still_not-bound_in p ) by XBOOLE_1:36;
A11: ( still_not-bound_in ( All (x,p) ) ) = ( ( still_not-bound_in p ) \ { x } ) by QC_LANG3:12;
( still_not-bound_in p ) c= ( still_not-bound_in ( p . x ) ) by CKB75:1;
then ( still_not-bound_in ( All (x,p) ) ) c= ( still_not-bound_in ( p . x ) ) by A11,A10,XBOOLE_1:1;
then A12: ( still_not-bound_in ( All (x,p) ) ) c= ( ( still_not-bound_in p ) \/ { x } ) by A8,XBOOLE_1:1;
( ( still_not-bound_in ( All (y,p) ) ) \/ { x } ) = ( ( ( still_not-bound_in p ) \ { x } ) \/ { x } ) by A9,QC_LANG3:12
.= ( ( still_not-bound_in p ) \/ { x } ) by XBOOLE_1:39;
hence thesis by A9,A12,CQC_LANG:24;
end;
suppose A13: y <> x;

A14: ( ( still_not-bound_in ( All (y,p) ) ) \/ { x } ) = ( ( ( still_not-bound_in p ) \ { y } ) \/ { x } ) by QC_LANG3:12
.= ( ( ( still_not-bound_in p ) \/ { x } ) \ { y } ) by A13,XBOOLE_1:87,ZFMISC_1:11;
( still_not-bound_in ( ( All (y,p) ) . x ) ) = ( still_not-bound_in ( All (y,( p . x )) ) ) by A13,CQC_LANG:25
.= ( ( still_not-bound_in ( p . x ) ) \ { y } ) by QC_LANG3:12;
hence thesis by A8,A14,XBOOLE_1:33;
end;
end;
A15: (for k being (Element of ( NAT )) holds (for P being (QC-pred_symbol of k) holds (for ll being (QC-variable_list of k) holds P[ ( P ! ll ) ])))
proof
let k being (Element of ( NAT ));
let P being (QC-pred_symbol of k);
let ll being (QC-variable_list of k);
A16: ( still_not-bound_in ( ( P ! ll ) . x ) ) = ( still_not-bound_in ( P ! ( Subst (ll,( ( a. ( 0 ) ) .--> x )) ) ) ) by CQC_LANG:17
.= ( still_not-bound_in ( Subst (ll,( ( a. ( 0 ) ) .--> x )) ) ) by QC_LANG3:5;
( still_not-bound_in ( Subst (ll,( ( a. ( 0 ) ) .--> x )) ) ) c= ( ( still_not-bound_in ll ) \/ { x } ) by CKB74:1;
hence thesis by A16,QC_LANG3:5;
end;
( ( VERUM ) . x ) = ( VERUM ) by CQC_LANG:15;
then A17: P[ ( VERUM ) ] by QC_LANG3:3,XBOOLE_1:2;
thus (for h holds P[ h ]) from QC_LANG1:sch 1(A15,A17,A1,A2,A7);
end;
