environ
vocabularies FUNCT_1,SUBSET_1,RELAT_1,FUNCT_2,XBOOLE_0,TARSKI,PBOOLE,ZFMISC_1,MCART_1,FUNCOP_1,STRUCT_0,CAT_1,RELAT_2,BINOP_1,CARD_1,ALTCAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,DOMAIN_1,RELAT_1,CARD_1,NUMBERS,STRUCT_0,FUNCT_1,FUNCT_2,BINOP_1,MULTOP_1,FUNCOP_1,PBOOLE,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB30,CKB33,CKB37,CKB38,CKB39,CKB44,CKB45,CKB46;
definitions TARSKI,STRUCT_0,XBOOLE_0,FUNCOP_1,BINOP_1,CKB17,CKB19,CKB20,CKB21,CKB24,CKB25,CKB26,CKB29,CKB30,CKB33,CKB37,CKB38,CKB39,CKB44,CKB45,CKB46;
theorems FUNCT_1,ZFMISC_1,PBOOLE,DOMAIN_1,MULTOP_1,MCART_1,FUNCT_2,TARSKI,FUNCOP_1,RELAT_1,REALSET1,STRUCT_0,RELSET_1,XBOOLE_0,XBOOLE_1,CARD_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB17,CKB19,CKB20,CKB21,CKB24,CKB25,CKB26,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB49,CKB50;
schemes FUNCT_1,CKB6,CKB7,CKB8,CKB9;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,STRUCT_0,RELSET_1,ZFMISC_1,CARD_1,ORDINAL1,CKB15,CKB27,CKB28,CKB31,CKB40,CKB41,CKB48,CKB51;
constructors PARTFUN1,BINOP_1,MULTOP_1,PBOOLE,REALSET2,RELSET_1,CKB15,CKB17,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB30,CKB33,CKB37,CKB38,CKB39,CKB44,CKB45,CKB46;
requirements BOOLE,SUBSET,NUMERALS;
begin
reserve i for set;
registration
cluster  quasi-functional  semi-functional  transitive ->  pseudo-functional for non empty non empty AltCatStr;
coherence
proof
let C being non empty AltCatStr;
assume A1: C is  quasi-functional  semi-functional  transitive;
let o1 being (object of C),o2 being (object of C),o3 being (object of C);
set c = ( (the Comp of C) . (o1,o2,o3) );
set f = ( ( FuncComp (( Funcs (o1,o2) ),( Funcs (o2,o3) )) ) | ([: <^ o2,o3 ^>,<^ o1,o2 ^> :] qua set) );
per cases ;
suppose A2: (<^ o2,o3 ^> = ( {} ) or <^ o1,o2 ^> = ( {} ));

hence c = ( {} )
.= f by A2;
end;
suppose A3: (<^ o2,o3 ^> <> ( {} ) & <^ o1,o2 ^> <> ( {} ));

then A4: <^ o1,o3 ^> <> ( {} ) by A1,CKB19:def 1;
then A5: ( dom c ) = [: <^ o2,o3 ^>,<^ o1,o2 ^> :] by FUNCT_2:def 1;
A6: (<^ o2,o3 ^> c= ( Funcs (o2,o3) ) & <^ o1,o2 ^> c= ( Funcs (o1,o2) )) by A1,CKB37:def 1;
( dom ( FuncComp (( Funcs (o1,o2) ),( Funcs (o2,o3) )) ) ) = [: ( Funcs (o2,o3) ),( Funcs (o1,o2) ) :] by PARTFUN1:def 2;
then ( dom f ) = ( [: ( Funcs (o2,o3) ),( Funcs (o1,o2) ) :] /\ [: <^ o2,o3 ^>,<^ o1,o2 ^> :] ) by RELAT_1:61;
then A7: ( dom c ) = ( dom f ) by A6,A5,XBOOLE_1:28,ZFMISC_1:96;
now
let i;
assume A8: i in ( dom c );
then consider i1 being set,i2 being set such that A9: i1 in <^ o2,o3 ^> and A10: i2 in <^ o1,o2 ^> and A11: i = [ i1,i2 ] by A5,ZFMISC_1:84;
reconsider a2 = i2 as (Morphism of o1,o2) by A10;
reconsider a1 = i1 as (Morphism of o2,o3) by A9;
reconsider g = i1,h = i2 as Function by A6,A9,A10;
thus ( c . i ) = ( ( (the Comp of C) . (o1,o2,o3) ) . (a1,a2) ) by A11
.= ( a1 * a2 ) by A3,CKB29:def 1
.= ( g * h ) by A1,A3,A4,CKB38:def 1
.= ( ( FuncComp (( Funcs (o1,o2) ),( Funcs (o2,o3) )) ) . (g,h) ) by A6,A9,A10,CKB32:1
.= ( f . i ) by A7,A8,A11,FUNCT_1:47;
end;
hence thesis by A7,FUNCT_1:2;
end;
end;
end;
