environ
vocabularies FUNCT_1,SUBSET_1,RELAT_1,FUNCT_2,XBOOLE_0,TARSKI,PBOOLE,ZFMISC_1,MCART_1,FUNCOP_1,STRUCT_0,CAT_1,RELAT_2,BINOP_1,CARD_1,ALTCAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,DOMAIN_1,RELAT_1,CARD_1,NUMBERS,STRUCT_0,FUNCT_1,FUNCT_2,BINOP_1,MULTOP_1,FUNCOP_1,PBOOLE,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB30,CKB33,CKB37,CKB38,CKB39,CKB44,CKB45,CKB46,CKB54,CKB55,CKB59,CKB60,CKB66,CKB67;
definitions TARSKI,STRUCT_0,XBOOLE_0,FUNCOP_1,BINOP_1,CKB17,CKB19,CKB20,CKB21,CKB24,CKB25,CKB26,CKB29,CKB30,CKB33,CKB37,CKB38,CKB39,CKB44,CKB45,CKB46,CKB55,CKB59,CKB60,CKB67;
theorems FUNCT_1,ZFMISC_1,PBOOLE,DOMAIN_1,MULTOP_1,MCART_1,FUNCT_2,TARSKI,FUNCOP_1,RELAT_1,REALSET1,STRUCT_0,RELSET_1,XBOOLE_0,XBOOLE_1,CARD_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB17,CKB19,CKB20,CKB21,CKB24,CKB25,CKB26,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB49,CKB50,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB63,CKB67,CKB69,CKB70;
schemes FUNCT_1,CKB6,CKB7,CKB8,CKB9;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,STRUCT_0,RELSET_1,ZFMISC_1,CARD_1,ORDINAL1,CKB15,CKB27,CKB28,CKB31,CKB40,CKB41,CKB48,CKB51,CKB52,CKB53,CKB62,CKB64,CKB65,CKB68;
constructors PARTFUN1,BINOP_1,MULTOP_1,PBOOLE,REALSET2,RELSET_1,CKB15,CKB17,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB30,CKB33,CKB37,CKB38,CKB39,CKB44,CKB45,CKB46,CKB55,CKB59,CKB60,CKB67;
requirements BOOLE,SUBSET,NUMERALS;
begin
registration
let A being non empty set;
cluster ( DiscrCat A ) ->  pseudo-functional  pseudo-discrete  with_units  associative;
coherence
proof
set C = ( DiscrCat A );
thus C is  pseudo-functional
proof
let o1 being (object of C),o2 being (object of C),o3 being (object of C);
A1: ( id o1 ) in ( Funcs (o1,o1) ) by CKB1:1;
per cases ;
suppose A2: (o1 = o2 & o2 = o3);

then A3: <^ o2,o3 ^> = { ( id o1 ) } by CKB67:def 1;
then A4: <^ o1,o2 ^> c= ( Funcs (o1,o2) ) by A1,A2,ZFMISC_1:31;
thus ( (the Comp of C) . (o1,o2,o3) ) = ( (( id o1 ),( id o1 )) :-> ( id o1 ) ) by A2,CKB70:1
.= ( FuncComp ({ ( id o1 ) },{ ( id o1 ) }) ) by CKB35:1
.= ( ( FuncComp (( Funcs (o1,o2) ),( Funcs (o2,o3) )) ) | ([: <^ o2,o3 ^>,<^ o1,o2 ^> :] qua set) ) by A2,A3,A4,CKB36:1;
end;
suppose A5: (o1 <> o2 or o2 <> o3);

then A6: (<^ o2,o3 ^> = ( {} ) or <^ o1,o2 ^> = ( {} )) by CKB59:def 1;
thus ( (the Comp of C) . (o1,o2,o3) ) = ( {} ) by A5,CKB69:1
.= ( ( FuncComp (( Funcs (o1,o2) ),( Funcs (o2,o3) )) ) | ([: <^ o2,o3 ^>,<^ o1,o2 ^> :] qua set) ) by A6;
end;
end;

thus C is  pseudo-discrete
proof
let i being (object of C);
<^ i,i ^> = { ( id i ) } by CKB67:def 1;
hence thesis;
end;

thus C is  with_units
proof
thus (the Comp of C) is  with_left_units
proof
let j being (Element of C);
reconsider j9 = j as (object of C);
take ( id j9 );
( (the Arrows of C) . (j,j) ) = <^ j9,j9 ^>
.= { ( id j9 ) } by CKB67:def 1;
hence ( id j9 ) in ( (the Arrows of C) . (j,j) ) by TARSKI:def 1;
let i being (Element of C);
let f being set;
assume that
A7: f in ( (the Arrows of C) . (i,j) );
reconsider i9 = i as (object of C);
A8: ( (the Arrows of C) . (i,j) ) = <^ i9,j9 ^>;
then A9: i9 = j9 by A7,CKB59:def 1;
then f in { ( id i9 ) } by A7,A8,CKB67:def 1;
then A10: f = ( id i9 ) by TARSKI:def 1;
thus ( ( (the Comp of C) . (i,j,j) ) . (( id j9 ),f) ) = ( ( (( id i9 ),( id i9 )) :-> ( id i9 ) ) . (( id j9 ),f) ) by A9,CKB70:1
.= f by A9,A10,CKB14:1;
end;

let j being (Element of C);
reconsider j9 = j as (object of C);
take ( id j9 );
( (the Arrows of C) . (j,j) ) = <^ j9,j9 ^>
.= { ( id j9 ) } by CKB67:def 1;
hence ( id j9 ) in ( (the Arrows of C) . (j,j) ) by TARSKI:def 1;
let i being (Element of C);
let f being set;
assume that
A11: f in ( (the Arrows of C) . (j,i) );
reconsider i9 = i as (object of C);
A12: ( (the Arrows of C) . (j,i) ) = <^ j9,i9 ^>;
then A13: i9 = j9 by A11,CKB59:def 1;
then f in { ( id i9 ) } by A11,A12,CKB67:def 1;
then A14: f = ( id i9 ) by TARSKI:def 1;
thus ( ( (the Comp of C) . (j,j,i) ) . (f,( id j9 )) ) = ( ( (( id i9 ),( id i9 )) :-> ( id i9 ) ) . (f,( id j9 )) ) by A13,CKB70:1
.= f by A13,A14,CKB14:1;
end;

thus C is  associative
proof
let i being (Element of C),j being (Element of C),k being (Element of C),l being (Element of C);
set G = (the Arrows of C);
set c = (the Comp of C);
reconsider i9 = i,j9 = j,k9 = k,l9 = l as (object of C);
let f being set,g being set,h being set;
assume that
A15: f in ( G . (i,j) )
and
A16: g in ( G . (j,k) )
and
A17: h in ( G . (k,l) );
f in <^ i9,j9 ^> by A15;
then A18: i9 = j9 by CKB59:def 1;
A19: <^ i9,i9 ^> = { ( id i9 ) } by CKB67:def 1;
then A20: f = ( id i9 ) by A15,A18,TARSKI:def 1;
g in <^ j9,k9 ^> by A16;
then A21: j9 = k9 by CKB59:def 1;
then A22: g = ( id i9 ) by A16,A18,A19,TARSKI:def 1;
A23: ( c . (i9,i9,i9) ) = ( (( id i9 ),( id i9 )) :-> ( id i9 ) ) by CKB70:1;
h in <^ k9,l9 ^> by A17;
then A24: k9 = l9 by CKB59:def 1;
then h = ( id i9 ) by A17,A18,A21,A19,TARSKI:def 1;
hence thesis by A18,A21,A24,A20,A22,A23,CKB14:1;
end;

end;
end;
