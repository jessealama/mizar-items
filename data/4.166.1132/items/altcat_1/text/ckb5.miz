environ
vocabularies FUNCT_1,SUBSET_1,RELAT_1,FUNCT_2,XBOOLE_0,TARSKI,PBOOLE,ZFMISC_1,MCART_1,FUNCOP_1,STRUCT_0,CAT_1,RELAT_2,BINOP_1,CARD_1,ALTCAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,DOMAIN_1,RELAT_1,CARD_1,NUMBERS,STRUCT_0,FUNCT_1,FUNCT_2,BINOP_1,MULTOP_1,FUNCOP_1,PBOOLE;
definitions TARSKI,STRUCT_0,XBOOLE_0,FUNCOP_1,BINOP_1;
theorems FUNCT_1,ZFMISC_1,PBOOLE,DOMAIN_1,MULTOP_1,MCART_1,FUNCT_2,TARSKI,FUNCOP_1,RELAT_1,REALSET1,STRUCT_0,RELSET_1,XBOOLE_0,XBOOLE_1,CARD_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4;
schemes FUNCT_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,STRUCT_0,RELSET_1,ZFMISC_1,CARD_1,ORDINAL1;
constructors PARTFUN1,BINOP_1,MULTOP_1,PBOOLE,REALSET2,RELSET_1;
requirements BOOLE,SUBSET,NUMERALS;
begin
reserve x for set;
theorem
(for A,B being set holds (for F being (ManySortedSet of [: B,A :]) holds (for C being (Subset of A) holds (for D being (Subset of B) holds (for x,y being set holds ((x in C & y in D) implies ( F . (y,x) ) = ( ( F | ([: D,C :] qua set) ) . (y,x) )))))))
proof
let A being set;
let B being set;
let F being (ManySortedSet of [: B,A :]);
let C being (Subset of A);
let D being (Subset of B);
let x being set;
let y being set;
assume (x in C & y in D);
then [ y,x ] in [: D,C :] by ZFMISC_1:87;
hence thesis by FUNCT_1:49;
end;
