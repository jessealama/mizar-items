environ
vocabularies FUNCT_1,SUBSET_1,RELAT_1,FUNCT_2,XBOOLE_0,TARSKI,PBOOLE,ZFMISC_1,MCART_1,FUNCOP_1,STRUCT_0,CAT_1,RELAT_2,BINOP_1,CARD_1,ALTCAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MCART_1,DOMAIN_1,RELAT_1,CARD_1,NUMBERS,STRUCT_0,FUNCT_1,FUNCT_2,BINOP_1,MULTOP_1,FUNCOP_1,PBOOLE,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB30,CKB33,CKB37,CKB38,CKB39;
definitions TARSKI,STRUCT_0,XBOOLE_0,FUNCOP_1,BINOP_1,CKB17,CKB19,CKB20,CKB21,CKB24,CKB25,CKB26,CKB29,CKB30,CKB33,CKB37,CKB38,CKB39;
theorems FUNCT_1,ZFMISC_1,PBOOLE,DOMAIN_1,MULTOP_1,MCART_1,FUNCT_2,TARSKI,FUNCOP_1,RELAT_1,REALSET1,STRUCT_0,RELSET_1,XBOOLE_0,XBOOLE_1,CARD_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB10,CKB11,CKB12,CKB13,CKB14,CKB17,CKB19,CKB20,CKB21,CKB24,CKB25,CKB26,CKB29,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB42;
schemes FUNCT_1,CKB6,CKB7,CKB8,CKB9;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,STRUCT_0,RELSET_1,ZFMISC_1,CARD_1,ORDINAL1,CKB15,CKB27,CKB28,CKB31,CKB40,CKB41;
constructors PARTFUN1,BINOP_1,MULTOP_1,PBOOLE,REALSET2,RELSET_1,CKB15,CKB17,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB30,CKB33,CKB37,CKB38,CKB39;
requirements BOOLE,SUBSET,NUMERALS;
begin
theorem
Th18: (for C being  pseudo-functional non empty AltCatStr holds (for a1,a2,a3 being (object of C) holds (((<^ a1,a2 ^> <> ( {} ) & <^ a2,a3 ^> <> ( {} )) & <^ a1,a3 ^> <> ( {} )) implies (for f being (Morphism of a1,a2) holds (for g being (Morphism of a2,a3) holds (for f9,g9 being Function holds ((f = f9 & g = g9) implies ( g * f ) = ( g9 * f9 ))))))))
proof
let C being  pseudo-functional non empty AltCatStr;
let a1 being (object of C),a2 being (object of C),a3 being (object of C);
assume that
A1: (<^ a1,a2 ^> <> ( {} ) & <^ a2,a3 ^> <> ( {} ))
and
A2: <^ a1,a3 ^> <> ( {} );
let f being (Morphism of a1,a2);
let g being (Morphism of a2,a3);
let f9 being Function,g9 being Function;
assume that
A3: (f = f9 & g = g9);
A4: [ g,f ] in [: <^ a2,a3 ^>,<^ a1,a2 ^> :] by A1,ZFMISC_1:87;
A5: ( (the Comp of C) . (a1,a2,a3) ) = ( ( FuncComp (( Funcs (a1,a2) ),( Funcs (a2,a3) )) ) | ([: <^ a2,a3 ^>,<^ a1,a2 ^> :] qua set) ) by CKB39:def 1;
(( dom ( ( FuncComp (( Funcs (a1,a2) ),( Funcs (a2,a3) )) ) | ([: <^ a2,a3 ^>,<^ a1,a2 ^> :] qua set) ) ) c= ( dom ( FuncComp (( Funcs (a1,a2) ),( Funcs (a2,a3) )) ) ) & ( dom ( (the Comp of C) . (a1,a2,a3) ) ) = [: <^ a2,a3 ^>,<^ a1,a2 ^> :]) by A2,FUNCT_2:def 1,RELAT_1:60;
then consider f99 being Function,g99 being Function such that A6: [ g,f ] = [ g99,f99 ] and A7: ( ( FuncComp (( Funcs (a1,a2) ),( Funcs (a2,a3) )) ) . [ g,f ] ) = ( g99 * f99 ) by A5,A4,CKB30:def 1;
A8: (g = g99 & f = f99) by A6,ZFMISC_1:27;
thus ( g * f ) = ( ( (the Comp of C) . (a1,a2,a3) ) . (g,f) ) by A1,CKB29:def 1
.= ( g9 * f9 ) by A5,A3,A4,A7,A8,FUNCT_1:49;
end;
