environ
vocabularies FUNCT_1,TARSKI,RELAT_1,XBOOLE_0,SUBSET_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ENUMSET1,RELAT_1,FUNCT_1;
definitions TARSKI,RELAT_1,XBOOLE_0,FUNCT_1;
theorems TARSKI,XBOOLE_0,ZFMISC_1,FUNCT_1,RELAT_1,XBOOLE_1,ENUMSET1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
registrations FUNCT_1,RELAT_1;
constructors TARSKI,SUBSET_1,FUNCT_1,ENUMSET1;
requirements SUBSET,BOOLE;
begin
reserve x1 for set;
reserve x2 for set;
reserve y for set;
reserve f for Function;
theorem
Th25: (f is  one-to-one iff (for x1 holds (for x2 holds (for y holds (([ x1,y ] in f & [ x2,y ] in f) implies x1 = x2)))))
proof
thus (f is  one-to-one implies (for x1 holds (for x2 holds (for y holds (([ x1,y ] in f & [ x2,y ] in f) implies x1 = x2)))))
proof
assume A1: f is  one-to-one;
let x1;
let x2;
let y;
assume A2: ([ x1,y ] in f & [ x2,y ] in f);
then A3: (( f . x1 ) = y & ( f . x2 ) = y) by FUNCT_1:1;
(x1 in ( dom f ) & x2 in ( dom f )) by A2,FUNCT_1:1;
hence thesis by A1,A3,FUNCT_1:def 4;
end;

assume A4: (for x1 holds (for x2 holds (for y holds (([ x1,y ] in f & [ x2,y ] in f) implies x1 = x2))));
let x1;
let x2;
assume ((x1 in ( dom f ) & x2 in ( dom f )) & ( f . x1 ) = ( f . x2 ));
then ([ x1,( f . x1 ) ] in f & [ x2,( f . x1 ) ] in f) by FUNCT_1:1;
hence thesis by A4;
end;
