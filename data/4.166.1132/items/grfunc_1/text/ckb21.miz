environ
vocabularies FUNCT_1,TARSKI,RELAT_1,XBOOLE_0,SUBSET_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ENUMSET1,RELAT_1,FUNCT_1;
definitions TARSKI,RELAT_1,XBOOLE_0,FUNCT_1;
theorems TARSKI,XBOOLE_0,ZFMISC_1,FUNCT_1,RELAT_1,XBOOLE_1,ENUMSET1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
registrations FUNCT_1,RELAT_1,CKB13;
constructors TARSKI,SUBSET_1,FUNCT_1,ENUMSET1;
requirements SUBSET,BOOLE;
begin
reserve x1 for set;
reserve x2 for set;
reserve f for Function;
reserve g for Function;
reserve h for Function;
theorem
((((f is  one-to-one & g is  one-to-one) & h = ( f \/ g )) & ( rng f ) misses ( rng g )) implies h is  one-to-one)
proof
assume that
A1: (f is  one-to-one & g is  one-to-one)
and
A2: h = ( f \/ g )
and
A3: ( ( rng f ) /\ ( rng g ) ) = ( {} );
now
let x1;
let x2;
assume that
A4: (x1 in ( dom h ) & x2 in ( dom h ))
and
A5: ( h . x1 ) = ( h . x2 );
A6:now
assume ((x1 in ( dom f ) & x2 in ( dom g )) or (x1 in ( dom g ) & x2 in ( dom f )));
then (((( h . x1 ) = ( f . x1 ) & ( h . x2 ) = ( g . x2 )) & ( f . x1 ) <> ( g . x2 )) or ((( h . x1 ) = ( g . x1 ) & ( h . x2 ) = ( f . x2 )) & ( f . x2 ) <> ( g . x1 ))) by A2,A3,CKB4:1,CKB19:1;
hence x1 = x2 by A5;
end;
A7: ((x1 in ( dom g ) & x2 in ( dom g )) implies (( h . x1 ) = ( g . x1 ) & ( h . x2 ) = ( g . x2 ))) by A2,CKB19:1;
((x1 in ( dom f ) & x2 in ( dom f )) implies (( h . x1 ) = ( f . x1 ) & ( h . x2 ) = ( f . x2 ))) by A2,CKB19:1;
then (((x1 in ( dom f ) & x2 in ( dom f )) or (x1 in ( dom g ) & x2 in ( dom g ))) implies x1 = x2) by A1,A5,A7,FUNCT_1:def 4;
hence x1 = x2 by A2,A4,A6,CKB18:1;
end;
hence thesis by FUNCT_1:def 4;
end;
