environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,BVFUNC_1,XBOOLEAN,FUNCT_1,RELAT_1,TARSKI,PARTIT1;
notations TARSKI,XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,FUNCT_2,BVFUNC_1;
definitions BVFUNC_1,XBOOLEAN;
theorems FUNCT_1,FUNCT_2,MARGREL1,BINARITH,BVFUNC_1,BVFUNC_4,XBOOLEAN,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
registrations XBOOLE_0,XBOOLEAN,MARGREL1;
constructors BVFUNC_1;
requirements SUBSET,BOOLE;
begin
reserve Y for non  empty set;
theorem
(for a,b,c being (Element of ( Funcs (Y,( BOOLEAN )) )) holds ( ( a 'imp' b ) 'imp' ( ( a 'imp' ( b 'imp' c ) ) 'imp' ( a 'imp' c ) ) ) = ( I_el Y ))
proof
let a being (Element of ( Funcs (Y,( BOOLEAN )) ));
let b being (Element of ( Funcs (Y,( BOOLEAN )) ));
let c being (Element of ( Funcs (Y,( BOOLEAN )) ));
(for x being (Element of Y) holds ( ( ( a 'imp' b ) 'imp' ( ( a 'imp' ( b 'imp' c ) ) 'imp' ( a 'imp' c ) ) ) . x ) = ( TRUE ))
proof
let x being (Element of Y);
( ( a 'imp' b ) 'imp' ( ( a 'imp' ( b 'imp' c ) ) 'imp' ( a 'imp' c ) ) ) = ( ( 'not' ( a 'imp' b ) ) 'or' ( ( a 'imp' ( b 'imp' c ) ) 'imp' ( a 'imp' c ) ) ) by BVFUNC_4:8
.= ( ( 'not' ( ( 'not' a ) 'or' b ) ) 'or' ( ( a 'imp' ( b 'imp' c ) ) 'imp' ( a 'imp' c ) ) ) by BVFUNC_4:8
.= ( ( 'not' ( ( 'not' a ) 'or' b ) ) 'or' ( ( ( 'not' a ) 'or' ( b 'imp' c ) ) 'imp' ( a 'imp' c ) ) ) by BVFUNC_4:8
.= ( ( 'not' ( ( 'not' a ) 'or' b ) ) 'or' ( ( ( 'not' a ) 'or' ( ( 'not' b ) 'or' c ) ) 'imp' ( a 'imp' c ) ) ) by BVFUNC_4:8
.= ( ( 'not' ( ( 'not' a ) 'or' b ) ) 'or' ( ( ( 'not' a ) 'or' ( ( 'not' b ) 'or' c ) ) 'imp' ( ( 'not' a ) 'or' c ) ) ) by BVFUNC_4:8
.= ( ( 'not' ( ( 'not' a ) 'or' b ) ) 'or' ( ( 'not' ( ( 'not' a ) 'or' ( ( 'not' b ) 'or' c ) ) ) 'or' ( ( 'not' a ) 'or' c ) ) ) by BVFUNC_4:8
.= ( ( ( 'not' ( 'not' a ) ) '&' ( 'not' b ) ) 'or' ( ( 'not' ( ( 'not' a ) 'or' ( ( 'not' b ) 'or' c ) ) ) 'or' ( ( 'not' a ) 'or' c ) ) ) by BVFUNC_1:13
.= ( ( ( 'not' ( 'not' a ) ) '&' ( 'not' b ) ) 'or' ( ( ( 'not' ( 'not' a ) ) '&' ( 'not' ( ( 'not' b ) 'or' c ) ) ) 'or' ( ( 'not' a ) 'or' c ) ) ) by BVFUNC_1:13
.= ( ( a '&' ( 'not' b ) ) 'or' ( ( ( 'not' ( 'not' a ) ) '&' ( ( 'not' ( 'not' b ) ) '&' ( 'not' c ) ) ) 'or' ( ( 'not' a ) 'or' c ) ) ) by BVFUNC_1:13
.= ( ( a '&' ( 'not' b ) ) 'or' ( ( a 'or' ( ( 'not' a ) 'or' c ) ) '&' ( ( b '&' ( 'not' c ) ) 'or' ( ( 'not' a ) 'or' c ) ) ) ) by BVFUNC_1:11
.= ( ( a '&' ( 'not' b ) ) 'or' ( ( ( a 'or' ( 'not' a ) ) 'or' c ) '&' ( ( b '&' ( 'not' c ) ) 'or' ( ( 'not' a ) 'or' c ) ) ) ) by BVFUNC_1:8
.= ( ( a '&' ( 'not' b ) ) 'or' ( ( ( I_el Y ) 'or' c ) '&' ( ( b '&' ( 'not' c ) ) 'or' ( ( 'not' a ) 'or' c ) ) ) ) by BVFUNC_4:6
.= ( ( a '&' ( 'not' b ) ) 'or' ( ( I_el Y ) '&' ( ( b '&' ( 'not' c ) ) 'or' ( ( 'not' a ) 'or' c ) ) ) ) by BVFUNC_1:10
.= ( ( a '&' ( 'not' b ) ) 'or' ( ( b '&' ( 'not' c ) ) 'or' ( ( 'not' a ) 'or' c ) ) ) by BVFUNC_1:6
.= ( ( a '&' ( 'not' b ) ) 'or' ( ( b 'or' ( ( 'not' a ) 'or' c ) ) '&' ( ( 'not' c ) 'or' ( ( 'not' a ) 'or' c ) ) ) ) by BVFUNC_1:11
.= ( ( a '&' ( 'not' b ) ) 'or' ( ( b 'or' ( ( 'not' a ) 'or' c ) ) '&' ( ( ( 'not' c ) 'or' c ) 'or' ( 'not' a ) ) ) ) by BVFUNC_1:8
.= ( ( a '&' ( 'not' b ) ) 'or' ( ( b 'or' ( ( 'not' a ) 'or' c ) ) '&' ( ( I_el Y ) 'or' ( 'not' a ) ) ) ) by BVFUNC_4:6
.= ( ( a '&' ( 'not' b ) ) 'or' ( ( b 'or' ( ( 'not' a ) 'or' c ) ) '&' ( I_el Y ) ) ) by BVFUNC_1:10
.= ( ( a '&' ( 'not' b ) ) 'or' ( b 'or' ( ( 'not' a ) 'or' c ) ) ) by BVFUNC_1:6
.= ( ( a 'or' ( b 'or' ( ( 'not' a ) 'or' c ) ) ) '&' ( ( 'not' b ) 'or' ( b 'or' ( ( 'not' a ) 'or' c ) ) ) ) by BVFUNC_1:11
.= ( ( a 'or' ( b 'or' ( ( 'not' a ) 'or' c ) ) ) '&' ( ( ( 'not' b ) 'or' b ) 'or' ( ( 'not' a ) 'or' c ) ) ) by BVFUNC_1:8
.= ( ( a 'or' ( b 'or' ( ( 'not' a ) 'or' c ) ) ) '&' ( ( I_el Y ) 'or' ( ( 'not' a ) 'or' c ) ) ) by BVFUNC_4:6
.= ( ( a 'or' ( b 'or' ( ( 'not' a ) 'or' c ) ) ) '&' ( I_el Y ) ) by BVFUNC_1:10
.= ( a 'or' ( b 'or' ( ( 'not' a ) 'or' c ) ) ) by BVFUNC_1:6
.= ( a 'or' ( ( ( 'not' a ) 'or' b ) 'or' c ) ) by BVFUNC_1:8
.= ( ( a 'or' ( ( 'not' a ) 'or' b ) ) 'or' c ) by BVFUNC_1:8
.= ( ( ( a 'or' ( 'not' a ) ) 'or' b ) 'or' c ) by BVFUNC_1:8
.= ( ( ( I_el Y ) 'or' b ) 'or' c ) by BVFUNC_4:6
.= ( ( I_el Y ) 'or' c ) by BVFUNC_1:10
.= ( I_el Y ) by BVFUNC_1:10;
hence thesis by BVFUNC_1:def 11;
end;
hence thesis by BVFUNC_1:def 11;
end;
