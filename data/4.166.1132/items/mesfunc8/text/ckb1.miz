environ
vocabularies NUMBERS,ORDINAL1,XBOOLE_0,PROB_1,MEASURE1,FUNCT_1,SUBSET_1,XXREAL_0,ARYTM_3,RELAT_1,SETFAM_1,TARSKI,MEASURE2,ARYTM_1,SETLIM_1,NAT_1,ORDINAL2,CARD_3,CARD_1,SEQ_2,SEQFUNC,PARTFUN1,PBOOLE,RINFSUP1,XREAL_0,MESFUNC1,MEASURE6,XXREAL_2,ZFMISC_1,MESFUNC5,VALUED_0,COMPLEX1,REAL_1,SUPINF_2,SEQ_1,FUNCOP_1,VALUED_1,PREPOWER,NEWTON,SERIES_1,MESFUNC8,SEQ_4;
notations TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,XXREAL_0,XXREAL_2,VALUED_0,PROB_1,REAL_1,SETFAM_1,MEASURE1,KURATO_0,SETLIM_1,MEASURE2,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,RFUNCT_3,FUNCT_2,SUPINF_2,RINFSUP1,SEQFUNC,MEASURE6,VALUED_1,NAT_1,SEQ_1,SEQ_2,SEQ_4,NEWTON,PREPOWER,SERIES_1,EXTREAL1,MESFUNC1,MESFUNC5,RINFSUP2,CARD_3,FUNCOP_1;
definitions TARSKI,CARD_3,FUNCT_6,MEASURE6,RINFSUP1,SETLIM_1,XCMPLX_0,RINFSUP2,VALUED_1,XXREAL_3,XXREAL_2;
theorems ABSVALUE,MEASURE1,MEASURE2,MEASURE3,NAT_1,TARSKI,PARTFUN1,FUNCT_1,FUNCT_2,KURATO_0,SUPINF_2,EXTREAL2,SETFAM_1,SEQ_1,SEQ_2,SEQM_3,SEQ_4,SERIES_1,RINFSUP1,MESFUNC1,XREAL_0,PROB_1,XBOOLE_0,XBOOLE_1,MESFUNC2,XREAL_1,PREPOWER,XXREAL_0,ZFMISC_1,SETLIM_1,PROB_4,PARTFUN2,ORDINAL1,MESFUNC5,RINFSUP2,CARD_3,XXREAL_2,VALUED_0,FUNCOP_1,XXREAL_3,RELAT_1;
schemes FUNCT_2,SEQFUNC,PARTFUN2;
registrations SUBSET_1,XREAL_0,MEMBERED,ORDINAL1,PARTFUN1,FUNCT_2,RELAT_1,XXREAL_0,XBOOLE_0,FUNCT_1,NUMBERS,VALUED_0,VALUED_1,SETLIM_1,SEQ_4,NAT_1,XXREAL_3,RELSET_1,MEASURE6;
constructors REAL_1,NAT_1,EXTREAL1,NEWTON,PREPOWER,SERIES_1,MESFUNC1,PROB_2,MEASURE6,MEASURE3,PARTFUN3,KURATO_0,RINFSUP1,SETLIM_1,MESFUNC5,RINFSUP2,SEQ_1,SUPINF_1,SEQFUNC,SEQ_4,RELSET_1,BINOP_2,RVSUM_1;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve n for  natural number;
reserve k for  natural number;
reserve X for non  empty set;
reserve S for (SigmaField of X);
theorem
Th1: (for M being (sigma_Measure of S) holds (for F being (Function of ( NAT ),S) holds (for n holds { x where x is (Element of X): (for k holds (n <= k implies x in ( F . k ))) } is (Element of S))))
proof
let M being (sigma_Measure of S);
let F being (Function of ( NAT ),S);
let n;
set G = { x where x is (Element of X): (for k holds (n <= k implies x in ( F . k ))) };
deffunc Fn((Element of ( NAT ))) = ( F . ( n + $1 ) );
consider E being (Function of ( NAT ),S) such that A1: (for k being (Element of ( NAT )) holds ( E . k ) = Fn(k)) from FUNCT_2:sch 4;
now
let z being set;
assume z in G;
then A2: (ex x being (Element of X) st (z = x & (for k being  natural number holds (n <= k implies x in ( F . k )))));
(for Y being set holds (Y in ( rng E ) implies z in Y))
proof
let Y being set;
assume Y in ( rng E );
then consider l being set such that A3: l in ( NAT ) and A4: Y = ( E . l ) by FUNCT_2:11;
reconsider l as (Element of ( NAT )) by A3;
z in ( F . ( n + l ) ) by A2,NAT_1:12;
hence thesis by A1,A4;
end;
hence z in ( meet ( rng E ) ) by SETFAM_1:def 1;
end;
then A5: G c= ( meet ( rng E ) ) by TARSKI:def 3;
( rng E ) is (N_Sub_set_fam of X) by MEASURE1:23;
then ( rng E ) is (N_Measure_fam of S) by MEASURE2:def 1;
then A6: ( meet ( rng E ) ) is (Element of S) by MEASURE2:2;
now
let z being set;
assume A7: z in ( meet ( rng E ) );
now
let k being  natural number;
assume n <= k;
then reconsider l = ( k - n ) as (Element of ( NAT )) by NAT_1:21;
( E . l ) in ( rng E ) by FUNCT_2:4;
then z in ( E . l ) by A7,SETFAM_1:def 1;
then z in ( F . ( n + l ) ) by A1;
hence z in ( F . k );
end;
hence z in G by A6,A7;
end;
then ( meet ( rng E ) ) c= G by TARSKI:def 3;
hence thesis by A6,A5,XBOOLE_0:def 10;
end;
