environ
vocabularies NUMBERS,ORDINAL1,XBOOLE_0,PROB_1,MEASURE1,FUNCT_1,SUBSET_1,XXREAL_0,ARYTM_3,RELAT_1,SETFAM_1,TARSKI,MEASURE2,ARYTM_1,SETLIM_1,NAT_1,ORDINAL2,CARD_3,CARD_1,SEQ_2,SEQFUNC,PARTFUN1,PBOOLE,RINFSUP1,XREAL_0,MESFUNC1,MEASURE6,XXREAL_2,ZFMISC_1,MESFUNC5,VALUED_0,COMPLEX1,REAL_1,SUPINF_2,SEQ_1,FUNCOP_1,VALUED_1,PREPOWER,NEWTON,SERIES_1,MESFUNC8,SEQ_4;
notations TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,XXREAL_0,XXREAL_2,VALUED_0,PROB_1,REAL_1,SETFAM_1,MEASURE1,KURATO_0,SETLIM_1,MEASURE2,RELAT_1,FUNCT_1,RELSET_1,PARTFUN1,RFUNCT_3,FUNCT_2,SUPINF_2,RINFSUP1,SEQFUNC,MEASURE6,VALUED_1,NAT_1,SEQ_1,SEQ_2,SEQ_4,NEWTON,PREPOWER,SERIES_1,EXTREAL1,MESFUNC1,MESFUNC5,RINFSUP2,CARD_3,FUNCOP_1;
definitions TARSKI,CARD_3,FUNCT_6,MEASURE6,RINFSUP1,SETLIM_1,XCMPLX_0,RINFSUP2,VALUED_1,XXREAL_3,XXREAL_2;
theorems ABSVALUE,MEASURE1,MEASURE2,MEASURE3,NAT_1,TARSKI,PARTFUN1,FUNCT_1,FUNCT_2,KURATO_0,SUPINF_2,EXTREAL2,SETFAM_1,SEQ_1,SEQ_2,SEQM_3,SEQ_4,SERIES_1,RINFSUP1,MESFUNC1,XREAL_0,PROB_1,XBOOLE_0,XBOOLE_1,MESFUNC2,XREAL_1,PREPOWER,XXREAL_0,ZFMISC_1,SETLIM_1,PROB_4,PARTFUN2,ORDINAL1,MESFUNC5,RINFSUP2,CARD_3,XXREAL_2,VALUED_0,FUNCOP_1,XXREAL_3,RELAT_1,CKB1,CKB2,CKB3;
schemes FUNCT_2,SEQFUNC,PARTFUN2;
registrations SUBSET_1,XREAL_0,MEMBERED,ORDINAL1,PARTFUN1,FUNCT_2,RELAT_1,XXREAL_0,XBOOLE_0,FUNCT_1,NUMBERS,VALUED_0,VALUED_1,SETLIM_1,SEQ_4,NAT_1,XXREAL_3,RELSET_1,MEASURE6;
constructors REAL_1,NAT_1,EXTREAL1,NEWTON,PREPOWER,SERIES_1,MESFUNC1,PROB_2,MEASURE6,MEASURE3,PARTFUN3,KURATO_0,RINFSUP1,SETLIM_1,MESFUNC5,RINFSUP2,SEQ_1,SUPINF_1,SEQFUNC,SEQ_4,RELSET_1,BINOP_2,RVSUM_1;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve X for non empty set;
reserve S for (SigmaField of X);
theorem
Th4: (for M being (sigma_Measure of S) holds (for F being (SetSequence of S) holds (( M . ( Union F ) ) < ( +infty ) implies (ex G being (Function of ( NAT ),S) st (G = ( superior_setsequence F ) & ( M . ( lim_sup F ) ) = ( inf ( rng ( M * G ) ) ))))))
proof
let M being (sigma_Measure of S);
let F being (SetSequence of S);
( rng ( superior_setsequence F ) ) c= S by RELAT_1:def 19;
then reconsider G = ( superior_setsequence F ) as (Function of ( NAT ),S) by FUNCT_2:6;
reconsider F1 = F,G1 = G as (SetSequence of X);
A1: (for n being (Element of ( NAT )) holds ( G . ( n + 1 ) ) c= ( G . n ))
proof
let n being (Element of ( NAT ));
n <= ( n + 1 ) by NAT_1:12;
hence thesis by PROB_1:def 4;
end;
( G . ( 0 ) ) = ( union { ( F . k ) where k is (Element of ( NAT )): ( 0 ) <= k } ) by SETLIM_1:def 3;
then A2: ( G . ( 0 ) ) = ( union ( rng F ) ) by SETLIM_1:5;
consider f being (SetSequence of X) such that A3: ( lim_sup F1 ) = ( meet f ) and A4: (for n being (Element of ( NAT )) holds ( f . n ) = ( Union ( F1 ^\ n ) )) by KURATO_0:def 2;
now
let n being (Element of ( NAT ));
( f . n ) = ( Union ( F1 ^\ n ) ) by A4;
hence ( f . n ) = ( G1 . n ) by CKB2:1;
end;
then A5: f = G1 by FUNCT_2:63;
assume ( M . ( Union F ) ) < ( +infty );
then ( M . ( meet ( rng G ) ) ) = ( inf ( rng ( M * G ) ) ) by A1,A2,MEASURE3:12;
hence thesis by A3,A5;
end;
