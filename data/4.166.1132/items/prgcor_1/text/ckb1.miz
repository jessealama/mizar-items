environ
vocabularies NUMBERS,SUBSET_1,ARYTM_3,ARYTM_1,XXREAL_0,CARD_1,INT_1,RELAT_1,NAT_1,PARTFUN1,FUNCT_1,NEWTON,FINSEQ_1,FUNCOP_1,TARSKI,PRGCOR_1;
notations TARSKI,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,FUNCT_1,FINSEQ_1,INT_1,RELSET_1,FUNCOP_1,PARTFUN1,NAT_1,NAT_D,NEWTON;
definitions TARSKI;
theorems FINSEQ_1,NAT_1,FUNCT_1,XCMPLX_1,PRE_FF,INT_1,NEWTON,CARD_4,FINSEQ_3,FUNCOP_1,TARSKI,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,WSIERP_1,XREAL_0;
schemes NAT_1,FINSEQ_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,NEWTON,WSIERP_1;
constructors XXREAL_0,REAL_1,NAT_1,NAT_D,NEWTON,BINARITH,RELSET_1;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th1: (for n,m,k being (Element of ( NAT )) holds ( ( n + k ) -' ( m + k ) ) = ( n -' m ))
proof
let n being (Element of ( NAT ));
let m being (Element of ( NAT ));
let k being (Element of ( NAT ));
A1: ( ( n + k ) - ( m + k ) ) = ( n - m );
per cases ;
suppose ( n - m ) >= ( 0 );

then ( n -' m ) = ( n - m ) by XREAL_0:def 2;
hence thesis by A1,XREAL_0:def 2;
end;
suppose A2: ( n - m ) < ( 0 );

then ( n -' m ) = ( 0 ) by XREAL_0:def 2;
hence thesis by A1,A2,XREAL_0:def 2;
end;
end;
