environ
vocabularies NUMBERS,SUBSET_1,ARYTM_3,ARYTM_1,XXREAL_0,CARD_1,INT_1,RELAT_1,NAT_1,PARTFUN1,FUNCT_1,NEWTON,FINSEQ_1,FUNCOP_1,TARSKI,PRGCOR_1;
notations TARSKI,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,FUNCT_1,FINSEQ_1,INT_1,RELSET_1,FUNCOP_1,PARTFUN1,NAT_1,NAT_D,NEWTON;
definitions TARSKI;
theorems FINSEQ_1,NAT_1,FUNCT_1,XCMPLX_1,PRE_FF,INT_1,NEWTON,CARD_4,FINSEQ_3,FUNCOP_1,TARSKI,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,WSIERP_1,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB5;
schemes NAT_1,FINSEQ_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,NEWTON,WSIERP_1,CKB6;
constructors XXREAL_0,REAL_1,NAT_1,NAT_D,NEWTON,BINARITH,RELSET_1;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th6: (for m,n being (Element of ( NAT )) holds (m > ( 0 ) implies (ex i being (Element of ( NAT )) st ((for k2 being (Element of ( NAT )) holds (k2 < i implies ( m * ( 2 |^ k2 ) ) <= n)) & ( m * ( 2 |^ i ) ) > n))))
proof
let m being (Element of ( NAT ));
let n being (Element of ( NAT ));
defpred P[ Nat ]
 means
( m * ( 2 |^ $1 ) ) > n;
( ( n + 1 ) - 1 ) = n;
then A1: ( ( n + 1 ) -' 1 ) = n by XREAL_0:def 2;
assume A2: m > ( 0 );
then m >= ( ( 0 ) + 1 ) by NAT_1:13;
then A3: ( m * n ) >= ( 1 * n ) by XREAL_1:64;
( m * ( 2 |^ ( ( n + 1 ) -' 1 ) ) ) > ( m * ( ( n + 1 ) -' 1 ) ) by A2,NEWTON:86,XREAL_1:68;
then ( m * ( 2 |^ ( ( n + 1 ) -' 1 ) ) ) > n by A1,A3,XXREAL_0:2;
then A4: (ex k being Nat st P[ k ]);
(ex k being Nat st (P[ k ] & (for j being Nat holds (P[ j ] implies k <= j)))) from NAT_1:sch 5(A4);
then consider k being Nat such that A5: P[ k ] and A6: (for j being Nat holds (P[ j ] implies k <= j));
(k in ( NAT ) & (for k2 being (Element of ( NAT )) holds (k2 < k implies ( m * ( 2 |^ k2 ) ) <= n))) by A6,ORDINAL1:def 12;
hence thesis by A5;
end;
