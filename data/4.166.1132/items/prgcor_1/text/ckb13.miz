environ
vocabularies NUMBERS,SUBSET_1,ARYTM_3,ARYTM_1,XXREAL_0,CARD_1,INT_1,RELAT_1,NAT_1,PARTFUN1,FUNCT_1,NEWTON,FINSEQ_1,FUNCOP_1,TARSKI,PRGCOR_1;
notations TARSKI,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,FUNCT_1,FINSEQ_1,INT_1,RELSET_1,FUNCOP_1,PARTFUN1,NAT_1,NAT_D,NEWTON,CKB9;
definitions TARSKI,CKB9;
theorems FINSEQ_1,NAT_1,FUNCT_1,XCMPLX_1,PRE_FF,INT_1,NEWTON,CARD_4,FINSEQ_3,FUNCOP_1,TARSKI,XREAL_1,XXREAL_0,ORDINAL1,NAT_D,WSIERP_1,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
schemes NAT_1,FINSEQ_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,INT_1,NEWTON,WSIERP_1,CKB6;
constructors XXREAL_0,REAL_1,NAT_1,NAT_D,NEWTON,BINARITH,RELSET_1,CKB9;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th11: (for n,m being Integer holds (for n2,m2 being (Element of ( NAT )) holds (((((((m = ( 0 ) & n2 = n) & m2 = m) implies (( n div m ) = ( 0 ) & ( n2 div m2 ) = ( 0 ))) & ((((n >= ( 0 ) & m > ( 0 )) & n2 = n) & m2 = m) implies ( n div m ) = ( n2 div m2 ))) & ((((n >= ( 0 ) & m < ( 0 )) & n2 = n) & m2 = ( - m )) implies ((( m2 * ( n2 div m2 ) ) = n2 implies ( n div m ) = ( - ( n2 div m2 ) )) & (( m2 * ( n2 div m2 ) ) <> n2 implies ( n div m ) = ( ( - ( n2 div m2 ) ) - 1 ))))) & ((((n < ( 0 ) & m > ( 0 )) & n2 = ( - n )) & m2 = m) implies ((( m2 * ( n2 div m2 ) ) = n2 implies ( n div m ) = ( - ( n2 div m2 ) )) & (( m2 * ( n2 div m2 ) ) <> n2 implies ( n div m ) = ( ( - ( n2 div m2 ) ) - 1 ))))) & ((((n < ( 0 ) & m < ( 0 )) & n2 = ( - n )) & m2 = ( - m )) implies ( n div m ) = ( n2 div m2 )))))
proof
let n being Integer;
let m being Integer;
let n2 being (Element of ( NAT ));
let m2 being (Element of ( NAT ));
thus (((m = ( 0 ) & n2 = n) & m2 = m) implies (( n div m ) = ( 0 ) & ( n2 div m2 ) = ( 0 ))) by INT_1:48;
thus ((((n >= ( 0 ) & m > ( 0 )) & n2 = n) & m2 = m) implies ( n div m ) = ( n2 div m2 ));
thus ((((n >= ( 0 ) & m < ( 0 )) & n2 = n) & m2 = ( - m )) implies ((( m2 * ( n2 div m2 ) ) = n2 implies ( n div m ) = ( - ( n2 div m2 ) )) & (( m2 * ( n2 div m2 ) ) <> n2 implies ( n div m ) = ( ( - ( n2 div m2 ) ) - 1 ))))
proof
assume that
n >= ( 0 )
and
A1: m < ( 0 )
and
A2: n2 = n
and
A3: m2 = ( - m );
thus (( m2 * ( n2 div m2 ) ) = n2 implies ( n div m ) = ( - ( n2 div m2 ) ))
proof
assume A4: ( m2 * ( n2 div m2 ) ) = n2;
A5: m2 > ( 0 ) by A1,A3,XREAL_1:58;
then A6: n2 = ( ( m2 * ( n2 div m2 ) ) + ( n2 mod m2 ) ) by NAT_D:2;
thus ( n div m ) = [\ ( n / m ) /] by INT_1:def 9
.= [\ ( ( - n ) / ( - m ) ) /] by XCMPLX_1:191
.= ( ( - n2 ) div m2 ) by A2,A3,INT_1:def 9
.= ( - ( n2 div m2 ) ) by A4,A5,A6,WSIERP_1:42;
end;

thus (( m2 * ( n2 div m2 ) ) <> n2 implies ( n div m ) = ( ( - ( n2 div m2 ) ) - 1 ))
proof
assume A7: ( m2 * ( n2 div m2 ) ) <> n2;
A8: m2 > ( 0 ) by A1,A3,XREAL_1:58;
then n2 = ( ( m2 * ( n2 div m2 ) ) + ( n2 mod m2 ) ) by NAT_D:2;
then (not ( n2 mod m2 ) = ( 0 )) by A7;
then A9: ( ( ( - n2 ) div m2 ) + 1 ) = ( - ( n2 div m2 ) ) by A8,WSIERP_1:41;
( n div m ) = [\ ( n / m ) /] by INT_1:def 9
.= [\ ( ( - n ) / ( - m ) ) /] by XCMPLX_1:191
.= ( ( - n2 ) div m2 ) by A2,A3,INT_1:def 9;
hence thesis by A9;
end;

end;

thus ((((n < ( 0 ) & m > ( 0 )) & n2 = ( - n )) & m2 = m) implies ((( m2 * ( n2 div m2 ) ) = n2 implies ( n div m ) = ( - ( n2 div m2 ) )) & (( m2 * ( n2 div m2 ) ) <> n2 implies ( n div m ) = ( ( - ( n2 div m2 ) ) - 1 ))))
proof
assume that
n < ( 0 )
and
A10: m > ( 0 )
and
A11: n2 = ( - n )
and
A12: m2 = m;
thus (( m2 * ( n2 div m2 ) ) = n2 implies ( n div m ) = ( - ( n2 div m2 ) ))
proof
A13: n2 = ( ( m2 * ( n2 div m2 ) ) + ( n2 mod m2 ) ) by A10,A12,NAT_D:2;
assume A14: ( m2 * ( n2 div m2 ) ) = n2;
( n div m ) = ( ( - n2 ) div m ) by A11
.= ( - ( n2 div m2 ) ) by A10,A12,A14,A13,WSIERP_1:42;
hence thesis;
end;

thus (( m2 * ( n2 div m2 ) ) <> n2 implies ( n div m ) = ( ( - ( n2 div m2 ) ) - 1 ))
proof
assume A15: ( m2 * ( n2 div m2 ) ) <> n2;
n2 = ( ( m2 * ( n2 div m2 ) ) + ( n2 mod m2 ) ) by A10,A12,NAT_D:2;
then (not ( n2 mod m2 ) = ( 0 )) by A15;
then ( ( ( - n2 ) div m2 ) + 1 ) = ( - ( n2 div m2 ) ) by A10,A12,WSIERP_1:41;
hence thesis by A11,A12;
end;

end;

thus ((((n < ( 0 ) & m < ( 0 )) & n2 = ( - n )) & m2 = ( - m )) implies ( n div m ) = ( n2 div m2 ))
proof
assume that
n < ( 0 )
and
m < ( 0 )
and
A16: (n2 = ( - n ) & m2 = ( - m ));
thus ( n div m ) = [\ ( n / m ) /] by INT_1:def 9
.= [\ ( ( - n ) / ( - m ) ) /] by XCMPLX_1:191
.= ( n2 div m2 ) by A16,INT_1:def 9;
end;

end;
