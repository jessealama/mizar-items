environ
vocabularies ORDINAL1,CARD_1,FUNCT_1,TARSKI,RELAT_1,XBOOLE_0,ZFMISC_1,MCART_1,FUNCT_2,ORDINAL2,ORDINAL3,FUNCOP_1,SUBSET_1,NUMBERS,ARYTM_3,FINSET_1,XXREAL_0,ARYTM_1,NAT_1,CARD_2,CARD_3,CLASSES1,FINSUB_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,RELAT_1,ORDINAL1,MCART_1,ORDINAL2,ORDINAL3,WELLORD2,CLASSES1,CARD_1,NUMBERS,FUNCT_1,RELSET_1,FUNCT_2,XCMPLX_0,NAT_1,FINSET_1,FINSUB_1,FUNCOP_1,SUBSET_1,XXREAL_0,CARD_3;
definitions TARSKI,FUNCT_1,WELLORD2,XBOOLE_0,CARD_3,ORDINAL1;
theorems TARSKI,ENUMSET1,FUNCT_1,FUNCT_2,MCART_1,ORDINAL1,ORDINAL2,WELLORD2,ORDINAL3,CARD_1,NAT_1,ZFMISC_1,FUNCT_5,RELAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,CARD_3,CLASSES1,FUNCOP_1,CKB1;
schemes NAT_1,FUNCT_1,FINSET_1,PARTFUN1,CLASSES1,ORDINAL2;
registrations SUBSET_1,ORDINAL1,FINSET_1,XREAL_0,CARD_1,FUNCT_2,ZFMISC_1,XBOOLE_0,RELAT_1,CARD_3,FUNCT_1,FINSUB_1,SETFAM_1,FUNCOP_1,FUNCT_4,RELSET_1;
constructors ENUMSET1,WELLORD2,FUNCOP_1,ORDINAL3,XXREAL_0,XREAL_0,NAT_1,CARD_1,CARD_3,CLASSES1,SETFAM_1,FINSUB_1,FUNCT_4,RELSET_1;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve z for set;
reserve u for set;
reserve X for set;
reserve f for Function;
reserve g for Function;
theorem
(( bool X ),( bool ( card X ) ) are_equipotent  & ( card ( bool X ) ) = ( card ( bool ( card X ) ) ))
proof
X,( card X ) are_equipotent  by CARD_1:def 2;
then consider f such that A1: f is  one-to-one and A2: ( dom f ) = X and A3: ( rng f ) = ( card X ) by WELLORD2:def 4;
deffunc g(set) = ( f .: $1 );
consider g such that A4: (( dom g ) = ( bool X ) & (for x holds (x in ( bool X ) implies ( g . x ) = g(x)))) from FUNCT_1:sch 3;
thus ( bool X ),( bool ( card X ) ) are_equipotent 
proof
take g;
thus g is  one-to-one
proof
let x;
let y;
assume that
A5: x in ( dom g )
and
A6: y in ( dom g )
and
A7: ( g . x ) = ( g . y );
A8: (( g . x ) = ( f .: x ) & ( g . y ) = ( f .: y )) by A4,A5,A6;
A9: y c= x
proof
let z;
assume A10: z in y;
then ( f . z ) in ( f .: y ) by A2,A4,A6,FUNCT_1:def 6;
then (ex u st ((u in ( dom f ) & u in x) & ( f . z ) = ( f . u ))) by A7,A8,FUNCT_1:def 6;
hence thesis by A1,A2,A4,A6,A10,FUNCT_1:def 4;
end;
x c= y
proof
let z;
assume A11: z in x;
then ( f . z ) in ( f .: x ) by A2,A4,A5,FUNCT_1:def 6;
then (ex u st ((u in ( dom f ) & u in y) & ( f . z ) = ( f . u ))) by A7,A8,FUNCT_1:def 6;
hence thesis by A1,A2,A4,A5,A11,FUNCT_1:def 4;
end;
hence thesis by A9,XBOOLE_0:def 10;
end;

thus ( dom g ) = ( bool X ) by A4;
thus ( rng g ) c= ( bool ( card X ) )
proof
let x;
assume x in ( rng g );
then consider y such that A12: y in ( dom g ) and A13: x = ( g . y ) by FUNCT_1:def 3;
A14: ( f .: y ) c= ( rng f ) by RELAT_1:111;
( g . y ) = ( f .: y ) by A4,A12;
hence thesis by A3,A13,A14;
end;

let x;
A15: ( f " x ) c= ( dom f ) by RELAT_1:132;
assume x in ( bool ( card X ) );
then ( f .: ( f " x ) ) = x by A3,FUNCT_1:77;
then ( g . ( f " x ) ) = x by A2,A4,A15;
hence thesis by A2,A4,A15,FUNCT_1:def 3;
end;

hence thesis by CARD_1:5;
end;
