environ
vocabularies ORDINAL1,CARD_1,FUNCT_1,TARSKI,RELAT_1,XBOOLE_0,ZFMISC_1,MCART_1,FUNCT_2,ORDINAL2,ORDINAL3,FUNCOP_1,SUBSET_1,NUMBERS,ARYTM_3,FINSET_1,XXREAL_0,ARYTM_1,NAT_1,CARD_2,CARD_3,CLASSES1,FINSUB_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,RELAT_1,ORDINAL1,MCART_1,ORDINAL2,ORDINAL3,WELLORD2,CLASSES1,CARD_1,NUMBERS,FUNCT_1,RELSET_1,FUNCT_2,XCMPLX_0,NAT_1,FINSET_1,FINSUB_1,FUNCOP_1,SUBSET_1,XXREAL_0,CARD_3,CKB6,CKB7,CKB8;
definitions TARSKI,FUNCT_1,WELLORD2,XBOOLE_0,CARD_3,ORDINAL1,CKB6,CKB7,CKB8;
theorems TARSKI,ENUMSET1,FUNCT_1,FUNCT_2,MCART_1,ORDINAL1,ORDINAL2,WELLORD2,ORDINAL3,CARD_1,NAT_1,ZFMISC_1,FUNCT_5,RELAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,CARD_3,CLASSES1,FUNCOP_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB75,CKB76,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84;
schemes NAT_1,FUNCT_1,FINSET_1,PARTFUN1,CLASSES1,ORDINAL2,CKB77,CKB78;
registrations SUBSET_1,ORDINAL1,FINSET_1,XREAL_0,CARD_1,FUNCT_2,ZFMISC_1,XBOOLE_0,RELAT_1,CARD_3,FUNCT_1,FINSUB_1,SETFAM_1,FUNCOP_1,FUNCT_4,RELSET_1,CKB74;
constructors ENUMSET1,WELLORD2,FUNCOP_1,ORDINAL3,XXREAL_0,XREAL_0,NAT_1,CARD_1,CARD_3,CLASSES1,SETFAM_1,FINSUB_1,FUNCT_4,RELSET_1,CKB6,CKB7,CKB8;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve A for Ordinal;
reserve B for Ordinal;
reserve n for (Element of ( NAT ));
reserve A for Ordinal;
reserve B for Ordinal;
reserve n for  natural number;
reserve n for Nat;
reserve k for Nat;
theorem
Th112: (A is  limit_ordinal iff (for B holds (for n holds (B in A implies ( B +^ n ) in A))))
proof
thus (A is  limit_ordinal implies (for B holds (for n holds (B in A implies ( B +^ n ) in A))))
proof
assume A1: A is  limit_ordinal;
let B;
let n;
defpred P[ Nat ]
 means
( B +^ $1 ) in A;
assume B in A;
then A2: P[ ( 0 ) ] by ORDINAL2:27;
A3: (P[ k ] implies P[ ( k + 1 ) ])
proof
( k + 1 ) = ( succ k ) by NAT_1:38;
then ( B +^ ( k + 1 ) ) = ( succ ( B +^ k ) ) by ORDINAL2:28;
hence thesis by A1,ORDINAL1:28;
end;
P[ k ] from NAT_1:sch 2(A2,A3);
hence thesis;
end;

assume A4: (for B holds (for n holds (B in A implies ( B +^ n ) in A)));
now
let B;
assume B in A;
then ( B +^ 1 ) in A by A4;
hence ( succ B ) in A by ORDINAL2:31;
end;
hence thesis by ORDINAL1:28;
end;
