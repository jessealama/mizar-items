environ
vocabularies ORDINAL1,CARD_1,FUNCT_1,TARSKI,RELAT_1,XBOOLE_0,ZFMISC_1,MCART_1,FUNCT_2,ORDINAL2,ORDINAL3,FUNCOP_1,SUBSET_1,NUMBERS,ARYTM_3,FINSET_1,XXREAL_0,ARYTM_1,NAT_1,CARD_2,CARD_3,CLASSES1,FINSUB_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,RELAT_1,ORDINAL1,MCART_1,ORDINAL2,ORDINAL3,WELLORD2,CLASSES1,CARD_1,NUMBERS,FUNCT_1,RELSET_1,FUNCT_2,XCMPLX_0,NAT_1,FINSET_1,FINSUB_1,FUNCOP_1,SUBSET_1,XXREAL_0,CARD_3,CKB6,CKB7,CKB8;
definitions TARSKI,FUNCT_1,WELLORD2,XBOOLE_0,CARD_3,ORDINAL1,CKB6,CKB7,CKB8;
theorems TARSKI,ENUMSET1,FUNCT_1,FUNCT_2,MCART_1,ORDINAL1,ORDINAL2,WELLORD2,ORDINAL3,CARD_1,NAT_1,ZFMISC_1,FUNCT_5,RELAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,CARD_3,CLASSES1,FUNCOP_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB75,CKB76,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90;
schemes NAT_1,FUNCT_1,FINSET_1,PARTFUN1,CLASSES1,ORDINAL2,CKB77,CKB78;
registrations SUBSET_1,ORDINAL1,FINSET_1,XREAL_0,CARD_1,FUNCT_2,ZFMISC_1,XBOOLE_0,RELAT_1,CARD_3,FUNCT_1,FINSUB_1,SETFAM_1,FUNCOP_1,FUNCT_4,RELSET_1,CKB74;
constructors ENUMSET1,WELLORD2,FUNCOP_1,ORDINAL3,XXREAL_0,XREAL_0,NAT_1,CARD_1,CARD_3,CLASSES1,SETFAM_1,FINSUB_1,FUNCT_4,RELSET_1,CKB6,CKB7,CKB8;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve A for Ordinal;
reserve B for Ordinal;
reserve M for Cardinal;
reserve x for set;
reserve X for set;
reserve Y for set;
reserve Z for set;
reserve n for (Element of ( NAT ));
Lm5:now
let n;
assume A1: (for Z being  finite set holds (((( card Z ) = n & Z <> ( {} )) & (for X holds (for Y holds ((X in Z & Y in Z) implies (X c= Y or Y c= X))))) implies ( union Z ) in Z));
let Z being  finite set;
assume that
A2: ( card Z ) = ( n + 1 )
and
A3: Z <> ( {} )
and
A4: (for X holds (for Y holds ((X in Z & Y in Z) implies (X c= Y or Y c= X))));
set y = the (Element of Z);
per cases ;
suppose n = ( 0 );

then consider x such that A5: Z = { x } by A2,CKB50:1;
( union Z ) = x by A5,ZFMISC_1:25;
hence ( union Z ) in Z by A5,TARSKI:def 1;
end;
suppose A6: n <> ( 0 );

set Y = ( Z \ { y } );
reconsider Y as  finite set;
{ y } c= Z by A3,ZFMISC_1:31;
then A7: ( card Y ) = ( ( n + 1 ) - ( card { y } ) ) by A2,CKB52:1
.= ( ( n + 1 ) - 1 ) by CARD_1:30
.= n;
(for a,b being set holds ((a in Y & b in Y) implies (a c= b or b c= a))) by A4;
then A8: ( union Y ) in Y by A1,A6,A7,CARD_1:27;
then A9: ( union Y ) in Z;
Z = ( ( Z \ { y } ) \/ { y } )
proof
thus Z c= ( ( Z \ { y } ) \/ { y } )
proof
let x;
assume x in Z;
then (x in ( Z \ { y } ) or x in { y }) by XBOOLE_0:def 5;
hence thesis by XBOOLE_0:def 3;
end;

let x;
assume x in ( ( Z \ { y } ) \/ { y } );
then A10: (x in ( Z \ { y } ) or x in { y }) by XBOOLE_0:def 3;
{ y } c= Z by A3,ZFMISC_1:31;
hence thesis by A10;
end;
then A11: ( union Z ) = ( ( union Y ) \/ ( union { y } ) ) by ZFMISC_1:78
.= ( ( union Y ) \/ y ) by ZFMISC_1:25;
A12: y in Z by A3;
(y c= ( union Y ) or ( union Y ) c= y) by A4,A8;
hence ( union Z ) in Z by A9,A12,A11,XBOOLE_1:12;
end;
end;
reserve A for Ordinal;
reserve B for Ordinal;
reserve M for Cardinal;
registration
cluster  infinite ->  limit_ordinal for Cardinal;
coherence
proof
let M being Cardinal;
assume M is  infinite;
then A1: (not M in ( omega ));
assume (not thesis);
then consider A such that A2: M = ( succ A ) by ORDINAL1:29;
((( omega ) <> M & ( omega ) c= M) iff ( omega ) c< M) by XBOOLE_0:def 8;
then (( omega ) = ( succ A ) or ( omega ) in ( succ A )) by A1,A2,CARD_1:4,ORDINAL1:11;
then A3: ( omega ) c= A by CKB89:1,ORDINAL1:22,ORDINAL1:29;
( card ( A +^ 1 ) ) = ( ( card 1 ) +` ( card A ) ) by CKB20:1
.= ( card ( 1 +^ A ) ) by CKB20:1
.= ( card A ) by A3,CKB90:1;
then ( card ( succ A ) ) = ( card A ) by ORDINAL2:31;
then A4: A,( succ A ) are_equipotent  by CARD_1:5;
A5: (not ( succ A ) c= A) by ORDINAL1:5,ORDINAL1:6;
(ex B st (( succ A ) = B & (for A holds (A,B are_equipotent  implies B c= A)))) by A2,CARD_1:def 1;
hence contradiction by A4,A5;
end;
end;
