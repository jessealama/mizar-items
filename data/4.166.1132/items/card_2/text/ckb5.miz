environ
vocabularies ORDINAL1,CARD_1,FUNCT_1,TARSKI,RELAT_1,XBOOLE_0,ZFMISC_1,MCART_1,FUNCT_2,ORDINAL2,ORDINAL3,FUNCOP_1,SUBSET_1,NUMBERS,ARYTM_3,FINSET_1,XXREAL_0,ARYTM_1,NAT_1,CARD_2,CARD_3,CLASSES1,FINSUB_1;
notations TARSKI,XBOOLE_0,ENUMSET1,ZFMISC_1,RELAT_1,ORDINAL1,MCART_1,ORDINAL2,ORDINAL3,WELLORD2,CLASSES1,CARD_1,NUMBERS,FUNCT_1,RELSET_1,FUNCT_2,XCMPLX_0,NAT_1,FINSET_1,FINSUB_1,FUNCOP_1,SUBSET_1,XXREAL_0,CARD_3;
definitions TARSKI,FUNCT_1,WELLORD2,XBOOLE_0,CARD_3,ORDINAL1;
theorems TARSKI,ENUMSET1,FUNCT_1,FUNCT_2,MCART_1,ORDINAL1,ORDINAL2,WELLORD2,ORDINAL3,CARD_1,NAT_1,ZFMISC_1,FUNCT_5,RELAT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,CARD_3,CLASSES1,FUNCOP_1,CKB1,CKB2,CKB3,CKB4;
schemes NAT_1,FUNCT_1,FINSET_1,PARTFUN1,CLASSES1,ORDINAL2;
registrations SUBSET_1,ORDINAL1,FINSET_1,XREAL_0,CARD_1,FUNCT_2,ZFMISC_1,XBOOLE_0,RELAT_1,CARD_3,FUNCT_1,FINSUB_1,SETFAM_1,FUNCOP_1,FUNCT_4,RELSET_1;
constructors ENUMSET1,WELLORD2,FUNCOP_1,ORDINAL3,XXREAL_0,XREAL_0,NAT_1,CARD_1,CARD_3,CLASSES1,SETFAM_1,FINSUB_1,FUNCT_4,RELSET_1;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve X for set;
reserve Y for set;
reserve f for Function;
theorem
Lm2: ([: X,Y :],[: Y,X :] are_equipotent  & ( card [: X,Y :] ) = ( card [: Y,X :] ))
proof
deffunc f(set) = [ ( $1 `2 ),( $1 `1 ) ];
consider f such that A1: (( dom f ) = [: X,Y :] & (for x holds (x in [: X,Y :] implies ( f . x ) = f(x)))) from FUNCT_1:sch 3;
thus [: X,Y :],[: Y,X :] are_equipotent 
proof
take f;
thus f is  one-to-one
proof
let x;
let y;
assume A2: (x in ( dom f ) & y in ( dom f ));
then A3: (x = [ ( x `1 ),( x `2 ) ] & y = [ ( y `1 ),( y `2 ) ]) by A1,MCART_1:21;
assume A4: ( f . x ) = ( f . y );
A5: (( f . x ) = [ ( x `2 ),( x `1 ) ] & ( f . y ) = [ ( y `2 ),( y `1 ) ]) by A1,A2;
then ( x `1 ) = ( y `1 ) by A4,ZFMISC_1:27;
hence thesis by A3,A5,A4,ZFMISC_1:27;
end;

thus ( dom f ) = [: X,Y :] by A1;
thus ( rng f ) c= [: Y,X :]
proof
let x;
assume x in ( rng f );
then consider y such that A6: y in ( dom f ) and A7: x = ( f . y ) by FUNCT_1:def 3;
A8: ( y `2 ) in Y by A1,A6,MCART_1:10;
(x = [ ( y `2 ),( y `1 ) ] & ( y `1 ) in X) by A1,A6,A7,MCART_1:10;
hence thesis by A8,ZFMISC_1:87;
end;

let x;
A9: (( [ ( x `2 ),( x `1 ) ] `1 ) = ( x `2 ) & ( [ ( x `2 ),( x `1 ) ] `2 ) = ( x `1 )) by MCART_1:7;
assume A10: x in [: Y,X :];
then A11: x = [ ( x `1 ),( x `2 ) ] by MCART_1:21;
(( x `1 ) in Y & ( x `2 ) in X) by A10,MCART_1:10;
then A12: [ ( x `2 ),( x `1 ) ] in [: X,Y :] by ZFMISC_1:87;
then ( f . [ ( x `2 ),( x `1 ) ] ) in ( rng f ) by A1,FUNCT_1:def 3;
hence thesis by A1,A11,A12,A9;
end;

hence thesis by CARD_1:5;
end;
