environ
vocabularies STRUCT_0,SETFAM_1,TARSKI,SUBSET_1,XBOOLE_0,ZFMISC_1,RCOMP_1,RELAT_1,FUNCT_1,ORDINAL2,FUNCOP_1,CARD_5,CARD_1,PRE_TOPC;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELSET_1,CARD_1,STRUCT_0,CKB1,CKB2;
definitions TARSKI,STRUCT_0,SUBSET_1,CKB2;
theorems TARSKI,SUBSET_1,ZFMISC_1,SETFAM_1,XBOOLE_0,XBOOLE_1,FUNCT_1,FUNCT_2,RELAT_1,FUNCOP_1,CARD_1,CKB2;
schemes SUBSET_1;
registrations XBOOLE_0,SUBSET_1,STRUCT_0,RELSET_1,CKB1;
constructors SETFAM_1,PARTFUN1,STRUCT_0,FUNCOP_1,CARD_1,DOMAIN_1,RELSET_1,CKB1,CKB2;
requirements BOOLE,SUBSET;
begin
reserve T for TopStruct;
registration
cluster non  empty  strict  TopSpace-like for TopStruct;
existence
proof
now
take X = { ( {} ) };
set T = { ( {} ),X };
T c= ( bool X )
proof
let x being set;
assume x in T;
then (x = ( {} ) or x = X) by TARSKI:def 2;
then x c= X by XBOOLE_1:2;
hence thesis;
end;
then reconsider T as (Subset-Family of X);
take T;
set Y = TopStruct (# X,T #);
thus (the carrier of Y) in (the topology of Y) by TARSKI:def 2;
thus (for a being (Subset-Family of Y) holds (a c= (the topology of Y) implies ( union a ) in (the topology of Y)))
proof
let a being (Subset-Family of Y);
assume a c= (the topology of Y);
then (((a = ( {} ) or a = { ( {} ) }) or a = { X }) or a = { ( {} ),X }) by ZFMISC_1:36;
then ((( union a ) = ( {} ) or ( union a ) = X) or ( union a ) = ( ( {} ) \/ X )) by ZFMISC_1:2,ZFMISC_1:25,ZFMISC_1:75;
hence thesis by TARSKI:def 2;
end;

let a being (Subset of Y);
let b being (Subset of Y);
assume that
A1: a in (the topology of Y)
and
A2: b in (the topology of Y);
A3: (b = ( {} ) or b = X) by A2,TARSKI:def 2;
(a = ( {} ) or a = X) by A1,TARSKI:def 2;
hence ( a /\ b ) in (the topology of Y) by A3,TARSKI:def 2;
end;
then consider X being non  empty set,T being (Subset-Family of X) such that A4: (((the carrier of TopStruct (# X,T #)) in (the topology of TopStruct (# X,T #)) & (for a being (Subset-Family of TopStruct (# X,T #)) holds (a c= (the topology of TopStruct (# X,T #)) implies ( union a ) in (the topology of TopStruct (# X,T #))))) & (for a,b being (Subset of TopStruct (# X,T #)) holds ((a in (the topology of TopStruct (# X,T #)) & b in (the topology of TopStruct (# X,T #))) implies ( a /\ b ) in (the topology of TopStruct (# X,T #)))));
take TopStruct (# X,T #);
thus TopStruct (# X,T #) is non  empty;
thus thesis by A4,CKB2:def 1;
end;
end;
