environ
vocabularies NUMBERS,XBOOLE_0,RLVECT_1,SUBSET_1,REAL_1,RELAT_1,CARD_1,ARYTM_3,ARYTM_1,TARSKI,SUPINF_2,ALGSTR_0,RUSUB_4,RLSUB_1,STRUCT_0,XXREAL_0,SETFAM_1,BHSP_1,PROB_2,RLVECT_2,FINSEQ_1,FUNCT_1,CARD_3,NAT_1,PARTFUN1,VALUED_1,CONVEX1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,SETFAM_1,DOMAIN_1,STRUCT_0,ALGSTR_0,CARD_1,NUMBERS,XCMPLX_0,FUNCT_1,NAT_1,REAL_1,PARTFUN1,FINSEQ_1,RLVECT_1,RLSUB_1,RLVECT_2,RVSUM_1,BHSP_1,RUSUB_4,RUSUB_5,XXREAL_0,CKB1,CKB2,CKB35;
definitions TARSKI,XBOOLE_0,RLVECT_1,RVSUM_1,CKB1,CKB2,CKB35;
theorems BHSP_1,SUBSET_1,RLVECT_1,RVSUM_1,FUNCT_1,FINSEQ_1,TARSKI,ZFMISC_1,XBOOLE_0,SETFAM_1,RLSUB_1,RUSUB_4,RUSUB_5,RLVECT_2,CARD_1,FINSEQ_3,FINSEQ_4,CARD_2,ENUMSET1,XCMPLX_1,XREAL_1,FINSOP_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41;
schemes DOMAIN_1,SUBSET_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,MEMBERED,STRUCT_0,RLVECT_1,RUSUB_4,VALUED_0,FINSEQ_1,CARD_1,CKB29,CKB30;
constructors SETFAM_1,DOMAIN_1,XXREAL_0,REAL_1,PARTFUN1,BINOP_2,FINSEQ_4,FINSOP_1,RVSUM_1,RLVECT_2,RUSUB_5,RELSET_1,CKB1,CKB2,CKB35;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
theorem
Lm14: (for V being RealLinearSpace holds (for v1,v2,v3 being (VECTOR of V) holds (for L being (Linear_Combination of { v1,v2,v3 }) holds (((v1 <> v2 & v2 <> v3) & v3 <> v1) implies ( Sum L ) = ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( L . v3 ) * v3 ) )))))
proof
let V being RealLinearSpace;
let v1 being (VECTOR of V);
let v2 being (VECTOR of V);
let v3 being (VECTOR of V);
let L being (Linear_Combination of { v1,v2,v3 });
assume that
A1: v1 <> v2
and
A2: v2 <> v3
and
A3: v3 <> v1;
A4: ( Carrier L ) c= { v1,v2,v3 } by RLVECT_2:def 6;
per cases  by A4,ZFMISC_1:118;
suppose ( Carrier L ) = ( {} );

then A5: L = ( ZeroLC V ) by RLVECT_2:def 5;
then ( Sum L ) = ( 0. V ) by RLVECT_2:30
.= ( ( 0. V ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( 0. V ) + ( 0. V ) ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( ( 0 ) * v1 ) + ( 0. V ) ) + ( 0. V ) ) by RLVECT_1:10
.= ( ( ( ( 0 ) * v1 ) + ( ( 0 ) * v2 ) ) + ( 0. V ) ) by RLVECT_1:10
.= ( ( ( ( 0 ) * v1 ) + ( ( 0 ) * v2 ) ) + ( ( 0 ) * v3 ) ) by RLVECT_1:10
.= ( ( ( ( L . v1 ) * v1 ) + ( ( 0 ) * v2 ) ) + ( ( 0 ) * v3 ) ) by A5,RLVECT_2:20
.= ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( 0 ) * v3 ) ) by A5,RLVECT_2:20
.= ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) by A5,RLVECT_2:20;
hence thesis;
end;
suppose A6: ( Carrier L ) = { v1 };

then reconsider L as (Linear_Combination of { v1 }) by RLVECT_2:def 6;
A7: (not v2 in ( Carrier L )) by A1,A6,TARSKI:def 1;
A8: (not v3 in ( Carrier L )) by A3,A6,TARSKI:def 1;
( Sum L ) = ( ( L . v1 ) * v1 ) by RLVECT_2:32
.= ( ( ( L . v1 ) * v1 ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( ( L . v1 ) * v1 ) + ( 0. V ) ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( ( L . v1 ) * v1 ) + ( ( 0 ) * v2 ) ) + ( 0. V ) ) by RLVECT_1:10
.= ( ( ( ( L . v1 ) * v1 ) + ( ( 0 ) * v2 ) ) + ( ( 0 ) * v3 ) ) by RLVECT_1:10
.= ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( 0 ) * v3 ) ) by A7,RLVECT_2:19
.= ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) by A8,RLVECT_2:19;
hence thesis;
end;
suppose A9: ( Carrier L ) = { v2 };

then reconsider L as (Linear_Combination of { v2 }) by RLVECT_2:def 6;
A10: (not v1 in ( Carrier L )) by A1,A9,TARSKI:def 1;
A11: (not v3 in ( Carrier L )) by A2,A9,TARSKI:def 1;
( Sum L ) = ( ( L . v2 ) * v2 ) by RLVECT_2:32
.= ( ( 0. V ) + ( ( L . v2 ) * v2 ) ) by RLVECT_1:4
.= ( ( ( 0. V ) + ( ( L . v2 ) * v2 ) ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( ( 0 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( 0. V ) ) by RLVECT_1:10
.= ( ( ( ( 0 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( 0 ) * v3 ) ) by RLVECT_1:10
.= ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( 0 ) * v3 ) ) by A10,RLVECT_2:19
.= ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) by A11,RLVECT_2:19;
hence thesis;
end;
suppose A12: ( Carrier L ) = { v3 };

then reconsider L as (Linear_Combination of { v3 }) by RLVECT_2:def 6;
A13: (not v1 in ( Carrier L )) by A3,A12,TARSKI:def 1;
A14: (not v2 in ( Carrier L )) by A2,A12,TARSKI:def 1;
( Sum L ) = ( ( L . v3 ) * v3 ) by RLVECT_2:32
.= ( ( 0. V ) + ( ( L . v3 ) * v3 ) ) by RLVECT_1:4
.= ( ( ( 0. V ) + ( 0. V ) ) + ( ( L . v3 ) * v3 ) ) by RLVECT_1:4
.= ( ( ( ( 0 ) * v1 ) + ( 0. V ) ) + ( ( L . v3 ) * v3 ) ) by RLVECT_1:10
.= ( ( ( ( 0 ) * v1 ) + ( ( 0 ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) by RLVECT_1:10
.= ( ( ( ( L . v1 ) * v1 ) + ( ( 0 ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) by A13,RLVECT_2:19
.= ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) by A14,RLVECT_2:19;
hence thesis;
end;
suppose A15: ( Carrier L ) = { v1,v2 };

then A16: ( Sum L ) = ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) by A1,RLVECT_2:36
.= ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( 0. V ) ) by RLVECT_1:4
.= ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( 0 ) * v3 ) ) by RLVECT_1:10;
(not v3 in ( Carrier L )) by A2,A3,A15,TARSKI:def 2;
hence thesis by A16,RLVECT_2:19;
end;
suppose A17: ( Carrier L ) = { v1,v3 };

then A18: ( Sum L ) = ( ( ( L . v1 ) * v1 ) + ( ( L . v3 ) * v3 ) ) by A3,RLVECT_2:36
.= ( ( ( ( L . v1 ) * v1 ) + ( 0. V ) ) + ( ( L . v3 ) * v3 ) ) by RLVECT_1:4
.= ( ( ( ( L . v1 ) * v1 ) + ( ( 0 ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) by RLVECT_1:10;
(not v2 in ( Carrier L )) by A1,A2,A17,TARSKI:def 2;
hence thesis by A18,RLVECT_2:19;
end;
suppose A19: ( Carrier L ) = { v2,v3 };

then A20: ( Sum L ) = ( ( ( L . v2 ) * v2 ) + ( ( L . v3 ) * v3 ) ) by A2,RLVECT_2:36
.= ( ( ( 0. V ) + ( ( L . v2 ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) by RLVECT_1:4
.= ( ( ( ( 0 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) by RLVECT_1:10;
(not v1 in ( Carrier L )) by A1,A3,A19,TARSKI:def 2;
hence thesis by A20,RLVECT_2:19;
end;
suppose ( Carrier L ) = { v1,v2,v3 };

then consider F being (FinSequence of (the carrier of V)) such that A21: (F is  one-to-one & ( rng F ) = { v1,v2,v3 }) and A22: ( Sum L ) = ( Sum ( L (#) F ) ) by RLVECT_2:def 8;
(((((F = <* v1,v2,v3 *> or F = <* v1,v3,v2 *>) or F = <* v2,v1,v3 *>) or F = <* v2,v3,v1 *>) or F = <* v3,v1,v2 *>) or F = <* v3,v2,v1 *>) by A1,A2,A3,A21,CKB41:1;
then (((((( L (#) F ) = <* ( ( L . v1 ) * v1 ),( ( L . v2 ) * v2 ),( ( L . v3 ) * v3 ) *> or ( L (#) F ) = <* ( ( L . v1 ) * v1 ),( ( L . v3 ) * v3 ),( ( L . v2 ) * v2 ) *>) or ( L (#) F ) = <* ( ( L . v2 ) * v2 ),( ( L . v1 ) * v1 ),( ( L . v3 ) * v3 ) *>) or ( L (#) F ) = <* ( ( L . v2 ) * v2 ),( ( L . v3 ) * v3 ),( ( L . v1 ) * v1 ) *>) or ( L (#) F ) = <* ( ( L . v3 ) * v3 ),( ( L . v1 ) * v1 ),( ( L . v2 ) * v2 ) *>) or ( L (#) F ) = <* ( ( L . v3 ) * v3 ),( ( L . v2 ) * v2 ),( ( L . v1 ) * v1 ) *>) by RLVECT_2:28;
then ((( Sum L ) = ( ( ( ( L . v1 ) * v1 ) + ( ( L . v2 ) * v2 ) ) + ( ( L . v3 ) * v3 ) ) or ( Sum L ) = ( ( ( L . v1 ) * v1 ) + ( ( ( L . v2 ) * v2 ) + ( ( L . v3 ) * v3 ) ) )) or ( Sum L ) = ( ( ( L . v2 ) * v2 ) + ( ( ( L . v1 ) * v1 ) + ( ( L . v3 ) * v3 ) ) )) by A22,RLVECT_1:46;
hence thesis by RLVECT_1:def 3;
end;
end;
