environ
vocabularies XBOOLE_0,ORDERS_2,SUBSET_1,FIN_TOPO,TARSKI,PRE_TOPC,FUNCT_1,NUMBERS,ZFMISC_1,STRUCT_0,ARYTM_3,CARD_1,RELAT_1,NAT_1,FINTOPO3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,RELAT_1,FUNCT_1,FUNCT_2,FIN_TOPO,PRE_TOPC,STRUCT_0,ORDERS_2,CKB1;
definitions TARSKI,XBOOLE_0,SUBSET_1,CKB1;
theorems TARSKI,SUBSET_1,FUNCT_1,FUNCT_2,XBOOLE_0,XBOOLE_1,FIN_TOPO,FINTOPO2,ORDINAL1,CKB1,CKB2,CKB3,CKB4;
schemes RECDEF_1,NAT_1,DOMAIN_1;
registrations SUBSET_1,ORDINAL1,RELSET_1,STRUCT_0,FIN_TOPO;
constructors NAT_1,FIN_TOPO,RELSET_1,CKB1;
requirements SUBSET,NUMERALS,ARITHM,BOOLE;
begin
reserve T for non  empty RelStr;
reserve A for (Subset of T);
reserve x for (Element of T);
reserve x2 for (Element of T);
reserve y for (Element of T);
theorem
Th4: ( A ^d ) = ( ( ( A ` ) ^f ) ` )
proof
(for x being set holds (x in ( A ^d ) iff x in ( ( ( A ` ) ^f ) ` )))
proof
let x being set;
A1: ( ( A ` ) ^f ) = { x2: (ex y st (y in ( A ` ) & x2 in ( U_FT y ))) } by FIN_TOPO:def 12;
thus (x in ( A ^d ) implies x in ( ( ( A ` ) ^f ) ` ))
proof
A2: ( ( A ` ) ^f ) = { x2: (ex y st (y in ( A ` ) & x2 in ( U_FT y ))) } by FIN_TOPO:def 12;
assume A3: x in ( A ^d );
then (not (ex x2 st (x2 = x & (ex y st (y in ( A ` ) & x2 in ( U_FT y )))))) by CKB3:1;
then (not x in ( ( A ` ) ^f )) by A2;
hence thesis by A3,SUBSET_1:29;
end;

assume A4: x in ( ( ( A ` ) ^f ) ` );
then (not x in ( ( A ` ) ^f )) by XBOOLE_0:def 5;
then (for y holds (y in ( A ` ) implies (not x in ( U_FT y )))) by A1;
hence thesis by A4;
end;
hence thesis by TARSKI:1;
end;
