environ
vocabularies XBOOLE_0,ORDERS_2,SUBSET_1,FIN_TOPO,TARSKI,PRE_TOPC,FUNCT_1,NUMBERS,ZFMISC_1,STRUCT_0,ARYTM_3,CARD_1,RELAT_1,NAT_1,FINTOPO3;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,NAT_1,RELAT_1,FUNCT_1,FUNCT_2,FIN_TOPO,PRE_TOPC,STRUCT_0,ORDERS_2,CKB1,CKB14,CKB15,CKB16,CKB17;
definitions TARSKI,XBOOLE_0,SUBSET_1,CKB1,CKB14,CKB15,CKB16,CKB17;
theorems TARSKI,SUBSET_1,FUNCT_1,FUNCT_2,XBOOLE_0,XBOOLE_1,FIN_TOPO,FINTOPO2,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
schemes RECDEF_1,NAT_1,DOMAIN_1;
registrations SUBSET_1,ORDINAL1,RELSET_1,STRUCT_0,FIN_TOPO;
constructors NAT_1,FIN_TOPO,RELSET_1,CKB1,CKB14,CKB15,CKB16,CKB17;
requirements SUBSET,NUMERALS,ARITHM,BOOLE;
begin
reserve T for non empty RelStr;
reserve A for (Subset of T);
theorem
(T is  filled implies (for n being (Element of ( NAT )) holds A c= ( Fcl (A,n) )))
proof
defpred P[ (Element of ( NAT )) ]
 means
A c= ( ( Fcl A ) . $1 );
assume A1: T is  filled;
A2: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being (Element of ( NAT ));
assume P[ k ];
then ( A ^b ) c= ( ( Fcl (A,k) ) ^b ) by FIN_TOPO:14;
then A3: ( A ^b ) c= ( Fcl (A,( k + 1 )) ) by CKB14:def 1;
A c= ( A ^b ) by A1,FIN_TOPO:13;
hence thesis by A3,XBOOLE_1:1;
end;
let n being (Element of ( NAT ));
A4: P[ ( 0 ) ] by CKB14:def 1;
(for n being (Element of ( NAT )) holds P[ n ]) from NAT_1:sch 1(A4,A2);
hence thesis;
end;
