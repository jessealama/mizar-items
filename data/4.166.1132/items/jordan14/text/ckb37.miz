environ
vocabularies NUMBERS,FUNCT_1,GOBOARD5,JORDAN2C,TOPREAL1,GOBOARD9,CONNSP_1,SUBSET_1,GOBOARD1,FINSEQ_1,EUCLID,XXREAL_0,ARYTM_3,RCOMP_1,MATRIX_1,PARTFUN1,RELAT_1,ARYTM_1,PRE_TOPC,TREES_1,TOPS_1,MCART_1,REAL_1,RELAT_2,TOPREAL2,JORDAN8,JORDAN1H,JORDAN11,TARSKI,RLTOPSP1,JORDAN13,XBOOLE_0,CARD_1,GOBRD13,ORDINAL4,STRUCT_0,PSCOMP_1,SPPOL_1,NEWTON,COMPLEX1,JORDAN14;
notations TARSKI,XBOOLE_0,SUBSET_1,GOBOARD5,NUMBERS,COMPLEX1,REAL_1,NAT_1,NAT_D,NEWTON,PARTFUN1,FINSEQ_1,SEQM_3,STRUCT_0,MATRIX_1,PRE_TOPC,TOPREAL2,TOPS_1,COMPTS_1,CONNSP_1,RLVECT_1,RLTOPSP1,EUCLID,TOPREAL1,GOBOARD1,SPPOL_1,PSCOMP_1,GOBOARD9,JORDAN2C,JORDAN8,GOBRD13,JORDAN1H,JORDAN11,JORDAN13,XXREAL_0,CKB7;
definitions TARSKI,CKB7;
theorems NAT_1,FINSEQ_1,GOBOARD1,FINSEQ_4,EUCLID,FINSEQ_3,SPPOL_2,TARSKI,PSCOMP_1,FINSEQ_5,GOBOARD7,TOPREAL1,JORDAN5B,GOBOARD5,GOBOARD9,SUBSET_1,GOBRD11,SPRECT_3,GOBOARD6,TOPS_1,JORDAN8,GOBRD13,SPRECT_4,CONNSP_1,XBOOLE_0,XBOOLE_1,NEWTON,GOBRD14,TOPREAL6,INT_1,JORDAN2C,PRE_TOPC,JORDAN9,JORDAN1H,TSEP_1,GOBRD12,JORDAN1A,JORDAN1C,JORDAN11,JORDAN13,XREAL_1,XXREAL_0,CARD_1,MATRIX_1,NAT_D,XREAL_0,RLTOPSP1,SEQM_3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36;
schemes NAT_1;
registrations XBOOLE_0,ORDINAL1,RELSET_1,NUMBERS,INT_1,MEMBERED,FINSEQ_1,STRUCT_0,PRE_TOPC,TOPS_1,COMPTS_1,TOPREAL1,TOPREAL2,TOPREAL5,SPRECT_2,SPRECT_3,JORDAN2C,TOPREAL6,JORDAN8,GOBRD14,EUCLID,RLTOPSP1,CKB6,CKB11;
constructors PARTFUN1,XXREAL_0,REAL_1,NAT_1,FINSEQ_4,NEWTON,NAT_D,TOPS_1,CONNSP_1,REALSET2,TOPREAL4,JORDAN1,PSCOMP_1,GOBOARD9,JORDAN2C,JORDAN8,JORDAN1H,JORDAN11,JORDAN13,CONVEX1,RELSET_1,CKB7;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
Th35: (for C being Simple_closed_curve holds (for n,m being (Element of ( NAT )) holds ((n is_sufficiently_large_for C & n <= m) implies ( L~ ( Span (C,m) ) ) c= ( Cl ( LeftComp ( Span (C,n) ) ) ))))
proof
let C being Simple_closed_curve;
let i being (Element of ( NAT ));
let j being (Element of ( NAT ));
assume that
A1: i is_sufficiently_large_for C
and
A2: i <= j
and
A3: (not ( L~ ( Span (C,j) ) ) c= ( Cl ( LeftComp ( Span (C,i) ) ) ));
A4: j is_sufficiently_large_for C by A1,A2,CKB31:1;
then A5: ( Span (C,j) ) is_sequence_on ( Gauge (C,j) ) by JORDAN13:def 1;
set G = ( Gauge (C,j) );
set f = ( Span (C,j) );
consider p being (Point of ( TOP-REAL 2 )) such that A6: p in ( L~ ( Span (C,j) ) ) and A7: (not p in ( Cl ( LeftComp ( Span (C,i) ) ) )) by A3,SUBSET_1:2;
consider i1 being (Element of ( NAT )) such that A8: 1 <= i1 and A9: ( i1 + 1 ) <= ( len ( Span (C,j) ) ) and A10: p in ( LSeg (( Span (C,j) ),i1) ) by A6,SPPOL_2:13;
A11: i1 < ( len ( Span (C,j) ) ) by A9,NAT_1:13;
A12: ( Span (C,i) ) is_sequence_on ( Gauge (C,i) ) by A1,JORDAN13:def 1;
now
(ex i2,j2 being (Element of ( NAT )) st ((((1 <= i2 & ( i2 + 1 ) <= ( len ( Gauge (C,i) ) )) & 1 <= j2) & ( j2 + 1 ) <= ( width ( Gauge (C,i) ) )) & ( left_cell (( Span (C,j) ),i1,G) ) c= ( cell (( Gauge (C,i) ),i2,j2) )))
proof
A13: 1 <= ( i1 + 1 ) by NAT_1:11;
then A14: ( i1 + 1 ) in ( dom f ) by A9,FINSEQ_3:25;
then consider i5,j5 being (Element of ( NAT )) such that A15: [ i5,j5 ] in ( Indices ( Gauge (C,j) ) ) and A16: ( f /. ( i1 + 1 ) ) = ( ( Gauge (C,j) ) * (i5,j5) ) by A5,GOBOARD1:def 9;
A17: 1 <= i5 by A15,MATRIX_1:38;
A18: j5 <= ( width ( Gauge (C,j) ) ) by A15,MATRIX_1:38;
A19: i5 <= ( len ( Gauge (C,j) ) ) by A15,MATRIX_1:38;
A20: 1 <= j5 by A15,MATRIX_1:38;
A21: i1 in ( dom f ) by A8,A11,FINSEQ_3:25;
then consider i4,j4 being (Element of ( NAT )) such that A22: [ i4,j4 ] in ( Indices ( Gauge (C,j) ) ) and A23: ( f /. i1 ) = ( ( Gauge (C,j) ) * (i4,j4) ) by A5,GOBOARD1:def 9;
A24: 1 <= i4 by A22,MATRIX_1:38;
( ( abs ( i4 - i5 ) ) + ( abs ( j4 - j5 ) ) ) = 1 by A5,A21,A22,A23,A14,A15,A16,GOBOARD1:def 9;
then A25: ((( abs ( i4 - i5 ) ) = 1 & j4 = j5) or (( abs ( j4 - j5 ) ) = 1 & i4 = i5)) by SEQM_3:42;
A26: 1 <= j4 by A22,MATRIX_1:38;
( left_cell (f,i1,G) ) = ( left_cell (f,i1,G) );
then A27: (((((i4 = i5 & ( j4 + 1 ) = j5) & ( left_cell (f,i1,G) ) = ( cell (G,( i4 -' 1 ),j4) )) or ((( i4 + 1 ) = i5 & j4 = j5) & ( left_cell (f,i1,G) ) = ( cell (G,i4,j4) ))) or ((i4 = ( i5 + 1 ) & j4 = j5) & ( left_cell (f,i1,G) ) = ( cell (G,i5,( j5 -' 1 )) ))) or ((i4 = i5 & j4 = ( j5 + 1 )) & ( left_cell (f,i1,G) ) = ( cell (G,i4,j5) ))) by A5,A8,A9,A22,A23,A15,A16,GOBRD13:def 3;
A28: j4 <= ( width ( Gauge (C,j) ) ) by A22,MATRIX_1:38;
A29: i4 <= ( len ( Gauge (C,j) ) ) by A22,MATRIX_1:38;
per cases  by A25,SEQM_3:41;
suppose A30: (i4 = i5 & ( j4 + 1 ) = j5);

1 < i4 by A1,A2,A8,A11,A22,A23,CKB25:1,CKB31:1;
then ( 1 + 1 ) <= i4 by NAT_1:13;
then A31: 1 <= ( i4 -' 1 ) by JORDAN5B:2;
( ( i4 -' 1 ) + 1 ) = i4 by A24,XREAL_1:235;
hence thesis by A2,A29,A26,A18,A27,A30,A31,JORDAN1H:38;
end;
suppose A32: (( i4 + 1 ) = i5 & j4 = j5);

j4 < ( width ( Gauge (C,j) ) ) by A1,A2,A8,A11,A22,A23,CKB28:1,CKB31:1;
then ( j4 + 1 ) <= ( width ( Gauge (C,j) ) ) by NAT_1:13;
hence thesis by A2,A24,A26,A19,A27,A32,JORDAN1H:38;
end;
suppose A33: (i4 = ( i5 + 1 ) & j4 = j5);

1 < j5 by A1,A2,A9,A13,A15,A16,CKB27:1,CKB31:1;
then ( 1 + 1 ) <= j5 by NAT_1:13;
then A34: 1 <= ( j5 -' 1 ) by JORDAN5B:2;
( ( j5 -' 1 ) + 1 ) = j5 by A20,XREAL_1:235;
hence thesis by A2,A29,A17,A18,A27,A33,A34,JORDAN1H:38;
end;
suppose A35: (i4 = i5 & j4 = ( j5 + 1 ));

i4 < ( len ( Gauge (C,j) ) ) by A1,A2,A8,A11,A22,A23,CKB26:1,CKB31:1;
then ( i4 + 1 ) <= ( len ( Gauge (C,j) ) ) by NAT_1:13;
hence thesis by A2,A24,A28,A20,A27,A35,JORDAN1H:38;
end;
end;
then consider i2,j2 being (Element of ( NAT )) such that 1 <= i2 and A36: ( i2 + 1 ) <= ( len ( Gauge (C,i) ) ) and 1 <= j2 and A37: ( j2 + 1 ) <= ( width ( Gauge (C,i) ) ) and A38: ( left_cell (( Span (C,j) ),i1,G) ) c= ( cell (( Gauge (C,i) ),i2,j2) );
A39: j2 < ( width ( Gauge (C,i) ) ) by A37,NAT_1:13;
A40: ( LeftComp ( Span (C,i) ) ) is_a_component_of ( ( L~ ( Span (C,i) ) ) ` ) by GOBOARD9:def 1;
A41: ( ( Cl ( RightComp ( Span (C,i) ) ) ) \/ ( LeftComp ( Span (C,i) ) ) ) = ( ( ( L~ ( Span (C,i) ) ) \/ ( RightComp ( Span (C,i) ) ) ) \/ ( LeftComp ( Span (C,i) ) ) ) by GOBRD14:21
.= (the carrier of ( TOP-REAL 2 )) by GOBRD14:15;
assume (not ( left_cell (( Span (C,j) ),i1,G) ) c= ( Cl ( RightComp ( Span (C,i) ) ) ));
then (not ( cell (( Gauge (C,i) ),i2,j2) ) c= ( Cl ( RightComp ( Span (C,i) ) ) )) by A38,XBOOLE_1:1;
then A42: ( cell (( Gauge (C,i) ),i2,j2) ) meets ( LeftComp ( Span (C,i) ) ) by A41,XBOOLE_1:73;
A43: i2 < ( len ( Gauge (C,i) ) ) by A36,NAT_1:13;
then ( cell (( Gauge (C,i) ),i2,j2) ) = ( Cl ( Int ( cell (( Gauge (C,i) ),i2,j2) ) ) ) by A39,GOBRD11:35;
then A44: ( Int ( cell (( Gauge (C,i) ),i2,j2) ) ) meets ( LeftComp ( Span (C,i) ) ) by A42,TSEP_1:36;
A45: ( Int ( left_cell (( Span (C,j) ),i1,G) ) ) c= ( Int ( cell (( Gauge (C,i) ),i2,j2) ) ) by A38,TOPS_1:19;
( Int ( cell (( Gauge (C,i) ),i2,j2) ) ) c= ( ( L~ ( Span (C,i) ) ) ` ) by A12,A43,A39,CKB36:1;
then ( Int ( cell (( Gauge (C,i) ),i2,j2) ) ) c= ( LeftComp ( Span (C,i) ) ) by A43,A39,A44,A40,GOBOARD9:4,GOBOARD9:18;
then ( Int ( left_cell (( Span (C,j) ),i1,G) ) ) c= ( LeftComp ( Span (C,i) ) ) by A45,XBOOLE_1:1;
then ( Cl ( Int ( left_cell (( Span (C,j) ),i1,G) ) ) ) c= ( Cl ( LeftComp ( Span (C,i) ) ) ) by PRE_TOPC:19;
then A46: ( left_cell (( Span (C,j) ),i1,G) ) c= ( Cl ( LeftComp ( Span (C,i) ) ) ) by A5,A8,A9,JORDAN9:11;
( LSeg (( Span (C,j) ),i1) ) c= ( left_cell (( Span (C,j) ),i1,G) ) by A5,A8,A9,JORDAN1H:20;
then ( LSeg (( Span (C,j) ),i1) ) c= ( Cl ( LeftComp ( Span (C,i) ) ) ) by A46,XBOOLE_1:1;
hence contradiction by A7,A10;
end;
then A47: C meets ( Cl ( RightComp ( Span (C,i) ) ) ) by A4,A8,A9,CKB9:1,XBOOLE_1:63;
A48: ( Cl ( RightComp ( Span (C,i) ) ) ) = ( ( RightComp ( Span (C,i) ) ) \/ ( L~ ( Span (C,i) ) ) ) by GOBRD14:21;
C misses ( L~ ( Span (C,i) ) ) by A1,CKB10:1;
then A49: C meets ( RightComp ( Span (C,i) ) ) by A47,A48,XBOOLE_1:70;
C meets C;
then A50: C meets ( LeftComp ( Span (C,i) ) ) by A1,CKB14:1,XBOOLE_1:63;
reconsider D = ( ( L~ ( Span (C,i) ) ) ` ) as (Subset of ( TOP-REAL 2 ));
D = ( ( RightComp ( Span (C,i) ) ) \/ ( LeftComp ( Span (C,i) ) ) ) by GOBRD12:10;
then A51: ( LeftComp ( Span (C,i) ) ) c= D by XBOOLE_1:7;
C c= ( LeftComp ( Span (C,i) ) ) by A1,CKB14:1;
then A52: C c= D by A51,XBOOLE_1:1;
A53: ( LeftComp ( Span (C,i) ) ) is_a_component_of D by GOBOARD9:def 1;
( RightComp ( Span (C,i) ) ) is_a_component_of D by GOBOARD9:def 2;
hence contradiction by A49,A52,A53,A50,JORDAN9:1,SPRECT_4:6;
end;
