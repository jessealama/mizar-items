environ
vocabularies SUBSET_1,NUMBERS,XBOOLE_0,FUNCT_2,QC_LANG1,FUNCT_1,RELAT_1,TARSKI,MARGREL1,XBOOLEAN,CQC_LANG,ARYTM_3,FINSEQ_1,NAT_1,XXREAL_0,ZF_LANG,FUNCOP_1,REALSET1,BVFUNC_2,ZF_MODEL,ZF_LANG1,QC_LANG3,CARD_1,CLASSES2,VALUAT_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,RELAT_1,FUNCT_1,FUNCT_2,NAT_1,FINSEQ_1,QC_LANG1,QC_LANG3,CQC_LANG,MARGREL1,XXREAL_0,CKB1,CKB4,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB28,CKB39;
definitions XBOOLEAN,CKB1,CKB5,CKB9,CKB10,CKB12,CKB14,CKB28,CKB39;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,FUNCOP_1,QC_LANG1,QC_LANG2,QC_LANG3,CQC_LANG,MARGREL1,RELSET_1,RELAT_1,FINSEQ_3,XBOOLE_0,XBOOLE_1,XBOOLEAN,ORDINAL1,CARD_1,CKB1,CKB3,CKB5,CKB6,CKB7,CKB9,CKB10,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
schemes QC_LANG1,CQC_LANG,FUNCT_2;
registrations XBOOLE_0,FUNCT_1,RELSET_1,MEMBERED,MARGREL1,QC_LANG1,CQC_LANG,XXREAL_0,FUNCT_2,CARD_1,CKB2;
constructors XXREAL_0,MEMBERED,MARGREL1,QC_LANG3,CQC_LANG,RELSET_1,CKB1,CKB4,CKB5,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB28,CKB39;
requirements NUMERALS,SUBSET,BOOLE;
begin
reserve u for (Element of ( BOOLEAN ));
reserve w for (Element of ( BOOLEAN ));
reserve z for (Element of ( BOOLEAN ));
theorem
Lm2: ( 'not' ( ( 'not' ( u '&' ( 'not' w ) ) ) '&' ( ( 'not' ( w '&' z ) ) '&' ( u '&' z ) ) ) ) = ( TRUE )
proof
per cases  by XBOOLEAN:def 3;
suppose (z = ( TRUE ) & w = ( TRUE ));

then ( 'not' ( w '&' z ) ) = ( FALSE ) by MARGREL1:11;
then ( ( 'not' ( w '&' z ) ) '&' ( u '&' z ) ) = ( FALSE ) by MARGREL1:12;
then ( ( 'not' ( u '&' ( 'not' w ) ) ) '&' ( ( 'not' ( w '&' z ) ) '&' ( u '&' z ) ) ) = ( FALSE ) by MARGREL1:12;
hence thesis by MARGREL1:11;
end;
suppose that A1: w = ( FALSE )
and
A2: u = ( TRUE );
( 'not' w ) = ( TRUE ) by A1,MARGREL1:11;
then ( 'not' ( u '&' ( 'not' w ) ) ) = ( FALSE ) by A2,MARGREL1:11;
then ( ( 'not' ( u '&' ( 'not' w ) ) ) '&' ( ( 'not' ( w '&' z ) ) '&' ( u '&' z ) ) ) = ( FALSE ) by MARGREL1:12;
hence thesis by MARGREL1:11;
end;
suppose u = ( FALSE );

then ( u '&' z ) = ( FALSE ) by MARGREL1:12;
then ( ( 'not' ( w '&' z ) ) '&' ( u '&' z ) ) = ( FALSE ) by MARGREL1:12;
then ( ( 'not' ( u '&' ( 'not' w ) ) ) '&' ( ( 'not' ( w '&' z ) ) '&' ( u '&' z ) ) ) = ( FALSE ) by MARGREL1:12;
hence thesis by MARGREL1:11;
end;
suppose z = ( FALSE );

then ( u '&' z ) = ( FALSE ) by MARGREL1:12;
then ( ( 'not' ( w '&' z ) ) '&' ( u '&' z ) ) = ( FALSE ) by MARGREL1:12;
then ( ( 'not' ( u '&' ( 'not' w ) ) ) '&' ( ( 'not' ( w '&' z ) ) '&' ( u '&' z ) ) ) = ( FALSE ) by MARGREL1:12;
hence thesis by MARGREL1:11;
end;
end;
