environ
vocabularies SUBSET_1,NUMBERS,XBOOLE_0,FUNCT_2,QC_LANG1,FUNCT_1,RELAT_1,TARSKI,MARGREL1,XBOOLEAN,CQC_LANG,ARYTM_3,FINSEQ_1,NAT_1,XXREAL_0,ZF_LANG,FUNCOP_1,REALSET1,BVFUNC_2,ZF_MODEL,ZF_LANG1,QC_LANG3,CARD_1,CLASSES2,VALUAT_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,RELAT_1,FUNCT_1,FUNCT_2,NAT_1,FINSEQ_1,QC_LANG1,QC_LANG3,CQC_LANG,MARGREL1,XXREAL_0,CKB1,CKB4,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB28,CKB39;
definitions XBOOLEAN,CKB1,CKB5,CKB9,CKB10,CKB12,CKB14,CKB28,CKB39;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,FUNCOP_1,QC_LANG1,QC_LANG2,QC_LANG3,CQC_LANG,MARGREL1,RELSET_1,RELAT_1,FINSEQ_3,XBOOLE_0,XBOOLE_1,XBOOLEAN,ORDINAL1,CARD_1,CKB1,CKB3,CKB5,CKB6,CKB7,CKB9,CKB10,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44;
schemes QC_LANG1,CQC_LANG,FUNCT_2;
registrations XBOOLE_0,FUNCT_1,RELSET_1,MEMBERED,MARGREL1,QC_LANG1,CQC_LANG,XXREAL_0,FUNCT_2,CARD_1,CKB2;
constructors XXREAL_0,MEMBERED,MARGREL1,QC_LANG3,CQC_LANG,RELSET_1,CKB1,CKB4,CKB5,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB28,CKB39;
requirements NUMERALS,SUBSET,BOOLE;
begin
reserve i for (Element of ( NAT ));
reserve j for (Element of ( NAT ));
reserve A for non empty set;
reserve x for bound_QC-variable;
reserve y for bound_QC-variable;
reserve v for (Element of ( Valuations_in A ));
reserve v1 for (Element of ( Valuations_in A ));
reserve p for (Element of ( CQC-WFF ));
reserve q for (Element of ( CQC-WFF ));
reserve J for (interpretation of A);
reserve s9 for QC-formula;
theorem
Th42: (((x <> y & p = ( s9 . x )) & q = ( s9 . y )) implies (for v holds (( v . x ) = ( v . y ) implies ( ( Valid (p,J) ) . v ) = ( ( Valid (q,J) ) . v ))))
proof
defpred PP[ (Element of ( QC-WFF )) ]
 means
(for x holds (for y holds (for p holds (for q holds (((x <> y & p = ( $1 . x )) & q = ( $1 . y )) implies (for v holds (( v . x ) = ( v . y ) implies ( ( Valid (p,J) ) . v ) = ( ( Valid (q,J) ) . v ))))))));
A1:now
let s being (Element of ( QC-WFF ));
thus (s is  atomic implies PP[ s ])
proof
assume A2: s is  atomic;
thus (for x holds (for y holds (for p holds (for q holds (((x <> y & p = ( s . x )) & q = ( s . y )) implies (for v holds (( v . x ) = ( v . y ) implies ( ( Valid (p,J) ) . v ) = ( ( Valid (q,J) ) . v ))))))))
proof
consider k being (Element of ( NAT )),P being (QC-pred_symbol of k),l being (QC-variable_list of k) such that A3: s = ( P ! l ) by A2,QC_LANG1:def 16;
let x;
let y;
let p;
let q;
assume that
x <> y
and
A4: p = ( s . x )
and
A5: q = ( s . y );
set lx = ( Subst (l,( ( a. ( 0 ) ) .--> x )) );
set ly = ( Subst (l,( ( a. ( 0 ) ) .--> y )) );
let v;
assume that
A6: ( v . x ) = ( v . y );
A7: p = ( P ! ( Subst (l,( ( a. ( 0 ) ) .--> x )) ) ) by A4,A3,CQC_LANG:17;
then A8: { ( lx . i ): ((1 <= i & i <= ( len lx )) & ( lx . i ) in ( free_QC-variables )) } = ( {} ) by CQC_LANG:7;
A9: q = ( P ! ( Subst (l,( ( a. ( 0 ) ) .--> y )) ) ) by A5,A3,CQC_LANG:17;
then A10: { ( ly . i ): ((1 <= i & i <= ( len ly )) & ( ly . i ) in ( free_QC-variables )) } = ( {} ) by CQC_LANG:7;
A11: { ( ly . j ): ((1 <= j & j <= ( len ly )) & ( ly . j ) in ( fixed_QC-variables )) } = ( {} ) by A9,CQC_LANG:7;
{ ( lx . j ): ((1 <= j & j <= ( len lx )) & ( lx . j ) in ( fixed_QC-variables )) } = ( {} ) by A7,CQC_LANG:7;
then reconsider lx,ly as (CQC-variable_list of k) by A8,A10,A11,CQC_LANG:5;
A12: ( len ( v *' lx ) ) = k by CKB9:def 1;
A13:now
let i being Nat;
assume that
A14: 1 <= i
and
A15: i <= ( len ( v *' lx ) );
A16: i in ( NAT ) by ORDINAL1:def 12;
A17: i <= ( len l ) by A12,A15,CARD_1:def 7;
A18:now
assume ( l . i ) <> ( a. ( 0 ) );
then A19: (( lx . i ) = ( l . i ) & ( ly . i ) = ( l . i )) by A14,A17,A16,CQC_LANG:3;
( v . ( lx . i ) ) = ( ( v *' lx ) . i ) by A12,A14,A15,CKB9:def 1;
hence ( ( v *' lx ) . i ) = ( ( v *' ly ) . i ) by A12,A14,A15,A19,CKB9:def 1;
end;
now
assume ( l . i ) = ( a. ( 0 ) );
then A20: (( lx . i ) = x & ( ly . i ) = y) by A14,A17,A16,CQC_LANG:3;
( v . ( lx . i ) ) = ( ( v *' lx ) . i ) by A12,A14,A15,CKB9:def 1;
hence ( ( v *' lx ) . i ) = ( ( v *' ly ) . i ) by A6,A12,A14,A15,A20,CKB9:def 1;
end;
hence ( ( v *' lx ) . i ) = ( ( v *' ly ) . i ) by A18;
end;
( len ( v *' ly ) ) = k by CKB9:def 1;
then A21: ( v *' lx ) = ( v *' ly ) by A12,A13,FINSEQ_1:14;
A22:now
assume ( ( Valid (p,J) ) . v ) = ( FALSE );
then (not ( v *' lx ) in ( J . P )) by A7,CKB20:1;
hence ( ( Valid (q,J) ) . v ) = ( FALSE ) by A9,A21,CKB20:1;
end;
now
assume ( ( Valid (p,J) ) . v ) = ( TRUE );
then ( v *' lx ) in ( J . P ) by A7,CKB19:1;
hence ( ( Valid (q,J) ) . v ) = ( TRUE ) by A9,A21,CKB19:1;
end;
hence thesis by A22,XBOOLEAN:def 3;
end;

end;

thus PP[ ( VERUM ) ]
proof
let x;
let y;
let p;
let q;
assume that
x <> y
and
A23: p = ( ( VERUM ) . x )
and
A24: q = ( ( VERUM ) . y );
let v;
assume that
( v . x ) = ( v . y );
p = ( VERUM ) by A23,CQC_LANG:15;
hence thesis by A24,CQC_LANG:15;
end;

thus ((s is  negative & PP[ ( the_argument_of s ) ]) implies PP[ s ])
proof
assume that
A25: s is  negative
and
A26: (for x holds (for y holds (for p holds (for q holds (((x <> y & p = ( ( the_argument_of s ) . x )) & q = ( ( the_argument_of s ) . y )) implies (for v holds (( v . x ) = ( v . y ) implies ( ( Valid (p,J) ) . v ) = ( ( Valid (q,J) ) . v ))))))));
thus (for x holds (for y holds (for p holds (for q holds (((x <> y & p = ( s . x )) & q = ( s . y )) implies (for v holds (( v . x ) = ( v . y ) implies ( ( Valid (p,J) ) . v ) = ( ( Valid (q,J) ) . v ))))))))
proof
let x;
let y;
let p;
let q;
assume that
x <> y
and
A27: p = ( s . x )
and
A28: q = ( s . y );
A29: ( s . y ) = ( 'not' ( ( the_argument_of s ) . y ) ) by A25,CQC_LANG:18;
then reconsider qa = ( ( the_argument_of s ) . y ) as (Element of ( CQC-WFF )) by A28,CQC_LANG:8;
A30: ( s . x ) = ( 'not' ( ( the_argument_of s ) . x ) ) by A25,CQC_LANG:18;
then reconsider pa = ( ( the_argument_of s ) . x ) as (Element of ( CQC-WFF )) by A27,CQC_LANG:8;
let v;
assume that
A31: ( v . x ) = ( v . y );
A32:now
assume ( ( Valid (p,J) ) . v ) = ( FALSE );
then ( 'not' ( ( Valid (pa,J) ) . v ) ) = ( FALSE ) by A27,A30,CKB22:1;
then ( ( Valid (pa,J) ) . v ) = ( TRUE ) by MARGREL1:11;
then ( ( Valid (qa,J) ) . v ) = ( TRUE ) by A26,A31;
then ( 'not' ( ( Valid (qa,J) ) . v ) ) = ( FALSE ) by MARGREL1:11;
hence ( ( Valid (q,J) ) . v ) = ( FALSE ) by A28,A29,CKB22:1;
end;
now
assume ( ( Valid (p,J) ) . v ) = ( TRUE );
then ( 'not' ( ( Valid (pa,J) ) . v ) ) = ( TRUE ) by A27,A30,CKB22:1;
then ( ( Valid (pa,J) ) . v ) = ( FALSE ) by MARGREL1:11;
then ( ( Valid (qa,J) ) . v ) = ( FALSE ) by A26,A31;
then ( 'not' ( ( Valid (qa,J) ) . v ) ) = ( TRUE ) by MARGREL1:11;
hence ( ( Valid (q,J) ) . v ) = ( TRUE ) by A28,A29,CKB22:1;
end;
hence thesis by A32,XBOOLEAN:def 3;
end;

end;

thus (((s is  conjunctive & PP[ ( the_left_argument_of s ) ]) & PP[ ( the_right_argument_of s ) ]) implies PP[ s ])
proof
assume that
A33: s is  conjunctive
and
A34: (for x holds (for y holds (for p holds (for q holds (((x <> y & p = ( ( the_left_argument_of s ) . x )) & q = ( ( the_left_argument_of s ) . y )) implies (for v holds (( v . x ) = ( v . y ) implies ( ( Valid (p,J) ) . v ) = ( ( Valid (q,J) ) . v ))))))))
and
A35: (for x holds (for y holds (for p holds (for q holds (((x <> y & p = ( ( the_right_argument_of s ) . x )) & q = ( ( the_right_argument_of s ) . y )) implies (for v holds (( v . x ) = ( v . y ) implies ( ( Valid (p,J) ) . v ) = ( ( Valid (q,J) ) . v ))))))));
thus (for x holds (for y holds (for p holds (for q holds (((x <> y & p = ( s . x )) & q = ( s . y )) implies (for v holds (( v . x ) = ( v . y ) implies ( ( Valid (p,J) ) . v ) = ( ( Valid (q,J) ) . v ))))))))
proof
let x;
let y;
let p;
let q;
assume that
x <> y
and
A36: p = ( s . x )
and
A37: q = ( s . y );
A38: ( s . x ) = ( ( ( the_left_argument_of s ) . x ) '&' ( ( the_right_argument_of s ) . x ) ) by A33,CQC_LANG:20;
then reconsider pla = ( ( the_left_argument_of s ) . x ),pra = ( ( the_right_argument_of s ) . x ) as (Element of ( CQC-WFF )) by A36,CQC_LANG:9;
A39: ( s . y ) = ( ( ( the_left_argument_of s ) . y ) '&' ( ( the_right_argument_of s ) . y ) ) by A33,CQC_LANG:20;
then reconsider qla = ( ( the_left_argument_of s ) . y ),qra = ( ( the_right_argument_of s ) . y ) as (Element of ( CQC-WFF )) by A37,CQC_LANG:9;
let v;
assume that
A40: ( v . x ) = ( v . y );
A41:now
assume A42: ( ( Valid (p,J) ) . v ) = ( FALSE );
A43:now
assume ( ( Valid (pla,J) ) . v ) = ( FALSE );
then ( ( Valid (qla,J) ) . v ) = ( FALSE ) by A34,A40;
then ( ( ( Valid (qla,J) ) . v ) '&' ( ( Valid (qra,J) ) . v ) ) = ( FALSE ) by MARGREL1:12;
hence thesis by A37,A39,A42,CKB24:1;
end;
A44:now
assume ( ( Valid (pra,J) ) . v ) = ( FALSE );
then ( ( Valid (qra,J) ) . v ) = ( FALSE ) by A35,A40;
then ( ( ( Valid (qla,J) ) . v ) '&' ( ( Valid (qra,J) ) . v ) ) = ( FALSE ) by MARGREL1:12;
hence thesis by A37,A39,A42,CKB24:1;
end;
( ( ( Valid (pla,J) ) . v ) '&' ( ( Valid (pra,J) ) . v ) ) = ( FALSE ) by A36,A38,A42,CKB24:1;
hence thesis by A43,A44,MARGREL1:12;
end;
now
assume ( ( Valid (p,J) ) . v ) = ( TRUE );
then A45: ( ( ( Valid (pla,J) ) . v ) '&' ( ( Valid (pra,J) ) . v ) ) = ( TRUE ) by A36,A38,CKB24:1;
then ( ( Valid (pra,J) ) . v ) = ( TRUE ) by MARGREL1:12;
then A46: ( ( Valid (qra,J) ) . v ) = ( TRUE ) by A35,A40;
( ( Valid (pla,J) ) . v ) = ( TRUE ) by A45,MARGREL1:12;
then ( ( Valid (qla,J) ) . v ) = ( TRUE ) by A34,A40;
then ( ( ( Valid (qla,J) ) . v ) '&' ( ( Valid (qra,J) ) . v ) ) = ( TRUE ) by A46;
hence ( ( Valid (q,J) ) . v ) = ( TRUE ) by A37,A39,CKB24:1;
end;
hence thesis by A41,XBOOLEAN:def 3;
end;

end;

thus ((s is  universal & PP[ ( the_scope_of s ) ]) implies PP[ s ])
proof
assume that
A47: s is  universal
and
A48: (for x holds (for y holds (for p holds (for q holds (((x <> y & p = ( ( the_scope_of s ) . x )) & q = ( ( the_scope_of s ) . y )) implies (for v holds (( v . x ) = ( v . y ) implies ( ( Valid (p,J) ) . v ) = ( ( Valid (q,J) ) . v ))))))));
consider xx being bound_QC-variable,pp being (Element of ( QC-WFF )) such that A49: s = ( All (xx,pp) ) by A47,QC_LANG1:def 19;
A50: xx = ( bound_in s ) by A47,A49,QC_LANG1:def 25;
thus (for x holds (for y holds (for p holds (for q holds (((x <> y & p = ( s . x )) & q = ( s . y )) implies (for v holds (( v . x ) = ( v . y ) implies ( ( Valid (p,J) ) . v ) = ( ( Valid (q,J) ) . v ))))))))
proof
let x;
let y;
let p;
let q;
assume that
x <> y
and
A51: p = ( s . x )
and
A52: q = ( s . y );
let v;
assume that
A53: ( v . x ) = ( v . y );
A54:now
assume A55: x <> ( bound_in s );
then ( s . x ) = ( All (( bound_in s ),( ( the_scope_of s ) . x )) ) by A47,CQC_LANG:23;
then reconsider ps = ( ( the_scope_of s ) . x ) as (Element of ( CQC-WFF )) by A51,CQC_LANG:13;
A56: ( All (( bound_in s ),ps) ) = p by A47,A51,A55,CQC_LANG:23;
A57:now
assume A58: y <> ( bound_in s );
then ( s . y ) = ( All (( bound_in s ),( ( the_scope_of s ) . y )) ) by A47,CQC_LANG:23;
then reconsider qs = ( ( the_scope_of s ) . y ) as (Element of ( CQC-WFF )) by A52,CQC_LANG:13;
A59: ( Valid (( All (( bound_in s ),qs) ),J) ) = ( FOR_ALL (( bound_in s ),( Valid (qs,J) )) ) by CKB15:1;
A60: ( Valid (( All (( bound_in s ),ps) ),J) ) = ( FOR_ALL (( bound_in s ),( Valid (ps,J) )) ) by CKB15:1;
A61: ( All (( bound_in s ),qs) ) = q by A47,A52,A58,CQC_LANG:23;
A62:now
assume A63: ( ( Valid (p,J) ) . v ) = ( TRUE );
(for v1 holds ((for y holds (( bound_in s ) <> y implies ( v1 . y ) = ( v . y ))) implies ( ( Valid (qs,J) ) . v1 ) = ( TRUE )))
proof
let v1;
assume A64: (for y holds (( bound_in s ) <> y implies ( v1 . y ) = ( v . y )));
then A65: (( v1 . x ) = ( v . x ) & ( v1 . y ) = ( v . y )) by A55,A58;
( ( Valid (ps,J) ) . v1 ) = ( TRUE ) by A56,A60,A63,A64,CKB7:1;
hence thesis by A48,A53,A65;
end;
hence ( ( Valid (q,J) ) . v ) = ( TRUE ) by A61,A59,CKB7:1;
end;
now
assume A66: ( ( Valid (p,J) ) . v ) = ( FALSE );
(ex v1 st (( ( Valid (qs,J) ) . v1 ) = ( FALSE ) & (for y holds (( bound_in s ) <> y implies ( v1 . y ) = ( v . y )))))
proof
consider v1 such that A67: ( ( Valid (ps,J) ) . v1 ) = ( FALSE ) and A68: (for y holds (( bound_in s ) <> y implies ( v1 . y ) = ( v . y ))) by A56,A60,A66,CKB6:1;
(( v1 . x ) = ( v . x ) & ( v1 . y ) = ( v . y )) by A55,A58,A68;
then ( ( Valid (qs,J) ) . v1 ) = ( FALSE ) by A48,A53,A67;
hence thesis by A68;
end;
hence ( ( Valid (q,J) ) . v ) = ( FALSE ) by A61,A59,CKB6:1;
end;
hence thesis by A62,XBOOLEAN:def 3;
end;
now
assume A69: y = ( bound_in s );
then q = ( All (y,pp) ) by A49,A50,A52,CQC_LANG:24;
hence thesis by A49,A50,A51,A69,CQC_LANG:27;
end;
hence thesis by A57;
end;
now
assume A70: x = ( bound_in s );
then p = ( All (x,pp) ) by A49,A50,A51,CQC_LANG:24;
hence thesis by A49,A50,A52,A70,CQC_LANG:27;
end;
hence thesis by A54;
end;

end;

end;
(for s being (Element of ( QC-WFF )) holds PP[ s ]) from QC_LANG1:sch 2(A1);
hence thesis;
end;
