environ
vocabularies SUBSET_1,NUMBERS,XBOOLE_0,FUNCT_2,QC_LANG1,FUNCT_1,RELAT_1,TARSKI,MARGREL1,XBOOLEAN,CQC_LANG,ARYTM_3,FINSEQ_1,NAT_1,XXREAL_0,ZF_LANG,FUNCOP_1,REALSET1,BVFUNC_2,ZF_MODEL,ZF_LANG1,QC_LANG3,CARD_1,CLASSES2,VALUAT_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,RELAT_1,FUNCT_1,FUNCT_2,NAT_1,FINSEQ_1,QC_LANG1,QC_LANG3,CQC_LANG,MARGREL1,XXREAL_0,CKB1,CKB4,CKB5,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB28,CKB39;
definitions XBOOLEAN,CKB1,CKB5,CKB9,CKB10,CKB12,CKB14,CKB28,CKB39;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,FUNCOP_1,QC_LANG1,QC_LANG2,QC_LANG3,CQC_LANG,MARGREL1,RELSET_1,RELAT_1,FINSEQ_3,XBOOLE_0,XBOOLE_1,XBOOLEAN,ORDINAL1,CARD_1,CKB1,CKB3,CKB5,CKB6,CKB7,CKB9,CKB10,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61;
schemes QC_LANG1,CQC_LANG,FUNCT_2;
registrations XBOOLE_0,FUNCT_1,RELSET_1,MEMBERED,MARGREL1,QC_LANG1,CQC_LANG,XXREAL_0,FUNCT_2,CARD_1,CKB2;
constructors XXREAL_0,MEMBERED,MARGREL1,QC_LANG3,CQC_LANG,RELSET_1,CKB1,CKB4,CKB5,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB28,CKB39;
requirements NUMERALS,SUBSET,BOOLE;
begin
reserve A for non empty set;
reserve x for bound_QC-variable;
reserve x1 for bound_QC-variable;
reserve y for bound_QC-variable;
reserve v for (Element of ( Valuations_in A ));
reserve p for (Element of ( CQC-WFF ));
reserve q for (Element of ( CQC-WFF ));
reserve J for (interpretation of A);
Lm3:now
let A being non empty set;
let Y being bound_QC-variable,Z being bound_QC-variable;
let V1 being (Element of ( Valuations_in A )),V2 being (Element of ( Valuations_in A ));
thus (ex v being (Element of ( Valuations_in A )) st ((for x being bound_QC-variable holds (x <> Y implies ( v . x ) = ( V1 . x ))) & ( v . Y ) = ( V2 . Z )))
proof
deffunc G(set) = ( V2 . Z );
deffunc F(set) = ( V1 . $1 );
defpred C[ set ]
 means
(for x1 holds (x1 = $1 implies x1 <> Y));
A1: (for x being set holds (x in ( bound_QC-variables ) implies ((C[ x ] implies F(x) in A) & ((not C[ x ]) implies G(x) in A)))) by FUNCT_2:5;
consider f being (Function of ( bound_QC-variables ),A) such that A2: (for x being set holds (x in ( bound_QC-variables ) implies ((C[ x ] implies ( f . x ) = F(x)) & ((not C[ x ]) implies ( f . x ) = G(x))))) from FUNCT_2:sch 5(A1);
(( dom f ) = ( bound_QC-variables ) & ( rng f ) c= A) by FUNCT_2:def 1,RELAT_1:def 19;
then reconsider f as (Element of ( Valuations_in A )) by FUNCT_2:def 2;
take f;
now
let x being bound_QC-variable;
now
assume A3: x <> Y;
((for x1 holds (x1 = x implies x1 <> Y)) implies ( f . x ) = ( V1 . x )) by A2;
hence ( f . x ) = ( V1 . x ) by A3;
end;
hence (x <> Y implies ( f . x ) = ( V1 . x ));
thus (x = Y implies ( f . Y ) = ( V2 . Z )) by A2;
end;
hence thesis;
end;

end;
reserve u for (Element of ( Valuations_in A ));
theorem
(for s being QC-formula holds ((((p = ( s . x ) & q = ( s . y )) & (not x in ( still_not-bound_in s ))) & J |= p) implies J |= q))
proof
let s being QC-formula;
assume that
A1: p = ( s . x )
and
A2: q = ( s . y )
and
A3: (not x in ( still_not-bound_in s ))
and
A4: J |= p;
now
assume A5: x <> y;
A6:now
let u;
consider w being (Element of ( Valuations_in A )) such that A7: ((for z being bound_QC-variable holds (z <> x implies ( w . z ) = ( u . z ))) & ( w . x ) = ( u . y )) by Lm3;
( w . x ) = ( w . y ) by A7;
then A8: ( ( Valid (p,J) ) . w ) = ( ( Valid (q,J) ) . w ) by A1,A2,CKB45:1;
J,w |= p by A4,CKB39:def 1;
then A9: ( ( Valid (p,J) ) . w ) = ( TRUE ) by CKB28:def 1;
(not x in ( still_not-bound_in q )) by A2,A3,A5,CKB46:1;
hence ( ( Valid (q,J) ) . u ) = ( TRUE ) by A7,A8,A9,CKB42:1;
end;
now
let v;
( ( Valid (q,J) ) . v ) = ( TRUE ) by A6;
hence J,v |= q by CKB28:def 1;
end;
hence thesis by CKB39:def 1;
end;
hence thesis by A1,A2,A4;
end;
