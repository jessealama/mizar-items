environ
vocabularies XBOOLE_0,STRUCT_0,ORDERS_2,SUBSET_1,XXREAL_0,RELAT_1,RELAT_2,REWRITE1,LATTICE3,ZFMISC_1,ORDERS_1,ARYTM_3,TARSKI,LATTICES,XXREAL_2,EQREL_1,FILTER_0,PBOOLE,ORDINAL2,FINSET_1,CAT_1,WELLORD1,YELLOW_0,CARD_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_2,RELSET_1,FINSET_1,TOLER_1,ORDERS_1,DOMAIN_1,CARD_1,STRUCT_0,LATTICES,ORDERS_2,LATTICE3;
definitions STRUCT_0,RELAT_2,ORDERS_2,LATTICE3,WELLORD1;
theorems TARSKI,ZFMISC_1,RELAT_2,ORDERS_2,LATTICE3,XBOOLE_0,XBOOLE_1,STRUCT_0;
schemes FINSET_1,RELSET_1;
registrations XBOOLE_0,RELSET_1,FINSET_1,STRUCT_0,ORDERS_2,LATTICE3,CARD_1,ORDINAL1;
constructors TOLER_1,REALSET2,LATTICE3;
requirements BOOLE,SUBSET,NUMERALS;
begin
scheme RelStrEx { X() -> non empty set,P[set,set] } : (ex L being non empty  strict RelStr st ((the carrier of L) = X() & (for a,b being (Element of L) holds (a <= b iff P[ a,b ]))))
proof
consider R being (Relation of X()) such that A1: (for a,b being (Element of X()) holds ([ a,b ] in R iff P[ a,b ])) from RELSET_1:sch 2;
take L = RelStr (# X(),R #);
thus (the carrier of L) = X();
let a being (Element of L),b being (Element of L);
(a <= b iff [ a,b ] in R) by ORDERS_2:def 5;
hence thesis by A1;
end;
