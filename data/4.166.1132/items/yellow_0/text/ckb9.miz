environ
vocabularies XBOOLE_0,STRUCT_0,ORDERS_2,SUBSET_1,XXREAL_0,RELAT_1,RELAT_2,REWRITE1,LATTICE3,ZFMISC_1,ORDERS_1,ARYTM_3,TARSKI,LATTICES,XXREAL_2,EQREL_1,FILTER_0,PBOOLE,ORDINAL2,FINSET_1,CAT_1,WELLORD1,YELLOW_0,CARD_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_2,RELSET_1,FINSET_1,TOLER_1,ORDERS_1,DOMAIN_1,CARD_1,STRUCT_0,LATTICES,ORDERS_2,LATTICE3,CKB2,CKB3,CKB4;
definitions STRUCT_0,RELAT_2,ORDERS_2,LATTICE3,WELLORD1,CKB2,CKB3,CKB4;
theorems TARSKI,ZFMISC_1,RELAT_2,ORDERS_2,LATTICE3,XBOOLE_0,XBOOLE_1,STRUCT_0,CKB2,CKB3,CKB4;
schemes FINSET_1,RELSET_1,CKB1;
registrations XBOOLE_0,RELSET_1,FINSET_1,STRUCT_0,ORDERS_2,LATTICE3,CARD_1,ORDINAL1,CKB5,CKB6,CKB7,CKB8;
constructors TOLER_1,REALSET2,LATTICE3;
requirements BOOLE,SUBSET,NUMERALS;
begin
theorem
Th1: (for P1,P2 being RelStr holds (( the RelStr of P1 ) = ( the RelStr of P2 ) implies (for a1,b1 being (Element of P1) holds (for a2,b2 being (Element of P2) holds ((a1 = a2 & b1 = b2) implies ((a1 <= b1 implies a2 <= b2) & (a1 < b1 implies a2 < b2)))))))
proof
let P1 being RelStr;
let P2 being RelStr;
assume that
A1: ( the RelStr of P1 ) = ( the RelStr of P2 );
let a1 being (Element of P1);
let b1 being (Element of P1);
let a2 being (Element of P2);
let b2 being (Element of P2);
A2: (a2 <= b2 iff [ a2,b2 ] in (the InternalRel of P2)) by ORDERS_2:def 5;
(a1 <= b1 iff [ a1,b1 ] in (the InternalRel of P1)) by ORDERS_2:def 5;
hence thesis by A1,A2,ORDERS_2:def 6;
end;
