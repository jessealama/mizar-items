environ
vocabularies XBOOLE_0,STRUCT_0,ORDERS_2,SUBSET_1,XXREAL_0,RELAT_1,RELAT_2,REWRITE1,LATTICE3,ZFMISC_1,ORDERS_1,ARYTM_3,TARSKI,LATTICES,XXREAL_2,EQREL_1,FILTER_0,PBOOLE,ORDINAL2,FINSET_1,CAT_1,WELLORD1,YELLOW_0,CARD_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_2,RELSET_1,FINSET_1,TOLER_1,ORDERS_1,DOMAIN_1,CARD_1,STRUCT_0,LATTICES,ORDERS_2,LATTICE3,CKB2,CKB3,CKB4;
definitions STRUCT_0,RELAT_2,ORDERS_2,LATTICE3,WELLORD1,CKB2,CKB3,CKB4;
theorems TARSKI,ZFMISC_1,RELAT_2,ORDERS_2,LATTICE3,XBOOLE_0,XBOOLE_1,STRUCT_0,CKB2,CKB3,CKB4,CKB9,CKB10,CKB11,CKB12;
schemes FINSET_1,RELSET_1,CKB1;
registrations XBOOLE_0,RELSET_1,FINSET_1,STRUCT_0,ORDERS_2,LATTICE3,CARD_1,ORDINAL1,CKB5,CKB6,CKB7,CKB8;
constructors TOLER_1,REALSET2,LATTICE3;
requirements BOOLE,SUBSET,NUMERALS;
begin
theorem
Th5: (for L being non  empty RelStr holds (for X being set holds (for x being (Element of L) holds ((x is_>=_than X iff x is_>=_than ( X /\ (the carrier of L) )) & (x is_<=_than X iff x is_<=_than ( X /\ (the carrier of L) ))))))
proof
let L being non  empty RelStr;
let X being set;
let x being (Element of L);
set Y = ( X /\ (the carrier of L) );
thus (X is_<=_than x implies Y is_<=_than x)
proof
assume A1: (for b being (Element of L) holds (b in X implies b <= x));
let b being (Element of L);
assume b in Y;
then b in X by XBOOLE_0:def 4;
hence thesis by A1;
end;

thus (Y is_<=_than x implies X is_<=_than x)
proof
assume A2: (for b being (Element of L) holds (b in Y implies b <= x));
let b being (Element of L);
assume b in X;
then b in Y by XBOOLE_0:def 4;
hence thesis by A2;
end;

thus (X is_>=_than x implies Y is_>=_than x)
proof
assume A3: (for b being (Element of L) holds (b in X implies b >= x));
let b being (Element of L);
assume b in Y;
then b in X by XBOOLE_0:def 4;
hence thesis by A3;
end;

thus (Y is_>=_than x implies X is_>=_than x)
proof
assume A4: (for b being (Element of L) holds (b in Y implies b >= x));
let b being (Element of L);
assume b in X;
then b in Y by XBOOLE_0:def 4;
hence thesis by A4;
end;

end;
