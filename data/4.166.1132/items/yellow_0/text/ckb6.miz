environ
vocabularies XBOOLE_0,STRUCT_0,ORDERS_2,SUBSET_1,XXREAL_0,RELAT_1,RELAT_2,REWRITE1,LATTICE3,ZFMISC_1,ORDERS_1,ARYTM_3,TARSKI,LATTICES,XXREAL_2,EQREL_1,FILTER_0,PBOOLE,ORDINAL2,FINSET_1,CAT_1,WELLORD1,YELLOW_0,CARD_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_2,RELSET_1,FINSET_1,TOLER_1,ORDERS_1,DOMAIN_1,CARD_1,STRUCT_0,LATTICES,ORDERS_2,LATTICE3,CKB2,CKB3,CKB4;
definitions STRUCT_0,RELAT_2,ORDERS_2,LATTICE3,WELLORD1,CKB2,CKB3,CKB4;
theorems TARSKI,ZFMISC_1,RELAT_2,ORDERS_2,LATTICE3,XBOOLE_0,XBOOLE_1,STRUCT_0,CKB2,CKB3,CKB4;
schemes FINSET_1,RELSET_1,CKB1;
registrations XBOOLE_0,RELSET_1,FINSET_1,STRUCT_0,ORDERS_2,LATTICE3,CARD_1,ORDINAL1,CKB5;
constructors TOLER_1,REALSET2,LATTICE3;
requirements BOOLE,SUBSET,NUMERALS;
begin
registration
cluster  ->  complete  transitive  antisymmetric for 1 -element  reflexive 1 -element  reflexive RelStr;
coherence
proof
let L being 1 -element  reflexive RelStr;
set x = the (Element of L);
A1: (for x,y being (Element of L) holds x = y) by STRUCT_0:def 10;
thus L is  complete
proof
let X being set;
take x;
thus (for y being (Element of L) holds (y in X implies y <= x)) by A1;
let y being (Element of L);
y = x by A1;
hence thesis by ORDERS_2:1;
end;

thus L is  transitive
proof
let x being (Element of L);
let y being (Element of L);
let z being (Element of L);
thus thesis by A1;
end;

let x being (Element of L);
thus thesis by A1;
end;
end;
