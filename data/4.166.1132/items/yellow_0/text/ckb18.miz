environ
vocabularies XBOOLE_0,STRUCT_0,ORDERS_2,SUBSET_1,XXREAL_0,RELAT_1,RELAT_2,REWRITE1,LATTICE3,ZFMISC_1,ORDERS_1,ARYTM_3,TARSKI,LATTICES,XXREAL_2,EQREL_1,FILTER_0,PBOOLE,ORDINAL2,FINSET_1,CAT_1,WELLORD1,YELLOW_0,CARD_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_2,RELSET_1,FINSET_1,TOLER_1,ORDERS_1,DOMAIN_1,CARD_1,STRUCT_0,LATTICES,ORDERS_2,LATTICE3,CKB2,CKB3,CKB4;
definitions STRUCT_0,RELAT_2,ORDERS_2,LATTICE3,WELLORD1,CKB2,CKB3,CKB4;
theorems TARSKI,ZFMISC_1,RELAT_2,ORDERS_2,LATTICE3,XBOOLE_0,XBOOLE_1,STRUCT_0,CKB2,CKB3,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes FINSET_1,RELSET_1,CKB1;
registrations XBOOLE_0,RELSET_1,FINSET_1,STRUCT_0,ORDERS_2,LATTICE3,CARD_1,ORDINAL1,CKB5,CKB6,CKB7,CKB8;
constructors TOLER_1,REALSET2,LATTICE3;
requirements BOOLE,SUBSET,NUMERALS;
begin
theorem
Th10: (for L being RelStr holds (for X,Y being set holds (for x being (Element of L) holds (((x is_<=_than X & x is_<=_than Y) implies x is_<=_than ( X \/ Y )) & ((x is_>=_than X & x is_>=_than Y) implies x is_>=_than ( X \/ Y ))))))
proof
let L being RelStr;
let X being set;
let Y being set;
let x being (Element of L);
thus ((x is_<=_than X & x is_<=_than Y) implies x is_<=_than ( X \/ Y ))
proof
assume A1: ((for y being (Element of L) holds (y in X implies y >= x)) & (for y being (Element of L) holds (y in Y implies y >= x)));
let y being (Element of L);
(y in ( X \/ Y ) implies (y in X or y in Y)) by XBOOLE_0:def 3;
hence thesis by A1;
end;

assume A2: ((for y being (Element of L) holds (y in X implies y <= x)) & (for y being (Element of L) holds (y in Y implies y <= x)));
let y being (Element of L);
(y in ( X \/ Y ) implies (y in X or y in Y)) by XBOOLE_0:def 3;
hence thesis by A2;
end;
