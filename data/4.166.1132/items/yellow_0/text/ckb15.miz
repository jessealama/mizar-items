environ
vocabularies XBOOLE_0,STRUCT_0,ORDERS_2,SUBSET_1,XXREAL_0,RELAT_1,RELAT_2,REWRITE1,LATTICE3,ZFMISC_1,ORDERS_1,ARYTM_3,TARSKI,LATTICES,XXREAL_2,EQREL_1,FILTER_0,PBOOLE,ORDINAL2,FINSET_1,CAT_1,WELLORD1,YELLOW_0,CARD_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_2,RELSET_1,FINSET_1,TOLER_1,ORDERS_1,DOMAIN_1,CARD_1,STRUCT_0,LATTICES,ORDERS_2,LATTICE3,CKB2,CKB3,CKB4;
definitions STRUCT_0,RELAT_2,ORDERS_2,LATTICE3,WELLORD1,CKB2,CKB3,CKB4;
theorems TARSKI,ZFMISC_1,RELAT_2,ORDERS_2,LATTICE3,XBOOLE_0,XBOOLE_1,STRUCT_0,CKB2,CKB3,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
schemes FINSET_1,RELSET_1,CKB1;
registrations XBOOLE_0,RELSET_1,FINSET_1,STRUCT_0,ORDERS_2,LATTICE3,CARD_1,ORDINAL1,CKB5,CKB6,CKB7,CKB8;
constructors TOLER_1,REALSET2,LATTICE3;
requirements BOOLE,SUBSET,NUMERALS;
begin
theorem
Th7: (for L being RelStr holds (for a,b being (Element of L) holds ((a is_<=_than { b } iff a <= b) & (a is_>=_than { b } iff b <= a))))
proof
let L being RelStr;
let a being (Element of L),b being (Element of L);
A1: b in { b } by TARSKI:def 1;
hence (a is_<=_than { b } implies a <= b) by LATTICE3:def 8;
hereby
assume A2: a <= b;
thus a is_<=_than { b }
proof
let c being (Element of L);
thus thesis by A2,TARSKI:def 1;
end;

end;
thus (a is_>=_than { b } implies a >= b) by A1,LATTICE3:def 9;
assume A3: a >= b;
let c being (Element of L);
thus thesis by A3,TARSKI:def 1;
end;
