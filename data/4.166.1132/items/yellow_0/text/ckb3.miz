environ
vocabularies XBOOLE_0,STRUCT_0,ORDERS_2,SUBSET_1,XXREAL_0,RELAT_1,RELAT_2,REWRITE1,LATTICE3,ZFMISC_1,ORDERS_1,ARYTM_3,TARSKI,LATTICES,XXREAL_2,EQREL_1,FILTER_0,PBOOLE,ORDINAL2,FINSET_1,CAT_1,WELLORD1,YELLOW_0,CARD_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_2,RELSET_1,FINSET_1,TOLER_1,ORDERS_1,DOMAIN_1,CARD_1,STRUCT_0,LATTICES,ORDERS_2,LATTICE3,CKB2;
definitions STRUCT_0,RELAT_2,ORDERS_2,LATTICE3,WELLORD1,CKB2;
theorems TARSKI,ZFMISC_1,RELAT_2,ORDERS_2,LATTICE3,XBOOLE_0,XBOOLE_1,STRUCT_0,CKB2;
schemes FINSET_1,RELSET_1,CKB1;
registrations XBOOLE_0,RELSET_1,FINSET_1,STRUCT_0,ORDERS_2,LATTICE3,CARD_1,ORDINAL1;
constructors TOLER_1,REALSET2,LATTICE3;
requirements BOOLE,SUBSET,NUMERALS;
begin
definition
let A being RelStr;
redefine attr A is  transitive
means
(for x,y,z being (Element of A) holds ((x <= y & y <= z) implies x <= z));
compatibility
proof
thus (A is  transitive implies (for x,y,z being (Element of A) holds ((x <= y & y <= z) implies x <= z))) by ORDERS_2:3;
assume A1: (for x,y,z being (Element of A) holds ((x <= y & y <= z) implies x <= z));
let x being set,y being set,z being set;
assume A2: ((x in (the carrier of A) & y in (the carrier of A)) & z in (the carrier of A));
assume A3: ([ x,y ] in (the InternalRel of A) & [ y,z ] in (the InternalRel of A));
reconsider x,y,z as (Element of A) by A2;
(x <= y & y <= z) by A3,ORDERS_2:def 5;
then x <= z by A1;
hence thesis by ORDERS_2:def 5;
end;
end;
