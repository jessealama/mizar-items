environ
vocabularies NET_1,XBOOLE_0,TARSKI,ZFMISC_1,RELAT_1,FF_SIEC,STRUCT_0,PETRI;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,PARTIT_2,STRUCT_0,PETRI,NET_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
definitions NET_1,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
theorems ZFMISC_1,RELAT_1,SYSREL,TARSKI,RELSET_1,NET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
registrations XBOOLE_0,RELAT_1,NET_1,STRUCT_0,PARTIT_2;
constructors TARSKI,NET_1,STRUCT_0,PETRI,PARTIT_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve M for Pnet;
theorem
Th11: ((((([ x,y ] in ( Flow M ) & x in (the carrier' of M)) implies (((not x in (the carrier of M)) & (not y in (the carrier' of M))) & y in (the carrier of M))) & (([ x,y ] in ( Flow M ) & y in (the carrier' of M)) implies (((not y in (the carrier of M)) & (not x in (the carrier' of M))) & x in (the carrier of M)))) & (([ x,y ] in ( Flow M ) & x in (the carrier of M)) implies (((not y in (the carrier of M)) & (not x in (the carrier' of M))) & y in (the carrier' of M)))) & (([ x,y ] in ( Flow M ) & y in (the carrier of M)) implies (((not x in (the carrier of M)) & (not y in (the carrier' of M))) & x in (the carrier' of M))))
proof
A1: (the carrier of M) misses (the carrier' of M) by NET_1:def 2;
( Flow M ) c= ( [: (the carrier of M),(the carrier' of M) :] \/ [: (the carrier' of M),(the carrier of M) :] ) by NET_1:def 2;
hence thesis by A1,SYSREL:7;
end;
