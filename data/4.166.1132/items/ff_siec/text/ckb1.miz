environ
vocabularies NET_1,XBOOLE_0,TARSKI,ZFMISC_1,RELAT_1,FF_SIEC,STRUCT_0,PETRI;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,PARTIT_2,STRUCT_0,PETRI,NET_1;
definitions NET_1,STRUCT_0;
theorems ZFMISC_1,RELAT_1,SYSREL,TARSKI,RELSET_1,NET_1,XBOOLE_0,XBOOLE_1;
registrations XBOOLE_0,RELAT_1,NET_1,STRUCT_0,PARTIT_2;
constructors TARSKI,NET_1,STRUCT_0,PETRI,PARTIT_2;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
definition
let X;
let Y;
assume A1: X misses Y;
func PTempty_f_net (X,Y) ->  strict Pnet
equals
:Def4: PT_net_Str (# X,Y,( {} (X,Y) ),( {} (Y,X) ) #);
correctness
proof
set M = PT_net_Str (# X,Y,( {} (X,Y) ),( {} (Y,X) ) #);
( Flow M ) c= ( [: (the carrier of M),(the carrier' of M) :] \/ [: (the carrier' of M),(the carrier of M) :] ) by XBOOLE_1:13;
hence thesis by A1,NET_1:def 2;
end;
end;
