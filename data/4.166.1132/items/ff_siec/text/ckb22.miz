environ
vocabularies NET_1,XBOOLE_0,TARSKI,ZFMISC_1,RELAT_1,FF_SIEC,STRUCT_0,PETRI;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,PARTIT_2,STRUCT_0,PETRI,NET_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
definitions NET_1,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
theorems ZFMISC_1,RELAT_1,SYSREL,TARSKI,RELSET_1,NET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
registrations XBOOLE_0,RELAT_1,NET_1,STRUCT_0,PARTIT_2;
constructors TARSKI,NET_1,STRUCT_0,PETRI,PARTIT_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve M for Pnet;
theorem
Th20: (( ( ( Flow M ) | (the carrier of M) ) ~ ) = ( ( ( Flow M ) ~ ) | (the carrier' of M) ) & ( ( ( Flow M ) | (the carrier' of M) ) ~ ) = ( ( ( Flow M ) ~ ) | (the carrier of M) ))
proof
set R = ( Flow M );
set X = (the carrier of M);
set Y = (the carrier' of M);
(for x holds (for y holds ([ x,y ] in ( ( R | X ) ~ ) implies [ x,y ] in ( ( R ~ ) | Y ))))
proof
let x;
let y;
assume [ x,y ] in ( ( R | X ) ~ );
then A1: [ y,x ] in ( R | X ) by RELAT_1:def 7;
then A2: [ y,x ] in R by RELAT_1:def 11;
A3: y in X by A1,RELAT_1:def 11;
A4: [ x,y ] in ( R ~ ) by A2,RELAT_1:def 7;
x in Y by A2,A3,CKB13:1;
hence thesis by A4,RELAT_1:def 11;
end;
then A5: ( ( R | X ) ~ ) c= ( ( R ~ ) | Y ) by RELAT_1:def 3;
(for x holds (for y holds ([ x,y ] in ( ( R ~ ) | Y ) implies [ x,y ] in ( ( R | X ) ~ ))))
proof
let x;
let y;
assume A6: [ x,y ] in ( ( R ~ ) | Y );
then [ x,y ] in ( R ~ ) by RELAT_1:def 11;
then A7: [ y,x ] in R by RELAT_1:def 7;
x in Y by A6,RELAT_1:def 11;
then y in X by A7,CKB13:1;
then [ y,x ] in ( R | X ) by A7,RELAT_1:def 11;
hence thesis by RELAT_1:def 7;
end;
then A8: ( ( R ~ ) | Y ) c= ( ( R | X ) ~ ) by RELAT_1:def 3;
(for x holds (for y holds ([ x,y ] in ( ( R | Y ) ~ ) implies [ x,y ] in ( ( R ~ ) | X ))))
proof
let x;
let y;
assume [ x,y ] in ( ( R | Y ) ~ );
then A9: [ y,x ] in ( R | Y ) by RELAT_1:def 7;
then A10: [ y,x ] in R by RELAT_1:def 11;
A11: y in Y by A9,RELAT_1:def 11;
A12: [ x,y ] in ( R ~ ) by A10,RELAT_1:def 7;
x in X by A10,A11,CKB13:1;
hence thesis by A12,RELAT_1:def 11;
end;
then A13: ( ( R | Y ) ~ ) c= ( ( R ~ ) | X ) by RELAT_1:def 3;
(for x holds (for y holds ([ x,y ] in ( ( R ~ ) | X ) implies [ x,y ] in ( ( R | Y ) ~ ))))
proof
let x;
let y;
assume A14: [ x,y ] in ( ( R ~ ) | X );
then [ x,y ] in ( R ~ ) by RELAT_1:def 11;
then A15: [ y,x ] in R by RELAT_1:def 7;
x in X by A14,RELAT_1:def 11;
then y in Y by A15,CKB13:1;
then [ y,x ] in ( R | Y ) by A15,RELAT_1:def 11;
hence thesis by RELAT_1:def 7;
end;
then ( ( R ~ ) | X ) c= ( ( R | Y ) ~ ) by RELAT_1:def 3;
hence thesis by A5,A8,A13,XBOOLE_0:def 10;
end;
