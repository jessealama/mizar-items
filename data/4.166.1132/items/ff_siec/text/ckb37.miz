environ
vocabularies NET_1,XBOOLE_0,TARSKI,ZFMISC_1,RELAT_1,FF_SIEC,STRUCT_0,PETRI;
notations TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,PARTIT_2,STRUCT_0,PETRI,NET_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB24,CKB25,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36;
definitions NET_1,STRUCT_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB24,CKB25,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36;
theorems ZFMISC_1,RELAT_1,SYSREL,TARSKI,RELSET_1,NET_1,XBOOLE_0,XBOOLE_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36;
registrations XBOOLE_0,RELAT_1,NET_1,STRUCT_0,PARTIT_2;
constructors TARSKI,NET_1,STRUCT_0,PETRI,PARTIT_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB24,CKB25,CKB30,CKB31,CKB33,CKB34,CKB35,CKB36;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve M for Pnet;
theorem
(( f_pre M ) c= [: ( f_transitions M ),( f_places M ) :] & ( f_post M ) c= [: ( f_transitions M ),( f_places M ) :])
proof
A1: (for x holds (for y holds ([ x,y ] in ( f_pre M ) implies [ x,y ] in [: ( f_transitions M ),( f_places M ) :])))
proof
let x;
let y;
assume A2: [ x,y ] in ( f_pre M );
then A3: x in (the carrier' of M) by RELAT_1:def 11;
[ x,y ] in ( Flow M ) by A2,RELAT_1:def 11;
then y in (the carrier of M) by A3,CKB13:1;
hence thesis by A3,ZFMISC_1:87;
end;
(for x holds (for y holds ([ x,y ] in ( f_post M ) implies [ x,y ] in [: ( f_transitions M ),( f_places M ) :])))
proof
let x;
let y;
assume A4: [ x,y ] in ( f_post M );
then A5: [ x,y ] in ( ( Flow M ) ~ ) by RELAT_1:def 11;
A6: x in (the carrier' of M) by A4,RELAT_1:def 11;
[ y,x ] in ( Flow M ) by A5,RELAT_1:def 7;
then y in (the carrier of M) by A6,CKB13:1;
hence thesis by A6,ZFMISC_1:87;
end;
hence thesis by A1,RELAT_1:def 3;
end;
