environ
vocabularies NUMBERS,CLOPBAN2,SUBSET_1,NAT_1,SEQ_1,RELAT_1,COMSEQ_3,ARYTM_3,CARD_1,PREPOWER,FUNCT_1,MESFUNC1,LOPBAN_4,SEQ_2,ORDINAL2,ARYTM_1,SUPINF_2,REAL_1,XXREAL_0,NORMSP_1,PRE_TOPC,XXREAL_2,XREAL_0,ORDINAL1,SERIES_1,COMPLEX1,SIN_COS,XBOOLE_0,STRUCT_0,NEWTON,REALSET1,VALUED_1,XCMPLX_0,LOPBAN_3,CARD_3,VALUED_0,RSSPACE3,ALGSTR_0,CFUNCT_1;
notations RELAT_1,FUNCT_1,SUBSET_1,FUNCT_2,PRE_TOPC,XCMPLX_0,XXREAL_0,XREAL_0,ORDINAL1,NUMBERS,CLOPBAN3,COMPLEX1,REAL_1,NAT_1,STRUCT_0,ALGSTR_0,NEWTON,RLVECT_1,SQUARE_1,SEQ_1,SEQ_2,SEQM_3,SERIES_1,LOPBAN_4,NAT_D,SIN_COS,BHSP_4,CFUNCT_1,NORMSP_0,CLVECT_1,CSSPACE3,CLOPBAN2,LOPBAN_3,NORMSP_1,CKB15,CKB17,CKB18,CKB19,CKB20;
definitions CLVECT_1,CKB15,CKB17,CKB18,CKB19,CKB20;
theorems ABSVALUE,RLVECT_1,XCMPLX_0,XCMPLX_1,XREAL_0,SEQ_2,SEQM_3,COMSEQ_3,SIN_COS,SERIES_1,NAT_1,INT_1,NEWTON,FUNCT_2,SEQ_4,LOPBAN_3,CLOPBAN3,CLVECT_1,COMPLEX1,CSSPACE3,XREAL_1,XXREAL_0,LOPBAN_4,BHSP_4,NORMSP_1,VALUED_0,ORDINAL1,NORMSP_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41;
schemes SEQ_1,NAT_1,FUNCT_2,CLASSES1,CKB16;
registrations ORDINAL1,RELSET_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,MEMBERED,STRUCT_0,CLOPBAN2,CLOPBAN3,VALUED_0,SEQ_2,XBOOLE_0,SEQ_4,NEWTON,NAT_1,CKB28;
constructors ARYTM_0,REAL_1,SQUARE_1,NAT_1,SEQ_2,COMSEQ_3,NAT_D,SIN_COS,BHSP_4,LOPBAN_4,CSSPACE3,CLOPBAN3,SEQ_1,SERIES_1,SEQ_4,NORMSP_1,RELSET_1,CKB15,CKB17,CKB18,CKB19,CKB20;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve X for Complex_Banach_Algebra;
reserve w for (Element of X);
reserve z for (Element of X);
reserve k for (Element of ( NAT ));
reserve seq for (sequence of X);
theorem
Lm3: (for z holds (for w holds (z,w are_commutative  implies ( ( Sum ( z ExpSeq ) ) * ( Sum ( w ExpSeq ) ) ) = ( Sum ( ( z + w ) ExpSeq ) ))))
proof
let z;
let w;
assume that
A1: z,w are_commutative ;
deffunc U((Element of ( NAT ))) = ( ( Partial_Sums ( Conj ($1,z,w) ) ) . $1 );
(ex seq st (for k holds ( seq . k ) = U(k))) from FUNCT_2:sch 4;
then consider seq being (sequence of X) such that A2: (for k holds ( seq . k ) = ( ( Partial_Sums ( Conj (k,z,w) ) ) . k ));
now
let k being (Element of ( NAT ));
thus ( seq . k ) = ( ( Partial_Sums ( Conj (k,z,w) ) ) . k ) by A2
.= ( ( ( ( Partial_Sums ( z ExpSeq ) ) . k ) * ( ( Partial_Sums ( w ExpSeq ) ) . k ) ) - ( ( Partial_Sums ( ( z + w ) ExpSeq ) ) . k ) ) by A1,CKB34:1
.= ( ( ( ( Partial_Sums ( z ExpSeq ) ) * ( Partial_Sums ( w ExpSeq ) ) ) . k ) - ( ( Partial_Sums ( ( z + w ) ExpSeq ) ) . k ) ) by CLOPBAN3:def 6
.= ( ( ( ( Partial_Sums ( z ExpSeq ) ) * ( Partial_Sums ( w ExpSeq ) ) ) - ( Partial_Sums ( ( z + w ) ExpSeq ) ) ) . k ) by NORMSP_1:def 3;
end;
then A3: seq = ( ( ( Partial_Sums ( z ExpSeq ) ) * ( Partial_Sums ( w ExpSeq ) ) ) - ( Partial_Sums ( ( z + w ) ExpSeq ) ) ) by FUNCT_2:63;
A4: ( Partial_Sums ( w ExpSeq ) ) is  convergent by CLOPBAN3:def 1;
A5: ( lim seq ) = ( 0. X ) by A2,CKB41:1;
A6: ( Partial_Sums ( ( z + w ) ExpSeq ) ) is  convergent by CLOPBAN3:def 1;
A7: ( Partial_Sums ( z ExpSeq ) ) is  convergent by CLOPBAN3:def 1;
then A8: ( ( Partial_Sums ( z ExpSeq ) ) * ( Partial_Sums ( w ExpSeq ) ) ) is  convergent by A4,CKB5:1;
A9: ( lim ( ( Partial_Sums ( z ExpSeq ) ) * ( Partial_Sums ( w ExpSeq ) ) ) ) = ( ( lim ( Partial_Sums ( z ExpSeq ) ) ) * ( lim ( Partial_Sums ( w ExpSeq ) ) ) ) by A7,A4,CKB10:1;
thus ( Sum ( ( z + w ) ExpSeq ) ) = ( lim ( Partial_Sums ( ( z + w ) ExpSeq ) ) ) by CLOPBAN3:def 2
.= ( ( lim ( Partial_Sums ( z ExpSeq ) ) ) * ( lim ( Partial_Sums ( w ExpSeq ) ) ) ) by A3,A6,A8,A9,A5,CKB3:1
.= ( ( Sum ( z ExpSeq ) ) * ( lim ( Partial_Sums ( w ExpSeq ) ) ) ) by CLOPBAN3:def 2
.= ( ( Sum ( z ExpSeq ) ) * ( Sum ( w ExpSeq ) ) ) by CLOPBAN3:def 2;
end;
