environ
vocabularies NUMBERS,CLOPBAN2,SUBSET_1,NAT_1,SEQ_1,RELAT_1,COMSEQ_3,ARYTM_3,CARD_1,PREPOWER,FUNCT_1,MESFUNC1,LOPBAN_4,SEQ_2,ORDINAL2,ARYTM_1,SUPINF_2,REAL_1,XXREAL_0,NORMSP_1,PRE_TOPC,XXREAL_2,XREAL_0,ORDINAL1,SERIES_1,COMPLEX1,SIN_COS,XBOOLE_0,STRUCT_0,NEWTON,REALSET1,VALUED_1,XCMPLX_0,LOPBAN_3,CARD_3,VALUED_0,RSSPACE3,ALGSTR_0,CFUNCT_1;
notations RELAT_1,FUNCT_1,SUBSET_1,FUNCT_2,PRE_TOPC,XCMPLX_0,XXREAL_0,XREAL_0,ORDINAL1,NUMBERS,CLOPBAN3,COMPLEX1,REAL_1,NAT_1,STRUCT_0,ALGSTR_0,NEWTON,RLVECT_1,SQUARE_1,SEQ_1,SEQ_2,SEQM_3,SERIES_1,LOPBAN_4,NAT_D,SIN_COS,BHSP_4,CFUNCT_1,NORMSP_0,CLVECT_1,CSSPACE3,CLOPBAN2,LOPBAN_3,NORMSP_1,CKB15,CKB17,CKB18,CKB19,CKB20;
definitions CLVECT_1,CKB15,CKB17,CKB18,CKB19,CKB20;
theorems ABSVALUE,RLVECT_1,XCMPLX_0,XCMPLX_1,XREAL_0,SEQ_2,SEQM_3,COMSEQ_3,SIN_COS,SERIES_1,NAT_1,INT_1,NEWTON,FUNCT_2,SEQ_4,LOPBAN_3,CLOPBAN3,CLVECT_1,COMPLEX1,CSSPACE3,XREAL_1,XXREAL_0,LOPBAN_4,BHSP_4,NORMSP_1,VALUED_0,ORDINAL1,NORMSP_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25;
schemes SEQ_1,NAT_1,FUNCT_2,CLASSES1,CKB16;
registrations ORDINAL1,RELSET_1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,MEMBERED,STRUCT_0,CLOPBAN2,CLOPBAN3,VALUED_0,SEQ_2,XBOOLE_0,SEQ_4,NEWTON,NAT_1;
constructors ARYTM_0,REAL_1,SQUARE_1,NAT_1,SEQ_2,COMSEQ_3,NAT_D,SIN_COS,BHSP_4,LOPBAN_4,CSSPACE3,CLOPBAN3,SEQ_1,SERIES_1,SEQ_4,NORMSP_1,RELSET_1,CKB15,CKB17,CKB18,CKB19,CKB20;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
reserve X for Complex_Banach_Algebra;
reserve w for (Element of X);
reserve z for (Element of X);
reserve n for (Element of ( NAT ));
theorem
Th18: (for z holds (for w holds (z,w are_commutative  implies ( ( ( 1r ) / ( n ! ) ) * ( ( z + w ) #N n ) ) = ( ( Partial_Sums ( Expan_e (n,z,w) ) ) . n ))))
proof
let z;
let w;
assume z,w are_commutative ;
hence ( ( ( 1r ) / ( n ! ) ) * ( ( z + w ) #N n ) ) = ( ( ( 1r ) / ( n ! ) ) * ( ( Partial_Sums ( Expan (n,z,w) ) ) . n ) ) by CKB24:1
.= ( ( ( ( 1r ) / ( n ! ) ) * ( Partial_Sums ( Expan (n,z,w) ) ) ) . n ) by CLVECT_1:def 14
.= ( ( Partial_Sums ( ( ( 1r ) / ( n ! ) ) * ( Expan (n,z,w) ) ) ) . n ) by CLOPBAN3:19
.= ( ( Partial_Sums ( Expan_e (n,z,w) ) ) . n ) by CKB25:1;
end;
