environ
vocabularies NUMBERS,XBOOLE_0,CARD_1,NAT_1,SUBSET_1,ARYTM_3,RELAT_1,FUNCT_1,FINSEQ_1,CIRCCOMB,FINSEQ_2,MSUALG_1,PARTFUN1,MSAFREE2,FUNCT_4,TARSKI,STRUCT_0,MARGREL1,XBOOLEAN,CIRCUIT1,FSM_1,CIRCUIT2,CARD_3,GLIB_000,LATTICES,MCART_1,FINSET_1,CLASSES1,FACIRC_1;
notations TARSKI,XBOOLE_0,ENUMSET1,SUBSET_1,NUMBERS,XCMPLX_0,MCART_1,RELAT_1,STRUCT_0,FUNCT_1,FUNCT_2,FINSEQ_1,FINSET_1,FINSEQ_2,FUNCT_4,MARGREL1,BINARITH,CARD_3,CLASSES1,PARTFUN1,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,XXREAL_0,NAT_1,CKB1,CKB7,CKB8,CKB22,CKB38,CKB45,CKB46,CKB47,CKB48,CKB50,CKB57,CKB90,CKB95,CKB100,CKB101,CKB105,CKB110,CKB117,CKB118,CKB119,CKB120,CKB121,CKB127,CKB128;
definitions TARSKI,RELAT_1,MSAFREE2,CIRCUIT2,CIRCCOMB,XBOOLE_0,MARGREL1,CKB1,CKB7,CKB22,CKB45,CKB46,CKB47,CKB48,CKB50,CKB57,CKB90,CKB95,CKB100,CKB101,CKB105,CKB117,CKB118,CKB119,CKB120,CKB121,CKB127,CKB128;
theorems TARSKI,AXIOMS,ENUMSET1,MCART_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCT_4,ORDINAL1,FINSEQ_1,FINSEQ_2,MSUALG_1,MSAFREE2,CIRCUIT1,CIRCUIT2,CIRCCOMB,XBOOLE_0,XBOOLE_1,CLASSES1,CARD_1,CKB1,CKB7,CKB22,CKB26,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB103,CKB104,CKB105,CKB106,CKB107,CKB108,CKB109,CKB111,CKB112,CKB113,CKB114,CKB115,CKB116,CKB117,CKB118,CKB119,CKB120,CKB121,CKB122,CKB123,CKB124,CKB125,CKB126,CKB127,CKB128,CKB129,CKB130,CKB131;
schemes NAT_1,RECDEF_1,FUNCT_2,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,XXREAL_0,FINSEQ_1,FINSEQ_2,CARD_3,STRUCT_0,MSUALG_1,CIRCCOMB,NAT_1,XCMPLX_0,MSAFREE2,MARGREL1,FINSET_1,CARD_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB23,CKB24,CKB25,CKB27,CKB28,CKB29,CKB75,CKB102;
constructors ENUMSET1,XXREAL_0,NAT_1,CLASSES1,BINARITH,CIRCUIT1,CIRCUIT2,CIRCCOMB,SEQ_1,RELSET_1,BINOP_1,WELLORD2,DOMAIN_1,CKB1,CKB7,CKB22,CKB45,CKB46,CKB47,CKB48,CKB50,CKB57,CKB90,CKB95,CKB100,CKB101,CKB105,CKB110,CKB117,CKB118,CKB119,CKB120,CKB121,CKB127,CKB128;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
Th75: (for x,y,c being non pair set holds (( InputVertices ( MajorityStr (x,y,c) ) ) = { x,y,c } & ( InnerVertices ( MajorityStr (x,y,c) ) ) = ( { [ <* x,y *>,( '&' ) ],[ <* y,c *>,( '&' ) ],[ <* c,x *>,( '&' ) ] } \/ { ( MajorityOutput (x,y,c) ) } )))
proof
let x being non pair set,y being non pair set,c being non pair set;
set xy = [ <* x,y *>,( '&' ) ];
set yc = [ <* y,c *>,( '&' ) ];
set cx = [ <* c,x *>,( '&' ) ];
set MI = ( MajorityIStr (x,y,c) );
set S = ( 1GateCircStr (<* xy,yc,cx *>,( or3 )) );
set M = ( MajorityStr (x,y,c) );
A1: ( 1GateCircStr (<* x,y *>,( '&' )) ) tolerates ( 1GateCircStr (<* y,c *>,( '&' )) ) by CIRCCOMB:43;
A2: ( InnerVertices S ) is Relation by CKB80:1;
A3: ( InputVertices ( 1GateCircStr (<* y,c *>,( '&' )) ) ) = { y,c } by CKB82:1;
A4: (( InnerVertices ( 1GateCircStr (<* x,y *>,( '&' )) ) ) = { [ <* x,y *>,( '&' ) ] } & ( InnerVertices ( 1GateCircStr (<* y,c *>,( '&' )) ) ) = { [ <* y,c *>,( '&' ) ] }) by CIRCCOMB:42;
then A5: (( InnerVertices ( 1GateCircStr (<* c,x *>,( '&' )) ) ) = { [ <* c,x *>,( '&' ) ] } & ( InnerVertices ( ( 1GateCircStr (<* x,y *>,( '&' )) ) +* ( 1GateCircStr (<* y,c *>,( '&' )) ) ) ) = ( { [ <* x,y *>,( '&' ) ] } \/ { [ <* y,c *>,( '&' ) ] } )) by A1,CIRCCOMB:11,CIRCCOMB:42;
(( 1GateCircStr (<* x,y *>,( '&' )) ) tolerates ( 1GateCircStr (<* c,x *>,( '&' )) ) & ( 1GateCircStr (<* y,c *>,( '&' )) ) tolerates ( 1GateCircStr (<* c,x *>,( '&' )) )) by CIRCCOMB:43;
then ( ( 1GateCircStr (<* x,y *>,( '&' )) ) +* ( 1GateCircStr (<* y,c *>,( '&' )) ) ) tolerates ( 1GateCircStr (<* c,x *>,( '&' )) ) by A1,CIRCCOMB:3;
then A6: ( InnerVertices MI ) = ( ( { [ <* x,y *>,( '&' ) ] } \/ { [ <* y,c *>,( '&' ) ] } ) \/ { [ <* c,x *>,( '&' ) ] } ) by A5,CIRCCOMB:11
.= ( { [ <* x,y *>,( '&' ) ],[ <* y,c *>,( '&' ) ] } \/ { [ <* c,x *>,( '&' ) ] } ) by ENUMSET1:1
.= { [ <* x,y *>,( '&' ) ],[ <* y,c *>,( '&' ) ],[ <* c,x *>,( '&' ) ] } by ENUMSET1:3;
( InputVertices S ) = { [ <* x,y *>,( '&' ) ],[ <* y,c *>,( '&' ) ],[ <* c,x *>,( '&' ) ] } by CKB84:1;
then A7: ( ( InputVertices S ) \ ( InnerVertices MI ) ) = ( {} ) by A6,XBOOLE_1:37;
A8: (( InputVertices ( 1GateCircStr (<* x,y *>,( '&' )) ) ) = { x,y } & ( InputVertices ( 1GateCircStr (<* c,x *>,( '&' )) ) ) = { c,x }) by CKB82:1;
A9: ( InputVertices ( 1GateCircStr (<* c,x *>,( '&' )) ) ) is  without_pairs by CKB83:1;
A10: (( InputVertices ( 1GateCircStr (<* x,y *>,( '&' )) ) ) is  without_pairs & ( InputVertices ( 1GateCircStr (<* y,c *>,( '&' )) ) ) is  without_pairs) by CKB83:1;
then A11: ( InputVertices ( ( 1GateCircStr (<* x,y *>,( '&' )) ) +* ( 1GateCircStr (<* y,c *>,( '&' )) ) ) ) is  without_pairs by CKB36:1,CIRCCOMB:47;
then ( InputVertices MI ) is  without_pairs by A9,CKB36:1,CIRCCOMB:47;
then ( InputVertices M ) = ( ( InputVertices MI ) \/ ( ( InputVertices S ) \ ( InnerVertices MI ) ) ) by A2,CKB34:1;
hence ( InputVertices M ) = ( ( InputVertices ( ( 1GateCircStr (<* x,y *>,( '&' )) ) +* ( 1GateCircStr (<* y,c *>,( '&' )) ) ) ) \/ ( InputVertices ( 1GateCircStr (<* c,x *>,( '&' )) ) ) ) by A9,A11,A5,A7,CKB35:1
.= ( ( ( InputVertices ( 1GateCircStr (<* x,y *>,( '&' )) ) ) \/ ( InputVertices ( 1GateCircStr (<* y,c *>,( '&' )) ) ) ) \/ ( InputVertices ( 1GateCircStr (<* c,x *>,( '&' )) ) ) ) by A10,A4,CKB35:1
.= ( { x,y,y,c } \/ { c,x } ) by A8,A3,ENUMSET1:5
.= ( { y,y,x,c } \/ { c,x } ) by ENUMSET1:67
.= ( { y,x,c } \/ { c,x } ) by ENUMSET1:31
.= ( { x,y,c } \/ { c,x } ) by ENUMSET1:58
.= ( { x,y,c } \/ ( { c } \/ { x } ) ) by ENUMSET1:1
.= ( ( { x,y,c } \/ { c } ) \/ { x } ) by XBOOLE_1:4
.= ( ( { c,x,y } \/ { c } ) \/ { x } ) by ENUMSET1:59
.= ( { c,c,x,y } \/ { x } ) by ENUMSET1:4
.= ( { c,x,y } \/ { x } ) by ENUMSET1:31
.= ( { x,y,c } \/ { x } ) by ENUMSET1:59
.= { x,x,y,c } by ENUMSET1:4
.= { x,y,c } by ENUMSET1:31;
MI tolerates S by CIRCCOMB:47;
hence ( InnerVertices M ) = ( ( InnerVertices MI ) \/ ( InnerVertices S ) ) by CIRCCOMB:11
.= ( { [ <* x,y *>,( '&' ) ],[ <* y,c *>,( '&' ) ],[ <* c,x *>,( '&' ) ] } \/ { ( MajorityOutput (x,y,c) ) } ) by A6,CIRCCOMB:42;
end;
