environ
vocabularies FUNCSDOM,VECTSP_1,VECTSP_2,SUBSET_1,RLVECT_2,RLSUB_1,RMOD_3,RLSUB_2,STRUCT_0,RELAT_1,FUNCT_1,SUPINF_2,ZFMISC_1,ALGSTR_0,REALSET1,GROUP_1,QC_LANG1,TARSKI,XBOOLE_0,RLVECT_3,CARD_3,PARTFUN1,ARYTM_3,ARYTM_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,BINOP_1,REALSET1,DOMAIN_1,STRUCT_0,ALGSTR_0,GROUP_1,VECTSP_1,FUNCSDOM,VECTSP_2,VECTSP_4,VECTSP_5,VECTSP_6,MOD_3,CKB1,CKB6;
definitions TARSKI,XBOOLE_0,REALSET1,STRUCT_0,CKB6;
theorems FUNCT_2,MOD_3,TARSKI,VECTSP_1,VECTSP_4,VECTSP_5,VECTSP_6,XBOOLE_1,RELAT_1,STRUCT_0,CKB2,CKB3,CKB4,CKB5,CKB6;
registrations RELSET_1,STRUCT_0,VECTSP_1,VECTSP_4;
constructors BINOP_1,REALSET2,VECTSP_5,VECTSP_6,MOD_3,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve K for Ring;
reserve r for (Scalar of K);
reserve V for (LeftMod of K);
reserve a for (Vector of V);
theorem
Th5: (K is  trivial implies ((for r holds r = ( 0. K )) & (for a holds a = ( 0. V ))))
proof
assume K is  trivial;
then A1: ( 0. K ) = ( 1_ K ) by CKB6:def 1;
A2:now
let a;
thus a = ( ( 1_ K ) * a ) by VECTSP_1:def 17
.= ( 0. V ) by A1,VECTSP_1:14;
end;
now
let r;
thus r = ( r * ( 1_ K ) ) by VECTSP_1:def 4
.= ( 0. K ) by A1,VECTSP_1:6;
end;
hence thesis by A2;
end;
