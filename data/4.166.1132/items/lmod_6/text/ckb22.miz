environ
vocabularies FUNCSDOM,VECTSP_1,VECTSP_2,SUBSET_1,RLVECT_2,RLSUB_1,RMOD_3,RLSUB_2,STRUCT_0,RELAT_1,FUNCT_1,SUPINF_2,ZFMISC_1,ALGSTR_0,REALSET1,GROUP_1,QC_LANG1,TARSKI,XBOOLE_0,RLVECT_3,CARD_3,PARTFUN1,ARYTM_3,ARYTM_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,BINOP_1,REALSET1,DOMAIN_1,STRUCT_0,ALGSTR_0,GROUP_1,VECTSP_1,FUNCSDOM,VECTSP_2,VECTSP_4,VECTSP_5,VECTSP_6,MOD_3,CKB1,CKB6,CKB10,CKB12,CKB19,CKB20;
definitions TARSKI,XBOOLE_0,REALSET1,STRUCT_0,CKB6,CKB10,CKB12,CKB19,CKB20;
theorems FUNCT_2,MOD_3,TARSKI,VECTSP_1,VECTSP_4,VECTSP_5,VECTSP_6,XBOOLE_1,RELAT_1,STRUCT_0,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
registrations RELSET_1,STRUCT_0,VECTSP_1,VECTSP_4,CKB13;
constructors BINOP_1,REALSET2,VECTSP_5,VECTSP_6,MOD_3,RELSET_1,CKB10,CKB12,CKB19,CKB20;
requirements SUBSET,BOOLE;
begin
reserve K for Ring;
reserve r for (Scalar of K);
reserve M for (LeftMod of K);
reserve N for (LeftMod of K);
reserve m for (Vector of M);
reserve m1 for (Vector of M);
reserve m2 for (Vector of M);
reserve n for (Vector of N);
reserve n1 for (Vector of N);
reserve n2 for (Vector of N);
theorem
(M c= N implies ((((((((((( 0. M ) = ( 0. N ) & ((m1 = n1 & m2 = n2) implies ( m1 + m2 ) = ( n1 + n2 ))) & (m = n implies ( r * m ) = ( r * n ))) & (m = n implies ( - n ) = ( - m ))) & ((m1 = n1 & m2 = n2) implies ( m1 - m2 ) = ( n1 - n2 ))) & ( 0. N ) in M) & ( 0. M ) in N) & ((n1 in M & n2 in M) implies ( n1 + n2 ) in M)) & (n in M implies ( r * n ) in M)) & (n in M implies ( - n ) in M)) & ((n1 in M & n2 in M) implies ( n1 - n2 ) in M)))
proof
assume A1: M c= N;
thus ( 0. M ) = ( 0. N )
proof
reconsider M9 = M as (Subspace of N) by A1,CKB20:def 1;
( 0. M9 ) = ( 0. N ) by VECTSP_4:11;
hence thesis;
end;

thus ((m1 = n1 & m2 = n2) implies ( m1 + m2 ) = ( n1 + n2 ))
proof
reconsider M9 = M as (Subspace of N) by A1,CKB20:def 1;
assume that
A2: m1 = n1
and
A3: m2 = n2;
reconsider m19 = m1 as (Vector of M9);
m19 = n1 by A2;
hence thesis by A3,VECTSP_4:13;
end;

thus (m = n implies ( r * m ) = ( r * n ))
proof
reconsider M9 = M as (Subspace of N) by A1,CKB20:def 1;
reconsider m9 = m as (Vector of M9);
assume m = n;
then m9 = n;
hence thesis by VECTSP_4:14;
end;

thus (m = n implies ( - n ) = ( - m ))
proof
reconsider M9 = M as (Subspace of N) by A1,CKB20:def 1;
reconsider m9 = m as (Vector of M9);
assume m = n;
then m9 = n;
hence thesis by VECTSP_4:15;
end;

thus ((m1 = n1 & m2 = n2) implies ( m1 - m2 ) = ( n1 - n2 ))
proof
reconsider M9 = M as (Subspace of N) by A1,CKB20:def 1;
assume that
A4: m1 = n1
and
A5: m2 = n2;
reconsider m19 = m1 as (Vector of M9);
m19 = n1 by A4;
hence thesis by A5,VECTSP_4:16;
end;

thus ( 0. N ) in M
proof
reconsider M9 = M as (Subspace of N) by A1,CKB20:def 1;
( 0. N ) in M9 by VECTSP_4:17;
hence thesis;
end;

thus ( 0. M ) in N
proof
reconsider M9 = M as (Subspace of N) by A1,CKB20:def 1;
( 0. M9 ) in N by VECTSP_4:19;
hence thesis;
end;

thus ((n1 in M & n2 in M) implies ( n1 + n2 ) in M)
proof
reconsider M9 = M as (Subspace of N) by A1,CKB20:def 1;
assume that
A6: n1 in M
and
A7: n2 in M;
n1 in M9 by A6;
hence thesis by A7,VECTSP_4:20;
end;

thus (n in M implies ( r * n ) in M)
proof
reconsider M9 = M as (Subspace of N) by A1,CKB20:def 1;
assume n in M;
then n in M9;
hence thesis by VECTSP_4:21;
end;

thus (n in M implies ( - n ) in M)
proof
reconsider M9 = M as (Subspace of N) by A1,CKB20:def 1;
assume n in M;
then n in M9;
hence thesis by VECTSP_4:22;
end;

thus ((n1 in M & n2 in M) implies ( n1 - n2 ) in M)
proof
reconsider M9 = M as (Subspace of N) by A1,CKB20:def 1;
assume that
A8: n1 in M
and
A9: n2 in M;
n1 in M9 by A8;
hence thesis by A9,VECTSP_4:23;
end;

end;
