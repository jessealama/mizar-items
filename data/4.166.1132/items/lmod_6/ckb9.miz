environ
vocabularies FUNCSDOM,VECTSP_1,VECTSP_2,SUBSET_1,RLVECT_2,RLSUB_1,RMOD_3,RLSUB_2,STRUCT_0,RELAT_1,FUNCT_1,SUPINF_2,ZFMISC_1,ALGSTR_0,REALSET1,GROUP_1,QC_LANG1,TARSKI,XBOOLE_0,RLVECT_3,CARD_3,PARTFUN1,ARYTM_3,ARYTM_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,BINOP_1,REALSET1,DOMAIN_1,STRUCT_0,ALGSTR_0,GROUP_1,VECTSP_1,FUNCSDOM,VECTSP_2,VECTSP_4,VECTSP_5,VECTSP_6,MOD_3,CKB1,CKB6;
definitions TARSKI,XBOOLE_0,REALSET1,STRUCT_0,CKB6;
theorems FUNCT_2,MOD_3,TARSKI,VECTSP_1,VECTSP_4,VECTSP_5,VECTSP_6,XBOOLE_1,RELAT_1,STRUCT_0,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8;
registrations RELSET_1,STRUCT_0,VECTSP_1,VECTSP_4;
constructors BINOP_1,REALSET2,VECTSP_5,VECTSP_6,MOD_3,RELSET_1;
requirements SUBSET,BOOLE;
begin
reserve K for Ring;
reserve V for (LeftMod of K);
reserve a for (Vector of V);
theorem
(V is  trivial iff ( the VectSpStr of V ) = ( (0). V ))
proof
set X = (the carrier of ( (0). V ));
reconsider W = ( the VectSpStr of V ) as  strict (Subspace of V) by CKB4:1;
reconsider Z = ( (0). V ) as (Subspace of W) by VECTSP_4:39;
A1:now
assume W <> Z;
then consider a such that A2: (not a in Z) by VECTSP_4:32;
(not a in X) by A2,STRUCT_0:def 5;
then (not a in { ( 0. V ) }) by VECTSP_4:def 3;
then a <> ( 0. V ) by TARSKI:def 1;
hence V is non trivial by STRUCT_0:def 18;
end;
now
assume V is non trivial;
then consider a such that A3: a <> ( 0. V ) by STRUCT_0:def 18;
(not a in { ( 0. V ) }) by A3,TARSKI:def 1;
then (not a in X) by VECTSP_4:def 3;
hence W <> ( (0). V );
end;
hence thesis by A1;
end;
