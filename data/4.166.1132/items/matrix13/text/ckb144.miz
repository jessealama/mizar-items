environ
vocabularies NUMBERS,XBOOLE_0,NAT_1,XCMPLX_0,VECTSP_1,SUBSET_1,FINSEQ_1,MATRIX_1,CARD_1,TREES_1,XXREAL_0,MATRIX_2,QC_LANG1,RELAT_1,SUPINF_2,ARYTM_3,MATRIX_3,FUNCT_1,ZFMISC_1,FINSEQ_2,FUNCT_2,ARYTM_1,FINSET_1,TARSKI,SGRAPH1,CARD_3,ALGSTR_0,SETWISEO,ABIAN,FINSUB_1,BINOP_1,FINSOP_1,CARD_FIN,FUNCOP_1,FUNCT_4,MATRIX11,FINSEQ_5,INT_1,GROUP_1,ABSVALUE,RVSUM_1,STRUCT_0,INCSP_1,FVSUM_1,FREEALG,FINSEQ_3,LAPLACE,CLASSES1,AFINSQ_1,PRVECT_1,RLVECT_2,LMOD_7,VALUED_1,PARTFUN1,RLVECT_3,RLSUB_1,MESFUNC1,RLVECT_5,MATRIX13,RLVECT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,NAT_D,FINSET_1,RELAT_1,RELSET_1,FUNCT_1,PARTFUN1,FUNCT_2,SETWOP_2,FINSEQ_1,BINOP_1,STRUCT_0,ALGSTR_0,FUNCOP_1,RLVECT_1,GROUP_1,VECTSP_1,SETWISEO,FINSEQ_2,MATRIX_1,FINSUB_1,MATRIX_2,FVSUM_1,FINSOP_1,GROUP_4,MATRIX_3,FINSEQ_7,FUNCT_4,SGRAPH1,NEWTON,FINSEQ_5,DOMAIN_1,MATRIX_6,MATRIX_7,MATRIX11,CARD_FIN,FINSEQ_3,LAPLACE,MEASURE6,PRVECT_1,VECTSP_4,VECTSP_6,VECTSP_7,MATRLIN,VECTSP_9,FINSEQOP,CKB17,CKB43,CKB50,CKB51,CKB53,CKB54,CKB76,CKB88,CKB125,CKB126,CKB127,CKB130,CKB131;
definitions RLVECT_1,FINSEQ_2,FINSEQ_1,TARSKI,MATRIX_1,FVSUM_1,GROUP_4,MATRIX_2,MATRIX_3,MATRIX_7,MATRIX11,LAPLACE,MEASURE6,VECTSP_1,VECTSP_7,FUNCT_1,RELAT_1,STRUCT_0,ALGSTR_0,FUNCOP_1,CKB17,CKB54,CKB76,CKB88,CKB130,CKB131;
theorems NAT_D,CARD_1,CARD_2,CARD_FIN,COMPUT_1,ENUMSET1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FINSEQ_5,FINSOP_1,FINSUB_1,FRECHET,FUNCT_1,FUNCT_2,FUNCT_4,FUNCT_7,FUNCOP_1,FVSUM_1,GRAPH_2,GRAPH_5,GROUP_1,LAPLACE,MATRIX_1,MATRIX_2,MATRIX_3,MATRIX_7,MATRIX_9,MATRIX11,MATRIXR1,NAT_1,ORDINAL1,PRVECT_1,RELAT_1,RLVECT_1,SETWISEO,SETWOP_2,SGRAPH1,STIRL2_1,TARSKI,VECTSP_1,VECTSP_2,VECTSP_4,VECTSP_6,VECTSP_7,VECTSP_9,VECTSP10,WELLORD2,XBOOLE_0,XBOOLE_1,XREAL_1,ZFMISC_1,XXREAL_0,FINSEQOP,STRUCT_0,MATRIXR2,PARTFUN1,MATRLIN,XREAL_0,MEASURE6,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB44,CKB45,CKB52,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106,CKB107,CKB108,CKB109,CKB110,CKB111,CKB112,CKB113,CKB114,CKB115,CKB116,CKB118,CKB119,CKB120,CKB121,CKB124,CKB128,CKB129,CKB130,CKB131,CKB132,CKB133,CKB134,CKB135,CKB136,CKB137,CKB138,CKB139,CKB141,CKB142,CKB143;
schemes FINSEQ_1,FINSEQ_2,FUNCT_1,FUNCT_2,NAT_1,PRE_POLY,MATRIX_1;
registrations SUBSET_1,FUNCT_1,FINSET_1,STRUCT_0,FVSUM_1,MATRIX_2,VECTSP_1,FUNCT_2,ORDINAL1,XXREAL_0,NAT_1,FINSEQ_1,RELAT_1,CARD_1,SGRAPH1,MATRIX_1,FUNCOP_1,MATRIX11,SETFAM_1,FINSEQ_2,PRVECT_1,MATRLIN,XREAL_0,XBOOLE_0,VALUED_0,VECTSP_7,RELSET_1,CKB46,CKB47,CKB48,CKB49,CKB117,CKB122,CKB123,CKB140;
constructors SETWISEO,FINSOP_1,ALGSTR_1,FVSUM_1,DOMAIN_1,SEQM_3,XXREAL_0,FINSEQ_5,GROUP_4,FINSEQ_7,WELLORD2,NEWTON,STIRL2_1,CARD_FIN,MATRIX_6,MATRIX_7,MATRIX11,LAPLACE,PRVECT_1,VECTSP_6,VECTSP_7,VECTSP_9,NAT_D,BINOP_2,MATRLIN,VALUED_0,RELSET_1,MEASURE6,SETFAM_1,CKB17,CKB43,CKB50,CKB51,CKB53,CKB54,CKB76,CKB88,CKB127,CKB130,CKB131;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve x for set;
reserve n for Nat;
reserve K for Field;
reserve a for (Element of K);
reserve v for (Vector of ( n -VectSp_over K ));
reserve u for (Vector of ( n -VectSp_over K ));
reserve L for (Linear_Combination of ( n -VectSp_over K ));
theorem
Th115: (for V being (VectSp of K) holds (for U being  finite (Subset of V) holds (U is  linearly-independent implies (for u,v being (Vector of V) holds (((u in U & v in U) & u <> v) implies ( ( U \ { u } ) \/ { ( u + ( a * v ) ) } ) is  linearly-independent)))))
proof
let V being (VectSp of K);
let U being  finite (Subset of V);
assume that
A1: U is  linearly-independent;
let u being (Vector of V);
let v being (Vector of V);
assume that
A2: u in U
and
A3: v in U
and
A4: u <> v;
set ua = ( u + ( a * v ) );
set Uu = ( U \ { u } );
set Uua = ( Uu \/ { ua } );
per cases ;
suppose u = ua;

hence thesis by A1,A2,ZFMISC_1:116;
end;
suppose A5: u <> ua;

now
let L being (Linear_Combination of Uua);
assume that
A6: ( Sum L ) = ( 0. V );
per cases ;
suppose A7: ( L . ua ) = ( 0. K );

( Carrier L ) c= Uu
proof
let x;
assume A8: x in ( Carrier L );
then consider v being (Vector of V) such that A9: x = v and A10: ( L . v ) <> ( 0. K ) by VECTSP_6:1;
( Carrier L ) c= Uua by VECTSP_6:def 4;
then (v in Uu or (v in { ua } & (not v in { ua }))) by A7,A8,A9,A10,TARSKI:def 1,XBOOLE_0:def 3;
hence thesis by A9;
end;
then reconsider L9 = L as (Linear_Combination of Uu) by VECTSP_6:def 4;
A11: ( Sum L9 ) = ( 0. V ) by A6;
Uu is  linearly-independent by A1,VECTSP_7:1,XBOOLE_1:36;
hence ( Carrier L ) = ( {} ) by A11,VECTSP_7:def 1;
end;
suppose A12: ( L . ua ) <> ( 0. K );

A13: ( Carrier L ) c= Uua by VECTSP_6:def 4;
Uu c= U by XBOOLE_1:36;
then Uua c= ( U \/ { ua } ) by XBOOLE_1:13;
then A14: ( Carrier L ) c= ( U \/ { ua } ) by A13,XBOOLE_1:1;
ua in { ua } by TARSKI:def 1;
then ua in ( Lin { ua } ) by VECTSP_7:8;
then consider Lua being (Linear_Combination of { ua }) such that A15: ua = ( Sum Lua ) by VECTSP_7:7;
reconsider LLua = ( ( L . ua ) * Lua ) as (Linear_Combination of { ua }) by VECTSP_6:31;
A16: ( Carrier LLua ) c= { ua } by VECTSP_6:def 4;
then (not u in ( Carrier LLua )) by A5,TARSKI:def 1;
then A17: ( LLua . u ) = ( 0. K ) by VECTSP_6:2;
v in { v } by TARSKI:def 1;
then v in ( Lin { v } ) by VECTSP_7:8;
then consider Lv being (Linear_Combination of { v }) such that A18: v = ( Sum Lv ) by VECTSP_7:7;
reconsider LLv = ( ( ( L . ua ) * a ) * Lv ) as (Linear_Combination of { v }) by VECTSP_6:31;
A19: ( Carrier LLv ) c= { v } by VECTSP_6:def 4;
then (not u in ( Carrier LLv )) by A4,TARSKI:def 1;
then A20: ( LLv . u ) = ( 0. K ) by VECTSP_6:2;
v <> ua
proof
assume v = ( u + ( a * v ) );
then ( v - ( a * v ) ) = ( u + ( ( a * v ) - ( a * v ) ) ) by RLVECT_1:def 3
.= ( u + ( 0. V ) ) by VECTSP_1:16
.= u by RLVECT_1:def 4;
then u = ( ( ( 1_ K ) * v ) + ( - ( a * v ) ) ) by VECTSP_1:def 17
.= ( ( ( 1_ K ) * v ) + ( ( - a ) * v ) ) by VECTSP_1:21
.= ( ( ( 1_ K ) - a ) * v ) by VECTSP_1:def 15;
then A21: { v,u } is  linearly-dependent by A4,VECTSP_7:5;
{ v,u } c= U by A2,A3,ZFMISC_1:32;
hence thesis by A1,A21,VECTSP_7:1;
end;
then (not ua in ( Carrier LLv )) by A19,TARSKI:def 1;
then A22: ( LLv . ua ) = ( 0. K ) by VECTSP_6:2;
A23: ( u + ( a * v ) ) <> ( 0. V )
proof
{ v,u } c= U by A2,A3,ZFMISC_1:32;
then A24: { v,u } is  linearly-independent by A1,VECTSP_7:1;
A25: ( ( 1_ K ) * u ) = u by VECTSP_1:def 17;
assume ( 0. V ) = ( u + ( a * v ) );
then ( 1_ K ) = ( 0. K ) by A4,A24,A25,VECTSP_7:6;
hence thesis;
end;
A26: u <> ( 0. V ) by A1,A2,VECTSP_7:2;
( ( Lua . ua ) * ua ) = ua by A15,VECTSP_6:17
.= ( ( 1_ K ) * ua ) by VECTSP_1:def 17;
then A27: ( Lua . ua ) = ( 1_ K ) by A23,VECTSP10:4;
u in { u } by TARSKI:def 1;
then u in ( Lin { u } ) by VECTSP_7:8;
then consider Lu being (Linear_Combination of { u }) such that A28: u = ( Sum Lu ) by VECTSP_7:7;
reconsider LLu = ( ( L . ua ) * Lu ) as (Linear_Combination of { u }) by VECTSP_6:31;
A29: ( Carrier LLu ) c= { u } by VECTSP_6:def 4;
then (not ua in ( Carrier LLu )) by A5,TARSKI:def 1;
then A30: ( LLu . ua ) = ( 0. K ) by VECTSP_6:2;
{ u } c= U by A2,ZFMISC_1:31;
then A31: ( Carrier LLu ) c= U by A29,XBOOLE_1:1;
( ( ( L + LLv ) + LLu ) - LLua ) = ( ( L + ( LLv + LLu ) ) - LLua ) by VECTSP_6:26
.= ( ( L + ( LLv + LLu ) ) + ( - LLua ) ) by VECTSP_6:def 11
.= ( L + ( ( LLv + LLu ) + ( - LLua ) ) ) by VECTSP_6:26
.= ( L + ( ( LLv + LLu ) - LLua ) ) by VECTSP_6:def 11;
then A32: ( Carrier ( ( ( L + LLv ) + LLu ) - LLua ) ) c= ( ( Carrier L ) \/ ( Carrier ( ( LLv + LLu ) - LLua ) ) ) by VECTSP_6:23;
A33: ( Carrier ( ( LLv + LLu ) - LLua ) ) c= ( ( Carrier ( LLv + LLu ) ) \/ ( Carrier LLua ) ) by VECTSP_6:41;
A34: ( Carrier ( LLv + LLu ) ) c= ( ( Carrier LLv ) \/ ( Carrier LLu ) ) by VECTSP_6:23;
{ v } c= U by A3,ZFMISC_1:31;
then ( Carrier LLv ) c= U by A19,XBOOLE_1:1;
then ( ( Carrier LLv ) \/ ( Carrier LLu ) ) c= U by A31,XBOOLE_1:8;
then ( Carrier ( LLv + LLu ) ) c= U by A34,XBOOLE_1:1;
then ( ( Carrier ( LLv + LLu ) ) \/ ( Carrier LLua ) ) c= ( U \/ { ua } ) by A16,XBOOLE_1:13;
then ( Carrier ( ( LLv + LLu ) - LLua ) ) c= ( U \/ { ua } ) by A33,XBOOLE_1:1;
then ( ( Carrier L ) \/ ( Carrier ( ( LLv + LLu ) - LLua ) ) ) c= ( U \/ { ua } ) by A14,XBOOLE_1:8;
then A35: ( Carrier ( ( ( L + LLv ) + LLu ) - LLua ) ) c= ( U \/ { ua } ) by A32,XBOOLE_1:1;
A36: ( ( ( ( L + LLv ) + LLu ) - LLua ) . ua ) = ( ( ( ( L + LLv ) + LLu ) + ( - LLua ) ) . ua ) by VECTSP_6:def 11
.= ( ( ( ( L + LLv ) + LLu ) . ua ) + ( ( - LLua ) . ua ) ) by VECTSP_6:22
.= ( ( ( ( L + LLv ) . ua ) + ( LLu . ua ) ) + ( ( - LLua ) . ua ) ) by VECTSP_6:22
.= ( ( ( ( L . ua ) + ( 0. K ) ) + ( 0. K ) ) + ( ( - LLua ) . ua ) ) by A22,A30,VECTSP_6:22
.= ( ( ( L . ua ) + ( 0. K ) ) + ( ( - LLua ) . ua ) ) by RLVECT_1:def 4
.= ( ( L . ua ) + ( ( - LLua ) . ua ) ) by RLVECT_1:def 4
.= ( ( L . ua ) - ( LLua . ua ) ) by VECTSP_6:36
.= ( ( L . ua ) - ( ( L . ua ) * ( 1_ K ) ) ) by A27,VECTSP_6:def 9
.= ( ( L . ua ) - ( L . ua ) ) by VECTSP_1:def 4
.= ( 0. K ) by VECTSP_1:19;
( Carrier ( ( ( L + LLv ) + LLu ) - LLua ) ) c= U
proof
let x;
assume A37: x in ( Carrier ( ( ( L + LLv ) + LLu ) - LLua ) );
assume (not x in U);
then A38: x in { ua } by A35,A37,XBOOLE_0:def 3;
(ex v being (Element of V) st (x = v & ( ( ( ( L + LLv ) + LLu ) - LLua ) . v ) <> ( 0. K ))) by A37,VECTSP_6:1;
hence contradiction by A36,A38,TARSKI:def 1;
end;
then reconsider LLL = ( ( ( L + LLv ) + LLu ) - LLua ) as (Linear_Combination of U) by VECTSP_6:def 4;
A39: (not u in Uu) by ZFMISC_1:56;
(not u in { ua }) by A5,TARSKI:def 1;
then (not u in ( Carrier L )) by A13,A39,XBOOLE_0:def 3;
then A40: ( L . u ) = ( 0. K ) by VECTSP_6:2;
( ( Lu . u ) * u ) = u by A28,VECTSP_6:17
.= ( ( 1_ K ) * u ) by VECTSP_1:def 17;
then A41: ( Lu . u ) = ( 1_ K ) by A26,VECTSP10:4;
( LLL . u ) = ( ( ( ( L + LLv ) + LLu ) + ( - LLua ) ) . u ) by VECTSP_6:def 11
.= ( ( ( ( L + LLv ) + LLu ) . u ) + ( ( - LLua ) . u ) ) by VECTSP_6:22
.= ( ( ( ( L + LLv ) . u ) + ( LLu . u ) ) + ( ( - LLua ) . u ) ) by VECTSP_6:22
.= ( ( ( ( L . u ) + ( LLv . u ) ) + ( LLu . u ) ) + ( ( - LLua ) . u ) ) by VECTSP_6:22
.= ( ( ( ( 0. K ) + ( 0. K ) ) + ( LLu . u ) ) - ( 0. K ) ) by A20,A17,A40,VECTSP_6:36
.= ( ( ( 0. K ) + ( LLu . u ) ) - ( 0. K ) ) by RLVECT_1:def 4
.= ( ( LLu . u ) - ( 0. K ) ) by RLVECT_1:def 4
.= ( LLu . u ) by VECTSP_1:18
.= ( ( L . ua ) * ( 1_ K ) ) by A41,VECTSP_6:def 9
.= ( L . ua ) by VECTSP_1:def 4;
then A42: u in ( Carrier LLL ) by A12,VECTSP_6:1;
( Sum ( ( ( L + LLv ) + LLu ) - LLua ) ) = ( ( Sum ( ( L + LLv ) + LLu ) ) - ( Sum LLua ) ) by VECTSP_6:47
.= ( ( ( Sum ( L + LLv ) ) + ( Sum LLu ) ) - ( Sum LLua ) ) by VECTSP_6:44
.= ( ( ( ( Sum L ) + ( Sum LLv ) ) + ( Sum LLu ) ) - ( Sum LLua ) ) by VECTSP_6:44
.= ( ( ( ( Sum L ) + ( Sum LLv ) ) + ( Sum LLu ) ) - ( ( L . ua ) * ua ) ) by A15,VECTSP_6:45
.= ( ( ( ( Sum L ) + ( Sum LLv ) ) + ( ( L . ua ) * u ) ) - ( ( L . ua ) * ua ) ) by A28,VECTSP_6:45
.= ( ( ( ( Sum L ) + ( ( a * ( L . ua ) ) * v ) ) + ( ( L . ua ) * u ) ) - ( ( L . ua ) * ua ) ) by A18,VECTSP_6:45
.= ( ( ( ( Sum L ) + ( ( L . ua ) * ( a * v ) ) ) + ( ( L . ua ) * u ) ) - ( ( L . ua ) * ua ) ) by VECTSP_1:def 16
.= ( ( ( Sum L ) + ( ( ( L . ua ) * ( a * v ) ) + ( ( L . ua ) * u ) ) ) - ( ( L . ua ) * ua ) ) by RLVECT_1:def 3
.= ( ( ( Sum L ) + ( ( L . ua ) * ( ( a * v ) + u ) ) ) - ( ( L . ua ) * ua ) ) by VECTSP_1:def 14
.= ( ( Sum L ) + ( ( ( L . ua ) * ua ) - ( ( L . ua ) * ua ) ) ) by RLVECT_1:def 3
.= ( ( 0. V ) + ( 0. V ) ) by A6,VECTSP_1:16
.= ( 0. V ) by RLVECT_1:def 4;
hence ( Carrier L ) = ( {} ) by A1,A42,VECTSP_7:def 1;
end;
end;
hence thesis by VECTSP_7:def 1;
end;
end;
