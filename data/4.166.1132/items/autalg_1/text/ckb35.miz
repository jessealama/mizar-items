environ
vocabularies UNIALG_1,FUNCT_1,RELAT_1,STRUCT_0,MSUALG_3,FUNCT_2,SUBSET_1,XBOOLE_0,TARSKI,BINOP_1,GROUP_1,ALGSTR_0,PBOOLE,PZFMISC1,FUNCOP_1,MEMBER_1,MSUALG_1,CARD_3,CARD_1,MSUHOM_1,CQC_SIM1,GROUP_6,ZFMISC_1,WELLORD1,AUTALG_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,PBOOLE,PARTFUN1,FUNCT_2,NUMBERS,FUNCOP_1,STRUCT_0,ALGSTR_0,FINSEQ_1,BINOP_1,GROUP_1,GROUP_6,CARD_3,PZFMISC1,UNIALG_1,UNIALG_2,ALG_1,MSUALG_1,MSUALG_3,MSUHOM_1,CKB2,CKB9,CKB10,CKB27,CKB29,CKB31;
definitions FUNCT_1,ALG_1,GROUP_1,GROUP_6,MSUALG_3,TARSKI,XBOOLE_0,PZFMISC1,FUNCOP_1,ALGSTR_0,FUNCT_2,CKB2,CKB9,CKB10,CKB27;
theorems ALG_1,BINOP_1,CARD_3,FUNCOP_1,FUNCT_1,FUNCT_2,GROUP_1,GROUP_6,MSUALG_1,MSUALG_3,MSUHOM_1,PBOOLE,TARSKI,ZFMISC_1,RELAT_1,RELSET_1,XBOOLE_0,PZFMISC1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB34;
schemes BINOP_1,FUNCT_1,XBOOLE_0;
registrations XBOOLE_0,FUNCT_1,ORDINAL1,RELSET_1,FUNCT_2,FUNCOP_1,PBOOLE,STRUCT_0,MSUALG_1,CKB11,CKB28,CKB30,CKB32,CKB33;
constructors BINOP_1,CARD_3,PZFMISC1,GROUP_6,ALG_1,MSUALG_3,MSUHOM_1,RELSET_1,CKB2,CKB9,CKB10,CKB27,CKB31;
requirements BOOLE,SUBSET;
begin
reserve S for non  void non  empty ManySortedSign;
reserve U1 for  non-empty MSAlgebra over S;
definition
let S;
let U1;
func MSAAut U1 -> (MSFunctionSet of (the Sorts of U1),(the Sorts of U1)) means 
:Def7: (for h being (ManySortedFunction of U1,U1) holds (h in it iff h is_isomorphism U1,U1));
existence
proof
defpred P[ set ]
 means
(ex msf being (ManySortedFunction of U1,U1) st ($1 = msf & msf is_isomorphism U1,U1));
set T = (the Sorts of U1);
consider X being set such that A1: (for x being set holds (x in X iff (x in ( product ( MSFuncs (T,T) ) ) & P[ x ]))) from XBOOLE_0:sch 1;
(( id T ) in ( product ( MSFuncs (T,T) ) ) & (ex F being (ManySortedFunction of U1,U1) st (( id T ) = F & F is_isomorphism U1,U1))) by CKB25:1,MSUALG_3:16;
then reconsider X as non  empty set by A1;
X is (MSFunctionSet of T,T)
proof
thus T is_transformable_to T;
let q being set;
assume q in X;
then (ex msf being (ManySortedFunction of U1,U1) st (q = msf & msf is_isomorphism U1,U1)) by A1;
hence thesis;
end;
then reconsider X as (MSFunctionSet of T,T);
take X;
let h being (ManySortedFunction of U1,U1);
hereby
assume h in X;
then (ex msf being (ManySortedFunction of U1,U1) st (h = msf & msf is_isomorphism U1,U1)) by A1;
hence h is_isomorphism U1,U1;
end;
assume A2: h is_isomorphism U1,U1;
h in ( product ( MSFuncs (T,T) ) ) by CKB25:1;
hence thesis by A1,A2;
end;
uniqueness
proof
set T = (the Sorts of U1);
let F1 being (MSFunctionSet of T,T);
let F2 being (MSFunctionSet of T,T);
assume that
A3: (for h being (ManySortedFunction of U1,U1) holds (h in F1 iff h is_isomorphism U1,U1))
and
A4: (for h being (ManySortedFunction of U1,U1) holds (h in F2 iff h is_isomorphism U1,U1));
thus F1 c= F2
proof
let q being set;
assume A5: q in F1;
then reconsider h1 = q as (ManySortedFunction of U1,U1) by CKB27:def 1;
h1 is_isomorphism U1,U1 by A3,A5;
hence thesis by A4;
end;

let q being set;
assume A6: q in F2;
then reconsider h1 = q as (ManySortedFunction of U1,U1) by CKB27:def 1;
h1 is_isomorphism U1,U1 by A4,A6;
hence thesis by A3;
end;
end;
