environ
vocabularies NAT_1,VECTSP_1,SUBSET_1,MATRIX_1,REWRITE1,RELAT_1,MESFUNC1,ALGSTR_0,ARYTM_1,FINSEQ_1,TREES_1,ARYTM_3,SUPINF_2,XXREAL_0,CARD_1,QC_LANG1,ZFMISC_1,RELAT_2,FUNCOP_1,MATRIX_2,GROUP_1,MATRIX_6;
notations TARSKI,ZFMISC_1,NUMBERS,FINSEQ_1,RLVECT_1,GROUP_1,VECTSP_1,NAT_1,STRUCT_0,MATRIX_1,MATRIX_2,MATRIX_3,MATRIX_4,XXREAL_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7;
definitions MATRIX_4,CKB1,CKB2,CKB3;
theorems ZFMISC_1,RLVECT_1,MATRIX_1,MATRIX_2,MATRIX_4,MATRIX_3,VECTSP_1,NAT_1,CARD_2,XXREAL_0,CKB1,CKB2,CKB3,CKB8,CKB9,CKB10,CKB11;
registrations RELSET_1,XREAL_0,STRUCT_0,VECTSP_1,ORDINAL1;
constructors XXREAL_0,FVSUM_1,MATRIX_3,MATRIX_4,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7;
begin
reserve n for Nat;
reserve K for Field;
reserve M1 for (Matrix of n,K);
reserve M2 for (Matrix of n,K);
reserve M3 for (Matrix of n,K);
theorem
(((M1 commutes_with M2 & M1 commutes_with M3) & n > ( 0 )) implies M1 commutes_with ( M2 + M3 ))
proof
A1: ( width M1 ) = n by MATRIX_1:24;
A2: (( len M1 ) = n & ( len M2 ) = n) by MATRIX_1:24;
A3: ( len M3 ) = n by MATRIX_1:24;
assume that
A4: M1 commutes_with M2
and
A5: M1 commutes_with M3
and
A6: n > ( 0 );
A7: (( width M2 ) = n & ( width M3 ) = n) by MATRIX_1:24;
then ( ( M2 + M3 ) * M1 ) = ( ( M2 * M1 ) + ( M3 * M1 ) ) by A2,A3,A6,MATRIX_4:63
.= ( ( M1 * M2 ) + ( M3 * M1 ) ) by A4,CKB1:def 1
.= ( ( M1 * M2 ) + ( M1 * M3 ) ) by A5,CKB1:def 1
.= ( M1 * ( M2 + M3 ) ) by A1,A7,A2,A3,A6,MATRIX_4:62;
hence thesis by CKB1:def 1;
end;
