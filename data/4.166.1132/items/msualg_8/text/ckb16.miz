environ
vocabularies XBOOLE_0,PBOOLE,SUBSET_1,NUMBERS,FINSEQ_1,STRUCT_0,MSUALG_1,RELAT_1,XXREAL_0,ARYTM_3,FUNCT_1,MSUALG_5,EQREL_1,TARSKI,LATTICES,XXREAL_2,REWRITE1,LATTICE3,SETFAM_1,ZFMISC_1,CARD_1,MSUALG_4,CLOSURE2,NAT_1,MARGREL1,PARTFUN1,FUNCT_4,FINSET_1,CARD_3,MSUALG_6,MSUALG_7,MSUALG_8;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,RELSET_1,DOMAIN_1,NUMBERS,STRUCT_0,NAT_1,BINOP_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,FINSEQ_1,CARD_3,REWRITE1,EQREL_1,LATTICES,LATTICE3,PBOOLE,MSSUBFAM,MSUALG_1,MSUALG_4,MSUALG_5,CLOSURE2,MSUALG_6,MSUALG_7,XXREAL_0,CKB15;
definitions TARSKI,XBOOLE_0,EQREL_1,CKB15;
theorems XBOOLE_0,TARSKI,PBOOLE,NAT_LAT,MSUALG_4,MSUALG_5,MSUALG_7,CLOSURE2,SETFAM_1,LATTICES,LATTICE3,MSSUBFAM,ZFMISC_1,FINSEQ_1,SUBSET_1,REWRITE1,RELAT_1,MSUALG_6,FUNCT_2,NAT_1,EQREL_1,VECTSP_8,CARD_3,XBOOLE_1,PARTFUN1,CKB1,CKB3,CKB5,CKB6,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15;
schemes FINSEQ_1,PARTFUN1,CLASSES1,CKB2;
registrations SUBSET_1,RELSET_1,PARTFUN1,FINSET_1,MEMBERED,EQREL_1,PBOOLE,STRUCT_0,LATTICES,MSUALG_1,MSUALG_3,MSUALG_5,CLOSURE2,MSUALG_6,MSUALG_7,FUNCT_1,CKB4,CKB8;
constructors SETFAM_1,BINOP_1,XXREAL_0,NAT_1,MEMBERED,REALSET1,REWRITE1,MSSUBFAM,LATTICE3,MSUALG_5,CLOSURE2,MSUALG_6,MSUALG_7,RELSET_1,CKB15;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve S for non  void non  empty ManySortedSign;
reserve A for  non-empty MSAlgebra over S;
definition
let S;
let A;
let X being (Subset of ( EqRelLatt (the Sorts of A) ));
func CongrCl X -> (MSCongruence of A) equals 
( "/\" ({ x where x is (Element of ( EqRelLatt (the Sorts of A) )): (x is (MSCongruence of A) & X is_less_than x) },( EqRelLatt (the Sorts of A) )) );
coherence
proof
set Z = { x where x is (Element of ( EqRelLatt (the Sorts of A) )): (x is (MSCongruence of A) & X is_less_than x) };
now
let z being set;
assume z in Z;
then (ex z1 being (Element of ( EqRelLatt (the Sorts of A) )) st ((z = z1 & z1 is (MSCongruence of A)) & X is_less_than z1));
hence z in (the carrier of ( CongrLatt A )) by MSUALG_5:def 6;
end;
then reconsider Z9 = Z as (Subset of ( CongrLatt A )) by TARSKI:def 3;
( "/\" (Z9,( EqRelLatt (the Sorts of A) )) ) is (MSCongruence of A) by CKB14:1;
hence thesis;
end;
end;
