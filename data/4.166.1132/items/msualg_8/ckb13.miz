environ
vocabularies XBOOLE_0,PBOOLE,SUBSET_1,NUMBERS,FINSEQ_1,STRUCT_0,MSUALG_1,RELAT_1,XXREAL_0,ARYTM_3,FUNCT_1,MSUALG_5,EQREL_1,TARSKI,LATTICES,XXREAL_2,REWRITE1,LATTICE3,SETFAM_1,ZFMISC_1,CARD_1,MSUALG_4,CLOSURE2,NAT_1,MARGREL1,PARTFUN1,FUNCT_4,FINSET_1,CARD_3,MSUALG_6,MSUALG_7,MSUALG_8;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,RELSET_1,DOMAIN_1,NUMBERS,STRUCT_0,NAT_1,BINOP_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,FINSEQ_1,CARD_3,REWRITE1,EQREL_1,LATTICES,LATTICE3,PBOOLE,MSSUBFAM,MSUALG_1,MSUALG_4,MSUALG_5,CLOSURE2,MSUALG_6,MSUALG_7,XXREAL_0;
definitions TARSKI,XBOOLE_0,EQREL_1;
theorems XBOOLE_0,TARSKI,PBOOLE,NAT_LAT,MSUALG_4,MSUALG_5,MSUALG_7,CLOSURE2,SETFAM_1,LATTICES,LATTICE3,MSSUBFAM,ZFMISC_1,FINSEQ_1,SUBSET_1,REWRITE1,RELAT_1,MSUALG_6,FUNCT_2,NAT_1,EQREL_1,VECTSP_8,CARD_3,XBOOLE_1,PARTFUN1,CKB1,CKB3,CKB5,CKB6,CKB7,CKB9,CKB10,CKB11,CKB12;
schemes FINSEQ_1,PARTFUN1,CLASSES1,CKB2;
registrations SUBSET_1,RELSET_1,PARTFUN1,FINSET_1,MEMBERED,EQREL_1,PBOOLE,STRUCT_0,LATTICES,MSUALG_1,MSUALG_3,MSUALG_5,CLOSURE2,MSUALG_6,MSUALG_7,FUNCT_1,CKB4,CKB8;
constructors SETFAM_1,BINOP_1,XXREAL_0,NAT_1,MEMBERED,REALSET1,REWRITE1,MSSUBFAM,LATTICE3,MSUALG_5,CLOSURE2,MSUALG_6,MSUALG_7,RELSET_1;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve y for set;
theorem
Th10: (for Y being set holds (for X being (Subset of ( EqRelLatt Y )) holds ((x in Y & y in Y) implies ([ x,y ] in ( "\/" X ) iff (ex f being FinSequence st (((1 <= ( len f ) & x = ( f . 1 )) & y = ( f . ( len f ) )) & (for i being (Element of ( NAT )) holds ((1 <= i & i < ( len f )) implies [ ( f . i ),( f . ( i + 1 ) ) ] in ( union X )))))))))
proof
let Y being set;
let X being (Subset of ( EqRelLatt Y ));
assume that
A1: x in Y
and
A2: y in Y;
reconsider Y9 = Y as non empty set by A1;
reconsider x9 = x,y9 = y as (Element of Y9) by A1,A2;
reconsider R = ( union X ) as (Relation of Y9) by CKB9:1;
R = ( R ~ ) by CKB12:1;
then A3: ( R \/ ( R ~ ) ) = R;
A4: ([ x,y ] in ( "\/" X ) implies R reduces x,y)
proof
assume [ x,y ] in ( "\/" X );
then [ x9,y9 ] in ( EqCl R ) by CKB11:1;
then x,y are_convertible_wrt R by MSUALG_6:41;
hence thesis by A3,REWRITE1:def 4;
end;
thus ([ x,y ] in ( "\/" X ) implies (ex f being FinSequence st (((1 <= ( len f ) & x = ( f . 1 )) & y = ( f . ( len f ) )) & (for i being (Element of ( NAT )) holds ((1 <= i & i < ( len f )) implies [ ( f . i ),( f . ( i + 1 ) ) ] in ( union X ))))))
proof
assume [ x,y ] in ( "\/" X );
then consider f being FinSequence such that A5: ( len f ) > ( 0 ) and A6: (x = ( f . 1 ) & y = ( f . ( len f ) )) and A7: (for i being (Element of ( NAT )) holds ((i in ( dom f ) & ( i + 1 ) in ( dom f )) implies [ ( f . i ),( f . ( i + 1 ) ) ] in R)) by A4,REWRITE1:11;
take f;
( ( 0 ) + 1 ) <= ( len f ) by A5,NAT_1:13;
hence ((1 <= ( len f ) & x = ( f . 1 )) & y = ( f . ( len f ) )) by A6;
let i being (Element of ( NAT ));
assume (1 <= i & i < ( len f ));
then (i in ( dom f ) & ( i + 1 ) in ( dom f )) by CKB1:1;
hence thesis by A7;
end;

A8: (R reduces x,y implies [ x,y ] in ( "\/" X ))
proof
assume R reduces x,y;
then x,y are_convertible_wrt R by REWRITE1:25;
then [ x9,y9 ] in ( EqCl R ) by MSUALG_6:41;
hence thesis by CKB11:1;
end;
thus ((ex f being FinSequence st (((1 <= ( len f ) & x = ( f . 1 )) & y = ( f . ( len f ) )) & (for i being (Element of ( NAT )) holds ((1 <= i & i < ( len f )) implies [ ( f . i ),( f . ( i + 1 ) ) ] in ( union X ))))) implies [ x,y ] in ( "\/" X ))
proof
given f being FinSequence such that
A9: 1 <= ( len f )
and
A10: (x = ( f . 1 ) & y = ( f . ( len f ) ))
and
A11: (for i being (Element of ( NAT )) holds ((1 <= i & i < ( len f )) implies [ ( f . i ),( f . ( i + 1 ) ) ] in ( union X )));

A12:now
let i being (Element of ( NAT ));
assume (i in ( dom f ) & ( i + 1 ) in ( dom f ));
then (1 <= i & i < ( len f )) by CKB1:1;
hence [ ( f . i ),( f . ( i + 1 ) ) ] in ( union X ) by A11;
end;
( ( 0 ) + 1 ) <= ( len f ) by A9;
then ( len f ) > ( 0 ) by NAT_1:13;
hence thesis by A8,A10,A12,REWRITE1:11;
end;

end;
