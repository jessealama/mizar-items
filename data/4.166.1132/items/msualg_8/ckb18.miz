environ
vocabularies XBOOLE_0,PBOOLE,SUBSET_1,NUMBERS,FINSEQ_1,STRUCT_0,MSUALG_1,RELAT_1,XXREAL_0,ARYTM_3,FUNCT_1,MSUALG_5,EQREL_1,TARSKI,LATTICES,XXREAL_2,REWRITE1,LATTICE3,SETFAM_1,ZFMISC_1,CARD_1,MSUALG_4,CLOSURE2,NAT_1,MARGREL1,PARTFUN1,FUNCT_4,FINSET_1,CARD_3,MSUALG_6,MSUALG_7,MSUALG_8;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,RELSET_1,DOMAIN_1,NUMBERS,STRUCT_0,NAT_1,BINOP_1,FUNCT_1,PARTFUN1,FUNCT_2,FINSET_1,FINSEQ_1,CARD_3,REWRITE1,EQREL_1,LATTICES,LATTICE3,PBOOLE,MSSUBFAM,MSUALG_1,MSUALG_4,MSUALG_5,CLOSURE2,MSUALG_6,MSUALG_7,XXREAL_0,CKB15,CKB16;
definitions TARSKI,XBOOLE_0,EQREL_1,CKB15,CKB16;
theorems XBOOLE_0,TARSKI,PBOOLE,NAT_LAT,MSUALG_4,MSUALG_5,MSUALG_7,CLOSURE2,SETFAM_1,LATTICES,LATTICE3,MSSUBFAM,ZFMISC_1,FINSEQ_1,SUBSET_1,REWRITE1,RELAT_1,MSUALG_6,FUNCT_2,NAT_1,EQREL_1,VECTSP_8,CARD_3,XBOOLE_1,PARTFUN1,CKB1,CKB3,CKB5,CKB6,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes FINSEQ_1,PARTFUN1,CLASSES1,CKB2;
registrations SUBSET_1,RELSET_1,PARTFUN1,FINSET_1,MEMBERED,EQREL_1,PBOOLE,STRUCT_0,LATTICES,MSUALG_1,MSUALG_3,MSUALG_5,CLOSURE2,MSUALG_6,MSUALG_7,FUNCT_1,CKB4,CKB8;
constructors SETFAM_1,BINOP_1,XXREAL_0,NAT_1,MEMBERED,REALSET1,REWRITE1,MSSUBFAM,LATTICE3,MSUALG_5,CLOSURE2,MSUALG_6,MSUALG_7,RELSET_1,CKB15,CKB16;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve S for non void non empty ManySortedSign;
reserve A for  non-empty MSAlgebra over S;
theorem
(for X being (Subset of ( EqRelLatt (the Sorts of A) )) holds ( CongrCl ( "\/" (X,( EqRelLatt (the Sorts of A) )) ) ) = ( CongrCl X ))
proof
let X being (Subset of ( EqRelLatt (the Sorts of A) ));
set D1 = { x where x is (Element of ( EqRelLatt (the Sorts of A) )): (x is (MSCongruence of A) & ( "\/" (X,( EqRelLatt (the Sorts of A) )) ) [= x) };
set D2 = { x where x is (Element of ( EqRelLatt (the Sorts of A) )): (x is (MSCongruence of A) & X is_less_than x) };
A1: D1 c= D2
proof
let x1 being set;
assume x1 in D1;
then consider x being (Element of ( EqRelLatt (the Sorts of A) )) such that A2: (x1 = x & x is (MSCongruence of A)) and A3: ( "\/" (X,( EqRelLatt (the Sorts of A) )) ) [= x;
now
let q being (Element of ( EqRelLatt (the Sorts of A) ));
A4: X is_less_than ( "\/" (X,( EqRelLatt (the Sorts of A) )) ) by LATTICE3:def 21;
assume q in X;
then q [= ( "\/" (X,( EqRelLatt (the Sorts of A) )) ) by A4,LATTICE3:def 17;
hence q [= x by A3,LATTICES:7;
end;
then X is_less_than x by LATTICE3:def 17;
hence thesis by A2;
end;
D2 c= D1
proof
let x1 being set;
assume x1 in D2;
then consider x being (Element of ( EqRelLatt (the Sorts of A) )) such that A5: (x1 = x & x is (MSCongruence of A)) and A6: X is_less_than x;
( "\/" (X,( EqRelLatt (the Sorts of A) )) ) [= x by A6,LATTICE3:def 21;
hence thesis by A5;
end;
hence thesis by A1,XBOOLE_0:def 10;
end;
