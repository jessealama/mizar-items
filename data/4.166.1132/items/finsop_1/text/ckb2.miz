environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,FINSEQ_1,FUNCT_1,BINOP_1,FUNCT_2,RELAT_1,FINSEQ_2,SETWISEO,XXREAL_0,CARD_1,ARYTM_3,FUNCOP_1,TARSKI,FUNCT_4,FINSUB_1,ORDINAL4,NAT_1,ARYTM_1,PARTFUN1,FINSOP_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,BINOP_1,PARTFUN1,FINSEQ_2,FINSEQ_1,FINSEQ_4,RELAT_1,RELSET_1,FUNCT_1,FINSUB_1,SETWISEO,FUNCT_2,NAT_1,FUNCOP_1,FUNCT_4,XXREAL_0,CKB1;
definitions FUNCT_1,TARSKI,XBOOLE_0;
theorems BINOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FUNCT_1,FUNCT_2,NAT_1,SETWISEO,TARSKI,RELAT_1,FUNCOP_1,FUNCT_4,FINSUB_1,RELSET_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,XREAL_1,XXREAL_0,ORDINAL1,CARD_1;
schemes FINSEQ_1,FINSEQ_2,NAT_1,FUNCT_2;
registrations XBOOLE_0,FUNCT_1,ORDINAL1,RELSET_1,FUNCT_2,XXREAL_0,XREAL_0,FINSEQ_1,CARD_1,FINSEQ_2;
constructors BINOP_1,PARTFUN1,FUNCOP_1,FUNCT_4,SETWISEO,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,FINSEQ_4,RELSET_1,CKB1;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve D for non empty set;
reserve d for (Element of D);
reserve d1 for (Element of D);
reserve d2 for (Element of D);
reserve F for (FinSequence of D);
reserve f for (Function of ( NAT ),D);
reserve f1 for (Function of ( NAT ),D);
reserve f2 for (Function of ( NAT ),D);
reserve g for (BinOp of D);
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
definition
let D;
let F;
let g;
assume A1: (g is  having_a_unity or ( len F ) >= 1);
func g "**" F -> (Element of D)
means
:Def1: it = ( the_unity_wrt g ) if (g is  having_a_unity & ( len F ) = ( 0 )) otherwise (ex f st ((( f . 1 ) = ( F . 1 ) & (for n holds ((( 0 ) <> n & n < ( len F )) implies ( f . ( n + 1 ) ) = ( g . (( f . n ),( F . ( n + 1 ) )) )))) & it = ( f . ( len F ) )));
existence
proof
now
per cases ;
suppose ( len F ) = ( 0 );

hence thesis by A1;
end;
suppose A2: ( len F ) <> ( 0 );

defpred P[ (Element of ( NAT )) ]
 means
(for F holds ((( len F ) = $1 & ( len F ) <> ( 0 )) implies (ex d st (ex f st ((( f . 1 ) = ( F . 1 ) & (for n holds ((( 0 ) <> n & n < ( len F )) implies ( f . ( n + 1 ) ) = ( g . (( f . n ),( F . ( n + 1 ) )) )))) & d = ( f . ( len F ) ))))));
A3: (for k holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k;
assume A4: P[ k ];
let F;
assume that
A5: ( len F ) = ( k + 1 )
and
( len F ) <> ( 0 );
reconsider G = ( F | ( Seg k ) ) as (FinSequence of D) by FINSEQ_1:18;
A6: ( len G ) = k by A5,FINSEQ_3:53;
now
per cases ;
suppose A7: ( len G ) = ( 0 );

set f = ( ( NAT ) --> ( F . 1 ) );
A8: ( rng f ) c= D
proof
let x;
assume x in ( rng f );
then (ex y st (y in ( dom f ) & ( f . y ) = x)) by FUNCT_1:def 3;
then A9: x = ( F . 1 ) by FUNCOP_1:7;
1 in ( dom F ) by A5,A6,A7,FINSEQ_3:25;
then A10: x in ( rng F ) by A9,FUNCT_1:def 3;
( rng F ) c= D by FINSEQ_1:def 4;
hence thesis by A10;
end;
( dom f ) = ( NAT ) by FUNCOP_1:13;
then reconsider f as (Function of ( NAT ),D) by A8,RELSET_1:4;
take d = ( f . 1 );
take f;
thus ( f . 1 ) = ( F . 1 ) by FUNCOP_1:7;
thus (for n holds ((( 0 ) <> n & n < ( len F )) implies ( f . ( n + 1 ) ) = ( g . (( f . n ),( F . ( n + 1 ) )) ))) by A5,A6,A7,NAT_1:14;
thus d = ( f . ( len F ) ) by A5,A6,A7;
end;
suppose A11: ( len G ) <> ( 0 );

reconsider j = ( len F ) as (Element of ( NAT ));
1 <= ( len F ) by A5,NAT_1:12;
then ( len F ) in ( dom F ) by FINSEQ_3:25;
then A12: ( F . ( len F ) ) in ( rng F ) by FUNCT_1:def 3;
( rng F ) c= D by FINSEQ_1:def 4;
then reconsider t = ( F . ( len F ) ) as (Element of D) by A12;
( len G ) >= 1 by A11,NAT_1:14;
then A13: 1 in ( dom G ) by FINSEQ_3:25;
consider d,f such that A14: ( f . 1 ) = ( G . 1 ) and A15: (for n holds ((( 0 ) <> n & n < ( len G )) implies ( f . ( n + 1 ) ) = ( g . (( f . n ),( G . ( n + 1 ) )) ))) and A16: d = ( f . ( len G ) ) by A4,A5,A11,FINSEQ_3:53;
deffunc F((Element of ( NAT ))) = ( f . $1 );
consider h being (Function of ( NAT ),D) such that A17: ( h . j ) = ( g . (d,t) ) and A18: (for n being (Element of ( NAT )) holds (n <> j implies ( h . n ) = F(n))) from FUNCT_2:sch 6;
take a = ( h . j );
take h;
1 <> j by A5,A11,FINSEQ_3:53;
hence ( h . 1 ) = ( G . 1 ) by A14,A18
.= ( F . 1 ) by A13,FUNCT_1:47;
thus (for n holds ((( 0 ) <> n & n < ( len F )) implies ( h . ( n + 1 ) ) = ( g . (( h . n ),( F . ( n + 1 ) )) )))
proof
let n;
assume that
A19: n <> ( 0 )
and
A20: n < ( len F );
now
per cases ;
suppose A21: ( n + 1 ) = ( len F );

( len G ) <> ( len F ) by A5,A6;
hence thesis by A5,A6,A16,A17,A18,A21;
end;
suppose A22: ( n + 1 ) <> ( len F );

( n + 1 ) <= ( len F ) by A20,NAT_1:13;
then A23: ( n + 1 ) < ( len F ) by A22,XXREAL_0:1;
then A24: n < ( len G ) by A5,A6,XREAL_1:6;
(1 <= ( n + 1 ) & ( n + 1 ) <= ( len G )) by A5,A6,A23,NAT_1:12,NAT_1:13;
then A25: ( n + 1 ) in ( dom G ) by FINSEQ_3:25;
( h . ( n + 1 ) ) = ( f . ( n + 1 ) ) by A18,A22
.= ( g . (( f . n ),( G . ( n + 1 ) )) ) by A15,A19,A24
.= ( g . (( f . n ),( F . ( n + 1 ) )) ) by A25,FUNCT_1:47
.= ( g . (( h . n ),( F . ( n + 1 ) )) ) by A18,A20;
hence thesis;
end;
end;
hence thesis;
end;

thus a = ( h . ( len F ) );
end;
end;
hence thesis;
end;
A26: P[ ( 0 ) ];
(for k holds P[ k ]) from NAT_1:sch 1(A26,A3);
hence thesis by A2;
end;
end;
hence thesis;
end;
uniqueness
proof
let d1;
let d2;
thus ((((g is  having_a_unity & ( len F ) = ( 0 )) & d1 = ( the_unity_wrt g )) & d2 = ( the_unity_wrt g )) implies d1 = d2);
assume A27: ((not g is  having_a_unity) or ( len F ) <> ( 0 ));
given f1 such that
A28: ( f1 . 1 ) = ( F . 1 )
and
A29: (for n holds ((( 0 ) <> n & n < ( len F )) implies ( f1 . ( n + 1 ) ) = ( g . (( f1 . n ),( F . ( n + 1 ) )) )))
and
A30: d1 = ( f1 . ( len F ) );

given f2 such that
A31: ( f2 . 1 ) = ( F . 1 )
and
A32: (for n holds ((( 0 ) <> n & n < ( len F )) implies ( f2 . ( n + 1 ) ) = ( g . (( f2 . n ),( F . ( n + 1 ) )) )))
and
A33: d2 = ( f2 . ( len F ) );

defpred P[ (Element of ( NAT )) ]
 means
(($1 <> ( 0 ) & $1 <= ( len F )) implies ( f1 . $1 ) = ( f2 . $1 ));
A34: (for n holds (P[ n ] implies P[ ( n + 1 ) ]))
proof
let n;
assume A35: ((n <> ( 0 ) & n <= ( len F )) implies ( f1 . n ) = ( f2 . n ));
assume that
( n + 1 ) <> ( 0 )
and
A36: ( n + 1 ) <= ( len F );
now
per cases ;
suppose n = ( 0 );

hence thesis by A28,A31;
end;
suppose A37: n <> ( 0 );

A38: n < ( len F ) by A36,NAT_1:13;
then ( f1 . ( n + 1 ) ) = ( g . (( f1 . n ),( F . ( n + 1 ) )) ) by A29,A37;
hence thesis by A32,A35,A37,A38;
end;
end;
hence thesis;
end;
A39: P[ ( 0 ) ];
(for n holds P[ n ]) from NAT_1:sch 1(A39,A34);
hence thesis by A1,A27,A30,A33;
end;
consistency;
end;
