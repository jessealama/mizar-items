environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,FINSEQ_1,FUNCT_1,BINOP_1,FUNCT_2,RELAT_1,FINSEQ_2,SETWISEO,XXREAL_0,CARD_1,ARYTM_3,FUNCOP_1,TARSKI,FUNCT_4,FINSUB_1,ORDINAL4,NAT_1,ARYTM_1,PARTFUN1,FINSOP_1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,BINOP_1,PARTFUN1,FINSEQ_2,FINSEQ_1,FINSEQ_4,RELAT_1,RELSET_1,FUNCT_1,FINSUB_1,SETWISEO,FUNCT_2,NAT_1,FUNCOP_1,FUNCT_4,XXREAL_0,CKB1,CKB2,CKB5,CKB6,CKB7;
definitions FUNCT_1,TARSKI,XBOOLE_0,CKB2;
theorems BINOP_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,FUNCT_1,FUNCT_2,NAT_1,SETWISEO,TARSKI,RELAT_1,FUNCOP_1,FUNCT_4,FINSUB_1,RELSET_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,XREAL_1,XXREAL_0,ORDINAL1,CARD_1,CKB2,CKB3,CKB4,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15;
schemes FINSEQ_1,FINSEQ_2,NAT_1,FUNCT_2;
registrations XBOOLE_0,FUNCT_1,ORDINAL1,RELSET_1,FUNCT_2,XXREAL_0,XREAL_0,FINSEQ_1,CARD_1,FINSEQ_2;
constructors BINOP_1,PARTFUN1,FUNCOP_1,FUNCT_4,SETWISEO,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,FINSEQ_4,RELSET_1,CKB1,CKB2,CKB5,CKB7;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve D for non  empty set;
reserve d for (Element of D);
reserve F for (FinSequence of D);
reserve G for (FinSequence of D);
reserve g for (BinOp of D);
theorem
Th6: ((g is  associative & (g is  having_a_unity or (( len F ) >= 1 & ( len G ) >= 1))) implies ( g "**" ( F ^ G ) ) = ( g . (( g "**" F ),( g "**" G )) ))
proof
defpred P[ (FinSequence of D) ]
 means
(for F holds (for g holds ((g is  associative & (g is  having_a_unity or (( len F ) >= 1 & ( len $1 ) >= 1))) implies ( g "**" ( F ^ $1 ) ) = ( g . (( g "**" F ),( g "**" $1 )) ))));
A1: (for G holds (for d holds (P[ G ] implies P[ ( G ^ <* d *> ) ])))
proof
let G;
let d;
assume A2: P[ G ];
let F;
let g;
assume that
A3: g is  associative
and
A4: (g is  having_a_unity or (( len F ) >= 1 & ( len ( G ^ <* d *> ) ) >= 1));
A5:now
A6: ( len ( F ^ G ) ) = ( ( len F ) + ( len G ) ) by FINSEQ_1:22;
assume (not g is  having_a_unity);
hence ( len ( F ^ G ) ) >= 1 by A4,A6,NAT_1:12;
end;
A7: ( g "**" ( F ^ ( G ^ <* d *> ) ) ) = ( g "**" ( ( F ^ G ) ^ <* d *> ) ) by FINSEQ_1:32
.= ( g . (( g "**" ( F ^ G ) ),d) ) by A5,CKB15:1;
now
per cases ;
suppose A8: ( len G ) <> ( 0 );

then ( len G ) >= 1 by NAT_1:14;
hence ( g "**" ( F ^ ( G ^ <* d *> ) ) ) = ( g . (( g . (( g "**" F ),( g "**" G )) ),d) ) by A2,A3,A4,A7
.= ( g . (( g "**" F ),( g . (( g "**" G ),d) )) ) by A3,BINOP_1:def 3
.= ( g . (( g "**" F ),( g "**" ( G ^ <* d *> ) )) ) by A8,CKB15:1,NAT_1:14;
end;
suppose ( len G ) = ( 0 );

then A9: G = ( {} );
hence ( g "**" ( F ^ ( G ^ <* d *> ) ) ) = ( g "**" ( F ^ <* d *> ) ) by FINSEQ_1:34
.= ( g . (( g "**" F ),d) ) by A4,CKB15:1
.= ( g . (( g "**" F ),( g "**" <* d *> )) ) by CKB12:1
.= ( g . (( g "**" F ),( g "**" ( G ^ <* d *> ) )) ) by A9,FINSEQ_1:34;
end;
end;
hence thesis;
end;
A10: P[ ( <*> D ) ]
proof
let F;
let g;
assume that
g is  associative
and
A11: (g is  having_a_unity or (( len F ) >= 1 & ( len ( <*> D ) ) >= 1));
thus ( g "**" ( F ^ ( <*> D ) ) ) = ( g "**" F ) by FINSEQ_1:34
.= ( g . (( g "**" F ),( the_unity_wrt g )) ) by A11,SETWISEO:15
.= ( g . (( g "**" F ),( g "**" ( <*> D ) )) ) by A11,CKB11:1;
end;
(for G holds P[ G ]) from FINSEQ_2:sch 2(A10,A1);
hence thesis;
end;
