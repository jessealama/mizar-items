environ
vocabularies XBOOLE_0,FUNCT_1,SUBSET_1,MCART_1,ZFMISC_1,TARSKI,PBOOLE,RELAT_1,FUNCT_2,FUNCOP_1,MEMBER_1,STRUCT_0,ALTCAT_1,RELAT_2,MSUALG_6,CAT_1,ALTCAT_2,FUNCT_3,MSUALG_3,ENS_1,WELLORD1,FUNCTOR0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,MCART_1,FUNCT_1,PBOOLE,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,FUNCT_3,FUNCT_4,STRUCT_0,MSUALG_3,ALTCAT_1,ALTCAT_2,CKB18,CKB21,CKB22,CKB23,CKB27,CKB28,CKB31,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
definitions TARSKI,ALTCAT_2,MSUALG_3,FUNCT_1,FUNCT_2,XBOOLE_0,PBOOLE,BINOP_1,CKB22,CKB23,CKB27,CKB28,CKB35,CKB36,CKB37,CKB38,CKB39;
theorems ALTCAT_2,FUNCT_4,FUNCOP_1,ZFMISC_1,ALTCAT_1,FUNCT_2,FUNCT_1,PBOOLE,FUNCT_3,RELAT_1,MCART_1,DOMAIN_1,MSUALG_3,ISOCAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB2,CKB3,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB30,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39;
schemes ALTCAT_2,CKB1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,PBOOLE,STRUCT_0,ALTCAT_1,ALTCAT_2,PARTFUN1,RELSET_1,CKB4,CKB5,CKB6,CKB9,CKB25,CKB29,CKB34;
constructors FUNCT_3,MSUALG_3,ALTCAT_2,RELSET_1,PBOOLE,REALSET1,CARD_3,PRALG_2,CKB18,CKB22,CKB23,CKB27,CKB31,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
requirements SUBSET,BOOLE;
begin
definition
let A being non empty AltGraph;
let B being non empty AltGraph;
let F being BimapStr over A,B;
redefine attr F is  reflexive
means
:Def11: (for o being (object of A) holds ( (the ObjectMap of F) . (o,o) ) = [ ( F . o ),( F . o ) ]);
compatibility
proof
hereby
assume F is  reflexive;
then A1: ( (the ObjectMap of F) .: ( id (the carrier of A) ) ) c= ( id (the carrier of B) ) by CKB38:def 1;
let o being (object of A);
[ o,o ] in ( id (the carrier of A) ) by RELAT_1:def 10;
then A2: ( (the ObjectMap of F) . (o,o) ) in ( (the ObjectMap of F) .: ( id (the carrier of A) ) ) by FUNCT_2:35;
consider p being set,p9 being set such that A3: ( (the ObjectMap of F) . (o,o) ) = [ p,p9 ] by RELAT_1:def 1;
( F . o ) = p by A3,MCART_1:7;
hence ( (the ObjectMap of F) . (o,o) ) = [ ( F . o ),( F . o ) ] by A1,A2,A3,RELAT_1:def 10;
end;
assume A4: (for o being (object of A) holds ( (the ObjectMap of F) . (o,o) ) = [ ( F . o ),( F . o ) ]);
let x being set;
assume x in ( (the ObjectMap of F) .: ( id (the carrier of A) ) );
then consider y being set such that A5: y in [: (the carrier of A),(the carrier of A) :] and A6: y in ( id (the carrier of A) ) and A7: x = ( (the ObjectMap of F) . y ) by FUNCT_2:64;
consider o being (Element of A),o9 being (Element of A) such that A8: y = [ o,o9 ] by A5,DOMAIN_1:1;
reconsider o as (object of A);
o = o9 by A6,A8,RELAT_1:def 10;
then x = [ ( F . o ),( F . o ) ] by A4,A7,A8;
hence thesis by RELAT_1:def 10;
end;
end;
