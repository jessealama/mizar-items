environ
vocabularies XBOOLE_0,FUNCT_1,SUBSET_1,MCART_1,ZFMISC_1,TARSKI,PBOOLE,RELAT_1,FUNCT_2,FUNCOP_1,MEMBER_1,STRUCT_0,ALTCAT_1,RELAT_2,MSUALG_6,CAT_1,ALTCAT_2,FUNCT_3,MSUALG_3,ENS_1,WELLORD1,FUNCTOR0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,MCART_1,FUNCT_1,PBOOLE,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,FUNCT_3,FUNCT_4,STRUCT_0,MSUALG_3,ALTCAT_1,ALTCAT_2,CKB18,CKB21,CKB22,CKB23,CKB27,CKB28,CKB31,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB42,CKB43,CKB44,CKB45,CKB48,CKB50,CKB51,CKB52,CKB53,CKB54,CKB59,CKB61,CKB64,CKB71,CKB72,CKB73,CKB74,CKB78,CKB79,CKB80;
definitions TARSKI,ALTCAT_2,MSUALG_3,FUNCT_1,FUNCT_2,XBOOLE_0,PBOOLE,BINOP_1,CKB22,CKB23,CKB27,CKB28,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB42,CKB44,CKB45,CKB48,CKB51,CKB53,CKB54,CKB59,CKB61,CKB64,CKB71,CKB72,CKB73,CKB74,CKB78,CKB79,CKB80;
theorems ALTCAT_2,FUNCT_4,FUNCOP_1,ZFMISC_1,ALTCAT_1,FUNCT_2,FUNCT_1,PBOOLE,FUNCT_3,RELAT_1,MCART_1,DOMAIN_1,MSUALG_3,ISOCAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB2,CKB3,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB30,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB44,CKB45,CKB48,CKB51,CKB53,CKB54,CKB55,CKB58,CKB59,CKB60,CKB61,CKB64,CKB65,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB78,CKB79,CKB80;
schemes ALTCAT_2,CKB1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,PBOOLE,STRUCT_0,ALTCAT_1,ALTCAT_2,PARTFUN1,RELSET_1,CKB4,CKB5,CKB6,CKB9,CKB25,CKB29,CKB34,CKB43,CKB46,CKB47,CKB49,CKB56,CKB57,CKB62,CKB63,CKB66,CKB67,CKB68,CKB69,CKB70,CKB77;
constructors FUNCT_3,MSUALG_3,ALTCAT_2,RELSET_1,PBOOLE,REALSET1,CARD_3,PRALG_2,CKB18,CKB22,CKB23,CKB27,CKB31,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB42,CKB43,CKB44,CKB45,CKB48,CKB50,CKB51,CKB52,CKB53,CKB54,CKB64,CKB71,CKB72,CKB78,CKB79,CKB80;
requirements SUBSET,BOOLE;
begin
definition
let A being AltCatStr;
let B being (SubCatStr of A);
func incl B ->  strict FunctorStr over B,A
means
:Def29: ((the ObjectMap of it) = ( id [: (the carrier of B),(the carrier of B) :] ) & (the MorphMap of it) = ( id (the Arrows of B) ));
existence
proof
(the carrier of B) c= (the carrier of A) by ALTCAT_2:def 11;
then reconsider CC = [: (the carrier of B),(the carrier of B) :] as (Subset of [: (the carrier of A),(the carrier of A) :]) by ZFMISC_1:96;
set OM = ( id [: (the carrier of B),(the carrier of B) :] );
OM = ( incl CC );
then reconsider OM as (bifunction of (the carrier of B),(the carrier of A));
set MM = ( id (the Arrows of B) );
MM is (MSUnTrans of OM,(the Arrows of B),(the Arrows of A))
proof
per cases ;
case [: (the carrier of A),(the carrier of A) :] <> ( {} );
then reconsider I29 = [: (the carrier of A),(the carrier of A) :] as non empty set;
reconsider B9 = (the Arrows of A) as (ManySortedSet of I29);
reconsider f9 = OM as (Function of [: (the carrier of B),(the carrier of B) :],I29);
take I29;
take B9;
take f9;
thus (OM = f9 & (the Arrows of A) = B9);
thus MM is (ManySortedFunction of (the Arrows of B),( B9 * f9 ))
proof
let i being set;
assume A1: i in [: (the carrier of B),(the carrier of B) :];
then A2: ( MM . i ) is (Function of ( (the Arrows of B) . i ),( (the Arrows of B) . i )) by PBOOLE:def 15;
A3: (the Arrows of B) cc= (the Arrows of A) by ALTCAT_2:def 11;
( ( B9 * f9 ) . i ) = ( B9 . ( f9 . i ) ) by A1,FUNCT_2:15
.= ( (the Arrows of A) . i ) by A1,FUNCT_1:18;
then ( (the Arrows of B) . i ) c= ( ( B9 * f9 ) . i ) by A1,A3,ALTCAT_2:def 2;
hence thesis by A2,FUNCT_2:7;
end;

end;
case [: (the carrier of A),(the carrier of A) :] = ( {} );
then CC = ( {} );
hence thesis by PBOOLE:122;
end;
end;
then reconsider MM as (MSUnTrans of OM,(the Arrows of B),(the Arrows of A));
take FunctorStr (# OM,MM #);
thus thesis;
end;
correctness;
end;
