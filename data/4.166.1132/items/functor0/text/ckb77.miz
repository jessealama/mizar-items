environ
vocabularies XBOOLE_0,FUNCT_1,SUBSET_1,MCART_1,ZFMISC_1,TARSKI,PBOOLE,RELAT_1,FUNCT_2,FUNCOP_1,MEMBER_1,STRUCT_0,ALTCAT_1,RELAT_2,MSUALG_6,CAT_1,ALTCAT_2,FUNCT_3,MSUALG_3,ENS_1,WELLORD1,FUNCTOR0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,MCART_1,FUNCT_1,PBOOLE,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,FUNCT_3,FUNCT_4,STRUCT_0,MSUALG_3,ALTCAT_1,ALTCAT_2,CKB18,CKB21,CKB22,CKB23,CKB27,CKB28,CKB31,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB42,CKB43,CKB44,CKB45,CKB48,CKB50,CKB51,CKB52,CKB53,CKB54,CKB59,CKB61,CKB64,CKB71,CKB72,CKB73,CKB74;
definitions TARSKI,ALTCAT_2,MSUALG_3,FUNCT_1,FUNCT_2,XBOOLE_0,PBOOLE,BINOP_1,CKB22,CKB23,CKB27,CKB28,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB42,CKB44,CKB45,CKB48,CKB51,CKB53,CKB54,CKB59,CKB61,CKB64,CKB71,CKB72,CKB73,CKB74;
theorems ALTCAT_2,FUNCT_4,FUNCOP_1,ZFMISC_1,ALTCAT_1,FUNCT_2,FUNCT_1,PBOOLE,FUNCT_3,RELAT_1,MCART_1,DOMAIN_1,MSUALG_3,ISOCAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB2,CKB3,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB30,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB44,CKB45,CKB48,CKB51,CKB53,CKB54,CKB55,CKB58,CKB59,CKB60,CKB61,CKB64,CKB65,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76;
schemes ALTCAT_2,CKB1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,PBOOLE,STRUCT_0,ALTCAT_1,ALTCAT_2,PARTFUN1,RELSET_1,CKB4,CKB5,CKB6,CKB9,CKB25,CKB29,CKB34,CKB43,CKB46,CKB47,CKB49,CKB56,CKB57,CKB62,CKB63,CKB66,CKB67,CKB68,CKB69,CKB70;
constructors FUNCT_3,MSUALG_3,ALTCAT_2,RELSET_1,PBOOLE,REALSET1,CARD_3,PRALG_2,CKB18,CKB22,CKB23,CKB27,CKB31,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB42,CKB43,CKB44,CKB45,CKB48,CKB50,CKB51,CKB52,CKB53,CKB54,CKB64,CKB71,CKB72;
requirements SUBSET,BOOLE;
begin
registration
let C1 being non  empty  transitive AltCatStr;
let C2 being  with_units non  empty AltCatStr;
let o being (object of C2);
cluster ( C1 --> ( idm o ) ) ->  comp-preserving  comp-reversing;
coherence
proof
set F = ( C1 --> ( idm o ) );
reconsider G = F as  Covariant  feasible FunctorStr over C1,C2;
A1: <^ o,o ^> <> ( {} ) by ALTCAT_2:def 7;
G is  comp-preserving
proof
let o1 being (object of C1);
let o2 being (object of C1);
let o3 being (object of C1);
assume that
A2: <^ o1,o2 ^> <> ( {} )
and
A3: <^ o2,o3 ^> <> ( {} );
A4: <^ o1,o3 ^> <> ( {} ) by A2,A3,ALTCAT_1:def 2;
let f being (Morphism of o1,o2);
let g being (Morphism of o2,o3);
A5: ( G . g ) = ( idm o ) by A3,CKB75:1;
A6: ( G . f ) = ( idm o ) by A2,CKB75:1;
A7: ( G . o1 ) = o by A1,CKB55:1;
A8: ( G . o2 ) = o by A1,CKB55:1;
A9: ( G . o3 ) = o by A1,CKB55:1;
thus ( G . ( g * f ) ) = ( idm o ) by A4,CKB75:1
.= ( ( G . g ) * ( G . f ) ) by A1,A5,A6,A7,A8,A9,ALTCAT_1:20;
end;
hence F is  comp-preserving;
let o1 being (object of C1);
let o2 being (object of C1);
let o3 being (object of C1);
assume that
A10: <^ o1,o2 ^> <> ( {} )
and
A11: <^ o2,o3 ^> <> ( {} );
A12: <^ o1,o3 ^> <> ( {} ) by A10,A11,ALTCAT_1:def 2;
let f being (Morphism of o1,o2);
let g being (Morphism of o2,o3);
A13: ( F . g ) = ( idm o ) by A11,CKB76:1;
A14: ( F . f ) = ( idm o ) by A10,CKB76:1;
A15: ( F . o1 ) = o by A1,CKB55:1;
A16: ( F . o2 ) = o by A1,CKB55:1;
A17: ( F . o3 ) = o by A1,CKB55:1;
thus ( F . ( g * f ) ) = ( idm o ) by A12,CKB76:1
.= ( ( F . f ) * ( F . g ) ) by A1,A13,A14,A15,A16,A17,ALTCAT_1:20;
end;
end;
