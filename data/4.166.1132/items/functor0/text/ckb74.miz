environ
vocabularies XBOOLE_0,FUNCT_1,SUBSET_1,MCART_1,ZFMISC_1,TARSKI,PBOOLE,RELAT_1,FUNCT_2,FUNCOP_1,MEMBER_1,STRUCT_0,ALTCAT_1,RELAT_2,MSUALG_6,CAT_1,ALTCAT_2,FUNCT_3,MSUALG_3,ENS_1,WELLORD1,FUNCTOR0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,MCART_1,FUNCT_1,PBOOLE,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,FUNCT_3,FUNCT_4,STRUCT_0,MSUALG_3,ALTCAT_1,ALTCAT_2,CKB18,CKB21,CKB22,CKB23,CKB27,CKB28,CKB31,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB42,CKB43,CKB44,CKB45,CKB48,CKB50,CKB51,CKB52,CKB53,CKB54,CKB59,CKB61,CKB64,CKB71,CKB72,CKB73;
definitions TARSKI,ALTCAT_2,MSUALG_3,FUNCT_1,FUNCT_2,XBOOLE_0,PBOOLE,BINOP_1,CKB22,CKB23,CKB27,CKB28,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB42,CKB44,CKB45,CKB48,CKB51,CKB53,CKB54,CKB59,CKB61,CKB64,CKB71,CKB72,CKB73;
theorems ALTCAT_2,FUNCT_4,FUNCOP_1,ZFMISC_1,ALTCAT_1,FUNCT_2,FUNCT_1,PBOOLE,FUNCT_3,RELAT_1,MCART_1,DOMAIN_1,MSUALG_3,ISOCAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB2,CKB3,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB30,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB44,CKB45,CKB48,CKB51,CKB53,CKB54,CKB55,CKB58,CKB59,CKB60,CKB61,CKB64,CKB65,CKB71,CKB72,CKB73;
schemes ALTCAT_2,CKB1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,PBOOLE,STRUCT_0,ALTCAT_1,ALTCAT_2,PARTFUN1,RELSET_1,CKB4,CKB5,CKB6,CKB9,CKB25,CKB29,CKB34,CKB43,CKB46,CKB47,CKB49,CKB56,CKB57,CKB62,CKB63,CKB66,CKB67,CKB68,CKB69,CKB70;
constructors FUNCT_3,MSUALG_3,ALTCAT_2,RELSET_1,PBOOLE,REALSET1,CARD_3,PRALG_2,CKB18,CKB22,CKB23,CKB27,CKB31,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB42,CKB43,CKB44,CKB45,CKB48,CKB50,CKB51,CKB52,CKB53,CKB54,CKB64,CKB71,CKB72;
requirements SUBSET,BOOLE;
begin
definition
let C1 being non empty  transitive AltCatStr;
let C2 being non empty  reflexive AltCatStr;
let F being  Contravariant  feasible FunctorStr over C1,C2;
redefine attr F is  comp-reversing
means
(for o1,o2,o3 being (object of C1) holds ((<^ o1,o2 ^> <> ( {} ) & <^ o2,o3 ^> <> ( {} )) implies (for f being (Morphism of o1,o2) holds (for g being (Morphism of o2,o3) holds ( F . ( g * f ) ) = ( ( F . f ) * ( F . g ) )))));
compatibility
proof
hereby
assume A1: F is  comp-reversing;
let o1 being (object of C1),o2 being (object of C1),o3 being (object of C1);
assume that
A2: <^ o1,o2 ^> <> ( {} )
and
A3: <^ o2,o3 ^> <> ( {} );
let f being (Morphism of o1,o2);
let g being (Morphism of o2,o3);
consider f9 being (Morphism of ( F . o2 ),( F . o1 )),g9 being (Morphism of ( F . o3 ),( F . o2 )) such that A4: f9 = ( ( Morph-Map (F,o1,o2) ) . f ) and A5: g9 = ( ( Morph-Map (F,o2,o3) ) . g ) and A6: ( ( Morph-Map (F,o1,o3) ) . ( g * f ) ) = ( f9 * g9 ) by A1,A2,A3,CKB72:def 1;
A7: <^ ( F . o2 ),( F . o1 ) ^> <> ( {} ) by A2,CKB61:def 1;
A8: <^ ( F . o3 ),( F . o2 ) ^> <> ( {} ) by A3,CKB61:def 1;
A9: f9 = ( F . f ) by A2,A4,A7,CKB53:def 1;
A10: g9 = ( F . g ) by A3,A5,A8,CKB53:def 1;
A11: <^ o1,o3 ^> <> ( {} ) by A2,A3,ALTCAT_1:def 2;
then <^ ( F . o3 ),( F . o1 ) ^> <> ( {} ) by CKB61:def 1;
hence ( F . ( g * f ) ) = ( ( F . f ) * ( F . g ) ) by A6,A9,A10,A11,CKB53:def 1;
end;
assume A12: (for o1,o2,o3 being (object of C1) holds ((<^ o1,o2 ^> <> ( {} ) & <^ o2,o3 ^> <> ( {} )) implies (for f being (Morphism of o1,o2) holds (for g being (Morphism of o2,o3) holds ( F . ( g * f ) ) = ( ( F . f ) * ( F . g ) )))));
let o1 being (object of C1),o2 being (object of C1),o3 being (object of C1);
assume that
A13: <^ o1,o2 ^> <> ( {} )
and
A14: <^ o2,o3 ^> <> ( {} );
let f being (Morphism of o1,o2);
let g being (Morphism of o2,o3);
A15: <^ ( F . o2 ),( F . o1 ) ^> <> ( {} ) by A13,CKB61:def 1;
then reconsider f9 = ( ( Morph-Map (F,o1,o2) ) . f ) as (Morphism of ( F . o2 ),( F . o1 )) by A13,FUNCT_2:5;
A16: <^ ( F . o3 ),( F . o2 ) ^> <> ( {} ) by A14,CKB61:def 1;
then reconsider g9 = ( ( Morph-Map (F,o2,o3) ) . g ) as (Morphism of ( F . o3 ),( F . o2 )) by A14,FUNCT_2:5;
take f9;
take g9;
thus (f9 = ( ( Morph-Map (F,o1,o2) ) . f ) & g9 = ( ( Morph-Map (F,o2,o3) ) . g ));
A17: f9 = ( F . f ) by A13,A15,CKB53:def 1;
A18: g9 = ( F . g ) by A14,A16,CKB53:def 1;
A19: <^ o1,o3 ^> <> ( {} ) by A13,A14,ALTCAT_1:def 2;
then <^ ( F . o3 ),( F . o1 ) ^> <> ( {} ) by CKB61:def 1;
hence ( ( Morph-Map (F,o1,o3) ) . ( g * f ) ) = ( F . ( g * f ) ) by A19,CKB53:def 1
.= ( f9 * g9 ) by A12,A13,A14,A17,A18;
end;
end;
