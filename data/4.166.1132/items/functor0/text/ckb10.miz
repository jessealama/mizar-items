environ
vocabularies XBOOLE_0,FUNCT_1,SUBSET_1,MCART_1,ZFMISC_1,TARSKI,PBOOLE,RELAT_1,FUNCT_2,FUNCOP_1,MEMBER_1,STRUCT_0,ALTCAT_1,RELAT_2,MSUALG_6,CAT_1,ALTCAT_2,FUNCT_3,MSUALG_3,ENS_1,WELLORD1,FUNCTOR0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,MCART_1,FUNCT_1,PBOOLE,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,FUNCT_3,FUNCT_4,STRUCT_0,MSUALG_3,ALTCAT_1,ALTCAT_2;
definitions TARSKI,ALTCAT_2,MSUALG_3,FUNCT_1,FUNCT_2,XBOOLE_0,PBOOLE,BINOP_1;
theorems ALTCAT_2,FUNCT_4,FUNCOP_1,ZFMISC_1,ALTCAT_1,FUNCT_2,FUNCT_1,PBOOLE,FUNCT_3,RELAT_1,MCART_1,DOMAIN_1,MSUALG_3,ISOCAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB2,CKB3,CKB7,CKB8;
schemes ALTCAT_2,CKB1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,PBOOLE,STRUCT_0,ALTCAT_1,ALTCAT_2,PARTFUN1,RELSET_1,CKB4,CKB5,CKB6,CKB9;
constructors FUNCT_3,MSUALG_3,ALTCAT_2,RELSET_1,PBOOLE,REALSET1,CARD_3,PRALG_2;
requirements SUBSET,BOOLE;
begin
theorem
Th6: (for A,B being set holds (for a being set holds ( ~ ( [: A,B :] --> a ) ) = ( [: B,A :] --> a )))
proof
let A being set,B being set;
let a being set;
A1:now
let x being set;
hereby
assume x in ( dom ( [: B,A :] --> a ) );
then consider z being set,y being set such that A2: z in B and A3: y in A and A4: x = [ z,y ] by ZFMISC_1:def 2;
take y;
take z;
thus x = [ z,y ] by A4;
[ y,z ] in [: A,B :] by A2,A3,ZFMISC_1:87;
hence [ y,z ] in ( dom ( [: A,B :] --> a ) ) by FUNCOP_1:13;
end;
given y being set,z being set such that
A5: x = [ z,y ]
and
A6: [ y,z ] in ( dom ( [: A,B :] --> a ) );

A7: y in A by A6,ZFMISC_1:87;
z in B by A6,ZFMISC_1:87;
then x in [: B,A :] by A5,A7,ZFMISC_1:87;
hence x in ( dom ( [: B,A :] --> a ) ) by FUNCOP_1:13;
end;
now
let y being set,z being set;
assume A8: [ y,z ] in ( dom ( [: A,B :] --> a ) );
then A9: y in A by ZFMISC_1:87;
z in B by A8,ZFMISC_1:87;
then [ z,y ] in [: B,A :] by A9,ZFMISC_1:87;
hence ( ( [: B,A :] --> a ) . (z,y) ) = a by FUNCOP_1:7
.= ( ( [: A,B :] --> a ) . (y,z) ) by A8,FUNCOP_1:7;
end;
hence thesis by A1,FUNCT_4:def 2;
end;
