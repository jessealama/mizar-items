environ
vocabularies XBOOLE_0,FUNCT_1,SUBSET_1,MCART_1,ZFMISC_1,TARSKI,PBOOLE,RELAT_1,FUNCT_2,FUNCOP_1,MEMBER_1,STRUCT_0,ALTCAT_1,RELAT_2,MSUALG_6,CAT_1,ALTCAT_2,FUNCT_3,MSUALG_3,ENS_1,WELLORD1,FUNCTOR0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,MCART_1,FUNCT_1,PBOOLE,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,FUNCT_3,FUNCT_4,STRUCT_0,MSUALG_3,ALTCAT_1,ALTCAT_2,CKB18,CKB21,CKB22,CKB23,CKB27,CKB28,CKB31,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB42,CKB43,CKB44,CKB45,CKB48,CKB50,CKB51,CKB52,CKB53,CKB54,CKB59,CKB61,CKB64,CKB71,CKB72,CKB73,CKB74,CKB78,CKB79,CKB80,CKB81,CKB82,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB100;
definitions TARSKI,ALTCAT_2,MSUALG_3,FUNCT_1,FUNCT_2,XBOOLE_0,PBOOLE,BINOP_1,CKB22,CKB23,CKB27,CKB28,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB42,CKB44,CKB45,CKB48,CKB51,CKB53,CKB54,CKB59,CKB61,CKB64,CKB71,CKB72,CKB73,CKB74,CKB78,CKB79,CKB80,CKB81,CKB82,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92;
theorems ALTCAT_2,FUNCT_4,FUNCOP_1,ZFMISC_1,ALTCAT_1,FUNCT_2,FUNCT_1,PBOOLE,FUNCT_3,RELAT_1,MCART_1,DOMAIN_1,MSUALG_3,ISOCAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB2,CKB3,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB30,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB44,CKB45,CKB48,CKB51,CKB53,CKB54,CKB55,CKB58,CKB59,CKB60,CKB61,CKB64,CKB65,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB78,CKB79,CKB80,CKB81,CKB82,CKB84,CKB85,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92,CKB94,CKB95,CKB98;
schemes ALTCAT_2,CKB1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,PBOOLE,STRUCT_0,ALTCAT_1,ALTCAT_2,PARTFUN1,RELSET_1,CKB4,CKB5,CKB6,CKB9,CKB25,CKB29,CKB34,CKB43,CKB46,CKB47,CKB49,CKB56,CKB57,CKB62,CKB63,CKB66,CKB67,CKB68,CKB69,CKB70,CKB77,CKB83,CKB86,CKB93,CKB96,CKB97,CKB99;
constructors FUNCT_3,MSUALG_3,ALTCAT_2,RELSET_1,PBOOLE,REALSET1,CARD_3,PRALG_2,CKB18,CKB22,CKB23,CKB27,CKB31,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB42,CKB43,CKB44,CKB45,CKB48,CKB50,CKB51,CKB52,CKB53,CKB54,CKB64,CKB71,CKB72,CKB78,CKB79,CKB80,CKB81,CKB82,CKB87,CKB88,CKB90,CKB91,CKB92,CKB100;
requirements SUBSET,BOOLE;
begin
registration
let A being AltGraph;
cluster ( id A ) ->  bijective;
coherence
proof
set CC = [: (the carrier of A),(the carrier of A) :];
A1: (the ObjectMap of ( id A )) = ( id CC ) by CKB82:def 1;
hence ( id A ) is  one-to-one by CKB36:def 1;
thus ( id A ) is  faithful
proof
per cases ;
suppose A2: (the carrier of A) <> ( {} );

let i being set;
let f being Function;
assume that
A3: i in ( dom (the MorphMap of ( id A )) )
and
A4: ( (the MorphMap of ( id A )) . i ) = f;
( dom (the MorphMap of ( id A )) ) = [: (the carrier of A),(the carrier of A) :] by PARTFUN1:def 2;
then consider o1 being (Element of A),o2 being (Element of A) such that A5: i = [ o1,o2 ] by A2,A3,DOMAIN_1:1;
reconsider o1,o2 as (object of A);
A6: [ o1,o2 ] in [: (the carrier of A),(the carrier of A) :] by A2,ZFMISC_1:87;
f = ( ( id (the Arrows of A) ) . (o1,o2) ) by A4,A5,CKB82:def 1
.= ( id ( (the Arrows of A) . [ o1,o2 ] ) ) by A6,MSUALG_3:def 1;
hence thesis;
end;
suppose A7: (the carrier of A) = ( {} );

let i being set;
let f being Function;
assume that
A8: i in ( dom (the MorphMap of ( id A )) )
and
( (the MorphMap of ( id A )) . i ) = f;
( dom (the MorphMap of ( id A )) ) = [: (the carrier of A),(the carrier of A) :] by PARTFUN1:def 2
.= ( {} ) by A7,ZFMISC_1:90;
hence thesis by A8;
end;
end;

thus ( id A ) is  full
proof
per cases ;
suppose A is non empty;

then reconsider A as non empty AltGraph;
( id A ) is  full
proof
reconsider f = (the MorphMap of ( id A )) as (ManySortedFunction of (the Arrows of A),( (the Arrows of A) * (the ObjectMap of ( id A )) )) by CKB28:def 1;
take f;
thus f = (the MorphMap of ( id A ));
let i being set;
assume A9: i in [: (the carrier of A),(the carrier of A) :];
then consider o1 being (Element of A),o2 being (Element of A) such that A10: i = [ o1,o2 ] by DOMAIN_1:1;
reconsider o1,o2 as (object of A);
A11: [ o1,o2 ] in [: (the carrier of A),(the carrier of A) :] by ZFMISC_1:87;
A12: ( dom (the ObjectMap of ( id A )) ) = CC by A1,RELAT_1:45;
( f . i ) = ( ( id (the Arrows of A) ) . (o1,o2) ) by A10,CKB82:def 1
.= ( id ( (the Arrows of A) . [ o1,o2 ] ) ) by A11,MSUALG_3:def 1;
hence ( rng ( f . i ) ) = ( (the Arrows of A) . [ o1,o2 ] ) by RELAT_1:45
.= ( (the Arrows of A) . ( (the ObjectMap of ( id A )) . i ) ) by A1,A9,A10,FUNCT_1:18
.= ( ( (the Arrows of A) * (the ObjectMap of ( id A )) ) . i ) by A9,A12,FUNCT_1:13;
end;
hence thesis;
end;
suppose A is  empty;

then A13: (the carrier of A) = ( {} );
(the ObjectMap of ( id A )) = ( id [: (the carrier of A),(the carrier of A) :] ) by CKB82:def 1;
then reconsider B = ( (the Arrows of A) * (the ObjectMap of ( id A )) ) as (ManySortedSet of [: (the carrier of A),(the carrier of A) :]) by CKB3:1;
reconsider f = (the MorphMap of ( id A )) as (ManySortedSet of [: (the carrier of A),(the carrier of A) :]);
f is (ManySortedFunction of (the Arrows of A),B)
proof
let i being set;
thus thesis by A13,ZFMISC_1:90;
end;
then reconsider f as (ManySortedFunction of (the Arrows of A),B);
take B;
take f;
thus (B = ( (the Arrows of A) * (the ObjectMap of ( id A )) ) & f = (the MorphMap of ( id A )));
let i being set;
thus thesis by A13,ZFMISC_1:90;
end;
end;

( rng ( id CC ) ) = CC by RELAT_1:45;
then (the ObjectMap of ( id A )) is  onto by A1,FUNCT_2:def 3;
hence ( id A ) is  onto by CKB37:def 1;
end;
end;
