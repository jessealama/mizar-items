environ
vocabularies XBOOLE_0,FUNCT_1,SUBSET_1,MCART_1,ZFMISC_1,TARSKI,PBOOLE,RELAT_1,FUNCT_2,FUNCOP_1,MEMBER_1,STRUCT_0,ALTCAT_1,RELAT_2,MSUALG_6,CAT_1,ALTCAT_2,FUNCT_3,MSUALG_3,ENS_1,WELLORD1,FUNCTOR0;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,MCART_1,FUNCT_1,PBOOLE,RELSET_1,PARTFUN1,FUNCT_2,BINOP_1,FUNCOP_1,FUNCT_3,FUNCT_4,STRUCT_0,MSUALG_3,ALTCAT_1,ALTCAT_2,CKB18,CKB21,CKB22,CKB23,CKB27,CKB28,CKB31,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB42,CKB43,CKB44,CKB45,CKB48,CKB50,CKB51,CKB52,CKB53;
definitions TARSKI,ALTCAT_2,MSUALG_3,FUNCT_1,FUNCT_2,XBOOLE_0,PBOOLE,BINOP_1,CKB22,CKB23,CKB27,CKB28,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB42,CKB44,CKB45,CKB48,CKB51,CKB53;
theorems ALTCAT_2,FUNCT_4,FUNCOP_1,ZFMISC_1,ALTCAT_1,FUNCT_2,FUNCT_1,PBOOLE,FUNCT_3,RELAT_1,MCART_1,DOMAIN_1,MSUALG_3,ISOCAT_1,RELSET_1,XBOOLE_0,XBOOLE_1,PARTFUN1,CKB2,CKB3,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB19,CKB20,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB30,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB44,CKB45,CKB48,CKB51,CKB53;
schemes ALTCAT_2,CKB1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,PBOOLE,STRUCT_0,ALTCAT_1,ALTCAT_2,PARTFUN1,RELSET_1,CKB4,CKB5,CKB6,CKB9,CKB25,CKB29,CKB34,CKB43,CKB46,CKB47,CKB49;
constructors FUNCT_3,MSUALG_3,ALTCAT_2,RELSET_1,PBOOLE,REALSET1,CARD_3,PRALG_2,CKB18,CKB22,CKB23,CKB27,CKB31,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB42,CKB43,CKB44,CKB45,CKB48,CKB50,CKB51,CKB52,CKB53;
requirements SUBSET,BOOLE;
begin
definition
let C1 being non empty AltGraph;
let C2 being non empty AltGraph;
let o being (object of C2);
let m being (Morphism of o,o);
assume that
A1: <^ o,o ^> <> ( {} );
func C1 --> m ->  strict FunctorStr over C1,C2
means
:Def18: ((the ObjectMap of it) = ( [: (the carrier of C1),(the carrier of C1) :] --> [ o,o ] ) & (the MorphMap of it) = { [ [ o1,o2 ],( <^ o1,o2 ^> --> m ) ] where o1 is (object of C1),o2 is (object of C1): (not contradiction) });
existence
proof
set I1 = [: (the carrier of C1),(the carrier of C1) :];
set I2 = [: (the carrier of C2),(the carrier of C2) :];
set A = (the Arrows of C1);
set B = (the Arrows of C2);
reconsider oo = [ o,o ] as (Element of I2) by ZFMISC_1:87;
( B . oo ) = ( B . (o,o) )
.= <^ o,o ^> by ALTCAT_1:def 1;
then reconsider m as (Element of ( B . oo ));
reconsider f = ( I1 --> oo ) as (Function of I1,I2);
reconsider f as (bifunction of (the carrier of C1),(the carrier of C2));
set M = { [ [ o1,o2 ],( <^ o1,o2 ^> --> m ) ] where o1 is (object of C1),o2 is (object of C1): (not contradiction) };
A2: M = { [ o9,( ( A . o9 ) --> m ) ] where o9 is (Element of I1): (not contradiction) }
proof
thus M c= { [ o9,( ( A . o9 ) --> m ) ] where o9 is (Element of I1): (not contradiction) }
proof
let x being set;
assume x in M;
then consider o3 being (object of C1),o4 being (object of C1) such that A3: x = [ [ o3,o4 ],( <^ o3,o4 ^> --> m ) ];
reconsider oo = [ o3,o4 ] as (Element of I1) by ZFMISC_1:87;
x = [ oo,( ( A . (o3,o4) ) --> m ) ] by A3,ALTCAT_1:def 1
.= [ oo,( ( A . oo ) --> m ) ];
hence thesis;
end;

let x being set;
assume x in { [ o9,( ( A . o9 ) --> m ) ] where o9 is (Element of I1): (not contradiction) };
then consider o9 being (Element of I1) such that A4: x = [ o9,( ( A . o9 ) --> m ) ];
reconsider o1 = ( o9 `1 ),o2 = ( o9 `2 ) as (Element of C1) by MCART_1:10;
reconsider o1,o2 as (object of C1);
o9 = [ o1,o2 ] by MCART_1:21;
then x = [ [ o1,o2 ],( ( A . (o1,o2) ) --> m ) ] by A4
.= [ [ o1,o2 ],( <^ o1,o2 ^> --> m ) ] by ALTCAT_1:def 1;
hence thesis;
end;
( B . (o,o) ) <> ( {} ) by A1,ALTCAT_1:def 1;
then reconsider M as (MSUnTrans of f,A,B) by A2,CKB32:1;
take FunctorStr (# f,M #);
thus thesis;
end;
uniqueness;
end;
