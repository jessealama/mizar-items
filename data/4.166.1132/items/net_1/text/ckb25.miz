environ
vocabularies RELAT_1,XBOOLE_0,TARSKI,ZFMISC_1,SUBSET_1,SETFAM_1,NET_1,STRUCT_0,PETRI;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,PARTIT_2,STRUCT_0,PETRI,CKB1,CKB3,CKB4,CKB11,CKB17,CKB18,CKB19,CKB20;
definitions XBOOLE_0,CKB1,CKB3,CKB4,CKB17,CKB18,CKB19,CKB20;
theorems TARSKI,ZFMISC_1,XBOOLE_0,XBOOLE_1,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24;
schemes XBOOLE_0,SUBSET_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,CKB2,CKB9,CKB10;
constructors TARSKI,SUBSET_1,RELAT_1,STRUCT_0,PETRI,PARTIT_2,CKB1,CKB3,CKB4,CKB17,CKB18,CKB19,CKB20;
requirements SUBSET,BOOLE;
begin
reserve x for set;
theorem
(for N being Pnet holds (for y being (Element of ( Elements N )) holds (y in (the carrier' of N) implies (x in ( Pre (N,y) ) iff  pre N,y,x))))
proof
let N being Pnet;
let y being (Element of ( Elements N ));
assume A1: y in (the carrier' of N);
A2: ( pre N,y,x implies x in ( Pre (N,y) ))
proof
assume  pre N,y,x;
then A3: [ x,y ] in ( Flow N ) by CKB17:def 1;
then x in (the carrier of N) by A1,CKB14:1;
then x in ( Elements N ) by XBOOLE_0:def 3;
hence thesis by A3,CKB19:def 1;
end;
(x in ( Pre (N,y) ) implies  pre N,y,x)
proof
assume x in ( Pre (N,y) );
then [ x,y ] in ( Flow N ) by CKB19:def 1;
hence thesis by A1,CKB17:def 1;
end;
hence thesis by A2;
end;
