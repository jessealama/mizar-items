environ
vocabularies RELAT_1,XBOOLE_0,TARSKI,ZFMISC_1,SUBSET_1,SETFAM_1,NET_1,STRUCT_0,PETRI;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,SETFAM_1,RELAT_1,PARTIT_2,STRUCT_0,PETRI,CKB1,CKB3,CKB4,CKB11,CKB17,CKB18,CKB19,CKB20,CKB27,CKB31,CKB35,CKB36,CKB37,CKB38,CKB39,CKB42,CKB43;
definitions XBOOLE_0,CKB1,CKB3,CKB4,CKB17,CKB18,CKB19,CKB20,CKB27,CKB31,CKB35,CKB36,CKB37,CKB38,CKB39,CKB42,CKB43;
theorems TARSKI,ZFMISC_1,XBOOLE_0,XBOOLE_1,CKB1,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45;
schemes XBOOLE_0,SUBSET_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,CKB2,CKB9,CKB10;
constructors TARSKI,SUBSET_1,RELAT_1,STRUCT_0,PETRI,PARTIT_2,CKB1,CKB3,CKB4,CKB17,CKB18,CKB19,CKB20,CKB27,CKB31,CKB35,CKB36,CKB37,CKB38,CKB39,CKB42,CKB43;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve N for PT_net_Str;
theorem
(for N being Pnet holds (for X being (Subset of ( Elements N )) holds (for x being (Element of ( Elements N )) holds (( Elements N ) <> ( {} ) implies (x in ( Input (N,X) ) iff ((x in X & x in (the carrier of N)) or (ex y being (Element of ( Elements N )) st ((y in X & y in (the carrier' of N)) &  pre N,y,x))))))))
proof
let N being Pnet;
let X being (Subset of ( Elements N ));
let x being (Element of ( Elements N ));
A1: (((x in X & x in (the carrier of N)) or (ex y being (Element of ( Elements N )) st ((y in X & y in (the carrier' of N)) &  pre N,y,x))) implies x in ( Input (N,X) ))
proof
A2: ((ex y being (Element of ( Elements N )) st ((y in X & y in (the carrier' of N)) &  pre N,y,x)) implies x in ( Input (N,X) ))
proof
given y being (Element of ( Elements N )) such that
A3: y in X
and
A4: y in (the carrier' of N)
and
A5:  pre N,y,x;

[ x,y ] in ( Flow N ) by A5,CKB17:def 1;
then x in ( Pre (N,y) ) by A4,CKB19:def 1;
then A6: x in ( enter (N,y) ) by A4,CKB27:def 1;
( enter (N,y) ) in ( Entr (N,X) ) by A3,CKB40:1;
hence thesis by A6,TARSKI:def 4;
end;
A7: ((x in X & x in (the carrier of N)) implies x in ( Input (N,X) ))
proof
assume that
A8: x in X
and
A9: x in (the carrier of N);
(( enter (N,x) ) = { x } & { x } c= ( Elements N )) by A9,CKB27:def 1,ZFMISC_1:31;
then A10: { x } in ( Entr (N,X) ) by A8,CKB38:def 1;
x in { x } by TARSKI:def 1;
hence thesis by A10,TARSKI:def 4;
end;
assume ((x in X & x in (the carrier of N)) or (ex y being (Element of ( Elements N )) st ((y in X & y in (the carrier' of N)) &  pre N,y,x)));
hence thesis by A7,A2;
end;
assume A11: ( Elements N ) <> ( {} );
(x in ( Input (N,X) ) implies ((x in X & x in (the carrier of N)) or (ex y being (Element of ( Elements N )) st ((y in X & y in (the carrier' of N)) &  pre N,y,x))))
proof
assume x in ( Input (N,X) );
then (ex y being set st (x in y & y in ( Entr (N,X) ))) by TARSKI:def 4;
then consider y being set such that A12: y in ( Entr (N,X) ) and A13: x in y;
consider z being (Element of ( Elements N )) such that A14: z in X and A15: y = ( enter (N,z) ) by A12,CKB38:def 1;
A16: (z in (the carrier' of N) implies y = ( Pre (N,z) )) by A15,CKB27:def 1;
A17: (z in (the carrier' of N) implies (ex y being (Element of ( Elements N )) st ((y in X & y in (the carrier' of N)) &  pre N,y,x)))
proof
assume A18: z in (the carrier' of N);
take z;
[ x,z ] in ( Flow N ) by A13,A16,A18,CKB19:def 1;
hence thesis by A14,A18,CKB17:def 1;
end;
A19: (z in (the carrier of N) or z in (the carrier' of N)) by A11,XBOOLE_0:def 3;
(z in (the carrier of N) implies y = { z }) by A15,CKB27:def 1;
hence thesis by A13,A14,A19,A17,TARSKI:def 1;
end;
hence thesis by A1;
end;
