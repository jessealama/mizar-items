environ
vocabularies XBOOLE_0,ALGSTR_0,CARD_1,SUPINF_2,VECTSP_1,SUBSET_1,RELAT_1,REAL_1,ALGSTR_1,ARYTM_1,ARYTM_3,STRUCT_0,RLVECT_1,BINOP_1,LATTICES,MESFUNC1,GROUP_1,ALGSTR_2;
notations NUMBERS,REAL_1,BINOP_2,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,VECTSP_1,ALGSTR_1,CKB7,CKB8,CKB10,CKB11,CKB17,CKB22,CKB24;
definitions CKB7,CKB8;
theorems VECTSP_1,ALGSTR_1,RLVECT_1,GROUP_1,STRUCT_0,ALGSTR_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB7,CKB8,CKB12,CKB13,CKB14,CKB15,CKB16,CKB18,CKB19,CKB20,CKB21,CKB23,CKB25,CKB26,CKB27;
registrations VECTSP_1,ALGSTR_1,ALGSTR_0,REAL_1,MEMBERED,CKB6,CKB9;
constructors BINOP_2,ALGSTR_1,RLVECT_1,VECTSP_1,MEMBERED,CKB7,CKB8;
begin
reserve L for non empty doubleLoopStr;
reserve a for (Element of L);
reserve b for (Element of L);
reserve c for (Element of L);
reserve x for (Element of L);
reserve y for (Element of L);
reserve z for (Element of L);
theorem
Th32: (L is _Skew-Field iff ((((((((((((for a holds ( a + ( 0. L ) ) = a) & (for a holds (ex x st ( a + x ) = ( 0. L )))) & (for a holds (for b holds (for c holds ( ( a + b ) + c ) = ( a + ( b + c ) ))))) & (for a holds (for b holds ( a + b ) = ( b + a )))) & ( 0. L ) <> ( 1. L )) & (for a holds ( a * ( 1. L ) ) = a)) & (for a holds (a <> ( 0. L ) implies (ex x st ( a * x ) = ( 1. L ))))) & (for a holds ( a * ( 0. L ) ) = ( 0. L ))) & (for a holds ( ( 0. L ) * a ) = ( 0. L ))) & (for a holds (for b holds (for c holds ( ( a * b ) * c ) = ( a * ( b * c ) ))))) & (for a holds (for b holds (for c holds ( a * ( b + c ) ) = ( ( a * b ) + ( a * c ) ))))) & (for a holds (for b holds (for c holds ( ( b + c ) * a ) = ( ( b * a ) + ( c * a ) ))))))
proof
thus (L is _Skew-Field implies ((((((((((((for a holds ( a + ( 0. L ) ) = a) & (for a holds (ex x st ( a + x ) = ( 0. L )))) & (for a holds (for b holds (for c holds ( ( a + b ) + c ) = ( a + ( b + c ) ))))) & (for a holds (for b holds ( a + b ) = ( b + a )))) & ( 0. L ) <> ( 1. L )) & (for a holds ( a * ( 1. L ) ) = a)) & (for a holds (a <> ( 0. L ) implies (ex x st ( a * x ) = ( 1. L ))))) & (for a holds ( a * ( 0. L ) ) = ( 0. L ))) & (for a holds ( ( 0. L ) * a ) = ( 0. L ))) & (for a holds (for b holds (for c holds ( ( a * b ) * c ) = ( a * ( b * c ) ))))) & (for a holds (for b holds (for c holds ( a * ( b + c ) ) = ( ( a * b ) + ( a * c ) ))))) & (for a holds (for b holds (for c holds ( ( b + c ) * a ) = ( ( b * a ) + ( c * a ) )))))) by ALGSTR_1:6,ALGSTR_1:16,GROUP_1:def 3,RLVECT_1:def 2,RLVECT_1:def 3,RLVECT_1:def 4,STRUCT_0:def 8,VECTSP_1:def 6,VECTSP_1:def 7;
assume A1: ((((((((((((for a holds ( a + ( 0. L ) ) = a) & (for a holds (ex x st ( a + x ) = ( 0. L )))) & (for a holds (for b holds (for c holds ( ( a + b ) + c ) = ( a + ( b + c ) ))))) & (for a holds (for b holds ( a + b ) = ( b + a )))) & ( 0. L ) <> ( 1. L )) & (for a holds ( a * ( 1. L ) ) = a)) & (for a holds (a <> ( 0. L ) implies (ex x st ( a * x ) = ( 1. L ))))) & (for a holds ( a * ( 0. L ) ) = ( 0. L ))) & (for a holds ( ( 0. L ) * a ) = ( 0. L ))) & (for a holds (for b holds (for c holds ( ( a * b ) * c ) = ( a * ( b * c ) ))))) & (for a holds (for b holds (for c holds ( a * ( b + c ) ) = ( ( a * b ) + ( a * c ) ))))) & (for a holds (for b holds (for c holds ( ( b + c ) * a ) = ( ( b * a ) + ( c * a ) )))));
now
thus A2: (for a holds ( ( 0. L ) + a ) = a)
proof
let a;
thus ( ( 0. L ) + a ) = ( a + ( 0. L ) ) by A1
.= a by A1;
end;

thus (for a holds (for b holds (ex x st ( a + x ) = b)))
proof
let a;
let b;
consider y such that A3: ( a + y ) = ( 0. L ) by A1;
take x = ( y + b );
thus ( a + x ) = ( ( 0. L ) + b ) by A1,A3
.= b by A2;
end;

thus (for a holds (for b holds (ex x st ( x + a ) = b)))
proof
let a;
let b;
consider y such that A4: ( y + a ) = ( 0. L ) by A1,ALGSTR_1:3;
take x = ( b + y );
thus ( x + a ) = ( b + ( 0. L ) ) by A1,A4
.= b by A1;
end;

thus (for a holds (for x holds (for y holds (( a + x ) = ( a + y ) implies x = y))))
proof
let a;
let x;
let y;
consider z such that A5: ( z + a ) = ( 0. L ) by A1,ALGSTR_1:3;
assume ( a + x ) = ( a + y );
then ( ( z + a ) + x ) = ( z + ( a + y ) ) by A1
.= ( ( z + a ) + y ) by A1;
hence x = ( ( 0. L ) + y ) by A2,A5
.= y by A2;
end;

thus (for a holds (for x holds (for y holds (( x + a ) = ( y + a ) implies x = y))))
proof
let a;
let x;
let y;
consider z such that A6: ( a + z ) = ( 0. L ) by A1;
assume ( x + a ) = ( y + a );
then ( x + ( a + z ) ) = ( ( y + a ) + z ) by A1
.= ( y + ( a + z ) ) by A1;
hence x = ( y + ( 0. L ) ) by A1,A6
.= y by A1;
end;

thus A7: (for a holds ( ( 1. L ) * a ) = a)
proof
let a;
thus ( ( 1. L ) * a ) = ( a * ( 1. L ) ) by A1,CKB26:1
.= a by A1;
end;

thus (for a holds (for b holds (a <> ( 0. L ) implies (ex x st ( a * x ) = b))))
proof
let a;
let b;
assume a <> ( 0. L );
then consider y such that A8: ( a * y ) = ( 1. L ) by A1;
take x = ( y * b );
thus ( a * x ) = ( ( 1. L ) * b ) by A1,A8
.= b by A7;
end;

thus (for a holds (for b holds (a <> ( 0. L ) implies (ex x st ( x * a ) = b))))
proof
let a;
let b;
assume a <> ( 0. L );
then consider y such that A9: ( y * a ) = ( 1. L ) by A1,CKB27:1;
take x = ( b * y );
thus ( x * a ) = ( b * ( 1. L ) ) by A1,A9
.= b by A1;
end;

thus (for a holds (for x holds (for y holds (a <> ( 0. L ) implies (( a * x ) = ( a * y ) implies x = y)))))
proof
let a;
let x;
let y;
assume a <> ( 0. L );
then consider z such that A10: ( z * a ) = ( 1. L ) by A1,CKB27:1;
assume ( a * x ) = ( a * y );
then ( ( z * a ) * x ) = ( z * ( a * y ) ) by A1
.= ( ( z * a ) * y ) by A1;
hence x = ( ( 1. L ) * y ) by A7,A10
.= y by A7;
end;

thus (for a holds (for x holds (for y holds (a <> ( 0. L ) implies (( x * a ) = ( y * a ) implies x = y)))))
proof
let a;
let x;
let y;
assume a <> ( 0. L );
then consider z such that A11: ( a * z ) = ( 1. L ) by A1;
assume ( x * a ) = ( y * a );
then ( x * ( a * z ) ) = ( ( y * a ) * z ) by A1
.= ( y * ( a * z ) ) by A1;
hence x = ( y * ( 1. L ) ) by A1,A11
.= y by A1;
end;

end;
hence thesis by A1,ALGSTR_1:6,ALGSTR_1:16,ALGSTR_1:def 2,GROUP_1:def 3,RLVECT_1:def 2,RLVECT_1:def 3,RLVECT_1:def 4,STRUCT_0:def 8,VECTSP_1:def 6,VECTSP_1:def 7;
end;
