environ
vocabularies NUMBERS,XBOOLE_0,NAT_1,ORDINAL1,CARD_1,FUNCT_1,FINSET_1,CARD_3,REAL_1,NEWTON,ARYTM_3,RELAT_1,XXREAL_0,SUBSET_1,ZFMISC_1,MCART_1,TARSKI,CARD_2,FINSEQ_2,FINSEQ_1,ORDINAL4,PARTFUN1,FUNCT_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,REAL_1,NAT_1,NAT_D,RELAT_1,FUNCT_1,FINSEQ_1,FINSET_1,ORDINAL1,WELLORD2,MCART_1,DOMAIN_1,CARD_2,FINSEQ_2,RELSET_1,FUNCT_2,BINOP_1,FUNCT_4,PARTFUN1,NEWTON,CARD_3,XXREAL_0;
definitions TARSKI,FUNCT_1,WELLORD2,RELAT_1,XBOOLE_0,BINOP_1,ORDINAL1,CARD_3;
theorems TARSKI,ZFMISC_1,NAT_1,ORDINAL1,ORDINAL3,WELLORD2,FUNCT_1,FUNCT_2,FUNCT_4,PARTFUN1,MCART_1,CARD_3,ORDERS_1,CARD_1,CARD_2,NEWTON,FINSEQ_1,FINSEQ_2,RELAT_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,XREAL_1,XXREAL_0,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
schemes NAT_1,FUNCT_1,XBOOLE_0,BINOP_1,CLASSES1,CKB17,CKB18,CKB19;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,NAT_1,CARD_1,MEMBERED,FINSEQ_1,FINSEQ_2,CARD_3,XCMPLX_0,RELSET_1;
constructors PARTFUN1,WELLORD2,BINOP_1,DOMAIN_1,FUNCOP_1,FUNCT_4,ORDINAL3,XXREAL_0,NAT_1,NAT_D,MEMBERED,CARD_2,CARD_3,NEWTON,FINSUB_1,RELSET_1;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve D for non  empty set;
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
theorem
Th86: (((not D is  finite) & n <> ( 0 )) implies (( n -tuples_on D ),D are_equipotent  & ( card ( n -tuples_on D ) ) = ( card D )))
proof
assume that
A1: (not D is  finite)
and
A2: n <> ( 0 );
defpred P[ Nat ]
 means
($1 <> ( 0 ) implies ( card ( $1 -tuples_on D ) ) = ( card D ));
A3: (for k being Nat holds (P[ k ] implies P[ ( k + 1 ) ]))
proof
let k being Nat;
( ( 0 ) -tuples_on D ) = { ( <*> D ) } by FINSEQ_2:94;
then A4: (( 0 ) in ( card ( ( 0 ) -tuples_on D ) ) & ( card ( ( 0 ) -tuples_on D ) ) c= ( card D )) by A1,ORDINAL3:8;
k in ( NAT ) by ORDINAL1:def 12;
then A5: ( card ( ( k + 1 ) -tuples_on D ) ) = ( card [: ( k -tuples_on D ),( 1 -tuples_on D ) :] ) by CKB11:1
.= ( card [: ( card ( k -tuples_on D ) ),( card ( 1 -tuples_on D ) ) :] ) by CARD_2:7
.= ( card [: ( card ( k -tuples_on D ) ),( card D ) :] ) by CKB10:1
.= ( ( card ( k -tuples_on D ) ) *` ( card D ) ) by CARD_2:def 2;
assume P[ k ];
hence thesis by A1,A5,A4,CKB21:1;
end;
A6: P[ ( 0 ) ];
(for k being Nat holds P[ k ]) from NAT_1:sch 2(A6,A3);
then ( card ( n -tuples_on D ) ) = ( card D ) by A2;
hence thesis by CARD_1:5;
end;
