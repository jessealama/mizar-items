environ
vocabularies NUMBERS,XBOOLE_0,NAT_1,ORDINAL1,CARD_1,FUNCT_1,FINSET_1,CARD_3,REAL_1,NEWTON,ARYTM_3,RELAT_1,XXREAL_0,SUBSET_1,ZFMISC_1,MCART_1,TARSKI,CARD_2,FINSEQ_2,FINSEQ_1,ORDINAL4,PARTFUN1,FUNCT_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,REAL_1,NAT_1,NAT_D,RELAT_1,FUNCT_1,FINSEQ_1,FINSET_1,ORDINAL1,WELLORD2,MCART_1,DOMAIN_1,CARD_2,FINSEQ_2,RELSET_1,FUNCT_2,BINOP_1,FUNCT_4,PARTFUN1,NEWTON,CARD_3,XXREAL_0;
definitions TARSKI,FUNCT_1,WELLORD2,RELAT_1,XBOOLE_0,BINOP_1,ORDINAL1,CARD_3;
theorems TARSKI,ZFMISC_1,NAT_1,ORDINAL1,ORDINAL3,WELLORD2,FUNCT_1,FUNCT_2,FUNCT_4,PARTFUN1,MCART_1,CARD_3,ORDERS_1,CARD_1,CARD_2,NEWTON,FINSEQ_1,FINSEQ_2,RELAT_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,XREAL_1,XXREAL_0,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9;
schemes NAT_1,FUNCT_1,XBOOLE_0,BINOP_1,CLASSES1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,NAT_1,CARD_1,MEMBERED,FINSEQ_1,FINSEQ_2,CARD_3,XCMPLX_0,RELSET_1;
constructors PARTFUN1,WELLORD2,BINOP_1,DOMAIN_1,FUNCOP_1,FUNCT_4,ORDINAL3,XXREAL_0,NAT_1,NAT_D,MEMBERED,CARD_2,CARD_3,NEWTON,FINSUB_1,RELSET_1;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve D for non  empty set;
reserve f for Function;
theorem
Th56: (( 1 -tuples_on D ),D are_equipotent  & ( card ( 1 -tuples_on D ) ) = ( card D ))
proof
deffunc f(set) = <* $1 *>;
consider f such that A1: (( dom f ) = D & (for x holds (x in D implies ( f . x ) = f(x)))) from FUNCT_1:sch 3;
D,( 1 -tuples_on D ) are_equipotent 
proof
take f;
thus f is  one-to-one
proof
let x;
let y;
assume (x in ( dom f ) & y in ( dom f ));
then A2: (( f . x ) = <* x *> & ( f . y ) = <* y *>) by A1;
( <* x *> . 1 ) = x by FINSEQ_1:def 8;
hence thesis by A2,FINSEQ_1:def 8;
end;

thus ( dom f ) = D by A1;
thus ( rng f ) c= ( 1 -tuples_on D )
proof
let x;
assume x in ( rng f );
then consider y such that A3: y in ( dom f ) and A4: x = ( f . y ) by FUNCT_1:def 3;
reconsider y as (Element of D) by A1,A3;
x = <* y *> by A1,A4;
then x in { <* d *> where d is (Element of D): (not contradiction) };
hence thesis by FINSEQ_2:96;
end;

let x;
assume x in ( 1 -tuples_on D );
then reconsider y = x as (Element of ( 1 -tuples_on D ));
consider z being (Element of D) such that A5: y = <* z *> by FINSEQ_2:97;
x = ( f . z ) by A1,A5;
hence thesis by A1,FUNCT_1:def 3;
end;
hence thesis by CARD_1:5;
end;
