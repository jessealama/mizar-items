environ
vocabularies NUMBERS,XBOOLE_0,NAT_1,ORDINAL1,CARD_1,FUNCT_1,FINSET_1,CARD_3,REAL_1,NEWTON,ARYTM_3,RELAT_1,XXREAL_0,SUBSET_1,ZFMISC_1,MCART_1,TARSKI,CARD_2,FINSEQ_2,FINSEQ_1,ORDINAL4,PARTFUN1,FUNCT_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,REAL_1,NAT_1,NAT_D,RELAT_1,FUNCT_1,FINSEQ_1,FINSET_1,ORDINAL1,WELLORD2,MCART_1,DOMAIN_1,CARD_2,FINSEQ_2,RELSET_1,FUNCT_2,BINOP_1,FUNCT_4,PARTFUN1,NEWTON,CARD_3,XXREAL_0;
definitions TARSKI,FUNCT_1,WELLORD2,RELAT_1,XBOOLE_0,BINOP_1,ORDINAL1,CARD_3;
theorems TARSKI,ZFMISC_1,NAT_1,ORDINAL1,ORDINAL3,WELLORD2,FUNCT_1,FUNCT_2,FUNCT_4,PARTFUN1,MCART_1,CARD_3,ORDERS_1,CARD_1,CARD_2,NEWTON,FINSEQ_1,FINSEQ_2,RELAT_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,XREAL_1,XXREAL_0,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15;
schemes NAT_1,FUNCT_1,XBOOLE_0,BINOP_1,CLASSES1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,NAT_1,CARD_1,MEMBERED,FINSEQ_1,FINSEQ_2,CARD_3,XCMPLX_0,RELSET_1;
constructors PARTFUN1,WELLORD2,BINOP_1,DOMAIN_1,FUNCOP_1,FUNCT_4,ORDINAL3,XXREAL_0,NAT_1,NAT_D,MEMBERED,CARD_2,CARD_3,NEWTON,FINSUB_1,RELSET_1;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve D for non  empty set;
reserve f for Function;
reserve p for FinSequence;
reserve n for (Element of ( NAT ));
theorem
( omega ) c= ( card ( D * ) )
proof
defpred P[ set,set ]
 means
(ex p st ($1 = p & $2 = ( len p )));
A1: (( {} ) in ( D * ) & ( len ( {} ) ) = ( 0 )) by FINSEQ_1:49;
A2: (for x holds (x in ( D * ) implies (ex y st P[ x,y ])))
proof
let x;
assume x in ( D * );
then reconsider p = x as (Element of ( D * ));
reconsider p as FinSequence;
reconsider y = ( len p ) as set;
take y;
take p;
thus thesis;
end;
consider f such that A3: (( dom f ) = ( D * ) & (for x holds (x in ( D * ) implies P[ x,( f . x ) ]))) from CLASSES1:sch 1(A2);
defpred P[ Nat ]
 means
$1 in ( f .: ( D * ) );
A4: (for n being Nat holds (P[ n ] implies P[ ( n + 1 ) ]))
proof
set y = the (Element of D);
let n being Nat;
assume n in ( f .: ( D * ) );
then consider x such that A5: x in ( dom f ) and A6: x in ( D * ) and A7: n = ( f . x ) by FUNCT_1:def 6;
consider p such that A8: x = p and A9: n = ( len p ) by A3,A5,A7;
reconsider p as (FinSequence of D) by A6,A8,FINSEQ_1:def 11;
A10: ( len ( p ^ <* y *> ) ) = ( n + ( len <* y *> ) ) by A9,FINSEQ_1:22
.= ( n + 1 ) by FINSEQ_1:40;
A11: ( p ^ <* y *> ) in ( D * ) by FINSEQ_1:def 11;
then (ex q being FinSequence st (( p ^ <* y *> ) = q & ( f . ( p ^ <* y *> ) ) = ( len q ))) by A3;
hence thesis by A3,A11,A10,FUNCT_1:def 6;
end;
(ex p st (( {} ) = p & ( f . ( {} ) ) = ( len p ))) by A3,FINSEQ_1:49;
then A12: P[ ( 0 ) ] by A3,A1,FUNCT_1:def 6;
A13: (for n being Nat holds P[ n ]) from NAT_1:sch 2(A12,A4);
( NAT ) c= ( f .: ( D * ) )
proof
let x;
assume x in ( NAT );
then reconsider n = x as (Element of ( NAT ));
n in ( f .: ( D * ) ) by A13;
hence thesis;
end;
hence thesis by CARD_1:47,CARD_1:66;
end;
