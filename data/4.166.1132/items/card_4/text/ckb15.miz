environ
vocabularies NUMBERS,XBOOLE_0,NAT_1,ORDINAL1,CARD_1,FUNCT_1,FINSET_1,CARD_3,REAL_1,NEWTON,ARYTM_3,RELAT_1,XXREAL_0,SUBSET_1,ZFMISC_1,MCART_1,TARSKI,CARD_2,FINSEQ_2,FINSEQ_1,ORDINAL4,PARTFUN1,FUNCT_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,REAL_1,NAT_1,NAT_D,RELAT_1,FUNCT_1,FINSEQ_1,FINSET_1,ORDINAL1,WELLORD2,MCART_1,DOMAIN_1,CARD_2,FINSEQ_2,RELSET_1,FUNCT_2,BINOP_1,FUNCT_4,PARTFUN1,NEWTON,CARD_3,XXREAL_0;
definitions TARSKI,FUNCT_1,WELLORD2,RELAT_1,XBOOLE_0,BINOP_1,ORDINAL1,CARD_3;
theorems TARSKI,ZFMISC_1,NAT_1,ORDINAL1,ORDINAL3,WELLORD2,FUNCT_1,FUNCT_2,FUNCT_4,PARTFUN1,MCART_1,CARD_3,ORDERS_1,CARD_1,CARD_2,NEWTON,FINSEQ_1,FINSEQ_2,RELAT_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,XREAL_1,XXREAL_0,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
schemes NAT_1,FUNCT_1,XBOOLE_0,BINOP_1,CLASSES1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,NAT_1,CARD_1,MEMBERED,FINSEQ_1,FINSEQ_2,CARD_3,XCMPLX_0,RELSET_1;
constructors PARTFUN1,WELLORD2,BINOP_1,DOMAIN_1,FUNCOP_1,FUNCT_4,ORDINAL3,XXREAL_0,NAT_1,NAT_D,MEMBERED,CARD_2,CARD_3,NEWTON,FINSUB_1,RELSET_1;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve X for set;
reserve x for set;
reserve y for set;
reserve D for non  empty set;
reserve f for Function;
reserve k for (Element of ( NAT ));
reserve n for (Element of ( NAT ));
theorem
(D is  countable implies ( D * ) is  countable)
proof
defpred P[ set,set ]
 means
(ex n st ($1 = n & $2 = ( n -tuples_on D )));
A1: (for x holds (x in ( NAT ) implies (ex y st P[ x,y ])))
proof
let x;
assume x in ( NAT );
then reconsider n = x as (Element of ( NAT ));
reconsider y = ( n -tuples_on D ) as set;
take y;
take n;
thus thesis;
end;
consider f such that A2: (( dom f ) = ( NAT ) & (for x holds (x in ( NAT ) implies P[ x,( f . x ) ]))) from CLASSES1:sch 1(A1);
A3: ( D * ) = ( union { ( k -tuples_on D ): (not contradiction) } ) by FINSEQ_2:108;
A4: ( Union f ) = ( D * )
proof
thus ( Union f ) c= ( D * )
proof
let x;
assume x in ( Union f );
then consider X such that A5: x in X and A6: X in ( rng f ) by TARSKI:def 4;
consider y such that A7: y in ( dom f ) and A8: X = ( f . y ) by A6,FUNCT_1:def 3;
reconsider y as (Element of ( NAT )) by A2,A7;
(ex n st (y = n & X = ( n -tuples_on D ))) by A2,A8;
then X in { ( k -tuples_on D ): (not contradiction) };
hence thesis by A3,A5,TARSKI:def 4;
end;

let x;
assume x in ( D * );
then consider X such that A9: (x in X & X in { ( k -tuples_on D ): (not contradiction) }) by A3,TARSKI:def 4;
consider n such that A10: X = ( n -tuples_on D ) by A9;
(ex k st (n = k & ( f . n ) = ( k -tuples_on D ))) by A2;
then X in ( rng f ) by A2,A10,FUNCT_1:def 3;
hence thesis by A9,TARSKI:def 4;
end;
assume A11: D is  countable;
now
let x;
assume x in ( dom f );
then (ex n st (x = n & ( f . x ) = ( n -tuples_on D ))) by A2;
hence ( f . x ) is  countable by A11,CKB12:1;
end;
hence thesis by A2,A4,CKB13:1;
end;
