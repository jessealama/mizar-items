environ
vocabularies NUMBERS,XBOOLE_0,NAT_1,ORDINAL1,CARD_1,FUNCT_1,FINSET_1,CARD_3,REAL_1,NEWTON,ARYTM_3,RELAT_1,XXREAL_0,SUBSET_1,ZFMISC_1,MCART_1,TARSKI,CARD_2,FINSEQ_2,FINSEQ_1,ORDINAL4,PARTFUN1,FUNCT_4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,XCMPLX_0,REAL_1,NAT_1,NAT_D,RELAT_1,FUNCT_1,FINSEQ_1,FINSET_1,ORDINAL1,WELLORD2,MCART_1,DOMAIN_1,CARD_2,FINSEQ_2,RELSET_1,FUNCT_2,BINOP_1,FUNCT_4,PARTFUN1,NEWTON,CARD_3,XXREAL_0;
definitions TARSKI,FUNCT_1,WELLORD2,RELAT_1,XBOOLE_0,BINOP_1,ORDINAL1,CARD_3;
theorems TARSKI,ZFMISC_1,NAT_1,ORDINAL1,ORDINAL3,WELLORD2,FUNCT_1,FUNCT_2,FUNCT_4,PARTFUN1,MCART_1,CARD_3,ORDERS_1,CARD_1,CARD_2,NEWTON,FINSEQ_1,FINSEQ_2,RELAT_1,XBOOLE_0,XBOOLE_1,XCMPLX_1,XREAL_1,XXREAL_0,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16;
schemes NAT_1,FUNCT_1,XBOOLE_0,BINOP_1,CLASSES1,CKB17,CKB18;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,XXREAL_0,NAT_1,CARD_1,MEMBERED,FINSEQ_1,FINSEQ_2,CARD_3,XCMPLX_0,RELSET_1;
constructors PARTFUN1,WELLORD2,BINOP_1,DOMAIN_1,FUNCOP_1,FUNCT_4,ORDINAL3,XXREAL_0,NAT_1,NAT_D,MEMBERED,CARD_2,CARD_3,NEWTON,FINSUB_1,RELSET_1;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
reserve y for set;
reserve f for Function;
reserve n1 for (Element of ( NAT ));
reserve n2 for (Element of ( NAT ));
reserve n3 for (Element of ( NAT ));
scheme FraenCoun3 { f(set,set,set) -> set,P[set,set,set] } : { f(n1,n2,n3): P[ n1,n2,n3 ] } is  countable
proof
[: ( NAT ),( NAT ) :],[: [: ( NAT ),( NAT ) :],( NAT ) :] are_equipotent  by CKB7:1,CARD_2:8;
then A1: ( NAT ),[: [: ( NAT ),( NAT ) :],( NAT ) :] are_equipotent  by CKB7:1,WELLORD2:15;
[: [: ( NAT ),( NAT ) :],( NAT ) :] = [: ( NAT ),( NAT ),( NAT ) :] by ZFMISC_1:def 3;
then consider N being Function such that N is  one-to-one and A2: ( dom N ) = ( NAT ) and A3: ( rng N ) = [: ( NAT ),( NAT ),( NAT ) :] by A1,WELLORD2:def 4;
deffunc g(set) = f(( ( ( N . $1 ) `1 ) `1 ),( ( ( N . $1 ) `1 ) `2 ),( ( N . $1 ) `2 ));
consider f such that A4: (( dom f ) = ( NAT ) & (for x holds (x in ( NAT ) implies ( f . x ) = g(x)))) from FUNCT_1:sch 3;
{ f(n1,n2,n3): P[ n1,n2,n3 ] } c= ( rng f )
proof
reconsider NAT9 = ( NAT ) as non empty set;
let x;
assume x in { f(n1,n2,n3): P[ n1,n2,n3 ] };
then consider n1,n2,n3 such that A5: x = f(n1,n2,n3) and P[ n1,n2,n3 ];
reconsider n1,n2,n3 as (Element of NAT9);
A6: (( [ n1,n2,n3 ] `3 ) = n3 & ( [ n1,n2,n3 ] `1 ) = ( ( ([ n1,n2,n3 ] qua set) `1 ) `1 )) by MCART_1:43,MCART_1:46;
A7: (( [ n1,n2,n3 ] `2 ) = ( ( ([ n1,n2,n3 ] qua set) `1 ) `2 ) & ( [ n1,n2,n3 ] `3 ) = ( ([ n1,n2,n3 ] qua set) `2 )) by MCART_1:46;
consider y such that A8: y in ( dom N ) and A9: [ n1,n2,n3 ] = ( N . y ) by A3,FUNCT_1:def 3;
(( [ n1,n2,n3 ] `1 ) = n1 & ( [ n1,n2,n3 ] `2 ) = n2) by MCART_1:43;
then x = ( f . y ) by A2,A4,A5,A8,A9,A6,A7;
hence thesis by A2,A4,A8,FUNCT_1:def 3;
end;
hence thesis by A4,CARD_3:93;
end;
