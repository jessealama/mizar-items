environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_1,XXREAL_0,ORDINAL1,CARD_1,XBOOLE_0,ARYTM_3,TARSKI,FINSET_1,ZFMISC_1,STRUCT_0,FUNCT_1,FUNCT_2,FINSUB_1,SETWISEO,MCART_1,RELAT_1,ORDINAL4,SGRAPH1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,ORDINAL1,NAT_1,MCART_1,STRUCT_0,FUNCT_1,FUNCT_2,FINSEQ_1,FINSET_1,FINSEQ_2,FINSUB_1,SETWISEO,XXREAL_0,CKB2,CKB3;
definitions TARSKI,CKB2;
theorems TARSKI,ENUMSET1,ZFMISC_1,NAT_1,FINSEQ_1,FINSEQ_3,FINSUB_1,REALSET1,MCART_1,CARD_1,CARD_2,FINSET_1,XBOOLE_0,XBOOLE_1,XXREAL_0,CKB1,CKB2,CKB5,CKB6,CKB7,CKB8,CKB9;
schemes SETWISEO,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FINSET_1,FINSUB_1,XXREAL_0,NAT_1,FINSEQ_1,REALSET1,CARD_1,ZFMISC_1,CKB4;
constructors WELLORD2,SETWISEO,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,REALSET1,STRUCT_0,CKB2;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
theorem
(for m,n being (Element of ( NAT )) holds (n < m implies ( nat_interval (m,n) ) = ( {} )))
proof
let m being (Element of ( NAT )),n being (Element of ( NAT ));
assume A1: n < m;
now
let e being set;
assume e in ( nat_interval (m,n) );
then (ex i being (Element of ( NAT )) st ((e = i & m <= i) & i <= n));
hence contradiction by A1,XXREAL_0:2;
end;
hence thesis by XBOOLE_0:def 1;
end;
