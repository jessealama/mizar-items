environ
vocabularies NUMBERS,SUBSET_1,FINSEQ_1,XXREAL_0,ORDINAL1,CARD_1,XBOOLE_0,ARYTM_3,TARSKI,FINSET_1,ZFMISC_1,STRUCT_0,FUNCT_1,FUNCT_2,FINSUB_1,SETWISEO,MCART_1,RELAT_1,ORDINAL4,SGRAPH1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,ORDINAL1,NAT_1,MCART_1,STRUCT_0,FUNCT_1,FUNCT_2,FINSEQ_1,FINSET_1,FINSEQ_2,FINSUB_1,SETWISEO,XXREAL_0;
definitions TARSKI;
theorems TARSKI,ENUMSET1,ZFMISC_1,NAT_1,FINSEQ_1,FINSEQ_3,FINSUB_1,REALSET1,MCART_1,CARD_1,CARD_2,FINSET_1,XBOOLE_0,XBOOLE_1,XXREAL_0,CKB1;
schemes SETWISEO,XBOOLE_0;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FINSET_1,FINSUB_1,XXREAL_0,NAT_1,FINSEQ_1,REALSET1,CARD_1,ZFMISC_1;
constructors WELLORD2,SETWISEO,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,REALSET1,STRUCT_0;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
definition
let m being  natural number;
let n being  natural number;
func nat_interval (m,n) -> (Subset of ( NAT ))
equals
{ i where i is (Element of ( NAT )): (m <= i & i <= n) };
coherence
proof
set IT = { i where i is (Element of ( NAT )): (m <= i & i <= n) };
now
let e being set;
assume e in IT;
then consider i being (Element of ( NAT )) such that A1: i = e and m <= i and A2: i <= n;
now
per cases ;
suppose i = ( 0 );

then i in { ( 0 ) } by TARSKI:def 1;
hence e in ( { ( 0 ) } \/ ( Seg n ) ) by A1,XBOOLE_0:def 3;
end;
suppose i <> ( 0 );

then ( ( 0 ) + 1 ) <= i by NAT_1:13;
then e in ( Seg n ) by A1,A2,FINSEQ_1:1;
hence e in ( { ( 0 ) } \/ ( Seg n ) ) by XBOOLE_0:def 3;
end;
end;
hence e in ( { ( 0 ) } \/ ( Seg n ) );
end;
then A3: IT c= ( { ( 0 ) } \/ ( Seg n ) ) by TARSKI:def 3;
{ ( 0 ) } c= ( NAT ) by ZFMISC_1:31;
then ( { ( 0 ) } \/ ( Seg n ) ) c= ( NAT ) by XBOOLE_1:8;
hence thesis by A3,XBOOLE_1:1;
end;
end;
