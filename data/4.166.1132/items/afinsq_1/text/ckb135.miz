environ
vocabularies NUMBERS,SUBSET_1,FUNCT_1,ARYTM_3,XXREAL_0,XBOOLE_0,TARSKI,NAT_1,ORDINAL1,FINSEQ_1,CARD_1,FINSET_1,RELAT_1,PARTFUN1,FUNCOP_1,ORDINAL4,ORDINAL2,ARYTM_1,REAL_1,ZFMISC_1,FUNCT_4,VALUED_0,AFINSQ_1,PRGCOR_2,CAT_1,AMISTD_1,AMISTD_3,AMISTD_2,VALUED_1,PRE_POLY,CONNSP_3,BINOP_1,FINSOP_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FUNCT_1,ORDINAL1,ORDINAL2,ORDINAL4,XCMPLX_0,REAL_1,NAT_1,PARTFUN1,BINOP_1,FINSOP_1,NAT_D,FINSET_1,FINSEQ_1,FUNCOP_1,FUNCT_4,FUNCT_7,XXREAL_0,VALUED_0,VALUED_1,CKB6,CKB8,CKB10,CKB11,CKB22,CKB31,CKB33,CKB35,CKB53,CKB57,CKB58,CKB77,CKB82,CKB106,CKB107,CKB109,CKB110,CKB112,CKB129,CKB130,CKB131;
definitions TARSKI,ORDINAL1,XBOOLE_0,FUNCOP_1,RELAT_1,VALUED_1,NAT_1,FUNCT_1,CKB31,CKB33,CKB35,CKB53,CKB57,CKB58,CKB77,CKB106,CKB107,CKB109,CKB110,CKB112,CKB129;
theorems TARSKI,AXIOMS,FUNCT_1,NAT_1,ZFMISC_1,RELAT_1,RELSET_1,ORDINAL1,CARD_1,FINSEQ_1,FUNCT_7,ORDINAL4,CARD_2,FUNCT_4,ORDINAL3,XBOOLE_0,XBOOLE_1,FINSET_1,FUNCOP_1,XREAL_1,VALUED_0,ENUMSET1,XXREAL_0,XREAL_0,GRFUNC_1,XXREAL_2,NAT_D,VALUED_1,BINOP_1,INT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB12,CKB15,CKB16,CKB17,CKB19,CKB20,CKB23,CKB25,CKB26,CKB27,CKB28,CKB31,CKB33,CKB35,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB52,CKB53,CKB56,CKB57,CKB58,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB76,CKB77,CKB79,CKB80,CKB84,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB98,CKB99,CKB100,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106,CKB107,CKB108,CKB109,CKB110,CKB111,CKB112,CKB116,CKB118,CKB119,CKB120,CKB121,CKB122,CKB123,CKB125,CKB126,CKB129,CKB132,CKB133,CKB134;
schemes FUNCT_1,SUBSET_1,NAT_1,XBOOLE_0,CLASSES1,FINSEQ_1,BINOP_1,CKB13,CKB14,CKB75,CKB81;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,ORDINAL2,NUMBERS,FINSEQ_1,VALUED_1,XXREAL_2,MEMBERED,CKB7,CKB18,CKB21,CKB24,CKB29,CKB30,CKB32,CKB34,CKB36,CKB51,CKB54,CKB55,CKB59,CKB60,CKB61,CKB62,CKB72,CKB73,CKB74,CKB78,CKB83,CKB85,CKB86,CKB87,CKB113,CKB114,CKB115,CKB117,CKB124,CKB127,CKB128,CKB9;
constructors WELLORD2,FUNCT_4,XXREAL_0,ORDINAL4,FUNCT_7,ORDINAL3,VALUED_1,ENUMSET1,NAT_D,XXREAL_2,BINOP_1,FINSOP_1,RELSET_1,CKB10,CKB11,CKB31,CKB33,CKB53,CKB57,CKB58,CKB77,CKB106,CKB107,CKB109,CKB110,CKB112,CKB129,CKB130,CKB131;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve n for Nat;
reserve x for set;
reserve p for XFinSequence;
reserve q for XFinSequence;
reserve M for (Element of ( NAT ));
theorem
Th81: ( p ^ q ) = ( p +* ( Shift (q,( card p )) ) )
proof
A1: ( dom ( Shift (q,( card p )) ) ) = { ( M + ( card p ) ): M in ( dom q ) } by VALUED_1:def 12;
(for x holds (x in ( dom ( p ^ q ) ) iff (x in ( dom p ) or x in ( dom ( Shift (q,( card p )) ) ))))
proof
let x;
thus (x in ( dom ( p ^ q ) ) implies (x in ( dom p ) or x in ( dom ( Shift (q,( card p )) ) )))
proof
assume A2: x in ( dom ( p ^ q ) );
then reconsider k = x as Nat;
per cases  by A2,CKB40:1;
suppose k in ( dom p );

hence (x in ( dom p ) or x in ( dom ( Shift (q,( card p )) ) ));
end;
suppose (ex n st (n in ( dom q ) & k = ( ( len p ) + n )));

hence (x in ( dom p ) or x in ( dom ( Shift (q,( card p )) ) )) by A1;
end;
end;

assume A3: (x in ( dom p ) or x in ( dom ( Shift (q,( card p )) ) ));
per cases  by A3;
suppose A4: x in ( dom p );

( dom p ) c= ( dom ( p ^ q ) ) by CKB41:1;
hence x in ( dom ( p ^ q ) ) by A4;
end;
suppose x in ( dom ( Shift (q,( card p )) ) );

then (ex M st (x = ( M + ( card p ) ) & M in ( dom q ))) by A1;
hence x in ( dom ( p ^ q ) ) by CKB43:1;
end;
end;
then A5: ( dom ( p ^ q ) ) = ( ( dom p ) \/ ( dom ( Shift (q,( card p )) ) ) ) by XBOOLE_0:def 3;
(for x holds (x in ( ( dom p ) \/ ( dom ( Shift (q,( card p )) ) ) ) implies ((x in ( dom ( Shift (q,( card p )) ) ) implies ( ( p ^ q ) . x ) = ( ( Shift (q,( card p )) ) . x )) & ((not x in ( dom ( Shift (q,( card p )) ) )) implies ( ( p ^ q ) . x ) = ( p . x )))))
proof
let x;
assume that
A6: x in ( ( dom p ) \/ ( dom ( Shift (q,( card p )) ) ) );
hereby
assume A7: x in ( dom ( Shift (q,( card p )) ) );
then reconsider k = x as Nat;
consider M such that A8: x = ( M + ( card p ) ) and A9: M in ( dom q ) by A7,A1;
set m = ( k -' ( len p ) );
A10: ( ( len p ) + m ) = k by A8,NAT_D:34;
hence ( ( p ^ q ) . x ) = ( q . m ) by A8,A9,CKB35:def 1
.= ( ( Shift (q,( card p )) ) . x ) by A8,A9,A10,VALUED_1:def 12;
end;
assume (not x in ( dom ( Shift (q,( card p )) ) ));
then x in ( dom p ) by A6,XBOOLE_0:def 3;
hence ( ( p ^ q ) . x ) = ( p . x ) by CKB35:def 1;
end;
hence ( p ^ q ) = ( p +* ( Shift (q,( card p )) ) ) by A5,FUNCT_4:def 1;
end;
