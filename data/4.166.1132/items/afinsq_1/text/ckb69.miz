environ
vocabularies NUMBERS,SUBSET_1,FUNCT_1,ARYTM_3,XXREAL_0,XBOOLE_0,TARSKI,NAT_1,ORDINAL1,FINSEQ_1,CARD_1,FINSET_1,RELAT_1,PARTFUN1,FUNCOP_1,ORDINAL4,ORDINAL2,ARYTM_1,REAL_1,ZFMISC_1,FUNCT_4,VALUED_0,AFINSQ_1,PRGCOR_2,CAT_1,AMISTD_1,AMISTD_3,AMISTD_2,VALUED_1,PRE_POLY,CONNSP_3,BINOP_1,FINSOP_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FUNCT_1,ORDINAL1,ORDINAL2,ORDINAL4,XCMPLX_0,REAL_1,NAT_1,PARTFUN1,BINOP_1,FINSOP_1,NAT_D,FINSET_1,FINSEQ_1,FUNCOP_1,FUNCT_4,FUNCT_7,XXREAL_0,VALUED_0,VALUED_1,CKB6,CKB8,CKB10,CKB11,CKB22,CKB31,CKB33,CKB35,CKB53,CKB57,CKB58;
definitions TARSKI,ORDINAL1,XBOOLE_0,FUNCOP_1,RELAT_1,VALUED_1,NAT_1,FUNCT_1,CKB31,CKB33,CKB35,CKB53,CKB57,CKB58;
theorems TARSKI,AXIOMS,FUNCT_1,NAT_1,ZFMISC_1,RELAT_1,RELSET_1,ORDINAL1,CARD_1,FINSEQ_1,FUNCT_7,ORDINAL4,CARD_2,FUNCT_4,ORDINAL3,XBOOLE_0,XBOOLE_1,FINSET_1,FUNCOP_1,XREAL_1,VALUED_0,ENUMSET1,XXREAL_0,XREAL_0,GRFUNC_1,XXREAL_2,NAT_D,VALUED_1,BINOP_1,INT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB12,CKB15,CKB16,CKB17,CKB19,CKB20,CKB23,CKB25,CKB26,CKB27,CKB28,CKB31,CKB33,CKB35,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB52,CKB53,CKB56,CKB57,CKB58,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68;
schemes FUNCT_1,SUBSET_1,NAT_1,XBOOLE_0,CLASSES1,FINSEQ_1,BINOP_1,CKB13,CKB14;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,FUNCOP_1,XXREAL_0,XREAL_0,NAT_1,CARD_1,ORDINAL2,NUMBERS,FINSEQ_1,VALUED_1,XXREAL_2,MEMBERED,CKB7,CKB18,CKB21,CKB24,CKB29,CKB30,CKB32,CKB34,CKB36,CKB51,CKB54,CKB55,CKB59,CKB60,CKB61,CKB62,CKB9;
constructors WELLORD2,FUNCT_4,XXREAL_0,ORDINAL4,FUNCT_7,ORDINAL3,VALUED_1,ENUMSET1,NAT_D,XXREAL_2,BINOP_1,FINSOP_1,RELSET_1,CKB10,CKB11,CKB31,CKB33,CKB53,CKB57,CKB58;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve k for Nat;
reserve x for set;
reserve y for set;
reserve p for XFinSequence;
theorem
Th42: (p = <% x,y %> iff ((( len p ) = 2 & ( p . ( 0 ) ) = x) & ( p . 1 ) = y))
proof
thus (p = <% x,y %> implies ((( len p ) = 2 & ( p . ( 0 ) ) = x) & ( p . 1 ) = y))
proof
assume A1: p = <% x,y %>;
hence ( len p ) = ( ( len <% x %> ) + ( len <% y %> ) ) by CKB35:def 1
.= ( 1 + ( len <% y %> ) ) by CKB64:1
.= ( 1 + 1 ) by CKB64:1
.= 2;
A2: ( 0 ) in { ( 0 ) } by TARSKI:def 1;
then A3: ( 0 ) in ( dom <% y %> ) by CKB53:def 1,CARD_1:49;
( 0 ) in ( dom <% x %> ) by A2,CKB53:def 1,CARD_1:49;
hence ( p . ( 0 ) ) = ( <% x %> . ( 0 ) ) by A1,CKB35:def 1
.= x by CKB53:def 1;
thus ( p . 1 ) = ( ( <% x %> ^ <% y %> ) . ( ( len <% x %> ) + ( 0 ) ) ) by A1,CKB64:1
.= ( <% y %> . ( 0 ) ) by A3,CKB35:def 1
.= y by CKB53:def 1;
end;

assume that
A4: ( len p ) = 2
and
A5: ( p . ( 0 ) ) = x
and
A6: ( p . 1 ) = y;
A7: (for k holds (k in ( dom <% y %> ) implies ( p . ( ( len <% x %> ) + k ) ) = ( <% y %> . k )))
proof
let k;
assume k in ( dom <% y %> );
then A8: k in { ( 0 ) } by CKB53:def 1,CARD_1:49;
thus ( p . ( ( len <% x %> ) + k ) ) = ( p . ( 1 + k ) ) by CKB64:1
.= ( p . ( 1 + ( 0 ) ) ) by A8,TARSKI:def 1
.= ( <% y %> . ( 0 ) ) by A6,CKB53:def 1
.= ( <% y %> . k ) by A8,TARSKI:def 1;
end;
A9: (for k holds (k in ( dom <% x %> ) implies ( p . k ) = ( <% x %> . k )))
proof
let k;
assume k in ( dom <% x %> );
then k in { ( 0 ) } by CKB53:def 1,CARD_1:49;
then k = ( 0 ) by TARSKI:def 1;
hence thesis by A5,CKB53:def 1;
end;
( dom p ) = ( 1 + 1 ) by A4
.= ( ( len <% x %> ) + 1 ) by CKB64:1
.= ( ( len <% x %> ) + ( len <% y %> ) ) by CKB64:1;
hence thesis by A9,A7,CKB35:def 1;
end;
