environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,BVFUNC_1,XBOOLEAN,FUNCT_1,RELAT_1,TARSKI,PARTIT1;
notations TARSKI,XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,RELAT_1,FUNCT_1,FUNCT_2,BVFUNC_1;
definitions BVFUNC_1,XBOOLEAN;
theorems FUNCT_1,FUNCT_2,MARGREL1,BINARITH,BVFUNC_1,BVFUNC_4,XBOOLEAN,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
registrations XBOOLE_0,XBOOLEAN,MARGREL1;
constructors BVFUNC_1;
requirements SUBSET,BOOLE;
begin
reserve Y for non empty set;
theorem
(for a,b,c being (Element of ( Funcs (Y,( BOOLEAN )) )) holds ( a 'imp' b ) '<' ( ( c 'imp' a ) 'imp' ( c 'imp' b ) ))
proof
let a being (Element of ( Funcs (Y,( BOOLEAN )) )),b being (Element of ( Funcs (Y,( BOOLEAN )) )),c being (Element of ( Funcs (Y,( BOOLEAN )) ));
let z being (Element of Y);
assume ( ( a 'imp' b ) . z ) = ( TRUE );
then A1: ( ( 'not' ( a . z ) ) 'or' ( b . z ) ) = ( TRUE ) by BVFUNC_1:def 8;
A2: (( b . z ) = ( TRUE ) or ( b . z ) = ( FALSE )) by XBOOLEAN:def 3;
now
per cases  by A1,A2,BINARITH:3;
case A3: ( 'not' ( a . z ) ) = ( TRUE );
( ( ( c 'imp' a ) 'imp' ( c 'imp' b ) ) . z ) = ( ( 'not' ( ( c 'imp' a ) . z ) ) 'or' ( ( c 'imp' b ) . z ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( ( 'not' ( c . z ) ) 'or' ( a . z ) ) ) 'or' ( ( c 'imp' b ) . z ) ) by BVFUNC_1:def 8
.= ( ( c . z ) 'or' ( ( c 'imp' b ) . z ) ) by A3,MARGREL1:14
.= ( ( c . z ) 'or' ( ( 'not' ( c . z ) ) 'or' ( b . z ) ) ) by BVFUNC_1:def 8
.= ( ( ( c . z ) 'or' ( 'not' ( c . z ) ) ) 'or' ( b . z ) ) by BINARITH:11
.= ( ( TRUE ) 'or' ( b . z ) ) by XBOOLEAN:102
.= ( TRUE ) by BINARITH:10;
hence thesis;
end;
case A4: ( b . z ) = ( TRUE );
( ( ( c 'imp' a ) 'imp' ( c 'imp' b ) ) . z ) = ( ( 'not' ( ( c 'imp' a ) . z ) ) 'or' ( ( c 'imp' b ) . z ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( ( 'not' ( c . z ) ) 'or' ( a . z ) ) ) 'or' ( ( c 'imp' b ) . z ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( ( 'not' ( c . z ) ) 'or' ( a . z ) ) ) 'or' ( ( 'not' ( c . z ) ) 'or' ( TRUE ) ) ) by A4,BVFUNC_1:def 8
.= ( ( 'not' ( ( 'not' ( c . z ) ) 'or' ( a . z ) ) ) 'or' ( TRUE ) ) by BINARITH:10
.= ( TRUE ) by BINARITH:10;
hence thesis;
end;
end;
hence thesis;
end;
