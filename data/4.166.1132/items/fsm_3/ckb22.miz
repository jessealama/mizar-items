environ
vocabularies NUMBERS,XBOOLE_0,SUBSET_1,AFINSQ_1,NAT_1,REWRITE3,XXREAL_0,ARYTM_3,CARD_1,FINSEQ_1,ORDINAL4,RELAT_1,FUNCT_1,FLANG_1,FSM_1,STRUCT_0,ZFMISC_1,TARSKI,FINSET_1,REWRITE2,PRELAMB,FSM_2,LANG1,REWRITE1,MCART_1,FSM_3;
notations CARD_1,TARSKI,XBOOLE_0,ZFMISC_1,XCMPLX_0,NAT_1,DOMAIN_1,FUNCT_1,RELSET_1,XXREAL_0,FINSET_1,AFINSQ_1,SUBSET_1,REWRITE1,CATALAN2,FLANG_1,STRUCT_0,NUMBERS,MCART_1,FINSEQ_1,REWRITE3,CKB13,CKB18,CKB19;
definitions STRUCT_0,CKB13,CKB19;
theorems AFINSQ_1,CARD_1,FLANG_1,FUNCT_1,NAT_1,ORDINAL1,RELAT_1,RELSET_1,REWRITE1,STRUCT_0,SUBSET_1,TARSKI,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ZFMISC_1,FINSEQ_1,FINSEQ_3,FINSEQ_5,MCART_1,REWRITE3,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB9,CKB10,CKB11,CKB12,CKB13,CKB16,CKB17,CKB19;
schemes FINSEQ_1,FRAENKEL,NAT_1,RELSET_1;
registrations CARD_1,NAT_1,XREAL_0,XBOOLE_0,MEMBERED,XXREAL_0,STRUCT_0,SUBSET_1,REWRITE1,AFINSQ_1,RELAT_1,FINSET_1,FINSEQ_1,REWRITE3,CATALAN2,FUNCT_1,RELSET_1,CKB8,CKB14,CKB15,CKB18,CKB20,CKB21;
constructors XXREAL_0,NAT_1,MEMBERED,REWRITE1,FLANG_1,XREAL_0,REWRITE3,RELSET_1,CKB13,CKB18,CKB19;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve E for non empty set;
reserve F for (Subset of ( E ^omega ));
reserve SA for non empty semiautomaton over F;
definition
let E;
let F;
let SA;
func _bool SA ->  strict semiautomaton over ( Lex E )
means
:Def3: (( the transition-system of it ) = ( _bool ( the transition-system of SA ) ) & (the InitS of it) = { ( ( <%> E ) -succ_of ((the InitS of SA),SA) ) });
existence
proof
reconsider TS = ( the transition-system of SA ) as non empty transition-system over F;
set cSA = (the carrier of ( _bool TS ));
reconsider iSA = { ( ( <%> E ) -succ_of ((the InitS of SA),SA) ) } as (Subset of cSA) by CKB13:def 1;
reconsider tSA = (the Tran of ( _bool TS )) as (Relation of [: cSA,( Lex E ) :],cSA);
set bSA = semiautomaton (# cSA,tSA,iSA #);
( card iSA ) = 1 by CARD_1:30;
then reconsider bSA as  strict non empty  deterministic semiautomaton over ( Lex E ) by CKB19:def 1;
take bSA;
thus thesis;
end;
uniqueness;
end;
