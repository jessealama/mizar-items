environ
vocabularies NUMBERS,SUBSET_1,XBOOLE_0,ARYTM_1,CARD_1,RELAT_1,FINSEQ_1,QUANTAL1,UNIALG_1,UNIALG_2,FUNCT_1,MSAFREE,TARSKI,STRUCT_0,FINSEQ_2,PRELAMB,CQC_SIM1,MSUALG_3,FUNCOP_1,PARTFUN1,FUNCT_2,NAT_1,LANG1,TDGROUP,DTCONSTR,TREES_3,TREES_4,CARD_3,TREES_2,QC_LANG1,FREEALG;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,RELSET_1,FUNCT_1,PARTFUN1,FINSEQ_1,FUNCT_2,FUNCOP_1,FINSEQ_2,CARD_3,TREES_2,TREES_3,TREES_4,MARGREL1,STRUCT_0,UNIALG_1,UNIALG_2,LANG1,DTCONSTR,PRE_POLY,ALG_1,CKB1,CKB4,CKB5,CKB6,CKB9,CKB10,CKB13,CKB14,CKB18,CKB19;
definitions TARSKI,UNIALG_2,DTCONSTR,XBOOLE_0,FINSEQ_2,FUNCOP_1,MARGREL1,CKB1,CKB6,CKB9,CKB10,CKB13,CKB14,CKB18,CKB19;
theorems FINSEQ_1,FINSEQ_2,PARTFUN1,FUNCT_1,FUNCT_2,NAT_1,ZFMISC_1,UNIALG_1,ALG_1,TARSKI,FUNCOP_1,UNIALG_2,LANG1,DTCONSTR,RELAT_1,XBOOLE_0,XBOOLE_1,TREES_3,MARGREL1,FINSEQ_3,CARD_1,CKB1,CKB3,CKB6,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB17,CKB18,CKB19,CKB21,CKB22;
schemes PARTFUN1,FINSEQ_1,RELSET_1,DTCONSTR;
registrations XBOOLE_0,SUBSET_1,RELAT_1,ORDINAL1,PARTFUN1,XREAL_0,FINSEQ_1,FINSEQ_2,TREES_3,STRUCT_0,UNIALG_1,UNIALG_2,DTCONSTR,CARD_1,RELSET_1,MARGREL1,FUNCT_1,CKB2,CKB7,CKB8,CKB15,CKB16,CKB20,CKB23,CKB24;
constructors DOMAIN_1,XCMPLX_0,XXREAL_0,XREAL_0,FINSEQOP,DTCONSTR,ALG_1,RELSET_1,PRE_POLY,CKB1,CKB9,CKB10,CKB13,CKB14,CKB18,CKB19;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve y for set;
reserve n for (Element of ( NAT ));
registration
let f being non  empty (FinSequence of ( NAT ));
let D being  disjoint_with_NAT non  empty set;
cluster ( DTConUA (f,D) ) ->  with_terminals  with_nonterminals  with_useful_nonterminals;
coherence
proof
set A = ( DTConUA (f,D) );
A1: ( NonTerminals A ) = ( dom f ) by CKB21:1;
A2: ( Terminals A ) = D by CKB22:1;
A is  with_useful_nonterminals
proof
set d = the (Element of D);
let s being (Symbol of A);
reconsider sd = d as (Symbol of A) by XBOOLE_0:def 3;
A3: ( rng f ) c= ( NAT ) by FINSEQ_1:def 4;
assume A4: s in ( NonTerminals A );
then ( f . s ) in ( rng f ) by A1,FUNCT_1:def 3;
then reconsider fs = ( f . s ) as (Element of ( NAT )) by A3;
reconsider sdd = s as (Element of ( ( dom f ) \/ D ));
set p = ( fs |-> ( root-tree sd ) );
A5: ( len p ) = fs by CARD_1:def 7;
A6: ( root-tree sd ) in ( TS A ) by A2,DTCONSTR:def 1;
A7: ( rng p ) c= ( TS A )
proof
let y;
assume y in ( rng p );
then consider n being Nat such that A8: n in ( dom p ) and A9: ( p . n ) = y by FINSEQ_2:10;
n in ( Seg ( len p ) ) by A8,FINSEQ_1:def 3;
hence thesis by A6,A5,A9,FUNCOP_1:7;
end;
( dom ( roots p ) ) = ( dom p ) by TREES_3:def 18
.= ( Seg ( len p ) ) by FINSEQ_1:def 3;
then A10: ( len ( roots p ) ) = fs by A5,FINSEQ_1:def 3;
reconsider p as (FinSequence of ( TS A )) by A7,FINSEQ_1:def 4;
take p;
reconsider p as (FinSequence of ( FinTrees (the carrier of A) ));
reconsider rp = ( roots p ) as (Element of ( ( ( dom f ) \/ D ) * )) by FINSEQ_1:def 11;
[ sdd,rp ] in ( REL (f,D) ) by A1,A4,A10,CKB18:def 1;
hence thesis by LANG1:def 1;
end;
hence thesis by A2,DTCONSTR:def 3;
end;
end;
