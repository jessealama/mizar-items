environ
vocabularies NUMBERS,SUBSET_1,XBOOLE_0,ARYTM_1,CARD_1,RELAT_1,FINSEQ_1,QUANTAL1,UNIALG_1,UNIALG_2,FUNCT_1,MSAFREE,TARSKI,STRUCT_0,FINSEQ_2,PRELAMB,CQC_SIM1,MSUALG_3,FUNCOP_1,PARTFUN1,FUNCT_2,NAT_1,LANG1,TDGROUP,DTCONSTR,TREES_3,TREES_4,CARD_3,TREES_2,QC_LANG1,FREEALG;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,NAT_1,RELAT_1,RELSET_1,FUNCT_1,PARTFUN1,FINSEQ_1,FUNCT_2,FUNCOP_1,FINSEQ_2,CARD_3,TREES_2,TREES_3,TREES_4,MARGREL1,STRUCT_0,UNIALG_1,UNIALG_2,LANG1,DTCONSTR,PRE_POLY,ALG_1,CKB1,CKB4,CKB5,CKB6,CKB9,CKB10,CKB13,CKB14,CKB18,CKB19,CKB26,CKB27,CKB28,CKB29,CKB31,CKB33,CKB34,CKB35,CKB38,CKB39,CKB40,CKB41,CKB45,CKB46,CKB47;
definitions TARSKI,UNIALG_2,DTCONSTR,XBOOLE_0,FINSEQ_2,FUNCOP_1,MARGREL1,CKB1,CKB6,CKB9,CKB10,CKB13,CKB14,CKB18,CKB19,CKB26,CKB27,CKB28,CKB29,CKB31,CKB34,CKB35,CKB39,CKB40,CKB41,CKB45,CKB47;
theorems FINSEQ_1,FINSEQ_2,PARTFUN1,FUNCT_1,FUNCT_2,NAT_1,ZFMISC_1,UNIALG_1,ALG_1,TARSKI,FUNCOP_1,UNIALG_2,LANG1,DTCONSTR,RELAT_1,XBOOLE_0,XBOOLE_1,TREES_3,MARGREL1,FINSEQ_3,CARD_1,CKB1,CKB3,CKB6,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB17,CKB18,CKB19,CKB21,CKB22,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB34,CKB35,CKB36,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB47;
schemes PARTFUN1,FINSEQ_1,RELSET_1,DTCONSTR;
registrations XBOOLE_0,SUBSET_1,RELAT_1,ORDINAL1,PARTFUN1,XREAL_0,FINSEQ_1,FINSEQ_2,TREES_3,STRUCT_0,UNIALG_1,UNIALG_2,DTCONSTR,CARD_1,RELSET_1,MARGREL1,FUNCT_1,CKB2,CKB7,CKB8,CKB15,CKB16,CKB20,CKB23,CKB24,CKB25,CKB37;
constructors DOMAIN_1,XCMPLX_0,XXREAL_0,XREAL_0,FINSEQOP,DTCONSTR,ALG_1,RELSET_1,PRE_POLY,CKB1,CKB9,CKB10,CKB13,CKB14,CKB18,CKB19,CKB26,CKB27,CKB28,CKB29,CKB31,CKB33,CKB34,CKB35,CKB38,CKB39,CKB40,CKB41,CKB45,CKB46,CKB47;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
theorem
Th10: (for f being  with_zero non empty (FinSequence of ( NAT )) holds (for D being  disjoint_with_NAT set holds ( FreeGenSetZAO (f,D) ) is  free))
proof
let f being  with_zero non empty (FinSequence of ( NAT ));
let D being  disjoint_with_NAT set;
set fgs = ( FreeGenSetZAO (f,D) );
set fua = ( FreeUnivAlgZAO (f,D) );
let U1 being Universal_Algebra;
assume A1: fua,U1 are_similar ;
set A = ( DTConUA (f,D) );
set c1 = (the carrier of U1);
set cf = (the carrier of fua);
let F being (Function of fgs,(the carrier of U1));
deffunc F((Symbol of A)) = ( pi (F,$1) );
deffunc G((Symbol of A),FinSequence,set) = ( ( oper (( @ $1 ),U1) ) /. $3 );
consider ff being (Function of ( TS A ),c1) such that A2: (for t being (Symbol of A) holds (t in ( Terminals A ) implies ( ff . ( root-tree t ) ) = F(t))) and A3: (for nt being (Symbol of A) holds (for ts being (FinSequence of ( TS A )) holds (nt ==> ( roots ts ) implies ( ff . ( nt -tree ts ) ) = G(nt,( roots ts ),( ff * ts ))))) from DTCONSTR:sch 8;
reconsider ff as (Function of fua,U1);
take ff;
(for n being (Element of ( NAT )) holds (n in ( dom (the charact of fua) ) implies (for o1 being (operation of fua) holds (for o2 being (operation of U1) holds ((o1 = ( (the charact of fua) . n ) & o2 = ( (the charact of U1) . n )) implies (for x being (FinSequence of fua) holds (x in ( dom o1 ) implies ( ff . ( o1 . x ) ) = ( o2 . ( ff * x ) ))))))))
proof
A4: ( dom (the charact of U1) ) = ( Seg ( len (the charact of U1) ) ) by FINSEQ_1:def 3;
let n being (Element of ( NAT ));
assume A5: n in ( dom (the charact of fua) );
let o1 being (operation of fua);
let o2 being (operation of U1);
assume that
A6: o1 = ( (the charact of fua) . n )
and
A7: o2 = ( (the charact of U1) . n );
let x being (FinSequence of fua);
assume A8: x in ( dom o1 );
reconsider xa = x as (FinSequence of ( TS A ));
( dom ( roots xa ) ) = ( dom xa ) by TREES_3:def 18
.= ( Seg ( len xa ) ) by FINSEQ_1:def 3;
then A9: ( len ( roots xa ) ) = ( len xa ) by FINSEQ_1:def 3;
reconsider xa as (FinSequence of ( FinTrees (the carrier of A) ));
reconsider rxa = ( roots xa ) as (FinSequence of ( ( dom f ) \/ D ));
reconsider rxa as (Element of ( ( ( dom f ) \/ D ) * )) by FINSEQ_1:def 11;
( dom o1 ) = ( ( arity o1 ) -tuples_on cf ) by MARGREL1:22
.= { w where w is (Element of ( cf * )): ( len w ) = ( arity o1 ) };
then A10: (ex w being (Element of ( cf * )) st (x = w & ( len w ) = ( arity o1 ))) by A8;
A11: o1 = ( FreeOpZAO (n,f,D) ) by A5,A6,CKB40:def 1;
reconsider fx = ( ff * x ) as (Element of ( c1 * ));
A12: ( dom o2 ) = ( ( arity o2 ) -tuples_on c1 ) by MARGREL1:22
.= { v where v is (Element of ( c1 * )): ( len v ) = ( arity o2 ) };
A13: (( len (the charact of fua) ) = ( len (the charact of U1) ) & ( dom (the charact of fua) ) = ( Seg ( len (the charact of fua) ) )) by A1,FINSEQ_1:def 3,UNIALG_2:1;
A14: ( Seg ( len ( FreeOpSeqZAO (f,D) ) ) ) = ( dom ( FreeOpSeqZAO (f,D) ) ) by FINSEQ_1:def 3;
A15: (( len ( FreeOpSeqZAO (f,D) ) ) = ( len f ) & ( dom f ) = ( Seg ( len f ) )) by CKB40:def 1,FINSEQ_1:def 3;
then reconsider nt = n as (Symbol of A) by A5,A14,XBOOLE_0:def 3;
reconsider nd = n as (Element of ( ( dom f ) \/ D )) by A5,A15,A14,XBOOLE_0:def 3;
A16: f = ( signature fua ) by CKB42:1;
then A17: ( ( signature fua ) . n ) = ( arity o1 ) by A5,A6,A15,A14,UNIALG_1:def 4;
then [ nd,rxa ] in ( REL (f,D) ) by A5,A15,A14,A16,A10,A9,CKB18:def 1;
then A18: nt ==> ( roots xa ) by LANG1:def 1;
then A19: ( ff . ( nt -tree xa ) ) = ( ( oper (( @ nt ),U1) ) /. ( ff * x ) ) by A3;
( @ nt ) = n by A18,CKB35:def 1;
then A20: ( oper (( @ nt ),U1) ) = o2 by A5,A7,A13,A4,CKB9:def 1;
( signature fua ) = ( signature U1 ) by A1,UNIALG_2:def 1;
then (( len ( ff * x ) ) = ( len x ) & ( arity o2 ) = ( len x )) by A5,A7,A15,A14,A16,A10,A17,FINSEQ_3:120,UNIALG_1:def 4;
then A21: fx in { v where v is (Element of ( c1 * )): ( len v ) = ( arity o2 ) };
reconsider xa as (Element of ( ( TS A ) * )) by FINSEQ_1:def 11;
( Sym (n,f,D) ) = nt by A5,A15,A14,CKB26:def 1;
then ( o1 . x ) = ( nt -tree xa ) by A5,A8,A15,A14,A11,CKB39:def 1;
hence thesis by A19,A20,A12,A21,PARTFUN1:def 6;
end;
hence ff is_homomorphism fua,U1 by A1,ALG_1:def 1;
A22: ( (the carrier of fua) /\ fgs ) = fgs by XBOOLE_1:28;
A23: (( dom ( ff | fgs ) ) = ( ( dom ff ) /\ fgs ) & ( dom ff ) = (the carrier of fua)) by FUNCT_2:def 1,RELAT_1:61;
A24:now
let x;
assume A25: x in ( dom F );
then x in { ( root-tree t ) where t is (Symbol of A): t in ( Terminals A ) };
then consider s being (Symbol of A) such that A26: (x = ( root-tree s ) & s in ( Terminals A ));
thus ( ( ff | fgs ) . x ) = ( ff . x ) by A23,A22,A25,FUNCT_1:47
.= ( pi (F,s) ) by A2,A26
.= ( F . x ) by A26,CKB47:def 1;
end;
fgs = ( dom F ) by FUNCT_2:def 1;
hence thesis by A23,A22,A24,FUNCT_1:2;
end;
