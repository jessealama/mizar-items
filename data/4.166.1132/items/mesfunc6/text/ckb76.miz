environ
vocabularies NUMBERS,XBOOLE_0,PROB_1,FUNCT_1,PARTFUN1,SUBSET_1,REAL_1,XREAL_0,ORDINAL1,NAT_1,COMPLEX1,MEASURE6,RELAT_1,MEASURE1,MESFUNC2,TARSKI,FINSEQ_1,XXREAL_0,ARYTM_3,ARYTM_1,VALUED_0,MESFUNC1,SETFAM_1,VALUED_1,RAT_1,RFUNCT_3,SUPINF_2,CARD_1,SUPINF_1,MESFUNC5,MESFUNC3,INT_1,ZFMISC_1,INTEGRA5;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,DOMAIN_1,XREAL_0,REAL_1,RAT_1,NAT_1,NAT_D,FUNCT_1,RELSET_1,PARTFUN1,FINSEQ_1,VALUED_1,SUPINF_2,SEQ_1,COMPLEX1,XXREAL_0,RFUNCT_3,MEASURE6,FUNCT_2,SUPINF_1,MEASURE1,EXTREAL1,MESFUNC1,MESFUNC2,MESFUNC3,SETFAM_1,PROB_1,MESFUNC5,CKB12,CKB50;
definitions TARSKI,XBOOLE_0,SUPINF_2,RFUNCT_3,FINSEQ_1,MESFUNC5,MEASURE6,VALUED_1,CKB12,CKB50;
theorems MEASURE1,TARSKI,PARTFUN1,FUNCT_1,NAT_1,SUPINF_2,EXTREAL1,EXTREAL2,MESFUNC1,FINSEQ_1,ABSVALUE,PROB_1,XBOOLE_0,XBOOLE_1,MESFUNC2,MESFUNC3,XREAL_1,ZFMISC_1,MESFUNC5,XXREAL_0,RFUNCT_3,FUZZY_2,FINSUB_1,NAT_2,FINSEQ_3,FINSEQ_2,NAT_D,NUMBERS,VALUED_1,XXREAL_3,RELAT_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75;
schemes FINSEQ_1,PARTFUN1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,RAT_1,MEMBERED,MEASURE1,VALUED_0;
constructors DOMAIN_1,REAL_1,SQUARE_1,NAT_D,MEASURE3,MEASURE6,EXTREAL1,MESFUNC1,EXTREAL2,BINARITH,MESFUNC2,MESFUNC3,MESFUNC5,SEQ_1,SUPINF_1,RELSET_1,CKB12,CKB50;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve X for non empty set;
reserve S for (SigmaField of X);
reserve f for (PartFunc of X,( REAL ));
reserve r for Real;
theorem
(f is_simple_func_in S implies ( r (#) f ) is_simple_func_in S)
proof
set g = ( r (#) f );
assume f is_simple_func_in S;
then consider G being (Finite_Sep_Sequence of S) such that A1: ( dom f ) = ( union ( rng G ) ) and A2: (for n being Nat holds (for x,y being (Element of X) holds (((n in ( dom G ) & x in ( G . n )) & y in ( G . n )) implies ( f . x ) = ( f . y )))) by CKB50:def 1;
A3: ( dom g ) = ( dom f ) by VALUED_1:def 5;
now
let n being Nat;
let x being (Element of X),y being (Element of X);
assume that
A4: n in ( dom G )
and
A5: x in ( G . n )
and
A6: y in ( G . n );
A7: ( G . n ) in ( rng G ) by A4,FUNCT_1:3;
then y in ( dom g ) by A3,A1,A6,TARSKI:def 4;
then A8: ( g . y ) = ( r * ( f . y ) ) by VALUED_1:def 5;
x in ( dom g ) by A3,A1,A5,A7,TARSKI:def 4;
then ( g . x ) = ( r * ( f . x ) ) by VALUED_1:def 5;
hence ( g . x ) = ( g . y ) by A2,A4,A5,A6,A8;
end;
hence thesis by A3,A1,CKB50:def 1;
end;
