environ
vocabularies STRUCT_0,BINOP_1,LATTICES,FUNCT_5,XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCT_1,ARYTM_3,EQREL_1,XXREAL_2,ARYTM_1,ROBBINS1,CARD_1;
notations TARSKI,CARD_1,STRUCT_0,LATTICES,BINOP_1,FUNCT_2,FUNCT_5,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB24,CKB32,CKB34,CKB35;
definitions LATTICES,STRUCT_0,CKB5,CKB6,CKB13,CKB15,CKB16,CKB17,CKB18,CKB32,CKB35;
theorems STRUCT_0,LATTICES,BINOP_1,CARD_1,CKB5,CKB6,CKB13,CKB15,CKB16,CKB17,CKB18,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55;
schemes BINOP_1;
registrations RELSET_1,STRUCT_0,LATTICES,LATTICE2,XBOOLE_0,ZFMISC_1,CARD_1,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB19,CKB20,CKB21,CKB22,CKB23,CKB31,CKB41;
constructors BINOP_1,LATTICES,FUNCT_5,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB13,CKB15,CKB16,CKB17,CKB18,CKB24,CKB34,CKB35;
requirements SUBSET,NUMERALS;
begin
theorem
Th28: (for L being  join-commutative  join-associative  Huntington non empty ComplLLattStr holds (for a,b,c being (Element of L) holds ( ( a *' ( b + c ) ) ` ) = ( ( ( ( ( ( a *' ( b ` ) ) *' ( c ` ) ) + ( ( ( a ` ) *' b ) *' c ) ) + ( ( ( a ` ) *' b ) *' ( c ` ) ) ) + ( ( ( a ` ) *' ( b ` ) ) *' c ) ) + ( ( ( a ` ) *' ( b ` ) ) *' ( c ` ) ) )))
proof
let L being  join-commutative  join-associative  Huntington non empty ComplLLattStr;
let a being (Element of L),b being (Element of L),c being (Element of L);
set D = ( ( a *' ( b ` ) ) *' ( c ` ) );
set E = ( ( ( a ` ) *' b ) *' c );
set F = ( ( ( a ` ) *' b ) *' ( c ` ) );
set G = ( ( ( a ` ) *' ( b ` ) ) *' c );
set H = ( ( ( a ` ) *' ( b ` ) ) *' ( c ` ) );
A1: ( a ` ) = ( ( ( a ` ) *' b ) + ( ( a ` ) *' ( b ` ) ) ) by CKB17:def 1
.= ( ( E + F ) + ( ( a ` ) *' ( b ` ) ) ) by CKB17:def 1
.= ( ( E + F ) + ( G + H ) ) by CKB17:def 1;
A2: ( ( b ` ) *' ( c ` ) ) = ( ( a *' ( ( b ` ) *' ( c ` ) ) ) + ( ( a ` ) *' ( ( b ` ) *' ( c ` ) ) ) ) by CKB25:1
.= ( D + ( ( a ` ) *' ( ( b ` ) *' ( c ` ) ) ) ) by CKB45:1
.= ( D + H ) by CKB45:1;
( ( a *' ( b + c ) ) ` ) = ( ( a ` ) + ( ( b + c ) ` ) ) by CKB27:1
.= ( ( a ` ) + ( ( ( ( b ` ) *' ( c ` ) ) ` ) ` ) ) by CKB46:1
.= ( ( a ` ) + ( ( b ` ) *' ( c ` ) ) ) by CKB27:1;
hence ( ( a *' ( b + c ) ) ` ) = ( ( ( ( E + F ) + ( G + H ) ) + H ) + D ) by A1,A2,LATTICES:def 5
.= ( ( ( ( ( E + F ) + G ) + H ) + H ) + D ) by LATTICES:def 5
.= ( ( ( ( E + F ) + G ) + ( H + H ) ) + D ) by LATTICES:def 5
.= ( ( ( ( E + F ) + G ) + H ) + D ) by CKB18:def 1
.= ( D + ( ( E + F ) + ( G + H ) ) ) by LATTICES:def 5
.= ( ( D + ( E + F ) ) + ( G + H ) ) by LATTICES:def 5
.= ( ( ( D + ( E + F ) ) + G ) + H ) by LATTICES:def 5
.= ( ( ( ( D + E ) + F ) + G ) + H ) by LATTICES:def 5;
end;
