environ
vocabularies STRUCT_0,BINOP_1,LATTICES,FUNCT_5,XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCT_1,ARYTM_3,EQREL_1,XXREAL_2,ARYTM_1,ROBBINS1,CARD_1;
notations TARSKI,CARD_1,STRUCT_0,LATTICES,BINOP_1,FUNCT_2,FUNCT_5,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB24,CKB32,CKB34,CKB35,CKB61,CKB63,CKB67;
definitions LATTICES,STRUCT_0,CKB5,CKB6,CKB13,CKB15,CKB16,CKB17,CKB18,CKB32,CKB35,CKB61,CKB67;
theorems STRUCT_0,LATTICES,BINOP_1,CARD_1,CKB5,CKB6,CKB13,CKB15,CKB16,CKB17,CKB18,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB65,CKB66,CKB67,CKB72;
schemes BINOP_1;
registrations RELSET_1,STRUCT_0,LATTICES,LATTICE2,XBOOLE_0,ZFMISC_1,CARD_1,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB19,CKB20,CKB21,CKB22,CKB23,CKB31,CKB41,CKB62,CKB64,CKB68,CKB69,CKB70,CKB71;
constructors BINOP_1,LATTICES,FUNCT_5,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB13,CKB15,CKB16,CKB17,CKB18,CKB24,CKB34,CKB35,CKB61,CKB67;
requirements SUBSET,NUMERALS;
begin
registration
let L being  join-commutative  join-associative  Huntington non empty ComplLLattStr;
cluster ( CLatt L ) ->  meet-associative  join-absorbing  meet-absorbing;
coherence
proof
hereby
let a being (Element of ( CLatt L )),b being (Element of ( CLatt L )),c being (Element of ( CLatt L ));
reconsider a9 = a,b9 = b,c9 = c as (Element of L) by CKB67:def 1;
A1: ( b9 *' c9 ) = ( b "/\" c ) by CKB67:def 1;
( a9 *' b9 ) = ( a "/\" b ) by CKB67:def 1;
hence ( ( a "/\" b ) "/\" c ) = ( ( a9 *' b9 ) *' c9 ) by CKB67:def 1
.= ( a9 *' ( b9 *' c9 ) ) by CKB45:1
.= ( a "/\" ( b "/\" c ) ) by A1,CKB67:def 1;
end;
hereby
let a being (Element of ( CLatt L )),b being (Element of ( CLatt L ));
reconsider a9 = a,b9 = b as (Element of L) by CKB67:def 1;
( a9 + b9 ) = ( a "\/" b ) by CKB67:def 1;
hence ( a "/\" ( a "\/" b ) ) = ( a9 *' ( a9 + b9 ) ) by CKB67:def 1
.= a by CKB50:1;
end;
let a being (Element of ( CLatt L )),b being (Element of ( CLatt L ));
reconsider a9 = a,b9 = b as (Element of L) by CKB67:def 1;
( a9 *' b9 ) = ( a "/\" b ) by CKB67:def 1;
hence ( ( a "/\" b ) "\/" b ) = ( ( a9 *' b9 ) + b9 ) by CKB67:def 1
.= b by CKB49:1;
end;
end;
