environ
vocabularies STRUCT_0,BINOP_1,LATTICES,FUNCT_5,XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCT_1,ARYTM_3,EQREL_1,XXREAL_2,ARYTM_1,ROBBINS1,CARD_1;
notations TARSKI,CARD_1,STRUCT_0,LATTICES,BINOP_1,FUNCT_2,FUNCT_5,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB24;
definitions LATTICES,STRUCT_0,CKB5,CKB6,CKB13,CKB15,CKB16,CKB17,CKB18;
theorems STRUCT_0,LATTICES,BINOP_1,CARD_1,CKB5,CKB6,CKB13,CKB15,CKB16,CKB17,CKB18,CKB25,CKB26;
schemes BINOP_1;
registrations RELSET_1,STRUCT_0,LATTICES,LATTICE2,XBOOLE_0,ZFMISC_1,CARD_1,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB19,CKB20,CKB21,CKB22,CKB23;
constructors BINOP_1,LATTICES,FUNCT_5,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB13,CKB15,CKB16,CKB17,CKB18,CKB24;
requirements SUBSET,NUMERALS;
begin
theorem
Th3: (for L being  join-commutative  join-associative  Huntington non empty ComplLLattStr holds (for x being (Element of L) holds ( ( x ` ) ` ) = x))
proof
let L being  join-commutative  join-associative  Huntington non empty ComplLLattStr;
let x being (Element of L);
set y = ( x ` );
(( ( ( ( ( y ` ) ` ) + ( y ` ) ) ` ) + ( ( ( ( y ` ) ` ) + y ) ` ) ) = ( y ` ) & ( ( ( y + ( ( y ` ) ` ) ) ` ) + ( ( y + ( y ` ) ) ` ) ) = x) by CKB17:def 1;
hence thesis by CKB26:1;
end;
