environ
vocabularies STRUCT_0,BINOP_1,LATTICES,FUNCT_5,XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCT_1,ARYTM_3,EQREL_1,XXREAL_2,ARYTM_1,ROBBINS1,CARD_1;
notations TARSKI,CARD_1,STRUCT_0,LATTICES,BINOP_1,FUNCT_2,FUNCT_5,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB24,CKB32,CKB34;
definitions LATTICES,STRUCT_0,CKB5,CKB6,CKB13,CKB15,CKB16,CKB17,CKB18,CKB32;
theorems STRUCT_0,LATTICES,BINOP_1,CARD_1,CKB5,CKB6,CKB13,CKB15,CKB16,CKB17,CKB18,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB32,CKB33;
schemes BINOP_1;
registrations RELSET_1,STRUCT_0,LATTICES,LATTICE2,XBOOLE_0,ZFMISC_1,CARD_1,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB19,CKB20,CKB21,CKB22,CKB23,CKB31;
constructors BINOP_1,LATTICES,FUNCT_5,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB13,CKB15,CKB16,CKB17,CKB18,CKB24,CKB34;
requirements SUBSET,NUMERALS;
begin
definition
let L being  join-commutative  join-associative  join-idempotent  Huntington non empty ComplLLattStr;
func Bot L -> (Element of L)
means
:Def9: (for a being (Element of L) holds ( it *' a ) = it);
existence
proof
(ex c being (Element of L) st (for a being (Element of L) holds (( c *' a ) = c & ( ( a + ( a ` ) ) ` ) = c))) by CKB33:1;
hence thesis;
end;
uniqueness
proof
let c1 being (Element of L),c2 being (Element of L);
assume that
A1: (for a being (Element of L) holds ( c1 *' a ) = c1)
and
A2: (for a being (Element of L) holds ( c2 *' a ) = c2);
thus c1 = ( c2 *' c1 ) by A1
.= c2 by A2;
end;
end;
