environ
vocabularies NUMBERS,STRUCT_0,MSAFREE2,XBOOLE_0,MSUALG_1,FINSET_1,RELAT_1,PBOOLE,GLIB_000,FUNCT_1,UNIALG_2,SUBSET_1,FINSEQ_1,FUNCOP_1,FUNCT_6,FSM_1,CARD_3,MARGREL1,TREES_3,TREES_4,PARTFUN1,MSAFREE,TREES_2,ARYTM_3,TREES_1,ZFMISC_1,LANG1,DTCONSTR,TREES_A,TDGROUP,TARSKI,NAT_1,ORDINAL4,CARD_1,ORDINAL1,XXREAL_0,MEMBERED,XREAL_0,ARYTM_1,FUNCT_4,REAL_1,CIRCUIT1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,CARD_1,NUMBERS,XREAL_0,REAL_1,NAT_1,MEMBERED,RELAT_1,FUNCT_1,PBOOLE,PARTFUN1,FINSEQ_1,FINSEQ_2,RELSET_1,FINSET_1,CARD_3,FUNCT_4,FUNCT_6,TREES_1,TREES_2,TREES_3,TREES_4,STRUCT_0,LANG1,DTCONSTR,MSUALG_1,MSUALG_2,MSAFREE,XXREAL_2,FUNCOP_1,MSAFREE2,XXREAL_0,CKB1,CKB2,CKB4;
definitions TARSKI,MEMBERED,MSAFREE2,CKB2;
theorems TARSKI,ZFMISC_1,NAT_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FUNCT_1,FUNCT_2,TREES_1,TREES_2,TREES_3,TREES_4,CARD_1,CARD_2,CARD_3,FUNCOP_1,PBOOLE,PRALG_2,MSUALG_1,MSUALG_2,RELAT_1,MSAFREE1,MSAFREE,PRE_CIRC,DTCONSTR,LANG1,MSAFREE2,FUNCT_4,FUNCT_6,XBOOLE_0,XBOOLE_1,MEMBERED,FINSET_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,XXREAL_2,CKB2,CKB3;
schemes NAT_1,FINSEQ_1,PRE_CIRC,PBOOLE,FRAENKEL,DOMAIN_1;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,TREES_1,CARD_3,PBOOLE,TREES_2,TREES_3,PRE_CIRC,STRUCT_0,DTCONSTR,MSUALG_1,MSAFREE,MSAFREE2,FUNCT_2,XXREAL_2,CARD_1,PRE_POLY,FUNCOP_1,RELSET_1;
constructors FUNCT_4,XXREAL_0,REAL_1,NAT_1,MSUALG_2,MSAFREE2,MEMBERED,XXREAL_2,SEQ_4,RELSET_1,PRE_POLY,FINSEQ_2,CKB2;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve IIG for  Circuit-like non  void non  empty ManySortedSign;
theorem
Th2: (for IIG holds (for SCS being  non-empty (Circuit of IIG) holds (for InpFs being (InputFuncs of SCS) holds (for n being (Element of ( NAT )) holds (IIG is  with_input_V implies ( ( commute InpFs ) . n ) is (InputValues of SCS))))))
proof
let IIG;
let SCS being  non-empty (Circuit of IIG);
let InpFs being (InputFuncs of SCS);
let n being (Element of ( NAT ));
reconsider A = ( InputVertices IIG ) as (Subset of IIG);
reconsider SS = (the Sorts of SCS) as  non-empty (ManySortedSet of (the carrier of IIG));
assume IIG is  with_input_V;
then reconsider A as non  empty (Subset of IIG);
reconsider SI = ( SS | A ) as (ManySortedSet of A);
reconsider SI as  non-empty (ManySortedSet of A);
consider ivm being (ManySortedSet of A) such that A1: ivm = ( ( commute InpFs ) . n ) and A2: ivm in SI by PRE_CIRC:7;
now
let v being (Vertex of IIG);
assume A3: v in ( InputVertices IIG );
then ( SI . v ) = ( (the Sorts of SCS) . v ) by FUNCT_1:49;
hence ( ivm . v ) in ( (the Sorts of SCS) . v ) by A2,A3,PBOOLE:def 1;
end;
hence thesis by A1,MSAFREE2:def 5;
end;
