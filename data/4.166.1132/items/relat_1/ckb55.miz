environ
vocabularies XBOOLE_0,TARSKI,ZFMISC_1,SUBSET_1,RELAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CKB1,CKB3,CKB6,CKB14,CKB15,CKB16,CKB20,CKB21,CKB33,CKB39,CKB45;
definitions TARSKI,XBOOLE_0,ZFMISC_1,CKB1,CKB6,CKB14,CKB15,CKB20,CKB33,CKB39,CKB45;
theorems TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,XBOOLE_1,CKB1,CKB6,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54;
schemes XBOOLE_0,CKB5;
registrations XBOOLE_0,ZFMISC_1,CKB2,CKB4,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
constructors TARSKI,SUBSET_1,ZFMISC_1,CKB1,CKB15,CKB20,CKB33,CKB39,CKB45;
requirements SUBSET,BOOLE;
begin
reserve a for set;
reserve b for set;
reserve y for set;
reserve P for Relation;
reserve Q for Relation;
reserve R for Relation;
theorem
( ( P * R ) \ ( P * Q ) ) c= ( P * ( R \ Q ) )
proof
let a;
let b;
assume A1: [ a,b ] in ( ( P * R ) \ ( P * Q ) );
then consider y such that A2: [ a,y ] in P and A3: [ y,b ] in R by CKB45:def 1;
(not [ a,b ] in ( P * Q )) by A1,XBOOLE_0:def 5;
then ((not [ a,y ] in P) or (not [ y,b ] in Q)) by CKB45:def 1;
then [ y,b ] in ( R \ Q ) by A2,A3,XBOOLE_0:def 5;
hence [ a,b ] in ( P * ( R \ Q ) ) by A2,CKB45:def 1;
end;
