environ
vocabularies XBOOLE_0,TARSKI,ZFMISC_1,SUBSET_1,RELAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CKB1,CKB3;
definitions TARSKI,XBOOLE_0,ZFMISC_1,CKB1;
theorems TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,XBOOLE_1,CKB1;
schemes XBOOLE_0;
registrations XBOOLE_0,ZFMISC_1,CKB2,CKB4;
constructors TARSKI,SUBSET_1,ZFMISC_1,CKB1;
requirements SUBSET,BOOLE;
begin
reserve A for set;
reserve x for set;
reserve y for set;
reserve P for Relation;
reserve R for Relation;
scheme RelExistence { A,B() -> set,P[set,set] } : (ex R being Relation st (for x holds (for y holds ([ x,y ] in R iff ((x in A() & y in B()) & P[ x,y ])))))
proof
(ex R being Relation st (for p being set holds (p in R iff (p in [: A(),B() :] & (ex x st (ex y st (p = [ x,y ] & P[ x,y ])))))))
proof
defpred Q[ set ]
 means
(ex x st (ex y st ($1 = [ x,y ] & P[ x,y ])));
consider B being set such that A1: (for p being set holds (p in B iff (p in [: A(),B() :] & Q[ p ]))) from XBOOLE_0:sch 1;
(for p being set holds (p in B implies (ex x st (ex y st p = [ x,y ]))))
proof
let p being set;
assume p in B;
then (ex x st (ex y st (p = [ x,y ] & P[ x,y ]))) by A1;
hence thesis;
end;
then B is Relation by CKB1:def 1;
hence thesis by A1;
end;
then consider R being Relation such that A2: (for p being set holds (p in R iff (p in [: A(),B() :] & (ex x st (ex y st (p = [ x,y ] & P[ x,y ]))))));
take R;
let x;
let y;
thus ([ x,y ] in R implies ((x in A() & y in B()) & P[ x,y ]))
proof
assume A3: [ x,y ] in R;
then consider xx,yy being set such that A4: [ x,y ] = [ xx,yy ] and A5: P[ xx,yy ] by A2;
A6: [ x,y ] in [: A(),B() :] by A2,A3;
x = xx by A4,ZFMISC_1:27;
hence thesis by A4,A5,A6,ZFMISC_1:27,ZFMISC_1:87;
end;

thus (((x in A() & y in B()) & P[ x,y ]) implies [ x,y ] in R)
proof
assume that
A7: (x in A() & y in B())
and
A8: P[ x,y ];
[ x,y ] in [: A(),B() :] by A7,ZFMISC_1:87;
hence thesis by A2,A8;
end;

end;
