environ
vocabularies XBOOLE_0,TARSKI,ZFMISC_1,SUBSET_1,RELAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CKB1,CKB3,CKB6,CKB14,CKB15,CKB16;
definitions TARSKI,XBOOLE_0,ZFMISC_1,CKB1,CKB6,CKB14,CKB15;
theorems TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,XBOOLE_1,CKB1,CKB6,CKB14,CKB15,CKB17,CKB18,CKB19;
schemes XBOOLE_0,CKB5;
registrations XBOOLE_0,ZFMISC_1,CKB2,CKB4,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
constructors TARSKI,SUBSET_1,ZFMISC_1,CKB1,CKB15;
requirements SUBSET,BOOLE;
begin
reserve Y for set;
reserve Y1 for set;
reserve Y2 for set;
reserve x for set;
reserve y for set;
reserve R for Relation;
definition
let R being set;
func proj2 R -> set means 
:Def5: (y in it iff (ex x st [ x,y ] in R));
existence
proof
defpred Q[ set ]
 means
(ex x st [ x,$1 ] in R);
consider Y such that A1: (for y holds (y in Y iff (y in ( union ( union R ) ) & Q[ y ]))) from XBOOLE_0:sch 1;
take Y;
let y;
((ex x st [ x,y ] in R) implies y in ( union ( union R ) )) by ZFMISC_1:134;
hence thesis by A1;
end;
uniqueness
proof
let Y1;
let Y2;
assume that
A2: (for y holds (y in Y1 iff (ex x st [ x,y ] in R)))
and
A3: (for y holds (y in Y2 iff (ex x st [ x,y ] in R)));
now
let y;
(y in Y1 iff (ex x st [ x,y ] in R)) by A2;
hence (y in Y1 iff y in Y2) by A3;
end;
hence thesis by TARSKI:1;
end;
end;
