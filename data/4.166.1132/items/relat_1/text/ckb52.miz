environ
vocabularies XBOOLE_0,TARSKI,ZFMISC_1,SUBSET_1,RELAT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,CKB1,CKB3,CKB6,CKB14,CKB15,CKB16,CKB20,CKB21,CKB33,CKB39,CKB45;
definitions TARSKI,XBOOLE_0,ZFMISC_1,CKB1,CKB6,CKB14,CKB15,CKB20,CKB33,CKB39,CKB45;
theorems TARSKI,XBOOLE_0,ZFMISC_1,ENUMSET1,XBOOLE_1,CKB1,CKB6,CKB14,CKB15,CKB17,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51;
schemes XBOOLE_0,CKB5;
registrations XBOOLE_0,ZFMISC_1,CKB2,CKB4,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
constructors TARSKI,SUBSET_1,ZFMISC_1,CKB1,CKB15,CKB20,CKB33,CKB39,CKB45;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve z for set;
reserve P for Relation;
reserve Q for Relation;
reserve R for Relation;
reserve S for Relation;
theorem
((P c= R & Q c= S) implies ( P * Q ) c= ( R * S ))
proof
assume A1: (P c= R & Q c= S);
let x;
let y;
assume [ x,y ] in ( P * Q );
then (ex z st ([ x,z ] in P & [ z,y ] in Q)) by CKB45:def 1;
hence [ x,y ] in ( R * S ) by A1,CKB45:def 1;
end;
