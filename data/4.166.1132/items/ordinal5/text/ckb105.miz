environ
vocabularies NUMBERS,ORDINAL1,ORDINAL2,TARSKI,MATROID0,XBOOLE_0,CARD_1,FINSET_1,AFINSQ_1,ORDINAL4,RELAT_1,FUNCT_1,VALUED_0,CARD_3,SUBSET_1,ARYTM_3,NAT_1,XXREAL_0,NEWTON,ORDINAL3,FINSEQ_1,ORDINAL5;
notations XBOOLE_0,TARSKI,RELAT_1,FUNCT_1,SUBSET_1,FINSET_1,NUMBERS,MATROID0,ORDINAL1,NAT_1,XXREAL_0,NEWTON,ORDINAL2,AFINSQ_1,ORDINAL3,ORDINAL4,CARD_3,CKB10,CKB11,CKB12,CKB28,CKB54,CKB57,CKB66,CKB79,CKB85,CKB88,CKB97;
definitions TARSKI,XBOOLE_0,ORDINAL2,CARD_3,CKB10,CKB11,CKB12,CKB28,CKB54,CKB57,CKB66,CKB79,CKB85,CKB88,CKB97;
theorems TARSKI,FUNCT_1,FINSET_1,NAT_1,ORDERS_1,AFINSQ_1,RELAT_1,ORDINAL1,ORDINAL2,ORDINAL3,ORDINAL4,CARD_2,CARD_3,CARD_5,XBOOLE_0,XBOOLE_1,ZFMISC_1,NEWTON,XXREAL_0,NAT_4,PEPIN,CARD_1,CKB1,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB54,CKB55,CKB57,CKB58,CKB59,CKB60,CKB61,CKB63,CKB64,CKB65,CKB66,CKB67,CKB68,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB76,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB88,CKB89,CKB90,CKB91,CKB92,CKB93,CKB94,CKB95,CKB96,CKB97,CKB100,CKB101,CKB103,CKB104;
schemes NAT_1,ORDINAL1,ORDINAL2,AFINSQ_1,CKB52,CKB53;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,NAT_1,XXREAL_0,XREAL_0,ORDINAL2,ORDINAL4,CARD_1,CARD_5,CARD_LAR,NEWTON,AFINSQ_1,FINSET_1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB13,CKB14,CKB16,CKB17,CKB18,CKB19,CKB20,CKB44,CKB45,CKB56,CKB62,CKB77,CKB86,CKB87,CKB98,CKB99,CKB102;
constructors NEWTON,NAT_1,XXREAL_0,AFINSQ_1,ORDINAL3,CARD_3,ORDINAL4,CKB10,CKB11,CKB12,CKB28,CKB54,CKB57,CKB66,CKB79,CKB85,CKB88,CKB97;
requirements SUBSET,BOOLE,NUMERALS,ARITHM,REAL;
begin
reserve a for  ordinal number;
reserve b for  ordinal number;
theorem
Th68: (for A being non empty  Cantor-normal-form Ordinal-Sequence holds (for c being  Cantor-component Ordinal holds (( ( omega ) -exponent ( A . ( 0 ) ) ) in ( ( omega ) -exponent c ) implies ( <% c %> ^ A ) is  Cantor-normal-form)))
proof
let A being non empty  Cantor-normal-form Ordinal-Sequence;
let c being  Cantor-component Ordinal;
assume that
A1: ( ( omega ) -exponent ( A . ( 0 ) ) ) in ( ( omega ) -exponent c );
set B = ( <% c %> ^ A );
A2: (( dom <% c %> ) = 1 & ( <% c %> . ( 0 ) ) = c) by AFINSQ_1:def 4;
then A3: ( dom B ) = ( 1 +^ ( dom A ) ) by ORDINAL4:def 1;
hereby
let a;
assume A4: a in ( dom B );
per cases  by A3,A4,ORDINAL3:38;
suppose A5: a in 1;

then a = ( 0 ) by ORDINAL3:15,TARSKI:def 1;
hence ( B . a ) is  Cantor-component by A2,A5,ORDINAL4:def 1;
end;
suppose (ex b st (b in ( dom A ) & a = ( 1 +^ b )));

then consider b such that A6: (b in ( dom A ) & a = ( 1 +^ b ));
( B . a ) = ( A . b ) by A2,A6,ORDINAL4:def 1;
hence ( B . a ) is  Cantor-component by A6,CKB97:def 1;
end;
end;
let a;
let b;
assume A7: (a in b & b in ( dom B ));
per cases ;
suppose (not a in 1);

then A8: 1 c= a by ORDINAL1:16;
then A9: ((1 in b & a in ( dom B )) & ( ( 1 +^ ( dom A ) ) -^ 1 ) = ( dom A )) by A7,ORDINAL1:10,ORDINAL1:12,ORDINAL3:52;
then A10: ((( b -^ 1 ) in ( dom A ) & ( a -^ 1 ) in ( dom A )) & ( a -^ 1 ) in ( b -^ 1 )) by A8,A3,A7,ORDINAL3:53;
(b = ( 1 +^ ( b -^ 1 ) ) & a = ( 1 +^ ( a -^ 1 ) )) by A8,A9,ORDINAL3:51,ORDINAL3:def 5;
then (( B . a ) = ( A . ( a -^ 1 ) ) & ( B . b ) = ( A . ( b -^ 1 ) )) by A2,A10,ORDINAL4:def 1;
hence thesis by A10,CKB97:def 1;
end;
suppose a in 1;

then A11: (( B . a ) = ( <% c %> . a ) & a = ( 0 )) by A2,ORDINAL3:15,ORDINAL4:def 1,TARSKI:def 1;
then A12: ( succ ( 0 ) ) c= b by A7,ORDINAL1:21;
then ( b -^ 1 ) in ( ( 1 +^ ( dom A ) ) -^ 1 ) by A3,A7,ORDINAL3:53;
then A13: (( b -^ 1 ) in ( dom A ) & b = ( 1 +^ ( b -^ 1 ) )) by A12,ORDINAL3:52,ORDINAL3:def 5;
then A14: ( B . b ) = ( A . ( b -^ 1 ) ) by A2,ORDINAL4:def 1;
(( 0 ) in ( dom A ) & (( b -^ 1 ) = ( 0 ) or ( 0 ) in ( b -^ 1 ))) by ORDINAL3:8;
then (( ( omega ) -exponent ( A . ( 0 ) ) ) = ( ( omega ) -exponent ( A . ( b -^ 1 ) ) ) or ( ( omega ) -exponent ( A . ( b -^ 1 ) ) ) in ( ( omega ) -exponent ( A . ( 0 ) ) )) by A13,CKB97:def 1;
hence thesis by A1,A2,A11,A14,ORDINAL1:10;
end;
end;
