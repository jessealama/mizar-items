environ
vocabularies NUMBERS,NAT_1,CARD_1,ARYTM_3,XBOOLE_0,XXREAL_0,TARSKI,STRUCT_0,FUNCT_1,SUPINF_2,FUNCOP_1,SUBSET_1,FINSEQ_1,PRE_POLY,RELAT_1,AFINSQ_1,ALGSEQ_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,NAT_1,RELAT_1,FUNCT_1,FUNCOP_1,STRUCT_0,FUNCT_2,XXREAL_0,CKB8,CKB10,CKB11,CKB14,CKB18,CKB23;
definitions TARSKI,XBOOLE_0,CARD_1,CKB8,CKB11,CKB14,CKB18,CKB23;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,NAT_1,FUNCOP_1,XREAL_1,XXREAL_0,CARD_1,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
schemes FUNCT_2,NAT_1,CKB20;
registrations ORDINAL1,RELSET_1,XREAL_0,STRUCT_0,CKB9;
constructors FUNCOP_1,XXREAL_0,XREAL_0,NAT_1,RLVECT_1,RELSET_1,CKB8,CKB11,CKB14,CKB18,CKB23;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve i for Nat;
reserve k for Nat;
reserve m for Nat;
reserve R for non  empty ZeroStr;
reserve p for (AlgSequence of R);
reserve x for (Element of R);
theorem
(p = <% ( 0. R ) %> iff ( rng p ) = { ( 0. R ) })
proof
thus (p = <% ( 0. R ) %> implies ( rng p ) = { ( 0. R ) })
proof
assume A1: p = <% ( 0. R ) %>;
thus ( rng p ) c= { ( 0. R ) }
proof
let x being set;
assume x in ( rng p );
then consider i being set such that A2: i in ( dom p ) and A3: x = ( p . i ) by FUNCT_1:def 3;
reconsider i as (Element of ( NAT )) by A2,FUNCT_2:def 1;
( p . i ) = ( 0. R ) by A1,CKB27:1;
hence thesis by A3,TARSKI:def 1;
end;

thus { ( 0. R ) } c= ( rng p )
proof
let x being set;
assume x in { ( 0. R ) };
then x = ( 0. R ) by TARSKI:def 1;
then A4: ( p . ( 0 ) ) = x by A1,CKB23:def 1;
( dom p ) = ( NAT ) by FUNCT_2:def 1;
hence thesis by A4,FUNCT_1:def 3;
end;

end;

thus (( rng p ) = { ( 0. R ) } implies p = <% ( 0. R ) %>)
proof
assume A5: ( rng p ) = { ( 0. R ) };
(for k holds (k >= ( 0 ) implies ( p . k ) = ( 0. R )))
proof
let k;
k in ( NAT ) by ORDINAL1:def 12;
then k in ( dom p ) by FUNCT_2:def 1;
then ( p . k ) in ( rng p ) by FUNCT_1:def 3;
hence thesis by A5,TARSKI:def 1;
end;
then A6: ( 0 ) is_at_least_length_of p by CKB11:def 1;
(for m holds (m is_at_least_length_of p implies ( 0 ) <= m)) by NAT_1:2;
then ( len p ) = ( 0 ) by A6,CKB14:def 1;
hence thesis by CKB25:1;
end;

end;
