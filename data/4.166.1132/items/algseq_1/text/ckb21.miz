environ
vocabularies NUMBERS,NAT_1,CARD_1,ARYTM_3,XBOOLE_0,XXREAL_0,TARSKI,STRUCT_0,FUNCT_1,SUPINF_2,FUNCOP_1,SUBSET_1,FINSEQ_1,PRE_POLY,RELAT_1,AFINSQ_1,ALGSEQ_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,NAT_1,RELAT_1,FUNCT_1,FUNCOP_1,STRUCT_0,FUNCT_2,XXREAL_0,CKB8,CKB10,CKB11,CKB14,CKB18;
definitions TARSKI,XBOOLE_0,CARD_1,CKB8,CKB11,CKB14,CKB18;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,NAT_1,FUNCOP_1,XREAL_1,XXREAL_0,CARD_1,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes FUNCT_2,NAT_1,CKB20;
registrations ORDINAL1,RELSET_1,XREAL_0,STRUCT_0,CKB9;
constructors FUNCOP_1,XXREAL_0,XREAL_0,NAT_1,RLVECT_1,RELSET_1,CKB8,CKB11,CKB14,CKB18;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve k for Nat;
reserve x for set;
reserve R for non  empty ZeroStr;
reserve p for (AlgSequence of R);
reserve q for (AlgSequence of R);
theorem
Th28: ((( len p ) = ( len q ) & (for k holds (k < ( len p ) implies ( p . k ) = ( q . k )))) implies p = q)
proof
assume that
A1: ( len p ) = ( len q )
and
A2: (for k holds (k < ( len p ) implies ( p . k ) = ( q . k )));
A3: (for x holds (x in ( NAT ) implies ( p . x ) = ( q . x )))
proof
let x;
assume x in ( NAT );
then reconsider k = x as (Element of ( NAT ));
(k >= ( len p ) implies ( p . k ) = ( q . k ))
proof
assume A4: k >= ( len p );
then ( p . k ) = ( 0. R ) by CKB15:1;
hence thesis by A1,A4,CKB15:1;
end;
hence thesis by A2;
end;
(( dom p ) = ( NAT ) & ( dom q ) = ( NAT )) by FUNCT_2:def 1;
hence thesis by A3,FUNCT_1:2;
end;
