environ
vocabularies NUMBERS,NAT_1,CARD_1,ARYTM_3,XBOOLE_0,XXREAL_0,TARSKI,STRUCT_0,FUNCT_1,SUPINF_2,FUNCOP_1,SUBSET_1,FINSEQ_1,PRE_POLY,RELAT_1,AFINSQ_1,ALGSEQ_1;
notations TARSKI,XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,NAT_1,RELAT_1,FUNCT_1,FUNCOP_1,STRUCT_0,FUNCT_2,XXREAL_0,CKB8,CKB10,CKB11,CKB14,CKB18;
definitions TARSKI,XBOOLE_0,CARD_1,CKB8,CKB11,CKB14,CKB18;
theorems TARSKI,ZFMISC_1,FUNCT_1,FUNCT_2,NAT_1,FUNCOP_1,XREAL_1,XXREAL_0,CARD_1,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes FUNCT_2,NAT_1;
registrations ORDINAL1,RELSET_1,XREAL_0,STRUCT_0,CKB9;
constructors FUNCOP_1,XXREAL_0,XREAL_0,NAT_1,RLVECT_1,RELSET_1,CKB8,CKB11,CKB14,CKB18;
requirements NUMERALS,REAL,SUBSET,BOOLE,ARITHM;
begin
reserve i for Nat;
reserve k for Nat;
reserve n for Nat;
reserve x for set;
reserve R for non  empty ZeroStr;
scheme AlgSeqLambdaF { R() -> non  empty ZeroStr,A() -> Nat,F(Nat) -> (Element of R()) } : (ex p being (AlgSequence of R()) st (( len p ) <= A() & (for k holds (k < A() implies ( p . k ) = F(k)))))
proof
defpred P[ Nat,(Element of R()) ]
 means
(($1 < A() & $2 = F($1)) or ($1 >= A() & $2 = ( 0. R() )));
A1: (for x being (Element of ( NAT )) holds (ex y being (Element of R()) st P[ x,y ]))
proof
let x being (Element of ( NAT ));
(x < A() implies (x < A() & F(x) = F(x)));
hence thesis;
end;
(ex f being (Function of ( NAT ),(the carrier of R())) st (for x being (Element of ( NAT )) holds P[ x,( f . x ) ])) from FUNCT_2:sch 3(A1);
then consider f being (Function of ( NAT ),(the carrier of R())) such that A2: (for x being (Element of ( NAT )) holds ((x < A() & ( f . x ) = F(x)) or (x >= A() & ( f . x ) = ( 0. R() ))));
(ex n st (for i holds (i >= n implies ( f . i ) = ( 0. R() ))))
proof
reconsider n = A() as (Element of ( NAT )) by ORDINAL1:def 12;
take n;
let i;
i in ( NAT ) by ORDINAL1:def 12;
hence thesis by A2;
end;
then reconsider f as (AlgSequence of R()) by CKB8:def 1;
take f;
now
let i;
assume A3: i >= A();
i in ( NAT ) by ORDINAL1:def 12;
hence ( f . i ) = ( 0. R() ) by A2,A3;
end;
then A() is_at_least_length_of f by CKB11:def 1;
hence ( len f ) <= A() by CKB14:def 1;
let k;
k in ( NAT ) by ORDINAL1:def 12;
hence thesis by A2;
end;
