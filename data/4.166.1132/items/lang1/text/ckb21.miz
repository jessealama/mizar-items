environ
vocabularies NUMBERS,STRUCT_0,RELAT_1,XBOOLE_0,SUBSET_1,FINSEQ_1,TDGROUP,TARSKI,ORDINAL4,ARYTM_3,CARD_1,FUNCT_1,XXREAL_0,NAT_1,ZFMISC_1,ORDINAL1,FINSET_1,LANG1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,NAT_1,DOMAIN_1,RELAT_1,STRUCT_0,FUNCT_1,FINSEQ_1,FINSET_1,RELSET_1,PARTFUN1,FUNCT_2,FINSEQ_2,XXREAL_0,PRE_POLY,CKB1,CKB3,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB16,CKB20;
definitions XBOOLE_0,TARSKI,RELAT_1,STRUCT_0,ORDINAL1,CKB7,CKB8,CKB9,CKB11,CKB16,CKB20;
theorems TARSKI,ZFMISC_1,RELAT_1,FINSEQ_1,NAT_1,RELSET_1,TREES_2,FUNCT_2,FINSEQ_3,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
schemes NAT_1,FUNCT_2;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,STRUCT_0,ORDINAL1,CARD_1,RELSET_1,CKB1,CKB2,CKB3,CKB4;
constructors PARTFUN1,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,STRUCT_0,RELSET_1,PRE_POLY,CKB1,CKB3,CKB7,CKB8,CKB9,CKB11,CKB16,CKB20;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve G for non  empty DTConstrStr;
reserve n for (String of G);
theorem
(for G being non  empty GrammarStr holds (for n being (String of G) holds (n in ( Lang G ) iff (( rng n ) c= ( Terminals G ) & n is_derivable_from <* (the InitialSym of G) *>))))
proof
let G being non  empty GrammarStr;
let n being (String of G);
now
assume n in ( Lang G );
then (ex a being (Element of ( (the carrier of G) * )) st ((n = a & ( rng a ) c= ( Terminals G )) & a is_derivable_from <* (the InitialSym of G) *>));
hence (( rng n ) c= ( Terminals G ) & n is_derivable_from <* (the InitialSym of G) *>);
end;
hence thesis;
end;
