environ
vocabularies NUMBERS,STRUCT_0,RELAT_1,XBOOLE_0,SUBSET_1,FINSEQ_1,TDGROUP,TARSKI,ORDINAL4,ARYTM_3,CARD_1,FUNCT_1,XXREAL_0,NAT_1,ZFMISC_1,ORDINAL1,FINSET_1,LANG1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,NAT_1,DOMAIN_1,RELAT_1,STRUCT_0,FUNCT_1,FINSEQ_1,FINSET_1,RELSET_1,PARTFUN1,FUNCT_2,FINSEQ_2,XXREAL_0,PRE_POLY,CKB1,CKB3,CKB5,CKB6,CKB7,CKB8,CKB9;
definitions XBOOLE_0,TARSKI,RELAT_1,STRUCT_0,ORDINAL1,CKB7,CKB8,CKB9;
theorems TARSKI,ZFMISC_1,RELAT_1,FINSEQ_1,NAT_1,RELSET_1,TREES_2,FUNCT_2,FINSEQ_3,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,CKB7,CKB8,CKB9;
schemes NAT_1,FUNCT_2;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,STRUCT_0,ORDINAL1,CARD_1,RELSET_1,CKB1,CKB2,CKB3,CKB4;
constructors PARTFUN1,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,STRUCT_0,RELSET_1,PRE_POLY,CKB1,CKB3,CKB7,CKB8,CKB9;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve G for non  empty DTConstrStr;
reserve s for (Symbol of G);
theorem
( ( Terminals G ) \/ ( NonTerminals G ) ) = (the carrier of G)
proof
thus ( ( Terminals G ) \/ ( NonTerminals G ) ) c= (the carrier of G)
proof
let a being set;
assume a in ( ( Terminals G ) \/ ( NonTerminals G ) );
then (a in ( Terminals G ) or a in ( NonTerminals G )) by XBOOLE_0:def 3;
then ((ex s st (a = s & (not (ex n being FinSequence st s ==> n)))) or (ex s st (a = s & (ex n being FinSequence st s ==> n))));
hence thesis;
end;

let a being set;
assume a in (the carrier of G);
then reconsider s = a as (Symbol of G);
((not (ex n being FinSequence st s ==> n)) or (ex n being FinSequence st s ==> n));
then (a in ( Terminals G ) or a in ( NonTerminals G ));
hence thesis by XBOOLE_0:def 3;
end;
