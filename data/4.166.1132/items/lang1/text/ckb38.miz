environ
vocabularies NUMBERS,STRUCT_0,RELAT_1,XBOOLE_0,SUBSET_1,FINSEQ_1,TDGROUP,TARSKI,ORDINAL4,ARYTM_3,CARD_1,FUNCT_1,XXREAL_0,NAT_1,ZFMISC_1,ORDINAL1,FINSET_1,LANG1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,NAT_1,DOMAIN_1,RELAT_1,STRUCT_0,FUNCT_1,FINSEQ_1,FINSET_1,RELSET_1,PARTFUN1,FUNCT_2,FINSEQ_2,XXREAL_0,PRE_POLY,CKB1,CKB3,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB16,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB30;
definitions XBOOLE_0,TARSKI,RELAT_1,STRUCT_0,ORDINAL1,CKB7,CKB8,CKB9,CKB11,CKB16,CKB20,CKB24,CKB25,CKB26,CKB30;
theorems TARSKI,ZFMISC_1,RELAT_1,FINSEQ_1,NAT_1,RELSET_1,TREES_2,FUNCT_2,FINSEQ_3,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB24,CKB25,CKB26,CKB30,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37;
schemes NAT_1,FUNCT_2;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,STRUCT_0,ORDINAL1,CARD_1,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB27,CKB28,CKB29,CKB31;
constructors PARTFUN1,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,STRUCT_0,RELSET_1,PRE_POLY,CKB1,CKB3,CKB7,CKB8,CKB9,CKB11,CKB16,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB30;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve G for non  empty DTConstrStr;
reserve s for (Symbol of G);
reserve n for (String of G);
reserve a for set;
reserve D for non  empty set;
reserve d for (Element of D);
theorem
Th16: ( Terminals ( TotalGrammar D ) ) = D
proof
set T = ( TotalGrammar D );
A1: (the Rules of T) = ( { [ D,<* d,D *> ] where d is (Element of D): d = d } \/ { [ D,( {} ) ] } ) by CKB30:def 1;
A2: (the carrier of T) = ( succ D ) by CKB30:def 1;
thus ( Terminals T ) c= D
proof
reconsider b = D as (Symbol of T) by CKB30:def 1;
let a;
assume a in ( Terminals T );
then consider s being (Symbol of T) such that A3: a = s and A4: (not (ex n being FinSequence st s ==> n));
[ D,( {} ) ] in { [ D,( {} ) ] } by TARSKI:def 1;
then [ D,( {} ) ] in (the Rules of T) by A1,XBOOLE_0:def 3;
then b ==> ( <*> (the carrier of T) ) by CKB7:def 1;
then s <> D by A4;
then (not s in { D }) by TARSKI:def 1;
hence thesis by A2,A3,XBOOLE_0:def 3;
end;

let a;
assume a in D;
then reconsider a as (Element of D);
reconsider x = a as (Symbol of T) by A2,XBOOLE_0:def 3;
assume (not thesis);
then consider n being FinSequence such that A5: x ==> n;
A6: (not a in a);
then a <> D;
then [ a,n ] <> [ D,( {} ) ] by ZFMISC_1:27;
then A7: (not [ a,n ] in { [ D,( {} ) ] }) by TARSKI:def 1;
[ a,n ] in (the Rules of T) by A5,CKB7:def 1;
then [ a,n ] in { [ D,<* d,D *> ]: d = d } by A1,A7,XBOOLE_0:def 3;
then (ex d st ([ a,n ] = [ D,<* d,D *> ] & d = d));
then a = D by ZFMISC_1:27;
hence thesis by A6;
end;
