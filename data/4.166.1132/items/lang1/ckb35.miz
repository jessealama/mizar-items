environ
vocabularies NUMBERS,STRUCT_0,RELAT_1,XBOOLE_0,SUBSET_1,FINSEQ_1,TDGROUP,TARSKI,ORDINAL4,ARYTM_3,CARD_1,FUNCT_1,XXREAL_0,NAT_1,ZFMISC_1,ORDINAL1,FINSET_1,LANG1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,NUMBERS,NAT_1,DOMAIN_1,RELAT_1,STRUCT_0,FUNCT_1,FINSEQ_1,FINSET_1,RELSET_1,PARTFUN1,FUNCT_2,FINSEQ_2,XXREAL_0,PRE_POLY,CKB1,CKB3,CKB5,CKB6,CKB7,CKB8,CKB9,CKB11,CKB16,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB30;
definitions XBOOLE_0,TARSKI,RELAT_1,STRUCT_0,ORDINAL1,CKB7,CKB8,CKB9,CKB11,CKB16,CKB20,CKB24,CKB25,CKB26,CKB30;
theorems TARSKI,ZFMISC_1,RELAT_1,FINSEQ_1,NAT_1,RELSET_1,TREES_2,FUNCT_2,FINSEQ_3,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB24,CKB25,CKB26,CKB30,CKB32,CKB33,CKB34;
schemes NAT_1,FUNCT_2;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,FUNCT_2,FINSET_1,XXREAL_0,XREAL_0,FINSEQ_1,STRUCT_0,ORDINAL1,CARD_1,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB27,CKB28,CKB29,CKB31;
constructors PARTFUN1,DOMAIN_1,XXREAL_0,XREAL_0,NAT_1,FINSEQ_2,STRUCT_0,RELSET_1,PRE_POLY,CKB1,CKB3,CKB7,CKB8,CKB9,CKB11,CKB16,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB30;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve a for set;
reserve b for set;
reserve c for set;
theorem
(a <> b implies ( Lang ( SingleGrammar (a,b) ) ) = { <* b *> })
proof
set E = ( SingleGrammar (a,b) );
A1: (the InitialSym of E) = a by CKB25:def 1;
(the carrier of E) = { a,b } by CKB25:def 1;
then reconsider x = a,y = b as (Symbol of E) by TARSKI:def 2;
A2: (the Rules of E) = { [ a,<* b *> ] } by CKB25:def 1;
then [ a,<* b *> ] in (the Rules of E) by TARSKI:def 1;
then (the InitialSym of E) ==> <* y *> by A1,CKB7:def 1;
then A3: <* y *> is_derivable_from <* (the InitialSym of E) *> by CKB13:1,CKB18:1;
assume A4: a <> b;
then A5: ( Terminals E ) = { b } by CKB34:1;
thus ( Lang E ) c= { <* b *> }
proof
let c;
assume c in ( Lang E );
then consider p being (String of E) such that A6: c = p and A7: ( rng p ) c= ( Terminals E ) and A8: p is_derivable_from <* (the InitialSym of E) *>;
consider q being FinSequence such that A9: ( len q ) >= 1 and A10: ( q . 1 ) = <* (the InitialSym of E) *> and A11: ( q . ( len q ) ) = p and A12: (for i being (Element of ( NAT )) holds ((i >= 1 & i < ( len q )) implies (ex a,b being (String of E) st ((( q . i ) = a & ( q . ( i + 1 ) ) = b) & a ==> b)))) by A8,CKB16:def 1;
now
assume p = <* x *>;
then ( rng p ) = { x } by FINSEQ_1:38;
then x in ( rng p ) by TARSKI:def 1;
hence contradiction by A4,A5,A7,TARSKI:def 1;
end;
then A13: ( len q ) > 1 by A1,A9,A10,A11,XXREAL_0:1;
then consider n being (String of E),m being (String of E) such that A14: ( q . 1 ) = n and A15: ( q . ( 1 + 1 ) ) = m and A16: n ==> m by A12;
x ==> m by A1,A10,A14,A16,CKB14:1;
then [ x,m ] in { [ a,<* b *> ] } by A2,CKB7:def 1;
then [ x,m ] = [ a,<* b *> ] by TARSKI:def 1;
then A17: m = <* b *> by ZFMISC_1:27;
A18:now
assume 2 < ( len q );
then consider k being (String of E),l being (String of E) such that A19: ( q . 2 ) = k and ( q . ( 2 + 1 ) ) = l and A20: k ==> l by A12;
y ==> l by A15,A17,A19,A20,CKB14:1;
then [ y,l ] in { [ a,<* b *> ] } by A2,CKB7:def 1;
then [ y,l ] = [ a,<* b *> ] by TARSKI:def 1;
hence contradiction by A4,ZFMISC_1:27;
end;
( len q ) >= ( 1 + 1 ) by A13,NAT_1:13;
then c = <* b *> by A6,A11,A15,A17,A18,XXREAL_0:1;
hence thesis by TARSKI:def 1;
end;

let c;
assume c in { <* b *> };
then A21: c = <* b *> by TARSKI:def 1;
( rng <* b *> ) = { b } by FINSEQ_1:38;
hence thesis by A5,A21,A3;
end;
