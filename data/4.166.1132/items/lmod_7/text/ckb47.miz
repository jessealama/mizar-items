environ
vocabularies SUBSET_1,XBOOLE_0,BINOP_1,FUNCT_1,MULTOP_1,FUNCSDOM,VECTSP_1,VECTSP_2,RLVECT_2,RLSUB_1,FINSEQ_1,RMOD_3,ARYTM_1,ARYTM_3,ZFMISC_1,RLVECT_3,SUPINF_2,GROUP_1,TARSKI,CARD_3,MOD_3,STRUCT_0,RLSUB_2,INCSP_1,PARTFUN1,PRELAMB,SETWISEO,LATTICES,QC_LANG1,FINSEQ_4,ALGSTR_0,RLVECT_1,RELAT_1,LMOD_7;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,STRUCT_0,ALGSTR_0,FUNCT_2,BINOP_1,FINSEQ_1,SETWISEO,SETWOP_2,LATTICES,MULTOP_1,RLVECT_1,GROUP_1,VECTSP_1,FUNCSDOM,VECTSP_2,VECTSP_4,VECTSP_5,VECTSP_6,LMOD_5,MOD_3,LMOD_6,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB34,CKB35,CKB39,CKB41,CKB44,CKB45,CKB46;
definitions RLVECT_1,STRUCT_0,XBOOLE_0,ALGSTR_0,CKB18,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB30,CKB31,CKB34,CKB35,CKB39,CKB41,CKB44,CKB45,CKB46;
theorems BINOP_1,FUNCT_2,RLVECT_1,LMOD_5,LMOD_6,MOD_3,MULTOP_1,SETWISEO,SUBSET_1,TARSKI,VECTSP_1,VECTSP_4,VECTSP_5,VECTSP_6,ZFMISC_1,XBOOLE_0,XBOOLE_1,STRUCT_0,ALGSTR_0,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46;
schemes BINOP_1,DOMAIN_1,FUNCT_2,XBOOLE_0,BINOP_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
registrations XBOOLE_0,SUBSET_1,STRUCT_0,LATTICES,VECTSP_1,VECTSP_4,VECTSP_5,LATTICE2,ALGSTR_0,CKB21,CKB40;
constructors BINOP_1,DOMAIN_1,SETWISEO,MULTOP_1,FINSOP_1,LATTICES,VECTSP_6,LMOD_5,MOD_3,LMOD_6,RELSET_1,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB34,CKB35,CKB39,CKB41,CKB44,CKB45,CKB46;
requirements BOOLE,SUBSET;
begin
reserve K for Ring;
reserve V for (LeftMod of K);
reserve W for (Subspace of V);
reserve S1 for (Element of ( V .. W ));
reserve S2 for (Element of ( V .. W ));
definition
let K;
let V;
let W;
func ADD W -> (BinOp of ( V .. W )) means 
:Def17: ( it . (S1,S2) ) = ( S1 + S2 );
existence
proof
deffunc U((Element of ( V .. W ))) = ( - $1 );
deffunc U((Element of ( V .. W )),(Element of ( V .. W ))) = ( $1 + $2 );
thus (ex B being (BinOp of ( V .. W )) st (for S1 holds (for S2 holds ( B . (S1,S2) ) = U(S1,S2)))) from BINOP_1:sch 4;
end;
uniqueness
proof
deffunc U((Element of ( V .. W ))) = ( - $1 );
deffunc U((Element of ( V .. W )),(Element of ( V .. W ))) = ( $1 + $2 );
thus (for B1,B2 being (BinOp of ( V .. W )) holds (((for S1 holds (for S2 holds ( B1 . (S1,S2) ) = U(S1,S2))) & (for S1 holds (for S2 holds ( B2 . (S1,S2) ) = U(S1,S2)))) implies B1 = B2)) from BINOP_2:sch 2;
end;
end;
