environ
vocabularies SUBSET_1,XBOOLE_0,BINOP_1,FUNCT_1,MULTOP_1,FUNCSDOM,VECTSP_1,VECTSP_2,RLVECT_2,RLSUB_1,FINSEQ_1,RMOD_3,ARYTM_1,ARYTM_3,ZFMISC_1,RLVECT_3,SUPINF_2,GROUP_1,TARSKI,CARD_3,MOD_3,STRUCT_0,RLSUB_2,INCSP_1,PARTFUN1,PRELAMB,SETWISEO,LATTICES,QC_LANG1,FINSEQ_4,ALGSTR_0,RLVECT_1,RELAT_1,LMOD_7;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,STRUCT_0,ALGSTR_0,FUNCT_2,BINOP_1,FINSEQ_1,SETWISEO,SETWOP_2,LATTICES,MULTOP_1,RLVECT_1,GROUP_1,VECTSP_1,FUNCSDOM,VECTSP_2,VECTSP_4,VECTSP_5,VECTSP_6,LMOD_5,MOD_3,LMOD_6,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB34,CKB35,CKB39,CKB41,CKB44,CKB45,CKB46,CKB47,CKB48,CKB51;
definitions RLVECT_1,STRUCT_0,XBOOLE_0,ALGSTR_0,CKB18,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB30,CKB31,CKB34,CKB35,CKB39,CKB41,CKB44,CKB45,CKB46,CKB47,CKB48,CKB51;
theorems BINOP_1,FUNCT_2,RLVECT_1,LMOD_5,LMOD_6,MOD_3,MULTOP_1,SETWISEO,SUBSET_1,TARSKI,VECTSP_1,VECTSP_4,VECTSP_5,VECTSP_6,ZFMISC_1,XBOOLE_0,XBOOLE_1,STRUCT_0,ALGSTR_0,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB50,CKB51,CKB52,CKB53,CKB54;
schemes BINOP_1,DOMAIN_1,FUNCT_2,XBOOLE_0,BINOP_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
registrations XBOOLE_0,SUBSET_1,STRUCT_0,LATTICES,VECTSP_1,VECTSP_4,VECTSP_5,LATTICE2,ALGSTR_0,CKB21,CKB40,CKB49,CKB55;
constructors BINOP_1,DOMAIN_1,SETWISEO,MULTOP_1,FINSOP_1,LATTICES,VECTSP_6,LMOD_5,MOD_3,LMOD_6,RELSET_1,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB34,CKB35,CKB39,CKB41,CKB44,CKB45,CKB46,CKB47,CKB48,CKB51;
requirements BOOLE,SUBSET;
begin
reserve K for Ring;
reserve r for (Scalar of K);
reserve V for (LeftMod of K);
reserve a for (Vector of V);
reserve a1 for (Vector of V);
reserve W for (Subspace of V);
reserve S1 for (Element of ( V .. W ));
reserve S2 for (Element of ( V .. W ));
reserve S for (Element of ( V . W ));
definition
let K;
let V;
let W;
let r;
let S;
func r * S -> (Element of ( V . W )) means 
:Def20: (S = ( a . W ) implies it = ( ( r * a ) . W ));
existence
proof
consider a1 such that A1: S = ( a1 . W ) by CKB52:1;
A2:now
let a;
assume S = ( a . W );
then ( a - a1 ) in W by A1,CKB38:1;
then ( r * ( a - a1 ) ) in W by VECTSP_4:21;
then ( ( r * a ) - ( r * a1 ) ) in W by VECTSP_1:23;
hence ( ( r * a ) . W ) = ( ( r * a1 ) . W ) by CKB38:1;
end;
take ( ( r * a1 ) . W );
thus thesis by A2;
end;
uniqueness
proof
let S1 being (Element of ( V . W ));
let S2 being (Element of ( V . W ));
assume that
A3: (S = ( a . W ) implies S1 = ( ( r * a ) . W ))
and
A4: (S = ( a . W ) implies S2 = ( ( r * a ) . W ));
consider a1 such that A5: S = ( a1 . W ) by CKB52:1;
thus S1 = ( ( r * a1 ) . W ) by A3,A5
.= S2 by A4,A5;
end;
end;
