environ
vocabularies SUBSET_1,XBOOLE_0,BINOP_1,FUNCT_1,MULTOP_1,FUNCSDOM,VECTSP_1,VECTSP_2,RLVECT_2,RLSUB_1,FINSEQ_1,RMOD_3,ARYTM_1,ARYTM_3,ZFMISC_1,RLVECT_3,SUPINF_2,GROUP_1,TARSKI,CARD_3,MOD_3,STRUCT_0,RLSUB_2,INCSP_1,PARTFUN1,PRELAMB,SETWISEO,LATTICES,QC_LANG1,FINSEQ_4,ALGSTR_0,RLVECT_1,RELAT_1,LMOD_7;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,STRUCT_0,ALGSTR_0,FUNCT_2,BINOP_1,FINSEQ_1,SETWISEO,SETWOP_2,LATTICES,MULTOP_1,RLVECT_1,GROUP_1,VECTSP_1,FUNCSDOM,VECTSP_2,VECTSP_4,VECTSP_5,VECTSP_6,LMOD_5,MOD_3,LMOD_6;
definitions RLVECT_1,STRUCT_0,XBOOLE_0,ALGSTR_0;
theorems BINOP_1,FUNCT_2,RLVECT_1,LMOD_5,LMOD_6,MOD_3,MULTOP_1,SETWISEO,SUBSET_1,TARSKI,VECTSP_1,VECTSP_4,VECTSP_5,VECTSP_6,ZFMISC_1,XBOOLE_0,XBOOLE_1,STRUCT_0,ALGSTR_0;
schemes BINOP_1,DOMAIN_1,FUNCT_2,XBOOLE_0,BINOP_2,CKB1,CKB2;
registrations XBOOLE_0,SUBSET_1,STRUCT_0,LATTICES,VECTSP_1,VECTSP_4,VECTSP_5,LATTICE2,ALGSTR_0;
constructors BINOP_1,DOMAIN_1,SETWISEO,MULTOP_1,FINSOP_1,LATTICES,VECTSP_6,LMOD_5,MOD_3,LMOD_6,RELSET_1;
requirements BOOLE,SUBSET;
begin
scheme TriOpEq { A() -> non empty set,F((Element of A()),(Element of A()),(Element of A())) -> set } : (for f1,f2 being (TriOp of A()) holds (((for a,b,c being (Element of A()) holds ( f1 . (a,b,c) ) = F(a,b,c)) & (for a,b,c being (Element of A()) holds ( f2 . (a,b,c) ) = F(a,b,c))) implies f1 = f2))
proof
let f1 being (TriOp of A()),f2 being (TriOp of A());
assume that
A1: (for a,b,c being (Element of A()) holds ( f1 . (a,b,c) ) = F(a,b,c))
and
A2: (for a,b,c being (Element of A()) holds ( f2 . (a,b,c) ) = F(a,b,c));
now
let a being (Element of A()),b being (Element of A()),c being (Element of A());
thus ( f1 . (a,b,c) ) = F(a,b,c) by A1
.= ( f2 . (a,b,c) ) by A2;
end;
hence thesis by MULTOP_1:3;
end;
