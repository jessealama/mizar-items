environ
vocabularies SUBSET_1,XBOOLE_0,BINOP_1,FUNCT_1,MULTOP_1,FUNCSDOM,VECTSP_1,VECTSP_2,RLVECT_2,RLSUB_1,FINSEQ_1,RMOD_3,ARYTM_1,ARYTM_3,ZFMISC_1,RLVECT_3,SUPINF_2,GROUP_1,TARSKI,CARD_3,MOD_3,STRUCT_0,RLSUB_2,INCSP_1,PARTFUN1,PRELAMB,SETWISEO,LATTICES,QC_LANG1,FINSEQ_4,ALGSTR_0,RLVECT_1,RELAT_1,LMOD_7;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,DOMAIN_1,STRUCT_0,ALGSTR_0,FUNCT_2,BINOP_1,FINSEQ_1,SETWISEO,SETWOP_2,LATTICES,MULTOP_1,RLVECT_1,GROUP_1,VECTSP_1,FUNCSDOM,VECTSP_2,VECTSP_4,VECTSP_5,VECTSP_6,LMOD_5,MOD_3,LMOD_6,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31;
definitions RLVECT_1,STRUCT_0,XBOOLE_0,ALGSTR_0,CKB18,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB30,CKB31;
theorems BINOP_1,FUNCT_2,RLVECT_1,LMOD_5,LMOD_6,MOD_3,MULTOP_1,SETWISEO,SUBSET_1,TARSKI,VECTSP_1,VECTSP_4,VECTSP_5,VECTSP_6,ZFMISC_1,XBOOLE_0,XBOOLE_1,STRUCT_0,ALGSTR_0,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB22,CKB23,CKB24,CKB26,CKB27,CKB28,CKB30,CKB31;
schemes BINOP_1,DOMAIN_1,FUNCT_2,XBOOLE_0,BINOP_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10;
registrations XBOOLE_0,SUBSET_1,STRUCT_0,LATTICES,VECTSP_1,VECTSP_4,VECTSP_5,LATTICE2,ALGSTR_0,CKB21;
constructors BINOP_1,DOMAIN_1,SETWISEO,MULTOP_1,FINSOP_1,LATTICES,VECTSP_6,LMOD_5,MOD_3,LMOD_6,RELSET_1,CKB18,CKB19,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31;
requirements BOOLE,SUBSET;
begin
reserve K for Ring;
reserve V for (LeftMod of K);
theorem
((( SubJoin V ) is  commutative  associative & ( SubJoin V ) is  having_a_unity) & ( (0). V ) = ( the_unity_wrt ( SubJoin V ) ))
proof
set S0 = ( Submodules V );
set S1 = ( SubJoin V );
reconsider L = LattStr (# (S0 qua non  empty set),(S1 qua (BinOp of S0)),(( SubMeet V ) qua (BinOp of S0)) #) as Lattice by VECTSP_5:57;
S1 = (the L_join of L);
hence S1 is  commutative  associative;
set e = ( (0). V );
reconsider e9 = ( @ e ) as (Element of (S0 qua non  empty set));
A1: e9 = e by LMOD_6:def 2;
now
let a9 being (Element of (S0 qua non  empty set));
reconsider b = a9 as (Element of S0);
reconsider a = b as  strict (Subspace of V);
thus ( S1 . (e9,a9) ) = ( e + a ) by A1,VECTSP_5:def 7
.= a9 by VECTSP_5:9;
thus ( S1 . (a9,e9) ) = ( a + e ) by A1,VECTSP_5:def 7
.= a9 by VECTSP_5:9;
end;
then A2: e9 is_a_unity_wrt (S1 qua (BinOp of S0)) by BINOP_1:3;
hence S1 is  having_a_unity by SETWISEO:def 2;
thus thesis by A1,A2,BINOP_1:def 8;
end;
