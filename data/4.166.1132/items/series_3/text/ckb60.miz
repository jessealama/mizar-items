environ
vocabularies NUMBERS,XXREAL_0,XREAL_0,ORDINAL1,SUBSET_1,SEQ_1,COMPLEX1,SQUARE_1,NEWTON,RELAT_1,ARYTM_3,ARYTM_1,CARD_1,POWER,PREPOWER,FUNCT_1,SERIES_1,VALUED_1,NAT_1,REAL_1,SERIES_3,ABIAN;
notations SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,SQUARE_1,NEWTON,REAL_1,NAT_1,PREPOWER,COMPLEX1,VALUED_1,SEQ_1,ABIAN,POWER,SERIES_1,FUNCT_2,CKB52;
definitions SQUARE_1,XCMPLX_0,CKB52;
theorems XCMPLX_1,SQUARE_1,SIN_COS2,POLYEQ_2,ABSVALUE,NEWTON,POWER,ASYMPT_1,XREAL_1,PREPOWER,FUNCT_2,SERIES_1,SEQ_1,COMPLEX1,POLYEQ_1,XXREAL_0,ABIAN,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59;
schemes NAT_1;
registrations NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,SQUARE_1,NAT_1,MEMBERED,COMPLEX1,NEWTON,VALUED_1,FUNCT_2,VALUED_0,RELSET_1,XBOOLE_0,CKB1;
constructors REAL_1,SQUARE_1,NAT_1,SEQ_1,NEWTON,PREPOWER,SERIES_1,VALUED_1,PARTFUN1,RELSET_1,BINOP_2,ABIAN,CKB52;
requirements REAL,SUBSET,BOOLE,NUMERALS,ARITHM;
begin
reserve n for (Element of ( NAT ));
reserve s for Real_Sequence;
reserve s1 for Real_Sequence;
theorem
((for n holds ((( s1 . n ) = ( 1 + ( s . n ) ) & ( s . n ) > ( - 1 )) & ( s . n ) < ( 0 ))) implies (for n holds ( 1 + ( ( Partial_Sums s ) . n ) ) <= ( ( Partial_Product s1 ) . n )))
proof
defpred X[ (Element of ( NAT )) ]
 means
( 1 + ( ( Partial_Sums s ) . $1 ) ) <= ( ( Partial_Product s1 ) . $1 );
assume A1: (for n holds ((( s1 . n ) = ( 1 + ( s . n ) ) & ( s . n ) > ( - 1 )) & ( s . n ) < ( 0 )));
A2: (for n holds (X[ n ] implies X[ ( n + 1 ) ]))
proof
let n;
A3: ( ( ( Partial_Product s1 ) . n ) * ( 1 + ( s . ( n + 1 ) ) ) ) = ( ( ( Partial_Product s1 ) . n ) * ( s1 . ( n + 1 ) ) ) by A1;
( s . ( n + 1 ) ) > ( - 1 ) by A1;
then A4: ( ( s . ( n + 1 ) ) + 1 ) > ( ( - 1 ) + 1 ) by XREAL_1:8;
assume ( 1 + ( ( Partial_Sums s ) . n ) ) <= ( ( Partial_Product s1 ) . n );
then ( ( 1 + ( ( Partial_Sums s ) . n ) ) * ( 1 + ( s . ( n + 1 ) ) ) ) <= ( ( ( Partial_Product s1 ) . n ) * ( 1 + ( s . ( n + 1 ) ) ) ) by A4,XREAL_1:64;
then A5: ( ( 1 + ( ( Partial_Sums s ) . n ) ) * ( 1 + ( s . ( n + 1 ) ) ) ) <= ( ( Partial_Product s1 ) . ( n + 1 ) ) by A3,CKB52:def 1;
( ( ( Partial_Sums s ) . n ) * ( s . ( n + 1 ) ) ) >= ( 0 ) by A1,CKB59:1;
then A6: ( ( ( ( Partial_Sums s ) . n ) * ( s . ( n + 1 ) ) ) + ( ( 1 + ( s . ( n + 1 ) ) ) + ( ( Partial_Sums s ) . n ) ) ) >= ( ( 0 ) + ( ( 1 + ( s . ( n + 1 ) ) ) + ( ( Partial_Sums s ) . n ) ) ) by XREAL_1:6;
( 1 + ( ( Partial_Sums s ) . ( n + 1 ) ) ) = ( 1 + ( ( ( Partial_Sums s ) . n ) + ( s . ( n + 1 ) ) ) ) by SERIES_1:def 1;
hence thesis by A5,A6,XXREAL_0:2;
end;
let n;
(( ( Partial_Sums s ) . ( 0 ) ) = ( s . ( 0 ) ) & ( ( Partial_Product s1 ) . ( 0 ) ) = ( s1 . ( 0 ) )) by CKB52:def 1,SERIES_1:def 1;
then A7: X[ ( 0 ) ] by A1;
(for n holds X[ n ]) from NAT_1:sch 1(A7,A2);
hence thesis;
end;
