environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,FUNCT_2,MARGREL1,EQREL_1,BVFUNC_1,BVFUNC_2,XBOOLEAN,FUNCT_1;
notations XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,FUNCT_2,EQREL_1,BVFUNC_1,BVFUNC_2;
definitions BVFUNC_1,XBOOLEAN;
theorems MARGREL1,BINARITH,BVFUNC_1,BVFUNC_2,XBOOLEAN,EQREL_1,CKB1,CKB2;
registrations XBOOLE_0,MARGREL1;
constructors BVFUNC_1,BVFUNC_2,RELSET_1;
requirements BOOLE;
begin
reserve Y for non  empty set;
reserve G for (Subset of ( PARTITIONS Y ));
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve b for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve PA for (a_partition of Y);
theorem
( a '&' b ) '<' ( ( Ex (a,PA,G) ) '&' ( Ex (b,PA,G) ) )
proof
let z being (Element of Y);
A1: ( ( a '&' b ) . z ) = ( ( a . z ) '&' ( b . z ) ) by MARGREL1:def 20;
assume A2: ( ( a '&' b ) . z ) = ( TRUE );
then A3: (( Ex (a,PA,G) ) = ( B_SUP (a,( CompF (PA,G) )) ) & ( a . z ) = ( TRUE )) by A1,BVFUNC_2:def 10,MARGREL1:12;
A4: z in ( EqClass (z,( CompF (PA,G) )) ) by EQREL_1:def 6;
( b . z ) = ( TRUE ) by A2,A1,MARGREL1:12;
then ( ( B_SUP (b,( CompF (PA,G) )) ) . z ) = ( TRUE ) by A4,BVFUNC_1:def 17;
then A5: ( ( Ex (b,PA,G) ) . z ) = ( TRUE ) by BVFUNC_2:def 10;
thus ( ( ( Ex (a,PA,G) ) '&' ( Ex (b,PA,G) ) ) . z ) = ( ( ( Ex (a,PA,G) ) . z ) '&' ( ( Ex (b,PA,G) ) . z ) ) by MARGREL1:def 20
.= ( ( TRUE ) '&' ( TRUE ) ) by A3,A4,A5,BVFUNC_1:def 17
.= ( TRUE );
end;
