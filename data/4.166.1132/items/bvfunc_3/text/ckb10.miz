environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,FUNCT_2,MARGREL1,EQREL_1,BVFUNC_1,BVFUNC_2,XBOOLEAN,FUNCT_1;
notations XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,FUNCT_2,EQREL_1,BVFUNC_1,BVFUNC_2;
definitions BVFUNC_1,XBOOLEAN;
theorems MARGREL1,BINARITH,BVFUNC_1,BVFUNC_2,XBOOLEAN,EQREL_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9;
registrations XBOOLE_0,MARGREL1;
constructors BVFUNC_1,BVFUNC_2,RELSET_1;
requirements BOOLE;
begin
reserve Y for non  empty set;
reserve G for (Subset of ( PARTITIONS Y ));
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve b for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve PA for (a_partition of Y);
Lm1:now
let Y;
let a;
let b;
let G;
let PA;
let z being (Element of Y);
assume A1: ( ( All (( a 'or' b ),PA,G) ) . z ) = ( TRUE );
assume (not (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( ( a 'or' b ) . x ) = ( TRUE ))));
then ( ( B_INF (( a 'or' b ),( CompF (PA,G) )) ) . z ) = ( FALSE ) by BVFUNC_1:def 16;
hence contradiction by A1,BVFUNC_2:def 9;
end;
theorem
( All (( a 'or' b ),PA,G) ) '<' ( ( Ex (a,PA,G) ) 'or' ( All (b,PA,G) ) )
proof
let z being (Element of Y);
assume A1: ( ( All (( a 'or' b ),PA,G) ) . z ) = ( TRUE );
per cases ;
suppose (ex x being (Element of Y) st (x in ( EqClass (z,( CompF (PA,G) )) ) & ( a . x ) = ( TRUE )));

then ( ( B_SUP (a,( CompF (PA,G) )) ) . z ) = ( TRUE ) by BVFUNC_1:def 17;
then ( ( Ex (a,PA,G) ) . z ) = ( TRUE ) by BVFUNC_2:def 10;
hence ( ( ( Ex (a,PA,G) ) 'or' ( All (b,PA,G) ) ) . z ) = ( ( TRUE ) 'or' ( ( All (b,PA,G) ) . z ) ) by BVFUNC_1:def 4
.= ( TRUE ) by BINARITH:10;
end;
suppose ((for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( b . x ) = ( TRUE ))) & (not (ex x being (Element of Y) st (x in ( EqClass (z,( CompF (PA,G) )) ) & ( a . x ) = ( TRUE )))));

then ( ( B_INF (b,( CompF (PA,G) )) ) . z ) = ( TRUE ) by BVFUNC_1:def 16;
then ( ( All (b,PA,G) ) . z ) = ( TRUE ) by BVFUNC_2:def 9;
hence ( ( ( Ex (a,PA,G) ) 'or' ( All (b,PA,G) ) ) . z ) = ( ( ( Ex (a,PA,G) ) . z ) 'or' ( TRUE ) ) by BVFUNC_1:def 4
.= ( TRUE ) by BINARITH:10;
end;
suppose A2: ((not (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( b . x ) = ( TRUE )))) & (not (ex x being (Element of Y) st (x in ( EqClass (z,( CompF (PA,G) )) ) & ( a . x ) = ( TRUE )))));

then consider x1 being (Element of Y) such that A3: x1 in ( EqClass (z,( CompF (PA,G) )) ) and A4: ( b . x1 ) <> ( TRUE );
A5: ( a . x1 ) <> ( TRUE ) by A2,A3;
A6: ( b . x1 ) = ( FALSE ) by A4,XBOOLEAN:def 3;
( ( a 'or' b ) . x1 ) = ( ( a . x1 ) 'or' ( b . x1 ) ) by BVFUNC_1:def 4
.= ( ( FALSE ) 'or' ( FALSE ) ) by A5,A6,XBOOLEAN:def 3
.= ( FALSE );
hence thesis by A1,A3,Lm1;
end;
end;
