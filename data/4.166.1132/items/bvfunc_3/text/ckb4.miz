environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,FUNCT_2,MARGREL1,EQREL_1,BVFUNC_1,BVFUNC_2,XBOOLEAN,FUNCT_1;
notations XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,FUNCT_2,EQREL_1,BVFUNC_1,BVFUNC_2;
definitions BVFUNC_1,XBOOLEAN;
theorems MARGREL1,BINARITH,BVFUNC_1,BVFUNC_2,XBOOLEAN,EQREL_1,CKB1,CKB2,CKB3;
registrations XBOOLE_0,MARGREL1;
constructors BVFUNC_1,BVFUNC_2,RELSET_1;
requirements BOOLE;
begin
reserve Y for non  empty set;
reserve G for (Subset of ( PARTITIONS Y ));
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve b for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve PA for (a_partition of Y);
theorem
( 'not' ( ( All (a,PA,G) ) '&' ( All (b,PA,G) ) ) ) = ( ( Ex (( 'not' a ),PA,G) ) 'or' ( Ex (( 'not' b ),PA,G) ) )
proof
A1: ( All (b,PA,G) ) = ( B_INF (b,( CompF (PA,G) )) ) by BVFUNC_2:def 9;
A2: ( All (a,PA,G) ) = ( B_INF (a,( CompF (PA,G) )) ) by BVFUNC_2:def 9;
A3: ( ( Ex (( 'not' a ),PA,G) ) 'or' ( Ex (( 'not' b ),PA,G) ) ) '<' ( 'not' ( ( All (a,PA,G) ) '&' ( All (b,PA,G) ) ) )
proof
let z being (Element of Y);
A4: ( ( ( Ex (( 'not' a ),PA,G) ) 'or' ( Ex (( 'not' b ),PA,G) ) ) . z ) = ( ( ( Ex (( 'not' a ),PA,G) ) . z ) 'or' ( ( Ex (( 'not' b ),PA,G) ) . z ) ) by BVFUNC_1:def 4;
A5: (( ( Ex (( 'not' b ),PA,G) ) . z ) = ( TRUE ) or ( ( Ex (( 'not' b ),PA,G) ) . z ) = ( FALSE )) by XBOOLEAN:def 3;
assume A6: ( ( ( Ex (( 'not' a ),PA,G) ) 'or' ( Ex (( 'not' b ),PA,G) ) ) . z ) = ( TRUE );
per cases  by A6,A4,A5,BINARITH:3;
suppose A7: ( ( Ex (( 'not' a ),PA,G) ) . z ) = ( TRUE );

now
assume (not (ex x being (Element of Y) st (x in ( EqClass (z,( CompF (PA,G) )) ) & ( ( 'not' a ) . x ) = ( TRUE ))));
then ( ( B_SUP (( 'not' a ),( CompF (PA,G) )) ) . z ) = ( FALSE ) by BVFUNC_1:def 17;
hence contradiction by A7,BVFUNC_2:def 10;
end;
then consider x1 being (Element of Y) such that A8: x1 in ( EqClass (z,( CompF (PA,G) )) ) and A9: ( ( 'not' a ) . x1 ) = ( TRUE );
( 'not' ( a . x1 ) ) = ( TRUE ) by A9,MARGREL1:def 19;
then A10: ( a . x1 ) = ( FALSE ) by MARGREL1:11;
thus ( ( 'not' ( ( All (a,PA,G) ) '&' ( All (b,PA,G) ) ) ) . z ) = ( 'not' ( ( ( All (a,PA,G) ) '&' ( All (b,PA,G) ) ) . z ) ) by MARGREL1:def 19
.= ( 'not' ( ( ( All (a,PA,G) ) . z ) '&' ( ( All (b,PA,G) ) . z ) ) ) by MARGREL1:def 20
.= ( 'not' ( ( FALSE ) '&' ( ( All (b,PA,G) ) . z ) ) ) by A2,A8,A10,BVFUNC_1:def 16
.= ( 'not' ( FALSE ) ) by MARGREL1:12
.= ( TRUE ) by MARGREL1:11;
end;
suppose A11: ( ( Ex (( 'not' b ),PA,G) ) . z ) = ( TRUE );

now
assume (not (ex x being (Element of Y) st (x in ( EqClass (z,( CompF (PA,G) )) ) & ( ( 'not' b ) . x ) = ( TRUE ))));
then ( ( B_SUP (( 'not' b ),( CompF (PA,G) )) ) . z ) = ( FALSE ) by BVFUNC_1:def 17;
hence contradiction by A11,BVFUNC_2:def 10;
end;
then consider x1 being (Element of Y) such that A12: x1 in ( EqClass (z,( CompF (PA,G) )) ) and A13: ( ( 'not' b ) . x1 ) = ( TRUE );
( 'not' ( b . x1 ) ) = ( TRUE ) by A13,MARGREL1:def 19;
then A14: ( b . x1 ) = ( FALSE ) by MARGREL1:11;
thus ( ( 'not' ( ( All (a,PA,G) ) '&' ( All (b,PA,G) ) ) ) . z ) = ( 'not' ( ( ( All (a,PA,G) ) '&' ( All (b,PA,G) ) ) . z ) ) by MARGREL1:def 19
.= ( 'not' ( ( ( All (a,PA,G) ) . z ) '&' ( ( All (b,PA,G) ) . z ) ) ) by MARGREL1:def 20
.= ( 'not' ( ( ( All (a,PA,G) ) . z ) '&' ( FALSE ) ) ) by A1,A12,A14,BVFUNC_1:def 16
.= ( 'not' ( FALSE ) ) by MARGREL1:12
.= ( TRUE ) by MARGREL1:11;
end;
end;
( 'not' ( ( All (a,PA,G) ) '&' ( All (b,PA,G) ) ) ) '<' ( ( Ex (( 'not' a ),PA,G) ) 'or' ( Ex (( 'not' b ),PA,G) ) )
proof
let z being (Element of Y);
assume ( ( 'not' ( ( All (a,PA,G) ) '&' ( All (b,PA,G) ) ) ) . z ) = ( TRUE );
then A15: ( 'not' ( ( ( All (a,PA,G) ) '&' ( All (b,PA,G) ) ) . z ) ) = ( TRUE ) by MARGREL1:def 19;
( ( ( All (a,PA,G) ) '&' ( All (b,PA,G) ) ) . z ) = ( ( ( All (a,PA,G) ) . z ) '&' ( ( All (b,PA,G) ) . z ) ) by MARGREL1:def 20;
then A16: ( ( ( All (a,PA,G) ) . z ) '&' ( ( All (b,PA,G) ) . z ) ) = ( FALSE ) by A15,MARGREL1:11;
per cases  by A16,MARGREL1:12;
suppose ( ( All (a,PA,G) ) . z ) = ( FALSE );

then consider x1 being (Element of Y) such that A17: x1 in ( EqClass (z,( CompF (PA,G) )) ) and A18: ( a . x1 ) <> ( TRUE ) by A2,BVFUNC_1:def 16;
( a . x1 ) = ( FALSE ) by A18,XBOOLEAN:def 3;
then ( 'not' ( a . x1 ) ) = ( TRUE ) by MARGREL1:11;
then ( ( 'not' a ) . x1 ) = ( TRUE ) by MARGREL1:def 19;
then ( ( B_SUP (( 'not' a ),( CompF (PA,G) )) ) . z ) = ( TRUE ) by A17,BVFUNC_1:def 17;
then ( ( Ex (( 'not' a ),PA,G) ) . z ) = ( TRUE ) by BVFUNC_2:def 10;
hence ( ( ( Ex (( 'not' a ),PA,G) ) 'or' ( Ex (( 'not' b ),PA,G) ) ) . z ) = ( ( TRUE ) 'or' ( ( Ex (( 'not' b ),PA,G) ) . z ) ) by BVFUNC_1:def 4
.= ( TRUE ) by BINARITH:10;
end;
suppose ( ( All (b,PA,G) ) . z ) = ( FALSE );

then consider x1 being (Element of Y) such that A19: x1 in ( EqClass (z,( CompF (PA,G) )) ) and A20: ( b . x1 ) <> ( TRUE ) by A1,BVFUNC_1:def 16;
( b . x1 ) = ( FALSE ) by A20,XBOOLEAN:def 3;
then ( 'not' ( b . x1 ) ) = ( TRUE ) by MARGREL1:11;
then ( ( 'not' b ) . x1 ) = ( TRUE ) by MARGREL1:def 19;
then ( ( B_SUP (( 'not' b ),( CompF (PA,G) )) ) . z ) = ( TRUE ) by A19,BVFUNC_1:def 17;
then ( ( Ex (( 'not' b ),PA,G) ) . z ) = ( TRUE ) by BVFUNC_2:def 10;
hence ( ( ( Ex (( 'not' a ),PA,G) ) 'or' ( Ex (( 'not' b ),PA,G) ) ) . z ) = ( ( ( Ex (( 'not' a ),PA,G) ) . z ) 'or' ( TRUE ) ) by BVFUNC_1:def 4
.= ( TRUE ) by BINARITH:10;
end;
end;
hence thesis by A3,BVFUNC_1:15;
end;
