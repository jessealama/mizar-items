environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,FUNCT_2,MARGREL1,EQREL_1,BVFUNC_1,BVFUNC_2,XBOOLEAN,FUNCT_1;
notations XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,FUNCT_2,EQREL_1,BVFUNC_1,BVFUNC_2;
definitions BVFUNC_1,XBOOLEAN;
theorems MARGREL1,BINARITH,BVFUNC_1,BVFUNC_2,XBOOLEAN,EQREL_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
registrations XBOOLE_0,MARGREL1;
constructors BVFUNC_1,BVFUNC_2,RELSET_1;
requirements BOOLE;
begin
reserve Y for non  empty set;
reserve G for (Subset of ( PARTITIONS Y ));
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve b for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve PA for (a_partition of Y);
theorem
( Ex (a,PA,G) ) '<' ( 'not' ( ( 'not' ( Ex (( a '&' b ),PA,G) ) ) '&' ( 'not' ( Ex (( a '&' ( 'not' b ) ),PA,G) ) ) ) )
proof
let z being (Element of Y);
A1: ( ( 'not' ( Ex (( a '&' ( 'not' b ) ),PA,G) ) ) . z ) = ( 'not' ( ( Ex (( a '&' ( 'not' b ) ),PA,G) ) . z ) ) by MARGREL1:def 19;
A2: ( ( 'not' ( ( 'not' ( Ex (( a '&' b ),PA,G) ) ) '&' ( 'not' ( Ex (( a '&' ( 'not' b ) ),PA,G) ) ) ) ) . z ) = ( 'not' ( ( ( 'not' ( Ex (( a '&' b ),PA,G) ) ) '&' ( 'not' ( Ex (( a '&' ( 'not' b ) ),PA,G) ) ) ) . z ) ) by MARGREL1:def 19
.= ( 'not' ( ( ( 'not' ( Ex (( a '&' b ),PA,G) ) ) . z ) '&' ( ( 'not' ( Ex (( a '&' ( 'not' b ) ),PA,G) ) ) . z ) ) ) by MARGREL1:def 20
.= ( 'not' ( ( 'not' ( ( Ex (( a '&' b ),PA,G) ) . z ) ) '&' ( 'not' ( ( Ex (( a '&' ( 'not' b ) ),PA,G) ) . z ) ) ) ) by A1,MARGREL1:def 19;
assume A3: ( ( Ex (a,PA,G) ) . z ) = ( TRUE );
now
assume (not (ex x being (Element of Y) st (x in ( EqClass (z,( CompF (PA,G) )) ) & ( a . x ) = ( TRUE ))));
then ( ( B_SUP (a,( CompF (PA,G) )) ) . z ) = ( FALSE ) by BVFUNC_1:def 17;
hence contradiction by A3,BVFUNC_2:def 10;
end;
then consider x1 being (Element of Y) such that A4: x1 in ( EqClass (z,( CompF (PA,G) )) ) and A5: ( a . x1 ) = ( TRUE );
A6: ( ( a '&' b ) . x1 ) = ( ( TRUE ) '&' ( b . x1 ) ) by A5,MARGREL1:def 20
.= ( b . x1 ) by MARGREL1:14;
A7: ( ( a '&' ( 'not' b ) ) . x1 ) = ( ( TRUE ) '&' ( ( 'not' b ) . x1 ) ) by A5,MARGREL1:def 20
.= ( ( 'not' b ) . x1 ) by MARGREL1:14;
per cases  by XBOOLEAN:def 3;
suppose ( b . x1 ) = ( TRUE );

then ( ( B_SUP (( a '&' b ),( CompF (PA,G) )) ) . z ) = ( TRUE ) by A4,A6,BVFUNC_1:def 17;
hence ( ( 'not' ( ( 'not' ( Ex (( a '&' b ),PA,G) ) ) '&' ( 'not' ( Ex (( a '&' ( 'not' b ) ),PA,G) ) ) ) ) . z ) = ( 'not' ( ( 'not' ( TRUE ) ) '&' ( 'not' ( ( Ex (( a '&' ( 'not' b ) ),PA,G) ) . z ) ) ) ) by A2,BVFUNC_2:def 10
.= ( 'not' ( ( FALSE ) '&' ( 'not' ( ( Ex (( a '&' ( 'not' b ) ),PA,G) ) . z ) ) ) ) by MARGREL1:11
.= ( 'not' ( FALSE ) ) by MARGREL1:12
.= ( TRUE ) by MARGREL1:11;
end;
suppose ( b . x1 ) = ( FALSE );

then ( ( a '&' ( 'not' b ) ) . x1 ) = ( 'not' ( FALSE ) ) by A7,MARGREL1:def 19;
then ( ( a '&' ( 'not' b ) ) . x1 ) = ( TRUE ) by MARGREL1:11;
then ( ( B_SUP (( a '&' ( 'not' b ) ),( CompF (PA,G) )) ) . z ) = ( TRUE ) by A4,BVFUNC_1:def 17;
hence ( ( 'not' ( ( 'not' ( Ex (( a '&' b ),PA,G) ) ) '&' ( 'not' ( Ex (( a '&' ( 'not' b ) ),PA,G) ) ) ) ) . z ) = ( 'not' ( ( 'not' ( ( Ex (( a '&' b ),PA,G) ) . z ) ) '&' ( 'not' ( TRUE ) ) ) ) by A2,BVFUNC_2:def 10
.= ( 'not' ( ( 'not' ( ( Ex (( a '&' b ),PA,G) ) . z ) ) '&' ( FALSE ) ) ) by MARGREL1:11
.= ( 'not' ( FALSE ) ) by MARGREL1:12
.= ( TRUE ) by MARGREL1:11;
end;
end;
