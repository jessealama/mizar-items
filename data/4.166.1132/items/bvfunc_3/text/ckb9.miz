environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,FUNCT_2,MARGREL1,EQREL_1,BVFUNC_1,BVFUNC_2,XBOOLEAN,FUNCT_1;
notations XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,FUNCT_2,EQREL_1,BVFUNC_1,BVFUNC_2;
definitions BVFUNC_1,XBOOLEAN;
theorems MARGREL1,BINARITH,BVFUNC_1,BVFUNC_2,XBOOLEAN,EQREL_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8;
registrations XBOOLE_0,MARGREL1;
constructors BVFUNC_1,BVFUNC_2,RELSET_1;
requirements BOOLE;
begin
reserve Y for non empty set;
reserve G for (Subset of ( PARTITIONS Y ));
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve b for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve PA for (a_partition of Y);
theorem
( All (( a 'or' b ),PA,G) ) '<' ( ( All (a,PA,G) ) 'or' ( Ex (b,PA,G) ) )
proof
let z being (Element of Y);
assume A1: ( ( All (( a 'or' b ),PA,G) ) . z ) = ( TRUE );
A2:now
assume (not (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( ( a 'or' b ) . x ) = ( TRUE ))));
then ( ( B_INF (( a 'or' b ),( CompF (PA,G) )) ) . z ) = ( FALSE ) by BVFUNC_1:def 16;
hence contradiction by A1,BVFUNC_2:def 9;
end;
per cases ;
suppose (ex x being (Element of Y) st (x in ( EqClass (z,( CompF (PA,G) )) ) & ( b . x ) = ( TRUE )));

then ( ( B_SUP (b,( CompF (PA,G) )) ) . z ) = ( TRUE ) by BVFUNC_1:def 17;
then ( ( Ex (b,PA,G) ) . z ) = ( TRUE ) by BVFUNC_2:def 10;
hence ( ( ( All (a,PA,G) ) 'or' ( Ex (b,PA,G) ) ) . z ) = ( ( ( All (a,PA,G) ) . z ) 'or' ( TRUE ) ) by BVFUNC_1:def 4
.= ( TRUE ) by BINARITH:10;
end;
suppose ((for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( a . x ) = ( TRUE ))) & (not (ex x being (Element of Y) st (x in ( EqClass (z,( CompF (PA,G) )) ) & ( b . x ) = ( TRUE )))));

then ( ( B_INF (a,( CompF (PA,G) )) ) . z ) = ( TRUE ) by BVFUNC_1:def 16;
then ( ( All (a,PA,G) ) . z ) = ( TRUE ) by BVFUNC_2:def 9;
hence ( ( ( All (a,PA,G) ) 'or' ( Ex (b,PA,G) ) ) . z ) = ( ( TRUE ) 'or' ( ( Ex (b,PA,G) ) . z ) ) by BVFUNC_1:def 4
.= ( TRUE ) by BINARITH:10;
end;
suppose A3: ((not (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( a . x ) = ( TRUE )))) & (not (ex x being (Element of Y) st (x in ( EqClass (z,( CompF (PA,G) )) ) & ( b . x ) = ( TRUE )))));

then consider x1 being (Element of Y) such that A4: x1 in ( EqClass (z,( CompF (PA,G) )) ) and A5: ( a . x1 ) <> ( TRUE );
A6: ( b . x1 ) <> ( TRUE ) by A3,A4;
A7: ( a . x1 ) = ( FALSE ) by A5,XBOOLEAN:def 3;
( ( a 'or' b ) . x1 ) = ( ( a . x1 ) 'or' ( b . x1 ) ) by BVFUNC_1:def 4
.= ( ( FALSE ) 'or' ( FALSE ) ) by A6,A7,XBOOLEAN:def 3
.= ( FALSE );
hence thesis by A2,A4;
end;
end;
