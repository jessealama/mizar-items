environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,FUNCT_2,MARGREL1,EQREL_1,BVFUNC_1,BVFUNC_2,XBOOLEAN,FUNCT_1;
notations XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,FUNCT_2,EQREL_1,BVFUNC_1,BVFUNC_2;
definitions BVFUNC_1,XBOOLEAN;
theorems MARGREL1,BINARITH,BVFUNC_1,BVFUNC_2,XBOOLEAN,EQREL_1;
registrations XBOOLE_0,MARGREL1;
constructors BVFUNC_1,BVFUNC_2,RELSET_1;
requirements BOOLE;
begin
reserve Y for non  empty set;
reserve G for (Subset of ( PARTITIONS Y ));
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve b for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve PA for (a_partition of Y);
theorem
( a 'imp' b ) '<' ( ( All (a,PA,G) ) 'imp' ( Ex (b,PA,G) ) )
proof
let z being (Element of Y);
A1: (( 'not' ( a . z ) ) = ( TRUE ) or ( 'not' ( a . z ) ) = ( FALSE )) by XBOOLEAN:def 3;
A2: z in ( EqClass (z,( CompF (PA,G) )) ) by EQREL_1:def 6;
assume ( ( a 'imp' b ) . z ) = ( TRUE );
then A3: ( ( 'not' ( a . z ) ) 'or' ( b . z ) ) = ( TRUE ) by BVFUNC_1:def 8;
per cases  by A3,A1,BINARITH:3;
suppose ( 'not' ( a . z ) ) = ( TRUE );

then ( a . z ) = ( FALSE ) by MARGREL1:11;
then ( ( B_INF (a,( CompF (PA,G) )) ) . z ) = ( FALSE ) by A2,BVFUNC_1:def 16;
then ( ( All (a,PA,G) ) . z ) = ( FALSE ) by BVFUNC_2:def 9;
hence ( ( ( All (a,PA,G) ) 'imp' ( Ex (b,PA,G) ) ) . z ) = ( ( 'not' ( FALSE ) ) 'or' ( ( Ex (b,PA,G) ) . z ) ) by BVFUNC_1:def 8
.= ( ( TRUE ) 'or' ( ( Ex (b,PA,G) ) . z ) ) by MARGREL1:11
.= ( TRUE ) by BINARITH:10;
end;
suppose ( b . z ) = ( TRUE );

then ( ( B_SUP (b,( CompF (PA,G) )) ) . z ) = ( TRUE ) by A2,BVFUNC_1:def 17;
then ( ( Ex (b,PA,G) ) . z ) = ( TRUE ) by BVFUNC_2:def 10;
hence ( ( ( All (a,PA,G) ) 'imp' ( Ex (b,PA,G) ) ) . z ) = ( ( 'not' ( ( All (a,PA,G) ) . z ) ) 'or' ( TRUE ) ) by BVFUNC_1:def 8
.= ( TRUE ) by BINARITH:10;
end;
end;
