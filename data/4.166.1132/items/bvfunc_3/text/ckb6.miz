environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,FUNCT_2,MARGREL1,EQREL_1,BVFUNC_1,BVFUNC_2,XBOOLEAN,FUNCT_1;
notations XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,FUNCT_2,EQREL_1,BVFUNC_1,BVFUNC_2;
definitions BVFUNC_1,XBOOLEAN;
theorems MARGREL1,BINARITH,BVFUNC_1,BVFUNC_2,XBOOLEAN,EQREL_1,CKB1,CKB2,CKB3,CKB4,CKB5;
registrations XBOOLE_0,MARGREL1;
constructors BVFUNC_1,BVFUNC_2,RELSET_1;
requirements BOOLE;
begin
reserve Y for non  empty set;
reserve G for (Subset of ( PARTITIONS Y ));
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve b for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve PA for (a_partition of Y);
theorem
( ( All (a,PA,G) ) 'or' ( All (b,PA,G) ) ) '<' ( a 'or' b )
proof
let z being (Element of Y);
A1: (( ( All (a,PA,G) ) . z ) = ( TRUE ) or ( ( All (a,PA,G) ) . z ) = ( FALSE )) by XBOOLEAN:def 3;
A2: z in ( EqClass (z,( CompF (PA,G) )) ) by EQREL_1:def 6;
assume ( ( ( All (a,PA,G) ) 'or' ( All (b,PA,G) ) ) . z ) = ( TRUE );
then A3: ( ( ( All (a,PA,G) ) . z ) 'or' ( ( All (b,PA,G) ) . z ) ) = ( TRUE ) by BVFUNC_1:def 4;
per cases  by A3,A1,BINARITH:3;
suppose A4: ( ( All (a,PA,G) ) . z ) = ( TRUE );

A5:now
assume (not (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( a . x ) = ( TRUE ))));
then ( ( B_INF (a,( CompF (PA,G) )) ) . z ) = ( FALSE ) by BVFUNC_1:def 16;
hence contradiction by A4,BVFUNC_2:def 9;
end;
thus ( ( a 'or' b ) . z ) = ( ( a . z ) 'or' ( b . z ) ) by BVFUNC_1:def 4
.= ( ( TRUE ) 'or' ( b . z ) ) by A2,A5
.= ( TRUE ) by BINARITH:10;
end;
suppose A6: ( ( All (b,PA,G) ) . z ) = ( TRUE );

A7:now
assume (not (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( b . x ) = ( TRUE ))));
then ( ( B_INF (b,( CompF (PA,G) )) ) . z ) = ( FALSE ) by BVFUNC_1:def 16;
hence contradiction by A6,BVFUNC_2:def 9;
end;
thus ( ( a 'or' b ) . z ) = ( ( a . z ) 'or' ( b . z ) ) by BVFUNC_1:def 4
.= ( ( a . z ) 'or' ( TRUE ) ) by A2,A7
.= ( TRUE ) by BINARITH:10;
end;
end;
