environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,FUNCT_2,MARGREL1,EQREL_1,BVFUNC_1,BVFUNC_2,XBOOLEAN,FUNCT_1;
notations XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,FUNCT_2,EQREL_1,BVFUNC_1,BVFUNC_2;
definitions BVFUNC_1,XBOOLEAN;
theorems MARGREL1,BINARITH,BVFUNC_1,BVFUNC_2,XBOOLEAN,EQREL_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32;
registrations XBOOLE_0,MARGREL1;
constructors BVFUNC_1,BVFUNC_2,RELSET_1;
requirements BOOLE;
begin
reserve Y for non empty set;
reserve G for (Subset of ( PARTITIONS Y ));
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve b for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve c for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve PA for (a_partition of Y);
theorem
( ( All (( c 'imp' b ),PA,G) ) '&' ( Ex (( a '&' c ),PA,G) ) ) '<' ( Ex (( a '&' b ),PA,G) )
proof
let z being (Element of Y);
assume ( ( ( All (( c 'imp' b ),PA,G) ) '&' ( Ex (( a '&' c ),PA,G) ) ) . z ) = ( TRUE );
then A1: ( ( ( All (( c 'imp' b ),PA,G) ) . z ) '&' ( ( Ex (( a '&' c ),PA,G) ) . z ) ) = ( TRUE ) by MARGREL1:def 20;
now
assume (not (ex x being (Element of Y) st (x in ( EqClass (z,( CompF (PA,G) )) ) & ( ( a '&' c ) . x ) = ( TRUE ))));
then ( ( B_SUP (( a '&' c ),( CompF (PA,G) )) ) . z ) = ( FALSE ) by BVFUNC_1:def 17;
then ( ( Ex (( a '&' c ),PA,G) ) . z ) = ( FALSE ) by BVFUNC_2:def 10;
hence contradiction by A1,MARGREL1:12;
end;
then consider x1 being (Element of Y) such that A2: x1 in ( EqClass (z,( CompF (PA,G) )) ) and A3: ( ( a '&' c ) . x1 ) = ( TRUE );
A4: ( ( a . x1 ) '&' ( c . x1 ) ) = ( TRUE ) by A3,MARGREL1:def 20;
now
assume (not (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( ( c 'imp' b ) . x ) = ( TRUE ))));
then ( ( B_INF (( c 'imp' b ),( CompF (PA,G) )) ) . z ) = ( FALSE ) by BVFUNC_1:def 16;
then ( ( All (( c 'imp' b ),PA,G) ) . z ) = ( FALSE ) by BVFUNC_2:def 9;
hence contradiction by A1,MARGREL1:12;
end;
then ( ( c 'imp' b ) . x1 ) = ( TRUE ) by A2;
then A5: ( ( 'not' ( c . x1 ) ) 'or' ( b . x1 ) ) = ( TRUE ) by BVFUNC_1:def 8;
A6: (( 'not' ( c . x1 ) ) = ( TRUE ) or ( 'not' ( c . x1 ) ) = ( FALSE )) by XBOOLEAN:def 3;
per cases  by A5,A6,A4,BINARITH:3,MARGREL1:12;
suppose ((( a . x1 ) = ( TRUE ) & ( c . x1 ) = ( TRUE )) & ( 'not' ( c . x1 ) ) = ( TRUE ));

hence thesis by MARGREL1:11;
end;
suppose ((( a . x1 ) = ( TRUE ) & ( c . x1 ) = ( TRUE )) & ( b . x1 ) = ( TRUE ));

then ( ( a '&' b ) . x1 ) = ( ( TRUE ) '&' ( TRUE ) ) by MARGREL1:def 20
.= ( TRUE );
then ( ( B_SUP (( a '&' b ),( CompF (PA,G) )) ) . z ) = ( TRUE ) by A2,BVFUNC_1:def 17;
hence thesis by BVFUNC_2:def 10;
end;
end;
