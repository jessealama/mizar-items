environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,FUNCT_2,MARGREL1,EQREL_1,BVFUNC_1,BVFUNC_2,XBOOLEAN,FUNCT_1;
notations XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,FUNCT_2,EQREL_1,BVFUNC_1,BVFUNC_2;
definitions BVFUNC_1,XBOOLEAN;
theorems MARGREL1,BINARITH,BVFUNC_1,BVFUNC_2,XBOOLEAN,EQREL_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
registrations XBOOLE_0,MARGREL1;
constructors BVFUNC_1,BVFUNC_2,RELSET_1;
requirements BOOLE;
begin
reserve Y for non empty set;
reserve G for (Subset of ( PARTITIONS Y ));
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve b for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve PA for (a_partition of Y);
theorem
( ( All (a,PA,G) ) '&' ( Ex (b,PA,G) ) ) '<' ( Ex (( a '&' b ),PA,G) )
proof
let z being (Element of Y);
assume ( ( ( All (a,PA,G) ) '&' ( Ex (b,PA,G) ) ) . z ) = ( TRUE );
then A1: ( ( ( All (a,PA,G) ) . z ) '&' ( ( Ex (b,PA,G) ) . z ) ) = ( TRUE ) by MARGREL1:def 20;
A2:now
assume (not (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( a . x ) = ( TRUE ))));
then ( ( B_INF (a,( CompF (PA,G) )) ) . z ) = ( FALSE ) by BVFUNC_1:def 16;
then ( ( All (a,PA,G) ) . z ) = ( FALSE ) by BVFUNC_2:def 9;
hence contradiction by A1,MARGREL1:12;
end;
now
assume (not (ex x being (Element of Y) st (x in ( EqClass (z,( CompF (PA,G) )) ) & ( b . x ) = ( TRUE ))));
then ( ( B_SUP (b,( CompF (PA,G) )) ) . z ) = ( FALSE ) by BVFUNC_1:def 17;
then ( ( Ex (b,PA,G) ) . z ) = ( FALSE ) by BVFUNC_2:def 10;
hence contradiction by A1,MARGREL1:12;
end;
then consider x1 being (Element of Y) such that A3: x1 in ( EqClass (z,( CompF (PA,G) )) ) and A4: ( b . x1 ) = ( TRUE );
( ( a '&' b ) . x1 ) = ( ( a . x1 ) '&' ( b . x1 ) ) by MARGREL1:def 20
.= ( ( TRUE ) '&' ( TRUE ) ) by A3,A4,A2
.= ( TRUE );
then ( ( B_SUP (( a '&' b ),( CompF (PA,G) )) ) . z ) = ( TRUE ) by A3,BVFUNC_1:def 17;
hence thesis by BVFUNC_2:def 10;
end;
