environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,FUNCT_2,MARGREL1,EQREL_1,BVFUNC_1,BVFUNC_2,XBOOLEAN,FUNCT_1;
notations XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,FUNCT_2,EQREL_1,BVFUNC_1,BVFUNC_2;
definitions BVFUNC_1,XBOOLEAN;
theorems MARGREL1,BINARITH,BVFUNC_1,BVFUNC_2,XBOOLEAN,EQREL_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15;
registrations XBOOLE_0,MARGREL1;
constructors BVFUNC_1,BVFUNC_2,RELSET_1;
requirements BOOLE;
begin
reserve Y for non empty set;
reserve G for (Subset of ( PARTITIONS Y ));
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve b for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve PA for (a_partition of Y);
theorem
( ( Ex (a,PA,G) ) 'imp' ( All (b,PA,G) ) ) '<' ( All (( a 'imp' b ),PA,G) )
proof
let z being (Element of Y);
assume ( ( ( Ex (a,PA,G) ) 'imp' ( All (b,PA,G) ) ) . z ) = ( TRUE );
then A1: ( ( 'not' ( ( Ex (a,PA,G) ) . z ) ) 'or' ( ( All (b,PA,G) ) . z ) ) = ( TRUE ) by BVFUNC_1:def 8;
per cases ;
suppose A2: (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( b . x ) = ( TRUE )));

(for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( ( a 'imp' b ) . x ) = ( TRUE )))
proof
let x being (Element of Y);
assume A3: x in ( EqClass (z,( CompF (PA,G) )) );
thus ( ( a 'imp' b ) . x ) = ( ( 'not' ( a . x ) ) 'or' ( b . x ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( a . x ) ) 'or' ( TRUE ) ) by A2,A3
.= ( TRUE ) by BINARITH:10;
end;
then ( ( B_INF (( a 'imp' b ),( CompF (PA,G) )) ) . z ) = ( TRUE ) by BVFUNC_1:def 16;
hence thesis by BVFUNC_2:def 9;
end;
suppose A4: ((ex x being (Element of Y) st (x in ( EqClass (z,( CompF (PA,G) )) ) & ( a . x ) = ( TRUE ))) & (not (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( b . x ) = ( TRUE )))));

then ( ( B_SUP (a,( CompF (PA,G) )) ) . z ) = ( TRUE ) by BVFUNC_1:def 17;
then ( ( Ex (a,PA,G) ) . z ) = ( TRUE ) by BVFUNC_2:def 10;
then A5: ( 'not' ( ( Ex (a,PA,G) ) . z ) ) = ( FALSE ) by MARGREL1:11;
( ( B_INF (b,( CompF (PA,G) )) ) . z ) = ( FALSE ) by A4,BVFUNC_1:def 16;
then ( ( All (b,PA,G) ) . z ) = ( FALSE ) by BVFUNC_2:def 9;
hence thesis by A1,A5;
end;
suppose A6: ((not (ex x being (Element of Y) st (x in ( EqClass (z,( CompF (PA,G) )) ) & ( a . x ) = ( TRUE )))) & (not (for x being (Element of Y) holds (x in ( EqClass (z,( CompF (PA,G) )) ) implies ( b . x ) = ( TRUE )))));

now
let x being (Element of Y);
assume x in ( EqClass (z,( CompF (PA,G) )) );
then A7: ( a . x ) <> ( TRUE ) by A6;
thus ( ( a 'imp' b ) . x ) = ( ( 'not' ( a . x ) ) 'or' ( b . x ) ) by BVFUNC_1:def 8
.= ( ( 'not' ( FALSE ) ) 'or' ( b . x ) ) by A7,XBOOLEAN:def 3
.= ( ( TRUE ) 'or' ( b . x ) ) by MARGREL1:11
.= ( TRUE ) by BINARITH:10;
end;
then ( ( B_INF (( a 'imp' b ),( CompF (PA,G) )) ) . z ) = ( TRUE ) by BVFUNC_1:def 16;
hence thesis by BVFUNC_2:def 9;
end;
end;
