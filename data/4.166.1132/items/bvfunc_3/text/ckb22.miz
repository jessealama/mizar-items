environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,FUNCT_2,MARGREL1,EQREL_1,BVFUNC_1,BVFUNC_2,XBOOLEAN,FUNCT_1;
notations XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,FUNCT_2,EQREL_1,BVFUNC_1,BVFUNC_2;
definitions BVFUNC_1,XBOOLEAN;
theorems MARGREL1,BINARITH,BVFUNC_1,BVFUNC_2,XBOOLEAN,EQREL_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21;
registrations XBOOLE_0,MARGREL1;
constructors BVFUNC_1,BVFUNC_2,RELSET_1;
requirements BOOLE;
begin
reserve Y for non empty set;
reserve G for (Subset of ( PARTITIONS Y ));
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve u for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve PA for (a_partition of Y);
theorem
(u is_independent_of PA,G implies ( Ex (( a 'imp' u ),PA,G) ) '<' ( ( All (a,PA,G) ) 'imp' u ))
proof
assume u is_independent_of PA,G;
then A1: u is_dependent_of ( CompF (PA,G) ) by BVFUNC_2:def 8;
let z being (Element of Y);
A2: (z in ( EqClass (z,( CompF (PA,G) )) ) & ( EqClass (z,( CompF (PA,G) )) ) in ( CompF (PA,G) )) by EQREL_1:def 6;
assume A3: ( ( Ex (( a 'imp' u ),PA,G) ) . z ) = ( TRUE );
now
assume (not (ex x being (Element of Y) st (x in ( EqClass (z,( CompF (PA,G) )) ) & ( ( a 'imp' u ) . x ) = ( TRUE ))));
then ( ( B_SUP (( a 'imp' u ),( CompF (PA,G) )) ) . z ) = ( FALSE ) by BVFUNC_1:def 17;
hence contradiction by A3,BVFUNC_2:def 10;
end;
then consider x1 being (Element of Y) such that A4: x1 in ( EqClass (z,( CompF (PA,G) )) ) and A5: ( ( a 'imp' u ) . x1 ) = ( TRUE );
A6: ( ( 'not' ( a . x1 ) ) 'or' ( u . x1 ) ) = ( TRUE ) by A5,BVFUNC_1:def 8;
A7: (( 'not' ( a . x1 ) ) = ( TRUE ) or ( 'not' ( a . x1 ) ) = ( FALSE )) by XBOOLEAN:def 3;
per cases  by A6,A7,BINARITH:3;
suppose ( 'not' ( a . x1 ) ) = ( TRUE );

then ( a . x1 ) = ( FALSE ) by MARGREL1:11;
then ( ( B_INF (a,( CompF (PA,G) )) ) . z ) = ( FALSE ) by A4,BVFUNC_1:def 16;
then ( ( All (a,PA,G) ) . z ) = ( FALSE ) by BVFUNC_2:def 9;
hence ( ( ( All (a,PA,G) ) 'imp' u ) . z ) = ( ( 'not' ( FALSE ) ) 'or' ( u . z ) ) by BVFUNC_1:def 8
.= ( ( TRUE ) 'or' ( u . z ) ) by MARGREL1:11
.= ( TRUE ) by BINARITH:10;
end;
suppose A8: ( u . x1 ) = ( TRUE );

( u . x1 ) = ( u . z ) by A1,A4,A2,BVFUNC_1:def 15;
hence ( ( ( All (a,PA,G) ) 'imp' u ) . z ) = ( ( 'not' ( ( All (a,PA,G) ) . z ) ) 'or' ( TRUE ) ) by A8,BVFUNC_1:def 8
.= ( TRUE ) by BINARITH:10;
end;
end;
