environ
vocabularies XBOOLE_0,SUBSET_1,PARTIT1,FUNCT_2,MARGREL1,EQREL_1,BVFUNC_1,BVFUNC_2,XBOOLEAN,FUNCT_1;
notations XBOOLE_0,SUBSET_1,XBOOLEAN,MARGREL1,FUNCT_2,EQREL_1,BVFUNC_1,BVFUNC_2;
definitions BVFUNC_1,XBOOLEAN;
theorems MARGREL1,BINARITH,BVFUNC_1,BVFUNC_2,XBOOLEAN,EQREL_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6;
registrations XBOOLE_0,MARGREL1;
constructors BVFUNC_1,BVFUNC_2,RELSET_1;
requirements BOOLE;
begin
reserve Y for non empty set;
reserve G for (Subset of ( PARTITIONS Y ));
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve b for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve PA for (a_partition of Y);
theorem
( a 'or' b ) '<' ( ( Ex (a,PA,G) ) 'or' ( Ex (b,PA,G) ) )
proof
A1: ( Ex (a,PA,G) ) = ( B_SUP (a,( CompF (PA,G) )) ) by BVFUNC_2:def 10;
let z being (Element of Y);
A2: ( Ex (b,PA,G) ) = ( B_SUP (b,( CompF (PA,G) )) ) by BVFUNC_2:def 10;
A3: z in ( EqClass (z,( CompF (PA,G) )) ) by EQREL_1:def 6;
assume ( ( a 'or' b ) . z ) = ( TRUE );
then A4: ( ( a . z ) 'or' ( b . z ) ) = ( TRUE ) by BVFUNC_1:def 4;
A5: (( b . z ) = ( TRUE ) or ( b . z ) = ( FALSE )) by XBOOLEAN:def 3;
per cases  by A4,A5,BINARITH:3;
suppose A6: ( a . z ) = ( TRUE );

thus ( ( ( Ex (a,PA,G) ) 'or' ( Ex (b,PA,G) ) ) . z ) = ( ( ( Ex (a,PA,G) ) . z ) 'or' ( ( Ex (b,PA,G) ) . z ) ) by BVFUNC_1:def 4
.= ( ( TRUE ) 'or' ( ( Ex (b,PA,G) ) . z ) ) by A1,A3,A6,BVFUNC_1:def 17
.= ( TRUE ) by BINARITH:10;
end;
suppose A7: ( b . z ) = ( TRUE );

thus ( ( ( Ex (a,PA,G) ) 'or' ( Ex (b,PA,G) ) ) . z ) = ( ( ( Ex (a,PA,G) ) . z ) 'or' ( ( Ex (b,PA,G) ) . z ) ) by BVFUNC_1:def 4
.= ( ( ( Ex (a,PA,G) ) . z ) 'or' ( TRUE ) ) by A2,A3,A7,BVFUNC_1:def 17
.= ( TRUE ) by BINARITH:10;
end;
end;
