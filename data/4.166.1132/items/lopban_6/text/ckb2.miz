environ
vocabularies NUMBERS,XREAL_0,ORDINAL1,CARD_1,XXREAL_0,ARYTM_3,RELAT_1,ARYTM_1,XBOOLE_0,SUBSET_1,FUNCT_1,MCART_1,ZFMISC_1,NORMSP_1,PRE_TOPC,METRIC_1,SUPINF_2,TARSKI,REAL_1,COMPLEX1,LOPBAN_1,STRUCT_0,NORMSP_2,RCOMP_1,CONVEX1,XXREAL_2,XCMPLX_0,PREPOWER,SERIES_1,NEWTON,NAT_1,CARD_3,ORDINAL2,SEQ_2,RSSPACE3,FUNCT_2,PARTFUN1,FCONT_1,PROB_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ZFMISC_1,FUNCT_1,RELSET_1,FUNCT_2,PARTFUN1,MCART_1,PRE_TOPC,DOMAIN_1,ORDINAL1,NUMBERS,XCMPLX_0,XREAL_0,COMPLEX1,REAL_1,NAT_1,STRUCT_0,XXREAL_0,SEQ_2,NEWTON,PREPOWER,SERIES_1,RLVECT_1,CONVEX1,RUSUB_4,NORMSP_0,NORMSP_1,NORMSP_2,RSSPACE3,LOPBAN_1,NFCONT_1,LOPBAN_5,KURATO_2,T_0TOPSP;
definitions TARSKI,RLVECT_1,METRIC_1,PCOMPS_1,CONVEX1,RUSUB_4,T_0TOPSP,ALGSTR_0,NORMSP_2,XBOOLE_0,LOPBAN_1,LOPBAN_5,NFCONT_1,NORMSP_0;
theorems TARSKI,XBOOLE_1,SEQ_2,RLVECT_1,XREAL_0,RELAT_1,RUSUB_4,RLTOPSP1,SERIES_1,PREPOWER,ZFMISC_1,FUNCT_2,XBOOLE_0,XREAL_1,XCMPLX_1,NORMSP_1,PRE_TOPC,NFCONT_1,XXREAL_0,FUNCT_1,NEWTON,MESFUNC1,NORMSP_2,RINFSUP1,ABSVALUE,XCMPLX_0,LOPBAN_3,ORDINAL1,SUBSET_1,RSSPACE2,LOPBAN_1,NAT_1,PROB_1,LOPBAN_5,CONVEX1,MCART_1,GRCAT_1,NORMSP_0,CKB1;
schemes FUNCT_2,RECDEF_1,NAT_1;
registrations REAL_1,XREAL_0,XXREAL_0,ORDINAL1,RELSET_1,STRUCT_0,TOPS_1,SUBSET_1,NAT_1,NORMSP_1,NORMSP_2,FUNCT_2,LOPBAN_1,NORMSP_0;
constructors XCMPLX_0,XXREAL_0,XREAL_0,ORDINAL2,TOPS_1,REAL_1,DOMAIN_1,SEQ_1,SEQ_2,PCOMPS_1,RUSUB_4,CONVEX1,RLTOPSP1,NFCONT_1,NAT_1,FUNCT_1,FUNCT_2,PSCOMP_1,PARTFUN1,NEWTON,PREPOWER,SERIES_1,NORMSP_2,RSSPACE3,LOPBAN_1,LOPBAN_5,T_0TOPSP,RELSET_1;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
scheme RecExD3 { D() -> non  empty set,A() -> (Element of D()),B() -> (Element of D()),P[set,set,set,set] } : (ex f being (Function of ( NAT ),D()) st ((( f . ( 0 ) ) = A() & ( f . 1 ) = B()) & (for n being (Element of ( NAT )) holds P[ n,( f . n ),( f . ( n + 1 ) ),( f . ( n + 2 ) ) ])))
provided
A1: (for n being (Element of ( NAT )) holds (for x,y being (Element of D()) holds (ex z being (Element of D()) st P[ n,x,y,z ])))
proof
defpred Q[ set,set,set ]
 means
(P[ $1,( $2 `1 ),( $2 `2 ),( $3 `2 ) ] & ( $2 `2 ) = ( $3 `1 ));
A2: (for n being (Element of ( NAT )) holds (for x being (Element of [: D(),D() :]) holds (ex y being (Element of [: D(),D() :]) st Q[ n,x,y ])))
proof
let n being (Element of ( NAT ));
let x being (Element of [: D(),D() :]);
set z = ( x `1 );
set w = ( x `2 );
reconsider z,w as (Element of D());
consider s being (Element of D()) such that A3: P[ n,z,w,s ] by A1;
set y = [ w,s ];
reconsider y as (Element of [: D(),D() :]);
take y;
thus thesis by A3,MCART_1:7;
end;
consider g being (Function of ( NAT ),[: D(),D() :]) such that A4: (( g . ( 0 ) ) = [ A(),B() ] & (for n being (Element of ( NAT )) holds Q[ n,( g . n ),( g . ( n + 1 ) ) ])) from RECDEF_1:sch 2(A2);
deffunc F((Element of ( NAT ))) = ( ( g . $1 ) `1 );
A5: (for x being (Element of ( NAT )) holds F(x) in D());
consider f being (Function of ( NAT ),D()) such that A6: (for x being (Element of ( NAT )) holds ( f . x ) = F(x)) from FUNCT_2:sch 8(A5);
A7:now
let n being (Element of ( NAT ));
A8: ( f . n ) = ( ( g . n ) `1 ) by A6;
Q[ ( n + 1 ),( g . ( n + 1 ) ),( g . ( ( n + 1 ) + 1 ) ) ] by A4;
then A9: ( f . ( n + 2 ) ) = ( ( g . ( n + 1 ) ) `2 ) by A6;
( f . ( n + 1 ) ) = ( ( g . ( n + 1 ) ) `1 ) by A6
.= ( ( g . n ) `2 ) by A4;
hence P[ n,( f . n ),( f . ( n + 1 ) ),( f . ( n + 2 ) ) ] by A4,A8,A9;
end;
take f;
A10: Q[ ( 0 ),( g . ( 0 ) ),( g . ( ( 0 ) + 1 ) ) ] by A4;
A11: ( f . ( 0 ) ) = ( ( g . ( 0 ) ) `1 ) by A6
.= A() by A4,MCART_1:7;
( f . 1 ) = ( ( g . 1 ) `1 ) by A6
.= B() by A4,A10,MCART_1:7;
hence thesis by A11,A7;
end;
