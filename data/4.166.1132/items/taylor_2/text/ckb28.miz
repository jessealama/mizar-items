environ
vocabularies NUMBERS,RCOMP_1,SUBSET_1,REAL_1,COMPLEX1,NEWTON,ARYTM_3,RELAT_1,CARD_1,PARTFUN1,XREAL_0,ORDINAL1,SEQ_1,TAYLOR_1,XXREAL_1,ARYTM_1,TARSKI,FDIFF_1,FUNCT_1,SERIES_1,REALSET1,XBOOLE_0,SIN_COS,XXREAL_0,VALUED_0,VALUED_1,SEQ_2,ORDINAL2,CARD_3,ABIAN,TAYLOR_2;
notations TARSKI,SUBSET_1,RELAT_1,PARTFUN1,RFUNCT_2,RCOMP_1,XXREAL_0,XREAL_0,ORDINAL1,NUMBERS,COMPLEX1,REAL_1,NAT_1,FUNCT_2,VALUED_1,SEQ_1,SEQ_2,SERIES_1,FDIFF_1,SEQFUNC,NEWTON,SIN_COS,TAYLOR_1,ABIAN,CKB2;
definitions TAYLOR_1,VALUED_1,SUBSET_1,CKB2;
theorems XBOOLE_1,ABSVALUE,PARTFUN1,XCMPLX_1,RELAT_1,RCOMP_1,SEQ_1,SEQ_2,SIN_COS,SERIES_1,FUNCT_1,RFUNCT_2,NAT_1,NEWTON,POWER,FDIFF_1,FDIFF_2,TAYLOR_1,SIN_COS2,XREAL_1,RFUNCT_1,ABIAN,COMPLEX1,XXREAL_0,VALUED_1,FUNCT_2,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
schemes NAT_1;
registrations RELSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,RCOMP_1,XBOOLE_0,VALUED_0,VALUED_1,FUNCT_2;
constructors ARYTM_0,REAL_1,NAT_1,SEQ_2,RCOMP_1,RFUNCT_2,LIMFUNC1,FDIFF_1,COMSEQ_3,SIN_COS,ABIAN,TAYLOR_1,SEQ_1,SEQFUNC,SERIES_1,VALUED_1,RELSET_1,CKB2;
requirements SUBSET,REAL,BOOLE,NUMERALS,ARITHM;
begin
theorem
Th26: (for r,x being Real holds (for m being (Element of ( NAT )) holds ((( 0 ) < r & m > ( 0 )) implies (( ( Partial_Sums ( Maclaurin (( sin ),]. ( - r ),r .[,x) ) ) . ( 2 * m ) ) = ( ( Partial_Sums ( x P_sin ) ) . ( m - 1 ) ) & ( ( Partial_Sums ( Maclaurin (( cos ),]. ( - r ),r .[,x) ) ) . ( 2 * m ) ) = ( ( Partial_Sums ( x P_cos ) ) . m )))))
proof
let r being Real,x being Real;
let m being (Element of ( NAT ));
assume that
A1: r > ( 0 )
and
A2: m > ( 0 );
A3: ( m - 1 ) is (Element of ( NAT )) by A2,NAT_1:20;
( 2 * m ) > ( 2 * ( 0 ) ) by A2,XREAL_1:68;
then A4: ( ( 2 * m ) - 1 ) is (Element of ( NAT )) by NAT_1:20;
then A5: ( ( Partial_Sums ( Maclaurin (( sin ),]. ( - r ),r .[,x) ) ) . ( 2 * m ) ) = ( ( ( Partial_Sums ( Maclaurin (( sin ),]. ( - r ),r .[,x) ) ) . ( ( 2 * m ) - 1 ) ) + ( ( Maclaurin (( sin ),]. ( - r ),r .[,x) ) . ( ( ( 2 * m ) - 1 ) + 1 ) ) ) by SERIES_1:def 1
.= ( ( ( Partial_Sums ( Maclaurin (( sin ),]. ( - r ),r .[,x) ) ) . ( ( 2 * m ) - 1 ) ) + ( 0 ) ) by A1,CKB22:1
.= ( ( Partial_Sums ( Maclaurin (( sin ),]. ( - r ),r .[,x) ) ) . ( ( 2 * ( m - 1 ) ) + 1 ) )
.= ( ( Partial_Sums ( x P_sin ) ) . ( m - 1 ) ) by A1,A3,CKB27:1;
( ( Partial_Sums ( Maclaurin (( cos ),]. ( - r ),r .[,x) ) ) . ( 2 * m ) ) = ( ( ( Partial_Sums ( Maclaurin (( cos ),]. ( - r ),r .[,x) ) ) . ( ( 2 * m ) - 1 ) ) + ( ( Maclaurin (( cos ),]. ( - r ),r .[,x) ) . ( ( ( 2 * m ) - 1 ) + 1 ) ) ) by A4,SERIES_1:def 1
.= ( ( ( Partial_Sums ( Maclaurin (( cos ),]. ( - r ),r .[,x) ) ) . ( ( 2 * m ) - 1 ) ) + ( ( ( ( - 1 ) |^ m ) * ( x |^ ( 2 * m ) ) ) / ( ( 2 * m ) ! ) ) ) by A1,CKB22:1
.= ( ( ( Partial_Sums ( Maclaurin (( cos ),]. ( - r ),r .[,x) ) ) . ( ( 2 * ( m - 1 ) ) + 1 ) ) + ( ( x P_cos ) . m ) ) by SIN_COS:def 21
.= ( ( ( Partial_Sums ( x P_cos ) ) . ( m - 1 ) ) + ( ( x P_cos ) . ( ( m - 1 ) + 1 ) ) ) by A1,A3,CKB27:1
.= ( ( Partial_Sums ( x P_cos ) ) . m ) by A3,SERIES_1:def 1;
hence thesis by A5;
end;
