environ
vocabularies NUMBERS,NAT_1,VECTSP_1,SUBSET_1,XBOOLE_0,MATRIX_1,FINSEQ_1,ALGSTR_0,RELAT_1,ARYTM_3,TARSKI,STRUCT_0,ZFMISC_1,ORDINAL4,XXREAL_0,FUNCT_1,PARTFUN1,FINSEQ_3,CARD_1,ARYTM_1,FINSEQ_2,CARD_3,GROUP_1,RFINSEQ,TREES_1,INCSP_1,MATRIX_2,MATRIX_3,SUPINF_2,LAPLACE,MATRIX11,MESFUNC1,RVSUM_1,MATHMORP,VALUED_1,FVSUM_1,MATRIXJ1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,CARD_1,XCMPLX_0,ALGSTR_0,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,PARTFUN1,FINSEQ_1,STRUCT_0,RLVECT_1,GROUP_1,VECTSP_1,FINSEQ_2,MATRIX_1,MATRIX_2,FVSUM_1,NAT_D,BINARITH,GROUP_4,MATRIX_3,MATRIX11,FINSEQOP,MATRIX13,LAPLACE,RFINSEQ,WSIERP_1,CKB7,CKB15,CKB17,CKB18,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB42,CKB43;
definitions TARSKI,FINSEQ_1,MATRIX_1,LAPLACE,MATRIX13,FVSUM_1,CKB7,CKB15,CKB27,CKB28,CKB42;
theorems CARD_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_5,FINSEQ_6,FINSEQOP,FUNCT_1,FVSUM_1,GROUP_1,GROUP_4,GOBOARD1,LAPLACE,MATRIX_1,MATRIX_2,MATRIX_3,MATRIX_9,MATRIX11,MATRIX13,MATRIX15,MATRIXR2,NAT_1,ORDINAL1,PARTFUN1,POLYNOM3,PRGCOR_1,RELAT_1,RFINSEQ,RLVECT_1,RVSUM_1,TARSKI,VECTSP_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ZFMISC_1,MATRIX_4,FUNCT_2,FUNCOP_1,MATRIXR1,CARD_1,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB19,CKB22,CKB27,CKB28,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55;
schemes FINSEQ_1,FINSEQ_2,NAT_1,MATRIX_1;
registrations XBOOLE_0,FINSET_1,STRUCT_0,VECTSP_1,ORDINAL1,XXREAL_0,NAT_1,FINSEQ_1,RELAT_1,FINSEQ_2,MATRIX13,XREAL_0,VALUED_0,CARD_1,FVSUM_1,CKB16;
constructors XXREAL_0,GROUP_4,VECTSP_7,MATRIX11,MATRIX13,LAPLACE,RFINSEQ,POLYNOM1,WSIERP_1,SEQ_1,VALUED_0,VALUED_1,REAL_1,NAT_D,BINARITH,RELSET_1,FVSUM_1,CKB7,CKB15,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB42,CKB43;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve D for non  empty set;
reserve d for (Element of D);
reserve M for (Matrix of D);
theorem
Th34: ( block_diagonal (<* M *>,d) ) = M
proof
reconsider E = ( <*> ( ( D * ) * ) ) as  Matrix-yielding (FinSequence of ( ( D * ) * )) by CKB19:1;
set ME = ( <* M *> ^ E );
set B = ( block_diagonal (<* M *>,d) );
A1: ( len B ) = ( Sum ( Len <* M *> ) ) by CKB42:def 1
.= ( len M ) by CKB34:1;
A2: ( width B ) = ( Sum ( Width <* M *> ) ) by CKB42:def 1
.= ( width M ) by CKB39:1;
ME = <* M *> by FINSEQ_1:34;
hence M = ( Segm (B,( Seg ( len M ) ),( Seg ( width M ) )) ) by CKB54:1
.= B by A1,A2,MATRIX13:46;
end;
