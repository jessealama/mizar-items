environ
vocabularies NUMBERS,NAT_1,VECTSP_1,SUBSET_1,XBOOLE_0,MATRIX_1,FINSEQ_1,ALGSTR_0,RELAT_1,ARYTM_3,TARSKI,STRUCT_0,ZFMISC_1,ORDINAL4,XXREAL_0,FUNCT_1,PARTFUN1,FINSEQ_3,CARD_1,ARYTM_1,FINSEQ_2,CARD_3,GROUP_1,RFINSEQ,TREES_1,INCSP_1,MATRIX_2,MATRIX_3,SUPINF_2,LAPLACE,MATRIX11,MESFUNC1,RVSUM_1,MATHMORP,VALUED_1,FVSUM_1,MATRIXJ1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,CARD_1,XCMPLX_0,ALGSTR_0,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,PARTFUN1,FINSEQ_1,STRUCT_0,RLVECT_1,GROUP_1,VECTSP_1,FINSEQ_2,MATRIX_1,MATRIX_2,FVSUM_1,NAT_D,BINARITH,GROUP_4,MATRIX_3,MATRIX11,FINSEQOP,MATRIX13,LAPLACE,RFINSEQ,WSIERP_1,CKB7,CKB15,CKB17,CKB18,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30;
definitions TARSKI,FINSEQ_1,MATRIX_1,LAPLACE,MATRIX13,FVSUM_1,CKB7,CKB15,CKB27,CKB28;
theorems CARD_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_5,FINSEQ_6,FINSEQOP,FUNCT_1,FVSUM_1,GROUP_1,GROUP_4,GOBOARD1,LAPLACE,MATRIX_1,MATRIX_2,MATRIX_3,MATRIX_9,MATRIX11,MATRIX13,MATRIX15,MATRIXR2,NAT_1,ORDINAL1,PARTFUN1,POLYNOM3,PRGCOR_1,RELAT_1,RFINSEQ,RLVECT_1,RVSUM_1,TARSKI,VECTSP_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ZFMISC_1,MATRIX_4,FUNCT_2,FUNCOP_1,MATRIXR1,CARD_1,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB19,CKB22,CKB27,CKB28,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41;
schemes FINSEQ_1,FINSEQ_2,NAT_1,MATRIX_1;
registrations XBOOLE_0,FINSET_1,STRUCT_0,VECTSP_1,ORDINAL1,XXREAL_0,NAT_1,FINSEQ_1,RELAT_1,FINSEQ_2,MATRIX13,XREAL_0,VALUED_0,CARD_1,FVSUM_1,CKB16;
constructors XXREAL_0,GROUP_4,VECTSP_7,MATRIX11,MATRIX13,LAPLACE,RFINSEQ,POLYNOM1,WSIERP_1,SEQ_1,VALUED_0,VALUED_1,REAL_1,NAT_D,BINARITH,RELSET_1,FVSUM_1,CKB7,CKB15,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve i for Nat;
reserve j for Nat;
reserve D for non  empty set;
reserve d for (Element of D);
reserve M1 for (Matrix of D);
reserve M2 for (Matrix of D);
reserve F for (FinSequence_of_Matrix of D);
definition
let D;
let d being (Element of D);
let F being (FinSequence_of_Matrix of D);
func block_diagonal (F,d) -> (Matrix of D) means 
:Def5: ((( len it ) = ( Sum ( Len F ) ) & ( width it ) = ( Sum ( Width F ) )) & (for i holds (for j holds ([ i,j ] in ( Indices it ) implies (((j <= ( Sum ( ( Width F ) | ( ( min (( Len F ),i) ) -' 1 ) ) ) or j > ( Sum ( ( Width F ) | ( min (( Len F ),i) ) ) )) implies ( it * (i,j) ) = d) & ((( Sum ( ( Width F ) | ( ( min (( Len F ),i) ) -' 1 ) ) ) < j & j <= ( Sum ( ( Width F ) | ( min (( Len F ),i) ) ) )) implies ( it * (i,j) ) = ( ( F . ( min (( Len F ),i) ) ) * (( i -' ( Sum ( ( Len F ) | ( ( min (( Len F ),i) ) -' 1 ) ) ) ),( j -' ( Sum ( ( Width F ) | ( ( min (( Len F ),i) ) -' 1 ) ) ) )) )))))));
existence
proof
set M = ( Sum ( Width F ) );
set N = ( Sum ( Len F ) );
set L = ( Len F );
set W = ( Width F );
defpred P[ Nat,Nat,(Element of D) ]
 means
((($2 <= ( Sum ( W | ( ( min (L,$1) ) -' 1 ) ) ) or $2 > ( Sum ( W | ( min (L,$1) ) ) )) implies $3 = d) & ((( Sum ( W | ( ( min (L,$1) ) -' 1 ) ) ) < $2 & $2 <= ( Sum ( W | ( min (L,$1) ) ) )) implies $3 = ( ( F . ( min (L,$1) ) ) * (( $1 -' ( Sum ( L | ( ( min (L,$1) ) -' 1 ) ) ) ),( $2 -' ( Sum ( W | ( ( min (L,$1) ) -' 1 ) ) ) )) )));
A1: (for i holds (for j holds ([ i,j ] in [: ( Seg N ),( Seg M ) :] implies (ex x being (Element of D) st P[ i,j,x ]))))
proof
let i;
let j;
assume that
[ i,j ] in [: ( Seg N ),( Seg M ) :];
per cases ;
suppose A2: (j <= ( Sum ( W | ( ( min (L,i) ) -' 1 ) ) ) or j > ( Sum ( W | ( min (L,i) ) ) ));

take d;
thus thesis by A2;
end;
suppose A3: (( Sum ( W | ( ( min (L,i) ) -' 1 ) ) ) < j & j <= ( Sum ( W | ( min (L,i) ) ) ));

take ( ( F . ( min (L,i) ) ) * (( i -' ( Sum ( L | ( ( min (L,i) ) -' 1 ) ) ) ),( j -' ( Sum ( W | ( ( min (L,i) ) -' 1 ) ) ) )) );
thus thesis by A3;
end;
end;
consider MM being (Matrix of N,M,D) such that A5: (for i holds (for j holds ([ i,j ] in ( Indices MM ) implies P[ i,j,( MM * (i,j) ) ]))) from MATRIX_1:sch 2(A1);
take MM;
per cases ;
suppose A6: N = ( 0 );

then M = ( 0 ) by CKB31:1;
hence thesis by A6,MATRIX_1:22;
end;
suppose N > ( 0 );

hence thesis by A5,MATRIX_1:23;
end;
end;
uniqueness
proof
set W = ( Width F );
set L = ( Len F );
let M1 being (Matrix of D);
let M2 being (Matrix of D);
assume that
A7: ( len M1 ) = ( Sum L )
and
A8: ( width M1 ) = ( Sum W )
and
A9: (for i holds (for j holds ([ i,j ] in ( Indices M1 ) implies (((j <= ( Sum ( W | ( ( min (L,i) ) -' 1 ) ) ) or j > ( Sum ( W | ( min (L,i) ) ) )) implies ( M1 * (i,j) ) = d) & ((( Sum ( W | ( ( min (L,i) ) -' 1 ) ) ) < j & j <= ( Sum ( W | ( min (L,i) ) ) )) implies ( M1 * (i,j) ) = ( ( F . ( min (L,i) ) ) * (( i -' ( Sum ( L | ( ( min (L,i) ) -' 1 ) ) ) ),( j -' ( Sum ( W | ( ( min (L,i) ) -' 1 ) ) ) )) ))))))
and
A10: ( len M2 ) = ( Sum L )
and
A11: ( width M2 ) = ( Sum W )
and
A12: (for i holds (for j holds ([ i,j ] in ( Indices M2 ) implies (((j <= ( Sum ( W | ( ( min (L,i) ) -' 1 ) ) ) or j > ( Sum ( W | ( min (L,i) ) ) )) implies ( M2 * (i,j) ) = d) & ((( Sum ( W | ( ( min (L,i) ) -' 1 ) ) ) < j & j <= ( Sum ( W | ( min (L,i) ) ) )) implies ( M2 * (i,j) ) = ( ( F . ( min (L,i) ) ) * (( i -' ( Sum ( L | ( ( min (L,i) ) -' 1 ) ) ) ),( j -' ( Sum ( W | ( ( min (L,i) ) -' 1 ) ) ) )) ))))));
A13: ( Indices M1 ) = [: ( Seg ( len M1 ) ),( Seg ( width M1 ) ) :] by FINSEQ_1:def 3
.= ( Indices M2 ) by A7,A8,A10,A11,FINSEQ_1:def 3;
now
let i;
let j;
assume that
A14: [ i,j ] in ( Indices M1 );
((j <= ( Sum ( W | ( ( min (L,i) ) -' 1 ) ) ) or j > ( Sum ( W | ( min (L,i) ) ) )) or (( Sum ( W | ( ( min (L,i) ) -' 1 ) ) ) < j & j <= ( Sum ( W | ( min (L,i) ) ) )));
then ((( M1 * (i,j) ) = d & ( M2 * (i,j) ) = d) or (( M1 * (i,j) ) = ( ( F . ( min (L,i) ) ) * (( i -' ( Sum ( L | ( ( min (L,i) ) -' 1 ) ) ) ),( j -' ( Sum ( W | ( ( min (L,i) ) -' 1 ) ) ) )) ) & ( M2 * (i,j) ) = ( ( F . ( min (L,i) ) ) * (( i -' ( Sum ( L | ( ( min (L,i) ) -' 1 ) ) ) ),( j -' ( Sum ( W | ( ( min (L,i) ) -' 1 ) ) ) )) ))) by A9,A12,A13,A14;
hence ( M1 * (i,j) ) = ( M2 * (i,j) );
end;
hence thesis by A7,A8,A10,A11,MATRIX_1:21;
end;
end;
