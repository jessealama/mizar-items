environ
vocabularies NUMBERS,NAT_1,VECTSP_1,SUBSET_1,XBOOLE_0,MATRIX_1,FINSEQ_1,ALGSTR_0,RELAT_1,ARYTM_3,TARSKI,STRUCT_0,ZFMISC_1,ORDINAL4,XXREAL_0,FUNCT_1,PARTFUN1,FINSEQ_3,CARD_1,ARYTM_1,FINSEQ_2,CARD_3,GROUP_1,RFINSEQ,TREES_1,INCSP_1,MATRIX_2,MATRIX_3,SUPINF_2,LAPLACE,MATRIX11,MESFUNC1,RVSUM_1,MATHMORP,VALUED_1,FVSUM_1,MATRIXJ1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,CARD_1,XCMPLX_0,ALGSTR_0,XXREAL_0,NAT_1,RELAT_1,FUNCT_1,PARTFUN1,FINSEQ_1,STRUCT_0,RLVECT_1,GROUP_1,VECTSP_1,FINSEQ_2,MATRIX_1,MATRIX_2,FVSUM_1,NAT_D,BINARITH,GROUP_4,MATRIX_3,MATRIX11,FINSEQOP,MATRIX13,LAPLACE,RFINSEQ,WSIERP_1,CKB7,CKB15,CKB17,CKB18,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB42,CKB43;
definitions TARSKI,FINSEQ_1,MATRIX_1,LAPLACE,MATRIX13,FVSUM_1,CKB7,CKB15,CKB27,CKB28,CKB42;
theorems CARD_2,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_5,FINSEQ_6,FINSEQOP,FUNCT_1,FVSUM_1,GROUP_1,GROUP_4,GOBOARD1,LAPLACE,MATRIX_1,MATRIX_2,MATRIX_3,MATRIX_9,MATRIX11,MATRIX13,MATRIX15,MATRIXR2,NAT_1,ORDINAL1,PARTFUN1,POLYNOM3,PRGCOR_1,RELAT_1,RFINSEQ,RLVECT_1,RVSUM_1,TARSKI,VECTSP_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ZFMISC_1,MATRIX_4,FUNCT_2,FUNCOP_1,MATRIXR1,CARD_1,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB19,CKB22,CKB27,CKB28,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60;
schemes FINSEQ_1,FINSEQ_2,NAT_1,MATRIX_1;
registrations XBOOLE_0,FINSET_1,STRUCT_0,VECTSP_1,ORDINAL1,XXREAL_0,NAT_1,FINSEQ_1,RELAT_1,FINSEQ_2,MATRIX13,XREAL_0,VALUED_0,CARD_1,FVSUM_1,CKB16;
constructors XXREAL_0,GROUP_4,VECTSP_7,MATRIX11,MATRIX13,LAPLACE,RFINSEQ,POLYNOM1,WSIERP_1,SEQ_1,VALUED_0,VALUED_1,REAL_1,NAT_D,BINARITH,RELSET_1,FVSUM_1,CKB7,CKB15,CKB20,CKB21,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB42,CKB43;
requirements ARITHM,NUMERALS,REAL,BOOLE,SUBSET;
begin
reserve D for non  empty set;
reserve d1 for (Element of D);
reserve d2 for (Element of D);
reserve M1 for (Matrix of D);
reserve M2 for (Matrix of D);
theorem
(for M1,M2,N1,N2 being (Matrix of D) holds (((((( len M1 ) = ( len N1 ) & ( width M1 ) = ( width N1 )) & ( len M2 ) = ( len N2 )) & ( width M2 ) = ( width N2 )) & ( block_diagonal (<* M1,M2 *>,d1) ) = ( block_diagonal (<* N1,N2 *>,d2) )) implies (M1 = N1 & M2 = N2)))
proof
let M1 being (Matrix of D);
let M2 being (Matrix of D);
let N1 being (Matrix of D);
let N2 being (Matrix of D);
assume that
A1: ( len M1 ) = ( len N1 )
and
A2: ( width M1 ) = ( width N1 )
and
A3: ( len M2 ) = ( len N2 )
and
A4: ( width M2 ) = ( width N2 )
and
A5: ( block_diagonal (<* M1,M2 *>,d1) ) = ( block_diagonal (<* N1,N2 *>,d2) );
set G1 = <* N1 *>;
set F1 = <* M1 *>;
A6: ( Sum ( Width F1 ) ) = ( Sum <* ( width M1 ) *> ) by CKB38:1
.= ( Sum ( Width G1 ) ) by A2,CKB38:1;
set G2 = <* N2 *>;
set F2 = <* M2 *>;
thus M1 = ( Segm (( block_diagonal (( F1 ^ F2 ),d1) ),( Seg ( len M1 ) ),( Seg ( width M1 ) )) ) by CKB54:1
.= ( Segm (( block_diagonal (( G1 ^ G2 ),d2) ),( Seg ( len N1 ) ),( Seg ( width N1 ) )) ) by A1,A2,A5
.= N1 by CKB54:1;
A7: ( Sum ( Len F1 ) ) = ( Sum <* ( len M1 ) *> ) by CKB33:1
.= ( Sum ( Len G1 ) ) by A1,CKB33:1;
thus M2 = ( Segm (( block_diagonal (( F1 ^ F2 ),d1) ),( ( Seg ( ( len M2 ) + ( Sum ( Len F1 ) ) ) ) \ ( Seg ( Sum ( Len F1 ) ) ) ),( ( Seg ( ( width M2 ) + ( Sum ( Width F1 ) ) ) ) \ ( Seg ( Sum ( Width F1 ) ) ) )) ) by CKB55:1
.= N2 by A3,A4,A5,A7,A6,CKB55:1;
end;
