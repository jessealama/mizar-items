environ
vocabularies NUMBERS,FINSEQ_1,ORDINAL4,XBOOLE_0,SUBSET_1,ARYTM_3,RELAT_1,XXREAL_0,CARD_1,NAT_1,FUNCT_1,FINSEQ_5,ARYTM_1,TARSKI,WELLORD1,PBOOLE,RELAT_2,FUNCOP_1,EQREL_1,REWRITE1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELAT_1,RELAT_2,WELLORD1,EQREL_1,FINSEQ_1,FUNCOP_1,PBOOLE,FINSEQ_5,CKB1,CKB8,CKB15,CKB16,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB59,CKB61,CKB62,CKB63,CKB64,CKB65,CKB72,CKB73,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80;
definitions TARSKI,RELAT_1,RELAT_2,WELLORD1,CKB1,CKB8,CKB15,CKB16,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB59,CKB61,CKB62,CKB63,CKB64,CKB65,CKB72,CKB73,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80;
theorems TARSKI,ZFMISC_1,NAT_1,WELLORD1,RELAT_1,RELAT_2,FUNCT_1,FUNCOP_1,FINSEQ_1,FINSEQ_5,EQREL_1,WELLORD2,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,CARD_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB70,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84;
schemes NAT_1,RELAT_1,EQREL_1,TREES_2,CKB7,CKB66;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,NAT_1,XXREAL_0,XREAL_0,FINSEQ_1,CARD_1,CKB9,CKB67,CKB68,CKB69,CKB71,CKB85;
constructors SETFAM_1,WELLORD1,XXREAL_0,XREAL_0,NAT_1,EQREL_1,PBOOLE,FINSEQ_5,RELSET_1,CKB1,CKB8,CKB15,CKB16,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB59,CKB61,CKB62,CKB63,CKB64,CKB72,CKB73,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
Lm1:now
let p being FinSequence;
let x being Nat;
assume x in ( dom p );
then A1: x in ( Seg ( len p ) ) by FINSEQ_1:def 3;
hence (x <= ( len p ) & x >= ( ( 0 ) + 1 )) by FINSEQ_1:1;
thus x > ( 0 ) by A1,FINSEQ_1:1;
end;
Lm3:now
let p being FinSequence;
let x being Nat;
assume that
A1: (x <= ( len p ) or x < ( len p ))
and
A2: (x >= 1 or x > ( 0 ));
x >= ( ( 0 ) + 1 ) by A2,NAT_1:13;
then x in ( Seg ( len p ) ) by A1,FINSEQ_1:1;
hence x in ( dom p ) by FINSEQ_1:def 3;
end;
reserve p for FinSequence;
registration
cluster  confluent ->  locally-confluent  with_Church-Rosser_property for Relation;
coherence
proof
let R being Relation;
assume A2: (for a,b being set holds (a,b are_divergent_wrt R implies a,b are_convergent_wrt R));
hereby
let a being set;
let b being set;
let c being set;
assume ([ a,b ] in R & [ a,c ] in R);
then (R reduces a,b & R reduces a,c) by CKB21:1;
then b,c are_divergent_wrt R by CKB45:def 1;
hence b,c are_convergent_wrt R by A2;
end;
let a being set;
let b being set;
given p being (RedSequence of ( R \/ ( R ~ ) )) such that
A3: ( p . 1 ) = a
and
A4: ( p . ( len p ) ) = b;

defpred P[ (Element of ( NAT )) ]
 means
($1 in ( dom p ) implies a,( p . $1 ) are_convergent_wrt R);
now
let i being (Element of ( NAT ));
assume that
A5: (i in ( dom p ) implies a,( p . i ) are_convergent_wrt R)
and
A6: ( i + 1 ) in ( dom p );
per cases ;
suppose A7: i in ( dom p );

then consider c being set such that A8: R reduces a,c and A9: R reduces ( p . i ),c by A5,CKB44:def 1;
[ ( p . i ),( p . ( i + 1 ) ) ] in ( R \/ ( R ~ ) ) by A6,A7,CKB8:def 1;
then ([ ( p . i ),( p . ( i + 1 ) ) ] in R or [ ( p . i ),( p . ( i + 1 ) ) ] in ( R ~ )) by XBOOLE_0:def 3;
then ([ ( p . i ),( p . ( i + 1 ) ) ] in R or [ ( p . ( i + 1 ) ),( p . i ) ] in R) by RELAT_1:def 7;
then (R reduces ( p . i ),( p . ( i + 1 ) ) or R reduces ( p . ( i + 1 ) ),( p . i )) by CKB21:1;
then (c,( p . ( i + 1 ) ) are_divergent_wrt R or R reduces ( p . ( i + 1 ) ),c) by A9,CKB45:def 1,CKB22:1;
then (c,( p . ( i + 1 ) ) are_convergent_wrt R or a,( p . ( i + 1 ) ) are_convergent_wrt R) by A2,A8,CKB44:def 1;
hence a,( p . ( i + 1 ) ) are_convergent_wrt R by A8,CKB55:1;
end;
suppose (not i in ( dom p ));

then (i < ( ( 0 ) + 1 ) or (i > ( len p ) & ( i + 1 ) <= ( len p ))) by A6,Lm1,Lm3;
then i = ( 0 ) by NAT_1:13;
hence a,( p . ( i + 1 ) ) are_convergent_wrt R by A3,CKB51:1;
end;
end;
then A10: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]));
A11: ( len p ) in ( dom p ) by FINSEQ_5:6;
A12: P[ ( 0 ) ] by Lm1;
(for i being (Element of ( NAT )) holds P[ i ]) from NAT_1:sch 1(A12,A10);
hence thesis by A4,A11;
end;
end;
