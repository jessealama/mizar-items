environ
vocabularies NUMBERS,FINSEQ_1,ORDINAL4,XBOOLE_0,SUBSET_1,ARYTM_3,RELAT_1,XXREAL_0,CARD_1,NAT_1,FUNCT_1,FINSEQ_5,ARYTM_1,TARSKI,WELLORD1,PBOOLE,RELAT_2,FUNCOP_1,EQREL_1,REWRITE1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELAT_1,RELAT_2,WELLORD1,EQREL_1,FINSEQ_1,FUNCOP_1,PBOOLE,FINSEQ_5,CKB1,CKB8,CKB15,CKB16,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB59,CKB61,CKB62,CKB63,CKB64,CKB65,CKB72,CKB73,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB96,CKB103,CKB104;
definitions TARSKI,RELAT_1,RELAT_2,WELLORD1,CKB1,CKB8,CKB15,CKB16,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB59,CKB61,CKB62,CKB63,CKB64,CKB65,CKB72,CKB73,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB96,CKB103,CKB104;
theorems TARSKI,ZFMISC_1,NAT_1,WELLORD1,RELAT_1,RELAT_2,FUNCT_1,FUNCOP_1,FINSEQ_1,FINSEQ_5,EQREL_1,WELLORD2,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,CARD_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB70,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB92,CKB93,CKB94,CKB96,CKB100,CKB101,CKB102,CKB103,CKB104,CKB105,CKB106;
schemes NAT_1,RELAT_1,EQREL_1,TREES_2,CKB7,CKB66;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,NAT_1,XXREAL_0,XREAL_0,FINSEQ_1,CARD_1,CKB9,CKB67,CKB68,CKB69,CKB71,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB95,CKB97,CKB98,CKB99;
constructors SETFAM_1,WELLORD1,XXREAL_0,XREAL_0,NAT_1,EQREL_1,PBOOLE,FINSEQ_5,RELSET_1,CKB1,CKB8,CKB15,CKB16,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB59,CKB61,CKB62,CKB63,CKB64,CKB72,CKB73,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB96,CKB103,CKB104;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
Lm1:now
let p being FinSequence;
let x being Nat;
assume x in ( dom p );
then A1: x in ( Seg ( len p ) ) by FINSEQ_1:def 3;
hence (x <= ( len p ) & x >= ( ( 0 ) + 1 )) by FINSEQ_1:1;
thus x > ( 0 ) by A1,FINSEQ_1:1;
end;
Lm2:now
let p being FinSequence;
let x being Nat;
assume ( x + 1 ) in ( dom p );
then ( x + 1 ) <= ( len p ) by Lm1;
hence x < ( len p ) by NAT_1:13;
end;
Lm3:now
let p being FinSequence;
let x being Nat;
assume that
A1: (x <= ( len p ) or x < ( len p ))
and
A2: (x >= 1 or x > ( 0 ));
x >= ( ( 0 ) + 1 ) by A2,NAT_1:13;
then x in ( Seg ( len p ) ) by A1,FINSEQ_1:1;
hence x in ( dom p ) by FINSEQ_1:def 3;
end;
reserve p for FinSequence;
reserve x for set;
reserve y for set;
theorem
(for R,Q being Relation holds ((for a,b being set holds ([ a,b ] in Q implies a,b are_critical_wrt R)) implies R,( R \/ Q ) are_equivalent ))
proof
let R being Relation;
let Q being Relation;
assume A1: (for a,b being set holds ([ a,b ] in Q implies a,b are_critical_wrt R));
let a being set;
let b being set;
A2: R c= ( R \/ Q ) by XBOOLE_1:7;
A3: ( R ~ ) c= ( ( R \/ Q ) ~ )
proof
let x being set;
let y being set;
assume [ x,y ] in ( R ~ );
then [ y,x ] in R by RELAT_1:def 7;
hence thesis by A2,RELAT_1:def 7;
end;
hereby
assume a,b are_convertible_wrt R;
then ( R \/ ( R ~ ) ) reduces a,b by CKB16:def 1;
then ( ( R \/ Q ) \/ ( ( R \/ Q ) ~ ) ) reduces a,b by A2,A3,CKB28:1,XBOOLE_1:13;
hence a,b are_convertible_wrt ( R \/ Q ) by CKB16:def 1;
end;
given p being (RedSequence of ( ( R \/ Q ) \/ ( ( R \/ Q ) ~ ) )) such that
A4: a = ( p . 1 )
and
A5: b = ( p . ( len p ) );

defpred Z[ (Element of ( NAT )) ]
 means
($1 in ( dom p ) implies a,( p . $1 ) are_convertible_wrt R);
now
let i being (Element of ( NAT ));
assume that
A6: (i in ( dom p ) implies a,( p . i ) are_convertible_wrt R)
and
A7: ( i + 1 ) in ( dom p );
A8: i < ( len p ) by A7,Lm2;
per cases ;
suppose i = ( 0 );

hence a,( p . ( i + 1 ) ) are_convertible_wrt R by A4,CKB33:1;
end;
suppose A9: i > ( 0 );

then i in ( dom p ) by A8,Lm3;
then [ ( p . i ),( p . ( i + 1 ) ) ] in ( ( R \/ Q ) \/ ( ( R \/ Q ) ~ ) ) by A7,CKB8:def 1;
then ([ ( p . i ),( p . ( i + 1 ) ) ] in ( R \/ Q ) or [ ( p . i ),( p . ( i + 1 ) ) ] in ( ( R \/ Q ) ~ )) by XBOOLE_0:def 3;
then ([ ( p . i ),( p . ( i + 1 ) ) ] in ( R \/ Q ) or [ ( p . ( i + 1 ) ),( p . i ) ] in ( R \/ Q )) by RELAT_1:def 7;
then ((([ ( p . i ),( p . ( i + 1 ) ) ] in R or [ ( p . i ),( p . ( i + 1 ) ) ] in Q) or [ ( p . ( i + 1 ) ),( p . i ) ] in R) or [ ( p . ( i + 1 ) ),( p . i ) ] in Q) by XBOOLE_0:def 3;
then (( p . i ),( p . ( i + 1 ) ) are_convertible_wrt R or ( p . ( i + 1 ) ),( p . i ) are_convertible_wrt R) by A1,CKB36:1,CKB105:1;
then ( p . i ),( p . ( i + 1 ) ) are_convertible_wrt R by CKB31:1;
hence a,( p . ( i + 1 ) ) are_convertible_wrt R by A6,A8,A9,Lm3,CKB37:1;
end;
end;
then A10: (for k being (Element of ( NAT )) holds (Z[ k ] implies Z[ ( k + 1 ) ]));
A11: ( len p ) in ( dom p ) by FINSEQ_5:6;
A12: Z[ ( 0 ) ] by Lm1;
(for i being (Element of ( NAT )) holds Z[ i ]) from NAT_1:sch 1(A12,A10);
hence thesis by A5,A11;
end;
