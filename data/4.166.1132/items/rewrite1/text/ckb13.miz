environ
vocabularies NUMBERS,FINSEQ_1,ORDINAL4,XBOOLE_0,SUBSET_1,ARYTM_3,RELAT_1,XXREAL_0,CARD_1,NAT_1,FUNCT_1,FINSEQ_5,ARYTM_1,TARSKI,WELLORD1,PBOOLE,RELAT_2,FUNCOP_1,EQREL_1,REWRITE1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELAT_1,RELAT_2,WELLORD1,EQREL_1,FINSEQ_1,FUNCOP_1,PBOOLE,FINSEQ_5,CKB1,CKB8;
definitions TARSKI,RELAT_1,RELAT_2,WELLORD1,CKB1,CKB8;
theorems TARSKI,ZFMISC_1,NAT_1,WELLORD1,RELAT_1,RELAT_2,FUNCT_1,FUNCOP_1,FINSEQ_1,FINSEQ_5,EQREL_1,WELLORD2,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,CARD_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB10,CKB11,CKB12;
schemes NAT_1,RELAT_1,EQREL_1,TREES_2,CKB7;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,NAT_1,XXREAL_0,XREAL_0,FINSEQ_1,CARD_1,CKB9;
constructors SETFAM_1,WELLORD1,XXREAL_0,XREAL_0,NAT_1,EQREL_1,PBOOLE,FINSEQ_5,RELSET_1,CKB1,CKB8;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
Lm1:now
let p being FinSequence;
let x being Nat;
assume x in ( dom p );
then A1: x in ( Seg ( len p ) ) by FINSEQ_1:def 3;
hence (x <= ( len p ) & x >= ( ( 0 ) + 1 )) by FINSEQ_1:1;
thus x > ( 0 ) by A1,FINSEQ_1:1;
end;
reserve p for FinSequence;
theorem
Th10: (for R being Relation holds (for p being (RedSequence of R) holds ( Rev p ) is (RedSequence of ( R ~ ))))
proof
let R being Relation;
let p being (RedSequence of R);
( len p ) > ( 0 );
hence ( len ( Rev p ) ) > ( 0 ) by FINSEQ_5:def 3;
let i being (Element of ( NAT ));
assume that
A1: i in ( dom ( Rev p ) )
and
A2: ( i + 1 ) in ( dom ( Rev p ) );
A3: ( len ( Rev p ) ) = ( len p ) by FINSEQ_5:def 3;
then A4: ( dom ( Rev p ) ) = ( Seg ( len p ) ) by FINSEQ_1:def 3;
( i + 1 ) <= ( len p ) by A3,A2,Lm1;
then reconsider k = ( ( ( len p ) - ( i + 1 ) ) + 1 ) as (Element of ( NAT )) by FINSEQ_5:1;
A5: ( dom p ) = ( Seg ( len p ) ) by FINSEQ_1:def 3;
then A6: k in ( dom p ) by A4,A2,FINSEQ_5:2;
k = ( ( len p ) - i );
then ( k + 1 ) in ( dom p ) by A4,A5,A1,FINSEQ_5:2;
then A7: [ ( p . k ),( p . ( k + 1 ) ) ] in R by A6,CKB8:def 1;
(( ( Rev p ) . i ) = ( p . ( ( ( len p ) - i ) + 1 ) ) & ( ( Rev p ) . ( i + 1 ) ) = ( p . ( ( ( len p ) - ( i + 1 ) ) + 1 ) )) by A1,A2,FINSEQ_5:def 3;
hence thesis by A7,RELAT_1:def 7;
end;
