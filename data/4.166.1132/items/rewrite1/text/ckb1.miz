environ
vocabularies NUMBERS,FINSEQ_1,ORDINAL4,XBOOLE_0,SUBSET_1,ARYTM_3,RELAT_1,XXREAL_0,CARD_1,NAT_1,FUNCT_1,FINSEQ_5,ARYTM_1,TARSKI,WELLORD1,PBOOLE,RELAT_2,FUNCOP_1,EQREL_1,REWRITE1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELAT_1,RELAT_2,WELLORD1,EQREL_1,FINSEQ_1,FUNCOP_1,PBOOLE,FINSEQ_5;
definitions TARSKI,RELAT_1,RELAT_2,WELLORD1;
theorems TARSKI,ZFMISC_1,NAT_1,WELLORD1,RELAT_1,RELAT_2,FUNCT_1,FUNCOP_1,FINSEQ_1,FINSEQ_5,EQREL_1,WELLORD2,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,CARD_1,PARTFUN1;
schemes NAT_1,RELAT_1,EQREL_1,TREES_2;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,NAT_1,XXREAL_0,XREAL_0,FINSEQ_1,CARD_1;
constructors SETFAM_1,WELLORD1,XXREAL_0,XREAL_0,NAT_1,EQREL_1,PBOOLE,FINSEQ_5,RELSET_1;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
definition
let p being FinSequence;
let q being FinSequence;
func p $^ q -> FinSequence means 
:Def1: it = ( p ^ q ) if (p = ( {} ) or q = ( {} )) otherwise (ex i being (Element of ( NAT )) st (ex r being FinSequence st ((( len p ) = ( i + 1 ) & r = ( p | ( Seg i ) )) & it = ( r ^ q ))));
existence
proof
thus ((p = ( {} ) or q = ( {} )) implies (ex r being FinSequence st r = ( p ^ q )));
assume that
A1: p <> ( {} )
and
q <> ( {} );
( len p ) >= ( ( 0 ) + 1 ) by A1,NAT_1:13;
then consider i being Nat such that A2: ( len p ) = ( 1 + i ) by NAT_1:10;
reconsider i as (Element of ( NAT )) by ORDINAL1:def 12;
reconsider r = ( p | ( Seg i ) ) as FinSequence by FINSEQ_1:15;
take ( r ^ q );
take i;
take r;
thus thesis by A2;
end;
uniqueness;
consistency;
end;
