environ
vocabularies NUMBERS,FINSEQ_1,ORDINAL4,XBOOLE_0,SUBSET_1,ARYTM_3,RELAT_1,XXREAL_0,CARD_1,NAT_1,FUNCT_1,FINSEQ_5,ARYTM_1,TARSKI,WELLORD1,PBOOLE,RELAT_2,FUNCOP_1,EQREL_1,REWRITE1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELAT_1,RELAT_2,WELLORD1,EQREL_1,FINSEQ_1,FUNCOP_1,PBOOLE,FINSEQ_5,CKB1,CKB8,CKB15,CKB16,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB59,CKB61,CKB62,CKB63,CKB64,CKB65,CKB72,CKB73,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80;
definitions TARSKI,RELAT_1,RELAT_2,WELLORD1,CKB1,CKB8,CKB15,CKB16,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB59,CKB61,CKB62,CKB63,CKB64,CKB65,CKB72,CKB73,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80;
theorems TARSKI,ZFMISC_1,NAT_1,WELLORD1,RELAT_1,RELAT_2,FUNCT_1,FUNCOP_1,FINSEQ_1,FINSEQ_5,EQREL_1,WELLORD2,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,CARD_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB70,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82;
schemes NAT_1,RELAT_1,EQREL_1,TREES_2,CKB7,CKB66;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,NAT_1,XXREAL_0,XREAL_0,FINSEQ_1,CARD_1,CKB9,CKB67,CKB68,CKB69,CKB71;
constructors SETFAM_1,WELLORD1,XXREAL_0,XREAL_0,NAT_1,EQREL_1,PBOOLE,FINSEQ_5,RELSET_1,CKB1,CKB8,CKB15,CKB16,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB59,CKB61,CKB62,CKB63,CKB64,CKB72,CKB73,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
Lm1:now
let p being FinSequence;
let x being Nat;
assume x in ( dom p );
then A1: x in ( Seg ( len p ) ) by FINSEQ_1:def 3;
hence (x <= ( len p ) & x >= ( ( 0 ) + 1 )) by FINSEQ_1:1;
thus x > ( 0 ) by A1,FINSEQ_1:1;
end;
Lm2:now
let p being FinSequence;
let x being Nat;
assume ( x + 1 ) in ( dom p );
then ( x + 1 ) <= ( len p ) by Lm1;
hence x < ( len p ) by NAT_1:13;
end;
Lm3:now
let p being FinSequence;
let x being Nat;
assume that
A1: (x <= ( len p ) or x < ( len p ))
and
A2: (x >= 1 or x > ( 0 ));
x >= ( ( 0 ) + 1 ) by A2,NAT_1:13;
then x in ( Seg ( len p ) ) by A1,FINSEQ_1:1;
hence x in ( dom p ) by FINSEQ_1:def 3;
end;
reserve p for FinSequence;
reserve q for FinSequence;
theorem
Th52: (for R being Relation holds (R is  confluent iff (for a,b,c being set holds ((R reduces a,b & [ a,c ] in R) implies b,c are_convergent_wrt R))))
proof
let R being Relation;
hereby
assume A1: R is  confluent;
let a being set;
let b being set;
let c being set;
assume that
A2: R reduces a,b
and
A3: [ a,c ] in R;
R reduces a,c by A3,CKB21:1;
then b,c are_divergent_wrt R by A2,CKB45:def 1;
hence b,c are_convergent_wrt R by A1,CKB78:def 1;
end;
assume A4: (for a,b,c being set holds ((R reduces a,b & [ a,c ] in R) implies b,c are_convergent_wrt R));
let b being set;
let c being set;
given a being set such that
A5: R reduces a,b
and
A6: R reduces a,c;

consider p being (RedSequence of R) such that A7: ( p . 1 ) = a and A8: ( p . ( len p ) ) = b by A5,CKB15:def 1;
consider q being (RedSequence of R) such that A9: ( q . 1 ) = a and A10: ( q . ( len q ) ) = c by A6,CKB15:def 1;
defpred P[ (Element of ( NAT )),(Element of ( NAT )) ]
 means
( p . $1 ),( q . $2 ) are_convergent_wrt R;
defpred Q[ (Element of ( NAT )) ]
 means
($1 in ( dom p ) implies (for j being (Element of ( NAT )) holds (j in ( dom q ) implies P[ $1,j ])));
A11: (for i being (Element of ( NAT )) holds (Q[ i ] implies Q[ ( i + 1 ) ]))
proof
let i being (Element of ( NAT ));
assume that
(i in ( dom p ) implies (for j being (Element of ( NAT )) holds (j in ( dom q ) implies P[ i,j ])))
and
A12: ( i + 1 ) in ( dom p );
defpred R[ (Element of ( NAT )) ]
 means
($1 in ( dom q ) implies P[ ( i + 1 ),$1 ]);
A13: (for j being (Element of ( NAT )) holds (R[ j ] implies R[ ( j + 1 ) ]))
proof
1 in ( dom p ) by FINSEQ_5:6;
then A14: R reduces a,( p . ( i + 1 ) ) by A7,A12,CKB23:1,NAT_1:11;
let j being (Element of ( NAT ));
assume that
A15: (j in ( dom q ) implies P[ ( i + 1 ),j ])
and
A16: ( j + 1 ) in ( dom q );
per cases ;
suppose j = ( 0 );

hence thesis by A9,A14,CKB49:1;
end;
suppose A17: j > ( 0 );

A18: j < ( len q ) by A16,Lm2;
then consider d being set such that A19: R reduces ( p . ( i + 1 ) ),d and A20: R reduces ( q . j ),d by A15,A17,CKB44:def 1,Lm3;
j in ( dom q ) by A17,A18,Lm3;
then [ ( q . j ),( q . ( j + 1 ) ) ] in R by A16,CKB8:def 1;
then d,( q . ( j + 1 ) ) are_convergent_wrt R by A4,A20;
hence thesis by A19,CKB55:1;
end;
end;
A21: R[ ( 0 ) ] by Lm1;
thus (for j being (Element of ( NAT )) holds R[ j ]) from NAT_1:sch 1(A21,A13);
end;
A22: (( len p ) in ( dom p ) & ( len q ) in ( dom q )) by FINSEQ_5:6;
A23: Q[ ( 0 ) ] by Lm1;
(for i being (Element of ( NAT )) holds Q[ i ]) from NAT_1:sch 1(A23,A11);
hence thesis by A8,A10,A22;
end;
