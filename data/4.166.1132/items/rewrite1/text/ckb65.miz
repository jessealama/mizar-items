environ
vocabularies NUMBERS,FINSEQ_1,ORDINAL4,XBOOLE_0,SUBSET_1,ARYTM_3,RELAT_1,XXREAL_0,CARD_1,NAT_1,FUNCT_1,FINSEQ_5,ARYTM_1,TARSKI,WELLORD1,PBOOLE,RELAT_2,FUNCOP_1,EQREL_1,REWRITE1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELAT_1,RELAT_2,WELLORD1,EQREL_1,FINSEQ_1,FUNCOP_1,PBOOLE,FINSEQ_5,CKB1,CKB8,CKB15,CKB16,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB59,CKB61,CKB62,CKB63,CKB64;
definitions TARSKI,RELAT_1,RELAT_2,WELLORD1,CKB1,CKB8,CKB15,CKB16,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB59,CKB61,CKB62,CKB63,CKB64;
theorems TARSKI,ZFMISC_1,NAT_1,WELLORD1,RELAT_1,RELAT_2,FUNCT_1,FUNCOP_1,FINSEQ_1,FINSEQ_5,EQREL_1,WELLORD2,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,CARD_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64;
schemes NAT_1,RELAT_1,EQREL_1,TREES_2,CKB7;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,NAT_1,XXREAL_0,XREAL_0,FINSEQ_1,CARD_1,CKB9;
constructors SETFAM_1,WELLORD1,XXREAL_0,XREAL_0,NAT_1,EQREL_1,PBOOLE,FINSEQ_5,RELSET_1,CKB1,CKB8,CKB15,CKB16,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB59,CKB61,CKB62,CKB63,CKB64;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
definition
let R being Relation;
redefine attr R is  co-well_founded
means
:Def16: (for Y being set holds ((Y c= ( field R ) & Y <> ( {} )) implies (ex a being set st (a in Y & (for b being set holds ((b in Y & a <> b) implies (not [ a,b ] in R)))))));
compatibility
proof
A1: ( field R ) = ( field ( R ~ ) ) by RELAT_1:21;
hereby
assume R is  co-well_founded;
then A2: ( R ~ ) is  well_founded by CKB62:def 1;
let Y being set;
assume (Y c= ( field R ) & Y <> ( {} ));
then consider a being set such that A3: a in Y and A4: ( ( R ~ ) -Seg a ) misses Y by A1,A2,WELLORD1:def 2;
take a;
thus a in Y by A3;
let b being set;
assume b in Y;
then (not b in ( ( R ~ ) -Seg a )) by A4,XBOOLE_0:3;
then (a = b or (not [ b,a ] in ( R ~ ))) by WELLORD1:1;
hence (a <> b implies (not [ a,b ] in R)) by RELAT_1:def 7;
end;
hereby
assume A5: (for Y being set holds ((Y c= ( field R ) & Y <> ( {} )) implies (ex a being set st (a in Y & (for b being set holds ((b in Y & a <> b) implies (not [ a,b ] in R)))))));
( R ~ ) is  well_founded
proof
let Y being set;
assume (Y c= ( field ( R ~ ) ) & Y <> ( {} ));
then consider a being set such that A6: a in Y and A7: (for b being set holds ((b in Y & a <> b) implies (not [ a,b ] in R))) by A1,A5;
take a;
thus a in Y by A6;
now
assume ( ( ( R ~ ) -Seg a ) /\ Y ) is non  empty;
then reconsider A = ( ( ( R ~ ) -Seg a ) /\ Y ) as non  empty set;
set x = the (Element of A);
A8: x in ( ( R ~ ) -Seg a ) by XBOOLE_0:def 4;
then (x in Y & x <> a) by WELLORD1:1,XBOOLE_0:def 4;
then A9: (not [ a,x ] in R) by A7;
[ x,a ] in ( R ~ ) by A8,WELLORD1:1;
hence contradiction by A9,RELAT_1:def 7;
end;
hence thesis by XBOOLE_0:def 7;
end;
hence R is  co-well_founded by CKB62:def 1;
end;
end;
end;
