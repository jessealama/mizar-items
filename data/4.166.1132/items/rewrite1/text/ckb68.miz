environ
vocabularies NUMBERS,FINSEQ_1,ORDINAL4,XBOOLE_0,SUBSET_1,ARYTM_3,RELAT_1,XXREAL_0,CARD_1,NAT_1,FUNCT_1,FINSEQ_5,ARYTM_1,TARSKI,WELLORD1,PBOOLE,RELAT_2,FUNCOP_1,EQREL_1,REWRITE1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELAT_1,RELAT_2,WELLORD1,EQREL_1,FINSEQ_1,FUNCOP_1,PBOOLE,FINSEQ_5,CKB1,CKB8,CKB15,CKB16,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB59,CKB61,CKB62,CKB63,CKB64,CKB65;
definitions TARSKI,RELAT_1,RELAT_2,WELLORD1,CKB1,CKB8,CKB15,CKB16,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB59,CKB61,CKB62,CKB63,CKB64,CKB65;
theorems TARSKI,ZFMISC_1,NAT_1,WELLORD1,RELAT_1,RELAT_2,FUNCT_1,FUNCOP_1,FINSEQ_1,FINSEQ_5,EQREL_1,WELLORD2,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,CARD_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
schemes NAT_1,RELAT_1,EQREL_1,TREES_2,CKB7,CKB66;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,NAT_1,XXREAL_0,XREAL_0,FINSEQ_1,CARD_1,CKB9,CKB67;
constructors SETFAM_1,WELLORD1,XXREAL_0,XREAL_0,NAT_1,EQREL_1,PBOOLE,FINSEQ_5,RELSET_1,CKB1,CKB8,CKB15,CKB16,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB59,CKB61,CKB62,CKB63,CKB64;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve x for set;
reserve y for set;
registration
cluster  co-well_founded  irreflexive ->  strongly-normalizing for Relation;
coherence
proof
let R being Relation;
assume that
A10: (for Y being set holds ((Y c= ( field R ) & Y <> ( {} )) implies (ex a being set st (a in Y & (for b being set holds ((b in Y & a <> b) implies (not [ a,b ] in R)))))));
assume A11: (for x being set holds (x in ( field R ) implies (not [ x,x ] in R)));
let f being (ManySortedSet of ( NAT ));
assume A12: (for i being (Element of ( NAT )) holds [ ( f . i ),( f . ( i + 1 ) ) ] in R);
A13: ( rng f ) c= ( field R )
proof
let y being set;
assume y in ( rng f );
then consider x being set such that A14: x in ( dom f ) and A15: y = ( f . x ) by FUNCT_1:def 3;
reconsider x as (Element of ( NAT )) by A14,PARTFUN1:def 2;
[ y,( f . ( x + 1 ) ) ] in R by A12,A15;
hence thesis by RELAT_1:15;
end;
A16: ( dom f ) = ( NAT ) by PARTFUN1:def 2;
then ( f . ( 0 ) ) in ( rng f ) by FUNCT_1:def 3;
then consider a being set such that A17: a in ( rng f ) and A18: (for b being set holds ((b in ( rng f ) & a <> b) implies (not [ a,b ] in R))) by A10,A13;
consider x being set such that A19: x in ( dom f ) and A20: a = ( f . x ) by A17,FUNCT_1:def 3;
reconsider x as (Element of ( NAT )) by A19,PARTFUN1:def 2;
A21: ( f . ( x + 1 ) ) in ( rng f ) by A16,FUNCT_1:def 3;
A22: [ a,( f . ( x + 1 ) ) ] in R by A12,A20;
then a <> ( f . ( x + 1 ) ) by A11,A13,A17;
hence contradiction by A18,A22,A21;
end;
end;
