environ
vocabularies NUMBERS,FINSEQ_1,ORDINAL4,XBOOLE_0,SUBSET_1,ARYTM_3,RELAT_1,XXREAL_0,CARD_1,NAT_1,FUNCT_1,FINSEQ_5,ARYTM_1,TARSKI,WELLORD1,PBOOLE,RELAT_2,FUNCOP_1,EQREL_1,REWRITE1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELAT_1,RELAT_2,WELLORD1,EQREL_1,FINSEQ_1,FUNCOP_1,PBOOLE,FINSEQ_5,CKB1,CKB8,CKB15,CKB16;
definitions TARSKI,RELAT_1,RELAT_2,WELLORD1,CKB1,CKB8,CKB15,CKB16;
theorems TARSKI,ZFMISC_1,NAT_1,WELLORD1,RELAT_1,RELAT_2,FUNCT_1,FUNCOP_1,FINSEQ_1,FINSEQ_5,EQREL_1,WELLORD2,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,CARD_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
schemes NAT_1,RELAT_1,EQREL_1,TREES_2,CKB7;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,NAT_1,XXREAL_0,XREAL_0,FINSEQ_1,CARD_1,CKB9;
constructors SETFAM_1,WELLORD1,XXREAL_0,XREAL_0,NAT_1,EQREL_1,PBOOLE,FINSEQ_5,RELSET_1,CKB1,CKB8,CKB15,CKB16;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
Lm1:now
let p being FinSequence;
let x being Nat;
assume x in ( dom p );
then A1: x in ( Seg ( len p ) ) by FINSEQ_1:def 3;
hence (x <= ( len p ) & x >= ( ( 0 ) + 1 )) by FINSEQ_1:1;
thus x > ( 0 ) by A1,FINSEQ_1:1;
end;
Lm2:now
let p being FinSequence;
let x being Nat;
assume ( x + 1 ) in ( dom p );
then ( x + 1 ) <= ( len p ) by Lm1;
hence x < ( len p ) by NAT_1:13;
end;
Lm3:now
let p being FinSequence;
let x being Nat;
assume that
A1: (x <= ( len p ) or x < ( len p ))
and
A2: (x >= 1 or x > ( 0 ));
x >= ( ( 0 ) + 1 ) by A2,NAT_1:13;
then x in ( Seg ( len p ) ) by A1,FINSEQ_1:1;
hence x in ( dom p ) by FINSEQ_1:def 3;
end;
reserve p for FinSequence;
theorem
Th22: (for R being Relation holds (for a,b being set holds (R reduces a,b iff ( R [*] ) reduces a,b)))
proof
let R being Relation;
let a being set;
let b being set;
(R reduces a,b iff (a = b or [ a,b ] in ( R [*] ))) by CKB26:1;
hence (R reduces a,b implies ( R [*] ) reduces a,b) by CKB18:1,CKB21:1;
given p being (RedSequence of ( R [*] )) such that
A1: a = ( p . 1 )
and
A2: b = ( p . ( len p ) );

defpred P[ (Element of ( NAT )) ]
 means
($1 in ( dom p ) implies R reduces a,( p . $1 ));
now
let i being (Element of ( NAT ));
assume that
A3: (i in ( dom p ) implies R reduces a,( p . i ))
and
A4: ( i + 1 ) in ( dom p );
A5: i < ( len p ) by A4,Lm2;
per cases ;
suppose i = ( 0 );

hence R reduces a,( p . ( i + 1 ) ) by A1,CKB18:1;
end;
suppose A6: i > ( 0 );

then i in ( dom p ) by A5,Lm3;
then [ ( p . i ),( p . ( i + 1 ) ) ] in ( R [*] ) by A4,CKB8:def 1;
then R reduces ( p . i ),( p . ( i + 1 ) ) by CKB26:1;
hence R reduces a,( p . ( i + 1 ) ) by A3,A5,A6,Lm3,CKB22:1;
end;
end;
then A7: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]));
A8: ( len p ) in ( dom p ) by FINSEQ_5:6;
A9: P[ ( 0 ) ] by Lm1;
(for i being (Element of ( NAT )) holds P[ i ]) from NAT_1:sch 1(A9,A7);
hence thesis by A2,A8;
end;
