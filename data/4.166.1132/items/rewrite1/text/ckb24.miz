environ
vocabularies NUMBERS,FINSEQ_1,ORDINAL4,XBOOLE_0,SUBSET_1,ARYTM_3,RELAT_1,XXREAL_0,CARD_1,NAT_1,FUNCT_1,FINSEQ_5,ARYTM_1,TARSKI,WELLORD1,PBOOLE,RELAT_2,FUNCOP_1,EQREL_1,REWRITE1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELAT_1,RELAT_2,WELLORD1,EQREL_1,FINSEQ_1,FUNCOP_1,PBOOLE,FINSEQ_5,CKB1,CKB8,CKB15,CKB16;
definitions TARSKI,RELAT_1,RELAT_2,WELLORD1,CKB1,CKB8,CKB15,CKB16;
theorems TARSKI,ZFMISC_1,NAT_1,WELLORD1,RELAT_1,RELAT_2,FUNCT_1,FUNCOP_1,FINSEQ_1,FINSEQ_5,EQREL_1,WELLORD2,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,CARD_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23;
schemes NAT_1,RELAT_1,EQREL_1,TREES_2,CKB7;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,NAT_1,XXREAL_0,XREAL_0,FINSEQ_1,CARD_1,CKB9;
constructors SETFAM_1,WELLORD1,XXREAL_0,XREAL_0,NAT_1,EQREL_1,PBOOLE,FINSEQ_5,RELSET_1,CKB1,CKB8,CKB15,CKB16;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
Lm1:now
let p being FinSequence;
let x being Nat;
assume x in ( dom p );
then A1: x in ( Seg ( len p ) ) by FINSEQ_1:def 3;
hence (x <= ( len p ) & x >= ( ( 0 ) + 1 )) by FINSEQ_1:1;
thus x > ( 0 ) by A1,FINSEQ_1:1;
end;
Lm2:now
let p being FinSequence;
let x being Nat;
assume ( x + 1 ) in ( dom p );
then ( x + 1 ) <= ( len p ) by Lm1;
hence x < ( len p ) by NAT_1:13;
end;
Lm3:now
let p being FinSequence;
let x being Nat;
assume that
A1: (x <= ( len p ) or x < ( len p ))
and
A2: (x >= 1 or x > ( 0 ));
x >= ( ( 0 ) + 1 ) by A2,NAT_1:13;
then x in ( Seg ( len p ) ) by A1,FINSEQ_1:1;
hence x in ( dom p ) by FINSEQ_1:def 3;
end;
Lm4:now
let p being FinSequence;
let x being Nat;
assume x < ( len p );
then ( x + 1 ) <= ( len p ) by NAT_1:13;
hence ( x + 1 ) in ( dom p ) by Lm3;
end;
reserve p for FinSequence;
theorem
Th19: (for R being Relation holds (for a,b being set holds ((R reduces a,b & a <> b) implies (a in ( field R ) & b in ( field R )))))
proof
let R being Relation;
let a being set;
let b being set;
given p being (RedSequence of R) such that
A1: a = ( p . 1 )
and
A2: b = ( p . ( len p ) );

A3: ( len p ) >= ( ( 0 ) + 1 ) by NAT_1:13;
assume a <> b;
then ( len p ) > 1 by A1,A2,A3,XXREAL_0:1;
then A4: ( 1 + 1 ) in ( dom p ) by Lm4;
1 in ( dom p ) by A3,Lm3;
then A5: [ a,( p . 2 ) ] in R by A1,A4,CKB8:def 1;
hence a in ( field R ) by RELAT_1:15;
defpred P[ (Element of ( NAT )) ]
 means
($1 in ( dom p ) implies ( p . $1 ) in ( field R ));
A6: ( len p ) in ( dom p ) by FINSEQ_5:6;
now
let i being (Element of ( NAT ));
assume that
(i in ( dom p ) implies ( p . i ) in ( field R ))
and
A7: ( i + 1 ) in ( dom p );
A8: i < ( len p ) by A7,Lm2;
per cases ;
suppose i = ( 0 );

hence ( p . ( i + 1 ) ) in ( field R ) by A1,A5,RELAT_1:15;
end;
suppose i > ( 0 );

then i in ( dom p ) by A8,Lm3;
then [ ( p . i ),( p . ( i + 1 ) ) ] in R by A7,CKB8:def 1;
hence ( p . ( i + 1 ) ) in ( field R ) by RELAT_1:15;
end;
end;
then A9: (for k being (Element of ( NAT )) holds (P[ k ] implies P[ ( k + 1 ) ]));
A10: P[ ( 0 ) ] by Lm1;
(for i being (Element of ( NAT )) holds P[ i ]) from NAT_1:sch 1(A10,A9);
hence thesis by A2,A6;
end;
