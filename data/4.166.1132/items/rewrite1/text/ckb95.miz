environ
vocabularies NUMBERS,FINSEQ_1,ORDINAL4,XBOOLE_0,SUBSET_1,ARYTM_3,RELAT_1,XXREAL_0,CARD_1,NAT_1,FUNCT_1,FINSEQ_5,ARYTM_1,TARSKI,WELLORD1,PBOOLE,RELAT_2,FUNCOP_1,EQREL_1,REWRITE1;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELAT_1,RELAT_2,WELLORD1,EQREL_1,FINSEQ_1,FUNCOP_1,PBOOLE,FINSEQ_5,CKB1,CKB8,CKB15,CKB16,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB59,CKB61,CKB62,CKB63,CKB64,CKB65,CKB72,CKB73,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80;
definitions TARSKI,RELAT_1,RELAT_2,WELLORD1,CKB1,CKB8,CKB15,CKB16,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB59,CKB61,CKB62,CKB63,CKB64,CKB65,CKB72,CKB73,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80;
theorems TARSKI,ZFMISC_1,NAT_1,WELLORD1,RELAT_1,RELAT_2,FUNCT_1,FUNCOP_1,FINSEQ_1,FINSEQ_5,EQREL_1,WELLORD2,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,CARD_1,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65,CKB70,CKB72,CKB73,CKB74,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB92,CKB93,CKB94;
schemes NAT_1,RELAT_1,EQREL_1,TREES_2,CKB7,CKB66;
registrations XBOOLE_0,RELAT_1,FUNCT_1,ORDINAL1,PARTFUN1,NAT_1,XXREAL_0,XREAL_0,FINSEQ_1,CARD_1,CKB9,CKB67,CKB68,CKB69,CKB71,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91;
constructors SETFAM_1,WELLORD1,XXREAL_0,XREAL_0,NAT_1,EQREL_1,PBOOLE,FINSEQ_5,RELSET_1,CKB1,CKB8,CKB15,CKB16,CKB40,CKB43,CKB44,CKB45,CKB46,CKB47,CKB59,CKB61,CKB62,CKB63,CKB64,CKB72,CKB73,CKB75,CKB76,CKB77,CKB78,CKB79,CKB80;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
Lm3:now
let p being FinSequence;
let x being Nat;
assume that
A1: (x <= ( len p ) or x < ( len p ))
and
A2: (x >= 1 or x > ( 0 ));
x >= ( ( 0 ) + 1 ) by A2,NAT_1:13;
then x in ( Seg ( len p ) ) by A1,FINSEQ_1:1;
hence x in ( dom p ) by FINSEQ_1:def 3;
end;
reserve p for FinSequence;
reserve q for FinSequence;
registration
cluster  strongly-normalizing  locally-confluent ->  confluent for Relation;
coherence
proof
let R being Relation;
assume A1: R is  strongly-normalizing;
defpred P[ set ]
 means
(for b,c being set holds ((R reduces $1,b & R reduces $1,c) implies b,c are_convergent_wrt R));
assume A2: (for a,b,c being set holds (([ a,b ] in R & [ a,c ] in R) implies b,c are_convergent_wrt R));
A3: (for a being set holds ((for b being set holds (([ a,b ] in R & a <> b) implies P[ b ])) implies P[ a ]))
proof
let a being set;
assume A4: (for b being set holds (([ a,b ] in R & a <> b) implies P[ b ]));
let b being set;
let c being set;
assume that
A5: R reduces a,b
and
A6: R reduces a,c;
consider p being (RedSequence of R) such that A7: a = ( p . 1 ) and A8: b = ( p . ( len p ) ) by A5,CKB15:def 1;
A9: ( len p ) >= ( ( 0 ) + 1 ) by NAT_1:13;
consider q being (RedSequence of R) such that A10: a = ( q . 1 ) and A11: c = ( q . ( len q ) ) by A6,CKB15:def 1;
A12: ( len q ) >= ( ( 0 ) + 1 ) by NAT_1:13;
per cases ;
suppose ( len p ) = 1;

hence thesis by A6,A7,A8,CKB49:1;
end;
suppose ( len q ) = 1;

hence thesis by A5,A10,A11,CKB49:1;
end;
suppose A13: (( len p ) <> 1 & ( len q ) <> 1);

then ( len q ) > 1 by A12,XXREAL_0:1;
then A14: ( 1 + 1 ) <= ( len q ) by NAT_1:13;
then A15: ( 1 + 1 ) in ( dom q ) by Lm3;
( len q ) in ( dom q ) by FINSEQ_5:6;
then A16: R reduces ( q . 2 ),c by A11,A14,A15,CKB23:1;
( len p ) > 1 by A9,A13,XXREAL_0:1;
then A17: ( 1 + 1 ) <= ( len p ) by NAT_1:13;
then A18: ( 1 + 1 ) in ( dom p ) by Lm3;
( len p ) in ( dom p ) by FINSEQ_5:6;
then A19: R reduces ( p . 2 ),b by A8,A17,A18,CKB23:1;
1 in ( dom p ) by A9,Lm3;
then A20: [ a,( p . 2 ) ] in R by A7,A18,CKB8:def 1;
then A21: a in ( field R ) by RELAT_1:15;
1 in ( dom q ) by A12,Lm3;
then A22: [ a,( q . 2 ) ] in R by A10,A15,CKB8:def 1;
then ( p . 2 ),( q . 2 ) are_convergent_wrt R by A2,A20;
then consider d being set such that A23: R reduces ( p . 2 ),d and A24: R reduces ( q . 2 ),d by CKB44:def 1;
A25: R is_irreflexive_in ( field R ) by A1,RELAT_2:def 10;
then A26: a <> ( q . 2 ) by A22,A21,RELAT_2:def 2;
a <> ( p . 2 ) by A20,A21,A25,RELAT_2:def 2;
then b,d are_convergent_wrt R by A4,A20,A23,A19;
then consider e being set such that A27: R reduces b,e and A28: R reduces d,e by CKB44:def 1;
R reduces ( q . 2 ),e by A24,A28,CKB22:1;
then e,c are_convergent_wrt R by A4,A22,A26,A16;
hence thesis by A27,CKB55:1;
end;
end;
A29: R is  co-well_founded by A1;
A30: (for a being set holds (a in ( field R ) implies P[ a ])) from CKB66:sch 1(A29,A3);
given a0 being set,b0 being set such that
A31: a0,b0 are_divergent_wrt R
and
A32: (not a0,b0 are_convergent_wrt R);

consider c0 being set such that A33: (R reduces c0,a0 & R reduces c0,b0) by A31,CKB45:def 1;
(a0 <> c0 or b0 <> c0) by A32,CKB51:1;
then c0 in ( field R ) by A33,CKB24:1;
hence thesis by A32,A33,A30;
end;
end;
