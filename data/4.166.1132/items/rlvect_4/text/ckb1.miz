environ
vocabularies REAL_1,RLVECT_1,RLSUB_1,XBOOLE_0,SUBSET_1,FUNCT_1,RLVECT_2,CARD_1,STRUCT_0,NUMBERS,FUNCT_2,TARSKI,ARYTM_3,ARYTM_1,SUPINF_2,RELAT_1,CARD_3,FINSEQ_1,VALUED_1,RLVECT_3;
notations TARSKI,XBOOLE_0,SUBSET_1,NUMBERS,FINSEQ_1,FUNCT_1,FUNCT_2,REAL_1,DOMAIN_1,FINSEQ_4,STRUCT_0,RLSUB_1,RLVECT_1,RLVECT_2,RLVECT_3;
definitions RLVECT_3,TARSKI,XBOOLE_0,RLVECT_1;
theorems ENUMSET1,FINSEQ_1,FINSEQ_3,RLSUB_1,RLSUB_2,RLVECT_1,RLVECT_2,RLVECT_3,SETWISEO,TARSKI,ZFMISC_1,FUNCT_2,XBOOLE_0,XBOOLE_1,XCMPLX_0,XCMPLX_1,FINSEQ_2;
schemes FUNCT_2;
registrations RELSET_1,FINSET_1,NUMBERS,STRUCT_0,REAL_1,ORDINAL1,XREAL_0;
constructors DOMAIN_1,REAL_1,FINSEQ_4,RLVECT_2,RLVECT_3,RELSET_1;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve x for set;
scheme LambdaSep3 { D,R() -> non  empty set,A1,A2,A3() -> (Element of D()),B1,B2,B3() -> (Element of R()),F(set) -> (Element of R()) } : (ex f being (Function of D(),R()) st (((( f . A1() ) = B1() & ( f . A2() ) = B2()) & ( f . A3() ) = B3()) & (for C being (Element of D()) holds (((C <> A1() & C <> A2()) & C <> A3()) implies ( f . C ) = F(C)))))
provided
A1: A1() <> A2()
and
A2: A1() <> A3()
and
A3: A2() <> A3()
proof
defpred P[ (Element of D()),set ]
 means
(((($1 = A1() implies $2 = B1()) & ($1 = A2() implies $2 = B2())) & ($1 = A3() implies $2 = B3())) & ((($1 <> A1() & $1 <> A2()) & $1 <> A3()) implies $2 = F($1)));
A4: (for x being (Element of D()) holds (ex y being (Element of R()) st P[ x,y ]))
proof
let x being (Element of D());
A5: (x = A2() implies thesis) by A1,A3;
A6: (x = A3() implies thesis) by A2,A3;
(x = A1() implies thesis) by A1,A2;
hence thesis by A5,A6;
end;
consider f being (Function of D(),R()) such that A7: (for x being (Element of D()) holds P[ x,( f . x ) ]) from FUNCT_2:sch 3(A4);
take f;
thus thesis by A7;
end;
