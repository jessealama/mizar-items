environ
vocabularies XBOOLE_0,ALGSTR_0,STRUCT_0,NUMBERS,BINOP_2,CARD_1,XREAL_0,SUBSET_1,ORDINAL1,ARYTM_3,RLVECT_1,SUPINF_2,ARYTM_1,RELAT_1,MESFUNC1,GROUP_1,LATTICES,BINOP_1,FUNCT_1,ZFMISC_1,XXREAL_0,VECTSP_1,MEMBERED;
notations XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,FUNCT_1,FUNCT_2,BINOP_1,ORDINAL1,XCMPLX_0,XXREAL_0,XREAL_0,NAT_D,BINOP_2,MEMBERED,STRUCT_0,ALGSTR_0,RLVECT_1,GROUP_1,CKB1,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB19,CKB24,CKB25,CKB26,CKB38,CKB44,CKB45,CKB54,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
definitions RLVECT_1,STRUCT_0,GROUP_1,ALGSTR_0,CKB1,CKB11,CKB12,CKB13,CKB14,CKB19,CKB24,CKB25,CKB26,CKB44,CKB45,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
theorems FUNCT_2,RLVECT_1,XCMPLX_0,BINOP_2,GROUP_1,NAT_1,XREAL_1,XREAL_0,ALGSTR_0,CKB1,CKB7,CKB11,CKB12,CKB13,CKB14,CKB19,CKB20,CKB21,CKB24,CKB25,CKB26,CKB30,CKB39,CKB40,CKB41,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
schemes FUNCT_2;
registrations ORDINAL1,RELSET_1,NUMBERS,XREAL_0,STRUCT_0,GROUP_1,ALGSTR_0,REAL_1,MEMBERED,CKB2,CKB3,CKB5,CKB8,CKB15,CKB16,CKB22,CKB23,CKB27,CKB28,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB42,CKB54,CKB55,CKB56,CKB4,CKB6,CKB17,CKB18,CKB29;
constructors BINOP_1,XXREAL_0,NAT_1,BINARITH,RLVECT_1,GROUP_1,BINOP_2,NAT_D,RELSET_1,MEMBERED,CKB1,CKB11,CKB12,CKB13,CKB14,CKB19,CKB24,CKB25,CKB45,CKB54,CKB60,CKB61,CKB62,CKB63,CKB64,CKB65;
requirements NUMERALS,SUBSET,ARITHM,BOOLE;
begin
Lm4:now
let F being  add-associative  right_zeroed  right_complementable  Abelian  associative  left_unital  distributive non  empty doubleLoopStr;
let MLT being (Function of [: (the carrier of F),(the carrier of F) :],(the carrier of F));
set GF = VectSpStr (# (the carrier of F),(the addF of F),( 0. F ),MLT #);
thus GF is  Abelian
proof
let x being (Element of GF);
let y being (Element of GF);
reconsider x9 = x,y9 = y as (Element of F);
thus ( x + y ) = ( y9 + x9 ) by RLVECT_1:2
.= ( y + x );
end;

thus GF is  add-associative
proof
let x being (Element of GF);
let y being (Element of GF);
let z being (Element of GF);
reconsider x9 = x,y9 = y,z9 = z as (Element of F);
thus ( ( x + y ) + z ) = ( ( x9 + y9 ) + z9 )
.= ( x9 + ( y9 + z9 ) ) by RLVECT_1:def 3
.= ( x + ( y + z ) );
end;

thus GF is  right_zeroed
proof
let x being (Element of GF);
reconsider x9 = x as (Element of F);
thus ( x + ( 0. GF ) ) = ( x9 + ( 0. F ) )
.= x by RLVECT_1:4;
end;

thus GF is  right_complementable
proof
let x being (Element of GF);
reconsider x9 = x as (Element of F);
consider t being (Element of F) such that A1: ( x9 + t ) = ( 0. F ) by ALGSTR_0:def 11;
reconsider t9 = t as (Element of GF);
take t9;
thus thesis by A1;
end;

end;
Lm5:now
let F being  add-associative  right_zeroed  right_complementable  associative  well-unital  distributive non  empty doubleLoopStr;
let MLT being (Function of [: (the carrier of F),(the carrier of F) :],(the carrier of F));
assume that
A1: MLT = (the multF of F);
let x being (Element of F);
let y being (Element of F);
set LS = VectSpStr (# (the carrier of F),(the addF of F),( 0. F ),MLT #);
let v being (Element of LS);
let w being (Element of LS);
reconsider v9 = v,w9 = w as (Element of F);
thus ( x * ( v + w ) ) = ( x * ( v9 + w9 ) ) by A1
.= ( ( x * v9 ) + ( x * w9 ) ) by CKB24:def 1
.= ( ( x * v ) + ( x * w ) ) by A1;
thus ( ( x + y ) * v ) = ( ( x + y ) * v9 ) by A1
.= ( ( x * v9 ) + ( y * v9 ) ) by CKB24:def 1
.= ( ( x * v ) + ( y * v ) ) by A1;
thus ( ( x * y ) * v ) = ( ( x * y ) * v9 ) by A1
.= ( x * ( y * v9 ) ) by GROUP_1:def 3
.= ( x * ( y * v ) ) by A1;
thus ( ( 1. F ) * v ) = ( ( 1. F ) * v9 ) by A1
.= v by CKB25:def 1;
end;
registration
let F being  add-associative  right_zeroed  right_complementable  Abelian  associative  well-unital  distributive non  empty doubleLoopStr;
cluster  scalar-distributive  vector-distributive  scalar-associative  scalar-unital  add-associative  right_zeroed  right_complementable  Abelian  strict for non  empty non  empty VectSpStr over F;
existence
proof
take V = VectSpStr (# (the carrier of F),(the addF of F),( 0. F ),(the multF of F) #);
thus (for x,y being (Element of F) holds (for v being (Element of V) holds ( ( x + y ) * v ) = ( ( x * v ) + ( y * v ) ))) by Lm5;
thus (for x being (Element of F) holds (for v,w being (Element of V) holds ( x * ( v + w ) ) = ( ( x * v ) + ( x * w ) ))) by Lm5;
thus (for x,y being (Element of F) holds (for v being (Element of V) holds ( ( x * y ) * v ) = ( x * ( y * v ) ))) by Lm5;
thus (for v being (Element of V) holds ( ( 1. F ) * v ) = v) by Lm5;
thus thesis by Lm4;
end;
end;
