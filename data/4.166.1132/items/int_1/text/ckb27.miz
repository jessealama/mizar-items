environ
vocabularies NUMBERS,SUBSET_1,XREAL_0,ORDINAL1,ZFMISC_1,CARD_1,XBOOLE_0,ARYTM_1,TARSKI,ARYTM_2,ARYTM_3,ARYTM_0,REAL_1,XXREAL_0,NAT_1,RELAT_1,INT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,ORDINAL1,ARYTM_2,ARYTM_1,NUMBERS,ARYTM_0,XCMPLX_0,XREAL_0,REAL_1,NAT_1,XXREAL_0,CKB3,CKB4,CKB8;
definitions TARSKI,XBOOLE_0,CARD_1,CKB3,CKB4;
theorems NAT_1,AXIOMS,TARSKI,XREAL_0,XCMPLX_0,XCMPLX_1,ZFMISC_1,XBOOLE_0,NUMBERS,ARYTM_0,ARYTM_2,ARYTM_1,XREAL_1,XXREAL_0,ORDINAL1,CKB1,CKB2,CKB3,CKB4,CKB9,CKB10,CKB12,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26;
schemes NAT_1,XBOOLE_0,SUBSET_1;
registrations ORDINAL1,NUMBERS,XXREAL_0,XREAL_0,REAL_1,NAT_1,CKB5,CKB6,CKB7,CKB11,CKB13,CKB14,CKB15,CKB16,CKB17;
constructors FUNCT_4,ARYTM_1,ARYTM_0,XXREAL_0,REAL_1,NAT_1,FINSET_1,CARD_1,CKB4;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve i1 for Integer;
reserve i2 for Integer;
theorem
(( i1 * i2 ) = ( - 1 ) iff ((i1 = ( - 1 ) & i2 = 1) or (i1 = 1 & i2 = ( - 1 ))))
proof
thus (( i1 * i2 ) = ( - 1 ) implies ((i1 = ( - 1 ) & i2 = 1) or (i1 = 1 & i2 = ( - 1 ))))
proof
assume ( i1 * i2 ) = ( - 1 );
then ( ( - i1 ) * i2 ) = 1;
then ((( - ( - i1 ) ) = ( - 1 ) & i2 = 1) or (( - i1 ) = ( - 1 ) & i2 = ( - 1 ))) by CKB26:1;
hence thesis;
end;

assume ((i1 = ( - 1 ) & i2 = 1) or (i1 = 1 & i2 = ( - 1 )));
hence thesis;
end;
