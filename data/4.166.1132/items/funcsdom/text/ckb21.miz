environ
vocabularies XBOOLE_0,BINOP_1,FUNCT_2,SUBSET_1,FUNCT_1,ZFMISC_1,NUMBERS,RELAT_1,FUNCOP_1,BINOP_2,REAL_1,CARD_1,ARYTM_3,RLVECT_1,ARYTM_1,STRUCT_0,ALGSTR_0,XREAL_0,ORDINAL1,SUPINF_2,GROUP_1,MESFUNC1,VECTSP_1,LATTICES,FUNCSDOM;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,NUMBERS,RELAT_1,FUNCT_1,FUNCT_2,BINOP_1,DOMAIN_1,FUNCOP_1,BINOP_2,ORDINAL1,XCMPLX_0,XREAL_0,STRUCT_0,ALGSTR_0,RLVECT_1,REAL_1,GROUP_1,VECTSP_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9;
definitions RLVECT_1,STRUCT_0,GROUP_1,BINOP_1,VECTSP_1,ALGSTR_0,FUNCOP_1,FUNCT_2,CKB5,CKB6,CKB7,CKB8,CKB9;
theorems FUNCT_2,BINOP_1,FUNCOP_1,TARSKI,BINOP_2,STRUCT_0,XREAL_0,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20;
schemes BINOP_1,FUNCT_2;
registrations XBOOLE_0,SUBSET_1,RELSET_1,NUMBERS,RLVECT_1,VECTSP_1,ALGSTR_0,BINOP_2,FUNCOP_1,FUNCT_3,REAL_1,XREAL_0,ORDINAL1,RELAT_1,VALUED_0,STRUCT_0,CARD_1;
constructors BINOP_1,DOMAIN_1,FUNCOP_1,REAL_1,BINOP_2,VECTSP_1,RLVECT_1,FUNCT_3,RELSET_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve A for non  empty set;
reserve f for (Element of ( Funcs (A,( REAL )) ));
theorem
Th22: (for A being set holds (for f being (Element of ( Funcs (A,( REAL )) )) holds ( ( RealFuncAdd A ) . (f,( ( RealFuncExtMult A ) . [ ( - 1 ),f ] )) ) = ( RealFuncZero A )))
proof
let A being set;
let f being (Element of ( Funcs (A,( REAL )) ));
per cases ;
suppose A1: A = ( {} );

hence ( ( RealFuncAdd A ) . (f,( ( RealFuncExtMult A ) . [ ( - 1 ),f ] )) ) = ( {} )
.= ( RealFuncZero A ) by A1;
end;
suppose A <> ( {} );

then reconsider A as non  empty set;
reconsider f as (Element of ( Funcs (A,( REAL )) ));
now
let x being (Element of A);
set y = ( f . x );
thus ( ( ( RealFuncAdd A ) . (f,( ( RealFuncExtMult A ) . [ ( - 1 ),f ] )) ) . x ) = ( ( f . x ) + ( ( ( RealFuncExtMult A ) . [ ( - 1 ),f ] ) . x ) ) by CKB11:1
.= ( ( f . x ) + ( ( - 1 ) * y ) ) by CKB14:1
.= ( ( RealFuncZero A ) . x ) by FUNCOP_1:7;
end;
hence thesis by FUNCT_2:63;
end;
end;
