environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMPDS_2,TURING_1,FUNCT_1,CARD_1,SCMFSA_7,RELAT_1,ARYTM_3,CARD_3,FSM_1,XXREAL_0,COMPLEX1,ARYTM_1,AMI_2,SCMPDS_5,SCMPDS_4,INT_1,SCMPDS_8,SCMFSA6B,SCMFSA_9,UNIALG_2,SCMFSA7B,SCMP_GCD,SEMI_AF1,GRAPHSP,AMI_3,FINSEQ_1,SCPISORT,NAT_1,ORDINAL4,SFMASTR2,PRE_FF,FUNCT_4,CIRCUIT2,TARSKI,PBOOLE,MSUALG_1,STRUCT_0,VALUED_1,SCMFSA8B,INT_2,SCPINVAR,ORDINAL1,PARTFUN1,SCMNORM,SCMFSA6C,COMPOS_1;
notations XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FUNCT_1,PARTFUN1,VALUED_1,XCMPLX_0,FUNCT_4,PBOOLE,INT_1,INT_2,NAT_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,SCMPDS_2,SCMPDS_4,SCMPDS_6,SCMP_GCD,SCMPDS_5,SCMPDS_8,FUNCT_2,CARD_3,DOMAIN_1,FINSEQ_1,GR_CY_1,PRE_FF,SCPISORT,XXREAL_0;
definitions FUNCOP_1,COMPOS_1,EXTPRO_1,AMI_3,SCMPDS_2,SCMP_GCD,SCPISORT,MEMSTR_0;
theorems AMI_3,NAT_1,TARSKI,FUNCT_4,INT_1,SCMPDS_2,ABSVALUE,GRFUNC_1,SCMPDS_4,SCMPDS_5,SCMPDS_6,ENUMSET1,INT_2,SCMPDS_8,SCMP_GCD,SCMPDS_7,FUNCT_1,FINSEQ_1,RVSUM_1,FINSEQ_2,MEMSTR_0,PRE_FF,SCPISORT,XBOOLE_1,XREAL_1,COMPLEX1,XXREAL_0,PREPOWER,ORDINAL1,FUNCOP_1,ZFMISC_1,NAT_D,FINSEQ_3,PBOOLE,PARTFUN1,AFINSQ_1,COMPOS_1,EXTPRO_1,CARD_3,CKB1,CKB2;
schemes NAT_1,SCMPDS_8,FUNCT_2;
registrations SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,NUMBERS,XREAL_0,NAT_1,INT_1,CARD_3,STRUCT_0,SCMPDS_2,SCMPDS_4,SCMPDS_5,SCMPDS_6,SCMPDS_8,XBOOLE_0,FINSEQ_1,CARD_1,VALUED_1,VALUED_0,MEMSTR_0,RELAT_1,FUNCT_2,COMPOS_1,AFINSQ_1,EXTPRO_1,PBOOLE,FUNCT_4;
constructors DOMAIN_1,REAL_1,NAT_D,RECDEF_1,PRE_FF,MESFUNC1,GR_CY_1,SCM_1,SCMPDS_4,SCMPDS_5,SCMPDS_6,SCMP_GCD,SCMPDS_8,SCPISORT,BINOP_2,AMI_2,MEMSTR_0,RELSET_1;
requirements NUMERALS,REAL,SUBSET,ARITHM,BOOLE;
begin
reserve a for Int_position;
theorem
Th7: (ex f being (Function of ( product (the Object-Kind of ( SCMPDS )) ),( NAT )) st (for s being (State of ( SCMPDS )) holds ((( s . a ) >= ( 0 ) implies ( f . s ) = ( 0 )) & (( s . a ) < ( 0 ) implies ( f . s ) = ( - ( s . a ) )))))
proof
defpred P[ set,set ]
 means
(ex t being (State of ( SCMPDS )) st ((t = $1 & (( t . a ) >= ( 0 ) implies $2 = ( 0 ))) & (( t . a ) < ( 0 ) implies $2 = ( - ( t . a ) ))));
A1:now
let s being (Element of ( product (the Object-Kind of ( SCMPDS )) ));
per cases ;
suppose A2: ( s . a ) >= ( 0 );

reconsider y = ( 0 ) as (Element of ( NAT ));
take y;
thus P[ s,y ] by A2;
end;
suppose A3: ( s . a ) < ( 0 );

then ( - ( s . a ) ) > ( 0 ) by XREAL_1:58;
then reconsider y = ( - ( s . a ) ) as (Element of ( NAT )) by INT_1:3;
take y;
thus P[ s,y ] by A3;
end;
end;
consider f being (Function of ( product (the Object-Kind of ( SCMPDS )) ),( NAT )) such that A4: (for s being (Element of ( product (the Object-Kind of ( SCMPDS )) )) holds P[ s,( f . s ) ]) from FUNCT_2:sch 3(A1);
A5: (for s being (State of ( SCMPDS )) holds P[ s,( f . s ) ])
proof
let s being (State of ( SCMPDS ));
reconsider s as (Element of ( product (the Object-Kind of ( SCMPDS )) )) by CARD_3:107;
P[ s,( f . s ) ] by A4;
hence thesis;
end;
take f;
hereby
let s being (State of ( SCMPDS ));
P[ s,( f . s ) ] by A5;
hence ((( s . a ) >= ( 0 ) implies ( f . s ) = ( 0 )) & (( s . a ) < ( 0 ) implies ( f . s ) = ( - ( s . a ) )));
end;
end;
