environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMPDS_2,TURING_1,FUNCT_1,CARD_1,SCMFSA_7,RELAT_1,ARYTM_3,CARD_3,FSM_1,XXREAL_0,COMPLEX1,ARYTM_1,AMI_2,SCMPDS_5,SCMPDS_4,INT_1,SCMPDS_8,SCMFSA6B,SCMFSA_9,UNIALG_2,SCMFSA7B,SCMP_GCD,SEMI_AF1,GRAPHSP,AMI_3,FINSEQ_1,SCPISORT,NAT_1,ORDINAL4,SFMASTR2,PRE_FF,FUNCT_4,CIRCUIT2,TARSKI,PBOOLE,MSUALG_1,STRUCT_0,VALUED_1,SCMFSA8B,INT_2,SCPINVAR,ORDINAL1,PARTFUN1,SCMNORM,SCMFSA6C,COMPOS_1;
notations XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FUNCT_1,PARTFUN1,VALUED_1,XCMPLX_0,FUNCT_4,PBOOLE,INT_1,INT_2,NAT_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,SCMPDS_2,SCMPDS_4,SCMPDS_6,SCMP_GCD,SCMPDS_5,SCMPDS_8,FUNCT_2,CARD_3,DOMAIN_1,FINSEQ_1,GR_CY_1,PRE_FF,SCPISORT,XXREAL_0,CKB5,CKB6,CKB10,CKB13;
definitions FUNCOP_1,COMPOS_1,EXTPRO_1,AMI_3,SCMPDS_2,SCMP_GCD,SCPISORT,MEMSTR_0,CKB5,CKB10,CKB13;
theorems AMI_3,NAT_1,TARSKI,FUNCT_4,INT_1,SCMPDS_2,ABSVALUE,GRFUNC_1,SCMPDS_4,SCMPDS_5,SCMPDS_6,ENUMSET1,INT_2,SCMPDS_8,SCMP_GCD,SCMPDS_7,FUNCT_1,FINSEQ_1,RVSUM_1,FINSEQ_2,MEMSTR_0,PRE_FF,SCPISORT,XBOOLE_1,XREAL_1,COMPLEX1,XXREAL_0,PREPOWER,ORDINAL1,FUNCOP_1,ZFMISC_1,NAT_D,FINSEQ_3,PBOOLE,PARTFUN1,AFINSQ_1,COMPOS_1,EXTPRO_1,CARD_3,CKB1,CKB2,CKB3,CKB5,CKB7,CKB8,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes NAT_1,SCMPDS_8,FUNCT_2,CKB4,CKB9;
registrations SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,NUMBERS,XREAL_0,NAT_1,INT_1,CARD_3,STRUCT_0,SCMPDS_2,SCMPDS_4,SCMPDS_5,SCMPDS_6,SCMPDS_8,XBOOLE_0,FINSEQ_1,CARD_1,VALUED_1,VALUED_0,MEMSTR_0,RELAT_1,FUNCT_2,COMPOS_1,AFINSQ_1,EXTPRO_1,PBOOLE,FUNCT_4;
constructors DOMAIN_1,REAL_1,NAT_D,RECDEF_1,PRE_FF,MESFUNC1,GR_CY_1,SCM_1,SCMPDS_4,SCMPDS_5,SCMPDS_6,SCMP_GCD,SCMPDS_8,SCPISORT,BINOP_2,AMI_2,MEMSTR_0,RELSET_1,CKB5,CKB6,CKB10,CKB13;
requirements NUMERALS,REAL,SUBSET,ARITHM,BOOLE;
begin
reserve i for (Instruction of ( SCMPDS ));
reserve I for (Program of ( SCMPDS ));
reserve a for Int_position;
reserve P for (Instruction-Sequence of ( SCMPDS ));
theorem
Th16: (for s being (State of ( SCMPDS )) holds (for I being (Program of ( SCMPDS )) holds (for a being Int_position holds (for i being Integer holds (( s . ( DataLoc (( s . a ),i) ) ) = ( 0 ) implies (( while<>0 (a,i,I) ) is_closed_on s,P & ( while<>0 (a,i,I) ) is_halting_on s,P))))))
proof
let s being (State of ( SCMPDS ));
let I being (Program of ( SCMPDS ));
let a being Int_position;
let i being Integer;
set b = ( DataLoc (( s . a ),i) );
assume A1: ( s . b ) = ( 0 );
set WHL = ( while<>0 (a,i,I) );
set pWH = ( stop WHL );
set iWH = pWH;
set s3 = ( Initialize s );
set P3 = ( P +* pWH );
set s4 = ( Comput (P3,s3,1) );
set s5 = ( Comput (P3,s3,2) );
set P4 = P3;
set P5 = P3;
A3: (not b in ( dom ( Start-At (( 0 ),( SCMPDS )) ) )) by SCMPDS_4:18;
(not a in ( dom ( Start-At (( 0 ),( SCMPDS )) ) )) by SCMPDS_4:18;
then A4: ( s3 . ( DataLoc (( s3 . a ),i) ) ) = ( s3 . b ) by FUNCT_4:11
.= ( 0 ) by A1,A3,FUNCT_4:11;
set i1 = ( (a,i) <>0_goto 2 );
set i2 = ( goto ( ( card I ) + 2 ) );
set i3 = ( goto ( - ( ( card I ) + 2 ) ) );
A5: ( IC s3 ) = ( 0 ) by MEMSTR_0:47;
A6: WHL = ( i1 ';' ( ( i2 ';' I ) ';' i3 ) ) by CKB19:1;
( Comput (P3,s3,( ( 0 ) + 1 )) ) = ( Following (P3,( Comput (P3,s3,( 0 )) )) ) by EXTPRO_1:3
.= ( Following (P3,s3) ) by EXTPRO_1:2
.= ( Exec (i1,s3) ) by A6,SCMPDS_6:11;
then A7: ( IC s4 ) = ( succ ( IC s3 ) ) by A4,SCMPDS_2:55
.= ( ( 0 ) + 1 ) by A5;
A8: iWH c= P3 by FUNCT_4:25;
then A9: pWH c= P4;
A10: 1 in ( dom WHL ) by CKB17:1;
then 1 in ( dom pWH ) by COMPOS_1:62;
then A11: ( P4 . 1 ) = ( pWH . 1 ) by A9,GRFUNC_1:2
.= ( WHL . 1 ) by A10,COMPOS_1:63
.= i2 by CKB18:1;
A12: ( card WHL ) = ( ( card I ) + 3 ) by CKB14:1;
then A13: ( ( card I ) + 3 ) in ( dom pWH ) by COMPOS_1:64;
A14: ( P4 /. ( IC s4 ) ) = ( P4 . ( IC s4 ) ) by PBOOLE:143;
( Comput (P3,s3,( 1 + 1 )) ) = ( Following (P3,s4) ) by EXTPRO_1:3
.= ( Exec (i2,s4) ) by A7,A11,A14;
then A16: ( IC s5 ) = ( ICplusConst (s4,( ( card I ) + 2 )) ) by SCMPDS_2:54
.= ( ( ( card I ) + 2 ) + 1 ) by A7,SCMPDS_6:12
.= ( ( card I ) + ( 2 + 1 ) );
A17: ( P5 /. ( IC s5 ) ) = ( P5 . ( IC s5 ) ) by PBOOLE:143;
pWH c= P5 by A8;
then ( P5 . ( ( card I ) + 3 ) ) = ( pWH . ( ( card I ) + 3 ) ) by A13,GRFUNC_1:2
.= ( halt ( SCMPDS ) ) by A12,COMPOS_1:64;
then A18: ( CurInstr (P5,s5) ) = ( halt ( SCMPDS ) ) by A16,A17;
now
let k being (Element of ( NAT ));
(k = ( 0 ) or ( 0 ) < k) by NAT_1:3;
then A20: (k = ( 0 ) or ( ( 0 ) + 1 ) <= k) by INT_1:7;
per cases  by A20,XXREAL_0:1;
suppose k = ( 0 );

then ( Comput (P3,s3,k) ) = s3 by EXTPRO_1:2;
hence ( IC ( Comput (P3,s3,k) ) ) in ( dom pWH ) by A5,COMPOS_1:36;
end;
suppose k = 1;

hence ( IC ( Comput (P3,s3,k) ) ) in ( dom pWH ) by A10,A7,COMPOS_1:62;
end;
suppose 1 < k;

then ( 1 + 1 ) <= k by INT_1:7;
hence ( IC ( Comput (P3,s3,k) ) ) in ( dom pWH ) by A13,A16,A18,EXTPRO_1:5;
end;
end;
hence WHL is_closed_on s,P by SCMPDS_6:def 2;
P3 halts_on s3 by A18,EXTPRO_1:29;
hence thesis by SCMPDS_6:def 3;
end;
