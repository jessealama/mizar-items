environ
vocabularies NUMBERS,SUBSET_1,AMI_1,SCMPDS_2,TURING_1,FUNCT_1,CARD_1,SCMFSA_7,RELAT_1,ARYTM_3,CARD_3,FSM_1,XXREAL_0,COMPLEX1,ARYTM_1,AMI_2,SCMPDS_5,SCMPDS_4,INT_1,SCMPDS_8,SCMFSA6B,SCMFSA_9,UNIALG_2,SCMFSA7B,SCMP_GCD,SEMI_AF1,GRAPHSP,AMI_3,FINSEQ_1,SCPISORT,NAT_1,ORDINAL4,SFMASTR2,PRE_FF,FUNCT_4,CIRCUIT2,TARSKI,PBOOLE,MSUALG_1,STRUCT_0,VALUED_1,SCMFSA8B,INT_2,SCPINVAR,ORDINAL1,PARTFUN1,SCMNORM,SCMFSA6C,COMPOS_1;
notations XBOOLE_0,SUBSET_1,CARD_1,NUMBERS,RELAT_1,FUNCT_1,PARTFUN1,VALUED_1,XCMPLX_0,FUNCT_4,PBOOLE,INT_1,INT_2,NAT_1,STRUCT_0,MEMSTR_0,COMPOS_1,EXTPRO_1,AMI_2,SCMPDS_2,SCMPDS_4,SCMPDS_6,SCMP_GCD,SCMPDS_5,SCMPDS_8,FUNCT_2,CARD_3,DOMAIN_1,FINSEQ_1,GR_CY_1,PRE_FF,SCPISORT,XXREAL_0;
definitions FUNCOP_1,COMPOS_1,EXTPRO_1,AMI_3,SCMPDS_2,SCMP_GCD,SCPISORT,MEMSTR_0;
theorems AMI_3,NAT_1,TARSKI,FUNCT_4,INT_1,SCMPDS_2,ABSVALUE,GRFUNC_1,SCMPDS_4,SCMPDS_5,SCMPDS_6,ENUMSET1,INT_2,SCMPDS_8,SCMP_GCD,SCMPDS_7,FUNCT_1,FINSEQ_1,RVSUM_1,FINSEQ_2,MEMSTR_0,PRE_FF,SCPISORT,XBOOLE_1,XREAL_1,COMPLEX1,XXREAL_0,PREPOWER,ORDINAL1,FUNCOP_1,ZFMISC_1,NAT_D,FINSEQ_3,PBOOLE,PARTFUN1,AFINSQ_1,COMPOS_1,EXTPRO_1,CARD_3;
schemes NAT_1,SCMPDS_8,FUNCT_2;
registrations SETFAM_1,FUNCT_1,ORDINAL1,RELSET_1,NUMBERS,XREAL_0,NAT_1,INT_1,CARD_3,STRUCT_0,SCMPDS_2,SCMPDS_4,SCMPDS_5,SCMPDS_6,SCMPDS_8,XBOOLE_0,FINSEQ_1,CARD_1,VALUED_1,VALUED_0,MEMSTR_0,RELAT_1,FUNCT_2,COMPOS_1,AFINSQ_1,EXTPRO_1,PBOOLE,FUNCT_4;
constructors DOMAIN_1,REAL_1,NAT_D,RECDEF_1,PRE_FF,MESFUNC1,GR_CY_1,SCM_1,SCMPDS_4,SCMPDS_5,SCMPDS_6,SCMP_GCD,SCMPDS_8,SCPISORT,BINOP_2,AMI_2,MEMSTR_0,RELSET_1;
requirements NUMERALS,REAL,SUBSET,ARITHM,BOOLE;
begin
reserve i for (Instruction of ( SCMPDS ));
reserve j for (Instruction of ( SCMPDS ));
reserve I for (Program of ( SCMPDS ));
theorem
Th5: (( ( ( i ';' j ) ';' I ) . ( 0 ) ) = i & ( ( ( i ';' j ) ';' I ) . 1 ) = j)
proof
set jI = ( j ';' I );
A1: ( ( i ';' j ) ';' I ) = ( i ';' jI ) by SCMPDS_4:16
.= ( ( Load i ) ';' jI ) by SCMPDS_4:def 2;
( 0 ) in ( dom ( Load i ) ) by COMPOS_1:50;
hence ( ( ( i ';' j ) ';' I ) . ( 0 ) ) = ( ( Load i ) . ( 0 ) ) by A1,AFINSQ_1:def 3
.= i by COMPOS_1:52;
A2: ( 0 ) in ( dom ( Load j ) ) by COMPOS_1:50;
( card jI ) = ( ( card I ) + 1 ) by SCMPDS_6:6;
then ( 0 ) < ( card jI ) by NAT_1:5;
then A3: (( card ( Load i ) ) = 1 & ( 0 ) in ( dom jI )) by AFINSQ_1:66,COMPOS_1:54;
thus ( ( ( i ';' j ) ';' I ) . 1 ) = ( ( ( Load i ) ';' jI ) . ( ( 0 ) + 1 ) ) by A1
.= ( jI . ( 0 ) ) by A3,AFINSQ_1:def 3
.= ( ( ( Load j ) ';' I ) . ( 0 ) ) by SCMPDS_4:def 2
.= ( ( Load j ) . ( 0 ) ) by A2,AFINSQ_1:def 3
.= j by COMPOS_1:52;
end;
