environ
vocabularies RELAT_1,XBOOLE_0,ZFMISC_1,SUBSET_1,TARSKI,SETFAM_1,FUNCT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,SETFAM_1,CKB1,CKB4,CKB7,CKB10;
definitions TARSKI,XBOOLE_0,RELAT_1,SETFAM_1,ZFMISC_1,CKB1,CKB7,CKB10;
theorems TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,XBOOLE_1,SUBSET_1,CKB1,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
schemes TARSKI,XBOOLE_0,CKB6,CKB13,CKB14;
registrations XBOOLE_0,RELAT_1,ZFMISC_1,CKB2,CKB3,CKB5;
constructors SETFAM_1,RELAT_1,CKB1,CKB7;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve x for set;
reserve y for set;
reserve y1 for set;
reserve f for Function;
theorem
Th15: (X <> ( {} ) implies (for y holds (ex f st (( dom f ) = X & ( rng f ) = { y }))))
proof
assume A1: X <> ( {} );
let y;
deffunc F(set) = y;
consider f such that A2: ( dom f ) = X and A3: (for x holds (x in X implies ( f . x ) = F(x))) from CKB14:sch 1;
take f;
thus ( dom f ) = X by A2;
(y1 in ( rng f ) iff y1 = y)
proof
A4:now
set x = the (Element of X);
assume A5: y1 = y;
( f . x ) = y by A1,A3;
hence y1 in ( rng f ) by A1,A2,A5,CKB10:def 1;
end;
now
assume y1 in ( rng f );
then (ex x st (x in ( dom f ) & y1 = ( f . x ))) by CKB10:def 1;
hence y1 = y by A2,A3;
end;
hence thesis by A4;
end;
hence thesis by TARSKI:def 1;
end;
