environ
vocabularies RELAT_1,XBOOLE_0,ZFMISC_1,SUBSET_1,TARSKI,SETFAM_1,FUNCT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,SETFAM_1,CKB1,CKB4,CKB7,CKB10,CKB20,CKB37,CKB50,CKB83;
definitions TARSKI,XBOOLE_0,RELAT_1,SETFAM_1,ZFMISC_1,CKB1,CKB7,CKB10,CKB37,CKB50,CKB83;
theorems TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,XBOOLE_1,SUBSET_1,CKB1,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB16,CKB17,CKB18,CKB19,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB45,CKB46,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB59,CKB62,CKB63,CKB64,CKB65,CKB66,CKB67,CKB69,CKB70,CKB71,CKB72,CKB73,CKB74,CKB75,CKB77,CKB78,CKB79,CKB80,CKB81,CKB82,CKB83,CKB84,CKB85,CKB86,CKB87,CKB88,CKB89,CKB90,CKB91,CKB92;
schemes TARSKI,XBOOLE_0,CKB6,CKB13,CKB14;
registrations XBOOLE_0,RELAT_1,ZFMISC_1,CKB2,CKB3,CKB5,CKB21,CKB29,CKB44,CKB47,CKB48,CKB49,CKB60,CKB61,CKB68,CKB76;
constructors SETFAM_1,RELAT_1,CKB1,CKB7,CKB37,CKB50;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve x for set;
reserve y for set;
reserve f for Function;
definition
let f;
let Y;
redefine func f " Y
means
:Def13: (for x holds (x in it iff (x in ( dom f ) & ( f . x ) in Y)));
compatibility
proof
let X;
hereby
assume A1: X = ( f " Y );
let x;
hereby
assume x in X;
then A2: (ex y st ([ x,y ] in f & y in Y)) by A1,RELAT_1:def 14;
hence x in ( dom f ) by RELAT_1:def 4;
thus ( f . x ) in Y by A2,CKB8:1;
end;
assume that
A3: x in ( dom f )
and
A4: ( f . x ) in Y;
[ x,( f . x ) ] in f by A3,CKB8:1;
hence x in X by A1,A4,RELAT_1:def 14;
end;
assume A5: (for x holds (x in X iff (x in ( dom f ) & ( f . x ) in Y)));
now
let x;
hereby
assume A6: x in X;
take y = ( f . x );
x in ( dom f ) by A5,A6;
hence [ x,y ] in f by CKB7:def 1;
thus y in Y by A5,A6;
end;
given y such that
A7: [ x,y ] in f
and
A8: y in Y;

(x in ( dom f ) & y = ( f . x )) by A7,CKB8:1;
hence x in X by A5,A8;
end;
hence thesis by RELAT_1:def 14;
end;
end;
