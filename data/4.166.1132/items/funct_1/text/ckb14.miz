environ
vocabularies RELAT_1,XBOOLE_0,ZFMISC_1,SUBSET_1,TARSKI,SETFAM_1,FUNCT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,SETFAM_1,CKB1,CKB4,CKB7,CKB10;
definitions TARSKI,XBOOLE_0,RELAT_1,SETFAM_1,ZFMISC_1,CKB1,CKB7,CKB10;
theorems TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,XBOOLE_1,SUBSET_1,CKB1,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
schemes TARSKI,XBOOLE_0,CKB6,CKB13;
registrations XBOOLE_0,RELAT_1,ZFMISC_1,CKB2,CKB3,CKB5;
constructors SETFAM_1,RELAT_1,CKB1,CKB7;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve y1 for set;
reserve y2 for set;
scheme Lambda { A() -> set,F(set) -> set } : (ex f being Function st (( dom f ) = A() & (for x holds (x in A() implies ( f . x ) = F(x)))))
proof
defpred P[ set,set ]
 means
$2 = F($1);
A1: (for x holds (x in A() implies (ex y st P[ x,y ])));
A2: (for x holds (for y1 holds (for y2 holds (((x in A() & P[ x,y1 ]) & P[ x,y2 ]) implies y1 = y2))));
thus (ex f being Function st (( dom f ) = A() & (for x holds (x in A() implies P[ x,( f . x ) ])))) from CKB13:sch 1(A2,A1);
end;
