environ
vocabularies RELAT_1,XBOOLE_0,ZFMISC_1,SUBSET_1,TARSKI,SETFAM_1,FUNCT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,SETFAM_1,CKB1,CKB4,CKB7,CKB10,CKB20,CKB37;
definitions TARSKI,XBOOLE_0,RELAT_1,SETFAM_1,ZFMISC_1,CKB1,CKB7,CKB10,CKB37;
theorems TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,XBOOLE_1,SUBSET_1,CKB1,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB16,CKB17,CKB18,CKB19,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39;
schemes TARSKI,XBOOLE_0,CKB6,CKB13,CKB14;
registrations XBOOLE_0,RELAT_1,ZFMISC_1,CKB2,CKB3,CKB5,CKB21,CKB29;
constructors SETFAM_1,RELAT_1,CKB1,CKB7,CKB37;
requirements SUBSET,BOOLE;
begin
reserve x1 for set;
reserve x2 for set;
reserve y1 for set;
reserve y2 for set;
reserve f for Function;
reserve g for Function;
theorem
((( g * f ) is  one-to-one & ( rng f ) = ( dom g )) implies (f is  one-to-one & g is  one-to-one))
proof
assume that
A1: ( g * f ) is  one-to-one
and
A2: ( rng f ) = ( dom g );
A3: ( dom ( g * f ) ) = ( dom f ) by A2,RELAT_1:27;
thus f is  one-to-one by A1,A2,CKB39:1;
assume (not g is  one-to-one);
then consider y1,y2 such that A4: y1 in ( dom g ) and A5: y2 in ( dom g ) and A6: (( g . y1 ) = ( g . y2 ) & y1 <> y2) by CKB37:def 1;
consider x2 such that A7: x2 in ( dom f ) and A8: ( f . x2 ) = y2 by A2,A5,CKB10:def 1;
A9: ( ( g * f ) . x2 ) = ( g . ( f . x2 ) ) by A7,CKB25:1;
consider x1 such that A10: x1 in ( dom f ) and A11: ( f . x1 ) = y1 by A2,A4,CKB10:def 1;
( ( g * f ) . x1 ) = ( g . ( f . x1 ) ) by A10,CKB25:1;
hence contradiction by A1,A6,A10,A11,A7,A8,A3,A9,CKB37:def 1;
end;
