environ
vocabularies RELAT_1,XBOOLE_0,ZFMISC_1,SUBSET_1,TARSKI,SETFAM_1,FUNCT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,SETFAM_1,CKB1,CKB4,CKB7,CKB10,CKB20;
definitions TARSKI,XBOOLE_0,RELAT_1,SETFAM_1,ZFMISC_1,CKB1,CKB7,CKB10;
theorems TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,XBOOLE_1,SUBSET_1,CKB1,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB16,CKB17,CKB18,CKB19;
schemes TARSKI,XBOOLE_0,CKB6,CKB13,CKB14;
registrations XBOOLE_0,RELAT_1,ZFMISC_1,CKB2,CKB3,CKB5,CKB21;
constructors SETFAM_1,RELAT_1,CKB1,CKB7;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve z for set;
reserve f for Function;
reserve g for Function;
reserve h for Function;
theorem
(for h holds (((for x holds (x in ( dom h ) iff (x in ( dom f ) & ( f . x ) in ( dom g )))) & (for x holds (x in ( dom h ) implies ( h . x ) = ( g . ( f . x ) )))) implies h = ( g * f )))
proof
let h;
assume that
A1: (for x holds (x in ( dom h ) iff (x in ( dom f ) & ( f . x ) in ( dom g ))))
and
A2: (for x holds (x in ( dom h ) implies ( h . x ) = ( g . ( f . x ) )));
now
let x;
let y;
hereby
assume A3: [ x,y ] in h;
then A4: x in ( dom h ) by RELAT_1:def 4;
then A5: ( f . x ) in ( dom g ) by A1;
take y1 = ( f . x );
x in ( dom f ) by A1,A4;
hence [ x,y1 ] in f by CKB7:def 1;
y = ( h . x ) by A3,A4,CKB7:def 1
.= ( g . ( f . x ) ) by A2,A4;
hence [ y1,y ] in g by A5,CKB7:def 1;
end;
given z such that
A6: [ x,z ] in f
and
A7: [ z,y ] in g;

A8: x in ( dom f ) by A6,RELAT_1:def 4;
then A9: z = ( f . x ) by A6,CKB7:def 1;
A10: z in ( dom g ) by A7,RELAT_1:def 4;
then A11: x in ( dom h ) by A1,A8,A9;
y = ( g . z ) by A7,A10,CKB7:def 1;
then y = ( h . x ) by A2,A9,A11;
hence [ x,y ] in h by A11,CKB7:def 1;
end;
hence thesis by RELAT_1:def 8;
end;
