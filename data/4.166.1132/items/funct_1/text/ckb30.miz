environ
vocabularies RELAT_1,XBOOLE_0,ZFMISC_1,SUBSET_1,TARSKI,SETFAM_1,FUNCT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,SETFAM_1,CKB1,CKB4,CKB7,CKB10,CKB20;
definitions TARSKI,XBOOLE_0,RELAT_1,SETFAM_1,ZFMISC_1,CKB1,CKB7,CKB10;
theorems TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,XBOOLE_1,SUBSET_1,CKB1,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB16,CKB17,CKB18,CKB19,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes TARSKI,XBOOLE_0,CKB6,CKB13,CKB14;
registrations XBOOLE_0,RELAT_1,ZFMISC_1,CKB2,CKB3,CKB5,CKB21,CKB29;
constructors SETFAM_1,RELAT_1,CKB1,CKB7;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve x for set;
reserve y for set;
reserve f for Function;
theorem
Th34: (f = ( id X ) iff (( dom f ) = X & (for x holds (x in X implies ( f . x ) = x))))
proof
hereby
assume A1: f = ( id X );
hence A2: ( dom f ) = X by RELAT_1:45;
let x;
assume A3: x in X;
then [ x,x ] in f by A1,RELAT_1:def 10;
hence ( f . x ) = x by A2,A3,CKB7:def 1;
end;
assume that
A4: ( dom f ) = X
and
A5: (for x holds (x in X implies ( f . x ) = x));
now
let x;
let y;
hereby
assume A6: [ x,y ] in f;
hence A7: x in X by A4,CKB8:1;
y = ( f . x ) by A6,CKB8:1;
hence x = y by A5,A7;
end;
assume A8: x in X;
then ( f . x ) = x by A5;
hence (x = y implies [ x,y ] in f) by A4,A8,CKB8:1;
end;
hence thesis by RELAT_1:def 10;
end;
