environ
vocabularies RELAT_1,XBOOLE_0,ZFMISC_1,SUBSET_1,TARSKI,SETFAM_1,FUNCT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,SETFAM_1,CKB1,CKB4,CKB7,CKB10,CKB20,CKB37,CKB50;
definitions TARSKI,XBOOLE_0,RELAT_1,SETFAM_1,ZFMISC_1,CKB1,CKB7,CKB10,CKB37,CKB50;
theorems TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,XBOOLE_1,SUBSET_1,CKB1,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB16,CKB17,CKB18,CKB19,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB45,CKB46,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56;
schemes TARSKI,XBOOLE_0,CKB6,CKB13,CKB14;
registrations XBOOLE_0,RELAT_1,ZFMISC_1,CKB2,CKB3,CKB5,CKB21,CKB29,CKB44,CKB47,CKB48,CKB49;
constructors SETFAM_1,RELAT_1,CKB1,CKB7,CKB37,CKB50;
requirements SUBSET,BOOLE;
begin
reserve x for set;
reserve y for set;
reserve f for Function;
reserve g for Function;
theorem
((((f is  one-to-one & ( dom f ) = ( rng g )) & ( rng f ) = ( dom g )) & (for x holds (for y holds ((x in ( dom f ) & y in ( dom g )) implies (( f . x ) = y iff ( g . y ) = x))))) implies g = ( f " ))
proof
assume that
A1: f is  one-to-one
and
A2: ( dom f ) = ( rng g )
and
A3: ( rng f ) = ( dom g )
and
A4: (for x holds (for y holds ((x in ( dom f ) & y in ( dom g )) implies (( f . x ) = y iff ( g . y ) = x))));
A5: (y in ( dom g ) implies ( g . y ) = ( ( f " ) . y ))
proof
assume A6: y in ( dom g );
then A7: ( g . y ) in ( dom f ) by A2,CKB10:def 1;
then ( f . ( g . y ) ) = y by A4,A6;
hence thesis by A1,A7,CKB51:1;
end;
( rng f ) = ( dom ( f " ) ) by A1,CKB51:1;
hence thesis by A3,A5,CKB9:1;
end;
