environ
vocabularies RELAT_1,XBOOLE_0,ZFMISC_1,SUBSET_1,TARSKI,SETFAM_1,FUNCT_1;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,SETFAM_1,CKB1,CKB4,CKB7,CKB10;
definitions TARSKI,XBOOLE_0,RELAT_1,SETFAM_1,ZFMISC_1,CKB1,CKB7,CKB10;
theorems TARSKI,XBOOLE_0,ZFMISC_1,RELAT_1,XBOOLE_1,SUBSET_1,CKB1,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB15,CKB16,CKB17;
schemes TARSKI,XBOOLE_0,CKB6,CKB13,CKB14;
registrations XBOOLE_0,RELAT_1,ZFMISC_1,CKB2,CKB3,CKB5;
constructors SETFAM_1,RELAT_1,CKB1,CKB7;
requirements SUBSET,BOOLE;
begin
reserve X for set;
reserve Y for set;
reserve x for set;
reserve z for set;
reserve f for Function;
theorem
((Y <> ( {} ) or X = ( {} )) implies (ex f st (X = ( dom f ) & ( rng f ) c= Y)))
proof
assume A1: (Y <> ( {} ) or X = ( {} ));
A2:now
set y = the (Element of Y);
deffunc F(set) = y;
consider f such that A3: ( dom f ) = X and A4: (for x holds (x in X implies ( f . x ) = F(x))) from CKB14:sch 1;
assume X <> ( {} );
then A5: y in Y by A1;
take f;
thus ( dom f ) = X by A3;
(z in ( rng f ) implies z in Y)
proof
assume z in ( rng f );
then (ex x st (x in ( dom f ) & z = ( f . x ))) by CKB10:def 1;
hence thesis by A5,A3,A4;
end;
hence ( rng f ) c= Y by TARSKI:def 3;
end;
now
assume A6: X = ( {} );
take f = ( {} );
thus ( dom f ) = X by A6;
thus ( rng f ) c= Y by XBOOLE_1:2;
end;
hence thesis by A2;
end;
