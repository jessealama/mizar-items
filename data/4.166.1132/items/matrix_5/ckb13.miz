environ
vocabularies GROUP_1,COMPLFLD,SUPINF_2,CARD_1,MATRIX_1,NUMBERS,ARYTM_3,ARYTM_1,RELAT_1,XCMPLX_0,ORDINAL1,SUBSET_1,FINSEQ_1,TREES_1,VECTSP_1,NAT_1,ALGSTR_0,FUNCT_1,BINOP_2,COMPLEX1,XXREAL_0,VALUED_0,TARSKI,ORDINAL4,MATRIX_5;
notations TARSKI,SUBSET_1,ORDINAL1,NAT_1,NAT_D,RELAT_1,FUNCT_1,VALUED_0,STRUCT_0,ALGSTR_0,FINSEQ_1,BINOP_1,MATRIX_3,MATRIX_1,NUMBERS,MATRIX_4,COMPLEX1,COMPLFLD,XCMPLX_0,GROUP_1,BINOP_2,XXREAL_0,VECTSP_1,RLVECT_1,CKB3,CKB4,CKB9,CKB10,CKB11,CKB12;
definitions MATRIX_4,CKB3,CKB4,CKB9,CKB10,CKB11,CKB12;
theorems FINSEQ_1,FUNCT_1,NAT_1,RLVECT_1,MATRIX_3,VECTSP_1,MATRIX_1,MATRIX_4,COMPLFLD,COMPLEX1,GROUP_1,BINOP_2,FINSEQ_3,XCMPLX_0,XREAL_1,VALUED_0,XXREAL_0,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12;
schemes NAT_1;
registrations RELSET_1,NUMBERS,XCMPLX_0,XREAL_0,STRUCT_0,VECTSP_1,COMPLFLD,ORDINAL1,RVSUM_1;
constructors BINOP_1,XXREAL_0,COMPLFLD,FVSUM_1,MATRIX_3,MATRIX_4,BINOP_2,NAT_D,RVSUM_1,RELSET_1,CKB3,CKB4,CKB9,CKB10,CKB11,CKB12;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
definition
let x being  complex number;
let A being (Matrix of ( COMPLEX ));
func x * A -> (Matrix of ( COMPLEX ))
means
:Def7: (for ea being (Element of ( F_Complex )) holds (ea = x implies it = ( Field2COMPLEX ( ea * ( COMPLEX2Field A ) ) )));
existence
proof
x in ( COMPLEX ) by XCMPLX_0:def 2;
then reconsider aa = x as (Element of ( F_Complex )) by COMPLFLD:def 1;
set C = ( Field2COMPLEX ( aa * ( COMPLEX2Field A ) ) );
(for ea being (Element of ( F_Complex )) holds (ea = x implies C = ( Field2COMPLEX ( ea * ( COMPLEX2Field A ) ) )));
hence thesis;
end;
uniqueness
proof
x in ( COMPLEX ) by XCMPLX_0:def 2;
then reconsider aa = x as (Element of ( F_Complex )) by COMPLFLD:def 1;
let C1 being (Matrix of ( COMPLEX )),C2 being (Matrix of ( COMPLEX ));
assume that
A1: (for ea being (Element of ( F_Complex )) holds (ea = x implies C1 = ( Field2COMPLEX ( ea * ( COMPLEX2Field A ) ) )))
and
A2: (for ea being (Element of ( F_Complex )) holds (ea = x implies C2 = ( Field2COMPLEX ( ea * ( COMPLEX2Field A ) ) )));
C2 = ( Field2COMPLEX ( aa * ( COMPLEX2Field A ) ) ) by A2;
hence thesis by A1;
end;
end;
