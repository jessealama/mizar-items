environ
vocabularies GROUP_1,COMPLFLD,SUPINF_2,CARD_1,MATRIX_1,NUMBERS,ARYTM_3,ARYTM_1,RELAT_1,XCMPLX_0,ORDINAL1,SUBSET_1,FINSEQ_1,TREES_1,VECTSP_1,NAT_1,ALGSTR_0,FUNCT_1,BINOP_2,COMPLEX1,XXREAL_0,VALUED_0,TARSKI,ORDINAL4,MATRIX_5;
notations TARSKI,SUBSET_1,ORDINAL1,NAT_1,NAT_D,RELAT_1,FUNCT_1,VALUED_0,STRUCT_0,ALGSTR_0,FINSEQ_1,BINOP_1,MATRIX_3,MATRIX_1,NUMBERS,MATRIX_4,COMPLEX1,COMPLFLD,XCMPLX_0,GROUP_1,BINOP_2,XXREAL_0,VECTSP_1,RLVECT_1,CKB3,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13,CKB22;
definitions MATRIX_4,CKB3,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13,CKB22;
theorems FINSEQ_1,FUNCT_1,NAT_1,RLVECT_1,MATRIX_3,VECTSP_1,MATRIX_1,MATRIX_4,COMPLFLD,COMPLEX1,GROUP_1,BINOP_2,FINSEQ_3,XCMPLX_0,XREAL_1,VALUED_0,XXREAL_0,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27;
schemes NAT_1;
registrations RELSET_1,NUMBERS,XCMPLX_0,XREAL_0,STRUCT_0,VECTSP_1,COMPLFLD,ORDINAL1,RVSUM_1;
constructors BINOP_1,XXREAL_0,COMPLFLD,FVSUM_1,MATRIX_3,MATRIX_4,BINOP_2,NAT_D,RVSUM_1,RELSET_1,CKB3,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13,CKB22;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th36: (for K being Field holds (for b being (Element of K) holds (for M1,M2 being (Matrix of K) holds ((( len M1 ) = ( len M2 ) & ( width M1 ) = ( width M2 )) implies ( b * ( M1 + M2 ) ) = ( ( b * M1 ) + ( b * M2 ) )))))
proof
let K being Field;
let b being (Element of K);
let M1 being (Matrix of K),M2 being (Matrix of K);
A1: (( len ( b * ( M1 + M2 ) ) ) = ( len ( M1 + M2 ) ) & ( width ( b * ( M1 + M2 ) ) ) = ( width ( M1 + M2 ) )) by MATRIX_3:def 5;
A2: (( len ( M1 + M2 ) ) = ( len M1 ) & ( width ( M1 + M2 ) ) = ( width M1 )) by MATRIX_3:def 3;
A3: (( len ( b * M1 ) ) = ( len M1 ) & ( width ( b * M1 ) ) = ( width M1 )) by MATRIX_3:def 5;
assume A4: (( len M1 ) = ( len M2 ) & ( width M1 ) = ( width M2 ));
A5: (for i,j being Nat holds ([ i,j ] in ( Indices ( b * ( M1 + M2 ) ) ) implies ( ( b * ( M1 + M2 ) ) * (i,j) ) = ( ( ( b * M1 ) + ( b * M2 ) ) * (i,j) )))
proof
let i being Nat,j being Nat;
assume A6: [ i,j ] in ( Indices ( b * ( M1 + M2 ) ) );
A7: ( Indices M2 ) = ( Indices M1 ) by A4,MATRIX_4:55;
A8: ( Indices ( b * ( M1 + M2 ) ) ) = ( Indices ( M1 + M2 ) ) by A1,MATRIX_4:55;
A9: ( Indices ( M1 + M2 ) ) = ( Indices M1 ) by A2,MATRIX_4:55;
( Indices ( b * M1 ) ) = ( Indices M1 ) by A3,MATRIX_4:55;
then ( ( ( b * M1 ) + ( b * M2 ) ) * (i,j) ) = ( ( ( b * M1 ) * (i,j) ) + ( ( b * M2 ) * (i,j) ) ) by A6,A8,A9,MATRIX_3:def 3
.= ( ( b * ( M1 * (i,j) ) ) + ( ( b * M2 ) * (i,j) ) ) by A6,A8,A9,MATRIX_3:def 5
.= ( ( b * ( M1 * (i,j) ) ) + ( b * ( M2 * (i,j) ) ) ) by A6,A8,A9,A7,MATRIX_3:def 5
.= ( b * ( ( M1 * (i,j) ) + ( M2 * (i,j) ) ) ) by VECTSP_1:def 7;
then ( ( ( b * M1 ) + ( b * M2 ) ) * (i,j) ) = ( b * ( ( M1 + M2 ) * (i,j) ) ) by A6,A8,A9,MATRIX_3:def 3
.= ( ( b * ( M1 + M2 ) ) * (i,j) ) by A6,A8,MATRIX_3:def 5;
hence thesis;
end;
(( len ( ( b * M1 ) + ( b * M2 ) ) ) = ( len ( b * M1 ) ) & ( width ( ( b * M1 ) + ( b * M2 ) ) ) = ( width ( b * M1 ) )) by MATRIX_3:def 3;
hence thesis by A1,A2,A3,A5,MATRIX_1:21;
end;
