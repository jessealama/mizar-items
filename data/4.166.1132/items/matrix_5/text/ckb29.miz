environ
vocabularies GROUP_1,COMPLFLD,SUPINF_2,CARD_1,MATRIX_1,NUMBERS,ARYTM_3,ARYTM_1,RELAT_1,XCMPLX_0,ORDINAL1,SUBSET_1,FINSEQ_1,TREES_1,VECTSP_1,NAT_1,ALGSTR_0,FUNCT_1,BINOP_2,COMPLEX1,XXREAL_0,VALUED_0,TARSKI,ORDINAL4,MATRIX_5;
notations TARSKI,SUBSET_1,ORDINAL1,NAT_1,NAT_D,RELAT_1,FUNCT_1,VALUED_0,STRUCT_0,ALGSTR_0,FINSEQ_1,BINOP_1,MATRIX_3,MATRIX_1,NUMBERS,MATRIX_4,COMPLEX1,COMPLFLD,XCMPLX_0,GROUP_1,BINOP_2,XXREAL_0,VECTSP_1,RLVECT_1,CKB3,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13,CKB22;
definitions MATRIX_4,CKB3,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13,CKB22;
theorems FINSEQ_1,FUNCT_1,NAT_1,RLVECT_1,MATRIX_3,VECTSP_1,MATRIX_1,MATRIX_4,COMPLFLD,COMPLEX1,GROUP_1,BINOP_2,FINSEQ_3,XCMPLX_0,XREAL_1,VALUED_0,XXREAL_0,XREAL_0,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes NAT_1;
registrations RELSET_1,NUMBERS,XCMPLX_0,XREAL_0,STRUCT_0,VECTSP_1,COMPLFLD,ORDINAL1,RVSUM_1;
constructors BINOP_1,XXREAL_0,COMPLFLD,FVSUM_1,MATRIX_3,MATRIX_4,BINOP_2,NAT_D,RVSUM_1,RELSET_1,CKB3,CKB4,CKB9,CKB10,CKB11,CKB12,CKB13,CKB22;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
(for M1,M2 being (Matrix of ( COMPLEX )) holds (for a being  complex number holds ((( len M1 ) = ( len M2 ) & ( width M1 ) = ( width M2 )) implies ( a * ( M1 + M2 ) ) = ( ( a * M1 ) + ( a * M2 ) ))))
proof
let M1 being (Matrix of ( COMPLEX ));
let M2 being (Matrix of ( COMPLEX ));
let a being  complex number;
assume A1: (( len M1 ) = ( len M2 ) & ( width M1 ) = ( width M2 ));
a in ( COMPLEX ) by XCMPLX_0:def 2;
then reconsider ea = a as (Element of ( F_Complex )) by COMPLFLD:def 1;
A2: ( ( a * M1 ) + ( a * M2 ) ) = ( Field2COMPLEX ( ( COMPLEX2Field ( Field2COMPLEX ( ea * ( COMPLEX2Field M1 ) ) ) ) + ( COMPLEX2Field ( a * M2 ) ) ) ) by CKB13:def 1
.= ( Field2COMPLEX ( ( ea * ( COMPLEX2Field M1 ) ) + ( COMPLEX2Field ( Field2COMPLEX ( ea * ( COMPLEX2Field M2 ) ) ) ) ) ) by CKB13:def 1
.= ( Field2COMPLEX ( ( ea * ( COMPLEX2Field M1 ) ) + ( ea * ( COMPLEX2Field M2 ) ) ) );
( a * ( M1 + M2 ) ) = ( Field2COMPLEX ( ea * ( COMPLEX2Field ( M1 + M2 ) ) ) ) by CKB13:def 1
.= ( Field2COMPLEX ( ( ea * ( COMPLEX2Field M1 ) ) + ( ea * ( COMPLEX2Field M2 ) ) ) ) by A1,CKB28:1;
hence thesis by A2;
end;
