environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,PARTIT1,EQREL_1,TARSKI,BVFUNC_2,FUNCOP_1,FUNCT_1,ZFMISC_1,SETFAM_1,RELAT_1,BVFUNC_1,XBOOLEAN;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MARGREL1,RELAT_1,SETFAM_1,FUNCT_1,FUNCT_2,EQREL_1,FUNCOP_1,PARTIT1,BVFUNC_1,BVFUNC_2,FUNCT_4;
definitions TARSKI,BVFUNC_1,XBOOLE_0,XBOOLEAN,FUNCOP_1;
theorems TARSKI,FUNCT_1,SETFAM_1,EQREL_1,ZFMISC_1,PARTIT1,BVFUNC_1,BVFUNC_2,ENUMSET1,FUNCT_4,FUNCOP_1,MSSUBFAM,PARTIT_2,BVFUNC_4,XBOOLE_0,XBOOLE_1,XBOOLEAN,MARGREL1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51;
registrations XBOOLE_0,FUNCOP_1,FUNCT_4,EQREL_1,MARGREL1;
constructors SETFAM_1,FUNCT_4,XCMPLX_0,BVFUNC_1,BVFUNC_2,RELSET_1;
requirements SUBSET,BOOLE,ARITHM;
begin
reserve Y for non empty set;
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve G for (Subset of ( PARTITIONS Y ));
reserve A for (a_partition of Y);
reserve B for (a_partition of Y);
theorem
( All (( 'not' ( Ex (a,A,G) ) ),B,G) ) '<' ( 'not' ( Ex (( All (a,B,G) ),A,G) ) )
proof
let z being (Element of Y);
A1: (( All (( 'not' ( Ex (a,A,G) ) ),B,G) ) = ( B_INF (( 'not' ( Ex (a,A,G) ) ),( CompF (B,G) )) ) & z in ( EqClass (z,( CompF (B,G) )) )) by BVFUNC_2:def 9,EQREL_1:def 6;
assume ( ( All (( 'not' ( Ex (a,A,G) ) ),B,G) ) . z ) = ( TRUE );
then ( ( 'not' ( Ex (a,A,G) ) ) . z ) = ( TRUE ) by A1,BVFUNC_1:def 16;
then A2: (( Ex (a,A,G) ) = ( B_SUP (a,( CompF (A,G) )) ) & ( 'not' ( ( Ex (a,A,G) ) . z ) ) = ( TRUE )) by BVFUNC_2:def 10,MARGREL1:def 19;
A3: ( All (a,B,G) ) = ( B_INF (a,( CompF (B,G) )) ) by BVFUNC_2:def 9;
(for x being (Element of Y) holds (x in ( EqClass (z,( CompF (A,G) )) ) implies ( ( All (a,B,G) ) . x ) <> ( TRUE )))
proof
let x being (Element of Y);
assume x in ( EqClass (z,( CompF (A,G) )) );
then A4: ( a . x ) <> ( TRUE ) by A2,BVFUNC_1:def 17;
x in ( EqClass (x,( CompF (B,G) )) ) by EQREL_1:def 6;
hence thesis by A3,A4,BVFUNC_1:def 16;
end;
then (( Ex (( All (a,B,G) ),A,G) ) = ( B_SUP (( All (a,B,G) ),( CompF (A,G) )) ) & ( ( B_SUP (( All (a,B,G) ),( CompF (A,G) )) ) . z ) = ( FALSE )) by BVFUNC_1:def 17,BVFUNC_2:def 10;
then ( 'not' ( ( Ex (( All (a,B,G) ),A,G) ) . z ) ) = ( TRUE );
hence thesis by MARGREL1:def 19;
end;
