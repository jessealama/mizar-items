environ
vocabularies XBOOLE_0,SUBSET_1,FUNCT_2,MARGREL1,PARTIT1,EQREL_1,TARSKI,BVFUNC_2,FUNCOP_1,FUNCT_1,ZFMISC_1,SETFAM_1,RELAT_1,BVFUNC_1,XBOOLEAN;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,MARGREL1,RELAT_1,SETFAM_1,FUNCT_1,FUNCT_2,EQREL_1,FUNCOP_1,PARTIT1,BVFUNC_1,BVFUNC_2,FUNCT_4;
definitions TARSKI,BVFUNC_1,XBOOLE_0,XBOOLEAN,FUNCOP_1;
theorems TARSKI,FUNCT_1,SETFAM_1,EQREL_1,ZFMISC_1,PARTIT1,BVFUNC_1,BVFUNC_2,ENUMSET1,FUNCT_4,FUNCOP_1,MSSUBFAM,PARTIT_2,BVFUNC_4,XBOOLE_0,XBOOLE_1,XBOOLEAN,MARGREL1,CKB1,CKB2,CKB3,CKB4;
registrations XBOOLE_0,FUNCOP_1,FUNCT_4,EQREL_1,MARGREL1;
constructors SETFAM_1,FUNCT_4,XCMPLX_0,BVFUNC_1,BVFUNC_2,RELSET_1;
requirements SUBSET,BOOLE,ARITHM;
begin
reserve Y for non  empty set;
reserve a for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve b for (Element of ( Funcs (Y,( BOOLEAN )) ));
reserve G for (Subset of ( PARTITIONS Y ));
reserve A for (a_partition of Y);
reserve B for (a_partition of Y);
theorem
(for G being (Subset of ( PARTITIONS Y )) holds (for A,B being (a_partition of Y) holds (((G is  independent & G = { A,B }) & A <> B) implies (for a,b being set holds ((a in A & b in B) implies a meets b)))))
proof
let G being (Subset of ( PARTITIONS Y ));
let A being (a_partition of Y);
let B being (a_partition of Y);
assume that
A1: G is  independent
and
A2: G = { A,B }
and
A3: A <> B;
let a being set;
let b being set;
assume that
A4: a in A
and
A5: b in B;
set h2 = ( (A,B) --> (a,b) );
A6: (for d being set holds (d in G implies ( h2 . d ) in d))
proof
let d being set;
assume d in G;
then (d = A or d = B) by A2,TARSKI:def 2;
hence thesis by A3,A4,A5,FUNCT_4:63;
end;
{ a,b } c= ( bool Y )
proof
let x being set;
assume x in { a,b };
then (x = a or x = b) by TARSKI:def 2;
hence thesis by A4,A5;
end;
then reconsider SS = { a,b } as (Subset-Family of Y);
A7: ( dom h2 ) = { A,B } by FUNCT_4:62;
( rng h2 ) = SS by A3,FUNCT_4:64;
then ( Intersect SS ) <> ( {} ) by A1,A2,A7,A6,BVFUNC_2:def 5;
hence ( a /\ b ) <> ( {} ) by A4,A5,MSSUBFAM:10;
end;
