environ
vocabularies NUMBERS,XBOOLE_0,ORDERS_2,SUBSET_1,CONNSP_1,FIN_TOPO,XXREAL_0,FINTOPO3,TARSKI,ARYTM_3,ARYTM_1,CARD_1,RELAT_2,FUNCT_1,STRUCT_0,RELAT_1,NAT_1,FINSEQ_1,ZFMISC_1,FINTOPO4;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,NUMBERS,XCMPLX_0,XXREAL_0,NAT_1,FUNCT_1,RELSET_1,FUNCT_2,FINSEQ_1,STRUCT_0,ORDERS_2,FIN_TOPO,FINTOPO3,NAT_D,ENUMSET1,LIMFUNC1,CKB1,CKB15,CKB20,CKB21;
definitions TARSKI,FIN_TOPO,FINSEQ_1,CKB1,CKB15,CKB20,CKB21;
theorems TARSKI,FINSEQ_1,NAT_1,FUNCT_1,FUNCT_2,XBOOLE_0,XBOOLE_1,FIN_TOPO,FINTOPO3,RELAT_1,ENUMSET1,XREAL_1,XXREAL_0,ORDINAL1,RELSET_1,XREAL_0,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22;
schemes NAT_1,FUNCT_2,RELSET_1;
registrations XBOOLE_0,SUBSET_1,RELSET_1,XXREAL_0,XREAL_0,NAT_1,STRUCT_0,FIN_TOPO,ORDINAL1,FINSEQ_1;
constructors ENUMSET1,NAT_1,EQREL_1,LIMFUNC1,NAT_D,FIN_TOPO,FINTOPO3,FINSEQ_1,RELSET_1,CKB1,CKB15,CKB20,CKB21;
requirements REAL,NUMERALS,SUBSET,BOOLE,ARITHM;
begin
theorem
(for n being Nat holds (n > ( 0 ) implies ( FTSL1 n ) is  symmetric))
proof
let n being Nat;
assume n > ( 0 );
then A1: ( FTSL1 n ) = RelStr (# ( Seg n ),( Nbdl1 n ) #) by CKB21:def 1;
let x being (Element of ( FTSL1 n )),y being (Element of ( FTSL1 n ));
x in ( Seg n ) by A1;
then reconsider i = x as (Element of ( NAT ));
A2: 1 <= i by A1,FINSEQ_1:1;
A3: i <= n by A1,FINSEQ_1:1;
y in ( Seg n ) by A1;
then reconsider j = y as (Element of ( NAT ));
A4: ( U_FT y ) = { j,( max (( j -' 1 ),1) ),( min (( j + 1 ),n) ) } by A1,CKB20:def 1;
A5: ( U_FT x ) = { i,( max (( i -' 1 ),1) ),( min (( i + 1 ),n) ) } by A1,CKB20:def 1;
now
A6:now
assume A7: y = ( max (( i -' 1 ),1) );
now
per cases ;
case A8: ( i -' 1 ) >= 1;
then A9: y = ( i -' 1 ) by A7,XXREAL_0:def 10;
now
per cases ;
case ( i - 1 ) >= ( 0 );
then j = ( i - 1 ) by A9,XREAL_0:def 2;
hence ((x = j or x = ( max (( j -' 1 ),1) )) or x = ( min (( j + 1 ),n) )) by A3,XXREAL_0:def 9;
end;
case ( i - 1 ) < ( 0 );
hence contradiction by A8,XREAL_0:def 2;
end;
end;
hence ((x = j or x = ( max (( j -' 1 ),1) )) or x = ( min (( j + 1 ),n) ));
end;
case A10: ( i -' 1 ) < 1;
A11:now
assume i > 1;
then A12: ( i - 1 ) > ( 0 ) by XREAL_1:50;
then ( i -' 1 ) = ( i - 1 ) by XREAL_0:def 2;
then ( i -' 1 ) >= ( ( 0 ) + 1 ) by A12,NAT_1:13;
hence contradiction by A10;
end;
y = 1 by A7,A10,XXREAL_0:def 10;
hence ((x = j or x = ( max (( j -' 1 ),1) )) or x = ( min (( j + 1 ),n) )) by A2,A11,XXREAL_0:1;
end;
end;
hence x in ( U_FT y ) by A4,ENUMSET1:def 1;
end;
assume A13: y in ( U_FT x );
A14:now
assume y = ( min (( i + 1 ),n) );
now
per cases  by A5,A13,ENUMSET1:def 1;
case y = i;
hence ((x = j or x = ( max (( j -' 1 ),1) )) or x = ( min (( j + 1 ),n) ));
end;
case A15: y = ( max (( i -' 1 ),1) );
now
per cases ;
case A16: ( i -' 1 ) >= 1;
then A17: y = ( i -' 1 ) by A15,XXREAL_0:def 10;
now
per cases ;
case ( i - 1 ) >= ( 0 );
then j = ( i - 1 ) by A17,XREAL_0:def 2;
hence ((x = j or x = ( max (( j -' 1 ),1) )) or x = ( min (( j + 1 ),n) )) by A3,XXREAL_0:def 9;
end;
case ( i - 1 ) < ( 0 );
hence contradiction by A16,XREAL_0:def 2;
end;
end;
hence ((x = j or x = ( max (( j -' 1 ),1) )) or x = ( min (( j + 1 ),n) ));
end;
case A18: ( i -' 1 ) < 1;
A19:now
assume i > 1;
then A20: ( i - 1 ) > ( 0 ) by XREAL_1:50;
then ( i -' 1 ) = ( i - 1 ) by XREAL_0:def 2;
then ( i -' 1 ) >= ( ( 0 ) + 1 ) by A20,NAT_1:13;
hence contradiction by A18;
end;
y = 1 by A15,A18,XXREAL_0:def 10;
hence ((x = j or x = ( max (( j -' 1 ),1) )) or x = ( min (( j + 1 ),n) )) by A2,A19,XXREAL_0:1;
end;
end;
hence ((x = j or x = ( max (( j -' 1 ),1) )) or x = ( min (( j + 1 ),n) ));
end;
case A21: y = ( min (( i + 1 ),n) );
now
per cases ;
case ( i + 1 ) <= n;
then A22: y = ( i + 1 ) by A21,XXREAL_0:def 9;
then A23: ( j - 1 ) = ( j -' 1 ) by XREAL_0:def 2;
now
per cases ;
case ( j - 1 ) >= 1;
hence ((x = j or x = ( max (( j -' 1 ),1) )) or x = ( min (( j + 1 ),n) )) by A22,A23,XXREAL_0:def 10;
end;
case ( j - 1 ) < 1;
hence contradiction by A1,A22,FINSEQ_1:1;
end;
end;
hence ((x = j or x = ( max (( j -' 1 ),1) )) or x = ( min (( j + 1 ),n) ));
end;
case A24: ( i + 1 ) > n;
then y = n by A21,XXREAL_0:def 9;
then ( j + 1 ) > n by NAT_1:13;
then A25: ( min (( j + 1 ),n) ) = n by XXREAL_0:def 9;
i >= n by A24,NAT_1:13;
hence ((x = j or x = ( max (( j -' 1 ),1) )) or x = ( min (( j + 1 ),n) )) by A3,A25,XXREAL_0:1;
end;
end;
hence ((x = j or x = ( max (( j -' 1 ),1) )) or x = ( min (( j + 1 ),n) ));
end;
end;
hence x in ( U_FT y ) by A4,ENUMSET1:def 1;
end;
((y = i or y = ( max (( i -' 1 ),1) )) or y = ( min (( i + 1 ),n) )) by A5,A13,ENUMSET1:def 1;
hence x in ( U_FT y ) by A13,A6,A14;
end;
hence thesis;
end;
