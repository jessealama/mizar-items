environ
vocabularies XBOOLE_0,SUBSET_1,PARTFUN1,NUMBERS,XREAL_0,ORDINAL1,RELAT_1,ARYTM_3,CARD_1,COMPLEX1,ORDINAL4,FUNCT_1,ARYTM_1,VALUED_1,TARSKI,XXREAL_2,XXREAL_0,CFUNCT_1;
notations TARSKI,XBOOLE_0,SUBSET_1,ORDINAL1,NUMBERS,XCMPLX_0,XXREAL_0,XREAL_0,FUNCT_1,RELSET_1,PARTFUN1,RFUNCT_1,COMPLEX1,VALUED_1,SEQ_2,CKB1,CKB2,CKB3;
definitions TARSKI,PARTFUN1,RFUNCT_1,XBOOLE_0,VALUED_1,SEQ_2,CKB2,CKB3;
theorems TARSKI,SUBSET_1,FUNCT_1,PARTFUN1,PARTFUN2,RFUNCT_1,COMPLEX1,RELAT_1,XBOOLE_0,XBOOLE_1,XCMPLX_0,XCMPLX_1,XREAL_1,XXREAL_0,VALUED_1,SEQ_2,CKB2,CKB3;
schemes PARTFUN2;
registrations RELSET_1,NUMBERS,XREAL_0,MEMBERED,VALUED_0,RFUNCT_1;
constructors PARTFUN1,XXREAL_0,REAL_1,COMPLEX1,PARTFUN2,VALUED_1,RFUNCT_1,SEQ_1,SEQ_2,NAT_1,RELSET_1,CKB2,CKB3;
requirements NUMERALS,SUBSET,BOOLE,ARITHM;
begin
reserve C for non empty set;
reserve c for (Element of C);
reserve f1 for (PartFunc of C,( COMPLEX ));
reserve f2 for (PartFunc of C,( COMPLEX ));
theorem
Th3: (( dom ( f1 + f2 ) ) = ( ( dom f1 ) /\ ( dom f2 ) ) & (for c holds (c in ( dom ( f1 + f2 ) ) implies ( ( f1 + f2 ) /. c ) = ( ( f1 /. c ) + ( f2 /. c ) ))))
proof
thus A1: ( dom ( f1 + f2 ) ) = ( ( dom f1 ) /\ ( dom f2 ) ) by VALUED_1:def 1;
now
let c;
assume A2: c in ( dom ( f1 + f2 ) );
then c in ( dom f1 ) by A1,XBOOLE_0:def 4;
then A3: ( f1 . c ) = ( f1 /. c ) by PARTFUN1:def 6;
c in ( dom f2 ) by A1,A2,XBOOLE_0:def 4;
then A4: ( f2 . c ) = ( f2 /. c ) by PARTFUN1:def 6;
thus ( ( f1 + f2 ) /. c ) = ( ( f1 + f2 ) . c ) by A2,PARTFUN1:def 6
.= ( ( f1 /. c ) + ( f2 /. c ) ) by A2,A3,A4,VALUED_1:def 1;
end;
hence thesis;
end;
