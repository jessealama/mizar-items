environ
vocabularies NUMBERS,NAT_1,XXREAL_0,ARYTM_1,ARYTM_3,SUBSET_1,FINSEQ_1,CARD_1,FUNCT_1,RELAT_1,FINSEQ_4,ZFMISC_1,XBOOLE_0,ORDINAL4,TARSKI,PARTFUN1,RFINSEQ,FINSEQ_5;
notations TARSKI,XBOOLE_0,SUBSET_1,XCMPLX_0,NUMBERS,NAT_1,RELAT_1,FUNCT_1,PARTFUN1,FINSEQ_1,FINSEQ_4,ZFMISC_1,RFINSEQ,NAT_D,XXREAL_0;
definitions TARSKI,FUNCT_1,XBOOLE_0,FINSEQ_1;
theorems TARSKI,NAT_1,PARTFUN2,FUNCT_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,RFINSEQ,ZFMISC_1,RELAT_1,INT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,XREAL_0,NAT_D,CKB1,CKB2,CKB3;
schemes FINSEQ_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,CARD_1;
constructors XXREAL_0,NAT_1,INT_1,PARTFUN1,FINSEQ_4,ZFMISC_1,RFINSEQ,NAT_D,REAL_1,RELSET_1;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
(for f being Function holds (f is  one-to-one iff (for x being set holds (x in ( dom f ) implies ( f " { ( f . x ) } ) = { x }))))
proof
let f being Function;
now
hereby
assume A1: (for x being set holds (x in ( dom f ) implies f is_one-to-one_at x));
let x being set;
assume x in ( dom f );
then f is_one-to-one_at x by A1;
hence ( f " { ( f . x ) } ) = { x } by FINSEQ_4:2;
end;
assume A2: (for x being set holds (x in ( dom f ) implies ( f " { ( f . x ) } ) = { x }));
let x being set;
assume A3: x in ( dom f );
then ( f " { ( f . x ) } ) = { x } by A2;
hence f is_one-to-one_at x by A3,FINSEQ_4:2;
end;
hence thesis by FINSEQ_4:4;
end;
