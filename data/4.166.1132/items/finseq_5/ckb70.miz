environ
vocabularies NUMBERS,NAT_1,XXREAL_0,ARYTM_1,ARYTM_3,SUBSET_1,FINSEQ_1,CARD_1,FUNCT_1,RELAT_1,FINSEQ_4,ZFMISC_1,XBOOLE_0,ORDINAL4,TARSKI,PARTFUN1,RFINSEQ,FINSEQ_5;
notations TARSKI,XBOOLE_0,SUBSET_1,XCMPLX_0,NUMBERS,NAT_1,RELAT_1,FUNCT_1,PARTFUN1,FINSEQ_1,FINSEQ_4,ZFMISC_1,RFINSEQ,NAT_D,XXREAL_0,CKB51,CKB60;
definitions TARSKI,FUNCT_1,XBOOLE_0,FINSEQ_1,CKB51,CKB60;
theorems TARSKI,NAT_1,PARTFUN2,FUNCT_1,FINSEQ_1,FINSEQ_2,FINSEQ_3,FINSEQ_4,RFINSEQ,ZFMISC_1,RELAT_1,INT_1,XBOOLE_0,XBOOLE_1,XREAL_1,XXREAL_0,ORDINAL1,PARTFUN1,XREAL_0,NAT_D,CKB1,CKB2,CKB3,CKB4,CKB5,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB53,CKB54,CKB55,CKB56,CKB57,CKB58,CKB60,CKB61,CKB62,CKB63,CKB65,CKB66,CKB67,CKB68,CKB69;
schemes FINSEQ_1;
registrations XBOOLE_0,SUBSET_1,RELAT_1,FUNCT_1,ORDINAL1,XXREAL_0,XREAL_0,NAT_1,INT_1,FINSEQ_1,CARD_1,CKB6,CKB7,CKB8,CKB15,CKB28,CKB42,CKB59,CKB64;
constructors XXREAL_0,NAT_1,INT_1,PARTFUN1,FINSEQ_4,ZFMISC_1,RFINSEQ,NAT_D,REAL_1,RELSET_1,CKB51,CKB60;
requirements REAL,NUMERALS,BOOLE,SUBSET,ARITHM;
begin
reserve i for Nat;
definition
let f being FinSequence;
func Rev f -> FinSequence
means
:Def3: (( len it ) = ( len f ) & (for i holds (i in ( dom it ) implies ( it . i ) = ( f . ( ( ( len f ) - i ) + 1 ) ))));
existence
proof
deffunc F(Nat) = ( f . ( ( ( len f ) - $1 ) + 1 ) );
(ex p being FinSequence st (( len p ) = ( len f ) & (for k being Nat holds (k in ( dom p ) implies ( p . k ) = F(k))))) from FINSEQ_1:sch 2;
hence thesis;
end;
uniqueness
proof
A1: ( dom f ) = ( Seg ( len f ) ) by FINSEQ_1:def 3;
let f1 being FinSequence,f2 being FinSequence;
assume that
A2: ( len f1 ) = ( len f )
and
A3: (for i holds (i in ( dom f1 ) implies ( f1 . i ) = ( f . ( ( ( len f ) - i ) + 1 ) )))
and
A4: ( len f2 ) = ( len f )
and
A5: (for i holds (i in ( dom f2 ) implies ( f2 . i ) = ( f . ( ( ( len f ) - i ) + 1 ) )));
A6: ( dom f1 ) = ( Seg ( len f1 ) ) by FINSEQ_1:def 3;
A7: ( dom f2 ) = ( Seg ( len f2 ) ) by FINSEQ_1:def 3;
now
let i being Nat;
assume A8: i in ( dom f );
then ( f1 . i ) = ( f . ( ( ( len f ) - i ) + 1 ) ) by A2,A3,A6,A1;
hence ( f1 . i ) = ( f2 . i ) by A4,A5,A7,A1,A8;
end;
hence thesis by A2,A4,A6,A1,FINSEQ_2:9;
end;
end;
