environ
vocabularies NAT_1,XBOOLE_0,ALGSTR_0,VECTSP_1,FINSEQ_1,ORDINAL4,RELAT_1,ARYTM_3,PARTFUN1,XXREAL_0,CARD_1,FUNCT_1,SQUARE_1,O_RING_1;
notations NAT_1,FUNCT_1,FINSEQ_1,PARTFUN1,NUMBERS,STRUCT_0,ALGSTR_0,VECTSP_1,XXREAL_0;
theorems NAT_1,FINSEQ_1,FINSEQ_3,XREAL_1,FINSEQ_4,XXREAL_0,PARTFUN1;
schemes NAT_1;
registrations RELSET_1,XREAL_0,STRUCT_0,VECTSP_1,ORDINAL1,FINSEQ_1;
constructors RLVECT_1,PARTFUN1,XXREAL_0,NAT_1,VECTSP_1,RELSET_1;
requirements NUMERALS,SUBSET,ARITHM,BOOLE;
begin
reserve k for Nat;
reserve R for non  empty doubleLoopStr;
reserve f for (FinSequence of R);
reserve g for (FinSequence of R);
reserve h for (FinSequence of R);
theorem
Lm1: (h = ( f ^ g ) iff ((( dom h ) = ( Seg ( ( len f ) + ( len g ) ) ) & (for k being Nat holds (k in ( dom f ) implies ( h /. k ) = ( f /. k )))) & (for k being Nat holds (k in ( dom g ) implies ( h /. ( ( len f ) + k ) ) = ( g /. k )))))
proof
A1: ( len f ) >= ( 0 ) by NAT_1:2;
thus (h = ( f ^ g ) implies ((( dom h ) = ( Seg ( ( len f ) + ( len g ) ) ) & (for k being Nat holds (k in ( dom f ) implies ( h /. k ) = ( f /. k )))) & (for k being Nat holds (k in ( dom g ) implies ( h /. ( ( len f ) + k ) ) = ( g /. k )))))
proof
assume A2: h = ( f ^ g );
hence ( dom h ) = ( Seg ( ( len f ) + ( len g ) ) ) by FINSEQ_1:def 7;
then A3: ( len h ) = ( ( len f ) + ( len g ) ) by FINSEQ_1:def 3;
thus (for k being Nat holds (k in ( dom f ) implies ( h /. k ) = ( f /. k )))
proof
let k being Nat;
assume that
A4: k in ( dom f );
(( len f ) <= ( ( len f ) + ( len g ) ) & k <= ( len f )) by A4,FINSEQ_3:25,NAT_1:11;
then A5: k <= ( len h ) by A3,XXREAL_0:2;
1 <= k by A4,FINSEQ_3:25;
then k in ( dom h ) by A5,FINSEQ_3:25;
then ( h /. k ) = ( h . k ) by PARTFUN1:def 6
.= ( f . k ) by A2,A4,FINSEQ_1:def 7
.= ( f /. k ) by A4,PARTFUN1:def 6;
hence thesis;
end;

thus (for k being Nat holds (k in ( dom g ) implies ( h /. ( ( len f ) + k ) ) = ( g /. k )))
proof
let k being Nat;
assume A6: k in ( dom g );
then k <= ( len g ) by FINSEQ_3:25;
then A7: ( ( len f ) + k ) <= ( ( len f ) + ( len g ) ) by XREAL_1:7;
1 <= k by A6,FINSEQ_3:25;
then ( ( 0 ) + 1 ) <= ( ( len f ) + k ) by A1,XREAL_1:7;
then ( ( len f ) + k ) in ( dom h ) by A3,A7,FINSEQ_3:25;
then ( h /. ( ( len f ) + k ) ) = ( h . ( ( len f ) + k ) ) by PARTFUN1:def 6
.= ( g . k ) by A2,A6,FINSEQ_1:def 7
.= ( g /. k ) by A6,PARTFUN1:def 6;
hence thesis;
end;

end;

assume that
A8: ( dom h ) = ( Seg ( ( len f ) + ( len g ) ) )
and
A9: (for k being Nat holds (k in ( dom f ) implies ( h /. k ) = ( f /. k )))
and
A10: (for k being Nat holds (k in ( dom g ) implies ( h /. ( ( len f ) + k ) ) = ( g /. k )));
A11: ( len h ) = ( ( len f ) + ( len g ) ) by A8,FINSEQ_1:def 3;
A12: (for k being Nat holds (k in ( dom g ) implies ( h . ( ( len f ) + k ) ) = ( g . k )))
proof
let k being Nat;
assume A13: k in ( dom g );
then k <= ( len g ) by FINSEQ_3:25;
then A14: ( ( len f ) + k ) <= ( ( len f ) + ( len g ) ) by XREAL_1:7;
1 <= k by A13,FINSEQ_3:25;
then ( ( 0 ) + 1 ) <= ( ( len f ) + k ) by A1,XREAL_1:7;
then ( ( len f ) + k ) in ( dom h ) by A11,A14,FINSEQ_3:25;
then ( h . ( ( len f ) + k ) ) = ( h /. ( ( len f ) + k ) ) by PARTFUN1:def 6
.= ( g /. k ) by A10,A13
.= ( g . k ) by A13,PARTFUN1:def 6;
hence thesis;
end;
(for k being Nat holds (k in ( dom f ) implies ( h . k ) = ( f . k )))
proof
let k being Nat;
assume that
A15: k in ( dom f );
(( len f ) <= ( ( len f ) + ( len g ) ) & k <= ( len f )) by A15,FINSEQ_3:25,NAT_1:11;
then A16: k <= ( len h ) by A11,XXREAL_0:2;
1 <= k by A15,FINSEQ_3:25;
then k in ( dom h ) by A16,FINSEQ_3:25;
then ( h . k ) = ( h /. k ) by PARTFUN1:def 6
.= ( f /. k ) by A9,A15
.= ( f . k ) by A15,PARTFUN1:def 6;
hence thesis;
end;
hence thesis by A8,A12,FINSEQ_1:def 7;
end;
