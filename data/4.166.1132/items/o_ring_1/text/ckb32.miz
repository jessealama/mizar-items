environ
vocabularies NAT_1,XBOOLE_0,ALGSTR_0,VECTSP_1,FINSEQ_1,ORDINAL4,RELAT_1,ARYTM_3,PARTFUN1,XXREAL_0,CARD_1,FUNCT_1,SQUARE_1,O_RING_1;
notations NAT_1,FUNCT_1,FINSEQ_1,PARTFUN1,NUMBERS,STRUCT_0,ALGSTR_0,VECTSP_1,XXREAL_0,CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB16,CKB17,CKB24,CKB25,CKB30,CKB31;
definitions CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB16,CKB17,CKB24,CKB25,CKB30,CKB31;
theorems NAT_1,FINSEQ_1,FINSEQ_3,XREAL_1,FINSEQ_4,XXREAL_0,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31;
schemes NAT_1;
registrations RELSET_1,XREAL_0,STRUCT_0,VECTSP_1,ORDINAL1,FINSEQ_1;
constructors RLVECT_1,PARTFUN1,XXREAL_0,NAT_1,VECTSP_1,RELSET_1,CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB16,CKB17,CKB24,CKB25,CKB30,CKB31;
requirements NUMERALS,SUBSET,ARITHM,BOOLE;
begin
reserve n for Nat;
reserve R for non  empty doubleLoopStr;
reserve x for (Scalar of R);
reserve y for (Scalar of R);
theorem
Lm20: (x is  being_a_square implies <* x *> is  being_a_Sum_of_amalgams_of_squares)
proof
A1: (for n holds ((n <> ( 0 ) & n < ( len <* x *> )) implies (ex y st (y is  being_an_amalgam_of_squares & ( <* x *> /. ( n + 1 ) ) = ( ( <* x *> /. n ) + y )))))
proof
let n;
assume that
A2: n <> ( 0 )
and
A3: n < ( len <* x *> );
n < 1 by A3,CKB2:1;
hence thesis by A2,NAT_1:25;
end;
assume x is  being_a_square;
then x is  being_an_amalgam_of_squares by CKB27:1;
then A4: ( <* x *> /. 1 ) is  being_an_amalgam_of_squares by CKB2:1;
( len <* x *> ) = 1 by CKB2:1;
hence thesis by A4,A1,CKB30:def 1;
end;
