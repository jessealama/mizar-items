environ
vocabularies NAT_1,XBOOLE_0,ALGSTR_0,VECTSP_1,FINSEQ_1,ORDINAL4,RELAT_1,ARYTM_3,PARTFUN1,XXREAL_0,CARD_1,FUNCT_1,SQUARE_1,O_RING_1;
notations NAT_1,FUNCT_1,FINSEQ_1,PARTFUN1,NUMBERS,STRUCT_0,ALGSTR_0,VECTSP_1,XXREAL_0,CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB16,CKB17,CKB24,CKB25,CKB30,CKB31,CKB42,CKB43;
definitions CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB16,CKB17,CKB24,CKB25,CKB30,CKB31,CKB42,CKB43;
theorems NAT_1,FINSEQ_1,FINSEQ_3,XREAL_1,FINSEQ_4,XXREAL_0,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43;
schemes NAT_1;
registrations RELSET_1,XREAL_0,STRUCT_0,VECTSP_1,ORDINAL1,FINSEQ_1;
constructors RLVECT_1,PARTFUN1,XXREAL_0,NAT_1,VECTSP_1,RELSET_1,CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB16,CKB17,CKB24,CKB25,CKB30,CKB31,CKB42,CKB43;
requirements NUMERALS,SUBSET,ARITHM,BOOLE;
begin
reserve i for Nat;
reserve j for Nat;
reserve n for Nat;
reserve R for non  empty doubleLoopStr;
reserve x for (Scalar of R);
theorem
Lm30: (x is  being_a_square implies <* x *> is  being_a_generation_from_squares)
proof
assume x is  being_a_square;
then x is  being_an_amalgam_of_squares by CKB27:1;
then A1: ( <* x *> /. 1 ) is  being_an_amalgam_of_squares by CKB2:1;
A2: (for n holds ((n <> ( 0 ) & n <= ( len <* x *> )) implies (( <* x *> /. n ) is  being_an_amalgam_of_squares or (ex i st (ex j st (((((( <* x *> /. n ) = ( ( <* x *> /. i ) * ( <* x *> /. j ) ) or ( <* x *> /. n ) = ( ( <* x *> /. i ) + ( <* x *> /. j ) )) & i <> ( 0 )) & i < n) & j <> ( 0 )) & j < n))))))
proof
let n;
assume that
A3: n <> ( 0 )
and
A4: n <= ( len <* x *> );
n <= 1 by A4,CKB2:1;
hence thesis by A1,A3,NAT_1:25;
end;
( len <* x *> ) = 1 by CKB2:1;
hence thesis by A2,CKB42:def 1;
end;
