environ
vocabularies NAT_1,XBOOLE_0,ALGSTR_0,VECTSP_1,FINSEQ_1,ORDINAL4,RELAT_1,ARYTM_3,PARTFUN1,XXREAL_0,CARD_1,FUNCT_1,SQUARE_1,O_RING_1;
notations NAT_1,FUNCT_1,FINSEQ_1,PARTFUN1,NUMBERS,STRUCT_0,ALGSTR_0,VECTSP_1,XXREAL_0,CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB16,CKB17,CKB24,CKB25,CKB30,CKB31,CKB42,CKB43;
definitions CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB16,CKB17,CKB24,CKB25,CKB30,CKB31,CKB42,CKB43;
theorems NAT_1,FINSEQ_1,FINSEQ_3,XREAL_1,FINSEQ_4,XXREAL_0,PARTFUN1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB31,CKB32,CKB33,CKB34,CKB35,CKB36,CKB37,CKB38,CKB39,CKB40,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50;
schemes NAT_1;
registrations RELSET_1,XREAL_0,STRUCT_0,VECTSP_1,ORDINAL1,FINSEQ_1;
constructors RLVECT_1,PARTFUN1,XXREAL_0,NAT_1,VECTSP_1,RELSET_1,CKB6,CKB7,CKB8,CKB9,CKB12,CKB13,CKB16,CKB17,CKB24,CKB25,CKB30,CKB31,CKB42,CKB43;
requirements NUMERALS,SUBSET,ARITHM,BOOLE;
begin
reserve i for Nat;
reserve R for non  empty doubleLoopStr;
reserve y for (Scalar of R);
reserve f for (FinSequence of R);
theorem
Lm37: (((f is  being_a_Sum_of_squares & ( 0 ) <> i) & i <= ( len f )) implies ( f /. i ) is  generated_from_squares)
proof
assume that
A1: f is  being_a_Sum_of_squares
and
A2: (( 0 ) <> i & i <= ( len f ));
defpred P[ Nat ]
 means
((( 0 ) <> $1 & $1 <= ( len f )) implies ( f /. $1 ) is  generated_from_squares);
A3: (for i holds (P[ i ] implies P[ ( i + 1 ) ]))
proof
let i;
assume that
A4: ((( 0 ) <> i & i <= ( len f )) implies ( f /. i ) is  generated_from_squares);
assume that
( 0 ) <> ( i + 1 )
and
A5: ( i + 1 ) <= ( len f );
A6: i < ( len f ) by A5,NAT_1:13;
A7:now
assume A8: i <> ( 0 );
then (ex y st (y is  being_a_square & ( f /. ( i + 1 ) ) = ( ( f /. i ) + y ))) by A1,A6,CKB8:def 1;
hence thesis by A4,A5,A8,CKB50:1,NAT_1:13;
end;
now
assume i = ( 0 );
then ( f /. ( i + 1 ) ) is  being_a_square by A1,CKB8:def 1;
hence thesis by CKB45:1;
end;
hence thesis by A7;
end;
A9: P[ ( 0 ) ];
(for i holds P[ i ]) from NAT_1:sch 2(A9,A3);
hence thesis by A2;
end;
