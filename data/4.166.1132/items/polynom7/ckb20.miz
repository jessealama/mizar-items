environ
vocabularies RLVECT_1,ALGSTR_1,ALGSTR_0,VECTSP_1,BINOP_1,LATTICES,VECTSP_2,ZFMISC_1,XBOOLE_0,STRUCT_0,POLYNOM1,VALUED_0,SUBSET_1,SUPINF_2,FUNCT_4,PRE_POLY,FUNCT_1,FUNCOP_1,RELAT_1,ORDINAL1,CARD_1,PARTFUN1,POLYNOM2,FINSEQ_1,CARD_3,NUMBERS,XXREAL_0,QC_LANG1,FINSET_1,ORDERS_1,ARYTM_3,NAT_1,MESFUNC1,QUOFIELD,GROUP_1,TARSKI,MSSUBFAM,ALGSEQ_1,CAT_3,XCMPLX_0,ORDINAL4,POLYNOM7;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,FUNCT_1,FINSET_1,ORDINAL1,PARTFUN1,FUNCT_2,FUNCT_7,POLYNOM1,NUMBERS,XXREAL_0,DOMAIN_1,STRUCT_0,ALGSTR_0,FUNCT_4,NAT_1,ALGSTR_1,RLVECT_1,ORDERS_1,FINSEQ_1,FUNCOP_1,GROUP_1,QUOFIELD,GRCAT_1,VECTSP_2,POLYNOM2,VECTSP_1,GROUP_6,PRE_POLY,CKB2,CKB7,CKB14,CKB16,CKB19;
definitions FUNCOP_1,STRUCT_0,CKB2,CKB7,CKB14,CKB19;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,STRUCT_0,QUOFIELD,FUNCT_7,FUNCT_4,FUNCOP_1,GRCAT_1,BINOM,FINSEQ_3,RLVECT_1,VECTSP_2,GROUP_1,NAT_1,FINSEQ_2,FINSEQ_5,MATRLIN,POLYNOM2,XBOOLE_0,REALSET1,XREAL_1,GROUP_6,XXREAL_0,ORDINAL1,PARTFUN1,PRE_POLY,CKB2,CKB5,CKB6,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB18,CKB19;
schemes FUNCT_2;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XREAL_0,STRUCT_0,VECTSP_1,ALGSTR_1,POLYNOM1,POLYNOM2,ALGSTR_0,CARD_1,SUBSET_1,PRE_POLY,ZFMISC_1,FUNCT_1,CKB1,CKB3,CKB4,CKB8,CKB9,CKB15,CKB17;
constructors RFUNCT_3,REALSET2,GRCAT_1,GROUP_6,TRIANG_1,QUOFIELD,POLYNOM2,ALGSTR_1,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1,CKB2,CKB7,CKB14,CKB19;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
definition
let X being set;
let L being non empty ZeroStr;
let m being (Monomial of X,L);
func term m -> (bag of X)
means
:Def6: (( m . it ) <> ( 0. L ) or (( Support m ) = ( {} ) & it = ( EmptyBag X )));
existence
proof
consider b being (bag of X) such that A1: (for b9 being (bag of X) holds (b9 <> b implies ( m . b9 ) = ( 0. L ))) by CKB14:def 1;
now
per cases ;
case ( m . b ) <> ( 0. L );
hence thesis;
end;
case A2: ( m . b ) = ( 0. L );
( Support m ) = ( {} )
proof
assume ( Support m ) <> ( {} );
then reconsider sm = ( Support m ) as non empty (Subset of ( Bags X ));
set c = the (Element of sm);
( m . c ) <> ( 0. L ) by POLYNOM1:def 3;
hence thesis by A1,A2;
end;
hence thesis;
end;
end;
hence thesis;
end;
uniqueness
proof
let b1 being (bag of X),b2 being (bag of X);
assume A3: (( m . b1 ) <> ( 0. L ) or (( Support m ) = ( {} ) & b1 = ( EmptyBag X )));
consider b being (bag of X) such that A4: (for b9 being (bag of X) holds (b9 <> b implies ( m . b9 ) = ( 0. L ))) by CKB14:def 1;
assume A5: (( m . b2 ) <> ( 0. L ) or (( Support m ) = ( {} ) & b2 = ( EmptyBag X )));
now
per cases ;
case A6: ( m . b1 ) <> ( 0. L );
reconsider b19 = b1 as (Element of ( Bags X )) by PRE_POLY:def 12;
A7: b19 in ( Support m ) by A6,POLYNOM1:def 3;
thus b1 = b by A4,A6
.= b2 by A5,A4,A7;
end;
case A8: ( m . b1 ) = ( 0. L );
now
per cases  by A5;
case A9: ( m . b2 ) <> ( 0. L );
reconsider b29 = b2 as (Element of ( Bags X )) by PRE_POLY:def 12;
b29 in ( Support m ) by A9,POLYNOM1:def 3;
hence thesis by A3,A8;
end;
case (( Support m ) = ( {} ) & b2 = ( EmptyBag X ));
hence thesis by A3,A8;
end;
end;
hence thesis;
end;
end;
hence thesis;
end;
end;
