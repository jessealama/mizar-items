environ
vocabularies RLVECT_1,ALGSTR_1,ALGSTR_0,VECTSP_1,BINOP_1,LATTICES,VECTSP_2,ZFMISC_1,XBOOLE_0,STRUCT_0,POLYNOM1,VALUED_0,SUBSET_1,SUPINF_2,FUNCT_4,PRE_POLY,FUNCT_1,FUNCOP_1,RELAT_1,ORDINAL1,CARD_1,PARTFUN1,POLYNOM2,FINSEQ_1,CARD_3,NUMBERS,XXREAL_0,QC_LANG1,FINSET_1,ORDERS_1,ARYTM_3,NAT_1,MESFUNC1,QUOFIELD,GROUP_1,TARSKI,MSSUBFAM,ALGSEQ_1,CAT_3,XCMPLX_0,ORDINAL4,POLYNOM7;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,FUNCT_1,FINSET_1,ORDINAL1,PARTFUN1,FUNCT_2,FUNCT_7,POLYNOM1,NUMBERS,XXREAL_0,DOMAIN_1,STRUCT_0,ALGSTR_0,FUNCT_4,NAT_1,ALGSTR_1,RLVECT_1,ORDERS_1,FINSEQ_1,FUNCOP_1,GROUP_1,QUOFIELD,GRCAT_1,VECTSP_2,POLYNOM2,VECTSP_1,GROUP_6,PRE_POLY,CKB2,CKB7,CKB14,CKB16,CKB19,CKB20,CKB21,CKB29,CKB31,CKB39,CKB51,CKB52;
definitions FUNCOP_1,STRUCT_0,CKB2,CKB7,CKB14,CKB19,CKB20,CKB21,CKB29,CKB39,CKB51,CKB52;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,STRUCT_0,QUOFIELD,FUNCT_7,FUNCT_4,FUNCOP_1,GRCAT_1,BINOM,FINSEQ_3,RLVECT_1,VECTSP_2,GROUP_1,NAT_1,FINSEQ_2,FINSEQ_5,MATRLIN,POLYNOM2,XBOOLE_0,REALSET1,XREAL_1,GROUP_6,XXREAL_0,ORDINAL1,PARTFUN1,PRE_POLY,CKB2,CKB5,CKB6,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB33,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB55;
schemes FUNCT_2;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XREAL_0,STRUCT_0,VECTSP_1,ALGSTR_1,POLYNOM1,POLYNOM2,ALGSTR_0,CARD_1,SUBSET_1,PRE_POLY,ZFMISC_1,FUNCT_1,CKB1,CKB3,CKB4,CKB8,CKB9,CKB15,CKB17,CKB30,CKB32,CKB34,CKB35,CKB40,CKB53,CKB54;
constructors RFUNCT_3,REALSET2,GRCAT_1,GROUP_6,TRIANG_1,QUOFIELD,POLYNOM2,ALGSTR_1,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1,CKB2,CKB7,CKB14,CKB19,CKB20,CKB21,CKB29,CKB39,CKB51,CKB52;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th27: (for n being Ordinal holds (for L being  add-associative  right_complementable  right_zeroed  left-distributive non  empty doubleLoopStr holds (for p being (Series of n,L) holds (for a being (Element of L) holds ( a * p ) = ( ( a | (n,L) ) *' p )))))
proof
let n being Ordinal;
let L being  add-associative  right_complementable  left-distributive  right_zeroed non  empty doubleLoopStr;
let p being (Series of n,L);
let a being (Element of L);
A1: (for x being set holds (x in ( Bags n ) implies ( ( a * p ) . x ) = ( ( ( a | (n,L) ) *' p ) . x )))
proof
set O = ( a | (n,L) );
set cL = (the carrier of L);
let x being set;
assume x in ( Bags n );
then reconsider b = x as (bag of n);
A2: (for b being (Element of ( Bags n )) holds ( ( ( a | (n,L) ) *' p ) . b ) = ( a * ( p . b ) ))
proof
let b being (Element of ( Bags n ));
consider s being (FinSequence of cL) such that A3: ( ( O *' p ) . b ) = ( Sum s ) and A4: ( len s ) = ( len ( decomp b ) ) and A5: (for k being (Element of ( NAT )) holds (k in ( dom s ) implies (ex b1,b2 being (bag of n) st (( ( decomp b ) /. k ) = <* b1,b2 *> & ( s /. k ) = ( ( O . b1 ) * ( p . b2 ) ))))) by POLYNOM1:def 9;
s is non  empty by A4;
then consider s1 being (Element of cL),t being (FinSequence of cL) such that A6: s1 = ( s . 1 ) and A7: s = ( <* s1 *> ^ t ) by FINSEQ_3:102;
A8: ( Sum s ) = ( ( Sum <* s1 *> ) + ( Sum t ) ) by A7,RLVECT_1:41;
A9:now
per cases ;
suppose t = ( <*> cL );

hence ( Sum t ) = ( 0. L ) by RLVECT_1:43;
end;
suppose A10: t <> ( <*> cL );

now
let k being Nat;
A11: ( len s ) = ( ( len t ) + ( len <* s1 *> ) ) by A7,FINSEQ_1:22
.= ( ( len t ) + 1 ) by FINSEQ_1:39;
assume A12: k in ( dom t );
then A13: ( t /. k ) = ( t . k ) by PARTFUN1:def 6
.= ( s . ( k + 1 ) ) by A7,A12,FINSEQ_3:103;
1 <= k by A12,FINSEQ_3:25;
then A14: 1 < ( k + 1 ) by NAT_1:13;
k <= ( len t ) by A12,FINSEQ_3:25;
then A15: ( k + 1 ) <= ( len s ) by A11,XREAL_1:6;
then A16: ( k + 1 ) in ( dom ( decomp b ) ) by A4,A14,FINSEQ_3:25;
A17: ( dom s ) = ( dom ( decomp b ) ) by A4,FINSEQ_3:29;
then A18: ( s /. ( k + 1 ) ) = ( s . ( k + 1 ) ) by A16,PARTFUN1:def 6;
per cases  by A15,XXREAL_0:1;
suppose A19: ( k + 1 ) < ( len s );

reconsider k1 = k as (Element of ( NAT )) by ORDINAL1:def 12;
consider b1,b2 being (bag of n) such that A20: ( ( decomp b ) /. ( k1 + 1 ) ) = <* b1,b2 *> and A21: ( s /. ( k1 + 1 ) ) = ( ( O . b1 ) * ( p . b2 ) ) by A5,A17,A16;
b1 <> ( EmptyBag n ) by A4,A14,A19,A20,PRE_POLY:72;
hence ( t /. k ) = ( ( 0. L ) * ( p . b2 ) ) by A13,A18,A21,CKB43:1
.= ( 0. L ) by VECTSP_1:7;
end;
suppose A22: ( k + 1 ) = ( len s );

A23:now
assume b = ( EmptyBag n );
then ( decomp b ) = <* <* ( EmptyBag n ),( EmptyBag n ) *> *> by PRE_POLY:73;
then ( ( len t ) + 1 ) = ( ( 0 ) + 1 ) by A4,A11,FINSEQ_1:39;
hence contradiction by A10;
end;
consider b1,b2 being (bag of n) such that A24: ( ( decomp b ) /. ( k + 1 ) ) = <* b1,b2 *> and A25: ( s /. ( k + 1 ) ) = ( ( O . b1 ) * ( p . b2 ) ) by A5,A17,A16;
( ( decomp b ) /. ( len s ) ) = <* b,( EmptyBag n ) *> by A4,PRE_POLY:71;
then (b2 = ( EmptyBag n ) & b1 = b) by A22,A24,FINSEQ_1:77;
then ( s . ( k + 1 ) ) = ( ( 0. L ) * ( p . ( EmptyBag n ) ) ) by A18,A25,A23,CKB43:1
.= ( 0. L ) by VECTSP_1:7;
hence ( t /. k ) = ( 0. L ) by A13;
end;
end;
hence ( Sum t ) = ( 0. L ) by MATRLIN:11;
end;
end;
A26: s is non  empty by A4;
then consider b1,b2 being (bag of n) such that A27: ( ( decomp b ) /. 1 ) = <* b1,b2 *> and A28: ( s /. 1 ) = ( ( O . b1 ) * ( p . b2 ) ) by A5,FINSEQ_5:6;
1 in ( dom s ) by A26,FINSEQ_5:6;
then A29: ( s /. 1 ) = ( s . 1 ) by PARTFUN1:def 6;
( ( decomp b ) /. 1 ) = <* ( EmptyBag n ),b *> by PRE_POLY:71;
then A30: (b2 = b & b1 = ( EmptyBag n )) by A27,FINSEQ_1:77;
( Sum <* s1 *> ) = s1 by RLVECT_1:44
.= ( a * ( p . b ) ) by A6,A28,A30,A29,CKB43:1;
hence thesis by A3,A8,A9,RLVECT_1:4;
end;
b is (Element of ( Bags n )) by PRE_POLY:def 12;
then ( ( O *' p ) . b ) = ( a * ( p . b ) ) by A2
.= ( ( a * p ) . b ) by CKB51:def 1;
hence thesis;
end;
(( Bags n ) = ( dom ( a * p ) ) & ( Bags n ) = ( dom ( ( a | (n,L) ) *' p ) )) by FUNCT_2:def 1;
hence thesis by A1,FUNCT_1:2;
end;
