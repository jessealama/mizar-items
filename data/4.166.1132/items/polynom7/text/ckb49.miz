environ
vocabularies RLVECT_1,ALGSTR_1,ALGSTR_0,VECTSP_1,BINOP_1,LATTICES,VECTSP_2,ZFMISC_1,XBOOLE_0,STRUCT_0,POLYNOM1,VALUED_0,SUBSET_1,SUPINF_2,FUNCT_4,PRE_POLY,FUNCT_1,FUNCOP_1,RELAT_1,ORDINAL1,CARD_1,PARTFUN1,POLYNOM2,FINSEQ_1,CARD_3,NUMBERS,XXREAL_0,QC_LANG1,FINSET_1,ORDERS_1,ARYTM_3,NAT_1,MESFUNC1,QUOFIELD,GROUP_1,TARSKI,MSSUBFAM,ALGSEQ_1,CAT_3,XCMPLX_0,ORDINAL4,POLYNOM7;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,FUNCT_1,FINSET_1,ORDINAL1,PARTFUN1,FUNCT_2,FUNCT_7,POLYNOM1,NUMBERS,XXREAL_0,DOMAIN_1,STRUCT_0,ALGSTR_0,FUNCT_4,NAT_1,ALGSTR_1,RLVECT_1,ORDERS_1,FINSEQ_1,FUNCOP_1,GROUP_1,QUOFIELD,GRCAT_1,VECTSP_2,POLYNOM2,VECTSP_1,GROUP_6,PRE_POLY,CKB2,CKB7,CKB14,CKB16,CKB19,CKB20,CKB21,CKB29,CKB31,CKB39;
definitions FUNCOP_1,STRUCT_0,CKB2,CKB7,CKB14,CKB19,CKB20,CKB21,CKB29,CKB39;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,STRUCT_0,QUOFIELD,FUNCT_7,FUNCT_4,FUNCOP_1,GRCAT_1,BINOM,FINSEQ_3,RLVECT_1,VECTSP_2,GROUP_1,NAT_1,FINSEQ_2,FINSEQ_5,MATRLIN,POLYNOM2,XBOOLE_0,REALSET1,XREAL_1,GROUP_6,XXREAL_0,ORDINAL1,PARTFUN1,PRE_POLY,CKB2,CKB5,CKB6,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB33,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48;
schemes FUNCT_2;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XREAL_0,STRUCT_0,VECTSP_1,ALGSTR_1,POLYNOM1,POLYNOM2,ALGSTR_0,CARD_1,SUBSET_1,PRE_POLY,ZFMISC_1,FUNCT_1,CKB1,CKB3,CKB4,CKB8,CKB9,CKB15,CKB17,CKB30,CKB32,CKB34,CKB35,CKB40;
constructors RFUNCT_3,REALSET2,GRCAT_1,GROUP_6,TRIANG_1,QUOFIELD,POLYNOM2,ALGSTR_1,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1,CKB2,CKB7,CKB14,CKB19,CKB20,CKB21,CKB29,CKB39;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th24: (for n being Ordinal holds (for L being  right_zeroed  add-associative  right_complementable  well-unital  distributive non  trivial doubleLoopStr holds (for c being (ConstPoly of n,L) holds (for x being (Function of n,L) holds ( eval (c,x) ) = ( coefficient c )))))
proof
let n being Ordinal;
let L being  right_zeroed  add-associative  right_complementable  well-unital  distributive non  trivial doubleLoopStr;
let c being (ConstPoly of n,L);
let x being (Function of n,L);
consider y being (FinSequence of (the carrier of L)) such that A1: ( len y ) = ( len ( SgmX (( BagOrder n ),( Support c )) ) ) and A2: ( eval (c,x) ) = ( Sum y ) and A3: (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len y )) implies ( y /. i ) = ( ( ( c * ( SgmX (( BagOrder n ),( Support c )) ) ) /. i ) * ( eval (( ( ( SgmX (( BagOrder n ),( Support c )) ) /. i ) @ ),x) ) ))) by POLYNOM2:def 4;
now
per cases ;
case A4: ( coefficient c ) = ( 0. L );
( Support c ) = ( {} )
proof
set u = the (Element of ( Support c ));
assume A5: ( Support c ) <> ( {} );
then u in ( Support c );
then reconsider u as (Element of ( Bags n ));
( c . u ) <> ( 0. L ) by A5,POLYNOM1:def 3;
then u <> ( EmptyBag n ) by A4,CKB36:1;
then ( c . u ) = ( 0. L ) by CKB29:def 1;
hence thesis by A5,POLYNOM1:def 3;
end;
then reconsider Sc = ( Support c ) as  empty (Subset of ( Bags n ));
( SgmX (( BagOrder n ),Sc) ) = ( {} ) by POLYNOM2:7,POLYNOM2:18;
then y = ( <*> (the carrier of L) ) by A1;
hence thesis by A2,A4,RLVECT_1:43;
end;
case A6: ( coefficient c ) <> ( 0. L );
reconsider sc = ( Support c ) as  finite (Subset of ( Bags n ));
set sg = ( SgmX (( BagOrder n ),sc) );
A7: ( BagOrder n ) linearly_orders sc by POLYNOM2:18;
A8: (for u being set holds (u in ( Support c ) implies u in { ( EmptyBag n ) }))
proof
let u being set;
assume A9: u in ( Support c );
assume A10: (not u in { ( EmptyBag n ) });
reconsider u as (Element of ( Bags n )) by A9;
u <> ( EmptyBag n ) by A10,TARSKI:def 1;
then ( c . u ) = ( 0. L ) by CKB29:def 1;
hence thesis by A9,POLYNOM1:def 3;
end;
(for u being set holds (u in { ( EmptyBag n ) } implies u in ( Support c )))
proof
let u being set;
assume A11: u in { ( EmptyBag n ) };
then A12: u = ( EmptyBag n ) by TARSKI:def 1;
reconsider u as (Element of ( Bags n )) by A11;
( c . u ) <> ( 0. L ) by A6,A12,CKB36:1;
hence thesis by POLYNOM1:def 3;
end;
then ( Support c ) = { ( EmptyBag n ) } by A8,TARSKI:1;
then A13: ( rng sg ) = { ( EmptyBag n ) } by A7,PRE_POLY:def 2;
then A14: ( EmptyBag n ) in ( rng sg ) by TARSKI:def 1;
then A15: 1 in ( dom sg ) by FINSEQ_3:31;
then A16: ( sg . 1 ) in ( rng sg ) by FUNCT_1:3;
A17: (for u being set holds (u in ( dom sg ) implies u in { 1 }))
proof
let u being set;
assume A18: u in ( dom sg );
assume A19: (not u in { 1 });
reconsider u as (Element of ( NAT )) by A18;
( sg /. u ) = ( sg . u ) by A18,PARTFUN1:def 6;
then A20: ( sg /. u ) in ( rng sg ) by A18,FUNCT_1:3;
A21: u <> 1 by A19,TARSKI:def 1;
A22: 1 < u
proof
consider k being Nat such that A23: ( dom sg ) = ( Seg k ) by FINSEQ_1:def 2;
( Seg k ) = { m where m is (Element of ( NAT )): (1 <= m & m <= k) } by FINSEQ_1:def 1;
then (ex m9 being (Element of ( NAT )) st ((m9 = u & 1 <= m9) & m9 <= k)) by A18,A23;
hence thesis by A21,XXREAL_0:1;
end;
( sg /. 1 ) = ( sg . 1 ) by A14,A18,FINSEQ_3:31,PARTFUN1:def 6;
then ( sg /. 1 ) in ( rng sg ) by A15,FUNCT_1:3;
then ( sg /. 1 ) = ( EmptyBag n ) by A13,TARSKI:def 1
.= ( sg /. u ) by A13,A20,TARSKI:def 1;
hence thesis by A7,A15,A18,A22,PRE_POLY:def 2;
end;
(for u being set holds (u in { 1 } implies u in ( dom sg ))) by A15,TARSKI:def 1;
then A24: ( dom sg ) = ( Seg 1 ) by A17,FINSEQ_1:2,TARSKI:1;
then A25: 1 in ( dom sg ) by FINSEQ_1:2,TARSKI:def 1;
( sg /. 1 ) = ( sg . 1 ) by A15,PARTFUN1:def 6;
then ( sg /. 1 ) in ( rng sg ) by A25,FUNCT_1:3;
then A26: ( sg /. 1 ) = ( EmptyBag n ) by A13,TARSKI:def 1;
A27: ( len sg ) = 1 by A24,FINSEQ_1:def 3;
( dom c ) = ( Bags n ) by FUNCT_2:def 1;
then 1 in ( dom ( c * sg ) ) by A13,A15,A16,FUNCT_1:11;
then A28: ( ( c * sg ) /. 1 ) = ( ( c * sg ) . 1 ) by PARTFUN1:def 6
.= ( c . ( sg . 1 ) ) by A15,FUNCT_1:13
.= ( c . ( EmptyBag n ) ) by A13,A16,TARSKI:def 1
.= ( coefficient c ) by CKB36:1;
( dom y ) = ( Seg ( len y ) ) by FINSEQ_1:def 3
.= ( dom sg ) by A1,FINSEQ_1:def 3;
then ( y . 1 ) = ( y /. 1 ) by A25,PARTFUN1:def 6
.= ( ( ( c * sg ) /. 1 ) * ( eval (( ( sg /. 1 ) @ ),x) ) ) by A1,A3,A27
.= ( ( coefficient c ) * ( eval (( EmptyBag n ),x) ) ) by A26,A28,POLYNOM2:def 3
.= ( ( coefficient c ) * ( 1. L ) ) by POLYNOM2:14
.= ( coefficient c ) by VECTSP_1:def 6;
then y = <* ( coefficient c ) *> by A1,A27,FINSEQ_1:40;
hence thesis by A2,RLVECT_1:44;
end;
end;
hence thesis;
end;
