environ
vocabularies RLVECT_1,ALGSTR_1,ALGSTR_0,VECTSP_1,BINOP_1,LATTICES,VECTSP_2,ZFMISC_1,XBOOLE_0,STRUCT_0,POLYNOM1,VALUED_0,SUBSET_1,SUPINF_2,FUNCT_4,PRE_POLY,FUNCT_1,FUNCOP_1,RELAT_1,ORDINAL1,CARD_1,PARTFUN1,POLYNOM2,FINSEQ_1,CARD_3,NUMBERS,XXREAL_0,QC_LANG1,FINSET_1,ORDERS_1,ARYTM_3,NAT_1,MESFUNC1,QUOFIELD,GROUP_1,TARSKI,MSSUBFAM,ALGSEQ_1,CAT_3,XCMPLX_0,ORDINAL4,POLYNOM7;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,FUNCT_1,FINSET_1,ORDINAL1,PARTFUN1,FUNCT_2,FUNCT_7,POLYNOM1,NUMBERS,XXREAL_0,DOMAIN_1,STRUCT_0,ALGSTR_0,FUNCT_4,NAT_1,ALGSTR_1,RLVECT_1,ORDERS_1,FINSEQ_1,FUNCOP_1,GROUP_1,QUOFIELD,GRCAT_1,VECTSP_2,POLYNOM2,VECTSP_1,GROUP_6,PRE_POLY,CKB2,CKB7,CKB14,CKB16,CKB19,CKB20,CKB21,CKB29,CKB31,CKB39,CKB51,CKB52;
definitions FUNCOP_1,STRUCT_0,CKB2,CKB7,CKB14,CKB19,CKB20,CKB21,CKB29,CKB39,CKB51,CKB52;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,STRUCT_0,QUOFIELD,FUNCT_7,FUNCT_4,FUNCOP_1,GRCAT_1,BINOM,FINSEQ_3,RLVECT_1,VECTSP_2,GROUP_1,NAT_1,FINSEQ_2,FINSEQ_5,MATRLIN,POLYNOM2,XBOOLE_0,REALSET1,XREAL_1,GROUP_6,XXREAL_0,ORDINAL1,PARTFUN1,PRE_POLY,CKB2,CKB5,CKB6,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14,CKB18,CKB19,CKB20,CKB21,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB33,CKB36,CKB37,CKB38,CKB39,CKB41,CKB42,CKB43,CKB44,CKB45,CKB46,CKB47,CKB48,CKB49,CKB50,CKB51,CKB52,CKB55,CKB56,CKB57,CKB58,CKB59,CKB60,CKB61,CKB62;
schemes FUNCT_2;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XREAL_0,STRUCT_0,VECTSP_1,ALGSTR_1,POLYNOM1,POLYNOM2,ALGSTR_0,CARD_1,SUBSET_1,PRE_POLY,ZFMISC_1,FUNCT_1,CKB1,CKB3,CKB4,CKB8,CKB9,CKB15,CKB17,CKB30,CKB32,CKB34,CKB35,CKB40,CKB53,CKB54;
constructors RFUNCT_3,REALSET2,GRCAT_1,GROUP_6,TRIANG_1,QUOFIELD,POLYNOM2,ALGSTR_1,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1,CKB2,CKB7,CKB14,CKB19,CKB20,CKB21,CKB29,CKB39,CKB51,CKB52;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
(for n being Ordinal holds (for L being  left_zeroed  right_zeroed  left_add-cancelable  add-associative  right_complementable  well-unital  associative  commutative  distributive  domRing-like non trivial doubleLoopStr holds (for p being (Polynomial of n,L) holds (for a being (Element of L) holds (for x being (Function of n,L) holds ( eval (( p * a ),x) ) = ( ( eval (p,x) ) * a ))))))
proof
let n being Ordinal;
let L being  left_zeroed  right_zeroed  left_add-cancelable  add-associative  right_complementable  well-unital  associative  commutative  distributive  domRing-like non trivial doubleLoopStr;
let p being (Polynomial of n,L);
let a being (Element of L);
let x being (Function of n,L);
consider y being (FinSequence of (the carrier of L)) such that A1: ( len y ) = ( len ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) ) and A2: ( eval (( p * a ),x) ) = ( Sum y ) and A3: (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len y )) implies ( y /. i ) = ( ( ( ( p * a ) * ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) ) /. i ) * ( eval (( ( ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) /. i ) @ ),x) ) ))) by POLYNOM2:def 4;
consider z being (FinSequence of (the carrier of L)) such that A4: ( len z ) = ( len ( SgmX (( BagOrder n ),( Support p )) ) ) and A5: ( eval (p,x) ) = ( Sum z ) and A6: (for i being (Element of ( NAT )) holds ((1 <= i & i <= ( len z )) implies ( z /. i ) = ( ( ( p * ( SgmX (( BagOrder n ),( Support p )) ) ) /. i ) * ( eval (( ( ( SgmX (( BagOrder n ),( Support p )) ) /. i ) @ ),x) ) ))) by POLYNOM2:def 4;
now
per cases ;
case A7: a = ( 0. L );
A8:now
let b being (bag of n);
thus ( ( p * a ) . b ) = ( ( p . b ) * a ) by CKB52:def 1
.= ( 0. L ) by A7,BINOM:2;
end;
A9:now
assume ( Support ( p * a ) ) <> ( {} );
then reconsider sp = ( Support ( p * a ) ) as non empty (Subset of ( Bags n ));
set c = the (Element of sp);
( ( p * a ) . c ) <> ( 0. L ) by POLYNOM1:def 3;
hence contradiction by A8;
end;
( BagOrder n ) linearly_orders ( Support ( p * a ) ) by POLYNOM2:18;
then ( rng ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) ) = ( {} ) by A9,PRE_POLY:def 2;
then ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) = ( {} ) by RELAT_1:41;
then y = ( <*> (the carrier of L) ) by A1;
then ( Sum y ) = ( 0. L ) by RLVECT_1:43
.= ( ( Sum z ) * a ) by A7,BINOM:2;
hence thesis by A2,A5;
end;
case A10: a <> ( 0. L );
A11: (for u being set holds (u in ( Support ( p * a ) ) implies u in ( Support p )))
proof
let u being set;
assume A12: u in ( Support ( p * a ) );
then reconsider u9 = u as (Element of ( Bags n ));
( ( p * a ) . u ) <> ( 0. L ) by A12,POLYNOM1:def 3;
then ( ( p . u9 ) * a ) <> ( 0. L ) by CKB52:def 1;
then ( p . u9 ) <> ( 0. L ) by BINOM:1;
hence thesis by POLYNOM1:def 3;
end;
A13: (for u being set holds (u in ( Support p ) implies u in ( Support ( p * a ) )))
proof
let u being set;
assume A14: u in ( Support p );
then reconsider u9 = u as (Element of ( Bags n ));
( p . u ) <> ( 0. L ) by A14,POLYNOM1:def 3;
then ( ( p . u9 ) * a ) <> ( 0. L ) by A10,VECTSP_2:def 1;
then ( ( p * a ) . u9 ) <> ( 0. L ) by CKB52:def 1;
hence thesis by POLYNOM1:def 3;
end;
then A15: ( len z ) = ( len y ) by A1,A4,A11,TARSKI:1;
then A16: ( dom z ) = ( Seg ( len y ) ) by FINSEQ_1:def 3
.= ( dom y ) by FINSEQ_1:def 3;
A17: ( BagOrder n ) linearly_orders ( Support ( p * a ) ) by POLYNOM2:18;
A18: ( Support ( p * a ) ) = ( Support p ) by A13,A11,TARSKI:1;
now
A19: ( dom ( p * a ) ) = ( Bags n ) by FUNCT_2:def 1;
now
let u being set;
assume u in ( rng ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) );
then u in ( Support ( p * a ) ) by A17,PRE_POLY:def 2;
hence u in ( dom ( p * a ) ) by A19;
end;
then ( rng ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) ) c= ( dom ( p * a ) ) by TARSKI:def 3;
then reconsider r = ( ( p * a ) * ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) ) as FinSequence by FINSEQ_1:16;
(for u being set holds (u in ( rng r ) implies u in (the carrier of L)))
proof
let u being set;
assume u in ( rng r );
then A20: u in ( rng ( p * a ) ) by FUNCT_1:14;
( rng ( p * a ) ) c= (the carrier of L) by RELAT_1:def 19;
hence thesis by A20;
end;
then A21: ( rng r ) c= (the carrier of L) by TARSKI:def 3;
A22: ( dom p ) = ( Bags n ) by FUNCT_2:def 1;
now
let u being set;
assume u in ( rng ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) );
then u in ( Support ( p * a ) ) by A17,PRE_POLY:def 2;
hence u in ( dom p ) by A22;
end;
then ( rng ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) ) c= ( dom p ) by TARSKI:def 3;
then reconsider q = ( p * ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) ) as FinSequence by FINSEQ_1:16;
(for u being set holds (u in ( rng q ) implies u in (the carrier of L)))
proof
let u being set;
assume u in ( rng q );
then A23: u in ( rng p ) by FUNCT_1:14;
( rng p ) c= (the carrier of L) by RELAT_1:def 19;
hence thesis by A23;
end;
then A24: ( rng q ) c= (the carrier of L) by TARSKI:def 3;
reconsider r as (FinSequence of (the carrier of L)) by A21,FINSEQ_1:def 4;
reconsider q as (FinSequence of (the carrier of L)) by A24,FINSEQ_1:def 4;
let i being set;
assume A25: i in ( dom z );
then i in ( Seg ( len z ) ) by FINSEQ_1:def 3;
then i in { k where k is (Element of ( NAT )): (1 <= k & k <= ( len z )) } by FINSEQ_1:def 1;
then consider k being (Element of ( NAT )) such that A26: i = k and A27: (1 <= k & k <= ( len z ));
A28: ( dom z ) = ( Seg ( len ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) ) ) by A1,A16,FINSEQ_1:def 3
.= ( dom ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) ) by FINSEQ_1:def 3;
then ( ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) . k ) = ( ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) /. k ) by A25,A26,PARTFUN1:def 6;
then k in ( dom q ) by A25,A26,A28,A22,FUNCT_1:11;
then A29: ( ( p * ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) ) /. k ) = ( q . k ) by PARTFUN1:def 6
.= ( p . ( ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) . k ) ) by A25,A26,A28,FUNCT_1:13
.= ( p . ( ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) /. k ) ) by A25,A26,A28,PARTFUN1:def 6;
reconsider c = ( ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) /. k ) as (Element of ( Bags n ));
reconsider c as (bag of n);
A30: ( ( z /. k ) * a ) = ( ( ( ( p * ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) ) /. k ) * ( eval (( ( ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) /. k ) @ ),x) ) ) * a ) by A6,A18,A27
.= ( ( ( ( p * ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) ) /. k ) * a ) * ( eval (( ( ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) /. k ) @ ),x) ) ) by GROUP_1:def 3;
A31: ( ( p * a ) . ( ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) /. k ) ) = ( ( p * a ) . c )
.= ( ( ( p * ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) ) /. k ) * a ) by A29,CKB52:def 1;
( ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) . k ) = ( ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) /. k ) by A25,A26,A28,PARTFUN1:def 6;
then k in ( dom r ) by A25,A26,A28,A19,FUNCT_1:11;
then ( ( ( p * a ) * ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) ) /. k ) = ( r . k ) by PARTFUN1:def 6
.= ( ( p * a ) . ( ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) . k ) ) by A25,A26,A28,FUNCT_1:13
.= ( ( ( p * ( SgmX (( BagOrder n ),( Support ( p * a ) )) ) ) /. k ) * a ) by A25,A26,A28,A31,PARTFUN1:def 6;
hence ( y /. i ) = ( ( z /. i ) * a ) by A3,A15,A26,A27,A30;
end;
then y = ( z * a ) by A16,POLYNOM1:def 2;
hence thesis by A2,A5,BINOM:5;
end;
end;
hence thesis;
end;
