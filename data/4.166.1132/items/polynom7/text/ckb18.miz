environ
vocabularies RLVECT_1,ALGSTR_1,ALGSTR_0,VECTSP_1,BINOP_1,LATTICES,VECTSP_2,ZFMISC_1,XBOOLE_0,STRUCT_0,POLYNOM1,VALUED_0,SUBSET_1,SUPINF_2,FUNCT_4,PRE_POLY,FUNCT_1,FUNCOP_1,RELAT_1,ORDINAL1,CARD_1,PARTFUN1,POLYNOM2,FINSEQ_1,CARD_3,NUMBERS,XXREAL_0,QC_LANG1,FINSET_1,ORDERS_1,ARYTM_3,NAT_1,MESFUNC1,QUOFIELD,GROUP_1,TARSKI,MSSUBFAM,ALGSEQ_1,CAT_3,XCMPLX_0,ORDINAL4,POLYNOM7;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,FUNCT_1,FINSET_1,ORDINAL1,PARTFUN1,FUNCT_2,FUNCT_7,POLYNOM1,NUMBERS,XXREAL_0,DOMAIN_1,STRUCT_0,ALGSTR_0,FUNCT_4,NAT_1,ALGSTR_1,RLVECT_1,ORDERS_1,FINSEQ_1,FUNCOP_1,GROUP_1,QUOFIELD,GRCAT_1,VECTSP_2,POLYNOM2,VECTSP_1,GROUP_6,PRE_POLY,CKB2,CKB7,CKB14,CKB16;
definitions FUNCOP_1,STRUCT_0,CKB2,CKB7,CKB14;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,STRUCT_0,QUOFIELD,FUNCT_7,FUNCT_4,FUNCOP_1,GRCAT_1,BINOM,FINSEQ_3,RLVECT_1,VECTSP_2,GROUP_1,NAT_1,FINSEQ_2,FINSEQ_5,MATRLIN,POLYNOM2,XBOOLE_0,REALSET1,XREAL_1,GROUP_6,XXREAL_0,ORDINAL1,PARTFUN1,PRE_POLY,CKB2,CKB5,CKB6,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14;
schemes FUNCT_2;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XREAL_0,STRUCT_0,VECTSP_1,ALGSTR_1,POLYNOM1,POLYNOM2,ALGSTR_0,CARD_1,SUBSET_1,PRE_POLY,ZFMISC_1,FUNCT_1,CKB1,CKB3,CKB4,CKB8,CKB9,CKB15,CKB17;
constructors RFUNCT_3,REALSET2,GRCAT_1,GROUP_6,TRIANG_1,QUOFIELD,POLYNOM2,ALGSTR_1,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1,CKB2,CKB7,CKB14;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
theorem
Th6: (for X being set holds (for L being non  empty ZeroStr holds (for p being (Series of X,L) holds (p is (Monomial of X,L) iff (( Support p ) = ( {} ) or (ex b being (bag of X) st ( Support p ) = { b }))))))
proof
let n being set;
let L being non  empty ZeroStr;
let p being (Series of n,L);
A1:now
assume (ex b being (bag of n) st ( Support p ) = { b });
then consider b being (bag of n) such that A2: ( Support p ) = { b };
(for b9 being (bag of n) holds (b9 <> b implies ( p . b9 ) = ( 0. L )))
proof
let b9 being (bag of n);
assume A3: b9 <> b;
assume A4: ( p . b9 ) <> ( 0. L );
reconsider b9 as (Element of ( Bags n )) by PRE_POLY:def 12;
b9 in ( Support p ) by A4,POLYNOM1:def 3;
hence thesis by A2,A3,TARSKI:def 1;
end;
hence p is (Monomial of n,L) by CKB14:def 1;
end;
A5:now
assume p is (Monomial of n,L);
then consider b being (bag of n) such that A6: (for b9 being (bag of n) holds (b9 <> b implies ( p . b9 ) = ( 0. L ))) by CKB14:def 1;
now
per cases ;
case A7: ( p . b ) <> ( 0. L );
A8: (for u being set holds (u in { b } implies u in ( Support p )))
proof
let u being set;
assume A9: u in { b };
then u = b by TARSKI:def 1;
then reconsider u9 = u as (Element of ( Bags n )) by PRE_POLY:def 12;
( p . u9 ) <> ( 0. L ) by A7,A9,TARSKI:def 1;
hence thesis by POLYNOM1:def 3;
end;
(for u being set holds (u in ( Support p ) implies u in { b }))
proof
let u being set;
assume A10: u in ( Support p );
then reconsider u9 = u as (bag of n);
( p . u ) <> ( 0. L ) by A10,POLYNOM1:def 3;
then u9 = b by A6;
hence thesis by TARSKI:def 1;
end;
then ( Support p ) = { b } by A8,TARSKI:1;
hence (ex b being (bag of n) st ( Support p ) = { b });
end;
case A11: ( p . b ) = ( 0. L );
thus ( Support p ) = ( {} )
proof
assume ( Support p ) <> ( {} );
then reconsider sp = ( Support p ) as non  empty (Subset of ( Bags n ));
set c = the (Element of sp);
( p . c ) <> ( 0. L ) by POLYNOM1:def 3;
hence thesis by A6,A11;
end;

end;
end;
hence (( Support p ) = ( {} ) or (ex b being (bag of n) st ( Support p ) = { b }));
end;
now
set b = the (bag of n);
assume A12: ( Support p ) = ( {} );
(for b9 being (bag of n) holds (b9 <> b implies ( p . b9 ) = ( 0. L )))
proof
let b9 being (bag of n);
assume b9 <> b;
reconsider c = b9 as (Element of ( Bags n )) by PRE_POLY:def 12;
assume ( p . b9 ) <> ( 0. L );
then c in ( Support p ) by POLYNOM1:def 3;
hence thesis by A12;
end;
hence p is (Monomial of n,L) by CKB14:def 1;
end;
hence thesis by A1,A5;
end;
