environ
vocabularies RLVECT_1,ALGSTR_1,ALGSTR_0,VECTSP_1,BINOP_1,LATTICES,VECTSP_2,ZFMISC_1,XBOOLE_0,STRUCT_0,POLYNOM1,VALUED_0,SUBSET_1,SUPINF_2,FUNCT_4,PRE_POLY,FUNCT_1,FUNCOP_1,RELAT_1,ORDINAL1,CARD_1,PARTFUN1,POLYNOM2,FINSEQ_1,CARD_3,NUMBERS,XXREAL_0,QC_LANG1,FINSET_1,ORDERS_1,ARYTM_3,NAT_1,MESFUNC1,QUOFIELD,GROUP_1,TARSKI,MSSUBFAM,ALGSEQ_1,CAT_3,XCMPLX_0,ORDINAL4,POLYNOM7;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,RELSET_1,FUNCT_1,FINSET_1,ORDINAL1,PARTFUN1,FUNCT_2,FUNCT_7,POLYNOM1,NUMBERS,XXREAL_0,DOMAIN_1,STRUCT_0,ALGSTR_0,FUNCT_4,NAT_1,ALGSTR_1,RLVECT_1,ORDERS_1,FINSEQ_1,FUNCOP_1,GROUP_1,QUOFIELD,GRCAT_1,VECTSP_2,POLYNOM2,VECTSP_1,GROUP_6,PRE_POLY,CKB2,CKB7,CKB14,CKB16;
definitions FUNCOP_1,STRUCT_0,CKB2,CKB7,CKB14;
theorems TARSKI,FINSEQ_1,FUNCT_1,FUNCT_2,RELAT_1,ZFMISC_1,VECTSP_1,POLYNOM1,STRUCT_0,QUOFIELD,FUNCT_7,FUNCT_4,FUNCOP_1,GRCAT_1,BINOM,FINSEQ_3,RLVECT_1,VECTSP_2,GROUP_1,NAT_1,FINSEQ_2,FINSEQ_5,MATRLIN,POLYNOM2,XBOOLE_0,REALSET1,XREAL_1,GROUP_6,XXREAL_0,ORDINAL1,PARTFUN1,PRE_POLY,CKB2,CKB5,CKB6,CKB7,CKB10,CKB11,CKB12,CKB13,CKB14;
schemes FUNCT_2;
registrations XBOOLE_0,ORDINAL1,RELSET_1,FUNCOP_1,FINSET_1,XREAL_0,STRUCT_0,VECTSP_1,ALGSTR_1,POLYNOM1,POLYNOM2,ALGSTR_0,CARD_1,SUBSET_1,PRE_POLY,ZFMISC_1,FUNCT_1,CKB1,CKB3,CKB4,CKB8,CKB9,CKB15;
constructors RFUNCT_3,REALSET2,GRCAT_1,GROUP_6,TRIANG_1,QUOFIELD,POLYNOM2,ALGSTR_1,RELSET_1,FUNCT_7,FVSUM_1,VFUNCT_1,CKB2,CKB7,CKB14;
requirements NUMERALS,BOOLE,SUBSET,ARITHM;
begin
registration
let X being set;
let L being non  empty ZeroStr;
cluster  monomial-like ->  finite-Support for (Series of X,L);
coherence
proof
let s being (Series of X,L);
assume s is  monomial-like;
then consider b being (bag of X) such that A1: (for b9 being (bag of X) holds (b9 <> b implies ( s . b9 ) = ( 0. L ))) by CKB14:def 1;
per cases ;
suppose A2: ( s . b ) = ( 0. L );

now
assume ( Support s ) <> ( {} );
then reconsider sp = ( Support s ) as non  empty (Subset of ( Bags X ));
set c = the (Element of sp);
( s . c ) <> ( 0. L ) by POLYNOM1:def 3;
hence contradiction by A1,A2;
end;
hence thesis by POLYNOM1:def 4;
end;
suppose A3: ( s . b ) <> ( 0. L );

A4:now
let u being set;
assume A5: u in ( Support s );
then reconsider u9 = u as (Element of ( Bags X ));
( s . u9 ) <> ( 0. L ) by A5,POLYNOM1:def 3;
then u9 = b by A1;
hence u in { b } by TARSKI:def 1;
end;
now
let u being set;
assume u in { b };
then A6: u = b by TARSKI:def 1;
then reconsider u9 = u as (Element of ( Bags X )) by PRE_POLY:def 12;
u9 in ( Support s ) by A3,A6,POLYNOM1:def 3;
hence u in ( Support s );
end;
then ( Support s ) = { b } by A4,TARSKI:1;
hence thesis by POLYNOM1:def 4;
end;
end;
end;
