environ
vocabularies STRUCT_0,SUBSET_1,MULTOP_1,XBOOLE_0,VECTSP_1,FUNCT_1,NUMBERS,REAL_1,RELAT_1,ARYTM_3,CARD_1,ARYTM_1,MESFUNC1,SUPINF_2,ALGSTR_3;
notations XBOOLE_0,SUBSET_1,NUMBERS,STRUCT_0,REAL_1,MULTOP_1,CKB1,CKB3,CKB4,CKB5,CKB6,CKB8;
definitions STRUCT_0,CKB4,CKB5,CKB6,CKB8;
theorems MULTOP_1,XCMPLX_1,CKB4,CKB5,CKB6,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14,CKB15,CKB16,CKB17;
schemes MULTOP_1;
registrations NUMBERS,MEMBERED,STRUCT_0,CKB1,CKB2,CKB7;
constructors REAL_1,MEMBERED,MULTOP_1,RLVECT_1,CKB1,CKB4,CKB5,CKB6,CKB8;
requirements NUMERALS,SUBSET,ARITHM,BOOLE;
begin
theorem
Lm7: (for a,a9 being (Scalar of ( TernaryFieldEx )) holds (a <> a9 implies (for b,b9 being (Scalar of ( TernaryFieldEx )) holds (ex u,v being (Scalar of ( TernaryFieldEx )) st (( Tern (u,a,v) ) = b & ( Tern (u,a9,v) ) = b9)))))
proof
let a being (Scalar of ( TernaryFieldEx )),a9 being (Scalar of ( TernaryFieldEx ));
assume A1: a <> a9;
let b being (Scalar of ( TernaryFieldEx )),b9 being (Scalar of ( TernaryFieldEx ));
reconsider x = a,x9 = a9,y = b,y9 = b9 as Real;
A2: ( x9 - x ) <> ( 0 ) by A1;
set s = ( ( y9 - y ) / ( x9 - x ) );
set t = ( y - ( x * s ) );
reconsider u = s,v = t as (Scalar of ( TernaryFieldEx ));
take u;
take v;
thus ( Tern (u,a,v) ) = ( ( s * x ) + ( ( - ( s * x ) ) + y ) ) by CKB5:def 1
.= b;
thus ( Tern (u,a9,v) ) = ( ( ( ( y9 - y ) / ( x9 - x ) ) * x9 ) + ( ( - ( x * ( ( y9 - y ) / ( x9 - x ) ) ) ) + y ) ) by CKB5:def 1
.= ( ( ( ( y9 - y ) / ( x9 - x ) ) * ( x9 - x ) ) + y )
.= ( ( y9 - y ) + y ) by A2,XCMPLX_1:87
.= b9;
end;
