environ
vocabularies XBOOLE_0,ALGSTR_0,SUBSET_1,MIDSP_1,PRE_TOPC,FUNCT_1,ZFMISC_1,STRUCT_0,ROBBINS1,ARYTM_3,QC_LANG1,RLVECT_1,SUPINF_2,ARYTM_1,VECTSP_1,RLVECT_2,BINOP_1,MIDSP_2;
notations XBOOLE_0,ZFMISC_1,SUBSET_1,FUNCT_2,BINOP_1,DOMAIN_1,STRUCT_0,ALGSTR_0,PRE_TOPC,RLVECT_1,VECTSP_1,MIDSP_1,CKB1,CKB2,CKB4,CKB5;
definitions STRUCT_0,VECTSP_1,CKB1,CKB2,CKB4,CKB5;
theorems BINOP_1,MIDSP_1,RLVECT_1,VECTSP_1,CKB1,CKB2,CKB3,CKB4,CKB5,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13;
schemes BINOP_1;
registrations XBOOLE_0,RELSET_1,STRUCT_0,VECTSP_1,MIDSP_1;
constructors BINOP_1,DOMAIN_1,VECTSP_1,MIDSP_1,RLVECT_1,CKB1,CKB2,CKB4,CKB5;
requirements SUBSET,BOOLE;
begin
theorem
Th13: (for G being  add-associative  Abelian non empty addLoopStr holds (for x,y,z,t being (Element of G) holds ( ( x + y ) + ( z + t ) ) = ( ( x + z ) + ( y + t ) )))
proof
let G being  add-associative  Abelian non empty addLoopStr;
let x being (Element of G),y being (Element of G),z being (Element of G),t being (Element of G);
thus ( ( x + y ) + ( z + t ) ) = ( x + ( y + ( z + t ) ) ) by RLVECT_1:def 3
.= ( x + ( z + ( y + t ) ) ) by RLVECT_1:def 3
.= ( ( x + z ) + ( y + t ) ) by RLVECT_1:def 3;
end;
