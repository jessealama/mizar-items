environ
vocabularies NUMBERS,XBOOLE_0,PRE_TOPC,METRIC_1,REAL_1,XXREAL_0,CARD_1,ARYTM_3,COMPLEX1,ARYTM_1,SETFAM_1,NATTRA_1,RCOMP_1,SUBSET_1,STRUCT_0,TARSKI,ZFMISC_1,PCOMPS_1,FINSET_1,FUNCT_1,CARD_3,FUNCOP_1,COMPTS_1,RELAT_1,ORDINAL1,RLVECT_3,XREAL_0,CARD_5,NEWTON,FINSEQ_1,PSCOMP_1,ORDINAL2,TOPMETR,TMAP_1,BINOP_1,FUNCT_2,SETWISEO,COH_SP,FINSOP_1,NAT_1,RELAT_2,NAGATA_1;
notations BINOP_1,SETWISEO,TARSKI,XBOOLE_0,SUBSET_1,SETFAM_1,RELAT_1,FUNCT_1,ORDINAL1,COMPLEX1,RELSET_1,FUNCT_2,FINSEQ_1,ZFMISC_1,PCOMPS_1,PRE_TOPC,FINSET_1,CARD_1,XCMPLX_0,NUMBERS,XXREAL_0,XREAL_0,REAL_1,NAT_1,FINSOP_1,VALUED_1,STRUCT_0,TOPS_2,COMPTS_1,METRIC_1,NEWTON,CARD_3,PROB_1,FUNCOP_1,CANTOR_1,DOMAIN_1,TOPMETR,PSCOMP_1,BORSUK_1,TMAP_1,CKB3;
definitions PCOMPS_1,TARSKI,BINOP_1,SUBSET_1,COMPTS_1,PRE_TOPC,STRUCT_0,CKB3;
theorems FUNCT_1,FUNCT_2,METRIC_1,XREAL_0,XCMPLX_1,ABSVALUE,TOPMETR,TMAP_1,CARD_1,PCOMPS_1,PCOMPS_2,BORSUK_1,XBOOLE_1,TARSKI,SETFAM_1,XBOOLE_0,SUBSET_1,TOPS_1,TOPS_2,PRE_TOPC,REALSET1,COMPTS_1,CARD_3,URYSOHN1,NAT_1,YELLOW_9,FINSEQ_1,CARD_2,FINSOP_1,SETWISEO,NEWTON,TOPREAL6,ZFMISC_1,BINOP_1,SEQ_2,PROB_1,FUNCOP_1,XREAL_1,COMPLEX1,XXREAL_0,PREPOWER,ORDINAL1,VALUED_1,CKB1,CKB2,CKB3,CKB6,CKB7,CKB8,CKB9,CKB10,CKB11,CKB12,CKB13,CKB14;
schemes FUNCT_1,FRAENKEL,FUNCT_2,NAT_1;
registrations XBOOLE_0,SUBSET_1,ORDINAL1,RELSET_1,FINSET_1,NUMBERS,XXREAL_0,XREAL_0,NAT_1,MEMBERED,FINSEQ_1,CARD_LAR,STRUCT_0,TOPS_1,COMPTS_1,METRIC_1,BORSUK_1,TOPMETR,PSCOMP_1,VALUED_0,VALUED_1,FUNCT_2,CARD_3,FUNCT_1,PRE_TOPC,ZFMISC_1,CKB4,CKB5;
constructors SETFAM_1,SETWISEO,REAL_1,SQUARE_1,NAT_1,PROB_1,FUNCOP_1,FINSOP_1,NEWTON,REALSET1,CARD_5,TOPS_2,COMPTS_1,TMAP_1,CANTOR_1,PCOMPS_1,PSCOMP_1,URYSOHN3,CKB3;
requirements NUMERALS,REAL,BOOLE,SUBSET,ARITHM;
begin
reserve T for non empty TopSpace;
reserve A for (Subset of T);
reserve B for (Subset of T);
reserve C for (Subset of T);
reserve D for (Subset of T);
reserve O for  open (Subset of T);
reserve p for (Point of T);
registration
let T;
let F being  discrete (Subset-Family of T);
cluster ( clf F ) ->  discrete;
coherence
proof
thus ( clf F ) is  discrete
proof
let p;
consider O such that A1: p in O and A2: (for A holds (for B holds ((A in F & B in F) implies ((O meets A & O meets B) implies A = B)))) by CKB3:def 1;
now
let A;
let B;
assume that
A3: A in ( clf F )
and
A4: B in ( clf F );
consider C such that A5: A = ( Cl C ) and A6: C in F by A3,PCOMPS_1:def 2;
assume that
A7: O meets A
and
A8: O meets B;
consider D such that A9: B = ( Cl D ) and A10: D in F by A4,PCOMPS_1:def 2;
A11: O meets D by A9,A8,CKB14:1;
O meets C by A5,A7,CKB14:1;
hence A = B by A2,A5,A6,A9,A10,A11;
end;
hence thesis by A1;
end;

end;
end;
