environ
vocabularies XBOOLE_0,ORDERS_2,CAT_1,STRUCT_0,YELLOW_0,SUBSET_1,TARSKI,XXREAL_0,RELAT_1,ARYTM_0,WELLORD1,FUNCOP_1,WAYBEL_3,RELAT_2,SEQM_3,FUNCT_1,WAYBEL_1,BINOP_1,WAYBEL_0,ORDINAL2,GROUP_6,YELLOW_1,FUNCT_2,NEWTON,CARD_3,RLVECT_2,REWRITE1,UNIALG_2,ZFMISC_1,LATTICE3,LATTICES,EQREL_1,WAYBEL10;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,CARD_3,FUNCOP_1,STRUCT_0,TMAP_1,QUANTAL1,PRALG_1,WELLORD1,ORDERS_2,LATTICE3,ORDERS_3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,WAYBEL_1,WAYBEL_3,YELLOW_7,CKB8,CKB23,CKB29,CKB35,CKB36,CKB38,CKB42,CKB43;
definitions TARSKI,XBOOLE_0,RELAT_1,QUANTAL1,ORDERS_2,ORDERS_3,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_2,WAYBEL_1,WAYBEL_3,STRUCT_0,CKB23,CKB29,CKB38,CKB42,CKB43;
theorems FUNCT_1,FUNCT_2,YELLOW_0,YELLOW_1,WAYBEL_1,FUNCOP_1,RELSET_1,SYSREL,ORDERS_2,LATTICE3,YELLOW_2,WAYBEL_0,ZFMISC_1,TARSKI,YELLOW_7,RELAT_1,XBOOLE_0,XBOOLE_1,ORDERS_1,TMAP_1,CKB5,CKB6,CKB7,CKB14,CKB16,CKB17,CKB18,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB38,CKB39,CKB40,CKB42,CKB43,CKB45,CKB46,CKB48,CKB49,CKB51,CKB52,CKB53,CKB54;
schemes YELLOW_0,FUNCT_2,XBOOLE_0,CKB1,CKB2,CKB3,CKB4;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,WAYBEL_1,RELSET_1,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB19,CKB21,CKB31,CKB32,CKB33,CKB34,CKB37,CKB41,CKB44,CKB47,CKB50,CKB55,CKB56;
constructors TOLER_1,BORSUK_1,PRALG_1,QUANTAL1,ORDERS_3,WAYBEL_1,WAYBEL_3,TMAP_1,CKB8,CKB23,CKB29,CKB38,CKB42,CKB43;
requirements SUBSET,BOOLE;
begin
definition
let L being non empty  reflexive RelStr;
func DsupClOpers L -> non empty  full  strict (SubRelStr of ( ClOpers L ))
means
:Def7: (for f being  closure (Function of L,L) holds (f is (Element of it) iff f is  directed-sups-preserving));
existence
proof
defpred P[ set ]
 means
$1 is  directed-sups-preserving  directed-sups-preserving (Function of L,L);
set h = the  directed-sups-preserving  closure (Function of L,L);
h is (Element of ( ClOpers L )) by CKB23:def 1;
then A1: h in (the carrier of ( ClOpers L ));
A2: P[ h ];
consider S being non empty  full  strict (SubRelStr of ( ClOpers L )) such that A3: (for f being (Element of ( ClOpers L )) holds (f is (Element of S) iff P[ f ])) from CKB1:sch 1(A2,A1);
take S;
let f being  closure (Function of L,L);
hereby
assume A4: f is (Element of S);
then f is (Element of ( ClOpers L )) by YELLOW_0:58;
hence f is  directed-sups-preserving by A3,A4;
end;
assume A5: f is  directed-sups-preserving;
f is (Element of ( ClOpers L )) by CKB23:def 1;
hence thesis by A3,A5;
end;
correctness
proof
defpred P[ set ]
 means
$1 is  directed-sups-preserving  closure  directed-sups-preserving  closure (Function of L,L);
let S1 being non empty  full  strict (SubRelStr of ( ClOpers L )),S2 being non empty  full  strict (SubRelStr of ( ClOpers L ));
assume that
A6: (for f being  closure (Function of L,L) holds (f is (Element of S1) iff f is  directed-sups-preserving))
and
A7: (for f being  closure (Function of L,L) holds (f is (Element of S2) iff f is  directed-sups-preserving));
A8:now
let f being set;
(f is (Element of S2) implies f is (Element of ( ClOpers L ))) by YELLOW_0:58;
then (f is (Element of S2) implies f is  closure  closure (Function of L,L)) by CKB24:1;
hence (f is (Element of S2) iff P[ f ]) by A7;
end;
A9:now
let f being set;
(f is (Element of S1) implies f is (Element of ( ClOpers L ))) by YELLOW_0:58;
then (f is (Element of S1) implies f is  closure  closure (Function of L,L)) by CKB24:1;
hence (f is (Element of S1) iff P[ f ]) by A6;
end;
( the RelStr of S1 ) = ( the RelStr of S2 ) from CKB3:sch 1(A9,A8);
hence thesis;
end;
end;
