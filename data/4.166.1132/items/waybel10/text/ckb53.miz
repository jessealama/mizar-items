environ
vocabularies XBOOLE_0,ORDERS_2,CAT_1,STRUCT_0,YELLOW_0,SUBSET_1,TARSKI,XXREAL_0,RELAT_1,ARYTM_0,WELLORD1,FUNCOP_1,WAYBEL_3,RELAT_2,SEQM_3,FUNCT_1,WAYBEL_1,BINOP_1,WAYBEL_0,ORDINAL2,GROUP_6,YELLOW_1,FUNCT_2,NEWTON,CARD_3,RLVECT_2,REWRITE1,UNIALG_2,ZFMISC_1,LATTICE3,LATTICES,EQREL_1,WAYBEL10;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,CARD_3,FUNCOP_1,STRUCT_0,TMAP_1,QUANTAL1,PRALG_1,WELLORD1,ORDERS_2,LATTICE3,ORDERS_3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,WAYBEL_1,WAYBEL_3,YELLOW_7,CKB8,CKB23,CKB29,CKB35,CKB36,CKB38,CKB42,CKB43;
definitions TARSKI,XBOOLE_0,RELAT_1,QUANTAL1,ORDERS_2,ORDERS_3,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_2,WAYBEL_1,WAYBEL_3,STRUCT_0,CKB23,CKB29,CKB38,CKB42,CKB43;
theorems FUNCT_1,FUNCT_2,YELLOW_0,YELLOW_1,WAYBEL_1,FUNCOP_1,RELSET_1,SYSREL,ORDERS_2,LATTICE3,YELLOW_2,WAYBEL_0,ZFMISC_1,TARSKI,YELLOW_7,RELAT_1,XBOOLE_0,XBOOLE_1,ORDERS_1,TMAP_1,CKB5,CKB6,CKB7,CKB14,CKB16,CKB17,CKB18,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28,CKB29,CKB30,CKB38,CKB39,CKB40,CKB42,CKB43,CKB45,CKB46,CKB48,CKB49,CKB51,CKB52;
schemes YELLOW_0,FUNCT_2,XBOOLE_0,CKB1,CKB2,CKB3,CKB4;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,WAYBEL_1,RELSET_1,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB19,CKB21,CKB31,CKB32,CKB33,CKB34,CKB37,CKB41,CKB44,CKB47,CKB50;
constructors TOLER_1,BORSUK_1,PRALG_1,QUANTAL1,ORDERS_3,WAYBEL_1,WAYBEL_3,TMAP_1,CKB8,CKB23,CKB29,CKB38,CKB42,CKB43;
requirements SUBSET,BOOLE;
begin
theorem
Th25: (for L being  complete LATTICE holds (for S being  closure (System of L) holds (( closure_op S ) is  directed-sups-preserving iff S is  directed-sups-inheriting)))
proof
let L being  complete LATTICE;
let S being  closure (System of L);
set c = ( closure_op S );
A1: ( Image c ) = ( the RelStr of S ) by CKB45:1;
hereby
set Lk = { k where k is (Element of L): ( c . k ) <= k };
set k = the (Element of L);
A2: Lk c= (the carrier of L)
proof
let x being set;
assume x in Lk;
then (ex k being (Element of L) st (x = k & ( c . k ) <= k));
hence thesis;
end;
( c . ( c . k ) ) = ( c . k ) by YELLOW_2:18;
then A3: ( c . k ) in Lk;
assume ( closure_op S ) is  directed-sups-preserving;
then A4: ( Image c ) is  directed-sups-inheriting by A3,A2,WAYBEL_1:52;
thus S is  directed-sups-inheriting
proof
let X being  directed (Subset of S);
assume that
A5: X <> ( {} )
and
A6:  ex_sup_of X,L;
reconsider Y = X as (Subset of ( Image c )) by A1;
Y is  directed by A1,WAYBEL_0:3;
hence thesis by A1,A4,A5,A6,WAYBEL_0:def 4;
end;

end;
assume A7: (for X being  directed (Subset of S) holds ((X <> ( {} ) &  ex_sup_of X,L) implies ( "\/" (X,L) ) in (the carrier of S)));
let X being (Subset of L);
assume that
A8: X is non empty  directed;
( rng c ) = (the carrier of S) by A1,YELLOW_0:def 15;
then reconsider Y = ( c .: X ) as (Subset of S) by RELAT_1:111;
assume  ex_sup_of X,L;
thus  ex_sup_of ( c .: X ),L by YELLOW_0:17;
( c .: X ) is_<=_than ( c . ( sup X ) )
proof
let x being (Element of L);
assume x in ( c .: X );
then consider a being set such that A9: a in (the carrier of L) and A10: a in X and A11: x = ( c . a ) by FUNCT_2:64;
reconsider a as (Element of L) by A9;
a <= ( sup X ) by A10,YELLOW_2:22;
hence thesis by A11,WAYBEL_1:def 2;
end;
then A12: ( sup ( c .: X ) ) <= ( c . ( sup X ) ) by YELLOW_0:32;
X is_<=_than ( sup ( c .: X ) )
proof
let x being (Element of L);
assume x in X;
then ( c . x ) in ( c .: X ) by FUNCT_2:35;
then A13: ( c . x ) <= ( sup ( c .: X ) ) by YELLOW_2:22;
x <= ( c . x ) by CKB16:1;
hence thesis by A13,ORDERS_2:3;
end;
then A14: ( sup X ) <= ( sup ( c .: X ) ) by YELLOW_0:32;
set x = the (Element of X);
x in X by A8;
then A15: ( c . x ) in ( c .: X ) by FUNCT_2:35;
Y is  directed by A8,CKB52:1,YELLOW_2:15;
then ( sup ( c .: X ) ) in (the carrier of S) by A7,A15,YELLOW_0:17;
then (ex a being (Element of L) st ( c . a ) = ( sup ( c .: X ) )) by A1,YELLOW_2:10;
then ( c . ( sup ( c .: X ) ) ) = ( sup ( c .: X ) ) by YELLOW_2:18;
then ( c . ( sup X ) ) <= ( sup ( c .: X ) ) by A14,WAYBEL_1:def 2;
hence thesis by A12,ORDERS_2:2;
end;
