environ
vocabularies XBOOLE_0,ORDERS_2,CAT_1,STRUCT_0,YELLOW_0,SUBSET_1,TARSKI,XXREAL_0,RELAT_1,ARYTM_0,WELLORD1,FUNCOP_1,WAYBEL_3,RELAT_2,SEQM_3,FUNCT_1,WAYBEL_1,BINOP_1,WAYBEL_0,ORDINAL2,GROUP_6,YELLOW_1,FUNCT_2,NEWTON,CARD_3,RLVECT_2,REWRITE1,UNIALG_2,ZFMISC_1,LATTICE3,LATTICES,EQREL_1,WAYBEL10;
notations TARSKI,XBOOLE_0,ZFMISC_1,SUBSET_1,RELAT_1,FUNCT_1,RELSET_1,FUNCT_2,CARD_3,FUNCOP_1,STRUCT_0,TMAP_1,QUANTAL1,PRALG_1,WELLORD1,ORDERS_2,LATTICE3,ORDERS_3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,WAYBEL_1,WAYBEL_3,YELLOW_7,CKB8,CKB23;
definitions TARSKI,XBOOLE_0,RELAT_1,QUANTAL1,ORDERS_2,ORDERS_3,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_2,WAYBEL_1,WAYBEL_3,STRUCT_0,CKB23;
theorems FUNCT_1,FUNCT_2,YELLOW_0,YELLOW_1,WAYBEL_1,FUNCOP_1,RELSET_1,SYSREL,ORDERS_2,LATTICE3,YELLOW_2,WAYBEL_0,ZFMISC_1,TARSKI,YELLOW_7,RELAT_1,XBOOLE_0,XBOOLE_1,ORDERS_1,TMAP_1,CKB5,CKB6,CKB7,CKB14,CKB16,CKB17,CKB18,CKB20,CKB22,CKB23,CKB24,CKB25,CKB26,CKB27,CKB28;
schemes YELLOW_0,FUNCT_2,XBOOLE_0,CKB1,CKB2,CKB3,CKB4;
registrations XBOOLE_0,RELAT_1,FUNCT_1,FUNCT_2,FUNCOP_1,STRUCT_0,LATTICE3,YELLOW_0,WAYBEL_0,YELLOW_1,YELLOW_2,WAYBEL_1,RELSET_1,CKB9,CKB10,CKB11,CKB12,CKB13,CKB15,CKB19,CKB21;
constructors TOLER_1,BORSUK_1,PRALG_1,QUANTAL1,ORDERS_3,WAYBEL_1,WAYBEL_3,TMAP_1,CKB8,CKB23;
requirements SUBSET,BOOLE;
begin
definition
let L being RelStr;
func Sub L ->  strict non empty RelStr
means
:Def3: ((for x being set holds (x is (Element of it) iff x is  strict  strict (SubRelStr of L))) & (for a,b being (Element of it) holds (a <= b iff (ex R being RelStr st (b = R & a is (SubRelStr of R))))));
existence
proof
set X = { RelStr (# A,B #) where A is (Subset of L),B is (Relation of A,A): B c= (the InternalRel of L) };
A1: (the InternalRel of ( subrelstr ( {} L ) )) c= (the InternalRel of L) by YELLOW_0:def 13;
(the carrier of ( subrelstr ( {} L ) )) = ( {} L ) by YELLOW_0:def 15;
then ( subrelstr ( {} L ) ) in X by A1;
then reconsider X as non empty set;
defpred P[ set,set ]
 means
(ex R being RelStr st ($2 = R & $1 is (SubRelStr of R)));
consider S being  strict non empty RelStr such that A2: (the carrier of S) = X and A3: (for a,b being (Element of S) holds (a <= b iff P[ a,b ])) from YELLOW_0:sch 1;
take S;
hereby
let x being set;
hereby
assume x is (Element of S);
then x in X by A2;
then (ex A being (Subset of L) st (ex B being (Relation of A,A) st (x = RelStr (# A,B #) & B c= (the InternalRel of L))));
hence x is  strict  strict (SubRelStr of L) by YELLOW_0:def 13;
end;
assume x is  strict  strict (SubRelStr of L);
then reconsider R = x as  strict (SubRelStr of L);
A4: (the InternalRel of R) c= (the InternalRel of L) by YELLOW_0:def 13;
(the carrier of R) c= (the carrier of L) by YELLOW_0:def 13;
then R in X by A4;
hence x is (Element of S) by A2;
end;
thus thesis by A3;
end;
correctness
proof
defpred Q[ set,set ]
 means
(ex R being RelStr st ($2 = R & $1 is (SubRelStr of R)));
defpred P[ set ]
 means
$1 is  strict  strict (SubRelStr of L);
let S1 being non empty  strict RelStr,S2 being non empty  strict RelStr;
assume that
A5: (for x being set holds (x is (Element of S1) iff P[ x ]))
and
A6: (for a,b being (Element of S1) holds (a <= b iff Q[ a,b ]))
and
A7: (for x being set holds (x is (Element of S2) iff P[ x ]))
and
A8: (for a,b being (Element of S2) holds (a <= b iff Q[ a,b ]));
( the RelStr of S1 ) = ( the RelStr of S2 ) from CKB2:sch 1(A5,A7,A6,A8);
hence thesis;
end;
end;
