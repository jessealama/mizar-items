stylesheet "1.0";
import "utils/die.xsl";
output method="xml" indent="yes";

tpl [/] {
  if [Text-Proper] {
    apply [Text-Proper];
  } else {
    msg terminate="yes" "Error: the Text-Proper document element is missing.";
  }
}

// By default, copy
tpl [*] {
  $n = `name (.)`;
  <$n {
    for-each [@*] { copy-of `.`; }
    apply [*];
  }
}

tpl [Item[@kind = "Reservation"]] {
  // ignore
}

tpl [Implicitly-Qualified-Segment] {
  for-each [Variable[@spelling]] {
    $spelling = `@spelling`;
    $earlier = `preceding::Variable[@spelling = $spelling and parent::Variables[parent::Item[@kind = "Reservation"]]][1]`;
    if [not($earlier)] {
      die (#message = `concat ("There is no previously reserved variable with idnr = ", $idnr, ".")`);
    }
    <Explicitly-Qualified-Segment {
      for-each [$earlier] {
        <Variables {
          apply [.];
        }
        for-each [parent::Variables] {
          for-each [parent::Item[@kind = "Reservation"]] {
            if [SetMember] {
              for-each [SetMember[1]] {
                apply [preceding-sibling::*[1]];
              }
            } else {
              apply [*[position() = last()]];
            }
          }
        }
      }
    }
  }
}

tpl [Simple-Fraenkel-Term[Implicitly-Qualified-Segment]] {
  <Fraenkel-Term {
    apply [Implicitly-Qualified-Segment];
    for-each [Implicitly-Qualified-Segment[position() = last()]] {
      apply [following-sibling::*[1]];
    }
    <Negated-Formula {
      <Contradiction;
    }
  }
}